push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
outsl
in
inc
push
jg
and
jne
push
mov
mov
jl
and
leave
mov
in
cs
mov
mov
ds
push
nop
or
jp
insl
adc
lods
imul
jmp
ja
shrb
dec
mov
idiv
fidivrl
jecxz
out
push
aad
dec
add
daa
clc
cltd
lahf
or
jae
sbb
popa
movsl
or
bound
pop
lods
popa
push
mov
jg
shll
sbb
sbb
adc
orl
and
call
aam
xchg
ds
and
rorl
pusha
mov
jb
pop
sub
inc
ret
push
mov
jnp
mov
fnstenv
imull
fmuls
je
fldenv
dec
inc
iret
inc
push
mov
imul
lcall
sbb
jno
psllw
cmpsb
mov
ret
popa
movsl
dec
dec
leave
pusha
enter
and
dec
stos
inc
cltd
mov
dec
in
lret
jle
push
add
or
pop
sbb
iret
lock
mov
ljmp
xchg
xor
lahf
aaa
dec
inc
int3
inc
mov
push
jo
xchg
js
pusha
test
arpl
loopne
push
arpl
sub
mov
pop
jo
jg
and
xor
mov
jmp
movsl
je
imul
addl
adc
lods
lods
mov
jle
inc
popa
insb
push
outsl
inc
inc
fisttpl
stos
jbe
cmpl
push
xchg
pop
sbb
mov
sbb
out
inc
and
idivl
xchg
lret
jne
sub
out
inc
inc
scas
in
sub
cwtl
jmp
ds
das
ja
test
push
mov
pop
fdivrs
pop
sub
push
loopne
jne
sbb
cmp
xlat
push
pop
xchg
std
hlt
imul
push
data16
jle
fidivs
adc
sub
sub
dec
jge
xchg
lock
rol
inc
dec
filds
xchg
or
mov
loopne
push
rorl
imul
mov
mov
xchg
push
add
scas
out
test
push
push
incb
push
xchg
mov
sub
rcrb
cmp
push
loope
pop
mov
adc
out
cmpsl
movsb
repnz
pop
fisubrl
scas
pop
pop
lret
jle
fwait
jns
icebp
or
ljmp
xchg
and
pop
cmpsb
movsl
adc
mov
xchg
js
in
inc
jp
inc
ret
adc
jns
jmp
in
test
es
test
aad
leave
jp
dec
pusha
sti
rcrb
push
frstor
iret
sahf
dec
dec
shrl
popa
out
fcomip
roll
and
jo
lods
pusha
ljmp
xlat
stos
lods
out
out
test
push
lcall
push
fwait
mov
test
inc
loope
cmp
lret
sub
int3
insl
adc
and
outsl
push
jl
dec
mov
or
ljmp
psubb
incb
adc
and
dec
dec
dec
adc
and
es
fdivr
pop
xor
jnp
push
vunpckhps
sbb
out
je
mov
adc
ss
in
notl
in
iret
mov
xor
lds
stos
xchg
popa
lods
xlat
push
imul
jno
test
nop
push
pop
cmp
sbb
adc
adc
and
inc
scas
xchg
ljmp
stos
rorb
xchg
loope
push
inc
int3
jmp
jp
xor
aam
mov
dec
jne
inc
jle
push
fcmove
pop
xchg
mov
inc
jecxz
sub
sub
gs
sahf
andb
cmp
jbe
aam
cli
xor
mov
push
adc
xor
test
negl
push
push
sub
lahf
mov
out
dec
mov
idivl
inc
push
in
out
cmpsl
jno
popa
pop
xor
add
dec
sbb
lret
push
mov
xchg
jno
lcall
aaa
fcoml
xchg
sub
sub
lret
cli
lea
cmp
lods
scas
rolb
test
xchg
cli
test
jecxz
pop
int3
test
loopne
cltd
mov
adc
mov
sbbb
shr
lock
sub
call
lret
inc
jae
scas
mov
add
xlat
pushl
mov
rdmsr
inc
push
lret
and
push
mov
lcall
or
dec
ret
jge
inc
xor
insl
cmpsl
int
or
lods
push
inc
das
sbb
inc
out
stos
add
cli
pop
loope
mov
repnz
je
fsubp
mov
push
xor
lahf
pop
pop
sbb
ss
cmp
push
add
cmp
dec
mov
imul
pop
adc
loope
lcall
push
in
sub
cli
insl
int3
repnz
mov
insl
sbb
lcall
jns
out
sti
icebp
pop
jbe
ljmp
cmp
mov
sub
cmp
adc
lahf
fstp
jns
xchg
icebp
addr16
push
sub
js
dec
out
loop
out
xchg
ret
pop
cmp
shlb
fnstsw
lods
dec
dec
gs
jns
sbb
mov
mov
jnp
sbb
cld
adc
push
push
mov
xchg
in
popa
jo
sub
sub
pushf
loopne
inc
inc
xor
push
cmpsl
mov
test
push
sub
cmp
test
dec
push
sarb
xor
ds
push
sub
push
mov
sbb
jge
sbb
lds
stos
sub
sub
sbb
mov
popa
xor
outsl
or
fists
pushf
dec
push
push
dec
mov
inc
pop
mov
repnz
into
aas
add
ljmp
mov
leave
loopne
add
xchg
in
popf
std
lret
jl
stos
push
test
ljmp
and
shr
cmp
adc
xor
fwait
fwait
ret
cltd
decb
imul
inc
pop
rcrl
repnz
jp
cwtl
mov
nop
cmpsb
je
test
cli
outsl
popa
or
mov
adc
cld
lcall
adcl
xchg
jg
rcrb
std
inc
jbe
fdivrl
cmpsl
sbb
jno
inc
or
xor
dec
das
cltd
lea
outsl
stos
sbb
es
lock
sbb
lods
outsb
xchg
adc
in
dec
push
pop
jp
pop
lds
add
push
mov
negl
nop
jp
jno
fcomi
mov
in
inc
adc
fwait
cwtl
inc
inc
gs
and
lods
sbb
or
sbbb
pop
mov
jecxz
cltd
mov
xor
aas
and
iret
fwait
mov
sbb
push
jmp
repnz
sti
loop
or
jmp
push
sahf
lea
out
js
icebp
push
movsb
cmc
sbb
dec
lock
adc
dec
je
icebp
lods
push
sub
jns
pop
dec
loope
jbe
movsb
dec
pop
adc
jnp
mov
pop
out
push
mov
adc
lret
pop
scas
add
lahf
imul
sub
outsb
mov
pusha
or
jnp
lods
push
fdivp
sub
xchg
add
testl
add
bound
mov
daa
dec
icebp
jecxz
jbe
out
test
push
jae
arpl
stos
inc
insb
jns
cmp
jnp
ds
mov
fprem1
fsubs
add
and
gs
sub
loop
daa
and
push
es
mov
unpcklps
fildl
jl
cld
incb
fs
arpl
xchg
mov
insb
mov
in
clc
xchg
mov
shrb
fidivl
imul
cmp
lret
xchg
idivl
ficoml
cltd
lods
bnd
std
cmp
push
mov
push
callw
jle
orl
jns
jne
mov
jb
dec
push
inc
stos
outsb
mov
or
sub
mov
ret
shrb
and
cld
iret
lds
inc
aam
lea
pop
sub
cmpsb
aam
dec
out
cmpsl
aam
mov
jge
loope
in
test
xchg
or
loop
mov
xor
dec
loope
push
mov
xchg
cmp
cs
xor
xchg
adc
cli
mov
fistl
mov
inc
sub
pop
sbb
push
lea
iret
xor
lret
cwtl
shrl
or
scas
dec
mov
inc
je
loop
xor
and
clc
sub
sub
or
dec
xchg
ljmp
bt
or
mov
xor
fwait
mov
xchg
inc
mov
cmp
mov
xor
xchg
idivb
loopne
psraw
dec
iret
dec
out
shlb
out
mov
push
dec
and
cs
popf
iret
cmpsl
lret
pop
fcompl
or
and
ficoms
xchg
mov
sub
lret
dec
pop
push
mov
je
lret
pop
add
call
testl
xor
insb
jp
pop
xchg
mov
fnstenv
pop
nop
out
cmp
into
pop
and
dec
dec
jle
popa
mov
jl
fcompl
sbb
std
sub
fmuls
sbb
mov
outsl
push
lret
scas
push
xchg
push
sbb
xchg
insb
xchg
fs
mov
push
in
sub
lock
add
mov
imul
mov
icebp
scas
pop
xchg
xchg
movsl
insl
xchg
ljmp
xchg
push
inc
scas
mov
out
xor
testl
push
mov
addl
xchg
scas
dec
adc
dec
mov
jae
xor
sbb
les
push
cli
jns
xchg
cs
dec
push
pop
insl
jns
out
cmp
jae
adc
or
xor
jl
les
push
add
imul
sub
lds
jge
mov
dec
and
or
sub
and
fs
sub
mov
mov
arpl
dec
cmpsb
leave
jg
add
jg
ljmp
add
rolb
enter
lea
pop
adc
incl
stc
mov
loopne
testl
sub
daa
out
dec
cmpsl
out
daa
sti
out
icebp
iret
insb
in
or
pop
push
in
cwtl
xor
or
ljmp
inc
dec
inc
in
fwait
or
in
lret
push
gs
and
out
out
faddl
std
js
mov
std
xor
fstpl
gs
testl
jg
aaa
repnz
inc
outsb
aas
shrl
sti
je
sub
jnp
test
out
shr
and
and
leave
mov
xlat
inc
adc
push
adc
je
sti
popf
ret
push
paddb
or
sbb
add
ljmp
pop
les
inc
sub
test
iret
int
sar
or
movsb
daa
or
and
insb
mov
outsl
shll
cmc
xchg
cmp
lods
aaa
mov
cmpsb
jb
sub
lret
or
int
scas
cmp
push
out
and
pusha
push
rcrl
mov
mov
dec
jl
push
and
jb
loope
cmp
cmc
ja
xor
stc
popf
pop
mov
stc
mov
or
loop
out
push
into
sub
xchg
push
pop
mov
and
sub
ljmp
mov
fildll
jp
inc
mov
pop
out
inc
cmpsb
adc
inc
into
add
lods
pop
out
jge
leave
xchg
into
mov
std
mov
fidivl
mov
aaa
jo
mov
rorl
bound
out
xchg
idivb
push
lret
dec
fldcw
pop
sbb
outsl
sahf
out
xchg
sbb
pop
add
or
add
push
push
mov
fidivs
adcb
cmpsb
mov
test
jmp
stc
pop
faddp
popa
adc
and
push
out
push
jg
loop
pop
dec
call
bound
std
rep
xchg
imull
dec
sbb
sub
int
adc
mov
lahf
dec
int
jle
loop
inc
pop
lock
xchg
cmp
jo
mull
jnp
ljmp
pusha
xchg
pop
mov
lock
incb
push
xor
les
adc
and
push
fsts
push
pop
adc
fbstp
loop
out
inc
pusha
sub
ror
jmp
test
in
lods
movsb
and
pop
sub
inc
mov
jge
jmp
fdivs
and
mov
inc
data16
ror
dec
movsb
inc
push
cmpsb
adcb
or
sti
in
test
push
dec
dec
lock
movsl
scas
out
lea
mov
outsl
push
insl
cmp
js
pop
cmp
js
lock
clc
sbb
in
dec
pushf
adc
adc
jne
jle
out
ficomps
inc
mov
adc
or
inc
dec
and
xlat
pusha
cli
inc
jae
dec
int3
push
je
adc
lcall
inc
jmp
enter
lcall
std
push
in
lret
enter
dec
jge,pn
mov
fwait
lods
aas
sub
cwtl
sub
lock
ss
pop
add
mov
les
int3
mov
lret
pop
fsts
cmc
out
sbb
out
aam
mov
cmp
sar
aaa
adc
jns
call
dec
adc
addb
push
push
jo
xor
xchg
int3
repnz
add
push
das
das
popf
push
pop
cmpsb
add
sub
mov
cltd
add
mov
mov
push
insb
jbe
adc
aas
or
push
mov
imul
xchg
or
call
adc
hlt
mov
or
dec
loope
ret
out
add
fsubrs
sarl
dec
int3
leave
mov
inc
sarb
test
aad
inc
loop
repnz
xchg
push
dec
xchg
adc
push
sahf
adc
mov
call
lock
std
lcall
cmp
nop
into
outsl
pop
push
shr
dec
stc
jbe
sarb
or
popa
aas
sti
xlat
in
push
js
sahf
int3
push
push
lcall
pusha
mov
xor
and
adc
dec
inc
imul
mov
cmpl
sub
inc
mov
pop
add
inc
xlat
adc
xchg
test
stos
arpl
inc
and
lret
add
xchg
in
test
mov
stc
fwait
push
push
fucomp
leave
arpl
cmp
or
insl
push
and
xor
popa
cltd
adc
rorl
jb
imul
xor
sbb
xchg
ret
in
insl
pop
mov
fildll
sub
and
cmpsb
fimull
call
iret
adc
jge
adc
pop
mov
push
mov
adc
xor
addr16
push
mov
sub
aad
push
inc
inc
call
das
stos
or
movsb
xchg
setle
push
dec
dec
stos
lock
icebp
mov
mov
push
shlb
nop
mov
pushf
shl
xor
xor
mov
jg
push
or
test
inc
lret
add
xchg
sub
movsl
add
mov
xchg
pop
cli
dec
lret
inc
mov
lahf
cltd
xor
pop
loop
cwtl
repnz
data16
push
mov
pop
push
sbb
inc
jecxz
push
inc
xchg
out
out
and
jmp
lock
pop
pop
cmc
test
push
popf
inc
xor
iret
jmp
mov
lock
ljmp
lret
and
nop
rcll
andb
xor
mov
lock
rorb
nop
mov
dec
aad
xorb
enter
cmp
adc
cwtl
imul
cltd
inc
xchg
cmp
push
pusha
leave
fisttpll
jb
push
gs
imul
aaa
or
xlat
lods
pop
dec
imul
aas
dec
add
add
jecxz
cmp
lods
int3
enter
es
into
sahf
push
lods
jge
ljmp
aaa
sbb
dec
ljmp
loopne
test
xor
movsl
cli
pop
nop
enter
sub
and
and
push
ds
or
out
fiaddl
mov
nop
xchg
pushf
fiaddl
scas
out
lods
arpl
mov
mov
push
lock
xchg
pushf
xchg
divl
lret
pop
lock
mov
arpl
addb
lcall
jb
cltd
fstp
sbb
shl
movsl
mov
rcr
or
mull
sbb
jno
jmp
roll
daa
adc
mov
mov
mov
xchg
hlt
dec
mov
stos
inc
and
adc
adcl
xor
lahf
into
fs
xor
pavgb
push
aaa
push
xor
pop
shlb
into
arpl
clc
or
mov
sbb
shr
push
int3
pop
sti
pcmpgtw
or
mov
inc
cli
and
call
out
adc
or
or
popf
mov
stos
or
lods
cmp
imul
sbb
dec
int
adc
xacquire
in
sub
clc
cmc
test
ss
lcall
add
mov
andl
filds
loope
in
rep
cs
outsl
loopne
in
mov
sbb
mov
pop
dec
jne
add
test
adc
or
mov
hlt
cmp
dec
sbb
mov
inc
sbb
inc
or
popl
jecxz
imul
jne
mov
cmp
push
mov
mov
movsl
rcll
add
enter
pop
insl
scas
or
and
clc
or
dec
jmp
inc
iret
sub
add
mov
frstor
repz
dec
add
inc
or
inc
sub
xchg
clc
xchg
aam
xchg
jge
frstor
int
int3
and
jb
movsl
mov
mov
xor
loope
dec
add
in
loope
mov
xor
jmp
lods
call
inc
sbb
icebp
add
mov
out
push
jmp
sbb
add
and
ds
mov
movl
jnp
sbb
shrb
mov
cmpsl
mov
rorl
daa
insb
jo
adc
jb
or
in
aas
stos
cwtl
xor
test
sbb
call
fsubs
xchg
adc
cwtl
lahf
ss
and
ds
inc
adc
xchg
jnp
incb
cmp
mov
sbb
movsl
cmp
cmp
fdivrl
or
xchg
arpl
mov
pushf
pop
inc
mov
lahf
sbb
inc
xlat
out
mov
dec
mov
test
mov
pop
inc
xchg
dec
dec
mov
shl
aaa
jmp
pop
mov
dec
outsl
notl
xchg
inc
cltd
cld
jbe
cmp
mov
ds
or
rcll
fcmovbe
jne
pop
inc
daa
pop
ds
xchg
xor
and
mov
jo
mov
inc
add
adc
jle
cmp
sub
shrl
jmp
dec
into
les
mov
pushf
repnz
mov
mov
push
mov
xchg
lret
push
psraw
inc
call
add
ds
rol
sub
std
out
xchg
dec
fstps
fwait
xchg
add
mov
jecxz,pn
cmp
loope
lds
xor
mov
xorl
repz
mov
mov
jns
aas
test
and
incl
rcl
repz
insl
js
adc
or
pop
dec
dec
jmp
jno
inc
sbb
push
and
in
aam
push
das
fwait
xchg
test
fsubs
jno
testl
sub
adc
push
mov
jno
ret
jno
push
mov
mov
clc
test
add
xchg
sbb
sbb
add
inc
cmpl
jb
lods
mov
xchg
in
cmpl
dec
jp
mov
or
sbb
or
cmpsb
push
fisubl
insb
js
inc
pop
add
cwtl
pop
or
mov
cwtl
movsb
xchg
or
daa
pop
sbb
xchg
aas
or
push
cmpsb
pop
dec
dec
leave
addr16
call
ror
je
xchg
xchg
push
mov
xor
dec
mov
daa
loope
mov
out
pop
in
xchg
mov
subl
add
iret
jle
sub
jae
bound
mov
shlb
pushf
xor
aam
ds
sbbb
andl
scas
cmpb
sub
stc
loope
cmp
or
int3
mov
dec
jg
push
rcll
ds
jecxz
push
leave
sti
cmp
mov
mov
push
cli
pop
adc
outsl
jbe
imul
push
or
inc
lret
dec
jne
adc
not
xor
iret
js
mov
fstl
push
seto
lahf
popf
mov
cmp
xchg
mov
addr16
inc
adc
push
jnp
xor
out
cmp
sub
or
push
push
and
clc
ja
xor
sub
pop
mov
xchg
popa
pop
fs
sbb
int3
inc
xchg
add
add
mov
jb
les
mov
adc
je
adc
adc
cli
addr16
out
inc
or
push
lock
jne
cmp
repnz
sahf
mov
or
fisttpll
xchg
sub
mov
cmpsb
adc
push
mov
outsb
in
and
or
outsl
or
dec
add
add
pop
adc
daa
inc
fisubs
cmpsb
sbb
mov
jns
jmp
adc
ret
vcomiss
in
jle
xlat
call
mov
imul
push
fwait
adc
inc
popf
sub
pop
jp
lcall
jns
jecxz
lcall
jl
mov
jb
out
xchg
movsb
ret
jl
movsb
mov
push
sar
test
xchg
test
xor
push
notl
jge
jmp
sub
call
test
jae
and
mov
inc
popa
jmp
xor
inc
jle
adc
jle
pusha
out
adc
lahf
pusha
popa
push
mov
leave
das
or
sahf
pop
sub
and
inc
leave
cmp
pop
inc
pushf
ss
jne
jo
jmp
imul
cmp
call
aad
mov
pop
sbb
inc
in
insl
cmp
add
dec
cwtl
jl
sub
inc
push
loopne
cmp
mov
adc
inc
rcrb
mov
stos
mov
hlt
sub
out
ret
push
lea
xorb
mov
dec
arpl
xchg
xor
das
lahf
fisttpl
mov
jb
xchg
dec
cmp
jg
add
push
testl
inc
push
notl
cmp
sbb
iret
mov
xor
cld
lock
jecxz
lea
xor
in
mov
cmpsb
cmc
sub
inc
loope
push
jno
and
push
mov
mov
call
js
mov
mov
call
xor
add
or
adc
adc
or
out
aam
adc
orl
push
out
je
jmp
sti
push
and
bound
inc
jle
sub
movsb
sbb
popa
sbb
rcll
js
sub
lret
xchg
outsl
cmp
out
mov
push
sub
rorb
repnz
fidivrl
iret
js
ror
imul
loopne
mov
cwtl
dec
daa
xchg
dec
jno
cwtl
stos
and
rorl
fstl
push
adc
leave
pop
mov
add
jns
push
rorb
mov
cmpsl
cmp
movsb
in
sub
sub
jecxz
loopne
sub
fnstcw
sbb
add
sub
mov
inc
push
imul
push
and
cmc
ficoms
ret
fiadds
bound
scas
cmp
test
mov
ljmp
mov
aam
lret
es
out
mov
cwtl
adc
and
or
mov
fdivrl
pop
in
push
pop
movsl
xchg
bound
xchg
outsb
xchg
movsl
mov
push
xchg
aaa
je
fidivrl
ljmp
mov
test
dec
pusha
mov
sahf
lret
xor
inc
test
cmp
pop
xchg
test
rcr
add
scas
ret
dec
sub
test
jo
outsb
adc
ja
stc
xchg
leave
out
aaa
notb
aam
sbb
xlat
cmpb
outsb
fcomps
add
mov
and
lcall
ss
incb
loope
in
cmp
mov
lods
xchg
add
cmp
and
push
mov
rorl
sub
jno
xor
ficoms
mov
mov
cli
daa
ljmp
add
dec
mov
test
mov
pushf
fisttpl
xor
sbb
jno
lret
mov
imul
push
stos
sub
xchg
int3
push
lods
in
lds
xchg
mov
push
cltd
aaa
push
dec
pop
push
stc
clc
icebp
imul
movsb
sti
fisubrl
jge
and
das
in
xor
jg
lahf
push
insl
jnp
jle
mov
lret
and
mov
ficoms
out
sub
fmul
inc
mov
pusha
fstps
dec
sub
je
or
popf
add
sub
loope
stos
hlt
push
jns
rep
ret
cwtl
jle
inc
into
xchg
mov
aam
add
popa
cmpsb
or
jns
sti
daa
cmp
test
mov
xor
in
push
push
rcrb
mov
jnp
mov
sub
lock
scas
pusha
pop
jmp
test
lcall
sbb
xchg
and
and
lock
imul
add
cmovae
cmc
testb
in
insl
mov
jnp
pop
lods
xchg
dec
aam
xchg
notl
push
xor
loopne
cmp
inc
outsl
pop
mov
mov
sbb
int
cmp
lock
or
jae
std
sub
cmpsb
adc
sbb
sbb
push
pop
mov
jns
into
dec
je
test
cmp
loop
pop
xchg
lea
les
imul
imul
sub
mov
popa
mov
aad
dec
sbb
xor
pop
lods
xchg
outsb
rcrb
popa
pop
incl
push
add
mov
outsl
jno
loopne
add
jbe
loop
cmp
dec
clc
test
add
cmp
mov
out
int
das
inc
xchg
or
aad
cmc
dec
push
outsl
stos
mov
scas
pushf
inc
sahf
push
sbb
sbb
or
xchg
daa
dec
push
cld
addl
scas
or
push
cwtl
mov
rorl
ret
mov
push
or
xor
push
or
add
popf
shrl
sbb
xchg
sub
dec
mov
sub
in
stos
dec
or
repnz
mov
ss
mov
and
sbb
and
sub
ljmp
sahf
push
in
cld
mov
mov
push
pop
cmp
pop
dec
or
xchg
jae
or
push
jecxz
ja
shlb
popf
pop
push
push
lahf
adc
jg
push
push
cltd
push
fcompl
xchg
mov
lret
pop
sbb
or
add
data16
scas
arpl
je
fs
hlt
insb
pusha
push
movsl
cmp
and
lahf
mov
out
xchg
in
inc
les
xor
mov
ret
incl
xchg
push
scas
sbb
lret
lahf
push
js
test
push
jbe
shrb
pushf
inc
lcall
pop
push
push
bound
push
imul
or
int
pop
push
mov
xor
push
fcoml
scas
loopne
sbb
icebp
inc
sub
sub
addl
pop
push
ss
jno
jle
pusha
iret
mov
xchg
xchg
pop
dec
add
mov
pop
cli
addb
adc
jmp
xchg
cmp
inc
cwtl
xchg
mov
decl
clc
das
jle
cmpsb
mov
xor
shlb
lods
rol
cmp
fstpt
dec
ret
mov
movsb
mov
int
jg
addr16
mov
out
jnp
sti
push
data16
jbe
add
push
out
and
stos
pushf
jne
jne
fldt
loop
hlt
jo
jl
mov
orl
cmc
outsl
cwtl
sbb
lret
enter
mov
add
ja
inc
mov
out
pop
jne
insb
cs
pop
or
lcall
cmp
repnz
shlb
pop
mov
jl
test
jae
mov
mov
adc
daa
mov
push
out
aam
movsb
push
push
mov
jle
add
inc
in
je
in
jbe
mov
mov
popa
into
pop
xor
jne
sub
popf
lods
dec
and
push
arpl
jl
push
xor
mov
loope
adc
mov
mov
xchg
popa
add
push
cmpsl
xorl
inc
aas
fwait
loop
aad
xor
push
dec
leave
scas
lahf
xor
mov
push
mov
xchg
test
ss
mov
and
ret
fstps
and
lcall
das
imul
jne
out
xchg
xor
loopne
jp
sahf
push
cmpsl
sub
mov
dec
push
cld
inc
fnstenv
aaa
cmp
pop
mov
notb
push
mov
scas
mov
fistl
mov
faddl
sub
dec
ret
int
inc
je
sbb
es
mov
data16
mov
sub
sub
and
jecxz
popf
adc
inc
inc
imul
clc
fwait
jg
jecxz
scas
addr16
sub
jecxz
xchg
inc
cmpsl
add
push
movsl
cmp
mov
call
lds
mov
out
sbb
push
pop
and
stos
xor
adc
clc
jl
xchg
mov
aad
rolb
jae
xor
sub
add
sbb
cmc
outsl
adc
outsl
int
pop
mov
test
xor
push
or
xchg
mov
sub
outsb
or
ret
imul
out
push
dec
add
jae
fs
xchg
fimuls
inc
push
fbld
dec
cmp
fs
test
int
les
mov
or
mov
or
shl
repz
cmpsb
out
lret
ss
xchg
pushf
aad
push
xlat
dec
ja
daa
xchg
loopne
ja
out
cmpl
xor
adc
xchg
sbb
jge
inc
inc
lahf
xchg
xchg
mov
ljmp
aam
xchg
fs
cmc
pop
push
das
insl
mov
cmp
mov
push
popf
mov
xchg
jmp
mov
clc
test
pop
lcall
and
out
push
push
lret
out
add
rcrb
pop
push
cmp
xor
sbbl
movsb
mov
adc
xchg
and
adc
push
cs
addr16
test
push
mov
fists
test
in
sbb
shlb
xor
mov
popf
add
push
mov
xor
xor
jns
jge
icebp
mov
insl
mov
push
push
icebp
fs
mov
or
cld
sti
xor
pop
fsubrs
jecxz
test
mov
inc
sti
idiv
mov
clc
mov
xlat
mov
repnz
out
sub
or
inc
push
aad
mov
jb
inc
in
faddl
add
fisttps
dec
iret
bound
in
mov
adc
jle
and
jo
inc
sarl
dec
out
inc
movsb
add
or
aam
stos
pushf
inc
mov
sti
or
xor
mov
pushf
outsb
les
aaa
clc
push
push
dec
shl
push
outsl
jmp
pusha
xchg
arpl
sbb
push
mov
lcall
xchg
mov
scas
push
movsb
shrl
test
cld
test
xor
imul
jae
outsb
outsl
sahf
scas
inc
or
mov
adc
leave
sbb
mov
lret
lods
stos
fwait
pop
inc
xchg
cwtl
insl
in
cmp
xor
aas
outsb
neg
in
jle
push
out
jmp
dec
or
fidivrs
xchg
jbe
lea
test
jne
loop
sbb
data16
dec
and
enter
add
pop
sub
pop
pop
xchg
and
test
add
jno
add
rcrb
jno
mov
out
icebp
aam
jo
add
sub
push
push
push
lods
pop
mov
les
inc
mov
push
sbb
inc
xor
mov
into
xor
in
xor
mov
adc
mov
sbb
mov
xlat
pop
insb
jne
clc
test
rcrl
pop
push
mov
inc
cmpsl
std
sub
imul
dec
jecxz
mov
jae
repz
negb
call
cmp
push
std
jmp
inc
sub
sbb
scas
mov
jg
out
pop
push
sbbl
fnsave
add
in
movsl
cmpsl
push
pop
push
mov
cmp
outsb
mov
fcomi
jae
popa
jle
xchg
in
xor
stos
rcrl
mov
dec
push
mov
sub
inc
test
popf
aas
out
xor
push
ljmp
dec
inc
sbb
pushf
or
arpl
lods
in
lea
mov
pop
imul
aad
sar
xchg
mov
pop
inc
cli
lods
pop
je
adc
add
enter
in
stos
cli
inc
mov
test
ret
out
jo
aad
aaa
mov
jle
push
cmp
or
mov
push
scas
cwtl
mov
dec
xchg
xchg
movsb
out
and
arpl
mov
gs
cmpsl
rclb
or
leave
sbb
cmpsb
fdivrl
add
jle
les
rcl
mov
add
das
mov
xor
out
adc
dec
in
scas
data16
push
lods
sbb
int
cmpsb
push
mov
mov
cmc
dec
mov
sahf
mov
sti
ljmp
sar
jo
dec
xor
sarb
xchg
cltd
nop
sub
pop
arpl
andl
leave
xlat
jns
mov
jmp
push
cld
lea
lcall
loopne
sub
shlb
lods
setb
repz
fsubrl
je
fs
cs
mov
adc
adc
sub
sub
cmpl
test
cmp
or
jmp
and
push
jno
packsswb
and
aad
xor
std
mov
pushf
lds
mov
out
sti
and
sub
push
insl
adc
lods
aas
sub
sbb
jno
movsb
sbbl
dec
cmpsl
pop
mov
dec
adc
decb
and
into
mov
inc
imul
out
xor
add
in
aaa
mov
sbb
nop
mov
fcompl
add
dec
mov
flds
push
ja
xor
push
cmp
movsl
or
scas
jbe
adc
out
mov
dec
push
sub
out
addr16
arpl
xor
pop
lahf
and
lods
inc
add
mov
dec
mov
lods
lret
push
or
mov
xchg
pop
bound
xlat
mov
mul
sbb
bswap
push
push
xchg
pop
inc
je
and
sbb
push
into
pop
sbb
or
arpl
push
xchg
data16
jmp
iret
movsl
bound
subl
imulb
pop
jmp
shr
pop
out
jns
mov
gs
cli
leave
and
xchg
andl
icebp
lcall
inc
xchg
ficoms
jge
add
insl
int
jle
jae
loope
push
js
fwait
icebp
inc
add
adc
and
adc
cmp
mov
pop
stos
mov
xchg
xchg
jg
in
les
outsb
mov
aam
stc
movsb
sub
and
mov
sahf
test
adc
push
in
ljmp
or
adc
in
in
or
mov
xlat
push
mov
iret
pop
xor
jns
jae
xchg
mul
das
aas
movsl
stos
dec
xchg
insb
testl
sbb
add
loope
cmpl
sbb
outsb
xchg
dec
bound
stos
imul
lock
imulb
mov
xchg
cmp
cld
fbld
lret
ss
push
add
add
adc
mov
out
add
mov
shrl
jp
sbb
mov
test
rcrb
jo
jae
mov
in
and
push
insl
or
js
sahf
es
es
lcall
imul
pop
add
lea
jbe
xchg
mov
xchg
adc
jae
sahf
frstor
fistpl
pop
mov
inc
lock
icebp
ja
jnp
adc
test
inc
pop
dec
inc
mov
xchg
cmpsb
xor
sbb
mov
imul
loope
or
notl
pusha
sbb
sub
xchg
shll
call
add
pop
into
mov
mov
mov
dec
pop
fcmovbe
scas
testb
in
pop
xchg
std
cmc
jmp
scas
sbb
outsb
xor
jg
mov
cld
mov
stos
daa
test
fs
xchg
scas
fnstcw
std
push
in
pop
cwtl
cmp
enter
or
sub
nop
mov
inc
and
cltd
fstps
call
call
mov
add
pushf
sub
ja
cmpsb
out
mov
movsb
sub
std
pop
in
rcrl
or
jmp
xchg
mov
mov
movsb
ljmp
mov
mov
pop
push
scas
xorl
ror
test
into
jns
arpl
sub
sub
xchg
sbbb
mov
dec
lcall
sbb
ja
es
fs
xchg
das
sub
insl
mov
mov
incl
cli
cli
xchg
in
inc
push
repz
mov
in
pop
lds
sahf
jp
movsl
sub
add
jecxz
in
pop
mov
sbb
cltd
pop
jl
jbe
fwait
popf
in
in
and
mov
lret
jmp
push
ffreep
inc
in
clc
adc
int
push
in
out
cmp
xor
cmp
push
mov
pop
jns
push
les
imul
mov
or
mov
insw
or
and
cmpsl
and
rcl
cmp
inc
call
sub
pop
sub
incl
and
shl
sub
lret
sbb
call
fnsave
mov
xor
pop
jle
mov
loopne
pop
jno
lahf
jl
arpl
mov
loope
pop
in
in
mov
arpl
push
pop
jmp
pop
gs
mov
bts
pop
cmpsb
lods
ja
and
idivb
shll
mov
mov
mov
inc
jg
iret
std
sub
js
adc
cmpsb
lret
js
dec
iret
rclb
loope
lods
loop
lret
movsl
sar
icebp
mov
sbb
ret
fdivs
stos
lret
stc
xor
in
pop
shlb
dec
xchg
add
mov
sti
call
loopne
or
xor
fistpll
and
xchg
adc
or
pushf
enter
mull
mov
cmp
xchg
in
loop
push
dec
cltd
jg
or
out
ja
and
push
cld
pushf
xor
lahf
push
dec
in
xchg
mov
out
dec
jge
stc
mov
lret
es
inc
dec
jp
push
cld
jb
sbb
arpl
ret
sti
out
or
adc
push
adcb
jle
frstor
adc
int
mov
xchg
aad
push
add
mov
fstp
sub
xchg
imul
or
stc
mov
lret
cmp
pop
lcall
dec
lret
imul
sbb
jno
mov
sbb
dec
insl
stos
lea
xor
and
pop
ret
arpl
cwtl
outsb
fists
rcrl
push
cmp
lcall
dec
add
cmpsb
and
dec
popf
sub
mov
mov
jmp
pop
dec
loop
loope
dec
add
repz
sbb
subl
xchg
add
inc
inc
std
or
mov
pop
ss
out
rolb
lds
scas
fisubrs
and
nop
je
push
and
daa
mov
subl
decl
lar
test
push
call
nopl
or
dec
mov
sub
ret
mov
in
dec
push
xchg
repnz
inc
jp
sub
sub
xor
xor
cmovge
add
lret
sbb
data16
loope
out
jge
dec
adc
mov
cmp
mov
daa
cli
mov
pop
hlt
movsb
mov
imul
das
cmpsb
pop
pop
pop
sub
pop
xchg
mov
fnstenv
hlt
sahf
xchg
pop
fwait
add
inc
xlat
xor
aaa
call
mov
or
jb
xchg
add
pop
cld
loopne
jle
dec
sarb
jge
clc
add
negb
arpl
xor
adc
xchg
inc
pop
push
test
ja
into
les
mov
enter
lods
cld
ds
cli
icebp
cmp
test
dec
push
xor
jo
out
push
or
sub
roll
push
pop
push
pushw
mov
es
subb
cmp
dec
cmp
add
mov
add
lcall
xor
add
mov
adc
pop
lret
or
fs
mov
add
adc
xor
adc
add
jmp
pop
mov
pop
jnp
mov
jmp
jl
in
lcall
mov
sarl
xchg
js
pusha
rcll
pushf
adc
xor
push
fwait
xchg
es
pop
sub
push
cmpsl
adc
and
xchg
fisubrl
cmp
xchg
jmp
arpl
xchg
aam
adc
loopne
mov
test
cli
fdivrl
mov
adc
pop
mov
push
loop
push
aad
aad
push
push
xor
int
stc
subb
mov
shrb
imul
scas
std
sub
jbe
inc
idiv
inc
gs
es
int
test
daa
push
pushf
xorl
lret
mov
inc
loopne
adc
pop
cli
xor
je
hlt
push
and
fcmovbe
mov
ja
call
int3
loop
roll
movsl
sbb
mov
dec
mov
stc
mov
cltd
in
adc
fdivp
lea
ja
insl
test
fistps
mov
aaa
cmpb
fiadds
adc
xchg
orl
add
fiaddl
cli
outsl
test
fisubs
cmp
mov
call
xchg
lds
xchg
rcl
adc
xchg
jp
xor
mov
sbb
inc
and
ret
shrl
inc
dec
jmp
ror
xlat
dec
test
lret
call
sbb
sub
divb
add
gs
cmp
icebp
push
add
stos
sbb
sahf
push
mov
lods
sti
cmp
pop
mov
lods
std
inc
cltd
sub
inc
aaa
sbb
mov
add
xchg
fmuls
loope
stos
jge
jle
mov
adc
cmp
dec
mov
fldcw
jp
fwait
xor
mov
out
dec
cwtl
fldenv
dec
adc
sub
or
fdivr
popf
insb
inc
jns
out
stos
repz
mov
fisubrs
sarb
std
fmull
xor
sahf
ljmpw
rorb
repnz
test
jno
aad
adc
and
fcmovbe
ljmp
pop
fstps
inc
pusha
aas
daa
sbb
cmc
xchg
pop
lret
fcoms
insb
stos
dec
or
cmp
popf
cs
mov
mov
jnp
xlat
xor
mov
mov
loop
pushf
dec
lods
in
mov
pop
sahf
enter
aad
test
popa
cmp
or
xchg
push
fcmovb
pop
mov
jae
mov
mov
fists
jnp
sub
loop
adc
cmp
lret
and
xchg
xchg
sub
adc
in
cmpsb
shlb
aam
pop
fisubrl
sub
inc
or
xchg
out
leave
lret
cmp
pop
lret
sub
shlb
or
jns
shlb
enter
dec
pusha
ss
sarb
fld
sub
rol
mov
push
mov
ficoms
divb
xor
mov
mov
cmp
das
adc
loopne
icebp
inc
lea
mov
adc
mov
sub
jns
push
dec
cmp
jge
sbb
jns
shrl
add
hlt
ds
mov
cmp
leave
ret
fnsave
iret
repz
int
xchg
sbb
or
mov
xor
push
sub
xor
push
jbe
mov
test
and
lret
loope
repnz
inc
jg
xchg
std
pop
in
add
cltd
jle
not
js
shl
xor
and
imul
cli
dec
rolb
fsubr
loopne
and
fwait
cmp
data16
mov
inc
sbb
push
sti
jo
pop
dec
lock
sbb
push
ds
and
rol
andb
out
cs
add
imul
xlat
mov
xchg
icebp
dec
or
insl
sti
andl
repz
mov
sbb
mov
inc
arpl
sub
sbb
xor
aam
mov
fcmovnb
push
sub
or
jno
iret
stos
test
push
test
int3
fnstcw
mov
insb
idivb
sbb
scas
add
mov
jle
pop
mov
fdivrs
cmp
inc
sbb
cmp
xchg
or
sbb
cmp
movsl
mov
arpl
jg
sti
cld
addr16
jmp
mov
ss
sahf
or
pmullw
in
mov
fsubrs
inc
scas
pop
add
leave
lock
xor
std
fstps
in
pop
adc
pop
lods
cmpsb
mov
daa
rolb
push
sbb
xor
mov
jmp
data16
repnz
mov
push
xchg
sub
shrb
add
push
mov
push
and
mov
or
or
test
and
mov
les
daa
cld
pop
adc
lret
and
out
in
mov
push
arpl
ret
xor
sbb
dec
jno
ds
add
mov
ljmp
jbe
testb
mov
mov
loop
in
mov
movsl
mov
add
jb
xor
pop
xor
aaa
fucomi
addl
imul
dec
push
pop
mov
xchg
and
fld
les
iret
add
das
dec
mov
pop
push
inc
pop
insb
aad
jmp
adc
xchg
lret
adc
cmp
fnstsw
xor
leave
adc
and
add
sti
pop
scas
in
sub
push
leave
and
addr16
mov
push
cmp
aad
ljmp
cmc
mov
mov
mov
jae
in
xchg
pop
cmc
cmp
and
mov
mov
call
jge
mov
sub
mov
or
aaa
pop
orb
jle
xor
or
adc
sub
fistpll
and
mov
out
jne
insl
mov
sbb
out
ret
cmovb
fldcw
mov
rorl
arpl
ret
test
in
mov
stc
jecxz
loope
movsl
in
daa
inc
xchg
sub
repnz
fwait
dec
adc
in
jo
loopne
or
scas
add
dec
je
aam
aad
mov
mov
pop
rorl
lret
scas
mov
xchg
enter
xchg
push
psubsb
test
inc
lock
clc
xor
push
sbb
lock
subb
lret
cs
je
xor
movsb
js
mov
loopne
sarb
sarl
inc
xchg
add
fdivrl
jmp
cltd
out
ret
fiadds
into
and
scas
pop
mov
sbb
fldl
pop
pop
jbe
out
pushl
lock
push
icebp
lea
movsl
idivl
jns
es
xchg
adc
imul
test
pushf
or
sbb
jnp
or
popf
jbe
pop
pushf
push
aas
in
dec
sub
test
jno
mov
push
mov
movsl
add
ret
fucom
mov
or
pop
mov
cmp
fildll
test
repnz
push
jo
fnstsw
test
out
jae
mov
test
pusha
ret
movsl
stc
dec
fs
dec
pop
in
inc
push
rolb
inc
aad
das
dec
push
push
jo
sub
cmp
popa
aas
mov
jb
punpcklwd
test
nop
dec
xor
cld
cmp
movsb
stos
mov
divl
cmpsl
fldt
int3
test
xor
mov
mov
mull
xchg
push
xchg
xchg
lcall
push
das
pushf
test
jnp
repnz
push
movsl
lock
and
sub
scas
sub
cmc
mov
pop
mov
jmp
xchg
lea
cld
mov
mov
mov
daa
mov
xor
insl
xchg
mov
cmp
repz
mov
popf
mov
pop
mov
mov
sub
dec
rorb
mov
push
or
jbe
aam
test
sub
int
fwait
push
jle
and
dec
adc
jmp
cmp
mov
xchg
push
ret
outsb
pop
fndisi(8087
pushf
xchg
jno
jg
mov
fsts
jge
add
ds
cmpsl
stc
add
andl
mov
popf
sar
mov
sbb
push
orb
jae
add
xlat
mov
mov
repnz
add
sahf
xchg
mov
jno
xchg
push
in
ret
mov
mov
les
mov
adc
into
sbb
dec
in
sub
mov
mov
pop
repnz
dec
push
push
loop
js
je
test
jno
ljmp
jo
inc
hlt
mov
pop
jp
fdivl
stos
pop
push
add
xchg
mov
dec
mov
or
push
push
fmulp
jge
mov
mov
mov
pop
pop
mov
inc
and
add
add
mov
and
pop
lods
add
aam
mov
in
mov
popf
and
cmpsb
dec
imul
lods
popa
popf
in
mov
test
fidivl
faddp
adc
out
adc
jns
push
daa
jge
mov
sub
xchg
push
adc
jns
pushf
xor
mov
xchg
std
out
push
xchg
push
xor
xchg
fsubrs
inc
outsl
bound
cltd
or
hlt
es
rorb
imul
jg
icebp
mov
int
gs
mov
rorb
hlt
mov
ljmp
push
or
test
cltd
mov
push
add
gs
jecxz
mov
lods
dec
fiaddl
xor
inc
mov
and
outsl
mov
sub
xchg
cmovge
je
fiadds
adc
insl
mov
inc
sti
and
mov
stos
ds
xor
cmpsb
je
out
insl
add
loop
cld
jecxz
inc
incb
mov
jb
adc
into
rol
fbstp
jbe
andb
outsb
nop
ja
xor
sbb
popa
loopne
push
push
xor
pop
jo
mov
mov
add
imul
ds
in
sbb
clc
mov
decl
fistps
xchg
rol
ds
aad
dec
jge
hlt
lcall
fsts
pop
std
inc
repnz
jns
mov
divl
or
dec
xor
and
lea
adc
dec
add
pusha
pop
xor
sub
negb
lahf
dec
push
pop
or
shll
stos
pop
imul
neg
push
mov
jle
dec
aas
xchg
popa
add
add
cmpl
addps
jmp
dec
les
mov
in
test
xchg
faddl
cmp
shrb
pop
dec
dec
add
roll
inc
out
int
iret
jnp
cmc
cmp
leave
push
mov
and
adc
or
inc
xlat
dec
andl
out
popa
mov
loopne
push
mov
mov
mov
add
into
cltd
sbb
orb
mov
cmp
mov
scas
lods
sbb
iret
hlt
pop
popf
jg
mov
icebp
push
stos
mov
ret
stos
or
mov
jno
push
test
ja
std
adc
dec
xchg
jns
movsb
rcrl
xor
lds
in
add
hlt
jae
je
stos
jbe
movsb
pop
shrb
clc
inc
adc
push
xchg
outsl
mov
push
in
mov
mov
negl
rclb
and
lea
sub
dec
ret
add
icebp
mov
repz
mov
popa
lods
sub
add
repz
arpl
sti
pop
jg
pushf
inc
call
mov
jge
mov
cmp
inc
sbb
sti
imul
pop
mov
mov
xchg
mov
lahf
loopne
subb
fs
into
mov
push
adc
nop
lcall
int3
mov
mov
movsb
mov
into
loope
psubb
imul
in
movsl
push
mov
jge
dec
jmp
add
jbe
sbb
nop
adc
inc
xchg
push
adc
jle
or
mov
dec
addb
lahf
xor
mov
rorb
ret
or
inc
test
std
repnz
push
xor
or
lock
lret
or
in
arpl
jne
or
or
cmpsb
dec
mov
mov
adc
out
test
scas
mov
mov
jg
test
pop
in
shrl
hlt
shl
jne
lods
cmpsl
push
xchg
mov
sbb
test
fsts
pop
je
xchg
cwtl
add
lret
test
popa
lahf
loop
xor
pmulhuw
or
jg
hlt
or
iret
mov
pop
mov
mov
ds
les
movsl
data16
int3
fcomps
gs
mulb
movsb
lcall
lods
cmp
inc
ja
and
ss
adc
mov
and
test
adc
xor
mov
push
pop
xor
mov
je
enter
fsubrs
rcl
xchg
arpl
inc
push
mov
lods
popa
or
add
in
jl
or
mov
sub
inc
xor
lcall
lods
mov
pop
sub
push
out
jns
mov
xchg
dec
cmpsl
pop
mov
in
popf
data16
aas
jcxz
xchg
push
js
inc
not
mov
xor
lock
imul
or
mov
push
xchg
stos
push
jmp
sub
ljmp
popf
mov
sub
push
std
mov
dec
add
mov
adc
out
xor
adc
inc
add
out
mov
insl
aaa
add
test
pop
fidivrl
jno
fnstcw
jle
mov
mov
cmp
subb
test
ret
push
lret
test
aad
test
cmp
xchg
les
sti
inc
insl
subb
add
rorl
sbb
mov
jp
shll
xchg
mov
mov
lret
dec
aam
imul
adc
fistps
push
in
cmp
jne
rorl
push
out
sbb
xchg
xor
or
sbb
repnz
sbb
mov
jle
adc
fwait
int3
push
fstpl
mov
sub
out
and
jle
sub
repz
fstl
lods
ret
out
dec
dec
cmpl
dec
dec
mov
test
shr
cmc
mov
inc
rorb
into
lods
sahf
jp
push
push
sub
inc
aad
popa
loopne
out
xchg
lods
pop
in
aam
mov
cltd
dec
or
fdivl
je
dec
pop
push
lahf
add
mov
aaa
mov
xor
fucomip
add
add
fwait
rolb
cmp
xchg
mov
daa
out
mov
push
pop
mov
pop
add
xlat
in
mov
inc
loope
push
outsb
imul
adc
mov
das
mov
push
out
mov
out
int
movsb
loopne
lock
std
jno
clc
xor
pop
add
dec
xchg
shr
mov
outsb
inc
cmc
adc
fs
ljmp
mov
xor
aam
cmpsb
call
jmp
lock
dec
movsb
xor
mov
sub
pusha
aad
repz
xor
loop
fld
pop
pushl
fistps
outsb
jmp
push
clc
fistl
lock
and
subl
xor
lcall
mov
outsb
dec
outsb
gs
shrb
pop
push
dec
xor
pusha
push
stos
and
fbld
in
stc
int
mov
mov
mov
inc
ja
xchg
mov
adc
jnp
adc
sarl
loopne
dec
mov
call
in
int3
orl
or
dec
sub
int3
push
xchg
adc
mov
adc
sbb
dec
leave
hlt
mov
mov
cmp
pusha
in
or
scas
and
jge
sub
xor
iret
xchg
jg
popa
mov
cmc
orb
popa
rclb
jp
jp
mov
push
sub
or
sete
cmp
xor
mov
in
cmpsl
sub
hlt
push
sbb
push
or
inc
inc
outsb
jg
inc
or
mov
push
out
sub
sbb
cmp
lds
mov
pop
mov
ljmp
decb
push
mov
and
jp
stos
movsl
and
mov
xchg
push
cmpsl
xor
push
jmp
jno
loope
scas
xor
ret
leave
dec
and
mov
mov
out
fcom
imul
stos
xchg
ret
dec
mov
or
gs
mov
lahf
mov
insl
xchg
xchg
sahf
jno
pop
xchg
cld
jl
imul
mov
ror
push
movsl
dec
pop
mov
andb
scas
xchg
push
loopne
cmp
or
out
popf
call
rol
imul
adc
aaa
sbb
sub
inc
lea
cmpb
adc
rcll
repz
out
push
scas
add
ja
aad
and
mov
lahf
iret
subl
arpl
cltd
xor
adc
in
sarb
mov
cli
ficompl
insb
inc
iret
js
sbb
shlb
xchg
fdiv
xchg
jge
sbb
dec
aam
mov
fsubl
imul
sbbb
outsb
cmp
sti
add
pop
push
mov
jns
rolb
sub
mov
mov
jle
jmp
xchg
inc
pop
stc
fmul
sub
lea
xchg
das
bound
hlt
dec
dec
fs
mov
push
and
push
notb
jg
xor
jl
pop
sbb
loopne
jmp
mov
dec
movsl
fmul
add
test
sbb
xchg
xor
sti
jmp
in
fstpl
addr16
mov
lahf
int3
add
xor
js
popa
enter
bound
dec
shlb
xor
xchg
in
inc
inc
lahf
ja
rcrl
jnp
cmp
pop
out
jae
in
loopnew
and
mov
lods
in
into
mov
sub
shll
push
push
repz
stc
cmc
jbe
xchg
jb
cmp
jnp
xchg
lods
int3
mov
inc
out
aas
into
adc
jo
sub
mov
sahf
in
jns
cmpsl
fucomip
xlat
pop
mov
les
loop
mov
mov
lods
add
xor
add
or
mov
adc
mov
loopne
push
pop
dec
mov
mov
mov
mov
inc
xchg
sbb
ds
push
sbb
dec
or
stc
pop
outsb
cmp
fsubrl
movups
adc
ljmp
mov
jns
mov
out
pop
xor
adc
jns
ja
mov
imul
lds
lods
sub
sbb
xor
inc
lea
movsl
mov
xor
aad
fwait
pinsrw
fisttps
dec
dec
pop
add
js
sub
xchg
or
cmp
aad
mov
loope
sub
adc
sbb
jb
mov
sub
push
mov
jnp
jns
mov
jmp
cld
stos
mov
push
cltd
call
mov
addl
mov
data16
and
lds
ja
lcall
lret
inc
pcmpeqb
lods
shlb
daa
movl
mov
clc
adc
inc
fmulp
sub
mov
out
xor
jae
std
sbb
fwait
jge
adcl
sbb
jge
inc
js
call
cmp
jp
adc
lods
cmpsb
jge
out
ja
sbb
sbb
notb
popa
jo
popa
or
fisttpll
stos
jns
cmpl
popl
mov
mov
and
mov
xchg
or
cs
imul
xchg
mov
pusha
and
movsl
push
push
dec
out
aam
out
push
mov
xchg
dec
lret
cmp
inc
fs
or
rcrb
mov
or
jns
fists
mov
add
jbe
xchg
jne
call
dec
fs
pop
adc
rorl
pop
push
pop
inc
xor
not
addr16
fldenv
pushf
aam
sub
pop
mov
stc
jnp
insb
add
jecxz
xchg
sbbb
clc
sub
int
adc
xchg
call
add
pop
popa
fstpt
subb
mov
test
mov
iret
inc
push
pop
cmp
pop
and
or
or
outsb
sahf
mov
add
pop
es
fimuls
add
push
dec
pop
inc
pusha
or
jb
dec
lds
mov
les
insb
lahf
dec
xchg
cmp
mov
mov
mov
mov
pop
adc
and
repnz
and
xor
jbe
jmp
push
cmc
pushf
jns
ljmp
mov
std
mov
int
jmp
movsl
mov
js
fldl
mov
pop
rorl
sub
mov
mov
movsb
adc
je
xchg
add
push
leave
and
mov
dec
jns
dec
dec
push
pop
or
dec
cmc
addr16
xchg
and
sti
mov
ffree
mov
stos
dec
inc
mov
inc
cmp
aaa
jl
cwtl
jo
test
lret
dec
add
idivb
scas
add
lret
push
outsl
cmp
xlat
enter
cmpsb
pop
enter
xor
adc
xlat
xchg
xor
push
in
mov
mov
pop
mov
ss
popf
xlat
xchg
je
add
loope
test
rorl
pop
inc
mov
mov
mov
sbb
sub
inc
shrb
mov
out
pop
jle
loopne
cmp
ficompl
repnz
mov
sub
clc
pop
lods
add
sbb
fsubs
dec
dec
push
jns
or
stos
xlat
push
xchg
out
mov
aam
and
mov
sbbb
pop
cmpsb
mov
mov
sbb
ret
jbe
or
xchg
pop
cmp
xchg
jmp
lods
and
add
cmp
sbb
or
or
ljmp
mov
jb
dec
shlb
mov
stc
or
or
or
out
sti
int
pop
add
pop
push
mov
outsl
sub
das
xchg
push
inc
int3
scas
fistl
pop
bound
gs
inc
sbb
mov
cmp
or
fimuls
sub
sarb
rcrb
incl
daa
into
into
add
rcl
bound
into
jmp
lock
pop
cwtl
sbb
mov
sbbl
sbb
popa
jecxz
and
pop
sbb
fstpt
xchg
lods
inc
xchg
ret
xchg
gs
inc
lahf
pop
or
mov
push
xchg
es
adc
push
repnz
sbb
mov
add
lahf
movsl
cmp
cmp
je
rcrl
mov
xor
stos
adc
outsb
mov
cli
insl
out
push
mov
sahf
inc
push
out
movl
rcrl
xchg
lds
cld
or
xchg
mov
nop
daa
sbb
mov
test
adc
cltd
daa
adc
andb
cli
cltd
rcrb
push
jb
leave
sbb
jbe
jp
popa
jnp
clc
push
test
inc
pop
xchg
mov
fsubrl
ja
das
fcmovbe
lea
and
jle
mov
dec
inc
xchg
repz
test
aas
pop
mov
repz
inc
push
jg
adc
pavgw
inc
fwait
and
xor
add
sub
adc
lret
inc
fs
frstor
or
xor
js
sar
dec
xchg
add
push
enter
jle
xor
dec
sbb
mov
ficoml
inc
lea
repz
mov
pop
jl
adc
xchg
mov
imul
ljmp
shlb
push
pop
ljmp
mov
dec
push
or
mov
adc
mov
aad
nop
inc
xchg
push
xor
adc
xor
mov
dec
scas
adc
movsb
mov
insb
pop
mov
push
cmpsl
pop
aas
les
shrb
or
hlt
jmp
flds
mov
adc
imul
pop
or
fiaddl
loope
sbb
cmp
adc
xchg
dec
cmpsb
push
xor
repnz
mov
sub
sbb
jae
sbb
sub
and
cmpsb
cmp
mov
leave
xchg
fidivrs
sub
out
jne
push
mov
cwtl
out
out
pop
jne
je
outsl
jo
add
add
sbb
in
fidivrl
and
leave
lods
and
popf
stc
leave
test
mov
mov
jbe
test
mov
pop
rcr
mov
fimuls
andb
push
rcl
mov
aaa
or
lret
rcl
lcall
sbb
sub
sub
push
mov
jl
sub
loopne
xchg
jg
pushf
in
dec
cwtl
fiaddl
xlat
adc
push
cmp
pop
lret
test
xor
pop
sbb
dec
adc
mov
sbb
cmp
negb
dec
addr16
sub
lods
call
icebp
inc
push
gs
rclb
jbe
ror
jae
cmp
lds
cld
mov
push
push
jae
pop
sbb
mov
test
pop
mov
out
movsl
inc
xchg
sub
ret
or
inc
test
lret
scas
ljmp
jne
scas
mov
sti
outsb
rclb
stos
decl
push
cmp
test
xor
call
cltd
mov
stos
mov
mov
cmp
jbe
hlt
and
loopne
and
clc
fsubrl
mov
mov
xchg
lds
mov
sub
push
ljmp
pop
push
in
rcrl
in
icebp
push
arpl
arpl
or
stos
push
mov
sbb
in
cmp
pop
aaa
jl
out
mov
movsb
mov
and
gs
inc
dec
stos
push
pusha
sahf
imul
jne
std
sti
imul
sti
push
sub
setp
xor
movsb
je
cmp
or
inc
scas
inc
cmp
sti
es
aad
cmp
cmp
lods
gs
inc
test
shlb
mov
loope
in
in
and
stos
mov
fldenv
shlb
xchg
bound
lret
sub
test
mov
sub
pusha
test
ja
push
data16
cmp
jae
cmp
xor
pop
lcall
pop
data16
je
push
pop
push
inc
add
leave
push
mov
imul
inc
fs
rolb
idivb
add
adc
cwtl
jge
imulb
sub
std
lahf
sbb
aas
sub
test
test
mov
jne
scas
jle
andl
sti
ljmp
sub
fiaddl
mov
lret
and
xchg
push
adc
mov
add
or
mov
xchg
mov
add
shll
adc
xor
mov
cwtl
ds
stc
cli
sub
xlat
add
outsl
nop
inc
ss
inc
push
jb
xchg
push
in
int3
and
jo
and
add
call
xchg
lods
test
jmp
xchg
loopne
clc
inc
scas
aad
cld
jp
int
cvtps2pd
pmaddwd
add
or
sbbb
imul
sub
pop
enter
sbb
jnp
addr16
cwtl
repz
addr16
or
xor
add
stc
psubsb
xchg
lahf
icebp
jne
jo
sbb
aaa
outsl
lods
test
pop
sub
or
hlt
push
rclb
inc
mov
mov
and
int3
push
lods
fstl
sbb
xor
xor
mov
in
sbb
jmp
jno
call
xchg
ds
adc
cmc
sahf
aas
mov
popf
pusha
xor
call
push
dec
fwait
out
jmp
cmp
xchg
dec
xor
pop
test
jge
hlt
jbe
xchg
sbb
clc
mov
nop
dec
test
scas
int
out
cmp
and
aas
mov
push
into
pop
mov
sbb
push
fnstcw
and
lods
cmpsb
adc
cwtl
pop
ljmp
outsl
mov
xor
cmp
xor
rcll
xchg
inc
clc
andb
lahf
mov
xchg
clc
jo
jo
in
bound
hlt
addr16
fcomip
fidivrl
fwait
xchg
mov
cmp
and
jmp
cmp
out
push
and
ss
cmp
nop
mov
lcall
sub
or
sbb
sbb
push
pop
jecxz
mov
je
jns
push
pop
enter
aas
test
mov
xchg
fwait
push
out
and
test
jg
xor
cmc
pop
dec
int
sub
jge
imul
lea
sub
xor
add
mov
cli
cmpsb
repnz
mov
in
jg
and
fucom
adc
das
int3
fdiv
rcrl
leave
xor
sbb
mov
push
mov
sub
jbe
inc
data16
js
je
aaa
cmp
aam
xchg
stos
mov
mov
mov
imul
lods
repnz
inc
ja
loopne
jns
jp
lds
xchg
xchg
mov
sub
aaa
repz
sbb
int
or
mov
in
push
mov
jp
push
out
stos
jl
adcb
inc
mov
dec
dec
xor
xchg
cmpsb
pop
pop
jno
das
jge
stos
icebp
mov
sbb
pushf
iret
imul
popa
inc
je
push
and
ljmp
xor
sbb
sub
js
mov
stos
push
mov
in
adc
and
or
lock
push
jb
test
pop
and
stos
add
xlat
shl
adcb
int
mov
mov
push
push
std
scas
popf
xlat
pop
rcr
inc
lods
rcr
dec
fwait
test
andb
sarb
vmwrite
cmp
sub
jae
xchg
aas
lret
push
sarb
or
mov
inc
jb
imulb
sub
popf
test
pop
mov
fsubrp
jp
les
jg
xlat
inc
test
iret
rcr
ljmp
add
pop
lods
sub
or
scas
sbb
and
inc
mov
adc
inc
xchg
jne
daa
jge
xor
call
sub
push
icebp
add
frstor
xchg
pop
dec
add
xchg
out
scas
add
hlt
movsb
push
iret
shrb
fbld
lea
jge
mov
test
sub
inc
sub
add
fcmovnb
repnz
jmp
aad
test
ja
and
jno
in
cltd
or
inc
ds
repz
xchg
aam
cmc
out
cmp
pushf
dec
leave
in
shrl
shrl
or
loop
push
mov
mov
jecxz
outsb
xor
sbb
or
push
mov
into
sub
sahf
mov
inc
jge
jbe
cmpb
popa
push
in
lahf
fildl
sub
stc
xchg
das
jge
xchg
fadds
test
addr16
mov
jl
les
bswap
divb
orb
xchg
push
jnp
fnstcw
cltd
pusha
pop
push
shll
jp
mov
dec
imul
add
xor
xchg
mov
sub
rolb
mov
fs
cmpsl
in
out
adc
cmp
pop
outsl
sahf
fwait
repnz
inc
and
call
shlb
dec
dec
fstpl
shrl
pop
push
cld
mov
or
fstl
popf
sub
jo
jge
lods
jmp
mov
mov
int3
insb
pop
jle
cmp
sahf
andl
inc
into
and
das
sbb
sbb
test
add
js
aam
push
syscall
jnp
dec
mov
xchg
jo
pop
push
or
cmp
mov
adc
mov
std
clc
mov
pushf
iret
pop
dec
not
xchg
insb
dec
push
addl
in
pop
insl
push
mov
out
jne
icebp
bound
fdivl
bound
testl
cld
ljmp
test
mov
dec
jmp
and
fidivrs
dec
scas
lret
fldl
and
cwtl
movsl
and
push
pop
xchg
pushl
hlt
pop
sarb
adc
clc
arpl
dec
lock
push
fistps
scas
insb
fbld
hlt
sbb
push
jmp
movsb
lock
in
mov
cli
cwtl
cltd
ja
dec
mov
xchg
nop
orb
in
in
add
mov
hlt
imul
inc
pop
stos
lods
hlt
fstpl
or
cmp
mov
dec
mov
aad
sub
rclb
in
jnp
mov
iret
les
push
or
or
mov
and
adc
dec
push
lret
sbb
divl
mov
test
data16
add
push
fwait
mov
sbbb
jae
sub
mov
sbb
and
push
jno
jp
dec
pop
push
jg
cs
pop
mov
jbe
add
xchg
test
cmp
lahf
mov
adc
lods
push
xchg
imul
in
pop
sarb
daa
sub
push
hlt
movsb
pop
jb
xchg
sbb
dec
jmp
ret
add
mov
mov
cmp
jmp
jmp
les
cmp
loop
out
adc
mov
jne
in
sub
pushf
fnstenv
fsubrs
jg
dec
jo
push
cmp
xchg
adc
lods
xchg
lock
xchg
outsb
dec
in
and
dec
inc
mov
and
pop
sbb
xchg
add
xor
push
or
cwtl
xchg
cmp
out
ljmp
orb
sub
out
in
push
sub
sahf
mov
dec
cmp
pushf
sub
xor
aam
pop
imul
sub
pusha
push
popf
lods
int3
lret
std
xor
and
mov
xor
notl
call
rcrb
scas
call
add
jle
sbb
mov
repz
dec
mov
adc
jp
add
out
mov
sahf
fisttps
cmp
lods
aas
pushf
cmp
in
orb
or
addl
js
repnz
jbe
ss
pop
and
push
shrl
mov
ret
xchg
cltd
dec
cmpb
sarb
mov
aas
mov
les
int
movsb
sbb
shr
movsb
hlt
sbbb
imul
shll
je
sti
jae
inc
aaa
push
loope
and
ret
out
mov
pop
addr16
push
push
cltd
insb
jge
add
xchg
add
je
stos
add
xorl
mov
pushf
mov
adc
nop
jl
push
mov
cld
sbb
pop
into
loopne
imul
cmp
imul
ljmp
mov
out
out
cmpsb
inc
mov
inc
stc
jge
xchg
mov
adc
xchg
dec
mov
or
stos
daa
popa
fcmovnu
movsb
fwait
shrb
andps
and
incb
pop
fbstp
dec
or
sub
or
movsb
or
adc
cmp
leave
dec
movsb
jmp
add
dec
sahf
jp
popf
aas
xor
adc
sub
pop
fistl
push
adc
imul
or
aas
mov
mov
fwait
lds
insb
enter
or
fwait
test
pop
dec
loope
dec
fistps
inc
pop
or
hlt
mov
mov
ficoms
pop
jp
bound
daa
mov
daa
push
outsb
fwait
daa
push
inc
aas
mov
inc
dec
mov
xor
sbbb
jp
xor
addb
xchg
aas
adc
icebp
jne
rorb
movsl
mov
xor
mov
scas
dec
cmp
push
aaa
xchg
mov
mov
ret
jne
addr16
lods
xchg
mov
cmp
jns
mov
enter
imul
jmp
mov
gs
outsb
vmovsd
inc
cli
mov
mov
sub
repz
push
out
adc
xor
jb
adc
dec
mov
repnz
in
push
sbb
aad
in
outsb
addb
or
dec
pushf
je
mov
cltd
cmp
cmp
pop
out
cmpsb
movsl
xchg
xor
or
mov
aad
dec
std
push
push
ret
cmpsl
testl
lds
push
gs
outsl
sbb
insb
pop
aaa
inc
lds
jl
rclb
push
and
rorb
cmp
cmp
sbb
sbb
test
outsb
lmsw
mov
rorl
pusha
cmc
add
mov
push
cmpsl
cmp
clc
mov
leave
and
sub
jno
pop
push
popf
sbb
lock
jnp
sub
faddl
aam
hlt
push
sub
out
jge
stos
test
or
xor
test
mov
imul
dec
xchg
clc
test
cmp
dec
test
dec
push
xchg
popa
xchg
repnz
sub
lahf
nop
ret
xor
add
clc
xchg
add
aas
out
xchg
dec
test
negb
js
fildl
fisubl
push
adcl
out
lcall
int3
pop
stos
lcall
push
push
push
adc
add
out
xchg
dec
pop
je
ror
les
enter
and
outsb
adc
jmp
addr16
mov
mov
ja
lock
int
lock
lret
dec
scas
dec
adc
sub
mov
imulb
jecxz
repz
pop
enter
jno
jb
push
cmp
add
and
or
popa
mov
mov
mov
pushf
xchg
jp
push
imul
mov
xor
inc
int
jp
movsl
xchg
les
into
sahf
xchg
and
inc
negb
adc
std
jecxz
in
in
mov
imul
xchg
outsl
dec
repz
cld
rcrb
test
xchg
push
dec
jo
subb
call
jl
xchg
cmpsl
mov
imul
addr16
cmp
aaa
sahf
push
add
daa
clc
mov
negb
ja
inc
inc
jno
int3
and
imul
jle
push
in
inc
movl
mov
xchg
push
lods
hlt
outsl
cmpsl
mov
leavew
push
iret
mov
xor
outsl
scas
sub
or
sbb
test
jb
mov
xor
cli
xchg
sbb
xchg
xchg
sub
jg
jae
out
sqrtps
aas
mov
sub
pushf
call
pop
xlat
and
mov
push
pop
push
jno
arpl
test
push
in
pop
jp
add
xlat
popaw
fisubs
or
add
inc
fwait
orl
mov
mov
paddsb
add
int
dec
cld
push
xchg
in
mov
fisttpl
insl
cmp
jnp
mov
lock
sub
int
shl
je
adc
xchg
jecxz
shr
cli
push
sub
aas
pop
daa
mov
pop
sub
pusha
push
pushf
jl
jno
scas
leave
outsb
movsl
xor
sub
jp
pop
js
push
shll
repz
mov
in
dec
test
idiv
dec
or
and
and
scas
xchg
bound
mov
ret
loop
aam
sbb
stos
adc
cltd
int3
jge
and
pushf
sbb
adc
mov
sbb
xchg
iret
pushf
mov
shlb
mov
jae
out
out
es
adc
cs
add
push
mov
cmp
add
daa
ljmp
jae
test
sub
lahf
bound
test
sbb
rcrb
or
ret
sarl
xchg
pop
add
in
sti
lcall
add
jno
or
call
xchg
or
jnp
xchg
sbb
sti
pushf
push
mov
bound
iret
fsubl
mov
fwait
xor
cmp
js
push
repz
lds
dec
add
outsb
fistl
add
cwtl
and
test
or
enter
lcall
test
mov
ret
dec
loopne
or
mov
bt
pop
jp
pop
mov
jg
cli
scas
sub
gs
or
das
adc
or
inc
movsl
mov
inc
sahf
jb
hlt
and
es
fidivs
lods
shrl
cmp
call
xor
mov
jl
outsb
cmpsb
mov
and
jmp
shrb
or
adc
and
lcall
sub
lods
mov
adc
adc
stc
ret
mov
lcall
or
ror
jp
cmc
arpl
adc
inc
cmp
cli
inc
or
cmpsl
push
pop
out
divb
ret
mov
shrb
rorl
ss
mov
sbb
jecxz,pt
pop
jp
add
cmpsb
jnp
push
xchg
loop
inc
xor
sti
fs
mov
and
sbb
mov
mov
xchg
sahf
fcomip
pop
loopne
jno
jg
lcall
and
xorl
push
jg
into
js
outsl
imul
out
movsl
lcall
popa
lea
popa
sub
cmc
jl
aas
movsb
cwtl
mov
fstl
cli
adc
adc
mov
out
in
mov
lods
jb
fidivrl
pop
push
adc
inc
pop
ljmp
outsl
dec
dec
push
cmc
add
insl
dec
and
daa
cld
or
mov
jnp
or
fcoml
push
cmpsb
jnp
inc
in
mov
xor
xchg
jge
push
push
cmp
push
sub
sub
dec
mov
bound
jns
pop
test
sbb
pop
push
push
loopne
pop
cmpsb
jmp
pop
sub
push
scas
pop
cld
inc
mov
sbb
out
shrb
shl
das
lods
xor
mov
dec
ss
xor
loopne
pop
sbb
arpl
imul
jbe
xchg
out
adc
and
add
dec
test
and
and
cld
shll
subb
mov
xlat
or
dec
cltd
pushf
les
mov
loop
lock
dec
pop
fiadds
pop
into
pop
adc
adc
repz
fcom
cmp
arpl
adc
and
add
arpl
mov
xor
dec
mov
xchg
jmp
jo
mov
mov
mov
jmp
mov
adc
hlt
xor
mov
xchg
aas
pop
jmp
cmpsb
push
rorb
jo
cld
fnstsw
xlat
jb
add
ss
cld
jp
fisubs
mov
add
sub
shrb
or
push
xchg
rolb
sti
divb
andnps
mov
pop
add
rcrl
jmp
in
push
lds
loope
push
and
pop
lcall
mov
jmp
xchg
and
mov
enter
mov
lret
push
push
iret
js
shll
cmp
mov
xor
mov
sub
rcl
inc
icebp
xchg
pop
clc
mov
insb
jl
bound
sahf
and
aas
repnz
xor
pop
cmp
adc
mov
loopne
ret
sub
aaa
mov
push
outsl
dec
ja
sahf
cld
mov
xchg
stos
stc
movsl
pop
jecxz
lock
test
lea
sub
into
and
rclb
sbb
enter
jne
aad
adc
and
mov
xor
or
sti
lret
jnp
fnstsw
repnz
lock
cld
cmp
test
sub
cld
out
in
sbb
fs
mov
call
pop
out
mov
dec
mov
pop
adcb
out
ss
lea
pusha
jae
ret
cmp
mov
pop
add
mov
inc
cmpsl
nop
jbe
stc
clc
cmp
jl
dec
out
dec
inc
cmp
gs
aad
stos
dec
pop
fistpll
cmp
imul
jbe
adc
sbb
adc
cmp
add
or
fcmovnu
movsb
mov
push
xchg
cmp
jb
pushf
mov
notl
insl
loope
repz
adc
rclb
rclb
mov
xor
jecxz
scas
push
push
movsb
nop
frstor
cmpb
dec
lds
cmp
pushl
sub
hlt
mov
xor
cmpsl
push
sub
mov
pop
das
sbbl
fstpt
fs
shll
add
aad
repz
cltd
jle
call
push
fiaddl
mov
jl
lcall
pop
imulb
lock
imul
xor
in
int3
test
lods
or
add
cmp
orb
push
inc
add
aaa
sub
or
test
xor
test
push
pop
cmp
push
insl
rclb
idivb
lock
int
rorb
rol
fwait
cmc
ret
popa
out
aaa
iret
stos
xchg
mov
or
repnz
push
mov
or
push
js
push
hlt
notb
mov
inc
insb
cmp
jp
rclb
pop
loop
idivb
mov
test
lahf
sbb
insb
insb
movsb
lret
jbe
jo
aad
call
out
gs
movhps
imul
mov
pop
rorb
push
arpl
or
fmuls
loopne
mov
mov
or
sub
xor
fcomps
fldl
pop
xchg
shll
arpl
mov
push
mov
push
add
sub
jbe
pop
add
jp
sbb
or
xchg
icebp
push
clc
xchg
sti
scas
pop
push
xor
in
mov
cli
add
or
clc
out
imul
push
outsb
adc
pop
or
cmp
jb
sti
inc
addr16
gs
mov
cld
jbe
inc
xor
sbb
es
cli
jge
mov
cmc
ret
out
ror
cmc
push
sti
mov
cmpsl
pop
loop
xchg
lret
cmpsb
scas
xorl
pop
in
mov
adc
pop
xor
cmp
sbb
test
push
mov
loope
push
push
mov
or
or
mov
movsb
out
cmpsb
sbb
insl
xchg
push
out
fldt
insl
inc
repnz
shlb
out
jg
push
sbb
jbe
mov
into
ljmp
pop
fldt
pushf
dec
imul
pop
and
jno
mov
leave
sbb
adc
sub
cld
bound
cs
sti
pushf
out
cmp
lock
and
popf
pop
jp
popf
lret
inc
pop
sbb
nop
jmp
jnp
fcoml
sbb
roll
dec
cmc
std
adc
pusha
movsl
add
and
imul
les
lret
push
jno
iret
xchg
or
mov
adc
leave
jne
cmp
jmp
arpl
mov
nop
lcall
jnp
lahf
leave
sub
dec
ret
add
xchg
push
cmp
inc
mov
loop
push
sub
pop
push
repnz
mov
dec
jbe
fdivs
bound
stos
xchg
pop
mov
mov
pop
dec
and
pop
imul
test
fdivrl
insb
mov
xchg
mov
sbb
ja
scas
out
mov
int
lret
iret
and
ret
mov
flds
mov
mov
out
adc
inc
inc
hlt
pop
dec
push
mov
arpl
inc
xor
add
scas
fistps
jmp
subb
or
jl
out
push
pop
frstor
mov
jl
pusha
add
shrl
inc
loop
and
sbb
inc
in
sub
sub
aam
xor
sub
pop
jb
negl
aas
lcall
add
push
sub
mov
push
pop
mov
mov
mov
stc
fmull
xchg
sub
dec
mulps
testl
jb
outsb
xchg
mov
pop
mov
push
mov
iret
jg
jno
mov
mov
das
scas
dec
dec
push
adc
insb
jno
xor
or
lods
add
xchg
enter
inc
mov
inc
pushf
call
nop
xlat
hlt
ret
aaa
into
adc
jnp
ret
sub
pop
cmpsb
nop
mov
sub
cmp
cli
xor
dec
xchg
sub
imul
mov
fwait
push
cs
or
xorl
and
sbb
rcr
jno
stos
ds
mov
push
add
js
scas
sahf
movsb
or
push
enter
mov
lock
jne
lahf
iret
mov
je
stc
imul
xchg
fcoml
xor
adc
call
mov
xchg
mov
in
daa
test
mov
es
rcrb
js
push
sub
cmp
outsl
cwtl
in
cmp
inc
frstor
or
test
cmp
cmpl
xor
push
push
gs
mov
mov
cmpl
jp
nop
lock
mov
mov
sub
cmc
dec
pop
mov
and
cli
mov
xor
xor
jecxz
stos
sub
aaa
cmpb
incl
mov
mov
lods
cltd
fiadds
and
pop
out
dec
outsb
or
adc
ja
mov
icebp
cld
fnstsw
mov
fs
pushf
in
fcoml
cld
out
lea
xor
call
adc
ret
arpl
lcall
and
shlb
mov
icebp
cmp
sub
mov
adc
stos
mov
push
xor
into
fidivrl
stc
and
hlt
xor
cmc
push
xor
ja
jge
pop
jnp
bnd
cmc
test
add
jmp
sub
push
arpl
movsb
clc
js
dec
xchg
out
scas
jbe
test
pop
gs
jmp
scas
lret
dec
mov
clc
cmp
arpl
xchg
cwtl
xor
sbbl
outsl
or
inc
push
sub
jmp
popa
lods
int3
popf
movb
in
xchg
test
sahf
pop
sbb
inc
mov
push
hlt
xor
jbe
test
ret
jmp
xchg
hlt
mov
adc
lods
pop
sarl
cmpsb
imul
add
xchg
testb
adc
lods
subb
call
mov
aad
push
movsl
push
movsl
pushf
jecxz
mov
or
or
adcb
in
xchg
addr16
lods
out
xchg
mov
mov
roll
adc
sarb
pop
fwait
jecxz
ljmp
nop
imul
mov
and
add
jno
xchg
mov
outsl
jno
or
cs
mov
loop
and
outsb
es
pop
out
loop
orl
cmp
mov
stc
loopne
daa
mov
cmp
sti
addb
jge
pop
adc
leave
mov
cltd
testb
and
push
pop
mov
mov
jge
jge
mov
sbb
test
stc
stc
cli
or
cmpsl
cmp
jno
popf
add
test
push
ret
bt
push
mov
daa
pop
sub
push
push
lea
out
mov
cmp
push
and
loopne
push
dec
test
cmp
add
jbe
mov
sub
scas
fimuls
mov
inc
mov
test
dec
popa
xor
fwait
jns
xchg
jb
jl
sub
xor
int3
add
xor
cmc
jl
std
mov
cmc
pop
dec
mov
add
and
fdivrl
inc
pushf
mov
push
push
mov
xor
push
xchg
aaa
sbb
int
test
adc
fiadds
test
shlb
sbb
aam
sub
repnz
dec
test
enter
pusha
test
or
jne
xorl
pusha
js
mov
stc
sbb
or
or
mov
subps
insl
inc
cmp
loope
outsl
fwait
movsb
and
clc
insb
shll
xor
outsb
call
jmp
xchg
sbb
xchg
jae
bound
fadds
cmp
and
inc
xchg
jmp
sti
cmpsl
mov
popa
mov
fsubl
inc
lods
outsl
adc
cmp
cmpsl
imul
iret
sbb
sub
cmpsl
adc
mov
push
push
or
push
jb
mov
fisttpl
aam
adc
pop
jo
xchg
pop
xchg
fsts
inc
mov
xlat
loopne
push
pop
jns
xchg
push
dec
mov
ja
inc
jle
dec
stc
cmpsb
jbe
cmp
icebp
mov
mov
push
mov
mov
int3
pop
mov
xor
xchg
pop
mov
jg
ror
jbe
insl
adc
ss
jg
lcall
lcall
call
pop
scas
jnp
roll
jno
push
xchg
mov
ja
mov
ja
das
mov
ljmp
cmp
loope
movsb
jl
cmp
jne
push
hlt
int3
into
pop
inc
ss
mov
aas
or
jecxz
sbb
fwait
xor
cli
cmp
std
cmp
adc
xchg
jno
or
lret
mov
ds
cmpb
sbb
fwait
push
mov
or
mov
dec
ret
mov
jp
gs
jbe
mov
cld
je
xor
xchg
inc
mov
or
data16
add
inc
mov
fwait
daa
mov
mov
stc
mov
sub
add
jno
das
ja
add
mull
dec
pop
aas
sbb
movsb
mov
je
ss
fcompl
dec
mov
cmp
sahf
mov
and
psadbw
dec
out
mov
and
sub
xor
ss
cli
inc
inc
mov
xchg
in
sub
ljmp
shl
xchg
jecxz
xchg
enter
lahf
xchg
out
mov
push
cmp
jmp
push
mov
and
icebp
xlat
out
and
repnz
dec
iret
in
in
xor
out
xorl
cmp
ja
pop
pop
mov
or
es
cmpsl
jnp
dec
cld
pop
icebp
jmp
mov
sbb
push
push
repnz
repz
outsl
pop
sub
mov
test
ss
sub
outsl
shlb
pop
jmp
push
cltd
inc
mov
ljmp
gs
pop
cld
or
jne
fsts
dec
add
mov
jno
test
add
xlat
in
pop
jnp
push
pop
adc
out
pop
push
inc
pop
mov
pop
and
sub
divl
mov
int
sbb
or
and
or
dec
cmp
push
popa
add
xchg
loop
scas
fs
inc
pop
hlt
out
push
jnp
js
movsl
cmp
jmp
movsb
sub
popw
xchg
sti
test
out
jmp
sahf
dec
test
in
hlt
xchg
insl
jno
ror
dec
das
mov
in
mov
cmp
movsl
icebp
and
fstl
test
negb
pop
shll
push
push
inc
add
jmp
clc
push
adc
add
fildll
data16
cmp
jae,pn
cmp
outsl
mov
aam
rcll
mov
decl
enter
xchg
or
ret
mov
mov
scas
or
pop
pop
sub
jns
dec
inc
imul
push
and
shll
mov
imull
addr16
out
jmp
adc
jge
arpl
xchg
or
push
dec
loope
xor
aaa
cmpb
pop
bound
and
cmp
xchg
lds
insl
sub
and
adc
push
out
xchg
or
je
mov
inc
dec
push
out
cmp
ljmp
movsl
push
inc
mov
aam
push
ljmp
ret
jle
adc
and
xor
aad
dec
sub
mov
mov
mov
bound
mov
imul
and
xor
xchg
lods
mov
insb
loopne
lods
push
push
stos
aam
mov
cmp
ljmp
pop
inc
in
pop
lds
pusha
inc
outsb
ficomps
xchg
jp
mov
and
leave
or
rorl
add
and
test
or
jo
pop
jecxz
inc
xchg
xchg
test
nop
sub
out
cmpsl
push
dec
stos
leave
pop
sbb
outsl
frstor
nop
scas
or
add
xchg
fcoms
fsubs
inc
ret
mov
ds
into
and
xor
mov
fiaddl
outsl
fcoms
ret
add
pop
cmp
inc
mov
cltd
jl
es
push
inc
ret
xchg
push
mov
adcl
stc
inc
add
lahf
dec
jnp
xchg
in
enterw
mov
fildll
fcomi
pop
aad
mov
adc
mov
xchg
cld
sub
stc
or
dec
mov
pop
rorb
out
inc
int
stc
ret
cltd
sub
ds
mov
xchg
xor
ja
repnz
testb
or
sbb
jb
or
xor
dec
add
xor
aaa
lret
pop
sub
xchg
add
jo
aad
js
out
sahf
es
pushf
icebp
std
js
js
scas
fildll
ljmp
imul
or
cmc
notb
or
imul
aaa
and
lods
pop
xchg
sbb
jp
push
and
dec
sub
lret
dec
gs
and
sbb
sti
mov
cmpsl
mov
push
mov
cs
xchg
cwtl
inc
cltd
mov
cmp
gs
adc
sti
adc
cmpsl
inc
jle
xchg
or
loope
push
cmp
cmpb
sbb
ss
in
mov
sub
test
xchg
push
pop
movsl
pop
xor
cmp
jle
cwtl
dec
rorb
add
push
aas
add
lret
cs
dec
bnd
fimuls
and
leave
xor
add
or
jbe
roll
stc
je
pusha
xchg
arpl
add
fadds
movsl
xchg
sbb
rcrl
mov
fs
mov
jno
ss
in
insb
pop
pop
aas
leave
inc
jl
lds
jle
test
cmp
push
shlb
fwait
loop
repz
dec
lcall
jb
pop
xor
int3
gs
mov
fwait
xchg
inc
or
add
mov
or
fs
ja
pop
ljmp
loope
hlt
repnz
xchg
std
cmpsl
imul
or
sbb
sbb
js
sbb
es
negl
inc
xchg
stc
inc
mov
jmp
call
jae
lret
std
icebp
add
adc
mov
out
or
fsubs
jno
push
repnz
mov
mov
pop
pop
or
mov
add
pop
adc
or
stos
xchg
movsb
gs
jne
test
add
hlt
mov
push
mov
sub
lret
pop
push
or
je
fmull
sti
xchg
inc
int3
dec
outsl
movsl
xchg
les
nop
xor
inc
mov
xor
ja
mov
cltd
or
insb
loopne
bound
aaa
icebp
lds
cmp
aam
cmp
xor
push
leave
mov
xor
das
lock
xor
xchg
xchg
out
adc
fs
lea
insb
fistpl
das
jbe
and
hlt
add
std
xor
mov
or
decb
adc
icebp
sbb
mov
adc
lahf
adc
or
adc
or
jl
push
shll
into
outsl
pusha
mov
xchg
push
fucomip
fisttps
jg
push
out
xor
pusha
icebp
sub
scas
sbb
jae
jg
inc
xor
fwait
test
popf
push
je
ja
and
in
ss
jmp
mov
push
adc
ja
cmc
jno
mov
cmpsb
jg
imul
fistpl
pop
cmpsl
xchg
arpl
and
sub
push
push
cmp
out
jb
inc
cmp
xor
adc
into
inc
iret
test
mov
js
adc
lret
xor
add
lds
out
lret
or
repz
nop
arpl
aam
jns
aam
lret
roll
in
adc
jnp
mov
add
adc
stos
jp
fcoms
push
enter
pushf
xchg
pusha
std
sbb
jne
or
shlb
inc
je
mov
pop
mov
cmp
cmp
aad
fidivrl
push
xchg
cs
and
push
jo
imul
cmp
je
fcoms
and
mov
leave
rcrl
and
fcoms
ret
and
mov
pushl
stos
inc
dec
stos
cmp
dec
pop
inc
xor
pop
sbb
shlb
es
lahf
cli
mov
inc
outsl
scas
jo
inc
push
into
and
int
lds
sbb
ljmp
jb
rclb
fidivl
sbb
gs
cmp
xchg
xlat
lock
mov
hlt
call
shrb
push
sub
enter
sub
ja
arpl
xor
incl
popa
in
mov
movsl
movsb
jle
or
mov
sub
jbe
lods
xchg
push
sub
push
xor
popf
fsubrp
xchg
adc
int3
das
xchg
sbb
jne
jne
dec
idivl
out
es
push
pop
sbb
bound
xor
mov
cwtl
jae
xchg
rcll
push
outsl
in
jg
loop
mov
call
adc
call
repz
pop
push
sti
std
inc
out
push
cwtl
push
pop
pop
xchg
mov
mov
fistl
decl
mov
scas
sub
push
jns
mov
push
and
push
pop
pop
inc
cltd
scas
cli
enter
popf
mov
nop
xlat
pop
dec
int3
in
mov
cmp
xchg
cmp
outsb
bound
adc
mov
repnz
inc
into
cmp
fs
int
jge
adc
sub
fbld
fwait
cmpsl
lret
inc
inc
stos
xchg
cmpl
pop
sub
stc
mov
cmp
in
daa
rorl
mov
fs
xor
xchg
cmp
xchg
std
call
mov
out
pop
jns
xchg
les
xor
mov
add
adc
or
adc
jecxz
inc
movsb
xor
call
int
dec
test
lcall
test
icebp
sbb
fnsave
js
cmp
or
mov
pushf
pop
cmp
push
dec
mov
repz
adc
icebp
cmp
out
cmp
inc
jb
jo
fstl
movsl
and
arpl
in
fs
inc
fwait
mov
push
scas
clc
inc
incb
jl
jg
xchg
fisubrs
enter
mov
dec
loop
dec
sub
test
xor
dec
outsb
mov
mov
loope
or
inc
dec
ljmp
and
sbb
rolb
xor
mov
mov
stos
jge
pop
stc
out
mov
pusha
out
sub
mull
xor
jnp
xchg
subl
dec
and
adc
js
push
lahf
neg
sub
mov
push
sbbb
je
cltd
fildl
iret
fidivrs
inc
sahf
mov
out
mov
in
out
push
inc
push
mov
inc
add
dec
popa
inc
data16
inc
mov
movsl
enterw
aaa
mov
inc
xchg
mov
jnp
mov
pop
jo
movsl
popa
ja
test
arpl
mov
fwait
sbb
add
jnp
sarl
cli
mov
inc
adc
scas
das
lods
rcrl
pop
xor
shl
add
loope
jns
and
xor
or
add
cmp
fisubl
ror
addr16
cld
xor
loop
cmpsb
sub
cmp
mov
jecxz
sbb
mov
mov
mov
enter
push
jnp
mov
das
jge
pop
and
cmp
inc
iret
inc
add
imul
jle
test
or
pop
std
loope
mov
inc
test
clc
jge
cmp
out
pop
cmp
mov
sub
xchg
addr16
xchg
add
daa
lods
inc
mov
sbb
fnstenv
sbb
in
ficoms
xchg
mov
jae
inc
sbb
cmp
sub
lds
and
test
leave
daa
xchg
lods
fsubrs
mov
inc
inc
repnz
popf
pop
insl
lret
dec
cmpsl
jp
mov
and
repz
add
loopne
rclb
xchg
fidivrs
fistps
sti
add
jg
xor
scas
dec
aam
pop
stc
or
inc
push
cmp
mov
cmp
xchg
jmp
and
stos
adc
cmp
mov
dec
sbb
popl
aad
sbb
mov
shr
xor
ret
cli
cmc
add
and
or
out
in
pop
dec
repnz
mov
pop
cli
test
xchg
stc
mov
cmp
icebp
stos
loopne
pop
ja
jne
mov
push
scas
in
movsb
imul
enter
mov
and
jle
adc
jl
and
xchg
daa
mov
js
or
pop
sub
inc
stos
and
movsl
jb
sub
jle
push
cli
rolb
dec
jns
xor
stos
xor
add
rcl
mov
fsave
pushf
into
mov
sub
shlb
and
fsubr
roll
inc
test
adc
test
xchg
xchg
stos
pop
loop
add
mov
mov
insb
repz
mov
cmp
pop
out
xchg
and
cmp
loopne
inc
xchg
jp
test
lcall
push
rcl
jle
xor
or
or
or
jecxz
mov
scas
dec
inc
std
dec
xor
push
lock
pop
fldenv
fcmovne
xchg
xlat
inc
xchg
adc
sbb
in
push
scas
lcall
clc
and
add
jo
add
push
out
fstpt
and
inc
adc
imul
das
scas
jge
inc
pop
lea
mov
imul
lret
aas
mov
mov
into
mov
testb
adc
xchg
cmp
mov
push
or
movb
imul
adc
sub
push
out
jmp
movzwl
sahf
add
pop
dec
push
adc
xor
in
adc
jno
std
jmp
inc
sub
popa
imul
mov
ret
jo
fdiv
sub
push
gs
adc
dec
jae
hlt
insl
ficompl
sub
stos
xor
es
lcall
push
lds
inc
lock
stos
pop
mov
sbb
lcall
mov
mov
pop
clc
xor
adc
jo
or
jb
mov
jb
stc
movb
in
push
xchg
and
xchg
sbb
jbe
sbb
cmp
cmp
xor
inc
xorl
imulb
push
inc
push
data16
push
ficoml
push
xorb
test
aad
jns,pt
iret
mov
out
mov
scas
mov
test
push
mov
xchg
fstp
sub
add
dec
scas
fdivl
pop
rolb
jnp
adc
cwtl
aam
je
push
sub
shlb
mov
xor
mov
cs
nop
arpl
and
cltd
lock
jle
roll
addr16
xor
xor
inc
push
fisttpl
filds
jne
push
stos
or
sub
in
jnp
jae
jne
int3
adc
dec
aad
sbb
test
fcompl
jmp
out
add
xchg
sbb
or
out
mov
in
push
cltd
xor
and
stc
fwait
mov
lods
mov
pop
hlt
jg
xchg
sub
lahf
sbb
les
dec
pop
or
xchg
sti
push
ja
sub
mov
lret
sbb
hlt
push
mov
jbe
add
or
stc
ljmp
in
and
cli
mov
aaa
and
add
dec
and
dec
imul
lret
std
movb
mov
xchg
adc
mov
dec
xor
ja
push
xor
popf
dec
loop
out
push
mov
mov
jecxz
in
pop
repnz
mov
leave
ror
sbb
push
ficomps
xchg
invd
stc
repnz
stos
adc
xchg
push
xor
ss
adc
pop
imul
adc
xchg
mov
sbbl
loope
outsl
push
add
les
clc
sbb
sahf
repz
stos
and
and
sbb
mov
inc
mov
dec
inc
pop
xchg
ja
bnd
and
lods
mov
fimuls
mov
sub
int3
mov
adc
es
fnstsw
in
clc
ljmp
mov
add
scas
push
mov
add
lock
mov
sbb
dec
mov
pop
imul
push
andb
add
jne
ret
mov
add
mov
push
push
fists
cmpsl
shr
movsl
or
loopne
adc
fcoml
xor
push
xchg
into
inc
adc
hlt
inc
pop
rcrl
pop
adc
mov
jbe
jns
nop
fcoml
push
in
sub
add
cs
mov
push
jnp
cs
mov
rorb
stos
jns
imul
mov
add
cmp
mov
push
lret
out
fistpl
add
adc
ss
aad
fwait
mov
iret
stos
lds
pop
out
aaa
aam
pop
or
lods
sbbb
std
addr16
in
cs
iret
mov
repnz
leave
sbb
out
adc
fsubrs
or
and
lods
mov
notb
jl
or
xor
sub
add
or
mov
sub
inc
cli
test
jp
jb
sub
push
mov
cmpsl
push
and
xchg
sbb
jmp
sbb
or
scas
push
pop
jp
pop
ret
jno
pop
pop
sub
ss
sub
cs
jae
lret
idivl
xor
fsubl
pop
push
fldt
imul
ljmp
out
push
gs
dec
and
outsb
ljmp
xor
cmpsb
sbbb
and
test
cmp
imul
sub
icebp
push
call
ret
cmpsb
js
mov
mov
adcb
out
hlt
xchg
dec
add
repz
xchg
sbb
mov
jp
inc
push
mov
mov
and
mov
bound
jne
cmp
rcrb
inc
jg
xchg
inc
dec
mov
es
and
mulb
lahf
mov
mov
clc
push
sbb
jne
je
dec
das
xor
repz
lcall
leave
adc
fildl
std
mov
sub
jg
aam
fistl
jmp
fmul
lods
inc
mov
lods
iret
fcomip
adc
pop
data16
mov
mov
cmc
push
cwtl
mov
push
loopne
inc
dec
or
push
jmp
mov
mov
movsl
subl
xchg
mov
dec
push
in
xor
shlb
push
pop
js
jmp
std
add
xor
pop
sub
shl
jnp
or
paddsw
xchg
cs
outsl
loopne
cmc
xchg
int3
cs
xlat
sbb
mov
pusha
push
lcall
inc
and
rcll
xchg
sahf
jno
inc
lods
inc
aas
xchg
mov
sbb
clc
fistps
xchg
jle
push
lcall
mov
int3
or
mov
ljmp
pop
mov
dec
lret
stc
in
fistps
outsl
fisubs
push
test
sub
pop
fwait
sar
je
rclb
out
popa
dec
lea
jbe
xlat
les
aaa
or
and
hlt
fwait
inc
aad
pop
pop
xor
enter
clc
or
xor
jnp
in
iret
adc
ficoms
mov
bound
lret
xor
inc
out
adc
xchg
push
pop
xchg
xchg
or
cmp
fs
push
cli
cld
fistps
movsl
sub
cmpsl
xchg
daa
jecxz
fsubrs
and
and
push
pop
sarl
outsb
bound
jae
dec
addr16
pop
das
cld
inc
mov
aam
insl
adc
neg
mov
xor
push
jne
in
les
test
jns
mov
adc
xor
out
or
in
add
js
dec
mov
push
add
in
cld
shll
mov
sbb
pop
adc
aam
add
lods
sub
pop
jb
aaa
fistl
test
or
mov
stos
inc
pop
pop
xlat
xchg
addl
push
xchg
gs
vaddss
scas
repz
mov
cs
push
xor
sbb
mov
xor
pop
out
and
pop
aas
cwtl
in
mov
aad
imul
decb
in
sbb
fistpl
xor
inc
mov
mov
gs
mov
and
push
fwait
notl
xor
add
mov
mov
dec
cmp
stos
stos
rolb
and
sub
inc
dec
call
incb
cmpsl
mov
push
add
dec
lcall
sahf
stos
rol
or
mov
arpl
sub
in
cmc
fisubs
cmc
adc
out
jl
sbb
and
inc
fmuls
jge
push
stos
mov
pop
ficoml
cmp
pop
or
xchg
in
orb
fsubl
or
cmpsl
popa
lods
lods
loope
mov
inc
aas
scas
addb
out
fwait
dec
mov
popf
xchg
and
lea
call
lret
sbb
inc
push
outsl
dec
mov
imul
jge
mov
mov
shll
fdivrs
push
cmp
lods
or
pop
inc
jo
loop
pop
test
fdivl
es
shll
cmp
je
push
mov
xor
sbb
sbbl
lods
fidivs
scas
inc
jge
sub
cmpsb
cs
insl
or
idivb
sub
pinsrw
or
sbb
push
dec
mov
mov
ret
pop
mov
jne
add
add
out
fiadds
pop
adc
scas
icebp
loopne
xorl
stos
add
cmp
pushf
push
les
cmp
or
ret
push
adc
mov
aaa
cli
sub
or
cmovns
cmpsl
enter
cs
enter
sub
lods
scas
push
or
xchg
mov
and
pop
aaa
xor
out
mov
and
cmp
mov
popa
ljmp
fs
ror
jb
outsl
and
fdiv
dec
shll
add
pop
cli
push
data16
mov
loope
mov
push
out
or
movd
pop
dec
ret
push
adc
jb
sar
out
mov
std
mov
lret
inc
jle
xchg
mov
inc
push
xchg
xchg
jnp
out
pop
sbb
or
push
bound
xchg
push
sub
cmp
aas
mov
xor
gs
xchg
xor
lds
test
push
mov
or
jae
add
iret
mov
inc
sbb
lods
pop
cmp
stos
inc
pop
out
sbb
pop
daa
je
fninit
mov
in
movsb
jecxz
cltd
movsl
mov
xchg
out
mov
out
fmuls
sub
add
ss
or
loopne
test
xchg
cmp
push
popf
add
mov
imul
xor
loope
push
in
jb
sbb
mov
jmp
pop
outsl
push
rclb
aas
dec
mov
rcrl
loop
xchg
or
cmp
inc
repnz
imul
nop
cmp
and
popa
in
lods
test
add
adc
arpl
adc
jecxz
fidivrl
fldenv
cmpsb
xchg
dec
pop
insb
lahf
jmp
hlt
jg
push
cltd
xchg
jmp
add
pop
pop
dec
dec
sbb
add
mov
arpl
popa
adc
xor
test
inc
stc
jo
int
jmp
sbb
cmp
mov
aam
jae
adc
movsl
into
data16
cmpsb
insl
mov
jmp
mov
jp
pop
int3
xchg
or
addb
jmp
cmpsl
jo
fildl
mov
into
sti
adcb
lret
out
dec
pop
xor
jno
jne
mov
push
iret
xor
imul
lcall
lods
in
lret
sbbb
pop
inc
dec
cmpsb
push
jns
push
fisubs
adc
lock
push
cmpsb
xchg
pop
jg
push
enter
mov
fdivrl
mov
fsubl
lahf
fs
push
cmp
repnz
lods
pop
and
std
in
int3
repnz
aad
and
repnz
fiadds
pop
adcl
sub
mov
jge
dec
or
or
cli
jp
push
in
pop
out
clc
adc
xor
xor
icebp
movsl
jns
add
arpl
jo
jne
sbb
std
cmp
jmp
popa
xchg
or
xlat
iret
xor
nop
lret
out
pop
xchg
xor
dec
xchg
je
shl
scas
testl
loop
ds
jg
add
dec
jnp
mov
add
ret
leave
sub
lock
iret
lods
and
imul
cmpb
std
and
inc
insb
mov
mov
roll
mov
call
cmp
fptan
ljmp
or
stos
push
cmc
std
rcrl
xor
mov
mov
in
mov
std
xchg
adc
mov
xchg
add
pushf
jle
inc
sarl
dec
sahf
dec
mov
repz
outsb
in
test
pop
add
test
out
mov
mov
jbe
mov
idiv
xchg
jp
outsl
shrb
scas
mov
or
ljmp
ss
test
pushf
cmp
lahf
mov
lods
out
loop
sarb
orl
fs
stos
ds
adc
mov
pop
or
inc
inc
aam
inc
leave
xor
cmp
je
aam
movsl
add
sbb
mov
and
hlt
push
mov
lods
aam
enter
cmp
dec
mov
pop
pop
loopne
das
les
xchg
cmp
imul
inc
nop
xor
scas
mov
mov
push
push
psubw
mov
cmp
mov
push
sub
mov
fists
adc
pop
sahf
sub
subb
dec
stc
das
bound
pop
cmp
add
fldenv
ja
mov
mov
and
pop
je
or
adc
jle
jne
mov
push
xchg
inc
lahf
mov
pop
arpl
bound
lret
jp
ljmp
scas
add
mov
sbb
scas
adc
fildl
int3
xor
popf
insb
imul
pop
dec
jnp
sbb
mov
int
xor
xor
xor
push
add
mov
test
repz
mov
inc
cld
repnz
cmp
inc
ja
push
lcall
mov
dec
jmp
lret
cli
movsl
es
cmp
stos
lock
rcl
les
or
shll
in
add
push
cld
push
in
in
mov
dec
imul
pop
push
pop
lock
mov
mov
mov
xor
pop
cmp
mov
jbe
loop
add
jmp
add
cmp
sbb
mov
adc
stc
ss
addl
popf
rcrb
sub
in
jb
nop
cs
push
pop
adc
je
dec
mov
push
mov
jno
cmc
dec
jle
mov
mov
xor
pop
xor
jmp
std
test
and
das
xor
bound
rolb
mov
dec
in
repnz
insl
adc
mov
lds
inc
scas
pop
rclb
sub
lods
daa
dec
and
int3
lods
pushf
and
mov
icebp
pushl
jmp
lds
xchg
mov
mov
jge
adc
icebp
push
dec
xchg
test
dec
push
jbe
mov
jecxz
sbb
jbe
inc
cwtl
adc
rcll
sbb
mov
dec
fcoms
cmp
popl
popa
addr16
jo
mov
jle
mov
rcr
rcrl
jo
sbb
loopne
aad
sbbb
in
scas
push
dec
sarb
mov
outsb
fisubrs
lods
xchg
notb
xchg
pandn
push
pop
mov
cwtl
lahf
pop
mov
cltd
or
xchg
cmp
jle
mov
in
add
popa
sbb
aas
pop
iret
movsw
addl
cmp
outsb
movsl
cltd
pop
inc
jge
fbstp
sbb
in
ds
mov
xor
cs
incl
and
daa
adc
cmp
cld
jb
mov
mov
mov
mov
xor
inc
ljmp
lds
aas
movsb
push
rolb
pop
ficompl
mov
lock
xchg
mov
sbb
gs
jae
es
jle
push
mov
ljmp
adc
jmp
xor
shrb
pop
mov
jnp
movsl
lahf
and
inc
test
in
mov
cli
add
xor
cwtl
addl
xchg
inc
mov
test
cmpl
xchg
mov
mov
fldl2e
pop
jl
mov
sub
gs
int3
repz
add
push
jge
push
jns
add
sti
xor
mov
inc
int3
or
ror
sub
push
popa
xchg
inc
dec
ja
and
rcr
iret
push
dec
mov
or
in
cmpsb
pusha
pusha
inc
mov
or
dec
popa
pop
out
sub
and
fwait
shlb
push
adc
mov
adc
mov
sbb
lret
pop
fs
sbb
lret
test
ljmp
insb
fisttpl
js
add
push
and
mov
stos
test
xor
push
mov
sbb
subl
or
std
push
je
add
and
dec
sub
inc
incl
sbb
xor
xor
cwtl
jmp
aad
popa
pop
mov
dec
and
loopne
in
repnz
and
push
xor
call
adc
mov
or
test
stos
test
inc
loopne
mov
or
xchg
aam
lahf
stc
mov
mov
inc
repnz
aaa
add
and
enter
stos
lods
inc
ret
into
int
cltd
clc
enter
cmp
out
mov
scas
jnp
aad
and
ja
mov
mov
adc
scas
sub
pushf
xchg
rclb
lahf
or
dec
test
and
or
mov
cwtl
adc
cld
lock
repnz
fs
push
paddb
sbb
add
fs
iret
inc
adc
xchg
push
retw
subl
mov
movsb
stos
jae
outsb
jno
push
rol
push
bound
sbb
mov
jl
push
dec
push
and
xlat
xor
jns
inc
push
or
and
sub
jns
inc
sub
sbbb
mov
add
inc
outsl
mov
fmuls
mov
inc
mov
loop
push
jne
jo
add
out
jo
add
sti
sbb
std
sub
sbb
xchg
push
cli
movsb
roll
cmp
je
subb
outsl
lods
in
jp
jp
xchg
lock
and
pusha
fnstcw
mov
pop
jb
jl
xor
addr16
sti
nop
addl
int3
push
push
bound
popa
popf
shll
sahf
mov
in
sbb
into
cmp
adc
pop
mov
vmovddup
loope
mov
xchg
or
dec
jl
ljmp
jne
pop
jne
push
pushl
xchg
stos
push
ret
cmp
mov
jne
cmp
mov
cmp
push
out
lds
fucom
push
sub
mov
dec
inc
pop
fmul
xor
popa
pop
mov
dec
pop
mov
push
push
fstpl
or
mov
insb
stos
fucomip
shl
das
and
fyl2xp1
push
pop
jae
leave
push
repnz
mov
ficoms
inc
nop
sub
jl
std
daa
mov
flds
push
lds
stos
mov
push
shrl
xor
iret
push
loop
popa
movsl
xchg
fs
rcrl
call
mov
xor
test
pop
and
test
aas
inc
out
fwait
jecxz,pn
cmp
sti
gs
insl
sbb
jae
in
sahf
push
std
test
jae
sarl
jne
fimuls
xchg
mov
adc
xchg
cld
jo
es
pop
loope
hlt
cmp
jo
stos
mov
jbe
sar
fdivs
lahf
xchg
mov
clc
imul
dec
sti
push
jle
mov
add
sub
mov
std
push
in
push
daa
lret
pop
sbb
mov
insb
insl
sub
scas
mov
dec
cmp
fwait
test
xlat
push
adc
pop
mul
xchg
sbbl
out
adc
popl
dec
ret
in
mov
icebp
xchg
std
popa
jl
mov
sub
repnz
negb
pop
mov
fbld
repz
lods
les
andl
insb
or
add
or
cwtl
mov
jo
jmp
sbb
or
sti
das
lahf
push
lcall
data16
call
incl
lods
cmc
mov
dec
das
scas
mov
lds
or
pop
fwait
mov
dec
mov
sbb
mov
jle
mov
and
xchg
in
pop
invd
pop
xchg
or
adc
test
pusha
jo
push
sbb
fwait
cli
xchg
mov
outsb
mov
jg
add
push
test
or
ret
sahf
shrb
pop
and
pop
mov
mov
fmulp
mov
jmp
notl
jbe
lret
pop
push
popa
mov
dec
add
jle
xorb
dec
js
mov
xor
test
test
jbe
xor
pusha
ljmp
inc
orb
push
jl
jecxz
pushf
jae
out
mov
lods
std
cmc
xorb
push
sub
fs
ss
xchg
arpl
jbe
mov
push
data16
jl
repz
xor
mov
mov
lret
inc
mov
xor
jg
std
mov
and
mov
pop
sub
push
xchg
push
adc
xchg
xor
xor
into
cmpb
pop
shl
cli
es
les
add
fildll
int3
mov
divl
sbb
cmpl
jg
adc
mov
xchg
lahf
and
xchg
jne
and
add
test
loop
insb
and
gs
inc
xor
jmp
sahf
ja
out
jnp,pn
jno
sub
push
mov
sbb
push
fldl
push
or
push
popf
xchg
push
and
into
lods
addr16
popf
lret
fstpt
sub
inc
dec
out
sbb
jl
rcrl
imulb
or
f2xm1
mov
sbb
bswap
xor
out
jae
cmp
test
jecxz
xchg
inc
xlat
pop
sbb
test
test
mov
lds
xlat
or
push
sub
in
in
cmp
xchg
xor
mov
mov
lahf
sub
add
xchg
cwtl
xor
jb
mov
push
add
mov
or
inc
jno
shl
and
pop
in
and
cmp
xor
int3
inc
push
sarl
ret
fcmovb
ret
pop
pop
xchg
mov
fs
movsl
insl
dec
jns
xchg
scas
adc
inc
push
inc
adc
ror
xor
dec
jb
pop
xchg
rep
cltd
pop
testb
inc
xor
adc
test
mov
int3
dec
and
dec
hlt
mov
fmull
addl
xchg
insl
vpshuflw
sbb
fs
mov
lods
lret
out
mov
jb
xor
sub
out
aas
xchg
dec
sarl
xor
stos
push
jl
ja
mov
outsl
inc
test
fcoms
dec
mov
xchg
flds
or
xchg
in
push
outsb
mov
mov
sbb
jle
jns
add
int
pop
mov
cmpsl
test
push
jo
fists
enter
aad
mov
push
xchg
fildll
testb
pop
mov
rorl
xchg
mov
adc
cmpl
shr
mov
cs
pop
xchg
jnp
inc
enter
dec
clc
inc
div
adc
daa
stc
push
movups
in
repnz
lods
mov
mov
sub
insl
out
inc
cli
dec
aaa
je
pop
xchg
icebp
pop
sub
pop
in
jg
jp
adc
add
out
jae
jns
jne
push
mov
xchg
fldt
movsb
or
pop
bnd
cltd
lea
xor
lea
mov
jmp
jno
push
cs
test
pop
sub
vminpd
loopw
inc
sub
into
xor
stos
mov
lret
lea
and
sbb
mov
jb
add
sbb
iret
cmpsl
push
pop
add
movsb
mov
repnz
pop
mov
xor
pop
jmp
notl
ror
rorb
jg
push
jae
sarb
lock
out
sub
outsb
push
push
popa
sbb
push
pop
mov
add
lea
lcall
push
cmp
adc
lcall
jo
popa
jle
or
mov
mov
adc
jle
fbld
out
mov
inc
das
xchg
jno
in
out
loope
loope
js
jg
dec
or
in
cmc
adc
mov
sub
rcl
lds
pop
stos
cmp
jae
sahf
pop
xchg
sarb
dec
std
mov
adc
dec
mov
test
add
pop
sub
mov
incb
add
push
hlt
sbb
test
ja
xor
adc
int
mov
mull
dec
mov
stc
daa
or
arpl
shll
adc
adc
adc
and
pop
pusha
fs
jge
xchg
jo
mov
mov
ss
push
cmp
cltd
std
fisttpl
outsb
jg
push
loope
jno
out
ja
sub
jg
push
push
pop
test
adcl
xchg
iret
or
or
adc
add
inc
subl
and
ret
ret
lahf
rorb
adc
push
repz
push
mov
iret
adcb
cmp
popf
cmp
add
iret
jae
lds
es
mov
or
xor
and
vmovntps
mov
call
sbb
pop
jp
popf
cmpl
fcoml
ret
int
into
daa
negl
sbb
push
adc
outsb
sbb
hlt
inc
roll
lds
pop
nop
add
pop
push
dec
and
push
test
jmp
xchg
std
andb
xchg
or
pop
and
nop
lret
jo
popf
out
in
jmp
test
inc
test
test
aam
jmp
ficoml
push
andb
pop
icebp
js
aam
popa
xchg
adcb
xchg
in
sub
push
std
or
jns
mov
mov
retw
push
dec
outsl
or
loop
xchg
jge
loop
xlat
inc
roll
in
popa
incb
and
and
in
cmp
dec
sbb
jle
mov
inc
movl
int3
cmpsb
stc
addb
sub
cs
mov
movsb
jae
popf
sbb
mov
fdivrs
jns
gs
imul
dec
inc
sub
xor
js
push
lods
push
jge
aaa
and
fistpl
popl
fnstenv
pop
xor
sbb
cltd
sub
push
test
dec
mov
out
push
mov
mov
and
cmp
add
mov
das
dec
xor
cwtl
lods
dec
or
in
call
push
mov
lret
pop
add
rolb
aad
lss
loop
int
mov
push
and
fbstp
fcompl
rorb
mov
push
test
xchg
inc
jns
adc
dec
mov
pop
jns
jle
mov
inc
cs
cmc
pop
cmp
jecxz
and
int3
xchg
xor
jecxz
ret
into
or
sbb
dec
fstpt
push
push
dec
in
and
adc
icebp
aas
aas
fwait
cli
loopne
fmul
cmp
or
or
pop
lods
pop
dec
sahf
mov
xchg
daa
mov
xor
divl
addr16
cmovge
call
jle
mov
pop
adc
aas
mov
xor
loopnew
or
adc
xor
adc
popf
sahf
fsubl
sub
dec
dec
sbb
mov
dec
lahf
mov
or
in
add
xchg
pop
movsb
js
stos
jns
popa
jp
and
mov
cmpsb
and
inc
adc
jbe
add
lea
jmp
loope
adc
inc
neg
stc
nop
mov
shlb
add
jo
insl
inc
push
cmp
int
inc
inc
dec
repnz
out
lcall
popa
pop
aad
cmpb
aad
imul
or
lahf
adc
daa
orb
and
ljmp
loope
testl
mov
mov
enter
cmp
or
iret
rclb
jmp
out
out
lods
scas
cmp
pop
add
sbb
mov
sub
inc
daa
push
sti
mov
andl
cmp
or
pop
das
insl
sbb
imul
jo
in
in
inc
fnstsw
adc
pop
lods
shll
add
test
jp
lods
cs
lods
std
xchg
xchg
jle
or
aas
test
jecxz
jns
mov
lock
ret
sub
inc
movsl
outsb
leave
sub
jl
dec
push
scas
aaa
or
and
adc
mov
sub
cwtl
int3
jmp
sarl
jns
push
cmp
mov
lret
mov
push
ljmp
add
dec
int3
aam
push
stos
xchg
xlat
dec
xchg
and
sbb
insl
ss
imul
cli
out
clc
add
sbb
mov
mov
insl
or
xchg
fnstenv
xchg
jmp
stc
inc
xchg
cltd
aas
aam
adc
pop
cmc
xor
repz
test
test
push
dec
cwtl
arpl
or
mov
sbb
popa
bound
and
sbb
mov
xchg
cmp
xchg
scas
sub
xor
sub
insl
stos
js
lods
mov
sti
xchg
outsb
loope
dec
mov
dec
shl
inc
xor
das
dec
push
movsl
xchg
mov
mov
stos
push
xor
and
push
sub
aad
push
outsl
dec
orl
mov
ret
pop
leave
insl
int3
lahf
push
popl
call
cmc
outsb
jge
loop
inc
lahf
clc
insb
dec
into
lods
inc
adc
inc
je
mov
jno
inc
cli
outsb
sarb
daa
adcb
ret
stos
sub
sbb
fwait
movsb
popf
rorl
mov
cmpsb
and
add
clc
loopne
test
jp
ljmp
jp
aad
test
jecxz
adc
pop
pushf
inc
push
and
jp
jmp
sub
jecxz
xchg
xchg
aaa
cmp
iret
xlat
mov
push
lret
mov
push
mov
cltd
add
xor
inc
daa
jno
or
jne
ret
xchg
xchg
sar
fisubl
jbe
add
js
je
outsl
lret
dec
mov
adc
hlt
daa
clc
xchg
out
xor
fmul
idivb
xor
nop
push
stos
frstor
pop
pop
addr16
sub
xchg
jne
mov
movb
fs
pop
push
cmpsb
popf
pop
jmp
xchg
test
cs
sub
nop
rorb
aad
mov
pop
fisttps
sbb
and
out
adc
js
das
repz
enter
push
stos
iret
popf
negb
hlt
xor
xorl
test
cmp
lcall
pop
xor
mov
aas
mov
addl
data16
jae
loopne
add
sbb
mov
cmp
adc
dec
ficoms
fmul
in
jg
cmpb
pop
mov
movb
pop
in
xchg
lock
loope
mov
out
iret
lods
sbbb
cmpsl
pop
in
out
into
pop
jno
popa
imul
lock
xor
push
and
or
jns
inc
test
jecxz
pop
and
lret
repnz
mov
negb
js
sub
fs
pop
maskmovq
mull
mov
xor
cmp
icebp
mov
xchg
loope
lock
xor
cmpsb
je
jno
sbb
cld
dec
and
xchg
fimuls
or
ret
sti
mov
mov
imul
xor
push
dec
es
jo
mov
add
aas
or
fwait
sbb
pop
test
stos
jmp
data16
dec
fstps
push
or
idivb
xor
jp
ljmp
ds
push
lret
aam
popa
and
mov
gs
add
mov
into
jne
mov
pop
and
daa
mov
jg,pt
cmp
dec
jbe
shrl
sbb
jae
mov
adc
aaa
int
sub
adc
dec
cmc
sbb
push
mov
cmp
xchg
and
fldenv
movsl
or
sub
decb
daa
cmpsl
add
add
test
dec
sbb
neg
out
jp
pop
xchg
rcrl
mov
dec
aad
movsl
add
mov
lcall
stos
adc
stc
add
sbb
sbb
std
test
mov
out
in
jnp
lods
mov
sbb
add
adc
add
lahf
out
fistps
cmpsl
int3
les
xor
rcll
ficoml
pop
jbe
das
push
xchg
push
aam
dec
mov
shlb
adc
mov
in
out
mov
dec
mov
lds
shlb
mov
clc
das
add
mov
fdecstp
adc
and
cmp
add
ja
fs
mov
mov
faddl
das
jbe
push
lret
daa
imul
fnstsw
mov
xchg
add
aam
mov
mov
inc
xchg
push
fidivl
and
aam
cld
shll
in
insl
jno
push
pop
mov
push
clc
xor
lahf
mov
xor
in
fs
data16
cmp
xchg
dec
sub
push
cmp
pop
and
dec
inc
sarl
cmpsl
outsb
in
sbb
scas
or
jbe
scas
pusha
aas
mov
cmc
rorl
lea
mov
push
in
inc
stc
arpl
loope
sbb
xor
dec
cmp
ds
push
add
mov
pop
xor
aad
or
adc
add
mov
je
sub
mov
xor
scas
jl
jg
cmpsb
push
fsubrl
cmpsb
pop
sub
cld
jb
fstpl
fucomi
sub
fldenv
fisttpll
sub
int
mov
mov
jns
add
jnp
outsl
lea
pusha
and
outsb
and
push
mov
push
push
in
or
jg
xchg
xor
insb
jg
jle
int3
push
scas
test
stos
cmpsb
sbb
add
sbb
sarb
mov
stos
stos
sbbb
pop
das
inc
loop
add
push
xchg
sub
cmp
aam
mov
jl
mov
pusha
xchg
cld
jae
add
cmp
in
xor
mov
popl
decb
and
int3
lea
mov
out
sbb
test
mov
cmpsl
outsb
les
mov
aaa
cwtl
cmp
out
and
mov
int3
pop
shrl
inc
std
or
fimull
icebp
pop
int3
in
sbb
mov
test
mov
mov
xlat
and
xor
rorb
and
pop
lods
jns
test
test
in
mov
mov
mov
push
xchg
add
jne
call
and
loop
jnp
cmc
mov
ja
insl
or
dec
push
outsl
lret
push
repnz
pop
push
mov
push
ret
dec
xchg
add
out
idivb
mov
je
cld
dec
adc
fisttpl
lea
dec
xor
dec
or
xor
lret
mov
xor
xor
ficomps
push
stos
jbe
sahf
cmp
call
lcall
dec
dec
js
leave
inc
xchg
mov
mov
test
aad
xchg
dec
or
dec
jge
xor
sbb
test
in
add
insl
cmp
repnz
push
fs
sub
shlb
cmc
movsb
jne
push
icebp
sbb
ss
in
mov
out
lods
adc
dec
gs
jbe
inc
inc
xchg
cmpsl
pop
jle
test
inc
mov
mov
leave
cwtl
repz
cmp
repnz
sub
cs
sub
test
js
xchg
or
push
pop
cmc
in
pop
aam
test
mov
fldenv
movsb
dec
shl
scas
popa
mov
lods
test
and
insb
or
ret
fsts
mov
lret
out
pop
and
js
cmp
mov
or
nop
stc
xchg
adc
gs
mov
xlat
cwtl
pusha
mov
dec
mov
mov
xchg
daa
pop
lcall
pop
mov
bound
push
addl
test
in
pop
int
ss
cmp
test
lahf
lea
lds
jbe
adc
sub
pop
jmp
mov
es
xor
cmp
in
or
dec
test
mov
movsb
enter
ds
daa
nop
add
lock
cmpsl
orb
cmp
push
ret
das
pop
lods
pop
inc
stos
sub
cmpsl
xchg
out
pop
ret
jl
cvtps2pd
push
jge
cmp
sbb
mov
push
ljmp
pop
incb
dec
pop
ret
pop
ret
push
sahf
idiv
into
xorl
mov
push
push
cmpsb
mov
fiadds
stos
adc
out
cmp
addr16
leave
imul
les
push
in
mov
rorb
dec
mov
mov
clc
jge
outsl
into
xor
inc
inc
push
icebp
je
clc
into
adc
lods
into
mov
out
or
mov
ror
and
loopne
sub
ljmp
ss
pushf
add
mov
in
inc
cmp
lret
and
xchg
aaa
sbb
jno
xor
cwtl
inc
jne
or
mov
xchg
sub
lret
dec
js
jecxz
xor
repz
pop
test
scas
imul
clc
mov
loop
jmp
mov
cmp
fisubl
roll
and
gs
xchg
sub
dec
jo
fstpt
les
jecxz
xchg
ds
sti
dec
fnstenv
aam
adc
stos
pushf
jge
aaa
inc
push
movsb
in
ret
mov
test
insl
jmp
iret
jns
and
leave
pushf
pusha
mov
mov
cmp
insb
jle
mov
mov
dec
inc
negb
xchg
pusha
sbb
mov
mov
jbe
xlat
jnp
mov
mov
inc
lods
mov
or
in
jmp
lcall
in
loop
pop
pop
xor
ja
xchg
popa
push
repz
mov
fsub
jmp
push
pop
jnp
add
mov
pop
add
jp
fstpt
inc
cmp
mov
push
inc
push
xchg
outsl
push
clc
iret
adc
jecxz
fwait
mov
fistpll
shl
pusha
xorl
addr16
shll
add
or
xchg
in
cwtl
add
inc
dec
jecxz
add
sbb
dec
fnsave
jmp
repnz
jnp
cmp
push
xchg
mov
gs
in
insl
fsubl
repnz
lahf
adc
pop
fadd
mov
fs
test
fbstp
xor
popf
popa
imulb
leave
jle
jmp
fnsave
sub
push
in
add
pop
cs
test
pop
mov
and
ret
cmp
outsb
cmpsl
mov
test
dec
mov
xor
rorb
into
jecxz
popa
dec
lock
mov
add
rorl
loope
iret
push
sub
andl
sbb
push
pop
xor
pop
rcr
jge
leave
sbb
jbe
lcall
and
arpl
cmp
push
mov
divb
jp
sbb
mov
fildl
sub
dec
jp
jns
cs
scas
mov
dec
movsl
out
fidivrl
fadds
lret
xor
mov
aam
stos
test
loope
inc
ficoms
mov
leave
stc
fwait
hlt
divl
xlat
test
mov
sub
inc
sbb
clc
add
push
cmpsl
insb
xor
add
sub
je
cmp
outsl
aad
sti
es
repz
jb
in
or
xlat
push
aad
pop
mov
sbb
mov
lcall
xor
sbb
fistps
jp
pop
ficoms
shll
cmp
inc
adc
and
and
fdivl
add
sub
or
sbb
dec
pop
jg
stos
mov
fmull
inc
clc
aas
arpl
inc
aas
cmpsb
outsb
mov
lret
push
pop
arpl
vpshufhw
in
xor
iret
cmp
arpl
push
sub
cmpsb
in
cltd
repz
daa
adcl
jp
pop
ret
mov
mov
jecxz
inc
dec
cmc
mov
cmp
lods
data16
mov
pop
inc
loop
test
mov
mov
repz
shlb
xor
outsl
dec
xor
test
fidivrs
dec
adc
push
mov
mov
xchg
adc
adcl
jp
cld
or
pop
adcl
scas
cmp
imulb
xor
cmp
aad
jae,pn
mov
or
imul
popf
dec
mov
or
in
inc
mov
cmp
add
jge
mov
ljmp
push
insb
push
inc
fs
xchg
dec
outsl
dec
xor
subb
rcrl
out
jmp
shll
sbb
test
insb
jnp
cmp
imul
dec
mov
scas
test
arpl
jne
sbb
push
lret
add
lcall
outsb
sub
popa
or
test
pop
enter
push
sub
push
sbb
pop
loope
clc
shll
cmc
mov
push
fs
in
jae
inc
jp
cmpsb
add
push
les
xor
out
mov
sarb
push
loop
test
scas
lds
adc
shlb
in
sbb
sahf
ja
gs
jge
mov
sub
xor
jb
insb
jno
sbb
xor
es
adc
jo
add
and
je
jne
xchg
and
or
jp
jne
loop
in
mov
and
cmp
mov
clc
jp
clc
fdiv
jb
sbb
pop
adc
je
mov
clc
hlt
cmp
jl
jb
xlat
lret
pusha
pop
or
mov
mov
jbe
or
push
push
jne
outsb
xchg
cmp
dec
or
push
dec
insl
dec
mov
xlat
push
call
and
pop
pop
fucomi
cmp
arpl
lcall
mov
out
mov
lds
ret
fidivs
stc
add
push
xchg
pop
lods
lods
faddl
movsl
mov
in
adc
push
inc
mov
test
push
xchg
jp
enter
mov
stc
scas
push
loope
jae
push
cltd
push
nop
dec
dec
mov
out
jmp
cmp
fists
pop
push
leave
notb
sbb
loop
xchg
sarb
fnstcw
loopne
pusha
cwtl
aas
test
sub
cmp
jbe
xor
cmp
imul
shrl
iret
jnp
fcmovnu
es
jns
mov
gs
imul
es
mov
dec
popf
push
mov
cmc
sbb
mov
sti
mov
repnz
pop
xor
or
test
cmp
arpl
sub
jle
fcoms
adc
sbb
pushf
mov
adc
jne
fiadds
xchg
xor
jmp
sti
sub
mov
mov
rclb
fdivs
cmc
push
jne
mov
aam
inc
decl
insl
sarb
xor
pop
xor
inc
fstpl
pop
int3
popf
pop
sbb
adc
movsl
mov
mov
pushf
xchg
add
cmp
mov
adc
mov
inc
cltd
or
iret
push
hlt
xchg
push
sbb
test
cmp
cmpsl
loop
push
js
aam
rorb
adc
push
push
dec
call
pop
daa
or
jmp
inc
adc
fsubs
aam
cs
lret
add
mov
mov
orl
movsb
test
ja
sbb
push
pop
xor
orb
jno
or
dec
push
mov
cmp
xorb
xor
jo
arpl
fnstsw
fwait
jg
fidivrl
shll
mov
mov
ret
dec
rcll
sub
jecxz
inc
test
sbb
mov
xchg
add
or
mov
sub
mov
and
xchg
mov
jmp
addl
mov
lret
das
mov
outsb
roll
xchg
push
and
hlt
mov
and
add
hlt
bound
xchg
jge
lcall
mov
adcl
add
inc
inc
or
aam
insb
pop
add
jnp
vpshaw
pop
xorb
xchg
pop
rolb
out
pushf
push
outsl
daa
fldenv
in
rorb
add
adc
sub
mov
and
lods
xor
outsl
and
sbb
mov
mov
mov
add
out
jb
fsub
adc
inc
or
popa
pop
ret
and
inc
test
jecxz
and
lea
fwait
mov
pop
xchg
cltd
les
xor
mov
cmc
subl
rcr
and
rclb
pop
inc
ss
sbb
lock
jb
aaa
int3
cli
jns
xor
mov
pop
in
jno
push
mov
movhps
outsb
add
add
test
les
test
in
mov
push
mov
inc
push
push
lods
mov
cs
jne
scas
xchg
fstps
sub
push
xchg
or
push
cmp
insl
lahf
xchg
sbb
insb
inc
push
xor
movsl
in
mov
andl
push
fwait
cmp
jle
mov
xlat
sbb
ret
loope
xchg
jle
jmp
adc
clc
sub
shll
adc
xchg
xchg
mov
pusha
mov
test
sub
and
inc
test
pop
add
mov
lahf
pop
add
push
js
aad
fcmovnbe
fs
lahf
and
xor
sbb
sub
mov
sbb
loope
pop
bound
incb
test
jge
lcall
daa
out
push
jp
add
in
lea
loope
shrl
sub
xchg
iret
cs
scas
jge
sbb
popf
idivb
pop
inc
jle
js
lds
das
cmp
and
ja
test
mov
or
xor
fs
mov
iret
push
and
lret
add
aam
sub
loop
jbe
roll
iret
cld
inc
lret
push
cmpl
sbb
sahf
dec
or
adc
push
and
or
imul
les
and
or
and
addr16
cmp
mov
stc
mov
scas
or
or
clc
bound
xchg
mov
shrl
mov
sbb
pop
xchg
sub
clc
mov
stos
loope
outsl
inc
daa
mov
inc
sar
xor
mov
and
push
pop
jns
hlt
arpl
and
sti
inc
daa
fs
mov
fistl
jb
adc
mov
clc
hlt
mov
pop
out
xchg
sbb
mov
int
out
xchg
pop
adcl
sub
ds
cltd
push
int3
xor
mov
ret
roll
int3
jmp
cltd
cld
jb
sbbb
mov
stos
cmp
push
repnz
sbb
loopne
call
pusha
out
loop
fucomip
sub
je
es
lahf
pop
or
in
sub
sbb
mov
fbstp
mov
aas
cmp
lahf
adc
cwtl
mov
add
adc
mov
icebp
sahf
xor
loop
and
or
mov
dec
and
jle
test
push
pop
cmp
push
loopne
mov
fcoml
ss
popf
dec
pop
dec
shl
fisubrl
or
xchg
push
xor
outsb
sub
pop
pop
jns
jns
and
fists
jmp
pop
mov
and
push
lods
rorb
imul
frstor
or
mov
hlt
add
cli
pop
insb
xchg
xchg
fildl
cmp
daa
rcrl
out
arpl
sbb
push
adc
int3
xor
pop
popa
mov
fiaddl
xor
add
stc
add
dec
jns
andb
push
dec
sti
jnp
mov
stos
insl
fsubrp
dec
loopne
fs
and
arpl
or
das
dec
stc
adc
push
jecxz
shlb
xchg
xchg
adc
mov
test
jecxz
mov
cltd
push
das
repz
mov
insl
xchg
and
cmp
std
mov
and
insl
lret
adc
adc
sub
outsb
loop
neg
jecxz
popf
xchg
dec
and
lret
jecxz
rorb
lahf
stos
lahf
adc
iret
jecxz
jle
adc
ds
daa
adc
mov
and
xchg
sub
add
imul
push
insb
ret
leave
cmc
mov
sbb
fiaddl
mov
popa
push
mov
movsb
stos
sbb
sti
jbe
jae
dec
pop
outsb
pop
iret
inc
xchg
jnp
fistpl
push
xlat
ds
movsb
imul
pop
cmpsb
jns
push
clc
arpl
mov
test
pop
and
mov
fwait
iret
sbb
push
loopne
add
sbb
setp
andl
push
cmp
cmc
stos
push
js
mov
scas
or
cmpsl
arpl
cmp
sbb
cmpl
xlat
insl
sbbb
sbb
xchg
fwait
pop
aaa
fadds
aam
mov
mov
loopne
mov
push
ja
cmp
mov
repnz
xor
in
movsl
jl
mov
out
pop
das
call
mov
adc
dec
mov
jb
bound
sti
jp
rorb
mov
iret
pushl
mov
or
jmp
jecxz
popa
or
xor
jno
cmp
enter
cli
push
inc
sbb
outsl
mov
in
jle
and
in
stc
int
and
lds
pushf
sbbb
movsb
inc
cmc
out
out
jg
or
fbstp
test
stos
stos
ja
subb
cmp
scas
pushf
loope
mov
sbb
mov
push
inc
pop
mov
mov
mov
inc
ret
call
and
sub
jmp
cmp
ret
outsb
jo
test
mov
jnp
lock
xchg
lds
fs
pop
cmp
mov
mov
mov
clc
sahf
scas
pop
or
fmul
imul
outsb
insl
sub
push
out
mov
xor
fsubp
pop
rcrl
fs
fdivr
push
and
mov
cmp
repnz
pop
sbb
pop
shrl
mov
add
sahf
jge
insl
xorb
roll
aad
cmp
mov
jp
dec
adc
push
scas
ds
je
inc
ja
sbb
fdivrs
dec
outsb
mov
ret
in
lods
lahf
push
fsubl
std
dec
lcall
fidivs
stos
mov
push
cld
sub
sarl
sahf
add
xchg
movaps
std
sbb
sarl
mov
outsl
popf
mov
add
movsl
outsl
mov
cs
jge
jno
addb
bound
ret
inc
push
dec
sbb
ljmp
ficoml
mov
pop
sub
pop
fildl
mov
inc
dec
xchg
hlt
call
xchg
push
fs
mov
data16
mov
popf
push
rclb
cmp
cmp
adc
push
jl
cmp
in
pop
xlat
ret
xchg
addr16
inc
mov
or
outsb
mov
fsubs
aas
jne
pop
orl
int3
push
int3
xchg
push
cmp
movsb
test
outsl
out
sbb
inc
fs
stos
insl
sub
sti
sbb
bound
mov
hlt
sub
enter
add
imul
stos
aad
notb
mov
dec
add
and
cs
xor
jne
sub
dec
mov
imul
incb
inc
jns
adc
sub
mov
in
aaa
popa
and
fs
sbb
fisubrl
loopne
loopne
and
dec
push
rclb
inc
stc
jle
push
ja
cltd
imul
pop
fiaddl
jne
or
adc
pop
ror
or
arpl
out
jns
lcall
in
jecxz
shll
int3
stos
pop
nop
sbb
push
dec
stos
dec
jo
jbe
sub
lret
mov
mov
out
shll
xchg
push
lea
js
gs
scas
dec
jbe
addr16
push
cmp
call
rcr
and
cmc
mov
sti
test
xchg
pop
inc
add
mov
pop
or
mov
jnp
xor
insl
fisubs
mov
mov
les
pop
std
lahf
sbb
ds
jno
mov
mov
out
int
mov
push
adc
imul
push
push
pop
xchg
push
dec
mov
adc
lods
dec
mov
xor
or
dec
mov
or
push
mov
rcrl
cld
and
fistpl
mov
clc
jle
mov
pusha
lods
cli
fcompl
leave
or
pop
scas
fs
or
popf
pop
jb
mov
pop
pop
mov
cwtl
pop
dec
push
sub
push
sub
dec
xor
into
sbb
push
jl
clc
sbb
shl
lea
fstps
lret
cld
ficomps
jnp
jge
sub
xchg
cltd
jae
sarl
ret
pop
xchg
jb
lods
cmpsb
cld
mov
bt
xor
ret
in
push
jne
lock
movsl
dec
cltd
loope
inc
fcmovnb
adc
or
mov
gs
movsl
inc
cld
cli
movsb
xchg
sbb
sbb
loop
hlt
clc
cmp
clc
sti
inc
inc
gs
pusha
negl
js
movsl
mov
repnz
out
clc
jne
xor
mov
jmp
leave
jle
mov
out
pushf
enter
inc
scas
fdivl
fwait
pop
xchg
loope
pushf
into
jle
xorb
lds
dec
pop
xor
pop
gs
xchg
and
iret
mov
into
repnz
daa
dec
mov
adc
mov
sbbl
dec
cmpsb
add
cmp
data16
cmpsb
loope
or
rol
xor
stos
ret
and
lret
in
push
add
mov
rcr
pop
xchg
xchg
dec
ficomps
dec
mov
mov
pop
popa
cmp
lods
pop
push
movsl
adc
cwtl
hlt
aad
out
inc
sub
cmc
and
push
insl
mov
fstpl
and
into
push
lret
or
mov
sahf
and
out
lret
ret
sbb
and
in
and
adc
mov
mov
roll
orb
mov
imul
push
mov
inc
loop
dec
sbb
movsl
ja
sti
sub
stos
push
adc
in
aad
sbb
lret
mov
adc
add
popa
push
mov
mov
stos
push
adc
cmp
iret
pop
test
jnp
add
mov
xor
add
push
aas
sub
jae
ret
scas
mov
jo
sbb
push
bound
jmp
aam
outsb
xchg
inc
or
sti
jmp
ffreep
fstpl
lahf
test
insl
or
mov
lahf
je
pusha
inc
mov
mov
sbb
jbe
cmp
or
pusha
cmc
pop
test
xor
lods
mov
jbe
mov
pop
pop
fisubs
push
popf
sbb
cmpsb
jecxz
inc
jno
test
xchg
sti
jg
fcmovne
cltd
test
inc
sbb
inc
movsl
test
mov
lea
sbb
imull
mov
jns
inc
mov
int3
hlt
dec
rclb
andb
enter
adc
adc
push
loope
cmp
xchg
pop
lret
and
test
dec
repz
sbb
add
mov
orl
ds
mov
sbb
push
scas
mov
push
dec
roll
insl
aas
pushf
test
sbb
ds
cld
stos
xchg
sub
fsub
and
sub
movsb
loop
xchg
ficomps
pop
popf
mov
pop
outsb
adc
mov
add
setg
cmpsb
mov
sbb
add
mov
sbb
mov
stos
leave
inc
rcrl
mov
insb
push
stc
les
lcall
mov
mov
adcb
repnz
imul
dec
ljmp
insl
call
into
dec
stc
pop
mov
dec
je
movsb
sbb
hlt
sbb
cld
imull
into
dec
fsubrs
add
aad
xchg
iret
cmp
ret
inc
in
lret
push
mov
mull
push
xchg
cwtl
ljmp
cmc
pop
cmp
sbb
jae
lock
fs
mov
or
xchg
cmp
sbb
add
ret
xchg
push
gs
scas
out
xchg
dec
orl
pop
ffree
adc
jle
jg,pt
test
call
cmp
xor
and
jge
add
sub
jl
xchg
mov
xchg
xor
cmp
mov
movsl
xchg
jb
jns
jnp
mov
push
imulb
add
cmp
push
mov
inc
xchg
loopew
sub
xor
pop
lea
sbb
pop
mov
in
mov
add
mov
lock
push
push
out
xchg
xchg
popa
mov
pop
dec
jp
or
stc
jne
dec
xor
insl
adcb
or
jb
add
scas
std
fmuls
shlb
enter
and
sbb
mov
out
and
jbe
adc
popf
inc
neg
inc
sub
outsb
sub
scas
jo
mov
or
enter
mov
gs
imul
mov
insb
and
cmp
out
aas
adc
lock
sub
or
lret
bound
xchg
call
pop
test
stos
push
shrl
xchg
jae
xchg
or
out
xchg
popf
cmpsl
inc
std
cmp
inc
ds
daa
cltd
or
andb
adcb
aas
mov
jmp
lea
fdivrl
pop
in
lods
inc
movsb
bound
mov
xchg
pop
loop
andb
xor
mov
repz
stos
push
loop
dec
ret
js
mov
and
shlb
cmpsb
push
outsl
ds
cli
xchg
dec
rol
mov
xchg
mov
aam
pop
sahf
mov
nop
mov
xor
adc
loopne
jbe
mov
or
ffreep
and
jmp
dec
xchg
or
mov
jg
add
jnp
adc
arpl
dec
repnz
jb
or
movsb
loopne
shlb
js
pop
adc
test
mov
lods
jle
cmp
clc
jnp
mov
dec
cli
aam
loope
in
repnz
cmc
pop
jno
insb
in
in
test
push
popa
std
ret
fdivl
call
add
dec
pop
lock
data16
arpl
jb
push
js
pop
sbb
in
mov
loop
test
daa
xor
mov
mov
dec
popa
xor
xor
test
mov
xchg
adc
dec
out
iret
cmp
int3
pop
lods
xchg
pushf
insb
xchg
adc
add
fsubs
lret
and
adc
pop
add
jb
mov
pop
mov
mov
repnz
lock
jp
cmp
test
mov
sbb
push
ror
mov
cmp
loop
cmpsl
push
movl
fdivs
adc
fsubrl
pop
mov
lds
ss
movsl
sbb
mov
add
les
repz
pop
pop
xorl
jns
fsubr
adc
adc
lcall
dec
enter
rorl
xchg
cmc
and
xor
es
lea
out
jno
dec
nop
sub
lds
aas
popl
out
dec
aaa
cs
nop
lods
ret
mov
dec
lahf
adc
mulb
scas
cmp
bound
fwait
xchg
cltd
out
int
push
testb
out
arpl
jmp
inc
mov
lock
call
push
outsl
push
call
pusha
pop
cmpb
and
or
popf
aam
lods
vmread
jl
inc
ror
xor
in
lret
ret
dec
fs
js
push
outsl
call
loop
dec
lock
or
inc
xor
xchg
mov
ror
pop
push
jnp
sub
xchg
cmp
scas
imul
add
and
inc
sbb
xchg
jge
subl
stos
out
pusha
or
sub
jle
push
popa
jmp
ret
es
ja
push
aaa
and
jne
int3
sbb
fdivrl
test
hlt
pop
adcb
shrb
stc
mov
sbbb
mov
jmp
mov
xchg
int
inc
icebp
or
jecxz
or
mov
or
sub
xchg
je
mulb
push
sbb
leave
ds
inc
pushf
daa
sub
inc
mov
ss
cmpsl
pop
pop
xchg
rcrl
ss
add
das
jo
aas
aaa
loopne
inc
mov
negb
aaa
jae
dec
imul
repz
das
push
inc
mov
mov
dec
lock
jmp
lcall
jnp
fsubrl
lret
jns
mov
xor
movsb
test
sahf
add
loopne
xchg
loopne
cld
out
bnd
fdivrl
cmp
dec
rorl
sub
add
jmp
jp
sarb
lock
jae
xor
cmpsw
nop
popf
mov
stos
adc
sub
mov
hlt
and
jmp
fimuls
cmpb
rorl
loop
ljmp
dec
mov
pop
inc
inc
mov
cmpsb
push
or
sub
hlt
mov
mov
iret
bound
mov
mov
sbb
xor
ss
mov
cltd
stos
dec
add
enter
popa
xor
mov
inc
sti
xor
jb
inc
ret
leave
or
jae
and
dec
ljmp
dec
outsb
mov
not
lret
pop
bound
xor
add
out
iret
aad
addr16
dec
out
test
pop
mov
jge
addr16
js
push
stc
es
repnz
cmp
dec
mov
inc
pop
clc
pushf
insb
xor
add
push
mov
sbb
outsb
jae
lcall
mov
out
in
mov
inc
loopne
lods
in
cmp
and
jb
mov
lahf
mov
pushf
push
insl
rcrb
jg
lods
fiaddl
mov
mov
ret
outsl
test
add
das
push
push
push
xchg
fwait
dec
imul
data16
cmp
add
sub
xchg
push
mov
dec
sbb
out
or
inc
cli
sub
mov
fs
sbb
push
mov
mov
push
lcall
cs
mov
lahf
lods
fs
jno
scas
or
sbb
cwtl
in
ret
lea
dec
or
mov
or
into
enter
mov
jmp
jns
sub
cmp
clc
clc
inc
xchg
jmp
jae
cmp
mov
inc
and
loopne
les
push
mov
mov
es
gs
sti
cmp
inc
jmp
les
xchg
add
lods
addb
scas
mov
inc
jnp
dec
push
mov
mov
inc
clc
pop
icebp
pop
ret
cmp
popa
push
and
jmp
nop
mov
xchg
jbe
daa
push
daa
mov
mov
sarb
aam
addr16
push
std
mov
fdivs
cld
push
mov
jecxz
fsubrl
xchg
ds
ljmp
jb
mov
pop
xor
out
or
jl
fwait
xchg
imul
pushl
leave
aam
shlb
idivb
dec
and
cmpb
adc
cmpb
adc
mov
inc
arpl
xor
shll
add
repnz
mov
sub
xlat
mov
fildl
jne
inc
pop
or
je
cmp
sub
and
lcall
pop
imul
xor
lcall
loop
shlb
subl
dec
and
rorl
hlt
repz
add
lock
fcomp
mov
das
out
mov
cmpsb
repnz
cs
and
pop
ja
mov
jle
and
jns
mov
jo
mov
aas
pushf
loop
mov
aaa
add
lea
imul
sbb
bound
ds
icebp
or
xchg
stos
xor
test
sbb
jge
and
jno
mov
xlat
repnz
xor
add
push
mov
rcl
mov
sub
mov
xchg
cmpsb
repz
pop
shrl
xor
insb
adc
testl
imul
aas
es
adc
cs
lods
test
mov
dec
push
push
repz
lcall
sub
xchg
adc
out
imull
and
xlat
das
or
fisttps
sub
inc
in
sub
test
xchg
xor
sub
push
call
and
sub
aam
test
xchg
stos
mov
fisubs
inc
pop
call
sbbb
adc
fisttpl
xchg
mov
arpl
pusha
jge
jg
xchg
cmc
mov
xchg
shrl
fstpt
in
jo
jp
mov
push
fstp
mov
adc
add
pushf
adc
lds
pop
lock
fdivr
mov
cmp
push
dec
push
pop
sbb
and
adc
sarb
lea
fistpl
dec
lcall
push
mov
pop
sub
lds
sarl
test
pop
and
and
out
xchg
insl
push
daa
idivl
ljmp
or
push
pop
hlt
test
cmp
mov
fldcw
jmp
inc
ret
fadds
sahf
and
ret
dec
mov
jle
dec
push
js
sub
mov
int
push
xor
divl
ja
in
dec
xor
dec
and
daa
pop
add
out
cld
pop
jl
ss
xchg
sbb
lea
popw
pop
out
sbbl
mov
add
xchg
pusha
cmp
inc
push
or
mov
orl
mov
arpl
frstor
jns
push
sbb
data16
xor
fldcw
popa
mov
sub
or
cmp
and
pop
pushf
or
lds
ljmp
nop
mov
and
mov
shrl
ret
das
xlat
and
scas
add
or
sbb
dec
mov
in
rcr
icebp
xchg
dec
in
cltd
test
and
push
jb
gs
movsb
xor
enter
push
fnstcw
dec
pop
movsl
aas
out
lcall
jbe
fsub
imul
fsub
sub
outsl
scas
test
sub
adc
push
lods
mov
cmp
jmp
inc
jb
out
ret
inc
loopne
and
adc
jno
jb
fs
int
dec
adc
add
test
jge
lret
loope
mov
ret
push
xor
loope
or
sub
or
pop
push
jmp
push
daa
mov
adc
arpl
stos
or
in
jl
insl
adc
popa
mov
sbb
cmp
icebp
mov
mov
pop
and
mov
mov
dec
iret
lods
aad
fcoms
jae
cmp
pusha
test
and
popa
lods
stc
mov
movsb
jge
outsb
daa
sub
jmp
mov
es
into
cmp
jo
push
icebp
ret
mov
mov
es
shlb
xchg
mov
sub
pop
mov
lods
push
test
dec
leave
jnp
jg
push
test
fcmovb
leave
gs
outsl
sbb
sbb
imul
pushl
das
test
dec
test
adc
arpl
shlb
fistl
dec
adc
subw
std
lret
mov
cwtl
lea
dec
cltd
inc
nop
adc
stos
or
mov
ret
fldl
push
xor
movsb
jp
cmp
scas
je
or
outsb
shl
shrl
insl
shlb
movsl
dec
and
fwait
pop
or
iret
sub
jmp
jne
lahf
cmpsl
stos
das
push
popa
cmp
inc
mov
out
mov
push
fsubs
gs
pop
xorb
mov
lcall
xchg
mov
ret
leave
dec
xlat
push
in
push
inc
stc
ret
mov
dec
xor
adc
lcall
xchg
test
dec
push
imul
out
sub
inc
cmc
or
aad
je
int
leave
scas
outsl
xor
sub
out
in
push
scas
nop
andb
rorb
insb
jo
cmp
xor
or
test
sbb
jge
pop
xor
sub
icebp
dec
fs
mov
mov
xor
lret
cld
int3
jno
cltd
icebp
call
push
fs
push
shlb
dec
xlat
cli
push
cmp
mov
ljmp
in
sbb
mov
je
xchg
xlat
pop
and
ds
stos
addps
repnz
insb
cmp
aaa
daa
shll
addr16
ret
out
mov
sub
test
mov
mov
pop
mov
or
ja
inc
pop
rorb
mov
into
cld
pop
stos
xlat
rcrl
or
shrl
insl
mov
push
insb
push
idivl
cmc
push
mov
lret
dec
in
aad
fwait
add
jne
jae
mov
fadds
lods
std
int3
out
mov
push
sbb
sbb
add
mov
jo
xchg
in
or
xor
xor
dec
cltd
mov
mov
mov
xorl
or
xor
push
adc
sbb
int
popf
or
jp
pop
cmp
push
mov
insb
pop
fimull
and
inc
push
inc
adc
repnz
dec
ss
pop
fildll
mov
arpl
dec
dec
sub
pop
mov
pop
icebp
inc
and
ss
ret
sub
and
jnp
sub
jae
call
lcall
data16
inc
mov
cmp
in
gs
rorb
mov
icebp
es
test
fdivl
fistpl
inc
pminub
push
xchg
sbbl
push
ficoml
fsubs
orb
jge
sbb
sub
mov
gs
in
xchg
push
pop
aam
mov
dec
cld
sbbb
stc
sub
xchg
xchg
lock
imul
je
inc
pop
cmp
clc
xchg
mov
xor
jb
divl
xchg
sub
call
add
jle
or
div
push
jle
push
mov
push
xchg
push
pop
jp
out
inc
inc
out
push
xchg
js
movsb
imul
in
test
cmp
adc
inc
fistl
cmpsl
mov
int
int3
xchg
cmp
inc
ret
hlt
mov
ss
add
andb
loopne
pop
aam
pop
out
cwtl
push
adc
outsl
mov
adc
push
xchg
push
fs
mov
and
mov
aaa
outsl
je
in
movsl
pop
sbb
mov
xchg
and
cmp
cwtl
stos
mov
mov
xor
mov
aam
dec
or
sbb
cmp
xchg
cmpsb
test
stos
je
pusha
mov
les
jne,pt
xchg
inc
dec
push
test
aam
ficompl
jg
sbb
xor
sbb
in
adc
les
xor
mull
jae
loopne
fadd
push
adcb
fisttpll
ret
daa
insl
popf
push
loop
aad
push
xchg
inc
lock
push
int
aam
mov
ja
pusha
mov
aad
xchg
cs
mov
test
push
aam
push
test
or
lret
test
and
sub
stc
sub
scas
xchg
shl
adc
outsl
cmpb
mov
cwtl
and
shrl
mov
movsl
and
outsl
add
inc
inc
mov
jo
js
push
incl
dec
lea
xor
outsb
iret
jno
les
test
push
popf
test
daa
sub
scas
pop
add
xor
push
xor
cmpsb
bound
pop
cmp
xor
or
fs
aad
lea
xchg
stos
ret
adc
pop
pushf
out
mov
jp
ja
xchg
pop
lock
mov
sbb
das
lret
pop
pop
xor
orb
mov
out
inc
lock
and
mov
ja
xchg
sbb
dec
and
add
in
jp
cmp
insb
imul
cli
mov
in
sahf
les
sbb
popf
mov
ljmp
rorb
sahf
sbb
stos
mov
mov
mov
ret
pop
jle
mov
sti
jns
fbstp
lods
xchg
dec
inc
testb
or
mov
shlb
and
lock
pop
aad
xchg
leave
iret
ja
fdivl
jp
negb
stos
xor
test
jno
leave
xlat
jl
or
aas
push
loop
mov
ficoms
push
or
pop
dec
pop
pop
out
or
scas
jo
js
ror
mov
xchg
jne
push
inc
jle
cmp
jmp
loop
in
lock
sbb
sahf
sub
mov
add
cmpsb
nop
repnz
outsl
mov
mov
xchg
cltd
cs
mov
jb
mov
fdivs
fnstcw
or
push
dec
pop
fimull
loope
push
adc
mov
sbb
or
mov
adc
in
jecxz
jmp
pop
jg
mov
sub
sbb
out
push
cmpl
stos
mov
jg
xchg
fiaddl
mov
leave
in
cs
cmp
xor
das
lcall
in
or
test
mov
sbb
fadd
push
out
insl
sbbb
hlt
repnz
addl
mov
pop
lret
pop
hlt
inc
jg
xor
mov
imull
outsb
movsb
jb
xchg
xor
sub
add
bound
inc
nopl
or
adc
jmp
hlt
add
xchg
out
sbb
push
std
and
mov
lock
sarb
mov
adc
daa
inc
pop
mov
push
xor
add
adc
out
outsb
adc
ret
inc
jge
sti
out
cmpsb
mov
pushf
push
mov
mov
dec
daa
mov
adc
lea
push
inc
les
and
out
ret
dec
cmp
adc
jo,pn
loop
mov
scas
pop
mov
les
ljmp
iret
jmp
add
adc
iret
xor
jo
int3
xchg
add
dec
aaa
mov
cli
cltd
fldl
mov
mov
repz
pusha
rcll
lret
xchg
pop
mov
add
xchg
xchg
aaa
out
rcr
inc
mov
push
or
pop
cld
sbb
leave
mov
cltd
leave
lcall
mov
addr16
scas
push
popf
push
pop
sbb
idivb
dec
push
xor
xor
jmp
inc
and
sbb
jae
jnp
dec
sahf
cmp
cmpsl
and
das
out
xor
filds
add
mov
jbe
adc
out
pop
pop
mov
add
popf
jbe
pop
inc
dec
in
and
xchg
fdivrl
test
insb
cmp
sbb
fwait
mov
push
push
mov
xor
cmp
cmp
lfs
cwtl
clc
xchg
fwait
cmp
mov
push
sub
jge
xor
mov
sbbl
lahf
xchg
sbb
in
add
sub
xchg
sbb
negl
pop
lahf
sbbb
xor
sub
push
cmp
aaa
xor
test
inc
add
or
mov
add
aam
pushl
mov
and
rcll
push
jo
cmpsb
jnp
movsb
fistl
test
iret
int3
and
pop
and
xchg
es
rcrb
dec
pop
lods
sbb
ds
test
mov
into
dec
scas
xchg
movsl
or
jbe
inc
push
mov
addr16
push
sbb
in
adc
popf
add
add
jmp
mov
pop
pop
cmp
sbbb
and
lods
and
add
cmp
pop
fsubrl
test
sbb
out
cmp
in
sbb
loope
sbb
sbb
mov
pop
insl
jl,pn
cmpsb
sbb
mov
movsl
adc
xchg
ljmp
inc
in
xor
xor
call
pop
sub
dec
push
sarl
mov
repz
pop
sbb
jg
mov
cmp
lcall
push
insl
mov
cmp
pop
sbb
clc
jmp
lret
xchg
pop
outsl
loop
push
sbb
int3
fdivr
or
mov
sub
lcall
inc
add
pop
cmp
je
xchg
jmp
stos
insl
mov
adcl
hlt
outsb
pop
mov
fs
xchg
mov
jle
pop
imul
mov
push
pop
cmp
dec
add
lcall
xor
popf
les
ret
es
jae
test
mov
pop
push
clc
lods
shrl
push
aad
insb
xchg
inc
xchg
and
movsl
jae
sahf
addl
push
loopne
xorb
xchg
push
in
je
lcall
adc
pusha
sarl
ret
iret
jl
fsubrs
adc
into
ljmp
mov
hlt
add
fistpl
mov
cmc
jg
mov
enter
mov
jnp
xor
rclb
shrl
push
xchg
popf
les
mov
lret
icebp
pop
les
cmp
lcall
cmp
int
or
ja
mov
mov
in
shlb
sub
mov
sub
loopne
scas
jecxz
movsb
std
push
adc
out
xor
iret
push
mov
lahf
insl
xchg
or
iret
adc
cmp
xor
mov
sub
jae
popa
push
je
mov
push
aaa
cmp
mov
movsb
dec
hlt
addl
jl
imul
psubsb
push
cmc
mov
and
and
add
vpshufd
js
cli
shlb
aaa
mov
lock
mov
fldenv
mov
push
sarb
jle
imul
pop
fldl
push
sahf
outsb
enter
jb
insb
cmp
inc
aam
adc
sbb
std
lret
pop
mov
add
js
cmpsb
xchg
add
jge
adc
fld
jmp
mov
test
xchg
and
addr16
jp
mov
and
mov
sub
xor
adc
add
xchg
jae
jge
mul
push
fistl
fldt
mov
ljmp
sti
cs
inc
dec
jmp
pop
fildl
mov
push
cmp
xor
rclb
push
sbb
pop
rcrl
or
es
sbb
mov
stos
inc
cwtl
es
cmovno
jnp
xor
or
mov
jle
lods
cltd
rclb
icebp
push
mov
adc
daa
iret
mov
out
mov
addr16
iret
or
inc
xchg
aas
dec
sti
sbb
mov
push
mov
test
out
arpl
sub
cld
cmp
mov
or
mov
loope
mov
sbb
xchg
and
mov
sbb
mov
ja
push
out
jae
inc
xchg
cwtl
sub
pop
notl
ret
cmp
dec
arpl
mov
push
fisttps
cmp
dec
inc
icebp
pop
mov
push
inc
aad
enter
or
lds
lcall
ficompl
mov
mov
jno
gs
push
out
sti
ljmp
adc
lods
fadd
xor
testl
cmpsl
lods
mov
mov
pop
stc
jp
jne
sub
cs
cwtl
imul
pop
sub
adc
subb
into
adc
mov
fdivrl
and
sub
test
and
imul
mov
pop
movsb
cmp
mov
aaa
mov
ficoms
scas
mov
sbb
push
inc
or
insb
pusha
jae
push
insl
pop
pop
sub
addl
push
nop
sub
cli
int3
popa
pop
in
leave
popa
test
lock
mov
mov
das
xchg
call
push
dec
push
push
pop
push
jg
push
jb
adc
or
push
pop
or
in
cli
xchg
jmp
out
jp
pusha
insl
lock
and
push
mov
les
cs
jne
lret
test
pop
in
mov
sbb
jb
push
xor
pop
lcall
push
mov
adc
lcall
pop
dec
adc
cmc
mov
test
add
jmp
inc
sub
ljmp
mov
test
shll
imul
xor
ja
fadds
js
loop
roll
in
das
xchg
push
or
and
jge
pop
lcall
xlat
dec
lret
test
test
out
pop
cmovae
mov
add
or
outsb
xor
pop
push
scas
stc
pop
popf
jl
pop
shll
add
push
lods
std
or
stc
sbb
imul
cltd
test
aas
pop
adc
push
into
dec
lret
dec
int
cmp
leave
lret
insl
add
test
add
cmp
sub
and
xchg
loopne
cmpsl
mov
push
push
mov
outsb
iret
jp
xchg
inc
push
cmp
lds
je
adc
dec
scas
mov
xchg
lds
int
cmp
fisubl
movsb
jo
xchg
inc
jl
les
loop
les
jo
xchg
push
push
add
or
sub
iret
or
xchg
rcll
into
mov
push
popa
push
add
loope
nop
ss
popa
movl
xchg
or
xor
cwtl
sub
popf
push
popf
aaa
test
and
mov
mov
mov
sbb
add
jl
sub
dec
push
cmpsl
push
mov
cmp
fsts
nop
adc
aad
daa
out
cmpsb
and
js
mov
inc
cmpsb
jmp
pop
mov
dec
dec
lea
repnz
js
insl
orl
pop
test
stos
stc
push
mov
ljmp
arpl
aam
cmp
mov
movsb
pop
adc
cmpsb
and
and
dec
std
push
sub
test
bound
push
sbb
push
stc
rep
cmp
leave
arpl
mov
cli
sbb
add
lods
jne
sbb
ljmp
cmp
add
and
fldl
pop
dec
add
mov
in
cmc
jns
dec
out
loope
mov
sbb
pop
int3
movsl
lret
sbb
adc
push
les
sub
movsb
add
loopne
movsb
je
sub
push
lret
mov
lock
adcb
das
test
imul
cmp
loop
fbstp
scas
int
popl
or
inc
ret
cmp
leave
sbb
repnz
movsl
sbb
mov
or
ret
repz
mov
dec
adc
sub
je
mov
jmp
inc
sub
dec
add
inc
push
loop
arpl
scas
cs
sahf
ss
lahf
aad
in
into
or
inc
add
pop
into
adc
xchg
lretw
jecxz
imul
ja
push
inc
jmp
sub
sub
jecxz
sarb
mov
pop
nop
push
mov
imul
aam
rorb
std
cmpsl
scas
shlb
dec
push
xchg
push
insl
daa
cmp
inc
scas
push
xchg
jns
inc
fists
iret
and
push
fisubrs
pmuludq
xlat
addl
jmp
sbb
pop
or
out
jmp
pop
call
mov
lods
jmp
aas
out
and
repnz
fimuls
ficoms
loopne
ds
xchg
lret
sub
sti
xor
mov
mov
and
pop
loopne
adc
sbbb
jg
jle
test
lds
lock
add
loope
add
loope
or
loopne
icebp
inc
lock
ret
push
xlat
leave
testb
in
push
hlt
mov
orl
fisubs
and
test
xchg
test
mov
cmc
xor
std
cmc
cltd
lahf
inc
lock
and
lret
push
jge
lahf
jo
and
arpl
data16
jle
add
jb
cmp
jle
jp
jo
pop
and
jbe
outsl
jg
adc
rclb
jbe
push
mov
add
outsb
shrb
rclb
mov
xor
js
cmpsb
mov
cmp
push
sbbl
decl
iret
pop
cmp
xchg
push
jmp
pop
pop
sub
mov
scas
outsb
pop
cmp
or
jg
clc
out
mov
cltd
jle
rcll
dec
push
cmp
in
pop
cli
cmp
mov
pop
lods
daa
inc
pop
dec
cmpsl
pushf
je
lahf
scas
scas
scas
mov
sub
adc
sub
enter
dec
inc
jae
or
jo
push
mov
sub
shlb
pop
insl
pop
sub
dec
sbb
ja
call
into
das
lods
xlat
into
jns
jns
xor
mov
in
inc
jge
shll
sti
outsb
data16
push
mov
push
dec
xor
ss
aas
arpl
mov
push
pushf
pop
mov
fdiv
add
sarb
fiadds
scas
inc
sub
and
push
lcall
ret
subb
xlat
mov
push
xchg
cmpsl
scas
icebp
dec
mov
push
fsubrp
ror
jo
pop
push
cmpsb
je
and
pop
sbbb
cmp
adc
ss
mov
pop
mov
movsb
test
stos
ss
push
fcomip
repnz
pushl
adc
push
scas
rcrl
adc
in
shl
push
or
jg
fcoms
lods
jnp
pop
cmp
lds
or
aas
imull
push
test
mov
hlt
in
jno
scas
or
push
jbe
push
test
dec
xor
pop
cs
addb
xor
subb
push
outsl
push
sbbl
pop
sarl
sub
sbb
jo
lock
repz
in
sub
ljmp
sub
fsubs
les
mov
pop
sbbl
out
stos
leave
mov
inc
lds
mov
pop
dec
movsl
das
daa
adc
add
fwait
adc
lret
xchg
inc
popa
sbb
xchg
push
dec
call
mov
cmp
imul
out
out
stos
jne
leave
mov
cltd
dec
je
lods
mov
out
stos
and
pop
out
inc
aam
nop
lock
outsb
insl
outsl
sub
xchg
mov
stos
popa
ds
stos
and
lahf
sti
lods
adc
test
imul
nop
stc
cwtl
sbb
xor
mov
mov
jno
jp
rol
mov
adc
mov
lods
adc
or
fldl2e
inc
stc
cmpsl
push
jae
roll
sub
or
pop
fdiv
out
pop
push
ret
scas
mov
mov
std
dec
sbb
and
pop
pop
in
inc
xchg
add
mov
xchg
push
mull
orl
lahf
aam
enter
daa
mov
jecxz
ret
rorl
mov
sbb
or
mov
movsl
inc
inc
rcl
push
sbb
xor
adc
sub
jge
dec
call
cs
mov
inc
xor
mov
fsubrl
adc
lcall
xchg
push
xchg
sti
inc
fs
jns
jmp
sub
push
xchg
out
into
cwtl
ja
nop
inc
mov
out
pop
push
lods
int
test
test
out
cmp
imul
xor
sti
cwtl
dec
jne
loopne
icebp
inc
or
aas
out
mov
push
out
and
int3
andb
push
imul
mov
dec
fdivrs
mov
jne
push
sub
xchg
inc
stos
repz
insb
fs
cmp
pop
movq
adc
push
push
leave
xchg
push
push
dec
mov
mov
adc
test
pop
mov
mov
mov
mull
cs
jg
fwait
lcall
paddusb
sub
aad
in
pop
cwtl
inc
cli
add
pop
mov
ret
pop
or
inc
jae
pop
jb
shrd
addr16
test
jne
inc
sub
jnp
lcall
fisubs
mov
js
and
repz
inc
dec
test
pop
dec
cmp
or
movsl
push
fstpt
adc
std
dec
lds
out
nop
push
adc
rcll
adc
mov
sbb
mov
cmp
xchg
nop
cltd
sti
es
jecxz
sbb
cmp
mov
or
ret
sub
pop
pop
pop
add
jnp
mov
dec
adc
mov
movsl
arpl
cli
int3
stos
inc
test
in
mov
xchg
sub
push
stc
adc
push
pop
repz
jge
mov
jns
imul
mov
and
into
test
mov
pusha
fstl
movsb
ret
mov
mov
xchg
inc
ret
sti
mov
push
mov
mov
shll
insl
in
addl
addl
mov
sub
lahf
aaa
inc
pop
push
aad
push
ljmp
repnz
cli
repnz
scas
test
dec
out
and
cmp
cli
push
in
roll
mov
lcall
push
js
mov
repnz
lods
mov
xor
js
and
inc
repz
in
ror
shrb
or
inc
mov
data16
cmpsb
gs
hlt
test
jbe
je
pop
cmp
enter
sbb
dec
mov
mov
mov
scas
ret
push
jle,pt
mov
and
mov
sbb
cmp
sub
mov
jle
dec
pop
enter
push
fwait
xchg
add
cmp
mov
lcall
daa
push
cwtl
push
mov
dec
arpl
mov
mov
daa
push
add
push
dec
cltd
clc
adc
add
hlt
stos
inc
jmp
popf
pop
and
rcrb
test
xlat
pop
testb
in
and
adc
push
es
aad
rcrl
and
xchg
or
call
cmpsb
mov
add
mov
lea
jl
mov
cmc
jns
jg
test
fldcw
or
pop
bound
jg
xor
or
and
mov
jnp
ret
dec
and
xchg
sbb
or
outsl
or
stos
enter
loopne
cmp
xor
add
xor
dec
jne
std
ss
mov
test
mov
inc
inc
mov
decb
mov
rcrl
cs
fs
lea
and
dec
rcl
xchg
inc
orl
dec
scas
pusha
xchg
adc
mov
into
lods
std
add
das
fcoms
dec
js
and
mov
inc
lahf
cli
xor
adc
stos
fwait
call
int3
mov
adc
mov
mov
fadds
xor
out
call
ffreep
stos
loopne
sbb
sbb
std
sub
not
pop
incb
imul
xor
vmovhpd
and
jno
xor
fdivrl
out
push
dec
es
cld
mov
bound
pushf
jne
mov
xor
popa
int
mov
xor
pushf
inc
xor
mov
xor
call
cld
sti
les
mov
imul
xor
mov
mov
push
inc
xor
or
or
enter
in
lds
sbb
sbb
mov
ja
or
cmpsb
xor
ds
rcrl
sub
push
adcl
fwait
mov
push
icebp
imul
add
mov
test
sbb
mov
rclb
sbb
pop
fidivrl
mov
push
divps
roll
add
and
sbb
je
mov
jnp
sbb
cmp
jecxz
lods
dec
mov
das
out
sti
xchg
and
shl
jg
and
pop
mov
icebp
jns
cli
test
dec
leave
mov
std
fldenv
ss
sbb
mov
nop
dec
dec
jbe
adc
js
xor
xchg
lahf
mulb
mov
cltd
push
aas
dec
mov
xlat
ret
xchg
popa
mov
outsl
xchg
mov
test
cmpsl
dec
stos
add
xor
inc
lock
mov
fisubrs
mov
pop
lahf
mov
push
subl
scas
mov
and
sbb
fildll
adc
pushf
rcll
popa
or
jmp
inc
add
mov
dec
movsb
or
fisubrs
ja
or
xchg
cmp
movsl
movsb
pop
sbb
jecxz
xchg
fisubrs
add
int3
cli
sub
outsb
hlt
mov
cmpsl
in
repz
fstpt
in
movsb
adc
fisubs
add
jg
out
jle
push
cmp
sub
and
mov
cmp
inc
inc
rcll
push
or
nop
push
int3
pop
sub
lea
daa
lds
mov
call
hlt
enter
pop
lret
hlt
jecxz
lods
fdiv
jmp
pushf
nop
stos
addr16
arpl
pop
and
cmp
icebp
pop
rcrb
add
adc
insb
mov
inc
out
sbb
jbe
loop
add
cli
neg
cmpsl
outsb
out
mov
add
push
movb
mov
lock
jae
and
pop
call
leave
dec
insb
adc
out
pop
fidivl
lods
mov
les
outsb
xor
sbb
pop
xchg
push
inc
decb
and
loopne
outsl
inc
outsl
and
in
mov
push
inc
push
xchg
out
dec
cmc
mov
sub
sbb
pusha
gs
scas
cld
outsb
insl
and
mov
cmpsl
imul
inc
xchg
sbb
sbb
pop
in
sub
add
ret
scas
loope
popa
cwtl
sti
xchg
pop
mov
insb
out
pop
lcall
pop
cld
addb
dec
inc
out
je,pn
ficomps
xor
xor
outsb
fdivrl
inc
rorl
incb
mov
push
push
sub
xor
mov
xchg
dec
fistpll
std
mov
int3
test
xchg
mov
fists
test
outsl
mov
add
je
fisttps
stos
sbb
cltd
ljmp
sbb
or
fdivl
sub
gs
xor
movsl
pop
ret
add
fucompp
inc
pop
ror
das
hlt
mov
in
lret
cli
sbb
fs
adc
arpl
andl
fistpll
pop
into
adc
xchg
scas
rolb
pushf
pushf
stc
jge
dec
cmpsb
lcall
movb
outsb
scas
or
adc
rol
into
loope
cmp
fdivrs
push
mov
xor
dec
pop
sbb
and
clc
sbb
cmpsl
push
es
cmpsl
inc
jne,pn
or
insb
movsl
shl
push
adc
cltd
jle
dec
cwtl
notl
cltd
mov
hlt
popa
and
inc
pop
cmp
push
sub
jmp
push
fs
pusha
hlt
aaa
outsb
cmp
outsb
loope
mov
pusha
cmp
mov
movsl
into
sbb
daa
push
push
popa
orb
in
shrb
sub
ret
push
pop
mov
stos
or
test
pop
sub
gs
sub
addr16
pusha
push
jle
or
xor
shl
enter
push
sbb
enter
into
jbe
or
inc
iret
mov
inc
in
and
pop
jae
gs
in
int3
pop
out
or
insl
mov
xchg
push
mov
add
xor
fisttpll
lods
xorb
jmp
aad
cs
mov
and
xor
test
lret
add
cmp
outsl
arpl
rcl
xchg
loope
imul
test
mov
lock
inc
cmpsl
fistl
xor
mov
inc
les
pop
add
inc
and
mov
cmp
fisttps
push
ret
das
jmp
stos
jnp
jnp
mov
pop
ret
out
push
adc
jle
add
iret
jmp
xchg
fisttps
cmp
cmp
cmp
mov
sub
pop
jp
stos
mov
ss
sub
xlat
loope
push
xor
test
xor
sbb
sub
test
sbb
push
xchg
fildll
sub
mov
jp
jb
ljmp
inc
pushl
jbe
jle
and
inc
dec
jb
inc
idivb
cs
sahf
mov
aaa
jnp
pushf
push
lahf
mov
push
sub
jmp
mov
imul
out
into
sub
repnz
aad
jmp
cmp
shlb
xorl
dec
icebp
fistps
cmp
push
mov
cmpsb
out
cwtl
test
fwait
shll
or
mov
xchg
jmp
pushf
or
mov
mov
shll
xchg
dec
xor
jbe
arpl
dec
push
stc
daa
int
xchg
imul
or
test
inc
xor
xor
ret
mov
and
xor
mov
push
iret
mov
and
sub
ljmp
push
mov
and
xlat
sahf
fmull
test
cmp
pop
mov
xchg
pop
subb
faddp
push
loope
sahf
mov
ret
and
or
jne
lret
ret
sbb
ret
jecxz
ret
push
dec
sbb
or
mov
push
mov
lret
ss
dec
ljmp
test
clc
pop
loope,pt
jmp
inc
mov
cmp
sti
pop
adc
pop
mov
fmull
out
xlat
addr16
out
in
inc
adcb
scas
adc
fs
movsl
aam
cmc
dec
or
shll
stc
add
dec
rorb
inc
push
ja
push
cmp
cwtl
sbb
xor
call
loop
mov
cltd
in
jns
jno
orb
mov
mov
test
movsl
inc
sub
loope
inc
xchg
js
pop
push
push
cmp
scas
jb
jle
sahf
cmp
xchg
out
xor
cs
ret
add
sbb
mov
fisttpl
insl
jo
aad
and
lahf
mov
jge
push
gs
mov
test
iret
out
or
pop
jge
mov
ja
bound
cmc
or
xor
stc
pop
pop
mov
jb
das
dec
or
push
subl
addr16
daa
dec
subb
out
mov
ret
cmpb
loopne
cltd
leave
aaa
mov
mov
jb
ret
out
shlb
xchg
pushf
inc
dec
nop
pop
mov
xchg
inc
cmp
and
mov
cld
add
inc
and
insb
cmp
sub
pop
cmp
ret
pop
or
fisttpl
sbb
mov
add
adc
sbb
mov
mov
xor
and
sbb
dec
jp
ds
sbb
repnz
stc
mov
cmpsl
push
and
jle
lods
xor
cmp
cmpsb
pop
ret
inc
cmp
jae
push
sbb
test
rcll
lea
xchg
cmpsb
cmpb
ljmp
clc
sub
bound
cmp
push
into
mov
loop
popa
std
imul
xchg
mov
pop
xchg
enter
inc
xor
mov
cmp
cld
xor
push
bound
daa
cmp
mov
lret
jg
ljmp
xchg
ret
js
or
and
push
mov
adc
sbb
repz
loop
mov
lods
leave
push
adc
cmpsl
das
aad
xor
out
jnp
fwait
gs
stos
ret
fstps
xchg
out
les
rdmsr
push
sbb
sub
push
leave
add
cmp
pushf
pop
lods
add
pop
dec
add
cld
jl
aaa
add
adc
fistpll
adc
call
ljmp
jmp
cmpxchg
pop
ja
ds
xor
xchg
xor
cli
push
push
insb
aad
or
fmull
or
roll
pop
sti
xor
or
mov
fs
sahf
mov
push
or
or
fwait
jp
lret
fisttpl
int
and
xor
sti
js
jge
dec
sub
sub
inc
mov
pushf
les
and
movsl
add
jbe
movsb
icebp
cmp
cmp
cmc
movsl
stos
ljmp
xchg
gs
xor
mov
fcompp
or
mov
cltd
negl
inc
filds
jns
jb
mov
shl
and
mov
or
or
ljmp
cli
rcll
dec
sahf
inc
fcomip
mov
mov
add
cld
iret
sub
loop
imul
ret
out
cli
xchg
pop
inc
dec
sub
cmc
mov
fidivrl
les
adc
cmc
sub
pop
or
jge
jbe
fcmovnu
jno
ss
lods
jp
cmp
and
incl
xchg
or
add
shr
repnz
out
cwtl
imul
arpl
clc
leave
dec
fwait
cld
aaa
pop
ds
fstpt
mov
adc
mov
jae
inc
mov
fwait
sbb
xor
sub
ret
testb
or
std
xor
ficomps
push
inc
rcrb
cmc
mov
ficoms
mov
hlt
jecxz
pushf
jge
mov
xchg
test
mov
loope
scas
adc
or
dec
mov
daa
lods
jne
mov
pushw
ret
clc
push
enter
jns
std
mov
pushf
xorb
sub
dec
mov
mov
jbe
repz
cld
daa
lcall
pop
pop
cmp
xchg
xchg
mov
rorb
outsl
cltd
add
and
ljmp
int3
cmp
inc
andb
and
mov
outsb
mov
xchg
and
mov
in
lret
cmpl
sti
pop
mov
push
loopne
es
or
add
cmp
push
mov
in
xlat
mov
cmp
sbb
xchg
sub
jbe
xor
cmpsl
sbb
int3
inc
in
rcll
push
dec
neg
arpl
adc
cmpsb
cmp
mov
je
or
jb
mov
cltd
cmpsl
loopne
sbb
push
shll
push
xchg
xchg
int3
insb
es
cli
scas
call
test
pusha
jle
fdivrl
nop
pop
xchg
cmpl
push
jg
cltd
sub
std
push
jp
xchg
mov
enter
fisubl
ret
mov
sarb
xor
ss
push
fdivl
rcl
adc
repz
sti
mov
test
ja
jle
sbbl
into
xor
and
in
in
inc
sub
adc
jne
dec
movsl
popa
cwtl
popa
lahf
inc
pushf
pop
xor
push
fs
scas
mov
mov
rolb
mov
ret
mov
repnz
jbe
jmp
ret
and
dec
or
jns
stc
jmp
stos
inc
aaa
popf
aam
insb
mov
movsl
adc
jp
leave
fs
mov
and
inc
push
xchg
mov
and
inc
add
lcall
andl
jne
add
mov
decb
loopne
cmp
dec
data16
xchg
sbb
insb
mov
adc
movsb
movsb
push
cmp
orl
dec
out
cmp
int
repnz
int
mov
insb
ja
mov
pop
out
jle
movsb
mov
idivl
scas
sti
adc
and
testl
out
int
jmp
xor
insb
mov
repnz
jno
jge
pop
test
push
mov
pop
sbb
scas
jo
divl
sbbb
daa
insb
inc
dec
ret
ja
cmp
mov
inc
repnz
iret
pop
adc
add
adc
xor
sbb
fistl
mov
and
mov
rorb
daa
xlat
repnz
lock
movaps
adc
mov
fisttpl
inc
ret
repnz
fsts
pop
or
pop
cltd
fs
sub
mov
fmull
lcall
rorb
pop
mov
add
dec
cmp
cmp
rorl
shll
push
jecxz
insl
sbb
sbb
lods
mov
mov
push
jns
sub
lea
dec
subl
sti
xchg
mov
test
push
mov
idivl
pop
mov
cmpsl
mov
dec
inc
lret
outsl
frndint
pop
jae
inc
push
test
int3
cltd
imul
cmp
mov
cmpsl
sbb
dec
adc
nop
xor
testb
pop
in
mov
cmp
and
hlt
inc
jmp
and
into
add
out
adc
rcrl
mov
mov
xchg
xor
and
pop
fbld
cld
out
sub
pop
xlat
ja
int
dec
mov
mov
dec
mov
push
dec
mov
mov
or
cmp
cmp
rcrl
xor
sbb
shlb
adc
jb
in
push
sbb
inc
pop
or
push
repz
push
add
cmpsb
out
mov
lea
adc
repnz
and
subb
pop
sbb
add
xchg
lods
dec
inc
cmp
push
bound
int3
stos
mov
or
jo
pop
pushf
test
jo
in
adc
pop
sbb
in
cmp
inc
test
test
lods
mov
daa
or
pop
mov
adc
fstp
fwait
cltd
fnstsw
mov
or
popa
outsl
idivl
pop
scas
adc
push
add
mov
jp
cmp
stos
dec
mov
mov
fidivrs
inc
jle
enter
out
pop
mov
fmuls
mov
add
or
adc
pop
and
cli
mov
sbb
jbe
std
hlt
mov
jbe
popf
movsb
rorb
shlb
inc
cmc
pop
jbe
mov
fistl
int3
pop
xchg
and
pop
push
mov
push
push
or
xchg
dec
fistl
cmpsl
push
cmc
je
fwait
mov
jmp
mov
dec
jl
and
fbld
pop
mov
cmpb
jge
repnz
sbb
fwait
dec
push
xor
adc
pop
stos
outsl
clc
cmp
adc
ret
sub
sub
push
rcll
and
xchg
or
xchg
outsb
sub
ljmp
sub
repz
insb
cmp
mov
xchg
fmuls
or
pusha
pop
lock
push
pop
or
aam
stos
outsb
sub
out
mov
or
xchg
sbb
nop
mov
xchg
jnp
mov
in
xor
call
mov
push
mov
push
ds
cli
outsl
pusha
scas
hlt
pop
cmpl
fidivl
rcr
dec
popa
add
pop
inc
sbb
cmp
jnp
mov
pop
jmp
dec
std
pop
add
ds
sbb
in
pop
out
dec
pop
push
or
push
push
ret
mov
jmp
or
xchg
lret
jno
mov
cmpsl
stc
dec
pop
ljmp
fcompl
cltd
rcr
popl
loop
lock
jno
and
push
fdivrl
mov
cs
aaa
ret
mov
inc
je
gs
js
mov
loopne
sbb
or
std
call
adc
rorb
jo
dec
fisubs
mov
sub
mov
stc
jne
fstp
add
jne
pop
test
fucomip
sbb
shrb
pushf
xor
imul
xor
push
mov
push
or
mov
push
shrd
loop
aas
lods
sbb
jo
mov
add
sbbb
int
mov
daa
sub
xchg
xchg
test
ret
push
test
sub
push
and
fsubs
pop
comiss
imul
xor
mov
cmp
int
mov
fldt
jbe
movsl
cmp
sbb
shl
add
aaa
lret
sub
sbb
jnp
adc
daa
jnp
leave
pop
and
mov
movsb
subl
fidivl
pop
push
nop
sub
xlat
ljmp
cwtl
mov
mov
sbb
stos
sub
int3
adc
cmpsl
addr16
push
pusha
jnp
fwait
sub
test
or
aas
test
dec
and
push
cs
jne
push
mov
sub
out
xor
loopne
daa
fdivrl
push
mov
pop
pop
pusha
jp
sub
cmpsl
jnp
add
outsl
leave
inc
aad
aaa
jnp
cmpsb
pushf
inc
imul
mov
das
int
jmp
cmc
pop
mov
add
call
js
adc
adc
outsb
jae
pop
movsl
movsb
jmp
sbb
push
inc
and
mov
xorl
mov
ficomps
mov
or
xchg
rcrl
and
lret
ret
addr16
cmp
arpl
fnstcw
pop
pop
push
xchg
mov
dec
sub
ret
add
fistpl
adc
loope
inc
aad
call
add
pop
je
sub
cmp
insl
or
test
vaddpd
sub
push
pop
mov
and
lahf
mov
mov
xor
rorl
xchg
dec
push
iret
adc
lock
pop
fbld
sbb
popf
or
jge
ret
add
xorl
push
fists
ljmp
test
dec
cmpb
jo
and
aam
lock
jmp
int3
ds
lock
or
lds
inc
loopne
pop
cli
adc
pop
jno
mov
mov
test
sbb
xchg
mov
sub
out
popf
jns
sub
test
imul
iret
push
daa
xchg
pop
rclb
shrl
xchg
or
ljmp
outsb
cmp
cs
subb
inc
arpl
mov
xchg
out
jne
aam
test
adc
stc
push
ds
mov
aad
insl
jbe
pop
inc
nop
lds
in
enter
sti
pop
push
inc
movsl
cld
scas
bound
dec
in
jge
movl
in
xchg
fs
fisttpl
rcrl
jle,pn
aaa
pop
pop
shrl
or
mov
sahf
out
inc
adc
inc
repnz
in
popf
inc
sub
cmp
xchg
les
jbe
clc
cli
fcompl
mov
in
loop
test
insl
fisttpll
push
xchg
add
divl
sub
push
dec
sar
dec
pop
ss
out
jns
test
loope
addl
mov
scas
dec
mov
mov
jno
shl
add
cltd
push
or
sahf
or
inc
jo
inc
movsl
rcrb
je
gs
inc
ds
and
insl
sbb
mov
pop
add
xor
pop
js
out
dec
insb
cmpsl
sub
mov
ret
popf
xor
jle
iret
pop
inc
pop
xorb
in
mov
xchg
loopne
out
or
and
pop
out
divl
mov
repnz
or
jnp
inc
shlb
gs
pusha
cmp
and
dec
nop
idiv
xor
mov
loope
adc
adc
pop
insb
std
iret
xor
dec
push
push
cmp
js
out
mov
sbb
test
mov
imulb
push
in
shl
lret
mov
cwtl
aam
int
aad
sbb
imul
stc
insb
sub
mov
push
mov
movsb
scas
ss
out
xchg
jo
fs
inc
xor
push
pusha
and
sub
xchg
dec
dec
mov
xor
cmpsl
imul
mov
in
adc
repz
cmc
pop
cmp
xor
inc
int
mov
dec
fs
xor
imul
pop
jns
mov
xor
fldt
adc
int3
fisttps
outsb
lds
rorb
jmp
negl
jns
jg
mull
int
jecxz
xor
insl
dec
push
mov
rcll
insb
pop
and
xchg
in
aas
sarl
jmp
xchg
pop
cmp
data16
mov
mov
loopnew
aaa
add
fisubrs
mov
rclb
aad
jno
xor
mov
nop
fmuls
cmp
inc
ror
test
addl
xchg
xchg
sbb
out
and
cld
movsb
stos
jns
call
mov
push
mov
imul
loop
stos
cld
jmp
dec
cmp
mov
das
adc
ret
repz
xor
add
jle
xchg
xor
cmpsb
lock
pextrw
sub
lcall
inc
sar
jmp
xchg
push
mul
or
iret
aam
pop
mov
push
in
cmpl
mov
clc
xchg
sub
cmp
cld
test
aad
xchg
js
mov
jle
push
xchg
aaa
sub
shll
or
or
dec
mov
mul
xchg
stos
push
xorl
pop
sbbb
cli
frstor
xor
cld
fisubrs
fwait
jae
push
push
xor
pop
pop
lock
mov
xor
and
negb
dec
or
mov
jmp
out
leave
or
push
add
pop
jecxz
mov
movsl
jns
push
mov
movsl
add
sub
mov
je
daa
jg
mov
ret
enter
or
push
dec
insl
mov
out
jae
insb
shl
popa
pop
mov
in
cmpsl
outsb
pop
in
jo
mov
bound
mov
push
jge
fsubrp
or
lea
sbb
rcrb
pusha
mov
lock
fisttpll
adc
ffreep
decb
jmp
mov
ljmp
pop
ret
popf
cli
xchg
jp
and
xchg
out
add
sub
cmp
ret
mov
imulb
add
push
ret
fmuls
xor
jno
mov
adc
test
xor
inc
add
out
cmp
lods
out
stc
sbb
in
shl
lods
mov
aas
fstps
popa
dec
and
andb
leave
lret
mov
imul
out
insl
or
cwtl
test
xchg
pusha
or
std
sub
cmp
mov
mov
inc
stc
lods
cmp
jbe
out
jnp
sub
or
xor
jmp
add
fimull
test
das
push
aam
push
cld
and
movsbl
in
jno
jno
adc
xor
pop
sbb
nop
and
dec
jmp
cmp
xchg
call
jp
cmpsb
fmul
stos
lea
sbb
jge
push
pop
cmc
sahf
mov
jne
rclb
add
pop
dec
fwait
insl
loope
adc
lahf
insl
dec
xor
jno
sarl
lret
daa
arpl
mov
mov
add
pop
mov
arpl
mov
jmp
sbb
sub
fistl
mov
scas
dec
fs
fdiv
lods
pop
cmc
enter
jecxz
mov
pop
pop
xchg
jae
ret
mov
or
pop
popf
loope
in
pop
shlb
inc
mov
bound
das
adcb
dec
pop
lock
fwait
add
cmpb
fcmovnbe
outsb
lcall
daa
jnp
sub
inc
add
negb
aas
movsl
pusha
jnp,pt
push
sbb
dec
xor
das
pop
push
adc
cmp
mov
xor
not
xchg
addr16
jl
mov
mov
call
cmp
and
pop
in
imul
mov
testl
loope
sti
movsb
mov
pop
mov
or
sti
mov
ds
imul
in
dec
int3
cmp
subb
cmp
stos
xor
pop
daa
test
sub
xor
xchg
sub
xor
xchg
cmp
into
es
adc
add
mov
mov
add
addr16
call
leave
sub
mov
cmp
xchg
int
pop
aam
dec
jg
pop
xor
pusha
jbe
aam
mov
lcall
addr16
adc
stc
jnp
sbb
fnstenv
add
pop
xchg
add
idivl
or
jnp
mov
and
push
cmp
out
jno
mov
loopne
and
test
inc
lods
lcall
cmp
jg
pop
imul
cli
xchg
fptan
adc
mov
pusha
out
mov
into
imul
sbb
outsl
sub
inc
xchg
mov
add
add
in
xor
and
dec
xchg
enter
shll
jae
imul
push
int
mov
and
sub
out
sti
mov
sub
fmul
scas
mov
xor
sbb
rol
addr16
dec
or
cld
add
jp
fistpll
cmc
retw
jns
aad
adc
sbb
cmpsb
or
iret
and
pop
or
adcl
in
sub
pop
push
cwtl
push
add
scas
arpl
fstpl
or
lret
movsb
fldl
push
jns
ljmp
std
aas
cld
inc
sbb
mov
rcrb
xchg
fistpl
add
div
and
out
arpl
mov
mov
mov
imul
pop
sbb
leave
js
push
lea
mull
repz
push
sub
or
and
lock
inc
cmp
mov
mov
js
sub
insb
movsb
inc
aad
mov
mov
push
icebp
lds
ja
mov
bswap
popf
jl
jbe
xor
nop
pop
test
call
fstl
jp
test
iret
arpl
fadd
mov
jb
adc
std
inc
mov
mov
inc
mov
clc
xchg
pop
test
mov
sbb
arpl
mov
je
push
dec
scas
xor
movsb
inc
sbb
scas
dec
ror
add
je
jo
or
dec
arpl
sub
xchg
sub
cmpsl
in
outsb
cmp
jno
mov
push
iret
xchg
push
cld
xchg
je
insl
cs
leave
call
orb
fdivl
addr16
mov
pop
arpl
xchg
sub
pushf
int3
int
fstps
jle
xchg
xchg
and
jo
pop
movsl
xor
xor
cmpb
xlat
cli
nop
jmp
dec
or
cmp
addr16
lret
js
int3
push
or
iret
cs
sub
inc
icebp
push
int3
dec
jb
and
sbb
out
cmp
data16
testl
pop
push
dec
jnp
shl
loop
shll
add
cmc
lods
lret
jmp
dec
pop
xor
ljmp
dec
cmpsl
shll
cld
aam
inc
clc
fs
and
ficoml
push
fdivrp
push
lods
repnz
shll
loope
xor
repnz
dec
dec
out
loop
sub
outsb
and
or
idivl
push
fcmovu
call
ljmp
mov
addr16
cmp
xchg
jle
repz
inc
cltd
xchg
xchg
insl
mov
xchg
cmp
pop
cli
cmp
jle
lret
jp
repz
stc
imul
rcr
fwait
test
out
cmp
cmp
cmpsl
inc
test
jns
in
outsb
add
scas
pushf
jb
cmpsl
icebp
pop
sbb
mov
push
add
in
jno
pop
xchg
inc
popa
int
loop
or
mov
pop
pop
mov
test
sub
lret
int
outsb
sub
push
ja
insb
test
adc
mov
push
fldcw
and
lret
cmc
rolb
shlb
lods
adcb
xchg
imul
lock
jnp
jl
jae
add
mov
sbb
mov
out
repz
sbb
cmp
sti
adc
fmuls
fbstp
dec
test
sub
ss
push
mov
cmpsb
mov
sbb
pop
pop
mov
mov
mov
cmp
add
xorl
sub
lock
repz
adc
xchg
adc
mov
sahf
mov
sar
data16
xor
cmp
cmp
and
jb
jnp
xchg
out
roll
das
repnz
cmpsb
lock
stos
lock
sub
sub
pushf
shrl
mov
jnp
clc
mov
ss
filds
xor
or
lahf
dec
call
mov
pop
testb
in
testl
mov
gs
jns
mov
pop
pushf
xchg
adc
and
add
jae
and
aam
out
sti
dec
scas
jle
lock
stos
and
scas
push
lds
mov
pop
js
rorb
xchg
sti
push
pop
push
mov
cmp
mov
sub
addb
push
das
out
or
cmp
fdivrs
mov
and
loope
sbb
or
sub
push
mov
add
aaa
imul
xor
mov
ret
loop
dec
mov
in
test
and
push
mov
xor
arpl
pusha
push
test
rep
fisubrl
pop
sbb
loop
pop
cmc
test
mov
push
push
mov
cmp
adc
pop
data16
adc
and
push
cmp
pop
ds
scas
imul
dec
outsb
push
cmpl
out
inc
xor
adc
sub
xchg
fsub
pop
mov
adc
pop
xchg
int
xor
lock
pop
mov
and
pop
mov
sub
das
rolb
ss
dec
inc
rcl
pop
fnstenv
mov
jmp
cs
mov
es
shrl
sbb
or
lret
and
test
sbb
mov
in
out
cmp
pop
or
adc
sbb
dec
lahf
add
mov
mov
push
adc
dec
mov
lods
mov
fildll
daa
leave
adc
js
jno
xchg
into
shrb
add
cmp
ss
adc
mov
rolb
js
mov
lods
lods
jb
pop
sbb
mov
jge
cmpsb
pop
popf
sub
xor
cltd
xchg
cmp
fidivl
push
ss
inc
subl
dec
dec
les
std
mov
mov
or
pop
xchg
pop
dec
aas
sbb
push
test
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
ljmp
rcll
cmp
mov
jecxz
xor
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
dec
pop
jecxz
sarb
pop
push
mov
scas
pop
out
jb
cmp
pop
rorb
jne
clc
out
inc
in
aas
cmp
sbb
mov
jnp
imul
push
sbbb
mov
cmc
mov
jecxz
push
fcmovbe
adc
daa
or
aad
pop
xor
pop
xchg
pop
addr16
jno
loop
mov
adc
and
mov
ss
sbb
ds
mov
test
xor
dec
sbb
les
insb
pop
aaa
dec
stos
in
jmp
mov
pop
pop
or
dec
xchg
jmp
adc
mov
jecxz
into
fstl
mov
add
andl
mov
cmc
push
pop
loopne
lds
xchg
shll
xchg
into
lea
aas
mov
in
pop
jecxz
lret
lea
aas
mov
cmc
mov
loope
into
and
cmp
mov
loop
into
lea
mov
pop
jecxz
jmp
lea
aas
xor
cmc
movsl
pop
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
dec
dec
xchg
cmp
cmp
test
pop
repz
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
pop
enter
pop
jecxz
lds
lea
aas
mov
icebp
mov
out
into
jbe
adc
cmp
mov
jecxz
out
lea
xchg
mov
jecxz
sahf
lea
xor
cmp
lret
push
push
aas
mov
cmc
mov
jecxz
into
push
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
jecxz
into
lea
aas
mov
cmc
mov
movsb
jnp
mov
cmp
pop
fstl
add
add
sahf
loopne
sub
fdivrl
ror
pop
sbb
cmc
xchg
mov
and
push
movsl
pop
lds
test
in
mov
daa
inc
lret
and
icebp
push
mov
jne
jno
fnstcw
imul
jbe
and
sbb
mov
pusha
jae
insl
sub
xchg
and
call
aam
mov
jl
outsl
add
jl
and
or
in
jl
jno
add
sahf
mov
inc
xlat
or
sbb
cmp
mov
lahf
cmp
or
pop
ljmp
xor
cld
push
mov
adc
add
pop
flds
int3
out
addr16
sbb
fs
inc
inc
scas
push
dec
jb
xor
test
orb
lock
loop
roll
xor
mov
cmpsl
aam
adc
leave
lds
lods
pop
sub
add
pop
mov
pop
test
mov
test
orb
pop
push
arpl
xchg
fmul
sti
mov
leave
dec
les
adc
pop
out
dec
xor
ret
push
out
movl
add
sub
add
imul
jmp
fistps
pop
pop
lea
dec
xchg
cmp
adc
movsb
xchg
pop
stos
psraw
jns
nop
mov
andb
mov
xor
inc
cmp
out
pop
jp
test
aas
adc
faddp
sub
icebp
push
sbb
sahf
mov
jno
scas
push
shrl
inc
jno
mov
pop
js
out
cmp
shll
mov
pop
inc
daa
push
cli
icebp
dec
test
pop
jecxz
or
imul
xor
mov
xor
lock
adc
adc
mov
pop
ficomps
fstpt
push
scas
adc
push
loop
fnstsw
repz
in
pop
push
and
ja
lods
sub
sbb
push
cmp
stos
jo
pop
negb
push
jbe
fistl
lds
cmp
push
addr16
push
scas
ds
in
hlt
mov
std
ret
mov
cwtl
jge
mov
mov
lret
mov
add
in
ds
int3
mov
ret
sbb
subl
push
jno
jbe
lret
xchg
mov
xchg
xlat
in
andl
repz
xchg
jle
add
or
adc
cmp
insb
insl
fsubp
sbb
cmp
or
sbb
jecxz
loopne
sub
aas
push
das
xchg
sbb
cmp
push
sub
push
das
cmpsb
hlt
jne
outsb
mov
jg
rcrb
fwait
sub
popa
cltd
push
cmp
int
xor
leave
jmp
xchg
mov
and
test
sub
mov
sahf
xchg
in
outsb
cld
sbb
dec
test
divl
mov
inc
inc
mov
push
adc
xor
inc
leave
loop
hlt
ss
and
loop
gs
insb
and
out
aad
ds
dec
xor
xor
xor
mov
addb
fcoms
or
mov
ja
out
jmp
pushf
sbb
loopne
fs
sbb
shll
sbb
lods
sub
fsubrs
negl
xchg
pusha
dec
mov
adc
out
outsb
sbb
lds
stos
jno
push
mov
mov
jno
rclb
xchg
mov
add
pop
adc
es
arpl
daa
mov
add
jbe
cmp
dec
jle
out
or
in
sub
int
adc
fisubrl
mov
mov
dec
jle
inc
aam
push
mov
mov
adc
test
jle
push
outsb
cmp
xchg
repnz
jmp
arpl
movsb
mov
and
or
aaa
mov
mov
clc
push
adc
jg
pop
sbb
clc
adc
inc
jns
inc
mov
fstps
fwait
fwait
dec
and
aam
daa
jge
mov
cmp
dec
das
xor
mov
push
js
pop
push
rolb
cli
xchg
je
and
dec
push
ret
cmp
je
sub
loopne
adc
sbb
cmpsb
adc
cmp
repz
xchg
cli
shr
cmpsb
lret
outsb
xchg
sub
dec
or
les
aas
stos
repnz
xlat
inc
sbb
push
jmp
aaa
push
cs
test
aam
sub
lea
adc
push
sarb
mov
cmc
int3
sbb
jbe
sbb
fwait
insl
push
jp
mov
sub
cmp
adc
iret
adc
inc
out
mov
outsl
es
fdivs
daa
xchg
jne
subl
mov
insl
aaa
cmc
pop
addb
pop
jg
or
push
test
pop
mov
xchg
sub
icebp
mov
mov
mov
fdivr
sub
pusha
outsb
jle
mov
sahf
xor
dec
repz
xor
iret
imul
mov
xlat
fnstenv
pop
ficomps
xchg
loope
mov
cmp
repz
push
push
ds
fistl
fisttpl
enter
and
jae
and
xchg
xlat
daa
fildl
push
test
xchg
or
add
mov
pop
daa
and
fs
mov
loop
xor
mov
lock
jne
sub
push
mov
and
rorb
sub
iret
add
js
outsl
jp
out
xchg
aam
icebp
shl
adc
add
lea
add
dec
xchg
aas
orb
push
mov
cld
nop
lcall
jae
or
in
aad
dec
jge
scas
pop
jmp
ja
or
out
push
fistpll
ds
pop
push
add
mov
cmp
daa
xchg
stc
mov
insb
mov
xor
or
xchg
int3
sahf
sub
iret
and
std
scas
in
xchg
add
dec
fldcw
sbb
shrl
xchg
cmpsl
mov
pmaxub
lahf
jmp
push
popf
repnz
xor
mov
addr16
fwait
push
sub
fidivl
xchg
xchg
ljmp
sahf
mov
sbb
lds
mov
ret
or
ret
jl
mov
jnp
or
push
pop
xor
out
ficompl
popf
push
adc
mov
or
lahf
out
add
pop
test
fiadds
mov
loopne
jnp
hlt
jo
aad
aas
lret
fbld
jnp
dec
repnz
adc
xchg
jae
fstl
xor
lods
aas
aam
cmp
push
imul
imul
lcall
jp
xor
das
mov
sub
add
mov
popa
lcall
sahf
sub
xchg
inc
movsb
push
ja
popf
imul
sbb
jmp
hlt
inc
pop
adc
mov
mov
push
or
push
jo
mov
and
sub
push
out
mov
cwtl
sub
xchg
xor
insb
addl
pop
cld
or
sub
mov
sbb
and
or
imul
lcall
adc
in
sti
mov
jae
cli
fimull
sub
sub
inc
imul
dec
outsl
and
xchg
jmp
movb
xor
ret
out
negl
test
xor
scas
imul
xchg
loope
adc
adc
shl
imul
mov
insb
enter
icebp
imul
fmul
adc
lea
ficoms
popl
mov
rolb
pop
xchg
and
mov
mov
popaw
test
dec
shlb
cmc
insl
inc
js
cs
cmp
divl
cmpsl
push
push
mov
jp
sbb
ja
jg
cmp
insl
or
test
std
cmp
jp
add
cmp
adc
shl
dec
testb
mov
adcb
and
or
out
jns
pop
test
or
and
sbb
inc
and
push
imul
inc
mov
adc
cltd
pop
dec
pop
xchg
cmp
cmp
inc
cld
and
jae
aaa
lret
cmp
mov
shr
xchg
and
cmp
sahf
jmp
xor
cmp
jmp
xchg
cmp
dec
pushf
dec
mov
sub
and
fistpl
xchg
out
adc
mov
pop
imul
imul
push
or
pop
mov
in
ja
test
popl
inc
xor
add
or
adc
mov
repnz
pop
mov
mov
dec
add
mov
push
push
into
pop
and
lret
mov
aad
push
inc
leave
sbb
pop
movsb
rcrl
fwait
cmp
out
enter
cmp
rolb
inc
jns
rorb
mov
sbb
or
mov
rolb
lcall
pop
adc
sub
cltd
je
add
mov
fdivrl
mov
lds
jnp
jge
orl
in
inc
les
ror
dec
into
imul
mov
sarl
adc
cmp
and
xchg
xor
dec
dec
aad
mov
aas
cmc
mov
jp
pushf
sub
lahf
mov
scas
push
xchg
out
cmpsl
add
notb
dec
cltd
lcall
xchg
out
add
jge
push
rcl
sbb
dec
ret
int
mov
movsl
enter
lods
outsl
in
mov
mov
andb
data16
mov
inc
inc
popa
psrld
stos
jae
xor
jnp
lods
fdivrs
push
aas
adc
loope
pop
lods
sarb
or
xor
call
jge
ja
bound
iret
xchg
mov
mov
jno
inc
lret
movsb
cmp
notb
fbstp
dec
lret
ss
mov
mov
sarb
sarb
or
xor
loop
cmp
mov
push
sub
fsubr
hlt
pop
insb
lret
imul
sarl
in
out
push
cmp
push
movsb
push
sub
or
clc
pop
shr
test
test
popf
fs
sub
mov
rcrl
pop
out
scas
xchg
loop
loopne
out
repnz
ficompl
clc
shr
lret
push
clc
repnz
mov
test
dec
or
outsl
xor
push
shll
mov
mov
xchg
push
xchg
xchg
mov
adc
dec
roll
lahf
pop
push
and
shrb
jecxz
dec
into
cli
jmp
pop
adc
neg
add
das
mov
xchg
adc
subb
jecxz
test
mov
mov
inc
mov
in
test
dec
dec
fisttpll
fcompl
jp
into
std
in
xlat
xor
mov
pop
pop
pop
xor
roll
pop
and
ds
neg
aaa
rcll
test
aaa
mov
test
jmp
jne
xchg
push
test
cmpsb
pop
stos
fsubr
xor
out
pop
cmp
addr16
or
std
push
lods
out
push
stos
adc
sub
cmpsb
mov
jecxz
jp
out
pop
or
pusha
jno
and
mov
add
mov
imul
dec
in
rorl
and
adc
popa
xchg
into
fstpl
in
xchg
pusha
mov
xchg
add
ret
cmp
call
dec
lahf
xchg
ds
sbbb
rcrl
fidivrl
rclb
dec
iret
dec
sahf
add
std
pusha
and
call
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
