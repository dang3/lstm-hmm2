push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
xorb
int3
jae
jae
mov
iret
adc
nop
add
int
subb
jnp
lds
fwait
push
pop
add
pop
or
shrb
loopne
in
loop
mov
inc
jl
push
mov
sbbb
fcomps
insl
ss
mov
aas
std
shll
and
xor
xor
into
shrb
stc
cmpsl
jbe
and
mov
adc
dec
fs
adc
call
aas
pusha
jle
xor
sub
fadds
sbbb
xchg
or
scas
cmp
pop
add
and
repz
jle
add
xchg
mov
lret
pusha
pushf
ret
mov
mov
out
adc
pop
jmp
clc
xchg
in
shl
imul
jmp
mov
iret
dec
jmp
icebp
push
xchg
hlt
mov
shrb
mov
aam
fst
or
pop
add
adc
out
scas
mov
inc
push
sub
sub
pop
aad
xor
addb
shr
imul
jmp
fcomp
pop
push
adc
or
cld
aam
or
imul
js
mov
and
jb
or
jnp
lahf
test
andl
lods
cmp
inc
cmovg
pop
mov
ljmp
mov
in
out
cmc
fisubl
pop
int
dec
dec
xor
adc
jmp
lock
cmp
xor
lea
pushf
mov
xchg
insb
mov
pop
push
fs
addr16
pop
insl
popf
or
inc
pop
xor
daa
shlb
cmp
pop
pusha
push
fs
pop
jno
fwait
aaa
cld
in
xor
ja
loope
inc
xchg
adc
repz
ret
lret
jp
nop
jae
inc
je
js
fisttps
call
jl
loopne
jge
or
into
adc
pop
and
jno
andb
and
mov
lods
insl
es
test
je
push
fnstcw
fprem
sar
mov
mov
cmp
into
js
push
inc
and
dec
fdivs
jg
popf
or
cltd
cmc
cs
adc
std
pop
test
push
mov
lahf
sub
jp
inc
loop
loopne
inc
test
push
sbb
ret
inc
add
stc
inc
sbb
insb
sbb
and
popa
jns
lahf
mov
ret
nop
pop
xchg
rcll
sbb
xor
cmpsl
sbb
mov
sub
jb
outsb
mov
mov
cwtl
pop
mov
cmp
or
std
mov
loop
xchg
adc
jne
outsl
sub
mov
inc
push
jp
cmp
je
and
sbb
sti
shrl
es
sub
dec
cmp
shrb
adc
or
rol
unpcklps
cmpsl
lcall
jl
popf
mov
sahf
mov
mov
and
rclb
or
xchg
lahf
cmc
js
sbb
mov
pop
push
dec
stos
repnz
or
stc
inc
cmp
aaa
repz
mov
dec
adc
add
push
inc
mov
loopne
sub
and
dec
stos
xor
sub
pop
mov
push
aas
sarl
ficoml
arpl
popf
and
inc
mov
loop
subb
aas
pop
mov
cmp
pop
mov
mov
aas
loope
pusha
into
mov
repz
imul
add
fnstcw
xor
pop
jns
shll
pop
push
lea
push
mov
inc
cwtl
sbb
sbb
mov
dec
lea
and
test
inc
out
loopne
mov
dec
enter
add
sub
iret
aam
push
mov
xchg
bound
test
sub
arpl
popa
lods
pop
and
test
cmp
jne
pop
jg
dec
pop
adc
lret
mov
pop
sbb
jno
mov
movsb
ja
pop
dec
pop
mov
cmpsw
clc
dec
jae
dec
add
std
adc
loopne
stc
cmp
shl
pop
jp
add
adc
sub
hlt
xchg
outsl
sub
leave
or
inc
jmp
shll
int
jecxz
lods
repz
xlat
pop
xchg
cli
pop
aaa
jno
jnp
ja
mov
push
stos
lret
xor
jl
shlb
mov
lods
insl
sub
pop
sbb
inc
jne
insb
xchg
aaa
mov
ja
flds
adc
iret
scas
push
cwtl
add
push
jge
lret
cs
pop
push
testb
xlat
xor
out
loope
lret
pop
enter
jno
xchg
shll
mov
test
outsl
jg
sub
inc
adc
mov
push
mov
and
inc
sbb
push
jno
jnp
mov
iret
mov
fisttps
dec
shl
dec
fistpl
add
mov
jmp
cmpb
pop
xor
and
adc
adc
push
xor
xchg
into
jnp
push
mov
cmp
mov
fs
loop
pushf
jne
jl
mov
data16
dec
icebp
mov
ret
std
ficompl
lcall
aad
repz
add
sub
test
and
xor
sub
clc
mov
fbstp
xorl
adc
insl
mov
fdivs
bound
mov
scas
pop
mov
mov
cwtl
lea
test
fs
xchg
popa
mov
loopne
adc
pop
arpl
lea
ficoml
aas
test
lcall
xchg
adc
mov
sub
int
repnz
push
mov
fisubrs
jge
fadds
dec
imul
mov
mov
or
in
repnz
in
or
mov
mov
lret
int3
pop
out
mov
fucom
mov
insb
in
add
out
pop
daa
adc
push
lcall
mov
lock
add
mov
sub
ljmp
ret
lock
es
cmp
push
lods
and
inc
loopne
and
cmpsl
push
cmpsl
popf
int3
dec
or
pandn
int3
pop
repz
push
subb
or
inc
dec
inc
dec
or
push
scas
into
fwait
cmpsb
aaa
push
fisubrl
inc
pusha
mov
sbb
xchg
cltd
or
stos
popa
jne
repnz
mov
mov
pop
shr
jae
sbbl
test
lods
ficoms
mov
lock
adc
ja
sub
mov
mov
vmread
sub
or
pop
mov
cmp
mov
lcall
mov
fistpll
fs
xor
inc
lods
lock
fdivl
shr
jecxz
and
gs
lds
fcmovnbe
negl
adc
jmp
adc
cltd
mov
hlt
ret
jae
jb
in
jne
pop
pop
ljmp
push
cmp
mov
call
inc
sbb
fnstsw
lods
out
imulb
aaa
xrelease
dec
outsb
clc
dec
fwait
push
repnz
sub
popa
adc
mov
jmp
data16
xchg
pop
adc
int3
mov
mov
cmpsb
sbb
popa
mov
je
and
mov
pushf
imul
xchg
ror
pusha
dec
adc
sti
scas
je
in
out
pop
lea
pop
jmp
fidivrl
push
ja
repnz
cmpb
cmc
mov
testl
in
pop
sahf
or
or
mov
push
loop
insb
pop
mov
insb
push
ja
rorb
std
faddp
xchg
movsl
inc
pop
pop
loopne
mov
pop
iret
inc
xor
or
aam
mov
push
add
aas
nop
les
mov
nop
ja
ljmp
mov
ror
pusha
pop
repnz
lret
icebp
push
enter
imul
shlb
push
cmp
testl
sub
xchg
movsl
push
scas
jno
shl
cmp
mov
push
loopne
sbb
mov
int
and
mov
cmp
decl
sub
mov
cmpsl
test
pop
aaa
das
mov
jg
xor
jno
xor
add
or
pop
jg
push
pushf
mov
rcll
cmc
loop
int
pushf
rolb
inc
jae
pop
sahf
fstpl
inc
fs
nop
mov
mov
inc
lcall
inc
out
xchg
mov
cwtl
test
dec
divb
xchg
mov
leave
mov
jg
in
pushf
xor
fmuls
push
lea
push
mov
shlb
jns
int
int3
ret
mull
pop
mov
mov
insb
xor
call
test
xor
fsubr
cmp
out
cmp
push
inc
dec
cmp
sbb
jnp
and
lahf
movsb
push
xchg
mov
mov
fcomip
push
mov
clc
out
notl
jmp
movsl
cmp
lods
xchg
pop
aaa
test
jo
dec
jl
jbe
iret
psllw
arpl
popa
js
dec
inc
sbb
mov
xchg
shr
rcll
testb
mov
lcall
and
cmp
adc
shlb
cwtl
addl
mov
xchg
mov
mov
pop
les
adc
and
jbe
clc
mov
or
movsl
dec
test
outsb
out
popa
in
pop
push
mov
pop
enter
xchg
cld
cmc
lcall
cmp
sub
dec
cmpsl
pop
int3
jbe
push
and
mov
dec
das
mov
jecxz
js
xlat
jecxz
jmp
mov
ficoml
sub
in
out
cld
jae
pop
mov
xchg
addr16
shlb
pop
pop
test
pop
clc
aaa
sub
sbb
in
rcll
imul
sbb
insb
cmp
xor
push
das
test
push
sub
jne
jecxz
cmp
push
bound
dec
pusha
cltd
push
popa
in
mov
roll
orl
cli
js
cmp
test
and
in
loope
mov
aaa
xor
xor
xchg
stos
mov
or
jp
mov
jno
xor
gs
sti
cs
push
sbb
fisubs
mov
and
addr16
rorb
arpl
jno
mov
adc
or
jns
fisubs
mov
jb
jb
subl
push
mov
fisubs
aad
subb
les
lcall
das
repnz
jmp
dec
inc
sub
ret
fs
jl
cmpsb
dec
clc
dec
cmp
mov
cwtl
mov
xchg
add
int
cmp
fildl
lock
xchg
xor
jecxz
cmpsb
and
popa
adc
js
popl
insl
inc
sub
sub
bound
push
cld
cltd
mov
addr16
sbb
lds
mov
lret
lods
mov
addr16
mov
or
mov
clc
call
ret
xlat
cld
push
das
mov
add
imul
push
lret
lock
test
jae
subb
aad
mov
loop
pop
jbe
sti
pop
mov
mov
add
sub
cld
xchg
jb
dec
lcall
int3
sub
adc
test
icebp
dec
sahf
adc
or
dec
setp
or
insb
mov
cmc
adc
inc
push
imul
xchg
std
pop
jp
xchg
cmp
push
in
adc
push
jmp
stos
push
sbb
cmpsb
jne
subl
stc
gs
dec
scas
add
out
imul
sbb
push
rcrl
ljmp
lahf
inc
sbb
scas
add
insb
inc
mov
sbb
xchg
jae
in
sbb
out
and
or
mulb
in
fmuls
imul
rorl
push
cli
xor
jmp
ror
std
cmp
add
repz
sahf
jge
rol
js
adc
arpl
xor
xor
or
jnp
pop
das
or
mov
cmc
repz
rorl
insb
inc
mov
test
sti
xchg
mov
inc
call
bound
sbb
pop
fcmovu
in
add
jnp
mov
btr
fisubrl
and
shll
pop
and
pop
mov
pop
push
cmp
dec
inc
bound
mov
jne
fwait
pop
cmp
mov
dec
test
jle
push
mov
dec
out
mov
rorl
aas
dec
cmp
subb
and
testl
test
or
loope
xlat
int3
fstl
mov
nop
and
sbb
mov
ficomps
js
fcoml
add
negb
xor
push
push
xchg
scas
or
push
mov
and
xchg
inc
fiadds
xor
js
or
cs
out
fdivrs
ret
xor
push
sbb
and
inc
imul
insl
mov
pop
lea
mull
and
int3
lock
push
aaa
aas
les
mov
dec
jg
in
imul
push
popa
flds
mov
sub
or
pop
sub
incl
cs
divl
iret
ficoml
out
aaa
pop
sbb
dec
daa
aad
mov
lods
iret
push
push
mov
inc
fimuls
sbb
adc
pop
sub
jno
push
fisubrs
xor
lret
fstps
pop
into
adc
in
jmp
inc
pusha
sarb
in
in
inc
jge
or
loopne
lcall
inc
scas
lret
cltd
pop
shlb
xor
mov
jno
jmp
fucomip
ja
stc
loopne
stc
cmpl
lea
mov
aas
outsl
test
lock
clc
outsl
or
test
push
loop
pop
movsb
push
push
push
lcall
push
ss
fstpt
cmc
jmp
cmpsb
mov
jmp
mov
rol
inc
mov
clc
push
jge
pop
shl
inc
mov
ja
fs
out
loope
cmp
adc
test
sbb
sub
ficompl
iret
inc
jae
lock
lret
push
sub
xor
xchg
xchg
mov
movsb
cld
mov
in
pop
cwtl
dec
scas
rorl
adc
jmp
lods
fs
adc
mov
lods
mov
js
inc
sbb
lea
mov
repz
mov
lret
add
fbld
jnp
pushf
jp
repz
mov
in
xorb
repz
or
stc
inc
push
jns
add
je
sub
dec
mov
dec
jmp
mov
imul
iret
xor
fnstenv
dec
daa
je
and
xor
and
pop
bound
out
mov
loopne
enter
jae
pop
push
mov
lea
xchg
out
movsb
and
xchg
mov
dec
pop
jecxz
sbb
stos
insb
push
cltd
add
in
pusha
mov
mov
add
in
pop
jns
aas
dec
pop
jns
clc
ficomps
fmul
mov
fidivrl
lods
shr
dec
js
jp
mov
cmpsb
push
xor
inc
stos
out
cwtl
or
xor
adc
and
in
incl
stc
adc
mov
das
push
pop
pop
adc
sbb
mov
cmp
sub
js
inc
imul
shrl
mov
aas
gs
frstor
loope
aas
loop
cmc
rcll
movsb
jl
or
and
fists
outsb
inc
or
loop
pushl
rcll
outsl
inc
rcrl
pop
ret
mov
xchg
mov
push
aaa
repnz
int
cmpsb
orl
mov
fisubrl
shlb
push
into
dec
fmuls
dec
fcoms
xor
subb
dec
imul
rcl
sub
leave
push
pop
xor
push
popf
jae
adc
out
mov
out
std
sti
fbld
test
imul
pop
sbb
mov
inc
sub
movsb
dec
push
loop
mov
lock
xor
cmpsb
xor
jge
wbinvd
inc
hlt
pushf
es
ljmp
and
adc
iret
mov
bnd
mov
mov
aam
or
jnp
insl
push
and
std
push
adc
sbbl
sbb
jp
cmp
daa
push
ret
iret
add
lret
fsubr
cld
in
xor
mov
inc
or
js
xchg
mov
cmp
leave
mov
enter
daa
js
mov
lock
fldcw
jbe
into
inc
push
movsb
lret
xor
pop
insb
pop
pop
xor
flds
call
hlt
and
cmp
pop
outsb
mov
or
data16
mov
add
scas
push
mov
lcall
fists
test
cmp
std
ss
push
cmp
in
cmp
lock
mov
mov
adc
inc
fcoml
sbb
cmp
xchg
xchg
jecxz
stc
and
pop
orl
push
adc
mov
inc
imul
jecxz
jp
and
cmp
pop
cmp
lahf
sahf
pop
test
aad
stos
adc
add
fs
sub
stos
mov
scas
mov
int
mov
push
cld
jno
push
mov
add
inc
inc
and
or
gs
pop
fsubp
enter
push
sti
test
adcb
out
push
add
jmp
into
dec
push
imul
aas
je
jno
ss
test
push
je
arpl
xor
cmpl
popa
xchg
mov
fdivr
jo
adc
outsl
push
jge
lcall
or
pusha
ds
add
add
out
inc
add
sbb
outsb
inc
cli
mov
cltd
sub
repnz
pop
push
sub
ret
add
push
mov
push
and
aaa
cmp
xor
loopne
out
mov
and
inc
xor
xor
idivb
jne
repz
sub
out
mov
out
dec
fs
bound
sub
cmpsb
sub
mov
and
inc
dec
jb
pushf
lock
and
sbb
add
and
mov
sar
lea
scas
and
push
jne
popa
mov
adc
push
out
repnz
sub
movsl
inc
adc
out
aaa
lahf
add
xchg
or
divb
shll
xchg
pop
fs
mov
xchg
nop
mov
daa
xlat
mov
mov
in
and
add
adc
fists
fstpt
mov
stos
test
test
cli
shl
xchg
lcall
movsb
jne
mov
inc
adcl
jmp
adc
push
loope
push
fwait
in
or
inc
cmc
inc
test
lock
mov
mov
fidivs
add
push
leave
outsb
jl
xchg
xorb
leave
int
loope
xchg
inc
mov
movaps
imul
test
and
xor
jb
fmulp
repnz
es
stos
adc
daa
pop
jae
js
pop
lret
pusha
addr16
inc
and
xlat
xor
push
imul
iret
in
add
fwait
mov
cli
inc
lods
fcoms
loope
xchg
into
mov
imul
test
mov
jecxz
mov
xchg
iret
rorl
outsb
pop
lcall
jae
repz
mov
pop
in
ss
push
pop
push
pop
inc
cmc
push
cmp
sti
adc
push
dec
xlat
xchg
dec
pushf
adc
lret
jecxz
test
aas
mov
inc
sub
gs
inc
and
dec
or
insl
dec
js
out
ficomps
push
push
add
xor
int3
clc
pop
jo
lods
or
test
scas
push
lods
sbb
dec
and
jge
cmpsb
int
dec
push
sbb
dec
dec
mov
out
push
sub
xor
int3
in
sub
sub
xchg
or
push
xor
or
push
mov
cltd
and
pop
mov
xchg
jecxz
mov
shll
adc
pop
mov
pop
jle
std
lods
add
cltd
pop
mov
jge
push
dec
cmp
loopne
nop
mov
inc
mov
repz
andb
mov
or
xor
rol
dec
mov
loop
repnz
xor
lret
test
lahf
pop
dec
adc
sub
dec
cs
cmp
mov
call
fcmovnbe
jge
sbb
pop
dec
int
or
sub
out
pop
stc
aad
ds
or
aam
nop
mov
pop
dec
inc
jle
xorb
sub
pop
mov
movb
int
mov
inc
adc
lret
xchg
clc
or
xchg
lcall
dec
je
sub
mov
mov
mov
aam
jmp
loop
addr16
push
pop
mov
lcall
ret
gs
daa
mov
jmp
push
or
sbb
mov
xlat
push
inc
sti
rcrb
jne
xlat
push
fbld
cmp
dec
pushf
filds
ds
pusha
sbb
mov
aad
push
dec
mov
xlat
out
push
push
sbb
or
ret
push
mov
lahf
sub
pop
mov
fiaddl
imul
pop
repnz
pop
pop
mov
sub
pop
push
pusha
sub
mov
cmp
data16
out
and
or
in
movsb
movsl
mov
negb
sub
xor
cmp
pop
ds
jnp
pop
mov
push
xchg
loope
push
mov
fs
sub
push
fwait
repz
lcall
or
scas
pop
xchg
jb
jnp
and
lret
ret
push
jnp
mov
shlb
iret
jno
xchg
test
adc
and
mov
or
insl
mov
das
dec
cmpsb
push
fiaddl
nopl
imul
mov
xor
jnp
in
push
pop
sbb
push
popf
push
sub
fdivp
push
mov
jmp
lahf
outsl
push
xchg
repnz
mov
jp
addr16
rcrl
iret
mov
dec
jae
mov
pushf
cmp
push
or
and
insl
loop
adc
inc
shlb
and
stos
add
xchg
out
addl
xchg
adc
aaa
test
cmp
pop
mov
jmp
fstp
mov
fdivrs
cld
rclb
push
push
lahf
xchg
in
cmp
in
jecxz
fs
dec
mov
enter
add
xchg
lret
mov
add
test
sub
fadds
xorb
jno
or
xchg
rcrb
sbb
mov
jp
xchg
mov
mov
jae
sub
mov
mov
sti
cmp
cmp
std
dec
push
jns
sub
das
inc
or
xchg
and
dec
fsubs
das
pop
adc
ds
pop
movsl
jb
je
fwait
adc
mov
push
add
cltd
cmp
lahf
dec
std
pop
clc
sarb
out
or
jo
ret
mov
mov
inc
std
mov
inc
pop
stos
sahf
jge
mov
outsl
xor
iret
rorl
pushf
dec
lret
mov
push
jg
test
inc
sub
xchg
sbb
adc
shl
repz
aam
or
daa
jne
fucomi
sub
ret
pop
jnp
sbb
das
rclb
mov
pop
mov
incl
pop
dec
mov
ret
das
inc
sar
sub
js
std
enter
gs
jp
ljmp
mov
jmp
sbb
ja
cmp
inc
lahf
cmp
cmpl
cmpsl
imul
ret
jle
pop
loope
stos
mov
aas
repnz
inc
movsb
shlb
inc
and
lds
rcll
ficomps
out
lret
shll
roll
js
popf
lcall
cli
iret
dec
add
call
mov
sub
xchg
xor
dec
push
mov
inc
gs
push
pop
mov
push
fildll
cmp
mov
push
gs
mov
cli
push
nop
out
insb
mov
jmp
pushl
fstpt
lahf
mov
mov
push
dec
outsl
pop
push
xchg
je
sbb
fistps
and
test
inc
andps
inc
imul
xor
out
dec
ja
pushf
jno
movsb
push
jecxz
and
or
xchg
dec
or
fs
add
mov
cmp
aaa
cmpsb
push
ljmp
jl
rolb
sahf
xchg
xchg
mov
and
cmove
test
loop
and
mov
xor
stc
jae
mov
cwtl
xchg
mov
cmp
ljmp
in
pushf
mov
imul
inc
cs
and
adc
push
enter
adc
push
and
fbld
out
iret
aas
mov
shr
lods
ret
std
jmp
adc
push
fidivl
push
or
pop
or
std
insb
dec
cld
divl
push
fcomi
mov
dec
mov
test
pop
mov
jmp
jp
cmp
addb
add
mov
std
xor
adc
inc
mov
jbe
aaa
xor
jle
and
xor
out
mov
sub
push
push
mov
testl
leave
pop
xchg
cltd
mov
inc
outsl
dec
js
jne
mov
add
inc
js
ret
and
inc
mov
lret
push
jae
arpl
pop
arpl
in
loopew
mov
pop
add
cli
loop
xor
mov
mov
popa
out
push
mov
mov
popf
or
dec
push
fsubrl
outsb
in
hlt
incl
ja
inc
sahf
mov
and
push
stos
lcall
inc
sbb
jl
xor
lret
cwtl
xchg
jecxz
jecxz
repz
cmc
stc
inc
jmp
push
mov
dec
ret
xchg
in
movb
mov
mov
mov
mov
add
push
dec
xchg
mul
jno
dec
test
sbb
es
ljmp
test
std
pop
cmpsw
ja
test
mov
lds
in
mov
mov
push
adc
popa
in
aaa
lcall
jge
pop
ljmp
adc
in
pusha
mov
jno
mov
cmp
mov
leave
or
jnp
add
jnp
or
cli
jge
push
fs
or
pop
sbb
sbb
add
fwait
iret
mov
xchg
jb
mov
aaa
sub
scas
pop
iret
xor
leave
into
shrl
mov
dec
mov
pushl
in
int3
sbb
push
daa
push
aaa
xchg
test
lods
mov
mov
mov
sarb
cmp
xchg
jno
incb
orb
cld
jae
add
cmp
call
or
test
jnp
mov
jbe
xor
out
mov
movsl
notb
ljmp
cmp
mov
gs
xor
nop
push
insl
mov
inc
nop
jmp
push
push
lret
cmpsb
xchg
mov
sub
inc
mov
jmp
repnz
stos
rorb
xchg
fimull
out
int
outsl
cmpsl
jne
sbb
add
imul
xor
sub
enter
scas
out
add
mov
roll
bound
sub
cltd
in
mov
pop
and
xchg
cwtl
xor
dec
push
add
dec
pop
ret
mov
shlb
dec
out
add
inc
mov
jbe
outsb
int
loop
add
cwtl
add
jb
xchg
insb
mov
gs
lea
sbb
adc
cmc
aam
jno
lret
xor
push
movsl
fs
sbb
xor
push
aaa
sub
jbe
leave
xor
leave
pusha
cmpsb
adc
outsb
sub
arpl
out
sub
aad
add
or
dec
jle
daa
lret
pop
lret
sahf
push
sub
adc
mov
mov
mov
std
xchg
iret
ja
push
test
jbe
push
scas
pop
lock
add
mov
or
or
pushf
mov
imul
or
aas
push
into
cmp
pop
mov
shl
or
cmp
jmp
mov
pop
ss
pop
lds
cld
jge
lret
adc
cmpsl
int
std
popa
xor
xchg
mov
pop
repnz
xor
into
rolb
push
or
lds
das
or
xor
push
xor
jmp
sbb
sti
or
jl
stc
mov
ror
inc
cli
mov
in
mov
sub
jne
xchg
mov
mov
out
shlb
shr
xchg
mov
adc
jns
hlt
ljmp
add
out
sub
push
insl
dec
in
xchg
cmp
push
dec
fiaddl
mov
ds
cli
add
mov
push
pop
pop
adc
into
adc
cmp
nop
out
fwait
push
leave
ror
jmp
sbb
xor
mov
jno
aaa
xchg
pop
sbb
ljmp
rolb
cmc
pop
outsl
jbe
js
sbb
inc
sahf
fiadds
std
cs
pop
push
mov
lods
pop
pop
xor
cmp
lret
adcb
adcl
or
or
testb
scas
push
mov
arpl
push
insl
add
outsl
add
jbe
xor
sbb
jo
add
repz
ljmp
xchg
rclb
add
xchg
movsb
cmpsb
adc
sarl
cmp
addr16
mov
jae
push
push
cmc
aad
add
fnop
mov
orb
ret
jb
push
movsb
cmp
hlt
scas
push
scas
mov
push
add
das
jle
adc
xor
ss
loope
pop
sbb
push
insb
call
jno
dec
jno
imul
push
sbb
stos
sbb
push
mov
cmp
push
pop
dec
orb
rcr
or
repnz
pop
pop
cmp
or
xor
cmc
adc
sbb
mov
enter
pop
add
vcomisd
jg
imul
cmc
fs
int3
sbb
adc
mov
cmp
cwtl
sahf
faddl
shl
dec
mov
add
adc
or
xchg
jp
or
pop
xchg
cwtl
push
xor
cld
cmp
popa
mov
fsubl
pop
call
mov
mov
cmp
xor
rcll
fnstcw
fidivrs
rclb
addb
test
outsl
push
outsb
push
mov
pop
ja
add
nop
mov
movsl
mov
out
inc
pop
jae
ja
inc
xchg
mov
add
xchg
sbb
inc
dec
push
outsl
xor
mov
jne
stc
jmp
jge,pn
mov
dec
inc
pushf
fldcw
stos
aas
fwait
cs
lret
rcrl
fidivrl
loopne
add
add
fildl
mov
adc
jbe
sbb
in
xchg
inc
pop
leave
or
outsl
pop
fbstp
add
les
int
insl
cmp
ror
dec
cpuid
push
mov
jle
jp
sub
jmp
cmpsl
movsl
stc
lds
cmp
push
dec
lret
and
in
or
or
xor
je
push
sbb
sub
dec
icebp
sti
es
lods
lret
fisubrl
pop
push
dec
rolb
ret
repz
pop
jb
fldl
add
lea
shlb
cltd
lock
mov
mov
jbe
or
cwtl
sub
imul
push
inc
fidivrs
mov
mov
xchg
xor
fisubl
inc
loope
and
into
sbb
andl
imul
jae
cmpl
push
iret
in
lea
adc
add
pop
cld
popf
mov
jp
jnp
and
bound
aam
int3
and
sti
mov
jbe
mov
cmp
or
in
add
inc
ficompl
mov
cmp
cmp
fimuls
rcll
mov
ja
cmp
dec
mov
push
ret
fsubs
mov
ds
pop
lret
pushf
sbb
mov
sahf
pushf
dec
call
ds
cmp
mov
pop
cwtl
subl
or
inc
pop
inc
das
sbb
adc
xor
push
sub
test
ficomps
das
lock
adc
mov
rolb
pop
jg
rol
jae
or
iret
xchg
test
aad
add
ret
dec
inc
jno
add
sub
inc
ror
pop
aam
fwait
pop
xchg
jle
stc
mov
adc
cmp
xchg
mov
syscall
outsl
push
cmp
je
and
imul
sbb
roll
pop
push
mov
sbb
jl
imul
or
add
jo
in
cmp
mov
cld
inc
test
fldenv
sti
popa
jns
dec
test
or
outsl
jbe
adc
sbb
mov
out
aas
into
aas
cli
hlt
inc
cmp
out
cs
xchg
fisubrl
lahf
out
inc
fdivr
mov
scas
pop
mov
jb
jbe
out
xor
pop
mov
push
or
push
xor
mov
cltd
outsl
scas
clc
push
dec
mov
jnp
add
xor
rcl
imulb
repnz
pop
int3
repz
sti
xlat
jbe
push
repz
les
sbbl
pop
jp
cltd
adcb
fdivl
mov
dec
daa
xor
sub
sub
mov
orl
call
in
mov
imul
inc
out
std
lret
sbb
test
in
in
ror
aam
into
push
rolb
addr16
sbb
mov
cmpl
adcl
lea
test
mov
outsb
int
add
sti
and
push
aam
xchg
cmp
mov
icebp
in
cmc
mov
cmp
jmp
mov
shrl
adc
inc
sbb
dec
and
cmc
fstps
mov
dec
push
xor
xchg
push
rol
loopne
sub
roll
jecxz
pop
sbb
or
dec
dec
loop
int
inc
int
and
jl
stos
cmp
mov
xchg
std
movsl
test
out
fldt
daa
mov
push
mov
mov
inc
xchg
imul
inc
test
js
xor
dec
and
jb
subl
inc
outsb
in
lds
inc
bound
fistl
mov
xor
movsl
and
or
or
and
push
test
mov
lret
lea
out
add
xor
int3
and
popa
fdivrs
and
sbb
repnz
push
pusha
pushf
or
scas
repnz
rorb
cmp
adc
int
cmp
mov
repz
ss
jmp
call
mov
mov
add
hlt
pop
mov
fwait
pushf
pop
mov
xor
mov
mov
sub
aam
mov
jp
cld
sub
fldcw
and
not
inc
int3
loopne
popa
mov
mov
repnz
scas
or
and
and
or
shrl
push
mov
sbbb
hlt
stos
push
mov
and
cmp
inc
fildl
stos
call
push
test
add
push
jecxz
and
dec
testb
xchg
insb
imul
push
mov
mulb
fwait
xchg
repnz
int
dec
mov
fstpl
shrl
rcll
ljmp
mov
js
pop
clc
testb
es
insb
cld
push
hlt
inc
mov
stc
test
mov
inc
xor
dec
fistps
std
mul
xchg
arpl
push
dec
sub
fcompl
rcll
loop
cmp
out
inc
jmp
sbb
jp
rclb
mov
pop
sbb
lock
pusha
popa
xor
outsb
fisttps
outsl
mov
xor
or
cmp
adc
test
mov
jmp
mov
ret
inc
xchg
repnz
push
aaa
add
mov
in
aas
movsl
push
adc
jge
mov
out
pop
pop
mov
sbb
cmpsl
and
jns
scas
push
mov
cmpsb
stos
pop
subb
int
jnp
mov
mov
imul
in
ja
push
adc
sbb
or
dec
cwtl
xor
les
xor
push
pop
dec
lret
push
test
jbe
sbbb
ss
lahf
xlat
int
xlat
xchg
mov
xchg
xor
data16
lret
shr
mov
xchg
test
adc
push
ret
ror
stc
and
adc
or
jmp
adc
rcll
sti
hlt
cmp
jno
xor
sarl
bound
mov
add
ds
loopnew
aad
incl
inc
loopne
loop
outsb
adc
and
pop
fdivp
lods
outsb
std
xchg
adc
aam
jae
mov
push
stos
sbb
test
fiadds
pop
movsl
inc
les
movsl
and
addr16
fsubrl
sbb
sbb
sub
mov
cmp
cmp
mov
dec
push
jl
adc
add
jnp
movsb
mov
add
les
rolb
push
lods
mov
sbb
jnp
movsb
adc
cmpsb
aas
in
pop
shrb
and
sub
or
inc
dec
jno
jge
ficompl
fidivrs
lds
jmp
jae
mov
lret
sub
in
lock
add
mov
lea
lea
mov
mov
jp
adc
es
out
insb
pop
orl
jecxz
add
mov
jp
fstpt
call
daa
arpl
adc
and
pop
cld
adc
adc
je
arpl
hlt
inc
ja
dec
xor
outsb
xorb
lcall
sbb
fdiv
stos
mov
xchg
out
cli
jb
jp
sub
sbb
mov
jg
jg
sub
push
in
rolb
cmpsb
dec
cld
mov
in
adc
pop
dec
movsb
cmp
mov
lret
xchg
or
or
incl
ja
stc
jns
xlat
popa
popf
sahf
sarl
jp
fs
xchg
mov
outsl
sub
jb
inc
jecxz
push
js
out
and
dec
movsl
into
mov
sub
icebp
lods
cld
stc
inc
push
cli
adc
or
fwait
jne
push
and
inc
dec
pusha
rcrl
sbb
push
push
ret
pusha
pop
out
iret
adc
and
pop
mov
mov
sbb
lret
js
add
es
call
stos
mov
out
mov
mov
cmpsb
call
push
cmc
and
jns
fists
arpl
or
pop
idivb
movsb
adc
sbb
dec
ja
push
fiaddl
xor
sbb
shrl
cli
out
cmpsl
clc
xlat
dec
fcmovnb
in
inc
test
mov
adc
ljmp
outsb
or
int3
sahf
enter
sub
sbb
lock
lds
push
leave
lds
call
mov
add
int
pop
bnd
popa
push
cld
loope
test
fisttpl
enter
scas
xchg
dec
decl
ud0
pop
idiv
cs
push
jl
sbb
sarb
int
sub
mov
shl
repz
subl
out
cmpl
xor
out
shll
call
stc
in
das
jle
push
or
sub
lock
push
out
xchg
cltd
xor
mov
mov
lret
mov
stc
cmp
mov
nop
repnz
fistpl
and
rolb
sbb
add
jecxz
xchg
add
cwtl
and
aas
inc
xor
sub
std
mov
mov
push
ja
int
mov
test
push
jb
cmpb
push
mov
js
pop
shr
and
mov
jnp
add
dec
cwtl
dec
lret
imul
lea
xor
aam
mov
pop
or
add
inc
cmp
aad
mov
mov
std
insl
or
insb
ret
jbe
out
out
pop
loope
lret
arpl
dec
test
pop
pushl
adc
jl
insl
repz
xor
stc
clc
pop
out
fbld
subl
ror
outsl
mov
push
fld1
fildl
shrl
mov
pop
jge
add
int
add
sbb
cmp
push
stc
addr16
leave
push
pusha
sub
jp,pn
aad
jle
lahf
push
jbe
aaa
fwait
xor
int
aas
mov
adc
outsb
mov
cmpb
imul
adc
das
clc
sub
sbb
xor
das
loopne
andb
sbb
push
mov
ja
ss
sbb
xchg
add
hlt
pop
pop
cltd
bnd
sub
push
jo
sub
xor
sbbb
inc
mov
sbb
leave
cmp
pop
movsb
jns
sub
cwtl
shlb
mov
lods
pop
xchg
sbb
mov
sbb
pop
mov
jp
in
inc
jns
fdivrp
adc
push
xchg
fidivs
jecxz
jnp
mov
mov
rcll
in
insb
push
pusha
jns
mov
pop
lods
pop
dec
jge
pop
cwtl
ret
inc
cmpsb
loopne
addb
stos
ret
jne
cmp
pushf
inc
rorl
movsb
repnz
push
add
js
push
push
adc
aas
test
les
xchg
jno
and
scas
in
pop
inc
xor
mov
enter
adcl
lods
cs
jnp
popa
mov
mov
fsts
ffreep
ficomps
inc
pop
insl
inc
mov
sahf
data16
fimuls
mov
mov
adc
push
shl
push
mov
fidivl
mov
cmpl
mov
mov
xchg
mov
push
or
frstpm(287
andl
adc
scas
sub
dec
xorb
lods
test
cmpsb
ss
sub
lods
adc
loop
data16
adc
jb
mov
arpl
popa
mov
in
outsl
and
mov
cmp
loope
sub
fldenv
jnp
jne
std
xchg
pushf
fwait
mov
cltd
jb
mov
iret
aam
jno
aaa
fdivrs
mov
in
pop
outsl
mov
jge
pop
xor
das
popf
adc
jl
pop
pop
and
cmp
fwait
lahf
stos
cwtl
stos
jp
fcmovne
orb
cmp
out
scas
inc
repz
push
jo
in
push
popa
inc
push
lea
inc
mov
stos
add
push
jno
mov
mov
pop
ljmp
mov
dec
mov
add
xchg
push
push
pop
or
daa
lret
inc
into
mov
push
orb
push
add
sbb
ss
push
jb
rcrb
stos
mov
xchg
sarb
mov
orl
stos
loope
jno
lahf
mov
movsl
cmp
mov
add
inc
imul
mov
repnz
jae
and
fldcw
sub
mov
cmp
imul
test
mov
setne
lahf
mov
add
mov
jnp
pop
std
clc
sbb
das
jp
cmpl
pause
adc
push
fildll
int
or
push
mov
adc
push
cld
dec
cmpl
sbb
sahf
push
push
cmp
mov
cs
dec
addr16
pop
out
and
js
jl
out
lret
sahf
push
push
cmc
scas
movsb
ss
sbb
push
cmp
fistl
mov
std
dec
pop
sahf
insl
xorl
shlb
push
add
inc
cmc
data16
test
xchg
fiadds
in
dec
mov
gs
aad
jno
insb
or
shrl
rorl
sti
jne
dec
fidivl
jne
cmp
inc
pusha
mov
push
cs
mov
and
push
mov
ss
out
xor
test
xor
adc
jb
mov
fdivrl
sub
dec
lock
inc
mov
xchg
sub
clc
add
push
imul
jo
popf
je
cmp
lahf
loope
sti
sub
test
dec
push
sarl
out
xor
inc
cs
lods
jns
inc
pusha
jae
mov
out
popl
ret
jnp
dec
out
add
and
jge
mov
shl
sbbb
xor
fsubr
mov
adc
mov
inc
pop
das
sti
aad
push
or
mov
fsubs
inc
cmp
sub
sbb
mov
shll
dec
jno
scas
stos
mov
sbb
js
popf
pusha
insb
outsb
and
sub
sub
or
jbe
lods
jns
shrl
mov
imul
cmp
mov
dec
pop
dec
mov
mov
call
scas
iret
stos
mov
cwtl
stc
push
mov
ss
push
insb
stc
call
das
repz
mov
adc
cmpsb
ret
scas
lcall
mov
push
mov
ljmp
jno
repz
cmp
pushf
mov
cmp
out
lcall
popa
pop
ja
cli
mov
mov
lret
jmp
adc
out
sbb
mov
loop
loope
cmp
andb
sbb
rcrb
jg
cmovb
cmpsl
aaa
lds
outsl
xchg
add
shlb
mov
aam
neg
cmp
loopne
stos
jge
and
lods
push
clc
jnp
lock
testb
push
hlt
and
xor
xor
mov
cs
push
in
cmp
pusha
addl
add
js
out
nop
mov
inc
int
aam
movsl
push
cwtl
and
sbb
in
push
mov
fstps
dec
test
decl
mov
cmpsb
pushf
pop
rcr
mov
adc
xlat
fidivrs
lds
add
lret
je
add
push
ljmp
or
sti
rcr
icebp
hlt
jnp
repz
mov
sub
or
int3
pop
sub
imul
adc
mov
xchg
repnz
aas
rclb
cmp
lahf
inc
mov
push
inc
ds
pop
sahf
xor
sahf
loope
sub
fldl
js
mov
pop
pop
into
shll
les
jecxz
cmp
fsts
sub
data16
lret
sub
sub
jge
inc
das
movsl
push
jge
imul
lret
aaa
out
pop
mull
xchg
loope
repnz
or
pushf
sub
jecxz
inc
jnp
and
sub
daa
dec
cmp
cmp
std
stos
daa
push
sbb
sti
fildl
repnz
dec
xchg
cmc
ss
sti
pop
lods
fnsave
mov
push
cmc
add
fimull
dec
mov
cmp
adc
in
adcl
cmp
push
mov
jecxz
test
call
mov
cmp
lea
insl
xchg
jns
mov
cmp
xor
sub
cmc
pop
push
cmp
dec
push
sbb
sti
int
loop
ja
fmuls
cwtl
lret
call
jmp
loope
adc
dec
je
or
outsl
or
out
leave
js
dec
ss
xlat
imul
es
ffree
xchg
cltd
jp
cmp
mov
enter
dec
fidivrl
insb
xlat
xorb
fisubrs
push
and
mov
xor
cld
sbb
xor
add
lods
sbb
out
sbb
mov
xchg
xor
cld
aas
mov
call
xlat
fwait
mov
jge
cmpsl
or
inc
out
ds
mov
pusha
shrl
sahf
mov
cmc
sbb
enter
sbb
sub
mov
xor
lret
sub
mov
pushf
andl
adc
jns
es
jbe
test
mov
inc
sbb
ret
sub
in
mov
test
in
iret
fisubl
fidivrl
add
cmp
js
push
xchg
sub
in
rol
repnz
cli
adc
push
push
push
adc
and
mov
pusha
push
insl
cmp
mov
popa
daa
cwtl
sub
mov
mov
jmp
sub
pop
xchg
push
inc
in
mov
sub
cmpsb
push
cs
mov
mov
lock
push
fcoml
mov
push
mov
aas
cld
ret
xchg
pop
mov
mov
repz
stos
add
scas
adc
bound
sbb
jns
dec
add
icebp
dec
hlt
adc
mov
cmp
scas
push
dec
dec
dec
fdivs
adc
stc
pop
int3
aad
dec
xor
pusha
dec
mov
cmp
arpl
imul
and
jg
leave
shl
stos
lahf
lret
dec
xor
pop
mov
add
rorb
jb
pusha
push
nop
push
sbb
nop
mov
fsubrl
fucomp
xchg
inc
xchg
jp
das
sbb
sti
cmpsl
sahf
xchg
add
dec
cmp
test
pushf
sub
fs
cmpsl
mov
inc
pop
test
sbb
inc
stc
out
ljmp
cmp
mov
mov
jmp
adc
shlb
stos
fildl
fsubrs
jl
mov
cmpsl
outsl
or
dec
stos
fnstsw
xchg
aam
fsubrp
loope
adc
xchg
into
mov
insb
sbb
aas
and
fwait
call
dec
or
out
sub
push
jo
jno
hlt
and
add
fists
adc
lea
dec
sbb
mov
popf
dec
dec
xlat
inc
xor
in
mov
mov
int
lods
pushf
mov
inc
in
int
rorb
pushf
imul
cmp
mov
shrb
xchg
xor
pop
dec
xchg
mov
xor
inc
adc
sbb
xchg
jge
and
add
fdivs
lret
int
sub
das
fsubs
xchg
inc
jp
dec
jg
in
mov
cltd
das
cmp
dec
fmull
insb
aaa
cmp
sub
lods
xor
imul
repz
bound
mov
inc
mov
loope
shlb
adcl
jb
int
test
cltd
jno
jmp
sbb
adc
dec
mov
dec
or
mov
sbb
fst
gs
test
push
jl
psubq
and
inc
data16
jp
aam
push
push
inc
out
adc
inc
daa
adc
cltd
imul
shll
jge
xor
bound
add
adc
out
sub
jge
fcomi
xchg
and
and
cmpsb
pop
fsts
jle
lods
cmc
sti
aaa
pusha
shr
mov
loop
jmp
adc
movsl
les
cmp
inc
mov
dec
sbb
fisubrs
rcr
mov
lret
in
js
sub
aad
adc
iret
and
xlat
in
scas
add
lock
mov
and
push
addr16
inc
mov
mov
pop
dec
pop
mov
ljmp
sahf
push
cmovae
push
gs
dec
mov
loop
stc
lret
jecxz
xor
jp
loope
jnp
dec
cld
sahf
push
mov
hlt
jns
mov
xor
daa
pop
sub
cmc
int3
xchg
test
minps
addr16
fcomps
jge
pop
mov
ds
and
dec
jle
adc
push
mov
xor
in
push
fildl
cli
shl
add
xchg
push
fs
pusha
or
sarb
and
lcall
add
icebp
cmp
mov
pop
in
jecxz
iret
negb
sti
enter
hlt
cli
fdivl
popf
in
aaa
mov
mov
ss
push
push
mov
or
sub
adc
pushf
mov
leave
stc
inc
pushw
sbb
les
pusha
out
dec
int3
inc
jl
cmp
cmp
stos
push
and
and
shrb
xor
push
imul
mov
dec
repz
fsub
leave
in
push
icebp
mov
add
add
shrb
lds
stos
jl
ds
or
cmpsb
fcmove
xchg
xor
and
popf
mov
dec
add
in
out
lds
mov
push
roll
cmp
imul
cmp
scas
in
jno
outsl
das
pop
xchg
or
clc
adc
add
das
jp
xor
lcall
or
aam
cs
jle
lret
mov
inc
out
inc
ljmp
and
mov
mov
pusha
add
mov
nop
nop
xchg
adc
cmp
adc
xchg
jbe
sub
pusha
test
add
ret
sub
pop
adc
jmp
push
mov
jo
and
xor
and
jge
jmp
fisubrl
pop
or
lret
push
fs
xchg
sub
test
out
inc
jmp
fwait
idiv
daa
sahf
mov
int
push
jns
push
fucomp
jge
loopne
inc
dec
mov
and
sbb
cmpsb
ljmp
sti
adc
adc
jo
popa
rorb
scas
rclb
cmp
mov
or
test
jb
mov
push
mov
aad
jo
push
std
inc
fildl
cltd
sbb
loop
xchg
xchg
icebp
les
cli
mov
dec
inc
or
pop
mov
fstpl
mov
mov
cmpsl
inc
pop
bound
ficoms
push
jbe
jno
scas
fldcw
stos
dec
push
loop
popf
outsb
dec
jge
rorl
enter
pop
das
dec
inc
sbb
aaa
and
lahf
and
int
addr16
or
in
in
cltd
int3
loop
lock
dec
iret
outsb
jmp
shrl
or
enter
bound
fwait
movsl
xchg
and
shll
int
push
fs
insb
pop
dec
aad
ret
cmc
stos
mov
xlat
or
testb
fimuls
jne
mov
xchg
imul
adc
loop
fnstenv
jne
ret
add
jge
cld
and
inc
rcrl
mov
mov
ss
pop
jp
xor
int
in
pop
out
push
popw
into
or
aad
jno
test
sahf
push
nop
aas
sbb
or
push
icebp
add
lahf
adc
jle
inc
pop
ss
mov
loopne
xorl
dec
bound
fidivl
outsb
xchg
xchg
pop
loopne
stos
jnp
inc
into
mov
pop
sub
imul
dec
pop
or
jo
test
data16
mov
push
mov
ret
aam
mov
sahf
pop
test
ret
rcll
xor
sub
inc
outsl
je
incb
data16
in
hlt
and
out
shll
pushf
cmp
lret
pop
enter
icebp
xor
dec
test
cld
lcall
jmp
mov
xchg
cmp
mov
or
xorb
je
push
xor
adc
test
fisttpl
mov
adc
mov
jnp
jae
pop
test
es
mov
mov
pop
test
hlt
dec
xchg
xor
mov
fimull
jnp
xchg
andb
and
push
in
add
outsl
rolb
xchg
or
aaa
in
outsl
sub
xchg
out
xchg
xchg
or
cmp
mov
push
idivb
mov
notl
out
sub
rsm
aas
pop
jbe
xchg
mov
xchg
pop
pushf
movsl
inc
push
ja
lods
cmp
cmpsl
cmp
xor
ret
js
jb
repz
jmp
mov
insb
call
xchg
jecxz
add
jl
adc
xchg
mov
pop
into
or
cmpsl
lcall
mov
add
das
ret
cmpsb
xlat
dec
sahf
test
inc
imul
xor
arpl
jae
xchg
out
push
inc
dec
sbb
sbb
mov
or
mov
imul
mov
push
lahf
in
mov
in
jp
xor
lods
in
mov
or
adc
adcl
mov
loopne
pop
jg
roll
daa
leave
shlb
xchg
inc
ljmp
dec
mov
pop
clc
dec
inc
inc
sbb
loope
pop
sub
pop
loope
shlb
jge
xor
insb
popf
loop
xchg
jl
cmpsl
dec
in
cmp
cmp
mov
xchg
addr16
mov
pop
jecxz
aas
pop
mov
jns
add
dec
imull
std
cltd
ja
and
hlt
jmp
sbb
das
xlat
inc
imul
jmp
loop
dec
xchg
xchg
mov
ja
imul
repz
hlt
das
push
dec
xlat
cmp
push
adc
xchg
dec
shrl
shll
aaa
cmp
push
push
mov
mov
mov
or
int
loope
push
dec
sti
and
push
gs
clc
or
shrl
sbb
inc
popa
sub
xor
cmc
xor
lods
leave
dec
pop
cmpl
cmovge
ds
jae
out
xchg
mov
push
dec
xchg
repnz
mov
jo
cmp
and
sbb
lods
xor
lcall
pop
call
shrl
xor
xchg
aam
dec
in
push
jge
xchg
pop
cs
dec
popf
inc
call
inc
outsl
xchg
pop
sub
int3
cmp
pop
je
out
jnp
inc
aad
jne
outsl
fsubr
jae
sbb
mov
sub
cmp
pushf
int
push
inc
mov
xor
mov
ficoml
loope
test
sbb
mov
stos
push
push
shr
mov
inc
add
add
inc
mov
bound
push
imul
lcall
aam
mov
push
aaa
sbb
pop
jmp
add
dec
jno
lock
mov
out
daa
shrl
insb
adc
dec
fsubs
add
les
add
push
mov
fisttpl
cmp
decl
icebp
dec
leave
loope
dec
xchg
scas
fnsave
ds
movsl
jmp
scas
pop
frstor
pop
xchg
gs
sbbl
subl
daa
mov
mov
fdiv
imul
pusha
cli
cmp
sub
imul
ret
addr16
andl
xchg
push
addr16
mov
sahf
test
mov
dec
cli
push
stc
push
pusha
cmp
ret
nop
mov
lcall
add
push
cli
or
pusha
mov
frstor
mov
sub
push
ljmp
insb
sbb
pop
sbb
aas
add
lcall
ja
adc
in
aam
rolb
std
test
mov
push
push
inc
xchg
std
push
int
fs
and
sahf
ja
dec
push
data16
loopne
pop
test
dec
mov
bound
jmp
jbe
lods
xor
out
repnz
ret
int
jns
outsb
mov
xor
fiaddl
sub
xchg
pop
ret
or
xchg
adc
std
enter
adc
arpl
lret
mov
stc
and
xor
inc
out
out
push
aam
dec
sub
fisttpl
jbe
int
pop
inc
sub
es
inc
pop
push
pop
dec
sbb
cmpsb
sub
push
fstpl
or
fdivrs
movsl
pop
xchg
sahf
add
xor
test
subl
js
mov
mov
mov
or
push
xchg
insb
fcom
lock
lea
jmp
mov
loop
stos
pop
push
lahf
movsl
and
jne
xor
mov
pop
dec
pop
fdivrs
xorl
adc
or
fnstenv
adc
leave
pop
sti
test
in
stc
mov
mov
fxch
test
aad
dec
dec
mov
sbb
das
notl
stos
loop
inc
rclb
das
xchg
in
mov
fadd
insl
inc
adc
jns
lods
jo
jns
mov
mov
test
sti
shrl
push
jns
and
mov
sub
xchg
mov
fcoms
cmpsb
stos
call
jg
mov
sbb
inc
xchg
dec
jle
adc
jg
sbb
mov
mov
aam
mov
push
test
jge
out
xchg
pop
mov
inc
dec
lret
shr
mov
fists
out
cmpsb
aaa
dec
cmp
mov
mov
adc
pop
cwtl
das
mov
sub
mov
jb
adc
jne
push
pop
bound
data16
push
stc
xor
dec
add
in
mov
sub
jmp
push
orb
pop
scas
xor
mov
rol
mov
mov
sbb
xor
test
xchg
hlt
push
adc
jbe
adc
lret
rcrl
inc
fs
jbe
jmp
add
mov
pop
or
push
push
pop
inc
xchg
pop
repz
pop
aad
mov
xchg
xor
push
jno
dec
pop
or
push
mov
xchg
fs
sbb
imul
enter
pop
push
in
inc
insl
lods
inc
xor
mov
xor
out
sbb
lock
dec
cwtl
xchg
cmp
outsb
inc
add
jg
fistpl
mov
push
ss
stos
lea
adc
inc
push
cmp
lods
add
mov
clc
sbb
inc
cld
push
mov
scas
int3
pop
add
lahf
mov
shll
xchg
cmp
push
loop
sub
stos
push
rcl
and
jge
dec
xor
add
inc
cmp
or
jne
xor
ja
sahf
imul
push
pop
xchg
negb
mov
or
roll
cmp
inc
dec
scas
mov
mov
xchg
xadd
sbb
movb
add
stos
pop
push
add
sub
sbb
cmp
cmpsb
and
neg
jo
and
mov
das
and
mov
std
sahf
and
lods
cltd
sbb
pop
cmp
in
inc
dec
int3
imul
fnstsw
mov
pavgw
and
cmp
test
pop
dec
stc
pop
testb
xor
xor
les
out
mov
mov
aad
pop
mov
aas
lods
push
cwtl
pop
leave
mov
pop
lret
and
sub
dec
lea
inc
out
jns
pop
negb
and
cmp
add
add
fstpt
xchg
mov
cmpsl
cmp
mov
mov
xchg
pop
test
pop
cltd
js
aas
clc
imul
in
adc
sbb
fs
jge
jmp
mov
cltd
xor
movsb
loope
xchg
pop
jle
das
loope
pop
lods
cmovne
adc
lret
scas
imul
cmp
push
cmp
sub
push
xor
adcl
adc
jle
nop
push
stc
xchg
dec
dec
mov
dec
adcl
sbb
stc
into
push
xor
mov
inc
xchg
sahf
adc
dec
aam
xchg
aaa
mov
fdivl
sub
add
xchg
xchg
out
call
sar
fwait
imul
loop
mov
add
in
xchg
adc
xor
sbb
pop
inc
pushf
inc
fs
inc
sub
mov
sti
sbb
jo
mov
adc
pop
rolb
fadd
out
cmp
fwait
xchg
pop
lock
pop
ja
mov
mov
sbb
lods
ds
pop
xchg
mov
movsb
cmp
sub
dec
push
andl
sbb
sub
jbe
pop
push
jle
shlb
inc
adc
mov
cmp
cld
push
out
inc
jp
mov
cmpsb
lods
cmc
andb
pop
jmp
shll
sbb
sti
cmp
notb
in
mov
imul
cwtl
ret
out
dec
pop
dec
jno
jb
add
repnz
push
add
inc
lahf
cmp
sub
jg
adc
incl
push
into
jl
fimull
pop
int
aaa
mov
mov
push
sbb
fidivs
out
push
gs
xchg
cwtl
std
jae
ds
jp
addr16
adc
insb
insl
sbb
hlt
sub
sarl
dec
decl
push
pop
shr
mov
sub
cwtl
repz
and
sbb
out
lock
shrd
rcrb
xchg
adc
icebp
or
int
js
push
scas
push
insl
bound
incl
adc
xor
in
stos
arpl
cmp
scas
cli
add
xchg
sahf
dec
push
leave
hlt
sbb
cmp
jmp
adc
inc
in
add
mov
insl
pop
or
cmp
xlat
xor
lods
or
mov
mov
sub
lahf
sbb
jp
adc
dec
xchg
jno
sti
insl
daa
pop
pop
cwtl
push
mov
xchg
dec
mull
xchg
test
pop
jp
ret
aaa
inc
icebp
and
loop
mov
movsl
and
pop
fidivrs
cmp
sub
je
push
insl
in
add
jl
xabort
xchg
aam
sbb
add
sbb
mov
sub
adc
push
jb
lock
sbb
shl
aaa
ret
pop
mov
jno
sub
arpl
loopne
cwtl
inc
loope
add
das
in
mov
jae
ret
xchg
sbb
cli
mov
lret
sub
sbbb
fisubl
xchg
imul
jo
jmp
test
push
sbb
mov
addl
andb
inc
sahf
mov
mov
pop
dec
popa
jg
add
cld
subl
push
lahf
clc
xor
xchg
rep
sbb
std
flds
jb
mov
cmpl
dec
aas
push
mov
inc
movsl
mov
sub
or
mov
lods
in
inc
mov
mov
mov
pushf
shlb
fildll
pop
mov
pop
add
cmp
jne
mov
notb
add
fcomp
icebp
pusha
jle
out
mov
aam
jb
and
je
movsb
xor
incb
and
js
xchg
or
aaa
inc
aad
dec
add
dec
bound
arpl
fimull
and
dec
imul
cmp
cli
dec
aaa
lret
les
pop
fiadds
rorl
dec
addr16
std
aad
fldt
inc
xchg
insl
mov
sahf
lahf
dec
sbb
jl
mov
mov
jns
and
cmp
dec
xchg
stos
push
cmp
or
adc
or
fs
aas
iret
inc
jae
jae
sbb
dec
sub
in
sbb
adc
dec
loope
iret
sub
mov
in
pop
inc
sub
lcall
xchg
pusha
xchg
xor
lds
out
push
mov
sub
aaa
lock
jge
cmp
jns
aaa
jecxz
or
movq
daa
dec
and
or
je
jbe
or
sub
jb
aaa
adc
dec
iret
in
in
das
shlb
lcall
xor
mov
movups
lea
ret
push
mov
push
fsubrl
hlt
xchg
jmp
mov
jo
mov
jmp
pop
arpl
jmp
xchg
addr16
aam
pop
cmpsb
std
inc
cmpsl
mov
push
mov
pop
pop
xchg
loope
inc
sbb
test
popf
mov
cltd
or
jp
aam
fcompl
xchg
xor
pop
jmp
pop
mov
jne
ja
fldcw
xchg
mov
cmpsl
ret
and
aam
dec
mov
dec
cmpsl
imul
hlt
and
loope
leave
push
xor
sub
shll
stos
adc
outsl
inc
mov
sbb
push
stos
pop
lret
stos
push
gs
mov
lods
or
pop
stos
inc
ret
notl
inc
dec
lds
imull
jp
sbb
test
movb
dec
xchg
or
inc
push
jge
sub
negb
xchg
xor
or
sub
push
ja
repz
data16
inc
out
push
jb
enter
inc
icebp
rorl
subl
js
fcom
mov
mov
adc
push
lcall
pop
fidivs
adc
cmpsl
or
stos
mov
popa
in
cld
js
in
movsl
push
movsb
loopne
inc
aam
mov
das
loop
mov
loopne
aas
int3
sbb
std
push
cmc
rclb
mov
iret
jae
out
xchg
fnstsw
adc
mov
mov
push
mov
jae
lods
outsb
sbb
push
lcall
pushf
movsl
subl
lea
aam
cmp
adc
int3
inc
xlat
or
fists
rcll
cltd
shrb
pusha
add
rcll
adc
out
cmpsb
pop
adc
gs
or
call
shrl
cmc
mov
lock
dec
pop
inc
mov
push
jmp
push
push
sub
repz
cmpsb
pop
insl
pop
and
mov
cmp
shrl
test
mov
cmp
or
push
pop
xchg
enter
test
shrl
hlt
jno
pop
inc
cli
icebp
fisubrl
mov
or
adc
lret
insb
mov
test
fistl
dec
and
lret
stc
bound
add
lods
jnp
jo
out
addr16
pop
mov
add
mov
ds
mov
inc
jne
jge
lea
adc
jno
and
mov
pop
push
rclb
or
ret
js
enter
loopne
into
aas
cs
or
repnz
xor
shrb
ror
mov
inc
xchg
or
fs
in
push
jmp
inc
stos
mov
std
sub
sub
xchg
adc
pop
inc
pop
xchg
and
loope
mov
jbe
jmp
repz
jb
adc
rolb
fiaddl
pop
dec
mov
rolb
mov
jmp
pushl
loope
mov
push
dec
or
cmpsl
xor
in
sbb
dec
mov
outsb
xor
and
negb
mov
leave
jmp
mov
stc
fimull
les
ret
loope
mov
rorl
cmp
insb
mov
dec
out
orl
mov
jne
cmpsb
sub
and
aam
ficomps
push
xchg
push
fsubs
cmp
add
cmp
xchg
sbb
insl
jnp
ss
add
jnp
lcall
cli
push
int
ret
adcb
jbe
xchg
push
in
je
pop
and
and
mov
fsts
movsl
jl
ljmp
sub
push
mov
fistl
mov
xor
xchg
insb
xor
flds
shlb
cli
or
add
xchg
add
ss
int
ljmp
repnz
test
movsb
cmp
sahf
insl
jecxz
cltd
rcrl
lcall
xchg
mov
ficompl
jmp
add
imul
pop
lahf
inc
inc
pop
rolb
xor
mov
sti
and
aas
lock
push
out
cmc
aaa
sub
lock
out
push
sub
sub
imul
cmc
pop
rcrl
js
push
push
and
and
dec
or
in
ss
je
es
mov
daa
daa
xlat
mov
lock
cmp
insl
inc
ffree
and
sub
mov
mov
cmpsb
repz
std
jno
xor
push
rcrb
stos
pop
mov
std
sub
pop
cmp
cmpsb
cs
leave
divb
pop
hlt
cmp
push
ja
fwait
sbb
sbbb
xchg
push
daa
in
xlat
fnstcw
popa
call
xor
pop
stc
ds
insl
nop
in
mov
push
lods
adc
push
jo
mov
pop
push
cmpsb
sub
mov
dec
cmp
iret
ss
gs
ss
lcall
and
dec
loopne
cli
popa
shrb
push
test
lahf
jns
data16
insb
xor
hlt
push
pop
push
xor
cs
jge
jne
inc
dec
add
std
je
sub
iret
cltd
imulb
cmp
les
xor
xor
inc
sub
pusha
xlat
jno
xorb
flds
cmp
adc
push
mov
dec
in
push
inc
subps
cmp
fisubl
push
push
insb
xor
mov
dec
ror
leave
adc
das
gs
jae
pop
arpl
fdivrp
icebp
mov
mov
xchg
push
in
inc
push
pop
inc
not
fxch
into
sbb
xor
mov
hlt
daa
stos
push
loop
sahf
xor
stc
pop
or
mov
mov
addb
mov
mov
icebp
cmpsl
cmp
jg
lods
pushf
push
dec
push
hlt
addb
xor
push
sbb
mov
mov
xor
inc
jl
dec
cmp
push
and
or
push
cmp
xchg
push
sbb
cmpsl
fwait
cmp
adc
sbb
cmp
xor
cmp
mov
leave
or
test
sub
in
push
loope
or
sahf
lods
lock
mov
push
lahf
mov
sbb
adc
or
or
push
mov
gs
lret
xor
push
aad
cmpl
fdivl
push
es
mov
fwait
mov
push
jecxz
or
jno
sub
cli
ja
daa
daa
inc
inc
and
lret
xor
push
dec
aaa
iret
lret
roll
je
pop
rorb
stos
es
test
outsb
int3
rolb
inc
in
or
pop
mov
push
dec
jl
out
int
in
addb
fidivrl
ds
shr
sbb
jno
sub
enter
enter
das
mov
mov
and
and
pop
sbb
sbb
adc
xchg
cmp
mov
mov
pop
mov
pop
push
mov
das
loopne
fisubrl
pop
sahf
enter
test
popa
pop
outsb
ljmp
and
movb
xor
dec
mov
push
cmc
clc
jg
lods
inc
ja
adc
adcl
idiv
inc
in
pop
jb
mov
xor
imul
popa
push
cmc
xchg
repz
jp
xor
lods
loope
in
stc
lcall
lret
xchg
mov
xor
push
scas
pop
dec
jbe
out
scas
adc
xchg
mov
mov
lock
mov
or
insb
jmp
sti
ret
aad
lock
mov
jne
lock
or
pushf
jmp
mov
push
loop
out
inc
icebp
sub
sarb
jl
adc
jl
sbb
lods
stos
mov
push
cld
dec
push
jl
add
cs
ss
pop
push
or
test
iret
lods
xor
testl
jle
test
mov
mov
inc
pop
cmpsl
std
fstps
jle
jno
sub
stos
hlt
sbb
adc
shrl
and
adc
mov
fiaddl
inc
mov
add
adc
sahf
mov
js
es
xlat
in
push
mov
imul
lods
xorb
push
dec
and
dec
imul
dec
adc
aas
inc
std
gs
mov
mov
jbe
lahf
call
jl
imul
les
push
nop
sub
pop
pop
aas
js
pop
cmpsl
xchg
loop
sahf
push
jp
in
and
jmp
insl
int
stc
add
mov
stos
dec
or
dec
repz
fisttps
das
pop
jbe
push
out
mov
stos
or
dec
imul
shll
aaa
mov
jp
and
mov
orb
adc
jne
mov
nop
lret
jg
sbb
inc
icebp
add
sbb
pop
xor
jge
addr16
sub
repnz
mov
push
mov
inc
mov
hlt
inc
icebp
xor
push
loopne
push
das
cmpsl
sub
in
push
cld
cmpl
jb
fs
ljmp
adc
rcr
cmp
bound
cmpsl
lds
jle
mov
pop
mov
std
xor
mov
jbe
inc
push
pop
sbb
sbb
cmpsl
jbe
add
xchg
lods
adc
cmp
mov
fs
in
xchg
jnp
sbb
dec
pop
rcll
jnp
jno
leavew
sub
mov
push
mov
pop
cmc
push
cwtl
mov
mov
add
jae
cmp
inc
mov
arpl
push
shlb
cmpb
into
push
loopne
mov
and
shlb
xor
xorb
outsb
pusha
jmp
xchg
lcall
pusha
jbe
shrb
sti
jo
cmp
data16
jae
int3
mov
mov
cltd
xchg
inc
sti
fadds
mov
repz
ja
xchg
lds
int3
dec
adc
push
pop
fstl
out
pushf
test
imul
data16
and
fwait
clc
adc
pop
xor
cmp
iret
xchg
jmp
lret
mov
sub
lahf
cmp
sbb
outsl
jle
pop
jno
fimuls
adc
cwtl
push
idivl
js
jge
repnz
imul
scas
or
mov
pusha
int3
scas
push
cld
push
outsl
ja
gs
shll
inc
ljmp
mov
arpl
out
mov
andb
cmpsb
xor
cmp
or
adc
push
test
movl
push
pop
cs
lahf
cmp
and
cmp
iret
dec
rcl
orb
or
sub
cmp
cmpb
mov
rclb
arpl
cmp
add
repz
cmpb
and
stos
data16
imul
push
repz
jge
sub
push
cmp
jbe
mov
mov
mov
and
mov
xor
imul
add
ds
xor
add
out
sbb
into
sub
pop
pop
pop
adc
sbb
xchg
bound
int
adc
fwait
clc
aam
push
push
test
inc
aad
pop
or
cmp
data16
add
lcall
pop
mov
scas
mov
and
lcall
pop
mov
mov
daa
mov
cli
jecxz
mov
cmp
jb
inc
and
sbb
inc
and
fs
mov
repz
push
hlt
xchg
mov
enter
xchg
adc
pop
mov
icebp
jne
neg
pushf
es
in
inc
sahf
push
inc
push
btr
inc
xor
adc
inc
pop
outsl
dec
iret
and
mov
mov
js
out
sbb
cmp
mov
sarb
aas
cmpsb
lcall
jae
aam
mov
lds
ds
cmp
js
pop
push
xchg
sub
add
jne
push
push
adc
push
aad
movsl
subb
push
hlt
xor
xchg
inc
movsb
enter
stos
aam
iret
adc
mov
lock
jle
ss
jle
and
repz
icebp
sub
into
fwait
test
xchg
inc
pop
scas
or
or
push
aas
sbb
pop
out
add
scas
mov
pop
and
dec
andl
mov
mov
push
add
shlb
aas
pop
push
ret
gs
adc
jno
fldt
test
out
mov
add
loop
sbb
sub
inc
stos
lret
pop
scas
adc
inc
stos
roll
sbb
xor
adc
add
loope
in
es
fisubrs
and
xlat
lods
sub
and
sbb
mov
data16
push
cmp
pop
repnz
cli
jns
xchg
adc
push
mov
xor
testb
aaa
in
vmovhpd
mov
add
pusha
lcall
inc
sbb
mov
mov
int
imull
inc
add
mov
xchg
mov
shrb
and
cmp
les
lret
in
mov
xchg
dec
mov
inc
xor
push
enter
or
lcall
je
cmpsl
xchg
mov
inc
xor
test
xor
add
jg
sar
inc
test
push
gs
lcall
jp
jns
lea
scas
sbb
push
jl
sbb
ficoms
cld
outsl
mov
cltd
pop
call
dec
int
je
pop
pop
orb
cmp
push
xchg
or
dec
jno
adc
mov
cmpsb
outsl
dec
ss
daa
aad
xor
or
add
insl
mov
mov
xchg
in
mov
adc
daa
add
mov
add
pushf
loope
les
hlt
movsb
aad
add
mov
inc
xor
movsl
lock
mov
or
std
mov
js
mov
jge
adc
push
cld
push
stc
les
cs
xor
fisttps
dec
sub
mov
imul
xchg
sbb
mov
push
insb
add
sub
fidivl
xor
iret
int3
test
fdivl
lods
jnp
sbb
jo
test
pop
jecxz
dec
adc
mov
xor
fimuls
rclb
add
js
jae
imul
xor
ss
or
push
stos
ljmp
inc
ret
inc
xchg
mov
jle
int3
mov
mov
test
popf
clc
cmp
sub
adc
jp
aad
sub
and
push
mov
lods
mov
sbb
and
pop
dec
push
jp
pop
andl
and
popf
mov
sub
jecxz
and
jecxz,pn
mov
int
in
mov
dec
jne
mov
cmp
test
sub
shrl
jp
repnz
popw
mov
rclb
insl
add
popf
inc
fwait
das
fnop
out
fcmovne
test
push
pop
push
arpl
fcoms
cmp
inc
sbb
lcall
pop
cmp
inc
adc
out
jg
test
pop
pop
stos
aam
jp
fidivrs
cmp
filds
mov
cmp
aam
scas
or
insl
mov
outsb
ret
scas
test
out
incl
lods
fdivp
rcrl
pop
inc
dec
fsubs
and
push
mov
xor
mov
pop
xor
xor
cmp
sbb
fsubr
movsb
nop
out
mov
and
mov
out
dec
jne
sbb
sub
div
pushf
repz
aad
jbe
mov
enter
pop
xchg
scas
test
mov
sub
jno
mov
pop
sub
cmp
std
mov
sbb
push
popf
mov
cwtl
sahf
in
mov
insb
cmp
mov
pop
inc
pushf
jns
push
push
add
ret
fstpt
js
mov
jl
fcmove
cmpsb
negl
ja
xchg
sbb
pushf
adc
push
push
cmp
pop
ficoms
jle
push
sub
sub
cwtl
stc
push
roll
jmp
cmp
mov
in
push
icebp
out
testl
adc
fstp
aaa
or
cmpsb
pop
mov
sub
add
dec
mov
push
sub
pop
add
jge
insb
add
test
mov
fists
negl
icebp
xchg
in
jb
lcall
push
pop
loope
or
xchg
arpl
xor
and
mov
sbb
orl
leave
fbstp
add
push
test
or
fstps
xchg
frstor
add
or
loope
xor
adcl
cmpsl
xchg
fldl
inc
addr16
mov
push
int
dec
xchg
hlt
ret
sub
mov
xchg
cld
cld
jo
mov
cmpsl
mov
test
bound
pushf
add
js
mov
fdivl
pop
cmp
sahf
imul
xor
mov
lea
dec
adc
iret
dec
sub
in
nop
sub
lods
in
fildll
or
mov
aaa
adc
mov
jmp
lret
bound
call
dec
xchg
clc
roll
xchg
jmp
ret
scas
notb
xchg
mov
sub
and
add
hlt
icebp
mov
add
mov
sub
cmp
mov
stc
xor
scas
cmp
repz
jecxz
in
sbb
pop
push
dec
mov
lret
into
or
jg
out
imul
out
and
or
sbb
cmc
mov
push
rep
xchg
outsl
ja
mov
in
dec
adc
dec
stc
jecxz
pop
xchg
pop
pusha
cs
lods
repz
mov
mov
xchg
jno
pop
mov
pop
jnp
inc
sbb
ljmp
outsb
adc
cwtl
push
test
ret
sub
xor
clc
dec
movsl
scas
inc
or
push
inc
or
cmp
push
call
in
xchg
pop
pushf
rorl
dec
mov
cmp
xor
fimull
or
pop
imul
bnd
push
ficoms
lret
enter
cmpb
pop
leave
and
clc
and
xchg
adc
xchg
fnstsw
xchg
mov
dec
pushf
mov
loop
imul
dec
xor
in
cmp
add
or
popf
dec
sti
add
jns
lret
add
out
jo
mov
dec
mov
test
imul
aam
je
movsb
lods
mov
sub
sbb
jno
fwait
sbb
xchg
out
or
out
add
sbb
subb
dec
mov
jl
add
out
in
ret
in
jno
mov
mov
mov
outsb
ja
ret
cmc
je
xchg
xchg
movsl
sbb
mov
push
je
inc
xor
xor
sub
xlat
adc
jp
mov
inc
bound
adc
lahf
xchg
test
sbb
pop
xchg
stc
inc
add
or
mov
jp
cmp
leave
in
xchg
dec
and
addr16
cmp
jae
lea
fbld
sbb
cld
hlt
cmp
mov
sbb
push
adc
sbb
test
insb
sbb
adc
rcrb
push
iret
in
sub
jle
or
jno
aas
lcall
cmp
ljmp
shrl
inc
inc
jl
mov
mov
pop
mov
or
push
scas
outsb
add
xchg
mov
push
add
push
push
adc
push
rcll
je
lock
xor
iret
ds
scas
pop
xchg
adc
or
jecxz
lret
push
dec
cmp
jne,pn
addb
loop
mov
cs
add
aaa
lret
sub
mov
and
shl
jb
inc
push
jns
ficoml
push
ljmp
mov
sti
push
shrl
jne
rolb
cwtl
dec
jge
bound
inc
cmpb
pop
xchg
sar
sahf
ds
lods
rcl
dec
inc
xchg
fidivrl
add
sahf
xchg
insl
and
add
add
dec
pop
mov
test
sbb
rclb
push
ja
lods
xor
and
imul
sarb
inc
xor
add
stos
stos
addr16
push
dec
lahf
adc
dec
adc
xor
out
xchg
push
mov
hlt
jecxz
dec
xchg
in
push
ja
pop
and
add
test
xor
rcl
inc
gs
mov
hlt
sbb
mov
xchg
cmp
fsubr
les
inc
daa
and
pop
adc
jno
aaa
imulb
pop
fisubrs
and
popf
ljmp
insl
push
push
jmp
stos
shrb
dec
loopne
mov
ljmp
cmp
jno
xor
inc
adc
sub
daa
add
test
sbb
test
hlt
pusha
es
or
jne
pop
mov
dec
bound
mov
ljmp
mov
pop
jle
lahf
test
test
jns
push
pushf
pushf
lds
cld
aad
cmp
aad
mov
xchg
jns
xlat
xorl
sbb
xchg
rcll
js
inc
or
dec
xor
xchg
push
push
add
test
lods
push
aad
mov
push
sub
sbb
popf
stc
inc
cwtl
mov
lahf
mov
pusha
dec
test
cmpsl
adc
ficoms
dec
icebp
or
das
pushf
add
push
or
push
mov
pop
ret
dec
pop
add
mov
sahf
jnp
jg
mov
scas
sub
test
aad
push
aam
ret
jmp
adc
repz
push
aad
out
cmp
lcall
or
mov
mov
xchg
mov
data16
xor
out
mov
les
call
cmpsl
dec
xor
jl
mov
pop
xchg
test
loope
and
popf
fstl
jbe
shrb
mov
and
or
jnp
lret
test
cs
cmp
mov
mov
out
ror
or
sub
adc
mov
jne
insb
jge
test
cwtl
sbb
push
loope
les
or
fmull
inc
leave
cld
jp
cmp
pop
scas
mov
sbb
adc
aaa
fwait
into
mov
add
lret
into
arpl
mov
addr16
cmp
dec
sub
lret
jge
sbb
stos
jae
xchg
mov
pop
test
movsb
mov
xchg
testl
dec
sbb
mov
xchg
cmp
dec
cld
leave
dec
ds
mov
xchg
cmpsl
jge
jle
pusha
push
xchg
sti
jo
std
movb
movsl
out
in
lcall
sub
out
mov
xchg
sbb
push
fisubs
enter
rcrl
mov
andl
cmpsl
inc
ficoms
xlat
xlat
jge
adc
std
sahf
ficomps
sub
aas
cli
dec
dec
pop
orl
lret
xor
inc
mov
xchg
or
roll
dec
das
mov
setns
sbb
mov
or
dec
push
lods
test
sbb
in
xor
call
xor
pop
xchg
mov
xlat
outsb
pop
and
ret
out
orb
xchg
fstpt
clc
mov
pop
mov
lahf
scas
call
pop
sarb
or
mov
cmp
popa
dec
or
repnz
mov
pop
loopne
test
test
cmc
adc
push
lock
ret
test
jae
mov
add
cs
jne
jns
out
test
jle
jne
ds
fsubl
loop
mov
mov
jg
jg
outsl
test
les
pop
jp
fwait
pusha
pusha
notl
mov
pushf
shrb
fcmovnbe
sub
adc
stos
test
push
cmp
dec
out
js
idivb
jg
dec
mov
rcl
jnp
xor
xor
lods
or
outsb
inc
pop
sub
jbe
sub
sbb
or
stos
cmp
addr16
outsl
jo
mov
out
lea
fistpll
lret
mov
adc
popf
int3
mov
cmp
inc
clc
mov
jmp
mov
push
xchg
sbb
xor
insl
mov
pop
add
and
in
insl
pop
imul
xor
sti
adc
test
lahf
fidivrs
fiadds
xchg
sub
test
dec
mov
cmp
cmp
loop
cmp
mov
pop
int3
push
dec
scas
pop
repnz
mov
repz
ds
jmp
mov
add
lcall
pop
and
scas
insl
mov
push
lods
enter
mov
pushf
push
jge
cmp
xor
fwait
btr
cmp
push
ffree
movl
negb
mov
or
mov
les
jns
push
or
xor
rorb
imul
fs
pop
imul
jae
lahf
out
mov
daa
call
adc
ficoms
mov
mov
bound
lock
dec
iret
mov
jg
sub
inc
in
iret
lahf
adc
fstps
xchg
aad
sti
in
pop
mov
daa
push
sbb
dec
das
add
or
out
cmp
aas
adc
push
ret
lock
bound
ja
cmpsb
fildl
mov
xchg
lea
repz
lods
testb
iret
xor
addl
cmp
out
dec
insl
lea
repnz
ret
add
mov
lods
cmp
jmp
test
cwtl
cs
cmp
xchg
fmul
sbb
add
mov
mov
push
das
push
clc
enter
aad
dec
sub
jmp
in
loope
cmpsl
inc
mov
jbe
dec
sub
call
jnp
xchg
or
pop
gs
sahf
and
lock
das
mov
push
xor
cmp
mov
lret
jnp
leave
mov
jns
mov
aas
sub
mov
xchg
icebp
mov
lcall
push
push
stc
cmpsl
dec
pop
add
jo
jmp
lahf
scas
sbb
out
cmp
add
inc
inc
aaa
jle
mov
mov
out
cmp
jecxz
fdivr
xchg
ljmp
in
add
mov
inc
cwtl
or
pop
mov
inc
pop
movsl
mov
adc
pop
sub
lea
aas
into
fisubl
sbb
es
imull
sbb
scas
movsw
fsubp
cmp
cltd
ljmp
rol
aad
je
dec
jnp
std
aad
sarb
and
icebp
ds
mov
aas
inc
and
sub
insb
push
push
in
faddl
pop
or
cli
mov
or
and
imul
xor
fidivl
ds
push
push
int
dec
xchg
iret
xor
jno
jne
rcrl
fidivrs
add
push
addr16
insb
xor
lcall
xchg
add
cs
jns
add
push
sub
xor
into
lea
mov
mov
out
aas
pop
out
lcall
mov
imul
lret
and
das
shlb
add
cmp
out
insb
inc
popf
daa
push
xchg
mov
and
sub
jbe
sti
cmc
ljmp
in
bound
fwait
insl
ja
jb
cmpsl
add
jecxz
push
cmp
or
pop
out
inc
repnz
and
mov
or
sahf
mov
xor
lret
dec
fsts
cwtl
push
xor
mov
cmc
mov
sbb
push
mov
pop
push
pop
inc
movsl
cmpsl
add
or
push
js
inc
dec
dec
ret
add
add
lahf
xchg
test
dec
mov
outsb
pop
adc
lds
push
xchg
adc
mov
or
inc
movsb
dec
clc
xchg
mov
mov
inc
adc
add
out
jl
cmp
adc
cs
shlb
xor
jmp
adc
or
pop
dec
or
je
add
popl
cmc
rcl
xchg
lahf
cmpsb
cmc
stos
jg
inc
mov
in
sar
mov
cmp
fwait
and
dec
scas
dec
fwait
push
movsl
pop
cmp
mov
sahf
mov
out
jp
cmp
adc
test
adc
ficomps
mov
loope
dec
out
mov
out
outsb
mov
pop
cmp
xchg
mov
cmp
addb
subb
pop
cmpsl
push
pop
nop
push
out
arpl
aad
and
test
pop
bound
push
or
lahf
int
cmc
push
inc
enter
fwait
and
movsb
push
test
add
lea
mov
lahf
push
adcl
pushf
mov
push
mov
dec
cltd
dec
mov
lods
into
orb
mov
push
cmc
out
pop
xor
push
sub
ret
jecxz
mov
cmpsb
dec
jnp
sub
adc
ja
lcall
add
gs
in
cs
push
sbb
cmp
cltd
es
push
inc
rcll
pusha
jmp
sub
pop
iret
jnp
cmp
push
jno
dec
lock
das
add
mov
cvtdq2ps
pop
int
movsl
push
adc
inc
mov
inc
xor
jl
aas
inc
insb
add
daa
or
cld
pop
shll
test
mov
aas
cmpb
movsl
sbb
mov
repnz
sub
dec
jo
inc
fs
push
rcrl
or
mov
add
out
mov
lea
movsb
lods
hlt
pop
push
mov
mov
lds
adc
or
inc
and
mov
inc
or
xchg
int
fs
xchg
cld
aas
cmc
add
cmc
cmp
adc
add
fcomps
call
inc
data16
push
mov
xor
int
mov
push
jo
jae
cmp
or
sub
mov
xor
pop
xor
sub
fdivs
fcos
push
and
push
pop
push
or
jbe
fcompl
add
cmc
dec
inc
cmp
push
addr16
jg
mov
addl
lods
cmp
imul
mov
mov
xchg
or
dec
int3
test
and
inc
adc
and
inc
dec
inc
adc
les
xchg
lods
aam
gs
push
add
aaa
mov
add
orb
and
in
or
cmp
mov
mov
lcall
push
lahf
aad
pop
xor
fmull
cmp
popf
and
shl
subl
xchg
popa
push
pop
in
xor
movsl
pop
sub
dec
mov
out
nop
sub
es
rcr
inc
loop
aaa
and
insl
push
xchg
mov
push
dec
dec
adcb
mov
inc
lods
mov
xorps
fdivp
cltd
add
inc
adc
and
mov
shrb
mov
das
sbb
jns
cmpsl
lock
push
in
and
push
push
fdiv
jg
xchg
cmp
sub
dec
xchg
sub
ret
shlb
mov
push
cld
int
push
test
mov
dec
jno
adcl
xor
xlat
lahf
lret
push
hlt
sub
cmc
xchg
xchg
aas
or
jmp
std
frstor
inc
sbb
sbb
jg
sahf
sbb
or
popf
jecxz
iret
push
add
shlb
insb
inc
int3
mov
std
jbe
cli
std
cs
shll
mov
jne
adc
sbb
add
sarb
mov
sub
outsb
xchg
push
dec
aaa
dec
mov
mov
aam
push
push
xor
popa
push
xchg
add
pop
scas
mov
mov
cmp
lock
mov
sbb
aas
dec
lcall
or
movl
dec
fcmovu
or
pop
push
cmpsl
cmp
xchg
out
scas
push
or
pop
lret
mov
enter
xor
mov
leave
lds
add
mov
cld
sub
daa
cli
pop
push
clc
loope
mov
mov
scas
fisttps
mov
aad
add
pushf
mov
sbbl
or
pop
mov
xor
pop
add
mov
lahf
sub
mov
push
sub
and
or
or
cmp
adc
push
jne
adc
mov
clc
xchg
add
lahf
cmp
mov
stos
add
pop
pop
ss
mov
push
pop
cmp
sub
cld
add
adc
adc
add
jne
leave
mov
mov
mov
outsl
lret
push
push
xor
in
jp
dec
fidivs
shrb
dec
xchg
jne
sbb
call
fcmovnu
shlb
inc
rorl
dec
dec
lahf
cmp
iret
lods
cmpsl
or
and
jg
add
xchg
sarb
push
or
fimull
outsb
cltd
movsb
xchg
hlt
pushf
arpl
xor
mov
inc
loope
pop
dec
mov
insl
pop
popf
es
jmp
push
fisubrs
mov
pop
xchg
push
imul
sar
push
jg
xor
ja
xlat
mov
clc
mov
outsl
loope
jae
cld
mov
ret
std
scas
outsl
out
or
into
jecxz
add
out
add
les
icebp
not
andl
xor
divl
dec
jno
negb
aaa
movsb
push
push
in
aaa
fsubr
pop
pusha
xchg
orb
dec
aam
adc
aad
std
mov
stos
mov
sahf
dec
jge
iret
fidivs
and
fists
arpl
ja
lret
cmp
adc
fnstsw
fstpt
cmpsb
hlt
mov
test
aaa
scas
mov
dec
cmp
loopne
in
push
lods
das
sahf
out
mov
movsl
fldt
inc
xchg
pop
cwtl
mov
addr16
jecxz
pop
dec
jmp
pop
imul
andb
fsub
test
aam
lahf
mov
jnp
jae
jne
jb
arpl
xchg
inc
daa
nop
push
fildll
dec
and
icebp
sbb
adc
or
pop
pop
arpl
pop
popf
pop
and
inc
cmpsl
pushf
cmpsb
mov
shll
jb
xchg
push
push
sub
pop
loope
add
pusha
sub
aas
add
jbe
movl
cli
addr16
repz
mov
or
xor
xor
test
pop
jnp
cmp
mov
sbb
xor
mov
cmp
push
fmulp
mov
js
addr16
and
lret
loopne
and
sbb
add
je
scas
push
push
ret
sub
mov
lahf
xor
loop
outsl
mov
jnp
cmp
shlb
inc
bound
xchg
test
mov
in
ss
jnp
push
mov
or
add
outsl
lods
push
mov
outsb
mov
ret
mov
outsb
dec
jecxz
outsb
push
xchg
dec
dec
in
add
decl
nop
push
xchg
mov
das
dec
push
sbb
inc
push
aaa
add
cmp
std
jmp
jo
sbbb
fisttps
je
sub
fstps
fistpl
mov
push
or
xchg
ret
jg
sbb
insl
lcall
xchg
cmp
cs
loop
pusha
push
xor
lods
push
add
mov
adc
xchg
mov
xor
sbb
jl
loope
call
or
dec
in
sbb
aas
mov
jp
xor
in
loopne
jb
dec
scas
fistps
nop
int
adc
pushf
clc
inc
mov
andl
movsb
mov
mov
jge
popf
xor
enter
adc
sbb
lods
pop
lds
cmp
jbe
xchg
and
daa
insb
mov
aad
sbb
inc
jnp
cmp
imul
hlt
mov
push
shlb
std
sti
fucomp
out
inc
sub
out
fldenv
aas
aas
jp
lods
or
cli
adc
xor
pop
inc
push
xorb
or
cmp
jne
pop
nop
lock
scas
push
sbbb
pusha
fnstcw
pop
rclb
movups
addl
icebp
xchg
or
mov
pop
sbb
mov
stc
jle
cmpsb
mov
jb
push
xchg
out
loop
pushf
aam
mov
xor
sbb
lahf
les
bound
or
aam
filds
and
jp
sub
mov
orl
xlat
inc
xor
test
jmp
addr16
or
imul
loopne
sbb
xorl
jb
xchg
mov
sbb
pop
xchg
leave
xchg
orb
scas
sub
je
popa
dec
xchg
lods
aam
sub
test
lods
int3
cmc
cmp
pushf
pop
ljmp
and
rcr
sub
daa
mov
inc
data16
arpl
mov
sub
sbb
mov
or
ss
push
dec
inc
sbb
addr16
dec
pop
jge
sbb
ljmp
jae
pop
push
inc
movsl
mov
adc
cs
loop
test
les
movsl
inc
bound
cmp
xor
insb
pop
cmc
imul
mov
sbb
sbb
aas
pop
lcall
xchg
repnz
rclb
push
dec
and
mov
mov
mov
outsl
mov
jl
push
xlat
add
lret
cli
push
out
sahf
insb
pop
push
mov
dec
int3
in
ret
lods
xlat
mov
int
testl
sbb
push
mov
push
jno
cmp
in
mov
ret
jne
add
inc
mov
cltd
xchg
cmpl
pop
in
es
in
shl
pop
daa
iret
das
sti
inc
ljmp
cwtl
xchg
fcoml
dec
mov
pushf
dec
aas
adc
jns
pop
pusha
dec
in
adc
out
mov
adc
jge
pop
notb
pop
sbb
fsts
push
xchg
or
stos
cmp
mov
push
lret
push
jnp
pop
push
xchg
xchg
outsl
in
movsb
jp
jb
pop
or
cmp
jmp
fwait
imul
pxor
loope
mov
dec
add
sar
addr16
sub
test
lcall
lahf
jbe
clc
cmp
inc
sbb
jl
jnp
jecxz
fdivrl
sbb
scas
in
mov
jle
jno
and
in
ds
pop
xchg
or
and
inc
push
cs
jae
push
dec
iret
add
push
push
mov
imul
iret
lcall
ss
cltd
shl
pop
xor
mov
scas
xchg
mov
out
or
sub
sbb
jb
xchg
fsub
stos
cmp
and
and
notb
xor
in
pop
mov
mov
jne
inc
mov
ds
cltd
push
pop
aam
out
xor
push
xor
jb
js
ljmp
xor
ss
sub
and
jb
pop
or
mov
shll
cld
je
aas
jmp
pop
dec
xor
pusha
and
jnp
jmp
icebp
mov
mov
inc
mov
jae
dec
stos
pop
dec
cmp
mov
cmc
cwtl
mov
xchg
xchg
mov
pop
cmp
mov
lcall
sti
in
and
jmp
test
in
out
insb
adc
test
adc
inc
jp
cmp
push
lods
jmp
andl
pop
into
adc
mov
leave
decl
lods
inc
ds
sbb
push
cmpsb
dec
daa
ja
sahf
mov
jae
fiaddl
mov
pusha
add
mov
stos
scas
adcb
xchg
pop
adc
fmuls
shll
mov
adc
out
out
push
xchg
and
dec
lea
xchg
jb
jg
je
div
jp
mov
adc
fdivl
sbb
mov
dec
add
pop
and
xchg
sahf
mov
loope
cmp
repz
adc
shrl
adc
cmp
xlat
mov
sub
pop
cmp
xlat
lea
scas
xor
xchg
xlat
mov
aad
shrb
xlat
pop
add
jp
mov
cmp
pop
in
xor
rol
dec
push
test
and
push
icebp
adcb
mov
xchg
stos
and
in
fnstcw
cli
inc
jl
jo
sbb
ror
mov
jge
ja
lods
popa
adc
push
xor
pop
sti
mov
setl
lret
aas
popf
inc
mov
notl
jp
repnz
sbb
and
dec
sbb
cmp
push
out
xchg
push
xor
mov
mov
mov
pop
movsl
cmpsl
subb
mov
je
les
xchg
add
mov
xor
stos
popf
mov
and
cmc
cwtl
cld
push
pop
jae
shl
cmpsb
rcl
add
mov
dec
dec
inc
cmp
add
dec
std
adcl
data16
out
inc
dec
pop
lret
sti
js
mov
arpl
dec
add
cs
dec
aaa
ret
jno
fs
mov
cltd
fninit
mov
in
daa
sbb
push
sahf
push
sbb
xor
inc
or
mov
jbe
stc
cmpsb
add
mov
xor
add
jge
mov
loope
ret
aaa
adc
fists
or
jb
outsb
fs
cmp
dec
jne
inc
stos
inc
mov
sbb
adc
pop
daa
aam
sahf
sbb
jb
jae
dec
sti
test
and
movsb
fstpl
xor
add
scas
jb
and
jnp
fcomps
adc
mov
mov
lock
cli
repnz
add
pop
mov
repz
popa
jl
sbb
repz
negb
push
into
pop
outsb
xor
jp
add
testl
cmp
shrb
lahf
jne
and
mov
jmp
sbb
and
and
jns
mov
addr16
or
pop
xchg
inc
mov
xchg
das
pusha
sub
sbb
out
or
sti
rcr
mov
push
add
pushf
stos
pop
inc
push
cmp
push
jo
stc
cltd
enter
sub
jge
xchg
adc
or
xchg
lret
mov
push
jb
lds
aaa
adc
xor
fsts
mov
cli
cmp
add
insb
and
pop
mov
cmp
loope
outsl
pop
or
ljmp
in
push
pusha
cwtl
xor
stos
and
xor
rcll
lods
inc
fidivrs
push
es
out
les
out
shlb
daa
test
lret
popa
call
ret
ss
jne
mov
inc
cltd
xor
mov
sbb
testb
jno
clc
jae
add
shlb
rol
fidivl
std
or
mov
or
dec
fisubl
and
iret
push
clc
push
ret
rcrb
jae
sbb
pushf
lds
or
xchg
push
sub
dec
in
sub
lret
push
mov
add
dec
jl
jnp
mov
sti
scas
jl
xor
xchg
gs
cltd
pop
outsl
arpl
dec
or
cmpsl
out
movsb
adc
divl
jns
insl
push
insb
jmp
push
fxch
dec
and
dec
daa
mov
dec
loop
push
jbe
mov
adc
ret
roll
xchg
or
data16
jl
lret
or
sbb
fcomip
scas
sbb
mov
sbb
inc
inc
dec
mov
sti
cwtl
pop
push
ret
test
cwtl
inc
dec
or
or
loope
ljmp
test
mov
pushf
rclb
addb
shlb
jns
jp
out
pop
cmpsb
daa
stos
jnp
adc
fadd
pop
lods
sbb
scas
cmp
dec
scas
aas
sbb
mov
xor
lcall
dec
xchg
hlt
ds
das
sbb
add
adc
pop
push
shl
mov
push
bsr
cmp
lret
adc
add
xchg
push
dec
icebp
and
push
xchg
sub
test
int3
idiv
movsb
mov
cld
dec
int
andl
fimuls
pop
test
ret
mov
xchg
and
dec
sub
ret
push
ret
pop
test
sbb
pop
dec
test
push
sbbb
and
mov
scas
inc
movsb
lahf
sbb
sub
fwait
or
popa
sbb
test
xor
add
faddl
mov
cmpsl
jp
mov
jae
xor
jle
je
adc
and
jns
sbb
sbb
mov
add
int
insb
fxch
pop
jp
popf
sbb
push
mov
cltd
fmulp
and
or
sub
fstpl
stc
push
enter
sbb
ficomps
inc
in
pop
movsl
add
push
push
cli
bound
cmpsb
adc
mov
roll
adc
add
dec
scas
jo
fcomi
hlt
sbb
and
insl
insb
stc
push
stos
sbbl
push
xchg
xor
fwait
mov
imul
push
jbe
sbb
rolb
icebp
xor
xor
mov
adcl
jg
movsl
loope
shrl
das
mov
push
or
lds
xor
add
jnp
or
jno
popl
jp
cmp
inc
push
cmp
push
add
sbb
ficoms
je
inc
xor
sbb
dec
nop
in
loopne
stos
mov
cld
movsl
xlat
scas
or
jbe
jnp
xchg
mov
mov
sub
xchg
fnsave
jnp
dec
jo
arpl
inc
and
push
adc
int3
pusha
sub
mov
aas
popf
xchg
adc
jg
fiaddl
in
js
or
cltd
and
jmp
push
xchg
pop
jg
cmpl
adc
pop
insb
fsts
xor
mov
pop
int3
adc
mov
cmp
cli
and
dec
ret
cwtl
rclb
add
out
cltd
pop
ret
mov
sbb
and
mov
call
and
fcomi
mov
cmp
pop
addr16
loopne
push
lea
dec
fucomi
pop
or
fwait
stos
ret
mov
add
test
and
div
add
and
pop
xchg
ss
and
xchg
xor
sbbl
cld
incl
pop
fmull
mov
xor
sbb
cwtl
mov
adc
push
adc
mov
ret
rcrb
rorl
mov
jecxz
leave
cld
aaa
add
dec
add
popf
hlt
repz
cwtl
jnp
inc
ja
test
shll
push
adc
inc
dec
push
pop
mov
arpl
mov
adc
inc
dec
cmp
push
pop
mov
adc
sub
mov
dec
jns
es
sahf
or
jno,pt
out
push
lods
fstps
add
inc
jo
cli
ds
inc
in
pop
out
dec
stc
add
stos
ds
push
in
das
xor
bound
loop
cmp
mov
and
lods
jnp
sbb
cli
pop
add
cmp
out
push
cli
sub
arpl
imul
arpl
jae
cmpsb
xchg
xchg
in
mov
jb
dec
adc
dec
int3
xor
lods
lea
fs
push
scas
dec
lods
pop
lock
push
xchg
cmp
mov
fdivs
cmp
ja
dec
mov
cmp
push
popa
std
push
test
inc
mov
int
icebp
mov
lret
rorb
inc
add
sub
cmp
mov
lods
scas
jp
repz
and
jl
mov
movsl
bound
pop
mov
push
jno
in
lods
stos
mov
stos
js
or
mov
test
mov
arpl
outsb
or
adc
dec
jl
and
subb
jmp
test
and
and
mov
clc
jo
xchg
repz
push
xchg
mov
jecxz
repz
xor
inc
into
cwtl
mov
mov
rcr
fsubs
sub
jmp
and
xchg
push
mov
sub
aaa
sub
cli
imul
jb
imul
xchg
iret
xor
jb
mov
rorl
xchg
gs
loopne
sbb
adc
sbb
push
push
sbb
test
mov
repnz
or
mov
sbb
dec
push
sarb
and
and
inc
and
xor
arpl
call
fcoml
pop
pop
imul
mov
fxch
nop
mov
pushf
inc
or
mov
sub
call
lods
xor
movsb
das
pop
sub
insl
lcall
out
xchg
loopne
cli
cmp
lea
add
mov
sahf
cs
lahf
mov
inc
jo
mov
sbb
or
or
dec
int
cmp
dec
jnp
stos
jp
mov
push
aaa
out
popa
cmp
rolb
out
jns
cmp
xchg
ds
lret
dec
outsb
mov
mov
sub
xorb
inc
push
clc
jnp
push
loopne
shl
add
mov
and
add
ja
pop
inc
insl
inc
and
aam
add
add
mov
stos
call
addr16
fldl
cmpl
aas
test
dec
mov
jns
cld
insb
call
push
adc
and
jns
inc
mov
mov
stc
in
clc
sbb
repz
cmp
xchg
mov
mov
iret
sti
sti
in
fimull
enter
push
mov
testl
jne
inc
xor
mov
cmpsb
add
push
or
cmp
mov
jl
je
xchg
mov
je
sbb
cmc
cmp
cli
and
testl
and
push
int3
subb
es
and
cmpsb
js
dec
in
dec
fnstsw
movsb
fnstsw
xor
dec
out
scas
aad
inc
mov
mov
outsl
sahf
mov
xchg
mov
rorl
jae
pop
pop
repz
pop
adc
sub
jmp
scas
jb
in
add
in
mov
pop
int
xchg
insl
mov
mov
aad
mov
jno
or
hlt
loop
sbb
rolb
repnz
ret
data16
test
mov
inc
jle
or
fistps
jle
sub
pop
ds
xchg
out
data16
xchg
xor
aaa
jo
xchg
add
xchg
movsl
stos
pusha
add
es
add
xchg
lock
fidivs
lahf
mov
clc
pop
sti
inc
push
inc
jo
movsl
popf
push
outsb
popa
loop
into
xchg
mov
out
in
pop
dec
stos
push
int3
adc
jmp
adc
mov
scas
mov
aad
pusha
je
fsubs
clc
pop
mov
push
pop
pop
mov
mov
sub
stos
xor
lea
shll
pop
add
mov
adc
shlb
jae
inc
enter
stos
loope
in
add
sbb
gs
cld
aas
and
sbb
ficomps
push
or
xchg
ret
loop
scas
push
jne
jb
push
stc
inc
xorl
enter
faddl
xchg
call
mov
pop
inc
cmp
jl
iret
xchg
adc
cmp
js
mov
mov
add
icebp
stos
push
jmp
out
push
or
push
cmove
loopne
hlt
imul
mov
sub
mov
inc
lahf
aad
push
jl
in
mov
testb
sub
sarb
data16
sbb
pop
dec
jg
ja
sub
cmp
scas
mov
push
in
dec
lret
sbbb
and
jecxz
lods
lret
cmpsl
insb
jecxz
xor
aam
jge
imul
ret
jg
fxam
sbb
pop
into
pop
inc
xchg
test
sub
and
bswap
popa
imul
cmpb
in
aas
fwait
sub
add
dec
xor
out
jns
lahf
or
out
mov
bound
mov
mov
or
fimuls
std
aas
mov
push
fwait
mov
xor
call
femms
mov
sbb
push
add
je
loopne
out
xchg
cmc
jle
mov
xor
aad
adc
sbb
out
or
ror
jne
mov
jns
jnp
jmp
pop
into
xor
inc
rclb
pop
je
add
or
es
mov
orb
sbb
push
aaa
loop
mov
xchg
shlb
push
mov
in
lods
or
pop
addr16
xchg
jnp
mov
jno
mov
mov
mov
sub
outsl
dec
in
lret
loop
mov
bound
in
inc
insl
cmp
jns
inc
lock
dec
les
cmp
jbe
cmp
mov
sbb
cmp
xor
or
jecxz
out
sub
mov
push
jmp
xchg
dec
jle
pusha
add
outsl
sbb
pushf
sub
mov
jge
jns
icebp
xchg
mov
pop
add
xchg
sti
gs
mov
cmpsb
jle
sbb
adc
loop
std
push
xor
sub
mov
and
into
rcrl
leave
jo
sub
popf
int3
jae
or
cmpsb
shrl
jl
cmp
mov
mov
cld
fdivl
pop
adc
mov
rol
xchg
sub
or
mov
xchg
xchg
push
pop
cli
sbb
xchg
mov
inc
mov
adc
dec
lds
dec
pop
pushf
pop
std
and
jns
add
sbb
std
nop
lock
adc
sub
in
xchg
movsb
mov
data16
das
inc
inc
mov
push
cld
ret
std
cwtl
mov
jbe
je
sub
mov
lds
sar
dec
scas
lock
in
bound
call
jo
xchg
inc
sub
test
jb
jp
loopne
in
add
push
sbb
lahf
xchg
js
sbb
insl
cmp
pop
shlb
mul
idivl
cmp
pop
pop
mov
xor
cmp
sub
bound
cmp
inc
mull
insl
stc
das
test
push
sbb
ja
cmpsl
add
mov
sub
cltd
dec
mov
pop
pop
sarb
xchg
or
pop
dec
jg
out
sbb
out
lret
or
cmp
js
or
mull
or
mov
adc
mov
push
pop
pop
outsb
sub
imull
bound
xchg
or
sahf
sbb
loopne
fdivl
push
or
test
in
and
sti
inc
and
mov
nop
shlb
lock
pusha
or
xor
cmp
js
dec
xchg
pop
and
mov
inc
insl
mov
jae
leave
push
aaa
arpl
inc
bound
dec
cmp
imul
adc
jb
xchg
addr16
or
jp
popa
in
mov
outsl
pop
flds
repnz
push
fiaddl
cmpsl
xor
jno
lret
inc
bound
mov
mov
sbb
lcall
std
pop
imul
jp
push
outsb
dec
sub
jno
fistpll
lahf
out
lahf
int3
mov
xchg
shll
cmp
jb
jmp
pop
imul
stos
jns
loop
mov
add
adc
mov
dec
insb
add
lds
in
push
xchg
xor
test
jo
push
xchg
push
mov
enter
mov
fcomip
jg
mov
mov
nop
adc
daa
add
sub
mov
sbb
ret
icebp
enter
cmp
lahf
and
lret
adc
cmpb
fstpl
adc
dec
daa
jle
add
inc
sarl
inc
loope
inc
cmp
fnsave
call
mov
sbb
test
push
insb
pop
sbb
cmp
adc
mov
push
xchg
fisttps
out
adc
movsl
cmp
sub
pop
cli
fwait
push
aad
mov
sarb
and
dec
getsec
add
inc
loopne
imul
loopne
fimull
push
inc
pop
sarb
cli
call
mov
adc
jg
in
add
movsl
xchg
movsl
sub
push
jns
add
div
cltd
pop
and
mov
sub
lret
pop
jbe
int3
pop
push
jns
jl
ret
cmp
inc
subl
fsubrl
js
and
pop
jl
sub
lock
incb
das
or
sbb
jmp
leave
rorl
popa
sbb
nop
pop
pop
pop
xor
mov
mov
ds
movsl
or
jg
insb
cld
jp
pop
and
lea
dec
divl
fnsave
lahf
gs
and
sti
inc
inc
cmpsb
ljmp
xchg
mov
pcmpgtd
sub
pop
ljmp
push
push
jl
call
fadds
push
inc
out
mov
sub
mov
push
stos
pop
or
fidivrl
sbb
push
cmp
xchg
icebp
cmpsl
movhlps
cmp
es
or
jnp
xor
mov
jno
insb
pop
push
div
mov
or
shl
and
pop
scas
xchg
jb
dec
lahf
imul
xor
cmp
cwtl
jnp
mov
inc
push
add
push
arpl
cs
push
and
sub
inc
leave
mov
shlb
dec
pop
adc
jle
push
jmp
xchg
cwtl
mov
sbb
mov
cwtl
xchg
push
lahf
outsb
lea
or
push
sub
sti
xchg
fisubrs
neg
or
notb
test
dec
adc
adc
outsl
nop
les
xor
lock
push
test
sbb
imul
pop
popa
pushf
fsub
push
push
dec
mov
add
in
add
hlt
fnstcw
xchg
xchg
in
xor
push
cmc
out
lods
mov
adc
shll
sbb
inc
cmc
jne
push
xchg
pop
lcall
jp
popa
jb
xchg
outsl
ret
int3
or
repz
jecxz
inc
negb
nop
in
mov
xor
xor
lahf
jmp
nop
sub
mov
pop
xchg
jbe
mov
fnstsw
gs
ljmp
movsl
adc
add
fistps
push
inc
lods
sub
inc
and
jl
add
cltd
pop
mov
int3
lock
aas
jo
leave
aam
sbb
cltd
mov
inc
in
jmp
in
jne
push
dec
mov
pusha
inc
aam
or
pop
out
sub
mov
rolb
imul
bound
jle
push
jmp
fs
fcoms
xor
pop
fwait
gs
add
jo
pop
pop
orb
in
filds
aas
inc
adc
pop
inc
addr16
addb
xor
adc
icebp
fwait
popa
sbb
push
sub
inc
cld
sbbl
xor
pop
mov
push
push
rorb
jns
mov
stc
imul
testb
ss
insl
cmp
mov
das
jle
pop
lock
mov
inc
sti
arpl
lock
xchg
mov
add
mov
sbbl
cmp
xchg
lds
and
mov
fistpll
in
or
add
mov
out
mov
mov
xchg
xchg
cmpsl
add
push
aas
dec
test
adc
mov
mov
xchg
cmp
xchg
adc
xchg
mulb
or
mov
push
mov
in
pop
ret
pop
pop
mov
push
int3
sub
fnstcw
out
jge
lods
mov
or
loope
and
mov
inc
sbb
sahf
enter
pusha
mov
sub
int3
and
jo
icebp
lods
inc
orl
push
addl
xchg
insb
mov
fwait
xchg
or
dec
jge
ja
dec
add
jg
lret
ret
repnz
popa
outsl
adc
sbb
cwtl
inc
inc
sbb
inc
fwait
adc
dec
pop
sbb
mov
shlb
inc
cmp
xchg
or
and
outsl
jb
xor
cmpsb
outsl
cmp
lods
lock
sbb
mov
pop
imul
lods
movsb
cmc
jge
bound
lds
lds
cmp
div
adc
lods
or
data16
pop
lods
xor
jl
test
jno
pop
mov
lea
fildl
cmpsb
ret
test
add
mov
aam
popl
mov
inc
and
jge
push
jmp
cltd
jle
leave
vcvtss2si
push
dec
movsb
or
xor
lods
pop
mov
pop
bound
cmp
push
jnp
mov
movsb
mov
dec
jno
mov
push
inc
fwait
aad
mov
cmp
push
imul
negb
xchg
fmull
daa
mov
out
add
movsb
sub
cmp
mov
stos
jbe
lret
mov
adc
mov
mov
aam
mov
in
mov
xor
jnp
add
fstps
pop
insl
pop
push
in
cld
or
fcmovbe
enter
and
ljmp
sub
cli
dec
in
add
mov
xor
sbb
cltd
test
aaa
aaa
gs
dec
mov
pop
jmp
and
pusha
or
inc
fcmovu
mov
pop
push
call
mov
jg
sarb
test
jp
lea
xor
pop
cmp
inc
dec
dec
pop
mov
shlb
jo
or
in
jae
inc
test
lods
es
mov
pop
pop
test
or
aam
sub
sub
and
repz
dec
add
cmp
xor
mov
insb
adc
cli
insl
sbbb
mov
mov
fsubs
mov
pop
mov
inc
out
jo
jae
jns
out
xor
pop
scas
imul
jno
outsb
mov
xchg
repnz
cmpsb
sbb
jb
jns
xchg
test
outsl
and
pop
test
js
sub
loope
lods
adc
ret
ds
pusha
out
pusha
std
stos
arpl
or
fs
cmp
int3
fwait
mov
andb
lods
das
cmpsl
fstps
dec
fidivrl
mov
fsub
mull
cltd
cmp
or
mov
mov
adc
dec
insb
or
jge
test
fidivrs
mov
mov
ror
mov
lods
push
out
mov
cltd
mov
jb
sti
sub
push
data16
mov
jmp
dec
xchg
or
adc
dec
inc
ja
sbb
inc
adc
aam
mov
cmp
cmp
je
loop
data16
in
clc
mov
in
sub
lea
mov
daa
mov
cmp
or
jecxz
ror
adc
add
rcll
pop
arpl
rolb
and
and
inc
cltd
sub
in
or
mov
jmp
pop
or
pop
jle
push
stc
pop
sbb
xlat
fadd
shrb
cmpsl
mov
jmp
ss
lea
mov
xchg
adc
flds
pop
ljmp
dec
lods
mov
nop
inc
sub
or
pop
popa
sbb
xor
andb
sbb
lods
pushf
or
sub
cmpsb
inc
cmp
sbb
mov
ret
adc
sbb
js
and
pop
push
pushf
push
flds
in
shll
hlt
push
sub
int3
pop
jns
sub
dec
jecxz
mov
mov
jg
jne
inc
cli
mov
pusha
cld
fsubrp
push
xor
scas
adc
dec
mov
cmpb
add
js
test
fstps
xlat
sbb
sub
jge
imul
add
add
aas
pop
lcall
inc
mov
jns
loop
dec
rorw
mov
or
jne
gs
cmp
adc
fsubs
aam
addr16
aam
pop
aam
out
push
pop
sub
inc
mov
dec
lds
sbb
adc
orb
and
push
mov
test
aam
xlat
sub
dec
sub
inc
loopne
outsb
and
pop
inc
xchg
sub
in
ror
fwait
cmpsl
and
cmp
mov
sub
jp
adc
mov
xchg
cmp
test
xor
mov
mov
test
jmp
sub
daa
sahf
mov
imul
and
repnz
dec
and
lods
int
aad
mov
rcrb
sahf
mov
adc
and
movsl
inc
adcl
int
and
mov
arpl
out
pop
fnstsw
push
adc
mov
cmp
clc
enter
out
cmp
or
jmp
xchg
push
mov
fldcw
mov
and
lret
pop
jl
mulb
pop
xor
cmpsl
in
es
cmp
imul
nop
pushf
add
inc
or
inc
cltd
mov
mov
and
cmp
fcoms
sbb
data16
inc
and
jno
cli
iret
jae
call
jg
inc
jae
in
mov
into
and
jns
sbb
adc
icebp
jne
and
adc
movsl
je
cmp
iret
shlb
or
or
adc
sub
push
and
jg
adc
pop
jecxz
out
jbe
bound
inc
pop
xchg
mov
inc
cmc
cmpsb
push
xchg
and
push
cmp
fsts
dec
dec
add
mov
cmp
jp
out
cli
lods
lcall
mov
in
adc
jbe
mov
inc
dec
dec
jnp
mov
mov
jae
mov
mov
movsb
and
loopne
and
cmc
es
mov
or
pop
testb
cwtl
aas
iret
movl
xor
sub
mov
jp
ss
into
rol
pop
xchg
popa
ja
sbb
cmpsl
and
rcrb
jb
or
jecxz
add
rorb
inc
sbb
leave
fstps
mov
call
lea
sub
fwait
adc
dec
sub
xlat
incb
scas
cmp
test
or
sbb
test
or
inc
cwtl
push
jb
mov
xlat
into
push
int3
cltd
cmp
fcmovnbe
mov
mov
mov
inc
movsb
and
and
sarl
shll
jbe
jmp
jne
sub
fmulp
lret
out
xchg
sarl
std
test
push
pop
fcmovnu
mov
sub
popf
mov
enter
mov
xor
pop
ret
dec
enter
and
pop
push
out
fs
sbb
cmp
jbe
inc
pushf
add
sbb
daa
pop
test
jg
pop
gs
xchg
mov
xor
cmp
adc
xlat
push
icebp
cld
xchg
sbb
jle
jmp
jecxz
mov
xchg
lahf
pop
xchg
xchg
dec
in
jo
xor
lea
and
mov
cmc
adc
les
rolb
fadds
gs
adc
add
pop
js
mov
fwait
inc
out
cmp
add
jg
or
dec
gs
mov
scas
ljmp
jge
xor
pop
mov
xor
cld
and
mov
inc
pop
cmc
cmp
push
jl
enter
or
push
int
push
std
leave
aam
imul
pushf
sti
mov
adc
xor
out
imul
cmp
mov
add
call
aam
stos
out
loopne
or
lea
mov
jbe
out
adc
xchg
jno
mov
sub
inc
shrb
pop
xor
push
jnp
jbe
sbb
adc
xchg
mov
mov
mov
outsb
xchg
hlt
cmpsb
in
cs
mov
jp
or
dec
fsubs
mov
cld
sar
out
dec
add
aam
add
scas
sbb
negl
fstpl
lods
push
sti
mov
add
movsb
iret
pop
jecxz
insb
pop
stos
sub
jne
std
jg
adc
inc
sbb
scas
leave
lods
xlat
lods
sbb
mov
ljmp
xchg
push
mov
cmp
in
lods
lock
and
mov
sub
lret
aam
sub
int3
movsb
enter
adc
pop
sub
lret
movsl
or
icebp
arpl
int3
dec
xchg
les
int
call
fcoml
inc
in
add
and
jcxz
add
loop
in
rcrl
cli
lahf
mov
ret
stos
xchg
dec
dec
mull
adc
and
xchg
jecxz
sub
inc
loope
shl
mov
test
push
cmp
or
jns
dec
xlat
mov
push
std
sti
mov
ljmp
sub
std
xchg
xor
xchg
punpcklwd
adc
lea
mov
enter
mov
fstsw
cs
out
scas
int3
mov
mov
pop
orl
dec
ljmp
leave
cld
mov
es
xchg
xor
mov
adc
in
mov
int
pop
leave
sahf
push
popa
sbb
imul
push
pop
pop
pop
ret
subb
pushf
pop
add
clc
lea
dec
loope
fistl
add
jge
mov
xchg
movsl
sub
sbb
lahf
cli
das
les
scas
int
out
jle
loop
mov
dec
aam
insb
fimull
inc
imul
das
jne
gs
pop
test
outsb
pushf
mov
movsl
adc
ret
test
les
adc
inc
arpl
out
pop
daa
lret
add
insb
pop
adc
insb
sub
mov
lcall
or
lret
int3
and
shlb
mov
dec
sub
push
adc
adc
in
sahf
jg
mov
jno
push
add
lcall
lcall
in
jae
rorb
xacquire
rcrl
fcmovnu
das
cmp
aad
or
leave
push
stos
add
cmp
je
nopl
test
lods
jg
mov
sub
mov
jge
xchg
cmpsl
jl
push
inc
ljmp
lahf
bnd
jbe
sti
xchg
out
sarb
es
xchg
sub
hlt
hlt
mov
cmpsb
cmpsb
xchg
cmp
outsl
testl
lret
sub
shr
divb
jne
out
inc
jo
stos
call
leave
fcompl
pushf
jns
xor
mov
flds
mov
arpl
aas
mov
adc
int
mov
add
mov
enter
sbb
inc
filds
lods
or
ret
mov
rol
sub
or
sbb
int
inc
lds
lods
mov
adc
mov
and
mov
repnz
mov
addl
mov
fs
cmpsl
addr16
push
sti
xchg
jecxz
dec
or
xchg
push
and
repnz
or
popa
mov
jne
xor
push
mov
ret
je
int
aas
adc
xchg
lds
scas
ret
push
lods
xor
jmp
loope
mov
bound
mov
aad
inc
mov
scas
in
mov
mov
dec
fisttps
je
leave
xor
xor
push
adc
daa
lods
push
xor
sbb
cmp
sbb
xchg
jg
and
xchg
mov
aaa
xor
aaa
cmp
mov
bnd
dec
mov
out
sti
inc
and
xor
loopne
mov
test
mov
aas
jmp
pop
imul
sbb
jmp
and
mulb
int3
and
dec
cmp
mov
shr
popa
sub
mov
push
push
cs
mov
fldenv
fwait
rorb
jbe
xchg
dec
add
mov
sbb
out
scas
jmp
mov
and
pop
dec
jno
inc
xor
push
cmp
and
arpl
das
mov
mov
leave
add
xchg
xchg
mov
xchg
add
xchg
out
jnp
call
lds
insb
push
pop
aaa
xorb
or
imulb
mov
testl
out
das
pop
fldcw
mov
call
enter
insl
adc
inc
xor
lahf
push
stos
xor
pop
sbb
insl
inc
cmpsb
lods
outsl
ja
arpl
xchg
enter
lret
mov
aas
jmp
push
and
movaps
push
aad
sub
fadd
push
pop
add
mov
fidivrs
inc
rorl
and
xchg
mov
or
fimuls
ret
outsb
call
int
out
rclb
out
xchg
int
mov
mov
fstpt
lea
repz
xor
push
in
ja
jle
mov
lods
cmpsb
mov
cmp
outsl
inc
cmpl
fs
xor
add
lds
aad
or
es
movsl
popf
add
dec
call
and
sub
cmp
lea
fisttpl
mov
enter
inc
xor
lods
jmp
popa
fiadds
mov
cmp
adc
cmpsb
dec
xor
nop
add
rcr
xchg
dec
inc
mov
cmp
or
push
xchg
out
xor
mov
outsl
repz
or
push
mov
sbb
into
outsl
ss
pop
jl
add
sub
adc
push
fwait
jle
jle
stc
test
adc
aaa
lret
mov
pop
sahf
jnp
xchg
xchg
cmpb
add
mov
adc
out
and
xor
xor
cmp
into
out
in
cs
leave
pop
dec
dec
mov
add
inc
xchg
ss
add
cmpsb
and
jg
outsb
popf
mov
mov
orl
lock
cwtl
inc
outsb
xchg
xor
scas
push
std
push
sub
and
inc
sub
pop
pop
ret
cltd
ja
jge
jne
push
lea
fcomip
xlat
jae
adcb
xchg
mov
lcall
mov
pop
lock
aam
add
xor
pop
daa
inc
ret
int
adc
notb
sub
or
sub
jns
push
cmp
or
kxnord
push
call
les
mov
push
enter
sbb
sub
xchg
mov
cld
outsb
insb
cmpsb
andl
adc
sti
pop
movsb
cmc
sub
sbbl
cld
inc
add
pop
or
in
mov
dec
out
scas
dec
mov
loope
gs
loop
xor
mov
orl
std
mov
pop
movsl
in
icebp
xor
adc
out
scas
push
push
jne
jno
adc
icebp
int3
or
mov
cmpsl
or
sbb
push
jo
xchg
push
xchg
fimuls
xchg
out
fisubrs
inc
sub
fld
hlt
and
mov
insb
mov
imul
lds
xor
popf
mov
es
outsl
jl
xchg
xchg
jo
mov
scas
sbb
add
lret
pop
cli
scas
js
int3
test
rcll
dec
cmp
call
testl
xchg
add
xchg
inc
mov
loope
nop
or
sbb
outsb
mov
imul
movsl
xchg
imul
push
hlt
or
faddl
pop
shll
and
and
aaa
lcall
mov
jge
ret
daa
sti
mov
rcll
cltd
cs
mov
bound
and
pop
lret
pushf
add
testl
popf
xchg
inc
loopne
repz
dec
jl
outsl
adcl
adc
push
add
outsb
and
mov
pop
add
es
and
ret
mov
es
jmp
jle
ds
arpl
xlat
mov
inc
adc
movsl
jnp
jne
sti
or
pop
and
enter
stos
adc
mov
iret
push
sbb
mov
xor
in
leave
shlb
sti
mov
mov
idiv
inc
sbb
or
sub
lods
mov
test
cmp
cmpsb
mov
leave
loop
loopne
pop
out
cmpsb
addr16
push
push
sbb
mov
rolb
inc
xorl
xchg
mov
movd
test
cmpsl
sub
cli
in
jle
jns
sbb
sbb
cmpsb
test
leave
jae
aad
fnstenv
repnz
sub
das
nop
adc
inc
pushf
icebp
xchg
mov
xlat
popf
sub
and
pop
es
mov
push
mov
out
adc
dec
pop
dec
push
sbb
xor
sbb
cmp
mov
xor
lcall
add
cwtl
in
mov
fistl
push
sbb
jne
cmp
mov
incl
rorl
sub
jnp
mov
fstl
cmp
jnp
ret
pop
jp
sub
mov
cmp
and
push
icebp
sbb
jne
xor
ds
push
scas
gs
imul
mov
sahf
jle
inc
xor
mov
or
add
push
sbb
aad
leave
xchg
ss
sub
mov
hlt
push
cmp
shrb
inc
mov
hlt
cmp
push
pop
pusha
repz
ja
mov
rorl
mov
into
ds
stos
jge
mov
mov
mov
aas
inc
outsb
xlat
adc
repz
or
iret
dec
cmp
dec
in
push
out
ret
jb
lods
enter
inc
mov
push
cmpsl
xlat
pop
popf
cmpsl
inc
outsl
mov
orps
or
mov
test
and
cmpb
stc
in
bound
xchg
std
insl
xchg
pop
push
jmp
jle
add
sbb
fld
mov
sub
cmp
jns
lock
std
mov
and
and
cwtl
dec
push
out
je
jne
dec
sahf
mov
sbb
xor
mov
sbb
dec
hlt
lock
ret
ljmp
stc
icebp
roll
sbb
jns
lds
outsb
les
imul
push
scas
mov
insl
pop
ljmp
sbb
iret
or
xchg
in
sti
cmp
fwait
dec
shll
mov
sub
cwtl
incl
fst
dec
fwait
lods
mov
addr16
mov
cltd
insb
mov
insl
mov
es
cmpb
xchg
xlat
and
jge
gs
pusha
jnp
sub
cmpsl
in
mov
imul
into
pushf
jle
andl
clc
dec
push
mov
popa
fwait
cmpsb
add
arpl
or
mov
cwtl
jb
sub
sbb
sbb
fcmove
or
xchg
push
pushf
mov
jecxz
xlat
cmp
inc
shll
aam
pop
mov
mov
mov
jno
sub
loop
dec
lcall
dec
ljmp
sbb
rcrb
dec
adc
jb
mov
mov
mov
jae
imulb
push
lcall
movsl
in
mov
out
dec
xchg
mov
daa
and
sbb
inc
lcall
adc
stc
jg
cwtl
js
inc
push
and
lret
in
flds
aas
inc
pop
pop
test
lahf
xchg
dec
into
popa
adc
fldcw
xor
int
add
mov
lds
ss
icebp
xchg
adc
mov
xor
leave
lcall
test
call
rolb
lcall
push
lods
jge
movsl
roll
loope
pop
cmpsb
lahf
or
ja
outsl
push
add
pop
dec
sub
mov
sub
push
mov
leave
mov
popa
add
mov
insl
adc
push
adc
cmp
lock
ror
add
xchg
sti
cwtl
dec
inc
mov
xchg
js
mov
xchg
jl
push
sub
and
pop
add
xchg
push
stc
mov
and
ds
sbb
dec
jae
inc
dec
or
test
add
leave
push
in
or
pop
movsl
pop
cld
cvtps2pd
cwtl
jg
fsubrs
adc
outsb
out
stc
add
je
lret
push
mov
andb
jbe
push
mov
loop
jo
lahf
push
mov
pop
loope
imul
jne
xchg
adc
jno
loop
shrb
scas
mov
sub
pop
int
pop
dec
movsl
mov
into
and
push
lcall
mov
icebp
lret
fcomip
test
jl
push
jo
inc
cmpsl
push
cmp
aam
pop
dec
jbe
fsubrs
lock
and
data16
dec
xchg
push
xor
pop
cmp
push
pop
and
pop
mov
lds
mov
cmpb
sub
xlat
xor
sub
sti
and
inc
sbb
imul
add
in
icebp
add
jbe
cwtl
pushf
gs
in
xlat
pop
mov
into
pop
ja
out
lea
xor
dec
ficoml
movsl
js
test
push
ljmp
xchg
pop
jp
cmpsb
pop
leave
inc
lods
ficompl
aaa
sub
inc
inc
leave
pop
stos
repnz
cli
push
aad
sbb
sub
fisttpl
jecxz
vxorpd
shlb
cltd
out
dec
xor
and
iret
dec
mov
int3
sbb
pop
js
sub
mov
pop
andl
sub
push
and
js
and
insl
adc
scas
sahf
push
arpl
xchg
lods
in
negl
adc
cwtl
dec
test
pop
xchg
xchg
in
cwtl
cmp
xor
int3
int3
pushl
andl
jnp
inc
lcall
or
call
icebp
push
testl
push
pushf
cmp
mov
out
rcrl
push
rorb
ret
sub
test
add
dec
adc
adc
and
push
jmp
mov
cmp
xchg
mov
rolb
lcall
or
sub
imul
cmp
test
or
push
sti
mov
inc
mov
shll
pop
xor
out
shl
imul
mov
roll
imul
mov
mov
lcall
push
ds
push
cmc
ljmp
adc
xorl
insb
sub
addr16
in
jne
cli
mov
dec
mov
scas
fdivrs
adc
sbb
das
gs
push
int3
std
addr16
xor
push
or
jns
movsl
mov
inc
shr
loop
cmpsb
mov
and
lock
gs
mov
pop
fiaddl
aam
add
shl
sbb
push
les
pop
adc
mov
inc
xchg
mov
pop
or
jo
adc
sub
adc
mov
shlb
sbb
fimull
lret
imul
imul
or
leave
mov
inc
das
push
ret
inc
xchg
das
aam
test
rclb
rolb
mov
add
clc
or
shlb
xor
shrl
cmpsb
into
or
stos
test
dec
cmpb
rcr
mov
fwait
adc
jno
inc
js
lock
fisttps
test
lea
push
dec
sbb
push
pop
fsubrp
lea
or
mov
daa
inc
insb
xor
or
in
mov
cld
int3
orb
jb
jp
rcr
stos
push
xor
test
imul
insb
loope
mov
stos
xor
scas
xchg
iret
dec
jo
pop
inc
adc
in
leave
aaa
pop
cmp
or
test
or
rolb
negl
lds
data16
popf
add
and
bts
and
stos
pusha
lds
mov
insb
int
and
loope
sbb
jle
out
sarb
xor
dec
inc
mov
lahf
arpl
adc
mov
sahf
les
push
cmpsl
dec
loop
cwtl
push
lret
jae
inc
imul
iret
inc
adc
outsl
stos
pop
ds
jo
cmc
stc
xchg
clc
rol
ja
add
adc
ljmp
and
fbstp
lret
nop
mov
add
mov
aam
sbb
pop
aaa
mov
hlt
sbbb
fs
mov
aaa
imul
int
mov
push
jo
mov
mov
daa
jg
into
imul
lea
mov
mov
sahf
add
jne
sbb
jno
ja
addr16
jp
lea
or
mov
sbb
push
mov
sbb
adc
sub
adc
jae
mov
leave
fdivs
push
mov
int3
stos
jle
and
gs
xchg
push
cwtl
mov
sbb
mov
flds
cld
or
cmp
cs
xchg
js
add
fldcw
jecxz
push
xchg
movsb
ljmp
jae
dec
pop
idiv
aaa
sbb
mov
pop
and
je
jl
add
repz
pop
inc
jmp
xlat
movsb
das
inc
mov
in
dec
xchg
aam
fwait
in
cld
in
dec
repnz
shl
in
stos
fs
outsb
je
ret
mov
test
push
std
and
fdivr
mov
lret
fwait
mov
fstps
add
popa
in
push
imul
push
inc
stc
mov
mov
sbb
mov
cmpsb
icebp
shrl
pop
jg
adc
pop
dec
cmp
cmove
movsb
loope
and
ljmp
data16
aam
push
rcll
inc
shll
pop
or
jmp
call
xlat
jmp
adc
jb
jecxz
xchg
sub
orb
jmp
pusha
cli
xchg
ficoml
dec
mov
push
orb
pushf
push
aam
sti
inc
shll
pop
out
xor
lret
sbb
cmp
adc
jmp
imul
push
mull
std
sub
rclb
lds
icebp
or
insl
pop
fisubs
cmp
mov
into
inc
arpl
mul
jl
cmp
pop
jne
outsl
adc
pop
mov
mov
and
or
test
add
mov
je
sarb
cli
icebp
and
ficoml
lret
mov
mull
test
pop
mov
dec
xchg
cmovne
fsubr
enter
cmpsl
mov
jge
int
jmp
rcl
adc
aam
bound
mov
lret
pop
jle
mov
repz
cs
or
mov
popa
shl
scas
xchg
mov
cld
cmp
cmc
and
jae
xor
or
rorl
jecxz
cmp
add
fisubl
jl
imul
stc
push
mov
lret
xor
int
jne
fdivrl
mov
sbb
movsb
inc
outsl
cmc
ret
and
les
clc
mov
jb
jle
loopne
mov
movsl
push
loope
sbb
nop
pop
adc
lea
sub
in
out
xor
test
out
push
rclb
fisttps
pop
ss
leave
push
pop
inc
and
inc
cmp
pop
xlat
mov
or
ret
cli
inc
ret
and
fldenv
xlat
add
inc
jmp
dec
adc
mov
jmp
leave
ficoms
pop
sub
add
jle
fbstp
xor
leave
push
scas
push
subb
lea
les
inc
int
movsl
xor
and
fs
rcrb
jns
mov
xchg
mov
repz
cmp
hlt
push
inc
jb
cmp
mov
pop
outsl
ss
adc
loope
in
dec
pop
stc
fwait
aaa
lods
dec
add
mov
xor
push
cmpsb
sahf
popf
cmpsl
jns
into
into
mov
jno
dec
and
pop
in
sbbb
out
out
sbbb
pop
jl
jae
sub
mov
je
cmp
mov
mov
or
in
call
call
pop
cmp
mov
xlat
ret
sub
mov
pop
addb
loopne
add
jge
xchg
fidivs
push
mov
addb
jecxz
mov
into
loope
sti
xchg
push
inc
stc
push
gs
mov
cmp
in
sbb
pop
xchg
xchg
dec
aad
mov
xorb
pop
mov
and
inc
cmc
mov
mov
stos
inc
inc
xor
in
ret
mov
enter
inc
dec
aaa
jne
push
xor
test
or
loopne
mov
mov
pop
scas
jp
cli
mov
pop
stos
popa
and
cmp
xchg
xlat
adc
ret
clc
cmpsl
bound
mov
cmp
xorw
pop
subb
inc
into
addr16
mov
fwait
push
nop
pop
push
bound
dec
inc
or
mov
push
popa
lods
sar
lret
test
inc
orl
sub
lds
push
adc
jl
mov
into
xchg
bound
rcrb
or
adc
pop
and
fcomps
shl
push
add
mov
jae
loope
dec
shll
mov
mov
add
pop
push
inc
and
test
xorl
paddsb
divb
mov
cli
sub
sbb
jnp
test
arpl
mov
cmp
adc
and
pushf
js
loope
or
jp
push
aaa
stc
mov
jmp
scas
push
sbbb
jp
mov
leave
or
mov
insl
call
filds
leave
sub
ja
inc
sbb
xchg
mov
arpl
pop
add
rclb
insb
push
inc
cs
bound
mov
scas
mov
fstpt
sub
mov
shl
into
mov
movsb
mov
dec
push
insb
iret
pop
and
arpl
sub
xor
call
sub
or
fwait
cwtl
or
fistpll
test
iret
cmc
or
iret
bound
in
and
push
out
movsb
je
jp
add
xor
add
in
sub
in
cmovae
int3
scas
jb
push
test
dec
dec
rolb
push
aam
xor
dec
mov
jo
inc
ret
cmp
cmc
xor
testb
fcoms
bnd
adc
clc
xor
std
jge
fisttpl
jo
mov
loop
je
icebp
push
sbb
ss
jecxz
xor
lahf
jnp
movsl
dec
ret
rorl
sub
mov
mov
ret
movl
xor
ds
mov
test
adc
sub
lret
fnstsw
cmp
push
inc
push
sub
sub
stc
jp
adc
push
push
push
mov
push
insb
or
orb
jae
dec
add
or
xchg
shll
lcall
ss
je
jne
and
std
inc
inc
inc
dec
pop
push
sub
xchg
imul
mov
mov
pop
add
mov
push
jne
and
push
sbb
dec
fldt
xor
loop
movsl
or
lret
adc
enter
cmpsb
cmp
xchg
and
sub
movsb
xor
adc
xor
xchg
cwtl
test
lods
hlt
push
lds
dec
mov
std
lret
push
ja
dec
or
mov
adc
aad
jl
jp
pop
cltd
addr16
lds
rcrl
in
mov
mov
inc
test
adcb
dec
pushf
jl
int
mov
cmp
fwait
inc
das
mov
jge
or
push
and
fisttps
dec
xor
xchg
mov
add
inc
jnp
sarb
pop
push
out
shrl
das
xor
inc
jmp
sbb
mov
jecxz
shrl
add
subb
xchg
lret
mov
pop
cld
jl
in
inc
sub
sbb
xchg
dec
aam
shll
jmp
xor
add
inc
xor
or
fucom
loopnew
and
dec
sub
jge
xor
shrb
mov
push
push
xchg
icebp
out
ret
add
lods
mov
mov
jmp
insb
scas
lock
daa
sbb
push
jb
nop
cli
bound
mov
in
cwtd
push
cmp
repnz
mov
fbld
sbb
test
lods
inc
dec
xchg
test
push
sub
pop
dec
adc
pop
pushl
sub
jb
repnz
mov
fldcw
fisttpll
xchg
lea
and
jecxz
adc
dec
inc
dec
enter
push
cmp
data16
daa
cmp
dec
mov
mov
mov
add
and
leave
mov
scas
adc
mov
jo
inc
sbb
add
mov
lods
scas
inc
mov
shlb
xchg
mov
mov
dec
mov
fsubrl
or
mov
mov
out
xchg
push
fwait
adc
shl
outsb
adc
lods
sbb
pop
sub
loope
pop
or
push
ss
out
xor
lret
cvtpi2ps
sub
insb
mov
sbb
imul
hlt
and
and
or
jmp
cmp
add
push
in
sarb
push
sbb
addl
inc
ja
cmc
add
sub
pop
mov
pop
fsubrl
and
pusha
cmp
out
test
enter
out
movsl
pop
movsb
movb
push
mov
cmp
inc
ret
sbb
insl
mov
cmp
loopne
loop
sub
ljmp
or
adc
repz
neg
jl
inc
sub
popf
jne
jne
cmpsl
xor
out
dec
sbb
dec
xchg
in
mov
or
ljmp
pop
mov
mov
decl
aad
inc
jbe
stos
mov
ret
inc
shl
cmp
xchg
loop
test
adc
fsubrs
add
or
fcmovbe
jg
popa
cmpsl
or
lds
sti
jge
imul
pop
subl
xlat
les
mov
xchg
icebp
lahf
fidivs
ds
jmp
mov
push
fsubs
test
in
ljmp
mov
jbe
mov
or
scas
push
pop
rol
pop
flds
jae
xchg
cmp
out
rcl
mov
insb
xor
iret
scas
test
dec
shrb
in
adc
mov
out
mov
repnz
into
xchg
call
into
sti
popa
popa
das
fidivrl
push
jle
add
pop
mov
out
mov
mov
scas
push
mov
in
push
out
mov
hlt
stos
inc
pop
lods
testl
pop
rol
mov
popf
xor
xchg
mov
sub
push
lahf
fidivl
mov
cwtl
jecxz
repnz
std
ja
mov
pusha
adc
xor
aad
add
ret
or
dec
mov
xchg
popfw
addb
jnp
imul
cmp
ss
inc
lahf
mov
loope
movsl
out
or
xor
pop
aas
adc
mov
mov
lock
js
mov
cmpsb
leave
ja
imul
jae
xor
lds
xchg
cmp
mov
aaa
fnstsw
jmp
arpl
ret
sub
or
pop
mov
lret
leave
mov
add
and
popl
rorl
dec
xchg
sub
into
sub
repz
fsin
adc
inc
adc
gs
xor
dec
mov
xor
jno
clc
ficompl
imul
ljmp
shrl
leave
jbe
in
pop
pushf
inc
mov
in
inc
mov
rep
cwtl
enter
jno
xor
mov
cld
pushf
ja
mov
cmp
dec
xchg
orb
fistl
ljmp
mov
imul
push
adc
push
and
sti
ljmp
sti
sbbb
fprem1
adc
dec
cmp
pop
sbb
frstor
je
add
mov
mov
mov
push
xor
int3
shll
mov
iret
mov
add
std
cltd
sub
pop
ss
mov
and
or
mov
jl
xchg
dec
inc
mov
fimull
and
xorb
icebp
mov
std
sub
jmp
imul
insl
inc
sub
ret
stc
int
imull
inc
push
adc
dec
inc
mov
lahf
int
lods
xor
sbb
push
jp
cmc
sub
fstpl
movsl
lret
push
and
lods
es
pop
in
fsubs
mov
mov
test
cs
lock
adc
jmp
jne
loopne
jl
aam
loop
jmp
xchg
inc
call
out
and
cmp
loop
push
add
mov
aaa
hlt
add
jl
scas
jb
xor
and
or
movsb
into
dec
pop
out
push
mov
js
cwtl
and
cmc
dec
or
je
inc
ret
jmp
out
jnp
repnz
std
jmp
test
test
pop
in
mov
mov
filds
mov
sbb
lcall
jg
sahf
repnz
es
fistpll
insb
hlt
jns
sub
mov
ficompl
sbb
jne
and
push
data16
lret
jg
pop
sbb
mov
dec
imul
cmp
mov
sbb
cmpsl
popa
inc
push
add
mov
lahf
es
pop
mov
xchg
jl
scas
sub
cmp
testb
out
cmp
les
pop
xor
xchg
lahf
ret
bound
movnti
xchg
je
adcb
shll
mov
in
dec
jmp
dec
mov
arpl
xchg
mov
sbb
in
movsl
inc
add
jge
outsb
push
sub
mov
aam
dec
icebp
xchg
cmp
in
jp
or
jmp
stos
push
repnz
cmp
sbb
inc
cmp
pop
pop
pushf
mov
insl
pop
sub
cld
push
out
mov
dec
push
mov
fidivrl
cmp
mov
imul
add
mov
push
fimuls
rolb
inc
mov
xor
imul
push
outsl
out
mov
inc
dec
mov
std
add
xor
addl
sub
xor
ds
jbe
in
mov
lahf
and
sti
push
cmpsb
iret
int
jne
call
sti
adc
cmpsb
enter
mov
mov
lea
mov
jns
xor
xlat
adc
repnz
jbe
push
aad
test
inc
adc
push
sub
scas
add
sbb
fwait
push
push
repnz
push
in
in
in
in
cmp
xchg
pop
xchg
insb
xchg
dec
cmp
mov
inc
test
icebp
jg
push
movsb
nop
dec
or
and
icebp
test
cmp
mov
mov
push
ret
loope
in
xchg
xchg
pushf
ja
ljmp
js
aas
std
cmpsb
inc
dec
cmp
dec
mov
stc
fstpt
fcomp
dec
sub
jg
gs
mov
cmpsl
add
insl
dec
or
hlt
push
push
xchg
jnp
sti
cmp
adc
neg
aam
add
mov
cltd
add
mov
inc
addl
push
ja
arpl
mov
mov
pop
aaa
add
and
jmp
scas
pop
lods
xchg
push
lods
sub
les
pusha
jl
in
es
popa
jb
push
dec
rcl
jns
loope
inc
jae
lock
popa
and
pop
popa
rolb
jne
ljmp
popa
adc
add
jge
xor
popa
jmp
adc
jp
mov
arpl
push
xlat
xchg
mov
mov
out
xor
xchg
dec
jecxz
in
push
out
rorb
cmpsl
ja
les
sahf
mov
jg
mov
xchg
addr16
dec
data16
fst
or
fisttpll
rorl
sahf
popf
pushl
hlt
pop
movsb
add
das
neg
xchg
mov
xchg
imul
jae
mov
push
push
and
lcall
cmp
aad
mov
aaa
mov
in
cwtl
bound
sbb
xchg
push
jo
push
addr16
push
dec
or
outsb
mov
movsl
xor
cltd
add
adc
dec
mov
pop
cmp
xchg
fldl
imul
add
cmpsl
mov
sub
xchg
fs
arpl
arpl
xor
jmp
sub
mov
outsl
hlt
scas
pop
rorb
add
adcl
add
ss
pop
test
out
jae
dec
push
aaa
movsl
push
jne
loopne
push
outsb
loop
xchg
jg
lret
in
mov
push
pop
pushf
loope
and
jb
xchg
push
inc
adc
aaa
cmp
mov
outsl
fdivs
aas
leave
gs
sti
lret
or
retw
lods
inc
sub
jne
inc
mov
fbstp
push
push
out
dec
inc
cli
ds
push
add
test
loope
cmc
push
push
lret
sub
jb
std
mov
cmp
iret
scas
or
es
mov
outsl
fsubl
fwait
movsb
push
jecxz
popf
sub
aas
lcall
xchg
fstp
add
ss
jmp
jo
jmp
jl
xchg
push
clc
hlt
mov
clc
dec
cmc
jns
repz
mov
daa
xor
xchg
sub
sub
loopne
pop
xor
sbb
and
mov
jo
ret
aam
jns
mov
and
cmp
jmp
and
push
sarb
nop
jecxz
jo
scas
lods
je
or
mov
ljmp
jnp
ja
aaa
loop
ds
leave
push
jle
mov
xchg
push
mov
cmpsb
iret
bound
mov
into
insl
sub
je
fsubs
sbb
shl
xchg
stc
enter
dec
clc
mov
jg
mov
outsl
rcll
mov
mov
mov
stc
push
or
ss
pop
inc
cs
push
loop
sub
jl
outsl
mov
jo
push
imul
mul
in
scas
xchg
jnp
fucomp
or
jno
cwtl
repnz
aaa
nop
icebp
jb
out
adc
jo
dec
mov
mov
xchg
mov
cltd
xchg
sarl
repnz
je
movsl
or
xchg
adc
sub
mov
outsb
xor
ljmp
mov
jae
mov
out
cld
mov
cmpsb
pop
pop
xor
fsubs
adc
ds
inc
in
push
mov
pop
and
mov
movsb
inc
insb
push
pop
incl
sbb
push
jl
fstpl
stc
or
cmpsb
jno
jle
pop
mov
popf
gs
into
mov
loopne
les
xchg
cmpsl
lret
outsl
fcoms
pop
cmp
and
insl
cmp
jo
ss
cld
mov
mov
hlt
push
sub
pop
dec
add
mov
cmp
lods
test
and
adc
imul
or
jg
sbb
out
push
popa
int3
adc
cmpsb
je
outsl
cmp
cltd
inc
sbb
push
enter
push
int
scas
jno
jno
xchg
call
cmc
rcll
cli
and
out
shrb
and
add
pop
in
adc
out
cmp
lods
cli
add
jbe
fs
xchg
sbb
fisttpll
inc
or
pop
mov
std
arpl
sbb
xor
adc
inc
lcall
jle
test
ss
push
test
leave
xchg
inc
xorb
mov
int
pop
jb
jne
cmpsb
lret
test
test
mov
fnstcw
xor
sub
xchg
cld
enter
les
fiaddl
arpl
sub
lret
jmp
popa
enter
ljmp
add
inc
cltd
test
mov
cmpsl
popf
mov
xchg
mov
dec
outsb
push
xchg
xlat
out
or
shrb
xchg
xor
pop
add
fnstcw
xchg
mov
repnz
in
mov
lcall
dec
jge
sub
xor
fwait
xchg
test
push
adc
js
and
fisubs
pop
popa
mov
fnstsw
adc
shr
sbb
in
mov
lods
sub
das
jb
lods
iret
xchg
lods
dec
cmp
pusha
ret
push
push
in
leave
mov
and
mov
lcall
pop
jno
lcall
and
int
pop
sub
mov
pop
push
lret
xchg
mov
cmpb
mov
or
jne
push
jmp
or
sbb
test
xchg
je,pt
cmp
scas
subl
or
es
add
mov
jle
cmp
mov
xchg
jns
dec
mov
fstpt
cld
dec
je
sahf
int
aad
insl
mull
pushf
dec
or
movsb
jns
aaa
mov
cmpsb
es
cmc
cwtl
lret
mov
mov
and
ret
and
nop
sbb
mov
movsb
inc
mov
mov
les
pop
fldl
fistpl
sbb
mov
stc
outsl
jns
dec
inc
sub
adc
mov
or
push
add
adc
sti
sbb
mov
mov
jecxz
add
ljmp
lret
je
jl
pop
push
roll
out
mov
es
jb
pop
add
insb
adc
lret
xchg
pop
imul
pop
sahf
mov
mov
cmpsl
jg
mov
inc
push
mov
add
sbb
mov
int
call
mov
add
dec
aam
leave
push
aam
aaa
dec
push
bound
pop
xlat
sub
pop
and
mov
or
pop
pop
fcmovnu
scas
fidivs
inc
imul
rorl
scas
movsb
loopne
push
ja
enter
mov
mov
inc
adc
ret
push
jecxz
iret
fwait
adc
sti
daa
mov
clc
mov
lock
mov
nop
sbb
sub
xor
mov
iret
xchg
ljmp
repnz
mov
ljmp
cmpsb
jle
aad
arpl
int
xchg
jne
cmc
xchg
aad
enter
sub
adc
ret
aaa
add
movsb
push
and
mov
cs
push
test
fildl
adc
shlb
pop
add
fwait
std
xor
pop
inc
adc
pop
in
test
cld
sbbb
push
or
and
mov
outsl
and
loop
jb
sub
sub
fiaddl
fwait
push
xor
leave
mov
cli
cmp
mov
xor
mov
xor
mov
gs
jp
xchg
mov
iret
dec
lods
into
and
jecxz
push
adc
mov
cmpsl
pop
call
xorl
xlat
aam
aaa
icebp
movsl
adc
jo
test
jns
xchg
stos
cmp
xchg
pop
loope
lods
push
int3
jge
aad
lea
mov
cltd
fsubs
add
dec
movsl
cmc
adc
push
int
ficoml
fdivrl
adc
or
adcb
iret
rorb
inc
jge
dec
adc
adc
outsb
cmpsb
mov
cmp
mov
jae
movsl
dec
cmpsl
es
cltd
mov
nop
push
enter
cmp
lret
scas
dec
insl
aam
dec
jne
adc
insb
lret
imulb
in
dec
sbb
jmp
pushf
sub
ds
lea
lods
jae
cmpl
or
nop
mov
dec
push
enter
push
stos
push
ja
lcall
xchg
jbe
jb
adc
outsb
push
jbe
dec
fs
pop
aas
inc
add
push
andb
adc
push
gs
xor
sub
orb
fcompl
pop
add
fisubrl
push
push
scas
mov
inc
push
lea
jmp
in
ljmp
jo
dec
cmp
lcall
mov
adc
sbb
mov
das
mov
addl
cli
lahf
cmp
es
fnstsw
cmp
mov
mov
rcrb
lret
negl
add
xor
shl
inc
inc
xor
mov
lds
jge
push
loopne
fldenv
adc
ret
out
scas
cs
dec
out
testl
das
pop
cmp
mov
js
pop
xchg
jne
insb
mov
inc
inc
or
jns
inc
fwait
xchg
xchg
leave
imul
mov
xchg
stc
dec
mov
push
mov
lcall
sbb
pop
xorl
and
inc
fisubrl
jg
fcomps
xor
dec
popf
pminub
mov
mov
hlt
jae
test
sbb
or
mov
pop
mov
and
pop
xor
dec
sbb
lods
mov
pop
jp
leave
lret
mov
pop
cmp
fidivs
cmp
inc
sahf
mov
aaa
gs
out
icebp
daa
dec
loopw
jne
xor
jmp
js
js
sub
mov
push
sub
subb
push
repz
icebp
and
cmpsb
or
mov
xchg
cmpsb
sbb
dec
loop
imull
sub
fsubr
jmp
es
sbb
popa
pop
mov
push
adc
mov
imul
popf
cwtl
pop
pusha
add
dec
pop
mov
xchg
inc
movsl
scas
cmp
mov
cmpsl
xor
add
push
pop
sbb
mov
or
xlat
xchg
in
xor
pop
jo
or
add
cmpsl
push
pop
pop
jae
jge
scas
es
or
push
fwait
push
popa
mov
mov
mov
pop
js
divl
ret
enter
push
and
stos
out
sub
mov
sarb
jg
outsb
inc
jg
div
sbb
loop
repnz
jge
test
jge
outsl
je
test
inc
xchg
sbb
jno
adc
push
jp
or
hlt
ret
bnd
loop
mov
mov
adc
rcrl
mov
and
arpl
jae
fstpt
pop
inc
jae
sub
nop
jbe
xchg
pop
es
cmc
in
sbb
rcrb
xchg
pop
popf
add
xlat
lahf
xor
sarb
or
push
inc
sub
das
dec
cld
pusha
imul
jb
out
leave
int3
xchg
jge
pop
push
jg
and
loope
mov
lods
bound
inc
mov
adc
push
mov
js
push
loop
clc
sbb
sbb
cmp
adc
and
jo
dec
xchg
int
imul
mov
pop
add
mov
push
leavew
or
int
ljmp
sbb
xchg
ret
xor
and
mov
imul
shrb
lret
in
mov
insl
in
mov
cmp
mov
fcoms
add
xor
adc
pop
popa
and
cs
inc
lock
lea
jle
mov
daa
push
add
mov
outsl
sbb
sti
and
xor
sub
sbb
outsb
ljmp
or
pop
xor
mov
xchg
adc
lret
adc
xor
stos
mov
icebp
pop
insl
jl
adc
pop
jg
mov
popf
mov
push
cwtl
dec
sbb
popf
jns
mov
xchg
mov
xchg
ds
jb
in
in
mov
mov
xchg
mov
xchg
add
fcoml
pop
out
movsl
jo
shlb
roll
std
and
push
or
cmpsb
inc
xor
mov
test
aam
jg
mov
add
and
subb
rcrb
sub
sbbl
fsubl
jecxz
inc
loope
imul
fwait
popf
push
jae
int3
into
fisttpl
xor
and
and
sub
lahf
pop
ja
dec
push
aam
inc
cld
cmp
cmc
jo
inc
push
stos
popa
shrl
mov
mov
insb
pusha
lea
dec
push
cwtl
ja
ja
sar
or
mov
cmpsl
xchg
pusha
mov
out
add
xor
subb
dec
fs
pop
fpatan
pop
aam
push
das
adc
mov
jge
cs
inc
xor
out
data16
mov
cmp
add
sub
sti
aad
in
mov
jl
cli
fyl2x
adc
add
mov
push
dec
std
or
subl
cmc
in
arpl
xchg
pop
sti
push
adc
pop
repnz
movsb
push
sahf
cs
cs
imul
dec
outsb
cmpb
mov
mov
mov
inc
mulb
pop
dec
imul
mov
hlt
xor
ret
cmp
popa
dec
ljmp
lcall
pop
and
push
cld
decb
sbb
jae
push
jg
out
ret
out
mov
push
frstor
mov
pop
xchg
sbbb
mov
popa
mov
ret
xchg
push
sbb
mov
sub
push
fndisi(8087
jo
cmp
jns
cmp
aad
push
mov
add
and
jae
sub
inc
mov
push
cmp
aad
inc
pop
dec
fnsave
or
xor
loope
lahf
in
push
test
or
mov
inc
gs
mov
mov
lods
push
into
aas
enter
sar
stos
pusha
movsl
movsb
fildll
adc
outsl
push
rclb
movsl
mov
jo
lret
sti
pop
dec
sbbb
jg
push
or
cmp
in
cmc
xchg
dec
mov
in
inc
or
into
sub
add
mov
out
idivb
clc
mov
jp
les
jne
sbb
mov
xchg
xchg
frstor
add
sbb
mov
mov
push
pushf
mov
and
sbb
dec
xlat
mov
mov
or
inc
inc
and
pop
jl
fiadds
outsl
mov
pop
xor
mov
es
loopne
jecxz
shll
mov
loop
pushf
fs
push
lret
insl
push
pop
push
int
aad
pop
pop
imul
cmpsb
push
int
stos
fstp
dec
cmpsb
mov
pop
movsb
inc
lock
push
xchg
std
dec
into
cmp
mov
hlt
das
xor
jns
stos
jae
insl
sbb
sbb
ror
sahf
mov
les
and
repz
insb
inc
imul
or
cmp
shrb
sbb
enter
orb
in
int
scas
adc
test
mov
arpl
sub
xor
pop
mov
out
loope
or
add
lods
pop
test
dec
stos
pop
sbb
mov
imul
ss
mov
test
int3
outsb
dec
mov
adc
mov
js
test
adc
add
dec
xchg
call
out
push
scas
loopne
add
in
jge
ss
mov
mov
loope
mov
ret
ret
cmpsl
cmpsb
arpl
lock
sub
mov
hlt
push
adc
cmp
outsl
xchg
pop
repz
ljmp
xchg
pop
mov
or
jge
std
mov
xchg
pop
inc
jmp
ja
inc
add
xchg
movsb
aam
out
das
jp
lds
nop
scas
mov
stos
ja
or
sti
scas
gs
stos
ret
jge
les
mov
addl
aad
mov
xor
out
lret
fs
bound
mull
aam
push
adc
int
inc
out
xchg
lods
pop
insl
cmp
scas
sbb
sub
jge
loop
fstpl
mov
ds
ret
mov
push
xchg
mov
jge
arpl
and
ja
iret
std
shr
push
movsb
cmp
dec
mov
js
in
mov
sbb
jg
addl
or
sti
xchg
sub
popf
dec
sbb
xchg
jmp
and
sub
dec
sahf
push
rcrl
mov
mov
es
and
test
ret
mov
jno
xor
aad
xor
add
rcrb
jne
in
push
xor
push
dec
mov
pop
dec
sar
in
fisubrl
loopne
inc
popa
ss
mov
repnz
jo
leave
test
int3
push
cmp
js
icebp
test
pop
negl
stos
loop
adc
sbb
xor
mov
mov
jecxz
pop
lock
and
mov
lret
sbb
sub
sti
jp
adc
add
add
test
movsb
in
add
in
je
and
cmp
add
jb
inc
mov
dec
int
lret
test
sbb
jmp
cmp
and
cmpsb
das
rcll
fisttpl
mov
ror
pop
dec
sbb
dec
rclb
mov
fsubl
jg
mov
push
pop
fldl
fstl
mov
mov
fsubl
std
inc
jnp
push
jb
push
fsubp
push
bound
xchg
insb
mov
pop
jmp
inc
in
stc
xor
adc
xlat
and
sub
push
mov
flds
lock
or
add
jp
mov
fisubl
pop
cmp
lea
pop
mov
mov
xor
mov
repnz
adc
jo
shrb
mov
mov
adc
dec
mov
test
xor
popa
mov
push
mov
dec
push
dec
call
xchg
and
adc
or
pop
call
add
out
imul
or
sbb
sbb
iret
out
insl
ss
mov
lret
dec
int3
add
int3
push
cmp
dec
sbb
repz
xchg
xor
ja
and
mov
sub
push
stos
xor
imul
mov
xchg
mov
xchg
loopne
xor
scas
push
xlat
outsb
push
inc
mov
push
jns
sub
or
dec
cmp
popa
sub
lods
push
lds
add
or
lds
mov
sbb
outsb
decl
sbb
fldt
loop
jb
jge
and
leave
xlat
repz
add
stos
sbb
test
nop
repnz
add
ret
les
fdivs
mov
test
push
std
jnp
pop
pop
inc
aas
clc
inc
aas
sub
pop
js
xchg
xchg
fidivrs
sub
sub
outsl
or
xchg
xlat
cltd
out
sbb
icebp
imul
movsb
arpl
movsl
xor
xchg
test
loope
mov
out
dec
jecxz
roll
push
xchg
sbb
pop
or
in
inc
icebp
adc
pop
and
ret
cld
mov
pop
push
inc
mov
out
and
pop
jbe
pushf
sahf
cmp
ljmp
dec
cmp
pop
in
xor
cwtl
mov
stos
mov
lods
xchg
sbb
loop
mov
fstps
lods
pop
dec
lods
cmp
in
push
xchg
dec
adc
mov
push
divl
adc
ds
dec
addr16
lret
xor
pop
das
jae
cmp
fadds
and
rcll
sbb
or
aaa
hlt
push
sbb
cld
mov
sub
inc
jmp
inc
aas
in
ds
rorb
std
fstpt
rorl
mov
aaa
mov
sti
lret
push
jno
jmp
loopne
fsubrs
lods
or
push
add
push
sti
add
out
push
dec
out
ss
pop
push
shrb
adc
ja
jle
cmp
les
into
add
pop
ficompl
xlat
mov
mov
iret
lcall
dec
xchg
and
call
push
add
jl
jb
push
jnp
daa
adc
adc
lock
dec
push
or
xchg
ret
lret
and
leave
push
xor
roll
in
scas
std
stc
mov
jmp
and
ret
jb
fcomip
fsubp
mov
fstps
shlb
push
shl
mov
dec
fwait
and
hlt
inc
mov
into
repnz
lahf
repz
imulb
mov
cmp
rolb
cs
mov
inc
sub
cwtl
sti
std
mov
repz
sub
jp
lahf
arpl
lahf
push
hlt
outsl
mov
mov
xchg
frstor
bswap
imulb
cmp
adc
aam
add
out
or
sub
cltd
insb
fidivrs
pop
pushf
mov
pop
cld
mov
add
mov
inc
xchg
pop
inc
stos
inc
inc
fldl
adc
insb
les
loope
mov
fcoms
insb
xor
and
adc
lahf
ret
inc
gs
sub
decb
rorl
sub
dec
in
mov
repnz
xor
lcall
sbb
mov
add
fldcw
inc
jne
mov
jb
scas
stos
inc
and
sti
fdivp
pop
fcmovu
lcall
dec
cmp
outsl
ljmp
adc
ljmp
es
inc
cmpsb
push
dec
dec
orl
scas
repz
mov
or
int3
pop
fistpl
shll
fisubl
in
andl
xchg
in
out
sub
mov
lods
popf
aaa
xor
in
sbb
mov
bound
negb
enter
pop
cs
lret
es
fisttps
js
das
jmp
cmp
dec
test
jmp
hlt
std
dec
or
jnp
sbb
mov
movsb
dec
nop
icebp
pop
loopne
sbb
ret
lcall
orl
or
fwait
and
pop
inc
sbb
insl
lcall
out
mov
fwait
and
mov
mov
mov
shrl
out
in
inc
pop
hlt
shlb
xor
lret
scas
or
sahf
mov
cmp
inc
mov
add
cmpsl
call
adc
popa
aas
int
mov
icebp
mov
iret
inc
mov
pop
test
sbb
fsts
or
cmp
mov
cltd
int3
and
cs
fsubrp
mov
sbb
mov
or
sbb
mov
push
ss
stos
pusha
icebp
xor
jg
pop
or
in
inc
or
adc
sbb
and
push
mov
hlt
in
ret
mov
adc
add
cli
fnstcw
cmp
ficoml
aaa
repz
push
hlt
scas
push
lcall
movsb
or
popa
or
mov
negl
call
xchg
aad
subb
movsb
push
rcll
cmp
inc
mov
imul
scas
pop
xchg
js
inc
push
dec
in
cltd
test
negb
ret
gs
movsb
inc
xchg
lds
aaa
lret
mov
sarl
cmp
mov
in
sbb
test
adc
mov
bts
cmp
mov
add
jnp
test
aaa
add
loope
clc
and
scas
cmp
cli
mov
push
sub
and
and
test
adc
dec
pop
jl
xchg
or
mov
in
ljmp
cmp
jp
inc
xor
sahf
ret
inc
push
std
sbb
or
sahf
xor
aam
xchg
cmpb
add
adc
bound
or
or
call
jmp
lea
pop
push
mov
rclb
ss
fsubs
jne
mov
lahf
mov
pushf
sub
jnp
int3
dec
fiaddl
cmc
divl
inc
fadds
js
push
bswap
lods
ffree
and
jecxz
loope
icebp
inc
and
mov
mov
adc
cld
adc
mov
enter
fstp
push
lret
jmp
jecxz
pop
and
inc
lret
xor
call
nop
lods
data16
lods
shlb
imul
and
xchg
cmpsb
xchg
pop
daa
mov
adc
add
add
leave
popa
jbe
mov
sbb
mov
pop
lods
imul
js
push
fs
push
xor
sbb
mov
pushf
inc
xchg
inc
leave
test
mov
jnp
jbe
and
insb
pop
pop
jne
pop
mov
mov
movsl
mov
sub
pop
test
and
gs
xor
add
das
insb
fucom
das
or
aaa
and
insb
inc
pop
dec
add
aaa
imul
movsb
push
mov
movsl
js
fs
jmp
fistpl
adcb
shlb
jg
daa
adc
cmp
call
xor
js
mov
lahf
daa
insb
mov
inc
xorl
cmp
pop
inc
mov
aas
call
shll
negl
jnp
or
push
cmpsl
aas
pop
loopne
push
sub
sti
xchg
data16
sub
insl
xchg
popa
test
inc
and
jmp
pusha
dec
test
mov
lret
mov
xor
sub
aad
mov
dec
mov
into
xlat
lods
xor
pop
subl
addr16
lea
stos
xchg
sub
jmp
ja
js
insl
and
ficoms
adc
lds
in
jo
sub
stos
into
mov
xor
repnz
data16
shl
mov
fisubrs
sub
jl
mov
xor
or
adc
pop
xor
push
data16
add
cltd
cmp
add
jnp
call
aas
lods
and
inc
push
fisubl
stos
out
call
push
fldcw
imul
shlb
fcoms
xor
pop
stos
push
or
and
loope
fdivr
push
sahf
outsl
dec
add
dec
popf
mov
add
jne
test
stos
ds
scas
jns
mov
shlb
push
pusha
int
dec
out
mov
outsb
sbb
cmp
xchg
fisubrl
xlat
outsl
lcall
jnp
dec
cmp
xor
movsb
mov
sarb
nop
test
pop
jo
out
xchg
sbb
push
fdivs
xorl
xor
cmpsl
xor
mov
sub
jg
dec
inc
outsl
clc
enter
flds
inc
fmulp
pop
das
data16
mov
adc
pop
gs
xchg
mov
mov
or
jge
jb
push
in
add
int
mov
sti
ja
adc
jle
cs
sub
jo
mov
xchg
push
push
pop
mov
dec
daa
push
sbb
dec
inc
jmp
pop
mov
addr16
test
out
ljmp
and
mov
mov
rep
in
xor
jle
adc
or
cmp
pusha
and
gs
sub
pop
inc
adc
dec
test
or
jg
roll
xlat
popa
stos
aam
pop
and
xchg
sbbb
jb
mov
inc
sti
lcall
insb
sbb
adc
sub
hlt
xor
adc
cmpsb
push
pop
adc
push
jo
movsl
dec
mov
fadds
in
movsb
push
movsb
mov
push
mov
fldcw
adc
stc
lock
mov
xor
cli
push
add
scas
cwtl
jmp
jl
fwait
or
lock
fnstenv
adc
mov
add
pop
fnsave
repnz
in
nop
icebp
inc
decb
or
push
mov
dec
stc
xor
fistpl
pop
sbb
cwtl
mov
pop
mov
movsl
std
decl
mov
xchg
inc
sub
rcrb
bound
popa
mov
ret
and
hlt
and
dec
mov
add
rcrb
mov
clc
ds
xor
fstl
pop
or
lods
fdivp
push
jae
movsl
fcmovu
jecxz
push
mov
mov
or
in
jp
fisttpl
mov
xor
rcl
test
ds
enter
out
insb
rcl
mov
pop
andb
xchg
daa
pop
fdiv
lea
jecxz
dec
fildl
outsl
ja
cwtl
pop
xchg
xchg
inc
lods
int3
and
push
sahf
les
xor
mov
dec
insb
pushf
push
push
adc
in
cmc
adc
xchg
scas
shrl
movsb
cmp
mov
dec
jge
xacquire
mov
pusha
mov
add
ja
int
sub
inc
sub
movsl
insb
js
xlat
jp
jns
lret
js
push
ss
push
insb
dec
mov
xchg
ret
cmp
sahf
cltd
sub
jecxz
loopne
jbe
cmpb
cmpsb
inc
in
hlt
dec
mov
dec
jns
in
mov
push
cmc
enter
lret
cld
adc
xor
add
ds
sub
mov
sub
dec
rol
adc
sub
ss
jg
add
iret
xorl
aaa
mov
and
xchg
push
push
loop
pop
jge
push
das
lahf
jbe
or
mov
pop
pushf
hlt
out
add
mov
inc
mov
cmp
mov
cltd
xor
test
sahf
mov
or
std
add
nop
std
cli
es
dec
fstps
loopne
out
jmp
or
mov
jmp
dec
insb
push
xor
test
clc
repnz
push
jecxz
jle
fwait
adc
daa
sti
scas
stos
inc
div
test
idivl
xlat
adc
jl
or
scas
pop
pop
push
mov
pop
pop
out
andb
popf
ss
aaa
aam
cmp
xor
sub
les
cmp
sarb
fdivl
adc
ret
and
mov
jnp
sub
sbb
out
aaa
and
push
mov
inc
inc
jo
outsl
int3
cmp
decb
in
push
lods
and
xor
xchg
lret
and
shl
sub
xor
ja
lret
or
andb
frstpm(287
pop
out
fstl
lea
mov
imul
xchg
cmp
add
jns
sbb
into
xor
xor
xor
sbb
insl
xor
adc
or
push
jp
scas
inc
dec
pushf
push
and
loope
lcall
jbe
pop
or
outsl
add
pop
adc
repnz
sarb
and
scas
adc
insl
add
mov
pop
push
lds
pop
xchg
cmp
cmp
mov
sti
cmpsb
outsl
mov
fsubr
jmp
add
mov
add
ret
fsubrl
push
inc
and
pop
inc
test
rolb
mov
inc
testb
add
inc
xchg
mov
pop
lret
repnz
emms
mov
insl
cmp
testl
jo
into
xchg
jnp
push
xlat
scas
mov
cmc
shr
adc
loop
sti
mov
push
lods
ret
push
xor
repnz
or
xchg
or
sti
test
mov
sbb
movsb
mov
out
cmp
js
fldl
cmp
nop
xchg
call
je
gs
leave
imul
cmpsl
or
shlb
out
add
cs
lods
or
push
or
inc
daa
xchg
push
jae
pop
jge
fs
out
cmp
adc
fisubrl
sub
out
mov
je
mov
mov
mov
or
test
and
test
mov
push
xchg
push
push
test
rclb
icebp
cmpsb
popa
dec
sbb
rcrl
outsl
sbb
dec
fdivrp
rol
pop
or
and
loopne
sti
ds
mov
jp
in
xor
add
jb
in
pop
iret
fdivrl
jge
xchg
idivl
jno
inc
sahf
xor
movsl
xlat
mov
das
fs
repz
xchg
cmpsl
fistps
sbb
aad
sbb
adcl
ljmp
mov
test
jnp
lods
mov
push
ljmp
push
hlt
sbb
or
aaa
xchg
xlat
icebp
in
inc
xor
adc
pop
xor
mov
sbb
adc
out
mov
ss
rcrb
cltd
mov
and
adc
in
enter
jecxz
orb
xlat
cs
or
pop
xor
cs
push
lret
pop
jp
movsl
leave
or
js
into
xchg
lcallw
and
cwtl
and
ljmp
inc
jbe
sahf
adc
fs
imul
cmp
adc
lret
sub
push
roll
cwtl
mov
clc
hlt
inc
inc
repnz
stos
ss
mov
mov
in
mov
sub
pop
insb
test
movsl
movsb
or
push
mul
or
xor
fsts
popf
sbb
insl
jp
addl
xlat
aaa
cwtl
std
test
add
pop
jo
mov
int3
xchg
rcr
jae
cmp
push
mov
cmp
std
call
push
mov
cs
sahf
outsl
lea
aas
adc
or
scas
sbb
push
in
xchg
pop
sub
xchg
add
aad
arpl
shrl
add
outsl
test
mov
jl
outsl
xchg
jmp
aam
fwait
mov
and
mov
mov
loop
xor
rcrl
fcmovu
cmp
push
dec
push
sub
xchg
xchg
repz
mov
jge
pushf
call
or
imul
cmc
call
scas
shr
xchg
fidivl
mov
xchg
insl
pop
cmpsl
mov
or
pop
into
mov
loope
aad
jg
dec
pop
push
aad
lods
arpl
pop
jns
xor
js
fldl2e
mov
mov
seta
stos
or
pop
stos
mov
sbbb
test
cltd
shr
dec
mov
push
push
aas
mov
inc
push
cmp
es
scas
fstps
mov
scas
rorl
push
dec
dec
lods
test
fwait
mov
mov
push
dec
sbb
sbb
loope
adc
sub
adc
ja
std
sbb
aam
inc
iret
test
int3
nop
cmp
rorl
adc
dec
mov
dec
loope
add
jnp
roll
cmp
lret
shrb
mov
pop
inc
or
inc
xor
mov
xchg
mov
test
daa
cli
loop
mov
xor
cld
fnstcw
push
inc
xchg
dec
push
mov
sub
cwtl
fdivl
pushf
adc
ret
add
repz
iret
stos
dec
or
xchg
mov
clc
jp
lds
jb
xchg
or
lods
sub
dec
std
inc
movsl
test
lods
gs
stc
fisubrs
enter
or
rolb
mov
cwtl
cmp
mov
out
cmp
xchg
push
push
dec
iret
or
mov
xchg
and
pop
inc
sub
or
or
jne
mov
dec
sbb
push
xchg
sbb
cld
pusha
lcall
fcomps
jo
mov
out
cmp
push
out
imul
cmpb
repz
ja
dec
mov
jmp
test
aaa
test
daa
push
nop
fildl
out
add
ss
mov
pop
pop
pop
call
pop
lods
mov
add
loop
inc
int
rclb
jle
pop
push
fmuls
movsl
movsb
mov
push
xchg
test
push
sbb
mov
push
orl
mov
cs
test
or
sarb
mov
or
sbb
std
xor
inc
repnz
xchg
jge
push
fadds
test
jno
ret
ljmp
adc
ret
dec
jecxz
pop
ret
adc
iret
mov
test
xchg
inc
imul
int
adc
sbb
jbe
xchg
dec
lret
lcall
popf
enter
sbb
mov
testl
ss
push
xchg
or
arpl
cli
mov
pushf
incb
mov
or
or
jecxz
scas
mov
push
xchg
cmc
in
ja
jne
cli
scas
popa
das
inc
and
inc
lods
stos
ret
movsl
mov
test
inc
subb
data16
icebp
out
adc
fisttps
fisttpll
push
nop
mov
iret
ljmp
stc
imul
enter
mov
dec
push
stc
sub
fwait
sbb
mov
imul
sbb
test
xchg
mov
add
lock
test
sbb
jp
repnz
cmc
dec
push
int
jbe
add
lcall
jne
aas
inc
dec
sahf
lret
stc
or
adc
fiadds
scas
mov
mov
dec
inc
fdivl
cltd
fsubrs
pop
arpl
mov
mov
out
ss
adc
xor
movsb
pop
movsb
mov
test
mov
pop
mov
fistl
loopne
fnstcw
or
call
andl
jno
xchg
aaa
adc
aaa
mov
adc
dec
pop
iret
push
into
mov
and
sbb
ret
loop
pop
andb
sti
insl
add
and
out
push
pushf
ljmp
fwait
mov
sbb
ds
testl
jo
out
dec
pop
outsb
rorb
and
jge
pmaddwd
lcall
push
pop
xor
outsl
jo
loop
int3
hlt
inc
fsubrs
mov
xor
and
xor
xor
int
enter
inc
das
loope
movsl
fs
lock
jno
outsb
add
pusha
inc
repz
mov
movl
test
dec
sbb
dec
xchg
lahf
lcall
pop
jge
clc
pop
pop
push
push
fcomip
fistpl
xchg
js
sahf
inc
lods
jp
ret
xchg
mov
mov
hlt
xor
push
or
inc
sbb
adcl
outsl
imull
adc
mov
leave
test
rcrl
pop
not
mov
jg
fistpll
nop
fiadds
call
cltd
lahf
and
mov
push
inc
mov
popf
mov
test
test
addl
jge
cld
cmpsb
cmp
xchg
or
push
icebp
out
xchg
insb
les
std
and
inc
cltd
pop
cmp
ror
pop
mov
xlat
pusha
rorb
jae
mov
es
inc
sbb
jno
lret
xchg
movsb
sti
cmpsl
jl
sub
gs
pushf
std
xchg
or
es
push
cmc
pop
lcall
sahf
inc
cltd
adc
mov
flds
push
jg
mov
inc
test
push
mov
sub
in
mov
cmp
add
xchg
dec
repz
lcall
jbe
dec
adc
add
push
pop
cmp
jb
ja
fistps
imul
pop
mov
out
in
ret
inc
xor
insl
add
dec
fisttpl
dec
mov
push
cmc
adc
push
pop
ficomps
pop
mov
js
mov
in
or
push
gs
test
sub
sbb
cmp
fxch
mov
xchg
adc
sar
aam
push
push
test
pop
mov
clc
add
fs
mov
cli
sub
mov
pusha
cmp
sub
inc
push
int
std
mov
cmp
pop
push
dec
movsl
mov
popf
or
add
mov
jp
rdmsr
out
adc
or
dec
fldt
push
inc
and
movsl
and
pushl
xor
jp
stos
loope
cltd
mov
push
inc
js
les
imull
scas
adc
leave
cs
xor
mov
fcmovnb
pcmpeqb
xor
scas
stos
mov
dec
stc
sub
jbe
subl
or
dec
sti
push
loop
xchg
outsl
stos
adc
dec
lcall
xlat
jno
inc
mov
sbb
mov
mov
jle
ficoms
xchg
aad
push
stc
cmpsl
testb
sbb
sbb
mov
fnstsw
jae
mov
lcall
pop
flds
ret
pop
jno
sbb
stos
and
ds
rcl
mov
int3
add
sub
sub
mov
dec
sbb
mov
xor
push
add
scas
std
rol
inc
push
arpl
clc
sub
push
add
jne
mov
int
push
add
and
jle
iret
test
pop
ret
cwtl
mov
mov
in
jle
xchg
push
lods
out
push
pop
data16
jecxz
sub
or
pushf
pusha
aas
mov
sbb
pop
add
xlat
mov
sub
popf
shrl
addr16
cmpsl
cld
xor
mov
arpl
dec
out
push
scas
add
addb
es
les
mov
xor
mov
sbb
fcoms
dec
dec
jmp
icebp
hlt
or
movb
leave
mov
fdivrl
jbe
repnz
sub
add
sub
insb
push
addr16
cltd
xor
push
lret
shrl
inc
cmc
out
dec
sub
mov
dec
lahf
pop
adc
mov
or
mov
popa
out
and
jl
dec
sti
xor
test
aam
aas
push
in
leave
xor
add
or
mov
lcall
fadds
mov
stos
dec
nop
inc
mov
loope
mov
cmp
pushf
es
mov
fmuls
std
out
adc
bound
xorb
loop
stc
das
mov
xchg
test
lret
xchg
push
mov
mov
adc
adc
inc
inc
cvttps2pi
cltd
fwait
adc
or
pop
sbb
ljmp
xor
incl
cwtl
jnp
sbb
fimull
and
or
xor
and
inc
mov
orl
das
inc
mov
and
icebp
adc
push
mov
xor
and
sub
mov
mov
xor
loopne
push
out
sbbb
push
push
test
fsubs
mov
lea
sub
mov
loope
daa
mov
adc
pop
icebp
xor
repz
mov
imul
or
loope
in
mov
shr
cmp
imul
mov
icebp
mov
pop
in
scas
dec
sbb
insb
pushf
xlat
push
and
push
mov
mov
push
fsubl
adc
sub
or
push
call
or
cld
sahf
aaa
sub
loope
xchg
add
and
jno
ret
cli
fwait
jnp
push
ja
xchg
int3
loop
cmp
xor
dec
dec
xchg
add
jo
ja
xchg
jae
and
cltd
imul
mov
xor
in
mov
out
cmpsb
inc
fisubs
stos
pop
mov
iret
ficoms
inc
push
push
cmovp
repz
add
subb
into
stos
movl
leave
pop
out
pop
subb
push
ss
aaa
int3
xchg
les
xchg
test
mov
push
or
shlb
cmp
mov
push
lret
jp
jo
push
ja
pop
aaa
popf
dec
mov
adc
xor
push
dec
and
push
mov
lds
sub
js
rcl
int3
jp
push
out
icebp
ja
inc
xchg
les
ds
mov
enter
adc
adc
loope
int3
sub
push
mov
push
lcall
xor
pop
mov
lods
call
mov
mov
add
fcmovu
sbb
jg
fstl
pop
and
push
icebp
cld
and
add
in
cmpsl
jg
push
shlb
mov
cld
loopne
sbb
std
mov
icebp
adc
je
adc
subl
cs
rclb
dec
pushf
ja
sub
jbe
int
or
xor
mov
inc
cmp
inc
push
aas
sahf
mov
dec
lret
pushf
and
imul
hlt
mov
fldt
add
lea
popa
ja
add
iret
filds
sar
lret
sbb
loope
mov
jl
jne
scas
cmpsb
daa
xor
pop
aad
mov
ja
fmuls
pop
jmp
gs
lods
cmpl
movsb
sub
pop
xor
xor
in
add
and
dec
insb
hlt
sbb
stos
enter
mov
xor
leave
or
sub
in
pop
pop
movsl
test
dec
stos
fs
dec
mov
out
xor
stc
cmp
pop
addl
push
mov
adc
das
inc
cmp
and
test
call
ret
sub
xor
sahf
jo
push
xor
adc
mov
outsb
and
pop
mov
lds
fistpl
mov
or
sbb
xor
or
xchg
push
cli
clc
cmp
popa
mull
lods
pop
mov
mov
mov
sar
sub
icebp
adc
lock
pop
enter
mov
into
push
loopne
ret
call
shl
test
int
push
inc
xor
sarl
dec
dec
je
sbb
mov
mov
sub
mov
or
inc
fwait
scas
push
movb
cmpsb
or
xor
pusha
std
lahf
inc
sbb
xor
imulb
sahf
dec
sub
or
dec
xlat
cwtl
push
aam
out
dec
and
orl
dec
mull
jmp
decb
and
clc
imul
rcr
xchg
scas
or
andb
and
enter
test
adc
int
sub
cmpsb
jnp
js
xchg
push
dec
cltd
negl
mov
iret
or
or
fdivl
jp
pop
mov
jne
scas
outsb
jnp
mov
test
or
les
sar
shlb
stc
mov
xlat
out
mov
xchg
mov
sub
push
loopne
jnp
pusha
inc
bound
and
lcall
movsb
sbb
je
or
fdivs
mov
push
addr16
cwtl
adc
arpl
test
push
mov
jg
aam
cmp
mov
mov
fcomi
fdivrl
out
mov
pop
popf
jmp
jl
push
idivl
or
mov
mov
jl
push
sub
popa
iret
loop
push
jnp
mov
cmp
pop
push
daa
lock
sti
push
fcmovnu
xor
mov
fistpll
aas
pop
fs
jae
mov
cltd
cld
adc
ja
mov
lret
pop
insb
jmp
jle
xlat
sbb
jl
ljmp
push
inc
and
pop
rolb
pop
mov
out
push
and
mov
add
inc
mov
adc
push
mov
lret
xor
in
add
push
test
nop
leave
je
fisubrs
std
stc
pop
jae
jo
lds
cwtl
ss
hlt
jns
pop
or
repz
jns
in
and
rcrl
add
push
int3
or
add
out
movb
pop
inc
inc
test
sbb
cmpsl
fidivrl
ret
push
cmp
rcrl
daa
xlat
xor
mov
jbe
cwtl
mov
negl
mov
jecxz
push
bound
inc
jno
xlat
pop
scas
add
jecxz
xchg
adc
or
pop
andnps
insl
nop
push
add
pop
dec
popa
ret
dec
xchg
and
into
pop
push
pushf
jp
sub
out
pop
jo
push
and
sub
clc
sub
mov
push
xchg
or
jnp
lea
fsubrl
dec
jmp
push
sub
hlt
loopne
inc
cmpsb
add
rorb
add
insb
inc
jno
into
inc
es
es
pop
aam
jmp
scas
mov
jb
loope
mov
mov
ljmp
imul
push
xor
or
mov
sbb
stos
dec
xchg
add
xor
mov
mov
inc
pop
aad
dec
leave
addr16
imul
shl
test
cmp
enter
push
or
outsl
adc
or
lods
jmp
test
jo
shll
xorl
mov
les
ror
scas
or
negl
and
mov
xor
or
jecxz
pusha
inc
stc
adc
xchg
and
aaa
mov
sub
addr16
out
sub
or
cld
rcll
adc
mov
call
js
pushf
rclb
mov
les
es
shlb
inc
xorb
adc
cmpsl
mov
outsb
pop
push
mov
stos
or
xchg
outsb
and
jae
mov
sbb
call
das
popf
fs
xchg
icebp
fnstcw
mov
out
outsb
mov
sarb
subl
fnstenv
stc
adc
xorb
aas
adc
cltd
mov
jne
add
adc
pop
fidivl
inc
cmpsb
sbb
testl
out
push
repz
and
data16
pop
and
repz
or
jno
movsl
push
jmp
jp
push
outsl
lods
cwtl
adc
cmp
xchg
xor
push
js
mov
test
punpckhbw
xchg
hlt
jae
ret
and
stos
inc
scas
push
mov
filds
mov
imul
stos
mov
cmc
ret
sbb
jae
jnp
dec
mov
mov
push
cmpsb
enter
sbb
or
sbb
fwait
in
dec
mov
xorl
jmp
enter
pop
add
inc
jecxz
dec
and
push
out
or
adc
fstps
xchg
imul
xlat
mov
mov
ss
pusha
mov
cmp
dec
aad
jg
dec
das
lods
add
lock
repnz
xchg
inc
clc
adc
mov
das
negl
orl
out
sbb
repnz
pop
nop
and
aad
cmp
aaa
mov
out
icebp
andl
dec
test
xchg
mov
adc
fisttpll
or
imul
sahf
mov
jnp
add
push
fcomps
lods
xor
xchg
test
cld
dec
xchg
dec
cmc
mul
lods
in
ss
orl
icebp
sbb
cwtl
out
push
jne
cmpsl
pusha
or
movb
repnz
cltd
lods
mov
adc
in
mov
js
mov
cld
inc
jecxz
inc
cwtl
int3
or
fmull
loopne
mov
push
adc
adc
xlat
out
jg
cmp
aad
mov
inc
ss
jge
cli
cmp
test
or
cmp
push
clc
mov
lods
outsl
pop
mov
push
cmp
mov
xchg
pop
mov
pusha
imul
jne
jge
xor
jmp
cmp
mov
cmp
jg
les
scas
mov
insl
cmp
pop
aam
or
or
lret
scas
js
cmp
insl
fistpll
mov
xor
icebp
jg
mov
cmc
mov
cs
mov
jo
cmove
pop
jp
shl
push
adc
mov
xchg
pop
xorl
rolb
shrb
mov
push
xorb
pop
cli
pop
xor
push
pushf
aas
and
fsts
inc
jno
shlb
xchg
xchg
mov
in
cmp
pushf
clc
sahf
lahf
icebp
xchg
cmp
insl
jle
xlat
ds
je
int3
cmpsl
xor
sbb
sbb
loope
lods
mov
sahf
sub
aad
or
inc
fcmovnb
xchg
cmpb
ret
add
jno
dec
std
xor
orl
lock
pop
add
pop
cmp
xor
lahf
ss
dec
cmp
xchg
jnp
aas
mov
mov
mov
xorb
fwait
or
add
fcoms
fisttpl
fisubrl
ljmp
ljmp
fsubr
cmp
ret
pop
popa
aaa
fdivrs
dec
dec
fsubr
adc
fstpt
in
inc
add
jp
sti
rolb
outsb
inc
lcall
dec
mov
out
inc
ja
push
cmc
adc
lods
sub
dec
pop
mov
mov
mov
dec
push
inc
lock
and
xchg
shrl
ja
and
pop
cwtl
cmp
dec
imul
lcall
xchg
arpl
mov
aaa
in
or
cmp
stc
mov
add
dec
cwtl
push
ja
int
adc
std
inc
sbb
scas
sub
pop
aaa
sub
hlt
stos
push
test
or
daa
push
cmp
aaa
pop
mov
repnz
fcompl
in
addl
arpl
sub
ljmp
cmp
or
jno
repz
and
inc
mov
add
mov
and
lahf
cmp
mov
pop
pop
dec
ret
cmp
cmp
adc
mov
xorb
sarb
inc
adc
xor
sbb
push
gs
cmc
leave
in
adcl
ret
sbb
push
mov
int3
inc
mov
sahf
pop
cs
fs
dec
or
daa
adc
enter
fisubrl
mov
lods
push
mov
inc
dec
cmp
inc
or
inc
mov
leave
ss
push
push
jge
xchg
jb
xchg
dec
mov
dec
mov
inc
fldl
xchg
and
test
insb
and
faddl
or
xchg
mov
fidivs
push
pop
lret
andb
adc
jbe
mov
cmp
push
cmp
test
xchg
push
adc
or
ja,pn
sarb
jle
push
or
push
mov
cmpsl
sbb
fisubs
lea
ret
lds
or
cmp
and
and
inc
movsb
push
loop
cli
mov
out
ja
push
icebp
rolb
dec
or
into
cmp
adc
cmp
cmp
stos
lret
in
cmp
iret
mov
sbb
insb
mov
out
hlt
loope
ljmp
sbbb
aas
cli
aaa
xor
jb
mov
push
and
cmpsb
aas
test
cmc
repnz
addl
and
sub
cmp
lret
lahf
fidivrs
cmp
loopne
and
rol
inc
or
xchg
mov
pop
sahf
or
push
sbb
mov
vmaxps
cvtps2pd
adc
jl
out
push
jp
ljmp
rclb
add
movsl
ret
test
push
jbe
sub
fadds
js
pop
cmc
sbb
sbb
aam
adc
ret
dec
test
push
sub
add
add
les
mov
cmpsl
cmpsb
mov
data16
add
mov
jbe
adc
sub
mov
xchg
test
inc
jae
add
sbb
testl
mov
push
xchg
int
adc
xchg
loopne
jno
mov
stos
aad
mov
mov
xor
jns
insl
sub
outsl
and
pop
dec
shll
mov
insl
addr16
jp
pop
icebp
popa
int
leave
enter
repz
fwait
das
push
mov
inc
arpl
shlb
add
gs
iret
sbb
popa
adc
out
xchg
xchg
inc
fs
icebp
sbb
popf
jbe
icebp
cmp
sbb
insb
mov
inc
and
in
js
xchg
jbe
es
inc
sbbb
pop
push
mov
or
jge
push
jns
fwait
xchg
aam
popf
cmp
push
mov
roll
lock
rcrb
inc
xchg
xor
mov
scas
ss
jb
cmpsl
aaa
dec
cld
mov
mov
mov
add
insb
mov
add
leave
sahf
jp
cmp
jae
mov
fwait
mov
enter
ds
jns
dec
loope
sub
mulb
shll
or
icebp
sub
mov
out
inc
lret
cmp
dec
mov
mov
sbb
jo
lea
mov
or
pop
lods
or
jle
test
inc
scas
push
fiaddl
cmp
cli
orl
and
and
sub
and
imul
jns
cwtl
fiadds
insb
add
pop
fsubs
pop
inc
cld
nop
mov
dec
jns
cmp
ljmp
flds
adc
shll
sub
cltd
add
and
mov
shrb
lea
push
aad
sub
or
vmread
push
test
bound
lret
adc
pop
jmp
mov
inc
xor
stc
test
jae
inc
fisttpll
cs
and
subl
stc
bound
iret
bound
in
mov
or
loop
inc
jnp
adc
ret
icebp
call
fidivrl
fldt
test
sbb
call
inc
hlt
cmp
aam
jp
call
loope
xlat
mov
bound
adc
jns
fisubrl
pop
loopne
mov
fs
addr16
cli
jno
sub
sbb
and
fmull
mov
jb
repnz
mov
jb
sub
xor
cmp
rcrb
ror
sbb
in
popa
scas
push
repnz
sbb
sub
dec
mov
fyl2xp1
push
push
enter
es
xchg
pop
test
repnz
jl
push
pop
xchg
jnp
loop
loope
in
hlt
inc
jb
mov
pusha
xchg
cmp
in
out
dec
add
andb
pop
int
aad
stos
xor
jnp
push
movsb
jns
out
sahf
xlat
xor
adc
bound
flds
push
xchg
jl
sbb
push
lret
adc
cmp
sbb
loope
and
mov
sarl
mov
inc
outsl
jo
dec
adc
pop
inc
mov
jp
loop
add
xor
xor
jge
sub
fistl
loopne
mov
les
bound
int
adc
xchg
mov
pop
fadds
or
out
mov
push
inc
mov
jne
cmp
cmp
cltd
and
xor
imul
js
xchg
or
jnp
jmp
push
xchg
int
mov
mov
push
xchg
daa
jbe
push
test
sarb
aam
pusha
neg
hlt
pop
cs
jb
add
scas
dec
mov
mov
pop
push
add
mov
adc
inc
and
mov
les
pusha
lods
js
xchg
mov
xchg
mov
in
adc
jne
enter
fcmovnu
imul
adc
or
mov
adc
push
inc
test
gs
lea
imul
inc
mov
jae
jne
mov
mov
gs
fisubl
sub
and
jmp
inc
ret
pushf
lahf
aad
fsub
lahf
and
in
call
jecxz
mov
push
fmul
aas
push
inc
cmp
and
pop
dec
mov
mulb
mov
mov
jle
sub
test
sub
xlat
push
iret
inc
or
or
cld
lcall
fwait
sub
adc
and
adc
jb
sub
jecxz
jb
dec
ret
jge
sub
adc
add
jnp
imul
cmpsb
ret
pop
dec
lahf
clc
jo
repz
pop
sub
xchg
xchg
outsl
cmp
out
icebp
xchg
test
insl
mov
xchg
lcall
int
push
and
std
fxch
enter
lods
xor
insl
test
lods
in
mov
sbb
ds
or
loope
loope
sub
jb
xorb
push
mov
cmp
inc
pop
push
int3
sbb
inc
pop
out
lret
out
or
sub
cmpsl
add
lahf
xor
sbb
dec
dec
filds
jo
stc
dec
inc
leave
std
je
inc
or
lds
mov
xor
sub
data16
push
or
adc
popf
xchg
je
mov
insl
inc
cli
outsl
jl
sub
and
pop
mov
test
push
or
xlat
inc
jecxz
or
loopne
rorl
push
out
fiaddl
jecxz
mov
pop
xchg
adc
mov
ds
pop
xchg
adc
insb
pop
mov
mov
xchg
xor
and
xlat
cmp
mov
dec
fbld
or
jns
sbb
call
xchg
stc
inc
xchg
sbb
xchg
push
mov
fbstp
or
out
jl
push
in
mov
subl
outsl
adc
dec
push
pop
test
dec
mov
test
out
push
aam
jae
push
bound
mov
pop
fnstsw
sbb
aaa
js
sarb
xchg
pop
cmpsb
ret
pop
stos
mov
insb
jnp
cld
mov
mov
into
cmp
inc
es
pop
int
fcmovbe
lret
rol
imul
bound
lcall
mov
sub
sbb
cmc
int3
mov
and
js
cli
jmp
pop
xchg
fdiv
and
pop
cmp
adc
out
cmpsb
sti
dec
mov
jns
leave
int3
adc
xor
add
adc
dec
jne
push
aas
scas
pop
dec
sub
add
sbb
mov
ret
jle
lea
dec
clc
xlat
in
jmp
cmpsl
leave
xor
or
dec
mov
add
mov
pop
movsb
inc
cwtl
sub
lea
ja
sti
movsb
je
mov
mov
addr16
adc
sbb
dec
clc
arpl
ljmp
pushf
or
cmp
sub
stc
adc
enter
push
test
sub
add
addr16
test
jg
mov
shlb
sbb
in
jg
mov
mov
loop
arpl
sbb
pop
test
fmuls
push
sbb
mov
mov
mov
cmpl
jno
pop
pop
and
xlat
inc
das
inc
loop
mulb
adc
push
and
negb
xchg
jae
int3
mov
xchg
cmp
js
test
xchg
test
scas
or
aas
andl
xchg
fsubs
pop
lcall
scas
and
arpl
adc
loop
add
add
clc
or
push
add
xchg
out
push
adc
or
or
cltd
push
outsb
jo
out
and
icebp
loopne
xchg
sub
les
push
mov
and
and
cmp
popa
xlat
test
mov
xchg
xor
lret
pop
mov
pop
mov
inc
movb
cmp
dec
into
cs
repnz
mov
xchg
xor
arpl
iret
insb
dec
ror
outsl
fisttpl
dec
inc
je
shll
inc
or
cmpsb
push
add
adc
lea
fidivrl
jmp
cmpsl
shrl
arpl
out
and
sbb
lock
cmp
in
pop
push
popf
push
xor
add
cmc
mov
pop
xlat
inc
jae
cmpsl
mov
stc
scas
cld
jp
ret
pusha
sub
push
and
cmp
fs
jne
xchg
cmp
sbb
adc
loopne
addr16
push
std
addb
sub
dec
push
mov
adc
pop
xor
pop
nop
das
cmpsl
stos
pop
sub
mov
repz
leave
mov
sahf
adc
bound
or
mov
mov
scas
xchg
fwait
and
jmp
cmc
dec
shr
popl
int3
out
mov
mov
xor
xor
inc
pop
sbb
pop
mov
inc
jo
adc
dec
xor
add
dec
mov
scas
adcb
js
lret
dec
scas
scas
aaa
vmwrite
int
or
sub
mov
pushf
adc
movb
cli
inc
mov
into
sbb
das
jne
aam
mov
lods
pop
fcoms
add
aad
call
jnp
stos
jp
cmp
ds
push
mov
sub
std
push
mov
mov
push
jnp
jb
nop
jnp
add
and
loopne
mov
pop
xchg
stos
adc
into
fsts
lcall
pop
jmp
pop
scas
mov
test
in
lret
mov
xchg
pop
push
daa
sub
mov
sub
int
or
jecxz
imul
std
inc
push
ljmp
add
mov
test
aad
jg
sub
dec
lret
cmc
in
fs
pop
in
dec
add
ret
ss
push
insl
mov
mov
nop
inc
rorb
shrl
pushf
popf
add
dec
iret
imul
addr16
in
cmpsb
call
rcrb
jge
mov
push
sub
in
xchg
ret
or
pop
jmp
gs
mov
push
popf
aad
inc
pushf
clc
mov
dec
xor
mov
xchg
jmp
lret
pop
sbb
sub
and
mov
adc
out
adc
test
add
ffreep
iret
cmp
push
sar
pop
sub
gs
mov
imul
cltd
add
sub
mov
rol
or
pop
and
insb
inc
push
lods
nop
insl
push
lods
mov
mov
shll
jbe
and
fldl
lcall
in
cmc
dec
dec
pop
cwtl
mov
xchg
jmp
sbb
in
adc
daa
push
sbb
xchg
flds
sub
jge
dec
add
insb
aas
mov
add
imul
out
inc
lcall
popf
dec
xchg
add
shl
and
pusha
cmpsl
xchg
add
and
xchg
fmuls
sbb
jns
xchg
xor
jno
rorb
daa
xor
or
test
out
sar
repnz
repnz
or
cli
jp
pop
std
push
popaw
mov
mov
ja
insl
test
add
stos
stos
ret
ret
push
fld
sbb
lret
bound
stc
js
xchg
pop
sub
adc
mov
mov
xchg
dec
mov
or
jp
xor
adc
cmp
sbb
sub
and
orl
add
sub
sbb
pop
out
or
out
nop
lahf
aaa
adc
imul
xor
push
add
ja
rcrl
ds
ss
and
lock
dec
inc
jg
flds
and
mov
cmp
movsb
pop
inc
cmc
movsb
filds
repz
sti
or
cmc
push
add
cmpsl
insb
shl
inc
loope
scas
pop
mov
incb
or
fnstsw
or
push
mov
iret
ljmp
adc
aas
sbb
inc
int3
jp
jmp
pushf
add
insl
dec
mov
dec
int
aad
push
hlt
mov
mov
shlb
jmp
sub
cwtl
xor
mov
mov
xchg
rcrl
fldcw
mov
push
cmc
fmuls
jae
pop
dec
xlat
inc
loope
cwtl
xchg
lods
push
adc
bnd
xchg
loop
movsl
rcrl
mov
push
adc
pop
mov
lods
push
and
fwait
cmc
shlb
lea
js
push
test
or
cld
into
fchs
rcll
out
add
lock
jno
push
mov
shr
pop
mov
pop
xor
sbb
iret
sub
jmp
iret
outsl
mov
mov
jg
or
lret
ret
inc
ret
repnz
loopne
mov
in
hlt
jnp
imul
push
mov
imul
add
je
pop
mov
into
icebp
xlat
scas
dec
divl
lret
xchg
data16
sub
lcall
outsl
xor
movsl
sbb
or
mov
adc
xor
test
fsubrs
fsubl
xchg
sbb
xchg
push
or
jb
and
mov
push
aam
mov
jecxz
int
inc
aas
mov
leave
jnp
hlt
adc
out
repnz
mov
imul
pop
sahf
ficoms
mov
leave
pushf
mov
add
sub
movsl
into
jb
jb
addr16
mov
stc
or
shlb
inc
repnz
xor
xor
cmp
ja
xor
outsl
cmp
lods
fsubl
loopne
sti
and
adc
sbb
sbb
sbb
cmp
xlat
bound
pop
adc
and
cltd
dec
ja
push
js
popf
and
stos
popa
mov
mov
repnz
test
pop
adc
leave
inc
dec
lahf
mov
mov
cs
or
cltd
cmc
pop
rol
xchg
push
xchg
mov
push
push
fwait
and
adc
push
fdiv
push
mov
sbb
mov
scas
insl
ljmp
sbb
lods
push
adc
sub
and
xor
xchg
movsb
fsubrl
insl
pop
jmp
divl
or
sub
inc
mov
scas
xlat
sub
mov
cli
add
je
outsb
mov
dec
or
adc
mov
fld
ss
in
stos
aaa
ja
or
fbld
enter
loop
in
test
sub
call
ret
mov
lret
daa
fs
mov
jbe
ss
dec
clc
aas
lahf
xlat
movsb
inc
mov
lods
movl
mov
es
cwtl
and
sti
add
sub
call
sbb
or
sbb
fs
jae
or
in
sahf
in
adc
jge
fstpt
lcall
inc
mov
lcall
adc
out
pop
imul
push
lret
cmp
jno
decb
mov
lods
shlb
mov
pop
cmpsb
das
call
push
mov
bound
sbb
push
mov
mov
lock
inc
fidivl
push
or
xchg
addr16
rorl
pop
outsl
in
push
stc
push
xchg
gs
and
add
mov
out
mov
stos
cmp
int
scas
adc
cmpsl
pusha
mov
arpl
pop
cmc
stos
gs
xchg
daa
inc
push
orl
jb
cmp
lods
loop
push
repnz
cmp
in
dec
inc
loop
ret
ljmp
sbb
ficompl
fs
xchg
sahf
addl
push
adc
hlt
inc
push
aas
loope
adc
dec
repnz
adc
cltd
push
pop
push
out
xorb
sub
fcoms
sbbl
push
xchg
sub
fsubr
movsb
cmpsl
cltd
popf
popa
test
out
test
stc
and
xor
stos
push
cmp
out
xorb
aas
scas
mov
imul
scas
in
push
push
or
inc
imul
inc
add
call
mov
addr16
adc
mov
fwait
xchg
out
pop
cmpl
and
or
cli
mov
adc
aaa
das
pop
mov
jecxz
stc
xchg
fs
hlt
test
push
popf
aad
push
jp
data16
cmpb
int3
adcl
push
insb
in
dec
roll
jb
pop
js
movsl
xor
das
dec
sbb
cmp
mov
push
or
add
sbb
rol
mov
imul
sbb
scas
dec
into
push
out
mov
mov
cmc
sbb
jle,pt
lods
mov
mov
xor
and
sbb
aaa
lock
jbe
dec
inc
push
int3
repnz
or
pop
sub
and
jnp
cmp
pop
sbb
pop
sbb
mov
mov
jge
lret
imul
in
popf
cmp
jg
ja
dec
fimull
mov
jo
rcrb
mov
push
in
popf
insl
push
pop
dec
and
ja
andb
frstor
enter
mov
ljmp
lock
pop
int
xchg
in
pop
cmc
addr16
push
rcl
xlat
cmpsb
add
dec
cmp
cmpsl
adc
jg
and
cltd
mov
iret
pop
push
js
and
std
and
loop
xchg
out
cwtl
jl
in
stos
xor
mov
fistl
enter
imul
loope
mov
test
movsl
pop
cltd
in
cmp
cmp
jne
rorb
jb
inc
push
dec
or
sbb
nop
imul
pop
jo
lods
fwait
repnz
jl
js,pt
pop
dec
fstps
nop
push
rcl
cmc
rcrl
jg
jno
push
mov
enter
sub
mov
jbe
jecxz
insb
out
fdivrs
into
je
rcl
out
mov
outsl
add
in
das
xorb
fdivrs
sub
les
lcall
mov
cmp
add
or
mov
pop
xchg
out
pop
daa
frstor
dec
andb
push
aam
loope
mov
sub
dec
loope
xchg
in
in
inc
mov
std
xor
adc
andl
or
leave
jle
mov
mov
nop
test
test
and
out
loopne
add
sbb
fidivrl
outsb
cmp
icebp
ret
or
scas
ds
fidivrl
mov
scas
xor
push
xor
or
mov
jmp
je
add
mov
mov
cltd
jmp
les
pop
sbb
mov
add
icebp
mov
fisubrl
xor
add
repz
or
scas
add
gs
mov
xor
inc
sub
cmp
lret
xchg
out
repnz
ror
and
cmp
call
jmp
cmp
cmp
xchg
les
push
out
mov
call
push
add
mov
lods
xchg
out
repz
xchg
or
movsb
jbe
pop
stos
jp
dec
test
aad
aas
sub
sub
inc
or
js
fnsave
or
inc
cmp
out
ret
dec
jb
roll
or
push
das
push
repz
cmp
sbb
and
inc
outsb
scas
cmp
pop
mov
xchg
pop
add
sbb
sbb
or
or
rcr
xchg
fiaddl
jno,pt
jo
cltd
fdivl
popf
icebp
in
add
and
mov
ljmp
xchg
lret
pop
xor
add
hlt
xchg
inc
and
jge
cs
and
push
pop
cwtl
mov
mov
xor
mov
ds
hlt
and
mov
mov
fiaddl
jns
dec
std
add
inc
mov
leave
mov
cmp
add
test
shrl
sub
ds
xchg
push
sbb
int
push
mov
push
sub
jae
lret
and
push
dec
lods
imul
xchg
sarl
jb
adc
adc
cs
addr16
xor
sub
test
enter
rcrb
js
mov
sbb
pop
loope
jmp
ret
andl
js
dec
ficoml
movsl
jnp
cmp
push
jno
mov
or
jl
jne
dec
push
scas
mov
mov
pusha
pop
xchg
std
sbb
xchg
inc
sbb
fs
inc
xlat
xor
js
loopne
into
inc
aas
inc
movsl
add
pop
mov
xor
pop
sub
mov
pop
ret
stos
and
inc
or
push
lret
sub
mov
xchg
mov
push
pop
xchg
mov
mov
xchg
mov
cmc
ja
dec
iret
xor
shlb
pop
cmp
mov
mov
rolb
leave
sbb
inc
stc
movsb
cs
sub
and
jo
mov
jge
push
dec
ret
gs
add
xchg
aad
pop
sbb
imul
jmp
pop
or
es
ljmp
fcmovnu
mov
cmp
lods
mov
test
lods
mov
pop
add
scas
pushf
pop
test
jno
scas
aaa
cmp
adc
imul
fwait
es
mov
enter
jmp
sub
fiadds
lods
and
and
cltd
and
scas
clc
jmp
scas
cmp
jg
pop
outsl
es
iret
aaa
std
dec
inc
and
inc
stos
xor
cmpb
mov
cld
pushf
imul
divl
rcl
mov
popa
mov
test
add
test
sti
pop
dec
mov
icebp
roll
fistps
ja
popa
cmp
or
subb
std
roll
lea
shlb
enter
cmc
iret
call
pusha
and
ds
cld
mov
negb
hlt
aaa
jno
inc
pusha
sbb
pop
movb
dec
int
push
stc
clc
mov
mov
inc
add
ds
cmp
xor
hlt
scas
sahf
or
inc
push
mov
fs
xor
cmp
adc
cmp
or
insb
push
cmc
pushf
push
sub
out
rclb
data16
pushf
mov
and
sbb
jb
stc
add
imul
imul
cmp
jo
pop
out
out
or
cmp
ret
mov
push
mul
call
adc
jle
rcll
mov
mov
mov
lcall
push
adc
popa
mov
and
jmp
ljmp
fidivl
xchg
cmp
daa
dec
in
stc
fstpl
sub
lret
hlt
xorl
mov
jno
xchg
sbb
lock
mov
fs
into
cmp
push
addl
mov
xchg
cmp
insl
test
je
sar
imul
mov
jg
jl
mov
jnp
mov
int
mov
int
sbb
jg
jo
fsubl
dec
jb
sub
ja
lret
outsb
jnp
addb
repnz
mov
cmpsb
cmp
cmc
mov
or
icebp
decb
rcrb
push
iret
inc
loop
jno
aam
adc
std
add
or
xor
fsubrl
loop
mov
mov
aam
adc
sbb
mov
call
jle,pn
or
shrl
lret
je
fcompl
into
stos
insb
cmp
into
out
addr16
sbb
jle
repz
ret
pop
dec
cmc
xchg
subb
out
jmp
out
push
std
mov
sti
mov
dec
sub
lahf
and
jo
in
cmp
cmpsb
pop
scas
je
sbb
out
jo
into
mov
mov
js
cwtl
inc
sub
xor
dec
mov
idivb
inc
mov
xor
xchg
loopne
inc
pop
mov
push
mov
repnz
loopne
les
in
push
cld
cmp
cmp
mov
push
xor
or
dec
push
ret
xlat
sbb
mov
ret
pop
add
or
mov
jmp
es
or
popf
and
scas
dec
fdivs
pop
jns
mov
lret
stos
ret
lcall
pusha
mov
fisubs
iret
jne
das
adc
test
frstor
fadds
lret
adc
dec
mov
fsts
scas
imul
pop
mov
daa
outsl
push
mov
jne
pusha
test
in
js
repz
cmpl
popf
shl
push
jp
sub
sub
jbe
hlt
jo
or
adc
cmpl
xor
mov
sti
shrl
pushf
out
mov
and
mov
cltd
lret
pop
sar
mov
push
xchg
hlt
inc
enter
pop
out
in
pop
cmp
ljmp
das
lods
nop
fsubs
sub
or
pop
pop
mov
adc
cmpsb
xlat
sti
mov
inc
aad
call
insb
adcl
insb
test
fisubrs
mov
mov
jb
and
or
mov
inc
gs
add
ljmp
adc
popf
fsubl
xor
jnp
mov
push
nop
iret
repnz
add
cltd
pop
jg
hlt
sub
xor
insb
xchg
adc
dec
test
jo
mov
data16
lcall
gs
xchg
jno
test
lcall
sub
loope
fisubl
int
push
rcrb
pop
and
dec
inc
dec
adc
pop
or
pusha
lds
mov
dec
mov
pop
aad
pop
mov
or
in
jg
mov
rorb
loope
movsb
dec
inc
add
dec
int3
xor
loop
sub
lcall
popf
push
xor
xchg
jle
ret
addr16
out
jl
stos
outsl
or
pop
mov
jae
bnd
int3
pushf
push
stos
add
cmp
mov
xchg
jmp
call
xor
sbb
or
hlt
add
jp
ret
sbbl
jle
cmp
ljmp
dec
adc
iret
je
adc
adc
adc
gs
push
mov
push
rclb
push
nop
push
sub
test
ss
or
jae
add
adc
xchg
adc
dec
sbb
mov
push
lds
je
aas
and
bound
sbb
dec
data16
cmp
and
dec
test
jp
imul
and
jl
orb
out
cmpsb
ds
mov
ljmp
xchg
fwait
repnz
sbb
xchg
mov
sar
push
xor
lret
and
jl
mov
adc
pop
ss
stos
or
mov
test
mov
shlb
sbb
xchg
daa
dec
xchg
pop
insb
cltd
out
mov
mov
movb
sbbl
test
out
and
jne
in
ds
mov
xchg
xor
xor
mov
bound
imul
sbb
ja
push
dec
cmpsl
nop
cltd
and
or
scas
lods
hlt
movsb
dec
mov
call
hlt
jg
mov
xor
lcall
sub
sti
push
jns
test
jecxz
pop
dec
adc
and
pop
fnstsw
mov
add
stos
xchg
sbb
cmp
push
clc
push
xor
data16
movsb
xchg
and
pop
pop
jne
add
jnp
mov
mov
dec
lock
movb
arpl
movsb
push
xor
loopne
pop
xor
sbb
in
js
cwtl
lahf
mov
sbb
dec
out
adc
mov
lods
mov
and
mov
ret
int
ljmp
xor
lea
lahf
xchg
mov
sub
push
mov
push
push
jae
add
jle
sahf
je
cmc
mov
sub
stos
fidivrl
in
call
in
or
jle
jp
and
push
pop
dec
mov
movsb
fisttps
push
and
clc
xor
cmp
push
mov
sbb
push
and
popf
jecxz
jns
mov
fcmovb
push
mov
sub
test
pop
pushf
int3
mov
pop
ss
aad
sub
mov
sub
ret
dec
add
mov
jecxz
data16
into
mov
idiv
mov
pop
pop
cli
in
push
test
dec
sbb
das
inc
inc
inc
sbb
pop
dec
xchg
add
lods
pop
jge
inc
lods
mov
movsl
jae
out
pop
or
sbb
in
shll
ljmp
and
pop
xor
push
sub
mov
xchg
adcl
mov
aam
fcmovne
jp
jmp
popf
pusha
std
imul
dec
in
loop
fisubrl
fcoml
cmp
shl
xchg
sub
inc
stos
arpl
fwait
jo
dec
pop
lock
ljmp
outsl
xchg
sbb
xor
xor
xor
pop
sar
lods
push
and
inc
push
mov
imul
dec
pop
add
fsubl
test
pop
xlat
pop
xchg
ret
mov
adc
in
sub
xchg
push
ljmp
cmp
sahf
popf
fiadds
fcomi
sub
shrl
mov
sub
shlb
sub
sub
fists
test
push
xchg
in
inc
xor
dec
sub
or
xor
xor
cli
push
and
mov
jno
lds
rcrb
je
push
stc
sub
imul
jmp
into
sbb
outsl
push
lods
xor
std
sub
push
adc
cmpl
push
xchg
push
fildll
add
divl
ds
clc
xor
scas
cmpsl
xchg
stc
lods
mov
fimuls
cmpsb
fisttpll
shrb
or
pop
movsb
test
stc
fs
lret
fwait
adc
call
fistps
sahf
leave
add
cmpsb
jo
loop
inc
pop
fimull
mov
stc
rcrl
jle
arpl
xor
icebp
ss
pop
push
push
aaa
push
cmp
and
inc
sti
pop
aad
inc
test
and
pusha
and
bound
dec
dec
rcl
repz
testl
clc
lods
lret
js
insb
test
adc
jmp
jg
insl
filds
jo
insl
push
fwait
rclb
xor
sub
push
mov
pushl
push
sbb
lret
inc
lret
fwait
mov
fistpll
cli
xor
into
xchg
loop
jge
lods
jnp
and
inc
lret
mov
dec
out
mov
mov
xchg
jge
aam
bound
sbb
rol
aad
xor
fsub
inc
imul
xchg
loope
icebp
push
std
mov
js
pop
and
out
loope
mov
lods
cmc
rcrb
and
cmpb
or
jo
jne
xchg
pop
fldenv
insl
mov
mul
cmpl
xchg
pusha
hlt
or
mov
shl
push
pop
and
popf
xchg
jno
push
and
dec
mov
add
adc
insb
pop
jmp
fnstcw
cmp
adc
out
aas
or
sub
pop
sub
xchg
xlat
jmp
sbb
jns
jne
mov
inc
fucomi
repz
adc
push
inc
jge
mov
lock
jmp
jns
faddl
mov
ret
popa
stos
or
movsl
test
push
add
shrl
pop
jo
sbb
arpl
jl
mov
ds
sub
xchg
and
sti
repz
jne
mov
dec
xchg
mov
insl
jl
mov
notb
or
xor
push
cli
outsl
sbb
popf
and
scas
fiadds
cwtl
lods
xchg
cmp
inc
imul
shlb
mov
adc
lret
push
popa
rcrb
adc
mov
mov
jge
sub
insb
pop
std
pop
aaa
mov
dec
addr16
std
nop
or
arpl
out
sbb
icebp
xor
mov
jns
cltd
mov
and
xor
lea
mov
cltd
nop
es
gs
mov
mov
pop
mov
fists
push
mov
std
and
addb
xchg
sbb
mov
fidivrl
dec
addl
pushf
inc
mov
dec
rcll
xchg
push
add
out
test
xlat
jno
jno
inc
jno
adc
adc
rolb
in
adc
iret
aaa
inc
pop
movsb
and
push
push
aaa
inc
sbb
adc
shrb
in
pop
xlat
call
test
shlb
stos
movsl
jge
iret
adc
and
lret
maskmovq
imull
int3
cmp
ds
push
xor
movsl
cmp
xlat
loope
dec
mov
sub
push
and
inc
xchg
push
xorb
or
xchg
adc
pop
out
inc
out
cs
arpl
xchg
pop
or
popf
shrl
add
xchg
test
hlt
xchg
lahf
xor
cmp
jp
mov
adc
imul
cmc
and
xor
fistl
lea
inc
jbe
sbb
inc
mov
sbb
jnp
cmp
imul
and
cmp
pop
xor
stc
push
jecxz
mov
jbe
mov
and
jge
push
cmp
ljmp
jge
cmc
push
out
pop
or
mov
bound
popf
in
jae
adc
std
sub
mov
sub
aas
push
add
sub
push
scas
sub
mov
and
mov
adc
aas
jne
adc
xor
fldcw
test
sbb
xchg
fnstenv
sbb
jp,pt
xor
xchg
cmpb
xlat
jb
les
dec
xchg
mov
dec
push
add
idivl
xor
call
xor
inc
xor
loope
out
std
cltd
xchg
sbb
mov
sub
test
and
stos
sbb
mov
cmc
out
and
lods
pop
sbb
pop
ljmp
int
sbb
xchg
xlat
sub
mov
push
dec
sub
mov
fbld
aad
push
pop
fnsave
shll
cmp
mov
jg
ljmp
pop
addr16
addr16
jle
push
movl
sarb
jle
sub
sbb
cmc
aad
mov
dec
je
movsb
push
mov
movb
lea
sti
fidivl
ja
shlb
dec
adc
setns
fucomip
pop
xchg
sbb
sti
cmpsl
cltd
insb
mov
test
sbb
std
xor
mov
mov
xchg
xor
call
inc
jp
jmp
sub
sub
sub
pop
jmp
lds
mov
xchg
inc
sub
mov
pop
sahf
js
cwtl
scas
pop
out
add
stc
or
data16
xor
push
adc
shrl
sbb
bnd
shll
or
cltd
or
divb
jnp
ljmp
fldenv
push
xchg
push
pop
cmp
in
sub
cmp
dec
inc
ficoms
les
inc
ss
pop
aad
popa
xor
or
push
sub
in
jmp
add
ljmp
cmp
out
xor
mov
fsubr
out
pop
ret
shlb
repz
test
imul
js
lea
mov
dec
stc
mov
jnp
insb
repz
xchg
hlt
cmp
lea
sub
cmp
add
xchg
call
out
insl
lock
dec
xchg
add
cmp
xchg
fadds
mov
idiv
adc
mov
adc
cmpsb
mov
and
push
daa
adc
inc
mov
jmp
mov
lods
enter
push
add
roll
arpl
out
lods
or
scas
dec
or
pop
jl
push
shr
inc
stos
cmpsb
fcompl
in
xor
push
push
not
mov
xchg
in
stos
pop
jecxz
sbbl
and
push
push
cmc
mov
loope
sub
mov
sub
iret
cmp
sahf
jecxz
mov
pop
sub
or
pop
push
mov
faddl
mov
fwait
aaa
out
jg
stos
lock
cmp
jp
mov
movsl
mov
push
enter
leave
inc
mov
sbb
mov
bound
xchg
push
movsl
daa
mov
out
aad
push
cltd
lds
xchg
dec
stos
sbb
jle
loopne
pushf
and
adc
pop
cmp
mov
add
rorb
hlt
mov
not
sub
inc
lret
in
fwait
sbb
sub
outsl
dec
pop
add
icebp
sub
jg
xor
dec
imul
xor
add
add
inc
mov
xor
rorb
sbb
test
clc
inc
jnp
ds
daa
mov
add
stc
or
pop
push
mov
jp
lods
arpl
loop
testb
mov
push
mov
int
adc
fs
add
mov
mov
add
sbb
aas
out
cmp
xor
movsb
sbb
inc
subb
sbb
push
push
mov
mov
aam
xorb
stc
out
loopne
fldenv
pop
jns
mov
les
xchg
out
mov
mov
push
sarb
out
ss
nop
sbb
test
lret
stos
fmuls
mov
or
fstpl
mov
ret
pushf
mov
jp
pop
xor
xlat
dec
fucomip
xchg
stos
add
dec
in
pop
mov
test
sbb
lahf
cmp
aas
in
mov
cmp
mov
data16
jg
mov
testl
fstpt
ja
adc
inc
aaa
lock
dec
divl
adc
adc
cli
mov
insb
mov
pop
and
stc
mov
jp
les
mov
icebp
scas
iret
mov
push
pop
lods
inc
dec
jge
movsb
mov
mov
call
pop
scas
sar
outsb
ja
cmp
lods
inc
cltd
icebp
sub
pusha
sarl
jmp
mov
rol
jb
or
mov
out
lret
add
jbe
fs
jae
xorl
ret
loop
mov
xchg
push
xor
mov
pusha
push
es
sub
xor
jb
call
mov
repnz
xchg
insl
sub
cli
outsl
lret
pop
lock
mov
movsb
pop
loopne
in
pushf
xor
jbe
mov
aad
inc
aaa
xor
shlb
add
shlb
outsl
xor
xchg
imul
mov
movsb
pop
rclb
sbb
out
fdivrs
mov
fwait
dec
mov
iret
inc
pop
in
insb
enter
aam
pop
nop
clc
inc
cmp
xchg
adc
out
pushf
js
sub
xlat
xor
stc
in
mov
test
xchg
ret
lock
out
mov
xchg
aam
jecxz
cmp
rcll
pop
mov
stc
pop
mov
or
shufps
inc
sbb
add
and
pushf
out
mov
andl
cmp
jns
out
pop
cmc
imulb
aad
mov
jae
jmp
or
iret
cltd
inc
bound
repz
inc
jo
mov
andb
pop
mov
pop
rcll
data16
jl
push
jns
mov
scas
mov
jle
rol
jae
adcb
inc
loopne
mov
insb
daa
loop
out
push
lcall
mov
xchg
mov
mov
jae
jo
pop
xchg
jno
rclb
add
mov
push
imul
fidivs
pop
cld
loope
adc
repnz
cld
add
jnp
adc
js
push
jns
aad
xchg
add
lcall
mov
push
jge
jl
jne
add
enter
stos
sub
enter
jnp
mov
int
sub
jo
push
or
pop
push
cmp
add
push
and
rorb
and
mov
shl
mov
push
ficoml
addr16
or
test
xor
out
push
or
es
hlt
or
pop
andb
js
sbb
loope
xor
add
ror
xor
cmp
outsl
adc
enter
mov
inc
xlat
jnp
fdivrs
jb
jge
ja
or
xchg
jge
xchg
xor
sbb
mov
in
dec
inc
es
stos
xchg
dec
sbb
in
fisubs
scas
jmp
cli
enter
into
sub
mov
xor
lahf
out
arpl
mov
cmpsb
sub
and
test
enter
adc
testl
std
stos
cli
iret
lcall
imulb
jo
popa
popa
je
clc
pushf
mov
pop
pop
addl
cmc
ret
mov
mov
faddl
ss
test
add
mov
addl
stos
out
mov
sahf
fldenv
into
push
mov
push
addl
out
js
and
daa
insl
mov
xor
push
push
push
fbstp
sbb
pop
enter
cmpsl
outsb
ljmp
out
push
xor
outsb
push
sar
mov
sbb
adc
adc
fiadds
test
mov
movsb
stos
fsubrs
pushf
scas
cmc
and
jmp
sub
aas
outsl
xchg
insb
xor
sbb
add
leave
jae
fisttpl
cmp
cltd
push
add
jae
cs
in
sbb
push
adc
repnz
int
mov
enter
cmp
aad
sub
popf
test
lret
imul
adc
in
xor
jg
adc
scas
sbb
or
sbb
jbe
mov
dec
pop
push
in
clc
outsb
inc
jne
add
jnp
out
dec
lret
xor
ds
jnp
test
ljmp
add
xor
rcrl
rorl
mov
inc
hlt
enter
fiaddl
test
sub
xor
outsl
xchg
cmpb
pop
jle
and
mov
movsb
jmp
adc
mov
and
sbb
inc
lret
lea
test
jmp
add
cmp
int3
scas
loopne
and
lods
test
dec
bound
out
fnstcw
scas
fcomps
mov
or
stos
mov
and
loope
push
popa
notb
pop
sbb
cmp
fcmovb
sub
not
mov
mov
jns
pop
bound
cwtl
clc
into
dec
sub
rcll
nop
jl
notb
aas
inc
out
lds
fsubs
orl
xchg
les
insl
dec
and
mov
mov
inc
or
sbb
scas
pop
jle
in
fnstsw
xlat
sbb
mov
dec
fsubrl
fwait
clc
jbe
or
jns
das
xchg
les
cmp
into
mov
mov
je
mov
loopne
push
add
stos
out
dec
movsb
and
iret
push
jle
std
mov
xchg
xchg
sub
mov
push
aam
es
sahf
lock
es
xchg
add
mov
cmp
shll
inc
sub
dec
xor
push
xor
xor
mov
dec
or
mov
and
in
fstpl
sub
movsb
sub
jmp
shl
lds
sub
adcl
jae
es
jp
in
push
xor
out
into
mov
mov
lcall
insl
add
jmp
mov
dec
popa
mov
cmp
aaa
adc
rolb
test
adc
imul
inc
or
jp
xchg
cmp
jl
pop
and
inc
push
mov
ja
sbb
fstl
fists
mov
xchg
loop
aaa
inc
mov
ljmp
lock
dec
pop
or
cltd
in
outsl
dec
js
enter
imulb
daa
hlt
stc
fcmovnb
hlt
dec
cwtl
int
pop
mov
sbb
divb
mov
lahf
mov
scas
scas
icebp
and
push
mov
push
fmuls
addb
stc
cli
fwait
cs
addr16
js
stc
sarl
adc
cmp
test
notl
outsl
loopne
mov
xchg
mov
xlat
mov
xchg
sub
pop
dec
sahf
loopne
clc
or
mov
add
jg
push
lods
inc
lret
leave
add
es
call
aas
pop
dec
pop
cmp
pop
inc
jp
mov
adc
jmp
scas
pop
repz
mov
cmpsl
mov
stos
add
incl
inc
add
push
arpl
into
inc
shrl
mov
int
popf
scas
movsl
jge
int3
xchg
roll
mov
js
jns
sar
jae
xor
pop
fcomps
push
shrl
hlt
call
pop
fimuls
pop
mov
movsb
repnz
lds
arpl
movl
jns
xor
icebp
jb
jae
out
ss
out
pop
cmp
ret
xchg
push
cmp
mov
sub
inc
cmpsb
movsl
in
push
int3
test
rorb
aaa
adc
dec
and
sarl
nop
cmp
adc
xor
sqrtps
xlat
int3
jg
in
sbb
call
addr16
std
outsb
out
adc
mov
inc
sbb
and
xchg
imul
jne
dec
rcll
out
jno
dec
xchg
out
pop
cmp
mov
jecxz
xchg
bound
nop
cmp
sbb
push
xchg
xorl
mov
inc
and
jo
inc
xor
mov
dec
and
mov
push
es
pop
inc
clc
out
mov
xchg
pop
cli
out
adc
aaa
outsl
mov
aam
inc
push
cwtl
pop
inc
jecxz
xchg
cmpsl
cmp
lock
enter
inc
dec
dec
scas
call
jno
out
in
pop
outsb
sub
xchg
jl
enter
and
ret
mov
cmpsb
int3
pusha
mov
mov
rcr
mov
jl
enter
sbb
loopne
cli
sub
loop
and
std
into
sbb
out
lds
xor
into
jbe
repz
notb
lods
popa
cwtl
dec
arpl
cmpsl
pop
in
stos
sbb
loop
dec
and
dec
or
pop
repnz
adc
cmc
fwait
pop
leave
dec
es
in
sbbl
shl
out
and
push
mov
mov
sbb
ljmp
xor
scas
callw
sub
mov
icebp
mov
push
lea
xchg
adc
adcl
lea
divb
adcb
jle
xchg
je
aas
jmp
lods
push
jmp
mov
rorl
out
cmpsb
sbb
lods
mov
clc
outsl
xorl
mov
or
jp
sbb
mov
xor
icebp
cmp
xchg
xchg
clc
imul
sahf
sbb
mov
mov
int3
rolb
adc
test
insb
data16
out
adc
mov
cs
aad
orb
or
add
cmp
push
mov
rol
mov
dec
popf
sti
addr16
xchg
jne
std
ret
pop
stos
aam
cltd
sbb
and
rol
pop
fbstp
jb
adc
add
insl
dec
mov
push
rorb
mov
xor
and
imul
mov
andnps
push
and
bound
mov
jg
js
xor
loop
pop
add
js
mov
push
fnstsw
andl
dec
loopne
testb
cmpsl
std
mov
aaa
jae,pt
xor
test
fs
push
jg
push
ret
inc
mov
dec
mov
or
lcall
jmp
fidivrs
imul
andb
orl
rcrb
sbb
sub
rclb
mov
cmp
adc
mov
sbbb
and
or
jae
pop
push
pop
pop
pusha
fldl
int3
cli
bound
cmpsl
ja
xchg
and
lahf
ja
mov
mov
mov
jg
push
xor
jno
out
pop
mov
into
push
inc
pop
inc
add
lcall
ss
test
mov
cmc
push
adc
dec
xchg
enter
xchg
repnz
inc
cmp
int
cmp
clc
rorl
pop
in
pop
push
inc
test
inc
clc
fstpt
fdivrs
es
test
pop
stos
nop
mov
nop
ret
shll
arpl
jle
mov
pop
mulb
imul
sub
shll
mov
pop
or
inc
or
dec
adc
pop
scas
out
push
lds
mov
mov
and
into
enter
cmp
jne
out
lock
repz
xchg
sbb
xchg
inc
dec
mov
fisubrl
pxor
movsl
dec
sbb
mov
mov
mov
add
je
cmpsl
out
xlat
cmp
cli
das
aas
inc
or
sahf
mov
push
mov
mov
mov
adc
lea
sar
out
ficomps
mov
mov
or
pop
cmp
scas
add
mov
and
jmp
fistps
mov
cmpsl
dec
daa
sbb
xchg
pop
mov
xchg
icebp
insl
dec
mov
pusha
push
add
mov
pop
rorb
dec
push
and
das
lods
in
pop
outsb
mov
decl
mov
lea
out
mov
rclb
mov
and
jmp
cmp
movsb
xlat
pop
rorb
ds
lock
adc
mov
stos
mov
fimuls
lcall
in
dec
scas
xor
shll
push
fcomps
push
enter
adc
mov
into
shl
data16
cwtl
adc
mov
cmp
and
push
cli
js
mov
dec
xchg
rcll
jns
adc
push
cltd
add
push
mov
jns
xlat
xchg
lea
sbb
dec
popa
stc
or
mov
mov
pop
mov
cmpsl
jo
sub
and
lods
push
cmp
gs
xor
jbe
sahf
dec
mov
call
pop
or
mov
fadd
adc
aad
push
inc
xor
and
enter
sbb
sub
push
cmc
jo
mov
pop
mov
cld
pop
out
cmc
dec
loop
into
adc
inc
push
add
insb
jg
xchg
push
test
push
or
sub
pop
hlt
imul
adc
aaa
popf
push
test
aas
loopne
lret
testl
jne
loope
daa
ret
loop
ljmp
cmpb
mov
lea
push
and
hlt
imul
out
test
inc
sahf
jg
pop
adc
cmp
pop
dec
outsl
push
mov
sbb
inc
push
outsl
movsb
loope
and
div
push
or
addr16
fimull
mull
std
andl
cli
arpl
subb
es
iret
sbb
ljmp
inc
dec
fdivl
pop
sub
sub
subl
pop
sbb
jl
in
add
mov
jmp
mov
leave
imul
inc
xchg
mov
fdivrl
sbb
fsubs
aam
mov
jb
mov
cmpsb
xlat
jo
fwait
lods
mov
or
inc
cmp
pop
test
es
jg
jle
fwait
test
test
repz
test
sub
dec
cmpsb
jp
imul
movsl
xchg
add
xchg
mov
pop
jecxz
push
mov
dec
rep
cli
lea
mov
cmp
mov
mov
sahf
aam
movsb
rcll
and
mov
hlt
cmpsb
std
lahf
or
fdivrl
cld
mov
pop
or
scas
xor
ja
push
pop
std
aaa
sti
ja
and
in
js
pop
pushf
int
and
pcmpgtb
xchg
sbb
pop
mov
jle
jo
push
adc
into
cmp
and
fucom
mov
rclb
in
imul
xchg
mov
add
mov
adc
clc
dec
ljmp
repz
cmp
movsb
mov
jp
arpl
loope
push
cld
sub
dec
or
fs
dec
push
jbe
shll
or
dec
mov
call
stos
jl
push
ds
dec
int3
xor
and
mov
xor
dec
sbb
or
xchg
test
aaa
cwtl
insl
sbb
mov
roll
scas
dec
mov
pop
mov
push
test
mov
repnz
loop
rol
mov
aaa
push
xchg
loop
iret
test
inc
out
fwait
out
and
mov
dec
int3
xor
xor
fnsave
mov
inc
xchg
push
mov
cmpsb
iret
sar
xor
cmp
pop
sbb
das
push
lds
pop
sub
aaa
cmp
add
movsb
loop
scas
lock
sub
sbb
xrelease
notb
jg
push
sub
add
push
lcall
adc
inc
addr16
bound
sub
sbb
incb
cltd
cli
or
mov
mov
sarb
imul
push
enter
pop
out
shlb
mov
cli
lock
lret
inc
and
imul
push
xchg
push
in
shl
sbb
pop
das
daa
push
push
roll
mov
mov
dec
pop
shlb
out
int3
sub
inc
cld
inc
hlt
xor
cmc
call
mov
pop
mov
mov
lods
and
es
clc
dec
movsb
sbb
je
push
cmp
sbb
jg
repz
xchg
out
movd
adc
jl
add
and
ret
xlat
push
mov
pop
mov
sub
lea
xchg
dec
les
inc
jnp
cli
rcr
pop
sub
clc
js
repz
pop
icebp
cmp
add
cmc
pop
push
addr16
sub
fcoms
cmp
setnp
cmp
imul
jge
int3
das
loope
or
lcall
sti
add
sub
out
pop
xor
push
pop
fildll
scas
ja
lret
sub
cmp
aad
rcl
cmpb
dec
in
ljmp
mov
into
jmp
or
xchg
and
pushf
sbb
add
in
push
push
imulb
ljmp
jmp
or
cmp
int
inc
inc
gs
into
pop
mov
push
lds
jg
push
clc
sbb
data16
jge
add
xor
push
push
or
add
popa
jae
xchg
jbe
pop
gs
mov
cli
test
push
sbb
inc
out
push
mov
adc
nop
cmpsl
out
xchg
dec
movsl
xchg
pop
mov
cmp
sahf
cmc
aaa
shlb
shr
push
shll
call
push
cld
or
sbb
add
fdivp
xchg
movsl
popa
fs
dec
sub
push
xor
pop
inc
insb
int
mov
cltd
pop
cmp
leave
sub
movsb
or
dec
xchg
jmp
out
mov
jmp
sbb
repz
dec
pop
scas
pushf
cmpsb
add
int
xchg
int3
xchg
push
mov
loope
mov
adc
fwait
imul
cmp
ror
iret
dec
xchg
jl
adc
pop
adc
xor
push
push
sbb
pop
ret
fs
insb
andb
je
inc
xor
dec
inc
in
jmp
cmp
fdivs
mov
jne
ja
insl
dec
enter
inc
fldenv
and
xchg
push
pop
dec
faddl
pop
sub
mov
int3
pop
mov
imul
out
xchg
test
or
outsl
xchg
cs
ss
inc
mov
movsl
lock
sbbb
es
mov
fiaddl
mov
jge
pop
mov
or
into
cmp
mov
dec
adc
nop
jbe
xor
das
jne
subl
fcoms
mov
pop
idivl
iret
repz
icebp
adc
jle
mull
ret
insl
adc
jb
adc
fs
or
data16
and
and
sub
jp
insb
mov
arpl
stos
inc
push
imul
mov
mov
loop
mov
push
js
and
out
leave
xlat
jge
int3
fdivl
sbb
fcoml
loopne
fdivs
je
xchg
pop
iret
push
fs
stos
cmpsl
inc
xchg
and
stos
aad
cmp
call
outsl
and
ss
mov
jg
arpl
push
movsb
loop
sub
mov
into
jg
jp
cld
loope
pop
lahf
rcll
adc
adc
cmc
mov
neg
leave
xor
sti
divl
das
imul
mov
aas
orb
mov
ficomps
xchg
cld
das
sti
roll
adc
stc
cmpsb
dec
in
ds
sbb
or
adc
xor
add
jmp
add
notb
popa
mov
mov
adc
sub
push
or
arpl
mov
pop
jle
pop
jge
in
jnp
push
sbb
adc
jbe
dec
inc
mov
cmpsl
sahf
sbb
jae
sbb
pop
pop
loope
jno
add
xchg
jg
ljmp
cmp
xor
rclb
pop
aaa
fimull
lret
pusha
mov
aad
outsl
mov
rol
cld
lock
adc
add
repz
lcall
nop
repnz
addr16
push
mov
adc
cli
sub
jge
std
sbb
es
mov
pop
aad
out
pop
pop
mov
addr16
cld
fidivrs
lds
mov
xchg
xor
sbb
xchg
fistpll
pinsrw
dec
pop
push
xchg
mov
std
push
aaa
scas
pop
xor
pop
test
inc
mov
mov
mov
fs
lock
push
jmp
adc
push
icebp
xor
aas
movsb
and
push
push
cmpsl
inc
test
mov
insb
pop
lahf
fisttpll
jb
clc
dec
dec
lds
addr16
pop
pop
loopne
cltd
jg
popf
pop
mov
out
fmuls
xchg
pop
addr16
adc
lahf
xchg
cltd
mov
rorl
orb
mov
sbb
cli
xchg
rorl
mov
dec
pop
add
sub
js
mov
cli
jno
pushf
push
cltd
sbb
adcb
imul
xor
lahf
sub
cmpsl
test
lock
cli
fwait
vmwrite
fisubl
or
out
in
jecxz
hlt
popa
mov
nop
mov
push
repnz
sub
in
subb
iret
das
lods
push
lock
test
ds
orb
mov
fldenv
bsf
arpl
push
sub
shll
push
iret
mov
push
dec
fbld
in
jno
and
mov
pusha
or
xor
jno
mov
jb
pop
test
jle
mov
loop
jo
addr16
repz
dec
leave
mov
mov
shlb
sbb
and
cmpsl
in
adc
xor
sbb
pop
out
xor
mov
sub
filds
mov
push
fwait
dec
jo
lods
adc
and
xchg
ljmp
jns
sbb
jns
xor
mov
or
pushw
int3
leave
cld
or
into
mul
jg
mov
loop
loopne
ds
mov
cltd
mov
push
sub
cmp
sbb
and
into
ret
fwait
xchg
mov
push
rorb
add
insl
cwtl
cmp
out
and
mov
sbb
mov
in
push
jae
pop
fmuls
add
mov
sub
adc
sahf
mov
out
push
test
pusha
xor
sbb
sarl
les
mov
lods
dec
jo
add
imul
sti
pop
xor
rcpps
dec
mov
adcl
movsl
cmp
pusha
loopne
add
dec
sub
push
movsl
mov
push
add
mov
mov
mov
mov
sbb
inc
lea
cwtl
es
cmpsl
jge
rol
int3
out
jl
mov
out
mov
loopne
sahf
lcall
xchg
rcll
ss
mov
sbb
jg
mul
cmp
add
dec
xchg
and
sti
mov
imul
cmp
jo
sub
mov
aad
jne
adc
mov
movsb
jns
cmp
mov
jnp
std
inc
ss
test
add
mov
push
add
mov
enter
cmp
pop
mov
mov
pop
push
in
jnp
inc
cmp
sahf
add
xchg
fs
aad
sarl
es
and
idiv
pop
cmpsb
pop
fs
iret
addb
lret
insl
or
cmp
das
or
xorb
sub
cld
fldt
lcall
sub
mov
lcall
cltd
repz
jp
mov
mov
mov
or
clc
insb
pushf
test
jecxz
ss
test
mov
sub
mov
dec
xorl
xlat
ret
jle
push
mov
dec
div
adc
lahf
adc
shl
pop
cmp
test
ds
push
mov
add
pusha
xor
ss
mov
pop
pop
push
cwtl
mov
scas
movsl
pop
dec
ja
mov
and
push
je
fwait
jge
andl
lea
pop
iret
fadd
mov
mov
jnp
out
in
cmp
mov
dec
test
jle
jg
pop
stc
adc
out
pop
fstl
push
js
pop
sub
arpl
push
das
push
mov
lock
cmpsl
lcall
mov
daa
mov
sub
inc
mov
mov
inc
jno
mov
pop
or
xor
fidivrl
arpl
sbb
push
dec
xlat
mov
fucomip
imul
movsb
dec
loopne
mov
pop
xor
mov
sbb
out
lahf
aaa
test
in
jmp
xor
ja
dec
insl
repnz
jno
out
ss
push
pop
cwtl
adc
mov
sbb
and
fidivs
xlat
sahf
jle
scas
aam
push
movsl
dec
fsub
push
adc
xor
lret
lock
insl
xor
mov
add
jbe
sti
aas
cmc
stos
sub
rorb
xor
mov
cmpsb
adc
scas
int
push
in
cli
out
jnp
push
inc
sbb
mov
popf
mov
mov
addl
mov
orb
inc
sub
push
push
inc
stc
push
ret
clc
pop
neg
mov
clc
pop
aaa
cs
mov
dec
and
shrl
inc
shlb
js
add
inc
add
mov
jmp
xlat
daa
into
inc
lods
push
mov
ret
das
mov
jecxz
push
scas
data16
cmp
out
sbb
in
cmpsl
inc
test
aaa
hlt
in
inc
mov
jae
add
test
stos
cltd
mov
jnp
xchg
lock
icebp
xchg
sub
out
stos
ss
xor
cmc
sti
sbb
mov
mov
jns
xchg
lock
dec
bound
nop
push
push
and
shlb
sbb
fisttpl
mull
test
pop
es
lea
je
repz
mov
loopne
pop
loop
or
ja
mov
mov
scas
lcall
jp
dec
sub
fstpl
outsb
cmp
pushf
aaa
cmp
out
iret
out
mov
orb
stos
cmp
rep
lcall
test
sbb
dec
cmpsw
pop
jne
scas
movsl
fists
or
std
cli
add
add
xchg
adc
mov
out
sbb
xor
mov
ja
je
push
jo
adc
xor
mov
or
cmp
dec
jb
sbb
add
in
or
and
and
je
testb
pop
repz
stc
mov
xor
int
mov
inc
jo
js
push
int3
iret
jae
cmc
lock
xchg
loopne
lods
xchg
stos
dec
mov
shl
jb
fstpt
jge
loop
add
int3
fcoms
cmpsl
mov
mov
je
cmp
push
sub
mov
cmp
roll
into
subb
sbb
mov
xchg
and
fiaddl
pusha
les
jae
jb
in
sub
cmp
idivb
mov
and
shlb
xchg
mov
iret
jge
dec
call
loope
mov
fistps
lock
lcall
rolb
das
adc
imul
lods
hlt
add
addr16
loopne
jno
enter
ja
jnp
add
sahf
insl
fstl
loopne
das
pop
mov
aas
insb
fs
jmp
sbbl
inc
loop
jmp
nop
out
bound
mov
lret
dec
imull
xor
sub
mov
fsts
and
sbb
push
jmp
dec
push
outsl
cmpsb
mov
jne
scas
cmp
cmp
in
ja
cmp
push
inc
fidivrs
ss
mov
mov
lret
les
imul
fwait
and
push
cmp
adc
mov
test
insb
jns
add
and
mov
or
xor
mov
mov
out
ss
jle
lret
andb
xchg
dec
outsb
outsl
scas
fstp
pop
push
pop
push
or
mov
mov
test
gs
shlb
out
or
and
jp
mov
mov
in
aaa
push
hlt
test
dec
bound
add
sbb
mov
push
push
out
push
sub
dec
les
lret
loope
cmp
cmc
sub
cmp
stc
lret
sbb
and
mov
lahf
pop
mov
cmpl
sti
pop
pushf
sub
rclb
sub
cli
mov
push
hlt
call
jns
xchg
xchg
arpl
xchg
mov
js
jg
add
jl
sub
repz
jmp
aaa
mov
mov
sarl
stos
cmpsb
adc
addr16
mov
sbb
ret
and
andb
mov
loop
lret
mov
stos
jno
push
mov
add
mov
cmp
roll
aaa
push
out
cltd
std
cmp
je
sbb
arpl
stos
xchg
jp
les
aas
dec
fdivs
and
outsb
inc
in
lods
dec
mov
out
stc
push
stos
pop
sbb
repnz
es
insb
scas
pop
std
call
mov
push
imul
mov
xchg
js
negl
sbb
xorb
or
cli
mov
sbb
add
xchg
sbb
sub
sbb
jo
or
jnp
repnz
bsr
frstor
or
jnp
push
xor
lods
scas
sub
xchg
sahf
mov
out
mov
jae
ds
jbe
ret
in
lret
lds
xor
dec
inc
stos
imul
add
dec
adcb
mov
dec
shl
rcrl
mov
lcall
xchg
pavgb
add
les
cmpsb
adc
orb
sbb
fsubs
jg
mov
adc
sti
lds
in
out
sbb
pop
mov
lds
inc
mov
xchg
ljmp
je
push
and
dec
or
sub
sbb
dec
and
mov
mov
cmpsb
rorl
mov
in
mov
pushf
and
xchg
xchg
fs
xchg
lods
fdivs
cmp
lea
jle
dec
mov
mov
ja
jle
add
push
out
std
or
cmp
test
enter
movsb
aaa
loop
mov
sahf
push
shrb
xor
mov
repz
mov
sahf
pop
dec
aaa
shl
ffreep
push
std
mov
push
cmp
cltd
cli
cmp
jo
cmp
mov
pop
sbb
out
fsubr
or
push
or
movsl
mov
dec
push
pushf
cmp
xchg
out
push
jp
mov
add
push
push
rcl
gs
xor
push
mov
imulb
xor
xchg
pop
icebp
pop
xor
js
xchg
xchg
mov
stos
stos
push
subb
xchg
fmull
arpl
leave
ljmp
pushf
mov
push
mulb
xchg
lcall
imulb
xor
scas
mov
ret
or
lods
in
dec
movsl
stos
je
mov
inc
out
sub
ss
xchg
pop
and
cmp
mov
xor
pop
lds
xchg
adc
add
scas
jmp
sub
test
lock
dec
icebp
fidivs
shr
mov
clc
leave
pop
lea
out
out
push
mov
adc
push
mov
icebp
pop
mov
daa
repz
and
cmp
sti
jmp
test
aad
es
lea
and
in
out
push
cmp
aas
sti
jb
das
mov
cmp
dec
clc
leave
xchg
shl
fucomi
sub
mov
imul
push
popf
insb
xlat
push
insb
cli
leave
mov
push
in
out
push
scas
loopne
push
test
fdivrs
adc
xchg
sbb
push
mov
cmp
add
pop
push
ds
sbb
sub
pop
sub
mov
mov
sub
cmp
out
mov
push
rcr
fstpl
inc
inc
dec
xchg
mov
jecxz
or
xchg
sbb
xor
mov
mov
add
pop
adc
and
in
lods
cmc
cmp
cwtl
popa
enter
cmp
daa
pop
sub
icebp
add
popa
mov
mov
add
adc
aam
fimull
xchg
inc
stc
mov
mov
pop
sar
push
mov
shll
mov
cmp
mov
test
jno
ds
in
pop
in
dec
jmp
test
sahf
inc
iret
lret
dec
mov
mov
cmp
and
adcl
out
inc
loopne
cmc
pop
xor
push
push
out
test
insl
lret
stos
rorb
add
fmuls
sub
rolb
call
out
sub
leave
mov
es
sub
aas
popa
inc
imull
sub
loope
mov
cmp
cmp
lea
inc
loop
fldt
ds
jns
insl
sub
in
lret
xor
clc
sbbb
sub
call
adc
mov
dec
cmpsb
sbb
and
inc
stc
mov
adc
push
mov
out
jne
lds
idivb
cmpsl
test
xlat
or
enter
fsubl
push
pop
mov
push
sub
push
and
lods
jecxz
sti
pop
andl
sub
pop
xor
mov
fisubrl
leave
sub
std
ret
cmc
lahf
insl
pop
mov
ror
push
xor
xchg
aam
xchg
mov
inc
out
push
adc
pop
pop
jne
leave
and
or
cmpsb
mov
les
cli
lods
inc
adc
int3
xlat
insb
inc
sub
jge
sub
inc
popa
insb
dec
lret
in
add
push
cmp
or
stc
and
inc
adc
dec
sub
or
ret
or
dec
ret
or
loopne
or
mov
jl
shrl
imul
inc
mov
leave
or
mov
ds
dec
in
enter
jae
out
stc
inc
sahf
jecxz
movsb
pop
lods
xchg
mov
mov
mov
push
add
in
xor
cmpsb
leave
mov
inc
lahf
mov
stc
inc
je
xchg
mov
sub
pop
fcomps
xor
call
pop
sub
xchg
pop
jg
sti
pop
mov
jp
repz
clc
mov
fmul
lods
scas
add
xchg
xchg
pop
mov
mov
lret
roll
mov
ds
popa
jbe
mov
xchg
cmp
push
mov
mov
sbb
mov
lods
out
sbb
push
mov
pushf
inc
lahf
arpl
pop
mov
sarl
int3
cmp
pop
push
stos
fucom
test
jno
daa
cltd
or
jp
jp
fstp
add
mov
divb
xchg
pop
push
or
or
nop
mov
pop
xchg
shlb
or
sbb
lds
mov
xchg
and
js
jmp
adcl
ljmp
lods
addr16
or
cmpsl
adc
pushf
insl
sbb
popl
sti
sub
aam
rorb
imul
mov
popf
cmpsl
out
mov
mov
fwait
sbb
notb
fisubl
jo
rcrl
jns
jg
rolb
mov
pop
mov
jp
sbb
cld
gs
insb
add
inc
sti
gs
sub
mov
testb
adc
sahf
cld
dec
jl
mov
cmp
and
jns
dec
lret
dec
sti
push
cmp
sub
adc
add
into
lret
push
xchg
lods
adc
mov
idivl
push
rclb
cmpsl
sub
les
sbb
scas
pop
orb
pop
leave
cmp
popa
cmpsl
push
xchg
xor
dec
push
mov
in
sarb
ja
sub
fcmovnu
jp,pn
or
loope
ljmp
dec
jp
adc
arpl
xor
sbb
fisttps
sbb
jl
xchg
jb
aaa
scas
mov
mov
cmpsb
movsb
xor
out
sbb
mov
dec
scas
inc
ret
and
and
xchg
push
xor
dec
shl
mov
sub
loope
in
popa
mov
stc
mov
pop
mov
adc
lcall
jecxz
mov
adc
add
in
cmp
inc
shll
jno
inc
pusha
xchg
adc
movq
rdpmc
or
and
out
dec
lock
adc
in
call
out
pop
cmp
daa
mov
scas
in
push
mov
xchg
inc
or
jmp
xor
decl
xchg
mov
jg
psubb
aas
cmp
xchg
xor
pop
data16
int
and
cltd
mov
int
add
push
dec
push
xor
outsl
mov
add
mov
push
inc
js
cmpsl
jae
pop
es
arpl
xor
jle
in
jns
adcl
cmp
jne
inc
adc
ret
repz
add
and
mov
mov
inc
xchg
rorl
les
jg
aad
jns
xor
xchg
adc
jp
in
cmc
stos
imul
mov
pop
sti
pop
mov
movsb
mov
fbstp
inc
fimull
inc
fcomip
aad
xchg
add
add
jecxz
pop
inc
mov
cmpsb
cltd
jno
pusha
jg
push
jno
stos
cmpsb
outsb
inc
aaa
mov
aad
cmp
mov
roll
xchg
push
mov
popa
mov
push
in
mov
fnstsw
pop
arpl
arpl
lahf
loopne
popl
pop
mov
test
push
int3
icebp
aaa
mov
mov
sbb
jmp
sbb
lret
jae
clc
jle
adc
pop
adc
scas
jnp
jbe
xor
inc
push
inc
gs
cli
pop
mov
xor
xchg
test
scas
aaa
cmc
out
jbe
leave
cwtl
xchg
cmp
lods
jmp
pop
and
pop
cmp
outsb
jno
xchg
fnstcw
pop
fdivs
fsubrs
gs
pop
xchg
cmp
sub
push
dec
and
aad
xor
stc
inc
sbb
xor
jno
add
xor
mov
in
bound
cli
or
mov
mov
xchg
xlat
add
cmpsb
fmulp
test
mov
into
xchg
add
and
sub
fs
fmull
xor
call
sub
nop
gs
jno
scas
jecxz
mov
inc
mov
icebp
in
lret
cmp
push
ds
aam
or
outsl
loopne
xchg
add
mov
jnp
int3
jo
add
cmp
jnp
icebp
mov
mov
sub
pop
and
stos
out
outsb
sbb
loop
mov
out
int
lahf
je
inc
inc
pop
loope
xchg
mov
jno
movsl
push
or
ffreep
add
in
xor
pop
fsts
iret
repz
int
sbbl
aaa
adc
mov
dec
popa
dec
sbbl
repnz
and
sbb
inc
adc
push
mov
pop
dec
test
lret
or
mov
jmp
jmp
gs
inc
stos
gs
adc
ret
push
cmpsl
jle
insl
mov
shrl
stos
cld
or
fidivl
sbb
xor
push
jns
inc
pop
jno
jge
jns
in
repz
out
cmp
into
scas
xchg
stos
ret
xchg
jg
out
cmp
jge
cmp
sbb
push
jae
mov
orl
pop
push
add
shll
aam
aam
jmp
push
adcb
lock
dec
mov
outsb
push
into
fisttpll
xor
out
or
cmp
cmp
dec
sbb
stos
and
xchg
sub
dec
push
mov
mov
daa
ficompl
add
rolb
in
test
fdivl
and
pop
ret
mov
cmovno
insl
sub
iret
fmull
cmp
adc
sbb
dec
je
int
cwtl
cld
inc
stc
push
pop
pop
pop
cmp
add
cmpsb
mov
xchg
inc
sbb
fcompl
and
mov
icebp
outsl
push
fwait
dec
ss
repz
fisttpl
int
pushf
pusha
xchg
push
std
ss
inc
adc
mov
fistps
pop
jo
cltd
pop
mov
adc
enter
jns
flds
sti
jg
lret
daa
jnp
lock
xchg
lahf
pop
jle
inc
jg
test
add
dec
sub
call
push
jl
pop
imul
sub
and
ret
das
sub
jnp,pn
insl
pop
dec
push
sbb
sub
mov
jl
xchg
push
jae
sub
xchg
in
and
mov
jno
setle
mov
dec
or
mov
ret
cmp
adc
pop
mov
das
push
mov
pop
loop
sbb
mov
fwait
movsb
dec
inc
xor
stos
cmp
ds
push
aaa
or
sbb
add
in
loop
xlat
inc
lea
sbb
aad
mov
iret
loope
xorl
mov
in
cmp
dec
sbb
xchg
lret
data16
insl
inc
pushf
pop
jb
pop
mov
xor
and
jg
repz
scas
xor
clc
xchg
push
add
leave
jno
adcb
and
jns
adc
pop
popf
in
pop
jae
lcall
loopne
dec
mov
cld
sub
movsb
repnz
mov
sbb
out
fbld
jmp
cld
iret
sub
sub
dec
movb
loope
or
and
les
sbb
dec
shrb
sarb
jno
int
bound
lods
lea
daa
mov
add
rcrl
mov
fmuls
xor
sti
into
xchg
inc
addr16
adc
cld
add
jge
popf
arpl
push
add
or
mov
adc
test
clc
or
pop
insl
fsubrl
pop
fst
iret
leave
dec
pop
sbb
out
mov
call
and
bound
pop
pop
mov
pop
jne
sub
xchg
jmp
and
jmp
test
iret
fmul
mov
or
mov
repnz
or
cwtl
jb
mov
mov
and
push
xor
lods
cmp
jns
sub
fldcw
test
pop
sti
add
inc
push
and
lret
aam
push
addl
xchg
mov
int
mov
fwait
pop
sub
sbb
inc
mov
rorl
pop
daa
pop
out
dec
cmpsl
hlt
insl
rcr
cmpsb
xor
cmp
aad
and
ret
push
daa
sbb
xor
dec
into
xor
out
out
xor
cltd
daa
je
adc
mov
dec
adc
cwtl
inc
cmp
test
sbb
gs
jl
mov
xchg
sbb
adc
ret
jmp
xchg
or
addb
sub
jns
xor
cs
jmp
popl
and
popf
or
push
mov
sub
cli
fmul
addr16
lahf
bound
cmp
add
mov
dec
inc
inc
movsb
stos
movsl
push
add
mov
imul
xor
or
dec
pop
fstp
push
adc
leave
lods
addr16
inc
push
and
mov
fwait
test
xor
dec
insl
push
test
popa
leave
or
fs
push
jns
mov
fdivrp
sarl
jns
test
or
cmpsl
push
xchg
inc
cltd
or
adc
jnp
adc
in
and
xor
fnstsw
and
cmp
push
fldt
aad
push
add
sub
cmpsb
sarl
jecxz
push
je
aam
push
aaa
ljmp
out
pop
push
or
jns
mov
xchg
lods
cld
add
loope
cmpsb
and
ffreep
mov
std
xchg
mov
and
insb
mov
fldenv
and
jbe
add
pop
xor
sbb
leave
mov
repnz
jae
pop
and
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
js
cmpsb
adc
mov
pop
ss
jmp
sub
sbb
fwait
jmp
sub
xor
jmp
sub
xor
jmp
sub
sub
cmp
das
loopne
cmp
ss
arpl
rorb
cmp
hlt
popf
je
push
sbbb
adc
cmpsb
pop
cmp
dec
cmp
cmp
xor
jmp
sub
shlb
rorb
mov
dec
jge
mull
jnp
testb
jmp
mov
dec
int
fiaddl
test
jmp
xor
pop
cmc
outsb
mov
addl
jo
jno
dec
jge
mull
cltd
push
jmp
adc
int
inc
sub
adc
es
test
mov
je
or
xor
sub
xor
jmp
sub
xor
lods
push
sbb
sub
jnp
jns
fwait
jmp
sub
adc
mov
pop
adc
mov
pop
xor
fwait
jmp
sub
aaa
pop
ss
xor
sub
pop
adc
mov
push
enter
push
pop
mov
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
adc
mov
pop
adc
andb
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
and
aam
pop
sbb
fwait
stc
push
sbb
sub
sbb
fisubrs
sub
xor
or
inc
rorb
sbb
fwait
jmp
jp
sbb
fwait
jmp
sub
xor
jmp
inc
ss
pop
adc
mov
pop
mov
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
sub
xor
jmp
adcl
xor
jmp
pop
in
push
dec
sbb
mov
jmp
dec
jno
jb
fistps
and
mov
xchg
mov
lret
xor
out
pusha
test
outsl
lock
push
rol
mov
or
mov
mov
push
cmp
inc
sub
sub
mov
jp
cmpb
popa
sub
movsl
cmc
les
stos
and
push
xchg
int3
push
xor
lahf
js
ja
ja
jae
int
push
and
mov
imul
jg
pop
adc
aam
lock
inc
xchg
inc
mov
mov
insl
std
lock
enter
xchg
xchg
xchg
andb
testb
out
push
jb
mov
xlat
test
jbe
int3
cmpsb
scas
and
cmc
xlat
shll
and
nop
mov
cmp
mov
lcall
movsb
testb
xlat
pop
xchg
and
mov
xchg
inc
out
out
mov
xchg
cmc
pusha
cwtl
xor
inc
loope
in
push
cmpsb
pop
test
ja
and
mov
clc
cs
jnp
leave
push
jo
ret
imull
mov
or
mov
in
lods
inc
fisttps
mov
xor
mov
daa
or
clc
stc
jp
mov
insl
popf
pop
add
test
test
les
lock
mov
into
mov
pop
cmc
xchg
pop
jnp
popf
mov
je
mov
scas
sahf
mov
fisubs
jne
mov
mov
xor
addl
jge
jecxz
adc
add
pop
js
lret
push
subl
lcall
add
loope
push
fistps
std
mov
leavew
dec
shlb
mov
in
fwait
jbe
xor
loop
sub
mov
mov
sbb
mov
rolb
ja
or
push
fidivrl
xchg
imul
mov
push
insl
mov
and
mov
je
stc
iret
nop
stos
outsb
shlb
xor
inc
xchg
jmp
jge
jae
in
addr16
call
subb
pop
and
movsl
sbb
andl
dec
xor
mov
jle
fsts
into
and
cli
add
jno
les
push
out
aas
xchg
fdivs
adc
inc
insb
adc
inc
sub
xchg
xchg
add
scas
fnstsw
scas
std
cmp
mov
test
adc
cmp
enter
and
in
sbb
ljmp
adc
pop
data16
call
pop
pop
dec
mov
fsubs
cmp
in
push
decb
pop
push
mov
es
aaa
std
pop
xchg
in
lret
sbbl
xlat
fcoml
icebp
adc
rclb
sbb
add
shlb
cmpb
outsl
pop
sti
cmp
adc
bound
mov
mov
add
lods
jnp
call
jl
mov
lahf
lods
ljmp
mov
jno
fcmovb
inc
movsb
popf
das
xchg
jecxz
popf
xchg
enter
test
in
enter
data16
lods
cmc
sbb
jp
jl
pop
addr16
in
ret
mov
into
clc
cmp
dec
mov
pop
or
repz
jl
and
cmp
test
pop
testl
mov
out
insb
outsl
add
inc
jmp
in
jbe
inc
mov
mov
xor
imul
scas
cmp
stos
mov
test
xchg
fadd
ret
mov
jne
std
mov
cld
sbb
mov
filds
pop
or
add
dec
push
cld
outsb
sub
in
or
sub
and
jno
mov
mov
icebp
push
mov
fisttpll
scas
test
jbe
and
push
jp
or
xchg
dec
xchg
mov
fistl
test
aad
inc
dec
and
out
sarl
xchg
rcll
add
adc
or
xor
cmp
fimull
and
dec
pop
or
mov
pop
loope
jbe
cs
lret
mov
or
or
adc
inc
jns
cmpl
inc
das
aam
or
aad
rcrl
notb
notb
xchg
out
mov
andl
daa
data16
decb
scas
adc
flds
aas
sbb
cmp
fiaddl
sub
ret
leave
add
ja
and
xor
dec
xor
jbe
cmpsl
push
inc
popf
xlat
sub
imul
loop
jns
mov
or
icebp
cmp
push
stos
ss
leave
xor
stos
push
scas
xlat
mov
lock
jns
and
das
mov
mov
dec
and
add
out
add
ss
pop
sub
cmp
and
mov
push
outsb
jmp
icebp
push
push
inc
cmpsl
add
insl
mov
stc
dec
sbb
mov
das
xchg
cltd
notl
jnp
xchg
clc
in
dec
lcall
pushf
movsb
sub
or
cmc
jl
and
mov
sub
aas
push
leave
cli
call
jno
jne
negb
aam
inc
inc
pusha
jmp
arpl
jbe
mov
cmp
push
pop
jns
pop
fwait
jl
sti
rcll
iret
push
inc
leave
cld
push
push
clc
xlat
xor
imul
stc
outsl
sub
mov
mov
jns
les
push
dec
adc
fs
ljmp
fcomps
lcall
int3
mov
pop
in
cmp
aas
pop
sbb
adc
sarb
xchg
pop
lock
mov
fwait
adcb
mov
add
cmp
repz
lods
inc
scas
mov
insb
std
or
mov
cs
push
ss
or
out
pop
popf
jns
ss
lcall
xor
or
popa
jl
xor
xor
mov
mov
dec
jne
or
hlt
es
insb
cwtl
or
nop
mov
or
jmp
stos
sub
inc
es
cld
mov
xor
jnp
xlat
lods
into
adc
sub
std
mov
fwait
pop
repz
push
dec
lret
fnstcw
cmpsb
push
dec
xchg
inc
jbe
addl
lea
les
test
inc
mov
rcl
push
sub
lock
inc
rolb
out
adc
jl
dec
lret
add
mov
pop
pushf
mov
stos
adcb
mov
push
jno
push
mov
push
mov
fwait
mov
enter
mov
add
inc
cmpsl
mov
stos
lods
shll
ficompl
xor
clc
push
adc
sub
filds
sbb
mov
and
js
and
push
jns
add
mov
cmp
sbb
idivl
and
mov
mov
adc
jecxz
xor
insl
xlat
push
mov
pop
and
dec
imulb
clc
jno
sti
movsl
imul
dec
negl
sub
add
cmp
pop
pop
aaa
decl
sub
pop
mov
cmp
fmull
push
mov
push
push
push
inc
and
mov
xchg
mov
cltd
stc
lock
add
and
push
dec
pop
rcll
ja
gs
push
pop
add
inc
dec
inc
mov
sbb
aas
push
jge
cli
out
dec
pop
cltd
fdivrl
scas
fsubs
mov
xor
dec
loop
nop
adc
jecxz
nop
test
inc
or
cmp
or
mov
mov
js
pushf
pcmpeqw
push
sbb
sbb
sub
in
adc
int
dec
adc
sub
jg
inc
and
mov
jb
cltd
add
lret
and
into
cmp
cmp
inc
leave
les
icebp
imul
lret
jle
stc
pop
aad
inc
daa
mov
nop
sbb
and
mov
sbb
les
sti
push
mov
cmp
and
push
fists
movsb
negl
jle
insb
inc
sbb
std
sbb
adc
jbe
cmp
and
mov
sbbl
sub
mov
dec
and
iret
xchg
cmpsl
shlb
push
mov
lcall
xlat
mov
lea
shrl
lret
lret
fcmovnbe
int3
lods
cmp
inc
ljmp
inc
lea
out
pop
jo
mov
or
jae
sub
repnz
mov
movsb
test
lds
arpl
mov
mov
iret
pop
cmp
sbb
pusha
push
xor
adc
push
adc
aas
dec
aas
or
outsb
daa
jno,pn
dec
rorb
fsub
pushf
add
add
daa
fs
adc
aad
pusha
mov
push
jmp
jp
clc
mov
fists
js
lahf
or
dec
test
in
xchg
dec
out
test
add
cs
jno
pop
les
ja
sub
outsl
frstor
rcrb
out
adc
cmp
out
mov
dec
cmp
cmp
popa
aam
mov
gs
sbb
rcrb
loopne
dec
and
jne
mov
aas
fwait
cld
inc
lods
inc
jmp
and
aad
jbe
fdivrs
mov
add
lcall
js
imul
mov
xchg
inc
jle
jecxz
mov
lock
jns
shlb
xor
les
mov
sbb
adc
sub
out
mov
je
fldt
pop
mov
cmp
dec
jae
fidivs
dec
xchg
sub
sbb
xor
movsb
mov
pop
or
cmp
icebp
in
dec
jb
mov
and
shll
lret
sbb
xchg
mov
popa
aaa
xchg
dec
loop
scas
scas
mov
inc
aam
ret
lcall
addl
pop
ja
adc
jnp
xchg
outsb
cwtl
fld
mov
rolb
xchg
js
xchg
pop
in
xchg
ret
push
jbe
dec
cs
les
in
fistpll
lahf
and
fs
xor
xor
pop
jp
jmp
cmc
test
and
gs
or
incb
and
cld
adc
rclb
and
pop
inc
xchg
and
in
aaa
mov
cmpl
stos
rcrb
rol
adc
repz
pop
insb
inc
mov
out
cmpsl
hlt
jns
test
data16
xor
adc
xor
rclb
mov
pop
daa
iret
mov
push
cmp
repz
lds
cmp
jp
icebp
call
xchg
popa
bound
fildll
and
cmp
out
test
jno
loopne
outsl
add
and
pop
test
sub
shl
xchg
bnd
out
mov
inc
cli
jl
popa
shl
and
push
lds
in
inc
out
imulb
pminsw
add
in
repnz
xchg
mov
loope
xor
loop
lea
push
lods
imul
lods
ljmp
xchg
es
mov
adc
shll
inc
insb
jnp
sbb
xchg
or
inc
sbb
aam
jmp
addl
icebp
push
jb
mov
xor
pop
add
loopne
push
sbb
pusha
test
jne
xor
adc
inc
leave
or
push
xor
rclb
insb
cmpl
in
je
xor
leave
clc
stc
adc
addr16
jle
add
lret
rcll
divb
test
int3
mov
test
and
leave
adc
mov
inc
sarl
jo
mov
inc
stos
fimull
in
dec
inc
jecxz
hlt
nop
aas
popa
or
out
stos
pop
adc
shll
imul
mov
mov
mov
scas
push
sub
imul
xchg
sbb
data16
push
mov
inc
aad
mov
stos
jmp
jno
or
loope
inc
adc
adc
lds
int
add
dec
pushf
pushf
push
add
mov
mov
push
sbb
push
in
push
jecxz
cmp
jb
mov
movsb
or
mov
cmp
out
outsl
or
sbb
into
orb
loopne
fldl
test
outsl
push
fists
out
pusha
xchg
ja
negb
adc
pop
push
mov
test
mov
adc
sbb
sub
mov
ret
and
aas
mov
xchg
and
or
adc
cli
rorb
mov
xchg
cmp
xchg
cmp
pop
lret
rcrb
int3
push
popf
jecxz
adc
out
mov
jno
add
fwait
xchg
xchg
inc
mov
push
adc
aad
adc
xchg
jl
lods
aam
lock
dec
xchg
and
xchg
mov
int
rcll
sub
mov
jbe
out
xchg
int
fldenv
pop
in
xchg
add
cmpsl
es
sub
mov
faddl
stos
inc
or
mov
xor
xchg
pusha
test
inc
sub
adc
aaa
rclb
push
xchg
adc
daa
movb
adc
sti
jno
mov
jne
js
or
inc
cmp
jb
jmp
test
out
sbb
mov
scas
movsl
icebp
inc
roll
cld
nop
xor
iret
mov
pop
push
pusha
sub
jecxz
in
leave
je
xlat
mov
cmp
in
cmp
pop
pop
jmp
mov
int3
hlt
jge
mov
add
jmp
shrb
and
sbb
insb
das
dec
jp
mov
nop
pop
test
insl
xchg
dec
int3
pop
push
fisubs
add
mov
jp
lahf
dec
inc
leave
xlat
jle
mov
mov
push
xchg
cmp
push
call
push
bnd
call
xor
in
and
sub
popf
xor
into
ret
lds
dec
cmp
lahf
jp
lcall
mov
and
mov
nop
sub
lods
mov
dec
sub
rcrb
jge
pop
pop
cwtl
sub
inc
icebp
jb
mov
sub
dec
jno
iret
sub
mov
inc
fcmovne
fs
pop
dec
cmc
xor
jns
hlt
add
lret
mov
loopne
push
repnz
out
jmp
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
