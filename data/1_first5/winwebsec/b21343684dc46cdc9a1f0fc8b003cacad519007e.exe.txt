das
imul
aaa
dec
xor
sbb
xor
ret
mov
pop
jnp
cwtl
mov
lods
mov
outsb
sub
mov
aam
mov
inc
mov
scas
add
mov
loop
adc
pop
ja
xor
xchg
xor
aam
fdiv
xchg
mov
cmp
dec
mov
addr16
loope
pop
or
pop
mov
out
mov
adcl
sub
add
nop
push
ret
adc
pop
leave
mov
xor
out
loop
xchg
dec
xchg
daa
test
mov
jmp
pop
repz
les
cld
xchg
int
and
lahf
add
jb
in
push
pop
inc
pop
mov
or
xor
inc
sbb
mov
mov
jns
pop
out
cld
mov
cmc
mov
and
sbb
cmpsl
adc
cltd
or
xor
sub
or
jg
int3
call
std
stos
cwtl
stos
push
mov
rcrl
loopne
or
jnp
xor
scas
jmp
scas
in
jnp
jb
mov
fs
push
and
dec
rcrb
sbb
icebp
ffreep
subb
repnz
xchg
test
mov
lods
jle
testb
mov
decb
xchg
cmp
cmp
mov
cmp
arpl
clc
add
add
pop
xor
test
fisttpll
mov
mov
cmp
xchg
add
mov
mov
testl
icebp
out
pop
sti
shrb
int
imul
ror
sbb
sahf
mov
adc
dec
popl
inc
sub
mov
jl
mov
mov
push
jecxz
add
aas
fistps
jge
scas
out
movsb
adc
sub
add
mov
aaa
cwtl
imul
testl
cmpsl
aaa
pop
push
in
jge
mov
xor
jecxz
pop
cmp
sahf
adc
jae
cmc
ljmp
sbb
mov
pop
leave
inc
rolb
imul
lock
fsub
xchg
mov
clc
std
dec
jge
xor
push
jmp
inc
popa
in
test
jno
lock
xor
or
lods
inc
lods
das
xor
xchg
dec
psubsb
xchg
jg
pusha
mov
test
jmp
mov
xor
adc
movl
aad
pop
mov
idivl
or
popa
iret
pop
and
js
jecxz
enter
mov
ficomps
sbb
repnz
mov
mov
nop
pop
out
sub
clc
shlb
pop
fidivrl
int3
test
lcall
call
mov
mov
dec
xor
gs
in
stos
mov
pusha
push
enter
repnz
sbb
jp
aad
shr
test
fsubrs
sbb
scas
adc
mov
in
mov
lods
arpl
aas
std
outsb
or
fisttpl
mov
pop
lcall
stc
daa
out
aam
test
push
mov
das
movsl
cs
lcall
jno
mov
daa
cltd
popa
mov
cmc
pushf
jecxz
int3
xchg
xor
sbbb
imul
adc
out
mov
adc
imul
pushf
adc
mov
mov
xchg
test
movsl
scas
cld
aaa
inc
aad
xor
movsb
pop
pop
xchg
popa
aam
mov
mov
hlt
mov
test
inc
dec
and
cmc
outsb
sbb
in
addr16
stos
pop
push
push
dec
add
and
enter
fcom
push
dec
movsb
addr16
leave
mov
push
add
xchg
ja
add
aam
test
cld
ret
fsubs
jg
and
lds
aas
test
loopne
imul
mov
mov
adc
push
inc
add
gs
sbb
pop
aaa
ss
jmp
xchg
fistl
outsb
scas
xor
and
xlat
frstor
pminub
stos
movsb
or
ljmp
adcb
repnz
mov
mov
inc
xchg
jo
push
jbe
mov
push
push
andl
rcrl
mov
jbe
subl
push
lds
popf
popa
jl
jnp
xor
inc
fidivs
xor
pop
test
mov
mov
outsb
xor
mov
mov
es
push
dec
stos
iret
scas
insb
fs
fists
imul
cmp
mov
shll
inc
adc
pop
pushf
ja
mov
pop
cmp
mov
inc
add
jo
movsb
fnstcw
or
fsubl
mov
sub
cmpsl
out
repz
xchg
mov
add
test
cltd
stos
jle
xchg
lea
outsl
iret
mov
loop
mov
mov
pusha
test
loop
jno
and
test
rclb
stos
pop
adc
xor
popf
cltd
jge
stos
frstor
push
jmp
daa
scas
fidivrs
in
lret
pop
cwtl
subl
push
mov
movsb
adc
cmp
adc
mov
xor
xorl
lcall
negl
xor
orb
dec
mov
into
daa
push
xchg
xchg
cmp
fdivrl
xchg
clc
fldl
push
inc
fnstenv
mov
out
adc
xor
clc
scas
nop
outsb
icebp
and
jge
lret
pop
inc
imul
adcb
lods
lcall
xor
mov
outsl
add
mov
cmp
and
sbb
add
cltd
push
into
and
dec
cld
adc
cltd
mov
fdivl
add
mov
xchg
push
push
mov
stos
cs
outsl
es
ror
jns
outsb
adc
mov
add
lock
test
xor
cld
fldcw
lea
stc
mov
xchg
pop
mov
jb
add
outsb
xchg
out
mov
popa
loopne
mov
gs
cld
nop
lahf
pop
stos
loopne
mov
and
sub
hlt
fnsave
xor
xor
jo
repz
jmp
ja
insl
mov
je
dec
sub
jle
inc
push
leave
jns,pn
iret
aaa
inc
pop
mov
ds
jmp
notb
lcall
into
or
cmp
inc
scas
xlat
in
xor
xchg
xchg
mov
mov
add
jno
into
vpcomb
hlt
pop
mov
mov
stc
call
aas
or
jg
sbb
mov
clc
push
mov
fstps
jns
sub
aaa
imull
in
test
arpl
loopne
push
sbb
fwait
scas
scas
iret
shrl
add
out
lock
das
push
addr16
mov
shl
cmp
sub
pop
lods
aam
mov
mov
repz
xchg
shrl
in
mov
popf
outsl
cmp
and
stc
cmp
push
and
vpsrlw
jmp
stos
add
enter
jnp
mov
out
xchg
cli
in
mov
aas
inc
imul
out
mov
xlat
cmc
add
push
pop
ss
push
fwait
cltd
sub
pop
cwtl
xchg
out
push
lahf
sub
mov
xchg
out
ffree
dec
addr16
mov
insb
aaa
lea
cs
pop
out
cmp
ljmp
out
movsb
lods
dec
jne
rol
jl
xor
mov
inc
sbb
mov
or
leave
sbb
mov
inc
sbb
jno
fmuls
cmp
add
icebp
loop
pop
cmp
out
push
test
xchg
mov
xchg
mov
adc
ss
sti
fdivr
inc
add
sti
inc
pushf
adc
into
mov
jmp
add
inc
leave
or
psubw
mov
int
imull
or
sarl
add
or
adc
add
pop
add
inc
cmc
scas
xlat
jne
in
pop
imul
sti
mov
jae
arpl
nop
mov
test
popa
xchg
aam
push
pop
fldl
pop
imul
mov
arpl
mov
push
pop
mov
test
icebp
and
cmc
pop
or
push
jmp
ror
jecxz
repnz
jbe
push
mov
mov
test
test
sub
mov
jb
sub
xchg
add
xchg
pop
add
ds
repz
rolb
ja
add
sahf
fwait
out
das
subb
and
push
xchg
in
mov
call
and
dec
ret
add
ljmp
jnp
pop
jne
insl
ret
cmp
test
outsb
cwtl
mov
int3
mov
test
push
push
test
xor
jbe
ljmp
push
imul
test
mov
outsl
in
enter
xor
mov
out
cmp
int3
mov
add
sahf
in
xchg
rorl
inc
pushf
mov
ljmp
rcrb
dec
sarb
push
subb
inc
xor
pop
mov
mov
fninit
adcl
push
ffreep
pop
or
out
ljmp
mov
pop
ret
fcmovnu
outsl
sbb
cmpsb
add
push
sub
mov
mov
mov
mov
cmpsb
sub
jae
pushf
push
xor
cltd
stos
fsts
rorl
arpl
jo
adc
dec
cld
fstps
and
jb
lods
repnz
jne
pop
bound
jne
add
mov
sub
test
pop
pop
dec
call
sbb
mov
mov
subb
adc
pop
adc
push
adc
test
fmul
adc
pushf
inc
jmp
cli
mov
mov
je
jnp
pop
loopne
push
loop
leave
jecxz
adcb
insl
mov
aaa
out
int
insb
sub
pop
aad
aas
or
or
subl
inc
sub
das
cmp
int
movsl
dec
bound
addb
lods
jnp
lods
ss
rclb
ret
enter
mov
test
xor
xchg
sub
out
pop
loop
andl
mov
inc
dec
mov
mov
pushf
imul
sub
out
mov
outsb
mov
stos
and
xchg
lock
lods
adc
mov
mov
mov
and
add
cmp
mov
sub
shrb
xor
jg
or
xchg
ja
xor
inc
mov
in
or
mov
xchg
push
lods
icebp
xor
mov
add
sub
sarl
sub
jl
mov
mov
loope
dec
push
or
into
leave
outsb
pop
adc
mov
orl
out
test
shrl
sbb
jb
push
mov
sti
and
and
lods
xor
xchg
movsb
cmovp
adcb
mov
push
ret
nop
dec
leave
les
xchg
adc
call
clc
sbb
add
xchg
add
pusha
mov
dec
stos
loop
data16
mov
xchg
adc
ficomps
movsl
push
das
pop
cmpsl
jnp
out
jae
cli
jecxz
ds
in
xor
dec
fists
add
sub
test
xor
mov
cld
in
mov
inc
and
mov
or
fisubrl
repnz
stos
orb
test
mov
ret
jmp
mov
cs
ds
lds
daa
and
leave
ja
in
jge
xchg
outsb
shll
xchg
xor
call
outsl
imul
mov
xor
or
testl
aas
push
xor
cmp
mov
iret
xchg
mov
inc
and
ljmp
aam
gs
rcrb
mov
aas
pop
cli
mov
sub
test
scas
stos
out
add
inc
ds
mov
fwait
jae
cmp
add
sub
shlb
mov
sbbb
mov
icebp
outsb
pop
fsubr
leave
xchg
jbe
scas
cmp
icebp
in
push
es
lcall
dec
or
scas
or
loope
movsl
out
fsubs
adcl
inc
push
dec
inc
add
or
or
sbb
lock
adc
mov
and
push
adc
mov
inc
lret
mov
fadd
lods
jmp
hlt
dec
jns
mov
in
std
jmp
mov
fs
sub
in
inc
jb
andb
mov
mov
mov
fwait
xor
cwtl
jge
and
ds
jge
sub
dec
mov
push
adc
in
mov
add
add
repnz
xchg
push
out
xor
shll
jmp
daa
cld
xchg
dec
sub
mov
sbb
or
out
int3
jne
lcall
fs
jae
sahf
lods
lods
adcb
test
adc
inc
xor
xlat
in
jmp
inc
daa
iret
aad
out
xchg
lods
sbb
xchg
sub
icebp
mov
jo
shll
nop
and
repz
mov
jnp
mov
pop
push
in
fwait
movsb
dec
enter
dec
pop
cmp
fdivrs
sub
mov
pop
enter
or
loopne
jno
jns
xchg
outsb
in
clc
repz
mov
lea
test
popa
xor
fstps
dec
loop
inc
mov
fcmovnu
ja
rcl
clc
mov
inc
aas
insl
rclb
je
leave
fnstsw
enter
xor
sub
xor
mov
adcb
pushf
pusha
pop
pusha
stc
lahf
xchg
in
add
or
jnp
push
icebp
pop
movsl
popa
hlt
lds
ror
sahf
inc
mov
mov
jl
stos
xlat
cmp
pop
mov
add
add
stos
mov
or
add
inc
fnstcw
sbb
adcb
xchg
mov
jg
mov
aam
cmc
jmp
xchg
das
out
or
mov
sub
sahf
jo
inc
push
sub
stc
pop
mov
jmp
mov
jno
push
stos
stos
ljmp
repz
sbb
aaa
dec
dec
cmp
jge
insb
jg
ret
sahf
ret
cmp
pop
call
loope
mov
out
aam
notl
repz
in
adc
pop
sbb
and
hlt
xlat
out
jnp
pop
mov
cmp
mov
xchg
lahf
or
ds
rol
popaw
lods
dec
iretw
jle
mov
mov
inc
sahf
lcall
cmp
jnp
stos
mov
pop
mov
dec
sarb
jge
pop
bts
mov
out
das
popa
and
lock
and
mov
outsl
enter
xchg
xchg
fiadds
out
sub
push
cld
arpl
shrl
rorl
stc
ljmp
dec
mov
xor
ja
jo
sbb
push
mov
mov
sub
jbe
sub
pop
das
cmpsl
in
sbb
daa
fidivl
or
je
xchg
aaa
jmp
push
cmc
cs
idivl
jo
int
inc
lcall
je
insb
enter
xchg
iret
mov
jmp
push
ret
nop
sub
sbb
xor
xchg
dec
loop
xor
ja
push
imul
into
pop
mov
inc
call
push
push
push
push
dec
mov
adc
xor
xor
out
ljmp
out
adc
xor
stc
dec
pop
jle
mov
test
fcomp
rclb
xor
mov
addl
mov
idivl
pushf
out
js
mov
les
and
fdivp
in
ja
add
xor
cmp
push
push
sub
pusha
dec
mov
cmp
repnz
into
jae
jge
clc
shrl
inc
out
ret
sub
fldl
sub
sbb
cli
mov
fisttpl
outsb
repz
and
lcall
mov
ds
push
add
push
dec
mov
inc
pop
mov
mov
jmp
repnz
add
jg
inc
push
fstpt
out
out
push
test
repnz
ret
fwait
ljmp
imul
mov
dec
mov
out
and
popa
jge
xor
outsl
sahf
push
aas
test
into
jmp
stos
push
pop
insb
push
loope
in
sahf
repnz
popf
insb
push
mov
test
fists
mov
jb
faddl
jnp
mov
mov
arpl
inc
cld
mov
lds
sbb
ljmp
bound
mov
or
outsl
mov
add
orb
movsl
inc
insb
loopne
jl
arpl
cmp
sub
cli
push
aas
pop
sbb
cmp
mov
mov
cmc
call
rcll
xor
mov
push
add
sbb
notb
sub
adc
pop
sarb
gs
cli
mov
adc
inc
mov
jg
imull
cmp
pusha
xchg
inc
jp
je
pop
push
jp
sbb
mov
call
hlt
popf
push
loope
jae
leave
mov
mov
sbb
mov
sbb
add
scas
mov
rorb
shl
incb
inc
jecxz
call
shlb
outsl
mov
xchg
out
xchg
inc
and
fcoml
in
mov
xor
dec
sub
add
outsb
in
jo
push
rorl
pop
add
push
mov
popa
push
cmpsb
and
arpl
loop
sahf
push
fst
divb
adc
loope
pop
inc
pop
shrl
push
cmp
push
call
xchg
xchg
and
inc
adc
mov
call
xchg
out
enter
lea
mov
jb
jp
loope
xor
jne
xor
mov
xchg
addr16
jmp
sub
test
pop
xchg
mov
dec
loope
xor
icebp
fldt
fwait
decl
sub
mov
mov
mov
repnz
mov
out
mov
pop
add
jbe
insl
pop
rcrb
daa
cs
mov
cs
inc
repz
int3
lods
icebp
xor
and
addb
pop
fdivs
arpl
mov
or
adcb
repnz
or
sub
fs
int
jg
in
pop
jb
leave
outsl
mov
add
sbb
lea
fsubl
adc
dec
or
rorl
xchg
outsb
push
jge
push
or
pusha
mov
aad
xchg
jl
jo
sub
and
push
cmpsl
lret
mov
shrl
aaa
and
test
scas
jo
sti
push
push
sbb
jns
push
ret
pop
jmp
movsb
push
mov
mov
call
das
pop
cmp
movsl
jno
mov
jns
into
push
gs
cld
xor
add
mov
shl
ret
sub
inc
pushf
sbb
add
adc
dec
sbb
in
jns
sbb
clc
cmp
nop
push
test
cmp
sahf
xchg
mov
jae
lret
pusha
or
jno
icebp
push
call
xor
lret
cltd
pop
inc
push
pop
sub
cmpsl
jle
sbb
and
cs
mov
inc
lret
scas
mov
jl
out
sub
xchg
in
jge
jecxz
out
testb
enter
pop
fldl
xchg
xchg
adc
jp
cmp
cmp
leave
aad
scas
jle
int
sub
mov
mov
pop
arpl
popa
pop
in
add
aad
mov
jp
xchg
mov
jbe
sbb
push
cmp
jp
xchg
inc
mov
test
dec
orb
ffree
xor
cmpsb
mov
shll
pop
mov
or
test
cmp
inc
repz
mov
jl
stc
fcoml
sub
add
mov
cltd
mov
push
imul
fsts
add
cs
xchg
jg
push
cmp
mov
cmp
jae
sbbb
mov
sbb
out
pushf
mov
xchg
jne
pop
loopne
setnp
in
sub
out
push
and
adc
in
xchg
fwait
pop
jg
or
filds
sub
je
cltd
jbe
adc
dec
lret
adc
out
movsb
xor
out
shlb
xchg
and
loope
pop
mov
and
add
int3
or
rorb
enter
jp
pop
es
pushl
xor
jl
movsb
sub
fnsave
xchg
push
add
push
scas
adc
pop
arpl
in
mov
out
aad
sub
pop
add
mov
enter
cmc
cs
cmc
jmp
int
and
sub
fidivl
sub
sbb
lods
sub
imul
mov
push
test
or
lahf
pop
inc
jb
aam
xchg
mov
icebp
scas
cmp
jge
gs
in
and
or
and
mov
or
mov
aaa
dec
add
inc
and
jno
lea
xchg
and
int
out
jne
cmpsl
nop
lods
or
xchg
or
int
pop
xor
inc
loopne
cld
mov
cmpsb
das
xchg
and
add
adc
mov
enter
daa
pop
pop
push
xchg
lcall
fs
adc
mov
jle
lcall
push
sti
xchg
in
add
or
jp
mov
sub
imul
stc
imul
in
clc
popa
lods
cmpsb
cmp
pop
or
call
mov
data16
in
xor
insb
sti
pop
fldenv
push
jecxz
aaa
out
dec
cmp
in
mov
dec
int
xor
sarb
add
cmp
jl
mov
jle
xchg
scas
and
out
lcall
and
xor
int3
frstor
fldt
pop
insb
inc
push
mov
adc
or
jne
imul
push
pop
mov
fldcw
pop
data16
jae
xchg
data16
mov
and
repz
push
inc
mov
mov
bound
adc
mov
mov
lock
inc
pop
fwait
and
int
sbb
cmpsb
jnp
mov
jnp
enter
test
lret
cli
dec
hlt
outsl
movsb
in
lods
cmp
pop
mov
push
rcrl
xor
sbb
popa
mov
mov
adc
sbb
sbb
or
sub
stos
int3
sbbb
loop
add
xchg
gs
xchg
adcl
jge
or
movsl
sbb
out
pop
jnp
push
add
adc
xchg
lock
iret
add
pop
xchg
dec
cmpsl
daa
jbe
or
cld
orb
insb
inc
fcmovb
aaa
jl
dec
ds
dec
sahf
je
fwait
ja
sbb
insl
jbe
pop
xor
push
xor
popf
cmp
cmp
jo
push
sub
rcr
test
sub
xorl
fisttps
cmp
pusha
insl
js
popl
lret
cmpb
mov
jp
push
shlb
xchg
fnstenv
setne
push
inc
mov
pop
shlb
inc
jno
inc
jo
lds
arpl
bound
xorb
int
pop
mov
aas
xor
popa
jg
pop
dec
and
xchg
pop
jmp
adc
pop
imull
fcom
xchg
loopne
mov
add
and
ljmp
gs
mov
loope
subl
ss
test
pop
aas
ret
mov
mov
loopne
inc
mov
int
in
jnp
fsubrs
notl
mov
inc
bound
sbb
adc
add
add
sbb
adc
fiaddl
fs
cltd
xor
ljmp
int3
dec
addb
push
or
sub
cmpsb
andl
mov
xor
push
outsb
add
leave
pop
stos
add
mov
lods
aaa
int
dec
push
jnp
pop
mov
xchg
inc
dec
xchg
sub
or
or
aas
lock
adc
es
rorl
mov
scas
push
and
push
push
or
shlb
dec
sbb
roll
sub
lods
and
mov
jns
push
movsb
scas
popa
mov
dec
adcb
dec
sbb
sbb
pop
jmp
mov
jae
aaa
ret
fwait
loopne
cmp
jae
add
ja
sub
repnz
xor
int3
mov
dec
outsl
loop
dec
insl
fcmovne
sarb
das
repz
cltd
inc
xchg
fmuls
and
lods
mov
add
jmp
popa
jle
pop
add
mov
shl
pop
and
xchg
inc
xor
xor
xchg
ret
xchg
sbb
aad
jo
xchg
add
shl
push
mov
or
aaa
std
shlb
push
loope
jle
push
mov
mov
jne
dec
movsl
adc
int3
nop
inc
add
lock
cmpsl
adc
pop
inc
lods
int
and
xor
int
cvtdq2ps
pop
loope
sub
adc
pop
je
cmp
mov
inc
es
dec
mov
nop
mov
adc
xor
ret
pop
pop
in
orb
shl
push
leave
mov
lret
xchg
loope
jnp
test
cmp
sbb
mov
sbb
fistpll
xor
pop
incl
adc
cwtl
adc
sbb
mov
scas
rcr
mov
imul
insb
add
dec
mov
or
aaa
outsb
inc
imul
push
lret
mov
mov
add
pop
insb
inc
les
pop
adc
sti
mov
pop
js
add
mov
ret
mov
adc
cmp
push
ja
xlat
push
xchg
outsb
pop
test
mov
adc
xchg
push
xchg
pop
mov
repz
push
lods
stc
jg
xor
add
incb
lods
fwait
cmpsl
scas
rolb
inc
and
adc
dec
pop
mov
fdiv
sbb
scas
jne
and
xlat
mov
jne
ja
inc
fcomps
punpcklbw
bound
sbbl
fsubrl
or
lods
push
arpl
jno
inc
in
ljmp
and
cmp
mov
xchg
jg
fildl
sub
fsubrl
adc
fs
or
iret
testb
push
push
jl
dec
sub
push
jge
ss
ficompl
pop
mov
xlat
add
inc
mov
loopne
fstpl
insl
lods
pop
dec
and
fists
xor
push
cmp
and
adc
xchg
call
lcall
idivl
scas
inc
xor
jns
lret
mov
lret
lods
pop
aaa
xor
pop
dec
inc
lea
xchg
sub
mov
stos
cmp
out
movb
jno
sub
scas
js
imul
mov
or
dec
outsb
and
es
dec
and
lcall
dec
or
fcmovnu
sbb
aad
adc
aaa
jne
iret
push
int
out
xchg
cli
sahf
sub
jbe
cmp
loopne
std
ficoml
inc
ret
test
pop
ss
adc
shlb
jle
jbe
sbb
out
inc
sbb
outsb
sub
andl
mov
sub
mov
jb
and
lret
xor
cmpsl
stc
fistpl
pop
addb
mov
mov
lret
jo
pop
bound
sbb
mov
sbb
push
mov
pop
mov
lea
sbb
sahf
xchg
add
push
call
sbb
sub
xchg
mov
push
xor
leave
fxtract
imul
pushl
jg
ret
push
les
lcall
stc
imul
push
in
push
mov
push
and
out
lock
out
sbb
and
lds
pop
mov
mov
add
jne
pop
fs
lret
xchg
pushf
xchg
test
dec
mov
or
mov
clc
pop
lock
stc
mov
shll
pcmpgtd
ds
insl
dec
xchg
pushf
sbb
mov
out
jno
shll
fnstenv
push
fwait
sub
das
push
pop
xchg
push
cmove
add
sbb
ficomps
scas
insl
add
pop
dec
hlt
idiv
jo
enter
pop
in
mov
addr16
std
xor
lds
dec
out
push
jbe
cld
into
push
and
es
jl
subb
mov
bound
test
push
movsl
push
cmp
pop
pop
push
jnp
mov
ret
mov
fstp
mov
xchg
aaa
movsb
sbb
je
inc
pop
push
adc
push
xchg
pop
xor
into
movsb
lcall
outsl
rclb
repnz
in
cmp
xchg
or
add
stos
push
adc
enter
cltd
stos
xchg
jmp
sbb
mov
shll
or
inc
sahf
lods
dec
sub
or
in
les
push
loop
loop
dec
and
ja
jb
cmovnp
dec
sbb
inc
int
mov
add
lods
or
das
stc
inc
pop
stos
jno
sub
mov
inc
xchg
add
repz
testl
adc
repz
shlb
lretw
decb
xor
jae
popf
push
cmp
imul
dec
sub
rcll
sub
test
cmp
mov
inc
das
outsl
jae
adc
fsubl
rorl
and
js
push
mov
cld
popf
stc
cmc
aaa
mov
cli
dec
loopne
push
sub
divb
lcall
stos
inc
add
imul
dec
cmp
scas
mov
push
xor
jnp
dec
in
sbb
sub
push
push
ss
dec
dec
addl
imul
or
mov
int
jns
inc
jns
or
inc
or
mov
adc
inc
adc
adc
xlat
adc
cmp
dec
cwtl
xor
lret
add
jo
addr16
jle
inc
in
mov
pop
jle
addb
jge
je
pop
mov
out
rorb
dec
mov
in
adcl
mov
mov
sti
popa
jnp
xor
rep
inc
push
enter
xlat
lock
push
bound
pop
sub
mov
out
xchg
xor
push
lret
pushf
dec
add
out
int3
adc
cmp
roll
push
xor
les
das
shrb
sbb
adcl
pop
add
push
movsl
sbb
scas
xchg
mov
xor
or
std
add
or
adc
repz
out
mov
xor
lret
cmp
push
mov
cmp
cmp
fistl
adc
inc
cmp
popa
mov
dec
insl
cmp
mov
cmc
out
jne
cwtl
mov
jl
sahf
xacquire
adc
push
sahf
sbb
mov
jns
sub
les
fisttpl
es
nop
test
pop
icebp
dec
xchg
sub
dec
lods
pop
andl
xlat
xchg
add
cltd
xor
add
pop
jnp
xchg
mov
pop
sbb
inc
xor
xor
out
cltd
hlt
pop
call
adc
jmp
inc
mov
cmpsb
or
dec
pop
sbb
repz
cmp
push
xor
jg
pop
pop
dec
fisubl
les
jae
mov
fcompl
repz
lea
jmp
mov
mov
sub
mov
mov
mov
stc
loopne
popf
test
mov
mov
mov
xchg
inc
push
push
addr16
sbb
enter
pop
movsb
ret
in
es
loope
bound
pop
bound
addl
dec
mov
fwait
repz
add
fcompp
sub
push
sbb
shr
jp
test
mov
ss
push
js
sbb
xor
roll
in
pop
shl
lods
aas
shrl
mov
dec
int3
or
aam
mov
mov
daa
sbb
fsubrs
mov
pop
xchg
test
xchg
fimull
inc
je
loope
lods
bound
dec
fiaddl
repnz
inc
sub
adc
add
dec
aad
adc
xchg
mov
inc
adc
mov
jp
pop
inc
add
pushf
push
dec
into
sti
ljmp
xchg
dec
mov
fs
push
push
jno
sbb
push
inc
cmp
stc
push
dec
dec
dec
loop
dec
push
fwait
repz
and
inc
lret
sub
xchg
xor
push
add
jmp
jno
jno
daa
in
add
rorl
fbstp
xchg
hlt
mov
stos
push
stos
jmp
sar
outsl
cli
pop
pop
mov
jb
int3
bound
int3
aad
pusha
mov
lock
cld
cwtl
rorl
and
pop
mov
pushf
sub
or
mov
dec
sub
fcos
fmul
xchg
push
inc
sbb
out
sarl
cmpsb
adc
imul
inc
dec
shlb
imul
xor
lret
popf
pushf
repnz
or
xchg
in
add
out
ret
pop
subb
fstpl
jp
andl
inc
stos
fs
dec
stc
mov
xlat
xor
jbe
xor
das
mov
xor
mov
orb
xor
sbb
hlt
inc
xchg
cmc
jnp
inc
sub
aaa
aam
xchg
and
lock
mov
push
arpl
fcomps
push
in
insl
es
or
cmp
ljmp
fwait
mov
lock
shr
dec
movsl
rcrb
lret
and
pop
push
jg
sahf
loopne
psrlq
jmp
dec
mov
push
mov
add
add
push
emms
mov
mov
mov
sti
cli
je
mov
mov
jo
loopne
test
lods
cmp
mov
mov
je
jg
lea
xor
lds
ds
and
inc
jge
mov
lea
push
int
adc
fisttpll
xchg
cmp
push
mov
sahf
xor
xchg
std
jecxz
sarl
add
cmp
sbb
addr16
cli
mov
data16
sbb
fsts
lret
adc
jmp
inc
adcl
xchg
and
test
std
int3
jle
inc
daa
fucomi
push
inc
add
loop
mov
test
subb
into
sahf
push
ds
mov
cli
in
jb
pushf
ljmp
pop
outsb
fwait
in
fwait
sahf
int3
lret
mov
push
sub
mov
es
mov
int
mov
inc
into
stos
in
push
mov
enter
and
call
push
add
push
jmp
insl
adc
cmp
or
mov
orl
and
inc
xor
adc
ret
push
cmp
push
sub
add
push
test
call
mov
xchg
enter
loope
xchg
inc
das
iret
loopne
cmp
aad
mov
mov
nop
xchg
and
jle
fsubr
lock
cmp
pop
and
cmp
mov
sarb
shr
mulb
adc
cmp
leave
xchg
xchg
loopne
inc
cmp
shll
xor
outsl
xchg
pushf
ds
aas
les
push
mov
aas
lret
int
insb
adc
sbb
in
mov
leave
cmpsl
inc
xchg
enter
addr16
gs
enter
or
sbb
fwait
pop
imul
mov
das
inc
andl
pop
jmp
mov
scas
mov
cmpl
fwait
std
or
pusha
inc
clc
scas
loopne
es
mov
mov
mov
push
pop
add
lret
cmp
cmp
inc
idiv
fwait
sti
pop
leave
pop
inc
sub
arpl
xor
xchg
fwait
xlat
cmp
xchg
hlt
xor
cwtl
mov
pop
pop
gs
cmp
pop
out
jecxz
cwtl
aas
cmc
dec
push
xor
mov
cmp
adc
or
andl
hlt
mov
adc
fsubl
dec
adc
in
cmpsl
out
inc
fnstenv
stos
mov
jnp
outsb
sahf
jno
outsb
fildll
loop
xor
push
cmp
cmp
fwait
adc
dec
jns
and
out
mov
add
pop
notl
jae
shr
cmc
push
fs
or
push
outsl
dec
adc
mov
mov
stc
in
addb
mov
push
cli
or
mov
xor
sub
push
xchg
add
mov
mov
mov
out
pop
enter
mov
add
dec
loope
lea
loope
ficoml
pop
fmul
cmpsb
in
mov
pop
add
jge
insb
and
ret
pop
inc
jns
scas
push
cmp
mov
inc
aad
push
mov
xchg
je
mov
scas
mov
sbb
xor
inc
aas
mov
fbld
cmp
aas
mov
and
jo
loope
fstpl
sti
mov
mov
cmp
sbbb
jns
cwtl
cmp
in
and
or
shlb
mov
adcl
push
and
jle
lahf
xchg
jbe
decb
inc
xorb
mov
fprem
xlat
adc
dec
sub
adc
mov
mov
inc
int
xchg
mov
aad
pusha
lock
pop
pop
imul
shrl
rorl
pusha
subb
ror
sarb
enter
adc
jbe
aaa
adc
cmp
push
lcall
sbb
fidivs
bound
jmp
stos
or
cmp
mov
jne
xlat
push
in
adc
or
xor
std
dec
fisttpl
aaa
or
pop
aas
in
xchg
sbb
ja
lods
sbb
inc
jmp
and
cmpl
jecxz
outsl
jge
aas
xchg
xchg
jg
push
jp
xchg
mov
and
or
sub
loop
aam
arpl
ds
xchg
mov
popf
movsl
fs
int3
mov
out
rclb
lret
inc
adc
mov
sahf
sbbl
lahf
cmp
movsb
movsl
push
inc
sub
pop
lahf
test
les
mov
add
ret
cmpsl
call
repnz
pop
mov
scas
cmp
stos
inc
inc
ljmp
divb
or
mov
push
pushf
dec
test
mov
and
sub
jg
cwtl
fistpl
and
addb
pushf
sarl
push
inc
repnz
addl
in
les
int
mov
adc
sub
cmpsl
inc
inc
je
sbb
fwait
imul
in
pop
xor
pushf
pop
add
pop
repnz
ljmp
les
cld
pop
in
fcmovnb
xor
shll
outsl
mov
cmp
push
into
push
xchg
push
popa
push
dec
shlb
and
or
js
push
daa
jg
aas
inc
stc
ret
mov
fsts
iret
repz
imul
daa
negl
int
test
inc
imul
jle
cs
xchg
ret
push
xchg
sbb
shll
mov
jmp
std
xchg
outsb
jecxz
fdivs
push
add
push
inc
push
push
sub
push
cmp
into
das
and
xchg
add
ja
xchg
scas
mov
mov
addl
mov
adc
addr16
mov
ret
ror
inc
mov
mov
mov
lds
js
pop
mov
xchg
inc
jmp
push
sbb
xchg
add
xchg
push
repnz
push
xor
jo
pushf
ja
inc
inc
cmp
fs
sbb
mov
scas
arpl
inc
mov
xor
lcall
insb
scas
or
xchg
mov
lock
stos
scas
push
imul
adc
jp
popa
std
daa
cmc
iret
repnz
imul
arpl
mov
out
mov
pop
add
imul
mov
jbe
xchg
ret
lahf
xlat
movsl
ret
call
add
dec
fmull
rol
stos
inc
adc
loopne
xor
fstl
in
or
in
in
int
mov
pushf
xor
pop
cs
popf
inc
aad
subb
insl
inc
inc
lds
shll
insb
and
mov
jo
data16
adc
fistl
xor
cwtl
rcrl
icebp
lret
cltd
negb
push
mov
incb
mov
jp
jmp
push
dec
dec
adc
fmul
std
popa
sbb
sub
ds
xor
js
scas
test
and
mov
push
gs
push
das
xor
stos
imul
shl
xchg
or
rclb
pushf
mov
insb
add
pushf
int
xchg
mov
outsb
xchg
popf
leave
scas
pop
or
rclb
aam
push
es
cmp
pushl
iret
mov
dec
fdivrs
jle
pusha
shlb
push
sub
cs
outsb
mov
inc
out
jg
fnstenv
push
mov
add
ljmp
rcll
push
int3
cmp
pop
push
cmp
fdivs
pusha
jb
sub
clc
out
mov
pop
mov
mov
out
test
xor
mov
sbb
inc
cmpsl
lcall
inc
lcall
ret
repz
cmp
jno
stos
sub
scas
adc
mov
jns
sbb
fisttps
mov
fisttps
into
mov
xor
repnz
scas
add
add
and
or
in
or
pop
fstpl
add
cmp
fistpl
fsincos
dec
cmc
fdivr
ds
in
int
push
imul
arpl
dec
push
aaa
mov
mov
mov
fistpl
xchg
mov
rcrl
jp
shl
xchg
cmpsl
pusha
push
mov
add
imul
sarl
movsb
into
insl
test
or
jmp
pop
adc
dec
jp
push
jo
lea
clc
jbe
xchg
xchg
cmp
rcl
gs
fdiv
cltd
inc
fs
out
pusha
mov
or
push
xchg
pop
cmp
lods
jb
fdiv
out
int3
sub
and
cmp
ja
add
jb
aas
pop
pop
sbb
add
out
cwtl
xchg
loop
mov
cs
subl
pusha
subb
add
xchg
es
xor
sub
push
mov
lcall
dec
or
cs
imul
or
push
sbb
sub
inc
sub
into
sti
or
xor
stos
and
mov
push
push
cli
movsl
lret
inc
mov
in
inc
enter
push
adc
mov
xor
cld
dec
lcall
inc
pop
xchg
rolb
jns
outsb
mov
test
mov
movsl
pusha
jne
cmp
push
cld
paddb
or
fimuls
rorl
xchg
lea
in
add
dec
jno
xchg
mov
jp
sbb
fists
cmc
add
sub
mov
movd
in
jns
xor
rorb
mov
adc
cmpsl
cmp
dec
adc
inc
test
inc
andl
repz
and
cltd
add
movsb
ja,pt
out
push
aaa
cmp
push
sbb
cmp
mov
loopne
jne
fnop
shrl
mov
lds
and
test
test
mov
push
jge
push
cmc
out
pop
cltd
dec
cmc
hlt
cmp
pop
dec
lea
outsl
popf
mov
cwtl
inc
xor
add
pop
std
lods
fimull
test
loopne
cmp
mov
scas
pop
jl
dec
adc
stc
gs
mov
inc
stos
jno
movsb
and
adc
mulb
push
ret
test
and
pushf
int
ficoml
outsb
test
push
les
fsubrp
lods
lods
pop
mov
xor
or
loopne
lds
add
push
rclb
enter
mov
mov
test
repz
lret
cmpsl
sbb
jne
mov
dec
lds
sbb
dec
movsb
adc
xor
into
int
xor
into
sarl
movl
sbb
inc
call
pushf
inc
xor
daa
mov
pop
mov
stc
clc
into
add
sbb
sbb
pop
inc
pop
inc
daa
sub
push
js
cmp
pop
or
or
pop
pop
mov
and
popa
mov
mov
mov
sbb
and
arpl
sbb
and
loope
call
jae
pusha
mov
jo
xchg
cmp
pop
push
pushf
mov
xchg
iret
loope
bound
fidivs
jmp
mov
insb
xchg
mov
mov
xlat
daa
loop
mov
or
and
dec
cmp
pop
dec
push
mov
rol
je
push
bound
notl
mov
lret
mov
lods
and
push
ds
into
mov
fwait
mov
xor
lret
mov
dec
mov
ret
aad
cmp
addb
sbb
xlat
mov
pop
cld
push
out
adc
loop
mov
push
mov
jb
sbb
lods
lds
sbb
sti
dec
and
movb
and
mov
daa
jmp
aam
rorb
push
add
xlat
jle
ja
jns
mov
sub
stos
xchg
cli
and
mov
xor
fstp
fidivrl
mov
mov
inc
rol
add
rcr
stc
xchg
cmc
mov
inc
mov
or
mov
add
in
inc
ss
pop
out
sbb
sbb
repnz
rol
mov
pushl
popf
mov
stos
mov
mov
jae
das
xor
repnz
inc
mov
jl
in
mov
cmc
or
mov
cmp
and
in
lret
jge
push
lds
pop
push
sbb
pop
popf
enter
sbb
scas
imul
mov
addr16
sbb
jnp
mov
dec
fldcw
mov
or
xchg
xlat
iret
push
mov
inc
adc
lret
jmp
xor
filds
and
shl
divl
fstpl
out
jae
push
add
xor
in
add
hlt
jg
insb
adc
push
adc
rorb
icebp
or
cmp
arpl
mov
sahf
adc
xor
ficoml
jb
adc
mov
lcall
loopne
mov
movsb
dec
data16
mov
in
les
sub
push
pop
dec
add
push
add
xor
leave
nop
xchg
pop
jecxz
mov
fwait
xor
sbb
daa
xchg
xchg
or
jbe
mov
dec
mov
push
mov
out
jo
sub
sbb
pop
or
mov
enter
in
mov
int3
or
mov
std
mov
jae
sub
pop
xchg
test
test
mov
in
cmc
cld
fistpl
cmc
movsb
cmp
push
in
xor
cmp
lret
call
jp
jnp
add
mov
in
bound
mov
and
movsl
jo
and
xor
sbb
das
xor
aaa
aas
in
mov
mov
sbb
mov
inc
lret
lods
mov
in
jb
data16
or
dec
mov
xor
inc
mov
push
mov
clc
sahf
std
aam
out
in
or
push
mov
adc
pop
jge
out
cmp
movsb
pop
push
test
xchg
mov
js
add
push
fimuls
test
jmp
ds
push
jp
es
pop
les
push
xchg
pop
adc
loop
popa
push
push
fidivs
push
push
imul
cmpsb
mov
sbb
jle
rclb
fnsave
mov
dec
iret
push
xchg
cmpsl
ret
cmp
xchg
mov
inc
xchg
popf
fs
mov
movsb
lods
and
mov
ret
fidivrs
cmp
adc
xlat
mov
pushf
add
push
push
rcll
idivl
inc
push
or
rol
movb
lods
lea
jge
mov
cmpsb
sbb
sbb
fwait
lret
leave
mov
nop
test
pop
sbb
jne
std
sahf
and
mov
dec
mov
mov
push
repz
mov
fidivrs
enter
scas
in
jmp
pusha
lahf
adc
inc
mov
and
pop
loope
xchg
push
sti
ss
pop
xor
adc
sbb
mov
scas
bnd
sbb
xlat
lret
dec
popf
adc
push
test
ror
rclb
cmpsb
out
fidivs
cld
fnstsw
cmp
vcvtss2si
rorl
mov
repz
pop
repz
lret
xchg
or
pop
inc
bound
xchg
and
je
sbb
jno
cs
div
inc
sbbl
sahf
sbb
jmp
mov
and
add
xor
pop
shrl
push
push
xchg
daa
xor
add
dec
pop
or
and
pop
daa
aam
xchg
and
popf
das
das
mov
mov
incl
mov
rcl
in
imul
push
inc
mov
pushf
loop
and
sar
mov
add
adc
inc
or
nop
cmpsb
mov
xchg
insl
cmp
mov
push
dec
mov
pop
and
push
dec
fbstp
jmp
jne
fadd
flds
mov
mov
test
push
mov
xor
mov
dec
cmp
test
or
mov
mov
pop
movsb
fisubs
out
in
cmp
sub
push
out
es
aam
dec
std
out
mov
mov
adc
pop
dec
mov
sbb
mov
sahf
jnp
test
push
mov
cmp
in
stos
jl
test
adc
pop
adc
inc
push
cs
and
sub
mov
cwtl
mov
mov
shlb
adc
pop
inc
int3
aas
sbb
je
mov
clc
bound
inc
int
test
sbb
cmpsb
pop
mov
push
repz
pop
xchg
imul
mov
imul
cwtl
sub
adcb
push
aam
test
or
sub
cmp
xchg
xor
lcall
cmpsb
jl
stos
jnp
jmp
add
fcompl
jb
loopne
dec
fnstcw
bound
mov
loop
pusha
push
pop
outsl
sbb
sub
pop
sub
push
punpckldq
sahf
xor
dec
es
cs
cmp
cmp
subb
std
xor
cmp
push
enter
sbb
jmp
sar
mov
add
and
aam
into
sub
fs
imul
push
ror
popf
sbb
inc
add
jnp
push
xchg
push
movsl
repnz
xchg
ja
or
cli
and
add
add
mov
jnp
addr16
leave
repz
dec
adc
mov
jg
pop
fwait
insl
sub
shlb
mov
pop
pop
jg
aad
inc
push
loop
fbstp
js
sbb
cmpl
xor
cmp
imul
and
jns
pop
add
out
mov
pop
jmp
call
dec
jge
subl
mov
lds
jg
pop
enter
push
fldpi
fildl
mov
and
stos
insl
push
daa
xchg
jo
dec
jecxz
xchg
pop
dec
in
aas
out
lahf
dec
test
cmp
jl
fs
cwtl
or
add
mov
cmc
xchg
adc
xor
pop
mov
imul
cmp
movsl
cwtl
popa
enter
xor
mulb
push
fisubl
dec
jecxz
xchg
fidivrl
pop
outsl
das
lcall
dec
cltd
inc
lock
lret
std
jle
xor
nop
out
adc
adc
mov
enter
dec
movsb
call
in
pop
push
adc
mov
or
mov
push
stos
in
push
mov
test
cmp
js
mov
or
popf
ja
and
xlat
js
hlt
sahf
mov
and
xchg
arpl
loopne
data16
mov
enter
and
andl
cld
mov
add
data16
fmull
cs
inc
cmp
fistpll
pop
add
sub
ljmp
test
push
bound
scas
sbb
add
xor
std
pop
mov
sub
in
add
jmp
ja
rcl
push
jnp
add
mov
pop
leave
push
pop
cmp
mov
ja
mov
aas
hlt
les
jo
inc
aas
lock
pop
enter
shrb
inc
push
stos
mov
push
add
test
mov
cltd
mov
jp
sub
add
mov
mov
inc
pop
xchg
rcrw
push
mov
in
mov
or
ja
mov
cwtl
jp
mov
or
or
or
mov
jnp
lret
inc
mov
aam
mov
sub
jp
adc
dec
jae
movsl
inc
add
imul
jecxz
or
inc
adc
hlt
jmp
cwtl
sti
pusha
outsl
inc
loop
sub
mov
and
xchg
cmp
and
xor
sbb
add
out
arpl
std
inc
ss
sbb
sbb
or
sub
cli
sbb
sub
subl
insb
cmc
fwait
stc
icebp
adc
pop
xor
divl
lret
aas
or
into
dec
push
popf
inc
mov
xchg
aad
scas
cwtl
jecxz
pop
mov
cmova
mov
fsubl
out
inc
or
insl
sbb
xor
mov
pop
js
loopne
imul
lods
ret
cltd
out
add
dec
loope
sarl
nop
mov
fcompl
inc
mov
ret
dec
je
add
jmp
pop
stos
inc
fnsave
fsubr
ret
cmp
aas
je
out
scas
sub
mov
mov
leave
rorl
xor
xchg
xor
xchg
inc
movsb
mov
sub
daa
push
mov
mov
pop
imul
mov
xor
in
sbb
or
mov
cmp
outsl
scas
addr16
mov
call
push
jge
cmp
xor
mov
inc
add
dec
xchg
andl
sub
adc
push
in
stos
pop
mov
cli
and
icebp
aam
mov
cmpsl
ja
mov
sub
add
push
imul
inc
mov
jnp
jmp
inc
adc
inc
orb
sbb
and
inc
dec
cmp
inc
xchg
cld
mov
loop
aas
cmp
mov
andb
fisubrl
mov
rolb
in
adc
lea
stos
rorb
mov
stc
cwtl
rcrb
jno
xor
push
je
jmp
fimull
insl
or
push
add
icebp
insb
mov
push
lret
imul
mov
adc
jae
adc
xchg
cmpsb
mov
mov
jae
cmovl
jg
cmpsb
push
shll
imul
sbb
inc
testl
mov
incb
or
movsb
fcomip
adc
push
xor
fdivr
jnp
or
mov
clc
jb
leave
inc
cmc
pop
sbb
lds
fldl
mov
mov
out
or
or
xor
hlt
popf
fistl
sarl
jne
jp
lods
mov
popa
bound
mov
push
jbe
lcall
pop
std
inc
fcompl
fildl
and
sbb
fisttpll
xchg
add
lods
ss
and
fwait
or
mov
mov
mov
jae
adc
out
test
cmpsl
push
adc
sbb
fbstp
sarb
mov
sbb
push
gs
push
dec
push
cmp
popf
addb
sbb
push
lret
lock
test
stos
in
or
pusha
test
clc
shr
stos
movl
outsb
sbb
pushf
pop
in
pop
mov
push
cmc
fiadds
adc
es
mov
sub
mov
sub
clc
addr16
les
cmp
dec
dec
cmc
test
xlat
mov
rol
sbb
mov
bound
dec
int3
mov
fcomip
loope
mov
lcall
fs
scas
xchg
and
outsl
shlb
std
cmpsb
or
les
sub
ficoms
mov
xchg
sbb
push
movsl
xchg
sbb
cltd
lahf
sbb
lret
repnz
enter
out
or
lahf
lods
cwtl
push
enter
jl
mov
in
xor
shlb
pop
mov
in
out
or
adc
jns
dec
inc
std
add
dec
inc
cwtl
pop
inc
inc
iret
jns
add
enter
aam
mov
mov
push
sbb
in
popa
nop
push
mov
cltd
mov
scas
jge
mov
ds
into
arpl
lret
lock
xor
leave
inc
out
fs
jae
out
fstps
push
cmp
dec
inc
or
jb
xor
push
jne
add
xchg
popf
pop
addl
fsubl
or
push
testl
pop
mov
add
mov
push
fsub
xchg
in
xor
push
sbb
ja
xor
jne
sbb
mov
push
jne
xor
popa
mov
loopne
imul
xor
popa
cmpsb
sbb
fildll
and
mov
in
inc
aad
add
fmull
xchg
push
imul
mov
pop
call
lea
mov
jge
mov
mov
sbb
rcr
mov
mov
cmp
sbb
add
fdivrl
cld
mov
aad
jg
jge
sbb
dec
jmp
icebp
aaa
dec
cmpb
out
clc
xor
mov
xchg
ror
aaa
loop
std
scas
pop
js
inc
loop
lea
mov
repnz
jo
add
into
mov
sbb
add
flds
ja
xor
mov
adc
ror
push
mov
xchg
and
repnz
mov
push
or
decl
lret
cli
js
and
leave
shll
mov
cmp
jge
call
sbb
stos
ret
fldcw
pop
imulb
pushl
aaa
sbb
dec
cltd
loope
pop
rcll
fs
cmp
icebp
mov
jnp
dec
mov
push
dec
js
or
mov
push
push
nop
push
in
std
mov
adc
xor
cmp
jl
in
pop
dec
xchg
mov
mov
int
lods
outsb
mov
mov
push
ds
mov
js
mov
scas
or
sbb
das
shrb
insl
es
xchg
jl
subb
repnz
sbb
push
sbb
mov
mov
adc
ss
cmp
add
push
xor
pop
mov
dec
les
pop
cmp
in
cmp
inc
cld
dec
cmp
mov
jae
push
xchg
mov
pop
sbb
cmp
and
jmp
out
sub
ljmp
inc
jae
pushf
push
imul
adc
dec
adc
and
data16
xchg
call
sub
bound
nop
jge
dec
dec
sub
push
xor
jecxz
cli
or
nop
je
inc
loopne
mov
cmp
mov
pop
xor
cmp
xlat
mov
imul
and
cltd
insb
push
mov
gs
xchg
jae
cltd
mov
shll
cltd
pusha
addl
sbb
xchg
int
add
push
fisubrs
inc
aad
mov
push
sub
cld
jo
iret
jge
repz
popf
xor
das
repz
jno
sub
xchg
fistpl
mov
cmp
xor
outsl
subl
adc
dec
aam
test
sub
pop
punpckldq
in
insb
mov
dec
inc
mov
inc
and
pop
aad
xor
cmpsb
cltd
int
xchg
add
icebp
sbb
addr16
push
sbb
movsb
adc
inc
fildl
ss
jge
and
or
mov
aaa
mov
cld
loop
push
sub
out
aaa
movsl
ret
and
je
xchg
in
xchg
repz
outsb
or
popa
or
enter
dec
in
jae
test
push
jb
stos
jae
adc
add
add
addr16
lahf
subb
push
add
or
and
int3
in
xchg
cmpsl
xchg
les
mov
lcall
test
dec
mov
cmp
sbb
daa
xchg
pop
out
adc
add
cmp
mov
mov
aad
out
push
mov
and
aad
push
sbb
mov
mov
sub
arpl
insl
dec
jmp
ss
int
xchg
cs
jmp
xor
ljmp
cmp
lret
jg
dec
dec
jge
test
jge
imul
test
loop
cmova
lds
mov
addl
ljmp
inc
insl
and
leave
cli
or
outsl
dec
adc
add
pop
adc
sbb
call
cmp
test
ficoms
fstpt
sub
cmp
jl
call
out
fimull
stos
push
ret
aam
subb
hlt
movsl
loopne
ret
push
jecxz
mov
test
and
fsubr
ja
mov
adcl
push
or
mov
push
pop
mov
mov
dec
jns
repz
xchg
mov
adc
pop
dec
lahf
cli
add
add
dec
lahf
push
movsl
mov
jp
mov
sahf
divl
xchg
adc
jo
icebp
mov
dec
mov
call
and
dec
xchg
xor
popa
orl
call
mov
inc
xchg
or
mov
push
mov
insl
xor
jno
rclb
push
repz
vandps
mov
aad
mov
mov
xchg
pop
mov
nop
daa
sub
jnp
stc
mov
xor
or
xor
hlt
lds
xchg
ss
jmp
dec
xor
adc
inc
pop
mov
cmp
push
add
jo
adc
popf
fstpl
jl
es
lds
in
cmc
movsb
clc
dec
add
xor
sti
pop
ret
ljmp
clc
inc
xchg
sbb
mov
and
jb
xor
outsl
cmp
push
int3
enter
into
les
icebp
fwait
pop
xchg
loopne
mov
push
popf
jae
lcall
icebp
xchg
fldenv
jns
movsb
push
pop
and
fdivs
hlt
and
aad
push
adc
aad
mov
adc
cwtl
or
scas
lods
gs
xor
mov
jae
std
stc
in
xchg
sbb
hlt
fiaddl
and
insb
testl
in
pop
js
stos
sbb
sbb
rorb
push
jno
adc
pop
setp
xorl
mov
sub
in
sbb
fs
xchg
test
fdivrs
stc
mov
das
hlt
dec
int
xchg
jecxz
cli
jmp
loopne
or
je
je
stc
xlat
cmp
dec
jbe
jo
das
shr
mov
rcr
jmp
jne
mov
ucomiss
out
andb
mov
jmp
cs
cmp
and
repz
rorl
add
and
mov
in
push
or
outsl
inc
les
pop
bound
jne
cmpsl
inc
lret
xorl
adc
out
sub
pop
and
idiv
in
jbe
dec
test
repnz
jo
idivl
hlt
mov
push
and
cltd
xchg
bound
aas
repz
scas
loopne
and
sub
nop
cmp
ja
in
in
iret
in
xchg
shrb
shlb
test
insl
gs
lcall
jnp
daa
out
out
push
scas
mov
pop
gs
out
jecxz
mov
and
pushf
imul
pop
xor
jno
imul
std
push
std
push
mov
notb
imul
sbb
push
jl
rcll
ret
jp
cli
fstps
arpl
movsb
mov
inc
inc
fs
or
lods
inc
iret
push
lret
adc
shrl
sub
mov
sahf
mov
sbb
dec
rcll
insl
jo
xchg
push
andb
add
fidivs
pop
lret
mov
inc
mov
jl
aad
cmp
xor
dec
xchg
push
xchg
xchg
addr16
fdivrl
int
adc
es
jb
fisubrs
aam
aad
dec
out
stos
push
sbb
or
jns
imul
sub
aam
icebp
sub
mov
cmp
mov
push
mov
pop
mov
icebp
xchg
jp
sub
or
xor
jle
lods
mov
inc
pop
lahf
btc
jmp
or
fidivrl
jo
sub
movsb
sub
fstl
mov
fistl
sub
mov
inc
neg
lods
ss
movsb
sbbl
cltd
ficompl
xchg
sbb
mov
loop
outsb
leave
inc
dec
out
dec
lret
stos
aam
xchg
adc
add
xchg
aad
mov
js
push
fldl
and
cmpsl
rclb
enter
push
xor
push
sbb
mov
fnsave
scas
pop
pop
mov
add
jns
dec
cmp
in
mov
incb
into
pop
mov
jno
inc
sbb
or
xchg
int3
movsl
fnsave
or
push
sub
inc
insl
sub
fdivs
cld
or
push
out
lahf
das
mov
dec
in
ret
pop
pop
addr16
test
mov
push
fwait
lock
gs
cmpsb
push
insb
pusha
gs
jmp
insl
sbb
push
inc
mov
xlat
insb
je
and
pop
out
mov
inc
js
sub
mov
aas
cli
pop
dec
xor
or
scas
and
scas
jne
cld
sbb
cltd
mov
insl
and
inc
push
xchg
cmp
pop
insl
sub
loopne
mov
mov
xor
and
jmp
ss
jae
pop
push
psubusb
dec
mov
and
xchg
sub
mov
adc
pop
lahf
cltd
fdivrl
pushw
clc
xor
pop
pop
lret
mov
or
lcall
les
test
scas
cmpsl
cmp
push
jp
frstor
cmp
lods
popa
sub
notb
xchg
mov
and
shrl
ret
adc
xchg
iret
pop
outsl
xchg
aad
xor
cwtl
ds
adc
imul
pop
jmp
and
test
push
xchg
ss
inc
out
sub
mov
imul
dec
mov
or
mov
call
shlb
add
mov
sub
syscall
jg
jae
leave
data16
loopne
ret
add
and
pusha
jg
into
repz
in
lock
stos
jnp
int3
das
pop
mov
ja
cwtl
jge
sub
cs
mov
adc
pop
cs
pop
dec
cmp
out
aad
mov
daa
mov
inc
inc
jbe
mov
xor
push
or
loope
sbb
pop
sarl
stos
dec
repz
arpl
es
testb
aaa
inc
cwtl
or
cmp
jnp
jnp
rcr
rorb
add
out
jle
push
jae
fisubrs
jg
jecxz
pop
cmp
lcall
and
mov
jns
mov
cmp
mov
add
fldl
ds
or
pop
daa
les
daa
fwait
dec
pop
pushl
mov
lret
out
inc
cmp
push
aaa
and
nop
jo
pushf
add
std
shlb
dec
inc
stc
add
cmp
jl
imul
out
aas
nop
dec
outsb
movsb
xchg
mul
mov
movb
jle
rcr
les
cmp
cs
push
out
jle
stc
popa
or
cmp
dec
pop
mov
push
adc
outsl
jo
lods
das
pushf
xor
mov
pusha
clc
lret
iret
xlat
sarl
push
gs
pop
int3
dec
in
mov
call
scas
xor
adc
or
xor
div
cmp
sbb
and
push
mov
sbb
gs
lock
clc
push
pusha
scas
fstps
aas
jno
and
fstl
addr16
or
push
mov
xchg
xchg
add
insl
pop
jge
mov
add
int3
jecxz
xchg
push
bnd
dec
mov
outsl
dec
ds
mov
js
subl
cmp
inc
arpl
repz
lods
push
bound
pop
out
push
jmp
xor
or
mov
pop
or
dec
decb
notl
popa
inc
pop
rcrb
or
lods
mov
sarl
or
cmp
mov
fwait
iret
sub
mov
dec
rep
lods
mov
dec
add
mov
jns
std
gs
cmp
push
cmp
mov
loopne
movsb
mov
add
add
ja
fwait
clc
enter
es
or
rcll
jge
sbb
cmp
into
enter
xchg
xor
add
imul
iret
fdivr
xchg
sub
arpl
add
aam
test
sbb
jnp
push
sti
inc
and
or
les
inc
cmc
test
fstpt
sub
xchg
movsl
mov
mov
push
orb
pusha
lret
ret
push
jp
in
addr16
adc
test
xlat
add
rcr
fsub
cmpsb
stc
rclb
inc
push
fisubrl
insb
pusha
cltd
cwtl
dec
mul
mov
aaa
or
jle
subl
or
dec
push
cltd
in
fisubrl
xor
dec
sbb
mov
jo
xchg
bound
loop
sub
mov
adc
mov
cmp
pop
or
lcall
mov
bound
adc
cltd
pusha
xchg
dec
ret
into
pusha
sbb
jle
add
sbb
movsb
mov
sub
inc
cmpsl
jg
ds
rol
scas
adc
push
js
lcall
add
mov
cmp
int
adcb
xchg
mov
xor
aam
sti
mov
insb
ret
movsb
int3
je
arpl
data16
inc
das
and
and
adc
lea
jmp
out
int
int
adc
into
pushf
sub
cmp
and
cmpb
je
cli
testb
mov
je
mov
lds
sbb
jp
cmc
inc
repnz
out
mov
fdivr
aas
xor
sub
cmp
pushl
fcomps
movsl
negb
sti
icebp
xchg
cmp
add
xlat
push
lret
mov
cli
out
lea
adc
sub
mov
cmp
sub
out
sar
adc
cld
mov
xlat
out
mov
out
scas
int
movsb
gs
mov
inc
xchg
in
sahf
bound
adc
push
jp,pn
test
dec
fwait
and
xchg
sbb
adc
mov
jmp
pop
sub
jge
sarb
mov
sbb
shll
gs
ja
push
icebp
out
or
jo
mov
mov
rcr
inc
stos
rcr
push
mov
shrb
int3
mov
push
xor
jae
in
adc
mov
xchg
and
fsubl
sarb
xor
outsl
lcall
mov
int3
xor
rcl
xor
adc
pop
stos
mov
push
aad
pop
mov
mov
call
popl
lahf
mov
pop
mov
sbbb
mov
andb
sbb
jg
push
pop
cmpsl
pop
inc
stc
in
jne
jnp
call
add
sti
shll
in
out
xchg
add
fsubl
jl
cmp
lock
cwtl
xchg
lahf
jbe
jle
call
lret
inc
out
js
lods
jmp
sbb
mov
icebp
mov
cmpsb
fwait
repnz
jg
jns
imul
and
scas
dec
test
xorb
xor
dec
idivb
mov
push
shr
lods
jno
xor
in
sahf
lcall
ja
push
cwtl
hlt
repz
movsl
xchg
sbbl
pop
data16
pop
adc
xchg
stc
shlb
or
push
addl
jge
jle
in
add
test
out
inc
jle
cli
mov
dec
stos
xchg
dec
dec
lods
cmpsb
xchg
jle
pop
outsl
mov
inc
mov
outsl
lahf
jg
popl
inc
stos
xchg
imul
mov
inc
mov
xor
add
lock
rcrb
jne
popf
xor
test
pop
push
mov
add
hlt
cmp
sbb
iret
rol
lcall
ljmp
and
push
in
fwait
push
fadds
movsb
jmp
inc
inc
test
pushl
imul
repnz
mov
es
jnp
mov
mov
das
push
inc
push
in
inc
xchg
or
sahf
out
outsb
jae
fldenv
cmc
add
add
mov
es
das
jne
push
fdiv
push
mov
pop
leave
loope
test
sbb
movsb
push
fsubrl
aam
movsl
popa
push
popa
dec
mov
int
pop
sar
or
xor
test
aam
mov
in
pmaddwd
lret
imul
dec
cmpsb
mov
idivb
jb
sbb
add
sub
lcall
dec
cwtl
xor
mov
pop
lret
fs
and
mov
mov
lock
or
and
loope
out
movhps
and
into
addr16
and
add
add
adc
popf
fwait
hlt
cwtl
iret
mov
ds
fmuls
xchg
pop
shll
scas
push
mul
jne
adc
out
das
inc
mov
cltd
push
es
in
or
sbbl
lock
jbe
cmp
testl
je
movsb
imulb
push
test
pop
lods
sub
mov
enter
enter
and
outsl
jo
ret
dec
divps
mov
dec
lahf
and
adc
jle
pop
mov
stos
pop
stc
push
out
in
jne
add
push
pop
shrl
xchg
mov
add
test
xchg
mov
in
mov
out
xchg
xchg
ljmp
sub
hlt
push
mov
inc
les
js
dec
inc
cmp
mov
xchg
dec
and
and
dec
rolb
aam
je
insl
mov
imul
leave
hlt
push
or
inc
push
scas
andb
ds
sub
rclb
push
inc
add
aas
cwtl
pop
jbe
or
mov
in
push
popf
es
arpl
xor
leave
sarb
filds
push
pop
xor
es
pop
inc
inc
fildll
pop
out
push
movsl
mov
jg
scas
movsl
cmp
cs
aad
stos
out
inc
addr16
xor
add
mov
fs
outsl
jae
scas
jno
out
push
pop
add
jb
in
divps
mov
lods
add
xchg
mov
mov
or
cmpsb
add
mov
lock
fwait
mov
mov
jns
sbb
sub
add
mov
mov
push
or
mov
sbb
cmpsb
sahf
daa
lea
jmp
jne
push
sarb
lock
in
in
repnz
and
add
repz
or
arpl
lret
xchg
mov
jnp
sbb
mov
push
rorb
cs
in
push
icebp
or
xor
shrl
popa
cmp
divl
push
call
out
bnd
mov
push
dec
test
add
jmp
pop
enter
int
dec
lahf
int
lods
mov
jb
xchg
in
test
lahf
jb
pushl
adc
pop
pop
ret
adc
or
ljmp
jns
enter
lret
loop
or
xchg
jnp
mov
enter
xor
scas
dec
and
das
incl
lea
fdivrp
push
icebp
inc
sarb
pop
jae
pusha
xchg
xchg
pop
dec
pop
loopne
mov
gs
fldt
xor
cwtl
loope
cwtl
dec
ret
lret
lret
call
outsb
mov
pushw
stos
test
punpcklbw
xchg
sub
pop
aam
sub
fwait
xchg
mov
hlt
xchg
and
aas
dec
push
add
lret
xchg
and
insb
jmp
movl
push
out
out
or
jge
xchg
in
adc
pushl
adc
ljmp
fisttps
jmp
jge
mov
lret
int
push
int
clc
lea
test
cmp
push
jne
mov
rcrl
rolb
add
jg
mov
lret
test
jp
cmp
loope
push
sbb
pop
jnp
fistps
inc
add
gs
mov
shrl
scas
xor
push
adc
or
lock
jbe
idivl
mov
lret
sbb
mov
and
jb
cmc
adc
add
rorl
mov
lcall
cmp
movsl
movsb
pop
jb
data16
in
aas
cwtl
xchg
imul
cs
jp
mov
lret
xchg
jl
sub
push
repnz
fiaddl
shrl
jb
sbb
lret
sub
aas
jl
sahf
dec
aad
int
popa
fsts
xchg
ss
mov
cmp
repz
imul
cmp
icebp
and
xchg
jle
loop
xor
mov
inc
mov
cmc
xlat
xchg
mov
into
sbb
in
stos
cld
clc
aad
jnp
xor
fdivs
iret
bound
lret
es
ret
mov
mov
mov
data16
or
push
fists
or
add
ds
pushf
inc
repz
test
cwtl
dec
stos
and
sub
das
mov
mov
mov
xchg
xchg
lahf
subl
cltd
or
and
sub
lea
cmp
stc
sbb
mov
lods
and
pop
stc
sbb
pop
cmp
sub
aam
ret
xlat
cltd
insl
jle
adc
dec
xor
popf
psubw
dec
cmova
pop
dec
xor
les
in
sub
push
and
jae
sub
cltd
dec
imul
and
xchg
and
call
dec
adc
into
jge
fistl
xor
cwtl
sub
xchg
bound
pop
and
lods
and
in
pop
mov
fwait
iret
loop
nop
mov
scas
test
outsb
add
xchg
ja
dec
int
aas
push
or
mov
dec
in
icebp
jae
cli
inc
aad
dec
gs
xorl
lods
xchg
sub
adc
dec
int
mov
push
arpl
sub
jl
mov
insl
sub
ffree
xchg
push
xor
insb
sub
hlt
dec
imul
icebp
jecxz
adc
jp
in
shl
lds
sbb
imul
cmpsl
cmpsl
cs
ret
aas
rorl
scas
lret
rclb
repz
stos
repnz
add
movsb
fdivrl
lock
daa
dec
mov
fmul
imul
int
jb
out
dec
add
test
mov
lahf
ljmp
fnstcw
pop
inc
ret
popf
dec
fisubrl
sub
dec
dec
imul
shlb
out
lcall
out
int3
sti
jmp
inc
pop
mov
xlat
in
add
leave
push
in
int3
clc
mov
inc
aad
adc
daa
loop
ljmp
adc
xchg
pop
cmp
pushf
aaa
aaa
and
mov
repnz
sbb
push
cmpsl
xchg
fsts
pop
mov
push
push
cmpsl
mov
dec
dec
xchg
add
sub
addr16
and
scas
cmpl
or
pusha
sub
leave
mov
xlat
xchg
ljmp
ljmp
inc
or
and
mov
xchg
xorl
sbbb
cs
pop
pusha
push
bound
scas
cmpsb
rorb
rcll
loopne
mov
cltd
imul
sbb
pushf
mov
xor
add
aas
cs
cmp
fwait
sbb
shlb
or
xlat
jl
dec
aad
fcoms
mov
inc
fiadds
lods
out
mov
call
xchg
incb
adc
sbb
out
dec
sub
jno
add
data16
shlb
ds
sbb
call
mov
pop
movsl
popf
aaa
and
loopne
mov
stos
fldl
and
rorb
inc
mov
xchg
mov
xchg
sbb
cltd
scas
add
data16
mov
out
sub
pop
and
test
outsl
inc
outsb
insl
lret
or
pop
jmp
scas
dec
das
jbe
cmpsl
bnd
sub
pop
das
lret
loope
sbb
fmull
pop
xchg
sbb
xchg
adc
inc
cmc
mov
mov
push
add
jne
mov
cmp
jg
js
dec
inc
mov
addr16
mov
mov
jle
adc
stos
dec
je
ss
shlb
xchg
mov
xchg
out
or
or
mov
mov
fimuls
push
mov
or
int3
pop
or
dec
push
or
scas
ret
lret
into
mov
jecxz
mov
mov
push
movsb
cs
mov
add
xlat
inc
outsb
push
shlb
repz
pop
decl
in
and
or
int
fs
js
push
mov
sbb
sub
mov
rol
dec
divb
loope
lahf
xor
and
jmp
xchg
cld
les
xor
sub
jmp
fistl
mov
add
cs
stc
cltd
mov
outsl
xchg
inc
jle
jl
inc
add
dec
xchg
adc
or
sub
xchg
lock
ficoml
jmp
sbb
cli
inc
jle
inc
sbb
mov
mov
dec
scas
inc
inc
xor
out
icebp
sbbl
xor
jge
pop
cmp
outsb
fcomps
pop
or
jo
mov
push
mov
subb
or
lea
mov
jg
mov
inc
fidivrs
mov
xor
push
icebp
jnp
jl
mov
adc
add
and
clc
bound
mov
and
rcl
divb
icebp
in
push
mov
test
mov
mov
xchg
mov
out
negl
cwtl
aas
sbb
dec
and
fistpll
inc
mov
andl
jmp
mov
popa
das
lods
sti
clc
jne
cmp
pop
shlb
add
sti
ja
pushf
mov
xor
je
out
push
clc
push
inc
push
fstp
sti
inc
or
adc
or
inc
roll
and
ret
jb
push
push
jp
mov
in
call
jle
sub
das
jmp
xor
pop
dec
fs
cmp
pusha
inc
loopne
fs
push
jl
push
inc
cwtl
jbe
jo
or
cwtl
or
nop/reserved
stos
shll
inc
clc
mov
je
jae
adc
xchg
push
mov
sub
or
fildll
fcomps
add
mov
xor
leave
jmp
mov
jp
and
sub
xor
lock
paddusw
fs
push
mov
ss
xor
xchg
and
aaa
subl
mov
mov
frstor
sub
mov
test
out
mov
ret
mov
cld
loopne
sub
dec
gs
je
xlat
pop
cli
fs
pop
pop
out
sbb
ds
fcoms
cmpb
jl
repz
sahf
and
int
sub
push
and
cwtl
adc
dec
sbb
sarb
pop
inc
mov
xchg
push
clc
aas
popa
icebp
xchg
popf
push
incb
xor
inc
or
movsl
and
mov
mov
hlt
push
xor
add
test
cmp
xchg
cmpsb
mov
lock
pop
sahf
xor
fmul
jb
jne
orb
and
shll
inc
push
cmp
xchg
dec
enter
xor
cmp
mov
adc
mov
ret
loop
push
js
xor
xor
push
out
jl
ret
popf
or
movsb
push
cmpsl
sbb
rorl
insb
add
shlb
addb
jle
push
iret
sub
mov
paddusb
js
cmp
mov
lods
cs
rolb
mov
aas
mov
mov
or
addr16
loopne
andl
pop
sbb
jmp
outsb
or
cwtl
leave
or
or
jnp
and
movsb
psubusb
test
repz
sbb
les
sbb
xor
imul
fiaddl
mov
jg
outsl
mov
lret
jo
mov
push
mov
push
or
jo
dec
fdivs
ljmp
mov
adc
mov
movsl
fldcw
xlat
sbb
pop
and
cmp
ret
movsl
mov
movsb
push
or
fcomp
pop
cmpsl
add
dec
push
push
mov
pusha
lret
sarl
imul
outsl
call
ret
xchg
sbb
gs
jno
pop
cmpsl
mov
lods
lret
mov
js
lds
jle
pop
or
add
xchg
mov
roll
xor
in
cmpsb
mov
fwait
pop
jl
in
adc
fiaddl
add
mov
clc
dec
pop
and
pop
int
cmpsb
pop
push
mov
aaa
mov
adc
cmpsl
push
repnz
push
sti
push
out
jno
push
mov
or
fucomi
ljmp
and
fprem1
in
repz
pop
frstor
mov
inc
lods
cmp
sahf
popa
and
lahf
repnz
out
cmp
xlat
out
imul
and
add
sbb
ja
out
push
mov
test
sbb
mov
xor
aam
and
negl
and
jb
or
es
push
dec
fcompl
xor
xchg
int3
dec
cltd
cmp
movsb
or
push
push
std
push
pop
jae
cmc
sbb
sahf
push
dec
scas
pop
dec
fwait
mov
xchg
lods
loope
filds
fcom
add
xchg
cmpsl
lret
aaa
mov
int3
xor
repz
inc
imul
loopne
mov
sub
pop
xchg
xor
xchg
int
fidivrs
jge
mov
pop
nop
adc
xchg
push
sub
jp
and
cmpsb
mov
lock
add
cmp
cmp
jne
ds
cmp
gs
cwtl
fimull
les
xchg
or
iret
fldln2
fists
insb
shll
xchg
daa
std
popa
mov
and
jno
dec
inc
push
sbb
pop
test
or
pop
dec
jge
sub
je
mov
andb
mov
lcall
leave
xor
mov
cmp
cwtl
mov
roll
arpl
repz
cld
lods
pop
out
roll
aad
fwait
out
hlt
mov
ror
out
push
outsb
in
stos
cmp
jg
push
ret
fldl
sub
or
or
sarl
mov
popa
push
hlt
dec
mov
or
ror
mov
pushf
cmp
mov
or
and
in
adc
das
add
fistps
jae
out
rorl
xchg
enter
and
int3
push
imul
rol
dec
and
pop
dec
sub
push
xor
push
jnp
xchg
mov
das
enter
sahf
call
jne
ja
inc
jae
cmpsl
dec
mov
cmpsb
loopne
shll
mov
cld
repz
jae
inc
in
sub
pop
fildl
xchg
xor
shll
sub
sbb
out
mov
or
aam
lods
adc
arpl
push
mov
sahf
adc
loopne
xchg
pop
cmp
fimull
cmp
fildl
cmp
and
inc
mov
xchg
push
movsl
ljmp
jno
or
cmp
stos
jecxz
push
ds
inc
cmp
iret
inc
jne
cmpsl
mov
adc
cmpsl
and
popf
xchg
bound
es
cmc
ficoms
sub
adc
cmp
int
lods
cmc
ljmp
lods
lea
jns
shrb
jb
adc
xor
adc
sbb
fwait
pop
fcoms
pop
mov
int
mov
aaa
dec
cmpsl
xor
rcr
sub
cs
in
inc
cld
aam
cmc
test
stos
sti
cmp
push
pop
lahf
dec
jns
push
adc
fsubrl
movsb
push
aas
aaa
dec
mov
ret
mov
pop
add
lret
mov
sbb
les
in
cmpsb
movsb
cli
add
ret
lcall
inc
int
sbb
in
adc
push
xchg
mov
lods
dec
movsl
data16
dec
cwtl
cmp
cmp
test
js
cmc
or
pop
sbbl
das
mov
inc
sbb
test
lods
xchg
popf
int
movsb
push
ret
pop
outsl
push
sbb
mov
xor
jo
ret
loop
push
push
cmpsl
fsubrs
add
sbb
int
pop
aaa
inc
out
jns
cmpsb
sub
movsl
push
fst
dec
push
dec
inc
fwait
mov
jbe
adc
inc
adc
and
jecxz
shr
or
dec
es
inc
fsts
xchg
pop
rorb
data16
jnp
inc
lret
out
dec
or
mov
out
jne
fadds
bound
in
or
mov
popf
push
es
or
stos
xchg
xchg
rcl
xor
ja
lds
test
je
insl
popa
das
cmp
sub
imul
sbb
enter
sbb
jg
xchg
lahf
adc
cmpsl
mov
inc
call
inc
mov
icebp
mov
pop
sbb
jae
cmpsl
ds
push
mov
adc
stos
add
leave
lods
mov
bnd
pop
imul
jns
fs
test
aas
dec
mov
xchg
xchg
and
push
movsb
xchg
inc
and
xchg
add
inc
or
in
jb
ss
inc
sub
push
cmp
mov
scas
lock
mov
outsl
outsl
fcmovbe
mov
xchg
stos
in
push
mul
jg
pop
sbbl
hlt
sbb
daa
imul
push
inc
leave
test
sti
imul
push
enter
std
in
shrl
mov
clc
fdivl
es
test
insl
in
push
jb
icebp
xchg
call
xor
ja
mov
jns
out
mov
out
sub
mov
mov
out
lock
repz
ss
push
sub
fs
outsb
in
std
inc
sub
stos
notl
sub
cld
imul
inc
iret
xlat
lret
pushf
mov
inc
sbb
jno
dec
jns
cld
mov
sbb
mull
inc
dec
pop
xchg
int
int
stos
leave
sahf
out
loop
outsb
divl
std
sbb
push
sahf
stos
jmp
das
mov
mov
jns
das
int
shlb
jno
pop
mov
cmp
jmp
push
cmp
adc
fisubrl
int
imul
jge
pop
addl
pop
adc
pop
not
xlat
mov
nop
repz
mov
lret
jmp
cmpsl
dec
mov
addb
mov
mov
adc
inc
lods
push
mov
inc
sub
dec
pusha
dec
roll
jb
dec
xor
sahf
cmpsl
mov
pop
push
mov
lahf
pop
loope
imul
mov
mov
sti
in
out
jg
imul
lahf
fisubrl
dec
shrb
inc
inc
shll
push
repz
orb
pop
mov
ret
cld
or
sub
sbb
add
mov
xor
cmp
sub
data16
add
shll
fsubl
testb
jmp
mov
mov
pushf
adcb
jbe
xchg
lcall
repnz
inc
out
mov
dec
pop
out
lods
stos
fidivl
push
mov
push
or
test
call
aad
enter
sbb
or
mov
inc
das
aad
rclb
sub
fsubr
aaa
aad
repz
cmpb
mov
shrb
sti
dec
pop
jle
mov
pop
or
jge
mov
jae
or
ds
test
push
pop
lret
sub
or
divl
mov
mov
add
andb
call
adc
cwtl
pop
outsl
roll
je
jle
sub
xchg
mov
subb
fadds
add
pop
addr16
jb
mov
mov
incl
add
push
test
add
push
dec
xor
std
jecxz
cmp
lahf
jno
mov
cmp
scas
pusha
xchg
aad
dec
jp
xchg
xchg
adc
and
pusha
cmc
rol
sbb
arpl
or
or
fldt
jle
add
scas
sub
out
mov
adc
ret
lret
out
or
jp
mov
inc
outsl
xor
mov
sub
out
lods
add
sti
xor
xchg
push
add
out
insl
in
jecxz
ljmp
add
mov
jno
fwait
jnp
push
jnp
add
and
outsb
in
xor
cmp
jecxz
dec
jb
cld
leave
cmp
shrb
push
pop
iret
mov
add
jl
pop
test
lcall
das
leave
xor
test
add
lcall
mov
popf
shr
aas
arpl
add
pop
and
add
ja
cmp
xchg
outsl
data16
jge
hlt
out
xor
pop
aaa
cmpsl
nop
inc
add
mov
and
decb
inc
mov
pop
in
mov
jp
sub
push
xor
mov
xchg
jno
jge
xchg
stc
mov
cmp
dec
adc
loope
mov
mov
xlat
xor
xor
lahf
iret
scas
nop
lret
jg
enter
jae
sbb
adc
iret
or
leave
cs
mov
push
jg
test
jl
pusha
lcall
or
pop
adc
hlt
mov
sahf
cmp
adc
mov
dec
es
xchg
fimuls
jno
xchg
lods
cmpsl
ss
shr
mov
lret
or
pop
shlb
daa
sub
jg
js
jle
mov
dec
adc
andl
test
dec
mov
adc
fimuls
xchg
fisubl
add
mov
jo
jmp
xor
cmp
into
mov
popa
stos
imul
pusha
mov
aaa
mov
mov
or
mov
cmp
jecxz
scas
cltd
movsl
jmp
je
into
mov
andl
sbb
test
leave
adc
mov
addr16
mov
jns
daa
push
jb
push
ds
movb
push
sahf
push
adc
xor
stc
and
mov
call
mov
popl
mov
mov
test
xchg
sub
xchg
cmp
out
out
add
mov
lahf
dec
pop
mov
jmp
cmp
movsl
add
cltd
enter
inc
sub
pop
mov
hlt
dec
arpl
test
fcmovnbe
xchg
aam
in
cmp
subl
addl
and
fnstsw
jp
pop
loop
xor
jl
sti
mov
pop
or
inc
xlat
out
cmp
enter
dec
push
push
minps
orl
add
mov
pop
dec
sbb
xchg
mov
outsb
out
push
pop
inc
test
inc
iret
sub
mov
sbb
ret
test
clc
mov
fsts
mov
push
scas
inc
xor
xchg
pop
lods
jl
divl
xchg
lret
lea
pop
fidivl
ja
mov
sub
and
mov
repz
push
sarl
jp
or
loope
ljmp
jge
push
mov
rcl
and
iret
shlb
test
hlt
adc
cltd
movsl
je
mov
cmp
pop
xchg
cmp
aad
jns
lcall
pop
repz
pop
loopne
test
xchg
jl
mov
inc
lret
gs
insb
andb
sbb
cmp
dec
inc
mov
jl
ror
inc
out
dec
lcall
xchg
test
addb
div
lea
cmpsb
xlat
cmp
fadd
add
das
mov
and
sbb
adc
out
lods
in
sub
arpl
pop
pushf
fsubl
inc
mov
scas
lock
cli
cwtl
rcl
jno
je
inc
jns
push
in
mov
dec
pushf
inc
call
mov
mov
fcoml
addr16
rol
hlt
xor
xor
scas
lock
sbb
cld
jno
xor
sbb
orb
scas
in
sbb
clc
push
shll
xlat
clc
xor
pop
clc
rclb
push
cwtl
sbbl
mov
lahf
sahf
out
mov
cmp
mov
inc
int3
push
cwtl
int
cmp
pop
xchg
or
add
aam
mov
xchg
test
add
aas
in
movsb
js
push
pop
test
cmp
fldl
rsqrtps
popl
sbb
push
and
loopne
sbb
stos
into
or
std
std
shll
sahf
jnp
or
mov
insl
or
mov
mov
xor
in
stos
dec
shrl
lock
add
in
popf
xor
pop
xor
mov
into
mov
push
fwait
mov
pop
push
loop
sbb
loope
jb
mov
jle
mov
sbb
lea
insl
arpl
sbbl
sub
cmp
repnz
push
mov
stos
addl
dec
xchg
jl
mov
jmp
sub
les
or
jae
andl
dec
icebp
ja
arpl
ret
push
clc
jnp
outsb
stos
dec
mov
in
jnp
notl
sbb
repnz
mov
dec
or
push
iret
mov
mov
out
xor
ret
clc
aaa
ret
sbb
gs
fucom
aaa
push
inc
popf
paddusw
stc
rclb
shll
cmpl
jae
cld
loop
xchg
or
outsl
sub
jmp
xchg
or
cmp
mov
icebp
lock
inc
xchg
iret
out
stos
ljmp
pop
cmp
stos
bound
dec
xor
insl
mov
icebp
jecxz
sahf
mov
fistpl
jge
jo
cmc
and
mov
dec
inc
xor
push
jg
sar
inc
mov
imull
addl
pop
xchg
mov
xor
jb
mov
test
call
pop
loop
fbld
jecxz
xchg
jb
cmp
popa
or
mov
mov
xor
pushf
or
inc
add
movsl
aam
dec
add
ja
jmp
call
fsts
xchg
pop
in
adc
lret
pop
pop
nop
push
pop
sysexit
pop
outsl
pusha
mov
es
adc
in
in
sbb
dec
ficompl
push
sbb
stos
adc
pop
add
pusha
ds
sbb
cmpsb
push
insl
out
out
scas
jo
push
jg
adc
dec
xlat
shll
jae
imul
insb
xchg
jg
xorb
sub
imul
lock
idivl
aaa
push
push
xchg
mov
cld
inc
orb
imul
imul
aad
repnz
sbb
out
xor
pop
div
mov
dec
aam
mov
inc
lea
je
pop
mov
stos
into
cmp
pop
mov
jo
push
scas
cwtl
inc
stos
sub
mov
xchg
insl
pop
jp
dec
cmpl
movsb
xchg
xchg
dec
fwait
testb
xor
mov
and
xor
sbb
bound
outsl
mov
xchg
jl
add
xchg
mov
out
push
xchg
push
push
loop
jne
jne
jno
icebp
std
stc
mov
jnp
and
leave
add
je
sbb
or
incl
mov
xchg
and
or
mov
enter
int3
pusha
jl
mov
push
sbb
ret
jecxz
fs
in
or
shll
push
cmp
js
loope
mov
xchg
shlb
cmp
push
rclb
push
fs
aam
cli
add
outsb
iret
loope
movsb
addr16
inc
repnz
repnz
pop
imul
sub
nop
mov
jne
jno
sbb
std
add
test
jmp
mov
sti
adcl
inc
and
mov
in
add
sahf
inc
jl
jmp
mov
into
push
cwtl
lods
sbb
outsb
int
mov
sub
lods
xor
inc
inc
bound
jg
xor
lret
mov
pop
or
push
or
outsb
and
lcall
movsb
lods
xchg
mov
mulb
jle
shrb
pop
inc
mov
call
mov
jne
insl
cmp
adc
mov
sbb
arpl
iret
jbe
rol
inc
jb
jo
lds
and
or
pop
add
mov
mov
xchg
xchg
in
aaa
hlt
xor
negb
inc
repnz
fsub
push
inc
and
inc
aam
data16
inc
mov
dec
outsb
outsb
stos
sub
dec
les
sbb
flds
les
dec
sbb
outsb
arpl
push
jl
and
hlt
xchg
or
stc
dec
ds
inc
dec
cltd
or
popa
cmp
mov
adc
mov
sbb
sbb
sub
cmp
mov
push
insb
clc
add
cwtl
mov
rclb
adc
xchg
adc
test
popa
mov
imul
lods
lcall
ret
cs
sub
adc
xor
mov
mov
add
jno
cmp
dec
out
ret
ja
in
insl
das
push
cwtl
mov
pop
push
enter
out
push
xorl
les
mov
adc
and
into
jb
mov
sub
aad
mov
mov
inc
pop
push
test
add
jb
adc
sub
dec
arpl
pop
js
inc
mov
stos
xchg
outsb
sbb
or
push
in
les
cld
jl
mov
pop
add
fwait
jge
xchg
dec
mov
or
cmovns
xchg
adc
xchg
dec
push
lods
and
dec
outsl
fsubrl
aad
adc
ljmp
jl
sub
inc
xor
xchg
jge
pop
xor
sub
je
popa
adc
push
mov
xchg
or
call
push
push
add
jp
add
aaa
adc
mov
sub
mov
or
sbb
mov
dec
lds
mov
in
dec
xchg
in
cltd
cmp
inc
sub
pop
lea
cmc
push
adc
and
cmp
lret
and
shlb
sub
cmp
jecxz
dec
cmp
jg,pt
out
inc
push
sub
dec
push
or
out
xchg
dec
push
sub
mov
movsb
jmp
idivb
mov
cmp
add
rcr
and
imul
out
popl
mov
cmpsl
jae
loope
push
pop
inc
cli
aaa
popf
popf
pop
push
inc
xchg
lods
sub
inc
jno
jb
xchg
jle
and
mov
ss
cmp
sub
loopne
mov
push
loopne
jns
hlt
lahf
mov
mov
adc
fsubr
mov
push
xor
pop
paddsb
imul
outsb
or
sub
xlat
ret
pop
xlat
mov
movsl
je
xchg
jns
aad
subb
jne
mov
xor
xchg
mov
push
sub
inc
pop
ja
fcomps
mov
je
xor
mov
out
sarl
mov
mov
add
mov
and
xlat
cs
jae
add
mov
rcl
dec
out
mov
enter
push
jmp
dec
mov
repz
dec
pop
xor
mov
ljmp
fst
sbb
ljmp
hlt
jge
add
mov
sbb
add
dec
div
cmp
int3
int
test
scas
sbb
mov
jbe
push
xchg
stos
sbb
mov
lods
test
mov
sub
enter
call
xor
shlb
and
adc
jo
xor
icebp
jnp
scas
adc
mov
push
add
data16
aad
xchg
mov
mov
push
and
shlb
jb
jle
ficomps
dec
push
in
cwtl
jmp
frndint
sti
xchg
out
test
sub
or
jecxz
xor
jl
jns
pushf
imul
push
xor
call
dec
mov
fwait
je
movsl
bound
mov
sub
fs
aam
pop
or
test
mov
lahf
enter
jno
push
es
daa
xor
push
pop
push
xor
arpl
sub
data16
mov
mov
dec
sub
ja
add
push
cmp
pop
xor
xchg
adc
iret
dec
movsb
mov
pop
jb
pushf
rolb
cmp
push
aas
inc
fsubrp
sbb
daa
hlt
testb
dec
push
iret
pop
mov
daa
fnsetpm(287
adc
and
xchg
jge
movntps
sbb
inc
pop
sub
sahf
into
push
mov
call
xchg
hlt
leave
inc
stc
jno
mov
pop
in
dec
shrb
das
imul
xchg
fcmovnbe
aas
push
xchg
xchg
daa
xor
add
pop
adc
adc
inc
das
add
sub
mov
fcmovbe
in
push
and
dec
lea
ret
cmp
cmpsb
ds
ret
cmp
sahf
enter
cmp
ss
mov
shlb
sti
mov
leave
orps
test
ret
cs
xlat
or
adc
push
inc
or
jno
ljmp
lret
ret
sbb
jg
clc
loope
loopne
ss
shrl
lock
repz
mov
sti
sub
jp
stc
fisttpll
fwait
sub
xlat
fiadds
adc
inc
push
in
or
leave
or
xchg
sbb
dec
inc
rclb
mov
call
nop
addps
rep
mov
and
inc
jns
and
popa
std
rolb
lods
fwait
mov
mov
jl
cmpsb
jb
cwtl
xchg
scas
popf
insl
jbe
shl
inc
cmp
xor
jl
pop
sbb
sub
or
rcll
cmp
mov
rolb
es
out
arpl
mov
scas
lret
lods
mov
jns
mov
push
mov
cmpsb
adc
pop
out
mov
dec
repz
ror
aaa
add
fmull
lea
lock
push
lahf
dec
push
bound
pop
pop
pop
mov
cmpsb
fsubrs
ret
adc
mov
iret
xor
pop
cmp
cmc
je
mov
pop
sub
xchg
and
inc
mov
repnz
mov
scas
mov
data16
jge
lods
add
ret
sub
jne
mov
addl
push
test
scas
push
stc
jg
jb
cmp
pop
in
hlt
lods
add
shrb
in
mov
fdivrs
xchg
jle
pusha
mov
mov
sbb
loop
cwtl
fscale
mov
mov
mov
test
add
mov
sub
stos
and
dec
cld
sbb
dec
inc
and
inc
js
add
jp
jl
bound
mov
cltd
dec
sbb
add
dec
push
xor
les
fcompl
lret
push
sub
inc
cli
ds
sub
sbb
test
das
push
rol
fwait
mov
fcoml
lods
or
rcrl
incl
push
xor
loopne
jg
outsl
ss
mov
fs
js
rclb
testl
sbb
pop
call
out
jns
push
dec
sub
push
xor
cmpb
jae
mov
adc
push
fstl
mov
inc
xchg
scas
addl
jb
pop
mov
in
push
sarb
or
xorl
xor
popa
ret
sbb
stos
cmp
adc
jbe
scas
ja
sbb
sar
lcall
mov
cmp
adc
lea
addr16
popa
repnz
imul
sub
cmp
pop
adc
mov
scas
out
mov
mov
stc
mov
and
xchg
jg
lret
lock
test
test
mov
lods
bound
inc
int3
dec
push
pop
sbbl
jae
dec
push
je
into
icebp
shll
nop
push
loop
mov
mov
or
jmp
mov
loope
add
or
stos
cmpsb
mov
mov
je
cltd
mov
and
mov
ljmp
out
mov
xor
adc
jg
or
push
ljmp
inc
cmpsl
inc
add
mov
iret
cmpsl
push
sub
mov
out
jns
popl
ss
push
cli
xchg
in
out
shrl
fdivp
add
cmp
push
xchg
pop
sbb
out
icebp
test
es
into
xchg
test
pop
cmp
cltd
jp
adc
lea
addr16
movsl
fadds
add
push
jbe
fildl
lret
cmp
loopne
xor
inc
arpl
les
push
repz
fldt
fcmovnb
addb
xchg
lock
mov
pop
les
js
mov
repnz
xor
xchg
or
push
and
out
adc
mov
add
dec
stc
pop
jae
pop
arpl
mov
cmp
nop
imul
aad
mov
mov
lock
sbb
dec
and
test
cs
xor
es
xchg
repnz
sub
xor
fs
movsb
sbb
fwait
lcall
pushf
cmc
adc
lods
or
stc
mov
xchg
mov
push
jno
jl
jmp
sbb
in
xchg
mov
add
jae
int3
dec
pop
cmpsl
cmp
repz
cmp
shlb
dec
push
lods
popf
or
dec
push
inc
dec
cmp
lcall
xor
fstpl
sbb
out
mov
xchg
stc
push
es
sub
pop
lret
imul
or
jg
and
inc
jmp
inc
push
lea
inc
rcr
mov
loope
cmp
mov
mov
gs
push
mov
lods
mov
mov
pop
cmp
out
out
mov
dec
and
cmc
movb
outsl
and
cmpsb
cmp
or
fcoml
frstor
mov
push
sbb
fwait
iret
push
loopne
jle
mov
outsl
shrb
sub
mov
loopne
and
pusha
mov
jb
mov
add
repz
jle
pop
mov
or
adc
sub
in
cmc
das
leave
out
jbe
imul
inc
xchg
jbe
das
insb
and
fwait
lret
push
push
xor
aaa
mov
movsl
stos
pop
dec
loop
call
ss
pop
or
arpl
out
mov
or
lea
xchg
les
dec
hlt
jbe
and
cmp
xor
push
jp
mov
mov
mov
aas
ror
mov
clc
ret
out
leave
xor
and
inc
dec
stos
mov
xor
clc
push
movl
adc
adc
pop
mov
sahf
pop
inc
cld
sbb
ja
or
test
sti
stos
dec
jae
xchg
mov
xor
sub
cmpsl
push
shll
out
in
pop
xchg
sub
push
or
cmp
je
jb
out
movsb
jg
fdivl
movsb
sub
lcall
mov
fstpl
push
shll
push
adc
sbb
dec
sbb
sbb
gs
jo
add
mov
lret
cmp
mov
adc
or
loopne
leave
idivb
daa
or
arpl
push
fiadds
pop
mov
sti
rorl
fcom
leave
in
lods
xlat
hlt
jg
xor
loopne
xchg
in
and
ret
push
repnz
in
sbb
mov
xchg
je
xchg
xor
lock
movsl
ds
push
in
es
lds
fsubr
outsb
je
aas
cmc
insb
dec
add
mov
mov
ds
xchg
dec
test
aaa
and
adc
inc
pushf
push
imulb
ds
jne
add
bound
jnp
lea
xchg
mov
pop
movsl
pop
adc
shr
mov
inc
in
repz
cmpsl
push
test
imul
pushf
adc
lock
xchg
push
mov
in
clc
idivl
fiadds
mov
popf
rorl
push
sub
out
push
adc
add
pop
adc
pop
imul
jns
push
xor
sub
add
sbb
lea
ret
mov
call
push
flds
fdiv
lcall
in
out
xchg
dec
push
out
jnp
sahf
mov
push
push
cmp
jmp
adc
xor
icebp
push
idivb
jg
test
cmpsb
adc
sub
or
leave
repz
or
push
cmpsl
lock
lea
dec
or
cmpsl
cmc
dec
hlt
lock
or
cmpsl
mov
adc
mov
pop
sbb
and
and
hlt
lea
lds
push
data16
in
pop
pop
push
lods
cmp
loopne
add
aam
mov
shld
adc
arpl
sub
push
sbb
push
aaa
cmc
rcr
fwait
push
jge
dec
dec
mov
push
pushf
add
and
jge
ret
rclb
in
cmp
in
aam
pop
mov
inc
int3
mov
lods
ds
pmaxsw
bound
mov
mov
sub
cmpsl
popf
sbb
daa
dec
push
or
jbe
sub
sbb
sub
cmp
mov
mov
mov
adc
loop
dec
scas
inc
xchg
js
cli
mov
sbb
mov
mov
outsl
pop
rorl
iret
sub
add
mov
aam
dec
aas
pop
add
sub
sbb
ret
mov
leave
lret
mov
push
cs
idivb
jnp
mov
or
push
jmp
pop
inc
sub
lods
ret
rcl
bound
mov
arpl
roll
hlt
mov
mov
pop
lahf
jmp
mov
push
in
cmpsb
hlt
shll
sti
outsl
popa
xchg
cmp
jbe
jae
adc
jecxz
sub
pop
popa
out
and
adc
push
roll
std
or
repz
rolb
sbb
stc
add
xor
push
sbb
shll
pop
xchg
xchg
jno
jae
imul
icebp
xor
fnstsw
sbb
lahf
popf
push
scas
std
enter
fcomip
push
pop
bound
jp
rcrb
cwtl
and
adc
outsl
dec
jge
ss
mov
fbstp
pop
fs
mov
pop
outsl
pop
push
loop
xchg
and
inc
xor
insb
mov
sbb
add
popf
mov
sub
dec
ret
les
fs
push
dec
in
das
lods
out
mull
popf
mov
ret
int
dec
inc
lcall
dec
mov
scas
push
das
push
xchg
dec
stos
xor
xchg
mov
into
sar
fistpl
inc
movsb
icebp
adc
rclb
dec
mov
mov
push
jge
ljmp
sub
into
adc
mov
xor
adc
push
bound
test
fadds
mov
or
cmpsl
daa
inc
stos
stos
jge
sbb
ja
inc
pop
jp
jl
jmp
cmp
inc
sub
fsincos
add
jge
fwait
pop
in
ds
mov
dec
enter
inc
and
sbb
pusha
fidivrl
loope
repnz
mov
dec
pop
insb
pop
cmc
or
loopne
push
inc
or
adc
adc
sbb
add
pop
jno
sub
ficoml
xchg
mov
sub
add
or
outsb
and
push
sbb
push
cli
das
and
iret
fistpl
inc
add
pushf
cmpsl
repz
sbb
and
push
sub
mov
xchg
or
dec
push
jo
rorb
jle
xor
icebp
fsts
xor
faddl
mov
sbb
jge
shl
fwait
xchg
movsb
xchg
xchg
ja
js
fidivrl
xchg
out
stos
mov
pop
pop
cmc
shlb
loopne
mov
jp
or
ffreep
fcmovnbe
scas
mov
sbb
aas
outsb
and
sbb
sub
push
shlb
xchg
adc
test
mov
xchg
sar
mov
jp
sub
push
iret
bound
mov
data16
in
mov
mov
dec
popa
movsb
fiaddl
fidivs
inc
je
imul
ja
daa
fdiv
pop
andl
daa
pusha
ret
mov
dec
push
push
lcall
mov
sub
hlt
push
es
pop
push
push
test
shr
sub
pushf
rcr
mov
mov
outsl
idivl
ret
fucomi
push
xor
insl
pushf
repz
rorb
in
push
inc
jl
xchg
or
fs
call
mov
xchg
out
cmp
dec
mov
fwait
insb
das
dec
in
or
pop
insb
dec
sub
popf
sarb
and
aaa
lds
jp
pop
fnstcw
dec
in
or
sub
repz
test
dec
imull
in
loope
incb
sbb
outsb
jne
sbb
movsl
and
cli
pop
in
cmp
xchg
sub
push
subb
jb
mov
call
cmpsb
out
lods
xor
dec
inc
and
mov
dec
jnp
icebp
mov
cli
pop
mov
test
sub
fs
pushf
repz
cmp
mov
js
ja
add
pushf
push
pop
stos
mov
insl
xchg
mov
in
xchg
js
cmpsl
xchg
dec
inc
sbb
xor
subps
or
pop
adc
adc
fcomps
adc
xchg
push
mov
pop
lea
ljmp
mov
mov
cli
stc
repz
out
sbb
mov
xchg
int3
sub
mov
push
xchg
hlt
stc
cmpsb
ret
or
sti
hlt
pop
sbb
stos
lock
cmp
fisubs
add
loopne
ret
dec
lret
cmp
inc
mov
je
fldenv
xchg
stc
nop
inc
loope
repnz
mov
stos
aad
stc
stos
cmp
inc
aaa
and
adc
mov
sbb
seta
and
scas
mov
mov
das
push
subl
mov
mov
lock
test
dec
jb
mov
pop
adc
pop
inc
fisubrl
aas
push
imul
fldln2
nop
subl
jno
pop
inc
and
mov
test
pop
out
shr
ss
lods
sub
xor
sub
incb
jmp
or
pop
jae
imul
test
sbb
fsts
and
jae
cld
mov
scas
mov
loope
test
sub
imul
and
movsb
cmp
xchg
push
lea
mov
addr16
mov
ret
xchg
jne
lcall
pop
aaa
addr16
lods
rclb
push
and
movsb
inc
inc
daa
mov
loope
sbb
push
cmp
shl
cs
in
add
xor
into
and
and
push
cmp
mov
adc
movsl
mov
xchg
cli
adc
imul
pop
js
scas
xchg
mov
mov
mov
dec
mov
pusha
or
inc
sbb
js
popf
adc
clc
xchg
jnp
xchg
jae
rclb
insl
testl
xor
fldl
lret
sbb
jb
mov
pop
and
pop
jae
fbstp
and
lret
pop
scas
out
cmp
test
jne
sbb
mov
ret
cli
push
dec
dec
sub
ret
test
mov
fldl2t
cmc
and
pop
aas
xor
add
movsb
xchg
xor
mov
dec
xchg
imulb
pushf
test
mov
mov
and
in
call
sub
jecxz
push
adc
xlat
push
jecxz
pop
push
cmpsb
clc
aaa
sub
fidivrl
jno
sub
popa
mov
mov
out
sub
mov
sbb
mul
and
push
xchg
scas
mov
clc
jp
out
gs
shlb
pxor
nop
dec
mov
mov
jl
sbb
shrl
fmulp
cmp
jle
jmp
test
mov
push
sub
pop
mov
xor
je
pop
or
loop
xlat
iret
mov
sbb
push
pop
lods
fbstp
jb
cmp
fdivl
pop
mov
daa
scas
dec
int
mov
mov
add
dec
push
add
imul
icebp
leave
cmp
mov
cld
jmp
bound
mov
popf
mov
clc
ja
ret
loop
stos
hlt
loopne
inc
sub
fwait
mov
in
sub
mov
sbb
mov
and
pop
pop
push
lahf
mov
jge
add
sbb
outsb
dec
jb
into
leave
or
stos
rcr
sub
push
test
dec
shl
ljmp
push
or
add
orb
repnz
lock
lcall
ret
xchg
add
into
lcall
iret
jnp
jle
xchg
dec
out
inc
push
dec
mov
xor
in
xlat
push
pop
cmovl
aam
lret
or
frstor
xor
rorb
sbb
dec
adc
adc
inc
stc
cmp
loopne
dec
fiadds
add
mov
jge
into
dec
add
inc
mov
jo
subb
sub
sbb
repnz
adc
and
pop
stos
push
shrb
sbb
add
pop
inc
lcall
js
inc
int
jecxz
jmp
inc
dec
popa
sub
pushf
push
dec
icebp
jecxz
mov
call
sub
mov
scas
not
sub
adc
pop
ja
xchg
mov
imull
xor
jl
enter
push
adc
jp
push
xor
or
aad
mov
xor
gs
jbe
ljmpw
and
mov
stos
dec
push
jle
stos
pop
mov
stos
mov
push
add
dec
rclb
popf
push
pop
roll
xchg
shrb
jno
jae
loopne
cmp
mov
fcoml
fldcw
stc
mov
add
js
push
push
test
pop
mov
ror
aam
fsubs
adc
push
into
lds
or
inc
mov
fcoms
fidivrs
dec
clc
insl
js
pop
fsubp
jg
dec
jmp
xor
gs
jp
test
scas
push
sbb
aas
pop
pop
mov
in
xor
imulb
fnclex
lea
sbb
push
repnz
sahf
adcb
and
pushf
sbb
fdivl
cltd
inc
loope
jne
notl
lcall
xchg
xchg
pop
aad
call
ja
pop
out
jns
mov
xor
popa
movsl
test
pop
mov
sbb
mov
cli
fstp
stc
push
test
inc
testl
dec
bound
add
imul
adc
inc
or
push
insl
sub
int3
xchg
gs
inc
shl
je
negl
das
rcrl
lods
arpl
popf
dec
sub
fs
push
incl
cmp
mov
push
mov
mov
xor
gs
and
test
sbb
inc
adc
in
sbb
mov
sbb
mov
fs
dec
cmp
fisubrl
adc
scas
dec
in
addr16
outsb
dec
fisttpl
cltd
sbb
xor
inc
adc
xorl
loope
push
pop
cmp
mov
loop
jmp
fisubl
int
sub
insl
popa
dec
int3
mov
mov
pop
sbb
lods
push
add
or
pop
and
lds
testl
sarl
loope
dec
frstor
sbbl
jb
shl
movsl
aad
or
mov
xor
loopne
daa
sub
cmc
mov
sarl
addl
push
addb
fbld
out
mov
xchg
andl
mov
and
nop
pop
fnstcw
mov
aas
aaa
cmp
inc
mov
imulb
jle
mov
jo
lcall
xor
sbb
dec
xor
mov
nop
lret
scas
mov
repnz
das
mov
les
movsl
in
loopne
aaa
xchg
or
lock
xchg
pop
out
ja
jl
sbb
jl
in
jae
mov
jl
xchg
jmp
xchg
sub
fbld
and
test
sub
sahf
inc
xchg
cmp
icebp
aad
xchg
pop
lds
add
je
jmp
in
mov
or
sub
mov
insl
and
inc
sbb
imulb
pop
sbb
repnz
mov
adc
add
call
fs
jecxz
pop
pushf
shlb
daa
xor
ret
pop
xchg
adc
xor
fiadds
in
ficompl
cli
jne
cmpsb
and
fldenv
sub
mov
or
cltd
jge
lret
inc
movsl
out
xor
ficomps
cmp
mov
xor
imul
test
xchg
mov
push
sahf
repz
cli
jae
xor
lcall
aas
sbb
cmp
xchg
mov
mov
pop
mov
sbbb
add
or
sub
sbb
adc
enter
out
and
mov
adc
cltd
fs
mov
adc
cld
inc
std
xor
jp
out
decl
les
bound
ss
and
jne
aad
push
mov
jmp
inc
in
bound
movsl
push
ret
inc
jbe
push
into
test
and
xchg
adc
cltd
lods
adc
movsl
lahf
shlb
stc
mov
dec
jecxz
out
dec
jne
or
dec
subl
shrb
jge
pop
dec
enter
mov
mov
adc
mov
sbb
xchg
fxam
pop
lds
sub
xchg
dec
inc
cld
lods
and
stos
add
cmp
in
mov
loop
mov
cmc
jne
fcompl
sub
sbb
fisttpl
ficomps
fisubs
mov
lahf
push
cmpsb
outsl
out
dec
mov
std
jae
cltd
jbe
adcb
dec
test
pop
dec
inc
xchg
dec
fcomi
lret
hlt
push
jp
fcoms
fimull
cld
das
xchg
or
jne
jno
rcl
fs
in
jp
inc
movsl
shlb
sbb
in
mov
enter
fwait
lods
insl
shl
in
cli
addl
mov
pop
pop
iret
out
stos
mov
fidivl
mov
mov
xchg
loop
mov
sbb
frstor
sbb
sbb
add
push
daa
nop
std
cmp
decb
inc
mov
scas
das
repz
jae
xchg
dec
pushf
xor
jg
dec
mov
sbb
dec
sti
lock
adc
push
dec
cwtl
sbb
cmp
fisttpll
push
outsl
iret
call
pop
xor
xchg
sub
rorl
sub
adc
iret
ja
subl
push
int
aaa
ret
inc
push
or
push
sub
inc
rorl
mov
mov
stos
fidivrs
push
fsubrl
fidivrl
mov
popf
lds
in
outsb
mov
stos
daa
insl
cltd
pop
idivl
js
mov
adc
inc
push
sub
jle
sbb
stc
dec
and
pushf
shrb
push
rorb
pop
lds
sub
sub
in
pop
aaa
pop
xor
in
xor
aad
test
pop
pusha
xchg
push
jb
fs
fstpl
and
aas
mov
mov
or
arpl
popa
inc
movsb
movsl
scas
mov
push
pop
daa
push
inc
add
pop
rolb
fildl
sahf
mov
fsub
inc
or
test
sahf
dec
int3
fnsave
in
and
xchg
out
jp
lret
jb
leave
call
movsl
dec
inc
clc
shll
cmp
nop
mov
cmp
xchg
mov
xor
or
movsb
into
movsl
stos
pop
xlat
es
imul
adcb
xlat
pop
iret
lret
sub
mov
out
lock
fists
not
push
adc
lock
mov
int3
shl
push
ss
cmp
pop
es
insb
mov
loopne
dec
cmp
pop
push
ret
mov
fmull
lods
xor
cld
lock
fimull
pop
inc
cmc
sbb
outsb
add
inc
aad
or
in
adc
xor
cmpsb
xchg
inc
cmp
dec
xor
les
lcall
sbb
and
and
popf
cmovg
mov
mov
add
daa
cmp
pop
and
cmp
imul
pop
cs
mov
or
xchg
insl
fmul
adc
sbb
sbb
loope
mov
cmp
fsubrl
out
out
divb
out
and
insb
das
lret
sub
jl
inc
cmp
mov
roll
push
cmp
popa
mov
testb
mov
repz
jbe
lahf
and
sbb
stos
in
cmp
sub
jb
lcall
js
fwait
xchg
jo
xlat
int3
mov
push
xor
call
jbe
addr16
subb
nop
es
iret
cs
pop
enter
push
mov
push
lock
xchg
cli
adc
xchg
jnp
mov
std
inc
mov
movsb
mov
loope
xchg
sahf
inc
fcompl
popl
cmpsl
jg
loop
fwait
sbb
add
lods
stos
scas
xor
scas
mov
sub
push
mov
mov
push
xor
out
dec
jno
sti
les
xchg
or
lods
out
fidivrl
xchg
imul
and
and
lea
aad
es
fcoml
icebp
push
test
bound
ds
scas
and
xchg
or
jmp
dec
mov
mov
mov
lods
jb
cmpsb
sbb
lds
adc
cmp
xchg
icebp
shlb
mov
cli
pop
sbb
filds
push
xchg
das
push
outsl
shll
scas
pop
in
adc
push
xchg
xchg
in
rorl
subb
fs
pop
jge
out
cmpsb
mov
adc
and
loope
adc
xchg
enter
lea
mov
lock
sbb
xchg
fnsetpm(287
sub
jle
pop
mov
fwait
stc
jbe
mov
add
sub
add
or
cs
mov
xor
sub
cmc
shlb
push
adc
call
das
clc
jae
jae
orl
mov
addr16
jle
fcomps
adcb
pop
scas
mov
cwtl
lret
stc
daa
aas
cmpsb
fdiv
mov
xchg
fs
dec
pushf
ret
pop
out
pop
xchg
adc
addr16
and
jl
sub
sbb
imul
stos
push
lret
push
mov
adc
int
testl
mov
mov
shll
pop
fcoml
loopne
sbb
xor
push
pop
sub
jmp
call
ret
pop
jge
daa
cwtl
out
xor
adc
xor
sub
sub
mov
out
insl
pop
lea
adc
and
jbe
pop
jecxz
pop
lret
xchg
pop
bts
pusha
neg
dec
nop
lret
adc
dec
out
dec
fs
shrb
cs
repnz
gs
lods
and
imul
je
shrb
jno
jae
insl
mov
pop
pop
mov
mov
cmp
cltd
mov
push
fs
or
insb
addl
dec
stc
fistpl
jmp
fs
jg
lods
sub
movsl
jmp
rclb
mov
mov
add
sub
test
ljmp
aaa
and
vpsrlw
in
xor
mov
sub
jge
inc
mov
loopne
fsubl
push
dec
test
mov
jns,pn
ret
repz
scas
or
or
xor
dec
push
xchg
cmc
mov
cmp
mov
xor
in
add
mov
jno
pushf
mov
ljmp
or
rorb
dec
add
push
xor
adc
outsb
sarl
dec
dec
aam
and
pop
inc
push
call
sbb
mov
add
into
xor
mov
add
sub
mov
xor
inc
xlat
push
enter
clc
push
xorl
pop
in
sub
lcall
mov
mov
pop
mov
jmp
push
push
pop
xor
fcmovbe
sbb
sbb
fisubs
ss
mov
inc
xor
cmpsb
mov
mov
sbb
mov
mov
push
add
cmpb
leave
and
cld
decb
dec
mov
lds
sbb
adc
addb
bound
jg
mov
shlb
jmp
sbb
aas
imul
andb
jmp
lods
loopne
in
mov
in
int
dec
jecxz
mov
test
gs
popf
lret
mov
aaa
and
and
loopne
cmc
adc
sti
insb
pusha
cmc
cli
jecxz
shrb
jnp
cltd
movsl
dec
ja
adcl
lret
jge
mov
push
in
jb
pushf
jecxz
aad
pop
dec
xor
mov
pushf
mov
lds
sbb
insb
or
pushf
lods
shll
jmp
mov
jno
dec
sub
loopne
mov
pop
push
int3
mov
and
add
jae,pn
push
jge
fldl
cmpl
fildll
in
notb
or
jne
imul
gs
mov
ret
inc
mov
pop
or
inc
inc
jo
vpaddusw
mov
js
ljmp
mov
scas
lcall
mov
test
sbb
cmp
sti
xor
sahf
sbbl
or
cmpsl
cmp
and
inc
sbb
and
xchg
repz
ficompl
stos
cld
xor
jl
imul
fidivrs
xor
jbe
and
push
lcall
arpl
inc
pop
push
and
into
sbb
xlat
xchg
sub
lret
sub
xchg
jecxz
pusha
sub
es
mov
cmp
mov
pop
insl
shlb
jne
push
adc
add
cmp
cmp
lea
mov
icebp
mov
mov
add
push
jne
ds
cmp
movsl
xchg
ja
sbb
ljmp
inc
cmpsb
mov
js
popf
sti
or
inc
mov
in
push
subb
aad
test
mov
xchg
lahf
sub
cmpb
cmpsl
jecxz
jne
movsl
lds
das
xchg
cld
icebp
test
push
and
inc
lret
mov
fsubrp
add
fildl
cmp
mov
pop
je
nop
dec
or
mov
mov
mov
xchg
sti
push
or
push
push
repnz
inc
sarl
push
in
jmp
pushaw
sub
pop
in
popf
int
cmp
lods
int3
fwait
mov
mov
dec
pop
hlt
sbb
adc
iret
enter
xchg
inc
int
and
es
inc
leave
sub
cmpsb
and
test
pop
inc
and
adc
leave
mov
jns
mov
push
lahf
jnp
mov
jmp
jmp
outsb
mov
lock
cmp
cwtl
cmc
pop
int3
jns
sbb
int3
icebp
mov
ss
inc
in
mov
movsb
mov
sahf
or
dec
pop
repz
adc
lret
jecxz
sbb
mov
sub
dec
add
jnp
jno
mov
pop
loope
mov
sbb
ret
lea
pop
test
add
sbb
je
add
aam
fucomip
mov
jae
pop
mov
mov
sbb
xlat
dec
aas
xchg
das
mov
fs
push
outsl
cmp
xor
in
add
nop
mov
mov
add
mov
stc
add
add
mov
lret
jecxz
ds
sbb
push
mov
dec
jo
dec
lock
sbb
xor
and
popa
pop
lcall
sub
sub
push
sub
stos
and
pop
ret
and
ret
mov
inc
sub
and
cwtl
adc
push
addr16
ja
fadd
push
pop
cmp
repz
inc
imul
jnp
sbb
push
es
and
push
scas
ljmp
push
and
and
mov
aam
jne
add
jae
imul
jp
mov
push
push
in
gs
xor
inc
fldl
pop
mov
xor
je
loope
js
and
std
addr16
jg
xchg
aas
mov
cmc
pop
rclb
out
push
je
push
loope
dec
adc
iret
ljmp
cltd
xchg
sbbl
imul
stos
mov
inc
dec
cmp
push
mov
push
es
and
add
popa
xor
xor
test
divl
out
rol
add
lods
aas
lea
cwtl
das
aad
movsl
inc
movsb
and
mov
mov
fstpt
mov
in
lret
mov
sbb
mov
aas
mov
cld
jmp
mov
testb
out
sub
pop
mov
mov
loop
sub
mov
push
movsl
pop
adc
xchg
filds
iret
lock
fstpt
dec
aas
mov
xor
sbb
inc
mov
int3
mov
pop
mov
ljmp
imul
adc
insb
enter
scas
jmp
fucomi
adc
shlb
lret
cmp
mov
mov
out
ss
cmp
adc
std
testl
push
data16
stc
jo
aad
adc
mov
push
push
imul
aas
test
data16
mov
jb
push
pop
adc
jmp
mov
sbb
or
adc
xchg
fstps
loopne
pop
xor
stos
mov
xor
arpl
pusha
jne
lahf
daa
fs
pop
pop
mov
adc
cs
or
cmp
cmp
insb
sahf
xchg
cmp
dec
cmp
pop
adc
xchg
jns
push
lret
in
push
arpl
add
and
push
das
fcoms
int3
lock
dec
jb
push
jle
sarl
lret
in
cmp
subb
xchg
es
pop
push
arpl
scas
shlb
mov
and
mov
ret
out
into
mov
mov
cs
test
cmp
mov
pop
inc
mov
in
js
add
lock
jge
ja
in
push
xor
idiv
stc
jg
jge
or
dec
popl
aad
jmp
sub
mov
rcl
and
in
fdivrl
lods
insl
fsubrl
xor
pop
test
pushf
inc
xchg
xchg
mov
adc
rorb
bound
jne
push
hlt
mov
lods
cmpsb
or
xchg
sub
arpl
shrl
add
mov
sub
lahf
repz
icebp
scas
xchg
sub
mov
and
inc
sahf
movsb
xchg
mov
test
cmp
push
mov
in
movsb
imul
lods
ret
sahf
adc
std
cmp
movsl
mov
fsubrl
leave
cwtl
pop
pop
lcall
lret
jno
pop
inc
add
movsb
lret
ja
mov
add
jbe
jno
nop
enter
sbb
aaa
adc
push
subb
add
fdivrs
mov
jns
push
and
push
dec
add
testb
and
pop
addr16
cmp
les
dec
pop
jecxz
les
fldenv
out
ja
shlb
je
mov
xchg
sub
cmp
cltd
or
push
xor
xchg
mov
jo
lea
mov
mov
scas
dec
cmpsl
testl
jno
mov
jle
xor
cs
or
pop
popf
lahf
sub
imulb
mov
xchg
fnstcw
bnd
enter
pop
push
mov
jo
jne
xlat
repnz
mov
movl
xchg
mov
adcb
lods
fisubl
sbb
sub
mov
pavgb
sub
popf
and
mov
push
les
mov
ret
mov
xchg
or
xor
sbb
xor
in
sbb
ss
std
cmp
movsl
sbb
orl
mov
movsb
dec
popa
cs
dec
imul
scas
sbb
and
mov
outsl
test
cltd
xor
mov
mov
mov
cmp
push
lds
inc
iret
cwtl
adc
icebp
push
dec
int3
jle
fisttpl
mov
push
addl
dec
adcl
jp
jp
cmp
push
leave
imul
mov
push
push
insb
mov
inc
sub
andb
sbb
pop
and
xchg
fsubr
fldt
cld
push
dec
jg
pop
out
inc
jle
xchg
add
out
pop
and
imull
sti
pop
xchg
xor
and
adc
sahf
or
adc
pushf
mov
mov
hlt
adc
cmpsl
xlat
mov
add
fstpt
jmp
adc
mov
out
dec
inc
pop
sub
bound
inc
ret
inc
out
aas
lock
lret
fwait
jg
cmpsb
iret
sbb
call
pop
push
xor
ret
push
stos
mov
popf
int
lret
and
add
xchg
pop
lret
rorb
jbe
xchg
mov
testl
imul
jge
pushf
je
mov
jle
pop
add
adc
cwtl
pop
dec
testb
lret
xor
and
fwait
stos
pusha
out
rclb
rorl
pushf
mov
adcb
adc
mov
pusha
clc
ret
out
and
arpl
dec
jp
or
movsl
jmp
sub
stos
or
jo
mov
test
sarl
shlb
repnz
ds
fisubl
loopne
fldcw
mov
push
fmuls
push
in
cmp
inc
repz
mov
lret
push
or
inc
jb
inc
loopne
or
imul
cmp
dec
adc
inc
add
pop
inc
xchg
mov
iret
dec
pop
in
and
xor
scas
jmp
sbb
int3
dec
mov
ret
xchg
and
aam
dec
loopne
out
fs
stos
aas
adc
jnp,pn
lea
xor
and
ficoml
in
push
aaa
cmpsb
adc
dec
lods
mov
outsl
pop
push
pop
cmc
cwtl
or
cmp
push
and
es
dec
loop
lods
clc
fsubrs
lahf
pop
push
mov
ss
inc
cmp
push
mov
andl
mov
push
and
pop
add
mov
ret
add
shrl
outsl
mov
or
mov
push
cmc
scas
and
aam
inc
loop
add
fs
xchg
lods
mov
imul
and
cmpsb
lahf
push
mov
lea
stos
xor
push
cli
pop
sub
sub
ds
dec
mov
hlt
or
sub
aam
mov
repz
inc
shr
pop
pop
jb
imul
cmp
sar
scas
test
inc
rcrb
fdiv
pop
addl
mov
xor
subl
out
push
ljmp
stc
or
add
rorb
pop
xchg
push
jle
icebp
nop
mov
mov
cmp
jmp
push
aad
xchg
and
fdivrs
and
add
cmpl
cmp
pop
sti
mov
push
add
add
sahf
fmuls
sbb
int
sub
in
test
adc
outsb
fxch
stc
js
mov
push
int
insb
mov
mov
push
mov
cld
xchg
dec
cmp
dec
scas
int
xor
adc
xchg
add
mov
ret
and
stos
xlat
test
ficoms
arpl
dec
pusha
and
dec
sub
mov
sbb
inc
dec
in
mov
repnz
or
adc
mov
pop
enter
mov
test
loope
dec
pushf
sti
gs
fucom
pop
push
scas
pop
ss
and
iret
mov
adc
js
cmpsl
mov
cmpsl
scas
add
sahf
jae
xor
xchg
push
ret
or
sbb
out
jae
lods
sbb
test
leave
xchg
inc
xorb
push
sub
lcall
aaa
mov
aas
fcoms
lods
mov
mov
jbe
jg
shl
cmp
insl
leave
sarb
dec
ret
ret
push
stos
aam
or
cmpsb
gs
inc
xchg
jns
pop
rol
cs
mov
fiaddl
mov
gs
xor
sbb
stos
adc
xor
cmp
xor
fdivr
mov
test
pop
pop
jnp
adc
pop
nop
in
negl
lcall
pop
pop
ja
jne
add
mov
ret
sbb
pop
and
clc
addr16
mov
cltd
je
jno
ficompl
cwtl
lods
push
dec
cmp
aas
sahf
sbb
pushf
pop
inc
mov
inc
lds
mov
cmp
push
loop
xor
sbb
sbbb
jbe
int3
add
sub
and
lds
out
cltd
loopne
mov
lds
popa
cmc
xchg
rclb
icebp
or
sub
les
cmp
in
sub
ret
ja
or
mov
out
xchg
enter
clc
fucomi
inc
cwtl
popa
repz
jnp
dec
into
iret
xchg
fisubrs
mov
std
fcmovnb
imul
sbb
mov
inc
xchg
movsl
stos
gs
add
jg
repnz
xlat
aam
mov
cs
lods
mov
gs
dec
push
push
sub
jge
jo
fcmovbe
cmpb
mov
enter
xchg
or
outsb
xor
dec
xchg
adc
andl
enter
and
addl
insl
cmp
mov
add
push
js
pop
mov
pushf
cltd
sbb
repnz
leave
dec
sub
and
imul
out
sub
jge
inc
lods
test
pop
dec
es
add
dec
sbbl
sbb
or
jb
jecxz
sbb
mov
jp
sbb
pop
xor
inc
dec
xor
pop
fsubl
imul
xor
mov
outsl
enter
addr16
pop
pushf
sbb
cld
bound
lret
leave
jo
test
add
fstpl
push
insl
push
push
imul
pop
lods
inc
push
jp
adc
lods
dec
xor
lods
insl
lret
icebp
leave
inc
outsl
ds
mov
in
ljmp
jb
dec
icebp
decb
lahf
lds
roll
mov
mov
movsl
or
adc
lret
stc
lds
dec
repnz
dec
fcoms
jbe
addr16
repnz
mov
rorl
cmp
inc
adc
loopne
inc
mov
mov
das
sub
outsl
lea
inc
daa
enter
dec
add
jo
in
xlat
out
jl
shrl
cmp
lods
lret
mov
push
inc
mov
adc
ret
mov
cmpsb
mov
loop
lock
test
or
jecxz
cltd
sub
add
enter
pop
test
mov
adc
sarb
and
sbb
insl
je
and
cwtl
flds
cmc
push
push
jge
xchg
gs
fcomps
xchg
cs
inc
jnp
aaa
fwait
xchg
scas
jae
mov
or
in
lea
jbe
jno
mov
mov
filds
mov
dec
sbb
scas
push
ret
xchg
loop
mov
cltd
loopne
mov
cmp
jbe
clc
nop
movsl
and
cmp
lahf
aad
add
xor
cld
dec
outsl
cmp
loop
in
xlat
iret
pop
cmp
fwait
xchg
fisubrs
fldt
repz
adc
mov
int3
pop
loop
test
mov
mov
adc
mov
inc
addb
mov
ljmp
mov
and
xlat
aad
dec
sub
inc
mov
jbe
mov
dec
push
mov
movsb
jbe
adc
je
add
scas
aad
popa
pusha
pop
or
inc
stc
push
xor
cmp
pop
sub
cmpsl
jmp
push
ljmp
mov
cmp
hlt
sahf
xchg
sub
daa
sub
mov
xlat
das
cmpsb
add
daa
jle
mov
cmpsl
cmp
mov
pop
mov
mull
jmp
lods
out
ja
xchg
inc
or
cmp
into
push
dec
pop
popa
out
xor
jne
pop
dec
mov
pop
test
sahf
sbb
pop
faddl
sub
out
out
insb
add
dec
imul
pop
data16
je
stos
sbbl
icebp
rorb
sti
sbb
sub
jge
movsl
mov
ljmp
lcall
mov
jne
mov
imul
call
mov
mov
cmpsb
inc
testb
mov
popa
into
call
xchg
lock
imul
add
gs
aam
add
sbb
jle
test
mov
cmpsb
sub
mov
xor
cmc
out
adc
sbb
cmp
cpuid
sbbb
call
dec
into
pushf
hlt
test
add
lds
adc
push
es
das
sti
jnp
inc
nop
int
icebp
or
ret
and
pushl
xchg
stos
lcall
rcrb
sbb
and
and
sbb
lahf
ds
sbb
add
cmp
imul
lods
jne
mov
test
cmp
push
jne
scas
jns
mov
jne
adc
mov
fisubrs
fidivrs
xor
xor
int
aad
ret
mov
mov
sub
mov
jle
iret
pop
or
mov
sbb
addb
mov
shrl
scas
pop
adc
jle
rclb
fidivs
rcrl
and
pop
jp
mov
fadds
aaa
sub
pusha
cmc
fwait
sbb
test
repnz
out
inc
mov
scas
cmp
ret
pushf
sbb
mov
bound
jecxz
push
iret
insl
repz
rcr
mov
and
stos
pop
dec
inc
mov
mov
movsb
push
outsb
sti
xor
sub
inc
jp
pop
inc
roll
loopne
je
fisubl
es
push
mov
xchg
mov
or
sti
out
test
fbld
out
xor
mov
adc
xchg
and
lea
jp
lods
sahf
mov
xor
lds
and
mov
hlt
test
xchg
push
out
push
test
push
mov
and
push
outsb
mov
lret
mov
jge
add
mov
flds
insl
mov
or
jnp
sbb
xor
jle
call
flds
add
lods
fsubrl
lods
in
or
xchg
repnz
pop
and
mov
iret
bound
enter
mov
push
sbb
cld
cmp
and
test
mov
xchg
in
jmp
jo
mov
nop
js
mov
pop
cmc
inc
push
cmc
add
or
cmp
and
addr16
and
lret
mov
sahf
xchg
xchg
jg
iret
sahf
inc
adc
dec
stos
scas
mov
iret
movsl
insw
cmpsl
lock
mov
xlat
in
jg
mov
push
inc
jp
js
pop
push
and
jae
mov
mov
sbb
xchg
enter
ljmp
mov
call
push
cmp
jno
inc
jle
out
into
shrl
cmp
shlb
dec
int3
popa
fldl
push
sub
jbe
xchg
push
adcb
mov
mov
xor
sbb
pop
loope
add
aaa
add
xchg
pop
out
shll
xchg
lds
and
cmp
movsl
xchg
sbb
std
insl
cmp
scas
mov
int3
cmp
push
dec
inc
and
lods
outsl
mov
loop
ret
mov
pop
notb
xlat
out
into
dec
jns
insb
mov
push
mov
jmp
sub
mov
negl
sti
not
pop
or
insl
adc
mov
fistl
lcall
arpl
cmp
mov
ja
into
imul
mov
or
int
push
xchg
jo
lahf
pop
and
cs
fucomp
jmp
sbb
int
imul
clc
push
stos
sti
movsl
mov
sub
cmpl
icebp
out
inc
adc
lret
bound
imul
mov
repz
mov
push
or
outsl
adc
sub
je
jno
clc
mov
push
mov
fdivp
pop
inc
sub
jnp
pusha
jns
sbb
popa
lret
and
cmpsb
or
push
out
lods
jl
push
loopne
mov
lds
mov
cmc
push
cmp
sahf
lods
packsswb
pop
mov
and
cmp
mov
inc
ss
push
sub
jg
mov
fidivrs
xchg
in
mov
inc
flds
push
int3
dec
mov
mov
sbb
dec
inc
push
dec
cmp
xor
mov
or
mov
sbbb
sbb
or
idivl
das
mov
xchg
push
dec
pusha
jp
shrb
popf
dec
in
imul
add
test
clc
jmp
loopne
jae
jecxz
jl
rorl
mov
aas
loop
test
cmp
jecxz
rol
sub
cmpsb
stos
add
dec
insb
out
inc
xor
dec
das
js
aaa
in
or
dec
out
insb
jg
pop
jbe
push
rcrb
jp
std
fisttpl
in
not
cmp
or
shr
popa
out
xor
call
loop
jno
js
inc
jno
data16
rorl
inc
pushf
inc
imul
pop
mov
mov
adc
lret
inc
ror
aam
sti
enter
clc
les
lods
adc
iret
xor
cmp
pop
and
or
cld
aas
divl
sbb
enter
pop
pop
cmp
pop
sbb
lods
sbb
icebp
mov
in
ret
dec
pop
lcall
pop
jl
les
out
js
mov
clc
imul
in
and
pusha
pop
pop
sbb
inc
dec
jp
adc
mov
jle
ss
call
push
cltd
movsl
jp
jnp
cwtl
inc
es
mov
outsl
lea
mov
xchg
scas
cld
cmp
sub
sbb
inc
cmp
pop
in
sbb
inc
hlt
je
xchg
add
repz
mov
lds
movsb
push
and
sbb
gs
sbb
clc
jp
cmp
push
lods
cli
mov
shrb
adc
jp
add
gs
ds
cmp
addr16
sbb
mov
adcl
ljmp
and
shl
outsb
pusha
pop
movsl
fwait
aam
sbb
and
and
mov
adc
mov
or
clc
ljmp
push
push
inc
cmpsb
call
loop
xchg
pop
shlb
xlat
sub
xchg
in
mov
sub
shlb
xchg
iret
mov
xor
add
add
jge
jno
mov
jecxz
lea
movsb
inc
jne
xor
lahf
inc
or
add
test
xchg
cltd
and
mov
ret
repz
ljmp
movsb
movsb
dec
je
aas
es
xchg
pop
fxch
mov
cmp
mov
stos
es
inc
add
das
sbb
jmp
in
outsl
add
mov
stos
ss
ss
data16
cmp
fisttps
cltd
int
fists
xchg
mov
pop
dec
lahf
and
je
in
pop
loope
rcll
int3
push
dec
cli
cmp
lea
mov
push
jp
sbb
arpl
and
xchg
fimull
pop
mov
mov
cmp
in
incb
or
cmpsb
test
push
lcall
xor
xchg
fistl
mov
andl
adc
and
js
test
add
jecxz
pusha
pop
jb
jo
stos
lret
xchg
cli
clc
sbb
mov
cli
pop
mov
push
and
iret
out
out
pop
out
mov
pop
xchg
sub
ja
sbb
into
cmp
pop
mulps
xchg
mov
cmp
pop
imulb
out
adc
dec
xchg
pushf
das
and
cmp
lock
arpl
add
push
scas
pusha
inc
pop
and
out
jns
fldl
jne
cmp
in
push
aas
or
je
sub
sarb
cmpsb
fdivrs
adc
ror
add
daa
push
dec
mov
sbb
stos
pop
adc
in
nop
inc
push
xor
add
in
daa
stc
and
movsb
jge
push
mov
jo
or
cs
rorb
cmpsb
pop
mov
rcl
in
jnp
xlat
pop
loopne
fwait
addr16
push
loopne
inc
stos
mov
inc
inc
fisttps
andb
leave
out
daa
das
xchg
sub
add
adc
clc
mov
mov
pop
pop
sar
inc
dec
xchg
hlt
fs
xorl
loopne
push
sub
je
in
push
or
push
stos
lahf
add
pop
fisttpll
inc
dec
shrb
dec
mov
adc
mov
dec
stc
cs
sub
and
or
iret
outsb
push
shl
aaa
push
push
divl
pop
cmp
xor
adc
out
and
scas
xor
dec
stos
inc
and
js
jmp
pop
cli
xchg
ss
arpl
sbb
js
ds
pop
dec
stos
xchg
pop
fdivl
mov
mov
pop
movsb
out
jo
cmpsl
cmp
fsubp
pusha
loop
xlat
push
sub
mov
mov
out
dec
bnd
cmp
and
je
clc
pop
lahf
mov
test
xor
pop
in
hlt
and
sbb
lret
mov
clc
std
xchg
dec
repz
pushf
fdivrl
sub
xor
sbb
pop
and
test
and
add
sbb
rcr
sti
mov
and
inc
imul
lods
jecxz
or
and
adc
jmp
out
scas
lods
sbb
sbb
sbbl
sub
mov
stc
repz
push
imul
outsb
cs
adc
add
mov
popf
xor
sti
or
push
icebp
nop
inc
je
and
mov
dec
xor
add
jg
iret
mov
dec
rcrb
in
bound
out
sar
jle
dec
imul
fldl
sub
mov
aaa
and
or
push
lret
adc
outsl
cmc
inc
mov
jae
pandn
sahf
sbb
rolb
dec
lret
pusha
jg
repz
imul
int
xor
and
pop
xor
mov
cltd
insb
cmpsl
out
popa
xchg
rorb
adc
das
leave
movsb
lahf
fldcw
pop
loop
pop
jle
stos
frstor
mov
push
mov
aas
stc
mov
mov
cmp
arpl
mov
std
jmp
sbb
cmp
dec
lahf
insl
inc
pop
inc
fwait
int
cmp
dec
sbb
test
arpl
mov
mov
mov
ds
jne
orl
xchg
sti
ret
xchg
mov
mov
pop
sarb
dec
in
fcmovb
dec
push
lret
mov
call
fdivp
scas
and
addr16
dec
inc
aad
shlb
mov
add
jo
dec
adc
xor
cwtl
or
inc
in
xor
es
mov
dec
dec
in
cwtl
shlb
rorl
jle
mov
xor
and
movsb
es
shrl
sbb
add
je
xchg
push
dec
sbb
dec
gs
pop
jl
mov
mov
inc
js
pop
incl
mov
sub
insb
lcall
rol
aaa
idivl
xchg
mov
sbb
rolb
or
cltd
pop
fdivrl
xchg
lds
js
mov
aas
hlt
mov
or
pop
mov
or
pop
insb
or
or
leave
rcrb
pop
jle
clc
repnz
mov
push
repnz
mul
pop
inc
mov
mov
add
or
xchg
xchg
aaa
xor
xor
mov
ljmp
sti
sbb
pop
push
mov
in
push
pushf
sub
push
xchg
inc
lcall
sbb
sbb
repnz
rorb
jle
inc
icebp
jle
inc
icebp
adc
enter
xor
push
pop
add
jns
into
add
inc
ds
push
mov
jnp
subl
add
mov
adcb
pop
iret
pop
push
jbe
push
mov
cmp
xor
sbb
lahf
mov
inc
aas
jnp
ret
ljmp
sahf
or
call
das
mov
add
pop
and
sub
arpl
lret
mov
dec
jmp
cmpsl
dec
push
icebp
pop
rcll
fidivs
xchg
ficompl
push
fsubrs
push
ds
mov
adc
je
mov
int
or
cmc
pop
leave
adc
jmp
mov
fisubrl
fisubrl
subb
fs
jne
xchg
pop
or
xchg
fucom
dec
loope
div
adc
push
arpl
pop
test
inc
sti
scas
into
fldl
sbb
test
in
xor
cwtl
or
mov
leave
or
fwait
push
ret
add
xor
xor
inc
and
aam
cmc
test
out
push
pop
xchg
mov
lds
addr16
clc
loope
ret
lret
jbe
and
sbb
and
sub
jno
jp
pop
lds
jle
or
add
insl
fnstenv
ds
jno
dec
loopne
cs
pop
mov
addr16
jle
ljmp
jnp
pushf
push
popa
xchg
ss
orb
cmc
lcall
out
cli
jl
inc
sub
push
inc
cltd
out
dec
push
shl
push
inc
pop
cmp
xor
xlat
inc
sbb
subb
shlb
mov
icebp
mov
imul
jl
stc
push
push
inc
mov
sub
stc
cmp
cmp
daa
cmpb
jle
pushf
cmp
lds
mov
cs
insb
mov
clc
xchg
sub
xlat
add
push
xchg
movsb
inc
push
mov
stos
hlt
out
in
and
or
and
lcall
adc
dec
jmp
int
pop
icebp
clc
movsb
adc
dec
jle
mov
mov
andb
sbb
ja
mov
rcll
and
push
lods
mov
and
sbb
int3
inc
inc
std
imul
orl
lcall
cmc
test
in
mov
or
mov
lods
or
add
jmp
mov
lods
lods
test
mov
jo
dec
xchg
in
test
sbb
xchg
and
add
hlt
sarl
mov
xor
xchg
pop
mov
divb
add
imul
shlb
pop
clc
cltd
jp
shll
or
cmp
and
std
mov
mov
int3
repz
into
std
repz
push
cmpl
dec
xor
les
inc
fs
mov
sub
aad
stos
test
insl
popa
xor
inc
lds
rcrl
pop
fld
or
lret
loopne
shl
xchg
lcall
pop
add
dec
mov
add
ds
pop
ja
insb
lcall
rcl
icebp
enter
xchg
scas
xor
xor
fsts
mov
enter
mov
xor
int
test
cmpsb
mov
outsl
mov
hlt
sub
pop
jmp
sti
pop
ljmp
pop
cmp
fnstcw
shll
shr
xchg
bound
nop
fildl
mov
or
lea
insb
or
pop
dec
lock
inc
shll
int
add
adc
pushf
and
jb
push
mov
clc
les
mov
enter
mov
and
fcmovu
sti
dec
sub
loopne
mov
mov
data16
fdivrl
fnstsw
add
xchg
mov
mov
dec
nop
outsl
jle
sub
mov
jne
icebp
fisttpl
scas
jecxz
mov
lea
rcr
push
xor
jp
xchg
and
and
xchg
adc
add
push
ret
in
cmpsb
mov
sub
addr16
cmpsl
aam
into
ret
inc
inc
lds
lcall
sti
push
movsl
daa
mov
cmp
sbb
mov
movsl
ja
aas
cld
addr16
test
gs
mov
in
aaa
test
lods
and
mov
lock
je
pusha
loope
fldl
jp
imul
cltd
push
add
pop
mov
out
pop
add
xor
movsb
in
sbb
cmp
dec
sub
loop
aad
inc
mov
sbb
pop
gs
nop
cmp
and
dec
sti
test
mov
loop
add
imul
bound
mov
lret
and
pop
fstl
mov
inc
xchg
sub
in
pop
je
and
stos
rcrl
dec
cli
push
mov
push
mov
sahf
pushf
mov
jecxz
lds
adc
popf
or
push
pop
sub
cmp
daa
das
and
jnp
int
cmp
ja
das
jp
xchg
inc
mov
dec
add
imul
mov
and
nop
adc
add
pop
add
pusha
in
lret
mov
subl
or
loopne
loop
jmp
pop
movsl
movsl
fwait
jno
lods
clc
aad
fmul
mov
orl
or
insb
inc
pop
pushf
fld
fnstenv
lods
xchg
push
jnp
pushf
cmp
xchg
imulb
stos
cmc
jecxz
arpl
xchg
cmp
inc
cwtl
leave
aad
rcr
fwait
ja
mov
ds
xor
mov
add
cmpsb
add
pusha
mov
popf
fs
sub
lret
lret
orb
fs
lea
rcll
les
and
movsb
rolb
fiadds
cmpsb
pop
cli
mov
lock
mov
mov
cli
scas
iret
xor
push
jae
movsl
mov
or
cmpsl
push
jbe
fstl
nop
push
jae
pushf
mov
lret
test
cltd
xchg
cmc
in
stc
ja
xchg
mov
mov
daa
dec
imul
in
test
je
push
scas
and
das
mov
inc
pop
imul
jb
xchg
ret
es
sbb
sbb
aam
ret
inc
pop
push
sbb
nop
fwait
outsl
mov
sbb
sti
inc
popf
mov
pop
mov
inc
das
loopne
out
sbb
push
adc
jnp
xor
and
push
sub
lahf
or
mov
sbb
popf
jecxz
xchg
mov
sahf
xchg
xor
lods
lahf
jge
outsl
mov
movsb
fildll
sbb
xchg
rep
call
orl
clc
movsb
adc
adc
movsb
shrl
out
lods
jbe
or
push
popa
mov
fstl
addr16
mov
add
jle
loope
add
mov
cmp
nop
mov
fdiv
stos
pop
mulb
std
cmpsl
cmp
scas
sub
jl
dec
push
mov
push
cmp
push
inc
test
in
out
push
cmpsl
mov
pop
incl
xchg
xor
pop
push
pop
push
lret
in
sar
imul
mov
leave
or
loope
and
fidivrl
notb
push
dec
cmp
add
mov
add
xor
mov
lcall
idiv
shll
stos
rcll
test
pop
adc
dec
aam
aas
push
push
test
addr16
enter
mov
out
out
inc
ret
or
in
int3
mov
xchg
cmpl
lds
inc
and
inc
push
push
adc
push
pop
xchg
aad
shll
clc
loop
je
mov
jl
jecxz
int
push
out
cwtl
fwait
push
fstpt
jnp
xor
test
mov
outsl
sti
pop
and
sub
aam
test
cmp
or
mov
and
int
sub
jno
pusha
dec
iret
in
jno
ret
mov
sub
pop
das
inc
lret
leave
cmp
dec
mov
jp
add
mov
mov
push
mov
lcall
fnstsw
pusha
stc
xor
and
cmp
aad
int3
pop
xchg
idivl
cmpb
in
lahf
stos
cwtl
push
loope
mov
fwait
aas
cltd
sti
xchg
push
pushf
cmp
fbstp
push
or
cmpsl
movsl
mov
iret
ss
inc
or
jecxz
loop
lods
shlb
cld
andb
mov
add
push
idivl
inc
aaa
sbb
push
jno
std
call
xor
cmpsb
xor
adcb
pop
insb
loopne
movsb
scas
aad
bound
pop
je
shlb
rorb
or
pop
mov
rol
sub
hlt
sbb
js
ss
outsl
lds
xchg
scas
or
xor
pop
pop
add
dec
jle
xor
and
push
or
in
pop
push
lahf
cmp
int3
fistps
ret
mov
repnz
push
loopne
pusha
lea
xchg
jmp
cld
cmp
sbb
cmpsl
mov
xchg
sbb
pop
in
mov
ret
jo
inc
std
fwait
push
push
mov
enter
fisubl
fldenv
popa
xchg
shll
rolb
jmp
aaa
cmp
push
mov
mov
orl
out
sub
mov
lods
pop
adc
lea
mov
mov
mov
jg
mov
out
mov
jb
jmp
xor
pop
orl
xor
js
xor
pop
aas
aad
dec
and
std
insl
xchg
sbb
or
sbb
mov
inc
mov
xchg
inc
or
data16
and
mov
bound
mov
and
xchg
jns
sub
jl
add
mov
lret
dec
mov
pop
mov
cltd
cmpsb
sub
or
sub
mov
cmpsl
push
mov
push
pop
xor
pop
xchg
mov
jmp
lcall
es
jno
push
pop
sbb
popf
fdiv
and
std
mov
popa
cs
pop
pop
loop
int3
push
jecxz
cmpsl
je
shr
inc
enter
dec
mov
cmp
leave
cmpb
or
fsubrp
std
sub
jecxz
pop
cs
dec
inc
or
testl
pop
or
pop
shrb
into
ja
xor
das
push
movsl
sbb
jg
xchg
movl
jl
scas
loop
les
or
adc
aas
mov
scas
jle
outsl
fucomi
mov
ficomps
or
inc
cmp
ret
notb
out
je
fld
push
mov
call
mov
pop
dec
adc
rol
mov
pop
mov
repnz
hlt
xor
jno
imul
adc
js
inc
rol
repz
add
push
hlt
aad
rcrl
push
sub
mov
xchg
cltd
adc
cwtl
mov
xor
adc
jno
fs
mov
lock
push
sub
sub
xchg
mov
mov
inc
sub
cmp
adc
jbe
loopne
popa
pusha
adc
mov
pusha
cmp
adc
xchg
faddl
jnp
xor
ficomps
js
pop
movsl
icebp
ds
lods
inc
mov
mov
mov
pslld
arpl
cs
data16
in
std
mov
leave
test
xchg
cmp
xchg
cli
sbb
push
mov
dec
sub
sbb
adc
pop
and
testl
mov
push
mov
dec
les
fsts
mov
inc
ret
add
mov
clc
rorl
sbb
hlt
pop
das
scas
mov
cmp
into
mov
pop
jb
stos
mov
sub
push
and
les
aaa
mov
sub
jbe
mov
inc
push
jge
sahf
pop
outsl
cmc
cmp
mov
dec
xor
dec
loop
cmpsb
leave
lcall
dec
fidivs
and
dec
sbb
incl
aam
daa
cwtl
fdivrs
mov
call
hlt
jbe
adc
adc
pop
scas
add
push
fdiv
btr
cmp
lods
mov
sbb
ror
mov
dec
pop
push
sub
add
inc
or
es
andl
jmp
mov
jno
pusha
in
jbe
in
repnz
insl
or
add
add
mov
fidivl
dec
pushf
push
sarb
mov
xor
mov
lret
pushf
sbb
pop
adc
xchg
or
mov
pop
orl
cmp
mov
sbb
aam
lods
flds
lea
cmpsb
mov
dec
stos
cltd
lea
out
xchg
iret
mov
jl
in
push
xchg
out
mov
andb
and
shr
test
loopne
mov
xlat
cmpsl
aas
mov
enter
xor
xchg
shr
cwtl
sbb
pop
mov
nop
mov
fcmove
sub
popa
fnstenv
mov
arpl
movswl
movsl
dec
xor
dec
push
adc
mov
jl
dec
pop
addr16
dec
sbb
sub
pop
rcl
pop
sub
inc
add
fwait
insl
inc
mov
jo
clc
xchg
paddb
jecxz
std
push
inc
arpl
imul
sbb
fwait
xlat
cld
add
sub
mov
jl
sub
mov
jbe
adc
in
mov
popa
adc
dec
mov
push
jo
push
pop
xchg
xor
call
xchg
addr16
pop
loopne
ret
mov
imul
rcrb
mov
inc
add
ficoms
pop
fldl
aas
insb
mov
push
inc
or
pop
mov
mov
orb
ljmp
pop
jle
clc
mov
push
xchg
add
xor
lods
mov
rcrb
pop
dec
js
xorl
test
sbb
icebp
insl
mov
insl
outsb
lds
cmpsl
sbb
test
jne
cli
push
popf
stc
pop
dec
pop
leave
mov
in
xchg
sub
stos
repnz
fnsave
add
fnstsw
pop
lea
and
call
mov
cmc
mov
inc
mov
cmp
jmp
mov
les
jmp
gs
cmp
jo
jge
mov
stos
ds
xbegin
scas
mov
dec
mov
adc
add
or
inc
loop
push
scas
mov
ret
pusha
cmc
or
nop
test
shll
in
xchg
jns
stos
loop
addr16
sub
jmp
sub
rcr
les
cmp
mov
push
jns,pt
popf
adc
inc
repz
fidivrl
push
ficomps
shll
loop
data16
pop
adc
adc
sbb
mov
cs
xchg
jbe
jecxz
repz
mov
and
xchg
ds
icebp
xlat
inc
lock
data16
or
jl
dec
les
lcall
in
daa
lcall
mov
inc
dec
sahf
rclb
mov
lds
adc
mov
adc
adc
add
pop
xor
jns
mov
test
lds
cmp
popf
pop
cmp
adc
mov
xor
pop
cmpsl
fistps
xchg
shlb
and
push
lock
insb
sbb
sbb
in
add
pusha
mov
cmp
popa
lcall
sahf
jecxz
mov
mov
fcomps
pop
inc
in
adc
out
loop
rep
dec
out
mov
push
dec
xchg
sbb
push
in
pop
int3
cltd
scas
xchg
xchg
dec
jb
ficoms
push
jb
outsl
dec
out
aad
xor
ss
daa
inc
cmp
daa
or
xor
and
pop
mov
mov
lods
or
hlt
jp
cmpsb
pop
out
enter
hlt
xor
lcall
dec
dec
mov
jmp
cmpsl
mov
aad
lods
mov
dec
and
ret
jo
imul
pusha
stos
leave
adc
xor
popf
mov
push
ret
rolb
imull
es
movsl
inc
and
jns
pop
sub
mov
xchg
and
and
ret
or
outsb
in
lods
jge
call
les
xchg
movsb
fdivrp
mov
movd
leave
scas
xlat
xchg
xchg
cli
sbb
mov
clc
les
pop
andb
jns
daa
xchg
jle
fistpll
cld
push
popa
xchg
push
jge
cmpb
push
enter
cmc
cmpsl
cltd
out
ret
scas
mov
call
lods
mov
sbb
test
or
lds
movsl
jmp
jmp
add
int
mov
lock
adc
jle
icebp
int
sbb
cltd
rcrb
pop
es
jb
push
les
mov
ss
aam
mov
or
popa
dec
fwait
test
mov
sub
cmp
cmp
test
push
and
fnstenv
std
sbb
add
dec
mov
pop
loop
dec
inc
jo
les
mov
inc
dec
sub
popf
ret
mov
push
mov
inc
negb
mov
and
sbb
or
add
cmp
aad
stos
and
cmp
out
into
jg
dec
jno
sbb
idivl
pop
out
push
fsubrl
insl
jg
mov
popa
xchg
mov
imul
sbb
cld
outsl
push
xor
lahf
cli
push
rcr
jge
call
loopne
fstl
in
inc
add
mov
aas
gs
stc
loope
pop
mov
cs
cmp
jns
mov
add
xchg
rcrb
in
inc
sbb
lods
test
inc
xchg
sbb
outsl
psrld
lds
xchg
mov
aaa
aaa
out
pusha
outsb
xchg
xchg
rcll
push
pop
mov
inc
adcl
xor
sarl
ja
std
fcoms
pop
rol
std
add
sub
jmp
cld
or
adc
notl
aas
icebp
push
mov
sti
adc
sbb
in
pop
out
mov
popf
push
shr
xor
xchg
jo
gs
vprotd
dec
hlt
xchg
jo
in
push
mov
jns
inc
inc
pop
mov
xor
pushf
wbinvd
repnz
adc
test
xchg
out
test
pop
test
mov
mov
pop
xor
push
mov
inc
fidivl
jo
xlat
and
cmpsb
loopne
push
push
lds
call
daa
cltd
xchg
nop
lds
or
cmp
shlb
shll
inc
push
bound
xor
sahf
call
ss
dec
jge
inc
xor
adc
orl
insl
pusha
pop
popf
push
icebp
repz
cmc
cmpsb
sahf
cmp
lods
sbb
call
adc
cmp
jne
das
inc
fadds
jnp
not
lds
or
lahf
pop
sti
pop
dec
adc
call
mov
mov
ss
imul
hlt
cli
loope
pop
pop
fidivrs
inc
dec
les
inc
sbb
cmpsl
stos
xor
xor
repnz
das
dec
rclb
jns
mov
add
pusha
lods
sarb
dec
je
xchg
stc
idivl
imul
out
loope
enter
out
xchg
mov
mov
adc
fnstcw
jo
xlat
repnz
adc
ret
mov
cmp
decl
mov
mov
mov
push
dec
rcrb
lcall
sbb
nop
or
outsb
push
call
push
pop
push
loop
fnstenv
pop
jnp
repnz
and
out
fcomip
out
shl
clc
push
dec
mov
add
fs
pusha
pop
jg
dec
leave
mov
mov
sub
mov
rcr
jnp
lea
inc
mov
sub
jmp
push
loop
pop
or
push
imul
mov
je
push
push
rcrb
xchg
mov
dec
jmp
push
or
dec
mov
xchg
sbb
xchg
js
sti
fidivrs
mov
mov
sub
enter
and
sub
loopne
cld
jg
push
xchg
dec
ja
ljmp
pop
push
cmp
fsubl
add
bound
mov
dec
idivb
lea
mov
push
enter
cmpsb
fsubrs
aas
test
mov
in
daa
cmp
pop
clc
lahf
hlt
push
mov
shlb
call
mov
scas
pop
jnp
or
sub
push
std
adc
mov
insl
pushf
ret
mov
or
sarb
gs
sub
fmul
cs
aaa
inc
sub
and
sbbb
repz
xchg
add
xchg
push
ret
add
lret
xor
xchg
push
test
aas
ss
or
jp
xchg
scas
gs
call
iret
les
in
sbb
add
dec
or
and
xchg
xor
cmp
mov
sbb
imul
lahf
inc
adc
cmp
xorb
sar
push
push
out
adc
lock
or
ret
mov
mov
sahf
cmp
mov
jne
cmp
xchg
jp
jnp
push
inc
add
push
fldcw
sbb
sub
mov
sbb
pop
jb
cmp
mov
mov
mov
mov
mov
sub
test
push
adc
out
mov
hlt
jbe
insb
sub
lahf
push
movsl
es
mov
jne
xchg
lods
push
lods
rorb
mov
daa
push
xchg
gs
lock
movsl
adc
and
mov
pushf
sub
int3
xor
cli
add
sbb
lods
cmp
sti
push
rol
out
xlat
lods
fidivl
out
and
push
das
inc
cmp
pop
inc
mov
fisttpl
jb
rcl
fs
icebp
adc
outsb
lods
jb
adc
cmp
jecxz
pop
mov
nop
dec
or
jnp
inc
and
test
add
test
sbb
call
jbe
cmp
inc
mov
mov
ficompl
push
aad
ljmp
fcmovbe
fistpl
es
ret
sub
pop
mov
fcmovbe
je
adc
icebp
shrl
cld
into
cmp
pop
insl
cltd
mov
fs
daa
sub
aam
sub
fsubrs
aad
xor
sti
dec
mov
fiaddl
leave
in
enter
mov
movsb
mov
dec
add
lcall
loop
mov
inc
inc
fimuls
scas
in
stc
fcoms
fwait
inc
cmp
scas
or
inc
ss
jp
repnz
lds
cmp
stos
or
inc
aad
jecxz
out
hlt
es
lcall
sti
mov
lcall
cmpsl
dec
ds
scas
cwtl
fistpl
stos
push
ficompl
jmp
jmp
stc
push
jmp
or
daa
xchg
out
jp
test
pop
arpl
cmp
push
pop
dec
mov
shl
lods
ror
inc
sbb
push
out
mov
jmp
out
fwait
mov
inc
sub
cmp
and
mov
dec
shrl
insb
cmc
pop
and
mov
pop
fistl
xchg
sub
out
fs
test
lods
cli
inc
cwtl
ljmp
xchg
jbe
arpl
or
fs
mov
cmp
pop
into
repnz
jge
cmp
sub
arpl
and
cmc
inc
jmp
imul
pusha
incl
lret
ss
jmp
pop
outsl
pop
push
add
jns
mov
xchg
dec
mov
jmp
pop
push
cmp
add
les
sbb
cltd
lods
jmp
sbb
mov
mov
ds
adc
push
div
les
in
jg
ja
test
lods
lea
adc
mov
pop
dec
js
sub
hlt
lcall
lds
out
jnp
sub
mov
mov
rclb
arpl
jae
je
cmc
dec
xchg
daa
subl
mov
sbb
dec
test
adc
outsb
nop
stos
jbe
or
mov
lea
mov
rcrb
adc
jg
cmpsl
mov
and
frstor
cwtl
rorl
mulb
pop
testb
dec
fdivrs
dec
push
js
cltd
jbe
inc
push
fidivs
mov
cmp
repnz
mov
adc
mov
jge
xor
xchg
ss
mov
sub
imul
addr16
nop
pop
push
push
lods
sub
clc
xchg
add
mov
inc
gs
push
pop
imulb
dec
fcompl
add
pop
jno
mov
or
js
std
mov
lcall
sub
sub
mov
jg
leave
mov
mov
insl
cmp
pusha
inc
shr
rorb
icebp
push
cmc
push
xchg
mov
stos
cwtl
in
mov
ljmp
roll
jo
outsl
push
arpl
insb
push
adc
ljmp
jb
data16
jmp
add
mov
sub
std
sar
xor
cmp
sti
aad
sbb
pop
cmpb
add
fnstsw
pop
dec
mov
sub
out
nop
in
push
shrb
call
cmp
lahf
cld
in
sub
addr16
and
xchg
scas
and
int3
xchg
mov
sub
call
inc
or
xchg
popf
shrl
dec
mov
data16
push
push
add
fst
push
jecxz
adc
or
in
mov
mov
mov
int3
mov
or
mov
stos
pop
xor
add
push
jo
jbe
dec
pop
inc
jmp
sub
xlat
movsb
cmpsb
dec
iret
ja
in
push
mov
sub
xchg
iret
push
or
enter
icebp
gs
jmp
push
fidivl
push
js
stos
push
in
mov
rorb
inc
pop
mov
push
daa
pop
fwait
mov
mov
rep
or
outsb
mov
test
mov
scas
xor
arpl
loopne
iret
mov
push
or
repz
loopne
sbb
aaa
inc
pop
mov
sbb
inc
add
push
out
popa
xchg
les
or
sti
jg
or
repz
rcll
cmp
xor
or
rcl
xchg
xchg
dec
cmp
inc
push
adc
rcl
insl
movsb
lret
xlat
fcom
sbb
jle
out
jb
xchg
bnd
outsl
fucomip
mov
dec
out
adc
ds
and
incb
cmp
lods
and
jo
pop
je
mov
je
repz
addr16
dec
add
sbb
aaa
cmp
stos
subb
inc
sbb
mov
inc
cmp
ret
mov
orl
lahf
pusha
into
jbe
jl
mov
mov
insl
jno
je
test
adc
xchg
mov
mov
or
jae
scas
pop
pop
sbb
fwait
pop
add
scas
jns
lods
insb
sbb
pop
inc
pop
mov
sub
mov
xor
insb
mov
lret
cmpsl
or
cmp
jge
popf
in
movsl
pusha
and
int3
xchg
mov
sub
add
mov
sarb
inc
nop
call
int
cld
push
push
fcoml
imul
insb
pop
outsl
dec
push
mov
cmp
mov
push
add
lock
inc
or
adc
and
xor
jno
mov
cmc
int
cmp
xor
inc
or
ja
rcrb
or
xchg
push
int3
pop
xchg
pushf
repz
xor
mov
fcomi
mov
inc
pop
or
clc
xchg
das
popa
fcomip
add
sbb
push
jle
mov
jb
pop
pop
movsl
add
imul
sbb
mov
enter
enter
hlt
dec
cmpb
loope
out
aam
lods
inc
mov
xchg
ret
adc
gs
popa
cld
fisttpl
psllq
lahf
xchg
mov
out
mov
inc
popa
arpl
repz
push
push
or
jmp
stos
or
ret
push
adc
or
loope
sbb
lods
mov
test
in
sub
jge
js
cmp
pop
lcall
adc
push
dec
xlat
mov
mov
add
dec
sbb
cmpsb
mov
insb
js
repnz
cmpsl
inc
jp
outsl
sbb
add
in
das
loope
add
jle
fistpl
mov
insl
sbb
add
sbb
jbe
stc
lret
sbb
in
cmp
fisubs
adc
inc
inc
das
testl
lahf
pushl
aam
jne
cld
and
imul
scas
dec
outsb
xchg
pop
fsubrs
sub
sbb
cmp
movsl
stos
ljmp
rolb
sti
pop
imul
mov
mov
sub
jno
sti
mov
sbb
cmp
or
cwtl
sbb
pop
push
dec
lahf
jns
push
lds
xchg
cmp
cmpsb
std
rorl
in
out
cmp
and
and
jne
lods
outsl
cs
xlat
in
in
stos
mov
movsl
inc
or
push
inc
adc
fisttpl
jno
xor
shlb
repnz
xchg
test
add
mov
mov
scas
sub
sbb
insb
test
adc
test
loopne
jle
pop
popl
and
insl
ja
pop
clc
cmp
cltd
notb
fwait
xchg
cmpsb
dec
fwait
jge
sbb
fistpl
aad
enter
cltd
cmp
cltd
outsl
jo
sbb
adc
fwait
mov
fwait
dec
adc
mov
mov
repnz
stos
lods
out
andb
js
std
std
mov
inc
insl
aaa
pop
enter
andb
out
movsl
push
jmp
aam
xchg
out
jmp
pop
pop
xor
xor
in
mov
xchg
shr
add
mov
jge
inc
std
push
mov
or
popf
mov
pushl
test
dec
in
add
jns
orb
mov
inc
inc
gs
movsb
arpl
mov
sbb
xor
ljmp
stos
lahf
mov
pop
je
aas
lret
mov
jmp
push
push
push
pop
jmp
ret
aas
mov
insl
or
mov
ds
addl
jnp
shl
push
or
notb
pusha
cwtl
dec
into
jmp
and
in
je
mov
sub
sbb
cs
jle
dec
arpl
sti
ret
xchg
xor
loope
xchg
cmp
das
outsl
mov
dec
sbb
mov
adc
and
lcall
mov
dec
outsb
ret
andl
pop
stos
push
dec
fsub
pushf
and
inc
sub
popl
mov
inc
fistl
out
divb
mov
inc
cmc
ljmp
shrb
data16
dec
xchg
ljmp
inc
and
int
fiaddl
inc
into
shrb
mov
fnsave
sub
in
scas
data16
clc
je
test
cmp
icebp
adc
inc
loope
xor
mov
xchg
and
and
lock
sub
or
icebp
cmp
sbb
fisttpll
xchg
pop
pusha
ret
sbb
or
sub
rorl
xchg
fwait
lahf
add
sub
mov
arpl
and
mov
and
stos
sub
dec
pop
fwait
call
test
iret
sbb
adc
push
jb
xor
xchg
push
pop
pop
cltd
push
aad
addr16
jne
repz
jns
cmp
dec
adc
iret
into
and
inc
mov
sbb
insb
jg
lea
jge
jecxz
aaa
xchg
mov
call
out
aad
icebp
adc
aam
movzwl
dec
pop
jmp
ret
xor
dec
adc
cltd
pop
sbb
adc
out
jl
in
cmp
dec
cltd
js
jmp
fildl
lret
sub
jle
lods
lods
cmp
sub
insb
popf
ss
mov
or
insl
inc
jge
in
xchg
push
addr16
popf
sarb
jmp
cmp
hlt
movsb
jns
out
aaa
xor
and
xor
cmp
jmp
mov
popf
push
rcr
out
add
pop
pop
ret
ret
imul
stos
xor
or
daa
faddl
cltd
sbb
jno
in
cmpl
fs
int
jns
loop
mov
outsl
pop
push
mov
fwait
pop
dec
dec
aad
lea
inc
cwtl
jge
scas
into
imul
insl
xor
xchg
sbb
ret
ficompl
ljmp
xchg
popf
adc
cmp
popf
push
mov
dec
sub
push
add
movb
inc
mov
arpl
jne
scas
shll
or
jne
mov
mov
cmp
or
test
in
mov
cmp
adc
add
push
push
jmp
dec
arpl
mov
adc
js
cld
in
cmp
inc
int
xchg
mov
lahf
insb
andb
adc
in
filds
out
insb
and
push
imul
mov
add
stc
pop
rcl
dec
stos
cmp
loopne
sahf
in
dec
mov
cmp
movsb
das
add
loope
or
data16
dec
push
cwtl
scas
mov
call
arpl
mov
sti
push
inc
iret
ds
jge
sarl
sarl
jae
shlb
ss
push
dec
cwtl
xchg
mov
aas
movsb
clc
cmp
mov
les
pop
cld
xchg
xchg
push
adcl
xchg
dec
xor
hlt
mov
ficompl
outsb
mov
dec
xor
popf
dec
or
fbld
loopne
sub
movsb
xchg
orl
add
mov
insb
and
xchg
icebp
xchg
cmp
push
imul
xor
out
sbb
dec
sti
and
dec
pop
pop
ficomps
popa
es
push
mov
cmpsl
stos
jmp
dec
mov
inc
sbb
imul
mov
mov
jg
test
cmp
mov
in
pop
sarb
out
cwtl
dec
aaa
repnz
cmp
jne
pop
mov
cmp
push
or
xchg
inc
sub
lods
jge
sti
lret
std
fiaddl
xchg
xor
mov
mov
les
jg
jecxz
dec
fimull
pmaddwd
pop
lods
pop
das
cmpsl
dec
popf
cmc
mov
aad
or
jns
fwait
mov
je
jno
xlat
sbb
leave
shlb
push
lods
std
mov
pusha
dec
cmp
sahf
or
pop
jne
cmp
inc
cli
in
test
imul
xor
push
sti
inc
sti
jle
xchg
cltd
xchg
and
inc
testl
lock
ficompl
cltd
fists
popa
or
push
jle
mov
cwtl
mov
or
insl
or
lret
dec
mov
nop
stos
mov
aam
add
push
xchg
sub
hlt
scas
lea
mov
pop
std
jns
loope
mov
bound
sub
xlat
ret
test
mov
sub
push
addr16
push
fbstp
mov
push
cmp
int
inc
xor
mov
movsb
xor
imul
lcall
clc
fimull
aad
mov
lret
xor
mov
pushf
pop
xchg
mov
jo
cmp
sti
xchg
ret
js
decl
or
sub
jg
insb
xor
inc
mov
scas
adc
imul
xlat
pop
jmp
inc
cmpsb
aas
dec
cld
cmp
cld
jmp
sahf
fsts
rolb
and
jns
in
push
fisubl
xchg
data16
dec
in
and
lret
pop
push
inc
std
insl
repz
je
leave
test
int
mov
pop
int
dec
dec
subb
mov
in
pop
call
jmp
ljmp
mov
sbb
xchg
mov
or
dec
and
enter
push
lret
cmpsb
ss
mov
int3
jmp
iret
lahf
lcall
inc
mov
dec
fidivrl
push
call
add
mov
xlat
xchg
xchg
xchg
test
jmp
fstpl
and
inc
movsb
and
xor
jmp
or
and
xchg
lahf
dec
loop,pn
adc
into
dec
sub
pop
insl
and
xor
hlt
shr
jg
cli
cs
jg
in
add
jl
push
mov
cmp
fwait
add
jbe
xchg
cmp
mov
mov
xchg
xchg
lcall
insl
leave
cmp
push
shll
pop
mov
orb
jecxz
sub
inc
pushl
cmp
mov
sbbl
ss
subl
mov
inc
les
add
inc
or
das
sti
jl
mov
pop
jp
xor
push
in
lea
xchg
repnz
mov
inc
out
in
mov
mov
cmp
fbld
sub
jo
xor
stc
mov
cwtl
pop
roll
test
in
adc
sbb
adc
mov
jnp
dec
loop
or
test
jnp
xchg
insb
inc
sub
lahf
arpl
aas
pop
out
mov
pop
push
out
jecxz
fwait
pop
push
pop
or
fadds
jmp
out
xchg
jne
or
mov
sub
dec
push
xor
jns
ljmp
push
inc
nop
dec
pusha
push
decb
les
push
or
mov
pop
or
xchg
hlt
push
pop
mov
push
xchg
cmpsb
mov
int
outsl
or
imul
movsb
clc
fisubrl
in
outsb
gs
push
aas
sub
insl
mov
test
inc
or
pop
xor
inc
stos
daa
dec
addr16
jbe
insb
daa
dec
test
pop
ja
decl
and
and
ljmp
jne
pop
lds
push
jl
xor
or
pop
and
andl
mov
mov
js
jne
add
jecxz
mov
ficomps
add
inc
push
pop
inc
push
mov
call
pop
adc
rcrb
jb
push
dec
or
imul
pushf
cmp
pop
fsubrs
mov
mov
shlb
xchg
pop
xchg
xor
mov
sub
jge
jle
push
lret
cmc
push
scas
hlt
sub
repnz
dec
pop
mov
cli
and
int3
lods
orl
push
clc
call
sbb
sahf
lret
mov
insl
push
iret
xor
mov
inc
sbb
int
clc
fbstp
into
pushf
dec
mov
mov
nop
xor
lret
in
cwtl
xor
ds
xchg
std
fildll
shrl
fisubl
repnz
add
push
sub
scas
xchg
call
mov
andl
mov
mov
mov
xchg
sub
lret
fsub
test
fcmovu
js
mov
inc
pop
mov
jne
hlt
in
popf
add
and
cmp
mov
insl
les
popf
xchg
shlb
pusha
cmp
jp
mov
les
insl
fwait
xor
int3
fistpll
in
xchg
push
or
imul
leave
imul
dec
es
pop
fistpl
lds
test
sub
movq
push
dec
xor
xorl
mov
fcomip
cmp
sbb
call
sbb
push
inc
dec
jg
mov
or
sub
cmp
call
xchg
mov
pop
outsl
cmp
into
lods
jbe
ret
push
bound
ret
sti
sbb
fisttpl
in
testb
jbe
and
bnd
xchg
rcrb
mov
cmp
dec
xchg
pop
xchg
ds
lods
adc
inc
dec
ret
cmp
sub
inc
push
sbb
call
icebp
and
cmovb
push
nop
in
adc
fldl
out
data16
in
dec
xor
fs
inc
mov
mov
ret
and
cmp
lret
shlb
call
sti
mov
fisttpl
mov
loop
repz
mov
mov
xor
adc
imul
cli
and
lods
sbb
or
mov
ret
int
or
cmp
stc
test
mov
daa
mov
lret
pop
jl
pop
js
mov
popa
xchg
shrl
pushf
adc
arpl
loope
mov
std
adc
adc
cltd
jae
lock
out
push
mov
in
xor
stos
fisttpll
insl
sar
and
xor
popf
xor
jp
aas
fimull
push
aaa
or
xchg
xor
lcall
pop
clc
sbb
push
adc
fsub
in
jle
xchg
test
xchg
movsl
jmp
sub
je
push
inc
mov
mov
pop
sbb
fcompl
out
jo
movsb
pushf
test
sbb
sbbb
push
xchg
mov
jl
in
inc
ret
ljmp
aas
dec
jmp
mov
jns
xchg
pop
in
jbe
push
add
push
push
andl
ret
fldt
dec
sub
js
add
fsub
jb
adc
sbb
or
inc
sti
push
ss
sbb
les
movhlps
test
push
ljmp
xlat
lcall
mov
arpl
cmc
xor
call
fistps
ret
out
xchg
xlat
adc
xor
inc
jnp
jmp
shlb
cld
addr16
adc
mov
mov
out
sub
in
add
testb
sub
adc
mov
xchg
xor
add
and
ret
loopne
pop
aad
pop
out
mov
rcrb
jb
gs
dec
loope
fxsave
mov
mov
mov
push
push
test
les
cwtl
mov
add
push
adc
cmp
fists
inc
push
add
imul
test
pop
aaa
push
outsl
dec
pop
cwtl
mov
inc
out
jns
loop
push
fmul
pop
or
mov
fs
pop
les
mov
lods
js
enter
mov
ja
fnstsw
sbb
mov
pop
jae
jge
sub
fwait
movsb
cwtl
lods
cld
jle
add
je
nop
cwtl
mov
jns
mov
mov
push
push
push
dec
dec
stos
das
andl
jl
mov
push
or
pop
shrb
jp
popf
data16
hlt
mov
mov
xchg
sub
popa
push
test
int
test
sbb
sub
add
lods
loope
movsl
pop
xchg
lds
popf
mov
jb
loop
cmp
sbb
sbb
hlt
or
add
mov
xor
das
or
mov
mov
test
xor
xlat
mov
jns
mov
stc
call
xchg
lret
push
xlat
cwtl
push
mov
idiv
xor
aas
inc
stos
dec
pop
xchg
ss
pop
ds
aad
pop
inc
sub
mov
pusha
xor
mov
jp
pop
incb
test
mov
lahf
call
xchg
mov
xchg
pusha
mov
and
aad
cmp
js
icebp
and
jg
iret
xchg
fcomps
jge
cmp
fiadds
aam
cs
pop
sbb
enter
rorl
movswl
sti
int3
jle
mov
fisubrs
pop
inc
jno
mov
sub
in
xchg
adc
push
mov
xchg
sbb
sti
fs
and
sub
cmp
les
xchg
sub
lcall
outsb
popa
outsl
idivb
adc
repnz
push
leave
aas
mov
fisubs
and
pop
fstpt
lahf
loopne
fsub
sbb
cmp
xchg
bound
mov
test
loopne
mov
pushf
in
repnz
imul
xchg
mov
cmp
or
mov
int3
mov
nopl
in
scas
fisubs
test
int
inc
fmulp
jle
rcrb
sub
dec
movsl
sarl
into
jecxz
fcomp
lcall
xlat
bnd
jae
pop
icebp
mov
add
inc
dec
add
test
add
cltd
mov
mov
lds
jo
adc
pop
shll
jbe
cmpsb
loop
push
adc
out
mov
mov
int
mov
mov
into
out
ljmp
mov
mov
pop
jmp
adc
scas
out
loope
push
jge
jecxz
xor
jne
mov
gs
xchg
cs
or
popf
xor
inc
pop
repz
test
add
cwtl
mov
dec
inc
pusha
cmp
jo
push
xor
std
fadd
push
inc
test
lret
mov
dec
push
add
mov
and
sbb
jmp
adcl
mov
mov
push
dec
fidivl
inc
jnp
jno
mov
inc
xor
aas
scas
or
inc
mov
push
sub
and
or
pop
fidivs
sbb
push
mov
call
insb
lahf
and
stc
and
sti
cmp
in
cmpsb
inc
cmpsb
or
add
adc
inc
imul
imul
jnp
mov
les
testl
dec
adc
pop
xchg
shl
xchg
insl
push
cmp
fwait
jns
aaa
scas
sub
dec
push
cmp
sbb
lea
inc
mov
jl
push
fistpl
push
or
lret
inc
xchg
inc
jae
out
adc
out
js
jge
popa
jecxz
enter
insb
pop
divl
int
cwtl
add
xchg
lds
lcall
lea
in
ficoml
and
stc
ja
dec
out
inc
adc
mov
push
xchg
lock
and
cmp
pop
mov
leave
lds
mov
xor
loopne
fwait
mov
sub
jnp
add
pop
sub
scas
inc
cmp
jg
hlt
add
stc
or
push
call
aaa
je
test
mov
loopne
dec
push
ds
ja
xchg
inc
and
sub
sbb
pop
mov
popa
pop
sub
sbb
and
adc
sub
add
xor
out
insl
dec
out
sbb
dec
mov
orb
xor
xchg
push
mov
sbb
mov
jecxz
subb
inc
loop
loope
push
xor
imul
or
cmp
sbb
lods
push
es
pop
jnp
or
stc
arpl
mov
andb
ret
je
fwait
testb
loopne
sbb
mov
int
pop
mov
ja
mov
popf
pop
fisubs
pop
pop
into
cmp
jne
jge
lods
or
rcrl
sub
xchg
jbe
into
mov
mov
xchg
mov
adc
dec
imul
adc
push
xchg
jl
sbb
into
cli
push
mov
dec
and
push
test
inc
in
mov
jns
fstpl
or
daa
pop
fsubr
sarl
xchg
movsb
mov
xor
pusha
mov
mov
jp,pn
xor
pop
cmpsb
push
dec
cmpsb
hlt
popa
in
adc
ss
dec
mov
or
sub
iret
pop
xchg
xchg
dec
mov
mov
out
ret
xor
aam
aaa
aam
punpcklbw
loop
mov
rolb
pop
fwait
cmp
add
push
aad
xchg
jg
push
cmp
mov
mov
jne
mov
sahf
jno
icebp
add
mov
mov
xchg
loopne
in
xor
loope
and
pusha
add
shll
xor
scas
add
inc
scas
cmpsb
in
jp
jo
pop
clc
cmp
sbb
cmpsb
sub
cmovnp
out
insb
fadds
mov
mov
fdivrl
jb
addl
je
ljmp
jne
jae
inc
jne
mov
inc
push
mov
adc
scas
repz
cld
xor
clc
jl
loopne
push
shl
lahf
pop
mov
xchg
cli
jb
sbb
test
mov
mulb
imul
jne
je
mov
aam
sarb
in
xor
sbb
mov
mov
hlt
lds
and
cmp
fisubrs
sbb
ss
aas
testl
and
jne
inc
mov
out
pop
ret
stos
out
xchg
jae
mov
cs
jno
cmc
scas
jbe
push
cld
add
cwtl
popf
jo
push
sub
jae
xchg
mov
dec
fldt
lock
mov
dec
lock
xor
xlat
push
jl
mov
orl
aam
jl
test
inc
cld
out
fs
sub
cmpsl
pop
test
out
ja
push
mov
aam
push
adc
push
lahf
mov
loope
decb
enter
imul
mov
push
fdivs
cmc
call
mov
xchg
fimull
icebp
pop
jns
mov
cmp
cs
into
and
push
stc
pop
enter
outsl
pop
sbb
adc
test
push
and
ss
adcl
in
xchg
jp
mov
cmp
cmp
add
push
push
not
ds
test
mov
dec
inc
insb
lods
push
inc
fists
and
dec
dec
pop
int3
lock
les
jbe
and
dec
addr16
inc
and
add
lcall
out
mov
sbb
xchg
in
inc
mov
loope
mov
or
enter
popf
inc
sub
mov
push
mov
add
popa
and
movsl
mov
icebp
xorl
sbb
xchg
aad
sahf
fs
mov
mov
out
daa
movsb
adc
jmp
lret
and
filds
fistps
sahf
scas
push
mov
das
cs
mov
mov
dec
xor
fwait
insl
or
pop
and
push
pop
add
pop
repnz
ja
testb
scas
jmp
outsb
jb
inc
sarb
jb
mov
cltd
fists
sbb
xlat
sbb
cmp
cmpsl
rclb
int
mov
sbb
out
mov
or
push
and
std
push
ret
lea
mov
lret
pop
lea
shll
push
inc
jb
dec
stos
in
xchg
jl
cmpsl
jmp
or
mov
add
aaa
sbb
aas
dec
jmp
mov
cltd
xchg
mov
push
popf
push
adc
jae
mov
ljmp
push
dec
or
cmp
shlb
push
je
dec
sbb
push
out
push
or
sbb
add
ljmp
push
or
mov
or
pop
test
xchg
xor
sbb
test
mov
dec
push
data16
mov
mov
cmp
sbb
pop
fs
das
js
sbb
and
es
std
pop
mov
lcall
dec
aam
cmp
mov
mov
xchg
dec
dec
dec
push
sbbl
adc
inc
cmp
mov
mov
xchg
cmc
cld
in
dec
sub
pop
dec
jbe
sbb
fdivr
dec
push
outsl
ja
aas
inc
imul
ja
shlb
outsb
sahf
popa
loopne
lret
jge
add
mov
in
insl
and
das
adc
inc
clc
mov
je
jae
jle
cwtl
rorl
xor
adcb
push
pop
loope
xchg
jp
cmp
cwtl
sbb
dec
dec
ja
fs
gs
in
js
in
loop
packssdw
sub
cld
xchg
enter
movsl
jns
out
cli
sub
mov
inc
mov
enter
adc
and
xchg
daa
push
dec
xlat
iret
dec
dec
mov
xchg
inc
ret
mov
into
xor
and
daa
pop
repnz
inc
and
pop
xor
ja
mov
mov
icebp
xor
or
xor
aad
sub
and
sub
fmuls
jbe
push
movsb
jno
mov
or
or
outsl
pushf
imulb
sbb
add
sub
dec
xchg
das
repnz
les
inc
fistps
mov
les
pop
mov
mov
int3
or
bswap
sub
dec
out
test
mov
mov
mov
jnp
shlb
repz
mov
jo
out
into
cmp
into
cld
ror
inc
cli
gs
jo
repz
push
popf
push
push
repnz
movsl
movsb
cli
mov
adc
fwait
insb
pop
aad
iret
cmp
mov
adc
cld
push
lcall
fisubrl
push
cld
aad
xchg
pop
xchg
in
jno
jno
jecxz
jb
lods
mov
ss
push
lcall
mov
cs
lret
pop
inc
inc
ljmp
and
dec
dec
dec
push
lret
in
xor
int3
imul
movsb
xchg
adc
andl
mov
sub
stos
mov
pusha
sbb
mov
sub
shl
xor
rcrl
push
in
pop
in
inc
adc
xor
scas
sbb
sub
scas
cmpsl
inc
dec
xchg
test
mov
xchg
call
sahf
andl
adc
inc
cmpsb
nop
shrl
cs
popa
sub
push
xorb
mov
and
scas
vrcpps
je
mov
insl
ficoml
add
repnz
jmp
pop
clc
outsl
addb
cli
imul
sub
lds
lahf
push
iret
lcall
ret
sbb
rorl
outsl
lcall
mov
imul
out
test
dec
pop
in
lret
lods
jmp
pop
jno
sub
jbe
in
ret
stc
sub
pop
leave
lods
push
xor
daa
inc
push
add
pop
in
incl
mov
mov
mov
pushf
push
adc
sbb
dec
xchg
mov
push
inc
add
out
fisubl
test
and
mov
nop
cmp
dec
paddd
in
adc
sub
xchg
in
pusha
lcall
jbe
dec
jne
jne
das
mov
in
xchg
je
and
push
repnz
xchg
nop
dec
imul
movsl
sbb
xor
stc
and
into
shlw
mov
push
fistl
cltd
jecxz
xchg
push
sub
out
popf
out
insb
into
js
scas
mov
cmp
inc
cs
out
xorps
out
cmp
or
add
dec
xchg
daa
outsb
std
les
imul
dec
clc
sub
shlb
jo
fildll
mov
or
clc
int3
mov
sarb
imul
orb
aam
addb
xlat
rcr
inc
adc
jle
sub
sti
cmp
jb
pop
push
mov
sahf
jecxz
inc
mov
outsl
fldt
push
lret
mov
pop
stc
or
push
push
add
test
inc
pop
aas
dec
std
dec
and
daa
adc
aad
not
and
push
push
or
repz
and
popa
sarb
mov
andl
stos
fldenv
fisttpll
nop
mov
xchg
sbbl
lock
fisubs
mov
add
dec
mov
or
or
pop
sbb
dec
out
mov
xor
sarl
aaa
mov
push
shlb
cmp
lea
in
inc
sbb
scas
ss
push
sub
sbb
inc
in
push
pop
test
push
push
ret
xor
pop
xchg
add
inc
cmp
inc
mov
mov
stc
bnd
call
hlt
les
push
mov
ret
test
lods
xchg
and
outsb
xor
dec
mov
push
and
lock
add
jo
push
adcl
dec
std
aad
pop
fmul
jg
mov
mov
cli
cmpsb
lcall
push
and
add
mov
iret
mov
mov
jp
add
mov
add
xchg
push
inc
xlat
or
fwait
andb
shlb
inc
push
pop
fistl
inc
es
cmp
loopne
pop
push
jbe
sub
mov
jbe
mov
jne
pop
jp
cmc
in
in
lods
jle
xor
aaa
dec
outsl
xchg
push
stos
jne
or
pushf
cmp
mov
ret
inc
add
es
leave
mov
pop
inc
or
imul
jmp
sbb
jp
jno
movsb
fnstcw
lods
xor
fcompl
jo
sbb
sbb
add
sbb
jl
repnz
xor
ss
fcom
and
cmp
mov
xchg
add
sub
in
or
jae
frstor
and
insb
xchg
outsl
push
inc
ljmp
or
fistl
ja
fistpl
jmp
pop
sbb
scas
cwtl
cmp
repz
in
adc
ror
or
dec
movb
fimull
push
fcmovbe
loop
das
push
inc
mov
xchg
mov
adcb
inc
pop
int3
je
mov
pop
nop
loop
push
pop
lods
outsl
test
stc
cmp
pop
adc
testl
lea
mov
add
pop
jecxz
pop
mov
xchg
sub
cmp
sbb
mov
jnp
sub
and
pop
daa
hlt
in
lahf
roll
es
xor
mov
xchg
lea
clc
jb
sub
cli
xor
repz
pop
or
test
and
aad
cvtpi2ps
test
and
loop
add
sbb
add
add
jecxz
jo
imul
sbbl
add
in
xor
enter
pop
out
add
test
stc
js
mov
in
mov
or
repnz
mov
sub
loopne
icebp
xor
or
jae
add
mov
jnp
cwtl
or
nop
mov
mov
int
xlat
fs
jbe
and
pop
inc
enter
imul
in
jmp
dec
xlat
aaa
or
popf
adc
leave
fs
fucomi
xchg
add
cmp
pop
mov
test
mov
add
xchg
lahf
enter
dec
xor
leave
push
cli
or
push
push
les
into
outsb
xchg
lahf
inc
cmp
pop
pop
aad
sbb
xchg
and
mov
subb
sub
jno
movsl
mov
dec
or
or
inc
dec
add
fcoml
in
test
rcl
mov
icebp
out
sbb
mov
aam
sbb
jecxz
xchg
out
mov
loopne
jp
mov
jb
mov
imul
push
add
into
xchg
pop
dec
add
pop
push
ficompl
notl
xchg
divb
jae
enter
rolb
in
jne
mov
and
jns
pop
cmpsb
mov
int
or
mov
out
lret
out
test
cmp
pop
jl
ret
les
xchg
dec
xchg
enter
jecxz
add
mov
xchg
fiaddl
mov
add
shll
in
inc
push
cltd
nop
inc
andb
inc
stc
mov
jle
or
iret
add
les
mov
add
mov
mov
mov
cmpsl
rcrl
fcoms
clc
or
xor
mulb
cmp
push
fwait
jecxz
pop
push
out
dec
cmp
dec
adc
sub
mov
mov
jecxz
es
mov
cwtl
in
fmuls
xor
push
cs
les
sub
xchg
xchg
cmp
bound
adc
test
sbb
mov
adc
push
faddl
mov
jge
das
or
cld
insl
dec
mov
xchg
das
imul
sub
ja
mov
sbb
sahf
out
xrelease
cmpsl
add
and
and
and
out
mov
cmc
int3
dec
movsb
jge
and
add
and
je
test
sub
int
push
add
jle
out
fs
jle
lock
cmp
sahf
or
push
test
scas
xor
adc
xchg
push
add
mov
loopne
out
mov
dec
pop
sbb
out
xlat
dec
push
dec
push
into
loopne
lcall
push
iret
jo
mov
fs
hlt
mov
stc
cmpb
mov
xchg
mov
pop
jge
sti
mov
sub
cmc
les
xor
dec
inc
outsb
mov
pop
mov
lods
aad
mov
mov
inc
cmp
and
addr16
nop
in
lds
in
and
mov
dec
xchg
mov
xlat
pop
insl
mov
movsb
nop
dec
adc
or
cmp
movsl
shll
icebp
insb
iret
out
repnz
pop
in
clc
inc
pop
es
jns
lds
into
bound
mov
sub
aaa
or
in
inc
icebp
scas
jo
sbb
addr16
jbe
movsb
out
adc
sbb
out
repz
or
push
out
adc
fwait
add
fsts
pushf
mov
lcall
sub
mov
pop
nop
sub
pop
gs
dec
mov
mov
in
mov
sub
push
pop
jmp
shl
scas
mov
mov
ljmp
cmpl
daa
push
xchg
sub
jle
data16
outsb
lcall
sub
fnstcw
ljmp
and
lret
jle
or
stos
into
mov
cmpsb
add
cmpsl
das
enter
std
inc
sbb
out
mov
lret
sub
adc
pop
lahf
or
inc
fstl
cltd
pop
pop
dec
repnz
out
xchg
mov
sti
ja
sti
cmp
and
inc
daa
mov
and
or
je
pop
icebp
and
cmpsl
insb
js
ss
popfw
xchg
fistpl
stos
fcmove
inc
fcomps
adc
aas
add
push
sub
mov
sub
scas
adc
movsl
fidivrl
ret
jne
lods
adc
cmp
imull
std
insb
cmpsb
xor
mov
sbb
flds
mov
cs
xor
jb
adc
add
or
pusha
aas
or
push
push
or
ljmp
loopne
or
movsb
mov
mov
popa
loop
jle
xchg
inc
sbb
cmc
aas
mov
cmp
test
mov
inc
mov
stc
nop
into
push
sbb
sub
pop
mov
pop
sbb
ret
pusha
lods
dec
jae
sub
js
pop
js
jno
jno
jne
les
mov
push
decb
lret
sar
dec
in
push
xchg
sub
gs
mov
jnp
in
sbb
or
in
add
pop
pop
push
out
jns
xchg
mov
mov
sbb
scas
lret
cs
cmp
cmp
lcall
data16
mov
xchg
dec
cmpl
jle
lcall
sahf
insb
pop
decl
stos
push
rol
mov
fwait
mov
rolb
jle
mov
cltd
xchg
outsb
mov
shrl
lret
int
insb
push
in
mov
icebp
out
cmp
in
pop
adc
mov
inc
xor
xchg
movsl
repz
pusha
ja
xchg
call
outsb
imul
daa
bound
das
cmp
lock
sub
orl
aaa
test
cwtl
lea
push
test
ds
addr16
mov
dec
stos
jg
std
mov
fcomi
push
ljmp
cmpsb
imul
sbb
xchg
cmc
test
adc
repz
lock
sub
xchg
fcoms
cli
inc
loop
cmp
push
jge
ja
lahf
sbb
out
mov
cwtl
adc
aad
sub
or
add
nop
popf
ja
test
xchg
leave
sub
push
xchg
cmc
out
and
dec
loopne
push
inc
icebp
push
cmpsb
clc
setge
sbb
jo
push
xchg
xor
jecxz
les
jmp
pop
fsubrs
mov
lret
jo
xlat
scas
jecxz
jle
rorl
pop
icebp
fstpl
shll
mov
fists
shll
sti
push
clc
loop
sub
sbb
mov
or
push
jne
cmc
test
mov
fidivs
dec
aam
mov
xor
or
ret
movsl
xor
xchg
les
xorb
popf
sub
fldl
neg
vpaddw
arpl
xor
dec
mov
dec
jl
mov
pushf
jae
mov
sti
sahf
sbb
xlat
cmpl
test
clc
mov
or
xor
sub
jg
pop
movsb
add
popa
das
imull
pop
adc
pop
cmpsl
xchg
or
mov
inc
cmc
add
repz
pop
sub
mov
sti
cmpsb
inc
movsl
add
mov
adc
inc
pop
xorb
mov
cmp
icebp
mov
divl
stos
mov
push
outsl
add
ss
data16
imul
push
call
loopne
std
jecxz
subl
lock
or
pop
fcmovnbe
aas
es
mov
jp
mov
stc
movsb
push
xchg
jns
shl
pop
mov
out
pushf
incl
mov
ja
in
fistl
fstpl
vpshaw
popa
or
scas
adc
sbb
gs
and
fs
xchg
sub
pushf
in
aas
movsl
jg
mov
mov
popa
dec
enter
mov
into
cmpsl
push
clc
push
in
lock
ror
lahf
ljmp
or
nop
pop
or
sbb
push
pop
in
mov
sub
out
mov
loope
in
mov
xor
mov
dec
std
cmp
mov
inc
test
xchg
mov
repz
mov
aad
fnstsw
mov
ja
outsb
mov
ret
jb
loope
mov
leave
fsubl
scas
movsw
sub
in
pusha
andl
mov
loopne
out
fildl
dec
ljmp
jle
jmp
adc
or
inc
aas
nop
adc
fcompl
fwait
xor
adc
cmp
pop
mov
xchg
js
daa
ss
movsb
or
xchg
adc
lods
arpl
adc
out
push
fwait
imul
insl
dec
subl
xchg
and
dec
test
mov
add
sub
in
push
cmp
push
cltd
sbb
lds
test
and
pushf
in
gs
jnp
hlt
loop
mov
jns
fwait
and
sub
add
sub
push
loopew
jb
sub
imul
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
aas
cmp
aas
push
cmp
jae
lea
xchg
mov
xor
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
insl
pop
jo
sbb
dec
jbe
rorl
inc
xor
out
push
cmp
lods
adc
push
mov
adc
push
movsl
pop
xor
jg
mov
push
cmp
je
mov
ret
mov
cmp
mov
cmp
xor
mov
imul
adc
mov
cld
pop
mov
stos
test
cmp
loopne
lret
xor
ficomps
pop
mov
dec
jns
pop
xchg
ret
loope
sub
mov
sub
push
pop
jns
mov
mov
aaa
test
and
les
mov
jae
jb
lds
push
je
and
xchg
test
sahf
jb
cmpb
cmp
jb
jae
cmpb
cmp
es
push
jae
jb
xchg
adcb
ss
aam
arpl
es
shll
cmpl
int
push
jae
jb
cmpb
xor
es
xor
ja
cmpb
mov
push
arpl
jb
subb
cmp
jae
bound
aas
push
cmp
jae
dec
outsl
adcb
mov
cmp
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
scas
dec
xor
es
fidivl
nop
aas
push
cmp
enter
shll
es
or
enter
icebp
jb
pusha
adc
roll
xor
jb
or
cmp
stos
aad
arpl
es
rcll
sbb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
jae
jb
cmpb
cmp
fcmovnu
jb
cmpb
cmp
adc
outsl
mov
movsb
xor
push
sub
mov
inc
lods
dec
idivl
inc
dec
pop
mov
out
andl
sbbb
mov
mov
inc
out
jo
popf
mov
xor
xchg
pop
cmpb
clc
jns
jnp
xchg
mov
sub
push
sub
enter
xor
lods
fdivr
adc
shl
dec
sub
enter
jg
fyl2xp1
add
fiadds
pop
js
inc
mov
pop
pop
pop
adc
and
incl
sbb
mov
pop
addr16
adc
leave
sub
clc
and
je
sbb
push
mov
movb
mov
sub
sahf
decl
jbe
adc
add
pop
jno
push
xor
iret
mov
imul
in
push
stos
in
dec
push
lods
cmp
nop
jne
pop
addl
icebp
cmp
aam
rcrl
lods
cmp
push
sbb
cmpb
jge
rol
push
or
mov
or
sub
jb
and
out
sub
out
mov
mov
push
daa
movsb
pop
push
xchg
mov
ds
gs
aaa
cld
mov
sub
stc
cmp
inc
ja
cmc
adc
idiv
fnsave
data16
sti
ret
sbb
and
inc
jmp
mov
sbb
mov
push
sbb
sbb
daa
xlat
sub
mov
daa
mov
cs
pop
push
sub
lods
aaa
daa
out
xor
cld
in
pop
jo
adc
insl
lret
out
in
or
fs
in
cs
mov
or
jnp
aad
addb
xchg
sbb
pop
xor
sbb
push
inc
dec
fdivrl
ficoml
push
push
cs
imul
cld
shl
sub
ret
sbb
sbb
add
out
adc
sub
fwait
cmp
ljmp
shl
xor
add
add
push
movsl
stos
cmp
and
cmp
cli
les
inc
jnp
jle
jl
test
rcll
xchg
sub
xchg
ljmp
das
repz
sbb
or
js
repnz
addr16
scas
out
and
xor
loope
or
nop
insb
push
dec
mov
mov
jl
cmc
addb
mov
dec
dec
lret
adc
popf
fs
add
cs
fidivrs
cmp
cmp
xlat
sub
sbb
jle
daa
pop
aas
es
shl
xor
sub
rcrb
ss
mov
push
hlt
orb
hlt
movsb
push
fisttpl
sahf
push
and
pop
push
inc
test
loopne
loope
loopne
out
jmp
es
or
int3
pushf
mov
gs
pop
cmpsb
inc
sub
fwait
lcall
sbb
jg
push
mov
scas
or
and
vpaddsb
enter
test
lods
jl
std
cld
pop
jl
test
cmp
and
in
mov
iret
jle
in
fwait
sub
dec
pop
pop
adc
loopne
jle
and
insl
loopne
jne
test
xchg
push
mov
into
arpl
push
sarl
mov
or
dec
mov
aam
mov
movl
or
imul
push
add
jb
js
mov
jo
sarl
aad
je
push
pop
inc
rorb
icebp
das
mov
xlat
pop
pop
push
inc
pop
add
lods
dec
pop
daa
leave
jmp
cmp
sub
pop
or
mov
jno
lock
popf
sahf
xor
pop
xor
and
test
push
iret
sbb
out
push
push
dec
and
mov
push
imul
inc
jl
ds
jnp
push
rcrl
gs
sub
pop
nop
add
scas
xchg
lea
mov
stc
and
pop
dec
scas
lret
insb
inc
mov
cli
mov
dec
out
lea
add
aam
xor
pop
std
xor
stos
push
mov
and
mov
scas
or
mov
xor
and
inc
cmp
dec
cld
jbe
sub
dec
sahf
idiv
rclb
daa
mov
pusha
cmpsl
inc
jne
ss
push
mov
outsb
popf
stc
imul
add
xchg
int
fdivrs
inc
push
dec
adc
adc
loop
mov
mov
xlat
inc
jle
insb
rcrb
push
and
inc
push
sub
xor
popf
and
jb
cmp
mov
jecxz
int
sbb
stos
movsb
sbb
std
and
lea
sbb
shr
sahf
pop
je
ret
mov
jmp
sbb
lods
les
cmp
sahf
ja
pop
mov
popf
pop
or
popa
xchg
adc
pop
sbb
sub
xor
mov
mov
and
lret
xor
sbb
jne
jmp
xor
inc
dec
xor
inc
adc
lcall
fcmovbe
pusha
popf
lret
addr16
je
cli
movsl
clc
rcr
stc
jb
jne
or
sahf
inc
jp
addl
test
sti
pop
fisttpll
mov
notb
cmpsl
push
mov
add
xchg
push
push
or
addb
je
cwtl
mov
jo
outsl
stc
pop
adc
push
xchg
mov
ja
xor
mov
or
pop
add
inc
mov
into
cmp
adc
dec
lods
inc
jg
fsubl
xchg
and
pusha
jle
jo
cld
adc
adc
lahf
jno
mov
dec
test
inc
dec
cmp
jg
mov
outsl
les
xchg
lcall
fs
lgs
add
pop
jmp
add
loop
push
cmpsl
call
adc
lcall
fsts
ja
jle
mov
jmp
pop
push
push
pop
aas
inc
mov
dec
or
aaa
leave
push
mov
aaa
int
fs
mov
lret
test
sub
lds
inc
push
sbb
ficoms
cmp
bound
dec
cmp
adc
cmp
outsl
xchg
adc
fldcw
sub
jb
ja
xchg
cmp
xlat
inc
scas
imul
inc
inc
xchg
scas
je
sahf
fbstp
lahf
jo
sbb
test
push
sub
adc
pop
negb
inc
cmc
imul
fstp
sub
pop
push
les
mov
push
dec
popa
dec
or
test
data16
into
call
jl
xchg
scas
push
das
out
mov
fstl
cmc
inc
sub
or
pushw
imul
int3
or
mov
dec
mov
lock
lahf
add
cmp
cmp
jmpw
push
mov
sub
push
divb
rcll
jl
cmp
sbb
inc
cmpsl
inc
cld
inc
pop
lock
loop
mov
ja
xlat
stos
movsb
push
xchg
in
mov
mov
aad
add
cli
jmp
sti
das
add
int
popa
mov
mov
mov
pop
insb
aas
sbb
adc
dec
inc
sub
xchg
lahf
or
add
std
xchg
jns
jnp
or
mov
lret
xchg
mov
repz
xchg
push
pop
jg
in
fcompl
or
cmc
pop
bnd
mov
cli
adc
stos
cmp
jbe
clc
inc
pop
adc
sbb
inc
add
sub
push
pop
cmp
jg
inc
enter
sub
fmull
jmp
cmp
xlat
xor
bound
mov
fsubrp
sti
push
pushf
aam
mov
jae
add
les
jmp
jae
mov
shl
aam
imul
addr16
inc
xchg
aam
cmp
imul
sarb
mov
cmpps
dec
sub
loop
add
cmp
mov
scas
sub
mov
xor
aam
popf
dec
push
sub
xor
test
mov
gs
and
jecxz
mov
jp
mov
jmp
fistpl
sub
lods
lcall
pop
pushf
push
in
pop
xor
mov
cmp
iret
lods
jmp
sub
jno
push
mov
stos
mov
dec
inc
xlat
push
mov
mov
push
rcr
or
fwait
pusha
sbb
jne
xchg
je
add
and
loopne
mov
mov
inc
mov
ret
popf
jecxz
mov
stos
inc
inc
arpl
fsubs
push
out
scas
xorl
pop
jmp
push
stos
stc
andl
subb
push
sub
lds
push
stos
insb
addl
mov
and
lods
mov
xchg
int3
sbb
out
dec
in
fwait
jns
cs
xor
mov
stc
inc
cld
jb
xor
add
sbb
lahf
clc
add
pop
adc
into
pop
xor
imul
xchg
xor
sti
ds
push
and
mov
fdivr
mov
and
sarl
inc
call
jmp
inc
mov
pop
jne
jbe
push
or
test
pop
adc
xchg
mov
pop
insb
or
jp
or
stos
lret
xchg
repz
add
sbb
push
add
into
mov
test
or
xlat
fldcw
clc
sti
xor
in
xchg
mov
mov
inc
cmpsb
xchg
push
mov
incb
push
xor
lahf
clc
jno
pop
mov
lock
aas
gs
adc
pop
push
sbb
cmp
mov
sbb
add
scas
xchg
cmp
mov
je
mov
out
ret
dec
sahf
aam
in
leave
enter
cmp
pusha
stc
pop
jl
cmp
and
fs
pop
call
les
in
xor
push
push
cmp
ss
dec
push
loop
jb
or
mov
sub
enter
lods
in
jo
sub
sbb
stc
push
mov
or
dec
pop
add
je
sahf
pop
sbb
or
push
add
adc
stos
inc
sbb
pop
jb
jb
or
dec
fnstsw
scas
test
lret
fdivr
pop
ss
xchg
xchg
ret
and
add
pop
jb
fimull
mov
sbb
dec
mov
inc
mov
mov
push
in
pushf
loop
or
xchg
pusha
adc
adcl
cmpsb
xchg
xchg
xchg
aad
adc
aas
adc
mov
inc
std
cmpsb
pop
and
jns
push
iret
pop
int3
sub
jb
stos
test
cmpsl
or
popl
lret
jmp
shrl
sub
popa
dec
outsb
adc
aam
xlat
mov
popf
iret
inc
and
aad
pop
push
pop
jnp
lods
arpl
cld
stos
imul
ljmp
jg
dec
stos
sahf
call
fnstenv
lea
push
push
aaa
ret
pop
jmp
push
jno
xchg
pop
clc
cmp
repz
jle
push
dec
adc
fcmovnbe
xor
add
sbb
jg
mov
scas
test
pop
jnp
or
sub
sbb
ja
push
sti
arpl
fcoml
mov
jb
push
pop
js
fcomp
push
fcomps
or
cmpsb
mov
ss
enter
cld
dec
popa
std
mov
jmp
outsl
dec
in
mov
loopne
lea
mov
jmp
hlt
std
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
