push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
lods
mov
cmp
mov
adc
ficomps
dec
fiadds
xchg
add
dec
mov
add
pop
fs
dec
adc
lcall
jmp
scas
or
lcall
push
add
sbb
add
pop
std
mov
cmp
adc
dec
mov
loopne
ds
xchg
xchg
ja
int3
pusha
xlat
bound
lock
mov
outsl
cmp
cs
mov
shlb
mov
aad
and
testb
mov
imul
loope
xchg
push
mov
dec
addr16
cmpsb
xchg
mov
sbb
pop
int3
lahf
jb
andl
pop
push
jmp
sarl
xorb
sub
push
dec
gs
mov
xor
adc
sub
cld
xchg
ret
pop
leave
xor
pusha
xorb
aam
push
pushf
add
adc
nop
ret
stos
push
movsb
lds
and
and
ret
ret
sub
or
sbb
stos
or
popa
daa
fisttps
inc
and
iret
cmp
and
xchg
sub
push
fldl
xor
and
lahf
fisubl
js
pop
loop
mov
mov
pop
mov
imul
push
shlb
pop
xchg
mov
cwtl
in
in
stos
popl
lret
aam
pop
sub
dec
xor
push
jo
lret
insl
dec
cld
sub
xchg
int3
xchg
mov
and
inc
pop
cld
rolb
xor
sahf
shlb
fadd
mov
lahf
mov
int3
lds
adc
pop
popaw
mov
pop
dec
nop
call
movsl
add
sbb
push
mov
mov
int
sahf
ja
dec
andl
ficoml
scas
push
inc
pop
outsl
xchg
xchg
push
aas
lods
fstpl
lods
bound
jb
pop
and
mov
frstor
mov
in
xor
sbb
sbb
jnp
adc
inc
icebp
adc
push
scas
pop
dec
sbbl
movsb
and
xchg
andl
out
sarb
and
cwtl
lods
into
cmp
and
sub
sbb
mov
sti
lcall
data16
xchg
cltd
jg
push
pop
ds
cmp
push
push
adc
shlb
js
aam
stos
adc
fs
cmpsb
jmp
or
inc
sbbl
sbb
and
outsb
xchg
orl
push
cmp
mov
add
mov
pop
xchg
sub
inc
sbb
inc
imul
lahf
mov
ds
pop
cmp
dec
pop
ret
xlat
xchg
cmc
pop
sub
mov
shlb
sbb
cmpsl
mov
mov
mov
rolb
pop
loop
pop
int
sub
xchg
fcmovnbe
sbb
add
jbe
in
jo
shlb
or
mov
stc
mov
test
in
shll
sbb
nop
push
loopne
mov
or
aam
jge
push
shlb
pop
mov
add
rcr
dec
push
jmp
clc
xchg
dec
imul
jle
loope
lods
dec
xchg
outsl
imul
les
xor
cmp
in
sbb
sysenter
dec
pop
mov
ja
xchg
mov
push
push
xor
ss
insl
fidivrs
mov
jecxz
pop
lret
fcomip
lret
iret
dec
sub
dec
mov
push
adc
es
call
jecxz
fistpll
insl
fsubrs
cmp
shll
push
sbb
hlt
jge
out
pop
test
mov
sbb
sub
jg
popf
cmpsl
ret
sub
xchg
cli
lret
cmpsb
xchg
jno
mov
add
jmp
scas
idivb
psubusb
cli
std
loopne
pushf
sub
in
imulb
out
sub
scas
lret
data16
iret
mov
shlb
lods
addr16
jg
xlat
ds
aad
dec
cli
xor
push
imul
outsl
push
xor
cmp
into
gs
xchg
jl
outsb
pop
cmpsb
lcall
cwtl
imulb
xor
hlt
mov
and
nop
and
jo
out
sbb
gs
imul
ja
inc
push
mov
adc
loopne
adc
test
jns
cmpsl
test
popa
cmp
sub
arpl
popa
fimuls
adc
mov
and
xchg
fisubrs
adcl
scas
push
lcall
push
in
mov
jo
pop
lods
rolb
lcall
jne
push
pop
pop
adc
ret
or
inc
cmp
jnp
xor
hlt
mov
fs
fsubl
lods
adc
inc
and
arpl
xchg
add
jmp
clc
test
adc
pop
mov
mov
pushf
stos
and
cmp
test
push
movb
and
clc
ficoml
test
xor
sbb
int3
xchg
mov
mov
stos
stc
cmp
adc
inc
inc
inc
add
ljmp
dec
and
jle
fsubrl
jns
hlt
mov
imul
dec
push
sbb
jmp
xchg
jmp
mov
and
lods
rorb
bound
mov
push
or
inc
ficomps
cmc
je
mov
add
stos
or
mov
mov
movsl
cmpsl
and
test
sub
pop
dec
mov
jge
lods
fwait
sbb
and
sbb
ds
mov
addl
mov
inc
loopne
sub
mov
fwait
sbb
in
jmp
sti
lods
sub
pusha
dec
fistpl
loopne
dec
cmc
ljmp
dec
inc
negb
mov
pop
adc
xor
jmp
pop
insl
es
jbe
jae
imul
inc
push
dec
dec
jae
test
popf
test
cwtl
pop
pop
cltd
mov
add
ds
dec
mov
xor
xchg
mov
lahf
xor
sarb
lret
shll
icebp
xchg
into
ret
xor
or
xchg
rep
std
pop
add
imul
inc
rclb
jns
imul
xlat
mov
mov
jnp
pushf
shll
sub
cs
lock
inc
cmp
cmp
test
mov
mov
stos
lahf
or
mov
jnp
xchg
add
jbe
bound
data16
cmp
dec
mov
fsubrl
aam
addl
mov
mov
shl
shlb
mov
add
scas
dec
xchg
sbb
shll
mov
pop
sti
in
jnp
push
sti
iret
pop
aam
xchg
test
xor
mov
push
test
or
sub
sbb
jbe
pop
pushf
mov
lods
lods
bnd
popf
mov
xlat
xchg
xchg
ret
dec
xchg
dec
add
mov
mov
inc
jle
mov
std
jne
ret
notb
or
lret
into
rolb
inc
push
std
inc
int
or
sbb
push
add
popf
shl
xchg
arpl
sbb
icebp
sub
fsubl
daa
add
jecxz
in
inc
and
ror
push
iret
or
lds
dec
xorb
mov
sub
lds
in
cmpsl
imul
xchg
push
daa
cwtl
in
call
movl
jl
or
fs
cli
dec
cmp
ret
addb
cltd
and
movsb
and
jae
fcompl
gs
ret
fildl
mov
aaa
mov
ror
adc
daa
xor
jnp
jg
fld
cmp
pop
hlt
inc
mov
xor
add
shrb
sahf
adc
in
mov
iret
insb
rol
mov
dec
xlat
inc
adc
leave
insb
dec
fstpt
jno
je
jno
gs
pop
mov
sbb
mov
pop
push
enter
imul
push
jge
outsb
repz
enter
fcoms
adc
push
iret
mov
push
and
pop
inc
jo
inc
shr
and
pop
jae
push
ret
aam
insl
orb
in
inc
gs
pop
jle
pusha
shll
out
add
xchg
in
mov
jmp
shl
sub
outsl
or
imul
fisttps
addr16
mov
push
mov
negb
xor
lahf
inc
mov
lret
ret
in
mov
imul
adc
jbe
jb
or
or
push
push
ficoms
push
sbb
int3
or
xorb
in
aaa
enter
dec
das
jl
fwait
pushf
and
in
adcb
inc
mov
mov
call
js
js
insb
test
aad
push
mov
sub
jp
inc
jnp
ficoms
sbb
mov
test
sub
push
jno
ret
cld
sub
mov
mov
sbb
cli
sbb
and
jno
outsb
in
sub
mov
sahf
es
sub
inc
icebp
sahf
xchg
imul
fstl
test
jg
pop
cwtl
cwtl
add
jp
loope
push
aad
add
enter
fst
sbb
jo
clc
rcl
xchg
lods
iret
dec
test
lret
outsb
mov
jmp
push
out
adc
xchg
xlat
pop
xchg
das
shlb
or
dec
mov
stos
pop
pop
popa
mov
cwtl
dec
inc
lods
pop
mov
pop
fdivl
decl
adc
jo
ja
sbb
and
sbb
push
test
mov
or
rclb
xchg
mov
xor
dec
xor
mov
xchg
pop
pop
je
jb
jp
push
jne
jno
pop
mov
ret
inc
push
sub
xchg
lret
fdivrl
out
cmpsl
cmp
ret
popa
pop
out
mov
sbb
inc
and
adc
aad
cwtl
test
pop
mov
push
dec
push
dec
mov
mov
test
movsl
lods
push
jnp
cmpsl
cmp
jae
cvtps2pd
lret
ret
xchg
jmp
mov
aad
lcall
add
pop
sub
jns
pop
inc
cli
dec
loopne
mov
cmc
dec
mov
lea
pop
test
icebp
xchg
or
out
ja
roll
pop
mov
cmp
dec
mov
fwait
std
mov
xchg
cmp
std
cmpsl
enter
fisubl
inc
stos
in
adc
mov
adc
add
push
xchg
dec
stos
jge
pop
aam
psubsb
pop
cmc
aad
pop
sub
xchg
cmp
dec
mov
inc
mov
add
mov
dec
outsb
inc
pushf
push
out
push
mov
mov
push
test
aas
stos
mov
push
inc
out
lods
dec
push
pop
fists
cmpsl
rcl
ss
mov
push
xor
xlat
mov
in
outsb
cmp
icebp
or
mov
sub
ss
xchg
xchg
outsb
or
sbb
loopne
sub
es
nop
and
stos
ja
shrb
or
or
mov
movsb
and
adc
mov
inc
sub
andb
sbb
jno
rcr
mov
dec
lea
pop
cltd
add
adc
mov
xor
fildll
sub
fs
lahf
subl
push
dec
or
mov
mov
fimuls
sbb
mov
nop
pop
inc
add
mov
mov
pop
pop
stc
xlat
and
lret
or
cli
stos
or
test
js
lock
pop
xchg
xchg
sahf
or
dec
stos
and
adc
pushf
jle
fs
cmpsl
in
loop
mov
push
dec
push
cmp
dec
jecxz
cmp
bound
dec
repnz
xchg
test
mov
mov
nop
add
xor
mov
push
les
rclb
cmp
cltd
scas
mov
or
or
popa
adc
pop
sub
mov
push
cld
pop
lahf
out
out
in
jnp
test
or
sub
test
xlat
test
loop
cmp
js
scas
bound
imul
add
cmp
xor
sbb
pop
nop
shl
adc
dec
mov
lcall
or
mov
xchg
jmp
dec
mov
test
popa
daa
icebp
mov
out
and
dec
or
push
inc
mov
je
or
and
fs
jns
insb
push
mov
call
mov
pop
ret
dec
mov
ret
pop
add
loopne
flds
loopne
push
inc
fidivl
mov
popf
out
imul
stos
setae
aaa
loope
rorl
push
lahf
hlt
mov
mov
sbb
outsl
jae
jle
leave
jno
fistps
sbb
sub
or
lret
adc
test
jnp
push
sub
adc
mov
inc
icebp
sub
iret
push
jnp
insl
ficomps
jl
testl
jnp
cld
pop
pusha
jne
outsl
pusha
aad
fdivrp
sbb
jge
sbb
xlat
mov
dec
arpl
imul
aad
imul
push
sub
dec
cli
shl
cmpsl
lcall
xor
mov
stc
add
inc
scas
sarl
aas
scas
adc
push
cmpsl
or
push
xchg
repnz
xor
js
cmc
out
jmp
mov
pop
cld
jno
xchg
pop
lock
lea
call
mov
adc
cld
mov
cwtl
clc
es
cmp
and
or
push
clc
mov
dec
sub
not
cmp
hlt
sarb
rcl
imul
sub
mov
xor
es
call
inc
addr16
imul
xlat
clc
pop
jo
sbb
imul
xchg
js
cmpb
cld
dec
sbb
add
js
clc
test
repnz
es
inc
bound
imul
cmpsl
insl
decb
pop
mov
jge
dec
cmp
mov
or
call
cmc
dec
fisttpl
std
mov
mov
or
cs
into
movsl
sub
pop
xor
pushf
dec
push
push
stos
stos
adc
sub
dec
cli
pop
push
jbe
in
mov
out
xor
jnp
les
push
push
cmp
es
lcall
cmp
out
xchg
add
sti
xchg
inc
inc
xor
push
jg
mov
add
test
movsl
in
clc
adc
out
in
or
push
nop
mov
xchg
ret
or
push
cmpsb
inc
or
in
push
jo
and
test
cmp
adc
rsm
mov
stc
stos
pop
jle
inc
cli
and
jmp
mov
adc
aad
sub
push
stos
xor
xchg
mov
xchg
leave
lods
stos
shlb
in
cmc
arpl
int
sub
loop
loop
pop
daa
cmpsb
xlat
insl
inc
push
jne
cmc
ja
dec
push
gs
mov
dec
push
mov
cmp
rcll
jle
pop
cmp
in
test
test
fistpll
jmp
out
and
mov
mov
pushf
mov
sti
lea
inc
cwtl
push
or
push
fdiv
mov
push
inc
cmp
rcll
pop
in
add
or
mov
mov
or
imulb
inc
xchg
in
push
imul
rorl
jo
stos
movl
cmp
jl
iret
xchg
push
lahf
inc
cmp
jl
js
mov
xor
sub
je
pop
fwait
jo
outsl
pop
or
push
jg
sbb
sbb
inc
dec
add
icebp
sahf
mov
addr16
jae
dec
call
mov
aam
mov
cmp
or
inc
xchg
ficompl
push
mov
in
test
cs
inc
insb
pop
dec
cmp
pop
fwait
enter
cltd
add
and
or
dec
jge
xchg
sbb
scas
in
xchg
lahf
mov
sub
roll
fldcw
subb
outsb
cmc
ret
das
movsl
and
testl
add
lret
ret
inc
popf
out
arpl
fs
les
in
sbb
out
movsl
cwtl
ret
lcall
mov
fdivrs
xor
pop
xor
cmpsb
mov
push
loop
mov
xchg
pop
test
mov
xchg
cs
jae
mov
push
js
push
ss
fcmovb
inc
nop
sub
mov
dec
pop
test
sbb
push
xor
fnstsw
andl
test
xorl
sub
nop
and
test
jmp
or
aad
cmc
jb
in
jmp
mov
inc
sbb
testb
dec
enter
dec
pop
addr16
dec
in
icebp
ret
inc
cmp
xorb
fisubl
add
jmp
xchg
insl
test
das
push
mov
mov
ret
mov
shl
add
jmp
int
push
push
mov
roll
inc
into
pop
adc
outsb
hlt
pop
out
sub
jmp
aaa
add
outsl
jp
dec
fsub
or
adc
inc
mov
aaa
push
nop
inc
loope
sarb
enter
jmp
xchg
stc
test
out
inc
or
js
jno
lret
fldt
cltd
cltd
and
ret
sub
lret
mov
pop
or
jnp
and
into
inc
flds
arpl
sub
mov
cmp
sub
jg
adc
mov
jns
aas
lods
xor
ret
aas
push
xchg
xchg
lcall
push
xorb
push
mov
adc
add
gs
mov
cmp
cmp
pop
xor
out
lcall
or
inc
lods
add
sbbl
mov
sub
ljmp
inc
cmc
movsb
cli
sbb
push
in
push
daa
cli
inc
cli
je
test
int3
and
or
je
lock
and
aam
push
icebp
fs
push
in
xor
and
add
scas
add
push
cmp
icebp
test
mov
call
push
push
mov
cmp
aad
dec
ljmp
cmp
sub
mov
insb
cmp
pop
sahf
fdivs
mov
scas
dec
fcompl
cmp
roll
rcrl
xchg
shrw
adc
icebp
roll
xor
cwtl
gs
pop
insb
je
xor
and
push
push
aaa
push
pop
pop
mov
add
daa
push
jns
cld
mov
inc
cmp
stos
aad
mov
out
pushf
loope
mov
mov
jae
cld
push
shlb
mov
mov
out
es
and
mov
dec
lea
add
pop
pop
test
mov
mov
sbb
cltd
fs
adc
inc
insb
daa
sub
jo
jns
test
aam
xchg
sbbb
cmp
fcoms
andb
sbb
dec
rolb
test
imul
add
xchg
jecxz
jo
fsubp
lods
clc
and
je
cmp
jle
add
in
out
xor
mov
aam
sti
cs
adc
pop
cli
mov
sbb
std
jne
mov
add
add
jbe
cwtl
aaa
test
xor
scas
outsl
lahf
fnstcw
xlat
push
or
mov
enter
xchg
or
lods
or
je
fsubs
mov
mov
mov
xlat
addl
sbb
ds
lret
xor
jmp
adcb
adc
and
sbb
das
mov
adc
jae
add
leave
cmp
cmc
cmp
rorl
pop
inc
jne
dec
jmp
jbe
je
cwtl
addr16
out
xchg
and
adc
add
out
test
movsb
or
mov
insl
popf
mov
out
mov
or
inc
dec
loopne
bound
cmp
push
cmp
loopne
incb
push
ljmp
ror
test
and
xorb
push
jg
pop
inc
pop
dec
clc
test
inc
jo
push
mov
push
ljmp
mov
xchg
ret
xor
cs
dec
cmp
xchg
dec
call
push
loope
cwtl
repnz
stc
mov
jno
xor
jmp
or
and
sbb
in
or
dec
cmp
xchg
cmp
icebp
sahf
jno
hlt
imul
aam
stc
shlb
adc
mov
in
ja
mov
mov
adc
adc
push
push
arpl
mov
jo
cld
and
loope
pop
popf
ret
inc
cmpl
insb
inc
xchg
cmp
push
es
out
xor
pop
enter
hlt
std
mov
mov
loop
fldcw
xor
push
xchg
push
mov
xchg
test
cmp
pop
adc
xchg
pop
lds
push
adc
add
cld
dec
sub
test
xchg
or
fcompl
insb
inc
stos
bound
loop
push
or
dec
dec
scas
cmp
stc
repz
mov
xor
fadd
out
or
mov
stos
adc
cmpl
shrb
or
jns
mov
mov
push
push
out
add
xchg
xchg
cwtl
mov
rclb
movsb
outsl
lds
imul
cmp
cmc
int3
inc
sub
add
add
subl
and
add
mov
mov
rcrb
leave
jne
ret
loopne
push
lods
incb
jno
ja
adc
fildll
xor
aad
hlt
mov
insl
or
cwtl
insl
movsl
cwtl
xchg
mov
mov
add
dec
mov
sbb
pop
rorb
add
ret
sub
out
dec
mov
les
ret
scas
add
mov
jbe
inc
cwtl
dec
xchg
mov
sub
sahf
fstpl
add
movsl
ror
imul
jno
faddl
leave
mov
cmpsb
dec
loop
shl
mov
pop
mov
jg
lock
cmpsb
int
pop
mov
cmp
lahf
jg
lods
inc
mov
dec
add
dec
sbb
fistps
aad
push
adc
adc
sub
mov
sbb
jno
pusha
cld
dec
jp
dec
jnp
gs
jo
sahf
push
jno
outsl
or
daa
mov
decl
pop
push
cmc
fldenv
and
test
daa
xlat
hlt
inc
or
jle
jmp
xchg
and
mov
dec
push
nop
pop
mov
fistpll
ret
ss
pop
sbb
lret
pushf
jbe
mov
in
xor
push
add
lret
pop
adc
imul
mov
xchg
pop
and
or
adc
mov
cwtl
sub
test
sub
leave
outsb
inc
aad
mov
mov
stc
dec
sub
incb
sub
out
cmpsl
std
dec
repnz
imul
mov
mov
cmp
push
repz
fildl
test
mov
pop
dec
mov
incb
mulb
out
xchg
jmp
sti
jl
shlb
dec
cmc
adc
inc
in
sti
xorl
cmp
mov
call
ret
or
jle
xchg
andb
out
mov
ss
jnp
mov
aam
mov
sub
int
ja
dec
sub
pop
jb
dec
pop
cmc
jmp
push
xchg
ret
xor
xor
jp
push
jne
cmp
sub
cmp
call
xorb
adc
xchg
rorb
int
in
ss
insb
popf
loop
xor
pop
xchg
dec
or
push
add
add
ss
jne
out
stc
sub
lahf
inc
cwtl
jg
iret
stos
jle
jp
sbb
mov
mov
sbb
mov
add
or
or
ret
js
push
sbb
daa
pop
std
mov
jle
add
sahf
inc
adcl
pop
mov
push
aam
es
out
dec
cmp
push
jg
loope
dec
mov
test
fdiv
mov
mov
ss
and
sti
xor
push
in
sub
jge
ret
jo
or
push
xor
push
mov
insb
jle
xlat
xor
xchg
xor
mov
loop
push
or
mov
and
push
ret
and
mov
fdivl
fwait
mov
dec
add
xor
lcall
js
inc
sbb
popf
aam
mov
test
lock
cmc
mov
push
lcall
sbb
es
ss
push
sbb
adc
add
cmc
daa
mov
pop
cli
lcall
repnz
dec
popa
aam
push
xchg
pusha
in
jnp
rcll
orb
les
mov
mov
js
xchg
fidivl
hlt
cmp
aaa
jnp
pop
std
scas
inc
mov
outsl
insb
xchg
ss
sbb
add
movsl
ret
ror
pop
out
hlt
jo
xor
push
xor
mov
outsl
push
ss
cmp
leave
cmp
jns
jns
in
push
test
cmc
jno
popf
cmp
sub
mov
adc
mov
pop
xlat
dec
sarb
jne
jno
dec
inc
outsl
cmp
jg
push
lahf
mov
xchg
jo
in
push
and
sti
jecxz
inc
jbe
adc
cmp
push
loope
pusha
ffreep
sbb
mov
les
and
pop
nop
out
pushf
cmp
lds
push
shlb
lret
xchg
mov
dec
add
pushf
rcl
pop
in
sub
loope
filds
pop
pop
mov
cli
sub
imul
mov
outsb
mov
xorb
dec
ret
xchg
mov
dec
xlat
xor
mov
lds
push
sub
rorl
adc
mov
sbb
jae
jbe
xor
dec
inc
pop
xchg
mov
shrl
add
filds
push
clc
jns
mov
cmc
inc
repnz
fwait
out
and
aas
jne
sub
mov
in
add
push
int3
adc
cmp
fmull
xchg
sti
mov
js
pop
pop
repnz
and
arpl
adc
mov
test
pop
cwtl
out
bound
xor
jae
into
sahf
dec
adc
insl
cwtl
pop
mov
xor
aaa
mov
push
in
clc
mov
lret
addr16
popa
xchg
and
mov
movsb
data16
aam
mov
in
xchg
cmp
mov
hlt
movsl
sub
lcall
popf
mov
xor
lret
movsl
push
ljmp
nop
out
imulb
cmpl
dec
or
ret
stos
push
mov
mov
xchg
push
xor
rcrl
add
movb
adc
jg
mov
dec
data16
subl
dec
fists
shr
pop
in
lret
inc
int3
pop
sub
jo
divl
in
vmwrite
fistl
es
stos
push
adcb
arpl
loope
call
dec
sub
fadd
cmpb
ds
mov
lret
inc
and
cmp
jmp
test
in
jne
sub
mov
stc
out
sbb
mov
hlt
imull
outsb
aad
xchg
jmp
pop
sbb
or
mov
add
call
cmp
xchg
cmp
mov
add
pop
jns
das
popa
lret
mov
cmpl
mov
xchg
mov
jbe
or
pop
stos
fildll
xor
cwtl
sbb
orb
pop
negl
stc
sub
cmp
jg
fldl
jns
and
jmp
mov
xchg
pusha
inc
sub
ljmp
add
int3
mov
cmp
xor
je
and
outsl
test
add
icebp
leave
sub
je
dec
and
clc
addr16
cli
lds
stc
cwtl
pop
and
mull
test
nop
rcll
push
pop
add
aaa
inc
nop
fistpll
cmp
aaa
mov
sbb
popa
adc
mov
shl
add
loopne
dec
adc
movsl
mov
mov
fidivs
push
fidivrs
cmc
pop
pop
addr16
cmp
adc
cmp
push
test
ss
mov
call
lods
fstps
xchg
loopne
dec
or
movsl
mov
jecxz
mov
xchg
cltd
sub
jne
or
sub
push
or
mov
insb
push
cwtl
push
int3
inc
sub
or
lcall
nopl
or
cmpsl
insl
nop
fwait
in
inc
pop
dec
xlat
xchg
imul
dec
jno
mov
mov
sub
xchg
sub
cs
and
roll
ficomps
aaa
add
cmp
dec
mov
inc
in
jp
mov
lret
mov
mov
in
xchg
xlat
mov
or
aaa
xor
pop
ftst
iret
add
pop
in
jo
idiv
ds
xor
mov
xchg
adc
push
pop
jge
dec
iret
pop
pop
push
and
les
loopne
daa
jne
ds
sarb
dec
jle
int3
jl
out
hlt
imul
sbb
outsl
xor
repz
in
dec
jb
jp
and
outsl
pop
xchg
clc
cwtl
out
je
push
mov
ret
lcall
mov
jg
push
movsb
lea
and
cld
jnp
loopne
mov
xchg
shll
movsb
pop
insb
dec
push
mov
jne
gs
pop
mov
imul
mov
shr
xchg
add
jmp
gs
cmc
int
negl
push
movsl
adc
dec
std
popf
and
and
dec
je
push
fidivrs
sub
cmp
cmp
sahf
fwait
stos
cld
pusha
cmp
rorl
mov
int3
imul
mov
push
sbb
mov
sahf
lods
cmpsb
out
inc
loopne
mov
mov
inc
dec
xchg
scas
out
insl
push
setbe
mov
inc
sti
jae
ljmp
or
clc
test
sub
mov
ret
pop
outsl
loope
ret
and
mov
and
repz
rcr
je
or
enter
add
scas
push
cmpsl
lock
clc
iret
mov
mov
jbe
add
shrl
dec
adc
mov
cmp
inc
sub
mov
pusha
inc
outsb
jo
shrb
fstl
push
in
mov
mov
ss
gs
outsl
xchg
fistpl
add
jmp
or
sub
jmp
sub
scas
cmp
repz
pop
sbb
push
fmull
into
orb
clc
dec
jnp
rclb
daa
mov
sbb
pop
sti
jne
xchg
ja
jns
push
es
mov
dec
mov
ja
mov
push
add
aam
adc
mov
pop
or
repnz
mov
inc
rol
and
mov
repz
mov
lods
daa
jp
jle
xchg
or
jmp
arpl
in
inc
hlt
mov
lcall
scas
enter
xor
js
adc
cmp
loope
in
mov
repz
mov
sbb
mov
mov
and
nop
adc
test
mov
cld
sub
stos
stos
sub
xchg
std
pop
push
int
test
shll
out
inc
inc
xchg
pop
sub
fbstp
in
xor
cs
push
adc
mov
jns
mov
mov
push
push
mov
lods
pushf
mov
push
add
mov
jno
repz
into
shl
sbb
ljmp
sbb
int3
or
adc
lea
popf
lods
cmc
mov
fsubrs
xchg
test
xchg
iret
loopne,pt
testb
cs
stos
pop
decl
lock
lods
icebp
cmp
lods
cli
dec
xchg
and
jb
cmp
enter
ljmp
xchg
xor
pop
sbb
std
dec
dec
pop
outsl
repnz
pushf
orb
xchg
mov
loopne
lret
push
lock
andl
in
add
aas
shlb
and
hlt
push
sub
xchg
adc
sarl
ret
mov
inc
mov
rcrb
bound
dec
ljmp
fdivs
test
mov
xor
inc
push
loope
je
pop
sti
outsl
push
jecxz
aam
clc
dec
mov
int3
mov
xor
hlt
roll
cmc
iret
push
cwtl
push
ss
or
dec
push
stc
xchg
daa
jmp
jmp
push
push
jge
pop
stos
icebp
imul
aas
xchg
mov
push
xor
fsubrs
xor
jle
jo
popf
adc
in
adc
js
mov
sub
lcall
xor
and
fcoml
xor
test
xor
pop
enter
nop
dec
xchg
vunpckhpd
mov
lods
jo
or
cltd
inc
jle
movsl
pop
cmpb
sar
in
adc
in
dec
sbb
rclb
pop
bound
hlt
jb
lds
xchg
cli
mov
jnp
push
gs
adc
les
and
clc
mov
call
sub
aaa
rcl
sub
mov
xorb
jno
dec
sahf
into
das
mov
out
sub
fsubp
cmp
jge
mov
and
or
enter
lock
or
jo
cli
or
push
jne
jecxz
hlt
in
mov
mov
and
int3
sbb
sarb
jle
in
arpl
pop
pushf
cmpsl
mov
xor
mov
sub
js
sbb
and
dec
scas
pop
out
cmp
jae
leave
inc
mov
les
in
lea
jbe
xlat
bound
hlt
lahf
dec
aad
insb
fldcw
or
inc
loopne
movsb
ret
es
add
daa
int
pop
dec
sbb
movsl
inc
add
out
test
mov
push
mov
out
mov
adc
or
hlt
test
mov
testl
jns
test
push
xchg
es
aam
mov
xchg
pop
xlat
test
scas
sar
mov
push
cmp
add
sbb
sbb
inc
test
ud2
imulb
lret
adc
popa
cld
rcrl
hlt
je
cmpsb
jl
dec
dec
lret
mov
dec
or
cmp
xchg
mov
bound
and
inc
cmpb
cmc
add
stos
add
cli
jb
mov
aas
insl
dec
sahf
mov
mov
or
adc
pop
pop
test
sbbl
clc
pop
loop
or
insb
xor
movsl
insb
in
mov
fiaddl
jb
pop
jo
sub
sqrtps
into
adcl
movsb
scas
dec
pop
dec
add
mov
popf
push
movsl
jp
sbb
data16
push
outsl
mov
loope
inc
mov
mov
sub
out
xor
mov
or
mov
jmp
cli
push
mov
insl
enter
and
mov
add
and
sub
cmp
sub
aam
or
jns
adc
scas
test
mov
mov
pop
inc
pop
and
adc
mov
sub
mov
idiv
cmp
cli
jp
push
shl
sub
fisubrl
pop
out
jl
hlt
jl
ds
and
hlt
inc
push
rcrl
shl
mov
mov
stc
inc
imul
sbb
pop
xchg
clc
xor
xchg
mov
cmp
push
push
enter
mov
test
inc
ss
pop
iret
outsl
call
sub
dec
push
pop
lock
subb
aam
jb
pop
loop
adc
ds
or
fildl
cld
fldt
mov
lock
jnp
dec
mov
in
add
es
mov
inc
aad
push
sbb
inc
push
cmc
jno
test
inc
sbb
shll
mov
xchg
enter
lret
fcom
sbb
loope
ss
sti
jno
rclb
imul
cs
mov
mov
cmp
dec
sub
and
dec
inc
cmp
mov
popf
cmp
movsl
std
cmovne
out
dec
out
imul
sub
fcoml
jns
push
inc
add
ret
dec
push
jmp
int
xor
mov
push
ficoms
pop
xor
jb
mov
jge
and
mov
xchg
pushf
repz
nop
int
fiaddl
and
sub
ds
jl
sub
test
adc
aas
sbb
and
mov
test
push
mov
aam
sbb
in
sbb
sahf
xchg
ds
push
pop
in
mov
arpl
cmpsb
inc
aad
sub
jge
out
mov
mov
sbbl
push
and
roll
andb
inc
cvtpi2ps
mov
sub
xchg
fs
push
rcrb
lea
xchg
adc
dec
pop
sbb
cmp
cli
jg
clc
xchg
lock
mov
nop
negl
out
xchg
xchg
fiaddl
and
push
jae
test
test
popa
xchg
jne
or
sbb
lods
sbb
adc
lret
push
aaa
or
adc
push
sub
inc
mov
adc
out
jns
hlt
sti
xor
aas
mov
push
and
jb
mov
ljmp
pop
push
ret
push
cmp
mov
ficoml
xor
xchg
outsb
les
add
lret
cmp
test
or
idiv
fldt
faddl
imul
loop
push
in
or
addl
dec
popa
sub
stos
push
in
dec
push
lods
mov
mov
cmp
mov
dec
xchg
adc
repnz
dec
cmpsb
loop
mov
scas
adc
scas
adc
movl
out
inc
mov
xchg
mov
inc
in
and
or
mov
xor
add
or
orb
sub
pushf
call
rcll
push
mov
addr16
mov
loope
dec
mov
leave
gs
jnp
andb
xchg
sub
fldenv
repz
push
push
lcall
mov
cmpsl
out
adc
add
cmc
mov
jle
adc
mov
sub
ror
push
fcmovbe
and
adc
jns
fnstcw
jp
sbb
out
push
ja
lcall
and
jmp
xlat
cmp
cmp
xor
inc
or
repnz
mov
push
adc
test
xchg
hlt
xchg
or
into
dec
inc
gs
push
jo
adc
push
and
cmpsl
stos
push
push
pop
dec
lods
pop
aad
sbb
and
or
cmpsl
push
cmp
cmp
mov
je
test
notb
loope
adc
mov
xor
sbb
sub
test
push
insl
add
out
ficoml
lret
nop
adc
and
adc
sub
jle
lock
ds
rcll
sti
sbbl
or
push
mov
push
jns
jg
cmp
jge
inc
js
mov
xchg
cmp
cmp
cwtl
jno
adc
sub
mov
fucomip
out
jmp
mov
cmp
xchg
jb
mov
push
dec
jmp
sub
adc
add
xor
mov
decb
push
fwait
popf
xor
dec
mov
fcoms
lea
mov
inc
insb
and
inc
cmpsl
dec
sbb
lea
bound
popa
lock
enter
icebp
adc
jmp
mov
lds
inc
repnz
mov
push
rolb
pop
iret
inc
adc
test
nop
push
in
push
ljmp
cmp
pop
inc
icebp
sti
outsb
hlt
fistpll
and
into
and
mov
icebp
mov
adc
mov
or
mov
imulb
dec
insl
lcall
test
mov
push
scas
shrb
mov
push
idivl
imul
int
jnp
imul
mov
add
shr
ja
add
dec
aaa
jle
mov
xor
push
cmp
ds
gs
dec
push
out
mov
nopl
push
pop
sub
inc
pop
add
push
cli
pop
mov
mov
pop
mov
xchg
sub
cld
adc
push
out
and
mov
pop
data16
or
ds
push
cmpsl
ret
es
rcll
arpl
or
sub
push
movsb
xor
ljmp
into
shlb
lods
adc
aam
dec
mov
in
stos
enter
lods
xor
inc
push
test
test
les
bound
add
sbb
add
outsb
mov
iret
or
lea
mov
out
adc
xchg
pop
pop
jl
imul
dec
mov
enter
cwtl
or
push
xchg
addb
pushf
push
pop
xor
cmpsl
cld
cmp
dec
jne
mov
fmuls
outsb
pop
add
imulb
sub
xchg
mov
jb
mov
bound
inc
push
ljmp
xor
cld
mov
jl
adc
lret
or
in
scas
sub
filds
inc
imul
jecxz
rorb
xchg
icebp
cltd
fstps
and
ja
outsl
push
and
pop
cld
pushf
dec
ss
dec
scas
xchg
mov
add
lods
sub
mov
push
mov
int3
sbbl
loopne
dec
scas
pusha
orl
ss
sub
movsl
sub
fisubl
jge
lcall
mov
sahf
pop
mov
xor
sub
cmp
lea
jecxz
adc
pminsw
dec
outsl
mov
jb
push
or
sub
out
dec
jae
mov
push
or
pop
pop
fnstenv
mov
gs
push
mov
add
aam
xchg
mov
cmp
push
jle
nop
std
lea
jbe
mov
out
dec
in
mov
sbb
out
loope
pop
adc
int3
jb
sub
call
ja
pop
loopne
test
jmp
jns
adc
add
dec
jge
mov
and
aam
mov
inc
outsl
mov
mov
in
sub
cmp
push
pushf
lds
cmp
dec
stc
fimull
aam
dec
inc
daa
testl
xchg
xchg
pop
sub
cmp
roll
adcl
into
in
sub
sub
fisubl
adc
cmp
out
adc
roll
movl
fisubs
aaa
ret
rorb
bound
inc
pop
test
enter
jae
stos
push
push
add
mov
pop
mov
lock
mov
das
loope
mov
xor
and
dec
lahf
insw
js
xlat
jne
pop
sbb
addr16
pushf
mov
jge
test
imul
add
xor
jns
push
and
flds
cmpl
into
jg
sub
sbb
outsl
mov
loope
pop
cmovne
mov
inc
arpl
in
fldl
in
pop
add
sub
test
lea
or
int
push
hlt
jg
mov
int
mov
cmpsl
sbb
in
out
int3
adc
xchg
fcompp
or
jecxz
dec
lock
and
and
sbb
sbb
xchg
in
jg
fidivs
or
popa
movb
daa
adc
fbld
mov
xlat
and
outsl
jecxz
out
cmp
cmp
jns
mov
and
push
mov
cmp
gs
cwtl
lret
pop
repnz
idivl
cmp
jmp
je
in
xor
inc
mov
push
cmc
mov
dec
aaa
arpl
sbb
rol
push
sbb
outsl
pop
and
and
xchg
dec
mov
push
xor
cmp
pinsrw
add
sbb
jne
and
cmp
out
xchg
je
sub
jb
mov
push
mov
test
mov
sub
lret
repnz
cmp
iret
hlt
addr16
orb
hlt
push
mov
fcomip
jp
cmpsl
mov
or
jno
clc
fs
outsl
pop
mov
shlb
imul
inc
out
pop
fdivrl
cmpsb
xchg
int
xlat
fisubl
lret
jne
in
sub
jge
push
out
inc
test
jg
lods
loopne
add
mov
pop
nop
loope
std
loopne
jnp
inc
aas
sbb
jnp
mov
fidivrs
rcrl
jno
stc
mov
fldlg2
dec
fidivl
jne
cmpsl
push
push
test
loop
adc
add
pusha
and
xchg
push
mov
xchg
scas
or
and
jl
mov
jp
outsl
or
adc
cmpsb
test
inc
or
fnsave
xor
sbb
ss
cli
fsubrl
mov
lahf
mov
clc
lcall
jle
adc
scas
outsl
cs
pusha
test
jp
lock
ja
mov
leave
xor
mov
xchg
int
lret
mov
and
rcrl
dec
in
dec
lock
xchg
cmp
inc
int
sbb
cwtl
push
cld
pop
sahf
mov
push
pop
xchg
xor
and
push
jae
and
xor
jnp
lock
repz
dec
repz
mov
movsl
add
rcrl
and
pop
jno
les
out
mov
pop
mov
test
loope
pop
jmp
lret
sub
push
mov
cmp
xchg
stos
xor
xor
lods
imul
xor
mov
mov
clc
aam
push
shlb
movb
and
sbb
lock
inc
and
cmpsl
xchg
xchg
enter
scas
insl
pop
mov
ds
push
and
push
pop
mov
fbstp
mov
ja
insl
pop
cmpl
inc
xlat
fdivrs
xor
dec
mov
lret
ss
es
and
cli
jo
jb
fdivr
cmp
mov
in
mov
out
mov
sbb
or
jo
lcall
adc
push
enter
adc
inc
push
arpl
sbb
loope
cmp
popa
cs
adcb
sbb
mov
hlt
adc
aad
popa
inc
aaa
push
arpl
daa
sub
sub
ds
push
cmp
adcb
jne
inc
call
clc
mov
cs
dec
xchg
add
in
aam
scas
mov
mov
mov
push
lret
sbb
cld
mov
outsl
arpl
dec
push
and
aad
in
arpl
ret
sbb
jmp
fstpl
adcb
mov
pop
test
mov
psrlq
adc
mov
jle
mov
push
int3
adc
jle
and
outsb
in
inc
fnstenv
xchg
fld
mov
popa
adc
in
cmc
into
fimull
movsl
ss
lcall
aam
movsl
jnp
jl
pushf
mov
cmpsb
sbb
out
loopne
and
adc
fcompl
cld
inc
and
sbb
fists
sahf
xlat
mov
cltd
ret
es
int3
jne
fisubrs
arpl
arpl
arpl
and
push
sbb
push
jnp
inc
mov
jmp
ret
jae
ss
mov
jecxz
or
mov
inc
dec
inc
das
out
push
cmp
jmp
mov
push
clc
bound
inc
xlat
shrl
or
fisttps
test
repnz
push
nop
xor
insb
or
xchg
sti
xchg
cmp
xor
sbb
fisttpll
and
xor
jmp
fimuls
adc
inc
sbb
mov
addr16
mov
lahf
add
mov
mov
add
adc
mov
pop
in
mov
aaa
cmpb
in
jb
jl
bound
xor
imul
and
cli
adc
cmp
adc
adc
mov
mov
or
inc
paddb
sbb
xor
gs
lret
fistpl
sub
adc
add
jns
rolb
cmp
mov
cmpsl
mov
stc
xchg
sbb
xor
into
scas
or
xchg
cmp
dec
xchg
test
sbb
in
out
xchg
and
adc
pop
mov
xor
jmp
jmp
mov
pop
int3
inc
fwait
aad
cwtl
in
or
arpl
idivb
enter
jb
xor
rol
je
js
lock
mov
js
cmp
sbb
popf
stos
xor
filds
jo
nop
loopne
jecxz
popa
inc
stos
push
int3
clc
mov
inc
add
loop
push
dec
sbb
shll
scas
nop
and
outsl
dec
sbb
cmpsl
jp
or
add
xchg
out
cmpsb
sbb
dec
arpl
sbb
loop
lea
out
repz
sahf
iret
mov
hlt
cli
mov
fsubs
les
stos
movb
push
adc
dec
xchg
pop
xchg
adc
repz
xchg
shrb
in
ljmp
lcall
aam
or
inc
jne
push
and
mov
jmp
xchg
add
int3
ja
outsb
repnz
dec
sbb
xchg
std
inc
cltd
xchg
xor
loopne
sbb
cmp
les
lods
mov
pop
mov
lods
fwait
loopne
mov
mov
push
jbe
pop
push
pop
mov
xchg
imul
or
aas
decl
std
aad
push
inc
jnp
xchg
ja
adc
mov
mov
lcall
and
or
xor
mov
test
jecxz
cmp
stos
jno
iret
xor
jo
ficoml
mov
pop
sub
cmp
ljmp
hlt
out
int
aam
sbb
push
dec
jecxz
pop
and
push
jne
clc
jl
insl
loope
insl
sbb
cli
fcmove
pop
mov
pop
movsb
sbb
mov
nop
in
adcb
ss
pop
add
scas
mov
inc
std
pop
stos
and
add
pop
hlt
or
dec
movsb
inc
dec
sbb
scas
pop
pusha
pop
xor
pop
outsb
out
into
insl
lods
ss
mov
jne
sbb
cmp
fmuls
cmc
ja
cmpsb
ja
mov
add
push
inc
sbb
clc
sub
sbb
xor
sbb
dec
icebp
aad
xchg
mov
lods
push
sub
jmp
negb
rcr
es
sub
pop
ret
sar
jnp
fsubrl
pop
push
sbb
lret
mov
and
roll
sti
das
std
mov
dec
cmp
jae
outsb
in
push
rcrb
movsl
jns
fmuls
mov
dec
mov
int3
sub
inc
add
subb
add
and
test
cmp
out
jb
mov
enter
mov
cmpb
mov
xchg
sbb
movsb
cmpsb
push
ficomps
insl
push
xchg
cmpl
pop
xor
movsl
lock
sbbb
leave
jecxz
or
xor
lret
jp
or
lahf
add
mov
push
fwait
xchg
inc
xor
mov
push
mov
mov
call
xchg
fldl
sbb
stc
pop
xor
sbb
iret
mov
scas
jb
ret
mov
dec
shll
loopne
push
jnp
mov
push
rcrb
jb
test
push
aaa
xor
sti
popf
cmp
fs
out
fcomp
cmc
shl
ret
xchg
and
inc
dec
push
sbb
clc
mov
cmp
lret
rcrl
mov
leave
aas
lcall
add
and
shrb
mov
daa
dec
inc
jns
mov
add
lcall
sbb
jge
ss
pop
out
and
lock
mov
std
mov
cmp
cli
inc
shrl
test
dec
jmp
pop
movsb
mov
add
dec
leave
xor
inc
jle
push
mov
int
in
jne
xor
dec
sahf
jle
ret
pop
lahf
dec
fists
cld
lds
in
rcl
test
scas
ret
scas
pop
faddl
scas
das
addb
ds
mov
mul
and
cmp
sub
push
pop
mov
mov
xor
repnz
pop
push
scas
insl
xchg
push
jb
sub
cltd
popa
and
mov
data16
push
clc
pop
ds
mov
push
jecxz
xrelease
insl
mov
mov
xor
sbb
out
sar
sub
push
and
or
int
jmp
shlb
insb
test
and
sub
xlat
mov
scas
lahf
push
sbb
lahf
push
pop
std
mov
test
add
xor
adc
shll
and
test
cwtl
dec
xchg
rolb
ret
orb
cmpsb
or
sbb
in
add
mov
testl
inc
daa
fldenv
repz
mov
pop
pop
inc
ds
test
jnp
sar
dec
mov
call
sbb
faddl
movsb
out
mov
in
mov
push
and
adc
xor
pop
add
jno
push
call
out
adc
ficoml
mov
pop
adc
pop
push
nop
add
cmp
dec
popa
mov
xchg
lahf
out
cs
mov
inc
pop
iret
or
mov
mov
fisubs
lret
sub
cmc
jg
fs
adc
and
ficomps
ficompl
xchg
pop
cld
push
iret
xchg
sub
mov
sti
jg
dec
insl
idivb
cmp
pop
ss
mov
xchg
arpl
sahf
and
cli
mov
sti
popa
cld
ss
and
xchg
jp
ljmp
leave
pop
push
push
inc
stos
pop
dec
rorl
addr16
mov
or
jo
xchg
xlat
std
mov
sbb
nop
mov
inc
sahf
cltd
frstor
call
stos
ja
fxch
loopne
pop
insb
xor
add
aaa
adc
sbb
lock
push
call
push
mov
negl
mov
out
mov
or
sbb
inc
fwait
decl
inc
lret
mov
xchg
and
add
scas
inc
into
in
inc
in
mov
add
jo
sti
int
loop
mov
in
cwtl
leave
stc
or
es
jns
cwtl
push
cld
rolb
mov
dec
inc
adcb
cmp
pop
pop
std
outsl
mov
movsl
or
and
pop
outsb
push
daa
xchg
xor
ret
imul
pop
sub
mov
ret
pop
mov
inc
cli
mov
inc
int3
ljmp
subl
jecxz
xchg
cmp
je
out
push
in
inc
sub
or
or
jae
cltd
pop
ljmp
pop
sbb
or
lea
cli
and
test
in
in
cmp
stos
push
and
inc
jecxz
sub
cmc
stos
xchg
roll
mov
jl
sub
std
out
adcl
fwait
mov
jnp
pop
mov
daa
lea
cld
xchg
shll
mov
lods
fimull
cmp
and
std
sti
gs
xchg
daa
adc
ficompl
xchg
inc
pop
into
ja
stc
and
into
in
adc
ss
lods
lahf
jns
jno
sub
pusha
loop
out
cmp
pushf
jp
out
in
imul
inc
movsl
ret
or
aas
sbb
lds
sub
fmulp
cmc
pop
mov
mov
cmpsb
movsl
sub
fisttpl
lds
push
stos
inc
or
ljmp
dec
inc
add
iret
push
movsl
push
leave
sbb
cmpl
mov
xor
cmp
fildl
into
mov
outsb
sbb
push
push
sub
xor
and
or
das
movsl
push
fldenv
jo
ds
outsl
test
jne
lock
loop
jbe
inc
sbb
neg
pop
sub
insl
or
fcoml
dec
push
in
je
pop
xorb
add
shr
divl
mov
xchg
xor
lcall
stos
mov
jb
or
jns
mov
xchg
bound
ds
in
fildll
stos
mov
push
mov
mov
sbb
and
jge
shrb
mov
icebp
cmp
mov
or
imul
pop
loop
pusha
cmp
dec
xor
not
mov
ret
ljmp
rcll
out
leave
cmp
jmp
mov
out
jns
xchg
push
push
cmc
mov
or
ret
movsb
mov
outsb
lods
pop
mov
mov
sar
push
faddp
or
int
sbb
jg
pushf
jmp
and
filds
les
mov
into
negb
pop
out
jns
mov
mov
subb
push
jmp
pop
jmp
add
les
cwtl
fldt
dec
fsubp
mov
push
inc
mov
test
push
cmpsb
dec
pop
mov
into
lret
out
insl
pop
pushf
xchg
scas
test
add
and
decl
movsb
inc
out
cmp
adc
inc
test
mov
je
mov
mov
xor
mov
test
lds
sahf
mov
shl
pop
cmp
inc
cwtl
mov
out
or
xchg
or
sbb
sahf
dec
sti
rol
ljmp
mov
iret
cld
popa
jl
push
push
jl
imul
insb
lahf
rol
sub
xchg
xor
clc
ja
arpl
sets
arpl
cmp
nop
adc
inc
test
ss
xchg
dec
int3
fmuls
std
test
push
ret
int3
xor
fsubl
mov
xchg
test
or
gs
sub
aam
xorb
stos
lods
es
ss
stc
out
push
aaa
add
or
out
fiaddl
mov
gs
notb
adc
in
ljmp
fstl
inc
or
mov
sar
sarl
incb
add
mov
mov
xor
in
ss
dec
out
movsl
cwtl
xlat
and
mov
test
push
xchg
pop
jns
inc
add
popa
idivb
and
xchg
iret
ljmp
in
imul
jl
mov
mov
stc
cmc
gs
jb
pop
add
scas
pop
ja
lods
inc
testw
and
jge
inc
jb
mov
mov
mov
into
sbb
ret
xor
adc
cmp
out
clc
adc
jns
lea
sub
sbb
mov
cld
cmp
andl
mov
pusha
out
inc
sub
push
inc
cmp
pop
or
lcall
call
sti
addl
rclb
lods
in
pop
filds
icebp
and
out
cwtl
rcrb
int
mov
and
add
cs
pop
pop
notb
in
jg
sbb
lods
gs
loopne
or
adc
sbb
push
or
mov
or
lods
add
leave
pop
aam
cs
in
jno
mov
loop
rclb
mov
dec
sbb
addr16
pop
push
pop
vpslld
inc
adc
pop
out
add
fisubs
es
in
mov
aad
outsb
or
mov
inc
mov
nop
cmpsl
outsb
dec
xchg
sti
repz
pop
push
xchg
jp
jl
jo
shl
daa
sbb
leave
cmp
pop
sbb
and
or
jmp
mov
inc
cwtl
mov
xlat
not
adc
inc
dec
sub
inc
imul
mov
test
inc
fcoms
insl
jno
lret
jmp
out
add
adc
xchg
sub
pop
das
sub
jbe
push
cmp
stos
mov
push
int3
ret
rcrl
bound
js
cwtl
xchg
mov
mov
xor
pop
fiadds
cltd
sti
and
push
or
dec
and
and
out
pop
das
cmp
mov
out
repz
mov
je
add
ret
negb
mov
jl
push
mov
mov
inc
or
dec
arpl
insb
int
adc
bound
sahf
mov
add
dec
stc
out
mov
adc
pop
cmp
fdivr
mov
lods
pop
stos
rclb
xor
and
push
shlb
add
popf
clc
scas
repnz
pop
test
rcrl
inc
xor
and
or
mov
mov
in
shl
push
xrelease
ljmp
aas
in
xor
xor
orl
push
sbbl
sti
push
sub
test
xor
icebp
xor
mov
or
lret
lret
or
movsl
in
imul
addl
mov
mov
testb
jnp
test
dec
fistpl
call
shr
imul
xchg
cmc
enter
jmp
test
lahf
repz
xorl
or
push
push
mov
bound
stos
cmp
jl
andl
out
mov
notb
cmp
or
push
add
shll
mov
add
and
ljmp
out
pop
xor
push
or
call
data16
mov
fwait
shlb
push
movsb
mov
pop
js
test
aam
cs
mov
xchg
dec
les
cmp
sbb
sbb
stos
das
push
ja
cwtl
outsb
cmp
and
jae
out
add
shlb
xchg
adc
jmp
lahf
mov
outsb
sti
or
rcrl
xchg
outsl
scas
insl
outsl
lods
div
xor
ficomps
repnz
dec
mov
xchg
popf
movsl
mov
js
mov
cwtl
mov
xlat
jmp
xor
in
test
cmp
mov
aas
or
jnp
sbb
je
pop
push
sbb
loop
js
ja
push
adc
and
mov
mov
jne
out
je
mull
mov
pop
aas
loopne
lcall
mov
mov
daa
mov
jns
fstps
inc
jbe
push
inc
mov
enter
stc
in
pusha
mov
lods
movb
cmpsb
xchg
xchg
cmp
mov
icebp
out
xor
push
ljmp
mov
jg
mulb
popa
out
leave
pop
adc
fidivs
push
lds
xchg
or
push
mov
aas
jnp
je
xchg
push
rcrl
aaa
push
push
pushf
rorl
xor
dec
sub
mov
imulb
jp
loope
add
sbb
pop
les
push
add
loop
fs
mov
pop
sbb
lock
mov
push
aam
mov
add
js
dec
aad
mov
addl
out
xchg
xchg
jmp
or
jecxz
fcompl
lods
mov
es
movsl
mov
xor
pop
out
in
daa
test
ss
xchg
dec
iret
test
fstps
xorl
jo
lea
or
mov
insl
aad
push
popa
ljmp
addb
lret
stos
dec
mov
jmp
pop
out
mov
xchg
aaa
insb
mov
push
cmp
inc
xchg
fnsave
xor
push
jge
daa
repz
sbb
mov
test
jne
pop
and
mov
push
popa
stc
adc
fmull
jp
roll
dec
fyl2x
push
cs
pop
je
popf
data16
dec
inc
sahf
mov
inc
sub
mov
test
repz
mov
sub
jno
or
in
and
loop
sub
inc
cmp
cmp
adc
cld
mov
aaa
or
or
andl
add
xor
popa
cmp
xchg
arpl
xchg
push
and
mov
pusha
mov
out
adc
test
ljmp
pushf
lret
cltd
inc
adc
dec
sahf
fisttpl
mov
or
jl
xchg
add
xor
jnp
cmpw
das
in
std
push
or
cmp
mov
jnp
iret
cwtl
out
adc
fs
test
pop
cld
outsb
lds
orl
std
jne
dec
cltd
outsb
sub
mov
insb
lods
inc
aam
cli
mov
push
push
push
out
cmp
ds
cmp
mov
aaa
jl
or
das
cli
or
mov
mov
adc
mov
adc
lock
mov
jo
xor
movb
insb
or
lcall
rorl
or
sub
arpl
xlat
mov
xor
repz
xchg
adc
mov
sbb
cwtl
dec
jnp
lods
clc
add
movsb
mov
popa
inc
sti
into
iret
mull
iret
fisubrl
mov
push
test
mov
int
ret
lods
je
push
loop
les
insb
mov
data16
mov
loop
mov
jbe
lahf
lret
push
sbb
fcmovu
mov
ret
es
ja
adc
mov
dec
mov
and
pop
cmpsb
push
stos
inc
inc
pushf
and
imull
rcr
and
pop
mov
xchg
cmc
mov
imul
xchg
div
into
add
pushaw
bound
dec
movsl
mov
jno
jbe
loop
mov
imul
or
sub
lods
pop
push
pop
test
shlb
jp
jb
mov
mov
ja
xor
push
int3
pop
push
fadd
sub
xchg
cli
fs
and
xchg
jnp
mov
or
paddsb
inc
dec
adc
and
cld
inc
bound
cmp
aaa
xor
jg
push
ja
lea
cmp
ja
inc
adc
push
ret
outsb
jmp
dec
pop
outsl
pop
add
stc
cwtl
out
mov
jmp
adc
push
mov
test
sub
es
jno
jl
in
mov
pop
int3
in
std
out
cmp
ss
imul
add
addr16
push
mov
mov
ret
jecxz
cwtl
cmc
push
int
add
cs
repnz
adc
inc
pop
mov
cltd
rcr
pop
pop
or
pop
mov
mov
std
decl
xlat
xor
loopne
in
push
loop
inc
js
shrl
lds
and
cmp
cmp
and
jnp
mov
pop
scas
adc
jns
mov
out
out
jo
sti
pop
mov
sub
jmp
adc
inc
mov
ss
mov
fistpl
movsl
inc
xchg
or
inc
mov
fwait
adc
ficompl
aas
icebp
jo
enter
rcl
cmp
lcall
hlt
and
mov
es
sbb
lahf
in
js
jnp
mov
jp
or
pusha
pop
xchg
in
sub
cmpsl
fimuls
push
push
or
movsl
cltd
sub
imul
sbbl
in
ljmp
icebp
inc
ja
test
imul
sbb
add
dec
add
or
mov
add
in
int
inc
mov
call
ret
rcrl
mov
jno
adc
rcrb
pop
dec
sbb
std
pop
repnz
jnp
dec
or
pop
jo
dec
adc
dec
push
push
jnp
adc
adc
xchg
pop
mov
sbb
ss
daa
adc
pop
rol
cmp
jb
add
or
push
fwait
cmp
pop
pop
cltd
data16
leave
xchg
cmc
sub
insb
int3
shr
stos
jo
iret
jae
inc
test
dec
xchg
cs
jp
jmp
int
dec
mov
fsub
and
or
inc
pop
add
add
xchg
and
test
push
dec
mov
dec
cmp
cmp
pop
mov
xchg
jb
frstor
cld
jno
in
notb
adc
outsb
in
ret
out
les
or
leave
pop
sahf
std
arpl
mov
mov
sub
outsl
sbb
push
pop
adc
or
dec
xchg
xor
rol
mov
or
add
push
repz
and
iret
rol
rolb
lcall
or
mov
nop
jge
or
and
lea
pop
inc
and
dec
xchg
xchg
je
lods
and
xor
fidivrs
jg
fs
ret
xchg
in
xchg
loope
enter
pop
movsb
js
rcll
pop
inc
mov
jae
xor
pop
lahf
lret
cli
push
or
pop
pop
inc
and
mov
pusha
mov
into
les
ficoms
int3
pop
ljmp
mov
outsl
or
and
lods
push
sub
mov
push
mull
popa
jg
xor
mov
je
push
xor
daa
dec
or
mov
out
out
mov
jne
mov
movsb
or
or
rorb
mov
pop
pop
rcr
in
imul
pop
js
xor
loope
sbb
xchg
sub
stos
les
xchg
push
dec
cmc
push
xor
inc
sbb
add
adc
lret
or
and
push
test
popa
push
pusha
je
stos
aaa
cmp
jae
jb
js
clc
dec
fbstp
push
insl
or
loop
jo
sub
outsl
or
cli
lret
out
pop
mov
add
fs
xchg
pop
and
sub
sub
nop
mov
loop
pop
lret
push
rorb
ret
add
jge
cmp
mov
subb
push
lock
loopne
dec
das
inc
ficompl
cmpsl
jns
push
add
aad
sbbl
stc
dec
add
das
stos
push
fwait
in
cmp
xchg
jns
in
mov
addr16
and
push
dec
adc
sbb
pop
sub
fldl
aam
xor
scas
das
xor
fadd
filds
insb
xlat
dec
add
mov
or
std
call
testb
xchg
les
pop
lcall
jp
jns
mov
clc
lods
cmc
jle
test
mov
mov
shr
repz
cmpsb
jae,pn
mov
sbb
fidivrs
pop
adc
movsb
push
cmp
shl
dec
sti
out
fcoms
cmpsl
lods
jne
enter
jmp
and
dec
mov
xlat
adc
test
inc
mov
mov
div
add
lahf
xor
aas
mov
and
testb
push
sbb
pop
push
adc
jbe
push
aaa
clc
cmpsl
pop
lods
aad
out
mov
je
ret
mov
adc
lcall
mov
leave
or
xchg
sbb
sub
sbb
or
aaa
pop
sti
add
push
insb
sbb
add
ret
jge
xor
xchg
loop
scas
mov
or
mov
xor
sub
rcrb
out
xchg
clc
jp
sub
or
push
xchg
mov
sub
insb
icebp
subb
jo
xor
int3
out
sbb
shlb
mov
sub
inc
std
inc
mov
adc
xor
sbb
inc
add
sbb
es
inc
sahf
pop
xchg
pop
scas
sub
clc
mov
mov
jmp
hlt
lret
cmp
add
add
jle
jnp
scas
fnstcw
xchg
hlt
das
inc
adc
mov
dec
fsubs
mulb
pop
rolb
nop
leave
shll
daa
jo
jp
mov
cltd
mov
xlat
fs
mov
int
pop
mov
mov
pop
push
xor
popl
mov
xchg
push
mov
sbb
xchg
mov
mov
fidivs
mov
jp
fldl2t
popa
ret
repnz
mov
jb
fbstp
scas
cld
xchg
push
jno
xchg
dec
jecxz
pop
cmp
adc
jne
mov
lds
imul
cmp
ret
cltd
or
adc
data16
cmp
aaa
arpl
xchg
aam
fcomp
cmpsb
int
ret
gs
and
clc
or
imul
mov
imul
cmp
and
fucomip
out
pop
std
in
faddl
inc
in
adc
and
mov
mov
cmp
mov
xchg
push
mov
xor
sub
sbb
sbb
icebp
ficomps
mov
push
add
les
sbb
push
xor
repnz
dec
cmp
jne
int
imul
fistpl
fisubrs
pusha
sbb
push
mov
or
mov
xchg
filds
adc
xchg
cs
cli
sub
push
int
pop
mov
mov
adc
iret
aas
push
xchg
int
in
jl
cmp
jle
push
inc
lret
xchg
vpaddusb
push
xchg
dec
iret
push
in
daa
iret
mov
je
ds
mov
push
sbb
xlat
xchg
dec
cmp
pop
xor
aaa
jg
stos
jecxz
jnp
push
enter
fldcw
out
loop
sub
sbb
fidivrl
cmp
scas
ret
repz
sbb
xor
jo
mov
jge
push
mov
sub
jo
fs
enter
xchg
fnsave
inc
sahf
repnz
jns
lcall
ret
mov
fmuls
xchg
mov
pushf
sbb
mov
cwtl
mov
dec
cmpb
dec
jmp
getsec
js
aas
mov
pop
cltd
in
int3
adc
inc
pop
cltd
packssdw
in
mov
mov
subl
fdiv
pop
lds
nop
setb
dec
inc
xchg
xchg
ficompl
ja
fpatan
and
clc
andb
outsb
aas
inc
ret
sbb
mov
jl
xor
insb
fbld
or
fmul
pop
int
ljmp
xor
lret
inc
pop
lahf
test
sub
sub
xor
mov
xor
nop
and
enter
ja
dec
pushf
xor
sub
pushf
xchg
push
push
xchg
fdivl
ds
in
xor
cmc
shl
outsb
jae
xchg
imul
xor
mov
pop
fnsave
es
push
cmp
loopne
mov
or
pop
cltd
sti
adc
aam
cmp
sahf
test
and
cmp
lret
mov
iret
adc
ret
cmp
inc
sti
flds
inc
push
arpl
dec
rcll
mov
rcrl
add
push
rolb
das
popf
aam
call
sbb
incb
cld
lods
pushf
testb
xchg
stos
cmpsl
mov
and
jne
push
push
cmp
loop
loope
out
lahf
into
mov
inc
scas
mov
jb
xchg
test
jae
repz
push
xor
or
scas
fadd
imul
test
mov
lea
negb
mov
mov
out
sarb
movsb
push
aad
add
xchg
inc
and
push
fwait
mov
and
xor
sbb
jl
mov
lcall
movsl
jne
std
push
mov
fsubrs
ss
movsl
mov
std
jmp
jp,pt
sbb
in
and
mov
sub
les
stos
jp
pop
aas
inc
push
jecxz
std
jae
adc
rorb
out
push
mov
pusha
pop
sti
out
dec
inc
push
shrb
fs
rorl
push
sarb
in
or
fldcw
sbb
jge
out
push
inc
sub
insb
div
ljmp
xchg
lret
mov
lret
lea
pop
inc
inc
pop
pop
test
test
jecxz
gs
inc
lods
jp
lcall
xchg
pop
rcll
insb
sarb
dec
and
aad
ljmp
or
xchg
mov
xchg
mov
cmp
xchg
je
testl
jmp
cmp
test
push
mov
shrb
sarl
out
aad
pop
call
addr16
lods
fsubl
addr16
dec
or
mov
and
rcrb
mov
cmpsl
xchg
cmpsb
sbb
movsl
scas
jmp
sub
xchg
addr16
lock
and
add
jns
in
shll
aas
push
pop
dec
and
daa
cmp
push
jno
jmp
lahf
in
jae
jp
add
or
ror
loope
push
adc
decb
cmp
add
addr16
pushf
ljmp
repnz
int
negb
or
xlat
clc
sbb
cmp
and
jmp
stos
mov
lea
cltd
and
xchg
pusha
cli
push
mov
jnp
shll
nop
jg
xchg
ds
cmp
clc
jnp
mov
mov
out
dec
imul
mov
push
pop
idivb
pop
in
cmp
or
xor
pop
pop
xor
cmp
cld
ror
xor
adcl
dec
inc
testb
pusha
nop
stos
adc
pop
faddl
and
test
lcall
gs
pop
shlb
js
andb
inc
daa
imul
and
jmp
xlat
adcl
inc
mov
popa
out
push
out
aad
pushf
out
cmp
inc
jecxz
movsb
outsb
sub
push
mov
and
aas
mov
lods
mov
enter
mov
lcall
icebp
add
mov
push
mov
sub
mov
cmp
mov
loopne
ds
mov
xchg
inc
and
fsub
cld
es
jo
push
jp
add
sbb
in
xor
jmp
cmp
and
movsl
packssdw
jmp
loopne
push
andb
lea
sbb
jge
jo
sub
pop
loopne
insb
jbe
popf
fcompl
inc
sbb
aas
pop
test
shrb
cwtl
mov
mov
je
sbb
jae
rclb
mov
jmp
or
or
xchg
jo
and
cmp
insl
push
out
lods
rdmsr
shr
mov
xchg
or
sub
or
xor
jae
mov
and
and
das
push
fidivrs
push
inc
daa
dec
loop
or
stos
mov
testl
sub
inc
dec
aad
out
push
sub
xor
cmc
dec
nop
inc
push
adc
inc
leave
lahf
out
andl
sbb
jle
sbb
add
adc
cmpsb
arpl
in
pop
xor
lret
outsb
sub
jo
ret
and
fmul
rcr
sahf
jg
jo
xchg
xchg
stc
mov
ja
inc
sbb
xor
cmc
sbb
mov
je
aaa
or
jmp
das
pop
jl
movsl
lcall
cmpsb
rcr
xchg
add
fstpl
outsb
or
xchg
cwtl
push
sub
add
xor
fiadds
cmp
loop
loop
or
mov
testl
repnz
scas
mov
jmp
sbb
xlat
dec
prefetch
scas
jns
inc
cs
out
fmul
xlat
inc
jae
fstps
cmp
nop
into
mov
movsb
insb
push
inc
add
cld
inc
sbb
adc
adc
inc
jg
andb
mov
out
xor
fs
push
int
cld
test
push
xor
jp
pushf
pop
stos
outsb
push
js
xchg
inc
movsb
mov
cmpsl
mov
jge
inc
mov
push
adc
mov
loopw
mov
addr16
test
cltd
in
cmpsb
or
add
mov
dec
roll
je
shlb
roll
xor
and
mov
add
jb
fwait
mov
sbb
ret
aaa
scas
xchg
aam
aam
sub
adc
pop
mov
inc
add
icebp
xor
sti
psubusw
push
sub
stos
inc
popw
add
xor
leave
pop
dec
aas
clc
jo
mov
clc
mov
adc
add
movsb
lods
mov
adc
mulps
add
jnp
mov
jmp
xorl
and
sarb
shl
and
inc
adc
inc
mov
fldl
push
adc
push
jmp
outsl
sub
movsb
sahf
or
add
ficoml
or
or
and
inc
fbld
push
push
mov
scas
aaa
push
xor
pop
pop
inc
out
fisubrl
xor
xchg
mov
jg
push
push
ret
mov
xor
mov
dec
aad
out
or
jmp
jno
inc
pop
mov
dec
and
mov
cmpsb
xchg
ja
in
dec
int3
xchg
jnp
lods
movsl
sub
adc
pop
dec
roll
inc
xchg
xchg
cmp
psubw
jae
es
jl
mov
outsb
mov
cli
out
mov
pop
cmp
fldcw
mov
inc
xchg
ret
fs
push
dec
fnstenv
mov
in
push
test
push
pop
out
xor
cmc
lea
xchg
jge
push
rcrl
or
mov
cmp
mov
xor
and
mov
adcb
lods
dec
popf
std
or
mov
or
lahf
ret
xlat
or
andb
add
xor
inc
jg
addb
xchg
mov
pop
pusha
stc
xchg
ret
lods
addr16
imul
inc
popf
clc
dec
imul
cmc
jle
mov
movsl
es
push
lret
inc
or
jae
pop
inc
sbb
stos
xchg
adc
fidivs
lcall
xor
cmp
sub
lea
mov
imul
sarl
jns
mov
and
add
outsl
cmp
cmp
pop
mov
cwtl
stos
mov
in
sub
movsl
ss
jae
push
push
mov
dec
dec
shrb
pop
or
jae
fwait
and
mov
bound
xor
pop
push
stc
inc
sub
jns
xchg
insl
xor
sub
dec
inc
push
mov
daa
pop
aam
and
dec
dec
repz
xlat
sub
out
mov
scas
sbb
fld
ss
push
loopne
dec
popf
bound
aas
iret
out
jecxz
loope
xchg
mov
rcrb
inc
push
inc
jbe
test
sbb
popf
outsl
bound
sbb
or
int
cwtd
jns
roll
and
dec
test
add
in
pop
or
ret
sarb
fistl
dec
mov
mov
stc
loope
cmp
mov
sbb
scas
sar
popa
mov
sub
push
insl
scas
push
call
rcl
scas
push
imul
cmp
xchg
shrb
dec
mov
dec
lahf
and
movlps
push
cmpsl
sub
dec
and
xor
repnz
in
movsb
and
inc
add
dec
xchg
or
pop
jle
lea
adc
sti
pop
test
cmp
jbe
not
cld
mov
jecxz
pop
cmpsb
pop
mov
fwait
inc
cmp
add
xchg
imul
aaa
out
adc
or
aam
jp
pop
xor
hlt
add
pop
pop
sbb
mov
and
repz
ret
jp
fildl
aas
push
and
mov
test
mov
in
ret
cmp
orb
in
fwait
les
pop
rcl
pop
js
fisubrs
test
jge
rorb
fwait
mov
mov
mov
mov
jge
lret
push
dec
lret
rcl
sub
xchg
test
inc
mov
movzbl
mov
hlt
fdivp
cmp
add
loop
xchg
cmp
xchg
add
sahf
lret
xchg
shl
dec
push
sbb
gs
jnp
pop
jo
mov
adc
xchg
push
lea
push
sub
xor
ret
inc
jae
stc
xchg
data16
rorb
lock
sbb
stos
test
scas
xor
cld
pop
std
adc
pop
adc
roll
dec
repz
cmp
sub
es
sti
lea
das
js
inc
mov
and
push
stc
xor
sub
pop
hlt
inc
pushf
jp
push
cmp
roll
lds
push
mov
mov
and
arpl
into
cmp
xor
lods
test
popa
call
push
jb
aas
cmp
and
int
mov
cmp
ret
pop
xchg
adc
push
and
mov
pop
mov
pcmpgtd
mov
mov
or
sbb
and
sbb
das
mov
mov
insl
sbb
push
cltd
xchg
in
jmp
rcrb
repnz
cmp
cld
aaa
adc
sbb
int3
std
jnp
out
adc
outsl
mov
test
push
add
push
jae
sub
popf
adc
mov
jne
out
divl
sbb
inc
mull
pop
adcl
inc
cli
jns
xchg
je
pushf
nop
jecxz
push
cli
cmp
mov
push
fidivl
cmp
jp
nop
leave
xchg
add
jmp
and
imul
adcl
pop
adc
je
insl
add
mov
or
stos
fnstcw
les
push
mov
xor
ficomps
mov
jmp
daa
les
popa
dec
dec
and
add
enter
jns
aad
testl
mov
inc
icebp
mulb
loope
jmp
inc
arpl
xor
mov
movsl
sbb
ret
sbb
sub
lds
sti
pushf
xchg
outsb
mov
jno
aaa
lcall
dec
sub
ss
xchg
cmp
jo
aas
mov
loopne
dec
jle
xchg
mov
adc
and
and
test
sub
mov
sbb
mov
sub
inc
mov
arpl
mov
sub
jp
repnz
cwtl
rcrl
cmp
add
sar
loop
gs
mov
fs
notb
sub
xchg
fbstp
mov
sbbb
loopne
cld
ret
xlat
adc
movsl
dec
pop
xchg
jne
add
cs
dec
repnz
sub
fwait
add
push
sbb
outsb
loope
xor
test
xchg
cmp
popa
mov
fs
jno
in
bound
push
clc
cmp
fisubrl
or
lds
test
mov
add
jnp
out
outsl
inc
clc
add
cmp
push
stc
mov
insl
jge
pop
cmp
add
scas
lods
adc
fdivl
push
xchg
add
scas
push
ljmp
and
cmp
sub
mov
jl
imul
rorl
es
jp
cmp
mov
test
or
ret
stos
js
scas
paddw
in
outsl
xchg
cwtl
jmp
cli
xchg
add
mov
aad
mov
stos
test
sbb
sbb
sub
data16
mov
movsl
xchg
pop
push
int3
or
pop
movsl
cld
adc
adc
dec
subl
or
gs
mov
mov
scas
test
add
popa
and
outsb
jp
jo
jle
cld
jl
add
adcw
loopne
daa
subb
xlat
add
jecxz
or
sub
mov
mov
sbb
ljmp
repz
sub
bound
xchg
lods
sbb
jbe
rcrb
mov
es
lret
mov
add
xchg
push
pop
mov
stos
dec
sub
sub
dec
mov
outsb
ret
and
test
dec
xchg
xor
imul
scas
mov
dec
pop
push
fdivp
sar
sti
imul
sbb
in
dec
test
xchg
inc
jle
test
mov
cld
sub
xor
or
in
sahf
sarl
pop
movsl
lock
stos
sbb
jecxz
shrl
mov
pop
popa
loop
jle
je
adc
cmp
pop
cmp
sbb
mov
lods
test
cmpsb
add
dec
test
inc
pop
mov
shrl
in
xchg
mov
jge
and
ja
cltd
sub
pop
fsubrs
and
fdiv
xor
popa
mov
icebp
repnz
or
test
add
push
mov
mov
aaa
mov
mov
cmp
push
test
push
xor
push
push
fstl
jp
or
test
lock
aad
les
cltd
lods
fldt
cli
mov
jmp
test
add
jb
jg
int3
cli
mov
xor
lret
sbb
rol
or
mov
mov
lods
daa
and
cmpsb
mov
inc
jns
gs
sub
cmc
pop
sbb
or
mov
push
sub
inc
mov
jge
or
scas
lret
cli
jle
jne
lcall
stos
sbb
xchg
fildl
jge
pop
mov
icebp
sarl
gs
sbb
ret
cmp
mov
xor
jns
mov
sti
jecxz
std
inc
adc
inc
imul
mov
test
add
mov
lret
popf
hlt
inc
lods
cs
rolb
bound
or
push
sub
mov
jbe
jle
push
sbb
inc
sbb
mov
mov
mov
adc
sub
mov
fnstcw
pop
test
jne
das
mov
dec
dec
cld
setno
mov
xchg
cmp
clc
jp
mov
xchg
fnstcw
xor
lea
and
xchg
scas
sub
pop
orl
mov
sub
lea
cmp
fs
xchg
test
loope
orb
rcl
sbb
mov
sahf
aas
push
mov
aad
dec
mov
xchg
jmp
aaa
fbstp
pop
dec
repnz
and
mov
mov
cmc
popf
and
mov
fwait
les
xor
cmp
aam
xchg
scas
push
add
loop
jae
call
mov
mov
orl
sar
add
or
or
out
shl
dec
xchg
pop
icebp
dec
push
jns
push
js
push
popa
mov
fistps
xlat
sahf
pop
fsubrp
fdivr
xor
ss
jmp
nop
enterw
popa
adc
clc
pop
dec
hlt
lods
in
mov
xchg
lods
sub
xor
jg
es
ret
pop
xor
push
jno
adc
popa
push
cmc
test
xor
cmpsl
or
mov
repz
imul
insl
bound
push
mov
in
or
frstor
test
mov
or
xor
ret
sti
test
xorl
and
std
mov
roll
addr16
push
stc
xlat
pop
add
dec
xor
fs
ljmp
sbb
js
push
stos
cmp
and
jecxz
jnp
xor
or
adc
mov
mov
mov
jle
lods
inc
sbb
or
mov
insb
in
dec
sub
in
stos
orb
jmp
xchg
lahf
leave
pop
popf
sub
pop
out
dec
jecxz
sbb
dec
pop
daa
mov
shll
adc
cmc
das
sbb
or
test
in
push
mov
xchg
inc
je
mov
cwtl
push
nop
cmp
pop
mov
xlat
push
dec
push
pop
push
sub
or
mov
xor
les
out
and
pushf
pushf
popf
das
sahf
cmp
or
dec
repz
emms
test
in
pop
push
cmp
push
repz
pop
mov
lock
push
jns
mov
xor
push
sub
popl
xor
mov
movsb
ljmp
cmp
add
out
xchg
das
mov
insl
imul
aad
lods
or
sahf
bound
icebp
jg
push
fdivrl
and
imul
cmp
xor
ljmp
jge
imul
icebp
pop
pop
mov
call
push
and
mov
xor
fwait
pusha
stos
addr16
mov
xchg
mov
push
jl
outsb
inc
addr16
fistl
rorb
movsl
or
jle,pt
ljmp
or
xlat
lock
add
pop
jge
xor
mov
ja
mov
and
pushf
jp
cs
roll
jb
pop
andb
or
shl
aam
clc
pop
dec
adcl
loopne
shlb
push
int3
xor
bound
in
jno
and
xchg
fwait
dec
push
dec
add
cli
dec
sahf
fucomi
fisttpl
loop
subl
ss
push
push
inc
adc
fs
in
nop
adc
push
lahf
pop
clc
dec
sub
pop
stos
mov
jo
mov
xlat
adcb
sahf
loopne
adc
xor
sti
bnd
dec
insb
movsb
inc
mov
in
out
pop
dec
inc
cmp
movl
clc
test
xchg
sub
mov
inc
add
daa
cmp
mov
sub
loopne
sbb
mov
sti
in
inc
mov
int3
cmp
sub
loop
push
inc
mov
dec
mov
push
mov
mov
adc
and
in
and
mov
in
jno
fsubs
out
push
dec
data16
popa
push
jg
push
jne
adc
jg
nop
push
ret
dec
neg
ret
cmp
mov
sub
call
ds
sub
pop
pop
jno
inc
pushf
jmp
push
or
jecxz
faddl
or
mov
mov
int
shl
std
dec
push
lret
pushf
xchg
lret
sahf
push
pop
sbb
mov
push
or
sbb
mov
mov
jae
fldl
push
or
inc
xchg
jle
push
cmp
dec
in
add
fcmovnb
hlt
push
nop
addr16
mov
sahf
scas
enter
mov
icebp
ja
cmp
stc
lock
jno
pushf
xorl
lret
rcrl
jo
ret
xchg
jno
sbb
mov
aam
xchg
inc
aas
pop
ffree
clc
push
xchg
pop
int
pusha
out
es
les
mov
mov
push
jecxz
inc
in
fdiv
lret
mov
je
insb
mov
or
pusha
das
xor
xlat
rolb
lock
mov
lret
pushf
sub
mov
cli
das
out
inc
cld
movsl
cmp
loope
and
nop
pop
out
cltd
pushf
and
fs
adc
adc
mov
xor
int
xor
ret
xchg
out
jae
xchg
js
cmp
adc
xchg
shlb
or
adc
in
lds
rcl
addr16
mov
or
int
divl
hlt
xchg
jl
aad
sbb
jg
shl
xchg
rorb
add
vminss
leave
arpl
das
add
jmp
sbb
jnp
jns
fcomps
imul
bound
notl
xchg
cmp
cmpsl
cli
je
fwait
lods
ret
test
inc
mov
lock
mov
incl
mov
lret
aaa
sub
test
add
pop
shrl
ret
imul
in
out
sub
dec
insl
inc
and
cmp
inc
sub
add
add
xchg
pop
jg
add
xor
adc
mov
adc
fsubs
faddl
les
popa
scas
pop
cs
add
cmc
xchg
fcom
out
and
ljmp
fisttpl
and
push
ss
pop
dec
xchg
push
cld
leave
psubsw
insl
fidivrs
mov
shll
frstor
lahf
rorb
data16
mov
mov
ss
je
cmp
jl
mov
push
repnz
test
xchg
loop
pusha
or
fisubl
andb
jb,pn
inc
fs
mov
icebp
mov
add
and
jns
or
daa
test
nop
inc
ljmp
push
movsb
jmp
dec
xor
jbe
jo
add
test
out
std
push
pop
aaa
test
xchg
and
sub
and
push
arpl
pop
outsb
lcall
jbe
cmp
mov
mov
lock
popf
pop
lods
pop
hlt
adc
vcvttss2si
data16
movsl
lcall
aam
fstpl
cmpb
repnz
adc
sar
repnz
add
popf
mov
cwtl
mov
mov
testl
loope
push
push
cwtl
jbe
cmp
sarb
sbb
scas
nop
inc
xchg
hlt
lods
test
or
add
jg
incb
or
dec
insb
out
xchg
or
mov
dec
dec
or
mov
sub
jo
inc
orl
sub
les
xor
gs
movsb
xchg
jae
cs
push
cmp
xor
lcall
int
add
jl
in
xor
sub
dec
leave
mov
pop
repz
mov
cmp
ret
les
outsl
fimull
outsb
inc
inc
stc
xor
push
jg
ljmp
test
mov
or
std
out
test
xor
loope
out
shll
dec
dec
jl
jge
pusha
sbb
mov
mov
sub
cmp
scas
dec
jge
and
call
mov
fadds
out
add
or
add
aad
xor
jns
or
test
std
push
stc
repnz
add
imul
lret
mov
cmpsl
add
gs
xchg
mulb
sahf
sbb
jl
rep
jb
mov
jge
mov
lret
push
je
pusha
stos
push
fs
bound
stos
add
cltd
insb
sub
cmp
iret
or
sbb
push
dec
scas
mov
jle
mov
movsl
cmp
dec
adc
ja
pop
jp
das
push
jae
add
lahf
mov
je
int3
pop
ret
sbb
inc
lahf
dec
movsb
lods
and
xor
addb
aad
je,pn
add
in
enter
push
mov
mov
cwtl
daa
in
sahf
mov
out
jg
xor
popf
xor
mov
addl
and
fs
ljmp
jns
sbb
out
mov
add
mov
cmp
sbb
pop
add
lret
xchg
or
and
arpl
cmp
push
push
or
jl
or
movsb
pop
out
fmul
andb
jb
or
cs
ja
ja
sbb
lea
jg
arpl
daa
repnz
xorb
dec
iret
push
in
xchg
xchg
add
popf
aaa
jne
mov
or
popa
shlb
dec
or
loop
xchg
lret
xchg
repnz
sub
inc
inc
xlat
cli
lods
in
repz
lock
or
ret
jmp
pop
divb
dec
jae
les
arpl
or
sub
movl
pushf
lds
loopne
pushf
pop
mov
js
sbb
push
ds
mov
xchg
lods
addr16
aaa
scas
out
lods
test
daa
mov
mov
clc
xor
call
subb
mov
cmpsb
out
cmpsl
pop
outsl
in
in
and
xrelease
cmpl
sarb
push
or
sbb
xor
leave
jo
cs
jae
cmp
sbb
add
scas
adc
xchg
push
sti
ds
adc
daa
sbb
and
dec
aas
pushf
cmp
cwtl
leave
ss
and
lret
fcoml
add
add
and
pop
sub
sbb
std
pop
xor
fcmovne
call
push
pop
cmc
sbb
loopne
and
scas
dec
fistpll
xchg
outsl
push
out
rolb
mov
cmpsl
imul
ret
je
test
pop
out
adc
leave
insl
add
stc
sti
adc
and
mov
fs
enter
lods
andb
addr16
testl
popf
nop
pop
cwtl
pop
push
sub
js
push
sub
repz
jl
inc
popa
sub
add
push
imul
sub
sub
adc
nop
and
movsl
adc
arpl
mov
sbb
adc
test
jecxz
jecxz
xchg
nop
loope
scas
insb
or
adc
notl
loop
sbb
dec
push
mov
lods
sbb
outsl
cmp
pop
fwait
pop
mov
lret
dec
adc
sti
movsl
xchg
jge
test
xor
bound
mov
push
idivl
mov
std
and
sbb
or
rorb
push
xor
sbb
into
inc
fmull
cmp
or
cld
adc
cmp
test
mov
clc
popf
popa
lahf
xor
in
icebp
or
enter
mov
sbb
xlat
loope
fs
xor
sub
mov
lret
xor
in
fcmovu
xchg
and
cs
int
iret
mov
mov
and
jno
xchg
subb
lods
call
mov
sbb
imul
pop
sets
call
sub
repnz
or
aas
dec
mov
or
scas
dec
loop
movsl
cmp
shll
arpl
adc
jge
xor
jae
das
inc
push
pop
adc
testb
ret
test
data16
out
push
incl
xor
push
jo
outsl
xchg
fimull
pop
sbb
sbb
xor
shrb
sub
daa
scas
sbbb
push
jne
mov
push
cmp
shrb
into
lahf
adc
popa
fcmovu
inc
jb
xor
xchg
shlb
jle
sarl
addb
mov
jmp
dec
pushf
dec
aas
sahf
push
sub
xchg
push
dec
pop
jne
fimuls
xchg
sub
xchg
or
push
jle
add
loop
cmp
and
insb
popf
xor
sub
push
out
jmp
test
jno
and
jno
loopne
insb
dec
shrb
arpl
jnp
jnp
daa
mov
mov
sbb
push
jno
aam
out
sbb
and
adc
adc
imulb
rcll
rcll
push
pop
and
pop
xchg
aas
dec
or
push
insb
jle
push
data16
jb
in
jg
jb
daa
addb
lfs
in
outsb
lock
pushf
push
adc
mov
loope
mov
stc
in
scas
xor
mov
jae
and
sub
rolb
and
xchg
dec
pop
pop
add
mov
cli
popf
in
nop
in
leave
mov
ret
jne
jb
outsb
pushf
push
fldt
insl
lahf
jecxz
mul
shr
mov
xchg
jae
std
mov
sub
imul
jb
filds
or
popa
add
mov
and
xlat
add
ja
jne
jmp
or
mov
insl
jp
mov
or
out
jg
xchg
jns
idivl
les
das
ret
inc
leave
test
cmp
addr16
mov
inc
shlw
cmp
xchg
repnz
cmp
daa
cmp
sti
mov
cmpsb
mov
std
xor
stc
inc
je
dec
dec
and
cmpsl
sbb
mov
ret
sub
aaa
jbe
movsl
or
lock
and
mov
jb
push
pop
dec
iret
jp
in
loope
mov
lock
or
fwait
and
sub
arpl
cmp
cmp
into
pop
inc
enter
fs
iret
mov
dec
or
pop
popl
mov
mov
jg
cmp
jb
shrl
outsl
call
or
inc
insl
aaa
ficomps
sub
pushf
lods
inc
xchg
cmp
or
add
sbb
cmc
push
xchg
pop
mov
lcall
js
or
mov
sbb
jl
cmpsl
fstps
icebp
insl
and
outsb
jo
xchg
mov
jo
into
movsl
mov
or
pop
int3
mov
cmpsb
arpl
jb
xchg
or
sub
mov
shlb
cli
lods
push
rorb
dec
das
xchg
inc
andl
arpl
cmp
xchg
andb
scas
lea
insl
outsl
js
in
push
and
jecxz
rorl
add
in
push
xchg
or
sbb
adc
popf
adc
cmc
and
cli
or
rcrb
imul
outsb
aad
cmp
fsub
pop
sahf
hlt
out
xchg
xor
jns
jecxz
repnz
sub
xchg
jle
xor
js
add
test
repz
cmpl
xchg
cmp
aad
clc
sbb
fidivrl
into
add
jecxz
mov
sbb
lret
adc
out
insb
pop
push
lret
mov
sub
sub
mov
mov
fsubrs
inc
cmpsb
out
dec
in
xchg
or
xor
fimull
std
lods
mov
and
mov
testl
faddl
in
cwtl
and
or
mov
adc
pop
lea
out
cmc
xchg
fucom
jp
pop
or
cmp
dec
xor
pop
dec
icebp
inc
movsl
and
inc
mov
jo
jo
or
add
mov
push
or
movsb
mov
jge
adc
popf
aad
outsl
add
push
cltd
adc
pop
or
lret
lods
fsubrs
shlb
js
xchg
das
out
push
add
pusha
push
mov
cltd
sbb
dec
sub
inc
scas
test
lret
adc
testb
and
push
pop
mov
mov
lods
es
in
js
sub
jg
ret
imul
fsubl
ret
xchg
ror
sti
and
mov
ss
ret
aam
aas
hlt
push
xchg
dec
jmp
scas
ja
mov
negb
mov
addr16
test
int
movsb
shrl
cmpsb
mov
lods
or
popl
cltd
movsl
push
or
pop
outsb
pop
jge
popa
lods
cltd
fdivs
data16
xor
or
xor
cmp
in
scas
scas
lock
pop
imul
add
push
lcall
pusha
aas
and
mov
cmpsl
push
movsl
aad
outsl
insl
in
sbb
lds
dec
jne
push
cmpsb
fucomip
jg
jnp
cmp
push
pminsw
xor
movsb
adcb
ret
push
xchg
fstps
pop
add
sbbb
sahf
cmp
inc
cmp
inc
leavew
adc
into
mov
xchg
into
cmp
aas
dec
add
insb
fiaddl
xchg
imul
lds
xchg
lods
xchg
xchg
arpl
mov
leave
adc
mov
or
popa
fdivl
in
mov
aaa
add
movsb
repnz
push
dec
add
gs
or
pusha
fwait
aam
push
mov
cmp
scas
lahf
dec
push
daa
inc
lods
jno
add
fsubrp
js
sub
mov
dec
leave
mov
pop
sbb
sahf
ret
daa
sub
pop
into
adc
movsl
jns
dec
dec
loop
inc
out
lcall
jge
js
jecxz
dec
inc
loope
cmp
scas
jne
rclb
mov
push
mov
xchg
dec
add
push
cltd
adc
pop
adc
mov
int
inc
push
xor
lahf
pop
stos
test
and
addb
ret
lcall
out
xor
dec
jnp
xor
call
push
add
mov
scas
xchg
imul
mov
rcr
cli
xor
push
adc
or
bound
imul
test
push
ret
movsl
lds
xor
iret
arpl
sahf
push
inc
das
jecxz
adc
test
rclb
pop
nop
out
negb
loope
ss
xchg
mov
movsl
cmc
push
sub
ret
leave
ljmp
inc
mov
into
ret
ds
mov
mov
add
xorl
sbb
mov
test
sub
dec
outsb
mov
mov
and
in
add
or
hlt
clc
bound
inc
stos
sub
inc
les
mov
shl
or
scas
mov
in
lock
xchg
mov
sub
icebp
rclb
jae
cltd
outsl
or
dec
add
inc
stc
cmpsl
iret
inc
mov
out
jp
push
cld
add
into
and
iret
iret
add
in
and
mov
dec
cmp
lea
mov
xor
dec
subb
push
ret
inc
and
xor
mov
pushf
mov
or
mov
adc
dec
subb
inc
mov
mov
add
cmovae
inc
lahf
fcoml
push
adc
lcall
or
test
into
cltd
adc
mov
sub
xchg
scas
xor
push
pop
pop
imulb
arpl
push
or
adc
scas
loope
xor
insb
cmp
sbb
and
jp
mov
fwait
daa
pop
jmp
mov
sub
dec
pop
repnz
je
fsubrs
adc
sbb
jp
push
ret
jns
fstpl
mov
mov
jo
outsb
scas
pop
mov
xchg
mov
sub
scas
push
iret
sbb
mov
mov
stc
cmp
sarl
in
or
add
sub
nop
jle
and
mov
push
scas
mov
or
int
mov
dec
stos
repz
and
inc
mov
xor
sbb
mov
dec
or
mov
cmp
jmp
pop
sub
mov
loope
xchg
aad
pushf
or
shl
inc
cltd
fidivl
fisubs
mov
clc
sbb
int
shlb
lret
in
cmp
stos
or
lods
cli
jnp
mov
lods
out
mov
push
insb
jge
enter
enter
inc
iret
sbb
inc
lock
aaa
sub
ds
and
push
adc
iret
xlat
loope
in
sub
mov
mov
sub
push
stos
xchg
fldt
out
fsts
add
jecxz
cmp
mov
icebp
jb
adc
and
add
int
pop
addl
push
out
push
insb
mov
mov
mov
and
jbe
xchg
loop
aam
popw
shl
jg
std
lahf
lret
scas
add
jmp
pop
sbb
imul
push
movb
mov
lods
adc
hlt
shrl
mov
xchg
xor
rclb
sbb
and
or
cld
das
add
jp
sub
inc
in
sbbl
popa
pop
push
jnp
add
xchg
dec
and
mov
lret
pushw
mov
loope
mov
adc
stos
psrld
jno
inc
cmp
jp
mov
mov
mov
or
cmpsb
loope
xchg
lahf
jecxz
mov
stc
pop
ret
in
inc
testb
pop
sbb
mov
mov
dec
push
out
xor
fisubrl
xlat
dec
cmpsb
adc
cmp
fdivr
enter
adc
xor
jbe
pusha
mov
movsl
add
mov
aas
sub
pushf
das
pop
cmpsl
lock
mov
icebp
movsb
ret
dec
or
orl
dec
cs
fcoms
in
mov
xor
js
aaa
sub
mov
movsb
cmp
ljmp
adc
repnz
mov
cmp
jnp
jno
inc
mov
ficompl
in
aam
or
inc
fs
adc
movaps
inc
mov
data16
fdivs
rcrb
cmp
and
int
sbb
lahf
mov
nop
loope
xor
jecxz
lock
mov
push
hlt
mov
jo
xor
inc
mov
orl
out
cmp
sbb
push
fs
jno
arpl
cmpsb
add
mov
mov
jbe
mov
insl
push
cmp
in
dec
sbb
in
popa
mov
sbb
jle
sahf
fistpll
arpl
mulb
inc
inc
call
ds
lret
sub
faddp
mov
pushf
cmc
sbb
adc
test
mov
lahf
aad
xchg
and
xor
inc
call
popf
sbb
xor
jne
push
clc
and
imul
ss
cld
and
in
push
adc
sti
mov
ja
mov
jl
pushf
pop
loopne
inc
push
mov
inc
cld
inc
mov
push
lea
pop
sti
mov
or
fcomp
ja
cmpsb
push
fsubr
in
loopw
divb
push
nop
inc
ret
or
push
sub
movsl
or
jbe
push
jmp
rorb
fdivr
out
stos
outsb
stos
and
cmp
cmp
sti
mov
sub
enter
dec
pop
mov
dec
cli
jg
outsl
xchg
imul
imul
add
gs
push
xchg
mov
iret
or
std
mov
ljmp
subl
jne
mov
lret
cmc
push
repnz
es
xchg
ja
jg
push
cmpsb
cmc
mov
int
mov
cmp
jl
mov
push
scas
ss
repnz
bound
repnz
xor
lea
fsubp
jmp
in
rolb
adc
icebp
dec
cmpsl
cld
xchg
ljmp
xchg
cli
out
jns
or
outsl
sbb
sbb
sbb
js
mov
adc
xlat
or
inc
loope
sub
shl
jo
mov
bound
inc
and
dec
js
mov
stos
cmp
jnp
rdpmc
ja
xor
dec
mov
out
jne
xorl
lahf
shll
iret
mov
jno
xchg
iret
pusha
sbbb
cmpb
xchg
call
jmp
xchg
shl
pop
add
lock
mov
in
push
addr16
outsb
call
test
sub
push
push
es
repz
loopne
shll
push
iret
mov
imul
push
add
add
push
jnp
mov
xchg
cmp
add
inc
or
lds
push
adc
cmpsb
inc
scas
dec
sbb
lcall
repnz
js
adc
xchg
push
push
ret
dec
dec
arpl
jecxz
adc
pop
dec
test
out
mov
subb
xchg
cld
lahf
dec
and
inc
dec
dec
and
icebp
sub
mov
inc
add
dec
in
lret
and
popf
add
scas
test
mov
les
and
and
fisttpll
xor
or
imul
mov
jge
pmulhw
mov
lahf
outsb
xchg
stos
inc
adc
fidivs
dec
mov
or
xchg
fwait
add
stos
dec
jmp
in
in
outsb
mov
out
lock
adc
cmpsl
out
inc
stos
cltd
or
clc
dec
gs
mov
aas
dec
sbbl
jo
lahf
inc
sub
popf
std
mov
dec
fcomps
xchg
test
cmp
sub
dec
test
xchg
xor
push
sarl
xchg
imull
fcoms
in
nop
inc
push
and
or
popf
pop
sbbl
jp
or
jb
pop
dec
add
dec
dec
data16
aam
dec
imul
clc
cmp
in
mov
push
pop
ds
inc
ficomps
or
cmp
std
enter
ret
pop
shl
inc
sbb
sub
mov
call
sbb
loop
adc
sub
xor
inc
push
mov
inc
mov
mov
int3
add
dec
pop
lret
rcr
cmp
adc
lcall
jecxz
sub
test
sti
popa
testb
and
das
iret
dec
add
fs
jno
int3
sbb
das
add
jle
pop
push
and
mov
and
in
lods
push
fstpl
jb
bound
mov
cli
pop
fld
repnz
movsl
and
mov
inc
mov
jne
hlt
push
xchg
out
pop
stos
add
jmp
stos
lods
xor
push
xor
jb
mov
push
stc
in
inc
jle
out
adc
stc
mov
pusha
rcrb
rcll
repnz
sub
and
pop
mov
xor
in
rorb
mov
push
cld
push
es
ret
out
xor
fists
icebp
lock
fildl
scas
cmpl
sbb
jmp
cmpsb
movb
sbb
shl
inc
xor
je
iret
out
mov
or
jnp
cwtl
pop
insl
leave
pop
mov
mov
push
push
push
scas
inc
lret
ljmp
ljmp
mov
add
xchg
out
pop
jne
bound
sbb
sub
mov
cmpsb
xlat
mov
xchg
je
push
bound
push
and
mov
leave
enter
leave
sbb
imul
dec
and
jl
push
je
loop
add
cs
mov
jbe
and
xchg
stc
jb
push
nop
pop
inc
xchg
inc
jle
fstps
fcoml
xor
leave
jae
mov
mov
aad
ja
cli
cmp
mov
or
jno
arpl
and
adc
cmc
imull
mov
sub
xor
jle
jp
cmpsl
inc
stc
iret
cs
xchg
in
cmp
data16
jo
call
xchg
and
mov
test
fucomp
das
cld
push
jns
add
stc
inc
nop
stc
jnp
mov
lds
call
call
xchg
mov
inc
in
ret
fwait
pop
in
fcmovu
cmpsl
or
std
add
cmp
arpl
xchg
test
xchg
lock
push
add
ret
fisttpl
inc
mov
hlt
add
push
rcll
stos
lods
jmp
scas
jecxz
int3
out
xor
xchg
mov
icebp
inc
loop
xlat
sub
pop
pop
iret
jecxz
clc
jne
inc
xchg
sar
les
out
jbe
mov
repnz
mov
push
push
call
mov
in
adc
stos
fwait
out
jne
mov
sbb
pop
pushl
sub
mov
mov
and
sti
pop
mov
dec
push
sbb
add
stc
decl
pop
inc
stos
mov
pop
arpl
scas
xchg
lret
inc
dec
xor
jl
xor
aas
add
pusha
lret
out
lea
ret
sub
mov
and
pop
lea
adc
in
mov
sarl
mov
daa
mov
outsb
outsl
jnp
push
lcall
imul
es
cmp
ds
or
cltd
lods
adcl
in
out
xchg
dec
mov
adc
loopne
sbb
fcmovbe
inc
jg
mov
shl
fwait
xor
add
in
lret
popa
adc
add
out
jp
leave
mov
sbb
test
mov
in
cmc
xor
lea
mov
cmp
inc
stos
daa
inc
call
scas
push
popa
idiv
inc
in
shll
add
or
inc
test
mov
xorb
fdivl
outsb
sub
pop
push
lret
test
negb
loope
inc
add
push
lock
push
rcrl
push
leave
adc
int3
ret
add
pop
push
ss
nop
xor
cmp
cmpsl
fsubrs
pushf
lods
xchg
add
push
lea
rol
test
jno
shll
jae
aas
jge
jg
aad
popf
faddp
pushf
sbb
movl
xlat
or
js
dec
leave
popa
push
pushf
inc
repnz
lds
movsb
xchg
sbb
repnz
add
dec
test
mov
movsb
push
mov
xchg
cmp
and
data16
xchg
xorl
cld
out
into
sub
mov
addl
int
inc
mov
and
lcall
push
sbb
pop
pop
adc
cli
ffreep
aaa
data16
or
stos
xor
sub
jb
cmp
ss
push
mov
lods
sbb
pop
adc
sbb
mov
add
cmp
cltd
ljmp
scas
mov
enter
imul
cwtl
and
cmp
jnp
pop
cmp
cmp
xchg
jnp
test
xor
gs
leave
mov
insb
inc
nop
aam
rcr
or
inc
scas
ja
xchg
and
outsl
mov
or
les
dec
stos
insl
and
mov
fildll
push
xchg
cmp
int
test
lods
lcall
icebp
dec
mov
out
enter
adc
and
mov
les
shr
ds
push
fistpll
xchg
sbb
stc
mov
mov
pop
fdiv
jl
test
in
or
adc
mov
scas
enter
icebp
adc
push
jbe
xor
les
xchg
pop
sub
mov
pop
xor
push
movsb
enter
xchg
shll
sub
xchg
add
sbb
mov
paddsw
ja
add
adc
lods
or
xchg
xchg
stc
pop
roll
scas
jp
out
xor
pop
push
xchg
sbb
lret
push
pop
dec
xor
adc
jns
dec
mov
popa
pop
out
cli
or
push
into
into
inc
inc
push
mov
arpl
push
adc
std
lret
call
dec
xchg
lock
sbb
pushw
mov
mov
jns
inc
bound
jmp
repnz
imul
pop
cmp
jmp
and
fnsave
movsb
xor
mov
xchg
dec
mov
mov
or
jae
in
mov
loope
daa
cmp
mov
push
cmpl
icebp
inc
jg
mov
clc
gs
pop
jbe
adc
sub
xor
fnstcw
pop
cmpsb
scas
out
add
xor
nop
cld
sbb
das
test
jp
cmpsl
dec
movsb
ret
xchg
popa
shrl
cmp
jle
push
inc
mov
xor
in
daa
adc
and
mov
insl
adc
popf
cmp
and
mov
pop
test
or
inc
lods
rol
cmp
mov
push
push
pop
sbb
aas
jns
lods
pusha
dec
pop
jle
divl
xchg
push
lret
ficoml
cmpsb
or
mov
push
aas
roll
and
jecxz
sahf
pop
cmc
mov
stos
ja
xchg
lahf
and
decb
sbb
sub
dec
inc
lds
mov
insl
push
std
push
jg
mov
sahf
iret
inc
mov
stos
into
push
sub
ss
xchg
pop
adc
xor
pop
xchg
negb
cmp
xor
sub
mov
push
inc
cmp
sbb
mov
xor
pop
mov
sbb
cs
hlt
sti
test
xor
nop
dec
cmpsb
sub
sbb
sbb
imul
dec
mov
push
pop
shl
pop
scas
dec
inc
rsqrtps
sub
adc
sbb
rcrb
pop
jne
cltd
outsb
popf
or
into
ret
in
das
or
outsl
popf
jg
xchg
push
xchg
or
and
add
outsl
xchg
adc
lods
mov
or
xchg
loopne
dec
push
hlt
mov
add
cwtl
add
mov
push
pushf
lods
enter
icebp
inc
or
fnsave
and
out
xchg
or
lahf
push
push
pop
cmp
popa
in
xchg
es
cs
mov
sub
or
xchg
dec
dec
dec
int
mov
cmp
addr16
sbb
adc
xchg
and
ret
in
push
popf
rol
fistpll
sub
lret
mov
lret
mov
xor
adc
sbb
push
fs
xor
ja
leave
mov
dec
mov
ret
ljmp
int
dec
cmp
popa
add
scas
inc
lock
je
cmpsb
jle
rorl
inc
push
jae
jl
sahf
cmp
inc
mov
and
bound
insl
lahf
enter
jge
in
movsl
xchg
jns
cltd
test
lods
lahf
adc
jmp
roll
cmp
ljmp
mov
xchg
lds
mov
dec
ret
dec
push
jle
enter
insl
mov
sub
gs
dec
push
outsl
out
ret
dec
scas
out
mov
pop
dec
pushf
test
adc
adc
or
fidivrl
xchg
outsl
popa
or
xchg
pop
pusha
inc
push
dec
adc
jbe
jge
adc
jb
mov
popa
sbb
movsl
and
xor
movsb
aad
das
lods
mov
popf
inc
in
mov
movsl
sub
and
rorl
testl
adc
add
mov
outsb
mov
dec
xor
cmp
out
cmp
push
jmp
int
das
add
jbe
cld
scas
les
or
call
imul
lock
push
dec
push
in
nop
testb
pusha
sbb
xchg
test
dec
xlat
js
popf
mov
mov
cs
arpl
mov
pop
jmp
and
cmp
adc
aam
test
push
pop
lcall
loope
iret
dec
loopne
and
pop
and
xchg
gs
fs
jp
or
push
jae
pop
add
xorl
sub
mov
idivb
pushl
test
daa
mov
sbb
mov
adcb
imul
aaa
fdivl
xor
popa
and
arpl
mov
dec
sbb
cmp
or
sbb
push
in
dec
cmpsl
jl
gs
cmpsl
mov
insb
fisubs
in
sub
scas
das
lods
or
mov
lds
pop
xor
jp
pop
adc
push
stc
fs
ds
cwtl
gs
loope
add
add
pusha
lds
mov
icebp
add
mov
mov
jmp
ret
cmc
dec
je
cmp
jne
aad
sahf
rclb
push
out
cmpxchg
jnp
shlb
in
shl
add
mov
int
dec
ret
in
pop
sti
jg
arpl
or
insb
lods
mov
lahf
sahf
push
imul
stc
test
int
outsb
xor
imul
inc
ror
hlt
pop
cmpsl
adc
dec
xchg
mov
cmp
adc
mov
cmc
jnp
cs
iret
repnz
aas
jg
test
addr16
je
arpl
push
mov
ret
sbb
jb
jns
inc
jo
push
loopne
sahf
or
dec
mov
add
outsb
mov
jae
imul
inc
and
xlat
inc
repz
pushf
cwtl
insl
push
std
leave
fstps
pop
ret
jle
push
pop
imul
subb
and
mov
test
mov
jb
mov
adc
inc
mov
lret
aad
repz
add
sti
cli
or
pop
xchg
inc
in
adc
or
fsubl
add
movsl
enter
mov
dec
xchg
dec
mov
cmp
flds
inc
add
leave
lret
fimuls
cwtl
out
ljmp
xorb
mov
xor
stos
insl
mov
xchg
aas
jns
or
icebp
sub
jne
rclb
repnz
fwait
dec
pushf
shr
cmp
in
adc
add
jge
push
int
ror
leave
xor
int
int3
push
fidivrs
mov
movsl
xor
ret
mov
out
jae
cmp
stos
xlat
lods
sbb
or
imul
lock
pushf
clc
pop
std
xchg
hlt
hlt
mov
push
push
dec
orb
inc
mov
mov
rol
ret
or
jg
cmp
lods
pop
dec
cmp
inc
data16
fnstcw
cltd
xchg
xlat
and
daa
and
aas
jb
xor
jo
ret
pusha
loop
lods
mov
outsl
sub
inc
pop
mov
pop
leave
jl
mov
dec
jmp
add
cmp
pop
fnstsw
adc
sti
mov
adc
ret
xchg
pop
test
mov
sbb
insl
lret
mov
ficomps
pop
cld
pop
fcmovne
test
add
into
aas
adc
sbb
and
jge
into
movsl
sub
xor
sub
mov
lahf
dec
aas
es
ficomps
fld
enter
mov
jno
sbb
push
daa
sbb
pop
cmp
call
sub
es
add
out
aad
mov
mov
rcr
ret
rorb
adc
repz
xlat
sub
sub
sub
jle
shrl
sub
jp
xchg
fs
decb
mov
sub
rcrl
and
pop
xchg
lock
repz
dec
or
xchg
lret
out
outsb
jnp
daa
adc
imul
mov
loopne
cmc
xor
clc
shlb
prefetch
or
inc
js
mov
in
mov
lret
pop
cmc
test
ret
shrl
shlb
pop
mov
sub
out
fld
imul
leave
inc
clc
mov
mov
jo
cmp
inc
ret
inc
push
lods
add
xlat
xchg
sbb
cltd
mov
sbb
mov
xor
adc
xchg
lods
push
mov
je
mov
jl
sti
jcxz
xlat
aaa
push
imul
pusha
push
dec
add
jae
inc
mov
jb
pop
and
pop
and
jmp
push
push
jge
pop
pusha
fwait
nop
popa
iret
fbld
cmc
int
daa
repnz
ja
jbe
ret
cli
inc
sti
iret
or
in
sti
dec
dec
cmp
out
inc
scas
jbe
cltd
fiadds
test
rorb
dec
cli
sub
daa
mov
xchg
and
xchg
cmpsb
insl
cmp
xchg
pop
xor
cmp
add
mov
dec
add
sbb
lea
cltd
add
mov
push
loop
fs
mov
push
adc
push
mull
mov
mov
aad
lods
repnz
hlt
std
xor
pop
test
lret
and
out
cs
push
arpl
and
mov
sbb
sub
lret
push
aam
jbe
int3
cmp
jae
or
pop
cmp
lcall
insl
int
pop
jne
mov
pop
xchg
stos
mov
ficompl
jl
mov
push
mov
or
lock
sub
ljmp
inc
add
pop
dec
dec
test
xor
in
cwtl
cmc
cltd
xchg
adc
stc
pop
fdivl
call
frstor
xchg
ret
cmp
or
mov
jo
xchg
push
sub
hlt
aad
add
mov
xor
loopne
inc
js
aad
mov
lcall
stc
mov
loope
data16
adc
cmp
shlb
sbb
or
stos
test
push
pop
fwait
xor
mov
cmp
cmp
mov
clc
add
mov
into
test
mov
aad
sbb
jns
shrl
or
test
pop
out
sbb
add
pop
out
sub
cmp
mov
neg
insl
dec
and
sub
xor
call
xchg
xchg
mov
sub
adc
jbe
and
test
std
sbb
push
aaa
dec
mov
iret
out
out
and
jmp
or
ret
mov
iret
hlt
mov
xor
js
icebp
aam
push
bound
outsl
insb
cmpsb
inc
scas
jp
ljmp
movsl
mov
outsl
inc
fldt
pusha
repnz
jecxz
inc
iret
push
pop
mov
fs
gs
sub
inc
push
push
fimuls
mov
mov
cltd
jmp
sub
xor
int3
xor
mov
lahf
push
nop
push
push
stos
movsl
rcll
dec
jge
test
push
fcmovnu
xchg
xor
imul
lods
push
lcall
jae
fs
stc
scas
pusha
mov
cmc
mov
mov
sub
int3
cmpsl
sahf
jge
jnp
call
scas
or
sbb
xchg
mov
jb
or
pop
orl
pop
das
fcom
setp
push
jmp
lcall
inc
adc
imul
xchg
add
mov
cmp
mov
add
out
or
dec
inc
test
add
rolb
add
stos
dec
push
movsl
test
or
push
test
ja
lret
mov
in
ss
mov
das
repz
test
inc
push
sub
cltd
push
lods
mov
out
dec
js
hlt
cltd
dec
aad
rcll
stc
jle
mov
addb
mov
xchg
push
ljmp
jbe
hlt
cltd
scas
jnp
and
mov
xchg
loop
sub
imul
aaa
test
adc
aas
rolb
jg
xor
fstps
gs
int3
fdivl
xor
daa
push
inc
jmp
dec
rorb
mov
test
mov
cli
ss
enter
xor
ljmp
mov
and
nop
stc
pop
cmp
xchg
mov
push
xlat
jo
xchg
or
mov
jge
icebp
call
pop
cltd
add
pop
dec
adc
stos
mov
cld
test
cmp
adc
cmp
sub
lcall
jmp
mov
jbe
out
test
mov
or
jecxz
icebp
scas
mov
aaa
aas
fcoms
sbb
andl
xlat
cmpsb
insb
mov
pop
test
xchg
je
push
in
inc
les
inc
adc
adc
sti
test
aas
mov
ja
in
adc
push
daa
mov
mov
int
cld
dec
out
imul
not
cld
les
mov
inc
repnz
int3
mov
fwait
repnz
les
fxch
in
inc
ja
sbb
sub
sbbb
nop
cwtl
pushfw
mov
xchg
lcall
sbbl
dec
inc
xchg
repnz
sbbb
inc
sub
or
clc
das
dec
sub
mov
push
inc
lahf
add
inc
imul
pop
sti
cld
inc
adc
stc
add
dec
sahf
sbb
faddl
jne
push
or
push
mov
mov
or
mov
fcomps
pop
call
jns
adc
xchg
sub
fs
sbb
cli
rcrl
mov
or
fwait
scas
in
shl
pop
fdivrp
xchg
add
bound
mov
lret
aad
sahf
cs
clc
sahf
jg
pushf
xchg
dec
test
iret
cmp
xor
lcall
fsub
pusha
insb
add
mov
addl
daa
stos
adc
rcll
mov
in
sbb
sbb
push
nop
cli
push
jg
mov
push
mov
scas
push
ffreep
nop
icebp
lods
dec
pop
icebp
mov
cmp
rorl
out
inc
xor
adc
mov
aas
fidivs
or
gs
shrb
mov
stos
xchg
mov
imul
leave
mov
maskmovq
mull
mov
mov
adc
nop
pushf
lcall
loopne
mov
lods
cwtl
out
cltd
mov
lods
scas
mov
xor
popf
adc
jno
and
mov
inc
jb
jbe
push
pop
adc
pop
xor
pop
in
push
sti
ret
fimuls
addr16
iret
mov
stc
sbb
std
aam
out
stos
dec
rorb
lea
pop
mov
les
lds
sbb
lods
push
daa
mov
sbb
stos
adc
negb
lret
scas
daa
cmp
xor
ficoms
push
dec
dec
dec
ret
setle
repnz
inc
mov
inc
aad
mov
call
cmp
insl
and
xchg
xor
xchg
ja
mov
decl
fildl
stos
xor
xchg
arpl
dec
aam
pop
mov
add
into
imul
movsb
pop
dec
loopne
stos
fucom
cld
xchg
addl
add
mov
push
fmull
leave
js
push
pop
mov
dec
jl
loopne
adc
mov
sub
xchg
lret
push
addl
mov
sbb
push
lcall
inc
jl
mov
xchg
xorb
int
fwait
ds
sub
jo
outsl
mov
cmp
mov
enter
or
lcallw
inc
and
push
cmp
pop
call
or
add
out
cmp
fbld
hlt
cwtl
mov
fwait
jbe
sub
lret
out
movsl
mov
cld
mov
push
add
fcmovu
vpsubsw
rorl
stos
or
push
jg
rclb
or
jne
lods
push
mov
add
aas
out
push
divb
adc
xchg
addr16
test
insl
mov
and
sahf
mov
jmp
movsb
push
jno
xchg
mov
pop
sbb
jb
fs
mov
daa
or
dec
ret
fwait
ret
pushf
push
mov
loopne
dec
aad
in
inc
mov
pop
fsubrl
mov
das
aam
jno
movsb
push
addl
sub
pop
bound
into
xor
subl
and
fidivrs
cmp
lcall
push
fmuls
dec
adc
lds
sbb
pop
inc
mov
or
mov
mov
negb
or
push
or
dec
push
lret
jle
adc
dec
xchg
pop
push
loopne
cmpsb
cwtl
enter
push
shlb
xor
test
or
add
pop
dec
add
inc
shrl
inc
jmp
movsb
enter
pop
sub
mov
mov
test
and
add
or
cmc
shlb
popf
and
mov
xor
mov
in
lahf
cmpsb
fldln2
mov
sbb
fs
ss
mov
cmp
aad
jo
add
pusha
rcrb
cmpsl
cmpsl
jnp
sahf
pop
add
inc
and
add
popa
insl
mov
data16
xor
pop
jne
js
pop
sub
repnz
test
sub
sahf
je
pop
test
mov
xchg
cli
jns
adc
mov
sahf
xchg
jmp
pop
mov
shll
sub
mov
mov
lock
jg
cs
cltd
repz
pushf
sbb
xchg
jno
sub
mov
xchg
and
jg
push
inc
jecxz
lret
mov
lock
xchg
push
jp
out
cmp
push
inc
pushf
push
sub
dec
insb
mov
cltd
aas
jle
mov
jae
add
xor
fcomip
mov
subl
clc
mov
mov
ljmp
ret
das
pop
mov
push
ficoms
or
mov
nop
call
cmp
adc
xor
mov
test
or
bound
dec
scas
cwtl
cwtl
jns
mov
and
jae
aam
adc
out
mov
add
stos
sbb
xor
and
mov
imul
push
mov
inc
add
arpl
mov
inc
cmp
adc
inc
sub
cmp
loop
lds
mov
mov
out
push
push
insl
mov
jo
adc
push
sbb
pop
mov
adcl
mov
ficompl
cmp
sbb
add
lahf
fwait
mov
hlt
nop
mov
lcall
mov
xchg
jecxz
jp
je
inc
fstpt
mov
pop
adc
xchg
sbb
xchg
inc
dec
push
or
ret
xchg
xchg
into
stc
gs
iret
mov
adc
dec
add
cwtl
daa
pop
std
mov
jmp
aaa
add
dec
or
subl
inc
xor
add
adc
sbb
fwait
das
push
jge
mov
fisttpll
pop
jl
divl
aad
add
fwait
sub
sarl
in
jecxz
fdivr
int3
or
ret
dec
mov
inc
cltd
mov
mov
out
dec
call
jnp
mov
cmp
push
leave
shlb
cmp
cmp
nop
jbe
outsl
in
stos
scas
fisubl
gs
xchg
mov
aad
jbe
xor
push
into
fbld
nop
fdivrp
bound
mov
stc
cmpsb
mov
pshufw
arpl
push
roll
fwait
daa
fistpll
mov
mov
inc
sub
in
pop
scas
push
mov
jns
lods
mov
inc
add
fsubs
lcall
and
ljmp
negb
icebp
out
icebp
adc
push
xor
jg
mov
cltd
xchg
and
imul
mov
std
xor
lds
jo
cs
mov
fiaddl
lds
ljmp
sub
lock
inc
outsl
cmp
aam
movsb
pop
add
ljmp
xchg
shll
mov
sbb
fs
rcrl
jns
dec
loope
dec
mov
jo
cmp
pusha
or
sub
mov
nop
insb
push
lret
aaa
jecxz
inc
jb
nop
push
dec
and
inc
mov
jno
xor
push
jae
xor
jne
mov
fstl
pop
push
mov
rcl
inc
mov
adc
and
dec
pop
iretw
enter
daa
je
jecxz
repnz
cmpsl
fidivrs
test
or
cmp
rcrb
dec
insb
cmp
jg
jb
dec
sub
pop
fstpl
pop
mov
mov
dec
pop
ds
push
lods
out
lcall
push
fcompl
sbb
loope
jg
add
int3
mov
insb
push
adc
scas
mov
pop
xchg
push
sub
mov
iret
in
lahf
and
sub
in
mov
pop
cmp
outsb
push
sar
loopne
pop
enter
xor
xlat
cmpsb
test
add
add
mov
enter
pushw
inc
jae
mov
xchg
test
pop
add
test
mov
mov
mov
cwtl
sbb
mov
scas
daa
pop
mov
into
bound
jp
cmpsb
in
in
imul
shld
add
fidivl
mov
test
add
xor
cmp
sti
jl
es
mov
inc
in
mov
in
add
xchg
pushfw
gs
push
jne
loop
pop
scas
dec
mov
xchg
cmp
jbe
sub
subl
popa
adc
negl
cmpsl
out
data16
sbbl
mov
jp
je
ds
sbb
mov
sbb
divb
pop
out
jge
mov
xor
pop
notb
mov
inc
sub
lret
xchg
ds
fidivs
push
fmuls
ficomps
mov
xchg
and
or
pop
int
sub
pcmpgtb
or
xor
inc
dec
and
mov
dec
push
jmp
xchg
cmp
movsb
fsubrp
ficoms
add
xor
jnp
or
lahf
add
cmp
dec
mov
xor
inc
pop
mov
lcall
gs
jns
xorb
inc
dec
in
mov
push
int3
sbb
outsb
and
jle
add
call
cmp
or
inc
clc
fisttps
dec
push
jnp
pop
aas
clc
and
daa
stos
and
mov
sbb
mov
or
std
mov
adc
icebp
ja
stos
and
jb
stc
in
rolb
pop
mov
imul
pop
cltd
loopne
nop
shl
in
jae
jnp
jae
stc
sar
lret
adc
dec
pushf
mov
xchg
cmpsb
mov
dec
in
cmpsl
inc
push
mov
in
gs
inc
jae
mov
lcall
or
inc
dec
xor
push
inc
ffreep
lahf
push
rcrl
insb
shll
into
push
fsubp
andl
add
jl
push
insl
sub
and
cmpsb
sbb
inc
clc
in
mov
xchg
jmp
sub
inc
in
and
xchg
iret
sarl
or
std
std
jecxz
dec
outsb
fisttpll
aam
mov
jmp
je
stc
lcall
out
mov
jbe
pop
lods
xchg
pop
cmp
inc
sub
std
out
xor
mov
popa
jge
cmp
fwait
sub
pxor
ss
repz
add
das
bound
ds
inc
push
add
lcall
dec
lcall
pop
test
lret
or
mov
popa
ds
fists
ret
xchg
push
inc
out
xor
lods
je
dec
push
out
scas
in
gs
adc
psrad
iret
and
xor
lds
fidivl
mov
adc
xchg
jae
gs
push
dec
mov
jno
pusha
ss
xor
sbb
inc
lret
pushf
popf
js
ss
or
cmp
cmp
dec
pop
dec
add
loop
lcall
call
lcall
adc
loopne
std
or
sub
hlt
pusha
cmpsb
inc
and
or
add
aad
lret
in
mov
arpl
movsb
mov
mov
dec
sbb
sub
lret
mov
in
lcall
cmp
repz
lret
leave
mov
lods
mov
fsubp
jbe
jp
sbb
pop
into
add
dec
xchg
xchg
sub
cli
out
into
clc
push
adc
sub
sahf
cmp
outsb
inc
aas
loopne
shl
fistl
mov
sub
cmp
mov
jge
fnsave
aaa
push
pop
out
jg
lahf
lock
int3
mov
in
mov
sbb
and
popa
lcall
jge
shl
out
das
jge
jecxz
test
push
sub
mov
movsl
in
repnz
pop
pop
mov
cmp
enter
out
jl
out
inc
mov
sub
pop
loope
cld
push
and
cltd
mov
iret
push
cmp
cmp
xchg
or
ret
jle
int
mov
push
add
push
sub
inc
sti
cli
push
cmp
cmp
sbb
iret
popa
sbb
and
or
mov
mov
xchg
popf
xchg
mov
mov
sbb
test
aas
rcrb
xlat
leave
push
pop
cmpsl
pop
xor
and
cmpsb
hlt
push
push
inc
adc
inc
mov
fistps
in
sub
and
jns
rorl
dec
or
popl
idivl
xchg
movsl
mov
add
cmp
jle
push
pop
fisttpll
popf
fsubrl
lahf
hlt
scas
les
fisttpll
push
mov
imul
cmp
inc
ret
cmc
dec
cli
pop
test
adc
dec
dec
pop
mov
fisubs
mov
push
add
cmp
mov
adc
mov
popa
jecxz
repnz
ret
adc
jb
mov
test
mov
insb
mov
xchg
and
sbb
orb
fcoml
jge
in
sbb
adc
adc
add
es
pop
sbb
insl
mov
inc
cmp
lcall
into
stos
js
sub
arpl
xchg
and
js
in
sahf
push
inc
das
fidivs
xchg
jb
jns
push
arpl
call
mov
adc
or
ror
es
inc
cld
add
lods
xchg
lret
xor
push
adc
mov
mov
push
rclb
mov
add
jo
mov
stc
add
cltd
popf
adc
in
jle
push
adcb
inc
mov
mov
and
lock
cmpsb
xchg
push
scas
push
jp
cmovbe
fcmovu
xchg
ds
and
sti
adc
fisttpl
int
addr16
xor
sub
push
cmpsb
bound
lcall
in
or
sbb
add
mov
xchg
sahf
cmp
arpl
push
xchg
outsb
inc
inc
inc
push
push
adc
jb
test
xchg
jmp
adc
cld
repnz
int3
cld
pushf
out
out
je
inc
adcl
dec
ljmp
pop
add
cmpsb
sbb
ds
out
and
mov
or
inc
popf
aad
aad
jle
in
lea
std
xchg
call
jb
lcall
popf
cmpb
mov
cmp
xchg
pop
sbbl
hlt
decl
add
into
sbb
mull
mov
mov
es
in
push
shll
int3
mov
aam
and
mov
pop
enter
idivl
jne
mov
cmpsl
fs
pusha
ljmp
ljmp
retw
cmp
lret
sub
mov
ja
dec
ficomps
ljmp
sbb
mov
rcl
and
fs
jecxz
in
es
paddusb
inc
cmp
cli
inc
mov
add
xor
add
add
ds
bound
ljmp
mov
mov
mov
mov
sbb
mov
and
push
sbb
loop
je
sub
pop
fs
jo
jecxz
mov
stos
pop
cmp
movsl
in
lods
adc
adcl
clc
mov
mov
scas
arpl
fimuls
mov
cmp
and
and
xor
cmpsb
pop
aam
das
les
jnp
faddp
outsl
cmp
xchg
lret
mov
or
inc
xor
repz
sbb
jo
mov
icebp
cmc
xor
test
jmp
mov
rorb
mov
cmp
and
push
jb
xchg
fdivrl
ljmp
lret
inc
andl
test
test
movsb
ja
into
push
sub
fisttpl
rcrb
clc
movsl
xchg
xchg
and
xchg
mov
xchg
test
insb
lret
jl
mov
shlb
gs
stc
gs
inc
and
mov
inc
aaa
adc
aaa
bnd
divb
test
les
mov
sbb
frstor
rcr
mov
adc
popa
xchg
popf
in
mov
out
stos
sbb
cmp
iret
cld
cmc
cwtl
cmc
rorl
dec
loop
xchg
leave
mov
repz
mov
leave
in
lret
push
sbb
xchg
mov
xchg
mov
push
xchg
mov
pushf
sbbl
xor
jecxz
insl
jg
loopne
dec
clc
fildl
mov
add
lar
inc
mov
es
fiadds
push
negb
cmpsb
add
fisubl
sbb
hlt
sbb
mov
inc
mov
pop
inc
jno
jns
fildl
cs
faddl
in
fisttps
shrl
push
adc
xor
and
sub
hlt
popa
outsb
pop
xor
push
mov
in
lods
pop
lret
jmp
out
jle
jae
mov
mov
and
jnp
sub
add
push
sahf
adc
pop
shlb
movsb
dec
hlt
test
in
iret
aad
mov
mov
loope
adc
dec
loope
nop
lods
stos
lock
sbb
pop
dec
sbb
inc
pushf
jno
xchg
fcomps
scas
dec
sub
xor
out
lock
ljmp
push
jbe
dec
les
test
cltd
sub
inc
dec
sub
inc
mov
lret
ret
push
insl
cmp
xchg
movsl
ret
mov
out
sbb
lcall
jo
push
dec
add
fidivs
jle
sbb
les
in
es
gs
inc
and
jecxz
add
std
testl
imulb
fimuls
in
add
pop
cmp
mov
test
pcmpgtb
test
enter
cld
hlt
jg
bound
bound
push
push
adc
mov
pusha
inc
mov
mov
fidivs
lods
jecxz
mov
dec
popa
outsl
fistpl
sarb
mov
lods
jb
push
dec
popf
sbb
cmp
lods
lahf
es
xor
pop
icebp
xchg
cmpsl
push
xchg
xor
ljmp
xchg
loop
add
jno
cmpsb
call
or
mov
aad
fldenv
daa
dec
sbb
mov
cmp
pop
dec
out
out
aad
mov
and
outsb
push
insl
jnp
jge
movsb
cmp
in
ret
jne
arpl
push
mov
fiaddl
xchg
push
dec
push
cmp
frstor
and
loopne
out
sub
loopne
fbld
add
repnz
jge
notb
pop
ss
sub
aam
ljmp
aam
push
dec
xchg
jle
popa
mov
hlt
invd
dec
xchg
xchg
out
xor
js
jns
and
adc
das
xor
inc
arpl
fistps
lods
je
or
in
push
cli
mov
fidivrs
repnz
leave
int3
add
mov
dec
jl
mov
dec
scas
sbb
mov
in
jl
lea
and
dec
push
inc
cmp
and
xchg
les
and
ret
rorl
ret
sub
scas
sbb
cmovp
cmp
jge
jb
addr16
pushf
ret
fld
mov
mov
inc
xchg
pop
add
mov
jns
pop
sbb
loope
adc
inc
out
repz
push
sbb
in
push
xchg
cld
push
or
jle
or
mov
jecxz
sti
subb
add
fldt
push
mov
lock
out
movsl
add
aam
sub
xlat
add
add
test
or
mov
arpl
jmp
xchg
dec
push
and
sub
or
std
xchg
push
mov
cli
jl
insl
lahf
xor
xor
mov
fdivl
add
inc
ret
cld
xchg
sti
or
mov
sub
loopne
or
popf
addr16
fdivl
mov
mov
add
dec
push
pop
aaa
fnstcw
cmp
pop
js
or
into
add
sbb
pusha
mov
or
inc
adc
mov
lock
test
das
or
sub
xlat
mov
test
test
gs
sub
out
or
bound
adc
movsl
out
cmp
packuswb
dec
jmp
xor
insl
push
add
jnp
sub
fadds
sar
int
dec
inc
sub
pop
das
sub
fsts
cltd
in
loopne
mov
add
insb
nop
mov
add
mov
push
inc
mov
adc
adc
cmp
mov
in
fadd
movsl
das
shlb
inc
adc
or
stos
inc
jae
add
pop
jns
loopne
inc
shl
jne
pop
pop
insb
es
push
xchg
mov
inc
loopne
adc
sub
or
push
enter
and
inc
out
add
scas
in
jl
mov
push
mov
dec
addr16
jmp
gs
cmp
test
sub
dec
jo
sbb
call
mov
mov
flds
and
jge
dec
cmp
sahf
in
cltd
fisubrs
xchg
xchg
pop
insl
add
jmp
hlt
aad
jecxz
imul
ss
cld
dec
ficompl
cltd
push
aas
ss
stos
popa
fwait
les
sbb
push
or
add
or
jns
add
mov
xor
fcomps
add
push
lahf
mov
cmp
and
pop
xor
in
call
sahf
hlt
xor
jbe
and
jmp
fucom
adc
sahf
lods
insl
into
add
mov
scas
jne
lds
out
xor
sbb
dec
pusha
mov
xorb
mov
movsl
jne
cld
dec
clc
mov
imul
inc
insb
outsl
fsubs
cld
out
jge
jl
mov
ljmp
add
sar
mov
icebp
sub
bound
lret
mov
add
mov
inc
out
mov
in
mov
inc
adc
mov
repnz
push
xor
jns
stos
out
or
or
mov
sbb
jecxz
inc
cmp
out
and
mov
idivl
push
add
xchg
lret
and
cli
test
or
push
fmuls
adc
fstpt
push
fnstsw
cmp
and
adc
in
aaa
stos
out
xchg
jae
sbb
jnp
gs
mov
rcll
dec
test
push
push
sbb
repnz
fdivrl
mov
fidivs
mov
stos
push
dec
push
test
xor
leave
xchg
jecxz
fwait
sbb
mov
imul
sarb
outsl
idiv
inc
push
lods
mov
mov
cli
in
out
xchg
jne
insl
aaa
inc
test
int3
out
sub
cmp
leave
xchg
lahf
bound
shl
add
pop
pop
sub
pop
out
jo
xlat
dec
jb
insl
movsl
cmp
jmp
into
sub
leave
add
cli
sub
movsl
scas
scas
aam
cmp
mov
outsl
psubsb
jno
xchg
pushf
push
mov
jo
popa
stc
les
inc
test
cld
and
pop
les
stos
sub
push
and
cmp
hlt
or
lret
cmpsb
lds
push
cld
mov
dec
xchg
enter
movsl
dec
sub
bound
mov
aaa
mov
xchg
mov
sarl
lcall
inc
mov
mov
dec
fstps
push
test
and
inc
pop
mov
inc
jecxz
gs
adc
insl
xor
xlat
in
pop
add
jle
push
xor
mov
insb
ss
mov
mov
fcompl
lock
push
cld
loope
stos
pop
das
pop
cld
push
and
aam
mov
and
jns
repz
inc
dec
pop
aad
ljmp
dec
and
lds
lret
movsl
sub
aaa
inc
sbb
inc
jne
arpl
sub
ds
xlat
lods
mov
dec
mov
repnz
or
sbb
mov
adc
fdiv
dec
pop
cmc
push
fisubs
jecxz
iret
jmp
test
aas
push
insl
in
out
cltd
mov
inc
xchg
pop
popa
cwtl
xor
xor
push
lret
sti
xor
mov
js
pop
mov
jns
mov
inc
cmp
leave
int3
jmp
scas
imul
inc
or
out
mov
mov
movsb
jmp
sub
pop
addr16
rolb
in
jns
push
popf
enter
pushf
out
stc
mov
aas
mov
sbb
repz
push
cwtl
sbb
insl
sarl
jno
push
and
jb
or
push
fwait
je
fs
push
pusha
js
jns
inc
xchg
dec
push
repnz
push
filds
gs
inc
cmpsb
inc
clc
arpl
std
mov
ds
cwtl
mov
mov
sbb
mov
inc
nop
shrl
pop
adc
push
ret
arpl
ja
mov
xor
sbb
jmp
and
adc
pop
add
leave
orb
or
fdiv
movsl
lcall
mov
pop
or
sti
cli
iret
bound
mov
xchg
loopne
mov
clc
lret
clc
in
stos
ljmp
xor
mov
sub
sbb
mov
andl
pop
adc
sbbb
scas
mov
subl
lock
mov
testb
sbb
call
lcall
call
mov
imul
mov
push
fstpl
cmp
int
push
testb
push
test
nop
pop
int
or
lcall
sahf
retw
dec
adc
cli
bound
jb
add
out
js
xchg
adc
sub
and
cmp
sub
mov
stos
mov
idiv
inc
adc
push
push
mov
mov
je
xchg
rorb
popf
sti
in
adc
mov
mov
fnstsw
insl
enter
shl
inc
push
mov
push
lret
arpl
popf
mov
call
push
dec
popf
or
pop
ja
sarb
insb
lods
stos
jns
gs
in
and
jo
mov
movsb
pop
adc
xlat
jbe
fwait
arpl
mov
pop
lock
add
dec
xchg
loopne
mov
adc
mov
stc
fnstenv
outsb
or
scas
dec
sbb
pop
xor
jle
cmp
jae
mov
std
repz
jbe
push
loope
push
les
es
fnstenv
xor
sbb
shlb
push
sbb
mov
mov
mov
cs
repz
int
lahf
loop
stc
insl
pop
shl
sar
xor
add
test
jl
mov
ret
jg
cmp
xlat
mov
mov
sbb
std
add
repnz
fistpl
xchg
inc
cmp
mov
jmp
cmp
aad
cmp
insl
incb
or
inc
adc
or
lcall
iret
mov
cltd
xor
rolb
cmp
lret
push
daa
sub
hlt
push
pop
xchg
adc
and
fiadds
aaa
adc
mov
shrl
rorl
mov
scas
leave
subl
pop
inc
or
daa
cmp
nop
imul
lcall
test
int
js
pop
mov
jo
out
adc
shr
add
in
loopne
push
sub
call
lea
iret
das
mov
sub
ljmp
adc
inc
and
mov
ja
jb
dec
repnz
sub
and
sbb
mov
sti
sbb
mov
rol
pop
add
pushf
inc
mov
sub
inc
pop
add
imul
loope
or
adc
xchg
mov
xchg
testb
sub
adc
push
test
lock
and
jecxz
add
pop
ret
subb
test
sti
in
aam
lds
pushf
sahf
adc
cwtl
out
xchg
jae
rolb
push
xchg
sarb
test
cmp
rclb
mov
sbb
push
in
mov
lahf
or
addl
lods
mov
adc
mov
test
and
fidivl
push
xlat
mov
xor
jns
lods
aad
adc
adc
fnstsw
shl
test
mov
outsl
push
orl
mov
popa
fcmovu
test
aas
js
adc
lods
cmp
repnz
or
lods
sahf
fwait
test
test
dec
out
sub
imul
sub
out
pop
rcr
xchg
cmc
in
jg
or
inc
mov
fcmovnbe
add
lret
push
repnz
cmpb
cli
out
stc
mov
adc
loope
in
addr16
icebp
adc
dec
xor
mov
cli
das
test
xchg
fisubrs
pop
loope
adc
sbb
addr16
dec
push
mov
sub
idiv
sub
pop
cmp
inc
addr16
in
or
jbe
mov
mov
incb
adc
xchg
stc
xchg
mov
add
call
add
nop
sbb
lods
lock
xchg
mov
push
es
cmpsb
or
sbb
jo
cltd
jnp
in
mov
add
cmp
mov
push
popa
jecxz
xchg
js
and
js
mov
cs
pop
fsubp
ficompl
push
bound
movups
pop
adc
push
fdivrl
test
in
fidivs
xor
cmp
add
inc
xor
inc
mov
mov
repz
into
scas
out
jae
int3
pop
dec
dec
flds
out
jo
out
cmp
pop
data16
xchg
fnstenv
jns
icebp
or
sub
outsb
sub
mov
jg
adc
sar
mov
xorl
inc
pushf
mov
adcb
gs
cmp
fidivs
mov
cmp
je
clc
inc
loope
inc
mov
mov
cmp
mov
scas
iret
mov
cmp
ret
inc
pop
scas
pushl
test
lret
mov
out
push
sub
xor
test
push
dec
cli
inc
rep
mov
in
cmp
int
int3
xchg
pop
test
pop
in
out
mov
sub
arpl
adc
mov
xor
add
or
mov
push
fwait
sbb
flds
inc
int
lods
ljmp
test
push
mov
xor
pop
int3
lret
xor
lds
push
mov
mov
arpl
dec
and
cwtl
pop
mov
stos
cli
xor
es
mov
and
push
cmp
mov
cmpsl
es
inc
xchg
xchg
in
inc
push
or
cmpb
mov
push
mov
push
lcall
and
filds
popa
in
loop
psraw
jae
cmp
mov
mov
mov
pop
add
or
aaa
inc
mov
inc
pushf
lret
hlt
xchg
fists
xchg
and
and
ds
dec
jns
pop
mov
insb
test
pusha
movsb
pop
inc
stc
dec
repz
cmp
inc
push
jl
cltd
inc
and
and
push
cwtl
test
popf
adc
stos
or
jne
push
mov
add
push
xor
shrb
cli
jnp
pop
xor
lret
or
sub
mov
sub
cld
pop
ret
fisubl
inc
repnz
inc
xchg
dec
cmp
xchg
ja
stos
shll
lcall
push
dec
out
dec
insb
adc
es
dec
cmpsb
int
rol
imul
stc
jl
and
add
cmp
push
jmp
jo
imul
jmp
repz
jo
jno
pop
push
sub
aas
idivl
cs
lcall
adc
lahf
and
sti
and
daa
in
pop
jmp
mov
addr16
cmp
scas
test
sahf
lret
sbb
adc
imul
jne
mov
sbb
dec
mov
push
hlt
lret
popf
and
add
aaa
mov
test
mov
mov
push
adc
mov
je
push
cs
pusha
jnp
pop
xchg
mov
inc
imul
sbb
arpl
add
test
leave
outsl
movsl
fcomp
mov
rep
push
pusha
lea
mov
out
in
imul
cmp
push
xchg
fs
mov
cli
sbb
leave
imul
add
cli
shrl
mov
pop
mov
dec
adc
inc
jo
sbb
inc
fisubl
xor
and
ja
lret
add
and
stc
clc
jle
pop
in
mov
xor
lock
jmp
movsb
push
sub
outsb
fstl
xchg
push
pushf
orl
push
mov
shll
cs
mov
sbb
push
inc
xor
rcrl
mov
loope
lret
xor
mov
sti
sub
sub
cmc
jnp
sti
mov
pop
pop
test
push
sub
idivb
les
outsb
clc
sbb
sub
sbb
push
inc
mov
lret
dec
int3
adc
mov
cmp
rorl
sub
daa
addr16
or
loop
mulb
jno
test
or
mov
rep
mov
stos
imul
mov
imul
shl
daa
pop
mov
stos
dec
cmpsl
in
sbbl
stos
cmp
andl
jnp
loopne
negl
sub
popa
test
dec
or
arpl
roll
xchg
xor
sub
in
iret
sbb
inc
dec
sub
xor
iret
pop
test
cmc
popf
or
lcall
pop
mov
sbb
push
xchg
testb
cmpl
icebp
test
test
or
sbb
sahf
stos
mov
ficomps
adc
aaa
gs
sub
push
sbb
mov
push
sbb
jo
in
add
mov
jge
ss
push
mov
cmp
inc
popf
or
enter
or
and
daa
inc
pusha
sahf
out
xchg
test
dec
insb
jmp
cltd
fstl
or
das
js
stos
outsb
test
push
popf
push
mov
mov
add
jbe
addr16
cli
notb
dec
es
clc
cmp
lcall
pop
inc
jecxz
loopne
pop
and
cmc
and
fucomip
rcr
cli
stos
dec
or
int
lea
fildl
or
cs
and
movsb
xor
dec
leave
mov
in
arpl
add
lds
mov
cld
inc
movsb
and
bound
cld
movsb
jle
cwtl
xchg
pop
push
fsubr
dec
enter
repz
sbb
imul
xor
mov
out
xor
mov
out
jnp
ljmp
sarl
pop
add
xchg
mov
jae
sbb
jnp
inc
jp
cmpsl
outsl
mov
arpl
adc
ljmp
jbe
push
mov
loopne
add
sub
sub
mov
or
mov
and
sub
adc
cltd
cwtl
mov
jl
mov
sub
cmp
push
pmaxub
push
mov
pushf
insb
cmp
lcall
repnz
cmpsl
mov
ret
imul
aas
jo
and
push
jns
adc
sub
adc
ret
jbe
movsl
rcr
aas
mov
in
popf
sub
add
or
sahf
aad
pop
push
aam
call
push
sub
jns
jae
mov
loopne
lea
inc
hlt
sar
push
xor
jecxz
mov
inc
add
lods
add
adc
aam
subb
rcrl
loopne
mov
add
jp
int3
cli
adc
rolb
das
jecxz
movsl
add
xlat
cmc
xchg
pop
sbb
sub
xchg
and
pusha
xor
or
inc
or
sbb
and
push
jne
repz
fcomps
loopne
push
std
and
jne
xchg
cmp
jle
lods
push
mov
sbb
push
mov
sti
cmp
xor
push
mov
arpl
cwtl
inc
push
mov
cmpsl
scas
dec
jns
mov
pop
lea
outsb
mov
cmovns
add
pushf
mov
push
adc
outsb
xorb
gs
inc
pushf
push
subl
or
sub
dec
push
lock
bswap
icebp
in
dec
inc
mov
into
call
pop
cld
sbb
mov
sti
push
subl
aam
fdecstp
and
or
ret
mov
and
sysexit
push
lods
mov
cld
xor
cwtl
lds
mov
mov
insl
ja
leave
rcrl
rcrb
rcrb
mov
push
inc
jg
or
scas
push
mov
sub
mov
cmp
mov
ljmp
or
push
mov
sub
out
jge
in
aas
jae
imul
pop
imul
addl
popa
shlb
dec
cmp
push
inc
hlt
dec
in
cmpsb
fiadds
xchg
das
repnz
cmp
cld
sub
and
xlat
movsl
adc
mov
inc
cltd
fimuls
subl
mov
sbb
jmp
jmp
cmp
cmc
andb
sub
cld
mov
stos
mov
jnp
repz
in
das
mov
pop
loopne
add
inc
lret
popa
je
cwtl
dec
inc
sub
pop
push
stos
popa
cld
repz
push
sub
popa
lds
movsb
sbb
jmp
push
push
xchg
bound
add
or
mov
cwtl
in
or
loop
arpl
addr16
cmp
sbb
or
jecxz
add
scas
cmp
xor
js
loop
fcoms
es
rcr
dec
or
pop
shll
mov
into
adc
dec
jb
mov
loop
sub
and
sbb
inc
mov
sbb
xor
lds
mov
movsl
rolb
out
push
mov
dec
rcll
add
sub
roll
arpl
repnz
jp
arpl
neg
inc
inc
pushf
sti
ret
cmpsb
mov
add
leave
pushf
mov
rcr
cltd
mov
inc
ds
add
nop
mov
add
std
test
loop
inc
push
push
push
xchg
xor
cmp
xor
or
mov
imul
shll
nop
cmp
adc
push
fsubr
adc
out
ja
adc
dec
dec
lds
inc
repnz
sbb
insl
adc
xchg
sub
adc
lods
xor
cltd
les
fmull
jb
jmp
aad
lods
cmpsl
ror
sub
cmp
lret
push
dec
xchg
jmp
lds
jno
mov
inc
inc
cmp
jp
test
jne
cmpsb
mov
addr16
sbb
aas
add
dec
jmp
mov
test
orb
andl
or
add
ss
xchg
mov
mov
dec
int
enter
or
fcmovb
and
push
xchg
js
lahf
dec
mov
xchg
fbld
insl
aad
add
cli
sbb
xor
outsl
dec
mov
cwtl
cwtl
jmp
aaa
dec
push
fs
xor
mov
hlt
lock
outsl
cmp
fstpt
int3
lcall
inc
iret
loop
xchg
dec
adcl
mov
jle
jmp
mov
jmp
jno
inc
xchg
push
repnz
mov
imul
xchg
fimuls
ficoms
fdivp
cmpsl
add
lcall
inc
iret
mov
jns
loop
lea
enter
ljmp
sbb
notb
inc
lods
psrlw
mov
lock
sti
mov
enter
lds
sub
mov
nop
and
iret
mov
or
and
fsubr
getsec
out
cmp
sub
sub
std
sahf
add
add
push
sub
mov
and
cmp
push
mov
add
add
and
mov
push
cmp
fldl
push
les
push
sarb
fsubl
xor
and
clc
fstpt
mov
xchg
and
lret
sub
sbbl
nop
call
or
xlat
jg
outsl
out
push
scas
loope
push
fwait
cmp
dec
daa
cli
sub
add
popa
frstor
pusha
add
jbe
dec
xor
xor
xor
out
xor
xchg
call
xor
test
xor
outsb
jp
divl
jne
add
sbb
mov
or
daa
pop
add
xchg
stc
jnp
shlb
inc
adc
lods
divb
pop
mov
into
cltd
stos
in
cwtl
pop
cmpsb
xor
or
push
xchg
sub
mov
inc
in
sub
sarb
sbb
ja
sub
test
shll
stc
mov
cmp
mov
and
ret
xor
sub
or
ljmp
dec
mov
xorl
cmp
pop
xor
sti
add
push
and
mov
hlt
cs
xchg
inc
ds
pop
lahf
ficoml
mov
mov
jp
mov
dec
rcrb
pop
das
mov
decb
or
sub
sti
push
pop
push
and
inc
movsl
cli
or
cmp
jge
fdivr
inc
dec
scas
testl
pop
push
pop
or
mov
add
inc
xor
mov
ja
ja
xor
jb
mov
adc
inc
movsl
or
addr16
mov
outsb
adc
mov
mov
mov
mov
xor
arpl
cmpsl
test
and
xchg
xorb
push
pop
and
inc
xorb
js
xcrypt-ecb
cmpsl
mov
dec
loop
pop
fisttpl
pushf
add
push
js
fcomps
xchg
jecxz
repnz
xchg
jns
pop
cmp
add
push
lret
jne
push
fs
jbe
pushf
cmpsb
push
daa
xchg
pop
enter
xchg
fmuls
std
mov
data16
aaa
ret
mov
sbb
adc
inc
xor
jl
add
add
in
push
fstps
cld
sbb
mov
fs
push
cmp
jmp
subb
aas
pop
mov
lods
enter
cmp
xor
xorb
jmp
push
mov
push
cmp
mov
add
dec
test
movsl
pop
mov
stos
aad
pop
and
adc
or
test
adc
loopne
dec
xor
xchg
jno
jl
call
roll
mov
xchg
jne
lods
and
xchg
imul
mov
scas
inc
in
data16
mov
add
xchg
lret
fnstenv
push
xor
test
add
xor
loope
pop
mov
out
and
cmp
out
sub
out
adc
mov
rorl
testl
sbb
pop
outsb
stos
xor
or
xorl
mov
mov
je
shrl
xchg
rcr
push
jno
std
ja
adc
scas
rclb
fwait
mov
out
xchg
lcall
icebp
inc
out
xchg
pop
fists
add
lods
stc
hlt
jo
ret
mov
sar
pop
mov
cmp
mov
mov
pop
or
push
adcb
cmp
xor
movsl
das
cmp
inc
call
push
inc
lds
aas
push
xorl
mov
and
jo
aaa
mov
cmc
pop
mov
mov
out
sahf
push
jg
roll
in
popf
adcb
pop
les
adc
mov
in
adc
les
stos
push
cmp
jo
incl
push
js
iret
ret
ljmp
fcoms
out
in
push
inc
mov
jbe
adc
pop
test
pop
cmc
add
add
adc
ja,pt
out
jo
cmp
out
lock
dec
fisubs
insb
push
in
fdivl
outsb
mov
stc
out
rclb
cli
inc
dec
push
cmp
popa
add
mov
cmp
pop
or
ljmp
dec
pop
mov
mov
gs
adc
call
cmovb
aas
subb
je
add
sar
ljmp
fsubrs
push
lahf
lret
cmp
xor
lea
lods
ds
popf
inc
shrb
pushf
pusha
in
pop
xor
fsts
int3
sahf
mov
lds
sbb
push
inc
movb
cmpsl
or
ret
movsl
loope
fstpt
cli
mov
inc
xor
add
cmovge
push
stos
inc
jecxz
imul
fs
arpl
out
add
add
ret
push
cmp
data16
scas
mull
mov
inc
xor
inc
mov
or
fwait
lret
or
xor
inc
ret
and
mov
and
int
add
bound
sub
adc
and
mov
cld
mov
orb
mov
imul
lret
pop
sti
mov
aas
xchg
pushf
lea
push
mov
imul
cld
daa
adc
mov
cwtl
xor
fnsave
cs
fimull
daa
or
fwait
rcr
ja
sbb
cmc
inc
jns
popa
jg
push
lods
jle
repnz
lcall
sbb
and
nop
imul
out
das
jo
jge
or
stos
daa
cmp
scas
out
std
jg
pop
hlt
inc
dec
and
loope
sub
push
loope
dec
jae
dec
xor
sub
sbb
add
jo
mov
les
jno
inc
mov
enter
imul
cld
addl
push
imul
cwtl
jae
pop
sbb
das
sub
sbb
inc
add
add
sub
rcl
push
and
out
dec
insl
push
movsb
lahf
sbb
or
insl
xor
stos
pop
sbb
aad
sti
dec
aaa
xor
fidivrs
push
or
das
cli
push
push
dec
pop
data16
aam
sar
adc
lahf
iret
shrb
scas
es
push
push
mov
xchg
enter
insb
push
push
cmp
jno
repnz
xchg
rorb
bound
xchg
fidivl
outsb
clc
xor
in
aaa
sub
ds
adc
or
movsl
in
loop
xor
jmp
sub
pop
psllw
lahf
inc
jb
ja
loop
divb
cltd
pop
cwtl
cmp
push
int3
cwtl
fisubs
lock
int
pop
push
pop
les
mov
lods
jp
jp
add
inc
in
aad
mov
xchg
adc
repz
push
xlat
lods
mov
or
lods
call
rep
out
clc
fldl2t
push
push
cmp
imul
pop
enter
out
mov
adc
add
xor
push
ficoms
xchg
das
pop
out
xor
fsubrs
inc
cmpsb
pushf
dec
fcomi
cltd
pop
sub
clc
fists
jp
pop
cmp
in
xor
cmp
mov
rcll
or
outsb
pop
jp
jae
push
repz
rorb
xlat
jp
xchg
out
xor
dec
dec
sub
iret
iret
jecxz
sub
shlb
lret
popa
insl
fsts
clc
cmp
dec
cmp
xlat
xlat
popf
bound
cmc
or
mov
inc
or
repz
dec
sub
sti
imul
subl
mov
xchg
popf
lea
lret
xchg
cs
test
and
ficompl
mov
clc
cmpsl
and
arpl
adc
mov
mov
mov
jno
mov
inc
xchg
inc
jae
mov
lods
inc
shlb
push
es
fnstsw
xchg
call
lds
push
jmp
mov
xor
insl
andb
aam
out
aas
mov
mov
mov
clc
lods
adc
mov
scas
mov
jo
xchg
add
ja
push
aad
in
mov
in
xchg
cld
cmp
dec
shll
bnd
dec
or
addb
in
push
jo
xor
pop
push
xlat
sbb
cmp
mov
push
insl
sbb
outsl
mov
sbb
rcrb
iret
mov
cmp
jnp
jecxz
mov
mov
push
push
mov
test
movsb
push
jge
popf
rorl
aad
leave
ja
dec
insb
mov
insb
add
inc
fs
xor
mov
lret
sbb
test
push
test
or
sbb
fsubr
nop
mov
sub
test
fcmovbe
lret
out
sti
lds
lret
sahf
sub
cmp
push
push
mov
std
push
cmc
mov
pushf
jl
lock
lret
scas
in
cmp
cmp
lea
mov
and
loope
sub
rcll
js
jle
pusha
mov
and
pop
ret
idiv
loope
jae
imul
addr16
out
pop
mov
lods
add
mov
and
inc
mov
subl
xlat
jo
ja
les
add
xor
push
cltd
xchg
or
jnp
mov
sub
sbb
push
mov
sbb
sarb
fcom
ret
dec
lcall
jg
and
pop
inc
xor
inc
ds
jge
fstp
jmp
lock
lcall
shlb
fnstsw
sub
sbb
ljmp
mov
andl
mov
mov
push
sti
loopne
aas
js
ja
imulb
pop
cmp
fld
int3
xchg
or
rcll
sbb
jno
cmpsl
xchg
test
cmpsl
repz
mov
adc
arpl
mov
in
imul
addr16
push
in
cmp
out
gs
jno
pop
jl
and
dec
lock
loope
sub
sahf
or
sbb
int
lcall
loopne
testl
mov
ret
mov
data16
jne
in
insl
lcall
push
inc
push
add
pushf
outsl
jns
movb
xchg
or
test
sarl
pop
mov
or
add
mov
ret
pop
push
and
inc
stos
fisubrs
mov
inc
mov
xor
and
das
or
mov
xor
add
lods
je
mov
and
mov
sbb
fisttps
add
in
ret
cmc
lret
or
sub
pop
lods
add
idivl
inc
pop
add
testl
or
in
outsb
ljmp
mov
cwtl
movsb
or
mov
divl
xor
adc
adc
dec
jno
movsl
cmp
enter
sbb
into
cmpsl
int3
arpl
jmp
pushf
xor
std
lock
test
pop
inc
xchg
push
mov
sub
test
push
in
xor
outsl
leave
roll
hlt
mov
andb
mov
clc
pop
cmpsb
je
xor
daa
cmp
scas
jo
inc
pusha
and
ficoml
mov
jo
lret
xor
inc
adc
mov
mov
sub
pop
nop
enter
sub
cmp
cmp
adc
mov
jmp
es
mov
in
fdivl
push
lahf
push
ds
xchg
movsl
fcmove
xchg
cwtl
xor
mov
xchg
out
test
pushf
jnp
sbb
mov
loope
mov
fwait
dec
dec
clc
cmp
pop
enter
movsl
cmc
lods
push
inc
test
push
aas
movb
xor
and
push
push
dec
test
jl
xchg
or
sbb
jge
cmpsb
push
cmp
mov
adc
push
mov
inc
mov
mov
pop
repz
daa
add
pop
lods
or
xor
imull
mov
enter
scas
loop
cmp
pop
popw
mov
or
lods
pop
cmp
das
adc
fidivrl
rolb
mov
int
dec
leave
push
pop
dec
jns
mov
into
cld
cwtl
push
xchg
insb
cmpsl
arpl
lock
and
sbb
jle
jne
xchg
push
outsl
in
arpl
inc
mov
pop
or
inc
bound
cmpsl
xchg
hlt
jmp
loope
cli
cmpl
push
xchg
clc
lock
shr
lcall
cmp
mov
mov
sahf
movsl
imul
lds
pusha
push
mov
divb
pusha
in
or
dec
sarb
push
gs
out
add
imul
ja
and
aas
mull
decl
dec
mov
push
xchg
in
mov
dec
pop
jle
pop
test
push
pop
pop
adc
pop
adc
dec
aad
push
icebp
xchg
pushf
adc
xor
out
negl
sub
and
mov
pop
mov
mov
sbb
mov
das
js
insl
pop
inc
adc
push
push
addb
mov
mov
jl
pop
jmp
insl
out
or
rclb
adc
mov
xor
or
lds
inc
xchg
cmc
in
jnp
xchg
lret
mov
or
fsubs
sbb
pushf
sub
out
add
dec
ds
pop
clc
lcall
cltd
insl
and
xchg
adc
outsb
xlat
fmuls
pop
sti
add
js
push
repz
and
jb
xchg
adc
das
enter
xchg
mov
nop
jns
mov
insb
push
jge
and
out
mov
cmp
repz
fstpl
xchg
sub
mov
pushf
stc
jnp
push
lcall
aam
or
push
push
add
imul
add
dec
cld
enter
std
mov
popf
or
add
jnp
lret
pop
test
xchg
fwait
push
lret
fsubrs
testb
dec
cmp
int3
pop
sub
cld
push
stos
push
fimuls
or
sarb
aam
mov
mov
rcl
stos
jns
or
dec
cmpsb
les
inc
stc
mov
and
dec
and
idivl
inc
aas
inc
and
mov
jecxz
cmp
or
xchg
mov
pop
popa
cmp
push
inc
test
mov
aam
sarl
les
inc
test
mov
mov
cmpsb
push
mov
mov
fisubrl
cld
sbb
test
mov
push
dec
enter
xchg
fcmovnu
jp
nop
adc
dec
xor
rolb
pop
bound
cmp
scas
xorb
cmpsb
mov
xchg
neg
out
daa
jp
push
lcall
addr16
cmpsb
je
scas
pop
jmp
inc
in
arpl
pusha
sub
insl
xchg
in
outsl
nop
in
push
dec
cli
inc
cmp
xchg
cs
call
pop
test
es
gs
repnz
mov
jg
std
push
and
mov
and
jno
inc
lret
cmp
aam
jb
xchg
or
mov
int
adc
cmc
cmp
shrb
pop
xchg
test
test
pusha
mov
mov
mov
mov
rcrb
dec
fiadds
dec
add
mov
jecxz
sub
mov
push
mov
mov
push
sub
sbb
push
outsb
lret
loop
sbb
sub
xchg
fistl
adc
dec
push
inc
call
stos
jb
in
lret
push
dec
push
push
pop
pop
shlb
leave
pop
out
decl
jae
cld
push
lret
mov
iret
arpl
inc
mov
jecxz
inc
fistl
mov
stos
xchg
pop
pop
aas
pop
and
jg
scas
test
push
je
and
movsl
dec
or
ret
xor
and
loop
or
mov
fwait
push
stos
cmp
inc
sti
aaa
lock
imul
xor
test
stos
dec
dec
pop
orb
sbb
dec
jae
fsubl
inc
dec
jecxz
aam
pop
movsb
pushf
jecxz
lcall
cld
es
adc
inc
mov
cmp
sbb
das
pop
xchg
insb
outsb
sbb
add
cmp
ja
push
loopne
xor
and
dec
cmp
call
cltd
shll
nop
or
xor
enterw
and
inc
inc
adc
rol
roll
in
pop
scas
test
arpl
fiadds
add
xor
out
leave
sahf
fistl
fwait
call
mov
push
ficompl
xchg
shlb
jmp
dec
aas
lret
int
sbb
push
mov
pop
xlat
lahf
mov
cli
adc
adc
in
and
push
mov
call
or
insl
xchg
jb
sub
loop,pn
jmp
add
ret
lea
data16
out
mov
dec
dec
cmpsb
sbb
push
test
dec
imul
fstpl
idivl
pop
in
or
add
dec
test
xchg
or
jns
cmp
dec
cs
adc
jb
dec
xchg
sahf
js
addr16
in
push
fisttps
sub
add
adc
push
pop
lea
mov
fnsave
xchg
rcr
sub
or
pop
cmp
lret
pop
pop
dec
addb
faddl
aas
insl
adc
popa
jge
js
xor
test
hlt
mov
hlt
imul
aaa
hlt
xor
jne
xchg
push
into
int3
push
cli
cmpl
hlt
and
push
popf
test
xor
scas
pop
mov
mov
repz
dec
sahf
neg
repz
je
inc
jecxz
or
xchg
mov
and
jo
mov
pop
lahf
jno
cld
xchg
sub
mov
bound
mov
inc
cmp
push
sbbl
push
fcmovnb
push
lahf
stc
sbb
push
iret
jmp
xor
outsl
push
dec
sahf
imul
out
and
pushf
clc
lret
outsb
je
pushf
lock
lahf
aaa
into
cmp
jecxz
gs
nop
inc
push
repnz
cmp
mov
iret
scas
mov
xchg
repnz
push
fs
scas
adc
adc
push
jecxz
pop
subb
xchg
jecxz
push
stos
xor
jge
sbb
scas
test
imulb
dec
push
ds
xchg
xor
jle
sub
or
cmpsl
andb
fstl
inc
ret
dec
cmc
lahf
adcb
adc
loop
shr
fmuls
arpl
dec
mov
popf
movsb
cwtl
mov
rolb
inc
pop
cmpsb
hlt
leave
fnstcw
mov
xchg
data16
arpl
xor
mov
rol
jl
inc
jp
add
rcl
fstp
or
jno
mov
rcrb
and
outsl
inc
mov
cmp
std
add
inc
xchg
cwtl
mov
xor
sbb
mov
in
push
adc
inc
mov
leave
dec
stos
and
cmp
fldt
daa
dec
dec
int
cwtl
insl
jecxz
stos
loop
jae
xchg
xchg
aad
or
xchg
outsb
ret
pop
js
sbb
mov
fstl
push
jne
mov
dec
cmp
add
mov
gs
fmull
jmp
lea
ret
cmp
push
mov
add
in
xchg
push
add
xor
pop
inc
loopne
aad
mov
lahf
data16
mov
xor
out
jns
ja
cmp
sahf
scas
pushf
pop
fdivrp
testb
loop
mov
movsl
div
out
shr
push
push
add
fstpt
aas
rcll
call
in
insb
push
test
mov
out
and
xor
inc
mov
jle
lea
or
mov
test
scas
in
rcll
lods
subb
dec
add
insb
xchg
xor
fucomp
cmp
hlt
test
cmc
stos
mov
in
movsb
outsb
adc
jge
pop
sbb
into
adc
lcall
jns
popa
cmc
pop
test
add
sbbb
mov
xchg
or
imul
push
xchg
scas
test
add
jbe
fsub
stos
add
rcr
sbb
sub
in
rcll
fwait
add
cmp
cmp
pop
shl
mov
fcomps
inc
aaa
pop
mov
in
aam
push
mov
xor
xchg
cwtl
pop
adc
xorb
test
loopne
add
inc
gs
aaa
sbb
jo
sahf
das
dec
psrld
imul
xchg
push
div
cmp
pop
out
lret
inc
sbb
mov
out
sti
int
and
popf
std
push
xorb
test
pop
push
cs
adc
out
int
xlat
stc
dec
or
outsb
movsl
pop
popa
or
cmp
mov
xor
mov
shrb
or
icebp
add
clc
cli
jne
stc
pop
mov
rcr
pop
jb
movsl
das
sub
xchg
cmp
xchg
lea
imull
loope
mov
adc
call
cwtl
sbb
mov
les
ljmp
mov
fcomp
jo
pop
add
sub
pushf
mov
inc
cmp
sbb
data16
neg
push
hlt
dec
loope
es
imul
jle
rclb
and
fs
addr16
jo
ljmp
into
jae
frstor
aad
jg
mov
ss
jae
cmp
mov
mov
js
lret
jbe
dec
mov
fsubl
es
fistpll
adc
add
and
sbb
mov
sbbl
dec
testl
push
sbb
or
dec
lds
or
aas
aaa
sub
aaa
insb
inc
add
xor
mov
add
pop
outsl
push
cmpsb
jno
dec
pop
or
pop
pop
adc
dec
inc
lret
imul
insb
std
mov
bound
test
and
add
shlb
sbb
xor
rorb
faddl
jmp
inc
xor
ret
push
add
test
push
fldenv
mov
ja
dec
aas
insb
push
xor
cmpl
stos
pop
mov
cmp
into
jp
push
test
fistpl
push
sub
or
iret
sub
dec
out
leave
pop
inc
dec
push
sbbl
or
add
and
and
sbb
sbb
adc
ja
dec
mov
loopne
pop
ljmp
jecxz
fwait
sbb
and
mov
push
push
ljmp
inc
and
pop
dec
jbe
ljmp
mov
cmp
jge
adc
jne
lods
mov
add
cmpsb
jmp
daa
push
push
rorl
inc
fwait
in
and
shll
arpl
adc
and
adc
out
inc
ret
mov
mov
addr16
fldlg2
aas
sbb
push
cmp
xlat
sarl
pop
and
ss
push
mov
jge
dec
fisttpl
sahf
or
sub
into
lcall
add
outsb
pop
in
xor
je
stos
mov
repz
or
jl
in
add
js
je
add
loope
pusha
mov
jnp
insb
push
fisttpll
push
and
mov
pop
pop
inc
loope
out
xlat
daa
xor
lock
divb
mov
jns
leave
inc
call
adc
popf
ljmp
and
scas
out
inc
testl
lock
icebp
mov
out
xchg
sbb
loopne
sub
mov
loopne
outsb
add
daa
sbb
mov
mov
mov
rcrl
push
adc
roll
int3
in
jp
push
shll
xor
je
pusha
in
jb
pop
mov
enter
mov
imul
stc
divb
xorl
push
jae
mov
mov
scas
test
pop
xor
nop
pusha
data16
mov
inc
mov
jnp
fldenv
dec
out
les
in
test
rcl
lea
push
loopne
movsl
cwtl
lahf
mov
fistps
push
sub
in
loop
xchg
mov
mov
loopne
fldenv
or
pop
cld
lods
nop
out
addb
and
in
in
pop
arpl
aas
inc
or
dec
cmp
shrb
hlt
xor
adc
vpcmpgtw
lock
mov
testb
inc
and
iret
lock
add
mov
mov
jae
and
lahf
sbb
pop
push
andl
xor
jae
stc
pop
sbb
adc
pop
add
data16
in
ret
sub
aas
outsb
jl
pop
sbb
adc
pop
data16
sbb
mov
adc
inc
xor
jnp
inc
jnp
movsl
mov
stos
std
cmp
sti
xor
not
push
mov
xchg
cmp
push
enter
pop
push
call
push
das
cmp
aad
inc
mov
push
sbb
push
pop
mov
fs
out
mov
cmc
dec
mov
jmp
push
dec
mov
scas
fcompl
ss
jge
mov
push
cmpsb
jno
sti
scas
nop
mov
popf
fdivr
fcoms
test
out
ja
repz
jae
mov
xor
pop
aad
test
mov
adc
mov
fidivrl
xor
cld
or
xchg
out
jmp
repnz
adc
insl
pop
lcall
faddp
daa
jne
xchg
xor
xchg
pop
push
fdivl
inc
sub
loop
fwait
sbb
arpl
repnz
int3
adc
ljmp
stos
cmp
xor
decl
movsl
fistl
ljmp
notl
jmp
xchg
pusha
adc
push
daa
push
sar
ljmp
mov
add
inc
popf
pop
push
pop
and
fisubl
jnp
lahf
add
jb
imul
cwtl
cmpsb
lods
mov
cltd
mov
dec
xchg
stos
stc
jae
mov
jbe
repnz
rcl
mov
stos
sahf
sti
sahf
pop
mov
mov
and
shr
aad
fstl
mov
or
ret
daa
mov
sar
cltd
add
xor
les
push
notb
lds
call
mov
std
jmp
cs
roll
mov
fwait
ret
lcall
inc
inc
xor
ljmp
or
sahf
repz
jl
push
ja
in
or
dec
pop
jle
test
lods
jmp
ds
insb
ret
jnp
mov
sar
mov
jge
scas
stos
inc
ss
or
loopne
cwtl
jne
cwtl
test
inc
or
push
loop
fwait
imul
mov
jno
das
jge
mov
dec
out
stos
andl
add
call
mov
fwait
sarb
xchg
enter
xor
inc
add
cmp
jle
dec
in
or
jb
cs
adc
push
jb
sub
icebp
leave
mov
or
jnp
push
jne,pt
pop
stc
hlt
stos
decl
fcmovbe
int3
dec
cwtl
cltd
pop
jae
mov
aad
inc
lds
sbb
out
divl
std
stos
push
inc
insl
ja
repz
xchg
mov
enter
push
aad
pop
vpaddsb
adc
and
or
adc
push
and
stc
outsl
sub
cmp
movsl
xchg
pop
movsb
pop
sub
fstpt
cwtl
lea
ljmp
xchg
dec
lret
mov
fcomi
mov
inc
inc
pop
mov
jmp
out
rorl
out
aas
pop
xor
pop
pop
xor
add
in
jns
fnstsw
mov
mov
cmp
scas
sub
clc
jge
jecxz
mov
shrb
pop
pop
jnp
arpl
add
mov
jmp
jl
daa
fmul
outsl
sahf
jmp
jbe
fistpll
das
push
push
ret
pop
inc
dec
cmpsb
mov
gs
or
je
out
jae
lods
pop
lcall
dec
ljmp
arpl
test
aam
jmp
pop
sbb
and
sub
or
rcl
pop
pop
xor
nop
test
pop
subb
cmp
inc
xchg
daa
xchg
mov
dec
add
push
out
movl
and
lock
lods
and
jae
mov
in
sbb
push
pusha
nop
out
push
pop
repnz
js
sub
push
sub
sub
cmc
add
jmp
lods
ret
imul
into
iret
jae
pop
shlb
sbb
loope
pop
push
jmp
cli
stos
popa
mov
push
inc
sbb
pop
iret
mov
xchg
mov
cs
pop
mov
test
jbe
mov
fistpll
nop
icebp
cmpsb
pop
fdivrp
sarb
popf
test
add
fsub
jp
push
daa
cmp
dec
mulb
cmp
mov
stos
mov
bnd
popa
sub
or
mov
inc
mov
rorl
fs
sbb
xor
xchg
fldcw
adc
outsl
ds
sarb
fsub
outsl
stc
das
pusha
iret
dec
or
inc
rol
push
xchg
stos
add
out
jb
test
test
sub
call
jmp
pop
fwait
bound
scas
cmp
sti
dec
add
shrl
sbb
mov
dec
lret
aas
jge
pushf
icebp
adc
out
les
into
rcll
lret
xchg
outsb
mov
cmpsb
sbb
repz
xor
cmp
mov
xchg
mov
pop
mov
xchg
or
ficoml
mov
lods
xchg
push
fdiv
iret
sbb
imul
pop
into
xchg
pop
mov
mov
mov
movsb
cmp
arpl
jecxz
inc
cmovne
sbb
repnz
loopne
xchg
mov
jo
mov
lret
xor
sbb
imul
push
outsb
shrb
lret
and
lods
idivl
jecxz
mov
xor
roll
and
gs
jg
pop
loopne
push
sbb
fcoms
setg
xchg
rorb
pusha
adc
pusha
jns
das
das
shll
mov
pop
or
mov
insb
fiadds
insl
fidivs
fwait
pop
lods
mov
test
cmpsl
cmc
xchg
pop
inc
mov
outsb
sbb
add
gs
cmp
cmp
xchg
negl
push
lahf
fildll
dec
jge
dec
push
xchg
xor
mov
push
push
out
sub
neg
lock
ljmp
jno
ja
mov
dec
jmp
or
mov
adc
cmp
mov
rcrl
movsb
fprem1
add
add
mov
lods
imul
fs
lods
add
dec
xchg
mov
add
je
cmpsb
stos
popf
loop
popf
lods
iret
push
mov
jbe
frstor
test
pop
lahf
sbb
adc
imul
ljmp
into
mov
gs
addr16
cmp
sarb
add
add
nop
popa
leave
jle
rorb
sbb
test
cmp
popa
push
and
shlb
cmp
shrb
mov
xchg
orb
imul
repz
mov
push
test
pusha
cmc
cli
sbb
movsb
jo
flds
loope
jnp
enter
fisubl
imul
aam
mov
sbb
loopne
scas
cmp
outsl
inc
lcall
push
ret
or
jno
in
ret
and
sub
and
dec
adc
ret
stos
outsl
and
xor
mov
mov
and
fs
pop
adc
or
lods
pop
insl
xor
push
xchg
cld
daa
pop
insl
push
and
or
std
pusha
dec
jo
or
loop
sbb
les
push
dec
cmp
mov
sub
adc
xor
leave
or
lret
into
pop
add
push
cwtl
xor
cwtl
out
enter
pop
movsb
mov
inc
testl
sub
scas
inc
pop
jmp
ss
or
jo
popa
fmull
sbb
mov
xchg
xor
jmp
test
loopne
pop
das
mov
dec
inc
add
orb
fs
inc
pop
repnz
dec
outsb
fistl
mov
call
and
push
mov
fstpl
cmc
inc
cmpsb
insl
dec
ss
mov
inc
out
sub
movsl
dec
inc
sbb
dec
or
cld
shll
pop
or
cmp
std
mov
roll
cwtl
scas
add
mov
mov
xor
dec
gs
cmp
rorl
adc
fwait
push
cmp
adc
xchg
pop
adc
orl
mov
in
push
cmp
popa
popa
aas
push
ret
lea
mov
call
fists
ds
cmp
rorl
and
mov
ret
mov
into
movsl
lock
mov
js
imul
add
xor
aas
inc
call
xor
outsl
jo
aam
jns
loopne
ss
fwait
fwait
sub
in
jns
push
es
repz
rolb
inc
je
jmp
adc
cvtdq2ps
jae
push
pop
and
stc
mov
sahf
out
je
or
jno
imul
repz
clc
loop
mov
cmp
fisubrs
adc
outsl
lahf
sbb
jo
pushf
cmp
movsl
adc
or
adc
cmp
mov
clc
dec
jl
fldl
ficomps
out
mov
push
mov
mov
pop
xchg
fwait
jns
sti
sarl
adcb
aad
xlat
adc
sub
outsl
ret
ja
and
push
jb
adc
xchg
fwait
ss
bound
and
divb
out
in
and
or
pop
scas
mov
jne
in
lea
add
push
sbbb
cmpsl
mov
add
cmp
lea
dec
jnp
and
xor
xor
xchg
xchg
mov
jno
fwait
lret
lret
rclb
sbb
cmc
pop
out
loopne
loop
fisttps
adc
rcl
pop
lea
cmp
pop
xor
mov
out
stos
and
ret
ja
ret
clc
aad
mov
or
arpl
in
or
mov
mov
rol
sub
pushf
cmpsl
sti
jo
shl
popf
mov
inc
clc
outsl
jnp
mov
push
popf
mov
or
data16
fstp
sub
pop
mov
call
subb
pop
les
dec
in
js
inc
fucomp
cltd
mov
pop
add
ret
fiadds
pushf
cwtl
in
call
daa
in
int
loop
ja
adc
xor
jmp
mull
shr
xchg
sbb
iret
fiadds
fisubrs
ss
ja
test
and
js
xor
popf
outsb
cmp
mov
mov
cli
push
sti
sub
inc
dec
dec
push
pop
adc
mov
xchg
dec
in
clc
movsl
ret
fwait
pop
pop
out
into
aaa
hlt
sub
xor
lahf
pop
or
mov
hlt
push
inc
scas
mov
push
lahf
inc
push
cwtl
sbb
sbb
hlt
jg
out
inc
std
xorb
sbb
jae
stos
outsl
in
popa
scas
rcrl
mov
xchg
xchg
jnp
adc
rcr
popa
je
lock
aam
add
mov
stos
das
mov
out
cld
inc
add
shl
icebp
cmpsl
fildl
ret
dec
lock
adc
sbb
xchg
inc
mov
jmp
mov
jecxz
dec
std
addr16
mov
shll
add
and
sbb
xor
popa
loope
imul
insl
mov
mov
pop
pop
lret
pop
pop
mov
push
leave
pusha
dec
sbb
sbb
test
xor
jb
bound
std
sbb
shrl
sbb
fwait
in
sahf
inc
inc
dec
imul
test
movsb
pop
xchg
int
mov
out
pop
mov
loope
pop
fadd
and
xchg
jecxz
popa
out
das
fistpll
hlt
shrl
xchg
sub
cmpb
sti
stc
adc
or
xor
adc
jae
shll
mov
iret
xchg
xlat
fmull
incl
movsl
sahf
dec
nop
loope
adc
lahf
aam
lcall
mov
scas
cmpsb
and
xor
in
pop
xor
mull
jl
jg
mov
es
cmpsb
addr16
rep
lcall
js
push
ret
jp
xlat
dec
daa
fcomps
dec
mov
into
mov
push
xchg
sahf
pop
or
ja
mov
xor
jae
xor
xchg
scas
jb
mov
sub
mov
xor
lods
adc
rorb
pop
rclb
aaa
inc
sbb
mov
sbb
mov
jmp
ss
cltd
cmp
xchg
mov
stc
xlat
xchg
fwait
inc
loopne
sbb
sub
out
sbb
test
jmp
fnsave
arpl
cmpl
or
jmp
mov
xchg
es
sahf
cmc
mov
fbld
ja
mov
sahf
mov
adc
popf
pop
dec
inc
clc
mov
mov
mov
mov
imul
mov
out
in
popa
mov
rol
or
imul
sub
cld
rcr
out
add
mov
jnp
pop
push
add
and
sbb
loope
add
sbb
mov
and
imul
mov
aaa
loope
jmp
test
int3
jle
mov
sub
pop
mov
in
popf
daa
movsb
rol
or
inc
fst
and
jns
mov
push
push
and
inc
sub
adc
jecxz
push
ja
imul
mov
cmp
jb
lret
cmpsb
cmp
fsubl
ret
jb
and
mov
popf
das
ja
mov
aaa
dec
inc
dec
cmp
cmp
xor
cmp
insl
pop
cmp
adc
cmp
or
add
jo
add
mov
and
es
sbb
pusha
sbb
pop
in
fidivl
cmp
stc
sub
sar
shll
scas
fmuls
jbe
daa
nop
pop
shl
mov
push
mov
loope
scas
cmp
fildl
lahf
in
fs
daa
xchg
stos
loopne
call
daa
sub
divl
pop
out
outsb
outsb
adc
rcrl
xchg
stos
mov
aam
lods
je
clc
and
cmp
adc
cmp
enter
insb
call
xchg
dec
sbb
cli
add
fwait
jl
mov
pop
and
push
aad
inc
scas
insb
dec
aas
sarl
rorl
sar
fisubrl
push
test
cmp
addr16
aaa
inc
ja
clc
out
jae
cmpsl
dec
fsubrs
push
inc
adc
dec
enter
and
pushl
xlat
divb
pop
mov
dec
in
enter
mov
dec
hlt
mov
sub
xchg
inc
test
dec
inc
xor
pop
outsl
xor
mov
and
cmpsb
pop
hlt
lock
jmp
scas
pushf
aam
js
inc
cli
push
out
nop
jo
out
test
test
pop
jbe
xlat
mov
rcr
xchg
icebp
imul
jnp
sub
cwtl
call
dec
ret
jne
pause
lods
mov
push
pop
popf
sbb
cmp
pop
cmp
pop
pop
subb
sub
addr16
pop
add
lcall
push
arpl
icebp
cs
mov
arpl
inc
mov
sarb
xor
push
dec
dec
mov
lea
cmp
bound
inc
int
pop
test
or
dec
daa
jecxz
cmp
cltd
out
les
fcompl
mov
dec
inc
mov
lock
pop
mov
dec
repnz
sbb
pusha
and
cltd
cld
push
icebp
rorl
xchg
xor
shrl
inc
daa
outsl
mov
jne
jp
cmp
outsl
xor
data16
call
or
imul
sbb
mov
xlat
insl
sbb
mov
fbstp
scas
push
sbb
sbb
push
lds
jbe
mov
xchg
iret
ja
xchg
push
sbb
pop
subb
shll
xor
fsubrl
mull
int
test
fisttps
or
cmp
pop
outsl
xchg
out
sub
aam
loopne
mov
dec
lcall
mov
sbb
pop
cmp
mul
and
test
jno
cld
out
dec
dec
iret
pop
ss
inc
fisubl
jmp
push
insb
pop
push
cltd
adc
leave
jne
fxch
and
jne
mov
sarl
inc
lock
mov
inc
adc
inc
cltd
movsl
push
sbb
xchg
push
shl
push
mov
fstpt
jg
das
mov
fwait
in
scas
sbb
leave
jno
jbe
movsl
nop
cmp
dec
movsl
mov
cmpb
ret
iret
mov
fisubrs
push
mov
lcall
dec
stc
iret
jge
mov
and
fistl
lahf
dec
or
scas
push
and
push
mov
sub
std
pop
adc
jbe
rol
xchg
leave
xor
clc
push
pusha
fwait
lahf
mov
mov
bswap
pop
iret
add
cld
fidivrl
popa
sti
fwait
push
and
pop
dec
sbb
dec
pop
leave
add
adc
aaa
imul
jg
test
in
nop
xchg
pop
jmp
mov
sbb
sub
ret
and
pop
xchg
sbb
fwait
mov
sbb
jae
sub
push
xchg
repz
pop
lds
movb
pop
sti
sbb
scas
bound
fidivl
pop
arpl
sbb
mov
outsl
ret
loop
push
push
dec
ja
sub
sahf
pop
mov
cmp
pop
or
aad
xchg
orl
sbb
push
cmp
dec
xchg
lods
inc
dec
inc
mov
es
movd
popf
dec
inc
pop
sub
test
in
sbb
ds
jo
mov
xchg
insl
les
dec
stos
jecxz
push
subl
sub
dec
jecxz
icebp
xchg
data16
fidivrl
inc
xchg
mov
icebp
and
dec
jle
enter
iret
test
and
mov
loope
leave
sub
and
mov
out
addb
lock
inc
xchg
lock
jmp
test
push
jge
inc
jmp
and
sbb
pusha
adc
fnsave
repz
ret
ja
aas
popa
sub
ljmp
pop
int
or
mov
movsb
add
ret
int
aas
push
mov
add
mov
push
lea
sbb
sarb
mov
push
xorl
or
sti
cmp
mov
adc
std
fsubl
inc
pop
or
mov
push
mov
out
jno
dec
mov
test
cmpb
xor
and
in
cmpsl
fildll
jns
push
jae
add
enter
mov
imull
push
lods
xchg
imul
xchg
dec
int3
add
pop
mov
icebp
push
dec
and
ss
xor
retw
mov
inc
adcb
inc
outsb
xchg
jecxz
push
js
lods
imul
fs
je
jp
mov
and
push
push
adc
aaa
repnz
inc
xchg
shlb
movsb
aad
or
stc
out
pushf
sbb
pop
mov
lcall
repz
push
pcmpeqb
lea
es
leave
add
and
fiaddl
sub
fcmovb
mov
inc
sbb
sbb
daa
out
jecxz
daa
insb
pusha
add
addr16
dec
test
aas
test
dec
xlat
mov
mov
and
jge
cld
xchg
push
lea
inc
cwtd
popf
cmp
cmp
mov
movsl
jae
sti
rorl
lahf
push
lock
dec
pop
nop
xchg
nop
dec
push
push
jg
ss
mov
iret
out
xlat
xlat
jnp
shll
ljmp
dec
push
cmp
cltd
push
adc
lcall
mov
test
mov
jmp
jecxz
mov
mov
jb
sbb
mov
mov
ret
adc
xor
into
jo
ds
mov
push
jae
adc
jbe
cwtl
fnstenv
xchg
pop
or
xchg
stc
je
mov
sub
push
cwtl
repz
pop
push
enter
adc
inc
lods
lods
aas
or
jno
fcompl
pop
pop
inc
test
jp
or
sarl
enter
in
and
jecxz
in
fsub
push
test
dec
push
or
sbb
loope
cmpsb
adc
sub
push
gs
mov
inc
lods
lret
mov
out
je
cli
push
out
push
cmc
xor
scas
or
mov
popf
inc
mov
xchg
pop
push
lds
mov
and
cld
push
lods
enter
mov
mov
mov
dec
and
cmp
into
pop
cmc
sahf
adc
insl
and
mov
cli
out
ret
call
jecxz
and
sbb
adc
repz
pop
sbb
in
shrl
aad
sbb
pop
mov
jecxz
push
out
popa
sub
xor
xlat
aaa
lds
mov
data16
jns
out
mov
mov
jmp
cs
mov
test
enter
imul
inc
daa
in
rdtsc
leave
outsb
fwait
xchg
popa
dec
loope
vmread
push
je
rol
ret
mov
fstps
add
in
imul
dec
arpl
fdivrs
push
mov
mov
test
inc
or
aam
xchg
roll
lods
aas
lcall
jmp
inc
scas
fadds
xchg
sub
sub
shlb
mov
adc
int3
add
jmp
and
inc
fwait
mov
pop
ret
pushf
dec
push
sub
mov
xchg
inc
insl
cmp
loop
pop
out
stos
xor
mov
add
xor
dec
loope
xor
push
pop
jp
je
push
rorl
and
scas
and
dec
sub
popf
inc
push
js
imul
fdiv
inc
std
mov
leave
out
mov
push
cmp
js
mov
das
jmp
or
dec
xor
enter
jno
divb
gs
dec
lret
jno
inc
aad
or
mov
mov
ds
pop
das
mov
inc
or
outsl
mov
jnp
xchg
push
inc
pop
test
jl
je
rol
push
pushf
std
jge
enter
sub
xchg
fisubs
jbe
mov
addl
inc
cmp
or
mov
es
inc
call
pushf
aam
lret
xor
dec
pop
lcall
stos
and
push
ljmp
add
add
mov
mov
xor
mov
jae
sahf
cmp
push
scas
out
movsb
pop
or
mov
sarl
cli
and
cmp
cltd
and
jb
pop
mov
jecxz
stc
sbb
dec
loope
sbb
adc
movsb
icebp
shlb
je
mov
pop
scas
and
insb
imul
lods
out
mov
jnp
and
fstl
repnz
dec
out
xchg
js
ss
push
icebp
inc
out
ror
cmpsl
lock
hlt
pop
adc
xchg
add
ret
mov
mov
ljmp
aam
std
nop
in
cmp
xor
bound
pushf
cmp
xor
jo
sub
mov
push
dec
insb
shlb
push
lret
add
sbb
pop
inc
gs
je
adc
push
mov
adcl
roll
cs
insl
sbb
int3
andl
sub
mov
pushf
leave
fnstsw
lods
fstps
fcomps
lds
ret
and
mov
xor
dec
iret
dec
out
sti
sub
jbe
adc
js
dec
repz
xchg
add
test
mov
sbb
js
test
bound
dec
lea
add
dec
std
mov
fildll
sbb
adc
sub
lret
icebp
and
pop
out
inc
xlat
adc
jne
sub
divb
jno
add
adc
or
sub
pusha
mov
jmp
dec
mov
jb
dec
cmp
jne
sbb
push
lret
push
int3
push
fwait
sbb
popl
gs
loop
outsl
pop
rorb
adc
dec
cld
mov
das
xor
loop
scas
add
push
lock
lahf
xchg
outsb
mov
mov
fcmovu
fcoml
hlt
and
mov
pushf
leave
inc
mov
movsl
sbb
jg
pop
dec
ss
fisubrs
jg
repnz
mov
xorl
jnp
inc
or
rcl
nop
mov
jb
or
mov
rcl
push
xor
stos
out
or
popa
inc
and
and
inc
cld
jmp
mov
mov
test
push
cvtpi2ps
mov
pop
loope
test
rcrb
out
mov
mov
jae
shrb
push
pop
enter
mov
jecxz
aam
cltd
or
ficoml
inc
je
sarb
cmp
push
aam
std
in
dec
xor
sub
clc
add
mov
mov
push
jle
in
push
fstl
js
jns
cmc
out
xor
xchg
call
stc
rcr
jge
orb
mov
mov
adc
add
loop
adc
cmpsl
jno
push
push
or
inc
dec
xchg
in
loop
jp
jno
pop
fisttpll
pop
nop
pop
mov
push
cltd
xor
xlat
sbb
ret
addr16
fstps
pusha
dec
jne
mov
xchg
imul
mov
test
jp
pop
js
jno
test
xor
test
jle
aaa
lods
fisttpl
dec
repz
loop
jno
jle
and
clc
movsl
adc
shll
out
sbb
leave
ret
mov
cmp
add
sbbb
adc
inc
pop
lcall
ja
in
sbb
push
xchg
scas
jno
loopne
jnp
andb
jp
ss
repnz
and
mov
js
int
xchg
or
cmc
adc
sub
js
pusha
mov
stc
dec
adc
mov
fs
and
and
ficoml
mov
push
adc
rcr
call
add
mov
ret
loopne
pop
in
jae
fcomps
xchg
lea
push
mov
adc
xor
jno
xchg
cmp
sbb
cmp
push
pop
iret
dec
inc
inc
mov
imul
xor
or
stos
push
xchg
mov
cmpsl
sub
mov
adc
pop
adc
mov
jae
test
mov
add
fidivs
cmp
inc
ds
nop
sbb
loopne
xor
add
sub
xchg
pop
add
in
pusha
add
push
inc
add
inc
adc
dec
pop
mov
orb
lret
jmp
push
divl
xchg
fs
rcrb
fdivp
int3
jno
lcall
mov
insb
mov
aaa
es
jp
lahf
xchg
xchg
push
arpl
lods
sbb
push
xchg
loopne
inc
in
into
mov
dec
jmp
aas
inc
sub
mov
or
ret
sti
js
and
sahf
clc
jmp
and
push
inc
mov
and
pop
in
icebp
les
lahf
adc
nop
push
jle
sub
cwtl
jns
cwtl
rorl
inc
ficoml
xlat
call
in
push
stos
mov
orl
inc
push
in
sub
stos
sti
subl
push
data16
loope
inc
pop
or
push
xor
ljmp
push
fbstp
js
pushw
arpl
or
fcmovnbe
mov
push
bound
sbb
enter
test
insb
sbb
push
xchg
pop
sahf
shlb
fidivl
jo
sbb
hlt
movb
inc
imul
movl
outsb
add
out
mov
hlt
ja
hlt
pop
loopne
mov
out
cmpsb
dec
push
sti
and
into
and
inc
fistl
les
pop
adc
sbb
or
add
or
adc
dec
pop
sbb
imul
jmp
jns
and
jmp
lahf
pop
pop
or
jns
loopne
cs
jbe
ds
mov
shrl
dec
jmp
pop
bound
sbb
pop
add
sarb
sub
lcall
icebp
imul
hlt
xchg
fcomps
cmpsb
cld
test
inc
int
xlat
mov
ret
aam
pop
testb
nop
dec
mov
mov
rcrl
mov
outsl
jns
into
insl
imul
adc
shl
push
jge
das
xchg
mov
fidivs
pop
call
arpl
push
sbbl
and
repz
fs
insb
mov
or
or
sub
ficompl
sub
adc
pop
mov
mov
and
sbb
rcll
jg
xor
jo
mov
aad
dec
cbtw
stos
jo
dec
xchg
xor
loope
xchg
add
scas
push
addl
loope
lret
test
insl
ds
push
xchg
subb
and
or
push
ficoms
xor
aaa
inc
and
cli
enter
mov
pop
xor
cwtl
mov
sbb
sbb
out
inc
xor
pop
int3
fdivs
aas
mov
or
pop
xchg
ret
pop
push
pop
inc
fisubl
outsb
push
add
add
cmpsb
or
sub
jl
mov
mov
jmp
pop
cwtl
cmp
or
sbb
arpl
ss
dec
aam
and
insb
gs
xchg
or
imul
jnp
cmp
stos
push
cmp
mov
and
jg
or
xlat
adc
mov
pop
cs
lret
cltd
fdivl
push
xchg
xchg
insb
push
je
lods
bound
ds
repz
cld
mov
adc
popf
imull
push
pop
inc
adc
mov
sbb
rol
sahf
sub
inc
push
sub
into
and
xor
daa
bound
popf
pop
cmp
xchg
je
pop
ds
xor
cmpsl
fisubl
jbe
mov
jle
mov
cltd
pop
add
xor
or
daa
test
ss
pop
jge
arpl
frstor
xor
xchg
xlat
push
outsl
inc
into
inc
leave
push
int
and
adc
cs
stos
sarl
add
pop
xchg
mov
movsl
mov
ja
cmp
add
loope
mov
mov
add
leave
pop
pop
mov
or
hlt
je
in
xor
out
ffreep
jle
ficoml
ljmp
in
pop
ss
aad
jecxz
push
in
bound
leave
cltd
test
jbe
stc
dec
pop
xor
jge
adc
into
mov
test
fs
fdivl
cmc
jg
mov
cmpsb
fildll
mov
movsb
jno
inc
and
push
lea
mov
fnstsw
push
inc
lahf
inc
dec
lods
notb
hlt
sar
adc
in
xor
pusha
nop
inc
xchg
sub
icebp
mov
adc
stos
lods
jmp
push
scas
jl
test
std
cmpsb
pop
sub
pop
mov
movl
xchg
pop
adc
jg
xchg
fmull
lret
and
push
push
sub
mov
and
jne
and
inc
dec
inc
in
xchg
aad
int3
stc
daa
stc
jle
or
push
mov
or
adc
xchg
and
mov
dec
push
or
div
mov
xor
orl
lret
adc
addr16
mov
mov
div
sub
and
cltd
push
cmp
ja
out
xchg
cmpb
adc
mov
xorb
sub
hlt
fwait
cmp
sub
mov
xor
fsubrl
shlb
movsb
shr
fldcw
mov
enter
loopw
dec
mov
pop
pop
int
sub
sbb
shrb
cmp
out
js
hlt
inc
sub
cltd
lahf
mov
xchg
or
fcom
lock
loope
xor
mov
cmc
fcoml
or
mov
sbb
stos
mov
loopne
mov
lcall
xchg
rcl
pop
stos
sbb
out
das
lret
cld
pop
jo
repnz
ret
sahf
pushl
push
cmpsb
sbb
icebp
das
dec
imul
or
je
das
loope
dec
or
mov
testl
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
incl
jb
or
lcall
xchg
mov
ja
push
sahf
testb
or
sahf
testb
or
sahf
testb
or
data16
or
es
cli
jle
pop
out
cmp
repnz
arpl
add
pop
mov
int
into
jb
cltd
loope
cld
inc
and
popf
push
sahf
testb
cmc
sbb
stos
or
mov
jo
add
scas
loopne
fmuls
adc
inc
adc
sbb
out
cmp
fldenv
or
mov
add
or
rclb
dec
scas
pop
orl
mov
xchg
adc
and
sbb
push
sahf
testb
or
sahf
sbb
popf
dec
sub
push
jle
xchg
dec
and
push
lcall
xchg
mov
ja
inc
sahf
testb
dec
mov
push
sahf
testb
or
fwait
testb
or
lcall
xchg
or
mov
test
dec
sub
push
sahf
testb
or
sahf
testb
mov
push
scas
std
test
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
jns
psubsw
testb
or
sahf
testb
aas
fnstsw
popf
push
sahf
testb
and
add
xor
dec
sub
add
dec
sub
push
sahf
testb
in
mov
push
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
testb
or
sahf
test
fmuls
xchg
or
cmp
hlt
adc
data16
pop
fs
jne
sub
add
cmp
mov
pop
xor
mov
push
mov
andl
arpl
xor
or
xor
loopne
insl
addb
dec
dec
ret
jnp
pop
repnz
movq
adcl
in
push
imul
cmpsl
roll
and
xlat
out
pop
add
push
push
mov
pusha
lods
pop
or
insl
test
mov
sub
shll
adc
mov
scas
adc
sbb
inc
mov
adc
and
scas
cmp
mov
fwait
xlat
lock
lock
xor
cltd
xchg
nop
iret
xor
sbb
imul
add
es
pop
loopne
pop
aaa
test
pop
xor
sbb
outsl
out
scas
dec
cmpsl
mov
pusha
clc
mov
aad
fsubrl
mov
mov
pminub
jl
sbb
jns
dec
das
sti
jno
in
outsb
and
addr16
mov
scas
and
inc
call
test
popf
das
rcrl
pop
insl
pop
xchg
lret
jg
in
push
fcmovnb
test
cmp
cmp
fwait
fs
fs
cmp
or
add
pop
add
je
dec
lock
int3
test
insb
mov
cmp
dec
out
dec
arpl
or
enter
aas
jne
gs
jo
xor
aad
rolb
push
push
and
cli
push
loop
sarb
lds
outsl
das
cmpsl
int3
mov
inc
fnstcw
xchg
enter
xor
jmp
mov
mov
gs
mov
icebp
loopne
pop
fidivrl
fbstp
stos
or
adc
fadds
ss
lea
sbb
leave
add
mov
jmp
xchg
mov
fsubrs
cmp
popa
sub
pop
dec
imul
lods
cli
lahf
mov
pop
hlt
rol
aad
pop
inc
pop
mov
xchg
cmpsl
mov
sub
xchg
lret
jnp
cmc
insl
dec
and
mov
lods
pop
add
push
mov
lcall
jnp
adc
lret
lods
mov
ficomps
shrb
inc
pushf
lret
dec
xchg
pop
xchg
addr16
dec
in
mov
mov
shrl
cmpl
and
xor
add
inc
aas
fnstcw
sbb
push
adc
inc
jns
dec
sahf
cmp
xor
and
and
inc
fdivl
pop
xor
jmp
adc
test
push
sarb
mov
push
mov
sbb
mov
lret
sub
xchg
popa
or
cli
and
arpl
mov
cmpl
imul
jp
scas
fmuls
cmpsl
imul
pop
sub
dec
inc
or
jge
adc
push
aad
jp
pop
or
leave
sbbb
pop
mov
xchg
data16
xchg
cmc
push
loope
adc
adc
sub
popa
inc
rol
cltd
inc
push
call
fwait
sbb
pop
adc
and
cmp
jnp
inc
inc
dec
nop
inc
daa
sub
mov
mov
lock
adc
xchg
pop
inc
xchg
add
xchg
inc
mov
and
add
xor
sbb
or
sub
mov
pop
lret
mov
out
xlat
call
pop
roll
xchg
lds
aam
pop
adc
mov
loopne
hlt
pop
jg
jecxz
sbb
int
jmp
or
imul
das
je
or
mov
je
das
ljmp
add
imul
adc
sub
das
sbb
and
and
cmp
dec
test
push
aas
test
leave
adc
nop
pushf
neg
repnz
pop
mov
push
cmpsb
push
fisubrl
in
pop
pop
jecxz
mov
jae
pusha
repnz
pushf
jae
sbb
xchg
mov
xchg
or
int3
sti
fmull
pop
inc
inc
lock
cmp
cmp
add
fistl
lds
or
add
pop
adc
inc
bound
dec
and
out
adc
xchg
in
mov
xchg
dec
sbb
dec
fistpl
lds
sub
jle
xchg
aas
jbe
lds
cmc
mov
jmp
test
mov
enter
jge
jnp
mov
xor
mov
push
push
test
pop
pop
shlb
popf
add
and
inc
xchg
mov
daa
or
sbb
pop
lea
xchg
and
fwait
add
jbe
xchg
push
jbe
add
dec
jl
fistl
adc
and
jmp
insl
xor
test
mov
inc
gs
mov
test
out
sbb
jae
int
jge
xchg
cld
jge
jp
cmpsl
mov
push
mov
jle
mov
dec
scas
mov
xchg
add
jo
sub
jno
nop
xor
push
cmc
out
adc
insl
mov
xorb
xchg
cmp
mov
sbb
sbbb
mov
aaa
jmp
push
fsubrl
fdivrl
bnd
aaa
and
mov
sbb
leave
jae
aad
cmpsl
repnz
data16
and
push
sti
add
pop
mov
dec
inc
cmp
cmpsl
test
jg
and
std
fdivr
or
mov
insb
pop
push
ret
push
adcl
loope
imul
mov
dec
add
cmpsl
int3
fisubrl
xor
mov
mov
push
sub
jge
push
xchg
push
pop
push
push
rcr
xor
int3
jnp
aad
fbstp
out
dec
xchg
test
or
mov
or
add
cld
movsb
les
outsl
in
daa
jl
and
repnz
inc
rcr
pop
lcall
call
pop
dec
inc
in
mov
inc
jg
fsubr
push
mov
and
inc
stos
mov
jg
icebp
and
mov
xchg
adc
add
sbb
pop
jb
add
adc
inc
test
fdiv
mov
push
cmc
and
push
jne
std
xchg
das
pop
mov
aaa
jo
shll
and
mov
in
cmp
xchg
inc
dec
xchg
ret
inc
repnz
dec
push
test
sub
xchg
mov
mov
es
jbe
nop
js
imul
jae
int3
mov
dec
xor
rcr
ss
into
hlt
push
mov
aas
push
xchg
aam
add
jns
jns
push
ja
popf
rorb
mov
pop
cmp
outsl
dec
scas
mov
fcompl
mov
ret
lods
test
dec
les
push
adc
or
fcomip
fildl
mov
jne
mov
adc
roll
insl
or
mov
inc
fmuls
out
lret
cmp
mov
sbb
lods
push
pushf
jmp
lods
push
cmp
shr
and
mov
sub
pusha
push
pop
jg
lods
fisttpl
imul
dec
movsb
xchg
dec
mov
mov
pop
sbb
fists
push
pop
add
and
les
out
inc
roll
orb
cld
xchg
push
fwait
lds
or
ret
popf
inc
fdivrs
push
jne
jo
or
xchg
mov
push
adc
dec
ret
sbbl
dec
jns
inc
jmp
or
ret
lcall
lahf
and
cs
sub
das
cmc
lock
mov
dec
rclb
mov
loopne
sti
test
adc
cmpsl
cmp
movsl
cmp
xchg
mov
and
or
or
and
mov
push
cmpsl
hlt
jp
cmpw
test
adc
fs
xor
pushf
lret
mov
clc
pushf
movsb
jle
notb
cmc
mov
push
fwait
lods
mov
jmp
arpl
xor
imul
xor
mov
lret
repnz
lret
int3
cmp
pop
dec
mov
xor
push
sbb
sub
xor
das
adc
cli
pusha
stos
loope
and
sbbl
sbb
sub
jge
gs
inc
movsb
int3
mov
and
adc
ficoml
jmp
pop
adc
fldl
and
shll
shll
lret
insb
cmpb
cwtl
push
mov
scas
enter
test
sbb
lods
movsl
xchg
enter
aad
dec
das
out
out
sahf
or
and
mov
outsb
xorb
push
loopne
inc
xchg
adc
jns
dec
lods
dec
push
in
jl
int3
adc
ljmpw
loopne
mov
popa
cmp
aas
cmp
popf
sbb
bound
cmpsl
daa
cs
cld
mov
mov
mov
out
dec
and
dec
pop
adc
adc
cmpsl
loopne
nop
in
dec
sub
aam
fiaddl
jge
pop
lods
dec
add
sahf
mov
fwait
rcll
insl
mov
ficomps
sbb
xchg
inc
rclb
jae
jae
cmpsl
fdivr
mov
daa
js
add
mov
xchg
filds
xchg
and
test
cmp
sub
pop
mov
psubsb
pop
pop
sbb
xor
lea
push
pop
rol
call
mov
jb
js
add
in
sbb
add
fsubl
cmpl
push
push
mov
movsl
sbb
addb
pop
fldl
nop
mov
orl
lahf
inc
mov
test
loop
pop
mov
ds
lret
out
xor
push
dec
outsl
movsb
xchg
sub
repz
xor
or
enter
add
pop
mov
or
fcoml
push
cwtl
repz
inc
pop
popf
mov
jmp
shll
icebp
pop
fisubrs
sbb
sub
push
sub
sbb
insb
js
mov
inc
dec
ret
jmp
icebp
call
cmp
gs
push
pop
add
andl
in
lcall
ss
fimull
mov
add
fs
lock
xor
fwait
jl
cld
out
cli
shll
push
sahf
sbb
dec
inc
popf
xor
cmp
popf
loope
sub
fcmovnu
jmp
fadds
mov
mov
mov
sub
enter
xchg
mov
pop
xchg
xor
lcall
xchg
dec
xchg
and
ds
call
lock
xor
jbe
cmpsl
fsubr
jbe
inc
sub
add
std
xchg
jge
std
mov
fdivrp
aas
inc
xchg
pop
js
dec
xor
jmp
movsb
mov
xchg
cwtl
mov
fsubrs
ss
push
imul
mov
or
std
dec
jb
push
mov
rcll
mov
sub
mov
adc
ja
je
mov
sbb
sub
pop
je
lock
lock
and
dec
leave
sub
jl
and
pop
pop
or
fisttpll
movsl
mov
repz
mov
sub
mov
sbb
pop
add
mov
into
add
jns
mov
test
add
xchg
pop
pop
cmp
das
adc
sbb
lods
icebp
aaa
mov
cli
and
cmpsw
ljmp
mov
adcl
xchg
dec
xor
mov
andl
mov
jb
mov
or
repnz
add
push
mov
ss
mov
pop
cmpsl
xor
xor
loope
test
call
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
