push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
ret
aaa
xor
popa
push
jmp
inc
imul
andb
pop
ljmp
inc
stc
arpl
imul
stc
repz
into
ficoml
dec
inc
pop
cmpsb
lea
mull
mov
filds
xor
mov
inc
sahf
fadds
lcall
dec
xchg
jbe
mov
jp
shlb
pushf
sahf
mov
pusha
adcb
add
mov
mov
insb
jb
push
jb
pop
scas
push
loopne
in
loop
adc
lahf
fistpl
mov
shlb
shll
imul
pop
cli
push
xchg
xor
test
and
mov
sbb
mov
push
mov
mov
insl
pop
push
pop
fidivrs
dec
lds
inc
out
xchg
imul
mov
xchg
data16
xor
dec
jp,pt
in
scas
movsb
inc
dec
test
das
xlat
mov
cmp
xorb
imul
in
sbb
pop
shll
adc
jl
xor
jne
xor
les
jae
pushf
xchg
lds
stc
pop
push
cli
dec
push
lds
mov
divb
push
inc
repz
push
sbb
aam
cwtl
adc
pushf
dec
insb
mov
in
mov
sub
das
adc
std
das
scas
xchg
fwait
dec
inc
or
stos
movsl
lcall
cmpsl
mov
imul
or
push
shr
addr16
gs
xlat
xor
pop
in
cmp
leave
cs
pop
adc
or
movsb
clc
cmpsl
sbb
jmp
fstpt
push
push
lahf
jg
repz
mov
movsl
popa
out
lock
xchg
ds
je
cmp
add
bound
add
dec
sbb
cmp
out
jge
aaa
lcall
movsl
aad
mov
lock
adc
mov
fcmovnbe
jl
loope
and
cli
test
adc
das
cli
int3
fcmovne
in
sbb
adcl
and
or
add
sub
mov
je
dec
lret
dec
xchg
call
xor
cmpsb
call
outsb
and
repz
pop
mov
mov
dec
aas
aaa
aad
call
push
mov
cld
pop
pop
shlb
out
xchg
dec
xor
dec
xchg
js
cmp
subl
cmp
pop
pop
mov
jp
pop
pop
inc
pushf
in
movsl
inc
ljmp
sub
pop
or
cltd
outsl
jno
sarl
test
imull
stos
lods
inc
insb
sub
nop
cmp
cli
popa
imul
aas
add
addr16
push
jnp
adcb
lret
mov
lods
test
les
mov
nop
clc
mov
loopne
dec
adc
aaa
xchg
fwait
push
push
adcl
xor
or
in
sbb
xchg
fisttps
sub
jle
call
int3
fimuls
pop
xor
push
sbb
sarl
dec
stos
jmp
mov
pusha
adc
and
imul
jnp
xchg
test
or
ljmp
andb
mov
pushf
mov
xor
and
cli
pop
aad
push
scas
xchg
add
jge
out
dec
cmc
jl
cwtl
pop
data16
dec
int
scas
jns
inc
pop
cld
fsubrl
outsl
xchg
mov
aas
push
sti
subb
les
dec
pop
xor
pop
ret
call
push
ja
dec
cli
and
out
push
ljmp
ds
es
daa
or
hlt
mov
cltd
inc
adc
and
jbe
push
inc
das
mov
in
lock
cwtl
sbb
xor
movl
sub
push
imul
push
loopne
sub
jae
push
icebp
jecxz
add
jnp
lret
xor
fdivs
push
lret
mov
mov
imul
mov
cltd
xor
enter
aad
mov
push
push
dec
xchg
jbe
ret
rorb
sbb
sbbl
aaa
sbb
jmp
mov
int3
lods
scas
in
mov
mov
inc
jae
pop
imul
addl
xchg
je
push
js
cltd
xor
or
push
mov
sbb
inc
add
cmp
mov
cltd
test
xor
jno
xchg
pop
fisubrs
sub
test
in
imul
pop
push
mov
lock
and
lea
fiaddl
lea
lcall
outsl
mov
push
push
out
push
les
repz
call
out
ss
rcr
aaa
xor
repz
lret
push
addr16
or
push
mov
lret
negb
stos
sbb
sti
fwait
mov
sbb
sbb
mov
cwtl
push
xor
shll
cmp
pop
xchg
movsb
adc
ljmp
adc
inc
aam
sbb
cmp
adc
pop
sbb
mov
in
sahf
pop
adc
in
or
lcall
test
cmpsb
cmpb
lcall
test
pop
sub
fimuls
loope
cmp
push
lds
and
inc
cmpb
mov
int3
sub
and
and
add
int
mov
loopne
out
hlt
les
shrb
mov
add
pop
ljmp
mov
mov
lret
loope
jns
frstor
sbb
or
sbb
push
shrl
jo
enter
enter
mov
push
dec
lret
ja
stos
xlat
sub
cmp
xor
mov
dec
test
push
cmp
imul
ret
pop
sbb
jl
insl
sahf
mov
cmp
xlat
iret
push
cltd
lahf
xchg
jae
fadd
mov
int3
jae,pt
jecxz
inc
je
daa
icebp
cli
addr16
add
bound
mov
mov
xchg
in
sub
seto
adc
hlt
ja
xchg
push
test
pop
sub
je
pushf
add
jnp
pop
mov
inc
or
fcomps
xchg
pop
sub
mov
insb
push
aaa
dec
or
and
pop
push
xor
sahf
lods
mov
or
fwait
and
orl
sbb
pop
jmp
fcomi
cmp
push
int3
call
fiaddl
movsb
mov
call
lcall
pushf
pusha
and
cld
jb
insb
das
sbb
lahf
repnz
jnp
inc
mov
cwtl
xchg
movsb
fldl
push
pop
negb
imul
in
nop
add
mov
leave
out
popl
xchg
cwtl
das
int
fldl2t
mov
rolb
or
push
dec
xor
push
add
mov
mov
insb
sub
mov
sti
xchg
enter
dec
dec
popa
adc
pop
pop
jmp
xchg
repnz
xchg
xor
outsl
pop
in
into
nop
mov
pop
leave
out
push
or
and
dec
inc
aaa
mov
inc
movsb
adc
test
loopne
mov
js
xor
daa
mov
notl
pop
pop
inc
mov
movsl
imul
jbe
nop
mov
and
mov
dec
loopne
xchg
sbb
test
jb
sub
jno
jo
into
mov
sub
xor
subl
inc
push
fwait
cmp
dec
in
das
in
cmp
loope
into
test
mov
hlt
scas
dec
sub
pop
jg
pusha
sarl
sbb
pushf
aaa
sti
sahf
sbb
push
test
xchg
push
icebp
movsb
ret
daa
sub
push
les
pop
xchg
mov
stos
push
adc
les
repnz
xor
push
xor
pusha
jae
dec
outsb
lret
iret
cli
xorb
adc
and
icebp
xchg
and
fiaddl
scas
in
mov
adc
sbb
jo
std
dec
mov
hlt
inc
test
clc
cmc
mov
cmp
dec
das
push
pop
or
lret
imul
jbe
push
jecxz
add
addb
leave
sbb
lods
cld
in
cmp
scas
pop
and
cmc
cmp
and
inc
das
push
jnp
into
lods
mov
sbb
xor
xchg
mov
sub
jmp
xchg
xlat
out
or
movsl
in
je
incl
dec
xor
pushf
sub
or
fwait
popa
ret
or
addr16
test
movsl
lcall
icebp
and
push
out
cmp
cmp
pop
arpl
int3
fwait
es
jbe
pop
das
iret
subl
cmpsl
das
in
jmp
leave
cmpsb
sbb
mov
add
roll
sub
lcall
int3
hlt
xlat
test
pushf
push
cmp
stos
shll
mov
add
push
repnz
mov
or
mov
cmp
push
push
leave
mov
fmulp
aam
xchg
fildll
das
push
shll
mov
cld
pop
xor
pop
sbb
or
fs
sbb
or
jl
es
xor
pop
les
outsb
lret
jg
push
xchg
dec
cmp
mov
xchg
dec
pop
mov
push
sbb
dec
pop
add
lds
jg
mov
cmc
or
pop
inc
shlb
or
inc
popl
ss
fisubl
jle
pop
adc
jae
or
test
lds
aam
sti
inc
push
push
mov
push
cmp
jg
jle
dec
int3
aad
repnz
outsb
inc
pop
leave
insl
inc
mov
jns
pop
push
adc
lock
cwtl
in
in
jl
frstor
mov
out
pop
sbb
rclb
xor
jecxz
pop
push
jno
ret
inc
imul
and
add
cmp
shlb
repnz
pop
aam
imul
aad
inc
add
leave
inc
jecxz
int3
mov
and
jo
repz
jge
sbb
pop
mov
inc
push
xchg
or
pop
sahf
lcall
scas
jns
out
add
mov
mov
and
adc
mov
push
lcall
pop
jo
hlt
outsl
mov
ja
ss
pushl
xchg
push
inc
push
and
fbld
jbe
mov
repz
mov
mov
mov
mov
and
add
cmp
xor
mov
xor
inc
je
sbb
jbe
jno
jnp
mov
stc
fwait
insb
pop
fwait
mov
dec
repz
pushf
pop
xchg
gs
call
push
es
repz
mov
xchg
push
jp
xchg
mov
xlat
lods
je
fistpl
mov
jo
sar
imul
negl
and
enter
push
or
ja
dec
xor
sub
fcomps
inc
mov
cmp
rcl
adc
lret
leave
dec
and
aas
dec
push
rcrb
pop
in
mov
sbb
orb
cld
mov
or
push
in
movsb
sbb
enter
frstor
and
ja
jg
mov
or
xor
fcoms
adc
aad
fistpl
adc
fiadds
xchg
push
or
scas
mov
inc
inc
xchg
fstl
xchg
jmp
divl
stc
jp
mov
sub
stos
mov
mov
lret
xor
or
xlat
jg
out
test
xchg
pop
jmp
int3
mov
xchg
icebp
int
rcrl
mov
adcl
scas
sub
adc
adc
jb
add
inc
push
mov
js
in
ja
cmpsl
gs
jmp
mov
sub
js
mov
and
push
test
out
and
and
mov
mov
mov
mov
push
movsl
mov
scas
loope
int
xchg
mov
lret
ret
inc
fbld
inc
mov
jle
ja
daa
inc
sbb
pop
jp
sahf
and
or
mov
aaa
pop
mov
mov
insl
xor
dec
add
je
mov
jbe
inc
les
or
jne
inc
add
push
insb
rcll
shlb
stos
pop
stc
stos
push
jecxz
hlt
adcl
stos
addl
push
nop
fimuls
je
cmc
xor
and
pushf
mov
push
jns
push
xchg
scas
xchg
mov
cmp
mov
les
jp
aaa
mov
pop
int3
inc
jns
in
in
jno
dec
mov
add
out
popf
cli
in
cmp
dec
xchg
push
add
aas
and
jns
fdivl
cld
ds
jae
push
clc
call
or
xchg
dec
sbb
adc
pop
cmp
outsl
jne
rcr
mov
add
inc
clc
xchg
sbb
cmp
roll
pop
int3
xor
jbe
and
xchg
cmc
insb
popa
cmc
cmc
ja
insl
cwtl
adc
ror
pop
inc
mov
pusha
pop
fwait
insl
add
dec
fistps
insl
jno
jecxz
loope
adc
imul
cld
in
sub
dec
lret
cmp
mov
inc
adc
insl
flds
enter
cmc
les
xor
lods
daa
lods
sub
push
add
hlt
mov
loopne
lds
cmpsl
movsl
popf
adc
stos
adc
dec
cmp
pop
imul
test
scas
mov
sbb
rorb
or
adc
dec
and
je
mov
popa
xchg
nopl
and
loopne
mov
lea
gs
jecxz
out
xor
cld
fcmovu
test
mov
push
push
xchg
lret
stc
mov
orb
mov
into
adc
int
movsb
faddp
push
scas
mov
dec
hlt
out
adc
or
push
stc
push
testl
lock
mov
push
ffreep
jnp
cmp
dec
mov
sbb
lcall
stos
pop
adc
inc
rcrl
mov
and
or
aas
pusha
cmp
inc
mov
call
cmpsl
inc
lods
sahf
aaa
adc
adc
cwtl
and
push
popa
jg
pop
sub
fsts
add
cmpsb
add
mov
xlat
or
nop
jecxz
inc
cmpsl
cmp
inc
xchg
mov
jl
daa
jg
loope
and
ret
imul
mov
bound
add
xor
push
dec
mull
or
sub
ror
negb
arpl
insl
inc
leave
mov
sub
out
push
push
cwtl
sbb
mov
jp
insl
imul
sub
inc
pop
rorb
sahf
stos
push
pop
and
je
loopne
cmpl
jle
nop
add
daa
addb
push
or
or
ja
mov
inc
cmp
push
lea
in
test
and
addb
sbb
imul
cmp
in
dec
int
stc
jns
push
mov
push
lret
jecxz
sbb
or
dec
push
xor
jnp
sbb
in
les
push
mov
push
or
stos
adc
lods
jb
inc
adc
inc
mov
mov
repnz
loopne
fildl
mov
ret
cmpsl
sahf
cmc
mov
inc
insb
pop
sbb
dec
sub
push
pop
gs
js
jl
adc
sub
cli
mov
test
pop
in
fwait
leave
sub
mov
push
mov
dec
push
inc
add
dec
lahf
pop
mov
xchg
sbb
arpl
out
imul
add
mov
mov
out
xchg
push
int3
fisttpll
inc
add
pop
dec
cli
mov
dec
sub
xchg
lods
aaa
sub
or
out
push
data16
jns
ljmp
cmp
into
loopne
jecxz
jns
cwtl
adc
je
add
out
loope
lcall
test
sub
pop
fisttpll
or
mov
jl
and
fdivrs
xchg
xor
cltd
lods
mov
sub
cld
or
jo
repnz
dec
jae
sub
sbb
mov
dec
push
xor
fadds
push
js
xchg
mov
std
xor
cmp
mov
rorl
jp
in
loopne
inc
push
mov
mov
and
gs
mov
and
adc
lcall
xchg
fildl
pop
movsb
imul
sub
dec
mov
sub
shr
dec
mov
or
dec
lock
movsl
dec
subl
das
insb
push
xor
xchg
xchg
adc
xchg
and
addr16
lea
out
rolb
add
popa
inc
push
fistpl
push
cs
mov
mov
sti
data16
pop
das
cmp
add
or
arpl
fdivrl
int3
sbb
jb
ja
cwtl
ds
xchg
and
cli
fwait
xchg
push
cmpsb
cltd
or
push
push
and
pop
and
orl
into
dec
sbb
and
jo
insl
mov
clc
or
add
loope
shlb
pop
sub
flds
pop
hlt
dec
add
xchg
insb
xchg
out
cmpsl
aam
mov
mov
sbb
sub
sub
pusha
fwait
push
inc
jle
data16
or
into
xchg
xor
jno
test
retw
add
pushl
pushl
repz
out
mov
sti
jnp
cmp
jge
pop
mov
add
ds
shrl
imul
add
push
mov
xlat
adc
jecxz
mov
inc
daa
fstp
std
sbb
mov
aad
sarl
repnz
inc
int
xor
sbb
outsl
or
sbb
shl
pop
jl
fdivs
fisubs
rclb
cwtl
roll
mov
dec
jge
insl
call
icebp
pop
push
xor
bound
xor
cwtl
imul
ja
rorl
fmulp
out
dec
ljmp
jb
lock
xor
fcomps
test
test
sahf
xchg
and
imull
mov
outsb
decb
or
sbb
cmc
aas
leave
sarb
mov
cmc
in
jmp
mov
or
xor
rolb
mov
sub
pop
lds
adc
add
push
xor
nop
add
sub
sbb
call
movsl
xchg
add
xor
mov
xor
jae
in
push
jnp
adc
mov
jne
enter
xchg
notl
and
xor
adc
push
adc
adc
addl
sub
lret
xor
jg
cmpb
cwtl
lds
loopne
cmp
lods
ja
pop
aad
call
pop
mov
mov
lock
cmp
sub
rclb
lret
mov
testl
adc
sbb
xchg
sbb
xchg
in
imul
test
lds
xor
pop
inc
adc
stc
mov
push
aad
inc
dec
or
adc
lods
inc
jae
sbb
push
push
hlt
imul
stos
and
inc
add
ljmp
jae
mov
add
sbb
mov
adc
in
lret
or
lret
xchg
scas
rorl
xchg
xor
fadds
ja
xlat
push
push
xchg
scas
cmc
mov
jbe
data16
call
adc
shlb
clc
dec
xchg
fsts
insl
movsl
out
testb
xchg
push
aam
inc
ror
sub
sbb
lcall
in
mov
cmp
pop
mov
xor
mov
mov
iret
loopne
cld
lret
mov
or
or
arpl
jecxz
outsb
in
loope
setns
mov
test
or
xor
es
jae
jle
repnz
outsl
fwait
lds
and
sahf
out
aad
maxps
hlt
jecxz
aam
jg
loope
or
inc
imul
leave
sahf
aaa
dec
add
outsb
mov
add
imul
mov
shrb
mov
mov
adc
cmpsb
cld
lods
int3
int
push
in
push
fiaddl
fstps
adc
cmpl
ds
or
loope
cmp
aad
int3
xchg
lea
rcrl
loope
popf
in
into
aam
push
mov
jle
daa
into
push
pop
into
push
dec
cmp
ret
lret
fwait
ret
jb
rcll
ds
pop
mov
adc
dec
sub
stc
xchg
jnp
fnstsw
or
aas
sub
xchg
xor
mov
insb
das
dec
repz
popf
test
adc
xchg
loop
lcall
mov
mov
mov
mov
ret
inc
ret
mov
loopne
jp
cmp
xchg
pop
sub
xchg
cltd
jmp
rorl
mov
movsb
mov
sbb
add
call
jl
jle
leave
mov
xchg
hlt
inc
xor
mov
jle
movsl
adc
dec
add
data16
mov
mov
pop
mov
enter
int3
mov
enter
test
xchg
and
sbb
xchg
iret
mov
jns
lds
jl
xchg
in
cmpsl
testl
out
xchg
pop
aam
addr16
cwtl
sub
push
mov
mov
sahf
les
inc
loopne
lods
out
je
mov
pop
popf
jae
or
xabort
inc
xor
jno
stos
dec
notb
pop
dec
jg
pusha
sbbb
sbb
aas
lret
mov
adc
ds
adc
add
mov
ja
cmp
js
stos
push
lret
and
mov
mov
jle,pt
aas
cmpsb
push
push
clc
pop
jno
lret
fsubrs
xchg
cs
xor
fcoml
or
addb
pop
imul
or
loopne
fcmovne
mov
fmull
mov
enter
dec
add
xchg
adc
insl
ja
mov
sub
lea
mov
mov
or
movsb
mov
rcrl
adc
xlat
daa
data16
and
jb
popf
popf
pop
pop
xchg
dec
outsb
pop
enter
dec
cmp
scas
sub
pop
test
je
mov
jmp
sub
push
fsubrl
loopne
jg
mov
mov
out
arpl
ret
imul
cmpsb
les
in
dec
scas
and
call
rorl
mov
adc
pop
ret
and
jbe
pop
and
pop
xchg
push
sbb
cld
dec
cmpsb
loopne
or
mov
and
pop
mov
mov
cmp
xor
add
stos
add
xchg
sti
jle
or
int3
and
and
pop
loopne
inc
or
push
add
imull
xor
aam
fwait
inc
or
cmc
mov
push
or
fdivr
jge
out
call
pop
and
sub
xor
loop
cltd
fsubr
hlt
fiaddl
xor
daa
fcmovb
fidivrl
ret
sub
movsb
dec
test
shrb
and
ds
pop
xchg
mov
xchg
xor
call
xor
inc
repnz
or
imul
pop
test
cltd
inc
pop
xor
repnz
mov
push
or
mov
cltd
pop
sti
mov
mov
push
cmpsb
mulb
js
adc
test
in
mov
inc
mov
test
inc
addl
mov
jg
ds
adc
andl
sbb
loop
popf
mov
clc
xchg
jg
ffree
dec
ret
rolb
push
je
in
sahf
gs
push
lods
dec
push
enter
push
out
adcb
enter
shll
aad
sub
sbb
lcall
add
sahf
addr16
fwait
or
sbb
std
test
gs
repz
cmp
int3
push
or
int3
jle
sbb
popf
or
fcmovu
sub
hlt
sbb
cwtl
ficoml
cmp
push
popf
xchg
cmp
scas
negl
ds
aad
fwait
idivb
dec
imul
push
sub
cmp
push
sarl
ljmp
inc
lea
in
sub
cli
xchg
pop
addr16
inc
sub
dec
test
nop
sbb
filds
leave
add
lock
or
mov
fwait
shl
and
fwait
inc
cwtl
jbe
xchg
fwait
add
adc
leave
repnz
mov
mov
cmpsl
nop
adc
jmp
movsb
cmp
mov
jnp
pop
mov
cli
mov
enter
hlt
ss
dec
sub
dec
ss
movsb
movsl
insl
xor
fstps
sub
adc
adc
ss
xchg
xlat
mov
xchg
loopne
push
lds
sbb
test
or
scas
adc
or
xchg
les
inc
cld
inc
push
dec
in
and
jnp
aad
loope
addr16
outsb
push
das
mov
xor
jge
fsubs
sbb
icebp
mov
fists
jge
adc
sti
fcompl
cld
jle
lods
pop
sbb
ficoml
mov
dec
adc
shlb
sbb
popa
dec
adc
sub
je
minps
mov
add
sbb
into
lock
pop
inc
sbb
pop
outsl
dec
repnz
mov
or
push
adc
addr16
addl
mov
mov
mov
mov
pop
jecxz
jns
mov
iret
and
mov
and
ja
pop
jle
dec
xor
ret
pop
dec
les
inc
xor
and
mov
mov
ffreep
cmpsb
je
pop
les
mov
xor
dec
push
adc
or
jl
mov
popf
je
aaa
xchg
xor
push
test
loopne
xorb
push
outsl
inc
cs
loop
mov
dec
xchg
inc
push
rolb
adcl
dec
cmpsb
cmp
in
mov
aad
jo
push
and
fwait
ret
inc
fisttpll
fwait
icebp
ret
lret
dec
mov
sub
in
mov
cltd
mov
stc
push
in
jle
cmp
in
mov
lock
mov
mov
xchg
pop
std
push
inc
imul
fists
mov
dec
push
mov
adc
imul
xor
cmp
pop
pop
aad
cmp
push
mov
jecxz
jne
push
dec
mov
adc
jg
std
inc
sbb
in
stos
stc
push
mov
dec
ror
cltd
daa
adc
inc
mull
mov
addr16
sbb
dec
mov
mov
cltd
xlat
bound
fdivr
hlt
add
cwtl
add
cmp
push
out
pop
pop
mov
mov
mov
sub
jno
repz
inc
mov
sbb
mov
test
add
mov
movsl
mov
mov
out
test
testl
sub
sbb
cmc
cmpsb
mov
push
insl
cli
jecxz
sbb
pop
pop
repnz
std
lds
ljmp
adc
shll
scas
std
inc
out
sbb
cmpb
push
push
or
push
jp
leave
dec
sbb
scas
lods
sub
inc
push
mov
imul
stos
add
mov
inc
icebp
dec
inc
dec
rcll
cmp
jo
filds
daa
jae
pop
jbe
inc
bound
xchg
pop
lret
cmp
jecxz
addl
sub
add
xor
arpl
inc
add
movsb
jle
and
iret
fcomip
mov
movsl
data16
inc
in
pusha
and
mov
imul
dec
mov
repnz
pop
int3
mov
and
xchg
jmp
xor
dec
into
in
cmpsl
lods
rcll
mov
fs
out
inc
or
lcall
xor
sbb
xchg
jnp
push
xlat
mov
ds
cltd
push
xor
dec
add
popf
dec
adc
cmp
sbbb
cmc
fldt
mov
or
push
mov
sub
hlt
cmp
jl
data16
inc
fisubl
loope
sbb
popa
mov
dec
jle
inc
pusha
fdiv
pop
fnsave
xacquire
mov
imul
and
shl
adc
inc
sbb
xor
sub
xor
pop
lock
add
rorb
stc
jo
lods
dec
adc
pop
mov
jns
testb
dec
mov
js
imul
fimull
push
inc
fistpll
jecxz
scas
push
lret
orb
pop
add
xchg
xchg
mov
lcall
cmp
shrb
mov
jnp
jb
mov
push
outsb
lds
dec
ret
cmp
lahf
sbbl
sbb
push
dec
inc
and
mov
add
aam
arpl
imul
or
sbb
cmpsl
test
aas
aad
mov
add
fs
loope
mov
popf
orl
ret
lds
out
clc
mov
lea
cmc
or
mov
pop
mov
jmp
xor
inc
into
test
mov
cmp
push
dec
loop
adc
cmpsb
push
add
push
es
mov
adc
jp
test
xor
js
aaa
cs
out
pop
push
adc
add
adc
xchg
and
repnz
inc
mov
out
ljmp
addr16
leave
mov
jb
inc
nop
mov
mov
pusha
les
lret
cmp
lds
sbb
fadds
jg
out
sub
jo
jnp
mov
xor
icebp
push
or
aam
mov
pop
adcb
xchg
pop
sarl
or
xorl
scas
adc
mov
in
lea
mov
outsb
and
aaa
mov
xchg
and
xor
lods
sub
mov
test
push
pop
test
push
bound
add
mov
jecxz
fmul
mov
loopne
leave
mov
lahf
fyl2x
sub
sbb
jecxz
inc
sti
je
push
jno
imull
or
pop
mov
je
jns
enter
aam
adc
inc
adc
jns
adc
lret
aam
pop
leave
imul
add
sub
sbb
adc
les
outsb
push
xorl
adc
jecxz
enter
jg
push
daa
lods
cld
clc
movsl
clc
cld
cmp
xchg
sub
adc
xchg
push
js
cld
test
stc
mov
cs
in
int3
aaa
fs
mov
pop
dec
inc
inc
jns
hlt
mov
or
out
sub
ja
sub
pop
stc
je
push
mov
ss
scas
mov
ds
imul
pop
pop
or
jns
inc
mov
movsb
popf
fsub
or
cmp
cmpb
pop
inc
dec
jne
mov
fistpl
loop
subl
mov
imul
push
jnp
add
inc
sbb
jnp
sbb
imul
jno
pop
push
addr16
adc
fs
into
into
push
push
imul
push
stos
std
add
andnps
repnz
jae
mov
jl
cld
and
xor
lods
mov
cmp
fincstp
mov
adc
xchg
sub
and
adc
fwait
sub
out
and
fiaddl
sub
data16
jmp
mov
and
cmp
out
push
xchg
mov
cli
inc
scas
push
sub
lret
dec
add
inc
data16
push
jp
cld
fiaddl
int
and
insb
lock
adc
shrl
fimull
es
push
idiv
pop
scas
sbbl
pop
xchg
aas
jg
jae
lds
dec
adc
adc
sbbl
and
int3
inc
jecxz
test
cld
xchg
hlt
fwait
loop
mov
or
arpl
nop
sbb
cmp
dec
dec
testl
aas
xor
xor
xlat
xchg
imul
enter
mov
xchg
lods
xchg
jo
push
jo
test
dec
je
imul
subl
imul
mov
out
mov
sbb
mov
mov
arpl
fcoms
cld
fwait
cmp
pop
xchg
xchg
pop
and
cmp
movsl
out
inc
repz
jbe
add
fnstsw
cmc
iret
stc
fisubrl
test
ficoml
sub
std
and
jmp
lcall
fstpt
cmpsl
adc
out
jno
pop
inc
jb
mull
jge
mov
and
xor
or
dec
cltd
jno
or
mov
enter
jne
sbb
mov
sbb
aaa
add
push
mov
cmp
or
and
cmp
adc
push
inc
add
xchg
push
mov
dec
divb
and
js
cld
and
daa
jle
push
mov
mov
cmp
out
push
xchg
bound
xchg
cmp
jbe
repz
outsl
sub
jmp
pop
shll
mov
lea
jno
add
jo
lods
jmp
xor
add
or
cmpsl
cmp
xor
scas
jb
jg
mov
repz
mov
lock
shrl
stos
xor
mov
int3
pop
adc
sub
pop
mov
hlt
mov
ret
ljmp
mov
dec
pop
push
dec
jp
mull
jbe
pushf
stos
dec
into
xchg
addr16
iret
and
rolb
cwtl
and
sahf
cmpsb
jbe
xchg
add
jg
inc
xchg
punpcklwd
push
loope
mov
xchg
es
jnp
add
sbb
jns
xchg
push
loope
iret
lret
and
add
stos
packuswb
arpl
inc
sbbb
bound
out
mov
sub
adc
lahf
jle
loope
mov
imul
aaa
aam
subl
mov
in
mov
dec
mov
inc
xor
mov
dec
inc
popa
testb
push
outsl
xor
iret
je
icebp
mov
adc
nop
data16
lds
roll
sar
ss
pop
mov
ljmp
push
jae
enter
pop
lret
xchg
inc
xchg
in
pop
out
lods
data16
add
mov
movsl
mov
out
mov
test
push
ljmp
sub
aam
xor
cmpsl
sbbb
lcall
loopne
xor
jp
insl
or
nop
xchg
pop
mov
jg
and
fsubrl
sahf
xchg
sbb
outsl
int
sub
addb
clc
xchg
push
mov
pop
pop
addr16
xchg
adc
jns
loope
add
mov
mov
xor
loopne
arpl
outsb
fadd
or
out
mov
hlt
jns
mov
cmpsb
int3
adc
cld
das
jb
push
cmp
and
jns
cld
jmp
sbb
sahf
inc
sbb
sbb
push
and
scas
jbe
cld
in
lds
stos
out
ljmp
cmc
and
inc
add
pushf
leave
pop
lret
lcall
jmp
push
mov
pop
adc
je
xor
mov
icebp
dec
jne
inc
push
add
outsl
mov
pop
inc
dec
sahf
fs
ret
cmp
add
ljmp
das
pop
clc
aaa
lds
enter
pop
inc
xchg
mov
push
popf
xchg
push
aam
insb
stos
pop
repz
sbb
xchg
push
loopne
call
sub
cmp
in
jl
mov
fs
loopne
or
cwtl
loop
pushf
cmp
jns
and
xchg
and
jg
lret
inc
mov
dec
test
inc
mov
dec
inc
sub
fs
lcall
cmp
jne
xor
and
jbe
xchg
out
les
xchg
inc
stos
in
jl
inc
pop
bound
push
loopne
hlt
psrad
lret
mov
pop
add
add
data16
pop
lea
push
cmp
jl
fs
xchg
jne
icebp
imulb
in
call
lret
ss
test
or
popa
fwait
and
mov
nop
movsb
wrmsr
ret
jmp
push
sbb
dec
cld
stos
je
jmp
jl
bound
pop
scas
inc
xchg
movsb
ja
sarl
dec
xchg
lock
in
jne
enter
mov
xchg
xchg
cmp
insb
push
dec
push
addr16
or
subl
push
stos
and
and
pop
adc
jo
push
mov
inc
cli
sub
pop
dec
add
test
lret
sbb
idivl
call
lods
ljmp
mov
lods
push
shr
add
mov
loope
in
add
pop
mov
jg
push
js
mov
pop
in
pop
and
outsl
xlat
fwait
roll
dec
movsb
notl
jb
loop
mov
jmp
add
popf
jle
cmpsl
cli
mov
dec
push
das
or
fldt
cli
cmp
mov
movsb
add
stc
jmp
xor
inc
dec
jae
add
push
inc
lods
cwtl
les
add
adc
mov
cmpsl
repnz
js
movl
push
cltd
xor
jmp
jo
shll
inc
inc
dec
and
xlat
add
pop
or
xchg
test
test
cmp
mov
dec
shl
and
ss
lcall
loope
mov
ret
mov
lea
cmp
inc
pop
mov
andl
sbb
fs
aaa
shlb
hlt
sbb
sbb
xor
movsl
int3
lret
fxch
fwait
lar
cmp
lods
stos
nop
cli
cmp
and
scas
push
jge
scas
pop
jbe
ss
cmp
push
loope
push
dec
adc
xlat
or
es
push
pop
repz
es
ss
cmp
mov
mov
cmp
mov
adc
ss
rcl
xchg
cmp
adc
icebp
and
adc
xlat
leave
movsl
rorl
mov
push
adc
inc
adc
jge
outsl
dec
xor
push
mov
mov
inc
in
out
scas
dec
mov
jl
pop
divl
bound
mov
add
mov
pop
shlb
add
fwait
icebp
sub
add
sbb
inc
cld
lret
es
and
or
xorl
in
imul
jne
movsl
xchg
and
fisubrs
xchg
pop
stos
push
and
pop
lahf
pop
arpl
xor
pop
push
dec
in
leave
inc
sarl
dec
dec
fidivs
negl
pop
xchg
insl
shr
xchg
mov
push
sub
mov
push
pop
add
mov
dec
cltd
js
test
inc
xlat
filds
nop
push
cwtl
dec
bound
sahf
test
testl
sbb
or
push
fildl
insl
xor
xchg
fcmovnb
repz
ficoml
gs
inc
ficoml
adc
jo
mov
insb
mov
push
mov
or
and
das
stos
dec
lret
jns
pop
jmp
int3
or
in
movsb
or
mov
cmc
out
adc
aam
push
adc
and
and
lret
inc
aam
sbb
lahf
pop
scas
cltd
jne
imulb
loopne
push
lcall
xchg
in
outsl
or
sbb
std
cli
jecxz
mov
xchg
sub
cmp
sbb
adc
cmpsb
cmpsl
xchg
ror
cmp
pop
jge
xchg
cmpsl
inc
push
sub
mov
imul
sbb
fidivl
ret
filds
cmp
push
sbb
or
mov
mov
pop
or
subl
es
sub
xchg
aam
xlat
sub
dec
incl
lds
xchg
cli
iret
outsb
sbb
hlt
cltd
push
dec
nop
cwtl
ja
pusha
and
repz
lret
jnp
xchg
sub
push
scas
mov
ret
lret
sbb
arpl
xor
imul
cmpsl
es
pop
mov
ret
mov
arpl
push
cmp
outsb
jno
cld
cmc
or
xchg
dec
and
adc
stc
dec
cmc
pop
xchg
and
lods
jg
mov
nop
jo
sbb
and
mov
loop
sbb
jecxz
xchg
xchg
mov
push
jl
bound
in
or
aad
jge
sar
mov
xchg
pop
enter
cld
ss
rcll
je
imul
call
pusha
fldcw
stc
mov
in
test
jo
clc
in
punpcklwd
ficompl
and
in
dec
jge
pop
jecxz
push
loopne
testl
and
adc
mov
pop
pop
or
fcoms
add
inc
adc
dec
inc
pushf
pop
cmp
or
dec
aam
cmp
and
push
sahf
imul
shl
push
mov
cmpsb
test
fbstp
mov
jne
test
popf
enter
ret
btr
mov
jle
push
and
mov
lcall
add
cmp
addb
fdivl
inc
leave
xor
call
dec
mov
jae
mov
mov
pop
aad
sub
jne
xchg
insb
popfw
repz
inc
jmp
jo
xor
fnsave
movsb
dec
push
insl
repnz
mov
mov
push
mov
pop
mov
bound
jecxz
xchg
ret
leave
xchg
pop
and
je
jecxz
in
stos
xchg
insb
adc
xchg
cmc
dec
out
aad
jne
pop
mov
mov
dec
fdivrl
jnp
jae
adc
test
dec
lcall
add
out
or
mov
cmp
push
inc
mov
add
in
mov
xchg
sti
sub
push
push
imul
stc
dec
mov
or
pop
mov
aaa
cmp
mov
lcall
stc
rorb
inc
sbb
call
cwtl
incb
fucomp
jg
xor
fwait
mov
adc
dec
jp
dec
mov
xsaveopt
stc
xchg
scas
sbb
cld
xchg
lcall
or
mov
jecxz
push
fisubrs
and
shlb
cs
adcl
icebp
inc
cmpsl
or
test
ret
or
decb
loopne
push
inc
xor
repz
sbb
sub
es
lods
jmp
sti
cld
jmp
jecxz
testb
loop
xor
sbb
dec
shlb
push
xorl
jns
in
test
imul
xor
subl
add
sub
mov
rclb
mov
pop
mov
mov
adc
mov
test
and
fidivl
out
and
popf
sbb
push
fxtract
lcall
pop
add
stos
repnz
test
push
pop
leave
fistl
push
push
call
adc
cli
mov
lret
fidivs
add
sub
rorb
or
ljmp
lahf
test
push
loopne
adc
int3
pop
push
js
cs
popf
mov
loopne
push
cmpsl
xchg
out
mov
cltd
and
js
imul
and
aaa
push
and
sahf
jne
popf
push
sub
and
jae
test
rcrl
in
mov
add
test
inc
imul
enter
or
mov
and
push
pop
sarb
sub
es
adc
sbb
inc
adc
dec
mov
sub
rcr
mov
int3
fnsave
push
mov
and
xchg
xchg
push
jns
xchg
dec
mov
inc
xchg
xor
nop
push
iret
test
mull
sub
add
daa
xchg
jp
loopne
jp
pusha
jle
cmp
fwait
push
scas
jle
inc
nop
and
mov
sbb
xchg
add
or
inc
sbb
sub
push
loope
lock
mov
dec
loop
and
movsl
mov
mov
loope
outsl
insb
scas
les
stc
push
loope
mov
lds
jne
fsts
pusha
add
adc
lcall
daa
mov
sahf
aam
cs
test
imul
xorb
push
leave
jmp
repz
add
mov
enter
dec
loop
xor
adc
negl
inc
push
inc
ret
mov
xchg
int3
andb
jecxz
xor
push
adc
push
daa
dec
jp
push
adc
adc
aaa
pop
push
test
and
mov
pop
xorb
ja
xchg
xor
pop
test
sub
xor
test
loop
rolb
enter
stc
or
scas
frstor
mov
mov
push
adc
pop
das
adc
xchg
and
inc
xchg
addr16
sbb
adc
sub
movsb
mov
pusha
cmp
mov
mov
daa
rcll
das
push
and
nop
sbb
cmp
jno
dec
shl
sbb
push
aad
cmpsb
xor
adc
or
sub
or
ja
or
and
out
jb
fwait
inc
dec
sub
out
lds
jne
xchg
ss
dec
sbb
jns
push
and
mov
outsb
ds
enter
mov
daa
shlb
pusha
cmp
xor
enter
pop
jg,pn
ficompl
mov
jne
pop
fld
jns
les
movsb
imul
out
js
fildll
dec
push
ret
cmp
or
push
fisttpll
push
insl
mov
xor
clc
mov
add
mov
push
bound
insb
andb
ljmp
sbb
arpl
jp
push
jmp
test
popf
push
lods
mov
adc
rorb
mov
mov
jle
int3
jnp
jge
arpl
and
cwtl
insb
ficoml
test
or
jae
cli
mov
movb
mov
jmp
adc
mov
dec
sub
call
xchg
lcall
fisttpl
add
jb
jne
sub
es
into
jb
mov
pop
xlat
add
add
mov
ljmp
mov
fldl
push
sbb
xchg
int3
xlat
mov
jl
jecxz
dec
divb
in
and
adc
repnz
sti
ficoml
test
inc
fucomip
scas
jecxz
mov
adc
inc
fucom
shrb
sbb
sarb
popa
fiadds
inc
movsl
sbb
push
jg
xchg
lds
das
xlat
jg
mov
loope
rorb
xchg
xchg
or
ljmp
dec
in
and
mov
ss
aad
lret
jae
shll
push
sbb
shl
repnz
addr16
sub
cmpsb
sbb
cltd
outsl
mov
adc
call
mov
dec
mov
mov
pop
push
insb
rcr
lea
xchg
fildl
roll
cs
not
int
popf
sar
jecxz
pandn
sub
mov
mov
adc
pop
cmp
cltd
add
into
jecxz
pusha
dec
push
or
imul
push
mov
adc
sbb
xchg
inc
pop
add
add
std
xchg
pop
and
pop
mov
cs
or
and
loope
jns
sub
call
add
xchg
cmp
mov
inc
ljmp
pop
mov
andb
cld
xor
rcll
lret
insl
and
pop
lahf
mov
scas
push
andl
add
and
dec
sbb
leave
cmp
fadd
loopne
shlb
mov
inc
push
jmp
push
insb
jnp
sti
dec
movsb
fwait
sbb
push
stos
mov
mov
push
mov
jo
fwait
clc
scas
mov
repz
lret
xor
push
incw
aaa
pop
dec
pop
adc
cmpsl
dec
mov
stos
arpl
push
fs
scas
mov
adc
sub
lods
xchg
leave
sub
clc
pusha
mov
jp
dec
pop
add
inc
in
movsl
mov
sbb
ret
mov
push
mov
pop
test
mov
xor
inc
pop
insb
sub
movsb
jo
jns
push
xchg
int
loope
mov
or
sbb
pop
cmc
mov
sti
enter
xchg
push
pop
leave
stos
mov
test
mov
lret
xor
int
mov
mov
lods
jb
int3
in
cmp
repz
xchg
out
aad
cltd
fistl
and
pop
adc
mov
jno
and
lahf
sub
push
addb
dec
mov
push
sub
jbe
xor
adc
aad
lret
ret
sub
xchg
fs
or
xor
adc
ds
sarb
jmp
shlb
loop
push
rcrb
jb
jnp
xchg
push
test
push
mov
mov
hlt
cs
bound
dec
or
sbb
in
dec
mov
inc
dec
and
icebp
pop
aas
xchg
mov
and
mov
and
mov
sbb
and
push
jno
inc
pop
xchg
nop
inc
aad
fstpl
negl
shlb
cmp
add
dec
int3
mov
add
aaa
add
cmpsl
add
fwait
xor
mov
hlt
cmp
stos
sub
filds
mov
jb
or
ret
inc
and
stos
jo
jle
bound
mov
ret
mov
jecxz
push
aam
stos
bound
repnz
loope
insl
pminub
xchg
movsb
push
out
cmp
cmp
adc
xchg
fdivl
pop
lahf
jmp
lahf
repnz
hlt
mov
fistl
cmp
mov
bound
cltd
cmp
and
mov
cwtl
daa
pop
and
mov
pusha
xor
sub
or
dec
add
push
push
out
xlat
mov
rclb
mov
bound
subb
mov
inc
adc
out
pop
jnp
jl
lcall
movsb
add
jnp
push
mov
xchg
outsl
mov
sbb
or
test
loop
hlt
adc
mov
js,pt
data16
rorb
nop
sti
jecxz
xchg
pusha
inc
outsb
push
or
push
fimuls
xor
jae
pop
sbb
mov
cmp
fistl
int3
and
inc
jbe
arpl
shr
cltd
pop
insb
js
flds
and
jne
js
mov
stc
mov
test
or
das
js
aas
aam
push
xchg
mov
jmp
clc
push
mov
mov
aaa
arpl
cmpsb
aad
sbb
lahf
leave
cmp
mov
clc
movsl
sbb
add
inc
fstpt
movb
call
scas
int
ror
dec
fistl
or
fwait
sti
cmp
pop
int3
gs
jb
jne
imul
in
cmpb
dec
sub
aaa
dec
cmpsb
outsl
and
test
je
fildll
arpl
adc
fs
dec
mov
flds
and
aas
daa
xchg
pop
and
inc
and
mull
add
jmp
inc
addb
jnp
aad
inc
jp
movsb
mov
mov
pop
dec
fldl
fidivrl
mov
mov
fisubs
add
sbb
pop
adc
int
or
repz
jp
dec
fldz
fnsave
cmpb
add
popf
mov
jnp
sub
mov
test
loope
fs
jo
insl
jmp
iret
pop
data16
mov
jmp
or
ret
or
jno
or
xchg
bound
lods
and
in
mov
add
adc
dec
int
inc
or
inc
fwait
cwtl
and
sbb
mov
inc
ss
lds
sbb
inc
mov
and
fiadds
cmp
icebp
add
cmp
das
jle
dec
insl
and
aad
fldt
xchg
add
mov
inc
jne
add
fnstenv
sbb
add
cmp
movsb
sarb
mov
shll
in
push
xorb
ss
jg
dec
loop
lods
mov
sbb
sub
cmp
jl
add
mov
shrl
adc
cmp
sahf
jne
out
dec
inc
outsl
mull
add
and
cmovno
pop
cltd
mulb
sbbb
inc
adc
nop
adc
ror
sub
inc
inc
ss
cmp
jl
xchg
pop
push
aaa
fisttpl
es
push
cmp
jne
rorb
mov
pslld
ret
imul
sub
fcomip
out
adc
or
and
inc
jnp
ret
sbb
lods
or
and
cmpsl
out
out
inc
outsl
cltd
adc
pop
add
mov
push
push
mov
movl
out
push
stos
fnstenv
jns
push
inc
sti
mov
lret
outsl
inc
push
xor
or
sbbb
bound
xchg
jl
cltd
jns
aas
mov
push
pop
xchg
jg
and
adc
jb
lods
sahf
std
or
pop
dec
fistps
mov
cmp
int
xor
mov
lock
pop
stos
push
in
pusha
dec
xor
or
jo
add
xor
add
mov
hlt
loop
addr16
jle
shlb
stos
dec
fmulp
lock
jp
daa
cmp
jno
xor
imul
outsl
jp
or
fxch
data16
xor
mov
sbb
mov
push
mov
cs
pop
push
xor
inc
and
pop
push
inc
pop
enter
mov
dec
pop
and
cmp
aaa
bound
mov
inc
lods
xor
mov
les
pusha
shr
adc
adcb
pushl
sbb
inc
clc
pop
lahf
sarl
jecxz
imul
enter
mov
add
push
pop
fsubrl
cltd
fldenv
inc
pop
hlt
mov
cli
mov
lret
cmp
dec
xor
shrl
or
rolb
ficomps
cld
push
ret
test
repnz
mov
mov
dec
cmp
out
icebp
sub
or
imul
xor
mov
aad
out
dec
test
pop
pop
xchg
jne
insb
aad
mov
stc
and
sub
addl
sub
xchg
stos
fwait
repnz
pop
lods
adcl
arpl
mov
cmp
adc
mov
fwait
ja
mov
arpl
enter
jg
cmp
inc
inc
inc
mov
and
sbbl
dec
pop
cwtl
mov
pusha
mov
push
dec
or
xor
loope
and
bnd
mov
cmp
aam
pop
jmp
cmp
ret
add
rcrb
push
mov
insl
in
inc
int
push
dec
add
adc
or
or
loop
daa
roll
lods
sub
sarl
iret
out
dec
push
pop
adcl
arpl
int
xor
add
mov
ja
cmp
call
mov
jns
std
cmpsl
xor
and
imul
add
mov
pop
add
test
mov
xchg
inc
outsl
dec
fstl
xchg
test
adc
dec
or
shll
sbb
cmp
stos
push
sub
pop
std
push
test
add
loop
mov
insb
mov
movl
sub
inc
negl
pop
mov
and
xlat
push
iret
cltd
fsubl
and
pusha
inc
stos
push
stos
lret
push
sub
dec
ja
push
push
dec
jecxz
addr16
cmp
push
les
je
outsl
pop
repnz
enter
sbb
insb
lret
iret
std
push
cmp
test
shlb
jne
add
xlat
mov
pop
out
cmp
cmp
in
pop
sbb
sahf
push
pop
test
nop
mov
jg
pop
ds
mov
in
xor
pop
or
mov
rcrl
mov
sbb
inc
mov
or
sub
push
jp
adc
inc
cltd
popl
sub
mov
sub
dec
inc
dec
mov
jb
or
repz
and
xor
mov
scas
cmp
sub
push
inc
inc
std
mov
mov
inc
push
pop
mov
lret
pop
iret
add
sub
adc
lea
cli
cmpsb
or
or
mov
scas
inc
ret
push
notl
mov
mov
and
jle
in
test
loopne
jge
inc
fwait
sub
cmp
adc
sahf
sbb
repnz
cwtl
js
jg
jecxz
push
and
xor
out
jmp
stos
ss
dec
sub
scas
fcoml
mov
aad
dec
in
cs
loop
roll
sahf
push
pop
mov
add
scas
inc
popa
pop
ja
nop
enter
movsl
stc
or
ret
fstl
insl
mov
and
stos
iret
ret
into
pop
addr16
cmpsl
aad
inc
push
repz
js
int
adc
xchg
xchg
imul
dec
movsl
lahf
xor
adc
scas
pop
mov
hlt
loopne
inc
mov
test
cltd
stc
jmp
ljmp
fldenv
inc
jl
cmp
mov
es
fimull
sbb
dec
adc
push
jge
cmp
xor
lret
sub
popa
clc
add
sub
daa
inc
in
lods
inc
dec
les
push
xor
or
sarb
or
mov
pop
dec
inc
shlb
adc
lds
lret
mov
xor
or
adc
lahf
mov
inc
test
jge
or
mov
fdivr
pop
pop
fidivrl
cmp
dec
cld
and
sbb
add
pusha
adc
adc
dec
es
add
jbe
pop
pop
in
cmp
fs
adcb
cmp
cmp
pushf
pop
inc
movsb
push
lret
ret
cmp
pushf
dec
xchg
pop
sub
js
clc
shlb
push
add
mov
jecxz
ss
fsts
pop
inc
jmp
adc
sub
in
test
add
call
sub
test
cmpsl
out
cwtl
cli
repz
jno
jne
inc
mov
cmpl
sbb
cmpb
add
xchg
clc
out
xchg
dec
ret
addr16
mov
lret
btc
aad
adc
in
daa
adc
sub
negb
xchg
pop
cmp
ror
movsb
xchg
call
sub
mov
jno
enter
mov
mov
out
out
pushf
or
inc
mov
push
sub
inc
and
pop
mov
subb
fisttps
push
ljmp
cmp
cwtl
dec
in
mov
es
or
xchg
dec
inc
pushf
jle
pop
inc
outsl
ss
fsubr
mov
lret
insl
or
jae
mov
jne
push
jg
and
int3
enter
xchg
ja
daa
and
or
and
sub
sbb
repnz
mov
lock
xor
rcl
pushf
pop
dec
push
mov
inc
rorl
mov
and
xchg
lea
sub
and
arpl
les
xchg
cmpsl
std
popl
ds
jb
adc
sbb
in
movsb
repz
mov
or
push
mov
mov
xor
pop
push
stos
or
pop
inc
ret
pop
sub
loopne
scas
out
mov
addr16
add
sub
mov
adc
testl
stc
fbld
and
cmp
xorb
dec
sbb
es
or
add
cmp
iret
daa
popa
and
xchg
mov
cmp
pop
push
mov
pusha
inc
xor
add
shl
decl
jae
test
dec
out
icebp
call
adc
pop
and
out
add
in
popa
jb
fistpll
xor
cs
pop
in
mov
dec
scas
xchg
lods
push
aam
mov
mov
test
xchg
mov
andb
dec
fnsave
mov
popl
pop
mov
xlat
add
repz
stc
and
imul
imul
inc
sub
sub
sti
test
add
loope
lahf
sbb
ret
sbb
xchg
cmpsb
cmp
lods
inc
push
and
fisttpll
lods
inc
push
fidivl
push
out
and
sub
xchg
int3
adc
jbe
stos
xor
sahf
mov
sub
ret
cmpsb
clc
addr16
daa
mov
push
jae
lds
mov
mov
jo
nop
sub
popf
fbstp
bound
xor
push
aam
pop
int3
enter
test
push
out
clc
lea
mov
jmp
mov
stos
call
leave
push
cmp
cmp
out
test
cmp
in
cmp
ja
faddl
mov
sub
xor
jl
push
add
jmp
out
xchg
mov
stos
out
int
add
aam
fisttpl
jge
or
daa
mov
pop
jmp
sub
outsl
mov
lcall
push
mov
testb
pop
dec
mov
gs
mov
jo
imul
mov
fisttpl
nop
cltd
sar
or
test
and
outsl
insl
loop
enter
iret
ret
and
mov
mov
xor
dec
fmull
lea
dec
mov
fstpt
fildl
and
jg
push
xor
push
xchg
shll
push
mov
dec
dec
shll
add
out
or
movsb
imul
cmpb
mov
fcmovnu
or
or
jo,pn
cmp
ljmp
pop
xor
stc
das
popa
add
jecxz
imul
iret
mov
add
roll
add
data16
lods
je
data16
test
inc
inc
insl
arpl
dec
cmp
lea
in
add
lds
ret
loope
inc
iret
jno
xor
jno
call
cmp
call
daa
mov
and
lret
in
lahf
add
and
sub
scas
aam
sbb
push
or
add
mov
repnz
aaa
scas
jbe
xchg
shl
mov
rcrb
cmp
pop
out
mov
inc
ljmp
clc
jb
xchg
movsb
aam
mov
pop
xchg
out
cmp
insb
xchg
int3
sbb
imul
lods
adc
push
in
iret
mov
daa
mov
mov
cs
lahf
mov
pop
jbe
cld
xchg
hlt
aad
popa
adc
rcl
sbb
mov
fisubrs
mov
mov
lahf
pop
imul
xlat
cmpsb
pop
and
andl
xchg
xor
inc
mov
lret
cld
mov
insl
push
cmp
mov
mov
mov
jp
pop
xor
or
lods
or
pop
imul
int3
ljmp
dec
stos
ss
pop
cli
and
add
in
in
pop
inc
and
dec
dec
cli
sub
pop
insl
push
inc
ret
xor
fisttpll
push
mov
bound
sbb
xchg
sti
mov
lock
lods
inc
lret
inc
jmp
in
sub
pop
mov
pop
push
cmp
call
hlt
push
inc
lea
xchg
lret
xor
xor
sub
rcr
cmp
xor
push
and
test
ss
and
pop
ret
adc
movd
shrb
jmp
lods
sbb
inc
bound
xor
adc
mov
mov
and
daa
add
lods
or
cs
adc
cmp
adc
xor
mov
xchg
xchg
mov
insl
imul
xchg
test
stos
or
negb
push
adc
lods
and
mov
inc
cld
push
inc
out
or
jns
or
lcall
dec
or
inc
lcall
push
aad
xchg
and
mov
imul
mov
popa
push
sub
sub
sti
push
push
sahf
jmp
mov
sahf
push
dec
push
dec
cmovno
mov
popf
push
aaa
ficoms
sbb
inc
fidivl
hlt
cmp
cmpsb
mov
xchg
insl
or
sarl
cmp
rcr
iret
sbb
shll
negb
imul
push
push
sahf
orb
pop
add
fldcw
inc
xlat
pusha
cmp
dec
inc
jp
and
dec
sbb
sbb
std
lret
int
sbb
in
loopne
in
mov
lahf
add
mov
imul
pop
adc
in
daa
cwtl
cmc
push
arpl
add
push
pop
out
jnp
flds
dec
sub
push
jecxz
in
mov
inc
repnz
jp
jnp
xchg
inc
sbb
cltd
pop
xlat
push
andl
cmp
arpl
inc
insl
adc
sub
xor
dec
es
cmpsl
lds
mov
push
push
inc
ljmp
pop
add
and
mov
insb
rcrl
or
mov
cli
je
les
sarl
mov
lock
mov
mov
and
xchg
jbe
push
dec
notl
bound
rcr
pop
mov
xchg
aaa
in
mov
add
gs
jbe
enter
sbb
jae
mov
fs
fiaddl
loopne
aaa
pop
or
cwtl
jg
mov
add
aaa
outsb
push
mov
call
lret
loop
mov
ja
inc
sub
sbb
sbb
nop
jnp
jne
mov
pop
ret
xorb
sbb
notl
mov
test
loopne
jnp
mov
lret
mov
lds
das
mov
popf
leave
insl
adc
and
mov
insb
mov
jo
push
sbb
cltd
mov
push
dec
gs
cli
loopne
xlat
jno
fists
push
mov
insl
mov
int
xor
xchg
popa
mov
imul
or
lods
fldenv
outsl
fldl2t
push
and
push
out
repnz
stos
xlat
pop
loope
or
or
dec
test
xor
outsl
and
inc
shll
out
shll
mov
popa
in
inc
sbb
mov
mov
cmp
insb
repz
mov
cmp
inc
mov
mov
je
test
lret
cmpsl
loopne
jbe
popa
arpl
js
ret
inc
fisttps
ljmp
daa
sar
daa
push
aas
sub
inc
leave
cs
jns
xchg
lret
out
into
push
push
jb
in
iret
adc
cwtl
enter
cld
push
xlat
pop
lods
push
push
test
adc
pop
pop
int
in
std
sub
xchg
in
rcll
stos
inc
adc
jmp
lods
std
bound
leave
push
stos
incb
ja
lock
or
add
mov
xor
jno
jno
adc
gs
lock
sbb
mov
cmp
js
mov
push
rorb
repz
mov
push
pop
adc
or
lock
xchg
gs
mov
pushf
sub
cmpsl
sbb
inc
outsl
mov
jecxz
xchg
xor
mov
mov
push
test
inc
sub
mov
pop
xor
fldt
inc
cmpsl
aam
roll
inc
movsb
lea
xor
pop
xchg
loop
sbb
dec
jecxz
xchg
cld
push
adcl
cmc
daa
das
add
sub
fs
std
xor
or
lret
dec
sub
sub
xchg
inc
test
jle
cmpsb
aam
pop
xchg
aaa
dec
mov
imulw
mov
rolb
sbbl
and
out
addr16
popa
leave
nop
ret
push
or
int3
cmpsb
lock
jg
pusha
test
mov
adc
lret
inc
sarl
popa
xor
nop
jle
es
test
lret
push
loope
mov
nop
jp
dec
jno
lods
out
scas
xor
into
pop
ss
add
or
push
mov
jge
dec
dec
and
outsb
rolb
mov
jg
or
nop
subl
aas
adc
pop
jmp
fnclex
subl
mov
fwait
sub
lea
adc
mov
inc
in
sbb
test
push
xor
jno
push
xor
scas
sub
aad
into
adc
mov
xchg
scas
jecxz
or
cmpsl
mov
aad
push
iret
cmp
aad
dec
and
shll
xlat
cltd
loopne
inc
stc
lcall
sbb
lret
enter
dec
icebp
test
je
sub
inc
sbb
mov
mov
xor
mov
inc
push
mov
mov
loop
je
dec
mov
xchg
lret
inc
push
dec
push
xor
adc
sbb
jl
pushf
pop
xchg
aas
mov
dec
test
or
and
jnp
add
cs
mov
rorb
addl
and
mov
jb
loope
fs
outsl
xor
cmp
lods
mov
std
lds
pop
insb
jp
xorb
jle
adc
sbbl
mov
jg
xchg
lahf
dec
inc
dec
mov
push
add
aad
pop
out
sub
and
testb
outsb
fnstsw
arpl
pop
sub
xchg
jno
pop
out
arpl
lock
add
sub
enter
sbb
ret
jp
push
stos
scas
cmp
mov
fistpl
in
and
ljmp
xchg
dec
mov
inc
jae
cltd
pushf
sub
add
inc
or
mov
mov
js
lea
and
pop
xor
imul
and
cld
fistpl
push
cmpsl
jle
sbb
lret
mov
push
loope
and
aad
arpl
push
mov
stos
dec
mov
xchg
popf
bound
gs
mov
xchg
ret
inc
call
adc
fs
cmp
rolb
movsl
or
adc
fnsave
cltd
and
fcompl
rclb
movsl
bound
mov
cmp
jmp
inc
sbb
cmp
inc
dec
in
shlb
daa
cld
dec
jbe
mov
dec
pop
pop
mov
lcall
iret
aas
cmp
jbe
hlt
xor
sub
push
cs
test
or
and
sbb
bound
fbld
arpl
jp
hlt
xchg
cmp
fsubs
loopne
xlat
adc
dec
lods
fstpt
add
mov
testb
test
les
je
insb
adc
jg
ds
or
push
pop
inc
test
sahf
push
fldenv
cmp
mul
mov
mov
sbb
pop
frstor
mov
push
push
push
jno
push
mov
sub
lock
adc
inc
sbb
fstpl
or
std
stos
ds
sti
pop
mov
ja
scas
adc
mov
xchg
out
daa
cmp
mov
dec
jno
dec
fyl2x
xchg
dec
adcb
add
dec
adc
stc
mov
inc
dec
sti
or
add
loope
lea
mov
lret
push
push
gs
push
out
sub
and
adc
sub
jecxz
sub
xlat
and
lock
sahf
pop
xchg
or
ds
xor
mov
data16
dec
push
ret
pop
je
and
push
pop
xchg
push
jns
cmp
cmp
inc
jbe
repnz
or
mov
roll
sbb
add
shll
or
add
jmp
fwait
jg
repz
call
rcrb
xlat
rcrb
arpl
sbb
imul
out
in
jmp
adc
sbb
mov
pop
out
repz
pand
fucom
jo
movb
or
sub
xlat
insl
lcall
sbb
mov
lahf
inc
dec
jns
unpckhps
aaa
movsl
sub
mov
addr16
and
mov
push
ficompl
push
adc
jne
jns
je
dec
imul
shl
mov
push
movsb
jo
jns
fnstcw
fucomip
loopne
jbe
out
mov
fsub
out
stos
lods
scas
push
and
icebp
ds
sbb
imul
mov
loope
jl
xlat
mov
into
sub
adc
mov
sahf
in
and
mov
mov
xchg
xchg
js
adc
or
xor
push
imul
outsl
or
insb
ror
shrl
outsb
jmp
pop
lock
cwtl
nop
sub
les
dec
push
sub
jae
cmp
mov
mov
xor
lahf
inc
sub
cli
push
mov
xchg
add
and
iret
fs
mov
ss
xor
or
xor
pop
mov
push
mov
out
addr16
cmp
jbe
stc
cld
or
mov
insb
and
jg
pop
dec
ret
add
xor
cwtl
add
jg
call
push
sub
adc
sbb
repz
scas
pusha
aam
cwtl
sub
out
mov
fdivs
and
cmp
insl
test
sahf
sbb
in
and
sub
enter
rolb
sub
cwtl
call
mov
cwtl
mov
jno
sbb
dec
pop
pop
lods
leave
mov
icebp
ret
and
dec
xchg
add
shlb
inc
cwtl
mov
xor
push
cmp
lea
sub
repz
xchg
or
mov
lretw
sbb
out
xchg
sti
cmpsb
inc
pop
or
pop
and
push
or
fs
mov
adc
fcom
dec
cmp
int3
rcrl
jecxz
clc
lret
push
popf
lret
not
lods
xchg
data16
shlb
mov
sbbb
jecxz
shl
stos
mov
scas
adc
mov
cmp
mov
cmpsb
cli
fcmovnu
leave
lock
lret
adc
jne
aad
jb
xchg
jbe
sbb
or
xchg
inc
aaa
fiaddl
ljmp
outsl
cmc
or
adc
lods
add
xchg
imul
aas
or
mov
mov
cwtl
sti
ja
fwait
mov
pop
add
push
adc
add
jae
jle
add
and
jo
add
pop
mov
insl
shll
jmp
jmp
mov
add
sbb
pop
xchg
clc
cs
fldcw
sub
inc
fmull
and
ja
data16
mov
test
enter
je
es
loop
test
out
ss
add
mov
lea
mov
out
pop
cmp
xor
jmp
rcl
stos
jmp
test
scas
mov
out
push
popf
fsts
push
sbb
gs
mov
test
daa
or
jne
jno
sub
sbb
jl
push
mov
jne
out
lods
fstp
dec
daa
adc
push
leave
sub
cmp
testl
fdivl
xchg
jns
inc
aas
xor
test
ljmp
xchg
cmp
hlt
mov
or
test
fucomip
pop
inc
jl
mov
repnz
cld
daa
and
or
pop
push
and
or
jge
pushf
pop
stc
invlpg
mov
cmp
sub
xchg
aam
rclb
std
push
push
sub
push
into
and
fildll
inc
jo
add
rolb
or
out
in
mov
fstpl
loope
std
outsl
jnp
shl
xchg
dec
adc
xchg
mov
and
out
xlat
sbb
cwtl
clc
xchg
fldenv
shll
dec
push
mov
cli
lcall
or
aad
dec
add
or
mov
pop
mov
jo
push
sbb
adc
loopne
or
loope
jg
fdivr
lods
js
sarl
xor
cmc
cwtl
ljmp
data16
cwtl
ret
xor
cmp
push
mov
fidivl
sub
je
into
stos
cmp
mov
xlat
es
push
scas
sbb
and
fadds
push
enter
push
pop
push
pop
rolb
cli
aaa
aam
lea
or
mov
shll
rcrl
and
bound
mov
push
out
xchg
bound
xor
nop
mov
ja
in
push
rcll
gs
mov
fs
inc
fucomip
cmpsl
repnz
lods
test
sub
and
shlb
xchg
cmp
test
sub
dec
pop
mov
sbb
lret
mov
add
aaa
in
cmc
push
adc
call
in
cmc
rol
addr16
mov
and
sub
ljmp
out
in
xor
xor
ret
imul
and
push
jp
in
faddl
loope
jp
sti
or
inc
jle
mov
sbb
test
adc
push
jns
add
inc
lds
dec
inc
add
lret
paddw
stos
xor
js
inc
aas
inc
jecxz
jmp
call
fcoms
mov
push
add
scas
out
fdivp
or
add
push
sbb
pusha
push
and
inc
testl
je
cld
mov
scas
mov
iret
mov
call
cltd
xchg
fcoml
pop
daa
jecxz
stc
ss
out
test
les
xor
aam
jecxz
push
jle
cmpsb
fs
pop
popa
out
int3
xchg
bound
push
sbb
cmpsl
fdivrp
sub
stos
push
scas
push
and
sahf
cld
inc
in
sbb
dec
mov
sub
mov
xor
insb
in
jecxz
cwtl
push
pop
sbb
shl
pop
lahf
daa
cmp
addb
sub
jbe
int
lods
std
mov
sbb
xchg
pop
rorb
fnstsw
pop
aam
lock
es
dec
test
mov
inc
in
nop
hlt
lock
pop
test
push
iret
test
daa
xchg
loop
mov
xchg
fiadds
jle
xchg
mov
xor
sub
cld
loopne
scas
test
in
cmp
mov
pop
and
mov
pop
mov
in
jge
xchg
cmc
cli
pop
test
icebp
pushf
add
fldt
xchg
out
mov
push
das
out
pop
cmp
lods
fists
rorl
adc
xor
xchg
ja
scas
imul
pop
int
mov
push
push
pop
xor
or
ljmp
int
or
cld
sub
je
fmull
js
jnp
push
jno
xor
push
cmp
outsb
hlt
lds
inc
add
lea
mov
icebp
mov
iret
jo
lods
rcr
stos
pop
fistpl
in
sub
cs
jmp
repz
xchg
lcall
push
cmp
add
jle
adc
inc
ficoml
xchg
mov
cs
stos
and
int
push
sbbl
jne
mov
inc
dec
and
push
rcll
adc
in
jns
inc
pushf
inc
jae
mov
inc
mov
mov
arpl
inc
jno
jns
inc
xchg
cmp
mov
xchg
popa
movsb
jns
sub
dec
pop
mov
pop
mov
or
arpl
or
jge
scas
xor
test
inc
les
xlat
sbb
ret
out
pop
inc
sbb
test
jl
push
lret
xor
cmp
mov
push
mov
pop
shll
fsts
pushf
iret
mov
shll
ja
add
test
xchg
pop
push
cmpb
jae
andb
inc
adc
sbb
outsb
sti
stos
fidivrs
jno
sub
and
mov
jmp
cmp
xor
cmpsb
in
xor
mov
icebp
xorb
sbb
mov
xchg
pop
divb
dec
xor
mov
negl
in
in
dec
cmpsb
jnp
or
pop
repz
outsl
scas
das
mov
push
add
xchg
and
in
cmpsl
sub
cmp
jle
mov
pop
cmp
insb
imul
dec
cmovbe
aaa
mov
mov
pusha
adc
ss
out
inc
sar
sahf
or
dec
mov
inc
jp
mov
inc
fistl
out
clc
xchg
cmp
sarb
fstp
push
mov
sbb
iret
adcb
iret
ljmp
pop
dec
dec
ror
xor
scas
xchg
test
sarb
nop
jns
mov
dec
pop
xchg
sbb
jbe
sbb
and
mov
ljmp
js
data16
call
ficomps
cmp
loopne
add
pushf
lods
cmpl
dec
pop
ljmp
enter
dec
xchg
mov
push
incl
gs
push
gs
movb
pop
jp
mov
and
pop
sub
xor
inc
mov
sub
jns
cld
xchg
imul
mov
mov
jecxz
push
repnz
mov
pop
call
sbb
clc
adc
push
dec
cmpsl
cmpsb
aam
add
mov
and
dec
lahf
pop
and
pop
into
imul
roll
iret
lret
test
es
aaa
mov
popf
inc
dec
roll
xchg
inc
ret
inc
mov
loope
data16
sbb
jne
mov
sub
lret
mov
add
movsb
add
mov
addb
ret
stc
push
ret
xchg
xlat
aaa
xlat
or
or
fstpl
jmp
and
ss
jl
icebp
cli
pushf
sahf
aaa
sarb
mov
pop
pop
mov
xchg
in
push
jmp
jle
adc
pop
ljmp
rclb
bound
out
sbb
mov
lret
mov
pop
ret
icebp
jno
jae
or
gs
ret
adc
sbb
out
dec
add
stos
mov
movsl
lods
in
xchg
push
aaa
addr16
addr16
aad
insl
sti
or
push
jb
mov
push
sbb
fstpt
xlat
mov
jle
into
mov
sub
into
mov
inc
jg
push
push
sub
add
sbb
bound
cwtl
add
jp
and
ffree
xor
je
xchg
sti
sub
and
jo
fcmovbe
and
das
adc
dec
adc
fsubr
mov
xchg
cld
xchg
mov
cmc
fadd
pop
repnz
ficomps
xchg
and
pop
rorl
inc
sbb
ljmp
cmp
scas
insb
xchg
or
enter
fidivrl
into
sub
je
cmp
je
xor
xchg
adcb
xlat
pop
mov
movb
xchg
sti
ss
in
mov
scas
fwait
aam
popa
cmp
insl
fs
mov
add
xchg
loop
popa
or
pop
sub
cwtl
xchg
sub
or
mov
hlt
cmpsl
popf
sbb
mov
ret
pop
pop
fnstcw
outsl
enter
pop
jmp
rclb
jnp
mov
jb
adc
inc
fs
out
add
sarl
lret
sti
xor
call
clc
push
je
mov
cmp
add
lret
jno
xor
push
int
cmp
sbb
or
inc
mov
mov
mov
out
stos
test
clc
xlat
incl
lods
jae
adc
push
cmp
jl
fdivrp
ds
dec
and
adc
push
push
push
cs
stos
mov
js
dec
jne
hlt
xchg
mov
nop
sub
mov
mov
mov
pushf
mov
inc
xorb
rolb
cwtl
pop
insb
je
cmp
negb
loop
inc
lahf
popf
das
jbe
and
sub
jne
nop
icebp
les
outsb
jb
jmp
mov
dec
aam
mov
add
mov
ljmp
push
add
arpl
or
pop
test
out
mov
aaa
mov
mov
xor
std
aad
out
mov
push
dec
dec
fs
or
sub
adc
loope
push
movsl
sti
lods
ds
repnz
ss
lret
cld
pop
imul
or
fcomi
cmp
adc
enter
mov
ljmp
sub
jle
movsl
into
xor
pop
mov
in
cmpsl
ja
cld
orl
out
pop
dec
inc
lret
ret
ljmp
cmp
xlat
es
lods
jo
testb
filds
fcomi
mov
and
jo
in
aaa
sbb
dec
or
xchg
cmp
in
loope
xchg
mov
pop
es
push
xchg
mov
aaa
jnp
jns
pushf
mov
xor
mov
sbb
push
inc
or
xorb
test
fwait
ret
add
jp
pop
mov
rclb
adc
mov
movsl
push
sbb
mov
xor
or
jle
dec
mov
dec
outsb
add
aas
adc
scas
push
mov
dec
sub
jecxz
mov
sahf
pusha
sahf
loope
mov
jmp
push
jbe
cwtl
mov
cs
insb
mov
pushf
jns
sub
loope
fadds
push
aaa
xchg
ds
daa
cltd
adc
push
pop
add
dec
add
sub
lea
jp
or
push
cmp
jmp
push
mov
fs
popa
aaa
mov
cmp
lods
daa
and
in
sbb
shlb
mov
in
int
data16
arpl
jae
out
into
movsl
xor
push
jno
and
inc
arpl
adc
ret
jno
cli
sub
sbb
mov
cmp
out
pop
decb
xchg
js
push
pop
mov
mov
mov
or
sub
mov
cmp
test
std
sti
xchg
pop
sti
mov
arpl
cmc
les
clc
add
fnstsw
xor
inc
xor
xchg
xchg
cs
sub
push
fdivl
mov
cld
das
lds
adc
nop
mov
fildl
shl
jp
sbb
andl
xor
mov
addb
mov
mov
inc
adc
ljmp
int3
jg
call
hlt
out
xchg
jge
jne
mov
scas
lret
cs
lret
jmp
or
pop
push
cmp
insb
hlt
mov
je
mov
push
jae
outsb
cmp
popa
cs
jb
jp
push
cmp
pop
pop
fiadds
xor
add
cmp
mov
outsl
enter
loop
call
in
adc
ret
aam
push
push
or
cwtl
jne
outsb
cmpsl
pminsw
ret
mov
inc
leave
and
push
loop
inc
insb
mov
and
xchg
pop
fsubl
mov
es
testl
into
adc
or
sub
mov
js
stos
dec
push
mov
mov
mov
dec
or
scas
xchg
insb
cmp
push
dec
pop
adc
shlb
ret
push
daa
lahf
sbbl
fdivrp
mov
fbstp
sub
ja
or
mov
xchg
xorl
cmpsl
cmp
lds
mov
sub
jp
mov
stos
ja
adc
pop
dec
and
dec
jo
dec
push
xorl
test
push
fs
add
testb
xchg
fisubrl
dec
cmc
add
xor
scas
cmp
push
mov
shld
adc
insl
sub
mov
mov
pop
data16
xchg
ljmp
nop
cmp
mov
loopne
pop
jnp
ss
stc
jmp
leave
adc
push
adc
imul
adc
fs
pop
jo
fldcw
mov
lods
sbb
lods
mov
and
xor
sbb
dec
daa
mov
xchg
cmp
add
mov
pop
jmp
fwait
and
pop
jg
addb
mov
or
cmpsl
cli
xchg
or
fwait
inc
xor
inc
aam
stos
pop
jle
jae
sbb
xor
cmp
jno
mov
inc
fbstp
dec
mov
push
sahf
cmp
aam
xor
rclb
mov
pop
ds
mov
mov
xchg
push
in
sub
loope
jb
movsb
fld
pop
and
mov
or
xchg
out
dec
scas
jmp
jns
mov
sahf
mov
clc
lock
ds
mov
lahf
pop
test
push
pop
mov
jge
xchg
dec
loope
dec
dec
stos
stos
push
pop
dec
scas
cmpsl
add
dec
push
cmp
pop
stos
je
aas
imulb
or
xchg
outsl
mov
out
nop
int3
xor
pusha
stc
cmpsl
imul
lea
xlat
movsb
pusha
and
lds
movsl
ljmp
pop
mov
cmpsb
fstpt
jns
addl
cmp
sbb
repnz
cmp
xor
in
stc
fisubrl
fwait
push
jnp
jle
in
cmpsb
mov
es
arpl
popa
adc
xor
lds
loop
adc
ljmp
xchg
mov
ret
aas
cmp
insb
insl
xor
pop
and
lods
imul
pusha
cmp
sbb
int
mov
ja
dec
sub
mov
jne
xor
and
xor
push
sub
pop
and
sub
jmp
cs
push
push
out
mov
mov
mov
add
jle,pt
lret
pop
push
test
dec
mov
and
or
or
xchg
in
sbb
int
mov
xchg
cmpsb
stos
popf
cli
cmpsb
iret
or
fbstp
test
xchg
lock
inc
inc
ret
xchg
inc
outsb
int3
push
mov
push
popa
sbb
scas
dec
aaa
aaa
insl
push
test
cld
popa
data16
or
daa
jge
sbb
test
mov
mov
jnp
cld
dec
dec
xchg
dec
sub
and
push
mov
adc
pop
or
leave
movsl
inc
add
mov
jbe
mov
les
push
mov
cmpsl
mov
xchg
mov
sbb
enter
inc
ror
cltd
mov
xor
sahf
or
data16
pop
fwait
and
ret
xor
js
cmp
and
js
pop
push
test
xchg
push
add
push
push
jmp
add
out
pop
mov
xor
pop
popf
push
cmp
jns
stc
sbbb
dec
fsin
cwtl
sub
adc
shl
scas
sub
dec
out
sahf
roll
out
shll
shll
mov
dec
pop
jl
aam
sar
fidivs
and
rol
sub
sbb
in
pusha
xlat
aas
pop
mov
addr16
jae
lds
stos
inc
add
out
cmp
das
out
fld
jns
xchg
enter
shrl
jp
push
nop
shl
fsubl
scas
sbb
stos
xchg
xlat
xchg
push
mov
jle
es
xor
cs
in
mov
jmp
pop
cltd
jo
and
lret
cld
cltd
test
jle
popa
aaa
add
test
add
sbb
pop
sbbl
xchg
xchg
jg
push
push
xor
jnp
cmpsb
xchg
jp
pop
ja
pop
lea
mov
inc
push
lea
outsl
add
jns
icebp
fwait
sub
mov
sbb
mov
sbb
lret
aaa
jg
lock
xor
push
or
cmpsl
xchg
in
jns
cmp
aad
aad
adc
xchg
xchg
mov
push
fstp
test
fcom
adc
sub
cmpsb
jmp
or
pop
mov
or
jbe
lret
add
cmc
movsl
cmp
mov
pop
pop
aad
cmp
shrb
stos
sbb
lahf
ret
aas
pop
das
mov
rcrb
lea
jno
mov
loope
push
sub
add
fistpl
pop
jecxz
lahf
add
mov
push
test
or
and
sbb
xchg
push
lods
sbb
xchg
cmp
sarl
test
dec
mov
or
out
lret
flds
daa
fyl2xp1
cmp
add
lcall
sbb
and
fisttpl
imul
dec
mov
dec
hlt
push
dec
mov
movsb
inc
jge
pusha
clc
in
aam
pop
imul
inc
dec
stos
xchg
mov
out
pop
cmp
pop
xor
loop
sbb
lock
xor
jo
xchg
popf
xlat
lret
test
popa
lock
add
add
imul
or
cwtl
xchg
push
pop
movsb
jae
or
adc
rcr
stos
sbb
mov
jnp
jae
jbe
movsb
test
xor
fcompl
cltd
lahf
dec
imul
sbb
jg
loope
test
jae
enter
xlat
dec
rclb
push
inc
adc
pushf
popa
cmp
es
subl
ret
test
adc
arpl
adc
push
movsl
subb
add
in
bound
sub
into
push
mov
sahf
int3
fcoml
and
mov
inc
dec
daa
ret
aam
pusha
pop
loope
and
movsb
jl
cmpsl
jmp
push
adcb
fstpt
aad
popa
cmp
test
mov
daa
inc
sbb
ret
pusha
out
fsubs
into
pop
popa
push
lds
sbb
sbb
xchg
push
jo
and
repz
mov
and
mov
xor
in
repz
fistpl
ljmp
xchg
repz
mov
sbb
cmpsb
rcrb
jb
inc
adc
dec
aad
jecxz
dec
cmp
pop
ja
test
push
inc
loopne
ljmp
jbe
mov
or
les
adc
stc
cmp
xchg
pop
stc
int
ret
lahf
call
call
xchg
clc
jecxz
mov
xor
inc
scas
cmp
ja
sti
aad
push
hlt
fistl
shll
xor
xlat
inc
mov
imul
dec
cmpsb
xlat
mov
stc
sub
mov
mov
ss
bound
mov
mov
push
push
arpl
xor
mov
outsb
cld
nop
dec
mov
stos
ljmp
loopne
sti
sarb
movb
add
or
sub
fwait
int
push
mov
inc
aaa
push
jne
cmc
cmp
push
pusha
xor
bnd
es
push
aad
sbbb
dec
movsl
pop
out
rorb
sahf
mov
push
sbb
fcompl
faddl
sub
jl
xchg
fs
stos
mov
aam
hlt
or
sub
adc
and
sub
adc
jge
aad
pop
jp
or
movsl
std
sub
addr16
insl
leave
sbb
out
dec
xchg
jo
fldl
imul
cmp
jmp
mov
insb
out
pop
sbb
es
ds
repnz
inc
rolb
sbb
fstpt
popf
jmp
mov
clc
ret
imul
xchg
jge
int
fstpl
js
cmp
outsl
test
js
icebp
dec
pop
dec
xchg
pop
dec
js
das
fcomp
dec
shrl
pop
cmp
adc
inc
into
in
scas
sbb
xchg
daa
xchg
divl
dec
push
push
xor
pop
cwtl
xchg
aad
or
jo
sub
jnp,pn
cmc
xchg
sub
js
out
cmp
dec
mov
dec
or
inc
xor
xor
jne
fistl
cmp
int
mov
push
aam
ss
loopne
mov
popf
mov
aas
in
adc
mov
sub
mov
ljmp
imul
and
mov
stos
lock
mov
and
not
xchg
push
mov
mov
push
les
xchg
lods
mov
push
jg
cmpsl
nop
enter
xor
loopnew
inc
xor
and
pop
adc
jne
adc
loope
int3
mov
sub
in
stos
jecxz
push
xor
sub
xor
scas
pop
pop
imul
push
adc
outsb
cmove
vandnps
incl
call
lods
xchg
sbb
cmp
jb
shll
das
nop
insb
push
cld
ja
sbb
aaa
shl
les
push
xchg
arpl
outsb
enter
sbb
add
fwait
imul
pushf
in
cmpsb
fimuls
pop
mov
push
ss
or
inc
dec
rcl
xlat
sti
add
dec
jo
lahf
adc
xor
dec
sub
dec
out
pop
cltd
lahf
enter
fiaddl
hlt
xchg
popl
imul
das
lods
nop
pop
cmpsb
pop
or
mov
pop
mov
insb
and
movsl
add
pop
ret
sub
ret
outsl
rcrb
or
call
fwait
jns
movsl
out
jnp
imul
rol
icebp
push
mov
pop
arpl
shlb
ret
push
xorb
cmp
ja
jl
jo
inc
popa
imul
or
test
xchg
pop
movsl
leave
mov
clc
xchg
pop
imul
xor
mov
jnp
pop
pop
push
mov
cmp
pop
lret
add
int
xchg
lea
outsl
and
cmc
jl,pn
add
mov
jmp
and
pop
push
push
jg
xchg
cmp
shlb
sbb
stc
add
inc
js
xchg
adc
jno
adc
int3
add
pop
xlat
push
mov
or
add
addr16
jmp
and
movsb
jnp
push
jbe
sbb
and
push
pop
push
add
jne
adc
sti
aam
fisubrl
sarb
scas
fimull
cmp
mov
jb
je
ja
mov
ja
cmpsl
enter
dec
and
std
push
push
and
pop
shl
xchg
loope
inc
push
mov
pop
das
sbb
jg
dec
lahf
pop
mov
insb
jl
xor
stos
fwait
div
pop
push
sahf
fisubrs
aad
and
out
jnp
cmpsl
in
test
leave
push
push
loop
jge,pn
adc
push
xor
movsb
imul
testb
xchg
call
mov
lods
dec
stc
lret
push
or
mov
adc
mov
sbb
int
or
fs
sub
xchg
faddp
rcl
mov
inc
mov
iret
mov
ja
push
pop
sbb
int
clc
scas
int
cmpsb
stc
jns
mov
mov
jl
xor
pop
jg
add
lret
mov
inc
lds
cmp
xchg
int3
lea
or
in
fists
add
sub
sbb
and
sbb
hlt
xor
jno
xchg
mov
add
cmc
push
and
mov
dec
leave
adc
push
pushf
mov
dec
mov
or
push
mov
leave
mov
push
sbb
jp
arpl
lea
and
movsb
cmp
js
fwait
fs
fs
and
loopne
dec
mov
xchg
sub
fisttpl
scas
ss
mov
cmp
inc
jnp
push
dec
push
xchg
popf
or
sti
stos
popf
fidivl
stc
cli
jae
imul
inc
or
out
aaa
sahf
push
and
add
fcomps
or
popa
push
xchg
icebp
pop
add
aam
bound
into
andl
mov
dec
int
push
in
mov
dec
push
sbb
stos
push
stos
fwait
mov
jno
mov
sub
xchg
neg
add
sbb
test
sbb
out
inc
inc
shlb
add
stos
pop
and
into
lods
imulb
loope
test
int3
test
dec
mov
int
aas
icebp
sbb
sbb
mov
dec
mov
rcll
mov
test
je
pusha
push
es
fadd
lsl
std
and
bnd
mov
gs
push
sub
mov
mov
icebp
movsl
dec
stos
push
push
addr16
insl
orl
int
xlat
push
fidivl
xor
in
hlt
jl
ret
xchg
pop
aas
xor
enter
mov
mov
sub
mov
jecxz
shlb
inc
push
cmp
sbb
cmp
xor
mov
dec
out
mov
mov
mov
xor
repz
jne
add
cli
jae
mov
cwtl
subl
or
in
dec
add
xor
xchg
lcall
gs
xchg
stc
ret
fstpl
test
xlat
gs
adc
and
inc
xchg
ljmp
iret
add
jecxz
sbb
xor
pop
dec
ljmp
shr
mov
cwtl
ja
cmpsb
sub
fnop
push
fwait
xchg
jae
mov
shlb
mul
popf
xor
iret
or
lcall
daa
ljmp
hlt
lods
rclb
not
fdivr
lods
pusha
imul
mov
andb
shlb
jmp
jl
pop
add
fadds
pop
lret
clc
push
leave
test
dec
loope
sbb
pop
xchg
lret
cmpsb
inc
and
leave
fdivrs
std
jnp
add
idiv
push
clc
pop
mov
sti
mov
pop
jae
sahf
bound
sahf
scas
add
icebp
fsubl
scas
xchg
rcrb
loopne
ss
mov
popa
sbb
cmpb
je
sbb
popa
insb
std
pop
cmp
test
es
lret
sub
pop
xlat
cmc
cmpsl
aad
add
and
mov
sub
iret
jle
mov
pop
cmp
fwait
xor
sbb
in
and
or
mov
push
adc
push
dec
xor
mov
sub
jo
ret
mov
pop
lods
mov
ds
scas
jg
and
push
pushf
jnp
xchg
sub
imul
pop
out
push
cmp
aas
xor
out
movl
insl
in
jo
sbb
rcrb
lods
stc
pop
inc
adc
or
ljmp
push
cmp
lret
popf
das
mov
xchg
jo
icebp
mov
daa
mov
xchg
mov
dec
jo
or
aam
leave
pusha
xor
lods
enter
cltd
leave
stc
lahf
xchg
clc
dec
nop
or
and
mov
imul
xor
cmp
out
xor
xor
popf
imul
fdivr
faddp
xor
les
mov
call
aas
mov
sub
lahf
xorb
aas
xchg
jmp
inc
push
jb
nop
cli
dec
pop
add
adc
mov
push
repnz
add
movsb
orl
or
mov
insl
add
imull
xor
mov
pop
iret
mov
dec
jbe
adc
adc
jns
jg
jae
ficoms
shlb
push
or
cmp
dec
mov
sub
xchg
stos
inc
push
mov
add
adc
fstl
push
mov
adc
jnp
into
loop
sbb
xor
int3
xchg
push
sub
stc
test
outsb
mov
add
cli
inc
and
jne
hlt
inc
ror
push
rorb
fs
ds
data16
rcl
xchg
inc
pop
das
mov
ljmp
cmp
dec
pop
fbstp
pop
and
adc
cld
loop
lock
test
loope
lret
sti
inc
outsl
in
test
jb
sub
pushf
mov
xlat
mov
mov
inc
mov
mov
stos
repnz
jbe
ja
ljmp
cs
arpl
sbb
aam
outsb
loope
mov
sbb
jns
inc
add
push
add
jl
scas
pop
pop
bound
push
xchg
dec
imul
cmp
cmp
dec
loopne
outsb
jl
adc
mov
xchg
and
inc
jo
sahf
test
add
adc
dec
ss
int3
add
add
cmp
cmp
ds
mov
icebp
and
clc
andb
and
in
inc
push
loope
ss
push
arpl
dec
adc
out
aam
cltd
sar
inc
into
xchg
push
les
push
int3
pop
sub
cmp
cmp
jo
mov
jecxz
mov
mov
jge
in
cmp
mov
mov
mov
fnstcw
scas
imul
inc
lret
jns
ja
mov
loopne
in
stc
xchg
std
jg
pop
dec
push
test
cmp
outsl
jmp
mov
adc
xor
pop
test
enter
sub
lret
xchg
int
sti
xor
dec
xchg
es
jecxz
clc
mov
ss
cmp
cli
out
add
fwait
pop
aas
push
js
fstps
fwait
orl
inc
adc
mov
ret
jmp
clc
sbb
jb
jno
je
add
jecxz
xchg
mov
fistpll
outsl
nop
fistps
mov
or
cli
icebp
mov
jno
jbe
inc
out
dec
imul
xor
cmpsl
push
aaa
mov
in
aad
adc
scas
popf
or
mov
sbb
inc
sti
movsl
push
cmp
jb
rorb
sub
or
add
mov
loope
rdmsr
popa
add
cmp
jp
jmp
cmp
test
loope
mov
test
loopne
insl
nop
pop
data16
or
pop
in
nop
pop
lods
pop
add
sub
jecxz
xchg
cld
inc
mov
std
stos
push
in
inc
xchg
push
dec
sbb
mov
lock
imul
jb
cs
rcrb
mov
pop
mov
jl
sbb
xchg
push
js
mov
mov
mov
sub
mov
xchg
addl
jl
insl
mov
orb
repz
in
cs
repz
cmp
pushf
cwtl
mov
add
ljmp
mov
subb
mov
lods
lret
aas
div
xchg
stos
xchg
js
js
or
aaa
cs
adc
adc
stos
mov
leave
fcomps
inc
rorb
in
jle
testl
xchg
mov
test
sti
and
test
push
shll
es
ret
cmp
rcrl
add
jecxz
cmp
push
ficoms
dec
es
xchg
lcall
ret
sub
cmp
xchg
mov
or
ret
ret
shrb
testl
ljmp
icebp
mov
js
add
out
nop
and
mov
cwtl
mov
push
xchg
addr16
inc
add
xchg
call
stc
les
mov
xor
clc
sarb
sbb
add
sti
push
loop
jmp
mov
inc
dec
test
push
aas
movsb
hlt
ss
mov
fmull
shll
daa
adc
icebp
arpl
xchg
jnp
daa
fdivs
lahf
xchg
and
leave
fldl
cmc
frstor
nop
and
enter
jb
repz
pop
rcrl
nop
push
dec
inc
push
jl
xlat
add
xchg
ret
jl
or
dec
or
xchg
pop
sar
push
or
leave
xchg
inc
in
push
sub
adc
inc
sub
scas
lcall
push
mov
not
pop
andb
shll
shl
pop
mov
je
dec
movsl
add
pushl
mov
jl
int3
jbe
mov
cmp
and
adc
ja
es
fstp
inc
fwait
add
mov
push
dec
or
mov
mov
lcall
idivl
and
mov
xor
jno
mov
xorl
shr
jo
mov
ret
int3
arpl
out
cmpsl
dec
sarl
dec
adcl
dec
push
push
pop
or
or
lods
scas
jne
push
out
jae
jo
inc
inc
dec
scas
cmpsl
or
idivl
adc
dec
cli
push
cmpb
cmp
enter
pop
cmp
cmp
push
loop
movsb
cmpsb
push
xor
roll
xor
push
sub
iret
out
add
ret
cmpsb
mov
adc
repnz
mov
fsubl
inc
fists
fwait
cwtl
popa
mov
inc
lods
mov
or
mov
rorb
inc
adcb
sarl
sub
add
mov
push
inc
cmp
cmp
jg
push
test
pop
jnp
or
lds
aad
and
mov
fcoml
dec
imul
jl
mov
sub
enter
fsub
jo
pop
xor
xchg
xchg
call
mov
lea
out
out
nop
test
fmulp
mov
add
inc
dec
jns
lock
mov
push
shlb
mov
ljmp
xchg
shrl
pop
das
shr
rcrb
pop
jg
mov
loopne
into
and
dec
lret
in
or
imull
enter
adc
icebp
clc
imull
ss
ret
xchg
mov
jo
xor
mov
daa
mov
dec
dec
fwait
jns
mov
cmpsl
in
mov
push
vcmppd
cmpsb
inc
out
mov
inc
lea
and
adc
xchg
xlat
jle
mov
push
pop
adc
or
sbb
jp
lea
scas
sbb
popf
xsaveopt
add
dec
xchg
add
sti
shr
js
ds
sbb
xor
pop
es
cmp
jg
int3
push
loop
ds
xchg
adc
inc
or
cmp
iret
jmp
cld
jne
scas
loope
inc
fisubs
xchg
shrl
mov
dec
mov
adc
add
aad
popa
mov
out
mov
loop
add
fnstsw
aam
lods
inc
dec
cmc
add
out
xchg
aam
jmp
data16
orb
jle
xor
aaa
jecxz
pop
xchg
gs
mov
xor
mov
or
jecxz
into
pop
adc
ja
push
ja
sbb
int
fstpt
rolb
cmp
leave
xor
push
iret
xchg
add
xchg
jmp
jecxz
test
xor
add
xor
outsb
dec
pop
adc
mov
int
or
jmp
inc
or
mov
fs
xor
inc
cld
jns
xchg
fnstsw
outsl
ljmp
mov
insl
mov
mov
insl
int
dec
sbb
sub
rorl
repnz
push
ss
sti
scas
imul
test
mov
inc
ret
movsb
leave
sbb
mov
pop
loope
dec
enter
xor
mov
enter
and
sbb
movsl
test
fs
push
pop
data16
into
popf
adc
cwtl
fldl
ljmp
ret
xchg
ret
cwtl
cmc
adcb
sbb
add
and
call
arpl
mov
loop
stos
push
scas
cwtl
and
jnp
lahf
inc
mov
inc
sub
mov
cli
sub
fadds
push
outsl
por
jae
insb
les
sbb
mov
xor
or
pop
dec
les
push
std
sbb
aaa
sbb
fwait
pushf
push
dec
lock
test
out
je
das
hlt
jmp
cmpsb
insb
shrb
dec
enter
lods
xchg
lods
es
das
mov
lods
add
mov
fwait
push
pop
jge
and
in
adc
in
xor
movl
push
mov
mov
inc
ja
push
imul
in
pop
nop
push
sub
scas
pop
icebp
mov
sub
aad
fwait
inc
inc
mov
mov
daa
xlat
insb
mov
lcall
fnstcw
jecxz
mov
aam
push
push
shll
mov
mov
and
xor
jno
in
testl
push
mov
sub
pandn
loopne
jecxz
bound
inc
inc
mov
mov
sbb
aam
movsb
insl
aam
std
lret
sbb
mov
lret
nop
rcl
jbe
pop
add
jae
adc
sub
xchg
mov
arpl
xchg
dec
adc
push
inc
push
pushf
je
aam
mov
xchg
hlt
push
jne
ljmp
add
enter
out
sub
xchg
int3
inc
push
ret
and
int3
call
push
lret
push
mov
ds
push
fisubs
loopne
mov
call
out
adcw
insb
push
xchg
clc
push
cmp
xchg
test
inc
push
sub
and
out
in
aaa
jle
pop
ds
fwait
cmp
dec
push
stc
push
xchg
sar
xchg
js
pusha
lcall
ljmp
sub
cmp
mov
jbe
dec
and
jae
mov
xchg
jge
js
mov
mov
pop
jmp
inc
add
aas
lahf
mov
push
fsubrp
jge
jge
shll
push
push
mov
inc
jle
cmc
pop
and
pop
push
push
push
lahf
adc
lods
test
and
enter
or
out
dec
imul
lahf
sbb
pushf
std
out
sub
lock
mov
ret
loopne,pn
lret
inc
enter
fisubs
call
dec
inc
xchg
mov
sbb
sub
cmpsb
or
lods
mov
mov
movsb
pop
pop
jl
adc
stos
bound
add
push
or
or
and
test
iret
mov
icebp
dec
ds
or
xchg
outsl
dec
mov
bound
push
xor
rorl
pop
pushf
mov
movsb
pushf
push
dec
adc
ret
dec
sbb
mov
add
leave
mov
ret
out
adc
call
or
ds
lret
add
sub
adcl
insl
or
je
lock
subb
data16
pop
cmpxchg
aam
stc
pop
out
xor
pop
sahf
dec
mov
cmp
lret
sub
xor
inc
in
shrl
rcl
aam
and
dec
mov
jne
adc
fistpll
fbstp
mov
lock
movsb
push
or
mov
repnz
push
jl
xor
adc
je
aam
nop
fs
es
in
into
aas
lcall
add
inc
sti
fildl
mov
and
push
push
ficoml
push
mov
sub
pop
scas
int
mov
jne
loope
fnsave
test
xor
cmp
mov
int
or
push
cwtl
in
push
and
rcrl
xorl
cs
pusha
xchg
outsb
jp
aad
loope
iret
lret
sbb
cmp
out
push
outsl
cmpsl
shlb
cltd
mov
add
xor
imull
and
adc
enter
xor
stos
pop
dec
sarl
xchg
fiadds
je
sub
rclb
arpl
add
mov
movsl
test
pop
xchg
repz
adc
pop
xor
mov
push
jp
mov
aam
adc
sbb
xchg
dec
sub
or
test
jnp
push
cmp
fcmovne
lret
mov
lock
jge
mov
sarb
cmc
or
mov
pushf
stos
jns
jp,pt
mov
movsb
jge
mov
jle
es
test
lods
push
xchg
fisubrl
mov
add
bound
push
stc
mov
insb
or
mov
lea
mov
mov
add
and
push
out
add
scas
test
iret
mov
push
sbb
cwtl
lds
and
adc
cmp
mov
in
xor
dec
popf
testl
cmpsl
sub
scas
mov
push
inc
ret
jo
push
imul
sub
sub
cmp
cmc
xchg
xchg
push
fwait
add
scas
hlt
outsb
jmp
push
jp
popf
fs
pushf
std
jbe
add
leave
adcl
jb
dec
pop
lods
adc
sti
xor
scas
mov
iret
outsl
push
pop
or
bound
in
out
mov
sahf
jge
punpcklbw
loopne
fildll
aam
mov
cmc
sbb
lcall
inc
insb
fwait
sbb
cmpsb
mov
stc
or
lret
xchg
adc
mov
mov
jmp
inc
dec
cmc
and
or
inc
add
lcall
lods
cmc
sbb
push
push
inc
mov
inc
jbe
or
or
leave
xor
imul
inc
mov
dec
push
in
enter
jle
inc
inc
mov
jbe
fdivrp
mov
mov
decb
pop
mov
or
add
out
mov
mov
repnz
cmp
les
push
and
push
stc
jmp
loop
js
lods
or
jo
loopne
hlt
fldl
or
ret
push
sbb
fwait
aad
rcrl
popa
cmpsb
loop
dec
push
repnz
insl
sahf
add
mov
dec
pop
jecxz
mov
mov
jne
stc
testb
jns
out
aad
sbb
in
sbb
add
nop
pop
sbb
cmp
fistpll
pop
fstpt
push
call
cmp
push
jl
or
test
ja
add
inc
mov
ja
fwait
mov
jecxz
xchg
add
daa
cmpsl
inc
ds
jns
test
lock
shl
jo
or
inc
jnp
cltd
mov
mov
int
jecxz
pop
je
cltd
add
push
mov
mov
movsb
pop
ljmp
add
stos
shrb
js
jmp
xchg
and
mov
push
outsb
enter
sub
push
lcall
push
inc
iret
mov
add
cmp
cmc
sub
rorb
jno
mov
sbb
int
pop
pop
inc
push
jmp
add
daa
xor
stos
pop
fisubrs
pusha
rcrl
lods
push
dec
cltd
int
clc
mov
mov
ljmp
aas
xchg
or
xchg
jnp
mov
pop
int
shrl
stos
cltd
push
icebp
cwtl
or
cvttps2pi
out
mov
mov
lock
outsb
sub
dec
mov
testl
dec
mov
lds
add
pop
hlt
sub
aad
and
pop
fnstenv
or
les
mov
xchg
fsubr
pushf
movsl
pop
ret
cmp
mov
gs
in
test
fiadds
and
inc
mov
pusha
mov
pop
jb
cmp
inc
iret
or
jp
fs
xchg
xchg
sub
int
cmp
fsubl
pop
jp
sbb
sarb
push
cmp
testb
std
repnz
dec
into
cmp
lock
dec
in
pop
insl
lar
icebp
out
push
loope
daa
mov
std
fbld
pop
or
inc
sub
cltd
rcrl
add
xchg
xor
orl
add
push
js
xor
gs
in
push
rcr
inc
jge
mov
fs
sarb
mov
ret
ja
adcb
fyl2x
and
fucomip
xlat
loopne
and
nop
sbb
test
mov
mov
pusha
sbbb
pop
inc
mov
pop
fs
decl
inc
lock
adc
or
push
or
xor
scas
js
loop
and
adc
fstpl
pusha
hlt
lcall
sar
outsl
hlt
dec
inc
cmpsl
pop
inc
push
mov
insb
je
aad
sbb
and
inc
ret
repnz
loope
pause
cmp
out
mov
cmp
addr16
dec
mov
test
add
arpl
imul
push
fbstp
xor
ds
outsb
xor
dec
jb
outsl
jne
mov
push
out
int3
scas
pusha
hlt
add
jbe
cltd
mov
hlt
xchg
jge
adc
cld
lahf
es
out
icebp
loopne
test
adc
pop
fmuls
xchg
mov
mov
loopne
pop
mov
mov
faddl
jnp
roll
jno
add
scas
cli
nop
int
jns
loop
adc
mov
lcall
aam
and
lods
rcr
jb
sbb
and
xor
das
loop
push
and
cli
cwtl
and
dec
cltd
shrb
inc
enter
nop
sti
mov
xlat
mov
shlb
add
push
lods
sub
loop
scas
mov
push
or
pop
lock
pusha
jmp
xchg
data16
lea
xchg
cmp
sbb
cmpsb
pop
mov
inc
sub
and
test
jmp
and
ljmp
push
test
ret
outsb
rep
push
les
mov
pop
lods
mov
mov
push
xor
ds
fs
popa
xlat
sub
cmp
mov
aam
mov
stos
push
lds
cwtl
test
hlt
mov
leave
sahf
pop
adc
ds
subb
mov
outsl
imul
and
sahf
cli
mov
inc
and
and
mov
dec
pop
aad
js
loop
cmp
push
ja
incl
adc
xor
mov
sub
pop
jecxz
sti
xchg
enter
mov
insb
sbb
lds
lods
add
ficoms
sbb
sbb
out
in
dec
lods
lods
mov
cmp
sub
loopne
pushf
jg
add
xor
testb
pop
arpl
clc
inc
and
mov
xlat
cmc
xchg
rolb
xchg
fdivr
mov
mov
and
movsb
dec
sbb
xchg
mov
scas
dec
mov
lea
inc
inc
dec
adc
adc
mov
mov
clc
mov
ja
xor
mov
pop
xor
js
shr
pusha
xchg
cmp
mov
mov
mov
out
icebp
imul
and
jle
mov
pop
dec
fimull
mov
and
jecxz
push
loopne
sub
mov
rcrl
in
mov
fucomi
mov
push
cld
xor
xchg
and
mov
sub
xor
or
adc
sar
lods
lret
test
lcall
ret
xchg
cld
cmp
dec
mov
mov
sbb
int
scas
jae
sub
jmp
dec
aad
jmp
push
pop
mov
jno
or
stos
inc
and
popa
or
adc
rclb
outsb
fwait
sbb
dec
faddp
push
inc
adc
xor
mov
cmc
push
gs
mov
pop
mov
enter
addr16
enter
xchg
mov
pop
cmc
or
lods
pop
and
mov
cmp
inc
enter
add
fstpl
inc
or
pop
xor
jb
dec
sub
fbld
aaa
stos
sarl
sar
movsbl
mov
dec
dec
jp
out
sub
hlt
cltd
scas
mov
push
mov
mov
sub
les
pop
jp
scas
rol
add
test
jns
dec
movsl
inc
mov
imul
xchg
pop
sbb
hlt
ds
dec
jo
jmp
sbb
jbe
pop
repz
ds
pop
lret
mov
ficoms
addr16
cmpsl
shll
cmp
dec
scas
xorb
lods
rorl
jo
repnz
subl
aam
adc
jns
insl
sahf
lea
lea
mov
cmp
xchg
inc
movl
dec
lea
subl
pop
test
and
cmp
and
sub
cmpsl
sub
jo
or
test
cmpb
xchg
rol
jns
pop
dec
mov
and
sahf
fldt
jbe
mov
add
pop
sahf
push
fadd
insl
jns
jmp
adcb
cmp
jae
enter
sahf
arpl
sbb
xor
xchg
xchg
sub
jmp
xor
push
sbb
cmpb
in
rcl
adc
leave
shrl
je
inc
push
test
jo
dec
sub
test
in
jge
and
or
push
add
sub
lret
mov
and
mov
movsl
sbb
popf
push
rorb
inc
lahf
repnz
xchg
ss
ret
xchg
add
mov
mov
mov
out
dec
ja
push
pop
mov
mov
data16
mov
push
sbb
enter
jecxz
clc
cmpsb
es
sbb
cwtl
outsb
jmp
shrb
rolb
test
fsubrp
sub
push
iret
and
push
xor
xchg
hlt
sub
aad
dec
cmpsl
fnsave
dec
xor
nopl
lcall
or
lcall
outsl
push
xor
adc
psubq
mov
orl
jp
jl
pop
sti
lock
jmp
push
sub
leave
add
inc
fidivl
dec
jle
cmp
add
push
push
mov
adc
pop
imul
adc
inc
xchg
sub
sbb
pop
fucomip
adc
mov
daa
xor
enter
cmp
jmp
loopne
cmpl
sbb
and
stos
mov
lock
jmp
stc
mov
pop
pand
dec
mov
inc
lods
pusha
mov
mov
xchg
mov
push
addr16
sub
mov
inc
cmp
and
stos
and
bound
repz
dec
loop
jp
xor
cmp
adc
ss
cs
cs
xchg
pop
in
unpckhps
hlt
es
std
xor
sarb
ret
fwait
jmp
les
arpl
ret
and
inc
push
adc
popa
imul
ja
mov
fs
std
cmpsl
add
ja
in
cmp
out
sub
xor
push
cld
in
js
ds
repnz
lret
inc
and
clc
scas
testb
stc
insl
cmc
lahf
je
shlb
mov
inc
stos
scas
shlb
xchg
js
inc
mov
int3
adc
sub
or
subb
mov
mov
mov
dec
adc
aas
and
stos
insl
pop
jns
ja
icebp
mov
xchg
cmp
stc
stos
outsb
dec
and
xor
inc
xchg
adc
sub
add
cmp
push
mov
movsl
call
mov
ljmpw
cmpsb
jnp
inc
sti
cmp
sub
cld
iret
test
xchg
dec
test
sbb
and
js
lcall
jae
dec
out
push
and
mov
pop
nop
mov
pop
pop
data16
rol
jae
imul
jecxz
lock
sub
scas
inc
fwait
nop
cli
adc
adc
cld
sub
mov
inc
repz
or
lcall
jl
mov
push
dec
rcrl
and
jb
ss
dec
xchg
cmpsl
inc
testb
jno
jge
mov
mov
test
mov
cmp
and
cld
stos
aaa
add
shr
and
mov
pop
iret
mov
dec
cld
dec
enter
or
std
xchg
inc
xchg
popf
mov
sar
mov
jecxz
lds
stos
test
jbe
add
into
stos
cs
jp
mov
cmp
add
je
fcmovbe
inc
xlat
xor
lahf
pop
test
sbb
popf
jnp
pop
imul
aad
mov
push
dec
mov
clc
ljmp
and
xchg
pop
push
adcb
sbb
iret
ret
sbb
adcl
xor
mov
clc
or
jb
out
push
adc
sbb
test
fisttpl
pop
mov
rorb
daa
adc
xlat
inc
jge
fstps
pop
mov
dec
je
jae
shrl
and
or
pop
jg
pop
aad
push
fsubr
fdivrp
scas
lds
into
scas
sbb
dec
ficompl
push
mov
lcall
cmp
fmul
iret
into
repz
movsl
mov
mov
ljmp
daa
int3
cmp
popa
fidivrs
scas
sub
movsb
fdivrl
cs
and
sub
jbe
adc
adc
js
test
mov
jae
inc
dec
dec
or
in
scas
dec
push
jge
or
stc
jo
mov
dec
shrb
sti
dec
adc
jmp
mov
js
in
call
mov
xchg
dec
cmpsb
sbb
lret
cltd
push
fwait
imul
out
imul
fcomps
je
mov
dec
or
in
sbb
fistl
add
and
int
in
jnp
cli
mov
jbe
movsb
sub
mov
push
mov
aad
subb
inc
lock
or
lods
add
pop
pop
mov
pop
cmp
setle
incl
loop
fldt
jb
xchg
mov
daa
push
dec
add
sti
ret
cmp
push
gs
inc
mov
xor
mov
add
cmpsl
sbb
in
mov
addl
popl
rcrl
mov
scas
cmc
xchg
jl
pop
sti
sar
jne
fisttps
sub
das
pop
mov
imul
and
ja
repz
shlb
xchg
jle
inc
loope
in
cmc
xor
jecxz
gs
jnp
call
jecxz
cmc
dec
mov
in
loope
aad
jp
mov
mov
rcrb
fs
fisubl
sbbl
mov
aas
and
fdivr
sti
or
mov
stos
fistpl
sub
popa
inc
xor
dec
cmp
push
or
loop
push
and
pushf
adc
data16
mov
rcrl
inc
roll
cld
subb
adc
cld
mov
push
or
aam
sbb
and
loope
test
pop
or
inc
dec
test
mov
fldl
sub
mov
stos
pushf
push
or
push
hlt
push
cmp
aad
cli
enter
leave
fldt
rcrb
out
sbb
add
xor
icebp
push
imul
ljmp
sbb
pop
test
sub
xor
rclb
jg
leave
cwtl
out
inc
cmp
push
fsubrl
sub
dec
sti
dec
sbb
dec
adc
test
bound
inc
sti
mov
dec
mov
sub
pop
sbb
pop
mov
loope
pushf
shll
xchg
out
push
dec
or
or
loope
popl
push
stos
cltd
sub
scas
mov
jg
dec
jmp
in
enter
rcrl
movaps
popa
scas
and
or
arpl
sub
in
xchg
mov
shll
loop
popf
xchg
mov
jg
mov
xor
cmp
or
popf
loope
mov
jl
test
lods
das
sub
out
dec
sub
aas
arpl
out
jmp
or
into
shrb
es
lcall
xchg
cmpsb
xchg
mov
mov
call
inc
or
push
fwait
push
add
mov
add
dec
cwtl
outsb
sbb
shll
pusha
and
xor
cmp
adc
push
aas
adc
xchg
dec
mov
xchg
push
adc
mov
ja
test
pop
mov
push
sub
or
xlat
mov
mov
sub
pushf
in
jbe
xchg
cmp
or
out
in
fmull
inc
pop
ljmp
sbb
pop
int3
leave
loopne
inc
mov
cmp
mov
jle
mov
jns
sbb
jno
loop
scas
loop
jno
sti
dec
mov
loope
cmpsl
jae
mov
frstor
dec
xor
adc
mov
push
addr16
daa
cld
gs
stc
movsb
call
jge
addr16
sbb
add
jp
adc
sub
pop
scas
cmc
mov
sub
mov
cld
pop
mov
dec
repnz
test
mov
sarb
rcll
inc
inc
or
lea
xor
idivl
ret
les
jmp
dec
ret
lret
sub
js
cmp
or
test
mov
iret
push
xor
cmpsb
xchg
pop
pop
mov
fildll
mov
bound
shl
mov
out
pop
dec
push
inc
out
out
outsb
dec
lcall
push
mov
jb
in
orb
out
cmp
cmp
out
jl
aaa
and
push
int3
add
jae
push
or
aad
lcall
inc
xor
repnz
adc
aam
lea
mov
bound
iret
mov
gs
dec
dec
xchg
jne
and
mov
adc
notb
rorb
vpaddb
xchg
jne
jno
popa
dec
outsl
xchg
sub
aaa
outsb
cltd
out
cmp
pop
push
sti
sub
fisubrs
out
fcoms
mov
xchg
xchg
push
fistl
cmpsb
test
fstpl
and
cmpsl
cmpsb
cmpsb
push
imul
xlat
cmc
iret
adc
mov
cs
jno
pop
cltd
jnp
dec
mov
pop
aad
lret
mov
jmp
imul
push
xor
aam
fildl
mov
inc
push
and
lret
inc
nop
xchg
mov
shlb
pop
adc
sahf
mull
cli
enter
jge
add
lock
inc
xor
inc
xlat
push
lahf
xchg
sbb
sbb
push
outsl
add
inc
dec
enterw
mov
inc
lea
pop
in
push
dec
outsw
into
sbb
into
les
cmp
jmp
add
inc
mov
pop
and
lcall
dec
push
inc
sahf
sahf
faddl
loope
mov
mov
test
pop
mov
adc
sbb
adc
pop
roll
in
lds
dec
imul
imull
push
jle
add
int3
arpl
mov
sub
push
inc
cmpsb
cmc
int
sbb
cld
and
sbb
enter
outsb
xchg
xchg
pop
je
testl
std
lret
iret
push
test
cmpl
sub
jge
jbe
sbb
out
aad
sbb
int3
dec
lret
add
jnp
xlat
push
dec
push
stos
mov
ds
push
sbb
cmp
cmp
call
std
pop
push
nop
je
push
cmpsb
inc
push
sarl
inc
ja
and
int3
punpckhdq
push
xchg
mov
sbb
lock
add
mov
mov
icebp
cmp
mov
adc
negl
sub
mov
lcall
les
add
hlt
shrb
fmul
ja
out
cmp
jnp
adc
sti
and
cmp
jecxz
dec
pop
push
or
xor
aaa
das
sub
xchg
or
and
pop
mov
aad
adc
or
aam
mov
popa
add
xchg
pop
sub
mov
mov
xchg
push
sbb
lods
in
mov
fbld
mov
stc
mov
shrl
std
jmp
push
outsl
pushf
and
jnp
leave
in
les
jno
movsl
push
mov
cltd
out
in
mov
je
lea
jo
push
xchg
push
pop
lret
aaa
out
dec
inc
cmpsl
xchg
add
call
das
or
das
loop
and
cwtl
aaa
jecxz
mov
mov
dec
in
scas
daa
cmp
gs
mov
iret
and
test
mov
mov
out
xor
adcl
movsl
mov
inc
mov
scas
mov
and
lods
outsl
mov
jg
lods
xchg
sbb
mov
add
and
daa
out
sub
push
mov
cmc
mov
test
hlt
and
push
shrb
sub
fldcw
jno
or
int
clc
mov
sahf
roll
test
mov
bnd
sub
sub
mov
dec
push
dec
push
lds
pop
adc
xor
call
mov
and
hlt
dec
mov
gs
cltd
sub
adc
repz
sahf
shl
push
arpl
xor
xorl
pop
dec
jbe
mov
insb
int3
pusha
sbb
xchg
xchg
mov
cld
sahf
in
and
xlat
outsl
out
jecxz
add
iret
ret
pop
inc
mov
cmpsl
outsb
das
adc
lret
in
sub
adc
mov
out
insb
sbb
jne
xchg
xor
dec
sbb
cmp
add
mov
stos
jle
push
lea
lds
int
movsb
das
mov
adc
les
mov
cmp
mov
scas
sahf
xchg
cmp
pop
outsl
mov
push
fistpl
ficoml
jne
dec
fldenv
faddl
add
xchg
cmp
test
jecxz
repz
mov
sahf
roll
inc
jnp
mov
or
inc
mov
sbb
leave
jns
mov
jbe
add
push
xorb
inc
lret
dec
or
fcompl
lea
fldenv
dec
and
test
cmp
rolb
push
shrb
leave
xor
fs
or
mov
scas
nop
push
sbbl
stos
stc
lcall
mov
gs
xchg
or
sbb
jecxz
add
dec
mov
mov
sub
mov
dec
dec
mov
xor
adcb
or
dec
jb
movsl
bswap
lock
daa
ja
dec
dec
cld
ret
cli
jne
sub
inc
cmp
mov
setns
cs
test
and
outsb
mov
inc
jecxz
test
mov
xchg
jge
add
js
outsb
test
pop
sub
xor
je
jbe
mov
dec
push
lret
pusha
lcall
jno
mov
and
mov
mov
mov
xchg
sahf
adc
mov
mov
mov
push
es
or
fmull
xchg
mov
jmp
xor
mov
add
hlt
and
sbb
sub
std
push
ds
cs
mov
pusha
or
aam
sub
inc
pusha
nop
sti
pop
xor
jmp
int
jnp
jg
bound
in
pop
es
cmp
jns
push
aaa
mov
jno
pushf
jg
js
cmc
je
ljmp
leave
jmp
and
inc
out
push
std
push
mov
loop
mov
repz
aad
inc
sahf
leave
pop
push
out
in
idivb
cmp
add
repz
loope
repz
push
out
sub
orb
repnz
std
adc
popf
cltd
popa
fucomip
idivl
or
jo
gs
mov
data16
mov
sub
lock
cmp
imul
xchg
pop
fs
insl
xchg
cmc
push
mov
enter
jo
xchg
fs
hlt
in
push
arpl
movb
imul
insb
pushf
fwait
sbb
push
std
mov
test
push
cmp
pop
dec
lods
and
xlat
adc
xor
ds
jmp
lds
cli
mov
lods
cmp
sub
jmp
adc
mov
jle
sub
sub
cld
stos
divb
loopne
jp
int
movsl
in
scas
push
dec
test
mov
addb
add
adc
dec
cmp
pop
fidivs
xchg
fucomip
out
hlt
cmc
scas
mov
outsl
jae
test
push
aas
jmp
push
in
popa
mov
lcall
sub
cmp
and
adc
mov
out
icebp
arpl
adc
mov
push
iret
dec
mov
lret
insb
sahf
sbb
scas
push
gs
test
movsb
fstpt
push
jns
popf
call
dec
inc
pusha
cwtl
adcb
negb
mov
ljmp
xchg
inc
xchg
pop
cli
dec
loop
add
and
sub
xor
les
xchg
in
inc
cmp
push
stc
das
into
popa
inc
adc
dec
sub
pop
int
push
mov
mov
lahf
inc
mov
rcll
push
in
cwtl
mov
js
mov
mov
or
adc
mov
iret
test
stc
int
mov
add
sbb
adc
jmp
push
stc
or
ret
outsl
fwait
stos
dec
es
arpl
jno
cmpsb
daa
out
and
sbb
mov
dec
out
cwtl
fisubl
rol
imul
rcl
sbb
add
in
push
fstps
lret
mov
mov
aaa
clc
or
aad
imul
icebp
data16
nop
test
ret
popf
shlb
ja
test
in
stc
pop
sub
fiadds
push
xlat
inc
in
sbb
mov
adc
dec
or
cmpsl
jo
pusha
jae
jae
fstpt
popf
xchg
outsl
nop
mov
stos
mov
cs
lods
bound
aad
div
mov
adc
push
add
pop
xor
mov
push
sub
fdiv
cmp
cmpsb
mov
xchg
pop
hlt
fs
in
inc
imul
mov
or
cmpsw
stos
mov
pusha
stos
xchg
insb
insl
loop
adc
and
mov
mov
xchg
xor
jl
inc
je
mov
dec
jmp
dec
rcl
xchg
das
pop
sub
cli
xchg
or
repnz
add
mov
push
and
inc
stc
popf
mov
dec
imul
leave
mov
jno
into
and
cmpsl
push
cld
sbb
scas
or
or
outsl
cmp
fs
push
leave
pop
mull
xor
fidivrl
sub
cltd
jns
cmp
out
mov
stos
mov
add
in
pop
xchg
fcoms
mov
dec
jl
sub
jns
jecxz
jb
gs
in
pop
inc
pop
retw
les
scas
inc
sub
jns
lcall
mov
jne
in
or
xor
mov
cs
cmp
pop
xchg
std
xlat
pushf
js
jge
repz
jns
jns
aam
imul
shl
lahf
enter
bound
inc
call
dec
std
test
stos
mov
scas
in
and
cld
bswap
int
push
addr16
das
sub
fsubrs
push
cmp
fwait
xchg
setne
mov
ret
aas
push
call
sbb
stc
jp
inc
cmp
and
stos
loopne
and
add
mov
pop
jge
mov
xlat
or
or
clc
lods
sahf
hlt
fxch
mov
mov
lret
data16
push
ret
mov
ret
subb
sbb
insl
je
xchg
adc
fistpll
jge
cwtl
mov
bound
in
addr16
imul
dec
adc
jle
mov
and
rclb
aad
dec
mov
in
mov
notl
xchg
xchg
gs
lret
mov
dec
mov
push
mov
or
pop
jge
mov
movsb
hlt
in
cmp
cltd
cmp
or
lret
pop
sub
fwait
add
outsb
lcall
gs
lahf
lret
adc
inc
and
shll
sub
mov
insb
xchg
sti
outsb
inc
int
daa
cmc
js
xor
jmp
and
pop
sbbl
dec
fistpll
out
loopne
std
stos
shrl
nop
mov
mov
pop
pop
sahf
mov
pusha
mov
insb
imul
movsl
xchg
mov
push
push
xor
push
cmc
shlb
aaa
and
mov
push
addr16
cmp
mov
lret
out
fwait
insl
lahf
jno
adc
rol
into
lcall
pop
sub
mov
test
lods
lret
push
mov
adc
cltd
push
into
sub
in
cld
fistl
and
dec
adc
imul
fnsave
xchg
and
add
pop
xorl
decb
stos
in
fnstenv
out
push
rorl
fmull
add
inc
jp
shrb
aad
dec
pop
sbb
inc
out
xchg
fwait
push
pop
cmp
push
adc
sarl
pop
and
inc
sbb
sub
push
pop
aad
cmpsl
xchg
outsb
ss
ror
add
shll
mov
mov
ficoml
xchg
xchg
mov
in
xor
pop
sbb
jne
insl
dec
mov
xor
and
pop
aaa
dec
mov
pop
sti
test
push
popa
cmp
sub
or
push
jns
out
sbb
cli
movsb
dec
mov
fisttps
cs
out
repnz
push
lods
jp
pop
jg
pop
es
pop
dec
lods
daa
pop
arpl
dec
jecxz
pop
inc
mov
sub
rolb
add
or
inc
inc
or
inc
rcll
int3
and
pop
inc
push
loop
xor
cltd
ljmp
dec
mov
push
mov
adc
idivb
jmp
sub
cmpsb
aad
and
jne
fwait
mov
gs
jg
fistpl
inc
adc
pop
cli
out
jb
ja
pop
pop
pusha
sub
js
xchg
cmp
sbb
cld
sbbb
out
push
mov
pop
add
insb
cmp
cltd
sbb
xor
jmp
cmp
push
lods
jns
arpl
jne
add
adc
cmpl
add
or
jl
mov
adc
push
sbb
mov
cli
sbb
ret
jg
push
jmp
frstor
test
xor
lds
leave
ret
sub
jo
into
push
pusha
push
rclb
movsb
lret
bound
in
jae
sbb
mov
sub
mov
sahf
je,pt
xor
fdivrs
int
dec
sbb
adc
push
pop
push
mov
sub
insb
call
mov
sub
jmp
outsl
popf
loopne
fildll
nop
or
pushf
aam
sub
mov
mov
pop
cmc
xor
lret
lahf
xor
adc
insb
stos
out
or
jmp
xchg
sarb
xchg
xor
rcrb
jno
cmp
mov
lret
scas
sub
scas
jl
mov
sub
jp
and
and
mov
lcall
xor
mov
jecxz
mov
ss
push
xchg
dec
add
xlat
loope
mov
popa
imul
popa
mov
lret
dec
jns
fsubrl
andb
cltd
cwtl
and
mov
out
xchg
push
add
rcl
inc
cmp
mov
xor
leave
xchg
stc
repnz
loopne
add
adc
in
adc
dec
mov
pop
mov
and
jns
mov
jbe
pop
xchg
mov
icebp
ja
xor
jmp
cmp
sbb
ljmp
out
inc
or
adc
jnp
pop
dec
out
sbb
inc
push
mov
push
sbb
fsubs
jge
loope
sahf
jle
xor
in
into
jmp
lods
hlt
lcall
enter
pop
fwait
pop
pop
or
arpl
jo
leave
lret
addl
outsb
xor
cmp
and
xor
xchg
aad
adc
and
xor
lds
les
sahf
das
inc
lea
push
add
xor
or
out
add
out
in
cmp
add
icebp
push
test
orb
mov
fdivs
lods
jge
call
scas
xor
fistpl
jle
mov
and
pop
jb
movsb
or
dec
sbb
jae
pop
jne
repz
dec
scas
sbb
out
notb
aas
loope
adc
scas
lcall
inc
stc
popa
mov
jle
sub
popf
lcall
ja
movsl
call
fwait
sub
jne
int
dec
push
xor
inc
mov
das
dec
loopne
xor
cmpsb
dec
ja
sub
sbb
cmp
dec
fbstp
and
dec
cwtl
and
dec
mov
pusha
cltd
in
pop
pop
push
sbb
add
xor
jb
mov
mov
jns
stc
imul
pop
jnp
xchg
lods
push
jmp
adc
in
popa
or
outsb
xor
int3
sub
fisttpl
mov
or
leave
push
dec
into
sbb
lds
hlt
iret
stos
int3
sub
movsl
lds
xor
stos
outsl
test
push
iret
or
mov
jne
sub
in
gs
mov
and
add
mov
pop
mov
aam
push
adc
fiaddl
popl
xchg
out
inc
sbb
ljmp
cltd
jp
xchg
stos
aad
jns
jo
mov
flds
xchg
and
dec
dec
lret
ljmp
js
inc
iret
jmp
mov
imul
in
push
fcomi
inc
mov
imul
loop
sub
xor
jg
sarb
lret
lret
dec
mov
mov
jp
dec
loope
xor
xchg
add
stos
inc
add
ret
cmp
pop
addb
aad
and
hlt
lock
dec
jb
xchg
sahf
shll
and
lret
cmp
shll
jl
push
cmp
pop
cmp
and
and
gs
and
inc
icebp
movsb
vcvtss2si
aad
imul
imul
sbb
xor
enter
add
insb
dec
scas
dec
out
dec
push
or
arpl
lcall
dec
xor
popf
xor
xchg
insb
xchg
push
cli
das
mov
push
es
dec
push
shr
daa
xor
add
cwtl
inc
negb
aas
mov
jb
loopne
mov
pop
cmpsb
cltd
cld
jl
orb
and
cmp
mov
xorb
sahf
mov
mov
out
jae
addb
adc
dec
js
add
push
mov
push
out
push
test
sbb
adc
ret
aam
cmp
ds
xchg
push
inc
sub
sub
das
cmp
fwait
jne
cwtl
stc
aam
mov
adc
mov
fdivrl
mov
mov
imul
cmp
sub
pop
insb
rcll
adc
inc
xchg
pop
call
cli
mov
sub
pushl
and
mov
ss
sbbl
jge
out
dec
lods
stos
hlt
popl
xor
add
push
cmpsl
push
pop
popa
jle
cs
push
ror
xor
rclb
pop
jne
cld
test
aam
sub
sarl
stos
cltd
cmp
add
dec
and
jmp
dec
out
movsl
scas
jl
mov
lea
push
sub
mov
out
loop
push
lods
push
sub
fstps
mov
pop
stc
cmp
mov
gs
loop
mov
mov
jb
in
arpl
sbb
in
and
pop
or
add
test
stos
call
or
push
cmp
lret
mov
cwtl
outsl
shrb
cli
mov
imul
jb
sbb
mov
scas
add
pop
mov
mov
xchg
push
mov
mov
push
xor
pop
add
loope
pop
fimuls
sub
outsl
lods
aad
cmpb
and
out
repnz
mov
jnp
ss
jmp
cs
cmc
or
sbb
xlat
fisubs
cmpsl
repz
icebp
and
inc
mov
into
jecxz
idivl
or
mov
scas
fnsave
dec
out
shll
mov
shl
stos
imul
or
adc
add
pop
sbb
cltd
jbe
test
pop
jecxz
mov
xor
mov
sbb
ljmp
imul
incb
imul
jo
insl
xchg
pop
pushf
mov
pop
mov
push
fs
push
dec
decl
mov
push
cli
repnz
xchg
loopne
xchg
xchg
push
and
inc
xchg
dec
xor
les
pop
sbb
xlat
aaa
dec
stc
mov
sbb
ret
ss
mov
rorb
aam
inc
pop
loope
dec
jne
jb
pusha
cmpsb
mov
pop
rorl
adc
cmpsl
mov
fiaddl
sti
mov
xchg
lea
inc
movb
mov
inc
fnstenv
les
cmc
ja
pop
inc
out
std
sub
mov
addr16
testl
sbb
and
sbb
or
fdivr
loop
cs
ret
or
dec
test
xor
bound
mov
mov
or
mov
movsb
xchg
push
je
mov
outsl
cmpl
sarb
add
sbb
add
xchg
jns
add
mov
bound
mov
icebp
mov
push
inc
cmp
sbb
push
xchg
mov
imul
adc
lds
js
loop
push
shrb
or
rorl
dec
xchg
lcall
or
sub
int
into
xchg
fidivrl
mov
out
jne
xchg
pop
mov
out
cmp
jns
popf
xor
int3
repz
mov
scas
cmp
xor
lds
or
jo
xor
lods
negl
mov
or
xor
dec
jnp
popa
leave
cltd
and
insl
popl
mov
data16
inc
add
test
movsb
outsl
out
cmp
xchg
out
jae
push
sbb
pop
insb
sub
xor
test
jo
and
in
jb
lcall
cmp
jb
mov
mov
inc
or
sub
in
inc
xor
mov
js
sbb
out
lock
pop
fwait
andl
add
in
xor
gs
gs
mov
lret
scas
add
cmpsb
sbb
aaa
ljmp
mov
incl
mov
inc
sub
cltd
cmpsl
shlb
sbb
and
scas
fistpll
sbb
in
cmp
jo
aam
int3
popa
into
mov
ficomps
sbb
push
mov
test
mov
movsl
jg
rorl
fs
xchg
mov
and
mov
adc
mov
sub
lea
mov
mov
sti
xchg
in
mov
cmp
test
je
insb
rolb
insb
icebp
sti
out
push
aas
xor
jmp
data16
and
pop
adc
scas
inc
in
push
pop
lret
pop
jl,pt
and
or
aaa
aam
fsubrl
shll
and
mov
stos
cmp
movsl
in
shr
outsb
mov
movsb
lcall
repnz
sti
out
leave
bound
sahf
data16
push
aad
std
aam
lods
sbb
inc
sbb
mov
xchg
mov
mov
aad
cwtl
push
jnp
fisubrs
xor
pushfw
inc
pop
push
fstpl
pushf
mov
testb
cmp
movsb
jo
xchg
ret
inc
push
push
stos
scas
dec
aas
sub
js
xchg
jmp
ret
lods
push
ret
dec
cmpsl
push
hlt
dec
mov
lock
push
in
add
xchg
out
dec
rorl
sbb
cs
lret
mov
insl
mov
jl
lcall
cmpsl
mov
sbb
ficoms
cs
pop
jge
xchg
out
pop
jae
or
imul
jae
cs
sub
mov
mov
dec
subb
dec
xchg
filds
cmp
sbb
jecxz
mov
clc
aad
sub
add
or
sub
js
sub
ss
lds
shlb
std
dec
leave
add
fsubrs
xchg
movd
fwait
stc
jb
pop
mov
pop
or
push
mov
imul
mov
dec
das
insl
sti
jl
mov
pop
xor
pusha
addr16
jmp
enter
repz
pop
xor
js
cwtl
add
fldt
sahf
insb
insb
add
cmp
sbb
pusha
xchg
push
jb
pop
mov
bound
loope
dec
cwtl
push
inc
pop
sub
rorl
test
lcall
pop
add
dec
movl
and
les
cli
jge
jecxz
mov
es
xorl
cmp
add
inc
int3
xchg
add
idivl
mov
mov
adc
sti
mov
and
dec
adc
mov
imul
xchg
xor
push
dec
jmp
dec
cmp
and
js
pop
lds
xchg
adc
cs
mov
cmp
sbb
mov
ja
rcll
pusha
clc
xor
loop
out
dec
repz
fistl
mov
test
hlt
sub
sbbl
lds
pusha
cmp
hlt
addr16
popa
and
push
ficoms
orl
imul
cmp
jne
inc
ja
dec
jmp
sbbb
push
jle
pop
adc
jne
test
pop
jno
jnp
xor
mov
lcall
shrb
push
lret
shrb
mov
call
adc
out
js
mov
cs
cld
int
and
loop
pop
or
jns
imull
sbb
imul
jp
mov
xchg
mov
dec
jae
mov
ds
mov
adc
inc
jae
dec
dec
int
lods
push
lods
andb
imul
mov
iret
xor
mov
ffree
jb
push
lret
cld
int
hlt
sbb
movsl
dec
jmp
cmp
mov
adc
mov
xlat
test
les
sub
mov
cs
sti
ret
iret
push
dec
sahf
stos
mov
dec
sub
imul
out
dec
xchg
cwtl
je
cltd
xchg
pop
xchg
sub
lret
add
shll
shrl
out
or
xchg
mov
or
jecxz
arpl
call
int
mov
popf
cmp
mov
add
push
xchg
ds
mov
adc
xlat
stc
sbb
push
mov
push
jb
sbb
xor
jl
jae
xchg
addl
cld
sbb
addr16
icebp
mov
jg
push
jmp
jbe
int
push
daa
or
xchg
lret
imul
out
rorl
dec
not
xchg
xchg
testb
cmc
clc
arpl
test
leave
mov
or
mov
and
cmpb
aad
jmp
xlat
neg
mov
inc
xchg
adc
push
subb
mov
cmpb
pop
mov
sarl
test
inc
outsl
mov
arpl
mov
movsb
mov
roll
cmp
inc
jge
shlb
xchg
and
cmpsl
mov
push
les
or
sbb
dec
divb
mov
jo
aad
mov
jl
test
inc
adc
lods
fidivrs
inc
sahf
insb
out
dec
adc
sbb
push
shlb
lret
mov
ffreep
rcr
cli
test
pause
inc
movsl
sbb
xchg
inc
lret
test
call
cltd
clc
adc
push
out
mov
pop
lock
mov
pop
inc
mov
les
shll
mov
dec
and
iret
or
and
in
leave
dec
push
dec
sti
js
int
or
inc
or
jmp
xor
pop
sub
std
mov
fiadds
sti
push
je
push
push
xchg
hlt
jb
icebp
loopne
and
push
push
push
das
jmp
ret
sub
das
add
lcall
in
and
xchg
enter
and
sub
lahf
xor
and
outsb
cltd
sti
mov
adc
nop
jnp
cmp
iret
les
dec
xchg
ss
jmp
xchg
xlat
dec
mov
pop
repnz
popa
mov
adc
stos
loopne
stos
push
mov
sbb
loope
cmp
ret
jl
xlat
add
mov
mov
aaa
jmp
scas
stc
btr
scas
pop
xlat
jne
or
ret
pop
loope
aad
jmp
jmp
and
popf
daa
sub
mov
mov
lcall
dec
sub
xlat
shll
rcl
aas
fisttps
andb
push
fnstenv
sbb
inc
sbb
sbb
mov
ljmp
pop
jno
imul
add
test
xor
mov
sbb
out
mov
scas
pop
lods
clc
ret
xor
pop
rcll
lock
mov
jns
and
fucomi
mov
sub
loop
xor
and
aas
and
sub
xchg
fwait
xchg
clc
cmp
and
leave
leave
mov
push
out
fstpt
push
bound
push
insl
and
cmpsl
xchg
aas
sbb
sbb
push
pop
and
xchg
push
cli
jp
jb
stos
fwait
pop
or
push
sub
mov
add
scas
fmuls
mov
dec
push
xchg
ficoms
sbb
mov
xor
lea
xchg
cwtl
xor
sub
mov
dec
mov
outsl
xchg
xchg
cmc
or
mov
sahf
or
sets
lcall
dec
inc
inc
xchg
cltd
pusha
in
int
and
cmp
fildl
lahf
jl
xchg
or
dec
fiadds
adc
psubsw
xlat
pop
xchg
cmpsl
imul
or
mov
dec
stos
pop
xor
pop
cmpsb
lods
xchg
xor
adc
cmp
bound
outsb
mov
out
je
mov
or
sbb
lret
test
lods
insb
xchg
fs
das
std
sub
mov
add
daa
mov
sbb
fnstsw
sahf
and
lds
clc
out
dec
inc
pop
sbb
pop
dec
std
mov
addr16
jl
testl
sbb
addr16
mov
incb
add
add
jge
sub
popa
cmp
ret
cmp
movsb
cmp
xchg
repnz
in
pusha
ja
add
shll
mov
mov
test
jno
nop
and
sub
mov
pop
mov
mov
push
dec
xor
mov
lods
or
adc
jl
mov
jnp
int
xor
dec
divl
dec
loop
mov
add
sbb
mov
push
mov
addr16
adc
xor
jnp
aas
xor
add
sbb
mov
lds
shl
mov
mov
or
jbe
in
inc
push
sub
test
movsl
pop
jno
xchg
addr16
jge
mov
jns
jae
inc
inc
jmp
enter
rorb
mov
jno
stos
push
popa
std
xchg
mov
push
xor
icebp
popa
divl
jnp
mov
flds
gs
sub
mov
lret
ret
in
xchg
icebp
addr16
sub
ljmp
xchg
adc
outsl
sub
dec
adc
cmp
inc
jbe
test
inc
adc
inc
or
jecxz
mov
xor
cwtl
jbe
aam
xchg
and
fwait
push
mov
test
jae
lods
hlt
xor
mov
xchg
mov
push
and
hlt
jne
daa
mov
sub
push
rcl
adc
cmpsb
push
mov
jne
jb
inc
pushf
insb
sub
hlt
aas
mov
sahf
mov
push
sub
jl
jmp
xlat
loopne
mov
movsl
sbb
sbb
int3
mov
stos
out
jp
mov
test
nop
cwtl
xor
dec
popa
aaa
or
out
out
xorb
mov
xor
sub
push
test
push
cmp
insl
imul
pop
sbb
cld
cmp
popa
mov
sub
ret
scas
sub
pop
insb
movsb
fdivl
push
sbb
rcr
or
insl
and
sbb
outsl
or
fidivrl
daa
dec
pop
cmpl
push
stc
movsl
and
xchg
mov
sbb
call
pop
jmp
ss
testb
mov
add
je
jg
gs
jno
xor
enter
or
es
mov
inc
cmp
enter
lock
jo
pop
xor
lret
int3
push
adc
mov
inc
dec
mov
sbb
push
sub
imul
mov
out
sbb
sbb
cwtl
push
inc
out
jb
mov
jbe
out
mov
jb
mov
push
shlb
aam
xor
jnp
add
pop
xchg
ret
cmp
mov
xor
sbb
dec
mov
push
cmp
xor
add
lret
xor
fistpll
outsb
xor
pop
sub
test
mov
mov
push
or
adc
pop
mov
icebp
out
mov
or
adc
scas
add
add
adc
fcom
aad
sbb
sbb
nop
or
jo
or
sub
addr16
inc
inc
pop
inc
push
or
lea
inc
pop
pushf
jecxz
setle
into
inc
iret
xchg
in
inc
xchg
jg
or
mov
sti
push
aam
out
fwait
js
dec
xchg
xlat
loopne
lods
cli
lahf
sti
cmp
or
test
xchg
scas
add
lcall
out
adc
jnp
les
xlat
dec
shll
test
or
or
sbb
testb
pop
lods
mov
sbb
push
dec
push
outsl
fisttps
sbb
mov
insb
in
sarl
fldl
cwtl
inc
roll
or
pop
mov
mov
jae
sarl
xchg
out
add
push
adc
cli
test
mov
daa
pop
cmpb
or
cltd
sub
lds
pop
aaa
popf
icebp
aaa
mov
adc
aam
hlt
outsl
adc
add
mov
into
fcompl
insb
mov
pop
aam
xchg
mov
outsb
js
add
xchg
int3
lcall
pop
movsb
cmpsl
mov
mov
xorl
inc
lea
out
mov
push
icebp
or
push
cmp
inc
xor
enter
inc
mov
pop
jl
jge
dec
mov
mov
mov
sbb
movsl
dec
into
mov
pop
pop
pushf
push
outsb
jno
je
and
and
es
call
psllq
mov
push
sbb
mov
sub
stos
push
sahf
nop
xchg
leave
or
sub
std
push
fidivl
mul
cmp
dec
sub
scas
mov
aam
lds
push
out
iret
outsl
sti
sub
jae
out
cmpsb
inc
rorl
add
sbb
shll
dec
sahf
ss
inc
sub
fcmovnu
sbb
out
mov
dec
add
sub
out
bnd
es
adc
push
jle
sub
push
inc
inc
jnp
cmp
mov
movl
mov
cmp
inc
push
adc
addl
imul
out
sub
adc
mov
jl
lods
pusha
in
sub
mov
pop
push
jns
push
mov
and
mov
fmull
and
ret
cltd
jb
out
jbe
daa
push
mov
les
dec
movsl
shlb
push
xchg
popf
adcb
testl
and
mov
insb
cltd
in
addl
cld
cmpsb
shrb
and
sbb
push
cmpsb
stos
les
lods
ljmp
mov
repnz
repnz
in
jmp
cmp
std
mov
xor
bound
pop
add
mov
jle
cmp
cmc
hlt
pushf
int
sub
icebp
bts
ds
push
xchg
aaa
pop
inc
mov
pop
ss
fdivrl
loopne
jp
pop
cmp
test
xlat
das
test
adc
out
stos
arpl
mov
xchg
pop
lods
ja
sbb
xchg
dec
inc
in
fisttpll
jp
inc
shrl
lahf
sub
push
das
xchg
jbe
pop
sbb
bound
xchg
mov
fsubr
cmp
xlat
mov
mov
sub
xchg
and
jge
in
sub
adc
push
arpl
arpl
and
or
push
inc
xchg
adc
cltd
dec
sbb
popl
imul
and
mov
adc
push
or
xchg
mov
cmp
sub
jge
hlt
fnsave
or
scas
leave
and
inc
aad
in
add
stos
and
lret
insl
fucomi
mov
mov
push
mov
inc
insl
adc
add
out
or
jmp
mov
fidivl
xchg
mov
cmp
cmp
insb
and
test
ss
inc
inc
mov
or
imull
dec
stos
lods
mov
inc
mov
sub
push
les
repnz
adc
dec
gs
push
icebp
sbb
push
mov
fstl
mov
test
in
cmpsb
repz
mov
push
cltd
cmp
push
das
xchg
pop
aam
test
pop
shlb
push
enter
xor
inc
pushf
pop
in
neg
mov
mov
dec
sti
cwtl
pusha
movsl
dec
rolb
pop
les
mov
lret
lret
and
pop
dec
push
cli
xor
and
inc
push
call
cmp
fwait
xchg
mov
push
inc
pop
mov
jmp
mov
mov
scas
adcb
sub
aas
pop
push
push
or
cmc
dec
sub
out
cmp
add
test
gs
xchg
sub
cmp
cmp
push
xchg
and
aam
shrl
xlat
lods
push
clc
ja
call
push
inc
lret
add
cmpsb
push
scas
push
jae
aas
xor
divl
jl
in
xchg
jge
loope
into
rcl
ret
mov
jo
mov
dec
add
mov
pop
mulb
int
cmp
sub
push
mov
fisubl
js
insl
in
add
int3
push
mov
cli
aad
into
sub
sbb
jnp
aam
xchg
jge
lret
lahf
push
cli
lret
arpl
lcall
mov
or
mov
gs
sub
push
cmpb
dec
xchg
and
jns
out
mov
cltd
jo
xchg
pusha
push
sbb
je
mov
mov
cmp
sbb
into
and
fcmovnu
stos
mov
and
sbb
outsl
dec
shll
cmc
sub
inc
push
pop
out
push
pop
jno
xor
sub
xchg
pop
lret
mov
cli
push
out
mov
lcall
inc
nop
shrl
sub
mov
stos
out
jns
adc
mov
fisubrl
dec
cmp
jno
pusha
mov
int
test
cmc
dec
push
mov
sub
xor
mov
hlt
mov
push
push
mov
jae
xor
outsb
mov
xor
pushl
xchg
shl
stos
test
movsb
test
fiadds
lret
jge
test
dec
das
sub
bound
test
outsl
fcom
mov
sbb
and
mov
out
lds
arpl
pusha
lret
xor
insb
ds
cmc
inc
adc
incb
sahf
cli
cmp
fmull
sub
inc
inc
mov
adc
fisubs
out
sbb
xor
addb
test
repnz
sahf
mov
xchg
rcrb
mov
mov
mov
mov
das
dec
int
pop
fiaddl
jp
cmp
dec
fdivrl
pop
into
mov
and
fisttpll
mov
dec
lahf
and
xor
outsb
outsl
push
bound
stos
jb
mov
ds
repnz
bsf
xor
add
jbe
xchg
mov
mov
out
or
jecxz
cmp
jo
out
in
xchg
rcrb
jae
loope
mov
mov
jnp
lret
nop
inc
mov
jo
pusha
pop
sub
add
daa
pop
in
popf
xchg
adcl
movsb
mov
call
dec
in
mov
inc
cmp
push
in
ljmp
jns
int
jmp
xchg
or
and
dec
adc
mov
in
mov
mov
dec
mov
cmp
loop
and
sub
ss
cmpb
push
add
into
cwtl
cli
inc
movsl
adc
fdivrs
insb
and
mov
rcll
or
inc
cmpsb
shl
in
lret
mov
loopne
xor
imulb
sub
shlb
lods
mov
jno
aad
std
ja,pn
je
movsb
dec
shll
inc
ja
push
rorb
push
je
in
es
xor
mov
dec
lock
cmp
cmp
or
pop
loopne
jns
or
int
sub
adc
cwtl
push
pop
pop
mov
iret
out
sub
push
push
filds
pop
pop
repz
jno
cmp
mov
or
dec
and
xchg
das
cmp
stos
das
inc
inc
push
inc
aaa
aad
push
inc
and
inc
mov
inc
dec
bound
add
addr16
push
daa
decl
pop
stc
mov
xlat
aad
mov
sarl
push
out
mov
andl
int
and
ja
cmp
jp
push
sahf
push
adc
outsl
push
pushf
dec
addr16
ds
jecxz
jcxz
push
mov
push
xor
dec
cmc
mov
xchg
xchg
pusha
or
ja
or
and
inc
dec
sub
and
pushf
cld
pusha
into
scas
mov
icebp
xchg
das
jle
jle
iret
aam
fidivrl
jl
ljmp
or
scas
add
or
in
adc
lds
insl
add
cld
ret
ret
adc
hlt
inc
pop
or
pop
adcb
inc
and
out
es
and
outsb
add
fwait
sbb
stc
sub
inc
rcl
add
jge
sahf
movsb
mov
cwtl
adc
stos
jecxz
ljmp
mov
aas
sahf
out
lret
mov
popa
push
daa
xchg
fdivr
adc
loopne
popa
fstpt
mov
inc
jp
idivb
jnp
jle
fisttpl
mov
or
inc
fdivrp
js
orb
fimuls
stos
inc
inc
ljmp
inc
rcrb
or
rorb
loopne
jg
insb
sub
js
enter
fmuls
pop
cmpb
xchg
aad
mov
push
mov
fcmovnu
push
lret
push
sub
add
out
pop
sbb
pop
sbb
stos
out
dec
xchg
jg
xchg
and
jmp
les
js
outsl
push
fwait
xor
out
add
rolb
inc
arpl
iret
mov
xor
mov
xchg
mov
test
inc
lcall
shl
adc
fwait
or
dec
cmp
inc
cwtl
lret
ss
pavgb
adc
mov
in
and
xchg
icebp
or
and
stos
loopne
xor
je
je
int
fs
pop
gs
inc
imul
sub
clc
mov
mov
cs
out
xlat
xchg
jnp
or
mov
push
ds
or
pusha
push
xchg
mov
dec
out
push
je
loope
mov
pop
imul
adc
inc
shll
fs
and
in
cmpsb
test
and
push
and
pop
movsb
out
jmp
mov
int3
icebp
stc
inc
and
jge
ds
lret
cmpsb
mov
mov
cwtl
daa
addl
in
es
loope
jae
sub
dec
mov
adc
cmp
jns
sbb
jmp
dec
or
xchg
push
mov
fnsave
jmp
test
pop
jo
ljmp
je
sbb
insl
mov
cli
clc
xchg
fcmovne
mov
dec
xlat
lcall
mov
test
enter
or
movsl
fwait
mov
les
push
ljmp
test
mov
cmp
xchg
lock
insb
in
push
sub
jne
insl
mov
inc
inc
lahf
inc
cmp
cmc
cmp
mov
adc
dec
push
data16
jno
pusha
cwtl
inc
push
mov
add
aam
cmp
adc
xlat
cmp
movsb
jbe
mov
pop
mov
outsb
cli
arpl
out
cli
nop
dec
popa
bswap
std
mov
mov
inc
mov
in
lock
in
mov
fdivr
push
xor
mov
loop
pop
xchg
ljmp
adc
fcoms
sbb
cltd
jecxz
pop
fimuls
cwtl
xchg
nop
out
push
fidivrl
neg
leave
cmovle
dec
push
mov
je
mov
jae
fsubrl
jbe
cmp
arpl
jbe
and
push
insb
xchg
fisttpl
inc
xor
leave
frstpm(287
daa
or
and
and
inc
cmp
dec
cmpsb
mov
cmp
icebp
add
movsl
js
aam
mov
adc
sbb
leave
loope
roll
cwtl
cmp
into
les
ret
jo
fnstenv
pop
ja
sbb
add
push
stos
fisttpl
popf
add
xchg
mov
pop
adc
push
xchg
jnp
or
mov
xor
les
or
gs
xchg
mov
add
add
gs
dec
out
mov
xlat
aam
aaa
lods
mov
mov
pop
inc
pop
adc
pop
repz
inc
jne
insb
and
adc
rorl
inc
jl
testb
insb
push
je
popf
push
stos
test
sahf
inc
sbb
mov
mov
movsb
movsl
popa
or
lret
imul
lret
rcl
mov
push
xor
mov
add
mov
incb
sar
lods
mov
ds
sbb
test
frstor
call
roll
in
cmp
imul
nop
add
push
iret
or
arpl
fisttpll
jae
aaa
out
movsl
pop
imul
push
int
xchg
out
xor
jne
ja
cld
add
ffree
add
repnz
shl
data16
fwait
into
xchg
sbb
xchg
je
icebp
xchg
fs
adc
cli
inc
jne
fcompl
xor
in
bound
push
add
jb
dec
inc
mov
ficomps
insb
cmp
int
inc
fistpl
insl
ret
mov
lods
mov
mov
cmp
popa
mov
mov
lret
jno
std
xor
push
inc
mov
ja
out
xor
and
lret
int
ret
or
scas
aas
clc
xchg
push
adc
xchg
xor
mov
addb
sub
sub
dec
or
adc
addr16
test
or
mov
test
ss
loopne
sub
xor
inc
mov
pushf
push
and
mov
mov
loope
mov
pop
mov
sti
add
sbb
add
insb
add
mov
pop
hlt
adc
jnp
add
bound
xor
mov
or
bound
imul
stc
ljmp
mov
dec
mov
pop
xor
insb
mov
rcrl
orb
mov
outsb
pusha
and
push
loope
sbb
adcl
lock
in
iret
xor
or
icebp
outsl
pusha
mov
lret
daa
sub
cmp
push
test
ret
orl
sbb
adc
dec
outsb
daa
stos
test
push
imul
out
mov
test
rol
xchg
push
push
and
xchg
add
pop
adc
mov
dec
and
sub
inc
cmpsl
mov
cmpsb
nop
add
xchg
push
or
cmp
fs
enter
in
data16
xor
or
xchg
xchg
outsb
sub
ja
mov
test
inc
insb
test
mov
xchg
in
sti
jge
push
pop
loopne
inc
stos
lahf
and
testb
pop
pusha
sub
adc
or
cmpsl
out
mov
jp
push
jmp
cld
int3
dec
call
jmp
ret
xchg
clc
sbb
mov
lcall
ficompl
push
lock
jecxz
sbb
addr16
aad
dec
int3
insl
push
and
aas
jge
fstp
lds
hlt
nop
es
and
daa
rolb
sub
in
out
pop
mov
lahf
cmp
testb
pop
insl
mov
call
adc
clc
ss
pop
jnp
mov
jge
cmpsl
std
or
jo
mov
mov
in
sbb
out
jecxz
shr
pop
lods
inc
mov
cltd
pop
mov
mov
mov
xchg
cli
add
cmp
add
xchg
roll
and
rol
mov
xchg
add
mov
inc
cmc
mov
iret
mov
incb
cmp
addr16
sub
jle
call
inc
jle
dec
and
int
insl
and
sub
xchg
lea
inc
imul
sub
loop
mov
and
add
adc
lock
sbb
cli
jbe
dec
cld
leave
je
bound
pop
loopne
out
hlt
sbb
pcmpgtw
jmp
cmc
mov
lahf
aaa
push
jmp
xor
sub
or
add
push
and
jmp
mov
cltd
mov
orl
sub
sbbb
cwtl
shrl
insb
andl
mov
shrl
icebp
and
mov
cmp
inc
ret
jnp
addr16
fistl
xor
rorb
lahf
out
mov
or
push
mov
dec
ja
movsl
loopne
xchg
outsl
cld
cs
push
in
scas
in
and
sbb
push
popf
and
jp
pop
pop
lea
and
in
aas
es
sub
sbb
mov
and
rorb
aas
xor
pop
sub
mov
leave
lea
lret
pop
adc
movsb
push
add
add
and
aas
xchg
arpl
add
push
fiaddl
in
cmpsb
insb
pop
ret
mov
ret
or
push
fbstp
data16
mov
mov
xchg
scas
mov
mov
out
rcrl
leave
cmc
push
imul
repnz
test
and
sub
sub
fdivl
adcl
xor
loopne
or
push
jmp
lock
lods
and
out
xchg
cld
pop
pop
cmpsl
aad
mov
shll
addr16
cltd
add
or
cmp
mov
jne
push
out
fadds
xchg
loope
insb
xchg
pop
mov
xor
mov
aam
mov
scas
lret
repz
inc
sbb
leave
jbe
pop
inc
jns
fwait
aaa
sti
sahf
fcmovnu
jl
lods
push
mov
mov
repnz
or
lret
je
test
mov
fsubs
jge
in
sti
jne
jbe
xlat
lock
jp
scas
filds
in
mov
repz
std
and
rorl
mov
push
fwait
xor
sub
imul
insl
jb
test
pushl
js
fsub
push
call
scas
xchg
sub
sbb
or
inc
ret
dec
jg
popf
and
mov
xchg
or
push
sub
fdivr
or
ret
xor
les
push
or
ja
divb
dec
dec
imul
stos
xchg
aaa
push
or
dec
pop
ja
adc
out
insb
jb
sub
insb
pop
pop
dec
dec
cmc
sub
sub
cmp
fdivrs
adc
int3
jg
std
int
insl
or
test
dec
push
mov
negb
sbb
pop
enter
mov
aaa
adc
pop
mov
test
push
cmpsl
mov
iret
cld
scas
jmp
push
mov
popf
stos
push
sbb
adc
mov
mov
inc
jo
and
incl
cltd
je
pusha
sub
test
adc
pop
in
ss
mov
out
insl
mov
push
stc
and
mov
addr16
scas
sbb
sub
in
jle
cmp
pop
mov
negb
out
js,pn
cmc
add
mov
or
xor
into
std
lods
push
pop
ret
add
imul
ror
jmp
inc
lret
pop
ficoml
into
inc
rcll
push
add
mov
mov
stos
movsb
mov
mov
cld
scas
jae
push
test
int3
out
add
cmp
adc
mov
push
jnp
aaa
add
add
aad
or
fsubs
insb
ljmp
hlt
push
cltd
in
and
jp
shrb
mov
enter
in
xor
loop
loopne
dec
xchg
bound
test
mov
mov
pusha
fisubs
cmpsl
scas
mov
inc
mov
test
sbb
sbb
lahf
in
mov
in
insb
lcall
push
ja
fwait
arpl
iret
inc
lds
xlat
xor
cli
fs
sub
nop
fcom
pop
movsl
pop
mov
movsl
pushf
clc
or
sbbl
push
stc
sbb
sbb
scas
es
pop
in
mov
inc
movsl
cmp
add
pop
sbb
scas
pop
scas
sarl
xor
loop
fwait
lods
std
and
jl
iret
adc
xchg
lock
sbb
cmpsl
scas
jbe
je
jp
jge
push
mov
movsb
adcl
stos
scas
mov
lods
stos
sti
pop
dec
cld
mov
stos
nop
add
lods
mov
pop
out
loopne
sub
adc
shll
lea
ljmp
mov
shlb
xor
loope,pt
inc
inc
and
or
fdivr
jge
sar
decb
and
jmp
out
xchg
pop
mov
movsb
dec
mov
lret
jno
sti
imul
scas
icebp
jae
lods
cmpsb
sbb
or
add
xor
mov
test
daa
jno
popf
lds
mov
cmp
aas
cmp
sbb
dec
jae
lock
push
cli
movl
jnp
mov
ret
pop
mov
sub
adc
scas
pop
scas
aas
in
inc
jl
ss
sbb
clc
out
dec
xchg
fidivrl
js
ret
xor
loopne
test
cvttps2pi
jg
push
iret
hlt
mov
push
push
repnz
int3
inc
iret
ljmp
js
xor
popa
les
xor
sbb
test
push
jno
outsb
mov
repnz
xor
fwait
mov
fidivl
jmp
lahf
inc
fwait
lcall
daa
or
jno
mul
das
jbe
jmp
repz
jge
add
pop
shlb
outsl
mov
push
movsl
xchg
xor
dec
mov
cmp
push
sahf
nop
xchg
iret
cmp
sub
push
pop
push
mov
adc
movsl
mov
xor
ret
imul
and
jge
adc
in
rclb
jnp
stos
in
std
pushf
shll
int3
xchg
and
imulb
xor
stc
sbb
imul
in
loop
add
cmp
mov
push
pop
mov
and
push
fdivr
scas
mov
push
shll
sti
dec
add
out
push
fnsave
fwait
and
popl
pop
insb
dec
loop
popf
add
aas
lods
xor
pop
mov
aaa
add
pop
cmc
ss
mov
jnp
or
cmp
pop
int3
xorb
inc
decl
xchg
adc
ret
sub
ja
push
or
pop
aad
and
jge
test
or
adc
and
cmp
inc
add
data16
xor
and
xor
mov
out
sbb
lcall
xor
jb
repz
loop
movl
sbb
add
jb
notb
out
lcall
jbe
jo
fcmovu
cs
sub
js
js
cmp
sub
cmp
std
or
iret
cmpsl
pop
pop
lock
out
jecxz
xor
lcall
inc
jno
out
test
les
icebp
in
sbb
loope
test
dec
gs
imul
inc
and
mov
enter
xchg
out
test
mov
ja
xor
xchg
ljmp
push
pushw
sbb
dec
lcall
nop
push
sarl
cld
sti
cmc
sub
cmp
into
dec
add
cmpsb
mov
jb
clc
and
mov
mov
fistpl
ljmp
inc
mov
loop
xor
or
lcall
repnz
pop
out
rcl
addr16
push
insb
add
addb
cltd
jae
mov
jl
xor
leave
sti
test
jge
xlat
outsb
mov
push
sbb
fdivrs
jmp
and
xchg
or
lds
adc
dec
push
dec
push
outsb
popf
push
jecxz
or
sbb
adc
insb
test
ljmp
cmp
mov
xchg
xchg
ret
push
push
jecxz
cs
and
mov
fldt
shll
int
aad
sub
fidivrl
ds
jecxz
aas
dec
js
mov
pushf
lods
or
fcomps
add
inc
push
mov
lds
ss
push
dec
aad
dec
lret
ret
pop
lret
mov
stos
dec
or
pop
sti
inc
xchg
rcrb
adc
nop
jno
push
cld
out
rdtsc
jle
jb
stos
and
lock
cmp
lock
arpl
jbe
outsl
mov
outsb
adcl
shrd
and
mov
loopne
sub
xchg
lcall
adc
repz
daa
mov
mov
adc
fcoml
xor
pop
cli
jecxz
vmovaps
popa
jle
xchg
cmp
stos
push
jl
aas
sbb
iret
inc
mov
in
scas
ret
daa
shlb
or
lea
pushf
dec
mov
and
or
and
popf
sub
fimuls
notl
popf
dec
stc
loope
decl
addr16
insl
in
add
sub
test
mov
out
loopne
in
notb
into
sti
dec
pushf
test
jb
loopne
or
test
ss
inc
push
arpl
cmp
dec
loopne
sub
scas
mov
testb
pusha
aam
subl
push
jno
or
cmpsl
mov
push
lods
sbb
pushf
mov
inc
outsl
mov
pop
cltd
sub
nop
or
cmp
rcr
mov
dec
push
inc
mov
sub
repnz
mov
jnp
jmp
test
cvtpi2ps
sbb
mov
jecxz
in
xor
inc
xchg
cmp
insl
in
out
mov
lods
lds
rclb
sub
push
push
pop
pusha
inc
push
imul
les
sbb
inc
sub
dec
stc
sbb
test
and
mov
test
sbb
orb
pop
ds
das
mov
or
icebp
aas
sub
cmc
or
mov
and
and
and
jge
ljmp
xchg
pusha
jne
setg
mov
or
pop
insl
push
or
aad
call
test
sub
dec
push
inc
mov
jl
push
pop
in
pusha
sbb
add
jbe
cltd
inc
test
jne
enter
xchg
xor
test
iret
xor
push
sbb
cli
pop
inc
xchg
movsb
mov
cmpsb
pop
cltd
outsb
fcmovnu
frstor
sub
pop
and
jno
sbb
shll
and
sub
adc
pushf
xor
mov
sub
repnz
scas
data16
shlb
pusha
or
xchg
or
leave
lret
sbb
bnd
addr16
adc
xchg
mov
fcompl
and
es
sti
mov
push
and
mov
sbb
jno
mov
popa
loop
push
push
aad
je
aas
fiadds
es
xchg
inc
xchg
push
push
mov
and
pop
mov
insl
pop
xchg
and
adc
dec
add
cltd
decl
lea
repz
push
jmp
inc
std
ljmp
lcall
xchg
out
mov
adc
push
mov
jl
dec
mov
xor
cmp
enter
pop
pop
or
decl
push
filds
ljmp
push
ret
cmp
fbld
je
clc
pop
fadds
aas
lock
cs
jmp
cmp
xchg
cmp
in
in
pop
mov
dec
push
ljmp
pusha
and
inc
inc
scas
out
pusha
push
and
adc
inc
adc
xchg
rcrb
sub
into
ret
in
loope
pop
mov
mov
lcall
xchg
jnp
ljmp
aaa
xlat
repnz
cmpb
mov
fildll
jle
pop
push
in
idivb
cmpw
out
mov
icebp
rcr
xchg
stc
push
adc
inc
stc
lds
arpl
mov
std
xor
mov
dec
scas
es
sub
call
mov
lea
sub
adc
icebp
mov
sarb
jecxz
adc
inc
stos
mov
inc
sbb
inc
in
cmp
repnz
mov
mov
dec
dec
clc
adc
sbb
orb
mov
fs
ror
xor
jge
leave
inc
jmp
jo
repnz
cltd
cmpsb
sar
jnp
inc
out
pop
mov
ss
jns
in
push
movsb
lock
or
adc
cli
adc
add
pop
cmpsb
push
and
rclb
mov
aas
sbb
rcll
jmp
arpl
iret
in
les
imul
xchg
cmp
mov
xchg
mov
pop
jb
popa
insb
mov
dec
inc
out
push
jnp
mov
xorl
dec
push
xor
mov
lret
xchg
sub
sbb
mov
bswap
mov
push
int3
jne
dec
ror
mov
dec
mov
loop
aaa
arpl
xchg
popf
call
fcompl
mov
cmpsb
ds
push
cmc
mov
push
ret
adc
iret
leave
ds
out
mov
aad
jo
cmp
xor
andl
mov
shrb
movsb
pop
das
andl
clc
jle
mov
stc
ficomps
jne
xchg
jp
cld
jo,pn
cs
add
outsb
loop
jle
rorb
hlt
clc
cs
pop
inc
movntq
int
cmp
pop
push
pusha
sbb
mov
inc
sbb
into
mov
push
fmuls
adc
sbb
xor
sub
stc
dec
rorb
ret
mov
xor
mov
out
cltd
cmp
ret
out
mov
aas
jno
mov
push
notb
jns,pn
insl
roll
stos
ret
into
push
add
inc
mulb
xchg
in
imul
xchg
xchg
insl
add
xor
mov
push
iret
xor
dec
hlt
ds
rol
mov
jecxz
push
iret
aas
mov
test
mov
sbb
popf
lret
adc
stos
push
scas
popf
out
test
sbb
hlt
pop
xchg
and
fildl
pop
insl
push
pop
or
xor
xor
jno
dec
aas
out
jge
sub
xchg
jno
repnz
mov
xor
sahf
add
ret
pop
jmp
inc
mov
jnp
mov
pop
push
sbb
jle
mov
fistl
or
or
mov
les
cwtl
xchg
loopne
sub
adc
xchg
sub
jl
jp
aaa
jg
push
mov
test
inc
push
int3
ficomps
mov
insl
insb
mov
daa
stos
adc
or
mov
mov
ja
push
inc
sbb
push
sbb
mov
pop
jne
xor
jb
add
jge
outsb
mov
lock
aaa
mov
negb
dec
and
scas
xchg
xorl
xchg
lds
sbb
xchg
sbb
inc
popa
dec
imul
lods
fisubl
call
test
jmp
daa
out
addb
or
mov
out
lahf
test
lock
cld
jo
cltd
mov
aas
nop
cmp
pop
add
rol
roll
inc
pop
not
mov
jb
add
mov
and
inc
dec
lahf
xorl
adc
mov
fs
mov
imul
into
jle
dec
inc
adc
mov
out
flds
ret
pop
adc
andb
das
sub
outsl
inc
call
adc
jns
or
lret
push
dec
mov
mov
add
push
rclb
add
jg
rclb
add
test
fiaddl
adc
inc
ss
ret
push
les
call
lods
and
ja
dec
push
andl
xchg
jg
push
enter
arpl
xor
idivl
xlat
dec
mov
das
cltd
push
mov
movsb
js
jb
inc
jno
dec
lahf
clc
xor
notb
enter
jp
daa
popa
jg
mov
insl
jp
mov
sub
or
and
xchg
cmc
mov
pop
xchg
jno
add
repnz
mov
fs
fildll
loop
pop
push
cmp
mov
imul
adc
cmp
push
dec
jge
dec
insb
fwait
mov
mov
nop
dec
int3
jl
popa
sahf
subl
adc
ds
xor
arpl
sbb
gs
or
cmpsl
dec
pop
ret
mov
out
adc
xchg
jge
sahf
aas
mov
das
or
push
hlt
xchg
fists
dec
push
clc
subb
and
out
imul
lock
xor
pop
ljmp
inc
sbb
lods
lahf
push
cmp
clc
data16
cmp
shlb
jle
fsubr
pop
jle
test
orb
ret
mov
lret
shrb
or
xchg
jno
aaa
dec
mov
insb
out
sbb
or
cld
shlb
daa
dec
mov
push
popf
mov
sahf
and
out
sbbb
jo
and
adc
xor
call
lcall
xchg
mov
iret
xor
jle
dec
push
sub
mov
pop
pop
jg
sub
jp
call
hlt
popf
pop
ss
jno
enter
push
stos
add
fstps
and
je
popf
xchg
ljmp
dec
mov
dec
test
adc
xlat
inc
or
push
pop
fwait
lods
das
inc
dec
and
xchg
addr16
mov
mov
shl
mov
imul
jp
push
stos
leave
notb
push
stos
inc
sbb
cmp
outsb
in
jmp
adc
dec
mov
jnp
xor
mov
push
and
movsb
test
jae
mov
fwait
adc
sbb
and
lret
popa
xor
sub
leave
inc
int3
test
jl
sbb
ss
mov
loop
stc
nop
ret
push
sbb
subl
pop
jb
mov
pop
xor
scas
inc
ficoms
jb
je
les
subb
arpl
lahf
jl
test
mov
push
jb
sub
mov
lret
lcall
dec
mov
into
fwait
sbb
dec
xchg
push
lods
sarl
add
cwtl
insl
popf
sti
gs
xchg
popf
pop
cmp
xchg
mov
lret
push
and
pop
or
jle
mov
mov
dec
cmp
sbb
rorb
sbb
dec
psadbw
lock
xor
xchg
sub
cmp
sbb
push
jmp
in
fsqrt
pop
and
cltd
push
mov
out
rcl
xchg
notb
and
into
ljmp
xchg
and
push
and
fsts
in
mov
or
pop
and
lds
lea
and
out
xchg
sbb
cmp
sub
into
add
out
mov
cmp
inc
dec
sbb
clc
cmp
arpl
cli
lods
sub
lret
test
ja
xlat
ss
je
adc
or
dec
mov
daa
cwtl
pop
xchg
dec
insb
and
jno
movsl
leave
add
lea
cmpsl
mov
cmp
sub
leave
dec
mov
push
outsb
rolb
and
call
in
add
sahf
cmp
push
sbb
fs
lods
int3
cmp
or
add
ret
adc
test
popa
dec
and
sbb
mov
iret
jp
add
cmpsb
lock
arpl
pop
jne
xlat
aam
pop
mov
mov
jnp
sub
in
push
adc
mov
sbb
stos
xor
push
and
rol
xor
add
popa
mov
sbb
pop
mov
inc
je
imul
mov
mov
jne
cld
nop
add
jne
or
lods
subl
mov
or
add
fwait
cmpsl
stos
cli
mov
push
cmp
mov
dec
enter
call
add
sbb
lret
mov
pop
push
or
insb
cmc
sub
arpl
ja
es
and
jp
xchg
cmp
loope
pop
push
or
cld
dec
xchg
iret
add
les
orb
outsb
aad
aam
jmp
xchg
imul
jb
and
mov
jge
in
xor
inc
xchg
nop
lea
pushf
push
jae
call
lret
mov
xchg
pop
dec
sub
js
fmulp
add
mov
sarb
mov
pop
jne
mov
xor
push
xor
dec
and
push
dec
int
xor
or
out
lock
lret
lods
aam
inc
mov
hlt
push
mov
fists
and
mov
cmp
jns
or
and
ret
aaa
jl
and
scas
pop
or
aas
xchg
xor
jno
in
ret
iret
or
mov
push
xchg
xor
adc
subl
scas
cmp
test
cwtl
cmp
inc
ja
xor
rol
jp
dec
pop
mov
jbe
adc
sub
mov
sbb
dec
sbb
enter
in
dec
in
xor
repnz
cltd
pop
shl
movsb
jo
loop
adc
call
xchg
adc
jle
and
aaa
arpl
loopne
insl
xchg
jg
out
sbb
rcrb
jmp
aad
pushl
fldenv
daa
aaa
sbb
jl
lahf
fwait
cmp
add
mov
mov
mov
or
int3
xchg
js
jnp
mov
stos
inc
mov
jmp
jne
rol
loope
mulb
push
dec
cmpsb
mov
inc
test
xchg
and
lret
sarb
xchg
jo
mov
lock
cwtl
cmp
pop
xchg
jns
daa
sbb
xor
jbe
les
loope
push
cmpsb
test
push
fisubl
mov
stc
mov
lods
repnz
dec
shl
and
aad
inc
cmp
sbb
cmc
hlt
loope
cwtl
iret
outsb
icebp
sbb
mov
out
in
in
arpl
push
imul
out
scas
lret
sub
out
je
inc
test
imul
in
mov
in
xor
fstl
addr16
sbb
mov
inc
popa
cmp
inc
push
and
sub
pop
pusha
pop
imul
std
cmpsl
das
jnp
pop
sub
mov
and
add
in
jecxz
cmp
xchg
cmp
jg
insb
jl
fnclex
or
push
outsl
fcmovb
repnz
jl
sar
popf
test
and
push
loopne
fisubl
xor
mov
je
jmp
add
fimuls
fistpl
jns
inc
sub
inc
dec
les
fs
cmp
std
div
pop
mov
push
mov
ret
jg
mov
in
jb
inc
jne
out
push
jbe
sbb
xor
fmul
xor
bound
sahf
or
xor
add
shrb
outsb
fstpl
lahf
lods
jl
out
add
bound
std
gs
push
sbb
pop
inc
shll
mov
rcll
adc
adc
mov
mov
bswap
stc
cmp
add
ror
jp
xchg
in
es
dec
in
inc
rorb
add
dec
fst
jg
sbb
insl
gs
mov
cld
sti
adc
jl
sti
adc
test
add
int3
jne
push
iret
ljmp
data16
and
js
pop
int3
mov
data16
into
fistpl
push
adc
imul
fwait
and
inc
into
stc
nop
mov
push
pop
addr16
sub
lea
add
jp
daa
sbb
push
push
inc
xor
es
add
sbb
xchg
mov
imul
mov
xor
testl
scas
cmp
push
popa
mov
sti
arpl
xchg
int
lret
inc
insl
aaa
xchg
mov
adc
mov
jmp
arpl
lret
int3
push
sahf
dec
xor
das
mov
xor
push
nop
mov
and
cmp
pop
lods
addr16
mov
imul
lret
push
inc
fildl
lods
push
push
push
mov
lahf
jl
ret
adc
mov
lea
icebp
lods
sbb
and
inc
mov
jmp
sub
and
iret
mov
or
sub
push
adc
xlat
xchg
sbb
sub
xchg
insl
sbb
mov
add
xchg
mov
adc
mov
mov
sahf
je
divb
outsl
cmp
lret
or
mov
mov
add
das
push
cmp
out
cwtl
cwtl
add
aaa
xor
test
sub
test
sbb
popl
rcrl
nop
test
std
enter
push
adc
xor
popf
xor
dec
movsb
scas
loope
sub
jl
movsb
les
mov
out
sub
out
xor
mov
or
ror
adc
or
loope
sub
sub
das
stos
fdivrs
dec
push
int
rcrl
add
fwait
xchg
jbe
fdivrl
out
sub
mov
mov
jns
rcll
xor
mov
xchg
imul
xor
or
xor
jae
mov
xchg
jecxz
shlb
aas
lea
cmpsb
lods
jo
dec
imul
mov
lret
addb
or
sbb
daa
and
aaa
push
das
addl
pop
cld
lret
inc
psubw
orb
andb
enter
sarl
sbb
add
pop
incb
cmp
lea
out
imul
add
icebp
mov
enter
push
jns
or
arpl
add
jb
imul
pop
pop
mov
dec
iret
push
xlat
push
aaa
gs
mov
sbb
mov
fiaddl
and
push
mov
daa
xchg
in
jmp
fcomps
dec
les
in
sub
push
aas
mov
sahf
sarb
ljmp
or
dec
ficomps
xchg
shlb
push
xor
in
mov
mov
repz
jmp
loop
jns
lds
ljmp
sub
popf
lods
sbb
mov
aas
hlt
sub
out
out
ds
dec
mov
adc
hlt
jl
lret
popf
inc
lret
popf
nop
scas
add
leave
test
test
push
sbb
movsl
mov
stc
push
in
jp
out
jle
hlt
xor
push
mov
sub
pop
in
mov
dec
add
movsl
mov
jne
lods
ds
mov
bound
gs
shrl
and
cmp
pop
cltd
outsb
fistl
push
repz
movsb
cmp
stc
xor
cld
cmp
mulb
xlat
cmc
xchg
movsl
cli
lods
in
sbb
rorb
or
mov
adcl
fldl
pop
aas
stos
std
xchg
arpl
leave
inc
lods
das
inc
xchg
call
push
stos
iret
ret
out
fwait
hlt
fimuls
mov
mov
push
popa
cmp
enter
sbb
xor
iret
adc
push
lock
inc
out
cld
rcl
xchg
mov
cltd
mov
add
cmp
xor
pop
xor
mov
fldl
test
xchg
xor
sbb
repnz
fisttpll
cld
cmc
cmovs
sarl
xchg
loopne
ss
cli
jne
and
add
icebp
cli
push
jge
cmc
or
xchg
sbb
or
cmpsb
in
cmp
adc
sub
xchg
adc
mov
mov
nop
xchg
push
add
jbe
xchg
popa
in
push
jne
insl
fwait
in
mov
push
fsubrs
imul
orl
adc
jne
inc
in
add
into
mov
std
xor
dec
cmp
es
inc
push
push
out
std
mov
pop
jbe
mov
mov
iret
sub
xlat
mov
jb
cmp
psubw
repz
jae
sub
aaa
daa
das
push
add
pop
cmc
cmpb
pop
imul
cltd
lea
iret
mov
sbbb
dec
adc
jne
shll
frstor
int
iret
iret
iret
ficomps
stos
iret
xchg
add
or
xchg
faddl
cwtl
and
inc
dec
iret
xor
and
fisubrs
mov
addl
pop
out
out
incb
xor
pusha
ret
lds
jmp
fs
bound
daa
inc
pop
or
stc
rclb
addr16
inc
icebp
sub
iret
xor
sbb
pop
fbstp
push
adc
mov
imul
mov
push
pop
mov
test
inc
or
or
add
xor
ljmp
mov
sub
inc
imul
dec
clc
pop
mov
inc
jl
jno
in
les
subps
add
shrb
roll
inc
adcb
xor
scas
xchg
mov
push
mov
pop
in
mov
add
jnp
push
xchg
imul
clc
shlb
and
test
sbb
jb
in
dec
adc
call
lcall
inc
int3
std
mov
xlat
pop
jae
ds
push
ficomps
js
jp
outsl
mull
inc
push
cmp
push
pop
ljmp
pop
das
jmp
push
cmp
mov
pop
stos
cmp
xlat
cmpsb
test
mov
mov
xchg
in
or
mov
pop
pop
mov
and
jp
int
cmp
mov
daa
int3
jns
insb
mov
fucomi
inc
add
push
mov
push
push
pop
mov
pop
adc
fistpll
add
push
push
jno
xchg
jp
inc
pop
cmc
mov
or
mov
push
push
push
inc
insb
pop
fbld
adc
call
std
mov
ss
or
out
push
mov
imul
or
adc
pop
imull
add
in
sub
jg
icebp
pop
pop
or
pop
inc
stc
mov
add
bnd
mov
cmp
rcll
cmpsb
add
roll
xor
aad
pop
xor
add
mov
mov
call
pop
mov
pmaddwd
cwtl
sti
sbb
fdivs
mov
adc
pushf
push
arpl
stos
cmp
ret
sub
std
xor
push
nop
dec
test
jb
mov
fimuls
pop
imul
or
mov
xchg
jge
int
aam
aam
xchg
and
xchg
adc
cli
jecxz
hlt
inc
push
xchg
sub
cmc
popf
push
xchg
pop
pop
pushf
mov
sbb
lds
rclb
add
hlt
clc
or
mov
jb
stc
jns
pop
dec
fiaddl
adc
add
mov
sbb
enter
sub
test
adc
mov
mov
test
loope
enter
insb
rorl
stc
arpl
gs
mov
push
shll
fmull
sub
xchg
popa
or
mov
inc
mov
fbld
cmp
inc
arpl
movsl
cld
mov
leave
sub
jae
pop
inc
out
adc
push
adcl
mov
sahf
lods
fsubr
cmp
rolb
sub
cmp
fdiv
loop
and
shlb
adc
jns
xchg
jne
and
sub
cwtl
dec
sahf
mov
hlt
std
or
adc
inc
mov
or
push
push
int3
cmp
daa
push
in
call
hlt
daa
addl
dec
popa
push
imul
aas
popa
les
cmp
jle
adc
cwtl
cmp
stos
lret
xorb
aad
add
addb
in
out
cmc
push
or
outsl
mov
dec
scas
ret
mov
in
in
jl
imul
pushf
fadds
fisubl
iret
lea
sub
or
add
loop
sub
xchg
into
dec
lds
dec
pop
mov
adc
cmp
inc
xor
enter
in
cmc
xchg
std
cmp
pushf
pop
or
cwtl
aas
ljmp
scas
jg
pusha
mov
sub
mov
imull
xor
dec
sub
popf
sub
andb
pop
gs
into
iret
mov
adc
jmp
mov
jecxz
daa
or
lret
push
mov
xchg
xchg
rcrb
out
cmpsl
decb
sbb
xor
dec
pushf
xor
push
pop
nopl
out
pop
jecxz
je
xchg
pusha
ret
pop
addr16
stos
mov
inc
sub
jecxz
sub
ss
push
xor
je
mov
out
jae
mov
add
inc
pop
rcll
push
push
adc
out
jno
popf
mov
movsb
aam
data16
jne
push
pop
fwait
pop
std
xchg
inc
or
jl
and
stc
int3
inc
std
insb
jecxz
sub
mov
jns
loopne
cld
xchg
shll
cwtl
cli
call
pushf
add
add
test
adc
imul
push
sbb
mov
mov
test
cmp
es
outsl
arpl
xchg
in
push
mov
pop
inc
sahf
pop
daa
jle
hlt
shrb
mov
hlt
fstps
sub
in
outsl
lds
sbb
mov
jno
fldl
insb
sti
sub
pop
add
mov
push
outsb
pop
cmp
adc
aam
inc
xchg
pop
mov
xor
xchg
mov
jbe
stos
jmp
iret
or
sbb
xorl
popa
pusha
jae
cmpsl
sti
les
mov
and
lahf
push
adc
bound
add
fwait
nop
in
lea
push
js
and
pop
xchg
xchg
test
mov
je
loope
xchg
dec
imul
test
pop
xlat
loop
adc
scas
lret
cwtl
and
out
fisttpl
pop
xchg
sbb
lahf
lods
xor
int3
notb
xor
mov
jmp
pop
push
or
outsl
lods
test
sahf
icebp
subb
xor
dec
sarb
out
stos
add
cs
pop
outsl
lret
std
sbb
pop
sbb
or
mov
xor
sub
daa
mov
and
add
in
mov
cltd
hlt
mov
in
mov
or
int
xor
arpl
xor
sbb
dec
jne
fimull
jge
mov
icebp
int
out
cmpsl
pop
mov
mov
shll
aaa
fidivs
mov
lcall
or
jle
int
xchg
data16
ret
sub
jp
pop
mov
cmp
xchg
mov
sub
xchg
jne
pop
lea
shlb
sub
mov
inc
jne
inc
test
or
inc
mov
mov
or
xchg
lahf
sub
xlat
jge
xor
sbb
push
mov
in
insb
scas
push
out
dec
lret
lcall
cli
test
xchg
ja
jp
mov
mov
dec
jns
and
push
fisubs
repnz
mov
mov
shlb
and
sbb
push
cmp
xchg
jg
in
lods
loopne
dec
cmp
sub
cltd
imul
inc
mov
arpl
leave
lcall
xchg
mov
imul
xlat
stos
stos
ds
sub
adc
jno
clc
xchg
aas
bsf
lahf
hlt
mov
jb
pop
es
push
test
or
pop
test
mov
cmp
into
stos
cmc
call
mov
ljmp
std
sub
cli
push
insl
inc
test
pop
loopne
xor
ds
sub
xor
xchg
fsts
pop
int
fsubp
jo
popf
xchg
scas
or
inc
jno
mov
or
inc
mov
sub
iret
xor
xorb
lock
push
and
push
pop
pop
pop
pop
inc
jnp
mov
mov
mov
pop
inc
push
add
push
inc
addl
nop
shufps
sbbb
ret
pop
outsl
ljmp
push
xchg
adc
inc
push
cli
fwait
cmp
jb
lods
and
dec
jmp
insl
cmpb
les
xor
mov
pop
xchg
dec
sub
add
loope
jnp
cwtl
pop
jle
ficoms
and
scas
icebp
cmp
mov
mov
jle
cmp
js
ljmp
adcb
scas
mov
mov
cmp
rcl
jns
or
jne
jmp
sbb
xchg
in
roll
jae
mov
mov
pop
fmuls
xor
aam
adc
mov
mov
sahf
cmp
faddl
popf
popf
testl
fists
xor
adc
shll
inc
lcall
fst
sbb
jecxz
pusha
xchg
sahf
iret
inc
xchg
stc
dec
imul
jo,pn
movsb
fwait
adc
mov
mov
jns
cmp
push
shlb
lods
int3
mov
sub
mov
push
lret
clc
les
insb
pop
push
adc
mov
and
sbb
mov
gs
mov
lods
pushf
dec
insl
outsl
hlt
lcall
fdivl
cmp
jno
mov
repnz
sub
lahf
cmp
ret
ljmp
xchg
xor
iret
mov
or
stos
in
xor
sub
sbb
in
testb
test
in
push
mov
and
xchg
divl
rorb
mov
sti
addl
lods
jo
xlat
lock
mov
mov
fnstenv
cmpsb
imul
adc
in
rcrb
fdivl
cmp
popa
inc
fistpll
dec
sahf
mov
sub
inc
jle
add
sbb
adc
lods
dec
dec
repnz
add
add
ret
mov
mov
xchg
pop
cltd
sbb
inc
dec
xor
out
lret
pop
pop
jmp
sarl
cmp
xchg
dec
sahf
sub
pop
and
sub
cmc
lret
outsl
xor
sbb
cs
int3
mov
pop
ss
mov
dec
outsl
into
dec
mov
push
inc
pop
xchg
ret
sbb
dec
movsb
and
in
inc
outsl
jl
jle
push
dec
xchg
jne
pop
neg
xor
sti
jns
sbb
inc
outsb
sbb
test
lea
ds
and
add
cmp
movsb
sbb
jge
mov
mov
cmp
pop
push
push
add
rcll
cmp
dec
dec
pop
scas
loope
orl
pop
fcom
int3
mov
in
mov
push
push
fs
mov
lods
mov
std
call
inc
imul
pop
cwtl
in
shrb
ja
sbb
cli
outsb
int3
jbe
xor
mov
repz
mov
cwtl
inc
insb
mov
and
dec
mov
push
or
insb
cmc
fnsave
inc
mov
stc
cmpsl
out
sbb
xchg
inc
cmp
outsb
scas
test
cmp
or
pop
mov
jge
xchg
pop
and
aas
xchg
iret
mov
sti
jnp
enter
xor
out
lea
int3
loop
and
jl
jp
movsl
cmpsl
ss
xor
test
loopne
pop
ret
cmpsl
nop
and
and
jmp
insl
or
mov
shr
pusha
jns
mov
shlb
mull
andb
mov
add
lret
mov
loope
pop
xchg
sti
xor
cmp
sub
xlat
sbb
push
sbbl
mov
pop
lahf
sarl
insb
push
sahf
xchg
lock
or
mov
cmpsl
pop
or
das
xor
scas
lahf
push
shll
pop
mov
add
adc
rolb
std
scas
cwtl
xor
scas
jg
dec
pop
addb
movsl
dec
fnstsw
jae
dec
or
pusha
push
jmp
lret
sub
dec
aad
add
dec
dec
jge
in
js
xor
pop
sub
lret
hlt
mov
dec
or
push
addl
das
lcall
add
mov
stos
sbb
xchg
aaa
jmp
out
js
adc
adc
xchg
dec
ret
jno
jle
jmp
mov
mov
mov
cltd
jge
xor
rorb
orb
cmp
shrb
mov
mov
int
mov
imul
popf
rcll
cmpsb
repnz
test
push
sbb
cmp
cmpsb
stc
inc
jns
lods
mov
dec
mov
cmp
adc
jae
inc
pop
cmp
inc
jae
icebp
mov
push
bswap
insl
movsl
lea
lea
mov
into
fs
int3
sbb
lcall
xchg
inc
arpl
pop
cmp
les
dec
xor
xchg
inc
or
movl
imul
pop
sub
sbb
arpl
jecxz
push
rorb
inc
sbb
push
xlat
mov
popa
mov
adc
aaa
iret
add
lock
imul
scas
inc
jb
aas
xchg
and
jl
ds
leave
fcmovu
jo
adc
mov
imul
push
aas
sub
fistl
cli
and
and
test
lret
aaa
movsb
fwait
shlb
or
imul
data16
adc
inc
outsb
cli
xor
dec
pop
ljmp
add
add
push
pop
clc
mov
inc
mov
and
mov
mov
mov
add
es
xchg
lods
cmpsl
mov
inc
and
testb
mov
lcall
popf
stos
or
fdivrp
adc
mov
jge
rcrb
ret
dec
adc
pop
xor
mov
jb
clc
add
out
and
in
jns
addr16
inc
jne
lock
push
pushf
inc
pop
int3
add
or
sbb
pop
mov
mov
sbb
pop
call
jecxz
adc
mov
push
lret
aam
imulb
pmulhuw
adcl
sbb
cmp
bound
ret
insl
xor
mov
dec
jns
dec
xchg
push
test
pop
fstps
dec
out
loopne
cli
subb
clc
aam
pop
sbb
stos
aam
mov
pusha
ret
inc
insb
push
cmpsb
ljmp
push
push
pop
nop
pop
mov
xorl
insl
mov
pop
adc
sbb
push
add
push
add
lret
adc
pop
fcmovu
sbb
js
or
insb
and
xchg
inc
push
call
dec
mov
into
das
mov
lods
cld
fidivrs
or
inc
fiaddl
cmp
cld
sahf
je
mov
enter
fnstenv
jne
mov
arpl
mov
imul
jb
and
adc
fwait
mov
sbb
insb
pop
jmp
fwait
sbb
out
lea
faddl
ret
dec
mov
repnz
push
cmp
pinsrw
cmp
int3
pop
mov
aam
leave
cmp
jnp
mov
test
jmp
movsb
add
test
lcall
rorl
dec
mov
test
sbb
add
cmp
test
mov
sbb
add
aad
push
fdiv
pop
xchg
addb
in
arpl
int3
iret
leave
stc
call
stc
inc
mov
fs
js
xchg
xchg
add
lret
dec
lcall
push
adc
xchg
or
xchg
jl
in
js
xlat
ret
lret
pop
pop
xor
mov
mov
scas
imul
jl
add
jns
push
cmp
xchg
sbb
pop
mov
xor
lcall
scas
into
aaa
mov
mov
and
mov
cli
arpl
pop
je
or
lcall
clc
sub
movsl
fisubl
xchg
cmpsl
add
jecxz
imul
popf
cmp
pop
cmp
in
movsl
negl
xlat
pop
loope
jle
and
or
jg
pop
shrl
shrl
movsb
lds
push
das
jnp
add
imul
sbb
ss
aad
in
addr16
out
cmp
std
mov
push
stc
dec
mov
aad
mov
leave
in
mov
lahf
inc
cwtl
mov
mov
popf
lahf
sbb
or
or
mov
mov
inc
push
sub
rorb
stc
cmp
or
pop
jg
mov
loop,pt
and
sbb
xlat
cmpsl
leave
xlat
movsl
and
fistpll
cmp
push
or
fbld
dec
icebp
push
rorl
mov
jo
inc
or
sub
mov
push
dec
mov
in
xchg
sbb
mov
add
sti
shl
pop
push
push
stos
stos
imul
add
xchg
and
popf
pop
shll
jecxz
fdivrs
int3
sarb
sarl
mov
cmp
popa
jge
lods
push
scas
adcb
cwtl
add
pushf
movsb
test
dec
jae
xchg
repnz
arpl
inc
loopne
bound
fsubr
les
xor
lods
aaa
aaa
cmc
pushf
mov
rclb
sti
push
jbe
or
xchg
adc
xlat
and
fwait
daa
push
or
mov
lret
out
popf
or
call
lods
xchg
fdivl
inc
cli
adcb
in
mov
pop
les
sahf
int
mov
outsb
fisubrs
mov
pop
and
cmp
xchg
mov
cmpsb
adc
and
rolb
sti
mov
or
mov
aaa
ret
int3
dec
stos
jo
sbb
imul
xor
pop
mov
adc
add
xor
dec
dec
out
aam
fnstsw
cmp
cmp
arpl
andl
jp
jno
and
mov
mov
loopne
test
dec
icebp
lock
mov
pop
and
outsl
xchg
cmpsl
stc
imul
mov
xchg
out
mov
cmp
push
fxch
das
xchg
mov
imul
lds
cmp
test
adc
in
mov
jno
add
xor
fwait
mov
les
out
mov
mov
aas
push
pop
push
pop
sarb
loope
clc
pop
jbe
sbb
pop
cs
ss
mov
lods
adc
fldt
adc
push
into
xor
inc
mov
jb
push
sbb
add
ds
scas
cmpsl
xor
push
push
add
pusha
cli
pop
and
mov
mov
pop
add
dec
loope
mov
cmpsb
sbbb
push
sub
adc
xchg
xchg
out
mov
sti
jns
pop
pop
add
or
add
stos
cmp
mov
pop
push
push
and
ret
adc
repnz
int
mov
das
or
cli
jg
sub
jo
clc
in
sub
pop
shrb
jbe
aam
loope
mov
xor
jecxz
enter
pop
jns
cmpsl
enter
frstor
push
sbb
or
and
ret
mov
test
sbb
cmp
jnp
mov
in
pop
loop
in
in
test
ss
inc
adc
in
pop
rolb
test
adc
aad
sti
clc
scas
lea
sub
jmp
xchg
out
pop
push
xor
cli
fucomp
cltd
and
out
xchg
insl
mov
shr
fistps
mov
sbb
daa
sub
xor
push
mov
ds
sahf
fdivl
outsb
stos
lea
fildll
js
dec
mov
dec
mov
pop
or
or
lock
fnstenv
pop
ficoml
insl
inc
loope
inc
mov
clc
adc
jmp
jo
fistps
fwait
sub
pop
or
jo
fisubs
sub
inc
scas
jo
adc
sbb
xchg
divb
mov
adc
or
hlt
cmp
gs
mov
inc
adc
in
add
js
xlat
lret
or
xor
cltd
mov
push
data16
enter
loop
iret
inc
cmp
push
cmp
add
clc
loop
inc
pop
mov
mov
lahf
mov
push
or
fists
test
nop
fstps
sbb
cld
cmp
nop
sbb
mov
pushf
xchg
sub
push
ja
fcomps
mov
sahf
iret
insl
gs
jns
shrb
jmp
and
addr16
jo
gs
das
dec
adc
push
add
pop
cmc
and
in
movsb
out
rclb
cltd
mov
pushf
mov
out
dec
mov
inc
es
push
mov
fisttpl
popa
push
std
pop
jle
xchg
adc
repnz
out
adc
adcb
repnz
movsb
je
add
add
push
dec
push
lahf
sahf
pop
mov
imul
pop
inc
incb
add
inc
jmp
dec
sub
mov
test
and
xchg
sbb
test
pop
jbe
lcall
shr
insl
sahf
jecxz
jecxz
stos
arpl
fisttpl
inc
ret
dec
addr16
push
xchg
iret
ljmp
scas
sbbb
arpl
lock
adc
cmp
cmp
cmp
into
fcmovbe
idivl
or
sbb
lds
aas
dec
dec
cld
mov
pop
jp
scas
mov
shrb
ja
adc
call
mov
insl
ret
cmp
push
rcrb
imul
insb
push
imul
add
insl
push
das
jmp
pop
pop
mov
mov
inc
and
fists
xor
fldt
mov
fwait
dec
scas
mov
sub
test
xor
clc
cmp
pop
mov
pushl
jno
or
mov
aam
inc
out
mov
stos
out
orb
jne
xor
inc
je
bound
mov
lahf
sbb
sub
int
xor
test
lret
pop
jnp
dec
gs
movsb
lcall
ds
clc
push
mov
push
insb
scas
popa
fldt
sbb
mov
cmp
lock
lret
push
push
out
cld
call
push
dec
xchg
popf
ret
je
rol
add
push
sub
sbb
cld
jecxz
jmp
mov
vshufpd
xorb
xor
pop
push
aad
hlt
movsb
daa
jnp
xor
pop
mov
sub
mov
shlb
jecxz
imul
mov
icebp
sub
cmp
sti
pmaxsw
mov
push
inc
fwait
jg
insb
repz
out
mov
pop
cmpb
stos
js
shlb
pop
fs
test
int
xor
jp
cld
int3
add
push
sub
stos
xor
xchg
ja
cmpsb
loop
nop
mov
shrb
iret
andb
push
clc
clc
movsl
test
push
or
sbb
xchg
mov
std
jecxz
mov
dec
rcrl
shrb
mov
jbe
and
mov
sbb
fdivrs
cmpsb
xchg
sub
movsl
clc
jmp
sbb
adc
cmc
and
adc
push
les
scas
xchg
shlb
push
pop
lcall
add
mov
dec
frstor
push
or
stos
fldt
add
gs
mov
or
sbb
bound
idivb
xchg
aaa
push
xchg
js
or
sub
clc
and
into
iret
jns
stos
ljmp
jge
pop
or
mov
jne
movsl
sub
add
mov
dec
lahf
sti
cmc
push
jb
dec
add
sub
xchg
sahf
xchg
mov
jmp
xor
outsl
and
ss
mov
adc
test
xchg
dec
xchg
push
and
or
mov
stc
hlt
jecxz
mov
imul
inc
rcll
out
jnp
stc
add
lds
sub
xor
out
or
jno
sub
in
jb
pop
and
adc
and
lret
fdivrl
xchg
popf
jle
dec
arpl
pop
mov
pop
aam
rorb
adc
mov
xchg
shlb
and
push
jbe
subb
mov
icebp
mov
xchg
pop
jno
neg
out
lret
mov
fistpl
add
mov
out
in
cltd
dec
sbb
xchg
mov
movsb
loop
xor
and
jno
adc
or
in
mov
lret
push
cltd
mov
sub
pop
push
pushf
add
bound
mov
mov
inc
out
in
inc
adc
xchg
sub
cmpsb
loopne
notl
push
mov
pop
test
leave
pop
inc
cmp
decl
leave
arpl
jno
popf
lcall
jg
sub
in
xchg
sub
scas
xor
mov
bound
mov
mov
mov
divl
bound
push
inc
aas
push
mov
xor
out
mov
mov
and
xor
jmp
jp
test
add
fs
clc
xchg
push
and
inc
dec
mov
xchg
pushf
outsl
inc
outsb
scas
push
xor
arpl
inc
je
pop
mov
faddl
into
add
repnz
inc
test
xchg
pop
mov
jno
xchg
test
mov
cmp
outsb
movsl
mov
mov
fiadds
mov
cwtl
sub
push
pop
ja
scas
push
lahf
mov
mov
inc
out
cmp
mov
arpl
fiadds
out
out
and
inc
adc
mov
or
outsl
fmul
xorl
fdiv
comiss
cmp
fsubrl
test
outsl
rcl
adc
iret
insb
in
sbb
lock
lods
rcrl
movsl
and
gs
sub
addr16
lea
insb
jge
xor
loop
lret
xor
fisttpll
and
mov
addl
xlat
pop
sbb
pusha
insl
movsl
pop
scas
test
dec
decb
mov
fistl
lock
stc
or
pop
dec
dec
jo
cmp
push
andl
fs
mov
or
push
lcall
ljmp
xor
cmpsb
push
andb
test
push
mov
inc
adc
mov
jl
lods
push
div
push
sbb
notb
ret
dec
lods
and
in
rcrl
add
sub
ljmp
cmc
rcrl
loope
sbb
cs
aaa
push
es
rclb
cmpsb
jmp
popf
aad
ja
mov
mov
movd
enter
lods
mov
out
incb
test
sbb
mov
ss
lahf
imul
mov
hlt
inc
pop
add
sbb
ljmp
cwtl
or
rorl
sti
fucomi
inc
sbb
sbb
dec
fisttpll
xor
lcall
mov
xchg
pop
sub
pop
outsl
and
and
sbb
push
roll
push
out
jle
enter
mov
xchg
ffree
in
inc
rcl
lahf
scas
ljmp
jmp
outsb
jmp
test
mull
push
popa
dec
adc
aaa
int3
xor
leave
aad
insl
sbb
xor
dec
inc
mov
cmp
mov
mov
or
in
push
pop
ja
push
scas
adc
out
fcmovu
pop
push
lahf
aas
mov
inc
cmp
movsl
xchg
call
pop
sbbl
push
hlt
fdivr
xchg
js
arpl
sbb
cmp
ficoml
pop
jno
cmp
stos
mov
into
fwait
push
pop
cltd
cmp
cli
and
mov
orb
adc
out
arpl
aam
lods
stos
aam
fnstcw
pop
arpl
mov
je
inc
pop
or
outsb
ja
int3
adc
cmp
sub
fnstcw
jl
mov
leave
pop
mov
push
mov
lahf
bound
pop
rolb
addr16
xchg
pushf
xor
loop
cmp
dec
jbe
add
outsl
dec
cwtl
add
inc
adc
mov
bound
xchg
call
pop
pop
or
insl
std
fnstcw
pop
jecxz
xchg
mov
cmpsl
adc
mov
aad
fists
mov
push
lods
jmp
mov
lock
arpl
jle
mov
int3
inc
xchg
es
gs
add
das
push
movsl
rolb
inc
call
insl
ds
xchg
inc
cmp
flds
push
icebp
lea
fimuls
fistpll
sbb
movsb
scas
out
pop
jo
cwtl
xchg
lds
jge
lret
inc
pop
jmp
bound
sbb
add
pushf
sbbl
lods
or
fistpll
dec
fdivs
xor
movsl
dec
inc
pop
negb
cmpsl
ljmp
fstl
call
ja
mov
jl
xor
xchg
lds
lds
imul
xchg
ret
fwait
dec
xchg
dec
add
dec
or
idivl
xor
hlt
mov
mov
inc
lcall
nop
in
cltd
adc
inc
stos
js
lods
add
lods
test
imulb
adcl
cmpsl
popa
insl
lea
rcr
and
out
imul
dec
out
aam
outsl
test
mov
lea
dec
or
sub
xor
push
ret
mov
xor
and
mov
xchg
in
out
or
sub
inc
xchg
dec
in
and
push
push
inc
lods
imul
sub
lods
push
pop
inc
shll
data16
fucompp
inc
insl
xchg
nop
gs
jmp
int3
pusha
icebp
movb
mov
nop
cmpsb
inc
adc
icebp
xchg
push
lock
and
movsl
loopne
mov
push
jo
xchg
mov
scas
sub
xchg
jp
sub
pop
imul
xchg
lds
xchg
mov
mov
jb
xor
add
pop
lods
adc
jp
fcmovne
jno
jb
fsubs
int
and
scas
in
inc
addl
lahf
mov
push
lahf
cmp
pop
pusha
and
sub
xchg
mov
push
lahf
popa
mov
pushf
pushf
xchg
in
lcall
arpl
cli
sub
mov
or
inc
jae
test
mov
imul
jmp
imul
iret
cltd
mov
xlat
outsl
mov
jae
js
jo
sarl
sahf
outsb
insl
cmovnp
jp
bound
sbb
xor
fs
pop
outsb
inc
cmp
ss
lods
sub
xor
inc
mov
sbb
les
loop
jae
imul
inc
jae
scas
lods
and
fbstp
arpl
repz
add
mov
pop
rolb
jge
jmp
jae
sbb
test
icebp
imull
sub
add
cld
mov
push
xchg
movsl
fistpl
inc
sub
cmpb
jge
js
stc
cmp
out
fstpt
adc
mov
xor
add
dec
pusha
or
mov
push
mov
repz
add
sbb
or
jne
int3
add
lock
and
xor
testb
sub
stos
addr16
sbb
push
pop
cs
push
loop
jnp
mov
xlat
inc
xchg
xor
ret
adc
sub
adc
mov
pusha
adc
sarl
sahf
adc
out
cmc
dec
sbb
pusha
xchg
jp
and
mov
loopne
scas
mov
mov
movsb
adc
repnz
rcl
sarl
std
xchg
aaa
xor
int3
xor
mov
arpl
inc
xor
aaa
aas
loopne
movsl
rorl
push
mov
or
icebp
andl
mov
cmp
xchg
jae
mov
fbld
cwtl
stos
movsl
orb
or
mov
cli
lcall
or
ss
sbb
adc
cmp
add
xor
aaa
mov
lock
out
and
jl
negb
add
lock
sub
xchg
mov
fsubrl
mov
adc
pusha
movb
jo
ds
test
or
bound
adc
jecxz
cli
mov
bound
mov
pop
into
outsl
pushf
ss
adc
rolb
lods
pop
and
sub
dec
ret
int3
jmp
insl
mov
test
dec
fsubrs
xlat
push
fbld
xchg
push
dec
mov
cmc
mov
add
in
rcrb
stos
in
data16
push
mov
lods
cmp
jne
inc
lock
mov
outsb
mov
scas
pusha
icebp
bound
subb
in
add
fldl
mov
in
sbb
and
into
push
popa
hlt
cltd
add
aas
push
call
js
or
arpl
aaa
stos
iret
bnd
clc
ret
cmp
iret
xor
mov
negl
repz
fmulp
jnp
imul
imul
sbb
jns
scas
mov
dec
aad
sbb
or
adc
push
lds
mov
cmpsb
fwait
pushf
jge
xchg
lahf
mov
into
xchg
push
mov
pusha
push
lret
adc
mov
shll
cli
push
ret
pop
in
out
movsl
dec
std
loop
mov
pop
in
cmpsl
jl
lahf
mov
or
scas
lcall
sub
cmp
rorl
fcoml
xlat
add
nop
add
repz
xor
movsb
mov
dec
insl
dec
lds
in
cmc
sahf
add
gs
mov
sti
jno
push
imul
cmpsb
aas
mov
mov
sub
xchg
mov
adc
cmc
or
jne
push
sahf
mov
pushf
inc
popa
aas
jge
stos
mov
gs
idivl
cmp
and
inc
xor
jbe
cmp
jl
insl
jnp
sqrtps
jnp
dec
push
outsb
jmp
dec
lret
jp
cmc
adc
ss
and
lahf
testl
rcrb
sbb
aam
xor
scas
push
adc
testb
sub
xor
pop
inc
push
ds
cmpsl
fisubrl
stc
mov
push
movhlps
fbld
int
repz
jno
pusha
mov
push
stos
sbb
loopne
sbb
xor
push
cli
pusha
shlb
dec
iret
cmpsb
sbb
pop
mov
sub
dec
dec
pop
jb
ljmp
cmpsl
mov
add
xchg
and
mov
lea
adc
clc
shrl
sub
ljmp
pusha
sub
mov
into
fistl
rcr
jne
sub
rcrl
out
mulb
dec
pop
mov
add
in
scas
mov
imul
fnstsw
enter
jns
rolb
mov
repnz
jnp
sar
insb
and
insl
and
xchg
ror
aad
xchg
in
imul
arpl
loope
sub
aaa
das
jge
out
mov
fnstcw
in
jb
in
sbb
jo
dec
add
es
jbe
jae
adc
or
cmp
pop
xor
adcb
fcoml
stos
addr16
jg
push
repnz
pop
mov
scas
shll
mov
mov
fsubl
flds
or
cltd
and
sub
arpl
pop
paddd
and
fs
in
push
gs
mov
ret
pop
adc
add
iret
dec
icebp
add
push
jmp
lods
imul
mov
mov
push
xchg
orl
add
mov
cmp
jecxz
mov
inc
adcl
mov
sub
adc
mov
sahf
sarb
xor
outsb
and
sub
jle
pushf
loope
cmpb
in
adc
adc
iret
or
notl
adc
mov
fiaddl
mov
lret
sub
roll
stos
sub
push
div
loopne
loop
cld
scas
push
stos
jo
stos
enter
add
mov
dec
out
idiv
pop
std
push
dec
sub
pop
lea
jns
xchg
jne
pusha
jb
rcrb
mov
imul
pop
fstl
in
cltd
aam
aam
lret
hlt
mov
cli
jmp
imul
lret
jne
adc
xchg
mov
repnz
into
jbe
sbb
mov
adc
cmp
aaa
mov
jecxz
test
imul
push
imul
pop
jecxz
ja
and
lret
inc
xlat
popa
push
arpl
mov
mov
xchg
cmp
jae
cmpsl
divl
mov
cmp
mov
sbb
int
scas
pop
push
aas
push
shll
std
dec
push
pop
pop
stc
adc
aaa
jns
repnz
and
inc
mov
les
sbb
xchg
cmp
xlat
jo
fisttpl
mov
clc
mov
xor
adc
lahf
inc
push
cwtl
mov
notl
fsubl
mov
cmp
mov
inc
pushf
push
sahf
lret
std
or
test
xor
sub
push
inc
and
xor
sub
fistpl
mov
dec
cltd
pcmpgtw
das
push
cmp
ja
out
out
or
sub
xor
or
fbstp
push
test
xchg
mov
sub
xchg
aad
xchg
mov
mov
push
mov
mov
adc
dec
cmp
add
mov
adc
repz
stos
xchg
pop
stos
sarb
mov
adc
jo
xchg
jecxz
push
addr16
in
ret
xor
mov
call
mov
pop
or
out
adc
lcall
xor
out
sbb
mov
sbb
inc
adc
imul
sbbl
gs
ljmp
adc
add
xor
sbb
add
idivb
mov
nop
inc
sti
ja
movsl
rorb
pop
push
mov
pop
xorb
data16
lds
f2xm1
adc
movsl
enter
in
inc
mov
and
loopne
pop
xor
sti
lds
jmp
setle
aas
loopne
addr16
jp
mov
in
mov
jmp
inc
loopne
insl
enter
aas
or
mov
xchg
andb
push
sub
je
sahf
movsl
jne
xor
scas
repnz
xor
jno
das
imul
push
movsl
xor
repnz
xchg
cwtl
in
xor
mov
or
cmp
popf
and
cwtl
pop
inc
cld
cmp
push
mov
pop
scas
add
adc
push
and
sbb
or
or
les
mov
inc
call
std
lcall
mov
std
mov
iret
and
jg
xchg
test
ljmp
out
loop
pop
or
into
sbb
xchg
mov
inc
lret
rcrb
jb
mov
test
and
dec
inc
push
sbb
xchg
dec
leave
and
cmp
lcall
shll
dec
test
xor
or
or
push
pop
xlat
mov
inc
lods
arpl
xor
hlt
mov
pusha
xchg
sub
cld
test
out
aas
push
fistps
sub
inc
mov
push
ret
push
inc
imul
xchg
test
inc
lret
stos
mov
push
mov
pusha
cli
mov
or
mov
enter
mov
stos
jo
cmp
pop
out
cld
les
aam
mov
loopne
cmp
js
mov
ret
leave
out
mov
add
in
push
repz
mov
mov
inc
adc
pushf
add
insl
test
fistps
enter
or
lret
pop
dec
pop
das
rcrb
dec
sti
mov
xlat
jmp
mov
leave
push
xchg
rorl
xchg
and
sub
push
dec
shr
pop
jp
push
and
mov
into
cmc
mov
pop
cli
sub
mov
adc
int3
outsb
data16
or
push
in
mov
sahf
cmp
iret
out
lods
mov
bound
add
call
xchg
and
push
cmp
push
jns
imul
inc
pop
mov
dec
cld
je
adc
js
push
mov
add
sub
lcall
xchg
jecxz
pop
pop
xorb
aad
outsl
xor
sub
test
adc
sub
adc
popf
ljmp
aam
push
sarl
scas
cmp
faddl
jne
jno
push
xchg
cmpsl
dec
fsubl
adc
sub
aaa
xchg
mov
nop
movsb
loopne
pop
shll
xchg
mov
ret
push
add
fwait
js
mov
stos
imul
sbb
mov
jns
shrb
test
ljmp
lds
or
insl
adc
sarb
mov
jbe
inc
add
mov
jne
cwtl
and
and
loopne
stc
pop
mov
sub
lret
fmuls
jmp
shr
add
daa
aaa
arpl
push
add
ss
pop
push
gs
movsl
mov
inc
ds
ret
jecxz
cmp
dec
lods
add
and
adc
cmp
sub
lds
push
notl
push
dec
xchg
xchg
ret
pop
loopne
mov
cmp
frstor
pop
mov
push
hlt
popa
movsb
jb
or
or
push
out
ljmp
subl
push
adc
jmp
add
test
scas
pop
lds
dec
arpl
test
fsubrs
mov
jnp
std
push
xchg
cmc
fisubrl
out
mov
inc
cmp
cmp
mov
pusha
rcr
lods
fildl
cmp
fistpll
jns
sub
cmp
jecxz
insl
lds
inc
xchg
addr16
ret
fnstcw
pop
pop
mov
jge
mov
iret
test
nop
loope
xchg
push
cmp
inc
testl
scas
std
mov
loope
addb
insb
pusha
clc
push
mov
repz
dec
and
andb
lret
mov
aad
bound
jecxz
fprem1
sbb
xor
push
lds
jno
mov
fldcw
xchg
ljmp
sbb
inc
cmp
orb
fcmovnb
dec
out
jp
push
sbb
nop
faddl
mov
and
loop
pusha
xchg
push
les
jo
lahf
push
xchg
imul
mov
in
xor
in
cltd
test
shl
popf
lds
mov
pop
jb
inc
sub
clc
sbbb
xchg
push
add
lcall
and
jb
or
mov
inc
mov
inc
sub
shlb
pop
cmp
xor
mov
iret
hlt
xchg
and
aas
imul
jl
pop
es
lret
je
loop
push
mov
fsts
iret
push
test
lods
sbb
sbb
mov
jne
roll
test
xchg
js
lret
pop
inc
inc
cmp
xchg
jle
pop
cmp
stos
dec
or
in
test
es
push
mov
jbe
das
test
and
adc
jbe
adcl
dec
xchg
jmp
inc
pop
ret
add
movsb
dec
daa
cltd
fcmovb
out
ss
dec
mov
lahf
and
mov
add
cmp
mov
pop
jbe
mov
cmp
mov
aas
push
ror
ss
adc
dec
cwtl
lahf
jo
and
daa
mov
rcl
fistpll
lods
mov
scas
outsb
cmpsl
dec
clc
cltd
xorb
shlb
andb
mov
lods
into
and
jnp
repz
aam
pop
mov
lods
mov
jmp
push
xchg
jle
addr16
mov
or
inc
gs
pop
sbb
and
cmc
mov
cmpsb
add
je
cmp
jge
pop
jmp
cmpsb
repz
jbe
push
lret
and
ljmp
sub
test
push
imul
dec
ud1
or
stc
imull
daa
mov
outsl
adc
jno
jo
adc
fistps
or
xor
cli
inc
outsl
out
subb
xchg
and
mov
mov
test
call
rcll
push
pop
imul
cmp
lret
cltd
sti
or
je
mov
nop
sbb
or
cmpsl
imull
sahf
inc
inc
sbb
idivl
xor
sbb
mov
std
sbb
cmc
out
mov
or
test
or
test
xchg
test
mov
and
inc
lahf
test
or
aaa
stos
movsl
or
mov
mov
push
aas
push
out
add
inc
xchg
imul
cld
test
mov
jp
or
insb
add
scas
mov
and
mov
push
in
pusha
cwtl
cmp
jno
push
dec
xchg
mov
nop
jns
pop
inc
cmpsl
sbb
in
dec
pop
add
cmp
in
lcall
cmp
inc
test
jl
mov
jnp
sbb
or
ror
xchg
xchg
cld
imul
stos
lds
into
shll
loope
repz
xor
mov
mov
add
xchg
inc
cmp
lods
iret
outsl
loopne
mov
dec
sub
cs
loopne
in
inc
jns
shrl
fiaddl
shrl
call
loop
jmp
sbb
cmp
lods
hlt
movsb
pop
hlt
notb
sarl
sbb
std
fists
inc
aam
fsub
and
fbld
or
xchg
cmp
cmpl
icebp
jl
lock
fildll
jae
mov
out
and
inc
rcrb
mov
lods
sbb
add
setp
inc
dec
or
mov
lcall
aam
xor
fnstcw
shlb
dec
pop
ds
pop
fstpt
mov
jno,pn
cmp
stos
xor
aaa
stos
popa
sub
cmpsb
rcl
rolb
inc
jp
js
mov
aad
popf
enter
loope
adc
push
add
fstl
push
shll
cld
cmp
fimuls
in
cld
inc
shrb
lea
adc
cmp
lcall
add
and
push
idivl
sahf
scas
pop
and
addr16
xchg
movl
xor
dec
and
lds
inc
aad
ds
jno
fadds
xlat
outsb
sub
mov
mov
mov
push
aas
cmp
sub
dec
add
sbb
insb
leave
repnz
dec
outsl
mov
int3
shrl
addb
push
cmpsb
inc
dec
int
out
cmp
fdivl
xor
mov
test
lcall
dec
out
data16
out
mov
sti
xor
jb
jb
inc
out
roll
mov
int3
js
imul
or
les
sbbb
sbb
sbbb
mov
inc
pop
movq
test
add
xchg
or
insb
and
inc
daa
fwait
std
and
je
mov
dec
pop
push
in
jne
mov
mov
cli
mov
pop
push
dec
outsl
xor
aad
test
sahf
jne
addr16
lds
fiadds
lret
shr
mov
cmp
or
add
fsts
fsubrl
pop
stc
rcl
fdivr
and
jecxz
loop
lret
adc
mov
fcompl
es
std
divb
jns
shll
aaa
ds
sti
stc
call
jle
int3
imulb
std
shlb
xchg
dec
cmp
sbb
jb
mov
stos
cmp
popa
sarb
push
das
dec
cmp
or
jge
popa
test
sbb
push
cmp
lcall
xchg
lcall
xchg
adcb
mov
inc
mov
dec
test
sbb
add
sbb
sahf
pushf
aam
and
push
bound
sti
jge
out
jbe
fmul
adc
shlb
bnd
pop
insb
dec
cmp
insl
rcrb
roll
fsubrl
mov
mov
aas
int
cwtl
sti
lock
sub
xchg
add
pop
clc
sbb
cwtl
xchg
dec
cltd
movsl
jb
inc
push
push
mov
dec
mov
sahf
mov
fs
inc
mov
testl
mov
mov
in
inc
aad
or
jl
pusha
sub
lcall
repnz
std
sub
mov
adc
sti
jge
test
dec
and
out
mov
sub
cli
ljmp
and
aas
faddp
lods
idivl
xor
inc
shl
pop
int
xor
into
repnz
xchg
loopne
mov
inc
jnp
dec
pop
loopne
push
fwait
cmpb
fistpl
dec
xchg
and
sbb
mov
and
test
inc
stos
cmp
cmp
or
xchg
xchg
push
int
aas
lret
mov
aas
mov
mov
sub
inc
pop
movsb
lcall
add
push
test
sub
pop
cld
jmp
push
fwait
jo
mov
mov
xorb
pop
or
cwtl
or
xlat
jge
ret
bound
je
or
int
ss
adc
popa
dec
xchg
rolb
mov
jne
xchg
repnz
out
lret
mov
rol
mov
call
add
in
xor
out
sbb
mov
mov
dec
mov
and
jp
ss
pop
enter
xchg
cltd
das
les
mov
mov
adc
stos
popa
jge
pop
and
push
stc
xor
mov
lods
rep
loopne
shll
das
repz
xchg
fst
add
adc
xchg
xor
push
std
jb
sahf
jge
pop
enter
sbb
push
inc
cwtl
mov
repz
arpl
sub
popw
lret
fisubrl
shrb
mov
ret
mov
mov
fcomp
pop
mov
lahf
idivl
inc
push
movsb
adc
dec
jecxz
repz
lds
xor
or
push
adc
in
fidivrl
xchg
and
pop
xchg
adc
or
or
fmull
push
mov
fptan
push
jp
xchg
mov
enter
mov
add
pop
add
adc
ljmp
loop
xor
cmp
imul
sbb
inc
jmp
lret
movsb
lea
xor
scas
cmp
fwait
push
pop
inc
cli
fadd
call
and
sbb
push
jbe
inc
add
aas
addr16
ret
jecxz
pop
lret
addb
mov
sti
xchg
leave
cmpsb
adc
sbb
and
or
mov
lea
or
mov
dec
and
adc
out
dec
ret
icebp
dec
sbb
pop
push
xchg
adc
insb
loopne
xor
in
repz
pop
dec
mov
fsubr
ficoms
jmp
icebp
mov
push
fwait
pop
mov
aaa
aam
cmp
scas
pop
into
cmp
mov
pop
inc
dec
jae
outsb
inc
stos
inc
pop
inc
int
mov
cltd
aaa
sub
mov
pop
ja
or
dec
cmpsb
loopne
stos
dec
data16
cmp
insl
pop
push
dec
cmp
xor
js
lret
movsl
clc
sti
and
pop
jbe
add
ret
stc
loopne
xor
enter
icebp
fcmovu
cwtl
out
lret
xchg
push
push
or
ljmp
push
xchg
lret
jp
mov
lcall
cwtl
fidivrs
pop
decb
mov
movsl
mov
cmp
sbb
and
mov
or
jne
xor
mov
mov
mull
xor
xchg
inc
call
icebp
cmp
mov
sbb
mov
call
cmp
push
ja
es
and
insl
loope
pop
out
inc
mov
mov
js
shrl
fsub
cmp
fs
imul
test
xlat
cs
cmp
data16
inc
or
push
xor
int
xor
out
push
out
lea
sahf
sbb
cmp
xlat
test
inc
and
add
mov
fadd
inc
sbb
xor
mulb
fidivs
ret
enter
mov
mov
fsub
cmp
movl
loope
outsl
push
jns
lret
inc
add
cmpsl
jp
add
adc
pop
ja
mull
inc
mov
test
inc
cmp
cmp
scas
or
repz
lods
pushf
lret
mov
sbb
pushw
add
rorb
movsb
es
jo
cwtl
bound
rclb
pushf
in
mov
xor
sbb
in
jo
js
pop
pop
sub
pop
dec
push
dec
popf
fdivrl
push
cmpb
addr16
cmpsl
adc
les
xchg
mov
std
das
leave
add
popa
and
adc
dec
cmpsl
lea
mov
sbb
sub
call
orl
mov
or
sub
mov
or
lret
das
js
fld
cmpb
fwait
data16
in
call
scas
or
mov
cmp
out
lock
or
aas
jno
or
rolb
sub
pop
ror
insl
into
gs
dec
lret
mov
mov
imul
sbb
and
clc
jne
cltd
rclb
and
and
ja
in
xor
aaa
dec
imul
jecxz
xor
push
aam
mov
sbb
push
mov
dec
sub
sbb
xchg
sbb
mov
inc
enter
mov
xlat
xor
into
rolb
imul
pop
dec
jae
sub
ret
or
lock
fwait
push
add
pop
lock
ljmp
ljmp
inc
mulb
add
lock
push
or
int
mov
and
iret
mov
jno
xor
pop
dec
pop
imul
enter
fucom
fcmovb
mov
in
cmp
mov
loop
ds
and
pop
leave
xchg
pop
push
inc
inc
mov
xchg
dec
sub
lret
std
and
fcoml
sarl
pop
cmp
cmp
mov
sbb
out
out
push
imul
add
inc
loop
sar
data16
or
jno
xor
ss
iret
hlt
stos
pop
push
sbb
popf
subb
pop
jmp
js
fisubl
cld
push
push
jmp
mov
adcb
sahf
cmp
andb
movsb
mov
inc
adc
cmp
xchg
push
mov
fwait
adcl
fisttpll
and
pushf
int
mov
movsb
rep
std
cmp
aas
mov
ret
es
push
lods
mov
test
xchg
push
imul
sub
add
cmp
ud2
popf
pop
cmc
outsl
adc
leave
pop
js
jb
mov
cmpsl
fmul
inc
mov
arpl
imul
call
mov
pop
out
addr16
lcall
sti
xchg
adc
aas
lret
lea
mov
sub
push
imul
lret
pop
cmpl
nop
push
xor
sarl
repnz
sar
ffree
pop
push
mov
das
push
sbb
jae
pop
punpckldq
test
add
lret
jecxz
fmuls
ja
les
cld
rorl
xchg
or
lods
mov
xchg
pusha
shlb
sub
orl
test
xchg
xlat
ret
inc
sub
sbb
popa
pop
pop
mov
das
pop
bound
adc
push
mov
jns
pusha
add
mov
cmp
adc
rol
loop
arpl
xchg
mov
dec
sub
shll
xchg
xchg
insb
and
daa
into
mov
xchg
jno
lods
repz
mov
lds
push
dec
rol
lret
jns
es
repnz
or
sub
dec
mov
cs
popf
push
jmp
aam
test
scas
ljmp
cmpsl
in
test
sub
and
sbb
testl
sub
pop
or
push
fimuls
xchg
adc
inc
fisubs
adc
in
pushf
mov
scas
cmp
adc
orb
mov
cmp
mov
dec
fimuls
lahf
cld
push
shlb
inc
iret
into
or
cmp
mov
jnp
fisubrl
icebp
pop
dec
out
xchg
les
dec
inc
adc
fwait
xchg
rcrl
xchg
adc
roll
std
jle
adc
aad
push
dec
fiadds
imul
mov
dec
icebp
inc
jle
and
rolb
daa
stos
pop
roll
inc
add
call
cwtl
adc
pop
cld
sbb
adc
add
icebp
xor
mov
imul
xchg
or
ret
or
xchg
mov
adc
pop
outsl
lret
mov
pusha
push
mov
mov
out
hlt
xor
in
test
mov
or
jae
rorb
and
fwait
js
sbb
and
mov
or
in
sbb
push
and
inc
push
push
xor
sahf
push
or
add
mov
sbb
xchg
cmpsl
sbb
mov
inc
in
sbb
jp
push
inc
add
dec
xchg
loopne
dec
dec
mov
shlb
pop
adc
lods
jl
mov
arpl
bound
pop
or
jl
addr16
sbb
inc
repnz
clc
lea
and
sets
popa
mov
imull
aaa
or
jae
dec
iret
sub
jb
and
inc
je
sbb
cmp
not
stos
inc
dec
or
shl
repnz
pop
cmp
sub
push
iret
adc
lock
inc
xchg
jmp
xchg
std
js
mov
jbe
leave
push
out
sub
scas
sahf
dec
mov
in
imul
fwait
pop
xor
div
ror
test
test
mov
xor
jge
sarb
push
lods
add
rcr
jmp
dec
stc
shlb
fwait
data16
add
loopne
mov
push
adc
push
test
push
test
mov
mov
jb
jae
xchg
dec
sub
cmpsb
rcll
adc
jae
jnp
loopne
enter
js
jbe
cmp
mov
cld
and
add
or
adc
push
push
adc
cmpsb
xchg
sbb
repz
dec
sub
pop
xor
dec
jmp
add
loopne
aas
sarl
adcb
inc
dec
out
sub
add
push
stc
cmpsl
adc
cmp
xchg
jo
sub
mov
cmp
test
cli
addr16
nop
es
jae
push
push
add
scas
cmpsb
and
aad
cmc
lds
negl
xor
adc
xchg
test
test
pop
dec
pop
cmp
or
int
mov
sub
sub
sub
aad
fldt
jp
sbb
out
lea
pop
outsl
cwtl
adc
jle
sti
cltd
adc
clc
jp
iret
sbb
popa
pop
sarb
inc
push
shll
cmp
cmp
and
scas
repnz
sbb
std
mov
mov
scas
push
hlt
lahf
iret
je
fistpll
cmp
sbb
inc
pushf
or
sarb
cmp
repnz
sbb
insl
insl
fsubl
mov
and
aad
inc
aaa
xor
faddp
imul
aam
and
xchg
fwait
mov
aas
or
mov
lret
test
mov
fimuls
in
mov
fistps
push
icebp
cltd
sub
xor
inc
test
les
mov
clc
push
add
fstl
mov
pop
sti
push
cmpsb
out
movsl
nop
sub
les
and
pop
xchg
adc
nop
out
and
scas
xor
dec
dec
les
cmpsb
loopne
enter
lods
xchg
cwtl
lret
fwait
pop
xchg
loop
arpl
test
jbe
pusha
mov
dec
cli
and
cs
bound
orl
fcoml
lods
int
hlt
lods
scas
and
cltd
nop
hlt
jg
lcall
adcb
mov
in
out
mov
xor
pop
ss
xchg
cmp
and
mov
sti
xchg
add
into
sbb
push
mov
mov
lret
repz
fists
sti
adc
test
or
jb
dec
nop
and
outsb
mov
es
and
loopne
enter
sub
cmp
and
lds
jmp
movsl
adc
mov
jb
nop
cs
push
cmpsl
aam
xor
mov
dec
in
inc
hlt
inc
cmpsb
xor
out
xchg
sbb
xor
pop
cmc
pop
es
icebp
xchg
jne
inc
cld
bound
aad
add
dec
add
sub
jo
mov
dec
rorl
cs
push
stc
cmpsl
add
cld
sbb
cltd
ja
imul
mov
iret
mull
arpl
adc
cmpsl
jb
inc
jg
mov
sahf
mov
mov
jg
sub
in
mov
adc
rcll
lcall
fistpll
lock
iret
ja
xor
or
int3
xor
mov
mov
js
adc
cmc
jae
sbb
sbb
or
rorb
inc
add
jo
mov
xor
dec
loop
rcl
fistpll
push
push
repnz
popa
outsb
mov
mov
cs
ljmp
or
test
cmpps
fwait
divl
mov
jo
shlb
push
mov
pop
cltd
sbb
push
in
test
xor
aad
test
scas
std
repz
stc
and
adc
xchg
jne
sbb
pushf
mov
lahf
pop
ljmp
lea
cmc
scas
xchg
and
dec
pop
dec
jns
sbbl
movsl
inc
adc
or
ret
dec
and
xor
cltd
arpl
aad
mov
ret
sbb
pop
cs
rcrb
fldl
jnp
push
insl
fdivl
or
dec
mov
shr
or
or
idivb
jecxz
dec
cmp
ds
pop
js
cmc
xorl
dec
xor
loope
dec
push
je
and
jne
fstpt
jae
pop
imul
jmp
jno
nop
lahf
shll
imulb
outsb
and
popa
test
mov
lcall
ds
cmp
test
xor
xchg
lret
and
lock
ret
jbe
pop
aam
and
sahf
sbb
das
dec
rclb
push
fisubrs
call
ret
stc
push
inc
or
ja
repnz
popf
pop
push
add
mov
hlt
push
sti
movsb
ficompl
and
fwait
jge
adc
pop
orl
xor
in
pop
pop
jb
ljmp
mov
mov
mov
xlat
dec
push
cltd
pop
mov
int
stos
int
sar
cmp
cs
sti
mov
inc
pop
cmp
add
mov
sub
repz
ror
mov
into
and
inc
orl
jbe
push
fnsave
test
lcall
icebp
dec
adc
and
sub
push
les
mov
mov
ds
cmp
popa
pushf
cmc
int3
out
clc
push
push
ja
sbb
mov
retw
jnp
jns
xchg
or
jns
and
cmp
int
xlat
or
scas
shll
aas
lcall
xor
sub
xchg
bt
sub
mov
pop
xchg
dec
or
mov
dec
mov
and
cli
lret
mov
cmpsb
sub
inc
in
pop
push
jl
jo
sub
lds
pop
mov
ja
mov
test
clc
notl
insl
movsl
les
scas
filds
xor
clc
je
insb
mov
lahf
repz
jmp
shld
out
dec
xbegin
fs
repz
rclb
dec
test
cwtl
fidivrl
sub
mov
lret
jbe
imul
mov
mov
inc
xor
adc
lret
sbb
imul
mov
fbstp
shlb
ds
pop
and
lods
inc
aam
and
xchg
mov
loop
or
inc
xor
inc
cmp
rcll
xlat
mov
stos
inc
and
pop
and
jbe
xor
add
mov
aaa
pop
pop
pop
xchg
cmpsb
int3
fstpt
dec
jb
push
loop
cmp
imul
into
imul
pop
icebp
test
pop
cmp
lahf
xchg
sub
push
sahf
gs
fcomps
xchg
xor
nop
popf
insb
push
lcall
mov
arpl
push
jnp
clc
jmp
xlat
insb
jl
and
call
xchg
pushf
aad
add
scas
inc
sub
pop
jmp
cltd
push
xchg
inc
adc
push
test
mov
push
stos
mov
dec
movsl
jae
cli
jns
ds
dec
or
fiaddl
addr16
mov
mov
mov
jne
cmpsl
lods
pop
insb
lahf
sahf
mov
inc
sti
mov
sbb
rol
pop
jmp
jge
test
aaa
or
sub
popa
ret
lret
add
pop
adc
cli
jno
push
arpl
jg
xchg
xchg
je
adc
mov
addr16
mov
nop
jmp
ljmp
lahf
fs
arpl
out
popa
aad
out
lock
push
inc
popf
xorb
jecxz
sub
movsb
jmp
xchg
bts
daa
fs
gs
adc
sbb
xchg
jmp
ds
mov
inc
dec
ja
xor
cld
xchg
inc
add
mov
jnp
add
outsl
lea
and
push
das
xor
cli
pusha
xlat
ror
mov
and
movl
fdivrp
sbb
mov
jns
lods
xchg
idivb
frstor
push
ljmp
and
imull
pop
aad
outsl
xor
stos
bound
out
sar
add
adc
fldcw
inc
pop
fwait
xchg
inc
inc
push
gs
cmp
in
fbstp
lea
cmpsb
push
pop
mov
movsb
xchg
adc
sub
mov
imul
in
mov
dec
js
outsl
out
int3
stos
sub
lret
in
cmp
adc
jmp
and
push
or
sbb
pushf
or
lret
cmp
pop
xchg
fwait
insl
jno
sbb
mov
mov
xor
ret
shl
pusha
arpl
jnp
mov
ret
jbe
lea
xchg
sahf
and
jp
std
popa
mov
jmp
shl
ret
xor
xchg
stos
pop
mov
pushf
inc
in
rcr
lret
enter
mov
popa
jns
mov
mov
scas
adc
imul
adc
mov
or
cmpsl
shr
add
stos
push
pop
hlt
outsl
or
xchg
incl
movsb
adc
sub
xchg
mov
xorl
bound
insl
inc
imul
sub
sbb
sub
xor
push
add
jge
cmp
mov
cmc
mov
out
jl
add
cmp
cmp
ljmp
ret
scas
stos
in
ja
pop
push
aad
inc
in
imull
into
mov
mov
push
mov
ja
jno
push
lret
jbe
aad
in
xlat
jne
push
adcl
xchg
sbb
xchg
es
and
inc
fmull
fwait
pop
cmp
or
inc
orl
xchg
push
and
jbe
popf
dec
sub
in
shrb
aad
dec
pop
fcoms
pushf
xlat
shrl
pop
mov
ss
xor
je
xor
call
shr
cltd
jge
mov
icebp
dec
in
addr16
loop
xchg
xor
popa
push
jmp
inc
mov
push
jb
and
mov
lds
pop
and
test
subl
mov
and
pop
les
xor
add
push
jp
push
stos
mov
xchg
dec
push
nop
cmp
adcb
scas
and
ljmp
xchg
inc
lret
xchg
lcall
loopne
adc
cmpl
iret
mov
dec
out
fldt
xchg
call
xchg
mov
push
inc
cli
rcrl
xchg
sub
mov
cmp
fs
orl
mov
imulb
js
mov
pop
movsb
cmp
cld
call
xchg
out
lods
mov
sub
cmpsl
jne
sbb
add
lcall
cmpsb
sbb
xorl
jno
jnp
adc
out
mov
fdivs
xchg
mov
lods
and
or
sbb
cmc
xchg
imul
mov
jns
xor
adc
std
in
les
mov
mov
add
out
xor
pop
dec
loopne
add
push
jnp
mov
add
movsb
icebp
pop
push
pushf
inc
orb
push
mov
mov
scas
test
jno
cmp
add
push
gs
dec
js
inc
inc
arpl
cltd
in
fs
and
inc
or
testb
jbe
adc
inc
xchg
ds
nop
add
add
sub
mov
pusha
add
adc
adc
cmp
sbb
pop
es
jl
int3
add
ljmp
pop
test
movsb
repz
mov
mov
stos
sub
lahf
jmp
fs
aas
cmpsl
add
inc
lock
lods
and
ret
jecxz
dec
push
jg
out
xchg
hlt
inc
fs
addr16
mov
sbb
mov
loop
or
xchg
xchg
jg
jns
pop
inc
fdivl
lods
add
jle
pop
add
sbb
mov
insb
outsb
dec
pop
fidivrl
mov
dec
dec
aam
push
orl
xlat
into
pop
pop
inc
sub
mov
in
push
push
or
mov
inc
ja
xlat
dec
orb
mov
sbb
loopne
dec
int
dec
cwtl
enter
add
icebp
std
adc
xchg
lods
mov
arpl
enter
in
jnp
mov
xchg
xor
fildl
inc
and
rorl
shll
xor
lea
push
mov
sahf
xchg
add
fnstenv
shll
into
sbb
fstpl
cmp
out
repz
push
sbb
xchg
sbb
fidivrs
xchg
adc
rclb
push
insb
mov
mov
jns
cwtl
push
and
out
fwait
or
inc
stc
and
movsb
out
out
cmc
mov
or
mov
cmp
es
mov
cltd
mov
rol
pusha
pop
addl
jno
imul
mov
jae
xchg
jecxz
js
jge
in
loopne
std
cmp
ljmp
lea
enter
and
popa
lock
das
aam
aad
mov
outsl
xor
pop
pop
sbb
and
sub
int3
test
fwait
jno
mov
stos
insl
lds
daa
out
mov
or
mov
dec
loopne
pop
lret
enter
add
cmp
ja
add
dec
jmp
aas
fisttps
clc
imul
daa
or
push
push
cmp
cmc
enter
jg
das
imul
fdivrl
jp
xchg
jns
xor
xchg
test
xor
daa
lea
fs
lret
insl
nop
cmp
std
push
jecxz
dec
mov
dec
xor
movsl
dec
leave
popa
inc
xor
push
int3
mov
mov
stc
mov
cmp
mov
and
sub
js
or
loope
test
lahf
or
mov
mov
dec
movsl
mov
outsl
mov
ss
leave
mov
mov
data16
popf
movups
sbb
pusha
shr
jg
cwtl
sbb
out
xor
dec
xchg
sarb
subb
popa
clc
test
pusha
or
pop
add
pop
sahf
jne
jecxz
aad
rolb
cs
xchg
cli
dec
adc
xor
mov
mov
inc
mov
cld
in
int3
or
in
dec
fsts
lods
mov
xor
mov
insl
aas
jle
push
mov
stos
lret
cmpl
push
push
mov
mov
pop
jle
or
jne
jecxz
aaa
popa
pop
xor
and
cmp
sbb
and
jne
jo
mov
sub
sbb
stc
or
jno
aam
or
popf
call
sub
pop
push
gs
mov
xor
sbb
clc
jmp
sub
rcrb
cwtl
cld
addr16
inc
leave
in
mov
sahf
inc
sub
enter
minps
mov
push
data16
mov
add
add
mov
stc
add
mov
out
jnp
fstl
jle
cmc
mov
pop
outsb
push
out
pop
std
and
mov
dec
movsl
clc
negb
sarb
xchg
into
push
cwtl
sub
nop
mov
sub
fistpl
inc
pop
movsb
mov
add
pop
mov
out
and
jae
push
out
bound
scas
ret
add
fbld
repz
xchg
out
xor
test
jno
mov
scas
mov
xor
fscale
jns
nop
or
xor
popa
mov
dec
cld
jb
stc
test
les
push
and
push
rcrl
rcrb
add
push
xchg
notb
or
rcr
ss
dec
pop
xor
inc
testb
cltd
mov
jmp
sbb
and
dec
push
xor
fdivs
in
out
je
xlat
xchg
je
xlat
movsl
popa
testb
jb
fidivrs
cmc
sub
push
lea
cmp
cmpsb
das
int3
jecxz
les
bnd
mov
cmp
cmp
mov
mov
outsl
dec
insb
out
leave
push
fidivrs
dec
add
xor
jo
loopne
mov
fidivrs
loope
lods
addb
cmp
shrl
mov
ljmp
shlb
xchg
in
sahf
lock
jns
push
lock
jno
xor
sbb
ret
iret
cmpsb
mov
dec
repnz
jge
mov
pop
push
jg
hlt
jbe
push
add
push
test
sub
cltd
outsl
pop
ds
jns
and
cwtl
pop
or
mov
add
jecxz
lret
lock
nop
fisttps
mov
jl
xchg
mov
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
inc
lahf
sub
sbb
fidivrs
or
fwait
pushf
fwait
sbb
cmp
pop
iret
or
fistpl
sub
fistpl
sub
fistl
mov
bound
or
adc
fnsave
test
mov
or
cmp
mov
fs
jns
addr16
mov
inc
cmp
or
mov
enter
divl
inc
cmp
loopne
add
adc
mov
mov
fisubl
iret
rcrb
push
jb
sbb
ss
xor
sarl
testb
in
push
mov
xor
cmp
inc
mov
test
test
cmp
push
mov
push
into
jb
popa
jo
mov
clc
je
enter
pop
iret
or
fistpl
sub
fistpl
outsb
scas
pop
orl
aad
inc
cmp
pop
iret
or
cmp
sub
pop
lcall
adc
or
fistpl
sub
pop
iret
sbb
fistpl
sub
ficomps
sub
fistps
sub
lret
pushf
fwait
or
cmp
pop
iret
sbb
fistpl
sub
fistpl
sub
pop
iret
or
sbb
cmp
or
fistpl
sub
fildl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
add
jmp
pushf
fwait
lods
add
cmp
outsb
out
fistpl
push
jmp
pushf
fwait
sbb
cmp
sub
sbb
cmp
push
iret
or
or
sub
fistpl
sub
mov
fwait
sbb
fs
or
fstps
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
fistpl
sub
xchg
xchg
fwait
xor
sub
jae
rcrb
and
add
sbb
leave
inc
mov
inc
sub
dec
pop
aam
and
mov
es
inc
dec
loop
sub
or
inc
add
in
pop
orl
dec
aam
mov
pop
ds
test
mov
sub
xor
shr
sbb
pop
std
int
and
xor
adc
mov
hlt
fnstenv
jl
leave
or
mov
push
mov
adc
cmpsl
pop
orl
fdivp
xchg
ds
ds
pusha
stos
movb
test
push
test
cmpsl
mov
lret
sub
or
out
js
sub
je
cs
pop
push
dec
popf
push
jg
loop
inc
pop
pop
in
addr16
inc
ja
jg
daa
aam
inc
xchg
arpl
imul
xor
mov
jne
xorb
xor
push
jmp
xchg
adc
push
mov
jmp
out
in
dec
fistl
rcrb
dec
bound
cmpb
and
lcall
enter
xlat
js
and
and
scas
lods
push
cwtl
pop
or
std
xchg
sarl
xchg
jae
cmp
fstpl
xor
mov
add
out
in
ds
cmc
divl
xchg
scas
xor
xchg
xor
inc
sub
aad
int3
test
lds
cmp
jae
pop
sbb
vcvtss2si
push
icebp
std
enter
xchg
cmp
fildl
js
xor
inc
int
lea
test
int3
loop
mov
mov
ss
in
cmpsl
aam
push
sub
and
cltd
mov
jp
cwtl
outsl
lock
inc
jne
xchg
cmc
xchg
sbb
rorb
jb
aad
rdtsc
aas
in
add
fs
aas
xor
xorb
push
shlb
scas
pushf
jecxz
dec
lds
pop
push
push
sub
jle
mov
ror
iret
cmpsb
sbb
out
addr16
and
add
pop
cmpsb
jecxz
mov
lret
bound
shll
jl
ffreep
es
outsl
sub
xor
hlt
inc
stos
cmc
scas
cs
sub
xor
mov
mov
into
add
sub
jle
dec
push
outsl
cmpb
xor
jnp
jne
ljmp
out
jp
mov
mov
lea
mov
sbb
jmp
jmp
aas
xor
mov
and
lods
les
sbb
addr16
adcl
pop
fnstcw
mov
push
nop
adc
icebp
push
inc
sub
fsubs
mov
insb
dec
ffreep
adc
sahf
lret
ret
cmpsl
testl
shrb
push
push
mov
cmpb
outsb
dec
mov
mov
shrb
stos
jb
enter
in
test
add
push
or
outsl
aas
adc
add
roll
loopne
adc
push
sbb
lahf
xor
insb
sub
lea
aas
pop
pop
out
mov
pushf
movsl
rorl
cwtl
stc
xor
pop
aam
sbb
jg
repnz
das
int
add
pop
and
rorb
aaa
loopne
orl
fcoml
pop
cmp
xor
jmp
mov
ss
loope
test
stc
dec
in
pop
nop
rcr
cld
inc
or
mov
mov
scas
xchg
inc
dec
shlb
xor
test
mov
movhlps
mov
inc
and
add
sarl
fstps
sub
pusha
pop
ja
stos
scas
pusha
add
icebp
ds
push
sbb
mov
outsb
mov
xchg
jno
stos
and
dec
xor
sub
lahf
inc
repnz
add
lods
lds
dec
jo
xor
add
jbe
push
fcoms
mov
mov
stos
push
enter
dec
pop
sbb
lea
fcomps
ret
lea
push
mov
jle
adc
fisttps
cld
test
movsl
push
movsl
mov
lods
pushf
imul
inc
iret
cli
lcall
pop
mov
loopne
or
pop
pushf
aad
inc
stos
rcl
push
or
pop
sub
imul
iret
lret
test
test
ret
pop
cmp
in
mov
and
fiadds
mov
push
xor
outsl
cli
imul
gs
repz
cmpsb
enter
jl
inc
push
mov
xchg
ja
fsubrs
test
inc
adc
rcr
xchg
cmpsb
push
fwait
mov
lret
loop
call
pop
pushf
ja
jmp
push
jne
push
mov
mov
outsl
inc
stos
dec
stos
xchg
inc
lock
adc
jmp
and
cmp
cmc
in
out
leave
cmp
mov
sbb
and
mov
retw
test
sub
test
push
out
js
sbb
das
sbb
or
lods
in
orb
cmp
lods
adc
and
arpl
insb
pop
cmpb
bound
jo
inc
xor
ljmp
popa
adc
out
mov
mov
andb
cmp
sub
or
mov
add
into
stos
or
int
push
sbb
push
sti
sti
cmpsb
ret
mov
ds
inc
pop
adc
sbb
mov
dec
shr
mov
and
cmp
sub
popf
rcrb
lret
jno
xor
jo
aas
test
and
pop
std
loop
lods
iret
insb
pop
cwtl
dec
lds
pop
cltd
xor
hlt
iret
sbb
jmp
inc
lcall
ja
cwtl
out
mov
xchg
movsb
pop
lahf
or
jb
pop
popa
push
lea
xor
add
out
jb
stc
repnz
fiaddl
cwtl
mov
push
xchg
into
adc
xchg
mov
push
stos
sahf
into
mov
sbb
fs
aad
cmp
sahf
jo
sbb
int
adc
lock
add
iret
ds
aaa
dec
je
iret
divb
pop
lret
lea
ljmp
jo
ret
aaa
pusha
inc
adc
arpl
jns
cmpsb
push
orl
push
push
in
inc
notl
or
lcall
push
cli
imul
and
ja
je
repnz
pop
adc
dec
outsb
bnd
pop
inc
jg
shl
xor
mulb
jne
sub
imul
iret
and
ja
stos
outsl
and
rclb
fstpt
movsl
sub
xchg
clc
mov
fistps
ss
aad
shrb
pop
int
xchg
repz
push
jae
mov
pop
data16
sub
sti
sub
add
push
sbb
or
push
xrelease
push
xchg
xchg
mull
jl
inc
movsb
mov
aaa
cmp
out
jmp
mov
sti
out
lods
ret
sarl
jo
aaa
repnz
rorb
xchg
and
and
mov
jne
jge
mul
gs
push
sbb
leave
outsb
scas
push
xchg
and
push
mov
mov
test
jns
scas
ret
jg
mov
jbe
ficoms
mov
icebp
imul
imul
sbb
imul
xchg
std
pop
mov
loop
sub
loop
fs
sbb
jno
insb
insb
loope
xchg
in
clc
and
int
jne
sbb
sub
js
test
rcrl
and
dec
xchg
fs
sbb
stos
fisubs
lcall
out
and
ljmp
imul
cltd
aad
icebp
repz
mov
or
in
lea
outsb
mov
iret
and
push
aam
hlt
sahf
andb
mov
shlb
sbb
or
dec
cmpsl
mov
sbb
xor
data16
mov
adc
push
mov
cmp
std
arpl
cs
xchg
cmpsl
gs
out
fcoms
das
and
jmp
push
popf
je
test
arpl
movsb
fcoml
clc
popf
cs
dec
or
ds
sar
jl,pn
push
aas
out
jmp
dec
arpl
jp
xchg
pop
das
sbb
adc
rol
iret
push
jne
int3
mov
dec
ss
or
sub
and
inc
pop
subb
adc
enter
adcb
mov
cmp
aaa
out
shl
jle
adc
xor
push
jne
jb
and
lea
or
sbb
pop
mov
xchg
push
cli
pop
jmp
insl
dec
inc
pop
je
adc
ret
cmp
mov
fstpt
out
fisttps
into
dec
or
stos
mov
inc
push
ds
inc
xor
cmpsl
loope
aaa
cmpb
inc
lahf
repnz
dec
add
fdivp
push
jo
loopne
push
push
popa
xchg
push
sub
ljmp
dec
mov
ja
jnp
stos
fnsave
adc
mov
aas
dec
sub
int3
dec
idivb
xor
std
int3
sbb
lds
mov
test
fnstcw
pop
popf
lds
lods
push
idiv
ficoms
fiaddl
and
bound
cmp
mov
loopne
sub
push
mov
sub
test
ret
notl
dec
std
pusha
mov
pop
popl
and
push
lret
push
inc
imul
jmp
in
lcall
pop
mov
pop
inc
rolb
pop
jl
sub
rorl
pop
mov
cld
cld
les
cs
in
dec
gs
sub
lret
mov
jmp
fcompl
cwtl
sbb
mov
add
mov
mov
jmp
movl
and
add
dec
mov
ffreep
adc
push
movsl
push
add
cmp
cltd
les
sti
push
arpl
sbb
insb
sub
jp
in
xor
xchg
add
lahf
mov
inc
test
mov
movsb
xchg
xor
inc
or
adc
inc
lds
adc
loop
and
and
pop
cmpsl
fst
adc
adc
cltd
mov
std
xor
std
mov
dec
fnstenv
dec
push
mov
int
fcmovbe
push
lds
cmp
push
push
loopne
jge
in
mov
add
sub
fwait
lcall
js
bound
jg
mov
and
fimull
add
jmp
imul
hlt
push
pop
enter
dec
repz
xchg
ljmp
movq
rolb
sbb
insl
sahf
sub
add
or
sbbl
inc
out
lahf
movsl
dec
push
xchg
mov
inc
jl
arpl
pop
push
imul
push
cltd
fld
daa
pop
sahf
jmp
loop,pn
mov
push
pop
stos
dec
add
mov
dec
aam
aad
pop
leave
rcr
jnp
inc
fwait
stos
pop
xchg
leave
in
xor
les
sub
inc
out
mov
inc
shlb
rorl
call
fnsave
adc
sbb
cmp
int3
les
adc
cld
cwtl
shrl
andb
pop
das
pusha
push
lods
test
rorl
jp
jg
push
xlat
dec
xor
sub
jmp
stc
cs
dec
std
push
repz
xchg
stos
fcompl
fisubrl
sub
mov
pop
sahf
add
movsb
push
pop
out
inc
and
mov
sarb
call
stos
ja
testb
iret
cmc
xchg
popf
xchg
stc
loopne
dec
shlb
adc
jno
repnz
mov
repz
jbe
jp
int
aas
xor
addr16
ja
in
xor
sahf
dec
push
xchg
inc
xchg
or
push
jle
out
das
and
cmp
sbb
pop
inc
movl
push
push
pop
cmp
imul
dec
mov
mov
fdivr
rclb
adc
aad
imul
adcb
pop
mov
mov
sbb
xchg
pop
adc
dec
sub
mov
ss
stc
stos
ss
lahf
jecxz
cmp
outsb
sarb
aad
push
scas
or
std
xchg
imul
mov
inc
cmpsb
mov
sub
mov
fs
push
add
call
inc
lahf
pop
loop
aas
pop
test
loopne
scas
dec
fst
mov
ja
pushf
loopne
dec
test
mov
mov
xor
xchg
in
dec
shlb
xchg
lcall
stos
or
adc
in
frstor
push
notb
mov
aam
or
dec
mov
bound
jp
aam
mov
pop
add
jecxz
fdiv
inc
out
dec
cmp
outsl
icebp
test
jg
testb
or
and
and
shrl
dec
mov
push
push
sarb
sarl
jp
mov
rclb
ds
jb
or
int3
cmp
ja
mov
xchg
push
xlat
adc
xchg
in
dec
dec
lea
adc
sbb
inc
mov
inc
movsl
dec
pusha
arpl
or
jecxz
comiss
stos
cmp
push
add
xor
add
mov
jmp
gs
cmp
rclb
mov
inc
jp
and
and
mov
jle
cmp
push
mov
xor
add
rol
fidivl
mov
addl
stc
imul
pop
xor
repz
popa
cmc
mov
es
clc
dec
jmp
sbb
call
jne
pmullw
sbb
into
xor
xchg
idivl
add
and
sbb
fdivrs
scas
loopne
jae
dec
imul
cmc
sub
jo
nop
repz
or
pop
mov
xor
cmp
cmc
adc
push
mov
xchg
xor
adc
fdivs
loopne
jne
fsubr
into
add
fisttps
sub
push
insl
mov
out
sbb
push
js
shll
clc
mov
das
push
aam
jno
out
mov
pop
xor
mov
rcrl
mov
sub
jmp
in
mov
fdivl
mov
dec
jmp
mov
out
test
dec
sbb
cmpsl
adc
fisttps
inc
or
sahf
push
cwtl
dec
lock
ljmp
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
