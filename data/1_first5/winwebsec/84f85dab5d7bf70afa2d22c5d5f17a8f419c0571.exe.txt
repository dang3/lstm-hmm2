out
jb
lahf
loop
or
pop
loopne
idivl
iret
std
ss
rcll
mov
or
dec
shl
sbb
std
rcrb
jne
test
scas
lock
adc
mov
inc
pop
push
dec
sbbl
push
pushf
mov
sbb
xlat
test
aas
jle
push
mov
sbb
lea
imul
pushf
test
rcr
fcmovnbe
pop
fwait
mov
jmp
add
stos
adc
test
lret
jmp
fs
mov
ja
stos
mov
stc
inc
lcall
shrl
adc
mov
sbbl
out
and
int
lock
scas
movb
imul
es
mov
or
and
cld
xor
adc
mov
cmpsb
xor
pop
ss
xchg
push
stos
jecxz
hlt
mov
popf
push
push
pop
int
add
clc
xchg
xor
inc
cmp
fdivr
aam
sbb
fwait
sub
popf
int3
pop
mov
clc
fcoml
mull
mov
hlt
inc
sbb
xor
push
mov
jg
cmp
incb
nop
mov
cwtl
fnsave
int
xchg
pop
enter
xchg
adc
cmp
add
scas
sub
clc
mov
jle
mov
repnz
adc
mull
pop
xchg
rcrl
pop
xlat
gs
push
jo
dec
push
xchg
gs
push
fsubs
out
pop
popa
call
nop
lea
mov
lods
cmp
pop
inc
leave
rclb
rcrl
insl
or
stos
mov
adc
xchg
sub
cmc
dec
clc
mov
aaa
pop
push
mov
in
loope
popa
push
push
jb
je
loop
daa
push
mov
cmp
jp
and
cs
stc
mov
inc
cs
in
sahf
push
cmpl
fbstp
push
pusha
es
cmpsb
push
lods
mov
push
shl
pop
iret
pop
mov
mov
lock
and
inc
jnp
movsb
cmp
popa
or
inc
and
xor
sbbb
pop
fidivrl
stos
push
cmp
daa
lods
aaa
popa
jb
dec
mov
sbb
xchg
add
cld
loopne
mov
movl
das
jne
clc
jbe
int3
mov
das
pushf
jbe
addr16
pop
sbbb
xchg
xchg
notl
in
cli
jmp
scas
mov
inc
and
mov
jl
xor
cmpb
fcoms
shll
and
xchg
lret
aad
sub
scas
dec
out
dec
mov
in
xor
sar
sti
jno
shll
xor
lds
xchg
inc
inc
inc
mov
movsb
scas
outsl
jae
es
outsb
sbb
out
xchg
xor
mov
aaa
mov
std
xchg
insb
mov
adc
mov
int
test
xchg
testb
in
push
sub
cmpl
inc
or
or
iret
lock
jle
movsb
mov
cmpb
data16
mov
or
pop
in
xor
xchg
mov
int
aas
sbb
aaa
lahf
cli
jle
or
push
jnp
mov
aad
lcallw
xchg
pop
call
cld
ja
xchg
enter
shl
jne
fisttpll
xchg
lahf
dec
aaa
ret
cs
dec
mov
inc
decb
sub
scas
hlt
mov
push
dec
push
loopne
push
insb
inc
cmc
fadd
and
adc
insl
mov
jp
and
xor
dec
shll
inc
mov
fbld
bound
leave
push
scas
ja
sbb
or
mov
add
aam
pusha
sarl
sarb
cwtl
out
jbe
into
sti
shl
cmp
pop
fwait
lret
mov
je
out
mov
pop
sarl
in
xchg
xor
outsl
fisttpll
popf
gs
sti
dec
call
sahf
fcompl
push
jle
es
lods
movsl
mov
mov
pop
and
or
push
imul
jl
add
aas
cwtl
inc
cmpsl
inc
dec
ret
aad
ja
jae
or
and
mov
inc
and
idiv
arpl
cld
inc
or
sti
mov
jmp
cmp
xor
cs
jns
roll
pusha
dec
scas
pushf
imul
add
inc
loop
testb
fsubrs
push
mov
pushf
jmp
dec
fcompl
jns
lock
and
cmpxchg
aaa
out
mov
std
leave
xchg
scas
inc
cmpsb
push
xor
test
or
or
andb
out
scas
lret
or
fsubrp
pop
push
mov
les
sub
lcall
insb
sbb
mov
adc
and
das
inc
scas
shlb
mov
iret
repnz
inc
ja
add
jne
cs
cmpsb
and
xchg
push
mov
mov
sbb
jo
orb
sub
pop
xchg
cmpsl
sub
xchg
pop
aad
dec
push
pop
shl
and
pop
adc
gs
mov
cmpsl
adc
mov
cmc
lret
xor
or
js
pushf
jo
pop
sub
leave
pop
push
inc
sub
ret
xchg
jl
int
jl
xchg
mov
sub
rep
jne
xlat
or
int
push
mov
jle
out
push
out
push
data16
sbb
arpl
add
and
test
gs
jo
aaa
jl
push
loopne
mov
stos
sti
push
jb
pushf
mov
inc
outsl
lret
mov
xor
jne
add
lcall
pushf
mov
arpl
pop
and
out
or
repnz
lea
or
pop
sbb
dec
out
out
jbe
loopne
in
addr16
xchg
push
xor
into
lcall
pop
fcom
add
xor
bound
ret
sbbl
inc
adc
cmpb
fnstsw
pop
mov
icebp
xor
popa
lea
mov
jne
inc
bound
pushf
sub
jl
repz
paddw
rcll
pop
fs
fcmovu
cmp
inc
sbb
sub
ret
xchg
pop
or
add
or
cmp
dec
mov
inc
ret
clc
xchg
popa
das
test
iret
and
xchg
mov
xor
push
sbbb
ja
arpl
sbb
xchg
mov
aas
push
hlt
cs
add
roll
lret
cmpsb
jmp
call
addb
xchg
andb
add
in
and
leave
sbb
js
dec
jnp
adc
gs
mov
push
sub
jmp
mov
xchg
inc
in
xor
leave
cmp
aam
xchg
inc
outsb
inc
idiv
sbb
or
jl
dec
lods
bound
xchg
inc
movsl
xchg
movl
loope
outsl
or
scas
or
push
mov
jle
nop
and
mov
movsb
mov
push
sub
push
stos
jne
xchg
test
or
jge
push
inc
mov
popa
push
push
fwait
stc
pop
cmp
pop
jl
jae
push
pop
int3
pop
xchg
imul
cmp
cli
or
inc
ret
xchg
push
pop
mov
lods
inc
sbb
loopne
aam
andl
or
nop
add
adcb
mov
out
test
xchg
inc
jo
pop
lret
inc
jecxz
enter
std
mov
lock
jmp
jns
fcmovbe
lods
xor
xorb
push
mov
adc
rcr
mov
xchg
mov
dec
js
fdivrs
daa
push
ds
sub
sbb
sbb
xor
cmpsl
addb
dec
jnp
and
int
sub
inc
xor
mov
in
sbb
mov
repnz
fdivr
movsb
outsb
jbe
cwtl
jo
dec
mov
push
bound
dec
cmp
jo
mov
dec
fstpl
sbb
sub
int3
sbb
push
add
les
dec
xchg
pusha
mov
lcall
xchg
adc
inc
mov
stos
sub
fnsave
push
addr16
loope
fwait
fwait
or
xchg
mov
sbbl
dec
sbb
adc
pop
mov
dec
pop
outsb
pop
mov
lret
inc
lret
loop
jl
cmp
cmp
pop
pushf
jecxz
sub
mov
jl
jle
mov
rcr
popf
jnp
pop
outsb
mov
push
jp
jp
loope
xchg
add
mov
ds
fldt
inc
sbb
adc
pop
imul
xchg
sub
dec
and
mov
jle
out
add
bound
cld
pop
jmp
aas
push
ja
pusha
aaa
dec
in
and
and
mulb
jae
pop
cmp
sarl
adc
cmp
push
inc
rcrl
jp
jge
ds
hlt
cwtl
mov
xor
daa
sti
je
mov
xor
push
xlat
jecxz
lret
dec
lds
and
mov
aam
adc
lods
sub
and
int
shlb
inc
out
mov
sbb
fadds
cs
push
js
xor
inc
subb
jmp
mov
add
mov
xlat
pusha
mov
sbb
xorl
push
loopne
inc
aam
addb
mov
xchg
jp
adc
mov
jb
loop
fldl
dec
pop
xor
rclb
orl
push
sub
mul
aam
in
adcl
or
or
xor
xor
nop
jo
imul
ret
shrl
pop
jne
push
mov
xlat
lods
adc
das
fsubp
adc
dec
into
lods
lock
rcr
aaa
test
int3
repnz
stc
xchg
mov
push
cmpl
xchg
mov
jp
cmp
sub
in
gs
sbb
cli
add
scas
xor
mov
add
fisttps
dec
mov
flds
mov
inc
icebp
dec
dec
jmp
rolb
cs
mov
cmp
and
xchg
push
outsl
rcrb
push
jnp
jle
aam
das
xor
scas
mov
jge
and
xchg
sahf
cmp
cld
andb
out
mov
clc
sub
or
jbe
flds
out
in
les
out
pop
and
data16
inc
add
adc
xor
ret
jb
idivb
mov
fcom
adc
lcall
xor
in
fldt
dec
dec
jg
out
test
pop
hlt
or
roll
cmp
add
shrb
mov
sub
xor
xor
daa
mov
loope,pn
test
adc
sbb
test
faddp
out
imul
stos
pop
sbb
and
sbb
and
mov
push
imul
loope
xchg
add
mov
call
btc
adc
rcrl
xchg
or
jae
in
mov
out
mov
fcmovbe
scas
mov
mov
add
or
cli
lock
push
scas
fstpl
notl
mov
daa
mov
inc
aas
sub
call
shrl
ja
or
jae
scas
mov
pushf
inc
mov
xor
lcall
stc
insb
dec
insb
ss
rcll
ret
and
xorl
repnz
mov
lret
dec
bound
sbb
leave
jle
inc
inc
pusha
loopne
inc
mov
mov
sti
dec
adc
fwait
int
hlt
out
cmp
pop
les
dec
fsts
sub
cmpsl
mov
pop
movsb
fsubrs
xor
js
sub
adc
jmp
clc
and
pop
dec
lock
jno
dec
or
jo
scas
or
cwtl
sarb
lret
xchg
cmp
xchg
call
daa
add
sub
jne
pusha
mov
dec
xchg
out
pushf
notl
push
in
fcoml
frstor
mov
mov
inc
or
pusha
pop
ds
mov
sbb
or
cmp
sbb
mov
rclb
cld
cltd
addl
mov
inc
push
push
dec
roll
test
mov
and
rcll
orl
sbb
out
div
mov
mov
aaa
pop
out
lods
rol
jmp
fcomps
add
mov
xchg
adc
addr16
sbb
sbb
inc
fs
sbb
push
scas
std
movsb
sahf
outsb
fwait
mov
add
add
jne
inc
adc
mov
scas
dec
lret
dec
adc
jecxz
jmp
and
pop
in
add
in
cwtl
inc
fadds
das
xchg
mov
sub
add
mov
aad
ds
dec
adc
dec
icebp
and
pop
hlt
adc
sbb
cmp
or
ss
addr16
inc
cli
and
ss
push
imul
pop
sarb
mov
arpl
push
cmc
int
add
loope
lahf
popf
xchg
lahf
fmull
jb
mov
xor
lahf
or
daa
arpl
sbb
mov
cmp
cmc
mov
cmpl
pop
mov
cwtl
clc
push
and
iret
mov
inc
mov
dec
jae
and
jmp
xchg
jle
nop
push
jmp
mov
cltd
lods
dec
fstpl
cltd
pop
scas
jno
pusha
repnz
sub
insl
mov
cmp
fdivr
out
jle
xor
mov
dec
adc
xor
in
mov
aaa
and
scas
lahf
movsl
gs
subl
inc
in
inc
mov
ja
sbb
in
jns
sub
cmpsl
bswap
adc
lret
pop
mov
push
sub
jbe
aas
pop
popa
stc
loope
adc
dec
push
jp
or
cmc
test
popa
fstpl
aad
sub
push
in
cld
inc
testl
mov
adc
ljmp
jno
adc
xor
iret
or
enter
mov
mov
pop
lret
mov
pop
mov
sti
mov
pop
pop
pop
or
mov
cmp
push
das
imul
aam
push
xchg
lea
mov
sbb
dec
ss
and
iret
scas
fsts
scas
pop
ret
add
mov
loop
xchg
or
mov
or
mov
aam
xchg
inc
sahf
pushf
push
lret
push
pop
xorl
popf
sbb
mov
or
mov
rclb
repnz
sub
mov
xchg
push
fimuls
jg
test
and
pop
sbb
fwait
xorb
jne
adc
gs
pop
sahf
push
sahf
inc
idivb
push
roll
lret
hlt
pop
repnz
mov
lea
jns
into
and
cmc
outsl
gs
ret
xchg
inc
sbb
and
push
je
sub
cmp
cmpsb
mulb
mov
leave
push
lds
or
inc
repnz
addb
or
dec
adc
cmovne
daa
pop
add
mov
jmp
mov
icebp
mov
rolb
sbb
hlt
imul
mov
faddp
scas
push
sbb
arpl
insl
pop
jbe
cltd
lds
arpl
insl
movsb
inc
lods
or
sub
je
lds
je
and
and
arpl
push
pop
and
jbe
nop
outsl
xchg
clc
sbb
fisubrs
pop
mov
or
fbld
mov
xchg
xchg
std
call
jp
add
js
push
sub
mov
loop
mov
cwtl
sbb
cmp
push
test
fistps
sbb
insl
pusha
shll
sbb
outsb
and
es
jns
jnp
mov
or
mov
hlt
dec
mov
xor
xor
dec
adcb
in
js
inc
xchg
cmp
imul
mov
xchg
dec
ds
add
lcall
xchg
cmc
inc
call
inc
fwait
cmp
mov
cltd
test
and
xchg
mov
ja
jns
clc
rcll
repz
rcrb
add
jae
and
lret
shlb
daa
divb
mov
push
imul
bound
test
inc
adc
sub
sbb
sbb
enter
add
mov
mov
xor
sti
iret
out
aaa
lahf
bound
xor
bound
fadds
ret
mov
test
push
faddp
ja
sbb
add
inc
cmpsl
and
mov
xchg
cmc
gs
arpl
push
cli
test
out
and
aam
xor
stos
imul
out
jbe
aam
dec
adc
jge
mov
iret
hlt
mov
subb
ret
inc
jmp
mov
ret
xchg
lods
daa
popf
or
loop
lret
mov
les
lret
ret
lcall
int
movsl
cs
or
mov
std
adc
in
adc
xor
xchg
push
dec
xor
mov
notl
sbb
xchg
jmp
mov
cs
cmc
cmpsl
into
xor
arpl
jno
sbb
mov
or
mov
pop
lret
out
test
roll
scas
rorl
out
rclb
hlt
sbb
push
loop
inc
repnz
dec
and
mov
adc
pusha
repz
xor
call
cmp
mov
xchg
scas
sahf
inc
dec
fnstsw
test
mov
call
pop
movsb
out
pop
mov
enter
ja
cmp
mov
cmp
call
lahf
test
stos
sbb
lea
cmc
jo
push
ds
jns
xor
or
pusha
sti
xor
sbb
outsb
arpl
test
scas
enter
sbb
bound
pop
ss
add
jge
loopne
orl
jecxz
rcr
adc
push
jo
add
rol
sbb
adc
add
mov
test
cmp
aaa
pushf
add
test
xlat
xchg
ret
jg
cltd
mov
imul
lahf
rcr
js
sub
loopne
jmp
and
loopne
les
push
addr16
stc
in
repz
ret
cwtl
jmp
ljmp
xchg
in
mov
mov
popf
je
jne
mov
in
call
sbb
jo
mov
jo
add
int
insb
out
dec
test
movsl
iret
pusha
or
fcmovne
push
imul
dec
cmpsl
add
hlt
xorl
pushf
in
mov
roll
leave
stos
add
jecxz
xor
and
cmp
push
inc
nop
cwtl
push
in
dec
sub
int
imul
lds
lcall
mov
repz
int
inc
test
and
push
jne
pop
popa
push
ret
movsb
aaa
jb
dec
fwait
js
movl
test
jne
cmp
or
sub
gs
je
repz
ljmp
fidivrl
mov
jo
pop
shl
js
pusha
call
rclb
dec
repz
mov
adc
pop
cld
insb
push
dec
test
imul
jl
jne
loopne
lret
inc
fbstp
xchg
repnz
andb
notb
push
push
adc
hlt
sub
or
arpl
cld
xchg
jge
ret
jbe
lods
lods
arpl
outsl
imul
jns
mov
mov
jno
enter
mov
nop
push
jp
adc
dec
and
push
or
push
jbe
jge
mov
add
notb
sub
cmp
mov
imul
loope
stc
xor
sbb
test
sbb
xchg
cmp
jns
xor
cwtl
mov
es
sub
xchg
mov
mov
adc
lea
mov
dec
imul
jle
sahf
add
mov
mov
outsl
sbb
popf
test
adc
pop
ljmp
sub
jne
cwtl
in
dec
mov
mov
pop
ss
xor
shl
outsb
inc
jnp
xorb
adc
mull
int3
iret
sub
fwait
push
insl
sbbb
enter
andl
out
mov
shrl
movsb
xchg
iret
ret
jae
or
push
pop
or
ror
push
fdivrl
pop
sbb
dec
hlt
jp
roll
frstor
call
dec
xchg
lods
jnp
or
pushf
out
fistpl
jne
mov
sbb
jnp
add
xor
pop
clc
mov
pop
icebp
fistps
fldenv
cs
dec
insb
fisubl
adc
test
roll
cmc
inc
cmpsl
outsl
in
push
mov
sub
in
dec
std
out
pusha
in
sbb
and
mov
fisttps
les
scas
mov
testb
mov
clc
jnp
ficoml
pop
loop
cs
pop
scas
stos
jle
mov
push
xchg
cmp
ret
add
add
fwait
dec
or
push
inc
fs
xor
js
stos
xchg
mov
sbb
mov
bsf
xor
dec
cld
add
sbb
ljmp
mov
cs
dec
stos
enter
mov
aaa
push
ret
pop
pop
mov
mov
cmp
mov
sub
ja
int3
dec
pop
out
in
addr16
inc
nop
shlb
push
pop
inc
add
sbb
pushf
push
stc
sbb
mov
fbstp
lret
shll
dec
es
inc
stc
lahf
shlb
mov
aas
jb
scas
push
fs
mov
jge
pusha
sbb
sub
mov
sbb
cltd
frstor
add
jns
roll
inc
loope
ret
sbb
jmp
jle
insb
mov
in
or
xor
or
and
cs
outsl
add
dec
ja
popf
and
call
push
mov
inc
nop
jae
xlat
pop
daa
mov
mov
dec
mov
and
inc
mov
sub
das
scas
jge
into
shlb
lret
inc
inc
fs
xchg
cmpsl
lods
add
or
sbb
jae
ss
fbld
pop
xchg
cmp
ret
and
and
or
dec
loopne
adc
in
push
divl
mov
outsb
mov
rcll
mov
aaa
pop
xchg
push
adc
fists
out
mov
mov
jnp
mov
stos
mov
movaps
ret
mov
push
orl
mov
xor
jmp
dec
or
aad
inc
inc
jns
dec
jb
xor
out
xlat
dec
dec
popf
mov
push
dec
jl
lcall
test
fs
pop
or
cmp
xor
sbb
mov
iret
add
or
shl
fbld
and
mov
cmp
sub
xchg
scas
push
sahf
sub
dec
mov
or
xchg
mov
pop
ljmp
jp
xor
out
mov
push
loop
testb
loopne
pop
add
loop
dec
clc
mov
aad
mov
lret
rorb
pop
mov
xor
gs
jns
sbb
push
imul
jecxz
imul
testb
push
popa
lahf
loopne
xchg
rorl
xchg
in
cmp
mov
sbb
xor
or
test
fwait
jbe
pop
inc
fadd
mov
push
leave
stos
rorb
xchg
cmp
enter
sbb
or
stos
mov
dec
popf
pop
pop
pop
inc
sub
jecxz
or
fistl
orb
or
shrl
mov
dec
lds
mov
adc
ds
push
xor
mov
adc
aaa
cltd
dec
inc
shrb
xchg
sub
sbb
fsubrp
sub
xorb
out
sub
sar
or
mov
cmp
xor
test
sub
test
outsb
pop
stc
push
fsub
add
nop
sar
mov
dec
pop
addr16
insb
addr16
xchg
mov
cmp
add
insl
imul
repnz
lahf
sarb
or
pushf
jg
and
rorl
out
fisubrl
in
dec
mov
mov
cs
test
jmp
sub
retw
push
mov
ret
ds
mov
sub
xchg
movsw
js
mov
rorl
sarl
int
in
lret
cmp
xchg
gs
fsub
mov
xor
lds
out
in
push
test
sti
push
subb
inc
es
lcall
xchg
xchg
or
adc
cmc
enter
out
fs
sbb
rol
push
adc
jnp
stos
xor
stos
xor
ds
sub
fisubs
pop
ja
sub
mov
jnp
inc
test
dec
in
notb
popf
jb
jae
push
test
in
fucomp
fisubs
fs
and
push
arpl
or
jle
mov
xor
pop
inc
mov
fildll
jae
xor
mov
sub
jns
lods
andl
sub
int
ror
emms
mov
std
repnz
pop
fstps
gs
mov
into
lcall
jle
pop
sbb
lds
testl
mov
fdivl
jae
jno
das
jns
ret
leave
fadds
gs
ss
jmp
daa
pop
pushf
imul
adcl
dec
ret
rclb
cmp
popa
fdivrl
movhps
fistl
in
lret
pop
cld
outsl
cwtl
aad
or
and
xchg
imul
push
inc
in
lcall
arpl
dec
scas
sti
or
mov
sbb
les
repz
cmpsl
cmp
cmp
mov
cmp
mov
test
test
psrad
mov
addr16
sbb
dec
jge
add
ds
xor
mov
sub
mov
jno
orb
aam
pop
cmpl
xor
mov
ret
pop
xchg
ss
nop
sbb
out
outsl
pop
mov
jno
push
and
inc
adc
leave
dec
adc
sbb
adc
syscall
push
dec
cmpsb
cmp
dec
sbb
and
cwtl
ret
stos
std
and
sbbb
andl
in
push
in
pushf
jae
xor
mov
lods
sub
push
ss
stos
in
xchg
imul
lock
sub
jnp
or
mov
faddl
xchg
pop
or
adc
and
xchg
jge
inc
mov
cmpsl
loope
jb
lahf
jg
mov
imul
xor
int3
push
add
pop
mov
mov
xchg
scas
dec
stos
insb
ljmp
bound
xor
enter
lock
sti
inc
mov
mov
pop
shll
test
std
aad
inc
cmp
sbb
and
mov
and
pop
pushf
mov
arpl
cmpsl
or
loop
jo
adc
pop
and
jo
pop
rclb
pop
add
and
addr16
iret
les
ror
gs
iret
sub
daa
pusha
mov
add
jno
imul
scas
jge
adc
push
lea
cs
test
sub
xor
pop
mov
jnp
cmp
xchg
mov
stos
adc
sbb
push
jae
or
inc
rcll
cmpsb
lock
sub
std
xlat
scas
adc
xor
jl
cs
stos
iret
add
cmp
fsts
imul
test
xor
repnz
mov
pop
arpl
and
cs
test
fildll
jmp
fs
in
jbe
sub
lods
les
pop
xchg
fst
push
addb
cli
jp
pop
fnstcw
fnstsw
scas
pop
lahf
sub
xor
pop
out
movsb
cmpsb
ss
cwtl
cmp
inc
clc
push
roll
or
movsb
mov
addr16
inc
cmp
adc
dec
addl
rclb
ss
or
mov
aas
xchg
adc
push
clc
bound
test
add
add
jmp
pop
lret
jnp
cld
jb
out
mov
insl
cmp
in
xor
xchg
call
and
xor
data16
adc
dec
jl
div
jo
or
stos
cli
sub
in
mov
or
push
arpl
add
cltd
push
aaa
aad
loope
mov
sub
lods
inc
xor
dec
mov
push
add
outsl
mov
lret
aad
rolb
push
movl
and
rcl
inc
xchg
sbb
pushw
loopne
out
fsubrs
aad
les
mov
mov
arpl
cmp
loopne
push
mov
mov
mov
es
dec
sahf
jo
dec
cmp
jp
pop
mov
lret
xchg
dec
inc
pop
push
movsl
cmp
mov
push
in
test
cs
out
jmp
inc
mov
mov
adc
jno
and
inc
shlb
adc
and
pop
mov
cmpb
cs
pop
test
mov
loopne
nop
fcompl
lret
dec
mov
int
imul
and
ljmp
mov
sub
add
add
imul
and
aad
or
push
bound
mov
dec
jnp
int3
cmp
test
bound
inc
enter
jge
js
sarl
cmp
jge
and
cmp
sub
sub
xchg
and
mov
and
push
imul
fnsave
jb
fisubs
outsb
and
ds
jo
jae
xchg
pop
call
jne
enter
cld
cs
popf
fimuls
mov
mov
mov
leave
ja
sbb
out
xorb
ja
adc
mov
sub
jnp
adc
mov
pop
sbb
push
sbb
push
mov
cli
mov
dec
inc
insl
jnp
jecxz
mov
jb
cltd
or
sbb
aad
or
and
inc
inc
mov
movl
or
jno
shll
popa
pcmpgtw
jae
mov
add
sarl
mov
cli
xorb
cmp
ljmp
add
fiaddl
cmp
mov
add
cmpsl
cmp
sub
xor
cli
inc
and
add
cmp
aam
and
or
xchg
jl
loop
and
xchg
mov
pop
sub
cmp
push
int
adc
add
stos
mov
hlt
sub
fwait
into
into
add
enter
jne
hlt
cmp
dec
loop
addr16
outsb
lret
push
loopne
add
mov
xor
xor
push
dec
xlat
mov
jno
lock
push
xor
or
mov
and
cmp
xchg
xchg
sbb
lret
rcl
je
mov
sub
sub
test
pop
cmp
sbbl
ret
jp
mov
popf
adc
inc
push
push
jo
and
nop
or
jge
mov
insl
sarb
or
push
dec
lret
aaa
pop
repz
repnz
dec
mov
pop
cmp
mov
xor
fistpll
lcall
scas
xchg
inc
popa
dec
pop
xchg
fdivs
or
inc
leave
stos
mov
push
cmp
or
cli
mull
or
jecxz
int
repz
mov
sbb
lods
push
jmp
xchg
or
fadd
xchg
pusha
add
mov
xchg
mov
sbbl
push
and
data16
add
aam
dec
sub
dec
pop
or
lods
les
imul
adc
jle
in
lods
cld
cmpsb
testb
mov
out
inc
imul
add
ss
subb
and
xchg
push
rcrb
test
ret
lcall
or
les
cmpsb
rorl
imul
fcmovnu
std
push
push
jp
xor
les
cmpsb
fnsave
xchg
into
dec
mov
xor
push
and
stc
sub
scas
mulb
jno
pop
sub
sbb
inc
not
dec
adc
scas
lret
ret
inc
ds
out
pmullw
push
popf
pop
js
jle
psubq
fwait
ja
mov
and
add
adc
mov
dec
rolb
movl
mov
sub
test
aaa
jle
aas
hlt
stos
xor
lock
sbb
ret
inc
jns
sbb
fwait
pop
push
mov
popa
mov
ss
mov
dec
lods
pushl
stos
dec
fistps
jmp
out
xchg
dec
fidivrs
add
arpl
add
test
fwait
clc
mov
mov
push
jle
or
dec
mov
rclb
adc
inc
nop
out
roll
xchg
dec
xchg
push
dec
add
stos
inc
sub
cmp
pusha
ja
mov
xchg
ja
pop
popa
or
mov
push
xchg
fnsave
aad
rorl
nop
insl
push
add
xchg
mov
fwait
enter
int
mov
sub
movsl
jnp
jle
sbb
daa
orb
mov
mov
mov
fistps
out
mov
jb
fdivrl
or
jge
jns
addl
popf
and
and
xchg
aam
aad
mov
mov
incb
inc
lcall
add
mov
lock
push
sbb
fisubl
fwait
pop
adc
fsts
std
aam
push
inc
cmp
cmp
fildl
jmp
popf
mov
cmp
lahf
inc
push
or
xor
sti
subl
pop
cmpsb
gs
popf
call
hlt
cs
outsb
xchg
dec
mov
aad
sbb
jecxz,pt
clc
or
mov
stos
jg
adc
pusha
sbb
cli
popa
add
ss
xor
push
aad
cs
out
mov
xchg
jne
xchg
nop
adc
and
xchg
mov
mov
xor
scas
mov
xlat
outsb
adc
hlt
jb
pusha
aaa
adcl
je
pop
in
cltd
sbb
fs
stos
scas
mov
les
pop
int
or
inc
sahf
or
not
jl
mov
test
movsb
dec
push
adc
sub
sub
cltd
lahf
idiv
divl
mov
stc
and
xor
mov
repz
add
jg
fisubl
aas
out
pop
lret
roll
inc
jbe
push
pop
dec
dec
mov
pop
sarb
mov
aaa
xchg
pop
push
call
outsl
push
call
clc
adc
nop
fnstsw
jl
mov
dec
or
mov
push
movsl
sbb
and
lods
mov
mov
ja
std
jmp
and
dec
jb
mov
mov
ds
fnsave
les
xlat
andl
mov
aad
jb
adc
sub
stos
mov
iret
dec
mov
pop
imul
aad
popf
mov
fisubrs
iret
jne
mov
push
stos
xor
dec
xor
pop
gs
dec
dec
mov
mov
call
test
mov
push
movsl
dec
movsl
stc
lock
into
jmp
sub
add
mov
or
push
mov
loopne
xlat
sbb
xchg
fs
add
jle
push
pop
mov
js
mov
push
inc
movsl
std
mov
aaa
dec
repz
pop
adc
ss
icebp
inc
bound
and
adc
adc
dec
dec
inc
add
addr16
ja
std
add
roll
les
stos
repz
xchg
and
test
or
xor
cwtl
js
les
mov
xor
jmp
int3
rolb
jg
ss
lret
movsl
xor
push
test
int3
clc
mov
push
mov
jne
leave
sub
sahf
mov
outsl
mov
loope
das
in
mov
push
lods
rcr
sub
repz
push
iret
sbb
and
sub
stc
repnz
into
pop
mov
movsl
inc
mov
jmp
mov
jns
jne
stos
jecxz
stc
icebp
inc
lds
lret
push
or
ret
mov
jg
scas
jecxz
in
pop
dec
adc
xchg
roll
jg
xor
sbb
loope
jno
sbb
leave
pushf
insl
scas
fmull
push
inc
rcrb
pop
jg
add
xchg
outsb
fwait
pop
mov
icebp
add
cmp
ds
sub
pop
adc
inc
mov
outsl
push
orb
dec
insl
push
cmp
addb
js
movl
sub
js
andb
inc
xchg
mov
jne
in
aad
cmp
ror
and
scas
nop
jbe
jbe
adc
scas
scas
and
push
or
popa
inc
stos
mov
mov
jp
sbb
adc
dec
aas
push
add
or
sti
sub
ss
testb
mov
nop
fnstenv
jl
fstps
mov
sbb
ja
sub
mov
shr
cmp
movb
jp
sarl
popf
pop
in
clc
test
jl
leave
pop
in
jl
mov
out
sbb
pop
jecxz
push
inc
inc
or
sub
icebp
cmc
mov
inc
mov
adc
jns
lcall
addr16
push
sub
sbb
sahf
fcmovu
cmp
mov
push
sub
sbb
push
xchg
push
dec
inc
sarb
cmpsb
loopne
sbb
pop
icebp
std
cmp
rcl
jne
in
dec
fldl
int
lret
loopne
pushf
daa
cli
jge
jo
jle
das
out
es
loope
jmp
mov
cmpsb
pop
ljmp
mov
mov
push
mov
pop
inc
inc
in
hlt
mov
psubw
dec
mov
jge
dec
cmpb
mov
add
sti
and
sub
imul
xchg
dec
pop
ljmp
mov
ret
in
mov
shlb
and
shrb
fwait
add
cmpl
lret
leave
jge
dec
mov
imul
fcoms
cwtl
shrl
test
add
lcall
push
ret
push
inc
or
in
pop
mov
xchg
push
push
pop
fsts
inc
sub
mov
roll
sbb
sub
mov
jecxz
mov
in
cmp
out
inc
fcoml
mov
sbb
lds
pop
pop
jle
daa
cli
mov
jns
xchg
mov
adc
outsl
adc
stc
popa
dec
push
faddl
push
fnstcw
lea
cmp
cmp
inc
aas
outsb
mov
pop
lods
xor
sub
ja
lods
ret
out
in
xor
je
stos
daa
push
int
ffree
push
cmpsl
aam
sub
cltd
mov
mov
jp
xor
hlt
sbb
mov
jb
test
orb
push
sbb
or
idiv
das
leave
dec
sub
mov
loope
xorl
sbb
popf
sub
xchg
movsb
daa
call
nop
shll
notb
pop
outsb
adc
or
sbb
mov
outsb
add
pop
mov
and
cmp
jmp
jno
aas
sbb
mov
cmpsb
cmp
inc
aam
xor
and
mov
lret
lcall
jo
jne
mov
fisubrs
cs
xlat
mov
pusha
lds
scas
loop
and
lds
neg
or
cmp
mov
test
adc
or
sub
or
pop
pop
fistps
push
inc
rorl
mov
test
stos
aad
imul
js
mov
inc
xchg
mov
and
inc
mov
dec
jae
jecxz
and
mov
xchg
adc
inc
enter
pop
jbe
pop
test
add
pop
push
ret
xchg
in
outsl
sbb
mov
pop
lds
aam
xor
pushl
cmpb
adc
add
sub
cltd
daa
dec
je
les
out
arpl
mov
push
ljmp
insb
loope
xchg
mov
ret
icebp
in
shrl
cmp
jae
mov
xchg
enter
mov
inc
sub
xchg
aaa
add
add
jnp
push
cmp
insb
pop
cmp
jmp
int3
dec
aam
lods
mov
jl
cmpsl
mov
pop
mov
sub
lcall
sbb
jae
xor
cmp
xor
hlt
fs
cmp
clc
out
mov
dec
sbb
sbb
add
mov
sbb
testl
cmpsb
rcll
cmp
test
scas
dec
mov
mov
outsb
out
test
ja
mov
jle
pop
call
movsl
ljmp
fiadds
ja
aas
dec
pop
jbe
lock
hlt
jp
mov
mov
lock
inc
lock
loope
xchg
pop
or
adc
mov
clc
pop
mov
cld
jnp
div
jae
inc
or
cmp
xchg
xor
sub
mov
xchg
jbe
mov
in
cmpsl
incl
mov
sub
pop
popa
xor
mov
repz
pshufw
or
jmp
sbb
push
dec
fsub
int
pop
out
add
pushf
mov
rol
loopne
in
fnsave
lret
lea
push
push
cmp
lods
scas
and
push
iret
mov
push
push
invd
sar
adc
aam
lret
or
cmp
in
sub
leave
iret
leave
scas
mov
outsl
fcmovbe
in
adcb
xchg
andl
out
pop
fwait
or
jo
xlat
ret
repz
mov
notb
dec
pop
sub
inc
or
inc
jecxz
outsb
stos
mov
cmpsl
dec
mov
mov
and
cmp
imul
leave
jae
pop
inc
dec
jbe
aaa
fs
jno
leave
orb
sbb
or
stos
cld
push
jle
inc
movsl
nop
cltd
mov
hlt
xor
sbb
and
insl
test
or
rorl
dec
adcl
pop
ja
pop
push
and
dec
cmpsl
test
mov
clc
loopne
add
cmp
mov
inc
outsl
fcompl
dec
xchg
mov
add
sti
imul
cmpsl
pop
ret
inc
mov
push
dec
jle
sahf
push
fcmovb
adc
push
mov
adc
xor
insl
push
pop
jp
push
mov
mov
pop
out
or
xor
cmp
movsl
xchg
ljmp
std
insb
iret
gs
enter
sbb
repz
icebp
mov
push
sbb
mov
sbb
cmp
cmp
and
inc
addl
scas
sarb
adc
jmp
mov
and
pop
push
scas
mov
cmc
insl
add
xchg
inc
popf
fnsave
ss
out
add
xchg
idivl
mov
aam
in
jge
mov
add
pop
test
in
xchg
icebp
ret
clc
fistps
lret
xorl
push
movsb
icebp
push
cmpsl
sbb
mov
xchg
fdivs
dec
mov
pushf
enter
sub
cmc
mov
inc
pop
mov
mov
xchg
clc
arpl
inc
xchg
mov
sbb
test
push
js
dec
inc
repz
mov
adc
push
incl
test
cld
mov
movsb
fcmovbe
in
adc
fmull
sbb
jp
mov
int3
pop
pusha
mov
fs
push
addr16
push
popa
add
mov
insb
movsl
popf
add
repz
idiv
pop
pop
jnp
mov
xchg
lret
and
pop
and
mov
ret
lods
add
or
jns
test
cmp
cmp
ficomps
out
test
dec
and
push
js
test
movsl
adc
push
sbb
jge
imul
xchg
pop
and
jp
pop
lret
aam
lds
push
add
dec
test
mov
pop
xorb
stos
push
mov
inc
xor
imul
or
loop
pop
les
repnz
dec
mov
into
sub
loope
push
mov
mov
inc
aam
jmp
icebp
pop
fs
leave
push
cmp
jecxz
pop
and
inc
push
mov
and
sub
les
dec
lock
dec
rep
mov
das
and
lahf
add
repz
or
adc
mov
mov
mov
mov
fmulp
idivb
in
push
xchg
pusha
lcall
lret
cltd
aam
inc
mov
out
gs
push
addr16
and
cmc
movsl
ficoml
inc
dec
pusha
icebp
mov
dec
jl
andb
inc
pop
ss
pop
add
pop
sub
mov
lea
mov
pusha
cli
mov
cmp
lock
push
iret
push
xchg
xor
adc
sarb
dec
mov
adc
cltd
shr
ret
fnstcw
test
push
mov
cmp
jge
sbbl
in
push
dec
lods
pop
add
les
push
push
repz
xlat
lds
mov
adc
mov
test
mov
cmp
jmp
icebp
lods
movsb
stc
inc
insl
subb
xor
movsl
ja
arpl
jnp
cltd
fs
clc
addr16
xchg
add
adc
mov
fnstcw
pop
leave
bound
push
sti
pop
and
js
jp
lods
jmp
mov
scas
mov
xorb
loope
push
mov
arpl
dec
push
jmp
incl
cmp
xor
fst
test
insl
cmpb
int3
dec
push
add
in
xor
adc
jo
mov
mov
cmp
add
rcll
push
push
mulb
or
data16
xchg
ret
in
xchg
mov
pop
xor
jbe
shr
jno
push
sbb
sbb
out
and
mov
push
dec
imul
inc
xchg
xchg
cmp
andl
shl
leave
addr16
jl
sbb
mov
test
xor
jge
fdivr
gs
sbb
icebp
icebp
or
jmp
pop
shll
add
les
inc
or
ret
mov
pop
popa
pop
push
dec
aam
scas
adc
out
and
ja
dec
xchg
mov
push
fildl
iret
adc
int
insb
cmp
xor
mov
in
push
movsl
and
cmp
pusha
push
pop
outsl
or
test
mov
popf
dec
and
shll
mov
push
stos
jle
inc
add
call
hlt
gs
mov
sbb
dec
pop
inc
cmp
filds
frstor
je
fwait
xchg
jecxz
and
cmc
xor
imul
inc
inc
in
mov
jae
stc
test
mov
or
fbld
jl
xor
and
xor
inc
sub
mov
sbb
daa
or
ss
cmp
cwtl
subl
xchg
rorb
arpl
xor
jbe
outsb
and
into
mov
xchg
or
jl
jae
dec
pop
leave
ljmp
xor
cli
in
pop
mov
push
sub
cmc
outsb
mov
gs
ds
jle
mov
or
adc
lods
jnp
sub
test
inc
and
aad
aam
andb
xlat
outsl
test
mov
cs
or
pusha
pop
cwtl
into
fcoml
std
popf
xor
mov
jp
fisubl
mov
fisubrl
sahf
aam
and
xor
cld
pop
dec
lret
mov
stc
xor
mov
stos
push
test
lret
dec
jb
out
inc
inc
sub
push
or
adc
push
push
icebp
xchg
adc
test
jns
in
add
jp
nop
fstpl
dec
fcoms
add
shl
lcall
les
xchg
leave
ret
cmp
cwtl
dec
mov
out
sbb
int
mov
out
add
out
setne
ljmp
pusha
cs
adc
cmp
jbe
cmp
loopne
insl
popa
mov
dec
in
pop
push
fcmovnbe
gs
adc
fimuls
add
xlat
rdmsr
pop
jmp
sbb
lcall
lcall
add
lea
ds
add
push
dec
out
in
pop
inc
lret
push
xchg
jbe
rcrb
inc
sub
add
jb
pop
jnp
pop
lcall
dec
add
cmp
push
pop
into
movsb
lahf
lahf
jmp
xchg
sbb
out
lcall
shlb
movsb
shll
out
inc
cld
sub
aaa
out
lods
mov
lret
mov
pxor
mov
adc
out
aas
inc
and
in
add
movsl
test
repz
jae
sub
arpl
cmpsl
mov
mov
mov
cltd
lods
in
pop
cmp
mov
add
or
mov
push
mov
negb
jmp
sti
mov
scas
not
sub
test
or
mov
jge
pop
cmpsb
or
adc
or
dec
mov
pop
int
hlt
loop
mov
jne
mov
dec
inc
sahf
or
insb
fnstcw
les
testl
sti
dec
push
mov
les
addb
mov
dec
xlat
into
add
int
out
mov
mov
fdivl
adc
sbb
and
xchg
ss
xchg
inc
mov
mov
mov
daa
in
pop
imul
jle
es
cmp
mov
test
jg
jns
lcall
bound
or
imul
push
or
ss
aam
pshufw
orl
mov
int
sbb
outsb
sub
mov
pop
ss
push
push
js
mov
int
adc
cld
jmp
and
push
pop
push
and
xchg
iret
addr16
lds
ret
mov
rol
dec
push
repz
sbb
rorl
je,pn
cli
adc
dec
or
ja
lahf
push
mov
inc
adc
fs
lea
adc
loop
loope
pop
hlt
in
in
mov
inc
pop
out
and
aam
data16
stc
inc
in
bound
inc
adc
push
lea
dec
imul
lods
pop
mov
pusha
movsl
int3
iret
test
dec
into
int3
das
js
add
leave
pop
and
inc
and
lods
test
cli
jo
loop
push
lcall
and
icebp
inc
or
lods
sbb
jge
mov
into
ret
les
test
mov
movsb
or
and
jae
je
jns
or
mov
stos
jns
movsl
xchg
lfs
cltd
lods
jbe
jne
jns
vmread
arpl
jl
dec
xor
cltd
aas
xor
rcll
rclb
ret
adc
add
push
jg
mov
xlat
push
sbb
dec
adc
inc
pop
lea
es
inc
mov
inc
fistl
inc
adc
xchg
pop
jae
stc
sub
mov
jmp
dec
inc
xorb
cmp
fisttps
mov
lret
inc
out
cli
and
js
pop
mov
pop
mov
lret
jmp
inc
mov
xchg
mov
loopne
cmp
fstpl
cmp
sbb
cmp
pop
xor
xor
test
imul
jle
arpl
xchg
jle
sub
mov
cmpsl
mov
xchg
mov
xor
test
and
jmp
je
clc
cmpsl
jne
push
adc
pushf
sub
xchg
aam
xor
mov
lods
rol
fwait
adc
in
inc
fistps
or
jno
sub
add
loope
jmp
stos
in
inc
stos
fdiv
aad
movsl
stos
sbb
shl
sbb
sbb
ds
pushf
inc
aad
pop
jo
movsl
testb
or
fcoms
sbbb
inc
jne
es
pop
scas
popa
push
int3
in
adc
mov
out
pop
and
enter
imul
mov
push
mov
cmp
mull
pusha
loop
jns
sbb
jb
aas
mov
cmp
rcrb
outsl
decb
add
mov
test
sbb
cmp
in
add
or
aaa
jbe
sbb
mov
pusha
mov
jp
mov
jle
cmp
dec
popa
add
sar
repnz
clc
xchg
inc
mov
push
and
mov
popa
mov
jo
mov
mov
and
hlt
sbb
jl
or
imul
jmp
insl
loop
push
ljmp
mov
sbb
in
enter
in
push
nop
add
cmp
add
pop
xlat
imul
cmpsl
xor
push
ljmp
ret
lea
ss
mov
jecxz
fsubs
ficompl
dec
dec
ljmp
jns
mov
push
enter
fisubl
aas
jae
xchg
imul
jmp
cltd
xor
cmpsl
ss
je
lods
push
mov
cltd
lds
add
sbb
cmp
fwait
inc
scas
je
pop
dec
frstor
pop
jecxz
add
cmp
cmc
add
sbb
sub
dec
xchg
sbb
push
test
push
pop
fsubl
jae
xor
cmp
cmpsb
push
inc
stos
and
push
sbb
nop
fnstsw
xor
dec
test
sub
cmpsl
or
jae
out
jne
add
sbb
and
sahf
imul
mov
add
push
or
out
cmp
sbb
mov
sti
push
dec
sub
divb
mov
push
inc
ret
lret
push
out
stos
xchg
sub
jge
insl
pop
sub
orb
jg
std
or
dec
inc
push
xor
sbb
jbe
mov
sbb
out
in
ljmp
es
repz
loope
pusha
into
lods
lret
pop
sbb
xor
sbb
fisttpll
imul
scas
lret
shll
mov
cmp
ja
push
scas
in
xor
out
or
sub
xchg
mov
inc
lcall
test
sbbb
subl
push
sbb
test
aam
push
subl
ret
adc
cmp
dec
sub
test
and
adc
pop
pushf
adc
cmpb
out
sarb
add
pop
push
inc
lcall
rep
xchg
addl
fildll
mov
xchg
repnz
and
lahf
mov
rcl
xchg
mov
mov
sub
es
mov
cs
cmpsb
call
jne
in
cmp
popf
fwait
inc
fidivs
iret
mov
test
imul
dec
cmp
popa
movsb
add
cmp
mov
inc
mov
loope
popf
push
aad
std
out
sti
xor
cli
adcb
sahf
dec
aaa
cmpsb
mov
sub
adc
mov
add
adc
jg
mov
pop
dec
push
or
mov
hlt
popf
pusha
mov
mov
clc
aam
adc
push
push
xchg
test
call
loope
rolb
nop
sar
icebp
or
int
rorb
shr
ret
test
add
adc
movsl
cmc
jb
xor
loopne
jns
xchg
dec
xor
lods
fs
jle
jecxz
mov
cld
xor
cmp
add
and
out
push
push
ret
fstp
cmp
shrb
push
jge
fisubrl
adc
mov
and
mov
or
lahf
sbb
adc
pop
clc
cmp
mov
mov
adc
repnz
sahf
fisttpll
pop
cli
xchg
or
sbb
xchg
in
adc
mov
repz
cmp
in
ret
cmp
and
add
xchg
push
lds
add
mov
add
filds
bnd
xchg
hlt
xchg
mov
ret
inc
ret
inc
and
arpl
idiv
push
in
out
pop
adc
rorl
xlat
outsl
imull
mov
addb
mov
inc
mov
ljmp
lods
pop
shll
out
mov
out
sbb
pop
pusha
hlt
lahf
adc
and
imul
push
mov
xchg
lret
cmp
decl
mov
mov
cmc
xchg
xor
pop
mov
decl
mov
cwtl
pop
pop
lds
out
movsl
xchg
mov
das
out
lock
enter
pop
mov
push
nop
je
enter
cmp
push
add
test
xlat
into
xchg
add
mov
js
mov
sbb
push
popa
out
mov
data16
inc
jno
out
inc
jo
into
mov
mov
je
lock
xlat
inc
orb
mov
xchg
roll
jle
nop
pop
test
jns
stos
fwait
cwtl
fsubr
negl
lret
add
cmp
dec
dec
mov
push
jmp
lods
pop
mov
push
in
lahf
fadd
mov
ja
outsb
les
das
mov
mov
outsl
and
stos
add
hlt
mov
dec
mov
jne
repnz
cmp
xchg
sbb
jmp
dec
jno
pop
mov
into
dec
pop
push
xchg
mov
or
mov
int
pop
jge
dec
dec
cmp
js
aad
jno
cmp
test
inc
push
push
fucom
cld
arpl
pop
pop
mov
dec
adc
out
mov
or
jle
jle
adc
aam
ror
hlt
movl
cmc
dec
mov
fistpll
test
mov
fsubrl
xchg
jnp
mov
orl
call
xor
lods
jecxz
sbb
jbe
incl
cmp
loope
mov
ret
mov
es
out
icebp
fists
mov
call
mov
cmpsl
mov
jp
push
mov
adc
sbb
sbb
out
dec
addr16
adc
data16
mov
xchg
rcll
cmp
test
cmovb
sbb
fmul
jge
or
jno
xor
inc
push
sbb
dec
and
mov
adc
ljmp
dec
mov
aaa
popa
xlat
shll
mov
or
mov
push
inc
inc
les
cmpsl
push
test
in
sbb
ds
mov
sti
xchg
arpl
dec
push
movsl
xor
mov
xchg
xchg
mov
aas
incb
push
mov
cmp
and
aam
das
std
ret
push
fnstenv
shll
movsl
pushf
push
es
lret
inc
jns
mov
lcall
jl
aam
pop
xor
xchg
sub
adc
adc
jbe
das
cmpsl
enter
xlat
sub
xor
or
dec
pop
add
sub
dec
pop
mov
fdivrs
dec
cmpsl
das
mov
mov
movsl
je
inc
pop
mov
cmp
pop
in
rol
fs
mov
into
hlt
jbe
jmp
push
std
insl
mov
mov
in
out
les
imul
sbb
bound
mov
jp
push
movsb
shl
jnp
sbb
adc
xchg
mov
and
jne
sbb
test
cmp
fidivl
out
repnz
jge
rcll
or
or
fadd
movsb
mov
repnz
mov
push
outsl
lret
jae
push
ljmp
gs
in
loopne
add
fwait
cwtl
and
push
push
jo
fnstsw
jae
push
or
jns
and
fcompl
mov
out
mov
cmpsl
lret
cmp
push
fsubr
mov
pop
repnz
cmc
outsl
int
cmc
lcall
mov
mov
inc
cmpsb
dec
fwait
jns
xor
mov
adc
mov
pushw
mov
push
ret
test
mov
sbb
inc
mov
and
packuswb
jmp
push
xchg
or
push
divb
fisttps
push
mov
mov
lcall
dec
jg
push
fcomip
insl
addb
subl
dec
push
adc
jl
les
lcall
inc
xor
or
push
test
xchg
pop
sub
jge
pop
push
mov
rcrl
sbb
dec
gs
clc
or
daa
pop
cltd
loope
ja
sbb
lret
sub
add
mov
imull
cmpsl
mov
mov
cmc
xchg
pop
popa
fucom
mov
mov
cmp
sbb
mov
fwait
add
jb
lds
aas
dec
in
dec
cmp
jl
incl
mov
push
fcomps
jl
leave
icebp
xor
mov
or
movl
and
jl
orb
push
sbb
pop
adc
lret
jmp
in
push
dec
jmp
inc
and
mov
out
mov
out
aad
les
pusha
pop
stc
popa
mov
pop
pop
popf
jmp
ret
loopne
xor
cmp
movsb
int3
mov
xor
sub
in
fdivl
test
xor
mov
and
mov
lret
dec
mov
pop
adc
sub
add
int3
sbb
adc
and
stos
inc
daa
into
shlb
fsts
into
ja
xchg
inc
lret
mov
mov
leave
push
dec
or
shlb
pop
jge
jl
xor
ficompl
daa
adc
dec
fisubrs
mov
icebp
pop
cli
and
shlb
popf
mov
adc
stos
mov
pusha
mov
push
pusha
loopne
pop
mov
aam
pop
std
mov
jno
mov
sbb
xor
jne
xchg
test
lcall
xchg
xor
fistpll
mov
mov
pop
fwait
sub
or
repz
and
mov
sbb
adc
inc
ds
shl
je
dec
dec
cmp
cmp
pusha
add
jns
or
mov
and
and
dec
xchg
mov
pop
cld
push
out
cli
pop
inc
and
outsl
pushf
mov
push
aas
out
mov
ret
push
xor
ret
push
jno
shl
cwtl
out
mov
lods
cltd
les
jl
or
add
mov
adc
add
ficomps
mov
dec
movsb
jp
fiaddl
movsl
pop
sub
adc
out
sub
addb
adc
adc
or
mov
in
int3
stos
xor
push
call
jo
lods
dec
icebp
or
fstpt
int
sbb
test
loope
cmp
xchg
adc
lahf
lods
sarl
xchg
hlt
pop
adc
xor
incb
push
mov
jo
je
shlb
pop
stos
pop
mov
scas
mov
out
pop
das
adc
jl
push
sbb
nop
add
push
gs
adc
das
dec
xor
aam
imul
sbb
adc
adc
xchg
push
cmpsb
jmp
aad
fsubs
add
int
cmpsb
pop
in
and
enter
cmp
jge
clc
repz
lret
jb
jns
mov
mov
mov
mov
adc
fcomps
mov
push
out
xor
jnp
sub
fdivrp
dec
push
adc
jne
lret
ret
xor
push
mov
cmp
and
pop
lcall
cmp
test
movsl
sub
fistps
jmp
pop
push
or
pop
loope
fisttps
mov
les
inc
stc
hlt
or
aad
roll
mov
inc
mov
test
xor
push
repnz
push
cmpsb
pop
cld
or
loopne
adc
aaa
cltd
adc
lret
pop
ret
sbb
inc
ljmp
repz
insl
daa
and
push
outsl
pop
imul
clc
leave
ljmp
cltd
cli
daa
cld
mov
nop
lock
lcall
mov
cltd
fs
rol
mov
popf
arpl
cmc
mov
cmp
adc
iret
push
ret
sbb
jmp
call
out
add
mov
ss
in
fisubrs
out
mov
inc
int
pusha
adc
or
faddl
jno
lods
jle
popf
data16
adc
cmp
aad
sub
lock
lret
inc
xor
bound
mov
sahf
out
mov
loopne
test
add
dec
and
aas
push
pop
leave
push
cmp
push
sbb
or
mov
cmp
cltd
or
adc
hlt
ds
push
lods
mov
repnz
imul
or
and
cmp
adc
jno
cltd
stc
cmpsl
sahf
sbbl
jns
lahf
pop
ret
je
pop
dec
jecxz
outsl
push
pushf
mov
gs
mov
into
loopne
fstpt
aas
insl
mov
outsb
outsb
dec
aad
iret
out
ljmp
pop
loop
loope
fstpl
flds
stos
and
xor
push
push
add
xchg
mov
cmp
inc
ljmp
push
and
sbb
mov
in
mov
test
in
dec
cwtl
inc
fdivp
xor
inc
xchg
call
andl
fstpl
fs
adc
and
adcl
sbb
inc
mov
mov
push
push
pop
jae
icebp
add
insl
or
fmuls
outsb
ret
cmpb
fdivl
push
pusha
mov
shlb
scas
js
aam
cld
jp
cmpl
push
leave
popf
push
aam
mov
jmp
dec
mov
and
into
pop
xchg
dec
and
lret
inc
aad
push
notl
or
mov
mov
xchg
scas
push
in
das
or
lods
push
adc
xchg
pop
lcall
pop
popa
or
cmp
jle
mov
mov
rclb
in
addr16
stos
sub
addr16
adc
push
out
icebp
lret
and
loopne
inc
pop
or
sbb
popf
inc
xor
pop
movsl
mov
stos
push
inc
lret
pop
out
out
adc
outsb
out
psubsw
fiadds
push
fxch
shl
leave
enter
cmp
push
dec
ja
or
inc
or
cmpsl
jo
lret
stos
lods
popf
xchg
and
push
rcrb
xor
dec
pusha
mov
ret
pop
xor
xchg
xchg
shll
mov
and
mov
fdivs
arpl
xchg
in
xor
std
mov
adc
into
dec
xchg
aaa
dec
pushf
adc
ret
and
xchg
pop
cmp
mov
mov
adc
pusha
inc
scas
mov
bound
ja
nop
pop
or
or
xor
push
outsb
xlat
sarl
mov
addr16
mov
xchg
sub
cmp
sbb
add
and
xorl
pop
lret
fdiv
lret
sub
mov
jb
cmp
mov
iret
xor
ret
sub
insb
xchg
or
lcall
addr16
cmpsb
lock
clc
mov
sbb
sbb
scas
adc
xchg
loop
mov
sarb
push
xchg
cli
push
ljmp
loop
dec
sub
xchg
add
jp
and
push
jmp
add
lock
je
sub
out
push
mov
rcrb
mov
in
jg
pop
jb
test
jo
sub
sbb
nop
fcoml
xor
stos
xchg
sub
pop
mov
lock
add
arpl
sbb
test
or
mov
mov
sbb
in
ror
sbb
int
dec
or
js
arpl
stc
shrb
xorb
sahf
jp
push
dec
and
aas
popf
leave
sbb
int
insl
into
movsl
gs
stos
cli
pop
push
shll
icebp
and
dec
push
jbe
sbb
xlat
push
or
adc
xchg
int
das
mov
sbb
and
ss
subb
mov
mov
stos
mov
or
sahf
into
and
jnp
cmp
jg
sbb
inc
scas
jnp
pop
mov
lcall
jb
adc
sbb
or
xchg
xor
in
test
mov
bound
add
push
int
loopne
js
xchg
loop
push
push
lahf
or
mov
movsb
adc
pop
jmp
mov
lcall
fdivrs
movsb
loope
or
loopne
adc
dec
loopne
rol
data16
call
and
or
iret
out
nop
jg
jo
cli
sub
addb
lock
jecxz
xchg
outsb
int3
inc
add
push
ljmp
jo
mov
lcall
push
mov
or
syscall
ret
mov
jl
jle
lahf
jne
jmp
and
or
add
push
push
icebp
push
gs
push
stos
and
hlt
clc
arpl
leave
inc
xchg
lock
test
mov
mov
ficoml
loop
add
mov
mov
roll
and
imul
xchg
add
cmp
push
mov
mov
mov
enter
dec
fs
lods
mov
lret
jg
andb
lret
out
xchg
jb
rorb
cld
aam
outsb
jo
movsl
sbbl
cmp
xor
mov
mov
divb
dec
mov
xchg
mov
adc
sub
jmp
icebp
ja
dec
hlt
sahf
movsl
test
das
ds
dec
lcall
add
insl
mov
test
dec
in
or
ret
aaa
jns
sub
gs
or
push
leave
pop
in
xchg
mov
and
inc
call
stos
cs
flds
sbb
es
std
mov
ret
xor
repnz
lods
addb
jge
push
jno
or
push
call
es
xchg
into
ja
std
push
adc
out
outsb
lret
shll
pop
jmp
inc
enter
jecxz
icebp
in
add
ljmp
sub
push
das
pop
lods
faddl
aas
dec
negb
cmp
ret
mov
mov
xor
shlb
rcrb
dec
sub
jl
and
gs
jl
xor
sub
rolb
lret
insl
out
imul
enter
cmp
sub
lret
loop
push
sbb
and
test
mov
js
jmp
scas
jbe
shrl
xchg
mov
xchg
add
jge
jnp
fsubrl
xchg
pushf
nop
xor
repz
cmp
lret
loop
cmp
into
scas
or
and
adc
lcall
in
insb
leave
daa
sbb
push
mov
idivl
test
adcl
sbb
pop
jbe
loope
sti
pop
sbb
lods
incb
jmp
call
sbb
aas
test
xchg
das
scas
jno
push
pop
xchg
ljmp
cmp
enter
lcall
xor
aaa
jb
lods
aaa
repnz
repz
mov
out
out
clc
or
mov
adc
or
add
insl
cmp
cs
ds
mov
fcompl
xor
data16
adc
das
jl
les
int
pushf
mov
cmc
pop
out
and
ja
xchg
rorb
cmpsl
es
sub
popf
pop
inc
push
sbbl
lds
mov
popl
jae
fisubl
adc
mov
adcl
pop
mov
out
test
lods
pop
cwtl
in
dec
mov
out
sbb
cli
jmp
jle
ljmp
pop
loop
jp
lods
mov
sub
arpl
or
movsl
cmp
and
add
cltd
pop
bswap
loopne
add
test
pop
pop
aaa
and
out
cs
pop
test
mov
dec
xchg
popf
pop
das
popf
xor
push
mov
pop
jl
xchg
inc
mov
xlat
test
fstl
inc
and
push
pop
mov
fcompl
nop
xchg
push
arpl
pop
test
sbb
jmp
hlt
xor
mov
stos
jmp
cs
fimuls
stos
jnp
jno
jae
mov
or
jno
mov
in
negb
shrd
push
xchg
dec
dec
repnz
add
push
aaa
movsb
mov
mov
insl
rcrb
sbb
xor
aad
fildl
sbb
cmp
lds
jmp
es
xchg
mov
stc
pushf
or
popa
fmuls
push
mov
fstps
shlb
sbb
and
punpckhbw
adc
movsb
sbb
adcl
bound
hlt
mov
push
cmpsl
xchg
loopne
lods
test
std
outsl
cltd
mov
push
test
movl
add
mov
or
scas
cmp
xchg
sub
and
pop
xchg
ret
inc
xchg
idiv
xlat
lret
bound
movsl
inc
je
jg
sti
xchg
aaa
test
test
ret
cld
or
mov
sahf
cmp
push
outsb
mov
inc
jns
or
addr16
pop
sbb
and
inc
add
push
icebp
push
shrb
movsl
push
iret
pop
negb
shufps
lret
daa
and
shll
test
and
sbb
sub
pop
lods
aad
sub
popa
inc
neg
adc
std
lcall
jno
jns
pop
in
sbb
subl
inc
scas
dec
and
xchg
cmpsb
xchg
sarl
sbb
mov
aad
test
jne
notb
ljmp
mov
mov
jg
rol
fists
pop
testl
push
int
cwtl
mov
mov
lds
mov
fstps
jp
mov
in
jno
je
xchg
ret
add
cmp
enter
js
jnp
fwait
test
jl
xchg
and
aam
sbb
jae
or
and
scas
sbbb
cmc
je
je
mov
push
js
imul
test
lods
adc
xchg
pop
mov
mov
mov
sub
pop
lods
lret
inc
pop
lds
js
inc
cmpsl
mov
sbb
daa
lds
fdiv
inc
lret
xchg
push
fwait
dec
insl
and
jge
lcall
mov
xchg
dec
icebp
int3
pop
mov
add
int
pop
sti
and
orb
das
dec
dec
adc
pop
lret
and
xor
pop
rcll
cmp
rcrl
lea
mov
icebp
mov
gs
call
sahf
fwait
sahf
mov
inc
cwtl
popa
xor
push
roll
xchg
pop
sub
cvtdq2ps
insl
fcmovbe
out
ret
xchg
add
dec
push
into
scas
aas
push
xlat
and
dec
fldl
mov
push
lret
xor
jmp
cmp
lcall
sub
mov
mov
iret
push
fstpt
dec
fildll
pop
mull
stc
lds
outsl
mov
dec
adc
sub
aad
mov
pop
or
call
dec
loope
push
out
or
enter
shrb
adc
dec
cmp
repnz
jb
xchg
rcrb
mov
into
mov
cmp
iret
mov
adc
inc
fisttpll
xchg
scas
cltd
fstp
pop
imul
xor
pop
and
cmp
fwait
ja
cmpsb
dec
out
shrl
arpl
fdiv
in
mov
pop
ss
enter
es
inc
inc
xchg
push
aad
imul
in
xor
lret
ss
mov
and
sti
adc
xorl
mov
jecxz
cmc
enter
and
cmpsb
mov
pop
pop
scas
mov
addr16
movsl
jge
jle
hlt
insb
ja
adc
jge
sub
stos
fs
movsl
dec
les
push
or
inc
push
xor
lods
add
loope
loopne
repnz
aad
andb
fstps
ret
push
daa
adcb
lahf
fcmove
jle
rol
cld
push
cltd
xchg
jmp
mov
xor
loopne
lea
lock
sbb
push
call
adc
mov
je
pushf
test
repz
fisttpl
pop
mov
push
mov
sti
jb
popf
lods
cwtl
jge
pop
int
jp
jecxz
call
inc
mov
or
lret
fistl
stos
add
mov
adc
inc
xor
daa
mov
or
in
add
ds
rsqrtps
in
ljmp
icebp
mov
bound
cmp
les
push
fsub
lods
add
inc
ja
into
stc
cmp
xor
dec
shlb
dec
aas
in
std
lcall
outsl
cmc
sub
and
pop
sub
cmpsb
test
push
int
pop
or
aas
in
xchg
jle
shl
sbb
lods
arpl
inc
mov
pop
lods
jb
lds
aad
push
in
ret
mov
cli
push
push
sahf
or
add
mov
fiaddl
negb
pop
in
aaa
pop
leave
xor
pop
arpl
and
cmp
lahf
ss
mov
jae
and
shlb
or
lahf
pop
popa
call
cmp
scas
adc
in
inc
mov
mov
xor
arpl
xchg
adc
into
xchg
ja
fisubl
cli
insb
int3
push
dec
pusha
sbb
or
mov
cli
ds
imul
pop
mov
xchg
adcb
jb
fcmovbe
lret
jl
mov
pop
pop
test
in
inc
jnp
ja
cli
lea
es
push
mov
or
mov
push
cmp
cltd
aas
xchg
cmp
subb
jae
lahf
add
xchg
jb
nop
xor
sbb
inc
jnp
adc
das
mov
inc
push
adc
dec
push
inc
fwait
mov
jp
jg
out
and
push
inc
jmp
movsl
or
ret
mov
jno
add
cmp
cltd
push
push
call
rcrb
jae
or
xchg
ret
roll
std
inc
in
out
inc
push
stc
loope
dec
mov
stos
fldpi
sub
and
aad
sti
xchg
push
sbb
jb
mov
mov
sbbl
adc
movsb
inc
in
cwtl
cli
loope
or
pop
cwtl
test
loop
xchg
imul
stc
sbb
ror
push
jmp
aad
push
dec
es
gs
call
sub
xchg
cmp
rclb
dec
mov
cld
pusha
inc
and
cmp
xor
dec
aad
mov
in
mov
mov
sbb
test
push
loopne
adc
test
push
mov
adc
fbld
sub
fidivs
mov
ss
cld
shlb
jno
jno
das
sub
dec
in
fistpll
cltd
insb
into
or
jmp
mov
mov
sub
xchg
mov
jo
push
pop
lahf
pop
sbb
inc
cmc
cmpsb
push
iret
or
mov
aam
xor
mov
dec
lods
outsb
mov
out
std
dec
iret
popa
aaa
push
jecxz
clc
xchg
icebp
mov
cmp
cmpsl
sbb
sub
cmp
mov
lock
mov
mov
jo
dec
jmp
and
xchg
imul
fucomi
test
sar
mov
inc
and
mov
xor
mov
lcall
push
lret
lods
add
jg
ret
enter
mov
sti
cltd
dec
sar
inc
add
inc
cmpsb
jb
mov
js
das
sbb
lock
xchg
inc
dec
cmp
divl
mov
cmpsb
add
xchg
xchg
sub
sub
cmpsl
cmc
xchg
sti
adcb
mov
and
mov
adc
dec
sbb
mov
mov
insl
sbb
jmp
lcall
inc
aas
cmp
add
cld
je
fnstenv
mov
xchg
lods
lret
cs
mov
ret
int3
sub
repz
mov
rcrl
popf
daa
adc
repz
mov
outsl
pop
pushf
xchg
stc
xchg
push
dec
or
ficompl
out
test
xor
pop
sarl
xchg
jge
lea
or
xlat
ja
mov
nop
jns
dec
iret
cmp
jmp
imul
dec
movsb
iret
popa
add
mov
repnz
sub
dec
xchg
xlat
lcall
xor
pop
pop
cmp
push
push
ja
sarb
xorb
xchg
inc
xorb
into
loope
or
arpl
fildl
enter
pop
ss
push
xor
sahf
mov
lock
mov
jns
sub
popa
dec
insl
insl
es
out
dec
in
xor
and
xor
mov
xchg
or
xchg
aaa
adc
xchg
bnd
and
adc
cmpl
je
lret
shlb
das
sbb
mov
stos
adc
rclb
rorb
test
and
xchg
push
xor
sub
sub
jno
test
mov
and
push
sbb
dec
fisubrl
push
or
xor
iret
shlb
inc
in
rorl
dec
xchg
pop
sbb
dec
inc
cld
lahf
sub
pop
jl
cmc
adc
mov
lret
lcall
sbb
daa
mov
ljmp
push
xchg
mov
dec
jo
daa
es
adc
mov
ret
mov
mov
jle
dec
scas
icebp
jmp
sti
pop
mov
mov
popa
popf
jg
bound
nop
out
jns
pop
inc
mov
pop
andl
bound
mov
lret
inc
popa
mov
inc
or
jl
mov
sbb
dec
cmp
dec
into
incl
clc
push
or
pop
scas
in
cmp
mov
loopne
hlt
std
rcrb
adc
lret
add
clc
jns
add
dec
repz
inc
push
xchg
gs
in
add
ja
mov
cmp
rorl
dec
and
cli
jmp
dec
daa
mov
mov
pop
push
cli
or
into
lahf
jge
add
lods
and
or
daa
lods
fstpt
dec
adc
lock
sbb
outsl
sub
shll
adc
daa
es
imul
int
cmpsl
pop
dec
or
xor
xor
dec
ja
mov
mov
or
mov
movsl
sub
add
adc
out
ficompl
xchg
test
xchg
xchg
addl
hlt
jge
in
pusha
loope
fxch
shll
js
push
mulb
popf
xchg
out
mov
dec
lock
lea
das
fistpll
xor
jmp
push
mov
jns
push
add
mov
mov
fwait
lret
clc
aam
dec
aas
adc
and
dec
adcl
jo
mov
ja
repnz
mov
cmp
pop
sbbb
lea
ret
movsl
mov
xlat
test
hlt
leave
push
adcl
test
mov
sbb
pop
jae
repz
push
or
mov
popf
or
cmp
push
push
dec
jae
mov
add
mov
xor
data16
cmpsl
movsl
out
xchg
push
xor
pop
pop
cmp
lret
pushf
sbb
xor
dec
jg
dec
mov
or
into
pop
jecxz
xchg
jmp
mov
jp
add
lea
dec
clc
rolw
aas
ds
mov
fdivl
loop
inc
and
rorl
and
out
loop
movsl
iret
sahf
ret
or
adc
out
les
mov
int
mov
pushf
imul
pusha
push
jecxz
xor
jae
xchg
pop
iret
ret
and
lods
or
xor
sbb
mov
adc
xlat
daa
or
in
lods
sub
or
inc
add
mov
push
xchg
pop
enter
mov
cwtl
aad
cli
and
pusha
popf
pop
out
in
sbb
xor
aas
mov
rcrl
push
ss
aas
mov
shrl
xchg
mov
inc
shll
and
shrl
js
cmpsb
sub
adc
cmpsl
push
sub
and
jl
xchg
lods
mov
mov
out
inc
dec
ss
mov
pop
push
push
cmp
jbe
loope
out
out
adc
sbb
sbb
pushf
lock
enter
cmpsb
inc
dec
loop
rcr
xchg
std
xor
push
jbe
or
pop
stos
add
daa
inc
cld
mov
inc
mov
pop
mov
nop
cmpl
dec
filds
into
fmuls
aad
repnz
stc
addl
or
mov
cwtl
jmp
fidivs
loopne
sbb
jp
jne
test
int3
xchg
mov
andl
mov
xchg
cmpsl
lods
pop
push
push
stc
lods
fs
cmpsl
sahf
jecxz
mov
cmp
push
inc
or
jl
iret
push
rolb
ret
cmp
jnp
les
xor
add
fsubs
sub
mov
mov
cmp
push
push
push
jnp
jg
xorb
push
cmpsl
adcl
xchg
arpl
mov
das
fisubrl
es
push
loop
pop
push
cmp
pop
out
mov
xchg
sub
in
test
dec
jg
int3
cmp
adc
and
push
pop
les
jb
xor
out
rcr
or
jae
jae
push
in
ljmp
les
or
add
cmp
adc
rorb
mov
cs
push
aas
je
test
sub
lea
inc
push
and
cmp
cli
add
pop
in
inc
jmp
jo
sbb
dec
mov
jl
mov
cltd
arpl
xor
push
out
insl
js
pop
mov
in
bswap
sub
inc
inc
mov
push
jno
mov
jmp
mov
mov
fwait
inc
loop
aad
sbb
adc
cld
mov
jb
addr16
subb
sub
xchg
xchg
inc
add
fsubs
scas
push
daa
mov
dec
mov
jno
inc
imul
sub
inc
dec
inc
or
cmp
stos
mov
popf
xchg
sbb
cmp
jl
subb
lretw
movsb
push
sbb
cld
loop
push
loop
or
cmp
push
out
lock
dec
mov
fsubp
mov
aas
orb
out
cli
and
cwtl
fdiv
sub
mov
push
out
push
nopl
jl
gs
jecxz
add
adc
jp
mov
pop
cmp
popa
scas
xchg
lcall
pop
out
pop
jl
repz
out
and
push
jns
enter
add
push
adc
into
pop
mov
push
xor
mov
xchg
data16
push
mov
push
jl
xchg
pop
mov
loopne
cli
sbb
mov
jne
sbb
dec
adc
insl
push
xor
mov
inc
xor
cmp
cmp
push
enter
cwtl
and
insl
dec
sbb
not
jne
sub
sub
jne
xor
push
dec
cli
rcrl
xchg
and
xor
imul
sub
sub
and
add
lds
cmp
mov
outsb
sti
notl
add
add
popf
adc
add
push
jno
cmp
xchg
add
addr16
addr16
inc
fistl
jnp
nop
loopne
mov
nop
imul
push
or
stos
popa
pushf
jbe
dec
iret
mov
dec
pop
push
mov
and
fists
insb
fiadds
xor
jns
into
repz
mov
mov
jg
fcomps
outsl
sub
jbe
enter
mov
out
jae
cmp
out
dec
fwait
popf
add
mov
xchg
clc
fmulp
cld
or
stc
fs
in
push
rorb
lret
sti
adc
xor
rcrb
mov
and
ror
sub
xor
movl
call
adc
rcrl
dec
or
jmp
ds
call
jge
test
ds
test
lret
jbe
sub
inc
stos
rcr
popf
add
jp
stos
or
ja
test
insl
pop
lret
or
aas
andl
and
jnp
mov
in
sbb
insb
push
jb
add
out
pop
lea
pop
push
jp,pn
push
or
sub
popf
cmp
mov
dec
inc
sbb
mov
fdivl
rcl
mov
or
dec
adcl
jp
lahf
sbbb
push
loope
inc
dec
jmp
cmp
mov
mov
jae
ret
nop
aad
mov
test
sbb
or
inc
test
sbb
pop
push
movsl
inc
sbb
shlb
mov
push
inc
push
cmp
ret
push
sbb
mov
pop
mov
xchg
mov
mov
call
inc
movsb
jae
ljmp
outsb
xchg
lods
aam
sub
js
pop
lcall
xchg
push
pusha
arpl
cmpl
rcrb
mov
frstor
xchg
jecxz
ja
mov
cmp
ja
jbe
repnz
cs
push
add
ss
mov
sub
push
xchg
add
xor
xchg
jl
clc
rcrb
sahf
push
lahf
aad
insl
sbb
std
dec
dec
les
pop
mov
fiaddl
xchg
jge
pop
mov
and
add
mov
movsb
jo
aam
inc
or
xchg
cmpsb
test
xor
inc
jg
push
or
mov
je
or
push
decb
push
pop
mov
mov
mov
xchg
jge
add
mov
fistps
mov
cld
out
jecxz
xchg
pop
adc
jns
lahf
rorb
or
mov
mov
cmp
lcall
cmp
outsb
imul
sbb
dec
lcall
push
cltd
mov
jns
and
out
ljmp
movsl
adc
lea
in
insb
mov
dec
lret
iret
addb
push
sti
ucomiss
sub
aaa
jnp
sbb
jl
aaa
and
jp
loopne
lret
xor
shrl
push
sub
pop
jnp
dec
cltd
aaa
mov
mov
dec
and
loop
inc
xor
xor
pop
ljmp
je
and
ss
push
mov
jae
int
stc
mov
les
adc
add
adc
xchg
testb
cmpl
sbb
icebp
fidivrs
lea
mov
cmp
iret
repz
and
inc
das
ss
inc
push
sahf
aaa
and
out
and
lret
pop
xchg
fs
cmc
int
mov
std
aam
cmp
sti
enter
jecxz
dec
sub
push
nop
mov
mov
or
and
ljmp
inc
or
and
scas
dec
mov
pop
out
iret
jp
pop
stc
pop
hlt
in
cli
hlt
mov
cmpsb
test
cmp
insl
lcall
or
xlat
pop
or
sbb
mov
cmp
lret
push
aam
and
out
xchg
xor
pop
ret
jle
clc
add
adcb
jb
fs
ja
imul
sti
lods
lock
scas
ret
das
mov
inc
mov
jle
mov
scas
mov
js
inc
pop
or
adc
out
or
out
push
daa
shrl
mov
pop
sbb
sbb
mov
lret
imul
addb
mov
mov
insb
aam
hlt
push
cmpsb
test
push
cmp
ljmp
pusha
mov
fwait
jae
jle
icebp
cmpl
mov
push
test
xlat
fs
inc
shlb
out
leavew
out
adc
adc
mov
das
lds
aas
aam
sbb
mov
sub
test
push
stc
cwtl
arpl
data16
lret
lahf
negl
push
push
add
cmp
movsl
repnz
lods
mov
adcl
mov
cld
ret
cli
test
test
sub
mull
mov
mov
ret
inc
out
pop
lea
inc
lea
pop
sub
cmp
out
gs
ja
inc
pop
sbb
or
xchg
lds
gs
testb
mov
push
cmp
imul
in
sub
sbbb
jns,pn
push
outsl
lea
add
and
je
stos
imul
mov
xor
test
roll
jnp
mov
dec
fcom
pop
rol
je
pushf
fimull
insl
fadd
or
std
push
add
cmpl
push
mov
sbb
push
dec
fcoml
rorl
sbb
lahf
mov
mov
aaa
xchg
sub
repnz
je
movd
push
les
cmpsl
nop
negb
or
in
into
test
movsl
xchg
mov
pusha
pushf
mov
add
ds
cmp
jle
and
popa
xchg
or
hlt
push
bound
test
fildll
xchg
push
int
push
xor
mov
sbb
jbe
adc
and
pop
xor
push
add
test
dec
mov
aam
push
aad
fldl
ja
add
or
mov
pop
inc
cmp
test
mov
mov
jecxz
push
push
enter
aaa
inc
jb
pop
sub
scas
jg
in
flds
insb
jnp
in
imul
pop
insb
pop
in
addr16
adc
fstpl
movsb
and
push
stos
jmp
stos
cmpsb
aaa
mov
dec
aam
insb
lea
sbb
sti
lods
or
rorl
fisttps
addb
negb
jnp
mov
xchg
shlb
pusha
xor
cmp
jl
leave
pop
aas
mov
clc
jae
lods
sbb
arpl
add
adc
dec
les
call
or
sbb
or
jp
push
adc
dec
fidivrl
lea
sub
xor
dec
dec
roll
sarb
cld
je
or
imul
outsl
mov
push
mov
or
outsl
sahf
push
mov
int3
in
clc
inc
or
sbb
or
and
jg
lods
cmp
addr16
jmp
or
fsubrl
mov
int3
xchg
je
add
push
pop
cld
dec
jl
jmp
lock
adc
sub
adc
pop
cli
pop
push
inc
cmp
cltd
xor
sub
leave
pop
mov
in
mov
mov
aam
cli
push
sti
std
dec
mov
rcrl
adc
jbe
add
cmp
icebp
decb
lods
cmpb
xchg
and
mov
jl
add
sub
pop
fnstcw
rorl
popa
dec
arpl
cmc
std
test
push
imul
dec
xlat
sbb
push
jo
daa
jmp
dec
and
cmp
loope
rclb
add
lock
or
dec
lock
fxch
jecxz
push
int
pop
mov
inc
mov
mov
hlt
mov
sbb
out
aaa
sbb
ds
cmp
jne
jnp
mov
push
inc
mov
aad
and
pushf
loopne
sbb
pop
inc
scas
out
add
jns
fldpi
mov
pop
in
aas
cli
mov
rol
adc
jp
mov
int
out
sti
imull
js
aam
test
sbb
add
inc
dec
hlt
jmp
insb
sbb
pop
bound
rcrb
mov
adc
int3
mov
and
and
inc
iret
cmovbe
bound
call
std
js
add
push
push
push
cmpsb
jb
pop
sbb
sti
lock
cmp
mov
imul
jle
xorl
fmull
int
sub
cmp
lea
out
in
jnp
ljmp
mov
enter
pop
pop
test
imul
mov
sti
sbb
jno
cmp
sub
cld
pop
out
cmp
cmp
jae
xchg
push
dec
fidivrs
sub
es
xchg
xchg
out
xor
mov
mov
dec
cmp
xchg
into
imul
or
aaa
mov
jne
in
inc
dec
xchg
js
sbb
lds
add
test
pop
pop
pop
mov
adc
fdivl
xchg
cmp
shrb
loopne
iret
dec
push
cmc
fdecstp
hlt
inc
mov
dec
fmuls
inc
int3
fs
mov
fistps
fidivs
rclb
inc
cwtl
jge
or
adc
push
xor
mov
pop
xchg
sub
sbb
sbb
data16
outsl
in
dec
movb
fwait
daa
fstl
push
mov
hlt
sub
lods
pop
call
mov
pop
cmp
cltd
mov
and
lods
jne
or
stc
jbe
rcll
mov
sbb
fsts
cwtl
dec
jae
lret
cli
testb
out
int3
xchg
dec
jns
xor
mov
push
testb
lods
push
mov
test
pop
mov
lret
pop
mov
dec
dec
out
lahf
cli
lock
movsb
xor
fdivl
cmp
and
dec
fcmovb
aas
out
pop
outsb
mov
or
hlt
cmp
push
or
jno
pandn
out
pop
ss
and
pushf
sbbb
cmp
adc
test
add
mov
movsl
dec
push
and
int
popl
inc
jno
stc
aaa
imul
dec
add
jnp
or
lds
insb
sub
jns
adc
or
sub
lock
mov
test
xchg
shl
xchg
push
mov
pop
negl
inc
out
sbb
stos
js
mov
fistpll
idivb
inc
icebp
inc
imul
mov
test
pop
add
inc
dec
in
xchg
pushf
fwait
pop
hlt
mov
sar
mov
sub
jno
jle
lock
loopne
sbb
punpcklwd
call
movl
sbb
popf
jb
lock
cmpsb
add
push
je
dec
or
movsb
xchg
fsub
push
push
jno
test
mov
loopne
gs
shlb
add
xor
fmuls
rorb
lods
jp
icebp
push
mov
add
test
sub
shrl
dec
inc
aaa
fcmovbe
int3
shll
push
outsb
mov
es
lea
cmp
mov
cs
mov
aas
mov
rcrl
cmp
call
pop
loopne
push
jg
es
jae
pop
and
xchg
sub
es
adc
and
test
fdivrl
and
xchg
flds
jle
ror
pop
mov
pop
push
fists
lock
inc
pop
dec
pshufw
outsb
fldenv
aam
jae
xchg
adc
push
mov
sub
mulb
xchg
orb
lahf
adc
sti
add
stos
jp
fistpl
inc
inc
xor
mov
rcrl
shl
les
xchg
pop
aaa
pop
or
mov
mov
imul
inc
mov
cmc
repz
xorl
push
mov
testl
dec
sahf
xchg
push
aad
out
xchg
xchg
sbb
dec
cmp
push
outsb
dec
push
ret
push
cmpsl
sbb
dec
test
lea
sbb
or
sub
pop
jmp
aam
mov
inc
adc
jnp
icebp
fimull
jnp
lods
mov
pop
loop
repz
pop
or
adc
adc
inc
xorb
negb
mov
scas
ja
fistl
lock
loopne
or
cmp
movsb
pop
push
popa
adc
mov
sub
dec
add
jbe
pop
fsubrl
or
xorl
and
add
ja
cmp
or
es
shl
popa
fabs
notl
dec
aad
stc
mov
test
and
xchg
bound
xor
or
or
arpl
loope
pop
ja
push
jl
das
push
adcb
in
jecxz
mov
sarb
sub
arpl
and
fcmovnu
test
loop
popa
pop
pop
mov
mov
cli
sbbl
outsl
xchg
xchg
cvttps2pi
sbb
bound
maskmovq
imull
pop
adc
push
cmp
lock
out
and
sbb
fwait
xchg
mov
pop
leave
lcall
cwtl
jae
ret
adc
mov
or
sub
mov
mov
hlt
clc
mov
jno
ds
cmp
or
cmc
push
mov
jbe
aas
xchg
adc
enter
inc
cld
ficoml
jge
out
sbb
mov
cli
cmpsb
xchg
movsl
mov
xor
push
push
nop
leave
sub
lods
rcrb
rorl
cmp
add
mov
rorb
shrd
mov
jo
jmp
cmpsl
xorl
ret
ja
add
adc
loopne
xor
fists
push
bound
mov
mov
clc
sbb
jmp
loop
in
dec
ss
in
lahf
popa
call
aad
xchg
and
push
push
push
orb
int
xchg
pop
int
or
aas
lds
push
and
or
test
or
cltd
in
rclb
add
mov
sarl
ror
pop
mov
sub
dec
lods
push
repnz
and
or
aaa
out
lods
aas
push
aas
xchg
popa
mov
cmpsl
and
dec
cli
adc
pop
and
push
aam
int
movsb
ret
sbb
dec
jae
out
dec
dec
sbb
sub
xchg
mov
or
inc
or
decl
pop
fldenv
sub
lcall
push
hlt
testl
inc
ficoms
jb
into
lret
xchg
dec
les
in
cmp
xor
jle
add
subb
mov
dec
inc
xchg
fwait
inc
or
push
out
iret
cmp
scas
rol
sbb
lret
mov
enter
call
push
cmp
push
cmpl
sub
int3
ja
push
pop
xchg
sub
in
push
mov
sbb
sbb
leave
movsl
push
jl
out
int3
leave
cltd
push
mov
mov
shl
in
jle
xchg
mov
fwait
xchg
xor
sub
loopne
hlt
xor
mov
pop
jl
fdivl
lahf
inc
cmp
sahf
repnz
sti
jp
adc
mov
jnp
ret
dec
or
mov
test
sbb
jo
leave
jno
dec
xor
and
repz
addr16
cwtl
add
sbb
mov
lock
mov
pop
adc
xor
cmpb
lods
lret
popf
adcl
cmpsb
mov
mov
xchg
lock
fnstcw
push
add
rcrl
push
lock
lds
cmp
pop
jp
pop
clc
sub
inc
rolb
inc
xor
mov
out
xchg
sub
xchg
xchg
pop
adc
stos
and
outsb
icebp
push
sbb
daa
mov
mov
es
dec
mov
es
pop
imulb
cmp
cs
ljmp
jmp
inc
jp
repnz
daa
push
sbb
repz
outsb
cmp
addr16
cltd
mov
loope
inc
mov
and
push
in
imul
hlt
ja
sbbb
js
or
out
orl
pop
jno
jnp
jne
xor
sub
cmp
inc
sbb
cld
enter
popa
adc
imul
cli
jecxz
inc
sub
in
daa
test
mov
xor
cmpb
inc
jns
adc
xor
xchg
mov
xor
negl
jle
leave
aas
adc
jno
add
stc
test
scas
jp
pushf
out
jg
xchg
hlt
pop
mov
or
adc
xlat
ja
sbb
adc
mov
push
or
sub
mov
pop
pop
mov
cmp
mov
stos
xor
or
push
ret
sub
dec
ror
or
inc
sbb
movsl
loope
jmp
pop
push
cmp
jbe
insb
mov
movsl
fwait
outsb
and
cs
gs
loop
adc
cld
sbb
int3
cmpl
test
cmp
inc
cmp
push
mov
mov
sub
bound
das
inc
xchg
in
into
negb
out
sub
pop
mov
push
ret
mov
jmp
jbe
test
inc
cmp
sbb
mov
rolb
add
or
mov
fs
leave
shll
cld
dec
ficoml
and
pop
dec
or
fisubrs
mov
jo
mov
cmc
sub
fldl
add
roll
jo
push
addr16
imulb
or
mov
jo
fbld
mov
dec
pop
call
xor
dec
imul
push
pop
popf
pop
push
and
das
push
mov
push
adc
popa
xor
jns
ds
daa
mov
loope
mov
out
add
stos
lahf
fisttpll
movsl
gs
loope
in
sbb
stos
sub
sahf
call
pop
xchg
and
and
ss
adc
jne
nop/reserved
arpl
mov
mov
pop
mull
sbb
loope
xchg
cmp
jg
mov
push
pop
lcall
xor
es
fildll
int3
push
sahf
aad
dec
xchg
or
sarl
hlt
cmp
sbb
daa
lock
add
pop
cmp
mov
push
push
jmp
xchg
loopne
cmp
cmp
cmpl
cltd
stc
and
sub
adc
cmp
lahf
add
bound
jmp
out
into
mov
outsl
mov
push
pop
pusha
mov
adc
js
aam
mov
jb
pop
and
movl
mov
jo
or
fstps
mov
mov
jae
sbb
lds
fimull
loopne
iret
mov
test
mov
cmp
push
in
push
cltd
cmpsb
je
daa
int3
out
das
add
out
std
fldenv
outsb
iret
incl
aad
movb
mov
outsb
push
test
mov
pushl
mov
xor
xchg
cmp
andl
push
mov
push
dec
arpl
imul
lret
inc
push
in
jp
pop
aas
out
mov
orl
inc
insb
sahf
xor
shll
mov
lret
or
or
dec
and
lcall
arpl
jg
cmp
out
fwait
cmp
orps
int
stos
loope
mov
das
mov
mov
jmp
sub
mov
sub
ficoml
dec
adc
or
cmp
push
sbb
sub
push
inc
and
scas
dec
aad
mov
xchg
or
aam
push
inc
and
mov
rolb
fisttpll
xor
repz
out
sbb
fiadds
inc
incl
jecxz
pop
ds
lcall
fstpt
jle
and
sub
mov
pop
inc
jno
fsub
add
cwtl
clc
lcall
mov
in
call
cs
cmp
sbb
cmp
call
inc
mov
ja
dec
clc
adc
push
orl
inc
push
ret
lods
push
and
pop
pop
mov
adc
fld
movsb
call
int3
pusha
ret
pop
cltd
or
not
pop
es
in
add
fcomip
cwtl
xor
hlt
scas
call
cwtl
cmpsb
mov
test
jo
mov
out
sarl
push
jo
add
push
adc
outsl
cwtl
icebp
jae
pop
cltd
in
iret
sbbl
leave
je
or
in
add
loope
xchg
leave
imul
pop
int3
movsl
and
dec
test
adc
popf
test
cs
scas
xor
into
inc
sbb
inc
aas
cmp
push
iret
stos
pusha
out
sbb
push
mov
pop
rcll
andl
inc
lret
sbb
cmp
cs
lret
push
adc
mov
xchg
mov
push
ss
pop
mov
es
std
insl
test
xchg
mov
push
mov
xchg
shrl
pushf
adc
sub
inc
jge
icebp
pushf
inc
or
movsl
dec
pop
xchg
mov
ret
daa
adc
lock
cmp
stos
ljmp
and
cmpsb
inc
jbe
inc
mov
push
jg
inc
loop
or
or
pop
lret
or
pop
or
fsubl
add
mov
mov
push
loopne
jp
dec
xchg
test
mov
cmpsl
cmc
repz
adc
push
int3
pusha
lods
inc
loopne
scas
hlt
or
je
mov
jp
std
ret
stc
sbb
fstps
sub
mov
repz
stos
xor
dec
adc
pop
mov
pop
enter
jne
inc
movsb
loope
and
aad
rcll
insb
mov
ja
ds
cmp
insl
enter
dec
pop
in
icebp
lahf
out
and
add
jmp
or
add
and
add
sti
fmuls
sti
pop
mov
jmp
loopne
popa
incb
ljmp
scas
inc
fistps
xor
cmpsb
mov
push
dec
cltd
subb
adc
ret
or
enter
pop
cltd
push
mov
icebp
pushl
nop
fcmovnu
arpl
out
push
jb
cmpsl
dec
test
pop
jae
and
adc
jmp
in
hlt
push
cld
mov
cmp
sarl
fs
dec
pop
pop
push
xchg
enter
lahf
cmc
push
xor
shl
xor
or
sbb
jge
cmpsb
add
icebp
test
and
xor
js
dec
mulb
jae
int
les
imull
and
test
cwtl
sub
push
shrb
lods
cwtl
insb
mov
mov
pop
or
jle
jg
adc
fidivs
rcll
xor
sarl
adc
loopne
pop
mov
lock
sahf
das
jb
and
adcb
and
add
xchg
out
sbb
inc
lds
mov
out
sbb
nop
call
jg
out
outsb
scas
or
bnd
cmpsl
xchg
and
sbb
mov
sbbl
xchg
fidivrs
xor
add
pop
pop
lahf
adc
loop
fsts
mov
int
xor
filds
push
lods
or
push
sbb
scas
mov
and
sub
clts
rclb
mov
sbb
and
inc
or
xchg
stc
push
jle
ljmp
mov
add
jne
loop
in
cmp
scas
aam
out
mov
lods
not
mov
insb
cwtl
sar
shrl
dec
out
popa
call
mov
xor
or
jle
push
cli
xchg
pusha
sbb
mov
and
incl
repnz
lret
icebp
mov
pop
jmp
adcl
jnp
inc
movsb
adc
adc
xchg
ds
insb
cltd
ret
inc
lret
lods
dec
push
pop
inc
in
stc
and
xchg
jmp
pop
and
arpl
dec
lcall
fsubrs
push
xchg
push
xchg
add
orb
jle
push
push
popa
sarl
scas
push
xor
and
xor
into
cmp
nop
stc
and
jmp
mov
xchg
inc
inc
notb
xchg
mov
sbb
leave
std
in
shr
pop
loope
inc
xchg
jecxz
int
fisttps
push
or
ja
jg
xchg
mov
sahf
ja
jne
xchg
or
push
addr16
int
fistpl
lock
push
hlt
jno
lahf
mov
add
cli
mov
sub
push
sti
xchg
fcmovne
jecxz
adc
and
daa
dec
scas
aaa
mov
push
subb
dec
icebp
sub
push
fcom
cmp
mov
adc
imull
cli
ds
xchg
xor
arpl
cmpsl
sub
ja
test
call
cld
std
push
sbb
xor
sub
in
daa
adc
imul
out
in
and
fisubs
inc
dec
leave
inc
xor
jae
jns
mov
or
sbb
dec
jo
sti
movsl
subb
imul
or
pop
pop
mov
data16
icebp
cmpsl
rcl
outsb
shlb
arpl
adc
cmp
ret
inc
xchg
push
pop
pop
sbb
dec
mov
pusha
sbb
fdivs
loop
xchg
insb
int3
out
push
fisubl
aam
pop
add
cli
idivb
dec
cmpsl
jbe
enter
push
lret
sub
lods
les
fidivs
fsub
mov
inc
outsl
mov
negl
cltd
mov
and
inc
imul
cmpsb
mull
mov
scas
inc
inc
or
xor
inc
rcll
mov
xor
mov
pop
stc
mov
xor
lcall
jnp
dec
cmc
xor
in
xlat
subb
xchg
nop
sub
addr16
cmp
clc
mov
sbb
or
lret
sbb
aaa
aam
push
int
mov
or
je
push
push
mov
push
jnp
aam
add
addl
jl
fsubp
add
je
mov
repz
sub
sbb
sbb
sub
dec
cmp
roll
mov
js
push
mov
and
inc
xor
in
lods
jb
mov
outsl
mov
xor
bound
or
je
and
dec
stos
jnp
push
fcmove
or
out
mov
aaa
rcll
jae
mov
inc
pushf
jp
cmp
adc
and
mov
pop
xor
cmp
pop
adc
jp
aaa
cld
das
stos
cli
cmp
xor
lds
loopne
fidivrl
call
cmp
or
aad
stc
sbb
into
lods
in
inc
ss
negb
push
xor
or
jge
xchg
add
lret
dec
cmp
add
jbe
sbb
jge
push
or
stos
mov
nop
adc
push
pop
movsb
jno
es
ja
test
aam
or
xchg
lret
add
jnp
jbe
outsb
or
ljmp
inc
inc
xor
bound
sbb
lods
cmpsb
push
cmpsl
jp
in
jp,pt
mov
mov
fsts
out
cltd
pop
add
iret
mov
imul
xor
arpl
aad
les
cmp
mov
out
adc
fildl
lret
loop
and
out
sub
add
jl
das
adc
sahf
push
int3
outsl
and
dec
add
repnz
mov
cmp
push
orl
or
sbb
and
xor
stc
outsb
cmpsl
push
repnz
sarb
push
mov
sub
aas
mov
mov
mov
cltd
mov
mov
leave
clc
movsl
das
std
je
cwtl
jmp
out
dec
inc
clc
fbld
cmpsl
test
pop
pop
xchg
cld
sbb
test
mov
sar
int
cmp
mov
mov
out
imul
push
sti
mov
stc
je
lods
fimuls
pop
push
dec
cmp
ret
icebp
dec
xlat
or
aam
cmpsl
inc
pop
inc
movsb
cwtl
mov
push
into
or
ret
inc
arpl
out
sbb
negb
shrb
mov
cmpsl
mov
ds
outsl
ret
cmpsb
daa
jae
insb
std
mov
add
add
mov
das
xchg
and
mov
dec
and
jns
mov
sub
add
enter
jbe
mov
xchg
out
inc
nop
adc
data16
repz
rorl
icebp
push
pop
fcmovnu
bound
and
inc
xchg
push
and
punpcklwd
jge
movsl
ss
jnp
dec
xchg
roll
sub
pop
mov
shl
js
and
jo
xor
scas
add
or
mov
imul
push
lods
scas
shrl
jl
jl
pop
or
dec
push
sub
sbb
push
jp
add
push
add
push
push
je
rorl
movsl
or
test
push
xor
xchg
cmc
out
jg
icebp
aas
adc
push
cmc
test
sub
adc
sbb
data16
jg
inc
or
test
mov
loope
jno
bound
cmp
xchg
sar
setns
adc
fldt
stc
or
mov
rclb
stos
dec
cmc
imul
pop
or
sbb
loopne
sti
repnz
int3
push
aas
sbb
leave
adc
sub
rcr
test
mov
mov
xchg
lea
pusha
clc
mov
mov
jne
int3
or
dec
xchg
inc
mov
imul
dec
mov
insl
pop
push
js
mov
jne
outsb
push
inc
out
in
cltd
ds
cld
xlat
lret
cmpsl
dec
jno
xor
xchg
fwait
loope
aam
or
sahf
jbe
pop
lret
pop
push
out
mov
dec
cmc
dec
mov
dec
lret
scas
es
mov
mov
in
insb
add
mov
mov
bound
sbbb
fnstsw
jb
xchg
test
xchg
sub
push
fs
insw
in
loope
pop
sbb
lock
arpl
xor
sub
out
lods
mov
das
addl
out
fidivrs
push
xchg
xor
sub
and
xor
add
adc
inc
mov
mov
lret
dec
loope
dec
ret
dec
sbb
jae
test
push
not
subl
push
xchg
add
sub
xor
push
mov
rclb
adc
push
mov
inc
xor
pushf
and
pop
push
dec
jle
mov
dec
in
addr16
stos
hlt
aaa
imull
push
es
ret
mov
jo
xlat
push
sub
enter
lods
xchg
negb
aaa
mov
add
inc
aaa
dec
scas
cmp
in
pop
mov
fistps
sbb
into
or
xlat
aaa
sbb
jge
push
and
cmp
call
xor
popl
or
lahf
lods
es
inc
imulb
std
fildll
mov
decl
mov
inc
push
popa
movsb
mov
popa
orb
scas
jb
inc
mov
mov
cmpsl
pop
push
arpl
test
cmp
sbb
pop
js
sbb
outsb
xchg
or
sbb
mov
push
pop
dec
jecxz
jp
enter
xor
and
or
push
mov
cmp
daa
ret
xor
lds
mov
ss
sahf
mov
cld
jnp
ffree
dec
xchg
shll
negb
lea
and
test
iret
add
sbb
icebp
loop
loope
ljmp
lahf
lock
sub
cmp
popa
hlt
fildl
test
cmp
mov
roll
inc
dec
addr16
loope,pn
mov
rolb
aad
push
fisttpll
hlt
pop
out
subb
into
fs
jnp
lahf
aas
lds
es
jecxz
ds
aad
mov
mov
push
xor
mov
les
aas
xor
test
mov
push
mov
das
adc
in
roll
daa
inc
shlb
ret
into
xchg
lret
shl
cmpsl
incb
xlat
out
daa
in
mov
or
fsubs
ja
rol
dec
sub
js
loopne
xor
pop
imul
pop
out
sub
mov
dec
sar
or
cmpsl
cwtl
mov
add
loope
lods
cmpsb
jmp
cmp
mov
push
push
mov
insl
mov
mov
in
repz
pusha
stos
push
jg
fwait
push
repnz
data16
hlt
pushf
mov
jo
es
leave
jbe
mov
inc
test
popf
xor
dec
adc
jno
and
sub
mov
stos
sbb
cvtpi2ps
jns
adc
inc
pop
pop
adc
push
pop
icebp
inc
movsb
out
inc
pop
call
or
je
jnp
mov
dec
sbb
jb
lock
stc
mov
sbb
mov
popl
or
dec
lret
jl
daa
xchg
ret
xorl
cmp
mov
cmpsl
sub
adc
xchg
leave
jmp
out
pop
inc
inc
push
imul
dec
dec
subl
call
adc
stos
aam
loopne
or
push
mov
lods
mov
lock
cmp
dec
mov
les
jge
push
pushl
test
mov
pop
cmp
and
and
mov
scas
js
stc
jmp
dec
movsb
cmp
or
and
cmp
add
lahf
xchg
jge
popf
adc
movsb
sbb
pop
mov
mov
mov
push
adc
int3
xlat
mov
mov
cmp
inc
jb
aaa
or
xor
leave
adc
int3
inc
or
cmpsl
jns
in
dec
aad
movsb
pop
mov
sub
jmp
dec
jns
or
mov
shrl
mov
mov
lods
arpl
or
loopne
movsl
sbb
aaa
sahf
scas
les
pop
pusha
mov
aaa
jmp
lods
stos
xor
xchg
dec
or
lods
daa
repnz
rcll
int
movsl
hlt
and
in
jno
mov
inc
in
shl
inc
ds
mov
sbbb
add
cmp
es
push
mov
push
sbb
inc
adc
loop
dec
add
xchg
mov
dec
jo
int3
jnp
adc
inc
jnp
xchg
mov
stos
mov
and
sub
fwait
cmpsb
stos
dec
dec
notb
fimuls
mov
pop
sti
push
loope
lods
mov
mov
aas
pop
daa
out
mov
faddl
push
xor
adc
in
imul
mov
jmp
clc
jo
dec
cmpsl
mov
and
push
loope
jb
divl
aad
dec
test
add
mov
adc
mov
inc
cwtl
sub
dec
or
movb
notl
adc
jae
into
add
mov
cmp
xchg
sbb
shlb
jl
call
mov
sub
pop
xor
fwait
jo
push
mov
notl
fsubrl
dec
and
cmpl
mov
mov
adc
and
mov
daa
dec
lahf
dec
call
push
dec
lock
adc
daa
popl
inc
cmp
push
gs
mov
loop
mov
xchg
adc
and
shl
pop
and
xlat
mov
sti
sub
hlt
or
pop
mov
movsb
data16
popa
sub
mov
movsb
leave
mov
pusha
pop
roll
jge
cmpsl
call
mov
sbb
in
mov
cmp
movsl
test
dec
jns
xor
jbe
out
sub
ss
xlat
andb
adc
xchg
int3
sahf
mov
jbe
repz
cmc
inc
xor
pop
adcl
cmpsb
iret
xor
dec
movsl
shll
lret
xchg
mov
notb
cmpsb
lret
dec
repz
call
sub
push
fs
pushf
in
scas
js
iret
inc
addr16
dec
negl
xchg
push
stos
test
insb
rclb
dec
negl
arpl
sub
mov
cwtl
and
rcl
ret
ret
pushf
pop
test
sub
js
gs
mov
mov
mov
testb
pop
test
jne
sbb
cmpsl
clc
xor
jle
mov
icebp
sub
xlat
pushf
jle
add
fimull
pusha
pop
dec
push
cmp
dec
shll
lea
test
into
pusha
cltd
jnp
inc
loopne
stos
jmp
pop
jl
dec
add
cmp
pop
loop
ljmp
test
sbb
add
or
mov
call
or
sbb
jno
lock
add
push
jl
sub
add
mov
inc
sbb
mov
inc
mov
iret
mov
sbb
pop
iret
fldt
and
scas
test
cmp
mov
add
leave
mov
rcr
push
push
cwtl
cmp
sub
stc
cli
nop
mov
sub
xchg
mov
popf
mov
sub
bound
inc
in
testb
addb
out
and
xor
loop
mov
push
mov
subb
inc
int3
lock
mov
push
movsl
bound
xchg
jmp
mov
mov
and
fsubr
jnp
mov
addr16
les
dec
scas
mov
js
insl
sbb
shll
nop
les
mov
sti
push
mov
mov
or
xor
cmc
push
pop
inc
adc
mov
and
sbb
inc
mov
mov
out
scas
cmpsl
mov
cmc
test
push
push
mov
xor
out
testl
mov
push
jae
popf
sbb
cmpsb
js
cmpsl
jle
dec
cmpsb
xlat
xchg
sbb
jmp
xorb
pushf
xor
fistl
mov
jno
mov
dec
mov
aam
cmp
jle
data16
xchg
sti
dec
ja
pop
jns
inc
jg
cmp
mov
andl
sbb
mov
mov
and
cs
cmpl
shlb
mov
ljmp
dec
fst
in
xchg
ds
loope
sbb
rolb
pop
ret
sti
iret
rolb
gs
jle
test
fnstcw
ja
cmp
imull
insl
lock
add
fdiv
fdivrs
jae
es
mov
out
loop
insl
sahf
outsb
mov
cmp
jmp
inc
push
mov
int
inc
cmpsl
cmpsb
shl
jbe
push
cli
push
push
mov
mov
or
or
xchg
dec
popa
xchg
add
out
jecxz
mov
inc
lret
pop
fmull
gs
pop
movsb
sbb
lods
jo
adc
ss
mov
mov
or
pop
sbb
inc
add
fwait
and
ror
mov
sub
test
lods
push
push
mov
out
fcmovnbe
sbb
mov
push
push
or
inc
and
mov
adc
push
imul
fisubs
jno
mov
jl
out
cli
adc
lcallw
mov
repnz
jp
fdivrl
mov
scas
pop
loope
es
loop
fsts
xchg
dec
mov
lock
repnz
and
int3
jae
jns
push
les
add
cmp
stos
mov
or
outsb
pop
add
fs
addl
inc
sub
and
sti
xlat
inc
outsb
mov
mov
lods
movb
push
and
jecxz
sub
lahf
sbbb
rcrb
xchg
cmp
cmpsl
iret
test
jp
xor
loope
jns
jns
xchg
mov
jmp
cmpb
jo
je
dec
cltd
and
mov
jmp
sub
adc
cmp
rcrb
out
mov
push
or
xor
pusha
outsl
sub
aad
xor
inc
fwait
out
scas
cmp
xchg
popf
fisubs
out
push
push
mov
inc
push
shlb
push
cmp
push
outsl
lret
ds
popf
push
cwtl
imul
fldl2e
std
orl
xchg
dec
dec
gs
shlb
ja
imul
adc
cli
push
pusha
push
push
lret
mov
add
jle
cmpsb
pushf
push
dec
repnz
cmp
mov
jns
xor
and
push
inc
outsb
jb
dec
rcrl
pop
push
pop
nop
filds
jno
push
jno
mov
mov
arpl
shlb
add
jp
mov
out
sbb
ret
fldcw
sub
lock
or
push
out
rcll
and
pop
push
fisttpll
ret
or
jne
fistpll
es
icebp
xor
sbb
sbb
bound
ljmp
dec
xor
dec
pop
loopne
out
sub
or
mov
jmp
movsl
mov
mov
pop
jp
popa
jns
sarb
lods
xchg
and
inc
in
ja
ja
xchg
mov
mov
orl
xlat
jno
add
jecxz
sar
adc
mov
into
das
adc
mov
xchg
jno
add
mov
cmp
dec
int
jbe
mull
out
jl
xlat
sbbb
loope
out
or
shll
jno
lds
jge
xor
cmpsl
je
push
imul
mov
jp
sbb
out
fwait
arpl
lods
dec
enter
mov
add
pop
xchg
sub
push
int3
jb
and
in
mov
mov
mov
mov
repz
pop
insb
mov
test
sub
mov
scas
es
and
js
int3
cmp
scas
lret
sbb
in
add
repnz
es
mov
cmp
and
lea
push
cld
xchg
getsec
and
jb
into
lea
arpl
jle
sbb
aad
cwtl
jmp
ret
call
int3
mov
sub
shrb
rcrb
aas
dec
dec
out
pop
and
in
movsb
or
xchg
rcll
test
lods
push
adc
loope
adc
cwtl
mov
outsb
fiadds
enter
arpl
shrb
sahf
andb
subl
xchg
out
pop
sbb
enter
mov
mov
push
or
mov
mov
xchg
jp
int3
fcmovu
popa
scas
push
jge
xor
cli
push
iret
dec
pop
inc
sub
mov
in
cmp
and
out
push
das
push
or
mov
cli
dec
les
nop
mov
add
fldenv
sbb
out
push
das
in
shll
repnz
es
sbb
dec
popa
jbe
inc
shrd
push
in
pop
cmp
or
mov
add
xor
xor
mov
xor
cmp
push
inc
fnstcw
cmp
cli
mov
outsb
hlt
jmp
out
rorb
aam
adc
xor
cmp
in
cmpsl
loope
mov
sub
hlt
sbb
xlat
mov
cmpsb
or
ss
jns
xor
rcrl
loope
sub
popa
ja
fxch
and
lahf
xchg
cltd
mov
aad
sub
ret
dec
inc
xchg
inc
loopne
and
push
inc
iret
adc
push
sarb
aas
mov
pushf
dec
iret
cmpsb
push
mov
mov
mov
jecxz
jbe
mov
jle
and
push
movsl
cmc
mov
add
into
push
mov
xor
out
mov
xchg
xor
pop
aaa
mov
pop
jnp
push
and
pusha
subl
push
pop
jb
cmp
mov
sub
sbb
mov
sub
mov
mov
add
cwtl
ret
push
sub
dec
rorl
cli
int3
adc
push
bound
lods
and
dec
cs
daa
cltd
xchg
jecxz
sbb
jmp
std
ja
dec
or
lock
lret
daa
std
adc
pusha
jg
shlb
enter
pop
gs
jns
inc
icebp
mov
lods
xchg
ss
push
fildll
jmp
sbb
loop
push
mov
add
jle
hlt
and
sub
mov
add
outsb
dec
xlat
lods
jg
pop
or
das
test
lds
sarl
sub
sbb
push
cmp
inc
repz
imul
lahf
xchg
bnd
adc
mov
pushf
dec
xchg
mov
add
ret
into
lea
out
sub
cwtl
sbb
push
and
jne
loop
mov
cmp
jecxz,pt
shll
xor
sbb
push
jg
cmpsl
std
fcompl
outsl
int3
push
or
gs
mov
imul
testl
dec
nop
sbb
cmp
ret
jns
cmp
add
xor
call
test
mov
dec
xorb
inc
lock
dec
inc
pop
fcmovu
adc
inc
mov
js
into
test
xorb
int
sub
sub
jne
and
aas
lods
rclb
add
pop
shl
jo
or
out
mov
push
addr16
cmp
mov
enter
icebp
push
test
data16
stos
mov
ja
xor
ret
cltd
jnp
adc
fnstsw
cmp
imul
jle
or
mov
cltd
fsubrs
incb
add
in
push
test
sahf
pusha
shl
je
insl
push
mov
jp
sbb
roll
sarb
cmp
inc
pusha
mov
enter
xor
adc
iret
ds
jbe
mov
in
dec
inc
add
xor
out
or
jns
jg
or
dec
mov
xchg
xlat
and
lea
fmuls
jge
mov
nop
jae
mov
cli
fistpl
mov
test
lret
outsb
dec
mov
sub
or
fnstenv
into
inc
sub
jbe
unpckhps
mov
push
scas
inc
sbb
mov
mov
and
lcall
xchg
ja
ds
pop
adc
test
jmp
hlt
inc
mov
sbb
add
in
pushf
in
repz
es
popa
pushf
mov
ret
xor
dec
das
sub
jl
cmp
mov
adc
inc
xor
jmp
push
mov
mov
mov
rclb
mov
xor
cmc
in
sbb
xchg
xchg
mov
movsl
push
mov
lcall
xchg
nop
int
pop
jle
push
mov
and
call
arpl
clc
and
and
cmp
fidivrl
jp
pop
cmp
mov
pusha
dec
fcoml
loope
movsl
push
push
loop
sarl
daa
lcall
dec
mov
std
mov
pop
add
jnp
xchg
sub
sub
movb
mov
js
into
scas
sbb
scas
jb
mov
jo
fcomp
testl
and
daa
outsl
cmp
xchg
mov
pop
cmp
divb
enter
pop
aas
stos
jns
clc
rcrl
outsb
jb
sbb
nop
ret
sahf
jmp
xor
jnp
xchg
call
or
leave
fists
jl
and
xchg
pop
stos
xor
in
aam
lods
test
push
inc
les
inc
and
jecxz
int3
or
ljmp
cmp
pavgw
pop
mov
pop
dec
pop
hlt
and
adcb
xor
adc
pop
add
mull
push
or
xor
imul
das
jecxz
sahf
imul
dec
outsb
adc
int3
mov
subb
fmull
out
add
dec
dec
inc
pop
iret
test
into
mov
movsb
int3
jo
call
pop
stos
fwait
jne
int
xlat
fs
mov
adc
and
mov
mov
test
jg
popa
sub
shlb
fimull
mov
sub
sbb
cltd
pop
or
mov
addr16
jb
decb
dec
ret
inc
ljmp
lret
bound
cmp
jg
sub
inc
sub
cld
mov
pusha
je
inc
fcomi
jno
mov
dec
xchg
sahf
add
xchg
rcr
repnz
loop
stc
mov
adc
adc
inc
or
push
add
out
jb
aaa
push
jmp
mov
popa
pop
jge
push
add
aas
mov
clc
movsl
and
or
push
push
cmp
xchg
and
dec
sahf
or
adc
mov
enter
sbbb
stc
aaa
adc
xchg
icebp
jb
rolb
nop
dec
iret
sbbl
ja
xchg
test
fucomp
loope
jp
int
inc
sbb
push
mov
fbld
or
dec
sub
cmp
add
or
sub
mov
lods
mov
iret
fimuls
into
in
bound
aaa
insl
xchg
sub
mov
inc
in
lds
xchg
lea
imul
inc
lahf
dec
adcb
in
adc
fldl
cmp
jmp
es
mov
cld
inc
int
dec
xchg
xorl
lret
test
mov
iret
sub
inc
dec
in
push
enter
push
jo
xchg
and
repnz
mov
rclb
push
sahf
jns
cltd
insb
inc
dec
or
cmp
xchg
dec
pop
jg
sbb
aam
and
xchg
lcall
js
arpl
pop
mov
sbb
cmpsb
pushf
mov
add
pop
pop
aas
lret
call
lahf
cmc
fstpl
or
adc
shlb
jbe
mov
and
cmp
jb
pop
jbe
mov
pop
inc
or
inc
push
shlb
icebp
dec
cmp
jl
aam
inc
inc
mov
push
out
or
shlb
imul
pop
es
roll
mov
jecxz
and
leave
leave
pop
sbb
sbb
mov
xor
mov
rclb
stc
sbb
adc
push
adc
mov
mov
cmp
data16
push
mov
pop
flds
test
sbb
push
rcl
dec
jne
lcall
fwait
xchg
aam
pop
pop
lcall
in
dec
popf
pushf
iret
mov
inc
adc
xchg
lock
mov
dec
or
dec
lret
dec
pop
cld
sub
push
rcrl
ret
loop
das
adc
cmp
xchg
jbe
push
push
cmp
lods
enter
lret
jnp
mov
mov
mov
bound
add
inc
test
int
lock
inc
cltd
inc
out
pop
push
inc
and
jnp
sbb
in
lds
cmp
add
mov
les
push
jnp
jbe
rorb
nop
mov
cmpsl
xchg
xlat
lods
in
adc
stc
cltd
mov
loope
popa
push
xlat
and
nop
out
ret
into
outsl
and
mov
insb
icebp
lahf
les
je
add
mov
jecxz
and
std
dec
sar
ja
jge
jmp
sbb
and
push
add
test
cli
sbb
in
xchg
aad
ror
clc
les
mov
inc
aaa
sub
in
mov
cmc
push
inc
lret
mov
and
nop
out
inc
dec
ss
fsubrl
xchg
arpl
fadd
icebp
les
sahf
dec
rolb
or
sbb
adc
cli
pop
inc
add
inc
or
sbb
data16
or
xor
fs
and
inc
in
je
mov
cmc
je
add
or
push
int
fisttpl
sub
jl
add
jmp
incb
jnp
out
add
fistps
in
js
test
fstpl
shlb
jmp
imul
mov
mov
in
xchg
pop
mov
dec
lret
fsubrl
push
and
fldcw
and
mov
repnz
and
outsl
xchg
adc
sbbl
mov
int
inc
jg
sbbl
mov
lahf
jne
sub
dec
lods
xor
es
add
rolb
sbb
jb
sbb
xor
lods
ljmp
cwtl
pop
popf
cmp
adc
rclb
inc
in
xchg
push
rolb
fwait
dec
ss
not
mov
inc
push
sbb
mov
and
mov
sub
das
xchg
shlb
je,pn
mulb
fcmovnbe
adc
jge
in
lds
fs
add
xor
jmp
shlb
or
cmpsl
xlat
inc
sub
movsb
movsb
cmpb
adc
ljmp
sbb
push
add
push
push
cmp
pop
sbb
sub
popf
sub
and
pop
sub
xchg
imul
and
or
out
out
dec
push
and
mov
les
jmp
push
fcomip
in
dec
jmp
add
aas
dec
adc
inc
sbb
push
rcrb
jbe
xlat
movsl
out
ja
arpl
sbb
pop
xor
in
pop
xor
xor
mov
xlat
push
insb
sbb
inc
cmp
jge
sub
into
stos
mov
pop
cmpsl
ss
jp
sbbb
lock
inc
out
jno
pop
popa
jbe
mov
push
mov
inc
add
jecxz
and
cmp
mov
sbb
lods
jg
and
cltd
and
fimuls
orl
aad
ljmp
movsl
push
jl
cmp
ror
or
sub
repz
call
push
test
imul
hlt
cmp
add
es
repz
push
xor
xchg
push
std
addr16
jbe
pop
pop
or
add
fs
call
adc
xor
adc
add
test
aaa
fcoms
and
ss
mov
test
loopne
mov
mov
pusha
mov
mov
xor
out
push
mov
rcrb
lret
out
sbb
pop
fcmovnb
mov
add
incb
sub
pushf
cmp
inc
clc
xor
xchg
lds
xchg
cmp
ror
mov
lret
pop
loopne
pop
jmp
mov
and
loopne
add
mov
addr16
jmp
das
js
cmpsb
sbb
aam
sbb
mov
pop
popf
jmp
cmp
je
imul
add
or
outsl
mov
in
mov
cmpsl
xchg
push
mov
je
pop
adc
push
inc
mov
mov
xchg
stos
pop
in
pusha
rcr
test
dec
fdiv
mov
cmp
test
rcrb
les
aam
xchg
inc
add
jns
xor
popa
lret
jnp
stos
cmpl
bts
add
imul
or
inc
xchg
stos
cmp
inc
xor
repnz
movsb
xor
sti
jb
xchg
lcall
test
jno
mov
push
push
dec
sub
call
movsb
std
xchg
idivb
enter
orb
ds
insb
pop
rclb
jecxz
ret
jle
test
lahf
dec
aas
or
mov
cwtl
hlt
mov
dec
cld
sbb
jp
bnd
sbb
aas
adc
jge
push
loop
in
and
push
fdecstp
imul
jns
mov
aaa
mov
sbb
mov
pop
dec
int
add
es
mov
ss
lea
mov
fstpl
push
pop
xchg
xchg
outsl
mov
dec
mov
mov
push
cmpsl
and
xchg
sub
mov
out
stos
adc
mov
enter
ficompl
cmova
and
jns
setle
xor
mov
stc
adc
mov
sbb
mov
ja,pn
leave
movntq
lds
daa
in
mov
jge
pop
addr16
data16
mov
jo
sbb
fs
and
mov
inc
testl
sub
stos
inc
jnp
mov
ljmp
jmp
rolb
or
adc
pop
pushf
xor
mov
icebp
cmpb
dec
roll
push
cmp
es
pusha
sub
inc
jmp
xchg
xchg
jns
cmc
pop
daa
in
stos
mov
movsb
bound
es
adc
mov
out
inc
or
sbb
cltd
sar
jno
mov
xlat
xchg
mov
xchg
inc
icebp
lcall
ret
cmp
cmp
popa
in
inc
out
inc
nop
sub
cltd
incl
stc
sarb
jae
out
pop
push
add
jmp
test
xor
sub
lods
popa
or
sbb
fs
sub
cltd
test
xlat
sub
mov
adc
jnp
push
rcll
lret
push
mov
ljmp
jp
or
jns
xchg
pop
cmp
jnp
xchg
mov
add
mov
call
inc
call
push
xor
dec
push
dec
sub
jb
jle
dec
xchg
mov
mov
insl
wbinvd
xchg
outsl
cld
dec
std
adc
and
mov
and
fimuls
mov
int
stos
cmpsl
arpl
jbe
enter
aas
dec
icebp
add
pusha
and
xlat
pop
or
mov
add
inc
lods
in
popa
dec
bound
gs
hlt
frstor
dec
clc
xchg
jp
push
cmp
lock
sti
loopne
pushf
rolb
aad
mov
rolb
leave
daa
sub
push
push
jl
and
sti
int
cmp
fildl
popa
add
inc
xchg
imul
pop
lods
fdivl
xchg
fs
shll
jg
push
enter
mov
sub
and
sahf
out
ret
movsb
not
pop
mov
sarl
in
mov
rcll
push
insl
push
xor
mov
sub
inc
inc
xchg
outsb
pop
shlb
mov
mull
and
and
lock
sub
sub
push
loopne
out
test
outsb
push
jae
nop
adc
push
bound
dec
insb
push
jge
pop
lds
gs
sub
push
sarl
lods
mov
loopne
xor
and
sbb
mov
andl
or
xchg
test
loope
fucomip
lcall
jmp
daa
nop
push
jns
sub
mov
pop
fbld
mov
dec
pop
pand
negb
cmc
cmp
add
adc
jge
lea
int3
out
or
push
fsubl
sub
xchg
in
aam
mov
pop
pop
mov
mov
test
dec
dec
mov
cmp
xor
test
inc
or
dec
mov
sbb
xchg
push
test
and
rcrb
aas
pop
iretw
scas
lret
rolb
lods
test
cmp
test
into
dec
test
enter
cmpsb
mov
test
inc
cmp
test
jae
pop
les
inc
out
rolb
cmp
and
andl
cwtl
std
mov
js
cmp
xorb
jnp
adc
test
sub
push
mov
lret
lea
dec
and
push
xchg
or
jmp
adc
out
xchg
push
sbb
push
out
push
jl
xchg
out
push
jl
mov
in
arpl
xchg
cmp
and
fdivrl
loopne
arpl
mov
cltd
out
push
sbb
test
leave
cmc
mov
sbb
repnz
lds
cmp
lret
mov
lds
push
add
je
popf
or
push
addr16
jo
adc
xor
push
inc
and
mov
dec
push
ljmp
xchg
arpl
mov
inc
cwtl
das
dec
iret
add
lock
out
xchg
bound
imulb
or
rolb
sbb
fistpl
sarb
popf
movsl
scas
stos
cmp
movsl
in
push
aas
jmp
in
mov
sbb
aas
xchg
mov
rcrb
pop
push
std
xchg
or
push
punpcklwd
fimull
or
insl
subb
insb
mov
lret
das
adc
test
jno
jne
sub
jl
cltd
sub
lods
pop
and
mul
cmpsl
adc
sbb
mov
add
imul
lds
jns
pop
inc
or
fsubp
jno
int
out
sbb
lretw
xchg
lcall
jl
rcl
pop
add
popf
mov
cmp
out
movsb
and
push
mov
pop
xlat
jbe
xor
inc
push
xchg
or
xchg
mov
mov
jp
inc
inc
int3
sahf
inc
stc
ss
les
xchg
cmp
jg
push
movsb
push
jbe
popa
cli
dec
mov
sti
mov
pushf
cmp
imul
sti
mov
xor
dec
or
aaa
xchg
mov
les
shlb
dec
push
jg
and
stos
repz
inc
mov
adc
or
les
scas
mov
adc
and
and
adc
movsl
dec
mov
add
jo
jbe
lods
and
in
push
jg
ss
xchg
push
mov
jnp
popa
popf
idivl
enter
jmp
lret
movl
xor
and
out
cmpsb
sbb
add
lods
mov
jns
xor
dec
jg
pop
repz
repz
mov
sbb
xor
dec
movsl
arpl
jmp
aam
mov
inc
sbb
daa
stos
xchg
mov
add
cmpsl
cs
xor
pop
ret
or
dec
arpl
test
aas
and
dec
push
mov
dec
test
jle
int3
std
dec
testb
cmp
inc
adc
or
aam
mov
mov
jne
and
jae
push
bsf
fistpl
popf
cmpsl
jnp
xchg
test
or
daa
das
arpl
mov
cltd
mov
popa
sbbl
leave
jbe
inc
rolb
push
xchg
jb
or
pop
adc
xchg
dec
hlt
call
cwtl
adc
ret
mov
and
movq
shr
loope
dec
pusha
sbb
add
jae
aam
scas
movsb
outsl
movsb
scas
dec
scas
or
mov
dec
cmc
out
mov
push
xchg
ds
lea
je
adc
testb
inc
xchg
jb
nop
fxch
stos
iret
icebp
rcl
pop
cmp
mov
mov
mov
divb
scas
out
mov
adc
jno
xchg
lret
shlb
negb
mov
daa
std
inc
pop
sub
add
jo
xchg
sahf
ret
xchg
and
aam
pop
inc
inc
lcall
cs
in
cmpsb
aam
mov
pop
loope
loop
outsb
in
push
sub
add
cmp
js
imul
pop
daa
inc
sub
ret
mov
xchg
stos
mov
dec
jp
negb
mov
stos
and
je
push
arpl
mov
add
das
or
add
int3
pop
add
movb
in
in
adc
pushf
pop
lods
out
push
out
mov
aam
pop
iret
test
mov
sub
hlt
lret
xchg
or
cmp
dec
pop
or
xchg
fidivs
std
jmp
scas
popa
shl
out
clc
add
push
test
imul
loopne
stc
lods
or
push
pop
xchg
stos
aad
subl
xchg
mov
in
imul
pcmpgtb
sarl
movsb
ds
mov
lcall
adc
in
mov
jo,pt
pop
ja
test
rorb
les
jle
cs
ret
js
aaa
mov
sub
orb
pusha
pop
jne
dec
mov
icebp
pop
lahf
fsubrl
repz
out
loopne
push
ss
cltd
rcl
xchg
out
pushf
pop
adc
sbb
pop
lahf
push
adc
pop
sbbl
daa
hlt
jno
push
fnclex
or
cmp
movsl
xlat
dec
ja
fcmovnbe
sub
insb
mov
add
jp
pop
inc
lahf
movsl
or
xor
adc
shll
inc
negl
add
pop
bound
aad
lcall
push
mov
jle
push
inc
rcll
sub
dec
jle
inc
mov
and
cmc
push
int
xlat
stos
sub
orb
clc
test
push
jecxz
mov
arpl
push
ljmp
iret
push
das
in
mov
cld
mov
fsubrs
adc
fildll
and
push
pop
sub
cmpsl
scas
cmp
arpl
and
mov
jne
jae
add
inc
lds
andl
addl
fwait
xor
mov
shrl
xchg
movsl
mov
push
test
daa
sbb
jne
adc
out
adc
pop
rol
sar
dec
out
out
cmp
inc
dec
jmp
dec
ljmp
or
push
adc
je
in
je
daa
js
loopne
enter
xlat
xchg
rcrb
xchg
sbb
sub
sbbl
mov
into
push
pusha
push
inc
ss
mov
sub
cmp
cmp
lcall
ja
or
add
adc
loopne
xlat
or
pop
xchg
inc
fimuls
test
jne
sbb
inc
ficompl
xchg
ret
aaa
aam
or
dec
mov
test
ljmp
inc
arpl
nop
add
cmc
and
mov
jae
adc
fs
sbb
jge
fs
mov
aas
dec
aam
adc
lret
movsb
dec
inc
sbb
or
xchg
arpl
dec
adc
pusha
jl
pop
ss
mov
mov
ljmp
lcall
jne
andl
jmp
and
sbb
sbb
pop
mov
mov
cmpsb
ja
xor
cmpsl
pop
xchg
xor
pop
or
and
dec
cmp
lock
movsl
inc
cmp
test
inc
push
mov
cmp
mov
insb
rolb
repz
sub
nop
or
andb
outsl
push
out
in
js
jl
lea
out
ja
sub
adc
and
xor
sti
sub
dec
stc
mov
push
and
call
push
mov
fstpl
cli
in
push
sub
pushf
sub
inc
push
mov
xchg
lock
lret
jns
pushf
test
lcall
sbb
rcll
mov
dec
call
fcmovne
push
cmp
or
jo
rcrb
mov
xchg
call
or
cltd
or
sbb
xor
push
mov
enter
outsl
jge
jns
lds
jg
cmp
or
push
dec
lds
adc
sbb
les
cmp
xlat
pop
inc
stos
cmc
or
mov
mov
lods
scas
mov
mov
out
mov
or
lcall
je
dec
call
mov
add
sub
mov
fildll
inc
lcall
push
jo
aam
push
lret
scas
mov
bound
jmp
lcall
xchg
mov
pop
pop
mov
push
push
mov
sub
das
inc
in
movb
push
pop
push
add
test
add
pop
xchg
loope
pushf
push
mov
aas
pop
int3
dec
mov
cld
lfs
sbb
pop
enter
or
hlt
out
or
bound
sub
aam
or
lret
xor
xchg
dec
dec
data16
mov
pop
mov
loopne
jge
jle
sti
jbe
aaa
push
push
into
jb
sub
mov
icebp
sub
sub
cmp
xchg
imul
adc
lret
jae
fs
in
shl
sbb
dec
inc
iret
mov
pop
sub
fs
push
jle
out
mov
scas
cmp
or
std
dec
jns
lds
je
cmp
push
imul
sbb
cmp
mov
mov
and
cmp
sbb
pop
rcr
mov
sbb
cmp
pop
adc
cmp
push
sahf
sub
or
pusha
rorl
add
inc
popa
mov
cmp
sbb
jno
cmp
mov
or
mov
movsl
mov
jle
pusha
pop
loope
addr16
xchg
pop
fstpt
pop
mov
mov
outsb
lock
lret
push
rclb
cli
dec
loopne
dec
loopne
fidivrs
cwtl
push
mov
xchg
test
xchg
xchg
cmp
test
lds
or
cmc
test
xlat
jmp
subl
bound
lods
push
aam
dec
and
rclb
popa
repnz
pop
js
jle
mov
andl
call
test
mov
lds
jmp
stc
push
loope
and
mov
pop
pop
mov
ret
mov
inc
mov
pop
add
adc
jge
in
sub
sub
outsl
out
js
imul
je
jb
je
adc
add
sti
inc
fdivp
cmp
xor
jmp
in
iret
push
xchg
pop
mov
mov
mov
mov
add
dec
cli
push
mov
xchg
int
jno
adc
or
dec
jmp
test
mov
mulb
movsb
movl
xlat
aam
fisttps
dec
mov
jmp
cmp
xchg
test
fwait
sbb
loopne
shll
jge
insb
setge
divl
pop
ja
arpl
or
cltd
sub
ss
mov
jb
ljmp
sbb
mov
push
or
inc
dec
add
mov
add
call
mov
mov
dec
jnp
xchg
icebp
xor
cmp
or
in
popa
and
xchg
fildl
nop
adc
xor
inc
ljmp
push
shll
insl
mov
dec
loopne
xor
dec
jl
jno
movsb
imul
mov
int
pop
aaa
mov
stos
push
mov
movsl
int
imul
out
orb
test
fmul
mov
jl
add
pop
mov
sbb
int
sub
xorb
fbld
leave
adc
mov
mov
or
stc
add
lods
push
pop
mov
xorb
push
data16
pop
mov
enter
pop
hlt
sub
dec
inc
mov
repz
cmc
jne
inc
roll
xor
inc
mov
loop
fcom
imul
test
stc
das
loop
imul
out
or
and
mov
jb
sub
xor
jnp
nop
addr16
xchg
imul
mov
mov
cmc
mov
lahf
fs
inc
es
xchg
fists
push
lods
aad
mov
gs
sahf
test
notb
jnp
out
fnstcw
rorb
lds
jp
pop
movsl
testb
xor
cmp
push
mov
daa
clc
stos
daa
sub
mov
fwait
aad
xor
xchg
int
xor
fidivrs
dec
pop
sbb
imul
loop
jne
sub
push
push
push
push
fwait
lret
rcll
jae
stos
and
out
adc
inc
or
pop
jl
out
mov
loopne
aaa
das
sub
mov
mov
xchg
dec
mov
push
and
jp
scas
enter
gs
mov
push
adc
add
push
push
pop
inc
sahf
decb
fs
xchg
je
lds
lods
jp
sbbb
cmp
push
dec
aaa
cli
outsb
jg
rcrb
xor
pop
dec
fsubrs
jns
test
xchg
lods
mov
lcall
mov
scas
fldl
mov
stos
repz
pop
jg
jb
adc
scas
xchg
and
sub
and
ljmp
ror
inc
shlb
outsb
fsubrp
push
lds
mov
fmuls
adc
je
mov
sub
push
adc
and
bound
rorb
fsubrs
enter
pop
pop
pop
hlt
scas
inc
inc
xlat
and
pop
mov
xor
mov
push
mov
add
and
pop
fstl
mov
jnp
sahf
subl
popa
xchg
add
mov
mov
imull
dec
frstor
or
mov
ds
les
repz
inc
push
divl
dec
adc
fdivl
dec
sbb
mov
fsubs
mov
xchg
orl
fildl
rolb
aad
addr16
out
iret
dec
fcoms
enter
add
jl
mov
rcr
sbb
hlt
mov
lods
pop
fidivrl
out
push
xlat
pop
fs
pop
sbb
out
in
sub
sbb
lret
call
sbb
in
cld
push
rolb
stc
aas
cmp
cs
push
jbe
xchg
mov
test
sbb
fs
ret
or
ficoms
jbe
mov
dec
je
aam
push
clc
test
out
daa
mov
cwtl
or
std
sbb
add
movsl
ss
stos
sub
rcrb
inc
aam
add
popa
cmp
mov
mov
jnp
sbb
or
jb
dec
mov
jge
or
push
repz
inc
insb
add
es
xor
scas
jne
in
pop
adc
cmp
add
or
imull
mov
dec
and
lret
sub
dec
insb
leave
in
dec
sbb
xchg
add
mov
lret
in
push
xor
push
leave
and
insl
xlat
cwtl
shrl
xchg
inc
jne
mov
xchg
add
dec
popf
sbb
out
ljmp
shl
stos
addr16
imul
xchg
outsl
xor
addl
pop
ret
mov
scas
or
push
loop
js
notb
pop
or
outsb
insb
and
out
sbb
cmc
cmp
push
jne
xchg
hlt
pop
inc
es
out
fs
pop
jae
push
push
jbe
jg
subb
outsl
adc
aas
mov
lock
ret
inc
jae
dec
fimuls
out
push
idivb
lea
xchg
mov
in
adc
lods
push
cmp
xor
int
sub
in
mov
adc
insb
cmpsl
loope
mov
cld
pop
mov
and
xor
mov
add
arpl
imul
daa
movsb
and
ja
fiadds
jp
push
jns
lock
push
loope
sbb
cmp
in
lcall
pop
lret
mov
xor
ds
jp
lahf
sbb
es
test
sbb
lret
daa
std
adc
cmp
cmp
fildl
cwtl
enter
aam
stos
outsb
and
mov
bound
sarb
adc
addr16
adc
movsb
mov
push
out
push
mov
stos
movsl
ret
and
cmp
add
das
fmuls
push
rcr
push
xchg
push
ss
sbb
adc
dec
push
fwait
push
mov
into
or
mov
jmp
xchg
sarb
xor
xchg
mov
dec
add
xor
cmp
mov
adc
gs
sub
add
xor
leave
jmp
aad
lret
xorl
mov
adc
mov
in
rcrb
insb
mov
loopne
pusha
add
out
mov
cmp
jb
fdivl
mov
mov
loopne
popf
ss
pop
sbb
sti
outsl
imul
test
push
mov
ja
sub
je
fcmove
loope
jbe
andb
xchg
loop
cmp
cmp
dec
repz
inc
movsl
outsl
insb
sub
js
adc
dec
movsb
jp
pop
cmp
dec
out
fsubrl
pop
movsb
push
mov
and
call
push
jne
push
hlt
outsl
mov
test
mov
mov
and
add
out
int3
push
out
adc
cmpsb
push
cmp
sbb
cmp
adc
jb
sub
fwait
sti
add
inc
xor
cmp
leave
or
push
pop
xchg
mov
or
mov
arpl
iret
cwtl
test
ja
push
xchg
hlt
or
xor
ljmp
sahf
enter
pusha
inc
sbb
scas
cmp
inc
sbb
add
sbb
inc
test
or
pop
or
jp
cmp
push
sub
fwait
pop
inc
xchg
loope
out
int3
xlat
pop
mov
mov
testb
pop
dec
movsb
ret
repz
dec
sbb
cli
sub
movsb
inc
jns
cmpsb
adc
lods
mov
inc
leave
pop
and
shlb
sahf
inc
mov
mov
filds
data16
repnz
icebp
insb
mov
mov
gs
pop
mov
sahf
xor
mov
add
enter
mov
inc
ljmp
testb
mov
jae
roll
out
jne
js
xor
mov
js
lds
mov
mov
out
cli
ficomps
xchg
lret
out
cmp
jae
stos
push
xchg
pop
add
push
js
mov
sar
and
cmpsl
pop
inc
in
fbld
sbb
je
lret
aam
cmp
and
or
pusha
fcoms
sbb
testb
add
xor
sbb
out
mov
into
ljmp
aaa
mov
orl
sbb
loopne
xchg
ss
or
les
stos
inc
shll
aaa
dec
bound
imul
fdivrl
push
xor
and
ljmp
lcall
and
fsubl
in
insl
daa
cld
push
jg
sbb
cld
into
push
lret
ja
ljmp
das
adc
clc
arpl
xchg
push
ret
jo
repz
mov
aas
sbb
inc
loope
popf
addl
jmp
negl
enter
mov
sbb
lea
ja
div
loope
mov
je
add
pushf
or
ljmp
add
pusha
cmpsl
cs
mov
sahf
dec
sub
cmp
mov
push
jnp
or
dec
mov
jmp
lds
cmp
sahf
repnz
inc
imul
rclb
xor
pop
test
icebp
add
imul
test
jbe
mov
stos
push
rclb
jno
sbb
enter
daa
daa
out
dec
imul
test
or
outsb
jg
dec
mov
pop
and
hlt
call
adc
dec
dec
push
lods
imul
lret
cltd
je
push
daa
inc
sbb
scas
lds
pop
jns
lcall
stos
cmp
mov
out
repz
dec
out
aam
jbe
cvtpi2ps
scas
add
add
dec
mov
xchg
cmp
push
sub
fcoms
popf
nop
fldcw
imul
xor
sbb
jp
add
and
jbe
ficoml
sahf
loopne
mov
dec
mov
orb
xor
fnstenv
jno
fidivs
iret
imul
ljmp
and
push
jl
push
or
xchg
popa
rcrb
mov
xchg
push
dec
sub
lret
adc
lock
sub
stc
mov
inc
pop
dec
rcrb
mov
ds
mov
ficoml
jbe
leave
mov
scas
mov
cli
dec
sbb
sar
pusha
sbb
xchg
and
or
xor
mov
xor
mov
xor
sub
xchg
orb
pop
inc
push
xchg
add
or
notl
pop
ljmp
lret
loopne
add
fdivrs
rolb
dec
dec
jmp
out
sbb
mov
xchg
sarb
icebp
or
outsl
push
mov
cmp
mov
imul
sub
push
mov
xchg
jo
jns
leave
pop
gs
mov
scas
mov
mov
decl
test
xchg
loope
mov
and
fs
jmp
es
mov
mov
fyl2xp1
add
adc
push
dec
popf
xchg
out
jae
xor
dec
mov
adc
dec
fwait
jg
pop
daa
es
jnp
nop
jg
mov
fstpt
imul
test
mov
xchg
idivl
lahf
stc
sub
jo
das
or
test
pop
xchg
test
mov
push
lock
jne
mov
jns
lods
imul
cld
lret
push
push
adc
dec
scas
xchg
lcall
jmp
sbb
or
dec
lods
inc
push
rorb
test
mov
mov
nop
sbb
dec
jp
in
mov
dec
rorl
jle
mov
xorb
lahf
inc
jle
xlat
sbb
mov
sahf
dec
loopne
into
jbe
pop
or
loopne
mov
inc
test
mov
mov
xchg
popf
xchg
or
xor
mov
nop
xchg
dec
cmp
cmc
mov
aam
sub
into
lahf
movsb
sbb
jecxz
jmp
push
dec
inc
sub
cmp
mov
push
xlat
xchg
ret
rcrb
pop
aas
lret
mov
decl
in
ficoms
or
insb
or
xchg
ret
lods
fstps
and
mov
fs
dec
popf
dec
dec
arpl
xchg
xor
les
test
cmp
dec
mov
aaa
mov
pop
sbb
ja
pop
shrb
jbe
jmp
loope
popf
int3
lods
stos
outsl
cmp
imul
ret
jl
dec
mov
es
sub
loopne
movsl
push
jmp
int
lods
push
push
ret
sbb
push
mov
popf
lret
repnz
aam
push
lods
push
cld
cmp
xor
es
dec
inc
out
enter
gs
je
out
loop
test
adc
cld
nop
jl
xor
arpl
push
sbb
dec
mov
inc
mov
push
push
mov
adc
mull
mov
adc
push
daa
insl
pop
popf
mov
enter
dec
jb
inc
ja
arpl
leave
stos
push
in
xor
scas
sbb
lret
jp
aaa
adc
mov
jmp
outsl
and
fcomps
stos
lock
inc
cmc
movsb
mov
jecxz
nop
lcall
or
in
lea
dec
push
adc
lea
js
jno
jecxz
sarl
xchg
mov
cmpsl
jg
cmp
pop
push
mov
xlat
push
xorb
scas
pop
rcr
jbe
loopew
into
cmpsb
dec
mov
pslld
cmc
push
nop
or
sub
cmp
xor
dec
inc
aaa
lds
lret
cmp
xchg
dec
push
xchg
dec
push
ja
or
pop
div
popf
outsl
aam
jne
dec
cld
aad
fadds
jae
mov
adc
imul
sahf
fdivrs
sub
fmuls
xchg
popf
cli
lcall
or
fstpt
pop
cmc
aas
mull
jecxz
push
or
sub
clc
fisttps
les
mov
push
sub
ds
test
pop
lcall
inc
cmc
adc
lods
sub
inc
filds
push
xlat
movsb
cmpsl
flds
fildll
xchg
mov
mov
sbb
pushf
addl
or
mov
push
xchg
push
adc
jg
push
adc
dec
std
push
lahf
add
dec
jg
cmp
push
aad
mov
add
btc
mov
push
fs
sbb
mov
xchg
pop
das
into
adc
sti
or
test
ret
fisubrl
pop
repnz
mov
xlat
jecxz
subl
incb
in
arpl
cld
sub
pop
dec
sbb
int3
das
mov
movsl
fwait
cmp
lret
sahf
push
jmp
insl
aaa
xor
pusha
je
jg
fstl
int
leave
scas
mov
and
adc
jl
jle,pt
call
mov
jg
dec
and
imul
shlb
pop
adc
mov
ss
and
dec
push
lock
rorb
cmp
mov
or
int
dec
out
lret
repnz
inc
sub
push
dec
jo
lods
and
sub
sub
scas
add
sar
incb
pop
into
bound
out
fs
test
lcall
repz
leavew
push
and
xchg
jns
xchg
jge
ja
stos
sarl
daa
js
mov
mov
jb
push
in
jnp
xchg
jge
mov
cmp
scas
test
sub
adc
adc
gs
xor
mov
adc
sub
icebp
or
inc
mov
repnz
pop
mov
mov
xchg
xchg
leave
cmp
push
inc
push
subb
cmp
add
pop
sub
or
ret
dec
aaa
js
dec
sub
movsl
sub
test
dec
std
in
call
out
out
or
jne
leave
jmp
dec
fcompl
insb
lods
xchg
std
adcl
mov
inc
movsl
or
dec
sub
push
or
sbb
leave
movsb
lock
or
int
sub
inc
cmp
adc
stc
mov
lcall
push
hlt
adcl
notb
or
fisubrs
inc
mov
loop
xor
ret
scas
push
mov
imul
mov
or
add
cli
xor
imulb
sbb
lods
push
push
roll
push
cld
adc
push
popf
mov
mov
dec
cmp
push
push
hlt
pop
pop
test
jmp
jle
ret
ror
add
push
mov
test
test
add
inc
outsl
cmpb
fidivrl
pop
add
mov
mov
aad
test
sbb
fdivl
out
lds
negl
mov
push
leave
sbb
cmpsb
jp
mov
push
push
mov
arpl
int3
dec
fcoml
pop
add
xchg
jge
fwait
mov
iret
push
rcrl
push
xchg
adc
cmp
ss
addb
or
into
push
es
loope
mov
movsl
ret
and
push
mov
ds
in
jns
xchg
cli
fiadds
hlt
sarl
xchg
mov
lret
mov
pop
jmp
inc
inc
test
mov
mov
test
and
scas
pop
ja
cmp
pop
sub
cwtl
mov
flds
add
push
bndstx
pusha
xchg
push
hlt
push
xlat
pop
jecxz
lret
jbe
clc
fs
movsb
loope
test
fdivp
pop
jbe
add
or
mov
push
imul
dec
and
push
movl
add
loopne
xchg
orb
dec
push
mov
jo
mov
movsl
push
mov
cmp
mov
push
ss
inc
dec
dec
mov
mov
aad
pop
fwait
dec
repz
fwait
dec
cld
xchg
int3
arpl
mov
adcl
or
std
inc
lea
lock
cmp
bound
fimull
adc
adc
test
push
xchg
lods
jle
orl
mov
sahf
mov
xor
stos
mov
pop
push
and
je
fistpll
mov
inc
sbb
sbb
test
loop
pop
test
or
rorl
adc
mov
jb
pop
lret
int
imul
fdivl
lods
test
and
pop
mov
insl
adc
cmpsl
leave
mov
jge
cmp
and
sbb
mov
dec
sub
mov
mov
pop
or
js
sarb
jne
dec
popa
mov
add
sub
jg
gs
leave
pop
hlt
sti
and
out
pop
stc
mov
test
xor
mov
ret
fists
mov
xchg
adc
dec
jge
test
push
dec
push
xchg
push
xchg
data16
sub
out
mov
lea
push
lock
add
push
lret
adc
mov
and
jo
mov
dec
adc
or
lods
jg
bound
xor
dec
mov
ss
ret
mov
lods
ljmp
xchg
loope
lret
insl
xor
push
stc
outsl
jle
lcall
orb
int3
mov
mov
sbb
mov
rcrl
jl
in
in
jg
adc
fadds
sub
xchg
ret
sub
shrb
pop
clc
inc
pushf
out
fidivs
or
pop
cmc
addr16
ret
cmp
sbb
push
adc
pushf
mov
sbb
ljmp
pop
in
leave
mov
jle
loope
add
push
inc
mov
ljmp
ja
pop
pop
cltd
mov
xlat
and
add
test
ret
pop
shlb
mov
push
push
add
dec
xor
dec
cmpsl
dec
dec
fimull
imul
int
andl
cmp
mov
dec
notb
jg
popa
sub
add
scas
push
and
sub
cwtl
and
add
push
lock
mov
ret
push
mov
add
adc
into
lock
in
iret
stos
iret
cmp
inc
pop
ror
gs
cmp
loope
out
sub
push
enter
mov
cmp
addl
mov
bound
mov
push
aad
pop
pop
insb
mov
movsl
sbb
mov
and
mov
daa
inc
mov
mov
pop
dec
inc
mov
mov
sti
cwtl
pop
lods
addl
cwtl
mov
cli
int3
xor
shll
test
ds
adc
and
push
mov
sbb
cmpsl
mov
dec
fstpl
jmp
jae
or
arpl
jbe
repz
lahf
repnz
ficoml
sbb
xchg
xchg
jge
push
mov
insb
adcl
ret
dec
fistl
pop
test
jbe
jecxz
xchg
cmp
jo
or
test
sbb
xchg
fadds
add
mov
das
cmpsb
inc
cmp
scas
enter
jno
mov
mov
pusha
pop
mov
sti
sbb
daa
cmp
shll
xorb
mov
int3
stos
cmpsl
fsubs
pop
ljmp
sub
sub
repz
push
scas
ror
scas
adc
mov
xor
inc
push
sbb
fsubp
mov
rorl
or
xchg
inc
adc
in
sbb
in
popl
jg
sbb
in
pop
mov
jg
lock
cs
cmp
fcoml
addr16
xchg
int
lcall
nop
push
lds
repnz
pusha
push
jne
jo
fnstcw
lods
icebp
aaa
mov
mov
insl
lahf
test
dec
mov
jmp
add
test
add
mov
sub
inc
xor
xchg
int3
sub
andl
xchg
sarb
xchg
cmc
mov
inc
inc
aaa
out
mov
aam
cltd
imul
lret
cmp
inc
xor
imul
mov
and
mov
nop
dec
and
push
add
push
push
pop
fdivr
inc
loopne
lcall
lret
xor
cmpl
pop
cmp
mov
lret
xchg
sub
das
pop
sub
aad
sub
mov
lea
xchg
fsts
hlt
test
sbb
inc
lahf
jae
adc
lret
data16
jmp
mov
sub
add
add
sbb
bound
pop
jge
les
out
ret
lret
repnz
push
xchg
outsb
addr16
scas
xchg
in
shll
mov
cmpl
mov
adc
dec
fiadds
sti
push
and
xor
ss
divl
jmp
sub
xchg
cmp
sub
pop
cld
xor
enter
xlat
aas
mov
jp
cwtl
sti
and
pop
in
xchg
pop
test
mov
lret
jmp
add
lea
daa
add
ljmp
call
jg
loop
jno
inc
lock
out
mov
mov
pop
fimull
and
ljmp
mov
xchg
jle
pop
lea
es
inc
pop
addr16
cli
dec
loopne
xchg
stc
mov
and
repnz
push
int
lods
mov
loope
arpl
fldcw
lods
jae
cmp
fcomip
faddp
mov
les
and
jmp
sub
adc
fwait
lods
pop
mov
mov
dec
pop
daa
adc
je
shrl
mov
lds
adc
xlat
nop
fs
out
pop
sti
push
nop
pusha
mov
inc
aaa
sub
leave
bound
sbb
outsl
popf
outsl
mov
aad
pop
mov
inc
addr16
dec
mov
mov
sbb
popa
rolb
sub
lahf
mov
push
sub
stos
dec
test
outsl
sub
sar
adc
das
mov
out
dec
int3
and
adc
daa
xchg
cwtl
scas
push
push
jg
out
push
xor
pop
ja
xor
stc
in
testl
xchg
notb
mov
cwtl
mov
push
jne
rcll
push
mov
mov
das
xchg
rcll
mov
movsl
adcl
jmp
dec
clc
push
dec
or
in
insb
adc
movsb
xchg
cmp
dec
movsl
or
in
xlat
sub
bound
adc
cmp
dec
sti
sbb
xchg
out
mov
movsl
jnp
call
pop
movsb
and
push
ret
fsubl
xchg
dec
cmpsb
add
jecxz
lahf
and
mov
add
stos
dec
and
std
and
shrl
push
lahf
mov
add
and
push
rolb
cmpsb
fwait
jo
and
inc
lods
repnz
pop
jno
shlb
daa
push
pop
dec
push
shll
mov
or
outsb
sub
sub
xor
or
jmp
mov
xor
or
sahf
enter
xchg
jno
mov
inc
aam
push
adc
inc
ja
sbb
adc
xchg
shrd
aam
in
les
pusha
mov
add
adc
je
cmp
fists
pop
sub
jns
loopne
lret
sub
std
data16
mov
mov
int3
sub
jmp
dec
dec
not
inc
aaa
lock
fstps
cmp
loope
out
jl
ja
jmp
adc
mov
pushf
or
add
andl
sti
dec
int
xlat
cmpsb
pop
mov
xchg
push
sub
lds
mov
fdivl
mov
int3
push
loope
jg
lods
mov
mov
push
cmc
ds
test
add
iret
pop
out
adcl
dec
lret
cmc
fidivrs
jne
lahf
dec
lcall
xor
aad
rsqrtps
pop
jecxz
mov
fsts
mov
ljmp
push
in
jg
inc
addr16
adc
fcmovb
jae
rcrb
add
jp
aas
movsl
xor
xchg
cltd
sub
sub
mov
rep
inc
stos
lahf
lods
mov
jns
push
fisubs
stos
or
jp
adc
scas
das
xor
sbb
xchg
movaps
mov
xor
int3
repnz
xor
sbb
inc
test
push
xchg
outsb
leave
outsb
imul
in
sub
xchg
scas
lahf
sbb
mov
sbb
out
lock
push
mov
or
mov
sbb
mov
add
mov
outsb
cmc
insb
inc
fwait
ljmp
push
mov
mov
daa
jge
in
ds
loopne
xchg
stc
in
repnz
int
dec
mov
xchg
pop
mov
and
je
lcall
arpl
fstl
popf
je
lea
or
cld
popf
sub
inc
call
ret
out
fldcw
mov
cmp
iret
and
sti
inc
cld
pusha
adc
inc
jbe
lret
adc
sbb
mov
xchg
add
std
jg
out
cmp
lret
push
lret
insl
and
ss
inc
clc
jmp
fnsave
and
rcll
adc
push
pushf
adc
lock
xor
lahf
out
gs
fdivl
mov
mov
mov
dec
pop
movsb
inc
ljmp
jle
testb
mov
push
loopne
lods
cli
imul
ret
fisttps
adc
cmpsb
test
xor
pop
xor
popa
dec
or
lods
ja
mov
sub
mov
mov
sbb
outsb
mov
mov
push
or
or
rcrb
add
xor
daa
aaa
lea
aas
mov
dec
ret
fcompl
cmp
dec
lret
jl
add
push
arpl
jecxz
xchg
aaa
hlt
jae
mov
xorl
jge,pt
inc
sbb
inc
orb
sub
sti
mov
bnd
jns
mov
aad
or
out
inc
cmc
inc
mov
mov
mov
jno
ficomps
jns
lcall
sub
xor
pop
push
cwtl
inc
mov
xchg
ret
mov
int3
jnp
sbb
rclw
scas
pop
idivb
and
push
pop
cmpsl
rol
pop
mov
out
shr
cld
jp
fwait
jl
mov
lret
jmp
cld
mov
mov
sub
dec
mov
int
jnp
ret
and
push
mov
mov
fisttpl
mov
pop
cmp
jnp
jmp
pop
je
mov
pop
es
cmpsl
xor
xchg
bound
or
xor
or
sub
and
inc
popf
pop
decb
rorb
shlb
popf
test
pop
pop
addl
test
pop
sbb
cli
jg
movsb
es
xorl
cmp
push
sbb
and
fscale
ljmp
xchg
out
cmpb
sahf
dec
inc
test
je
cltd
jl
push
jge
imul
xchg
xchg
cmp
and
dec
jno
out
repnz
pop
fcompl
in
bound
aaa
cs
mov
mov
and
nop
movsl
xor
iret
testb
push
add
mov
in
js
lods
adc
cmpsb
adc
aad
add
notb
std
popf
and
mov
test
in
push
mov
xor
sub
jno
jle
lods
add
stc
fcomps
shlb
adc
addr16
pop
xchg
xor
stos
popf
incb
je
pcmpgtb
nop
jmp
xor
jae
xchg
iret
inc
push
inc
rcr
cmp
dec
ja
cmp
ret
leave
jge
scas
inc
push
sub
stos
fstps
jle
sbb
sbb
push
jp
inc
jmp
inc
enter
pop
push
shll
pop
movsl
iret
out
stc
enter
shl
ja
inc
and
jo
sarb
cwtl
mov
xchg
lret
adc
bound
mov
fbstp
lcall
mov
cmp
mov
or
jp
ds
sub
add
xor
insl
mov
fcomps
dec
adc
dec
xor
ds
push
mov
fs
and
mov
lahf
lcall
int
push
daa
cmpsl
hlt
jg
sub
mov
es
test
jg
or
pop
push
or
cltd
dec
in
cmp
into
or
cmpsl
cmp
cs
and
rclb
pop
push
cltd
aas
pop
or
lock
jecxz
lret
jo
test
pop
pop
jns
add
divl
dec
inc
aad
pop
pushf
push
push
jg
jle
roll
pushl
push
in
scas
jae
jecxz
jmp
out
cli
movsl
gs
jb
clc
mov
xchg
jbe
mov
notl
xchg
mov
enter
nop
mov
in
dec
outsb
dec
jp
mov
out
cmp
jns
xchg
mov
and
add
jge
flds
cmp
xchg
lods
cli
xor
pop
and
enter
outsl
add
mov
bound
in
lock
add
mov
push
movsl
and
dec
js
test
loop
xchg
jnp
sbb
jns
xor
adc
loop
jp
push
xlat
lret
aad
add
loop
add
incb
mov
in
xlat
hlt
inc
push
jno
ficoml
add
jmp
mov
sub
cmpsl
adc
cs
testb
test
outsl
cltd
and
pop
shll
adc
hlt
sahf
and
mov
ret
mov
mov
mov
jns
pop
mov
in
inc
stos
mov
cmp
cmp
mov
add
pop
sbb
inc
lods
testl
dec
shlb
and
cmp
push
ret
dec
lock
shll
lahf
imul
icebp
lds
cmovs
pop
inc
call
inc
push
pop
inc
jg
mov
stc
fnstsw
subl
mov
push
dec
or
or
std
jo
xor
mov
insb
xlat
lds
faddp
push
sbb
xor
cmp
daa
sbb
jecxz
or
adc
mov
xor
ljmp
mov
add
das
xchg
ficomps
jp
pop
push
mov
mov
mov
call
into
sub
cltd
hlt
pushf
loop
movsb
pop
aaa
cld
lods
mov
add
adc
jne
out
sbb
add
sub
dec
dec
outsb
pop
dec
and
jb
out
xchg
hlt
lret
mov
mov
dec
inc
xchg
sub
add
addb
inc
dec
in
and
icebp
jae
icebp
sahf
fwait
mov
ret
xchg
bound
cmp
xchg
enter
cmp
xor
push
mov
das
fisttpl
jo
inc
or
loope
subl
xlat
jae
jne
add
call
fstpl
in
sub
loopne
add
dec
pop
arpl
ret
out
mov
jg
mov
xchg
xor
lea
scas
lcall
cld
into
das
pop
fisubs
adc
loop
in
lods
mov
addr16
adc
sbb
mov
dec
add
lcall
inc
mov
push
push
push
adc
pop
or
mov
sbbb
dec
ficoml
imul
add
push
setae
mov
ret
dec
aad
inc
imull
cmp
in
pop
push
loopne
cs
ljmp
add
mov
popa
out
add
loope
xor
sbbb
mov
mov
pop
adc
sbb
movsl
xchg
pop
jl
push
push
xchg
mov
sahf
add
pop
lea
push
pop
sti
mov
add
inc
jecxz
sti
sub
dec
mov
imul
sahf
xor
hlt
jmp
cmpsb
adc
pushf
or
jmp
mov
mov
test
sub
dec
cmp
lret
cld
addb
or
xlat
fwait
mov
cltd
push
cmpb
push
sub
nop
inc
and
out
repnz
lahf
jg
sbb
out
mov
mov
inc
pop
inc
or
cmpsl
addr16
cmp
mov
cli
inc
mov
aas
and
mov
pop
imul
int
mov
xor
add
movsb
fnsave
add
xor
push
mov
mov
dec
in
add
add
shlb
mov
cmp
je
in
shlb
shr
test
cld
or
loopne
cs
inc
sbb
cmpsl
jp
pop
sub
sbb
xor
out
push
aaa
sbb
and
push
sub
sbb
and
add
sub
xor
dec
imul
sub
pop
shrl
xchg
lret
cwtl
popf
sub
xchg
mov
scas
jge
popa
scas
gs
mov
mov
or
dec
aaa
dec
jp
in
mov
push
loopne
adc
test
xchg
xor
dec
icebp
shlb
sbb
fsubrs
iret
mov
add
and
outsb
data16
int
leave
std
cmpsl
mov
jbe
and
sub
shl
jp
xchg
fstpt
scas
lret
nop
ja
repz
xlat
mov
in
iret
in
fldt
subb
dec
cwtl
divl
aas
int3
stc
out
je
push
mov
inc
imul
bound
rolb
mov
repnz
pop
mov
push
in
mov
pop
popf
sahf
cmp
dec
and
lcall
in
lock
xor
call
aad
scas
add
lods
mov
out
sbb
sub
adc
and
and
out
outsl
fnstcw
in
sub
rorl
adc
and
pop
jge
dec
insl
je
into
and
inc
aad
mov
ret
add
dec
cmp
repnz
xchg
fistps
mov
mov
jb
dec
cs
mov
in
or
xchg
push
adc
sub
mov
xchg
cs
mov
js
cmc
dec
cli
int3
jbe
testb
enter
lods
into
mov
cmp
daa
cmpsb
and
test
jmp
movsl
imul
mov
xor
push
ret
adc
scas
adc
sbb
insb
inc
test
je
sbb
data16
xor
mov
push
aad
push
adc
jecxz
js
jge
mov
je
hlt
cmpsb
cmpsb
push
jmp
mov
mov
push
es
inc
mov
iret
push
imul
inc
into
push
or
repz
sbb
push
push
inc
ljmp
std
repz
cmp
mov
int
lds
pop
scas
xchg
add
xchg
in
cmp
test
fistpl
ret
stos
cmp
rclb
add
in
out
pop
mov
cmpsl
stc
jns
lcall
rorb
dec
sub
pop
lods
in
cmp
rol
sub
and
pop
pop
fmuls
xor
mov
dec
adc
dec
cwtl
jb
fs
ja
loop
add
lret
jae
fwait
mov
pop
jne
cs
and
sub
stos
das
sti
adc
pop
ljmp
xor
subb
cmpl
push
data16
popa
mov
add
incl
int
jbe
mov
ss
sarl
push
mov
shl
out
orb
clc
inc
movsb
or
data16
mov
pop
cmpsb
cmc
clc
jns
jbe
pop
pop
ljmp
ret
push
cld
fldl
out
pop
xchg
int
sbb
sti
cmp
cmpb
lods
dec
mov
push
cmp
jo
pop
insl
cld
aas
lahf
sbb
ja
popl
mov
pop
fwait
cmp
popa
and
jae
mov
loop
or
cmp
ja
cmp
bound
fwait
lds
xor
imul
dec
test
lods
mov
repz
mov
stc
les
cmp
xchg
push
pop
and
or
xchg
sbb
sti
shll
sub
mov
push
arpl
les
dec
loopne
icebp
repnz
movaps
push
lods
fwait
mov
sub
dec
mov
iret
sti
or
sub
xor
cmpsl
sub
and
popa
cli
data16
or
mov
lret
mov
mov
test
or
cmp
mov
cmp
jecxz
jb
inc
dec
or
jnp
aad
cmpsb
fwait
add
jg
pop
mov
add
shrl
lcall
sti
in
dec
pop
arpl
inc
lods
or
movsl
cltd
pop
pop
sub
and
add
xor
push
mov
push
mov
sub
pushf
orl
adc
addr16
arpl
into
das
jg
sti
sub
mov
dec
or
clc
loop
xor
jno
adc
cmp
mov
push
jae
push
add
jge
js
jns
je
pop
mov
filds
mov
and
test
jecxz
and
test
movsl
mov
cli
dec
in
aam
sbb
dec
cli
mov
out
dec
pop
fwait
push
data16
stos
mov
jb
and
out
out
outsl
and
pop
ljmp
sbb
jno
idivl
xchg
lret
shlb
cmp
outsl
movsb
pop
push
out
fisttpll
test
rolb
and
test
out
cld
xorl
mov
add
nop
hlt
cltd
and
cld
sub
xchg
stos
push
push
iret
mov
daa
xor
inc
das
push
mov
dec
cmp
or
add
sub
jbe
cmp
jne
movsb
scas
je
outsl
addr16
out
jno
int3
mov
fwait
and
cmp
inc
ficoml
mov
outsl
test
jnp
mov
out
xor
mov
nop
movsb
cmpsb
loop
aaa
insb
cltd
fmul
loopne
xchg
out
les
loope
cmp
inc
mov
jbe
mov
adc
xor
mov
mov
cltd
fisttpl
in
clc
mov
and
test
aaa
mov
test
and
pop
dec
jae
outsl
stos
inc
popa
aaa
xchg
in
cmp
xor
jnp
adc
sub
jo
mov
loop
bound
fmull
jbe
xchg
push
mov
dec
mov
bound
outsl
int3
push
push
inc
repz
cmp
cmpsl
sbb
jmp
mov
dec
push
pop
jbe
movsb
mov
iret
scas
add
adc
js
loopne
pop
mov
pushf
push
mov
iret
add
lock
hlt
hlt
int
imul
sub
cli
arpl
pop
in
pusha
sahf
inc
hlt
test
ret
adc
jmp
cmp
rcrl
mov
push
je
mov
jmp
cmp
inc
mov
dec
aaa
mov
pop
hlt
mov
out
mov
cmpsl
cmpb
bound
stos
adc
dec
lret
sar
lret
popf
or
inc
xor
and
mov
aaa
lcall
lds
xor
hlt
stos
lds
sahf
fs
rorl
mov
outsl
push
mov
rcll
ficomps
push
mov
mov
cwtl
sbb
into
popf
ret
sub
shrb
ljmp
es
out
enter
jmp
xchg
imul
push
mov
test
inc
xor
movsb
fstps
in
inc
je
and
adc
lret
sub
icebp
sbb
lods
xchg
mov
xor
fidivrl
inc
jge
or
fsubp
shll
aam
ficompl
dec
adc
aam
adc
rcrl
or
lret
shrl
sti
mov
pop
jmp
pop
mov
out
lcall
xchg
cmp
xor
movsl
pop
add
mov
repz
cld
xor
mov
and
sub
into
repz
mov
imulb
insl
pop
sbb
fldcw
js
aam
scas
repz
ljmp
dec
dec
cmpsl
mov
lret
repz
add
repz
mov
add
mov
sbb
pop
xchg
loope
and
ret
cld
dec
mov
lock
or
rol
loopne
pop
inc
mov
xchg
push
stos
jns
pop
push
inc
test
addr16
sbb
xchg
sub
mov
jae
pusha
and
and
das
fwait
or
scas
jle
mov
add
sbb
xor
test
sbb
push
xor
cmp
hlt
arpl
inc
mov
adc
xor
sbb
int3
test
cs
lcall
and
push
movsb
filds
mov
cld
lahf
in
mov
cmp
sbb
add
jge
xor
lcall
dec
mov
mov
jmp
enter
xchg
inc
and
les
ret
sahf
xchg
inc
fsubrl
adc
mov
mov
xchg
clc
sbb
push
sub
cmp
lret
stos
cld
hlt
mov
hlt
xchg
jo
sarl
jg
std
fistps
pop
jae
daa
sub
rcrl
sub
push
xor
mov
mov
jg
mov
js
adc
cmp
cmp
jecxz
sbb
int3
pop
xchg
std
add
xor
cmpl
cmpsl
ss
lock
mov
ret
pusha
push
sub
xchg
jno
xlat
or
or
jb
cmp
fwait
xchg
xchg
mov
inc
add
cltd
mov
push
or
cmp
fldenv
xchg
scas
xor
test
fwait
les
fsubrl
cwtl
out
mov
dec
pop
repnz
lret
je
mov
lock
loopne
notl
mov
push
iret
or
pushw
movsl
fstps
mov
dec
mov
xchg
jb
pop
cli
cmp
xchg
mov
pop
pop
in
add
leave
push
gs
or
mov
es
dec
mov
fwait
pushf
enter
mov
enter
jno
fidivrs
mov
jnp
xor
xchg
mov
pop
inc
ss
hlt
arpl
in
inc
cmpxchg
push
cli
xchg
push
jl,pt
xchg
les
call
push
pop
imul
enter
mov
push
pop
test
dec
dec
test
inc
mov
mov
lahf
mov
and
movsb
mov
xlat
push
xchg
mov
fcoml
xchg
repz
jle
inc
nop
xor
int3
and
or
and
fdivrs
out
shlb
out
mov
add
insl
sbb
and
nop
inc
gs
mov
gs
pop
fstps
jns
jge
mov
dec
jnp
xor
rcr
in
fmul
push
jge
rcl
in
add
loopne
push
fcoml
cmp
movsl
data16
adc
push
cmpsb
mov
aas
cmpsb
loopne
sbb
int3
push
adc
scas
imul
ss
cli
test
sub
push
mul
addb
dec
loopne
outsb
pop
mov
in
jo
mov
jle
cmp
out
or
divl
into
sbb
or
test
xor
mov
mov
je
arpl
nop
inc
and
insl
nop
addr16
sub
xor
movsb
sub
nop
insb
hlt
pop
ficoml
push
lret
outsb
sub
add
dec
push
sub
popa
fldl
jmp
test
fadds
push
out
fprem1
lock
ret
adc
daa
inc
in
rorl
test
insl
mov
inc
pop
popf
adc
test
in
xorl
lods
mov
mov
fldl
movsb
jle
rcll
and
movsb
stos
jl
int3
mov
mov
and
push
cmpsl
xchg
pop
loop
in
imul
or
mov
push
xor
into
sbb
stos
adc
push
cmp
int
adc
cmp
cmp
andnps
data16
pop
std
push
push
cmpb
insb
jns
rcrb
mov
and
out
adc
arpl
add
xor
lret
popf
fwait
inc
pusha
pusha
dec
mov
gs
ret
mov
dec
lret
cli
out
mov
pusha
pop
bnd
push
fs
clc
cld
fcmove
cmc
test
enter
mov
pop
add
sahf
es
movsl
fcompl
and
xor
cmp
loop
jbe
jb
ffreep
fwait
stc
das
add
js
jae
lret
add
dec
xchg
sahf
add
cmp
and
lock
mov
lods
and
inc
nop
or
jne
jecxz
push
xchg
lock
cmp
dec
popf
pop
rorb
sub
adc
sub
gs
daa
mov
lea
repz
pop
sbb
jb
pop
dec
aaa
aas
cli
or
sub
arpl
jg
xchg
jo
imul
gs
insl
sub
xchg
or
fstpl
iret
testl
sbb
movsb
insl
repnz
data16
ret
daa
pop
mov
sbb
adc
pop
push
sub
mov
int
pop
sbb
jb
les
ljmp
and
popf
dec
scas
pushf
call
jnp
pop
jmp
sbb
into
imul
mov
mov
shlb
adc
fistpl
lahf
add
cmp
xor
sbb
dec
pop
bound
int
add
outsl
xchg
repz
lahf
jb
pop
daa
sti
dec
push
mov
stos
mov
pop
rcll
mov
cmp
jmp
and
cmc
outsl
repz
stos
dec
dec
inc
adc
cmp
iret
add
jns
lret
cld
jnp
xor
xor
mov
fidivl
arpl
and
push
fbstp
js
push
inc
xchg
fidivs
test
enter
cwtl
popf
mov
push
in
sbb
jge
or
inc
push
mov
jb
data16
popf
pop
aad
xchg
rcpps
repz
fwait
mov
adc
and
cmp
int3
pop
loopne
fimull
xchg
lret
fiadds
cli
loop
and
rcrl
sbb
lret
mov
ds
sbb
jge
lds
es
sbb
lahf
xchg
inc
sub
cmpb
imul
fcompl
mov
mov
xchg
repz
jae
or
adc
sbb
add
dec
mov
xor
loop
test
lahf
push
sub
mov
in
popa
into
and
hlt
pop
rcll
mov
or
fcomi
jae
nop
dec
aaa
jo
orl
nop
lea
push
std
fucomip
data16
ja
stc
pusha
cld
idiv
jb
mov
jns
jo
push
or
cwtl
scas
incl
call
stos
aas
lahf
xor
pop
addb
mov
jp
push
roll
push
dec
mov
pop
cmp
pusha
mov
push
shrb
inc
cmpsb
and
data16
jmp
mov
jg
jecxz
xchg
into
jl
bound
jle
inc
pushf
add
pop
and
div
jle
daa
jnp
subb
out
xchg
pop
mov
and
sti
loope
test
call
xchg
add
test
psadbw
ds
mov
dec
mov
sar
lea
mov
pop
test
cmp
pop
mov
movsb
push
and
pop
pop
or
mov
je
sub
cld
shll
shlb
xor
and
lea
and
popf
add
sbb
fcmovbe
cli
lods
nop
outsl
hlt
inc
pusha
add
leave
inc
cmpsl
pop
popf
inc
cli
pop
int3
dec
adc
out
fimuls
jb
lcall
adc
pop
sbb
and
jae
lcall
fldl
pop
je
call
xchg
jle
leave
mov
mov
cmpsl
setae
and
cld
mov
xchg
cmp
sbb
xor
jno
and
test
add
dec
adc
mov
add
test
mov
out
daa
repz
dec
test
jmp
andps
fs
mov
jno
adcb
sbb
adc
mov
push
or
pop
rcrb
shlb
push
mov
push
sti
add
bound
mov
jno
in
sbb
push
dec
lock
add
pop
mov
fwait
push
jmp
cmp
repz
scas
mov
dec
inc
int
xchg
mov
pop
sbb
push
lods
scas
mov
or
divl
ja
dec
adc
xor
and
ja
into
addb
dec
dec
lods
push
mov
mov
shrl
shl
sbb
clc
std
sbb
push
sbb
mov
pop
cmp
int
pushl
ds
mov
pop
mov
pusha
lods
pop
pop
xchg
jnp
cltd
ds
loop
andl
dec
jbe
push
add
fwait
loopne
push
stc
xor
adc
or
popf
cld
mov
add
jle
mov
lods
hlt
sub
lcall
dec
lods
repz
scas
loope
add
and
push
mov
cli
sbb
dec
mov
add
test
popf
call
scas
xor
jne
xor
sbb
lret
lock
jb
sub
lret
cmp
rcr
push
pop
sti
pop
cli
popf
data16
insl
scas
ret
cmp
pop
lcall
ljmp
sarb
scas
pop
and
icebp
push
sub
mov
in
fidivl
les
call
sub
sbb
jle
outsb
je
or
or
push
push
sbb
jns
inc
jmp
mov
loope
inc
sarl
inc
aad
pop
into
sbb
or
mov
outsl
rolb
adc
aad
ds
fildll
or
or
inc
sbb
xchg
cmp
std
cwtl
mov
clc
ficoml
fs
ljmp
push
daa
adc
xor
movsb
movsb
push
std
cmpsb
inc
and
pop
cmpsl
xor
mov
aas
sahf
mov
int3
lods
out
into
sbb
movl
pop
repnz
lock
aam
jge
int3
mov
sbb
addl
inc
mov
les
pop
bnd
shrl
xlat
mov
pop
ret
mov
and
in
pop
jnp
insl
jb
lahf
aam
dec
int3
out
sbb
sar
push
pop
mov
mov
mov
mov
loopne
adc
push
mov
push
cmp
jmp
cltd
jmp
hlt
fisttpl
mov
std
scas
xchg
scas
push
sbb
lahf
cltd
jno
testl
addr16
pop
into
mov
mov
pop
mov
mov
xchg
dec
arpl
mov
fmull
cmpsb
outsl
movsb
dec
das
movsl
xchg
fldenv
pop
and
fs
mov
or
inc
pop
xchg
xchg
add
ljmp
add
pop
mov
ret
iret
or
dec
mov
mov
jmp
push
jns
movsl
mov
cltd
push
lret
dec
pop
das
jno,pt
jo
out
in
fsub
cmc
pop
add
pop
movsb
add
xchg
addb
xchg
mov
or
mov
xor
push
sar
dec
adc
in
mov
xchg
mov
mov
ljmp
jp
pop
mov
adc
jecxz
mov
xchg
mov
je
mov
aas
dec
jbe
int3
cmp
leave
aaa
shl
sub
fidivs
jl
into
rolb
int3
jnp
test
int3
adc
stos
and
or
cmpsl
sub
and
cmp
sub
dec
lcall
les
dec
out
jae
movsb
add
pop
xchg
stc
repz
lds
call
fcmovu
scas
inc
push
fistps
popfw
sbb
pushf
jg
sahf
push
arpl
xchg
shrl
nop
rclb
or
stos
xchg
lret
addl
xor
cwtl
add
scas
dec
mov
and
pop
adc
dec
push
and
dec
mov
push
inc
sbb
lods
test
push
cmpsb
xchg
bound
xchg
test
mov
repnz
xchg
ret
inc
pop
jle
lahf
fnstcw
xlat
jne
sbb
mov
pop
paddsw
lret
movl
lock
stos
xor
in
sub
decl
repnz
sbb
enter
mov
rcll
ss
pop
push
shlb
push
xor
push
out
mov
ss
fs
cmp
les
mov
sbb
pusha
jbe
inc
test
cbtw
push
mov
loop
inc
lret
lret
inc
inc
or
sbb
jecxz
sbb
cs
imul
int
out
sbb
lret
out
mov
cmc
out
sbb
lds
leave
xor
add
jae
xor
loope
and
mov
add
insb
jne
fmuls
sbb
add
dec
add
lret
outsb
les
jmp
or
bound
sbb
lods
cmpsb
dec
outsl
mov
clc
ljmp
xchg
jp
cs
pop
and
int
jbe
in
sbbb
lahf
inc
das
mov
pop
mov
sbb
rolb
faddl
sbb
notl
in
mov
ficomps
add
pushf
or
mov
lea
xchg
pop
loope
js
mov
ret
rcll
outsb
cmp
outsl
mov
sbb
test
fstp
cwtl
pop
cmp
push
mov
filds
cmp
enter
and
in
rorl
aas
and
int
enter
sub
sub
mov
lret
gs
cmpl
arpl
repz
daa
jle
push
xchg
stos
out
jb
jbe
data16
fiaddl
sbb
das
imul
push
stos
push
data16
lret
in
jb
pusha
fsubs
call
imul
xchg
push
scas
shlb
xor
fnstenv
or
movsb
negb
in
testl
lret
test
rcr
sbb
outsb
ss
call
pop
xchg
stos
cltd
push
inc
sbb
or
mov
int3
fisttps
mov
inc
or
popw
jae
lret
cmp
inc
sarl
mov
test
and
sub
addr16
cmp
xchg
xor
jno
fisubrl
mov
fiaddl
mov
out
jg
dec
push
outsb
inc
sahf
push
mov
mov
mov
xchg
aaa
repnz
test
data16
lahf
sbb
pusha
cwtl
mov
leave
or
xor
loop
push
pop
mov
mov
sbb
lahf
jge
jo
sbb
outsb
and
cmpsl
out
inc
pop
sbb
mov
stos
and
mov
icebp
jne
ret
mov
pop
sub
mov
pop
xorb
in
fidivs
iret
dec
cs
imul
jns
leave
mov
iret
rcrb
rcrb
fwait
in
lcall
and
movsb
leave
fcmovne
or
int3
es
push
push
cmpl
add
rclb
mov
xchg
btc
mov
and
jg
xchg
push
pop
jno
in
cltd
mov
mov
jns,pt
pop
add
stos
popa
and
dec
sub
aam
cli
jmp
cmp
inc
outsb
pop
mov
xchg
movsb
rorb
jl
out
inc
movsl
xor
adc
fs
mov
bound
jb
addr16
ljmp
fsts
mov
adc
movsl
movl
or
scas
mov
jne
or
cmc
out
subl
mov
scas
add
call
cmp
and
sahf
scas
repz
sbb
jmp
nop
jge
cmp
fldl
ja
push
gs
push
outsb
mov
mov
mov
out
or
pop
xor
mov
add
push
fs
push
scas
dec
stc
pop
sub
fwait
pop
fcoms
cwtl
xchg
lea
in
stc
fiaddl
lcall
arpl
das
not
mov
pusha
jle
mov
push
lock
cs
ja
nop
cltd
xor
aaa
add
mov
and
adc
push
push
mov
shll
leave
mov
stos
xor
xor
mov
mov
stos
pop
cmc
psrlw
daa
mov
xor
movsl
rcrb
cmp
pushf
ds
data16
push
xchg
imul
mov
loopne,pt
dec
xchg
inc
and
fisubrl
jno
daa
sub
sub
sbb
shl
js
pop
cmp
dec
aaa
inc
add
imulb
dec
lcall
add
jecxz
cmpsl
jle
out
dec
in
push
fcmovnb
adc
sub
lahf
sbb
xchg
pop
sbb
adc
push
pop
push
cmp
lock
adcl
cld
adc
jge
int
insl
in
sub
adc
sub
xlat
movb
sub
mov
fistpll
inc
mov
jp
aaa
cmpsl
xchg
int
mull
leave
jl
pop
jp
mov
scas
sub
cs
cmp
pop
loope
daa
mov
iret
or
dec
dec
imul
ficoml
mov
aaa
cmpsb
and
push
pop
or
bnd
jno
xorb
ret
xor
pusha
or
outsb
cmp
add
sahf
shl
lret
jmp
inc
stos
jle
sahf
or
mov
outsl
and
jmp
xchg
adc
cmpsb
das
enter
xchg
popf
dec
and
pop
fs
hlt
es
jnp
sbbb
push
std
sub
psubusw
xchg
mov
cmc
sub
inc
jb
repnz
jbe
ljmp
adc
xor
inc
xor
jo
andb
movsl
sahf
int
lods
add
push
das
push
enter
push
and
mov
sbb
jne
iret
dec
in
dec
mov
xchg
xor
pop
movsb
xor
pop
or
mov
sub
and
jbe
es
sbb
loope
or
push
in
aad
xor
xorb
sbb
cmp
jmp
out
and
scas
imul
adc
mov
aas
jnp
jnp
push
push
dec
out
and
pushf
aaa
decl
dec
mov
clc
inc
scas
test
and
mov
fidivs
fstpl
and
push
pop
xchg
cmc
pop
lea
lods
sub
pop
jecxz
sub
sarl
ja
jno
push
pop
out
adc
pop
or
pop
fdiv
adc
mov
arpl
lcall
addr16
scas
sbb
pop
sub
popa
mov
dec
out
in
shlb
int3
movsb
movsl
and
sub
or
andl
mov
int3
enter
and
jno
pop
mov
push
sub
loopne
out
adc
cbtw
les
mov
ds
es
push
mov
cmpsb
inc
cmpsl
repnz
and
jae
sahf
testl
clc
aad
inc
jp
inc
xor
aad
dec
rorl
sbb
jp
aaa
int3
sti
cli
jle
cs
faddl
loop
pop
bnd
sbb
dec
sub
sub
in
call
push
pop
sbb
test
clc
in
frstor
cwtl
or
pop
loopne
xor
cmc
and
mov
mov
insl
lcall
mov
sub
fdivl
daa
in
add
dec
add
imul
xor
jmp
cltd
sbb
pop
mov
add
test
dec
enter
arpl
push
into
outsl
sti
sbb
adc
pop
imul
js
sub
popa
jp
or
sbb
push
sbb
les
mov
dec
sbb
adcl
jbe
shl
inc
int
sub
outsl
xchg
xchg
inc
enter
or
aas
cmp
adc
mov
xorl
sub
jno
sub
sub
pop
jns
scas
adc
shrl
fisttps
cmp
mov
inc
jb
fisubrl
sbb
dec
out
es
pop
je
ret
das
push
divl
mov
bound
lahf
insl
cmp
mov
lahf
mov
fadds
or
in
test
mov
add
lods
stos
mov
jno
mov
repnz
mov
fimull
mov
addr16
aaa
jae
mov
lds
mov
push
xchg
std
fdivl
jno
dec
and
pop
inc
pop
sbb
dec
cmp
loope
test
jno,pt
dec
stc
jo
in
andb
inc
and
scas
jb
sbb
jns
sub
call
aam
mov
mov
mov
sbb
push
sbb
push
aaa
dec
mov
xor
xor
scas
adc
mov
fucomip
shlb
jp
inc
mov
ljmp
orl
out
lret
in
and
add
int3
daa
cmp
xchg
out
jb
jle
ja
lcall
cmp
xor
mov
dec
mov
mov
xchg
or
sbb
jl
sar
pop
sub
xchg
pop
and
mov
pop
cmp
pop
jno
add
int
pop
fldcw
xor
into
or
out
adc
mov
inc
xor
loope
andb
adc
repnz
mov
stc
add
fnstcw
mov
and
push
mov
jb
int
cwtl
aad
xchg
lcall
inc
or
mov
pop
sarl
mov
xchg
stos
ljmp
xchg
mov
xchg
inc
cwtl
mov
and
xchg
movsl
jnp
mov
adc
ljmp
adc
mov
xor
pop
pushf
mov
add
cmpsb
mov
je
xor
sbb
bound
jecxz
jbe
pop
call
jg
adc
out
daa
push
pop
das
sbb
insl
pushf
dec
push
and
cmp
mov
jbe
popf
cmp
xchg
or
dec
adc
xchg
das
fwait
lods
dec
cmp
add
hlt
xchg
out
in
fdivs
lods
aas
and
push
roll
or
push
test
clc
adc
shlb
in
aad
cmpl
dec
leave
sbb
mov
decb
call
fwait
mov
mov
rclb
mov
fistpl
xor
lock
sub
fisttpl
pop
fsub
sbb
mov
xorb
push
aam
filds
mov
nopl
adcb
sbb
jo
xchg
mov
or
ss
ds
arpl
push
cmp
xor
pop
or
in
bound
xchg
dec
dec
adcl
sub
call
xor
dec
cli
xchg
lock
insb
adc
jns
out
pop
xchg
call
decb
inc
dec
lock
ret
adc
mov
add
movsl
dec
push
mov
rorb
mov
imul
mov
jo
pusha
rcl
xlat
ret
bnd
add
iret
mov
ret
out
dec
mov
insl
nop
pop
rorb
or
stc
sub
mov
sub
push
push
inc
pop
add
out
mov
mov
mov
cmp
push
sub
push
pusha
test
pop
and
into
js
daa
and
daa
mov
mov
lcall
lods
mov
push
xchg
mov
or
out
push
test
ret
adc
mov
jmp
ret
mov
lock
add
and
sub
mov
pop
jg
mov
shlb
dec
pop
lcall
in
das
test
jns
ret
in
jmp
aaa
sbb
dec
pop
mov
push
dec
and
dec
pop
repz
inc
mov
sbb
addr16
popf
mov
xchg
ss
xor
es
fbld
sahf
je
icebp
out
jne
jle
add
popf
pop
idivb
sub
sahf
mov
adc
lea
std
cmp
inc
lods
pusha
xor
scas
mov
dec
icebp
xchg
addl
xchg
or
subb
into
adc
and
add
xor
xorb
or
fcmovbe
or
lret
enter
jmp
push
cmp
cmpsb
xor
jae
test
movhps
xchg
or
jnp
mov
into
arpl
sbb
jmp
cmpl
pop
cld
fcoms
lock
insb
lcall
dec
add
adcb
and
pop
shll
cli
xchg
pop
mov
test
out
add
add
mov
mov
outsb
push
aam
out
xchg
mov
int3
and
fisttpl
fs
movsb
mov
scas
push
daa
push
mov
xor
mov
cmp
jb
sbb
das
or
jae
mov
roll
scas
lret
lods
aad
pop
ja
dec
sub
test
xchg
add
mov
orb
or
xchg
or
lods
ja
insb
nop
jo
jbe
mov
xchg
loop
sahf
in
mov
addr16
push
pop
cltd
push
xchg
mov
addb
inc
pushf
out
call
ds
stos
adc
das
jne
movsl
leave
insb
call
incb
or
dec
lahf
test
dec
dec
out
je
pusha
loop
lret
fwait
lret
xchg
lock
jbe
push
stos
jns
repz
inc
or
cmp
ja
sub
les
lods
addr16
mov
addb
cmp
hlt
and
cmc
mov
cli
in
xchg
gs
mov
mov
push
or
gs
push
dec
stos
icebp
scas
cmp
loope
in
stos
imul
or
clc
std
and
xor
out
popa
mov
xchg
test
scas
nop
jmp
push
xor
pop
xlat
cmp
adc
test
cmp
cltd
and
fldl
scas
push
xchg
int3
stc
nop
and
sbb
inc
sub
sub
jae
sbb
mov
loope
dec
and
mov
fimull
aad
lahf
mov
mov
repz
push
std
mov
mov
cwtl
lcall
push
scas
jge
mov
lods
push
adc
lds
fists
in
jecxz
jecxz
sbb
scas
xchg
cwtl
rorl
inc
mov
fldenv
inc
adc
imul
inc
test
jo
data16
pop
xchg
clc
cs
sub
xlat
add
jno
inc
pop
inc
jbe
pop
add
arpl
arpl
mov
mov
scas
sahf
pop
ljmp
cli
lea
mov
pop
dec
rcll
popf
push
jo
imul
stos
loop
sti
in
jae
loopne
out
gs
inc
outsb
and
dec
sbb
xlat
xor
sub
mov
cmp
stc
sub
scas
xchg
add
cmp
pop
int3
pushl
mov
adc
or
int3
popf
xor
adc
or
pusha
arpl
cli
nop
inc
lret
jl
xor
dec
pop
dec
xor
cwtl
mov
jle
incl
and
lahf
xchg
scas
fcom
orb
jmp
push
hlt
shlb
pop
je
out
lahf
xchg
jnp
xchg
repnz
mov
lods
push
and
insl
adc
lret
add
ljmp
dec
mov
mov
pop
mov
xlat
mov
dec
icebp
cwtl
add
cmp
add
and
push
shll
add
insl
jb
gs
getsec
arpl
aaa
fs
dec
jp
enter
mov
jns
mov
insl
dec
test
bound
cmpl
cld
imul
cmpsb
ds
pop
shrb
xchg
dec
lods
push
sbb
jl
aam
leave
loope
cld
mov
mov
std
inc
lock
sbb
dec
pop
push
cmp
dec
ja
jae
inc
inc
ret
bnd
insb
push
fnstcw
mov
sbb
pop
jno
mov
push
or
fsubp
and
xor
sbb
aad
rclb
xchg
lea
mulb
adc
nop
faddl
ret
adc
imulb
lea
icebp
cmp
pop
and
out
jmp
pushf
scas
lds
jnp
stc
fcoms
push
stc
pusha
inc
xchg
cmp
decb
mull
jle
mov
addb
jo
insl
ljmp
dec
ja
add
dec
mov
std
mov
dec
fsubl
mov
addr16
popa
pushf
pop
cmc
mov
pop
iret
enter
mov
daa
push
mov
je
pop
inc
movhps
das
ror
add
add
mov
aam
aas
xor
icebp
and
das
stos
fwait
mov
jne
pop
mov
test
add
lea
call
lods
mov
into
je
or
mov
inc
and
add
pop
dec
cwtl
mov
push
push
test
inc
and
add
mov
push
cltd
ljmp
push
jbe
or
int3
lret
ss
sub
dec
cltd
stc
aas
adc
cwtl
pushf
sub
int
imul
out
push
cmp
inc
and
sbb
dec
xchg
int
mov
mov
enter
mov
je
mov
sub
repz
adc
cmp
xor
pop
mov
in
loopne
pop
mov
jge
aas
test
mov
mov
lods
ss
lods
addps
orb
test
fistl
xor
stc
call
cwtl
mov
ficompl
or
icebp
adc
aaa
shl
sub
dec
cld
jg
dec
rcll
dec
ret
rcrl
mov
and
or
or
cmp
popf
jbe
fiadds
outsb
jnp
cmpl
push
inc
js
ss
dec
dec
dec
addl
test
sub
mov
or
lret
sub
adc
add
fsubs
popa
inc
out
bound
out
imul
lock
insb
jge
pop
lahf
cmc
add
out
jns
jg
mov
popa
testb
push
cmp
fmull
pop
arpl
ss
add
mov
mov
and
inc
dec
in
daa
std
sub
mov
sub
mov
shll
lcall
fsubp
inc
mov
inc
add
jb
aaa
gs
inc
pop
jl
imul
sub
xor
jbe
stos
jbe
xchg
shrl
add
insl
mov
imul
lret
movb
pop
and
imul
aas
xor
mov
jecxz
pop
mov
push
shl
push
pslld
mov
push
push
add
hlt
in
in
lahf
out
adc
xchg
dec
cmp
inc
cmc
add
std
stos
push
and
and
dec
cmp
xchg
stos
add
pop
sbb
push
lret
dec
mov
jbe
cmp
jne
mov
sbb
inc
movsb
test
jg
jmp
or
loop
add
fwait
mov
mov
mov
into
aaa
scas
inc
shrl
sbb
cmc
sbb
into
lcall
xlat
sbb
flds
sbb
jbe
rorl
push
adc
outsl
mulb
adc
into
mov
mov
jno
popa
sub
sub
les
aam
lea
lret
dec
jmp
arpl
dec
loope
and
xor
lea
test
and
and
pop
bound
adc
scas
xor
cwtl
icebp
adc
bound
fisubs
jb
push
and
imul
jmp
call
push
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
call
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
shlb
pop
dec
mov
repz
adc
cmpsb
jg
push
mov
mov
xor
cs
cmp
jb
mov
pop
movl
int3
mov
xchg
or
pop
mov
mov
adc
flds
loope
jne
fdivs
fcmovnu
pop
mov
fsubs
repz
xchg
cmpsl
inc
sub
js
rolb
pop
fnstcw
pop
mov
mov
adc
mov
push
insb
stc
push
hlt
movsb
fisttps
push
sub
inc
ret
inc
lea
fsubrl
nop
xor
push
pop
jmp
int
and
int3
mov
lcall
int3
sbb
aad
shll
shrb
pop
dec
mov
rorb
xlat
and
jo
pop
dec
sbbb
pop
push
int3
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pandn
ror
mov
lret
pop
push
and
fdivrl
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
dec
mov
cmp
pop
add
sbb
dec
aad
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
cmp
pop
lods
mov
lret
pop
shl
int3
mov
pushf
and
int3
mov
lret
sub
mov
lret
push
shll
mov
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
lret
pop
shll
ror
mov
in
aad
shll
clc
outsb
arpl
into
test
sub
cmp
inc
fprem
bound
lds
jg
das
adc
les
shr
push
aam
shll
jnp
add
mov
addr16
int3
leave
pcmpgtd
in
sbb
sub
xor
mov
sub
fucom
dec
ss
dec
cmp
gs
sti
push
repz
xor
xchg
cvtps2pi
mov
pop
push
pop
lock
or
cmpsl
outsl
loope
push
rcl
jns
jp
and
pop
mov
inc
popa
ss
stc
leave
and
dec
cmc
jno
stc
jmp
adc
lds
jmp
scas
cli
lcall
mov
roll
fimull
sbb
insl
shrb
mov
jo
mov
shl
gs
imul
xchg
adc
and
dec
jecxz
adc
mov
ljmp
das
cs
jg
pusha
aam
push
call
aad
rorb
sbb
inc
add
movsb
pop
out
enter
pop
cmp
sub
ret
jbe
sub
dec
cs
push
add
std
xor
mov
dec
push
std
adc
fs
pop
inc
push
out
lods
push
aaa
fdivrl
mov
or
xor
lret
inc
push
xorl
call
xchg
push
mov
add
aam
lret
lock
mov
inc
adc
fwait
or
lret
and
hlt
jmp
cs
mov
movsl
sbb
mov
inc
ds
fdivl
mov
rorl
sbb
dec
push
or
rcrl
int
psubsb
jno
jae
rorl
jo
cmp
mov
shrl
xor
jle
pop
hlt
sbb
bound
daa
aam
xchg
add
inc
rcl
jnp
add
xor
sahf
add
pusha
push
push
fstps
scas
outsb
xchg
dec
pop
das
push
sar
or
insb
out
cmpsl
mov
push
arpl
sbb
inc
clc
loop
hlt
pop
inc
jge
enter
fdivrp
mov
ficomps
daa
fnsave
ret
xchg
ljmp
out
jge
jg
je
cmpsl
sub
arpl
shlb
jno
push
jbe
loop
lock
xor
push
divb
push
das
popa
sub
mov
xchg
xor
mov
andl
dec
push
xor
shl
andl
cwtl
adc
das
pop
lods
cmp
xchg
lret
xchg
pop
cmpb
xor
cmp
jmp
adc
movsl
test
scas
cmp
orl
fidivs
push
mov
mov
jbe
push
push
xchg
repnz
movsl
scas
push
push
push
in
adc
pop
and
lock
call
pop
rorb
cli
emms
les
mov
lods
test
jne
je
xchg
repz
sbb
xchg
push
ds
xchg
pop
push
mov
xor
jno
in
cltd
call
incb
lcall
lret
out
insl
mov
sti
jb
mov
push
jmp
mov
mov
mov
cli
push
dec
movsb
or
sahf
lds
pop
xlat
fimull
dec
cltd
jnp
lret
adc
imul
mov
lcall
and
inc
mov
or
stos
pop
xchg
xor
das
in
shl
xchg
xor
fnstenv
test
sti
add
clc
jb
outsb
mov
hlt
sbb
pop
mov
cmp
stos
sbb
push
cmp
rclb
cli
jae
push
pop
jns
aad
ss
push
cmc
aaa
cli
dec
inc
cmp
xchg
fwait
lahf
cmp
je
push
xchg
adc
xchg
jmp
mov
or
and
notb
or
outsl
inc
mov
jns
sbb
jnp
mov
pop
cli
adc
cmp
in
inc
pop
scas
ss
adc
gs
inc
jmp
mov
and
scas
mov
push
aam
ja
repnz
or
mov
push
jns
mov
pop
cmp
mov
jmp
inc
ret
push
cmpsb
xor
sub
int
and
push
mov
push
ja
sub
addb
fistps
push
ljmp
adc
pop
lret
das
inc
addr16
mov
ret
cmp
int3
cwtl
fsubr
lret
out
jns
bound
lock
add
stc
jns
inc
test
lods
xchg
sbb
fcomps
or
or
mov
add
adc
sub
or
std
sbbl
data16
cmp
dec
xor
sub
pop
cld
repz
rep
cmpsl
js
loop
lcall
jnp
mov
imul
stc
xchg
testl
shr
pop
into
inc
clc
mov
sbb
fnstenv
xchg
jb
pop
xchg
fmull
mov
dec
dec
ja
jge
scas
les
xchg
push
dec
in
xor
enter
insl
pushf
pop
and
pop
stc
loope
test
sub
cli
adc
push
mov
dec
jg
aad
adc
lret
sub
stos
mov
pushf
jecxz
shlb
lcall
stc
ljmp
cmpsb
add
mov
test
out
sub
xor
jnp
ss
es
fwait
dec
pop
out
sti
ficoml
daa
pop
mov
mov
pop
pop
cmp
mov
lds
ret
xor
inc
mov
mov
sub
cmp
mov
cltd
dec
and
js
push
shrl
fldl
push
add
mov
push
pusha
dec
pop
mov
das
stos
jns
popa
sbb
jecxz
test
mov
or
in
sbb
pop
pop
push
aaa
jge
xchg
jo
fildll
pop
shrl
xchg
cld
pop
mov
test
test
scas
xorb
mov
sbbb
rep
add
mov
sbb
int
pop
orb
repz
ret
mov
clc
dec
in
sahf
rcr
pushf
and
pop
fwait
inc
jno
imul
imul
dec
mov
cmp
jl
adc
add
fdivrp
jl
cwtl
push
mov
jecxz
push
push
jmp
sbb
jbe
xchg
dec
push
popa
aad
dec
pushf
mov
mov
mov
jmp
jge
inc
or
mov
xchg
daa
outsl
push
push
bnd
movl
jmp
jecxz
mov
jmp
add
and
mov
sbb
ja
loope,pt
pop
pop
push
add
insb
fisttpl
mov
rorb
mov
repnz
adc
jmp
enter
scas
mov
adc
xchg
push
popf
cltd
xchg
jp
pop
fwait
sbb
push
pushf
stos
xchg
pop
popf
jno
xor
mov
adc
scas
scas
lods
jle
pop
js
fsubr
fdivl
xor
lods
mov
mov
mov
mov
mov
pop
sub
ret
lds
lea
push
stc
push
cmpsl
jmp
mov
xor
mov
lret
push
mov
rcrb
sub
mov
mov
mull
sbb
inc
push
adc
push
popf
mov
ret
test
stc
pop
sbb
clc
aas
jg
xchg
adc
lret
lods
add
movsb
xor
cli
cmp
jb
mov
inc
xor
adc
leave
push
sub
jb
mov
lahf
stos
shl
mov
xchg
insb
sub
inc
inc
and
sub
aad
mov
aaa
mov
mov
sbb
shl
sbb
mov
mov
jnp
push
jnp
jbe
int
ror
test
push
push
add
ret
sbb
xchg
push
mov
loop
dec
test
mov
push
dec
pop
out
sub
pusha
lea
pop
dec
mov
in
data16
push
cmc
xor
mov
add
fmuls
mov
and
add
cmp
sbb
stc
pop
cmpsl
dec
out
dec
loope
xlat
pushf
lret
mov
mov
int3
inc
jmp
test
and
dec
loope
es
popa
or
pushf
aad
mov
aas
test
mov
dec
test
fs
inc
loopne
adc
dec
insb
cmp
movl
jbe
add
js
repz
div
add
cs
add
dec
fisubrs
adc
fidivs
shrb
scas
ss
sub
mov
or
jl
lock
xchg
xor
pop
insl
xchg
xor
mov
into
int3
push
icebp
sbb
jmp
mov
pop
inc
jnp
movsb
pop
scas
orl
mov
jnp
scas
cmpsl
sbb
cmp
push
add
pop
push
pop
bound
inc
inc
lods
inc
xlat
or
add
jns
daa
lahf
ljmp
xor
pop
push
add
mov
push
mov
jmp
lock
inc
sbb
lahf
xor
pop
repz
out
mov
cwtl
hlt
test
or
jae
int
loope
pop
gs
cmp
mov
pop
inc
sub
mov
sbb
inc
xchg
mov
pop
stos
jl
jno
jle
dec
fs
mov
pop
lcall
pop
aad
out
call
sbb
dec
out
cwtl
jno
scas
inc
popf
int
orb
pop
or
and
sbb
or
lds
xchg
ds
std
jp
aaa
jl
mov
daa
sub
ss
rcll
outsl
js
push
fmul
push
shl
mov
in
cmp
cs
nop
inc
mov
push
pop
or
aaa
pop
shlb
mov
ljmp
xor
aam
std
nop
pop
pop
imul
add
sub
cmp
lcall
push
mov
mov
aad
shrl
rcrl
ss
into
pop
jne
loopne
aaa
cmp
hlt
pop
shrb
jmp
stos
and
sub
cmpl
adc
insl
je
and
cld
lock
and
xchg
mov
xchg
mov
lret
aaa
xchg
icebp
sub
mov
dec
jge
das
fidivl
inc
ret
out
pop
xor
and
mov
cmp
enter
mov
pop
add
add
aas
fdivs
or
add
daa
mov
mov
xchg
cwtl
xor
cmp
xchg
jb
das
mov
mov
leave
add
clc
and
adc
sub
leave
clc
xor
addl
test
mov
jecxz
push
jmp
adc
hlt
dec
bound
xchg
es
or
cmp
xchg
aad
dec
pushf
pop
lods
dec
mov
icebp
fists
arpl
sbb
jne
pop
jecxz
push
sbb
mov
push
jle
push
fbstp
mov
sti
cltd
shll
enter
nop
jl
addr16
push
bound
mov
notl
in
jge
dec
stos
shll
push
rcrb
or
pop
imul
push
add
test
cmp
aam
cld
or
sbb
mov
cli
pop
sbb
and
jns
lcall
xchg
xor
lea
xchg
mov
dec
cmpsb
push
testl
fsubp
fdivl
jns
fisttps
jno
or
mov
inc
cmpsl
xchg
jecxz
pop
stos
lds
das
cli
lods
movb
push
add
popl
popa
or
in
sarb
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
