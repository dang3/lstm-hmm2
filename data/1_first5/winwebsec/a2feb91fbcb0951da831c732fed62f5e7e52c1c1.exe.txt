sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
push
push
call
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
movl
mov
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
mov
push
call
cmp
pop
push
pop
sub
ljmp
push
scas
rcpps
dec
rolb
lret
xchg
aam
notl
adc
stc
in
xor
movsl
mov
aam
test
int3
icebp
xor
xor
jns
hlt
add
jecxz
cmp
sbb
cli
xchg
adc
jb
xchg
aaa
sub
shrl
mov
imul
stos
dec
pop
sbb
xchg
xor
nop
jbe
mov
test
pop
rcrb
mov
shll
xchg
popa
in
pop
add
and
popf
gs
cmp
fsub
testb
outsb
fadd
scas
cmp
iret
jmp
orb
std
cmp
pop
test
mov
popa
push
aas
aad
std
les
icebp
add
cltd
gs
jp
lcall
mov
push
mov
pop
sahf
mov
movsl
xor
ret
xchg
cmp
mov
fcoms
mov
test
pop
sbb
stc
mov
sbb
mov
repnz
xor
sbb
xor
push
sub
imul
lret
jae
push
jnp
add
dec
xor
lds
cld
inc
or
ret
mov
aam
sbb
push
stos
outsb
movsb
fmull
mov
cmpsl
nop
jae
orl
jecxz
jbe
mov
fdivs
pop
testb
jmp
mov
ss
jg
add
push
cmp
popa
mov
dec
lcall
pop
fistpll
sub
jo
lret
pop
fs
hlt
lret
cmp
dec
sub
xchg
pusha
sar
clc
push
xchg
negl
inc
sub
xlat
lods
inc
in
jmp
cmp
add
push
and
mov
cmp
scas
fs
rorl
stos
ja
out
mov
lcall
mov
inc
push
stos
sub
and
inc
test
test
jle
addr16
data16
push
stos
sarl
mov
in
xor
pushf
icebp
sbb
test
loop
mov
push
push
sub
dec
push
mov
mov
or
push
or
aam
dec
mov
fistpl
imul
int
inc
mov
call
pop
fidivs
cld
pop
shlb
jnp
fbstp
stos
xor
out
sub
mov
push
mov
aas
pop
pop
call
adc
aaa
push
in
mov
and
push
shrb
loopne
pop
cwtl
xchg
lea
ljmp
cltd
out
int
sub
loopne
fidivs
cmp
loop
cmpsl
pushf
sar
aam
je
rcl
jl
pop
jbe
add
je
adc
mov
icebp
sbb
jae
hlt
xchg
push
popa
cltd
into
mov
xchg
imul
inc
dec
adc
lcall
adc
movsl
xchg
dec
jbe
sahf
movsb
inc
sar
pop
push
out
into
nop
mov
sub
mov
jecxz
or
adc
and
int3
in
push
and
mov
mov
cmp
sbb
fwait
mov
pop
int3
rep
test
xlat
sub
cltd
push
test
scas
movsb
mov
push
mov
jnp
pusha
push
bound
nop
in
addr16
js
lock
cmp
inc
stos
add
outsl
pop
iret
push
jmp
lret
push
cwtl
inc
fisubrl
fstl
vsqrtsd
cld
inc
outsb
outsb
xlat
sbb
dec
aam
jge
sbb
stos
pop
pop
stos
scas
sbb
inc
or
loop
push
push
jbe
scas
mov
or
insb
in
aas
arpl
and
add
test
ja
xor
fsubs
mov
pop
sbbb
pop
je
jge
orb
pushf
jecxz
rorb
clc
jo
mov
pop
addr16
aaa
push
cmp
xor
les
cli
ljmp
cmp
sbb
pop
xchg
and
xor
xchg
adc
mov
sub
rcll
aas
pushf
xchg
cmp
pop
lods
mov
sbb
dec
cmpsb
xchg
fsubl
or
lret
jg
scas
fcoms
pop
enter
add
inc
jg
pop
push
mov
negl
jne
in
mov
inc
add
imul
or
ret
fcomps
pop
stos
lret
xchg
push
ja
dec
iret
push
scas
subb
xor
cmpsl
dec
sahf
icebp
xchg
es
adc
pop
les
and
add
pushf
sub
xor
jmp
aaa
int
ret
cmp
test
rcl
aam
mov
pop
imul
xchg
pop
add
jmp
jg
xchg
mov
xor
clc
in
fistps
or
sti
inc
lret
pop
add
push
dec
call
push
faddl
xor
sti
insl
and
jl
mov
jb
xchg
pop
xchg
add
sti
test
sub
outsb
jmp
test
sub
dec
dec
enter
jnp
cmp
or
fdivl
rclb
inc
mov
and
cmp
popl
cmpsl
jbe
fcompl
dec
daa
arpl
jne
mov
out
cmpb
push
rorl
dec
jp
in
mov
imul
fimull
push
sti
push
fcmovbe
inc
push
fstps
loopne
cmp
pop
sub
ret
inc
sbb
cs
cmc
rorb
outsl
in
es
xor
mov
icebp
mov
push
xor
ja
testb
outsl
xor
sub
jb
outsb
push
stc
xor
mov
lea
mov
sbbb
jmp
sar
push
std
push
xor
jp
out
xchg
imul
in
push
mov
xor
cmp
and
pop
outsb
movsl
idivb
or
mov
mov
cli
jp
xor
xchg
mov
mov
ljmp
xchg
pop
cmp
jnp
sbb
fs
fwait
shll
mov
popa
cmp
cmp
add
iret
sar
and
sub
xchg
insw
data16
loop
cmp
mov
daa
dec
cmp
or
jnp
mov
cmpsb
pop
xchg
mov
ds
out
add
pop
gs
scas
add
pop
add
scas
lcall
pop
xor
dec
out
sahf
mov
mov
cmp
test
xchg
dec
push
cmp
lahf
sub
push
cmp
xchg
pop
ret
dec
jge
int3
pop
adc
iret
jle
scas
jne
test
ret
imul
repnz
pop
mov
cwtl
in
cmp
lods
aam
frstor
or
bound
pop
and
fwait
cmpl
call
xchg
outsl
pop
push
xchg
mov
outsb
arpl
scas
mov
cmp
insl
gs
adc
dec
pop
xchg
sbb
push
cmp
sbb
mov
push
insl
push
int
jns
das
iret
out
test
xorl
pop
loopne
inc
dec
jbe
subb
pop
jp
lret
adc
fstp
aas
jae
movsb
shr
push
jp
cmp
jmp
mov
shlb
loopne
jne
pushf
mov
xor
out
popf
sub
lahf
mov
cwtl
test
adc
mov
cmp
adc
test
mov
xchg
pop
xchg
xchg
xor
sub
sub
mov
addr16
push
shr
mov
inc
repz
testb
aad
inc
fcmovb
test
xchg
cmc
outsl
push
pop
cmp
pop
test
pop
mov
inc
jp
int3
pop
ret
insl
ret
pop
pop
jne
fisubl
push
scas
inc
lea
out
addl
cmp
cmp
xchg
dec
ret
mov
xlat
mov
push
jecxz
ret
and
or
outsb
dec
pop
or
xchg
adc
js
jb
icebp
scas
pop
aad
test
loope
jecxz
jl
in
repnz
jo
adc
mov
or
popa
sarb
dec
mov
xchg
mov
push
adc
fwait
xchg
popf
cmp
jnp
sbb
lret
sbb
enter
pop
push
cmpsl
sub
int
stos
mov
xor
ret
scas
sub
fwait
and
test
rcrb
call
insl
jl
daa
cmpsb
mov
popa
jno
pop
ret
mov
fldt
ficoml
jg
push
int3
repz
xchg
popa
clc
mov
popf
ds
jg
add
aad
mov
sarb
imul
mov
xchg
mov
sub
aaa
and
jmp
mov
std
pop
movsb
mov
or
add
test
outsl
bound
or
push
pop
pop
test
xchg
xchg
clc
mov
xor
in
ret
call
nop
jb
mov
int
xor
mov
cmp
cmpsb
imul
fidivrs
sub
idivl
jb
mov
xchg
add
mov
fwait
push
mov
jecxz
lret
daa
dec
aas
in
push
lds
aaa
mov
adc
imull
xor
xchg
mov
iret
arpl
xor
rcll
push
pushl
int3
adc
dec
lahf
inc
xor
jp
mov
mov
jge
mov
jmp
mov
lds
testb
in
in
mov
push
dec
add
jbe
mov
ja
test
rorl
cmp
movsl
adc
sbb
paddd
repnz
adc
dec
pop
popl
jb
jecxz
mov
shlb
inc
pop
or
rcr
arpl
jbe
sub
loope
cmp
loope
out
mov
sub
ficoms
icebp
add
or
and
jp
jge
test
cmc
enter
ret
imul
in
hlt
and
dec
inc
incl
inc
push
sub
data16
dec
jnp
inc
int
sbb
lret
loop
or
xchg
icebp
hlt
test
sub
cmpsb
mov
popf
push
mov
test
int3
mov
sub
and
cltd
jnp
int3
add
sub
sub
or
pop
inc
lock
dec
sbb
outsb
add
add
add
push
test
hlt
inc
inc
inc
out
pop
call
fwait
bound
add
in
push
xor
sub
fmull
mov
jle
add
pushf
push
mov
sarl
into
adc
aaa
popf
in
fsubrs
sub
mov
sti
int3
rorb
fmull
outsl
es
push
dec
push
inc
cmpsb
mov
mov
sub
cmp
arpl
jbe
negb
mov
out
ja
cld
pop
add
jle
mov
test
call
outsl
mov
xor
add
in
mov
mov
mov
sbb
xor
and
mov
je
mov
neg
jae
and
fstl
js
xor
lods
or
and
jg
jnp
js
sbb
mov
repz
pusha
in
pop
inc
mov
mov
daa
and
ret
mov
mov
dec
push
dec
ljmp
cmp
aam
jl
outsb
xor
in
inc
cmp
inc
inc
scas
jb
jmp
sbb
pop
sarb
popf
xor
dec
and
stos
stos
mov
ja
insl
lods
pop
jns
ficoms
std
pop
icebp
or
sub
sar
cs
nop
cmc
pop
mov
aad
sub
sub
mov
xor
and
test
sub
iret
xor
ljmp
icebp
movsb
cs
or
daa
cmp
push
mov
lahf
pop
cli
loope
cmp
xchg
and
push
mov
inc
xchg
push
inc
bound
cmc
test
call
sahf
xor
mov
stos
xchg
pop
adc
insb
sbb
fwait
push
push
movsb
outsb
jne
jbe
test
shl
popa
out
pop
push
sbb
jbe
mov
test
xor
into
xlat
stos
push
adc
sbb
cmp
adc
mov
jg
or
inc
in
cmpsl
popf
pusha
mov
iret
dec
dec
ds
sbb
mov
stos
mov
sub
sub
jp
pop
sti
outsb
inc
sbb
push
lds
into
adc
cld
xchg
mov
je
addl
into
and
cmpsb
fnstenv
fs
sub
adc
and
insb
mov
daa
in
and
sub
lods
add
and
loop
lret
fwait
clc
cwtl
jg
stos
roll
xchg
aad
cmp
in
pusha
cmp
adc
call
sub
mov
or
pop
push
adc
push
sar
jp
gs
xor
xor
sbb
mov
push
or
ljmp
mov
xor
add
jl
xchg
jmp
push
sbb
mov
in
sahf
cltd
xor
mov
jge
add
inc
int
pop
in
mov
jno
fstpt
rcll
test
sbb
jne
mov
mov
sarl
mov
mov
dec
cltd
addr16
test
gs
and
sbb
outsb
add
mov
stos
popa
lock
dec
ja
stos
fwait
sub
popa
dec
jecxz
mov
or
lea
cli
out
fstl
icebp
or
stos
sbb
jp
ds
cmp
fs
dec
sbb
in
push
bound
xor
leave
jno
push
mov
adc
push
mov
scas
fsubs
xor
jo
mov
jmp
mov
mov
add
sbb
sbb
ja
popf
das
repnz
out
push
xlat
inc
adc
xchg
jb
mov
movsl
or
ret
mov
ja
das
inc
pop
sub
push
mov
clc
push
sbb
xlat
mov
das
repz
xor
dec
into
stos
lret
pop
popa
cmc
or
adc
mov
xor
outsl
andb
lret
lock
push
push
test
loop
imul
fsubrp
pop
pusha
lret
xlat
add
add
push
test
jecxz
bound
shrl
daa
fstpl
lret
adc
fs
adc
outsl
jno
mov
push
cmp
popf
xor
push
inc
cmp
dec
stos
addb
in
ret
jo
cli
enter
cmp
iret
cmpsl
andl
sti
jge
rcrl
sahf
shll
addr16
movsl
std
add
bound
cld
mov
cmpsb
fs
push
test
test
jg
sub
popa
or
pop
mov
jo
sub
shll
dec
rcll
push
notb
sbb
hlt
sbb
fidivl
ljmp
jle
push
or
pop
jge
inc
add
mov
lods
xchg
imul
repnz
scas
jae
cmp
inc
ret
imul
add
je
sub
pop
bound
dec
daa
daa
outsb
fbstp
mov
push
add
xchg
arpl
int3
inc
and
int3
into
notb
adc
scas
out
in
mov
leave
add
dec
mov
jo
xor
push
mov
adc
mov
cli
sub
xchg
in
push
outsb
mov
outsb
dec
arpl
es
mov
pop
in
in
js
std
push
push
push
lds
repz
insb
push
mov
sub
dec
movsb
jns
xchg
ds
sbbl
push
xlat
jns
xor
in
aas
repz
roll
test
sbb
jbe
test
push
xchg
in
dec
rcl
inc
sub
testb
xor
add
adc
mov
lahf
rorb
xchg
lahf
lret
inc
xchg
fstpt
sub
mov
test
push
loop
mov
mov
and
daa
aad
rorl
push
lds
jp
sarl
pop
adc
dec
negl
xor
mov
mov
lahf
mov
sub
adc
stos
push
mov
icebp
jno
lock
fwait
pop
inc
xchg
adc
iret
add
pop
add
jbe
pop
inc
imul
and
mov
inc
sub
icebp
pop
mov
aaa
js
xor
jns
lods
cltd
fdivrp
fld
js
ja
jmp
mov
sub
stc
lret
pop
mov
shl
sub
sub
or
cmpsb
dec
fbstp
arpl
jecxz
cmp
lods
ret
xorl
rcll
inc
in
cmpsb
clc
stc
pop
lds
push
decl
cmpsb
lret
mov
or
jne
mov
jmp
pusha
stos
pop
lods
fsubrl
pop
cmovo
setl
xchg
dec
test
sub
cmp
jmp
and
cmp
inc
lea
lret
mov
test
lea
cli
sbb
fmull
inc
aaa
cltd
pusha
pop
and
and
push
scas
xor
or
cmp
and
push
jle
inc
cli
je
xchg
sbbl
fstp
leave
sub
xor
inc
xor
mov
outsl
pop
clc
pop
iret
ss
pop
push
cmp
pop
sub
rdtsc
aaa
sahf
ret
xorl
sub
push
xchg
dec
add
lods
mov
xchg
pop
pop
ds
mov
xor
mov
jle
hlt
or
ficoms
inc
lods
mov
daa
add
or
dec
push
cmp
out
mov
cmp
ljmp
mov
adc
ss
push
mov
scas
outsl
jmp
lods
dec
xor
lcall
mov
pop
xchg
imulb
cmp
repz
inc
or
ret
mov
jmp
jnp
jnp
xor
nop
sbb
int
fisubs
mov
repz
dec
fistpll
add
pop
iret
mov
jg
mov
mov
xchg
jmp
fwait
add
cmp
ret
test
cmp
int3
push
cmpsl
and
add
jnp
jp
adc
mov
adc
xor
push
mov
sbb
mov
mov
or
pop
pop
jo
pop
stos
pop
loope
inc
jg
insb
jnp
int
and
fbld
push
push
pop
out
std
mov
inc
lds
imul
roll
adc
dec
xor
cmp
jl
jb
addr16
mov
mov
cmp
dec
sti
xor
adc
idivl
cli
cwtl
mul
cmpsb
outsb
enter
je
add
cmpsl
clc
cs
pop
imul
lods
dec
popa
sbb
or
sbb
push
inc
insl
mov
es
cmpsb
sahf
inc
dec
pop
push
pop
dec
testb
lcall
mov
sub
mov
loope
popf
sbb
jmp
aaa
cwtl
pop
cmpsl
or
and
cld
arpl
ficompl
add
or
jnp
xor
popa
loopne
mov
cwtl
adc
fs
mov
js
jo
out
cmpsl
out
out
xor
mov
dec
push
and
xor
adc
arpl
in
dec
inc
rclb
enter
adc
pusha
xchg
cmp
out
jne
jle
lcall
loop
pushf
push
sarl
out
mov
insb
add
js
sbb
cltd
mov
subl
fwait
pop
push
xor
and
cs
xchg
out
and
repz
mov
pusha
sbb
lret
mulb
or
test
movsl
scas
out
aaa
mov
add
fistpll
int3
push
xchg
mov
int3
xor
pop
xor
and
push
mov
fstpl
fucomi
enter
push
mov
clc
pusha
cwtl
dec
int
lods
mov
add
imul
fsts
adc
aas
arpl
les
inc
push
xor
jae
sbb
xor
divb
mov
push
cli
sub
inc
inc
jns
push
mov
mov
pusha
push
push
popf
lcall
sarb
sarb
dec
push
mov
or
mov
mov
jo
jo
xlat
push
mov
xor
jbe
xchg
repnz
sub
or
dec
pop
fidivrl
int
imul
cmp
sbb
outsb
outsl
mov
popf
xor
mov
jo
xor
clc
xchg
addl
add
fisubl
cmp
cs
jb
fisubrl
pop
mov
xor
int3
push
add
or
mov
sarl
cld
aam
inc
shlb
jmp
addb
mov
pop
ret
lret
pop
mov
icebp
incl
cltd
mov
notl
and
stos
push
hlt
pop
push
xchg
into
clc
clc
in
or
xchg
jmp
jnp
rol
jne
dec
cli
out
cmp
jmp
icebp
into
inc
xor
cmp
or
inc
cmp
mov
mov
repz
popf
sbb
push
mov
xor
pushf
inc
adc
xor
subb
mov
cmp
fdivrl
rcrb
cwtl
lcall
jnp
loopne
mov
xor
mov
cld
add
xchg
rorl
aam
cmp
sbb
ret
lahf
insl
bound
mov
push
fdivs
fs
sbb
inc
in
jecxz
loope
lods
pop
push
mov
push
or
enter
dec
movsb
je
sbb
cmp
xchg
inc
sub
rcrb
xchg
rdtsc
jno
xchg
and
xor
sub
mov
dec
and
and
mov
push
stc
insl
int3
sub
adc
insb
mov
lcall
dec
ret
mov
out
sar
ret
pop
jb
addr16
adc
pop
packuswb
insl
lret
hlt
mov
push
jnp
mov
push
loop
mov
mov
lcall
sbb
dec
add
fsubl
mov
dec
pusha
leave
cs
xor
movsl
jo
aaa
add
xor
dec
jns
push
push
and
sub
pusha
lock
xchg
jg
sarl
dec
sbb
jnp
sbb
cmp
jns
mov
jp
sbb
xchg
fabs
dec
dec
loopne
mov
xor
xor
adc
insb
sti
inc
nop
pop
jmp
lds
dec
lods
push
hlt
sub
lock
cmpsl
adc
mov
cmp
sub
imul
loopne
push
repnz
cmp
movsl
into
outsl
pop
adc
adc
mov
jge
add
fcomp
mulb
sti
xor
jl
lods
adc
fiadds
inc
cmpb
fidivl
testb
ret
and
popa
and
ja
cmpb
dec
jle
fadd
push
jge
lahf
cmp
sarb
test
cmp
popf
neg
std
fdiv
mov
aad
adc
pop
pop
nop
sub
sbb
pop
pop
adc
aam
push
int3
push
cli
jo
lds
jns
aad
jmp
shl
scas
cmp
xorl
int3
stos
xlat
jle
cli
jno
push
cmp
cmpsb
xchg
mov
sbb
fists
adc
mov
divb
lcall
lcall
xchg
jmp
adcl
adc
inc
push
mov
ljmp
lret
mov
mov
call
xchg
cs
or
pop
adcl
jl
outsb
sbb
jl
fwait
insb
incl
mov
add
xchg
mov
push
xor
push
pop
int3
dec
mov
ss
scas
push
arpl
inc
rolb
xchg
or
add
mov
and
lock
jle
dec
dec
stos
jp
cli
inc
daa
sub
stos
xchg
or
shlb
test
stc
rorl
cmp
je
fisttps
cmpsl
or
test
add
std
scas
movsl
and
les
jne
xchg
hlt
inc
ljmp
fcoms
push
andb
push
jle
xchg
or
push
imul
mov
mulb
addr16
dec
icebp
jecxz
ret
dec
inc
mov
inc
data16
frndint
mov
sbb
or
cmc
sub
fisubrl
stos
push
fmuls
mov
scas
lea
into
mov
imul
xchg
dec
or
je
add
mov
dec
loope
enter
jmp
ret
and
mov
std
push
xchg
cmp
loope
pusha
xor
fistl
or
xchg
loopne
rorl
jno
fdivrl
mov
xchg
lret
mov
adc
test
ret
cmp
push
dec
mov
sub
loopne
out
sub
jne
add
sahf
push
ljmp
ret
bound
mov
into
adc
sbb
imul
inc
cwtl
push
sub
repz
ficomps
call
out
mov
xchg
out
dec
push
in
push
outsb
pop
dec
cmpsl
sub
es
arpl
fadd
sub
insl
inc
movsb
xor
lret
push
int3
adc
cs
pop
mov
cwtl
sbb
mov
xor
jecxz
imul
adc
pusha
rorl
sbb
aas
das
mov
mov
mov
xchg
push
jecxz
enter
dec
adc
xchg
in
fwait
into
inc
mov
lods
pop
mov
jns
ss
inc
lret
js
fs
jp
cltd
adc
dec
and
mov
push
test
test
dec
jno
jbe
push
or
mov
insb
fsubs
stos
jmp
jne
lods
sti
pop
pushf
pop
inc
rcll
subb
xchg
sub
xchg
and
insb
cvtps2pi
add
lods
pmaddwd
dec
sub
fldln2
loop
mov
mov
imulb
xor
jmp
ja
daa
pop
ja
mov
cmpsl
hlt
jne
dec
orl
adc
xchg
push
shl
scas
jno
sbb
adc
mov
div
inc
in
mov
div
cmc
or
pop
out
test
sub
or
sbb
dec
mov
fcoms
loop
adc
roll
adc
sub
dec
xchg
add
adc
push
lods
lods
push
xchg
add
mov
stos
inc
jp
or
dec
cmp
sub
pop
data16
jl
lods
loope
xchg
jbe
ja
mov
jo
adc
and
cmp
sub
sbb
sbb
lret
repnz
xchg
jns
test
jge
popa
pop
or
sbb
pop
mov
cmp
das
jge
ss
jmp
mov
sub
lds
cmpsl
cmp
int3
repnz
in
mov
xchg
adc
inc
dec
or
aas
cmp
cmp
jge
rcrb
and
mov
pop
inc
add
clc
or
push
mov
ljmp
jo
xlat
xchg
push
data16
push
mov
mov
es
adc
js
notl
sub
and
addr16
fdivrs
jecxz
imul
pushf
pop
lahf
in
mov
imul
dec
cmp
inc
cmp
or
sbb
negb
or
call
dec
imul
std
je
or
in
arpl
mov
ja
and
sub
pop
lods
out
xor
mov
pop
xlat
out
insl
pop
fildll
das
mov
adc
cli
aaa
and
xor
lret
sbb
loope
or
push
mov
push
xchg
cmp
sahf
jns
mov
mov
dec
fstp
mov
clc
xchg
fisubs
add
mov
pop
xor
jge
mov
mov
pusha
shlb
adc
outsl
es
fsubl
ret
enter
ffreep
jnp
gs
test
jno
push
pop
out
push
into
dec
call
push
out
stos
enter
push
das
test
or
xor
ret
int
int3
pop
hlt
jb
ret
or
testl
and
or
dec
inc
out
pop
adc
shrd
bound
mov
pop
cs
lock
cld
aas
jmp
inc
loopne
pusha
jnp
push
popa
dec
rcrl
jbe
and
mov
push
xchg
aam
scas
data16
dec
aaa
sti
jl
pushf
xor
push
or
lods
dec
imul
mov
mov
lods
out
rcr
sbb
cmovo
test
or
js
repz
jl
les
pop
pop
xchg
push
or
addr16
cmp
mov
cmp
subb
mov
rorb
sbb
pop
fisttps
popf
inc
fidivs
int3
cmp
xlat
adc
cli
mov
or
xor
or
xlat
adcl
cltd
mov
pop
push
sbbl
mov
jle
pop
and
cmp
mov
dec
push
aad
xchg
pop
scas
pop
dec
mov
jbe
idivb
in
leave
movsb
insl
shlb
or
cmp
lret
xchg
out
cli
jbe
pusha
cli
dec
stos
movsb
xchg
inc
loope
jecxz
fidivrs
std
and
mov
fidivrs
sub
jge
pop
out
jge
sarb
xchg
fstps
xlat
pop
pushf
dec
out
rclb
xchg
push
push
lods
cmp
fadds
push
jge
cmc
push
ljmp
adc
push
rcll
hlt
mov
fmuls
mov
rcrb
jmp
mov
into
xor
out
or
xchg
adc
std
jne
test
rolb
add
cmp
pop
pop
pop
push
add
sbb
and
fdivr
cmp
nop
cmp
mov
jno
push
arpl
adc
or
ss
gs
cmp
ss
or
inc
jne
ja
cmp
jle
push
pop
pop
adc
pop
stc
mov
or
and
aaa
jmp
out
add
mov
mov
adc
mov
sub
neg
arpl
je
enter
stos
scas
sub
nop
mov
pusha
jmp
loopne
xchg
out
popf
jge
jge
stc
inc
jg
jne
xor
pop
dec
push
pop
mov
xchg
sbb
sbb
jmp
pop
out
shll
aas
lret
std
sbb
inc
ss
lods
outsb
stos
flds
xchg
jmp
cmp
jmp
and
sahf
mov
lret
gs
mov
push
ljmp
dec
adc
xchg
cmpsb
and
cwtl
fistps
shrl
jp
shll
shll
sbb
fmull
insl
pop
out
repnz
cltd
cltd
insb
andb
add
imul
clc
mov
pop
addr16
bound
cmp
xchg
out
loope
jg
push
and
mov
mov
mov
loopne
idivb
jge
insl
int
fdivrs
movsl
aam
jle
xor
lock
std
mov
and
xchg
jae
inc
xor
pushf
cmp
jle
mov
movsl
bound
scas
sub
sub
dec
mov
mov
ds
fdivs
xchg
out
mov
dec
cmc
loop
add
or
arpl
jbe
fcmovnbe
mov
out
pop
fimuls
clc
js
xchg
ror
sbb
or
mov
mov
loope
push
jmp
add
cwtl
sub
jg
jae
shl
cmpsw
mov
jns
cmp
je
data16
cld
lds
adc
lret
repnz
or
fdiv
add
mov
sbb
xor
lods
cli
xchg
inc
and
pop
inc
pop
sti
xor
enter
sbb
test
add
push
cwtl
sbbl
or
stc
fadds
push
sahf
aad
out
mov
and
mull
out
ret
in
jmp
into
mov
jno
outsl
int3
push
rcrb
loope
push
add
pop
dec
adc
fsubrl
pop
imul
prefetchw
daa
es
mov
push
lahf
xchg
enter
icebp
adc
stos
dec
jno
pushf
fidivl
push
and
lods
movsb
sti
jge
pop
pop
mov
or
cmp
ret
xor
mov
popa
adc
adc
adc
xor
into
mov
rcrb
mov
jg
mov
outsl
sbb
xchg
add
add
and
inc
test
jns
push
push
xor
das
push
xor
sbb
xchg
out
push
sub
pop
fisubl
shll
or
inc
mov
and
xchg
popf
xor
cs
xchg
or
ret
sti
pop
cmpsl
lret
mov
repz
inc
cli
mov
leave
sbb
mov
mov
sub
jns
xlat
pusha
xchg
movsl
cs
add
jecxz
daa
xchg
adc
addb
inc
push
inc
ret
xchg
xor
sub
adc
inc
gs
push
dec
mov
imul
add
xor
mov
sub
pop
fs
test
push
cmc
jae
shrl
scas
pop
xor
in
cmpsb
xchg
std
icebp
ret
movl
jl
and
sbb
stos
imul
push
shl
xchg
scas
sub
mov
inc
inc
popa
adc
sub
ds
inc
mov
outsb
insb
pusha
pushl
aaa
mov
and
xchg
xchg
mov
out
ljmp
addl
mov
aas
push
loope
pop
xorb
cmp
lret
or
enter
xor
push
inc
mov
push
outsl
push
ss
dec
mov
dec
movsb
sbb
add
mov
in
insl
dec
ficoms
jo
addb
fxch
push
popf
jmp
stc
aaa
or
pushf
call
mov
fdivs
cmc
cld
fldt
jno
pop
push
adc
jl
push
jbe
xor
jge
imul
jmp
jnp
nop
cmp
and
jbe
mov
pusha
inc
mov
sar
ficomps
cmpsl
outsb
add
scas
int3
movsl
lea
mov
cli
jnp
dec
pop
and
rcrb
sbb
fndisi(8087
mov
stos
push
push
sub
cmp
les
and
push
jae
roll
mov
mov
repnz
loopne
xor
cmp
jl
inc
dec
or
test
push
xorb
pusha
xor
adc
sub
mov
shrl
shr
stos
sub
pop
inc
lcall
jle
ret
sbb
insl
xor
roll
out
dec
mov
in
jg
push
and
out
mov
dec
aaa
jge
xchg
outsb
sti
jo
adc
aam
mov
jne
pop
pop
push
popf
mov
aaa
mov
mov
loope
divb
push
insl
dec
push
test
xchg
jns
mov
mov
mov
enter
jp
inc
sbb
scas
sub
or
or
lret
mov
xor
xor
mov
daa
and
orl
gs
xor
inc
inc
sub
sub
std
aaa
xchg
outsl
xchg
imul
sahf
popf
sub
orb
mov
cli
mov
inc
jbe
idivl
jne
push
and
add
pop
test
and
add
push
aaa
test
mov
add
pop
fldenv
push
out
mov
lret
mov
mov
cmpsb
test
pop
cmp
inc
addr16
out
ja
add
push
lcall
pop
aad
int3
pushf
and
cmpsl
pop
jmp
xchg
push
and
xchg
lods
jg
std
pop
cmpsl
or
jo
xor
lods
mov
loop
mov
cli
xor
scas
andl
cli
xchg
sbb
xor
xor
add
jmp
aaa
sbb
sub
test
dec
lahf
or
and
sti
lods
mov
mov
add
push
mulb
push
dec
cld
mov
xor
xchg
lret
pop
xchg
leave
loop
sbb
mov
xchg
das
movsl
jp
lret
dec
icebp
push
push
add
pop
dec
lds
sbb
xchg
enter
or
push
call
lret
jno
jno
push
int3
pop
nop
arpl
pop
pop
rorb
ret
imul
xor
movb
int3
pop
ja
leave
inc
xlat
jge
adc
dec
mov
push
jno
inc
ret
in
adc
mov
popf
icebp
xchg
popf
push
push
jno
jns
lcall
repz
mov
test
push
fadd
and
push
jb
es
push
daa
sbb
mov
xor
iret
push
data16
shr
rcl
and
int
pop
sti
shlb
negb
outsl
pop
or
inc
sbb
sub
leave
xchg
mov
cmpb
out
aas
cmp
divb
xor
jb
xchg
mov
dec
pop
loop
movsb
xchg
lods
push
push
leave
xor
dec
test
addr16
loop
sbb
aad
add
repz
out
lret
cli
insb
cmp
adc
pushl
nop
into
cmpl
and
mov
push
std
shr
arpl
mov
add
jle
mov
xchg
out
pop
test
mov
mov
imul
arpl
xchg
sbb
sbb
xor
push
ret
mov
mov
dec
xor
inc
pop
int
cmp
add
or
xor
lahf
mov
jle
jl
adc
cmp
mov
je
and
and
pushf
dec
and
rorb
out
xchg
xor
mov
xchg
out
fstpl
es
mov
jae
add
mov
pop
imul
mov
sbb
pop
ja
push
icebp
mov
jge
xor
in
outsb
ret
call
out
push
mov
ds
pop
nop
mov
out
test
pop
xchg
fldl
gs
cs
pop
push
inc
clc
ret
add
cmpsb
data16
pusha
lret
push
adc
fnstenv
fs
mov
sub
outsl
or
loope
dec
push
jecxz
adc
mov
jg
push
mov
insl
inc
repz
cmp
push
nop
inc
dec
testl
jbe
xchg
out
sbb
rcrb
daa
xor
test
mov
add
aam
pop
stc
cmp
add
in
movsb
cmp
and
cmpsl
add
inc
stos
sub
jnp
mov
mov
imul
inc
jmp
jp
sbb
int3
jle
ret
mov
fdiv
mov
jae
xchg
out
mov
into
xchg
cmc
and
fisttpll
jmp
bound
mov
jle
std
xor
cmp
std
and
in
jns
mov
xchg
test
popa
fildl
jg
int
imul
xorl
xor
aaa
out
divb
push
jns
mov
mov
fisttps
or
push
xor
xor
jp
cld
jno
pop
cld
lahf
arpl
lock
jp
addb
add
popf
inc
lds
push
stc
adcb
fsubrl
jb
pop
mov
xchg
shlb
and
or
lods
sbb
sbb
mov
scas
idivb
fistl
adc
cmp
or
pop
mov
mov
jne
hlt
sahf
adc
out
pop
lods
sar
mov
ret
pop
push
cmp
in
sub
mov
push
jns
jne
cmp
inc
fs
adc
mov
mov
pop
int3
iret
cmc
push
scas
xor
xor
sti
mov
mov
ds
cld
dec
sbb
and
mov
hlt
sbb
and
cwtl
mov
jb
cmpsb
out
mov
push
andl
sahf
loopne
scas
std
mov
fidivrs
pop
pop
cltd
fimull
and
push
cmp
dec
stos
in
fldz
in
xchg
js
add
pop
jne
lods
sub
loope
xor
sahf
mov
xchg
and
scas
out
or
aas
jge
push
xor
xor
pop
inc
clc
loope
out
push
testb
mov
data16
dec
sbb
testl
xchg
or
test
pop
adc
mov
push
daa
fsts
adc
sahf
mov
xor
adc
fmull
rcll
lds
jl
ret
jb
jp
push
mov
dec
loop
mov
out
das
call
std
jne
mov
fcmovu
push
push
les
enter
stos
xchg
stos
out
mov
aas
int
sub
add
push
out
leave
aam
dec
sub
popa
xchg
inc
jns
xchg
sub
inc
pop
iret
mov
call
fbstp
pop
and
mov
or
or
cmp
bnd
negl
and
out
testb
inc
pop
and
daa
xchg
pop
or
dec
dec
push
loop
fmull
adc
or
mov
pop
push
sub
dec
inc
nop
mov
bound
leave
or
imul
scas
fadds
push
out
int3
jo
pop
push
dec
hlt
rclb
push
jl
sbb
sbb
insl
mov
xor
mov
pusha
adc
cs
xchg
dec
xor
sahf
sbb
outsb
mov
int3
das
cltd
in
dec
jb
cltd
sti
jns
xchg
aad
push
iret
imul
aas
pop
js
inc
push
pusha
mov
ret
xor
inc
bound
fwait
jns
rcrl
mov
add
bound
add
imul
pop
dec
mov
and
je
jne
adc
cwtl
sti
cmpsb
sub
lock
test
popf
out
cltd
xchg
cmp
repnz
xchg
cmp
cmp
ret
movsl
shlb
popf
mov
mov
jbe
jnp
pop
adc
sbb
jg
jnp
sti
xchg
popf
sbb
or
test
mov
jecxz
stos
in
xchg
mov
mov
jmp
loope
inc
inc
dec
cld
shll
push
bound
lock
jns,pn
aas
and
iret
and
das
cmp
in
fists
push
je
add
mov
in
aaa
adc
adc
call
push
jne
arpl
inc
mov
sub
cltd
xor
pop
flds
pushf
lret
push
adc
cmpsb
loop
fstpt
call
sbb
jecxz
loope
push
jo
imul
sub
insb
mov
sbb
xchg
jp
or
flds
pop
and
mulb
sub
pop
notl
data16
scas
or
or
popa
or
jge
cmp
shr
ss
popf
mov
sbb
enter
lea
out
fidivs
adc
inc
cmp
leave
fdivs
pop
jo
pop
shr
push
shlb
in
and
loope
mov
and
add
andl
or
fcos
jmp
incl
aad
xor
test
mov
mov
out
mov
rcr
ficompl
push
cmpsb
sahf
xchg
mov
xor
andl
das
pop
xchg
mov
cld
mov
aam
lock
lea
mov
add
cmp
mov
repnz
cmpsb
fcmovb
inc
fsub
mov
mov
sbb
std
mov
loopne
xchg
cs
xor
mov
lcall
es
test
aaa
inc
shr
sahf
repnz
insb
ja
adc
mov
data16
and
dec
xchg
mov
add
hlt
push
lcall
pop
inc
sub
xor
cltd
jge
inc
pushf
and
xchg
mov
inc
cmp
pop
mov
push
mov
push
test
xor
mov
push
adc
dec
cmp
cmp
ss
call
rorl
int3
cmp
mov
stos
scas
test
aaa
jl
sub
lahf
push
mov
repnz
adc
in
mov
or
pop
cmp
imul
mov
dec
cmp
movsb
pusha
stos
dec
push
out
rclb
pop
xchg
xor
or
or
adc
repz
jg
mov
sub
mov
mov
add
aam
jae
mov
insb
aaa
shrl
ret
int3
int
mov
xor
sahf
enter
out
sub
pop
clc
push
add
cmc
shl
sub
ret
js
loope
aam
jg
xor
and
loop
iret
clc
in
iret
jno
cmp
test
adc
pop
push
sti
xchg
negl
int
mov
fstpt
xor
jp
adc
arpl
adc
pop
push
sbb
pop
enter
outsb
sbb
sti
adc
push
lahf
cmp
imul
out
and
gs
shrl
ret
xor
xchg
xchg
and
sub
xchg
xor
gs
mov
jo
pop
sub
sbb
mov
mov
sbb
pop
sub
lret
pop
push
fsubs
mov
jne
call
inc
repz
sbb
cli
out
sub
cmp
jb
lds
push
in
xchg
cld
fnstsw
mov
arpl
ret
mov
add
sbb
jmp
enter
std
push
jecxz
mov
daa
and
xchg
aad
cmpsl
mov
fdiv
or
enter
loope
popf
fsubrp
fsubrl
add
gs
adc
ret
aas
jnp
insl
loopne
rorb
sbb
sub
je
or
test
add
jle
in
jns
or
lahf
sar
fisubrs
mov
addr16
movsl
xor
pusha
adc
out
into
jecxz
add
insl
cltd
mov
mov
inc
pop
pop
push
icebp
sub
mov
cld
adc
or
out
inc
jo
xchg
lret
fstps
add
lret
js
in
lret
fwait
stos
aam
push
cmp
push
arpl
jns
mov
call
mov
fsub
mov
insl
cmpl
movsl
out
xchg
icebp
xchg
data16
xor
push
dec
imul
xor
xchg
inc
lods
dec
cld
pushf
inc
aam
inc
in
inc
adc
out
pop
adc
add
ret
daa
mov
test
jecxz
mov
fstpt
aad
in
xor
loop
and
out
faddl
insl
hlt
mov
mov
jno
and
mov
mov
outsb
or
jmp
fcmovne
add
fwait
push
mov
xchg
test
dec
and
jae
pop
push
pop
outsb
in
xor
cmp
adc
jge
mov
cmpsb
jne
loopne
into
mov
sub
repz
insb
fwait
into
daa
dec
icebp
mov
add
cli
add
jecxz
das
and
sti
or
je
dec
hlt
mov
popa
ljmp
and
fists
shll
adc
cltd
rolb
shl
scas
outsl
inc
sub
xor
fwait
bound
test
jbe
adc
aad
gs
xchg
pop
pop
sbb
mov
mov
jbe
popf
pop
or
int3
push
push
cld
nop
adc
cld
dec
push
pop
orl
notb
sbb
inc
add
mov
scas
pop
out
sub
stos
inc
mov
inc
test
aad
nop
xchg
add
out
cmp
sub
xchg
inc
pop
xorb
or
addb
push
mov
inc
mov
out
jb
pop
test
out
and
test
cmp
mov
dec
ret
add
fstps
aad
data16
mov
adc
pop
out
dec
in
out
dec
pushf
int3
test
mov
add
pop
iret
jl
mov
imul
jae
sti
aad
mov
push
test
push
add
mov
mov
lea
cmp
push
in
lret
inc
repnz
inc
xor
in
mov
mov
bound
jae
scas
fistps
stos
fisttpll
fldz
movsb
loop
out
loopne
jp
lret
mov
pop
push
out
test
in
jecxz
pop
imul
hlt
les
aam
cld
pop
mov
add
push
push
ss
push
jno
mov
push
inc
lock
sbb
out
xchg
jbe
not
xchg
test
push
fcompl
xlat
scas
mov
lock
rcrb
mov
xchg
les
andl
inc
ficomps
imul
sub
inc
add
push
dec
jnp
aad
jo
leave
xchg
aam
jnp
in
movsl
jmp
push
int
adc
leave
xchg
or
add
adc
mov
dec
mov
sub
bound
cltd
and
fwait
fnstenv
repz
popf
in
pop
mov
insl
in
fisttpll
and
inc
daa
adcl
xor
test
xor
cmp
sbb
rclb
xchg
rcrl
fsubrl
ljmp
xchg
pop
push
std
jge
in
sar
sbbb
lods
rcrb
mov
repz
aaa
shl
pop
aas
mov
mov
loopne
and
stos
stc
inc
xor
sub
mov
and
sub
sbb
push
frstor
hlt
outsb
rol
loope
lods
lret
mov
rol
and
jns
inc
cld
sub
dec
imul
cmpl
pop
dec
mov
repnz
cmp
shl
xchg
xchg
shll
sahf
push
test
fisubrl
outsl
lahf
fistpl
or
fwait
aas
mov
test
ret
leave
aaa
mov
out
push
rcrl
mov
inc
imul
mov
je
or
insb
mov
xlat
and
imul
jno
lods
inc
insl
bound
inc
jbe
dec
aad
scas
push
pop
xor
rcl
adc
cmpsl
scas
int
fnstcw
cmp
push
mov
lret
push
pop
cmp
add
cwtl
and
sub
cmp
add
cmpsb
repz
lahf
and
mov
sub
scas
bound
addr16
lods
scas
mov
imul
cmp
ss
jno
mov
adc
jecxz
xor
icebp
inc
pop
stc
popf
pop
call
daa
cmpsb
rcrb
aad
sbb
inc
outsb
push
jnp
std
hlt
cmc
mov
jnp
test
mov
xor
jb
scas
adc
mov
lea
mov
mov
mov
out
mov
add
iret
pop
enter
scas
mov
leave
iret
xor
dec
insl
mov
jp
cmp
aam
leave
mov
loopne
aaa
push
sbb
sbb
mov
jmp
pop
ja
mov
inc
sub
dec
stc
fxch
rcr
jbe
cltd
lret
in
add
loop
or
movsb
push
dec
cli
push
mov
inc
adc
push
and
loope
addr16
cld
cmp
and
daa
xchg
cli
rorl
testl
arpl
sub
ror
mov
adc
repnz
adc
aam
adc
add
lret
nop
fs
jl
fimull
nop
repz
sub
push
out
inc
test
hlt
jo
mov
xchg
neg
fistl
pusha
mov
in
ja
push
sbb
mov
fisubrl
cmp
call
add
and
jle
mov
jbe
mov
jnp
jge
cld
das
cmpl
dec
enter
and
push
or
fsub
sarl
sub
adc
gs
cmp
lds
arpl
push
mov
jmp
cs
cmc
fldt
lret
pop
inc
test
rcll
pop
xchg
push
loop
decb
loop
xor
ret
mov
dec
lods
adcb
inc
call
addb
pop
aaa
iret
loop
das
lock
nop
arpl
add
dec
ljmp
cltd
or
jbe
xchg
fwait
or
inc
cltd
pop
xchg
add
out
sbbl
jbe
fldt
int
lods
adc
dec
cmpsb
mov
xchg
push
or
cmp
and
loopne
sahf
rorb
xor
mov
or
sti
pop
nop
popf
jmp
mov
jne
push
xlat
xchg
mov
xor
fldcw
aaa
addr16
push
adc
test
popf
ret
pop
in
mov
lea
sbbl
dec
push
cmpb
scas
nop
pushf
jg
mov
movsl
in
xor
movsl
call
xchg
and
pcmpeqw
mov
push
call
ret
xchg
pop
loop
aad
push
push
jmp
loope
xor
sub
jmp
scas
ret
aas
mov
notb
lods
in
call
or
cmp
xchg
dec
lods
and
jns
aaa
aad
dec
popf
adc
fidivrl
mov
imul
popa
sub
sub
xchg
lods
jae
je
test
decl
gs
es
and
xchg
sbb
ss
inc
enter
xchg
popa
test
mov
jmp
into
mov
movsb
and
daa
pop
mov
pop
movsl
mov
outsl
neg
inc
mov
iret
cmp
jb
in
out
jge
push
mov
jg
js
js
mov
int3
jbe
mov
jne
inc
shrd
out
pop
cmc
out
mov
sbb
aam
in
mov
in
xor
mov
addr16
pop
jo
std
push
insl
imul
adc
push
adc
ds
sbb
fldt
cltd
push
push
das
std
pop
shll
fcoms
icebp
xor
icebp
inc
out
les
cld
mov
sbbb
lds
test
int
lods
sbb
jbe
loope
sarl
scas
jns
jbe
popa
mov
subl
push
xor
sub
fldenv
idivl
or
push
daa
in
inc
or
xorb
aaa
sub
cmp
out
loop
out
add
sub
mov
jbe
or
sub
into
dec
test
adc
pop
sub
and
jbe
pop
in
adc
jmp
js
adc
cmp
xor
jmp
xchg
les
jg
xlat
jne
ds
aad
jns
int
mov
cmp
cli
jge
mov
jmp
add
and
scas
or
xor
pop
xchg
pop
int
ljmp
dec
fadd
xchg
test
dec
scas
sahf
js
dec
cmp
jle
enter
pop
sbb
vunpcklps
add
aaa
decb
cwtl
out
scas
out
xchg
fldl
xor
clc
xlat
dec
push
jge
sub
movsb
inc
dec
aas
fiadds
movsl
pop
push
out
push
js
dec
sbb
ss
push
push
test
add
call
inc
push
fisttpl
xlat
test
push
dec
imul
jle
aad
xor
lret
aaa
sti
ljmp
sub
jmp
aaa
push
pop
aaa
cmp
fidivs
dec
sarb
scas
cmp
mov
adc
sbb
sub
and
mov
lret
faddp
push
mov
push
popf
and
js
mov
sbb
insb
aam
stc
adc
iret
push
inc
popf
cltd
mov
loope
test
push
pop
xor
and
push
mov
mov
test
mov
sub
xorb
inc
xlat
negb
cmpsb
negl
loope
mov
add
call
xchg
push
nop
push
mov
xchg
pop
out
mov
mov
loopne
lods
cmc
test
les
push
xchg
cmpb
cs
andb
sub
sti
jl
xor
scas
dec
divb
mov
pushf
or
pop
xchg
test
cmp
movsl
mov
aas
jbe
sbb
sahf
dec
in
mov
dec
and
mov
sahf
sbb
push
ret
jle
mov
adc
jge
mov
adc
adc
pop
testb
pop
or
mov
es
push
enter
sahf
fistpl
lea
in
add
ret
imul
add
repnz
xor
push
lcall
mov
xor
adc
add
push
xchg
push
pushf
mov
out
stc
xchg
fwait
icebp
mov
nop
lret
test
xlat
xchg
iret
add
add
inc
pop
fnstcw
mov
pop
pop
test
inc
add
jl,pt
fsubl
daa
jae
repz
jo
push
hlt
negw
mov
mov
xor
pusha
leave
fcompl
add
inc
out
push
fsubrp
mov
int3
xchg
lods
ds
xchg
inc
sub
insb
pop
out
ljmp
mov
sbb
rorl
cltd
sbb
rcr
movsl
fwait
mov
js
pop
cwtl
push
je
add
push
xchg
mov
fiaddl
scas
push
sbb
movsb
mov
and
cltd
sbb
outsb
mov
icebp
jp
test
out
test
cmpsb
jg
cld
fistpl
pop
dec
adc
and
lds
mov
jge
dec
loope
insb
sarl
stos
sti
les
cltd
mov
add
mov
mov
mov
push
in
lods
aaa
lods
mov
or
out
adc
xchg
cmp
fs
dec
dec
mov
cmp
push
jge
jp
nop
pop
jecxz
dec
sub
and
mov
add
jp
aas
das
push
jne
push
dec
mov
ja
jne
aas
leave
shl
div
sub
push
dec
pop
pop
and
xor
jle
into
imul
pop
lcall
out
shll
loopne
push
or
lds
or
in
cmpsl
inc
mov
mov
mov
jge
dec
push
dec
outsb
push
dec
loopne
arpl
and
mov
lret
js
xor
or
add
or
mov
and
dec
add
push
dec
in
jmp
adc
mov
aad
inc
outsl
popl
fmulp
add
dec
jl
sbb
mov
loopne
cmp
dec
aaa
push
mov
or
fnstsw
cmp
loope
or
icebp
or
jae
rclb
inc
rorl
faddl
test
sub
mov
xor
lods
xchg
jno
push
addb
lock
mov
cmp
inc
lret
xor
push
gs
mov
cmp
es
dec
dec
ja
stos
mov
add
and
shl
imul
pop
orl
xor
or
test
push
push
aaa
movsb
scas
adc
sbb
iret
insl
loopne
xor
push
aam
pop
shr
clc
loop
cltd
mov
cltd
lds
ljmp
cli
cmp
movsb
imul
xchg
sahf
cld
add
mov
divb
jp
pop
jmp
and
fbld
ret
imul
mov
leave
lea
pop
imul
arpl
shl
pop
xchg
lock
adcb
shrl
leave
mov
rcrl
lret
into
jns
adc
repz
xchg
outsl
push
cmp
push
pop
jmp
pop
dec
mov
int
fists
jb
sbb
iret
aad
fnsave
enter
cmp
aaa
mov
push
testl
mov
aad
mov
cwtl
add
fsts
adc
aam
fadd
cmp
loopne
push
mov
imul
or
sub
std
jge
sbb
mov
es
mov
shr
pop
and
lret
adc
adc
insl
fstpt
xor
cmp
cmp
sbb
scas
psubusw
fxch
push
out
xor
xchg
sti
rcr
dec
ds
pop
sub
test
push
ficoml
ror
mov
pushf
inc
into
or
movl
xor
aad
fwait
lret
mov
ljmp
lret
push
int3
or
xchg
outsl
cld
mov
testb
inc
cmc
mov
test
jge
es
push
repnz
xchg
push
xchg
cmp
mov
jb
cmp
bndstx
notl
adc
repz
aaa
dec
int
push
and
mov
sahf
cli
sarb
adc
or
and
mov
cmp
sub
incb
or
mov
jle
fwait
cmpsb
inc
das
inc
lods
pop
in
push
pop
in
ljmp
cmpsl
enter
dec
sbb
push
aaa
in
or
jg
xor
pushf
sub
les
cld
pop
je
sbb
xor
mov
mov
cmp
or
sub
nop
lcall
daa
icebp
jmp
addr16
mov
outsb
insb
stc
aam
lods
or
xchg
aad
jbe
cmp
push
test
fistpl
out
xchg
mov
gs
add
xor
inc
mov
push
or
sbb
lcall
sbb
nop
pop
xchg
adc
add
clc
aaa
pcmpgtb
lea
inc
pop
mulps
leave
inc
xor
jle
mov
cli
pop
jp
or
sbbl
dec
or
sub
dec
paddsw
jmp
cmc
jne
jno
sbb
mov
out
fisttpll
pop
xchg
adc
push
xchg
pop
lock
dec
shrl
or
pop
pop
jno
jg
xor
test
int
aad
mov
and
loopne
cmp
ja
add
cli
loop
inc
lcall
pushf
or
scas
cmpsb
or
jne
daa
jp
lds
test
add
push
mov
rol
repz
fisubrs
ficompl
mov
inc
imul
in
leave
lods
data16
dec
shlb
enter
mov
and
mov
xchg
push
testb
cld
mov
stc
pop
in
scas
mov
arpl
iret
leave
push
nop
popa
data16
dec
idiv
clc
out
cmp
jp
or
stos
gs
roll
scas
jp
and
icebp
jb
insb
aad
mov
loope
insl
loop
je
fsubrl
std
popa
ss
push
idivl
jge
mov
sbb
sbb
out
ss
xchg
mov
test
scas
inc
adc
lcall
jo
imul
mov
repnz
aas
mov
or
mov
call
add
loop
jmp
cli
push
mov
lea
adc
xor
js
mov
loop
push
fadd
addr16
jno
cmpsl
cmpsb
mov
ret
dec
fcompl
inc
xlat
cmpsb
loope
mov
loope
out
cmc
les
sbb
movsl
outsb
jg
mov
lcall
filds
repz
xlat
faddl
pushf
out
cmpsb
scas
call
sub
mov
dec
call
call
stos
imulb
insl
enter
int3
imull
aad
cwtl
mov
pop
pop
negl
sbbl
mov
sbb
sarb
ffreep
cli
jo
xchg
movsl
pop
inc
push
jno
sbb
test
sbb
push
push
xchg
push
pop
enter
sbb
fsubrl
pop
and
fsubrl
test
cwtl
dec
jecxz
sub
jo
test
popf
cmp
jg
jo
data16
jns
mov
adc
iret
push
mov
push
push
cmp
jnp
sub
ljmp
jbe
xlat
xor
pop
call
cs
adc
sub
cli
sbb
movsl
aam
or
add
outsb
dec
pop
call
sub
das
mov
es
cmp
xor
ss
cmp
lahf
dec
xchg
shrb
sub
or
mov
mov
adc
adc
add
xchg
adc
push
and
mov
imul
pop
lret
fiaddl
test
std
dec
pop
mov
fmull
std
jb
cmp
cld
or
sbb
jnp
inc
ja
repnz
jb
cld
dec
loope
push
push
lock
pop
das
out
icebp
xorl
call
add
cmp
pop
lods
add
in
sub
ficompl
pop
cmpsb
pop
test
mov
aam
popf
pop
loope
pop
or
fmull
push
aad
rorb
inc
std
int3
jno
push
jbe
mov
pop
dec
pushf
jg
icebp
ss
sti
ss
into
cli
mov
loop
and
cmpsl
insl
xchg
mov
jle
sub
fs
sub
jl
in
xchg
jo
imul
adc
or
mov
cmp
xchg
in
pop
mov
jmp
pop
mov
mov
mov
decb
xchg
lds
shr
mov
and
xor
mov
mov
sub
xchg
and
mov
mul
pop
fucom
adc
filds
fidivrl
mov
in
pushf
int
pop
lret
cmp
jmp
add
in
cmpsb
in
test
mov
inc
pop
xchg
jle
jae
subb
lret
in
lods
inc
pop
cwtl
or
jno
jecxz
aam
cmp
fyl2xp1
dec
mov
xor
ret
dec
mov
lcall
pop
mov
cmp
aas
push
mov
xchg
lret
in
popa
add
mov
repnz
push
pop
push
cmpsl
or
dec
pop
adc
jge
aam
xchg
fidivl
fidivs
rorb
andl
js
jo
jbe
xchg
xchg
xor
fcmovnu
pop
pop
inc
iret
lahf
and
outsb
sub
daa
fnstsw
call
sbb
adc
insl
xor
cwtl
cmp
cmp
repz
out
dec
movsl
mov
inc
nop
push
adc
mov
or
out
sub
imul
out
inc
mov
add
mov
cs
fucomip
mov
jae
and
mov
aas
cmpsl
pop
in
dec
nop
cmp
xchg
push
and
mov
lcall
nop
fistl
aaa
mov
cwtl
sub
movsb
push
out
pop
iret
pusha
out
jns
fistl
das
fs
lahf
ret
push
cmpsb
xlat
inc
pop
jae
add
out
rorl
xorb
cmp
daa
jl
movsl
cmc
xchg
jns
test
pop
inc
xor
inc
hlt
shrb
inc
or
mov
xlat
pop
and
ret
popa
fldt
scas
cmp
int
in
cli
xor
cmp
nop
out
andb
push
js
pop
dec
dec
sub
scas
jae
lret
mov
sahf
les
mov
adc
lret
icebp
sub
das
or
in
cmp
xchg
js
jle
dec
lahf
mov
sbb
xorl
mov
lret
push
movsl
and
pop
xchg
cmc
sub
or
xchg
gs
mov
xor
and
scas
gs
pop
dec
dec
or
xchg
aas
mov
mov
mov
movsl
lret
scas
sahf
adc
xchg
sahf
and
sti
push
scas
jnp
roll
scas
inc
jns
imul
insb
push
int
push
dec
loop
fwait
movsl
inc
push
pop
mov
call
ljmp
push
pop
out
loopne
pop
aas
xchg
jge
cwtl
in
andb
bound
dec
mov
mov
pop
stc
mov
dec
data16
add
add
mov
xchg
mov
dec
rolb
lods
into
xchg
cmp
pop
aas
add
jp
mulb
xchg
and
push
pop
dec
dec
jg
adc
imul
sub
mov
inc
sub
inc
sbb
jp
arpl
fcompl
sbb
add
rcrl
dec
aas
mov
pushf
xor
pusha
xchg
jmp
xchg
in
push
or
cs
sub
mov
mov
push
mov
xlat
outsb
xchg
fucomip
lds
movsb
cmpsb
jbe
mov
scas
cmp
push
scas
rorl
inc
adc
arpl
iret
or
fadds
cmp
mov
sti
cmpl
mov
pop
adc
cld
inc
icebp
xchg
or
mov
sbb
pop
stc
sbb
fsubrp
sub
xor
dec
repz
ja
mov
pop
sbb
add
sbb
shl
push
out
or
add
adc
into
testl
shl
sub
mov
shl
fistpl
dec
dec
fstps
push
inc
pusha
test
jo
mov
inc
icebp
ret
and
mov
dec
pop
jno
div
xchg
mov
xchg
or
mov
sub
jns
push
jecxz
inc
sbb
in
scas
jecxz
jno
jns
and
fidivrl
or
push
les
ret
xor
add
sbb
and
mov
imul
inc
addb
lock
push
pop
inc
fiaddl
jae
jo
ljmp
xchg
pop
mov
xchg
inc
xor
cmp
les
inc
sbb
ret
xchg
testl
mov
scas
imul
addr16
lods
push
push
lds
or
ljmp
aas
xor
push
ljmp
dec
dec
nop
add
inc
pop
mov
lea
loop
add
or
and
sub
dec
xor
and
mov
jmp
imul
je
inc
int3
cmp
mov
mov
sbb
mov
loopne
jo
fldcw
add
outsl
jae
lret
cmpsb
jb
jge
push
mov
pop
test
push
ret
dec
mov
dec
adc
shrb
dec
jp
adc
pop
repnz
push
jge
out
lret
mov
ds
ljmp
push
cmp
stos
fdiv
sub
movsl
inc
inc
lret
xor
or
push
cmp
imul
js
mov
repz
out
fld
mov
cmpsb
adc
test
dec
ja
dec
mulb
push
pusha
jo
sbbl
mov
add
out
mov
popa
and
adc
sub
sahf
ss
in
rcl
mov
and
xchg
test
mov
mov
fs
les
loope
jl
ret
nop
mov
xchg
lods
and
xor
push
mov
into
int3
jae
mov
mov
add
mulb
cs
xor
shrb
adc
sub
call
adc
sub
je
lods
push
push
cmpsl
cmp
in
sbb
cwtl
and
iret
mov
divb
dec
mull
xchg
mov
cltd
rorb
pop
pop
shr
popa
mov
cmpl
dec
push
ja
pop
outsl
out
lea
mov
xchg
ss
je
xchg
filds
sub
cmp
inc
fdiv
nop
cmp
add
and
fists
dec
adc
leave
mov
xchg
ss
cmc
mulb
push
popf
ds
stc
stc
ret
sbb
setle
addb
jmp
pop
loop
and
jmp
fwait
lds
js
mov
sub
and
cmc
and
push
sub
mov
cmp
bound
add
push
ljmp
sub
lcall
rcl
cmc
and
stc
jmp
and
fisubl
and
add
fwait
mov
sbbb
imul
lea
xlat
dec
insl
xchg
lods
xchg
dec
cmp
xlat
cmp
xor
xchg
aad
icebp
jnp
stc
mov
sbb
xchg
std
adc
dec
xchg
in
gs
push
les
out
add
and
mulb
push
outsb
or
jmp
xchg
jle
jno
hlt
push
ss
jno
add
out
aad
ss
xchg
inc
cmp
lret
mov
xchg
int
jmp
pmaxsw
das
mov
jbe
movsb
inc
pusha
xor
aaa
xchg
and
mov
push
sbbl
pop
sbb
mov
add
pop
jnp
mov
mov
add
push
mov
int3
shl
in
loop
inc
rcr
daa
xor
dec
ret
out
xor
mov
mov
push
gs
sbbl
outsb
mov
outsl
pop
fldenv
popa
push
aas
xchg
cmp
mov
icebp
inc
mov
outsb
fdivrl
lret
add
mov
push
dec
pop
mov
pushf
dec
rcll
jecxz
daa
add
repnz
cmp
xor
rorl
rclb
jnp
lods
pop
into
ja
inc
pop
nop
mov
cmp
push
imulb
ror
add
ljmp
mov
or
cli
dec
and
sub
or
add
mov
in
testl
hlt
adc
add
cmp
ds
inc
pop
nop
psubusw
in
or
push
test
data16
jp
jmp
cld
xor
push
mov
push
mov
hlt
dec
test
mov
jmp
loope
loop
cld
lcall
cmp
adc
or
mov
imul
dec
int
pop
in
or
mov
icebp
pushf
stc
lods
icebp
pop
mov
sbb
pop
jmp
and
rolw
xchg
test
sub
int
fdivrl
addr16
and
jno
rcll
push
pop
push
xchg
xchg
jne
mov
add
pop
push
push
inc
pop
pop
jp
out
das
cli
jo,pt
or
sahf
popa
xchg
fadds
sbb
mov
push
or
test
out
push
ret
inc
divl
xor
cmp
push
xlat
adc
imul
pop
or
rol
arpl
jmp
and
sub
out
mov
cld
cmp
dec
faddl
mov
cmpsb
xchg
imul
mov
loop
inc
add
inc
xlat
jnp
jle
xchg
and
fisubl
xor
inc
mov
ljmp
das
nop
test
iret
ficoms
sti
ds
xchg
call
jnp
jp
jo
cmpsb
lea
mov
and
xchg
mov
jns
into
leave
jnp
adc
jo
cmp
insb
push
loopne
dec
lods
in
push
cmp
mov
cmp
mov
dec
dec
or
mov
cwtl
xchg
mov
push
inc
and
pop
pop
mov
pop
fucomip
dec
out
mov
mov
push
mov
mov
or
mov
lret
fisubrl
pop
push
or
push
mov
jmp
mov
lods
stos
mov
mov
mov
jp
or
pushf
mov
mull
mov
rcrl
dec
mov
sbb
xchg
pop
jnp
jg
cld
popa
imul
or
sub
into
sub
xor
or
mov
in
fcomip
push
jecxz
pop
inc
orl
cmc
or
pop
cmp
jno
push
rcrb
mov
jb
out
fwait
gs
les
sbb
insl
in
mov
cld
nop
inc
xchg
cmp
cmc
mov
adc
and
xchg
jl
xor
jge
dec
scas
clc
sti
clc
sbb
pop
das
mov
mov
rolb
cmpsl
and
or
imul
lods
fwait
adc
sub
push
loope
mov
outsl
icebp
push
or
dec
sbb
xchg
sbb
inc
dec
xor
aad
xor
leave
add
cmp
fwait
add
or
data16
and
das
mov
lea
test
mov
mov
inc
inc
daa
mov
adc
or
mov
fprem
or
or
mov
shlb
call
jle
or
mov
and
lea
and
mov
and
push
cld
jns
fdivr
ds
cmp
ljmp
jmp
pop
xor
movhlps
rcl
jns
cltd
mov
in
adc
sarl
jg
lods
pushl
clc
xchg
insb
pop
idivl
jmp
adc
push
or
adc
jecxz
inc
push
inc
push
shlb
in
out
adc
mov
inc
aaa
jl
pop
xor
test
ljmp
cmpsl
add
adc
sbb
arpl
clc
inc
bound
dec
add
lods
xchg
jns
cld
mov
loope
push
dec
pop
lods
int3
xchg
das
sar
int
lock
cmpsl
push
ss
xor
out
pop
cmp
in
push
lds
add
and
sub
outsl
es
xchg
rorl
popa
sbb
sarl
sub
punpckldq
negl
and
aad
fidivrs
inc
adc
cmp
xchg
mov
jl
push
sub
inc
ficoms
xchg
jge
fstl
inc
les
jp
fs
rorb
push
add
lock
lods
jge
push
mov
jnp
xchg
add
push
ds
arpl
mov
cmp
mov
inc
sub
bound
mov
sbb
call
cmp
jl
pop
aad
sub
sbb
inc
int3
popl
jbe
lcall
in
dec
in
andl
mov
inc
inc
pop
aam
sahf
in
dec
ficompl
in
mov
ljmp
shll
mov
dec
mov
adc
movsb
cwtl
or
inc
int3
inc
dec
jl
test
mov
inc
and
loop
sbb
loope
inc
xor
inc
stos
inc
pushf
mov
mov
es
inc
xorb
jmp
push
jnp
pop
pop
test
mov
addr16
add
cwtl
sub
fnstcw
test
inc
sbbl
std
dec
out
icebp
pusha
js
mov
and
das
xor
mov
mov
sub
jmp
mov
subb
add
mov
pop
and
mov
ds
mov
insb
xor
insl
je
test
and
into
mov
dec
inc
add
push
xchg
push
cs
lret
xchg
jb
pop
push
lock
data16
lock
cmp
mov
ret
cmpb
outsl
dec
scas
imul
jne
xchg
and
fbstp
and
or
mov
inc
nop
sbb
cli
sbb
and
mov
cli
sub
lds
push
add
mov
rcl
les
lock
pop
or
add
sahf
cmp
inc
and
mov
jae
xchg
jge
out
aad
popf
es
fstp
movsb
test
jo
xchg
xchg
inc
jecxz
mov
mov
fstps
pop
lahf
aad
in
add
dec
cmp
pop
lcall
scas
pop
mov
int3
shll
inc
int
ficoml
out
pop
pop
jecxz
insl
das
or
arpl
fwait
lods
pushf
or
rclb
bound
pop
cld
adc
divb
xchg
flds
insl
jge
push
inc
lds
jae
mov
loopne
lea
add
mov
xlat
jns
xchg
jns
shrl
and
scas
repnz
aad
movsl
pop
mov
in
sbb
mov
and
sbb
xor
xchg
outsl
add
inc
add
and
addr16
mov
sbb
fcmovne
subl
dec
xchg
pop
iret
incl
mov
lods
inc
mov
inc
mov
out
shll
lcall
mov
sbb
jp
xor
jmp
jle
dec
or
or
pushf
das
inc
adc
inc
xchg
sub
ja
pop
aad
inc
roll
jge
enter
in
xlat
stos
cmp
repnz
ja
cmp
sub
mov
fimuls
mov
push
pop
dec
cmpsb
leave
cwtl
push
xor
push
int3
dec
sahf
fidivrs
rorb
jo
stos
sub
mov
adc
mov
cmp
mov
jb
enter
icebp
cmpb
movsl
divb
xchg
lea
arpl
fidivrs
dec
pop
push
xor
inc
mov
push
in
jp
and
inc
mov
outsb
or
sahf
mov
scas
jge
lret
jae
idivb
jle
and
addr16
orb
jo
aaa
bound
sub
icebp
xor
adc
stos
cmp
push
data16
out
bound
sbb
test
mov
jge
lret
adc
mov
sub
or
into
pop
cmp
imulb
hlt
cld
or
fldz
fyl2xp1
xchg
mov
xor
data16
notb
mov
std
stos
push
iret
inc
xlat
xchg
mull
mov
push
mov
test
daa
push
and
divb
mov
xchg
nop
aaa
xor
lret
add
jo
orl
int3
aam
mov
mov
jmp
scas
sbb
xor
lds
and
shrl
mov
mov
jne
inc
jne
mov
clc
adc
or
inc
idiv
lret
jecxz
sub
ds
cvtps2pd
dec
pop
pushf
mov
mov
sti
stos
enter
stos
test
adc
cli
jmp
mov
cmp
mov
jge
jnp
in
sub
xorb
push
xchg
int3
incl
out
xor
jae
out
mov
repnz
or
dec
or
mov
inc
inc
pop
or
nop
enter
fnstsw
xor
mov
mov
sbb
xchg
and
test
shlb
push
cmp
es
adc
mov
adc
jge
mov
mov
push
clc
movsb
jle
jns
loope
jo
dec
orb
sbbb
in
mov
inc
gs
lret
ja
lret
mov
adc
mov
cmc
mov
stos
popf
pop
inc
jecxz
andb
loop
pminub
clc
fwait
xchg
adc
int3
cmc
mov
lret
mov
test
das
jg
out
adc
call
es
add
lret
sti
inc
out
jecxz
or
lock
aaa
aaa
jmp
ja
lods
popf
add
jns
imul
insl
mov
in
sub
cmp
sub
dec
outsl
xchg
mov
jecxz
sbbl
push
mov
insb
cmpsl
push
mov
popa
add
ret
mov
js
xchg
mov
add
je,pt
ret
insl
and
loope
fmull
dec
pop
fistl
pop
push
sbb
mov
adc
sub
mov
std
sbb
or
adc
mov
sahf
imulb
add
cmp
call
inc
popf
mov
sub
enter
mov
mov
movsl
ret
push
xchg
xchg
imul
lahf
mov
pop
jl
movl
mov
cmp
sub
popa
sub
ret
in
or
mov
ja
je
xchg
jbe
sbb
jmp
aaa
data16
xor
pop
sub
popa
mov
insl
pusha
mov
rcll
adc
and
jl
int
aas
xchg
xchg
sbbb
jae
fwait
cltd
addr16
inc
test
or
int3
inc
and
xchg
xchg
cltd
xchg
pushl
ret
sbb
mov
ss
fsubrs
jbe
fucom
push
hlt
push
repnz
jmp
jecxz
or
decb
aaa
lock
push
sbb
in
jmp
mov
jb
mov
fwait
int3
out
mov
add
mov
lret
sti
lret
sbb
fadd
enter
mov
lock
inc
fisubrl
push
inc
cmp
jg
shrb
repnz
emms
mov
cld
mov
and
mov
cmpl
sub
lods
ja
jp
sub
mov
xor
insb
sahf
push
lret
test
jecxz
test
insb
dec
mov
add
cli
xor
xor
sar
les
push
shlb
pop
outsl
cmp
sbb
test
push
stos
lods
repz
cmp
popf
dec
stos
mov
mov
lds
pop
mov
pop
jecxz
inc
loopne
pop
fnstsw
ds
pop
ljmp
mov
push
lcall
mov
add
es
jne
push
dec
sub
sbb
lods
mov
jb
ret
push
ja
sbb
lahf
daa
dec
mov
stos
in
xor
cmpsb
push
jp
mov
mov
out
mov
mov
xlat
fldcw
frstpm(287
lcall
dec
push
movsb
jp
or
or
sub
aaa
jnp
lret
xor
fsts
lret
rclb
jne
shll
push
loop
jl
in
jmp
cs
push
ja
push
loop
mov
dec
and
mov
or
inc
outsb
iret
mov
fucompp
arpl
lret
dec
fildll
out
xchg
flds
dec
mov
addb
cmc
test
jno
test
stos
loopne
ret
sbb
add
mov
and
xchg
sbb
arpl
mov
and
or
popa
outsb
cmpsl
aaa
das
jbe
mov
iret
clc
pop
wbinvd
add
jl
aaa
test
xor
std
jae
in
push
xor
dec
sub
fisubrl
aad
xchg
jge
es
jbe
or
xor
push
fcmovu
inc
shll
sub
xchg
test
arpl
jl
sahf
pop
cmp
leave
pop
popa
lods
pop
xor
dec
lock
jb
popf
mov
loope
cmp
pop
dec
mov
int
into
jl
loopne
and
sub
mov
pop
fistps
pop
jp
ficompl
repnz
push
mov
into
dec
divl
jnp
add
jecxz
fcomps
outsb
pop
inc
test
aas
test
icebp
push
mov
xchg
mov
mov
lahf
fmul
repnz
fneni(8087
aaa
js
dec
xchg
mov
or
je
test
shrd
pop
outsl
mov
testl
or
stos
sbb
cmp
jecxz
dec
mov
stos
xchg
bound
shrl
mov
jmp
pushf
je
mov
jmp
xchg
fnstenv
dec
xchg
fldenv
in
mov
mov
ret
mul
fucom
cld
gs
sti
outsb
test
test
sbb
xchg
sbb
hlt
enter
sub
or
adc
fs
rorl
shlb
jnp
nop
xor
pop
push
and
cmpsb
mov
rcrb
fstpt
pop
jle
mov
sbb
popf
jmp
int3
lods
enter
lahf
sbb
jmp
int3
inc
mov
inc
push
push
dec
cmp
xorl
aaa
loopne
into
add
dec
nop
jecxz
mov
inc
call
add
sbb
inc
jbe
mov
dec
push
outsb
jp
xchg
adc
and
sub
fisubs
outsl
or
xchg
fsubr
or
sahf
mov
pop
fmulp
mov
lods
push
movups
ja
mov
loope
bound
clc
pop
adc
lock
stos
out
cs
cmp
inc
jecxz
lock
xor
push
in
dec
hlt
adc
call
mov
jae
outsb
adc
xlat
push
add
inc
rcr
inc
mov
mov
and
cltd
inc
push
scas
fs
inc
and
add
imulb
cltd
jp
cmpsb
imul
mov
in
lea
insb
aas
push
push
movsl
subl
insb
out
cwtl
fildll
xor
cmp
add
popf
stc
jp
stos
inc
jp
iret
orps
outsl
mov
push
xchg
xor
jae
or
dec
push
rcrl
jo
insb
dec
lret
daa
add
xor
data16
stc
adc
jbe
iret
popa
jno
add
cmp
mov
addl
push
push
add
sbb
sbb
mov
pusha
adc
xchg
pop
xchg
shrb
scas
and
mov
inc
jmp
pop
fimull
lret
xchg
es
int3
jne
push
test
xor
fcoms
cs
inc
jb
sbb
cld
out
ljmp
mov
dec
addr16
lahf
jnp
add
or
je
mov
js
mov
cli
aas
int
ret
push
sub
sub
and
push
adc
fisttpll
pop
test
xor
pop
inc
clc
cmp
mov
sub
pop
jns
insl
test
test
lods
mov
popa
adc
andb
shl
in
mov
mov
sbb
aas
fbstp
cmpsl
push
pusha
xorb
mov
in
sti
enter
xor
sub
incb
movsb
fsubrl
inc
fcmovnu
jmp
ljmp
imul
pushf
and
mov
or
jmp
mov
movsb
mov
outsb
pop
into
mov
or
jbe
push
pop
fnsave
popf
adc
xchg
leave
xchg
insb
movsl
push
mov
cltd
gs
add
out
jle
push
stos
adc
lock
popa
pushf
aad
add
mov
ret
lock
addr16
mov
cmp
mov
in
movsb
jno
sbb
outsb
push
add
sbb
inc
vphadduwq
sbb
adc
or
es
and
inc
hlt
and
dec
adc
fwait
jae
inc
dec
add
mov
data16
or
test
jmp
out
jg
inc
and
mov
push
xchg
push
inc
sub
scas
pop
aad
mov
dec
adc
mov
push
vmread
xchg
lret
lcall
in
lods
cmpsb
push
test
clc
js
pusha
stos
push
xor
xchg
clc
subb
aaa
push
fcoml
rolb
mov
int
scas
nop
les
adc
sbb
xchg
lods
int
mov
jbe
inc
es
inc
hlt
aaa
mov
movsl
cmp
cld
sahf
xchg
inc
lahf
inc
fisttpll
cmp
jae
int
mov
lods
cmp
fists
addr16
lock
xor
rcrb
outsw
mov
les
or
or
test
cli
out
lcall
mov
jl
fdivs
test
xor
inc
adc
or
jecxz
inc
push
insb
mov
add
mov
mov
in
jmp
in
lahf
cmovno
outsb
xchg
les
inc
sub
mov
sbb
nop
addr16
lret
or
pop
inc
insb
outsl
cmc
lcall
mov
jbe
xor
outsl
dec
je
sub
and
icebp
js
sti
jo
movmskps
add
movsl
fs
movsb
pop
mov
add
mov
popf
arpl
adc
testl
add
aaa
lahf
in
ljmp
out
adc
rcl
sub
add
cmp
xor
jae
push
cmpsb
sbbl
mov
add
cmpsb
or
push
out
lds
inc
mov
and
xor
push
mov
mov
cmp
imul
iret
arpl
mov
and
jb
ret
xor
test
pop
mov
mov
or
cmp
pop
or
mov
cmpsb
sub
fcomps
jno
cli
sar
add
push
ljmp
pop
xor
mov
out
xor
dec
xor
enter
mov
iret
jg
popa
mov
movsl
push
adc
pop
mov
lret
subl
jg
xor
lds
jb
icebp
add
in
jb
pop
test
xchg
shl
in
jb
movsb
mov
les
sbb
js
sbb
cmp
mov
jae
pop
fsts
mov
fcomps
xor
iret
mov
scas
adc
pop
pop
push
cmp
inc
ss
jno
mov
rclb
jns
fcmove
pop
test
mov
mov
hlt
in
push
jae
dec
js
arpl
cmp
jne
and
bound
daa
sub
push
adc
out
cmp
lcall
fidivl
stc
out
int
sub
or
dec
xchg
insl
mov
test
insl
pop
out
insl
rcll
inc
xchg
repnz
ret
xchg
stos
scas
mov
mov
gs
push
pop
shll
loope
sbb
jne
add
inc
mov
push
and
shr
jle
or
std
scas
jne
stc
xor
sub
repz
popf
jb
mov
mov
adc
jo
lods
mov
stc
loopne
xlat
lret
outsl
mov
outsb
cmc
adc
add
xchg
pushf
xchg
incl
mov
aam
mov
push
xchg
out
jg
pop
lea
iret
push
and
and
jmp
sub
ret
fwait
into
and
mov
fs
ret
mov
loope
cld
xchg
stc
outsb
push
jne
fldl
xchg
bound
jne
dec
dec
sbb
dec
sub
jo
bound
fsubr
xor
add
ret
cld
cmc
or
enter
xchg
xor
mov
push
xor
xchg
push
sub
arpl
mov
push
sbb
xor
dec
in
in
fadd
cmpsl
xchg
test
fnsave
lock
inc
imul
xlat
add
mov
lds
cltd
mov
stos
inc
and
sahf
dec
xor
xchg
fisttpl
pop
call
inc
out
pop
pop
jecxz
or
sbb
mov
call
sbb
lcall
pop
jb
xchg
int3
ret
fisttpll
sub
cmp
lods
pop
hlt
sahf
sub
cwtl
movsl
xor
sarb
inc
add
pop
btr
add
or
mov
lods
cmp
rcrl
add
fmull
xchg
xchg
sti
mov
push
xor
adc
xor
lods
scas
out
sub
adc
aas
adcl
arpl
pop
xchg
das
nop
jecxz
xchg
out
pop
cmpsb
lret
dec
sub
mov
add
ret
int
pop
or
leave
cmp
inc
sbb
inc
in
mov
rolb
idiv
movsl
in
mov
xchg
fnstcw
add
bswap
sbb
mov
mov
sub
cmpsb
sbb
lret
inc
mov
iret
inc
orl
imul
xchg
icebp
popl
dec
in
mov
mov
std
cmp
outsb
mov
fnsave
xlat
mov
movsb
adc
cmc
fildl
mov
adc
xchg
insl
mov
xor
rclb
leave
inc
jg
fimuls
jg
push
div
int3
das
nop
test
xchg
testb
jmp
test
jns
and
stc
aas
test
bound
loope
fwait
pop
inc
xchg
in
inc
movsl
data16
aad
cli
and
dec
mov
inc
pop
jmp
pop
cmp
bound
lret
inc
push
stos
or
dec
daa
push
fdivrs
scas
push
leave
loop
mov
neg
xchg
insb
lret
clc
daa
xor
inc
lcall
cmp
add
sbb
lahf
dec
lods
pop
in
test
push
movsb
fistl
dec
xor
push
repz
dec
and
cmp
xorb
cmpsl
ljmp
shl
pop
and
lcall
jo
rol
pop
mov
or
cld
dec
mov
inc
lcall
and
lahf
test
ret
lds
or
jl
xchg
icebp
mov
lahf
shlb
aam
or
scas
cmp
mov
imul
insl
jns
fwait
inc
xchg
xchg
mov
dec
mov
insb
push
mov
shrb
call
or
mov
mov
inc
out
sbb
mov
pop
push
cmp
dec
and
shr
out
ss
jo
pop
stc
jecxz
int
fisubrl
xor
jo
push
push
mov
jge
add
bound
pop
mov
aam
mov
cmp
jl
inc
movlps
enter
inc
sbb
scas
incb
xchg
or
cmp
sbb
fistpll
sti
fs
repz
add
xor
pop
jl
outsb
shr
pop
repz
insl
lret
enter
or
pop
out
add
pop
ds
cs
sub
sub
jae
cmp
icebp
xchg
dec
mov
xchg
dec
jge
jg
movsb
out
adc
xor
lock
jle
sar
mov
cmc
cltd
add
stos
repnz
in
rorl
jno
push
pop
jmp
out
js
daa
pop
test
pop
and
shll
push
mov
test
sub
jmp
test
pop
daa
mov
cmc
repz
stos
stos
add
dec
out
mov
add
add
test
cmp
loope
adc
ljmp
xchg
mov
fwait
cmpsl
mov
js
inc
cmp
stc
adc
dec
aas
jge
mov
je
mov
loopne
in
sbb
adc
orl
cmp
roll
pop
mov
loop
inc
rorl
pushf
sub
inc
dec
mov
sub
dec
inc
mov
jns
aad
gs
lods
pop
mov
dec
insb
adc
mov
or
xchg
icebp
lret
xor
cmp
insl
sbbl
jecxz
sub
push
movsl
mov
scas
call
cmpsl
lds
ret
mov
mov
push
lcall
add
pushf
and
pusha
push
std
lock
pop
stc
mov
push
cld
mov
cwtl
rclb
mov
xchg
fs
add
enter
pusha
push
xor
lret
scas
push
je
cltd
cmp
jmp
push
or
jnp
xor
mov
ds
into
jle
inc
std
shl
and
mov
shll
dec
xor
in
daa
shl
les
add
pop
aas
dec
aam
fs
in
push
aas
push
xor
pop
aam
loope
rorl
mov
jns
dec
imulb
pusha
in
lahf
push
add
or
jle
jbe
pop
adc
fildll
jmp
mov
add
out
xchg
mov
adc
cmp
outsb
cltd
jno
dec
addr16
out
push
ret
mov
ja
dec
test
sub
outsb
jge
sbb
roll
and
xor
mov
rcl
mov
mov
inc
adc
imul
xchg
nop
std
aas
cld
fimull
enter
sub
mov
ljmp
icebp
cmp
xchg
lahf
adc
jmp
add
dec
adc
movsl
mov
adc
or
dec
or
pusha
out
jmp
add
push
fcmovb
fdivr
test
adc
dec
xlat
ret
jle
fists
iret
sbb
jns
mov
jnp
add
dec
test
push
jmp
mov
mov
adc
mov
or
enter
popf
daa
push
or
mov
repnz
in
xlat
xor
arpl
cmp
or
or
pop
xchg
sti
jns
lahf
add
xor
pusha
cmp
jb
dec
lea
xchg
jl
clc
add
mov
mov
cltd
sbb
out
jge
dec
pushf
int
cs
pushl
mov
leave
mov
mov
movsl
cmpsb
test
adc
call
mov
out
push
popf
pop
and
stos
mov
pop
mov
fs
adc
mov
jle,pt
xor
aas
or
add
jns
shrl
and
push
jp
shl
inc
cmp
lcall
stc
stos
mov
lret
jecxz
push
aam
sbb
cmpsb
shrl
iret
out
out
push
popa
inc
xchg
pop
sbb
mov
jae
jnp
ror
sarl
xlat
and
lret
mov
daa
insb
inc
jno
fwait
push
xor
jge
jae
push
mov
mov
sbb
inc
out
inc
aas
lds
popa
jl
scas
insb
mov
jle
jbe
or
xor
loop
sub
test
mov
lock
aaa
iret
repnz
cmp
push
xchg
scas
push
mov
lcall
popl
mov
jne
and
pop
fs
repnz
jae
pop
dec
lcall
or
lret
loope
jg
testl
and
addb
movsl
add
cmp
and
jmp
push
mov
jecxz
and
cltd
int3
sbb
loopne
outsb
ret
outsb
scas
sti
inc
or
pusha
pop
jecxz
test
stos
inc
push
xor
pop
xor
aad
adc
neg
lds
add
mov
add
leave
inc
jecxz
jge
and
aam
push
inc
aam
cwtl
jle
gs
outsl
incl
mov
cwtl
pop
jp
lcall
nop
push
xchg
in
push
cld
sub
subl
fwait
lods
sub
add
dec
lcall
mov
gs
scas
jns
pop
mov
xchg
xchg
xlat
jge
data16
leave
adc
loop
push
movsb
xchg
push
nop
add
adc
aas
int
push
sbb
mov
andb
add
je
in
into
loope
push
xor
mov
dec
add
push
pop
repz
enter
sti
pop
shrl
les
pushf
mov
inc
pop
ret
insl
xlat
cmp
cmpsb
clc
lret
sub
scas
mov
addl
cmp
fucomip
aad
push
sub
shl
sub
sub
inc
shll
mov
lret
bound
xlat
movsl
push
shufps
jb
mov
aad
ds
dec
sub
sub
cmp
loop
arpl
pop
mov
sbb
cmp
in
jnp
push
mov
ss
enter
loope
into
push
lods
lcall
push
mov
fcmovnu
ret
jb
int
cli
sarb
adc
xor
cli
sub
push
mov
insl
lret
xchg
and
call
data16
fisubrl
sbb
rclb
jae
push
inc
jnp
or
mov
mov
jb
imul
fwait
mov
call
push
test
sahf
iret
shr
lock
out
jno
cmp
xchg
sub
lcall
fadds
test
roll
test
sbbb
fsubrl
arpl
movsl
cmpsb
push
leave
or
sarb
jae
mov
lret
mov
call
aam
sti
or
fcomi
or
shl
dec
pop
popf
je
add
adc
aad
cmp
loope
sbb
roll
push
cltd
and
addr16
sbb
mov
aam
out
lcall
fidivs
incb
push
je
out
add
mov
outsl
ja
in
nop
jle
cmpsl
rclb
cli
jo
or
pop
lret
aam
repz
int3
mov
push
xor
lret
iret
addr16
sbb
daa
nop
mov
dec
sti
mov
push
pop
sbb
inc
dec
mov
mov
dec
les
pop
and
jns
xchg
or
xlat
lret
sub
cmp
cmpsb
mov
or
loop
push
sub
and
mov
ret
pop
ja
je
mov
test
test
out
out
outsb
dec
jnp
lock
sarw
dec
in
pusha
push
arpl
shll
test
fnstenv
fidivs
jne
lret
jno
mov
inc
mov
cmp
adc
mov
mov
dec
aad
cli
mov
xor
mov
outsb
or
xor
clc
xchg
or
add
es
stos
inc
jnp
fdivl
jg
push
sub
adc
jae
push
shlb
test
icebp
dec
and
pop
sbbl
or
pop
mov
push
sub
jl
cmc
cltd
enter
xor
test
adc
inc
loope
out
in
lahf
inc
pop
das
inc
dec
adc
loope
mov
repnz
cmp
lahf
dec
mov
repnz
mov
jns
sbb
sbb
push
into
mov
fidivs
push
xor
sti
or
insb
jbe
xchg
pop
nop
lea
mov
gs
and
sbb
sub
call
adc
fnstenv
xor
xor
add
pop
imul
inc
adc
arpl
sahf
test
scas
mov
jmp
jo
mov
xchg
and
mov
pop
stos
cmp
insl
lret
div
xchg
cmp
dec
lret
mov
fwait
jbe
sbb
outsl
incb
and
inc
add
xor
repz
dec
insl
aad
ret
mov
mov
mov
lret
add
xchg
cmpb
or
lcall
jmp
inc
xor
pop
or
xchg
dec
mov
scas
out
testl
mov
push
lock
out
in
jb
or
cmpsb
jcxz
pop
mov
jl
imull
mov
dec
roll
dec
pop
aam
mov
das
popf
jecxz
fnstsw
mov
scas
sbb
xor
inc
cmp
push
int
xor
test
aam
out
enter
ds
in
lcall
out
mov
jl
mov
int
xchg
push
mov
pushf
and
in
mov
and
jp
movsb
jbe
repz
mov
push
mov
ja
arpl
dec
sbb
push
sbb
push
scas
xchg
cli
mov
aam
pop
jmp
adcl
roll
cli
jae
test
int
cmp
mov
xchg
in
sbb
aaa
dec
mov
push
sub
rclb
clc
mov
cwtl
add
mov
insl
mov
jl
icebp
imul
adc
shr
xchg
jns
jb
imul
scas
test
add
and
cs
orl
shll
mov
pop
mov
sub
insl
movsl
dec
addr16
fwait
inc
movzwl
sbb
leave
xlat
mov
jo
mov
pop
xor
or
sbb
aas
add
stos
subl
pop
iret
sahf
ds
lret
mov
dec
mov
out
sti
or
add
dec
dec
aaa
loop
rolb
push
popf
pop
push
mov
push
std
pop
and
jno
push
inc
popa
inc
xor
or
mov
mov
or
sub
sti
jmp
cli
out
enter
sub
hlt
fimull
cmp
jb
lret
test
unpckhps
push
xchg
add
leave
dec
in
rorb
xor
mov
or
cmpsb
ds
movsb
cli
loope
cmp
cmpsb
sbb
sbb
shlb
ja
xor
cmpsb
movsl
and
lods
mov
inc
aas
mov
cwtl
rolb
pushf
adc
sbb
xor
popa
fmull
xchg
loop
pop
shrl
sti
pop
xchg
ret
lret
popf
pop
fisubrs
js
repnz
mull
mov
icebp
sbb
leave
add
stos
xlat
and
mov
push
popf
outsl
push
imul
imul
int
xchg
mov
fldl
pop
xchg
test
lea
fwait
cltd
jno
test
rolb
fcoml
xor
pop
jno
popf
inc
dec
movsl
int3
mov
mov
fcomps
test
inc
adc
inc
shlb
fs
es
lods
xchg
clc
arpl
add
sub
data16
rcpps
mov
fcmovne
loope
fisubrs
mov
cmp
icebp
push
sti
mov
fimull
cmp
aaa
add
inc
xor
xchg
push
xchg
adc
push
es
gs
pop
outsb
shll
stos
xchg
in
jl
in
daa
inc
mov
inc
fildll
push
sub
or
jae
adc
jle,pt
push
and
jg
jg
mov
mov
imul
jno
jl
aaa
mov
and
cmc
hlt
test
imul
popa
scas
sub
inc
fidivrl
repz
inc
xchg
mov
dec
inc
sub
inc
fbld
inc
loopne
stos
loope,pn
jp
mov
sub
xlat
mov
jnp
or
mul
cmp
fs
or
adc
addr16
sbb
pop
mov
and
ljmp
ja
int3
cmp
sbb
pop
rcl
pusha
pop
sub
dec
xchg
aad
xchg
ljmp
aad
out
mov
insb
cmpsb
xchg
inc
pop
adc
mov
xor
mov
jge
sub
add
or
fdivs
sbb
ljmp
testl
pop
cwtl
pop
push
and
cmp
gs
cmpsb
lahf
test
shll
dec
sub
dec
mov
fcomp
out
sub
mov
pop
dec
sub
push
pop
lods
adc
rclb
jg
leave
cmp
aaa
sti
loopne
sub
inc
push
loop
leave
fdivr
repz
pop
ret
pop
call
insl
les
mov
fnsetpm(287
sahf
in
jmp
adc
push
mov
call
adc
sbb
mov
movsl
enter
dec
test
dec
inc
jb
pop
jne
leave
cmpsb
icebp
add
jle
es
popa
mov
push
sbb
sti
jne
cmp
and
add
mov
loope
mov
add
push
mov
cmp
pop
shll
ret
dec
frstor
sbb
xchg
and
bound
mov
gs
std
pushf
inc
fsubrs
cli
test
dec
mov
lcall
imul
mul
xor
ret
jle
aad
sti
hlt
push
loope
mov
xchg
mov
push
cmp
adc
xlat
inc
mov
clc
jne
iret
cmp
movsb
pop
loope
push
icebp
mov
mov
xchg
adc
dec
dec
icebp
and
test
mov
xorl
sahf
sub
inc
mov
sbb
push
imul
or
jge
add
cmp
mov
push
inc
mov
jb
xchg
jbe
insl
inc
call
clc
adc
jae
fcompl
js
sub
call
mov
std
std
adc
test
sar
pop
inc
cld
insl
mov
int
cmpsl
mov
or
movsb
xor
stos
pop
pop
or
push
push
and
jbe
test
jb
scas
or
enter
lret
inc
insl
loopne
inc
lret
int
pusha
cli
sbb
pushf
mov
xor
cmp
ds
enter
icebp
inc
or
push
ret
push
hlt
mov
xchg
jle
sub
mov
xchg
xor
pop
idiv
mov
inc
xchg
mov
jecxz
mov
imul
mov
or
sbb
into
incb
mov
sbb
movsb
adc
xchg
fwait
rolb
mov
dec
push
push
nop
jp
xor
push
xchg
lds
mov
sbb
ljmp
fcomps
stos
xchg
sub
mov
shll
lahf
inc
and
add
xchg
mov
push
int
xor
mov
std
xchg
aas
aad
mov
mov
ret
loope
arpl
ret
cmp
fucomip
sbb
cld
ret
fs
mov
in
daa
mov
clc
setnp
ret
jg
mov
push
sbb
lcall
inc
das
repnz
imul
clc
inc
push
jp
or
xor
call
cmp
lahf
rolb
jns
sub
movsb
insl
mov
das
xchg
dec
rclb
ds
jnp
mov
add
add
xor
jmp
mov
cli
packsswb
cmp
xchg
cld
out
mov
inc
in
jl
data16
imulb
testb
popa
arpl
shlb
pop
jmp
add
enter
ds
pop
pop
aad
jbe
stos
test
into
mov
jo
lret
popf
hlt
fcmovnbe
lods
cld
xchg
outsb
mov
mov
jp
jg
xchg
adc
push
push
push
jb
dec
stc
shlb
sub
mov
ds
jecxz
mov
add
dec
scas
xor
aam
mov
mov
fnstcw
and
mov
test
push
pop
lock
push
aaa
sbb
in
dec
jge
push
add
mov
imul
aaa
jmp
popf
call
inc
push
xchg
int
out
stos
xor
mov
ja
lods
mov
and
push
inc
sub
gs
xchg
jl
cmp
lcall
repnz
mov
loop
repz
pop
lea
fildl
rdpmc
es
cmp
and
xchg
push
mov
xchg
or
push
subl
xchg
jl
std
pop
ds
cli
ret
and
es
xor
inc
iret
popf
scas
or
fstps
cld
aad
rcrl
bound
int
push
into
mov
test
push
fs
clc
mov
fcmovu
cmp
fidivs
or
adc
sahf
movsb
sub
dec
add
decl
inc
int3
or
cmp
cs
insl
in
addr16
inc
mov
cwtl
lahf
adc
and
inc
sarl
sbb
jl
cmpsb
dec
mov
sti
adc
push
movsl
das
cmp
push
and
inc
jb
imul
jb
push
push
lcall
xor
mov
lahf
stc
imul
sbb
out
fcompl
cmp
sub
xchg
orl
jo
xor
jae
sbb
shrl
push
dec
in
cs
fsubl
pop
test
out
stos
fxch
movsl
ss
orb
lahf
or
mov
cltd
in
aaa
mov
mov
aaa
xor
cmc
mov
pop
icebp
fisubs
xlat
outsl
in
mov
push
push
and
push
fistl
mov
loopne
inc
call
movsl
push
leave
sub
inc
or
addr16
lods
daa
add
or
and
clc
sbb
andb
inc
and
inc
mov
mov
jno
add
dec
mov
sti
cmp
mulb
frstor
cmc
iret
jae
xchg
repz
int
and
cmp
inc
popl
jo
inc
push
sti
add
mov
pop
outsb
cs
cltd
and
sti
in
mov
insb
pushf
lcall
mov
lahf
mov
out
add
aam
test
add
mov
mov
inc
push
dec
out
pop
sub
mov
and
pop
scas
adc
jo
or
imul
mov
sarb
inc
sbb
push
test
movsb
fucomip
jle
ss
xchg
or
leave
lods
mov
dec
dec
inc
test
xorl
pop
movsb
ss
jo
aad
pop
jnp
pavgb
fs
mov
adc
fcompl
mov
or
fucom
xchg
mov
xor
cmp
mov
rcrb
cmp
cmp
iret
fs
and
lahf
mov
ret
mov
scas
clc
lcall
stos
mov
jns
add
lock
in
iret
aas
jae
sbb
jl
test
movb
adc
movsl
arpl
xlat
mov
add
inc
pop
std
pop
mov
pop
push
mov
jmp
clc
je
pop
movsl
inc
test
aad
xor
aaa
cltd
test
js
xchg
jg
dec
push
ret
adc
xchg
repz
sub
scas
jecxz
movb
pop
paddsw
imull
adc
call
movsl
cmp
ds
xor
dec
pop
jae
addr16
ja
adc
es
pop
sbb
mov
je
outsl
imulb
ds
nop
pop
jno
call
xchg
fstp
faddl
inc
lcall
adc
filds
test
aaa
imul
stos
daa
pop
out
xlat
pop
dec
xor
leave
cli
pop
mov
lcall
cmp
test
arpl
cmpsb
adc
ret
ds
jnp
aad
psrld
imul
jne
in
push
mov
faddp
loopne
out
lret
mov
lds
pop
xchg
push
push
mov
loopne
mov
stos
fsubp
xor
icebp
fs
sbbl
xchg
jo
repz
pop
lea
ficompl
push
inc
cli
imul
sbb
mov
cmp
notb
hlt
pop
imul
pop
jnp
test
jbe
xchg
in
adc
lea
xor
dec
sbb
dec
xchg
sbb
imul
or
mov
add
or
pop
xor
insl
mov
and
mov
popf
mov
xchg
enter
mov
clc
rcl
pop
or
sub
test
sub
clc
jno
pop
add
mov
bound
sub
int3
xchg
fsts
pop
xor
or
jno
adc
jns
sub
cli
xor
push
inc
out
mov
jmp
pop
dec
in
out
xchg
insl
fadd
in
lret
mov
test
adc
cmp
lock
pop
mov
loop
mov
iret
or
orl
in
sahf
orl
push
in
mov
pop
divl
shll
dec
dec
lahf
idivb
and
mov
aas
jno
dec
std
pusha
mov
xorl
int
rolb
repz
inc
cwtl
dec
xor
mov
jl
mov
shr
xchg
ljmp
cmc
leave
mov
loope
and
outsb
mov
mov
leave
ss
les
and
fistpll
add
out
jns
xchg
push
pop
loopne
enter
out
hlt
xchg
fwait
mov
and
dec
push
inc
lahf
cmpsb
shrb
pop
test
rclb
inc
mov
fcoms
add
mov
push
cmp
mov
mov
imul
and
sbb
fs
out
dec
pusha
dec
nop
mov
mov
xchg
fwait
sub
out
push
push
out
xor
nop
push
scas
sbb
repnz
enter
add
inc
mov
push
insb
mov
insl
dec
jp
fcoml
xor
in
repz
pop
ss
mov
shrl
test
mov
inc
pop
and
stc
dec
mov
pusha
adc
fwait
repz
jbe
jne
xor
push
pop
or
lret
mov
pop
das
in
imul
std
push
int3
int3
jl
jb
mov
mov
lea
mov
sbb
sbb
clc
pop
shlb
clc
sbb
mov
fwait
xchg
inc
int
aam
arpl
rcl
pop
xor
xchg
mov
xor
mov
test
mov
cmpsl
add
push
adc
mov
jl
xchg
fwait
jnp
jne
repnz
xor
pop
shll
jbe
mov
hlt
filds
fists
rol
add
sub
sbb
clc
jl
xor
ficoms
test
pop
push
outsl
jle
mov
jnp
fiaddl
fisttpll
or
or
sbb
aaa
push
inc
and
insb
xor
pop
mov
mov
les
movsl
push
js
sbb
xor
xchg
dec
test
mov
into
test
adc
out
sub
es
dec
sub
lock
fistpl
addr16
jmp
les
mov
xor
int
je
ret
fdivl
stc
cltd
mov
xchg
rolb
push
sbb
out
pop
out
jmp
mov
shrl
add
rcll
and
js
xor
jge
notl
lcall
pop
xchg
push
xor
xchg
clc
les
pop
cmp
sarl
add
sti
lret
push
mov
std
jge
jns
push
xchg
cmp
mov
dec
pop
and
bound
xor
dec
sub
pop
push
jecxz
mov
xor
mov
int3
out
mov
shll
outsl
mov
cmpsb
sbb
xor
add
push
cmc
sbb
pop
mov
or
mov
cmpsb
mov
push
ljmp
sbb
enter
fs
out
xor
jp
jmp
enter
dec
mov
addr16
mov
mov
lea
out
adc
adc
andl
add
push
mov
adc
add
rclb
in
out
mov
mov
xlat
inc
fidivrs
fcompl
test
pop
pop
push
sub
cmp
cmpb
inc
mov
push
maxps
clc
mov
out
xor
cmp
pop
shlb
sbb
mov
shll
inc
test
jmp
movsl
stos
mov
jmp
add
cmp
cmpsl
mov
and
jle
xchg
or
sbb
mov
adc
cmp
mov
lret
pop
mov
push
iret
push
pop
jno
xor
pushf
add
scas
jnp
dec
mov
pusha
outsb
xchg
in
adc
fsubl
stos
cld
into
push
ds
les
jge
sub
daa
jp
clc
sub
add
push
jmp
jnp
stc
jne
ja
imul
or
sbb
jle
mov
movsb
hlt
testb
pop
jo
iret
call
lea
shll
dec
cmp
leave
pop
fmuls
fnstsw
sub
test
or
ficoms
adc
add
daa
mov
loop
inc
loop
adc
and
xor
jns
aam
rclb
ja
jle
dec
std
add
or
enter
sub
in
cmp
sub
cmp
cltd
xlat
xchg
loope
fwait
pop
sarl
out
ror
xor
sub
dec
xchg
pop
sub
xchg
jae
imul
mov
insb
mov
jb
cmp
out
cmp
sarl
sub
insl
into
test
ret
mov
and
add
in
movsb
mov
pop
pop
imul
dec
rclb
jl
lds
icebp
loopne
xorl
and
xlat
push
xor
lret
fidivrl
aas
jno
mov
rclb
and
xor
mov
inc
outsl
imul
aam
popf
or
pop
repnz
mov
mov
push
push
push
jb
scas
aas
adc
or
pop
xchg
dec
clc
dec
cmpl
inc
mov
and
add
std
divb
pusha
mov
sbb
subl
jns
mov
mov
enter
lods
lods
push
fs
xor
jmp
aad
and
daa
mov
push
cmp
inc
mov
ds
cmp
mov
mov
dec
insl
mov
repnz
sub
mov
or
push
push
ret
hlt
dec
adc
jge
test
sub
repz
ja
pop
push
clc
jge
stos
lea
aaa
enter
call
sub
jne
ljmp
pop
mov
push
cmpsl
adc
dec
pop
fdiv
sbb
std
sub
or
jmp
and
je
xchg
fisubrs
in
cmc
add
mov
sarl
repnz
dec
mov
mov
fs
cmp
mov
inc
imul
lret
ret
iret
mov
push
sub
es
lret
mov
inc
cmp
add
and
xor
xor
mov
enter
movsl
pusha
xchg
jmp
aam
push
leave
mov
xchg
js
push
xchg
iret
loopne
in
xchg
jl
jo
insl
rcll
dec
push
loope
dec
cmp
ret
fildll
mov
inc
ljmp
in
adc
cs
shll
mov
std
xchg
loopne
repz
lea
mov
mov
push
jns
in
mov
addr16
aas
jecxz
inc
mov
add
sbb
inc
xor
and
adc
ret
loopne
mov
pop
outsl
dec
ja
out
call
repnz
jmp
int3
insl
out
lahf
add
jne
push
ja
mov
jl
mov
dec
xor
jno
in
cmp
or
mov
sarl
cmp
cmp
push
xchg
loopne
xor
jecxz
pop
mov
jle
pop
loop
repz
lahf
lret
cmpsl
adc
add
loope
pop
mov
mov
inc
add
stos
gs
aam
mov
inc
mov
mov
jno
xor
pushf
push
scas
les
sub
in
adc
pushf
jno
call
xchg
xor
xor
inc
mov
xor
sbb
add
push
or
sub
cmp
jg
loop
push
daa
test
roll
ds
jg
cmc
mov
xchg
dec
pop
lret
add
outsl
imull
mov
pop
pop
pop
lods
or
movsl
movsb
mov
lods
ljmp
xor
mov
pop
hlt
loop
lock
daa
das
in
xchg
jg
add
scas
xchg
mov
inc
xorl
pop
cmpb
popf
fstpl
push
cmp
sbb
or
mov
roll
aas
mov
in
lea
xor
xchg
xor
xchg
or
and
inc
ret
call
and
sub
out
and
icebp
movsb
outsl
adc
fsub
cli
push
and
inc
jae
push
pop
rclb
mov
cmp
and
fisttps
inc
xchg
mov
pop
jo
mov
imul
cs
mov
js
cmpsl
jno
xor
stos
jle
sbb
sbb
mov
sahf
mov
lret
pop
mov
repnz
outsb
fcoml
lods
js
inc
pop
add
call
js
push
inc
fdiv
cmp
fdivr
insb
stos
mov
iret
js
push
je
outsl
xchg
hlt
pop
repz
fldcw
std
xor
ror
daa
popf
mov
mov
pusha
pop
xchg
cmp
sub
mov
aam
mov
mov
xor
cmp
gs
dec
inc
mov
aam
scas
add
popf
sub
out
or
cmp
mov
popa
mov
daa
add
jmp
stc
jp
iretw
movsl
dec
pop
sbb
pop
inc
fwait
mov
adc
jae
in
lods
out
mov
inc
xor
jno
icebp
mov
pushf
push
xchg
scas
mov
sub
inc
fwait
stos
les
stos
lcall
and
xor
mov
push
in
push
add
jl
lret
fcmovne
adc
outsb
fisubrs
xor
xchg
inc
test
pop
bound
stc
push
hlt
scas
mov
gs
push
mov
sub
inc
add
mov
dec
push
popf
aaa
outsl
xchg
cmpsb
cmpsl
sub
add
hlt
in
cmp
sbb
popf
fbstp
add
test
add
les
mov
jg
aad
les
jl
dec
dec
cmpsb
xchg
adc
mov
xor
movsb
lahf
sbb
mov
push
test
mov
pop
mov
and
imul
fadd
mov
and
cmp
adc
adc
out
clc
mov
imull
jmp
mov
in
loope
aaa
inc
rcll
iret
pop
leave
ljmp
pop
cmpsl
and
pusha
push
repz
test
cmp
imul
movsl
ss
hlt
mov
sub
mov
or
das
mov
pop
in
sub
lret
fidivrl
xchg
faddl
rcrl
sub
mov
int
bound
out
das
mov
fmull
adc
outsl
loope
adc
mov
mov
jo
mov
or
jle
and
dec
xchg
mov
cmpsb
inc
pop
cmp
stos
fisttpll
mov
arpl
sbb
adc
dec
pop
shr
mov
inc
push
push
ja
mov
adc
or
stos
mov
clc
adc
lock
pushf
les
or
fcmovu
fildll
pop
clc
imul
xchg
gs
mov
xor
mov
pusha
js
pop
adc
divb
xor
scas
js
or
push
aad
mov
in
adc
jnp
cmp
sub
dec
stos
loop
push
test
inc
jp
pushf
mov
fstps
sbb
mov
push
das
pop
jg
xchg
les
pop
push
cmpsl
jl
dec
shll
jnp
mov
shlb
jne,pt
insb
cmc
ficoml
insb
cmp
loope
mov
rclb
les
adc
aad
mov
in
mov
push
sub
and
loopne
popf
push
push
push
in
ret
hlt
inc
dec
sbbl
inc
mov
mov
xchg
mov
dec
sub
cltd
mov
aaa
mov
gs
and
mov
cltd
add
or
cs
or
push
pusha
lret
cmp
add
and
mov
bound
in
mov
fwait
mov
ds
andl
in
mov
test
add
into
loope
int
imul
push
sti
jp
and
add
add
out
jne
insb
fisubrl
ljmp
fst
cmpb
in
mov
sub
push
mov
jp
mov
outsl
jbe
pop
ljmp
or
dec
cmp
inc
gs
xchg
push
pop
iret
dec
cmpsl
jmp
lea
cld
add
outsl
outsb
int3
jno
inc
mov
mov
shlb
js
and
pop
or
sar
add
loop
sbb
pop
push
leave
fcomip
mov
insl
ret
push
pop
push
pop
outsl
clc
mov
jmp
fstps
xchg
fnstcw
loopne
aam
mov
sbb
ret
rclb
mov
sti
mov
lret
dec
or
ds
inc
push
adc
xlat
and
popl
xchg
jmp
jns
loop
push
rcrl
and
xchg
pop
sbb
lret
push
cltd
mov
add
lods
lds
add
mov
inc
mov
addr16
xor
andl
adc
loopne
mov
idivl
sbb
mov
js
cmpsb
sti
sbbl
js
fcompl
rep
sub
sbb
daa
sub
je
sub
mov
pop
xor
inc
aam
push
mov
repz
test
add
dec
es
es
or
ljmp
or
push
js
in
pop
call
and
pop
stc
pusha
pop
sbb
inc
adc
push
iret
sub
iret
xor
call
push
cmpb
fcoms
push
mov
jge
push
xchg
shrl
or
dec
fnstsw
sbb
xchg
push
sbb
sti
cmp
jecxz
repz
clc
lret
xor
les
add
push
addb
sti
lahf
or
das
sub
push
mov
cmpl
dec
call
or
sbb
pop
mov
adc
adc
adc
dec
shrb
das
or
sbb
popf
lea
inc
mov
push
pusha
add
insl
gs
fdivr
dec
adc
fwait
mov
sub
sahf
and
adc
sub
ja
imul
mov
or
push
leave
jae
icebp
ret
ret
into
filds
xchg
jnp
jecxz
ret
inc
in
cmpsb
mov
out
lock
pop
mov
xchg
popf
cmp
dec
dec
xor
cmp
lcall
addr16
fsubs
jp
lods
mov
sahf
push
clc
xor
and
sbb
clc
dec
add
push
lahf
rcr
adc
mov
cmp
push
repnz
das
in
data16
cwtl
arpl
dec
mov
fdiv
jl
xor
outsl
mov
xor
test
clts
push
mov
mov
rorl
rclb
add
sub
rorb
mov
mov
push
pop
sbb
leave
or
aad
inc
xor
cmp
fldenv
pusha
rcl
inc
sbb
fistpll
pop
inc
cmp
outsb
lcall
push
mov
adc
xchg
subl
xchg
pushf
push
aaa
xchg
lods
ret
icebp
pop
imul
xchg
roll
jg
push
nop
shufps
pop
imull
sbbb
add
mov
fldenv
pushf
lds
in
lahf
out
andl
repnz
insb
aam
add
sbb
and
mov
fcmovnbe
inc
xor
scas
dec
sbb
inc
xchg
insl
loope
mov
xor
pop
sbb
fs
xchg
mov
lods
test
xor
or
xchg
movsl
push
fs
dec
pop
loope
shll
arpl
das
hlt
orl
out
loop
jecxz
divb
mov
mov
xor
gs
sti
adc
xchg
inc
mov
clc
jns
in
adc
orb
in
sub
mov
push
test
inc
fcoml
cmc
popf
push
hlt
xor
iret
pop
lds
xor
dec
dec
adc
mov
das
mov
xlat
adc
mov
imul
loopne
incb
or
call
ja
inc
insl
adc
push
xchg
lock
jno
fiadds
sbb
sub
fwait
ljmp
adc
sub
inc
xor
adc
push
push
sahf
inc
jmp
into
push
push
stos
repnz
inc
icebp
out
mov
int
imul
or
lret
ss
shlb
push
mov
es
dec
fmul
ljmp
push
imul
cwtl
loope
fsts
and
std
adc
lret
fs
xchg
pop
pop
jo
rolb
test
fldl
sub
rorl
inc
adc
xor
inc
fucomip
gs
mov
negl
mov
fldt
out
push
cld
repnz
rcl
popa
test
xorb
dec
xchg
lahf
inc
pop
lret
pop
dec
add
xor
mov
inc
lock
dec
mov
jo
cmpsl
cmp
popa
test
or
sbb
xchg
jle
jmp
aaa
inc
mov
adc
mov
decl
inc
fsubrs
cmc
xchg
push
loope
and
rcrb
popa
out
lret
mov
or
and
adc
les
adc
bound
jmp
cld
xlat
std
sub
scas
or
mov
aas
pop
mov
daa
and
lss
xor
cmp
pushf
das
ss
sub
repz
sub
cmp
push
inc
lods
jge
loop
add
sub
lea
fsubrs
je
testb
insl
mov
das
les
sbb
popf
stos
jmp
aam
pop
xchg
push
pop
mov
xor
mov
jno
stc
scas
lahf
mov
or
mov
adc
test
mull
sub
mov
mov
pop
loopne
sub
xchg
inc
fimull
iret
mov
clc
test
shl
push
push
call
loope
loop
dec
cmp
add
ret
notl
push
inc
popa
jbe
mov
imul
subl
lahf
es
inc
jb
and
sbb
xchg
dec
xchg
or
and
jno
dec
inc
xor
cmpsb
pop
mov
mov
adc
popa
jg
shrl
imul
cld
dec
adc
inc
jge
cli
and
mov
fwait
sbb
xor
inc
lock
pop
in
cmc
push
sub
or
add
dec
adc
cli
and
sahf
fbld
stos
xchg
popa
fucomip
dec
mov
cmpsb
aad
adc
fsubrp
jne
in
cli
jp
lods
flds
dec
sbb
xchg
xor
aad
xor
and
add
or
adc
fmul
and
jbe
std
jae
and
insb
dec
xchg
aaa
out
iret
lods
dec
negb
pushl
sub
shll
out
or
cli
xchg
das
mov
lret
sbb
fcoml
mov
cmp
jle
mov
cmc
add
pop
mov
jg
gs
outsb
ja
inc
or
call
or
mov
mulb
out
fdivrp
jns
clc
dec
xchg
mov
sub
and
clc
aad
aas
test
or
jmp
adc
add
lods
lret
fimuls
push
adc
push
push
sbb
fcmovnbe
cli
push
xchg
add
in
jnp
test
cmpsb
scas
ret
scas
inc
xchg
push
adc
pop
arpl
mov
lods
lea
filds
mov
add
es
movsl
out
shrb
outsb
jp
xor
sbb
push
addr16
nop
jl
rclb
sbb
mov
lods
jg
ljmp
in
insl
cmp
mov
cwtl
enter
popa
int
test
mov
push
xchg
shll
jns
lock
sub
sbb
in
pop
sti
push
xchg
aam
cs
movl
jmp
dec
jp
rcll
lret
bound
mov
add
das
cmp
dec
sub
test
mov
cmpsb
xchg
lea
sbbb
sub
imul
xor
addr16
sub
sbb
mov
and
add
xor
lea
cmp
sbb
dec
rcrl
andb
jp
pop
shll
fsubrs
loop
in
cmpsb
or
xor
pop
xor
jb
arpl
mov
aad
idivb
push
xor
ret
xchg
fsts
jecxz
sub
js,pn
xchg
shr
lods
jbe
jge
inc
add
sbb
ret
push
cmpsb
scas
jo
inc
inc
push
rcrl
cmpsl
test
add
pop
xchg
jp
js
stos
mov
sbb
jne
sub
ja
sub
pop
in
mov
add
cwtl
xor
jns
inc
cmp
inc
xchg
xor
adcb
mov
fwait
pusha
cmpsb
add
cmp
pusha
sbb
ror
dec
jle
sti
and
inc
and
add
aad
or
mov
pushf
push
cmp
xchg
aaa
jp
js
sub
xchg
enter
lahf
movsb
imul
mov
in
mov
std
cmp
adcl
scas
and
aas
jno
xor
cmp
pop
mov
inc
aas
mov
xchg
inc
jbe
imul
je
ljmp
jbe
daa
jmp
adc
ss
push
xchg
inc
sub
jns
push
ret
int3
lcall
out
movsb
popf
fadds
leave
jp
addb
xchg
andb
mov
daa
repnz
dec
inc
pushf
fs
mov
adc
mov
pop
mov
ljmp
cmp
shrb
fbstp
pop
inc
or
ss
test
sbb
adc
pop
jecxz
in
repnz
xorb
mov
mov
push
in
cmp
jmp
rolb
ror
jl
mov
rorb
aad
test
pop
pop
xchg
insl
mov
cld
xor
lods
pop
and
out
arpl
mov
add
loope
mov
cltd
movsb
inc
cmp
fisttps
popa
dec
scas
jne
push
pop
sub
in
cmp
loopne
imul
sub
rorl
push
xchg
pop
cltd
add
adc
xlat
test
lock
pop
test
adc
sar
mov
sbb
dec
loopne
test
ss
dec
xor
filds
cmp
xchg
mov
int
pop
imul
cmpsl
pop
mov
cmp
pop
add
es
dec
fstpt
fiadds
cmp
xlat
dec
icebp
cmp
adc
cltd
pop
add
gs
xchg
dec
jae
pop
cwtl
aad
popf
jmp
into
lret
adc
cltd
cmp
or
mov
scas
das
rcr
mov
cmp
scas
test
aas
jmp
cmp
mov
or
test
outsb
scas
inc
jp
xchg
inc
mov
fists
mov
add
jne
repnz
inc
push
pop
mov
fdiv
mov
nop
popa
mov
cmpsb
scas
mov
int
jne
cltd
fnstsw
cld
xchg
imul
bound
sti
sub
loopne
jb
bound
jnp
aaa
mov
iret
mov
fstp
decl
mov
dec
ds
or
xchg
sbb
xchg
fcompl
mov
jns
or
out
inc
rcrl
imul
or
pop
rcll
mov
lock
inc
add
aad
mov
xor
jl
jg
inc
xor
mov
xor
push
sahf
lea
dec
jecxz
jo
pop
scas
xlat
sti
scas
xor
ud0
imul
xchg
aad
mov
aas
dec
xchg
nop
pop
sbb
shll
jp
stos
shr
mov
pop
or
jo
fmull
cmp
mov
aam
popf
xchg
cmp
and
inc
pop
nop
xorb
int
notl
ljmp
push
stos
inc
cld
sahf
mov
sub
xchg
ljmp
adc
pop
aad
pop
adc
outsl
jae
imul
ret
add
inc
sub
jmp
mov
jo
ficompl
mov
pop
adc
rorl
sbb
rorl
repz
ret
lahf
rclb
daa
std
jbe
popf
mov
mov
das
fsubs
push
repz
mov
daa
xchg
xchg
out
push
add
push
push
neg
les
data16
das
das
xlat
xchg
pop
inc
insl
test
push
int
dec
jl
inc
mov
push
xchg
xor
xchg
push
iret
xchg
pop
cs
ljmp
fistpl
mov
sahf
mov
repz
pop
adcl
test
imul
inc
jo
cmp
push
cmp
dec
push
popa
sbb
xor
cli
lock
out
jae
cmpsb
fsubr
daa
add
imul
cmpsb
mov
ds
push
in
nop
imul
pop
test
mov
loope
and
mov
lods
pop
es
rolb
mov
sub
inc
add
jbe
sbbl
and
aaa
and
icebp
gs
pop
pushf
sbbb
mov
xchg
mov
pop
xchg
fistpl
push
sub
jge
flds
outsl
jo
mov
mov
scas
push
lods
and
lret
dec
fdiv
mov
jmp
ljmp
icebp
jge
enter
or
jp
lods
stos
out
mov
addr16
cli
dec
aam
fdivs
out
push
jmp
mov
dec
in
dec
arpl
sub
sahf
and
jle
testl
icebp
and
std
arpl
mov
mov
push
dec
xchg
test
addl
scas
scas
shlb
int3
lods
fistpll
sbb
jl
js
push
loop
int
sub
lods
fwait
mov
icebp
test
adc
mov
stos
mov
loop
movsl
jg
stos
addr16
mov
dec
xchg
imulb
aas
aad
and
jp
mov
in
jb
xor
mov
cmp
xor
fwait
and
negb
movsl
pop
data16
mov
add
mov
out
aaa
in
xchg
and
ljmp
cmpsl
stos
pop
pop
clc
divb
mov
dec
lds
mov
loopne
movsl
std
pop
mov
insl
cmc
shlb
cmp
mov
mov
in
out
ret
cli
dec
adc
jl
cmc
xchg
mov
push
and
mov
dec
jo
ret
push
movsl
fs
mov
push
dec
adc
lods
lea
mov
fcoms
pop
movsl
popf
out
test
int3
fdivrs
mov
fidivl
stos
arpl
and
push
lea
xor
imul
jl
sbb
outsb
int
dec
pop
dec
xchg
stos
inc
je
dec
add
jbe
cmpsb
mov
shll
daa
push
pop
xor
add
xlat
fistl
jmp
movsb
mov
dec
xchg
push
inc
jne
sbb
fs
mov
scas
cld
mov
xor
movsb
daa
mov
lret
lret
cmp
sti
sbb
push
dec
adc
pop
add
nop
inc
dec
movsb
cmpsb
cmp
les
ja
das
iret
adc
cmpsl
dec
movsl
push
xor
xchg
outsl
pop
in
mov
pop
test
into
pop
aam
in
out
ss
mov
pop
jb
pop
mov
mov
rcl
inc
cwtl
sbb
ss
jp
pop
pop
cmp
fidivrs
shl
sbb
test
lods
insl
repz
stos
pop
cld
shr
ret
in
loope
lret
adc
pop
and
inc
aam
jecxz
arpl
rcrb
jp
push
and
xor
shll
lods
fwait
cmp
rcl
nop
adc
repz
cmpsl
mov
or
cmpb
shlb
jg
fwait
sti
and
aam
jge
lahf
in
jecxz
in
int3
addr16
jo
insb
sub
push
ret
cli
outsl
jmp
clc
aad
js
dec
push
push
push
stos
aam
rcr
push
out
add
mov
sub
cmp
push
xor
lahf
xchg
adc
stos
imul
xor
or
jp
jp
aaa
dec
ss
inc
mov
clc
sbbb
jl
call
sbb
sub
test
out
dec
mov
cld
movsb
mov
xchg
data16
in
mov
mov
jo
push
sbb
dec
sbb
jno
pop
dec
lea
mov
sti
jl
jg
push
cbtw
mov
fcom
add
inc
jmp
std
lahf
jmp
mov
lret
pop
inc
sti
dec
dec
data16
xchg
xlat
inc
jae
push
xchg
cmpsb
xchg
cltd
test
ljmp
addr16
push
push
add
sub
add
add
inc
outsl
push
or
and
pop
imul
mov
jno
fldcw
cwtl
nop
inc
push
popa
cli
jp
add
dec
add
lods
mov
xchg
cwtl
in
out
mov
movsb
cmpsb
loopne
rorl
iret
aam
jae
push
add
fucom
inc
ja
fsubs
push
mov
xchg
cmp
push
xorl
dec
pop
push
pop
inc
add
movsl
testl
mov
scas
xor
cmpsb
lods
testb
aad
dec
cld
push
call
mov
mov
sub
fisttpl
iret
xchg
aad
push
pop
and
or
icebp
icebp
test
dec
push
rcl
pushf
push
into
mov
xor
mov
mov
jbe
xlat
mov
xor
stos
cmpsl
push
out
inc
fcoml
and
out
mov
xor
std
cmp
xor
push
push
idivb
push
call
or
xor
repnz
out
loop
mov
cmpsl
pop
jmp
xor
xchg
loope
jbe
jnp
push
out
pop
add
mov
or
dec
push
cmc
cmp
mov
xor
inc
push
test
cmp
leave
cli
lahf
mov
or
dec
and
cmpsl
test
dec
call
adc
sbb
push
into
mov
aam
int3
or
outsb
andl
adc
insb
fdivl
mov
jle
subps
inc
rol
in
mov
and
inc
mov
push
test
add
popl
mov
out
push
and
imul
mov
mov
imul
popf
jl
fstpt
out
adc
sbb
xchg
add
dec
in
inc
jl
aas
dec
jle
add
mov
cmpsb
cmp
enter
add
in
add
dec
loope
jl
call
adcb
and
arpl
inc
insl
inc
dec
sub
sub
sub
pushf
negb
push
or
xchg
test
notl
dec
push
insb
pop
push
mov
adc
lock
outsb
mov
xor
rcll
cld
xor
sub
lahf
jmp
xor
mov
cmc
sbb
pop
jno
cli
mov
sub
imul
mov
loope
inc
dec
jns
loop
dec
addr16
xchg
sahf
dec
out
mov
imul
int
outsb
mov
shlb
fcomp
pop
push
mov
je
andl
jbe
push
je
mov
cld
aad
ret
sti
mov
pop
or
jecxz
ja
popf
add
push
addr16
pop
stos
jg
lods
movsb
add
cmp
idivl
sbb
lods
mov
inc
fdiv
push
push
push
cmp
aaa
mov
lods
dec
loop
inc
jne
fmuls
lret
adc
pop
lahf
push
mov
test
cmp
or
out
popa
out
insb
xor
mov
arpl
push
fsubl
mov
xchg
pop
push
in
popf
out
aam
mov
out
aas
pop
mov
push
pop
push
roll
lds
or
popf
xchg
xchg
or
cmpsl
hlt
popf
fisubrl
xchg
out
scas
hlt
jae
cmpsb
xchg
ret
scas
dec
stos
pop
in
cmp
mov
test
lds
dec
mov
sbb
cmpsb
pop
or
mov
stos
jo
arpl
loop
add
mov
stos
cltd
mov
cmc
inc
dec
push
sub
xor
jle
cmp
in
and
dec
aaa
jns
sbbl
and
jo
mov
insb
leave
inc
std
adc
jp
push
jbe
and
in
mov
out
int
lock
push
add
and
push
cs
sub
push
lods
xchg
xchg
pusha
imul
inc
out
cmc
inc
sbb
sub
adc
shrb
frstor
cli
popf
mov
add
xor
mov
sub
hlt
push
aas
rolb
sub
enter
push
cs
xor
in
dec
pop
out
fldenv
dec
orl
cwtl
incb
sub
push
mov
inc
xlat
and
adc
adc
inc
int3
adc
test
pop
mov
jo
ja
pushf
add
addr16
mov
lods
outsl
mov
sbb
pop
xor
pop
sbb
mov
test
add
add
sub
popa
fbstp
add
popf
popa
add
xchg
mov
mov
mov
cld
dec
out
ror
pop
add
jmp
mov
mov
push
adc
mov
mov
jnp
test
xchg
repz
mov
jecxz
into
gs
sub
mov
popf
int3
sub
lods
insb
imul
loope
dec
sub
leave
stos
rorl
xchg
cmp
mov
ja
loope
mov
cltd
test
lea
pop
cmc
xchg
aad
outsl
lcall
outsl
inc
sub
xlat
pop
lods
jle
jl
cmp
shrb
jne
pop
ja
lods
mov
cmp
lods
les
popf
stos
mov
cs
push
add
call
ja
push
add
mov
movsb
or
nop
push
notb
cltd
clc
sahf
adcb
or
nop
dec
and
and
xor
xchg
mov
inc
mov
adc
mov
scas
adc
imul
insl
mov
mov
cmpsb
cmp
push
dec
call
sbb
push
into
rorl
scas
fcmove
cmp
lods
push
inc
jno
cmp
insl
pusha
mov
fcmovu
test
out
sbb
dec
test
add
cwtl
mov
icebp
pop
push
nop
push
cmpsl
sub
add
or
mov
cmpsl
dec
mov
stos
stc
scas
xor
xchg
xchg
mov
dec
popl
add
cld
mov
enter
out
inc
push
rol
in
outsl
push
jbe
push
shll
cmpsb
and
call
in
call
dec
fdivs
adc
paddsw
mov
jg
sub
push
int3
pop
in
fcomi
in
sar
add
dec
sti
lret
or
mov
xchg
test
cmpsl
mov
pop
lret
inc
cli
idiv
xchg
push
xor
les
jb
movsb
xlat
pop
lods
xchg
pop
mov
pusha
pop
jbe
or
repnz
aas
xor
inc
jg
push
lds
out
cmp
sbb
add
dec
xor
pop
popf
jge
push
fimull
mov
jg
aam
xchg
push
mov
faddl
dec
cmp
pop
fstpt
leave
aas
cld
bound
movsl
jmp
cmp
xor
jae
cmp
pop
or
inc
enter
and
mov
shrl
sub
push
dec
js
scas
inc
arpl
addr16
cmp
add
mov
mov
jle
pop
int3
fucomi
das
loope
call
sbb
pop
test
add
jl
cmp
adc
push
mov
mov
jg
cmp
lock
aaa
lea
mov
adc
or
jecxz
xor
je
inc
in
lods
add
mov
jns
mov
push
pop
scas
ret
loope
push
je
adc
insl
inc
js
addb
loopne
xchg
rclb
push
scas
cmp
or
movsl
mov
ds
push
cmc
xchg
add
jns
mov
dec
mov
inc
stos
jns
cld
and
mov
and
push
mov
aam
adc
in
cmc
shlb
add
das
out
sbb
std
arpl
push
mov
and
dec
xlat
push
push
pop
inc
lret
in
out
mov
fdivl
cwtl
lcall
push
outsb
jle
mov
jle
adc
push
mov
scas
lret
inc
pop
mov
mov
ret
adc
sbb
shll
and
dec
mov
stc
mov
sbb
mov
pop
push
or
rcrb
xchg
pop
cmp
mov
pop
xchg
pop
loopne
pop
nop
ja
enter
clc
sub
divl
adc
pop
out
lcall
xchg
shll
mov
pop
imulb
lea
sbb
xchg
or
fmulp
cwtl
adc
sahf
mov
xchg
movsb
aam
popa
aad
dec
and
jmp
cld
fnstsw
lods
add
xchg
mov
xchg
cmp
into
int
lods
adc
loop
mov
call
and
adc
cltd
add
lret
gs
push
add
daa
or
cmp
sbb
scas
sub
pusha
jo
dec
xchg
jg
insl
mov
xor
jecxz
dec
mov
jge
inc
jmp
loopne
or
lcall
outsb
or
push
pop
sahf
test
and
mov
cmp
loopne
cmp
xlat
dec
ja
out
xchg
mov
dec
test
pop
loope
leave
in
aam
mov
test
xchg
sti
lds
push
fnstsw
or
fistps
fcoms
or
imul
out
roll
enter
sbb
stos
and
mov
cltd
inc
shrl
xor
insb
sbb
cld
add
scas
cwtl
sub
in
enter
sbb
jg
and
mov
sub
lahf
mov
mov
outsb
xchg
or
les
xlat
mov
out
push
and
cmp
lret
icebp
adc
in
aam
sbb
inc
mov
outsb
test
cwtl
mov
xor
cmp
push
lds
sahf
mov
add
mov
loopne
shrb
sub
pop
add
mov
mov
data16
pop
daa
xchg
adc
mov
fs
pop
das
int
shr
scas
push
cmc
or
iret
jecxz
jno
push
pop
xchg
sub
cmp
push
and
js
mov
sbb
dec
repz
inc
inc
mov
mov
add
inc
mov
xchg
dec
in
pop
mov
sub
out
ret
jmp
inc
jb
insb
ljmp
jle
mov
inc
xor
cmc
in
push
addr16
xor
and
adc
sub
lret
or
idivb
call
icebp
add
cmpsb
int
jl
cmp
jge
xor
loope
sbb
rorb
popf
mov
mov
push
lret
ret
dec
push
test
shll
in
add
repnz
or
xchg
into
aam
jge
lods
xor
and
mov
mov
cmp
mov
push
or
mov
dec
mov
scas
movsb
cmp
lock
pop
aam
movsb
mov
pop
xor
icebp
stos
dec
fiaddl
or
or
mov
clc
movsl
lods
jo
shr
enter
dec
mov
clc
mov
fwait
stos
inc
leave
stos
mov
push
movsb
mov
and
fmull
sbb
sub
stos
dec
mov
push
mov
or
add
inc
js
sub
xchg
ret
add
dec
push
mov
test
and
mov
mov
push
out
push
out
jne
jae
xchg
cmp
aaa
std
jp
or
push
xchg
cli
iret
xchg
mov
jecxz
mov
shlb
mov
call
ja
mov
jecxz
cmp
arpl
lahf
jo
sub
dec
cmp
jne
add
push
lret
sub
insl
lret
pushl
clc
loope
ret
mov
ret
xchg
xor
idivl
fnstsw
filds
inc
mov
cld
xchg
pop
pop
sti
loopne
stos
les
out
ljmp
cmpsl
insb
dec
mov
xchg
mov
mov
into
es
or
xchg
lcall
cmpb
shlb
gs
xor
cmp
lahf
fstps
dec
pusha
mov
fidivrl
nop
jb
push
arpl
adc
not
out
out
addr16
xchg
jae
stos
sbb
aaa
imulb
cwtl
movsl
jmp
push
sbbb
sub
xchg
mov
out
adc
int3
push
xchg
jp
movzbl
adc
push
out
jae
inc
inc
or
push
inc
das
jecxz
mov
mov
mov
fsubl
fsubrs
inc
push
dec
lds
sbb
das
xor
fucom
and
mov
inc
push
sbb
iret
add
repnz
iret
add
xchg
push
sub
dec
adc
push
fcomip
iret
int
maskmovq
mull
ljmp
jge
inc
in
pop
mov
push
xor
jae
scas
aas
push
pop
shl
leave
xlat
test
dec
xchg
rol
xchg
ret
and
js
cmp
cmpsl
or
jnp
mov
jmp
jl
sbb
inc
cwtl
in
stc
xorb
add
sub
pop
push
pushl
mov
inc
scas
andb
fbstp
jo
mov
mov
push
lods
mov
jp
lods
in
mov
das
subb
add
lret
add
inc
imul
sub
daa
cs
jns
lods
fs
sarb
sahf
adc
sub
push
insl
dec
sbb
stos
cmp
dec
jo
push
and
and
into
and
xchg
outsl
dec
fimuls
sbb
xchg
mov
jl
mov
jge
movsb
out
test
xchg
push
push
out
mov
mov
fsubrl
mov
xor
xlat
outsl
fwait
cmp
scas
iret
and
test
repnz
rorb
lret
mov
xchg
imul
mov
dec
in
jecxz
sub
add
xchg
inc
sbb
icebp
xor
cmpsb
cs
dec
add
mov
xchg
mov
cmpsl
jge
les
mov
mov
outsb
sub
and
shll
push
in
inc
xchg
enter
dec
or
les
lea
dec
sti
mov
sbb
push
lods
mov
pusha
jae
xchg
push
add
xchg
sub
movsl
out
sub
rorl
loope
repz
aaa
out
stc
adc
stc
clc
movsb
notb
dec
icebp
scas
adc
outsb
es
pop
pop
sub
sub
repnz
pop
sbb
and
cmpsb
mov
outsb
sub
xchg
jae
xor
add
xlat
mov
xchg
push
push
dec
loopne
mov
jbe
and
sub
dec
loopne
lock
sbbl
test
xorb
gs
cli
iret
inc
rcll
dec
push
movsb
imull
cmp
fld
out
lea
testl
xchg
push
rcll
popa
sub
cmpsl
sub
pop
sbb
mov
jns
mov
cmpsl
out
leave
or
xchg
pop
sub
ja
pop
out
mov
sub
pop
sbb
pusha
sub
add
dec
push
enter
out
rcrb
out
xchg
push
sub
add
stos
bound
mov
inc
dec
add
dec
mov
jecxz
mov
adc
adc
xchg
cmpsb
fnstcw
dec
push
adc
sarb
jno
push
aam
and
push
adc
stos
push
cmp
inc
adc
in
inc
stos
cltd
fdivl
xorb
mov
push
adc
cmp
xchg
stos
jae
inc
or
mov
out
inc
cmp
pop
sbb
out
jge
mov
sub
fistpl
pop
aas
push
test
stc
negl
push
mov
aam
aad
add
jae
pop
xchg
jbe
test
pop
inc
mov
pusha
lret
mov
rclb
repz
ss
sbb
and
sbb
xor
and
mov
leave
xor
pop
js
fisttps
pop
dec
add
mov
in
mov
pop
rcr
iret
ja
xchg
mov
mov
in
xchg
mov
jns
pop
and
cmp
shlb
mov
sbb
xlat
mov
mov
xor
pop
mov
sbb
ret
in
scas
adc
jg
sbb
mov
mov
cmpsl
pop
fmulp
lahf
pop
and
fistpll
mov
imul
and
pop
repz
ja
adc
mull
sub
add
push
inc
and
sub
push
shll
adc
js
jg
ret
out
xor
dec
add
xor
scas
clc
jns
push
call
or
mov
mov
pop
and
adc
cmp
sub
cmp
sbb
loopne
lods
lret
inc
mov
sub
inc
loope
and
cwtl
mov
mov
pop
add
inc
daa
in
lcall
push
flds
push
add
outsl
push
sbb
mulb
mov
rcrl
test
out
cmp
sbb
mov
push
shlb
xchg
repnz
int
or
or
dec
sub
pop
mov
enter
adc
fcmove
push
ljmp
lds
loope
sbb
mov
pop
rcl
dec
roll
mov
xor
sub
repnz
std
aam
and
pop
add
popl
fprem1
sub
sub
add
sub
fimull
and
cwtl
and
mov
xor
mov
out
cmpsl
daa
imul
pushf
sbb
test
jae,pt
mov
sahf
jp
jl
out
test
cmp
adc
adc
jmp
js
inc
les
gs
push
dec
rcl
lock
pop
gs
addr16
fists
cld
shll
enter
mov
push
pop
paddsb
out
movsb
mov
and
lea
sti
cwtl
cmpsb
mov
sub
jmp
in
outsb
jle
adc
jbe
cmp
arpl
mov
sub
mov
mov
mov
nop
or
aad
xchg
sbb
mov
adc
xchg
xor
lds
mov
cmp
cs
daa
mov
adc
fisubs
movsl
and
or
dec
dec
or
cmc
aaa
enter
push
sti
cmp
out
test
cmp
xlat
pop
inc
out
int3
rorb
clc
test
dec
xchg
nop
xchg
add
movsb
ret
std
outsb
inc
fldcw
xor
sub
push
out
pop
mov
lret
insb
lahf
jle
sahf
jbe
test
pop
push
sub
dec
int
or
cld
stos
and
dec
adc
lods
mov
pop
cmpb
push
mov
add
cmpsl
adc
mov
or
pusha
call
add
or
push
or
insb
adc
cmc
xchg
push
cmp
push
ret
rcr
push
movsb
cmc
or
xorb
add
leave
mov
cmpsl
lods
sbb
into
out
mov
test
data16
jge
ljmp
add
je
add
sbb
cmpsb
lods
inc
icebp
jbe
pop
jnp
jge
inc
test
xchg
js
rcrl
cwtl
js
icebp
mov
pop
and
popa
cmpsb
out
repnz
pushl
test
mov
jbe
adc
icebp
jbe
data16
rcl
movb
outsl
cs
hlt
push
cmpsl
je
cmp
jne
xor
dec
dec
inc
ficomps
insl
popf
mov
and
ret
inc
test
es
lods
inc
pop
lock
or
mov
cmc
jg
dec
or
repnz
dec
popa
outsb
add
loope
dec
js
iret
out
je
loop
rcrl
std
out
cmc
lret
add
cmc
mov
xchg
aad
cmp
push
addr16
sub
cmp
lret
repnz
outsb
inc
pusha
pand
mov
inc
add
lock
cwtl
icebp
nop
mov
imul
adc
fs
jecxz
test
cmp
sub
xor
je
dec
loop
test
and
mov
adc
test
jae
and
lock
xorb
and
aad
jmp
dec
ret
mov
or
fistl
pop
or
or
inc
in
or
pop
movsb
clc
push
jge
ficomps
sbb
cmp
mov
sub
mov
and
xchg
pop
mov
aam
arpl
insb
mov
je
or
fcoml
out
inc
xlat
sti
les
adc
cmp
sahf
pop
aaa
push
mov
insb
sti
roll
sub
sbb
pop
dec
adc
cmc
mov
imul
jecxz
xor
inc
mov
cmpsb
push
or
lcall
jae
jb
or
fstpl
cmpsb
jns
sbb
pusha
les
add
pop
push
subb
call
fsts
and
jns
xor
and
out
and
pop
icebp
lds
fidivrs
aaa
fadd
and
out
in
mov
shll
addr16
cmp
mov
jne
mov
mov
iret
outsb
push
sub
into
andb
inc
and
xor
sbbl
aam
or
hlt
cmp
cmpsl
repz
xchg
push
mov
and
icebp
jg
adc
rolb
mov
dec
jbe
lret
xor
ljmp
sub
inc
ja
test
inc
in
mov
mov
and
mov
xlat
and
pop
mov
xchg
je
out
outsl
lock
stos
shll
sbb
paddw
enter
repnz
xlat
add
mov
cs
sub
and
cmp
adc
mov
pusha
pop
insb
mov
stos
cmpsb
mov
pop
jb
loope
jns
jnp
or
imul
mov
push
push
daa
ss
orb
xchg
fistl
cwtl
jb
stos
adc
push
pop
sub
jmp
sub
iret
enter
sbb
mov
cmp
sub
je
jnp
test
sub
leave
inc
mov
mov
mov
and
pusha
fs
xchg
insb
sbb
test
jge
aaa
dec
shr
outsl
loop
in
int
jge
jo
dec
dec
adc
or
pushf
pusha
jle
popa
push
dec
fistps
sahf
call
adc
jns
stos
sbb
dec
jg
cmpsb
mov
pushf
lahf
dec
dec
mov
mov
mov
pop
and
scas
std
cld
cs
sbb
xchg
inc
pop
fwait
pop
cmpl
push
jo
xlat
jge
in
ss
gs
in
scas
mov
pop
xor
je
cmp
loop
aas
orl
or
daa
aam
ds
dec
loop
sbb
inc
leave
push
lods
sbb
sahf
test
push
pop
mov
push
add
js
pop
insl
mov
xor
jl
sahf
ret
and
and
xchg
mov
xchg
push
mov
les
fistps
dec
ret
push
stos
and
out
push
lods
add
mov
addb
mov
in
inc
mov
mov
cmp
sub
fsubs
imul
aam
in
int3
sahf
nop
out
push
sub
or
hlt
fcmovu
add
jns
inc
inc
dec
pusha
filds
lods
fs
sti
xor
lret
jne
mov
xchg
divl
mov
mov
outsb
data16
fcoms
mov
test
dec
push
lret
push
dec
lea
dec
popf
mov
iret
mov
std
mov
adc
xchg
and
xor
pop
jb
sub
jecxz
popa
pop
dec
in
fcoml
jbe
scas
jbe
je
jne
sahf
subl
xor
out
sub
or
jo
aad
xchg
pop
in
imul
mov
xlat
dec
mov
sbb
imul
and
movsl
mov
inc
mov
jae
pop
xchg
push
repz
dec
pop
test
mov
pop
cs
sbb
mov
lcall
in
sub
mov
mul
pop
pop
or
lcall
push
imul
in
mov
push
xchg
mov
inc
int3
std
lahf
dec
or
sbb
cmpsl
or
lds
out
pop
dec
int3
std
inc
repnz
inc
add
xor
push
out
ficomps
shlb
iret
test
adc
mov
in
cli
int3
push
popa
jle
subl
ret
pushf
xchg
jge
insb
aas
lret
push
outsb
sub
stos
nop
xchg
mov
lds
xchg
mov
rcrl
mov
xor
movl
roll
pop
jge
dec
sti
mov
dec
rcrl
mov
xchg
rcrl
mov
ret
es
pop
jmp
insl
dec
add
fwait
push
sub
mov
lods
icebp
mov
lods
cmp
xchg
fisttpll
sbb
pushf
xchg
sbb
jl
lods
test
and
cld
xor
fcomps
sub
dec
cltd
sbb
bound
dec
mov
cmp
or
xchg
mov
popa
jle
out
loope
ficomps
mov
xchg
inc
cmpsb
add
inc
clc
inc
cmc
jno
jae
cltd
sbb
movsb
dec
fistps
stos
in
fwait
adc
andl
in
inc
dec
movsb
xlat
lea
mov
add
aaa
shll
push
xor
clc
insb
mov
dec
xchg
gs
bound
stc
pop
es
add
sbb
cmp
sub
or
mov
mov
mov
div
jecxz
enter
insl
lret
adc
rclb
mov
add
test
cmpsl
xchg
xchg
xchg
cmpb
lcall
cltd
mov
add
ja
loop
cmp
pushf
inc
ret
cmpsl
sbb
shlb
jne
in
pushf
add
sub
aam
xchg
fidivs
popa
icebp
arpl
rolb
mov
sbb
push
ffree
dec
xchg
xorb
pop
sbb
lret
push
in
ljmp
push
adc
fsubl
inc
icebp
pushf
or
dec
cmpsl
pop
adc
mov
mov
notl
or
or
sti
mov
xchg
inc
jle
call
ret
popa
cmp
push
push
out
add
fwait
lods
in
pop
imul
outsl
out
stos
sahf
ret
pop
lods
test
sub
je
xor
pop
jo
lods
add
leave
out
aam
xor
pop
xchg
int
cmpl
rclb
std
mov
sti
inc
int
lock
and
dec
pusha
pushf
push
pop
sbb
mov
jl
xchg
mov
ret
and
imul
aam
ss
jns
insl
push
pop
sti
or
fwait
mov
or
mov
test
push
xor
adc
lods
pop
inc
adc
cmpl
cltd
mov
pushf
adcl
xor
xor
out
push
sahf
or
loopne
ret
mov
cmpsl
adc
fcoms
jg
adcl
in
or
fdiv
cmp
rclb
jmp
push
adc
lods
ficoml
mov
stos
lret
arpl
mov
bound
aaa
push
pop
subl
add
mov
sbb
xor
add
jnp
pop
mov
rcl
mov
cmp
mov
jnp
adc
and
xor
cmp
mov
mov
pop
rol
fwait
sbb
mov
arpl
into
cltd
je
push
xchg
lret
icebp
sti
in
in
ds
cmpsl
and
lea
mov
inc
mov
xor
and
out
loop
lods
mov
add
or
clc
adc
iret
push
sbb
scas
cli
adc
bound
aad
adc
push
inc
sub
mov
dec
push
in
sub
jae
push
jg
stc
rorl
inc
testl
mov
mov
xlat
and
cmpsb
mov
int
adc
jp
inc
adc
insl
mov
faddl
push
test
pop
fiaddl
pop
lods
popa
lock
leave
xorl
inc
mov
lock
xchg
xchg
xor
inc
repz
nop
insb
adc
or
enter
fs
add
aaa
imul
arpl
repz
out
pop
mov
mov
sti
and
push
cmpsb
pushf
push
dec
sub
adc
sbb
xchg
xchg
imul
cmpsb
or
jecxz
push
dec
xchg
push
movsl
cmp
jbe
xchg
jae
mov
jmp
leave
jno
jnp
cmpsb
js
sbb
dec
dec
fwait
dec
sbb
and
leave
inc
pop
call
jg
sub
jno
jb
pop
xor
add
sti
cs
hlt
mov
std
jg
mov
daa
xlat
imul
movsb
mov
mov
int3
sti
inc
stos
pop
cmp
push
fldenv
push
mov
pop
jle
loopne
out
mov
xchg
ret
int3
or
xor
out
sub
rol
and
mov
popf
push
in
xchg
push
imul
xor
lcall
inc
sarl
arpl
enter
test
push
push
xchg
or
mov
addr16
mov
stos
adc
mov
call
fisubl
dec
out
arpl
inc
std
cld
mov
sub
sbb
fnstcw
pop
jle
adc
xchg
cltd
add
push
sbb
arpl
sbb
shlb
lods
lds
in
outsl
fidivl
fidivrs
call
sub
mov
xor
std
jl
scas
in
bound
adc
mov
mov
push
out
sub
lods
shlb
adc
sarl
sub
jl
scas
testl
loopne
cmp
adc
icebp
sbb
xor
ret
dec
xchg
mov
mov
xchg
and
push
xor
out
or
dec
fldt
ss
mov
dec
decb
out
shlb
cld
cwtl
cmp
cmp
sub
add
sbb
jnp
or
jne
nop
sbb
mov
jno
or
adc
outsl
sahf
jno
into
pop
rorl
xchg
push
sub
sub
jb
js
dec
adc
mov
out
std
lods
jmp
imul
pop
jg
pop
cmp
adc
push
outsb
cltd
stos
jbe
dec
sub
sub
out
ret
loopne
bnd
pop
dec
and
scas
in
imul
in
mov
cmp
push
xor
jb
scas
cmp
xor
outsw
lret
mov
dec
fldenv
fwait
or
sub
pop
sarl
sbb
dec
in
popa
ljmp
repz
sti
or
xor
push
or
aas
mov
pop
bound
arpl
stos
test
jne
leave
mov
mov
stos
pop
jbe
test
xorl
pop
sbb
mov
ret
push
jo
push
int
add
add
iret
inc
stc
mov
lds
push
testb
dec
mov
jl
jmp
rcl
mov
xchg
dec
mov
cmp
lcall
pop
mov
xlat
mov
rep
sbb
xor
sbb
push
xchg
push
test
sub
pop
in
sub
pop
aas
sarl
add
es
adc
daa
or
je
repnz
sub
sbbl
mov
or
jne
dec
insb
pop
aaa
js
xchg
xchg
stos
shrl
add
push
mov
cmp
jg
push
mov
add
aam
or
inc
xor
in
mov
test
aad
fwait
pusha
cld
push
pop
out
stc
movsl
xor
jg
pusha
jnp
cmp
fstps
jnp
mov
pop
ds
sub
add
sbb
rorb
xchg
jg
jo
testl
lcall
popa
cmpsl
mov
out
jecxz
cmp
or
add
xchg
lea
sub
dec
lods
inc
sbb
cmp
movsl
jns
dec
push
inc
ds
pop
int
mov
jns
lock
adc
xchg
mov
and
xchg
cmc
out
stos
jp
cmp
iret
adc
jmp
and
push
ss
sar
jle
sbbb
jno
sahf
cmp
fwait
sbb
sbb
jnp
mov
ja
adcl
inc
cmpsb
sbb
insb
xchg
xor
and
xchg
lea
jp
add
mov
pop
jbe
adc
jecxz
pop
sub
push
ret
jl
lret
and
pop
sbb
ret
or
inc
clc
shl
mov
mov
outsl
dec
xorl
mov
data16
stos
fs
loope
scas
cmpsb
mov
sub
addb
insb
rclb
pop
xor
lret
inc
inc
push
cmp
icebp
mov
cmpsb
push
push
cmp
frstor
xchg
mov
fistps
push
pop
pop
cmp
xlat
lahf
jge
xlat
leave
mov
std
lahf
into
xor
xchg
js
jmp
sbb
inc
push
cmpsl
sbb
push
loop
dec
mulb
in
add
mov
mov
cli
rcrl
dec
pop
lock
mov
or
xchg
ljmp
or
aas
jp
sar
sarb
lods
cmpsl
mov
mov
jecxz
xchg
or
ss
cli
mov
popf
dec
xor
ret
cmc
jnp
pop
and
inc
or
cmp
adc
in
jnp
lods
add
ror
lods
jns
test
in
arpl
int3
aaa
lods
es
mov
int
inc
loope
loope
loop
or
movsl
nop
mov
sti
sub
or
and
lret
dec
add
popf
xor
repz
ljmp
sbb
aad
sbb
jle
scas
xchg
repz
outsb
scas
mov
leave
icebp
xlat
cmpsb
sub
call
int
inc
adc
mov
inc
loope
lahf
in
lret
or
mov
xor
aam
pop
mov
pop
sub
bound
jae
mov
divl
jg
pop
inc
sarb
mov
loop
data16
sbb
sbb
jg
pop
xchg
leave
pop
mov
scas
push
or
sub
dec
pop
xor
addr16
or
xor
lcall
movsb
adc
dec
jb
push
jg
cmp
imul
or
popf
icebp
push
jns
push
sbb
adc
addr16
sahf
sbb
jno
mov
rcl
sti
adc
repnz
lds
in
iret
mov
arpl
jge
add
and
push
fnstsw
mov
fistps
sub
pop
cltd
out
mov
jb
inc
movsb
jae
inc
mov
mov
jnp
cld
dec
add
testb
and
xchg
negl
cld
inc
fcompl
aas
add
push
lds
mov
and
nop
and
hlt
enter
lret
stos
sbb
fsubp
xchg
sbb
push
les
sbb
in
dec
xchg
jb
lcall
jne
inc
sub
adc
call
dec
xchg
xor
shr
or
mov
popf
pop
repnz
outsb
cmpsl
mov
in
pop
inc
push
gs
push
cwtl
cltd
clc
ds
bound
mov
sahf
xor
lods
shll
cmp
arpl
inc
pop
shl
mov
out
test
and
mov
mov
mov
xor
lock
inc
dec
loopne
ljmp
cmp
sbb
lods
cmp
mov
and
mov
jb
fwait
cmp
mov
fstl
shlb
pop
xchg
and
aas
xchg
mov
negb
incb
cmp
cmp
cmpsb
mov
in
fistpll
sbb
cltd
pop
dec
add
jne
mov
xchg
mov
push
notl
add
aaa
push
ss
in
addr16
popf
or
scas
xchg
mov
aaa
jb
jge
pop
cmpsl
in
mov
pop
xchg
mov
inc
bound
push
or
sub
dec
mov
dec
cmpl
ljmp
xor
in
enter
and
inc
mov
xchg
mov
addb
adc
push
sub
repnz
int3
mov
pop
xlat
adc
inc
mov
or
jmp
xor
imul
or
lods
aaa
aas
insb
es
push
ret
lods
mov
add
adc
mov
ror
and
xchg
pop
shrl
jecxz
sbb
adc
cmp
sub
push
mov
mov
es
cmp
sbb
sbb
inc
mov
jge
stc
xor
mov
shrl
xchg
leave
sbb
idivb
mov
popa
arpl
mov
lods
dec
fldenv
int
push
mov
pushf
jle
inc
in
xor
push
sbb
inc
std
adc
xlat
add
sarb
ljmp
or
imull
pop
push
push
jno
fs
mov
adc
pop
data16
push
cmp
pop
popf
lods
lcall
cmp
and
das
loope
dec
mov
xchg
sub
cli
and
dec
pop
jno
cmp
in
idivb
pop
dec
int
jo
ja
sbb
fwait
insl
cmp
cli
leave
xchg
clc
roll
pop
je
sbb
push
xlat
out
rdtsc
lods
jnp
pop
dec
fdivs
loope
lock
sub
mov
mov
adc
dec
pop
mov
ja
xchg
ds
push
jecxz
das
movl
push
fwait
js
adc
test
pop
bound
add
test
pushf
in
jp
mov
std
rclb
xor
imul
nop
mov
sub
adc
push
xor
mov
fwait
das
pop
pop
xchg
lods
out
test
psubd
xchg
arpl
out
pushf
jp
mov
pop
add
aad
aas
mov
lea
mov
mov
cmp
cmpsl
sub
dec
jbe
jo
push
out
push
inc
sbb
lea
inc
lahf
cmpsl
lret
dec
inc
bound
mov
jmp
jl
outsb
leave
stos
clc
call
shrb
xor
insl
mov
mov
or
sub
pop
jae
in
movsl
and
imul
fbstp
test
xchg
lods
mov
rorl
loopne
or
pop
in
cmp
in
mov
jae
aam
add
push
outsl
test
xor
mov
imul
push
lods
aas
aam
cmpsl
pushf
fildl
mov
je
push
cmp
push
pop
xor
mov
mov
mov
movsb
xchg
inc
mov
sub
icebp
rcll
adc
xor
jg
in
arpl
add
pop
enter
mov
inc
mov
aaa
fs
jb
or
mov
add
dec
mov
mov
rolb
mov
repnz
repnz
fcos
xor
pop
push
mov
xor
jmp
rorl
clc
mov
push
sbb
or
imul
rcll
ret
aaa
xor
in
cli
or
jnp
clc
jmp
stos
mov
add
mov
cmpsl
rcll
mov
lahf
scas
ret
fistpll
std
inc
or
movsl
sbb
cmp
jg
out
adc
mov
push
sub
in
pop
fwait
dec
push
or
add
jne
xor
hlt
cld
movsl
dec
push
pop
icebp
jl,pt
and
mov
xchg
mov
call
gs
xorb
loop
inc
and
mov
and
adc
adc
add
inc
or
ret
sub
in
mov
mov
adc
gs
sbb
xlat
shr
lods
in
jmp
pop
xchg
lea
mov
pop
jg
mov
in
or
mov
and
xchg
mov
aaa
imul
aad
add
dec
cmp
xchg
push
out
test
dec
sub
mov
ret
sub
add
cmp
push
mov
insl
aaa
mov
jbe
cli
pop
leave
fcoms
mov
push
mov
cwtl
push
jno
fimull
lret
xlat
pop
jmp
sbb
mov
fsubrl
jnp
arpl
mov
and
xor
int
leave
pop
mov
sub
jnp
pop
data16
push
ljmp
mov
push
sub
out
pop
hlt
pop
cmpsb
dec
cs
pop
pop
or
inc
xor
dec
adc
mov
in
clc
ljmp
andl
inc
sub
jge
or
and
repz
movsl
ds
stos
sub
lods
inc
les
adc
cmp
xchg
add
int
pop
and
mov
push
cli
sub
xchg
jns
cltd
add
aaa
mov
adc
lock
pusha
insl
mov
aaa
sbb
movsb
inc
sub
hlt
mov
cmpsb
sub
negb
xor
pop
cmpsl
cli
add
shll
negl
adc
pop
std
sbb
jns
or
xchg
pop
aas
das
cltd
pop
pop
outsl
inc
cmpsb
test
or
nop
push
mov
ljmp
mov
clc
jbe
fldl
cmpsb
xchg
cmp
push
cmp
jl
adc
dec
int
stos
sub
nop
cmp
xor
lret
xor
sahf
and
mov
int3
mov
in
js
out
jecxz
jne
mov
mov
pop
mov
pop
ret
sbbb
or
inc
mov
adc
mov
add
rol
add
movb
xlat
and
pop
inc
fists
mov
sbb
pusha
aaa
imul
pop
jo
jb
das
dec
aad
xor
mov
testb
hlt
pop
out
xchg
adc
sub
add
inc
ret
clc
dec
sub
stos
xor
imul
lds
sbb
mov
stos
adc
rorl
cmpsb
mov
sub
push
cltd
repnz
and
mov
out
ljmp
jecxz
flds
outsb
dec
xor
insl
mov
ja
das
imul
cmp
or
in
sbb
imul
xor
xorl
nop
fidivrl
adc
push
and
sub
sub
leave
mov
mov
push
orl
loope
adc
sub
sub
jg
cmp
into
stos
ret
nop
xchg
addr16
xchg
aaa
ja,pt
inc
push
stc
pop
js
inc
aas
sbb
xchg
mov
clc
in
js
repnz
sbb
jo
in
lock
mov
js
lret
mov
sub
stos
jp
pop
in
mov
mov
loope
inc
pop
push
pop
pushf
fcoml
out
xchg
enter
popa
add
int3
iret
adc
lods
sbb
add
mov
fs
mov
std
push
fdiv
addl
mov
push
inc
jecxz
xor
adc
int3
jno
mov
sbb
jo
push
scas
cld
adc
jge
rclb
pop
push
sub
jno
decb
out
and
adc
jo
xchg
fiadds
scas
xchg
mov
loope
push
fidivrs
enter
daa
mov
enter
addr16
push
pop
loop
out
cwtl
fs
jp
test
and
loopne
adc
fidivrl
xchg
mov
jno
xchg
xor
dec
shlb
in
orl
adc
imul
pushf
arpl
aaa
xchg
cld
lcall
ja
dec
insb
or
adc
push
dec
adcl
fdivrl
fcoms
scas
mov
aaa
push
sarl
inc
mov
mov
mov
out
sbb
push
insl
push
addr16
daa
nop
dec
mov
and
insl
lcall
push
adc
sub
jno
dec
out
aas
lret
mov
aaa
or
ja
xor
inc
jecxz
sbb
pop
inc
mov
and
push
sub
les
cmp
pop
in
sar
sub
inc
cmp
sbb
xor
sbb
loop
xchg
mov
fstpl
insb
rorl
inc
push
jle
sub
sbb
pop
ljmp
lret
push
jb
shlb
sbb
int
arpl
mov
inc
hlt
arpl
inc
adc
pop
sbb
lahf
push
lahf
fbstp
in
fcomp
xchg
push
orl
dec
pop
adc
out
dec
popf
pop
arpl
push
aas
lret
add
sbb
jge
mov
lret
dec
xchg
push
inc
daa
mov
fdiv
dec
jmp
mov
mov
pop
shlb
push
jo
fbld
xchg
lock
push
fnsave
cmpsb
cmp
loope
xchg
mov
push
test
push
xor
andb
dec
mov
int
add
push
rol
xchg
push
movsb
jl
shl
les
or
pusha
adc
pop
dec
push
ficoms
in
xor
push
pusha
or
cmp
aas
adc
lahf
jl
add
push
dec
dec
insb
mov
out
ljmp
cld
rol
push
adc
fs
pop
push
add
sbb
ljmp
sbb
cld
cld
cwtl
pcmpgtd
loope
insb
bound
out
out
scas
xchg
in
in
jae
repz
inc
cld
mov
idiv
sbb
dec
cmp
jae
mov
dec
insl
icebp
sbbl
negl
lahf
sbb
adc
dec
js
lcall
fsubr
or
inc
nop
mov
sbb
mov
loope
xorb
dec
adcl
mov
scas
fnstcw
xchg
inc
dec
sub
daa
xchg
loope
adc
pop
fstpt
imul
or
xchg
mov
loop
inc
xor
fbstp
fsubrs
sub
pop
and
adc
insb
movsl
das
cmp
jecxz
inc
inc
sbb
adc
sbb
jp
sub
dec
ss
dec
sbb
pop
out
popa
adc
pop
test
adc
push
call
mov
inc
mov
negb
outsb
jp
cwtl
dec
jno
in
sub
jo
je
imul
push
stos
ja
into
leave
xor
mov
push
and
sbb
sahf
jb
push
sbb
sub
sub
sub
inc
iret
jns
sbb
andl
pop
sub
cltd
fs
fsts
xchg
mov
add
sti
fisubrl
jbe
or
arpl
dec
fsubrs
mov
repz
aam
popa
adc
scas
sarb
lahf
lods
pop
mov
sbb
inc
xchg
dec
hlt
lods
loopne,pn
mov
nop
jns
pushf
dec
shll
inc
jb
mov
xchg
fbstp
push
in
into
in
add
stos
fadd
inc
add
ret
test
loope
mulb
or
or
dec
daa
mov
jo
cltd
sub
cmp
mov
fwait
jns
out
outsl
lret
pop
mov
clc
inc
sbb
fmuls
cmp
in
mov
ret
adc
shrb
jecxz
xlat
mov
mov
jp
incb
inc
jne
xlat
jne
outsl
aas
mov
mov
pop
push
enter
shll
test
cmp
sub
cld
push
xor
fstpt
pop
dec
insb
cmpsl
dec
xor
or
loopne
jo
or
les
xchg
or
xchg
or
cmp
sbb
repnz
pop
addl
mov
and
pop
mov
add
mov
inc
pushf
and
mov
loopne
jne
pop
xchg
and
and
jne
xor
push
xchg
sub
adc
in
fcomp
dec
adc
cmp
mov
adc
adc
mov
and
sbb
scas
loop
out
arpl
call
jne
call
pop
or
mov
add
mov
xchg
sbb
cmp
setp
repnz
shll
xorb
push
xchg
ret
push
cmp
pop
jne
and
jno
insb
sub
cmp
dec
cmp
adc
pop
dec
cli
pop
inc
and
adc
fldcw
mov
out
push
pusha
push
xchg
fbld
mov
add
cmp
and
mov
pop
jbe
sbb
and
mov
push
adc
loope
xlat
xchg
dec
pop
mov
outsb
int3
clc
push
mov
xchg
mov
dec
ret
in
mov
or
pop
jno
addr16
bound
movsl
push
push
cmpsl
sub
outsb
or
xor
dec
jns
pop
ja
xchg
test
sbb
and
dec
cmp
pop
adc
mov
mov
and
inc
adc
push
push
insb
push
je
loopne
xor
bound
push
call
mov
cs
pop
pop
adc
push
cwtl
sahf
xor
subb
mov
test
dec
or
push
pop
push
clc
or
pop
lea
fiaddl
mov
es
test
sahf
shlb
xchg
mov
lods
lcall
hlt
cwtl
xchg
add
out
mov
jns
xchg
adc
popa
or
into
jge
inc
mov
aad
inc
jns
cmpxchg
cs
mov
and
call
mov
daa
pop
mov
sbb
and
ret
rcl
enter
dec
pop
jg
cmp
js
push
push
cmpsb
movsb
cmp
mov
jle
aam
adc
lds
lret
leave
stos
ds
and
add
and
jo
sbb
cwtl
popf
movsl
aaa
lea
fsubrl
push
js
js
inc
adcb
fldenv
xor
inc
cltd
mov
jne
bnd
mov
iret
jecxz
lret
test
xchg
and
sub
je
clc
stc
les
adc
fwait
mov
or
pop
adcb
hlt
push
scas
fbstp
subb
lods
ret
xor
cltd
xchg
or
pusha
push
sub
test
cwtl
jp
and
adc
mov
pop
nop
mov
sub
pop
fisubrl
ljmp
je
jecxz
test
or
push
repnz
lock
decl
lret
sub
dec
pop
pop
jp
loop
or
pop
insb
lcall
sub
sbb
inc
aas
ja
mov
mov
mov
inc
gs
mov
mov
pop
push
fwait
cmp
lods
rolb
sub
push
shrl
js
clc
shlb
nop
ficoml
add
or
add
fstpl
popa
sub
cld
jle
icebp
xchg
iret
div
adc
jne
or
mov
imul
dec
outsl
jae
mov
or
pushf
mov
cli
rclb
sub
rorl
and
add
inc
mov
incb
push
ret
std
cwtl
imul
shr
jp
push
fldenv
push
cmp
jmp
sbb
add
adc
sub
push
xor
sub
enter
add
cmp
cmp
lret
aas
mov
rcr
pop
clc
stc
cmc
inc
lock
lret
sbb
and
or
cmpsb
pushf
xlat
or
lret
gs
cmc
pop
sti
mov
imul
xchg
or
xor
or
popf
outsl
arpl
mov
inc
sub
sbb
movsl
repz
arpl
mov
dec
insb
sbb
movsl
xor
mov
orb
lret
sbb
fnstsw
shll
adc
xchg
and
lods
jnp
sub
out
clc
iret
jnp
fwait
out
fucom
xchg
nop
pop
xlat
push
lret
mov
rcrl
or
pop
in
push
out
es
fildl
mov
xchg
xchg
jns
nop
adc
or
negl
jo
lret
dec
jnp
sahf
inc
stos
fwait
inc
xchg
scas
sti
dec
mov
nop
or
fistpll
addl
cltd
test
sub
mov
pushf
dec
cmp
inc
gs
in
not
decb
pop
fwait
pop
sbb
aas
and
push
lahf
cld
jg
test
movsl
insl
push
mov
cmp
enter
jb
pop
dec
sub
aas
cs
popf
inc
mov
int3
sbbb
push
pop
hlt
mov
orl
outsl
aam
pushf
or
mov
das
xchg
and
lret
std
pop
xchg
shrl
ljmp
or
add
jno
pop
push
mov
ret
push
js
add
stos
mov
xlat
repz
mov
dec
int3
or
inc
cmp
push
push
in
xor
cmpsl
out
gs
pop
rcl
sub
jno
in
scas
inc
into
sbb
shlb
dec
icebp
roll
outsl
sub
mov
data16
mov
adc
add
cmpsl
and
jnp
push
dec
mov
xchg
jo
sbb
stos
jg
cld
mov
lar
adc
xchg
inc
push
in
insl
pop
fidivs
test
fnstcw
mov
sbbl
or
call
cli
or
inc
jo
ret
shll
sti
xchg
aaa
insb
rorb
and
sbb
or
inc
ja
ret
add
bound
jecxz
test
mov
mov
decb
add
inc
xchg
sub
in
clc
push
mov
in
mov
adc
mov
aam
push
push
cli
cmp
xchg
nop
xchg
sub
enter
popa
xchg
mov
add
pop
pop
aam
pop
dec
ret
mov
pushf
pop
adc
leave
xchg
mov
inc
test
pop
cmpsb
adc
mov
test
pop
jecxz
or
jns
jge
sub
push
push
push
sub
pop
mov
fistl
pushf
arpl
mov
jbe
fnstenv
fsubr
mov
mov
sarb
aam
fucomp
push
mov
pop
mov
out
and
mov
jmp
push
dec
mov
fisubs
jb
pop
sub
cmp
shll
arpl
cli
xor
jno
ja
sbb
push
shll
sub
lret
cld
nop
shll
or
scas
mov
mov
mov
jecxz
push
xor
scas
outsl
jnp
leave
ja
push
fisttpl
or
adc
mov
cmp
outsb
sub
aaa
push
repz
ficoml
mov
stc
outsb
repz
cmpsb
add
lods
lahf
jns
fidivl
test
jo
dec
imul
and
mov
mov
jecxz
pushf
cmc
mov
ljmp
xchg
push
mov
mov
in
push
dec
call
dec
jb
clc
div
insl
sbb
std
inc
or
jns
pop
popf
pop
std
pop
mov
pop
jb
sbb
test
movsb
test
xchg
insl
shll
sahf
cmp
imul
push
or
xchg
std
mov
gs
rcrl
push
xor
mov
gs
das
mov
fcomip
cmp
hlt
xor
mov
xor
xchg
dec
push
clc
and
jl
dec
or
push
sahf
pop
in
arpl
cmp
xchg
pop
sub
rorl
cmp
jbe
inc
cli
inc
sub
mov
add
push
pop
dec
cmp
bound
into
test
movsl
ss
lea
mov
add
test
cmpb
jb
mov
xor
xor
mov
mov
sbbl
add
shrl
add
fsubl
mov
in
pop
lcall
xchg
sahf
push
mov
in
aad
adc
enter
lods
mov
fs
in
into
mov
faddl
mov
push
shll
xor
mov
xchg
sbb
mov
and
lret
jae
xchg
idivb
jg
and
jnp
sbb
add
cmc
jb
lock
mov
cmp
and
loope
jl
and
mov
test
daa
roll
cld
pop
out
in
cmpsl
lods
clc
dec
cmpsl
je
push
test
cmpsl
jmp
ja
or
mov
insb
aad
cmp
loope
mov
mov
fisubs
out
push
ja
jb
mov
ret
lock
pushf
mov
lahf
xor
aad
xchg
lcall
pop
push
cmpsl
mov
jge
jo
push
test
out
jecxz
inc
push
les
mov
xchg
mov
pop
sub
insb
xor
lret
ss
pop
push
cmp
out
dec
lahf
push
ret
jge
sbb
je
xor
aam
inc
dec
and
mov
scas
add
ja
pop
mov
je
pop
or
pop
sbb
rclb
adc
pop
jne
mov
push
add
add
inc
push
sbb
mov
mov
and
inc
inc
add
enter
xlat
adc
into
or
movhps
sbb
jecxz
ret
insb
pop
push
rclb
sub
aad
ds
mov
popf
mov
push
and
inc
sbb
mov
sub
shrl
jle
sbb
cwtl
xchg
ss
dec
les
fnstsw
xor
mov
or
lock
cltd
sbb
mov
sbbl
mov
sub
data16
push
or
jne
pop
pop
jnp
mov
fbstp
cmpsl
test
cmc
insb
fcoms
out
pop
mov
scas
nop
fnstenv
lahf
pop
xchg
dec
push
and
mov
or
shll
out
xor
and
or
sub
fldt
orl
rcrl
sub
icebp
push
rcl
adc
daa
test
movsb
and
out
add
in
or
movsb
mov
movsb
adc
and
les
mov
mov
adc
mov
mov
sbb
push
sub
ss
mov
cmc
out
sub
add
push
sti
movlps
loope
add
lods
and
flds
fbstp
das
sub
movl
aam
pop
xor
inc
mov
mov
mov
fistl
cli
data16
inc
test
sub
adc
call
jmp
mov
aam
enter
pusha
sar
imull
inc
or
and
adc
ja
scas
out
add
fs
dec
loope
pop
jbe
push
mov
in
mov
out
mov
fs
jb
movl
enter
mov
mov
iret
push
pop
xor
decb
cmp
mov
xchg
leave
mov
les
pop
inc
push
sarb
xchg
inc
ret
sub
lret
ljmp
rolb
je
mov
jmp
test
inc
mov
ds
call
xchg
or
fidivrs
cli
sub
pop
mov
sbb
push
lcall
int
xchg
out
cmp
pop
sbb
popf
mov
add
scas
push
jecxz
jns
movsl
aam
in
je
shlb
mov
shrl
or
leave
xchg
mov
fcoms
push
add
push
int
loopne
xchg
dec
out
faddl
test
xor
adc
jnp
inc
mov
lcall
push
aam
cmpsl
push
adc
ret
push
xor
insb
incb
inc
push
data16
inc
out
cltd
cld
mov
neg
sbb
xor
mov
xchg
hlt
pop
and
jno
nop
push
jne
bound
scas
sub
mov
jp
fwait
les
mov
imul
xchg
lret
xchg
and
rclb
and
fwait
xchg
call
xor
xor
jns
in
push
addb
not
shll
mov
xchg
xchg
test
adc
pop
push
pop
sub
or
sub
jge
inc
adc
jge
mov
out
and
jbe
xor
scas
cmc
push
push
add
or
push
aas
stos
pushf
mov
add
sti
out
cld
lret
jb
popf
xchg
mov
notl
icebp
lahf
rcrl
test
jp
and
or
nop
mov
dec
fstl
jns
mov
jecxz
dec
sbb
fwait
lds
repnz
int
pop
loope
pop
ret
scas
xchg
and
mov
jle
mov
and
mov
adc
mov
adc
or
and
mov
lods
xor
jb
mov
mov
in
push
inc
pusha
push
mov
push
add
fldl
jo
or
mov
imul
xor
mov
sahf
in
xlat
cld
adc
stc
mov
repnz
lret
add
and
std
test
test
jge
cmpsb
clc
std
pop
or
cld
rcrl
push
pop
push
mov
outsl
enter
dec
out
jo
mov
out
adc
lahf
mov
lea
adc
lcall
stc
aad
fisttps
sub
cmp
xchg
rclb
pop
jl
dec
insl
in
mov
mov
jno
stc
xor
aam
xchg
xor
mov
jmp
stos
aas
stos
pop
enter
push
movsb
mulb
mov
ds
rcl
mov
scas
into
inc
sbb
aad
jl
icebp
and
mov
pop
sti
or
pop
ljmp
sbbl
inc
outsb
shlb
xchg
mov
mov
pusha
cmp
insb
lods
xchg
adc
data16
and
jae
jp
andb
test
jecxz
loop
jbe
pusha
jnp
sbb
mov
ja
mov
pop
cs
cld
and
mov
icebp
rcl
sbb
and
pushf
cmpsb
ffreep
cld
ret
pop
mov
or
dec
ljmp
mov
aam
cmp
xor
sub
push
and
popf
dec
notl
loope
hlt
mov
jo
adc
mov
lea
in
push
loope
sti
fwait
sbb
sbb
and
out
push
mov
jbe
sbb
or
cwtl
push
inc
aam
xchg
out
jbe
fbld
add
xor
loop
fxch
shlb
hlt
imul
shr
xchg
lods
xorb
nop
push
in
xchg
push
negb
mov
jae
and
push
sbb
pushf
fcmovu
sarb
jmp
dec
jne
call
mov
adc
orl
arpl
in
lea
dec
mov
mov
movsl
mov
mov
inc
movhps
add
ficoms
cwtl
or
sub
arpl
test
and
js
ds
pop
push
xchg
push
bound
rcrl
cmp
xchg
xchg
push
xchg
inc
das
cmp
add
inc
push
mov
daa
mov
loop
pop
in
add
xor
xchg
cmp
inc
int3
frstor
dec
mov
sti
mov
cmp
push
mov
xor
pop
ljmp
xchg
or
add
push
enter
scas
imul
mov
pusha
add
divl
lret
inc
sbb
popf
rclb
in
mov
je
and
lahf
add
push
push
xor
jge
push
adc
adc
lds
out
push
add
cwtl
in
push
leave
ret
fsubrs
mov
lret
lods
fs
add
push
sub
add
xor
frstor
mov
cmc
jb
sbb
negl
or
and
mov
les
mov
ret
mov
lret
cmp
cmp
lea
gs
xor
add
push
outsb
je
jne
or
rcl
push
fs
iret
scas
imulb
fcmovbe
int
in
out
inc
mov
push
jge
daa
mov
es
into
imul
das
cs
sbb
pop
sarb
mov
ja
daa
mov
pusha
sbb
js
mov
xor
cmp
stc
pop
adc
fstpl
bound
cmp
int3
icebp
aad
or
iret
pop
or
xchg
sbb
sub
aas
jmp
loop
adc
jecxz
ja
aam
dec
inc
ja
cmpsl
xchg
decb
pop
dec
mov
sub
stos
fwait
mov
pop
inc
cmpsl
inc
sbb
dec
addr16
test
sahf
pop
or
xor
aad
sarl
bound
lret
cltd
and
arpl
or
push
xchg
test
adc
cmp
sub
xchg
aam
jae
xchg
pop
xor
push
cli
cmp
mov
popa
inc
mov
add
jbe
cmpsl
xor
jne
aad
push
gs
in
das
daa
addr16
cmpsb
lods
sub
xorl
ja
test
xor
and
stc
loopne
sbb
negb
cmp
jns
sbb
loope
cmpsl
cmp
mov
cmc
pushf
mov
mov
stos
lret
cmp
ljmp
xchg
jne
aas
mov
add
fucomip
cmc
cmp
fsubr
jg
lcall
sbb
xlat
stc
pop
pop
in
aad
mov
movsl
mov
test
pop
xchg
dec
repz
rcl
jp
je
repnz
popa
dec
cmp
les
int
xchg
pusha
popf
jae
xorb
in
jo
mov
push
xchg
inc
sbb
in
jns
divl
add
push
push
sbb
mov
lods
xchg
roll
mov
scas
movsl
cmpl
les
leave
add
into
int
jl
movb
sub
ret
fildll
mov
push
xlat
jle
push
xchg
enter
jbe
call
sub
into
push
movsl
lock
push
inc
sbb
cmp
cld
xlat
cmp
ss
mov
cld
adc
ljmp
push
push
mov
add
or
cwtl
inc
orl
roll
insb
xor
mov
jecxz
pop
les
inc
mov
or
loope
sbb
fsubl
out
lds
push
ret
ds
lret
and
xchg
das
xor
in
icebp
fstl
ljmp
mov
push
test
xchg
xor
and
mov
mov
push
xchg
xorl
clc
dec
mov
test
cli
arpl
add
cmp
add
push
jmp
mov
mov
mov
mov
pop
aaa
leave
sbb
cmpsb
js
fldenv
push
xchg
je
mov
inc
insb
enter
mov
mov
sbb
pop
jnp
sbb
fadd
sarl
pusha
lret
sti
js
into
sti
xor
mov
xchg
fwait
push
icebp
movsb
inc
sbb
test
ror
inc
push
jae
cmpsb
xchg
adc
mov
fidivl
xchg
outsl
stos
xor
push
insb
cld
test
ret
mov
xchg
fwait
dec
stos
dec
xor
imul
mov
cmp
sbb
mov
repnz
fwait
mov
aam
pop
add
fnsave
sub
ss
cmp
add
push
ja
movsl
gs
outsb
ret
fidivrs
cmp
push
lret
aad
mov
mov
sub
xor
adc
xchg
add
insl
loopne
faddl
pushf
push
loope
in
mov
and
dec
mov
jne
out
out
enter
adc
in
mov
sbb
mov
or
sub
jp
outsb
stos
ret
and
jb
lods
or
jae
jmp
popa
divb
cmp
xchg
or
xor
movsl
adc
pop
negb
ret
shrl
push
jo
fimull
pop
push
hlt
out
lret
and
ret
ret
out
cld
mov
lods
pop
pop
ljmp
addr16
inc
test
popf
sub
add
rcrb
pop
das
mov
testb
outsb
dec
mov
imul
lret
int
stos
out
cmp
cmp
dec
push
adc
hlt
out
push
das
jo
adc
jns
push
xchg
orb
nop
fidivrs
test
xchg
iret
sub
gs
mov
add
mov
cmp
nop
xchg
lds
shl
das
and
jmp
cmpsb
or
inc
lahf
popf
outsl
jg,pt
cmp
decl
mov
lcall
stos
scas
push
push
adc
xchg
jae
add
mov
iret
in
outsl
sbb
out
js
aam
inc
out
addr16
movsl
pop
clc
addr16
lock
out
andl
cltd
adc
cltd
push
scas
fdivrs
repz
cmp
mov
jo
imul
test
xor
js
lock
leave
jp
xor
fildll
in
xor
repnz
dec
jmp
pusha
jne
fwait
outsb
ds
daa
andb
adc
stc
cmp
jb
clc
pop
xchg
icebp
dec
fcompl
inc
ja
ret
sbb
cmp
mov
sub
mov
sahf
cmp
add
xchg
call
stos
add
hlt
rcrb
outsb
xchg
cmp
aaa
jb
sub
push
xor
stc
jno
popa
adc
frstors
clc
mov
pop
mov
sbbb
sbb
add
xchg
stc
jp
dec
test
jb
inc
sbb
xor
daa
ss
scas
xor
pop
mov
stos
and
inc
popa
pushw
xchg
sar
popl
imul
test
cli
xor
out
cmpsb
mov
sbb
sub
fists
js
add
stc
mov
mov
pop
outsl
lock
int
hlt
jb
and
xor
loopne
fstl
jbe
sbb
lock
mov
cmp
sub
rsm
sub
jp
int3
dec
repnz
aad
push
push
aam
sbb
or
xor
push
cmpsl
lcall
test
pop
adc
into
xrelease
mov
xchg
jmp
das
cmpsl
cmp
mov
in
add
hlt
and
in
xchg
loope
out
arpl
sbb
xchg
fcmovnb
sbb
ret
cwtl
sbb
ret
fsubs
test
mov
sar
gs
xchg
or
popf
xchg
hlt
xor
or
minps
xchg
ret
push
aaa
mov
pop
lods
push
outsb
rcll
or
lea
and
mov
fsubl
cs
arpl
sbb
mov
xchg
movsl
xor
fcoml
add
xor
je
push
dec
inc
popa
xchg
in
loope
push
sub
and
fstl
dec
push
mov
cmp
les
sub
lret
sbbb
imul
cmpsb
je
xor
cmc
cld
inc
fwait
sub
xchg
dec
mov
inc
lret
jno
sahf
mov
xchg
sbb
inc
subl
rcrb
arpl
in
outsl
aas
push
call
cli
pop
in
xchg
and
fnstcw
mov
mov
les
and
fnsave
ret
std
adc
outsl
and
ljmp
dec
sub
or
int
mov
dec
xchg
mov
push
mov
je
cli
or
mov
sbb
push
push
movsl
fstpl
rorb
mov
ret
fs
sbb
push
pushf
adc
iret
dec
sbb
xchg
inc
outsb
fistpl
sbb
sub
lret
imul
std
shll
push
sbb
cmp
in
xchg
jbe
mov
in
add
and
push
out
jbe
sub
nop
hlt
add
fidivrl
punpckhbw
ret
pop
fisubl
sub
push
xchg
mov
lret
dec
lret
jnp
pop
sti
sub
xchg
jmp
mov
clc
dec
int3
sbb
jae
add
dec
sub
pushf
add
fwait
pushf
das
xchg
and
xor
xlat
jb
push
dec
mov
insb
mov
insl
in
test
pop
inc
gs
ret
lock
repnz
sbb
or
and
mov
movsb
pop
fimuls
and
push
push
pop
lock
cmp
outsb
jg
insb
xchg
push
sbb
fwait
sbb
push
and
stos
pushf
inc
mov
dec
fwait
lahf
xor
jp
pop
xchg
aaa
push
cmp
addr16
cmp
or
push
sbb
push
ret
ficoms
and
xchg
data16
fsubrl
push
or
push
dec
aas
into
ret
adc
push
push
add
add
test
dec
rcrl
inc
arpl
add
push
cmpsl
fdivp
push
or
out
cltd
pop
pushw
pop
pop
test
xor
clc
ret
stos
ret
or
in
sbb
sub
sbb
aam
jne
or
arpl
jae
cltd
ret
inc
inc
or
mov
cmp
scas
ljmp
fucomip
mov
mov
mulb
adc
jmp
jge
enter
and
stos
imul
lock
mov
sbb
push
lret
and
movsb
shl
inc
outsl
jne
in
pop
sub
push
cld
popf
das
subb
repz
cmpsb
xlat
filds
test
je
push
jl
jae
dec
mov
dec
arpl
pop
xchg
and
aad
or
adc
sub
xorl
enter
sbb
lret
or
push
cmp
out
int3
mov
cld
es
shll
fwait
in
and
and
je
leave
pop
pop
xchg
mov
or
test
lods
xor
test
icebp
leave
pop
cli
add
adc
xchg
shlb
cmp
cmp
out
aad
push
jge
mov
cld
cli
lods
push
mov
mov
pop
xor
pushf
pop
jg
push
mov
push
pop
es
add
jmp
outsb
ja
pop
add
out
test
icebp
push
mov
repnz
cmp
cmp
mov
popf
js
in
repz
lret
xchg
jecxz
gs
inc
dec
orb
outsl
and
pop
ds
fdivrl
xlat
insb
movsl
ret
mov
ret
jo
adc
jecxz
dec
call
xor
push
lea
popa
inc
push
bound
mov
shl
repnz
adc
int3
dec
stos
adc
mov
icebp
mov
xor
sub
dec
cltd
cmp
out
out
pop
push
popa
imul
dec
imul
cmp
or
in
fbstp
adc
lods
xchg
fcomp
or
ljmp
mov
rcrl
xor
leave
ret
mull
loop
inc
sti
xchg
jnp
sbb
push
fdivrs
fcoml
dec
lods
scas
sbb
shr
orb
add
cli
ret
cmpsl
imul
fistpl
adc
mov
scas
lea
push
dec
pop
nop
lock
or
cmpsb
xchg
scas
mov
mov
xchg
xchg
inc
mov
lock
rcr
xchg
cmp
cmpsl
sbb
lock
lea
and
cltd
jle
mov
cmpl
inc
and
pop
movsb
adc
or
inc
into
mov
dec
cmp
jbe
jmp
loop
sub
ror
cwtl
cmp
into
jle
xorb
mov
jmp
cmp
cmpsb
out
cmp
mov
std
popf
fdivr
insb
icebp
or
cwtl
pop
sub
add
insl
sub
sbb
inc
push
add
lcall
push
js
in
inc
in
fsubl
push
sahf
test
jo
inc
arpl
and
mov
addl
loope
orb
into
push
mov
das
and
testl
cmpsb
mov
mov
nop
cmpsb
das
fldcw
adcb
js
and
dec
lcall
cmp
lahf
scas
dec
dec
loope
aad
bound
cwtl
cmp
int
push
push
push
out
and
sub
into
dec
push
dec
pop
aas
cltd
rol
loop
pop
sub
add
lret
test
cli
xchg
sub
fadds
je
add
or
jl
pop
ss
or
mov
nop
jg
rcrl
cmpsl
sbb
adc
mov
add
dec
std
push
dec
adc
imul
sbb
add
jbe
fstps
cmp
jbe
push
testb
lea
fidivs
adc
outsb
xchg
push
fwait
repz
stos
leave
xor
adc
fcoms
mov
cmp
in
mov
jne
loopne
add
in
pop
lahf
jnp
lcall
mov
jg
sub
push
inc
pop
and
imul
sub
fisubrl
inc
mov
jae
negl
fsts
pop
and
lahf
aad
xor
out
dec
fldcw
testb
and
andb
sbb
jae
out
mov
xchg
mulb
mov
pop
in
aaa
mov
cwtl
rolb
push
aas
int3
clc
in
ss
mov
pop
xlat
aad
popa
adc
daa
adc
inc
gs
fcoms
cs
lods
sbb
mov
neg
mov
mov
test
aas
fcmovnu
jge
sbb
jmp
add
popaw
into
sub
mov
cwtl
outsl
icebp
pop
jg
ret
push
or
lahf
sbb
sbb
mov
enter
jae
repnz
sbb
in
gs
aad
xchg
and
ret
adcb
sti
inc
iret
lret
lahf
pop
jns
cmpsb
mov
mov
mov
xchg
lcall
sarl
mov
cmpsl
loop
dec
loope
adc
push
sub
stos
sub
lock
mov
mov
jmp
mov
lods
popw
and
icebp
mov
pusha
insb
xchg
arpl
lahf
mov
push
cmp
int3
xchg
xor
jnp
popf
inc
cmp
repnz
or
shrl
jmp
cli
out
je
push
xor
mov
test
aam
mov
sahf
mov
mov
je
xor
dec
dec
jnp
dec
pop
insl
xor
cld
xchg
mov
repz
pusha
pop
pop
insb
jo
sbb
leave
fwait
adc
or
ja
out
jmp
adc
bound
gs
push
jmp
cs
aaa
and
hlt
push
mov
xor
pop
stc
add
adc
outsl
fcoml
arpl
jmp
and
xor
cmc
and
movsb
inc
dec
inc
dec
add
sub
adcb
test
push
adc
rol
xor
repnz
jle
cmp
mov
imul
pop
ficompl
inc
rcr
out
mov
xor
fists
sbb
ffree
arpl
mov
js
xor
enter
lahf
push
dec
mov
out
xchg
add
enter
loopne
ja
adc
xor
mov
test
push
mov
dec
ds
xor
adc
in
arpl
sahf
fsubr
std
push
movsl
and
mov
jbe
or
sahf
test
mov
call
and
clc
mov
sbb
ja
push
dec
dec
jo
sti
repnz
loop
mov
pop
inc
enter
lds
in
cld
scas
sbb
or
lods
adc
es
call
push
cwtl
lcall
sbb
and
div
push
adc
and
lea
fidivrl
das
jmp
fsts
pop
stos
fidivrl
jae
sub
addr16
int3
in
out
fmull
adc
mov
inc
leave
out
jo,pn
aas
es
fcmovnb
es
pop
mov
int3
lcall
add
mov
cld
test
inc
es
int
dec
popf
push
mov
imul
dec
jge
xor
and
jmp
int3
pushf
mov
pushf
jbe
les
in
adc
pushf
xor
push
clc
popf
mov
sub
dec
mulb
sub
fldcw
mov
sbb
dec
inc
shrl
cmp
or
data16
or
fldt
add
xchg
jl
gs
pop
int3
fnstsw
pusha
ss
mov
jo
cltd
jnp
cmp
pop
mov
mov
mov
cmp
pop
mov
xor
testl
xchg
outsb
jl
inc
cmpsb
adc
aam
stos
insb
mov
xchg
fstpt
incl
xchg
lods
lods
add
out
mov
fucompp
xor
test
test
imul
jle
or
sub
popf
mov
lock
push
inc
sub
push
xchg
clc
inc
dec
sbb
cmp
inc
inc
add
imulb
ret
stos
call
sbb
inc
mov
mov
pop
push
jecxz
stos
lods
fsts
fdivr
mov
js
lds
iret
dec
cmp
mov
stos
fmulp
out
inc
call
out
and
js
xlat
je
div
add
pop
cmc
dec
adc
adc
jg
push
xor
sub
gs
dec
gs
ss
ds
outsb
aad
pop
xlat
sbbl
out
pop
mov
scas
loop
push
push
dec
xchg
gs
jge
xchg
push
cmp
sbb
xchg
in
leave
fidivrs
outsl
test
mov
into
jge
push
stos
lods
xchg
pop
mov
es
add
clc
js
jo
mov
cmp
mov
nop
pop
or
mov
mov
movsb
icebp
sub
in
out
inc
lock
pop
mov
movsl
in
cmp
data16
add
or
mov
outsl
scas
jae
push
sub
lds
cmp
inc
adc
les
test
aam
cmp
dec
sahf
xchg
sbb
or
jne
mov
popf
shll
movsl
shl
or
lock
outsb
add
fdivs
xchg
xchg
xor
or
filds
or
getsec
pop
pop
jg
xor
fdivs
sahf
arpl
fcompl
test
movsl
es
lods
sub
push
pop
pop
xchg
pop
push
cs
das
cs
dec
mov
ds
or
fs
test
fmuls
sti
fistps
sub
jns
lahf
frstor
push
imul
pop
inc
dec
jp
push
sub
sub
push
or
fucomp
or
hlt
jae
mov
lds
dec
sti
mov
pop
sbb
repnz
out
sbb
cmp
cmp
stos
sbb
mov
adc
inc
inc
aad
loopne
mov
jbe
lcall
mov
imul
orl
loopne
add
jno,pn
add
xchg
inc
push
mov
imul
imul
repnz
incl
enter
xchg
cmp
daa
push
mov
sti
movsw
mov
mov
sub
mov
or
mov
xchg
mov
pushf
sbb
jge
mov
popf
scas
js
fsubl
mov
sbb
sbbl
shr
mov
and
cld
aam
dec
addr16
add
xchg
mov
xchg
sbb
cli
mov
add
push
jae
adc
dec
repz
push
push
mov
pop
lret
or
xor
xor
in
div
icebp
push
cmp
inc
jnp
aas
into
es
test
jb
sbbb
jecxz
inc
repz
and
dec
shlb
stos
sbb
sti
imul
out
sbb
sbbb
leave
cltd
pop
adc
sbb
cmpsw
andb
pop
stos
gs
inc
adcb
std
push
push
jge
das
scas
lock
xor
pop
ret
das
jmp
dec
push
xchg
mov
outsb
jl
outsl
and
or
pop
push
shr
ds
fcompl
ljmp
jne
pop
and
bound
clc
push
pusha
jnp
notb
and
adc
loop
xchg
jns
mov
jmp
pop
inc
xor
scas
into
sbb
or
in
push
mov
jno
dec
sahf
nop
xchg
rcr
or
cmp
mov
lds
fdivr
push
test
push
mov
mov
add
or
dec
cmp
xchg
xchg
jno
xchg
cmpsl
fwait
loopne
les
and
jnp
and
push
push
mov
ja
jmp
pop
dec
mov
or
mov
or
adc
out
mov
repz
cwtl
in
or
aam
in
sarl
lods
push
push
and
loope
cmpl
lods
jb
pop
jnp
repnz
and
ret
mov
ror
add
push
sbb
pop
ud0
in
xor
fld
push
cmp
dec
add
out
lahf
cltd
int3
xor
lahf
fcmovu
std
ss
cmp
mov
jg
cmp
rolb
pop
lock
fiadds
mov
dec
push
jecxz
repnz
sahf
pop
dec
or
scas
into
mov
pop
lea
in
ss
add
xchg
sub
push
mov
and
xlat
in
add
dec
mov
data16
inc
adc
or
sub
mov
adc
iret
mov
push
dec
adc
int3
mov
nop
and
xor
addr16
lds
adc
test
mov
fsubp
jnp
test
mov
lahf
inc
mov
iret
dec
lock
add
cmpsl
shl
cmpsl
xorl
movsl
dec
sahf
add
fcmovnbe
and
xchg
leave
sbbl
jmp
pop
and
into
sbb
dec
add
sbb
iret
inc
xchg
xor
push
mov
jo
push
jg
mov
data16
addr16
and
cmp
pop
mov
insl
popf
xchg
push
and
in
icebp
pop
stc
dec
rcl
outsl
lock
sbb
test
push
ds
lock
xor
mov
or
xchg
jmp
test
fists
incb
cmp
mov
shrl
push
sbb
insl
xchg
xor
shrl
push
or
push
imul
decl
mov
push
iret
jnp
xchg
scas
sarl
jp
push
out
lret
cmp
pop
mov
push
xchg
arpl
scas
mov
jl
pop
mov
sub
sbbl
push
jmp
sub
mov
fwait
lret
dec
fs
adc
push
jb
push
mov
jae
insl
cmpsl
add
push
ja
pop
push
or
stc
ficoml
das
xchg
sarb
rorb
shl
ja
neg
insl
cmp
jne
mov
sahf
inc
scas
cli
jo
xor
push
mov
dec
cmp
adc
sbb
mov
fnsave
mov
out
xor
mov
stos
shrl
inc
les
test
jb
xor
test
xchg
sbb
pop
cli
repnz
aad
les
std
sbb
xchg
jecxz
sub
jnp
fwait
mov
icebp
dec
jmp
push
popf
mov
pop
jo
repnz
movsb
inc
daa
xor
ret
scas
mov
jne
xor
movsl
outsb
pop
test
loopne
cwtl
mov
subb
jnp
and
sub
dec
cmp
sbb
cld
dec
jg
inc
jl
lahf
mov
sub
ja
xlat
in
sbb
adc
and
repz
mov
in
mov
jl
cmp
jmp
mov
scas
cli
inc
fwait
pop
add
stc
push
mov
cmp
js
fdivrs
push
lea
push
sub
and
jl
imul
xchg
sbb
test
cmc
add
xor
push
ja
data16
jo
popf
cld
outsb
fistps
pushf
fcoms
add
cmpsl
fsubs
add
jnp
sub
push
mov
inc
mov
cld
sub
mov
add
xor
insb
loopne
stos
sbbb
test
inc
ds
sbb
pop
cmpb
mov
popf
xchg
in
cmp
fnstenv
sub
mov
adc
shlb
test
sbbl
inc
dec
loopne
popf
xchg
and
fcompl
icebp
test
adc
sbb
mov
inc
xorl
ret
push
push
adc
push
mov
ljmp
adc
fidivs
js
shlb
or
add
mov
cmp
mov
xor
xor
fstpl
addl
mov
out
outsl
sahf
inc
xchg
mov
mov
loope
mov
es
cmp
and
ret
or
sbb
ficoml
cmp
mov
lahf
push
jmp
outsl
fwait
out
das
outsl
jmp
xor
out
fwait
push
sbb
or
mov
lods
test
and
pop
xchg
sub
cmp
test
and
or
shlb
sbb
lods
imul
hlt
push
inc
cmpsb
pop
std
or
xchg
cli
out
outsl
sub
pop
jle
rcr
test
popa
cmc
in
add
xchg
rorl
jmp
shll
pop
mov
out
dec
mov
arpl
lock
fwait
out
sbb
pusha
pop
cld
sub
mov
test
push
lret
push
sbb
int
sub
push
pop
sti
jb
fucom
imul
adc
mov
mov
int3
repnz
add
mov
jno
xor
es
imul
loope
es
addr16
dec
daa
mov
pop
sbb
mov
pop
prefetch
adc
and
xor
push
cltd
gs
adc
rcrl
cmpsl
and
dec
pop
xchg
sbb
std
pop
adc
cmp
aad
movsb
popa
cmp
fimuls
push
dec
push
xchg
xchg
inc
mov
int3
fcomip
out
xor
mov
mov
mov
pop
mov
add
xor
inc
and
xor
jns
push
jbe
dec
dec
xchg
in
arpl
repnz
mov
les
imul
dec
int
rcrl
sti
push
xor
or
test
mov
in
push
mov
xor
and
aaa
enter
jae
orb
push
pop
sub
pop
push
sbb
pop
jae
sub
shll
lods
mov
push
scas
in
and
lcall
xchg
addb
arpl
dec
fwait
notb
dec
lods
jns
mov
stc
call
int
out
and
mov
hlt
and
dec
push
sub
xor
xor
cmc
popf
bound
data16
pop
add
test
jo
xor
cmp
cmp
cld
sti
adc
jne
cmc
jbe
mov
stc
je
hlt
loop
scas
lods
mov
xor
fsubrp
lret
ljmp
push
sbbl
xchg
addr16
sbb
lret
leave
cmpsl
and
add
dec
lds
lahf
inc
adc
jle
mov
fcmove
mov
sbb
mov
lock
sbb
sbb
jecxz
pop
pop
pop
loop
imul
lret
clc
shrl
rclb
dec
xchg
jno
dec
sub
cmp
jmp
js
mov
aam
nop
mov
mov
les
or
cmp
les
dec
push
loope
or
lret
rcrb
sbb
bound
insb
lock
mov
mov
dec
sti
push
pop
xchg
out
imul
dec
cmc
out
mov
pop
mov
jae
negb
pop
and
cmp
cmp
adc
stc
repz
pusha
mov
pop
or
flds
mov
and
pop
push
pushf
cld
sti
or
jmp
cmp
sbb
cmp
sti
cmp
fdivs
popa
mov
insl
xchg
mov
and
xchg
mull
sub
jmp
hlt
xchg
iret
add
mov
inc
adc
xchg
fs
ret
loopne
in
les
ret
shrl
mov
lods
pusha
loopne
loope
stc
loope
aas
cmpsl
cmp
fisttps
dec
scas
xchg
xchg
scas
aaa
or
shlb
je,pt
cmp
inc
jns
sbb
dec
add
inc
scas
fnsave
mov
jge
test
out
mov
mov
cmp
push
jmp
into
idivb
sbb
pop
xor
ficompl
adc
inc
rcll
loopne
lcall
gs
xor
les
aas
daa
rorl
push
popf
mov
push
gs
push
xlat
movsl
in
push
loopne
jae
sbb
jp
jns
mov
push
ret
enter
and
inc
inc
sub
pop
insl
in
lret
dec
je
aaa
jecxz
sub
push
rcl
cmp
cld
xor
sub
movsl
push
repnz
push
movsl
and
pop
mov
cmp
mov
imul
mov
scas
lahf
test
mov
iret
sti
addr16
sub
jg
movsl
fcomp
sbb
outsb
aas
mov
lds
xor
and
test
xor
jnp
stos
daa
imul
lahf
mov
cld
pop
lret
pop
xchg
in
icebp
roll
cmp
pop
scas
in
enter
clc
pop
sarb
data16
insl
xchg
push
xchg
data16
jo
outsb
scas
xor
popa
jmp
aam
int3
out
bound
push
pop
mov
ret
push
push
leave
mov
pop
mov
pop
loope
in
testb
cli
mov
mov
xchg
jno
je
insb
shll
jle
or
sub
add
fisubl
mov
test
mov
cmp
mov
adc
adc
sub
popf
in
popa
xor
cmp
cwtl
cmp
les
mov
out
inc
sbb
sub
dec
inc
iret
bound
adc
add
add
insb
shll
in
divb
mov
lret
lea
aaa
sbb
dec
ja
lea
popa
mov
jnp
jmp
pop
jne
and
adc
sbb
xchg
sub
and
xor
push
sbb
ljmp
fbld
pop
dec
mov
cmpsb
pop
lcall
mov
pop
call
data16
cmp
add
pmullw
cwtl
push
xlat
pop
sahf
push
imul
loopne
popf
or
jae
repnz
jae
cs
mov
daa
repnz
pop
frstor
mov
icebp
mov
dec
xor
jno
test
mov
mov
mov
inc
sbb
jp
adc
or
jmp
icebp
fdivrp
adc
push
pop
mov
fisubrs
mov
pop
xor
sub
in
mov
out
jmp
jnp
push
mov
sub
pop
pop
jle
inc
pop
int
xor
push
mov
je
mov
test
and
mov
subl
hlt
add
out
jp
rclb
in
out
mov
mov
xchg
jge
aas
pop
jno
mov
fdivp
in
out
jecxz
push
and
loopne
ret
pop
dec
dec
dec
or
in
popf
das
fldz
and
and
mov
nop
mov
lds
adc
sub
jno
jl
lret
clc
sbb
pop
in
jmp
jnp
adc
dec
push
inc
xchg
and
popa
inc
cld
jns
mov
xchg
ljmp
mov
xor
loopne
daa
inc
xchg
add
jns
add
dec
orl
inc
push
sti
lock
jbe
imul
mov
popa
and
inc
unpcklps
and
rorb
out
add
mov
sbb
dec
ljmp
add
les
sub
sbb
cmp
inc
xchg
add
jne
push
dec
cmpsl
pushf
mov
mov
sbb
subb
push
xchg
and
out
xor
pop
movsl
jl
lods
test
jmp
xchg
jmp
popa
aad
mov
fidivs
mov
jle
cmc
mov
out
sub
daa
push
sbb
mov
in
popa
cs
jnp
pop
inc
testb
sbb
mov
add
adc
inc
push
movsb
mov
add
sbb
cmp
in
addr16
mov
les
add
ret
lock
scas
sub
pop
dec
in
jns
jne
sbb
int3
les
js
mov
xor
adc
bound
jp
pop
xor
mov
xor
cmp
test
sti
cmp
imul
dec
test
jle
mov
or
filds
fbstp
sti
repz
sar
shrb
pusha
mov
loop
xor
inc
divl
push
test
push
negl
jle
gs
xchg
mov
hlt
ficomps
mov
xor
int3
dec
ds
into
arpl
addl
mov
adc
ss
cs
pop
jmp
xchg
add
sub
push
cmp
std
mov
jnp
orb
out
out
jecxz
hlt
nop
cli
jnp
mov
sub
insb
inc
sahf
mov
pop
inc
cld
add
jge
dec
and
loope
into
outsl
xchg
xchg
sub
cltd
jo
and
push
dec
mov
stc
fsubl
in
xor
pop
adc
dec
sti
test
in
les
icebp
jne
cwtl
sbb
xchg
mov
or
xor
or
es
dec
jle
inc
pop
daa
push
jge
dec
jo
ret
scas
jae
xchg
dec
jecxz
push
jno
ret
push
lds
fstl
ss
sub
cmp
jp
push
pop
loope
ss
xor
jbe
negl
add
ror
mov
pushf
stc
pop
fwait
add
fwait
push
add
xor
in
jne
data16
test
sarl
and
outsl
aad
in
inc
scas
aaa
out
xchg
inc
sbb
dec
dec
and
cld
loopne
repnz
mov
mov
sbb
inc
aam
out
aaa
cmp
ljmp
dec
cmc
fwait
cmp
cs
push
cmp
pushf
sub
cmp
mov
jae
mov
lcall
mov
and
test
mov
jae
imul
xlat
sub
lret
ds
push
rcll
out
shrb
sub
shll
out
pop
add
sti
or
cmc
jmp
in
sub
mov
add
lret
jl
dec
ret
outsl
dec
push
pop
iret
inc
mov
mov
sub
shll
inc
repz
inc
pop
jecxz
rclb
sbb
add
fdivrs
cmp
lret
xchg
lods
and
pop
pop
inc
jp
pop
lods
push
call
in
mov
sub
inc
or
out
outsb
sub
pop
cmp
enter
mov
xlat
sbb
adc
pop
decb
mov
mov
leave
push
clc
stc
pop
in
icebp
outsb
fisubs
xchg
cltd
or
xchg
mov
pop
dec
and
or
jae
push
lcall
pop
std
adc
mov
stc
jnp
ss
fisttps
movl
fdivrl
lods
testb
dec
pop
cmp
push
jno
jle
nop
ret
push
pop
xlat
dec
mov
mov
jp
insl
pop
sbbb
mov
aad
fidivrs
and
push
push
test
xchg
jo
sbb
add
test
jg
add
pushf
pusha
sbb
push
adc
popf
xchg
and
out
adc
js
cs
lea
and
mov
inc
add
sub
push
or
dec
mov
sub
fnstsw
faddl
out
inc
xor
sub
mov
mov
stos
pop
or
in
cmc
lea
fcmovbe
fbld
pop
shl
push
std
sub
arpl
xlat
in
sub
in
repnz
lret
lods
or
sti
xchg
lods
sub
cmp
decl
mov
inc
sub
call
adc
lods
iret
xchg
in
fisttpl
ret
outsl
mov
aaa
mov
ficoms
push
xor
arpl
nop
bound
aad
mov
sbb
lods
std
popf
sti
out
hlt
adc
add
jecxz
adc
lods
das
lock
jnp
loope
outsb
gs
fadd
xchg
jbe
shl
test
jg
ss
jbe
sbb
in
test
xchg
in
xlat
fmul
and
mov
jmp
cmpsl
iret
stc
push
push
sub
and
fstpt
pop
jbe
gs
adc
xor
inc
push
dec
mov
mov
sub
push
mov
xchg
repz
cmpsl
xor
and
in
mulb
std
xor
ja
pop
inc
stc
insb
ljmp
push
add
in
enter
sub
pop
lods
iret
xchg
insb
xchg
lea
or
lock
jle
xor
scas
andb
bound
outsl
dec
ret
es
and
xchg
hlt
xor
cwtl
jb
sub
mov
mov
mov
fs
out
sbbb
cmp
inc
jl
clc
into
cmpb
rcrl
lahf
mov
call
aad
das
clc
gs
cli
orb
cmp
ljmp
dec
inc
sub
push
jns
push
cli
add
dec
pop
fmuls
jl
xor
xchg
fcoms
movsb
fisubrs
enter
loop
mov
into
jg
adc
push
insb
jbe
out
test
xchg
xor
dec
mov
mov
xchg
sbb
mov
sbb
shrb
imul
call
and
ljmp
push
filds
cmp
lods
mov
push
pop
xor
adc
cs
mov
ljmp
cmpsb
pop
lea
lods
test
mov
mov
popa
mov
sahf
sub
jecxz
pop
daa
push
adc
sub
rcrb
out
mov
dec
mov
cmc
adc
and
jg
cmp
jmp
pop
xor
into
pop
mov
hlt
mov
in
push
roll
mov
aad
jg
mov
mov
adc
mov
inc
int3
dec
dec
loop
testl
rcrb
test
fnstcw
outsl
pop
lock
in
mov
movsl
ss
xor
xchg
ret
jecxz
pop
incl
jecxz
or
sub
mov
sbb
enter
arpl
imull
xchg
xchg
cwtl
test
pop
into
and
mov
mov
insb
out
out
dec
xor
cmp
jne
lcall
xchg
push
adc
leave
rcr
out
push
adcb
ljmp
pop
jge
push
sub
aad
mov
mov
mov
xor
sbb
mov
cmp
pop
jne
xor
lahf
add
or
jl
lcall
dec
push
adc
sub
sub
pop
js
movsb
inc
inc
popf
mov
es
adc
mov
dec
ss
add
loop
inc
push
aam
sub
and
jecxz
adc
inc
mov
orb
rorb
sub
jns
sbb
mov
in
call
mov
mov
cli
adc
sbbb
mov
test
lcall
mov
lcall
ds
mov
jmp
add
pusha
ja
mov
push
and
jecxz,pt
xor
cltd
pop
fdivl
sbb
or
cmp
and
scas
aas
movsl
cmc
repz
jmp
loop
mov
cmp
bound
call
lock
cld
rcl
ljmp
leave
aam
test
loop
xchg
jnp
frstpm(287
fcmovu
adc
or
popf
inc
mov
pusha
inc
dec
cmc
dec
xchg
test
sahf
repnz
and
jmp
stos
and
out
xchg
das
xor
push
sahf
pushf
sub
push
dec
mov
or
push
pop
inc
stos
dec
std
and
sbbl
mov
lcall
and
dec
xchg
push
dec
cld
fcmovnu
pop
testl
add
jnp
sarb
out
call
or
adcl
popa
lahf
xor
sbb
mov
arpl
or
push
imul
jl
xor
pop
loop
inc
imul
sub
dec
push
icebp
repz
jno
cmp
jecxz
pop
xor
jns
and
mov
xrelease
xor
fstps
cwtl
rcrl
sysexit
add
push
fnstsw
mul
xor
loop
lret
jecxz
pop
sub
sbb
jecxz
add
aas
subl
or
scas
addl
cmp
add
mov
pop
test
fs
and
xor
dec
push
dec
mov
xchg
sbb
rcrb
pop
js
mov
in
out
into
and
xchg
lahf
add
jo
push
lahf
mov
pop
roll
lods
popf
mov
add
pusha
push
call
inc
push
pop
xor
mov
adc
lcall
adc
cwtl
jecxz
shlb
out
inc
dec
std
xchg
dec
push
ret
outsb
dec
sar
inc
cmp
out
dec
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
call
push
push
push
call
push
push
push
push
push
call
test
je
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
call
push
push
call
push
push
push
call
lea
push
call
call
cmpw
pop
push
je
push
push
call
push
call
add
call
jmp
push
push
call
decl
or
test
pop
jbe
pop
aas
incb
jo
sbb
push
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
into
push
cmp
or
lea
xchg
loope
jmp
add
jl
scas
xor
loopne
jmp
push
mov
mov
lret
and
sbb
call
inc
sbb
pop
pop
std
fsubs
mov
push
or
xchg
mov
mov
adc
stos
lretw
jo
fsubp
dec
dec
jae
pop
push
in
mov
jp
fwait
les
cmp
mov
mov
push
or
test
adc
ss
lret
filds
mov
inc
adc
push
cmp
call
add
test
adc
jo
sbb
pop
rolb
cmpsl
or
enter
lcall
or
test
sti
jbe
pop
lret
add
jo
pop
jo
pop
rolb
jecxz
xchg
pop
lds
and
inc
sbb
pop
rolb
or
test
push
jbe
pop
rolb
loop
push
jo
pop
jbe
jecxz
add
loopne
xchg
inc
or
dec
rolb
loop
xchg
pop
rclb
loop
xchg
pop
inc
outsl
mov
test
xchg
std
add
jo
sbb
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
int3
js
cld
add
sbb
jle
add
dec
inc
sbb
pop
rclb
ds
jo
sbb
pop
loopne
addl
and
jbe
pop
nop
add
jo
sbb
pusha
les
and
inc
sbb
pop
shlb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
pop
rolb
loop
xchg
mov
add
jo
mov
sub
gs
imul
das
inc
pop
xchg
push
mov
lcall
roll
xchg
push
inc
cmp
inc
or
pop
nop
shll
sub
and
lret
clc
cs
adcb
js
add
out
outsb
sbb
dec
int3
mov
dec
ja
inc
push
mov
addr16
icebp
fsubr
push
ds
dec
ret
outsl
push
cmp
ret
pop
outsb
pop
sub
notb
movsl
push
jg
pop
leave
fcompl
dec
xor
or
ror
sub
xor
pushl
loop
daa
aaa
jae
mov
or
iret
data16
popf
out
hlt
shlb
pop
dec
add
lret
mov
pop
cmp
mov
pushf
and
sbb
mov
pop
pop
test
dec
xchg
adc
pop
mov
jmp
add
sbbl
out
lods
inc
mov
dec
shrl
jmp
xchg
mov
push
test
pop
or
cli
pop
gs
add
loop
leave
stos
loop
pushf
cmpsb
stc
in
sbb
lods
cli
das
cmp
pop
das
in
orb
fistpl
insl
out
inc
ja
int
lea
mov
mov
xchg
xchg
jbe
dec
outsb
xor
lea
das
dec
xchg
lret
pop
mov
cli
inc
pop
inc
in
repnz
mov
loop
add
in
adc
jg
es
adc
test
cmp
pushf
add
cmp
cmp
mov
dec
mov
bound
cmc
out
aam
test
dec
data16
xchg
mov
jne
stos
dec
sub
std
sarb
xor
jbe
fidivrs
mov
dec
cmpxchg
or
add
pop
dec
pop
cmp
rolb
inc
mov
add
mov
not
pop
add
iret
repz
addr16
cwtl
mov
stc
push
hlt
bound
out
bound
out
cmp
aaa
mov
pop
pop
nop
popf
pusha
and
mov
inc
je
rclb
insl
pop
pop
mov
lea
dec
stos
push
cmp
adc
mov
pop
pop
pushf
sbb
lods
cli
adc
pushf
imul
roll
data16
out
jno
gs
dec
xorb
mov
int
testb
lea
movsb
cmp
in
mov
scas
inc
ds
or
ret
int3
insl
cli
dec
mov
xchg
adc
xlat
mov
test
jno
and
scas
insb
pop
lcall
int3
cmp
jb
dec
push
push
dec
dec
popf
xchg
sbb
cmpsl
arpl
in
scas
stc
jbe
cmpsl
mov
push
test
push
inc
pop
cmp
in
sub
inc
xor
or
aas
push
xchg
xchg
mov
std
pushf
cmp
pop
imul
xchg
loop
add
sub
js
cltd
lret
lahf
jb
inc
cmp
push
scas
jnp
sub
fisubs
add
daa
mov
pop
rorb
scas
adc
cltd
mov
jne
xchg
pusha
repz
lods
gs
mov
fmul
mov
hlt
addr16
push
cmp
rolb
sub
mov
pop
inc
push
shrb
or
inc
push
bound
sarl
sbb
xorb
arpl
pop
lcall
sub
pushf
push
pop
dec
loopne
jnp
inc
mov
call
stos
xchg
hlt
mov
push
repz
push
or
dec
mov
push
add
sbb
mov
adc
es
pmaxsw
cs
loop
cltd
repnz
push
fidivrl
test
daa
fldl
nop
jno
xchg
push
imull
in
cmp
loope
inc
iret
rcll
vrsqrt28ps
xor
adc
clc
std
movsl
sbb
in
push
and
dec
sti
loopne
fsubrs
sub
int3
mov
aaa
rorl
mov
test
cmpl
sbb
fiadds
and
test
insl
adc
sbb
std
sbb
ja
fimull
mov
jno
movsl
push
push
std
test
flds
and
xchg
mov
ret
inc
jae
pop
cmp
xor
xchg
sub
shrl
xchg
test
out
out
mulb
pop
lods
shl
xchg
add
out
mov
fcmovu
enter
test
push
cltd
and
testl
adc
test
arpl
out
jns
sub
jo
sub
inc
and
pusha
and
mov
mov
outsb
pushf
xor
sbb
pop
ds
in
mov
and
xlat
arpl
push
in
aas
cmpsl
mov
pop
js
dec
adc
sub
jne
inc
fcoms
add
notl
mov
mov
pop
cmpsb
push
gs
and
std
pop
pop
or
mov
in
push
das
decl
hlt
ss
inc
insb
cmp
or
lahf
loopw
repz
imul
aaa
pushf
clc
push
loopne
cli
adc
loopne
push
inc
adc
sbb
xchg
gs
seto
sbb
pushf
sbb
es
std
cmp
add
rcrb
stos
test
push
xor
popf
add
add
lret
mov
sub
inc
cmp
mov
repnz
out
cmpsl
les
aad
fs
add
sub
inc
or
xchg
je
lret
push
pop
sub
ss
jle
cmp
xlat
dec
iret
xor
add
outsb
push
loopne
lahf
mov
cmc
clc
inc
mov
into
arpl
ret
aas
dec
xchg
nop
pop
loop
mov
nop
stc
cmp
push
in
and
jae
test
aaa
jns
and
mov
xlat
iret
movl
ja
mov
mov
nop
sbb
test
cmp
daa
out
add
jp
shrb
mov
mov
pusha
push
lret
mov
xor
shrb
pop
shlb
stos
mov
cmp
pop
jmp
xchg
xor
push
push
loope
sub
je
out
in
mov
data16
out
sbb
inc
dec
push
adc
and
int
iret
or
divb
sarb
sbb
xchg
xchg
imul
and
lds
or
adc
mov
popa
divl
rcr
in
cmp
lret
pop
mov
inc
sub
push
repnz
mov
stos
mov
or
fcmovbe
movsl
push
cltd
ja
rorl
pop
jp
mov
loope
cmp
inc
jmp
ja
fistl
sbb
ja
xor
cltd
out
sub
sub
out
add
lahf
into
xor
lods
imul
pop
sbb
test
sbb
std
pusha
xlat
push
shlb
out
cwtl
lcall
and
xor
jl
xchg
sbb
sub
push
pop
enter
adcl
dec
push
cmpsl
add
popf
out
mov
pusha
sub
inc
andb
inc
mov
push
insl
movsl
jmp
jle
pop
ss
aam
sub
cld
add
mov
nop
and
clc
jge
imulb
shlb
add
dec
push
push
push
addr16
std
sti
rcll
popf
int3
mov
jnp
insl
lahf
fcmovbe
mov
xor
sbb
xchg
mov
jmp
cmp
pop
gs
out
popa
xor
outsb
or
push
mov
mov
fildl
push
mov
inc
cmpsb
repz
sub
mov
jmp
mov
mov
leave
mov
out
pop
subb
pop
pop
dec
dec
mov
xchg
mov
rcl
mov
mov
add
push
shr
push
gs
and
je
adc
and
sub
cs
pushf
and
mov
divb
popf
stos
lea
xchg
jne
sub
add
je
jecxz,pn
push
js
ret
cmp
push
ss
aam
cltd
lret
cwtl
cmp
sub
pop
and
insb
pop
lods
pop
adc
stos
and
out
in
stos
lret
aaa
fwait
xchg
mov
mov
imul
outsb
jb
mov
add
loopne
mov
pop
push
das
adc
mov
in
testb
inc
pop
push
out
in
sub
xchg
fcompl
sub
mov
mov
fwait
popf
jecxz
sbb
adcl
mov
pop
and
push
mov
fldl2t
mov
mov
aam
mov
aad
jns
mov
enter
jns
jo
sti
sbb
rcrb
inc
fcmovnbe
pusha
mov
sbbb
mov
pop
mov
push
ret
or
js
int3
pop
jmp
jl
sub
mov
mov
ret
addr16
daa
insb
add
fsts
mov
cmp
jne
iret
or
popa
and
or
mov
popf
arpl
push
or
add
sub
push
xchg
add
pop
dec
push
push
dec
sub
insb
mov
cltd
fldcw
or
dec
leave
jg
fmull
add
push
jns
lock
outsl
lcall
cmp
xchg
shlb
ds
pop
dec
out
xchg
mov
jge
mov
pop
adc
jae
les
sahf
and
xor
xchg
xor
mov
jae
mov
push
xor
pusha
xchg
scas
pop
insb
imul
cmpsl
cmpsl
adc
xchg
ja
daa
sub
add
call
stc
shrb
shlb
sahf
or
aad
repnz
push
push
arpl
sub
xchg
mov
popf
xchg
xor
cmp
pop
rcr
aaa
mov
pop
out
cmp
mov
cmp
dec
pop
jbe
jnp
push
mov
repz
negb
xchg
jne
push
xchg
add
and
faddl
rorb
popa
mov
in
dec
test
fistps
test
sbb
subl
push
call
sbb
fcompl
sub
hlt
call
lods
je
push
iret
mov
pop
add
sar
loopne
dec
aad
push
lahf
pop
fwait
mov
inc
int
pop
fldcw
arpl
jmp
xchg
aad
push
cmc
loop
pushf
cmp
aad
sbb
push
mov
cwtl
cmp
js
xor
repnz
sbbl
in
imul
mov
test
pop
xchg
ljmp
or
rcrb
movsb
inc
sti
mov
push
sbb
cmc
jns
adc
xchg
cltd
and
frstpm(287
cmp
movl
test
push
arpl
les
adc
push
push
push
jl
ds
mov
leave
stc
clc
or
ljmp
mov
sbb
fxtract
sbb
xchg
in
jmp
js
cmp
xchg
lcall
add
push
mov
div
jo
push
adc
push
pusha
cmp
adc
mov
xor
xor
gs
dec
fisttpl
aam
movsb
xchg
adc
jbe
ljmp
test
bnd
push
das
add
adc
add
loop
fisttpl
or
pushf
ficoms
jmp
add
pop
ja
inc
xchg
sbb
jl
pop
cmp
cmp
cmc
shr
jae
push
arpl
lods
ja
and
mov
test
into
rolb
mov
mov
mov
xchg
add
jae
dec
add
xchg
mov
in
push
aad
pop
cld
xchg
imulb
push
add
mov
mov
sub
lret
cwtl
ja
mov
add
jecxz
pushf
jo
xchg
xor
mov
jbe
mov
and
mov
jns
xchg
pop
pop
jo
sbb
adc
xchg
jne
das
inc
hlt
pusha
addb
dec
scas
inc
out
xor
stos
xchg
and
pop
insl
adc
mov
popa
fcoms
mov
push
cmp
ret
out
xor
mov
jle
pop
jae
mov
jbe
dec
pop
sub
mov
add
mov
dec
push
xor
out
jae
jb
inc
scas
jg
fwait
add
fdivl
xchg
pushf
ja
cli
cmp
incl
sub
loopne
loop
icebp
aad
aad
loopne
lea
scas
je
stos
or
mov
mov
lcall
xchg
jmp
adc
jnp
mov
imul
mov
cmpsl
repz
into
add
cmp
inc
mov
push
cmp
jl
jmp
pop
mov
sub
and
dec
stos
aaa
jecxz
xor
clc
test
bound
pop
sbb
jns
and
adc
pop
stos
pop
xor
cmp
notl
mov
dec
hlt
xor
lods
xor
and
aam
adc
add
xorb
sar
subl
lock
mov
js
jbe
repz
bound
xchg
cvtpi2ps
mov
enter
dec
ret
testl
inc
nop
inc
inc
xor
jecxz
mov
mov
cli
mov
lock
or
xor
push
and
loop
shrl
gs
fsubs
xchg
cltd
dec
lods
shr
and
sub
add
xchg
loopne
and
jle
les
xor
rep
pop
sub
push
sti
push
cmp
or
push
pop
pop
mov
pop
arpl
jb
mov
stos
xlat
xchg
xchg
aas
and
ljmp
and
adcb
mov
xor
fwait
pop
mov
inc
iret
xor
out
pop
gs
jmp
sahf
push
fstps
jo
int
and
inc
mov
int
mov
and
xchg
loopne
mov
adc
mov
or
repnz
iret
daa
mov
xchg
and
or
and
pop
ret
stc
cmp
push
mov
nop
shrl
in
outsl
xchg
daa
jge
popa
add
or
push
inc
jmp
xchg
jbe
pop
clc
loop
jl
ret
pop
ss
sub
inc
out
addr16
sbb
push
ret
cltd
pushf
xchg
pop
cs
push
call
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
bound
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
bound
nop
bound
mov
add
bound
jo
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
bound
aam
inc
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
arpl
nop
arpl
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
test
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
test
nop
test
mov
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
test
aam
inc
add
test
hlt
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
test
nop
test
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xchg
addb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
