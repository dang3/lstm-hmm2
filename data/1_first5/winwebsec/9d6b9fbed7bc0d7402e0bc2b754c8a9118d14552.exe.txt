out
ljmp
lea
xor
mov
movb
sub
sbb
cli
fwait
adc
sbbl
push
adc
xchg
loop
ret
and
inc
call
xchg
btcl
mov
sbb
shll
stos
scas
enter
pop
subl
mov
xchg
loope
push
aad
mov
cs
shrl
or
and
push
sti
ss
inc
vmread
repz
arpl
pushf
into
or
inc
in
dec
movswl
mov
shr
pop
adc
jno
xchg
sub
test
dec
inc
cmp
xor
dec
push
mov
out
rol
cld
jge
add
ljmp
pop
addr16
rol
outsl
cmp
arpl
pop
loopne
xchg
mov
cld
cmp
ja
add
sbb
add
mov
les
cmp
xchg
xlat
inc
mov
repz
lahf
pop
xchg
xchg
outsb
push
sbb
mov
push
jbe
jmp
rcll
and
inc
arpl
andb
dec
stos
orb
imul
stos
cld
shll
sbb
sti
pop
aam
rcrb
ret
bound
aad
xor
clc
loop
imul
decb
lock
cmp
in
sti
sub
push
fwait
cmp
in
je
jnp
sub
in
cltd
sahf
dec
test
arpl
ss
cli
iret
into
aas
dec
daa
ret
subl
clc
inc
xor
pushf
in
jp
incb
hlt
lahf
or
push
or
push
sti
push
jno
xor
adc
cli
mov
call
sub
pop
add
pushf
mov
pop
fsubl
insb
push
adc
aad
add
insb
jl
fwait
pop
dec
pop
out
jo
inc
nop
addr16
sub
hlt
aaa
test
xor
and
add
cmp
test
or
int3
mov
cld
inc
pop
insl
sub
fimull
inc
add
or
jno
xor
pop
xchg
adc
aad
out
xor
movsb
push
xchg
fs
cmp
add
lret
or
xchg
and
push
repnz
jb
inc
sub
mov
call
shll
and
xchg
xor
test
sub
bound
add
iret
xchg
scas
aad
mov
hlt
jge
inc
xor
ss
loope
inc
fcomp
jae
orb
pop
lods
push
fs
out
inc
shrb
xor
xchg
xchg
in
cli
fcmovnu
cwtl
jae
or
mov
mov
mov
jmp
jmp
dec
cmp
repnz
and
movsl
mov
adc
and
stos
andl
icebp
jne
mov
repz
pop
push
pusha
pop
push
mov
call
dec
mov
in
pop
xchg
cmpsl
xchg
xor
decl
xlat
cwtl
outsl
aam
lahf
dec
mov
ja
sub
repz
push
aaa
adc
xor
in
xor
dec
and
test
lods
adc
andl
push
mov
aas
int
and
out
or
in
out
xchg
mov
push
insb
scas
cmpsl
gs
and
and
push
sahf
push
sarb
push
xor
jl
lret
xchg
mov
jge
int
add
bound
mov
fs
jmp
mov
dec
ds
adc
lods
fdivrs
mov
cmpsl
shrb
and
mov
jbe
pop
test
ret
lret
mov
sub
jg
inc
push
pusha
arpl
pop
lods
inc
or
in
xchg
jge
push
stos
adc
stc
popf
decl
push
cwtl
iret
out
push
mov
xchg
sub
insl
xchg
cmpsb
xor
imul
rolb
xchg
sbb
test
je,pn
pop
mov
jne
inc
or
fxch
scas
or
mov
jle
lret
xor
xchg
jbe
xchg
dec
imul
popa
test
inc
mov
in
mov
clc
xchg
push
jge
push
and
xchg
bound
jbe
aas
arpl
into
jno
mov
mov
or
add
cmc
inc
stc
popf
clc
icebp
xchg
dec
loop
ret
icebp
aad
cltd
push
sbb
out
dec
in
jne
jecxz
push
lods
std
in
rorb
outsb
shr
add
sub
lcall
or
mov
push
test
insl
push
je
or
cmp
and
mov
into
decl
push
mov
mov
pushf
and
dec
cmp
add
icebp
push
sub
insb
lea
pop
and
sbb
dec
jecxz
cmc
icebp
lcall
cld
sub
mov
sub
and
push
push
push
iret
push
inc
mov
sub
xchg
int
insl
adcl
and
shrb
push
jae
aam
mov
mov
and
fincstp
insb
dec
mov
fcmovbe
xchg
mov
lret
cld
scas
xchg
cltd
cmp
pop
adc
mov
mov
xchg
adc
jl
mov
mov
mov
dec
push
sahf
add
in
or
out
or
dec
test
cli
or
pop
fidivs
cmp
imul
popa
imul
subl
mov
out
leave
pop
rorb
imul
shlb
into
inc
mov
dec
clc
dec
ds
xchg
dec
xchg
or
int
repnz
scas
xchg
ret
push
or
cmp
stos
test
icebp
cmp
mov
fdivrp
and
pop
int
mov
cli
jl
lahf
cmp
stos
and
add
negl
mov
call
cmp
stos
inc
testl
cmp
mov
in
push
repz
push
test
mov
loopne
cmp
jmp
dec
and
mov
mov
pop
in
push
out
popa
bound
cmp
sub
shrb
fcmovnu
pop
out
and
jne
aas
stos
ds
fcompl
pop
or
pop
mov
adc
mov
add
xchg
shlb
or
lcall
test
bound
movb
addl
and
mov
pop
in
lds
pop
pop
and
add
or
das
fidivs
imul
lea
or
call
stos
fistl
in
jl
mov
and
mov
es
mov
cmp
popf
xor
cs
repnz
xchg
into
andl
inc
dec
push
repnz
flds
addr16
adc
mov
xchg
adc
jg
jne
les
imul
xor
jmp
das
jmp
out
lods
sub
push
cmpsb
push
add
into
inc
icebp
pop
mov
push
arpl
mov
jne
scas
xor
enter
in
push
subb
sub
stos
xchg
jne
sbb
xorl
scas
xchg
in
inc
push
std
int
fildll
movsl
addr16
adc
lock
jp
sub
inc
or
shl
fimull
xchg
jns
xlat
pop
lea
fcompl
add
fbld
sub
lcall
add
dec
pop
in
call
mov
negb
xchg
inc
sbb
mov
push
and
ljmp
scas
test
mov
pop
push
sbb
lret
movd
inc
movsl
inc
xor
jne
gs
fnsave
dec
cwtl
xchg
push
add
xor
cmp
test
fsts
jp
roll
out
filds
mov
imul
or
lret
sbb
jbe
pop
mov
pop
pop
lds
mov
and
enter
fimuls
in
xor
adc
mov
sub
push
pusha
aam
out
adc
outsb
fcoms
sub
push
fcmovnb
repnz
sbb
cmpsl
ret
jmp
xchg
fwait
cmpb
xor
fs
loop
mov
xor
jnp
ret
jno
push
data16
scas
inc
test
stc
imul
jns
fwait
clc
fimull
inc
aad
adc
jae
repnz
test
jg
sbb
cmp
push
sub
shrl
int
ss
sbb
pusha
xor
adc
xlat
or
nop
popf
ljmp
loop
mov
rolb
xor
sub
push
mov
sub
or
pop
pop
jg
addr16
stos
mulb
pop
daa
mov
push
add
stos
or
rclb
gs
jmp
dec
adc
outsl
insb
xchg
xchg
and
dec
push
inc
mov
jo
push
pop
ret
rcll
inc
out
pop
fstps
pop
icebp
xchg
test
xchg
mov
fcmove
lcall
cmpsl
mov
jno
mov
push
jg
or
sub
aas
fldpi
jae
inc
test
dec
adc
sub
sub
dec
mov
adc
mov
scas
adc
scas
arpl
mov
pop
dec
mov
test
xor
popa
mov
or
shll
mov
dec
xchg
sbb
imul
mov
fistpl
por
add
pop
outsl
push
cmp
mov
add
scas
mov
test
mov
inc
add
aad
repz
aad
pusha
mov
movsl
fs
xor
jle
inc
stc
repz
mov
mov
repz
push
mov
repnz
pop
fstpl
out
divb
inc
pop
push
mov
adc
dec
dec
or
mov
push
jb
aad
sub
ljmp
sbb
js
mov
hlt
dec
mov
gs
xor
mov
inc
sub
lret
inc
imul
rdtsc
fsubl
and
cmp
mov
inc
sub
inc
and
sub
data16
push
dec
sbb
notl
xchg
pop
fcmove
cmc
cli
dec
mov
jecxz
insb
sub
sbb
xor
fwait
je
xchg
es
pusha
mov
add
pop
and
inc
inc
mov
cwtl
pop
rolb
push
and
adc
jle
movsl
leave
inc
lcall
dec
push
cs
or
sbb
xchg
adc
inc
sub
ret
mov
pop
sbb
dec
inc
mov
or
lock
adc
hlt
mov
sub
loopne
js
addr16
mov
rcll
in
jae
and
rcl
push
push
pushf
xchg
in
cmpsl
outsl
lahf
pusha
push
push
movsb
leave
ja
cmpl
and
cli
andb
popf
push
xor
inc
adc
mov
out
addr16
in
lahf
jo
icebp
gs
sbb
mov
in
xlat
mov
mov
cli
ret
mov
adcl
clc
cltd
or
mov
inc
cmpsl
hlt
adc
or
pusha
inc
fldenv
lea
jl
jg
jmp
test
cld
lock
xchg
xchg
ss
xlat
test
push
inc
rcl
stos
icebp
cmp
sub
xor
rcr
lods
stos
adc
mov
push
and
jge
push
add
xor
je
pop
jmp
pop
mov
mov
pop
sar
rclb
pop
inc
decb
and
insl
pop
and
in
into
shrl
or
shll
mov
sahf
roll
out
sub
push
pushf
sub
pop
cwtl
lods
mov
mov
rorb
rcll
mov
popa
call
hlt
mov
sbb
jge
inc
lret
xor
lret
push
aaa
lcall
jbe
pop
push
jns
lds
adc
or
xor
and
cli
xchg
sub
xchg
mov
xchg
maxps
xor
xor
movsb
scas
sbb
mov
arpl
inc
pop
negb
fsubrs
sub
shrl
and
dec
loop
pop
int
push
iret
lock
add
loopne
fistl
je
sbb
stos
cmp
mov
pop
nop
sbb
daa
leave
repz
stos
inc
mov
push
shll
or
sub
pusha
outsb
inc
adc
mov
cmp
adc
ret
mov
and
leave
cmpsl
or
loop
mov
fiaddl
sub
cmc
addr16
aad
add
cmp
mov
out
and
cmpsw
pop
or
lahf
xchg
insl
mov
mov
ds
mov
loopne
dec
sbbb
je
or
xchg
sbb
mov
repz
mov
cmp
int
mov
mov
jmp
push
xchg
shll
fsub
pop
push
js
rcrb
hlt
xchg
fnstsw
dec
sub
mov
add
loop
aaa
bound
push
jp
fidivs
rcll
mov
mov
cmp
add
xor
push
repnz
push
aas
mov
xchg
jge
xor
adc
adc
hlt
mov
mov
out
xchg
push
dec
and
shll
xor
adc
stos
int
mov
stos
daa
mov
mov
push
push
ds
jmp
or
adc
addr16
scas
cmp
add
stc
or
jne
jp
stos
mov
mov
push
dec
std
ja
sbb
loopne
jne
add
pop
or
aas
inc
cmpsl
lock
push
lds
sarb
push
jmp
mov
pop
sbb
test
rclb
ja
fmuls
jmp
ss
cmovae
daa
mov
rclb
mov
fdivs
out
push
mov
ljmp
mov
das
loopne
dec
add
and
sbb
dec
fistpl
xor
mov
push
mov
push
xchg
ret
push
cmc
adc
cld
mov
xchg
xchg
xchg
xchg
mov
in
dec
add
cwtl
and
fwait
push
pop
loopne
pop
in
arpl
push
sub
xor
add
or
sbb
mov
imul
rclb
addl
test
lret
nop
cmp
push
and
lret
call
shlb
cmp
mov
sbb
cs
pop
les
fcoml
inc
cwtl
xor
sub
ret
stos
push
fimull
inc
push
scas
xchg
subl
or
lret
popa
ja
jge
push
mov
sarl
cli
lds
aam
jnp
fildl
leave
in
mov
je
xor
pop
pop
push
push
jecxz
js
in
push
mov
mov
outsb
stos
into
in
fstl
rorb
sub
or
addr16
subb
jnp
lahf
ret
fstp
ficomps
clc
cli
out
lret
adc
adc
mov
test
aaa
fsub
fmull
mov
fdivr
sarl
sti
xchg
push
mov
adc
std
fistl
push
mov
loope
or
js
xchg
movsb
out
dec
and
sti
pop
cmp
adc
imulb
or
xchg
shrb
adc
mov
popa
push
push
xchg
popa
sub
xchg
test
sub
test
andl
push
in
lds
sub
sahf
jbe
fwait
or
cmp
push
push
mov
daa
std
adc
popl
jnp
xlat
mov
or
int3
push
cmc
jecxz
mov
fimull
jl
push
hlt
mov
imul
aad
cli
mov
loop
push
inc
aaa
jle
push
sbb
out
in
xor
xchg
sbb
pusha
cmp
insl
inc
dec
insl
stc
sti
int3
push
xchg
call
dec
and
aad
and
adc
xchg
and
push
pushf
push
imul
pusha
test
stos
sub
cs
xchg
dec
nop
ja
aad
push
mov
sub
scas
push
mov
outsb
jno
movsb
negl
or
das
paddsb
mov
add
add
cli
ret
mov
dec
out
fisubrl
insl
mov
rorl
pop
fld1
fisubrl
jl
add
les
fs
insb
xlat
arpl
daa
adc
mov
ret
loop
xor
js
add
enter
jnp
inc
sti
adc
lock
and
adc
and
sub
push
jp
lods
das
mov
cmp
cmp
imul
dec
xchg
inc
jns
mov
mov
js
mov
lock
sub
cmp
pop
out
cmc
and
ret
fcmove
push
in
xchg
sarl
rolb
xchg
mov
or
jge
decl
lods
adc
inc
xchg
fdivr
orl
pushf
nop
in
jle
and
gs
cmp
sub
call
add
xor
and
xor
lea
pop
pop
and
xchg
ljmp
xor
dec
jmp
ljmp
lds
addl
add
push
cmpsl
outsl
jge
clc
or
pop
cmp
or
mov
hlt
jne
inc
xchg
jp
inc
loopne
mov
sub
mov
daa
and
cwtl
xchg
sar
and
lret
stc
lea
sbb
xchg
sub
stos
jne
insb
adc
mov
imul
and
fidivrl
xchg
jl
lods
cwtl
pop
std
jg
test
pop
sub
sub
iret
mov
push
pop
fsubl
clc
test
push
mov
fcom
add
ljmp
lea
out
push
jae
ds
fcompl
insl
xor
xchg
push
test
rorb
insb
inc
add
and
sbb
jmp
or
adc
xorl
mov
jmp
push
outsb
sbbl
pop
jg
mov
and
les
frstor
pop
jecxz
or
inc
cltd
jge
xlat
movsl
pop
js
or
sub
or
lods
nop
and
push
enter
pop
and
xlat
das
int
pushf
xorl
push
adc
inc
xor
push
bnd
sbb
or
hlt
mov
sub
xchg
cli
dec
dec
inc
add
imul
mov
add
and
popf
mov
stc
pop
sbb
add
test
cmpsl
es
cmp
and
mov
loopne
jecxz
or
jl
xchg
or
jge
aam
lods
xlat
push
jecxz
jg
cwtl
pop
xchg
mov
mov
js
lea
rorb
jmp
stos
or
jp
dec
xchg
or
call
and
jae
lods
fidivrl
jb
scas
cltd
dec
ljmp
xchg
mov
push
lcall
xor
mov
fimull
fists
aaa
mov
outsl
lock
pop
sahf
enter
repnz
stos
dec
loope
mov
sbb
cwtl
add
stos
fmul
sarl
cwtl
inc
cli
dec
hlt
push
repz
or
cmpsl
cwtl
jmp
jmp
push
stos
and
imul
dec
ljmp
test
push
sub
roll
push
sub
aad
cli
add
lahf
push
push
mov
lcall
jl
fcmovnb
push
cltd
in
inc
icebp
jae
mov
hlt
sarl
mov
jg
sbb
rcl
sub
xchg
imul
mov
dec
add
xor
cltd
pop
out
sub
shlb
or
jne
push
sbb
xchg
inc
int
xor
jno
stc
cmp
sub
mov
int3
adcb
mov
add
xor
stc
jmp
ss
mull
lahf
adcl
repz
pop
into
push
ja
test
cmp
sub
jg
add
mov
push
inc
pushf
out
aam
icebp
and
punpcklbw
sbb
imul
scas
and
add
jmp
ds
sub
mov
arpl
je
or
dec
arpl
popa
and
stc
fs
mov
add
xchg
or
xor
js
mov
jb
or
cmp
lret
decb
test
adc
call
lds
pop
ret
mov
cld
xchg
out
shrb
xchg
jecxz
cmpsb
test
outsb
push
std
stos
dec
fisttpl
or
dec
xor
cs
mov
rcl
dec
sbb
daa
ror
inc
xchg
repnz
fdivr
jb
nop
mov
hlt
scas
xlat
outsb
and
in
lret
movsb
push
adc
jbe
popf
or
in
adc
mov
inc
xchg
push
das
cmpsb
cmp
mov
or
inc
mov
cmp
sub
dec
sub
ljmp
stos
jge
scas
adc
pop
out
sub
xchg
lods
pop
push
inc
popf
mov
hlt
add
pop
cmp
mov
adc
pmaxsw
push
fimuls
pcmpgtw
rep
shr
push
sbb
daa
loopne
int3
cmpsb
rclb
jg
inc
mov
or
dec
jge
rcrl
push
sti
push
lock
mov
push
add
ret
mov
adc
sub
ja
cmp
mov
test
gs
int3
fidivrl
inc
test
stos
dec
mov
mov
lock
inc
lcall
stos
addl
xchg
mov
mov
cmp
add
mov
scas
jne
out
pop
mov
push
and
jbe
loop
and
test
sbb
mov
icebp
ret
out
stos
cmp
sub
push
aas
divl
and
jnp
loope
fidivrl
cmc
je
or
push
xchg
and
push
adc
nop
fldt
cmp
sub
lahf
sbb
adc
sub
in
xchg
adc
call
gs
jae
ret
insb
inc
mov
test
sub
xor
inc
imul
adc
mov
inc
jo
sti
mov
cltd
imul
xor
ret
scas
lds
cmp
xor
jns
shrb
push
lds
fcmovnu
in
dec
cwtl
data16
xchg
insl
adc
add
mov
shll
ljmp
lock
lods
lret
lret
inc
call
sti
inc
test
xchg
rorl
out
pushf
add
sbb
push
std
cwtl
dec
data16
adc
and
fistpll
into
xor
cmp
mov
les
stc
and
into
or
loopne
cmp
mov
xor
mov
imul
adc
sbb
cmc
inc
je
adc
ret
mov
and
test
loopne
scas
loopne
xchg
cmp
jo
or
ret
adc
pop
pop
lea
dec
mov
jno
movsl
dec
popa
mov
xor
push
and
mov
jmp
inc
fdivrs
imulb
call
and
inc
jle
cmp
push
jecxz
mov
insl
out
outsl
aaa
dec
xchg
cmc
mov
test
orl
lret
and
mov
pusha
fldz
in
adc
pop
dec
jnp
loop
cs
in
add
bound
adc
mov
leave
imul
insl
jmp
xor
pop
add
dec
movsl
sub
mov
fsubr
in
add
in
dec
xchg
insb
inc
push
mov
sub
jno
adcb
add
dec
les
into
in
je
daa
push
push
mov
inc
aaa
out
cwtl
pop
ss
and
test
push
shrl
repz
xor
sbb
fsubs
mov
mov
xchg
mov
cltd
int3
dec
sbb
mov
dec
dec
cltd
inc
push
xor
dec
lods
mov
jne
cli
mov
outsb
stos
jne
into
cmp
jns
scas
pop
xchg
pushf
pusha
adc
and
mov
jmp
xchg
add
xor
mov
iret
pop
repz
pop
adc
loope
lea
xchg
lock
jb
mov
jbe
mov
pop
loop
fcomps
mov
pop
cwtl
repnz
jle
subb
mov
mov
frstor
xchg
sbb
adc
rcrl
push
std
insb
cmp
and
fadds
xchg
test
loopne
xchg
add
mov
mov
mov
mov
lock
sbb
mov
cli
rcl
mov
ss
jmp
js
cmp
sbb
cmpsb
lods
inc
mov
inc
fimull
addb
and
jmp
shlb
movsb
sub
and
pop
pop
pop
xor
dec
cmp
movlps
adc
mov
add
add
add
test
insl
in
lcall
movsb
sahf
xchg
fsubrs
loopne
iret
mov
jl
lods
and
or
cmpsb
sub
jp
sbb
jp
jb
iret
pop
imul
out
cltd
mov
jl
loope
or
repnz
lcall
movsb
xor
es
repz
sub
outsl
and
test
push
es
ja
clc
mov
xchg
xchg
mov
or
ja
pop
sbb
pusha
and
push
ljmp
push
fistpl
and
inc
jb
cmpl
divl
leave
inc
pop
sub
sub
inc
fcompl
aaa
pop
arpl
dec
fidivrs
andl
mov
lea
add
aad
ret
sbb
es
icebp
dec
lret
lcall
cmpsl
xor
repz
xor
sbb
pop
dec
inc
pop
inc
sub
push
aaa
test
and
out
lea
call
dec
pop
in
fwait
push
xlat
shrl
ret
popf
imul
jmp
pop
xchg
push
pop
mov
clc
sti
sub
rcrl
stc
xlat
stos
pusha
pop
cmp
mov
loopne
imul
dec
inc
aad
dec
rcll
adc
lahf
mulb
jae
das
test
das
push
xchg
call
inc
neg
mov
out
test
xor
push
xchg
jg
aas
mov
push
mov
dec
xchg
sub
mov
dec
mov
xor
or
add
cwtl
stc
das
mov
out
icebp
jecxz
and
rep
aam
xchg
mov
or
pop
cwtl
test
cld
decl
arpl
mov
mov
js
cmp
lds
pop
shrb
jnp
fsts
sub
stos
mov
dec
add
gs
testl
cwtl
xchg
xlat
push
push
iret
pop
sti
into
mov
jo
or
ja
sub
fiadds
dec
loop
inc
xchg
mov
movsl
push
add
and
loop
sub
and
push
pop
cmp
and
imul
fwait
setg
mov
out
jp
stos
fldl
fcmovu
mov
cmc
push
in
imul
jne
sub
fcmovu
adc
aaa
xchg
pop
testl
push
nop
xor
shlb
ljmp
sub
stos
inc
jo
aam
adc
sbb
jge
or
dec
add
inc
pop
fcmovnbe
jecxz
lods
leave
or
mov
mov
xchg
mov
ret
adc
divb
cmpsb
daa
cs
inc
outsl
int3
out
sbb
xchg
xchg
test
imul
es
pop
sti
popa
out
in
mov
mov
jmp
sar
fldcw
sahf
fimull
cli
xchg
cwtl
push
adc
mov
stos
sub
into
shll
mov
jns
xorb
jmp
in
cmp
movsl
xchg
mov
jnp
pop
stos
and
cmpsb
mov
stc
test
mov
loop
pushf
cmpsb
sbb
cmpsb
pop
dec
test
cmp
pop
xchg
test
push
ds
js
jbe
je
loop
cmp
test
pusha
test
lock
jl
dec
into
lcall
cltd
loopne
push
xor
dec
add
inc
push
fmuls
cmc
xor
mov
mov
mov
adcl
jle
jle
and
pop
or
sub
jo
rorb
pop
xlat
jecxz
sub
add
out
xchg
jl
xor
js
out
jmp
daa
xor
and
je
test
mov
in
mov
xor
scas
push
mov
iret
popf
cmpsl
mov
fisubrl
jae
rorb
inc
mov
mov
xchg
add
dec
sarl
and
cld
aas
xchg
pop
mov
mov
fistpll
fs
lods
fmuls
jne
sbb
mov
mov
pop
les
xor
push
inc
clc
push
clc
addb
ret
push
jae
xchg
mov
outsl
jnp
mov
lret
xchg
fs
popf
xchg
push
pushf
jg
loop
out
pop
xchg
adc
push
pop
sbb
mov
or
mov
mov
mov
das
sub
fsts
adc
rclb
jecxz
jne
mov
dec
jne
je
movb
mov
cs
cmp
mov
outsb
dec
lret
ret
lea
aam
dec
jae
cs
mov
aas
add
mov
add
xchg
jmp
pop
stos
cs
jno
ss
lahf
out
testl
dec
je
or
xor
jg
das
sbb
lea
mov
fists
es
pop
xor
stos
fdivp
pushf
push
fwait
add
inc
jp
and
movntq
out
mov
jp
push
jae
setne
outsl
fmulp
inc
sub
xchg
imul
shrl
mov
cmp
push
rcrl
pushf
xor
cmc
push
cld
lds
addr16
lret
bound
add
lahf
and
push
mov
push
vpaddb
pop
mov
fistps
push
stos
pop
enter
dec
les
pop
pop
or
loopne
testb
ljmp
lock
cltd
sbb
dec
dec
addb
repz
scas
pop
clc
inc
jnp
or
scas
ret
pop
loope
repnz
rolb
repz
js
push
popa
sarl
xorb
adc
movsb
push
out
jns
xchg
or
xor
adc
mov
lds
push
cmp
mov
adc
xchg
int
insl
notb
sub
aaa
ja
aaa
or
or
mov
fcmovnb
lret
pop
shll
fadds
scas
imul
sbb
hlt
scas
mov
xor
mov
mull
and
ss
or
popf
xchg
fs
into
adc
or
mov
lahf
adc
add
xor
in
xchg
or
jp
test
js
pop
mov
add
enter
fisttpl
mov
sbb
xchg
or
jecxz
fcmovne
mov
dec
mov
movsl
push
xor
lcall
cmc
imul
repz
lock
jp
xchg
pop
lods
lods
add
data16
lahf
fcmovnu
jns
in
outsl
data16
stos
or
jle
fcompl
mov
call
and
shlb
ret
mov
cmp
jno
mov
mov
jecxz
cwtl
and
xor
addr16
sub
scas
mov
dec
add
out
pop
int
test
je
inc
sti
xchg
push
ret
test
out
mov
sub
dec
mov
lcall
push
push
xor
dec
shrl
xchg
cmp
add
lahf
xchg
xchg
add
lods
mov
xchg
stc
scas
or
ror
sbb
stc
fmuls
lcall
js
mov
inc
pop
or
fs
int
sbb
leave
sbb
xor
imul
xchg
push
xchg
cmpb
lret
push
sub
xor
xor
sbb
fnsave
or
test
mov
jne
xor
test
pusha
clc
leave
in
mov
das
and
int3
jmp
xchg
pop
sub
cmp
mov
stos
inc
add
sbb
pop
lret
or
sub
and
push
fistl
ja
push
rcl
inc
pusha
cmp
xchg
pusha
sbb
dec
fldcw
jo
js
add
scas
fstpt
cmp
in
test
sub
cmc
fcomps
std
sbb
pop
mov
jge
xor
sub
movsl
sbb
mov
ret
mov
mov
stos
mov
push
cmp
lods
pop
sbbl
jae
pop
xchg
loope
push
and
mov
insb
loopne
mov
or
ret
les
cs
out
sbb
inc
cmp
rcr
push
pop
xor
push
sbb
cmp
ret
lods
push
popf
orl
loopne
adc
repz
in
lret
fists
in
shlb
xlat
inc
sbb
into
sbb
xchg
pushf
jns
ficomps
fld
inc
or
lods
lahf
pusha
inc
jp
xor
adc
push
bound
js
pop
cmp
mov
xchg
jle
imul
mov
mov
dec
add
dec
push
sbb
push
jnp
out
and
int
stos
aas
loopne
and
xor
mov
mov
sub
notb
nop
pop
fwait
xlat
sbb
or
mov
stos
push
ss
es
fs
xor
add
loopne
add
jo
mov
fldt
rcrb
inc
xor
mov
xchg
leave
mov
jmp
jbe
mov
in
insl
or
mov
das
dec
faddl
aam
inc
mov
data16
in
sub
or
inc
andl
jno
insb
ja
lock
movsb
push
lods
add
pushf
lahf
daa
cmc
mov
mov
and
in
mov
mov
xchg
std
jge
imul
ds
jp
xor
cmpsb
push
dec
clc
pop
cmp
adc
jle
fwait
sbb
mull
loop
fwait
scas
rclb
call
out
xchg
rorb
dec
dec
xchg
dec
xchg
inc
jae
fbld
mov
bound
lods
movsl
in
shl
fldcw
sub
cld
mov
movl
mov
sub
test
dec
dec
xor
fnstsw
shld
test
push
fistps
std
dec
into
std
pushf
xor
popf
pop
unpcklps
push
pushf
imul
or
mov
push
test
call
mov
sar
movsl
shrl
cld
inc
xchg
js
gs
mov
cld
aaa
pushf
adc
fadd
sub
dec
in
inc
pop
gs
mov
xor
dec
andb
movsl
fldt
sbb
xor
push
jno
stc
mov
scas
outsb
rclb
clc
or
into
int
aaa
inc
insb
js
jg
sbb
decl
push
mov
cmp
adc
sub
jge
clc
out
addr16
test
ret
or
mov
dec
add
cltd
cmc
pop
int
xchg
mov
add
push
loop
imul
inc
enter
and
sbb
arpl
xchg
pop
or
sub
insl
sub
sbb
lahf
enter
scas
jne
add
mov
dec
jmp
insb
add
ss
insb
outsl
pop
lock
fsubrs
frstor
jns
fucomp
jns
lods
inc
ljmp
lcall
push
or
inc
mov
jmp
and
mov
cmpsb
js
pop
movsl
unpckhps
int3
iret
cmp
xor
lea
mov
mov
inc
fidivrs
fnstenv
fwait
push
stc
ja
pop
scas
into
jae
xor
pop
into
mov
jno
fwait
sbb
adc
das
xor
hlt
movsl
insb
adc
mov
ja
mov
mov
dec
arpl
mov
inc
insb
jae
jecxz
or
clc
in
inc
or
push
jge
cmpsl
jae
lods
jb
in
inc
aas
shll
add
dec
pusha
cmp
jecxz
in
dec
daa
bound
das
out
or
or
fdivr
mov
push
xorb
jns
imul
movl
pushf
mov
xor
inc
insb
jecxz
mov
inc
dec
mov
xchg
dec
aad
sbbb
or
ss
mov
jmp
mov
xchg
adc
cmp
fdivrs
jle
idivb
jbe
mov
push
and
jecxz
dec
stc
ret
xchg
jmp
pusha
xchg
push
sbb
leave
stos
adc
imul
insl
xchg
pop
lret
das
leave
pop
dec
and
gs
aam
rorl
push
sub
or
mov
sub
xor
stos
mov
cmp
movsb
js
lock
sub
xor
mov
push
cmp
cmp
aam
sub
jle
or
shrb
ret
in
lds
movsb
rcrl
fwait
lahf
xor
add
sbb
pop
icebp
iret
lock
cmp
lret
cmp
div
or
fmul
shll
or
lock
mov
and
or
push
outsl
mov
cs
mov
arpl
ffree
and
fidivrl
repnz
mov
or
push
or
mulb
ds
cld
cli
dec
jne
and
or
cmp
gs
adc
fcompl
mov
and
adc
in
push
testl
leave
cmp
loop
cmp
dec
ds
jns
sub
cwtl
cli
repnz
div
adcl
mov
and
pop
pop
out
adc
fsubl
jne
mov
pop
cmp
mov
jmp
adc
sbb
repz
sti
mov
xor
std
test
js
inc
clc
mov
mov
jnp
sbb
into
icebp
int3
dec
push
or
push
inc
mov
sahf
out
jno
adc
out
mov
jmp
inc
or
fisubrs
jg
or
sbb
and
out
mov
sahf
addr16
xchg
inc
xchg
mov
ficoms
sbb
jo
and
in
fwait
fwait
dec
mov
mov
fmull
cmp
xchg
dec
imul
ds
mov
mov
mov
mov
jae
xchg
dec
mov
jecxz
add
insl
andb
mov
fcompp
hlt
xchg
and
stos
push
andl
cltd
mov
sbb
test
icebp
imul
mov
sbb
ss
inc
and
adc
fnstsw
xchg
in
loope
mov
add
test
outsb
dec
pop
jg
push
xor
cmp
jecxz
xorb
andb
mull
xor
shrl
sbbb
fchs
mov
xlat
or
and
scas
sub
addr16
sub
fadd
push
mov
int
loopne
mov
mov
jo
or
imul
icebp
adc
xor
je
cmp
rcrl
xor
xchg
xchg
mov
scas
imul
imul
adc
pop
test
aad
sahf
dec
jne
xor
and
xor
jle
ss
and
sbb
in
xlat
test
mov
jge
and
in
mov
pop
xlat
and
adc
xchg
lret
ret
ret
pop
mov
dec
ljmp
jge
mov
mov
es
arpl
sub
inc
pop
dec
cmp
dec
mov
cmc
out
jae
and
out
push
dec
addb
sbb
adcl
jae
movsb
pushf
int
shll
mov
test
push
aam
ljmp
addr16
mov
addr16
jns
clc
xchg
sarb
insb
data16
or
jle
inc
aaa
movsb
lret
cli
ds
sarl
sub
adc
mov
out
mov
out
sub
shrl
jns
or
and
add
or
repz
lds
testl
dec
jo
dec
dec
movsl
and
sar
mov
or
in
add
push
or
and
call
hlt
insl
adc
xchg
loop
mov
mov
mov
icebp
push
cwtl
cmp
cmp
and
pop
repz
adc
lock
cs
ljmp
or
mov
js
test
mov
lea
mov
xor
in
clc
add
pop
mov
push
icebp
dec
arpl
js
ljmp
sbb
xchg
push
adc
in
sahf
jge
dec
xor
or
inc
es
subb
cmp
in
loopne
xlat
push
mov
test
ficoml
cmp
les
dec
cmpsl
cmp
clc
lahf
cs
movsb
test
pop
fldenv
out
jae
push
add
inc
xor
add
inc
cmc
add
mov
outsl
cs
pop
pop
popa
call
xchg
stos
lock
ss
ds
andl
adc
and
out
adcb
sbb
adc
jnp
pop
cs
outsb
loop
mov
ds
sbb
xchg
movsb
in
daa
out
es
ljmp
test
lods
ljmp
insl
leave
pop
ret
pop
lds
inc
shlb
fbld
mov
loop
jnp
mov
push
cmp
aam
shrb
cmp
dec
shrb
popf
scas
push
rorl
sbb
mov
and
mov
mov
push
notl
jb
scas
add
stc
rolb
xchg
stos
pushf
cmp
dec
lret
mov
icebp
jp
pusha
xchg
mov
mov
mov
xor
hlt
es
add
mov
mov
xor
shr
dec
das
insb
dec
cmp
mov
mov
ds
push
outsb
je
and
dec
mov
jns
push
and
add
adc
sahf
roll
inc
jmp
jecxz
inc
push
mov
jae
xchg
mov
xor
popf
dec
popf
pop
inc
rcrl
jge
in
loop
ficompl
jg
jo
lds
mov
mov
outsl
stos
aam
adc
scas
dec
mov
xor
mov
cwtl
cmpsb
push
loop
sub
or
hlt
jecxz
out
xor
add
jns
or
xor
pop
push
sbb
cmp
push
mov
add
addr16
jmp
mov
sbb
lret
inc
jne
out
sub
int3
pop
push
pop
andl
ret
add
pop
xchg
mov
dec
aaa
sbb
inc
loopne
mov
xchg
adc
mov
sub
je
and
push
add
adc
push
pop
mov
mov
jmp
les
dec
scas
shrb
sub
loope
lahf
cwtl
inc
inc
fbld
cmc
xchg
sbb
or
jns
fdivp
sub
cmp
mov
sub
sub
adc
fistpll
movsl
push
xchg
cltd
jnp
inc
xor
mov
aad
lock
mov
gs
jge
xor
jmp
fsts
lret
ja
hlt
adc
adc
jle
inc
aam
push
shll
jmp
or
adc
mov
mov
scas
in
add
xchg
mov
or
std
mov
loope
sahf
lock
sub
jnp
jle
aad
popa
imul
jmp
dec
or
negl
pop
enter
sub
or
inc
jo
jp
cmp
pop
jmp
sbb
fs
xor
outsl
loop
test
xchg
xchg
mov
outsb
icebp
loop
add
jo
or
std
fstl
aad
add
jb
imul
xor
cmp
icebp
mov
jmp
popa
adc
adc
fdivrp
rcrb
fwait
and
and
sti
cmp
imul
fstpt
nop
sub
jl
push
les
jnp
pop
inc
icebp
push
sahf
xlat
pushf
repnz
aam
push
sar
in
lret
dec
lret
fldt
pop
lcall
das
js
addr16
lods
sub
ficompl
cmc
cmc
fsubrl
xchg
out
mov
insl
and
hlt
lcall
jns
lods
clc
mov
mov
int
jb
cmp
mov
arpl
and
push
inc
es
xor
cmc
int3
inc
fs
push
mov
mov
mov
ret
xor
movsl
mov
or
inc
pop
xlat
cmp
or
jmp
in
out
fsubs
test
rorb
sub
mov
test
jae
insl
mov
mov
ja
js
outsl
int
in
test
dec
mov
xor
inc
sub
cld
jle
iret
fldenv
cmp
hlt
ret
mov
int
cmp
xchg
stos
mov
lret
pop
xchg
into
ret
xchg
frstor
arpl
clc
jge
je
pop
mov
mov
inc
mov
push
inc
pusha
and
int3
push
sbb
mov
stc
scas
in
and
ds
fwait
test
int
repz
mov
inc
rorl
aad
and
sbb
mov
sbb
mov
cmp
push
popa
sbb
or
xor
aam
roll
sub
add
inc
push
ret
andb
lcall
inc
ret
mov
mov
pop
pop
sub
fistpl
hlt
daa
inc
xor
dec
lret
add
adc
ret
icebp
fdivrl
je
jns
dec
xor
add
rorl
ds
sbbl
xchg
lds
xorb
mov
jb
enter
fs
fwait
pop
mov
fdivs
cwtl
in
hlt
fcomp
movsb
and
add
push
sbb
fidivrs
jbe
movsb
sbb
lret
lods
xchg
js
xchg
jp
dec
mov
xchg
ficompl
dec
or
cmp
adc
xchg
mov
outsl
movsl
nop
push
int
jb
repz
xchg
bound
bound
adc
bound
mov
pop
sbb
sbb
ds
xor
add
mov
movsb
mov
jbe
hlt
push
lret
notl
mov
roll
jmp
xchg
pop
sbbl
push
repnz
pop
dec
dec
into
xchg
loop
adc
paddusw
mov
dec
and
ret
mov
fbld
aam
jmp
and
xor
push
test
gs
jmp
sti
jecxz
dec
lret
and
jno
cmp
mov
sbb
movsl
push
inc
mov
adc
xchg
lds
sub
dec
jecxz
add
fdivl
in
jns
adc
stc
mov
stos
add
adc
xchg
jg
insl
and
cs
dec
sub
push
cwtl
je
mov
adc
adc
jmp
or
xor
jbe
inc
or
mov
test
test
in
mov
fstp
pop
ret
mov
out
adc
inc
rorb
js
pop
mov
lea
in
daa
aam
test
pushl
push
jg
in
add
push
pop
pop
in
mov
lahf
out
fwait
jecxz
mov
inc
fnstenv
dec
iret
test
lea
add
out
mov
push
xchg
sbb
mulb
leave
and
lret
sbb
xlat
pop
call
jge
xchg
jnp
repz
dec
mov
ja
cmp
xor
ret
add
xor
ljmp
ret
pop
ja
or
cmp
test
fidivs
jae
dec
push
fsubl
xchg
mov
xor
adc
out
add
xchg
imul
jno
cmpb
lret
cmp
xchg
sbb
ret
test
sub
cmp
jp,pn
ret
nop
in
xchg
jbe
es
fs
xchg
ds
mov
cwtl
cld
jmp
mov
lahf
leave
xchg
xlat
subl
out
or
push
cmp
and
mov
mov
sub
mov
xlat
mov
fstpl
xor
mov
xchg
push
lock
fldl
imul
dec
sub
cmp
pop
sti
pop
or
xor
inc
xchg
push
sub
fcomi
stc
inc
jae
imul
push
jmp
icebp
mov
imulb
mov
dec
push
aad
mov
adc
lcall
fwait
cmp
ret
and
mov
mov
icebp
test
cmc
push
mov
inc
lcall
inc
pop
xchg
pop
scas
or
lock
negb
dec
pop
lret
rep
jle
sbb
jo
push
inc
cmpsl
jae
ret
adc
out
or
in
iret
jno
in
xchg
ss
roll
pop
xor
sub
xor
jle
lds
mov
mov
xchg
pop
and
in
scas
leave
xor
jmp
mov
fidivs
sbb
adc
nop
or
sbb
lock
xchg
jge
add
or
outsb
and
mov
je
sbb
pop
sub
push
cmp
pop
movsb
and
inc
call
or
mov
call
dec
pop
loop
inc
jg
mov
fadds
test
sub
xchg
xchg
and
rol
out
test
mov
pslld
roll
std
cmp
nop
dec
test
into
adc
mov
xor
imul
xchg
sbb
cmp
movsl
sbb
out
adc
ja
test
push
inc
in
fwait
cmpsb
test
xchg
test
ds
add
aam
sbb
mov
xor
sbb
stos
push
pop
sub
outsl
lcall
xlat
adc
xorl
xor
jne
sahf
mov
into
cmpsl
mov
data16
jnp
jl
cmp
scas
call
and
push
lea
scas
loop
adc
add
mov
int3
sub
sub
or
ret
movsl
movsl
xchg
sub
stos
aaa
arpl
jl
mov
fisttpl
daa
xor
incl
je
push
cmp
mov
andb
pop
loope
sub
pop
jg
outsl
jecxz
icebp
loopne
fldt
call
dec
dec
cmpsb
sbb
mov
xor
clc
bound
cmp
jl
dec
dec
inc
xchg
jne
sub
ret
std
xor
in
cmp
mov
mov
stos
movsb
cli
sbb
adc
fildll
aaa
je
pop
push
dec
sub
rcrl
inc
mov
inc
cld
shrb
mov
popf
lea
nop
sub
pop
sbb
dec
sbb
push
sti
xchg
test
xchg
lahf
pop
xchg
lahf
bts
fildl
fsts
sbb
lahf
sbb
lds
imul
mov
jne
fisttps
cltd
call
xchg
ficompl
fbld
stos
fldl
lret
pop
in
and
jle
ds
in
xor
sar
iret
shll
rclb
inc
imul
ss
es
sbb
push
pop
push
pop
inc
add
xchg
xchg
xchg
fwait
movsb
int3
call
xor
xchg
cltd
sub
inc
leave
insb
mov
push
fsubl
sysret
ror
dec
mov
jno
lret
je
ljmp
roll
add
pop
lret
into
les
out
sub
mov
lods
lock
adc
inc
out
add
push
inc
push
rorb
nop
pop
mov
adc
jnp
mov
cmp
into
fs
mov
xchg
aaa
fcomps
pshufw
xor
or
jmp
xlat
shr
test
mov
ficompl
mov
outsb
stc
and
xor
push
adc
cmp
stos
mov
mov
int3
hlt
sub
mov
aam
ss
ret
scas
cwtl
shl
orb
adc
xlat
lret
pushf
push
mov
push
ss
xor
repz
mov
sbb
inc
sub
mov
lret
push
push
jb
or
lock
lock
cmp
lods
jg
sbb
fists
in
xchg
lret
js
cmp
pop
movsb
adc
sbb
mov
into
jno
inc
or
add
pop
sub
aam
lods
xchg
push
jmp
in
mov
ja
test
inc
mov
gs
out
cmp
cmp
fs
xchg
or
jle
test
lahf
mov
imul
add
lods
jmp
ja
jl
inc
jmp
cltd
and
pushf
sbb
cmovns
fstpt
insb
insl
fcoml
mov
and
sbb
popa
xchg
in
cmp
jbe
shll
gs
test
jmp
lock
inc
aad
jp
sub
and
mov
push
out
push
mov
pop
cli
adc
jae
ss
xor
push
iret
mov
hlt
add
jno
xchg
iret
psubsb
loope
or
push
rorb
fstpt
out
nop
gs
jb
cwtl
xor
mov
arpl
pop
push
jbe
jnp
dec
push
mov
ror
rorl
mov
loopne
or
idivb
xor
test
dec
sub
imul
push
cmp
pusha
or
into
dec
cmp
pop
xor
stos
insl
shll
divb
and
stos
repnz
dec
sbb
pop
push
add
add
ret
or
pop
nop
cmp
pop
push
add
xor
mov
int
cs
pop
cmc
mov
sbb
fidivs
and
subb
xchg
loop
mov
mov
xor
jbe
jnp
xor
adc
cmp
or
sub
jns
mov
pop
jo
and
pop
mov
dec
enter
loopne
out
add
out
fidivl
les
sub
cmp
pop
nop
mov
fs
add
cwtl
mov
pop
ds
fbstp
dec
imul
aaa
das
out
cwtl
nop
mov
data16
push
ljmp
cmpsl
and
lods
jp
cmpl
fcoms
aas
mov
mov
xchg
xor
mov
fldcw
pop
stos
fs
inc
sti
icebp
inc
loope
mov
add
cltd
lret
pusha
les
jecxz
movsl
push
mov
sbb
xor
and
les
pop
imul
mov
adc
xchg
mov
iret
push
dec
jle
dec
insl
mov
rol
mov
lret
mov
inc
and
inc
pop
testl
jb
or
adc
pop
cmp
nop
push
aaa
jmp
adc
push
das
lea
and
call
pop
xor
mov
in
in
mov
mov
sbb
stos
or
aam
orl
dec
xor
test
cmp
insl
movsl
int3
subb
dec
clc
sub
xchg
mov
push
popa
es
push
cs
jne
pop
xor
leave
or
sti
shl
sub
imulb
jmp
loop
aas
sub
adc
stc
cltd
mov
push
cmp
xchg
out
scas
out
sub
inc
pop
cmp
push
lahf
ja
mov
cwtl
inc
sti
std
lods
shl
cmpsb
sbb
inc
stos
jmp
pop
rorl
cmp
lahf
and
into
jecxz
test
adc
push
out
lahf
fnstsw
inc
mov
and
popf
cwtl
pop
dec
ffreep
jns
cmp
push
test
ret
into
xchg
bound
fdivl
dec
inc
pop
or
loope
mov
sub
xchg
xor
hlt
pushf
xchg
mov
test
push
fidivrs
scas
paddusw
jns
or
ret
add
addb
sti
pop
inc
cld
push
sub
nop
dec
shrb
sti
scas
xor
push
sahf
fists
xor
sub
lock
sub
imul
mov
leave
icebp
rcrl
lret
xchg
xchg
ds
inc
fstpt
mov
jmp
iret
dec
fdivrs
add
fstpl
xlat
mov
nop
sbb
adc
dec
out
psubusw
lods
mov
mov
je
mov
addr16
icebp
xchg
xchg
mov
arpl
dec
xlat
push
dec
adc
add
in
mov
xor
xor
fidivrl
and
and
flds
rorl
in
xchg
mov
test
lret
in
xor
jns
rcrl
shrb
and
imul
or
sub
and
jge
int
xchg
insl
push
es
jne
mov
jp
cld
adc
mov
mov
rorb
jo
stos
push
jecxz
fldt
fnsave
outsb
jnp
sub
cltd
imul
imul
std
mov
cld
inc
loopne,pn
add
jno
jecxz
add
mov
inc
fisubl
jge
cmp
lret
xorb
mov
sbbb
pop
add
stos
push
pushf
out
icebp
push
iret
in
out
lea
call
test
hlt
xor
out
mov
add
fstl
xchg
push
ss
je
mov
pop
fmuls
lods
sbb
test
ffreep
xchg
movsb
adc
andb
cmp
push
lret
xchg
enter
cmp
xchg
dec
add
mov
jbe
ja
xor
das
lock
sbb
mov
pop
out
ds
jge
mov
jle
jns
dec
das
xchg
mov
test
out
movsb
cmp
or
popa
mov
xchg
jne
adc
sub
sbb
in
insl
ss
movsb
mov
clc
movsl
jmp
fdivrs
sbb
or
repz
mov
pop
lret
fisttpl
xor
fdiv
inc
ljmp
cmp
shl
mov
mov
xchg
sbb
out
xchg
jnp
lock
sbb
or
xor
lea
mov
popa
mov
loopne
jmp
push
pop
dec
aas
adc
test
cltd
push
cmp
ja
pop
in
jnp
xchg
push
mov
adc
inc
stos
sub
push
mov
push
sbb
push
pusha
cmp
loope
inc
add
xor
jnp
mov
shrl
scas
adc
cmp
ljmp
jle
dec
pop
cmp
mov
pop
cmp
dec
lahf
push
xchg
cltd
xchg
repz
sub
call
ljmp
jo
cwtl
jecxz
bound
jl
mulb
bsf
xchg
mov
es
pushf
dec
inc
jmp
notb
sbb
jno
shrl
sub
mov
je
roll
fldt
ficompl
jecxz
outsl
loopne
push
cmpsl
or
adc
add
inc
stos
xrelease
mov
mov
mov
test
lcall
xor
dec
fmuls
xor
imul
jle
loope
jmp
mov
negl
sbb
cs
aaa
mov
fldt
sub
popa
xchg
push
stos
orl
mulb
dec
jp
pop
adcl
lahf
xchg
cltd
rclb
jle
mov
push
inc
add
lret
add
sbb
cmp
xchg
in
mov
push
jg
inc
in
xchg
rclb
and
in
pop
xchg
mov
cmp
mov
mov
and
or
adc
aaa
fsubrs
mov
or
stos
lret
xchg
insb
clc
mov
push
imul
aaa
repnz
shrb
sahf
lahf
mov
push
xor
and
xchg
sbb
loopne
or
jl
pusha
jle
outsb
jno
shlb
dec
pop
adc
cmc
xchg
cmpsl
pusha
test
pop
ret
repnz
or
arpl
pop
mov
or
pop
mov
inc
in
jo
add
in
push
loope
aam
js
lea
test
pop
cmc
xchg
outsb
xchg
jg
addl
out
sarl
gs
push
pop
aaa
jae
lret
mov
or
in
outsb
ss
daa
dec
fists
adc
sub
loopne
and
out
test
push
loope
lea
cmp
cltd
adc
fstpt
cltd
into
popf
arpl
xlat
scas
scas
mov
mov
outsl
ret
adc
xchg
movsb
dec
test
pop
mov
aas
dec
mov
push
js
fidivrl
popf
xchg
sbb
mov
mov
repz
into
dec
mov
cmp
aaa
adc
add
in
pop
jno
sbb
push
adc
jb
adc
subl
mov
loop
adc
jg
stos
pushf
int
lds
mov
jnp
mov
inc
ss
add
mov
mov
mov
pop
std
iret
mov
inc
ficoml
sub
inc
push
dec
insl
out
js
add
std
pusha
mov
dec
dec
lret
daa
or
xchg
xchg
xor
or
and
cmp
aaa
mov
sbb
jno
sti
scas
fsubrl
mov
pop
sub
psubsw
mov
pop
fdivrs
cs
leave
hlt
out
popf
or
pop
inc
aaa
or
inc
xchg
and
addb
push
mulb
sub
pop
popa
mov
rclb
int3
out
lods
scas
into
pusha
jmp
jg
cwtl
pop
and
lret
sub
sub
orl
jg
inc
in
lret
ret
test
cwtl
outsl
pop
push
mov
xchg
and
pop
popa
fisttpll
gs
dec
jb
lret
xchg
inc
xchg
inc
push
aaa
dec
add
push
call
xchg
call
jmp
lcall
or
js
cmp
xor
sub
pushf
mov
lcall
iret
sbb
add
jg
jg
mov
fisubrl
repz
jb
aam
mov
bound
adc
dec
mov
cld
inc
push
pop
arpl
es
aad
cmc
sub
lea
push
or
add
loop
pop
push
mov
outsb
adc
ja
push
jecxz
push
orb
icebp
xchg
sbb
mov
fisttps
lahf
mov
call
lret
sahf
js
mov
xchg
test
in
jbe
xchg
leave
and
out
and
mov
jp
fimull
loopne
mov
scas
adc
test
or
jle
push
faddp
fcmovb
xchg
add
ljmp
subl
dec
fldt
shrl
out
insl
pop
icebp
jo
adc
xchg
push
pop
mov
inc
loop
sbb
fwait
or
push
fnsave
dec
pop
cmp
ret
pop
pop
outsb
leave
mov
cmpb
push
inc
cmc
cmp
movsl
inc
popf
mov
jmp
pop
ds
push
fs
mov
xchg
cmp
cmp
mov
cmp
xchg
lret
ret
shll
repz
std
and
ficomps
dec
xor
push
fistpll
les
dec
cli
dec
aam
mov
hlt
xchg
adc
aas
sub
cmp
mov
lret
sbb
loopne
jb
inc
cmpsb
aam
jg
add
sbb
outsb
jbe
jp
std
sub
loopne
adc
fidivs
push
das
fdivl
jmp
in
lret
mov
stos
outsl
clc
scas
loop
dec
mov
jge
out
and
pop
xchg
leave
dec
pop
andb
sbb
mov
or
subb
sub
fsubs
dec
faddl
into
cs
push
mov
dec
push
mov
pop
sbb
imul
jg
and
mov
clc
jo
aas
cmpsb
fcomip
ficomps
popa
mov
in
sbb
xchg
lcall
aaa
call
ss
xor
out
mov
sub
sti
xchg
or
ja
icebp
sbb
incl
aam
shlb
lods
dec
jle
inc
addr16
std
jnp
hlt
lds
sbb
push
xchg
xlat
mov
fisubl
xor
cmp
ljmp
loope
dec
jmp
mov
jmp
jecxz
out
cmp
sub
std
jmp
je
cltd
subb
jns
inc
sbb
dec
arpl
push
jge
cmc
pop
lahf
cmp
adc
es
mov
xor
jmp
xor
int3
bound
adc
and
nop
orb
mov
sub
in
movsl
push
mov
btc
es
mov
push
push
push
icebp
mov
mov
stos
xchg
push
adc
mov
lock
test
mov
in
lcall
cwtl
ss
pop
les
call
jae
xor
push
adc
pop
push
mov
xchg
add
pushf
in
pop
addw
cs
xchg
xor
mov
or
std
loop
xchg
je
js
xor
xchg
mov
add
mov
xchg
fadds
pop
mov
insl
xor
inc
mov
mov
lret
jecxz
in
xlat
pop
ds
xchg
or
hlt
add
mov
daa
inc
jo
xchg
or
mov
repz
int
xor
push
pop
arpl
in
dec
lock
pop
rcll
shr
fdivrl
inc
repz
aaa
mov
outsb
insb
stos
add
lods
sbb
add
scas
xchg
xor
mov
pop
jp
orb
shll
sub
call
mov
xchg
popa
lock
mov
inc
testb
mov
popf
add
idivb
cmc
mov
aaa
or
push
lock
rorl
into
adc
inc
and
xlat
fidivs
inc
fistl
lret
inc
loope
lods
xchg
add
dec
pop
sub
pop
mov
mov
mov
xchg
xchg
sub
mov
push
push
orl
pop
bound
pop
xor
lcall
stos
add
mov
ret
inc
and
shll
jmp
or
popa
ficompl
nop
push
xchg
sub
fidivs
mov
movsb
ss
sbb
loop
fisubrl
test
sub
js
sbb
mov
jnp
fisubl
jo
out
sbb
popf
cmp
add
jae
lds
stos
fcoms
lret
pop
dec
mov
mov
mov
jecxz
nop
and
sbb
xorb
loopne
popf
popf
xor
dec
sarl
xchg
push
aas
xchg
fisubrl
nop
mov
cs
sbb
out
mov
dec
popf
xchg
ret
mov
lret
jle
sbb
lds
jb
push
adc
rorb
and
sbb
shrb
out
xchg
pushf
cltd
jle
adcl
xor
subb
test
pop
dec
xchg
sti
enter
pop
cmp
and
test
xchg
xchg
fwait
loop
daa
imul
addl
icebp
xor
scas
dec
jge
or
iret
mov
sbbb
leave
insb
xchg
lock
filds
and
pop
or
nop
adc
lock
xchg
ficomps
jge
js
mov
add
mov
in
adc
dec
lret
int
hlt
and
int
mov
test
addr16
ja
dec
mov
addr16
lods
and
pusha
mov
xor
mov
push
es
inc
fmuls
adc
mov
or
fnstcw
push
rclb
mov
mov
dec
es
loope
inc
xor
dec
in
stos
mov
hlt
mov
stos
cmpsb
inc
add
adc
mov
aad
jecxz
js
stc
es
fwait
cmp
sub
inc
jmp
xor
int
es
imul
arpl
adc
jp
mov
cmp
mov
jp
shll
or
pop
cwtl
dec
fidivrl
jp
sbb
hlt
mov
je
push
xchg
xor
sbb
push
out
mov
inc
adc
adc
loop
cmp
jns
inc
push
jmp
fs
js
cmc
push
test
dec
inc
jmp
clc
push
cmp
std
and
fisubs
loope
mov
dec
jae
repnz
jbe
stos
mov
mov
pop
sbb
fwait
test
jns
pop
loope
bound
cld
mov
insl
stc
test
stos
sub
inc
jle
mov
addl
leave
pop
jl
mov
mov
inc
ret
cmp
out
in
lods
pop
mov
aam
mov
mov
cmp
cmpsb
repz
ret
mov
mov
test
mov
or
mov
and
cmp
mov
lcall
jne
mov
mov
lea
jge
sti
inc
repnz
dec
cmc
shll
jb
jne
add
push
inc
adc
outsl
mov
sub
fists
lretw
lahf
dec
push
jnp
imul
pop
mov
mov
add
aas
mov
test
and
push
cmp
xchg
mov
cmp
jp
scas
pop
inc
in
lods
adc
jo
sbb
jne
xor
outsb
orl
dec
outsl
mov
lahf
insl
pop
movsl
sbb
fnstenv
mov
rorb
cli
push
push
sub
jae
rolb
cli
ljmp
jecxz
sti
loope
ljmp
or
jne
jg
add
mov
in
out
gs
mov
sub
sub
popl
fldl
aaa
xchg
negb
adcl
xchg
fisubrl
popa
fldenv
popf
jmp
sarb
xchg
add
sbb
into
or
call
arpl
loope
mulb
push
cmp
mov
ret
test
sub
xchg
add
addb
fsubrs
jbe
hlt
out
sub
mov
insl
add
mov
dec
testl
jno
push
jno
hlt
ds
push
test
insl
orb
shll
mov
jp
mov
fstpt
ljmp
pop
jb
andl
outsb
std
outsb
mov
sub
mov
sbb
lea
or
decb
shrb
xchg
pop
shl
and
push
popa
loopne
dec
and
xchg
adc
sbb
adc
pop
sar
lods
jle
inc
sub
daa
negl
xchg
test
pop
fdivrl
mov
cmp
outsb
pop
fiaddl
jns
scas
aad
stc
call
inc
dec
push
js
nop
out
movsb
xor
xchg
and
lahf
mov
pop
push
and
sbb
insb
xchg
data16
push
inc
cmpsb
pop
and
and
or
mov
cmp
push
lret
pop
enter
mov
ret
dec
dec
lock
jno
std
and
imul
fimull
mov
nop
jae
mov
cmp
js
in
add
call
std
add
les
fmul
les
movsl
das
xor
fwait
sarl
inc
cmp
movl
jp
jo
aam
aad
or
incl
push
jg
add
cli
jb
ja
and
scas
push
xor
in
fmuls
inc
jg
add
mov
repz
cmp
mov
pop
lahf
pop
jg
jg
sbbl
mov
xchg
inc
movsl
mov
sbb
push
adc
ret
shlb
es
add
add
pop
lret
jns
lods
mov
xor
repz
loop
sub
popf
inc
push
push
mov
mov
mov
push
movsl
or
inc
or
je
pop
xor
dec
cmp
or
pop
movsb
arpl
xor
roll
mov
lea
xor
lea
shlb
dec
cmc
lea
add
push
mov
xor
pop
pop
jo
rclb
lret
mov
pushf
daa
imul
cmp
or
push
addb
xchg
dec
adc
insb
mov
mov
int3
or
adc
mov
xorb
add
es
addr16
xchg
cwtl
add
fisttps
adc
and
or
popf
adc
out
xchg
fdivrp
xchg
mov
popf
ja
bound
les
pushf
jne
sbb
add
imul
shlb
sbb
aad
lcall
cltd
mov
shll
push
scas
dec
push
loopne
daa
popa
xor
push
cmp
es
mov
mov
inc
jns
pushf
fwait
and
aaa
fistps
xchg
repz
fsts
fldl
insb
push
lds
roll
xor
fdiv
and
xchg
imul
loopne
cmp
pop
mov
popa
push
subb
fstpt
jb
sbb
and
jne
sub
jo
test
push
mov
movsl
imul
mov
jmp
or
and
sbb
mov
or
popa
sub
dec
ret
xchg
iret
mov
xchg
in
fst
mov
je
mov
sub
mov
icebp
cmc
mov
roll
dec
inc
test
lahf
sub
cmpl
addr16
add
pop
test
inc
sbb
xchg
pop
adc
shrl
or
cmc
pop
sub
jb
scas
jmp
lods
mov
or
inc
inc
rolb
outsl
jecxz
adcl
clc
cmpsl
inc
int
test
add
and
mov
add
adc
sub
ds
lea
push
jnp
mov
inc
cmp
imul
lret
out
dec
pop
sub
xor
push
jp
sub
jl
jbe
push
sarl
lret
jmp
lock
mov
lcall
dec
hlt
dec
mov
jae
cmc
sub
lods
push
push
cmpsb
adc
adc
fcoms
push
fistl
out
push
out
repz
adcl
adcb
dec
cmp
xchg
rorl
add
cmp
sub
adc
mov
inc
sarl
mov
stc
xchg
movl
xchg
fxch
jecxz
sub
or
jle
test
mov
dec
add
out
or
gs
aam
dec
sub
push
push
outsb
jo
sbb
cs
jb
lret
sarb
dec
xchg
jg
and
lahf
flds
push
aam
cmp
leave
dec
or
fidivs
pushf
mov
mov
xchg
sarl
hlt
jge
add
adcb
sbb
mov
jecxz
mov
xor
cld
cmpsb
xchg
or
sub
cmp
insb
out
cltd
test
loopne
and
movsl
push
into
subl
fs
test
loop
loopne
pop
dec
lret
sub
xor
mov
das
das
jl
sbb
xor
mov
sub
mov
xchg
icebp
sahf
xor
ficoms
imul
into
popl
lea
dec
imul
mov
fmuls
mov
ja
std
inc
sub
xor
push
jmp
sub
scas
fucomi
and
rclb
outsb
push
js
insb
cmp
push
dec
xchg
rclb
xchg
sbb
in
sbb
in
ds
mov
pop
cld
rolb
jmp
in
rol
cwtl
pop
mov
nop
sub
pop
pop
sub
xchg
push
dec
xor
roll
test
mov
xchg
xchg
jle
adc
scas
out
jmp
scas
popa
jo
push
jp
cs
bound
or
push
push
nop
mov
jbe
mov
rorb
adc
iret
pop
stos
fistpl
mov
out
adc
bound
imul
sub
call
mov
dec
mov
cmp
and
cmc
pop
sbb
and
insl
jge
in
stos
popf
sub
push
iret
in
test
add
and
rep
inc
add
iret
test
cld
push
dec
push
lea
pushf
pop
jp
mov
mov
lret
cwtl
dec
adc
adc
lods
aad
mov
decb
pop
ds
insl
rorb
cmp
fldenv
mov
out
adc
cld
mov
sbb
cmc
sahf
popf
ret
outsb
mov
xor
in
jo
mov
out
lret
scas
fimuls
sbb
and
movsl
inc
add
ss
adc
sub
jo
sub
iret
mov
xchg
dec
fildl
mov
rorb
jle
fisubrl
jmp
ss
fdivrl
icebp
scas
push
mov
sub
in
adc
nop
scas
adc
sub
mov
cmpsl
mov
pop
jecxz
stos
inc
sub
xor
hlt
clc
lahf
sahf
xchg
ret
inc
push
jno
mov
pop
fsub
sub
stos
inc
pop
fildll
mov
repnz
mov
inc
out
jae
push
sbb
sbbb
push
and
or
test
sahf
cli
and
or
sub
loope
repz
mov
sbb
or
dec
lcall
movsl
sahf
pushf
or
mov
mov
in
pop
pushf
dec
sbb
jno
fsub
inc
mov
jmp
push
jne
cmp
test
push
and
lds
dec
push
sbb
ljmp
xor
movsl
popa
pop
jle
movsb
mov
lcall
xchg
notl
or
arpl
push
popa
je
jae
shlb
jb
in
in
push
sbb
cmp
jg
jg
mov
cs
movsb
das
sub
pop
sub
test
sahf
xchg
xchg
leave
cmp
inc
jmp
arpl
sbb
sbb
jo
mov
mov
push
push
fs
push
jne
pop
movl
mov
dec
mov
pop
notb
out
adc
das
jecxz
test
loope
mov
sarl
xor
mov
pop
pop
mov
xor
cmp
hlt
jmp
xorb
call
loop
mov
shrl
push
add
sub
push
push
insl
clc
jl
add
and
mov
out
sbb
mov
enter
sbb
nop
iret
sub
in
stos
mov
mov
sahf
jmp
sub
or
call
test
scas
mov
mov
mov
or
ljmp
push
lcall
cmp
lds
fcmovb
or
cmp
lods
sbb
fisubrl
mov
mov
jmp
mov
and
xchg
mov
inc
xchg
dec
lahf
ljmp
icebp
dec
lcall
fwait
jnp
dec
xor
or
aas
test
cmpsl
and
dec
iret
fidivs
mov
adc
hlt
jecxz
lret
aam
paddsw
or
jle
xchg
cmp
cmp
loop
in
fsubr
mov
cmpsl
cltd
xorl
dec
sub
xlat
inc
popa
jl
fs
sbb
cmp
lods
jmp
and
testb
movsl
fimull
sub
ss
inc
shll
sub
pop
loope
and
scas
mov
add
sbb
xchg
in
cltd
xor
popf
ret
cmp
ret
ljmp
jbe
push
aam
mov
xor
pusha
cs
lock
inc
xor
mov
mov
xor
and
dec
sub
rcrl
mov
cmpsb
sbb
lods
insb
push
loopne
call
adc
outsb
cmpsl
push
testl
in
subb
gs
xchg
cld
ret
loop
jo
stc
div
fisubrs
push
push
add
push
xor
and
mov
mov
enter
pop
xor
add
sbbl
cltd
fidivrl
jmp
addr16
mov
add
pop
das
pop
mov
sub
add
sbb
sbb
outsl
mov
push
cwtl
or
mov
or
cltd
lcall
dec
push
shlb
leave
xchg
in
sub
sub
jecxz
cwtl
gs
dec
mov
movsl
lods
pop
mov
lods
cmpsl
insb
mov
out
adc
cwtl
leave
popf
sub
in
lretw
xor
mov
inc
push
and
pop
sub
in
push
in
pop
decl
cmpsb
shll
not
jno
xor
outsl
sub
js
es
lea
sub
xchg
inc
je
fcoml
jno
fwait
insl
filds
or
mov
push
inc
push
das
pushl
cld
bound
rcll
je
popa
mov
cmpsb
jnp
lahf
leave
inc
in
push
inc
loopne
movsb
addr16
mov
inc
mov
cld
sarb
enter
imul
sarl
adc
clc
dec
jg
inc
rclb
imul
int
sbb
dec
sub
fwait
sbb
push
mov
push
push
dec
lea
sub
mov
push
xor
ret
loopne
mov
add
sbb
lds
sbb
push
inc
dec
je
gs
adc
and
nop
pop
inc
repz
or
int3
jbe
dec
mov
or
shrb
push
inc
pop
xchg
xchg
mov
aad
jl
rol
cmp
fs
stos
imul
clc
out
and
dec
mov
test
push
aaa
je
xchg
js
sbb
and
or
out
mov
and
repnz
pop
pop
fs
pop
xchg
xorl
sub
fwait
adc
jmp
push
in
xchg
inc
xchg
fldl
popa
jne
dec
mov
mov
fidivrs
sbb
add
pop
jle
popa
ffree
xchg
pop
pop
je
push
add
sbb
inc
xor
stos
xchg
cli
in
insb
jo
jns
mov
or
bound
inc
push
sub
mov
sbb
jb
out
stos
pop
in
aas
mov
movsb
mov
sub
xor
loop
push
sbb
data16
inc
cmp
ret
inc
out
push
xor
test
fildll
add
jo
aad
fidivrs
dec
xor
fs
test
loopne
imul
push
data16
in
ret
sbb
nop
aad
in
dec
sar
int3
mov
push
or
sbb
adc
loope
insb
icebp
ret
mov
rep
add
shlb
jmp
inc
pop
push
mov
mov
xor
pop
sbbb
inc
fyl2x
sub
mov
cmpsl
mov
adc
mov
rcrb
cmp
js
int3
push
fs
sub
mov
mov
xor
out
scas
in
in
les
add
ret
loope
xchg
inc
dec
fwait
cli
xor
test
insl
movsb
cli
pop
xchg
sub
lods
std
insl
imul
pop
xchg
pop
sahf
inc
mov
jmp
jg
sarl
insb
jo
fistpl
add
xchg
ret
xchg
mov
rcll
cmp
inc
xor
mov
adc
sbb
add
mov
stos
fsub
and
jmp
jmp
mov
arpl
mov
mov
sbb
lock
ja
je
mov
push
pop
inc
mov
pop
enterw
mov
push
fwait
call
xchg
rcll
push
and
sbb
test
andl
sub
xchg
paddw
pop
iret
xlat
iret
leave
pop
cwtl
aas
push
fisubs
popa
repz
popf
mov
sbbl
mov
cmc
ret
and
je
mov
dec
push
cmpsb
dec
clc
push
lds
ficomps
adc
sti
xchg
mov
or
cli
imull
cmp
lret
jle
ss
add
rcrb
cmp
jle
jb
out
jno
ss
ja
addr16
xor
test
mov
leave
ljmp
aam
xchg
push
push
sti
repnz
adc
xor
sub
cmp
push
cmp
stc
pop
cmpb
repnz
jge
xor
dec
bound
jp
adc
into
jbe
iret
add
pop
lea
mov
addr16
pop
cmp
fstps
idivl
adc
test
imul
pop
pop
cltd
in
cmc
in
mov
jmp
sahf
add
sub
sahf
cmp
fimuls
cli
out
fs
aaa
fbld
out
pop
daa
aad
xchg
jnp
pop
dec
cmp
push
idivb
pop
xchg
cmpsl
jmp
fdivs
bound
add
shl
jns
mov
cmp
or
mov
insl
cmpsl
movsl
push
xor
jp
sbb
mov
xlat
inc
xchg
and
and
aas
add
inc
push
push
mov
sbbb
js
rorl
mov
dec
cmp
out
movsb
movsl
fisttps
xor
cmp
les
and
icebp
pop
fdiv
cli
rcrw
jno
cs
or
iret
insl
xchg
insb
stos
adc
or
clc
mov
movsb
rcr
daa
gs
sub
inc
jo
andb
or
mov
pop
cmc
jl
aam
stos
in
add
faddl
pop
sbb
cmp
inc
ror
loopne
mov
cmp
cmp
std
mov
lods
sub
mov
sarb
mov
add
pop
popa
and
push
shr
mov
dec
mov
ret
adc
xor
and
nop
cmpsl
or
arpl
xchg
fwait
addr16
test
adc
test
push
sub
lret
mov
sub
sub
in
test
cld
inc
and
push
mov
mov
sub
outsl
xchg
pop
dec
fidivrs
add
mov
rcrl
lahf
outsb
pop
ss
mov
mov
xchg
mov
test
mov
js
push
pop
xor
xor
cltd
lds
cld
stos
movd
mov
sbb
push
push
sub
mov
xchg
inc
cwtl
lcall
notl
bound
mov
sub
gs
call
adcb
xlat
les
add
or
pop
jns
pop
jp
rorl
mov
movsb
jg
daa
dec
push
inc
mov
sbb
cmp
mov
popa
cli
stos
popa
fs
push
xor
out
push
xchg
pop
xchg
xor
sahf
in
cmp
rcll
divb
inc
shll
mov
mov
cmp
test
stos
pop
xchg
pop
cmp
enter
push
mov
fucomi
and
sbb
es
ret
nop
jae
icebp
fistl
rcll
jmp
mov
or
test
or
dec
mov
pop
jl
shlb
test
or
lds
icebp
rorl
jno
test
stc
dec
dec
adc
mov
and
and
aad
push
pop
fdivl
jl
inc
adc
call
cli
pop
lods
arpl
mov
push
add
lea
xchg
cmp
cwtl
ftst
dec
push
jbe
xor
lea
test
xor
adc
punpckhdq
int
fwait
daa
mov
leave
and
mov
mov
xlat
cli
add
cmp
out
lock
pop
std
outsl
cmp
mov
cltd
sbb
xchg
pop
sbb
pop
push
add
and
arpl
mov
xor
sub
nop
adc
jne
and
test
push
cld
lcall
arpl
icebp
cltd
ror
lret
es
pop
inc
imul
mov
jle
dec
push
ja
mov
and
sbb
or
cmp
mov
jecxz
mov
sti
xor
jb
push
dec
std
addr16
repnz
or
ficoms
imul
icebp
or
jb
inc
inc
in
dec
add
push
pop
sub
fcmovne
repnz
sub
jae
lret
and
adc
inc
jno
paddw
cmc
testl
and
es
fucomip
fwait
mov
daa
mov
pop
cmp
inc
fistps
push
mov
repz
clc
inc
in
push
push
mov
mov
pop
sbb
pop
cli
jecxz
dec
mov
ret
jbe
push
int3
push
adc
or
jl
movsb
das
dec
scas
popf
mov
arpl
aaa
icebp
fbstp
add
sti
or
leave
add
jle
lock
popf
pushf
in
icebp
in
mov
xor
in
and
inc
mov
mov
imul
inc
cmp
mov
ja
push
push
inc
dec
xchg
je
inc
jb
xchg
xchg
and
fcompl
jae
cmp
cmpl
xor
sbb
push
and
and
xor
cltd
inc
in
push
call
mov
mov
adc
cmc
mov
cmp
push
pop
adc
sti
in
pop
mov
mov
popa
push
jl
outsb
add
xchg
mov
dec
nop
jnp
inc
leave
push
imul
pop
pop
jecxz
adc
sub
or
cltd
insl
sbb
mov
sub
jae
sti
adcl
cmp
loope
jb
test
cli
or
addr16
js
jl
sub
dec
sub
pop
clc
mov
inc
in
push
ret
or
push
ja
jle
in
xchg
and
mov
shll
dec
mov
jae
int3
fists
ja
js
adc
mov
fs
aaa
iret
xor
ret
push
inc
push
push
rorb
cmp
clc
cld
popf
pop
jnp
and
inc
xor
jns
mov
ficoml
loopne
jno
aam
roll
call
in
adc
mov
mov
out
jmp
pop
in
fiaddl
lret
mov
sbb
mov
adc
and
aas
inc
xor
jle
inc
push
xlat
dec
hlt
add
and
stos
icebp
movsl
xchg
cwtl
xchg
fs
xchg
cmpsl
jmp
adc
inc
mov
mov
das
imul
pop
scas
sarb
lock
pusha
test
sar
fstpl
mov
inc
test
xlat
pop
inc
jo
mov
pop
push
shl
test
mov
sub
cmpsl
push
mov
cmp
pop
cwtl
mov
and
pusha
outsl
fsubr
or
jmp
push
popf
out
or
sbb
cltd
in
aad
xchg
xchg
mov
xchg
mov
popa
add
ds
mov
fildl
and
mov
mov
loope
jb
int
pop
idivb
imul
stos
or
jl
dec
jae
outsl
rcrb
jmp
push
jnp
or
fcompl
fsubs
mov
add
jne
dec
pop
std
dec
mov
iret
jl
dec
jne
pop
addr16
cld
int3
adc
shrb
xchg
hlt
bound
fidivrl
cmp
cli
mov
mov
add
sub
pusha
hlt
movsl
jne
insl
test
pop
loopne
sti
jge
arpl
sub
dec
push
ret
mov
mov
imul
loop
push
mov
pop
lahf
adc
mov
xchg
pushl
out
adc
mov
mov
test
xor
cvttps2pi
dec
lea
cltd
sub
popa
fwait
std
sub
js
lods
test
popf
lret
adc
sbb
cwtl
cmpsl
retw
pop
sbbl
xor
pop
cs
push
jle
push
or
dec
arpl
cli
cmc
ss
mov
mov
cmp
lds
mov
into
enter
ficoml
fcmovne
daa
sub
pop
pop
int3
lock
jns
scas
loopne
scas
pop
aaa
xor
sahf
adc
jbe
hlt
lods
xor
inc
repnz
imul
cmp
mov
mov
cmpsb
sti
jne
xor
sub
stos
or
jbe
mov
scas
fdivrl
jecxz
out
adcl
cmp
fimull
xlat
lret
daa
jge
or
arpl
mov
aad
dec
mov
pop
push
cwtl
sahf
and
movsb
loop
xor
insb
pop
outsl
or
jg
ret
jge
cld
mov
mov
insb
test
cmpsl
push
inc
aam
mov
sub
mov
cmp
sub
subb
imul
icebp
xor
xor
rorb
daa
sub
sbb
out
pusha
mov
adc
ret
pop
jl
mov
leave
enter
cmp
test
lea
movsb
add
push
cmp
add
mov
hlt
fldl
lods
mov
xchg
xlat
sarb
das
in
andb
pop
out
cmp
xchg
sarl
pusha
dec
sti
jne
bound
and
outsb
rclb
xlat
out
out
xor
push
dec
xor
xor
faddl
insb
fisttpl
mov
movsb
sbb
arpl
pushf
lahf
call
loope
cmp
jae
fbld
imul
inc
mov
xchg
std
popa
insb
loopne
mov
mov
cli
lds
sbb
adc
adc
pop
test
cmpsl
adc
stos
lods
ss
movsb
ret
movsl
andl
outsb
adc
movsl
sti
xchg
fsubrs
repnz
and
movsb
sbb
sbb
sbb
or
mov
xchg
std
inc
and
js
or
test
loope
arpl
ljmp
fistl
cmpl
adc
aad
xchg
pop
push
outsb
xchg
scas
mull
dec
pop
das
xlat
lods
clc
inc
cmpb
xchg
jmp
cli
mov
push
movzwl
adc
testl
or
push
lods
mov
cwtl
inc
adc
adc
cmpsb
fwait
orb
and
mul
and
pop
lods
aam
sbb
rcll
sarb
mov
fs
andl
mov
lock
or
pop
lcall
nop
sti
pusha
das
es
and
adc
inc
push
push
xor
seta
xchg
push
cmp
dec
aaa
popa
cs
xchg
js
push
add
in
adc
push
andb
stc
add
pop
faddl
leave
cmpb
add
sti
jno
fisttpll
push
mov
add
fistl
lock
pushf
clc
orb
icebp
or
out
outsl
cmp
mov
addb
xchg
jmp
mov
rcrl
xchg
dec
or
gs
xor
push
sub
mov
shlb
or
cmp
shlb
dec
mov
inc
mov
inc
xchg
jge,pn
subl
cs
xor
adc
sub
test
insl
inc
jg
cmp
outsb
scas
jae
iret
sar
stos
jecxz
cmc
adc
lods
add
mov
fwait
jno
mov
mov
sti
cwtl
bound
mov
and
adc
push
sbb
jle
push
push
outsb
les
out
add
aam
push
adc
dec
imulb
push
loope
dec
rcl
shlb
loop
ret
imul
jle
pop
jle
xor
inc
in
or
pop
mov
xchg
call
sbb
lcall
imull
adc
mov
jge
in
pop
sub
imul
adc
push
int
hlt
push
out
mov
push
xor
pop
call
std
clc
xor
clc
adc
and
jl
ss
fldcw
test
mov
icebp
jae
mov
aam
cwtl
xchg
loopne
loopne
jmp
outsb
js
add
lods
in
leave
mov
jo
cmpsl
in
or
enter
sub
loop
mov
fidivl
aaa
je
dec
jno
js
mov
dec
out
add
sbb
outsl
out
into
fadd
dec
jmp
and
cli
push
and
dec
pop
test
std
in
or
rcll
in
nop
call
lret
imul
push
mov
xor
sahf
jg
in
add
mov
pop
iret
fdivr
xchg
adc
push
mov
xor
popf
imul
adc
and
lret
xor
push
fimuls
mov
add
mulb
lahf
lods
pop
adcl
das
jno
mov
xchg
xor
cmc
popf
and
loope,pn
gs
mov
mov
fldl
fistps
popf
scas
or
bound
mov
lcall
iret
scas
les
inc
mov
cmp
sbb
mov
push
loopne
xlat
test
jle
shl
clc
push
gs
push
push
xchg
clc
mov
repnz
pop
mov
outsb
je
out
push
xor
ret
icebp
cmp
and
int
pop
shll
adc
inc
dec
push
mov
jmp
lods
inc
ljmp
pop
mov
and
popf
inc
mov
sti
pop
das
mov
mov
out
es
xor
and
sbb
add
xchg
jnp
std
jae
and
mov
fdivrl
and
or
lods
in
outsb
stos
ret
mov
add
movsl
cltd
xchg
push
mov
inc
pushf
jne
int
roll
subb
xor
fsubl
jb
push
lds
push
cld
pop
enter
pushl
fdivrl
les
push
jns
ds
mov
movsl
jl
mov
or
push
push
lahf
adc
pop
leave
mov
jecxz
fwait
sar
sbb
in
fbld
std
jl,pt
addr16
cmp
in
movsb
dec
mov
mov
scas
xchg
out
mov
sbbl
sbb
cmpsl
imul
into
aad
jmp
add
out
popa
sbb
pop
stos
fmul
mov
xchg
xor
add
repz
jg
sarl
inc
cmpsl
xchg
orl
pop
outsl
add
adc
mov
xor
cwtl
ud2
push
dec
test
aas
sub
push
push
ret
mov
out
sbb
and
mov
insb
imul
shrl
push
popl
or
imul
mov
mov
ret
inc
or
les
and
gs
enter
pop
mov
sbb
and
add
notl
ret
mov
mul
pop
mov
repnz
mov
dec
and
adc
aad
mov
incl
mov
out
lret
inc
push
dec
xlat
jmp
pop
leave
xchg
fdiv
xor
adc
jbe
lea
cmp
push
xchg
dec
and
mov
adcl
ja
lcall
sbb
pushf
push
jnp
or
sbb
xchg
sbb
mov
inc
xchg
pop
add
sub
inc
rcll
data16
arpl
mov
lretw
mov
sbb
or
jbe
nop
stc
and
jo
pop
test
iret
pop
inc
dec
sub
dec
mov
push
and
inc
pop
stos
push
add
sahf
std
xorb
push
jmp
fstpl
shll
inc
inc
in
xchg
cmc
jbe
adc
xor
arpl
add
es
jp
xor
xchg
inc
std
sahf
cmp
pushf
pop
rorb
pop
stos
mov
push
mov
data16
ds
dec
pushf
mov
mov
nop
push
sub
add
push
lods
jp
mov
fwait
outsl
jl
pop
xor
add
sub
ljmp
or
loop
or
adc
lods
fwait
cmp
inc
ret
fs
add
add
push
es
mov
aam
push
jno
loop
jle
gs
adc
lret
cld
sbb
mov
pop
into
mov
mov
icebp
cmpl
out
lcall
flds
popf
or
loop
cmpsl
imul
xor
imul
or
sub
cmp
fbstp
mov
add
xchg
icebp
nop
xchg
fisubrs
push
jo
sbb
xchg
xchg
push
push
std
or
roll
push
xchg
and
adc
jne
xlat
mov
adc
inc
and
out
inc
pusha
les
in
mov
shr
les
dec
dec
cmp
lods
cmp
mov
lock
arpl
clc
stc
mov
stos
and
repnz
dec
jae
mov
cmc
stos
push
push
bound
push
xchg
jmp
mov
enter
push
xor
add
sub
fwait
sahf
sbb
inc
orl
push
inc
aaa
out
leave
sbb
imulb
push
scas
jb
jge
push
jns
das
in
gs
sbb
xchg
scas
push
pop
push
pop
das
sbbb
stos
scas
and
in
inc
pop
dec
rcl
mov
fs
out
or
fs
mov
mov
and
out
ljmp
and
add
int
inc
push
xchg
jmp
sub
movsl
adc
imul
and
movb
or
test
push
xchg
into
into
out
mov
inc
inc
fmulp
mov
insl
call
mov
inc
js
mov
fstpl
iret
and
pop
rcrl
add
or
or
leave
movsb
pop
pop
sbb
mov
cmc
mov
cwtl
aas
lret
jbe
dec
gs
cli
and
insb
inc
lods
out
xchg
cmp
push
adc
adc
loope
movsl
movsl
xchg
jb
sbb
inc
jg
xchg
call
pusha
cmp
ret
adc
in
pop
shl
cmp
movb
scas
stc
push
sub
mov
cltd
jp
cmp
inc
adc
js
sbb
fnstsw
add
stos
adc
ffree
adc
sub
xlat
pop
mov
lock
jae
inc
xchg
rcll
or
xchg
xchg
sarl
mov
rolb
inc
adc
xlat
incb
adc
or
js
mov
ficoms
pop
dec
sbb
inc
fldt
clc
out
sub
jae
adc
cmc
adc
mov
les
jnp
test
mov
cwtl
into
inc
leave
xchg
popa
fistps
dec
pop
pop
dec
sub
lods
je
lret
addr16
in
inc
pusha
inc
das
jmp
xor
arpl
dec
push
outsb
adc
xor
int
iret
xor
dec
fcompl
in
xor
aas
sub
add
dec
cs
pop
out
idivb
jmp
shl
push
or
cmp
push
dec
jb
sbb
in
push
jno
sub
pop
push
ja
in
xchg
lea
pop
enter
out
mov
xor
add
pop
in
fdivs
fnstenv
mov
adc
and
add
jns
pop
mov
and
fildll
imul
test
cld
push
or
xor
pop
pop
imull
xchg
add
lods
xor
imul
mov
jo
adc
cltd
push
call
test
jb
test
lcall
or
lods
sub
fldl
andb
sbb
jg
cmc
add
mov
jae
push
outsl
aas
mov
jmp
arpl
cs
adc
dec
rorl
imul
dec
or
mov
xchg
sbb
loop
mov
sahf
rcll
inc
js
mov
mov
jmp
leave
out
sbb
dec
imul
mov
mov
jg
sarb
mov
int3
sbb
mov
adc
hlt
or
lret
repz
xor
jmp
fidivl
mov
loopne
sbb
mov
push
popf
mov
lds
cmp
ljmp
push
cltd
es
icebp
dec
or
imul
scas
add
sbb
push
ja
das
pop
stc
mov
cs
and
sahf
mov
cmp
xchg
sub
dec
push
aad
popf
and
sbb
scas
mov
or
sub
test
pop
arpl
jle
jge
jecxz
xchg
or
fcmovne
add
lret
mov
push
int3
aas
bound
addr16
call
into
fiadds
push
daa
mov
stos
cmp
ss
jne
push
outsb
call
mov
jae
je
push
lods
xor
lods
push
adcb
jnp
sbb
shll
xor
loope
cmpsb
andb
imul
movb
roll
lds
hlt
mov
or
out
jnp
or
adc
xchg
sbb
shlb
add
fildl
mov
jae
sbb
in
cwtl
xchg
xchg
adc
xor
outsl
lret
and
adc
and
sbb
inc
sbb
inc
icebp
mov
push
ret
call
ficomps
lods
es
mov
mov
or
mov
mov
popa
cltd
adc
gs
push
dec
xor
jg
mov
mov
mov
into
loope
or
or
push
xlat
push
mov
mov
pop
xor
add
adc
jno
adc
stos
and
test
es
push
cmp
ss
inc
lcall
aam
iret
je
std
loop
je
cmp
mov
jecxz
mov
adcl
inc
dec
mov
int3
insl
mov
and
mov
outsl
rcr
add
std
mov
xor
cmp
subb
pop
xchg
add
sub
xchg
adc
inc
lds
les
pop
in
fcmove
and
clc
loopne
add
dec
push
xor
loop
sti
jbe
les
cmp
negl
cmp
pop
aam
or
mov
inc
mov
fstpl
icebp
pop
lahf
loopne
in
scas
movsl
fwait
ja
insb
enter
and
sbb
xor
cwtl
inc
push
enter
bound
jge
fstpt
mov
pop
cmpl
mov
push
pusha
das
xor
aam
clc
inc
cmpsb
push
xchg
das
test
testb
xor
sahf
jge
add
xor
pop
jl
cltd
cmp
jnp
push
inc
dec
dec
and
aaa
pop
fistl
mov
outsb
std
inc
push
cld
int
and
pop
es
jnp
xchg
loop
pop
or
js
in
mov
dec
mov
stos
cmc
xchg
adc
mov
jbe
mov
cli
in
dec
jg
inc
add
negl
or
and
repz
adc
push
jo
dec
inc
repz
add
negl
sub
sbb
addl
mov
fs
jg
push
std
je
clc
mov
dec
xchg
repnz
insl
cmc
xlat
in
sti
xchg
xchg
inc
data16
sti
or
jmp
sbbl
xor
arpl
mov
inc
pop
cmpsb
movsb
push
stos
jle
mov
mov
pop
sbb
push
movsb
sbb
fsubrl
cld
movsb
test
push
mov
mov
fstpt
pop
test
out
mov
sub
adc
sbb
mov
adc
cmpsb
add
addl
pusha
xor
call
dec
mov
lods
push
mov
lods
aaa
scas
sub
mov
test
fcoml
inc
lock
or
add
in
jg
sub
push
jmp
push
xchg
les
mov
adc
dec
push
push
mov
pusha
das
movsb
insl
adc
jb
dec
decl
pushf
sar
mov
push
cmp
cmp
test
pusha
mov
push
lret
test
lods
dec
subl
xor
dec
pop
ss
out
mov
inc
lods
pop
push
xchg
sarb
xor
xchg
inc
xchg
jae
hlt
sbb
adc
and
mov
int3
inc
xchg
mov
sbb
and
imul
jl
pusha
jg
xchg
dec
pop
mov
mov
lret
jl
test
fisttps
dec
mov
cld
pop
repz
aam
data16
push
pop
hlt
int3
rcrl
pop
cmpsb
and
sub
ds
andb
fiadds
push
mov
jbe
test
test
sbb
push
mov
out
mov
jl,pt
lds
loop
andb
outsl
enter
stos
pop
stos
subb
sub
cvttps2pi
cmp
fdivr
lret
js
call
sbb
dec
call
clc
daa
pop
cmp
xchg
test
int
cmp
sub
mov
into
and
nop
fnstenv
or
les
imul
lea
sar
xchg
ja
lret
push
mov
bound
rorl
movsb
jne
lds
xchg
pusha
pop
fisubrs
ret
jle
stos
push
add
push
xor
fldl
call
cmc
xchg
aas
pop
xor
sub
in
add
movsb
icebp
push
push
push
mov
cs
mov
loop
mov
jge
inc
pop
or
push
xchg
add
add
repz
ucomiss
lret
jbe,pn
lret
stc
xchg
push
ja
push
fisttpl
jns
dec
test
add
cmp
pop
sbb
jmp
pusha
imul
add
insl
mov
jns
imul
test
pusha
daa
mov
vmovntps
lds
lds
mov
and
ret
mov
cs
test
add
les
cmpsb
pop
cwtl
pushf
jg
cmp
jns
call
dec
push
aam
add
or
int
inc
and
mov
inc
mov
cmpsb
push
cmpsl
xchg
and
push
pop
xor
inc
inc
stos
rolb
pop
adc
sub
faddl
call
popa
divb
push
xor
xchg
fistpl
mov
je
pop
outsb
stos
in
xchg
repnz
adcb
enter
add
lods
mov
cs
and
pop
jmp
pop
out
repz
aam
mov
pop
sarl
lods
push
repnz
or
in
lret
int
sub
pop
mov
xchg
dec
pop
out
inc
testb
ficoml
mov
sbb
ror
xlat
mov
loopne
pop
xchg
push
cmp
ds
ss
imul
or
cmp
daa
push
cld
or
pop
sbb
xor
or
adc
movsl
adc
in
push
lahf
sahf
pop
mov
xchg
push
icebp
popf
out
aaa
cs
add
jbe
sub
dec
in
hlt
dec
movsl
cmp
inc
test
push
cmp
jecxz
adc
int3
adc
rorl
repnz
xchg
xor
xor
fisttpl
les
dec
je
jno
mov
add
cmp
loope
ja
cmpsl
and
inc
fistps
jae
enter
mov
lock
loope
mov
outsb
cld
repnz
push
add
pusha
les
inc
xchg
mov
test
ret
nop
fcoms
fwait
sbb
dec
push
mov
add
addr16
adc
cmc
loopne
insl
push
subl
add
push
jmp
mov
xchg
jo
sbbb
mov
aad
jl
les
fdivs
movsl
sub
imul
jle
ret
shr
inc
pop
push
push
or
movsl
or
xchg
js
scas
sahf
iret
in
fistpl
add
popf
ja
push
icebp
ljmp
ja
adc
inc
stc
mov
mov
jge
xlat
jns
or
mov
xor
lret
out
in
int
or
fidivl
dec
push
push
fisubl
subb
in
sti
and
in
add
add
adc
push
cmpb
int3
js
adcl
xlat
ljmp
js
clc
outsb
xor
fmull
mov
call
ds
pop
ud2
in
or
dec
mov
cmp
or
lock
cmpsl
push
negb
pushf
inc
push
add
xchg
in
xchg
push
in
fcoms
mov
lcall
sub
jmp
aam
jno
out
pop
mov
pop
xor
je
dec
pop
out
xor
daa
mov
and
std
jnp
xor
mov
shll
nop
xor
mov
popf
aas
notl
fistps
push
xchg
jle
adc
push
movsl
sbb
xorl
push
sbb
inc
inc
and
push
aas
hlt
jp
lea
mov
mov
bnd
outsb
icebp
testb
cmp
cmc
out
testl
shrl
outsl
lock
add
nop
jl
add
add
xchg
sarl
sub
add
sub
mov
loopne
add
adc
loope
daa
inc
xchg
xchg
mov
addl
iret
int3
add
in
push
pushf
push
lds
xchg
cmp
scas
shlb
jp
ret
stc
or
mov
rclb
ds
outsl
test
movsb
adc
shr
jp
iret
std
mov
pop
pop
dec
dec
adc
cmp
adc
mov
xchg
lret
sub
and
insb
stc
and
cmpsb
decl
in
jno
in
push
mov
fstl
and
jle
loopne
jae
ret
xor
clc
mov
add
std
dec
stc
xor
pop
cmpsb
das
pop
mov
cmc
mov
mov
adc
pop
sbb
int3
rolb
xchg
pop
leave
xchg
cwtl
icebp
mov
lahf
popa
xor
imul
cmp
inc
aaa
ss
negb
mov
jne
dec
test
sub
clc
call
dec
repnz
fcompl
push
outsl
sub
lret
mov
pop
push
scas
push
lahf
adc
xchg
out
xchg
mov
insl
or
outsb
add
pop
scas
mov
mov
repz
sub
pusha
mov
or
sbb
test
inc
fsubr
add
mov
bound
pusha
adc
je
repnz
int3
fisubl
xorl
sysret
cs
mov
enter
inc
pop
xchg
addr16
nop
cld
stos
mov
sahf
test
mov
mov
mov
ret
xchg
fistps
shll
xor
test
pop
xor
ss
push
data16
fcmovnu
loop
pop
popa
enter
ljmp
mov
ret
sub
rcrl
cmc
jnp
jae
dec
mov
push
mov
popf
and
cmp
jo
std
pushf
mov
ds
push
imul
loop
aas
adc
sub
sub
mov
push
ja
gs
pop
imull
pop
inc
push
dec
imul
ficoms
or
sub
add
rolb
adc
and
xor
bound
lret
xchg
insl
mov
dec
idivl
sbb
ret
enter
decl
dec
jns
in
repz
mov
inc
pop
pop
mov
jmp
les
sbb
jae
shlb
shlb
test
repz
adc
xor
mov
jl
jle
test
push
push
mov
repz
cmp
shll
fcomps
iret
movsb
push
mov
sub
push
and
clc
adc
fs
jno
xchg
cmpsb
sub
pushf
or
enter
cwtl
push
ret
cmc
pushl
sbb
mov
sbb
fcmovbe
jge
repz
in
ljmp
pop
mov
jl
aaa
mov
and
jecxz
pop
out
jno
push
in
aaa
mov
ss
sbb
repz
jns
or
mov
fistl
enter
icebp
movsl
leave
jns
stos
push
insl
push
movsb
cs
sub
xor
mov
jnp
andb
mov
mov
insl
outsl
mov
ret
neg
pop
xchg
mov
leave
pop
or
xor
or
pop
push
sub
fidivrl
mov
push
mov
fdivp
lret
mov
sbb
inc
or
sub
roll
dec
jnp
jmp
sub
xor
les
pop
adc
je
push
test
hlt
rorb
les
sarl
ss
mov
mov
fsubs
bound
pop
pop
int
xchg
int
sahf
jb
repnz
repz
cwtl
pushf
mov
adc
and
mov
xchg
icebp
and
push
hlt
sbb
jns
push
mov
sub
neg
mov
jne
leave
cmp
sarb
mov
fdivs
fnstcw
imull
scas
sub
sbb
inc
dec
lret
add
pop
loope
stos
fcomp
mov
cmpsl
mov
dec
es
pop
sbb
add
dec
lret
cwtl
jb
xor
cmp
push
xor
out
test
pusha
outsl
fisubl
daa
mov
push
lods
test
dec
ss
cld
mov
inc
clc
inc
jg
pushf
mov
popa
mov
cwtl
insl
leave
shrl
jae
pop
inc
dec
jbe
cmp
fwait
sbb
jge
sbb
jne
iret
cmc
test
loop
mov
xchg
adc
push
mov
mov
lock
push
ffree
or
jb
xchg
fistpl
jl
es
push
fsubr
mov
jecxz
repnz
mov
pop
repz
nop
inc
test
pop
or
or
adc
push
stos
pop
xor
incb
xor
aam
sub
pusha
jae
xlat
shll
sarb
jp
ljmp
out
and
in
push
repz
js
add
les
aam
bound
rolb
xlat
lea
test
xchg
orb
cmp
das
jg
scas
lods
sub
mov
inc
in
jb
inc
inc
dec
pop
loop
ss
mov
push
sub
jbe
cli
mov
shrl
out
pop
add
cmc
fs
inc
mov
stc
push
xor
andl
out
sub
idivb
push
and
jno
flds
cmp
frstor
sbbb
lods
sub
jns
adc
shll
or
xor
aas
sahf
cmpl
xchg
hlt
das
imul
adc
jnp
fstps
cmp
jl
addr16
sub
test
dec
dec
mov
push
push
dec
pop
into
push
xor
in
dec
repz
pop
cmp
sbb
fs
mov
fwait
adc
je
call
sbb
out
mov
mov
stc
jns
mov
mov
and
jns
in
das
es
sub
and
in
mov
mov
jle,pt
out
cmp
xor
leave
and
inc
ja
or
mov
sahf
adc
outsb
call
dec
xchg
cmpsb
outsb
push
aam
inc
and
xor
les
lahf
add
in
jb
push
outsl
xchg
repnz
lret
dec
mov
lock
mov
not
pop
and
movsb
jecxz
push
clc
sarb
jle
scas
jmp
addl
mov
imul
fidivrs
popa
fnstenv
sub
jae
inc
cmpb
mov
xchg
jne
gs
and
in
fcompl
xchg
dec
push
ds
imul
and
push
in
push
ficompl
adc
pop
and
scas
sbb
and
stos
dec
mov
sarl
in
pop
js
lret
iret
sub
shrl
adc
jmp
in
add
push
in
lahf
pop
lods
jne
das
push
adc
mov
mov
dec
add
or
dec
push
sub
fdivrl
inc
ds
pop
or
mov
es
push
push
in
int3
popa
in
xor
fs
and
mov
das
mov
sub
loopne
jecxz
xor
arpl
mov
inc
sti
pop
lea
shr
in
jno
in
testl
scas
cmpsb
ret
xchg
leave
lea
adc
or
dec
ret
add
into
xchg
test
xchg
lcall
sub
fs
jne
mov
push
push
outsl
adc
inc
aam
xchg
sti
rcrb
mov
inc
divb
xor
icebp
test
aas
scas
xchg
fstpt
rol
leave
xor
mov
ds
stos
pusha
out
xor
jmp
cmp
out
outsb
std
out
adc
cld
pop
out
rclb
and
cmp
cmpsl
ljmp
stc
lcall
sbb
je
in
lock
pusha
cmp
mov
sbb
jp
in
out
pushf
xchg
and
outsl
xchg
dec
and
cmpsb
ret
inc
repz
lret
mov
outsl
xlat
xor
and
test
clc
mov
cmp
inc
jno
cmpsl
xchg
and
mov
cmpsb
sub
pushf
arpl
add
dec
inc
pop
iret
int
loope
inc
jg
call
decb
cmp
cmp
rcrl
xchg
pusha
inc
adc
int3
mov
fildll
add
mov
popf
dec
test
jns
mov
sbb
test
fsubr
movsl
out
mov
sub
cmpb
xchg
rorb
je
fisubrl
sub
mov
adc
sub
movsl
and
cmp
cmpsb
add
mov
jbe
aam
popa
sub
xchg
push
imulb
pusha
idiv
call
sbb
xor
aaa
lahf
jl
pop
jo
xchg
addl
xchg
int3
dec
jbe
xchg
stos
mov
cld
lds
push
xor
std
fimuls
nop
pop
sbb
push
ret
scas
sbb
jbe
xor
into
icebp
decl
mov
pop
sub
cli
test
fprem
sahf
sbb
lods
add
loope
xor
cld
lcall
add
hlt
jae
fbstp
or
std
dec
cmpsl
mov
cmp
pop
xor
std
mov
jno
cmp
test
aaa
ret
jecxz
inc
movsb
pop
cwtl
in
push
sub
pop
repnz
cmovns
dec
cmpl
sub
xchg
fwait
jo
xor
imul
jmp
test
and
les
sub
pop
dec
jno
jno
xor
icebp
xor
sub
xchg
test
pop
shll
add
mov
or
call
jbe
mov
mov
jg
lret
cmp
pushf
roll
add
pusha
and
sbb
mov
pop
push
lahf
or
dec
inc
xor
push
push
sub
sbb
mov
ret
ret
inc
stos
pushf
jns
mov
sub
add
adc
aas
mov
fsubl
mov
sub
sbb
shl
xor
ja
dec
ljmp
mov
ds
sbb
rol
mov
unpckhps
adc
xchg
add
dec
jbe
cld
test
stc
jns
sub
clc
fistps
or
ljmp
dec
mov
lret
push
jae
out
push
out
ret
aam
fxch
lods
lods
add
or
mov
and
xchg
ljmp
nop
cmp
adc
xor
aaa
fcoms
repz
mov
push
push
cltd
inc
push
dec
inc
aaa
lock
sbb
xor
mov
jae
pop
sub
rcl
jg
out
push
push
into
popa
cli
jbe
lods
cmp
imul
insl
sub
stc
repz
pop
js
mov
sub
pop
inc
or
out
je
push
cld
scas
jle
jno
push
leave
mov
sahf
mov
cmp
lahf
add
sub
xorl
dec
sub
les
mov
cmp
mov
inc
insb
andb
arpl
push
xchg
fcompl
insl
or
ficomps
dec
add
les
leave
add
arpl
and
ja
push
nop
and
xor
jns
adc
icebp
out
adc
inc
test
lds
sbb
repz
cmp
lahf
xchg
gs
insb
ret
lea
mov
cmpsl
xor
jae
clc
sbbb
out
loope
cmp
or
lods
pop
jle
xchg
ficoms
popf
enter
xor
int3
fsubs
jns
mov
xchg
sahf
pop
pop
out
xlat
andl
imul
ss
dec
push
push
test
mov
or
pop
inc
pop
mov
dec
cli
iret
xchg
xor
popl
mov
je
cmpsl
jle
movsl
cmpb
lret
adc
cltd
pushf
movsl
imul
lods
and
push
push
xchg
mov
es
mov
cs
sbb
dec
jae
dec
leave
sbb
dec
int3
or
add
xchg
push
add
movsl
cltd
pop
sbb
mov
sub
ja
cmpsl
sarb
in
pop
xor
mov
adc
ljmp
and
dec
sub
fimull
push
or
repz
ss
pop
cmp
adc
orb
movsl
std
lcall
pop
dec
orb
arpl
mov
jmp
je
pop
pushf
insw
ret
jnp
pop
fldt
sub
movsl
out
adc
arpl
pop
iret
pop
inc
mov
lcall
aam
ds
js
neg
int3
jno
jle
and
pop
sbb
repnz
orb
gs
outsb
jno
in
push
xor
pop
push
mov
icebp
les
les
hlt
xchg
dec
xchg
adc
mov
lret
dec
imul
movsb
jns
aam
scas
mov
and
scas
in
cltd
lea
std
sub
out
xchg
dec
push
mov
xor
into
pop
push
movsl
push
adc
cltd
or
fdivs
fsubrl
outsl
icebp
dec
cmpsb
add
mov
dec
movsl
filds
or
jg
in
test
test
pop
sub
into
jo
sub
pop
jecxz
lods
vaddps
test
push
cs
stos
lods
test
inc
iret
bound
lret
loop
and
rcr
jns
test
or
jns
out
jnp
pop
add
hlt
mov
call
xchg
rol
add
lods
xchg
lea
ja
and
sbb
gs
mov
inc
lea
sbb
sarl
push
rol
sub
cltd
pop
mov
packuswb
int3
cld
sub
or
movsl
roll
imul
int3
popf
sub
mov
xchg
scas
ret
pop
je
pop
je
es
in
cmp
mov
add
outsb
sub
mov
cs
mov
fdiv
add
push
cmpsb
and
lret
and
mov
sti
addl
add
cmp
in
mov
mov
sub
pop
cmp
repz
pop
jl
pop
test
mov
cmpl
lods
dec
fdivrs
scas
sub
push
or
xor
add
or
xchg
xor
pop
scas
out
or
shl
adc
mov
dec
sub
mov
jbe
xor
fs
call
cwtl
push
fwait
in
pop
push
cmpsb
jo
in
test
stc
imul
adc
xchg
dec
or
push
push
xor
xor
inc
je
and
sbb
shr
movsb
mov
sbb
mov
mov
ret
sub
mov
fstpt
lea
call
cmpsl
lods
lods
cmc
ret
cmpsb
or
jmp
sbb
mov
dec
cli
push
out
cwtl
dec
jmp
xchg
addb
stos
and
cmp
loopne
fadd
pop
push
add
cld
scas
inc
jecxz
jmp
divl
bound
fld1
cmp
xchg
bound
pop
lret
js
jnp
pusha
ret
inc
leave
addr16
icebp
cmp
pop
stos
movsl
out
pop
mov
dec
loope
in
dec
adc
fimuls
sbb
xlat
sbb
in
mov
pop
mov
mov
data16
mov
out
out
loop
in
sbb
dec
jecxz
jmp
loopne
jbe
push
popl
insb
push
pop
insb
add
or
push
dec
mov
cmp
call
in
sbb
sbb
xor
test
inc
xchg
pop
fstpl
mov
daa
adc
test
sub
xchg
test
js
lret
stc
jmp
jne
pop
sti
xor
mov
add
pusha
mov
and
adc
and
aas
mov
push
mov
lcall
push
cmp
pop
xchg
push
cmpsl
test
jae
aaa
add
mov
mov
push
cwtl
xor
add
nop
mov
push
xchg
jmp
jns
aam
xchg
add
ret
or
scas
xchg
xlat
xchg
sub
out
xchg
xchg
cmp
repnz
mov
push
into
ja
or
add
and
es
hlt
lea
ljmp
jnp
dec
fwait
push
test
daa
lea
shr
inc
clc
std
cmpl
loop
pushf
les
mov
cwtl
clc
leave
sbb
jb
xchg
popa
inc
movsb
ss
jmp
pusha
mov
lret
fisubl
cmp
sub
and
adc
inc
adc
inc
dec
jmp
xchg
push
mov
ror
inc
xlat
daa
mov
test
jns
or
add
push
sti
sub
js
andl
sub
inc
hlt
push
into
mov
dec
add
int3
and
sub
fidivs
fsubs
pop
mov
js
sub
orb
xchg
iret
popa
cmp
and
inc
andl
cmc
testl
xor
ja
jb
mov
xchg
sqrtps
roll
push
insl
out
jl
and
and
fsub
and
lods
rclb
push
stc
and
dec
mov
aam
adc
dec
sahf
push
xor
je
or
and
add
fcmovnbe
mov
sub
push
and
mov
jecxz
imul
adc
push
push
fdivs
loope
mov
sub
adc
pop
js
and
in
xchg
lahf
xchg
sub
out
into
jge
add
push
sarl
or
aad
lea
push
cmp
aam
adc
aaa
in
aam
and
test
pop
dec
fistps
cmp
test
add
imulb
loopne
rolb
lea
pop
imul
in
jne
jecxz
lock
rcll
and
push
mov
and
pop
pop
hlt
and
push
pushf
mov
or
add
pop
push
bound
mov
in
push
adc
test
xor
inc
xor
jb
add
test
mov
mov
push
fcmovu
pop
fmulp
nop
in
stos
test
mov
xchg
and
cmpsl
and
mov
add
or
mov
cli
setge
test
xchg
mov
cld
scas
add
gs
movb
dec
adc
adc
mov
inc
jbe
inc
stos
les
adc
hlt
out
ljmp
lcall
push
jo
ds
xadd
pop
fimuls
fisttpl
iret
arpl
pop
int3
dec
or
cltd
mov
cmp
jns
add
rep
pop
pop
mov
xchg
jno
lret
flds
push
jne
mov
xchg
lea
leave
shrb
pop
lea
neg
mov
push
mov
sbb
and
mov
mov
jno
jmp
add
rorb
xor
xchg
into
cmp
xor
jo
jle
clc
ret
push
and
add
adc
rcrb
test
mov
dec
xchg
ds
push
sbb
cmp
loope
adc
scas
imul
add
out
insb
jns
cmp
jo
push
mov
movsl
jecxz
out
push
mov
add
adc
jnp
dec
loopne
int3
pop
cwtl
or
movsb
lods
mov
dec
idiv
adc
or
rolb
xchg
cli
xor
mov
jl
xchg
or
mov
mulb
lret
mov
rol
sub
push
mov
into
clc
out
adcl
push
cld
loop
mov
wbinvd
mov
mov
imul
sbb
flds
in
les
mov
jbe
int
stos
lahf
adc
int3
into
outsb
xchg
decl
mov
clc
and
jle
dec
or
jnp
ret
leave
mov
pop
std
cmp
sub
mov
mov
sbb
stos
add
jo
insb
test
inc
loope
and
aaa
call
lods
sbb
lahf
dec
shrb
lahf
xor
cmp
jmp
ret
sub
pusha
push
xor
mov
call
push
pop
or
imul
pop
jbe
movsl
test
push
push
sbb
pop
dec
sub
pushf
subb
jmp
cwtl
mull
dec
jle
sub
mov
mov
mov
inc
stos
mov
aad
aam
fmuls
and
mov
int
sub
add
pushf
push
fldt
out
pop
mov
in
ret
dec
push
and
mov
nop
cld
mov
fnstcw
clc
out
push
stos
call
sbb
cltd
or
inc
push
add
rolb
jl
repnz
ret
aad
lock
fistpl
idivl
lret
jnp
pop
loopne
ret
outsl
mov
sub
mov
icebp
out
cwtl
dec
inc
mov
mov
xchg
xchg
nop
cltd
call
mov
add
nop
shrl
je
mov
cwtl
mov
adc
xchg
push
ja
jmp
rcl
notb
inc
or
mov
aad
pop
sbb
iret
arpl
sbb
xchg
in
scas
outsl
lds
scas
sbb
test
bound
pop
test
fwait
lods
loopne
shll
jp,pt
adc
sub
fwait
ja
push
hlt
in
out
jmp
daa
lds
adc
mov
mov
sbb
cltd
cwtl
dec
dec
jae
scas
loopne
xchg
aam
add
push
testb
sub
mov
aas
mov
lcall
and
out
loope
sub
xor
mov
jp
fcoms
out
aaa
pop
and
xchg
mov
sbb
ss
fwait
inc
adc
stos
mov
xor
fldl
cmp
pop
xor
lods
ds
filds
pop
int3
mov
mov
fcomps
or
andl
pushf
cwtl
cmp
push
inc
and
xor
loope
ljmp
jmp
mov
pop
xor
mov
out
mov
add
cld
xor
or
lock
pushf
cmpsl
mov
jge
std
add
inc
std
jnp
jae
out
lea
dec
loop
mov
stos
ret
push
movsl
inc
fptan
lods
push
notb
mov
push
lock
cmp
cwtl
mov
mov
sahf
cld
pop
cmp
popa
mov
pop
das
jo
mov
outsl
fsubp
mov
adc
mov
push
mov
inc
jle
lret
popa
ds
sub
imul
cli
aas
or
mov
xor
jns
xchg
lds
push
lret
mov
sub
pop
aas
xchg
dec
es
sub
subb
gs
into
test
mov
push
lcall
sbb
mov
sti
cmp
fisubs
hlt
cli
jae
and
jl
cmpsl
hlt
mov
xor
add
or
xor
jno
cmovle
and
lods
outsl
sub
push
fisttpll
or
pusha
sti
mov
nop
and
sbb
dec
jbe
mov
lds
dec
ret
jno
test
fnstenv
mov
push
test
cltd
add
jae
std
pop
cmp
int3
test
std
fdivl
ljmp
clc
cwtl
jg
std
cmp
sbb
insl
pop
cmp
jae
add
call
sbb
rcll
add
in
idivl
xlat
and
clc
ss
ja
cmp
xchg
lea
pop
inc
lret
or
ljmp
in
push
loope
jne
imull
add
in
dec
stc
inc
sub
out
fwait
xor
stc
sbb
stc
cmc
dec
das
je
push
enter
popf
or
adc
sti
mov
test
xchg
ds
push
and
mov
adc
scas
stc
or
sti
mov
and
mov
movl
dec
cmpsl
push
mov
popl
inc
sub
mov
dec
ja
dec
and
cltd
xlat
sub
fists
cmp
push
rclb
dec
imul
xchg
bswap
ljmp
mov
imul
and
cwtl
ret
ss
or
xor
push
dec
xchg
jg
mov
scas
mov
jb
sub
cmp
sbb
or
cmp
sbb
insl
inc
mov
cmpsl
cmpsb
test
je
aas
and
xchg
and
cs
mov
sub
aam
cmp
repnz
and
fcom
stos
dec
xor
cmp
inc
sub
sub
add
in
pop
dec
leave
jg
sar
and
outsb
faddl
je
adc
test
fstpl
sub
mov
ds
shlb
das
xchg
pop
adc
decb
jo
jl
inc
pop
push
arpl
cmp
data16
movsb
and
clc
mov
inc
arpl
jo
add
sub
push
mov
je
sbb
int3
nop
jnp
pop
pop
mov
outsl
inc
mulb
lock
add
cwtl
iret
and
adc
fwait
ss
shrl
adc
push
pop
ljmp
movsb
sbb
xchg
stos
xor
hlt
push
icebp
dec
jle
test
test
insl
mov
ret
mov
adc
fisubrl
data16
iret
je
jb
xchg
pushl
shrb
repnz
inc
add
or
push
sbb
daa
loop
inc
mov
sub
adc
int
je
loop
ficoms
daa
or
shlb
sbb
lcall
cmp
adcb
pop
cmpsl
or
inc
pop
and
add
fldl
dec
and
decl
mov
add
sub
xchg
out
jecxz
loopne
inc
pop
sahf
add
out
loopne
push
int3
dec
adc
inc
ja
nopl
push
fsave
or
xor
mov
or
pop
jno
xchg
mov
mov
jno
push
shll
rcrb
mov
jle
mov
adc
mov
cmp
push
jne
sarb
in
dec
jl
nop
fcmovnbe
ret
lea
jb
mov
aaa
pop
jmp
ret
push
push
push
clc
mov
lods
leave
fisubl
xchg
push
sbb
mov
pop
cmc
out
xchg
pusha
movsl
inc
jle
daa
divb
daa
insb
js
push
loopne
xor
iret
ret
pop
cwtl
mov
pop
jns
inc
sub
mov
jne
outsb
popa
pushf
add
sarl
jb
lea
inc
test
dec
xor
sahf
es
sub
pop
lret
popf
jp
rorl
push
out
inc
shlb
ss
sti
pop
jecxz
jmp
xchg
ds
cmp
mov
mov
mov
mov
or
jb
fwait
cld
adc
mov
push
sbb
jo
sti
mov
stos
mov
mov
xchg
aad
mov
shl
mov
subb
sbb
outsb
gs
inc
cs
sub
pop
into
mov
dec
add
add
out
in
xchg
call
jmp
fldcw
scas
loop
lods
mov
xchg
mov
movsl
mov
jmp
xchg
popf
mov
into
dec
inc
xchg
mov
in
stos
aaa
sbb
mov
dec
fsubrl
aas
push
insl
dec
xchg
test
lcall
leave
inc
imul
ljmp
clc
fadd
sub
mov
les
push
cmp
divb
jl
or
mov
and
adc
mov
add
inc
mov
ds
jbe
fists
add
push
xor
repz
mov
jo
movsl
push
jecxz
pop
data16
sub
rorl
cmpsb
push
shrl
and
lahf
jnp
or
call
fldenv
popa
xor
push
mov
jmp
roll
ljmp
jbe
mov
jne
ljmp
push
fisubrs
push
pop
push
movl
out
jne
sub
add
mov
pop
dec
je
mov
inc
bnd
fdiv
es
mov
inc
cmp
pop
sub
shlb
jmp
rol
adc
cmpsb
shll
mov
push
orb
std
xorb
mov
fcmovnb
adc
push
fbstp
loope
aaa
jnp
loope
es
sbb
sarb
xor
jp
mov
jge
hlt
jl
jnp
ret
jl
sub
push
clc
decb
mov
sub
and
loopne
insl
addr16
movsb
jb
xchg
mov
andb
ret
fsubr
sbb
fisttpl
or
jmp
mov
lcall
ficompl
in
jmp
in
shl
jge
cmp
scas
in
orb
cld
push
les
or
mov
repnz
out
xlat
nop
jns
notl
jne
test
std
ljmp
out
push
adc
out
inc
push
mov
xlat
in
mov
adc
cmc
scas
hlt
aas
jno
cltd
push
inc
loopne
mov
sub
mov
jae
and
mov
jb
dec
mov
jne
leave
jl
jp
arpl
add
outsl
inc
stos
fcmovne
cli
aad
int3
xchg
xchg
sub
fidivrl
bound
dec
jmp
mov
insb
adc
mov
nop
cld
sub
bound
xor
jmp
add
inc
mov
movsl
and
xor
jle
fisubs
inc
xchg
and
cmp
insb
inc
adc
ljmp
ljmp
dec
in
sti
adc
mov
xchg
push
frstor
sbb
sbb
mov
sub
je
js
and
hlt
adc
ja
shrb
sbb
sbb
inc
push
enter
insl
out
fwait
les
jl
ret
jecxz
jns
cmp
insb
xor
mov
int3
push
repz
xchg
cwtl
lods
inc
push
xor
pop
ljmp
fnstsw
mov
sarb
fwait
int3
adc
dec
pop
dec
popa
jne
jbe
dec
nop
sbb
jbe
pop
arpl
dec
sub
decl
inc
pop
jo
fstl
inc
mov
enter
fstp
imul
aam
cmp
pop
lea
out
xchg
jp
dec
inc
mov
lcall
test
pop
loop
out
dec
push
repnz
sub
frstor
outsb
dec
and
insb
int
jl
and
mov
outsb
dec
repnz
stos
arpl
mov
nop
in
jnp
icebp
cmp
in
jo
cmp
pushf
cwtl
hlt
and
leave
cmp
outsl
mov
cmp
mov
mov
scas
jg
in
adcb
outsb
adc
in
cmp
jge
pop
inc
push
lcall
and
icebp
sar
ds
gs
stos
out
xchg
dec
shrl
cmp
xor
and
aaa
sub
stos
xchg
push
push
pop
lcall
cwtl
insl
movsl
mov
sub
aad
rclb
mov
mov
mov
inc
mov
xor
hlt
repz
adc
mov
jge
cs
shl
xor
jbe
imul
push
push
in
sbb
push
int3
adc
lea
out
push
cmpl
mov
adc
and
and
add
mov
jle
popf
sub
out
loopne
sub
push
cmpl
mov
or
les
push
cmc
testb
dec
push
push
jns
inc
jecxz
in
jmp
int3
adc
mov
cmpsl
es
pushf
xchg
pop
inc
mov
jno
faddp
adc
pop
push
mov
subl
ret
jo
sti
inc
dec
adc
loope
fldt
push
sbb
adc
adc
jle
mov
ds
fistps
enter
insl
mov
lcall
ljmp
in
add
inc
ud0
mov
icebp
adc
jo
add
lcall
mov
jne
cmp
call
and
fisubrl
or
iret
out
jl
imul
rcl
xchg
push
pop
pop
adc
movsb
ucomiss
jo
jle
adc
mov
ds
jmp
dec
stos
adc
cwtl
sub
xor
jmp
adc
sbb
dec
xchg
ret
pushf
bound
push
inc
mov
xchg
xor
adc
and
ds
push
xor
in
loop
shl
mov
sub
les
loope
outsl
or
mov
and
test
adc
popa
add
pushf
jmp
outsb
adc
stos
fs
adc
mov
adc
sbb
mov
insl
inc
jns
popf
out
adc
or
stc
mov
ret
pop
clc
pop
flds
mov
out
lea
rorl
xchg
and
add
mov
nop
sar
pop
lods
sbb
mov
inc
popf
and
fdivl
pop
and
cmp
lock
add
sti
jmp
lret
sti
sub
and
out
popa
inc
test
or
inc
ja
add
add
outsb
ret
xor
xchg
or
sub
push
xor
xor
add
jno
daa
xor
mov
fisubl
add
pop
or
mov
xchg
lods
clc
dec
add
jg
dec
aad
xchg
lds
xchg
mov
testb
aad
imul
cwtl
xor
or
lds
fsubl
imul
jne
loopne
pop
ds
subb
in
cmc
mov
daa
pop
or
pop
add
push
mov
fbld
jg
adc
flds
xor
adc
and
sbb
sub
cmp
bound
xchg
inc
add
les
je,pt
push
sub
xchg
cmp
xchg
xchg
cltd
shl
pop
loop
jp
and
push
push
stos
cmp
ja
scas
mov
int3
or
sub
test
outsl
adc
sti
inc
dec
or
sbbb
clc
mov
fnstenv
sbb
icebp
cmpsl
xchg
out
ja
pop
movzwl
push
mov
popa
inc
cld
outsl
jbe
pusha
jmp
arpl
push
mov
lcall
lcall
sub
adc
mov
popa
pop
mov
sub
pop
xchg
idivl
testl
or
jp
pop
cmp
push
cwtl
jb
sbbl
adc
sub
adc
mov
cmp
mov
xchg
mov
push
fucompp
test
xor
or
mov
ret
push
xchg
sbb
mov
or
rolb
cmpsl
out
in
fsub
inc
mov
popf
ss
mov
adc
push
jno
out
dec
adc
xchg
cmp
frndint
fdivl
mov
icebp
ret
je
outsb
into
aaa
pop
jne
add
popf
mov
ljmp
xchg
cmp
ret
imulb
or
mov
push
pop
push
repnz
pop
mov
sub
jo
or
and
fmuls
jbe
sbb
clc
cmp
dec
push
and
fcmovnu
mov
dec
lods
outsl
mov
repz
fldt
sbb
fs
push
stos
icebp
testb
mov
inc
inc
inc
pop
int3
ret
sbb
add
xor
pop
out
mov
daa
jbe
ljmpw
sub
jmp
pop
mov
adc
sub
jg
or
push
fistpl
mov
rcrl
in
push
mov
pop
inc
stos
jmp
push
lcall
mov
sti
pop
mov
xchg
or
idivl
xor
sbb
outsb
lods
dec
movsl
inc
je
pop
add
xor
fldcw
and
or
push
cwtl
loopne
fbld
test
mov
push
iret
adc
aas
sub
movsl
scas
and
ljmp
popf
insb
leave
fdivrl
clc
jg
rorl
and
ret
icebp
cwtl
add
xchg
mov
lcall
xor
addr16
out
je
mov
cmp
cmp
ss
lret
mov
jle
rcll
icebp
bound
mov
ja
addr16
or
mov
into
sbb
js
outsl
mov
mul
insl
cld
push
push
scas
int
jae
or
sub
ret
aad
cmp
roll
shll
xor
scas
xor
jbe
sbb
fimuls
push
inc
jae
call
fadds
add
pop
in
mov
aaa
jne
lock
or
adc
ljmp
stos
xor
cld
fsubrs
mov
xchg
hlt
jge
lahf
dec
popa
leave
mov
ss
and
adc
repnz
addr16
fldl
pop
lcall
lret
add
test
popa
inc
inc
sbb
or
sub
lods
aad
in
testl
ljmp
adc
pop
inc
std
cld
fwait
sbb
out
mov
cmp
mov
inc
and
outsl
xchg
pop
mov
jb
in
mov
rorb
cmc
mov
sbb
inc
jle
inc
clc
cmp
out
inc
jne
push
push
lock
lods
sbb
lea
insl
adc
dec
adc
sbbl
sub
dec
mov
mov
fisubrs
scas
mov
and
jge
xchg
and
repz
ret
jg
shl
inc
es
inc
or
movsb
mov
in
xchg
dec
add
push
push
mov
cltd
dec
les
xchg
and
lret
jp
mov
jl
fmull
mov
ss
sbb
mov
xlat
and
xchg
outsl
imul
shlb
xchg
movsb
movsb
mov
in
or
cmpsb
mov
pushf
pop
repz
mov
shll
pop
fistl
inc
push
loopne
xor
dec
cmp
fcmovnu
mov
xchg
into
cmpl
mov
popl
jae
pop
popl
add
cmp
leave
test
insb
push
dec
pusha
adc
pop
mov
dec
fisubrl
mov
cmc
insb
push
push
or
scas
push
push
cmpsb
mov
nop
adc
jmp
es
aas
mov
and
sbbl
push
inc
rolb
adc
repnz
inc
movsl
and
pushl
sti
sub
pop
or
xor
dec
xlat
test
call
or
loope
outsb
fs
sbb
stc
xlat
addb
int
pop
jno
iret
mov
xor
fwait
or
insl
hlt
xchg
pop
inc
xor
mov
test
pop
adc
jge
lock
push
and
push
jbe
xchg
jecxz
cltd
xlat
or
jbe
popf
fisubs
or
add
das
xor
sbb
lds
idiv
dec
mov
jnp
jns
or
or
lret
icebp
and
lcall
push
mov
aam
aad
and
mov
ja
mov
mov
mov
not
inc
outsb
mov
adc
sub
push
xor
lcall
loopne
inc
pop
xchg
gs
rcll
in
mov
push
imull
mov
push
cmp
and
mov
add
jne
test
fs
ljmp
cmp
xchg
push
pop
stc
xchg
fldt
jno
fisttps
xlat
xchg
pushf
daa
adc
xchg
push
repz
in
pop
push
fiaddl
inc
mov
fneni(8087
or
clc
fcmovnb
jo
add
loopne
fs
mov
add
pop
leave
fidivs
pop
cmp
stos
out
mov
xor
fsubr
add
sub
add
enter
xor
push
xor
ss
ljmp
movups
lret
lcall
and
xor
addl
xchg
mov
adc
data16
and
ss
mov
xchg
sarl
lret
in
push
jne
dec
jne
flds
fsts
insl
lretw
mov
out
es
dec
ljmp
es
pushf
inc
sub
add
push
jle
out
xor
test
mov
lcall
pop
aam
xor
xchg
adc
or
pop
mov
push
push
inc
js
andb
mov
mov
xchg
pusha
ja
sub
inc
ljmp
mov
sarb
outsb
testb
ret
insb
movsl
test
mov
mov
fistpll
pop
mov
mov
ss
inc
xchg
loopne
or
rorb
or
mov
xchg
jg
and
cmp
jl
les
pop
cli
sub
movsl
jno
hlt
in
test
pop
iret
xchg
mov
xchg
mov
push
dec
dec
push
loopne
repz
in
push
icebp
jae
xor
xorb
shrb
sbb
jnp
bound
add
or
jecxz
out
psrad
pop
push
pop
sub
and
xor
add
inc
jecxz
in
stos
sbb
or
stc
imul
imul
lret
xchg
cmp
adc
pop
scas
cwtl
imul
movsl
sbb
ljmp
mov
xlat
mov
insb
and
fstpt
dec
pop
xchg
inc
js
sbb
daa
xor
add
cmp
out
scas
jne
mov
in
push
mov
add
inc
or
lods
jg
scas
dec
dec
ud0
das
es
shll
cmovne
lret
xlat
inc
in
dec
lret
jns
mov
mov
dec
mov
inc
sub
fstl
xchg
push
pop
arpl
mov
adc
out
or
ret
shrd
lret
xcrypt-ofb
cmpsl
imul
inc
movsl
and
push
js
leave
xchg
out
loop
mov
es
lret
xchg
pop
ret
data16
inc
fldcw
mov
je
and
or
xchg
inc
leave
sbb
jmp
imull
xchg
fs
and
imul
loope
xchg
dec
lahf
iret
xchg
cld
lcall
dec
popa
jo
hlt
fidivrl
sbb
mov
jne
out
fisttpll
test
ret
and
jno
adc
test
and
jo
roll
shrb
fs
add
scas
iret
nop
clc
push
fisubrs
addr16
cli
or
push
push
inc
rcl
push
adc
std
ficompl
and
mov
nop
sub
jmp
les
test
jnp
add
or
pop
cmp
cltd
pusha
jecxz
int3
into
ss
inc
sbb
push
pop
push
push
js
sbb
mov
xchg
imul
dec
rcll
and
or
jg
out
sbb
lods
xchg
inc
int
pop
arpl
ss
enter
jns
jbe
cmp
pop
sti
mov
cmpl
add
add
sub
leave
jae,pt
in
xor
push
mov
push
dec
inc
add
pop
cmp
dec
dec
daa
les
jl
xchg
cmp
in
sub
outsb
sbb
and
movsl
mov
push
shlb
and
rcrb
loopne
mov
xchg
inc
pop
andb
sti
lret
or
inc
call
fistps
push
push
aam
mov
adc
push
mov
xor
cld
loopne
inc
loop
jmp
pop
sub
and
into
scas
bound
push
lret
mov
jle
test
pushf
leave
cmp
cli
imull
push
in
push
adc
xchg
imul
push
enter
daa
out
int3
add
insb
outsl
mov
pop
pop
or
cmp
push
fisubs
ret
add
jns
mov
mov
push
lidtl
fimull
and
call
aas
and
cmpsb
push
es
outsb
sbb
jg
adc
xor
and
imull
lods
xchg
jge
testb
ret
dec
incl
pop
sub
push
stc
mov
push
popf
cmpl
int3
lret
rcl
sbb
js
mov
lret
jmp
test
jnp
movsl
sbb
pop
mov
xor
push
xchg
insb
fwait
enter
popf
out
push
in
sahf
mov
fldz
fistl
fisttps
fmuls
mov
fs
dec
stos
movsl
push
ret
andl
dec
stos
cmpsb
push
mov
xor
jp
das
or
into
sbb
mov
xchg
pop
dec
shlb
cs
mov
jle
mov
add
jne
and
arpl
xchg
cmpb
xchg
mov
jmp
scas
sar
or
mov
cmp
mov
adc
mov
add
fs
les
xchg
sub
dec
jle
loop
jne
sbb
shr
mov
aaa
or
dec
je
mov
cmp
into
pop
out
mov
ret
jne
mov
or
adc
push
iret
inc
out
clc
adc
pop
and
aaa
ljmp
cltd
mov
jae
push
roll
lcall
rcrl
popa
inc
cli
pop
mov
loop
fnsave
fs
pusha
shll
push
lret
inc
fimull
xor
ljmp
stos
imul
dec
fldt
jae
mov
push
adc
out
sbb
xchg
xor
xchg
or
sub
inc
sub
xor
add
subl
xchg
pop
mov
push
and
popl
aaa
pop
notl
pop
push
shll
aad
ja
adc
sti
or
cmp
cmpsl
mov
leave
sub
pop
int3
loopne
jge
mov
xchg
add
inc
hlt
jnp
cmp
aaa
jle
mov
pop
jecxz
shr
sbb
mov
mov
les
dec
xlat
ret
gs
sbb
or
pop
mov
adc
imul
pop
insb
add
or
test
mov
sub
out
cmp
shrl
addb
fsubrl
insb
xchg
insl
dec
in
and
adc
dec
in
and
test
sub
cmpsl
mov
outsb
inc
loope
jbe
imul
mov
nop
nop
xchg
fwait
test
testb
fbstp
stc
popa
mov
or
cmp
pop
dec
dec
cmp
inc
jecxz
pop
jo
in
or
adc
xor
mov
adc
lock
mov
lsl
mov
lds
and
lcall
mov
mov
aam
sbb
add
in
aaa
jno
xor
sub
mov
xchg
fwait
pop
int3
push
iret
arpl
inc
xlat
adc
pushf
lcall
jb
into
cmpsb
dec
es
push
cs
cmp
not
pop
iret
cmp
in
fldenv
jg
jb
mov
sub
cmpb
dec
es
mov
fildl
test
or
in
pop
add
sbb
mov
hlt
sub
mov
test
arpl
fisubl
imul
add
pop
pop
ret
xchg
icebp
pop
and
jmp
dec
test
and
cmp
inc
xor
add
mov
mov
js
pop
adc
or
rcl
push
mov
push
jo
xor
pusha
pop
push
sahf
pusha
dec
add
or
pop
int3
pop
sub
add
add
lcall
loop
fcmovnu
movsb
mov
int
sbbl
lret
jecxz
outsb
add
push
jmp
xlat
js
cmpb
inc
mov
cltd
in
xorl
pop
inc
and
test
mov
repnz
lahf
js
pop
cmp
sbb
adc
incb
push
std
push
or
cmp
cld
mov
cmp
adc
or
or
jne
jbe
das
adc
add
imul
sbb
and
xchg
out
push
push
sbb
jnp
jae
inc
pop
out
push
jg
adc
and
sbb
shrl
ss
hlt
cmpsb
test
in
arpl
insb
jp
mov
ja
push
stos
cmp
sahf
mov
das
xchg
add
out
or
in
or
test
ss
add
dec
pop
insl
ret
push
mov
pop
push
add
push
jg
scas
ret
enter
inc
out
jbe
jl
fwait
jno
pop
movsb
mov
mov
inc
xchg
mov
aas
mov
xchg
test
sbb
cmp
inc
push
add
in
nop
test
sbb
pop
imul
adc
and
push
mov
jg
fimull
sub
cwtl
mov
push
add
push
dec
cltd
out
mov
int3
mov
push
loopne
popf
pop
mov
push
std
daa
sub
daa
imul
mov
fsts
cmc
sub
out
mov
sub
dec
push
lods
repnz
inc
xchg
cwtl
dec
mov
test
mov
nop
and
jbe
and
scas
out
jns
out
mov
ret
filds
negl
test
imul
cmpsl
enter
mov
mov
icebp
gs
data16
lock
mov
mov
mov
jg
xchg
fcmovu
add
xorl
cmp
scas
push
dec
shlb
loopne
push
sbb
cmp
ret
enter
lds
pop
ret
or
mov
xchg
ss
mov
mov
imul
mov
pop
jne
cltd
xor
adc
pop
jle
adc
pmaxsw
movsb
test
in
mov
adc
push
jbe
cmc
mov
daa
or
rorb
pop
popf
adc
or
stos
mov
push
mov
dec
popa
subps
arpl
inc
daa
pushf
cltd
push
inc
sub
adc
adc
sarl
insl
popa
and
xchg
lds
push
or
sbb
cmp
cltd
insl
cmp
fwait
mov
js
inc
cmpsl
std
and
fwait
mov
sti
jne
loopne
dec
mov
pop
mov
enter
and
xchg
fadd
int3
jne
es
sahf
in
xchg
add
cmp
push
sbb
jne
repz
fisubrl
push
test
mov
jb
ficoms
jecxz
pushf
push
jg
pop
xor
mov
scas
mov
ret
bound
adc
dec
fwait
mov
sbb
add
jno
inc
sub
test
jb
int
pushw
mov
mov
rol
xor
jnp
mov
rcl
lret
pushf
icebp
jne
mov
pop
popa
icebp
aaa
mov
notl
fldt
mov
xor
je
fdivs
std
out
into
loope
test
mov
cltd
out
jnp
es
adc
aas
cmp
insl
sbbl
in
jg
dec
add
sub
sarl
mov
mov
sahf
leave
data16
popl
shlb
bound
dec
out
and
std
jbe
jae
outsb
or
movsb
sbb
fwait
iret
pop
ret
jl
pop
leave
mov
das
je
vpsrlq
adc
stc
pop
dec
mov
shrb
pop
mov
fimull
and
cmpsb
xchg
das
or
jne
pushl
pop
cmp
mov
aas
arpl
xor
jecxz
scas
cmp
rcl
mov
cmp
and
sub
ds
movsl
sub
add
cmpsl
jnp
in
hlt
xor
in
loopne
cmc
cwtl
dec
adc
cmpsb
pop
jno
add
xchg
and
vpavgb
gs
lahf
ret
xchg
hlt
inc
inc
dec
sbb
cmpb
jecxz
ficomps
add
cmp
int3
jmp
lods
fisubl
push
or
lods
out
add
xchg
inc
push
hlt
sbb
dec
mov
jmp
pop
pop
fisubrs
rep
icebp
lret
notb
pop
sbb
inc
outsl
cwtl
xor
insl
xchg
maskmovq
pusha
fmull
fwait
xor
sbb
sub
movsb
test
leave
dec
sahf
rcrl
jge
inc
inc
clc
inc
xchg
rclb
xor
adc
mov
inc
inc
add
movsb
popa
in
loope
mov
cltd
cmp
scas
movsb
stos
bound
or
outsb
in
js
das
lahf
sbb
jmp
ret
std
int
rolb
jp
inc
int
shl
cli
or
sbb
in
jp
xor
imul
mov
cmc
mov
loope
dec
pop
int3
dec
add
cs
fucomip
xor
sarl
pop
ss
imul
or
pop
xchg
pop
mov
cltd
loopne
orb
pop
cmpsl
js
inc
pop
cmpsb
clc
in
or
and
inc
rolb
mov
adc
and
cmp
or
mov
push
or
lods
xchg
jle
popf
mov
push
idivl
add
stos
jmp
test
repnz
add
add
adc
stos
jne
lods
jnp
sbb
inc
fdivrl
lods
mov
jl
loope
mov
movl
mov
imul
mov
sbb
pop
dec
sbb
mov
inc
push
enter
cmp
das
inc
enter
mov
pop
lods
mov
iret
fdivrl
mov
xchg
dec
or
mov
out
add
push
inc
pop
subb
outsb
sbb
inc
sbbl
inc
xor
pop
cmc
dec
pop
imul
jnp
xchg
stos
addr16
out
cltd
pop
leave
jecxz
sub
mov
in
xchg
adc
push
inc
mov
pop
xor
repz
and
jle
add
xor
popa
in
int
push
push
jg
xchg
cmp
dec
lock
jae
movsb
addl
rorb
push
push
ret
cli
fwait
pop
mov
out
cmp
mov
dec
stos
push
dec
sub
and
push
push
insb
or
fisttps
cmp
adc
test
push
stos
jecxz
xor
jnp
faddl
jg
mov
clc
mov
cwtl
add
mov
push
outsl
push
leave
and
sahf
aaa
mov
xchg
push
pop
test
fmull
push
adc
and
rorl
fcompl
cmp
mov
mov
shlb
nop
push
insl
clc
dec
xchg
add
add
les
or
dec
mov
dec
shlb
xchg
add
fldenv
xchg
in
sub
rclb
sbb
ret
xor
jl
aas
lret
ret
adc
jp
inc
fidivrs
xor
pop
mov
sub
inc
push
sub
mov
hlt
xor
outsl
push
jno
inc
xchg
inc
jmp
mov
ds
test
call
stc
dec
clc
movsl
mov
movsb
insl
xor
pop
push
xchg
jg
dec
add
jb
nop
xchg
and
xchg
xchg
adcb
mov
mov
stos
sub
cmpsb
sbb
sub
out
jge
mov
jns
cmp
pop
or
sahf
cmc
cmp
jo
xchg
mov
mov
dec
ja
daa
cmc
js
hlt
frstor
mov
ret
mov
or
inc
pop
xor
setg
push
mov
loope
iret
xchg
mov
adc
sub
icebp
cmp
cmpsl
mov
mov
pop
in
jecxz
adc
movsl
add
jo
scas
mov
lahf
adc
push
loope
clc
outsl
insb
clc
es
ret
repnz
cld
arpl
icebp
and
ljmp
jnp
jl
fnstenv
repz
rcrl
or
add
enter
xor
outsb
push
insb
mov
dec
sub
loope
insb
fmull
fcmovne
in
fisttpll
vpsubd
fidivl
mov
sahf
pop
sub
data16
or
sti
push
enter
and
or
add
xchg
insb
xchg
dec
dec
inc
test
testb
add
push
mov
xor
jne
rcrb
jmp
aam
xlat
out
cli
lret
dec
daa
mov
sti
or
mov
fnsave
fld
mov
out
aas
js
sbb
xchg
arpl
pop
xor
fwait
mov
shl
rcr
test
xchg
lcall
xchg
dec
xor
adc
ds
cmp
push
out
das
sbb
sbb
mov
mov
mov
xlat
es
jecxz
cwtl
push
sbb
push
jp
pop
pushf
sub
cmp
sbb
and
dec
pop
inc
insb
cmp
adc
inc
inc
mov
lea
hlt
imul
cld
adc
push
pop
cmp
pop
in
jns
jno
jae
fbld
dec
ss
mov
pop
outsl
rol
cmpsb
into
fisttps
mov
push
test
inc
out
popa
cmp
das
iret
jne
mov
sbbl
mov
mov
lret
push
push
cmp
dec
lock
sub
aas
cmp
sub
and
lock
jnp
sbb
std
fs
ret
dec
cs
mov
decb
out
add
inc
pop
cmc
sarb
or
cmp
cmp
scas
addr16
mov
loope
cmpl
lds
enter
dec
adc
jmp
fwait
mov
and
jg
stc
movb
popf
ljmp
insb
add
popf
pop
xor
push
sub
addb
inc
cmp
cmc
adc
into
fcmovu
mov
hlt
pushf
inc
subb
pop
rorb
push
sub
sti
add
push
clc
sbb
outsl
sub
or
dec
adc
hlt
call
aas
or
jp
cld
fs
jl
or
pop
xchg
psubusw
inc
ljmp
ds
loopne
xor
lret
std
or
inc
sub
gs
out
xchg
mov
ss
fmull
shr
inc
pop
mov
leave
adc
pop
ret
inc
cmp
dec
je
inc
sub
pop
jb
inc
xchg
lahf
adc
into
mov
mov
subl
movsb
fisubs
pusha
jno
cmp
cmc
ljmp
jne
and
adc
cs
xchg
popf
cmp
xchg
idivl
call
inc
add
adc
fcoml
shrb
fmul
xchg
iret
nop
fwait
cmp
test
mov
setl
dec
or
mov
push
or
jo
shrb
movsb
ret
jg
adc
in
and
das
stos
add
fstpl
aad
dec
shr
cltd
shll
add
sbb
repz
rorb
ja
jbe
push
xor
pop
jmp
xchg
repz
or
jno
andl
xchg
insl
xchg
ret
int
jo
jmp
or
jb
and
daa
dec
dec
gs
sbb
ljmp
add
mov
push
ss
jo
fdecstp
push
es
inc
sbb
mov
sti
fidivrs
pop
pop
jno
in
xchg
lods
dec
mov
loope
mov
push
xchg
mov
ret
jp
and
lea
inc
loope
cmp
cmp
rorb
push
mov
push
enter
test
xchg
mov
ss
jg
in
int3
ljmp
fcmovnu
jl
mov
sti
pop
enter
and
popf
sub
shrb
inc
imul
lea
sub
pop
fcompl
lock
cmp
mov
pop
cmp
or
loopne
push
push
mov
fdivrp
loopne
loope
cld
arpl
jno
mov
mov
decb
sbb
inc
mov
push
aad
mov
jle
and
movsl
mov
push
cld
in
inc
ljmp
movsl
add
pavgw
add
jmp
int
inc
loop
icebp
lret
and
xchg
xchg
mov
ds
sbb
and
mov
pop
mov
mov
aaa
mov
pop
mov
loopne
mov
lcall
cmc
cmc
out
mov
pop
int
rol
sub
es
sub
lahf
inc
mov
push
inc
pushf
and
inc
or
ds
fidivl
cs
xchg
sub
xchg
rorb
negl
xchg
push
mov
in
cmp
cmp
adc
lods
outsl
dec
fsubl
les
aad
test
aaa
stc
andb
dec
sti
lcall
dec
mov
lcall
scas
dec
cltd
jmp
in
push
sbb
mov
mov
mov
or
roll
mov
or
insl
daa
fsts
push
lahf
lret
jbe
pushl
pop
ffreep
mov
push
inc
and
add
xchg
addr16
inc
cmp
lcall
mov
mov
fs
add
xchg
lahf
int3
lea
stos
mov
xlat
lods
clc
cmpsb
pop
pop
or
cld
aam
adc
inc
xchg
sarl
add
jne
lret
enter
mov
pushf
xor
cmp
int
push
mov
inc
mov
add
imul
in
mov
jae
mov
mov
sbb
push
add
mov
cli
dec
aaa
jecxz
jl
or
es
enter
dec
stos
jne
icebp
dec
imul
cmp
shl
leave
ds
cmpsb
insb
sbbl
stc
mov
cmp
sub
push
shrb
adc
mov
mov
scas
cmp
add
add
push
pop
sbb
xchg
or
push
dec
sbb
fcmovb
and
cmp
and
add
mov
mov
outsl
lods
fwait
jnp
movl
aam
push
js
in
xor
ret
push
mov
cmp
jmp
pop
push
mov
repz
idivb
mov
mov
andb
inc
out
loop
arpl
fstl
movsl
mov
jb
push
iret
adc
dec
push
mov
pand
subb
mov
lret
xor
rolb
dec
mov
ss
xchg
sub
test
fiaddl
add
arpl
testl
pop
rcrb
icebp
push
mov
push
fistl
bound
divb
adc
sub
pop
push
addb
mov
in
push
sub
push
dec
add
fnsave
ja
xchg
xchg
cld
pop
pop
enter
sarl
adc
jecxz
cmp
cmp
fistl
dec
add
insb
pusha
outsb
into
cld
push
sbb
mov
xchg
jnp
loope
out
adc
dec
aad
sbb
and
mov
fdivr
mov
push
addr16
dec
mov
in
xor
shll
sub
ret
add
into
cmp
pop
xchg
jl
shl
iret
inc
imull
add
imul
imul
inc
sbb
mov
push
clc
fiaddl
jmp
lea
pop
cmpsl
stc
xor
sub
adc
inc
pop
xor
lds
fdivp
out
out
push
mov
lcall
xor
cmpsl
dec
adc
push
jne
stos
test
cmpsl
test
sarl
lahf
xor
in
mov
enter
and
mov
jl
mov
dec
mov
shll
mov
inc
in
mov
out
inc
push
ret
add
dec
fcomp
test
jno
rcrb
rcl
addr16
xor
cld
cmpsb
sub
mov
sbb
aaa
jne
mov
jmp
sti
lea
jb
sub
outsb
enter
mov
and
int
cld
add
jb
sub
orl
inc
sbb
mov
icebp
ror
jecxz
iret
arpl
popf
mov
inc
ja
imul
push
shrb
jns
jmp
or
iret
cmp
and
lods
dec
testl
fiaddl
sbb
mov
push
cmp
cs
pop
mov
out
or
fisttpll
push
cs
int3
bound
xor
sahf
subl
cltd
xchg
xchg
mov
ret
rol
lock
or
repnz
lods
test
mov
add
push
lods
mov
mov
nop
xchg
push
sbbl
fistpl
pop
pop
mov
ret
daa
sbb
insb
xchg
scas
arpl
inc
mov
jecxz
dec
xor
leave
xchg
enter
mov
mov
mov
xor
pop
jle
aam
mov
lds
and
stos
jp
bound
mov
jnp
push
dec
in
das
clc
and
cmc
xchg
xor
sbb
sub
dec
jecxz
push
sahf
ret
xlat
stc
sub
out
xor
pop
mov
notb
or
fld
push
addr16
lea
and
mov
insl
xchg
sti
sahf
fwait
push
std
adc
rorb
cmp
xor
aam
xchg
lods
jnp
dec
mov
loop
xchg
rcrl
adc
cld
pop
mov
or
into
xor
inc
cwtl
shlb
cmp
or
mov
jb
ror
jecxz
jb
mov
fcompl
rclb
jl
add
mov
insb
add
inc
outsb
push
int3
pop
dec
into
imul
pop
cmpsb
loop
jno
lahf
or
mov
inc
fldln2
out
cmpsl
pop
xchg
adc
out
test
mov
in
and
cmp
mov
adc
lcall
mov
imul
test
sbb
or
enter
outsb
clc
xbegin
das
jb
or
scas
cs
jmp
fadds
or
roll
sahf
cmp
pusha
pop
inc
xlat
jle
and
addr16
movsl
aaa
mov
es
pop
loop
mov
adc
mov
add
mov
stc
aas
add
sahf
mov
imul
and
dec
mov
mov
lret
adc
jg
push
cmp
pop
icebp
aam
pop
push
mov
nop
jecxz
lret
out
pop
sbb
xor
pushf
jb,pn
sub
or
pusha
sub
fs
mov
ljmp
lret
sbb
mov
xchg
mov
cwtl
and
xor
imul
xchg
clc
out
xlat
lea
or
add
pop
xlat
lock
clc
les
insb
imul
cmc
and
dec
xchg
dec
push
jecxz
imul
adc
adc
mov
jnp
sbb
push
push
sbb
mov
inc
loop
pop
in
and
pop
inc
fstl
mov
scas
xor
insl
and
fbstp
fists
adc
pop
addr16
xchg
cmp
cmp
cltd
mov
pushf
push
fmull
add
clc
call
iret
mov
pop
mov
or
jp
and
call
mov
pop
xor
std
outsb
imul
aas
jg
ficompl
xor
dec
rcrl
sbb
dec
mov
mov
jl
pusha
mov
cmp
mov
dec
mov
or
test
dec
testb
push
sahf
sbb
mov
loopne
test
sub
inc
push
xchg
lcall
fists
add
loop
mov
jecxz
cmp
pop
into
and
jbe
lods
stc
xchg
loop
aas
lcall
jle
inc
push
mov
lds
loope
movsb
inc
dec
lahf
iret
gs
testl
xor
faddp
clc
rorl
idivb
mov
inc
sbb
push
sbb
jl
sub
pop
hlt
lods
dec
sbb
pop
test
aas
mov
xor
sub
or
jg
xchg
mov
loop
dec
pop
push
arpl
mov
pop
push
ja
jnp
shrl
js
push
dec
movsb
cmp
pop
push
push
lret
ret
icebp
adc
inc
pusha
and
xadd
roll
cli
mov
xor
mov
lods
sub
sbb
xchg
sub
add
incl
pop
cmp
and
cld
or
lret
jmp
outsl
cmp
in
push
and
scas
and
push
inc
imul
loop
push
sbb
aas
fwait
or
imul
negb
jo
pop
or
movsb
out
aam
sbb
je
je
shr
jmp
outsb
mov
dec
mov
mov
push
and
popf
test
lock
xchg
out
pop
add
fmuls
test
fwait
insl
out
in
or
dec
cld
add
add
sbb
add
xchg
arpl
inc
cmpb
hlt
dec
shrb
and
in
bound
xor
xchg
inc
and
and
push
out
mov
xorl
fs
repz
stos
inc
pop
sbb
pop
popa
stc
out
pop
mov
mov
inc
inc
ret
mov
cmc
bound
sub
add
xor
sub
arpl
ss
ret
pop
xor
and
sti
js
pop
push
mov
clc
cmc
pop
cmp
daa
out
rclb
out
add
jae
mov
cmp
xchg
xor
stos
mov
dec
mov
sarb
sub
xchg
mov
pop
xchg
adc
and
and
imul
push
fldenv
add
sbbl
pop
ljmp
lret
sbb
dec
xchg
pop
adc
aam
push
xchg
pop
xchg
mov
sbb
cvttps2pi
data16
js
cmp
lods
mov
stc
mov
and
sub
out
push
in
xchg
adc
mov
and
sub
jmp
xor
stos
out
push
in
mov
insb
int
mov
add
mov
daa
xor
repnz
adc
mov
clc
sarb
mov
dec
scas
test
cs
pop
push
pushf
xchg
ret
out
mov
shll
pushf
int3
pop
aam
call
xchg
sbb
stc
xchg
jge
xchg
pushf
pop
adc
xchg
mov
xor
pop
ljmp
mov
mov
icebp
shrl
js
lods
inc
or
ret
add
je
jge
outsl
out
xchg
mov
fistpl
xor
sbb
mov
add
sbb
jle
jo
sahf
dec
insb
nop
rorb
add
ret
cmpsl
mov
test
pop
pop
frstor
leave
xchg
dec
mov
sbb
loop
pop
inc
popa
xchg
sub
orl
sub
add
sbb
dec
mov
mov
inc
jp
fs
adc
lret
enter
insb
nop
cmp
push
mov
pop
fdivl
xor
icebp
jnp
push
inc
andl
xchg
lcall
sub
stc
mull
in
dec
test
add
xchg
cwtl
sbb
insb
jno
push
lcall
ljmp
push
sub
test
mov
pop
mov
out
cmpsl
cli
cmp
and
xchg
push
shrb
cmp
mov
aad
clc
xchg
xchg
xor
mov
mov
sub
fnstenv
xorl
cmc
add
push
inc
push
xchg
pusha
pop
inc
xchg
cmp
leave
aas
ds
mov
shrd
jne
xor
aas
lahf
mov
jns
mov
and
inc
mov
xor
xchg
push
lea
dec
sub
aaa
dec
nop
scas
push
jbe
jae
lods
adcl
pushf
xchg
test
xor
imul
je
jns
push
lret
pop
scas
decb
jo
cmp
lret
shrl
jp
loopne
pop
movsb
adc
daa
hlt
push
and
push
or
arpl
jg
mov
sbb
hlt
add
xchg
aad
xchg
xchg
or
mov
negb
lret
xchg
outsl
sahf
sub
cli
int
int
add
or
movsb
mov
ljmp
jbe
sub
notl
js
data16
push
aas
shll
dec
in
jmp
push
aaa
rorl
xchg
stc
clc
jo
rcll
dec
rcrb
add
mov
sub
ret
enter
sbb
pop
and
adc
cld
mov
mov
lods
out
sub
cs
xor
and
cwtl
cmpsb
pop
sbb
inc
push
test
enter
sub
pcmpeqw
stos
inc
pcmpgtw
xorb
mov
outsl
jae
icebp
jno,pt
pop
jb
loopne
cmc
jno
xchg
bound
mov
mov
fsts
icebp
xchg
push
inc
cltd
jb
test
sbb
cli
inc
push
pop
dec
xor
pop
xor
movsl
cwtl
stos
mov
inc
inc
pop
cmp
xchg
push
push
repz
sub
add
xor
jo
lahf
mov
or
orb
dec
enter
adc
mov
adc
ljmp
iret
push
add
jo
sbb
inc
sahf
pop
xchg
aam
mov
jo
lods
in
repz
aaa
das
int
rol
fidivl
xchg
adc
jp
inc
movsl
scas
adc
jecxz
inc
add
jb
aam
cmp
jbe
mov
or
xor
adc
sbb
es
mov
icebp
mov
xor
push
cmpsb
jbe
lcall
cmp
xchg
adc
lahf
mov
push
mov
xchg
mov
push
or
ficoms
lds
leave
lcall
push
xchg
into
dec
pushl
push
sub
inc
out
mov
int3
dec
int
sti
xchg
dec
push
ret
sub
aad
cmc
cwtl
lds
in
movsl
jle
mov
pop
xchg
mov
sbb
jecxz
xchg
inc
cmp
das
rcr
and
sbb
insl
mov
js
dec
jle
sub
add
dec
insl
inc
dec
push
clc
repz
dec
out
es
cmpsl
fld
jo
xchg
into
push
int
add
pop
les
pop
xchg
test
cltd
inc
add
jae
and
dec
lods
iret
inc
dec
insl
cmp
lds
rolb
cmc
xchg
mov
xchg
or
sub
ljmp
int
testl
pop
add
sbb
push
popf
jae
pop
andb
mov
pop
dec
mov
add
dec
xchg
pop
stos
inc
jnp
in
jb
test
pop
xchg
adc
jb
icebp
adc
xchg
in
lods
mov
xor
aaa
push
scas
lods
mov
sub
cmp
insb
mov
test
negb
xchg
push
sub
ret
adc
mov
push
das
jne
mov
fs
sub
ja
mov
fldt
adc
in
push
push
mov
xor
inc
mov
popa
adc
int3
dec
xchg
fwait
jns
lcall
mov
int
add
push
xorb
xor
sub
inc
ja
notb
daa
sti
test
dec
sub
popf
pop
sub
lods
pop
mov
add
lcall
and
les
adc
sbb
xchg
add
or
sub
outsl
jecxz
das
enter
add
mov
movsl
cltd
sub
pusha
jge
decb
je
push
adc
jnp
jmp
sub
adc
adc
pop
push
mov
or
and
xchg
cmp
or
negl
mov
loope
xor
sub
mov
jno
mov
rorl
push
jno
mov
push
jmp
repnz
aas
cmp
lret
js
into
into
popf
jmp
outsl
add
inc
xor
loopne
out
jg
mov
adc
andl
repz
inc
idiv
stc
out
xor
movsl
arpl
pop
and
nop
pop
loopne
mov
loop
ret
push
mov
jl
ret
insb
adc
dec
ja
add
pop
jmp
jecxz
xchg
mov
and
xor
arpl
bound
mov
call
cmp
cli
push
cmpsl
pop
iret
js
daa
xor
mov
sbb
xchg
scas
push
lcall
xchg
popf
scas
rolb
sub
filds
push
and
sub
cmp
ds
xchg
call
push
mov
or
ja
or
pop
adcl
sbb
push
mov
imul
icebp
and
inc
mov
cltd
stc
mov
clc
mov
popf
repnz
cmp
xchg
imul
hlt
mov
stos
jmp
mov
pop
roll
pop
bound
xor
cmp
iret
stos
adc
cwtl
ret
out
inc
dec
ss
cmp
nop
mov
mov
in
jae
push
inc
xchg
mov
pop
cmp
mov
push
addr16
mov
xchg
dec
jo
idiv
jg
ds
push
push
std
mov
sub
xchg
and
cs
jp
fsubr
or
loop
icebp
xchg
and
add
test
add
mov
mov
cmp
insb
inc
fs
in
test
sbb
jnp
lahf
cld
push
arpl
cmp
jae
xor
adc
jbe
insl
jp
mov
mov
insl
ja
push
cmp
je
stos
ficoml
pop
adcl
pushf
dec
inc
iret
pop
sub
inc
clc
sub
cltd
pop
cmc
mov
sbb
and
jno
jno
sahf
mov
fucomip
outsb
scas
cwtl
mov
cmp
out
push
bound
push
inc
jns
int3
in
daa
decb
or
int
outsl
or
jns
das
int3
ret
sbb
lcall
int
das
push
xchg
adc
lcall
dec
mov
test
pusha
and
or
and
mov
mov
faddp
inc
sbb
lcall
outsl
jns
lahf
std
add
mov
insb
lods
mov
sbb
lret
push
xlat
add
pop
in
sbb
shlb
fcmovu
test
push
add
out
iret
xlat
sub
je
int3
or
sub
addb
sbb
pop
test
or
mov
sub
mov
clc
mov
mov
jmp
rol
xor
jno
stos
call
adc
xorl
jmp
sub
pop
jo
jne
test
xchg
enter
and
jo
fs
pusha
fwait
pop
push
mov
sub
in
jns
sti
movsb
in
xor
xchg
dec
into
sahf
sbb
pop
pop
shl
ret
xor
dec
jno
cmp
aaa
dec
dec
mov
aam
pop
cmp
jl
dec
cmp
cmp
mov
sbb
ljmp
and
lods
mov
add
inc
cld
xor
into
mov
or
leave
push
push
sbb
inc
sbb
cmpsb
cmp
or
lcall
jnp
sahf
xor
and
mov
push
int3
mov
jno
adc
mov
and
and
movsl
jecxz
sub
loop
enter
jb
mov
inc
bsr
out
sub
pop
scas
sahf
mov
call
mov
out
push
jecxz
dec
loope
roll
and
mov
push
ret
ds
pop
sbb
adcl
jle
les
mov
mov
in
in
jp
mov
mov
mov
bnd
fsubrs
enter
sti
ret
imul
aad
adc
fdivs
sbb
push
pusha
das
mov
sbb
ret
push
js
xor
cmpsl
movsb
out
leave
xchg
movsb
out
mov
jle
mov
movsl
adc
sub
dec
lcall
cli
pop
add
leave
out
xor
pop
jecxz
mov
out
sub
jnp
clc
divb
sti
out
insl
into
xor
sbb
ffreep
ret
xchg
hlt
mov
ljmp
adc
push
enter
push
push
rorl
loope
push
fs
leave
aaa
mov
push
push
scas
loope
jne
cmp
and
dec
push
shlb
daa
bnd
sbbl
xchg
mov
mov
and
das
in
push
test
cld
sub
pop
fnstsw
cmp
mov
mov
aam
inc
ror
stc
and
leave
mov
inc
dec
xchg
push
call
ret
inc
fldcw
shl
arpl
lret
sbb
xchg
xor
jg
jle
mov
repz
sub
xor
jmp
cld
add
inc
pop
or
lods
adc
xlat
ds
test
inc
das
test
xor
fs
push
gs
push
pop
push
out
dec
loop
clc
adc
mov
mov
push
lock
scas
int3
push
sarb
test
xchg
addr16
xor
pushf
in
ficoml
pop
pop
sbb
xor
stos
mov
xchg
std
lods
inc
out
add
add
and
push
jae
cmpsl
pop
jo
xchg
jecxz
movsb
xchg
pop
adc
push
add
cmpsb
addr16
arpl
pop
cmp
dec
sarl
out
mov
lock
inc
sub
xor
and
and
bound
test
call
inc
cmpl
int
jge
jmp
fdivrl
in
std
pop
or
and
sbb
add
fwait
mov
dec
fdiv
jae
push
pop
sub
cmpsb
ret
sbb
and
xlat
ss
mov
inc
or
mov
sub
push
out
or
stos
lret
cmp
negl
xor
ret
sub
cmc
mov
and
cmp
mov
sbb
mov
cmpsl
mov
sub
rolb
jg
sub
in
push
push
lcall
lods
cmc
mov
inc
sub
test
shl
and
or
in
cli
add
popf
movsl
and
mov
std
sarb
orl
inc
inc
pop
push
cmc
mov
incl
xor
inc
in
ror
lret
xchg
leave
sbb
fdivp
jns
push
or
arpl
dec
pop
cmp
and
pop
push
inc
or
sti
int3
mov
sarl
cltd
fs
mov
adc
int3
or
call
clc
ss
int
aas
xchg
xor
dec
sub
sub
insb
xor
adc
movsl
mov
push
jmp
icebp
lods
repnz
and
push
test
mov
es
pop
lcall
in
pop
divb
iret
les
jno
or
dec
add
xor
and
outsl
sbb
loope
add
dec
sbb
cmp
movsb
sub
push
push
push
fidivrl
jnp
das
push
jge
add
adc
aad
outsl
xchg
jno
push
je,pt
aam
sahf
mov
inc
ret
rol
push
lods
cld
lahf
xchg
and
daa
dec
add
fs
fsubp
pop
adc
mov
dec
stc
or
sbb
push
jg
es
filds
in
sahf
les
inc
fistpl
inc
sbb
ds
mov
fistl
sbb
scas
cmp
stos
into
sbb
out
shrb
push
mov
enter
movsl
dec
bound
and
jnp
pop
daa
test
and
pop
jbe
cmp
imul
subl
jbe
and
rcrb
jnp
mov
pop
mov
cltd
jmp
adc
jecxz
clc
aam
out
pop
push
cmc
cmp
and
inc
stos
lret
cmp
notl
mov
fidivs
inc
negl
cmpsl
xor
mov
push
sub
aam
jle
int3
mov
loope
addr16
addr16
sti
fdecstp
xor
and
adc
mov
cmp
decb
repnz
lods
in
cmc
js
inc
dec
and
fucomi
mov
in
inc
fucom
jb
cld
mov
dec
sbb
push
jp
jb
sti
iretw
or
push
push
mov
and
pushl
push
out
aaa
and
mov
ret
push
ds
repz
mov
cltd
lods
sub
testl
into
push
and
pop
sbb
add
nop
dec
pop
hlt
fwait
cmp
push
sbb
inc
stos
mov
jl
sub
loop
fstpt
fdiv
aad
repnz
add
loopne
adc
ljmp
cmp
or
dec
pop
jecxz
hlt
aas
ficoml
aad
adc
cltd
cld
push
imulb
jp
inc
mov
cmp
jle
xor
mov
dec
mov
jns
xlat
sbb
pop
loope
xchg
sbb
imul
jg
sub
les
push
stos
push
mov
flds
fs
xor
mov
dec
xorl
mov
repz
push
xchg
std
int
push
sbb
cmp
gs
mov
enter
nop
or
movsb
pop
rcrb
mov
ret
adc
shll
pop
fsubr
ret
fcmovnbe
ret
ja
in
out
out
aas
push
shll
dec
imul
in
insl
sbb
ds
mov
mov
jnp
add
ss
cmp
mov
dec
fcoml
adc
fmull
scas
jnp
out
int3
dec
pop
xchg
subl
movsb
clc
xchg
mov
loop
cmp
fldt
sbb
lea
add
nopl
xor
movsb
sbb
xchg
stos
rcrl
mov
sub
sti
test
push
lret
gs
test
testl
pop
mov
mov
lods
pop
aaa
rcll
out
fistl
xor
add
int
aaa
shl
push
sbb
lcallw
stos
sub
mov
pop
xchg
and
sahf
mov
ficoml
mov
push
add
xchg
jb
or
mov
add
cmp
je
inc
adc
mov
sahf
xor
dec
sahf
adc
pushf
add
call
scas
out
cmp
mov
aam
das
punpcklbw
lret
jg
pusha
adc
lcall
jns
divl
rorb
stc
cmp
xor
add
fisubl
iret
ror
enter
gs
or
popf
jecxz
cld
adc
inc
sbbb
xchg
mov
push
push
pop
dec
enter
push
hlt
dec
mov
icebp
xrelease
xor
out
jge
sbb
push
jmp
cmc
xor
push
cmc
aaa
ss
inc
xchg
add
push
and
outsb
shlb
pop
push
popl
and
outsb
lea
mov
aad
add
outsl
mov
sbb
lods
arpl
movsb
push
push
daa
in
mov
sub
enter
mov
inc
rorb
jmp
inc
leave
ret
test
mov
push
cmpsl
sbb
jae
addr16
xchg
add
xor
sti
mov
pop
stc
mov
sti
xlat
push
mov
out
add
xchg
ret
add
repnz
adc
mov
jns
loop
mov
cli
xchg
outsl
inc
xchg
ja
sub
addl
mov
cmp
xor
jo
daa
lods
xchg
add
bound
pop
cmp
pop
out
ret
imul
jo
pop
fs
lret
jl
js
sbb
mov
dec
or
xor
movsl
xor
in
stc
in
mov
addr16
in
lcall
push
xchg
sbb
or
fisttps
xchg
lock
sbb
and
fnstcw
mov
cmpsb
sbb
adc
mov
mov
pop
xchg
push
push
test
sub
ret
push
stc
mov
jp
outsl
mov
aaa
mov
sti
pop
std
pop
in
adc
jl
dec
fs
nop
lods
loopne
jae
lods
mov
bound
nop
dec
sub
pop
icebp
xchg
push
mov
mov
adc
ret
inc
push
fcmovb
xor
cld
mov
lds
ret
stc
insb
lea
lods
les
cmc
lret
fnsave
inc
aas
cs
or
xchg
popf
add
pop
adc
and
and
cmpsl
mov
pop
call
divb
bound
cwtl
test
jle
xchg
mov
inc
cmpsb
cmp
push
adc
pop
fwait
cld
pop
dec
fcomp
mov
ja
mov
cmp
scas
xor
fmuls
dec
xchg
es
gs
lret
dec
pop
lea
pop
les
sbb
inc
leave
pushf
jmp
divb
imul
daa
pop
lds
sbb
sbb
xchg
pop
push
in
adc
sub
lods
je
lret
pop
aad
jmp
dec
cmp
mov
repz
ja
daa
into
add
sbb
mov
mov
shrl
ds
dec
mov
mov
bound
or
mov
mov
sbb
adc
pop
jle
or
negl
inc
dec
add
js
or
popf
sub
adc
or
xchg
ret
call
sti
inc
mov
inc
stc
fldl
or
xor
xor
dec
sub
lods
fs
aam
out
sub
sti
add
aam
in
scas
test
push
loop
ja
xchg
or
es
mov
fisttps
sub
movsb
push
mov
cmc
addl
xor
outsb
cld
test
fisttpl
add
pop
inc
test
xchg
addr16
mov
aaa
pop
cmpsb
outsb
lods
stos
xchg
pop
add
ljmp
inc
das
loope
add
add
enter
jb
popf
jle
out
or
cli
mov
lods
push
mov
pop
mov
jmp
dec
mov
xor
push
xchg
push
cmp
fiadds
mov
aad
mov
stc
iret
cmp
jb
imul
in
rcr
mov
cmp
aad
out
and
push
mov
xchg
jmp
addr16
inc
mov
cmc
aam
movsl
out
scas
fdiv
nop
inc
mov
ds
dec
fnsave
add
and
imul
and
dec
cmp
and
in
push
pop
dec
mov
lret
ror
popf
stos
inc
adc
in
ret
mov
xchg
cli
sub
jl
bound
dec
push
das
pop
and
test
xchg
in
mov
movsl
pushf
fucomp
jnp
dec
nop
push
outsb
xchg
or
test
mov
lds
in
pop
inc
xchg
mov
enter
scas
pop
movsl
repz
loopne
pop
fwait
mov
ds
aaa
xsaves
sbb
jp
lods
adc
xor
insl
lock
and
mov
das
push
iret
sahf
sub
out
pop
repnz
mov
out
xor
pushf
dec
mov
add
mov
jno
push
clc
ret
outsb
xor
fdivl
inc
inc
jbe
movsb
lock
mov
out
rcll
pop
dec
ljmp
mov
mov
stc
mov
popa
jg
inc
clc
xchg
inc
pop
mov
fstps
arpl
test
cmpsb
xor
cltd
imul
jmp
dec
push
mov
mov
sbb
testl
stc
in
jecxz
bound
sbb
jl
jae
ficoms
inc
jns
fs
xchg
scas
cwtl
cmp
pop
xchg
pop
sarb
mov
dec
xor
pop
or
mov
pop
inc
notb
push
imul
scas
or
sub
xchg
sub
fs
add
xchg
cmpsb
pop
sahf
popa
mov
push
push
add
jmp
ljmp
adc
sbb
and
cmp
pop
jo
and
mov
test
nop
cmp
jp
mov
inc
sub
int
mov
cmc
or
dec
sub
stos
mov
popl
adcb
inc
xchg
lea
cltd
mov
jo
inc
mov
xchg
pop
inc
pop
lcall
cmp
sbb
mov
pop
test
dec
adc
ret
in
sbb
arpl
repnz
add
sub
push
xor
jno
pop
jle
inc
aas
cwtl
outsl
les
bnd
or
das
sbb
mov
push
dec
cli
popf
scas
and
sbb
in
mov
dec
jmp
mov
mov
test
testl
mov
shll
int3
imul
in
stc
mov
int3
je
movsb
outsb
arpl
bnd
mov
and
bound
mov
mov
mov
ret
push
push
out
sarb
mov
xchg
out
fwait
call
mov
adc
pop
fnsave
lea
gs
arpl
cli
or
stc
dec
imull
daa
pop
aam
mov
outsb
fisttps
mov
mov
push
adc
mov
cmpsl
and
daa
insb
setb
and
aam
dec
mov
xor
jo
rorl
xchg
xchg
repnz
pop
mov
inc
jnp
loope
sub
sti
mov
jae
cmp
shll
mov
jns
fldl
pop
pusha
nop
xlat
scas
pop
lods
and
insl
cmp
pushf
das
aad
dec
push
adc
add
repz
ljmp
or
aas
test
cmp
mov
stc
outsb
nop
lcall
xchg
out
repnz
or
lcall
or
mov
std
xchg
sbb
jo
scas
xor
pop
cmp
push
rorl
jo
inc
cli
imul
shll
in
and
out
cli
push
in
jle
jns
cmpsb
sti
dec
pop
outsl
enter
push
jmp
hlt
add
mov
pop
les
repz
repz
ret
sahf
push
sub
lcall
pop
cmpsl
sub
addr16
sbb
xchg
mov
add
repz
or
test
cli
xor
leave
or
je
jg
xchg
adc
mulb
std
mov
loopne
pusha
mov
add
add
cld
sub
and
xorl
xor
mov
bnd
mov
insl
fstpl
adc
aaa
mov
mov
push
mov
push
mov
out
inc
outsl
xor
xchg
adc
or
or
jge
pushf
imul
mov
pandn
cs
add
dec
lods
inc
jne
bound
gs
xchg
lock
or
jnp
ret
loop
sub
cli
push
jns
in
lret
iret
fsubrs
pop
sahf
mov
pop
fsubs
cmp
sub
inc
pop
stc
test
lcall
adc
fcoml
xor
std
cld
pushf
in
pushf
adc
test
mov
dec
sbb
test
fldt
xchg
shrb
test
jns
sub
aas
mov
push
int3
test
out
add
out
jno
mov
loope
scas
push
mov
pop
add
jle
imul
mov
mov
mov
testb
les
and
inc
push
rep
and
hlt
aad
pop
or
dec
je
or
orb
les
aam
cmp
in
loop
pop
jecxz
outsl
loope
or
add
enter
jns
movsb
xchg
movsb
inc
mulb
out
xorb
aas
cmpsl
fwait
hlt
inc
ds
pop
and
scas
out
out
mov
addr16
mov
or
pop
adc
cwtl
sar
mov
push
push
test
sbb
add
bound
lcall
leave
repz
js
jmp
ds
or
daa
xchg
repnz
mov
leave
inc
fsubrp
jo
mov
sbb
mov
dec
dec
xchg
add
test
mov
add
sub
mov
xor
add
repz
and
jb
cmp
rol
jle
fstps
mov
jecxz
movb
mov
sub
sbb
popf
fmull
sbb
add
popf
out
adc
inc
icebp
mov
sub
xor
insl
rolb
sub
pop
inc
pushf
mov
es
insb
xchg
sub
loop
insl
fstpl
stc
jp
push
imul
test
and
aad
jg
cwtl
push
iret
subl
ljmp
mov
dec
es
fisttpl
jg
jbe
jecxz
in
lock
out
push
push
mov
and
jb
mov
mov
aaa
out
lds
push
in
ss
cmp
jmp
stos
pop
out
and
or
push
fnstenv
insb
add
ljmp
or
xor
push
fnstcw
mov
fs
ret
sbb
cmp
popa
sub
enter
js
lret
aad
mov
jge
pop
xchg
out
cmc
inc
cmp
dec
jo
push
adc
add
pop
pop
cmp
xchg
std
push
adc
mov
nop
fdivr
or
cmp
sar
cli
mov
inc
jb
movsl
jbe
fwait
cmpsl
ss
push
mov
and
sbb
outsb
mov
cmc
mov
lea
mov
inc
and
repz
jbe
adc
inc
fcomp
icebp
jb
int3
dec
pop
add
std
mov
leave
ret
imul
fisttpl
sub
sub
hlt
lods
aam
or
test
dec
jl
fwait
push
dec
mov
dec
or
sub
push
movsb
xchg
push
fisubrs
sub
mov
xchg
sub
negb
cld
mov
push
mov
popa
add
andb
dec
mov
in
adc
sbb
pop
jns
roll
mov
xor
lcall
cmp
repnz
jge
fisubl
dec
into
or
push
xor
mov
jmp
sbb
pop
fstpt
cmp
and
push
fisubrs
iret
iret
fsubl
sbb
sub
lods
ja
pop
orb
out
jno
push
or
pop
dec
pushf
xchg
loop
sahf
and
stos
leave
addr16
andl
fisubrs
sub
and
sbb
int3
inc
inc
inc
movsl
pop
push
and
int
cmp
aad
sub
adc
cmp
push
popa
idivb
xor
mov
xor
pushf
cmc
mov
push
dec
into
jmp
or
jae
lods
loopne
or
sub
mov
xor
andl
pop
rol
xchg
adc
lods
repnz
das
testl
shll
movsl
sbb
lcall
test
mov
mov
mov
mov
push
aaa
loopne
add
cld
dec
mov
in
div
ja
xchg
sub
sti
mov
addl
aaa
lahf
push
add
flds
enter
je
and
add
fbld
and
les
push
sub
movsl
mov
push
ljmp
mov
repnz
sbb
jl
mov
dec
es
pop
dec
aas
arpl
test
mov
cltd
clc
pop
xor
push
mov
sub
dec
dec
sti
sub
adc
push
ja
mov
lcall
lret
adc
ja
push
lock
adc
mov
lahf
pop
icebp
ja
cmp
adc
or
add
mov
les
sbb
pop
addr16
mov
loop
loope
add
outsb
dec
cltd
andl
mov
inc
loop
testl
and
push
les
adc
push
ljmp
loope
iret
out
hlt
call
sbb
scas
ret
arpl
add
cmp
in
fildll
imul
popf
inc
sbb
scas
xchg
or
bnd
inc
in
cmp
jno
fcmovbe
mov
and
les
movsb
mov
xor
xlat
sub
mov
xchg
out
movsb
or
aam
sub
adc
pop
inc
mov
adc
movsb
dec
cs
insl
mov
mov
in
sub
fadds
xchg
push
lods
movsl
jmp
sbb
pushf
fcompl
sbb
mov
push
push
jmp
cli
push
fwait
or
pop
jns
pop
jg
sti
sbb
out
lock
dec
sbb
add
les
jle
scas
add
inc
push
loope
adc
in
daa
test
inc
test
add
xchg
fs
mov
mov
gs
int
neg
test
inc
cmp
mov
movsb
in
aam
loopne
add
pop
loopne
out
xchg
adc
aaa
and
inc
data16
jge
lret
xchg
jle
mov
aaa
mov
loopne
mov
cmp
ret
inc
sbb
cmpl
out
xchg
cmp
roll
inc
aad
mov
pusha
jecxz
out
xor
inc
sbb
fsubl
xor
jne
and
test
pop
mov
add
or
mov
jno
ffreep
lock
mov
mov
in
loopne
push
les
cwtl
das
adc
xor
shlb
mov
sub
gs
dec
and
mov
js
frstor
pusha
xor
xchg
or
mov
ljmp
cmp
insb
mov
cmp
in
push
xchg
sub
shlb
sti
sub
pop
mov
lret
jp
dec
scas
xchg
sbb
in
jmp
cs
xchg
adc
shrb
xor
add
shrl
das
fwait
ret
pop
les
insb
mov
adc
fisubl
mov
movsb
push
mov
les
mov
xchg
pop
mov
and
or
cmp
push
cmp
ret
mov
pushf
xor
jno
push
lret
std
push
fcmovbe
inc
inc
clc
mov
arpl
in
fsubrs
outsl
loope
iret
cltd
pop
insl
mov
and
mov
mov
pop
xchg
lods
inc
sub
xchg
in
rcll
mov
jle
pop
iret
cld
sbbb
xor
mov
test
sub
cmpsb
xchg
dec
inc
les
sub
int
sub
cmovnp
out
cmp
lock
aas
das
aam
repnz
add
mov
scas
adc
or
inc
jmp
mov
jmp
and
mov
sub
xlat
or
lods
jne
sub
xorl
cmpsb
dec
jbe
dec
push
mov
out
lcall
in
mov
mov
outsb
xchg
dec
jg
stos
xchg
leave
xchg
sbb
add
outsl
adc
mov
pop
sub
mov
loope
dec
outsb
icebp
ret
jmp
lods
mov
movsb
pop
sub
stc
sbb
xlat
das
jmp
cld
jecxz
outsl
cmp
mov
ds
mov
jge
fadd
inc
les
pop
or
ss
sbb
cld
cmpsl
iret
push
aaa
pop
or
and
inc
pop
or
add
loope
sahf
pop
lahf
aaa
loop
shrl
sti
shll
push
scas
movsb
out
js
scas
mov
imul
cmp
or
jge
and
sub
inc
push
bound
imulb
out
lcall
cld
and
arpl
out
mov
inc
aad
aam
push
pop
popf
mov
xorb
xchg
push
lods
stc
xchg
pop
nop
orb
and
pop
imul
mov
mov
dec
xlat
pop
jmp
mov
test
jne
jne
aaa
cmp
ror
scas
daa
mov
mov
cmp
jb
cmp
xchg
js
pop
push
and
push
cs
je
dec
sahf
jbe
test
dec
out
push
and
mov
mov
cwtl
stos
filds
jle
test
jne
mov
adc
xchg
inc
jp
cmpsb
sub
add
add
cmpsl
shl
loop
pop
jle
movsl
icebp
test
test
ljmp
lds
jns
sbb
jmp
xchg
in
add
pop
fcomps
dec
cltd
hlt
and
js
and
inc
jge
inc
adc
xor
jbe
push
mov
rcl
in
nop
pushf
ficompl
rclb
adc
pop
dec
add
sti
jns
or
data16
iret
fdivrl
pop
dec
fcompl
sub
shll
push
nop
pop
mov
pop
lods
mov
mov
sub
pop
call
dec
jb
jae
mov
add
aas
add
xor
cmp
mov
fldpi
xor
gs
and
fwait
push
sbb
ljmp
lret
mov
cmp
clc
lods
aam
sarb
mov
add
jmp
pop
adc
xor
aaa
sub
cmp
adc
and
cmp
sbb
and
addr16
add
loope
inc
insb
or
imul
clc
mov
or
jle
dec
mov
movsb
mov
or
xor
add
imul
adc
mov
frstor
xor
adc
cs
lret
push
push
int3
loopne
mov
stos
in
in
dec
xchg
xor
dec
xchg
jns
jle
add
jns
bound
and
in
icebp
roll
add
je
or
pop
rcl
das
push
jno
dec
pop
js
xlat
and
sub
iret
inc
subb
xor
inc
andl
repz
dec
mov
mov
imul
mov
jg
mov
popf
dec
test
and
fadd
iret
jmp
in
out
imul
clc
es
add
jp
pop
mov
cmp
stos
pop
push
push
xor
xchg
jmp
xor
add
mov
xchg
inc
adc
mov
imul
jb
ret
pop
pop
loop
xor
stos
mov
pop
xor
sub
stos
jge
in
pop
dec
jns
lods
hlt
idiv
pop
insb
xchg
xchg
mov
cltd
jnp
inc
pop
lods
inc
stc
mov
cmp
add
xchg
insl
pop
push
pcmpeqb
je
mov
jbe
cmp
cmp
cmpsl
popf
sbb
mov
cmpsl
mov
into
mov
orl
sbbl
lods
scas
fistps
pop
sar
lea
mov
mov
and
xchg
push
outsb
jne
and
adc
bound
inc
inc
inc
jns
inc
mov
sbb
inc
or
hlt
xchg
jne
or
sub
sti
lods
insl
movsl
inc
mov
pop
je
jnp
out
pop
ja
ss
mov
adc
jns
shlb
lods
sbbb
andl
test
sbb
lock
jno
aas
sbbl
aad
aad
jb
out
push
add
lret
jmp
rcll
es
fs
cmpb
sbb
dec
fs
cli
or
jp
or
insl
mov
jge
dec
mov
xchg
adcl
cld
movsb
add
mov
push
int3
sbbl
xchg
add
mov
mov
jmp
mov
aas
mov
in
fcom
cli
xchg
jmp
xchg
push
xor
push
cmp
jae
xlat
int
into
mov
aaa
or
jle
insl
sbb
fdecstp
mov
movsb
add
sbb
jno
cmp
pop
repz
xchg
icebp
mov
push
xchg
cmpsb
idivl
jne
xchg
movsb
lea
pop
pop
test
cmc
add
out
dec
dec
sti
out
xor
sub
ret
mov
inc
lret
xor
loopne
test
test
xor
jl
mov
test
cmp
mov
lods
mov
lahf
xor
fstps
xchg
inc
jne
mov
pop
mov
imul
fdivr
push
lea
ljmp
sbb
jae
mov
aad
or
mov
dec
in
out
dec
sbb
fbstp
out
and
test
scas
pop
jo
inc
subl
pop
hlt
mov
jne
neg
dec
insl
mov
jbe
cmp
pop
sbbb
mov
push
pop
adc
cmp
js
mov
pop
stos
stos
jmp
ja
cmp
xlat
sti
loop
jl
scas
inc
roll
lds
xchg
inc
addb
sub
mov
cmpsl
jae
push
push
sbb
ja
mov
nop
cmp
cwtl
fs
div
or
sub
out
dec
jb
insb
call
xchg
movsl
xor
sbb
jmp
repnz
shlb
in
and
adc
pop
pop
lods
jnp
cmp
cmp
jbe
cltd
sbb
or
jge
inc
cmp
addr16
popf
fsubl
jle
inc
dec
jg
jns
xchg
repnz
sar
loope
fwait
sbb
shrl
or
mov
push
push
popf
cwtl
fdivs
jnp
pop
loopne
pop
cli
jg
sub
or
imul
cltd
and
sahf
push
jae
test
mov
adc
stc
xchg
inc
xchg
lods
lret
or
jl
daa
xchg
stc
sbb
inc
fstpl
lds
stos
movsb
pop
xchg
arpl
mov
sbb
cwtl
adc
popf
adc
mov
dec
jecxz
fmull
mov
lret
sbb
dec
xchg
sbb
dec
mov
jg
pop
es
test
outsl
xchg
sbb
sbb
sbb
push
lea
mov
gs
popa
stos
cmp
stc
cmp
and
loope
inc
icebp
mov
xchg
or
dec
lret
and
cmpl
or
outsl
lahf
pop
jmp
push
jo
fistl
jge
gs
out
xchg
cwtl
mov
or
xchg
es
or
sti
sbb
xchg
int3
aas
stos
pop
iret
lret
sbb
pop
cli
push
mov
cmp
dec
sub
lock
xchg
jecxz
gs
push
jp
movsb
jmp
cltd
rcll
inc
sti
out
nop
cltd
sub
lods
repz
dec
sbb
push
cmp
dec
cwtl
stos
lock
cs
rcrb
fistps
jno
test
gs
imul
in
ljmp
repz
shr
jo
dec
inc
jo
jg
cmp
adc
lcall
outsl
mov
popa
lahf
icebp
pop
test
inc
fiaddl
push
xchg
enter
lea
sbb
xor
out
orb
sbb
in
stos
andl
push
xchg
sub
sbb
ja
scas
xchg
mov
sahf
leave
in
movsl
and
jae
add
add
dec
push
dec
mov
fadds
xor
into
mov
or
and
or
popf
ja
outsl
jp
mov
pop
mov
push
out
ljmp
arpl
pushf
int3
xchg
jnp
shrl
dec
inc
mov
shll
roll
popf
mov
mov
jge
popl
bound
xchg
aaa
push
scas
or
cld
cmp
cwtl
jns
add
fld
dec
clc
scas
jmp
push
pushf
fisubrl
icebp
popf
test
repnz
xor
fwait
arpl
add
pusha
inc
or
int3
outsb
pop
movl
adcl
mov
mov
push
fdivs
sbb
loopne
sub
mov
mov
mov
data16
xor
stc
scas
testb
or
inc
push
aas
xchg
out
inc
fmuls
sahf
cltd
cltd
add
mov
mov
mov
daa
scas
xchg
add
pop
push
rol
cmp
clc
mov
loop
sbb
aas
loope
bound
jnp
or
rcrl
sub
mov
into
jle
and
sub
repz
in
xlat
scas
sub
or
push
inc
stc
ror
add
lahf
jle
ds
fs
ljmp
gs
jb
addr16
jno
in
dec
int
addr16
cmp
inc
lds
jl
stc
aaa
js
cli
int
push
fs
outsb
xchg
xor
add
popf
dec
call
push
adc
test
xchg
jmp
push
outsl
or
sub
leave
or
sub
sub
jge
pop
or
dec
ret
cli
mov
in
or
lahf
in
jmp
outsb
rclb
mov
fdivrs
mov
jle
inc
xchg
mov
jg
pop
mov
out
mov
or
cli
test
push
insb
xor
pusha
loopne
inc
je
cld
shll
daa
mov
enter
outsb
pop
and
fs
dec
test
lods
rolb
push
fists
xchg
sbb
xchg
fsubr
xor
gs
and
mov
xor
add
pop
rcrl
sahf
test
adc
repz
pop
or
fistl
ret
jg
fidivrs
orl
adc
out
dec
clc
sub
nop
test
mov
inc
addl
sub
adc
mov
leave
sub
push
jnp
cli
adc
hlt
lret
in
sub
mov
push
or
daa
sub
mov
rep
das
jle
mov
ret
in
xchg
imul
sub
push
add
and
aad
jmp
and
lods
or
push
sahf
adc
push
mov
call
daa
dec
sbb
dec
dec
push
sub
in
xchg
sub
movsb
loop
aas
xor
add
and
or
pop
enter
add
mov
and
jle
jo
in
push
fistps
loopne
and
lds
and
sbb
jno
addl
iret
std
rcrb
daa
cmp
or
mov
sub
es
jns
jns
fdivl
sub
loope
insb
shrl
sbb
mov
jbe
xchg
push
outsb
fcmove
add
bound
lea
add
push
xor
out
cmp
fnstenv
mov
js
mov
jecxz
dec
fdivrp
in
jae
xchg
jnp
shll
inc
pop
add
hlt
repz
mov
int
insl
mov
sbb
lret
sub
lret
xchg
jge
mov
jo
sub
jg
fcmovne
inc
add
xchg
jnp
js
xchg
cltd
repz
or
js
inc
mov
mov
xor
lea
ds
fsubl
push
data16
add
sbb
mull
repz
cld
push
jge
test
push
xor
inc
out
bound
in
into
scas
inc
gs
sub
movsl
mov
adc
push
mov
inc
jb
xchg
sbb
in
cwtl
lret
arpl
shlb
fistpl
test
sarb
cmp
nop
mov
push
xor
cmpsl
hlt
outsb
scas
cmpsl
mov
xor
dec
iret
push
jno
das
sbb
sub
and
cltd
add
jle
scas
dec
in
iret
in
in
cwtl
jle
icebp
adc
mov
push
pop
push
imul
or
out
scas
ds
add
sub
gs
xchg
imul
mov
adc
pop
jmp
and
cmp
mov
cmp
xor
push
mov
gs
out
adc
sti
cmp
pop
scas
adc
cmp
jecxz
into
and
push
xchg
push
cwtl
mov
aam
or
sbb
gs
add
repnz
es
hlt
loop
mov
ljmp
mov
fstl
or
push
insl
movsb
dec
jnp
out
jns,pt
push
int
sub
mov
push
sbb
push
pop
xor
test
mov
bound
test
inc
movsl
fsts
inc
or
repz
int3
adc
push
and
dec
xchg
or
daa
pop
call
push
push
sbb
enter
or
out
insb
push
sub
pop
jae
mov
dec
dec
mov
sub
repz
dec
and
lods
daa
mov
add
mov
repz
mov
fcomip
inc
test
mov
xor
loop
mov
and
pop
mov
test
fwait
mov
jmp
sub
sub
cwtl
xchg
popa
cmp
cmp
or
arpl
movsl
movsb
dec
push
xchg
fimull
sbb
or
pmaxsw
dec
daa
add
jbe
dec
imul
dec
sub
fildl
cmp
fdivs
cmp
fbld
imul
pop
in
andl
and
inc
or
or
mov
test
loop
and
orl
jl
out
push
aaa
and
mov
mov
lea
xor
cmpsl
or
std
fisubl
jg
cmp
xor
cmpsl
cmpsb
stos
cmp
fisttpll
sbbl
mov
dec
dec
popf
and
cmp
iret
push
pop
lahf
inc
or
and
out
js
jl
push
xchg
and
in
inc
popa
push
nop
mov
jbe
add
jb
enter
mov
inc
dec
gs
out
movsb
and
pop
mov
repnz
pop
jmp
jbe
pop
xchg
outsb
imul
jne
xchg
add
mov
sti
cld
adc
jg
dec
data16
hlt
dec
cmpps
push
in
adc
inc
pop
pop
xor
shrl
mov
add
das
xor
pop
ficoml
pop
in
das
push
imul
inc
jle
mov
mov
adc
pop
icebp
push
rolb
adc
push
popa
cmpsl
xor
sbb
fstpl
movsb
les
cmp
nop
fiadds
sub
nop
add
mov
pop
std
imul
jmp
xor
aaa
hlt
jg
cli
mov
ret
cmp
pminsw
loopne
mov
popa
lds
outsb
push
or
add
jmp
push
dec
pop
ret
fimull
jbe
popa
fsubrs
mov
push
addr16
xor
cwtl
or
push
fidivl
cmp
mov
adc
nop
insl
lock
mov
mov
pop
std
or
sub
cmp
inc
sub
clc
dec
jnp
mov
xchg
adc
repnz
dec
ss
mov
enter
test
xlat
popf
add
inc
fwait
push
test
lret
std
push
insl
push
lods
fdivp
xlat
cmp
mov
sub
pop
pop
mov
shlb
lds
sbb
fadds
imul
sub
ss
inc
in
jmpw
scas
bound
push
loope
lcall
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
lcall
inc
sub
add
sbb
xlat
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
lock
mov
in
push
cli
addr16
test
ret
divl
pop
mov
mov
fidivrs
fistpl
nop
lock
nop
xchg
mov
xchg
dec
lods
rcr
adc
sub
addr16
add
dec
imul
push
and
cmp
loopne
mov
into
add
dec
imulb
shlb
loop
ljmp
xor
dec
jo
xor
push
mov
sub
jge
mov
sahf
and
mov
mov
and
pop
imul
add
dec
sub
rorb
mov
or
stos
cmpsb
pop
sti
mov
mov
inc
sub
cmc
rcll
inc
mov
inc
sub
rcrb
push
or
cmpsb
sti
sub
sti
rcrb
inc
icebp
xlat
inc
cmp
aad
inc
mov
inc
sub
rcrb
inc
mov
dec
sub
sbb
sbb
xlat
shrb
mov
sub
rcrb
inc
mov
cmpsb
sti
sub
inc
sbb
xlat
inc
sub
or
adc
inc
sub
mov
sbb
xlat
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
outsb
les
sti
sub
cmc
rcrb
push
mov
inc
cld
lods
cmpsb
sti
das
leave
incb
movaps
sbb
lret
cmpsb
sti
sub
sahf
rcrb
inc
inc
faddl
repnz
sti
sub
cli
rcrb
inc
mov
inc
sub
lock
xlat
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
rcrb
inc
mov
inc
sub
cmc
shlb
inc
mov
inc
sub
add
xchg
loopne
jbe
mov
jp
or
pop
shrl
stos
outsb
out
and
push
or
scas
mov
push
cltd
enter
jb
add
outsl
dec
dec
dec
int3
xchg
cmp
cmp
xchg
out
loopne
push
push
jg
cli
inc
add
jae
dec
xchg
dec
inc
sahf
jbe
insb
push
jl
arpl
pop
xor
lret
incb
push
push
xchg
lret
icebp
mov
dec
insl
insb
xor
insb
cwtl
xchg
sbb
adc
scas
enter
popf
mov
and
mov
in
cmp
cmpsl
ret
add
mov
and
scas
in
or
cmp
xor
negl
stos
and
mov
jbe
inc
test
scas
push
fs
push
pop
imul
in
sbbl
sbb
and
sahf
ljmp
fucom
outsb
dec
jae
in
inc
mov
pop
push
sbbb
inc
repz
mov
addl
and
jmp
out
sbb
pop
xchg
in
pop
pusha
test
ja
cmp
jmp
sub
outsb
sbb
int
xor
cmp
ja
loope
rcrl
mov
orl
jbe
push
std
subb
in
jge
and
mov
adc
mov
cli
repnz
jmp
mov
add
xchg
push
adc
push
iret
pop
push
and
and
testb
enter
das
bound
pop
push
push
js
sbb
mov
lock
stos
push
lods
jecxz
icebp
sbb
cmp
sbb
cmc
fnstsw
xchg
push
fisubrl
andl
push
aam
fsub
imul
cmpxchg8b
leave
mov
jae
mov
fcoms
pop
fcomps
aad
lret
mov
pop
push
cmc
adc
xchg
stos
mov
xchg
je
inc
lahf
ja
mov
std
aam
adc
test
cmpsl
fstl
out
mov
inc
jecxz
xchg
inc
jle
stos
movsb
mov
jge
das
mov
adc
pop
jae
aas
movsl
scas
mov
arpl
cmp
imul
jl
lock
fstpl
es
stos
mov
mov
push
jmp
fcmove
fs
fmuls
pop
and
xor
sti
repnz
sbb
mov
mov
dec
adc
mov
cmp
fnstsw
insl
add
cmp
jne
cwtl
lods
rclb
dec
data16
inc
dec
and
dec
jl
push
imul
movsb
jg
ds
lcall
lock
fcoms
aaa
ffreep
adc
out
outsb
es
icebp
cmp
and
push
movsl
lds
mov
lcall
mov
icebp
xor
xor
hlt
out
cmp
and
jmp
out
fmull
sbb
add
jl
sbb
pop
repz
or
bound
popa
leave
xchg
inc
adc
fwait
popf
mov
stos
fsubrl
xchg
nop
sub
les
insb
or
mov
nop
xor
or
mov
mov
xchg
in
push
jbe
cmpsb
or
les
rcrb
repz
les
jae
inc
mov
adc
insb
cli
rolb
bnd
mov
push
mov
jmp
xchg
cmp
imul
and
test
xchg
mov
or
xor
into
jo
mov
aas
in
sub
stos
shr
icebp
fisttpll
or
sbbb
sbbl
nop
push
dec
cwtl
adcl
out
insl
mov
inc
xlat
add
mov
call
inc
fldl
jo
xchg
jno
xor
jbe
jmp
mov
mov
cld
xor
ja
shrb
or
ret
fucomp
sbb
jmp
lahf
pop
add
icebp
outsb
xchg
or
jb
and
jecxz
push
or
test
push
pushl
fimuls
aas
xchg
xchg
adc
jmp
rclb
inc
mov
pop
inc
mov
push
jecxz
xchg
xchg
shrb
ret
dec
add
rorl
lds
fisubl
mov
mov
out
test
loopne
or
push
and
pop
aas
out
mov
jle
pop
jecxz
and
mull
loop
and
mov
std
xchg
inc
add
xor
inc
adc
ret
and
ja
movsl
jns
rcll
scas
test
daa
cmc
push
push
aad
xor
frstor
fiaddl
jge
xor
jne
inc
push
xchg
jb
push
sbb
adc
push
adc
ret
mov
int3
dec
inc
rolb
push
xchg
xchg
sbb
popf
xor
sti
sub
jecxz
mov
fcmovbe
add
andl
xchg
hlt
pop
repz
mov
cmpsb
mov
and
add
lahf
into
in
push
pop
push
push
mov
xchg
push
jne
sbbb
mov
adc
mov
into
hlt
cmp
sti
cwtl
pop
aaa
sbb
push
arpl
rcrl
fildl
mov
insl
sub
xchg
mov
call
cmp
loopne
lea
enter
movsl
xchg
mov
in
pop
add
or
pop
xchg
dec
inc
cmp
sbb
jo
shrl
push
inc
push
xlat
in
out
push
int3
icebp
xchg
push
sbb
cmp
push
cmp
xor
lock
jecxz
bound
arpl
enter
add
ja
jo
loope
add
lret
or
pcmpgtd
jns
lods
jmp
jle
scas
mov
jbe
data16
pop
das
xchg
dec
mov
cwtl
adc
mov
cmpsb
cs
outsb
subl
cmc
and
mov
push
es
rcll
loope
jns
cmp
sub
mov
loop
pop
mov
or
sub
aas
clc
mov
xchg
stos
mov
push
andb
xchg
js
jecxz
loop
sbb
xor
jp
inc
push
mov
cmp
jecxz
insl
mov
js
pop
or
sbb
mov
cmp
cmc
leave
adc
lret
out
test
inc
adc
mul
inc
pop
cmp
pop
shrl
adc
jae
cmpsb
sbb
lret
mov
mov
test
jne
sbb
fstps
mov
cmp
sub
cwtl
push
ds
jns
in
inc
mov
sub
sub
cmpsl
pop
or
aad
and
mov
lcall
mov
mov
icebp
bound
fldl
cmpsb
pushfw
xchg
popf
das
neg
lock
mov
sar
sbb
cmc
mov
mov
push
fidivs
addr16
fistps
ja
xor
test
xchg
push
addr16
push
cmpsl
outsb
dec
lds
sub
sbb
or
push
add
hlt
cmpsl
xchg
mov
jge
bound
inc
test
mov
pushf
mov
pop
call
mov
lret
insb
push
popa
jecxz
push
or
xchg
leave
xor
cmp
leave
adc
pop
aaa
ljmp
outsl
add
out
cwtl
mov
movsl
pop
xor
sahf
daa
lods
lods
mov
lods
cwtl
lock
popf
ret
push
xor
decl
xor
inc
xor
add
xlat
and
mov
daa
scas
jns
fiaddl
mov
stc
inc
gs
in
xchg
hlt
mov
add
push
popl
and
gs
test
ror
sub
mov
pop
ret
rcrb
xchg
cmp
sbb
cld
or
sub
fstp
mov
fcoml
mov
ss
pop
jns
adcb
cld
adc
ret
mov
sub
call
or
push
push
fdivrs
repz
sti
lock
pop
pop
notb
out
aam
and
pop
scas
mov
push
mov
ret
cmp
jne
inc
ror
jb
insb
test
and
or
into
lahf
movl
xor
xchg
loopne
cld
outsb
push
shlb
push
into
lahf
icebp
hlt
insb
adc
notb
jl
pop
and
lea
push
int
xor
pop
sbb
fwait
out
lret
adc
enter
sti
ret
cltd
cmpsb
and
xchg
mov
mov
cmp
xchg
mov
pop
mov
popa
mov
xchg
xor
sbb
pop
or
cmpsl
dec
sub
mov
sbb
mov
pop
popa
cmp
dec
cmp
ljmp
inc
mov
inc
inc
pop
pop
mov
pushf
lods
xor
jne
xlat
shlb
into
push
fadds
xor
stc
stos
jne
jbe
add
rcrb
jnp
xchg
fldenv
mov
mov
or
sub
xor
jbe
adc
push
bound
mov
and
inc
shll
xchg
xchg
aad
fstpt
ja
incb
jp
xchg
out
mov
int
fwait
loope
dec
dec
out
jge
and
xor
loope
cld
divl
sarl
test
jnp
lahf
lret
aas
lea
mov
add
lcall
cmp
sbb
xlat
inc
adc
xor
sbb
mov
pop
outsl
out
cli
pop
lea
rolb
inc
add
js
les
ljmp
adcb
xchg
sahf
mov
jg
inc
xor
and
xchg
insl
testb
fwait
pop
shrl
jne
ds
cmp
inc
mov
xchg
in
lcall
aad
ds
cmpl
mov
shlb
and
xor
sahf
fs
sahf
add
lods
imul
dec
push
jmp
outsb
sahf
mov
addr16
dec
pop
push
xorl
fidivs
cmp
xlat
sbbl
stos
dec
ret
lock
mov
dec
imul
leave
mul
xor
mov
shlb
out
movsb
cld
xchg
cmp
jmpw
es
cmp
std
frstor
lahf
inc
es
push
rolb
fdiv
popl
xchg
or
outsb
pop
push
mov
adc
cltd
js
cmp
add
in
pushf
fxch
outsl
mov
sti
icebp
rorl
jno
pushf
xchg
mov
sbb
dec
xor
ror
xchg
xor
movsl
pop
inc
or
xchg
inc
push
xlat
inc
scas
fisttpl
mov
sbb
mov
and
add
ror
jmp
cwtl
std
out
mov
das
scas
jmp
xor
iret
cmp
pop
data16
arpl
sbb
push
adc
aam
add
sub
add
das
cli
xor
sub
mov
test
sahf
adc
jl
xlat
mov
andb
xlat
ljmp
xchg
jb
filds
shlb
push
sbb
mov
cwtl
loopne
in
fstps
xor
les
enter
push
or
add
or
loopne
imul
xor
mov
xchg
adcb
push
out
iret
xor
adc
scas
movsb
dec
xor
or
xor
test
xchg
mov
xchg
ficomps
sbb
aam
jl
inc
cmc
mov
jns
repz
mov
outsb
imul
push
mov
mov
cmp
js
cli
lcall
push
enter
jo
fsubrs
pop
mov
add
mov
icebp
sub
neg
adc
add
clc
dec
add
fstps
mov
cmc
outsl
and
test
mov
into
mov
cmp
int3
ret
dec
cmp
cwtl
jae
xchg
xchg
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
