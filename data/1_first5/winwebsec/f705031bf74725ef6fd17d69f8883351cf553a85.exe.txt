cwtl
inc
pop
in
sub
mov
adc
add
xchg
sub
call
outsl
jl
sbb
scas
lcall
mov
leave
stos
mov
lds
xchg
inc
je
sbb
fs
jne
int3
mov
addl
push
out
pop
or
mov
rol
pop
pop
in
and
in
dec
push
rolb
addb
pop
mov
lds
int3
mov
mov
fcoms
lods
xor
xchg
icebp
sbb
into
aad
dec
imul
or
in
lret
lock
xchg
rolb
rep
cwtl
and
xchg
insl
cmp
lods
add
jns
mov
iret
push
mov
dec
jg
cmp
dec
loope
xchg
fcomps
sahf
mov
orl
cltd
incl
pop
rolb
sbb
inc
sub
idivl
stos
pushf
fdivrl
movsl
mov
jmp
inc
lret
mov
push
add
jnp
aaa
xlat
pop
ror
add
xor
lds
pop
add
pop
fs
imul
repz
dec
jge
out
adc
int
std
xor
sub
insl
cmp
jae
mov
scas
mov
les
pusha
push
cs
outsl
icebp
jbe
aaa
sub
sti
out
gs
enter
and
jecxz
mov
test
popa
cmpsb
in
imul
aam
jle
pop
mov
les
fcoms
mov
inc
stc
out
jb
mov
mov
push
or
lahf
js
inc
xor
fldenv
xor
jb
or
movl
adc
scas
xchg
ljmp
fisubrs
lock
test
sub
xor
or
shll
add
xchg
icebp
adc
insb
int
push
sub
jmp
in
jns
jge
pop
mov
xor
insl
addr16
push
jae
icebp
xor
push
pop
nop
xor
and
mov
and
lret
dec
fdivrl
pop
adc
mov
xlat
arpl
jno
or
insl
pop
scas
mov
out
lcall
insl
lods
add
xor
jmp
jne
cwtl
clc
repz
test
push
xchg
mov
outsl
mov
loop
shlb
pop
adc
lret
into
popf
dec
int
ficompl
cmp
mov
or
adc
pop
cltd
jmp
aaa
mov
sbb
adc
jle
inc
out
or
dec
ds
adc
cmp
mov
in
pushf
push
pop
add
xchg
cmp
lods
mov
in
sbb
test
dec
push
popl
pop
lahf
and
in
sbbl
inc
shll
nop
push
mov
iret
xlat
aaa
ljmp
add
lcall
push
repnz
ds
xchg
push
lret
lret
out
sbb
pop
lcall
sub
shl
jbe
ret
dec
mov
and
mov
insl
jecxz
dec
push
fldcw
lea
sbb
jae
xchg
fcompl
loope
mov
inc
pop
mov
lods
mov
and
add
cmp
jno
repz
enter
loope
and
in
pop
movsl
mov
sti
xchg
xchg
stos
ficomps
push
mov
iret
lahf
lock
aaa
in
stc
sbb
adc
imul
cmp
push
jmp
xchg
mov
fdivr
clc
add
sub
addr16
in
daa
loope
sbb
outsb
popf
mov
testb
ret
stos
out
sub
sub
lock
xor
mov
mov
push
mov
into
dec
mov
insb
lret
xchg
ffreep
ret
scas
push
pop
mov
jns
push
roll
in
lds
imul
mov
aad
jns
xor
adc
mov
mov
adc
pop
cwtl
add
stos
std
clc
dec
add
xor
fsubrp
mov
pop
cmp
jo
sub
cwtl
sub
sbb
ret
push
adc
jp
cmp
mov
inc
in
pop
sub
leave
jno
and
lods
js
scas
daa
stc
lea
adc
iret
lret
adc
aad
addr16
xchg
mov
lea
test
cs
mov
into
iret
xchg
enter
xchg
jl
out
xchg
inc
shrl
test
in
ljmp
adc
jg
lods
out
mov
into
xor
movsl
in
les
stos
pop
dec
mov
add
sahf
dec
add
popf
cmp
sub
sub
and
js
shlb
mov
pop
in
jp
outsb
lahf
dec
pop
fsubr
mov
or
add
nop
mov
pushf
cwtl
jno
cwtl
jbe
iret
dec
addr16
xor
out
fnstcw
loope
repnz
cmp
jb
sbb
jnp
ss
xor
mov
jle
mov
jno
sbb
or
test
icebp
call
sbb
dec
cmp
pop
pop
sbb
mov
push
cmp
stos
inc
leave
sbb
mov
jns
outsl
pop
push
pop
fistl
lea
cmpsl
mov
mov
lcall
sbb
pop
inc
sbb
pop
insl
loope
sub
cmpsl
mov
loop
xchg
out
lret
andl
lea
test
inc
or
jle
fsts
sarl
loopne
js
and
out
push
ds
flds
dec
lods
test
dec
js
cltd
sub
ficoml
cmpb
movsl
sub
xchg
and
adc
cmp
andb
lods
mov
aad
xchg
test
add
or
dec
cmp
jo
std
repz
flds
fldt
mov
popa
inc
xlat
loop
mov
cmpsb
test
mov
iret
repnz
jns
xchg
cmp
ret
and
mov
hlt
leave
mov
sub
loopne
lret
hlt
dec
jne
out
sbb
and
pop
mov
rorb
mov
lret
call
dec
mov
ljmp
mov
mov
add
and
sbb
movsl
test
mov
adc
leave
adc
cld
insb
pop
mov
stc
jp
and
cs
mov
pop
stos
xor
jle
out
dec
ljmp
in
xor
shll
out
daa
mov
mov
xchg
clc
aas
xor
in
pop
cmp
mov
jb
cmp
sub
popa
mov
loopne
imul
es
rol
in
fdivl
inc
bound
call
dec
adc
dec
push
sbb
inc
lock
pop
std
cmpsb
adc
cmpsl
outsb
inc
cwtl
jle
or
outsl
stc
ljmp
or
adcb
in
fcoms
mov
jnp
lea
ljmp
data16
jo
std
dec
das
adc
cmpl
inc
mov
lahf
stc
lock
push
jo
sbb
lea
xorl
jp
mov
repnz
or
jbe
push
leave
mov
enter
xchg
xchg
or
out
inc
cli
jp
jb
or
mov
lret
pop
test
out
lods
xor
xlat
jle
inc
sbb
aas
dec
pop
xchg
js
lods
ret
daa
or
mov
dec
mov
lret
dec
pop
and
inc
cmpsl
lock
aas
movsl
xchg
dec
test
cmp
dec
subl
add
adc
xor
cmp
adc
int3
push
jb
add
fisttps
sub
mov
and
jne
jmp
mov
leave
mov
daa
mov
nop
pop
test
add
call
stc
inc
cmp
inc
sub
mov
stc
sbb
arpl
loope
in
cs
scas
aas
lcall
dec
faddl
cmp
xor
mov
cmc
icebp
cmpsl
lods
jb
push
xor
sub
rcr
cmp
into
addr16
movsl
insl
ret
ret
xchg
jl
mov
xor
mov
cmc
mov
cmp
jne
dec
das
and
add
pushl
shrb
ss
push
jns
sahf
dec
xchg
dec
add
inc
sub
xchg
cmp
fs
int3
scas
jb
adc
imul
pop
loopne
mov
rolb
scas
pop
xchg
inc
into
sub
inc
dec
fldcw
fidivrl
addl
icebp
in
aaa
push
mov
pusha
add
xchg
adc
push
ret
or
inc
jns
stos
out
jno
xchg
xchg
rclb
push
in
imul
mov
call
push
out
push
sbb
jle
lock
xor
popf
insl
jb
pop
jo
in
add
cli
or
shlb
cmp
sti
lea
push
fmul
dec
loop
dec
fs
roll
adc
outsl
dec
movsb
movsb
sbb
out
push
insb
lcall
push
mov
dec
inc
cmp
dec
imul
and
movsb
out
push
push
jb
arpl
fmuls
xor
dec
das
cmp
pop
push
lret
jmp
push
push
push
cmpsb
mov
jnp
loopne
mov
lods
mov
mov
dec
sbb
clc
icebp
xchg
popa
sbb
dec
lods
xchg
loope
and
jbe
xchg
mov
mov
imul
pusha
or
lret
cmp
push
fldenv
sub
les
push
sub
pavgw
xor
inc
lret
mov
mov
xor
mov
test
arpl
push
inc
xchg
sbb
jns
mov
insb
sbb
add
jo
dec
add
stos
out
stos
mov
shr
test
dec
cmpsl
push
pop
popf
lds
jmp
mov
sbb
in
mov
std
rorb
addl
dec
or
fildl
es
hlt
fs
aam
adc
adc
fs
or
enter
push
mov
or
cmp
js
xlat
jl
sbb
push
xlat
mov
cmp
mov
ja
xor
xchg
iret
mov
shlb
jg
sarb
adc
push
pop
inc
std
add
add
xchg
fisubl
add
lret
or
pop
xor
shrb
and
xchg
iret
mov
ss
or
test
push
in
ficoms
jbe
push
ljmp
xchg
dec
lcall
orb
addr16
inc
jbe
xchg
and
outsb
das
movsb
test
mov
or
cmc
pop
push
sbbl
push
jb
fsubr
mov
leave
inc
mov
outsl
adc
mov
addr16
aas
fstpl
fs
mov
pop
fiaddl
cld
popf
push
andl
ljmp
lods
lds
sub
jecxz
sbb
jl
mov
adc
repnz
adc
ljmp
cmp
sbb
xchg
clc
or
ja
pop
cmp
cmc
out
js
test
inc
sbb
xlat
into
addb
les
lock
fistpl
loop
xor
loope
test
outsl
out
push
and
leave
mov
loopne
push
inc
adc
add
push
sub
add
mov
cmc
test
xor
pop
mov
push
out
test
or
dec
jnp
rcrb
mov
xchg
imul
mov
scas
fwait
aas
decb
mov
jecxz
sbb
mov
pop
xchg
add
mov
inc
push
mov
xchg
loop
inc
movsl
fwait
sbb
mov
cmpb
popf
mov
push
mov
xchg
and
sbb
enter
jbe
add
dec
je
jae
jp
inc
xchg
repnz
mov
sub
outsl
sub
mov
mov
cmpsb
xor
sbb
lahf
mov
int3
clc
stc
xor
rcrb
add
loop
aaa
push
sbb
popf
or
sub
fistpll
ss
mov
dec
scas
push
outsl
add
pop
push
das
pop
lock
xchg
das
adc
dec
jns
dec
mov
aas
std
jecxz
ljmp
cli
push
cmpsb
mov
cmp
das
enter
rolb
xor
mov
out
adc
aaa
lahf
add
int3
lret
int
push
mov
jbe
xchg
jne
or
push
movsl
or
push
inc
push
lods
daa
scas
sahf
jg
cmp
cmp
sub
repnz
jbe
cmp
test
call
popa
mov
fwait
cwtl
push
loope,pn
std
enter
or
cmc
pushf
mov
test
pop
cmp
add
ret
push
adc
and
or
inc
stc
mov
xor
faddl
mov
enter
pop
iret
mov
pop
or
in
cmp
in
adc
cmp
es
inc
mov
popa
pop
push
nop
mov
cmp
pop
or
in
and
add
mov
test
mov
xchg
pop
cld
and
stos
adc
testl
add
xchg
sbb
lcall
push
mov
les
jb
jbe
rep
sub
xor
fld
cmc
add
loopne
xor
sub
mov
jo
or
inc
pop
fwait
repnz
and
aam
xchg
cmpb
xor
out
push
lock
pop
cmp
in
mov
jb
dec
pop
enter
fcmove
or
mov
xchg
cltd
js
mov
or
and
rol
add
aam
scas
fildl
mov
pop
imul
inc
add
scas
push
gs
mov
mov
lahf
dec
inc
test
addr16
sub
cmpsl
mov
out
mov
test
stc
sahf
xor
test
cmpsb
or
loope
xor
sbb
rol
iret
and
lret
and
xor
jge
xchg
into
cld
xorb
inc
addr16
or
addr16
or
pusha
shll
push
repnz
and
clc
sbb
js
in
xor
mov
enter
mov
jae
scas
aas
sbb
stc
loope
xor
mov
out
jmp
pop
add
mov
int
lea
dec
inc
mov
in
push
mov
outsb
jbe
sub
inc
movsl
je
aas
cmp
lds
dec
mov
inc
aam
add
jecxz
inc
pop
xchg
cmc
inc
fwait
dec
jle
mov
pop
testb
dec
dec
dec
cmp
arpl
inc
in
pop
pop
scas
and
lea
cmpb
xchg
and
jns
jns
xchg
jmp
sub
sbb
inc
add
or
inc
lret
jmp
cmp
lods
setae
inc
loop
sbb
stc
lret
and
fcmovu
push
rorl
inc
cmp
rorb
dec
adc
mov
cs
or
out
sub
movsl
jmp
push
jle
mov
loop
inc
dec
inc
and
sti
or
je
lcall
movups
xor
clc
ret
repnz
aas
push
out
loopne
or
stc
mov
jo
xorb
inc
xor
sbb
fnstcw
int3
ret
lret
nop
push
inc
xor
xor
int3
ret
stc
push
cltd
out
jle
sbb
es
pop
or
sub
pop
in
pusha
xlat
cmpsl
jne
mov
dec
pop
xchg
dec
jg
repz
xor
and
cmp
sbb
jno
mov
push
movsl
aad
ss
iret
pop
test
add
pop
push
jo
repz
lret
xchg
xor
movsl
das
sub
adcb
mov
mov
inc
pusha
jmp
fmul
jb
int
outsl
scas
mov
xor
cmp
push
inc
in
xorl
jns
inc
push
fidivs
push
call
test
and
push
xor
jb
sub
mov
aaa
xchg
cmp
sbb
sub
add
add
dec
rol
fdivl
sub
pop
adc
xchg
lods
sahf
test
push
pop
insb
int
cmpsb
xorb
cmp
nop
jp
xchg
loopne
gs
mov
cmp
and
cld
pop
mov
les
mov
mov
or
loopne
jg
mov
inc
dec
mov
jg
lock
rcrb
cmp
jno
rolb
cld
imul
adc
andb
jae
shrl
out
dec
filds
fscale
rcll
stos
sub
scas
clc
frstpm(287
xlat
and
in
pop
mov
roll
outsb
mov
jg
adc
lods
jmp
int
in
repnz
cmp
xlat
xchg
mov
stos
jge
fbld
mov
int3
and
cmp
pop
ds
fs
scas
pusha
and
sarl
lahf
mov
sbb
pushf
push
sbb
aad
lods
push
roll
jb
mov
xchg
push
pop
test
push
jnp
xchg
scas
jge
and
sbb
lret
fistpl
gs
cltd
jb
mov
jo
test
in
imul
repz
xchg
insl
aaa
mov
lds
loope
pop
enter
adc
adc
and
or
inc
loopne
or
push
movsl
fcmovne
adc
loopne
jae
jns
out
pop
or
iret
and
int
in
sahf
imul
xor
leave
dec
rcrb
mov
arpl
sbb
sahf
cmp
out
mov
cld
mov
cmp
mov
pop
sahf
pop
js
sub
inc
in
dec
adc
in
or
nop
repnz
ja
fmuls
repz
syscall
jns
mov
out
inc
xchg
inc
mov
xchg
xchg
pop
cmc
xchg
lea
in
daa
mov
aad
inc
adc
cltd
cmpsb
push
leave
or
mov
mov
sbb
fidivrl
arpl
mov
or
cmpl
das
cltd
sub
movsl
add
xor
rorb
cmp
mov
outsl
push
sbb
mov
mov
mov
daa
cwtl
ljmp
jle
push
mov
push
out
push
push
xor
dec
or
les
cld
mov
pop
jmp
int3
arpl
popf
sub
scas
imul
aas
xor
mov
mov
cmp
sbb
mov
fdivrl
icebp
mov
je
shlb
clc
sub
jge
adcl
inc
mov
mov
cltd
shrl
jl
in
adc
lods
sbb
out
pop
xor
jmp
push
arpl
test
fs
lret
and
test
ret
push
mov
jns
push
inc
adc
pop
adc
or
inc
inc
cs
dec
call
or
test
lea
xchg
cli
cmp
jg
and
sub
mov
mov
shll
push
xor
inc
aaa
test
cld
push
push
xchg
into
jo
movsb
push
cmc
and
cmp
shlb
out
repz
sti
out
push
andl
mov
xchg
cltd
xchg
cmp
sbb
data16
rclb
mov
mov
or
lahf
push
mov
add
cld
mov
sub
ljmp
lcall
jae
rorl
jge
add
xchg
xor
jae
and
aam
test
xchg
jecxz
mov
adcb
test
std
sub
adc
fldl
int
mov
bound
inc
and
repnz
ljmp
adc
mov
mov
and
call
movsl
or
scas
mov
mov
fistps
add
xor
fstpl
rolb
mov
push
jge
notl
xchg
mov
pop
pop
mov
imul
sbb
inc
xchg
xor
pop
bound
xor
push
sbb
mov
and
test
ss
xchg
shll
cwtl
pop
stc
add
stos
pop
xlat
insb
inc
xor
or
hlt
xchg
es
xchg
push
addr16
int3
and
fpatan
or
jge
pop
cmp
push
leave
jp
stos
mov
mov
lret
push
cld
mov
pop
dec
fwait
pop
and
sub
addl
jmp
adc
lret
test
mov
stos
mov
mov
into
cltd
gs
mov
div
xor
xor
addl
sbbb
jnp
test
sbb
cld
xor
aam
imul
sarl
mov
pop
push
and
pop
cmp
lret
loope
sbb
and
into
pop
sub
xor
add
cmp
lods
rcrb
mov
pop
aad
lea
pop
push
in
adc
jns
test
shrl
xlat
adc
movsl
jg
aas
xchg
cmpsb
mov
test
xchg
lods
push
xor
popa
sub
daa
mov
inc
inc
jns
jo
call
shll
xlat
sti
mov
mov
outsl
stc
xchg
xchg
loop
imul
xor
shll
pushf
and
je
jne
loop
jb
cltd
aam
lods
add
rolb
test
jnp
pusha
push
fldcw
ljmp
cmpsl
lcall
ja
addb
rcrl
and
adc
add
jne
adc
in
or
pop
or
mov
movsl
inc
fidivs
dec
cmp
pop
ror
mulb
fbstp
pop
sbb
clc
cmp
pop
aam
popa
loope
insl
shlb
stc
pusha
int
lock
fadds
imul
jnp
inc
mov
mov
pop
lods
cltd
call
cmc
outsb
cmp
mov
xchg
into
dec
int3
adc
aam
stos
into
stos
sbb
repz
push
and
push
mov
inc
mov
movsl
sti
arpl
insl
xor
pusha
orb
sbb
pop
int
test
push
push
xor
fwait
xchg
sub
xchg
xchg
mov
jne
jb
idivl
jg
push
xchg
faddl
lods
cld
in
aam
pop
xor
jne
fbstp
adc
xchg
xchg
mov
mov
jg
ds
scas
xchg
cmp
sbb
imul
leave
pop
hlt
or
sbb
cmp
pop
dec
out
jbe
xchg
push
divl
pusha
mov
xor
lret
push
cmp
cmpsl
fs
stos
call
inc
cli
and
sub
shrb
int3
pop
sub
add
sub
lret
add
mov
inc
icebp
jge
scas
inc
pop
xchg
scas
cmc
daa
aad
sarl
aas
and
sbbb
test
jb
dec
push
lret
das
sbb
mov
push
sub
inc
popf
pop
push
jns
pusha
dec
inc
mov
push
andb
xchg
stos
clc
data16
repz
shrb
lea
inc
and
dec
jmp
fbstp
jae
push
mov
loop
in
push
sub
dec
push
out
icebp
xorb
mov
jp
jb
xchg
fwait
push
inc
fs
rcll
xor
arpl
inc
dec
xor
insb
pop
data16
ficoml
fwait
movsl
dec
xchg
sub
sbb
outsl
push
dec
fidivrs
sub
mov
push
add
pop
lock
push
jb
add
mov
in
shll
aas
adc
adc
cwtl
daa
fld1
cmpsl
xchg
mov
mov
fdivrp
jb
or
in
push
adc
test
xor
fldt
pop
adc
lret
push
sub
imul
push
adc
icebp
lock
push
loop
shll
inc
adc
rcll
adc
fstpl
adc
add
adc
mov
jmp
mov
ret
loopne
and
cmp
lock
std
jbe
inc
adcl
cs
push
sub
jp
es
jmp
fwait
out
sbb
lock
mov
dec
jbe
call
lock
or
cmp
mov
push
mov
mov
add
stos
lahf
push
xor
movsb
fistl
addr16
std
aas
insl
clc
mov
xlat
and
pusha
scas
or
push
xor
test
pop
leave
and
or
stos
pop
js
iret
xor
int
or
adc
repnz
shlb
pop
jns
cmp
mov
in
stos
xor
shlb
cmpsl
aam
mov
xchg
adc
repnz
shll
push
xchg
cmp
mov
leave
dec
jbe
inc
cmpsb
cli
dec
arpl
lods
das
sub
sbb
jae
add
sahf
mov
test
adcl
negl
jb
imul
sbb
dec
adc
je
in
test
adc
es
stos
xlat
inc
sti
push
fimull
nop
lods
scas
enter
xchg
xor
mov
in
lret
mov
and
xchg
or
repnz
cmp
loope
cs
mov
sub
cli
stos
loop
push
fisubrs
sbb
test
iret
mov
ss
fidivs
inc
jne
jmp
add
pop
mov
sbb
loopne
xchg
fwait
sti
mov
push
jle
arpl
mov
xor
ficompl
add
cltd
sub
test
stos
into
add
lods
es
test
pop
pushf
ss
mov
roll
sti
je
out
lods
adc
push
lock
cmpsl
lret
sbb
int
ss
scas
fcmovnu
lret
outsb
cmpsb
mov
and
in
xchg
test
pop
jne
rorl
xor
push
ds
cs
mov
mov
sub
outsb
sub
rcrl
cmp
inc
jb
jecxz
or
cwtl
sub
popa
pop
cs
and
imull
aam
add
ret
loop
mov
push
ficoml
mov
cmpsl
push
mov
jl
dec
lods
xor
aas
pop
idiv
push
or
ret
orl
dec
lret
call
fldl
out
stos
and
aaa
mov
fsubl
out
jne
insb
addr16
mov
dec
mov
out
mov
push
rolb
fisubs
or
mov
bound
push
pop
int
shll
cmp
pop
xchg
inc
insl
push
xor
jge
out
ljmp
jle
lds
xchg
aad
jp
pop
movsb
jmp
adc
and
and
xchg
jbe
gs
push
shlb
inc
pop
fs
mov
bound
dec
sub
rorl
jmp
sub
xlat
xor
and
aad
mov
lds
lea
push
mov
rolb
mov
lods
cmp
sahf
push
dec
addr16
aam
push
dec
push
ror
scas
and
inc
addr16
xchg
pop
fstps
add
pop
mov
xchg
das
push
cmp
sti
mov
adc
jge
jo
sbbl
lods
pop
test
sahf
icebp
shrl
ljmp
outsl
out
fidivrs
add
push
pop
outsl
movsl
and
movsl
aaa
aaa
enter
subb
cmpsl
mov
pop
aas
pusha
sub
xor
push
movsl
daa
fists
lahf
dec
enter
inc
pop
pop
ljmp
stos
ficomps
xchg
pop
gs
jno
sbb
add
jl
mov
mov
pop
mov
push
clc
out
cmpsl
js
sub
mov
cld
lahf
aaa
and
xchg
lret
ret
jnp
lret
push
sahf
mov
jo
mov
sub
and
sbb
mov
or
pusha
mov
add
fs
mov
cmp
loope
addr16
and
out
or
mov
cmp
push
dec
dec
ror
pushl
inc
and
fabs
fildl
and
jmp
out
addr16
stos
mov
sbb
xchg
imul
pop
or
repz
xchg
add
or
iret
out
sub
cwtl
pop
lahf
mov
sub
inc
fldl
mov
inc
cmp
add
outsb
lods
and
andb
jl
xchg
arpl
sub
jb
insb
add
pop
fistps
jo
out
insb
into
ja
js
mull
movsl
sti
out
push
es
shrb
adc
push
hlt
out
orb
push
pop
or
jb
es
pusha
lret
cmp
scas
stc
sbb
call
pop
adc
dec
shr
xlat
push
add
js
pop
rcll
mull
or
mov
pop
lds
push
mov
clc
popa
jno
cmpsb
ljmp
and
sub
push
cmp
add
mov
pushf
outsb
xor
pusha
jl
adc
xor
jo
sarl
adc
or
xchg
pop
jo
sbb
pop
xchg
pushf
pop
lret
adc
pop
in
dec
pop
js
mov
cmpsl
mov
xchg
pop
loop
jne
cmp
popa
shll
push
pop
hlt
in
repz
xor
repz
call
in
mov
cmp
sarb
dec
mov
les
adc
or
scas
pushf
lret
dec
and
negl
cli
rcrb
xchg
mov
shrl
imul
bound
sbb
data16
pop
add
sahf
sub
je
int
cmc
adc
sub
dec
xchg
xchg
inc
inc
push
mov
push
addl
lds
or
cwtl
xlat
add
inc
mov
sub
jge
dec
jmp
xchg
sbb
xchg
and
jb
xlat
imul
mov
daa
dec
mov
mov
push
insb
sub
ja
loop
mov
push
xor
loope
xor
cmp
sbb
das
shl
lods
mov
jmp
cmpsl
popf
cmp
pop
loop
cmp
pop
gs
sbb
xorb
ltr
pop
pop
inc
cmc
xor
bound
adc
pop
mov
out
das
call
test
and
ficomps
popf
push
adc
jne
lock
lods
push
inc
mov
xor
test
jl
jae
std
iret
mov
jp
daa
imul
popf
xlat
jbe
test
test
faddl
stos
icebp
sbb
dec
stc
addb
jne
stc
jmp
popa
inc
xor
movsb
sub
cs
push
pop
outsl
mov
xchg
lods
push
push
dec
and
out
xor
stc
fnsave
outsb
mov
lods
xchg
dec
adc
arpl
xor
or
mov
in
stos
cmp
mov
stos
jns
test
mov
sbb
push
sbb
jb
jo
ret
push
cmpb
pop
cwtl
das
lret
pop
test
testl
sti
test
cltd
xchg
and
sub
test
out
shl
mov
stos
mov
stos
mov
cld
mov
jns
mov
stos
push
cmpsl
and
lods
aad
adc
mov
pop
nop
out
popf
sub
pusha
mov
dec
aaa
sbb
mov
imul
inc
hlt
int3
xlat
sub
int
mov
gs
cmp
push
mov
cmpsl
mov
popf
sub
jecxz
push
lock
push
repz
push
data16
mov
imul
pop
lea
push
and
xor
ljmp
mov
mov
fiadds
pop
xchg
cmpsb
adcl
pop
adc
mov
mov
jbe
jno
lods
fdivrp
clc
inc
scas
and
pop
lcall
pop
mov
jmp
icebp
jns
dec
dec
xchg
mov
cli
sahf
and
pop
mov
or
test
push
cmp
imul
add
call
lret
add
out
jns
in
mov
jnp
icebp
icebp
and
dec
stos
out
cmpsb
adc
gs
aaa
inc
mov
cmc
sub
inc
js
rcrb
mov
dec
cs
outsb
cmc
mov
xchg
repz
insl
mov
mov
mov
inc
ss
popa
imull
lahf
mov
fildll
mov
movsl
mov
sbb
push
xor
inc
xchg
mov
pop
mov
inc
lock
ret
mov
fistpll
pop
lret
cld
shrl
mov
adc
iret
leave
daa
adc
push
inc
xchg
inc
add
xchg
rcrb
test
jae
int3
pop
aad
and
xor
jb
dec
dec
int
test
sbb
aad
loope
movsb
cmp
cmc
pop
mov
add
xchg
jnp
sbb
push
mov
inc
pushf
inc
mov
or
iret
mov
movsl
sti
shrl
xor
ds
lret
hlt
xor
lcall
pusha
jl
mov
jmp
hlt
stos
fs
pop
in
call
pop
jecxz
xchg
mov
pop
push
jns
mov
lret
inc
xchg
add
push
mov
repz
xchg
mov
stos
dec
adc
add
xor
inc
add
loop
cmpsl
jecxz
out
aam
adc
ret
cmp
cmp
and
dec
mov
or
jl
outsb
xlat
mov
xchg
pop
aad
mov
xchg
lcall
add
mov
shll
mov
sub
cmpsb
xchg
pop
push
in
std
adc
sub
insl
es
lcall
or
xor
cmp
outsl
lods
cmpsb
add
mov
add
xchg
scas
ljmp
adc
lods
test
jne
in
and
mov
fwait
xor
mov
rcll
or
lret
loope
mov
js
into
sahf
and
fdivs
jne
out
popf
mov
push
fcoml
das
jo
mov
sbb
int
repnz
lret
mull
jne
push
nop
and
adc
cmp
fldenv
call
jo
pop
and
rclb
sbb
mov
and
or
inc
sarb
dec
sub
xor
idivl
int3
pop
pop
repz
mov
lahf
cld
gs
lods
and
je
add
push
cwtl
repz
rcll
arpl
adc
insb
pop
sub
pop
add
cli
mov
or
mov
enter
sbb
pop
leave
pop
cwtl
test
fistpll
and
jmp
fwait
pop
scas
xchg
mov
and
pop
pushf
mov
xchg
mov
dec
je
int3
pop
adc
xor
lahf
mov
lods
dec
xor
cmp
outsb
mov
loopne
mov
pop
push
add
mov
pop
lds
jno
lods
jne
subb
lock
int3
jbe
pop
ja
test
mov
push
rcrl
mov
mov
xor
cmp
and
xor
subps
mov
int3
in
xchg
adc
adc
or
dec
mov
ret
xchg
cltd
les
jp
movsl
jge
adc
or
xchg
loopne
and
in
clc
pushf
pop
push
cltd
mov
jge
xor
out
lock
into
and
push
in
fildll
out
pop
stc
jecxz
pop
xchg
insb
cmp
int
sub
sahf
js
out
sbb
and
adc
mov
jg
xchg
adc
jbe
cli
push
scas
cld
pusha
xor
xchg
mov
cmpsl
xor
movsl
xor
or
and
sub
popa
iret
push
cmp
pop
lock
fwait
test
aaa
adc
fs
rcrb
sbb
inc
ljmp
mov
pusha
sbb
cs
lcall
outsb
mov
fstpt
pop
add
dec
js
sahf
cmpsb
mov
jmp
fbstp
mov
pop
cmp
push
pushf
xor
or
inc
cwtl
addr16
iret
jb
jno
inc
dec
hlt
jnp
fsin
pushf
dec
pop
hlt
jbe
push
adc
lahf
lock
adc
cmpsl
mov
das
adc
fistps
add
dec
adc
ljmp
insb
outsb
sti
mov
insl
push
pop
cwtl
xchg
addl
cmp
pop
fstpl
pop
movsl
xor
insb
cmpsb
nop
iret
aad
in
movsl
dec
jg
or
inc
jo
movsl
jmp
jns
jg
pop
xor
cmc
cmpsb
test
hlt
push
mov
cwtl
cmp
pop
jge
je
int
pop
xchg
mov
add
jb
lds
clc
sbb
and
adc
jbe
sub
add
mov
dec
xchg
lds
stos
repz
and
sub
mov
rol
add
xor
mov
lret
jge
nop
imul
xchg
xor
sbb
push
cmp
loop
aam
dec
and
shl
insl
xor
mov
add
or
out
dec
cmpsl
inc
mov
adc
insb
movsb
dec
cmp
mov
xchg
push
repz
pop
aad
xor
cmp
jbe
lcall
outsl
jmp
xor
lea
jno
and
imul
ljmp
push
call
push
pop
sbb
in
mov
mov
adc
daa
ret
movsb
push
inc
cmp
push
in
cs
dec
lods
test
inc
xor
ja
iret
ds
arpl
enter
scas
icebp
lods
dec
cmp
push
aas
sbb
pop
mov
je
pop
mov
lcall
xchg
mov
push
mov
ret
mov
pop
mov
jo
sub
xchg
aas
lea
push
sub
lods
pop
cmc
int
les
dec
ret
sbb
cltd
xor
sarb
mov
mov
stos
jne
mov
sbb
idiv
mov
mov
notl
loopw
lods
inc
sbb
cmp
es
fwait
xchg
mov
mov
rorb
sbbb
sahf
lds
icebp
mov
ss
sbb
dec
lods
cld
or
jg
mov
cmpb
mov
inc
pop
or
or
or
mov
sbb
or
mov
daa
mov
incl
sub
mov
mov
jns
mov
mov
popf
out
cmp
mov
xchg
inc
push
sbb
jp
inc
mov
pop
sub
lret
and
outsb
in
enter
repnz
push
insb
jecxz
fidivrl
outsb
testb
aad
ljmp
in
std
or
jecxz
ljmp
xchg
push
adc
stc
adc
out
pop
jns
popf
enter
and
in
pop
mov
push
js
lret
xchg
xchg
and
dec
ja
mov
pop
cwtl
or
mov
mov
sbb
cs
jecxz
orl
xchg
fstpt
xchg
push
pop
cmp
in
mov
push
mov
mov
and
clc
imul
movntq
or
pop
mov
push
and
mov
sub
adc
std
in
and
adc
pop
xchg
mov
in
data16
cltd
orl
jge
sbbb
cmpsl
cmp
add
lcall
jae
into
rorl
cmc
mull
jne
xlat
xor
xchg
movsb
adcb
pop
adc
dec
sbb
popl
daa
xor
mov
out
or
test
scas
stos
imul
jb
inc
xchg
pop
dec
aad
loop
pushl
loopne
decl
out
fimuls
push
add
jg
xor
orb
fcomps
fucomip
cwtl
mov
push
mov
lds
jnp
mov
jp
js
clc
in
std
incl
je
mov
aam
mov
and
lods
imulb
lret
jl
mov
sub
aad
sbb
and
lret
inc
imul
cli
inc
data16
sbb
sub
or
clc
int3
or
dec
jg
lock
mov
or
mov
daa
das
repnz
and
out
int3
icebp
mov
ss
test
push
xchg
push
sbb
jne
or
xchg
push
mov
sbb
das
icebp
xlat
jg
jmp
and
fbstp
pop
cmpb
mov
lods
popa
popf
sub
push
aad
mov
push
mov
shrl
std
test
dec
int
mov
scas
dec
jp
in
sub
xchg
ja
mov
sub
into
xchg
out
test
ds
push
push
outsb
cli
jno
sub
aad
fcmovb
or
ljmp
push
rolb
jl
movsl
in
adc
mov
or
mov
insl
out
stc
sti
gs
shll
adcb
mov
or
jbe
inc
mov
lcall
add
cs
add
jo
ret
lahf
inc
lea
xchg
and
or
pop
popa
int
pusha
pop
mov
or
pushf
rcll
out
or
sbb
adc
xchg
ret
add
mov
push
jnp
jmp
mov
sub
jl
sub
and
arpl
mov
cmpsb
sub
mov
mov
and
std
repz
sbb
inc
mov
stc
sbb
inc
insl
xor
mov
xchg
jno
pop
sub
add
inc
inc
sbb
adc
mov
mov
fldcw
xchg
inc
cli
sar
lods
fcmovbe
jb
inc
fstpl
adc
jns
mov
pusha
sub
or
hlt
int
sub
pop
int3
stc
cltd
orl
inc
pop
sbb
ror
mov
mov
jmp
movsl
in
scas
loopne
mov
sub
movb
or
aaa
jge
mov
insb
dec
pop
pushf
or
jg
adc
inc
mov
movsb
mov
mov
jns
scas
inc
sub
lahf
xlat
mov
dec
xor
fldcw
jp
mov
pop
outsl
and
cs
xor
aaa
dec
lock
inc
cltd
mov
lea
cmpsb
jae
sub
andb
xchg
repnz
sub
addb
pop
ds
inc
jle
iret
out
int
adc
mov
jg
jbe
lods
xchg
scas
cmp
popa
fs
and
fildll
js
idivb
cmp
xor
loop
adc
popf
cmp
xchg
xchg
push
dec
inc
cmp
ss
hlt
sub
add
and
inc
lret
andl
int
add
int
sub
rorl
or
cs
movsl
in
leave
add
xchg
xchg
pop
fwait
jo
jle
jnp
cmp
es
ret
and
iret
push
sub
jns
jae
mov
inc
sub
icebp
fsubrl
sbb
push
and
mov
inc
aas
mov
cmpsl
mov
mov
mov
imul
pop
adc
test
data16
and
movsb
xchg
fidivl
jo
push
pcmpeqw
decl
xchg
mov
test
aad
cltd
rcrb
int3
loop
sbb
push
lret
outsl
jo
imul
test
push
into
pop
xor
adc
test
faddp
sahf
rorl
mov
jp
or
xchg
add
jp
mov
sbb
and
repnz
inc
pop
aam
sbb
mov
mov
jg
push
cmp
test
test
in
ret
add
sti
mov
das
xchg
addr16
es
cltd
fldenv
iret
mov
divb
fsubrl
sbb
test
pop
bound
sub
cmp
cmp
pop
hlt
ret
adc
xchg
push
int
loope
inc
xor
in
clc
lret
xor
dec
inc
arpl
sub
sub
jmp
push
add
jmp
movsb
mov
sub
into
iret
jnp
imul
xchg
mov
dec
lret
and
pop
mov
push
mov
popa
xchg
dec
cmpsb
dec
add
imul
dec
lahf
lahf
sub
testl
mov
stos
aad
stos
sbb
cwtl
ljmp
or
out
ja
sbbl
cmp
cltd
iret
pop
xor
orb
lods
xor
xchg
pop
test
lds
xor
mov
lds
cmp
sbb
shl
push
pop
fnstcw
inc
pusha
lcall
icebp
fs
push
mov
mov
out
shl
scas
icebp
mov
push
cli
push
call
jmp
gs
inc
out
xlat
mov
sbbb
out
xlat
mov
cld
stos
add
mov
jg
sbb
mov
cs
and
repz
je
scas
aas
gs
cmp
rcll
stos
adc
nop
stos
inc
pusha
mov
icebp
ljmp
and
sbb
popf
push
sbb
adc
jmp
loop
add
sub
rcr
add
sahf
push
jp
enter
scas
xor
sahf
mov
lcall
scas
xchg
fisttps
jns
aad
dec
mov
lahf
sti
cltd
xor
gs
sbb
outsl
mov
icebp
icebp
repnz
sub
mov
mov
cmp
fs
sub
fs
jnp
and
out
outsl
jecxz
sbb
into
cs
fmul
outsb
cmp
mov
adc
xor
enter
inc
mov
sahf
aaa
cmpsl
jl
out
pop
notb
xor
daa
subb
sahf
in
xchg
sbb
into
inc
sub
gs
mov
leave
xor
push
jl
push
int
inc
ficompl
fidivrl
into
stos
bound
xchg
adc
sbb
imull
add
mov
bound
int3
movsl
lea
sub
repz
outsl
in
jne
lds
dec
dec
lret
adc
movsl
out
adcl
lock
dec
out
jnp
int3
ror
clc
data16
int
sbb
mov
repnz
or
xor
and
dec
and
popa
ja
aas
ds
sub
sbb
outsl
in
test
fcomps
mov
in
jmp
pusha
sbb
cld
mov
cmpsb
or
mov
std
mov
dec
mov
outsl
pop
jne
push
jae
pop
jo
adc
test
and
movups
shr
cmc
push
lea
rcll
jns
sbb
sub
mov
mov
adc
push
jl
xor
sbb
int3
fwait
stos
sub
inc
jae
add
int3
push
pop
mov
iret
cmc
ds
adc
mov
fcmovnu
xchg
jns
ret
mov
sbb
es
shll
jbe
data16
sbb
pusha
and
scas
adc
popl
subb
and
rcr
fucomip
jb
cmp
cmp
lcall
testl
jp
xchg
xor
dec
push
pop
pop
mov
rcll
lea
jmp
addr16
mov
push
or
test
mov
adc
scas
push
push
xor
dec
in
push
or
lock
lods
sub
push
out
or
cmp
or
mov
xor
dec
aad
sub
and
or
lods
ss
imul
inc
inc
pop
add
orl
ret
adc
pushf
das
xor
xchg
pop
xor
jl
sbb
jge
in
pop
mov
imul
imul
mov
in
pop
and
mov
rcr
add
clc
mov
into
insl
sub
mov
push
pop
adc
and
out
and
pop
in
insb
es
fwait
daa
popa
inc
data16
adc
sub
sub
push
sbb
rorl
mov
sub
mov
pop
jne
fsubs
pop
imul
lcall
jg,pn
in
out
idivl
cmpsb
aaa
das
pop
stc
ficompl
xorl
pop
xor
cld
inc
out
mov
cwtl
pop
push
cmc
sub
pop
fmulp
les
mull
aas
sbbb
xor
or
adc
dec
adc
push
nop
sti
pop
rcll
push
cmp
xchg
xor
cld
push
movsl
sbb
push
mov
jnp
sarb
mov
dec
xor
movsb
addr16
mov
sub
cwtl
test
clc
push
push
cmp
adc
lods
sub
xchg
es
scas
push
lret
add
ljmp
sar
pop
xchg
mov
lds
mulb
sbb
sbb
push
stc
outsb
mov
lret
cmp
sub
mov
cmp
push
pusha
push
aam
mov
inc
and
cmp
pop
adc
push
rorl
movsb
out
xchg
ljmp
ret
ret
lods
cs
mov
pushf
mov
inc
dec
mov
mov
mov
jl
fs
es
cmp
call
mov
les
mov
fimuls
inc
repnz
xor
movsl
dec
leave
jnp
push
fcmovnb
clc
imul
pop
je
aam
fsubs
xor
and
loope
jno
dec
mov
mov
inc
fnstcw
shlb
dec
push
insl
inc
add
mov
xor
xor
daa
call
stc
stos
sarl
xchg
loopne
cli
ja
fimull
fs
cwtl
mov
cmp
jbe
mov
jmp
jmp
int
xchg
push
rorb
daa
lods
ds
dec
test
notl
fimuls
lods
loopne
arpl
pop
mov
outsl
xchg
bound
lahf
xchg
mov
push
dec
lret
dec
insl
pop
imull
cmp
and
jne
xor
les
inc
push
mov
or
aam
xchg
push
inc
mov
imul
dec
jecxz
mov
pop
mov
mov
add
or
insl
je
stos
lea
push
loopne
inc
jg
imul
sub
add
sbb
xor
stos
mov
or
mov
pop
xor
test
cmp
cmp
minps
jo
push
inc
shll
test
pop
add
test
ret
pop
repz
xor
sbbb
out
cmp
je
inc
loopne
xchg
cltd
ds
xchg
mov
and
mov
shlb
ss
xor
fs
fbld
rcrl
ret
cmp
mov
mov
adc
rorb
mov
test
push
sub
or
cmp
bound
ror
test
xor
fs
js
rcrl
or
and
lods
aad
sub
mov
fistps
sub
outsl
xor
jnp
or
insl
sbb
decb
pushf
outsl
imul
sbb
fistpl
cmpsl
inc
dec
push
ret
push
xor
les
cmp
jne
or
popf
fdivr
jo
iret
and
push
pop
sbb
sbb
xor
out
rcll
push
dec
or
lahf
andl
and
inc
sub
addb
ret
jb
stc
pop
fdivrs
jmp
sbb
cltd
cmp
mov
push
jb
bound
add
mov
mov
mov
cs
mov
pop
jo
mov
cmp
jns
sbb
sbb
xor
jns
popf
pushf
xlat
mov
push
mov
das
jmp
sub
push
jge
push
pop
mov
dec
in
push
scas
jo
cmp
cmp
fstp
push
stc
mov
dec
andb
idivb
loop
cmc
cs
adc
fstps
push
jae
test
mov
ret
lret
repnz
insl
pop
xor
fdiv
test
mov
rcll
dec
push
pop
pop
hlt
jg
movsl
loopne
mov
test
in
sbb
xchg
notb
mov
mov
aam
or
mov
push
addr16
outsb
cmc
stos
sbb
xor
sahf
xchg
sbb
ret
push
clc
or
pusha
fiadds
loopne
imul
adc
dec
fs
cs
fcmovnu
dec
push
ljmp
andl
and
in
daa
mov
mov
fwait
mov
cwtl
shlb
inc
adc
ljmp
and
dec
inc
popa
sub
lahf
in
mov
sbb
dec
leave
adc
xchg
dec
jl
fistpll
mov
mov
ss
repnz
sahf
add
push
or
mulb
sub
push
stos
test
in
inc
xchg
lret
lret
js
mov
inc
sbb
out
jmp
fimull
cmpsl
in
pushf
loop
dec
or
sbb
lods
mov
mov
sub
mov
jb
and
or
pop
insb
pop
inc
outsb
fwait
js
clc
jmp
fcompl
imul
test
lock
fcoms
xchg
jmp
addr16
int
cmp
cld
and
pop
mov
ljmp
cmp
scas
ficomps
arpl
pushf
sub
jle
leave
test
mov
jo
fsubrs
or
dec
mov
or
inc
adc
sti
add
cld
out
sbb
mov
xchg
cmpsb
cmp
ret
jge
adc
mov
nop
test
xor
addr16
jno
cmp
jb
das
out
ds
inc
int
mov
xchg
popf
subb
jo
les
add
xor
mov
js
xchg
xor
sub
testl
dec
lock
push
xor
dec
into
aas
jnp
jne
push
icebp
fsubl
xchg
into
jb
daa
dec
bound
jp
xchg
xchg
mov
inc
cmp
cld
popa
insb
fwait
xor
sahf
and
mov
or
je
push
es
lods
data16
lods
pop
xorl
fistpl
cmpsl
xchg
and
or
les
mov
mov
ds
popa
dec
femms
mov
pop
ja
adc
sbb
sub
test
mov
and
js
sbb
or
mov
sbb
stc
shr
pusha
mov
inc
arpl
or
gs
xor
fs
sub
mov
mov
xchg
xor
cwtl
jge
lods
shlb
lods
das
insl
cld
xor
pop
popf
and
dec
jae
push
xchg
mov
mov
daa
push
aam
jns
pop
xchg
jnp
jns
mov
pop
pushf
pusha
xchg
loopne
mov
or
inc
enter
cmpl
inc
pop
cmp
std
inc
cmp
mov
arpl
into
sub
mov
test
mov
test
mov
imul
mov
sbb
xor
imul
testl
lods
loop
fnsave
push
mov
jecxz
jge
jmp
aam
insb
mov
add
pop
out
fwait
or
push
xlat
fisttpll
aaa
pop
adc
lret
push
mov
lcall
movb
cmpsb
aaa
adcl
and
mov
sbbl
add
jp
push
cmpl
iret
cmp
add
adc
bound
cmp
lret
cltd
test
mov
push
sbb
inc
scas
adc
in
xchg
jmp
mov
mov
adc
dec
push
fbstp
fwait
shlb
lock
push
and
repz
mov
mov
les
push
fistps
arpl
mov
push
pshufw
inc
leave
mov
cs
adcl
repz
pop
cmp
mov
sub
mov
stc
data16
sarb
repnz
inc
es
mov
xor
sub
imul
rcll
mov
aas
rcr
mov
in
jmp
dec
xchg
xchg
xchg
sub
cmpsl
lea
lea
inc
shl
adc
pop
inc
xchg
mov
loopne
or
mov
bound
sub
sub
test
sbb
mov
xchg
pop
sbb
xor
inc
mov
scas
push
push
mov
push
jnp
test
gs
cmp
jns
jae
xor
jl
mov
mov
xchg
cmp
test
add
and
mov
iret
inc
rolb
into
or
cld
fdivr
loop
jp
int3
hlt
and
aas
mov
dec
mov
ja
das
jl
test
das
push
popf
fisubrl
in
push
outsb
mov
dec
cli
fwait
jmp
adc
fisubl
out
lds
dec
out
loop
sbb
xlat
andl
jae
sbb
lret
movsb
lret
cmp
cmp
loop
inc
sub
mov
rcrl
sub
and
insb
pop
add
imul
das
jbe
js
mov
test
gs
imul
fidivrl
lret
xchg
mov
xchg
pusha
xchg
xor
sub
xorl
daa
ficomps
sbb
xchg
fistpll
jp
movsl
inc
cli
pusha
in
add
scas
dec
repz
jmp
decl
aad
push
jle
push
pop
cmc
push
fisubrl
jmp
sbb
test
ljmp
aaa
loope
or
dec
fbld
dec
mov
cwtl
cmc
and
push
jmp
lock
jo
jnp
stos
out
and
mov
mov
sub
mov
sbb
hlt
or
aaa
pop
jle
mov
sub
sbb
call
rcrb
xor
sub
inc
les
addl
jl
push
or
xchg
inc
bound
mov
push
dec
mov
int
push
out
bound
xor
das
out
mov
mov
fldcw
mov
aam
cs
adc
scas
xchg
mov
dec
repnz
test
mov
pop
xchg
mov
fsts
lcall
sti
fwait
or
outsb
bound
pusha
push
ss
push
repnz
inc
mov
lods
test
gs
pusha
push
and
into
popa
lret
cmp
cmpsb
mov
test
mov
lahf
shlb
or
push
jecxz
cld
aas
sub
cs
mov
jbe
sub
mov
xchg
inc
xchg
out
adc
mov
push
arpl
sbb
out
pushl
lret
mov
pop
pop
sub
insl
jp
aaa
out
cmp
es
sub
notl
fldenv
lods
mov
lcall
jmp
push
cmc
nop
ljmp
sbb
xchg
add
in
xlat
sbb
sbb
mov
jp
cmp
push
sbb
push
inc
ficomps
in
stc
pop
scas
repz
rorl
insl
pop
lods
daa
jne
add
push
xor
mov
lret
dec
scas
pop
test
aaa
push
out
outsb
mov
movsb
mov
jp
fidivl
mov
je
lds
outsl
out
scas
dec
outsl
pop
jmp
out
or
sub
sub
or
pop
loope
lcall
xchg
ds
jb
popa
and
mov
sarl
sbbl
xor
cmp
movsl
jg
js
mov
mov
and
dec
mov
jg
and
call
insl
push
mov
in
or
mov
cmp
lahf
jnp
mov
lcall
mov
scas
add
gs
cmp
pop
lods
sbb
xor
sbb
jl
xor
fs
mov
inc
xchg
xchg
mull
sub
popf
cld
jp
mov
pop
lcall
lds
mov
push
outsb
adcl
filds
cltd
lds
and
mov
pop
or
inc
adcb
cli
movsl
mov
hlt
push
imul
fdivrl
xor
enter
push
flds
add
icebp
popa
test
lock
add
icebp
mov
dec
std
xchg
mov
lcall
xchg
or
pop
in
or
inc
pusha
fidivrs
nop
xor
pop
pop
jns
popa
fisubl
mov
in
mulb
mov
cmp
xor
fcoms
fnstenv
push
add
out
or
dec
mov
fwait
lods
and
movsb
clc
and
addr16
push
inc
insl
inc
mov
subl
popa
aaa
cwtl
das
test
adc
dec
clc
shlb
dec
rcrl
loopne
notl
out
cmpb
andb
fldt
mov
test
cli
cmp
mov
jp
or
ret
push
mov
stos
js
call
add
adc
xchg
xor
cmp
js
test
xlat
mov
into
sahf
jns
fwait
mov
xchg
je
mov
sbbb
cltd
add
xor
aaa
push
insl
sbb
mov
stos
roll
or
and
add
bound
cltd
js
add
shlb
push
out
pop
sbb
imul
hlt
test
inc
adc
jns
add
jl
mov
xchg
pusha
sbb
ffree
and
cmp
scas
les
into
and
fistpll
cli
popf
pop
mov
bound
pop
push
shl
inc
in
ds
idiv
lods
iret
lea
pop
fsub
pop
push
fsubl
leave
sahf
xor
add
mov
adc
mov
mov
jns
xchg
inc
outsb
pop
int
fcoml
out
cli
mov
xchg
sbb
test
xlat
dec
fidivl
jnp
addr16
adc
lods
xor
inc
inc
and
icebp
in
jl
add
sbb
push
pop
jae
outsb
mov
pop
push
addb
scas
jp
mov
cmpsl
pop
ret
in
lods
aad
int3
out
jnp
rorb
outsb
ljmp
push
cltd
int
add
and
jb
sbb
jno
cmc
lock
test
pop
scas
mov
iret
mov
das
inc
rorb
mov
sarb
in
ret
inc
or
sub
push
sbb
jmp
insl
xchg
pop
jmp
sub
xor
lahf
aaa
push
adc
xchg
sbb
lret
es
add
fs
jno
les
repz
add
fmuls
test
or
push
pop
sub
lock
and
ret
adc
push
clc
cmp
and
push
mov
cmc
imul
and
cli
mov
das
out
push
lahf
sbb
movsb
mov
mov
clc
out
test
nop
jbe
xchg
loopne
xchg
sbb
mov
hlt
or
ss
xchg
lcall
pop
fst
jne
add
push
jbe
sbb
cmpsl
fbld
mov
or
mov
mov
ss
into
ret
lods
out
vcvtss2sd
sub
bound
push
int
and
popf
arpl
mov
and
jp
mov
and
std
subb
outsl
xchg
fwait
stc
push
pop
jne
xor
sbb
adc
ljmp
testl
push
nop
xor
dec
insl
mov
clc
add
stos
stos
clc
enter
add
jle
pop
adc
cmp
mov
das
cs
jmp
insl
imul
sub
adc
pop
rorb
mov
jmp
inc
push
arpl
test
std
dec
cltd
aam
dec
notl
arpl
in
pop
jo
fisubs
sbb
push
loope
push
in
pop
push
daa
mov
fsubrl
inc
int3
imul
clc
sbb
lret
out
and
test
pop
pop
add
ret
or
xor
dec
in
xchg
aaa
inc
insb
mov
loope
jg
ljmp
aas
cwtl
sahf
dec
cltd
dec
imul
popa
cmpsb
loopne
inc
xchg
and
push
inc
bound
ss
mov
subb
cmp
out
fstps
ret
stc
mov
cwtl
cmpsb
stc
push
lea
iret
jbe
loope
push
lahf
push
dec
xor
dec
xchg
inc
rcl
xlat
rclb
ret
dec
ret
xchg
cltd
inc
repz
fsubr
cmp
or
rcl
push
es
sbb
or
enter
clc
jmp
in
xchg
and
outsl
add
xor
jno
nop
into
roll
fbstp
xor
mov
int
aaa
and
repnz
std
pop
jb
lods
int3
js
push
loop
mov
pop
xchg
sbb
jecxz
enter
xchg
ja
sbb
lods
pop
loopne
mov
sbb
daa
jmp
out
push
push
jno
ffreep
push
mov
inc
or
mov
mov
jno
mov
mov
push
es
sbb
in
hlt
loope,pt
arpl
cmp
dec
jb
xor
xchg
sub
push
clc
rcr
push
jmp
push
add
adc
fidivrl
xor
arpl
or
inc
jno
decb
mov
js
mov
arpl
jae
pushf
popf
mov
dec
cmpsl
xlat
scas
sbb
or
in
sti
inc
mov
mov
pop
lods
dec
dec
jne
mov
mov
cmp
mov
dec
data16
in
dec
sub
movsl
mov
or
add
pop
sub
xchg
cwtl
sbb
ljmp
pop
mov
inc
sub
push
xor
idivb
mull
push
nop
xchg
jbe
and
rcrl
xchg
mov
and
push
push
pop
cmp
out
dec
adc
lcall
mov
cmc
xlat
call
gs
das
je
jns
in
loop
mov
ja
pop
adc
mov
sub
insb
fnstenv
lods
xor
imul
and
fsubp
cld
xor
movb
jbe
xchg
adc
in
fwait
repnz
cmp
frstor
ljmp
push
outsb
movsl
in
nop
cmc
clc
fs
adcb
aad
pop
je
xchg
ret
sub
ljmp
test
pop
add
jecxz
sub
sbb
into
and
mov
je
popa
adc
fldcw
or
push
cmp
sbb
add
push
inc
es
xchg
dec
imul
mov
fdivl
mov
jo
mov
push
dec
std
rep
cli
add
jnp
fidivs
divl
mov
mov
or
nop
fistpl
cmpb
shrl
arpl
sbb
ret
pop
in
lods
push
jle
inc
test
notl
dec
test
jno
or
dec
sbb
adc
mov
inc
inc
sbb
das
add
or
inc
out
das
cmp
push
sub
inc
shrb
ret
push
fstl
inc
dec
and
orps
pop
cmovo
sub
icebp
inc
xor
jmp
mov
xor
lahf
out
loopne
sub
jae
push
pop
xor
ror
loope
adc
sub
jae
pushf
loope
pop
xlat
sahf
fcompl
pusha
aad
inc
push
hlt
fdivl
cmp
jle
call
ret
sbb
ja
push
add
mov
ret
mov
popa
add
and
lods
ss
push
mov
aaa
out
push
xorl
stc
sarl
mov
sub
mov
in
sbbb
scas
cwtl
mov
lds
stc
in
and
daa
push
test
jns
jle
test
adc
cmp
inc
xchg
lods
sub
sbb
push
inc
stos
dec
aas
jb
or
add
imulb
add
jge
insl
or
xchg
mov
xor
push
pop
loop
outsb
enter
mov
std
cld
gs
cmp
adc
cmp
addr16
shlb
adc
mov
daa
xor
dec
dec
fisubrs
mov
xor
mov
jbe
sbb
mov
dec
aas
mov
fistpll
xor
into
sub
sbb
nop
enter
sbb
xchg
aad
nop
daa
mov
push
mov
mov
loope
jl
into
inc
xchg
xor
jecxz
lahf
mov
stos
or
int
cmp
sbb
add
push
adc
adc
icebp
inc
in
xchg
mov
fcmovne
data16
shrb
mov
loope
movsl
or
jmp
lea
jmp
test
mov
push
adcl
xchg
popa
sub
popf
pop
adc
and
rorb
jecxz
mov
sarl
sarl
and
sbb
mov
cmp
les
mov
jo
mov
es
in
or
xchg
idivb
cli
inc
mov
orb
lds
fwait
jle
subl
dec
ja
repnz
mov
int3
lds
movsb
mov
adc
in
lret
sub
mov
push
cs
cs
xchg
pop
gs
cmpsb
jmp
xlat
stos
mov
shll
fistpll
enter
pop
out
int
jne
movsb
arpl
jnp
mov
push
out
mov
ljmp
idivb
mov
in
push
and
icebp
push
test
sahf
aaa
sub
aaa
adc
dec
pop
clc
push
lods
add
dec
mov
add
pop
notb
movsb
inc
call
cmpsl
repnz
loope
stos
jecxz
dec
enter
jl
aaa
mov
clc
add
sbb
add
shrb
xor
in
fistpl
sbb
scas
cmpsb
inc
cmp
pop
sbb
mov
adc
cmp
sub
loopne
dec
mov
jns
mov
rclb
fbstp
dec
inc
lahf
movsl
loop
lahf
fldl
or
mov
add
repnz
aaa
pop
cmp
adc
xchg
ret
and
sub
mov
lds
cmc
aad
dec
mov
dec
mov
es
and
cmp
dec
and
push
lods
inc
jle
imul
fsubr
cmp
or
icebp
ss
jo
sbb
nop
popf
cmp
xchg
dec
cltd
stos
adc
or
mov
or
xchg
test
cltd
cmp
outsb
mov
sbb
xor
xor
lret
ret
sbb
out
jo
push
and
lods
dec
jge
outsl
mov
and
stc
popf
inc
shl
aas
into
stc
fbld
push
mov
dec
mov
xchg
xchg
iret
pop
out
xor
xchg
mov
enter
cmp
loope
xchg
sarl
lods
xor
inc
sbb
cmp
push
or
add
or
jb
das
mov
std
pop
shrl
sbb
cmp
repz
jb
jge
pop
outsl
mov
stos
stc
daa
je
mov
cs
xchg
mov
pop
jno
hlt
cmpsl
subb
mov
mov
inc
mov
ret
int3
dec
out
pop
cmp
mov
fcompl
lock
push
arpl
leave
add
sahf
mov
andl
adc
fwait
or
leave
shll
sbb
addb
pop
adc
mov
aas
cltd
mov
pop
jns
sbb
in
daa
out
stc
add
mov
mov
adc
push
bound
xlat
jg
fiadds
push
movsl
xor
and
enter
dec
not
push
jae
sbb
cltd
int
loopne
or
cmpsl
out
sbb
add
sbb
or
pop
inc
jg
add
sbb
mov
ja
rclb
das
fucomip
cmpsl
scas
xchg
dec
out
out
dec
stc
jne
xor
ds
inc
xlat
stc
test
repnz
clc
lret
dec
mov
pushf
sbb
push
lds
movsl
mov
mov
mov
out
cmp
je
sarb
data16
pop
and
lods
movsb
scas
jp
addr16
sub
adc
idivl
leave
gs
xchg
dec
ret
cmp
daa
fwait
add
nop
inc
and
sub
sub
aam
xchg
sahf
add
push
push
pushf
cmp
test
inc
ret
js
imul
pop
imul
dec
cmp
adc
arpl
mov
mov
and
nop
aas
daa
add
adc
enter
stc
cmp
cmpsb
aas
aam
push
or
or
cmpsl
xchg
fidivrs
pop
in
mov
mov
push
pop
inc
adc
nop
call
sahf
pop
pop
movsl
mov
mov
out
shlb
and
mov
enter
stos
subb
xor
xor
jns
fs
test
jle
sbb
sbb
ret
mov
jb
mov
cmp
pop
movsb
fbld
inc
mov
in
push
pop
out
loop
jnp
xor
cmp
sbb
cmpsl
push
mov
inc
leave
sti
fildl
xchg
lea
mov
sar
and
add
inc
jno,pt
add
call
mov
xchg
cltd
xchg
push
notb
ret
mov
movl
jmp
aad
inc
cld
inc
sahf
xchg
jmp
push
mov
xor
mov
jae
or
cmpsb
jnp
push
push
adc
push
insb
adc
js
in
fldenv
ret
scas
dec
les
sub
mov
lods
arpl
jp
jno
je
sbb
enter
mov
sbb
lahf
sub
sub
aaa
xor
mov
lock
push
test
jo
movsl
cs
in
xorb
enter
cmp
dec
jge
mov
or
sub
fdivrl
cmpsb
aaa
or
loopne
in
ss
sarb
out
mov
dec
or
lds
jns
into
cli
dec
cli
pop
mov
int3
dec
dec
sbb
cmpsl
stc
sub
mov
mov
jle
jmp
jae
scas
ror
bound
pop
popa
movsl
cmc
mov
add
js
inc
xchg
or
xchg
sahf
push
outsl
dec
mov
cmp
pop
mov
es
mov
ficoms
mulb
sbb
icebp
xor
jge
roll
xor
lret
decl
popa
fucomip
pop
scas
cs
movsl
inc
clc
loopne
mov
pop
data16
mov
push
mov
sub
sub
inc
sbb
inc
fmuls
inc
and
adc
push
and
loopnew
mov
push
cmp
add
test
mov
lods
jns
hlt
and
cmpsl
xchg
and
clc
dec
negb
cmp
popa
or
push
imul
cltd
scas
rorl
aas
xchg
in
repz
push
jne
xchg
aas
movsl
mov
mov
inc
jnp
pop
mov
inc
push
rorl
loop
jle
je
and
lret
fimuls
test
mov
push
xchg
lds
jae
loope,pn
xor
cmp
subb
mov
jl
call
jmp
push
js
mov
ljmp
pusha
pop
mov
scas
sbb
xchg
xchg
xchg
and
ds
mov
jle
push
ret
mov
pop
mov
mov
push
sub
lahf
in
cmp
mov
clc
cmc
pop
pusha
xchg
out
js
add
je
adc
in
shll
sub
das
sub
mov
inc
xor
aas
and
leave
push
es
dec
loopne
rcrl
mov
xchg
and
push
push
call
or
fnstenv
sbb
sub
ss
mov
scas
lea
movsb
hlt
mov
sub
pop
mov
pop
jmp
jmp
mov
int
mov
cmpb
es
sub
xchg
mov
shrb
iret
xor
lcall
xchg
ret
push
sub
push
shl
rclb
int3
add
xchg
pop
fldl
xor
or
dec
or
test
rclb
pop
sub
and
push
aas
clc
add
sub
imul
mov
sub
cmc
and
fisubrl
icebp
mov
xorb
inc
cmp
cmpsl
in
push
adc
xchg
cs
pop
lock
and
pop
sub
inc
or
jo
loopne
inc
popa
mov
lods
js
es
add
add
jns
sub
or
xlat
sahf
sub
ja
gs
or
jp
fbstp
mov
test
aad
jno
clc
cmpsl
cmc
jge
jecxz
rolb
test
sbb
mov
dec
jmp
push
fwait
addb
pop
mov
xchg
fmuls
stos
icebp
int3
enter
jle
sub
imul
loop
mov
jl
in
addr16
pop
rcll
mov
ljmp
sbb
xorb
movsl
jl
negb
scas
jmp
xchg
fidivl
pop
pop
ret
mov
sbb
sub
jno
shl
ss
jg
aas
add
add
addr16
inc
lahf
jmp
lods
repz
std
hlt
mov
xacquire
jle
add
push
repz
mov
popa
xchg
iret
pop
dec
sub
cli
lods
jle
es
repnz
in
push
sub
mov
sbb
or
cmp
out
xchg
xchg
mov
loop
push
out
mov
pop
leave
mov
fnsave
mov
sub
mov
insl
imul
jae
sub
outsb
mov
mov
jnp
dec
adc
pop
push
addb
loope
ss
loopne
dec
pop
cmp
fwait
pushf
mov
int
mov
or
and
mov
mov
or
push
pop
mov
out
loop
call
sbb
inc
sub
push
sub
mov
clc
and
int
enter
xchg
xor
stos
scas
popf
int
or
cmp
jle
mov
pop
dec
daa
xorl
push
fildll
sbbl
add
fisttps
cmp
jmp
stos
mov
shl
movl
fsts
inc
xor
dec
popa
mov
sub
inc
cltd
sub
test
jle
pop
inc
imul
xorb
xchg
jmp
push
lahf
and
xchg
push
add
pusha
dec
dec
jp
add
push
xor
pop
cmovnp
gs
pop
inc
and
mov
jo
fcompl
and
je
sbb
jmp
pusha
inc
adc
dec
ljmp
arpl
lahf
sbb
clc
popa
dec
adc
adc
or
or
add
jbe
rcll
movsl
inc
in
adc
shl
scas
push
pop
cld
sbb
adc
fistps
sar
ds
repnz
lahf
hlt
adc
mov
mov
cmp
les
adc
inc
bound
idivl
lahf
lcall
xor
xchg
lcall
adcl
enter
or
sub
shrb
add
popa
xor
ss
mov
xchg
sti
inc
add
jno
loop
addb
lock
lds
jae
jmp
adc
mov
cli
and
rorb
dec
mov
fisubrs
add
repz
pop
xlat
xchg
dec
lcall
xchg
hlt
enter
loopne
mov
xor
mov
or
mov
gs
aas
mov
push
inc
sub
mov
fcmovbe
mov
cld
mov
lea
out
cmc
stc
jecxz
inc
mov
and
js
mov
mov
pop
xchg
fldt
mov
or
mov
aam
sub
es
push
lcall
sub
pop
les
xchg
mov
mov
add
stos
adc
or
repnz
rcrb
rcrl
imul
inc
fucomip
mov
repnz
lahf
mov
push
push
mov
mov
xchg
mov
inc
lahf
mov
mov
and
lret
and
jno
push
mov
ds
fisttpl
fimull
dec
fwait
cmp
mov
and
push
stc
imulb
in
pop
stos
or
scas
in
jmp
mov
cmp
xchg
mov
cltd
xchg
outsb
rcrl
fdivrs
fisubrl
add
repnz
add
adc
repnz
call
xor
popa
and
bound
and
or
lds
jecxz
test
addr16
gs
call
dec
cmp
inc
rol
mov
add
andl
sbb
jl
es
fildl
jne
js
and
mov
mov
adc
fnstenv
cmp
es
mov
inc
sbb
in
mov
sahf
loopne
or
adc
les
out
lahf
pop
jmp
pop
dec
je
outsb
xor
inc
mov
scas
int
jb
test
mov
mov
fildl
fimuls
cmpsb
loope
mov
cmp
ss
jmp
loopne
out
es
jle
data16
dec
iret
js
add
cld
incl
in
xchg
dec
jns
movsl
jo
filds
push
sbb
lods
js
mov
cmp
imulb
jge
and
or
jae
stos
mov
and
sbb
div
jb
mov
aam
divb
or
add
mov
pop
ss
stc
clc
mov
outsl
mov
lods
loope
in
cwtl
and
hlt
lahf
and
or
call
test
jmp
call
cs
leave
mov
pop
pop
imul
movsb
out
adc
push
aam
lea
inc
pop
aaa
mov
out
fistps
outsl
cmovb
aaa
scas
daa
addb
sbb
das
test
rcrl
fs
dec
or
cmp
add
in
add
test
jne
add
jl
ficoms
shll
jo
dec
or
ror
jle
test
sarb
xlat
aas
add
lods
xor
mov
inc
dec
inc
dec
dec
jle,pt
dec
fidivl
inc
pop
shl
xchg
sarl
xlat
sahf
lret
test
cmpsl
mov
xchg
adc
jmp
test
popf
subl
negl
xchg
mov
pop
data16
push
shll
scas
lcall
sub
mov
add
dec
jmp
and
jecxz
and
gs
stos
pop
sub
push
push
sbb
sub
pop
movsb
mov
inc
ljmp
fdiv
loope
popf
in
sbb
test
sub
jmp
les
dec
mov
fistpl
mov
add
je
sarb
mov
dec
je
imul
addr16
les
xchg
sbb
ret
outsb
pushf
cmp
ja
push
and
ja
cmovno
scas
imulb
dec
in
fs
cld
sbbl
xlat
jecxz
sbb
mov
faddl
icebp
fnstenv
hlt
mov
sahf
adc
mov
lcall
add
and
mov
xchg
cli
jecxz
mov
jnp
or
lock
leave
mov
jecxz
xchg
out
stos
daa
xlat
cmpsl
cmp
idivb
popf
bound
push
fwait
mov
call
push
pop
test
inc
cmpsb
rorl
xchg
imulb
out
div
pop
or
out
mov
or
cmp
inc
sub
mov
leave
leave
rcl
gs
fs
sbbb
jecxz
dec
in
push
repz
jg
in
shlb
mov
stos
xchg
push
push
int3
xchg
push
fimull
push
daa
mov
fstps
push
rorl
dec
and
adc
lods
into
inc
fcomps
shl
test
cs
bound
sarl
push
aad
fwait
jae
shll
adc
fdivl
or
leave
xchg
mov
inc
ret
and
pop
std
aad
jb
sub
popl
ficompl
push
inc
ds
ret
sbb
fcmovu
mov
clc
mov
xchg
add
daa
stos
pandn
repz
cmp
push
test
sub
andb
push
fldenv
pop
leave
out
push
imul
inc
cmp
je
nop
mov
push
jnp
pop
push
aaa
outsl
stos
dec
pusha
mov
inc
mov
nop
dec
push
icebp
add
sub
jmp
jnp
call
sub
jle
les
and
pop
les
adc
inc
xchg
mov
idiv
and
mov
sbb
in
xchg
fbstp
pusha
stos
mov
inc
mov
add
pop
decl
cs
adc
cmp
dec
pop
dec
xor
adc
adc
lcall
cwtl
popf
in
jno
repz
test
cmp
dec
mov
inc
push
ret
inc
push
mov
outsb
cmpsl
aaa
aas
aas
and
bound
lds
jb
rorb
adc
push
inc
add
je
scas
cmpsl
xchg
xchg
stos
out
popa
fisttpl
and
das
icebp
lods
or
rolb
in
icebp
out
dec
push
push
or
sbb
adc
jl
pusha
aas
loop
pop
aas
xchg
cwtl
and
jb
jle
or
adc
out
pop
popf
outsl
mov
push
mov
or
pop
mov
nop
sbb
cmp
push
aad
test
and
sarl
in
loop
jmp
jmp
call
xor
shrb
popf
test
arpl
mov
mov
sbb
xor
push
in
adc
or
pop
jnp
jnp
jg
push
jbe
je
cmp
inc
test
cmp
cwtl
sahf
es
push
push
in
movsl
jp
push
pop
cmp
add
idivb
jb
mov
out
je
shll
stos
adc
imul
out
mov
bound
mov
mov
ljmp
call
in
push
rcrb
dec
lahf
dec
jno
daa
ja
and
rolb
ret
dec
pop
jns
cs
stc
jo
outsb
bound
jae
jp
not
and
sbb
add
cmp
in
pop
mov
out
adc
sbb
sbb
jno
cmp
mov
push
push
inc
pop
les
pop
push
xor
pop
rcl
arpl
shlb
jmp
mov
clc
pop
sub
adc
xor
out
icebp
cmp
fmuls
outsb
jge
clc
sbb
sub
sbb
push
mov
in
das
mov
cld
out
mov
add
pop
cmp
in
cld
sbb
push
lret
sbb
jl
aad
xchg
aam
popf
and
sbb
sub
jecxz
mov
push
and
je
scas
cmp
xchg
call
lahf
jge
push
fcmove
and
mov
imul
add
imul
test
adc
xor
enter
adc
pop
out
shll
lea
mov
cmpl
iret
insl
insl
push
js
mov
lahf
cld
or
clc
and
push
inc
call
mov
lea
in
or
xchg
dec
mov
sbb
sbb
das
mov
fildl
or
daa
sarb
pop
adc
sub
pushf
mov
xchg
mov
clc
pop
cmp
sti
inc
int3
outsb
fldl
push
out
add
test
gs
xchg
push
mov
fdivrl
mov
rcrb
and
shrl
jmp
sub
push
insb
fistl
sub
mov
sub
jns
inc
cmp
scas
inc
int3
outsb
les
sub
rolb
mov
and
add
lock
pop
outsb
dec
lea
sbb
push
rcrl
in
pop
pop
pushf
pop
push
add
in
sub
adc
mov
outsb
and
dec
push
sub
mov
or
pop
loopne
out
fwait
imul
mov
pop
push
fsubrl
jne
mov
pop
push
dec
in
push
mov
xor
out
push
int3
dec
mov
imul
cld
xchg
scas
add
dec
inc
mov
dec
neg
or
adc
int
sub
rcll
push
mov
in
and
jge
test
xchg
mov
sbb
xor
mov
lods
and
cmp
cltd
add
adc
mov
cmpsb
xchg
call
loop
neg
js
imul
inc
fcompl
cmc
cli
stc
cmpb
ret
mov
lret
stos
mov
sub
cltd
rep
lock
mov
xchg
xor
inc
dec
ja
out
fwait
cmc
gs
cld
icebp
mov
mov
testb
adc
adc
or
xchg
mov
in
mov
push
jmp
dec
test
mov
pop
sbb
gs
xor
mov
or
in
out
or
lds
imul
shlb
cwtl
cmp
sub
lods
ljmp
mov
iret
push
xor
leave
mov
aaa
dec
imul
and
xlat
lea
push
test
inc
fstps
je
icebp
mov
xor
mov
dec
adc
xchg
fstps
aas
push
mov
cmp
cltd
inc
push
in
mov
cmp
dec
cmp
punpckhwd
addr16
mov
ljmp
movsl
jle
mov
mov
in
sti
loop
push
outsl
pusha
mov
stos
ds
iret
or
push
lahf
bound
dec
imulb
pop
xchg
pusha
sbb
mov
iret
sahf
xchg
notb
int
lock
mov
shll
inc
jmp
pop
loope
ljmp
jo
jae
lds
adcb
inc
iret
or
pop
roll
movsb
push
jae
push
or
mov
push
sbb
ret
pop
adc
leave
jb
insl
int
lods
addr16
pop
scas
cmp
decl
iret
cmp
sahf
dec
mov
sbb
adc
sub
xchg
push
into
pop
test
out
sub
out
js
mov
mov
fsubl
jae
roll
addl
mov
jecxz
mov
push
dec
and
es
jnp
mov
adc
rcll
pop
mov
hlt
and
stc
stc
xor
loope
jbe
push
push
int
xchg
mov
cmpsb
movsb
pop
adc
xor
and
or
mov
mov
repnz
jl
pop
jl
push
inc
cmp
notl
stos
cmp
mov
push
out
or
rclb
jmp
pop
incl
in
movsb
call
jb
cs
jae
movsb
mov
hlt
loopne
xchg
push
imul
ficoms
push
bound
add
daa
add
aaa
arpl
pop
fsts
mov
cmp
push
mov
ljmp
or
jmp
daa
std
jns
or
movsl
push
cmp
mov
sub
jg
mov
loop
jmp
sub
ret
into
hlt
dec
push
xlat
in
dec
mov
or
popa
fisubrs
scas
in
or
and
sahf
mov
xchg
outsl
inc
xor
inc
mov
in
leave
xorb
aam
mov
imul
adc
jnp
inc
loopne
sbb
dec
mov
idivl
ja
and
dec
xchg
rol
pop
inc
leave
vhaddps
and
fisubs
movsl
mov
xor
fldenv
scas
mov
xor
xchg
and
pushf
stc
xchg
imul
ds
in
enter
mov
jno
mov
mov
mov
mov
loope
rol
fmuls
setl
mov
cmp
rcrb
push
and
add
fstp
mov
cs
jae
and
es
fadds
jmp
add
xchg
test
push
sbb
mov
stc
fmul
rorl
xchg
iret
negb
mov
xor
push
jge
ds
cmpsb
jmp
add
adc
mov
push
call
cmp
leave
scas
xchg
and
jmp
decb
add
adc
das
fwait
aad
mov
popf
out
js
cld
fs
xchg
xchg
jno
lret
push
push
adc
gs
nop
ret
pop
psubw
test
mov
mov
es
data16
lret
cwtl
clc
inc
rcr
push
leave
lock
push
insb
js
int3
mov
push
push
out
push
add
push
negb
ja
icebp
adc
js
stos
shrl
lds
add
and
enter
rorb
ja
dec
insb
add
pop
cmp
inc
sti
dec
sub
shlb
sarb
dec
pushf
ja
mov
icebp
xchg
mov
push
mov
repz
pusha
xchg
pop
mov
popa
out
jp
in
lock
xor
jne
xor
wbinvd
xor
cmp
mov
jle
xchg
sbb
sbb
sub
mov
mov
incl
sub
rcl
cmp
scas
pop
xor
pop
cmp
lock
or
aam
test
jl
cmpsl
and
shr
and
add
mov
push
cmpsb
or
cmp
mov
lods
push
clc
or
inc
inc
or
sub
pop
xchg
jnp
xchg
mov
add
push
rorb
add
push
xchg
and
pop
nop
in
loop
or
cli
or
inc
mov
push
inc
sub
sbb
mov
xchg
jns
or
loop
jecxz
aad
roll
cmpsl
sub
in
xchg
adc
cmp
add
cmp
lea
mov
mov
cmp
lea
mov
jnp
movsl
adc
adc
in
ds
xor
jp
iret
jp
xor
mov
sub
or
and
mov
xchg
lds
add
xor
sub
and
mov
ror
lea
lock
and
enter
bound
cmp
pop
adcl
sbb
xchg
mov
and
inc
hlt
sub
loopne
and
push
pop
sbb
sarb
xchg
lock
jb
outsb
iret
push
in
test
test
stos
test
inc
adc
dec
addr16
mov
imul
inc
daa
and
subb
push
leave
addr16
movsl
fisubl
hlt
mov
cmp
test
push
mov
ja
imul
sub
and
push
inc
and
sbb
sub
sub
mov
sbb
jecxz
movsb
adc
xchg
pop
pop
inc
mov
mov
xchg
sub
out
aad
sbb
adc
push
or
xor
xchg
add
ret
mov
add
ret
bnd
xor
ljmp
pop
add
rcrl
xchg
mov
ss
xchg
push
xchg
sbb
push
popa
lret
frstor
push
lods
or
jecxz
fldcw
inc
pop
or
jmp
sbb
sti
and
into
hlt
xor
push
lods
subb
and
or
imul
mov
sbb
cmp
aam
add
pop
pop
aaa
loop
xchg
cltd
mov
pop
subl
sub
or
sub
lods
test
scas
dec
lcall
add
xchg
push
sbbb
sahf
pop
js
xchg
aaa
imull
les
pxor
fisttps
xor
add
xchg
mov
sub
into
xchg
mov
adc
cmc
test
pusha
push
enter
xchg
dec
aam
lcall
xor
sub
das
icebp
cli
data16
mov
dec
sbb
dec
dec
dec
mov
mov
cmp
cmc
nop
push
bound
out
mov
test
mov
mov
add
xchg
mov
mov
jns
test
ret
jle
jle
jns
scas
cmp
aas
data16
xor
andb
ret
lock
mov
or
push
icebp
jecxz
mov
push
jno
mov
sbb
sub
sub
mov
mov
jno
push
pop
pop
push
cltd
cwtl
popa
jl
bound
jb
jae
pop
or
mov
mov
mov
imul
lahf
gs
imul
nop
daa
inc
pop
mov
hlt
dec
sbbb
mov
into
sti
jp
jo
pop
stos
loopne
add
mov
and
cmp
int
sbb
enter
jne
mov
or
jb
imul
mov
cmc
inc
jmp
in
test
insl
xor
xchg
mov
xor
cmp
scas
subb
cs
sti
or
cmp
int
stos
dec
fwait
ds
cmp
mov
lods
inc
cmp
in
sbb
pop
or
jmp
je
jbe
cmpsl
cwtl
pop
mov
dec
sbb
mov
test
add
pop
jmp
lcall
pusha
ret
xor
aaa
js
ss
add
add
or
mov
mov
lret
cmp
pushl
or
mov
mov
iret
cmpsb
lret
rcl
lret
repnz
clc
sub
fdivl
sub
mov
cs
jae
insl
dec
mov
outsb
and
push
outsb
sti
or
in
xor
imul
scas
xchg
mov
daa
cmp
in
dec
clc
mov
mov
sub
cmpsb
pop
ret
xor
pop
lret
imul
shlb
cmpsl
les
adc
mov
mov
outsl
push
rolb
cmp
sub
mov
mov
xchg
inc
fsubrl
pop
mov
jp
mov
mov
outsl
push
mov
leave
mov
cmc
repz
jge
adc
outsb
jo
jns
inc
mov
sti
push
sarb
fisubrl
dec
pop
outsb
adc
adc
pop
cmpsb
les
dec
cmp
fdivl
pop
cmpsb
pop
sbb
or
jbe
mov
inc
cmpb
ljmp
repz
pop
push
xchg
jge
xor
int3
ds
cmp
fsubs
adc
push
pop
mov
adc
mov
ljmp
fistpll
pop
mov
bound
mov
push
add
imull
clc
movsb
xor
test
xchg
push
cmp
and
cmp
mov
insl
xlat
cltd
sbb
cmp
movsl
push
pusha
flds
cltd
and
ss
or
sahf
and
mov
dec
sbb
xchg
or
js
mov
cli
cld
and
mov
mov
add
and
or
sbb
mov
mov
mov
loop
fs
insl
sbb
jecxz
shlb
xor
adc
or
sbb
scas
ja
clc
sub
xor
stos
jb
pop
cmpsb
lods
or
jmp
pusha
lret
adc
jns
aad
and
pop
js
stos
arpl
or
dec
jno
sarb
ljmp
leave
movl
jns
out
enter
mov
adc
jae
leave
fwait
push
imul
aas
call
and
les
or
and
inc
cmpsl
test
sahf
call
pop
jnp
add
add
daa
and
pop
rclb
cli
stc
loope
mov
out
std
jbe
or
pop
ficompl
ret
int
adc
or
test
mov
and
push
call
int3
lods
leave
xchg
jae
repz
std
cmpsl
dec
pop
loopne
outsl
cs
std
mov
loop
pop
inc
mov
jo
imulb
inc
cmpb
scas
inc
icebp
jp
je
add
les
rcrb
pop
sub
sbb
jne
jnp
clc
pop
repz
scas
cmpsb
inc
jno
xchg
xchg
call
loopne
mov
inc
push
mov
cmp
rclb
fistl
push
lret
rcrb
test
lods
pop
and
sbb
push
mov
jae
ficoml
in
fwait
cld
mov
cmp
aaa
inc
shrl
xor
sbb
cmp
shlb
mov
fcomps
std
xchg
dec
int3
sbb
pop
xor
sbb
or
cmp
out
sbb
add
call
dec
cwtl
mov
test
and
or
push
or
lcall
repnz
test
call
outsb
or
sub
push
jnp
cmc
lods
mov
rorb
insl
cs
scas
shlb
fs
lcall
mov
gs
movsl
fadds
pushf
cmp
pop
xchg
mov
jmp
leave
addr16
jns
inc
pusha
in
cltd
xor
jo
push
jno
mov
and
pop
mov
pop
or
cmp
jp
in
pushf
jmp
pop
ss
addl
rorb
push
or
mov
push
out
push
repnz
and
push
faddp
pop
mov
adc
test
mov
or
xchg
testb
mov
roll
daa
popa
gs
hlt
lods
push
sub
pusha
cmp
adc
mov
jp
adc
ds
jbe
rcll
mov
sbb
mov
repnz
adc
or
inc
dec
mov
xlat
adc
inc
insb
mov
stos
pop
xchg
insb
dec
imul
push
mov
or
cld
push
or
xlat
jl
das
cli
mov
fiaddl
jno
or
icebp
imul
imul
jg
ret
cli
sub
subl
xlat
cs
cmp
sub
or
push
pop
push
lods
dec
mov
mov
shrl
fstps
pop
data16
sti
cwtl
movsl
out
iret
xorl
ret
cmp
mov
mul
adc
and
subl
imul
cmc
sub
inc
orb
fstp
pop
out
inc
and
ret
andl
sbb
jnp
mov
shl
or
or
jnp
stos
xor
stc
pop
push
mov
sar
push
clc
andl
adcl
push
mov
popa
imul
jo
mov
call
hlt
nop
add
dec
in
je
dec
call
sub
jmp
xor
movsl
mov
outsl
cmc
and
inc
cmp
mov
xlat
pop
fsubr
scas
mov
adc
ja
imul
cmp
add
dec
xor
lea
fwait
mov
inc
int
jae
mov
test
fistpl
mov
cmp
aad
fs
das
sarl
aaa
scas
fidivrl
push
sub
leave
loopne
std
or
sbb
out
fisttpll
fcmovne
sub
push
in
loope
lds
les
cmpsb
or
orb
inc
rcrl
mov
fs
or
mov
js
sti
pop
jecxz
ret
arpl
add
adc
cmp
xchg
inc
sub
mov
add
mov
sbb
inc
and
dec
cmpsb
cmp
mov
popf
add
xchg
insb
imul
movsb
andl
jecxz
or
mov
xor
mov
or
mov
push
dec
int
sbb
xor
leave
xchg
push
dec
mov
stos
xlat
jl
int
mov
xor
ds
mov
stc
dec
dec
and
pop
cmp
lahf
and
jl
xor
xchg
out
lcall
dec
sbb
js
push
push
test
enter
fdiv
xchg
xlat
ljmp
leave
fxch
pop
imul
push
in
loop
dec
loopne
movsl
add
cmp
test
pushf
sahf
jo
cmp
adc
push
cmp
fs
adc
mov
xor
pop
imull
xchg
push
ret
sub
out
xchg
bound
inc
add
push
and
and
scas
mov
lret
push
add
add
outsl
lahf
dec
xor
cwtl
lock
adc
xchg
dec
cmpsb
mov
cmp
cmpsb
stos
mull
push
rcrb
es
adc
imul
or
sbb
pop
mov
mov
cli
mov
loop
inc
or
and
sbb
icebp
dec
mov
bnd
and
ja
fs
fs
xor
daa
in
xchg
pusha
xor
movsl
mov
les
aaa
cmp
loopne
popf
les
sbb
or
adc
mov
sbb
pop
and
aam
pop
dec
xlat
aaa
gs
mov
dec
sarl
mov
pmuludq
test
adcl
add
dec
fwait
lds
rcll
mov
in
clc
mov
add
cmpsl
popf
mov
jns
push
std
bound
mov
xor
xor
iret
and
xor
das
cmpsb
xchg
add
sbb
add
or
js
ss
or
dec
pop
shll
cmp
mov
test
sub
push
xlat
xor
mov
push
push
ds
push
xor
push
mov
pop
pop
xchg
dec
ja
cmp
fsubrs
cmp
addr16
ret
dec
hlt
jae
mov
push
xchg
nop
stos
gs
popf
sbb
into
or
add
rclb
mov
call
test
pop
xchg
stos
xor
cltd
mull
outsl
jp,pt
mov
pop
das
divl
arpl
mov
mov
stos
xor
jo
or
jmp
xchg
dec
pop
jae
inc
sbb
call
scas
sub
sbb
iret
lods
out
cmpl
nop
je
cli
sbb
sub
mov
push
jo
or
jo
lea
stos
push
in
cli
int3
jo
lock
jmp
jb
cmp
push
or
lea
push
or
cmpsl
add
clc
xor
or
adc
cmp
nop
and
test
fimuls
ja
imul
cld
jo
mov
sbb
out
fimull
jae
mov
pop
fmul
aas
out
inc
pop
cmpsl
test
and
xor
fdivrp
in
jbe
iret
fldcw
cmpsb
mov
sti
lret
xchg
lahf
mov
cmpb
test
fbld
mov
pop
mov
sbb
sub
arpl
popf
js
push
cwtl
addr16
mov
pop
xor
sub
nop
adc
out
xorb
dec
jecxz
or
orl
mov
pushf
out
jge
xchg
xchg
and
ja
jne
xchg
dec
jge
jno
aas
scas
repz
or
xchg
jp
jle
les
cmp
dec
inc
sub
je
gs
push
add
in
ret
sahf
cmpl
mov
insl
inc
add
movsb
adc
add
in
sbbl
push
mov
xchg
mov
inc
insb
sub
lods
aad
sub
push
dec
mov
in
aad
insb
je
icebp
repnz
add
cmp
test
and
fldcw
jae
imul
or
insb
or
xchg
mov
push
and
enter
in
and
and
xlat
push
lods
push
adc
test
lock
xchg
mov
sbb
into
adc
dec
inc
rcrl
js
adcb
outsl
shr
pop
flds
movsl
movsb
push
xlat
jge
and
rolb
ljmp
dec
popa
pusha
es
adc
push
arpl
movl
mov
jmp
fwait
pop
lret
bound
ja
gs
push
test
pop
mov
xchg
and
mov
push
xchg
notb
or
xor
mov
fldenv
jmp
inc
add
add
fdivl
mov
dec
pop
pop
rclb
cmp
mov
xchg
mov
sub
into
jp
and
xchg
sbb
jg
add
xlat
cmc
call
lcall
push
cmp
iret
pusha
dec
mov
mov
std
decb
popf
dec
cmpsl
push
sbb
adc
aas
mov
ret
sbb
stos
jp
jge
sub
test
cmpsl
lret
dec
xchg
sub
lds
inc
jae,pt
push
push
add
test
sbb
stc
or
mov
xor
imul
xchg
scas
and
repnz
pushf
push
jmp
es
sub
call
xchg
lods
fists
push
inc
adc
fidivl
push
mov
movsb
adcl
cwtl
inc
ljmp
ja
sbb
into
cmp
inc
push
sub
lret
je
mov
jb
jnp
movsb
rcrb
dec
dec
stos
aas
inc
pop
ja
sahf
cmpsb
mov
cmp
sti
jl
shll
push
mov
ja
test
inc
ret
or
fcomp
push
lret
testb
xor
addb
jae
bnd
dec
or
insb
lret
loopne
insb
cmp
insl
cmpsl
sub
mov
xchg
push
mov
inc
jnp
imul
out
inc
lods
xchg
repz
push
sub
xchg
ds
xchg
arpl
ja
mov
jno
push
xchg
xchg
ljmp
lcall
js
sub
lcall
cmp
add
and
jns
lret
pop
ljmp
in
xor
cltd
sbb
je
add
pusha
testb
mov
mov
pop
cmp
cmp
aas
adc
stos
fsub
je,pt
cmpsb
jmp
jae
fnstcw
popa
jae
jae
mov
cmpb
jne,pn
mov
hlt
loop
in
fimuls
movsl
adc
adc
test
adc
inc
lds
out
cmc
cmpb
push
decl
xchg
les
xchg
mov
and
push
fildl
jg
scas
mov
or
lcall
mov
daa
add
lret
sahf
jle
xor
cld
insb
cmpsb
jecxz
push
jmp
int
pusha
xor
mov
push
xlat
test
arpl
mov
inc
lods
cltd
pushf
sbb
aaa
outsl
fs
sbb
int
popa
sbb
ficoml
scas
mov
daa
jno
inc
pop
jg
add
pop
nop
and
fcompl
notl
popa
insb
pop
pop
cmp
cltd
sub
lret
loope
mov
sarb
and
faddp
add
outsl
push
faddl
or
iret
pop
and
stos
inc
icebp
cld
adc
push
or
xchg
repz
adc
pop
push
xchg
popf
fcomps
bound
push
jnp
addb
sbb
roll
enter
dec
push
or
outsl
cmp
aaa
push
add
sub
sbb
adc
cmpsb
sarl
mull
jmp
push
fwait
jne
addb
mov
movsl
rcrb
fistpll
outsl
fnstsw
cmp
push
bound
mov
mov
mov
mov
xchg
mov
xchg
int
in
je
loope
adc
icebp
loop
or
xor
jb
out
popf
mov
daa
push
in
dec
inc
cmpb
pop
jp
and
imul
out
sub
xor
loope
int3
ret
mov
stos
lds
fcompl
mov
fidivrl
mov
filds
add
mov
cmp
cmp
sti
sar
xchg
js
mov
shll
in
and
incb
mov
imul
shrl
ret
inc
cmpl
popf
mov
or
sub
inc
test
stos
out
imul
pop
jno,pt
adc
dec
enter
jbe
xchg
stos
fwait
xor
imul
int
sub
xchg
or
repz
stos
lock
aaa
mov
push
dec
mov
sub
add
mov
cld
fs
aam
push
sub
lds
into
stos
mov
dec
rorb
jb
fdivrs
out
inc
mov
push
sub
cmp
jb
insb
gs
mov
loope
inc
addl
mov
in
mov
mov
repnz
or
add
mov
adc
int3
sub
lock
rol
cmpl
clc
or
add
popf
add
cmp
mov
stos
dec
std
mov
adc
push
dec
cmp
les
in
push
bound
arpl
mov
fs
inc
popf
jae
sub
data16
cld
nop
push
icebp
cmp
lret
rcrl
pop
cli
dec
fs
sub
gs
ljmp
dec
test
push
cmp
jecxz
mov
inc
adc
mov
cmp
push
mov
add
jne
sub
insb
cmp
dec
mov
adc
jecxz
cwtl
incl
cmp
xchg
adc
jmp
gs
mov
push
sbb
add
fs
push
ds
in
sub
jno,pn
dec
repz
add
stos
lret
lds
outsl
push
in
insb
fnstenv
pop
xorl
in
loopne
pop
ficompl
lret
jl
pop
fldl
andb
cltd
icebp
stos
jecxz
mov
mov
lods
jg
pushf
out
push
cs
sub
adc
or
aaa
addl
lods
das
dec
pop
add
sti
aas
shlb
jno
pop
mov
cmp
pop
ds
fisubs
insl
jno
or
cmp
cwtl
imul
ljmp
push
cwtl
xlat
iret
popa
popa
inc
es
adc
fildl
aas
inc
jg
das
sbb
aam
pop
aam
daa
inc
sbbl
jno
imul
xchg
sti
test
mov
das
adc
xchg
dec
std
test
jne
xchg
xlat
dec
dec
rolb
out
leave
jmp
sahf
inc
sub
xchg
cmp
and
mov
sti
pop
fmuls
sbb
xor
jo
xor
add
aas
std
fstl
inc
insb
outsl
push
ljmp
inc
cli
and
cmp
in
dec
outsb
aas
cmpsb
or
mov
mov
inc
je
dec
imul
dec
test
aas
jnp
dec
cwtl
xor
arpl
mov
cmove
insl
fldenv
adc
adc
sti
stc
lahf
dec
rcr
xchg
aad
and
xor
mov
popf
insb
mov
mov
sub
pop
sahf
outsl
aam
cmpsl
sahf
xor
mov
aam
popa
repnz
pop
xor
sub
push
test
cmp
stos
jno
pop
test
dec
or
pushl
mov
adc
jl
addb
ja
jge
scas
addr16
dec
push
adc
add
bound
jle
aaa
pop
mov
push
sahf
fsub
ja
inc
ficompl
pusha
sub
mov
repz
enter
aaa
loope
pop
jle
ljmp
lahf
jns
js
aad
sti
inc
iret
and
mov
pop
mov
and
jle
lcall
xchg
sub
inc
fildll
cli
clc
mov
push
fstl
xor
lds
jnp
es
fiadds
mov
mov
xchg
out
adc
sbb
shlb
out
fidivs
fimull
sub
fmuls
sub
mov
addr16
fwait
pop
ja
or
xchg
daa
cmc
cwtl
icebp
pop
lret
insb
jl
sbb
out
add
or
sbb
sbb
jns
cs
and
je
hlt
lds
gs
mov
mov
jg
imul
nop
pop
aas
mov
push
out
or
inc
mov
stc
inc
aad
jbe
mov
sub
dec
pop
rolb
scas
out
adc
insl
mov
mov
fs
mov
mov
sub
jo
aas
in
movsl
lret
mov
add
mov
xorb
ficomps
in
pop
fcomps
movsb
fisubrl
ljmp
gs
int
jecxz
mov
sbb
adc
fs
int
xor
jbe
pop
push
imul
repz
dec
push
add
push
cmp
gs
sbb
xor
imul
and
xchg
or
push
adc
orb
imul
cmp
xor
iret
pop
dec
aaa
ret
cmp
add
xor
sub
fdivr
sub
xor
stc
ret
loop
xor
pop
sub
popa
inc
sub
mov
mov
sti
cltd
lret
jno
and
cld
movsl
inc
fistl
or
inc
addr16
jbe
and
in
sarb
sbb
cmpsb
mov
cmc
divl
adc
idiv
cmpsl
ss
out
mov
loope
xchg
pop
scas
rclb
lret
repz
xchg
scas
xchg
sub
out
jne
mov
out
adc
aas
xor
push
rcrb
pushf
daa
pop
fstpl
orl
adc
cli
jmp
jae
out
pop
cwtl
mov
movswl
out
jne
in
test
leave
insb
jb
xchg
jecxz
clc
mov
jae
pop
push
fisttps
sbb
mov
and
mov
xlat
push
mov
pop
mov
jns
jge
outsb
cmp
test
cld
push
adc
popa
mov
and
cwtl
mov
cmp
or
mov
dec
mov
outsl
jne
xor
and
aas
mov
xor
pop
jle
sbb
nop
addr16
push
movsb
push
bound
sbb
mov
push
outsl
subb
add
je
jns
sbb
shll
push
ja
sub
rclb
sbb
xchg
notl
sbb
adc
xor
push
les
insl
xlat
sti
or
cltd
xlat
mov
lahf
pop
imul
shlb
lret
dec
mov
xor
mov
xor
push
push
xchg
loope
repnz
enter
and
push
ja
negb
mov
or
jbe
mov
inc
add
cmp
mov
push
xchg
fistl
add
fcoml
push
fdivrs
subl
and
adcl
call
cmp
adc
les
out
outsb
outsl
sbbb
sbb
xor
and
popf
push
pop
and
mov
in
inc
loop
inc
mov
aas
cmp
shlb
mov
inc
pop
orb
mov
and
pop
fbld
add
mov
out
loop
bsf
jo
dec
adc
mov
cld
das
push
cmp
outsl
sahf
xchg
inc
cmp
adc
ljmp
pop
lret
inc
jne
lret
add
testb
xchg
dec
pushf
add
inc
outsb
mov
jnp
sbb
push
cmp
ret
dec
xorl
into
xor
pusha
push
mov
movsb
leave
add
stos
aam
mov
in
add
xor
out
arpl
pop
imul
insb
jmp
mov
lret
lahf
scas
sarl
mov
out
pop
aas
in
repnz
neg
bound
cmp
cmpl
in
adc
adc
call
pop
xchg
dec
cwtl
icebp
mov
or
push
std
sub
iret
push
dec
popa
int
dec
xchg
mov
push
or
nop
inc
push
das
and
ja
out
add
cli
or
xchg
xor
sub
mov
pop
pop
inc
push
mov
mov
lock
push
push
push
xchg
dec
iret
mov
sub
mov
xorl
shll
sahf
dec
pop
ljmp
xchg
add
push
clc
stos
or
jno
movsb
fisubrl
sbb
xchg
jns
std
cmp
push
addr16
cmp
inc
out
jae
out
mov
cs
mov
fs
inc
mov
out
scas
dec
int3
cmp
arpl
sub
mov
push
dec
sbb
xor
mov
inc
inc
cmc
icebp
lret
sub
outsl
mov
outsb
xor
loop
outsl
fsts
push
mov
push
or
inc
lcall
daa
pop
popa
pop
cmp
push
cmp
cmp
in
pop
scas
outsl
xchg
shr
pop
imulb
dec
xchg
icebp
aad
adcl
dec
pusha
sbb
mov
es
push
je
cld
les
flds
dec
add
outsb
inc
mov
cmpsl
lret
sub
adc
xchg
xchg
jle
or
orl
sub
bound
fisttpll
push
rcl
cmp
fildll
leave
mov
fldt
sub
jae
mov
pop
test
stos
aaa
inc
and
add
insb
in
push
cmp
lock
fs
movsb
cmp
je
mov
sub
pop
hlt
test
sub
jp
jb
add
imull
sbb
jecxz
mov
outsl
or
sbb
sub
push
adc
stos
mov
cltd
aam
jns
fcompl
xchg
jl
call
enter
clc
fimull
mov
das
push
das
testb
mov
divb
stos
mov
add
pop
ds
sub
ret
mov
jae
mov
test
lea
in
mov
test
iret
rcrb
mov
push
mov
xchg
xchg
xchg
add
je
inc
repz
je
rcrl
push
rorb
adc
stos
mov
xchg
mov
lret
mov
mov
div
mov
inc
enter
test
ss
sbb
push
aam
cmp
enter
inc
push
xchg
js
xchg
jecxz
pop
data16
jge
hlt
mov
push
sub
push
cmpsb
movsl
mov
popf
insb
jle
fisttps
movsb
scas
fnstenv
inc
cmp
pop
negl
inc
dec
fldenv
sub
lods
fucompp
dec
dec
sarb
adc
push
cwtl
mov
push
cmpsb
mov
jne
movsb
std
mov
xchg
jo
sbb
lcall
and
stos
push
mov
mov
xor
filds
lods
xchg
push
ret
adc
xor
mov
ret
rorb
in
push
push
pop
repz
in
aam
insb
test
pop
std
pop
mov
rcl
push
cmp
fistpl
fidivs
adc
mov
sbb
int
mov
sti
cmp
aam
xlat
xor
and
pop
push
dec
pop
push
jb
daa
jae
int3
repnz
lock
bound
pop
inc
into
aam
dec
jno,pn
push
add
test
xor
pop
cmp
std
pop
xchg
pop
imul
or
setb
pop
inc
jp
mov
cmpsb
bnd
sbb
cmpsl
mov
cltd
and
rolb
aas
rol
dec
add
fdivl
xor
cli
les
repz
dec
cltd
ds
jns
fadds
jg
or
call
add
and
mov
add
sub
out
call
je
jmp
or
fwait
mov
adc
dec
movsl
hlt
jp
xchg
xor
mov
xor
loop
fistl
out
mov
adc
aam
add
aam
test
sbb
movsl
mov
sbb
test
xchg
dec
faddp
es
xchg
out
lods
inc
aas
mov
inc
movsb
fdivrl
lods
stos
pop
lods
mov
call
adc
xchg
xchg
and
dec
ja
or
mov
mov
aam
push
mov
adc
clc
jmp
imul
xchg
mov
pop
or
lret
inc
loope
push
xchg
lock
fisttpll
ljmp
xchg
mov
jb
mov
out
lods
jne
scas
mov
repz
push
sahf
jae
push
clc
adc
pop
sub
push
stos
test
ss
mov
jae
and
in
pop
sti
push
lock
xchg
and
lcall
aaa
sbb
ds
imul
push
fwait
cmpsl
jmp
movswl
xor
js
shrb
jns
sar
ficompl
ret
mov
lahf
dec
add
sbb
in
shll
stc
jae
lock
out
jp
and
mov
sub
movb
lock
out
fs
mov
rclb
mov
jne
pop
sub
jns
push
mov
sbb
dec
inc
rcl
into
andb
fcmove
dec
sbb
das
negb
ret
ljmp
sub
fisttpll
inc
adc
movsl
sbbl
in
xchg
outsb
xor
rolb
push
popf
out
push
rcrl
lods
mov
int
or
jnp
jp
or
jecxz
cli
or
or
test
xchg
adcb
pop
leave
loopne
mov
lods
out
or
ss
je
sub
fwait
or
xchg
shrb
pop
cwtl
mov
repnz
iret
test
cmp
scas
shl
cltd
add
dec
pop
andb
cmp
insb
dec
sbb
mov
sti
aaa
rcl
lahf
push
clc
add
cmp
mov
js,pn
mov
inc
push
cmp
pop
cmc
xchg
jle
mov
mov
movaps
fwait
mov
nop
popf
sbb
fnstenv
in
jne
lock
addr16
or
push
shl
ja
xor
mov
jno
clc
stos
pop
pop
sub
and
sar
mov
call
and
cmp
add
xchg
dec
sbb
repz
test
imul
add
jmp
dec
cltd
adc
pop
movsl
fsubr
cld
mov
cltd
repnz
aam
mov
in
mov
push
mov
or
sub
daa
pop
test
mov
inc
xchg
aam
lock
cmp
adc
dec
jmp
adc
loop
subl
sar
into
pop
jno
out
cs
push
mov
push
lea
dec
add
xchg
mov
roll
or
movsb
testb
insl
in
hlt
sub
adc
mov
jp
mov
xor
mov
sbbb
out
lahf
roll
push
mov
or
and
or
test
push
or
xor
movl
aad
es
mov
jb
cmp
xchg
xchg
jp
mov
xlat
sbb
lods
cmp
cmp
movsb
jo
push
sbb
mov
std
sub
test
movsl
sbb
add
jo
push
mov
inc
cltd
jp
bound
sahf
mov
loopne
je
out
pop
xchg
xchg
pop
repnz
add
aam
add
js
aas
xchg
sub
out
add
or
jecxz
ds
daa
lods
mov
sbb
push
xor
mov
ljmp
lds
xor
jecxz
cmp
push
xlat
dec
lods
push
mov
rcrl
pop
push
mov
jae
xchg
je
or
jle
sub
push
jnp
leave
cmp
insb
inc
push
cmc
in
cmc
pop
push
rcrl
int
xchg
aad
test
sub
adc
out
jge
jecxz
setle
test
cmpsb
test
mov
dec
imul
pop
inc
pop
push
pop
popl
push
cltd
inc
push
mov
push
dec
pop
jp
aaa
dec
mov
imul
mov
filds
in
dec
push
aaa
insb
out
sbb
sub
mov
add
out
or
inc
sbb
xchg
rcrl
adc
mov
adc
inc
jmp
fucomi
mov
add
and
jb
sub
lret
jmp
mov
xor
pop
decl
push
sub
mov
push
mov
inc
inc
sbb
enter
jge
mov
mov
fwait
stos
mov
and
pop
push
adc
aaa
sbb
xchg
std
sahf
shrb
inc
sub
cmp
ss
adc
and
inc
xlat
mov
and
mov
cmp
pop
pop
dec
xor
mov
lods
sub
or
mov
add
fmuls
push
les
sbb
add
jno
ret
bound
mov
jecxz
add
dec
jne
adc
ja
inc
jns
sub
lods
stc
jl
push
sarb
repnz
or
mov
xchg
inc
mov
test
scas
pop
cmp
mov
push
popa
movsl
cmc
inc
ja
in
push
leave
out
mov
test
pop
scas
xchg
ss
rcrl
in
aam
mov
mov
adc
push
xchg
push
fcmovnb
cmpsl
test
mov
dec
or
int
mov
repnz
imul
pop
pop
jmp
div
add
pop
orb
popl
test
les
push
mov
stc
jo
outsb
jle
adc
lods
aaa
and
dec
jl
xorb
add
xlat
dec
shlb
pop
das
adc
out
xorb
gs
xor
nop
enter
bound
pop
lea
test
mov
sbb
fildl
pop
addr16
xor
leave
mov
pop
pop
daa
mov
in
xchg
imul
sbbb
jnp
or
in
xchg
mov
pop
repz
inc
mov
mov
jecxz
out
scas
lods
nop
mov
shll
add
out
xor
pop
addl
stos
xor
or
lds
mov
das
jno
jno
mov
xor
mov
mov
push
pop
ret
cmpsl
out
js
movsl
loop
sbb
and
iret
mov
arpl
fs
imul
icebp
insb
sub
test
pop
icebp
dec
pushf
repnz
dec
dec
loop
popl
fbld
sbb
and
pop
push
xchg
push
mov
sti
push
notb
icebp
shrb
sub
imul
outsl
outsb
shrl
pushf
pop
mov
dec
cmp
xor
push
bound
arpl
pop
mov
add
and
push
push
jge
xchg
cmp
pop
jecxz
push
rcrb
dec
fdivs
push
and
dec
mov
ret
in
lds
and
inc
dec
loop
or
add
mov
lock
pusha
roll
lcall
fwait
mov
or
imul
arpl
push
mov
and
mov
push
arpl
sbb
push
mov
repnz
push
popf
push
int
std
pop
sbb
das
ret
into
push
adc
add
xchg
mov
pop
xlat
push
mov
push
mov
xor
inc
aad
fisubrs
aaa
fnsave
mov
add
out
cld
aam
test
lret
xlat
nop
test
jno
jo
aas
cs
das
neg
aad
jmp
jmp
sbb
mov
jl
pop
imul
je
inc
and
repnz
push
mov
push
outsl
add
inc
inc
cmp
xchg
xor
rcl
ret
es
test
fucomip
enter
hlt
ret
mul
adc
mov
ret
xlat
out
divl
pop
inc
lods
mov
mov
shrl
imul
sti
mul
jmp
cmovge
int3
cmp
sub
nop
testb
rorl
fldt
cmpsb
jno
std
movsb
sbb
cmp
cli
ja
push
mov
dec
pushf
push
rolb
inc
je
inc
or
call
outsl
rolb
xor
adc
or
ret
movsl
ja
imulb
push
dec
mov
sahf
mov
loope
dec
fwait
loop
jge
add
add
push
jne
push
mov
outsl
aam
inc
test
pop
jo
mov
jle,pt
stos
jmp
sbb
and
stc
and
mov
js
mov
xchg
cmp
add
imul
movsb
sbb
pop
dec
or
fnstsw
xor
mov
inc
add
and
fsts
or
pop
xchg
sahf
or
cmp
fstpl
cmpsl
lahf
test
dec
mov
test
aad
adc
shr
ss
shlb
scas
pop
lret
add
aaa
mov
leave
add
mov
push
jl
inc
jae
enter
xlat
add
call
pop
add
stc
dec
mov
lahf
hlt
shlb
aam
clc
adc
sub
mov
cmc
mov
sbb
cmp
int
loopne
xor
xchg
xchg
xchg
xorl
aad
and
or
xor
sti
push
xchg
mov
jecxz
pop
call
xchg
adc
jbe
sahf
push
into
rcr
cli
jno
pushf
push
cltd
lock
data16
ds
cmp
add
mov
sbbb
arpl
xchg
inc
add
imul
cmp
mov
sub
jp
das
movsl
sub
or
mov
mov
rcrl
adc
pop
pop
lahf
mov
sbb
inc
std
push
popa
mov
insb
mov
aas
pop
roll
xchg
add
scas
mov
nop
inc
cs
pop
or
adc
xchg
push
pusha
shll
push
xor
mov
or
mov
ret
add
popf
lock
rolb
std
arpl
pushf
sub
jbe
mov
dec
xor
aaa
or
jae
fwait
int3
addr16
stos
cmp
sub
push
lods
fs
out
jbe
jle
cli
out
fistpll
sub
jp
jnp
shlb
sahf
adc
jl
into
call
inc
pop
in
ljmp
dec
adcl
xchg
lods
stos
push
in
cltd
mov
sbb
jecxz
xchg
jg
ds
xchg
xchg
ficoml
insl
loop
ret
xor
fwait
iret
add
in
xchg
xchg
dec
inc
cmc
sarb
jle
xchg
fistpl
pushf
hlt
inc
jns
lahf
lahf
push
dec
xor
test
ljmp
fdivr
and
daa
in
sub
inc
loope
mov
mov
pop
cmpsb
lcall
lahf
cwtl
xchg
icebp
sbb
xchg
ret
push
jmp
mov
add
lods
inc
lcall
inc
into
int
jne
cmp
jge
imul
shll
outsb
xchg
int3
popa
lods
inc
fsubl
or
or
pop
cmp
jl
imul
fistps
mov
sbb
and
push
mov
lcall
iret
addr16
lea
hlt
in
xchg
test
loope
xor
xchg
add
and
testb
jl
or
sbb
dec
mov
cltd
lock
ja
mov
ds
jmp
movsl
or
hlt
lahf
cmp
and
fs
and
push
jl
and
xor
fnsave
pop
sub
push
loope
adc
adc
or
inc
add
cwtl
das
xchg
and
lock
jno
pop
adc
mov
fnstcw
test
push
jae
pop
mov
rclb
cmp
ffree
add
mov
inc
repz
pop
cmp
xchg
mov
pop
mov
cmc
jg
daa
addr16
mov
dec
dec
std
stos
push
js
and
or
jmp
imul
mov
mov
push
inc
ret
pop
nop
pop
aam
or
rcrb
mov
fbstp
and
mov
pop
mov
pop
sbb
push
adc
ror
inc
ss
popa
or
mov
cmp
dec
push
lahf
dec
fistpll
xchg
sahf
jmp
mov
loope
xor
test
jmp
sub
outsb
pop
ss
adc
dec
rclb
xchg
mov
mov
data16
push
push
into
sarl
insb
arpl
aaa
cli
ret
or
fisubs
cwtl
test
dec
je
xor
fldl
rcr
popa
adc
ljmp
inc
sbb
lret
mov
scas
pop
xchg
push
loope
jp
or
mov
xchg
lahf
mov
or
jmp
mov
push
mov
xchg
sti
scas
bnd
lods
aaa
inc
xor
or
ja
fwait
cmp
jecxz
subl
xchg
lods
push
aaa
sti
in
lds
sti
jno
pop
xchg
std
popa
or
xchg
les
test
clc
jp
stos
pop
imul
xor
ljmp
cmp
jo
lret
push
test
jae
mov
imul
shrb
mov
pop
mov
mov
pop
push
scas
jecxz
inc
xchg
xlat
adcb
cmpsl
roll
fs
jbe
int
int
jae
add
pop
dec
sti
add
mov
imul
mov
or
faddl
push
and
cmpsl
adc
adc
mov
icebp
or
jmp
mov
mov
dec
mov
inc
or
add
call
add
test
out
dec
sub
lcall
pop
sbb
mov
jmp
cmp
push
dec
pop
sbb
mov
shll
mov
cmp
push
aaa
xchg
pusha
mov
je
out
stos
xor
das
xchg
adc
jnp
mov
in
cld
negb
xchg
cmp
xchg
jp
mov
stos
aam
fdivs
or
neg
add
dec
and
mov
cwtl
inc
lods
sub
pop
sbbl
and
xor
fidivrl
pop
test
rclb
sbb
inc
movsb
push
pop
scas
aaa
scas
ret
sbb
inc
or
mov
or
movsb
sbb
mov
jle
aam
cmp
mov
pop
cmp
das
mov
add
aaa
imul
mov
mov
add
mov
lds
orb
cwtl
and
shl
pop
sub
jno
test
mov
cmp
sbb
dec
outsb
pop
dec
data16
add
add
push
cwtl
repnz
mov
xor
lods
fnstenv
xchg
cmpsl
test
popa
mov
cld
cmpb
sub
xor
call
icebp
adc
cwtl
in
push
jb
jl
lods
fwait
stos
lods
cli
mov
ja
dec
adc
mov
in
fscale
cmc
mov
jae
add
mov
fstpl
les
cmc
cmpl
push
inc
addb
mov
icebp
out
cmp
mov
sbbb
cmp
fcoms
nop
test
mov
cmp
test
xor
sub
inc
xacquire
or
mov
jecxz
push
inc
dec
jg
push
insb
cli
popa
mov
cmp
insl
push
xchg
es
in
cmp
scas
std
pop
pushf
dec
mov
add
adc
jmp
and
dec
cmp
sbb
cmp
loope
aaa
inc
mov
clc
das
mov
dec
xlat
outsl
pop
add
in
sbb
ja
push
arpl
imul
dec
leave
sahf
lds
add
gs
adc
jo
int3
loope
stc
mov
xor
int
or
pop
rorl
lock
sti
repz
dec
iret
icebp
je
cmp
out
xchg
popf
ds
shlb
and
aaa
dec
mov
repnz
or
pop
das
xor
pop
jle
popf
xor
sbb
sbb
jnp
insb
icebp
dec
arpl
ljmp
pop
popa
push
es
rolb
xor
adc
sbb
and
fldl
pop
xor
sub
loopne
xchg
mov
sbb
add
inc
leave
and
lods
jo
add
pop
xchg
mov
xorl
sbb
mov
sub
daa
sbb
jl
por
sti
adc
je
mov
push
sub
lds
cmp
sbb
cmp
xlat
push
mov
ret
mov
inc
shll
in
and
stos
outsl
lcall
iret
das
stc
cli
sbb
xchg
fs
jae
ret
lret
or
or
stos
push
in
stc
xchg
repz
jmp
dec
cld
push
or
jne
negl
adc
cwtl
hlt
rcrb
sbbl
clc
pop
mov
mov
mov
outsb
lds
rolb
aaa
mov
rorb
inc
mov
sahf
lea
or
pop
inc
sub
cmpsb
popf
stos
sti
icebp
cmp
fcmovu
or
test
jbe
pop
add
pop
test
lock
daa
cli
aas
sahf
in
xchg
rol
es
or
out
jno
jmp
and
por
sub
stos
ja
adc
xor
lods
dec
xchg
pushf
stos
sahf
dec
incl
jns
cmp
xchg
pop
fsubl
data16
adc
sub
push
psubw
pop
out
cwtl
sahf
insb
aad
movb
mov
jae
loopne
cld
dec
inc
inc
imul
mov
dec
xchg
jp
bound
outsb
lahf
in
cmp
or
cltd
xchg
xlat
dec
add
mov
aas
cli
inc
ret
je
and
mov
inc
aaa
sbb
push
adcb
int3
sbb
bound
leave
push
xchg
nop
cmpsb
je
outsb
jge
iret
cmp
in
xlat
js
test
jae
pop
mov
nop
inc
inc
fs
js
push
jbe
fisttpl
sbb
in
push
test
jg
or
mov
in
fidivs
and
fcomps
pop
xorb
aam
xor
movsl
push
inc
imul
in
cwtl
stc
mov
sub
sub
sub
cmpsl
insb
mov
xor
add
pop
fnstenv
push
popa
repz
adc
jge
bnd
sahf
sbb
out
aam
or
test
out
jae
lea
dec
cmp
push
push
rorl
mov
mov
data16
and
mov
xchg
loope
mov
push
cmp
ds
stos
add
jbe
stos
imul
xor
fwait
into
inc
cs
cmp
mov
xchg
test
adc
jg
lods
xor
int
ds
add
add
push
add
sbb
sarb
stos
cmpsl
mov
xor
in
xchg
mov
sahf
sbb
mov
mov
pushf
mov
cmpsl
add
cmpsb
mov
in
push
fimull
scas
hlt
xchg
lcall
insb
pop
push
test
cs
iret
xchg
lods
xchg
scas
sbb
mov
cltd
mov
sub
mov
daa
jne
popf
mov
xor
and
scas
jno
outsb
mov
decl
in
push
jnp
cmp
bound
in
sub
sbb
ja
xchg
insl
mov
mov
leave
ds
fnstsw
cli
clc
pusha
cmpsb
scas
repz
xor
pop
adc
jns
push
xchg
repnz
in
inc
outsb
ret
js
jne
cmpsl
into
das
cmp
inc
inc
add
add
push
sar
lods
mov
fstps
icebp
lds
int
add
push
inc
aad
xor
inc
mov
or
xor
je
outsl
fstl
and
daa
fsubrs
decl
cwtl
jmp
fdivrl
mov
inc
xchg
mov
dec
sbb
lock
popf
arpl
mov
push
jno
rcr
push
push
dec
inc
push
lods
xchg
lods
adc
test
inc
xor
mov
rcrl
inc
xor
jmp
cmp
aas
push
test
or
orb
inc
xchg
cmp
loop
mov
xchg
adc
jg
jbe
jno
xor
mov
adc
testl
ja
sbb
mov
lods
xor
sahf
cmc
into
inc
fistpl
bound
leave
les
sbb
dec
jmp
sahf
inc
lea
mov
mov
mov
fcompl
nopl
sbb
cmp
mov
movsl
sti
in
in
dec
test
sub
pusha
js
pusha
jnp
ret
fwait
les
pop
and
andb
sub
add
xchg
addr16
sbb
sub
inc
xchg
in
xchg
pushf
mov
mov
push
insb
dec
movl
lret
fwait
es
add
or
std
pop
add
ss
and
out
imul
lods
add
leave
pop
hlt
js
sub
data16
les
push
loopne
jnp
add
push
sahf
push
in
jne
lds
mov
pop
enter
fwait
lea
push
sbb
inc
adc
into
mov
sub
inc
pop
add
cmp
loopne
stc
mov
icebp
leave
mov
xchg
ss
mov
add
pushf
loop
je
cmp
and
cmp
mov
sub
lret
xchg
test
mov
cmp
pop
loope
into
pop
add
sub
add
ja
std
xchg
xor
mov
shr
mov
mov
adc
movl
loope
inc
or
testb
pop
mov
mov
cmp
insb
inc
sbb
jmp
add
sub
xchg
or
aaa
mov
pop
mov
sub
movsb
test
jl
mov
jmp
icebp
push
mov
adc
cmp
push
nop
out
jno
popf
mov
xor
mov
jae
shrl
mov
jl
xchg
mov
xlat
stos
sbb
or
jno
jno
pop
repz
sti
mov
subl
xor
jmp
ja
pop
lods
mov
pop
jne
scas
repz
sbb
fdivp
push
jmp
pop
jbe
stos
sarb
push
out
dec
push
mov
rorb
adc
xor
sbb
xchg
scas
mov
scas
adc
leave
cmp
leave
je
sbb
dec
push
mov
scas
push
cwtl
jl
xor
out
mov
call
pop
sahf
jge
rcrl
xchg
mov
add
cmp
sar
pop
fs
lds
ret
mov
dec
lock
adcb
sub
in
and
stos
cwtl
enter
test
mov
jl
test
dec
sbb
fstps
scas
ljmp
bound
lea
testb
pop
inc
ja
push
lods
adc
rorb
add
in
jg
xor
std
scas
int3
push
aad
icebp
push
mov
jle
push
mov
clc
inc
subl
imul
fcoms
jge
xchg
mov
outsb
push
jbe
push
sti
imul
imul
mov
in
bound
push
xlat
outsl
sub
xchg
leave
iret
leavew
out
add
xor
daa
and
xorl
mov
testb
xlat
inc
mov
mov
aaa
outsb
or
pop
jecxz
aaa
push
fdecstp
or
std
pop
ds
stc
pminub
and
mov
sbb
cmp
lret
and
xlat
mov
out
mov
cmp
out
insb
popa
sahf
icebp
les
das
loope
data16
adc
fmuls
push
dec
fstp
xor
mov
pop
xor
xchg
cli
mov
xor
clc
push
xor
nop
dec
js
cmp
add
insb
ret
and
inc
les
add
cmp
pop
arpl
jns
and
xor
inc
dec
mov
mov
dec
fcmovnb
mov
push
mov
outsb
rcrl
inc
xlat
fdivrp
mov
dec
xchg
inc
xor
sub
xchg
lock
push
push
mov
imul
add
mov
ficomps
sub
adc
pop
xor
ss
inc
ja
movsl
stos
js
cmpsl
mov
xchg
pop
mov
movsb
mov
stos
clc
dec
jnp
inc
negl
sub
jecxz
and
xchg
inc
ret
jl
xlat
xchg
neg
mov
inc
or
jle
jbe
push
mov
daa
sbb
sbb
cmpb
pop
test
sub
movl
addr16
cs
pop
loop
fisubl
push
jge
test
cmc
insl
test
mov
push
or
stos
ficomps
inc
sahf
imul
pop
ret
jo
sbb
push
imul
subb
inc
sub
cmpsl
pushf
aam
lods
xor
sbb
push
imul
and
xor
or
out
inc
and
jle
xlat
enter
mov
and
jb
or
and
pop
out
pop
mov
xchg
lds
int3
lcall
js
push
mov
sti
cs
jne
xor
xchg
sbb
adc
mov
cltd
mov
jno
scas
push
sti
push
insl
iret
fst
mov
cmp
mov
xchg
movsl
and
lret
push
push
mov
lret
pop
ds
pushl
mov
lds
iret
lret
ret
in
and
aam
xchg
cld
lea
shlb
popf
out
loope
jnp
dec
orl
adc
push
sahf
add
and
pop
pop
jno
aas
cmp
repnz
pop
pusha
scas
cltd
sub
popf
loopne
movsb
lds
cwtl
fsubs
pop
sub
xorb
or
repz
cltd
mov
cmp
xchg
rcl
mov
bound
add
cmp
hlt
push
mov
jae
stc
push
sahf
sbb
mov
ret
in
outsl
enter
mov
js
movb
cmp
add
sub
test
std
rorl
fisubrl
loop
aaa
mov
addr16
fs
or
sub
fs
jmp
lret
jg
fcomps
push
xchg
enter
sbb
xchg
sub
pop
cmp
push
insb
dec
dec
dec
cmp
jl
jle
shlb
ds
cmc
leave
data16
mov
dec
sbb
mov
pop
stos
adc
adc
mov
testb
lods
mov
and
call
in
mov
and
push
xchg
out
jp
push
neg
lods
jmp
mov
push
in
adc
mov
in
ret
push
add
in
dec
xor
dec
and
mov
jecxz
in
stos
add
xchg
jns
mov
mulb
xchg
adc
inc
out
fwait
ret
fcomps
shll
shlb
mov
fldl
xchg
aam
in
mov
add
and
in
imul
loop,pt
roll
adc
ljmp
jbe
add
ss
in
and
sub
jmp
scas
xlat
sbb
or
push
popf
push
xor
push
push
bound
pop
cmp
fbld
add
mov
mov
jg
jmp
xchg
es
cmp
mov
pop
sub
cmp
push
inc
roll
out
negl
push
in
inc
int3
inc
pop
ja
pop
lock
scas
int
pop
iret
mul
out
inc
dec
inc
xchg
jb
and
sub
push
pop
and
push
fstl
add
cli
xchg
iret
adc
or
lea
insb
jmp
cmp
push
sub
testb
pop
out
lret
popf
dec
std
mov
arpl
dec
repz
mov
imul
movsl
xor
and
fisubs
inc
ja
pop
fisubrl
cmp
ds
dec
lods
fistpl
and
repnz
xor
jle
fsubs
lds
fs
adcb
lcall
sub
loop
fmul
dec
dec
push
xor
pushf
ret
inc
adc
in
in
sub
in
xchg
mov
adc
call
and
inc
pop
inc
or
in
jae
xchg
mov
lock
or
popl
pushf
movb
pop
push
ja
mov
ror
popa
movsb
mov
xor
test
push
sub
jl
mov
push
cmc
out
mov
fucomip
inc
push
movsl
insl
pushf
mov
jnp
xchg
les
push
lods
inc
push
das
ficoms
mov
xor
or
pop
sbbb
sti
lods
leave
mov
push
sub
call
lcall
or
rcrb
out
pop
jecxz
add
xor
push
jne
sub
cltd
pop
cmp
mov
sbb
inc
iret
jnp
fsubl
mov
sbb
push
jmp
cmpsb
data16
xor
mov
add
sub
add
push
or
dec
jl
mov
sbb
jle
shll
cmp
hlt
jo
jnp
push
outsb
fwait
ret
dec
jle
test
pop
icebp
or
dec
ljmp
std
push
xchg
inc
adc
and
test
push
insl
mov
jno
nop
inc
cmpb
test
mov
and
cmp
repz
cwtl
jp
jle
popf
adc
xchg
aad
popf
in
push
adc
call
mov
pop
not
xor
xchg
aas
int
test
les
inc
mov
sbb
add
pop
xor
stos
call
push
sbb
ja
sarb
outsb
data16
in
sub
in
fiadds
jo
mov
cli
xor
test
insl
incl
dec
outsb
cwtl
aad
sub
adc
mov
mov
jecxz
cmp
mov
pop
jne
ficomps
into
lahf
aas
sbb
aad
jg
arpl
mov
sbb
dec
sti
push
adc
xchg
scas
and
fs
jmp
aaa
mov
repz
push
into
aam
xor
push
and
or
sbb
xchg
stc
xchg
mov
aas
das
imul
test
push
mov
mov
leave
sub
sub
pop
mov
adc
out
add
xor
insb
hlt
and
push
aam
rclb
push
add
roll
rorl
jmp
lods
pop
popf
call
xlat
je
ljmp
aad
adc
test
and
popa
cmpsb
pusha
js,pn
decl
std
enter
cmpb
mov
mov
scas
fisubrl
jmp
test
pop
mov
aad
pusha
jmp
push
mov
sbb
cmp
push
dec
lock
lahf
xor
repz
cltd
sbb
mov
sub
call
mov
stos
enter
std
fdivp
int
jmp
and
mov
sub
inc
fimuls
add
sub
sbb
sbb
push
lock
dec
js
add
dec
test
rol
xchg
aam
sar
lret
enter
pop
mov
push
arpl
dec
leave
jge
or
scas
mov
rorl
aad
dec
xor
xor
sahf
inc
xchg
movsb
mov
cmpsl
data16
jno
testl
addr16
mov
in
arpl
cli
mov
imul
adc
pop
sti
cwtl
xchg
jmp
mov
lds
adc
subb
lcall
iret
rol
shrb
popa
hlt
sub
mov
cmp
insb
psubw
out
fcompl
stos
mov
inc
mov
cltd
mov
hlt
dec
scas
stos
cmpsb
xor
aam
sub
inc
pop
pop
sub
inc
js
push
xor
insb
iret
sub
lods
mov
jns
stos
stc
lret
clc
jno
cmp
popa
inc
xchg
dec
in
aad
dec
push
lds
xchg
xchg
dec
pop
dec
mov
movsb
ret
push
ja
cs
ret
mov
pop
hlt
in
fidivrs
pop
ja
and
stc
cmc
jnp
ljmp
push
mov
push
movsl
inc
push
jbe
pusha
xor
adc
or
ret
sbb
xor
lea
hlt
or
data16
ret
test
jb
and
pop
dec
dec
mov
push
test
push
xchg
fisubrl
push
push
scas
xchg
gs
scas
sub
stos
in
sbb
aas
setl
mov
cmp
lret
push
xlat
push
stos
int3
or
test
pop
mov
outsb
xorb
adcl
sbb
or
popa
es
movsl
loop
mov
xchg
cmovs
ret
mov
xor
int
out
pop
aaa
add
add
mov
mov
clc
mov
dec
lahf
cmp
in
jp
or
adc
mov
les
and
xchg
inc
pushf
add
jmp
rolb
aaa
fstl
jge
mov
daa
and
nop
out
dec
xor
sarl
mov
pop
cltd
stc
bound
mov
or
repz
push
mov
lret
repz
aas
or
and
xlat
pop
inc
loopne
stc
sbb
mov
sub
imul
xor
addr16
lds
in
aaa
or
mov
call
mov
rcl
jle
jne
lods
sub
int
pop
push
addl
add
fsubrs
clc
outsb
bound
push
decb
mov
mov
in
inc
fisubrl
imul
test
rol
pop
mov
ss
jl
add
sbbb
mov
dec
jo
or
pop
loope
lret
arpl
out
sbb
mov
add
mov
daa
mov
fldl
sub
sub
daa
arpl
icebp
cmp
dec
arpl
mov
incb
cltd
and
out
mov
pop
jae
dec
negb
pop
es
notl
xor
negb
rol
cs
inc
pop
pop
dec
dec
das
adcb
ljmp
js
cmp
dec
push
jae
mov
shlb
ret
in
or
paddsb
mov
orl
imul
das
mov
out
adc
cwtl
adcl
popa
mov
stos
pop
push
push
jge
mov
xor
data16
fnsave
fiadds
mov
xor
and
sbb
sbb
xor
loope
push
dec
cmpsl
ja
push
jne
inc
lret
xchg
sbb
jle
adc
or
int
pop
sbb
jl
and
inc
jb
ds
inc
sbb
les
jmp
cli
into
push
out
bound
addr16
jecxz
ret
int
and
jp
pop
subb
addr16
pop
mov
jecxz
push
add
scas
and
pop
pushf
inc
ja
pop
incb
shl
js
mov
xchg
outsb
out
test
orl
xchg
pop
mov
mov
xchg
arpl
outsb
test
jle
daa
insl
adc
jg
test
dec
addr16
push
fstpt
add
adc
pop
pop
dec
cwtl
cmp
fidivl
inc
lods
xorb
and
neg
movnti
push
jae
or
and
subb
adc
jb
icebp
fmulp
scas
ficoms
inc
mov
test
stos
add
add
fldl
icebp
lods
xlat
ja
inc
ret
dec
cmp
cmpsb
mov
std
or
inc
pop
test
std
cmc
sbb
fisubs
mov
inc
dec
mov
cmp
xor
or
mov
sarl
mov
loop
dec
mov
ret
xorb
insb
inc
add
aad
ja
jns
mov
mov
xchg
or
adc
nop
cmp
xchg
loopne
xor
pop
popa
rcr
mov
dec
or
les
stc
mov
and
lods
cli
stos
data16
pushf
into
mov
inc
imul
sahf
mov
call
sti
mov
addr16
scas
or
push
jecxz
out
jb
scas
mov
pop
sub
cmpsb
test
push
dec
int
fcmove
mov
imul
mov
xor
iret
scas
adc
nop
inc
cmc
std
aas
loop
mov
sbb
sti
dec
stos
mov
sbb
int
pop
test
cld
xorb
js
inc
mov
sbb
lds
inc
xchg
jae
mov
mov
cmp
int
push
xchg
adc
aad
je
add
lret
popf
fsubrl
ljmp
incb
jns
mov
mov
aam
and
xor
inc
mov
roll
jle
mov
or
mov
sbb
or
inc
loope
inc
mov
mov
movsl
cmp
xchg
fadds
inc
andl
mov
push
jg
mov
sub
jle
lcall
inc
repnz
push
lea
push
daa
push
sarl
popf
cmpsb
int
xchg
jbe
jb
dec
rcrl
xor
pusha
pop
mov
repz
dec
test
xchg
pusha
xchg
cmpsb
cs
rcrl
jg
sbb
and
neg
subl
jge
jb
or
lea
mov
cmp
stos
adc
cmpsl
pop
push
inc
in
jmp
cwtl
mov
aam
and
xchg
mov
movsb
addb
pop
jnp
lret
inc
lea
rcrl
xchg
add
fcompl
jbe
sbb
and
inc
std
jl,pn
push
sbb
pop
and
xchg
mov
movsl
ss
test
mov
jmp
mov
leave
xchg
shrl
aas
out
cmpsl
mov
pop
testb
dec
mov
rcrb
or
call
adc
add
jp
fcmovne
adc
push
sti
int
xlat
insl
xchg
mov
andb
pop
sub
stos
rcr
mov
jmp
in
mov
adc
cmp
sbb
mulb
fiaddl
int
dec
imul
adc
add
fmull
or
add
or
mov
cmp
hlt
pop
movsb
dec
or
sub
lds
stos
add
fucomi
int
rcr
stc
inc
dec
cmp
out
adc
lds
stos
sti
cltd
lcall
mov
sub
stos
adc
cs
or
mov
fisubrs
pop
add
mov
call
aas
pop
movsb
mov
daa
xchg
dec
xchg
dec
push
add
mov
cmp
inc
pop
xchg
into
or
pop
sub
pop
outsb
and
testl
inc
js
dec
mov
jne
sbb
push
pop
aaa
inc
mov
mov
pop
cmpsb
loop
cmp
mov
dec
xor
ret
ja
mov
add
or
add
pusha
dec
mov
ljmp
xchg
loope
lea
out
outsb
xchg
inc
shrb
mov
daa
mov
das
lret
outsb
cld
cwtl
cmpsb
hlt
mov
jo
add
push
jp
adc
roll
stos
mov
js
dec
nop
cs
in
popl
adc
cmpsb
jnp
mov
xlat
mov
dec
xchg
lods
mov
dec
pop
lods
stos
pusha
orl
or
imul
push
fadds
sub
jns
xor
jp
or
xchg
cmp
sub
xchg
add
mov
adc
insl
jg
shll
fisttpl
cmpsb
lods
xor
mov
mov
adc
inc
test
sub
jecxz
inc
imul
lret
out
push
pop
imul
xchg
outsl
lret
icebp
xchg
lcall
dec
add
leave
xchg
xor
mov
pop
lods
scas
icebp
or
inc
leave
sub
add
mov
fwait
or
fisttps
ljmp
xchg
hlt
pop
pop
xchg
fisubrs
push
mov
xor
add
or
aas
push
je
outsb
jb
repz
out
mov
adc
negb
mov
add
data16
jns
and
adc
nop
xchg
inc
cmp
cli
mov
sub
add
mov
dec
subb
imul
adc
mov
das
and
add
fldt
pop
loop
cmpsb
adc
in
out
push
pop
xor
dec
push
outsb
stos
orl
pop
and
push
cmp
pop
daa
pop
xchg
jnp
data16
aad
in
jb
adc
cmp
cmpsl
mov
das
push
adcl
xorb
mov
mov
lods
sub
jo
fidivs
mov
orl
fdivs
jle
mov
jge
or
mov
jmp
cmp
ret
pop
out
adc
mov
fcoms
loopne
pop
pusha
jne
mov
aam
push
cltd
push
shlb
xor
movsb
rorl
insl
adc
pop
negl
xchg
cs
mov
lret
popf
insl
xchg
xchg
mov
outsb
mov
cmp
jns
sbb
test
mov
imul
iret
fistpl
mov
sub
cmp
lret
jns
pop
push
jno
mov
mov
push
jne
stos
pop
add
mov
out
jecxz
cltd
dec
sbb
cld
jle
or
cmc
stos
call
xor
pop
inc
xchg
cwtl
lods
fildl
push
and
movsl
add
outsl
roll
and
pop
sub
xlat
pop
std
rclb
xor
mov
inc
lods
push
adc
aam
rep
aas
add
rcll
scas
jb
out
add
int
bnd
mov
ret
mov
mov
mov
aas
mov
dec
cmp
or
sub
jl
jle
aaa
imul
sbb
add
cmpsb
mov
cmp
lcall
push
xchg
dec
fs
add
jno
add
les
sub
fcmovbe
pop
aas
cwtl
mov
xchg
mov
xor
or
sbb
sub
mov
jae
pop
addl
xchg
mov
shl
sub
sti
add
gs
lock
xor
pop
cli
cs
lret
fs
outsl
cmpb
rcrl
sub
aam
adc
out
pop
int
fildl
dec
adc
sbb
adc
jbe
dec
das
and
rcrl
wbinvd
xchg
mov
decb
cli
lcall
sbb
sbb
test
jle
shrb
xor
lcall
xchg
xor
xor
adc
inc
dec
add
lahf
cli
icebp
mov
faddp
mov
cwtl
sbb
lret
sub
xchg
push
mov
push
outsb
jp
mov
push
shrb
fs
adc
and
rolb
cmpsl
cmpb
cmpsl
dec
fidivrs
pcmpeqw
fstl
mov
or
cmp
inc
or
add
adc
adc
cld
sbb
sub
out
push
dec
out
mov
sub
call
mov
rclb
aas
lret
or
clc
mov
mov
out
int
inc
push
fwait
push
pop
sbb
fcompl
mov
push
fldcw
dec
and
jmp
subl
jnp,pt
sub
lods
adc
stos
in
push
lods
cld
jnp
pushf
mov
cltd
jno
mov
mov
jb
ljmp
pusha
sub
loopne
mov
pop
mov
and
cltd
icebp
je
shl
test
adc
addr16
add
push
xor
test
cmp
cmp
test
rorb
xchg
pop
imul
loopne
dec
pusha
push
inc
ljmp
scas
shll
jl
or
jmp
lods
jmp
xchg
jge
iret
rolb
jbe
mov
and
jmp
sbb
lcall
sbb
push
sarb
testl
cs
fldt
dec
lret
stos
push
mov
subl
lods
adc
adc
xorb
lahf
cmpl
subb
pop
jmp
pop
fldt
cmpsl
adc
jbe
mov
dec
or
or
push
cmpsl
mov
dec
cmp
fldcw
pop
fdivs
and
call
cmp
jae
sub
push
out
or
mov
les
lahf
jecxz
scas
stos
dec
aaa
mov
fidivs
cs
mov
in
in
sbb
data16
ljmp
jl
mov
jae
insl
ljmp
fcoms
push
cmp
cmp
ret
je
fucomp
cmpsl
pusha
mov
add
mov
mov
aad
jg
ss
pop
insb
xchg
or
shlb
inc
or
scas
and
or
mov
cmp
les
sbb
sbb
scas
and
sbb
mov
mov
rep
or
lcall
jo
inc
out
fstps
fdivrl
mov
pop
scas
cmc
mov
lea
sub
mov
sahf
push
mov
cmp
cmpsl
mov
roll
jmp
jecxz
sub
push
or
std
cmpsl
fildl
daa
push
adc
out
add
pop
loope
aas
mov
cmp
inc
or
cmp
jns
mov
mov
scas
mov
or
add
ljmp
mov
cli
add
dec
and
mov
fsubl
jge
jae
mov
fwait
jae
repnz
or
cmpsb
sub
lock
and
inc
fistpll
mov
in
sub
insb
mov
cld
sbbl
cmp
mov
push
push
push
dec
and
xor
dec
es
cmp
negb
je
xchg
sbb
fistps
pop
je
test
xchg
mov
mov
push
push
and
jnp
shrl
rcrb
dec
outsb
sub
xor
adc
add
fsubs
fdivrl
pop
cmpsl
repnz
out
stc
clc
jo
andb
cmpsb
daa
ljmp
push
mov
jns
xchg
dec
in
pusha
jnp
cmp
sub
cmc
sub
rol
cld
xor
mov
sbb
xchg
decl
xchg
mov
cli
clc
icebp
jge
add
or
ljmp
lcall
repz
dec
cmp
mov
sbb
and
xlat
jo
push
in
cmpsl
pop
neg
lods
jae
sub
addr16
jecxz
imull
fs
insb
add
push
push
sahf
push
orl
popa
mov
fmul
ffreep
lds
mov
xlat
push
adc
out
mov
cmp
mov
mov
je
sub
xchg
sub
int3
add
xchg
imulb
adc
adc
sub
push
mov
dec
jg
popf
xchg
inc
jmp
mov
xchg
scas
dec
adc
js
iret
ja
mov
add
call
xor
pop
add
push
jae
aaa
adc
cs
ficompl
scas
fnstenv
lret
out
add
mov
addl
frstor
push
insl
mov
mov
mov
pop
push
and
inc
xlat
jns
ja
stos
add
xchg
pop
push
dec
mov
cmp
cltd
fs
mov
movsl
push
mov
mov
jnp
pop
subl
xor
xchg
in
gs
push
nop
jo
loop
mov
movsb
rcrb
sbb
xor
push
mov
inc
dec
sahf
push
and
jno
std
adc
loop
fisubs
inc
sbb
imul
insb
js
xor
out
hlt
mov
inc
xchg
cmp
xor
arpl
aaa
pop
in
mov
leave
aaa
shll
dec
mov
les
mov
cltd
add
aaa
pop
sub
popf
data16
jp
pop
fists
jg
dec
pop
mov
test
pop
push
push
pop
add
cmp
lods
xor
ret
cmc
mov
fwait
sbb
push
sbb
cmc
inc
mov
sub
jne
jg
ficomps
mov
fsincos
je
pusha
pop
cmp
mov
sub
sti
insl
sub
cwtl
into
mov
insb
ror
repnz
scas
pop
add
mov
out
jae
fmuls
xor
enter
add
out
lds
mov
in
sub
in
shlb
sub
mov
lea
sarl
std
xchg
vpunpckhbw
inc
int
arpl
mov
jle
mov
cmp
cmpsl
andl
cwtl
xchg
ljmp
fimuls
sub
mov
ret
xchg
scas
pop
mov
push
push
push
imul
dec
into
xchg
xor
sub
ret
or
pop
fmull
mov
dec
pop
push
xchg
adc
jg
jecxz
scas
sahf
movsl
jmp
aam
xchg
lock
push
mov
repnz
pop
mov
jg
fnstenv
leave
call
ljmp
test
mov
sub
jmp
cmp
daa
xchg
mov
mov
into
sbb
rolb
rcrb
pop
ja
cmc
out
icebp
loope
aam
cmp
xchg
cmpsl
jl
loop
sar
jbe
rolb
gs
divl
xchg
aad
push
fidivrs
pop
out
repz
push
cmp
fsub
das
imul
pop
aaa
pop
sub
ret
xor
movsl
sub
mov
mov
cmpsl
mov
mov
mov
imulb
loop
jl
fsubrs
aas
ljmp
int3
ret
rcll
lods
pop
jns
sub
movsl
pop
cwtl
clc
mov
test
add
sub
sub
pushf
xchg
dec
jg
pop
sub
jl
gs
adc
sbb
fsubs
pop
adc
nop
imul
mov
inc
loope
mul
push
hlt
aas
push
test
mov
cmc
movl
fisttpl
push
push
xor
test
mov
loop
pop
adc
pop
xor
xchg
ror
xchg
pop
inc
add
mov
mov
add
movsb
xlat
cs
sub
out
in
cmpsl
dec
mov
fisttpll
imul
mov
sbb
fwait
sarb
pop
js
xor
mov
lcall
add
sub
cmpsl
cltd
jg
xchg
dec
push
pop
jg
or
pop
sub
mov
notb
adc
clc
fiaddl
mov
adc
ds
stos
test
scas
subb
xchg
xchg
outsl
jmp
fwait
sbb
gs
pop
enter
imul
sub
mov
pop
jmp
jl
mov
aaa
pushf
sub
pop
test
in
aad
xchg
xchg
ss
push
pop
xor
icebp
add
loopne
push
lock
repnz
movsl
fstpt
adc
or
cmpsb
rolb
fcmovbe
mov
inc
mov
jns
jae
adc
add
xchg
mov
loopne
cwtl
insl
jb
jbe
aad
sbb
fcoms
jno
or
jns
mov
aad
int3
xchg
out
cmp
imull
xchg
ljmp
test
inc
fiadds
loope
hlt
mov
cmp
jle
lods
adc
je
jnp
cli
fs
arpl
stc
sahf
cmp
push
xor
enter
out
mov
int
jns
aad
popa
or
cmp
cmp
add
loope
hlt
dec
mov
repnz
and
push
pop
inc
mov
in
cld
and
dec
fs
push
fwait
xchg
ljmp
sbb
mov
lock
cli
fs
push
mov
mov
inc
insb
cmp
sbb
fisubl
lret
cmc
sbb
lods
inc
ret
cli
pop
pop
int
pop
dec
mov
inc
pusha
or
test
sub
or
cs
adc
pop
pop
addr16
mov
out
jle
fwait
into
adc
inc
mov
inc
sbb
fldenv
fldt
sub
xchg
mov
add
adc
mov
insl
mov
inc
inc
cmpb
add
xchg
ljmp
mov
mov
xchg
mov
adc
cmpsb
call
push
in
out
push
sub
adc
in
loopne
stos
pop
mov
out
shll
test
bound
jg
pop
sbb
cmc
pop
or
mov
fsubrl
clc
iret
addr16
sbb
jmp
push
fmuls
popa
sub
gs
mov
lods
push
jmp
call
inc
flds
repnz
outsb
mov
or
jns
movl
mov
push
pop
in
rclb
pop
dec
jle
stos
jo
cwtl
stc
addr16
xchg
adc
mov
push
pop
fistl
popf
lock
adc
xor
xor
mov
dec
cmpl
mov
and
repz
mov
fisubrs
push
daa
out
flds
xorb
dec
bound
adc
daa
mulb
test
insb
out
clc
sbb
fs
jg
das
push
jno
and
jo
es
dec
sub
inc
fldt
icebp
push
inc
cs
pop
bound
jecxz
ljmp
jl
sahf
testb
cmp
outsl
xchg
jo
pop
jg
mov
je
lods
xor
or
bound
lret
pop
pop
mov
xor
lcall
inc
cltd
js
repnz
xchg
or
es
lds
idivb
mov
sub
push
cmp
mov
dec
mov
xor
pop
inc
xchg
xchg
xor
add
cmpl
xor
insb
and
mov
movsl
xor
pop
in
mov
sbb
xchg
adc
in
mov
or
dec
mov
cwtl
lods
frstor
cmp
sub
mov
shlb
fsubl
mov
mov
aam
lods
jl
arpl
fnstcw
xchg
push
cltd
mov
addr16
test
or
test
sub
cmp
fsubrs
sbb
int
mov
outsb
enter
andb
cmpsb
pop
or
jmp
ja
ficompl
sbb
mov
dec
fiadds
cmp
sbb
xor
adcl
add
xor
ds
sbb
inc
mov
mov
add
sub
js
jmp
pop
and
xchg
lahf
inc
adc
fcmovbe
scas
outsl
xchg
inc
imul
ja,pn
lcall
push
or
sub
xlat
xor
or
iret
and
mov
or
pop
or
insl
sub
mov
pop
or
addb
jb
xchg
inc
mov
sub
jp
push
test
in
or
cmpsl
rcr
push
push
push
mov
sar
adc
cmpsl
outsb
xchg
das
popf
imul
nop
ret
adc
mov
jo
cmp
mov
lods
xchg
mov
jmp
jb
inc
scas
shll
in
fwait
sahf
test
fwait
call
fs
fwait
mov
repnz
mov
push
ds
jle
mov
mov
ret
mov
ss
push
or
sbbb
xor
dec
inc
jb
jg
in
outsl
ds
orb
iret
pmuludq
dec
data16
pause
pusha
sbb
push
xchg
xorb
pushf
ja
add
aaa
inc
dec
dec
push
in
sti
jecxz
inc
xor
nop
ret
xchg
sahf
fnsave
inc
loop
gs
mov
repz
nop
js
mov
mov
inc
leave
lret
cltd
and
nop
pop
test
sbb
jno
sbb
xchg
gs
or
pop
xchg
lods
out
sbb
nop
cmpsl
sub
lods
shll
mov
dec
cmpsl
pusha
mov
jg
popf
sbb
outsl
push
pop
daa
inc
mov
xor
push
xchg
pusha
dec
and
stc
sbb
movsl
inc
add
loopne
addr16
sub
or
int3
xor
inc
orb
cmp
mov
fcoms
dec
dec
push
add
mov
jno
xchg
xchg
xor
insb
mov
push
bound
mov
std
hlt
jmp
xlat
in
sarl
mov
loope
mov
popa
shll
int
popf
sub
adc
xorb
in
std
pop
imul
push
dec
mov
xchg
insl
sti
cmp
ljmp
loopne
sbb
push
loope
loope
and
add
sbb
xchg
decl
faddl
dec
in
test
ret
test
cmpsb
mov
aad
push
jg
xchg
cs
das
decb
out
dec
and
push
and
add
mov
push
lods
lock
add
ja
xchg
push
out
or
cmc
arpl
subl
stos
xor
adc
mov
imul
sbb
mov
pop
add
inc
insb
add
rorb
mov
cs
xor
mov
into
inc
enter
dec
xor
rorl
ja
aaa
imul
pop
jmp
adc
jno
dec
mov
or
mov
stc
in
add
or
inc
mov
inc
out
mov
jo
sub
jo
ret
test
popl
lret
xor
push
mov
push
fisubrl
stc
cmp
and
adc
push
insl
xor
push
daa
jo
pop
or
and
jo
jns
cmp
das
mov
pop
bound
adc
bound
cmc
xor
movsl
xchg
outsb
inc
inc
mov
mov
inc
ficoms
push
push
lock
jg
mov
sarb
test
test
cwtl
cmpsb
icebp
hlt
ficoml
out
cmp
cmp
pop
and
sbb
scas
dec
cmp
imul
int3
out
ljmp
push
sub
push
xor
xchg
jb
lcall
aam
jne
push
aas
push
clc
fs
cmp
inc
cmp
sbb
dec
push
sub
ret
mov
cmpps
or
enter
jge
mov
dec
fistpll
enter
mov
gs
outsl
dec
leave
bound
cmp
pop
dec
int3
sub
bound
push
sub
icebp
jmp
out
cmp
xchg
pop
xor
sbb
imul
and
mov
or
mov
fs
leave
sub
mov
push
int3
xchg
movsb
mov
fmull
mov
and
les
inc
adc
push
xlat
dec
out
cmpsb
cmp
jg
mov
cmp
pop
lahf
sbb
xchg
shrb
rcll
and
paddq
add
xchg
mov
iret
out
fsubs
mov
sub
sub
mov
filds
and
mov
mov
lret
mov
cmp
xor
inc
mov
push
cmp
insb
pop
clc
fisttps
ret
arpl
out
rorb
pop
loop
es
cmc
testl
push
out
cltd
dec
and
sub
test
sub
ds
gs
inc
cld
add
adc
jmp
out
sbb
pop
sbb
sbb
xor
xchg
aam
stc
pop
sub
loope
loopne
add
sbb
fimull
cmpsb
mov
cmpsl
dec
jb
push
addb
in
adc
scas
int3
mov
jl
lea
jne
repz
test
or
inc
xor
movsl
mov
push
jecxz
in
adc
push
push
sarb
insb
mov
out
dec
stos
in
bsf
cmp
cmp
lds
aad
ret
fidivs
inc
scas
push
outsb
in
xor
lock
into
dec
dec
or
dec
dec
shrb
or
in
gs
aas
cmpsl
inc
adcb
xlat
xchg
cmc
call
jae
cmp
sbb
cmp
fadd
aad
inc
sbbb
adc
add
stos
push
cmp
fsts
cmp
movsb
les
nop
jle
mov
mov
fnsave
inc
sbb
in
dec
enter
xchg
test
rol
sbb
movsl
push
stos
mov
jo
aas
cmpsl
enter
xchg
sbb
mov
pop
insl
hlt
cmp
adc
ret
cwtl
js
jo
out
cmp
aas
pop
les
jno
inc
cli
jge
std
push
popf
pop
cmc
rolb
jge
ds
and
test
push
cmpsl
cmpsb
stc
xor
lcall
sbb
int3
enter
lods
mov
stos
inc
dec
xorb
jle
sbb
decb
add
inc
jle
pop
cltd
cmp
jge
add
cmp
sbb
lret
pop
fdivrl
or
sub
jmp
push
lahf
inc
nop
sub
push
pop
cltd
jp
icebp
cmp
imul
and
fldenv
cmp
and
jns
roll
push
dec
jg
nop
xlat
pop
mov
or
filds
hlt
pop
inc
pop
jb
pusha
test
ja
mov
sbb
sbb
out
ja
loope
test
sub
out
or
sbb
push
scas
push
lcall
cmpsl
mov
stc
sbb
scas
out
popa
out
enter
out
and
in
and
inc
fcmovu
xchg
leave
inc
icebp
out
dec
lds
repz
cmc
add
pop
inc
cmpsl
test
sbb
in
pop
dec
cmp
xchg
xchg
shlb
shlb
sbb
add
addr16
mov
subl
flds
movsl
out
jg
inc
cmp
mov
mov
fucomi
mov
jns
push
aaa
jge
ss
push
sub
popf
xor
sbb
mov
pop
aaa
jns
push
ljmp
pop
cmp
fcom
xor
and
test
in
nop
cltd
lahf
sbb
lock
cmp
mov
test
fldcw
clc
les
sub
and
mov
pop
xor
mov
adc
pop
mov
pop
add
adc
dec
inc
sub
repz
bound
jns
push
cmp
aad
pop
cli
lret
addb
xor
cwtl
mov
sub
mov
ds
sbb
call
jl
ja
and
into
xlat
lea
dec
push
ret
cmp
dec
sti
push
xchg
pusha
nop
or
cli
add
jae
cmp
sub
add
insl
popf
in
push
addr16
push
xchg
cli
cmpb
in
mov
push
jl
cmp
movsl
push
cmp
mov
sbb
sbb
push
pusha
mov
lret
aas
call
pop
xchg
cmp
cmpsb
cwtl
sbb
mov
pusha
out
add
sbb
or
call
js
cmp
jns
sbb
sub
jnp
outsb
icebp
hlt
fistpl
cmpsb
or
mov
push
js
push
xor
and
mov
pop
cmp
cmc
fldcw
lock
or
pop
xchg
and
repz
ljmp
cmp
sub
stos
aaa
sti
imul
fnstenv
and
push
mov
insb
or
inc
stc
sbb
xchg
imul
xor
adc
jge
nop
sbb
cmp
mov
rorl
movsb
insb
sti
and
adc
fsubr
insb
pop
fcoml
sbb
sub
mov
mov
test
inc
scas
xor
bound
hlt
arpl
sub
mov
rcr
adc
sti
fnstsw
dec
and
jno
mov
xchg
and
rcrb
enter
xchg
repz
pop
sub
popf
or
mov
mov
mov
je
mov
jmp
cli
mov
lret
mov
imul
pop
dec
adc
pop
scas
fldenv
test
imul
adc
js
add
movsb
add
out
sbb
push
lods
iret
jmp
pop
mov
repz
cwtl
movsb
cmp
or
scas
xlat
xchg
call
out
cmc
cmp
push
adc
pop
mov
xchg
fiaddl
xchg
adc
jb
pushf
inc
inc
fwait
push
push
mov
insb
into
packsswb
mov
out
pushf
push
xchg
js
decl
loope
cs
lods
rclb
cmp
xor
lds
mov
repz
push
sti
sbb
pop
loopne
out
cs
fdivrl
hlt
jno
das
cmpsl
jecxz
pop
aas
mov
jns
xor
shl
xlat
rcrb
fistpl
mov
insb
mov
push
and
fistps
andb
jb
xor
inc
jge
out
xchg
js
in
into
dec
shl
hlt
fistl
ja
arpl
fistpll
ret
jge
mov
add
and
dec
sbb
aaa
js
aam
mov
rclb
xchg
aaa
std
in
scas
sbb
cld
es
ss
mov
fstpl
xchg
xor
hlt
mov
test
rcl
or
push
ficompl
ds
cmp
aaa
dec
xor
push
xor
pop
and
mov
shrl
out
dec
pop
pop
je
addr16
push
xor
mov
dec
punpckhdq
mov
adc
movsl
push
xchg
out
mov
out
xor
lret
or
mov
mov
or
lods
and
iret
shlb
adc
inc
or
adc
adc
sti
mov
push
and
adc
inc
inc
shl
mov
pop
dec
call
xchg
jmp
cmpsb
xlat
mov
push
push
inc
ds
mov
insw
loop
xor
mov
jno
int3
xor
pushf
mov
mov
push
inc
mov
loop
add
pusha
in
push
iret
fdiv
aam
xchg
dec
enter
adc
mov
ficoml
fstpt
mov
push
outsb
push
arpl
fidivrl
sub
test
out
mov
push
clc
ret
gs
or
pop
add
inc
pop
or
push
jecxz
mov
out
cmp
das
xchg
mov
icebp
mov
and
cs
xchg
bswap
push
int
add
adc
mov
scas
jnp
insb
les
sub
push
add
and
shll
ljmp
and
mov
jmp
out
mov
xchg
aaa
dec
jne
test
push
scas
adc
mov
in
notb
cmp
sub
fyl2xp1
icebp
xor
sub
cmp
jb
ret
mov
lcall
repnz
popa
sbb
sub
fwait
sarl
pop
popl
and
movsb
jbe
test
fs
or
xor
clc
movsl
jae
repnz
sahf
push
jnp
int3
xchg
xchg
add
lds
jnp
cmp
popf
fnstenv
mov
push
jae
push
mov
jbe
clc
mov
sub
loope
and
rcr
mov
cmp
pop
les
add
mov
shlb
dec
mov
jmp
sbb
std
scas
pusha
cmp
insb
sub
out
mov
aas
int3
js
dec
ss
cmp
mov
pop
pop
aam
lods
lahf
mov
sbb
sub
jbe
ret
loop
adc
adc
inc
inc
dec
and
push
shr
ficoml
or
jmp
cwtl
inc
mov
dec
and
sbb
popa
cmp
jmp
xchg
push
or
mov
ret
dec
xchg
mov
lea
xchg
test
mov
dec
jbe
incb
icebp
push
mov
mov
cmp
xor
das
inc
add
cmpsl
or
sbb
pop
and
repz
pop
test
std
xor
inc
inc
mov
out
sbb
mov
xchg
in
addr16
jo
icebp
inc
mov
gs
mov
or
lcall
pop
aad
call
fs
inc
pop
cli
xor
in
mov
adc
lods
ficoms
pop
adc
test
cmp
addr16
icebp
xor
mov
stc
fiaddl
rol
sbb
cmp
dec
out
sub
imul
mov
repnz
mov
inc
iret
aam
adc
es
fstl
das
inc
push
mov
in
arpl
xchg
int
mov
jp
movsb
sbb
gs
mov
xchg
out
pushf
cmp
test
sar
cmp
sub
jns
test
pop
pop
pop
movsb
jno
arpl
test
stc
mov
into
cmp
adc
adc
cmpb
dec
push
and
cs
add
xor
add
and
jb
xor
sub
add
pusha
pop
jecxz
cmpsb
dec
test
pushf
cmpsb
outsl
and
inc
jnp
cltd
jg
push
push
add
fistpl
or
push
frstor
inc
xor
or
je
insb
jl
inc
das
jge
cmc
cld
dec
jno
lcall
or
shr
jno
fisttps
add
adc
sbb
sahf
insb
mov
aam
xor
push
xor
test
decl
push
xchg
push
test
mov
cmc
add
cmp
adc
repz
jge
push
shl
mov
pusha
jg
daa
cmp
aam
cli
inc
or
faddp
sbbl
insl
cwtl
add
xor
inc
insb
nop
or
or
mov
aad
jmp
lods
inc
jbe
xchg
loopne
jmp
bnd
xor
adc
pop
mov
xchg
shl
gs
jae
shlb
xor
test
scas
sti
mov
push
mov
pop
cld
sti
pop
inc
pop
jmp
fldcw
mov
lret
mov
dec
insb
sbb
lcall
xchg
int
test
inc
inc
mov
cmpsb
scas
jecxz
xchg
xor
inc
dec
pushf
xchg
jecxz
xlat
shl
jne
repz
ja
inc
jecxz
and
fldenv
xorl
push
dec
jae
popa
jmp
cmpsb
out
mov
inc
mov
sbb
xor
pop
lods
mov
inc
addb
outsb
push
xor
in
add
xchg
dec
sbb
fdivrl
outsb
dec
pop
push
jb
or
jns
jnp
gs
test
lret
adc
in
add
out
jmp
outsl
xor
pop
stos
or
xchg
mov
sbbb
bound
aam
shl
out
adc
sbb
inc
adcb
mov
out
sbb
out
inc
sbb
cwtl
mov
sahf
mov
xchg
adc
jno
xchg
sbbl
adc
popa
cmpsb
ret
enter
adc
cmpsb
sbb
push
cmpsb
test
dec
dec
in
int3
pushf
mov
dec
cmp
out
lret
sub
inc
inc
inc
popa
aad
xlat
mov
jnp
fcoms
arpl
mov
pop
in
loopne
mov
shr
cmp
clc
out
fimuls
out
xor
fxch
push
aad
fistpl
sarl
adc
repz
int3
cmp
lea
pop
xchg
lock
push
imul
fsubl
mov
loop
fildll
sub
dec
aam
roll
shrl
xchg
fwait
loop
fnstcw
and
cmpsb
icebp
mov
fsubs
scas
mov
test
inc
inc
lcall
fldl
sarl
and
testl
adc
sbb
sub
js,pn
out
jle
dec
jle
imul
daa
call
fnsave
xchg
outsb
xchg
fistl
adc
inc
pop
jl
mov
lcall
or
push
mov
shll
stc
pop
aad
sbb
scas
fs
or
lcall
mov
inc
pop
adc
inc
xchg
das
shl
jns
mov
jae
outsb
sti
inc
imul
movb
aam
cmp
mov
or
sahf
popf
mov
sti
repnz
test
mov
xchg
mov
push
cmp
mov
mov
and
imul
mov
mov
mov
push
in
cmpsl
jne
push
mov
inc
pop
hlt
aaa
pop
add
mov
enter
insl
jne
cmp
pop
out
dec
xorb
sbb
mov
xchg
xor
sub
insb
out
std
jp
sbb
sar
imul
adc
scas
out
push
fwait
cmc
mov
pop
pop
xchg
sbb
inc
cltd
les
iret
outsl
ficomps
or
ja
clc
jae
sbb
rcl
dec
pop
shlb
sbb
jmp
leave
daa
mov
gs
into
xor
sub
rorl
out
fiadds
adc
mov
mov
xchg
cli
andl
sbb
fmull
mov
in
in
jge
cli
xchg
mov
cli
or
ljmp
fwait
leave
mov
bound
fmul
cmpsb
jmp
pushf
sub
jecxz
xorl
dec
insl
insb
jae
stc
insw
mov
je
movsb
mov
scas
mov
sub
outsl
xor
mov
arpl
sub
shl
add
lret
push
inc
fidivrl
aas
mov
lcall
jbe
jl
cwtl
push
sub
inc
inc
pushf
jg
sbb
push
cli
aad
xchg
hlt
jno
adc
add
shrb
ljmp
add
sub
dec
clc
push
imul
in
mov
pop
mov
and
out
idivb
loopne
mov
xor
sbb
push
mov
rorb
xchg
jns
cmpsl
addps
enter
dec
dec
shrb
adc
xchg
loop
lock
in
lcall
lods
jl
and
leave
sub
jmp
mov
push
jle
stos
pushf
loop
dec
mov
fwait
in
stc
inc
imul
addr16
loop
pop
test
push
imul
sub
sbb
mov
loope
inc
mov
mov
outsl
or
push
sub
mov
or
loopne
pop
outsl
xchg
adc
xchg
outsb
inc
sahf
test
xor
adc
stos
nop
pop
scas
lock
stos
mov
xchg
and
loopne
mov
xor
repnz
or
jecxz
dec
xchg
pop
pop
rcll
aam
in
pop
insb
add
sub
mov
cmp
sbb
xchg
xchg
jmp
lcall
mov
dec
inc
xor
push
or
sbb
adc
dec
xor
icebp
mov
cmp
bound
and
push
or
pop
or
sbb
insb
punpckhdq
ret
mov
jno
cmp
test
leave
lcall
lret
leave
xorb
push
nop
mov
rol
out
jp
and
dec
loopne
lods
mov
mov
sub
test
test
enter
repnz
add
dec
inc
and
push
cmpsl
arpl
mov
dec
xor
push
mov
cmp
cmp
sub
xor
andl
fcompl
lea
mov
inc
or
jmp
xor
fstpt
lds
test
xchg
or
inc
ret
sub
fldenv
adcb
subb
jp
and
inc
std
dec
jo
mov
je
pushf
arpl
ja
jnp
addl
ja
fmul
lds
cmp
mov
stc
sbb
push
aas
aad
sub
cmp
fs
jne
dec
unpckhps
xor
jbe
rcrl
sbbb
jge
dec
lea
jle
scas
xchg
rclb
andb
jae
ret
lahf
mov
dec
ret
jnp
inc
pop
pop
xchg
mov
adcl
inc
xchg
mov
jb
stos
cmp
rolb
lds
pop
jb
mov
out
scas
ljmp
dec
mov
sbb
and
lahf
addl
sbb
popa
rdpmc
inc
cld
outsl
adc
stos
push
fdivr
push
add
andl
cs
fists
out
cltd
mull
sub
call
ja
cwtl
inc
mov
push
and
js
lods
inc
cmp
es
iret
mov
jbe
adc
lret
sbb
cwtl
lcall
dec
fwait
xor
and
lock
adc
in
inc
jmp
cmp
sbb
mov
inc
sub
into
inc
lds
xlat
adc
outsl
dec
add
sti
dec
cmp
add
or
pop
xchg
test
mov
push
and
mov
dec
push
xchg
add
das
xor
fstpt
call
ss
stos
add
push
sbb
lds
push
js
pop
jo
loope
add
in
mov
int3
lock
dec
pop
je
cmp
js
sub
add
fistl
movsb
inc
in
loope
call
dec
cmpb
push
test
sub
mov
mov
push
sbb
data16
daa
cmpsl
jbe
xchg
sbb
enter
pop
insl
rep
icebp
mov
roll
dec
mov
mov
sbb
loope
out
pusha
addr16
mov
inc
sbb
movsl
inc
int3
pusha
xor
sbb
pusha
pop
jo
ret
add
lahf
lret
pushf
add
mov
sbb
or
jmp
aam
push
xchg
mov
iret
add
pusha
idivb
cmpl
or
lcall
enter
pop
pop
and
lcall
js
push
push
mov
adc
test
push
xchg
std
jp
pusha
out
ja
sbb
mov
aad
jle
jns
xor
push
lea
shlb
fldl
xchg
scas
imul
add
pop
mov
jbe
adc
loop
mov
mov
lods
push
mov
repz
fwait
loop
push
and
ljmp
fldenv
mov
xchg
sub
sub
mov
arpl
inc
insl
or
js
jne
jecxz
inc
or
test
push
test
cmc
int
xor
mov
arpl
sub
scas
mov
push
sub
push
jmp
test
push
scas
fildl
sti
or
scas
jns
scas
mov
adc
or
mov
repnz
ss
mov
dec
pop
cmp
adc
cld
stos
sub
mov
jbe
jbe
std
or
mov
cmp
xchg
xor
jl
stos
jecxz
mov
xlat
xchg
jno
fnstcw
out
sub
fiadds
jbe
test
xor
adc
push
inc
dec
insb
jmp
xchg
iret
xchg
inc
cmp
cmp
pop
iret
lahf
xor
lea
nop
mov
pop
pop
ljmp
sub
aad
add
cwtl
sbb
jge
pop
jg
push
sbb
lcall
ja
mov
cld
cmpsl
imul
xor
inc
mov
mov
rcr
in
sbb
or
mov
testb
or
sub
inc
xchg
scas
mov
pop
mov
push
test
push
sbb
inc
push
mov
cwtl
inc
mov
mov
aad
vmovntpd
xor
jo
pop
add
xchg
stc
push
push
stos
jae
mov
sub
in
and
inc
add
mov
ljmp
xchg
faddp
cmc
xchg
mov
arpl
fsubrl
gs
cmp
lea
daa
es
pop
mov
stos
in
mov
xor
cmp
ljmp
mov
decb
cmp
in
lock
add
mov
or
mov
adc
xchg
or
in
out
inc
jae
xorl
cmp
pop
mov
mov
push
and
push
pop
push
push
aaa
cli
pushf
xor
push
cmp
xor
pusha
repnz
dec
adc
lea
sub
jp
sahf
mov
inc
xchg
cs
movsb
jo
mov
subb
adc
int3
je
push
push
cmp
inc
addr16
mov
cmc
xchg
fisubs
mov
cmp
aad
add
lods
scas
lock
fwait
cmpsl
rorl
dec
in
cmp
xchg
ficoms
mov
mov
jb
imul
mov
inc
inc
add
dec
inc
inc
pushf
push
je
cmp
push
xor
dec
xchg
mov
jne
in
jo
out
jns
mov
in
vpaddsb
or
sub
jnp
roll
push
inc
xchg
stos
cmp
in
jne
push
push
jno
push
imul
mov
aas
std
popa
ds
sbb
adc
mov
lods
pop
mov
fistpl
mov
mov
pop
xor
xor
xchg
nop
sub
aaa
mov
jle
call
fcompl
xchg
pop
shl
popf
sub
mov
rcrl
or
mov
loop
imul
mov
nop
xor
push
sbb
pushf
rorl
and
add
fdivrs
scas
mov
inc
jo
mov
or
cmp
jae
les
test
mov
rorb
and
pop
xor
jbe
aas
repz
xor
jmp
mov
dec
jmp
sub
test
sbb
mov
inc
mov
enter
mov
out
mov
adc
cmpps
in
push
int
mov
adc
or
sub
lods
jl
daa
push
mov
es
jle
xor
dec
adc
jb
cmc
leave
lcall
lret
in
sub
out
and
imul
lret
pop
jnp
jb
cmpl
pop
out
lea
int
popa
lahf
push
cmc
push
mov
outsb
push
push
push
xchg
in
pop
cmp
jno
xchg
pop
mov
cmp
mov
aaa
test
test
inc
fidivrl
frstor
sbb
lods
ret
movsl
je
in
aam
insb
sub
xchg
fldenv
into
es
std
repz
das
pop
pop
jnp
enter
out
sti
stos
lods
outsl
test
pop
adc
inc
cmp
and
xchg
pop
aaa
xor
lea
sub
cmpsb
xchg
push
push
fcoms
enter
pop
add
test
ss
lret
fisttps
dec
fimuls
in
mov
push
and
and
jb
lea
js
pop
and
lcall
dec
mov
or
xchg
xor
mov
cmp
addr16
call
inc
jbe
lahf
rcrl
mov
in
dec
call
xor
fwait
jne
cmp
ret
rolb
adc
mov
mov
rcrl
out
mov
xchg
sub
push
mov
and
sbb
adc
xor
dec
mov
cmp
xchg
pushf
shr
adc
and
or
push
cmpsl
pusha
push
push
je
lcall
dec
lods
mov
sub
fcmovb
sahf
out
adc
ljmp
idivb
out
sub
loope
cs
pshufw
adc
inc
dec
cmp
cmp
call
cmpsl
sbb
or
je
mov
ret
pop
push
mov
cld
jl
jmp
sbb
adcb
enter
insb
xor
inc
loop
into
outsl
cmp
cmpsl
mov
dec
mov
rcr
out
xor
cwtl
sub
shrl
jp
aas
sahf
push
popf
shll
cmp
cmp
int3
mov
xlat
jp
sub
aad
xor
imulb
sbb
mov
std
pop
inc
push
jo
xchg
and
ror
jp
xor
das
lds
insl
lds
es
push
ret
pop
imul
jg
pop
insl
push
mov
push
sbb
lahf
xor
and
clc
push
ljmp
adc
hlt
ret
adc
cmpsb
lret
mov
fnstenv
repz
movsb
loopne
inc
xchg
movsl
fsubl
jecxz
testl
lock
jmp
inc
jnp
sbb
xor
ret
movb
cmovg
sahf
scas
xchg
jb
loope
stos
sbb
roll
aas
adc
movsb
int3
inc
lret
jo
loopne
cmpsl
insl
mov
imul
mov
inc
pop
push
mov
xlat
jbe
lods
jle
xchg
jmp
or
xchg
push
popa
mov
callw
in
lock
xchg
jbe
sbb
cli
mov
dec
mov
jbe
mov
mov
sbb
in
lea
mov
shlb
outsl
rcrl
test
push
leave
or
cli
pop
sahf
test
cmp
repz
jp
out
or
and
pushf
sub
or
mov
and
cmp
adc
pop
out
jns
mov
mov
fs
pop
iret
mov
push
pop
xchg
adc
loop
push
stos
mov
xchg
cld
push
ss
xor
xchg
outsl
or
shr
lock
sub
in
filds
lahf
out
or
jnp
inc
push
dec
orb
in
sub
push
fcmove
jae
pop
les
nop
push
dec
aas
jbe
outsb
lods
in
cld
test
inc
sti
pop
xchg
jge
mov
push
push
lods
arpl
dec
push
les
push
scas
stos
out
pop
popf
neg
mov
insl
or
jns
xchg
and
inc
mov
inc
inc
sub
fs
sbb
pushl
out
mov
or
mov
stos
add
xor
fwait
inc
imul
outsl
add
rorb
xchg
sub
outsl
mov
push
pop
pop
inc
clc
ds
xlat
stos
repnz
movsb
lcall
int
stos
cmpsb
jle
xchg
movsb
ja
fidivrs
int
icebp
mov
pusha
fcoms
int
sbb
subl
sub
jns
aas
in
inc
add
ja
daa
inc
test
add
insl
mov
or
mov
jmp
lret
mov
out
loope
loope
jmp
stc
jbe
cmp
jnp
imul
stc
add
testb
jl
adc
stc
std
fcoml
jmp
imul
jo
add
xor
xor
nop
jle
sarl
jb
and
add
mov
out
out
lret
adc
js
xchg
jge
dec
je
int
iret
fs
lcall
xor
js
loopne
sub
fs
mov
jecxz
shlb
pop
out
stc
or
adc
testl
dec
sbb
mov
dec
inc
adc
push
dec
mov
inc
or
insb
add
lock
mov
fisttpll
mov
mov
mov
mov
mov
jbe
sahf
push
arpl
nop
rorb
and
sub
pop
loope
in
jle
jno
xchg
stos
mov
popa
cmpsb
aaa
sub
jg
jns
addr16
faddl
in
push
push
push
mov
mov
jle
add
les
add
dec
mov
lret
mov
sbb
repnz
xchg
sbb
in
and
or
add
pusha
pop
mov
shll
in
push
add
add
xor
fidivrl
add
cli
aaa
sbbb
jnp
jecxz
adc
inc
jl
andl
lods
adc
add
sti
or
jno
push
movsb
mov
cmp
repnz
cmpsl
and
shll
test
loope
push
jecxz
pop
arpl
xchg
push
je
das
lock
mov
jbe
bound
adc
mov
lcall
insb
ret
or
imul
jno
sbb
and
sbb
cmovge
ljmp
and
xchg
cltd
cmp
adc
aad
aas
mov
fcomps
xchg
ja
cld
loopne
and
into
enter
xor
jne
xchg
adc
add
jns
stc
negl
mov
loope
mov
movsb
into
test
fs
mov
jmp
aas
fildll
popf
adc
icebp
xor
mov
add
test
ja
xchg
lret
jne
mov
sbb
mov
mov
lods
xor
xlat
fdivs
into
jmp
xchg
push
push
cld
push
negb
push
push
les
repz
pop
mov
enter
adcb
into
inc
push
sub
iret
mov
dec
xchg
mov
test
test
scas
jns
add
movsb
out
mov
fsubrs
xor
std
xchg
mov
inc
and
cmp
inc
lret
subb
mov
sub
adc
testb
pop
cld
push
dec
jne
out
and
and
loopne
fs
adc
adc
clc
dec
xchg
jmp
call
or
shlb
stos
mov
adc
das
fcoml
sbb
cmpb
xchg
scas
ret
add
out
stc
add
push
and
adc
test
inc
dec
fistpl
hlt
push
ss
mulb
daa
pop
ret
test
vprotq
nop
mov
jl
imulb
lods
leave
cmp
mov
sbb
aam
pop
out
aad
adcb
mov
das
mov
push
imul
sub
xchg
scas
ficoml
ret
dec
iret
push
in
or
dec
sub
movsl
lcall
push
jl
sbb
pop
cmc
mov
cmp
or
add
pusha
daa
stos
leave
xor
addr16
andl
mov
xor
bound
ficompl
pusha
push
sbb
jbe
add
xchg
ret
js
push
cmc
mov
xchg
shll
xchg
arpl
adc
adc
mov
repnz
add
cmp
ss
pop
or
fnstsw
cli
nop
mov
fstps
sbb
loope
gs
pop
mov
jae
jbe
cs
mov
fists
cli
jb
jne
cmp
jp
dec
sub
or
imul
arpl
rclb
andl
lds
mov
mov
xorb
cmpsb
movsb
lahf
push
inc
stc
out
mov
lcall
cwtl
mov
xchg
mov
mov
aas
loope
sub
dec
js
scas
mov
pop
fistl
fists
aam
ds
pop
loop
lds
pusha
push
mov
push
push
jns
cmpsb
dec
je
lahf
stos
enter
fistpll
aas
jbe
adc
adc
daa
lods
cmp
mov
dec
sub
testb
popa
cltd
popf
loope
jnp
inc
aad
xchg
pop
add
mov
arpl
lods
xchg
push
xchg
and
jo
inc
or
push
filds
add
or
repnz
leave
scas
push
inc
mov
clc
jge
push
jno
push
sti
ficompl
mov
add
lock
pop
popa
das
fistpll
adc
push
stos
dec
add
or
pop
pop
mov
pop
mov
inc
mov
ljmp
pushf
rorl
ds
sbb
loope
scas
push
mov
jbe
mov
nop
adc
stos
push
jge
pop
test
xchg
int3
cmp
xor
in
outsb
outsl
ficoms
push
mov
mov
rclb
lods
sbb
and
xchg
mov
push
popl
push
and
pushf
xlat
jle
dec
adc
jno
andl
adc
nop
pop
lea
and
repz
push
dec
iret
loop
and
aas
jnp
imul
out
leave
ret
fnstsw
scas
lods
inc
cmpsb
fstl
jg
or
xchg
adc
popa
inc
out
fstl
ficompl
sub
test
mov
cltd
imul
dec
or
test
loopne
cs
lret
sbb
insb
push
call
cmpsb
ljmp
test
cmp
negl
inc
mov
aad
test
and
fnsave
dec
adc
syscall
xor
dec
inc
prefetcht2
cmp
push
push
xchg
ds
ljmp
pop
mov
and
pop
cmp
push
andl
sbb
lock
insb
inc
scas
mov
sar
cmp
dec
stos
mov
and
outsl
or
rcrl
fistpl
add
cmpb
aam
push
adc
cmp
outsb
mov
pop
fdivrs
fisttps
imul
jmp
cld
out
xchg
int3
les
daa
add
adc
mov
adc
jne
sarb
repnz
fldpi
pop
sbb
bound
pop
adc
shrl
sub
fbld
gs
jmp
dec
mov
jbe
movsl
mov
sub
add
jno
enter
inc
out
and
cld
rcrl
or
inc
clc
lea
jo
sbbl
or
jne
xor
cmp
loope
mov
cwtl
cmp
outsb
push
push
mov
jae
fdiv
xchg
pop
subl
mov
xchg
add
push
xchg
sub
enter
push
mov
sbb
dec
mov
cmp
mov
xchg
xor
sub
ljmp
jne
xor
lock
push
xchg
pusha
lret
push
adc
xchg
and
mov
cmp
push
fucomip
pop
lds
lcall
mov
dec
push
or
sub
lods
xor
pop
adc
jge
int
mov
inc
repnz
mov
cmp
into
pop
push
sub
stos
fidivs
and
mov
hlt
mov
test
and
std
loope
mov
lcall
pop
xchg
or
jb
ljmp
dec
xchg
mov
xchg
xchg
decb
mov
mov
dec
mov
fidivs
or
inc
outsb
mov
mov
and
in
test
lcall
fs
lods
shl
inc
js
aam
rcrl
xor
daa
push
inc
movsl
imul
fs
add
fmul
dec
sub
clc
pop
inc
lahf
cwtl
gs
out
jbe
lods
iret
lea
mov
dec
fwait
jno
stos
adc
pop
mov
jl
add
out
jecxz
andnps
test
push
jecxz
sbb
sub
jg
mov
test
pop
movsl
jp
or
addb
lahf
leave
enter
xlat
and
sub
mov
andb
stos
insb
jns
js
lcall
push
sub
stos
rol
cmp
mov
and
sub
xchg
negl
mov
and
ret
pop
jo
push
cmp
repz
jle
xchg
lds
mov
pop
lcall
fmull
addr16
andb
pop
push
test
cs
shll
cmp
in
in
popf
fucomi
dec
cmp
mov
adc
cs
adc
repz
and
xor
popa
cld
mov
xchg
and
cs
cli
out
stos
mov
or
ss
adc
push
push
daa
repz
dec
jmp
push
repz
popa
add
pop
adc
push
insb
cmc
data16
mov
test
stc
push
pop
and
addps
mov
sbb
filds
daa
lcall
xor
lods
mov
mov
test
fdivrl
add
mov
inc
fbld
repz
pop
mov
xor
mov
inc
jle
sub
incl
cmp
shll
push
loope
movsb
pop
ljmp
xor
push
push
sub
movsb
ret
push
pushf
mov
pop
adc
add
arpl
xor
insl
xchg
push
outsb
adc
mov
lock
mov
test
into
xchg
lret
ret
or
push
mov
neg
push
hlt
cmp
adc
shlb
inc
lods
enter
add
mov
mov
lods
hlt
enter
xchg
stos
cmp
cvtpi2ps
sbb
hlt
xchg
inc
out
icebp
pop
lea
imull
pop
fcoms
loop
imul
add
lahf
rcll
and
imul
sahf
pop
repz
mov
jle
pop
aas
adc
or
outsb
fxch
dec
aas
mov
xchg
or
xchg
int
hlt
inc
bound
and
pop
popf
pop
mov
rorl
ss
fistl
cmpsl
sbbb
out
jbe
stos
loope
xchg
sub
xchg
cs
dec
ficompl
pop
xor
test
and
outsb
sahf
lods
jno
and
pop
sbb
imul
adc
and
sbb
lds
roll
cmp
scas
sbb
sbb
and
xchg
jge
adc
dec
pop
scas
shr
jne
int3
rolb
adc
gs
sub
pop
inc
mov
es
xor
cmpsl
setb
mov
dec
stos
xchg
fsin
popf
add
pop
mov
sub
xchg
std
lock
push
sub
daa
or
pop
mov
jne
sbb
inc
repnz
bound
mov
rorb
movsl
pop
call
cmp
in
xchg
jae
jecxz
xlat
rorl
stc
inc
cld
pushf
xor
stc
fbld
out
into
int
xchg
xchg
pop
jmp
test
mov
lods
cltd
iret
mov
xor
rorl
mov
cli
mov
xchg
xchg
mov
es
mov
fistps
pop
stc
mov
test
fsub
or
ja
lret
jno
sub
gs
xchg
mov
sub
incb
icebp
cwtl
fiadds
push
cmpsb
mov
push
mov
sti
arpl
xchg
dec
mov
movsb
out
lcall
dec
shll
push
ja
repz
push
shl
into
ss
dec
std
mov
cltd
shlb
cmpsl
sub
imul
dec
jp
push
pop
push
icebp
pushf
xchg
jns
cs
jecxz
lods
sbb
in
mov
pushl
or
pop
out
call
mov
sti
movsb
mov
pop
and
cmp
and
mov
lret
cltd
shrb
aad
pop
sti
jae
mov
add
lock
or
lock
aad
fcmovnu
popa
xor
fwait
push
pop
push
sub
mov
cltd
mov
pop
out
out
push
cmpsl
rcrl
jo
jmp
push
sub
or
fs
jno
pop
jne
fadd
xor
movb
cmpb
mov
mov
inc
iret
sbb
pop
sbb
data16
leave
xchg
and
jno
js
and
pop
je
mov
ljmp
pusha
inc
lods
mov
add
mov
mov
xor
mov
outsl
mov
and
sub
push
mov
push
mov
mov
push
mov
mov
js
hlt
xchg
stos
and
cmpsb
pop
movsb
jae
push
mov
jge
mov
pop
test
sbb
jns
xor
xchg
jns
mov
add
les
inc
sbb
mov
sub
pushf
insb
jg
and
mov
dec
cld
cmp
dec
lods
fsubrs
out
pop
sub
xchg
in
shll
sub
leave
fs
clc
in
jae
cmp
pop
mov
int3
sbb
sbb
ds
call
or
insl
mov
cld
jge
lock
sub
jecxz
push
stos
xchg
mov
xor
inc
push
or
cli
lods
mov
adc
dec
into
fldcw
jns
xor
pop
push
in
dec
mov
mov
adcl
pushl
int3
out
fs
sub
inc
cmp
es
xchg
loop
test
loop
cmpsb
dec
sbb
nop
and
adc
lds
jg
pusha
ljmp
into
adcl
xchg
add
mov
mov
push
and
in
and
imul
sub
lret
adc
cld
mov
push
cli
outsl
ss
hlt
push
adc
mov
fwait
mov
inc
insl
pop
pop
subb
test
aaa
xor
xchg
xor
je
pop
or
push
mov
adcb
jecxz
jecxz
hlt
and
ds
inc
cmc
lret
fsubl
inc
sub
sbb
mov
xor
push
hlt
pop
aad
insb
add
jbe
push
lret
xor
push
xchg
out
repnz
jbe
push
inc
fisubrl
and
shll
dec
adcb
add
movsb
into
incl
mov
leave
pop
inc
cs
dec
fwait
lahf
fdivrl
faddl
cmp
roll
cld
dec
sub
ss
push
mov
ljmp
add
ret
xor
dec
push
call
jnp
movsl
add
dec
scas
aaa
inc
push
and
cld
lcall
cmp
arpl
sbb
inc
add
ljmp
dec
mov
mov
sti
jb
adc
gs
les
imul
xchg
push
mov
adc
in
jns
mov
and
mov
xorb
repz
mov
mov
into
jp
push
dec
pop
inc
fiaddl
mov
jnp
shrl
fadds
mov
cwtl
jmp
inc
jecxz
push
xor
mov
loop
popa
ret
mov
add
cld
mov
jmp
out
ss
popf
xor
cmp
aaa
pusha
push
cmp
loopne
jnp
inc
dec
stc
aas
rcrb
daa
imul
sub
fmull
adc
xchg
cld
cmp
cmpsl
fisttpl
in
sbb
mov
pop
je
xchg
repnz
jmp
loopne
sbb
inc
in
pop
sbb
jge
call
xchg
push
or
mov
cmpsb
fs
push
sub
push
cmp
aaa
nop
adc
rorb
shrl
lahf
inc
outsb
cmp
in
ljmp
loope
jle
inc
shr
lea
shl
mov
cmp
push
push
push
mov
mov
or
testb
add
cmp
xor
mov
cli
ret
xchg
inc
insb
or
jnp
and
ror
mov
sti
daa
xchg
lret
xchg
inc
push
add
in
xchg
call
js
add
shlb
adc
xchg
and
negl
repnz
jne
inc
ret
and
mov
push
out
pusha
inc
xchg
test
mov
sbbl
nop
jae
mov
jecxz
jo
cwtl
or
mov
icebp
inc
sub
test
xor
or
mov
or
push
iret
shrl
inc
xchg
fwait
sub
adc
rorb
inc
negl
and
data16
imul
cmp
inc
sbb
xchg
fmuls
call
pop
add
test
sbb
mov
in
fstpl
push
add
sbb
xchg
dec
dec
xchg
lret
mov
cwtl
es
sar
cmpsb
fwait
lret
int3
push
xor
frstor
sbbb
int
jp
cwtl
and
push
mov
int
cwtl
out
lods
mov
mov
adc
stc
cwtl
test
xchg
jecxz
add
inc
mov
lret
mov
loop
rolb
or
mov
sbb
aad
cmp
cli
les
mov
enter
test
in
out
dec
gs
inc
and
cmpsb
pop
shll
pop
loop
sub
or
push
add
adc
mov
out
stc
loop
fisubs
out
and
adc
cmp
push
stos
push
div
mov
mov
ss
xchg
add
and
and
adc
aad
cmc
ds
cld
arpl
or
sbb
or
adc
js
mov
loopne
jnp
subps
and
xchg
mov
inc
and
ss
rorb
sub
fnstsw
cwtl
ret
or
nop
pop
sub
mov
int
loop
jge
loopne
add
ss
push
jnp
ljmp
jge
pop
inc
cmp
pop
sbb
movsb
mov
push
sub
xor
stc
sbb
push
inc
test
sbb
ret
outsl
pop
sub
ja
pop
movsb
das
lods
jp
lea
stos
sub
add
and
jno
mov
inc
icebp
loopne,pt
dec
mov
adc
test
enter
add
add
xchg
stc
popf
inc
mov
cli
cmp
ret
rol
jb
imul
push
mov
pop
addr16
add
into
sbb
aad
jns
mov
adc
and
add
pusha
mov
aam
mov
cld
xor
adc
sti
in
adc
cmp
fcoms
fwait
out
rorb
mov
pop
cwtl
out
sbb
push
sub
jmp
icebp
stc
xorb
data16
jns
adc
xchg
call
test
repz
js
pop
idivl
sbb
fcoml
out
inc
in
retw
fildll
xchg
sbb
popf
shll
xchg
call
or
sahf
jmp
xor
lods
sbb
imul
mov
mov
cmp
ficoms
jecxz
mov
int
and
adc
mov
popa
movsb
cli
aam
mov
and
and
xchg
mov
inc
jl
push
xchg
movsb
hlt
addr16
jns
push
push
lret
andl
out
aam
icebp
and
sub
adcb
push
add
pusha
or
lahf
mov
aad
hlt
and
inc
sub
imul
sub
push
jnp
and
xchg
data16
or
push
shlb
lock
push
sbb
push
loop
push
xchg
ficoml
inc
dec
push
sbb
lret
aas
outsl
and
fmuls
pop
repz
ret
popf
ds
sbbb
mov
mov
jo
cmp
shll
mov
int
sbb
shll
daa
ret
jecxz
inc
and
iret
push
loop
push
jle
xchg
or
insb
hlt
or
aad
fidivs
sbb
ds
jne
addl
add
push
loope
lods
test
xchg
or
ljmp
mov
jns
mov
cmpsb
out
out
lret
jge
stos
mov
push
xor
stos
push
push
cmp
jge
gs
jnp
xchg
mov
push
scas
lds
test
mov
sbbl
adc
dec
mov
mov
push
scas
xor
jl
lock
into
idivl
cmp
lods
aas
imul
movsb
into
mov
pop
lahf
aas
pop
imul
jbe
in
addl
push
sbb
mov
mov
inc
jbe
inc
dec
inc
addb
cmpsb
aam
negl
and
jmp
push
imul
mov
into
dec
mov
rcrb
enter
pop
lahf
out
add
pop
aas
les
insb
icebp
jae
jno
shlb
push
leave
addl
mov
jge
shr
out
adc
hlt
lea
lds
rcrl
adcb
cmp
cmc
test
icebp
jns
outsb
int
jg
jl
imul
in
dec
loop
pop
jb
xor
rorb
xlat
stc
mov
push
test
std
adc
inc
test
lods
mov
fistpl
outsl
lahf
std
inc
jg
lock
xor
xor
add
ja
xchg
sub
or
ret
sbb
push
int
mov
cmpsl
or
imul
push
xchg
xchg
inc
sub
mov
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
sarb
xlat
jle
inc
xchg
aaa
cmpsb
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
arpl
push
aad
mov
or
xor
insl
inc
mov
insb
aad
pop
cmp
push
mov
popa
xlat
testl
ds
mov
aam
cmp
jp
mov
jle
and
cmp
and
cmp
push
adc
adcb
mov
movsl
inc
or
das
in
pop
xchg
mul
cmp
dec
xor
je
inc
ljmp
sti
and
cmp
into
mov
mov
les
imul
jbe
stc
orb
add
jo
dec
inc
je
rcrb
mov
out
lret
mov
jle
mov
popa
mov
mov
scas
cmp
push
popa
sarb
xlat
jge
mov
shll
push
pop
jp
push
sarl
mov
popa
sarb
xlat
jle
mov
popa
shrb
xlat
jl
mov
popa
sarb
xlat
jg
mov
xor
jp
mov
jle
pop
jge
xor
add
js
aaa
push
popa
shrb
xlat
jle
mov
popa
sarb
xlat
jle
dec
inc
aad
ja
sarb
fdivrl
bnd
aaa
push
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
add
push
add
js
daa
push
popa
shrb
mov
xor
xlat
jle
fwait
js
xlat
xor
mov
pusha
mov
jle
fstpt
aaa
out
push
jp
mov
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
jle
mov
popa
sarb
xlat
adc
mov
divb
push
jno
jp
adc
inc
mov
mov
xchg
adc
inc
sbb
aas
and
xchg
xor
push
xor
inc
loopne
push
rcl
pop
add
adc
aam
arpl
stos
sbb
out
lret
xchg
je
cmpsl
adc
dec
pop
xor
add
cmp
cmp
stos
jecxz
adc
xchg
daa
pop
fstp
fmulp
sbb
lret
in
ja
or
ret
gs
adcb
mov
mov
jnp
mov
daa
sahf
icebp
fildll
mov
and
pusha
push
mov
xor
repnz
data16
xchg
popa
dec
xor
xor
imul
repz
xchg
data16
cli
fdivs
in
mov
rcll
xor
adc
jp
shll
test
jmp
push
sub
fmull
xchg
sbb
and
or
xor
or
xor
test
popf
add
or
inc
jb
mov
or
cmpsl
xchg
inc
icebp
cmp
pop
add
inc
iret
xor
rcll
gs
imulb
lcall
js
aas
sub
push
or
or
ja
or
into
pop
xor
test
adcl
test
dec
stos
popa
inc
jg
std
rol
or
and
add
or
lret
pusha
or
xor
add
push
xchg
subb
mov
jns
inc
lret
adc
pushf
movsb
shrl
das
xchg
int
ret
adc
add
push
ds
xor
out
sar
shlb
adc
cld
mov
mov
fistpll
or
xor
cmpsl
popaw
xchg
adc
cmc
fisubs
cwtl
or
adc
idivb
mov
dec
call
sub
adc
xor
xchg
scas
adc
jno
scas
negb
sti
bound
dec
nop
andb
fucom
or
mov
adc
pushf
scas
xor
leave
lahf
adc
test
out
sbb
iret
gs
add
negb
and
dec
push
mov
mov
leave
jl
jo
mov
shrl
mov
adc
jno,pt
test
fldt
sub
sbb
stc
pusha
xchg
mov
loop
sub
mov
les
add
ljmp
cld
sub
je
inc
ss
enter
jo
aaa
mov
test
jl
cli
nop
repz
ljmp
dec
std
mov
add
imull
lcall
dec
add
push
cmc
repnz
outsl
stc
lods
fisttpl
jns
rcrb
mov
data16
hlt
inc
mov
sub
xor
jbe
frstor
sarl
jbe
sub
inc
cmp
fwait
or
pop
lea
and
jae
ljmp
jno
out
fists
fstpt
mov
sbb
push
hlt
jmp
outsl
or
mov
lahf
pusha
icebp
add
adc
scas
in
fnsave
dec
push
adcl
adc
jno
dec
jbe
aas
ljmp
cmpsb
out
lret
cmp
out
pop
fcmovb
fimull
cmc
shll
sub
sahf
jb
and
mov
pop
or
js
lock
hlt
cmp
inc
mov
or
xor
shl
adc
ljmp
arpl
fidivrl
daa
in
pop
or
lea
iret
insb
xchg
aad
aad
xchg
push
notb
mov
push
mov
dec
cwtl
xchg
lock
cmpb
je
pop
cmpsb
lock
incb
cmp
or
jmp
and
adc
insl
xchg
and
test
addl
inc
jmp
push
xchg
mov
cmp
insl
xor
je
aam
ss
or
push
push
clc
dec
mov
jg
insb
sbb
cwtl
pop
add
iret
mov
cmp
fs
push
sub
test
or
pop
shrb
fstpt
and
and
xchg
rclb
jne
popl
cmp
xchg
inc
test
or
lret
test
add
jbe
adc
andb
pop
pop
nop
mov
mov
inc
xor
lret
xchg
jne
sti
push
pop
inc
inc
sarl
xchg
mov
cmpsb
inc
or
inc
ljmp
iret
xchg
pop
xor
rorl
dec
mov
mov
sbb
or
imul
cli
mov
hlt
shrb
jno
and
mov
jle
in
outsl
cmc
sub
daa
xchg
cmpsb
xchg
int
pop
jne
mov
popa
inc
je
push
and
push
push
jae
xlat
scas
pop
jmp
enter
lock
jnp
dec
add
jne
pop
inc
sub
push
je
adc
mov
enter
call
xlat
and
push
sbb
outsb
insb
jae
mov
clc
push
ljmp
push
pop
sbb
fnstsw
xor
ja
pop
scas
shlb
adc
push
loope
hlt
iret
hlt
enter
pop
dec
and
pop
mov
lret
mov
sub
stos
fld1
pusha
push
popl
repz
inc
ret
xlat
fistl
xchg
aaa
push
mov
pop
pushfw
pop
sub
imul
add
clc
ja
xchg
ret
cmpsl
adcl
das
jbe
inc
jl
ret
dec
and
jg
ja
ljmp
and
mov
xor
adc
arpl
pop
pop
pop
pop
sbb
shr
addl
ret
je
pop
jmp
sti
cmpl
test
sahf
pop
cmpb
movsl
stc
das
jg
sub
or
adc
inc
mov
ss
fisubl
xor
adc
jle
xchg
and
mov
lods
push
and
pop
add
jae
xchg
ljmp
ret
ret
int
xor
or
sahf
out
mov
cmpsl
xor
mov
movb
inc
dec
cmpsl
mulb
mov
mov
insl
fldcw
and
cmp
in
fs
clc
adc
mov
jns
mov
xor
lds
movsb
repnz
sbb
mov
push
pop
pusha
sbb
xlat
or
pop
inc
movb
push
inc
outsb
dec
imul
repz
jge
loope
sbb
int
mov
mov
fs
imul
inc
dec
inc
cli
or
push
push
push
xor
pop
movb
iret
push
les
cltd
adc
movsb
das
cmp
adc
ss
outsb
or
fidivs
add
xlat
push
test
fcoml
xor
in
lock
movsl
in
cwtl
iret
xor
inc
pop
cmp
lcall
out
lahf
into
jl
insb
arpl
cmpsl
add
adc
mov
adc
pushf
sub
test
sbb
jmp
adc
test
mull
in
addb
in
xor
pop
lret
add
pop
xor
gs
mov
std
sarb
daa
cmp
roll
mov
mov
dec
xorb
sub
mov
push
shlb
test
sahf
jp
push
dec
js
mov
popf
lahf
clc
loope
mov
pusha
out
leave
and
xchg
pop
lds
loop
jmp
xchg
mov
and
sbb
mov
dec
iret
mov
mov
mov
inc
xor
or
mov
pop
insb
out
pop
das
sbb
es
lahf
push
dec
shlb
sbb
mov
mov
scas
ret
jb
cmp
sbb
aam
mov
and
dec
push
xchg
out
adc
add
pop
daa
push
jns
and
into
repnz
repnz
push
fcomps
dec
sbb
push
dec
jae
sub
loop
rcrb
outsl
sbb
or
repz
mov
sti
lock
xorl
outsl
or
scas
lods
inc
inc
mov
push
inc
jmp
mov
jnp
clc
push
sub
jg
adc
sbb
icebp
push
jae
out
es
outsl
inc
sub
add
aad
dec
fiaddl
xchg
adc
js
sbb
repz
push
add
add
mov
and
push
fisubrl
loop
leave
sbb
xchg
mov
stos
lods
aaa
scas
push
xchg
pop
dec
out
add
dec
add
pop
xor
push
mov
mov
mov
fldl
push
mov
ficomps
cld
push
push
pop
or
lods
mov
cmp
xchg
or
pop
adc
jo
aas
and
xchg
fimull
mov
iret
or
sti
test
test
mov
mov
cmc
out
inc
mov
stos
sbb
xchg
dec
dec
outsb
or
inc
test
jp
adc
adc
test
filds
cmpsl
leave
xor
popa
push
and
je
cmp
fldt
div
stos
roll
sub
mov
scas
repnz
cmp
mov
cmp
pusha
int3
aaa
mov
add
jecxz
stos
lret
and
pop
sbb
call
test
cmp
jne
mov
shlb
adc
daa
and
cmp
ds
push
mov
mov
cwtl
mov
fiadds
jae
cmpsl
fisubrs
sub
ds
adcb
mov
mov
movsb
add
and
setp
push
push
xor
and
dec
jb
mov
lock
out
mov
out
jae
out
push
js
xor
mov
xchg
shrb
sbb
xchg
xor
sbb
mov
mov
jno
jae
mov
in
cmc
addr16
and
dec
adc
mov
in
adc
insl
jmp
mov
sti
adc
sub
loope
daa
pop
push
stc
incl
jnp
jmp
gs
lods
mov
push
xor
ret
loop
hlt
icebp
fistpl
cmpsl
adc
pop
rorb
les
pop
lcallw
push
stc
pcmpgtw
shrl
sbb
xor
leave
or
jb
cmc
out
ret
jecxz
gs
xchg
sbb
sbb
inc
xchg
push
push
mov
dec
out
loope
or
mov
aas
sub
je
or
rclb
xchg
inc
out
push
jbe
psrld
push
decb
dec
push
cmp
or
rclb
into
nop
outsl
cmp
dec
lcall
jg
fdivrs
push
fldenv
cmp
xor
push
adc
push
cwtl
ds
mov
inc
sub
push
adc
ret
push
dec
jg
aas
dec
dec
out
cmpsb
sbb
es
sub
jl
in
out
stc
add
push
pop
and
test
adc
push
push
enter
pop
into
jmp
mov
push
rorl
mov
jmp
cmp
mov
daa
sbb
lods
mov
lcall
pop
test
sbb
xor
jne
in
sbb
ret
pop
pop
loop
xchg
pop
shrb
in
jo
pop
ficomps
xchg
dec
popf
ss
mov
xor
jne
stos
mov
loope
push
arpl
mov
in
jb
andl
sbb
mov
dec
mov
mov
sub
cs
scas
cmpl
lcall
js
push
outsl
adc
jne
xor
inc
shr
cmpsl
pop
je
cmp
push
xchg
and
js
jg
mov
icebp
int3
arpl
sub
imul
sub
push
std
and
mov
and
and
sub
iret
or
inc
lods
test
ds
jbe
adc
out
push
pop
cs
fcoml
or
into
aad
lds
lds
popf
push
xchg
cmp
mov
inc
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
