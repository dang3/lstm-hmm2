push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
out
stc
adcb
fldl
jae
adc
pop
ljmp
jp
push
ljmp
jnp
rorl
fdivr
and
mov
sub
jmp
sar
arpl
mov
repnz
jge
inc
roll
movsb
push
and
and
psubb
imul
inc
mov
js
xor
aaa
btr
push
cvtdq2ps
addr16
test
mov
scas
mov
stos
adc
leave
xchg
mov
out
and
shll
addr16
popa
lcall
stc
sti
pop
pushf
jl
and
mov
xor
and
repnz
ret
addr16
lods
fs
inc
aam
add
int3
clc
dec
push
cmpl
sahf
add
and
addr16
xchg
cltd
lock
popa
cmp
int
sbb
add
sub
lods
clc
push
clc
in
in
lea
std
xchg
stc
addr16
test
cmp
push
scas
jnp
mov
and
insb
insb
and
xchg
cmp
xchg
outsl
orb
int3
outsb
cmpsb
fsqrt
fdivl
setne
in
mov
je
mov
pop
insb
xor
pushf
std
xor
bound
fidivrl
out
add
fmull
test
push
inc
mov
ds
dec
mov
jo
xorb
es
loop
daa
popf
pop
inc
idivl
call
xchg
xchg
pop
fcompl
repnz
rolb
adc
xor
cwtl
dec
adc
adc
adc
testl
add
add
bound
into
sbb
inc
stos
adc
pop
and
cltd
jle
push
scas
lcall
mov
mov
dec
and
sbb
adc
sub
xchg
jb
mov
loopne
adc
int
xor
sub
cmp
jl
mov
cld
sub
mov
xchg
ds
cmpsb
jge
int3
lcall
mov
xchg
hlt
aaa
fcomip
pop
cmpsb
xchg
mov
test
mov
int3
dec
es
xchg
mov
insb
adc
sub
push
xor
fimull
mov
pop
aas
jp
and
add
inc
lahf
xor
arpl
add
dec
in
jo
xchg
addr16
push
pop
and
jmp
out
mov
je
sbb
bound
inc
mov
shl
daa
add
jmp
or
push
xchg
and
xchg
movsl
addl
cmp
div
jbe
sbbl
cmpsl
mov
loope
lds
jno
idivb
and
test
in
popf
popf
jge
jnp
aas
fmull
aad
jbe
aaa
inc
bound
mov
or
icebp
mov
lret
jb
test
cmpsl
sarl
xorb
push
sbb
inc
pop
clc
rcrl
mov
or
outsb
lods
cmpsb
sub
fidivrl
out
test
daa
push
adc
stc
xchg
mov
sbb
or
fwait
insl
in
sbb
pusha
mov
scas
mov
shlb
push
xor
dec
jbe
scas
lahf
in
xchg
and
adc
and
push
rcrb
push
sbb
lock
push
lds
push
push
pmulhw
xchg
or
and
or
xlat
jo
or
cmp
sbb
ret
lock
and
mov
adc
mov
les
xor
shlb
stos
pop
add
test
fisttpll
or
pop
xor
and
jbe
lock
cmp
pop
ret
cmp
cs
ss
or
arpl
push
loop
aas
stos
mov
cli
mov
fsubrl
dec
insb
add
stos
xchg
push
adc
arpl
cld
test
push
mov
gs
out
push
mov
pop
pop
sarb
jae
movsl
fldt
pop
xorb
jne
dec
mov
dec
pop
outsl
enter
xor
mov
jl
mov
mov
and
mov
out
mov
xor
and
and
loop
inc
pop
fnstenv
dec
gs
repnz
dec
dec
idivb
inc
inc
cmp
xlat
addr16
dec
mov
test
lds
mov
leave
pop
insl
out
rcrl
inc
mov
xlat
enter
stc
dec
sahf
push
faddl
jo
add
sbb
leave
mov
mov
fwait
lea
or
xor
mov
dec
insl
add
jne
ss
push
mov
dec
lds
sbb
mov
mov
test
sbb
sub
cmc
cmp
cmc
xlat
sub
data16
and
mov
mov
or
test
fbstp
cmp
into
xor
and
repz
fwait
popf
cwtl
das
movsb
fcoml
sbb
addl
lea
dec
pop
jle
dec
xor
mov
pop
or
pushf
mov
call
shrl
xor
push
and
dec
mov
jnp
enter
sub
loope
cmp
lret
and
push
es
dec
js
sub
push
bound
and
aaa
pushf
in
loopne
bound
ficoms
loope
inc
lretw
push
mov
dec
inc
scas
push
mov
xchg
jmp
lds
xchg
data16
or
cmpsl
mov
ss
mov
pop
mov
mov
mov
shrb
xor
call
repnz
mov
shrb
or
out
push
insb
ret
aaa
shr
mov
sbb
addr16
shll
or
xor
or
jg
xchg
mov
clc
lcall
mov
sahf
sub
mov
xchg
icebp
movsl
push
adc
mov
adc
sbb
jle
repz
lea
lcall
mov
cmp
fnstenv
lret
fldt
lcall
cwtl
rcrl
add
arpl
xchg
mov
sbb
lahf
popl
call
clc
mov
out
out
jb,pn
mov
mov
mov
or
test
push
push
cmp
js
data16
sbb
add
imul
arpl
call
dec
inc
cmpsb
in
insb
dec
sqrtps
iret
mov
pop
jmp
mov
xlat
ja
sub
push
fisttpll
retw
mov
lds
dec
xchg
cli
adc
dec
dec
aas
mov
mov
cmc
mov
daa
inc
aad
sub
inc
mov
jmp
adc
mov
mov
sub
inc
fwait
or
test
jle
imul
dec
in
out
adc
xchg
imul
test
xor
scas
sbb
outsl
add
xor
adc
out
or
sarl
ja
pminub
mov
adc
xchg
xchg
mov
and
adc
adc
push
xor
add
in
or
xchg
fmuls
mov
dec
data16
cmp
in
or
mov
pop
pop
pop
ret
push
sub
inc
enter
mov
adc
and
jle
jne
inc
xor
xchg
pusha
push
push
leave
pop
rcr
push
in
adc
dec
and
lret
mov
xor
inc
pop
fldt
loopne
rcr
mov
cmpsl
jl
cmp
movsb
fimuls
aaa
ss
xchg
insl
out
cmp
jle
in
jo
cmp
rorl
mov
insb
imul
inc
sbb
iret
sti
daa
xlat
dec
aas
sbb
mov
and
dec
pop
adc
stos
test
cwtl
fcmovb
cmpsb
inc
fdiv
fwait
xchg
shrl
dec
adc
daa
pushf
cmp
stc
insb
push
mov
dec
pop
mov
in
mov
mov
xor
mov
mov
or
sub
xchg
and
add
xchg
push
rcrl
inc
push
sar
mov
idivb
data16
in
dec
mov
push
rorl
mov
fdivrs
sbb
jmp
pop
pusha
mov
lret
pop
loop
lcall
cltd
push
add
push
sub
mov
pusha
pushf
dec
cld
fwait
in
pop
loope
es
loopne
mov
aam
test
lcall
jg
cmp
fldl
jge
cmpsb
gs
in
pop
or
inc
mov
xor
xor
jp
call
adc
shl
sub
push
enter
mov
cltd
sbb
testb
test
imul
mov
cmc
mov
sub
inc
fsub
lcall
aam
inc
mov
add
or
scas
int3
ret
into
xor
jg
cli
sbb
sub
pop
mov
stos
pop
and
out
ds
rcl
nop
iret
decb
lock
lret
pushf
rclb
daa
sub
in
popl
xchg
jno
loopne
xlat
insl
cmp
sbb
movsb
push
fwait
mov
xchg
popa
out
out
repz
pop
or
mov
and
xor
xchg
fwait
sub
nop
fwait
xchg
xor
ljmp
sbb
stos
rolb
popa
lahf
ret
stc
mov
int3
cmpsl
dec
cmpsl
xchg
movsb
std
cmc
jb
cli
es
insb
sti
pop
mov
xchg
xorb
mulb
jne
mov
cmp
fsubrp
push
xchg
gs
mov
fwait
adc
sbb
push
or
mov
mulb
lahf
sbb
or
and
or
mov
lea
xor
adc
push
or
lcall
xchg
pop
scas
jecxz
xor
mov
or
in
in
push
sbb
cmpsb
sbb
or
jo
jne
cltd
shlb
jae
dec
lods
xchg
jnp
stos
mov
adc
adc
cld
mov
lcall
mov
out
mov
mov
int3
lods
enter
dec
aas
sub
in
sub
fdivrs
pop
xchg
xor
aad
add
cmp
popf
into
sysexit
push
idivl
mov
hlt
mov
jmp
leave
push
add
jmp
jg
cmpsb
jl
add
repnz
push
cltd
dec
inc
add
loopne
jecxz
xor
mov
sub
mov
lret
popf
rorl
jbe
inc
cmpsb
or
outsl
mov
stos
jae
cltd
xchg
push
jnp
icebp
aas
mov
sahf
inc
jno
or
cmpsl
inc
jb
sbb
pusha
push
jg
popa
std
jo
jae
sbb
mov
xlat
mov
es
addr16
inc
sbb
mov
mov
shrl
pusha
ljmp
stc
das
or
nop
mov
in
adc
jnp
pop
xchg
adc
xor
xchg
pop
mov
in
jp
scas
lea
shlb
repnz
xor
xchg
stos
and
scas
inc
ss
mov
sbb
popa
xchg
cwtl
inc
xor
or
lcall
pop
push
test
jne
mov
adc
rorl
inc
stc
xchg
cmp
xor
cmpsl
cmpsb
jns
xchg
lds
pop
in
pop
add
push
stos
jo
out
ss
xchg
jmp
cld
inc
rol
cmpsl
in
xchg
sahf
testb
int
fmull
jge
cmp
adc
add
mov
jnp
aam
push
sub
gs
lea
adc
jo
adc
movsb
mov
lcall
shll
push
int3
mov
lret
dec
inc
fcmovb
bound
ss
cmpsb
jecxz
je
xchg
enter
je
add
stos
lock
sbb
mov
or
xchg
mov
lahf
test
lret
mov
in
f2xm1
imul
inc
sbbb
mov
and
jle
push
daa
int
std
fwait
dec
int3
mov
inc
fs
jne
in
loop
cmp
insl
imul
pop
push
adc
and
jle
into
mov
aaa
mov
push
dec
and
cltd
xor
mov
dec
fwait
mov
pop
xlat
test
shl
je
lahf
pop
fs
loope
leave
stos
sti
inc
insb
addr16
lret
lcall
dec
jb
adc
xor
adc
jge
mov
data16
icebp
cmp
lock
xchg
xchg
scas
ljmp
add
imul
imul
addr16
push
cli
lods
and
movsl
add
dec
mov
fistl
and
mov
xor
dec
int3
xchg
xchg
adc
mov
mov
je
lahf
mov
iret
mov
and
cld
orb
addr16
mov
leave
aaa
add
imul
mov
fisttpl
mov
adc
daa
mov
sub
stc
mov
mov
subb
add
testb
lds
mov
cmpsb
stos
adc
test
xor
ds
mov
fs
loop
xor
iret
notl
jne
xchg
fdivrl
lods
not
push
xor
mov
stc
in
and
mov
push
stos
mov
icebp
imul
cmp
and
mov
out
xchg
push
xchg
fdivl
push
xchg
in
test
push
stc
test
iret
mov
xor
icebp
std
cmp
push
lods
loope
push
loopne
cmpsb
sbbb
mov
push
inc
jg
mov
jle
dec
repz
cs
cmp
out
jmp
xchg
cltd
push
dec
iret
or
ret
sub
test
fdivs
cs
mov
rcr
out
and
mov
add
pop
push
rolb
rolb
test
xorb
js
xchg
jno
xorl
and
mov
sbb
inc
inc
push
rolb
sbb
sti
in
xchg
mov
test
pop
xchg
insb
or
cld
into
jg
hlt
jno
and
clc
dec
xor
push
std
fldcw
pop
ja
arpl
movsb
and
mov
bound
sub
pop
xor
popa
shll
adc
and
ret
in
xchg
mov
push
inc
cmp
sub
nop
adc
aad
leave
dec
mov
pop
or
sub
sbb
cmp
mov
mov
sbb
arpl
mov
pop
lods
cmpsl
stos
jg
out
sbb
daa
mov
dec
mov
sahf
ljmp
outsl
lahf
cmp
lock
push
xor
push
mov
pop
mov
add
out
xchg
or
mov
pop
xchg
sahf
xor
cmp
loope
scas
loope
xor
shrl
ja
mov
fistps
arpl
rcl
mulb
movsb
xor
dec
sti
dec
jo
stc
ss
sbb
pop
pop
mov
leave
cld
sbb
bound
lea
fdivrs
dec
cld
or
add
xor
aad
ficoml
xchg
dec
mov
or
fbld
in
pop
loopne
fcoms
sbb
sbbl
stos
sbb
adc
xchg
pop
and
push
xor
jb
or
jecxz
push
popa
ljmp
jb
adc
enter
jnp
pop
sub
or
lock
orl
pop
cmp
push
lahf
add
repnz
lcall
ds
and
add
test
xchg
or
sub
rcrl
pop
out
inc
sub
mov
mov
bound
out
bound
jge
cmp
hlt
push
cld
stos
mov
push
addl
js
mull
pop
call
nop
jae
mov
inc
loopne
or
addr16
mov
sub
stos
and
jle
add
push
mov
mov
negl
mov
dec
push
pusha
test
in
lahf
pop
hlt
ret
adc
adc
jge
cmp
andl
and
lock
int3
jne
call
ss
scas
inc
ficomps
xchg
popf
test
mov
stos
sub
dec
lods
inc
pop
imul
jl
pop
jmp
es
push
mov
and
jmp
sarl
int3
pop
and
fs
stos
push
mov
fbstp
jb
xlat
outsb
shr
dec
dec
clc
and
pop
pusha
cmpsl
push
mov
insl
push
lock
je
jb
imul
mov
xchg
or
jg
insb
sahf
pushf
das
xchg
add
or
movsl
insl
insb
add
loop
jno
cmc
cmp
orl
fwait
or
lret
mov
insl
add
stc
jne
arpl
sub
jge
jb
test
jnp
faddl
xor
arpl
xchg
stc
lods
jb
push
out
adc
xchg
sub
dec
jge
cmp
int
jae
pop
lcall
mov
inc
add
jl
xor
xchg
in
frstor
cltd
loope
lds
test
and
jecxz
cmp
mov
aad
pop
adc
shrb
inc
and
cs
sbb
pop
sbb
jmp
sbb
fcompl
jbe
jl
xchg
add
call
mov
jge
add
xchg
pop
cmp
mov
sti
adc
jae
jbe
ss
popf
cld
and
mov
test
stc
mov
test
mov
xlat
mov
call
les
xor
jmp
sub
cmp
call
jb
add
pop
sub
adcb
dec
negb
sub
xlat
xor
fs
xchg
call
pop
enter
xchg
ds
testl
enter
xchg
dec
imul
cld
mov
in
repz
in
ja
roll
enter
test
nop
push
xlat
out
js
sub
pop
inc
in
push
std
jmp
pop
xchg
push
subb
sub
inc
pop
int
lods
adc
xor
aas
inc
add
sbb
or
mov
das
push
sarb
pop
fwait
jecxz
hlt
xor
xor
or
das
adc
fsubrl
xchg
pop
lock
dec
xchg
repnz
pushf
xchg
add
loope
fimuls
out
push
stc
pushf
lock
push
mov
or
jne
fimull
pop
dec
movsb
inc
lret
jle
jge
pop
mov
sbb
sahf
dec
jmp
sub
je
out
lahf
dec
push
mov
ret
cmp
push
out
fimuls
xchg
cltd
data16
pop
out
or
insl
addl
adc
jbe
mov
jl,pn
je
fisubl
mov
xchg
das
mov
movsb
cli
mov
into
pop
fwait
inc
or
decl
fnstenv
cmp
mov
call
cmpsl
fcomps
inc
sbb
out
adc
fs
push
hlt
inc
inc
jns
mov
mov
loop
xchg
mov
lock
sbb
icebp
pushl
stos
push
mov
lock
aaa
push
pusha
xchg
dec
out
lahf
xchg
into
adc
pop
das
pushf
aad
pop
int
push
inc
mov
mov
mov
in
test
fisttpll
lahf
inc
das
fcomps
iret
pop
jle
cmp
jg
pusha
outsb
sbb
xor
sub
test
mov
adc
mov
sbb
test
popa
mov
mov
cmpsb
mov
xor
mov
fstpl
sbb
cwtl
cmp
xor
cmp
mov
in
pop
push
pmulhw
lods
std
push
mov
jl
in
mov
xor
pop
dec
inc
shl
ja
lock
sahf
sub
push
mov
dec
push
sbbb
cmp
dec
dec
jne
test
aaa
loopne
fidivs
stc
cmpsl
test
or
int
add
push
aas
jbe
xor
sub
movsl
and
mov
mov
jbe
push
sbb
arpl
jae
mov
enter
iret
add
push
sbbl
cmp
xchg
xor
or
dec
xor
inc
xor
sbb
sub
cld
mov
mov
idivl
jnp
add
cmp
frstpm(287
jnp
aam
filds
jl
push
sub
sbb
ret
test
mov
int
mov
jnp
sub
sahf
xor
cmp
dec
ds
xor
mov
stos
jecxz
dec
outsl
sbb
lea
leave
mov
in
cmp
jnp
rol
lock
lock
inc
mulb
mov
imul
xchg
aam
jg
and
adc
xchg
jg
mov
insb
mov
push
lahf
rcrb
or
fidivs
sbb
or
out
push
xchg
xchg
pop
bnd
sub
xor
mov
sahf
je
sbb
xor
mov
inc
pop
es
icebp
mov
hlt
cltd
mov
pop
ss
xor
mov
cmp
ljmp
push
cld
and
hlt
xchg
inc
jecxz
xor
int3
cmp
mov
bound
in
or
cwtl
dec
test
ret
dec
mov
stos
xor
add
sbb
push
lock
jmp
push
stos
fimuls
loop
enter
std
xor
pop
mov
leave
push
lods
repnz
bound
icebp
add
rcrb
loopne
cmp
mov
inc
xor
jns
int
mov
xor
lods
adc
pop
jo
adc
sub
pop
in
pop
jae
mov
js
ljmp
aad
or
adc
popa
pop
inc
push
gs
sbb
dec
bound
push
mov
imul
xchg
mov
out
mov
add
fistps
loope
add
pushf
incb
push
push
inc
xor
fstl
push
std
dec
mov
pop
std
in
xchg
mov
xchg
xchg
and
jmp
dec
xor
std
ret
js
add
or
stc
call
into
das
sahf
decb
dec
into
sbb
jno
push
and
mov
and
lahf
and
fldt
xchg
mov
fildl
pop
or
int
bound
test
mov
mov
bound
jp
nop
popa
mov
cltd
in
je
les
das
push
mov
xchg
push
push
and
leave
insl
xor
xor
aas
pushf
leave
leave
js
orb
jge
mov
sbbl
xchg
mov
jmp
notb
pop
in
push
xor
cmp
cmpsb
fcomps
sarb
cmc
cld
popl
push
push
xchg
sbb
fistpl
stos
outsl
data16
imul
lods
daa
mov
cmpsb
stos
xchg
cld
popa
sti
push
rcl
and
sub
fstl
jo
jae
jno
mov
ror
daa
aam
addl
aaa
rcl
std
push
adc
cmp
cmpsl
shrb
popf
inc
popa
ret
rcll
ja
fstpt
stos
mov
mov
fildll
test
aaa
xor
jbe
mov
insb
or
dec
ret
or
test
mov
jno
pop
xlat
xor
mov
adc
or
stos
clc
in
mov
push
jmp
inc
push
xchg
jne
lret
dec
xor
aad
insb
iret
nop
and
scas
mov
xor
mov
add
stos
or
jl
jp
pop
outsl
push
or
lods
dec
push
pop
jl
mov
mov
or
icebp
mov
stc
arpl
fisubs
mov
loopne
lods
lahf
sub
mov
outsb
lock
loopne
fistl
enter
out
cmc
cmp
cmp
cmp
cmpl
mov
in
stos
leave
repnz
fsubrp
mov
out
xchg
inc
imul
leave
cmp
scas
cmp
hlt
push
mov
mov
aad
and
cmpsl
or
mov
pop
ror
and
imul
loopne
arpl
pop
loope
xchg
shrl
loop
dec
sub
loopne
pop
gs
add
ret
mov
mov
pop
mov
iret
mov
rclb
iret
out
ds
dec
cmp
es
inc
lock
xchg
test
test
loopne
mov
addr16
movsb
das
pushf
sbb
pop
jb
sub
or
pause
pop
mov
cli
push
ja
dec
mov
outsb
cli
sub
push
sarl
addr16
mov
cli
mov
arpl
xchg
arpl
add
fwait
push
jbe
cmpsl
mov
add
scas
cmp
push
add
out
xor
jbe
icebp
lret
cmp
pop
add
sub
jo
adc
pop
movsl
xchg
lahf
out
jb
out
xor
fs
inc
xor
sub
xchg
dec
cld
push
lret
sub
enter
je
pop
iret
pushf
idivl
mov
pop
pop
cmp
ja
jmp
add
mov
aas
cmp
adc
push
adcb
pushf
popl
push
and
add
loop
xlat
and
out
add
mov
and
aaa
sti
jle
adc
ss
xor
in
test
push
sarl
imul
fscale
cmp
adc
addb
lods
lret
mov
sarl
shlb
sub
mov
dec
push
mov
repnz
idiv
push
cli
movsl
mov
repnz
icebp
pop
add
xor
mov
or
xor
in
stos
mov
jbe
stc
cmp
inc
aaa
push
movsb
jmp
sub
mov
addl
outsb
lcall
incl
inc
lock
int
lret
in
out
lds
repnz
and
and
cli
and
add
sbb
or
lods
jbe
or
aam
outsb
mov
bound
cmpb
imul
jecxz
mulb
test
push
lods
pusha
mov
jae
or
insb
push
jle
movsb
xchg
jmp
cli
xor
loop
test
push
or
test
adc
sti
push
imul
adc
add
ds
or
jle
fxch
shrb
cs
push
and
imul
or
and
enter
cmp
jg
out
fldt
dec
in
adc
mov
jb
xchg
xor
xchg
into
mulb
add
aam
aaa
hlt
sub
mov
push
leave
cmp
xchg
sti
shll
movsl
test
pop
or
loopne
scas
pop
fisubrs
lcall
cmpsl
adc
jns
xlat
inc
cmpsb
fwait
sahf
mov
add
aam
movsb
mov
sbb
leave
add
sbb
jmp
lods
out
jo
sahf
loop
inc
fnstcw
pop
adc
idiv
insl
push
adc
out
enter
test
imul
cmp
shr
mov
cmp
add
movzbl
div
test
add
and
inc
into
aas
into
push
dec
mov
cmc
xchg
xlat
jge
cmp
das
or
pop
lock
icebp
rcr
movsl
cmp
les
cmp
xchg
pop
sub
inc
sub
adc
mov
pop
sub
xor
addr16
in
sub
ljmp
mov
jmp
ljmp
adc
cwtl
xchg
jg
xor
dec
xchg
dec
xchg
stos
mov
lods
xchg
shlb
lret
and
cltd
ja
lahf
rcrl
fistl
sbb
dec
outsb
notb
jge
cmp
mov
sbbb
pop
ja
jg
and
xchg
mov
ljmp
fdiv
cmp
cltd
mov
movsb
adc
cmp
or
repnz
mov
add
push
and
fiaddl
mov
inc
xor
movsl
std
out
xor
pusha
cmp
int3
xor
sub
sar
mov
ret
inc
outsl
or
cmp
jnp
mov
mov
aas
movsb
testb
cltd
push
cmp
adc
sub
in
jmp
rorl
xchg
cmp
test
mov
pop
mov
lea
ja
inc
cs
jo
sub
into
mov
ror
and
jnp
jns
js
pop
lcall
jmp
pop
mov
jb
pop
or
mov
insl
or
pop
dec
push
push
and
sub
fiadds
es
iret
jnp
adc
enter
lret
repz
stc
or
mov
dec
jg
aaa
test
push
xor
lret
out
dec
or
dec
add
bound
xor
xor
aaa
aas
ret
mov
inc
dec
pusha
cltd
mov
cmp
pop
or
ljmp
movnti
out
cmp
inc
push
dec
and
xchg
push
jno
xor
mov
pop
call
shlb
jge
add
jge
mov
roll
out
lcall
fstps
push
adc
fs
or
mov
or
ljmp
jp
inc
xchg
and
inc
push
adc
adc
int
cmp
push
gs
popa
data16
mov
outsb
adc
imul
das
cltd
in
push
ret
lds
mov
dec
pop
dec
dec
pop
rcll
mov
pop
sbb
push
and
clc
jge
or
and
mov
cmp
insl
mov
mov
into
gs
fucomp
popf
add
mov
push
inc
or
adc
mov
xchg
stos
inc
sub
mov
data16
mov
sbb
ret
sub
sbb
sub
mov
mov
inc
fldenv
dec
push
adc
dec
je
loopne
lcall
pop
aad
mov
jge
out
push
add
mov
jnp
movsl
shl
sub
and
inc
js
stc
mov
fs
and
gs
inc
xchg
outsl
mov
mov
arpl
clc
sti
sub
mov
fs
xor
es
sbb
repz
pop
dec
insl
dec
gs
push
jl
mov
jne
iret
mov
inc
int3
mov
mov
adc
sti
xchg
jg
je
dec
repnz
mov
movsb
es
add
pop
push
mov
push
data16
in
clc
mov
or
mov
mov
into
mov
push
testl
cmc
add
loope
or
scas
jns
shll
nop
ss
mulb
das
pushf
in
pop
out
and
xlat
mov
adc
divb
sbb
fnstsw
mov
popa
popf
push
pop
and
and
mov
lock
sbb
push
scas
fsub
or
lea
rol
std
push
leave
xor
hlt
or
test
xchg
push
aad
roll
xchg
shl
or
fucomp
jno
sbb
mov
mov
scas
jb
push
arpl
dec
mov
mov
cli
xchg
jno
mov
mov
hlt
mov
es
lods
push
movsb
mov
out
fiadds
mov
jno
add
imul
mov
enter
jge
mov
jbe
jg
test
setge
push
into
mov
sahf
or
and
and
mov
out
xor
ds
ret
mov
jae
jne
in
in
mov
lods
xor
mov
movsl
xor
fcoml
repnz
bound
aas
je
push
lods
and
sub
inc
inc
and
push
test
cwtl
lock
push
lret
xor
das
and
push
sbb
lret
imul
ficompl
jp
out
jmp
dec
lods
repnz
pop
into
repnz
cs
xor
fmul
addr16
inc
or
and
shrl
rorb
pop
or
dec
aas
push
imul
sub
mov
or
jno
lds
lahf
lods
xor
pop
ret
test
mov
aaa
cmp
mov
aaa
jbe
dec
add
xchg
insb
test
push
mov
out
je
jns
out
and
mov
pop
testl
movl
jae
inc
icebp
jmp
das
and
mov
or
and
cmp
outsl
adc
lret
jg
jmp
mov
loope
push
add
jae
outsl
and
adc
cmp
dec
repnz
or
xor
xor
jmp
enter
aam
dec
pop
mov
repz
in
and
xchg
int
pushf
or
std
and
adc
rolb
rcrb
scas
int3
adc
mov
ljmp
cmp
jo
mov
xchg
and
sbb
aas
cwtl
mov
mov
xor
or
jg
inc
sbb
stc
xchg
push
dec
movsl
push
or
cmc
stos
cld
jmp
out
jae
mov
push
sbb
lcall
loopne
es
inc
ljmp
dec
int
mov
mov
cwtl
adc
push
sbb
mov
cmc
shl
adc
cmpsl
jge
sub
test
and
inc
mov
or
xchg
sahf
popf
jb
je
popa
lea
sub
imul
jns
rcr
pop
sbb
in
jae
int3
lds
add
mov
cmc
pusha
dec
or
xchg
jns
xchg
cmp
push
lock
add
sub
mov
cmpsb
pop
push
and
cmp
push
jae
in
sub
jae
ja
dec
push
notl
adc
dec
xor
or
xor
fbld
mov
jb
loopne
add
mov
sbb
orb
ljmp
sub
mov
sub
or
xor
bound
jbe
sub
sub
ret
jl
in
daa
std
mov
add
lods
pop
scas
add
dec
test
and
lods
repnz
or
je
xor
call
jp
push
loop,pt
jecxz
lds
and
ret
iret
addl
cmpsb
fsubr
xchg
or
lds
pop
jne
push
scas
insb
sbb
das
out
inc
and
dec
jg
jno
gs
int
and
sub
mov
data16
lret
push
testb
add
fs
xchg
mov
lock
adc
push
mov
inc
and
sub
adc
or
lret
adc
cmp
ret
sahf
cmp
insl
pmaxsw
add
adc
test
and
jnp
jp
aad
inc
xchg
outsl
dec
xor
pop
jge
clc
gs
stos
dec
call
sbb
movsb
and
cmp
dec
add
outsb
jl
repnz
lahf
mov
cmp
ja
cli
push
jecxz
movsb
mov
jp
xor
push
cmp
push
cmp
pusha
xchg
aad
mov
es
mov
movb
add
cmp
mov
or
in
xor
jmp
or
jge
aad
fwait
int
fisttps
sbb
es
aam
test
push
xchg
movb
imul
stos
lahf
pop
lcall
or
lea
xorb
sbb
pop
in
ja
pop
sbb
test
adc
bnd
fdivrs
lret
bound
sbb
lss
mov
rclb
dec
lret
sub
inc
adc
or
and
movsl
les
stos
cmpps
jge
test
pusha
mov
clc
std
push
xor
out
lcall
in
dec
and
add
add
mov
xchg
outsl
and
mov
push
xor
push
cmp
lods
push
sahf
lcall
repz
lods
ror
ss
in
ret
rorb
rcrl
add
xchg
pusha
jnp
mov
and
mov
sub
cmp
je
pop
mov
jb
jp
cmp
rcrb
sub
hlt
aaa
cmp
arpl
int3
sbb
jmp
push
mov
and
pop
orb
mov
mov
pushf
es
mov
pop
fcompl
mov
aam
jns
push
jp
ljmp
mov
xchg
cltd
in
or
push
or
mov
mov
repz
jb
and
popa
cmp
cmp
shll
sub
aad
out
mov
inc
sub
and
fwait
add
daa
mov
cmp
js
pop
int3
xor
ss
out
adc
cmc
cmpsl
in
lret
add
loop
ds
loope
arpl
repz
mov
aad
jmp
xor
sub
lock
lea
call
xorl
outsl
mov
aam
push
sbb
mov
mov
arpl
ljmp
cwtl
mov
inc
adcb
jge
xchg
fmulp
fstpt
addb
jae
orb
sub
dec
sub
ljmp
in
mov
cmp
xor
out
sbb
int
push
iret
pop
sub
inc
mov
jbe
xchg
imul
cmp
cmp
lcall
jge
mov
stos
divb
cmpsb
sbb
mov
cmp
bound
pop
and
out
adc
out
icebp
aas
repz
fimull
inc
cmp
and
pop
je
push
popf
push
aas
sti
pop
push
mov
xchg
aaa
pop
pop
jnp
sbb
imul
cmp
mov
add
mov
fildll
xor
pop
xor
xor
mov
and
add
mov
dec
ds
sbb
push
cmp
cwtl
jmp
inc
fbstp
mov
xchg
and
hlt
mov
iret
xlat
and
and
xchg
inc
out
mov
test
jmp
pop
mov
enter
js
xchg
jne
push
and
add
arpl
dec
ret
lret
mulb
sbb
sbb
jb
jo
movl
xor
cwtl
xchg
sub
mov
outsb
jge
inc
sahf
scas
add
mov
aas
sub
jnp
mov
pop
into
adcl
aaa
xor
xor
cmp
and
shll
xchg
add
mov
test
in
arpl
out
jmp
xchg
mov
cltd
or
pop
cld
add
dec
iret
add
int3
jne
scas
mov
or
xor
cld
stc
mov
inc
or
shlb
test
movd
sbb
fldenv
pop
outsb
lods
lahf
jmp
icebp
outsl
ja
sub
sub
sbb
loope
sbb
xchg
andl
mov
and
jg
in
es
or
sbb
dec
nop
add
dec
cmovns
mov
push
ltr
pop
lds
xchg
and
cmp
mov
pop
xor
pop
dec
insl
jl
xlat
test
or
inc
pop
push
leave
cmp
cmc
lock
fsubrs
dec
rclb
lahf
dec
movsb
add
movsb
cmpsb
jnp
push
scas
arpl
in
fcmovnbe
xlat
testl
xchg
or
mov
mov
fbstp
sar
sbb
or
aas
adc
mov
rcr
xchg
mov
jl
and
and
sub
pop
adc
shrb
mov
or
sbb
ss
icebp
mov
je
mov
stc
int
aas
or
aaa
xchg
and
incl
lahf
xor
imul
dec
scas
xchg
rcrb
es
push
jne
xor
sbb
xchg
cmp
jns
mov
push
push
in
insl
fdivl
data16
in
dec
xchg
add
aas
mov
xor
mov
inc
stos
pop
gs
push
adc
push
jp
aaa
xor
lock
scas
es
sarb
inc
fwait
inc
dec
lods
stos
movsl
jae
iret
xor
push
mov
into
rcrl
testb
aam
stos
stc
inc
in
arpl
dec
notl
popf
mov
pop
pop
add
fucom
int
fucomip
and
pop
and
inc
mov
mov
push
pop
insb
pop
ret
testb
jb
add
movl
xchg
cmp
subb
outsb
jle
or
or
xor
shll
movsb
pop
rorb
nop
jecxz
int3
jnp
adc
add
pop
fcmove
xor
mov
testl
push
iret
pop
and
add
jmp
ljmp
jl
stos
sbb
in
ja
add
xor
dec
shll
test
movsb
or
lea
outsl
lods
lock
dec
xor
test
insb
ja
jp
sbb
pop
fdivr
cld
jp
push
add
xor
xchg
xchg
pop
nop
into
cmp
add
xchg
and
mov
movsb
xchg
mov
xchg
dec
mov
xchg
push
lahf
mov
repz
int
sbb
aaa
daa
daa
int
jo
fmuls
sbb
lea
mov
ret
xchg
and
scas
cs
outsl
inc
aam
xorl
test
pop
pushf
xchg
notl
movaps
dec
sbb
mov
mov
sbb
dec
icebp
jge
pop
mov
popf
xor
lds
dec
add
xchg
lds
out
dec
mov
or
fistl
sbb
ljmp
bound
rorl
lahf
stc
lock
aad
sahf
mov
jmp
mov
mov
mov
sbb
stos
pop
adc
fmul
out
mov
xchg
ja
int
sbb
inc
xchg
filds
pop
add
sub
push
pop
push
stc
push
xchg
mov
xor
pop
xchg
shlb
setbe
fwait
cs
rcrl
movsb
jg
and
arpl
sub
stos
sahf
movsb
dec
add
les
insl
enter
popa
cltd
mov
mov
sub
out
imul
jno
mov
loope
aaa
rorl
xorl
clc
outsb
stc
xor
stc
xchg
ret
pushf
pop
in
dec
fcmove
push
and
stc
mov
mov
xor
movsl
jne
fildl
lea
push
scas
pusha
test
jp
push
mov
xchg
dec
dec
nop
cld
mov
lret
shr
inc
inc
repnz
jb
movsb
cmp
std
lods
clc
fcoms
cwtl
mov
cmpsb
stc
xor
push
mov
jmp
pop
xlat
les
mov
add
sbb
enter
xor
insl
add
leave
add
jecxz
lods
dec
xchg
inc
mov
stos
stos
das
or
fimuls
repnz
mov
std
fnstsw
lds
push
mov
out
push
dec
int3
rcl
mov
les
adc
out
jp
stc
adc
xor
sub
cli
outsl
shll
les
loope
inc
xchg
mov
cs
add
pop
orl
pop
ds
and
or
mov
sub
scas
subl
repnz
inc
push
or
fsubs
stos
ja
inc
jns
movsl
sbb
push
cmp
inc
out
cmpl
out
in
fisubrs
or
xor
mov
icebp
imul
daa
rorl
aam
fnstcw
int
out
shl
xlat
pop
add
jnp
add
shlb
jp
pop
xchg
push
sbb
inc
jbe
sahf
outsb
sarl
push
dec
jbe
inc
scas
push
xor
insl
fdivrl
repnz
pusha
ja
mov
cmp
dec
jl
mov
jno
stos
xor
mov
cmp
add
dec
inc
shrl
sbb
cmpsl
mov
sub
add
jno
jge
adc
jae
pop
push
clc
inc
or
adc
pushf
ds
cmp
sbb
aad
movsb
in
mov
movsb
xchg
sub
xchg
jecxz
sub
xor
clc
cs
sarl
repz
jp
push
sbb
xchg
daa
push
cmp
xchg
ss
roll
scas
in
ror
bound
sbb
repnz
mov
lods
aad
fsubl
add
jns
pop
and
out
jb
lods
fisubrl
xchg
sbb
pop
mov
adc
cmp
cmpl
ja
pop
mov
daa
ret
popf
call
push
leave
inc
mov
aaa
jnp
jae
mov
and
push
jne
mov
stos
ja
filds
mov
dec
frstor
mov
ss
imul
lahf
icebp
sub
mov
fildll
lahf
arpl
xchg
cmp
cmp
addr16
test
xlat
xchg
add
ret
xor
mov
push
push
addr16
mov
jp
ror
fsts
fdivrs
cmp
ret
xlat
or
test
jecxz
jle
andl
xchg
cmp
cmp
push
mov
lods
add
inc
push
std
clc
cwtl
mov
imull
mov
inc
pop
hlt
or
out
jle
or
inc
inc
push
lahf
xor
xor
sub
xchg
jle,pn
push
addr16
xor
cmp
push
int3
int3
mul
enter
xor
es
pop
repnz
xchg
insl
xor
push
pusha
jne
add
sub
sbb
ret
push
dec
jnp
loope
pop
xchg
xor
push
mov
lds
popa
loope
stos
mov
pop
xor
xchg
int
or
lods
into
aas
les
push
jbe
arpl
adc
imul
adc
push
dec
daa
in
daa
xor
int3
insl
ret
xchg
inc
enter
sarb
xorb
mov
sbb
sbb
mov
cwtl
and
fs
repz
adc
movsl
outsl
icebp
push
jmp
push
in
inc
stos
inc
jo
rclb
sbb
mov
lods
dec
sbb
sahf
adc
mov
inc
das
rorl
scas
cmc
add
pop
pop
je
dec
popa
and
fstpl
dec
and
xor
lea
aad
into
repnz
xor
call
xchg
push
call
jmp
xchg
xlat
xchg
lahf
push
cmpsb
xchg
xor
loope
and
or
js
jne
dec
dec
pop
scas
xchg
outsb
fmull
arpl
addb
jecxz
mov
fyl2x
xor
movsl
gs
or
lret
aaa
test
rcll
orb
xchg
pushl
jne
push
and
mov
or
cld
xchg
mov
sbb
push
xor
outsl
nop
or
mov
bnd
adc
loop
jecxz
arpl
mov
inc
xor
jne
pop
or
adc
or
lahf
xor
mov
mov
push
inc
push
sbb
repnz
and
xor
fbld
out
cmp
jns
mov
mov
sbb
xor
jg
out
mov
dec
test
loop
jg
mov
jge
push
std
dec
xor
cmp
jb
bound
push
add
pop
insl
in
mov
aas
decb
cmpsb
sub
mov
test
test
fisubrs
push
pop
jae
jae
les
jbe
inc
inc
addr16
or
push
mov
repnz
jo
xchg
xor
xchg
or
mov
pop
cs
lods
mov
out
pop
pop
add
outsl
test
mov
aad
shlb
inc
xor
stos
and
adcb
rclb
xchg
dec
xchg
lahf
sbb
push
sub
mov
mov
xor
jae
mov
arpl
jns
jne
jne
lods
xchg
es
loop
lcall
sbb
test
adc
aas
jbe
xor
out
sbb
jle
push
iret
mov
pop
jp
xchg
hlt
cmpsb
cmp
mov
xorl
xor
add
adc
inc
jle
test
mov
or
add
scas
cmc
jbe
fidivs
pop
mov
cmpsl
mov
test
into
ret
mov
mov
push
decb
nop
shl
xchg
mov
inc
or
push
xchg
out
jo
loopne
mov
scas
pop
adc
pop
cmpsb
je
pop
inc
xchg
hlt
lods
and
test
fs
xlat
add
xlat
pop
dec
cltd
cpuid
dec
pop
lea
sahf
loopne
push
testl
lret
xor
and
mov
sub
andb
xor
add
lret
cmp
pop
es
insb
jns
mov
je
insb
aam
ldmxcsr
enter
fwait
cld
imul
aad
inc
sbb
fxch
mov
lcall
or
ret
imul
cmpsb
jmp
in
sub
jae
jo
faddl
dec
sbb
insl
int3
or
lods
fildl
dec
push
mov
xlat
mov
inc
or
inc
lods
xchg
cwtl
adc
mov
decb
jp
fprem1
les
js
test
mov
mov
addr16
cwtl
mov
push
sbb
xchg
in
xor
jge
cmp
xchg
loop
add
dec
push
mov
stc
stos
js
cli
jb
aaa
mov
int3
mov
sarb
mov
test
cmp
testl
ja
cmp
popa
je
and
popa
lahf
pop
lock
pop
jg
adc
xorl
test
or
mov
mov
jg
scas
mov
adc
jne
add
lds
test
bound
in
lret
decl
iret
lock
dec
xchg
and
cwtl
bound
loope
bswap
es
jnp
mov
loop
xchg
dec
aad
call
ja
cmp
mov
jne
push
push
add
push
and
mov
pop
cmpsb
or
mov
mov
mov
out
or
adc
dec
test
jb
and
arpl
add
inc
fcoml
push
push
adc
sbb
pop
cmpsb
sbb
xorl
imul
pop
fstps
cmpsb
sbb
aaa
cwtl
sbb
xor
data16
xor
sub
ret
inc
xchg
inc
rep
xchg
pop
arpl
std
clc
mov
ss
pop
out
cmpsl
test
inc
lahf
daa
push
jp
scas
sub
jge
insl
int3
sbb
sub
xor
ret
fwait
popf
cwtl
adc
push
dec
mov
rcll
adc
mov
cmp
mov
aad
andb
outsb
in
mov
iret
mov
shlb
mov
mov
jb
cmp
jae
push
dec
pop
sub
xchg
add
rcrl
and
jmp
es
mov
test
xchg
imul
xchg
mov
dec
sbb
data16
scas
aaa
fisubrs
jno
mov
fisubrs
loope
xchg
and
xchg
jge
and
repz
push
pop
sbb
jp
push
jb
xchg
jmp
push
xchg
aam
dec
mov
sbb
rclb
aad
cmp
leave
fs
nop
scas
sbb
jge
pop
push
adc
and
lcall
cmp
and
xchg
inc
and
push
jecxz
into
fwait
mov
push
iret
cltd
or
nop
popf
lds
push
add
mov
add
lret
shll
cmc
movsl
and
dec
inc
icebp
adc
jl
mov
test
stc
loop
and
popa
outsl
lret
xchg
jae
xchg
sub
setg
cld
fildl
jb
cltd
sbb
movb
push
ds
cmp
lods
jnp
mov
es
sbb
pop
sub
pop
xor
xor
popf
out
rorb
or
push
push
xchg
and
add
iret
sub
outsl
mov
pop
jle
mov
les
xor
mov
sti
outsb
nop
inc
lret
adc
mov
ss
cmpl
fucomip
rcrb
std
add
adc
cmpsb
out
out
mov
jae
jge
into
sahf
adc
test
cmp
stc
outsl
add
mov
jmp
dec
xor
cltd
xor
cld
adc
add
in
xchg
jb
shr
shl
arpl
jl
call
mov
daa
adc
xor
and
jecxz
pop
rcll
push
mov
inc
js
push
add
inc
inc
add
jno
xor
inc
aam
pop
in
and
repnz
mov
and
nop
cwtl
aaa
sub
or
test
push
les
lret
sti
xor
add
push
cmpsl
mov
lret
sahf
fsubrp
mov
rcr
ljmp
clc
sahf
xor
insb
into
add
xchg
cli
ret
xchg
out
mov
adc
mov
and
movsb
push
xchg
hlt
xchg
cmc
ficomps
lret
lcall
jnp
or
lret
sar
movsb
lock
addr16
inc
mov
push
jnp
or
mov
lds
movsl
inc
mov
rcrl
jle
inc
icebp
xchg
loop
cltd
into
lcall
lods
sub
pop
shr
jmp
mov
mov
inc
in
sbb
lods
jmp
cli
push
or
movsb
fisttpll
cmp
xor
and
lret
ret
mov
jl
addl
dec
mov
lahf
test
jo
sub
outsb
scas
mull
fistpl
xor
in
fiadds
mov
sub
mov
out
add
aas
insl
adc
mov
test
cmpsb
clc
add
and
cld
sbb
iret
sub
sub
sub
in
and
push
xor
xor
lods
mov
pushf
sbb
hlt
pop
or
dec
xor
in
in
jnp,pn
and
pop
xchg
add
sub
je
xchg
mov
cmpb
daa
jl
lock
imul
arpl
cltd
out
add
inc
cmc
xchg
imul
pop
sarb
push
inc
or
enter
sbb
jno
mov
or
clc
sub
in
mov
mov
lcall
iret
ds
inc
or
pop
sbb
mov
in
dec
test
aam
mov
std
scas
inc
rcrl
adc
lret
xor
xchg
jp
jno
pop
ja
sub
push
fs
and
cltd
outsl
outsb
out
inc
test
clc
add
in
push
mov
mov
shlb
mov
in
scas
mov
imul
xchg
into
pop
dec
cmpsb
and
loope
lods
ja
insl
push
mov
xchg
xchg
lea
not
js
sahf
cmpsl
or
scas
mov
cmpsb
iret
cmc
cmp
mov
dec
shrl
cwtl
jns
cld
int
filds
dec
clc
sub
les
cmc
sbb
jecxz
inc
push
stos
xchg
jnp
fs
pop
xchg
cmp
push
jmp
test
ljmp
wbinvd
sbb
int3
xor
cld
cmp
cmp
ljmp
jle
xchg
jne
mov
mov
loope
xchg
mov
jae
mov
xor
sbb
cwtl
cltd
outsb
stc
ljmp
add
mov
mov
add
repnz
jg
addr16
testl
push
stos
gs
lahf
lcall
xchg
lock
lods
xchg
pop
outsl
lahf
jl
or
imul
push
mov
jge
sbb
dec
popa
mov
std
lods
mov
jmp
mov
aad
movsb
mov
aam
mov
data16
adcb
test
adc
mov
pop
sbb
stos
cs
fidivl
sbb
push
or
jp
jp
push
adc
ret
fsubs
pop
adc
push
inc
aam
push
pop
ret
cld
mov
ret
sub
sbb
adc
int
mov
push
mov
imul
fsubr
inc
imul
xchg
mov
xor
sub
scas
or
jns
and
pop
pop
imul
pop
jae
int3
stos
pop
and
scas
jns
in
mov
or
inc
sbb
push
xchg
dec
or
cmp
pop
sti
ja
adc
daa
rolb
inc
sti
int3
push
mov
and
repnz
lea
inc
and
icebp
sub
dec
pop
dec
jg
psubq
xchg
aaa
sub
dec
sub
adc
popl
push
fs
mov
das
jns
dec
or
inc
pop
decl
mov
dec
shrl
sub
repz
mov
pop
mov
mov
cltd
clc
daa
sub
sub
in
scas
ret
push
inc
dec
mov
sub
lret
or
ret
clc
enter
leave
mov
mov
inc
inc
imul
loop
lcall
lret
sarl
arpl
loopne
aam
and
xlat
sub
mov
fs
rolb
cli
loopne
cwtl
mov
adc
daa
in
xchg
jne
add
les
mov
add
or
xchg
sbb
push
cmpsl
mov
xchg
pop
xor
adc
sub
mov
aaa
dec
leave
cltd
inc
out
push
sarb
rcrb
lret
xchg
call
lcall
lods
out
cmp
inc
movl
xchg
dec
dec
mov
lahf
dec
adc
into
lcall
push
scas
xor
pop
sbbb
mov
adc
jbe
push
push
sbb
imul
das
in
cmp
popf
cmp
mov
data16
adc
cmc
or
movsb
mov
fcoml
mov
dec
jmp
hlt
add
fisubl
cwtl
mov
push
dec
iret
xchg
movsb
dec
lret
pop
sbb
sub
mov
jnp
and
daa
mov
loop
or
fdivrp
popa
xor
add
xor
mov
inc
sub
xchg
std
xor
fbstp
mov
xor
enter
cs
mov
sbb
pop
in
sub
or
dec
lret
push
mov
int3
add
jns
sti
xor
stc
out
fildll
xor
daa
or
mov
mov
repnz
adc
mov
jecxz
sbb
jae
divl
add
fs
cltd
aaa
outsl
clc
ljmp
lcall
in
jo
jb
dec
rorb
loopne
mov
pop
out
push
mov
lcall
xchg
fisubrl
mov
mov
add
vmread
adc
pusha
inc
push
pop
dec
aas
fxch
clc
mov
jge
loop
mov
mov
mov
pop
into
or
cs
sub
fwait
out
adc
outsl
mov
mov
sti
mov
inc
jno
sub
xor
mov
gs
adc
dec
mov
in
mov
or
imul
adc
mov
xlat
popl
or
addr16
loope
pushf
jp
xchg
ret
shrl
xor
or
xchg
movsl
shll
leave
je
adc
xchg
icebp
mov
adc
dec
xlat
clc
popa
cmc
jecxz
fistpl
mov
popa
out
repz
cmp
push
adcl
dec
setns
xor
nop
in
add
je
pop
and
mov
cmp
cmp
fadds
cmp
xor
jp
lcall
add
test
adc
sbb
cmp
int
repnz
xor
dec
movsb
or
jae
and
cmp
frstor
call
bound
rclb
cmp
xchg
dec
inc
sub
insl
add
and
lret
lret
dec
mov
hlt
add
mov
aam
jg
imul
or
xor
adc
call
mov
adc
cli
and
dec
stc
fisubl
aas
out
adc
xchg
daa
rcr
jmp
push
and
dec
call
lcall
xchg
data16
mov
sti
popf
and
jl
in
lahf
es
adc
xlat
mov
xor
lahf
shrl
les
stos
or
lds
neg
pop
pop
stos
cmpsb
stos
outsb
cmc
int3
repz
sti
nop
mov
mov
mov
lods
mov
xchg
dec
push
loope
mov
cmpb
adc
repz
xchg
movsb
xor
popf
maskmovq
imull
mov
shlb
ja
data16
mov
cltd
mov
sbb
mov
rclb
lods
xor
push
jle
inc
movsl
mov
cmp
xchg
adc
jnp
daa
cli
lock
add
dec
out
mov
in
mov
inc
aaa
mov
out
outsb
test
sbb
push
jecxz
arpl
iret
add
insl
stos
gs
std
je
daa
call
mov
cli
jg
loope
lock
dec
fimull
mov
push
scas
sbb
xchg
mov
sbb
sub
sub
xchg
pop
outsl
stc
mov
dec
lea
jle
mov
push
jne
ret
inc
xor
push
movsl
mov
pop
leave
jne
loope,pn
fists
out
add
sbb
imul
inc
repnz
aad
or
pop
xchg
fidivrl
inc
and
sahf
xorb
in
popf
adc
cmp
fwait
and
lock
jge
add
cmp
mov
out
out
add
inc
push
add
inc
sbb
in
push
mov
dec
xchg
loop
test
stos
insl
sub
shr
xchg
cmpsb
sub
negb
in
test
aas
xchg
pop
imul
push
sub
jbe
or
dec
pop
cmp
fstps
jbe
outsl
ja
sbb
pop
sbb
xlat
sti
int3
jge
sbb
ficoms
dec
cmpsl
mov
jnp
not
xor
jnp
movsl
xchg
lcall
inc
inc
jno
cli
call
xlat
popa
push
js
push
sub
lock
ret
push
pop
push
insl
gs
ds
mov
je
jne
cmp
or
sti
pop
xlat
data16
push
add
mov
or
fwait
decl
repnz
add
cmp
jo
add
dec
push
in
mov
dec
in
jmp
jbe
sub
lea
jae
jb
es
pop
jecxz
hlt
fidivs
jne
clc
cmpsb
sbb
das
adc
mov
imul
add
adcl
out
mov
adcl
pop
outsb
das
mov
add
xor
and
sbb
pop
pop
sub
xlat
add
sbb
and
loope
push
ss
pop
inc
mov
jae
frstor
lahf
mov
xchg
mov
dec
div
sub
in
push
cmp
test
xor
pop
sub
jne
movsl
sub
inc
inc
mov
jae
xchg
dec
pushf
sub
push
jmp
xchg
xor
mov
push
loopne
jmp
adc
pushf
pop
pushf
adc
pop
pop
inc
push
or
fistpll
dec
in
scas
pop
stos
xorl
mov
paddw
xor
fistps
leave
jmp
test
stos
dec
mov
xor
fcomps
add
arpl
or
inc
shr
cmp
cli
jmp
or
mov
mov
enter
jle
push
xor
push
scas
and
push
mov
test
js
loope
xchg
or
dec
cltd
test
cli
inc
mov
ds
push
xchg
push
rolb
je
insl
cltd
out
rol
sbbl
dec
push
dec
in
xor
pop
repz
sub
jmp
inc
mov
aas
sbb
jmp
mov
push
cmpsl
cmp
hlt
cmp
movsb
shlb
xchg
aad
and
adc
push
es
mov
inc
add
xor
jp
dec
xor
sti
mov
sub
fildl
push
lcall
fcmovu
or
pop
mov
imul
jbe
mov
rcrb
test
xor
js,pt
out
cmpsb
call
mov
insl
mov
xchg
xchg
add
test
int3
nop
ret
dec
xchg
push
hlt
jae
jp
mov
pop
mulb
push
mov
cmp
std
lea
cwtl
push
mov
cmp
pop
and
cmp
add
pop
data16
pusha
ss
cld
add
stos
jbe
inc
divb
push
fwait
xor
and
pop
inc
mov
sub
mov
pop
mov
xor
or
and
xor
das
cmp
lcall
push
test
test
push
stc
cmp
mov
shll
jp
push
inc
mov
sahf
aaa
lcall
pop
push
fisubrl
xchg
je
ss
pop
jg
cli
dec
shll
adc
insl
ja
fiaddl
stos
mov
dec
xchg
jl
daa
loope
data16
xchg
push
add
xchg
stos
sub
mov
out
pusha
sub
sub
lds
mov
in
clc
not
mov
lret
daa
xor
shll
cmpsl
or
sahf
lods
into
iret
fadds
inc
ret
mov
mov
stc
rol
stc
or
adc
out
cld
daa
cmp
or
and
rorl
stc
out
jno
xchg
idiv
xchg
faddl
decl
mov
lcall
pop
cmpsb
mov
in
hlt
push
add
insl
fists
and
and
sbb
and
loopne
sub
inc
leave
cmpb
shlb
out
rcll
nop
pop
xor
cmpb
loope
scas
dec
sub
cmovnp
shrl
lret
and
subl
cmp
jo
orl
out
hlt
and
cld
sub
or
push
jo
push
rclb
cltd
push
popa
sub
loopne
test
test
gs
mov
push
cmp
and
inc
xchg
mov
jnp
xlat
inc
imul
fnstcw
pop
packssdw
xchg
ja
es
int
sbb
js
loopne
jne
test
and
inc
inc
and
repz
js
imul
jb
cli
sub
shll
xchg
cli
lods
hlt
out
movl
adc
cmp
mov
dec
scas
es
mov
ficoml
sahf
jle
pushf
notl
imul
test
imul
xchg
and
push
ss
dec
popf
movsb
out
imul
add
pop
mov
ret
or
pop
pop
xorl
or
cmova
pop
and
nop
mov
xchg
mov
mov
sub
adc
xchg
inc
jl
xlat
pop
popa
loopne
imul
icebp
aam
ret
mov
fidivl
je
xchg
test
addr16
push
shlb
mov
dec
mov
dec
fildl
push
popa
add
sbb
add
imul
inc
push
mov
mov
xor
adc
fcmovnu
sti
repz
adc
shrl
sbb
dec
imul
pop
hlt
cmp
xchg
inc
push
mov
sbb
stos
push
cmc
arpl
gs
sarl
outsl
insb
push
negb
iret
lea
add
inc
cmp
js
add
cs
mov
and
push
lret
bound
mov
mov
movsl
push
mov
mov
cltd
or
jmp
push
es
xor
push
cmp
pop
or
push
sub
nop
mov
int3
imul
test
sub
cltd
call
cmc
sahf
or
mov
fucomip
fdiv
ret
sbb
imul
add
mov
pop
mov
or
lcall
insl
mov
pop
lea
call
sub
mov
loopne
xchg
sub
adc
jle
cmpsb
xlat
mov
add
fcoml
test
sahf
or
cltd
lock
lock
aam
loop
sub
fmull
push
sar
lods
aad
push
jge
cmpsb
mov
popa
aad
cmp
pop
sbb
jnp
into
aas
pop
out
add
xor
mov
sub
push
lods
xchg
xchg
mov
push
rcl
mov
push
adc
shrl
repz
emms
loop
repnz
jmp
enter
scas
bound
xchg
xor
mov
jge
xor
xor
jns
jns
loopne
ja
cmp
and
lods
jno
stc
mov
enter
pop
push
rolb
xchg
jb
jns
push
xor
ret
mov
or
push
lods
clc
adcl
inc
push
lret
repnz
adc
mov
pop
js
repz
fcmovnu
cmp
cmp
sbb
sub
or
push
jbe
or
into
sub
xor
in
mov
adc
dec
push
jl
xchg
aaa
dec
mov
dec
mov
pop
in
xchg
insb
shlb
mov
lds
sub
cmpsl
sub
or
enter
adc
loopne
lea
mov
or
insb
stc
cmpsl
aam
pop
movsl
jne
bound
js
pop
ret
in
ficoms
adc
xchg
ljmp
daa
push
push
pushf
repnz
push
rcrl
icebp
mov
mov
xlat
dec
sub
scas
mov
inc
std
data16
loope
arpl
test
mov
popa
mov
and
insb
scas
xchg
xlat
hlt
jle
sbb
out
adc
dec
subb
js
jp
jo
mov
dec
std
pop
xor
std
add
insb
cmp
popf
sar
inc
push
bound
vxorps
pop
stc
ror
cmpsl
xchg
dec
cmpsb
jbe
ja
aas
lock
and
or
mov
dec
sbb
pop
mov
inc
out
test
or
cwtl
sub
push
icebp
pusha
outsb
pushw
sbb
lahf
daa
adc
pop
inc
sub
push
faddl
shlb
lret
mov
mov
push
nop
shll
aad
roll
pusha
or
mov
sub
inc
ja
test
add
cwtl
pop
and
adc
xchg
repnz
pushf
popf
lcall
xor
out
clc
mov
out
popf
outsb
fwait
out
dec
pop
fists
and
andl
xchg
mov
push
popa
mov
pop
subb
add
stc
or
add
sbb
popa
pop
mov
mov
push
notl
stc
mov
mov
inc
adc
mov
test
pop
loop
inc
adc
dec
jecxz
shr
mov
fldenv
pop
mov
andb
scas
add
popf
int3
add
scas
mov
fisttps
jb
mov
xlat
cmpsl
cmp
add
adc
dec
call
popf
xorb
lods
stos
fwait
inc
jnp
adc
ds
imul
blsic
mov
sarl
out
icebp
pop
notl
adc
inc
fstl
jmp
and
mov
pop
out
out
and
insl
jle
ret
faddl
sub
clc
mov
pushf
aam
stc
jl
jo
jns
lock
xchg
or
divb
xchg
in
mov
shrl
adc
test
jns
sub
movsl
xchg
mov
jbe
inc
jle
cmp
stos
and
cmpsl
mov
dec
push
and
stos
jge
loope
scas
push
lock
jg
push
jae
cli
daa
mov
push
sub
subb
inc
cmp
rcr
sbb
insb
lahf
popf
inc
dec
jno
mov
adc
sub
lret
and
mov
inc
daa
dec
mov
imulb
mov
push
imul
shll
je
jecxz
outsb
add
fst
fbld
fdivl
stc
lea
xchg
mov
dec
sbb
rorl
enter
sub
adc
sbbb
push
insl
mov
or
jno
repz
pop
int3
stc
xchg
mov
mov
lock
push
jl
test
cmp
scas
repz
mov
loopne
inc
dec
neg
test
outsb
xor
jle
fs
rclb
into
mov
cmpsb
movsl
mov
push
cmp
cmpsl
mov
pop
sbb
mov
mov
xchg
aad
adc
cmp
fwait
or
rcrb
mov
add
dec
pop
xchg
inc
insb
pop
fs
mov
das
daa
push
sbb
push
push
cmp
enter
inc
and
xor
gs
dec
cmp
push
add
arpl
and
sub
fcoms
lods
xor
mov
push
adc
mov
jmp
daa
and
sbb
mov
mov
xchg
stc
repz
push
xor
xorl
movsb
iret
shrb
lods
test
mov
lods
jns
rolb
pop
mov
enter
mov
cmc
push
scas
inc
lldt
outsb
mov
sub
test
jno
sti
mov
push
jne
sbb
popf
fcoms
pop
scas
pushf
or
stos
ja
mov
stc
out
push
push
or
or
pop
push
outsl
loop
xchg
icebp
push
decl
xchg
fcomps
js
mov
js
ret
fldenv
divb
mov
sub
lret
pop
lcall
lahf
mov
or
xchg
gs
jmp
push
mov
mov
jno
hlt
push
or
inc
aaa
bound
pop
sbbb
fnstenv
or
repz
and
fnstsw
pop
mov
jb
inc
int3
dec
std
les
xlat
mov
pop
cwtl
insb
dec
hlt
shll
push
cmp
mov
loopne
fwait
movsb
add
cs
dec
xor
ljmp
andl
mov
push
jp
adc
fsubrs
inc
sahf
adc
inc
test
pushf
flds
sbb
popf
inc
stos
pop
imul
int
ret
incb
outsl
movsb
sbb
add
pushw
je
add
jno
lock
ret
rolb
inc
push
cmc
fsub
inc
addr16
xor
shrl
inc
lds
or
loope
inc
xor
inc
sbb
data16
push
push
cmp
pop
xchg
bound
adc
or
sbb
and
adc
xchg
push
cmp
imul
leave
mov
push
int3
pop
test
push
push
mov
sbb
sub
aad
inc
or
dec
cwtl
push
or
out
xchg
mov
out
jae
and
inc
mov
push
pushf
pop
aad
xor
inc
lret
pop
loope
sub
xor
aaa
xor
sub
jo
pop
jb
cli
js
or
lea
jns
int3
pop
xchg
fidivs
jne
push
shrl
popa
jbe
push
xchg
add
inc
clc
mov
adc
stos
aad
call
inc
insb
add
adc
jecxz
sbb
mov
ljmp
mov
les
cmp
ds
roll
std
pop
cmp
and
cld
and
jns
push
adc
mov
xchg
xchg
enter
std
adc
sub
ret
jmp
icebp
imul
sub
cmp
mov
mov
xor
pop
and
mov
mov
enter
adc
andb
sarl
orb
mov
push
mov
xor
xchg
jl
fsubrl
test
and
int
push
clc
iret
mov
jb
icebp
lods
subb
push
dec
cmpsl
js
xchg
xlat
jl
rcl
cmp
inc
or
add
pop
hlt
daa
mov
inc
mov
shl
or
jmp
icebp
divb
adc
sbb
scas
push
jg
sub
cltd
aam
call
cld
fidivrl
push
and
push
cmpsb
ficompl
push
aam
pop
outsl
lahf
xlat
inc
ret
fidivl
popa
fucomi
jge
xor
xchg
fwait
out
jecxz
mulb
cmp
or
cwtl
xchg
sbb
popa
out
mov
stc
ljmp
jmp
xchg
sub
xor
dec
sbb
in
test
iret
pop
xchg
sti
ret
adc
add
mov
iret
iret
imul
add
pcmpgtd
xor
and
xchg
hlt
push
adc
push
ja
push
shl
popf
xor
xchg
xchg
adcl
xchg
jmp
or
mov
in
sub
div
jge
jns
push
dec
inc
or
lret
dec
xchg
sub
push
repnz
faddl
mov
or
xlat
cltd
cmp
mov
lea
int3
lock
in
inc
or
mov
pop
xchg
movsb
daa
dec
faddl
adc
jnp
mov
dec
xor
out
or
push
or
sbb
aaa
loopne
mov
push
cmpsb
shrl
nop
add
jge
enter
out
jb
sbb
test
inc
pop
icebp
cmpsb
pop
mov
lcall
add
cli
fwait
mov
add
or
das
or
push
mov
inc
repz
dec
mov
mull
dec
xlat
movsl
aam
dec
lcall
jnp
stos
cmp
pop
shrb
ret
xchg
stos
aas
pop
repz
inc
loopne
and
jae
cwtl
add
int3
mov
add
cmp
pusha
out
xchg
sbb
jae
or
cld
imul
addr16
int
sub
push
xor
pop
mov
nop
xchg
jecxz
push
push
pop
dec
stc
push
sub
aaa
adc
ds
mov
fs
jno
xchg
aad
mov
pop
popf
ret
ja
std
pushf
dec
push
loop
jne
hlt
inc
mov
mulb
aaa
inc
fwait
shrb
or
lock
imul
and
js
add
and
xchg
adc
or
and
into
mov
fadds
sub
jmp
pop
lahf
lret
adc
dec
push
les
push
sub
push
loopne
cmp
dec
lods
xchg
dec
mov
cmpsl
xchg
loopne
adc
mov
add
mov
fs
addr16
fcomps
int
push
jmp
mov
mov
fwait
adc
sub
add
add
aam
cmpsl
adc
dec
popa
pop
subl
popa
pop
fisttpll
test
shll
jb
daa
mov
repz
mov
add
mov
adc
adc
es
cli
sub
jb
jg
inc
xor
push
jl
es
jp
adc
push
mov
repnz
loope
cmp
push
adc
mov
testb
popf
loope
mov
sbb
push
jge
out
and
in
nop
insl
cmp
fldcw
testl
mov
nopl
fdiv
mov
imul
insl
ret
sub
adc
test
and
popf
sub
cs
lock
mov
test
nop
shrb
mov
push
xlat
stos
cmpsl
cmc
jne
mov
and
pop
es
mov
bound
daa
insb
sub
lret
scas
mov
adc
lret
mov
mov
fucomp
cmpsl
xchg
pop
push
imul
cltd
mov
jbe
popf
mov
dec
lods
rol
leave
push
insb
xchg
nop
daa
outsb
pushf
sti
inc
sahf
lahf
jae
fnstsw
push
push
aaa
clc
push
pusha
sub
call
and
xchg
or
dec
jp
push
ficoml
sbb
stos
pusha
push
fwait
pushf
push
push
cmp
cmp
push
dec
ss
inc
test
sar
je
or
mov
adc
add
dec
jmp
lods
mov
gs
stos
adc
out
outsb
sub
jg
push
mov
sti
xchg
push
fidivl
xchg
loop
dec
mov
ja
cs
jle
imul
push
add
fsubr
mov
pusha
sbb
push
inc
mov
or
jo
shll
popf
stos
loopne
mov
in
mov
inc
sarb
insb
test
jge
xchg
jmp
bound
and
in
cli
add
lds
pop
jns
jge
push
fwait
push
xor
mov
test
test
and
xchg
xor
pushf
push
jae
or
ja
mov
lods
mov
out
in
clc
cmc
imul
dec
adc
xor
add
outsb
outsl
pop
jp
subb
in
xchg
xor
lahf
es
iret
dec
pushl
sbb
shrb
xor
mov
mov
cmp
sbb
ret
roll
imulb
and
lret
mov
jo
pushl
cmpsl
adcl
sub
cmpsb
adc
and
sti
in
jg
jbe
in
jo
dec
xchg
sub
xchg
fisttpl
daa
lods
jg
popf
cmp
cmpsl
pop
dec
mov
xlat
cmp
xchg
test
mov
rcrl
jecxz
xor
out
sbb
jne
jno
test
daa
into
jmp
insl
sub
add
decl
shlb
or
loope
ret
lock
cmp
mov
das
mov
xchg
jns
and
sub
dec
pop
bnd
lods
out
cmovge
xchg
decb
lret
fdivr
dec
and
mov
push
data16
adc
jg
and
mov
dec
mov
mov
inc
jge
leave
shr
adc
jne
and
xchg
mov
sti
push
js
outsl
stos
lret
xchg
pop
aam
cmp
jnp
and
ficompl
cmpb
sahf
cltd
andb
jnp
stc
inc
xor
xchg
xor
push
std
sbb
xchg
inc
out
and
dec
pop
aam
movsl
xor
loopne
jge
movsb
push
xchg
inc
test
dec
test
pop
loope
daa
sbb
sbb
stos
jl
push
mov
adc
fiaddl
jne
daa
push
dec
div
jae
movsl
out
push
sbb
dec
imul
lea
je
pop
lods
scas
aam
mov
cmp
stos
ljmp
lock
cmp
andb
jb
xorb
add
out
cwtl
je
sbb
mov
pand
std
xor
test
cmpb
cmp
stos
or
mov
daa
and
sbb
sti
je
mov
testl
push
add
mov
call
xchg
addr16
fs
ret
mov
loopne
aaa
or
mov
mov
jnp
cwtl
xchg
and
push
xor
jae
pop
das
lea
jne
push
stc
fisubrl
or
loope
mov
xor
jb
mov
push
mov
arpl
xor
mov
addl
cld
inc
in
jp
and
pop
sub
icebp
mov
sub
fs
stos
daa
fdivrl
inc
jmp
and
roll
xor
stos
mov
mov
mov
sub
les
mov
lret
cmc
das
imul
inc
pop
xor
jns
jp
cmp
pop
pop
lahf
adc
push
cs
or
orb
mov
cli
push
ficompl
mov
dec
scas
dec
out
inc
or
fwait
repz
or
push
test
popa
xchg
scas
stc
sahf
and
jns
insl
inc
fstpt
int
arpl
jmp
scas
mov
push
cmpsb
mov
inc
dec
cmp
push
add
shl
adc
and
xchg
sahf
fdivrl
cmp
mov
xchg
std
jno
jo
roll
mov
cmp
loop
add
dec
mov
aam
lods
mov
lods
test
push
mov
hlt
std
adc
outsl
mov
xchg
jne
sub
bound
xor
je
lock
fmuls
cwtl
jecxz
sub
lcall
adc
or
in
movsb
mov
xchg
jmp
daa
xor
shlb
test
cmp
or
scas
mov
jns
lret
mov
xchg
call
ror
xchg
andl
repz
cmp
call
pop
sbb
in
into
sub
xlat
aad
insb
jge
pop
lret
aad
dec
addr16
in
insl
addr16
out
jg
bound
dec
push
loop
and
loope
cmp
mov
and
sahf
inc
iret
test
stc
sbb
and
out
xchg
das
xor
mov
xor
sbb
xor
fildll
enter
addb
daa
les
pop
sbb
cmp
xor
lods
and
push
lret
aaa
test
mov
mov
sub
cwtl
or
dec
inc
ljmp
push
jns
mov
out
lret
xchg
push
repz
int3
aaa
add
adc
repnz
mov
xrelease
lret
pop
fmuls
and
sub
mov
mov
test
cs
lret
jo
sub
xchg
xor
ds
dec
xor
mov
and
insb
push
pop
add
shll
mov
push
sbb
ds
pop
cmp
out
lahf
call
dec
arpl
cmpsl
sahf
lods
jg
push
jo
adc
cmp
sbb
das
stos
ret
or
scas
sbbl
pop
shl
adc
sarb
outsl
inc
movsl
pop
lock
adc
xor
and
cmp
mov
outsb
cmc
mov
adc
jbe
cwtl
rolb
add
mov
xchg
inc
push
sub
sub
add
lds
add
movsb
cli
lods
lea
jle
pop
sub
sub
inc
and
popa
adc
scas
insb
int3
aas
cmpsb
push
add
and
mov
fs
out
xlat
mov
in
jne
mov
pop
push
popf
add
push
fildl
mov
inc
outsl
mov
notb
push
test
inc
jge
loopne
pop
jg
lods
adc
dec
jno
cld
aaa
imul
shlb
mov
scas
es
out
xchg
xor
lret
lahf
sub
mov
testl
shrl
fisttps
popf
pop
mov
shlb
out
push
fisubl
mov
inc
inc
sbb
aaa
ret
mov
push
enter
xor
lds
push
lret
mov
pop
inc
in
cwtl
fiadds
and
mov
lcall
inc
and
inc
cmpsb
std
test
dec
fldenv
mov
push
les
xlat
ja
mov
mov
add
xlat
out
ret
mov
push
jle
lret
cli
push
or
out
das
push
mov
inc
imul
xlat
je
aaa
subb
pop
sbb
dec
cmpsb
add
ljmp
pop
and
inc
pop
in
push
mov
dec
jecxz
push
xchg
jp
insl
test
cmp
jmp
sub
scas
push
es
fdivrp
and
subb
and
xorb
push
mov
dec
sbb
inc
push
loop
push
or
pop
aad
cmpsb
arpl
out
stc
or
je
test
rol
clc
bound
dec
adc
or
lods
test
jae
aam
cmpsl
insb
dec
fstps
jge
lds
push
add
and
testl
push
cmp
in
or
or
adc
cmp
inc
das
movsl
xchg
inc
jl
xchg
fstps
jno
cmp
cli
fwait
ds
cltd
push
int3
and
cld
mov
pminsw
xchg
out
jle
movsl
mov
sub
mov
andb
pop
ss
cmp
fisttps
mov
xchg
inc
cmp
imulb
sub
and
jmp
aad
mov
mov
fs
gs
rcrb
mov
push
pop
cmpsl
pop
add
xrelease
repnz
pop
ret
pop
cwtl
adc
lods
pop
jl
enter
fs
or
iret
dec
jle
push
mov
pop
inc
and
popa
je
xchg
mov
loop
and
jl
adc
dec
insb
fwait
dec
jecxz
mov
data16
xchg
pop
repnz
lahf
es
shlb
mov
enter
cltd
xor
sahf
aas
fwait
das
lret
add
popf
push
imul
push
add
fs
shrb
sbb
movsl
adc
pop
aaa
scas
pop
xchg
xor
faddl
scas
mov
cwtl
pavgb
add
jbe
push
rorb
and
inc
ror
dec
scas
adc
mov
adc
jno
sub
jg
sub
insl
fdivl
insl
push
int
cwtl
or
xor
dec
push
xchg
mov
fldt
mov
imul
stc
sbb
push
sub
mov
out
push
test
imul
aas
pusha
sbb
mov
mov
jmp
aad
push
push
adc
insl
mov
insb
mov
fbstp
pusha
xlat
out
inc
cmp
loopne
xchg
lods
dec
imul
sub
lret
xor
push
mov
mov
out
mov
xchg
js
test
in
mov
sbb
cmc
sbbl
movsb
dec
sub
addr16
mov
add
arpl
pushf
lret
mov
lret
jno
ficompl
arpl
rcr
ljmp
push
mov
mov
shlb
jmp
std
fimuls
cwtl
mov
mov
xor
pop
fsubrs
mov
xchg
or
dec
ljmp
pusha
cltd
inc
jne
xor
jl
add
lret
into
push
movsb
and
xchg
sti
into
loope
adc
fistpl
aad
outsb
jnp
inc
xor
jle
sub
arpl
cwtl
lds
sub
fiadds
ja
sbb
fsub
xchg
jp
jno
mov
mov
fiaddl
fmul
fisttps
xchg
xorl
mov
adc
mov
jae
xor
cltd
pop
dec
mov
sbb
or
aam
mov
mov
sbb
mov
mov
mov
xchg
pushf
out
insb
jnp
jge
call
es
mov
insb
je
in
sbb
ss
jg
dec
jo
and
movsl
push
xchg
in
je
call
jmp
insl
loope
iret
xor
sub
scas
push
jbe
xchg
loopne
inc
cld
int3
mov
aas
test
inc
push
rorl
jmp
xchg
and
pop
xor
lods
repz
xor
out
cmpsb
xchg
rcrl
push
sbb
test
jg
je
sahf
inc
push
rcll
sub
xchg
sub
fcmovb
leave
testl
mov
subb
lods
xorl
xchg
jecxz
lcall
lret
out
es
daa
inc
addb
test
lret
ficoms
aas
out
repz
mov
fldcw
iret
aam
sub
shr
push
mov
pop
mov
cld
fldenv
inc
adc
and
clc
add
loope
test
xor
lods
push
int
loopne
push
push
xchg
lret
jns
movsl
neg
pop
jle
std
jns
or
mov
and
fisttpl
rclb
mov
jbe
push
mov
movsb
and
outsb
mov
addr16
mov
push
or
rcll
out
sti
nop
repz
push
sbb
fidivrs
leave
xchg
push
jl
aad
sbb
xor
aas
cltd
cld
imul
inc
imul
cmpsb
mov
flds
pushf
or
push
repz
ljmp
ret
daa
push
mov
out
ds
addr16
cmpsb
into
addb
xor
pushl
fwait
hlt
mov
notb
or
mov
lcall
into
xchg
dec
inc
push
adc
xor
fs
es
mov
faddl
push
repz
rcrb
mov
leave
and
push
das
xor
sbb
data16
ja
inc
pop
lods
daa
mov
fbstp
inc
mov
xor
stos
cmc
push
xchg
stos
sub
adc
setle
xchg
jle
sti
fildl
aam
in
lret
xchg
pop
adc
xor
xor
sub
xchg
popf
cs
lret
dec
adc
testl
std
dec
lret
jnp
mov
jne
hlt
mov
or
inc
mov
mov
pop
lret
inc
pop
sbbb
ja
jge
xor
cld
pop
cmp
cmp
pop
push
push
jg
adc
gs
scas
push
addr16
movsl
jns
jecxz
mov
xor
mov
mov
les
xchg
xchg
loope
cmpl
ss
add
stos
shll
popf
frstor
std
movsl
incb
es
jno
fsubrl
out
sub
cwtl
divl
jge
add
jg
fisubrl
lret
loope
inc
push
jns
enter
inc
stc
cltd
ja
add
movsb
jae
pop
pop
mov
rclb
jb
mov
iret
mov
lock
mov
into
xor
std
and
push
or
xchg
dec
fs
call
add
xor
sbb
sbb
pop
rol
rclb
stos
mov
in
and
ret
cmp
popf
add
sub
push
push
sbb
jno
push
adcb
push
mov
std
fldt
mov
or
rcrl
cmc
in
push
pop
and
mov
lret
test
mov
dec
movb
dec
xlat
inc
sub
call
push
movsb
pop
and
jge
lea
xchg
popf
ds
jg
and
jge
fcoms
jnp
mov
movsb
jne
push
loopne
inc
adc
test
ds
clc
cmp
push
in
jne
arpl
and
ret
cmp
sti
mov
rorb
fbstp
pop
sbb
lret
push
sarb
test
sbb
cld
in
call
pop
ds
mov
and
xchg
stc
jb
fdivrp
mov
add
mov
cmp
into
cmp
mov
xchg
xchg
mov
xchg
lods
mov
leave
outsl
cmp
je
jecxz
and
cld
fidivrl
inc
push
sub
dec
lret
inc
and
jle
adc
lret
enter
mov
add
enter
push
ljmp
and
mov
push
xchg
push
cmp
push
pop
outsb
xchg
subl
push
xlat
jbe
pop
icebp
mov
frstor
sub
push
jmp
ret
mov
mov
pop
test
mov
cmp
adc
sbb
cld
cmp
imul
test
cmp
cmp
cwtl
fstp
loop
xchg
insl
and
das
cltd
xchg
sub
enter
stos
pop
xor
push
jae
mov
fs
pop
sbb
mov
lret
mov
loop
paddusw
hlt
int3
ljmp
lock
jns,pt
or
and
inc
scas
stos
cmp
jl
pop
cmp
adc
data16
aas
cmp
push
fdivrl
leave
xor
sub
and
xor
push
test
mov
sbb
jnp
imulb
pop
adc
cld
xor
loope
mov
dec
add
push
pop
mov
sbb
sar
push
in
sub
int
cmp
psllw
xchg
subl
pop
sub
mov
mov
cs
fnstsw
fadd
daa
data16
adc
jne
popa
popf
mov
mov
repnz
ja
repnz
data16
xor
icebp
icebp
jae
fstp
dec
jmp
xor
add
lods
jp
lods
mov
xor
push
jle
mov
mov
int
jo
fisubl
adc
stc
sub
fisttps
lret
fcmove
cmpb
and
fld
in
cmc
fldcw
shl
mov
mov
loopne
ret
and
hlt
nop
mov
loop
sbb
mov
int
cwtl
test
lcall
fcomi
inc
dec
ret
scas
jbe
cmp
inc
or
enter
not
adc
out
cmp
enter
jae
xchg
popf
ret
fwait
outsl
int3
mov
mov
loop
cltd
insl
in
clc
inc
mov
test
push
push
xor
sub
jp
dec
xor
and
dec
xlat
adc
mov
addr16
arpl
leave
inc
xor
jne
in
sbb
jne
jae
adc
and
jno
xchg
stc
push
test
js
outsb
ret
mov
sub
rcl
mov
aas
call
les
cltd
stos
cld
xor
xchg
stos
imul
or
inc
jecxz
cmp
adc
fsubs
jmp
popa
rcrl
adc
push
scas
fidivl
cmc
xchg
bound
add
mov
sbb
sbb
stos
cmpsl
stos
and
hlt
mov
push
xchg
push
ljmp
mov
mov
in
jge
rorl
clc
enter
out
mov
push
out
gs
push
xchg
xor
sarb
cmp
mov
out
dec
or
sbb
iret
mov
aas
std
dec
lcall
jmp
cmc
mov
out
adc
mov
pop
xchg
addr16
cmp
movsl
addr16
lret
jmp
cmp
insb
call
jge
test
mov
or
push
push
mov
xor
sub
clc
xchg
lahf
cmc
mov
push
xchg
adc
jno
in
inc
adc
and
test
xchg
data16
mov
cmp
push
inc
cld
push
inc
test
mov
pand
orb
push
mov
xor
leave
mov
dec
test
or
mov
dec
les
das
sahf
push
jne
pop
or
cmp
fs
aaa
xchg
je
jecxz
add
lret
das
dec
ror
inc
fstpt
mov
mov
cmp
xlat
pop
mov
dec
push
cmc
sahf
rcll
cmp
inc
lods
insb
test
or
repnz
ja
or
mov
rolb
pushf
lea
cltd
cmc
xchg
or
ret
stos
mov
inc
jns
pop
sub
inc
sbb
add
int3
cmp
jns
adc
gs
mov
fmul
xor
loop
hlt
icebp
test
loopne
mov
idivb
rcr
sti
iret
push
or
mov
push
ret
and
add
loopne
jmp
je
mov
mov
pop
sub
jno
out
push
pop
xchg
fldenv
lret
nop
sub
aam
ret
jae
hlt
xor
scas
add
pop
jle
shlb
nop
cmp
mov
mov
test
dec
nop
sub
bound
bound
lcall
inc
imul
or
ds
stos
aaa
xchg
and
xor
rol
lods
sub
xchg
jge
push
cli
into
jp
test
out
sub
mov
mov
jbe
pop
dec
mov
clc
popf
je
cmpl
xchg
push
clc
xchg
inc
leave
sbb
test
lods
test
mov
and
lret
ja
sti
pushf
pop
hlt
add
lcall
push
xchg
fsubs
scas
ss
imul
or
lock
or
xchg
scas
jnp
cld
imul
push
arpl
jmp
pop
popa
loopne
sbb
shrl
ja
outsl
ds
in
xchg
jns
aas
dec
in
xchg
inc
cld
or
sarl
in
cmp
sti
pop
sbb
mov
aad
lahf
lahf
repnz
xchg
add
jg
push
adc
sbb
ucomiss
pop
loope
lret
bound
jno
push
sub
pop
loope
sbb
cwtl
out
mov
and
pop
notb
movl
sub
int3
les
xchg
repnz
lods
mov
loopne
or
dec
push
shll
lods
jge
pop
inc
push
ficomps
dec
pushf
out
pusha
jecxz
daa
fwait
notl
cmp
ja
cmp
cmp
negb
jl
pop
cmp
inc
lock
cwtl
fwait
icebp
nop
sub
or
or
cmp
sbb
loopne
push
sbb
dec
and
clc
stos
lret
and
mov
dec
add
push
js
dec
or
xchg
fdivrs
push
fs
add
xchg
mov
jp
das
test
dec
pop
inc
cld
push
push
shl
mov
and
mov
inc
dec
gs
cmp
push
mov
push
xchg
pop
outsb
xchg
mov
rorb
ds
jo
addr16
add
mov
or
out
jle
mov
dec
int
in
cltd
pop
outsl
add
ret
sub
mov
mov
fcoms
push
addr16
cs
mov
stos
jbe
or
mov
push
inc
aas
hlt
in
adc
mov
adc
jo
mov
in
dec
call
movsl
repnz
imul
and
mov
push
add
adc
jbe
lret
sub
cmp
add
sub
rol
inc
cs
jbe
pushf
add
xchg
aas
mov
jns
stos
mov
mov
adc
das
mov
or
hlt
out
repnz
fucomip
js
mov
divl
into
outsl
inc
mov
xchg
nop
cmp
fnstenv
fstl
movsl
movlps
test
sbb
xor
sub
cmpsl
dec
rcll
les
push
add
scas
jns
mov
roll
outsl
in
rcrl
stc
outsb
jb
and
cld
push
std
out
mov
mov
jne
sbb
and
pushf
mov
adc
xchg
fidivrl
in
push
movsb
sub
mov
movsb
xor
mov
adc
test
or
mov
sbb
or
pop
aad
dec
cmp
mov
clc
xchg
inc
out
push
jnp
inc
push
js
sbb
mov
pop
inc
repnz
outsl
xor
js
mov
scas
xchg
sbb
mov
jmp
stos
xor
ljmp
in
arpl
jecxz
mov
mov
mov
daa
sbb
sbb
mov
jmp
das
mov
mov
fstpl
mov
sahf
push
lcall
and
mov
fbld
dec
push
sub
xchg
hlt
lods
push
mov
call
xchg
sbb
in
loope
fwait
dec
inc
jno,pt
sbb
xchg
sbbb
cmp
imul
mov
cli
pop
shl
xor
pop
test
mov
das
sub
mov
shrl
mov
jle
call
jg
jo
xor
je
mov
test
pushf
ja
cld
ljmp
dec
inc
jecxz
into
mov
popa
xor
sbb
out
push
insb
mov
outsb
jo
and
gs
cmp
push
mov
mov
mov
cmc
fs
call
jp
sub
addb
sar
divb
ret
mov
mov
push
xor
or
movsl
mov
rclb
rcll
cmp
dec
adc
sub
popf
push
push
push
ror
je
and
mov
cmp
mov
push
outsl
test
stc
push
stc
mov
and
test
push
xor
cli
mov
popa
mov
cs
jns
imul
xor
cltd
out
pop
es
cli
xchg
pop
push
xchg
push
movsb
aad
pop
adc
pop
bound
popf
icebp
jp
lret
cld
sbb
sbb
pushf
lahf
mov
cmpsl
push
dec
outsl
loop
add
and
push
jecxz
cmp
lds
and
pop
cmp
cmp
fidivrs
push
test
jp
sbb
test
jbe
scas
enter
test
mov
and
push
aam
inc
cmpsl
mov
ret
cmpsb
or
pop
jbe
or
xor
jo
mov
inc
push
outsb
or
ds
lock
jmp
fstl
inc
imul
mov
mov
insl
insb
mov
pop
stos
jge
rolb
and
fistps
sahf
rcrb
mov
clc
adc
sti
cmp
cmpl
test
xchg
addr16
test
icebp
js
push
aad
fs
loop
jp
lcall
inc
into
push
inc
push
repz
pop
mov
cmp
inc
add
dec
mov
out
aad
lods
enter
xchg
jg
arpl
js
ficomps
addr16
fcoms
or
add
fsub
inc
push
cmpsb
fmuls
pop
nop
inc
bound
mov
and
stc
repnz
push
dec
pop
icebp
sarl
cmp
adcb
push
inc
jmp
das
es
bound
sbbb
fldl
jg
xchg
mov
push
loop
cmp
add
aaa
stos
sarl
jecxz
out
and
insl
shrl
mov
fidivrl
loopne
dec
fwait
iret
sbb
out
roll
dec
pop
fsts
in
sbb
dec
add
in
lds
popf
orb
or
cltd
jecxz
fstps
jne
or
pushf
lock
push
and
jg
mov
cltd
xchg
cmp
aad
rorl
inc
push
fwait
dec
pop
cwtl
mov
push
fisubrs
jae
pop
and
pusha
pop
dec
and
aad
lods
aad
dec
es
push
jmp
adc
xchg
enter
jb
les
out
and
aaa
dec
andl
mov
mov
xor
repnz
xchg
inc
push
iret
in
xchg
rorl
clc
push
mov
jp
sub
add
cld
xchg
push
cmp
ds
mov
aam
adc
or
stos
bound
jle
jns
fcom
and
iret
mov
pop
xor
ret
adc
mov
adc
je
cmp
mov
sbb
xor
dec
fadds
xor
push
jg
inc
pop
rorb
fs
cmp
orb
test
dec
shrl
int
repz
lea
cltd
jno
les
aad
or
fucomip
xchg
mov
jmp
mov
cmp
pop
pusha
jno
adc
mov
sahf
sbb
loope
stc
lods
or
sub
sbb
mov
add
sbb
adc
sbb
adc
dec
lock
daa
lds
mov
xchg
shlb
adc
leave
mov
adc
push
or
fcmovbe
push
sbb
push
pop
jmp
imul
mov
push
xchg
fiaddl
pusha
cmp
std
rcll
movsl
int
push
mov
das
lahf
cmpsl
aaa
xchg
xchg
bnd
sbb
lods
rol
jo
call
imul
ret
xchg
fimuls
fdivrl
aas
jnp
ret
out
mov
mov
loop
cld
adc
cmpsb
push
xor
sub
xor
ficomps
or
lods
outsl
lds
out
addr16
pop
mov
dec
fidivl
fdivl
push
sub
lret
dec
xchg
repz
adc
cmp
rorl
in
lret
lret
mov
and
pop
jb
sub
mov
sub
inc
mov
or
mov
test
add
and
inc
xchg
out
push
xchg
in
notl
xchg
pop
pusha
cmp
adcl
xchg
mul
cmpl
jge
sbb
sbb
sub
adc
xor
lret
sub
inc
int
popf
les
mov
lods
adc
das
call
cmpsl
sub
movsb
jle
enter
int3
mov
pop
push
test
outsb
jne
xor
adc
sbb
pop
pop
daa
rclb
lret
int3
mov
mov
roll
and
jge
ja
mov
scas
outsl
outsl
pop
out
out
rcr
sub
mov
imul
xchg
adc
movsl
pop
in
sbb
mov
inc
pop
mov
inc
hlt
mov
mov
out
sti
xchg
and
push
outsl
jo
bound
sbbb
add
pop
pop
xor
loope
int
mov
mov
xor
or
pushf
xchg
repz
inc
sub
push
and
push
mov
in
sbb
mov
mov
mov
mov
iret
xor
or
movsb
or
xchg
jno
ret
xchg
dec
inc
push
mov
scas
adc
push
mov
cmp
xchg
lods
ds
enter
cmpsl
mov
and
xchg
incl
inc
jg
fs
add
pop
inc
jo
cmp
stc
inc
pop
sub
push
fcoml
mov
fucomp
mov
pushf
cmp
mov
aam
jb
push
cld
cmpb
lods
bound
cltd
sbb
cmp
mov
roll
fnstsw
inc
repz
mov
push
lahf
fildl
icebp
or
icebp
jae
int
mov
sub
xor
sub
pop
xlat
cmp
icebp
leave
imul
mov
int3
ficompl
mov
or
xchg
xlat
xor
test
dec
pop
inc
cmc
push
xchg
popa
add
mull
es
inc
or
push
push
cmpsb
dec
outsl
das
dec
inc
add
push
adc
ret
js
daa
out
sbb
ret
into
pop
in
adc
jmp
fmuls
jbe
sbb
lea
loop
sub
mov
mov
sub
call
fs
fistpl
cli
xchg
xchg
shrl
shrb
sbb
mov
das
mov
inc
pop
andb
mov
sbb
xchg
mov
mov
test
sbb
mov
add
ror
out
sbb
mov
inc
dec
jbe
lods
xor
frstor
xchg
mov
mov
ja
addb
ss
mov
fstpl
bound
cmpsl
pop
and
and
adc
mov
mov
sub
cmp
cli
jno
or
jb
int3
jns
and
sbb
aas
inc
push
jle
jae
lret
xchg
sete
dec
mov
pop
out
jae
cmpsl
out
mov
rol
add
das
cmp
jg
add
pop
into
dec
notb
pop
fsts
add
push
mov
sahf
mov
lea
das
sub
scas
stos
fwait
mov
inc
dec
out
outsb
cmp
outsb
fs
cmp
aad
aad
fidivs
push
xchg
push
cmc
mov
outsl
aas
pop
test
hlt
sub
ror
lret
jmp
loopne
cmp
xchg
pop
mov
push
mov
push
and
sbb
mov
cli
add
inc
incb
and
mov
sbb
xchg
sarl
negl
pop
mov
cmp
mov
mov
add
cmp
dec
pushf
pushf
cmpsb
or
daa
aas
ljmp
or
cs
sbb
lea
sbb
sbb
cmc
enter
xor
filds
cwtl
dec
add
cmpsb
or
jns
das
loopne
in
adc
push
loope
outsl
mov
cmc
mov
lcall
test
shr
call
xor
lods
mov
inc
dec
jbe
nop
xchg
mov
pushf
mov
mov
imul
jg
cmp
sub
fdivl
les
out
jp
in
jl
scas
sbb
jo
mov
ss
pop
dec
mov
leave
fpatan
and
jecxz
test
out
cmp
cmp
movl
or
cs
fwait
cwtl
dec
repz
mov
and
std
sbb
mov
shll
inc
add
cs
jle
or
test
jecxz
pusha
iret
data16
xor
pop
adc
dec
out
sub
jo
adcl
test
mov
pop
sbb
xor
insl
pop
out
ss
adc
cmc
cli
sbb
mov
mov
loopne
js
fs
dec
fldl
push
jecxz
mov
mov
popf
jns
push
jle
stos
sbb
movsl
icebp
add
movsb
iret
jnp
xor
mov
push
fscale
mov
aad
jmp
push
test
shl
pop
dec
or
add
bound
cltd
xorl
mov
in
insb
xchg
pop
xchg
push
in
cmc
push
sbb
xor
cmpsl
jno
cmp
rcll
xor
push
aam
mov
or
aad
mov
mov
xor
adc
pushf
call
cli
push
mov
or
or
int
or
add
adc
iret
imul
ret
push
daa
xchg
add
data16
mov
cld
loope
ret
cmp
subb
sahf
mov
daa
fwait
int
sbbl
iret
daa
xchg
dec
inc
cmp
dec
mov
push
jl
sti
in
lcall
inc
or
idivb
call
jno
xchg
push
cmp
sub
out
push
sub
jle
mov
push
jecxz
push
push
mov
in
jb
cwtl
in
imul
or
jl
pushf
les
shrb
std
popf
lock
pop
repz
xchg
sbb
adc
cmp
orb
and
sbb
mov
cmp
rorl
pop
out
imul
sbb
and
lea
sub
mov
jno
addb
stos
test
fbstp
cmp
scas
dec
mov
xor
shll
sbb
or
shl
xor
ret
xlat
xchg
rorb
xor
sub
xor
jp
fistps
into
or
int
insb
inc
jle
fstps
push
pop
sbb
movsb
inc
dec
sbb
stos
pop
lods
sbb
fcomps
aad
add
loope
jbe
rclb
xchg
jne
xchg
jmp
jbe
cmc
push
iret
cmp
cmp
adc
mov
jp
or
test
and
in
sub
mov
sub
pushf
pop
sti
mov
imull
fldl
xor
mov
xchg
cmp
cmp
pop
or
loop
sarl
mov
popf
outsb
ja
sub
jae
sbb
and
outsl
xchg
xchg
mov
fiaddl
cmp
and
call
inc
es
ljmp
pop
push
inc
cld
cwtl
test
add
or
ret
icebp
out
mov
inc
out
sahf
xchg
and
xchg
add
push
popaw
xchg
enter
jecxz
test
aaa
rcll
mov
pcmpgtb
data16
xchg
cltd
dec
or
add
dec
jb
sti
test
xor
sbb
inc
and
shlb
leave
hlt
leave
test
xchg
mov
out
sub
and
movmskps
xor
f2xm1
enter
cltd
lret
subb
jbe
cli
subb
push
popa
cmp
push
inc
and
lods
and
rol
inc
pop
aad
aaa
pop
shrb
lds
sub
pop
cmp
sbb
push
ss
xchg
fmulp
add
mov
aad
xchg
aas
pop
andl
fmul
sbb
nop
mov
push
adc
adc
mov
clc
fcoml
in
sub
or
out
lahf
push
mov
fsubrl
dec
push
aam
lret
sub
sub
or
in
rcr
mov
add
aas
adcl
popa
ret
arpl
js
mov
int
out
fs
stos
xor
movsb
jle
pop
and
push
inc
push
add
notb
sbb
jbe
dec
dec
nop
lods
xchg
xchg
cltd
lods
xor
cmpsb
jo
sbb
shrl
pop
xor
mov
pop
push
jb
les
mov
jmp
jmp
cmp
cmpsb
cltd
inc
sub
divl
fsubr
fnstenv
mov
dec
jg
and
pop
cmp
or
pop
inc
fbld
rorl
push
jmp
pop
adc
mov
dec
arpl
cwtl
xor
in
scas
pop
and
push
addr16
xchg
cmpsl
movl
push
fistpll
fs
leave
dec
jge
nop
fdiv
aas
xchg
xchg
add
int
xor
pop
push
cld
ja
das
in
sahf
sti
xor
xchg
sti
cs
gs
scas
push
jae
loop
loopne
xchg
mov
adc
nop
push
bound
lret
mov
pop
jno
sub
sub
int
inc
into
andb
mov
lds
inc
stc
pop
aaa
mov
shll
cmp
jo
ja
push
cltd
mov
add
addr16
push
movsb
dec
scas
call
lret
js,pn
imull
jg
daa
loop
mov
call
test
shll
mov
jbe
in
das
fmulp
mul
add
jns
fnstenv
push
adc
sbb
mov
hlt
xchg
js
pop
adc
mov
das
mov
sub
cwtl
rorb
add
insb
inc
inc
popa
pop
add
lahf
add
mov
mov
or
and
mov
clc
shrl
daa
pop
rclb
insb
imul
push
dec
aas
loopne
and
rcr
incb
inc
bnd
lcall
xchg
xor
inc
daa
mov
or
loop
or
mov
push
out
pop
dec
jp
push
push
incl
sub
mov
lahf
xchg
jge
mov
je
lret
testl
test
mov
mov
adcb
movsl
mov
xchg
dec
jb
inc
movsl
push
jb
and
mull
xchg
or
paddusw
xchg
out
pop
xor
loopne
inc
xchg
rcrb
and
inc
mov
dec
dec
sbb
jno
adc
enter
das
ja
in
mov
xor
imul
lds
cmp
or
int
in
jmp
dec
pop
adc
jb
jmp
aam
mov
pop
pop
out
inc
sub
push
mov
movsb
or
xchg
jne
sub
mov
shl
fscale
xor
pop
aam
dec
les
xchg
and
push
pop
mov
push
out
jno
mov
int
in
in
cmp
je
lret
pop
xor
enter
and
push
negb
ds
cmp
inc
gs
ss
je
fcoml
sbbb
or
lahf
pop
pop
out
incb
xchg
fdivs
jp
test
mov
jnp
dec
mov
push
xchg
mov
insb
add
jo
xor
cmp
in
cmc
fdivrl
xor
inc
scas
mov
pop
shrl
fs
xchg
push
push
sub
outsl
sub
popa
push
test
jnp
xor
cld
mov
dec
outsb
aas
je
or
or
addl
jns
mov
push
scas
inc
adc
or
push
std
aaa
mov
test
adc
jmp
rcrl
cmc
xchg
xchg
and
adc
das
sbb
in
mov
dec
pop
and
jecxz
adc
inc
ss
in
adc
cli
arpl
sbb
cmp
jl
fwait
sbb
test
jnp
adc
lds
mov
cmp
int
jbe
lahf
jp
cmp
xor
lods
push
flds
mov
pop
loope
fldcw
or
pusha
jae
scas
pop
sub
std
push
rorl
out
push
push
or
std
sub
xorl
andl
cmp
push
sub
sub
fcoml
xor
addr16
or
jae
push
roll
pop
push
movsb
cs
shrb
mov
sbb
andl
fsts
add
sahf
ds
test
test
mov
push
mov
repz
push
jg
inc
add
jne
pop
mov
jo
lcall
or
inc
jne
dec
test
xchg
sarl
fnstcw
sub
sbb
push
mov
xor
xor
out
xlat
int3
dec
pop
fnsave
adc
xchg
jbe
xchg
mov
and
sbb
popa
pand
adc
mov
sub
stos
daa
rorb
or
add
pushf
sub
repz
std
test
pop
mov
insb
rep
sbb
out
fwait
lahf
push
sbb
sbb
stos
adcl
jle
int3
fildl
mov
test
lock
mov
pop
jae
sbb
adc
aas
mov
or
xchg
hlt
outsl
sub
ret
add
mov
sbb
hlt
add
jno
int
cmp
sahf
daa
xchg
xlat
fwait
idiv
mov
or
dec
sbb
iret
idivl
leave
fildll
loopne
clc
ret
add
pop
add
mov
and
cmp
pop
sub
push
push
xchg
pusha
pop
sub
fldenv
mov
inc
inc
bound
cmc
out
add
test
inc
roll
pop
add
vunpckhps
dec
cmp
push
jl
lcall
dec
psllq
mov
mov
mov
push
js
and
inc
xlat
stos
popl
xor
xlat
outsb
fiaddl
jae
mov
fistpll
cmc
cmp
cwtl
push
mov
sub
mov
push
jp
push
dec
push
xor
daa
test
xchg
dec
cwtl
popa
outsb
stos
dec
sti
mov
sbb
cmc
frstor
xor
add
mov
fldlg2
clc
jno
popf
scas
jno
push
popf
adc
imul
fnstsw
pushw
or
xchg
push
ds
xor
cmp
xchg
adc
cmpsl
roll
xchg
popf
mov
out
or
mov
addl
into
xor
push
lret
ds
mov
xchg
inc
iret
repz
fildl
inc
add
push
adcl
outsb
insl
cmpsl
gs
cmp
ljmp
cli
inc
sub
loope
pop
push
jg
andl
push
push
adc
dec
xor
xchg
in
lea
pop
xchg
daa
movsl
xchg
or
rcrl
outsl
pop
es
in
sub
push
sub
cmp
lcall
sahf
orl
in
push
inc
sub
mov
cmp
push
hlt
aaa
lcall
cli
dec
push
dec
jns
pushf
push
lods
ja
lret
inc
mov
inc
jae
dec
mov
cmc
inc
lds
inc
push
adc
imul
outsb
pop
stos
movb
movsb
or
mov
test
aad
cld
in
fsubrs
fwait
adc
jb
push
iret
ret
push
push
pop
fwait
add
mov
and
pop
pushf
arpl
ret
mov
mov
cmp
push
or
or
lcall
mov
push
push
jns
mov
pop
les
sbb
stos
test
mov
mov
movsl
mov
pop
mov
cmpsl
adc
fstl
lretw
mov
roll
fidivrs
pusha
add
push
pop
jle
imul
or
push
mov
punpcklwd
ficompl
or
mov
xchg
pop
mov
cmc
loop
scas
test
cmp
push
sahf
std
in
push
fdivrl
es
mov
mov
fbld
int3
mov
out
mov
or
sahf
leave
fs
mov
cmp
pop
das
and
repz
mov
imul
sub
call
in
jnp
or
test
cli
xchg
pop
mov
stos
jnp
addl
std
mov
xlat
movsb
shlb
ljmp
loop
xchg
ds
insl
cmp
mov
mov
sub
hlt
xchg
fstpt
pop
cltd
dec
xchg
loopne
xchg
and
fnstsw
xchg
xchg
xor
dec
mov
fisttpl
inc
push
in
inc
adc
fiaddl
xorl
out
cwtl
add
inc
mov
hlt
das
outsl
mov
mov
and
cmpsl
cmp
movsb
je
sbb
xchg
or
test
mov
inc
mov
test
lods
mov
dec
mov
ret
jmp
shlb
std
xor
out
fdivp
cltd
cmp
adc
aas
jnp
inc
sbb
dec
pop
ja
pushf
push
sbb
push
jmp
jge
push
add
mov
fsubr
mov
mov
inc
std
js
dec
jne
pop
add
iret
push
sub
les
mov
xor
cmp
mov
pop
das
cmpsb
repnz
in
jl
in
mov
adc
outsb
scas
add
or
inc
or
xchg
mov
mov
aas
mov
pop
ret
jmp
je
sti
and
ret
mov
int3
and
fldenv
clc
cs
dec
adc
sub
shlb
bound
testb
lods
cmp
push
mov
inc
std
loope
sub
shlb
push
cltd
cmpsl
push
push
inc
inc
xchg
add
insl
dec
sarb
jp
testl
pushf
test
stc
cwtl
add
pusha
or
mov
inc
mov
sbbl
cmp
std
cwtl
insb
scas
sub
adc
sbb
ficompl
stos
jo
loopne
jne
mov
out
iret
decb
jp
sbb
push
push
dec
mov
repnz
and
mov
hlt
in
addr16
test
stc
jecxz
mov
pop
mov
sub
mov
jg
xchg
pop
cmp
outsl
xor
les
add
fisubrl
xchg
mov
pop
dec
lret
sbb
scas
adc
inc
loop
jg
sar
jge
out
push
je
daa
addb
sub
subb
mov
xchg
adc
push
aad
xor
and
jns
mov
std
daa
mov
push
scas
pop
adc
shr
test
mov
mov
scas
out
addr16
inc
pop
pop
pop
jp
cmpb
repnz
pop
sub
push
insl
imul
lahf
insb
xor
or
dec
mov
stos
jae
or
cmp
jmp
or
mov
out
stos
and
add
mov
xchg
data16
cmp
repz
leave
mov
add
pop
stc
push
sub
cmc
call
mov
dec
bt
imul
aaa
mov
popf
std
sbb
sub
shll
fisubrs
jne
gs
mov
sub
jo
jg
inc
mov
and
mov
push
adcl
pop
pusha
xor
lret
lahf
arpl
pop
gs
fdivl
sahf
incb
jg
popf
daa
lcall
daa
ja
in
jmp
xchg
lret
out
sub
sbb
pop
sbb
mov
lods
dec
adc
mov
lock
shrb
mov
pop
add
rol
jl
aas
pop
dec
xchg
adc
add
xor
sarl
push
xchg
mov
and
mov
inc
lret
pop
lea
jne
lret
ret
jecxz
dec
lods
daa
push
mov
leave
dec
scas
je
push
pusha
gs
in
adc
fcoms
sub
inc
dec
dec
dec
test
clc
stos
xor
stc
adc
xchg
scas
ljmp
mov
scas
and
jb
xor
insb
in
scas
jg
inc
rcrl
loope
jne
add
and
jnp
fsubrl
mov
and
or
sahf
mov
cmp
and
jae
push
inc
push
push
mov
xchg
inc
test
std
inc
push
test
loopne
stc
fstpl
add
mov
jo
int
ss
xchg
and
pop
ljmp
mov
ljmp
cmpsb
push
shll
push
cmc
shr
repz
push
adc
insl
dec
cmp
add
popf
in
sub
aaa
jbe
sub
sub
xor
mov
das
pop
mov
mov
test
mov
int3
adc
out
cmpsl
bnd
inc
jns
andb
into
lret
popl
push
xchg
and
and
or
cmp
in
or
inc
out
jl
scas
xchg
xchg
mov
mov
pop
mov
neg
shll
clc
movsl
mov
mov
cmp
mov
movsb
test
jmp
jg
lret
decb
fs
jmp
sub
ret
addl
mov
sub
jbe
movsl
fnstcw
int3
pop
js
and
stos
sbb
push
jg
ljmp
or
inc
lahf
subl
sub
loopne
loopne
xor
xchg
xor
je
jne
loop
cld
es
adc
test
push
mov
jae
inc
leave
sub
enter
aaa
rcr
jp
and
cmpsl
or
and
inc
push
sub
sbb
scas
scas
sahf
jp
imul
and
mov
lret
stos
mov
lahf
mov
jp
movsl
out
test
mov
mov
test
push
sbb
xor
jmp
cltd
roll
aaa
dec
dec
leave
add
xchg
cltd
push
int
pop
mov
ljmp
iret
push
inc
sbb
popf
mov
pop
sahf
sbb
outsb
lock
ret
jecxz
push
xchg
rclb
cmpsb
pop
orb
mov
in
or
scas
loopne
push
dec
mov
add
and
push
add
int3
xchg
xor
loop
cs
scas
lret
dec
adc
pushf
or
and
or
jns
lret
jecxz
stos
ret
aas
icebp
mov
ret
push
dec
lret
stc
mov
mov
test
mulb
add
cs
dec
and
pop
mov
mov
mov
xchg
push
jae
clc
cmp
xchg
push
adc
js
mov
les
ds
push
inc
mov
js
jnp
pop
data16
mov
cmp
clc
sub
mov
mov
mov
xchg
lahf
mov
push
xchg
xchg
push
fsubrl
xor
js
cld
jb
cmpsb
mov
das
cmpb
xchg
xor
ret
add
dec
imul
addb
fstpt
adc
fldcw
cmpsl
in
sub
pop
leave
int
push
or
popf
push
add
or
sbb
sbb
mov
mov
lahf
cmp
leave
stc
pop
addr16
mov
cltd
mov
jp
ficoms
inc
ds
aas
xor
xchg
lods
insl
push
rol
push
leave
cmp
mov
push
push
dec
adc
xchg
lock
pop
inc
testl
xor
mov
mov
push
sbb
jo
rol
enter
sbbb
pop
mov
ret
fldcw
jo
fadd
pushf
inc
xchg
test
dec
pop
or
hlt
stos
jae
sti
ja
xchg
cmc
push
sub
repz
inc
cmp
push
in
test
mov
mov
das
push
lock
pop
clc
js
outsl
ss
and
xchg
push
jns
cmpsl
xchg
and
add
sbb
les
push
rorl
dec
cmpsl
adc
stc
adc
in
aam
xlat
popl
inc
push
cli
jb
lods
or
xchg
notb
and
ret
add
scas
add
mov
xchg
into
sub
push
adc
xorl
mov
sbb
xor
or
inc
xchg
loop
subb
call
or
xchg
xchg
add
sarb
mov
leave
jo
xchg
in
xchg
out
jl
add
ss
out
rcrb
aam
push
out
mov
and
popa
cmp
or
xchg
repnz
push
stos
test
incl
fisubl
js
and
or
lret
pop
movsb
rclb
jg
lcall
jecxz
pop
lret
mov
ljmp
leave
add
mov
mov
outsb
or
lods
out
adc
repnz
and
pop
pop
out
enter
pop
aad
stos
push
sub
test
test
and
jb
or
xor
mov
mov
and
enter
mov
icebp
aaa
rcr
adc
int3
insl
pop
outsb
add
iret
in
std
popa
jmp
jnp
fcmovnbe
jne
dec
fmuls
mov
insb
add
rorl
popf
dec
movsl
mov
pop
rcrb
jmp
xor
scas
xor
mov
int3
inc
ljmp
pop
jae
mov
call
push
aaa
cmpsb
jb
leave
fwait
cwtl
jb
lds
sti
cmp
jge
cmp
icebp
lods
sbb
jo
and
fwait
repnz
mov
leave
jge
xor
pop
lods
lods
and
adc
lret
std
insb
inc
or
test
mov
cwtl
sbb
adc
push
or
mov
stos
xchg
in
dec
ds
stos
cmp
dec
jecxz
lods
and
jb
mov
test
jb
cmp
shlb
pop
aas
mov
adc
xchg
push
mov
fwait
or
lds
daa
lods
lods
or
idivb
pushf
mov
inc
je
pop
addr16
fwait
push
cmp
into
xlat
cmp
xchg
cmp
jg
cld
aas
loope,pn
mov
or
test
mov
pop
popa
adc
ss
divb
dec
inc
xor
bnd
lcall
push
pop
cmp
in
leave
mov
fs
sub
sbb
mov
mov
out
mov
xchg
jns
mov
sahf
sahf
jne
mov
and
gs
xor
call
stos
adc
or
push
es
sbb
fucomip
std
xchg
sub
stos
pop
repz
ss
loopne
cltd
daa
mov
dec
dec
shlb
mov
cmp
cmp
adc
mov
int
bound
pop
lea
aas
mov
sbb
adc
rcrl
cmpsb
icebp
mov
testb
push
inc
sbb
push
dec
aaa
mov
xchg
into
cmp
push
sti
int3
push
xchg
xor
xor
jle
lds
inc
outsl
cli
int3
notl
inc
jmp
dec
mov
icebp
xchg
xor
inc
push
and
fbstp
icebp
loop
popf
sub
dec
sub
out
jne
sbb
bound
leave
adc
xor
mov
nop
pusha
cld
insl
divl
mov
clc
jg
int3
mov
inc
push
inc
cld
push
fscale
xchg
lret
inc
cmp
xchg
repnz
xchg
sbb
popf
mov
orl
xor
dec
mov
fdivrs
and
aam
imul
cmp
enter
xchg
jae
int
or
aam
das
and
arpl
or
jns
movsl
fcmovu
push
xchg
test
lods
fucomi
push
cmc
inc
pop
fs
clc
cmp
mov
cmp
lret
add
movsl
adc
cli
fwait
sbb
push
xor
leave
test
push
leave
mov
adc
sub
dec
and
sbb
cmp
or
sub
outsl
xor
mov
sub
xchg
adc
shrl
jnp
sbb
mov
icebp
xor
xchg
es
cmc
in
adc
mov
fnstcw
shrb
xchg
xor
movsl
aas
arpl
inc
fildl
pushf
jcxz
xchg
pop
push
adc
adc
nop
pop
mov
mov
cmpsl
sbb
ljmp
popa
mov
inc
stos
loope
adc
rep
jp
push
pop
mov
push
or
icebp
cmp
outsl
pop
bound
jns
mov
leave
outsl
mov
sub
mov
ljmp
sahf
sub
xchg
pop
sahf
mov
xchg
lds
aad
mov
mov
jno
mov
and
loope
mov
fcmovbe
popf
push
sub
mov
push
outsl
pop
xchg
gs
incb
scas
dec
mov
addb
mov
xor
stos
jns
cmp
sbb
add
jae
and
call
push
scas
rclb
add
xchg
or
sbb
sti
jno
add
add
mov
jg
pop
mov
repnz
into
sbb
scas
jae
leave
sahf
xchg
bound
pop
adc
insl
outsb
push
and
ret
in
in
jo
mov
ds
mov
icebp
insl
add
aas
scas
test
dec
add
test
pusha
or
fwait
mov
sub
adc
push
cwtl
mov
add
jle
clc
test
jns
inc
or
je
jmp
jmp
jmp
sbb
xchg
xor
pop
jns
mov
rclb
inc
sbb
adc
fcmovnu
dec
pop
ror
pusha
iret
mov
xchg
mov
mov
out
push
aaa
xchg
fdivr
push
mov
jae
jp
scas
outsb
push
stos
ret
dec
in
pop
sbb
pop
mov
jns
repnz
dec
sbb
add
mov
sbb
imul
xor
jne
jb
hlt
in
push
ja
mov
dec
or
ja
sub
out
test
jge
lret
jg
add
mov
lcall
pop
jle
sub
in
mov
inc
adcb
dec
stc
popa
jmp
stos
aas
sub
arpl
out
loope
jb
daa
jp
cmp
add
comiss
gs
sub
pop
add
enter
fcompl
xchg
xchg
pop
lods
mov
std
push
test
mulb
fstpt
or
push
jp
add
sub
test
hlt
pop
addr16
repnz
jae
lds
xchg
xchg
icebp
jnp
jno
aam
mov
es
aas
mov
xor
add
and
mov
popa
xchg
mov
pop
jle
jecxz
scas
push
cmc
ret
sbb
lahf
sarb
das
mov
gs
loopne
mov
insl
cmp
or
test
mov
cs
insl
add
out
andl
int3
ret
and
inc
gs
lods
sub
push
mov
xchg
cld
or
cmp
xchg
insl
mov
je
cmpsb
pop
mov
arpl
enter
out
fstl
mov
ss
add
les
ljmp
nop
sbb
sti
pop
std
mov
jno
mov
inc
cmc
xchg
ret
jg
cld
xchg
sub
lret
stos
addl
sub
xchg
test
ret
ljmp
or
in
fnstenv
push
jp
push
cltd
pusha
xchg
aas
loop
rorb
call
mov
movsb
push
or
mov
push
aas
inc
cld
xchg
ret
daa
arpl
push
daa
fst
mov
pop
fsubrl
push
jg
testl
pop
jmp
fsub
subb
fnstenv
loopne
aad
pop
xor
into
cmpsb
cmp
fisttps
insb
jg
call
fisubrl
shlb
mov
mov
xchg
imul
lcall
pop
int3
outsb
pop
lods
pop
and
sub
push
aas
into
or
cmpsb
repnz
sub
and
xchg
fidivrl
popf
movsl
mov
mov
or
out
sbb
clc
push
test
std
mov
stos
ficoms
adc
push
shlb
ret
icebp
fdivs
push
xchg
mov
inc
sbb
xchg
out
push
imul
push
and
int3
jp
out
mov
addr16
xchg
sub
test
pushf
sbb
add
jae
push
mov
out
cmpsl
enter
test
cmp
xchg
sub
pop
xchg
fdiv
mov
lret
and
insl
sub
inc
mov
stos
push
sub
push
cmp
lret
cmp
mov
mov
jl
stos
pop
cmp
xchg
sub
or
enter
fcmovb
pop
int
scas
jl
push
scas
roll
push
jmp
nop
lock
inc
mov
xor
jnp
lcall
adc
lods
fdivs
sbb
push
scas
mov
daa
xchg
pop
inc
adc
dec
int3
mov
dec
push
out
jp
sbb
mov
into
into
cmp
sbb
cli
repnz
xchg
pop
leave
add
movsb
shr
dec
mov
cmc
fimuls
lea
into
mov
jo
xchg
rorl
jb
add
sub
ja
mov
cs
in
xchg
inc
xchg
test
in
mov
out
mov
lock
push
adc
clc
inc
xor
pop
jmp
popf
inc
inc
jecxz
enter
mov
xchg
push
dec
push
jmp
lret
int
adc
lahf
hlt
jne
scas
stos
pop
or
cmpsb
cld
nop
fldenv
sbb
mov
fmull
xor
jns
ja
inc
push
ret
adc
std
fwait
lahf
mov
sbb
sub
fstps
jb
in
out
fdiv
loopne
sahf
and
pop
pop
xor
jg
js
add
dec
adc
lcall
add
test
pop
out
ljmp
scas
test
mov
and
ficoms
add
dec
mov
rcrb
out
addr16
outsb
xchg
and
mov
xchg
andb
sub
popf
jns
push
mov
arpl
cmp
push
fs
push
stos
inc
adc
inc
mov
adc
cwtl
nop
insb
pusha
jns
mov
hlt
xor
or
mov
or
scas
adc
xlat
loopne
aas
outsl
push
cwtl
jbe
in
leave
mov
jbe
ret
lret
loopne
inc
mov
aaa
pop
and
push
ss
cmp
shr
enter
and
or
inc
sub
flds
pop
cmp
pop
or
mov
rorl
adc
inc
pop
scas
sbb
scas
stos
mov
sub
neg
insb
dec
lds
pop
aam
or
or
call
adc
scas
pushf
testl
mov
mov
scas
sbb
dec
out
jmp
dec
mov
mov
bound
sbb
mov
push
mov
and
jns
push
xor
xlat
sbbl
jmp
xchg
lock
mov
sahf
sarb
ret
mov
imul
out
jne
inc
sub
adc
mov
sti
xlat
test
scas
dec
aam
std
xchg
and
or
sti
into
xchg
pop
scas
enter
adc
mov
pusha
or
testl
jbe
ret
stc
mov
xchg
aas
sbb
aam
or
aaa
pop
je
jmp
push
mov
and
das
testl
lahf
push
inc
cmp
or
sbb
sub
aam
pop
mov
push
mov
jne
aaa
cmp
jl
mov
sub
rcrl
or
lods
pop
lds
dec
pop
mov
inc
pop
aaa
dec
rorl
jnp
jl
dec
fwait
js
jo
xchg
cmp
scas
and
stos
pop
insb
push
test
sub
ljmp
fisttpl
icebp
fwait
add
sub
ljmp
push
adc
xor
pop
std
movsb
leave
pop
cmpsb
shrl
and
adc
xlat
xchg
mov
fwait
push
xchg
or
ror
clc
hlt
imul
cwtl
pop
in
and
pop
loopne,pt
daa
xchg
scas
xor
sbb
inc
adc
and
popf
shrl
aad
jae
and
fiadds
adc
adc
mov
or
cs
mov
iret
mov
aaa
andb
lret
popfw
fiadds
shlb
sbb
push
arpl
inc
ficoms
stos
xchg
aam
mov
push
lds
imul
sub
iret
out
push
dec
sbb
sub
mov
push
adc
loop
jae
icebp
nop
arpl
add
mov
jp
in
and
xlat
dec
mov
jg
adc
and
cs
ret
sbb
jl
push
push
sub
frstor
shrb
sbb
and
je
push
cltd
adc
add
inc
cmpsl
test
xor
int
jne
push
xchg
mov
xchg
mov
pop
in
sbb
xchg
iret
push
gs
or
sub
imul
or
fmul
sti
cmc
lea
dec
pop
dec
aas
cld
out
sti
jb
push
testl
cmpb
sbb
mov
fdivr
jmp
dec
aas
sbb
fsubs
cmpsb
out
pop
inc
jbe
xor
shrb
scas
test
lods
fwait
dec
inc
push
movsl
cmp
push
xor
mov
cmp
clc
leave
ret
gs
js
lahf
shrl
icebp
jbe
dec
ret
xchg
scas
push
adc
push
popa
cltd
cs
mov
in
or
push
mov
fdivrl
pop
lds
inc
xchg
or
ret
out
ss
dec
pusha
xchg
inc
sub
push
push
add
mov
push
fnstenv
adc
lods
xor
jecxz
jae
add
jmp
pop
inc
jle
pop
daa
rcrb
cld
cs
push
xlat
and
je
ret
stos
orb
add
sbb
imul
andl
fdivrl
push
push
mov
mov
add
loopne
mov
ljmp
sub
data16
sbb
add
aas
jns
xchg
lods
in
adc
cmpsl
jle
mov
sbb
dec
or
jne
mov
or
add
sti
pavgb
add
rorb
in
inc
and
mov
mov
dec
stos
fbstp
dec
daa
movsb
sbb
aam
push
mov
lgs
mov
ja
cmp
in
pop
fistpll
repz
outsb
fucomip
in
or
bound
test
jno
mov
mov
xor
xor
js
icebp
fdiv
arpl
mov
bound
xchg
nop
sub
jno
cmc
cmpsb
sub
in
je
sub
ret
cmp
dec
add
sahf
mov
out
push
and
cld
jns
adc
xor
in
mov
aaa
decb
xchg
xchg
dec
addr16
das
sub
iret
jg
jl
xor
shl
and
lea
push
adc
push
xor
dec
jecxz
les
jae
push
repz
xor
or
test
inc
mov
clc
cmp
or
enter
fistl
mov
jne
rcrb
dec
fistl
aaa
add
out
cmp
sub
mov
mov
jge
repnz
outsb
push
shlb
fs
subl
sbb
xlat
xlat
adcb
jl
int3
aas
push
out
outsl
pop
xlat
jp
popa
sbb
mov
std
pop
mov
sbb
mov
push
jnp
lcall
dec
jl
and
jl
and
inc
push
js
push
hlt
jne
fcomp
pop
or
and
test
mov
adc
les
idivb
clc
enter
insl
or
test
fnstcw
movsb
rolb
aas
add
mov
addr16
rcrl
cmp
aaa
mov
fwait
fucom
xchg
and
aad
add
cmpsb
xchg
dec
insl
pop
pushf
jl
cmc
and
dec
inc
xor
xor
hlt
sbb
xchg
in
xchg
or
scas
fcomps
out
lcall
outsl
pop
jns
mov
mov
jnp
hlt
push
sub
mov
add
add
cmc
mov
scas
adc
mov
jbe
aam
add
push
test
adc
push
or
push
and
scas
popa
pusha
mov
push
mov
mov
mov
mov
push
xor
push
shrb
repnz
ja
out
mov
and
mov
fdivrp
lret
and
add
fcomp
sbb
and
or
int3
clc
mov
out
xchg
movsb
push
push
loopne
inc
hlt
daa
adc
fisubrs
in
mov
ret
jno
pusha
imul
push
mov
scas
sub
push
xlat
xorb
fs
lds
jo
das
lcall
mov
and
inc
enter
dec
dec
xor
sub
test
sbb
xor
out
bound
test
movsb
cmc
movb
or
mov
aam
xor
add
popa
xor
push
pop
jb
xor
das
adc
ret
fcomps
sbb
filds
add
sti
repnz
nop
add
sti
mov
repnz
std
add
cmpsb
jmp
push
in
aas
dec
movsb
mov
or
sub
xor
cld
xchg
sbb
sub
mov
negl
loop
sub
cltd
mov
pusha
xor
xor
sub
xor
jp
push
in
test
sub
sub
imul
aam
inc
fisttpl
xor
les
push
cld
xchg
pop
shrl
pop
sti
or
jne
push
mov
inc
mov
lahf
imul
adc
xlat
mov
sub
scas
in
inc
xorb
pop
stc
xchg
inc
sbb
mov
ja
mov
loopne
jle
fnsetpm(287
cmpsb
call
outsl
mov
sbb
sti
scas
sbb
mov
shrl
test
and
pop
sbb
pop
jle
mov
mov
lods
jbe
cwtl
adc
rolb
cmpsb
adc
xor
pop
dec
push
out
call
mov
mov
je
jp
jbe
scas
jo
out
mov
or
mov
pop
pop
sbb
jne
inc
inc
dec
nop
cs
fldenv
sbb
xchg
subb
inc
and
jl
pop
leave
or
mov
outsl
mov
jle
adc
das
xlat
andb
std
in
leave
lret
das
pop
mov
jl
das
xchg
sbb
xchg
loopne
fs
push
cltd
push
mov
fidivrl
bound
je
aam
leave
inc
nop
ja
add
dec
cltd
arpl
cmp
into
loope
scas
imul
leave
and
mov
into
xchg
dec
test
je
sbbb
lods
fmul
aam
call
sbb
loopne
sarb
dec
mov
insb
mov
in
jnp
hlt
sub
mov
inc
push
lret
jne
inc
stos
inc
xchg
jo
or
lahf
roll
cld
mul
inc
popa
mov
je
inc
sti
mov
fisttpl
out
shll
mov
into
push
mov
scas
jno
dec
sub
mov
aaa
push
mov
aam
dec
repnz
add
mov
incl
cltd
enter
ss
movsb
inc
push
mov
cmpl
xor
cwtl
mov
adc
ljmp
popf
imul
xchg
xchg
jae
jb
adc
aas
sbb
jge
jbe
pop
adc
mov
jle
ja
or
pop
fcompl
mov
mov
in
dec
pop
iret
or
sbb
xchg
mov
jno
xlat
cmc
pop
pop
leave
pop
pop
add
loop
loop
add
stos
mov
mov
push
jecxz
and
in
sahf
inc
scas
adc
bound
icebp
xor
dec
mov
fdivrl
inc
mov
sbb
aam
pop
imul
stos
test
ds
in
stc
mov
mov
fwait
cmpsb
ret
or
add
divb
adc
xor
push
or
out
push
push
andl
cmp
and
jmp
aam
add
jp
adc
shll
jmp
dec
lcall
mov
push
jmp
ljmp
stos
mov
inc
pop
mov
xchg
sarl
and
cwtl
push
sbb
mov
out
jne
inc
xchg
dec
inc
iret
out
lcall
mov
test
and
push
mov
xor
sbb
out
idiv
pop
and
jae
cli
pop
and
push
xchg
js
mov
sub
mov
loope
in
sbbl
jl
xchg
stos
or
scas
cmpsl
mov
cmp
fistps
mov
xlat
pop
pusha
dec
dec
pop
int
in
jmp
dec
push
lretw
mov
add
push
mov
das
sbb
rorl
in
xchg
stos
loopne
adc
lods
subl
mov
xorb
fisttpl
ret
jno
fists
cmp
sbb
fucomp
sbb
mov
cmp
jno
mov
mov
mov
test
movsb
es
mov
cmc
jmp
add
sbb
xor
das
fwait
hlt
dec
or
in
int3
into
lret
adc
inc
adc
jmp
add
xchg
mov
mov
cmc
mov
hlt
mov
push
or
dec
mov
push
int3
in
xor
not
pop
and
mov
cmp
jecxz
pop
sti
jns
mov
mov
mov
push
mov
lcall
mov
sbb
sub
sub
sbb
inc
sbb
aad
das
pop
sub
add
dec
mov
fmul
xor
xchg
dec
mov
vcvtdq2ps
dec
in
in
push
mov
cmp
loopne
lods
dec
adc
xchg
dec
loope
aam
stos
out
lahf
outsb
out
das
ret
adc
push
icebp
xchg
data16
inc
popf
outsl
xchg
xor
or
xchg
pop
les
rclb
add
mov
addr16
aam
or
adc
aad
stos
aam
jp
scas
test
mov
jmp
cmp
into
shll
incb
xchg
sti
ss
insb
sahf
outsb
xor
ficoms
negb
andl
enter
mov
shlb
stos
ret
jns
mov
xchg
xchg
jmp
mov
loop
mov
mov
lahf
loop
pop
sbb
divl
scas
dec
mov
push
push
xlat
repz
out
sub
jl
test
shrl
lea
out
aas
adc
into
sbb
in
imul
xor
jbe
pop
adc
dec
mov
cltd
pop
cmp
dec
mov
pop
push
rolb
sbb
lea
add
stos
shrl
jno
mov
inc
push
cmp
xchg
mov
xchg
inc
das
push
and
bswap
xchg
inc
mov
inc
stos
shlb
xchg
subl
mov
shlb
insb
xor
lea
mov
scas
mov
adc
xchg
sbb
movsl
test
cmp
lret
frstor
mov
mov
sub
shlb
iret
mov
xorb
dec
imul
call
lds
mov
stc
xchg
dec
mov
mov
stos
fisubs
jmp
fmulp
inc
pop
sub
mov
mov
mov
es
cltd
sbb
hlt
mov
pop
mov
mov
mov
mov
pop
lods
mov
fnstsw
shrb
cmp
scas
ja
jg
sahf
jo
dec
push
scas
mov
pop
lahf
mov
fbld
cmp
scas
cmp
inc
lods
xor
or
out
fstpt
pop
or
fsub
test
jmp
sub
xchg
icebp
push
mov
adc
pop
cs
out
test
push
pop
shll
push
iret
lods
xchg
pop
xchg
out
jl
out
xor
add
push
mov
push
sbb
insl
push
and
in
xchg
sbb
sti
sbb
aam
mov
mov
les
pop
test
add
jno
mov
jae
lds
int
jne
outsl
xchg
je
fnsave
sahf
roll
call
shr
mov
loope
xlat
lcall
and
or
and
add
pop
lock
int3
cmp
enter
ret
mov
js
push
xlat
pop
and
dec
das
loop
jno
and
pop
and
inc
dec
das
sar
or
jnp
push
and
popf
inc
in
sbbl
xor
loope
mov
test
fcmovu
jnp
push
insb
arpl
sbb
filds
into
xor
sbb
sub
bound
adc
fistpll
sub
push
leave
xchg
fs
sub
add
mov
mov
out
dec
add
frstor
stos
popf
sub
lods
fistps
lar
ss
push
add
sbb
dec
sub
xchg
stc
mul
mov
std
inc
pop
in
rclb
je
xor
cli
mov
jecxz
sub
in
or
hlt
pop
sbb
mov
test
testl
add
outsb
nop
pop
pop
mov
cmp
jmp
pop
cltd
stos
dec
sub
lcall
push
pop
js
in
adc
xor
sar
push
cmpsb
loope
and
mov
push
and
mov
cmpl
mov
add
lods
clc
test
fcoms
sbb
adc
fisubrl
aad
or
mov
and
iret
push
and
inc
test
pop
xor
sahf
xor
jne
and
push
ja
mov
inc
popf
out
xor
adc
fstps
imul
mov
mov
les
jae
test
inc
fwait
roll
add
add
mov
dec
mov
call
ljmp
iret
xor
push
xor
cmpsl
pop
gs
mov
adc
fwait
jg
ljmp
and
lahf
cmc
int3
int3
pushf
xor
imul
mov
lcall
es
cld
popa
or
sub
repz
jle
cltd
jle
std
je
fwait
mov
jl
lds
pushf
sub
mov
test
push
out
pop
add
xor
and
inc
int
lret
leave
nop
jle
stos
mov
push
out
inc
and
and
cmp
sbb
leave
lahf
add
mov
adc
mov
xchg
adc
movsb
inc
ljmp
push
shrb
pop
popa
ds
mov
sub
or
jnp
push
cmp
out
or
mov
negb
sbb
stc
bound
repnz
sbb
xchg
jbe
mov
push
mov
repz
jp
sub
cmp
test
and
mov
inc
pop
adc
movd
mov
leave
xchg
clc
add
int
insl
inc
adc
pop
lcall
dec
jmp
jae
jp
mov
mov
dec
stos
push
or
enter
mov
test
add
or
cwtl
mov
mov
in
outsl
mov
cs
xor
cld
mov
das
es
jmp
inc
xchg
movsl
daa
mov
in
push
lret
mov
add
orb
fstl
mov
or
dec
adc
inc
mov
inc
pop
pop
mov
xor
js
inc
into
push
jne
mov
aas
jle
mov
mov
inc
inc
inc
adc
loop
outsb
mov
lods
and
xchg
push
stos
sub
or
test
lcall
out
xor
push
or
xor
icebp
ret
or
aam
push
out
test
shrb
sub
sti
push
aas
cs
dec
push
sub
ret
jae
xor
mov
scas
cmp
inc
sub
ret
test
ret
mov
sbb
in
test
mov
xchg
lds
jae
or
mov
out
jg
inc
sbbb
mov
lea
mov
stc
outsb
arpl
dec
iret
xor
xchg
cs
ror
fcoms
push
xor
int
popa
xorb
push
cld
mov
pop
push
int3
mov
sarl
sti
add
imul
movsl
daa
sti
fdivrs
mov
imul
mov
pop
das
cmc
push
into
out
mov
into
cmp
push
adc
mov
jnp
fs
aaa
fildll
sub
mov
or
pmaxub
out
sti
in
loop
mov
jo
mov
cld
iret
fdivl
outsl
es
je
pop
out
cmpsl
outsl
xchg
cmp
insb
push
into
rcrl
gs
in
call
add
cmp
int
or
stos
xor
lret
or
inc
int
lea
addr16
mov
dec
jle,pn
xchg
push
cmp
loopne
jno
adc
scas
pop
mov
jo
nop
scas
cmpsb
sub
iret
fadds
jmp
aam
std
adc
cmp
es
in
in
mov
fisttpl
and
gs
scas
inc
mov
loopne
mov
inc
in
push
jl
stc
mov
mov
adc
test
lds
push
cmp
push
dec
cwtl
inc
inc
sbb
int3
xchg
loop
nop
xor
mul
addb
cmp
out
popa
push
mov
fdivs
lods
xchg
mov
loop
adc
push
sbb
xchg
pusha
lahf
mov
inc
movb
out
jnp
adc
mov
into
xchg
ret
out
pop
icebp
jmp
and
jae
jb
push
test
mov
js
addl
xchg
xchg
dec
hlt
cmp
shlb
mov
dec
out
and
rcrb
or
or
test
cwtl
jbe,pt
hlt
mov
stos
jnp
ljmp
outsb
insb
call
push
mov
lret
aam
icebp
std
cli
je
test
ds
cmp
test
pop
push
roll
inc
push
xchg
sub
test
lock
imul
dec
bound
call
dec
imul
sbb
sbb
popa
les
rorl
pop
inc
dec
inc
jp
jb
sti
ja
adcb
cwtl
cmc
dec
clc
fwait
add
or
rcrb
scas
push
push
xchg
jecxz
lret
dec
int3
std
mov
jno
mov
nop
leave
mov
jmp
mov
repz
cwtl
sete
js
xor
call
pop
mov
xchg
cmp
mov
fisttpl
xchg
aam
in
mov
stos
jmp
scas
cmp
dec
xchg
xchg
sbb
mov
out
mov
inc
js
nop
push
aas
cmp
push
repnz
out
pop
inc
xor
call
scas
pop
fnsave
adc
out
xchg
cmp
adc
icebp
hlt
inc
cmp
cltd
arpl
jbe
out
inc
jl
cwtl
sbb
and
mov
inc
sarl
fcoml
mov
movsl
mov
pop
push
push
mov
test
and
jge
pop
mov
lock
int3
dec
pop
pop
sub
mov
cmp
mov
pushf
pop
mov
insb
pop
bound
sbb
orl
or
mov
sbb
pushf
and
pushf
adc
fldenv
pop
movsl
int3
outsb
cwtl
daa
in
out
std
sbb
outsb
sub
sbb
aas
inc
mov
lods
jae
sbb
inc
jno
imull
idivl
ja
lcall
popf
mov
cmp
loope
mov
addb
scas
cmp
divb
insl
sub
hlt
lea
aam
stos
inc
outsb
scas
mov
fwait
cmpsl
push
sarl
es
daa
xchg
push
cmp
and
jno
sub
jp
add
pop
fsubl
mov
nop
add
and
scas
je
into
add
or
or
inc
bound
push
mov
dec
mov
std
pop
mov
and
lret
push
fs
imull
into
mov
jp
les
cli
xor
shll
and
jmp
insl
popf
lret
pop
jb
lcall
testl
sbb
cmpps
mov
fmuls
cmp
call
xchg
jl
ljmp
adc
outsl
xchg
stc
mov
mov
lock
jns,pt
lods
sub
xchg
fwait
clc
ret
into
subb
ret
inc
mov
fs
add
dec
adc
pop
outsl
adc
loopne
mov
sbb
pop
push
test
loop
shl
jne
inc
adc
ret
mov
mov
add
pushf
rcl
fcmove
pop
xchg
cmp
les
or
outsb
xchg
cmp
fdivrs
cmp
jne
pushf
cltd
pop
in
loope
pop
jbe
jo
adc
aam
mov
and
jno
jge
xor
je
pop
sbb
mov
lea
les
add
scas
fisubs
inc
call
dec
enter
out
or
ror
sti
sub
stos
mov
xchg
cmpsb
jno
push
nop
int3
xchg
rol
sahf
lcall
iret
push
or
push
imul
dec
movsl
lock
lea
clc
adc
push
xor
xchg
sti
inc
xchg
jecxz
popa
jle
ret
in
cmp
dec
or
xchg
sub
dec
xor
inc
ret
lahf
fmull
jle
loop
jne
inc
leave
xchg
out
scas
insl
mov
iret
enter
fucom
int
test
sbb
scas
rclb
sbb
das
lds
fldt
lods
dec
test
jb
es
jno
in
ret
out
jle
je,pt
push
push
xlat
push
push
sbb
rclb
lret
loope
leave
cld
aaa
xchg
and
dec
shlb
pop
push
fwait
cmp
sbb
and
push
cmp
mov
cli
xchg
xchg
incl
sbb
adc
lock
repnz
push
enter
jge
cmp
fadds
lods
pusha
sbb
mov
xchg
push
inc
jbe
cltd
inc
lret
add
mov
das
test
aas
push
into
insl
dec
sbb
test
repnz
gs
cld
sbb
xor
mov
pop
aaa
lds
push
cmp
aaa
shrb
xorl
insb
dec
sti
push
ja
jge
fcom
pop
repz
mov
dec
inc
or
add
sbb
test
mov
movsl
lahf
mov
sbb
in
mov
call
out
pop
ljmp
outsb
sub
arpl
or
stos
fcomps
ficompl
sub
pushf
andb
sahf
cmpsb
push
mov
xor
pusha
cmp
pusha
andl
jae
mov
xchg
mov
das
jecxz
push
es
xchg
dec
js
js
jbe
fadds
daa
sbb
iret
clc
push
pop
movsb
dec
jne
aad
scas
pop
dec
push
std
sbb
sbb
pushf
loopne
shrl
das
or
cmp
or
cwtl
clc
int
ds
adc
inc
movsl
push
jnp
fisttps
test
in
mov
das
push
dec
jecxz
inc
adc
jae
xor
mov
in
xor
xor
dec
negb
add
sub
cmp
popa
push
push
cli
insl
lret
push
arpl
sbb
sarb
mov
outsl
add
test
adc
sahf
jne
mov
call
rcr
lods
mov
sub
cwtl
fstpt
or
pusha
sub
stc
jecxz
push
les
insb
jg
and
xor
aad
add
pop
sub
jae
gs
sbb
sbb
mov
add
stos
or
sti
adc
cld
jge
cmc
mov
jno
jae
outsl
sub
addr16
push
xlat
jne
imul
into
roll
push
clc
rcll
fdivrs
mov
out
add
and
fwait
adc
push
lcall
pop
sbb
pushf
inc
mov
or
sub
out
mov
mov
jmp
or
imul
pop
daa
cmp
lea
cmpsl
sbb
test
nop
out
cmp
inc
loopne
mov
pop
mov
icebp
scas
movsl
and
fucomip
inc
sub
xor
ja
add
xchg
mov
sarb
jg
push
lret
mov
sub
adc
cmp
mov
dec
and
insl
and
int
dec
stos
push
js
adc
add
cld
out
gs
inc
popa
inc
ljmp
scas
cltd
jb
xchg
pusha
adc
aam
std
jmp
push
addr16
out
mov
cmc
divb
insl
out
jno
or
and
jne
rclb
push
xchg
nop
dec
pop
and
mov
jg
mov
mov
repz
outsb
test
mov
in
sub
cmc
adc
ja
int
iret
sbbb
sti
test
xor
dec
xor
mov
jno
nop
int
or
inc
int
aam
test
lret
cli
mov
or
or
in
shll
mov
mov
or
addr16
or
aad
out
fsts
add
nop
or
pop
pusha
mov
cmpl
push
repz
roll
pop
aas
fdivl
cmp
jbe
sub
push
and
mov
lcall
ljmp
stos
les
dec
add
scas
fst
pop
xchg
mov
test
leave
int3
cli
mov
loope
aaa
aaa
add
mov
jecxz
fdiv
mov
mov
sbb
mov
push
sub
xchg
sarb
mov
xor
loope
mov
add
hlt
mov
pop
jbe
cmpsl
jge
inc
outsl
mov
inc
sbb
jge
mov
pop
iret
sbb
fstpt
push
mov
lahf
mov
sub
cmpsb
pop
or
jmp
clc
fwait
dec
popf
sbb
dec
adc
and
mov
cs
nop
incl
pop
test
mov
add
xchg
mov
imul
jmp
adc
imul
pop
aaa
pop
jp
ret
addr16
fdivrl
rol
div
or
dec
ja
insb
mov
jg
pop
fwait
mov
jl
test
js
adc
rol
dec
addr16
lods
or
mov
adcb
adcb
jmp
je
bound
dec
arpl
push
ret
cs
mov
xor
xchg
mov
add
pop
pop
ss
sbb
add
inc
aad
lods
test
xor
or
adc
xor
jnp
pop
rolb
and
ret
mov
jbe
bound
mov
idiv
or
push
dec
sbb
je
push
loop
mov
pop
cmp
jae
stos
fwait
repnz
pop
push
xor
sbb
jns
aaa
or
loopne
and
or
bound
stos
mov
add
push
push
out
sbb
and
inc
cli
stos
insb
mov
push
mov
fwait
outsl
jo
pop
pop
adc
push
sti
push
xchg
in
mov
cmp
push
jmp
add
repz
movl
and
jns
testb
and
and
push
jg
xor
inc
out
dec
jge
sub
incb
repnz
sub
imul
shl
pop
mov
sub
inc
lods
adc
jae
mull
cld
data16
rcr
mov
mov
pop
fs
sub
dec
sti
pop
sbb
out
frstor
xchg
out
fstps
dec
aaa
xchg
dec
xor
sti
push
in
cmc
mov
icebp
lahf
scas
inc
xchg
movsb
repnz
cmpsb
lret
outsl
mov
pusha
jle
imulb
cmp
repnz
sbb
in
lds
xor
in
mov
cltd
push
xor
lods
out
jl
pop
adc
or
and
popf
je,pn
fdivl
mov
jae
fmull
pushf
roll
stos
mov
xchg
pushf
stos
iret
mov
xlat
test
int
and
stos
jae
loopne
femms
push
mov
pop
or
mov
sahf
xchg
dec
pop
testl
pop
ljmp
mov
mov
lret
cmp
pop
sub
mov
call
mov
cmp
imul
cmp
inc
adc
inc
inc
pop
ret
popf
hlt
mov
mov
cmpsb
jb
dec
sub
inc
cmp
push
mov
sbb
pop
nop
jns,pt
adc
dec
loopne
dec
mov
pop
arpl
jecxz
pushf
test
push
dec
sarl
push
out
mov
mov
push
pmulhw
push
stos
xchg
xchg
out
dec
xor
pop
mov
les
icebp
das
call
fcoms
mov
shrl
push
fdivrp
es
addr16
imulb
fsubs
dec
add
jne
mov
movntq
out
clc
in
mov
imul
dec
mov
ljmp
lcall
cld
adc
test
mov
dec
lods
hlt
xchg
icebp
icebp
sbb
adc
inc
xor
push
call
jge
cwtl
ss
rorl
gs
icebp
mov
scas
sbb
or
dec
inc
ds
adc
add
dec
mov
frstor
je
inc
repz
lret
into
sbb
adc
ret
mov
xchg
or
std
cli
xor
push
mov
arpl
xchg
xor
jns
lcall
mov
adc
adc
std
xchg
aad
lods
ja
sub
aas
out
fisttpll
dec
sbb
loope
rclw
jbe
push
int
pop
push
lock
mov
add
add
dec
mov
xchg
push
jecxz
and
in
push
lcall
incb
inc
cmp
ret
fisubrl
xchg
xor
sarb
fpatan
push
sbb
jle
stc
aad
cmp
rcl
fildll
loop
inc
aas
loope
mov
push
clc
enter
inc
test
insb
jnp
nop
sarb
call
fisubs
into
add
stos
jnp
fstpt
mov
js
out
mov
lret
add
loopne
jns
shrl
sbb
es
daa
mov
outsb
mov
inc
daa
fstpl
lods
sbb
pop
stos
and
mov
retw
or
jae
fwait
nop
sti
or
lock
lods
loop
fbld
pop
rclb
mov
sbb
dec
mov
add
cwtl
popf
aaa
insl
arpl
or
sahf
mov
mov
jo
out
cmpsl
jl
or
xchg
lds
lods
cltd
mov
pop
aas
sete
xlat
and
fsub
inc
out
in
fcompl
popf
ret
sub
popf
mov
out
fisttps
jle
xor
mov
mov
out
lcall
mov
std
xchg
mov
mov
or
in
or
xchg
pop
mov
dec
out
daa
adc
or
mov
adc
fsubs
sub
jnp
mov
cmp
or
jmp
pushf
in
mov
lahf
push
push
mov
icebp
mov
and
lods
shll
and
dec
mov
imul
inc
cmpsl
imul
push
adc
xor
push
pop
pushl
push
fs
dec
ret
mov
sarb
cmp
inc
or
repz
or
out
into
test
cmpb
loopne
lahf
mov
and
xchg
sti
and
jns
cli
out
cmp
xchg
and
jl,pt
je
movsb
mov
sub
cmp
aad
push
jmp
mov
addl
ja
stos
push
adc
ret
xor
mov
sahf
or
push
test
xor
fwait
out
adc
andl
cltd
mov
pop
jge
pop
lret
pop
sub
cmp
xchg
jmp
cmpsl
pop
xchg
movsb
pop
shrl
fs
mov
mov
push
cmp
jo
xchg
inc
dec
lahf
imul
pop
sub
push
cmpsb
in
or
enter
xor
movsl
xchg
sub
jmp
addr16
loop
xchg
stos
in
and
sbb
sub
adc
cmp
adc
add
and
adc
add
out
stc
gs
lock
jl
xchg
dec
cmp
subl
test
mov
popa
data16
pop
fisubrs
jmp
jnp
in
mov
nop
cmp
aaa
xchg
es
leave
sub
call
decl
pop
mov
movsl
inc
sbb
mov
outsl
jle
sbb
pop
fisttpl
pop
cmp
xlat
jbe
cmpsb
filds
sbb
dec
out
sub
pop
sti
les
gs
inc
cltd
das
xor
cmpsb
cmovno
loop
mov
loopne
shll
mov
lea
movsl
pusha
aas
xchg
mov
lret
ja
int3
mov
cli
jmp
adc
loop
lret
insb
nop
xor
push
mov
stos
xchg
or
pop
adc
movsl
mov
inc
jae
jnp
iret
adc
pop
pop
outsb
mov
loopne
inc
leave
mov
call
sbb
ret
xchg
push
xchg
mov
jmp
out
mov
xor
sti
imul
dec
clc
lret
rcrl
scas
inc
jne
ret
push
push
ret
mov
fdivl
ljmp
out
loop
dec
mov
xor
mov
and
clc
int
dec
std
cmpl
mov
and
pop
or
cld
mov
pop
sarl
add
movsl
dec
dec
and
in
popa
mov
sbb
mov
fs
jge
jnp
adc
dec
xchg
pop
adc
jae
inc
lea
pop
gs
mov
pushf
and
or
jae
ffree
mov
aam
xlat
ljmp
sbb
xlat
in
adc
push
insl
pop
iret
jnp
cmp
mov
inc
aas
out
imul
mul
outsl
push
ret
xchg
cmp
test
popf
ds
mov
pop
imul
bound
hlt
adc
jae
sbb
cmpl
stc
mov
add
shl
sub
pop
scas
and
xchg
into
and
mov
mov
add
add
sbb
or
xor
inc
aad
mov
dec
jle
repnz
xchg
adc
pusha
dec
cld
test
ficoms
and
mov
pop
lods
aas
mov
fst
sahf
cmp
pop
out
xorb
addr16
cwtl
loopne
add
std
jne
mov
xor
inc
je
bound
mov
adc
cltd
mov
and
sbb
mov
push
add
outsb
and
xor
fs
gs
daa
mov
rcr
pop
sub
shlb
lock
negb
in
call
pop
xor
xchg
lret
call
and
add
test
in
push
xchg
jnp
push
inc
push
xchg
mov
repnz
adc
int
mov
and
dec
mov
std
fistl
out
pop
mov
mov
sub
xor
mov
outsw
decl
call
pop
sub
int
scas
push
inc
sub
inc
orb
jg
sbb
flds
cmpsb
sbbb
ljmp
movsl
divl
jae
loopne
push
imul
daa
or
dec
shl
push
dec
stos
dec
out
mulb
mov
xor
jb
dec
fld
lret
rolb
sahf
scas
cli
aaa
inc
cli
push
das
mov
adc
movsl
and
push
std
cltd
pop
sub
inc
stos
mov
jg
mov
aam
and
jge
fisubrs
in
push
jmp
cmp
stos
jnp
shlb
xchg
sarl
jge
sub
sahf
das
lret
add
clc
push
mov
add
aaa
test
and
les
sbb
cs
inc
or
xchg
push
cmp
aaa
subb
mov
gs
aas
orl
jne
cmp
cli
push
mov
or
lret
loope
mov
dec
inc
mov
ret
movsb
jmp
inc
xorb
or
cmp
test
stos
inc
pop
gs
scas
in
mov
sub
arpl
lods
cmp
xchg
mov
mov
je
js
adc
mov
out
shr
das
push
fidivl
insb
add
call
addb
movsb
stos
imul
or
or
dec
iret
xlat
mov
addr16
scas
cli
les
xchg
dec
adc
cmp
rcrb
imul
xor
cli
mov
mov
sbb
out
repz
pop
in
cmp
dec
push
test
inc
mov
xor
adc
cmc
in
fdivrs
jb
in
movsl
sbb
scas
and
outsl
lcall
negl
and
dec
ficompl
fadds
fldl
fbld
dec
push
cmpsl
jb
xchg
dec
ret
scas
call
mov
dec
rclb
bound
fdiv
mov
rcr
shr
jne
adc
mov
jg
idivb
mov
adc
adc
lcall
fists
inc
mov
fiadds
in
mull
loopne
xor
imul
out
push
cmp
arpl
jo
in
jo
jl
pop
mov
push
jae
rol
test
mov
xor
int3
pop
inc
sub
mov
fxch
or
in
insl
cmc
insl
repnz
and
pop
stos
pop
lcall
and
addr16
xchg
leave
data16
les
adc
hlt
nop
popa
push
jmp
add
pop
dec
jns
int3
mov
sbb
addr16
insb
jl
pop
mov
call
jge
fcmovnb
stos
mov
repz
push
sub
clts
sbbl
mov
es
cmpsl
pop
adc
sub
sbb
adc
insb
lret
add
test
add
pop
mov
xor
push
mov
dec
adc
mov
adc
cmp
test
mov
pop
ja
add
ja
js
or
push
push
gs
and
out
or
jbe
or
xor
cmp
xchg
jnp
add
in
je
jmp
les
sub
sbb
xor
mov
pop
test
icebp
bound
loop
dec
or
cmp
ljmp
gs
inc
lock
cwtl
jnp
push
sub
jno
push
sbbb
ja
scas
mov
aam
mov
lret
bound
inc
mov
negl
in
je
paddsw
xchg
fs
adc
and
and
xchg
rcr
push
movsb
and
mov
nop
push
xchg
loopne
sub
dec
add
cmpb
cmp
mov
sub
repnz
sub
gs
add
add
ljmp
ret
xchg
cltd
push
pop
xchg
jo
shll
sbb
rcrb
in
mov
enter
sub
loope
stc
test
pop
jb
lods
push
pop
leave
jecxz
das
inc
jmp
decb
mov
xor
sbb
push
jmp
ja
pop
xchg
out
xchg
mov
in
push
cmp
mov
and
test
and
pushf
mov
test
flds
jge
popf
shl
bound
loop
repnz
cmp
mov
es
dec
rol
andl
pop
add
xchg
test
sub
test
enter
jae
inc
int3
push
dec
dec
sar
adc
hlt
sti
push
fcmovnu
push
mov
repnz
jno
jmp
mov
jns
push
aad
sahf
sbb
jp
push
mov
and
popf
push
fcmovb
xor
cmc
lret
js
insl
pushf
and
sub
cmpb
loopne
mov
pop
push
pop
aad
jecxz
inc
repz
mov
xor
stos
leave
mull
mov
and
dec
push
aam
add
pop
cmp
test
test
cs
pop
fs
cmp
mov
lods
lret
inc
dec
rorl
icebp
leave
je
or
and
and
adc
sub
imul
dec
inc
jb
sbb
in
sbb
sbb
aam
or
ret
ret
cmpb
test
add
data16
mov
mov
movsb
mov
push
cmp
fwait
sub
pop
movsl
mov
cmovno
fs
xchg
mov
or
mov
sub
insb
imul
cli
enter
outsb
das
adc
xor
jae
mov
xor
pop
pop
push
imul
imul
push
xchg
adc
loop
xor
sbb
add
rcrb
jae
mov
lret
push
or
jl
xor
jno
mov
and
push
mov
dec
cmp
sahf
or
or
lret
mov
cmp
fcmovnb
xchg
adc
or
in
idivl
popf
lahf
cmpb
push
inc
daa
xlat
mov
dec
pop
mov
aas
scas
mov
int
adc
jmp
scas
into
pop
jns
sbb
das
hlt
fcmovbe
dec
faddl
je
es
loope
mov
aas
sbbb
dec
pop
int
sub
int3
adc
add
and
sti
xor
mov
sub
jl
or
movsb
cmp
pop
je
nop
fyl2xp1
out
jns
xchg
out
mov
xchg
rcrl
sahf
mov
pop
xor
jb
imul
test
cld
lcall
fimuls
mov
int
push
jmp
lret
out
or
fadds
mov
stos
pop
iret
and
jbe
adc
test
sub
imul
mov
and
adc
scas
mov
pop
pop
std
shl
inc
sbb
mov
test
repnz
in
sbb
or
and
sub
mov
or
lahf
mov
js
mov
std
std
mov
sbb
popa
lods
push
repz
mov
pop
or
aaa
jecxz
pushf
jb
test
add
mov
adc
pusha
pop
jmp
jge
cld
pusha
aaa
cmp
mov
mov
xor
pop
xor
iret
jmp
sahf
iret
testb
inc
add
and
adc
enter
mov
inc
pop
scas
pop
push
outsl
sub
inc
clc
pop
push
cmp
rclb
mov
std
jg
test
popa
mov
repz
adc
pop
lock
adc
sahf
mov
dec
cld
dec
sub
mov
add
sbb
mov
mov
dec
cld
hlt
pop
loope
push
shl
mov
iret
and
out
jp
inc
out
out
addr16
push
scas
int3
ret
push
cmp
sub
mov
and
xchg
mov
jmp
mov
aam
jp
mov
inc
push
add
dec
sub
int
pushf
sahf
jo
xor
cmp
jne
pop
jnp
leave
or
cmc
sbb
outsb
and
xchg
push
cmp
in
cmp
iret
adc
sarb
fldenv
sahf
js
dec
cmp
cmpl
test
fwait
push
push
rep
push
cltd
call
add
dec
push
aam
mov
mov
dec
je
dec
sbb
lods
popf
jg
sbb
sub
jle
call
cmpb
xlat
pop
mov
xor
aad
lret
xchg
movzbl
loope
ljmp
jg
push
jecxz
clc
add
add
mov
push
push
push
aad
sbb
jns
jge
mull
mov
outsl
push
xchg
push
andl
fwait
cld
and
mov
jp
push
adc
stos
cld
sbbb
in
sbb
cmp
mov
xchg
lea
scas
and
push
xlat
sbb
add
sbbb
fadds
add
ret
pop
jbe
xchg
int
js
jge
int
aaa
aam
fcmovnu
jp
int3
mov
lret
addb
mov
aaa
leave
mov
add
fwait
rol
lcall
fwait
adc
inc
jno
pop
je
push
cs
jne
mov
jmp
jmp
dec
popf
and
into
nop
cmp
add
pop
rol
outsb
inc
sub
or
sti
or
gs
jmp
hlt
addr16
cmp
repz
add
xor
addr16
lcall
sti
push
adc
mov
adc
xchg
sbb
icebp
arpl
imul
or
mov
sbb
in
cmp
xor
mov
mov
and
dec
pop
or
mov
pop
andb
and
add
std
ss
outsl
stos
icebp
mov
xor
les
scas
fnstsw
sub
leave
icebp
insl
or
mov
fsub
cmpsl
push
lods
fiaddl
sbb
bound
xchg
pusha
lods
and
rep
movsb
mov
add
push
push
jae
fstl
pop
rep
inc
test
mov
repz
jne
inc
lret
pop
icebp
adc
xor
jbe
jno
dec
in
pop
imul
xchg
pop
movsb
enter
ret
pusha
mov
fnsave
imul
pop
dec
push
enter
loopne
fisubs
mov
inc
cmpsl
test
lock
fmuls
loopne
movsb
fidivl
in
pushf
lods
adc
xchg
cltd
addr16
sbb
inc
cmpsl
gs
jno
pusha
hlt
aaa
out
push
and
and
mov
cmc
xor
jge
or
push
xchg
or
imul
idivl
pop
ret
stos
or
sbb
add
lock
js
test
xchg
sarl
outsb
pop
and
repz
inc
in
out
lret
lcall
insl
in
aam
dec
mov
inc
js
jnp
mov
jle
lock
jo
pop
fidivl
aam
mov
shlb
cld
push
sub
sub
cmc
fdivs
leave
cwtl
int
je
xor
mov
push
ss
xchg
testl
add
push
inc
push
out
lcall
mov
shlb
adc
outsl
sbb
daa
sbb
mov
nop
pop
outsl
jg
into
fsubl
and
pop
in
mov
pop
sbb
xlat
iret
inc
fbld
rorl
sub
sbb
out
int
sub
xor
push
test
dec
inc
cltd
push
pop
aam
xchg
gs
and
je
push
inc
call
pop
pop
xchg
addb
push
dec
rorb
lds
mov
rcrb
pop
cmc
jne
ret
mov
imul
movsb
addr16
movsl
xchg
push
lea
ljmp
lods
ret
insl
dec
jg
scas
rcl
mov
int3
sbb
mov
lds
nop
jg
add
test
inc
sbb
popf
inc
xchg
add
mov
or
cmpsl
sbb
adc
in
xchg
scas
dec
int3
push
push
pop
dec
mov
rcr
out
pusha
loope
mov
push
add
insl
lret
scas
sbb
sbb
scas
ss
jo
outsl
and
rorl
mov
negb
cld
jo
cltd
clc
insb
xchg
imul
sbb
rcl
stos
cli
push
add
inc
stos
loop
sub
add
mov
cwtl
sbb
cmp
loopne
jge
mov
mov
xlat
and
push
dec
cmpsb
movsl
fs
jle
adc
sub
push
in
pop
pusha
add
subl
and
mov
adc
or
inc
outsl
out
mov
outsb
lret
mov
gs
sar
inc
cmp
stos
or
adcb
pop
cmp
imul
pop
push
es
sub
repz
addl
out
fs
push
jbe
nop
shrl
xlat
xchg
jp
jecxz
push
ds
adc
addr16
shl
jmp
adc
adc
dec
out
pop
cmp
add
or
testb
out
push
imul
xchg
loopne
fistl
rol
clc
sub
xchg
lcall
push
fst
or
pushf
adc
adc
shll
mov
xchg
imul
leave
or
xor
imull
subl
mov
ftst
outsl
mov
insl
inc
adc
lea
jae
inc
jecxz
ljmp
inc
mov
out
lret
add
and
lods
mov
inc
call
pop
sub
gs
sub
lods
cmpsb
or
hlt
scas
loope
pop
jmp
iret
in
push
imull
pop
imul
mov
dec
in
fcoml
or
in
push
sub
outsl
pop
jo
jp
js
sub
sub
mov
ret
push
outsl
scas
pop
out
mov
jo
lret
or
sub
push
push
in
js
iret
cmp
das
in
setp
jge
notb
test
or
les
ljmp
out
and
xor
pop
and
mov
sub
shlb
or
push
imul
scas
mov
lcall
mov
push
mov
xchg
mov
jbe
inc
pop
fstpl
xor
add
bound
mov
xchg
imul
jns
cmp
flds
clc
lahf
rcrb
test
push
stc
int
sti
xchg
stc
addr16
and
movzbl
pop
inc
movsb
outsb
push
pop
dec
mov
daa
cs
adc
mov
aaa
jmp
pop
mov
add
dec
xor
mov
cld
aas
or
adcl
das
lds
mov
add
std
js
push
add
sub
jmp
adc
ret
mov
cltd
xor
ja
psllq
jbe
mov
test
sub
xchg
mov
in
jecxz
sub
mov
dec
mov
push
lcall
inc
sbb
rdpmc
bound
mov
adc
jbe
mov
cmc
and
sub
repnz
xchg
cmpsb
lds
mov
jnp
int3
repnz
xor
sub
dec
imul
lock
mov
mov
mov
push
cmc
jp
outsl
and
fisubrs
gs
js
jns
dec
hlt
scas
add
adc
dec
mov
mov
or
cmp
sbb
test
mov
je
lea
sahf
out
fidivs
out
movsl
mov
mov
adc
add
repnz
sbb
js
mov
jge
test
into
jg
inc
jmp
call
jp
pop
aad
outsl
inc
in
dec
outsb
rcrl
dec
add
ret
lcall
dec
in
add
push
movaps
icebp
add
cwtl
imul
sub
outsl
ljmp
and
and
pop
out
roll
push
and
sbb
mov
rcrl
popa
add
jle
push
mov
xorb
and
dec
mov
push
pusha
adc
mov
jecxz
or
xchg
fisubs
repnz
daa
stos
es
int
outsb
call
fcomps
add
repnz
adc
ss
mov
imul
test
lds
aas
inc
mov
xor
xor
push
add
cmpsb
inc
lcall
dec
mov
stc
mov
inc
or
mov
mov
scas
sbb
adc
daa
ds
pop
das
mov
push
mov
lock
mov
sbb
out
mov
stos
xchg
call
xchg
aam
adc
ljmp
push
je
lahf
xchg
sbb
cmc
insl
sbb
lahf
add
cltd
inc
insb
scas
push
pop
xchg
testb
popf
in
pop
sti
fdivrs
in
mov
aas
mov
and
and
je
out
jno
into
fnstcw
arpl
mov
loope
fucomip
insl
loop
imulb
loopne
xchg
test
mov
cmp
jb
adc
sub
outsb
sub
and
mov
add
sub
mov
lahf
xor
inc
testb
jo
bound
arpl
jge
or
pop
out
or
jle
ret
icebp
xor
test
cwtl
push
jp
mov
lods
or
or
cmp
mov
in
mov
push
popf
mov
mov
add
pop
jge
pop
mov
aaa
cmp
mulb
scas
mov
mov
xor
sub
xchg
ljmp
sub
cltd
mov
inc
and
cli
jl
aas
jecxz
test
sbb
sbb
leave
fidivrl
lahf
jle
or
inc
and
rcl
xchg
mov
addl
jbe
inc
repz
lods
push
es
push
flds
add
pop
imul
xchg
sbb
dec
stc
in
iret
out
rorb
in
pop
adc
fisttpl
xor
cmpb
in
push
loopne
call
xor
sbb
inc
lods
pop
jle
cmp
outsb
xchg
push
add
jnp
popl
push
int
xchg
push
mov
fdivp
incl
mov
mov
or
je
sub
fst
push
pop
cwtl
pop
rol
clc
rolb
inc
add
jns
cmpsl
mov
and
jl
adc
inc
enter
jb
or
and
push
inc
mov
mov
sbb
mov
scas
mov
mov
inc
mov
and
jl
imul
cmp
push
call
and
cmc
daa
ja
xchg
or
insb
push
push
push
and
and
jo
lret
sahf
xor
mov
lods
js
and
push
sbbl
movsb
sbb
mov
push
out
int
or
cmp
test
call
inc
inc
dec
push
jge
push
pop
mov
lcall
pop
leave
pop
and
push
jmp
cli
bound
sbb
mov
jno
jl
cmp
imul
inc
push
fimuls
ficompl
add
ret
push
int
cmpsl
out
and
mov
and
test
push
adc
mov
inc
mov
int3
int
leave
shr
jg
sbb
mov
scas
call
jo
adc
xchg
jl
or
loop
sarb
test
arpl
pop
idivl
out
lret
or
xchg
clc
fs
ja
pop
sbb
push
les
sar
cmp
call
test
pop
out
mov
push
pop
jo
ret
mov
or
mov
add
insl
cld
jge
push
mov
pop
cli
mov
dec
fiadds
xchg
clc
add
in
leave
ljmp
imul
loopne
roll
loope,pn
push
shll
or
lcall
pop
rorl
push
sub
mov
fmull
pop
sub
enter
rorl
mov
adc
dec
xor
sbb
add
cmp
inc
in
jle
test
popf
lcall
push
mov
xchg
ret
loopne
dec
sub
fidivrs
inc
jbe
sarb
fdivrs
mov
jb
and
sub
push
movsl
pop
cmpsb
mov
push
jge
insl
inc
push
mull
jecxz
mov
xchg
lret
cltd
mov
or
fsubl
mov
mov
xor
dec
shll
jne
xchg
cmp
hlt
test
lcall
orl
lahf
stos
popa
pop
inc
sbb
fistps
mov
mov
push
imul
and
aam
dec
xchg
ret
push
mov
sbb
push
xlat
adc
xchg
loop
jne
int3
mov
movsl
push
inc
pop
jno
pop
loopne
push
hlt
imul
movsl
out
sbb
aaa
mov
sbb
movsb
xchg
inc
icebp
stos
incl
jp
and
xchg
mov
imull
popa
sub
mov
js
jno
test
pop
dec
cs
repnz
pop
cmc
xor
out
pop
jmp
sbb
shll
jmp
adc
lret
iret
dec
inc
es
inc
repnz
test
movsb
jp
or
mov
mov
or
addr16
movsb
neg
mov
and
aam
push
inc
add
mov
dec
aas
ficomps
sti
push
sbb
xlat
xchg
mov
sar
and
cld
or
lret
push
imul
cmp
inc
push
adc
cli
icebp
cmp
mov
xor
dec
add
mov
insb
shl
inc
icebp
in
in
inc
mov
xor
jge
aam
stos
filds
enter
push
mov
lods
push
jp
pop
mov
fs
mov
xor
jae
addr16
and
test
mov
adc
test
mov
xchg
lahf
pop
inc
cmp
shlw
cmp
and
cmp
dec
mov
hlt
cmpsb
mov
jb
lods
sub
scas
outsl
xor
test
mov
jb
cmp
mov
rcr
loop
fidivs
mov
mov
in
das
mov
inc
int3
mov
add
or
sbb
mov
cmpsb
daa
dec
inc
adc
icebp
pop
mov
popf
push
sbbl
js
lahf
lret
xlat
and
into
jg
cmpsb
fsqrt
insl
icebp
icebp
subl
adc
stc
fs
iret
stos
push
sbb
pop
jo
ds
cmp
jne
mov
push
shl
sti
repz
or
pop
fisubrs
pushf
fldenv
sbb
imul
jb
pop
gs
loopne
sahf
adc
mov
outsb
mov
stos
int3
lcall
push
fstpl
xor
add
inc
jp
adc
int
mov
mov
xchg
jb
cltd
notl
std
aad
cld
or
imul
xchg
sahf
scas
jns
push
aad
test
inc
pop
hlt
lahf
leave
xor
outsb
and
pop
jbe
mov
adc
mov
xchg
mov
dec
jae
lds
cmp
out
pop
sbb
ficoml
cld
movnti
jne
decb
ss
fs
cmpsl
cmpb
pushf
mov
bound
mov
jbe
mov
addl
in
inc
inc
or
push
arpl
cltd
outsl
int3
and
mov
call
ficoms
xchg
push
pop
mov
xchg
les
push
scas
lods
in
pop
insl
mov
jne
adcl
xor
push
dec
adc
jno
hlt
jl
shlb
mov
xor
mov
std
mov
test
shlb
ja
jno
in
push
ficoms
mov
outsl
mov
sti
lods
or
daa
in
pop
stc
imul
inc
mov
mov
jae
fidivs
xchg
mov
xchg
mov
and
sbb
adc
xor
jnp
cmp
ficoml
lods
loopne
insl
dec
mov
fcoms
mov
cli
jo
dec
cmp
jmp
test
push
data16
cmc
sbb
mov
lods
in
jnp
jbe
rcrl
dec
inc
dec
jb
push
jo
pop
xchg
jno
xchg
lea
pop
jl
pop
adc
hlt
or
fs
outsl
sub
sti
and
xorb
sub
push
mov
mov
inc
xchg
mov
xor
test
shrb
jno
mov
adc
lock
xchg
in
fstps
loopne
mov
xor
iret
cltd
mov
in
hlt
or
cmpl
std
dec
sti
jl
imul
into
gs
sub
adc
int
scas
lods
pop
jae
cwtl
jge
push
or
test
ljmp
dec
adc
cmp
pop
pushf
shl
aam
dec
js
stc
lea
shlb
popf
test
enter
fisttps
cmpl
xchg
test
shll
out
test
out
jl
push
push
bound
sbb
and
mov
enter
xchg
pop
gs
add
and
int
imul
clc
pop
ljmp
cli
or
jg
fwait
inc
jmp
or
dec
fsubrs
stos
stos
lahf
out
loope
mov
add
test
mov
inc
loope
inc
sub
and
add
jge
call
jbe
icebp
sub
ljmp
into
movsl
fiadds
lods
test
shlb
jl
dec
mov
inc
lahf
dec
int
adc
ja
pop
sub
test
jle
adc
pop
scas
sub
mov
cmp
in
bswap
negb
or
js
mov
adc
cltd
les
add
cmp
adc
inc
push
mov
lret
pop
insl
les
jle
data16
sbb
jae
jp
push
adc
ss
repz
orb
push
mov
fmulp
push
scas
call
mov
push
inc
mov
and
scas
sbb
cmp
shrl
roll
or
dec
jns
jle
dec
cmp
mov
lds
xlat
cli
or
xor
test
xchg
adc
sbb
mov
adc
test
mov
mov
out
rclb
out
jne
jo
paddsw
stc
xchg
sahf
mov
or
adc
lods
mov
loopne
insb
out
mov
push
cmp
mov
lret
xor
pop
xchg
gs
ret
aam
xchg
mov
push
out
imul
mov
mov
jecxz
mov
int
fwait
cmovge
lret
out
jno
inc
js
ja
add
fucomp
imul
imul
out
loopne
aas
incb
mov
adcb
push
out
mov
ds
shlb
xchg
or
cmp
aaa
aad
add
lret
inc
data16
iret
push
scas
cld
dec
leave
jl
jle
sti
xchg
or
pushf
inc
mov
xchg
jo
mov
cmp
scas
sub
or
jns
ja
or
movsl
pop
orl
or
test
sub
push
scas
lret
pop
mov
sahf
outsb
inc
out
pop
popf
fdivr
shlb
iret
into
enter
mul
dec
xor
rcll
loope
mov
jbe
fyl2x
out
roll
xor
push
and
mov
cmp
adc
mov
ljmp
mov
sub
sub
arpl
lahf
ds
mov
pusha
test
inc
or
lods
or
hlt
fidivrs
lahf
mov
push
movsb
sub
popf
sub
mov
jmp
ss
out
and
pop
adc
xor
pop
popa
mov
test
pushf
pushf
pop
inc
js
insl
mov
popf
dec
imul
jb
or
mov
and
and
pushf
mov
shlb
dec
pop
pop
out
sub
dec
popa
out
xorl
push
push
pushaw
loope
add
clc
mov
lcall
leave
js
cld
loop
mov
testl
push
hlt
je
jo
or
lret
xchg
xor
jg
ja
les
in
pop
test
mov
test
jnp
mov
fidivl
subl
cltd
dec
mov
and
xor
mov
das
mov
addr16
addr16
and
pop
mov
and
push
pop
cmp
sbb
mov
int3
cmp
xchg
adc
jns
add
ja
mov
gs
test
or
data16
mov
sub
hlt
imull
xor
dec
and
add
out
lea
data16
subl
xor
ret
mov
xor
unpcklps
mov
enter
push
adc
add
inc
dec
imul
jb
js
fistpl
sub
add
vmovlps
pop
in
pushf
rcrb
add
dec
mov
sbb
rclb
les
aam
or
add
or
mov
fists
add
ja
hlt
aad
stc
dec
xlat
pop
dec
add
mov
adc
xrelease
dec
sub
mov
adc
jno
inc
or
jne
inc
gs
mov
mov
setno
pop
and
test
sti
sbb
mov
orb
repz
xlat
shl
jge
xor
xchg
sbb
lcall
cltd
pop
leave
pop
aad
cld
incl
sub
andl
int3
ficomps
popf
mov
gs
push
mov
xchg
pop
pop
mov
xor
xor
adc
cmp
aam
push
call
pop
sahf
test
arpl
dec
lahf
xchg
cmc
movsb
jg
add
inc
mov
push
inc
popf
inc
push
andnps
stos
stos
mov
popf
in
inc
arpl
xchg
mov
sub
jg
mov
inc
jne
add
adc
cmc
test
xchg
mov
scas
rclb
mov
ds
and
push
out
add
repz
pop
mov
xchg
push
lods
jno
lret
xchg
sbb
repz
cltd
ficomps
scas
lahf
pop
ret
mov
mov
and
push
xchg
xchg
sub
mov
loopne
cmpsl
jbe
mov
xchg
mov
pop
dec
lret
sub
in
jp
das
test
add
and
cmp
je
mov
or
into
in
mov
pop
cmp
jge
dec
stos
mov
movsl
xor
jae
iret
mov
insl
jae
mov
mov
jbe
enter
scas
mov
ffree
stos
cmp
addr16
dec
rcl
out
mov
pusha
mov
or
mov
enter
inc
das
adc
dec
inc
add
mov
and
lcall
sbb
xor
push
pop
daa
and
push
int3
adc
int3
pop
xchg
neg
imul
lret
or
push
scas
cmp
out
hlt
test
daa
mov
ss
lock
rclb
test
in
dec
popf
fs
lahf
stos
jbe
push
gs
insb
insb
mov
push
shrl
fwait
dec
or
repz
clc
and
or
nop
pop
sub
xor
clc
pop
cmpb
pop
stos
bound
js
leave
scas
hlt
cld
lret
mov
cmc
shrl
push
mov
mov
and
mov
test
dec
loop
add
call
cmc
shl
push
add
ljmp
add
xchg
sbb
push
jle
leave
stos
call
in
mov
mov
sbb
mov
jp
and
pop
aaa
aam
movsl
cli
test
xchg
stc
or
stc
sbb
ja
pop
int
and
dec
test
clc
stos
in
sarl
xor
sbb
mov
imul
cwtd
mov
xchg
jmp
cwtl
push
pop
insl
inc
and
cmc
or
scas
nop
rcll
inc
inc
shll
xchg
jns
xor
mov
xchg
and
and
jbe
xchg
mov
movsb
jl
pop
flds
xlat
mov
sbb
das
aam
scas
sbb
or
dec
push
stos
pusha
cmp
jb
jmp
or
pop
movsl
xor
and
add
and
jb
pushf
loope
rcrb
push
push
mov
aas
aam
sbb
xor
jno
add
enter
out
jbe
sbb
xlat
xchg
xchg
out
pop
icebp
adc
imull
add
pop
xchg
pop
lock
dec
mov
das
sbb
or
dec
mov
adc
in
outsl
xchg
shl
addr16
jecxz
sub
adc
xor
mov
shll
fsubrl
nop
test
aas
jns
or
and
push
push
mov
add
hlt
push
fwait
xlat
adc
imul
bound
mov
sub
push
xor
mov
fwait
mov
and
aam
push
scas
insb
cwtl
in
int
sarl
pushf
lods
aaa
insb
push
test
adc
cmp
into
int
jl
sbb
call
icebp
mov
ja
mov
mov
xor
jp
std
xlat
mov
test
int
jmp
call
push
inc
mov
xchg
sarl
sahf
into
jl
outsl
daa
lret
adc
mov
mov
pop
jnp
mov
mov
outsb
cmp
scas
or
xor
loop
add
sub
pushf
xchg
sub
mov
adc
fsts
outsl
outsb
xchg
inc
mov
icebp
cmc
popf
mov
aad
fsubrl
stos
push
into
aam
lea
pushf
call
aas
pop
adc
mov
rcrb
lret
and
fs
cmp
push
push
dec
test
inc
mov
fs
ja
lret
gs
leave
rcl
sub
sub
sub
incl
in
adc
xchg
aam
xor
mov
mov
loope
push
dec
aad
aas
sti
mov
mov
sbb
xchg
in
push
pop
loopne
cmp
inc
mov
mov
and
mov
aaa
or
add
std
inc
xor
lods
push
and
mov
mov
enter
std
mov
pop
out
inc
dec
and
sub
jmp
jecxz
cmp
pop
jno
jmp
inc
mov
addr16
pop
movb
in
mov
fcmovb
jge
jmp
lret
test
addb
pop
cltd
fisttpl
jl
fists
pusha
out
dec
inc
lds
push
imul
inc
dec
test
std
dec
pop
xor
sti
rolb
sub
add
lret
mov
iret
sub
inc
sub
fcompl
jge
ficoml
push
icebp
cmp
cld
inc
mov
jge
fisttpll
xchg
inc
pop
mov
rorb
sarb
sub
push
push
movb
addr16
dec
adc
std
inc
pop
sub
lock
sbb
jb
movsl
int3
lods
lret
and
push
icebp
cmp
fcmovne
mov
jl
mov
jns
or
fmull
ret
icebp
es
jge
mov
mov
inc
insb
add
xchg
pop
pop
repnz
adc
dec
mov
rolb
sbb
cmp
test
hlt
sti
inc
cmp
sub
cwtl
ss
xor
fcompl
lahf
cs
iret
out
mov
inc
andl
xchg
pop
mov
clc
push
loope
fnsave
lea
push
aad
cmpb
cmpsl
xor
mov
cwtl
sub
jb
jg
adcb
roll
movsb
xchg
mov
fidivrs
jo
sub
pop
test
lods
std
jno
notl
sub
xor
xlat
scas
adc
sti
repnz
sub
cmp
sub
xchg
sti
cmp
pop
call
insl
fmuls
inc
imul
add
and
mov
iret
cwtl
imul
xor
adc
mov
adc
jge
test
shlb
sbb
cmp
cmc
fwait
xor
arpl
lret
test
pop
subb
pop
xchg
pop
and
pop
psubq
ss
sub
dec
adc
lcall
sbb
dec
or
dec
test
mov
pop
or
test
fisubrl
pop
imulb
test
or
mov
test
dec
dec
pop
mov
jg
or
push
jno
adc
loop
imul
insl
mov
xchg
cs
cmp
or
adc
fnstcw
xchg
pop
pushf
inc
push
fsub
insb
insb
ljmp
fmulp
lret
test
sub
adc
lret
cmp
ds
pop
popa
mov
les
mov
push
adc
push
jbe
roll
mov
dec
fidivs
mov
hlt
pop
adc
jge
loope
in
enter
jae
adc
inc
cmpsl
sub
pop
cmp
mov
xor
push
push
mov
dec
xchg
sub
addl
push
mov
xchg
ja,pt
cwtl
and
or
mov
mov
loope
sub
in
xchg
sub
mov
cmp
xchg
pop
repz
jle
imul
movswl
into
cltd
cltd
fidivl
lea
aas
sbb
clc
push
xchg
xlat
dec
jge
daa
adc
call
aas
sbb
out
lret
mov
pop
push
inc
dec
mov
mov
push
dec
stos
jnp
xor
mov
out
enter
pop
dec
or
orl
sbb
aad
mov
mov
dec
sbb
pop
insl
dec
std
ljmp
or
dec
mov
daa
xchg
mov
ss
sub
inc
nop
xchg
push
pop
cs
mov
mov
cmpsb
or
subb
jecxz
mov
xchg
cmc
sbb
data16
rcll
fsubl
bnd
mov
iret
lret
xchg
ds
xor
and
adc
inc
orb
outsl
sub
mov
add
out
stos
mull
test
xchg
gs
adc
xor
mov
inc
mov
dec
push
sub
inc
pushf
hlt
scas
pop
aaa
xlat
mov
add
cmp
cld
mov
nop
jns
xchg
aam
outsl
test
out
ret
add
nop
dec
push
lcall
bound
mov
movsl
lock
gs
adc
sbb
mov
pop
push
push
mov
dec
or
sti
mov
mov
dec
jmp
sub
and
jl
pop
xchg
or
inc
aad
push
loopne
mov
add
cli
xlat
out
push
repz
and
add
pop
dec
fdivrl
xchg
into
int3
cmc
in
arpl
das
or
pop
fmull
ds
movsl
scas
sar
xchg
enter
xchg
push
push
fistps
xchg
aam
and
lock
or
mov
imul
mov
dec
sahf
iret
adc
push
popa
dec
outsb
and
sti
aaa
jae
je
push
inc
jb
sahf
negl
xchg
loope
lahf
stos
cmpsb
lock
frstor
and
push
jecxz
sub
jge
mov
mov
pop
movsb
mov
jbe
and
pop
dec
dec
pop
ret
fcmovb
mov
loop
in
cwtl
mov
cwtl
or
inc
mov
fldcw
and
lahf
repz
or
push
mov
sub
std
add
cmp
daa
mov
sub
addr16
xor
jb
push
loope
nop
decb
lcall
cld
bound
mov
adc
cmp
jg
sarl
test
cmp
jge
push
fistps
fldl
mov
mov
fcompl
sbb
arpl
push
cmp
repnz
fsub
insl
lods
inc
ret
repz
pop
arpl
fildl
or
loopne
es
jns
ret
ljmp
xchg
and
lahf
push
jmp
mov
xor
ret
leave
inc
pop
dec
mov
mov
int
mov
orl
movsb
inc
jge
out
adc
cmp
cmp
ffreep
sbb
jp
jge
sbb
shr
sbb
or
pop
and
and
stc
xchg
outsl
sbb
mov
mov
lea
inc
and
stc
test
sbb
clc
jns
mov
sub
mov
repnz
int
pop
pop
addr16
cld
jns
jbe
adc
pop
inc
xor
dec
mov
cmp
shlb
iret
jae
add
ss
and
xchg
mov
or
mov
pop
leave
mov
push
les
sbbb
pop
repnz
addr16
clc
mov
pop
ja
aam
pop
sbb
lock
fimuls
lret
jmp
in
add
sub
outsl
insl
xor
cmc
add
pop
inc
inc
clc
xlat
cmc
inc
mov
mov
sbb
jne
ljmp
imul
dec
add
push
cmovl
lret
das
inc
cmp
stc
in
sbb
cmp
sub
insl
add
aas
xchg
mov
test
xchg
and
pushf
mov
sbb
imull
inc
add
je
mov
lods
inc
and
fsubs
mov
mov
fsubs
or
ds
fdivrl
mov
test
xlat
inc
push
test
adc
hlt
imul
jnp
mov
test
std
nop
and
push
int3
push
lret
sbb
aaa
jno
dec
pop
test
jne
jb
loop
xchg
push
push
orb
dec
lcall
xchg
xchg
aam
adc
in
dec
sbb
movsb
jae
jecxz
mov
mov
filds
call
and
cmp
pop
loopne
ret
cld
mov
push
std
pop
sub
call
popa
dec
push
insl
std
sarl
cmp
sahf
cmpsl
das
lcall
adc
mov
mov
pop
or
jmp
jle
outsl
std
jmp
mov
outsl
aaa
pop
pop
or
bound
dec
test
jmp
jmp
fs
dec
dec
sub
push
mov
xor
jo
xor
and
push
push
or
sbb
js
jbe
mov
test
dec
add
je
insl
fisubrl
push
lea
mov
scas
jmp
outsb
inc
push
xchg
test
insl
jmp
inc
jno
dec
sbb
xlat
popf
aam
jmp
xorl
xchg
sub
mov
ljmp
ficoml
cmpsl
das
mov
outsb
mov
andl
inc
jmp
fistl
mov
sbb
xchg
lea
cltd
sub
cld
xchg
sub
mov
jae
in
xlat
mov
stc
clc
adc
mov
sbb
nop
pop
mov
lods
add
enter
mov
hlt
inc
adc
jno
ja
sbb
aam
mov
sti
hlt
push
in
cwtl
test
out
xchg
call
pushl
inc
aas
pushf
dec
sbb
and
icebp
sbb
inc
pop
mov
mov
xlat
stos
js
push
lods
scas
mov
pop
lods
xor
jno
shlb
lods
mov
and
sbb
inc
push
dec
icebp
xchg
sbb
mov
bnd
xor
loopne
mov
xchg
fcoms
or
dec
pop
xlat
out
add
and
or
data16
loop
test
pop
in
int
push
out
mov
cmp
mov
pop
aaa
add
icebp
cmc
pushf
leave
dec
rcl
mov
in
add
xchg
adc
sub
xchg
shlb
xor
sub
mov
ss
data16
jge
sbb
stos
cmpsl
repnz
sub
cmp
clc
jge
mov
sbb
jns
push
int
pop
sub
fs
insl
sbb
dec
jge
pop
dec
inc
aas
mov
cmpsb
sub
fimuls
ficoml
enter
insb
lock
ljmp
cmc
stos
icebp
data16
fwait
jnp
outsl
jmp
outsb
adc
jge
in
iret
idivl
mov
bound
mov
pop
xchg
xor
adc
jmp
cli
addr16
mov
shl
xchg
xorl
pop
vmovhpd
mov
test
mov
inc
mov
xchg
or
xchg
xor
test
fistl
leave
push
xchg
pop
es
pop
aaa
dec
sbb
push
pop
adc
push
aad
mov
xchg
das
add
inc
xor
inc
lods
push
push
pop
sbbb
call
out
fisubl
jge
cmc
or
jmp
aad
sbbb
lds
in
sahf
outsl
clc
sbb
jl
jp
cmpsb
sti
jbe
in
jb
mov
movsl
cmp
mov
xchg
outsb
mov
sub
inc
inc
or
mov
test
pop
add
lods
push
mov
mov
add
mov
loope
sbb
inc
mov
aad
adcb
inc
jne
in
jecxz
or
jle
pushf
cmp
int3
pop
jo
cltd
repz
ljmp
fabs
xchg
cmpsb
movsl
mov
orl
je
add
out
sahf
lock
addr16
jb
loope
sbb
mov
lock
jbe
cld
pop
ret
out
push
adc
push
or
xor
mov
aas
dec
adc
lahf
imul
mov
stos
sbb
es
xchg
inc
sarl
push
test
jmp
or
icebp
pop
adc
in
mov
fwait
ds
lahf
stos
pop
rcl
or
ja
pop
js
add
hlt
mov
adc
xchg
mov
es
adc
add
inc
xchg
push
out
in
movsl
repz
mov
dec
inc
shll
push
std
stos
iret
leave
enter
frstor
mov
add
add
mov
push
sub
jp
repz
add
iret
imul
out
and
xchg
mov
outsb
cld
sbbb
rol
and
cwtl
push
pop
imul
push
sub
test
push
test
adc
clc
push
jnp
dec
adc
xchg
sub
addr16
mov
dec
clc
stc
xor
std
frstor
mov
loop
cmpsl
pushf
ret
or
inc
mov
cs
shr
cmp
in
loop
mov
dec
out
sbb
jne
xor
cmc
aam
je
ret
push
sub
dec
sbb
pushf
cld
mov
jb
xlat
xchg
dec
xchg
ja
insl
test
inc
mov
test
mov
inc
inc
push
push
out
fsts
fcoms
pop
push
inc
lcall
lds
into
jnp
dec
jno
mov
adc
in
mov
test
pusha
aam
mov
xchg
adc
ljmp
and
ss
xor
cmp
sub
test
mov
lea
out
subb
mov
ret
dec
ss
sbb
mov
aam
out
stos
sub
jle
or
sarb
add
ffree
and
cltd
inc
xchg
cwtl
addr16
js
jo
or
push
push
dec
fldcw
int
ds
scas
sbb
jbe
lret
add
ja
sub
mov
jmp
mov
aad
mov
pop
xor
xor
pop
imul
xorl
cltd
bound
push
jne
push
insb
ret
sub
les
cmp
mov
insb
iret
popf
dec
pop
or
xchg
daa
push
insl
pusha
xor
xor
xchg
stos
pop
dec
fidivrs
cli
cmp
cmpsl
xlat
test
or
jp
lret
into
mov
icebp
nop
gs
pop
and
add
xor
push
pop
imul
in
xor
punpckhwd
lods
or
fnsaves
nop
je
cmpsb
mov
push
sub
add
mov
subl
sbbb
xchg
sar
adc
shlb
stos
es
push
sub
fs
call
cmp
sbb
icebp
in
js,pn
out
sbb
test
add
xchg
mov
jge
loop
movsl
mulb
sbb
cli
f2xm1
pushf
sbb
mov
cmc
dec
loope
out
subl
fisttpll
scas
sbb
cmpsb
dec
sbb
inc
xchg
adc
xor
pop
xchg
add
jb
loopne
inc
xchg
xor
fldenv
xlat
aas
dec
mov
adc
daa
pop
out
mov
push
pop
cld
push
jo
mov
data16
js
cmp
mov
add
test
iret
cmp
sub
cltd
ror
cmpsl
rcr
add
in
cmp
lock
repnz
gs
dec
fimuls
sbb
push
shlb
adc
insl
xor
xor
fisttps
cld
pop
xchg
ljmp
or
mov
and
clc
xor
or
daa
imul
cmp
jecxz
cli
lret
mov
fists
inc
sbb
mov
idivb
or
push
cmpsb
adcl
fidivrl
pop
mov
inc
push
xchg
dec
mov
mov
lock
pop
into
pop
push
je
mov
arpl
rclb
sarl
insb
add
mov
mov
jno,pt
mov
stc
xor
dec
add
addl
mov
stos
add
mov
jbe
jo
pop
inc
pop
int3
aad
ljmp
push
fldl
adc
repnz
imul
test
loop
dec
ficompl
insl
cmc
mov
cli
jnp
push
fsubs
popf
xorl
ss
ror
add
addb
out
jl
divb
xchg
sbb
inc
ret
lret
mov
sub
test
push
fadds
cld
decl
xchg
dec
jmp
mov
dec
pop
add
and
test
push
fwait
mov
bound
push
xor
fistps
ss
cmp
cmc
pushf
popf
orl
pop
jnp
cmp
dec
jge
filds
xchg
shll
or
push
sbb
dec
add
aad
paddsw
int
aas
push
cmp
adcb
push
out
ret
inc
inc
jbe
ds
jnp
push
add
lahf
cmp
cltd
mov
rorl
add
or
repnz
inc
sub
ljmp
sbb
in
repnz
xor
inc
lcall
inc
dec
adc
push
inc
ret
xlat
mov
addl
mov
lahf
hlt
cmpsl
cmpsl
movsl
and
stos
cmpsl
test
jo
mov
and
dec
fdivrs
test
xchg
sub
or
mov
inc
rorb
outsl
ss
push
int
ss
inc
sub
cmc
pop
decb
lea
push
out
aam
loopne
outsl
inc
mov
add
pop
push
filds
sub
ror
in
aad
xchg
push
cmp
jo
inc
inc
lods
pop
cmpsb
mov
cmp
pop
sbb
in
inc
mov
sub
xchg
fldcw
out
mov
filds
loope
aaa
sub
rcrb
pop
jnp
addr16
das
inc
insl
lds
aad
xchg
sub
insl
daa
out
xchg
data16
mov
push
cmpsb
movsl
mov
in
test
sbb
cmp
mov
adc
scas
or
pop
dec
inc
dec
lahf
scas
cmp
out
pop
cmp
mov
and
push
andl
pop
les
xchg
dec
test
mov
push
push
js
jno
xor
outsb
loope
insl
test
movsl
outsb
add
push
test
outsb
xor
and
mov
js
sbb
outsb
loop
and
dec
add
scas
pop
sti
adc
push
andb
dec
fsubrs
in
xor
pop
xchg
dec
inc
mov
sub
rcr
push
aam
test
mov
push
sbb
imul
in
cmpsb
xchg
aam
sub
dec
cld
fdivrl
xchg
xor
insb
bound
fdivp
gs
stos
pop
xor
or
idivb
mov
mov
jno
push
mov
fnstenv
dec
jae
add
inc
inc
pop
int3
mov
aaa
xor
push
das
pusha
xlat
cltd
cltd
add
inc
mov
rcrl
enter
clc
sub
and
jecxz
aas
xor
adc
adc
adc
aas
in
es
pop
js,pn
jl
cmp
dec
sub
xor
and
fwait
jns
mov
jae
lock
out
mov
gs
mov
cs
out
adc
movsb
xchg
popf
outsl
fcmovbe
xor
xchg
iret
stc
lods
daa
jns
sub
and
jnp
xchg
xor
sbb
repnz
inc
fsubrs
sub
inc
aad
aaa
adc
dec
ficoml
xchg
mov
enter
sbb
push
aam
pop
rorl
into
ficoml
addr16
pop
mov
orl
std
stos
imul
push
daa
in
mov
jmp
sub
in
ftst
or
loop
lods
fbld
popa
and
fldcw
push
push
test
inc
orb
clc
mov
adc
imul
xor
xor
cmp
ja
sbb
mov
sbb
inc
ja
push
sbb
xor
mov
lcall
xchg
mov
repz
jmp
push
fs
andb
pop
fdivs
andl
scas
dec
loopne
dec
aaa
rcrl
jle
xchg
add
mov
mov
push
pop
cmp
stos
mov
and
in
sub
xlat
jne
int3
daa
sub
fcomps
stos
xchg
cld
fdivrs
cld
stos
lret
lods
cmp
sub
lcall
mov
fucomi
and
sahf
or
jge
insl
dec
cmp
mov
pop
cmpsb
mov
xchg
aam
cltd
and
dec
or
scas
sub
pop
hlt
adc
cmpsl
mov
mov
and
dec
enter
pop
mov
stos
jo
enter
add
inc
inc
jmp
notl
insb
xor
imul
jae
iret
jb
popf
inc
mov
cwtl
test
lret
aaa
je
jg
rcll
xchg
addl
mov
outsb
adc
call
cmp
lea
pop
cmp
mov
inc
mov
xor
inc
into
stos
inc
div
add
cmp
adc
mov
xor
lahf
adc
cltd
lock
divb
mov
push
dec
or
sbb
decb
or
out
inc
cmp
cmp
dec
lds
movsl
xchg
pop
xchg
movsb
andb
out
cs
movsl
les
cmpsl
jns
sbb
popf
ret
pop
in
adc
addr16
mov
mov
push
fisttps
fcoms
loopne
mov
add
cwtl
clc
push
int
add
mov
cmp
adc
pop
jg
shll
hlt
loopne
aas
pop
xchg
out
pop
cmpl
sub
pop
outsb
test
xchg
sahf
lcall
xor
cmc
mov
nop
push
lahf
ret
push
imul
mov
xchg
pop
negl
std
addr16
ret
push
fists
xor
int
mov
cmp
icebp
stc
je
add
push
jecxz
push
filds
cmpsl
sbb
add
negb
out
and
neg
and
push
insl
lahf
cmp
stc
out
push
dec
jp
mov
jns
popf
ficompl
icebp
loop
cmp
out
and
xor
fwait
aas
insb
addr16
mov
shl
pop
lcall
aas
addb
ljmp
pop
mov
fwait
lds
insb
xchg
call
stos
push
add
fbstp
adc
leave
jp
into
mov
loopne
insb
xchg
lds
dec
xchg
scas
notb
mov
bound
outsl
rorl
adc
mov
outsl
xor
dec
adc
pop
fisubrl
test
add
add
xor
xchg
out
je
sub
sbbl
lcall
dec
outsl
jle
test
and
test
orl
ret
data16
cli
adc
jp
call
xor
mov
and
jg
adc
mov
xor
push
pop
mov
inc
and
sub
adc
mov
push
aad
in
inc
lods
xor
xchg
jae
mov
rclb
jmp
gs
xlat
lret
cmp
jmp
fistpll
mov
pop
lcall
ljmp
sbb
das
sbb
jp
jl
mov
push
leave
mov
dec
add
scas
sub
sbb
dec
stos
push
jns
xor
push
cmpsl
jb
cmpsb
xlat
mov
mov
pop
xor
loopne
xchg
mov
sahf
push
pop
mov
mov
fucomip
jne
out
add
xchg
aam
jg
xchg
aad
arpl
shll
jo
pop
mov
f2xm1
sbb
mov
cltd
cli
dec
fdivrs
inc
imul
daa
out
cmp
sbb
sbb
and
daa
mov
mov
pushf
sbb
movsl
sahf
std
inc
mov
push
xchg
cmp
and
icebp
sub
popaw
arpl
xor
sub
adc
xor
inc
lods
rclb
pushf
jle
xor
push
and
sub
pop
sahf
add
inc
or
enter
dec
lods
inc
inc
loopne
push
push
jo
arpl
push
xorb
cltd
and
jnp
xchg
rcr
pushf
mov
jl
inc
subb
cli
dec
mov
dec
fdivl
lock
fsts
jge
mov
test
jle
add
adc
iret
inc
bound
negb
cmp
loopne
or
jp
loope
cmpsl
in
lret
lods
xor
fwait
jnp
adcb
xchg
jmp
cltd
in
lret
jmp
sub
sarb
pop
adc
or
dec
in
push
dec
sahf
mov
lods
out
lcall
shlb
and
mov
mov
movb
shr
mov
in
mov
imul
cmp
call
and
mov
stc
jecxz
pop
dec
mov
mov
cltd
test
cmpsb
ja
sbb
xchg
sub
mov
and
and
pop
je
fucomp
insb
test
mov
pop
out
mov
js
sbb
cmc
sub
dec
jg
frstor
mov
ss
sub
add
push
nop
inc
js
fwait
mov
mov
and
inc
pop
orb
mov
mov
in
notb
and
push
adc
sub
dec
push
xor
mov
and
mov
pop
subb
jns
fdivrp
jb
fisttpl
loop
cmp
lcall
aam
push
aad
in
or
push
das
adc
in
lods
ja
adc
cli
movsl
fistps
loop
jle
mov
pusha
dec
sysret
mov
ljmp
lods
out
nop
add
imull
aaa
push
push
xchg
into
inc
in
mov
sub
mov
stos
adc
rorl
call
out
xchg
xchg
lret
cltd
icebp
imul
iret
mov
std
push
inc
push
jnp
sbb
pop
sbb
mov
daa
dec
lret
add
mov
scas
shll
ret
mov
movsl
inc
ljmp
es
leave
movb
jmp
sub
repz
mov
push
loop
lret
lahf
sbb
add
push
jnp
enter
and
arpl
fwait
jg
dec
and
rcrl
xchg
lock
add
cmp
aad
test
bound
mov
nop
xchg
mov
popa
inc
sti
mov
call
push
xchg
push
lods
mov
inc
dec
cmp
and
cmp
outsb
pcmpgtw
xchg
lret
div
mov
cmp
push
sti
mov
ret
inc
aad
insl
test
pusha
pushf
adc
mov
push
js
out
inc
push
cmp
test
in
adc
xchg
aaa
cmp
cltd
ss
push
orl
cmp
or
xlat
int
ds
inc
pop
sahf
data16
adc
sbb
aas
cld
jl
out
cmp
imul
mov
adc
adcl
push
jg
imul
scas
lret
jp
enter
sbbl
add
shl
xchg
in
mov
aam
push
mov
std
stos
jecxz
sub
xchg
mov
iret
cltd
mov
pop
data16
mov
gs
xchg
inc
rcr
aam
lret
or
es
hlt
push
inc
ja
jne
xchg
mov
sub
push
adc
add
lods
stos
xorl
adc
lret
out
loope
inc
push
mov
gs
mov
xchg
je
outsl
xchg
data16
xchg
shrl
jle
mov
mov
icebp
cmc
cmpsl
rol
adc
into
dec
addb
aam
lret
enter
sbb
rcl
addl
add
sti
enter
imul
addr16
dec
stos
cmp
push
and
cmc
cmpb
adc
jne
inc
in
xor
xor
xchg
stc
inc
mov
or
lods
shl
or
push
dec
dec
out
arpl
std
std
dec
loop
stc
and
test
in
pop
js
ss
or
lret
fidivrs
jne
adc
aad
mov
pop
cmpsl
sbb
push
shrl
pop
add
lahf
mov
jo
xchg
inc
mov
mov
pop
xchg
aad
and
andb
cld
mov
mov
aam
aam
addb
and
and
cld
pop
fcmovbe
into
stos
push
lahf
pop
add
leave
xlat
rsm
xchg
cmp
decb
ss
mov
mov
addl
fwait
push
and
js
popf
dec
lods
jl
jg
int
mov
rcll
sbb
ds
dec
daa
das
mov
sub
cmp
jmp
rorl
inc
or
mov
mov
popf
mov
jp
stos
sub
pop
test
push
jo
pop
mov
insb
cmp
mov
das
inc
lret
adc
movsl
cmp
fwait
push
leave
negb
xchg
dec
insl
push
push
aam
sbb
xchg
ret
xchg
mov
dec
adc
add
or
mov
shl
popf
and
dec
mov
in
inc
orb
ds
sub
mov
sub
cmpsb
lret
xchg
xchg
add
aam
or
and
les
sbb
dec
fistl
dec
out
aam
test
sahf
sub
push
jp
cmpsl
mov
sbbb
sub
mov
jg
dec
lahf
mov
es
lea
scas
cmpsl
and
scas
movsl
xchg
icebp
into
sahf
aas
out
mov
ja
mov
out
pop
adc
jmp
push
fmull
movsb
or
ss
pop
les
jmp
icebp
pop
jo
inc
mov
es
jmp
xchg
push
pop
stc
popa
loopne
push
rorl
les
cmpl
popf
jl
imul
test
pop
pop
xor
xchg
fbstp
sbb
cld
jb
stos
lcall
pop
cli
inc
jp
cmp
cmp
out
lret
iret
jns
fcmovbe
in
push
out
adc
imul
xor
xchg
insb
lret
pop
loop
lahf
push
mov
sub
pop
insl
dec
int3
jb
inc
mov
adc
inc
add
pop
add
movsl
adc
sub
sbb
push
push
dec
and
ss
rcll
lret
shll
push
pop
pop
lcall
scas
and
ljmp
sub
lahf
dec
in
push
dec
gs
sub
and
mov
jl
fcmovne
das
ds
inc
or
push
mov
rolb
out
cld
mov
or
out
iret
out
inc
fucomip
rorl
xchg
push
fwait
adc
cli
fcmovb
pop
mov
int
adc
add
mov
jnp
out
in
jge
lahf
das
push
out
jp
fs
sub
mov
pop
outsb
mov
clc
dec
add
int
notb
pop
jbe
rorl
xchg
in
lahf
gs
dec
adc
inc
pop
cmp
mov
mov
clc
push
lds
daa
in
pushf
iret
das
sahf
fcmovb
push
inc
push
loope
and
clc
addr16
lcall
das
pop
les
inc
push
das
push
push
lea
and
fs
orl
ds
jg
pop
xchg
xor
outsb
mov
push
sbb
push
pop
mov
fcoml
pop
cmp
jl
mov
pop
enter
sub
shrl
xchg
mov
lea
movsb
mov
pop
fbstp
aam
movsb
xchg
and
xchg
std
push
lahf
xor
mov
xchg
lods
add
mov
arpl
and
pop
aam
outsb
sub
movsb
xor
mov
in
mov
jno
mov
es
and
mov
fcmovu
cmp
fisttps
bnd
loop
loopne
shll
sub
mov
jo
or
xchg
stos
icebp
adc
pop
popf
cmp
nop
inc
pop
ret
mov
js
enter
inc
sub
ljmp
dec
pop
idivb
jo
enter
or
addr16
inc
mov
sti
cwtl
mov
sbb
dec
pop
push
aam
xor
jl
pusha
mov
pop
xor
cmpsl
mov
das
stos
push
ret
fstps
add
xor
lods
and
push
mov
mov
lock
std
out
mov
xlat
mov
outsl
loop
push
push
test
fs
cmp
inc
push
rol
cwtl
jns
fsubrs
xchg
imull
inc
repnz
mov
in
aam
or
int3
adc
jge
and
stc
xchg
std
repz
sub
sub
fnstcw
fwait
pop
mov
dec
loope
jmp
imul
fsubr
cs
movl
incl
xchg
addr16
out
lock
ret
inc
cli
adc
cs
push
fnstenv
pushf
xchg
mov
xchg
test
out
xor
push
out
xchg
pop
jmp
arpl
stos
mov
add
mov
outsl
mov
das
adc
jns
xchg
adc
cmp
mov
ds
je
push
sarl
xchg
push
jle
ret
aas
xor
test
repnz
pop
leave
test
sahf
ret
mov
test
outsb
std
sahf
add
mov
inc
fbld
into
mov
sti
mov
aam
subl
push
mov
ret
call
addr16
fs
in
xor
sub
outsl
push
mov
mov
fimuls
and
ret
inc
or
jne
cmp
mov
xchg
rcr
cmp
push
and
sub
jecxz
dec
jae
enter
cmp
mov
jl
test
pushf
xchg
cwtl
sub
xlat
lahf
int3
mov
loopne
mov
aad
cmc
cmp
mov
mov
dec
testl
xchg
into
cmc
movsb
push
andl
fisttps
dec
mov
or
leave
ss
mov
xor
jo
xor
ret
das
cmp
stc
xor
pusha
xor
repz
push
lret
pop
and
and
outsb
test
and
popf
nop
mov
mov
push
rcl
jae
inc
xchg
jmp
push
inc
gs
jae
and
or
or
and
aas
or
push
cmp
inc
xchg
nop
adc
push
or
arpl
or
jae
lods
and
pushf
in
pop
xchg
or
push
jmp
inc
adc
pop
xchg
fcom
insb
jle
jo
xor
scas
out
stos
jmp
jae
xchg
clc
push
stos
hlt
mov
xor
dec
adc
movsl
pop
pop
outsl
mov
push
or
jmp
inc
push
mov
inc
push
mov
jmp
dec
lods
sub
out
lods
add
sbb
in
lahf
push
into
adc
and
cmp
shld
int3
push
and
in
cmp
rcr
in
ret
add
cmp
fistps
and
call
mov
test
inc
fwait
cwtl
pushf
mov
adcl
pop
jp
cmp
and
ja
xor
outsb
test
outsb
push
cmpsl
xchg
addr16
sbb
jno
daa
pop
repnz
stc
cs
lock
push
xchg
sub
push
fsubs
stos
stc
shll
loope
lea
lea
jl
or
pop
mov
jle
xchg
dec
or
sti
jbe
repz
in
pop
pusha
and
outsb
ljmp
imul
sbbb
lahf
pusha
sbb
fisubrl
cmp
aaa
sub
mov
lods
outsl
adc
jg
pushf
pushf
or
add
cmp
pop
mov
xchg
outsl
sbb
mov
mov
xor
in
ficoms
pop
xor
insl
scas
jmp
in
push
cmp
jg
sub
cmp
jae
xchg
jg
mulb
insb
in
mov
push
in
out
mov
inc
ret
adc
imul
insb
in
mov
inc
out
cmc
lea
test
test
sarb
and
adc
cwtl
inc
aad
dec
sbb
jb
push
xor
mov
loopne
push
arpl
cmp
outsl
push
cmpsl
dec
push
sub
les
pop
data16
ja
sbb
loopne
xchg
frstor
mov
sbbb
rcll
outsl
out
shlb
ljmp
jno
stos
and
dec
sbb
fdivr
push
fsubrl
pop
mov
popf
xchg
rolb
mov
int3
and
outsl
sbbl
mov
imul
aad
add
inc
test
pop
push
dec
inc
pop
xorb
mov
cmp
inc
sub
sub
push
cltd
imul
inc
or
ret
adc
sbb
push
pop
out
aaa
lret
mov
lods
decl
jbe
cmp
mov
cmc
loop
test
xor
test
sbbl
pop
pop
jp
jmp
mov
and
cmp
and
fcoms
inc
add
pop
inc
push
lret
mov
test
outsb
ljmp
adc
pop
pop
rcl
fcmovb
or
dec
push
dec
loop
lds
mov
outsl
mov
adc
sbb
xor
push
push
icebp
aaa
lds
sbb
or
cmp
stos
inc
stc
mov
mov
lret
fildl
inc
es
rcll
nop
jecxz
xor
jecxz
cmp
fs
std
out
adc
inc
mov
icebp
shl
jne
and
pop
imull
lock
sub
aaa
cmp
adc
add
aaa
pusha
cmp
test
repnz
js
dec
lret
jmp
xor
dec
add
shll
lock
sub
xor
jbe
scas
cmc
jbe
iret
out
mov
lcall
imul
in
out
or
aam
sbb
daa
les
mov
pusha
adc
mov
mov
jg
gs
cmp
xor
shl
jmp
cwtl
and
mov
scas
jge
inc
es
add
negb
dec
mov
ss
je
pop
and
pop
enter
lret
lahf
push
int
mov
scas
adc
sbb
and
mov
sti
fwait
mov
dec
cmp
lcall
jne
fmulp
mov
cwtl
push
mov
xor
daa
jg
popa
ds
nop
cmpsb
mov
mov
call
insb
mov
jle
xchg
mov
pop
push
cmp
imul
or
inc
cld
mov
rclb
idivl
push
je
outsl
pop
xor
inc
outsl
int
mov
into
push
imul
aas
loopne
push
call
cs
addb
lea
vcvtps2dq
imul
aam
mov
daa
pop
iret
push
mov
repnz
call
adc
sbb
loope
ljmp
fidivrl
out
add
lods
aam
in
pop
mov
or
dec
lahf
pop
mov
cmpsl
int
fldcw
mov
push
mov
call
sbb
movb
jle
lret
jp
nop
push
sub
xchg
arpl
sbb
pusha
popa
ret
int3
dec
jl
mov
or
adc
fsubr
adc
lock
fwait
mov
subl
mov
ljmp
mov
push
jno,pt
mov
adc
into
mov
adc
inc
fbld
and
inc
repz
inc
in
mov
mov
lcall
loope
push
gs
test
xlat
int3
ja
lods
cmc
dec
jle
mov
xchg
jl
cli
push
push
stc
cld
xchg
jge
cmc
nop
out
mov
jb
lods
push
test
fsubrl
rorb
ffree
loope
sub
xor
cmpsb
mov
mov
test
pop
iret
pop
and
mov
jo
add
icebp
rclb
repnz
sbb
lcall
cmp
repz
test
call
sub
fwait
push
js
mov
ss
lret
add
mov
jbe
xor
adc
pop
mov
sub
dec
pushf
push
xor
xor
das
jmp
jmp
aad
adc
mov
loopne
gs
dec
int3
out
sub
into
adc
xor
seto
inc
push
add
push
aaa
out
jg
add
movsl
mov
lods
push
mov
test
jno
fs
popf
pop
xchg
ret
aad
ja
jmp
dec
je
loope
add
movsl
sub
push
lahf
xlat
js
popa
es
lods
loopne
scas
imul
jne
xor
jno
ja
ret
shrb
lods
push
fs
in
sbb
clc
push
inc
repz
outsl
divb
lcall
ret
pop
cwtl
jb
adc
mov
repnz
daa
in
mov
lahf
push
inc
pop
movsb
xor
cmp
je
jno
add
cld
and
test
mov
lahf
sbb
push
mov
lods
pop
and
mov
push
xchg
pop
test
xchg
cs
jne
rorl
notb
hlt
mov
test
xchg
sbb
jns
fsubl
jmp
xlat
insl
adc
orl
nop
jbe
or
je
or
aas
sbbl
lahf
std
mov
mov
jae
stos
repnz
cmp
fstp
in
mov
iret
loopne
xchg
pop
icebp
sub
xlat
push
test
jbe
mov
cmp
daa
adc
xor
popa
dec
or
fiaddl
out
jmp
imul
sub
lock
xor
add
add
call
mov
and
jae
mov
fwait
jle
mov
cmp
xchg
pusha
sti
fcoms
mov
pop
adc
fsubrl
ret
or
add
enter
rcrl
mov
pop
mov
aad
push
in
aaa
in
movsb
pop
movsl
fwait
and
mov
inc
sbb
incb
inc
cld
pop
sub
mov
sbb
or
js
into
push
inc
test
imul
add
ret
sub
mov
jo
jle
or
js
lds
lods
xchg
mov
xchg
xor
push
inc
mov
popf
cli
xchg
insb
je
lea
loope
mov
mov
cld
loopne
sar
testb
mov
fwait
mov
dec
sub
es
loop
aad
sbb
out
adc
or
mov
mov
es
lcall
std
test
mov
or
stos
push
scas
sarl
out
shll
add
xor
fnstcw
push
xor
aas
mov
shrl
ljmp
movsb
sub
loope
inc
imul
mov
push
fnsave
mov
iret
ljmp
enter
jb
cmpsl
fwait
sti
cmp
dec
sub
bound
int
jl
adc
sti
scas
test
loope
mov
xchg
or
ror
xor
xor
push
push
add
xor
mov
jl
fdivs
or
or
jae
jne
xor
fstps
pop
mov
jge
or
movl
cmp
push
notb
repz
lea
jp
adcl
mov
add
inc
and
dec
mov
call
imul
test
mov
fldl
jle
xchg
fisttpll
pop
add
cli
dec
inc
xchg
or
jbe
lcall
stos
mov
push
mov
sarb
adc
jg
jecxz
clc
ja
mov
insb
rcrb
fmuls
icebp
cmp
scas
push
add
fnstsw
ss
cli
pop
mov
jns
dec
psadbw
ljmp
push
pop
push
clc
cmpsl
sub
lock
ret
jae
and
gs
add
arpl
cmp
sti
mul
sub
push
pop
je
pop
mov
mov
dec
sti
add
cmp
jbe
movsb
shlb
dec
hlt
addr16
outsl
jl
cwtl
sub
xchg
push
cmpsb
mov
jmp
loopne
xchg
pop
out
aaa
and
ja
jo
and
mov
mov
mov
subl
and
inc
adc
data16
mov
add
fwait
or
mov
dec
mov
sbb
ret
jecxz
mov
xchg
lds
popa
or
sub
and
stos
mov
dec
push
in
int
jmp
add
int3
shll
movsl
divl
in
js
lea
out
xchg
lods
ret
out
pop
outsb
sub
insb
cmp
out
test
dec
push
fs
sarl
jne
mov
cwtl
movsb
xor
cmp
sbb
sbb
mov
test
or
mov
cs
pop
repz
imul
cmpb
scas
cli
and
fs
mov
or
mov
punpcklbw
addps
cmpsb
lea
mov
addl
mov
popa
imul
mov
mov
mov
adc
xchg
push
es
out
es
jnp
xor
dec
into
mov
push
inc
ret
ret
fcoml
sti
cltd
fisubs
lds
bound
push
hlt
push
jg
jg
mov
mov
lods
and
nop
dec
cmp
iret
mov
adc
ret
push
addb
mov
mov
jno
inc
jno
js
and
lret
adc
js
jo
push
clc
inc
inc
mov
mov
sti
lods
in
insl
call
sub
inc
lahf
mov
dec
fbstp
mov
push
or
nop
or
xor
loope
filds
cli
inc
push
sbb
push
mov
and
or
inc
inc
subb
repz
cmp
sbb
adc
add
mov
mov
ret
inc
or
adcb
push
cmp
ljmp
das
cmpsb
sti
into
sub
xor
push
mov
mov
in
pop
lods
shlb
and
push
pop
aam
inc
ret
fldenv
or
fwait
mov
cmpsb
or
xor
xchg
mov
subl
ds
cmc
pusha
das
mov
xor
out
in
leave
pop
mov
lret
rol
push
test
jg
aam
popa
mov
loop
dec
popf
out
pushf
jnp
jae
sbb
ja
out
in
pop
and
adc
bound
mov
out
adc
stos
popf
mov
std
mov
andl
jno
xor
outsl
nop
lcall
mov
or
inc
int3
inc
pop
in
xchg
xchg
sbb
in
roll
push
add
std
sub
popa
xlat
data16
outsl
jge
pop
outsl
inc
int3
nop
mov
je
hlt
iret
or
loope
fisubrs
dec
in
cmc
adc
fisubs
inc
xor
jo
lahf
cli
or
xchg
cs
adc
inc
push
fcoml
cmp
mov
pmaddwd
inc
adc
cmpsl
jns
aam
stc
inc
inc
xchg
mov
out
stos
cltd
adc
or
sub
pushf
cltd
dec
pop
mov
ret
inc
inc
outsl
nop
push
cmpsl
xchg
or
jb
ret
adc
add
push
inc
jbe
adc
jge
test
jns
aad
push
mov
ljmp
cmp
push
jl
in
inc
push
xchg
loope
adc
sbb
int3
mov
ret
movsb
xchg
imul
add
daa
out
cwtl
sbb
aas
loop
pop
mov
addr16
in
push
mov
into
dec
and
das
xchg
fidivl
xor
inc
mov
sbb
dec
jle
sbbl
gs
jmp
cmpsl
dec
xchg
in
dec
jle
sbb
add
inc
fdiv
cmp
inc
or
clc
sub
int3
or
xchg
push
scas
jne
and
adc
pop
loopne
mov
or
mov
call
jl
cs
add
cmc
enter
pop
orb
xor
fidivrs
xchg
or
ja
or
inc
cmp
arpl
aam
out
xor
sub
jecxz
hlt
jno
push
or
sti
sbb
andb
into
xchg
ss
xchg
push
jns
lret
push
inc
rolb
pop
test
fdivl
push
push
lret
mov
fmuls
xor
sti
push
insb
das
in
push
inc
and
imul
rcr
push
inc
jmp
fs
inc
cltd
jmp
sti
xor
shlb
out
pop
cmp
sahf
dec
ret
popa
push
fsubl
mov
xchg
xorl
mov
std
sbb
xor
mov
fldenv
push
dec
sub
push
loopne
push
mov
ret
inc
scas
or
mov
jnp
out
lret
rorb
fisubrs
mov
psrlw
jmp
adc
inc
inc
jp
push
mov
cmp
pushf
stc
xchg
push
pop
inc
sub
gs
cli
pop
adcb
xchg
dec
pop
cmc
jmp
adc
cmp
ret
dec
push
into
pop
push
mov
data16
or
dec
je
filds
jg
jp
push
out
loope
push
push
les
bound
aaa
sub
cmp
pop
xchg
cld
decb
mov
rolb
neg
repz
or
lret
insl
dec
pop
xchg
xchg
or
xchg
stos
mov
dec
and
jmp
cmp
sub
lock
adc
mov
imul
fidivrs
cmp
mov
or
fdivr
xchg
dec
cmp
mov
bound
clc
or
pop
jbe
aas
pop
pop
xchg
sbb
pushf
and
adc
pop
scas
rorb
sbb
xor
jo
lock
inc
xchg
dec
fiaddl
mov
repnz
jno
push
push
mov
sbb
lahf
mov
cmp
jl
dec
adc
test
sbb
popa
mov
and
iret
xorb
test
test
add
call
test
in
jb
add
pop
xchg
adc
inc
fcmovb
jbe
shrb
sti
loope
push
dec
push
mov
leave
adc
sbb
repnz
out
sbb
jne
test
jno
fs
lds
inc
jno
xchg
into
mov
imul
cld
add
inc
aaa
rcrb
mov
cmpsb
or
std
arpl
test
mov
sbb
cmpsb
scas
mov
push
or
mov
out
or
cmpsl
xor
pushf
xchg
mov
or
xchg
mov
pop
adc
add
inc
sub
sub
jo
cwtl
mov
adc
inc
data16
popa
mov
fisubrs
sti
je
mov
test
inc
out
cmp
cmpsl
add
mov
in
xchg
add
xchg
mov
add
or
xor
cli
hlt
in
or
aaa
das
dec
xchg
sub
mov
jb
and
mov
fldenv
es
cltd
xchg
xchg
mov
lds
daa
jp
cmpsl
lret
lret
negl
icebp
sbb
lods
in
xchg
in
in
inc
mov
inc
lods
cmp
icebp
dec
movsl
dec
xor
push
sti
movsl
dec
dec
lret
outsb
dec
jae
rcrb
mov
scas
dec
cmp
dec
dec
shlb
ss
pop
pop
jbe
pop
dec
enter
jae
pusha
xlat
leave
stos
sbb
xchg
dec
sbb
dec
xchg
jne
inc
int
outsl
mov
ss
and
rcrb
mov
outsl
fldt
and
test
ds
iret
test
addr16
mov
push
fstpl
lret
xorl
in
addr16
std
inc
inc
test
out
je
jl
dec
int
dec
jo
adc
mov
push
mov
imul
popf
and
jl,pt
dec
stos
mov
pop
and
dec
inc
mov
inc
repnz
jl
add
inc
mov
repnz
shrl
inc
enter
sbb
xchg
scas
mov
es
cmc
rclb
jne
jp
repz
ret
nop
and
fdivrp
xchg
ja
jmp
xor
arpl
jbe
nop
aas
pop
dec
jl
insb
cwtl
cs
sub
sbb
adc
lret
insb
popf
mov
je
iret
and
adc
aad
pop
mov
add
dec
test
sbb
repz
and
ret
out
and
insl
mov
andb
lret
jns
pop
mov
shll
cmp
lods
movsb
xor
sbb
push
lods
mov
idiv
mov
add
test
push
aam
movsb
push
xor
add
shrb
nop
insb
and
push
sub
lea
test
lods
cs
sbb
incb
jg
les
lea
imulb
inc
mov
out
jmp
fistl
std
adc
fstpt
scas
rorl
orl
jnp
push
xchg
lods
sarb
ds
inc
sub
push
inc
jo
xor
cli
and
cmp
xchg
adc
mov
cmc
mov
cwtl
insl
lcall
cmp
jo
jecxz
stos
dec
push
jp
int3
cltd
in
mov
je
hlt
add
out
and
call
repz
pop
into
fwait
das
mov
jae
dec
push
lea
idivl
loop
adc
push
lret
pop
inc
pop
add
cltd
sub
stc
dec
sarl
pushf
or
xlat
ljmp
std
fisubrl
jo
mov
xor
dec
jp
aad
rcrl
lret
xchg
ljmp
mov
repz
push
cmpsb
movsl
dec
push
jmp
ret
inc
push
rcrb
jmp
dec
push
jae
fwait
rcrb
stc
mov
aad
sbb
inc
popa
or
jne
jg
lods
xchg
cmc
xor
push
cmp
insl
xor
insl
add
shlb
inc
movsl
clc
in
fcoml
sub
movsl
and
push
shl
push
add
cmp
mov
lods
push
shll
sbb
aas
mov
in
stos
fwait
xlat
sbb
adc
rep
inc
xchg
mov
imul
and
and
and
stc
mov
mov
cmpsb
in
mov
in
cmc
shlb
adc
add
inc
aad
push
mov
clc
ret
rcr
mov
pop
sahf
jno
mov
in
out
sar
fbstp
pushf
pushf
std
mov
fisubrl
sbb
ja
adc
jnp
mov
and
shl
aam
insb
lds
jmp
icebp
push
adc
push
mov
xchg
aaa
xchg
sbb
pop
cmp
push
es
push
dec
cs
push
stos
inc
fnsave
mov
ret
add
xor
out
scas
enter
and
push
shlb
rolb
cmp
push
sbb
or
pusha
dec
dec
scas
add
mov
add
mov
testl
cmpl
mov
xchg
and
bound
sub
jmp
fcoml
adc
clc
inc
ret
clc
jecxz
mov
cmpb
popf
jnp
imul
sahf
sub
outsl
pop
xchg
mov
sbb
dec
fs
divl
xchg
es
mov
lock
hlt
cmp
inc
pop
adc
jb
fcmovnbe
and
and
aam
iret
testb
leave
jae
cmp
test
jmp
sub
xchg
push
sub
xchg
pop
fcoms
mov
cwtl
std
aas
mov
mov
add
js
idivl
popf
gs
ljmp
fsubp
mov
add
jae
mov
add
sbb
sbb
into
bound
push
out
cmpsl
enter
push
mov
mov
inc
push
jge
inc
cmp
aad
inc
inc
nop
repz
cmpsl
mov
adc
push
vpmovq2m
inc
xchg
push
sub
pop
movb
jb
add
jle
popf
dec
je
outsb
jae
xor
int3
pop
mov
std
xorb
xor
dec
mov
fsubl
add
push
mov
daa
lods
jle
push
adc
fwait
shlb
icebp
push
jne
mov
dec
sarl
aaa
js
in
sub
mov
pop
adc
sbb
push
jge
pop
icebp
cmpsb
cmp
scas
or
add
je
lods
fwait
jecxz
push
xor
scas
xchg
insb
pusha
cmp
aad
and
lcall
jle
cmpsl
mov
cltd
adc
out
mov
fmuls
pop
jp
ljmp
mov
fisttpll
xor
mov
fisttpl
jno
and
jnp
stos
or
or
mov
cmp
sub
add
mov
or
stos
jne
lcall
std
imul
cmp
adc
pop
dec
xor
mov
add
scas
sub
mov
imul
leave
or
lods
push
mov
pushf
inc
repnz
sub
jo
mov
sub
cmc
or
inc
aam
jbe
cmc
addr16
cmp
adc
pop
mov
inc
adc
sti
sbb
fucomp
jbe
push
cli
out
out
jno
xchg
jp
pop
in
test
out
jl
inc
jmp
or
xor
mov
mov
dec
mov
or
mov
pop
scas
mov
jg
lret
aas
push
mov
and
push
mov
jns
out
popa
outsb
add
jbe
aad
lock
es
push
jecxz
ficomps
xor
test
stc
fisubrl
sbb
or
je
lods
push
inc
leave
cmc
pop
sti
push
push
xor
mov
mov
mov
orl
mov
pop
mov
push
fldl
push
loope
scas
push
sahf
loope
dec
adc
sbb
imul
lods
pop
pop
pop
loope
pop
mov
stos
testl
add
lret
fdivr
cli
adc
aad
test
mov
push
and
in
jbe
jno
sahf
sub
inc
pop
lock
test
andb
ds
mov
scas
inc
pop
fmull
inc
pop
cltd
aad
pop
aaa
sub
inc
mov
das
sbb
into
mov
mov
sarb
mov
das
mov
popf
mov
jmp
sub
scas
jbe
push
add
out
xor
lea
cmp
xchg
rclb
push
pop
stos
jge
adc
scas
or
push
mov
add
aad
mov
mov
xlat
xchg
in
sub
into
daa
imul
cmpb
or
sarb
shll
sub
and
cmp
pop
cmc
loope
fdiv
out
sub
mov
mov
push
idivl
imul
push
xlat
enter
iret
cmp
mov
imul
pop
ror
mov
mov
popa
dec
cmp
cmp
in
fwait
pop
nop
inc
pusha
inc
pop
filds
cmp
in
jnp
dec
out
push
sbb
cltd
or
add
inc
ret
icebp
divl
mov
stos
mov
popf
rdtsc
sbb
jb
lods
jb
or
fsts
push
cmovbe
scas
addr16
lds
cmp
pop
pop
sbb
dec
in
std
bound
adc
repnz
push
fdivl
pop
pop
cmp
int
and
xchg
adc
inc
jmp
dec
cli
or
fwait
xor
adc
xor
int
inc
add
cmc
mov
bound
in
adc
add
mov
jge
fsubrp
adc
test
add
mov
xor
outsb
mov
inc
das
xchg
and
mov
hlt
fwait
int
fisubs
imul
mov
aam
jb
push
pop
pop
push
mov
arpl
shlb
ror
push
or
pop
rolb
sub
ss
push
das
sbb
movsl
dec
xchg
aad
imul
add
das
cmc
aam
arpl
xor
jle
sti
ds
icebp
imul
mov
jns
sub
test
and
repz
jne
push
push
mov
xor
dec
icebp
push
sbb
sub
and
movsb
pop
push
cmpsl
inc
out
ljmp
pop
pusha
fdivs
adc
inc
push
dec
xor
xchg
cmp
pop
mov
ljmp
les
out
sub
shrl
dec
aaa
or
mov
mov
xchg
cmp
xor
aas
jne
daa
add
xchg
push
imul
mov
insb
aas
inc
fiadds
adc
mov
outsl
mov
adc
or
outsb
stc
inc
jno
test
ror
clc
push
gs
das
jbe
mov
mov
jnp
fdivrs
xor
cmp
mov
pop
cmp
out
add
sti
les
xchg
incl
add
or
pop
loope
fnstenv
hlt
mov
pop
addb
scas
sti
lock
into
fsubrl
negb
ja
es
loope
push
nop
outsb
inc
nop
push
mov
xor
mov
or
push
jge
aaa
pop
int
inc
pop
add
or
dec
bound
cmp
pop
push
xchg
or
jno
and
sbb
into
xchg
aam
insb
cwtl
dec
std
cmpsb
and
sbb
add
inc
das
pop
lret
xchg
repz
test
lret
mov
pushf
or
cli
sub
repnz
sbb
mov
pusha
mov
popl
lcall
jecxz
mov
sahf
add
pop
test
pop
fsubp
or
test
push
fs
dec
test
and
pop
add
pop
mov
mov
sbb
cmp
scas
jl
dec
sbb
cmp
mov
sahf
aaa
or
lods
in
xchg
es
daa
xchg
icebp
icebp
jp
lock
sbb
decb
outsb
mov
add
je
daa
bound
push
cmc
inc
mov
lds
sub
fsts
xchg
cmp
mov
scas
sub
sahf
adc
aad
mov
test
call
lcall
xchg
sub
out
imul
sbb
insb
into
sahf
lds
xchg
xchg
into
push
pushf
out
push
push
mov
cld
adc
cli
jge
repz
rep
inc
filds
push
test
xlat
or
cmp
or
mov
rcrl
gs
fwait
popf
push
stc
cltd
sti
mov
data16
repz
inc
xor
push
and
mov
movsb
jl
adc
in
pushf
stos
mul
pop
xchg
jo
mov
push
mov
fdivrl
movsl
sub
push
push
repnz
sub
xor
dec
push
jnp
idivb
push
setno
cmp
ss
mov
inc
add
adc
in
sbb
mov
push
xor
leave
adc
lods
mul
xchg
push
mov
cmp
cltd
mov
fsub
xchg
or
lods
out
pop
and
xchg
push
jp
sbb
push
and
decl
out
push
dec
int3
and
lods
lock
and
xlat
aas
jbe
mov
adc
loopne
outsb
mov
push
inc
push
adc
jl
jg
xor
pop
into
sub
insb
dec
testl
jecxz
das
pop
pushf
cmp
mov
test
push
sub
and
shll
xor
aad
pushf
fs
dec
cmpsl
mov
insb
js
test
add
scas
pop
mov
lds
adc
xor
jge
mov
nop
data16
jnp
push
das
sub
ds
hlt
rcrl
movsl
in
mov
lods
daa
faddl
bound
lcall
adc
push
shll
outsl
stos
rcll
decl
mov
adcb
adc
mov
fstps
mov
push
les
xchg
iret
mov
fisubrl
out
mov
xor
adc
addr16
jg
jae
mov
mov
add
mov
arpl
mov
ficoml
into
push
jo
mov
pop
or
pop
xorb
sbb
push
hlt
add
and
into
es
fisubrs
pop
sub
sarl
sbb
jae
aaa
xchg
pusha
ljmp
or
aas
lock
jle
aas
fnsave
and
jno
aad
cmp
scas
inc
cs
imul
js
clc
dec
jne
xor
aam
fidivs
sarl
mov
cmc
mov
sbb
rcll
and
mov
push
push
dec
mov
dec
arpl
xor
hlt
pop
and
cmp
or
je
sahf
addr16
jle
shr
push
mov
mov
jb
incl
and
mov
mov
adc
sbb
push
mov
adc
fnsave
sarb
shrl
sub
push
lret
loop
jae
pusha
xchg
dec
push
lret
xrelease
xchg
in
pop
and
in
xchg
les
xchg
or
mov
sub
cmp
js
xchg
fnstenv
pop
ja
adc
and
rclb
mov
ljmp
ljmp
das
push
mov
repz
sbb
cwtl
jnp
push
xor
repnz
dec
xor
dec
push
xorl
jne
jle
inc
sarl
xchg
adc
jb
mov
mov
cltd
mov
xchg
jecxz
or
fists
jns
aas
mov
mov
in
and
cwtl
push
and
dec
pusha
inc
aas
xchg
push
sub
mov
pop
addr16
dec
lahf
mov
in
adc
call
arpl
xchg
pop
fists
fwait
mov
or
ret
aad
sahf
mull
in
loopne
or
cmp
push
add
int
inc
jae
xchg
out
xor
sbb
enter
inc
xchg
sub
ljmp
in
mov
mov
aas
pop
inc
leave
sub
mov
iret
fdivr
roll
cltd
pusha
jae
test
test
xchg
add
or
pop
aas
adc
popa
pop
sbb
nop
push
inc
in
or
pusha
pop
or
pop
out
inc
sub
inc
mov
sbb
movsl
adc
into
push
xchg
lods
movb
mov
je
push
push
mov
adc
ficompl
add
cmp
jbe
push
rorb
jo
xlat
ja
push
fstp
stos
and
outsb
andl
mov
outsl
mov
cmp
pop
mov
nop
dec
push
xor
outsb
es
adcb
pop
test
cmp
add
cmpl
repz
inc
cmp
loope
gs
xor
add
mov
cld
adc
addl
and
lock
lds
xor
cmp
jge
jne
shrb
cmp
inc
das
push
mov
rcll
in
int
cwtl
sbb
stos
notl
jno
lods
push
add
add
sti
aas
jo
sbb
fiadds
out
mov
sub
pop
cs
mov
inc
fidivrl
rorb
movsb
mov
loop
pop
sbb
sti
cmp
adc
icebp
dec
push
mov
bnd
jnp
jae
mov
loope
mov
cld
dec
addr16
lret
jmp
xorl
mov
sbb
sbb
mov
xor
pusha
cmpsl
cmp
push
loop
xor
stos
jge
sub
mov
pop
lret
hlt
mov
rol
push
lcall
mov
int3
js
sbbb
mov
push
cmp
lahf
mov
imul
jg
in
fwait
cltd
mov
add
int
mov
xchg
adc
vpmacsww
pusha
fwait
addr16
dec
iret
mov
scas
sub
in
out
les
cmp
aad
or
clc
jnp
js
out
jmp
push
js
inc
sti
pop
sub
subl
xor
jne
enter
call
mov
mov
adc
fwait
adc
lcall
out
jmp
dec
and
pop
fs
mov
lcall
or
cmc
call
jmp
int
sub
or
sahf
jo
xor
inc
cmp
jmp
addr16
pop
xchg
es
in
fistps
mov
scas
push
repz
fs
repz
shlb
loop
test
sub
xchg
dec
xor
fstpl
out
add
jmp
mov
nop
punpckhdq
loope
pusha
in
mov
mov
xor
loopne
pop
cmp
popa
lock
cmpsb
xchg
sbb
mov
jns
inc
pushf
les
lds
scas
jecxz
jecxz
jmp
aaa
ret
sti
mov
daa
into
xchg
mov
adc
aad
and
cmpsb
in
pop
shll
push
imul
lds
mov
test
or
mov
cli
push
pop
lret
adc
fcoms
adc
negb
mov
sbb
bsf
out
sti
xchg
lret
jg
enter
test
js
popa
pop
or
pushf
int3
sub
gs
xchg
pop
mov
mov
mov
scas
or
sub
je
shll
sbb
xchg
int
push
stc
clc
cmp
xchg
test
dec
lock
aad
in
test
lods
les
adc
sub
fisubrl
sbb
pop
adc
pusha
mov
icebp
cmp
sbb
lret
je
xchg
jb
inc
ljmp
push
push
inc
sub
inc
push
rcl
add
jne
aas
mov
mov
push
insl
out
push
sbb
jle
popa
cmp
daa
int3
sbb
cmp
xchg
outsb
push
test
or
jbe
push
jbe
lret
loopne
xchg
into
fcmovnb
cmpsl
gs
mov
adc
pushf
jno
in
xchg
xchg
mov
inc
sti
stos
mov
add
dec
jno
outsb
cmpsb
cs
adc
decl
jb
push
popf
sbb
fidivrl
xor
push
js
sti
dec
or
push
inc
into
incl
adc
repnz
and
lret
cwtl
das
pop
scas
cmp
jge
rolb
outsl
pushf
cltd
iret
lret
out
enter
test
ret
inc
add
pop
gs
jge
cwtl
shrl
in
sbbb
mov
loope
outsl
xchg
sbb
test
mov
dec
xor
adc
idiv
loopne
add
push
rcl
push
lock
pop
ficoml
cmc
adc
jnp
xchg
mov
or
xor
mov
cmpsb
ss
cld
dec
and
mov
enter
jle
pop
dec
aaa
je
test
xchg
mov
out
ss
add
inc
loope
push
fbstp
pop
sub
sbb
icebp
stos
daa
push
lods
or
push
sbb
lods
and
pop
adc
out
or
call
mov
mov
jb
adc
mov
loop
pop
jns
fidivl
pop
jmp
inc
jp
pop
push
mov
cmc
faddl
sbb
or
scas
mov
mov
xor
jbe
lock
fisubs
push
jp
jl
sti
push
cwtl
mov
jp
les
arpl
dec
add
aaa
add
imul
add
add
icebp
add
rcrl
inc
es
pop
pushf
or
xlat
sub
es
xor
mov
pop
or
pop
ljmp
cld
push
mull
cli
adcl
cmp
xor
or
xchg
jge
mov
dec
orl
insb
ror
iret
push
mov
fisubs
fcomp
dec
dec
or
sbb
push
mov
rorb
sub
sub
inc
push
sbb
jmp
fcoms
cs
xor
loope
and
fsubrl
xchg
lahf
les
les
mov
adc
lret
sbb
push
insb
lahf
bound
push
and
add
or
pop
fwait
in
hlt
mov
nop
push
inc
ds
jb
imul
jge
push
pop
xchg
push
ret
outsl
fwait
mov
mov
or
sub
ja
rcrl
or
and
or
neg
scas
push
dec
fcmovne
clc
ljmp
dec
test
popf
jns
add
daa
xchg
push
cmp
xchg
gs
dec
cli
jl
jbe
int
cmp
fnsave
push
dec
dec
push
jb
ja
jne
repz
xor
call
rorl
jg
arpl
mov
xchg
mov
xchg
nop
and
xlat
and
shlb
cmpsb
jl
push
push
mov
adc
adc
in
or
xchg
mov
or
mov
fmulp
rorb
fidivs
scas
gs
dec
out
fs
mov
enter
xchg
xor
aas
mov
mov
aam
dec
cmpsl
pop
mov
xchg
test
jmp
adc
and
jns
xor
fucom
push
in
loopne
push
push
fnstcw
adc
fisubs
mov
and
mov
popa
cmp
cmpsb
ror
jp
mov
in
xchg
mov
pop
mov
leave
arpl
subb
adc
mov
pop
sub
push
mov
xchg
out
jb
xchg
pop
cmp
jg
aaa
jmp
adc
mov
mov
shrl
imul
rol
fcmovb
jbe
aas
loopne
fcmovb
dec
mov
inc
add
dec
mov
mov
mov
addr16
pop
jns
jg
pop
push
or
das
push
ds
xor
mov
jecxz
xchg
push
jbe
xor
lea
sub
out
enter
dec
aam
mov
xchg
push
sub
jnp
jl
in
mov
mov
rol
mov
and
je
jb
mov
mov
jl
sahf
sbb
out
jne
mov
mov
das
aad
inc
lods
adc
push
test
sbb
mov
iret
out
cmp
or
int3
pop
push
add
ffreep
fdivs
mov
pop
ljmp
leave
dec
mov
mov
gs
mov
add
ficoms
stos
or
pop
shll
xchg
push
faddl
inc
icebp
enter
sbb
repz
in
mov
cld
push
or
fsubrs
add
shl
or
rcl
mov
leave
sbb
jo
cmp
ret
cmp
cld
dec
sbb
loope
das
pop
aad
into
cmp
cmpsl
lds
mov
jns
insb
xlat
imul
sub
mov
fldl2t
jp
sti
sbb
ljmp
outsl
in
test
fcmovnbe
call
mov
sti
push
aas
or
arpl
adc
or
add
cltd
lahf
lahf
mov
dec
push
imul
test
lds
int3
cli
mov
and
inc
jmp
leave
mov
inc
cmp
inc
dec
lahf
ds
gs
repz
pop
and
mov
lods
xor
add
pop
popa
daa
mov
cmp
mov
push
imul
loopne
sub
mov
pop
shlb
lock
mov
fadd
push
pop
adc
push
cwtl
fucomp
mov
movsl
sbb
gs
xor
push
fcmovb
ds
inc
inc
sbb
or
push
pop
cmp
jg
inc
mov
or
call
inc
repz
mov
roll
sbb
jnp
lods
jb
sbb
aam
mov
fs
call
jo
ss
loopne
in
aas
sub
enter
pushf
test
mov
insl
mov
xor
pushf
movsb
add
fs
adc
inc
jge
ror
fldl
jp
xchg
icebp
mov
test
cltd
lea
je
int
mov
clc
or
int3
arpl
inc
mov
subb
loopne
out
dec
inc
hlt
idivb
popf
cli
das
jbe
pop
pop
lock
popf
and
out
jmp
loope
sub
lcall
add
adc
in
aad
aad
insl
add
and
sub
fs
stc
stos
xor
les
dec
jne
loope
and
add
out
in
fs
rorl
mov
rcr
sbb
lods
or
cltd
lahf
lods
adc
incb
and
inc
aam
xchg
rcrl
nop
inc
aad
cmp
int3
dec
mov
shrl
jg
ficompl
rclb
add
push
mov
dec
jo
es
shl
stc
adc
xor
lock
loop
loope
out
mov
out
adc
cmpsl
in
test
divps
add
mov
mov
gs
jnp
push
nop
aas
inc
jo
dec
add
sub
repnz
sbb
outsl
jl
push
adc
and
inc
push
hlt
movsl
add
xchg
jbe
std
push
es
mov
gs
pop
pop
push
roll
icebp
pop
mov
icebp
cld
icebp
lea
orl
push
sahf
cld
in
jp
mov
push
xchg
nop
addl
inc
pop
mov
neg
push
loop
mov
dec
xchg
in
mov
test
cld
xor
inc
subb
dec
mov
iret
stc
repnz
pushf
pop
push
mov
push
mov
add
mov
xor
in
add
aaa
xor
test
pop
fisttpll
clc
sub
mov
sahf
push
jne
add
mov
push
and
fwait
jnp
fldcw
in
jo
dec
rolb
inc
data16
out
mov
or
mov
cmc
jae
das
cmp
call
iret
cld
mov
jge
push
rcr
dec
and
adc
dec
repnz
nop
adc
adc
mov
push
fbstp
xor
cli
push
jns
aad
das
adc
sbb
sarb
stos
lock
or
mov
out
push
arpl
inc
jp
jnp
jl
push
mov
sti
mov
mov
add
add
inc
cmpl
notb
sarl
shlb
clc
inc
or
in
icebp
inc
cmp
aaa
push
cmp
jbe
mov
add
or
mov
adc
sub
dec
mov
jge
insb
add
out
jmp
push
shlb
xor
and
xor
and
jae
add
js
mov
mov
mov
mov
fistl
sbb
es
xchg
push
shl
hlt
dec
mov
mov
jg
rcrb
test
test
inc
enter
out
insl
in
rorl
mov
in
lods
push
push
push
inc
shlb
loopne
and
sbb
sbb
pop
mov
ljmp
jge
pusha
dec
dec
loope
test
mov
xlat
xchg
dec
das
mov
jmp
loopne
test
lahf
aaa
lds
push
pop
push
les
lcall
insl
cmpsl
gs
xor
and
inc
add
loop
add
mov
cli
fldl
and
and
jne
in
dec
add
ja
mov
cmp
push
lods
or
mov
mov
pop
pop
into
inc
loope
bound
pop
xchg
repnz
sti
inc
leave
dec
lahf
jne
pushf
mov
jnp
sbb
sbb
push
shll
jb
sub
into
xor
pushf
jb
adc
out
cmp
dec
pop
jae
and
std
mov
mov
lods
mov
decb
lea
push
xor
into
jmp
andb
sub
mov
mov
mull
scas
mov
test
cmp
hlt
push
hlt
dec
inc
ds
push
push
nop
cli
data16
ja
xchg
loope
lods
inc
out
pop
imul
scas
sbb
mov
pop
mov
jge
mov
hlt
lea
lea
jle
adc
stc
out
sarb
outsl
mov
dec
aas
fnsave
xchg
sub
mov
pop
sbb
ret
xchg
push
sub
push
fnstenv
lea
jne
ja
and
xchg
scas
dec
fdivrs
mov
js
addr16
out
and
or
in
cmp
iret
push
fs
test
sbb
incb
shlb
mov
xorl
imul
cmc
lret
jno
and
hlt
and
or
inc
inc
pushf
sbb
in
jbe
sbb
notb
imul
xchg
std
dec
xchg
in
pop
dec
pusha
stc
popa
stos
ret
pusha
add
dec
xchg
xor
dec
mov
lock
movsb
push
pop
and
les
ja
pop
pop
xchg
xorl
shlb
jg
push
int
xchg
outsl
xchg
addl
jo
ljmp
mov
outsb
jg
shl
repz
cmp
mov
shlb
lea
cmp
and
pop
or
adc
xor
lods
fnstenv
mov
and
lods
movsl
mov
sbb
lret
mov
xor
pop
xchg
adc
in
in
jns
ds
popf
movsl
jl
pop
push
adc
je
cltd
jg
movsl
bound
sub
popf
idivb
adc
imul
call
leave
psllw
sbb
mov
mov
cmp
test
sar
clc
cmc
xor
sub
insl
xchg
iret
xchg
xchg
xor
rorl
lret
aas
inc
sbb
inc
fildll
mov
bnd
or
insl
popa
gs
bound
inc
cmpsl
push
mov
imul
lods
pop
adc
aas
int3
popa
mov
or
or
hlt
dec
pop
lret
xor
and
aaa
sbb
mov
jno
sbb
movsl
pop
sub
cmpb
ret
cmp
jne
sub
push
xor
sbb
out
insl
pop
stc
pusha
inc
sub
sti
and
ss
fisubl
xchg
mov
mov
pusha
pop
in
dec
mov
outsl
jge
mov
sarl
sub
pusha
dec
jecxz
sbb
mov
icebp
pop
pop
sbb
mov
lods
leave
and
jmp
aam
fs
cli
jb
xchg
push
push
mov
mov
movsb
pop
adc
sub
call
dec
and
mov
nop
sbb
dec
sub
mov
cmp
jmp
pop
inc
stos
sbb
fbld
cltd
shrb
sbb
adc
mov
aam
int
inc
add
mov
and
adc
dec
ret
jl
xor
inc
cli
int
lret
jb
sub
mull
repz
out
pushf
mov
jns
addl
or
or
sbbl
or
inc
sbb
xor
stc
inc
add
cs
pop
or
mov
lock
jecxz
dec
sahf
test
add
arpl
adc
mov
repz
mov
lret
pop
mov
js
nop
imul
cmp
aaa
cltd
dec
pop
xor
adc
and
jle
or
cld
inc
push
das
decl
xchg
and
cwtl
out
or
pushf
jb
xor
and
jp
ret
sbb
xchg
or
outsb
xor
lahf
push
imul
jecxz
mov
pop
data16
push
sbb
inc
and
sbb
lods
adc
xor
mov
out
push
jae
popa
sarl
ds
inc
roll
cli
jnp
jg
mov
aaa
into
rcrb
push
and
ds
sbb
xor
add
adc
dec
add
dec
loopne
add
inc
sahf
nop
mov
sbb
arpl
push
test
sbbb
test
ds
es
std
jnp
pushf
pop
mov
cmpsl
movsb
mov
fs
mov
add
iret
lock
leave
or
roll
fistl
lds
ss
cli
mov
cli
pop
in
outsl
dec
pop
stos
jns,pn
cmp
das
xchg
mov
and
insb
cli
mov
movsb
sbb
mov
outsb
push
scas
jl
mov
icebp
addb
cwtl
icebp
rolb
pusha
shlb
mov
lahf
jmp
mov
notl
out
ljmp
xchg
call
je
fisubrs
cmp
addr16
mov
jb
cmpsb
mov
sub
fsubrs
and
mov
jecxz
out
clc
aad
adc
adc
inc
bound
mov
outsl
lds
incb
jbe
inc
sbb
adc
mov
scas
insb
or
xchg
pop
mov
lret
arpl
push
adc
xor
sub
dec
ljmp
scas
and
or
out
or
ss
lahf
jle
pop
push
sahf
pop
pop
add
lods
imul
int3
inc
or
lahf
mov
fimull
imul
loopne
test
arpl
cld
mov
mov
cld
scas
sub
pop
xchg
or
adc
mov
out
outsb
adc
icebp
push
cs
push
ljmp
cmp
roll
adc
repz
sbb
dec
loop
arpl
push
bound
into
xor
push
rclb
int3
mov
repz
inc
iret
out
xor
cmp
add
push
sahf
push
push
sbb
xor
cmc
and
cmpsb
les
sbb
sub
adc
fwait
dec
jmp
arpl
fnstsw
sub
or
aad
push
int
hlt
mov
inc
mov
push
mov
in
xchg
outsb
cmp
ss
jmp
jmp
movsl
inc
jle
mov
inc
stos
add
mov
xor
ds
es
inc
mov
cld
outsb
ljmp
aaa
ljmp
jno
ss
xor
inc
clc
iret
jbe
xchg
rolb
sarl
imul
rolb
aas
jl
inc
in
push
scas
push
dec
pusha
lds
les
inc
jle
push
idivb
or
dec
cmpsl
ss
into
mov
push
movsl
int
lcall
repnz
clc
bswap
push
sub
aam
jbe
xor
push
popf
sbb
nop
adcb
mov
imul
fidivl
mov
decb
push
pop
fcompl
xchg
cmpsb
sub
inc
push
mov
xchg
xchg
jmp
cmp
xorb
inc
ficoml
push
cmp
adc
pop
rcll
cwtl
adc
repz
push
mov
fs
lahf
in
stos
cld
jmp
inc
mov
lods
mov
inc
add
mov
pop
dec
adc
jle
dec
or
jmp
clc
mov
int3
lcall
mov
loopne
jbe
lret
xlat
sub
pop
mov
jmp
scas
xlat
sbb
mov
jb
and
push
xchg
scas
outsb
xchg
test
bound
sub
mov
test
lahf
and
or
cmpsl
pop
mov
mov
xlat
bound
jnp
out
mov
inc
push
in
pushf
lods
jp
test
adc
pop
insl
fildll
fisubrl
mov
scas
clc
cmp
arpl
decl
xor
sbb
cli
mov
xlat
and
movsl
jo
hlt
mov
and
scas
xor
andb
push
pop
out
rep
push
scas
xor
rorb
xor
adcl
xchg
icebp
mov
rol
enter
test
repz
out
jne
add
push
mov
sbb
fstpt
and
js
mov
movsb
sarb
subl
out
bound
mov
and
pop
stos
ret
arpl
xchg
hlt
cmp
ret
add
test
add
mov
shrl
test
dec
notl
lods
and
and
mov
int
cmp
adc
test
imul
negb
mov
mov
repz
fildl
fstpt
pusha
outsb
cmpsb
inc
ljmp
stos
mov
movsb
xchg
addb
popf
gs
das
mov
enter
lcall
inc
xchg
push
inc
jo
inc
xor
fcoml
test
push
fimuls
and
xor
xor
pop
xor
jge
fbstp
popa
jne
cmp
xchg
stc
pop
popf
repnz
and
aas
scas
xchg
pop
pop
mov
pop
push
cmp
test
add
not
add
popa
mov
pop
pop
xchg
or
fisubs
xchg
sub
sbb
bound
sub
mov
xlat
je
int3
xchg
add
xchg
sbb
in
push
in
mov
daa
mov
in
inc
sti
push
clc
in
hlt
iret
popf
pop
stos
sbb
and
sub
outsl
adc
inc
mov
mov
xor
mov
fadds
into
jns
xor
and
movsb
xor
and
out
loope
jle
sbb
sbb
mov
push
xchg
rorl
lods
dec
incl
les
or
loopne
test
pop
out
cmp
jl
inc
mov
xor
fcomps
sti
aas
loop
gs
sbb
sar
bound
xor
jns
cwtl
fldl
add
dec
inc
lods
in
dec
jnp
mov
imul
jb
pop
int
xchg
dec
ja
mov
adc
insl
fdivrs
inc
nop
jnp
bound
loope
push
mov
inc
pop
sub
inc
ss
xchg
out
dec
inc
adc
push
jmp
mov
ljmp
fstpl
fldcw
inc
or
xchg
test
pop
or
adc
jle
stc
add
roll
lds
es
or
hlt
sbb
add
jb
sub
arpl
pop
push
and
iret
cmp
mov
out
pop
and
sub
imul
inc
inc
pop
in
scas
jp
js
call
fisttpl
mov
dec
pop
xor
mov
jp
mov
cli
stos
mov
and
ds
pushf
dec
mov
scas
mov
lcall
ja
sbb
stc
dec
clc
sbb
aad
imul
jp
mulps
xor
or
mov
jle
mov
cmp
sbb
inc
pop
jo
stos
and
flds
insb
ds
push
push
aam
leave
loopne
mov
pop
adc
movsl
enter
jg
repnz
imul
push
mov
fmuls
aas
jb
xchg
test
push
adc
sbbb
add
jmp
cmp
xor
xchg
pop
add
fwait
test
mov
inc
rcl
push
imul
bound
std
mov
mov
imul
stos
sub
data16
xor
int3
mov
inc
jnp
pop
inc
stos
xchg
sbb
arpl
nop
mov
sbb
push
sub
sbb
loope
out
or
mov
adc
push
lods
sar
adc
les
lahf
lret
xor
sub
iret
inc
scas
xchg
aam
jns
pop
lods
or
xor
adc
inc
jae
jecxz
pusha
jo
sarb
jl
mov
sub
out
sbb
adcb
xorl
jb
xlat
inc
loopne
xchg
cmpb
mov
rclb
shrl
mov
inc
sti
loop
inc
sbb
outsl
pop
ret
inc
orl
insl
out
ficomps
mov
mov
std
loopne
xchg
call
pushf
loope
sub
sbb
sarb
flds
mov
and
pushf
xchg
stos
mov
jle
enter
and
lods
push
xchg
sub
adc
js
jo
xchg
mov
cmp
outsl
jg
xchg
xor
xor
mov
shll
ds
cli
and
and
cmp
aad
sarb
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
xchg
xchg
arpl
cmp
xor
dec
sub
jle
push
push
lretw
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
aam
inc
xchg
aam
notb
inc
lahf
push
and
inc
orl
inc
test
daa
sti
jne
jl
or
push
daa
mov
mov
push
dec
xor
cmp
fnsave
add
mov
jae
rcll
ret
mov
inc
ret
imul
aaa
adc
xchg
scas
into
mov
subl
in
inc
mov
sbb
sub
mov
in
mov
les
sahf
dec
sbb
imul
inc
xchg
mov
adc
mov
mov
inc
push
push
ja
sbb
mov
hlt
push
adc
cmp
pusha
icebp
cmp
lret
cmp
xor
adc
test
xchg
pusha
icebp
cmp
leave
cmp
push
cmp
hlt
push
xchg
pusha
lret
cmp
pusha
mov
mov
hlt
push
adc
cmp
icebp
jnp
jle
push
adc
cmp
pusha
lock
lret
xchg
pusha
icebp
cmp
lret
xor
hlt
push
push
add
sub
pusha
icebp
sub
lret
cmp
pusha
icebp
cmp
lret
cmp
insb
icebp
bound
insl
lret
insl
jbe
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
fisttps
push
orb
lretw
mov
pusha
loope
mov
xchg
or
iretw
cmp
and
hlt
push
adc
cmp
pusha
adc
adc
cmp
xchg
pusha
icebp
sti
mov
lretw
push
dec
xchg
pusha
icebp
cmp
lret
cmp
pusha
icebp
fistpl
add
pusha
icebp
cmp
lret
cmp
xchg
pusha
icebp
cmp
lret
cmp
and
cmp
push
adc
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
cmp
pusha
icebp
cmp
lret
pop
dec
xchg
jo
cmp
sub
sub
pop
push
mov
js
push
loopne
js
push
scas
mov
mov
hlt
pop
icebp
xchg
out
aad
pushf
fmuls
scas
rorl
out
dec
das
mov
pop
leave
js
xor
push
cli
arpl
popa
lea
pop
pop
mov
testl
mov
sub
and
jno
xlat
add
sbb
sbb
pop
test
iret
addr16
cltd
xor
or
xchg
sbb
push
out
xor
mov
xchg
cmpsl
lea
cmp
jl
sbb
inc
aam
loop
push
xchg
dec
mov
push
inc
out
out
push
out
push
push
push
xchg
in
fstl
popf
cld
xchg
sub
mov
mov
mov
add
adc
leave
mov
fwait
cli
mov
mov
js
jmp
lahf
sub
mov
jp
push
gs
movsl
mov
lcall
nop
outsb
lock
push
sub
bound
sahf
or
hlt
pop
stos
pop
mov
arpl
inc
add
ret
xor
js
xchg
mov
bnd
testb
dec
jns
inc
fisubs
fnsave
cmpsb
cmp
in
adc
das
arpl
lret
adc
xlat
shl
sub
push
call
inc
mov
fidivs
call
pushf
and
int3
jb
aad
cmp
or
jns
movsb
ds
movsl
or
pop
inc
pusha
testl
cmpsl
arpl
xor
in
push
jne
scas
leave
loope
mov
jbe
out
ror
adc
inc
icebp
out
pop
sub
addr16
int3
das
adc
test
mov
xorl
inc
insl
adc
cli
loope
dec
int3
cld
sub
jno
test
scas
xor
inc
popf
inc
fwait
aam
cwtl
enter
adc
test
or
negl
xor
jmp
fstpl
mov
sbb
cmp
pop
sti
adc
and
mov
mov
das
cmp
std
rolb
clc
and
sahf
cli
or
mov
mov
adc
xor
pop
insl
or
int
push
test
xchg
adc
and
lret
jno
rorb
test
pop
lock
dec
add
imul
cwtl
sbb
xchg
stc
popa
inc
jne
pushl
xchg
inc
xchg
add
mov
in
push
popa
sbb
stc
or
outsl
pop
and
imul
data16
adc
jns
cmpsb
add
pop
push
or
iret
jecxz
negb
and
sbb
aaa
int3
fcomp
bound
mov
mov
ja
popf
fisttpl
push
and
xchg
hlt
fdivrs
push
jg
jns
pop
add
jnp
lcall
adc
popf
inc
out
mov
decl
cltd
std
inc
cmpsb
dec
arpl
int3
and
mov
or
stc
shrb
xor
inc
nop
cli
or
mov
inc
cmp
mov
pop
test
shll
xlat
and
je
xor
loope
pusha
fisubl
add
rolb
mov
sub
xchg
xor
int3
pop
lds
outsl
or
push
jge
xor
sbb
mov
je
scas
cli
cs
clc
xchg
mov
dec
sub
or
mov
cltd
sub
leave
movsb
jns
sub
cli
les
lods
rolb
in
pop
cmp
or
aas
outsb
jns
add
push
flds
insb
and
in
shlb
js
cmpsb
adcl
add
push
insb
push
sub
mov
add
push
xchg
jg
mov
mov
xchg
inc
hlt
mov
hlt
shl
sahf
stc
push
sti
add
push
iret
or
imul
lret
pop
cmp
jecxz
fcoms
test
adc
pop
push
or
outsl
sbb
hlt
jae
pop
xchg
ljmp
mov
pop
cmp
in
pop
out
stc
or
sbb
mov
pop
jp
and
lcall
mov
sub
dec
stos
push
repnz
aas
xchg
cli
ret
sbb
stos
rcrb
faddl
lret
cli
push
int3
pop
cwtl
jmp
or
pop
repnz
in
cmc
xchg
cmp
add
push
xor
push
jno
and
push
into
mov
and
stos
lret
cltd
int3
in
adcb
cmp
andl
test
lods
xor
and
nop
push
in
fistl
xlat
xchg
jmp
push
je
loope
jae
mov
int
fdivl
sub
pop
add
inc
cmp
mov
push
lock
fcomps
movsb
jno
dec
mov
test
dec
jne
jecxz
aam
xor
jecxz
hlt
mov
dec
aam
jmp
xchg
sahf
std
sbb
xchg
pop
icebp
sbb
loope
addr16
clc
mov
xchg
ss
push
call
lret
aaa
push
lahf
cmp
shr
scas
test
push
cli
subl
push
clc
mov
mov
mov
or
jl
and
xchg
pop
rorb
lahf
movsb
out
push
push
add
and
test
push
xchg
mov
loopne
fwait
cwtl
dec
jns
push
mov
in
test
xchg
call
jae
clc
stos
mov
push
xor
lahf
dec
sbb
pop
xchg
dec
cmc
nop
loope
arpl
cmp
imul
data16
cmpsl
mov
les
inc
ja
pop
pop
pop
mov
aam
inc
inc
cltd
mov
mov
rcr
in
cli
iret
movsb
pop
cli
ds
test
pop
outsl
es
jno
and
cmp
es
lods
std
aaa
xor
bound
jle
dec
jl
xchg
adc
bound
pop
jecxz
sub
aas
and
out
mov
xchg
loopne
jle
xchg
mov
mov
movsb
mov
add
les
shll
in
pop
mov
lods
mov
mov
inc
test
adc
and
dec
lock
pop
cltd
rorb
or
cmpl
dec
jo
mov
int3
scas
jne
clc
add
mov
ds
cmp
pop
fwait
jmp
popa
or
push
mov
inc
scas
repz
push
or
sub
adcb
xchg
mov
pop
imul
xor
sbb
mov
push
in
xchg
mov
jle
in
cmp
cmp
xlat
sbb
test
jne
inc
mov
sbb
sbb
int
jno
shl
imul
shl
sbb
mov
sub
xchg
or
jne
jne
cmpsb
scas
adc
ficomps
and
sbb
std
out
mov
push
sbb
hlt
ret
xlat
or
stos
push
in
nop
rolb
movsb
mov
js
dec
lahf
insl
je
dec
push
mov
mov
mov
fs
popf
add
xor
adc
mov
mov
scas
push
xchg
addr16
sbb
and
xor
jno
shrb
mov
imul
cwtl
push
dec
loop
xchg
dec
jb
sbb
add
insl
mov
mov
fnstcw
sar
popa
fdivrp
adc
pusha
add
dec
jp
push
into
add
scas
out
mov
out
cmpl
outsl
adc
fmull
dec
push
mov
int3
ds
cli
je
insl
adc
inc
ljmp
xchg
leave
clc
pop
aaa
sbb
mov
icebp
adc
mov
sub
ds
ljmp
imul
cli
and
ds
pop
push
sahf
loop
loopne
pop
call
pop
jb
add
cmp
adc
lods
inc
and
negl
imul
jae
imul
arpl
aas
mov
mov
pop
mov
mov
push
call
pop
xchg
cwtl
xor
add
or
jae
pop
mov
sbb
inc
cli
pop
iret
xor
lret
dec
jae
movsl
jg
addr16
sbb
jle
nop
cld
fistpl
pextrw
cmp
decb
lcall
mov
rorb
aas
lods
inc
jbe
cmp
loopne
adcb
dec
lret
mov
or
xchg
xor
loope
ret
add
mov
scas
lock
pusha
out
mov
push
addr16
and
push
add
enter
xchg
negl
jae
aad
sbb
pop
popf
dec
mov
cli
cmp
into
inc
or
sbb
cmp
inc
int
cwtl
movsb
shlb
cmp
cmpsb
jno
and
repz
cs
inc
dec
out
push
rorb
pop
and
shlb
lcall
leave
inc
loopne
gs
xor
jecxz
push
ljmp
sbb
sti
pop
sti
mov
or
or
mov
leave
cmp
mov
lret
jo
xchg
test
cwtl
popa
jmp
mov
inc
jb
rol
adc
sub
int3
pop
sahf
mov
cmp
jns
mov
int3
add
cmp
ficoml
daa
hlt
push
or
mov
cs
ljmp
ja
arpl
iret
inc
sbb
xchg
push
lds
or
mov
test
and
and
pop
iret
xchg
es
pop
mov
cld
add
les
imul
ds
fmull
adc
call
ja
nop
mov
or
ret
mov
negb
push
out
lds
jno
jmp
fld
adc
les
jnp
and
outsb
aas
idivl
add
xchg
adc
inc
lahf
lock
loopne
out
cmpsb
aam
in
into
mov
int
and
jle
out
jl
cli
std
jb
aas
sti
inc
sbb
sbb
clc
sbb
sub
int3
decl
je
stc
mov
fisubs
adc
call
gs
jbe
push
mov
fs
aas
jo
inc
xchg
outsl
mov
js
out
ljmp
lods
adc
mull
cmp
pop
out
xor
cs
cmp
mov
add
repnz
mov
paddw
out
dec
and
cmpl
stos
js
in
adc
lods
inc
cli
cmp
lods
sbb
inc
mov
ds
or
xchg
addr16
push
xchg
sbbl
cmc
aas
repz
xchg
into
push
or
xor
pop
inc
ret
addr16
push
or
add
push
xchg
fistps
out
movsb
les
push
lret
or
cld
setns
lcall
xchg
push
fildll
sbb
mov
out
mov
loopne
jnp
and
sbb
or
mov
pop
aas
ljmp
addl
aaa
dec
idivb
adc
inc
mov
scas
adc
push
stos
cmpsb
adc
in
mov
sar
mov
jge
xchg
arpl
push
pop
testl
scas
std
mov
pop
sub
lahf
cltd
test
jae
mov
xor
dec
xor
jecxz
femms
aaa
mov
lods
adc
lcall
push
int
xor
push
jecxz
imul
sbb
and
into
sub
sarl
or
dec
mov
daa
pop
mov
cli
push
mov
arpl
int
mov
pop
sarb
movsl
repnz
inc
mov
sbb
mov
out
dec
sbb
test
outsb
fwait
scas
xchg
outsl
adc
xchg
or
or
add
repz
and
push
xchg
insb
out
imulb
roll
pop
inc
mov
mov
pop
mov
push
pop
push
sub
ja
repnz
nop
das
movsb
or
xor
or
movsb
push
scas
lds
xchg
and
mov
xchg
dec
sbb
into
lcall
in
mov
add
sbb
mov
sbb
mov
data16
pop
icebp
pop
mov
pop
mov
mov
pop
sbb
ret
xlat
jg
and
xchg
xchg
mov
test
scas
cmpsb
pop
hlt
lds
icebp
aaa
out
je
push
mov
sbb
std
cwtl
sbb
push
sbb
out
lahf
imul
jb
enter
jno
pop
xchg
mov
cmp
lds
call
xchg
aaa
mov
pop
lods
mov
nop
in
mov
cld
mov
repnz
imul
inc
xor
subl
sub
shr
adc
push
lods
pop
mov
lcall
or
xchg
dec
or
into
repnz
mov
data16
gs
mov
fs
mov
mov
lds
js
cmc
or
jnp
inc
inc
sbb
das
mov
data16
movsb
cs
mov
stc
pop
aaa
cltd
xor
popa
mov
xchg
enter
mov
cld
stos
adc
test
loope
ja
ret
dec
lock
outsb
cmpsl
sbbb
sub
lret
xor
repz
cltd
imul
or
in
ret
fs
cltd
lcall
xor
xchg
in
pop
inc
add
insl
lods
cmpsl
pop
or
insb
inc
cmp
jmp
and
mov
test
pusha
mov
mov
inc
or
add
mov
mov
adc
mov
ja
mov
test
adc
lret
call
scas
aam
mov
adc
jae
cli
lcall
nop
add
lods
jmp
push
adc
push
mov
xor
out
push
mov
push
push
lret
mov
outsb
jne
js
aad
pushl
and
addl
adc
jg
test
inc
in
xor
hlt
std
mov
xchg
jnp
mov
cmc
dec
push
jg
data16
movsb
sti
dec
fisubs
lods
push
mov
inc
pop
aaa
mov
aam
into
jecxz
inc
adcl
ljmp
shrl
pop
push
add
pop
sub
mov
xor
loop
jbe
subl
add
insl
test
mov
cmp
add
inc
jmp
pop
in
xchg
cltd
inc
fsubs
dec
repnz
cmpsl
mov
jne
mov
pop
push
aam
xchg
adc
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
