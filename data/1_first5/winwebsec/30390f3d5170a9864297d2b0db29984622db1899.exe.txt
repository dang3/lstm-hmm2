push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
notrack
mov
testb
cli
stos
pop
lret
xchg
ljmp
or
push
stos
outsb
ljmp
movb
xor
call
addr16
roll
mov
mov
sar
scas
mov
dec
mov
insl
sub
loopne
push
pop
pop
sti
jle
call
aaa
and
xchg
movsb
sahf
xchg
stos
or
sbb
inc
out
inc
arpl
pop
into
xlat
imul
push
xlat
dec
ds
arpl
in
outsb
pop
xchg
mov
test
mov
jle
dec
ret
xchg
or
xor
fidivs
mov
repnz
cmp
jae
shl
push
icebp
dec
jmp
loope
inc
cmp
fldcw
fs
sahf
pop
ficomps
cmp
or
aam
xchg
cwtl
out
dec
ds
outsl
lret
or
lock
mov
dec
idivb
vandnps
dec
inc
jge
adc
dec
cltd
mov
cmpsb
xchg
dec
lahf
rcll
pop
cmp
lock
out
mov
add
jmp
add
mov
aas
insb
cmp
pop
sub
adc
pop
cli
adc
movsl
int
lds
ret
cmp
sub
iret
scas
mov
fldln2
bound
nop
add
xlat
mov
shl
inc
mov
ljmp
pop
insb
adc
jo
dec
xchg
subb
mov
push
fcompl
jnp
lock
mov
pop
movl
inc
cld
add
out
or
adc
out
iret
mov
das
mov
fbld
ret
pushf
loope
mov
imul
shl
fadd
cli
adc
push
xchg
clc
pop
dec
fmuls
push
or
mov
lret
jg
scas
std
mov
mov
mov
insl
adc
clc
cmp
mov
cmp
out
std
mov
xlat
mov
dec
loopne
xchg
cmpsb
scas
insl
into
xlat
aad
push
jle
scas
sahf
aam
and
filds
adc
xchg
jle
xchg
jno
inc
add
adc
stc
xlat
xor
mov
repz
push
ljmp
xchg
pusha
push
adc
adc
push
xchg
jmp
cmp
adc
mov
dec
mov
sub
mov
push
xor
inc
push
call
icebp
loope
ljmp
out
outsb
stos
fcompl
cs
mov
in
loope
cmp
sub
fidivl
neg
addb
xchg
sub
xchg
sbb
rorb
sbb
push
or
lods
mov
xor
inc
inc
mov
addr16
sbb
ret
cmp
pop
adc
test
pop
jo
into
jg
fs
int3
lea
shl
mov
shlb
push
out
and
test
xchg
ror
test
rcl
sub
or
inc
xchg
mov
imul
jmp
lds
rcr
test
stos
fisubl
rorl
xlat
sbb
test
filds
fnsave
cld
xor
cs
and
adc
xor
repnz
shl
out
and
mov
mov
adc
fstps
stos
pop
out
push
mov
test
loope
aad
cltd
je
aaa
aaa
cltd
mov
out
addr16
xchg
ds
aam
fiadds
xor
add
jl
enter
or
imul
movq
dec
scas
pop
das
fsubrs
xchg
hlt
fs
and
xlat
fmuls
xchg
mov
repz
mov
push
aaa
push
push
sbbl
lcall
movsb
add
adc
mov
mov
mov
mov
fsubrl
scas
xor
xchg
dec
pop
testl
nop
andb
add
iret
jmp
sbb
fistl
push
sbb
mov
jae
gs
js
aad
jb
nop
push
or
jmp
ficoml
addr16
sarl
dec
mov
lahf
jne
insl
fs
repnz
jge
out
in
inc
or
jp
pop
push
and
lahf
xchg
test
iret
cltd
and
iret
xchg
inc
popa
xchg
mov
ss
push
gs
scas
les
pop
add
xchg
cltd
push
sbbl
or
inc
sar
in
or
jmp
push
test
mov
mov
jae
mov
idivb
xchg
jno
xchg
mov
adc
sbb
repz
sub
mov
je
imul
add
and
sahf
pop
sbb
jae
test
adc
xlat
test
ljmp
push
notl
push
xor
enter
jns
insb
scas
into
push
pop
or
fnstenv
push
xchg
ret
fs
adc
pop
or
pop
mov
pusha
push
xchg
cmp
insl
out
movsb
and
xorl
loopne
cmp
imul
jne
jo
divl
mov
imul
push
xchg
into
mov
imul
mov
inc
jne
push
inc
test
cld
or
push
mov
lds
ds
fisubs
mov
adc
mov
lods
jno
sbb
cmp
add
or
fsubs
xchg
sub
ljmp
bound
inc
icebp
add
adc
xlat
inc
les
call
jno
dec
out
mov
repz
fldl
jecxz
push
fcmovnbe
pop
imul
jl
xchg
daa
andl
fdivl
mov
addr16
add
in
cli
jecxz
or
int3
or
jp
call
jnp
pop
iret
out
sub
cltd
adc
xorb
out
cltd
mov
xlat
xchg
jecxz
std
movsb
push
cli
add
scas
add
cmp
xor
add
leave
xor
or
push
dec
push
adcl
push
aad
js
int
add
adc
aad
and
sub
testb
rcrl
pushw
inc
inc
pop
xor
rcrl
sahf
mov
into
inc
add
mov
xchg
pop
rep
push
xor
cmpsb
jg
pop
inc
inc
lahf
outsl
xchg
lods
mov
shrb
dec
xchg
cmp
pushf
fdivs
sti
cmpsl
in
sbb
cmp
push
mov
jg
sub
dec
jecxz
xchg
jnp
cltd
gs
dec
lret
xor
cmpsl
xchg
mov
test
mov
lahf
in
xchg
jp
ret
lret
adc
xchg
std
pop
xchg
sub
jmp
cmp
add
pcmpeqb
cmpsb
out
mov
ficomps
mov
jne
repz
mov
jns
add
pop
jbe
add
iret
push
das
sbb
pushl
fbld
dec
mov
stos
sbbl
into
mov
aam
jp
sarl
inc
sbb
push
sub
insl
add
sysenter
std
mov
es
pop
mov
jb
add
int3
in
xor
mov
clc
lds
adc
stc
or
inc
mov
cmc
adc
xor
adc
js
lret
add
daa
das
pop
xchg
sbb
mov
sbb
xchg
dec
rclb
clc
loope
sub
inc
cmp
test
into
icebp
mov
xchg
repnz
jge
adc
cli
data16
faddp
dec
fadds
cmp
sub
push
sub
inc
pop
pop
mov
inc
ljmp
fwait
mov
mov
sbb
scas
pop
ljmp
jp
mov
enter
push
int3
dec
fs
push
pop
psubb
out
insl
inc
fwait
addr16
add
dec
mov
std
std
das
js
lods
xor
inc
sbb
dec
mov
enter
lods
dec
les
aad
inc
ror
sti
icebp
adc
push
movsb
cmp
sub
xor
insb
fs
insb
inc
cmp
fisubrl
fsub
stos
addb
and
into
cltd
pop
mov
or
outsl
add
mov
add
pop
mov
cmpl
cmc
enter
sbb
loopne
mov
xor
mov
xor
pop
push
adc
fs
sub
xchg
mov
push
sub
fsubrs
xchg
ret
test
mov
xor
test
mov
enter
and
cmpsb
dec
ljmp
stos
jge
ret
or
push
insl
cmpsl
cmp
std
pop
fistpl
dec
dec
mov
inc
add
xchg
jp
out
stos
imul
lret
dec
jae
jno
rolb
clc
cmpsb
gs
add
xlat
addb
jno
push
push
mov
outsb
cmp
data16
sahf
les
pop
xchg
out
decl
add
xlat
adc
sahf
cwtl
cli
scas
loopne
xchg
mov
push
push
adc
mov
orl
xor
pop
dec
cmp
mov
pop
aaa
push
and
clc
pop
push
or
xor
call
xchg
push
jae
inc
lds
xchg
sbb
enter
jne
mov
cmp
push
sub
out
adcb
push
in
in
dec
or
data16
adc
insl
scas
stc
in
ss
jb
xlat
push
outsl
roll
or
test
out
xchg
outsl
sbb
jl
sub
test
dec
mov
sbb
arpl
jb
test
jg
ss
mov
or
enter
mov
xchg
cwtl
mov
rcrl
std
cmp
test
cli
insb
out
and
cmp
xchg
out
aas
dec
rep
jns
repz
clc
cld
dec
test
cwtl
clc
xchg
loope
mov
and
sub
rcl
pop
nop
mov
push
jmp
dec
shll
adcb
jbe
xchg
and
inc
clc
xor
xor
call
imul
xor
and
shll
jb
sub
das
push
enter
and
lcall
dec
jecxz
or
pop
pop
cmp
adc
mov
imul
leave
pop
outsb
inc
or
data16
and
add
and
jle
mov
ficomps
dec
stos
cmp
mov
es
faddl
add
test
push
push
je
and
add
mov
aas
push
lcall
inc
xor
fldenv
pop
jecxz
pop
dec
add
or
imul
repz
mov
scas
fldt
cltd
cmp
shrl
ss
adc
or
xchg
add
or
imul
pop
insb
lcall
pop
dec
scas
inc
nop
jo
bound
int3
sub
stos
cli
ss
ficompl
adc
ljmp
fimull
mov
or
sti
enter
outsb
add
cmp
add
mov
mov
push
cltd
lds
test
iret
xchg
add
sahf
jl
loope
mov
or
out
jmp
adc
add
push
add
sarb
cmpsb
pop
xor
push
nop
cs
clc
movsb
hlt
cmp
je
cmp
xor
icebp
or
inc
into
cmpsl
mov
push
mov
add
leave
in
movsb
stc
mov
repz
scas
fdivl
mov
ds
insl
sub
or
insl
inc
rolb
scas
mov
add
ds
mov
mov
dec
jo
add
scas
adc
cmp
push
sbb
stos
mov
das
and
mov
enter
clc
jo
jo
popa
aad
xchg
inc
data16
aas
cltd
push
push
bound
imul
mov
sub
cmovl
dec
push
adc
hlt
ret
mov
mov
pop
insl
leave
xor
xor
icebp
mov
lret
clc
or
popf
std
xchg
fidivs
xchg
cmp
outsb
arpl
push
push
push
test
push
or
lock
mov
push
push
aam
ja
gs
pop
inc
pop
subl
daa
out
imul
inc
jb
lret
call
rcrb
cmc
adc
outsl
xchg
xchg
xchg
or
inc
movb
rol
out
jmp
sarl
repz
lret
add
in
pop
leave
jg
and
popa
std
aad
or
mov
xchg
pop
aam
out
xor
ljmp
cmc
xor
push
or
xchg
push
inc
cmp
xchg
push
add
cmpsb
sbbb
inc
cwtl
sbb
sbb
pushf
ja
paddusw
adc
sti
ds
inc
shl
adc
fisubrs
cmp
jne
lret
jl
das
cmpl
test
jge
repnz
pop
pop
ljmp
addr16
push
sub
pop
and
dec
mov
ret
mov
das
ret
push
xor
or
mov
out
sahf
adc
js
mov
and
push
jb
dec
daa
rcll
push
jno
data16
and
or
xor
cmpsb
cmpsb
jae
xor
mov
je
iret
fs
je
pop
stos
in
bound
testb
cmpsl
aam
sub
lret
jge
scas
inc
xchg
cmpsl
mov
dec
sub
and
cltd
mov
xor
mov
mov
stos
pop
add
lds
sarl
ret
push
pop
mov
cmp
cmpsl
mov
mov
fdivrp
stc
sbb
cmp
and
mov
ret
rcrl
rep
nop
sbb
cmpsb
loop
sbb
cmpsb
add
ret
mov
pop
xlat
sub
rcll
ss
sbb
sub
xchg
fnsave
add
bound
sbb
and
movsl
test
mov
daa
xchg
dec
and
mov
clc
mov
je
je
inc
inc
mov
ret
lods
test
xchg
push
lea
or
inc
icebp
cmpsb
sub
repnz
daa
je
mov
jns
adc
dec
cmp
xlat
lret
cmp
je
jae
enter
pop
shr
xchg
call
pop
cmpl
jle
pop
hlt
cmp
loope
iret
ds
popf
int
cmp
pop
mov
xor
add
adc
xorl
out
int3
sti
insb
mov
insb
shll
and
add
push
fs
adc
jne
je
in
jmp
sahf
lock
xchg
or
add
dec
jmp
sbb
aas
imul
fisubrl
in
scas
pop
xor
jmp
lahf
fwait
add
push
ja
lods
mov
xor
movsl
dec
xchg
inc
or
outsl
lcall
cmp
sub
xchg
mov
adc
es
cmp
testl
aaa
xchg
into
inc
inc
jae
dec
jae
repnz
pop
dec
push
out
inc
fcom
jle
addr16
dec
jecxz
pop
lods
sti
imul
out
fisttpll
xchg
xchg
mov
jg
jmp
out
mov
xor
push
pop
lods
out
mov
shlb
lret
pop
stos
stc
jb
js
mov
sar
cmp
adc
sub
adcl
and
lock
pop
out
daa
aaa
daa
mov
fcomip
dec
mov
fstpt
fdivs
mov
repnz
cmp
std
push
cli
mov
lret
ret
sbb
dec
push
sub
cwtl
mov
sub
push
jl
in
mov
mov
xor
stos
xor
mov
xchg
lods
scas
shrb
inc
mov
lahf
cld
and
add
cmpsb
aas
ret
bound
gs
aam
mov
inc
and
lret
je
lods
sub
cmpl
jl
test
fnstcw
inc
pop
cld
dec
ret
test
pop
cmp
lret
lret
push
xchg
sub
into
dec
out
movsb
stc
ja
movsb
inc
xchg
aas
add
mov
not
movsl
scas
sub
in
xchg
icebp
rol
and
inc
ret
in
les
pop
and
jnp
std
rorl
in
jcxz
and
xchg
jecxz
xor
sbb
cmpsb
sub
mov
hlt
arpl
dec
ljmp
mov
dec
loopne
sbb
imul
adc
imul
ljmp
mov
mov
dec
pop
addr16
mov
xlat
xor
mov
std
mov
js
cmp
dec
sti
fdivl
mov
sbb
mov
adc
fidivrs
int3
push
xchg
data16
jp
imul
jl
inc
and
mov
scas
xor
push
bnd
cli
mov
imulb
and
pop
pushf
push
es
dec
dec
arpl
out
or
mov
dec
mov
insl
pop
cmc
inc
dec
xor
ss
cltd
jl
adc
adc
dec
dec
jg
fidivrl
outsb
lahf
loope
jecxz
mov
mov
lret
mov
lcall
push
sub
xor
ljmp
add
mov
outsb
dec
aas
mov
ljmp
stos
loop
imul
dec
mov
mov
jp
mov
data16
sbb
std
push
cmp
fisttpl
cs
shrl
sbb
and
rcll
mov
cmc
cmc
hlt
stos
cld
imul
nop
jne
loopne
adc
inc
or
aas
mov
les
xchg
not
push
adc
repz
push
insb
shlb
inc
jbe
adc
or
fisubl
popf
jns
and
mov
dec
dec
add
loop
outsl
icebp
cwtl
data16
pushf
push
aaa
nop
into
cmp
push
imul
call
leave
ds
and
pop
mov
popf
lret
mov
sahf
cmp
push
pusha
dec
xchg
bound
fldcw
sbb
into
mov
mov
mov
adc
xchg
or
lret
enter
rep
in
mov
int3
jae
and
dec
push
jl
xor
push
mov
test
in
xchg
push
jl
inc
pop
cli
ror
cwtl
cmp
mov
shll
mov
std
jno
push
sub
in
nop
lahf
lds
in
sub
in
ret
add
push
inc
aad
pushf
jmp
rorl
out
pop
mov
pop
fadd
ds
jle
test
lcall
in
pop
sub
in
pop
stos
dec
jp
sbb
mov
adc
inc
out
xchg
mov
and
adc
pop
sbb
push
add
sub
shrb
cwtl
fwait
mov
int
xchg
rol
push
add
jge
out
movsb
int3
sbb
test
sub
imul
cmpsl
cwtl
lods
loopne
testb
cltd
pop
sti
mov
inc
adc
and
pop
xchg
and
xor
and
cmp
sahf
pop
pop
sbb
cld
dec
daa
adc
mov
stc
push
dec
call
dec
sbb
movsl
jbe
fnstcw
ret
pushf
lock
cld
ja
aam
dec
sbb
mov
jae
push
push
cs
pushf
dec
adc
sub
insl
jno,pn
cmpsb
das
orl
xor
fistpl
push
loope
fs
sti
lahf
xchg
push
cli
fwait
mov
jecxz
cmp
cs
mov
inc
out
xchg
dec
push
iret
jns
outsl
or
test
cmpsl
inc
mov
jae
mov
adcb
mov
or
ljmp
cli
mov
bswap
cmpsb
dec
fldcw
adc
idivb
outsl
data16
mov
rcll
lods
out
loopne
inc
test
int
xor
cmp
ljmp
cs
int3
or
fcoms
cmp
cmpsl
sbb
jbe
aam
into
add
mov
and
sti
bound
aaa
pop
mov
test
rol
repz
xor
pusha
aad
jo
mov
sbb
mov
jmp
inc
iret
scas
and
lcall
fnstenv
push
movaps
popa
lods
jmp
fsubl
inc
pop
mov
fsubrs
xor
js
mov
loop
pusha
dec
cwtl
loope
push
xor
push
fsubrp
aaa
fstps
mov
flds
scas
mov
cmc
les
js
cs
clc
adc
add
insl
fsubrs
in
stos
ja
popfw
xor
jo
insb
mov
adc
out
loop
xor
dec
out
xchg
dec
std
add
rolb
clc
mov
xlat
aam
aad
add
dec
outsb
ret
mov
es
enter
adcb
popf
pusha
xchg
fnstenv
inc
pop
pop
cmp
pop
xlat
inc
push
es
mov
jae
push
addr16
mov
jge
fs
mov
inc
sub
pop
ds
push
adc
jno
lods
inc
mov
lods
sbb
jl
inc
addb
bound
push
popa
shll
in
cmp
cs
xchg
filds
and
xor
mov
shrl
pop
pop
jl
add
cli
nop
ds
fwait
jnp
and
in
int3
xor
mov
push
pop
push
leave
xchg
sahf
and
push
cmc
xor
ja
mov
nopl
lret
ss
adc
loop
das
in
and
js
ret
sbb
add
dec
subb
xchg
jle
mov
lret
ss
pop
mov
shll
dec
or
inc
imul
enter
addb
xchg
jbe
ret
hlt
mov
popf
jecxz
xchg
pop
jecxz
jg
call
xchg
xlat
mov
xor
fsts
mov
rorb
adc
sub
lea
test
subb
std
or
mov
pushf
int
loope
inc
xor
fists
ret
pop
fcoml
lcall
xor
arpl
inc
cmpsl
aaa
and
lock
imul
and
mov
iret
sub
push
sbb
sub
xor
push
cmp
lds
cmp
bound
data16
pop
xlat
stc
pop
mov
xor
push
movb
jmp
xchg
lahf
loopne
sub
sbb
icebp
adc
xlat
push
jmp
daa
push
cli
pop
ja
cwtl
pop
into
mov
push
mov
sbb
inc
mov
jno
in
lret
out
jle
icebp
mov
inc
movsl
shlb
xor
arpl
lods
inc
sbb
popl
imul
sahf
mov
pusha
jae
dec
out
mov
pop
incl
pop
dec
and
xorb
dec
stos
outsl
push
fdivs
fdivl
in
jbe
adc
syscall
sbb
and
and
scas
lea
adc
daa
ja
lret
mov
jns
pop
out
xchg
mov
cmp
push
clc
lea
lock
sub
sbb
xlat
sbb
mov
sub
in
aad
mov
add
jmp
inc
mov
aas
pop
push
or
sub
andb
mov
loop
inc
mov
sti
popa
sarb
add
jne
mov
addr16
pop
inc
mov
cmpsb
xor
in
addr16
aaa
stc
push
repnz
int3
pop
outsl
fcompp
adc
sbb
mov
je
cld
enter
cmp
hlt
xchg
bound
movb
in
leave
or
enter
mov
sbb
xchg
outsl
add
call
imul
push
test
jno,pt
cmc
jae
mov
sbb
cmp
jmp
cli
mov
dec
ret
fs
sar
enter
lods
push
movsb
mov
cmp
outsl
cmp
mov
cmovg
je
std
pop
movsl
out
inc
jp
sbb
pop
xchg
jg
sub
aas
xor
adc
jmp
push
xor
int
daa
sub
icebp
and
cmpsl
cltd
sub
jno
in
inc
ja
jl
add
mov
das
sbb
pop
xor
push
push
lahf
in
outsl
jg
fbld
idiv
push
add
add
push
hlt
sub
cmp
cmp
add
jbe
lods
jle
ss
aad
cmp
dec
stc
mov
mov
aas
dec
xor
aas
jg
xchg
aas
adc
push
jecxz
gs
and
into
shll
sub
testl
out
mov
mov
inc
mov
gs
mov
icebp
stc
mov
inc
xchg
add
inc
or
add
pop
cmp
cmp
loopne
aad
repz
daa
sarb
cli
test
ljmp
ficompl
addr16
hlt
xor
fcmovu
xor
test
mov
scas
cmp
divl
push
sub
jbe
and
cltd
xchg
rsm
rorb
cmp
ss
ja
outsl
rolb
das
mov
stos
cmp
add
movb
das
mov
push
push
incl
jne
dec
pop
test
mov
xchg
cltd
mov
cmp
jge
sbb
loope
test
xchg
lock
push
cmp
inc
test
outsl
pop
cmp
push
aas
xor
popa
or
push
jae
insb
adc
lret
inc
mov
push
jmp
mov
lods
adc
cwtl
xchg
fisttps
cmp
sbb
xorl
or
jmp
ljmp
out
push
cmp
packuswb
jmp
sub
out
and
cli
mov
insb
dec
fisubrl
cmpsb
faddl
out
lahf
or
repz
dec
call
xchg
leave
xchg
loop
jl
lret
lods
jl
aam
jle
sub
in
leave
cld
push
mov
popa
mov
mov
dec
addr16
cld
nop
stc
pop
mov
fisubrl
call
add
loop
sahf
add
mov
cmp
pop
xor
jno
sub
xchg
sbb
aaa
xor
lret
mov
jmp
cmp
dec
movsb
mov
adcb
out
and
push
sbb
sti
gs
jno
dec
out
mov
pop
adc
dec
xor
out
pop
test
cmp
popa
gs
lods
shrl
popf
test
gs
dec
rorl
and
sbb
mov
popf
push
xor
andb
mov
xor
add
jo
and
push
push
sub
out
xchg
cld
imull
cmpsl
lcall
adc
subl
out
adc
scas
popa
jl
sub
jb
inc
adc
outsl
pop
je
data16
lock
or
xchg
jb
sub
inc
out
add
das
jge,pn
negl
movsl
cli
add
ret
popa
hlt
std
push
pop
loopne
imul
aaa
mov
out
aas
push
pop
adc
push
je
mov
inc
subb
enter
bnd
sbb
xchg
xchg
cli
add
mov
dec
popa
fadd
pop
push
cld
jo
xor
int3
mov
xchg
fdivs
adc
lods
movsb
mov
and
clc
in
push
mov
xor
mov
in
iret
cmc
pop
lahf
sbb
lret
mov
shrb
call
outsb
add
stc
sbb
dec
and
sub
scas
rcll
xchg
mov
test
pop
or
addr16
xor
icebp
addl
fs
fsubrl
loopne
subl
sbb
sbb
and
dec
shrb
enter
cmp
and
jg
sbb
orb
mov
push
push
fcoms
fildll
sub
xchg
outsl
xchg
xor
roll
jmp
insl
test
aas
addl
mov
jmp
adc
daa
js
mov
in
push
out
into
pop
push
sub
cwtl
mulb
mov
push
mov
cld
aaa
pop
jae
pop
xorb
notl
mov
inc
xchg
shl
sbb
rcrb
jbe
das
popf
push
mov
nop
jo
pop
xchg
cs
arpl
js
fwait
or
jo
lods
lock
subb
sbb
mov
adc
cli
lea
sub
aas
mov
and
lahf
imulb
sbb
sahf
mov
data16
jp
or
xor
jecxz
popa
add
cmpb
lds
addr16
push
push
imul
dec
add
mov
mov
mov
fbld
mov
mov
jo
lret
fwait
dec
xor
xor
mov
stos
push
mov
sbb
xlat
jmp
popf
lahf
xchg
mov
or
es
sbb
xchg
std
cmp
add
out
sbb
push
repz
aam
fadd
mov
sub
xchg
xor
movsl
lea
movb
sahf
es
mov
cmp
and
lock
in
in
fcoml
cltd
in
test
in
sbb
jmp
cltd
scas
sub
sbb
mov
inc
and
cltd
call
xchg
decb
out
jo
dec
mov
dec
mov
adc
aaa
xor
jo
jle
lds
setp
ja,pn
lods
push
and
movsb
mov
inc
sub
mov
jp
rclb
add
sub
clc
mov
sbb
sbb
mov
dec
pushf
xor
aad
push
fwait
pop
std
adc
or
cwtl
in
imul
sbb
dec
aad
xor
clts
lret
mov
adc
or
insl
cltd
lret
push
or
in
stos
decl
shl
bound
inc
and
or
sbb
jg
adc
dec
mov
int
and
das
test
int
test
add
fisttpll
push
lret
addr16
repnz
mov
xor
or
or
jg
xchg
push
addb
lret
in
fadds
cwtl
sbb
testl
cmc
leave
lods
adc
push
pop
dec
out
stos
push
or
sbb
mov
sub
sbb
xchg
or
fists
leave
nop
lcall
pop
xor
jb
aad
movsb
jo
push
scas
lods
mov
adc
inc
add
rcrl
mov
push
xchg
dec
adc
and
xchg
fcoml
jge
mov
mov
xchg
mov
aaa
dec
xchg
adc
dec
mov
aad
mov
lods
rclb
mov
ror
pop
cmpsb
or
xor
xor
call
andb
daa
fcoms
xor
fcmovne
xchg
js
lahf
and
mov
jmp
lret
adc
out
push
loop
out
cmp
fwait
iret
ret
icebp
daa
mov
daa
xchg
ss
mov
cwtl
jle
push
cmpsl
ja
aam
dec
iret
dec
mov
xor
xchg
inc
ss
jae
mov
inc
pop
add
dec
sbb
aaa
jp
inc
lret
pop
aam
inc
ja
push
pop
addr16
or
cmpsb
push
movsb
jns
mov
push
pop
daa
pop
mov
add
sub
push
xor
call
rep
ja
pop
imul
mov
dec
pop
lds
add
outsl
inc
adc
sbb
dec
enter
leave
repz
call
into
out
inc
into
adc
jnp
mov
cmpsb
and
nop
jecxz
xor
mov
icebp
jnp
rcrb
arpl
mov
scas
movsw
sti
les
adc
inc
dec
bound
out
xchg
aam
mov
imul
fsub
stc
push
push
cmp
cwtl
out
int3
mov
subl
push
jne
mov
mov
andb
add
pop
es
cmp
out
pop
std
pushf
data16
push
and
or
call
jmp
popf
cmp
add
sub
enter
dec
loop
push
out
insb
dec
loopne
in
hlt
dec
pop
dec
mov
out
inc
mov
cwtl
sub
test
aas
outsb
mov
adc
pop
push
xchg
stos
outsb
out
jp
jbe
add
and
nop
lcall
xchg
sub
lea
repnz
xchg
call
and
xchg
fildll
test
jg
cwtl
sub
mov
mov
es
mov
pushf
jnp
adc
mov
add
sbb
and
and
lods
les
cmc
cli
fstpl
jb
insb
xchg
scas
iret
push
push
push
mov
sbb
jne
ss
aad
jno
fnclex
test
mov
leave
lcall
mov
cmp
xchg
int
xchg
xor
pop
add
fisubrl
or
mov
push
push
add
mov
mov
push
insl
fcmovb
mov
outsb
arpl
and
les
adc
out
pcmpgtd
mov
inc
mov
adc
sti
lret
ljmp
fldcw
xlat
adc
push
mov
push
push
mov
cmpsb
movsb
es
iret
and
mov
xchg
pop
mov
into
pop
xor
jbe
cli
lods
pop
lods
out
roll
mov
sbb
mov
test
add
inc
leave
or
mov
push
movsl
ret
out
or
fcomi
sub
stc
push
mov
stc
sub
loope
inc
sub
inc
sub
dec
mov
lret
xchg
push
inc
insb
jle
out
xlat
cs
leave
sbb
test
xor
movsb
fwait
pusha
jge
add
lds
add
incb
jge
sub
and
lahf
jle
mov
xchg
stc
jle
dec
sti
and
icebp
lret
sbb
aad
mov
jmp
in
xor
int3
out
push
xchg
sbb
or
and
cli
test
or
pop
xchg
push
sahf
pop
notl
xchg
fcomps
js
out
and
xchg
fcomps
xchg
mov
push
adc
pop
mov
std
xchg
ja
addr16
xchg
in
sti
fdivl
out
in
icebp
stos
lods
jne
neg
jle
xor
bound
fstpl
test
int3
mov
aam
daa
nop
enter
add
xchg
or
scas
insb
mov
jbe
in
dec
sbb
and
pop
aad
pop
leave
inc
int3
pop
pop
or
addl
cltd
faddl
in
push
cwtl
sbb
popf
push
mov
mov
stc
dec
add
es
adc
xchg
shll
movsb
fsubr
push
mov
xor
faddp
add
and
lds
inc
xchg
push
lret
int3
arpl
push
sbb
test
adc
xchg
les
les
gs
cmp
push
lock
repnz
pop
fidivrl
adc
cli
sbb
repnz
jnp
leave
push
xor
in
jb
idivb
jmp
imul
mov
push
fdiv
xlat
jbe
insb
imul
ja
xchg
push
push
fnsave
ficoms
push
pushf
pop
iret
and
fsubs
cmpsb
or
or
push
sets
mov
popw
fdivr
aam
push
pop
adc
mov
shlb
shrl
stos
outsl
in
and
fwait
inc
cmc
outsl
shrb
mov
xlat
sbb
dec
mov
adc
xchg
jns
jno
test
push
fldln2
ljmp
fsubs
lret
nop
push
out
jns
mov
cmp
scas
fsubs
push
arpl
fbstp
js
fmuls
mov
fsubs
repz
xor
adc
xor
adc
dec
shlb
aaa
std
lea
and
mov
imul
jo
shll
ret
outsb
aad
insb
shlb
cmp
inc
scas
pop
cmp
aad
lahf
xchg
scas
sub
push
iret
jno
jnp
push
stos
fs
ljmp
push
xorl
jae
out
lcall
jmp
jno
or
inc
cli
cwtl
xor
cld
cs
cmp
add
inc
dec
pop
test
popa
stos
ds
fsubs
inc
pusha
mov
or
shll
es
frstor
push
stos
mov
leave
movsb
sub
out
push
pushf
out
out
add
add
cmp
notl
pop
les
test
push
dec
lea
mov
pop
je
cltd
push
inc
push
mov
dec
and
out
js
loope
push
out
test
xchg
and
mov
cli
rclb
mov
inc
inc
push
jno
daa
xchg
stos
fisubl
es
and
push
into
out
adc
push
std
lock
jno
jne
lea
fwait
scas
mov
add
push
mov
shl
sahf
enter
out
scas
pop
add
test
pop
and
les
fsubs
shr
bound
fildll
arpl
je
and
cmpsl
lret
lds
test
sbb
icebp
fidivs
dec
jge
or
mov
xor
sahf
jl
mov
push
and
cmpsl
mov
dec
fstp
xor
pusha
and
pop
adc
lods
rcrb
push
pop
into
dec
roll
mov
mov
cmp
pusha
pusha
gs
mov
shll
in
mov
dec
lea
xor
sub
in
xor
jecxz
scas
outsl
shlb
ss
std
jp
pop
sub
push
dec
mov
xchg
push
ret
scas
inc
andl
sbb
ror
cmp
loop
pop
repz
jmp
cld
es
dec
and
aaa
xchg
dec
mov
mov
xor
shl
popf
es
pushf
icebp
mov
cmpsl
sbb
lret
xor
daa
in
push
mov
lret
adc
xchg
lods
hlt
cmp
add
fsts
pop
xor
jecxz
out
cmp
xchg
mov
sub
push
stc
add
jmp
arpl
jne
xchg
and
pusha
sub
shll
lcall
jae
addb
aaa
adc
popf
aad
cmp
mov
cmpsb
add
mov
sbb
adc
dec
adc
insl
jg
mov
jns
std
pop
jmp
mov
lret
hlt
in
add
inc
mov
mov
dec
push
test
sbb
push
pusha
push
je
adc
repz
scas
mov
test
sbb
aaa
and
push
push
sbb
xor
sbb
ja
enter
fstpt
daa
ljmp
cmc
ja
stc
pop
stos
in
fiadds
pop
xor
push
cmp
mov
adc
ret
mov
aas
and
jno
pusha
push
xor
xor
out
les
inc
pop
push
dec
push
inc
xchg
lret
sti
lods
fists
sub
repz
and
sbb
test
cmpsl
add
adc
bnd
ficoms
push
add
dec
sbb
push
bound
sbb
mov
in
andl
fsub
cmpsb
ss
stos
mov
pushf
scas
je
add
loopne
nop
xchg
pop
outsl
jae
cs
js
rdtsc
adc
xor
jmp
mov
test
inc
adc
test
mov
dec
pop
mov
or
xor
dec
lock
sti
inc
jb
mov
incl
adc
in
push
mov
jg
push
ss
inc
mov
shll
repz
cmp
insb
sbb
aaa
or
push
jge
sbbb
adc
es
adc
out
int
hlt
inc
or
xor
add
imul
mov
adc
divb
cmp
fwait
lret
fisubs
in
aad
mov
das
jge
add
out
popa
add
cld
lret
push
cmp
data16
jge
dec
cmp
jb
mov
shrb
stos
cmpsb
das
inc
sti
cld
jl
mov
pop
js
jge
adc
sub
push
mov
adc
xor
cmp
xabort
xor
inc
scas
lods
xchg
add
movsl
adc
out
cs
scas
sub
sbb
mov
fs
push
jl
inc
push
stos
out
aas
xor
or
jns
sbb
lret
repz
je
xor
sbb
inc
lcall
ljmp
ss
icebp
xchg
push
mov
ss
jecxz
outsl
test
rclb
xor
in
mov
int3
push
fidivrl
or
adc
outsl
data16
push
fildl
addb
pop
idivl
arpl
popa
xor
xor
js
push
shrl
pop
sbb
mov
fisubrs
out
loopne
xor
inc
mov
gs
pop
jl
out
fstp
xor
cmp
jno
push
xlat
fisubs
fs
mov
repz
ret
mov
rorl
adc
dec
negb
lock
ljmp
adc
cmpsl
fmuls
out
in
adc
in
pop
mov
or
mov
or
dec
mov
mov
shrb
rorb
icebp
push
rclb
adc
mov
and
movb
aaa
fldl
adc
add
in
arpl
lods
sbb
test
push
cmpl
dec
mov
daa
in
scas
cmp
js
mov
test
cld
push
cmc
daa
and
cmp
adc
add
inc
sbb
or
sti
clc
jmp
push
lds
xchg
hlt
cmp
adc
fs
sub
bound
out
lea
nop
int
clc
int3
inc
mov
pop
mov
mov
mov
ss
mov
test
dec
aad
cmp
sub
data16
cmc
xchg
dec
es
test
loop
push
out
mov
jne
vhsubpd
and
pop
jnp
push
cs
mov
sahf
jl
je
leave
add
test
stos
inc
das
test
adc
loop
addr16
loope
rcll
add
cmpsl
int3
ds
loop
mov
mov
cmpsl
lea
mov
jecxz
xor
and
test
dec
jae
test
cmp
movsl
xlat
scas
imul
ss
jne
jecxz
jp
mov
push
jbe
or
inc
inc
movsb
imul
pop
mov
rcrb
mov
orb
mov
xchg
mov
push
ret
mov
adc
mov
adc
insb
nop
jbe
or
mov
stc
test
mov
pop
fistpl
dec
add
cs
out
dec
jmp
in
and
lods
add
jb
cmp
cmpsb
fstl
fwait
pop
scas
xor
in
sub
and
jmp
addr16
jecxz
mov
jbe
es
and
gs
mov
cli
xchg
hlt
pusha
sbb
cmpl
xor
fnstenv
mov
shll
sub
mov
and
insb
ljmp
jle
negb
mov
ja
fcompl
or
lock
sub
add
cmc
add
xchg
jp
push
ficoms
adc
outsl
dec
rorb
test
test
mov
pop
push
mov
test
idiv
aaa
jns
out
xlat
xor
mov
cmpsb
imul
xchg
sbb
in
fsubr
push
dec
jno
pop
sbb
dec
fildl
add
mov
sub
daa
pushf
enter
mov
ds
mov
mov
in
mov
mov
popa
scas
nop
xor
and
xor
shll
icebp
mov
sbb
sub
add
inc
out
xchg
les
push
into
rcr
mov
cmp
sbb
imull
rclb
fs
mov
push
in
loop
pusha
int
fs
dec
adc
in
stos
cmp
fiaddl
mov
xchg
stos
xchg
daa
shr
dec
shll
mov
out
mov
or
push
mov
out
bound
pop
jns
pop
cltd
inc
popa
push
fldt
cmp
or
add
pop
cmp
js
xor
jno
in
daa
daa
adc
adc
mov
in
int
dec
fmull
stos
imul
mov
push
imul
test
mov
xchg
stc
lock
jno
pop
lods
mov
push
stos
fs
or
push
in
in
cmp
insl
pop
ficoms
add
jmp
xor
cmp
mov
mov
lea
adc
dec
enter
pop
mov
mov
inc
dec
int
and
stos
mov
js
sub
mov
pop
pop
add
jecxz
clc
test
adc
jns
jecxz
push
stc
mov
in
sbb
ljmp
les
dec
loop
inc
pop
notl
and
repz
int3
jl
decl
mov
hlt
push
push
loopne
scas
mov
fcoms
and
cmp
and
nop
fnstcw
mov
scas
jge
stos
and
cmp
xchg
cld
rorb
inc
sbb
lcall
jo
in
pop
ss
push
dec
push
xchg
aam
in
add
rol
repnz
adc
jg
jbe
inc
negl
or
xor
nop
into
mov
lods
cmp
out
cmp
test
dec
cmc
pop
pop
cmpsb
mov
lods
mov
pusha
dec
and
out
cmpsl
jb
sub
add
fwait
or
cmp
push
arpl
push
dec
dec
mov
jbe
ret
jecxz
iret
xor
jbe
xor
jmp
pop
and
cmp
push
outsl
lret
jl
arpl
jb
cwtl
and
shrl
in
daa
std
jmp
outsb
pop
sbb
incb
xor
fwait
add
mov
std
scas
cmpb
jns
ja
xchg
std
hlt
jge
pop
mov
insb
scas
jbe
sub
fsubl
ljmp
inc
fs
dec
add
out
jae
outsl
dec
in
bound
ret
dec
inc
jb
pusha
or
pushf
mov
jmp
cmpsb
sbb
cmp
daa
push
int
jo
pop
movsl
add
cmp
push
stos
int3
out
pushf
cmp
adc
xorl
test
mov
add
je
jo
fwait
push
push
inc
lods
push
lea
gs
or
test
in
rclb
xor
int3
arpl
sub
data16
mov
or
addr16
lods
lea
fcoml
xchg
lods
fistps
in
mov
xor
sbb
xlat
aaa
test
sub
mov
mov
addr16
push
xchg
mov
sbb
fdivrp
push
sbb
pushf
std
sub
imul
repz
out
pop
lahf
data16
frstor
jecxz
xchg
in
and
and
pop
adc
jno
cs
mov
mov
mov
xor
lods
adc
imul
adc
hlt
adc
sahf
pop
pop
or
dec
jbe
in
and
pop
jle
imul
mov
test
xor
cltd
jg
dec
mov
pop
adc
push
pop
push
add
jo
push
push
fisttps
inc
movsb
inc
pop
xchg
icebp
subb
repz
mov
jns
rorb
mov
popf
mov
xchg
enter
in
dec
andl
aas
dec
xchg
aam
or
mov
add
pop
push
jnp
test
jg
jne
push
std
repnz
mov
lods
jne
stc
cmp
xor
fists
scas
test
mov
xor
movsb
dec
stos
ret
out
mov
shrb
lret
fistps
cwtl
pop
dec
sub
dec
mov
mov
cmp
mov
mov
in
xor
data16
inc
mov
mov
pop
fidivl
sub
add
or
mov
addr16
pop
sub
in
or
and
xor
add
inc
mov
or
mov
sahf
icebp
aad
dec
aas
pop
mov
jno
mov
mov
imul
jmp
scas
push
jp
es
add
dec
nop
mov
ja
fcmovbe
mov
insl
rcrb
dec
into
push
lcall
xchg
push
xor
lcall
push
cs
push
inc
das
and
jb
or
inc
pop
add
sub
ss
cmc
and
or
cmp
adc
rorb
or
es
cmp
aas
fcomps
cli
xchg
pop
cld
mov
arpl
loop
xchg
mov
pop
jns
outsb
mov
scas
aad
push
sarl
mov
and
xchg
push
and
mov
fnstsw
mov
mov
dec
mov
mov
inc
sub
pop
ffreep
xchg
sub
aad
bound
xchg
aas
jnp
jecxz
shrl
xchg
or
mov
push
or
fcmovb
push
mov
jo
nop
lcall
sub
jp
cmp
jb
loope
not
repz
int3
jecxz
popl
inc
fcomi
or
call
sbb
cmp
mov
sub
add
cs
and
jle
mov
xchg
sub
loopne
push
xor
mov
gs
mov
jb
cwtl
ljmp
punpckhwd
fwait
imul
jo
jo
xor
insb
popf
push
test
scas
lcall
aas
jnp
inc
les
push
outsl
push
pusha
add
insb
arpl
fiadds
movb
test
add
mov
mov
mov
and
icebp
push
add
jno
pushf
mov
js
test
mov
mov
rcrl
push
jmp
mov
iret
cmpsl
shrl
add
sbb
mov
jbe
in
dec
fidivrs
xor
push
push
fwait
into
sub
xchg
shr
ret
inc
and
push
daa
ja
push
ss
test
les
inc
inc
in
dec
lea
sub
xor
cmp
sub
xchg
jb
out
jle
sbb
add
js
inc
ljmp
mov
pop
repz
dec
aaa
dec
int3
in
inc
imul
adc
push
fisttps
jmp
push
push
xor
test
adc
arpl
imul
fsub
stos
rorb
jne
push
pop
mov
mov
daa
dec
jne
xchg
je
jmp
xchg
lods
div
aaa
push
adc
stos
call
fisubl
orl
jne
mov
mov
out
int3
mov
jns
mov
xor
fs
inc
adc
fdivs
sub
ja
and
add
fcmovne
push
and
aaa
add
xchg
and
sbbl
dec
mov
out
sbb
test
hlt
or
mov
lods
jmp
into
inc
jp
fistl
enter
jle
repz
jl
push
lcall
notl
pop
divl
inc
or
sbb
adc
inc
mov
out
pushf
fdivs
add
pop
jb
test
loop
sbb
aam
outsb
cli
es
jns
rorl
arpl
cmp
sbb
data16
ret
scas
int
js
sub
push
sar
jge
dec
or
ds
add
jmp
outsl
adc
fnsave
jno
incl
jb
push
sub
mov
lock
mov
cmp
lock
in
fldcw
mov
sbb
loop
scas
inc
in
and
push
xchg
or
ss
jmp
xor
adc
or
ljmp
mov
add
jo
lock
out
cmc
daa
jno
mov
jecxz
mov
push
add
jmp
xor
or
lret
push
sbb
jbe
repnz
sti
add
lock
push
cmp
xchg
sub
jp
mov
outsb
fcomi
mov
pop
in
daa
jno
mov
xchg
adc
jae
xchg
push
jge
fistl
dec
adc
fstl
mov
lcall
shr
push
add
cmpsb
arpl
mov
push
cld
pop
push
rdmsr
xor
hlt
mov
sbb
out
push
jg
mov
std
pop
movsb
std
ds
cmpsl
and
inc
sub
lea
cltd
xchg
sub
repz
subl
ss
lsl
call
add
roll
pop
cmovbe
lea
adc
mov
mov
dec
daa
inc
mov
ljmp
and
pop
sbb
das
pop
inc
push
cmp
mul
mov
movsb
mov
cmp
inc
push
sti
sbb
add
dec
or
jnp
aad
push
mov
xor
jmp
jmp
jg
pop
add
js
and
mov
fisubl
test
cld
xchg
mov
inc
mov
aam
sarb
jnp
jbe
pop
mov
scas
push
sbb
jo
clc
adc
inc
subb
out
and
int
push
aas
ret
lds
mov
cmpsl
sub
lods
mov
insl
fadds
jl
mov
push
mov
cld
sub
xchg
call
pop
mov
dec
fdivrs
inc
cld
push
xlat
and
sub
into
scas
je,pt
mov
loope
shl
repnz
adc
mov
adc
push
or
xchg
and
call
jl
stos
cmc
mov
jo
lret
inc
pop
mov
mov
pusha
les
push
push
aam
enter
sbb
in
movsb
rcrb
in
mov
scas
mov
mov
aam
mov
dec
push
mov
sarl
repnz
mov
fs
pop
mov
rol
daa
adc
scas
xor
clc
popf
jg
cmp
in
hlt
jge
jmp
loope
aam
fwait
clc
push
daa
mov
pusha
movsb
call
iret
pop
cld
sbb
ljmp
or
aam
xor
test
mov
jo
ja
out
pop
imul
aas
push
fdivs
aam
call
xchg
add
imul
mov
out
lahf
popf
arpl
rcll
push
test
pop
ljmp
je
enter
mov
fxtract
mov
inc
push
rcll
outsl
movlps
sub
lock
lcall
push
les
test
test
fmul
cld
mov
aas
gs
out
lods
mov
divl
mov
repnz
cmp
cmp
inc
movsb
push
shlb
mov
rcrb
into
aam
jns
mov
dec
cmpsl
or
or
xchg
aaa
popf
xor
jge
jp
xchg
mov
lret
inc
push
stc
roll
add
jb
sahf
jbe
sub
mov
xchg
xor
push
jg
mov
push
stc
and
inc
cli
sbb
adc
dec
jecxz
clc
inc
outsb
pop
aaa
cltd
addr16
and
rorb
mov
add
decb
push
mov
push
or
divl
fidivrs
dec
enter
push
jp
or
jbe
jne
dec
xor
lret
in
mov
or
leave
inc
repz
inc
daa
ficoml
xchg
push
jno
fdivl
es
xchg
testb
jle
clc
je
and
adc
pop
mov
pop
arpl
adc
xchg
ss
js
cs
cli
xor
jg
out
xlat
in
sub
adc
mov
adc
jb
sub
movsl
mov
decb
xor
xor
inc
or
xchg
repnz
or
imul
imul
xchg
data16
cmp
xchg
mov
addl
fwait
lret
dec
xchg
stc
icebp
xor
cmpsl
ds
mov
stos
jns
sub
xor
xchg
push
or
bound
pop
mov
fs
and
xchg
and
lods
cwtl
negl
adc
mov
push
and
aam
xchg
fucom
pop
mov
scas
adc
aam
and
inc
ficoms
sbb
xchg
pop
push
test
push
mov
adc
pop
bound
dec
push
outsb
cld
adc
add
pop
cltd
pop
pop
in
adc
add
loope
dec
or
stos
jge
call
jbe
inc
cmpsb
adc
cmp
call
pusha
lea
loopne
les
or
popa
outsl
mov
ds
es
test
mov
jns
outsb
push
add
sbb
cltd
mov
mov
jmp
test
ret
int
push
lcall
push
psubusw
movsb
and
push
test
sbb
xchg
ret
ret
loopne
dec
lods
leave
xchg
dec
aam
xor
jb
sbb
pop
sbb
les
and
xor
mov
inc
in
jg
jne
lock
sub
sbb
push
imul
cmp
xchg
enter
ss
adc
jo
vorps
shll
xlat
insl
out
aas
aas
jnp
mov
in
lcall
xchg
in
imull
pop
lds
lds
cmpb
push
ss
xor
push
mov
sbb
and
mov
fcmovbe
dec
stos
xor
test
push
movsl
cltd
movsb
in
movsl
insl
je
push
int
div
stos
cmpsl
push
cmp
fadds
lahf
in
out
pop
fwait
icebp
pushf
jns
and
pop
mov
mov
iret
sti
test
nop
insb
push
lea
addr16
pop
outsl
xchg
aas
andb
pushf
rolb
add
or
inc
jmp
div
filds
outsl
fcmovne
fadds
inc
enter
roll
pop
test
loop
sbb
push
sub
std
push
mov
mov
jns
sar
js
mov
test
popa
outsb
je
rorb
icebp
nop
out
in
sbb
pop
jne
cmp
pushl
cmp
es
js
pop
pop
nop
jo
inc
shll
dec
ret
mov
ficomps
xor
mov
test
jne
ret
int3
stc
psrlq
popa
hlt
out
mov
imul
fsubrs
cld
call
push
pop
movsb
add
ds
cmp
mov
pop
lods
iret
jmp
cmp
outsb
pusha
mov
add
aaa
outsb
mov
sub
push
dec
mov
xor
mov
and
ror
lret
testb
cwtl
gs
insl
mov
xchg
out
mov
movsl
lcall
stos
pushf
cmpsb
shlb
xchg
jl
rcrb
mov
jecxz
popf
adc
pop
jnp
xor
aaa
test
push
aas
int
fists
sub
xchg
shl
push
dec
in
push
lock
mov
fsub
jl
and
fsubrl
imul
adc
sbb
mov
test
cmp
xor
and
sub
insb
add
pop
fisttps
add
mov
dec
bound
std
inc
dec
fstp
push
in
repnz
push
add
xor
jge
scas
std
rcrb
decb
mov
cmpsl
or
xor
fdivrs
scas
addr16
dec
cli
aad
ss
cmp
push
ja
ret
sbb
test
call
mov
adc
xor
mov
lods
cs
movnti
dec
pop
pop
add
inc
sbb
stc
inc
inc
mov
sub
mov
or
push
push
cmc
xchg
or
dec
pop
dec
mov
outsb
inc
sti
rclb
dec
fsubl
sbb
cmp
mov
jae
int
in
std
mov
xlat
push
and
cwtl
cltd
and
loope
or
cwtl
repz
sbb
jle
inc
push
add
scas
pop
int3
mov
jo
add
xor
stos
xchg
fabs
add
adcb
loope
xchg
or
subb
pop
jno
xchg
in
icebp
rorb
and
jg
mov
int
ds
ss
clc
stc
jge
mov
iret
cmpxchg
rolb
dec
and
pop
pop
in
jg
setb
or
inc
cmp
mov
sbb
inc
repz
mov
scas
xchg
push
inc
rcr
xchg
xchg
jb
jne
push
sahf
test
jo
sti
cwtl
and
data16
or
enter
fcmove
xchg
jbe
or
aad
fstps
adcl
jl
ja
aaa
fsub
pop
or
push
dec
gs
mov
pushf
push
stc
mov
sub
movsb
nop
lahf
mov
inc
cltd
xor
shlb
mov
pop
pushl
push
push
in
pop
dec
or
movsb
and
test
inc
mov
or
loop
pusha
arpl
call
ljmp
pop
add
popf
pop
test
data16
shlb
sbb
mov
cmp
das
mov
into
outsb
imul
test
push
inc
imul
ds
loope
and
push
cmp
cmp
mov
dec
adc
insb
cmp
jne
daa
cli
cli
stc
mov
nop
icebp
mov
outsb
push
inc
imul
pop
adc
aas
scas
mov
insl
rcrl
enter
adc
push
addr16
jb
aam
leave
shrb
xor
mov
xchg
add
test
imul
imul
sub
pop
mov
test
insl
das
into
std
fwait
in
or
mov
movsl
sub
pop
lock
jno
pop
out
int3
stos
inc
dec
push
hlt
popa
mov
pushf
push
and
in
loopne
clc
cmp
mov
shll
scas
pop
aam
ljmp
arpl
mov
sbb
adc
sbb
add
loop
push
jg
dec
addl
stos
dec
sbb
out
rcrb
sbb
mov
mov
xchg
pop
mov
imulb
adc
and
test
cs
add
loope
adc
inc
jg
push
dec
jb
nop
mov
ret
add
fisubrs
jge
lret
jnp
push
xor
movsl
fcomp
mov
jge
test
sub
test
dec
push
shrb
cmp
outsl
fcmove
xor
lret
xchg
mov
and
xchg
sub
or
std
dec
loope
mov
sbb
rcrb
dec
fucomi
bound
dec
negl
inc
mov
pop
loope
mov
cmpl
xor
shll
shlb
xchg
daa
xchg
lret
icebp
out
ret
cmp
mov
sbb
cmp
imul
and
sbb
xlat
pop
jno
std
outsl
jmp
test
ds
push
sahf
loopne
push
js
fidivs
out
jg
jg
adc
and
dec
xor
cs
mov
outsb
and
imul
aaa
pop
stos
sbb
pop
or
stos
pop
clc
mov
dec
cmpsb
shll
enter
mov
or
nop
sbb
ss
aad
jl
pop
in
adc
pop
test
clc
inc
xor
pop
mov
lds
or
into
adc
adc
add
aam
adc
repnz
stos
mov
pop
movsl
mov
push
les
dec
push
or
and
fmuls
push
nop
and
cmp
mov
sub
in
nop
jns
mov
hlt
ficoms
jecxz
push
xchg
jl
imul
stc
xor
mov
jmp
das
test
es
pop
sbbl
sbbb
mov
push
and
push
scas
loope
sub
subl
les
sar
mov
jl
and
test
adc
je
xchg
cmp
shll
sub
dec
pusha
cmpb
push
ljmp
rorb
clc
xor
out
js
outsl
xchg
pop
xor
int
lret
xchg
ret
out
rcr
jbe
dec
loope
fidivrl
cmc
or
nop
mov
cmp
jns
js
dec
stc
sbb
mov
dec
and
xor
out
cmp
dec
popf
xor
loope
sub
jo
leave
dec
lods
jb
popa
lahf
push
fs
pop
iret
mov
lret
cmpsb
dec
inc
in
ss
int3
shll
das
testl
jb
xor
mov
and
sbb
xchg
push
xchg
xchg
into
jbe
inc
inc
pop
fcomi
jne
ret
aas
test
push
and
push
and
and
ljmp
and
insl
cwtl
and
std
sub
test
pop
rcll
or
or
imul
stos
dec
mov
xchg
mov
adc
nop
inc
js
sbb
push
lds
push
out
outsb
adc
pop
into
jge
movsl
or
pop
inc
and
call
push
xlat
in
xchg
pop
fists
mov
mov
pop
sahf
fisttpll
icebp
scas
or
ficoml
inc
mov
push
or
call
push
stos
cwtl
or
aad
std
popl
pop
sub
push
in
gs
stos
xchg
andl
sbb
pop
pop
fisttpll
sbb
icebp
not
pop
jne
mov
and
stos
mov
add
push
dec
in
inc
movsl
or
push
cmp
pop
clc
and
adc
insl
pusha
notl
test
xchg
add
jecxz
out
fistps
out
lock
idiv
add
xchg
out
jne
push
mov
pusha
daa
xor
and
pop
inc
add
test
shrb
xorb
rcr
std
adc
mov
xchg
or
ja
sub
push
lods
clc
push
ror
fldt
ret
or
clc
add
das
and
call
jae
xchg
or
scas
lds
testl
cmp
pop
sti
xor
push
dec
movsb
jge
sahf
sbb
call
fcomip
pop
in
out
jns
add
frstor
or
ret
mov
out
sub
add
shrl
icebp
fwait
stos
xchg
pop
das
into
pushl
sbb
lock
stos
std
jne
mulb
fdivrs
ja
inc
mov
mov
inc
xchg
sti
ret
mov
and
xlat
addr16
adc
jno
xor
mov
sarb
aad
push
in
arpl
mov
or
push
mov
push
subb
jae
mov
popf
add
pushf
mov
inc
lcall
lea
dec
and
addl
push
bound
repz
imul
xor
ret
popa
mov
jnp
jnp
inc
sahf
dec
gs
cs
ss
js
pushl
pushf
js
mov
pop
adc
int3
scas
add
pop
sti
jg
idiv
and
dec
lds
insl
adcl
or
mov
in
fbld
and
fimull
xchg
add
mov
nop
mov
sbb
roll
xchg
or
xchg
cmc
es
stos
pop
aaa
inc
and
push
andl
ljmp
sahf
sbb
dec
xchg
cltd
adc
outsb
popa
ret
adc
sub
int
jae
mov
add
pop
lret
or
in
jmp
mov
xchg
pusha
mov
aas
mov
ds
xor
lret
call
mov
xor
xchg
lcall
sub
and
pop
push
jne
mov
sub
xchg
xor
sti
fists
pusha
jne
fsts
fnstsw
adc
sbb
rolb
and
push
jl
jecxz
mov
jecxz
mov
dec
pop
pop
push
in
orl
mov
call
dec
sbb
sub
adc
and
sub
cmp
int
push
xchg
fucom
mov
pop
jg
jecxz
xchg
pop
lcallw
pop
adc
jmp
movsl
mov
pop
into
mov
ja
cs
into
cmpsb
jg
mov
fmull
pop
aam
loopne
sub
out
jo
pop
dec
sbb
loopne
and
xlat
jp
pop
lahf
aam
sbb
push
fdivrp
jnp
movsb
xlat
js
and
add
xchg
cltd
jnp
and
mov
cmp
bound
outsl
mov
adc
mulb
inc
out
cld
sbb
daa
inc
in
loop
repz
mov
int3
testb
inc
ret
mov
dec
jmp
jns
dec
scas
data16
push
xchg
js
arpl
mov
movl
jne
inc
shll
int3
dec
ret
scas
cmpsl
in
movsb
sbb
mov
stc
jo
jno
sbb
mov
movsb
or
cmp
imul
cmpsl
jle
out
daa
mov
xchg
nop
jle
xchg
pop
ror
add
push
mov
jbe
cmc
push
mov
sbb
int3
fisubrs
add
xor
mov
clc
pop
outsb
and
pop
add
cmp
mov
fucom
push
popa
inc
out
add
stos
inc
sbb
add
xchg
subb
dec
mov
mov
or
inc
pop
push
adc
mov
jg
mov
aam
out
ljmp
aaa
add
insl
mull
addr16
imull
cmp
repnz
pusha
arpl
xor
pop
xor
test
subb
roll
bound
cmpsl
sub
popa
inc
and
cmp
pop
sbb
imul
ss
lods
add
test
dec
xchg
inc
out
adc
jo
mov
pusha
arpl
int
mov
xor
mov
test
jns
sarl
pop
and
divl
mov
xor
daa
and
mov
or
cld
test
jb
std
adc
mov
xor
in
sbb
std
and
emms
addl
int3
dec
add
dec
ror
sarb
push
ss
sti
andl
pop
movsb
in
mov
cmp
cs
push
push
mov
popa
inc
aas
pop
sbb
and
stc
and
pushf
xor
jns
dec
or
decb
sub
push
lret
pop
aam
fprem
int3
inc
dec
lret
sbb
ret
loopne
out
adc
mov
shlb
sub
inc
unpckhps
push
ds
pop
pop
push
adc
std
lcall
js
repz
adc
jp
inc
xor
and
mov
cltd
jle
dec
xor
movsl
or
jp
jp
fiadds
pop
adc
jno
jmp
cmp
push
ss
jb
addr16
out
into
xor
dec
sub
out
dec
scas
inc
js
ja
int
insb
push
sub
mov
lea
int3
imul
sub
push
push
xchg
mov
insb
and
pop
and
mov
js
data16
cltd
inc
das
inc
shrl
test
xor
sub
into
inc
pop
andl
xor
adc
adc
xchg
mov
outsl
mov
shll
jmp
popa
aas
and
adc
gs
ss
sbb
mov
cmp
pop
and
pop
loop
xor
adc
sub
inc
popf
adc
add
mov
out
and
int3
inc
lods
add
test
or
daa
or
popf
daa
jg
xchg
push
dec
xchg
cmpl
add
repz
xchg
nop
mov
daa
xor
cltd
cmp
dec
mov
out
mov
fwait
jge
ljmp
xor
jmp
dec
mov
inc
subb
push
xchg
jge
inc
or
imul
call
push
mov
jmp
popf
movsl
sbb
ds
outsb
shrb
psrld
xchg
mov
pop
xchg
in
hlt
add
xcrypt-ofb
cmpsl
out
push
jg
in
dec
stos
push
lahf
loope
lods
mov
fnstcw
outsl
in
mov
xor
fnsave
orps
mov
cmpb
scas
sub
shlb
or
xor
adc
mov
push
dec
pop
or
xchg
push
adc
popl
ja
clc
ljmp
punpckhdq
mov
cmp
adc
pushf
and
in
dec
stos
xchg
cmp
aam
inc
pop
lea
dec
in
in
add
xor
ss
cs
and
addb
int3
cmp
dec
xor
fcmove
sub
xor
jns
push
ja
insb
sbb
test
push
not
pushf
dec
mov
repnz
cmpsb
cli
mov
push
popf
ljmp
outsl
jl
inc
iret
outsb
cmpsl
jle
insl
jge
inc
xchg
shll
or
aam
pusha
je
dec
icebp
pop
inc
pushl
mov
mov
shll
outsb
sub
xchg
mov
sbb
pop
jne
testb
popa
push
lea
test
or
mov
sub
push
push
test
test
dec
mov
int
popf
aaa
jne
movd
cmpsb
daa
pop
sahf
andb
or
cld
mov
push
iret
xlat
testl
cmp
int
push
add
or
sub
inc
inc
repz
lahf
je
loopne
jnp
push
sbb
daa
pop
pop
je
ja
or
adc
ficomps
pushf
mov
js
adc
or
lds
sarb
ffree
jae
mov
jbe
mov
pop
pop
cmp
ret
push
dec
xor
cs
and
or
fs
lcall
xor
es
pushf
xchg
mov
sub
xchg
xchg
push
mov
jne
inc
adc
shll
push
or
idivb
pop
adc
out
dec
mov
cwtl
stc
imulb
fstps
std
js
push
sbb
in
dec
mov
push
sahf
xor
je
push
jae
mov
cmp
jecxz
sysexit
pushf
data16
std
push
jb
and
adc
fdivrs
mov
cmc
xchg
adc
rclb
xchg
ss
shlb
sub
xor
loopne
dec
sub
sbb
pop
dec
and
push
mov
sub
pushf
or
cwtl
aad
out
subb
sub
rcr
shlb
jmp
jl
popf
repz
sahf
pop
add
cmp
inc
int
xor
or
out
add
lds
leave
lds
lret
popa
dec
aaa
pusha
outsl
jns
and
insb
xchg
cmp
or
das
into
inc
push
lcall
inc
cmpsl
jae
jmp
mov
or
lahf
sub
rorl
dec
mov
lods
push
mov
xchg
dec
sub
aas
inc
mov
cmp
xchg
xchg
jne
rcrl
dec
data16
imul
and
fadd
mov
push
jecxz
mov
adc
mov
test
mov
outsb
negb
mov
call
or
outsl
adc
fdivl
stc
out
lea
es
add
addr16
adc
les
sahf
or
push
pop
hlt
pushf
clc
jl
ja
movsl
clc
xor
dec
int3
add
jmp
mov
cmp
loope
out
jp
jne
adc
das
cmp
scas
inc
dec
adc
or
xchg
fimull
je
pushf
aad
aad
jp
or
scas
cmpsb
fldenv
cmp
lds
xchg
negb
lea
add
push
and
mov
push
mov
mov
gs
jne
mov
jb
out
hlt
jl
movsb
push
jl
in
cmp
enter
push
push
and
push
pop
out
sbb
pop
xchg
scas
cmpsb
pop
scas
jbe
or
push
add
push
shlb
push
sbb
ss
jp
sbb
leave
jb
push
or
lahf
pop
aaa
push
ret
clc
into
adc
adc
mov
inc
mov
cmp
das
add
dec
inc
pop
push
stos
les
push
sbb
xchg
outsl
cli
mov
add
cmpsl
xchg
inc
and
fimuls
adcb
adc
stos
pop
mov
adc
lock
or
fistpll
lret
cli
push
call
inc
mov
fucom
imul
xor
lcall
add
cmp
in
adc
mov
add
dec
ss
inc
xchg
loope
addl
test
mov
adc
jbe
hlt
mov
mov
outsb
xchg
je
ret
rclw
dec
lret
cwtl
lahf
in
or
jmp
add
push
enter
in
insl
std
ds
addr16
pop
pushf
out
roll
outsb
lods
push
xor
mov
adc
and
add
int3
add
lret
mov
pop
cli
sub
jne
jno
xor
ret
arpl
movsb
push
or
out
sub
inc
test
xchg
les
test
dec
pop
pop
shrb
pop
in
lcall
enter
stos
addr16
and
push
shlb
push
in
xchg
fwait
mov
mov
xor
jmp
inc
js
mov
fs
fnsave
loop
std
mov
int3
lods
sub
mov
push
ss
aad
or
dec
push
add
icebp
cwtl
cmp
cmpsb
sub
imul
sbb
inc
aad
push
lock
xor
pop
mov
test
pop
cmpsl
lea
adc
push
mov
push
test
sti
xlat
inc
cmpsl
sbb
fadds
popf
mov
movsb
jl
xchg
mov
loop
lds
and
mov
mov
xor
pop
mov
dec
xchg
stc
sbb
fdiv
pop
sarb
out
leave
pop
aas
sub
mov
fmuls
das
pop
cld
push
insb
push
pop
mov
mov
insb
pop
fsub
out
fwait
lds
es
nop
add
jae
out
jns
pop
repnz
mov
pushf
and
pop
ljmp
jmp
adc
and
lret
mov
ss
jecxz
cmp
ror
test
sub
cmp
mov
outsl
enter
js
out
outsb
leave
dec
and
ds
adc
cltd
push
pop
test
aaa
xchg
pop
pop
inc
inc
mov
clc
jbe
xchg
push
xchg
out
nop
adcb
ds
jle
filds
sahf
sub
cmc
sbb
in
sub
mov
xchg
outsb
test
xor
leave
adcb
mov
lock
fildl
inc
push
mov
scas
outsb
jno
in
cmp
inc
cmp
push
lret
enter
aas
xchg
cli
mov
movsb
mov
xor
lcall
rsqrtps
idivl
shlb
inc
loop
incb
mov
mov
xchg
sub
out
movsl
mov
call
sahf
inc
jg
test
adc
push
popf
insb
push
pop
pop
shr
or
scas
icebp
stos
popl
popa
xchg
sahf
imul
gs
neg
adc
ljmp
xchg
and
cmp
mov
mov
stos
es
mov
dec
push
in
dec
aad
outsb
popa
or
adc
insb
int3
aam
adc
inc
mov
lods
add
mov
out
or
pop
mov
jecxz
arpl
mov
orb
cmp
mov
or
mov
mov
jbe
xchg
push
adc
sbb
xchg
pop
pushf
or
xor
inc
call
xchg
pushf
jnp
dec
idivl
lods
lock
scas
push
pop
int3
test
rorb
cmpsl
aad
cltd
push
aas
mov
mov
ret
add
filds
test
test
mov
and
mov
fldz
pop
rclb
mov
insb
pop
or
and
fs
xor
lahf
push
lds
adc
xchg
loopne
ret
xor
lods
das
leave
adc
cmp
cmpsb
into
mov
not
movsb
cltd
lds
std
lcall
xor
fcmovnu
sbb
outsl
xchg
dec
repnz
popa
cmp
mov
into
mov
push
scas
inc
cld
inc
repnz
push
lods
cmpl
iret
lahf
pop
outsb
adc
mov
sub
roll
pushf
add
mov
movsl
popf
and
and
clc
arpl
mov
fidivrs
mov
and
xorb
cmpsl
test
imul
add
pushf
lret
jae
jecxz
sub
jae
jl
adc
and
negl
repz
test
pop
mov
dec
aas
inc
dec
outsb
daa
mov
dec
cmpsb
insl
lret
push
or
pop
insb
sub
fwait
int3
pop
pop
mov
pop
mov
stos
cld
pop
repz
lea
jnp
and
es
push
adc
test
lahf
sub
insl
push
add
mov
xor
or
or
sarb
add
shr
clc
sbb
mov
mov
jae
sub
xor
cmpsl
nop
loopne
mov
imull
arpl
pop
xor
js
adc
pop
sahf
or
ret
int
int
mov
add
mov
or
mov
push
les
jns
cmp
push
cmp
sti
mov
dec
stos
and
xchg
add
mov
cmpsl
dec
das
cmp
cmc
or
push
imul
mov
adc
cmp
and
mov
lods
xlat
arpl
sbb
hlt
loopne
sahf
jno
xlat
mov
out
dec
ja
loopne
fs
fistpl
lods
push
in
sbb
daa
dec
jne
cmpsb
jnp
jp
cmpsl
jge
loope
xorb
push
or
jb
orl
rorb
cs
xlat
pop
xorb
call
orb
in
mov
ljmp
ss
test
mov
mov
jbe
dec
stos
mov
les
inc
jmp
or
cld
dec
test
mov
ljmp
ret
push
xchg
push
pop
mov
movsl
sub
shl
mov
xchg
lea
je
sahf
icebp
outsb
mov
fmull
dec
cmpsl
jecxz
mov
es
cmp
dec
and
mov
shlw
dec
xor
into
jge
adc
cli
and
mov
in
pushf
pop
mov
or
mov
in
fwait
xor
movsb
xchg
pop
repz
enter
mov
mov
mov
xor
mul
je
inc
in
lods
mov
sarl
mov
js
jbe
andl
movsb
dec
lret
gs
test
pop
ss
ficoms
jecxz
cwtl
jg
fisttpll
fnsave
dec
test
cmp
cmc
lret
les
mov
lods
jnp
xor
test
pop
data16
and
jne
adc
add
sbb
sbb
push
mov
imul
sahf
lods
out
xchg
or
dec
mov
loop
dec
pusha
pextrw
nop
out
xor
and
push
pop
sub
pusha
rclb
arpl
fistpl
cmc
repnz
fs
sbb
dec
fnstsw
shl
mov
cmp
jle
mov
cmpsb
jbe
adc
clc
and
shlb
push
add
xchg
dec
lea
pop
icebp
sub
add
push
int
or
mov
lahf
mov
push
iret
mov
lods
out
push
mov
cld
cmp
lret
vfpclasssd
nop
cmpsb
add
and
outsb
xchg
dec
dec
jnp
out
and
das
int3
jmp
test
xchg
add
push
fisubrs
std
std
lcall
hlt
mov
push
xchg
cmp
lahf
shlb
jb
mov
shll
sbb
rcrb
hlt
ja
loop
or
test
and
and
sbb
inc
cs
sbb
mov
cmpsl
mov
scas
inc
cmp
lret
mov
std
jle
push
popf
mov
jno
push
sti
jae
mov
scas
adc
jo
cmp
stos
xchg
xor
iret
int3
mov
loopne
fucom
push
push
jo
faddp
or
cwtl
testl
scas
cld
shr
std
pop
sbb
lds
cld
movsb
dec
dec
pop
mov
test
mov
xor
inc
mov
jg
jns
ret
data16
add
pop
ficompl
dec
pop
fsubs
xchg
sarb
mov
xor
aad
jne
ja
rcrl
popa
outsl
sti
arpl
dec
push
xlat
mov
and
pushf
sar
out
insb
xlat
pop
dec
pop
sbb
lret
sbb
cmpsb
das
sub
bound
mov
cmp
cmp
cmp
cmpsb
stc
inc
out
jge
mov
punpckhwd
push
aad
lods
sbb
xchg
adc
in
jne
jo
test
test
add
lods
jo
lahf
cmpsl
mov
cwtl
jmp
stos
mov
popf
inc
mov
nop
cmp
inc
xor
repnz
xchg
shlb
jo
jle
icebp
pop
mov
xor
pop
fbld
jno
fcoms
pusha
lcall
inc
lret
mov
sub
lret
or
add
xor
jecxz
sbb
popf
xor
test
mov
mov
flds
fidivl
divl
fistpll
sarl
lret
cltd
jge
push
hlt
xchg
jle
es
jo
mov
fildl
into
aam
sub
push
shll
dec
ja
add
adc
sbb
int
cs
xorb
gs
and
jl
sub
and
outsl
and
mov
pop
leave
or
xor
mov
ss
xchg
or
loopne
xchg
int3
xchg
xchg
mov
jmp
push
dec
push
arpl
testb
xor
pop
rorl
movsb
adc
and
movsb
arpl
sub
movsb
into
repnz
cmc
add
fstp
mov
pusha
fdecstp
mov
xor
mov
out
inc
std
or
push
cmp
jle
and
test
sub
mov
imul
leave
mov
je
pop
loope
incl
adc
push
inc
arpl
mov
out
mov
lods
mov
sti
sbb
aam
jle
fstp
loop
in
std
les
imul
push
stos
pop
cmp
mov
jecxz
pop
jns
sub
cmpsb
adc
imul
sbb
sub
addr16
aad
mov
adc
dec
aas
mulb
or
xlat
ljmp
jo
fmuls
xlat
bound
dec
xlat
frstor
test
mov
cmp
sub
pop
stc
push
push
cld
pop
lahf
leave
mov
test
push
fstps
arpl
lret
sub
mov
add
ljmp
sti
jno
push
subb
cmpsl
pop
dec
out
sub
js
jne
mov
ds
xchg
and
xchg
fwait
mov
jp
mov
sar
pop
je
in
fdivr
sub
jnp
sub
push
xor
sarb
sub
jl
ret
fistps
out
fmuls
lret
adc
and
ret
mov
jge
test
inc
dec
cld
addb
mov
dec
or
cmp
pop
jge
sub
xchg
mov
int
pop
cwtl
pop
pop
ds
inc
aas
xchg
std
mov
push
js
cmp
push
int
stos
jge
aaa
mov
inc
rcrl
test
stos
jle
xor
jns
test
adc
out
in
adc
repnz
repnz
in
andb
pop
ds
pop
xchg
sbb
ret
iret
dec
adc
je
fwait
out
shl
mov
jns
sbb
jmp
push
icebp
testl
pop
pop
xor
call
sub
sbb
test
addb
jae
in
add
js
mov
mov
fildll
mov
xor
push
mov
mov
pop
pop
ret
ret
clc
stos
lods
sub
adc
mov
add
cmp
jbe
leave
pop
addr16
mov
add
jmp
mov
ja
adc
push
idivl
divb
mov
inc
xor
test
sub
jo
mov
ret
cli
jg
aaa
lret
lcall
shl
sub
sbb
mov
out
cmp
bound
pop
insb
rcr
inc
push
xchg
repnz
or
cwtl
pushf
jmp
rol
fisubrs
insl
jmp
movsb
scas
cld
or
push
lock
sbbl
push
lds
jbe
vmovlps
mov
pop
sub
test
fdivrl
stos
mov
pop
rcrb
or
push
adc
inc
ror
imul
nop
jg
mov
cltd
mov
int
popf
cmp
outsl
filds
or
test
cmp
dec
xchg
jmp
test
loopne
ds
xchg
xchg
adc
aad
xchg
nop
rep
aaa
dec
lds
or
leave
cld
ds
mov
mov
cmp
and
jns
jmp
imul
jg
aas
rolb
xor
loope
leave
ret
push
sahf
sub
mov
adc
mov
push
push
jge
sub
ret
dec
mov
aam
pop
adc
and
mov
xchg
jne
mov
into
daa
inc
sub
lods
xchg
popa
imul
lds
cltd
lods
loop
push
jmp
loopne
mov
cs
iret
mov
jecxz
adc
and
jl
int3
pop
pop
lret
adc
cmpsb
idivb
stc
mov
and
mov
movsb
xor
push
mov
xchg
and
sti
das
inc
sbb
pop
pop
ficomps
jae
adc
push
mov
sarl
jl
mov
fsubs
push
arpl
add
inc
pop
push
sbb
xor
sub
fnstenv
mov
popf
movsl
adc
out
fmul
or
mov
xchg
je
stc
lcall
leave
arpl
mov
or
cmpsl
xlat
dec
xchg
lea
inc
xlat
int3
sub
stc
push
loope
ljmp
lock
fnsave
hlt
ret
or
sahf
je
mov
jnp,pn
and
push
inc
call
out
sbb
arpl
xchg
jmp
mov
sahf
aam
out
stos
cli
mov
inc
hlt
mov
dec
rcrb
cs
mov
jbe
xlat
sub
or
lods
xchg
or
movq
stos
shll
jg
xor
xchg
std
inc
jbe
adc
cmpsl
cltd
test
mov
add
pop
mov
dec
ds
and
insl
ret
xorl
pop
add
gs
int3
repnz
xchg
repnz
orl
divb
dec
add
xor
jl
and
fstl
inc
jae
mov
scas
cwtl
cmp
fisubl
outsb
mov
insl
mov
not
mov
adc
xchg
outsb
das
sub
mov
fstpt
add
repz
je
enter
dec
jle
push
cmpl
mov
movsl
js
fwait
mov
roll
or
adc
mov
loopne
jnp
and
test
pop
mov
fidivs
sti
into
lret
inc
cmp
dec
jmp
push
fcmovnu
leave
inc
test
adc
lods
cmp
add
aas
icebp
mov
and
adc
jne
test
lret
aaa
hlt
xchg
push
push
and
jmp
pop
in
fs
mov
add
jae
mov
push
jp
enter
ficoml
mov
dec
mov
outsb
lret
mov
pop
repz
adc
and
sbb
mov
icebp
sti
mov
outsb
xchg
fstps
fucomi
inc
pop
dec
xor
xlat
push
jl
sbbb
test
imul
inc
cld
jae
adc
clc
scas
out
leave
mov
cmp
pop
int
mov
jae
and
clc
mov
in
out
pop
test
stos
imul
sbb
dec
daa
scas
and
mov
imul
ljmp
call
inc
faddl
inc
aam
int3
sbb
push
scas
aas
outsl
sub
out
loop
sub
fstpt
xchg
ficoml
mov
sbb
mov
adc
loop
lea
dec
and
jbe
mov
sbb
iret
xchg
mov
add
inc
xor
data16
test
outsl
arpl
movsb
cli
adc
sub
or
fs
adcb
mov
in
sarl
xor
shlb
ljmp
mov
add
mov
mov
pop
fstl
scas
icebp
sti
jecxz
sub
ds
push
and
lea
insl
test
mov
loopne
nop
jb
sahf
lcall
lahf
mov
and
cmp
push
and
je
sbb
adc
scas
jg
adc
sti
addr16
pop
lods
push
lahf
leave
xchg
xor
adc
push
inc
popf
mov
and
icebp
cmp
mov
ds
fwait
add
sbb
lret
lds
ret
xchg
sbb
outsb
sbb
inc
jbe
cli
movsb
lret
divl
adc
cmpsb
cmpl
into
mov
inc
shrl
arpl
cmp
jns
mov
pop
push
mov
decl
add
lock
cltd
outsl
xchg
adc
fbstp
dec
adc
ficompl
rolb
fwait
mov
cwtl
stos
pop
xchg
jg
lods
decb
xchg
outsb
mov
push
arpl
lret
gs
clc
mov
fnsave
jae
mov
out
sbb
cwtl
jg
frstor
fisubrl
enter
or
mov
mov
inc
shlb
nop
pop
cld
jnp
icebp
add
jno
or
popa
aas
and
and
aaa
adc
xchg
fsubr
fists
dec
rcl
test
pop
negb
sub
xor
xlat
lock
sbb
inc
push
test
bound
jge
jae
mov
mov
in
add
popa
js
jg
mov
std
sar
jbe
sub
nop
lods
in
aaa
mov
jbe
xchg
addl
cmc
jl
mov
dec
sti
aam
push
daa
ljmp
add
hlt
in
mov
add
iret
jae
dec
loopne
pop
in
clc
aad
out
xchg
stc
push
and
sub
in
js
pushf
sbb
fisttpl
daa
arpl
jne
push
stos
add
xorb
mov
pusha
call
out
inc
hlt
cs
cwtl
or
sbb
push
fwait
jo
add
pop
inc
in
mov
adc
fdivl
lock
inc
das
mov
repz
inc
mov
aas
sti
loopne
sub
jle
in
pop
adc
fstpl
sub
add
addl
mov
sahf
and
push
add
or
movsb
dec
loope
mov
xor
jne
pushf
xor
int
adc
ret
sbb
insl
data16
repnz
mov
adc
pop
mov
outsb
lds
in
into
dec
popa
pop
js
repnz
loop
push
sub
leave
fldt
negl
cmp
jbe
insl
cmp
fidivl
push
xchg
cmpsl
daa
fisttpll
sahf
adc
aas
test
das
sub
jg
lahf
cmp
fcomp
das
dec
cmc
cmpsl
push
mov
scas
push
cmp
bound
shrb
lret
or
jnp
dec
pop
mov
xchg
pushl
cmc
cmc
sub
pop
pop
lcall
jnp
cmpsb
xchg
ds
loope
sarb
rcll
popf
pushf
sbbl
push
dec
int
int
add
adc
sbb
cmp
idiv
sti
lret
fsub
sub
in
push
push
inc
and
push
imul
leave
rorb
cmpl
sbb
ss
xchg
pop
sbb
enter
adc
push
mul
and
add
rol
into
cmpsb
and
sbb
popa
icebp
or
push
inc
mov
cmp
repnz
rcrb
mov
nop
push
inc
jb
fcoml
popl
xchg
ss
mov
sub
movsb
mov
arpl
out
or
lcall
push
sbb
hlt
sbb
popf
out
push
rcll
mov
gs
movsb
movsb
shlb
outsl
out
rolb
mov
shll
gs
push
push
mov
sub
cmc
add
mov
lret
sbb
cmp
and
inc
inc
mov
xor
jmp
cld
inc
loop
xchg
hlt
lock
jmp
sar
push
inc
scas
daa
out
pop
sbb
lock
mov
data16
scas
daa
push
mov
sub
iret
imul
cmp
mov
or
push
scas
mov
sbb
pop
add
out
jns
inc
fsubr
outsl
in
mov
pop
xor
jae
call
and
cli
mov
mov
subb
bound
push
in
popa
daa
std
add
flds
idivb
jl
fbstp
jle
test
mov
push
mov
inc
add
hlt
jecxz
outsb
into
cltd
insl
loopne
xor
shl
sbb
shl
cmp
addr16
repz
out
lcall
inc
mov
in
jp
cmc
cltd
mov
adc
sbb
push
fsubr
daa
pop
jns
pushf
mov
shll
daa
jmp
fsub
shlb
jo
ficoml
test
dec
sub
cmp
popa
jo
jp
push
add
loopne
pop
mov
add
sub
arpl
mov
in
jle
mov
inc
packsswb
sti
add
and
xlat
data16
outsl
add
cmpl
repnz
fstps
jno
add
sub
fs
jne
sbbl
pusha
filds
jle
pop
mov
and
out
mov
fs
sbb
sbb
sbb
dec
jnp
add
shlb
loopne
adc
cwtl
adc
les
movsl
xor
lahf
sub
mov
call
xor
lock
movsl
mov
pop
sarl
fcoml
aas
loop
xor
lcall
mov
or
aam
and
cs
icebp
xchg
dec
test
cmp
jo
sbb
inc
mov
lcall
jns
xchg
rcr
in
sbbl
rcrb
xchg
pop
lods
lods
jg
add
fisubrs
push
mov
test
cmc
dec
call
aaa
cmpsb
fsubrs
adc
add
in
cld
xchg
sub
and
fiaddl
and
lock
dec
int3
dec
in
rorl
lahf
mov
cwtl
int3
mov
xor
loope
adc
push
sbb
push
shl
sbb
movsl
pop
outsl
imul
lret
or
push
scas
cwtl
cltd
sub
vpor
jbe
push
mov
mov
cs
pushf
and
jns
iret
in
cs
mov
mov
jbe
popf
negb
cs
push
xchg
mov
dec
ss
xor
gs
sub
xchg
and
adc
xchg
std
sbbl
xchg
sbb
arpl
int3
mov
popf
mov
xchg
jno
rolb
std
xchg
lahf
jle
sbb
adc
sbb
fs
scas
test
sbbl
xor
cmp
dec
pop
test
test
mov
mov
push
int
xor
and
out
sbb
sahf
mov
cmp
cmp
pusha
xor
loopne
loope
subb
mov
xchg
inc
adc
sbb
sbbb
insb
cltd
out
push
add
fiadds
pusha
fcmovu
cmp
and
mov
adcb
dec
dec
enter
std
inc
push
xor
xchg
cs
push
xor
rcrl
mov
test
jge
xchg
or
jne
xchg
sub
nop
push
mov
out
mov
cwtl
clc
mov
add
cmp
add
dec
mov
lock
pop
xchg
loopne
push
jb
mov
rclb
cmp
jo
lcall
test
aad
dec
mov
xchg
jge
cmp
inc
stos
icebp
dec
std
frstor
out
push
pop
pop
into
xchg
add
xorb
fcmovne
mov
sub
xchg
lea
das
push
cmc
aad
push
mov
aaa
call
jb
push
xchg
push
xor
xor
push
or
loope
je
es
jns
xor
das
jns
mov
push
pop
insb
ljmp
mov
lea
sub
outsl
inc
mulb
shrl
je
icebp
cld
push
js
pavgw
add
mov
movsb
push
pop
jno
or
push
mov
dec
mov
sti
mov
and
imul
inc
popa
jb
adc
cmpsb
inc
out
pop
jg
pusha
mov
jne
inc
enter
loopne
add
inc
xchg
fwait
sub
jo
ffree
xor
loope
dec
pushf
xchg
mov
sbb
cmp
enter
push
dec
xchg
push
inc
jne
cmp
and
sub
mov
pop
adc
mov
fs
pop
pop
inc
testl
sbb
notl
imul
xchg
and
aad
push
outsb
rcrb
imul
stc
repz
daa
int3
call
fisubrl
mov
scas
popf
psrlq
or
sub
xchg
out
enter
pop
add
arpl
outsl
dec
out
mov
sbb
arpl
movsl
pop
mov
sub
ret
pop
xchg
sbb
xor
fisubrs
add
jp
mov
fadds
insb
imulb
and
lods
mov
dec
ja
pop
lahf
sub
movsl
aam
test
negl
addr16
mov
cwtl
inc
sub
pusha
cltd
hlt
sub
ret
xor
stos
sbb
daa
loopne
stos
jmp
pop
adc
pop
cld
dec
push
les
std
fistpl
inc
add
gs
fs
imul
lret
xor
lods
add
das
repnz
jge
ljmp
test
outsl
mov
mov
movq
shlb
mov
xchg
sbb
stos
lods
mov
lea
mov
add
cmpsb
jecxz
insb
add
inc
cmpsl
dec
cmp
push
lcall
iret
mov
scas
fidivrs
mov
ljmp
or
cmp
adc
lock
or
push
xchg
dec
fdivl
xchg
push
mov
das
jge
jmp
mov
fbld
push
mov
dec
mov
pop
jecxz
cmp
xlat
nop
cmpsb
outsb
lahf
frstor
fucomi
pushf
movsb
ss
pop
js
pop
inc
mov
inc
xchg
mov
sbb
sub
into
push
jno
int
leave
dec
hlt
mov
cmc
adcb
cmpsl
pop
sub
mov
pop
orb
inc
push
jp
fcomps
testl
and
add
add
push
xor
incl
cli
cmp
push
rcll
jp
inc
pop
and
cmp
pop
aaa
bound
in
pushf
push
push
xchg
in
or
jmp
mov
jle
sbb
fucomp
and
pop
in
sub
cs
aam
je
arpl
in
loop
test
jo
add
fcom
xlat
jecxz
push
pop
xchg
les
imul
push
ficompl
in
xorps
arpl
pop
dec
sarl
and
bound
sub
mov
pop
hlt
cltd
dec
sbb
push
imul
lock
lds
mov
xchg
fwait
cmp
call
arpl
mov
push
cld
xchg
lock
out
or
inc
sbb
adc
dec
add
inc
test
xchg
scas
xchg
push
push
xchg
dec
call
xchg
outsb
or
outsb
xchg
xorl
mov
repnz
pop
mov
aaa
jnp
dec
lock
lds
xchg
cli
dec
popf
add
xlat
lcall
pop
jns
mov
and
loopne
outsb
add
or
clc
pop
ljmp
aas
stos
in
lods
jb
add
xchg
or
gs
inc
test
shlb
xchg
mov
mov
inc
or
lahf
xchg
lds
jg
cltd
cmp
test
jmp
data16
xchg
push
xchg
loope
mov
push
add
jmp
mov
cli
outsb
lea
adc
jbe
outsb
inc
or
mov
jns
test
sub
test
push
mov
enter
jp
sub
add
fwait
xchg
test
data16
inc
imul
addb
cmp
sub
inc
pop
out
mov
mov
paddusw
xchg
or
in
push
inc
cmp
pop
sub
mov
ficomps
mov
mov
insb
test
popf
mov
imul
mov
mov
paddusb
int3
or
enter
push
sbb
std
push
or
sub
xchg
or
xchg
mov
xorl
sti
mov
loop
xor
aas
adc
rorl
cmp
cmovno
mov
pop
stc
sbb
mov
or
jmp
xchg
in
adc
adc
sbb
movsb
and
mov
cmpsb
enter
insl
enter
jl
js
mov
aam
mov
lret
jge
addr16
outsl
outsl
mov
add
mov
ja
out
test
mov
iret
jne
icebp
pop
rclb
pop
jne
cltd
test
mov
cld
mov
ret
or
mov
mov
mov
and
aad
arpl
nop
cli
xchg
jo
sub
xor
and
lods
ret
out
sbb
aaa
jp
jmp
pop
mov
jecxz
test
popa
jo
notrack
dec
sbb
or
repz
xchg
or
mov
inc
ja
mov
test
rcr
push
and
das
and
imul
pop
sub
adc
pop
pop
movsl
cmp
dec
or
mov
pushf
out
in
pusha
push
xchg
daa
jo
pop
stos
ljmp
inc
les
lret
mov
push
mov
mov
faddp
push
in
sbb
inc
jecxz
sub
jle
or
aam
inc
jae
shrb
pop
mov
ret
add
lcall
add
cwtl
rcl
pop
ja
lahf
cmpsb
sub
pop
pushf
or
in
add
cmp
cs
sbb
mov
cmp
cmpsl
pop
fldenv
jle
dec
rorb
aaa
cltd
dec
shr
xchg
jge
push
jbe
add
mov
stos
dec
loop
adc
imul
movsb
cmpsb
xchg
push
jno
orb
out
int
mov
flds
lock
mov
pop
mov
icebp
xor
orl
mov
mov
add
pop
push
leave
mov
sub
or
push
mov
and
and
fisubrs
cltd
sahf
mov
stos
jnp
jg
adc
lret
pop
rcll
clc
iret
adc
test
mov
dec
sbb
push
dec
sbb
add
ss
mull
jae
repz
adc
mov
shr
mov
arpl
add
hlt
aas
out
je
adc
je
fsubrs
add
subl
mov
dec
dec
pop
stos
lret
ja
push
outsl
cli
add
sarb
leave
xor
jl
pop
add
idiv
mov
lret
push
fcoms
sbb
xchg
xor
unpcklps
jae
sub
mov
popf
test
xor
and
pop
fmuls
xchg
mov
mov
jp
inc
bound
iret
test
inc
jne
aam
int3
adc
lret
sub
dec
adc
clc
je
mov
cli
or
ss
ljmp
adc
leave
std
je
addb
out
cmp
lea
cltd
adc
cmp
mov
pop
lock
outsl
sub
push
push
xor
ljmp
je
sub
outsl
pusha
cmc
jns
inc
and
dec
cmpsb
xor
cmc
fsubr
mov
mov
std
dec
adc
ds
adc
or
add
imul
inc
test
sub
jmp
addr16
test
arpl
xchg
lahf
test
mov
imul
decb
lret
inc
iret
push
pop
mov
jno
cli
lods
push
mov
and
js
mov
adc
ret
out
ret
aad
movsl
xor
jmp
repnz
or
call
aas
mov
xchg
and
or
dec
jl
cmpsb
and
loope
les
mov
lea
cs
rolb
xchg
bound
cmp
int
mov
push
out
and
dec
mov
mov
mov
xchg
dec
mov
xchg
fisubs
es
es
pop
addb
mov
dec
stos
adc
adc
aaa
add
out
nop
das
xchg
loope
pop
in
es
mov
das
mov
jnp
mov
lods
repz
nop
jo
mov
loop
clc
clc
mov
outsb
mov
jle
test
add
out
lret
push
jmp
xorb
inc
xchg
lret
or
out
add
jbe
ljmp
dec
add
jl
pop
mov
push
adc
mov
bnd
cmpsl
sbb
faddp
sbb
jge
sahf
outsb
cmp
sahf
mov
popa
icebp
cltd
movsb
dec
push
jno
push
and
cwtl
in
or
imul
jbe
add
dec
xor
inc
cmp
ja
inc
push
lods
mov
adc
xor
lock
imulb
imul
pop
or
xor
dec
cltd
sahf
dec
adc
rorb
push
hlt
aas
cmpsl
xchg
fdivrl
clc
pushf
adc
jae
cwtl
push
xchg
icebp
mov
es
outsb
gs
insl
cmc
jge
mov
mov
mov
xor
insb
inc
inc
sub
jne
test
cltd
dec
mov
fstl
aad
arpl
in
jb
xchg
outsl
adc
div
sub
int
mov
mov
mov
in
and
fisubs
sahf
jns
sbb
push
shl
cmpb
xor
and
into
or
push
add
movsl
fsubrs
sub
xchg
cmpsl
cld
arpl
cwtl
push
and
sub
int3
push
pop
pop
lahf
mov
or
ret
add
push
dec
repz
mov
inc
sti
jae
jmp
adc
movsl
dec
jp
divb
std
ja
push
cs
js
sar
xor
jecxz
enter
mov
in
mov
loope
repnz
jmp
cs
movsb
and
xor
idivl
dec
js
push
xchg
subb
daa
testl
mov
pop
ret
and
movsb
pop
loopne
mov
cmp
lods
scas
xchg
lods
test
mov
addr16
push
loope
jo
ja
outsl
and
jl
out
xor
ljmp
fucomip
jnp
cmc
mov
add
push
push
nop
pop
filds
fisubs
mov
ret
js,pt
dec
sbb
xchg
out
push
iret
jle
stos
mov
sub
and
sub
mov
stos
arpl
jo
cmp
pop
dec
testl
inc
mov
aas
mov
fbld
repnz
out
inc
mov
push
sub
and
out
adcb
das
and
push
popa
push
jmp
std
bound
outsb
mov
xor
pop
xchg
pop
push
pop
mov
add
in
mov
mov
mov
cwtl
mov
scas
pop
push
addr16
and
xchg
data16
or
or
add
mov
ljmp
ss
pop
lret
pushf
add
fwait
sbb
test
dec
scas
rcrl
xchg
fldenv
push
cmp
enter
ss
pop
or
mov
or
push
stos
shrl
mov
imul
or
daa
cmp
pusha
pop
jmp
fs
adc
mov
jle
or
jno
push
ds
les
in
or
lret
xor
cmpb
xor
push
sbb
fiaddl
cmp
push
adcb
or
mov
imulb
or
mov
inc
jmp
hlt
push
inc
mov
cmp
sbb
mov
clc
scas
ljmp
sub
stos
pop
mov
push
dec
jae
mov
cmp
aam
data16
and
subl
test
outsb
push
lods
test
xchg
mov
xor
jle
cld
fwait
into
jp
xor
sbb
dec
dec
movb
mov
push
jle
sbb
jae
imul
mov
test
aad
mov
rclb
fwait
jle
stos
call
sti
push
mov
dec
imul
and
xor
push
pop
outsb
scas
jecxz
xor
or
test
and
in
repnz
addr16
dec
xchg
subl
or
in
push
adc
sub
dec
push
mov
ret
lret
mov
testb
and
addl
lcall
cmp
sub
movsb
arpl
mov
out
pop
leave
js
aam
adc
jg
add
adc
arpl
jb
jb
add
inc
push
lret
stos
sub
mov
add
lret
lods
cmp
mov
cltd
add
bound
mov
imul
fcos
fs
in
aas
sub
scas
fisttpll
repz
mov
cmp
jne
ja
push
loopne
inc
scas
and
jnp
xor
or
imul
push
adc
add
or
xor
jg
mov
mov
push
insb
mov
jge
iret
xor
cmp
mov
imul
outsb
jns
adc
pop
push
mov
imul
out
xor
sahf
shl
xor
cmp
mov
shl
ret
sub
xor
push
mov
mov
dec
cmp
mov
adc
ret
cs
sub
sbb
fsubs
jp
adc
fimuls
cmp
inc
mov
int
sub
mov
xchg
xchg
and
nop
adc
leave
xor
and
xchg
push
mov
and
out
sub
out
aad
dec
mov
jp
hlt
cli
and
out
mov
xchg
sub
jmp
adc
or
or
scas
push
xor
or
gs
test
jnp
sbb
loop,pn
mov
sbb
das
xchg
or
xor
addl
jecxz
adc
adc
js
outsb
mov
push
mov
dec
sbb
call
std
push
inc
int
cld
push
das
sti
es
ficoml
mov
arpl
mov
ja
das
out
shl
jne
mull
sbb
shrb
push
clc
shrb
mov
js
andb
or
hlt
pop
pusha
dec
mov
jne
xor
test
cmpsl
xchg
adc
es
out
clc
gs
pushf
mulb
mov
push
imul
les
test
mov
test
xor
inc
cmp
pop
sbb
shr
daa
lock
jo
mov
jno
mov
xchg
pop
cld
loope
and
nop
add
cmp
push
loopne
mov
ljmp
fistps
sbb
test
pop
jbe
stos
in
or
add
jp
sub
pop
push
lret
xchg
pop
add
adc
test
pop
loopne
cmpsb
test
inc
pop
pop
jg
loopne
arpl
add
mov
jno
test
cmp
or
lahf
push
idivl
mov
cmpsb
pop
addr16
pushf
add
aaa
in
xchg
test
ret
into
rcrl
push
sbb
sahf
mov
scas
xor
mov
ret
or
add
sub
mov
mov
xchg
ficoml
cli
push
psubb
popa
lahf
subb
orl
xchg
sbb
shlb
dec
pop
and
rclb
push
and
mov
int
outsl
xchg
pop
aaa
pop
push
out
call
cmp
xchg
and
xchg
sbb
and
aad
test
into
and
enter
pop
jns
stc
rol
jbe
mov
mov
enter
xor
dec
cmp
outsl
xchg
fiaddl
mov
push
repnz
popa
push
mov
add
mov
jae
lcall
imul
add
jo
lock
pop
xchg
xor
or
lcall
cmc
pop
xchg
sub
clc
out
loopne
lods
sbb
push
mov
mov
int
inc
in
ret
pop
aas
lcall
mov
data16
imul
xchg
fcmovnu
mov
sub
pop
repz
xor
mov
push
push
outsb
xor
addr16
into
ss
adc
fsubrp
inc
xor
add
xchg
push
pop
xchg
push
inc
iret
adc
sbb
push
push
sbb
push
sub
inc
mov
or
and
test
scas
data16
inc
enter
lret
jnp
xchg
inc
add
cmpsb
jne
mov
cltd
lea
lret
popf
ss
mov
or
cmp
clc
jecxz
in
jl
pushf
rclb
inc
lea
jnp
mov
cmc
gs
insl
cld
adc
or
lock
xchg
insl
insl
cmp
mov
dec
or
xchg
setb
sbb
fnstcw
jo
loope
rcrl
or
inc
lret
loope
popa
testb
mov
sahf
fmull
xchg
cld
aas
mov
out
mov
pop
daa
add
cs
cmpb
sub
mov
lret
int
fstpl
mov
out
add
cmc
mov
mov
adc
dec
sbb
into
fs
sub
push
aaa
fmull
iret
fnstsw
sub
add
push
mov
push
in
addr16
pusha
pop
imul
jb
xchg
mov
mov
cwtl
imul
les
push
es
sub
sub
adc
jnp
or
repz
insl
or
dec
in
cli
jae
jbe
insl
cs
push
out
xchg
shl
pop
jl
jle
fisubl
push
inc
dec
enter
push
mov
sbb
mov
test
mov
push
ja
pop
sbb
inc
and
mov
fildll
imul
mov
inc
add
inc
cwtl
dec
jge
jbe
pop
jne
inc
dec
dec
adc
fs
popf
sbb
add
pop
popf
lock
fisubs
add
les
jmp
jle
lock
daa
jo
jno
in
pusha
add
add
dec
mov
push
addr16
or
xlat
xorl
mov
std
add
rcr
xchg
xchg
mov
clc
sti
push
or
xor
sbb
or
sub
jns
je
ror
jne
jns
push
push
cwtl
cmp
clc
push
mov
adc
fcmovbe
cmpsl
repnz
pop
jbe
cmc
bnd
stc
aas
add
scas
push
jae
or
push
pop
decb
je
cmp
xchg
ds
stos
scas
add
ret
loope
push
add
out
jne
inc
fistpll
mov
push
sub
inc
inc
pop
pop
jne
icebp
xchg
jge
test
cmp
lods
call
lret
push
scas
push
clc
mov
lock
call
cmp
or
cmp
ja
adc
or
loopne
test
out
sbb
outsl
adcl
scas
mov
cli
inc
adc
aad
adc
xchg
test
sub
scas
dec
dec
cs
sub
shl
movsb
lea
mov
mov
es
pshufw
push
push
pop
das
xchg
mov
jge
rcll
pop
cmp
xor
stos
jecxz
xchg
icebp
jg
and
sbb
lret
mov
aaa
fucomip
xor
rcr
dec
jp
test
mov
pop
aad
mov
inc
fimull
xchg
cmpsl
xchg
cli
pop
or
int
outsb
rcrb
sub
enter
outsl
mov
sbb
xor
ret
inc
xchg
scas
es
fdivrs
out
xchg
and
mov
dec
and
fisubrs
call
in
iret
sub
push
inc
sahf
lret
jp
push
xor
popf
mov
add
in
jno
mov
pop
push
sbb
cmc
mov
daa
push
sub
test
add
es
outsl
fimuls
lcall
and
xchg
clc
pop
adc
aam
hlt
pusha
xor
mov
nop
cld
mov
xchg
stc
mov
ljmp
in
mov
cmpsl
inc
sub
dec
jnp
mov
or
and
xor
pop
or
filds
xchg
mov
push
mov
in
xor
and
ret
ds
lahf
pop
mov
xor
scas
inc
sbb
mov
aas
cmp
lahf
lea
cmp
fcoml
loope
xchg
xchg
test
movsl
dec
in
test
adc
dec
movsl
push
adc
xor
ja
and
xchg
inc
mov
movsb
ja
cmc
movsb
mov
lcall
subl
jo
fcomp
lcall
scas
mov
movsl
mov
sbb
pop
adc
test
addr16
sbb
push
jo
stos
lahf
mov
pop
scas
test
mov
add
adc
fisttpll
add
outsb
pop
popa
xlat
jecxz
push
movsl
in
jo
lahf
cs
ss
js
call
push
cmp
dec
inc
imul
xor
xchg
push
push
mov
test
aad
push
xchg
push
lahf
jne
scas
ljmp
push
ret
imul
sub
jae
dec
or
fucom
cmp
enter
cmp
mov
xchg
decb
push
push
jo
out
xchg
js
sar
gs
dec
test
ror
mov
cmp
add
aad
roll
inc
fmull
add
add
add
mov
hlt
cli
stc
inc
imul
clc
mov
fsubl
push
xchg
or
pop
rol
mov
and
shll
ljmp
dec
or
lret
cmp
and
insl
xor
push
mul
out
lds
xchg
jb
mov
push
pop
inc
xor
or
xchg
jne
inc
xchg
adc
pop
loop
loopne
outsl
xlat
jne
push
jle
mov
shll
lahf
or
mov
push
dec
mov
dec
rcrb
mov
mov
inc
loope
sbbl
fs
dec
cli
xor
jns
xor
mov
addr16
outsb
mov
inc
cli
testl
pop
mov
in
jnp
jecxz,pt
jbe
hlt
lret
pop
mov
jle
ss
rcll
jne
push
push
sub
jp
xlat
mov
jge
adc
sbb
insb
or
cltd
push
cs
cltd
xor
hlt
std
mov
and
out
add
inc
mov
fs
aaa
loopne
push
jne
inc
in
or
jge
stos
cmp
repnz
enter
loopne
lods
subb
adc
jp
aaa
add
adc
inc
pusha
ror
sbbb
xor
sbb
mov
jne
jg
mov
xchg
insb
add
sub
push
mov
adc
cmp
add
insb
in
stc
mov
lret
lds
lcall
and
call
ret
mov
pusha
imul
pop
ljmp
sbb
ret
dec
out
lret
arpl
ds
sar
fists
cs
pusha
js
lea
mov
mov
daa
push
cmc
das
notl
and
ret
loopne
out
xor
fdivl
movsl
cmp
in
sbb
mov
mov
cmp
adc
outsl
int3
cli
jge
jbe
lret
test
fs
cwtl
stc
xchg
into
inc
ja
addr16
push
inc
fadd
and
dec
push
sub
in
out
cmpsb
xchg
repz
popa
addr16
xchg
mov
adc
aam
sti
sbb
add
xchg
jmp
push
std
sbb
mov
shrb
sbb
adc
cmp
repnz
lahf
mov
sub
inc
xchg
mov
xchg
clc
push
icebp
push
popf
cld
cs
dec
cmp
push
and
sub
cli
push
scas
scas
push
popa
jge
pop
test
addr16
fsubl
cmc
int3
fstpt
lds
loop
cmp
hlt
dec
into
push
mov
jb
lods
adc
stos
lret
cmp
jno
rcrb
xchg
pop
sbb
leave
mov
icebp
or
xor
jle
cltd
sti
dec
xchg
or
fadd
lods
xor
out
cli
in
pusha
jo
sbb
mov
jge
repz
sahf
enter
cmpsl
outsl
add
bound
insb
test
rcll
dec
adc
pop
xor
dec
jge
rclb
sub
pop
fldl
aam
push
sub
push
mov
jne
push
mov
push
mov
stos
fcomip
imul
jns
and
push
and
sarl
cwtl
iret
fcomps
ss
movsl
pop
ficoms
popf
sbb
pop
stos
movsb
mov
xchg
push
fisubs
daa
rcl
add
clc
jg
jno
int3
sahf
lods
push
lds
mov
fst
daa
dec
xchg
hlt
xor
sbb
sub
loopne
sbbl
sub
aaa
in
sti
mov
mov
gs
je
pushf
adc
mov
push
inc
lds
mov
adc
lret
sbb
mov
incl
xchg
icebp
loope
adcl
out
dec
and
test
sbb
insl
jmp
dec
rorl
xchg
lret
stos
in
pusha
adc
ret
xor
fdivl
rol
cmpsb
pop
cmc
arpl
inc
roll
mov
adc
or
xor
mov
push
clc
jmp
rcrb
lahf
aas
push
imul
addl
or
xchg
ficoms
or
or
mov
int3
inc
je,pt
leave
cmp
aaa
stc
fnstcw
inc
cwtl
dec
cltd
aad
mov
jle
ljmp
push
inc
push
popf
ret
mov
inc
cwtl
dec
pushf
adcl
xchg
aaa
sarl
aas
aam
popf
push
fbstp
mov
les
or
or
dec
lahf
inc
or
xchg
lcall
mov
cwtl
cmp
sub
jl
jae
or
add
push
sti
inc
pop
mov
dec
pop
jno
mov
lds
add
cmp
int
movsl
lahf
into
mov
leave
rclb
push
ret
or
jp
rcll
ljmp
sub
andl
xchg
mov
dec
incb
jp
xchg
shrb
cmp
sbb
aam
sub
xlat
fcomi
and
add
sub
icebp
dec
mov
iret
mov
ljmp
sbb
mov
test
insb
jge
xchg
std
pop
push
sub
insb
test
addr16
push
mov
dec
shlb
cmc
add
js
xlat
dec
push
std
fwait
scas
push
mov
test
add
cld
adc
shl
mov
in
and
mov
out
fcompl
and
in
dec
lods
test
jmp
imul
pop
cmp
dec
add
popa
push
mov
xor
gs
movsb
sti
xchg
filds
ss
pop
or
mov
pop
jne
loope
sub
fildl
inc
inc
mov
xchg
lods
mov
clc
lds
outsb
add
subl
pop
loopne
pop
add
cwtl
aad
cli
sarl
int
lods
out
add
sub
xlat
xor
add
pop
jmp
pop
cmp
and
shlb
dec
jmp
sbb
int3
scas
lods
inc
mov
imul
sbb
adc
pop
pop
outsb
outsb
repz
cltd
loope
cmp
mov
popf
jbe
and
add
pusha
push
ja
inc
mov
xchg
cs
sarb
jp
cltd
xlat
inc
ss
fadd
sbb
jno
cs
cmp
jo,pt
inc
jmp
mov
insl
addb
jle
jge
sbb
sbb
inc
inc
lret
call
rcr
pop
mov
cmpsb
sbb
jmp
xor
arpl
push
and
xor
inc
pop
mov
adc
pop
aas
addr16
cwtl
sbbb
leave
fidivs
ja
dec
sub
je
mov
hlt
aaa
pusha
scas
sub
jb
add
scas
jns
add
jmp
add
jecxz
ja
add
cltd
out
jg
jmp
mov
add
dec
xchg
sbb
push
rorb
jl
int3
repnz
in
jae
sti
pop
mov
inc
frstor
mov
sbb
fistpll
add
mov
aas
dec
cli
into
xor
fwait
jmp
lret
in
dec
jb
sub
mov
repz
cmp
xor
add
pop
xchg
shrb
push
pop
xchg
add
mov
daa
jne
popa
popa
stos
cld
enter
insl
pushw
cmc
jge
lcall
cmpsl
aaa
pushl
cwtl
push
mov
lea
pop
ja
ss
stos
dec
push
push
int
add
pop
sub
mov
sbb
add
cs
xchg
pop
addl
xor
movsb
inc
cmpsb
push
int3
test
fsts
xchg
in
fwait
fs
pop
add
dec
lea
xchg
jge
dec
push
jl
inc
push
nop
test
jnp
mov
xchg
jmp
daa
test
outsb
lea
inc
push
bnd
ljmp
or
into
and
pushf
sti
int3
iret
mov
sbb
mov
iret
or
sub
cmp
in
push
xor
into
ret
movsb
arpl
test
aaa
mov
cmp
mov
scas
les
adc
imul
imul
push
mov
jge
je
cs
push
xor
pop
xchg
imul
and
popa
adc
xchg
addr16
lahf
mov
mov
xchg
cmp
or
lock
xchg
lods
xchg
fsubrl
cmp
pop
xchg
cld
mov
inc
arpl
sub
mov
sahf
rorb
movsl
test
enter
jae
fld
jbe
mov
data16
imul
jno
inc
test
in
xlat
jmp
sarb
mov
jmp
daa
mov
cmpsl
xlat
leave
pusha
arpl
negl
mul
xchg
cmp
lret
bound
push
ret
jle
ret
test
movsb
fistps
inc
cmpsb
xor
in
xchg
xor
lret
lock
xor
mov
pop
fldt
jno
pushf
stos
sub
add
push
mov
addl
into
adcb
int
xchg
ds
cmp
xchg
outsb
arpl
push
popf
push
out
adc
xor
ret
sbb
add
and
fimuls
xchg
scas
or
or
xor
pop
pusha
sbb
cli
fstl
mov
imul
pop
add
push
ret
bnd
popf
out
sub
addb
xchg
stos
and
or
filds
cmpsb
test
jns
dec
add
stos
dec
jmp
push
addr16
lret
push
in
jno
push
dec
arpl
fs
pusha
test
pusha
pop
pop
ja
std
push
out
inc
and
popf
sarb
repnz
jns
clc
imul
push
add
lods
cwtl
gs
adc
xchg
mov
xor
cmpb
fwait
mov
push
sbb
test
inc
lret
pop
test
lahf
push
sbb
icebp
fnsave
ss
addr16
sub
cmpsl
call
push
repnz
fs
cmp
dec
dec
xor
lds
mov
imul
jae
ret
jo
xor
add
dec
jne
pop
in
adcb
sub
sbb
test
cltd
and
shl
les
test
orl
movsb
sub
xlat
jae
shlb
test
popa
insb
pop
stc
sbb
adc
stos
sub
rclb
test
and
cld
dec
cltd
test
pop
mov
xchg
sbb
cmp
scas
sbb
mov
sbb
lret
sub
sbb
orb
jp
push
pop
mov
cmpsb
mov
jge
fsubl
and
out
lret
add
xor
sub
mov
repnz
sbb
ja
inc
add
idivb
sub
pop
mov
pop
inc
dec
es
dec
xor
jno
sbb
cli
ffree
mov
insl
dec
cmc
push
loop
or
or
sbb
test
cmp
ret
out
jge
cmp
addl
call
push
add
ret
inc
mov
jp
add
aad
movsl
jb
mov
push
out
imul
jnp
enter
dec
jo
cld
sarb
aad
mov
push
mov
mov
insb
add
negl
sbb
stc
sbb
pop
movsb
inc
push
xchg
jae
xor
push
adc
mov
call
and
jno
xchg
xorb
daa
mov
sbb
imul
push
jp
cmc
out
jle
push
xor
xchg
cmp
inc
pop
pmulhuw
jne
clc
push
dec
in
je
lret
inc
mov
and
sbb
cmp
cmpsb
xchg
or
mov
test
mov
dec
pop
rorb
imul
inc
xlat
adc
std
xchg
jl
loopne
mov
fwait
jecxz
jg
pop
ficompl
pop
xor
jle
icebp
test
addl
adc
adc
aas
sub
icebp
dec
pop
scas
or
pushf
je
cli
stos
pushf
pop
mov
inc
cmp
lds
stos
pusha
xchg
sbb
add
push
fcmovne
add
mov
xor
mov
fwait
repnz
out
xor
pop
inc
loope
pusha
jnp
stos
sbb
nop
shll
movl
imul
adc
jle
scas
mov
push
sbb
std
movzwl
push
pusha
inc
inc
mov
xchg
pop
in
inc
test
bound
out
xor
bound
dec
add
gs
insl
cmp
cmc
mov
inc
pop
inc
mov
fldl
cmpsb
loope
adc
lods
lret
sahf
cmp
and
les
mov
pop
sbb
xor
cmp
or
sub
fcmovu
push
jbe
mov
dec
cmp
sub
dec
mov
movsb
mov
jle
lods
mov
stos
loopne
push
jns
mov
andl
mov
sub
mov
int
mov
adc
cltd
mov
xor
repz
pushf
cmc
mov
mov
jmp
jb
xchg
dec
xchg
xchg
adc
sub
add
addr16
dec
push
mov
dec
mov
lret
inc
lock
xchg
enter
cli
enter
insb
cmp
xor
lcall
out
cwtl
mov
dec
and
pop
aad
and
jbe
mov
daa
fists
fcmovu
cmp
cmp
out
push
and
dec
dec
mov
xchg
jg
mov
push
push
data16
cli
pop
mov
cmp
ret
int3
mov
push
dec
pop
cmp
into
mov
es
mov
sub
adc
adc
jns
jbe
pop
sbb
jmp
mov
pop
into
mov
xor
pop
add
movsl
jge
lret
test
dec
test
fsts
sbb
mov
fnstsw
popa
scas
dec
sbb
lea
sub
xor
push
xchg
lret
jmp
in
cmc
std
test
das
xor
cmp
push
pop
pushf
inc
fadd
daa
sti
pop
add
and
adc
mov
jmp
mov
pushf
call
mov
push
cltd
push
in
jle
add
mov
test
sbb
cs
xchg
mov
jno
das
lods
pop
pop
or
cs
test
adc
ficomps
out
test
mov
push
push
leave
mov
addl
mov
aam
sub
pop
or
sbb
sub
stos
xor
pop
mov
pop
push
sub
adc
and
jmp
xlat
fldt
jge
loope
jecxz
mul
push
sarb
mov
das
pop
subb
stos
call
or
add
loope
add
cli
lock
push
push
add
test
jecxz
dec
subb
fstp
out
shlb
cwtl
in
xchg
cmc
mov
lret
adc
mov
cmp
sbb
in
inc
ret
fldt
popa
jg
aam
aaa
je
push
mov
inc
into
push
sbb
pop
jbe
sub
mov
cmp
adc
test
cmp
iret
jae
push
push
pop
insb
in
xchg
mov
push
adc
aaa
andb
test
push
icebp
shll
sub
pop
idivb
jns
push
cmpsl
out
push
xor
push
mov
pop
sub
push
jnp
add
cmp
cwtl
shr
sbb
scas
call
bound
scas
arpl
scas
iret
and
xor
and
ds
shll
fwait
add
add
adcl
jl
sbb
and
jecxz
jmp
mov
inc
daa
test
adc
ljmp
and
pop
jp
xchg
adc
or
sub
dec
dec
mov
sub
es
push
jp
adc
xchg
pop
cmc
jns
jo
fdiv
or
inc
clc
mov
lahf
les
xchg
jge
nop
stos
jno
push
push
dec
jp
or
push
or
sti
add
popf
mov
sbb
subl
minps
and
out
pusha
mov
jecxz
pop
jnp
stos
dec
ss
shr
fbld
and
repz
incl
inc
jl
jp
sbbl
mov
testl
push
jp
stos
push
or
call
xchg
ljmp
int
pop
outsb
pop
pop
and
into
shrl
sbb
rolb
pop
cmpl
mov
mov
aaa
dec
sbb
jnp
fistpl
repnz
push
adc
into
jge
add
sbb
sub
rcll
fwait
shlb
add
in
ficomps
pop
sbb
mov
in
mov
aaa
inc
sbb
test
stos
xor
insb
inc
iret
inc
and
shrb
pop
inc
pushf
cltd
sbb
lcall
fcoml
push
sti
xchg
in
mov
movsl
dec
adc
stos
and
jns
mov
cmp
jp
pop
push
and
cmpsb
repz
mov
test
out
mov
mov
push
imul
stos
add
mov
mov
fisubl
leave
js
lods
push
int3
lods
jo
inc
pop
mov
gs
je
hlt
xchg
iret
inc
pushf
sti
or
mov
cmc
push
xlat
jns
fwait
cmpsb
pop
pop
and
insl
int
push
pop
call
or
les
fdivs
dec
cmp
cltd
or
aaa
pop
or
shlb
push
nop
jnp
shl
inc
mov
sub
out
imul
icebp
imulb
decl
fstl
and
dec
scas
clc
fwait
pop
mov
outsl
or
mov
cmpsl
ds
pop
addl
push
jns
jecxz
and
or
pop
inc
rolb
test
dec
jmp
aam
imul
dec
adc
je
xor
mov
pop
jo
xor
aas
or
inc
ss
movzwl
gs
mull
xor
cmp
out
push
push
outsb
sbb
incb
xchg
pop
push
add
popf
sub
cmpsb
das
mov
test
rol
or
add
pop
cld
ret
pop
inc
outsl
cmc
mov
mov
scas
enter
andl
nop
stos
mov
dec
or
or
add
incl
movsl
insl
or
pusha
mov
add
aas
cli
ja,pt
out
fnstcw
sti
xchg
mov
das
addl
leave
inc
shlb
jl
mov
mov
ljmp
add
and
mov
hlt
sub
jo
out
stos
or
aaa
out
sbb
pop
add
or
sbb
test
lcall
arpl
fadds
es
mov
mov
cmp
dec
stc
cmc
idivl
cmp
ret
lret
sahf
js
pop
ret
hlt
bound
je
add
mov
adc
nop
fisubs
out
loope
and
dec
pop
or
add
clc
test
sbb
sbb
pushf
jle
test
dec
and
into
inc
rep
mov
dec
fwait
and
lea
sub
imul
xchg
jmp
rcrb
or
jmp
pop
call
lock
insb
fsubs
das
in
cwtl
adc
movsb
add
jo
cmp
xchg
test
push
sahf
jmp
ror
popf
pusha
cmovs
and
cmc
sti
jmp
es
dec
test
push
fadds
les
mov
fisubrl
sub
mov
lret
loop
lds
or
sahf
mov
in
orl
mov
pop
and
repz
mov
mov
mov
adc
and
aam
enter
inc
push
cwtl
push
popa
imul
push
and
cmpsb
test
xor
mov
orb
mov
fstl
incl
push
mov
lea
add
cli
scas
call
jle
fisubrl
movups
jg
mov
lret
sub
inc
xor
xchg
mov
add
in
cmpsb
cmc
pop
sbb
cmpsl
jmp
sbb
dec
pop
out
push
dec
add
ret
mov
push
mov
lcall
insl
mov
jnp
shlb
inc
inc
cs
cmp
shl
xchg
push
aas
pop
sbb
das
lods
mov
cmp
cli
push
xchg
sbb
inc
fildll
lahf
into
and
repnz
adc
aad
xlat
mov
or
sahf
daa
test
adc
fiadds
push
mov
gs
adc
test
xchg
shrb
loopne
out
mov
mov
call
iret
mov
movsb
loop
sti
testl
sti
dec
lret
mov
pop
mov
negb
pushl
daa
fdivrs
pcmpeqw
imul
pop
jnp
xchg
out
loop
ss
test
adcb
push
dec
cltd
outsb
mov
or
inc
pushf
sub
dec
stc
out
mov
inc
fwait
dec
xchg
aad
addr16
fistps
out
rcrb
scas
das
fnop
pop
aas
sahf
mov
mov
rcrl
rcr
sti
or
mov
inc
shr
jg
lds
mov
mov
mov
dec
fldenv
outsb
and
or
push
inc
cmp
xchg
sarb
dec
lods
inc
sub
shlb
das
scas
mov
mov
mov
lods
cltd
sbb
xchg
mov
pushf
scas
lret
aaa
cmpsb
xchg
and
jbe
push
push
sub
in
ficompl
and
int
mov
mov
out
shll
push
mov
scas
push
xor
push
fs
adc
inc
out
sbb
mov
les
outsb
add
into
imul
adc
cld
pop
stos
inc
repz
dec
mov
mov
pusha
test
mov
nop
mov
mov
add
data16
sbbb
mov
inc
addr16
mov
aad
mov
pop
add
xchg
ds
pop
jns
out
xor
ret
in
jmp
repnz
cmpsl
xlat
mov
shrd
rep
adc
cmp
mov
dec
fmuls
aaa
or
push
lret
mov
popl
imull
cmp
mov
mov
dec
lret
push
xchg
mov
scas
mov
cmp
cmp
shlb
ret
xchg
cmpb
mov
mov
jbe
cld
push
loopne
mov
andb
les
sub
xchg
inc
push
push
data16
fsubs
ret
push
scas
xchg
push
xchg
test
inc
ds
subl
aam
or
sub
daa
lahf
add
jge
insl
jae
xor
dec
add
fwait
divl
xor
insl
dec
mov
xchg
popf
mov
sbb
and
fldcw
jbe
lock
popa
popa
pop
clc
cwtl
mov
aaa
lds
fwait
xlat
mov
hlt
adc
xor
cmc
push
sti
cwtl
or
push
jmp
cmp
into
shrl
xor
js
mov
popa
inc
or
lods
lock
and
aas
lret
or
fsubrl
shl
iret
fldt
gs
addl
icebp
inc
js
and
mov
pop
stos
jbe
rolb
and
leave
es
sahf
mov
scas
mov
adc
scas
ret
mov
loope
mov
loope
movsb
stos
outsb
jbe
in
iret
lret
xchg
jl
jo
push
jp
push
adc
les
inc
test
dec
mov
int
fyl2x
mov
ljmp
movzbl
aaa
fcoml
int
sbb
scas
std
jno
rolb
sub
xchg
mov
and
sub
flds
jl
xchg
scas
pop
aaa
ret
mov
icebp
adc
dec
add
inc
push
outsl
sbb
or
ss
push
dec
cs
testl
xchg
push
jae
cmp
pusha
sbb
les
push
xchg
pop
pcmpeqw
mov
lds
lods
xchg
push
and
mov
dec
call
sarb
in
cltd
jp
cmc
or
ja
scas
push
in
mov
xlat
push
xor
adc
dec
arpl
loop
cld
dec
outsl
mov
mov
jne
adc
sbb
inc
sbb
xchg
das
int3
shld
scas
dec
enter
lock
mov
inc
jmp
cltd
lods
inc
pop
cmp
push
and
xchg
scas
int3
mov
push
and
aaa
add
sbb
out
inc
bound
dec
xchg
sbb
jbe
pop
mov
sarl
int3
shll
jmp
mov
cwtl
mov
outsb
rcrl
imul
jmp
inc
xchg
jo
scas
xchg
jns
outsb
lahf
sub
lahf
loopne
or
cmc
sub
push
xchg
mov
stos
push
lods
daa
cmpsl
xchg
cltd
mov
cmp
int3
dec
ss
pop
push
dec
enter
sub
addr16
imul
lods
mov
cli
and
cmp
mov
cld
jns
jmp
inc
sbb
xchg
mov
je
sub
cld
push
pusha
cmp
ss
mov
fisubl
xchg
dec
decb
in
mov
jp
inc
pop
inc
dec
cmpsb
pop
test
jno
push
mov
and
nop
and
xchg
jo
pushf
cmp
dec
xchg
in
repnz
into
jne
jge
stc
sbb
mov
pop
mov
ja
mov
lods
ja
mov
nop
loope
push
cltd
pop
movsl
mov
pop
mov
sahf
or
lcall
sub
dec
dec
mov
ds
mov
aam
jge
push
aam
enter
and
push
jle
in
xor
into
sbb
cmpsb
dec
mov
fcomps
add
mov
fadd
inc
call
imul
repz
iret
mov
cmp
jle
popa
jg
rol
mov
into
loop
ret
pop
cmp
mov
inc
add
pop
shlb
mov
sbb
mov
lret
xchg
mov
hlt
and
aad
lret
dec
stos
mov
bound
cmpsl
pushf
les
imul
lods
aad
and
repz
lret
in
fmuls
add
xchg
sbbb
xchg
or
rorl
mov
sub
repnz
mov
adc
punpckhwd
push
dec
xlat
lods
leave
int3
mov
lret
in
and
hlt
mov
pop
adc
das
dec
xchg
pushf
adc
push
push
clc
push
mov
and
inc
jle
inc
cmpsb
adc
lock
push
xorl
adc
add
cmp
fwait
in
aad
clc
xchg
inc
inc
aas
mov
mov
stc
xor
lcall
push
cmpsb
inc
icebp
hlt
js
jnp
mov
mov
std
mov
add
cmp
pop
push
aam
cli
cli
cmp
enter
add
jo
and
jae
loope
popf
cli
push
mov
ja
cmp
xor
or
lcall
mov
sub
std
and
xchg
inc
sub
cmc
jecxz
hlt
movsl
push
mov
aaa
pop
lds
test
stos
stc
jb
inc
repz
decl
imul
inc
mov
sbbb
mov
push
or
cli
repz
pop
fisubl
sahf
mov
push
fwait
sub
or
lcall
push
add
rolb
xlat
ja
out
xchg
ljmp
pop
stos
stos
in
adc
aas
lds
add
inc
mov
into
inc
sbb
mov
into
inc
cwtl
sbbl
pushf
pop
insb
fisttpl
mov
xor
ja
rcrb
push
push
pop
rclb
lret
sarb
fwait
data16
mov
push
xchg
imul
je
xchg
ret
inc
pop
mov
inc
pop
pop
push
int3
add
std
pop
mov
mov
cltd
lds
cmp
and
mov
js
pop
xchg
mov
jl
mov
daa
lds
outsb
clc
mov
inc
scas
push
popa
test
cwtl
push
jmp
sub
jo
dec
scas
inc
in
cmpsb
adc
sarl
mov
jnp
int
les
rcl
mov
adc
and
push
repz
xchg
fsubr
lret
mov
decb
and
int3
stc
mov
dec
cmp
mov
sbb
and
lea
pop
inc
push
in
lahf
outsl
inc
sbb
insb
icebp
and
add
lds
push
dec
dec
testl
xchg
in
ret
inc
push
or
outsb
rcll
pop
mov
xlat
insl
inc
add
testl
xchg
jnp
adcl
pushf
test
out
adc
test
stc
xor
dec
arpl
lea
ja
fcmovnbe
fdivl
cmp
cld
jnp
js
into
pop
sbbl
jns
pusha
gs
fnstenv
add
and
sbb
xorb
leave
jl
mov
jb
pusha
jb
shr
aad
mov
sub
sahf
test
fbstp
jnp
rcr
clc
out
cmp
sti
into
mov
into
lods
add
aas
mov
shrl
inc
sbb
mov
jmp
subl
mov
mov
xor
and
xchg
jmp
and
mov
enter
enter
xchg
mov
ss
sub
push
js
out
mov
mov
or
shlw
push
jg
ficomps
fldl
mov
ss
ss
int
popa
inc
push
mov
or
sub
ss
xor
shll
fwait
lock
jno
inc
lods
cld
ret
movsb
fadds
inc
orl
mov
jns
lcall
shl
mov
in
call
jo
jle
bts
fbstp
enter
fsts
push
rorl
sarb
fcmovnb
jg
dec
sbb
cmpsb
jg
pop
dec
xor
inc
sub
loop
mov
addr16
loopne
lcall
jecxz
icebp
cwtl
sub
fisttps
xor
jmp
setg
mov
dec
xchg
mov
lret
mov
push
mov
adc
adc
rolb
into
pop
cmp
cmp
fists
xchg
das
insb
xor
inc
cld
dec
movl
and
cmpsl
loopne
loope
jno
mov
ja
and
inc
jae
fadd
insb
inc
sti
mov
cmp
xchg
cmp
lahf
sbb
les
or
sub
repz
xor
push
aas
push
es
jns
pushf
inc
mov
int
cmp
fdivl
test
sar
push
or
test
push
arpl
nop
push
in
in
jb
pop
test
leave
mov
sub
insl
pop
lods
bnd
xchg
test
fwait
in
xchg
xor
sarb
mov
lds
mov
mov
cmp
inc
int3
mov
lcall
xchg
fldcw
xchg
sub
or
pop
inc
sbb
pop
mov
rcr
dec
inc
cmpsl
out
call
int3
clc
mov
push
mov
setae
test
cmpsl
icebp
push
mov
add
cmp
out
or
sub
push
data16
shll
or
lret
psubsw
mov
enter
and
pop
test
out
add
dec
jmp
inc
xor
lret
jae
pop
inc
mov
std
pop
popa
mov
aas
test
push
push
inc
mov
and
pop
stc
mov
inc
dec
js
lods
mov
subb
mov
xor
push
ljmp
mov
insl
std
dec
test
mov
aad
lods
add
pop
inc
pusha
std
mov
je
push
dec
sub
or
fldcw
lea
nop
mov
subb
sbb
sbb
jmp
out
or
mov
rorb
jns
addr16
push
add
out
dec
das
icebp
cmp
or
nop
jp
leave
pushf
pop
lcall
aad
loope
cmp
rorl
push
js
or
ljmp
gs
das
add
gs
adc
inc
adc
add
xchg
stos
bound
in
fisttps
arpl
aas
xchg
jl
jecxz
nop
push
mov
jno
add
inc
shll
xchg
fnsave
subl
mov
in
lock
loope
mov
sarl
es
or
rcrb
shlb
inc
xlat
mov
test
vmovsldup
lcall
stos
jb
mov
mov
rcrl
pop
daa
sub
inc
lret
test
repz
lock
push
dec
lahf
incl
call
mov
mov
fs
lea
hlt
adc
hlt
xrelease
push
mov
push
mov
mov
cwtl
lods
sbb
mov
loop
fcomps
loope
lock
add
inc
inc
cmpl
mov
adc
lods
jl
xor
xor
dec
pop
jae
ret
lods
lea
stc
push
dec
mov
lahf
xchg
or
faddl
mov
je
and
push
adc
sbbb
leave
sbb
cmp
outsb
fst
ds
enter
lret
data16
in
aam
push
cmp
and
or
cmp
call
push
pop
push
test
inc
jmp
mov
imul
inc
pop
into
icebp
call
sbb
mov
into
sbb
adc
cmp
add
cli
jno
mov
in
clc
scas
lret
sbb
jns
cmpl
call
mov
mov
mov
sbb
fcompl
xchg
dec
xor
add
cs
inc
adc
ss
push
std
sub
jle
pushf
outsl
fwait
adc
repz
push
pop
in
pop
dec
inc
push
xchg
push
cltd
mov
cmp
sarb
sti
mov
idivl
sbb
xchg
loopne
xchg
divl
sub
mov
jmp
add
fisubrs
mov
lcall
fisubrs
lods
pop
movsb
mov
xchg
das
mov
dec
repz
xlat
xor
or
jg
mov
pop
cmp
push
inc
cmp
outsl
jno
popa
movsl
jo
shlb
xor
fstpl
add
cmp
fmul
fwait
dec
lock
xor
ret
das
fwait
add
jle
cld
ret
mov
cmp
cmp
int3
xchg
mov
int
add
push
jmp
and
mov
test
inc
pop
ljmp
jl
xchg
adc
test
je
fsubl
sti
gs
fistps
in
adc
cmp
adc
mov
adcb
inc
sbb
mov
cmp
push
xchg
add
cmp
rcrb
icebp
mov
dec
sbb
pop
rorl
out
cli
fdivr
fsubl
sub
mov
mov
xor
cs
pop
icebp
jmp
add
vucomisd
dec
ja
fwait
int3
jbe
inc
cs
daa
cltd
in
movl
push
inc
fnstenv
jne
cltd
dec
enter
dec
cmp
jns
pop
stos
jmp
or
enter
lret
enter
push
push
pop
push
mov
or
clc
adc
icebp
adc
xchg
mov
sahf
sub
jecxz
js
popa
dec
cmpsl
inc
iret
insl
mov
lcall
cli
dec
test
rcr
adc
ds
mov
bound
lods
outsb
mov
into
inc
loop
fwait
mov
xchg
mov
lea
rcrb
cmp
push
aas
repz
inc
or
mov
mov
addl
repz
and
cmp
xchg
fs
xchg
add
jge
pusha
pop
ds
jecxz
sub
fs
jae
jle
daa
sub
push
movsb
mov
imul
pop
cmp
sbb
ret
mov
jne
fwait
into
jl
sub
push
cmpsb
lahf
out
xor
push
int
mov
xchg
ror
and
push
cltd
icebp
xor
push
divl
call
out
std
mov
jbe
inc
not
loop
rorl
push
addl
dec
outsb
scas
scas
into
in
push
js
insb
push
lock
dec
aaa
sbb
mov
xor
scas
add
dec
in
sub
loope
addr16
sub
inc
in
fs
hlt
cmpsl
xchg
sub
mov
inc
xchg
ret
push
lahf
lods
test
lea
movsb
mov
dec
movsb
dec
mov
imull
in
lea
cmp
fisubrl
jne
adc
addb
inc
push
cli
mov
mov
in
sbb
cmp
mov
incl
aam
sahf
bound
mov
in
sub
pop
lret
fimuls
inc
mov
maskmovq
negl
adc
lcall
sub
loop
cltd
aaa
rorb
shll
test
pop
inc
out
aaa
pop
scas
add
je
and
in
and
cmp
inc
sub
pusha
sbb
mov
push
sbb
movsl
imul
test
sbb
scas
arpl
push
inc
jne
popf
outsl
mov
fidivl
jb
adcb
mov
scas
jmp
lea
jno
cmp
jmp
stos
aad
iret
mov
pop
mov
fmulp
dec
and
mov
push
clc
mov
call
add
testb
inc
pop
push
mov
xor
cmp
jmp
out
fwait
cld
pop
fmuls
ljmp
jnp
nop
mov
bound
aad
jg,pt
dec
push
in
xchg
jle
into
ffree
mov
iret
je
lock
jno
imul
push
xchg
inc
mov
sti
test
add
lcall
jecxz
in
add
das
loop
jmp
sbb
xchg
fists
inc
mov
cmp
cmp
cltd
shr
stos
dec
add
les
dec
sahf
jle
popf
xchg
sub
cld
cld
scas
out
loope
dec
subb
sub
popf
jge
movb
dec
and
insb
push
loope
pop
cmp
adc
lret
mov
xchg
sbb
fwait
movsb
movsb
lret
mov
mov
lcall
pop
cmp
mov
call
sbb
mov
in
push
in
inc
divb
mov
enter
jnp
lcall
aas
fbstp
cs
into
inc
rcr
xor
int3
lcall
in
in
xchg
sbb
inc
leave
sub
out
jae
sub
jo
jge
or
inc
sbb
xor
add
mov
addr16
repnz
cmp
cmp
mov
add
sbb
dec
push
xchg
push
adc
jecxz
pop
aas
pop
ror
push
sub
aad
sarb
mov
in
popa
insb
lock
pop
mov
cmp
push
neg
or
scas
pusha
popa
and
xor
or
and
pop
bound
enter
insb
sub
and
jecxz
mov
into
ds
sbb
ds
into
je
stos
jns
pop
xor
add
pop
addr16
out
add
xor
mov
enter
mov
cmpsb
sbb
xor
jns
lret
fiadds
scas
xor
push
or
loope
mov
inc
pop
xchg
loope
aaa
ja
sarb
and
inc
out
or
fimull
sub
pop
loop
fdivs
leave
pop
fisubl
test
lcall
push
adc
mov
sub
pusha
pusha
mov
je
adc
testl
icebp
push
les
mov
mov
mov
and
pusha
and
jl
lock
push
in
cmc
mov
test
push
and
fildll
je
mov
or
fisubs
stos
jo
mov
iret
add
add
pusha
and
faddl
mov
dec
mov
lret
fstp
dec
rcr
and
mov
fmull
lods
mov
cmpl
scas
popf
inc
mov
cmp
loop
bound
push
pop
and
mov
icebp
scas
out
subl
jp
push
pushf
negl
stos
mov
sbb
or
test
add
icebp
mov
fldl
pop
std
cmp
cmp
jne
or
arpl
sbb
mov
cmpsb
call
fwait
outsl
add
movsb
sbb
mov
movb
cmpsb
mov
fwait
dec
cs
fstpt
sbb
scas
pop
fisttpl
inc
mov
lret
xchg
push
cmp
arpl
cmp
xor
imul
adc
and
jae
loop
jmp
cmp
arpl
imul
add
pop
loopne
add
push
cwtl
ret
fstpt
sti
jg
data16
mov
je
xlat
jo
xchg
inc
popa
cli
add
xchg
xchg
in
hlt
xor
sbb
mov
into
in
test
xlat
aam
hlt
js
mov
lcall
loop
aaa
shlb
mov
pop
stos
jl
push
movsl
mov
mov
shrb
jl
stos
inc
cltd
push
popf
imul
shrl
push
daa
lock
mov
xchg
movsl
fs
mov
std
inc
dec
call
cmp
pop
dec
xor
das
cli
jp
adc
in
push
outsl
push
push
cmp
jno
xchg
data16
outsb
dec
pop
mov
or
test
movsb
pop
cmp
xchg
inc
insb
in
cmp
mov
into
mov
sahf
sub
sub
sub
cmpsb
pop
popa
inc
shlb
das
rolb
pop
inc
xor
mov
rol
add
and
std
sbb
mov
add
leave
enter
ficoml
lret
add
adc
cmp
fsubp
cmp
mov
or
jle
repnz
push
inc
pushf
scas
mov
inc
mov
adc
mov
add
daa
dec
sbb
int
pop
movl
dec
ljmp
push
push
pop
mov
jbe
insl
or
jno
add
leave
xchg
in
or
imul
repnz
icebp
loop
lea
cld
cmc
xor
mov
pop
or
sti
lcall
lcall
shlb
das
neg
insl
xchg
loopne
jg
test
mov
std
call
mov
xor
sub
test
jns
push
sbb
fwait
icebp
xor
inc
orb
xor
pop
xor
jae
fcomps
into
pop
and
cld
lcall
cmp
add
test
xchg
push
sbb
pop
jb
pop
fwait
and
aas
mov
mov
setl
les
imul
sbb
push
pop
or
daa
sbb
pop
scas
into
outsl
loop
insl
out
jns
pop
add
mov
mov
bound
and
stc
push
jle
push
dec
lods
pop
push
inc
lret
in
add
lds
mov
sub
inc
into
sub
cmpsl
sub
sub
jge
mov
idivl
divl
gs
cmpsb
mov
xlat
mov
dec
jae
sub
and
inc
sahf
aaa
push
out
mov
test
xorb
jecxz
xchg
xorb
push
sbb
mov
cli
adcb
aas
xor
dec
sub
adc
xorl
out
rcll
xor
mov
lcall
xlat
clc
mov
cmp
movsl
hlt
cmpb
stos
mov
add
movb
data16
out
jns
cs
mov
mov
push
jg
popa
push
andl
out
in
pusha
les
aam
lret
test
inc
sub
jl
mov
out
inc
xor
stos
jnp
aad
push
jle
outsl
movsb
add
mov
xchg
imul
jae
jne
push
adc
in
call
lahf
cmpb
mov
arpl
movsb
jmp
cwtl
xchg
pop
sahf
js
sbb
xchg
in
sbbb
jp
mov
push
cmp
push
fists
xchg
aam
lret
dec
push
jnp
mov
mov
cltd
or
in
dec
mov
ret
pushf
outsb
call
mov
xchg
pop
iret
xor
int3
das
lods
imul
loop
sbb
xchg
jo
mov
push
repnz
sbb
xchg
xchg
xchg
out
cld
lcall
ja
or
out
notl
jns
jecxz
hlt
stos
lret
xchg
mov
sub
mov
inc
dec
pop
cmp
lods
insb
mov
test
jne
popa
test
add
mov
add
rcll
loop
xchg
cmp
out
lahf
xchg
pop
cmp
or
stc
cmpsl
call
fists
push
adc
shll
add
mov
dec
push
mov
fildl
nop
vprotq
pop
clc
jns
outsl
js
sub
sub
push
add
mov
stos
or
xchg
inc
je
fs
xchg
sahf
call
mov
popf
adc
shll
rep
push
push
std
jmp
mov
or
out
leave
pop
xchg
push
subb
inc
lods
and
cmc
push
inc
cltd
adc
sbb
jp
mov
adc
xchg
mov
mov
loope
jb
dec
pop
sub
xor
inc
xlat
ret
das
dec
popa
es
mov
or
mov
inc
fsubr
or
and
xchg
add
jl
sarl
call
and
lcall
fcmovbe
gs
mov
stc
lret
or
dec
xchg
js
inc
mov
push
cmp
mov
lds
mov
mov
pop
mov
aam
dec
les
fcmovnbe
loope
adc
lods
jg
and
pusha
xchg
xchg
sub
xor
clc
inc
jecxz
xchg
push
mov
lods
je
fisttps
aam
xchg
cli
aam
xlat
cmp
bswap
adcl
push
jno
sti
cli
and
popl
push
inc
and
xchg
aad
xchg
outsl
mull
push
aam
mov
leave
sbb
or
push
mov
ss
dec
in
repz
mov
ja
dec
call
xchg
cmovo
mov
or
jl
mov
fs
or
test
push
hlt
pop
out
lret
xor
int3
cld
out
cmc
scas
arpl
aam
add
cmp
and
pop
aam
enter
sti
shll
mov
fsubr
lea
fsts
in
xor
lcall
inc
cmc
daa
mov
mov
sahf
jmp
xlat
out
arpl
aas
ss
comiss
push
addl
push
sarb
mov
sub
xor
xchg
imul
mov
inc
into
fiaddl
push
add
cmpsb
sti
int3
cltd
arpl
sti
leave
and
and
int3
or
stos
stos
jecxz
sbb
jl
bound
mov
push
les
pop
cmpsl
xchg
inc
inc
xchg
or
pop
js
inc
and
push
arpl
mov
jge
jne
rorb
jl
scas
mov
push
mov
in
movsl
ss
insb
ja
inc
ret
ret
test
push
xchg
xchg
or
sbb
cwtl
movsb
jo
xchg
mov
movsl
jb
mov
jl
cmp
and
pushf
pop
ret
icebp
imul
out
sub
pop
xlat
nop
sbb
add
cmp
or
test
scas
test
test
mov
mov
leave
push
andl
popf
mov
mov
repz
push
movl
push
stos
cltd
cmp
daa
and
fsubrp
jp
xchg
mov
cli
push
or
rolb
lea
pop
xchg
mov
ret
rcl
mov
pop
stc
and
or
sbb
add
loope
ss
mov
adc
out
adc
inc
scas
test
xchg
aaa
pop
daa
push
xorb
mov
fst
js
sbb
mov
xchg
sbb
jl
mov
into
and
ds
add
sbb
mov
sti
lcall
sub
cmpsb
jg
das
test
xor
rolb
jb
mov
cmp
sub
dec
adc
jl,pn
std
xchg
xorb
clc
stos
shrb
sbb
sub
add
in
loopne
add
jmp
mov
dec
std
aaa
sub
cs
out
subl
or
or
cmpsb
cmp
pushf
push
imul
mov
mov
cmp
sub
jg
mov
mov
stos
in
sub
push
xor
das
ljmp
sti
pop
xor
dec
sti
xor
xor
stos
les
pop
xor
das
add
adc
and
das
push
fwait
rcrl
scas
or
mov
popa
stos
push
aas
shrb
jne
movsb
fsubrs
mov
es
fs
adc
mov
mull
ret
pusha
add
mov
mov
lds
xchg
pop
add
leave
sbb
fnstcw
lock
out
and
mov
xchg
push
sbb
roll
mov
xchg
cmpb
mov
jb
add
repnz
or
mov
push
jno
pusha
pop
push
mov
cmp
inc
mov
insl
popf
adc
add
iret
xor
jl
sub
mov
scas
dec
sbb
mov
das
and
popl
adc
lret
pop
jae
mov
push
adc
divl
sar
stos
adcl
push
mov
fstp
sub
jp
jo
cmp
adc
subb
mov
xchg
mov
xchg
adc
mov
loop
xchg
sbb
loope
jge
divb
sarb
cmp
leave
clc
inc
jne
mov
pop
add
mov
push
roll
mov
xchg
out
leave
jae
addl
pop
or
inc
les
ja
add
std
fsubr
adc
dec
push
packssdw
test
push
push
dec
fdivl
xor
ret
jno
and
mov
add
xchg
sarl
dec
and
dec
pop
dec
in
pop
push
push
pop
mov
icebp
xchg
fcmovbe
mov
jmp
shlb
addr16
or
leave
es
adc
mov
push
xor
inc
or
dec
cmc
lahf
mov
xlat
fisubrs
rcl
test
xor
mov
mov
mov
daa
fcoml
sub
lahf
add
inc
dec
pop
stc
fisubs
in
add
das
aam
fmull
popa
mov
jl
scas
fcmovu
push
gs
out
movsb
push
fs
insl
shrb
in
xchg
xchg
or
mov
sbb
scas
nop
push
icebp
mov
push
cmc
pop
repz
mov
add
in
inc
leave
cmp
inc
inc
movsb
xorl
mov
stos
stc
stos
xchg
shlb
dec
jl
lahf
roll
and
hlt
jle
jmp
imul
add
inc
mov
dec
pop
leave
lret
cmp
mov
out
or
or
fcmovb
out
int3
jno
repnz
push
push
out
cltd
mov
and
push
mov
jecxz
push
and
arpl
mov
ret
sbb
inc
aas
and
sti
dec
inc
in
lods
lea
sub
sbb
and
idivl
fistpll
rclb
imul
cltd
mov
lds
gs
cmp
bound
popf
xchg
inc
mov
in
mov
daa
aad
dec
jo
roll
iretw
or
lret
mov
dec
ret
adcb
movsb
inc
lods
inc
cwtl
ja
cld
mov
mov
add
test
push
push
xor
dec
ret
lahf
popf
rolb
lds
mov
loope
adc
pop
jae
xchg
sbb
cmp
mov
fsubrl
int3
pop
fwait
cs
push
lahf
scas
xor
xchg
arpl
mov
fildll
hlt
pop
call
mov
aas
cmpsb
adc
push
xchg
imul
lret
and
pop
and
push
inc
xor
mov
add
mov
dec
ret
mul
adc
mov
in
pop
iret
imul
jle
inc
add
jae
jb
push
push
push
pop
mov
into
in
sti
xchg
or
xchg
fwait
xchg
mov
push
je
sub
stos
xor
dec
movsb
jmp
cmp
dec
stos
xchg
push
jns
lret
rcl
pop
jbe
lea
add
aaa
mov
test
xor
add
int
cmp
mov
arpl
testb
ss
jle
int
mov
aad
push
cmp
stos
stos
sahf
dec
test
gs
in
dec
jo
jmp
dec
nop
pusha
sub
jne
test
inc
mov
outsl
xor
inc
and
out
add
sahf
mov
add
int
jno
push
arpl
inc
sub
xor
data16
push
add
arpl
inc
call
pop
sti
lds
outsb
cmp
fwait
mov
in
dec
push
pop
in
out
outsl
push
jnp
add
xchg
ja
mov
mov
popa
adc
push
jmp
push
inc
and
push
loope
adc
or
jnp
mov
imul
int3
leave
mov
mov
adc
sbb
sbb
adc
stos
loopne
lds
call
sbb
jp
push
fwait
and
fs
cmp
ljmp
mov
xor
xlat
or
xchg
mov
ljmp
inc
mov
xchg
cmpsb
test
aam
sub
insb
mov
push
stos
cwtl
xchg
inc
pusha
xchg
xchg
xchg
xor
mov
jnp
ljmp
jo
push
ret
ds
inc
inc
jl
cli
push
repnz
and
mov
mov
out
leave
insl
add
mov
push
or
das
loope
cltd
or
and
aam
pop
mov
arpl
pop
push
mov
mov
mov
inc
xchg
popa
mov
adc
outsb
xchg
outsl
pop
vmfunc
xchg
shl
and
mov
sbb
divb
popf
out
sbb
xchg
sbb
and
addr16
cmp
mov
lret
lods
sti
inc
call
mov
das
vminps
dec
push
addr16
in
lds
lret
adc
cmp
and
inc
testb
in
lea
ds
sahf
cmpsb
cmp
cmp
push
js
lcall
jb
inc
jae
pop
in
sub
xchg
iret
fs
mov
int3
cmp
jl
xor
mov
dec
pop
dec
push
xchg
pop
jp
push
shll
mov
add
mov
xchg
movsl
iret
lea
jg
inc
xchg
cmp
aad
cmp
dec
test
jnp
inc
mov
sub
push
push
in
sub
jbe
mov
popa
into
and
push
cmpsb
sub
lock
jmp
loop
daa
fstpt
xchg
cmp
or
push
dec
mov
gs
cmp
mov
xor
adcl
jecxz
bound
add
in
mov
inc
dec
outsl
push
push
cld
jle
enter
pop
fdivp
mov
cmpsb
insb
repnz
in
aaa
mov
pusha
lahf
loope
ds
clc
clc
rol
je
fdivrs
and
dec
aaa
testl
dec
test
or
leave
stos
xor
nop
mov
add
jno
mov
rorl
push
stc
inc
jbe
movsl
inc
xchg
call
mov
xchg
xor
orl
dec
dec
in
lea
jmp
mov
xlat
aaa
mov
cli
pop
out
aaa
jbe
cltd
adc
nop
lods
outsl
das
jle
inc
mov
psubd
dec
or
stc
mov
push
rolb
cmp
xchg
cmp
jp
sar
sub
mov
mov
pop
test
js
xorb
jns
jge
mov
xchg
sub
mov
movsb
mov
ss
fwait
push
mov
sub
jno
lret
test
rorb
test
icebp
inc
xchg
mov
mov
call
repnz
popf
inc
ficoms
loope
pop
push
or
push
stos
jae
aam
adc
inc
xchg
sbb
jp
stos
sbb
xchg
ret
xchg
xchg
ss
jg
sti
bound
sbb
andb
inc
lret
addr16
fdiv
mov
xor
les
aam
jns
push
inc
ds
inc
jnp
out
adc
xor
scas
scas
and
push
icebp
pop
shlb
fcmovne
jbe
es
test
iret
mov
push
out
adc
jmp
aaa
xchg
outsl
xor
and
repz
sub
cmp
dec
sti
dec
test
mov
call
or
test
push
stos
shrb
xchg
mov
inc
adc
adc
push
sub
jb
jne
xor
mov
testl
sub
jl
mov
lods
fstpl
fnstenv
outsl
test
test
gs
push
sbb
inc
arpl
add
sbb
add
jb
lds
inc
mov
cmp
pop
fdivrl
pusha
xchg
cmp
and
fwait
jnp
sarb
gs
das
out
sub
cmpsb
inc
adc
and
xchg
incl
inc
and
mov
ss
rolb
mov
testl
mov
pop
aam
jmp
fiadds
add
mov
cli
xor
lahf
lea
adc
out
or
push
pusha
xchg
lret
mov
into
repnz
xor
out
cmc
scas
fst
repnz
sub
mov
cmpsl
cmp
test
and
inc
mov
test
pop
fcom
fwait
lea
sbb
cmp
add
call
insl
xor
jns
or
xchg
popa
out
icebp
outsb
push
out
pop
mov
mov
and
js
jge
sbb
popa
or
loopne
insb
mov
imull
aam
cmp
mov
fmuls
or
xor
mov
and
inc
out
inc
cmovbe
lahf
sahf
stos
inc
mov
dec
out
and
sub
sahf
mov
hlt
mov
or
movsb
movsl
movsl
rolb
or
ljmp
fwait
sbb
adc
and
push
mov
gs
sub
xchg
std
ffree
dec
dec
in
loope
jmp
mov
sub
add
inc
fistpl
mov
add
fistps
jge
xchg
out
cwtl
jmp
pop
or
ss
test
cld
xchg
jne
pop
adc
iret
sarl
sub
jne
das
test
or
fldenv
or
mov
mov
popf
dec
es
outsl
push
ljmp
imul
xor
xor
into
fs
mull
mov
pop
lea
outsb
mov
jb
lods
pop
adc
mov
fldcw
in
cmp
pop
sub
xchg
out
imul
mov
cmp
lods
ret
xor
ss
xor
imul
add
add
pop
xchg
cltd
mov
decl
test
sarl
mov
mov
in
dec
and
int
mov
test
or
cmp
fisttpll
mov
iret
and
lret
xor
iret
pop
in
cmpsl
lret
repz
dec
pop
subl
lret
or
xchg
mov
sub
es
enter
jge
jns
sub
pushf
rcll
mov
and
lcall
cmp
mov
fdivr
mov
jne
dec
test
mov
jae
aaa
imul
pop
and
int
dec
movsl
adc
adc
les
insl
cmc
mov
inc
and
pop
adc
or
fidivrl
leave
or
xchg
sbb
dec
cmp
push
cli
pushf
sarl
stos
xlat
push
inc
xchg
fldenv
dec
mov
aam
movsb
inc
jae
push
adc
push
fidivl
xchg
xchg
call
and
mov
std
add
and
cmp
jnp
sub
scas
mov
or
imul
adc
cli
mov
mov
in
pop
mov
cltd
inc
sbb
ja
jmp
aaa
out
aas
lret
adc
inc
orb
mov
fs
xchg
jmp
push
jbe
sbb
imul
stos
jl
clc
sbb
das
in
nop
mull
mov
xor
xchg
mov
push
sarb
or
mov
icebp
aam
push
mov
xor
jmp
sbb
ds
divb
les
mov
mov
xor
inc
outsb
jg
mov
add
pop
or
fwait
xchg
or
shl
inc
pop
cmp
popf
fisubs
leave
jne
dec
jecxz
je
in
pop
fwait
fs
add
aaa
nop
jge
pop
ljmp
in
adc
push
sub
mov
mov
add
stos
arpl
into
jge
in
sbb
cld
clc
stos
inc
push
cmp
in
inc
in
mov
faddl
pop
insb
in
push
scas
inc
and
cmp
push
shll
xchg
mov
push
enter
prefetchnta
sub
pop
pop
popf
push
dec
or
aad
fsubrl
xor
jae
mov
sbb
orl
aam
mov
sbbb
loopne
push
sub
xor
jno
jb
jmp
lcall
rcl
xor
push
cmp
mov
mov
dec
jbe
push
jle
scas
add
mov
lds
mov
and
out
adcl
add
jnp
inc
ret
pushf
jo
jne
or
imul
push
lods
sarb
sarb
mov
cmovp
add
hlt
fsts
sub
mov
es
sub
sahf
and
insl
fprem
js
loopne
in
test
repz
stos
push
lea
in
lcall
mov
test
stos
mov
xor
inc
mov
mov
mov
stc
mov
icebp
movsl
divb
je
dec
jno
test
nop
repnz
mov
lret
xchg
sbb
pop
sbb
imul
adc
setne
cli
sub
sbb
sahf
jns
int
ret
xor
cmpsb
imul
xchg
cs
xchg
fisttpl
fwait
in
cmpl
dec
pushf
repz
dec
mov
movsl
aaa
inc
mov
roll
sub
lds
inc
test
mov
cwtl
xlat
xchg
out
imulb
adcb
decl
ja
int3
jae
inc
stos
scas
loop
stos
nop
insl
sub
arpl
jg
jecxz
lret
ss
xchg
and
mov
shlb
pop
aaa
inc
inc
popf
xchg
les
xlat
xor
loope
out
and
cmpsb
outsl
movsb
adc
cwtl
imul
push
lock
ret
and
bound
loope
pop
xchg
in
jno
push
out
loopne
mov
and
inc
sub
xchg
movsl
lcall
jp
cli
cmpl
sahf
lcall
sahf
aaa
inc
aas
nop
in
jns
xor
mov
inc
and
ljmp
xlat
adc
jge
lock
les
mov
ljmp
imul
bound
push
push
mov
sbb
push
xlat
sub
cwtl
loop
idiv
sbb
out
pop
js
sbb
shll
das
mov
cmp
out
test
push
or
inc
dec
fsubl
mov
subb
push
adc
lods
and
sarl
inc
sahf
mov
adcb
imul
add
xchg
or
enter
push
mov
mov
and
js
bound
cli
mov
or
ret
insb
push
and
mov
call
call
sbb
adc
addr16
mov
sub
iret
pop
fwait
and
sub
push
jbe
mov
jp
mov
dec
inc
and
sbb
mov
cmp
mov
push
adc
mov
and
cmp
push
pushl
adc
and
das
imul
dec
mov
sti
sbbb
dec
inc
stos
jae
and
cmpl
data16
pop
scas
movsb
insl
inc
les
outsb
jp
xchg
int3
mov
inc
adc
repz
lds
sub
je
sahf
push
in
pop
lock
pop
pushf
rolb
mov
mulb
fcoml
xchg
dec
repnz
mov
mov
es
push
xor
sbb
adcb
icebp
dec
enter
sub
into
insl
dec
insb
mov
cmc
stos
fstl
int
leave
fwait
inc
push
mov
pop
sub
mov
cmp
in
insl
push
stos
int3
lods
inc
mov
mov
add
lahf
pop
xor
ss
dec
pmaddwd
pop
in
test
rcpps
bound
or
and
push
loope
pop
mov
aad
in
scas
stos
sbb
pop
xchg
fsubrl
jo
push
aam
in
sub
xchg
inc
jbe
jo
sub
sbb
sub
mov
dec
sbb
insl
push
jae
dec
jno
dec
test
stos
arpl
outsl
sbb
ret
push
fsubl
fnstenv
push
es
push
xchg
xor
fsubp
adc
mov
cmpsb
adc
jns
scas
dec
sbb
xchg
js
shlb
dec
roll
enter
cli
or
in
xchg
push
repz
sbb
je
in
jg
enter
cmp
mov
xchg
push
dec
ljmp
xchg
pop
xchg
cmpl
push
cmp
and
iret
and
shlb
push
cmpsl
mov
push
stc
sbb
sub
pop
push
int3
push
daa
mov
sbb
jmp
sub
cltd
lret
mov
clc
notb
int
mov
xchg
xchg
inc
roll
dec
sarb
dec
push
xchg
inc
jg
xlat
xor
and
inc
insl
fsubrl
fcomps
testb
data16
sub
cmp
popa
imul
gs
repz
add
push
cli
sub
loopne
pop
jno
test
scas
lcall
jnp
mov
call
lods
cmp
jmp
aam
pop
or
add
stos
jns
cmpsl
push
mov
inc
imul
sbb
lcall
and
pusha
sub
aas
lahf
adc
xchg
mov
sub
or
xchg
addl
shlb
call
pop
or
pop
subb
in
and
movsb
fsubl
icebp
imul
enter
dec
add
ret
faddl
add
pop
pop
add
notl
out
lahf
std
mov
iret
out
sub
fcompl
lcall
cmp
stos
cmp
stos
jae
sub
testb
les
lea
adc
inc
pop
inc
add
int
add
xchg
xchg
jl
daa
test
xchg
les
mov
push
push
jge
xor
lret
out
sbbl
insl
sub
in
ja
gs
mov
push
xchg
mov
add
insb
loop
push
cld
bound
dec
inc
iret
xor
push
fidivrs
mul
jmp
adc
dec
push
jb
jb
fistl
and
bound
or
stos
icebp
cmp
imul
cmpsl
outsb
push
jno
and
jne
aaa
into
scas
jae
push
sbb
sbb
mov
sub
mov
mov
popf
fisttps
jmp
sub
insb
ret
enter
sub
xchg
inc
hlt
stc
jg
mov
jne
pop
int3
or
mov
cmp
bound
out
ret
mov
sub
out
into
outsb
pop
in
push
lods
cmp
jl
mov
mov
sbbl
in
clc
mov
insl
mov
xor
dec
lret
arpl
mov
in
cmp
mov
lcall
stos
adc
pop
dec
adc
and
push
js
shll
inc
lahf
popa
pusha
icebp
shll
out
arpl
pop
xchg
movsb
fldt
jge
js
fdivrl
imul
dec
jp
movsl
adc
xchg
pop
sbb
arpl
xor
pop
mov
fwait
xchg
adc
lods
push
fiadds
sub
xchg
mov
sub
jecxz
inc
mov
mov
insb
nop
push
mov
stos
add
mov
mov
les
inc
push
mov
insl
test
pop
pop
jb
and
scas
nop
ss
push
addl
or
inc
cltd
cmp
dec
dec
mov
dec
sbb
push
mov
nop
and
dec
test
stos
pop
ss
hlt
ja
inc
sbb
add
aas
pop
lds
push
addr16
mov
cmp
mov
adc
arpl
mov
jmp
incb
lock
fld
roll
jne
sbb
add
jmp
repnz
es
and
popa
push
leave
mov
loopne
out
aam
jns
and
enter
lret
pop
add
pop
xchg
mov
in
int3
xor
std
popf
sbb
sbb
inc
cmpsb
jnp
dec
ljmp
movsl
jl
jo
adc
dec
popa
jl
add
sets
xchg
aaa
inc
adc
cwtl
ss
or
push
inc
adc
push
sub
cmp
dec
push
dec
cld
mov
xlat
inc
clc
les
ljmp
outsl
inc
popf
adc
sub
stc
arpl
sbb
pop
ljmp
es
or
cmp
xchg
movq
jg
fsubs
and
adc
jb
push
jg
dec
mov
mov
mov
or
xchg
in
sbb
mov
mov
adc
push
icebp
jne
test
and
mov
mov
insl
int
pop
sub
call
arpl
divb
xor
jns
jle
shl
xchg
mov
sarl
xchg
bound
es
mov
sub
jbe
cmpsb
mov
or
lock
xchg
dec
test
leave
test
pop
jp
fdiv
dec
test
enter
sbb
mov
mov
inc
xor
mov
xlat
cmpsl
push
ja
mov
pusha
pop
movsb
inc
les
loope
lock
push
adc
jecxz
mov
sub
fbstp
in
and
lods
cmpsl
xor
gs
cmpsb
inc
lcall
mov
lcall
decb
fdivrl
in
or
pop
in
add
push
nop
les
or
cmp
dec
out
push
mov
jecxz
insl
mov
mov
test
in
adc
inc
sbb
cmp
and
jo
mov
dec
jmp
out
or
cmc
dec
sar
mov
fdivl
pop
pop
sub
push
xor
lahf
outsl
in
cld
inc
das
pop
shl
aas
movsb
jno
and
stos
mov
ffreep
and
aam
xlat
cmp
mov
xchg
push
aaa
sub
in
ds
bound
cwtl
mov
iret
mov
pop
aam
fsubl
adc
repz
fisttpl
dec
jns
mov
dec
arpl
mov
fbld
mov
mov
and
sbb
fadds
dec
xchg
sub
fsubl
push
jmp
movsb
bound
sub
jne
push
int
xchg
inc
popf
add
mov
test
das
pop
stc
addb
cs
aaa
daa
pushf
lret
cwtl
cwtl
xor
fst
ficoms
aad
in
sub
inc
insb
hlt
lahf
pushf
cmpsl
scas
das
fisubrs
jbe
mov
addr16
sahf
xlat
xor
push
ds
shll
lahf
or
cs
stc
push
fisubrs
jp
cmp
and
test
mov
add
inc
sbb
adc
adc
popf
add
repz
push
lret
lcall
cmc
xchg
xchg
xor
cmp
jmp
mov
fcoml
jle
sahf
jbe
jg
mov
push
xor
pop
pop
jnp
aam
ja
push
repnz
fldt
scas
repz
jno
pop
shr
cmp
test
dec
mov
pop
and
push
cmp
les
push
jns
movsb
es
lds
rcll
xor
fisttps
subl
dec
ss
adc
sbb
fs
jns
outsl
jmp
cli
out
cli
cld
cld
lods
iret
test
pop
test
mov
adc
push
divl
insl
das
jne
mov
scas
and
loop
xchg
insb
imul
jmp
sub
test
iret
fwait
xor
sbb
lods
push
test
iret
jnp
jp
aas
sub
ficomps
adc
dec
inc
aad
and
ret
les
aam
shrl
xor
push
inc
stos
daa
cmpsb
inc
xchg
xor
into
mov
jecxz
gs
fyl2x
cmp
mov
add
cmp
cmp
mov
lret
hlt
das
mov
xor
jecxz
dec
push
and
mov
mov
jmp
jb
cmp
jnp
flds
add
push
pop
xchg
push
mov
push
ret
or
daa
dec
loop
cmp
dec
mov
mov
and
fcmovb
out
jp
fwait
mov
xor
lock
stos
mov
aas
scas
xor
pop
xor
repnz
jg
cmc
push
mov
fs
shl
stc
pop
ret
adc
sub
loopne
mov
repz
cmpsl
incl
sbb
imul
daa
hlt
jge
pop
xchg
mov
jae
mov
sub
lods
vpmacssdd
pop
pushf
call
adc
insb
push
or
fmul
sbb
sbb
nop
and
mov
lock
inc
divb
inc
out
test
add
sbb
pushf
repnz
bound
fisttps
out
jge
jecxz
push
cmc
scas
cmpb
aas
outsl
decb
inc
inc
mov
xchg
mov
lcall
pop
loop
into
sub
xlat
icebp
enter
dec
push
aad
roll
mov
mov
add
inc
or
clc
rolb
push
in
inc
and
negb
repz
lea
or
arpl
jecxz
xchg
stc
pushf
and
scas
xlat
popf
and
lods
ss
ljmp
lea
mov
roll
dec
cmp
mov
call
movsb
pop
addb
shrl
and
pop
push
cmpsl
stc
pop
scas
add
mov
add
cmp
xchg
jp
inc
jae
neg
loop
xchg
pop
in
add
cwtl
adc
jno
shrl
outsl
jb
mov
add
pop
push
push
push
lea
adc
inc
fwait
fwait
insb
cs
int3
jmp
js
hlt
insb
ficompl
dec
xor
jp
adc
cmp
pop
inc
inc
out
bnd
dec
lahf
repnz
das
mov
push
ljmp
push
and
pop
cmpsl
mov
fimull
jns
push
lea
andb
pop
ljmp
or
fiaddl
mov
sbb
movsb
stos
fidivs
mov
inc
cmp
add
fnsave
sub
mov
enter
mov
lret
mov
lods
jae
insl
pushf
cli
stc
fxch
xchg
aas
xchg
jno
je
jmp
rorl
enter
icebp
bound
daa
push
dec
adc
jo
inc
sbb
popa
fidivl
roll
cli
gs
jmp
xor
and
aad
sbb
adc
lret
dec
mov
lea
addb
inc
cmpsb
rol
pop
xor
fwait
inc
or
push
je
and
js
inc
aas
and
stos
mov
xlat
and
int3
jle
js
mov
xor
lods
or
add
jp
jb
pop
add
inc
xor
xchg
test
bound
add
adc
push
push
pop
loope
sub
adc
cmpsl
or
pop
rclb
cmc
in
xlat
push
xchg
jne
adc
popf
daa
repnz
and
movsl
inc
pop
cmpsl
pop
fmuls
and
ja
nop
dec
mov
movsb
enter
cli
or
pushf
inc
fsubl
dec
cmp
sub
addl
movsb
gs
aad
jge
and
xor
cmp
inc
roll
mov
lcall
add
push
jne
shll
mov
sti
ret
pop
add
mov
mov
test
repnz
pop
jge
nop
pop
xor
jb
push
leave
jmp
jle
dec
repz
ds
test
scas
mov
pop
inc
mov
in
daa
je
popa
shlb
push
sahf
lret
pop
dec
test
cltd
push
movsl
push
and
xchg
inc
jae
jns
imul
push
iret
jle
outsb
insl
hlt
or
and
out
pop
ss
fs
adc
cmp
pushf
jae
testb
scas
add
aaa
shl
pusha
inc
cmp
xchg
mov
inc
subps
call
fstpt
sbb
jge
and
insl
insb
cmp
jne
jbe
in
push
mov
or
test
mov
lret
pop
sbb
popa
fwait
mov
mov
sahf
xchg
jg
shll
mov
add
xor
xchg
pop
stos
fidivl
aad
subl
repnz
cwtl
sub
out
push
push
cmp
stc
in
scas
and
push
jno
repnz
nop
imul
inc
xchg
mov
push
mov
xchg
addl
rorl
inc
xor
push
in
sbb
rcrb
iret
scas
loopne
push
insl
push
cmc
mov
cmp
xchg
jnp
pop
stos
lcall
lds
inc
push
adc
loop
or
push
pushf
and
mov
add
out
fs
das
xor
outsb
mov
jb
cs
push
adc
icebp
aaa
adc
mov
insb
popa
mov
rol
adc
sub
movsb
jns
xor
mov
lcall
xor
mov
orb
mov
pushf
mov
add
ror
xchg
lret
stos
nop
adc
mov
in
cmp
xchg
or
sub
rcll
mov
and
int3
push
push
dec
imull
inc
js
mov
xchg
sub
push
or
aam
movsl
movl
leave
or
fsubl
mov
push
push
add
mov
add
inc
inc
pop
dec
in
add
cmp
cmp
mov
outsb
and
mov
into
insb
adc
jge
pop
inc
adc
cmp
test
mov
adc
xchg
lahf
fisttps
les
lahf
jl
lds
and
cmp
xor
enter
pushf
add
popa
adc
add
std
sbb
ror
mov
mulb
jae
insb
aas
es
dec
mov
pop
outsl
cli
mov
out
jl
pop
or
stc
loope
mov
int3
fdivl
mov
lock
loop
jns
adc
test
repz
dec
pusha
and
imul
mov
cmp
lcall
sbb
cmp
inc
sti
jb
sbb
ja
sub
pop
in
or
adc
addr16
out
stc
dec
mov
nop
and
inc
mov
in
add
jmp
lcall
push
mov
cmpsb
mov
lods
scas
sahf
pop
andb
xchg
dec
jmp
fcom
sub
mov
cmp
cmp
out
pusha
es
outsl
mov
mov
int
jmp
pop
inc
dec
fisubl
es
sbb
ss
jl
add
aaa
call
clc
iret
jnp
clc
aas
outsl
jo
and
lret
adc
iret
movsl
adc
repz
cmpsl
or
int
dec
and
pop
popf
sub
mov
inc
sbbw
or
out
xchg
hlt
iret
add
push
jl
adc
mov
xor
add
out
fmuls
push
mov
xchg
into
jg
es
insb
stos
cmp
mov
jne
push
cmp
inc
xchg
inc
and
and
inc
decb
or
ret
les
dec
cmpsb
dec
mov
mov
add
xor
iret
add
mov
out
rolb
and
movsl
aaa
scas
out
stos
dec
push
popa
sbbb
push
movsb
lahf
in
scas
mov
dec
stos
pop
outsb
decl
xchg
stos
shr
push
sarl
cmp
sbb
aam
xchg
loopne
scas
icebp
das
dec
leave
mov
fcoml
xchg
stos
jns
sub
sbb
stc
push
cmc
jo
mov
xchg
aam
pop
and
ret
sbb
in
lods
sbb
mov
inc
testb
repz
mov
xor
mov
push
mov
rcr
lahf
inc
or
cmp
mov
test
daa
jbe
rolb
shll
sub
jp
inc
or
add
dec
rcl
movsl
cmp
push
fidivrs
xchg
mov
cld
stos
je
test
ret
shlb
lcall
mov
cltd
adc
loopne
xchg
inc
cmc
jle
mov
pushf
xchg
mov
mov
cmpsb
sub
jmp
nop
sbb
das
inc
scas
andb
jno
push
divb
rcl
fsts
inc
cmp
shl
sub
jle
fcmovb
daa
mov
xor
jno
xchg
adc
fnstenv
cmpsl
pop
mov
ret
mov
mov
cmpsb
adc
jb
jp
adc
push
inc
rcll
add
adc
int
aad
xchg
addr16
ficoml
mov
call
adc
cmp
mov
add
cmp
popf
push
sbb
rorl
fidivl
pop
mov
lret
xor
cmp
out
iret
rol
hlt
es
mov
jmp
push
mov
ss
sub
adc
sbb
clc
arpl
out
lcall
call
pop
push
popf
pop
sub
cmpsb
insb
and
out
push
repz
addr16
dec
addb
rolb
loopne
rorb
xchg
daa
jb
xor
xorl
stos
std
cmp
fidivrl
pop
cmp
mov
std
bound
cwtl
repz
dec
inc
popa
and
xchg
push
xchg
fcomps
cmc
out
add
pop
mov
iret
inc
sbb
inc
std
ss
mov
mov
nop
xor
or
addr16
mov
dec
lret
test
adc
and
cld
dec
mov
popf
add
xchg
cmc
imul
out
mov
mov
lods
ss
cmc
and
mov
je
icebp
mov
loop
pop
in
cmpsb
mov
jae
dec
jbe
xor
dec
and
pop
sbb
cmp
decl
mov
call
xor
ja
std
js
xor
aam
pop
pop
ljmp
push
inc
repz
imul
push
dec
testb
mov
stos
sbbl
movsl
cltd
test
stc
call
mov
xchg
in
xchg
xchg
xor
sbb
mov
lea
daa
loopne
shl
fadds
cmpsb
jmpw
fistpll
xchg
xchg
jne
or
dec
push
add
negl
sub
push
mov
pusha
dec
jb
mov
add
inc
faddp
loopne
and
fistps
loop
cmc
pop
sti
cmp
mov
dec
mov
mov
jle
test
xorl
sbb
dec
or
movsl
lahf
dec
lret
out
mov
mov
push
cmpsl
cmpsl
ret
icebp
jb
cmp
lahf
ja
ret
add
into
mov
xchg
out
and
test
mov
fmull
lods
movsb
aas
imul
out
adc
mov
scas
scas
and
shl
into
inc
mov
xchg
mov
mov
pushf
cli
popf
in
loop
mov
ss
pop
lods
xchg
and
jl
push
and
shrb
fcmovu
xchg
pop
dec
mov
mul
cli
add
repnz
ret
sub
xchg
pop
lea
icebp
and
or
in
xchg
or
mov
cmp
movl
and
cmp
test
jle
xor
scas
icebp
ja
enter
int3
jne
mov
leave
xorb
cwtl
sbb
or
or
aas
dec
insb
aaa
sub
sti
lcall
xchg
loope
test
outsw
inc
mov
or
pop
lret
ja
pandn
dec
pop
add
mov
and
icebp
out
jno
daa
out
pushf
dec
int
xchg
sbb
xor
fsts
sti
pop
mov
push
insb
jbe
mov
or
in
in
outsb
pop
mov
add
hlt
sti
test
jo
inc
mov
lcall
int3
fiadds
jmp
daa
mov
and
inc
jo
add
xchg
adc
jnp
inc
imul
and
stc
clc
pop
xor
or
sahf
xchg
xor
jne,pn
lods
mov
xor
rcll
stos
aas
mov
jbe
cmp
adc
sbb
mov
es
in
cmc
cli
mov
mov
subb
mov
sahf
sbb
push
int
ljmp
rorb
mov
dec
jmp
test
push
adc
jp
vmovlps
je
jp
jno
in
and
and
dec
lods
test
jnp
loop
mov
sub
jg
mov
mov
mov
xchg
repz
push
dec
jb
adc
lret
jle
jmp
pop
push
loope
std
ss
cmp
pop
iret
add
mov
mov
ljmp
jne
xor
shr
je
jle
mov
add
pop
xor
cmovno
mov
push
mov
fs
or
sti
or
jecxz
data16
pop
and
inc
xor
add
sbb
xchg
add
inc
push
mov
push
sbb
lea
mov
ss
inc
decb
dec
cmp
test
xor
aas
fildl
xchg
dec
add
push
loop
pop
sbbl
cwtl
cmp
inc
aaa
data16
and
mov
xchg
popf
cmp
cmp
fstl
mov
repnz
inc
xchg
cmpsl
mov
sbb
push
mov
sarb
push
pushl
mov
ror
pop
dec
fdivrs
inc
mov
cmp
push
sbb
jnp
enter
stos
xchg
aas
jb
data16
outsb
pusha
and
and
int3
decb
pop
data16
and
in
insb
xor
test
or
or
sub
and
loop
dec
and
cmp
jnp
pop
pop
add
sahf
jo
xor
xor
mov
fcoms
jmp
sbb
push
popa
xor
mull
int3
pop
and
push
cltd
mov
push
xchg
jmp
test
cmpsb
add
mov
scas
cmp
fs
inc
and
in
fiaddl
repz
xor
cmp
insb
push
js
out
pop
add
shr
adc
and
std
test
imul
push
mov
mov
inc
xchg
js
sub
pop
mov
shrl
dec
sti
fdivrl
pop
add
sbbb
and
adc
lods
shll
stc
sarb
fmull
add
stc
xchg
xor
inc
popl
push
arpl
mov
sbb
cs
in
mov
dec
in
js
je
pop
ret
jmp
adcl
negb
rcrb
pop
jmp
push
sbb
push
dec
imul
jne
mov
gs
cmp
xlat
cmpsl
mov
and
and
mov
cmp
and
lret
ss
push
leave
imul
loop
jmp
repz
jge
ds
scas
and
jo
ret
mov
shll
repz
stos
sub
mov
cld
out
icebp
mov
cmp
cmc
sub
test
mov
mov
in
adc
mov
test
scas
ds
aam
in
push
repnz
cmc
and
or
jbe
popa
cld
mov
jbe
pop
inc
repz
and
cmp
push
jl,pn
cmp
fcomi
cli
lock
push
stc
mov
cmp
ljmp
cmp
das
lea
in
push
adc
dec
jge
inc
neg
xorb
mov
push
xor
dec
loopne
xor
pop
xchg
mov
dec
jbe
arpl
jecxz
push
add
pop
aam
dec
out
pushf
loope
xchg
movsl
andl
xchg
mov
add
bound
adc
xor
jns
lahf
out
xchg
cwtl
mov
mov
and
lahf
dec
push
jl
sbb
jne
mulb
push
and
insb
add
jge
hlt
test
pop
mov
dec
out
sahf
adc
cmp
cmpsl
or
cmp
int3
shrl
movb
jbe
cmpsl
jmp
pop
clc
and
lahf
fisubl
jno
jno
movsl
ror
cli
loop
fimuls
out
les
jnp
jl
or
pop
cmp
ds
out
aad
ljmpw
cmp
aaa
xchg
sub
icebp
jnp
into
in
insl
cmpsl
mov
clc
lods
cmpsb
jnp
iret
gs
mov
jo
xor
cmpsb
jbe
cmp
and
mov
ja
mov
out
decb
or
cmp
leave
xor
sbb
fwait
shl
rorb
cmp
jo
jecxz
ret
fwait
jns,pt
inc
inc
shlb
inc
int3
add
shlb
cmp
push
push
das
ss
out
or
fadds
testb
mov
dec
jno
stos
adc
je
jge
adc
push
outsb
in
int
sub
jge
sti
sub
cli
adc
adcb
pop
mov
dec
pushf
push
mov
testb
push
add
repnz
imul
inc
stc
or
mov
jmp
push
outsb
imul
push
mov
in
lret
mov
xor
mov
sub
aas
lahf
or
call
xor
jo
mov
hlt
inc
test
pop
mov
pop
je
std
sbb
add
pop
pop
arpl
pop
inc
jnp,pn
movsb
push
xor
outsl
add
push
cli
fdiv
stos
mov
loop
call
mov
leave
cmp
scas
sub
lds
insb
adc
sub
pushf
movsb
mov
lock
ret
jecxz
mov
movsb
sbb
cmp
cmp
or
mov
in
cmp
mov
adc
mov
xchg
outsb
shll
ds
xchg
cmc
sbb
mov
jbe
adc
lahf
inc
mov
dec
add
mov
sub
pop
and
div
xrelease
add
mov
xor
cmpsl
cmc
stos
fnstenv
loop
fwait
ljmp
xorb
jns
xchg
jmp
lods
xchg
dec
sbb
sbb
arpl
cmp
lret
sub
inc
loopne
test
daa
arpl
popa
mov
cli
mov
jecxz
push
pop
insb
into
inc
or
jg
and
int
sbb
fucomip
jle
push
stc
cmp
ficoml
ljmp
scas
clc
jno
jmp
std
std
pop
scas
and
ds
or
lods
popa
fs
xorb
xchg
sahf
inc
cmp
push
jecxz
dec
mov
ds
cmp
mov
push
stos
xor
enter
push
pop
add
or
lock
arpl
mov
std
jmp
lock
jmp
add
jg
mov
dec
adc
cmp
jae
lods
xor
dec
imul
mov
xor
arpl
in
push
cmp
in
subl
in
mov
cmp
ds
insl
mov
add
cmpsl
in
loopne
add
push
cmp
mov
pop
pop
in
nop
mov
hlt
fnstsw
mov
pop
sbb
xchg
test
xchg
loopne
push
rcll
insl
pop
loope
jo
mov
cmpsl
mov
aam
scas
sahf
and
sub
mov
jmp
shl
into
adc
xor
rcl
inc
inc
das
add
xor
in
jo
clc
adc
cmp
push
xchg
ficoms
xor
mov
mov
idivb
lret
xor
mov
dec
loopne
xchg
pop
fucomp
lret
mov
shlb
aaa
js
sub
loop
dec
fstp
outsl
outsb
insl
pop
std
sub
mov
test
mov
in
js
loop
xchg
in
cmp
outsb
jmp
xchg
xor
lods
outsl
pop
les
in
mov
jmp
mov
pop
mov
popf
and
int
cwtl
imul
adc
jmp
jbe
int
pop
pop
jecxz
bound
cmp
push
jbe
jle
mov
inc
xchg
rclb
and
fwait
cmp
enter
pop
mov
das
out
cld
push
in
cmp
out
jmp
sbbl
push
ljmp
jae
data16
xchg
inc
push
adc
xchg
push
aaa
xchg
add
sub
add
push
mov
mov
or
gs
or
ljmp
pop
inc
fwait
ret
inc
cli
ljmp
lods
and
add
mov
shlb
ret
adc
xor
movsl
movsl
dec
test
clc
pusha
or
push
call
rorl
loope
and
jb
les
aad
sbb
xor
fildl
leave
pushf
cli
cmp
aam
and
jno
xchg
mov
rolb
xchg
dec
and
cwtl
scas
ja
adc
scas
repnz
lock
cmc
jns
mov
div
push
sub
fwait
dec
cmpsb
ret
addl
pop
mov
jp
lret
imul
adc
push
lret
out
out
rcrl
popf
cmpsb
lods
and
mov
mov
or
xchg
popf
lcall
gs
mov
push
inc
sub
inc
ret
lcall
jae
and
addr16
xor
inc
jp
les
mov
mov
test
lret
fwait
je
push
packsswb
out
mov
pusha
cli
mov
add
mov
push
adc
mov
in
inc
lret
adc
push
clc
popa
add
cmp
and
fisubs
cmp
cmp
repnz
jl
mov
adcb
mov
lods
adc
int
cli
clc
sbb
ret
cmp
fisubs
cmpsb
rolb
fisubl
test
int
add
lock
mov
mov
inc
cmp
or
pop
rcll
cmp
popf
fmuls
fwait
rep
ds
pop
ss
mov
pop
and
or
sbb
cli
in
shl
aas
adc
and
add
or
cmp
popf
rcrl
fwait
pop
ficompl
push
inc
out
insl
lods
in
mov
bound
fcoml
inc
mov
push
adc
mov
jno
inc
int
pop
jo
xor
cmp
dec
dec
add
fisttpll
out
push
clc
mov
daa
or
add
outsl
sbb
addb
dec
lods
cld
es
cmp
pop
push
add
mov
sbb
lds
adc
test
sti
mov
outsl
faddl
or
or
and
scas
mov
jns
jecxz
imul
xchg
jo
inc
jbe
daa
cmp
dec
repz
cmp
mov
testl
leave
cmp
jecxz
cmp
push
sub
cwtl
or
sbb
inc
shlb
out
jl
jbe
dec
xchg
scas
adc
or
adc
push
sbb
jge
out
lods
sub
sub
popf
pop
cwtl
movsl
ljmp
and
aad
sbb
adc
add
cmp
leave
inc
adc
add
bound
int
mov
leave
sbb
or
mov
adc
cmp
repnz
mov
outsl
jmp
jle
arpl
or
push
shll
push
insl
loope
mov
push
sub
pop
loop
mov
jne
cli
clc
out
cld
pop
lock
lods
insl
inc
lods
js
loopne
aas
les
mov
sti
jp
lock
mov
mov
push
and
or
scas
lret
stos
loope
mov
cmp
cwtl
rcrb
xchg
outsb
and
rorb
jle
cmp
inc
adc
mov
jb
scas
je
dec
icebp
sahf
push
out
inc
cmpsl
cmpsb
jae
and
pop
inc
xor
push
imul
mov
into
sub
aaa
pusha
incb
mov
clc
mov
sbb
dec
or
cmp
filds
sbb
cmpsl
cltd
aaa
pop
sbb
mov
sbb
mov
icebp
jle,pt
inc
rcll
or
fcomp
ret
mov
fwait
and
mov
loope
out
jp
call
ret
pushf
inc
xor
arpl
pop
shrl
add
inc
dec
dec
out
fsubl
mov
out
xor
insb
hlt
add
icebp
sbb
imul
and
or
stos
lods
jmp
cmp
movsl
testl
mov
mov
jno
push
cld
arpl
das
inc
arpl
pop
jo
mov
int3
push
sub
fwait
xor
and
sub
cmp
sbb
filds
add
pop
lods
push
std
stos
pop
xchg
fldcw
negl
fadds
and
call
cmp
xchg
and
jns
js
add
mov
and
jp
divb
lds
rcrl
adc
hlt
or
and
sbb
mov
and
dec
dec
sub
daa
jb
loope
dec
int3
loop
push
ficomps
pop
and
inc
mov
mov
outsl
outsl
testl
aam
cli
dec
imul
xor
out
dec
mov
xor
sarl
test
inc
mov
cli
sub
pop
cmpsl
shll
mov
test
subb
jmp
loopne
adc
insl
add
sub
outsl
iret
cmpb
test
xchg
and
xchg
movlps
cmp
lock
les
mov
lret
mov
ds
mov
and
adc
mov
testl
test
mov
insb
or
xchg
add
jmp
lea
inc
gs
sub
cmp
fsubrl
mov
xor
mov
loopne
jp
push
lods
hlt
cmp
stc
push
lcall
pop
mov
or
int
pop
rcr
in
sahf
dec
aas
and
or
adc
mov
mov
int3
int
popf
push
sub
test
sub
std
test
xor
hlt
and
mov
sbbl
sub
in
sahf
loop
sbb
pop
dec
push
dec
xor
rcll
and
mov
popa
mov
sbb
mov
cmpsb
popa
xor
ds
fcomp
xor
mov
nop
push
cmp
xor
sub
outsl
insb
in
stos
cmp
add
std
dec
inc
sub
divb
arpl
call
shl
movsb
dec
xor
out
jge
pusha
mov
mov
mov
push
shll
sub
xor
sbb
cwtl
mov
ds
mov
fs
mov
jne
dec
pusha
icebp
mov
sahf
lds
pop
push
imul
lret
cld
add
jbe
sbb
cmp
aas
ret
add
mov
ja
and
mov
jp
in
add
int3
xor
or
fidivrl
cld
jg
cmpsl
int
push
push
jp
adc
mov
jb
arpl
jecxz
insl
les
js
and
cli
xchg
aam
xchg
aad
je
pusha
shl
ljmp
leave
into
push
je
jnp
mov
add
imul
nop
mov
cmp
pop
jnp
jecxz
pop
js
loopne
mov
jns
dec
dec
lea
push
cmp
lock
lcall
fdivl
sub
sbb
mov
popf
add
and
dec
add
mov
insl
ljmp
or
bound
xor
pop
mov
sub
loop
xchg
hlt
xchg
loope
fcmovbe
test
in
adc
mov
add
sbb
inc
cld
notl
fwait
pop
mov
mov
fisubrs
cmp
in
out
sbb
adc
or
push
and
and
aas
addr16
xchg
jo
jo
mov
cmp
stc
xor
jg
mov
mov
lds
or
std
push
sub
sub
out
int
incl
lds
popf
xchg
dec
mov
jae
loopne
or
out
push
int
adc
push
lret
lock
pusha
add
pop
popa
sbb
jne
cmp
add
push
jge
or
nop
aas
cmp
in
mov
jnp
cmc
daa
in
cwtl
arpl
in
shl
xchg
leave
shll
pop
and
lea
daa
rcll
cld
insl
sub
les
das
std
int3
add
sbb
iret
xor
xchg
lahf
and
or
sbb
cli
inc
test
and
cmp
or
mov
movsl
test
fistps
repz
jns
stos
aaa
or
jbe
mov
dec
mov
int3
lret
sbb
mov
sub
jg
cmp
and
enter
cmp
loope
outsb
mov
cmp
je
out
mov
push
mov
dec
xor
mov
or
adc
int
or
cmpsl
lret
jg
out
jmp
adc
icebp
xchg
idivb
push
lahf
out
neg
jge
es
shlb
dec
or
cwtl
mov
and
movsl
push
push
testl
pop
ret
inc
mov
push
jno
and
mov
jnp
push
lea
inc
pop
fnsave
mov
or
repnz
jbe
sub
sub
outsb
lods
sub
in
push
mulb
enter
mov
add
mov
out
loopne
lret
jmp
in
lret
dec
mov
xchg
lret
cmp
lahf
mov
repz
loop
fistpll
js
mov
inc
jne
pop
lods
cs
xchg
cs
push
mov
xchg
mov
addr16
pop
jae
sbb
sub
sub
sbb
jo
mov
je
mov
and
add
add
jle
rcrb
adc
xlat
mov
push
stos
inc
sti
mov
or
fwait
fmuls
hlt
fs
inc
push
out
push
cmp
das
loope
ss
cmp
repnz
adc
xor
push
sub
xchg
ficompl
or
mov
insl
dec
aaa
lret
mov
adc
xchg
cmp
inc
xchg
push
rol
cmp
cmp
pusha
push
sbb
mov
inc
roll
add
pushf
into
adc
sub
jo
pop
js
push
repz
push
insl
in
pusha
sub
mov
mov
sbb
rorl
sbb
xchg
pop
fsubrs
les
mov
movsb
lret
out
lahf
sbb
mov
sub
dec
jp
xor
inc
fisubrs
imul
adc
inc
add
out
aas
push
pop
inc
cmp
mov
ja
lret
fwait
dec
push
mov
adc
xchg
pop
xchg
mov
adc
jns
push
aas
outsb
cmp
mov
mov
or
addr16
xchg
ret
rcrb
dec
pop
nop
mov
xchg
push
stos
ljmp
push
pushf
xor
in
jns
fwait
cmp
and
mov
cmp
out
jmp
pop
add
movsb
dec
stos
pop
push
movsl
xchg
test
test
ljmp
fs
sbb
fucomp
push
sub
pop
mov
or
jbe
dec
mov
cmp
jb
or
into
jae
jne
push
or
cli
cmpl
in
cmp
or
mov
rclb
inc
out
push
call
or
pop
sbb
push
lods
fmuls
push
outsl
inc
sub
inc
test
inc
inc
pusha
cmp
mov
adc
cmp
lods
jecxz
out
out
jo
into
lock
cmp
mov
ror
lret
lea
stos
push
cmpsb
div
iret
sti
dec
js
pause
xchg
sub
sahf
adc
mov
or
push
pop
ds
outsl
rcrb
mov
cmp
dec
aam
sahf
xchg
push
pop
mov
jnp
push
scas
add
test
jo
mov
mov
pop
fnstenv
jne
add
mov
push
adc
mov
dec
movsl
jcxz
mov
bound
xchg
adc
call
std
sub
iret
fxch
dec
mov
mov
in
xchg
inc
fisttps
lcall
lret
incl
ror
in
outsb
enter
rcl
pop
lahf
xchg
mov
hlt
push
mov
shl
mov
pop
sub
rcrl
imul
cld
lret
out
insb
adc
and
mov
push
jns
out
xor
adc
ds
or
jbe
xor
mov
cmp
popl
sar
rclb
imulb
mov
add
cwtl
or
js
and
mov
adc
cld
mov
jo
fcoml
addr16
mov
pop
pop
pop
mov
jge
fcmovnb
fidivs
pop
dec
sub
inc
fwait
xchg
out
sbb
mov
push
pop
iret
sbb
icebp
in
addr16
pop
xlat
iret
je
jne
pop
into
adc
iret
adc
xor
xchg
xchg
adc
loop
ja
push
imul
arpl
mov
je
test
cs
loope
roll
mov
jle
sbb
mov
cmc
inc
je
adc
negl
cmpsl
mov
pop
test
dec
iret
add
orl
dec
sbb
sbb
add
mov
mov
cltd
clc
ficomps
cmpsl
ret
sahf
scas
jle
lods
inc
pop
in
push
mov
call
loope
shrb
jo
sti
add
inc
cltd
push
push
gs
cli
pop
mov
pop
mov
nopl
cmp
dec
sbb
xchg
sbb
dec
jbe
les
decl
mov
dec
fwait
mov
test
jae
mov
leave
nop
fnstcw
call
fbld
ljmp
cwtl
lock
invd
mov
jmp
xchg
sub
aam
xor
addl
inc
xchg
and
cwtl
sbb
xchg
stos
es
jmp
xor
ret
xchg
or
cmc
push
and
pop
insb
sub
ja
dec
lds
and
push
mov
je
or
arpl
sbb
out
cmp
inc
fstpl
cmc
lcall
and
push
movlhps
xchg
jo
jge
out
shl
xor
mov
mov
inc
dec
sbb
jno
cmc
jno
pusha
jecxz
scas
addr16
adc
into
pop
mov
mov
mov
jmp
lods
mov
mov
mov
mov
adc
loope
add
lea
xchg
mov
cmp
fistpl
and
mov
cmpb
in
icebp
inc
jmp
jnp
outsl
dec
imul
popa
in
mov
pusha
jns
add
pop
pop
xor
mov
and
arpl
in
fimull
gs
out
loopne
jae
shlb
sbb
push
lret
cmpsb
mov
jno
loop
cs
xchg
cs
inc
mov
jl
pop
clc
xor
testb
testb
test
imul
xor
and
pop
xchg
jg
cmp
shrb
add
push
sahf
data16
mov
adc
sub
jne
sub
pop
pop
mov
sbb
loopne
leave
cmp
sub
aas
cmp
in
jl
lret
pushf
clc
push
sub
cmp
or
jecxz
jmp
sub
add
popf
or
movsl
or
or
dec
imul
adc
or
stos
mov
cltd
cmpsb
popf
xchg
in
pop
mov
shll
jmp
fst
jns
bound
mov
clc
adc
rolb
xor
in
out
pop
pop
scas
lock
mov
repz
add
sti
inc
cltd
adcb
cld
popf
inc
xor
and
insl
sub
or
hlt
pop
add
xchg
stc
dec
mov
bound
imul
in
and
repz
mov
sbb
lcall
fcomps
data16
mull
ss
sahf
jmp
xor
popf
insb
adc
movsb
sub
mov
scas
mov
movsl
in
mov
cli
ljmp
xor
mov
add
cmpsl
xchg
ficomps
sbb
jnp
movsl
leave
cs
inc
pop
ds
sahf
sub
addl
ds
push
jno
pushf
fmull
adc
int3
dec
aaa
in
jnp
testl
lea
push
ret
je
or
fwait
addr16
popa
cs
lcall
xlat
xor
jb
jmp
sbb
daa
imul
pop
sub
xchg
push
bound
jge
adc
mov
mov
inc
into
lret
sbb
and
in
lods
or
les
mov
mov
arpl
hlt
mov
cmp
add
sbb
aad
iret
movsb
in
lods
xor
rcrb
jmp
add
cmp
dec
loopne
daa
enter
clc
into
frstpm(287
pop
int3
mov
add
adc
mov
ds
into
jns,pt
call
sbb
ror
movsb
and
insb
and
and
sub
das
out
and
push
cltd
orb
fists
fs
cmp
lret
xchg
cs
aad
ja
add
sub
adc
notl
iret
cmp
subl
jne
shlb
sbb
filds
hlt
aam
adc
outsl
out
sub
cmp
fstps
add
and
jp
cmp
aam
dec
jl
movsb
lock
es
loop
cmpsb
add
and
lret
xor
pop
mov
std
les
xorl
adc
adc
or
pop
cwtl
pop
cmc
dec
lds
int
cli
rorb
aad
pop
mov
or
mov
call
lods
clc
push
xchg
lods
push
movsb
dec
daa
pop
jmp
xor
aas
or
mov
pop
pop
dec
ror
dec
push
dec
dec
lock
stos
rcll
outsb
or
iret
call
mov
push
ss
ja
arpl
arpl
stc
mov
xchg
push
ficomps
mov
mov
out
std
cmp
sbb
jg
xchg
jo
repz
and
imul
cmpsl
dec
int
scas
xor
push
inc
cmp
in
dec
mov
out
cmpsl
jmp
jp
stc
mov
adc
lahf
cmp
or
data16
mov
and
scas
xor
cmp
imul
sti
cs
ljmp
data16
push
cmp
mov
mov
xchg
cmp
in
popa
subb
gs
shll
in
das
xor
dec
fmuls
jnp
aam
adc
insl
jne
add
sbb
insl
or
out
sbb
xchg
and
push
mov
cmp
inc
fs
sub
rsqrtps
jne
xlat
aad
mov
sbb
add
xchg
pop
mov
enter
xorl
outsb
gs
popf
mov
xchg
inc
sbb
shl
add
jp
adc
imul
pop
outsb
cs
and
out
test
test
lahf
dec
push
adc
jmp
ljmp
xor
out
dec
lret
jmp
hlt
adc
inc
jl
cmp
push
fildl
or
dec
or
ds
or
mov
xlat
inc
js
or
jg
mov
pop
cmp
push
push
mov
pop
pushf
repnz
idivl
fwait
inc
jb
fsubr
loope
fildl
mov
imul
dec
ficoms
mov
js
inc
cs
pop
call
mov
xlat
push
insl
pop
xchg
loope
push
jnp
sub
mov
mov
dec
mov
mov
stos
xor
xlat
and
adc
add
mov
cmp
inc
cli
int3
repz
iret
jbe
add
andb
gs
inc
cmp
adc
or
pop
in
mov
aad
js
stc
jl
sbb
or
cli
xor
aam
adc
pop
ret
xchg
out
mov
fisubrl
in
sbb
and
jae
or
cli
push
mov
test
lret
sub
or
add
push
sahf
xlat
fadds
jl
mov
mov
mov
out
adc
mov
push
xchg
enter
movsl
jno
fs
in
fisttpl
cmp
cltd
dec
xchg
xchg
dec
push
out
or
adc
adc
inc
push
jp
mov
adc
jg
ja
inc
mov
pop
cmp
cmp
loop
mov
jg
fdivrl
je
jmp
cmp
lret
pop
ja
fisubs
pop
fdivl
mov
dec
test
and
cmp
sahf
push
data16
pop
or
cmp
sbb
fiaddl
lock
test
xchg
daa
push
cmp
fiaddl
addr16
dec
push
int3
addr16
jg
test
ja
addr16
cmpsl
add
lcall
je
pop
push
mov
xor
jae
or
mov
fwait
mov
cmp
pop
jno
repz
aad
sbbb
flds
push
sub
xchg
xchg
push
mov
cmp
xchg
ret
pop
sub
or
aas
inc
jmp
adc
cmp
sarl
imul
insl
xchg
ljmp
popf
movsb
fdivrs
pop
test
sti
lret
ss
lock
cmc
lods
neg
mov
sub
push
push
sub
daa
and
pop
mov
mov
popa
push
mov
mov
mov
inc
addb
movsl
and
mov
jo
mov
inc
ja
mov
sub
adc
stos
stc
cmp
roll
mov
addr16
xchg
sbb
push
testb
jno
mov
stc
dec
aas
sub
sub
addr16
add
xor
sbb
gs
in
inc
sub
ret
out
outsb
adcl
mov
xchg
in
or
mov
imul
push
mov
inc
ret
not
push
imul
pop
push
pop
insb
adc
mov
lods
and
inc
lcall
push
xor
lcall
dec
pop
jne
loopne
in
loopne
xchg
dec
xor
lds
pop
in
filds
xor
inc
pusha
xchg
mov
lcall
pop
shrl
in
xor
and
aad
mov
mov
pop
sbb
mov
mov
add
sbb
push
or
sub
add
loopne
push
jl
mov
sub
ja
sbb
ret
cmp
push
sbb
and
dec
in
push
xchg
xchg
ds
jae
and
adc
add
stc
fiadds
inc
jp
add
dec
inc
pop
mov
xchg
inc
mov
mov
addr16
push
jmp
and
jo
jo
push
push
sbbl
add
popl
pop
mov
int3
out
aad
xchg
ret
and
pop
mov
push
push
hlt
sahf
push
in
aaa
add
push
jecxz
xlat
inc
xlat
jecxz
loopne
data16
xor
fidivrl
mov
xchg
xor
pop
clc
pop
xor
mov
loope
pop
aad
push
mov
leave
aaa
sti
inc
add
mov
jae
popa
mov
cmpsl
notb
sbb
adc
mov
cmp
inc
mov
xlat
lods
pop
mov
iret
push
imul
shl
hlt
lahf
mov
aam
mov
mov
and
cwtl
test
push
cli
sbb
pop
repnz
mov
aaa
fildll
psadbw
cmp
lea
or
or
and
xor
add
sub
push
sahf
jg
leave
or
mov
push
xchg
pop
inc
dec
lahf
shlb
add
mov
mov
ret
repnz
cmp
into
testb
pop
jmp
cltd
addr16
cmp
sbb
push
clc
adc
cmp
arpl
aam
xor
out
test
pushf
hlt
mov
and
test
add
dec
into
roll
xlat
xchg
mov
mov
inc
cmpsb
cmp
pop
mov
adc
adc
lret
cwtl
adc
test
enter
xchg
jge
out
dec
adc
mov
lret
std
pop
leave
out
push
repz
mov
mov
test
movsb
xor
dec
pop
stos
movsl
inc
xor
sbb
inc
and
adc
pop
jecxz
sbb
js,pt
xchg
stos
or
imul
inc
sbbb
cmp
movsl
sbb
inc
inc
sbb
cmovle
sbb
inc
adc
sub
jmp
jp
push
pushf
les
xor
testl
mov
int
pop
stc
dec
lods
mov
fxch
push
lret
int3
jnp
jmp
insb
insb
or
xor
mov
rclb
orl
imull
enter
mov
mov
or
jno
xchg
jns
fistpll
jns
inc
sub
aam
int3
test
dec
cmp
in
and
lods
xchg
cmp
inc
sbb
ret
xor
imul
xchg
sbb
cmpsl
test
out
pop
xchg
aad
mov
push
push
mov
fisubl
fbstp
out
mov
and
sbb
push
cwtl
cmp
rcll
inc
jge
mov
aam
pop
imul
push
aad
jmp
xor
out
sbb
lret
or
adcb
ret
test
popf
jmp
push
inc
es
nop
cld
addb
clc
xchg
and
mov
rclb
mov
mov
and
jmp
xchg
pop
sbb
lods
inc
cli
add
sti
adc
ja
sbb
sub
call
daa
rcr
gs
shlb
xor
out
and
dec
iret
orb
shl
fisttps
add
dec
cmp
add
shr
cmpsb
xchg
outsl
pop
jle
and
mov
push
roll
pushf
je
orl
inc
stos
shlb
mov
aam
adc
push
out
or
into
dec
fdivrl
aas
xor
sahf
lods
loop
out
daa
and
sbb
jne
push
xorl
or
add
fildl
jp
push
ret
mov
and
push
mov
cli
cwtl
insl
popl
wbinvd
xchg
movl
pop
mov
sbb
or
or
sbb
xor
inc
nop
lcall
repnz
push
addl
cmpsl
xchg
pop
xchg
adc
fwait
call
jle
stos
roll
inc
jp
outsl
insl
rcr
cld
jg
jge,pt
hlt
cmc
fisubrs
mov
xchg
pushf
push
push
mov
pop
and
decb
sbb
dec
push
call
push
mov
mov
mov
cmp
imul
mov
or
je
or
andl
add
xor
fcoml
sub
mov
pop
dec
xor
mov
or
push
jnp
jge
dec
and
dec
popf
and
out
jb
cmp
mov
mov
enter
cli
enter
mov
adc
movsb
outsb
pushf
out
push
out
mov
push
hlt
shl
sarl
cmpsb
adc
cmp
push
insb
mov
dec
mov
pop
aam
mov
fldenv
fucom
addl
pop
xchg
arpl
stc
cmp
mov
xor
stos
or
dec
fistpl
push
cmpsb
cli
mov
nop
jo
icebp
inc
sub
test
add
in
out
jae
adc
popf
dec
iret
sti
out
imul
jnp
push
xchg
mov
sbb
lcall
push
movsl
mov
pop
mov
xchg
jbe
mov
insl
mov
ffree
mov
call
out
jge
or
pop
adc
add
dec
inc
sub
mov
jle
xchg
movsl
inc
sub
sbb
push
mov
jns
mov
ret
mov
ss
sbb
jne
jle
mov
inc
scas
pop
xor
fbstp
negl
mov
aas
mov
outsl
dec
out
add
jo
das
stc
cmp
hlt
xchg
es
pop
cmpsb
lock
mov
je
sub
inc
js
push
cmp
mov
xchg
sub
mov
jle
jno
fisttpl
aad
subb
pop
sub
xchg
fwait
xchg
movsl
and
mov
daa
cmpsl
add
mov
aaa
jbe
cwtl
hlt
je
xchg
rorb
xchg
cmp
push
pop
loopne
lret
and
jle
inc
aam
xor
into
shll
mov
stos
je
xchg
push
dec
jle
xlat
mov
sbb
pop
fadds
dec
xchg
xlat
inc
out
std
lock
jo
mov
jo
das
ja
xchg
lock
je
mov
ret
ret
test
ljmp
adc
imul
scas
mov
fdivs
xor
dec
or
xor
xchg
iret
in
mov
add
jl
pop
sahf
mov
sbb
aad
js
sbb
mov
ret
dec
lea
push
loopne
xor
lock
sbb
aas
sbbl
js
mov
push
mov
outsl
jbe
inc
dec
repz
orl
mov
insb
sarl
jns
into
adc
pop
mov
push
repz
mov
jns
mov
push
mov
call
and
mov
movsb
dec
dec
fadd
pop
and
mov
clc
cmp
adcl
xchg
or
push
pop
mov
dec
bound
in
repnz
pop
sbb
pop
outsb
and
test
mov
test
lds
in
lahf
mov
mov
mov
push
mov
imulb
aaa
sahf
inc
add
loopne
in
out
lcall
and
fs
pushf
jmp
sbb
aad
mov
fstl
cli
cli
or
dec
insb
rcr
mov
mov
pop
dec
mov
movsl
out
mov
pop
sub
pop
clc
push
pop
sub
lock
jne
outsb
mov
repz
aam
movsl
jno
fcom
mov
dec
jmp
and
pop
scas
call
pop
fs
cmpsl
xor
push
das
test
mov
fbstp
pop
hlt
icebp
in
add
jae
push
pop
cltd
mov
or
inc
jg
push
push
jge
insb
es
sub
outsb
js
lds
fnsave
lret
fidivrl
push
stc
xor
inc
inc
lret
mov
push
lret
popa
inc
push
mov
push
stos
shrl
jbe
das
dec
lods
es
mov
push
cmp
outsl
icebp
sub
cmp
sbb
cmc
roll
adc
subb
sbb
jl
or
or
inc
jb
xor
xor
xchg
mov
add
fstl
mov
les
mov
adc
and
ret
push
add
xorl
incb
fdiv
lahf
in
int3
mov
gs
sub
ret
mov
and
pusha
jmp
lret
test
int
int
sbb
sti
inc
adc
nop
sbb
movsl
sub
sahf
sub
fidivrs
fistps
loop
ljmp
addl
hlt
fldenv
nop
jmp
xchg
cmpb
and
roll
movsl
xor
or
cmpsb
add
into
sahf
mov
out
mov
hlt
call
pop
stc
push
mov
rorl
fmuls
mov
or
mov
out
int3
jge
test
push
test
sarb
icebp
cwtl
imul
arpl
icebp
aaa
mov
test
scas
or
push
mov
aam
sbb
ss
jle
inc
dec
fbstp
es
adc
insl
sahf
or
enter
mov
jg
gs
xor
dec
stos
cmp
sbb
mov
lds
cli
dec
decb
fisubl
jo
andl
add
mov
call
lcall
mov
dec
ljmp
hlt
int3
jo
push
add
add
out
jnp
mov
adc
jmp
in
js
fwait
jg
push
sbb
nop
pop
aaa
xor
mov
jae
or
xor
rcr
mov
push
xchg
cmp
repnz
addl
incb
mov
call
das
or
xchg
mov
scas
lret
xchg
and
mov
sbb
std
fcomip
sub
pusha
jb
inc
xor
lock
jo
sbb
lods
testl
cmc
pop
or
addl
xchg
out
sbb
push
xor
dec
add
repz
xchg
and
sub
xlat
add
out
dec
mov
out
add
dec
loope
cs
dec
mov
mov
lock
or
pop
fs
sahf
popa
mov
mov
or
xor
ret
out
mov
loop
popf
mov
inc
mov
or
es
add
lahf
push
cmp
and
jmp
into
movsb
or
addb
ljmp
orb
xchg
sbb
lret
inc
sahf
add
push
fincstp
mov
fists
or
test
inc
dec
int3
mov
jecxz
aas
mov
aad
lret
aas
sbb
dec
jecxz
mov
inc
inc
lock
push
mov
adc
mov
scas
add
or
jne
cmc
push
adc
mov
inc
fldt
arpl
push
pusha
push
aad
push
lods
pop
mov
xchg
stos
push
jmp
sub
jae
mov
in
and
dec
psubd
cmp
shlb
call
int
push
gs
cmp
mov
std
movsl
dec
lock
adc
filds
sub
jbe
clc
xchg
xchg
add
js
clc
outsb
dec
xchg
cmp
and
mov
jle
add
es
cmpsb
add
inc
or
movsl
outsb
cmp
data16
xor
cs
sbbl
mov
jae
outsb
fcoml
jecxz
in
adcb
dec
pop
fwait
outsl
addr16
mov
outsw
push
jmp
shl
mov
inc
and
sbb
cmpsl
stc
adc
mov
pop
fsts
adc
in
loop
mov
popa
sahf
aas
sub
repnz
xor
outsl
inc
orl
inc
or
movb
pop
dec
jp
fisubl
es
add
daa
adc
inc
adc
aas
mov
stos
loope
loop
test
inc
or
scas
xchg
fstps
cmp
pop
scas
jbe
int
sub
cmp
pop
movsb
jecxz
imul
push
lods
mov
add
ss
adc
data16
lods
push
sbb
push
lcall
and
pop
lods
decb
xchg
jnp
lahf
mov
mov
hlt
xchg
and
mov
or
clc
pop
push
jbe
push
push
pop
push
lea
aaa
push
adc
leave
mov
mov
dec
cmp
and
jno
pop
popa
insb
out
loope
hlt
jmp
nop
jno
sub
icebp
cmp
sbb
and
rorl
xor
mov
ret
rorb
add
xor
jne
push
cld
roll
aas
mov
fs
and
adc
ret
add
mov
sar
dec
scas
rclb
and
sbb
fst
cmova
rcl
test
mov
sub
das
imul
rolb
xchg
dec
fidivs
rolb
js
fucomip
ds
test
push
mov
adc
loope
jmp
xor
push
jns
mov
out
cld
or
pop
nop
stos
int
addl
cmp
push
push
dec
lahf
popf
fwait
lods
xor
push
fs
or
push
xchg
add
lods
dec
js
jbe
fidivrl
inc
rcrb
movsb
add
fstp
scas
in
mov
js
imul
mov
mov
inc
push
dec
xor
or
leave
mov
gs
insb
pop
aas
dec
aaa
mov
push
daa
jo
mov
push
sub
mov
dec
pop
ljmp
push
push
or
pushl
pusha
je
sbb
mov
mov
insl
sub
pop
and
int
dec
xchg
jbe
fs
lock
and
cmp
xor
jecxz
into
sbb
push
jmp
and
mov
add
xchg
mov
and
cmpsl
aas
test
repnz
jb
arpl
paddusw
pop
aas
lds
fiaddl
sbb
sub
cmp
sbb
pop
or
fisubs
out
dec
rcll
xchg
fcoms
imulb
cltd
push
leave
in
divb
arpl
arpl
shll
in
jecxz
xor
push
jg
and
add
insl
inc
push
mov
pusha
dec
js
mov
mov
std
mov
and
insl
bound
outsl
mov
lret
lock
rorb
mov
arpl
inc
mov
push
lock
hlt
push
out
inc
sarl
push
imul
inc
hlt
loopne
ffree
mov
mov
in
notb
push
in
dec
push
aam
in
mov
sbb
dec
subb
aas
insl
sbb
cs
inc
ljmp
sbb
addr16
test
aaa
cmp
push
fcmovne
push
fistps
inc
inc
sub
sub
cmp
add
xorl
fisubrs
xchg
mov
sbb
ret
into
ja
mov
and
dec
or
jnp
mov
sbb
push
outsb
and
adc
scas
sbb
xchg
and
pop
pop
mov
sub
into
sbb
or
mov
jbe
out
lahf
ljmp
xor
xchg
aaa
jno
les
xchg
sbbb
pushf
lea
popa
mov
int3
lea
outsl
fcompl
clc
jmp
mov
sub
xchg
pop
xchg
lahf
cmp
or
push
leave
mov
cmc
pop
push
pusha
ficomps
and
cmp
aas
data16
xor
out
jb
jmp
jb
xchg
xor
fcmovbe
jo
scas
and
std
dec
shll
push
inc
fucomp
sub
out
sbb
dec
pusha
daa
ds
xor
pop
add
daa
jns
sub
mov
loop
cld
outsl
popf
inc
or
cmp
incl
dec
in
ret
mov
pop
pop
outsl
push
inc
je
pop
shll
dec
dec
insb
adc
fiadds
add
fcoml
or
out
jb
jnp
inc
dec
testb
mov
dec
sub
ja
data16
shlb
push
xchg
jp
rclb
rorl
or
loopne
mov
jns
imul
xchg
gs
sub
jecxz
mov
sahf
stos
sub
mov
loopne
mov
sbb
add
mov
mov
fistpll
in
cmp
std
sbb
cmp
xor
or
cli
rcl
cmp
imul
add
lcall
adc
pop
cmp
hlt
or
dec
ret
pop
pop
jecxz
lcall
aaa
cmp
cmpsl
es
fldcw
inc
out
insb
pop
xchg
ret
mov
and
add
clc
push
jl
ss
aad
int
mov
cwtl
fldcw
ret
sub
iret
fdivl
aas
push
jmp
dec
cmpsb
and
inc
movsb
push
and
jmp
cmp
out
inc
jmp
loope
xchg
loop
adc
inc
loopne
cmp
int3
leave
push
enter
testb
jne
pop
mov
cld
and
scas
sub
lock
add
pop
punpckhwd
enter
and
pop
xor
clc
jmp
sub
mov
sbb
push
push
xor
bound
mov
inc
jecxz
popa
jp
mov
int
xchg
push
push
push
in
mov
in
stos
fcom
addr16
aam
mov
push
test
jno
aas
xor
lcall
fs
cmp
ret
jne
jl
pop
add
dec
popa
je
mov
insb
xor
repnz
shrl
lods
dec
std
popa
frstor
scas
or
jno
sub
add
rcr
sarb
xchg
mov
clc
jecxz
or
cmp
pop
aad
mov
and
cmp
xlat
aad
cmp
mov
cwtl
mov
in
std
pop
sub
cmp
ljmp
push
or
mov
bound
lret
sti
in
pushf
adc
rcll
cltd
xlat
jmp
mov
add
dec
lea
outsl
cwtl
cmp
mov
fadds
neg
sbb
stos
sbb
push
in
pop
js
sub
push
or
fimuls
enter
dec
and
xor
shl
and
lods
dec
fsincos
lea
xlat
jbe
mov
cmc
jns
mov
mov
cltd
je
adc
push
inc
call
mov
insb
outsb
mov
pop
orb
es
out
out
sbb
push
pop
lock
cmpsb
push
push
cmp
add
bound
pushf
ja
subl
jle
dec
cmpsb
fcoml
xchg
data16
jo
ja
add
adc
pushf
xchg
out
push
push
mov
cli
insl
aam
in
aaa
loope
add
aaa
out
sub
fstpt
movsl
sub
sbb
sbb
cmp
movsb
ud2
sbb
lret
dec
out
xchg
addr16
or
bound
push
jmp
sub
nop
ljmp
sbb
mov
lock
sub
lock
jb
dec
xchg
call
push
shlb
jne
test
sti
inc
loope
jno
cmp
popf
adc
and
ds
push
xchg
mov
rclb
mov
adc
and
ss
stos
out
roll
adc
test
pop
dec
lds
pop
mov
add
les
icebp
jle
mov
fmul
sub
mov
cs
push
xlat
sub
jl
shll
mov
sahf
loope
mov
fldcw
mov
subb
gs
popf
out
push
xor
scas
lret
mov
push
mov
jp
push
dec
sbb
jl
sub
je
jns
cmp
cmpsb
push
dec
adc
lods
dec
bound
lods
xchg
fnsave
movsb
add
repnz
adc
roll
cmp
je
inc
and
into
mov
cmp
loope
lret
inc
xor
xor
jp
and
inc
inc
jne
dec
test
pop
inc
rol
pushf
adc
push
mov
pop
enter
rol
ja
lahf
data16
imul
xchg
jp
adc
cmpsl
push
pop
lea
jae
cmpsb
dec
xlat
xchg
outsl
jb
pop
fstps
lret
and
fwait
insb
outsl
mov
pop
andl
mov
add
out
jecxz
inc
jl
dec
faddl
ret
mov
cmc
cld
das
jb
sbb
repz
leave
mov
mov
ds
pop
fs
ret
cmp
sbb
rcpps
add
pop
adc
sub
jb
xor
add
cli
mov
out
ret
int3
pop
add
sub
aad
test
inc
push
push
pop
aad
repz
movsl
push
pop
dec
int3
ljmp
shlb
iret
pushf
int
hlt
push
repnz
dec
mov
sbb
adc
test
add
hlt
mov
pop
or
inc
inc
test
mov
movzwl
mov
lret
mov
sub
lds
pop
jmp
in
push
mov
mov
ret
inc
pop
or
and
jmp
sub
ds
in
repnz
jl
dec
jne
stc
sbb
adc
imul
sub
mov
mov
cmp
sbb
divps
and
and
sbb
fcoms
iret
dec
pop
mov
add
mov
ljmp
adc
in
fistps
or
sbb
jns
aaa
xor
les
xchg
and
nop
and
add
adc
push
stc
out
xchg
mov
setbe
xor
add
sub
data16
mov
cmp
lcall
sub
gs
outsb
xor
lock
and
pop
sbb
in
or
sub
push
ljmp
add
ror
cmc
hlt
rcrl
jp
fisubl
cmp
mov
dec
loopne
or
ja
jb
and
dec
imul
insl
add
test
mul
clc
mov
sar
subb
sub
les
mov
xor
and
push
sbb
lret
test
dec
enter
xor
or
mov
jl
std
repz
das
xchg
loope
adc
add
mov
lret
cmc
xchg
inc
addr16
pop
mov
test
lahf
imul
movsl
jg
pop
sbbb
lret
jmp
popf
jae
clc
xchg
int
inc
js
clc
out
mov
adc
movsb
addr16
sti
push
xchg
mov
cld
nop
aad
leave
pusha
mov
pop
jb
mov
not
sub
add
xor
pop
lahf
mov
push
or
test
insl
addr16
and
mov
jo
sub
cmp
and
in
enter
scas
lret
lahf
roll
mov
push
shrl
dec
stos
mov
fdivrl
or
cmp
push
push
jmp
or
adc
add
imul
rol
pop
jp
lret
adc
aas
mov
sti
cltd
mov
cmpsb
mov
test
xor
cmc
pop
jp
lods
lret
dec
mov
out
lock
leave
pop
out
sub
iret
jbe
lret
loopne
adc
loop
mov
pop
negl
xchg
test
insl
xchg
mov
push
and
inc
fisubl
and
test
imul
cmp
inc
jl
xchg
stos
inc
dec
rcrb
xchg
pop
pop
inc
aas
divb
inc
in
sbb
xor
cmpsl
gs
inc
add
pop
dec
dec
rcr
or
sub
sub
jns
add
jmp
iret
xchg
jl
dec
mov
je
jae
idivl
sbb
in
jecxz,pn
dec
pop
sub
lahf
inc
or
outsb
mov
std
fcmovb
jne
cltd
xor
mov
js,pt
xchg
out
imul
sahf
gs
std
xchg
or
leave
sbb
xchg
or
or
push
inc
cmp
pusha
pop
movsb
jo
daa
dec
sbb
mull
sbb
add
jp
mov
lock
xchg
sbb
fwait
lret
outsl
mov
lods
setl
inc
in
in
cmp
adc
out
xchg
arpl
idivl
lea
adc
dec
mov
insb
int
and
add
je
icebp
fnstcw
cmp
iret
js
inc
adc
test
out
sub
push
hlt
or
pop
inc
out
loope
pop
clc
dec
das
push
fimuls
jb
mov
cmp
add
jl
and
xor
pop
or
arpl
cld
incb
xor
pop
xchg
decb
pop
jle
jp
pop
pop
out
xchg
inc
cwtl
ds
sbb
sub
add
cld
mov
sbb
fnsave
rcll
add
pop
xor
xchg
sti
lcall
dec
push
cltd
sbb
cmpsl
xorb
stos
sbb
ja
sub
das
into
gs
cmc
sub
mov
xchg
nop
notl
jb
mov
bound
lea
imul
fdivrl
pop
rcl
ss
add
repz
dec
sub
jnp
nop
or
loopne
dec
cwtl
pop
fisttpl
jae
pop
xchg
movsl
insl
repnz
pop
lods
push
or
jg
cld
insb
ss
es
lea
je
inc
pusha
loop
xchg
jge
jb
outsl
push
jnp
push
fsubrp
mov
test
pop
and
test
sbb
add
mov
cmpsb
xor
aaa
decb
mov
cmpsl
jo
js
fisubrl
lret
aam
arpl
and
cmp
insb
adc
aam
sub
pop
ret
mov
out
jecxz
rcrb
mov
adc
cmp
dec
pop
pop
cmp
add
pop
sbb
mov
cmp
sbb
push
jne
dec
andb
add
lods
or
fimull
test
and
mov
jo
aas
nop
pop
xlat
lahf
adc
mov
push
loopne
stc
jle
pop
and
roll
in
mov
dec
js
lea
and
jbe
outsb
xchg
mov
mov
xchg
inc
xor
xchg
shrl
dec
sbb
es
xchg
popf
dec
jge
push
ds
and
cld
push
jns
jl
hlt
push
stc
xchg
mov
pop
sbb
adc
adcb
repz
mov
xor
xor
or
add
icebp
jns
test
mov
sub
mulb
outsl
in
bound
dec
not
add
call
xor
push
lret
push
pop
sub
out
mov
aas
das
aas
addr16
popa
pusha
leave
sub
mov
in
cmp
xlat
jb
mov
ret
aam
jge
inc
out
cmp
nop
movsb
insw
xor
mov
jno
lahf
repz
iret
out
add
popf
or
sbb
sahf
and
adc
mov
pop
xchg
inc
test
push
sub
xchg
sub
je
inc
movsb
pop
fimull
pop
push
in
dec
cmp
push
adc
adc
cmpb
pop
and
sbb
xchg
and
sbb
sbb
mov
jb
enter
int
popa
call
out
ja
in
incb
push
sbb
loopne
sbb
jb
add
pop
mov
aaa
fmul
nop
lret
in
insb
xchg
adc
push
add
or
xchg
iret
aaa
push
fimull
andb
fisttpll
and
and
jae
insb
sbb
fldcw
call
filds
jg
sbb
pop
dec
aam
pop
ret
daa
movl
or
fcmovnbe
fs
inc
sub
popf
sbb
jmp
lods
fwait
dec
inc
arpl
movsl
fisttpl
xor
loopne
stc
push
lock
mov
mul
sbb
mov
int
testl
push
dec
out
pop
pop
push
stc
sub
cmp
fsubs
jecxz
stos
dec
out
aas
jo
pop
push
jno
daa
or
mov
data16
imul
hlt
insl
mov
int3
cmpsl
lods
push
cs
dec
dec
jae
test
sub
mov
mov
push
add
addl
mov
dec
jbe
jle
xor
fsubrp
pop
out
stc
mov
movsl
cmp
mov
mov
cmp
cltd
xor
cmp
out
ja
mov
out
sbb
pop
and
adc
push
xchg
ret
mov
xchg
push
sbb
and
mov
loopne
into
mov
jl
jp
xor
fwait
push
arpl
lahf
dec
jge
scas
in
fstps
jo
stos
shll
enter
test
in
shrb
subb
fs
sarb
pushf
movsl
cmpsb
test
push
push
xchg
push
lea
es
sub
mulb
xchg
ss
mov
outsb
movsl
mov
adc
inc
sub
aaa
pop
sahf
inc
jns
jge
xor
sub
outsb
or
lods
inc
scas
out
adc
dec
ficompl
inc
ja
and
and
cmp
subl
xlat
fiadds
cmc
movsl
inc
sub
mov
xor
test
scas
cli
enter
cmpsl
out
cmp
sbb
mov
fwait
sbb
imull
outsb
xchg
out
fs
fisttps
xchg
inc
add
call
lret
add
dec
clc
int3
in
jo
mov
mov
test
mov
outsl
int
xchg
pop
push
lahf
pop
push
cmp
jno
sbb
sub
js
cwtl
out
ret
mov
adc
movsl
add
pop
mov
mov
and
inc
mov
incb
and
or
je
xor
inc
movsb
jbe
fwait
adc
pop
push
popf
sahf
clc
cmp
add
sti
sbb
push
mov
adc
das
cwtl
jp
or
fidivrl
std
fildll
subb
out
imul
sub
add
popa
cmpsl
add
or
pop
int
and
iret
mov
cmpsl
fbld
push
mov
loopne
clts
scas
lods
inc
shrb
lret
mov
subb
xchg
jp
stc
and
xor
jg
into
push
dec
jmp
test
inc
dec
roll
les
jae
sub
xchg
xchg
push
aam
sub
mov
inc
aad
js
cmp
fcmovnu
push
inc
std
push
and
popf
add
das
int3
stos
mov
es
xor
push
xchg
jae
int
pushf
and
mov
scas
inc
les
fsub
testl
inc
adc
xchg
in
ret
push
repnz
jl
shl
test
nop
sarl
negb
imull
mov
scas
jns
add
mov
call
push
cmp
lods
leave
inc
fs
daa
mov
sbb
adcb
adc
and
jp
jp
sbbb
mov
test
fcoml
icebp
mov
jg
cmp
xor
jmp
shlb
pop
popf
adc
jo
out
call
adc
dec
movsl
rcl
xor
add
pop
mov
imul
or
jns
xchg
jg
jnp
jp
insb
push
imul
dec
mov
sbb
aaa
sub
cwtl
xlat
aam
test
jbe
mov
addb
add
cltd
push
cmc
dec
xor
fisttpl
lock
outsl
subb
lods
daa
scas
or
int
incl
xchg
stos
imul
push
int3
lret
push
sub
fists
iret
xchg
mov
leave
das
movsl
sub
popa
jp
adc
iret
push
mov
jmp
add
ja
icebp
jns
jns
jge
jne
lea
mov
push
adc
sbb
movsl
xchg
hlt
into
cmp
inc
outsb
xchg
lahf
shl
ljmp
adc
xchg
or
push
jecxz
in
lds
adc
in
in
insb
ss
mov
cli
mov
arpl
clc
sub
adc
mov
pop
add
jns
xlat
push
shlb
inc
push
test
and
or
mov
mov
mov
and
cmp
movsl
add
lret
fcoms
data16
sbb
xor
shr
pop
jo
jecxz
adc
mov
sub
popa
push
and
pop
stos
dec
mov
add
cmp
shlb
scas
pop
mov
inc
lods
jo
jecxz,pt
jp
add
xor
xor
add
pop
std
call
xchg
out
movsl
mov
dec
frstor
out
sarl
in
and
pop
push
inc
sub
mov
and
inc
xchg
xor
shlb
xor
and
dec
ds
ret
call
jp
scas
sbb
sbb
test
outsl
scas
push
cli
stos
cmp
mov
mov
mov
or
sub
repz
jecxz
inc
stos
test
dec
call
or
mov
popf
push
inc
cmp
arpl
inc
push
sbb
xor
cmp
ljmp
adc
jecxz
push
lds
imul
inc
pop
in
mov
cmp
loope
xchg
add
mov
not
inc
lcall
lret
fwait
out
dec
dec
inc
fs
imul
mulb
dec
xor
push
jb
mov
jecxz
inc
fidivrl
push
in
shll
xchg
mov
push
jnp
xacquire
lods
sub
loope
sub
icebp
js
inc
push
cmp
xchg
pop
stc
js
dec
iret
movsl
ret
xchg
sub
rcll
shrl
inc
inc
xor
scas
aad
pushf
test
out
test
or
aam
stc
inc
xchg
mov
out
xchg
mov
inc
ja
movsb
fcompl
xor
test
cmc
in
push
jecxz
dec
lret
shlb
or
fdivr
jle
addr16
clc
dec
or
out
pop
pop
jb
inc
jne
hlt
popf
mov
sar
mov
addr16
jne
sbb
xchg
sbb
pusha
cwtl
ljmp
and
jb
jle
push
jbe
xor
jbe
imul
aad
or
jo
sar
fisttpl
out
push
xchg
fldenv
lods
or
jbe
sub
jg
out
dec
cli
pop
shll
push
mov
add
jb
adc
push
mov
push
mov
xor
xchg
lcall
xlat
les
aam
pop
jmp
jae
dec
push
mov
cmp
pop
es
sbb
pop
popf
adc
and
or
sahf
cltd
or
mov
adcl
sbb
jbe
cmp
cltd
sarl
faddp
or
test
arpl
rclb
dec
fimuls
add
into
imul
cwtl
adc
push
sbb
pop
pop
push
sahf
andl
fstp
xor
push
ret
test
cmp
mov
add
repz
call
sbb
imul
repnz
mov
cs
lret
mov
std
cmp
in
popf
or
jmp
shl
or
shrl
movsb
push
sub
mov
sbb
ret
test
imul
movsb
insb
std
jae
dec
sbb
popf
ficoml
cmp
repz
ds
sbb
cs
pop
std
push
jbe
stos
fidivrs
shl
fisubs
or
fcom
cmp
cmp
sbb
sti
fidivrs
cmp
xlat
push
inc
fildll
pop
insl
dec
out
pop
adc
add
scas
div
shll
sbb
stc
jg
andb
sub
cld
or
lds
xor
roll
push
adc
push
sub
test
loope
ljmp
out
lahf
and
cmp
ffreep
adc
push
sbb
out
cli
jl
pushf
fcmovnu
mov
xor
fcomps
pop
call
rclb
icebp
call
nop
push
daa
leave
les
or
jecxz
push
imul
fs
fld
cmp
outsl
mov
aas
inc
arpl
cmpsl
add
mov
hlt
jp
cmc
out
fnstsw
stc
cmp
dec
std
push
aas
dec
dec
dec
int3
push
fneni(8087
push
or
popf
cmp
out
xchg
out
lea
fldcw
ljmp
loopne
sahf
loopne
jo
xor
cld
jl
mull
inc
les
jno
leave
scas
repz
enter
add
rcrl
push
lahf
add
loopne
das
ja
mul
pop
sbb
xlat
lret
sti
ret
cmp
inc
clc
mov
loopne
hlt
xchg
ret
data16
pop
add
or
les
stos
sub
imul
pop
ficoms
inc
or
sub
and
push
inc
cmp
jmp
popf
lock
ljmp
dec
test
inc
insb
in
in
add
cld
pop
sbb
lods
push
roll
ret
and
popa
pop
push
shlb
stos
dec
daa
mov
addl
inc
lret
push
into
mov
gs
in
sub
dec
pop
pop
pop
repz
stos
adc
xor
ja
test
cwtl
cmc
xor
mov
xchg
imul
dec
mov
mov
mov
push
dec
cmp
jb
addr16
xchg
sti
push
xor
push
jns
push
pop
mov
and
lods
iret
dec
in
out
dec
out
sub
inc
sbbb
sbbl
pop
dec
or
sti
loope
sbbl
xor
mov
test
push
ret
je
and
mov
test
mov
in
cwtl
inc
pop
rcll
xor
dec
aas
and
dec
lods
dec
or
push
negl
push
dec
stos
dec
mov
sahf
ja
jle
pop
cs
test
leave
ljmp
sbb
loope
and
push
dec
in
or
leave
shl
jp
or
xchg
cmp
roll
mov
xor
pop
insb
add
mov
push
jnp
mov
xchg
popa
pop
push
and
sub
clc
int3
pop
xchg
push
in
mov
jg
sbb
stos
fisubrs
sbb
mov
sub
jbe
pop
xchg
or
cli
inc
inc
int3
mov
fstps
sub
add
sub
inc
out
insl
in
test
stos
rol
cmp
sti
scas
cmp
icebp
push
sub
pop
jmp
js
xor
sbb
aas
in
fdivl
mov
out
mov
adc
xchg
adc
sbb
loope
xor
movsb
out
sbb
aaa
or
cmp
sarl
lock
in
and
mov
xchg
lods
inc
stos
fidivl
aaa
insb
add
jle
jg
jg
clc
lret
cmp
inc
jp
sbb
push
xchg
mov
fstp
andb
aaa
push
repnz
jle
lret
cmp
xchg
stos
inc
popf
jg
lds
sub
cld
push
push
addl
enter
cmp
xor
mov
lcall
dec
adc
fdivr
sbb
ror
jge
dec
push
lret
dec
mov
fcmovbe
push
sbbl
dec
sbb
addr16
pop
out
into
inc
mov
xchg
mov
cmc
lods
push
dec
push
pop
sbb
or
sub
pop
adc
lret
into
sarl
imul
mov
stos
outsb
sub
gs
andl
mov
push
add
shll
sub
push
pushf
adc
lods
push
xchg
push
or
push
xchg
mov
shlb
sbb
aam
and
pop
addr16
sbb
cmp
xor
jbe
mov
push
cli
in
fwait
rcrb
jmp
mov
add
mov
add
xor
inc
lret
jnp
jo
mov
mov
mov
dec
xchg
push
lods
sub
sbb
sbb
or
xchg
mulb
mov
adc
int
es
lods
add
pushw
cmp
xor
das
into
icebp
push
sbb
or
or
mov
mov
pop
inc
mov
iret
js
sbb
xor
xchg
aam
add
sub
and
and
jae
sti
and
in
and
movsb
idivl
inc
pop
sbb
pusha
jmp
and
imull
dec
pusha
scas
das
lods
jns
mov
sub
push
dec
mov
dec
outsl
jbe
mov
push
aad
xor
hlt
fmuls
lret
push
aaa
mov
inc
int
jo
sbb
cmpsl
repnz
leave
ret
cmp
lret
push
push
dec
lahf
xchg
ss
dec
pop
int3
add
add
or
mov
aad
iret
jle
loopne
minps
int
sbb
pusha
repz
in
jge
mov
pop
jg
mov
xor
inc
test
repnz
pop
push
xor
xchg
mov
inc
pop
add
or
mov
sub
loope
ja
sahf
rcll
enter
jmp
mov
adc
jnp
cmp
pop
int
or
sbb
adc
fmull
xchg
mov
and
lds
jns
faddl
out
lds
ret
ds
mov
outsl
sbb
and
out
imul
movsb
in
add
xchg
aam
sahf
cmp
ss
out
adc
xor
enter
insl
outsl
mov
popl
jg
mov
shll
and
ds
xlat
sahf
test
inc
mov
pop
popf
stos
js
andl
xchg
sub
leave
jecxz
push
cmp
xchg
mov
mov
sbb
stos
xor
rcll
sub
mov
sbb
lret
mov
or
xchg
mov
jo
push
gs
mov
scas
out
xor
cmp
lcall
cmp
jge
stos
mov
js
add
movl
sub
pop
xor
mov
push
lods
adc
das
sti
arpl
rcr
ret
aas
mov
in
js
jo
adc
lods
pop
dec
cld
cmp
sub
fidivl
loopne
clts
jo
addr16
inc
movsl
pop
repnz
inc
shll
cmc
popf
push
mov
fs
and
mov
ljmp
adc
mov
int3
or
dec
rcrl
inc
xchg
aas
mov
cmp
gs
adc
loop
mov
lock
fdivl
push
jbe
call
pop
sti
adc
push
mov
sbb
inc
mov
add
mov
pop
lcall
pop
push
out
jne
addr16
xor
js
sbb
sub
lds
jb
aas
es
lods
dec
or
xchg
xor
cwtl
lret
pop
insl
mov
ret
or
pop
test
insl
mov
aas
mov
lods
std
adc
mov
mov
sbb
mov
arpl
lea
in
jae
movsb
and
xchg
jnp
ds
ds
cli
jecxz
mov
pop
mov
sbb
movsl
add
int
mov
in
xchg
xor
pushl
data16
cwtl
mul
lds
mov
int
scas
popa
fisttpll
inc
xchg
imull
and
addr16
and
or
inc
inc
int3
pushf
adc
sub
fwait
xor
pop
lcall
lock
loop
mov
stos
and
repnz
ror
fmuls
lods
ljmp
mov
jno
std
push
das
and
fldl
and
bswap
inc
dec
test
lret
out
cmp
jl
pop
rcrl
xor
dec
rclb
test
mov
aas
in
mov
in
lds
mov
push
enter
jns
inc
mov
xchg
ficomps
lahf
xor
cmp
loope
cmpsb
mov
mov
call
or
inc
adc
std
inc
hlt
xchg
insb
pop
test
add
nop
lods
jno
cmp
in
xchg
fldl
ss
movb
push
daa
sbb
or
stos
enter
pop
in
lock
mov
es
adc
mov
xor
das
and
mov
das
ret
leave
ds
loop
mov
jl
decb
xlat
pop
cld
add
in
sub
repnz
xchg
mov
xor
pop
add
push
push
push
les
add
scas
movsl
js
sub
add
mov
mov
js
cmp
inc
mov
leave
jbe
out
rcll
inc
mov
or
push
test
nop
push
adc
sahf
xor
fcmovnbe
cmp
ljmp
jnp
mov
out
jb
and
repnz
mov
xor
and
mov
pop
aam
in
and
dec
popf
inc
jno
andb
mov
cmp
adc
sub
push
inc
js
dec
fimuls
daa
add
addl
test
push
push
mov
push
daa
push
add
xor
lds
arpl
stos
xchg
mov
data16
inc
cmpsb
rolb
cmp
jge
mov
out
and
dec
push
and
stos
pushl
or
test
pop
or
pop
inc
jecxz
fsubs
pusha
stos
rcrb
pop
cmp
jmp
mov
ret
aas
ds
gs
inc
test
mov
dec
sub
push
inc
lahf
xchg
mov
in
icebp
mov
cmp
shrb
std
cmpsb
or
cmpsb
movsb
lret
jnp
sub
nop
cli
cwtl
movsb
mov
repnz
xor
jle
push
or
or
cmp
inc
hlt
pop
ljmp
aam
dec
test
aaa
ss
sahf
outsb
mov
xchg
xchg
push
lcall
pop
jbe
cld
std
aad
std
sti
insl
sub
sbb
ss
dec
clc
lcall
adc
repz
roll
adc
in
xor
and
cmpsl
cmovnp
pop
gs
jecxz
lcall
xchg
stc
xor
arpl
daa
add
cs
jne
aad
clc
enter
pop
out
in
xor
push
inc
into
xchg
and
orl
jne
xchg
jl
xchg
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
dec
mov
imul
push
jmp
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
movsb
pop
pop
mov
in
pop
movsb
iret
inc
and
std
mov
cmp
sbb
mov
shll
and
push
inc
les
mov
push
push
cmp
xchg
dec
inc
push
test
push
imul
gs
outsb
and
mov
cmp
sahf
rcr
lds
xchg
daa
add
loop
mov
bound
in
sti
fdivs
pusha
jno
sub
add
cmp
dec
inc
cmp
sahf
rcr
test
out
daa
adc
shrl
and
adc
fists
ret
scas
cwtl
pusha
outsl
imul
ret
arpl
imul
stos
add
mov
out
cli
and
loopne
dec
or
out
mov
and
int3
dec
lods
repnz
pop
push
imul
stos
add
mov
push
push
imul
add
mov
out
cli
and
loopne
dec
pop
push
sub
cli
xor
loopne
dec
pop
push
imul
stos
add
mov
fdivp
and
ljmp
jnp
and
stos
add
mov
out
cli
xor
loopne
pop
pop
push
imul
stos
add
mov
in
cli
and
mov
dec
pop
push
imul
stos
add
mov
out
cli
add
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
jg
mov
add
dec
pop
inc
imul
stos
add
mov
mov
stos
add
popf
dec
pop
mov
pushf
mov
xor
pop
push
test
xor
pop
push
imul
stos
add
mov
rorb
loopne
dec
pop
push
imul
stos
add
add
push
imul
stos
add
mov
cs
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
loopne
dec
pop
push
imul
stos
add
mov
out
cli
and
iret
mov
les
push
in
repnz
jno
mov
jns
jbe
repz
jno
mov
lods
mov
fidivrl
pop
aas
imul
sub
arpl
and
imul
lods
jge
fimuls
mov
or
lods
dec
adc
loopne
cld
in
movsl
push
iret
mov
add
rolb
push
pop
out
popf
test
out
movsl
adc
push
or
lret
jecxz
mov
call
aaa
dec
mov
and
aam
push
daa
inc
std
or
adc
inc
adc
jmp
in
pop
xchg
jl
gs
inc
inc
xchg
xchg
enter
aaa
sahf
es
ret
sbb
ss
test
mov
xor
mov
into
push
cmp
stos
inc
aaa
andl
andl
xor
enter
pop
sbb
inc
orb
out
bound
je
inc
adc
lahf
scas
repz
push
cmp
xorb
sub
je
sbb
adc
sub
cmp
nop
pop
cmovl
sbb
inc
add
mov
pop
and
lock
mov
mov
out
sahf
fnsave
pop
adc
stos
push
inc
pop
fdivrs
push
sbb
test
jecxz
xor
add
lds
nop
int
push
out
aaa
pop
mov
mov
dec
in
lods
pop
and
jne
jmp
shll
es
cli
aam
test
movsb
imul
adc
adc
cmpsl
jge
or
inc
in
js
mov
fdivl
inc
push
sub
inc
sti
rcrb
scas
inc
mov
xor
cwtl
cltd
lret
cmpsl
cmp
cmc
imul
bnd
and
subl
push
ja
lcall
mov
mov
shll
sub
and
sub
pusha
push
outsl
nop
repz
push
add
add
jne
sbb
xor
imul
imul
shl
int3
dec
jns
dec
cwtl
ret
fxam
or
cmp
cmpsl
or
sbb
mov
call
mov
xlat
jp
sbb
inc
icebp
xchg
jno
inc
cmp
or
leave
cmp
xchg
loopne
negb
hlt
ret
sahf
scas
pop
xor
icebp
push
rcr
mov
cmp
push
in
ret
and
rorl
mov
mov
add
rorb
inc
sub
push
js
insl
fmuls
scas
mov
inc
roll
sub
add
popf
jnp
dec
cmp
out
cmp
in
faddp
xor
cltd
test
popa
or
scas
and
xor
jmp
js
xor
scas
or
nop
fsts
movsb
or
add
or
jp
outsl
inc
mov
xchg
movsb
or
jle
sbb
stos
sbb
sub
call
cmp
es
xchg
arpl
xchg
mov
dec
sbb
sub
and
or
xor
fsubs
cld
outsl
dec
sbb
cmp
cld
jp
pop
outsl
adc
mov
mov
jns
push
loop
add
dec
inc
popf
jmp
xor
in
mov
lret
jb
clc
je
ds
sub
push
cmc
jle
ljmp
mov
jp
mov
and
je
push
push
push
in
jae
add
lcall
inc
sub
test
sub
leave
sbb
mov
into
out
cmpsb
adc
or
fsubs
sbb
data16
pop
test
and
leave
shlb
pop
aaa
push
cs
lcall
testl
push
fstpt
aad
xlat
lcall
mov
mov
aas
or
pushf
scas
mov
dec
out
call
out
sbb
dec
and
mov
mov
push
enter
idiv
xlat
xor
insl
cmp
cmpl
add
loopne
ret
lret
insb
mov
fsts
fcmovb
js
mov
xchg
xchg
mov
rorb
xchg
pop
lret
gs
mov
mov
mov
add
pop
pop
fst
push
cmp
in
nop
push
xor
sbb
pop
cld
mov
js
push
out
mov
hlt
mul
repnz
dec
add
xor
iret
scas
add
jno
pop
ja
or
mov
cmpsl
sbbl
mov
sbb
bound
and
mov
pop
or
imul
adc
in
inc
ds
sub
xchg
outsb
jne
mov
jp
jo
add
fistpl
ljmp
push
jo
lret
ficoml
xor
xor
cmpsl
cltd
shrb
pop
in
je
mov
out
inc
lods
fdivrl
add
gs
int
ret
dec
cmpsl
mov
es
xchg
add
mov
imul
jo
inc
add
jnp
in
daa
mov
lret
jmp
arpl
jo
push
mov
jp
inc
jb
ror
dec
mov
rclb
or
and
sub
jne
ja
xchg
inc
ljmp
int
jb
call
out
leave
or
arpl
jmp
iret
sbb
out
mov
mov
iret
mov
scas
lcall
jne
push
bound
cld
loop
sbb
xchg
jb
nop
inc
cmp
mov
lret
in
adc
jbe
popf
jecxz
jmp
mov
jle
mov
cmc
aaa
pop
pop
enter
jmp
leave
jae
cltd
cli
and
movsb
mov
or
or
or
mov
pop
adc
scas
mov
dec
sub
mov
xchg
gs
push
ret
push
xor
stos
insb
push
jae
cmp
xor
fwait
jecxz
xchg
add
add
adc
lods
sbbb
jnp
add
ret
xor
jmp
xor
jns
sbb
sub
adc
add
adc
add
int
bound
mov
ljmp
adc
sub
dec
loopne
push
fdivrp
adc
fcoms
mov
imul
mov
mov
add
mov
lret
jecxz
cmp
dec
mov
adc
push
sbb
push
and
xchg
jecxz
std
fsubrp
bound
mov
imul
ljmp
imulb
mov
mov
js
mov
push
xor
fmull
inc
popf
jbe
cltd
cltd
pop
adc
ss
jae
add
fbstp
cmp
or
xchg
or
stc
aad
cmp
or
pushf
das
ficoms
inc
gs
mov
jae
jb
inc
push
jo
test
pushf
or
xchg
mov
inc
outsl
and
cmp
push
enter
dec
int3
jecxz
aaa
jbe
jmp
out
cmp
in
add
push
cltd
dec
js
cs
dec
mov
dec
pop
inc
sub
push
hlt
mov
sahf
and
and
add
mov
dec
dec
cmpsb
dec
and
test
push
cld
mov
repnz
and
adc
jmp
push
push
lea
sub
mov
inc
jecxz
mov
push
fdivrs
dec
cmp
andl
jb
cmp
jge
fcmovbe
jmp
data16
cli
pop
test
pushf
outsb
repz
adcl
sbb
jp
cs
cmp
aam
dec
xor
iret
test
dec
aas
in
dec
shr
cbtw
rcll
sbb
dec
cmp
ss
mov
sub
ret
mov
popf
not
xchg
in
pop
sub
dec
xchg
adc
xchg
mov
loope
lock
add
and
popa
pushf
pushf
addr16
inc
sub
adc
into
inc
xor
movsb
fsubl
cmp
notl
pop
cmp
cmp
mov
mov
sti
sbb
lods
push
push
repnz
adc
inc
lcall
scas
mov
xor
fcoms
mov
pop
hlt
iret
mov
pop
sbb
mov
inc
push
out
cli
test
xchg
jno
jo
in
aas
xchg
icebp
inc
dec
mov
pop
test
scas
push
in
movsl
inc
testl
imul
jp
mov
adc
inc
sahf
xchg
test
hlt
mov
mov
cld
cmp
lcall
jle
scas
sbb
cmc
stos
fildll
and
fcompl
add
inc
push
sbb
jl
sbb
push
popa
ret
pusha
mov
aas
clc
pop
sbb
iret
xor
cmpl
mov
sti
cli
rorl
ja
xchg
int3
es
stos
out
loopne
cmp
cs
push
inc
inc
pop
shrb
ret
insb
pop
insb
mov
out
push
iret
stos
stc
cltd
xchg
clc
fs
dec
cmp
and
jle
adc
push
std
mov
dec
add
xchg
xchg
fnstsw
or
jl
icebp
mov
in
cmp
add
adc
cmpsl
fucom
jp
or
loop
fsubrl
fbld
cmc
and
popf
lret
mov
loop
arpl
cmp
xchg
xor
mov
lea
xlat
cli
loop
dec
sbb
out
pop
rcll
bound
and
cmp
stos
inc
icebp
in
lea
ret
sub
dec
mov
mov
clc
sbb
pushf
nop
les
sub
jb
ljmp
xchg
cmp
sub
dec
insl
xchg
mov
add
cmpsb
xor
pop
cmpsl
movl
add
inc
and
aas
push
lock
xchg
ret
in
call
rorb
or
pop
sbb
mov
daa
jle
stos
rcrl
pop
std
lret
in
fnstcw
or
xchg
ss
pop
pop
fidivrl
nop
popf
pop
shr
sbb
mov
in
mov
ficoms
mov
out
andb
sub
jmp
lret
sti
jle
frstor
dec
loopne
xor
lret
cmp
popf
pop
sbb
fnstsw
and
push
int3
gs
out
mov
xor
cltd
movsb
fimuls
push
xchg
lea
inc
jae
dec
shl
andb
adc
call
pop
data16
xor
mov
mov
and
cmp
gs
rorl
pop
add
arpl
outsb
fdivrs
sbb
push
dec
js
push
add
pop
dec
sti
in
arpl
ds
jnp
mov
and
xor
inc
pushf
into
mov
daa
cltd
mov
adc
mov
ficoml
idivl
inc
mov
push
rorb
lea
les
enter
adc
xor
das
dec
dec
aam
mov
popf
jg
ljmp
data16
pop
sti
and
and
inc
push
cmp
mov
cmp
mov
xor
pop
mov
movsl
pop
and
in
arpl
js
jl
outsl
push
jae
and
stos
gs
push
jo
shlb
sub
rorl
sub
inc
arpl
push
outsb
mov
out
mov
mov
mov
outsl
jge
add
add
das
rcll
call
bound
fstpl
aas
ret
dec
pusha
cmp
push
push
int3
inc
ss
add
bound
int3
dec
cwtl
ffreep
xchg
dec
and
mov
sub
es
int3
pop
dec
xor
fldenv
icebp
mov
dec
repnz
inc
dec
push
inc
mov
das
xor
sti
xchg
xchg
jmp
aas
sbb
xchg
mov
idivb
cwtl
jno
push
cmp
fs
stos
xchg
outsl
and
je
loop
xchg
gs
cmpsl
and
pop
out
pop
gs
and
pushf
movsl
sbb
add
es
jmp
push
dec
lahf
sbb
inc
inc
mov
lock
xchg
push
mov
fdivrl
mov
xchg
inc
push
push
ret
in
es
dec
jg
push
pop
fldl
lods
or
jg
cwtl
pop
adc
imul
ja
aad
rclb
fucomip
es
push
imul
mov
sbb
sub
or
fs
push
mov
lock
insl
sti
cmc
cltd
jb
aaa
jge
into
mov
insb
shl
inc
ds
out
push
enter
inc
sub
std
rorb
push
ret
lods
rcrl
cmp
insb
mov
jb
xchg
cmc
aad
nop
xor
jno
pop
xor
test
or
iret
out
xor
mov
into
cli
stos
stos
enter
out
ds
inc
push
pop
pop
aaa
jbe
pop
test
clc
mov
ds
push
adc
sub
fildll
mov
lods
jle
outsb
xchg
insb
cmp
push
notb
adc
cmp
cmp
psubd
lock
inc
mov
sbb
loope
xchg
sub
or
clc
mov
cmpsl
stos
add
lret
scas
icebp
nop
fs
mov
xchg
cwtl
popa
ds
leave
cwtl
pop
test
jg
xchg
adc
cmp
fadds
cli
aad
push
fmul
xor
es
je
fxch
ret
push
aad
cmp
daa
rol
jge
cmp
mov
iret
push
in
sbb
decl
loope
sbb
dec
cld
or
in
cs
sub
shr
imul
rclb
pushf
inc
lods
rcll
fstpt
cmovl
fcoms
dec
sub
inc
lret
pop
aam
test
stos
pop
xor
push
fisubs
in
mov
jbe
repnz
fidivl
xchg
ret
and
push
loope
pop
iret
fcomps
cmp
push
pmovmskb
pop
add
clc
sub
sbb
fisubl
cwtd
out
inc
mov
or
jo
pop
push
jbe
add
add
repnz
imul
mov
in
arpl
dec
cmpsb
cmpsl
cmp
incb
imul
sub
fwait
outsl
and
or
inc
push
push
pop
jl
mov
xchg
aam
popf
jmp
repnz
cmc
lret
nop
dec
xchg
sti
xchg
fimuls
xchg
dec
xchg
pushf
mov
ficoms
dec
ja
add
xchg
mov
sub
iret
pop
sub
xchg
outsb
aas
test
js
lahf
jge
ss
or
insb
stc
test
dec
mov
icebp
cmp
lods
sub
mov
cli
test
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
