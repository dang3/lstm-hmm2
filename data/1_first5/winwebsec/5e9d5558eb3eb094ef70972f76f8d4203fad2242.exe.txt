ljmp
push
sbb
vrsqrtss
scas
push
fwait
popa
ficompl
pop
jge
inc
in
push
sarb
das
xor
mov
dec
clc
pusha
fnstsw
cwtl
bswap
push
gs
fcoms
notb
dec
jno
shll
in
aas
sbb
outsl
fsubrs
mov
mov
push
cmpsl
fcoms
outsl
xor
jp
add
lock
gs
adc
leave
icebp
daa
pop
push
cmc
insl
and
test
sbb
or
and
aaa
and
enter
xor
shrb
mov
fdivrs
ss
or
shl
lods
std
test
js
inc
mov
inc
cmpsb
in
das
ret
and
outsl
dec
lahf
inc
adc
test
cmp
mov
in
test
pop
push
pop
xor
es
pop
adc
sbb
ja
test
mov
aam
sbb
lds
sub
pushf
out
and
pop
inc
xorb
push
mov
lret
inc
lret
fbld
dec
fcmove
daa
fdiv
mov
fisubrl
dec
add
adc
test
sbb
xchg
pop
enter
hlt
jae
xchg
aaa
xor
add
nop
or
sub
aaa
daa
or
pop
lahf
iret
out
or
jp
pop
ret
cmp
xchg
enter
test
stos
inc
push
add
in
int
sbb
into
fmuls
leave
shl
cmpsb
adc
repnz
pop
cmp
gs
jge
ds
loop
mov
dec
xor
adc
sub
mov
xor
xor
ficompl
xchg
int3
pop
or
idivl
loope
in
subl
enter
and
std
xorl
clc
int3
stos
and
push
arpl
dec
or
mov
shrl
call
xor
mov
flds
xchg
test
clc
stc
fnsave
pop
insl
pop
outsb
dec
cmc
lcall
lds
adc
mov
mov
or
adc
adc
dec
fistps
xor
out
clc
push
xchg
cli
cmp
add
pop
xor
lcall
sbb
test
pop
push
push
dec
jg
jge
jbe
fs
mov
mov
add
inc
mov
or
outsl
sub
mov
push
rcrb
pop
cli
pusha
jg
leave
or
les
jmp
dec
out
fnstcw
movl
leave
mov
add
outsl
jmp
xchg
mov
add
jecxz
mov
loop
push
jmp
cmp
mov
in
sub
push
stos
out
scas
lods
cmpb
or
outsl
es
out
cld
adc
std
shlb
hlt
movsl
pop
test
nop
xor
xchg
pextrw
mov
xchg
push
int
inc
stc
movsl
into
movntps
mov
leave
imul
or
lret
xchg
stos
in
or
xlat
ljmp
add
sbb
mov
cmp
add
xor
xchg
movsl
adc
jae
mov
xlat
cmp
sub
sbb
mull
cld
sbb
ds
test
push
jmp
or
outsl
fnstcw
in
add
scas
fsubrs
jl
pusha
out
test
call
lods
cli
pusha
imul
mov
jl
lods
bound
das
fistps
pop
xchg
and
cmp
mov
or
je
icebp
shll
cltd
jmp
sub
and
imul
shll
mov
sahf
cmp
das
mov
xchg
insl
and
cwtl
in
icebp
jae
pop
test
sub
pop
cmpxchg
xor
add
fs
mulb
xchg
mov
ss
lds
fs
cmp
jl
xor
add
je
push
pop
adc
sbb
or
ret
insb
sbb
dec
adc
scas
jg
xchg
inc
mov
testb
push
insl
jecxz
fisttps
dec
xchg
mov
mov
popa
xchg
out
push
pusha
cmp
xor
leave
add
lds
lock
imul
rol
addr16
test
xlat
mov
cmpsl
or
pop
mov
daa
movsb
add
nop
pop
addr16
lea
adc
mov
arpl
push
std
mov
and
add
sbb
or
outsl
sarl
cmpsl
leave
mov
les
mov
lcall
adc
test
mov
in
inc
rcl
pop
fcompl
int
shlb
and
fwait
nop
mov
popf
xor
ljmp
lds
lret
aaa
xor
movsb
lret
test
fsubl
pop
inc
inc
lea
insl
fstpl
push
testb
cltd
push
push
jp
xchg
outsb
cli
dec
jle
cmp
mov
jae
sbb
mov
inc
cmpsb
insl
stos
pop
jnp
sub
jnp
adc
push
stos
lods
test
movsl
inc
loop
sub
js
imul
mov
and
sbb
sub
push
std
fwait
add
stc
sub
inc
xchg
sub
cmp
clc
xlat
cltd
dec
icebp
jle
push
nop
inc
insl
lret
pop
add
out
rorl
push
mov
cmp
mov
dec
pop
or
xchg
out
jle
imul
lcall
pop
lods
cltd
xchg
jl
call
arpl
insl
adc
push
cmc
je
dec
test
mov
loope
mov
pop
enter
es
push
inc
mov
jmp
push
mull
scas
out
jne
lret
mov
out
in
jo
fistl
mov
out
mov
mov
outsl
and
push
sbb
pop
pop
lods
or
mov
jp
scas
jne
add
cmp
pop
lahf
mov
stos
xor
movsb
push
stc
hlt
ljmp
loopne
jp
cld
dec
sbb
movsb
idivb
lahf
mov
mov
icebp
push
push
enter
mov
mov
sti
das
sahf
push
outsb
inc
pop
push
sbb
mov
sub
cmp
jo
inc
pushf
rcrb
test
pushf
insb
dec
cmp
pop
call
call
or
aam
push
adc
jg
push
pop
xchg
mov
ret
insl
mov
mov
xlat
mov
jecxz
and
ret
adc
add
scas
js
mov
jnp
fcoml
push
stc
in
idivb
dec
scas
pop
jne
xchg
mov
stc
pop
fcomp
loope
adc
jmp
push
and
jle
leave
mov
adc
xor
jle
or
in
mov
jae
mov
out
pop
mov
js
fs
nop
xchg
cmp
lret
and
aam
into
mov
sbb
lahf
subb
mov
shl
das
stos
mov
add
pop
cmp
aas
sbb
ja
and
sbb
lcall
lcall
repnz
push
mov
enter
insl
ror
and
loopne
shl
xor
gs
dec
pop
xor
mov
sub
negl
addb
xchg
pop
ret
mov
sub
mov
cld
mov
cmc
inc
rcr
sbb
stos
mov
inc
fildll
popa
adc
cs
mov
mov
mov
adc
call
and
pusha
jl
xchg
pop
lcall
push
insl
dec
inc
pop
repz
mov
test
push
imul
dec
decb
cmp
daa
out
sub
jnp
push
xlat
lods
push
xchg
fstps
mov
jmp
pop
cmp
test
bound
or
pop
inc
xlat
stos
adc
shrb
fisubl
fldl
jmp
lahf
dec
mov
adc
test
jnp
push
fisttps
cmp
mov
popf
js
sub
notb
fcmovne
repz
in
mov
sub
int3
mov
sbb
shl
sub
nop
lods
leave
mov
and
mov
fucomi
cmc
clc
jnp
mov
pushf
loop
pop
andl
dec
movsb
adc
inc
or
sbb
jne
add
jnp
sub
movsl
jno
and
xchg
jge
sbb
pop
sahf
xlat
ds
ficoms
repnz
cli
lret
or
fstl
cmp
xchg
inc
mov
push
scas
sub
cmp
mov
and
or
inc
mov
jbe
mov
lcall
movsb
in
push
or
outsb
mov
xlat
hlt
iret
cmp
add
stos
data16
test
fiaddl
lret
mov
loopne
je
out
icebp
lea
mov
insl
nop
cs
pop
mov
lds
mov
fisttpll
pop
mov
pop
xor
pop
jo
push
daa
jmp
pop
fwait
jne
and
vorps
cli
mov
ja
psllq
adc
and
push
mov
mov
mov
add
rcrb
push
arpl
filds
push
icebp
hlt
movsb
or
lea
mov
push
sub
into
fnsave
pop
cli
mov
adc
loope
add
dec
ss
inc
aaa
call
adc
mov
mov
or
leave
adc
stos
push
cmp
push
xor
data16
and
sbb
shll
sti
cltd
xor
mov
mov
xchg
ds
xor
push
arpl
imul
cltd
scas
ret
pop
lods
cmc
jb
jnp
decb
ljmp
sbb
fcmovnb
xchg
jmp
mov
stos
test
pop
mov
out
imul
jbe
hlt
mov
aaa
and
cmp
xchg
push
repnz
stos
inc
mov
adc
sbb
dec
adc
fmull
pop
insl
fldenv
xchg
inc
movsb
mov
mov
xor
jo
push
adc
out
test
rorb
cld
dec
enter
popf
xchg
es
sub
stos
and
or
aas
ret
xchg
xchg
jp
jns
aam
jge
mov
mov
insl
ret
inc
xor
mov
int
das
popa
clc
inc
mov
sbb
sbb
mov
jge
popf
xchg
sbb
push
inc
push
add
inc
mov
or
push
in
frstor
dec
push
fwait
inc
jecxz
push
loope
loop
add
mov
xlat
and
es
or
daa
sub
out
cmp
in
xlat
imul
xchg
orl
orl
lods
jnp
inc
icebp
adc
rcrl
lcall
cmc
aaa
push
push
xchg
xchg
out
cmp
inc
cmpsl
ja
xor
les
addr16
cmpb
sbbb
sub
pop
jno
rorl
adc
add
ds
push
jmp
fimull
pusha
cmp
gs
test
sbb
jmp
xor
repz
fisttpll
lea
xor
sbb
mov
push
sub
pusha
loope
out
loopne
inc
aad
xor
or
es
mov
inc
pusha
sbb
mov
cltd
push
mov
arpl
sbb
addb
or
pushf
mov
sahf
sub
or
xchg
sbb
inc
push
frstor
xchg
ja
repz
sbb
jae
js
orl
test
aas
roll
test
clc
adc
xchg
cmpsl
clc
and
testl
jb
mov
sbb
cmc
push
popa
add
leave
xchg
sub
adc
lds
in
push
out
xor
pop
iret
cmp
outsl
test
push
aam
inc
or
cmp
fs
shll
and
shll
mov
jo
ret
popf
in
and
repz
sbb
mov
pop
dec
jecxz
add
mov
add
or
xchg
mov
cld
leave
fwait
xchg
xchg
inc
mov
and
cmp
pop
sbb
lret
push
adc
scas
loopne
rcr
push
add
pop
ret
mov
jns
fwait
xor
mov
ret
push
or
insl
cmp
jae
jae
pop
fidivrl
sub
and
mov
sbb
push
ss
sbb
mov
insl
pop
mov
fwait
std
pop
rcl
dec
xor
mov
xlat
push
dec
mov
push
sub
bound
jecxz
lods
mov
data16
lock
icebp
nop
or
inc
js
add
xor
push
mov
test
lods
lahf
jnp
frstor
insl
mov
pop
pop
sbb
jle
mov
cmc
cli
loopne
loop
xchg
inc
bound
fiaddl
mov
test
jbe
andps
int3
shlb
iret
aaa
sarl
pop
data16
adc
jb
mov
int
in
je
lret
mov
mov
pop
imul
add
cmp
jbe
lods
andl
insl
or
cmp
test
jno
adc
out
rcrl
sbb
inc
sub
jecxz
les
push
adc
xor
add
cmp
addr16
fistl
cltd
push
jmp
mov
dec
cmp
insb
shl
fwait
dec
je
out
inc
inc
stos
mov
mov
in
mov
mov
mov
jecxz
imul
inc
call
push
push
aaa
push
jbe
or
es
pop
ret
xchg
int3
push
xchg
pop
pop
push
aas
aaa
dec
shll
out
push
adc
mov
cmp
imul
xor
add
xor
xor
mov
sbb
stos
inc
jae
push
cmpsb
pop
cs
add
cmp
xchg
aad
fs
pop
repz
insb
scas
sbb
sbb
or
insl
pop
pop
pop
inc
inc
push
call
xorl
movsb
addr16
fistl
lock
sbb
mov
in
addb
and
mov
movsb
jne
fiaddl
stos
dec
jno
adc
jle
insl
imul
mov
rcrl
adc
dec
lock
mov
xor
cmp
daa
and
inc
xchg
jmp
shlb
sti
jo
cld
sbb
mov
jp
and
inc
cmp
stos
lahf
les
sbb
repnz
lcall
push
xor
test
iret
jne
xchg
cli
xor
inc
add
xchg
repz
shrb
cld
sbb
dec
mov
daa
push
mov
inc
xchg
inc
push
in
sub
sahf
stos
mov
push
push
cmpsb
lock
icebp
push
mov
js
or
cmpsl
sub
xor
mov
sub
lods
push
scas
sub
pop
pop
fwait
and
test
adc
sub
dec
stos
lods
mov
push
adc
dec
fadd
daa
ud0
shlb
aad
std
popa
sbb
add
mov
dec
test
scas
and
jl
shlb
inc
bswap
mov
xchg
mov
jo
mov
mov
add
sbb
xchg
mov
adcb
xchg
mov
mov
scas
mov
movsb
push
rorb
pop
mov
add
test
out
enter
repz
sahf
lret
push
fwait
or
frndint
add
sub
and
ret
stos
mov
cld
fs
sbb
cmp
pusha
jl
outsl
mov
xchg
cmp
push
mov
inc
into
mov
pop
aas
pop
and
idivl
xlat
adc
push
and
fwait
mov
jle
mov
jb
movsb
ret
pop
lcall
dec
pop
push
fidivrl
adcb
or
inc
out
hlt
mov
cli
pop
fimuls
mov
add
sahf
out
in
sub
movsl
mov
sub
rorb
push
es
add
push
fnstsw
test
add
dec
or
int
cs
mov
dec
ss
icebp
xchg
pushf
cld
pop
jl
mov
movsl
sub
ret
movsl
sbb
sub
add
and
xchg
mov
and
or
pop
adc
xor
pop
aaa
adc
movsl
push
and
or
sbb
push
mov
xor
pop
notb
fbld
xchg
mov
adc
loop
inc
loop
push
pop
or
xor
mov
xchg
pop
sub
mov
mov
cmp
sti
push
gs
orb
or
cmp
mov
pop
iret
fiadds
inc
mov
cmp
xor
shr
mov
cwtl
cmp
mov
xchg
mov
cmpsl
pop
ret
movsb
movsl
pushf
dec
mov
and
fisttps
dec
xchg
jmp
pop
scas
cmpsb
aas
dec
cld
sbb
stos
jle
lret
sbb
sti
add
jle
inc
icebp
cmpb
pop
cmpsb
pop
mov
jno
cmp
fwait
jno
jno
add
xor
or
or
cmp
inc
dec
pop
mov
xor
or
iret
add
xchg
jl
fisubrl
aas
sbbl
insb
rcll
xor
sub
pop
sub
imul
fsubrs
das
xchg
div
and
push
shl
and
mov
jnp
sub
sbb
mov
rol
ljmp
mov
stc
jmp
jg
jae
cli
cli
jge
shrb
ret
jns
adc
lods
jmp
fwait
adc
fwait
cld
mov
cwtl
adc
popw
test
in
ljmp
in
test
enter
mov
and
adc
push
mov
mov
or
mov
cmpsb
jmp
sbb
cmp
push
xlat
inc
pop
push
adc
outsb
cmp
jp
or
cmp
xlat
jne
int3
das
push
inc
clc
fisubrl
push
sbb
js
cmc
stc
inc
mov
inc
sub
cltd
stos
movsl
sti
fadd
push
sbb
aas
sbb
push
xchg
movsb
and
push
sbb
popf
movsb
mov
xchg
mov
test
loopne
add
movsl
sub
push
cmc
fucomi
nop
dec
cltd
inc
jbe
bound
xchg
mov
mov
stos
int
hlt
lock
lcall
sub
fildl
sub
fs
sbb
jbe
mov
mov
daa
jno
lods
push
dec
xor
push
cwtl
jl
or
in
jae
js
mov
aad
cs
lds
cmc
stc
jne
cmp
sbb
jnp
into
lock
or
pop
dec
addr16
lahf
fidivrs
cmp
lret
jbe
jge
jns
jnp
xchg
jge
arpl
jecxz
xchg
push
test
adc
imul
sub
test
or
cmc
inc
dec
addb
dec
add
jecxz
in
cmp
lcall
test
pop
xchg
lods
test
sbbb
add
fstpt
pop
xchg
bound
into
fsubs
stos
movsb
mov
fbld
sub
jecxz
fistps
int3
and
push
adc
cmpsl
sbb
daa
int3
inc
jmp
mov
iret
mov
mulb
imul
stc
loope
leave
push
inc
or
push
movsb
add
mov
sbb
in
push
sub
push
or
inc
mov
inc
cwtl
push
iret
aas
inc
adc
mov
cmpsb
cmp
out
inc
fnstsw
inc
mov
push
rorl
push
mov
mov
mov
popa
jp
cltd
ss
mov
adcb
in
mov
push
mov
dec
leave
cli
jp
pop
popa
mov
repnz
adc
dec
loopne
movsb
icebp
test
inc
xchg
icebp
pop
mov
inc
xor
pop
out
pop
push
mov
and
rcrl
jne
jmp
inc
mov
inc
lcall
nop
ja
mov
add
cli
push
ret
insl
enter
sbb
ret
pushl
and
test
pusha
data16
mov
fiaddl
push
push
xorb
push
in
sub
add
xor
and
gs
cmpsl
data16
mov
push
fistpl
test
rcrl
movsl
enter
jg
es
cmp
sbb
inc
in
std
push
cmpl
jns
cmc
cld
xor
mov
xchg
sbb
test
pop
mov
xchg
jno
mov
inc
mov
push
lret
push
mov
andl
sar
lods
loopne
es
mov
mov
rcrb
ret
scas
mov
mov
jns
int
mov
ret
jecxz
shll
mov
mov
stos
push
push
les
and
mov
movsl
addl
adc
lahf
and
fwait
xchg
aad
sub
xor
mov
pop
subb
xlat
adc
enter
push
int3
pop
xor
iret
cmp
jl
dec
pop
xchg
xchg
push
std
cmp
fdivr
scas
xchg
mov
les
jle
push
stc
es
int
iret
cmp
std
fucomi
inc
dec
xor
xchg
push
cmp
lods
arpl
das
repnz
dec
xchg
imul
outsb
mov
pop
imull
and
xor
cvttps2pi
xor
mov
nop
dec
mov
xchg
loop
gs
nop
or
outsl
mov
movl
and
adc
adc
ds
mov
andl
dec
ds
sub
fldt
aam
push
popa
pop
and
pushf
and
or
stos
repz
or
or
sbb
xchg
mov
lods
popf
subb
push
cmpsb
mov
inc
push
hlt
jno
lret
jne
lds
jae
loopne
jl
shl
sub
lds
jle
out
mov
and
push
stos
push
mov
in
push
push
jge
push
cmpsb
sub
fwait
jo
mov
sub
push
mov
dec
and
sub
pop
out
pop
push
sahf
jle
iret
sub
push
sahf
add
loop
shlb
inc
jae
push
shlb
je
aaa
imul
adc
inc
out
cmp
dec
mov
insb
push
movq
faddl
xor
jl
cmp
shl
dec
hlt
jb
or
iret
xchg
mov
aaa
int3
mov
bound
sub
fdivrl
dec
test
mov
push
xor
or
mov
test
lods
leave
xchg
cli
mov
rorb
lret
dec
or
mov
out
sub
xor
js
inc
outsb
xchg
mov
xor
insl
and
dec
cmp
xchg
dec
lock
dec
lahf
ss
subb
add
pop
or
mov
mov
filds
xor
movsb
enter
mov
jb
je
pop
push
xor
pop
dec
mov
andl
cmp
mov
sub
insl
enter
orl
and
lret
js
jle,pt
xlat
std
cs
les
jno
dec
insl
xchg
and
daa
push
lds
jg
mov
add
cmp
test
inc
sbb
push
aam
pop
xchg
jns
lods
pop
bound
cmp
jno
pushf
adcb
add
push
cli
das
rorb
test
test
daa
mov
pushf
sub
cmpsl
popf
fldcw
xchg
xchg
fdivrl
adc
mov
aad
push
jns
in
in
mov
and
adc
mov
mul
jo
cmpsl
cmpsl
stc
dec
and
sahf
jge
scas
sbb
dec
xlat
xchg
lahf
mov
add
mov
mov
int
add
pop
pop
jge
arpl
or
pushl
jnp
adcl
push
int3
adc
js
inc
test
jo
push
xlat
mov
xlat
notb
sbb
jmp
fidivrs
aad
bnd
mov
mov
out
push
cmovae
jno
cmp
lods
leave
pushf
pop
mov
jae
mov
lods
push
enter
es
sbb
pop
lcall
adc
test
stos
or
aaa
xchg
jbe
adc
sub
dec
pop
ror
or
lods
xchg
cmp
add
push
in
cmp
xchg
pushf
loope
sub
lods
fiadds
mov
ljmp
in
je
inc
popa
sti
cmpsb
pop
cs
mov
pusha
push
inc
movsb
push
pop
dec
pop
and
sub
mov
inc
lcall
into
pop
or
lret
js
or
insb
xchg
jne
into
and
sbb
xchg
shll
clc
je
in
xlat
int
lock
jo
jmp
jmp
lods
sahf
mov
adc
sub
sahf
into
pop
sbb
pop
mov
jno
mov
scas
mov
adc
push
push
jmp
adc
xchg
add
cmp
dec
in
gs
out
jge
sub
imul
repz
lcall
sti
fwait
mov
dec
or
mov
outsl
repz
cmp
arpl
cmp
movsb
mov
sbb
jno
inc
ljmp
loope
dec
add
clc
loope
imul
fadd
aad
dec
insl
mov
fisubs
rorb
adc
fimull
push
out
outsb
mov
aad
mov
out
test
pop
test
push
adc
mov
enter
leave
cltd
call
or
cld
mov
sub
pop
leave
xor
or
jmp
pusha
pop
arpl
test
inc
popf
movsl
mov
or
sbb
mov
loop
and
xchg
cmc
push
cmp
inc
subb
mov
insl
in
jbe
xorl
adc
and
mov
mov
repnz
sbb
lcall
stc
rolb
dec
call
jno
pop
sbb
jb
rorb
sub
sub
pop
adc
lods
dec
xor
mov
push
xlat
or
cltd
int3
and
popa
jno
and
add
and
jae
imul
sbb
xchg
arpl
jbe
add
push
jg
rolb
adc
push
shrb
sbb
out
ljmp
inc
sti
inc
iret
mov
adc
idivl
aad
mov
insl
cmpsb
xorl
mov
ja,pn
scas
data16
or
mov
push
mov
push
test
or
sbb
lods
lds
jnp
ss
lods
xchg
movb
and
sti
mov
jecxz
loope
ret
or
cs
dec
scas
cld
imul
cltd
ret
cmpsl
sub
fwait
inc
iret
fcom
mov
sbb
shl
push
jbe
add
leave
and
or
adc
push
out
int3
cld
out
jmp
jo
sahf
stc
push
test
xchg
nop
arpl
fistpl
lock
inc
imul
xor
mov
mov
jg
addb
pop
sarb
sarl
cmpl
push
cmp
sbb
or
lods
and
movsb
and
xchg
adc
cli
or
gs
mov
test
arpl
push
cmpsb
xor
mov
mov
fwait
mov
fs
vmovntps
pop
adc
push
jle
or
loopne
cmpsl
add
popa
in
sbb
pop
xchg
decl
lret
or
sahf
nop
push
xor
loopne
xchg
aad
pop
mov
push
jno
ficomps
jmp
inc
test
push
sub
mov
push
in
and
xor
scas
ret
push
cmp
imul
insb
jbe
lret
test
cmp
sbb
jmp
adc
data16
in
and
or
std
pop
cmp
jae
insb
ds
cltd
fdivrl
adc
lahf
jle
jmp
jbe
gs
fwait
ret
das
dec
or
lcall
in
andl
cmp
hlt
mov
jne
pop
jp
or
pop
andb
aas
push
in
leave
adc
sarb
inc
xchg
test
or
pop
push
scas
ds
sub
adc
push
xchg
cmpsl
gs
push
or
mov
fbstp
xchg
dec
add
dec
shl
xchg
sbb
push
iret
es
mov
adcl
cmp
outsb
pushf
jecxz
xchg
xor
inc
mov
bound
mov
push
push
jmp
mov
push
sub
outsl
cltd
sbb
stos
fldenv
mov
shl
dec
pop
in
or
jp
dec
aas
outsl
or
jo
adc
fildl
shlb
lret
cmp
xor
pop
sbb
jg
push
mov
popf
in
jge
repnz
jecxz
outsl
pusha
das
mov
mov
enter
fwait
sub
xchg
push
pushf
dec
push
or
xchg
add
xchg
mov
xor
shll
jns
cmp
lods
pop
test
dec
popf
add
mov
xchg
loopne
loop
and
fstps
int3
xchg
push
xor
mov
push
test
fwait
loopne
imul
inc
pop
add
loope
mov
in
fidivs
fwait
ret
ss
cmp
fsub
inc
cmp
mov
mov
stos
sbbl
stos
lods
sbb
rorl
xor
push
jp
lret
pop
sub
pushf
inc
insb
out
adc
xchg
xlat
push
push
mov
mov
int3
loopne
cmc
jle
add
mov
pop
mov
clc
clc
sub
push
adc
push
adc
mov
xchg
mov
jecxz
sahf
sbb
lcall
jg
push
pop
mov
mov
xchg
or
mov
mov
jmp
xchg
push
insb
dec
mov
jle
lcall
lods
repnz
rolb
fcompl
repz
push
test
call
cltd
sahf
popf
enter
clc
test
mov
add
mov
sub
xorl
jge
xor
jl
jne
xor
mov
ljmp
ret
mull
mov
out
pop
mov
js
xchg
in
addb
sub
push
mov
repz
mov
or
in
push
jne
ljmp
adc
into
or
sub
sbb
insb
ss
addr16
stc
and
add
push
sbb
fbstp
fcompl
mov
and
ret
popf
sbb
pop
cmp
stos
lahf
arpl
cmp
stos
xchg
jp
inc
xor
jno
push
mov
jge
mov
xchg
mov
orb
andb
push
jno
enter
lods
inc
pop
fxam
popf
cltd
cmp
xor
enter
sbb
arpl
mov
mov
jl
xlat
sub
or
lods
ja
mov
test
jns
or
xor
lcall
push
jbe
data16
xor
test
adc
ret
add
orl
xchg
incl
or
jle
sub
sbb
sbb
mov
mov
jl
xor
adc
sahf
aaa
adc
mov
sbb
sub
sub
and
lret
inc
fsubrl
enter
mov
and
lret
ds
out
dec
inc
sub
popf
fs
mov
stc
fsub
mov
pop
xor
cmp
dec
lds
add
cltd
or
jmp
aas
fnsave
sub
cltd
mov
pop
shlb
call
adc
adc
sub
push
or
leave
mov
movl
aam
xor
ja
or
fstps
cmp
insl
test
push
mov
cmpl
add
les
push
sahf
ds
mov
push
sbb
xor
iret
mov
push
sbb
sbb
jns
mov
xor
xor
insl
and
cwtl
jmp
dec
dec
dec
mov
imul
and
fwait
cltd
fisubs
vmread
pop
pop
dec
jle
jle
call
jp
fsubs
cmpb
jg
jge
arpl
rolb
aam
cltd
cmp
sub
loope
pushf
rcll
dec
div
xor
cmp
adc
mov
pop
test
cmp
fisttps
or
add
je
cmp
xchg
adc
inc
arpl
lahf
jbe
cs
nop
push
add
ret
in
mov
sbb
cmp
inc
fmulp
sbb
pop
pop
pop
mov
nop
cwtl
repz
icebp
mov
xor
imul
add
xor
mov
mov
lods
das
add
and
mov
push
int
push
xchg
cmc
mov
insb
testb
mov
inc
xor
cli
mov
and
or
jl
idivl
ret
sbb
jbe
sbbl
in
pop
lods
ficoms
aas
mov
push
ja
rolb
push
mov
cmp
out
push
retw
addb
adc
test
mov
push
pop
insb
rorb
xchg
push
inc
sub
dec
js
mov
push
imul
pop
mov
cltd
xchg
gs
jae
pop
adc
jle
negl
pop
mov
xor
and
push
ffree
inc
gs
fsubrp
std
dec
inc
leave
subl
enter
cmp
mov
subb
sub
pop
loope
sub
lcall
and
pop
sub
mov
adc
push
fiadds
xchg
or
push
xor
push
fsubrp
jp
or
mov
les
fsubs
jns
mov
insl
pop
adc
push
sub
jb
outsb
pop
cmpsl
xlat
pop
movsl
dec
out
jl
test
pop
shlb
mov
xor
jp
pop
mov
mov
sbb
dec
cmc
xchg
push
or
mov
rolb
mov
lea
ss
lahf
sub
mov
xor
sahf
mov
fildll
add
mov
pusha
fistpl
cmp
mov
cld
dec
pusha
stos
dec
sbb
mov
imul
or
sbb
and
sbb
std
out
cld
xchg
adc
pop
clc
adc
test
sbb
mov
or
pop
mov
sahf
mov
daa
icebp
cmpb
lods
pop
jge
jecxz
sub
movsl
mov
rclb
hlt
sub
enter
or
fstps
pop
sbb
rol
daa
xchg
mov
fidivrs
or
ret
mov
sub
push
test
outsl
mov
mov
clc
sub
in
addl
xchg
cmp
les
xor
pop
test
sub
icebp
clc
push
mov
jg
inc
jg
rolb
mov
sbb
pop
jnp
or
into
sbb
ljmp
stos
enter
test
xchg
hlt
xchg
xor
xor
and
cs
adc
mov
lcall
stos
imul
insb
pop
xchg
inc
xor
add
stos
lock
pop
lea
lds
ret
mov
mov
or
inc
cwtl
lock
xchg
sub
sbb
jne
cmp
cmp
lods
loope
icebp
enter
aas
data16
jmp
xchg
or
add
mov
cwtl
jg
mov
icebp
jle
sbb
dec
jnp
lea
xor
sahf
rcrl
pop
pop
fwait
xchg
adc
add
jne
jbe
sbb
lea
jecxz
js
sub
push
roll
xor
and
popa
negl
push
and
cmp
insb
test
pop
mov
mov
clc
sahf
stos
sub
mov
dec
loope
addb
jb
fidivrl
mov
jmp
mov
psraw
daa
adc
push
adc
push
inc
dec
add
mov
mov
push
movsl
cwtl
aas
sbb
pop
out
jl
fidivl
cli
in
decl
cmp
jne
dec
dec
jnp
cwtl
adc
push
bound
in
jmp
push
sbb
sub
mov
add
outsl
jae
clc
lea
pop
jge
mov
cmc
fwait
inc
add
mull
pcmpgtw
push
sbb
pop
lods
cmp
outsb
lock
mov
cwtl
sahf
add
push
and
sub
inc
inc
adc
pop
insb
leave
jg
inc
fcmovnu
mov
addr16
data16
daa
mov
loop
lcall
fistps
decl
mov
mov
xchg
dec
mov
int
adcl
xchg
sub
sahf
add
xor
imul
xor
push
neg
aas
rcl
fiaddl
fwait
lcall
cmc
mov
cmp
shlb
lock
jp
push
xchg
aam
xlat
divl
ss
jae
ret
dec
das
and
les
dec
fnsave
jb
mov
dec
adc
pop
cld
cli
idiv
enter
in
notb
pop
inc
loop
or
outsl
aad
xchg
push
pop
xchg
push
enter
mov
mov
dec
sbb
inc
rolb
ret
icebp
cwtl
fildll
push
cmp
inc
aas
push
or
insb
jp
cmpsl
sub
roll
inc
sub
fdivrp
cmpb
iret
adc
lret
sub
stc
mov
jo
xchg
inc
mov
test
cmp
dec
sahf
mov
mov
iret
pop
cmc
jg
or
inc
ja
popl
mov
inc
data16
cmc
mov
stos
push
add
mov
fwait
or
jle
aaa
mov
flds
pop
fwait
mov
adc
call
xchg
pop
adc
jae
xor
enter
lahf
lret
push
xchg
mov
mov
jg
sub
inc
in
xchg
mov
repnz
movsb
gs
push
dec
mov
loop
mov
xor
jns
orl
dec
mov
push
pop
pop
stos
mov
movsl
sbb
mov
jae
jp
jge
testl
inc
inc
fldl
mov
mov
mov
scas
push
mov
lret
arpl
jge
je
xchg
push
cli
popf
inc
outsb
mov
nop
add
dec
xor
lea
popa
pop
cmc
xor
mov
xchg
sub
jns
add
sub
idivl
out
out
jo
popf
fistps
loope
movsb
xor
pop
cld
mov
test
les
lret
dec
sbb
nop
xor
sbb
sub
lcall
lret
out
xchg
ja
stos
arpl
ds
int
mov
das
cmpsl
lcall
add
pop
xchg
outsl
pop
push
stc
xchg
pusha
out
xchg
testl
push
xor
mov
pop
fidivl
xchg
out
cmp
push
pushf
inc
movsl
cmp
rorb
jmp
sahf
stos
sti
lds
xchg
outsb
daa
mov
popa
cli
and
out
jnp
xor
xor
dec
pop
std
adc
repnz
inc
sti
shrb
push
sbb
in
cmp
lock
adc
das
pop
cltd
insb
daa
ljmp
xlat
push
push
sti
pop
push
add
addr16
mov
push
les
clc
cmp
mov
push
cmp
mov
mov
mov
or
rorl
jp
mov
mull
xchg
popa
xorb
pusha
sbb
sbb
add
xchg
pop
xor
dec
push
fsts
lret
imul
daa
stos
in
jecxz
ret
push
mov
addr16
dec
outsl
imul
in
sar
stos
in
mov
push
repnz
int
inc
jle
test
push
pop
cld
mov
test
sbb
iret
jmp
mov
pop
pop
clc
push
push
mov
pop
leave
in
push
sub
shll
outsb
pop
mov
mov
cmpsb
and
xchg
push
jns
dec
inc
stos
decl
mov
dec
repnz
adc
mov
mov
aaa
clc
lock
cli
lcall
push
inc
cmc
mov
loopne
and
and
sbb
cmc
pusha
cmpl
dec
fsubrs
xor
mov
movsb
aas
pop
push
mov
std
sbb
inc
dec
cmc
mov
xchg
lock
mov
adc
jmp
addr16
popl
jb
lahf
pop
and
sub
inc
dec
sub
pusha
dec
jb
not
and
jae
insb
or
push
leave
mov
mov
popf
ljmp
scas
imul
sub
shll
add
cmp
int
enter
dec
in
or
adc
dec
sti
mov
out
dec
lock
mov
xor
adc
lahf
mov
jo
in
lods
lahf
lods
out
mov
jb
arpl
out
add
push
add
mov
mov
pop
or
jmp
lods
mov
lock
lret
jmp
int
aaa
roll
ret
push
jne
xchg
sbb
repz
fidivrl
out
lock
xchg
push
adc
sbb
inc
or
sarb
js
cmp
js
ror
jge
mov
or
mov
push
cwtl
push
mov
das
ds
xchg
pop
lds
inc
xchg
aam
and
mov
pop
dec
adc
sar
jmp
dec
push
dec
orl
xchg
pop
xchg
insl
or
hlt
mov
push
pop
xchg
idivb
fmulp
idiv
inc
cld
mov
adc
push
test
clc
inc
sbb
pop
fisubrl
cltd
insl
lock
push
into
and
sub
jae
lcall
lds
rolb
pop
orl
hlt
rolb
jmp
aad
inc
loopne
fsubs
cmpsl
jo
fldenv
push
push
repz
or
mov
add
mov
lret
fsubrs
roll
and
dec
mov
cmp
loop
jae
js
ret
insl
sbb
lret
sub
hlt
call
movsb
inc
mov
js
jmp
mov
mov
jae
mov
cmc
adc
cmp
stos
cmpsb
jo
cwtl
cmp
inc
in
mov
pop
and
xor
fldt
or
jmp
in
lods
ret
jb
pop
rcrl
or
stos
fmul
icebp
bound
cmp
dec
cltd
shrl
add
aam
aas
mov
ret
rcll
ja
shrl
sbb
sub
dec
lds
leave
aas
fdivrs
stc
mov
popa
cmc
lods
mov
outsl
cmpsb
divb
stc
push
jmp
repnz
adc
adc
mov
js
jge
pop
dec
mov
into
clc
loop
mov
cmp
xor
hlt
aad
mov
jmp
lods
or
out
cmpsl
pop
int
hlt
jl
cmp
aaa
notl
mov
push
add
outsb
loope
fldenv
cmp
jg
rcll
iret
or
xor
or
adc
aad
cmp
xchg
and
pop
inc
aam
cmp
and
fs
jmp
pushf
loopne
xor
cmp
inc
loop
mov
in
adc
xor
push
mov
scas
std
icebp
pop
add
pop
xor
je
sub
and
hlt
xchg
imull
mov
pusha
xlat
mov
mov
or
mov
add
mov
in
add
xchg
sbb
add
pop
adc
pop
mov
cmp
pop
fdiv
es
ss
pop
mov
dec
adc
sbb
out
movsl
out
dec
add
aad
dec
pop
jle
scas
sti
scas
es
push
push
out
xchg
and
adc
movsl
outsl
je
out
in
rcrl
ror
add
jecxz
mov
xlat
mov
std
adc
mov
sub
lock
jecxz
pusha
and
lret
mov
jns
xchg
mov
mov
cmpl
mov
mov
push
fcom
out
sbb
dec
test
je
adc
add
sbb
push
cltd
ficomps
dec
fildll
mov
and
dec
test
inc
movsl
and
imul
add
imul
call
jo
cmp
scas
int3
jl
xor
xor
jge
cld
mov
mov
pusha
bound
inc
cli
and
mov
pop
repz
repnz
adc
and
shlb
aaa
mov
iret
int
mov
push
xchg
mov
int
repz
cmpsb
jae
inc
xchg
call
cmp
out
addl
movsl
xor
loopne
and
js
mov
test
cmc
mov
lds
mov
and
sarb
mov
shrb
into
mov
test
cld
in
lcall
andl
das
xchg
and
cld
test
lea
mov
out
sub
es
pop
push
xchg
push
jns,pn
mov
outsl
test
imul
ds
push
cmpsl
add
rclb
push
cmp
in
movsb
xchg
add
in
and
lret
xchg
dec
mov
nop
sbb
sub
dec
scas
or
stos
hlt
cmp
aaa
sub
xchg
out
aam
movsb
aaa
aaa
fs
in
fists
push
add
adc
cmp
mov
fldcw
ss
xchg
mov
cmpb
jge
mov
mov
lsl
scas
setns
inc
jne
outsl
hlt
dec
push
xorl
push
jle
adc
and
xorl
mov
xchg
loop
cmpsb
jae
jge
xor
adc
inc
sbb
pop
repz
nop
aas
mov
je
inc
fsubrp
aas
outsl
call
lret
enter
nop
pop
dec
push
sub
enter
inc
cmp
call
jns
inc
adc
mov
stos
or
add
mov
inc
pop
fmull
dec
cmp
push
add
or
scas
add
aad
jp
lock
aaa
cld
lea
hlt
cmp
jbe
cmp
jg
sub
inc
js
adcb
dec
pop
in
dec
dec
je
mov
push
mov
mov
jmp
stos
xor
mov
scas
les
pop
fs
xchg
xor
stos
lret
mov
xchg
mov
cmpsb
out
fs
mov
push
cmp
es
push
sub
xor
xor
lock
mov
jge
inc
insl
dec
jne
pop
into
jmp
pop
fs
sbb
inc
sbb
jle
xor
mov
dec
mov
ja
jle
sti
ljmp
xor
dec
and
push
jne
push
ret
ror
into
sub
pop
fadds
dec
mov
add
xchg
loopne
lods
popa
scas
mov
xchg
inc
mov
xchg
xor
sub
push
loope
pop
fldt
test
lret
cltd
add
dec
test
aas
bound
enter
or
int
arpl
lahf
cltd
mov
in
and
pusha
add
out
lock
stc
pop
mov
bound
iret
push
shl
jecxz
push
pushl
cmp
je
jmp
jmp
pop
jle
sub
call
adc
lock
cmp
ss
stos
jo
sub
xor
mov
cli
mov
stos
mov
adc
push
add
mov
cmc
in
or
or
cmp
aam
shrl
sbb
in
mov
cmpsb
repz
inc
sbb
xchg
sub
jmp
sub
pop
ror
dec
loopne
ja
aam
repz
push
mov
sub
jmp
mov
dec
push
outsb
xchg
sbb
push
lret
pushf
push
mov
data16
clc
xchg
inc
shll
jns
dec
pop
mov
mov
fidivs
jbe
jmp
jl
ret
lods
dec
mov
orb
roll
xor
sbb
jne
and
fnstcw
test
mov
vmovss
adc
dec
xor
and
and
cmc
jnp
cltd
test
adc
mov
sahf
lahf
cltd
push
les
rcl
outsl
add
cwtl
sbb
lea
out
sbb
ja
jne
mov
leave
sbb
rcrb
imul
sbb
lahf
scas
cmc
adc
das
pop
mov
fcoms
xor
fwait
sbb
sub
repnz
xor
cmp
movsb
and
pop
lods
sbb
pop
fisubs
roll
jg
inc
test
mov
mov
jecxz
sub
mov
push
cmpsl
aad
aam
mov
fldt
mov
test
out
jae
pop
xor
clc
loopne
enter
mov
xchg
mov
imul
adc
ljmp
pop
movsl
or
sbb
lea
sbb
out
bound
lea
sbb
pop
iret
and
push
jmp
pop
leave
out
sbb
pushf
mov
push
ror
aaa
into
fidivl
lock
test
int3
in
mov
xchg
xlat
sbb
cmpsb
in
mov
in
scas
mov
cmp
dec
sarb
lret
lcall
xchg
adc
js
or
sbb
lds
repz
paddw
and
lock
xchg
out
sub
fistpl
jle
jg
aad
int
rcrl
sbb
and
mov
outsl
pop
cld
out
xor
mov
add
jno
dec
or
data16
pop
jb
cld
push
in
add
lcall
xor
inc
inc
xor
out
mov
ja
adc
in
xor
pop
jnp
out
insl
sbb
xchg
lds
push
test
pop
lds
iret
out
jno
pop
jg
out
sbb
pusha
push
pop
rolb
jle
loop
cmpsb
ljmp
xor
daa
stos
pop
xchg
loopne
nop
inc
and
call
push
mov
in
push
mov
pop
rdpmc
fwait
sub
in
test
inc
rorl
xchg
xor
lock
bound
mov
dec
adc
jns
jl
xor
aad
cmp
cmp
mov
inc
bound
pop
je
mov
jp
push
inc
arpl
push
push
cltd
jl
pop
jnp
xchg
push
or
xlat
sub
cmp
jns
sti
sub
xlat
push
sub
mov
xchg
mov
fldenv
mov
in
jge
pop
jbe
in
mov
orb
sahf
fstpl
pop
xchg
sub
sub
add
sub
inc
and
adc
mov
xlat
mov
or
lcall
cmp
pop
pop
jl
lcall
sub
adc
fsubr
nop
sbb
lock
xchg
pop
lcall
fs
sub
dec
xchg
sbb
xchg
stc
push
mov
les
shrl
rcr
jge
inc
lahf
xchg
fstpl
fwait
push
jl,pn
fldenv
sbb
and
negl
fsts
xchg
addr16
js
stos
movsb
fnstcw
movsb
jmp
in
bound
push
sbb
jle
roll
pop
movsb
xchg
daa
fsubrl
push
and
xchg
sbb
dec
aad
ljmp
ljmp
adc
fstl
cmp
mov
mov
pop
es
test
mov
mov
fcmovnu
push
adc
aaa
es
jnp
in
out
push
mov
jge
loopne
out
dec
and
push
mov
and
xor
into
xchg
les
xchg
cltd
xchg
mov
push
mov
dec
icebp
aas
test
or
sbb
lods
xchg
clc
pop
jne
mov
sbb
repz
movsl
scas
mov
cmp
inc
es
pop
sbb
fstpt
in
mov
xchg
repz
ss
adc
cmp
mov
mov
movsb
lods
add
movsl
sub
push
scas
adc
stc
jnp
push
scas
dec
push
loope
ret
mov
ret
bound
sub
mov
cmp
stc
xchg
outsl
push
add
orb
mov
or
push
ss
dec
xlat
scas
leave
lods
adc
mov
cmp
pop
ljmp
cmc
dec
pop
lock
fmulp
mov
xchg
and
and
int3
pusha
pop
shlb
lock
pop
sti
fldl2t
lods
cmpsb
cmp
pop
cltd
aaa
out
insl
in
les
shll
jmp
imul
xchg
stos
mov
cwtl
jbe
inc
and
sbb
or
enter
adcb
xchg
addr16
inc
add
fisubrl
gs
xlat
lea
cmp
andb
aaa
imul
or
inc
sub
movsb
inc
jle
imul
fnstcw
mov
lahf
aam
test
xlat
mov
sub
adc
je
cmp
aam
test
add
ficoml
mov
pop
mov
mov
aaa
popa
xor
sub
mov
inc
icebp
push
sub
add
push
add
leave
xchg
stos
push
pop
or
sub
and
fisubrs
cld
test
sti
rolb
shlb
fsubrp
lahf
pop
and
into
or
jbe
xchg
dec
mov
aas
js
push
sub
adc
test
inc
mov
addb
pop
imul
gs
adc
xchg
iret
xor
jmp
cs
rolb
mov
popa
push
or
adc
pop
pop
sbb
jnp
daa
sub
cwtl
lods
add
sub
sub
mov
push
fdivs
pushf
cmpsb
jns
lret
pusha
insb
lcall
adc
dec
mov
fs
test
or
inc
mov
mov
xor
jle
jb
arpl
inc
out
test
scas
call
dec
and
mov
cltd
xor
sub
jg
pop
inc
or
xlat
loopne
loopne
add
jns
imul
mov
dec
jno
pop
loop
test
and
sub
clc
ja
lea
fisubl
push
push
subb
jne
mov
jle
scas
dec
sti
movsb
out
jnp
push
mov
pop
push
test
jo
fstl
fs
imul
cs
sub
push
pop
fnstcw
mov
xchg
push
aaa
xorb
push
push
lds
and
loopw
dec
pop
and
scas
out
sub
cli
icebp
mov
mov
mov
mov
mov
and
pop
fmuls
in
sarl
fs
and
push
iret
addr16
ds
arpl
clc
mov
jl
hlt
sbb
insl
test
sbb
dec
shr
jmp
fisubrs
ja
sub
push
pop
pop
pop
stos
cmpsl
xchg
rcrb
push
adc
mov
mov
cmp
mov
add
mov
repnz
xor
incb
cmpsb
pop
lcall
leave
in
push
mov
comiss
incl
mov
and
clc
int
gs
push
sub
scas
pop
test
nop
jl
enter
adc
fmuls
loopne
aaa
xor
pop
std
xor
adc
add
jb
rcrl
popf
adc
cmpsl
push
fidivl
nop
cmp
imul
add
sar
pushf
std
insl
pop
test
push
xor
ret
ja
pusha
es
push
adc
std
jo
mov
sub
xchg
test
mov
xchg
and
xor
cld
in
scas
repnz
faddl
sub
cli
lods
push
inc
sbb
or
sbb
shrl
push
fimuls
pop
cltd
fcmovnu
out
outsb
dec
inc
imulb
jecxz
stc
dec
mov
and
or
mov
or
push
jmp
mov
inc
scas
add
test
sub
aaa
iret
cmp
hlt
out
addb
or
fdivrs
xchg
pop
and
jns
orb
add
xor
lcall
fldl
jge
push
add
and
mov
mov
cwtl
add
insb
sbb
mov
jg
xchg
jae
div
mov
mov
mov
loopne
movl
test
xchg
shrl
jmp
sub
dec
dec
mov
pop
test
jg
mov
rcr
xor
jbe
inc
and
lock
xlat
aad
ljmp
fistps
sbb
bound
cmpsl
repz
sub
repnz
test
mov
cmpsb
dec
mov
std
mov
je
sbbl
ds
push
in
aas
mov
in
lock
push
mov
dec
pusha
into
sub
rcrb
pushf
rolb
cmc
popl
les
xchg
jnp
movsl
mov
jmp
inc
xchg
sub
xchg
or
rorb
les
xor
push
xchg
inc
cli
cltd
adc
sub
fldl
dec
loop
insl
sti
scas
jns
push
subl
add
rol
xchg
add
inc
adc
insb
jno
orl
sarb
pop
dec
sahf
adc
ja
cmp
notl
mov
in
daa
jae
adc
push
push
cmpsb
or
ret
xchg
pop
pop
jns
sbb
rcll
loope
repz
pushf
xchg
and
pop
mov
push
cs
and
psubb
hlt
xor
fstps
push
adc
and
xlat
loope
movsb
stc
std
jecxz
mov
cmp
div
js
sbbb
icebp
popa
mov
xor
jb
jae
jp
fsubl
and
iret
ror
xor
dec
sbb
leave
sti
sub
lcall
lds
scas
sub
or
imul
mov
push
in
mov
cmp
popl
cmpsl
xchg
add
or
in
les
addr16
icebp
in
pop
fwait
insl
ret
test
aam
sub
arpl
push
cmp
fcmovnbe
fadds
flds
sarb
in
in
pop
xor
sbb
push
bnd
inc
mov
pop
mov
pushf
loope
les
divl
inc
fcompl
fldt
sti
movsb
mov
andb
xchg
movsb
jle
xchg
jae
or
adc
ret
ljmp
sahf
scas
pop
adc
pop
pop
xchg
rcrb
add
jl
dec
xlat
gs
inc
or
dec
push
lahf
fmull
lret
sarb
xchg
shlb
test
inc
jnp
dec
cltd
in
js
imul
mov
mov
in
outsl
in
les
mov
js
imul
scas
push
and
aas
dec
sub
sti
mov
outsb
andb
fisttpl
xor
mov
adc
cmp
gs
inc
jne
xchg
repz
cmc
ljmp
fmull
into
push
pop
xchg
jp
or
sbb
cmp
mov
std
dec
out
or
jg
cmp
inc
pop
int3
sbb
sub
repz
outsb
dec
cwtl
out
out
sub
jl
xchg
pop
adc
xchg
cmp
inc
fstps
shll
or
test
cmp
loopne
aad
ljmp
aad
fdivrs
sbb
fstp
mov
sbb
adc
jmp
aad
mov
sub
in
add
inc
xchg
icebp
push
mov
mov
hlt
xchg
mov
push
mov
test
inc
gs
lods
sbb
inc
dec
or
les
push
lds
mov
icebp
in
add
lock
add
out
enter
lcall
ja
push
or
xchg
pop
push
repnz
fadds
ds
test
outsl
into
push
mov
push
in
ljmp
inc
lods
push
fwait
std
jno
jle
loope
cmc
mov
movsb
fcomp
iret
lahf
das
mov
out
iret
imul
hlt
mov
xchg
dec
stc
lds
enter
jnp
sub
aas
push
ficoms
mov
lret
xchg
aad
mov
push
add
inc
xor
xor
repz
mov
fcompl
sub
or
pop
sbb
int3
out
xor
push
test
mov
or
lods
in
adc
dec
mov
mov
xchg
das
cs
out
mov
jo
push
movsb
adc
sbb
aas
xchg
test
out
stos
outsb
inc
pop
imul
push
or
shll
jecxz
cmpsl
stc
lcall
push
in
fsubrp
push
mov
fs
and
and
pop
push
enter
test
dec
es
mov
push
or
sti
dec
push
xchg
mov
stc
mov
sub
cmc
ficompl
test
xchg
and
mov
inc
sbb
clc
push
ret
out
out
out
enter
inc
loope
icebp
cmc
push
test
stc
shrl
das
jp
stos
dec
inc
inc
adc
add
lahf
xchg
shll
sub
arpl
add
push
mov
and
into
mov
xlat
jns
pop
mov
add
into
les
xchg
mov
push
sub
or
and
and
in
int3
das
cmovns
js
andb
xchg
or
xor
jno
and
dec
lret
mov
jg
stos
sbbl
jmp
sbb
cmp
fildl
es
pop
fwait
xchg
jne
inc
pusha
dec
lods
xor
mov
repz
sub
inc
leave
aam
pop
push
ss
lret
sbb
pop
lret
aaa
scas
push
push
inc
add
jp
xchg
mov
xchg
das
inc
into
inc
enter
dec
repnz
mov
xchg
sub
mov
lock
test
sbb
mov
insl
pop
lcall
dec
add
rcll
int3
out
cmpsl
dec
aaa
mov
into
mov
in
mov
lret
pop
push
out
lret
dec
jge
movsb
outsb
mov
aas
testl
mov
xchg
mov
sub
pop
push
iret
outsb
movsb
and
mov
shrb
iret
cmp
mov
sti
sub
pop
fwait
xchg
and
and
ret
push
cmp
sub
cli
fildll
mov
aas
mov
mov
loop
sbbl
in
pushf
cmp
test
inc
or
pop
xorl
sub
jl
outsb
lods
mov
or
jo
enter
push
inc
dec
push
cmc
pop
stc
cmp
loop
cmp
mov
push
inc
daa
sbb
aam
push
movsb
das
sbb
lea
pushf
lea
mov
push
sbb
xchg
cmp
jp
test
lods
sub
outsb
test
in
out
int3
insb
or
push
pop
jle
scas
jns
mov
in
repz
jne
shll
or
idivb
inc
mov
sbb
adc
cld
popf
sbb
lret
add
sbb
push
push
sub
iret
rorb
cmp
dec
loopne
sbb
shlb
add
mov
loop
jns
sub
and
cmp
movsl
xor
mov
sbbl
outsb
cmp
add
inc
repnz
jb
ss
dec
pushf
ljmp
andb
cmp
xlat
scas
mov
dec
das
and
cmc
xchg
shrl
jmp
ljmp
add
cld
jb
lods
xchg
cmc
jns
and
jne
pop
insb
and
mov
loop
inc
popa
adc
mov
inc
mov
sbb
ds
jo
ffree
lcall
out
or
jno
mov
sbb
into
iret
aad
jne
rcrb
rcll
pop
movsl
ljmp
pop
repnz
int
outsb
rolb
mov
dec
dec
out
fstpl
leave
cmc
es
mov
mov
sbb
imul
sub
pcmpeqw
jns
lods
push
ljmp
jo
jnp
mov
imul
cmp
and
outsl
mov
int
jno
ja
add
cs
pop
jmp
and
lods
xlat
or
cwtl
cwtl
add
sbb
lock
fprem
dec
and
pop
cmp
imul
xor
pop
cmpsb
testb
add
aas
pop
mov
inc
push
mov
movsb
into
fdivr
cmp
inc
cwtl
inc
or
aam
mov
push
or
sbb
jge
adc
outsb
aad
cs
flds
push
into
outsl
fwait
adc
sbb
sub
mov
pop
add
iret
movb
fstps
or
or
insb
mov
dec
orl
in
xor
lret
loop
insb
dec
pop
je
pushf
ret
xlat
xchg
loopne
in
jp
push
push
jecxz
bswap
test
aad
push
es
mov
adc
inc
push
mov
std
rclb
jbe
call
pop
loop
and
sbb
cmp
cmp
push
xor
lret
test
inc
scas
adc
enter
jbe
dec
xor
adc
sub
dec
divb
push
cmp
lock
inc
lock
shlb
mov
clc
sub
rcrl
push
popf
stos
movsb
icebp
out
hlt
mov
ljmp
push
xchg
stos
testl
jne
mov
stos
pop
in
sub
fmul
mov
push
popf
shll
push
mov
mov
repnz
jl
xchg
pop
mov
pop
xchg
jo
loope
sbb
out
addr16
shrl
mov
xor
ja
cmc
addr16
scas
mov
gs
and
and
repz
aam
cmp
es
cmp
push
pop
orb
xchg
in
lods
pop
ret
aad
jns
xlat
mov
lahf
xlat
mov
adc
or
pusha
daa
or
incb
or
push
inc
test
in
enter
lret
aam
dec
and
dec
jo
cmp
arpl
fsubrs
pushf
test
and
jecxz
xchg
inc
ror
push
lret
jl
xchg
jno
push
push
jg
push
cli
mov
pusha
nop
punpckhwd
cs
iret
sub
mov
je
inc
sbb
mov
insl
push
mov
jg
rorb
aaa
xor
fwait
aad
test
lock
fcomp
xor
sub
lock
xchg
add
lahf
sub
mov
call
jecxz
mov
mov
ficompl
xor
int
dec
rcrb
cmc
inc
pop
push
lds
mov
sub
ficoml
sbb
inc
cwtl
outsl
sbb
jo
push
ja
ret
mov
fistpl
fidivs
fidivl
mov
fs
jecxz
lock
sbb
jbe
add
ret
add
pop
add
mov
mov
mov
ljmp
imul
filds
push
sub
adc
aas
insb
add
cmp
andb
jnp
adc
pop
mov
cmpsb
mov
jmp
aad
jecxz
pop
loopne
jl
les
jo
lods
mov
xor
fadd
inc
test
mov
data16
mov
daa
sbb
jo
repz
pop
push
xor
jmp
rcrb
fcoml
mov
add
adc
pop
xor
jl
jge
lea
mov
aam
das
add
mov
and
cmp
cmpl
popw
loop
push
add
jno
mov
cmc
push
sbb
dec
out
fsts
dec
adc
shrd
inc
and
xchg
push
push
add
pop
sub
pop
lret
pop
pop
add
shlb
pop
xchg
inc
sub
jno
loope
scas
adc
scas
fs
or
scas
xor
push
adc
in
cmp
jmp
sub
push
mov
or
xchg
stos
xchg
jno
cmp
pop
imul
jl
lret
insl
cmpl
ret
cli
xchg
rorl
pop
cwtl
adc
sti
lret
in
mov
push
fcomi
rcll
inc
adc
xor
sbb
loop
test
popa
sbb
mov
cmp
dec
push
cmp
imul
mov
push
pop
lret
cmp
cmc
mov
xor
into
into
push
sbb
call
insl
xor
arpl
test
rolb
ret
faddl
fdivrp
sub
lcall
mov
pop
inc
pusha
cmp
lea
xchg
or
adc
iret
sarl
mov
pop
push
mov
dec
dec
jp
sarl
outsb
dec
js
xchg
hlt
mov
outsl
add
movl
call
sahf
jmp
mov
lcall
dec
mov
or
or
xor
rcrl
pop
mov
mov
pop
divl
clc
mov
xchg
sbb
add
fwait
dec
or
clc
mov
push
cs
in
cmpsl
dec
push
xchg
sub
dec
outsb
sub
mov
cli
loop
repnz
and
jbe
sbb
les
aas
iret
inc
xchg
sub
int3
rol
add
inc
jp
pop
push
bound
pop
mov
jmp
les
jle,pt
in
andl
pop
insb
jmp
mov
popa
cs
fimuls
sahf
cld
nop
dec
fbld
dec
shl
out
mov
out
dec
xor
rcll
rorl
lcall
imul
cwtl
divb
add
adc
push
out
std
jmp
cs
xor
je
pop
cmp
xchg
xor
test
gs
js
mov
loope
dec
cmpsl
fisubrs
jbe
ror
inc
adc
mov
daa
shlb
sub
mov
add
arpl
cmpsl
or
mov
test
int
ja
jle
ja
inc
rep
repnz
daa
inc
mov
xor
xchg
or
jmp
push
push
cmp
add
cli
fwait
jb
sbb
add
inc
or
call
sbb
cmp
xchg
ss
cmc
mov
add
cmp
stos
add
mov
fcompl
add
popa
xchg
dec
jg
dec
sub
neg
loope
adc
clc
jnp
xchg
xchg
pop
mov
into
push
in
loopne
mov
jg
shll
dec
push
push
cli
stc
add
in
shl
cmp
or
out
orl
nop
jle
test
sub
sbb
movsl
inc
ljmp
jmp
mov
cmp
repnz
cli
adc
add
mov
call
aad
mulb
movsl
xor
mov
add
lcall
jo
xchg
mov
push
ja
movsb
push
test
adc
and
lods
fisubl
push
mov
imul
stos
pop
inc
mov
into
or
xchg
push
mov
xchg
fistl
mov
addr16
mov
gs
cli
adcb
arpl
jne
in
gs
xor
jno
sub
orb
push
lea
imul
fisubs
push
cmp
addl
jl
xor
shll
add
imul
pushf
push
mov
push
and
or
cmp
sti
stc
sub
inc
hlt
lds
std
loop
adc
cmp
sub
jge
add
mov
push
sahf
aad
js
sahf
rcr
jp
cmp
fs
or
dec
sbb
add
sub
inc
jmp
les
xor
cltd
dec
jbe
and
inc
les
push
mov
cs
lods
inc
adc
adc
dec
add
sbb
pop
and
jns
sub
repz
pop
ss
push
sbb
dec
cmp
pop
pop
mov
shrb
jp
push
in
xchg
push
cmc
fs
sub
xchg
orl
leave
jle
xchg
loopne
ljmp
cmp
fdivrs
ds
pushl
std
lods
pushf
scas
loope
jl
test
pop
sub
xor
add
lret
test
dec
imul
imul
movsb
xchg
xchg
ljmp
into
test
xor
bound
mov
fwait
push
mov
notb
jno
addr16
ret
pop
ja
call
mov
popf
clc
pop
fwait
sbb
loop
rcr
mov
dec
or
notb
push
shll
mov
ss
fldl
aaa
pop
sbb
sbb
pop
imul
orl
mov
loope
adc
nop
push
outsb
mov
xchg
movsb
pop
aam
clc
shrl
or
int3
in
inc
jge
loop
scas
cld
mov
push
inc
out
imul
mov
fwait
popa
sub
out
dec
cmpsb
push
jno
xchg
mov
lods
fadds
rorb
sarl
jl
out
into
rcr
jg
cmp
mov
imul
pop
in
push
adc
adc
in
pushf
xlat
xchg
jp
or
sbb
and
mov
popa
repz
ret
decb
or
dec
gs
mov
add
and
push
ljmp
insl
push
aam
dec
xlat
sbb
or
icebp
pop
mov
cltd
pop
lods
or
pop
hlt
or
adc
inc
es
push
cmc
imul
mov
xchg
cwtl
inc
subb
pop
inc
out
mov
shrl
fstpl
xor
faddl
stos
pop
dec
sub
cld
pop
cltd
iret
mov
sbb
test
add
sti
shl
loop
adc
jmp
in
mov
repnz
jae
mov
fdivl
adc
jae
movb
lds
jle
stc
pop
pushw
sub
dec
push
scas
into
lret
das
fstps
dec
inc
push
pop
nop
icebp
cwtl
jl
push
dec
push
enter
aad
mov
fs
enter
ljmp
aad
daa
xchg
in
inc
add
gs
sbb
mov
jecxz
mov
and
imul
sbb
adc
dec
in
enter
xchg
lea
cmc
push
mov
sub
push
jne
push
fstl
ja
fists
stc
fsubs
mov
push
jno
lahf
int3
xchg
inc
or
cmp
lods
fidivrs
ljmp
call
cmp
push
mov
sbb
and
out
xor
test
in
lret
clc
add
push
adc
jae
and
mov
push
fiadds
mov
sub
inc
mov
loopne
push
pop
jmp
pushf
repnz
stc
sbb
jmp
cs
adc
jmp
adc
lea
mov
sbb
sbb
ljmp
xchg
ret
fwait
or
inc
cmp
test
jge
xor
lret
or
mov
das
push
test
into
cld
or
jg
sub
test
cmpsl
data16
jnp
dec
sub
mov
loope
mov
sub
lahf
adc
out
adc
mov
cld
mov
jp
call
fidivs
outsl
icebp
and
jmp
xchg
adc
sub
or
sub
dec
jae
popf
xor
push
inc
pop
repz
sbb
jle,pt
xlat
mov
push
mov
jecxz
sub
scas
leave
rcr
pop
shll
repz
aas
xlat
or
cmp
xchg
bound
sub
pop
and
jle
pop
aam
dec
retw
dec
scas
push
xchg
push
subl
lds
jnp
push
xor
or
xor
push
sub
cmp
sarl
ss
ds
inc
mov
insb
out
sbb
xor
mov
inc
lret
fldt
lcall
adc
pop
and
insl
push
mov
pop
ficomps
mov
inc
fbld
push
mov
scas
push
lock
pop
adc
mov
repz
movsb
ret
stos
out
mov
repz
bound
andl
lret
adc
cmpsl
sbbb
jg
cmc
cmpsl
lret
push
cmp
inc
int
pmulhuw
gs
dec
push
push
mov
js
inc
mov
mulb
xchg
out
dec
adc
push
in
gs
dec
arpl
add
nopl
leave
fcmovnb
sbb
xchg
xor
pop
or
jo
pusha
addl
stos
mov
pusha
dec
add
and
mov
push
add
xor
or
loope
add
test
movl
mov
lea
mov
stos
mov
fwait
xor
sub
icebp
fnstsw
scas
out
jmp
jno
pop
sub
jge
lock
or
pop
shrb
sbb
jb
xchg
mov
lods
mov
sub
mov
pop
ficompl
std
and
insb
pop
dec
or
out
or
adcb
xchg
incb
int3
stc
mull
ret
mov
repnz
mov
sub
jle
pop
xchg
insb
rclb
lds
lcall
cmp
imul
pop
and
mov
scas
test
sahf
enter
sub
or
lock
lcall
adc
stos
dec
and
push
andb
pop
sub
ja
pop
cmp
ss
or
test
mov
inc
mov
jnp
dec
mov
nop
std
mov
nop
call
movsl
and
rol
pop
jl
xchg
in
xor
jmp
inc
mov
test
std
mov
loopne
out
test
js
fdivl
aas
mov
inc
pop
cmp
cmp
outsb
jne
shl
addr16
xchg
fstps
sub
mov
mov
xchg
sbb
push
loopne
out
addr16
lahf
jmp
jge
pop
xchg
lods
fptan
xchg
negb
daa
ss
jno
repnz
mov
stos
mov
ficoml
hlt
int3
movsl
or
mov
xor
in
pop
jp
mov
sahf
adc
and
imul
mov
aaa
push
pop
pop
pop
into
xchg
fstpt
pop
out
and
or
mov
ds
loope
mov
or
mov
mov
lea
xor
cmpl
or
sbb
movsl
and
clc
loopne
or
movl
dec
jp
push
ret
jl
fwait
lret
xor
dec
inc
lcall
cmpsl
fdivs
add
fwait
stc
lahf
cli
ret
cmp
jmp
sbb
inc
sub
push
push
xchg
ja
int3
jge
int3
mov
xor
sti
xchg
ss
mov
andb
or
cmp
sbb
add
aaa
jb
fcmovnb
int3
sub
arpl
dec
cwtl
cwtl
mov
sbb
sbb
adc
enter
pop
add
xchg
add
mov
scas
sti
jns
add
sub
pop
or
jno
mov
push
xchg
cmpsl
jmp
push
je
dec
mov
aaa
cmp
add
int
cli
lods
mov
inc
cltd
ret
into
repnz
mov
fdiv
dec
mov
dec
adc
adcb
adc
inc
negb
loope
lret
xor
mov
push
adc
mov
fcmovnb
inc
and
ret
dec
inc
loop
push
rolb
in
and
push
cmpsb
pop
xchg
adc
fldenv
mov
add
xor
lock
mov
cld
inc
shl
mov
sub
call
add
sub
jl
push
idivl
push
scas
mov
aad
je
and
in
or
jmp
fs
xchg
movsb
fdivs
inc
cs
js
push
add
sub
inc
inc
lahf
mov
sbb
insl
cmp
sti
dec
jb
push
mov
xor
xor
sub
loopne
or
clc
sub
push
ss
adc
nop
and
or
cmp
test
adc
mov
push
push
insl
int
daa
pop
punpckhdq
das
adcb
mov
mov
dec
sahf
sti
mov
mov
dec
mov
sub
in
pop
test
or
adc
lret
jp
or
xchg
pusha
push
sbb
xor
lahf
and
adc
gs
call
sbb
cli
sbb
cmpsb
mov
sub
ja
jae
sbb
insl
rorl
dec
pop
xchg
sbb
mov
arpl
fsubl
imul
loop
dec
mov
stos
es
loope
test
mov
adc
mov
push
push
xor
adc
xor
cmp
mov
adc
inc
add
inc
cli
pop
jp
int
cwtl
push
pop
xchg
cmc
adc
orl
test
pop
cli
push
sub
mov
cltd
in
imul
movsl
pop
dec
int
cmpsb
imul
lcall
rclb
movsl
fimuls
push
outsl
fdivr
xchg
fisubs
cwtl
shrb
rol
xchg
mov
adc
sbb
add
inc
lods
pusha
rclb
into
xchg
lcall
movsb
sbb
cmp
loopne
ror
int3
or
xchg
scas
insl
mov
movb
data16
jne
cld
xchg
or
push
shll
das
jbe
cs
loope
popa
decb
push
test
loope
xchg
xchg
out
in
xchg
mov
jmp
icebp
jl
push
add
xor
pop
rolb
std
bound
jnp
insl
and
call
int
xchg
inc
ret
xor
mov
pushfw
dec
lea
aas
icebp
sub
fwait
pop
xchg
ficompl
cld
aaa
add
shll
push
push
cmp
outsl
je
mov
push
xchg
in
xchg
mov
dec
andl
sti
ljmp
jno
hlt
sub
lahf
fstl
inc
adc
std
push
in
shrb
lds
clc
inc
icebp
stc
cmpsl
jle
mov
pushw
rcll
adc
insb
and
push
clc
aas
movsl
pop
enter
and
cwtl
lcall
xchg
subb
or
xchg
cmpsl
xchg
aaa
sub
xor
push
in
cmp
pop
push
out
sub
ret
daa
mov
xor
push
push
in
mov
pop
and
rcrl
mov
cltd
pushf
pop
cmp
push
push
cmpsl
inc
push
push
loop
or
icebp
inc
add
jno
pop
cmpsb
aam
mov
pop
lret
mov
fidivl
inc
lock
repz
flds
sub
repnz
xchg
icebp
jne
inc
sbb
mov
add
dec
xchg
aas
bound
into
arpl
jno
sbb
xchg
int
cmp
cmp
inc
lds
jno
adc
fwait
mov
imul
cmp
sub
dec
pop
imul
filds
call
popa
movsb
mov
test
hlt
push
lahf
insb
xchg
dec
pop
faddp
aaa
fcmovnb
test
in
leave
and
outsb
dec
inc
inc
push
icebp
repnz
movsb
movsb
push
shl
jmp
testl
mov
xorb
test
leave
sub
rep
sbb
cltd
and
cli
add
mov
andl
je
dec
adc
jo
into
sbb
mov
pushl
scas
jb
dec
andl
and
aad
dec
imul
dec
movsb
ficoml
mov
dec
andb
xor
or
or
jns
imul
jl
popf
enter
mov
orl
repz
orb
test
xor
pop
pop
je
dec
add
jbe
rcll
dec
scas
dec
lds
and
insb
xchg
push
adc
in
pushf
test
std
or
sub
adc
adc
into
sub
ss
cmpsb
mov
push
dec
sub
push
pop
insl
push
pop
cli
in
jno
sub
lods
xor
sub
lods
push
ds
clc
pop
cmc
cmp
les
xchg
aas
xchg
loope
jo
insl
hlt
xchg
mov
loopne
and
mov
cmp
add
inc
gs
ja
lods
mov
xcrypt-cbc
cmpsl
adc
fsubl
inc
sarl
popa
std
out
test
loope
pop
lcall
push
into
iret
mov
insl
test
xor
xor
xor
imul
jae
sbb
es
mov
xor
sahf
dec
pop
inc
push
sbb
or
inc
xor
call
jbe
pop
jne
stc
push
js
push
mov
dec
mov
sub
inc
pop
rorl
fwait
out
ss
fisubrs
dec
dec
mov
and
jbe
lock
out
mov
xchg
lret
aam
jg
pop
xorl
scas
cmpsl
shrl
cmpsl
xlat
mov
orl
xor
xor
adc
mov
push
dec
rolb
jl
xlat
sbb
push
mov
shrl
push
jge
fidivrs
fiadds
fistpll
pop
in
cmp
xchg
xorl
pop
pcmpeqb
test
and
sub
jno
aas
divw
xchg
cli
xlat
jbe
ret
cmp
stos
push
jecxz
push
inc
insl
invd
lock
aam
inc
les
movsb
fsts
xchg
pop
push
adc
and
repnz
inc
mov
xchg
ss
cmp
cld
sbb
call
push
cltd
iret
bound
dec
pop
sbb
push
inc
dec
xchg
notl
cltd
add
push
xchg
and
adc
lcall
dec
outsb
movb
cmp
adc
push
or
and
ja
popf
stc
scas
pop
mov
pop
fdivrs
mov
mov
fidivl
shrl
or
pusha
dec
pop
jo
lcall
and
repnz
neg
pop
out
dec
jne
pop
aad
iret
push
inc
lret
idivb
xor
imulb
in
mov
pop
je
push
adc
loope
inc
xchg
shl
movsb
pop
arpl
xor
sarb
cwtl
fwait
stc
std
dec
outsb
push
dec
in
push
fbld
jmp
ret
mov
lods
add
je
push
bound
sub
add
inc
jns
adc
hlt
jae
hlt
imulb
ror
mov
out
xchg
iret
adc
aad
push
movsl
sub
xchg
pop
xchg
mov
popa
xlat
pop
jns
clc
pop
mov
dec
add
adc
ficoml
lret
fcompl
subb
jecxz
lods
in
popa
push
stos
aas
ret
dec
call
arpl
sahf
lahf
aad
xor
int3
xchg
aaa
cs
out
or
movsb
sub
fmul
mov
test
jmp
pusha
add
negb
cmp
or
dec
call
test
cmp
sbb
push
jne
mov
push
xchg
push
xlat
cltd
stos
sahf
test
je
dec
fldcw
cmp
lret
or
lret
sub
fldenv
cmpsb
adc
std
imul
std
inc
ja
stos
push
test
dec
push
scas
iret
sbb
enter
ja
jno
dec
aaa
loop
mov
fcomip
push
pop
in
mov
enter
dec
add
mov
icebp
add
lods
fstl
repnz
rcrb
ja
pop
fiadds
call
out
xchg
shrl
stos
push
std
rorl
loop
push
mov
cmp
cmp
mov
mov
sbb
push
jns
frstor
cmp
add
pop
lret
jg
lret
mov
pop
mov
mov
dec
sbbb
lret
shll
mov
xor
fmull
xor
mov
std
and
push
mov
xor
pop
cmpsl
test
push
fucomip
push
add
fists
inc
xor
frstor
xchg
cmp
jno
pop
xor
cmp
dec
add
scas
enter
movsb
and
aad
or
sbb
out
scas
xchg
dec
xor
sbb
xchg
mov
pop
mov
inc
and
hlt
outsb
fs
pop
repnz
mov
adc
notl
in
pop
stos
arpl
fiadds
and
neg
mov
jne
mov
or
adcl
mov
push
mov
adc
les
popf
shll
cltd
call
fnstsw
mov
movsl
pop
dec
movl
mov
mov
add
mov
mov
xor
sbb
pop
mov
mov
cwtl
jae
push
int3
fs
aad
cs
sbb
das
cmp
icebp
lock
mov
fcom
sub
sub
popl
call
cwtl
lret
stos
icebp
xchg
ret
sub
sub
loopne
or
push
cmp
cmp
imul
mov
mov
out
das
add
test
insb
and
mov
shll
aaa
popf
loop
pop
fldenv
std
lods
dec
cli
mov
sub
push
adc
jne
mov
xor
add
jnp,pn
arpl
int
iret
push
jnp
xor
mov
incl
movsb
mov
mov
mov
inc
imul
or
rep
mov
mov
inc
push
inc
jae
std
pop
cmp
push
jge
add
jmp
lret
mov
fwait
mov
sbb
ret
popf
jmp
mov
outsb
sub
xchg
pop
and
mov
adc
push
ja
in
movsb
pop
lods
dec
unpckhps
cmp
dec
jp
imul
sub
popf
mov
mov
test
jno
jmp
aam
imul
in
daa
dec
xor
dec
divl
push
sarl
in
int
in
mov
xchg
sti
mov
adcl
fimull
add
push
test
add
loope
into
jp
imul
ret
mov
es
sub
jl
into
popf
push
and
mov
or
outsl
jbe
inc
outsl
cmp
jg
push
jle
stc
in
jg
mov
mov
sub
inc
push
sbb
inc
hlt
mov
push
xchg
inc
out
popa
in
mov
test
repz
data16
or
data16
dec
mov
arpl
addr16
test
pop
hlt
repnz
in
aam
xor
std
mov
cld
lods
fdivp
push
rcrl
sbb
xlat
or
negb
lds
fists
xchg
pop
xchg
mov
mov
mov
xchg
dec
add
mov
mov
adc
lods
stos
repz
daa
cld
and
out
pop
lds
and
pop
insb
jle
ret
lock
mov
addb
dec
das
jle
cltd
dec
ret
fistl
stc
je
js
push
dec
out
mov
jbe
notb
loop
popa
ja
clc
push
push
cmp
mov
xor
adc
lcall
in
mov
inc
test
mov
lcall
imul
xchg
cmpsb
push
rcpps
and
sahf
data16
lahf
les
dec
leave
pusha
mov
scas
mov
add
add
scas
fwait
push
int
xlat
repz
sub
xchg
hlt
cli
push
push
pop
sub
test
mov
js
xor
push
rolb
addr16
pushf
mov
scas
sbb
add
lods
xorl
fistpll
aaa
mov
pop
mov
jle
or
inc
and
pop
mov
push
sbb
ret
leave
mov
sbb
clc
xchg
jnp
xchg
ficomps
cmc
dec
fdivr
and
popa
cmc
xchg
push
cmpsl
arpl
data16
sahf
dec
jae
repz
xorl
or
arpl
das
cltd
popa
jmp
jle
out
jb
add
jmp
jo
sub
daa
imul
pusha
xchg
and
xor
push
cmp
enter
pop
inc
dec
adc
jne
bound
vsqrtsd
outsb
dec
loope
adc
repnz
cli
stos
or
cs
ret
sub
ss
mov
inc
int3
or
push
push
js
cmp
stos
mov
scas
das
fcoms
push
imul
adc
repnz
pop
nop
pop
sbb
cmpsl
cmpsl
movsb
inc
insb
fstpl
mov
sahf
adc
or
lea
sub
movsl
mov
outsb
jne
adc
es
insl
loope
push
aad
sub
mov
ss
adc
fwait
cmc
mov
dec
in
frstor
lret
xor
movsl
push
mov
data16
rep
push
stc
or
cmp
mov
adc
ss
mov
dec
and
imul
lahf
dec
adc
or
or
pop
shlb
sub
insb
xchg
mov
ret
stos
jns
mov
xchg
fldenv
shlb
jl
inc
push
jae
out
lods
daa
xchg
xorb
cmp
push
pop
cmpsl
inc
push
push
mov
jbe
mov
test
loop
mov
aad
negl
out
test
mov
aad
push
fwait
out
es
test
dec
cmp
sub
or
push
aas
shll
push
cmpl
aaa
dec
sbb
icebp
mov
push
add
mov
sahf
mov
adc
jne
inc
mov
sbb
mov
dec
cmp
movsb
fdivr
and
cltd
lea
test
cltd
data16
pop
mov
and
inc
push
mov
lcall
sub
mov
insb
ret
jmp
in
sub
mov
push
push
repnz
loop
push
test
sub
lret
sti
in
lahf
jnp
inc
and
loop
cmp
arpl
sti
mov
sahf
sub
sbb
sahf
loopne
sbb
adc
cmpsl
add
movsb
xor
ja
inc
or
push
cmc
aam
lcall
popa
gs
mov
push
jns
or
xchg
fptan
cvttps2pi
jle
cmp
imul
cmc
sbb
pop
popa
arpl
or
mov
aaa
jmp
lds
push
adc
xchg
fs
dec
rcrl
dec
push
jge
fsub
shlb
push
mov
mov
hlt
movsb
cmp
iret
add
and
cmp
ja
cmpl
popa
in
clc
icebp
pop
pusha
sbb
loop
outsl
andl
ja
repz
mov
xor
sub
mov
xchg
or
rcrb
cmp
mov
gs
in
push
push
cmpsl
push
adc
pop
rolb
stc
adc
lock
push
dec
xor
imull
or
adc
or
lods
push
sbb
fcmovnu
mov
cld
lods
dec
sbbb
jns
fbld
lahf
jl
mov
dec
arpl
mov
inc
mov
dec
xchg
jb
or
sbb
in
push
or
enter
inc
icebp
lock
xchg
cltd
xchg
pushf
push
out
xor
pop
xchg
mov
and
fcmovne
fwait
loope
shl
clc
pusha
loop
sbb
rol
fcoml
cmc
jbe
dec
outsl
mov
push
mov
or
fidivl
push
or
inc
fnstcw
insb
adc
ficoms
mov
ja
cmp
sti
es
jg
pop
add
cmp
jg
xlat
inc
cmp
test
add
xlat
test
xor
dec
mov
fnstcw
add
roll
mov
cmpsl
lds
xchg
xchg
outsl
ss
int
aad
and
mov
pop
popf
les
jno
imul
adc
loopne
xchg
shll
outsb
pop
fucomip
insb
push
jo
das
gs
gs
js
jae
inc
mov
xor
rcl
fs
sbb
leave
in
nop
mov
fst
bnd
aas
stc
in
pop
inc
jae
subl
pop
insb
dec
pop
lret
push
lcall
jbe
movsb
mov
push
jbe
insl
adc
push
or
addr16
data16
sub
pop
test
cmp
push
push
ds
and
push
jbe
hlt
repz
je
popa
jbe
jle
sbb
cmp
pop
jbe
lea
mov
adc
movsb
aad
or
roll
addr16
or
sub
pop
jb
je
mov
aas
inc
sbb
or
shr
pop
popl
mov
jl
bound
pusha
dec
adc
movsl
mov
sti
jp
cld
out
pop
int3
xchg
stos
mov
jle
xchg
lret
daa
mov
stc
push
adc
cmp
sahf
in
mov
adc
sbb
jle
aas
lea
sbb
mov
xor
std
push
jl
pop
std
xlat
ror
or
int
cwtl
dec
cmp
mull
cmp
in
outsb
mov
lods
sub
mov
push
fdivs
sbb
faddl
push
pusha
push
dec
sbb
mov
lcall
pop
lahf
jg
mov
fisubrs
test
pop
cmp
xor
mov
shld
xchg
mov
pop
cmp
les
into
movsl
jmp
scas
repnz
orb
testb
mov
mov
jg
dec
aas
push
out
in
out
iret
aad
push
pop
inc
push
inc
mov
add
pop
shr
iret
push
sahf
and
mov
std
mov
mov
insl
sbb
movsb
lds
into
aad
imull
jmp
mov
jbe
jbe
addr16
ficoms
shrb
loopne
cmpb
and
jge
cmpsl
lds
test
push
pusha
xchg
inc
adc
sub
lret
cmp
inc
pop
inc
add
mov
in
xchg
test
xchg
sahf
addr16
dec
setg
push
das
divl
xchg
sub
adc
cmp
xor
push
fnsave
out
leave
inc
hlt
dec
cmp
dec
test
jae
pop
cmp
or
stc
sbb
mov
or
push
sbb
jne
ds
adc
scas
aam
jno
dec
jecxz
mov
cmp
stc
xor
repz
mov
jge
inc
mov
dec
push
cmpsl
sbb
xor
cli
mov
lods
xchg
loop
sbb
xor
sahf
int
xchg
sub
nop
lods
dec
repnz
jp
or
imul
mov
push
cmpsl
out
mov
mov
or
clc
dec
ljmp
lahf
cwtl
jge
jo
shlb
mov
or
jmp
in
mov
orl
and
sub
adc
je
xchg
or
sub
fsubrs
enter
jnp
icebp
lret
pop
push
jge
jbe
lea
mov
xor
and
dec
ljmp
jo
ret
lret
mov
fstpl
xchg
sub
stc
mov
rcrl
fcoms
aam
dec
jne
loope
push
loopne
lcall
mov
lea
push
push
jmp
gs
gs
push
add
lret
xchg
outsb
jae
mov
adc
inc
push
pop
adc
add
mov
imul
adc
negb
add
jmp
mov
inc
inc
arpl
in
mov
xchg
popf
mov
pop
inc
and
ja
out
and
gs
fstl
dec
repnz
adcl
fistps
or
jae
cltd
arpl
mov
ret
bound
sub
ja
outsl
sbb
inc
push
mov
xor
hlt
jg
fdivr
repnz
insl
in
out
out
sbb
mov
add
gs
jmp
mov
fdivp
xchg
pop
add
xor
daa
or
and
cmpsl
xchg
xor
je
mov
inc
cwtl
adc
mov
xor
daa
lea
in
mov
dec
dec
iret
sub
shrl
dec
out
push
dec
mov
sbb
jecxz
and
add
aas
mov
dec
leave
xor
insb
jo
pop
add
mov
fimuls
mov
cmpl
fdivrl
popf
cmpsl
int
sbb
test
xchg
mov
inc
jge
pusha
jb
and
jp
xchg
movsb
jl
insl
adc
js
daa
test
add
and
inc
enter
mov
sub
shll
push
push
sub
xor
fs
push
push
jb
and
sub
inc
jnp
adc
outsl
mov
cmp
jnp
mov
mov
nop
out
and
mov
xchg
mov
sub
sbb
popa
xchg
pop
xchg
ret
adc
loop
scas
lcall
push
pusha
pop
into
inc
out
xchg
and
xlat
stc
and
pop
aad
add
xor
in
inc
pop
ja
adc
sub
fmull
jns
test
movsb
mov
adc
pop
gs
push
mov
inc
add
stc
mov
pushf
sub
repz
ljmp
adcl
jl
into
xor
insl
jmp
fs
outsb
inc
mov
in
idivl
in
lods
jp
push
push
xor
mov
fisubrs
jmp
cmc
out
mov
dec
pusha
or
xor
add
dec
push
das
repnz
cmp
call
cmp
mov
dec
sbb
mov
fldenv
rcrl
imul
push
lret
pop
repnz
push
xorb
xor
bt
nop
clc
xchg
cmpsl
insb
imul
fmuls
xor
and
or
mov
sbb
stos
addr16
lods
cmp
dec
inc
dec
push
outsl
mov
sbb
das
scas
imul
xlat
fcompl
sbb
add
adc
push
or
cmp
push
pop
or
pop
and
push
mov
cmp
insb
clc
xor
dec
xor
gs
pop
sbb
mov
mov
aas
out
adc
mov
lds
sub
cmp
and
pop
push
dec
cmp
aam
stos
adc
stc
mov
dec
mov
jmp
push
fistpll
sarb
out
inc
ficoms
push
movsb
cmpl
js
pop
scas
scas
nop
push
adc
pop
sbb
jp
pushf
mov
add
or
adc
and
jge
xor
inc
xor
cmpsb
shlb
outsb
shll
mov
incl
icebp
outsl
in
inc
out
xchg
sub
or
test
outsl
and
loop
outsl
sbb
loopne
xor
adc
jns
jbe
push
pop
inc
loopne
pop
inc
mov
inc
xorl
inc
sahf
shlb
mov
mov
std
mov
fwait
sub
inc
fdivr
iret
adc
push
mov
sbb
pushf
in
sbb
dec
subb
hlt
aad
inc
fdivrl
ds
stos
xchg
mov
push
jp
rclb
cmp
aam
mov
shll
bound
xor
int
shlb
loope
pop
subl
ja
pop
rclb
push
push
cmpsb
jb
stos
xchg
dec
jp
stc
in
pusha
movsl
leave
cmpsl
sarb
repnz
jnp
das
jae
lahf
jne
pop
jbe
andl
test
es
popa
add
int
mov
or
mov
cltd
dec
or
cmpsl
add
bound
bound
or
test
pop
subb
xor
xor
push
mov
scas
negb
subb
and
or
shr
addr16
pusha
cmp
push
ret
dec
sub
push
aam
fxch
ds
xlat
movsb
popf
xor
jns
sbbb
mov
inc
mov
loop
icebp
xor
cmp
jp
sub
sti
mov
cli
movsb
cmpsb
pop
jnp
xor
test
inc
std
cwtl
pop
adc
int
ds
into
fdiv
test
sbb
or
test
lea
mov
pop
pop
push
cmp
fwait
pop
arpl
jmp
filds
or
bswap
xorl
jne
sub
cmp
rorl
push
lret
adc
fwait
ss
fstl
jnp
jo,pt
das
shr
mov
mov
xlat
ja
aaa
std
push
addr16
outsb
fs
test
sub
mov
jge
sbb
ficoms
adc
sub
xor
je
sbbb
adc
jo
es
daa
push
inc
nop
negl
sub
mov
lea
jnp
mov
jns
adc
inc
push
in
sbb
xchg
mov
sbb
addr16
leave
ljmp
aad
adc
sbb
sub
ja
mov
cmp
pop
mov
push
cli
aam
adc
pop
andb
inc
mov
jne
pop
mov
xchg
push
adc
fs
popf
test
sub
mov
rcrb
jmp
mov
push
cmp
icebp
cmp
add
lahf
and
mov
cmp
xchg
push
iret
push
out
mov
fcoms
popa
pop
push
fisubrs
mov
push
rolb
lods
pop
push
sbb
data16
ja
je
and
int
adc
and
mov
or
inc
pop
inc
fs
fdivl
bswap
mov
cmp
mov
sub
dec
dec
ret
stos
or
fnclex
xor
and
jp
rorl
cmp
int
pop
lock
push
and
decb
jg
cmpsb
lret
dec
push
xor
lock
mov
mov
in
sbb
jo
cmp
dec
push
xchg
lret
and
xchg
and
and
mov
inc
jns
hlt
or
mov
push
push
adc
mov
mov
cmp
push
imul
bnd
cmp
jg
pop
mov
mov
adc
jmp
pop
xchg
jb
pop
or
cli
pop
lods
xchg
mov
inc
loopne
xor
xchg
movsb
mov
lret
dec
enter
ds
and
mov
in
scas
mov
std
call
scas
mov
xchg
lea
int
jge
lahf
inc
mov
je
or
imul
dec
jp
les
outsl
push
push
xlat
je
pop
cli
into
ret
and
pop
or
mov
popf
adc
enter
fsubr
jecxz
sub
in
sbb
out
clc
icebp
add
es
inc
mov
add
lds
loop
movsl
stos
loopne
push
pop
xor
or
pop
stos
jo
sbb
mov
out
jl
or
sbb
xor
test
mov
scas
dec
lods
inc
movsl
adc
pop
push
leave
jbe
iret
xchg
jl
test
adc
stos
aad
mov
sub
and
add
pushf
sub
jnp
xor
mov
mov
jle
pop
data16
mov
sub
jmp
popa
jnp
cs
cli
dec
negl
push
mov
xchg
xchg
gs
cmp
inc
cs
xor
daa
add
aas
pop
or
aas
data16
push
test
or
sbb
inc
or
mov
clc
push
stos
pop
lods
dec
fstpl
test
ret
mov
inc
inc
mov
dec
stos
push
push
cwtl
lods
loopne
jns
jmp
jge
mov
out
repz
xor
xor
out
mov
insb
addr16
jae
push
mov
mov
push
insl
cmp
adc
mov
mov
mov
cmpl
sti
inc
lods
pop
or
add
lcall
sbb
inc
ret
cmpsb
out
jle
xor
icebp
inc
fidivrs
imul
xor
out
test
shll
lcall
or
sbb
mov
or
xor
cmp
loope
lea
push
out
sbb
inc
fdivl
imul
push
repnz
orl
loop
push
scas
xchg
mov
movsl
ret
outsl
mulb
leave
jge
into
add
addb
mov
pop
arpl
jne
cmp
inc
dec
add
iret
dec
xor
jns
adc
setb
mov
add
mov
jb
push
xchg
cmp
pop
lahf
negb
adc
mov
mov
mov
sub
fnstsw
jp
mov
push
pop
lret
cltd
scas
orl
and
or
dec
dec
add
jg
stos
pop
repz
mov
lret
xchg
mov
fiaddl
lret
gs
icebp
les
pop
out
aaa
cmp
rclb
aad
mov
inc
inc
into
and
loop
pop
jl
scas
push
pop
jl
mov
xchg
inc
jns
jmp
in
test
or
clc
ret
mov
fadds
pop
adc
xor
fcmovne
pop
push
dec
nop
imull
push
out
pop
arpl
rclb
popa
pop
enter
orl
jmp
mov
stc
add
test
mov
fildll
daa
ljmp
mov
push
call
or
arpl
mov
fidivrs
dec
shlb
ljmp
jmp
pusha
testb
out
les
pop
mov
test
inc
in
fdivl
rorl
sub
adc
sbb
iret
mov
push
addr16
int
mov
fbld
sarl
fnstcw
mov
pushf
adc
fs
xchg
inc
jnp
sbb
cld
mov
sub
mov
test
sbb
sbb
bound
mov
cwtl
in
out
testl
and
push
inc
data16
xor
enter
shlb
addl
cmp
xchg
enter
leave
int3
xchg
cmp
sub
sbb
rclb
fwait
sbb
inc
ljmp
faddp
out
nop
lret
imul
add
cmp
orb
enter
cmp
sbb
mov
fwait
js
insb
ja
xor
pop
ljmp
je
jb
mov
fcmovbe
inc
xor
mov
jecxz
fcmovu
pop
jae
mov
stc
mov
sub
cmp
es
or
orb
mov
imul
inc
add
inc
xchg
dec
mov
in
push
scas
insl
jns
mul
js
mov
mov
xchg
sub
cmpsl
or
add
stc
cmp
mov
ror
inc
int
les
iret
mov
sarl
mov
out
xchg
out
in
lods
xchg
xchg
cmpl
inc
lret
dec
sti
sbb
cmp
loopne
mov
mov
leave
clc
popa
xor
sbb
jbe
pop
and
dec
popf
mov
dec
cld
push
icebp
mov
aaa
addr16
or
std
es
adcl
fstps
cld
push
outsl
fists
jno
push
cld
adc
movsl
test
sub
or
xchg
push
scas
push
inc
incl
dec
pop
fsqrt
jge
in
fwait
push
jne
loopne
pushf
add
ficomps
bound
pop
sub
fidivs
xor
mov
jmp
into
insb
xchg
stos
push
push
int
cmpsl
push
inc
jbe
mov
loop
sub
lret
pop
in
js
lds
out
add
mov
add
in
cmova
enter
repnz
pop
call
insb
out
mov
xor
shrb
addr16
out
das
mov
cmpsl
lea
ljmp
out
lret
xor
jle
daa
xor
cmp
mov
jge
ss
fadds
or
cld
xor
sub
or
loope
push
inc
shrl
or
mov
out
test
fdivrl
jmp
jb
mov
mov
test
mov
cwtl
ljmp
cmc
bound
js
lret
mov
in
pop
cltd
imul
lret
jp
sbb
popf
add
jecxz,pt
push
and
fmuls
daa
sub
jnp
out
inc
aad
repnz
mov
cld
mov
add
adc
jmp
pop
jle
shll
enter
negb
jnp
sub
std
nop
ds
loop
jae
sub
loope
call
test
aaa
xor
or
movsl
mov
out
push
pop
xchg
iret
out
daa
sar
into
enter
push
test
mov
xchg
inc
mov
add
push
dec
sbb
pop
call
popa
sahf
outsl
jne
push
pop
jmp
cmp
cmp
sar
cmp
or
xor
fistps
jno
and
fwait
and
adc
movsl
out
fidivs
mov
mov
and
rol
xchg
je
jo
pop
add
icebp
mov
xchg
or
xor
jae
push
push
push
sbb
add
push
sbb
dec
ds
cli
arpl
mov
xchg
sub
dec
mov
push
nop
jl
lock
dec
adc
lahf
loope
jmp
sbb
ret
jae
push
jne
mov
mov
int
or
xchg
test
sub
addb
andl
in
or
iret
adc
pop
xchg
in
popa
inc
jecxz
mov
clc
popa
sar
xor
subl
jns
mov
repnz
push
mov
outsl
ret
inc
fs
mov
xchg
mov
adc
and
outsb
out
xor
and
popf
mov
dec
ljmp
out
jno
imul
in
xchg
dec
loopne
ffree
lods
pop
sbb
adc
mov
cmp
and
cmpl
mov
pop
add
jge
pushf
cmp
xchg
roll
in
add
shll
test
cmc
out
call
xlat
push
inc
outsl
xchg
pop
cmp
sti
enter
and
sub
inc
mov
cmp
filds
cmpl
pop
popf
mov
jb
jnp
adc
repz
lret
sub
cltd
pushl
mov
dec
shll
inc
test
cld
fisttpll
dec
aaa
or
sub
pop
fistpl
jmp
mov
sbb
popl
popf
xchg
clc
dec
lahf
arpl
cmp
outsb
jbe
jp
sub
leave
fdivrl
mov
mov
pop
lds
xchg
xor
or
pop
scas
push
in
push
fimull
mov
cmc
or
into
pusha
pusha
lcall
cmp
jne
xor
add
jl
mov
add
cld
fsts
add
or
pop
push
popf
insl
cmpsb
dec
xlat
mov
fs
sub
push
jne
test
retw
sti
lret
jecxz
dec
pop
scas
xor
inc
lahf
adc
imul
fbstp
and
movsl
dec
push
jnp
pushf
jp
fdivs
lret
dec
insb
push
cs
push
lea
mov
fsubr
out
jne
dec
call
sti
gs
repnz
lret
in
xor
shrl
addb
jno
pushf
shlb
lds
imul
loopne
es
jb
fiaddl
inc
cmp
popa
or
jge
pop
inc
mov
stos
mov
stc
push
decb
bound
or
or
add
cmpsl
enter
sbb
stos
leave
das
inc
xchg
add
mov
into
aad
ret
push
pushf
mov
ljmp
hlt
jg
adc
pop
stc
call
movsl
int
adc
dec
sahf
scas
and
repnz
test
imul
dec
iret
movsl
and
push
sub
or
insl
decb
loop
mov
dec
imul
mov
pop
sbb
je
xchg
mov
ret
cmp
add
shrl
mov
pop
sbb
inc
fst
andl
mov
sbb
mov
js
xchg
stos
aaa
lds
xlat
mov
dec
movsb
inc
jns
insl
out
sahf
sbb
inc
adc
int
test
orl
fldcw
jns
mov
adc
sbb
fldcw
gs
lcall
mov
sub
aaa
loop
dec
pop
psraw
pop
or
leave
outsb
jmp
out
mov
adc
jns
in
test
xchg
scas
mov
sti
jle
test
mov
mov
mov
xor
cmp
pushf
subb
mov
jmp
mov
pop
cmp
fdivs
mov
test
jmp
adc
ret
das
sub
dec
es
jo
into
dec
xchg
jecxz
loopne
out
push
cltd
xchg
fcompl
inc
xchg
mov
hlt
js
add
nop
dec
mov
mov
mov
jnp
xlat
push
push
mov
dec
xchg
roll
dec
mov
sub
scas
sahf
add
pop
out
clc
and
out
adc
adc
in
mov
and
lock
mov
sub
sbb
inc
shlb
adc
dec
popf
int
jae
jnp
subl
push
jecxz
cmp
fs
pop
dec
cs
jno
add
or
pushf
fidivs
fistps
lret
add
addr16
out
inc
icebp
adcl
or
daa
pop
adc
shlb
fdivl
movsl
cwtl
fcmovnbe
movsb
ss
pop
xchg
imul
pop
out
pop
inc
cmc
mov
cmp
and
mov
fisubl
je
shr
adcb
fstpl
xchg
std
add
nop
lcall
cmpsl
mov
fs
call
or
sub
sub
call
mov
pop
pop
outsb
mov
pop
aas
fld
loope
pop
mov
lcall
sbbl
repz
ds
inc
ds
sub
inc
mov
xchg
loopne
xor
pusha
mov
adc
stos
xlat
mov
jle
decl
pusha
mov
leave
add
incl
ljmp
mov
aaa
inc
inc
mov
cmpsl
jne
jp
cld
pop
aaa
add
xlat
decl
insl
jg
sbb
out
push
sub
adc
push
insb
rorl
pop
cmp
pop
aaa
mov
daa
mov
clc
push
sbb
rcrl
sar
add
imul
hlt
mov
lcall
push
lahf
cmc
push
jno
push
mov
cld
add
lock
inc
xchg
loop
insb
rolb
lret
je
lahf
add
cld
rclb
int
mov
cltd
ljmp
mov
andl
dec
xor
cmp
sbb
push
add
cwtl
pop
sti
pop
movsl
add
cltd
mov
sub
insl
test
mov
jl
movsb
test
int
and
push
pop
pop
icebp
dec
mov
mov
xchg
sub
cmp
sub
sbb
test
outsl
xchg
mov
add
adcl
ljmp
push
in
and
fmuls
cmpsl
mov
lret
cs
adc
js
scas
pop
ja
scas
add
mov
stos
mov
das
mov
push
out
dec
les
fldl
loope
popa
test
or
lret
adc
popf
jle
orl
outsb
movsb
mov
inc
ja
clc
mov
mov
xor
sti
sbb
mov
push
adc
jns
in
and
and
mov
jecxz
icebp
fldenv
in
lahf
loopne
pop
in
insb
mov
insb
and
jb
dec
das
mov
neg
scas
imul
dec
push
orb
js
rclb
and
lds
mov
dec
add
cli
xchg
je
sbb
adc
mov
lds
inc
mov
cmp
fwait
insl
adc
inc
std
or
push
mov
mov
sub
lret
test
push
in
push
xor
je
mov
mov
insl
adc
pusha
sub
cmp
inc
cmp
or
xchg
imul
push
inc
lahf
cmp
fdivrl
or
mov
int
sbb
mov
xchg
push
and
ficompl
and
cli
das
sub
jne
fimull
call
ds
mov
js
sub
sbb
out
xchg
repnz
dec
pop
xor
test
push
xchg
std
mov
dec
les
xor
jb
movsb
xchg
or
push
aam
xchg
faddl
pusha
mov
xchg
xchg
stc
cmc
iret
jge
inc
add
stos
xchg
aam
bnd
pop
sub
and
daa
imul
sahf
sbb
inc
sbb
and
rorl
mov
and
fistpll
and
fwait
lret
pusha
popf
sbb
std
test
vphsubdq
lds
push
shl
push
jl
nop
push
imul
repnz
jle
scas
sbb
cltd
mov
sbb
out
test
icebp
pushf
sbb
int3
pop
ljmp
xchg
sub
mov
cmp
sbb
fwait
mov
int3
int3
cld
std
push
sub
repz
cmp
dec
push
movsb
cli
paddq
out
cs
cmc
aaa
outsb
shrb
jno
dec
mov
mov
jae
jl
in
cmpsb
pop
sarb
add
xchg
or
sub
in
cltd
ja
fsts
add
inc
clc
lret
jecxz
mov
sub
mov
rclb
sti
shrl
lock
lods
and
sbb
fisttpl
negb
xor
sbb
aaa
int3
push
jno
adc
sbb
jbe
or
sti
xchg
stc
jno
pushf
insb
dec
cmp
std
xor
pop
loopne
sbb
xchg
adc
push
jg
aam
rorb
in
roll
rolb
sarl
adc
xchg
cmp
popf
cmp
push
int3
mov
or
icebp
out
xchg
dec
call
addr16
mov
push
movsl
cmpsb
lock
pop
imul
sbb
stos
dec
sbb
ficompl
mov
mov
out
inc
xchg
push
inc
sbb
lret
sub
popa
ret
fldcw
xor
and
xor
or
repz
dec
mov
arpl
push
or
insl
sub
and
mov
ljmp
arpl
mov
adc
leave
inc
mov
pop
test
mov
mov
and
mov
sbb
cmp
jne
mov
xchg
int3
fldl
dec
xor
sub
sbb
call
xorl
es
add
dec
jb
aaa
add
sub
jnp
call
cmp
push
add
nop
negb
cmp
imul
test
mov
pop
sti
pop
xchg
es
notb
dec
mov
shlb
enter
stos
adc
push
xor
jb
jge
cmp
jne
insb
dec
imul
mov
fs
or
clc
daa
inc
xchg
jp
pop
out
repz
dec
xchg
add
cmp
neg
rcll
daa
mov
jl
sbb
push
mov
lds
xor
adc
inc
jne
jne
in
push
xchg
notb
das
adcb
pushf
out
mov
adc
adc
dec
and
divl
out
cmp
cs
lods
clc
mov
pop
sbb
lods
xlat
std
dec
shrb
jecxz
int3
rorb
jl
sti
or
cmc
fwait
cmp
cli
jmp
pop
or
scas
pop
insb
in
xchg
jmp
ret
adc
mov
jo
push
aas
sub
xor
push
sub
sbb
movsb
dec
mov
push
pop
lahf
push
inc
push
or
rorb
mov
xor
mov
jp
test
sbb
mov
loope
xchg
cwtl
negb
stos
das
ficompl
sbb
stos
out
cmp
aaa
aam
cmp
fidivl
scas
rorb
sbb
mov
push
xchg
in
mov
repz
aad
cmp
pop
ljmp
or
xchg
cmp
dec
lods
inc
dec
shrl
test
push
cmpl
sarl
xchg
add
xchg
sbb
xchg
mov
out
sub
ljmp
push
aaa
hlt
popf
push
inc
icebp
data16
push
add
lods
jg
outsl
movsl
leave
jns
cli
popa
out
cltd
outsl
lods
loop
stos
inc
mov
imul
and
dec
pop
sbb
mov
out
into
xchg
ds
and
xor
out
mov
in
fldenv
clc
bnd
xor
push
subb
jns
mov
sub
jmp
cmp
jae
jno
nop
dec
mov
cmp
pop
sub
push
mov
movsl
pop
stos
es
adcb
dec
jb
lock
and
push
lods
inc
or
cmp
push
aam
sbb
sbb
fs
in
pslld
cmp
imul
pusha
in
and
sahf
loop
mov
out
aad
lea
es
sub
fs
pop
or
mov
push
dec
cmp
daa
rcll
enter
sbb
icebp
dec
sub
cmp
shlb
and
gs
out
or
mov
les
sub
pop
lret
dec
fdiv
mov
sbb
mov
jne
shll
addl
jl
lret
mov
sbb
outsl
dec
add
xchg
nop
cmp
movsb
mov
pop
jae
arpl
mov
push
pop
mov
fidivs
and
loopne
push
cmp
pop
js
sbb
aas
out
loopne
shlb
push
mov
notb
mov
add
or
sub
inc
stos
or
or
jo
sub
sbb
mov
push
in
add
jae
mov
es
add
out
pop
cli
pushf
lret
cmp
xchg
or
adc
mov
inc
lahf
loop
xor
mov
xchg
sbb
fs
add
jne
bound
jne
insb
cmp
pop
inc
jecxz
pusha
es
push
or
push
stos
dec
ljmp
imul
psubd
adcb
sub
sbb
ds
xor
cmp
test
adc
sbb
inc
inc
mov
add
into
in
mov
jmp
mov
mov
xor
and
mov
into
or
into
mov
and
push
fldenv
and
adcb
push
mul
mov
push
movsb
cmpsb
nop
dec
test
or
mov
xor
mov
cmp
push
adc
xchg
jnp
test
bound
cmp
jle
adc
sub
sub
pop
daa
sti
clc
sub
notl
fxch
bound
out
sahf
mov
fnsave
xlat
pushf
out
mov
jmp
sub
sbb
or
mov
cwtl
aas
pop
divb
sbb
je
jmp
scas
add
lods
inc
add
imul
clc
inc
mov
dec
add
test
ljmp
sub
cmp
repz
sbb
mov
add
xor
push
cmpb
add
dec
cmc
jp
jbe
xor
das
add
inc
pushw
aas
sub
adc
xlat
or
dec
fnstcw
xor
mov
aaa
pushf
inc
jp
lock
fists
mov
ds
les
inc
sbb
popf
sbb
stc
test
imul
or
jbe
clc
dec
ret
jle
test
xor
cmpsb
call
push
push
mov
repz
imul
std
test
addr16
rclb
inc
loope
add
xchg
inc
pop
adc
push
inc
nop
out
js
sub
inc
daa
cmp
cmc
inc
xchg
sbb
jl
dec
fdiv
pop
push
dec
inc
or
mov
pop
mov
dec
rorb
push
jle
mov
gs
stos
pop
out
and
xor
in
fstps
mov
dec
fs
jmp
add
mov
stc
xor
jl
mov
sbb
dec
fistpl
popa
hlt
mov
fcomps
jo
pop
cmp
cmp
fcomi
dec
imulb
fmulp
pop
xor
repnz
cmp
movsb
push
fcoms
enter
sbb
movsl
negb
mov
push
mov
sub
dec
xchg
jne
stc
lock
jns
xchg
xor
xchg
push
call
sbb
xchg
mov
scas
push
cwtl
pop
call
push
pop
mov
jecxz
xor
gs
rcll
sbb
xor
adc
lods
fmuls
mov
mov
mov
loope
loope
test
ret
ds
or
fs
inc
popf
rorl
ljmp
pop
lods
lock
push
jl
loope
lcall
add
xchg
push
and
mov
les
jecxz
sbb
jmp
notb
aam
loope
mov
pop
pop
pop
les
fs
sahf
stos
xchg
cmc
adc
icebp
inc
jg
mov
sti
pop
sub
mov
pushf
mov
xchg
push
or
mov
insb
clc
jg
or
insl
mov
jno
arpl
mov
and
ja
loop
mov
xlat
lahf
xchg
pextrw
pop
leave
cld
xor
mov
add
cmc
jmp
sbb
push
jle
adc
pusha
inc
mov
mov
inc
imul
mov
mov
movsl
push
js,pt
mov
xor
test
sbb
push
push
ljmp
cmp
out
and
cmpsb
sbb
and
gs
inc
movsl
xchg
mov
xor
push
jns
scas
cli
cmp
sub
add
fcmovu
ret
cmp
sub
jecxz
add
jg
push
push
and
or
stos
pop
and
rorb
add
inc
add
mov
sub
sub
cmpb
cmp
cmp
out
and
cmpxchg
cmp
mov
cmp
das
packuswb
fldenv
jae
mov
mov
js
xchg
ret
rorl
mov
inc
lcall
cltd
fsubl
inc
mov
sbb
lret
outsb
pop
inc
xchg
inc
insb
sbb
mov
jo
mov
sti
repz
std
insb
and
cwtl
hlt
fwait
les
and
or
jne
outsl
movsl
and
inc
loop
out
inc
test
sarl
add
fs
fistl
ja
mov
adc
pop
pop
mov
or
inc
mov
inc
adc
mov
push
or
jmp
lcall
sub
sub
mulb
fisubl
bound
bound
movsb
push
mov
jbe
data16
pop
sbb
and
loope
xorl
mov
fldenv
lret
mov
jno
jnp
insl
mov
jecxz
pop
mov
arpl
inc
pop
shlb
dec
ljmp
mov
add
jnp
mov
xchg
cld
adc
xchg
adc
punpckhdq
cmc
lahf
cmp
dec
add
jbe
and
shll
mov
mov
pop
xchg
insb
xor
popa
popf
sbb
inc
test
cmpsl
add
jae
stos
rcr
sbb
sbb
cmp
fwait
pop
lods
daa
mov
call
orl
adcb
mov
int
jbe
sub
into
pop
das
test
popf
loop
std
sub
arpl
adc
and
pusha
xchg
addb
dec
mov
mov
inc
call
jg
fnstenv
inc
std
push
testl
lods
jo
jecxz
adc
pushf
mov
add
pop
adc
or
inc
sbb
sbb
sbb
xor
cwtl
and
aas
fisttps
insb
fisttpl
cltd
adc
dec
scas
andl
mov
shll
sbb
xchg
pushf
lahf
test
add
mov
mov
bound
cmp
add
incb
test
sub
mov
test
addl
js
lcall
mull
aad
mov
xchg
dec
or
mov
cmpsb
insb
add
cmp
fstpt
ret
jl
daa
leave
ljmp
mov
mov
mov
lahf
push
in
ljmp
test
iret
dec
ret
js
add
mov
mov
aas
cmpsl
inc
and
loop
mov
and
push
xchg
mov
pop
jbe
sub
mul
jmp
pop
loopne
sub
mov
ljmp
mov
clc
mov
out
jg
sbb
test
aam
dec
pusha
jmp
mov
arpl
sbb
es
inc
sbb
jge
data16
inc
dec
xchg
shl
push
and
cli
ret
clc
xchg
adc
dec
das
mov
insl
loopne
push
data16
jl
or
cld
mov
sub
scas
xor
enter
in
dec
cmp
lret
cmp
jle
stos
aam
and
cmp
dec
pop
out
cmc
sub
inc
cmpsl
pop
arpl
in
jl
mov
in
movsb
xchg
popa
mov
dec
or
jae
loopne
shrb
add
lods
fmul
xchg
adc
in
inc
jne
dec
mov
int
ss
mov
loop
add
jbe
mov
xorb
xchg
popa
add
or
decb
adc
fwait
in
mov
ja
cld
bnd
push
icebp
cmp
add
or
ret
loop
push
sbb
aad
sti
xchg
cmp
shrl
and
jns
add
fsubrp
sbb
mov
sahf
jecxz
out
outsb
xlat
out
test
sub
call
or
xchg
fwait
loop
shll
push
inc
fadd
mov
sub
pop
repnz
scas
mov
mov
sub
cltd
dec
into
dec
inc
outsb
test
mov
decl
dec
hlt
and
push
jp
stos
push
jl
adc
and
jb
cltd
mov
fyl2x
add
dec
je
push
loop
fimuls
dec
fmulp
cmp
and
push
mov
or
xchg
inc
mov
inc
cmc
loop
dec
fnclex
add
out
mov
push
push
in
push
mov
cltd
aad
push
repz
inc
xchg
fildll
sbb
or
or
push
jnp
icebp
xchg
fisubrl
and
lods
xchg
inc
loopne
mov
adc
outsb
xchg
dec
jno
sub
add
mov
push
inc
xchg
push
push
cmp
mov
das
add
fistps
cmp
rcl
and
and
or
mov
jns
lret
mov
sub
mov
jmp
xchg
movsl
push
mov
test
cmp
test
jmp
outsb
out
lahf
xor
add
sahf
adc
test
pop
pop
data16
jo
xchg
xchg
xlat
gs
insl
outsb
pop
mov
xor
jmp
fwait
dec
jo
jne
fmull
hlt
scas
xchg
out
clc
fisttpll
jmp
push
push
pop
scas
add
iret
jnp
and
xor
jo
daa
inc
jae
out
sti
adc
in
mov
cmc
pop
in
movsl
testl
jecxz
dec
xchg
inc
jecxz
popf
loope
sub
jmp
add
jle
push
pushf
aad
push
mov
fwait
jo
adc
add
or
adc
out
cld
mov
push
push
cmp
idiv
adc
adc
aaa
dec
ret
or
movsl
sarl
dec
ja
aaa
xor
fwait
mov
mov
or
inc
pushf
dec
jecxz
aam
ficoms
dec
cmp
aaa
push
loope
push
ljmp
mov
sub
ss
adc
jae
jl
leave
xchg
mov
sub
out
pusha
pop
cmp
xchg
mov
gs
scas
pop
push
or
push
insl
stos
out
pusha
js
stc
aas
out
pop
daa
fmul
push
xor
pminsw
pop
andb
std
mov
roll
push
xchg
ss
int
xor
inc
loop
cmpl
xor
sbb
pop
mov
mov
sub
dec
ja
shrl
data16
xsaves
movsl
loop
inc
rclb
ds
iret
fisttps
xor
dec
mov
jmp
mov
jae
in
loopne
imul
mov
cmp
mov
divb
adc
dec
cmp
sub
ja
dec
imul
jb
cmp
ficompl
outsb
add
in
push
repz
mov
cmp
adc
popf
sarb
aaa
and
inc
sub
stos
pop
sbb
les
test
jl
or
test
fstpt
inc
cltd
icebp
out
aaa
jb
stc
xor
and
addr16
xor
stc
adcl
popa
mov
mov
aam
mov
clc
movsl
enterw
outsb
fwait
xchg
sub
cltd
xor
adc
lea
and
add
bnd
rorb
int
or
lock
push
add
pop
out
push
das
ret
icebp
xlat
inc
mov
ds
xlat
in
mov
leave
add
push
mov
sbb
xchg
fistpll
jmp
lods
adcb
jbe
flds
or
jg
daa
das
ja
or
pop
shrb
dec
mulb
repnz
or
outsl
daa
add
sub
rcrb
clc
adc
les
xchg
das
in
and
ss
mov
inc
cmp
hlt
rcrl
and
mov
aad
imul
enter
in
sub
data16
dec
add
xor
mov
and
xchg
xor
adcb
push
dec
mov
pop
out
push
data16
or
pop
and
in
mov
daa
push
movsl
inc
imul
roll
aam
jp
fldt
push
inc
in
call
inc
repnz
and
pop
jl
cmp
arpl
push
mov
scas
je
lock
mov
ljmp
test
pop
adc
push
jns
pop
pop
and
clc
xchg
push
sti
jbe
xor
movb
ret
daa
test
mov
add
jns
mov
pop
pop
mov
push
push
mov
cs
lcall
popf
cwtl
jmpw
mov
pop
imul
mov
pop
dec
push
sub
mov
inc
addr16
lds
dec
jae
repnz
push
mov
mov
add
enter
repz
fdivl
sub
in
in
out
fcmovnu
movsb
xor
add
lret
jb
jle
movl
pop
lahf
push
add
in
outsb
or
jbe
mov
gs
mov
push
jmp
jl
sub
jo
inc
mov
mov
addr16
int
mov
out
push
stos
scas
jno
ret
or
cmpb
loopne
lods
fcoms
loop
test
mov
xchg
sbb
cmp
add
test
and
das
or
shl
orb
repnz
add
std
pop
dec
lods
mov
stos
dec
sbb
mov
cld
mov
iret
xor
add
imul
sbb
ds
or
sbb
push
scas
not
jmp
aaa
pop
mov
rol
scas
pusha
pop
js
jecxz
push
inc
and
jp,pn
in
cmp
push
push
inc
aas
jae
mov
popf
shlb
mov
lods
pop
jge
fdivrs
cmp
outsl
clc
push
push
mov
mov
int
mov
push
andl
sub
popf
jle
push
aad
test
xor
js
icebp
rcll
and
cwtl
stc
xor
mov
xlat
cmp
dec
xchg
or
push
mov
jbe
xchg
cmp
stos
lods
xlat
subl
xor
sub
push
cmp
int
outsb
push
mov
sub
daa
jbe
jo
rcll
adc
in
pushf
ror
popf
imul
xchg
adc
sub
pusha
dec
jb
dec
arpl
pop
int3
mov
mov
or
scas
in
mov
sub
xorl
popf
xchg
jg
push
and
adc
inc
push
sbb
push
pop
fldt
aam
std
shll
test
inc
movsb
and
push
xchg
in
or
jbe
jecxz
jbe
mov
add
pop
je
xor
into
xchg
in
movsl
cld
ja
bound
ja
sbb
xlat
popf
int3
scas
push
mov
mov
add
cld
push
cli
push
inc
dec
scas
sbbl
test
notl
cli
lock
int3
pop
sub
mov
psubusw
in
mov
gs
mov
xchg
pop
push
sbb
ljmp
jecxz
stc
lret
mov
mov
rcl
aas
xchg
push
lcall
cmp
mov
into
lods
mov
ja
mov
addr16
repz
pop
ret
mov
or
imul
gs
loopne
mov
xchg
inc
add
lods
arpl
xchg
xor
hlt
and
or
shrl
inc
addr16
insb
push
cld
mov
push
je
mov
pop
nop
out
push
or
jns
test
add
cmp
lods
shll
ret
sbb
out
pop
mov
dec
cmp
push
xchg
clc
fiaddl
mov
test
lret
jge
nop
repnz
xor
pop
pop
jbe
outsb
xlat
dec
jbe
in
mov
ret
loopne
dec
mov
and
mov
ret
out
jns
push
insl
cmp
inc
xchg
jo
repnz
test
inc
sub
mov
mov
lret
xchg
test
dec
nop
dec
adc
inc
add
es
sbb
adc
mov
cmp
repnz
jns
fwait
pop
mov
push
in
or
push
jmp
fildl
push
or
sbb
popf
dec
sbb
dec
or
repnz
sbb
imul
out
mov
scas
pop
jmp
shrl
pop
and
push
xchg
flds
mov
jmp
jns
sbb
or
jns
adc
sbb
stc
int
fucomi
add
pushf
test
mov
push
sub
ja
outsl
inc
xchg
mov
inc
out
jae
into
pop
clc
mov
lcall
pop
mov
push
ds
jg
and
pop
stc
inc
xor
aas
incl
or
lds
cwtl
dec
rorb
mov
push
mov
sub
rcll
movsb
inc
sbb
sub
test
movsb
xor
sbb
adc
push
push
jecxz
sbb
adc
cmp
fcomi
xchg
nop
xlat
push
arpl
adc
inc
sub
cmpsb
clc
xchg
std
sub
out
ja
gs
lahf
adc
imul
xchg
addr16
mov
xor
aam
adc
and
xor
push
push
cmp
inc
xor
cmpsl
fldt
jns
sbb
mov
push
mov
call
jl
jnp
outsl
loop
inc
jg
jle
imul
pushf
pop
add
mov
xor
adc
and
lahf
lock
inc
or
cs
mov
xchg
jnp
fisttps
sbb
outsb
dec
dec
punpcklwd
inc
push
jge
xchg
xchg
fistpl
jbe
mov
mov
cld
cli
pop
add
dec
cld
loope
or
loop
test
aas
je
jp
ljmp
mov
or
mov
inc
ret
movsl
dec
ja
pop
jl
sbb
mov
and
push
lret
test
sub
sub
ljmp
sub
movsb
push
sub
xchg
nop
call
pop
mov
add
je
jne
lret
jmp
hlt
push
sub
into
out
cld
xor
lods
mov
pop
ror
leave
adc
mov
sub
inc
out
cmc
push
call
sbb
cli
sub
leave
mov
or
arpl
rcrl
daa
clflush
bswap
jl
mov
cwtl
mov
jl
in
mov
enter
popf
movsb
lret
ret
jp
sbb
cmpsl
cmp
loop
add
pop
aam
dec
int
xor
mov
stos
pop
add
push
in
pushf
aam
and
mov
sbb
iret
pop
jns
adc
ds
mov
xchg
pop
insb
adc
mov
mov
push
mov
pop
stc
sub
mov
mov
iretw
push
repnz
sub
scas
jle
jb
divb
jle
fimull
cltd
or
or
or
nop
sti
jg
scas
sbb
ret
popf
movsl
mov
jbe
out
jne
mov
cltd
jae
push
aas
test
mov
es
mov
cmp
mov
test
cmc
sahf
lods
push
fldl
cs
pop
and
dec
add
mov
push
js
sbb
mov
jmp
mov
mov
aaa
jge
mov
dec
mov
neg
fisubl
sub
mov
push
mov
sub
pop
test
shl
mov
dec
lods
jg
push
clc
cli
sub
mov
push
xor
mov
xor
lcall
sub
subb
in
pop
test
ret
mov
ljmp
mov
xchg
mov
push
insl
dec
lret
dec
insl
insw
jl
sarb
jecxz
sarl
clc
sub
adc
jne
mov
mov
imul
push
test
xor
sbb
sub
rol
sub
mov
insb
pop
push
adc
dec
jnp
dec
cmpsl
adc
bound
add
shrl
xchg
add
mov
or
xchg
lret
shrb
into
push
jne
dec
in
ja
icebp
dec
cmp
inc
icebp
mov
in
gs
add
pop
mov
mov
pop
pop
popa
pop
shll
or
aam
add
incb
or
mov
push
pop
push
adc
xor
inc
fwait
jb
cmp
xlat
xchg
pop
mov
xchg
shlb
adc
and
xor
movl
mov
mov
popf
push
inc
push
pusha
fldt
inc
xor
sbb
jbe
arpl
clc
jb
mov
push
and
mov
gs
and
aad
xchg
scas
or
inc
and
add
enter
gs
stos
clc
pop
xchg
pop
sub
jecxz
push
scas
xlat
sub
mov
xor
inc
mov
xor
sbb
sub
dec
popf
mov
paddd
cltd
mov
xchg
xchg
adc
cmovns
jg
cmpsl
hlt
and
ret
mov
addl
and
sub
inc
jnp
pop
ljmp
cmp
fwait
mov
std
sar
jle
loopne
push
mov
pop
dec
mov
jno
ss
jns
std
popa
pop
jg
fwait
xor
xchg
mov
aam
push
dec
mov
cli
cmp
xor
mov
xor
jb
push
rcll
cmp
mov
fdivl
arpl
add
jnp
xchg
in
loop
cwtl
imul
mov
lods
dec
in
pop
lret
repz
test
shll
cmp
jmp
cmp
fwait
dec
ficomps
and
loope
aad
adc
mov
and
fimuls
jne
aam
popf
pop
pusha
fstpl
and
add
lahf
jbe
notb
addr16
xorb
mov
dec
jb
pushf
loope
or
sub
enter
shll
scas
jecxz
lcall
pusha
repz
dec
std
push
lcall
loope
inc
pop
xor
jge
hlt
and
mov
test
cmp
mov
push
or
mov
hlt
rolb
xor
dec
nop
fcoms
push
mov
fsub
mov
sub
or
iret
in
jecxz
cld
cltd
pop
fdivl
dec
aaa
mov
mov
in
push
aam
adc
fcoml
inc
xor
or
pop
dec
out
cld
mov
inc
jl
cmpsl
xchg
push
xchg
jbe
bound
inc
ja
jle
fsubrl
pop
mov
adc
cmp
repnz
in
mov
cwtl
out
ret
inc
lret
sbb
pop
jp
mov
mov
lea
mov
sub
pop
xchg
sbb
hlt
aad
sbb
cmpsb
or
shrl
push
nop
inc
addb
test
int
fsubr
das
loop
pop
imul
pop
movsb
push
inc
and
xchg
pop
addr16
repz
xor
push
fstps
xlat
clc
sbb
adc
inc
sub
loop
ss
jae
mov
sub
xor
outsb
jmp
jg
sbb
mov
xor
xor
addr16
or
ds
mov
mov
lcall
mov
enter
adc
sbb
bound
inc
clc
push
push
xor
adc
jg
mov
jmp
sbb
inc
ljmp
pop
ss
xchg
xchg
and
add
loopne
xor
add
icebp
lret
aas
pop
fldl
int
xchg
jmp
sub
dec
mov
scas
cmp
or
mov
ljmp
or
int
xor
movsl
inc
jmp
xor
mov
mov
xchg
push
inc
stc
ljmp
cmp
lea
sub
inc
jmp
jb
and
sbb
icebp
cld
movsl
jno
push
sub
dec
inc
and
jg
or
push
call
sti
andb
add
dec
ljmp
sub
mov
fnstsw
aaa
pop
xor
int3
mov
or
or
es
pop
shrl
inc
lcall
push
rcll
add
sbb
outsl
std
jbe
push
cmpsb
pop
sub
ss
or
jnp
fnstsw
inc
push
cmp
out
jp
insb
sub
inc
ret
xchg
out
pop
call
lea
cmp
sbb
xchg
xlat
icebp
push
popf
push
fistpll
add
popa
dec
mov
ret
lods
jne
and
rclb
call
fwait
push
mov
cli
pushfw
jmp
cmp
fisubl
ret
pop
enter
xchg
dec
mov
mov
sub
cmp
xor
fxch
daa
cmp
dec
adc
adc
rcll
jp
inc
sub
fcoml
or
icebp
inc
cmpsb
int3
or
xchg
xchg
aam
push
gs
test
sub
stos
out
and
stos
jne
stos
mov
and
icebp
mov
mov
jbe
fldenv
pop
outsb
movsb
mov
popf
xlat
add
push
daa
push
ljmp
cmpsl
or
cmp
add
pop
je
cmp
cmpsl
adc
out
xchg
sub
sbb
jle
jno
addr16
fwait
aad
sbb
cmp
add
aaa
jb
push
xchg
dec
cltd
push
fs
cmpsl
stos
or
bound
aaa
imul
mov
inc
jbe
sbb
pop
pop
lcall
lods
xlat
sub
sbb
sub
jg
mov
mov
lods
hlt
sbb
and
pop
std
insl
fidivrl
cmc
sahf
ret
dec
xor
dec
pop
inc
lea
pushf
imul
ret
cmp
jne
xor
push
sbb
jge
mov
lock
iret
cmp
dec
call
pop
shrb
mov
inc
jl
out
test
out
mov
mov
sbb
mov
inc
xchg
or
mull
mov
or
sub
fwait
addl
mov
scas
xchg
xor
scas
pushf
lret
sahf
mov
iret
clc
mov
adc
out
cmp
add
daa
aaa
ret
jmp
daa
add
xor
and
jb
ss
ja
adcb
sbb
sub
fs
popf
inc
jns
rclb
lea
pop
jbe
repnz
mov
insb
mov
and
push
call
and
xchg
push
jo
xor
xchg
call
mov
adc
jo
sub
jge
cld
jle
inc
test
bound
jae
sub
jecxz
or
fsubs
rorb
add
or
daa
mov
mov
repnz
push
mov
pop
pop
mov
scas
aad
inc
stc
loopne
xchg
push
and
xchg
inc
jo
ret
aad
push
lret
stos
lods
mov
fs
aaa
jg
bound
test
cwtl
push
ja
dec
xchg
popa
cltd
jo
out
xchg
inc
lock
and
push
pop
push
push
fucom
pop
mov
sub
or
ficoms
shrl
jmp
in
add
add
sbb
fnsetpm(287
pop
push
arpl
fildll
adc
add
adc
push
jb
jmp
push
lcall
cmp
popf
jo
cwtl
scas
mov
jp
push
dec
out
inc
lea
push
xchg
mov
lds
in
lahf
inc
mov
arpl
gs
mov
sub
mov
dec
jmp
cs
test
pop
testl
add
shlb
fists
jo
push
sub
out
inc
icebp
movsb
add
icebp
lahf
daa
jo
jbe
subl
test
cltd
pop
and
cmpsl
jge
adc
xlat
jle
rclb
aaa
or
mov
out
and
adc
adc
and
pop
jp
out
sub
iret
into
fistl
sub
push
lods
pop
sbb
ja
sub
sub
lcall
jmp
jnp
cmp
gs
or
dec
sub
stc
imul
cmp
out
call
sub
xor
ljmp
divb
ud0
and
es
push
ret
dec
rcll
push
in
scas
pop
faddl
adc
out
sarl
jl
daa
push
rcrb
jbe
sub
sbb
mov
jg
mov
pop
scas
lret
jae
xor
jnp
pop
sbb
mov
std
stc
xor
cmp
repz
mov
scas
jge
push
jmp
push
call
nop
xor
dec
test
xchg
outsl
mov
arpl
and
push
jae
cmc
cmp
icebp
int
sub
and
sbb
das
sbb
mov
lret
inc
popf
mov
lcall
adc
repnz
cld
addl
aaa
push
das
mov
mov
fsubs
in
rcl
pusha
inc
xchg
mov
iret
stos
out
push
dec
push
cmp
mov
push
jbe
adc
inc
inc
pop
or
mov
xchg
cmp
out
loope
xor
push
call
out
ret
mov
mov
pop
add
lods
addl
and
mov
ret
stc
fidivrs
fs
jne
xchg
outsl
lock
sbb
fdivr
loope
xchg
push
into
inc
push
jb
popa
jne
cmp
xchg
js
mov
pop
test
sbb
mov
cmc
sbb
sarb
aam
inc
add
or
dec
int3
mov
sub
addr16
inc
ja
das
movsb
cltd
fcomps
enter
sub
scas
movl
iret
lds
pop
and
mov
jg
xchg
mov
nop
mov
stos
je
test
loopne
cmp
out
mov
jnp
test
stos
inc
fwait
ljmp
or
out
test
rcrb
sbb
jbe
adc
lret
fadds
arpl
loope
mov
cmp
repz
xchg
fistpll
test
push
mov
sti
jle
fsubrs
movsb
and
lods
cmc
mov
popa
stos
enter
mov
mov
pop
lods
out
mov
outsb
jo
adc
pop
xrelease
lcall
in
push
sbb
dec
pop
mov
nop
dec
fldl
jnp
insb
sub
mov
movsl
mov
jb
push
jle
iret
cmp
mov
loopne
in
jmp
rol
fnstcw
notb
test
ret
roll
out
mov
rolb
outsl
push
push
insl
int3
add
mov
scas
mov
or
adc
pop
push
aas
daa
jbe
nop
jne
mov
push
int
xchg
add
mov
inc
nop
aaa
enter
push
sbb
outsb
and
mov
int3
xor
test
cld
imul
adc
stos
jnp
repnz
or
push
jp
dec
xor
xchg
jmp
movsl
push
test
sbb
mov
sbb
and
jg
daa
leave
call
push
sub
xor
daa
xchg
pop
jnp
nop
jo
xchg
mov
pusha
cwtl
mov
cld
push
inc
shr
push
outsl
inc
pusha
out
cmpl
push
shlb
into
sti
xor
popa
outsb
das
out
jno
imul
xor
cmp
or
test
outsl
sbb
bnd
mov
roll
mov
ret
mov
ror
fwait
mov
pop
inc
cli
nop
mov
add
jbe
clc
in
push
sbb
sbb
push
push
or
insb
int
repnz
jb
mov
test
inc
lahf
out
test
jne
lcall
dec
mov
notb
sub
push
dec
ds
sub
dec
std
loopne
cli
arpl
imul
stos
fcomps
in
push
pop
daa
mov
jge
mov
fsin
fnsave
bound
cmp
dec
mov
push
fs
fistpl
jmp
xor
add
sub
das
sub
add
out
aam
mov
mov
add
bsr
movsb
fildl
mov
xor
ds
xor
cmp
sbb
jl
ss
mov
fistpll
and
adc
lea
test
adc
xor
push
cmp
test
in
pop
inc
jns
unpcklps
add
dec
lret
add
test
rcll
notl
jbe
mov
lret
push
test
aaa
pop
stos
dec
loop
dec
fistpll
push
adc
mov
pusha
mov
jecxz
mov
cmpsl
xor
fidivrl
sub
xor
mov
subl
sub
sub
add
test
add
sbb
cmp
and
cmpsl
mov
jns
pop
in
ret
shrb
outsl
pushf
xchg
popf
lret
test
insb
ret
push
out
imul
dec
in
inc
jne
insb
iret
mov
lods
ja
int
jl
push
mul
shrl
jb
neg
mov
out
xor
cmpsl
mov
lret
xor
lret
cmp
dec
int3
jl
pop
mov
mov
les
fwait
sahf
xor
mov
aas
popa
jno
pusha
push
popf
xchg
sbb
mov
add
fs
sub
movsl
sub
mov
aas
pop
push
pop
cld
adc
add
push
jns
out
sub
sub
frstor
in
fldt
cmp
popf
jo
stos
sbbl
pop
aad
insl
aad
sub
add
cmpsl
adcl
ds
mov
jb
push
mov
aad
popf
shl
divl
insb
dec
or
push
test
loope
in
ds
xor
and
cmp
dec
push
add
or
data16
adc
sbb
lds
negb
pusha
inc
push
adcb
lods
push
dec
ss
sub
add
adc
loope
insb
cmp
inc
mov
clc
fs
inc
jne
xchg
iret
fstps
push
cmp
lea
push
and
popa
push
orb
repnz
dec
test
jae
pop
or
test
pop
mov
lods
mul
mov
lahf
daa
push
out
jmp
sbbl
mov
cltd
lods
sbb
lock
aam
mov
jnp
cmp
pop
add
xchg
mov
fstps
jl
dec
jno
mov
leave
cli
jno
inc
push
jp
xchg
bound
pop
insb
jae
ret
inc
lret
idivb
out
xchg
das
bound
mov
mov
in
nop
push
dec
gs
cwtl
shrb
ret
and
aad
ret
mov
push
stos
subl
and
and
ss
cli
lods
vpcomud
lahf
cwtl
pop
call
and
sbb
decb
loop
push
out
scas
data16
jnp
pop
adc
lahf
setle
inc
int3
sub
and
adc
xchg
cmp
ja
aam
popf
lods
iret
das
jp
cltd
inc
push
add
sbb
xchg
aad
pop
jno
mov
xchg
outsb
call
mov
lahf
xor
frstor
push
lret
icebp
test
arpl
push
add
xchg
mov
insl
es
xchg
mov
cmpsl
out
test
xchg
in
push
xchg
sbb
scas
rclb
gs
cmp
or
pop
sub
jecxz
call
sub
movzbl
mov
xor
cmp
inc
popa
js
mulb
nop
and
sub
stos
ljmp
sub
jns
repz
sbb
and
popf
lcall
xchg
sub
cmp
push
in
cmp
jno
std
mov
push
lods
mov
les
sbb
test
add
ret
cli
inc
xchg
lds
sbb
stc
adcb
sbb
or
cmpsb
push
add
pop
test
push
inc
lcall
fnstsw
mov
mov
or
out
adc
add
sub
xor
push
ss
pop
mov
and
popa
loope
sub
movsb
lds
fidivrl
cmpsl
lcall
pop
movsb
cmp
xchg
adc
fwait
fiaddl
push
vpmacsdql
lahf
xchg
or
das
sbb
sti
mov
ficoml
inc
and
fisubs
xchg
push
or
repnz
not
lahf
and
add
outsb
and
cltd
mov
lcall
xchg
enter
enter
inc
or
arpl
xor
mov
mov
into
xor
lock
cld
ss
inc
stos
mov
nop
push
addr16
fcompl
mov
push
sbb
lcall
ja
punpcklwd
test
cmp
jle
adc
dec
test
push
insl
and
clc
rol
fstpt
mov
mov
xor
aad
inc
xchg
sti
imul
push
cmp
mov
stos
stos
pop
dec
xchg
push
xorl
or
and
xchg
fcmovu
data16
loope
repz
sahf
fs
and
mov
scas
cmp
jl
gs
lret
fists
inc
pop
jge
pop
cmp
and
or
pop
sbb
out
sub
mov
push
mov
lcall
in
and
fisttpll
test
jmp
pop
or
cld
bound
pop
xor
dec
cmpsl
push
push
cmp
xor
and
mov
jne
sbb
ja
pop
jl
fwait
lods
sub
jo
stos
pushf
stos
inc
mov
push
push
push
add
jmp
imul
push
dec
mov
cli
mov
sbb
sub
xchg
out
or
inc
mov
mov
add
add
jno
lods
or
adc
ja
mov
adc
popf
pushf
out
inc
loopne
int
mov
out
fld
pop
ret
ret
arpl
inc
xchg
call
push
jo
cld
jnp
adc
test
adc
cli
cli
cltd
dec
mov
mov
and
popa
stc
add
jno
push
loop
lcall
mov
sbb
pusha
push
arpl
pop
cmp
mov
fucom
mov
jns
push
hlt
cmp
dec
jo
push
sub
lret
repz
xor
fildl
lock
sarb
jnp
cwtl
push
cltd
mov
adcb
jae
mov
mov
jl
aaa
or
push
xchg
ret
dec
xchg
cmp
mov
cmc
sub
lods
fimuls
dec
xchg
scas
ja
popa
cs
mov
cwtl
mov
add
mov
or
lock
and
mov
fistl
sbb
test
mov
and
adc
enter
mov
sub
loope
scas
or
pop
push
aaa
push
push
arpl
sbb
in
je
inc
jmp
lock
push
out
mov
ret
hlt
and
mov
dec
test
xchg
add
test
add
jle
leave
mov
lea
mov
xchg
shl
or
jmp
hlt
in
das
rcll
pop
pop
push
divl
sti
adc
mov
mov
pusha
push
clc
push
out
adc
cwtl
inc
mov
pop
and
mov
adc
je
je
jg
xchg
bound
mov
out
leave
cmp
outsb
test
daa
xchg
popf
js
add
xor
dec
jmp
push
fisubl
cmpsb
inc
outsl
inc
fiadds
mov
adc
fsubr
pop
mov
repnz
xor
cmp
insb
mov
ja
and
mov
xor
add
sub
jmp
add
jb
or
sub
bound
lods
arpl
mov
dec
sub
outsl
repz
sub
cltd
in
inc
mov
and
jns
je
data16
sbbb
lea
ja
shrl
mov
mov
icebp
mov
cmp
dec
rcll
loopne
and
arpl
mov
scas
ljmp
mov
mov
std
inc
js
into
add
std
sbb
mov
bound
mov
aad
lcall
cmp
das
scas
stos
and
xor
stc
in
test
fcoms
pop
imul
xchg
inc
divl
into
sbb
mov
sbb
push
xchg
repz
inc
hlt
pushf
aas
cmp
sarl
dec
shlb
aam
mov
pop
inc
pop
fimuls
inc
xchg
push
sahf
pop
loopne
xchg
cmp
popf
test
push
fs
and
mov
jno
inc
pinsrw
xor
fld
test
add
or
outsb
pushf
cmp
push
jns
outsb
pop
sahf
movsl
out
pop
sub
scas
gs
sbb
xor
adc
adc
mov
jb
inc
sbb
push
ds
xor
mov
dec
inc
pop
push
lret
subps
test
dec
sbb
jbe
loop
xor
mulb
ret
fldt
mov
lods
lret
pop
cmpsb
into
push
mov
dec
xor
iret
dec
pop
fs
aaa
mov
jns
fwait
xchg
inc
mov
outsb
jmp
xchg
cld
mov
in
ja
xor
sti
jnp
std
movsl
and
dec
ss
pop
sub
pop
push
sbb
outsb
mov
loope
popf
push
sbb
mov
repnz
pusha
cmpl
pop
mov
fnstsw
test
mov
js
std
push
orl
cmp
adc
sbb
mov
aaa
mov
jg
std
sti
aad
cmc
notb
push
in
mov
xchg
inc
push
faddl
mov
mov
cwtl
les
jno
cmp
fsubl
sti
fidivs
outsb
jo
push
shrl
out
xchg
xor
in
lock
cmpsl
dec
pop
dec
int
sub
or
push
sub
and
push
push
push
aaa
fdivs
jl
or
cmp
test
mov
pop
sahf
aam
mov
mov
lcall
and
pushf
xlat
and
data16
xor
flds
loopne
hlt
inc
movsl
xorb
aas
std
and
push
mov
sbb
jb
sub
les
inc
xchg
fstpt
push
sti
and
icebp
mov
or
icebp
push
fmull
fcmovnbe
ss
xor
sti
mov
orl
push
sti
pop
into
es
scas
push
mov
fs
scas
jp
es
pop
jg
add
ljmp
fists
popfw
xor
stos
jmp
add
jg
punpckhdq
mov
xor
and
repz
or
sbb
sub
decl
jb
xchg
mov
add
decl
adc
popf
cmc
fwait
xor
jle
stos
dec
push
loope
ds
fwait
js
sub
aas
add
push
dec
dec
sub
fiaddl
lret
scas
je
mov
pop
imul
popf
sub
insl
add
or
jmp
data16
adcl
pop
or
sbbb
sbb
arpl
sub
jo
xchg
xchg
add
daa
jmp
jno
cmp
sti
add
adc
out
mov
aam
cld
cmp
lods
jmp
lds
fwait
or
sub
mov
xchg
icebp
pop
lret
mov
jo
cmp
and
lahf
fmull
jbe
or
add
xchg
lods
sub
and
sub
daa
not
mov
jge
outsl
outsl
or
lret
fwait
mov
xchg
or
cs
and
scas
and
jno
and
mov
push
inc
lret
enter
mov
xchg
iret
test
mov
out
mov
lds
push
sbb
stos
lods
or
scas
mov
es
jae
xor
push
dec
test
dec
out
incb
mov
pop
in
fcmovu
push
pop
mov
lahf
movsb
mov
sub
mov
stos
into
xchg
lods
mov
pop
add
js
jne
pop
xor
ret
push
stos
fsubrl
inc
ljmp
popf
add
lock
push
fwait
test
int3
jne
in
fwait
and
sub
mov
mov
sub
jmp
repz
dec
sbb
mov
or
sub
sub
popa
cmp
cmp
xchg
inc
jbe
stc
or
or
mov
xlat
lods
jp
mov
cmp
pop
mov
add
adc
outsb
cmp
jo
add
sub
fistpl
jo
cmp
outsb
mov
push
ret
jle
xorb
leave
pop
repz
imul
mov
movsb
inc
neg
pop
or
das
pop
cmc
or
or
mov
cmp
dec
decl
mov
pop
stos
cmp
cmp
mov
sub
sbb
shr
push
shlb
ds
cld
jnp
out
ja
inc
pop
or
mov
fdivr
aaa
xlat
xchg
pop
cs
jle
gs
lock
dec
loopne
xchg
jecxz
xor
ficoms
fiadds
imul
push
inc
cmpsb
pushl
sub
push
dec
push
mov
in
stc
mov
enter
sub
inc
add
stos
dec
adc
aam
ja
jg
or
cmc
cwtl
jbe
mov
adc
xchg
push
hlt
pop
icebp
mov
scas
and
add
pop
loop
xchg
out
fiadds
adc
data16
jne
mov
fnstsw
jp
nop
rorl
lret
lret
mov
pushf
adc
cli
movsb
aam
adc
add
lcall
mov
xlat
xor
mov
repnz
cmp
scas
div
cmp
xlat
jb
ss
fidivrl
sti
sbb
insl
pop
daa
dec
sbb
pop
add
jbe
inc
xchg
cld
fdiv
out
nop
rol
jno
mov
xchg
xor
xchg
xchg
pop
push
jno
or
daa
loop
mov
ror
jo
dec
pop
test
adc
push
repnz
cmp
hlt
stc
mov
and
jmp
and
out
and
push
or
jecxz
mov
and
mov
mov
lods
cwtl
js
clc
jl
shl
rcrl
out
pop
mov
xchg
jl
dec
dec
xor
sbb
mov
pop
mov
inc
xchg
rcrl
mov
aaa
or
iret
nop
inc
or
push
xor
push
rclb
xchg
mov
popa
xor
lret
in
test
cmp
ljmp
mov
or
imul
inc
test
lods
cwtl
and
loop
adc
mov
subb
jns
repnz
ret
cmp
ficoms
out
pop
mov
mov
jbe
loop
std
push
in
xor
add
and
ds
enter
dec
sbb
shll
call
add
gs
cli
jp
mov
out
sub
xchg
xor
fs
or
add
outsl
fldenv
mov
fstpl
mov
ljmp
addr16
adc
loopne
pop
ret
mov
out
jne
mov
mov
fnstenv
sub
sti
cmp
push
jo
and
int
jecxz,pn
mov
bound
lahf
ss
xor
cwtl
add
imul
dec
pusha
lods
cmp
jge
cltd
sti
les
sbbl
sbb
outsl
cwtl
out
dec
pop
fadds
int3
lret
cmpsl
push
aam
cmp
pop
xchg
test
xchg
and
incl
aaa
mov
add
gs
mov
out
fst
leave
stos
sbb
cli
add
test
and
shlb
xchg
inc
testl
lock
push
pushl
call
jne
pop
jo
mov
rol
dec
inc
sbb
push
mov
scas
dec
dec
fdivs
mov
fistps
pop
dec
icebp
sub
or
repz
lea
call
pop
fxch
ljmp
adc
pop
js
sbb
sub
stos
pop
lcall
fiadds
xchg
enter
dec
test
mov
jnp
scas
add
cmp
ret
jne
jne
pusha
inc
jg
push
xchg
add
mov
fwait
mov
xor
jb
add
stos
andl
jg
add
test
andl
sub
adc
jp
push
xchg
cwtl
int
sbb
cmp
dec
cmc
push
cmp
cmc
lods
mov
rclb
loopne
cmp
pop
sub
jne
int
mov
xor
in
dec
push
add
mov
stc
jnp
insb
push
repnz
jmp
jnp
outsl
adc
dec
xchg
xchg
in
sbb
cmp
stc
sub
cmp
jne
lea
sahf
xor
sti
aam
push
push
pop
popf
pop
pushf
out
add
sub
mov
fbstp
push
add
pop
lcall
outsb
pop
adc
ja
mov
rep
sbb
jge
lds
dec
sub
xchg
pusha
jl
loope
inc
fstpt
push
bound
cmpsl
inc
mov
icebp
movl
xchg
xorb
out
out
dec
hlt
out
xor
sarb
int
xor
lds
mov
aas
push
sahf
push
mov
xchg
jp
pop
mov
mov
xor
mov
lock
and
xor
js
aad
clc
icebp
je
les
jecxz
xor
out
cs
push
cmpsb
test
pushw
push
cmc
js
dec
jb
fidivl
movsl
and
shlb
lds
cmp
push
pop
je
cmpsl
aam
lret
shll
mov
mov
mov
and
and
push
jecxz
xchg
sub
loope
cmp
jecxz
mov
sbb
andl
sub
jno
test
cld
gs
pop
mov
inc
fbld
push
jae
jbe
out
inc
xchg
cltd
mov
addr16
pop
cmp
xchg
fisubl
arpl
xchg
mov
sbb
pop
clc
dec
push
add
push
outsb
fcompl
cmp
mov
jns
aaa
and
mov
xor
les
push
outsl
jno
inc
sub
sbb
sbb
out
and
mov
xchg
pop
imul
add
fsubr
push
and
stos
not
xchg
rcrl
add
fstpl
jnp
cwtl
adc
xor
xor
add
jns
clc
fidivrl
test
push
shrl
xor
stos
jns
int
in
and
and
adc
or
fdivr
inc
jl
xchg
push
push
inc
sbb
loope
xor
jmp
xchg
sbb
jne
dec
or
dec
or
hlt
or
subl
lret
dec
fisttpll
sub
movsl
and
ljmp
inc
jb,pt
data16
add
stc
inc
xchg
sub
aas
out
mov
sahf
dec
in
add
sub
mov
dec
das
xchg
jle
in
lahf
shlb
push
int
xchg
cmp
lret
and
push
inc
sbb
data16
vpsrlq
ljmp
cmc
jns
insl
lds
lods
mov
movb
lods
pshufw
dec
loopne
fdivl
mov
cld
add
mov
outsb
mov
pop
sarl
fists
arpl
dec
xchg
fistpl
sbb
insl
cmp
xchg
scas
jb
jae
and
and
xchg
xchg
insb
insb
jns
repnz
inc
aad
pop
pop
rcrl
icebp
push
lds
call
push
inc
gs
mov
cmpl
das
mov
jb
cmc
lret
xor
fdivp
jnp
xchg
dec
out
lods
out
ret
xchg
xchg
cmp
adc
push
mov
clc
push
mov
push
push
xchg
scas
int3
test
xlat
mov
mov
fstps
ret
movsl
push
or
jb
cmp
mov
sbb
xor
out
fwait
xor
cmp
mov
cmpl
xor
loope
insb
sti
imul
imul
hlt
lods
jnp
xchg
shr
out
sahf
imul
test
call
and
add
clc
push
outsl
xlat
and
popa
push
adc
test
xor
and
sbb
mov
mov
pop
aad
sbb
in
hlt
fmul
cmc
daa
in
rclb
loop
sub
es
pop
mov
pop
scas
mov
scas
mov
lods
inc
inc
scas
sbb
mov
and
add
cmp
call
and
sti
cmp
cmpsb
cmp
dec
mov
cwtl
dec
movsb
sbb
in
dec
popa
cmpb
mov
imul
mov
mov
jecxz
lods
or
cmpsb
mov
jmp
addl
stos
add
push
or
fildl
sarb
mov
imul
mov
mov
test
push
cli
sub
jb
jge
cmp
jne
xchg
fdivs
mov
inc
rorw
mov
or
int
mov
pop
lock
dec
lds
xchg
adc
adc
and
pusha
inc
pop
push
jae
andl
mov
add
ret
sub
mov
adc
inc
pop
sbb
jb
jne
sbb
gs
jns
les
mov
movsl
mov
clc
xchg
jle
dec
out
add
sbb
test
pop
sub
les
dec
pop
es
mov
stc
lock
dec
loope
jae
int3
insl
incl
adc
add
inc
pop
adc
fdivrs
dec
adc
pop
ss
scas
cltd
cmpsl
jg
je
inc
scas
mov
scas
ss
loop
fs
std
xor
sub
push
cmp
push
or
inc
rorl
scas
or
fistpll
or
enter
out
stos
pop
leave
icebp
xlat
add
jge
jno
in
or
cmc
ds
call
subl
xchg
pop
addr16
std
sbb
cltd
push
jae
sbb
fs
jns
mov
popa
mov
dec
xchg
cmp
pop
fdivrl
in
enter
pop
xor
mov
pop
mov
fidivrl
mov
xchg
fsubr
pop
iret
std
inc
inc
ss
push
fbld
jns
jmp
push
outsb
inc
out
out
lret
or
leave
shr
mov
push
bound
adc
shlb
test
jnp
push
push
aam
loope
xchg
cmp
mov
in
sbb
dec
shlb
jb
lods
sub
and
pushf
adc
xlat
insb
repnz
scas
shrb
pop
fcomps
cli
jp
pop
call
aas
sar
cmc
mov
push
jnp
sbb
inc
frstor
arpl
inc
dec
sbbb
mov
icebp
lret
adc
mov
dec
jns
scas
xor
inc
sahf
inc
adc
call
dec
aaa
sbb
fcmovnbe
pop
insb
mov
scas
inc
into
stos
mov
stos
mov
in
outsb
adc
sub
and
jo
mov
lock
push
sub
repnz
push
push
pop
cmp
aas
inc
rcrl
mov
cmpsl
pop
sub
les
lret
adc
cmp
dec
mov
adc
inc
add
daa
gs
jg
insb
xchg
dec
inc
je
fwait
jns
jns
sub
or
sbb
adc
inc
clc
add
inc
mov
outsb
fidivs
mov
inc
scas
xchg
mov
lcall
and
dec
add
inc
jo,pt
sbb
inc
add
iret
dec
les
cld
bound
insl
pusha
daa
mov
and
mov
rolb
dec
sar
xchg
hlt
arpl
movsb
cmpsb
xchg
mov
push
lret
jo
out
mov
xchg
aad
mov
test
fs
mov
add
inc
xchg
iret
push
cwtl
sub
xchg
or
push
mov
cmpsb
jge
sbb
cmpb
cld
fs
sub
js
test
gs
fdivl
in
sub
daa
adc
scas
nop
mov
mov
test
aam
adc
les
cmp
scas
test
xor
jbe
flds
and
mov
orb
pop
pusha
in
add
xchg
arpl
das
xchg
xchg
xchg
clc
xchg
movsl
fdivl
xor
je
mov
nop
loope
add
cwtl
cmc
hlt
pushf
ds
mov
cmp
jns,pt
lds
pop
and
scas
add
dec
sbb
loopne
cmp
push
sbb
and
ds
dec
jle
stc
stos
je
into
adc
fstpt
call
jecxz
pop
in
jl
loope
push
repz
shll
sub
jge
stos
push
and
outsb
popf
ljmp
aaa
cmp
add
mov
fsts
dec
cld
sub
inc
negb
sbb
cmp
mov
mov
aam
mov
and
xor
adc
out
jecxz
sub
pop
mov
lock
jns
push
hlt
nop
outsl
push
inc
pop
mov
pushf
sub
inc
jmp
mov
cld
pop
mov
mov
fld
xor
rcrl
xchg
mov
addr16
jg
fwait
jnp
sub
push
cld
mov
sub
adc
ja
insb
push
pop
sbb
out
dec
sbb
sbb
push
jg
mov
xor
lret
adc
ds
ret
sbb
and
dec
cmpsl
or
add
push
dec
add
movsb
neg
popf
test
data16
add
cld
mov
push
and
sarb
mov
lods
daa
jge
cmpsb
push
js
and
into
mov
mov
jmp
out
adcl
fisubl
mov
mov
pushf
and
and
sbb
arpl
ljmp
sbb
pop
add
cmp
inc
cwtl
imul
mull
cltd
and
loope
sub
push
sub
loopne
push
sub
push
insb
cmp
pusha
js
cmp
outsl
out
repz
lret
and
int
sbb
in
jnp
sahf
inc
lea
bound
push
in
mov
fisttpll
jle
cltd
fimull
mov
pop
pop
cmp
fcompl
mov
jg
mov
xchg
insb
fiaddl
popf
and
es
xor
jnp
cmp
mov
inc
xchg
add
aaa
loope
insl
push
push
icebp
inc
aad
int3
cld
inc
in
xlat
inc
cmp
pushf
pop
pop
jae
mov
adc
insl
dec
jg
aaa
cmp
mov
pop
xchg
into
call
add
mov
loopne
pop
ljmp
fstl
test
ss
pop
xor
lea
sti
in
sbb
cli
lods
mov
mov
or
mov
in
lret
in
mov
cmp
ret
inc
pop
test
movsl
les
jg
jp
mov
mov
xor
dec
insl
mov
enter
mov
inc
loopne
dec
pop
push
xchg
loop
call
push
ret
mov
or
inc
pushf
add
sub
mov
or
push
xor
mov
cmpsb
add
pop
xchg
int3
pop
dec
movsl
icebp
adc
push
aas
mov
mov
aam
jb
mov
mov
push
aaa
mov
inc
ds
jns
fistps
shl
inc
xor
inc
sbb
repz
sbb
fldl
cs
cmc
mov
je
dec
andb
inc
jge
in
jno
test
and
lahf
ror
out
cltd
xor
in
mov
imul
dec
fwait
mov
arpl
sub
into
pop
mov
aad
add
mov
sbb
cmc
dec
shr
pop
scas
dec
xchg
test
jl
fwait
pop
int3
icebp
rorb
pop
es
push
mov
sub
dec
lahf
fsubrl
insl
in
movq
dec
dec
negb
mov
in
out
jmp
cmc
int3
xor
test
sub
scas
mov
imul
xor
sbb
dec
jno
pop
and
push
add
fmull
xor
shlb
adc
sub
bound
rcll
fmull
sub
mov
adc
or
in
and
pushf
and
repz
xorl
dec
push
movsl
or
out
mov
xchg
cmc
push
xor
mov
pop
int3
shl
test
cmp
data16
jle
jmp
push
addl
cld
sbb
pop
decl
push
or
mov
pop
or
loopne
stos
setnp
mov
xor
jbe
sbb
ret
repz
xchg
xlat
xchg
fs
cmp
mov
jns
fdivrs
vhsubpd
mov
fisubl
adc
and
pop
sub
pop
js
mov
je
arpl
jne
dec
pop
lods
push
outsb
cmc
push
mov
dec
mov
es
ret
xor
jmp
test
pop
adc
lods
and
dec
cli
mov
sbbb
dec
push
xchg
add
mov
leave
fimull
dec
rol
inc
sbb
pop
cmc
lret
shl
pop
or
enter
ret
lea
fadds
mov
rcrl
mov
mov
xor
aad
rcrb
jb
in
adc
or
adc
andl
adc
scas
xchg
scas
adc
jmp
ret
mov
iret
push
sbb
pusha
sbb
ficoml
pop
aad
and
sub
pop
lcall
and
and
in
js
cmpsb
dec
mov
neg
sub
rcll
lahf
mov
cmpsb
lcall
mov
jno
push
mov
xchg
fwait
or
sub
decl
jmp
mov
test
iret
xlat
loop
std
sbb
push
fbstp
xor
cmp
cmpsb
pop
xchg
nop
add
fisubrl
aam
imul
sbb
and
jle
and
add
mov
jo
adc
les
cli
fwait
rcrl
dec
das
push
sub
inc
shr
pop
sti
popf
pop
mov
xlat
jecxz
pop
mov
xchg
jmp
pusha
dec
push
jno
pop
adc
xchg
adc
fldl
add
jns
and
call
add
or
fimuls
dec
mov
movl
mov
subb
in
popf
fnstenv
orb
fdivl
and
lds
sbb
inc
or
cmp
sahf
dec
repnz
jbe
in
test
lods
popa
or
nop
xchg
sbb
mov
lahf
jle
add
das
aaa
rcrl
lea
into
ret
hlt
cmp
fcomps
cld
loop
shrl
sub
push
mov
sub
push
lods
push
cs
xor
fbld
sub
pop
mov
ret
mov
je
sbb
jno
inc
mov
ss
arpl
dec
shrl
aaa
mov
mov
and
test
fwait
mov
adc
xor
dec
lahf
test
jl
xor
daa
add
into
cmp
scas
mov
mov
repnz
mov
pushf
cmp
out
sbb
cs
leave
stc
mov
in
sub
xchg
call
lods
xchg
stos
stc
pushf
je
dec
adc
jecxz
repz
movsb
cltd
fisttps
pop
pop
jns
bound
mov
push
and
fsubs
pop
add
mov
bound
mov
add
jnp
dec
repnz
das
cmpsl
test
push
pop
pop
call
dec
loope
pop
or
push
jmp
call
out
loop
mov
mov
xor
pop
nop
mov
push
xlat
and
test
add
sti
mov
push
fcompl
mov
and
sbb
or
xor
fcompl
loope
cmc
dec
shlb
add
stc
add
adc
mov
dec
adc
mov
icebp
hlt
mov
dec
add
or
jbe
orl
fcomi
out
cmp
cs
cmpl
add
cmp
pushf
pushf
ret
mov
lods
cli
jge
fs
adc
mov
xchg
lds
in
fisubl
idivb
pop
sub
inc
pop
lods
mov
arpl
sub
jle
pop
xchg
out
aas
and
mov
sahf
jno
sbb
mov
clc
fidivs
push
cld
call
push
xor
and
mov
mov
dec
subb
out
call
or
and
cmp
js
xchg
jo
inc
mov
not
add
pop
scas
pop
mov
push
add
push
adc
shlb
scas
cmp
or
out
push
and
sub
jo
idivb
lods
cmp
mov
xchg
add
lret
pop
pop
popa
scas
jmp
test
inc
adc
bound
addl
xchg
imul
mov
mov
rcr
scas
sarb
pop
aad
movsb
stos
mov
in
ret
pop
dec
inc
pop
sbb
cmp
int
pop
shrb
test
jae
xchg
or
lods
jl
lds
pop
jle
xchg
leave
xchg
mov
jo
out
call
testl
jmp
pop
push
dec
mov
sbb
mov
bound
loope
adc
fwait
cs
iret
outsl
push
stos
push
in
or
fidivrs
popa
dec
xor
jg
inc
in
jmp
test
xor
pop
aas
ja
mov
sbb
jp
rcrl
andb
adc
xor
xor
sub
sbb
sub
jecxz
ss
lods
fildll
mov
addl
bswap
add
je
cmp
or
dec
inc
xchg
adc
cmp
jae
sub
repnz
inc
clc
xor
jmp
enter
and
mov
int3
and
cmp
repnz
mov
dec
sbb
jmp
pop
je
cltd
mov
jge
pop
fnsave
scas
pusha
insl
popf
stos
mov
push
mov
jns
jge
mov
out
xor
andb
cmc
loop
pushf
stos
and
xchg
aad
mov
push
jle
xchg
aaa
test
loopne
stos
jp
push
stos
dec
repnz
lea
std
lea
cltd
add
notl
aas
sub
fs
mov
jle,pt
jne
xchg
add
repz
cmc
imulb
sub
je
and
cmp
add
sbb
shrl
or
add
movsb
fistps
lock
jnp
jecxz
push
xchg
idivb
fstpt
pop
sub
cmpsb
push
movsb
mov
cltd
jbe
outsl
mov
pop
xorl
sbb
mov
sub
push
icebp
daa
daa
cs
pop
outsb
adc
jnp
add
xor
push
out
es
sahf
jno
stc
push
sbb
cld
les
fidivrs
mov
out
mov
add
adc
adc
int3
cwtl
hlt
inc
loopne
and
lds
aad
pop
mov
mov
mov
lock
mov
jmp
mov
mov
dec
call
cli
je
sbb
pushf
pop
dec
scas
shr
jbe
adc
test
aas
shrl
loopne
andl
adc
jb
jp
cmp
cs
mov
jae
fnsave
sahf
pop
int3
inc
push
dec
rcr
mov
pop
push
sti
out
adc
rorb
mov
inc
push
xchg
incb
and
inc
pusha
jae
push
sub
lods
ftst
dec
mov
les
mov
add
pop
pop
push
dec
cld
xchg
push
mov
or
mov
pusha
cmpsb
and
cmc
mov
std
enter
fcompl
loopne
inc
jno
push
addr16
call
pop
out
fsubl
aaa
loop
jnp
xor
sbb
mov
adc
xor
xchg
cmp
jo
ds
mov
nop
jmp
mov
fs
jmp
ficoms
leave
jmp
xchg
inc
icebp
sar
ds
jnp
test
std
sub
bsf
push
cmpsb
out
dec
sbb
mov
sbb
test
fidivrl
adcb
movl
adc
out
adc
xor
ficoml
subl
test
leave
jns
sti
lods
push
jnp
mov
mov
jg
mov
add
int
mov
sbb
cmp
mov
mov
push
jl
mov
inc
out
xor
xor
push
pop
sub
lahf
mov
and
inc
scas
pop
arpl
xchg
ret
pushl
or
cmpsb
out
push
jo
xlat
lret
in
inc
sbb
dec
xor
and
icebp
cmpsl
rolb
jae
out
and
stc
or
xor
ficompl
subb
lds
lds
dec
mul
clc
xor
pop
xor
mov
scas
cmp
rorb
mov
cmpsb
mov
push
xlat
loop
xchg
pushf
xor
cwtl
cmp
adc
leave
pop
jge
dec
aas
leave
pop
push
add
repz
cmc
enter
jl
or
enter
inc
xchg
mulb
push
cs
cmp
sbb
push
lds
push
test
jns
rol
inc
iret
mov
ret
cmp
in
leave
cltd
mov
insl
hlt
dec
xchg
push
lds
lock
sub
ror
pop
sbbb
inc
stos
sbb
or
pop
jecxz
out
lds
cmp
cmp
out
dec
fstpt
sar
jns
sub
xor
fnstsw
jp
mov
cltd
pop
fsubl
pop
iret
xor
sub
std
jmp
fwait
xchg
sub
jmp
dec
or
sbb
pop
test
popa
int
loopne
xchg
lock
jno
mov
lds
cmpsl
test
pop
outsl
mov
je
arpl
ret
sar
lret
lock
mov
pusha
xchg
cmp
cmp
ljmp
imul
leave
sbbb
ffree
stc
mov
aam
arpl
sbb
dec
fiadds
js
inc
pop
lods
bound
pop
out
mov
pop
fstl
sub
adc
jae
xlat
and
shl
push
jbe
daa
pop
push
sbbl
enter
mov
inc
mov
add
jge
adc
test
xchg
pop
paddsw
push
jg
aaa
mov
stos
shl
pop
shlb
cmpsb
add
aaa
inc
jmp
pop
lods
mov
mov
xor
pop
sarl
push
jbe
xchg
call
movsb
dec
xor
popa
mov
cmp
in
mov
popl
pushf
or
and
out
loopw
scas
sub
push
je
sub
sub
mov
aam
loop
dec
lods
mov
add
jmp
xchg
mov
stos
in
scas
cld
push
in
std
iret
test
mov
pop
nop
jl
xor
xor
xor
bnd
and
jnp
in
mov
loop
data16
mov
xchg
sub
dec
stc
shrb
bound
rcpps
fmull
mov
add
adc
repnz
enter
pop
push
mov
inc
loope
mov
xor
repnz
stos
adc
inc
or
push
imul
dec
aaa
aam
movsl
hlt
fs
add
cli
loope
xorb
repnz
xor
cmp
pusha
sbb
sub
jge
ljmp
adc
jmp
in
mov
cmc
sbbb
xor
stos
dec
shlb
cmp
filds
jmp
or
jecxz
insl
stos
fldenv
jp
push
mov
in
nop
data16
jmp
iret
fcomps
sub
ret
xor
mov
dec
aad
loop
xor
adcb
clc
lcall
test
aam
xchg
rclb
push
mov
rclb
pop
xchg
push
dec
lea
pop
sbb
pop
or
mov
xor
test
jmp
leave
pop
mov
mov
pushf
cmp
test
and
xor
xchg
ds
mov
and
inc
mov
dec
pop
lods
dec
call
cmp
std
jge
sbb
pop
jle
mov
gs
xchg
hlt
stos
out
mov
ret
dec
lods
fiaddl
test
inc
loopne
adc
and
cmc
repz
xor
ret
nop
pop
inc
pop
jl
rcll
rorb
pop
pop
frstor
scas
and
mov
jae
push
int3
mov
and
and
int
pop
ficomps
ds
push
aaa
mov
lcall
pushf
pop
lret
movsb
xor
add
fbstp
mov
pusha
add
fs
in
sub
push
adcl
mov
dec
adc
adc
out
xor
negl
jecxz
add
scas
xchg
mov
icebp
xchg
and
jp
sub
je
cmp
add
cmp
notb
mov
ss
cmc
xor
into
sub
dec
ror
ss
xchg
jl
mov
or
adc
test
and
cmp
lcall
test
fcomi
sbb
jecxz
movsl
fadd
imul
mov
adc
loopne
lods
inc
push
pop
cmp
mov
or
mov
pop
mov
jecxz
in
into
add
movsb
arpl
test
cmp
icebp
add
repz
push
call
out
cltd
pop
js
jbe
insb
sbb
movsl
stos
cmp
xlat
cmpb
pusha
sbbb
out
mov
mov
nop
cltd
mov
mov
inc
aaa
mov
in
aas
pop
fxch
mov
rcl
aam
push
inc
pop
cmp
xor
or
pop
inc
lahf
mov
pop
push
jns
clc
out
inc
mov
add
outsb
ja
mov
xor
lret
addl
loopne
sahf
dec
jae
mov
jb
jle
push
sbb
add
pop
mov
in
popf
jmp
aas
mov
repnz
cli
mov
scas
or
dec
cltd
cwtl
sub
mov
pop
mov
pop
aam
mov
test
rcrb
pop
lret
mov
fnsave
lret
roll
orl
and
pop
mov
push
sbb
ret
pushf
cmp
and
rorl
lods
popa
mov
xchg
hlt
mov
call
lds
or
out
or
mov
inc
sahf
add
ds
ret
push
mov
in
adc
lods
xchg
jae
loopne
sub
inc
jg
xchg
cmc
cs
popf
das
adc
pop
push
notl
jnp
loop
mov
mov
in
pop
pop
sub
push
mov
jne
dec
dec
xor
lret
dec
shr
movsl
sub
sti
imulb
push
mov
pmaxub
lock
pop
int
sub
aaa
sub
cmpsl
dec
stos
aam
test
mov
jmp
ret
pop
sbb
sbb
dec
jle
shlb
test
pop
aam
sub
inc
jb
cmp
or
sbb
inc
pop
and
int
push
and
sti
cwtl
testb
inc
dec
push
pop
enter
cmp
out
imul
push
arpl
jns
push
xlat
mov
mov
stc
mov
call
mov
shrl
and
je
insb
scas
sbb
pop
xor
dec
inc
add
mov
fidivrl
dec
mov
sbb
jns
arpl
sub
and
cmp
scas
into
dec
pop
addr16
mov
cs
jecxz
push
aas
sub
push
push
adc
mov
movsl
ds
inc
pop
cmc
push
xchg
xorb
add
and
mov
imul
push
mov
sub
mov
push
pop
dec
adc
pop
jle
jecxz
xor
pop
mov
dec
push
mov
lock
aam
sub
xchg
leave
dec
and
xor
pushf
sub
mov
mov
das
push
insl
inc
ds
rcl
add
scas
call
in
lds
bound
add
adc
out
xchg
jbe
xchg
jmp
in
or
rclb
jno
push
adc
cmc
pusha
clc
enter
xchg
iret
repz
mov
arpl
lret
xorl
cli
sbb
shlb
and
ret
insb
shlb
leave
jle
xchg
push
xor
in
test
mov
xlat
jl
cmpsb
stc
fldl
and
std
aas
pushf
jae
jb
jb
fdivl
xchg
mov
arpl
lcall
mov
sbb
push
add
dec
es
es
ja
daa
js
pop
stos
call
push
adc
mov
add
pop
fcoml
mov
sbb
outsl
sbb
inc
xor
int
sbbl
ss
cmc
mov
mov
fstpt
ret
mov
test
cmc
cmpsb
aam
adc
push
xchg
adc
lahf
or
loopne
rorl
data16
ret
int3
add
or
cltd
into
test
or
aad
xchg
pusha
push
ja
adc
je
stos
adc
movsb
in
es
inc
cmp
cwtl
fldt
fdivs
scas
xor
lock
sub
mov
push
xor
jnp
xchg
cmp
jno
mov
mov
xor
mov
sbb
lock
push
push
lock
push
cmp
inc
jns
sub
daa
adc
push
andl
lock
mov
cmp
inc
clc
sbb
mov
leave
cwtl
pusha
dec
pop
cmp
pop
jge,pn
fdivr
push
xchg
inc
sub
add
xor
out
or
mov
push
or
xchg
xor
dec
mov
js
xor
shrl
rolb
sbb
fsubrs
loope
fadds
mov
and
xchg
dec
test
xchg
inc
add
sar
jl
fmul
pop
mov
ja
adc
cmp
inc
jne
addr16
arpl
jecxz
ret
mov
xchg
inc
mov
xchg
mov
lcall
inc
and
dec
in
push
int3
dec
inc
xlat
dec
dec
add
jbe
add
icebp
pop
es
imul
mov
add
xor
fistpll
andl
mov
shrl
outsl
mov
add
pop
mov
adc
sahf
cmp
je
ret
test
cmp
jge
shl
std
fwait
cmpsb
jge
inc
aam
insl
jno
jnp
jmp
add
lock
push
xlat
popf
sbb
loope
xor
shll
insb
pop
mov
out
mov
fwait
nop
dec
cli
int
adc
xor
xlat
mov
push
into
jg
mov
clc
add
sub
int
mov
pusha
and
xchg
or
loop
jne
and
icebp
cmpsl
jne
add
mov
pop
popa
pop
mov
insb
dec
std
dec
into
pop
jmp
lret
lea
jbe
adc
shrl
add
push
push
and
jmp
mov
mov
or
sub
pop
inc
cltd
cmp
mov
inc
popa
mov
stos
mov
fucomp
sub
lds
lds
mov
sub
mov
mov
inc
push
stos
fnsave
sub
xor
push
addr16
jmp
cmc
jno
and
movsb
sbb
xor
jle
cmpsb
movsb
fmuls
imull
pop
inc
xchg
jle
cwtl
jg
in
xchg
mov
mov
stc
lds
fcmovb
addr16
imul
jnp
push
xchg
mov
push
repnz
cld
inc
mov
push
xor
sti
repnz
stos
ficoml
hlt
jmp
dec
stos
mov
pop
xchg
fcom
fsubrl
dec
cmpl
in
jne
cld
xor
pop
mov
push
and
jge
xor
mov
andb
dec
movsl
xchg
shlb
inc
in
push
outsl
jnp
sti
sti
jmp
scas
adc
sub
cld
ja
inc
dec
xor
aaa
xlat
fnsave
mov
test
cmp
bound
pop
testb
add
or
push
pushf
and
mov
arpl
dec
cmpsl
es
sub
les
rol
cmp
mov
xor
push
insl
lcall
xchg
sub
jb
add
jge
insb
cmp
xchg
lock
and
jb
mov
ret
out
mov
les
call
sbb
outsl
mov
out
ja
in
mov
js
xchg
call
test
add
aad
xchg
scas
mov
lods
xor
pop
fbld
cmc
dec
dec
add
out
stos
sub
xchg
lock
sti
inc
add
cli
pop
test
popf
sub
sbb
xchg
adc
mov
push
loopne
adc
cmp
stc
loopne
cmp
sub
into
pop
jb
push
sahf
popa
in
mov
jg
movsl
sbb
xor
sub
cld
sub
sbb
sbb
adc
les
int3
inc
sbb
jno
dec
lahf
fcomps
movsb
jle
push
stos
jmp
add
push
jne
jl
data16
dec
pushf
or
imul
and
je
pop
inc
and
jecxz
outsb
dec
js
fs
or
xchg
in
xor
push
jl
je
aad
push
or
loopne
leave
inc
sub
leave
lret
mov
push
nop
push
or
lret
pop
jp
nop
mov
in
outsl
cmpl
xchg
maxps
cli
mov
pop
and
data16
or
jmp
js
or
cld
sbb
mov
inc
cli
flds
mov
jb
and
mov
xchg
cmp
or
jae
add
xor
mov
dec
push
hlt
ljmp
in
xchg
imul
movsb
jne
push
cmp
ss
xchg
adc
xlat
iret
adc
lcall
dec
idivb
fwait
mov
dec
ja
cmpsb
in
les
stos
pop
aaa
rcrb
mov
xchg
or
je
in
dec
popa
jle
sub
push
cld
stos
cmp
loop
test
stos
and
ss
popf
aas
aad
aad
test
les
stos
mov
pop
push
xor
or
imul
out
sahf
dec
mov
mov
shll
sbb
cld
push
mov
jp
pop
and
xor
sub
dec
pop
jle
rorl
ret
xor
or
push
mov
mov
xchg
and
push
mov
mov
jp
or
and
jmp
pop
push
lret
mov
mov
fmuls
or
imul
jb
xlat
cwtl
lret
ffreep
xor
dec
fldz
enter
sahf
adc
adc
xchg
ret
xchg
and
and
push
pop
inc
cwtl
stos
push
outsb
dec
or
hlt
add
dec
ret
inc
mov
aas
repnz
arpl
lods
out
or
or
push
sbb
pop
aas
mov
push
pop
adc
out
adc
arpl
imul
sahf
jp
or
cli
fistpll
xchg
add
mov
pop
insb
aad
mov
lahf
xor
fwait
popf
mov
loopne
jle
dec
mov
jbe
cltd
or
pop
mov
and
lods
fld
sbb
push
lahf
fsts
lret
xchg
xchg
mov
xchg
mov
ret
fwait
cmc
xor
sbb
jmp
in
std
cmp
fisubrl
shlb
into
inc
mov
lds
sub
loopne
inc
cmp
nop
xor
xchg
xchg
dec
addr16
test
mov
mov
mov
js,pn
fnstsw
adc
jecxz
add
fldl
pop
dec
jle
cmc
mov
push
cld
jge
scas
repz
clc
sbbb
aaa
stc
mov
aad
inc
out
inc
int3
loope
ljmp
and
dec
stos
outsb
shrl
sub
mov
mov
cmc
imul
and
dec
fiadds
test
and
jns
leave
push
sbbl
mov
test
lods
movsl
mov
insb
push
sbb
xchg
outsl
cmp
rclb
loop
and
dec
sbb
mov
test
mov
xchg
stos
sti
push
mov
jns
shlb
bound
int
scas
pop
jb
lea
mov
sub
mov
cld
addl
lods
sbb
cvttps2pi
aam
enter
aaa
jp
pop
dec
inc
scas
pushf
movsl
out
sbb
cmp
pop
test
sub
fnstsw
dec
cmpsb
orl
push
push
int3
xchg
cmp
add
stc
call
xchg
mov
sahf
push
jns
jne
lea
daa
loopne
xor
mov
cmc
sarl
test
int
and
movd
cmp
out
mov
and
mov
ret
gs
inc
movsl
and
adc
in
cmp
sbb
sub
dec
cltd
scas
or
in
imul
pop
xor
orl
fimuls
mov
fdivrp
jo
ret
xchg
xor
cmp
cs
js
add
push
xor
mov
pop
push
cmp
xchg
pop
gs
mov
daa
lods
adc
and
xchg
push
and
push
daa
mov
pop
mov
addl
dec
mov
mov
mov
pushf
mov
mov
push
add
and
mov
pop
xor
lret
lahf
das
mov
add
movsl
idivb
lahf
xor
jle
sbb
mov
aas
dec
jno
pop
cmp
inc
cmp
jns
lret
ds
jbe
stos
movsb
or
inc
int
repnz
pop
mov
outsb
mov
cltd
pop
lods
imul
popf
mov
mov
popf
push
cmpsl
add
mov
mov
dec
jg
jle
mov
test
xchg
jle
pop
sub
cmp
mov
fistps
adc
pop
adc
cmpsl
jl
mov
popf
fstpl
sahf
push
dec
or
ret
dec
insl
test
sti
lahf
lds
aas
mov
test
sahf
in
mov
and
cmp
xchg
faddl
dec
inc
popf
lret
stc
dec
stos
sarb
mov
pop
test
add
jge
movsl
iret
mov
sbb
add
xlat
or
sbb
arpl
ljmp
mov
loop
fmuls
mov
xchg
fidivs
leave
lahf
inc
cmp
js
sbb
xchg
cmc
jle
push
aaa
push
and
sbb
push
out
mov
cmp
mov
xchg
int3
fcmovb
dec
inc
inc
arpl
jecxz
mov
or
imul
add
push
lock
pusha
sti
ds
xor
mov
sbb
loop
cmp
mov
dec
adc
testb
dec
dec
dec
dec
mov
and
leave
fdivl
xor
xchg
sahf
pop
xchg
mov
sub
xchg
aas
xor
inc
shl
pop
jne
fwait
add
iret
cmp
mov
xchg
ljmp
push
addr16
scas
ficoms
lret
cmpsl
mov
andl
pop
out
jbe
es
out
cld
in
jbe
jns
adc
and
test
adc
cmp
or
xchg
push
mov
pop
push
leave
loopne
pop
jae
mov
ficomps
test
inc
pop
dec
arpl
jns
mov
xchg
andl
sbb
xchg
iret
imul
dec
int
sub
or
mov
push
aaa
or
push
jl
sbb
fnsave
rorl
cmp
outsb
lret
xor
sbb
mov
adcb
xchg
mov
call
sbb
sub
std
pop
fs
pop
cmpsl
movsl
test
cli
push
pop
mov
icebp
aaa
jb
loopne
xchg
inc
xchg
frstor
add
lret
scas
sub
inc
test
loope
outsl
push
cmpsb
cmp
push
ret
jnp
rclb
dec
or
das
sub
in
out
sbb
fsubrp
mov
dec
xor
out
out
adc
add
mov
pop
xchg
inc
mov
xchg
mov
inc
inc
inc
and
je
loopne
add
inc
in
arpl
sub
dec
cli
mov
dec
lahf
mov
xor
jb
mov
jbe
sub
add
push
scas
jle
incl
loopne
ret
mov
mov
test
or
std
es
data16
int
loop
arpl
insb
mov
fistps
push
testb
jle
test
fstps
mov
mov
or
inc
xchg
js
inc
cmp
aad
adc
and
sbb
xchg
inc
push
mov
mov
mov
fildll
lret
or
or
out
dec
lcall
fcom
mov
push
jno
cwtl
mov
in
jecxz
pop
ja
cltd
jb
or
and
icebp
test
cli
mov
out
or
out
in
and
pusha
fldcw
dec
call
cwtl
xchg
or
cmp
ret
xchg
mov
pop
rorb
sub
fnstcw
pusha
loop
cwtl
cwtl
fistpll
dec
pop
iret
sub
pushf
stos
loope
mov
lds
movsb
cs
fwait
test
subb
das
add
push
dec
mov
push
pop
in
dec
pop
mov
sbb
cmpsl
sub
fs
div
dec
nop
cwtl
add
ss
push
cmp
cli
fmuls
or
mov
test
lods
cvttps2pi
add
ja
add
xor
repnz
test
movsb
je
loope
mov
std
ret
pop
leave
imul
sti
ret
jecxz
shll
push
add
addr16
stos
mov
cs
jne
pop
out
daa
cwtl
or
cmp
je
test
enter
sahf
test
hlt
inc
inc
sbb
sbb
lea
out
addb
mov
addr16
xlat
adc
pop
jg
outsl
aaa
dec
and
cs
mulb
dec
sbbb
mov
movhps
mov
pop
inc
push
lret
cmp
int3
jb
lds
popa
fucomi
daa
xchg
les
jle
mov
fmulp
fidivl
lds
adc
lcall
daa
add
push
mov
push
dec
mov
push
push
pop
nop
push
and
test
ja
jecxz
sub
add
mov
mov
mov
js
out
lods
shll
scas
and
pop
push
mov
test
out
subl
mov
outsb
lcall
subl
mov
cmp
mov
adc
test
xchg
dec
sbb
xor
add
mov
not
jae
arpl
cmp
je
das
sub
dec
mov
pop
sbb
mov
shr
xor
mov
int
add
ret
push
cs
jns
mov
jbe
int
jbe
push
repz
xor
mov
cmp
clc
sbb
lods
cmp
fsubrs
test
adc
out
jmp
clc
mov
push
push
aam
fstps
add
ss
mov
addb
xor
lods
adc
std
bound
fsubrl
iret
sub
in
or
adc
pusha
cmp
popa
aaa
cmp
rolb
pop
cmpsb
push
xchg
mov
or
lcall
testb
test
cwtl
dec
bound
push
xchg
pop
jne
mov
adc
xchg
xchg
das
and
cmp
dec
lea
loopne
test
lods
fstl
push
roll
popf
aam
and
jmp
xchg
lods
mov
inc
add
aas
or
xchg
lret
shll
and
add
ss
pop
mov
mov
mov
les
or
jge
xchg
and
test
add
aam
dec
pop
pusha
in
dec
mov
jb
xor
pop
push
and
popf
cmp
xchg
pop
movsl
and
aam
loopne
or
fstp
xchg
mov
pop
aad
inc
jnp
cmc
in
and
push
mov
in
clc
pop
iret
les
mov
mov
add
push
movsl
test
adc
cld
sti
xchg
repz
call
out
push
xchg
inc
in
xchg
mov
out
in
mov
fdivl
scas
out
scas
fucom
cwtl
jle
movsb
insl
mov
cmp
push
push
or
loope
addr16
jge
push
stos
test
xlat
xchg
add
push
sub
nop
xchg
pop
mov
cld
loop
ljmp
add
sbb
aad
stc
int3
xchg
sub
add
jmp
sbb
test
cmpsl
rcl
jge
jecxz
sub
je
push
xchg
subl
iret
xor
sub
or
clc
jmp
cwtl
jmp
inc
jae
iret
and
jbe
fwait
sbb
mov
pop
inc
and
mov
inc
fidivrs
and
xlat
sbb
xchg
jmp
jne
mov
sub
insl
stos
repz
mov
pop
mov
push
xor
out
xchg
sbb
out
xor
ljmp
dec
lret
test
cs
aad
xorl
sbb
sbb
sbb
mov
sbb
add
fisubrl
and
leave
mov
popf
fs
sub
mov
or
rcl
inc
clc
in
std
sbb
adc
mov
sub
adcl
push
mov
and
push
add
cld
mov
and
jne
inc
cld
or
mov
sbb
rorl
sbb
mov
lret
inc
in
cld
sbb
jb
cmpsl
push
mov
or
jge
loop
xchg
testl
inc
sub
dec
add
cld
push
jno
sbb
xor
test
je
or
add
popa
xchg
lods
js
push
mov
push
idivb
mov
jns
dec
sbb
mov
stos
cmp
fistl
mov
xor
jmp
ret
movsl
cld
loop
push
xchg
movsb
test
gs
fstps
fidivl
fcmovnb
jecxz
ss
push
cs
push
aad
pop
mov
lret
sbb
push
and
pop
stc
or
sbb
lretw
in
sub
call
dec
cmp
pushf
jecxz
push
sbb
dec
ss
roll
mov
pop
aad
repnz
jg
lret
sbb
mov
mov
lods
fsts
loopne
sahf
mov
test
int3
roll
and
outsb
pop
stos
flds
leave
add
add
pop
idivb
cmp
adc
jp
in
mov
rorl
ss
xchg
fadd
mov
dec
test
mov
arpl
in
ljmp
dec
push
daa
push
addr16
fisubs
xlat
add
xchg
clc
cmpsl
push
aam
out
and
shl
cmp
icebp
mull
and
mov
push
fisubrl
mov
mov
and
cmp
lods
cmp
addr16
jo
pop
dec
mov
fucomp
jecxz
mov
scas
and
jb
push
mov
xor
or
mov
mov
orl
lahf
fwait
outsb
repnz
or
ret
mov
bnd
pop
pop
lea
jg
les
sti
sub
mov
mov
adc
fstpl
push
jl
push
incb
cmp
dec
sar
jmp
popf
daa
cmc
inc
lret
cmpl
ja
sub
ss
imul
andb
out
in
add
fistl
mov
cmp
inc
mov
mov
adc
add
push
ds
push
jmp
cmp
test
clc
test
pushf
add
sbb
clc
cmp
adc
pop
xchg
xor
in
cmp
sbb
sbb
in
add
cld
cmp
incb
scas
js
into
ja
orl
outsl
sub
push
add
popa
lods
je
add
adc
mov
xor
or
or
and
xor
dec
fcoms
pop
cmp
cmp
fldl
cmpsb
and
push
sub
imul
mov
add
aad
xchg
adcl
pushf
test
and
lods
ficompl
or
pop
ljmp
or
mov
pop
mov
scas
or
scas
xchg
mov
sub
loope
jp
sbb
sbb
ja
pop
dec
push
ss
or
push
aas
jb
adc
fdiv
jmp
imul
daa
lahf
xorl
add
nop
mov
xchg
pop
mov
jecxz
or
xor
mov
add
xchg
sbb
mov
cmp
and
icebp
and
out
sbb
cltd
lret
les
and
out
aaa
jno
in
gs
fmul
xchg
popl
test
push
rolb
das
mov
or
adc
xor
andb
ljmp
mov
push
adc
popf
in
pop
mov
addl
mov
icebp
ret
push
ret
dec
ss
loopne
jne
mov
inc
jle
stc
cmp
jecxz
jns
inc
xor
jae
inc
mov
bound
je
push
xchg
gs
std
clc
scas
stos
mov
mov
mov
repnz
std
mov
shll
mov
jb
inc
mov
nop
push
sub
ret
cmp
mov
cmp
fbld
cmpsl
daa
sub
adc
jnp
mov
pop
mov
jecxz
addw
outsl
test
jno
je
xchg
push
mov
cmp
movsl
aaa
inc
dec
sahf
jmp
and
push
mov
pop
add
movsb
out
mov
mov
xlat
pop
jnp
int3
scas
sti
icebp
and
cmp
das
pop
inc
ss
jns
rorl
jno
scas
addb
dec
dec
pop
imul
xchg
sub
lret
in
movsl
inc
or
movsb
movsl
inc
scas
xchg
int
lods
int3
insb
call
jbe
mov
sti
xchg
gs
in
stc
xor
sbb
scas
mov
into
imul
lds
or
and
out
or
xchg
xchg
mov
add
loopne
inc
jb
sbb
repnz
cld
mov
negb
dec
repz
loop
std
call
das
cld
jnp
jge
mov
push
fs
adc
mov
lds
push
jp
movsb
loopne
aas
xor
aaa
jne
das
jnp
cmc
test
loope
scas
lea
sub
mov
cmp
inc
xchg
ss
in
sahf
and
push
mov
xchg
add
sbb
adc
aas
and
sub
aam
subl
dec
out
scas
or
or
sbb
js
sarb
sub
mov
test
fwait
xchg
add
fidivs
mov
push
or
std
mov
and
out
iret
cmp
adc
iret
nop
push
mov
or
sti
inc
sub
mov
fwait
lods
mov
jle
adc
lret
cwtl
cmp
incl
xchg
mov
pop
xchg
test
mov
popf
loopne
mov
rcrb
mov
shrb
mov
jbe
aad
add
sarl
loop
iret
xor
ljmp
int
mov
pop
cmp
xchg
mov
andps
aaa
push
add
aaa
lea
loop
loop
rclb
mov
outsl
push
dec
sbb
mov
cmp
pop
pusha
fnstcw
cmp
xchg
jbe
scas
mov
mov
and
movsl
stos
xchg
ds
inc
jecxz
sub
data16
cmpsb
ret
dec
outsl
mov
fs
mov
fwait
or
jle
out
icebp
insl
jae
sbb
push
pusha
adc
xchg
jns
lret
fisubrl
push
fwait
cmc
insb
mov
ja
repnz
test
xchg
cwtl
sub
int
lods
adc
ret
sbb
mov
frstor
fistpll
jns
jae
cs
imul
mov
cmpsb
rclb
cmp
inc
in
or
into
aam
cmp
mov
xchg
popl
into
mov
in
addr16
mov
repz
test
push
push
push
iret
addl
cmpsl
test
insb
xchg
push
mov
fstl
repnz
xchg
jo
lret
fildl
pop
in
repz
std
or
sub
cs
std
push
jg
es
mov
adc
fs
mov
lcall
sub
dec
inc
fwait
inc
mov
leave
ret
add
movsl
fldenv
cmp
cmp
or
push
repnz
out
loop
loop
hlt
pusha
fsubrs
ret
cmp
mov
iret
lea
cmp
stc
cltd
push
fisubrl
push
sti
ret
dec
jbe
push
inc
addr16
mov
stos
lock
mov
dec
cwtl
adc
sarb
fwait
sub
arpl
pushf
push
push
push
or
mov
adc
in
rep
jo
cmpsl
pop
push
sub
inc
enter
sbb
jl
repz
das
jl
loopne
cmp
fadd
mov
pop
jne
xor
sbbb
fabs
cmpsb
jbe
lds
fidivs
dec
lahf
sub
xchg
enter
jge
sbb
dec
iret
imul
lds
adcl
out
js
shrb
pop
push
mov
out
mov
inc
sbb
pop
xchg
popf
add
sbb
loop
int
sahf
xor
or
cmp
xor
and
pop
xor
icebp
mov
ljmp
inc
out
enter
in
fs
jbe
cmp
inc
xlat
xor
add
mov
icebp
ret
and
lahf
popf
adc
in
dec
cmc
xchg
dec
cli
jns
stos
or
rclb
insb
testl
and
fdivrs
repnz
arpl
enter
and
stc
repz
rorb
nop
xor
mov
adc
imul
sub
dec
outsl
fisubl
cltd
enter
sbbb
push
pop
aaa
mov
mov
fs
adc
leave
fisttpll
mov
idiv
sbb
xchg
pop
daa
bound
rcll
xlat
mov
dec
xchg
push
movsl
mov
mov
lea
inc
loopne
or
and
xor
leave
fucomip
mov
xchg
sub
xor
mov
rcrl
adc
aam
scas
js
mov
mov
fimuls
xor
mov
fisttpl
aas
mov
xchg
push
popf
ljmp
and
clc
outsb
push
sub
loop
iret
shlb
lret
adc
xchg
js
inc
loope
sub
ret
xlat
xchg
cmp
pop
jle,pt
pop
pop
cltd
mov
mov
mov
fisttpl
or
pop
iret
jl
mov
aam
outsb
jns
rcll
enter
pop
mov
jl
mov
icebp
gs
inc
test
arpl
xchg
in
push
or
fnsave
dec
cmpsb
inc
mov
push
or
xchg
add
dec
jp
jbe
mov
popf
cmp
xchg
cmc
and
xor
xor
dec
loope
cwtl
test
sti
mov
stos
push
addr16
dec
xor
loope
mov
mov
mov
in
int
aad
or
cmp
inc
repz
inc
lods
clc
sti
popa
mov
jns
test
je
sbbl
mov
mov
fidivs
test
jo
mov
movsb
mull
fwait
pushf
mov
xchg
adc
pop
out
sub
xchg
dec
popa
scas
std
or
push
pushf
mov
jp
push
ja
mov
adc
push
pop
or
jge
fcompl
jg
jnp
aaa
xchg
loopne
daa
imul
cwtl
xadd
sub
outsb
add
xchg
out
lahf
test
popf
push
imul
mov
jae
daa
fcomps
adcb
add
addl
lahf
shll
test
mov
pop
dec
subl
bound
sub
push
das
pop
mov
mov
hlt
xchg
pop
ret
push
sub
sbb
xor
js
inc
scas
repnz
jo
pop
dec
je
mov
enter
ja
roll
inc
imul
je
jbe
scas
push
xchg
lcall
and
push
lods
dec
popf
or
mov
sbb
mov
orl
adc
dec
pop
out
out
cld
jl
mov
xor
pop
or
ret
mov
and
ret
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
fbstp
pop
inc
orl
iret
lahf
insl
out
inc
pop
xchg
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
jg
mov
dec
out
dec
xchg
data16
or
add
xchg
mov
sub
loopne
fsubl
mov
xor
and
push
mov
sub
aad
or
fldcw
loop
ret
xchg
inc
pop
inc
xchg
mov
push
pop
add
mov
repnz
mov
jmp
pop
mov
imull
pop
xlat
in
leave
and
das
lds
dec
mov
pop
sbb
packuswb
add
aaa
repz
mov
lea
pop
push
mov
cltd
mov
mov
and
dec
mov
jg
mov
or
xchg
pop
add
inc
xchg
mov
add
xchg
or
inc
xchg
out
inc
out
inc
pop
inc
or
xchg
in
out
inc
pop
inc
cmp
mov
push
pop
xchg
inc
pop
push
xchg
mov
inc
cmpsb
xchg
inc
dec
inc
xchg
mov
inc
out
inc
pop
inc
orb
iret
pusha
xchg
out
inc
out
dec
pop
inc
orl
into
test
rcrb
or
inc
notl
or
inc
out
inc
pop
inc
xchg
mov
inc
mov
add
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
imul
or
push
out
inc
mov
or
push
aad
cvtps2pd
or
movsl
leave
jecxz
sub
or
inc
pop
lcall
pop
fs
out
inc
out
inc
pop
inc
xchg
mov
inc
pop
xchg
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
mov
inc
out
inc
pop
inc
xchg
shlb
xchg
rolb
inc
pop
insl
and
mov
jbe
push
xor
cld
hlt
push
xchg
xchg
lods
lock
jbe
and
inc
mov
incl
fimull
daa
mov
cltd
je
inc
sub
cmovp
ds
cmp
test
rclb
or
xor
add
imul
mov
sub
je
mov
jno
outsl
cld
dec
sbb
dec
pop
adcl
xor
add
fwait
ret
sbb
cli
stos
cli
mov
xor
mov
into
movl
aas
lret
pop
mov
sub
adc
add
aas
or
dec
dec
xchg
aad
rol
popa
pop
ja
shlb
push
or
add
xchg
mov
adc
push
push
push
popa
notb
nop
sbb
mov
jmp
fadds
jns
dec
jnp
adc
fs
les
imul
push
inc
jae,pn
shll
xchg
loope
add
push
sbb
fcmovu
out
inc
xor
stc
sub
in
sub
jns
loope
aad
hlt
push
xor
inc
cmp
cmpsb
cmp
aaa
out
mov
in
mov
aam
pop
mov
outsb
push
in
aad
dec
add
lcall
aaa
jmp
cmp
jnp
xor
loop
sbb
mov
test
ficoml
in
dec
idivl
mov
out
vmulss
push
adc
add
out
test
movsb
cmp
pop
pop
dec
jnp
adc
aad
xchg
adc
pushf
push
mov
es
or
cmp
and
push
cli
push
das
bswap
cmp
sbb
xor
int3
out
lahf
add
imul
xor
fwait
stos
lds
xchg
sub
or
inc
pop
and
mov
sti
mov
fmulp
fsubrl
pop
jae
push
pop
mov
pop
push
mov
bound
dec
add
push
lahf
add
shlb
aam
pop
dec
cld
mov
mov
cld
roll
fwait
mov
dec
div
js
imul
sbb
bnd
cmc
pusha
mov
sub
add
fcmovnb
jmp
stos
lret
fdiv
mov
push
sbb
lea
pop
pop
sahf
int
jns
pop
or
sub
and
lea
rorb
loope
shll
push
sahf
hlt
mov
sub
inc
mov
mov
inc
dec
cld
mov
imul
cwtl
fidivrs
arpl
mov
movsl
mov
push
sbbb
lds
loop
stc
sarl
adc
xor
loopne
call
outsl
in
ret
sbb
rorl
rcll
push
repnz
and
jmp
rcrb
stos
cld
ret
lahf
mov
adc
add
add
fstps
std
xor
dec
sbb
mov
scas
add
dec
cmp
leave
out
xor
or
scas
nop
lcall
ret
insl
test
sub
ss
in
test
xchg
orb
lcall
dec
rorl
js
loope
icebp
fwait
aaa
mov
icebp
dec
and
push
mov
pushf
mov
adcb
pop
adc
flds
repnz
xchg
dec
dec
xchg
outsl
mov
addr16
cs
gs
jl
sub
outsl
add
mov
orl
push
xchg
nop
scas
in
fistpll
pushf
into
add
sahf
leave
xlat
mov
jl
stos
mov
imul
insb
mov
aas
test
cs
pop
xchg
in
aas
inc
jle
mov
sahf
and
fcoms
call
xlat
fistpl
fwait
stc
lret
or
aad
push
pop
cmpsl
xchg
dec
mov
jmp
sub
or
mov
adc
sub
push
mov
scas
add
out
push
jmp
lahf
jle
mov
addr16
and
daa
lods
pop
sbb
lahf
in
fnstcw
mov
inc
mov
pop
or
lret
and
xor
test
mov
in
dec
mov
mov
stos
cmp
dec
shlb
test
stc
out
shrl
aad
push
sbb
adcb
shlb
push
lods
mov
or
cmpsl
dec
fdiv
pop
arpl
repnz
adc
sbb
loopne
pop
addr16
mov
inc
sbb
cltd
mov
rolb
dec
inc
mov
jecxz
xchg
fmull
lds
xor
xchg
movsl
cmp
out
cmc
push
sbb
inc
jo
mov
xchg
ud0
dec
adc
and
loope
loop
mov
mov
adc
cld
adc
frstor
hlt
fcompl
das
arpl
fsts
aam
dec
lret
xchg
test
xchg
adc
jmp
mov
xchg
js
push
stc
xchg
pop
lret
out
jnp
scas
cmc
xor
mov
movl
out
lcall
movsb
and
sbb
movsl
and
sub
in
in
cmp
out
sbb
mov
rcrb
add
mov
jl
and
rdmsr
jmp
mov
cmp
and
jecxz
dec
xor
pop
mov
pop
enter
push
adc
loopne
in
jne
insb
xchg
inc
push
push
mov
les
test
daa
scas
ja
inc
jecxz
lods
lahf
lods
inc
mov
mov
cmp
lds
aam
sbb
scas
leave
ficomps
dec
or
xchg
sbb
clc
fsub
cmpsw
mov
cmpsb
adc
std
loope
out
mov
lods
push
cwtl
lret
sub
out
clc
cmpsl
mov
scas
mov
movsb
xor
mov
pop
mov
cmc
test
inc
or
subb
mov
lret
xchg
ret
js
push
dec
mov
sbb
sti
imul
test
mov
mov
mov
dec
fstps
mov
lret
lret
in
xchg
sub
arpl
movsl
fists
andl
jbe
xchg
cmpsl
hlt
jae
mov
insl
rcl
dec
adc
jle
sbb
repnz
sti
or
and
push
stos
xlat
mov
leave
addr16
mov
adc
scas
inc
adc
pop
mov
imul
bswap
add
xchg
push
sbb
inc
and
movsl
fnstenv
fistl
sbb
cs
jne
inc
ljmp
xor
xchg
imul
jg
rolb
in
cmp
adc
in
stos
stos
adc
pop
pop
lock
xor
and
pop
cmc
inc
jmp
mov
lahf
pop
cmpsl
es
js
pop
lods
add
sub
xor
xchg
out
rcl
gs
jb
out
fsubr
jl
pop
pop
insl
mov
stc
inc
icebp
aas
inc
popf
ljmp
adc
ds
or
sbb
in
mov
cmp
inc
icebp
js
jbe
call
mov
cmp
and
in
or
cmpsb
lret
mov
rep
in
add
and
cli
push
jmp
addr16
ss
jg
fcmovnu
outsb
leave
xor
jl
mov
scas
into
jge
add
cli
imul
cmp
aaa
lret
rorl
push
jp
mov
popf
cmpsl
fistps
in
inc
mov
imul
inc
inc
inc
shlb
mov
mov
out
sub
mov
xchg
mov
xchg
xchg
icebp
sarb
and
movl
cmp
fs
test
fs
push
cmpsb
cld
setp
and
sbb
out
sub
bound
mov
ret
leave
xchg
test
xchg
mov
xchg
scas
add
push
stc
mov
jns
out
mulb
pushf
mov
push
and
add
and
xchg
cs
cmp
fwait
adc
jecxz
ficoml
test
enter
nop
clc
cmp
push
in
mov
xchg
ret
enter
imul
fs
and
addr16
mov
gs
or
outsb
adc
mov
lret
jb
sti
mov
cwtl
push
mov
call
lahf
loopne
cli
nop
jnp
sti
ret
xchg
repnz
iret
mov
ss
movsl
mov
rcrb
jno
dec
repz
or
dec
add
bound
rcl
xchg
lods
sarb
inc
mov
es
or
gs
js
stos
pop
jae
jo
xchg
rolb
loop
cmpsb
dec
add
fidivl
out
push
push
inc
cwtl
xchg
and
xchg
stos
lret
insl
imul
inc
popf
pop
es
mov
or
push
in
pop
and
push
mov
jg
jne
push
cld
or
mov
iret
sbb
and
mov
cmp
mov
ret
add
ds
popf
jg
mov
test
mov
jb
clc
mov
cld
test
xchg
dec
call
push
mov
push
jge
dec
sbb
and
pushf
pop
lcall
cmp
inc
lahf
imull
adc
fists
sub
subb
lods
sbb
xchg
testb
or
xlat
in
jl
adc
sub
jnp
push
cmp
fmuls
push
cltd
inc
je
imul
sahf
or
outsb
add
push
inc
imul
aad
jb
add
int
dec
xchg
cmpsl
pop
pop
popa
pop
ds
jne
clc
fdivp
aam
mov
dec
xchg
or
arpl
repnz
fnstenv
sub
cwtl
sub
cmpsb
jne
aaa
push
push
mov
mov
jne
push
insl
cmpsl
fiadds
sbb
adc
pop
push
and
and
fs
inc
dec
es
adc
aad
bound
xor
dec
mov
data16
movsl
jl
fstpt
enter
flds
jl
xor
mov
fldenv
mov
repnz
lret
xchg
xchg
inc
sbb
aas
aam
clc
aas
dec
rolb
adc
call
cmpsb
movsb
cltd
mov
add
lds
adc
xor
pop
dec
scas
cmc
out
and
call
mov
mov
roll
xchg
mov
adc
jnp
leave
iret
lret
outsb
stos
xchg
mov
std
jbe
push
cli
lret
and
cmp
xor
stos
test
mov
and
std
subl
les
hlt
subb
mov
enter
push
inc
imul
repz
fs
push
loope
sub
pop
pop
pop
cmp
xor
adc
sub
repz
out
cltd
adc
aaa
ja
lret
dec
add
xor
fcomip
in
jge
ds
jecxz,pt
xchg
out
sbb
pop
call
jns
iret
cmpsb
aaa
xchg
je
stos
and
xchg
sub
in
daa
push
js
xchg
xor
add
int
pushf
sub
jns
jo
mov
xor
pop
stc
pushw
adc
fcompl
xlat
dec
out
mov
and
push
dec
arpl
or
faddp
ja
jmp
xlat
dec
call
xor
out
jle
dec
fsubl
sub
inc
xchg
je
int
cmp
aam
pop
orl
push
sbb
faddl
dec
in
pop
xchg
insb
pushf
addr16
push
mov
lret
inc
out
ja
mov
sti
bnd
outsb
stc
jle
mov
movsb
sbb
loope
out
imul
int
pop
insl
icebp
out
mov
and
dec
ror
lods
sbb
cmp
into
ret
mov
lret
stos
dec
insl
scas
cwtl
add
xlat
adc
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
