fbstp
mov
jp
fldl
out
pop
dec
jmp
popa
adc
or
insb
mov
mov
loope
xor
dec
pop
ja
lods
scas
sbb
xor
shrl
mov
andb
pop
xchg
mov
icebp
aad
xchg
add
jbe
push
sarb
mov
pop
leave
mov
sub
jbe
adc
in
push
in
stc
movsl
cmp
jmp
repnz
jecxz
push
cmp
sub
mov
repz
inc
ret
sub
mov
inc
test
xchg
pop
popf
mov
jno
mov
test
mov
mov
iret
adc
lcall
fs
fldl
adc
aam
mov
clc
dec
push
imul
jg
dec
out
aam
cmp
cmp
mov
push
jle
mov
fisubrl
pop
lods
scas
push
jmp
sbb
stos
mov
enter
pop
data16
xchg
sbb
out
int3
sahf
daa
add
add
inc
pop
cmp
mov
test
jmp
lret
sub
ss
push
setge
out
inc
sub
sub
rcrb
inc
mov
mov
ret
in
cltd
loopne
mov
pop
sbb
mov
inc
je
clc
loop
fisttpl
jns
mov
das
out
pop
mov
fldcw
dec
xor
jae
push
xor
cmp
in
out
cli
mov
or
lock
push
int
xor
jge
and
outsl
insb
in
mov
xchg
test
sbb
mov
push
xlat
dec
mov
mov
cmp
push
push
jo
adc
in
pop
test
in
and
popa
loop
or
mov
sub
pop
sub
sbb
ror
scas
jo
or
fldt
cs
mov
jle
and
out
push
mov
lcall
loop
das
pusha
mov
xchg
loop
dec
dec
sahf
push
mov
inc
clc
mov
ja
enter
loopne
out
cmc
cmpb
test
mov
pop
xor
cltd
outsl
pop
incb
sbb
inc
mov
mov
push
arpl
iret
dec
nop
push
stos
das
mov
mov
scas
mov
in
iret
loopne
mov
cmp
or
mov
mov
in
adc
hlt
add
fimull
in
neg
fwait
add
mov
lock
cmp
std
pop
les
dec
mov
jne
inc
ficomps
dec
dec
mov
cmp
jmp
testl
pop
or
mov
movsb
repz
int3
addr16
mov
fnsave
sub
leave
cwtl
in
andl
cwtl
jo
and
sub
pusha
scas
push
in
test
movsb
andl
rol
rclb
movsb
or
dec
fstp
or
loopne
lds
insl
and
insb
push
and
inc
sbb
mov
int
je
out
xor
jbe,pt
push
movsb
out
cmp
mov
or
pop
test
jp
dec
cmpsb
jbe
xor
outsl
in
sbb
lcall
repnz
and
cmp
idivb
pop
cmpsl
xor
jnp
arpl
scas
push
mov
test
roll
mov
xor
cld
mov
out
jle
lret
jl
js
ret
push
sti
ss
pop
pop
xchg
and
push
sete
push
and
sbb
stos
shr
jb
mov
out
ja
xchg
lods
loop
gs
sbb
dec
xchg
mov
jg
pop
test
inc
ficoms
adc
pop
ja
out
out
sbb
or
nop
mov
repnz
pop
rolb
in
pusha
xor
ss
dec
or
cmp
rcrl
and
sahf
push
sahf
mov
adc
loopne
add
movsl
mov
push
xchg
sbb
adc
cld
mov
pop
push
lds
jecxz
and
test
jle
andl
aaa
sub
push
mov
or
push
lods
dec
sub
dec
cmp
nop
mov
incl
pop
jmp
adc
popl
popf
out
daa
and
mov
mov
repnz
mov
add
hlt
inc
stos
inc
sbb
test
imul
jnp
fistps
push
leave
stos
mov
inc
test
push
xchg
ror
mov
push
mov
dec
lods
inc
sub
int3
movsb
icebp
jp
dec
cmp
pop
aas
cmp
or
push
movsl
push
fisttps
das
inc
imul
xchg
jge
aaa
add
mov
xchg
push
push
mov
push
cld
rcl
jecxz
sahf
and
inc
loop
gs
movsb
and
addr16
sti
repnz
cmpb
jecxz
cmc
aam
add
sbb
mov
push
pop
outsl
popa
or
pushl
sub
fwait
jbe
iret
xchg
insl
repnz
pop
mov
mov
rolb
sub
mov
sbb
and
int
mov
popf
or
add
or
outsb
es
outsl
movsb
mov
inc
inc
sbb
pop
xchg
hlt
xchg
stos
ret
or
xchg
adcb
je
and
fdivrs
jo
movsl
into
pusha
jno
xchg
in
sub
push
data16
mov
pop
sbb
jae
push
lcall
jg
lret
mov
in
dec
mov
mull
mov
movsb
xor
aaa
sbbb
loopne
pop
mov
push
jo
xchg
xchg
mov
test
push
xchg
dec
pop
ljmp
add
sbb
rorb
adc
xor
stos
imul
add
jmp
push
jbe
sti
sbb
mov
lcall
push
mov
out
adc
mov
inc
call
xchg
sbb
stos
lods
and
in
ret
xor
das
popf
and
aaa
and
or
lock
mov
js
xor
stc
js
mov
jle
adc
aad
es
lcall
pusha
lret
xchg
imul
mov
in
std
jnp
ds
test
mov
sahf
aam
test
outsl
xchg
xlat
xor
lods
sahf
push
xor
sbb
inc
cmp
xlat
aam
pusha
aad
test
pusha
cmp
negb
enter
mov
pop
notb
test
inc
out
test
cld
imul
fisubrs
out
insl
inc
scas
mov
push
or
push
push
xor
lcall
push
lds
ljmp
xor
dec
mov
outsl
mov
test
call
inc
adc
rcrb
sbb
iret
mov
xor
dec
jae
leave
mov
mov
lock
inc
in
insl
inc
aaa
popl
jno
iret
or
xchg
fs
jle
cmp
cmpsb
addb
xchg
mov
xor
push
xchg
pop
push
cmp
or
sub
pop
sub
xchg
push
adc
xor
orb
fists
jae
in
adcl
rorb
xchg
mull
loope
jecxz
mov
lahf
push
jo
adc
push
fadd
cltd
lcall
outsl
xchg
pop
xchg
dec
dec
sbb
cmpsb
fisttpll
xor
dec
dec
push
inc
push
sahf
lcall
std
mov
fcmovu
les
mov
cmp
repz
lcall
mov
adc
popf
test
gs
mov
out
sub
loopne
or
mov
mov
xchg
in
pop
aas
movsl
push
stc
xor
mov
and
in
fiadds
dec
and
in
test
add
jo
pop
sbb
dec
xor
iret
pop
neg
lret
les
jbe
sti
cs
arpl
xchg
lcall
cmc
lds
adc
iret
xor
mov
or
arpl
shll
sarl
and
in
add
clc
xchg
js
xchg
pop
cmc
sub
test
sbb
inc
movsl
mov
pop
xor
mov
fwait
jbe
mov
jle
push
xor
dec
mull
mov
and
jmp
fucomp
adc
clc
iret
jo
comiss
inc
stos
subb
in
les
mov
lcall
xorb
pop
mov
dec
adc
or
mov
xor
sub
out
or
push
push
sarl
es
hlt
push
sarb
cld
ss
lret
mov
lret
jecxz
in
mov
or
addl
jnp
xchg
pop
out
mov
std
imul
xorb
and
push
add
mov
and
repnz
stos
push
std
dec
dec
je
mov
imul
xchg
mov
loopne
sub
dec
pop
sub
mov
adc
jne
and
or
adc
mov
jge
outsl
jb
pop
inc
xchg
divl
add
pop
mov
pop
test
adc
add
dec
jns
call
stos
fsubrs
es
lahf
mov
lret
cmpsb
cmpsb
ljmp
jle
xlat
mul
or
mov
ficoml
sbb
jbe
mov
out
jmp
dec
dec
cmpsl
fstpl
test
aam
dec
xchg
or
fsubrs
or
imul
mov
jp
xchg
jecxz
cmp
loopne
jge
push
mov
inc
mov
sbb
push
or
sbb
into
push
mov
dec
out
int3
xor
test
movsl
cli
das
pop
cs
popl
xchg
lret
arpl
inc
aam
je
xchg
add
scas
outsb
mov
jg
rorl
outsl
inc
andl
outsb
out
xor
inc
add
mov
mov
pushl
sub
pop
or
dec
jmp
jb
mov
dec
mov
nop
xor
int
jle
mov
jae
sub
dec
mov
or
inc
xor
repz
mov
out
sub
lcall
fisubrl
mov
scas
notb
ret
add
cmpsb
inc
push
in
push
outsb
and
outsb
adc
dec
or
adc
add
out
loope
dec
mov
push
xor
xor
or
popf
test
leave
mov
and
dec
fcoms
mov
xor
cmpsl
fimuls
sub
xchg
pop
test
aaa
sarb
neg
mov
mov
cmpsb
add
or
jns
loope
lahf
inc
mov
int3
mov
cmp
jl
and
dec
jle
daa
cmpsl
inc
movsb
data16
push
jle
adc
adc
ds
adc
adc
adc
sbb
outsl
xor
sarl
addr16
out
lcall
in
add
xchg
js
push
and
fsubl
fisubrl
xor
mov
cmp
testl
in
xor
jge
cmp
dec
push
xchg
pushf
adc
loop
lret
adc
lcall
jmp
jnp
push
add
and
fmuls
sub
repz
scas
adc
or
clc
sub
add
outsl
pop
push
jle
and
mov
scas
cwtl
mov
aad
cld
test
dec
lea
inc
aaa
test
cltd
fcompl
gs
mov
ret
fbstp
data16
out
out
add
test
cltd
test
add
or
or
js
sbb
or
push
cld
cltd
daa
and
and
das
pushl
pop
adc
sub
adc
mov
lods
movsl
add
inc
icebp
adc
out
cmp
nop
in
inc
enter
or
dec
inc
mov
dec
sbb
in
and
add
or
adc
ljmp
jb
stos
pushf
lock
ljmp
data16
sub
and
mov
fdiv
push
cwtl
push
push
jae
lret
popf
call
ss
fld
adc
mov
icebp
pop
and
test
push
jnp
sbb
jns
xchg
sar
cltd
rcr
mov
loope
sbb
dec
je
adcl
mov
lcall
loope
dec
jl
xchg
add
mov
je
and
push
aam
clc
aas
aaa
out
bound
mov
andb
test
sub
push
pusha
xor
sub
ret
mov
ret
mov
pop
push
sbb
or
lds
je
xlat
xor
mov
in
mov
jnp
jmp
fstps
xchg
ret
fdivrs
adc
dec
nop
dec
loope
sub
or
dec
xchg
pop
mov
test
add
out
pop
inc
sub
mov
mov
xlat
pop
mov
shlb
xor
cs
into
mov
ja
push
pop
pop
mov
push
mov
sub
cld
cld
scas
insl
retw
out
push
and
ss
jmp
dec
dec
addb
jge
pop
push
cmpsl
push
cmp
cmpsb
mov
repz
fdivr
mov
fcmovne
dec
adc
sub
push
xor
loop
pop
push
adc
pop
push
mov
roll
dec
ss
mov
mov
dec
mov
mov
mov
inc
push
push
js
outsl
in
fstps
bound
outsl
rcrl
shr
popa
sbb
xchg
iret
jecxz
insl
sahf
sub
jo
xlat
fdivl
shlb
loope
lret
ret
jbe
push
loopne
cmp
sub
dec
imul
inc
adc
stc
sahf
cltd
jnp
xor
pop
jns
push
inc
dec
stos
jg
and
dec
push
fdivs
sahf
mov
cmp
pop
xor
adc
xor
cmp
xchg
dec
cld
mov
lea
out
xchg
mov
fisubrl
enter
sarb
lret
push
dec
mov
cmpsl
add
push
fs
and
pop
outsl
into
cmpsb
repz
shlb
loop
scas
loope
inc
dec
inc
or
popa
mov
test
movb
cwtl
sahf
mov
ret
lods
sbb
jnp
xchg
dec
pop
fildll
dec
ja
lds
push
xorl
imul
sub
bound
sbb
xchg
xorl
aad
dec
sbb
clc
mov
ja
in
pop
and
mov
xchg
cmpsb
xlat
das
adc
ljmp
fwait
ljmp
mov
mov
pop
xor
cmpsl
xor
cmpsb
xor
mov
fildll
dec
pop
sbb
sub
mov
in
cs
faddl
ficoml
push
imul
dec
mov
scas
mov
test
add
cmp
jo
push
pusha
sbb
sub
movhlps
movsb
sahf
mov
nop
js
cli
js
mov
popa
in
xchg
cld
push
lret
pop
mov
jb
pop
jno
pop
movsb
ss
insl
les
mov
push
test
and
xchg
je
out
int3
and
xor
arpl
jo
push
gs
in
jmp
arpl
mov
imul
mov
idiv
and
xchg
je
sbb
gs
inc
es
xlat
mov
xor
imul
mov
pop
aam
push
push
imul
inc
mov
mov
pop
mov
cmp
xchg
mov
icebp
in
add
clc
outsb
mov
sahf
popf
outsb
mov
mov
and
fwait
jl
hlt
sbb
cltd
cmp
dec
push
and
call
popa
outsl
mov
mov
push
lret
fwait
repz
add
mov
lods
in
daa
and
int3
xchg
dec
xchg
mov
xchg
push
mov
and
mov
jae
inc
push
cmp
push
arpl
addr16
sbb
mov
cmp
outsb
flds
mov
scas
add
lea
stos
loopne
inc
mov
ja
push
jbe
push
cld
lret
inc
mov
cmpsb
es
sarb
xor
add
sahf
adc
loop
sbb
sub
shll
cmc
mov
adc
sbbl
dec
sub
rolb
fdivl
test
and
daa
inc
shll
leave
add
out
or
cmpsl
xor
clc
mov
lret
pop
mov
cmc
mov
jo
mov
das
inc
mov
mov
xor
mov
pop
mov
or
xor
or
fs
mov
cs
mov
pop
pop
icebp
jecxz
dec
xchg
sub
or
pop
pop
and
out
mov
stos
mov
cmpsb
adc
loope
leave
cmpsb
lds
sub
mov
jo
lods
adc
std
inc
or
mov
jb
bound
push
fstp
jnp
push
pop
out
and
sub
ljmpw
mov
rclb
ret
jl
movb
jp
in
nop
sub
popa
jnp
sbb
dec
fadd
scas
lahf
cld
inc
jge
mov
jg
insb
div
xchg
sub
add
in
imul
mov
and
pop
push
lcall
fists
mov
push
test
add
dec
xchg
mov
dec
ret
push
imul
mov
int
loopne
jge
mov
ja
mov
out
xchg
subl
pop
dec
imul
mov
cltd
xchg
and
xor
push
loopne
movsl
clc
cmpsb
cmp
cmp
mov
push
adc
out
xor
mov
adc
pop
js
sub
ret
shr
and
repz
mov
jne
int3
into
mov
jmp
fisubl
lret
iret
xor
das
insl
arpl
sbb
sti
sbb
sbb
loopne
adc
inc
dec
lret
into
xor
xlat
fmuls
jne
fstps
and
rolb
jle
mov
imul
pop
push
xor
pop
jns
xor
in
ss
mov
aad
lcall
cli
sarl
mov
dec
cmpsl
pop
mov
dec
cmpsb
mov
lea
dec
ret
push
adc
mov
clc
inc
xchg
push
mov
push
xor
sti
pop
sti
jl
mov
je
lods
jl
cmc
out
stos
push
jno
adc
sarl
jbe
jae
popf
dec
mov
popf
or
pop
cwtl
xor
test
xchg
jmp
fisubs
sub
sbb
aaa
loop
xchg
inc
sahf
call
push
mov
pushf
jle
ja
fcmovbe
shl
and
xor
xor
mul
mov
in
jb
dec
test
jl
loope
sbb
arpl
add
jl
add
xchg
pop
pop
sub
loop
test
mov
cmp
or
push
xchg
inc
fimuls
pop
imul
jge
pusha
loopne
adc
mov
data16
outsb
jmp
xor
dec
faddl
lods
or
sub
and
dec
and
insb
outsl
pop
in
js
push
sub
push
adc
push
testb
stc
insb
dec
loope
inc
push
xor
mov
insb
shll
movl
sbb
aad
pusha
test
imul
sbb
dec
adc
insl
aaa
cli
sbb
or
mov
mov
dec
add
int
dec
cmp
in
ljmp
push
mov
cltd
lock
insl
out
stos
into
loope
mov
idiv
xor
push
cmp
rcr
xchg
cmp
mov
adcl
fsubp
lds
sbb
stos
push
and
jge
popa
sub
inc
pop
ret
and
ljmp
or
pop
add
stos
loopne
int
jge
jne
adc
mov
pop
sub
mov
inc
cli
pop
inc
xlat
lock
sub
mov
adc
dec
test
push
lcall
dec
rep
sub
mov
rcrl
xchg
das
leave
xchg
mov
leave
mov
cs
fmull
scas
int3
scas
adc
push
movsl
scas
movsb
daa
xchg
cmp
clc
push
mov
cmp
cwtl
sub
rcll
xor
ljmp
hlt
xchg
shll
cmpsl
cmp
jb
jp
push
lods
mov
jno
pusha
popf
inc
jge
call
imulb
jp
mov
ret
add
mov
in
dec
jbe
insb
jno
push
mov
pop
cmp
call
pop
and
stos
sbb
push
mov
mov
push
xchg
addb
movsl
mov
pusha
sbb
fs
sbb
test
cmpsb
inc
jnp
scas
repnz
add
jno
push
std
pusha
js
xchg
lret
je
lret
cmp
ja
pushf
or
mov
cmc
lahf
out
popa
dec
icebp
rcll
pop
pop
shr
rcr
adc
dec
shlb
outsl
outsb
int
pop
inc
mov
ret
gs
dec
ljmp
pushf
test
mov
popl
add
xor
lahf
push
les
dec
xchg
mov
cmp
cmp
lret
mov
or
repz
lods
test
addr16
lods
movsb
push
inc
ret
cmp
ds
cmc
adc
movsl
gs
aas
or
dec
fdivrp
push
jo
test
rcrb
out
adc
dec
jbe
add
loop
std
add
inc
cmp
ds
aam
stos
or
add
dec
add
jle
sahf
ret
xchg
shlb
dec
xchg
leave
sub
cmp
loopne
mov
pop
in
or
mov
idivb
loop
fwait
test
inc
and
jbe
out
or
cs
sbb
nop
mov
addr16
jp
and
pop
pop
mov
push
mov
jecxz
push
sbb
jle
mov
xchg
popf
mov
imul
mov
mov
mov
pop
dec
and
daa
inc
cmp
scas
sbb
and
jae
jge
in
js
cli
out
mov
jae
fsts
xchg
jl
inc
ss
dec
dec
pop
iret
and
xlat
loop
or
jnp
int
push
jl
and
notb
xor
pop
vmwrite
daa
jae
inc
cmp
inc
subl
pushf
iret
jp
fisubrl
lods
pop
mov
xchg
mov
jbe
pusha
sahf
aas
test
add
pop
mov
push
popf
xchg
sbb
lret
mov
fimull
loopne
pop
dec
cmp
loopne
or
negl
dec
ja
repnz
scas
cmp
inc
jne
dec
dec
cmp
int
orb
inc
jb
or
loope
movsl
setle
pop
and
adc
jge
je
add
clc
jmp
adc
mov
or
mov
or
das
jae
ss
pusha
pusha
divb
push
repnz
mov
mov
cltd
ret
out
dec
push
insb
es
aas
aas
push
jl
js
cmpsb
xchg
dec
movsl
stos
inc
rcrl
pop
pop
aas
popf
int
jl
sub
cmpsl
nop
mov
std
js
mov
xlat
xchg
pop
mov
imul
and
push
pop
push
ds
cmpsb
pop
daa
dec
or
and
lods
lock
or
sub
mov
and
popf
jge
fistps
gs
clc
fdivrl
mov
dec
cmp
stos
jbe
aam
or
sub
ja
hlt
xor
add
test
jle
gs
pop
out
sub
adc
jge
mov
cmp
orl
mov
int
add
xchg
push
aad
nop
ljmp
mov
add
jbe
mov
sub
and
or
push
mov
cmp
movsl
adc
xor
rolb
adc
dec
stos
sub
xor
and
das
xchg
jg
das
popa
push
test
test
or
lods
das
bound
jp
xor
cmp
cmp
mov
jns
push
fnstcw
movsb
mov
inc
addr16
ficompl
add
ss
movsl
shrl
test
icebp
lea
lahf
or
daa
xchg
mov
std
adc
sbb
fs
inc
mov
inc
cmpsb
dec
fadds
jge
repnz
ljmp
add
xorb
inc
cmp
jp
jne
xchg
jp
inc
hlt
ret
fstps
loop
xor
loopne
inc
cmp
fmull
fcomps
outsb
inc
cld
test
ds
or
xor
adc
insl
ds
call
and
pop
jmp
jl
fildl
xor
dec
cmp
cld
test
jecxz
sti
mov
or
jmp
mov
ror
cmp
and
std
cmpsb
inc
cld
push
mov
dec
in
imul
lods
pushl
int
push
pop
inc
in
sbb
pushaw
xor
cld
cmpsb
sbb
xor
push
stos
mov
add
scas
or
xor
out
and
dec
push
dec
lea
subb
adc
pop
push
insl
lcall
ret
adc
daa
call
jl
cli
push
test
mov
push
shlb
dec
out
roll
mov
xor
push
pop
sarl
das
push
jl
adcb
jbe
jne
or
xor
mov
ds
sarb
adc
mov
sarb
cld
adc
inc
xor
cmp
loop
bswap
pop
shl
or
inc
push
sar
rcll
fstpl
aad
or
mov
icebp
cmp
or
fcmovne
jno
or
cmp
sub
not
cltd
add
mov
test
inc
test
aas
or
sbb
fs
arpl
dec
and
subb
push
adc
jno
cmp
xchg
mov
pop
shlb
daa
int
fs
imul
dec
stc
pushf
push
ljmp
pushf
push
nop
push
jmp
pop
std
rcl
inc
mov
pop
cmp
popa
mov
aas
mov
push
cwtl
pop
sti
leave
ja
add
xchg
fstpt
and
das
insb
js
adc
popa
or
out
mov
push
xchg
icebp
rol
adcb
pop
or
adc
xchg
fdivs
mov
push
ss
cmc
push
gs
movsb
mov
lret
addr16
aad
lods
rclb
add
mov
and
xor
xchg
std
loop
mov
nop
xchg
dec
mov
rolb
and
sub
xchg
pop
lret
sub
xorb
jbe
cmpsb
xor
hlt
ljmp
pop
mov
ret
scas
insb
adc
sub
cs
adc
orl
shll
dec
fsubl
cwtl
jo
xor
call
lods
sub
cltd
mov
sub
mov
lahf
das
pop
xchg
cbtw
dec
stc
adc
mov
pop
arpl
or
repz
xchg
mov
jp
or
cwtl
pop
pop
lods
lock
push
dec
sub
sahf
dec
adc
mov
daa
sub
ret
aas
mov
pop
or
add
add
and
sub
sbb
adcb
addl
cltd
xchg
in
jno
xor
loopne
jp
out
loop
in
pop
addl
fsub
sahf
push
enter
repz
out
and
sub
cmc
mov
inc
xchg
shlb
xor
pop
mov
mov
xchg
ds
sbb
mov
inc
gs
es
push
mov
xchg
sbb
mov
test
lods
ror
and
ret
push
ljmp
rcll
mov
mov
xchg
add
les
cmp
fwait
into
dec
and
mov
sahf
push
mov
adc
outsl
or
lcall
push
dec
cmp
dec
aaa
xchg
movsl
and
lods
sub
pop
jmp
mov
movsb
in
je
xchg
inc
cmp
rorb
pop
out
das
pushl
mov
or
cs
sub
jle
icebp
in
es
push
repnz
fsubs
andl
jecxz
xor
jbe
mov
in
add
das
hlt
cmp
out
add
and
pop
jecxz
aad
push
fwait
or
fcoml
jg
add
xchg
cmpsb
fs
pop
test
xchg
cmpsl
rorl
imul
aaa
push
sti
jno
into
mov
push
repnz
aam
cmp
int3
inc
cmp
cmp
movsb
pop
je
jne
pop
mov
sbb
jl
cmp
fdivs
mov
rcl
mov
std
jle
or
int3
rolb
sti
jg
outsl
jecxz
lret
add
cwtl
popf
mov
mov
scas
std
scas
jle
mov
ds
fwait
icebp
xor
or
sbb
addr16
adc
dec
push
shll
jmp
jg
add
cmp
add
fisubl
inc
rorb
in
lret
jge
sbb
sub
push
xor
enter
rcll
pusha
sarb
addr16
mov
in
pop
jb
es
popf
or
mov
inc
adc
das
sbb
mov
aaa
push
and
pop
or
lds
add
pop
lds
test
ss
scas
fsubrl
cmp
adc
decb
aaa
sbb
dec
sarb
rcrl
jo
cwtl
lahf
or
inc
push
cs
mov
mov
pop
call
mov
push
jo
ret
add
in
mov
push
lcall
push
xor
xor
std
fbstp
cmp
fisubrs
insb
push
fisubl
push
pop
into
shlb
movsl
mov
mov
mov
jg
and
and
lods
outsb
pminsw
subl
adc
cs
inc
push
push
or
push
gs
sahf
ret
std
pop
add
fs
jmp
jle
mov
mov
xchg
into
inc
dec
loopne
lret
aas
push
pop
push
decb
clc
lahf
movsb
pusha
mov
jmp
out
xor
push
inc
mov
cmc
stos
fucomip
inc
cltd
popf
fwait
xor
fisubl
test
add
decl
cld
sub
les
sub
lock
and
aad
hlt
xorb
cmc
shrb
addr16
sbbl
inc
imul
jmp
or
cs
push
repz
dec
icebp
adc
cmp
xchg
or
das
add
loopne
jbe
rcrl
inc
inc
pop
dec
push
icebp
jb
mov
sbb
mov
xchg
xor
in
call
inc
dec
cmpsb
adc
dec
cmp
ret
stc
loop
test
sub
add
test
push
xchg
inc
insl
in
ss
jmp
add
mov
test
into
xor
lret
inc
stos
pop
lret
or
sub
sbb
cwtl
xchg
shl
ja
out
xor
insb
int
mov
pushl
xchg
pop
out
lret
mov
ds
fwait
cmc
insb
shlb
mov
int3
pop
fcmovbe
lods
sbb
aaa
mov
and
pop
aam
repnz
mov
fisttpll
lret
aas
arpl
repz
lcall
push
les
dec
cltd
push
pop
shll
jno
stc
fldl
inc
add
dec
addr16
add
daa
ret
enter
sub
add
push
aad
repz
xor
add
sbb
or
fnstcw
add
and
jmp
mov
loop
adc
fs
and
mov
push
cwtl
loope
cmp
add
pop
xor
mov
adc
add
sub
ds
sub
fldt
je
push
js
jecxz
stos
mov
lock
movsl
fwait
popf
sub
movsb
sub
insb
cmp
sub
popf
cmp
lock
mov
inc
adc
sbb
cmpb
mov
xchg
lock
sahf
push
out
sub
push
mov
sbb
orl
incb
jb
mov
sub
xor
fwait
test
and
mov
shrl
mov
jl
xchg
add
testl
and
jbe
lods
popa
xchg
inc
mov
imul
fildl
pop
outsl
imul
sbb
sbb
cltd
mov
pop
xchg
inc
mov
mov
jle
and
xchg
push
jmp
in
sub
push
xor
dec
loope
and
mov
adc
xchg
jle
xlat
and
out
test
movsb
das
into
or
repnz
pop
dec
mov
jmp
inc
jl
or
xchg
cmpsb
add
fwait
cld
sahf
mov
lcall
sub
mov
pop
or
andl
fnstcw
add
out
push
int3
out
jmp
mov
mov
lret
int
loope
sub
call
mov
push
mov
push
stc
or
out
aaa
jbe
cmp
cltd
inc
js
sbb
jg
imul
xor
les
cmp
loop
cwtl
gs
xlat
icebp
clc
mov
sarb
jbe
cmpsb
lods
pop
jmp
mov
cmp
ret
sub
mov
pop
jmp
push
pop
stc
insb
adc
or
adc
js
mov
mov
lcall
pop
xchg
xchg
mov
jle
jb
add
scas
inc
mov
pop
scas
mov
mov
stos
data16
mov
rorb
cmp
out
iret
add
clc
mov
je
addr16
or
testl
cmp
xchg
loop
mov
ret
or
push
jae
ljmp
dec
jl
sub
test
dec
jnp
mov
jecxz
sbb
add
jne
mov
lret
fs
scas
xchg
std
movsb
and
cs
jno
nop
addr16
xchg
popa
lock
dec
dec
add
dec
outsl
inc
jo
mov
push
xchg
fsts
add
xchg
jl
iret
xchg
scas
jg
arpl
cld
negb
dec
pop
enter
inc
movsl
mov
int
test
jns
aad
inc
mov
and
or
inc
push
fnstcw
lss
cld
cmp
aam
dec
cmpsl
fidivl
sub
push
push
mov
lods
push
push
arpl
cwtl
lds
mov
sub
insl
in
inc
inc
int3
sbb
sbb
mov
lcall
lods
cmp
jge
ljmp
dec
mov
shll
mov
cmp
out
xchg
adc
pop
sbb
xchg
and
mov
aas
xor
test
mov
mov
and
lods
mov
mov
sbb
ret
icebp
into
lret
and
dec
ljmp
mov
pop
dec
int
loopne
cmp
ret
mov
mov
mov
fidivrs
jne
fstp
arpl
imul
xchg
ret
imul
push
je
mov
or
mov
xchg
cmpsl
rorb
shlb
imul
dec
mov
cmpsb
fidivs
in
push
jo
xor
jge
and
cmp
mov
mov
add
sub
out
jl
aaa
rcr
jl
pop
xor
mov
shll
subl
cmp
mov
sub
ljmp
and
adc
clc
push
jle
push
xchg
dec
xchg
push
addr16
rolb
cli
push
dec
loop
lods
jl
sbb
je
and
bnd
jle
stos
jo
cmp
enter
xchg
cld
repz
jns
xor
sbb
das
imul
clc
adc
cmp
pushf
xchg
mov
test
dec
data16
mov
mov
std
or
xchg
dec
jns
mov
aam
add
cmp
cs
hlt
insb
ret
pop
loop
jnp
nop
adc
insl
std
sbb
push
sbb
sbb
jle
pushf
mov
add
les
lahf
pop
jecxz
idiv
pop
lods
popf
nop
xchg
sbb
cmp
push
stos
xchg
adc
rolb
or
xchg
les
adc
adc
mov
cmc
ss
xchg
lret
push
rcl
leave
sbb
rclb
cmp
sub
and
dec
pop
cmpsb
adc
xor
push
xlat
sub
add
adc
hlt
mov
hlt
imul
xchg
adc
fwait
adc
repnz
fidivl
test
test
mov
mov
ret
sbb
jg
fimull
cli
fistps
or
sti
nopl
aam
bnd
aad
mov
stc
repz
js
mov
xlat
push
jmp
movsl
shrl
adc
pusha
adc
pop
or
mov
divb
mov
adc
cmp
push
mov
imul
inc
xchg
shll
lret
sbb
push
outsl
mov
std
out
into
sbb
decb
lods
je
or
xchg
scas
push
lods
fmuls
mov
jbe
mov
jecxz
xchg
sbb
je
cld
loop
cwtl
js
enter
clc
push
mov
filds
jl
mov
cli
je
cmpsl
xor
fidivl
cmpsl
movsl
xlat
cmpps
roll
push
sub
sub
jg
ljmp
int3
sarl
jecxz
and
xorb
mov
fwait
mov
adcb
pop
mov
int3
jp
imul
mov
fidivrs
sarb
mov
adc
pop
pop
mov
jge
sahf
bound
xor
movl
push
push
test
inc
rcl
arpl
jno
insl
sub
out
rcl
pushf
cmp
mov
sub
pushl
push
mov
and
test
arpl
pop
inc
js
mov
cmp
mov
pop
repz
bound
call
in
std
sbb
mov
mov
fstl
mov
xchg
lods
dec
stc
cmp
adc
clc
xor
cli
test
mov
dec
mov
add
aad
jo
nop
iret
aaa
sbb
xor
dec
aam
repz
pop
pop
pop
jbe
xlat
movl
popf
jno
xor
add
fidivl
cmp
dec
loop
shrl
mov
dec
pop
popl
jo
cmp
rclb
and
adc
cmp
xor
mov
js
mov
lea
dec
lods
sub
xorl
cmp
lock
leave
or
sub
filds
mov
bound
int3
das
ja
mov
and
mov
add
xlat
iret
jne
daa
iret
and
adc
movsb
pop
daa
mov
xchg
in
and
pop
mov
lods
jns
mov
test
mov
in
aad
jecxz
mov
add
add
xor
sti
addr16
icebp
cmp
xchg
cli
pop
push
fwait
cmp
cmp
enter
bswap
sti
sub
mov
sbb
insb
mov
bound
jae
xor
xor
adc
xchg
push
xor
int3
cmc
and
jnp
adc
ss
or
and
std
jg
cmc
jb
jns
push
outsb
cli
pop
mov
stos
shrl
xor
xchg
leave
mov
pop
shl
jle
lods
cmp
aas
imul
movsl
push
addr16
ds
xchg
loopne
pop
dec
call
shr
filds
insb
inc
xchg
movsl
shlb
faddl
push
cmpsl
mov
dec
movsb
or
xlat
dec
lds
or
fmull
or
movsb
stos
jp
dec
xor
sub
or
fdivp
mov
ljmp
movsl
xor
mov
mov
pop
roll
jp
lock
int
mov
pop
ret
testb
js
outsl
lahf
inc
mov
mov
fmull
pushf
popf
daa
scas
xor
lea
mov
bound
shrb
xor
cmp
scas
push
sbb
xor
clc
or
xlat
insl
cmpsb
iret
repz
call
adc
mov
jl
aas
fcom
push
and
lret
jbe
inc
jae
sbb
es
icebp
sbbl
xchg
andb
lds
push
mov
ret
clc
pop
jg
outsl
mov
xlat
out
and
adc
mov
movsl
sub
lret
inc
mov
inc
lds
inc
dec
mov
cwtl
cmp
fisubrs
jge
addb
std
scas
ds
les
ja
outsb
sarl
cmp
xchg
sbb
or
cmp
sub
cwtl
bound
out
movsb
push
cmc
xchg
xor
hlt
sub
cmp
xor
sub
add
mov
push
test
jl
call
js
fcomps
mov
adc
sub
sarb
dec
cld
adc
mov
in
cld
push
jne
fisubrs
add
ja
iret
cli
clc
icebp
fiadds
inc
rorl
in
push
jl
jecxz
pop
fidivrs
adc
or
insl
mov
inc
mov
stc
cmp
jge
pusha
fidivs
mov
adc
loope
shlb
out
inc
sahf
aad
neg
push
mov
fwait
dec
jle
leave
aaa
inc
cltd
dec
jmp
aad
bnd
mov
pop
or
jmp
dec
int
mov
push
mov
dec
or
mov
ret
shrb
cld
enter
gs
lcall
mov
inc
decl
cmp
xchg
xlat
fidivl
imul
xchg
lea
mov
scas
loope
popa
xchg
daa
out
push
stc
mov
aam
push
repz
push
out
xor
ja
inc
loope
push
fwait
rcr
cltd
aaa
imul
lcall
es
pop
rcrl
es
cmovb
push
movsb
mov
push
xchg
enter
push
pusha
sbb
testb
insl
repnz
adc
test
xchg
pop
jg
sbb
xchg
inc
jp
ficomps
cmp
movsb
into
pop
sti
sub
inc
aam
xchg
dec
call
repz
lret
cmpsb
rcrb
or
jno
xor
sub
jge
sbb
test
and
push
ret
inc
jg
jnp
mov
sysexit
nop
xor
lock
jb
jnp
xchg
pushf
mov
jns
lock
sub
push
sbb
lret
jp
inc
mov
fisttpl
inc
lcall
push
ret
aaa
int3
out
xchg
sahf
sbb
inc
sub
aam
fs
add
stc
rclb
xchg
aaa
pop
faddp
mov
shlb
lock
ja
pop
jecxz
call
mov
push
sbb
mov
jg
push
adc
imul
ja
in
pop
out
pop
leave
push
add
loope
gs
dec
adc
mov
pop
add
shr
imul
andb
mov
mov
or
lds
js
test
cmp
decl
dec
jmp
cs
rorb
mov
sbb
xor
mov
push
pop
mov
sub
xchg
xchg
xchg
sbb
movsb
xchg
insl
clc
out
jmp
loope
xchg
xchg
in
xor
push
mov
mov
insb
or
push
cmp
aam
fwait
dec
movsb
arpl
push
add
ljmp
and
push
lods
jle
jae
dec
pop
pop
push
aam
jbe
ret
arpl
int
popa
fsub
pusha
jae
sub
inc
imul
imul
or
pushl
xchg
push
lret
out
xor
mov
pop
cmpsb
test
pusha
das
sub
xchg
rorb
mov
mov
xchg
loopne
in
popf
fwait
rcr
insb
or
hlt
add
push
pop
sbb
sbb
push
inc
mov
or
repz
movsl
psrlq
repnz
shl
mov
xlat
aaa
add
fidivs
addr16
cmp
dec
pop
stc
xchg
dec
or
scas
stc
stos
es
mov
insb
xchg
sub
nopl
jo
sbb
mov
push
popa
lahf
insl
fldenv
mov
adc
inc
movsl
mov
add
imulb
movsl
test
jmp
mov
push
lcall
inc
out
pop
xor
and
sbb
jge
mov
and
mov
mov
icebp
movsb
int
sbb
cmp
or
push
sub
mov
lret
sahf
lods
xlat
ret
or
pop
loop
dec
inc
mov
add
sbb
cld
adc
lahf
movsl
jno
push
ror
add
pop
and
js
push
mov
jmp
adc
in
clc
sub
xor
rcl
shl
andb
addr16
fwait
sub
adc
cmp
sbb
ja
pusha
bnd
and
out
outsb
popa
insb
pop
inc
inc
je
out
daa
das
xor
lds
sbb
push
xchg
inc
adc
popf
cmp
mov
xor
xchg
push
mov
mov
adc
mov
lea
jge
xor
daa
or
pop
jno
pop
xchg
js
mov
jp
popf
mov
ficomps
jle
daa
repz
mov
adc
adc
into
dec
inc
pushw
xlat
push
xor
in
adc
movsl
inc
outsl
movsl
in
lods
dec
adc
push
out
jecxz
jnp
adcb
cs
in
pop
bound
test
sbb
test
adc
xorl
mov
inc
xchg
arpl
push
sub
bound
jb
jb
push
mov
mov
cld
mov
sub
add
fdivp
jg
inc
andb
mov
jns
fldl
cld
out
cmp
test
shll
cs
mov
add
push
fisubrs
ds
aad
leave
jne
fs
mov
int
inc
xchg
mov
loop
push
cmp
push
popa
pop
sbb
sbb
add
xchg
mov
xchg
aas
inc
aam
mov
or
stc
aad
popf
or
mov
fadds
xor
shr
pop
std
mov
xchg
add
mov
jp
lret
lods
add
mov
jo
cmpsl
into
sti
pop
jp
jb
outsl
call
divb
xor
lret
cmp
sub
out
pop
into
cwtd
sbb
inc
out
jns
sub
cmp
pop
inc
add
mov
inc
pcmpeqw
icebp
mov
dec
ljmp
mov
mov
movsl
add
sti
outsl
lcall
jb
movsb
push
mov
mov
loopne
mov
into
cli
ja
adc
into
xor
xchg
movsl
js
inc
xchg
mov
push
clc
mov
jnp
jbe
mov
pop
loop
push
cmc
dec
jb
mov
pusha
adc
aad
dec
ret
push
sbb
push
int3
popf
pop
inc
aad
sbb
add
gs
push
mov
push
jae
inc
mov
loopne
mov
lea
mov
mov
or
jl
popf
jp
jno
xchg
enter
sub
mov
test
xor
lods
es
push
mov
mov
xchg
aaa
dec
xor
pop
dec
xor
popa
xorl
sbb
aaa
pop
sub
loopne
loop
insb
addr16
mov
fucompp
cmp
jecxz
repz
add
or
rcrl
cmc
fisubrs
add
aas
jecxz
mov
in
push
arpl
das
cmpsl
bound
push
cmp
stc
imul
adc
push
scas
das
lea
sub
and
mov
fcomps
mov
fdivl
pop
je
mov
push
inc
das
jbe
fsubrs
data16
inc
mov
cli
mov
inc
add
pop
bound
rclb
loop
jmp
and
mov
inc
adc
ss
sub
push
nop
lcall
or
add
movsb
mov
sbb
dec
xchg
nop
push
cmp
sbb
mov
inc
scas
repnz
or
dec
mov
dec
icebp
cmp
xor
xor
jl
pop
jle
ficomps
jns
push
int3
movsb
inc
mov
test
es
add
sbb
loope,pn
cmp
je
cs
xor
jge
inc
cmp
cmp
ds
loop
xchg
int3
sub
add
pop
mov
pop
mov
pop
inc
jmp
xchg
ss
aaa
ret
mov
push
popf
cmp
dec
jge
push
dec
mov
test
sbb
add
mov
xor
outsl
xchg
insb
clc
jns
add
loop
cmpsb
adc
mov
out
push
dec
cmp
ret
inc
mov
dec
mov
stos
fldt
xchg
dec
inc
dec
mov
fcmovbe
pop
inc
std
mov
mov
push
ret
arpl
xorl
in
test
fwait
push
fcomps
shlb
jo
rcr
xlat
fstpt
movsl
jecxz
mov
icebp
lods
jl
test
push
sub
pusha
ficomps
jo
mov
fbstp
sbb
pop
inc
arpl
movlps
jmp
xor
inc
lret
inc
cmp
imul
movsb
cmp
sahf
cmp
inc
jmp
sub
push
sarb
jg
andb
inc
jae
shr
cld
pop
sarb
push
xchg
jae
push
lcall
mov
xchg
cmp
push
loopne
sub
movsl
enter
mov
mov
loope
and
jp
frstor
pop
and
or
lock
xchg
pop
pop
inc
in
mov
daa
push
loop
addb
sbb
sub
gs
ss
mov
or
je
xchg
jae
test
in
mov
movsl
aaa
or
je
dec
sar
repz
xchg
out
ljmp
xor
pop
dec
xchg
jle
xchg
cli
adc
inc
popf
dec
dec
stos
notb
aad
adc
add
push
mov
scas
jmp
sbb
lods
dec
jp
mov
xlat
sbb
adc
pop
mov
pop
xor
add
or
and
push
cmp
pusha
pop
mov
sub
aad
sahf
cmpsb
sbbl
push
cld
add
mov
sbb
ss
jne
ljmp
sub
pop
nop
dec
cmpsb
scas
fildl
mov
add
aad
je
movsl
cltd
test
push
jb
mov
jbe
sub
push
push
fistl
cmp
cmp
cld
sbb
ljmp
lahf
push
inc
push
aam
cltd
out
mov
mov
into
inc
dec
inc
mov
dec
jg
jbe
mov
fdivs
fdivl
dec
sub
xchg
fimuls
popf
lcall
decl
std
jb
ss
les
mov
adcl
outsl
lock
scas
lret
clc
call
adc
ret
shrb
sbb
xchg
loope
push
rcr
mov
mov
inc
xchg
pop
mov
call
icebp
and
push
pop
xchg
push
data16
outsl
xor
sbb
cmp
pop
cmp
xor
sti
sbb
adc
xchg
and
add
pop
mov
mov
jns
jno
pushf
sub
pushf
xchg
sub
inc
mov
cli
cld
bound
xlat
repz
fsubs
and
iret
adc
lcall
sahf
test
sub
push
imul
lock
sbb
fs
adc
dec
js
shrl
adc
dec
in
sbb
mov
or
jmp
sub
out
pop
cmp
pushaw
xchg
fidivrs
outsl
add
mov
xchg
or
jne
push
roll
andl
or
daa
mov
adc
out
sub
adc
js
call
ret
ficoml
in
cmp
andl
and
enter
push
dec
call
std
pop
mov
shrb
push
test
lock
call
xlat
into
pop
in
fnstsw
out
lea
add
cli
lret
faddl
sbb
pop
pop
adc
mov
mov
mov
sbb
mov
out
xor
pop
scas
push
mov
push
xor
mov
stos
xchg
cmpsl
icebp
clc
jg
xchg
leave
add
inc
sub
xor
fcomi
stc
incb
pop
mov
sub
out
imul
sub
mov
imul
pop
sub
outsl
scas
pushf
in
xor
mov
jmp
mov
pusha
aad
xor
mov
ds
stos
ss
scas
add
cmp
adc
insb
fisubs
out
out
loopne
dec
lahf
sub
xlat
ja
popf
mov
or
out
inc
popa
cmp
cmp
scas
or
rcrb
mov
sti
test
int
aaa
cld
xchg
jecxz
add
jmp
lret
pop
lods
jb
mov
cmp
lret
movsb
xchg
sbb
mov
test
push
rcrb
in
pop
add
jge
mov
insb
dec
xchg
out
jnp
sub
jo
sarb
xchg
jecxz
cmpsb
inc
outsb
fidivs
mov
sbb
mov
add
lods
shll
movsl
int3
fsubrl
ret
mov
jmp
lret
test
push
push
xor
shll
mov
fbld
mov
lods
sub
lahf
vminss
mov
leave
mov
dec
push
jg
xchg
pop
push
sbb
aam
icebp
mov
jg
xchg
xchg
mov
dec
sbb
dec
push
mov
stc
mov
insb
cld
pop
out
nop
push
inc
aas
and
jg
add
mov
push
repz
out
mov
jp
mulb
sbb
out
test
in
insb
aam
in
xor
sub
jnp
push
xor
arpl
stc
mov
push
cmp
ror
dec
xchg
ret
jecxz
sti
imul
out
mov
movsl
dec
jmp
cmp
cmp
mov
ds
out
fcmovb
fisubs
out
cltd
mov
cltd
enter
imul
inc
jno
mov
pop
jle
ljmp
adc
xor
insb
and
in
arpl
and
xor
mov
push
insb
xlat
subb
jo
adc
bound
ss
test
adc
stc
mov
loopne
mov
jmp
push
out
cmp
inc
pop
lea
call
out
std
in
sub
insb
fists
pop
pusha
push
daa
hlt
fistpll
call
xor
jl
sub
invd
xchg
pop
inc
sbb
mov
jo
lcall
add
xchg
mov
pop
lret
xchg
jmp
jns
and
call
das
mov
std
cli
scas
scas
jecxz
push
pop
roll
sbb
mov
lahf
aaa
mov
jecxz
jmp
aas
repnz
test
mov
mov
sub
scas
cmp
pop
repnz
out
dec
and
jge
cmp
lret
es
je
aaa
pop
and
test
jg
push
aas
dec
inc
adc
adc
xorb
and
loopne
and
pop
pop
sbb
dec
mov
std
movsb
and
or
lret
sbb
push
movsl
test
xor
sbb
les
lret
lret
hlt
lcall
cwtl
fimull
ja
sub
pop
mov
push
cmpsb
rolb
arpl
arpl
pop
gs
inc
jne
lea
and
loop
adc
pop
mov
jl
leave
cmp
cmc
mov
andb
imulb
xchg
push
stc
mov
in
mov
popa
jae
icebp
shrl
data16
lsl
jle
or
and
pop
aaa
cmpsl
or
lods
add
jae
push
pop
mov
daa
cli
push
mov
adc
hlt
in
adc
std
jl
mov
or
lahf
push
mov
inc
push
loope
jmp
sub
fmull
jne
xchg
ds
push
jecxz
jno
cmpsl
push
jl
insb
ljmp
rcl
out
sub
sbb
repnz
data16
int3
xchg
and
dec
es
daa
pop
push
cmp
adcb
cmp
andb
adc
loopne
out
popa
jmp
decb
mov
fisubrl
mov
rcl
std
push
js
adc
cmp
lods
jle
jns
sbb
jecxz
lahf
popf
leave
dec
test
loop
scas
sub
std
or
movsl
pushf
xor
dec
sti
mov
sub
or
dec
cmp
fdivr
mov
pop
push
shrl
mov
es
xor
dec
test
insl
sub
mov
dec
dec
lods
inc
mov
dec
mov
lea
and
lret
inc
cmp
push
pop
dec
pop
cmp
jbe
xor
popa
xor
bound
fsts
ret
subb
xor
pop
ss
test
testl
dec
add
lret
xor
loopne
ret
shlb
sub
dec
fnstenv
scas
push
jne
mov
jmp
pop
add
in
call
mov
xchg
sub
mov
lahf
test
xchg
sahf
or
add
push
sbbl
loope
js
jb
dec
jo
adc
stos
adc
mov
push
xchg
adc
mov
add
fsubrs
fldl
inc
inc
imul
sub
popf
or
inc
lods
push
je
insb
sbbb
dec
aam
into
cmpsb
or
negl
or
daa
adc
inc
aad
and
xchg
out
mov
sub
ret
ror
mov
cmp
sbb
adc
pop
in
or
and
outsb
and
js
movsl
cmp
push
fcompl
roll
les
xchg
ljmp
sahf
pop
jmp
fisubl
jp
jmp
ss
loopne
imul
dec
xor
mov
inc
aaa
dec
jnp
decl
mov
dec
addr16
ss
fs
mov
ret
xor
mov
and
enter
insl
and
jo
lods
push
lods
jae
ljmp
jge
push
insl
out
cmc
xlat
mov
ret
sbb
xor
push
out
jnp
dec
jo
lahf
push
adc
dec
rcrb
int3
cltd
cs
jmp
and
jne
movsl
mov
wrmsr
inc
enter
add
jge
push
xor
into
jbe
xchg
inc
cmp
push
inc
mov
fs
gs
mov
ficomps
sub
pop
inc
imul
repz
add
shll
xchg
mov
ss
push
fisubl
fisttpll
jp
sub
pop
bnd
ljmp
xchg
or
hlt
jo
shll
cmp
sbb
shl
and
cwtl
dec
rcll
inc
cli
ds
cmp
pop
lea
mov
imul
xor
ljmp
jo
xchg
das
fistpl
cld
popa
mov
jbe
das
movsl
jb
or
mov
push
enter
mov
mov
add
ds
sti
mov
dec
icebp
in
dec
pop
mov
pop
dec
test
dec
adc
cs
dec
add
lods
inc
push
pop
push
pop
call
jae
mov
into
jnp
cld
sti
xlat
call
arpl
loop
fsts
cmpsl
in
push
push
add
jne
ret
jge
pop
in
lock
into
jnp
jl
mov
sti
jmp
inc
cli
fdiv
shlb
xchg
xchg
push
aad
jnp
cmp
mov
dec
inc
scas
insl
jge
or
mov
mov
hlt
jle
pop
jno
rcrb
push
and
dec
xchg
inc
aaa
pushf
xchg
mov
cmp
sbb
lds
mov
mov
jnp
bound
jp
inc
shl
sbb
cwtl
popa
lds
test
mov
inc
das
mov
sbbb
pop
out
xchg
addr16
mov
movsl
cwtl
shll
divl
sub
daa
in
cmp
stos
imul
cmpsb
aad
cli
xchg
mov
push
cmp
pop
jno
std
movsb
vpcmpeqb
int
inc
sbb
cmp
mov
jmp
pop
push
cmp
or
xor
or
xchg
into
ja
loope
jecxz
jg
aas
insl
push
xor
sbb
imul
out
mov
popa
sbb
push
scas
inc
mov
xchg
pusha
pop
dec
pop
je
jb
inc
ja
pop
xchg
push
and
dec
insl
cld
jo
aas
mov
outsl
lds
pop
cmpsl
dec
xlat
xorl
lret
sbb
ds
xor
jo
popf
and
pop
out
scas
stos
push
ljmpw
and
sarb
xlat
lret
cwtl
and
xlat
xchg
adc
icebp
addb
jg
sub
addr16
adc
fs
es
out
insl
xchg
sbb
stc
mov
mov
shrb
movsb
add
cltd
sahf
mov
imul
add
cwtl
sti
loop
pop
push
jmp
sahf
or
leave
negl
push
imul
dec
push
adc
lock
gs
test
adc
cs
lret
jne
inc
pop
aam
mov
in
and
add
or
je
lock
bnd
test
outsl
jb
mov
mov
enterw
dec
cmp
push
pop
gs
hlt
lds
lds
fisttpl
jno
xorl
xchg
mov
stos
ljmp
stc
daa
or
xchg
sarb
pop
dec
cltd
stos
out
sub
push
mov
jo
into
mov
adc
inc
or
outsl
loopne
icebp
inc
data16
fisubs
in
sbb
push
into
lret
pop
cli
pop
je
pop
nop
xlat
ljmp
ja
sub
or
rcrb
test
sub
sbb
leave
adc
and
mov
cmc
pushf
mov
or
or
sub
push
sub
jbe
sbb
mov
mov
sbb
fiadds
jg
and
sub
sub
test
dec
adc
mov
pop
imul
dec
jae
sahf
cmpsl
xor
fnstenv
pop
lahf
xor
mov
and
ss
rcr
cmp
test
xor
xor
cmp
lret
lods
dec
mov
dec
push
shrb
pop
shrb
mov
out
jp
repnz
mov
ljmp
dec
pop
jg
adc
cli
mov
mov
mov
cmp
fcoms
pop
les
sub
das
andl
cmp
ljmp
mov
ret
test
repnz
in
fstps
test
cs
test
inc
or
out
ss
and
jb
jecxz
sbb
and
sbb
xchg
sub
fdivrs
jge
loope
add
pop
lret
or
je
nop
es
cmp
sub
flds
stc
add
gs
cmp
pop
push
leave
jg
xchg
xor
icebp
leave
dec
push
aaa
push
mov
inc
movsl
push
fmull
sub
aas
hlt
insl
daa
stos
pop
xchg
sarl
jmp
idivl
lret
mov
insl
aad
cmp
adc
cmp
ja
sti
dec
cmp
out
add
fistl
pop
jbe
pop
xor
mov
pop
adc
pop
push
xor
inc
dec
push
sub
cmp
inc
jge
and
cli
jecxz
in
fiadds
hlt
push
mov
jne
in
jae
mov
fcmovu
mov
aam
xor
mov
loopne
in
jp
inc
movsl
je
dec
mov
call
scas
pop
imul
mov
aad
loopne
in
sub
adc
in
daa
xor
aaa
scas
and
cld
pop
lock
pop
and
mov
cmp
sub
out
mov
int
int
inc
push
xchg
scas
lock
push
shrl
and
and
js
sbb
push
sbb
dec
xchg
xchg
cwtl
cmpsl
repnz
es
int
ss
jl
mov
and
dec
ljmp
rorl
lret
lock
lods
leave
shrb
jg
call
stos
adcl
pop
sub
leave
gs
cmp
mov
ljmp
leave
sbb
mov
fsubl
xchg
hlt
lds
aaa
push
lock
lret
jns
outsl
sbb
cld
insb
pop
lcall
cld
imul
out
pusha
add
jmp
aad
roll
sbb
mov
inc
push
push
jns
ds
sbb
repz
push
dec
xor
mov
test
add
stc
push
fcmovbe
lock
movsb
fdivs
cmpl
outsl
cld
xchg
shll
insl
lcall
cmp
bound
loopne
xor
mov
add
rolb
stc
mov
or
lds
fs
mov
fldt
ds
cwtl
jge
xchg
adc
jge
xor
pop
push
fsubl
or
cs
pushf
cmp
dec
test
mov
enter
mov
rcrb
stos
sbbl
push
push
dec
sarl
les
jo
popf
cmp
mulb
and
jae
subl
frstor
gs
imul
fcoms
jnp
sub
mov
aas
xchg
lock
fwait
sub
jno
lods
fimull
sub
pop
loope
nop
xlat
dec
in
pop
xor
mov
int3
pop
adc
mov
stc
xchg
cmp
sbb
fs
cs
pop
je
outsl
cltd
lcall
cs
mov
int
or
negl
mov
fcoms
mov
inc
mov
adc
xchg
cmp
push
pop
ds
fstps
or
ljmp
mov
outsb
push
outsb
mov
and
imul
jo
in
push
aas
push
enter
rclb
sbb
mov
gs
add
outsl
shlb
sub
mov
cmp
popa
mov
fwait
or
stc
lods
in
ret
mov
xchg
out
cs
xchg
mov
adc
adc
adc
lods
jecxz
mov
test
pop
ljmp
mov
pop
int
out
jbe
mov
xchg
dec
xor
out
aas
adc
stos
cmp
mov
or
dec
pop
sbb
fildl
add
lahf
bnd
inc
add
lret
js
pop
inc
iret
mov
dec
repz
lea
js
xor
scas
imul
insl
andl
cmp
ficomps
dec
and
stos
pop
std
add
mov
pop
fs
adc
push
xor
inc
js
pop
jmp
orl
arpl
jecxz
pop
pusha
inc
outsb
mov
push
jle
in
cmp
dec
stos
cmp
pushf
std
xchg
cwtl
movsl
in
fldt
jmp
popf
sti
adc
pusha
adc
lds
xchg
lret
pop
mov
mov
popa
jmp
aad
int3
shlb
shlb
sub
mov
gs
cmpsl
in
mov
fnstenv
xchg
inc
dec
pop
mov
shrl
jp
jl
pop
or
movsb
mov
icebp
cmp
jae
test
add
mov
icebp
push
cmp
out
mov
add
lahf
xor
and
clc
insl
xlat
push
push
sub
imul
clc
add
pop
lds
fdivrs
lds
push
xor
inc
cmovs
std
cmp
xchg
jp
xchg
jbe
daa
pop
adc
movsb
pop
divl
adc
jo
cmp
fndisi(8087
mov
jmp
inc
adc
cmp
push
and
add
cmpsb
idivl
addr16
rcr
dec
aaa
xor
xchg
dec
add
mov
mov
fmull
fdivrs
nop
dec
mov
pop
adc
inc
shr
fwait
rol
and
cs
aas
stos
das
fcomps
loope
push
xor
imul
mov
leave
inc
ret
in
cld
add
inc
cs
push
jg
pop
pusha
mov
shlb
mov
repz
lods
xchg
imul
sbb
icebp
adc
fdivrl
cli
test
cmp
pusha
sub
add
jecxz
push
sbb
cli
cmp
xor
out
push
sub
cs
push
fisttps
fildll
in
test
xor
push
xor
sub
dec
stos
jae
pop
and
dec
xor
int
sub
pavgw
sub
test
mov
andl
mov
push
insl
push
arpl
pop
and
in
in
fimuls
or
les
out
and
test
jp
push
add
sub
jl
jl
mov
sbb
sti
mov
mov
fldt
xor
dec
ffree
lret
fistl
pextrw
xchg
push
out
aam
jp
fidivl
scas
jo
out
adc
mov
jne
mov
mov
enter
aam
pop
pushf
into
xchg
pop
fs
bswap
push
mov
cmc
loope,pt
andb
ljmp
int3
hlt
adc
or
ret
cmp
mov
insl
into
jle
push
cmc
mov
loope
inc
out
and
adc
int
mov
push
stos
icebp
inc
push
pop
push
sbb
pop
fisubs
hlt
sub
lret
and
xchg
dec
ljmp
mov
cltd
int
mov
push
fisubrl
sbbb
cmpsb
ss
fcomps
dec
sub
add
xlat
mov
inc
leave
jge
cmp
aaa
lret
aam
enter
adc
mov
pop
sub
mov
imul
outsl
cmpsb
iret
mov
add
and
inc
push
mov
push
iret
add
pop
push
inc
mov
lcall
in
sbb
scas
sbb
lret
and
mov
shll
mov
cmp
dec
mov
aad
es
ret
push
hlt
into
mov
xor
sub
movsl
add
push
sub
je
test
push
cmp
mov
dec
rorb
push
push
int3
or
push
rcrb
mov
add
outsb
ja
lds
or
sub
ficoms
es
addr16
xor
mov
lret
mov
stos
insl
in
incl
in
mov
push
xchg
ret
lahf
sbb
sub
mov
or
dec
adc
shrl
mov
sbb
pop
mov
sbb
in
push
stos
cmpl
xchg
das
push
push
out
hlt
sahf
or
pusha
mov
xchg
mov
xchg
rcrb
call
lods
lcall
sar
into
aad
push
lea
nop
inc
cwtl
idivl
mov
stos
dec
scas
and
cmp
xchg
and
xor
xor
mov
jo
ss
push
pop
hlt
fwait
rcrl
mov
outsb
and
out
sub
subl
mov
in
sahf
mov
insl
scas
and
mov
or
jne
xor
cmpsl
push
jne
add
inc
bound
and
xor
xchg
jbe
jl
dec
rcll
cmp
xchg
push
mov
jl
xchg
xor
pop
rolb
mov
shr
xor
mov
aad
add
enter
int
sbb
lock
xchg
mov
cmp
or
mov
mov
iret
das
jmp
insb
pop
je
cmpsl
or
adc
int3
push
mov
sti
dec
and
xchg
dec
xchg
pop
ja
sbb
loop
int3
ljmp
push
mov
xor
add
or
cmp
cld
jns
dec
shlb
gs
cmpsl
in
adc
or
pop
sbb
mov
dec
sbb
call
das
lret
jle
and
or
mov
loop
ss
adc
mov
inc
pop
mov
push
stos
lcallw
inc
mov
pop
das
ficompl
mov
adc
cld
sarl
mov
xchg
inc
jnp
jecxz
xchg
mov
lds
mov
std
pop
fdivl
push
lret
sbb
ja
fldt
lcall
lret
inc
orl
inc
pop
sub
loope
mov
popa
add
dec
test
dec
mov
add
sbb
mov
mov
mov
or
daa
sahf
daa
push
push
cltd
pop
jl
roll
in
pop
mov
cmp
xchg
cmp
int3
loope
rcll
and
add
adc
inc
stos
jg
dec
pop
or
and
out
sbb
std
sbb
adcb
lods
jmp
arpl
jg
mov
mov
cli
or
mov
lods
xor
lock
nop
and
mov
gs
clc
jne
leave
jge
inc
loope
pop
cmp
xor
xor
adc
lds
cmp
pushf
xchg
mov
xlat
cs
test
data16
xchg
mov
or
movsl
int
call
push
add
push
shrb
push
xor
andl
cmpsl
pushf
ja
mov
stc
cmp
movsb
rorb
inc
xchg
fidivrs
adc
test
outsb
into
ljmp
xchg
sahf
imulb
cmp
movsl
sbb
jge
jl
lods
inc
lods
mov
aad
xor
adc
add
xor
imulb
inc
cmp
shll
dec
sub
inc
xor
pop
xchg
pop
or
and
sbb
jle
push
imul
repz
xchg
mov
xrelease
hlt
lods
cmpb
lret
inc
leave
jno
xorl
imul
and
shrb
push
call
repz
or
into
lods
pop
add
pop
sarl
pop
or
add
insl
ret
sub
jmp
cmp
add
mov
sbb
and
pop
std
xor
sub
mov
inc
fabs
fmuls
adc
inc
aas
repnz
sbb
into
dec
repnz
ds
sub
ss
push
psraw
dec
xchg
ja
in
aas
insb
pop
mov
fimuls
dec
push
int
ret
push
sbbl
mov
push
xor
lods
mov
push
mov
sti
or
add
jp
ja
mov
aas
pop
testb
imul
add
or
js
sbb
stos
inc
lret
add
scas
mov
sbb
cmp
loopne
sub
xchg
gs
scas
mov
fcmovnb
and
jp,pt
sbb
lods
loopne
mov
adc
xor
pop
mov
in
inc
mov
xor
loop
ret
je
sar
add
add
enter
jbe,pt
cli
fs
ljmp
out
push
jnp
jl
lds
inc
arpl
mov
xor
pop
scas
mov
sahf
lods
les
cmp
mov
ret
nop
out
or
xchg
push
jne
mov
stc
popa
xorb
stos
stc
std
pop
cmp
lea
aaa
adc
movsl
movsb
mov
push
stc
mov
rdpmc
adc
call
or
push
xor
loop,pn
push
adc
mov
fidivl
aam
cwtl
jns
pop
and
jl
lahf
or
repnz
xor
std
dec
mov
adc
or
gs
in
inc
xor
cmp
inc
mov
bound
mov
xchg
inc
pusha
inc
pop
add
and
xor
pop
xchg
push
nop
test
mov
incl
fidivl
sbb
imul
sub
insl
jb
gs
cmp
shl
lea
add
mov
in
loopnew
vsqrtps
clc
lods
dec
mov
adc
addr16
adc
sti
outsl
stc
gs
fidivs
cmpsb
mov
xchg
daa
push
test
lea
ret
dec
lods
clc
sbb
lods
mov
or
adc
mov
bound
pop
add
and
adc
fnsave
scas
mov
jge
in
shll
or
jns
jno
push
in
fisubrl
lds
js
repnz
fcmovu
pop
test
lret
aas
ret
xor
pop
lahf
add
in
add
jbe
test
pop
mov
ret
test
in
mov
stc
inc
lret
xor
mov
subb
cmp
or
inc
xor
sbb
in
mov
and
hlt
cmp
stos
lret
arpl
jbe
stc
jl
aam
scas
insb
jno
jns
cmp
bound
sub
es
and
mulb
push
xchg
adc
stos
call
xchg
popa
cmp
stos
push
test
aad
lds
shll
jg
pop
movl
add
lret
add
testb
loope
iret
bound
cmp
and
sbb
inc
cmp
out
or
subb
add
pop
xchg
in
xor
ret
cmp
dec
aas
mov
inc
lcall
ds
ss
pop
xchg
mov
or
adc
call
outsb
clc
inc
stc
int3
xchg
or
xor
push
sub
inc
pop
mov
test
test
jnp
mov
push
mov
fadd
push
push
scas
out
test
pop
imul
bnd
jle
sbb
jp,pt
cmp
rcrl
mov
and
lret
ljmp
insb
add
mov
mov
lods
xor
inc
fbld
in
xchg
stc
or
add
adc
daa
das
cwtl
sub
push
or
mov
jg
pop
jne
and
dec
ja
or
cmpsl
sbb
push
shlb
lds
cld
jns
or
imull
mov
inc
xchg
mov
fs
mov
cmp
jg
lcall
jl
stos
cld
mov
mov
out
lea
mov
rolb
dec
mov
mov
notl
cmp
jbe
out
jg
xchg
xchg
inc
pop
mov
lock
mov
movsb
shll
test
inc
mov
test
xor
bnd
or
ljmp
rorl
xchg
or
pop
pop
mov
sbb
call
and
clc
lods
add
lea
push
lret
pop
out
xlat
shll
jne
add
xorl
xor
cmpsl
insb
add
sub
and
idiv
js
nop
mov
cmp
lahf
js
in
jle
jecxz
jge
xchg
or
jle
cmpsl
pushf
pop
and
mov
inc
push
das
aas
rorl
cmp
shlb
cs
pop
cmpl
mov
pop
jnp
psraw
cltd
pushf
std
divl
mov
add
mov
pop
or
jle
aaa
sti
jle
xor
notb
test
outsb
jge
cwtl
push
movsb
inc
xchg
test
cmp
push
pop
adc
xorb
fadds
lea
test
mov
pop
out
jb
js
loopne
xor
std
dec
iret
imull
and
out
ds
mov
pop
jo
mov
popf
gs
in
lds
xor
pop
lock
and
repnz
ds
int3
mov
loopne
shlb
out
jbe
jns
mov
mov
push
pop
enter
mov
push
call
shlb
cmp
sbb
and
mov
pop
mov
clc
in
dec
push
xor
mov
inc
rcrl
pop
into
aad
pusha
cmp
mov
xchg
adc
cmp
xrelease
outsb
cwtl
sbb
mov
loop
scas
sub
test
stc
aaa
mov
ja
inc
push
rorl
adc
add
cmp
jae
sub
cltd
mov
enter
mov
dec
jo
cmp
pusha
js
push
jno
jl
aaa
push
stos
push
iret
and
cmpsl
xchg
inc
stc
inc
imul
pushf
jbe
xchg
fbld
out
das
or
fwait
data16
stc
dec
pushf
jl
andl
lcall
outsb
cwtl
sub
mov
mov
push
push
ja
out
jno
xchg
sarl
inc
cmp
sbb
xchg
subb
or
and
push
dec
mov
call
fistpll
pop
imul
dec
xor
cmpsb
test
pop
push
sbb
cmp
hlt
inc
sub
or
add
lods
loop
add
movsl
xchg
mov
and
in
popa
xchg
sbb
add
sub
popf
fwait
sarl
pop
inc
mov
fsubs
sbb
icebp
adc
ret
xchg
movsl
and
mov
lcall
rolb
inc
fnstsw
adc
cmp
mov
sbb
sub
xchg
pop
fimull
and
adc
arpl
jno
adc
ret
push
stos
sub
out
jecxz
adc
sub
out
mov
js
sbb
mov
xchg
xchg
loope
std
and
and
aad
outsb
or
mov
les
cmpsl
ss
outsl
insl
pop
shrb
adc
xchg
mov
jmp
jns
fnstcw
jbe
xlat
xchg
mov
push
jge
pushf
incl
int3
mov
fisubrs
fcmovu
sbb
mov
sub
fsubs
daa
fdivrs
mov
dec
push
dec
inc
jge
xor
xor
mov
cmp
inc
xchg
push
loopne
insb
mov
dec
jnp
adc
or
mov
sbb
xor
jle
lock
adc
jae
jmp
cltd
popa
cmpsb
popa
push
sbb
inc
shr
sub
and
inc
fisttpll
cli
addr16
or
cwtl
lods
xlat
les
jne
jecxz
push
jl
nop
push
int
lret
stos
lods
leave
push
and
xchg
fdivrl
add
mov
jb
sbb
dec
sub
dec
or
arpl
mov
push
push
ljmp
jns
mov
push
xchg
sti
mov
ja
stos
cli
cli
mov
dec
ret
std
mov
cltd
sbb
jbe
testb
imul
jns
rol
or
pusha
icebp
pusha
lods
jnp
xor
xchg
sub
push
add
push
push
xor
push
lea
testb
fcom
in
or
xor
pop
shrb
fimull
xchg
ret
fstpl
lahf
add
insb
js
jb
cmp
lock
stos
xchg
pushl
cmp
mulb
popf
push
mov
and
sbb
xor
mov
sbb
dec
mov
push
fdivs
push
mov
loop
cld
mov
repnz
pop
lret
jb
ret
sti
push
inc
xor
sti
sbb
in
pushf
xor
sub
xor
jae
nop
xchg
adc
sub
clc
mov
shlb
movsb
jmp
cwtl
mov
mov
punpckhdq
inc
mov
dec
lidtl
inc
xor
adc
pop
test
loopne
fsub
popa
jbe
and
mov
and
addl
add
lock
es
subb
sub
mov
pusha
jg
adc
pop
adc
mov
cmp
insl
xchg
jp
and
out
orl
into
adcl
add
push
mov
jbe
pop
sub
nop
clc
sti
movsl
into
lea
add
add
out
loope
mov
shrl
push
and
icebp
stos
cmpsb
jmp
daa
xchg
jg
cld
inc
adc
dec
mov
adc
mov
xor
pop
rorb
cs
pop
add
imul
and
mov
dec
scas
out
sahf
aas
push
xor
sahf
pop
or
mov
ret
mov
outsl
repz
xor
lahf
and
insl
sub
sbb
stos
push
hlt
aaa
fwait
in
add
popa
jb
inc
scas
gs
mov
stc
out
xchg
andb
inc
test
inc
fldcw
mov
dec
xlat
mov
sub
fistpll
xor
xor
pop
push
dec
cmp
shr
pop
ret
scas
in
clc
ret
addr16
jle
andl
outsb
push
inc
inc
pop
mov
test
inc
das
movsl
in
adc
subl
fwait
and
stos
aas
fimuls
es
sbb
lret
mov
push
sub
inc
pop
rclb
jecxz
bound
xlat
pop
pop
xor
jmp
push
andb
sbb
imul
fs
jge
int
push
push
test
cli
adc
adc
sub
ss
and
xor
push
mov
lods
aad
in
scas
pop
adc
lcall
xchg
or
rcrl
addr16
adc
cmp
imulb
out
sbb
sar
in
fwait
pushf
loopne
mov
inc
in
jmp
sbb
inc
xorb
rorb
xor
fbld
aas
popa
fs
mov
shrb
or
adc
imul
push
or
mov
jle
and
inc
repz
cmp
mov
cmp
sub
dec
lret
inc
das
je
lret
xor
sbb
mov
lock
aas
push
mov
pop
notl
test
pop
sbb
in
aam
cmpsb
ficompl
mov
pop
testb
movl
push
push
dec
sti
adc
dec
sbb
pop
jne
rcrl
inc
ljmp
xchg
pop
scas
insl
out
decl
jg
pop
sbb
mov
push
shlb
fnstsw
je,pn
in
and
rcrb
cltd
mov
iret
cmpsb
movsl
rolb
jge
adcb
shrd
je
sbb
pop
lods
hlt
stos
scas
mov
pop
pop
jmp
fmuls
aaa
fs
pop
adc
mov
jmp
nopl
xchg
xor
movsb
std
nop
add
and
data16
lods
data16
jb
enter
or
push
andl
stos
sbb
das
jg
sub
and
inc
nop
mov
jle
cmpsl
fldenv
sub
imul
mov
loopne
lret
ljmp
mov
mov
or
fmuls
out
pop
and
pop
insb
jge
lods
mov
dec
lret
jns
sub
sbbb
cmpsl
add
xor
in
aam
cmp
pop
or
mov
and
mov
fcomps
addr16
jae
std
decl
addb
pop
xchg
lcall
jns
push
mov
cmp
popf
mov
and
push
ljmp
gs
pop
movsb
sbb
out
cltd
in
gs
aam
ds
push
push
jg
repz
jecxz
sbb
arpl
cld
ljmp
pop
and
lret
dec
add
pop
adc
mov
out
sbb
std
push
aaa
inc
or
sub
sti
inc
jp
ret
popa
and
lret
xchg
popa
jno
lods
dec
call
test
or
dec
cmpl
push
dec
jnp
push
push
mov
sbb
arpl
ret
fcmovnu
dec
or
pop
adc
outsl
les
lret
hlt
and
cmp
movsl
cmp
mov
fisubrl
in
mov
adc
or
fsubr
jae
push
push
pop
push
mov
mov
dec
pop
pop
jne
sub
out
imul
sti
roll
mov
aas
sbb
jmp
pop
cli
cmp
pop
in
leave
mov
push
cltd
xchg
lret
sbb
shl
push
and
cld
cmp
in
roll
and
aas
xor
sub
out
push
xor
jge
xchg
push
or
insl
add
test
stos
fs
mov
sar
cmp
jle
add
enter
mov
sbb
push
jl
das
mov
xchg
insb
xor
mov
ja
pop
sar
fdivrs
popf
dec
xchg
out
xchg
or
inc
cmpsl
dec
xor
jno
pusha
add
daa
cmp
cmpb
pop
shl
add
jae
sub
repz
repz
aad
push
dec
lock
sub
aad
and
push
sbb
jle
pop
dec
je
push
jmp
lret
mov
popf
xchg
lahf
jge
aas
fcmovbe
ds
dec
dec
fsub
in
les
push
stos
pop
adc
adc
lcall
push
mov
fcoms
pop
jns
xor
dec
movsb
clc
addr16
adc
jg
xchg
ds
aaa
push
je
xchg
insl
jmp
test
das
enter
stos
sub
jae
pushf
shll
and
int3
jle
sbb
mov
adc
aad
repz
into
scas
aas
sti
mov
in
leave
dec
fprem
mov
mov
pushf
fisubrl
aad
test
cmp
jecxz
inc
mov
orl
mov
mov
mov
cmp
inc
fstpl
add
mov
repnz
mov
jno
mov
js
cmp
adc
mov
sub
mov
mov
xchg
sub
fisubl
lds
xor
xlat
sub
shlb
xchg
cltd
jmp
dec
faddp
mov
push
push
add
roll
lahf
mov
iret
xchg
aas
ret
cmp
pop
outsb
pop
mov
test
cwtl
add
and
fpatan
je
inc
pop
jl
ficomps
leave
pop
mov
sub
and
jns
enter
sbb
push
stc
xlat
adc
fmuls
cltd
jg
call
ret
or
sub
adc
sar
sub
sarl
add
fs
jnp
inc
sbb
ds
shl
dec
test
loop
std
in
jp
inc
cmc
dec
pushf
jae
mov
outsl
mov
mov
dec
sarb
xor
or
inc
fstpl
insl
mov
jp
or
sub
push
jge
add
idivl
fs
jae
daa
push
or
jne
cmp
cmp
cmp
sub
push
xor
and
ljmp
in
enter
aas
iret
out
jl
mov
cmpsb
outsb
mov
xchg
mov
daa
sbb
jle
pop
rcrl
xlat
or
gs
ja
jecxz
adc
and
add
adc
enter
lock
jne
loop
sbb
and
mov
sbb
loop
pop
pop
adc
cmp
mov
and
xchg
xchg
cmpsl
mov
jecxz
int3
mov
je
pop
movsl
loop
in
push
jp
in
push
sub
xchg
add
dec
imul
shr
inc
out
out
jmp
or
cld
jb
cmpps
sub
sbb
scas
ss
bound
jo
in
test
in
and
nop
or
sub
out
insb
aad
push
fnsave
cmp
outsb
push
adc
mov
and
mov
mov
jecxz
sbb
mov
outsb
pop
cmpsl
mov
jb
rcrl
cmp
rorb
out
dec
push
ret
ss
or
mov
mov
mov
lock
xchg
ljmp
enter
fisubs
mov
push
call
or
test
adc
xchg
xchg
ret
sahf
add
dec
ja
insl
sbb
lahf
cmp
adc
dec
pushf
lret
add
movsb
xchg
mov
add
and
je
stos
dec
adc
sbb
pop
push
push
sbb
notl
and
mov
pushf
cmpsb
mov
test
jns
lds
int3
iret
loope
mov
aad
jmp
cmp
dec
sub
lock
sbb
rcrb
inc
fistpll
shll
pop
mov
push
sbb
movsl
es
mov
cmp
ds
jmp
fwait
or
pop
data16
mov
cmp
add
jae
jo
test
pop
mov
loope
pusha
jmp
stos
pop
stc
lea
jo
sti
jl
fildll
incl
pop
jecxz
sbb
add
mov
jmp
or
xchg
in
cmpsl
jg
inc
dec
push
test
mov
xor
bound
pop
pop
int
pop
or
or
and
mov
cmp
mov
jle
out
pop
aas
jmp
lahf
jmp
mov
push
xchg
mov
mov
or
adc
repnz
sub
sub
jmp
es
js
cmpsl
add
push
fsqrt
jp
loopne
add
pop
call
inc
mov
and
mov
pop
nop
mov
incb
inc
pop
xchg
fstp
and
or
inc
adc
jp
and
dec
and
mov
daa
lods
mull
xchg
push
or
sbb
pop
and
mov
or
stc
jecxz
push
negl
inc
out
in
test
xchg
arpl
jle
fsubs
dec
sub
dec
xchg
xchg
scas
mov
and
sub
inc
mov
xchg
inc
inc
mov
inc
std
pop
int3
mov
lcall
jmp
mov
cmp
dec
popl
gs
lret
sahf
sbb
push
inc
xlat
pop
outsb
movsl
fcompl
aad
mov
pop
mov
outsb
or
out
testl
mov
jnp
out
inc
call
lcall
inc
xor
inc
lea
ret
push
inc
or
scas
lods
test
mov
sub
js
insl
in
push
push
inc
xor
xor
mov
aam
fiaddl
loope
cmp
arpl
rclb
in
cmp
fucom
or
std
scas
jmp
sub
push
hlt
insl
push
mov
pop
inc
ljmp
rcrb
int3
cmp
cmpsl
sub
jmp
mov
lahf
mov
xor
test
lock
xor
outsl
dec
dec
test
and
movhlps
ret
xchg
inc
daa
and
pop
push
lcall
je
pop
out
lahf
jmp
mov
loopne
test
iret
xorl
mov
stc
jno
mov
jmp
jge
sub
mov
std
xchg
sub
arpl
inc
nop
aad
inc
mov
and
scas
fsubl
sub
loope
daa
jg
in
pop
pusha
jne
lret
shlb
sahf
xor
sbb
pusha
lea
cs
xlat
idivl
push
repnz
and
xlat
hlt
jmp
or
pop
ret
mov
fstpl
test
xor
sbb
notl
adc
and
test
call
push
jo
out
daa
xor
loopne
lods
lret
inc
sub
mov
in
push
push
mov
aam
dec
lea
or
lods
push
aad
out
jmp
push
fistpll
lahf
rcrb
cmpsb
or
cmp
push
sub
ds
pop
les
jge
lret
out
dec
subl
repz
inc
mov
clc
orl
sub
les
xor
imulb
pusha
pop
inc
repz
test
cmc
cmp
repnz
jecxz
pushl
adc
mov
mov
jbe
mov
cmp
fnstsw
mov
hlt
aam
enter
xorb
mov
test
mov
mov
fstps
stc
dec
inc
xlat
or
cs
cmp
cmp
jnp
loopne
add
ds
pop
cmp
arpl
adc
jl
adc
loopne
movsb
push
add
push
dec
ss
fisubrs
mov
push
aaa
xor
adc
stc
insl
cmc
lock
push
rorb
sbb
or
and
cmp
dec
fdivrp
stos
mov
gs
rcrb
inc
xchg
shr
mov
dec
add
movsb
adc
cmp
xor
sub
or
in
arpl
movsl
cli
dec
decb
clc
int
repnz
hlt
fisubrs
cmpsb
test
pop
cmp
add
adc
cmp
repz
xlat
shlb
xorl
pop
mov
and
xor
push
dec
fs
pop
or
aad
fistpll
xchg
bound
dec
icebp
in
push
push
fstp
adc
xchg
push
lahf
imul
xlat
push
mov
mov
xchg
icebp
cmp
cwtl
sub
mov
xchg
xor
sub
xchg
adc
dec
mov
aas
js
out
jmp
scas
xor
dec
add
mov
pop
movl
xor
jae
mov
sbb
mov
sbb
mov
jg
jno
dec
or
sub
and
adc
cld
jp
push
push
xchg
sub
pop
rclb
inc
std
push
xor
and
and
pop
mov
sbb
mov
pushf
ljmp
out
pop
jno
inc
mov
and
nop
out
addr16
mov
iret
jo
cli
lahf
insb
push
adc
lcall
rorb
add
and
push
adc
shlb
cmp
jg
adc
inc
int
pop
loopw
js
adc
xor
xor
sbbl
add
inc
inc
cwtl
adc
xchg
scas
pop
inc
or
out
stc
mov
ljmp
icebp
js
outsl
xchg
sbb
mov
jge
jne
ficoms
rcrl
hlt
sub
add
mov
in
pop
dec
iret
aas
dec
pop
jb
xorb
insb
jno
jbe
xor
adc
fnstenv
sub
add
test
mov
inc
inc
scas
mov
aam
andl
mov
add
rclb
mov
shrb
std
ror
aaa
and
negl
and
pop
les
pop
fisubrs
pop
push
iret
int3
icebp
out
cwtl
in
std
jmp
inc
jecxz
fsub
xchg
push
jge
push
ss
pop
sahf
imul
dec
addb
dec
adc
das
sub
xchg
pushf
fmul
sub
arpl
stos
push
in
stc
and
loopne
je
clc
and
lea
mov
xchg
jnp
mov
push
das
bound
sub
cmp
loope
iret
xchg
xchg
popa
dec
add
dec
or
nop
mov
mov
and
imulb
fs
ficoms
call
or
lods
sti
mov
mov
xchg
hlt
popf
movsb
int3
dec
fmuls
lds
ss
lret
xchg
outsb
pop
or
inc
pop
jg
fadds
lock
js
mov
fidivrl
cmp
cmp
dec
and
xchg
into
fxch
or
xchg
jge
mull
repnz
fisttps
aad
push
es
push
push
push
aam
lahf
and
jg
out
or
xchg
inc
mov
pop
sub
loopne
fisttpll
dec
cmp
push
scas
hlt
mov
repnz
and
inc
or
lea
test
xor
out
cld
out
pop
nop
push
mov
or
cli
mov
dec
cs
cmpsb
jne
inc
mov
pop
cmpb
pop
or
arpl
fsts
loopne
fidivrs
dec
dec
hlt
cmc
cmp
test
cmc
jo
sbb
sub
movsb
sti
push
mov
xchg
cld
cmp
dec
pop
ret
ret
mov
and
cmp
je
scas
push
lret
hlt
xchg
lods
out
test
push
pushf
loopne
push
insl
xor
fdivs
inc
xor
and
das
xchg
std
ljmp
test
js
jl
pop
scas
cmp
scas
pop
push
testl
es
xchg
adc
xor
push
fmull
pop
pop
daa
sub
cmp
movsl
imul
rcrb
cmp
pop
pop
fstpt
rol
popa
jbe
shrb
ss
jno
push
add
push
out
or
lret
xor
scas
outsl
xor
mov
pop
xchg
sbb
loop
jecxz
xor
and
adc
cmp
call
mov
push
mov
fdivrl
cwtl
push
sub
mov
mov
mov
sub
sub
int3
push
lea
addr16
lea
dec
inc
sub
mul
and
push
lea
xchg
pop
out
aad
ja
adc
pop
enter
xor
push
adcb
daa
mov
in
jo
lds
xchg
push
push
mov
mov
sahf
adc
inc
sahf
outsl
jp
mov
push
mov
cld
sub
bound
sbb
int3
daa
mov
loop
pop
mov
sub
in
int3
fbstp
out
add
mov
cmc
mov
popa
sarb
mov
bound
mov
jo
sub
mov
in
or
jnp
notl
in
sub
mov
pusha
or
xchg
std
xchg
dec
push
pop
xchg
or
pushf
pop
xor
inc
test
enter
js
adcl
arpl
pop
push
dec
lds
fstps
inc
mov
jns
mov
mov
dec
adc
scas
pushf
pushf
xor
into
movsl
inc
xchg
and
dec
mov
pusha
mov
cwtl
inc
mov
loope
movsb
jp
outsb
push
mov
push
out
fcomip
add
mov
repz
ficompl
rol
jg
into
adc
sub
loopne
and
stos
dec
mov
adc
shr
push
fwait
dec
xchg
mov
cmp
push
das
mov
fiadds
arpl
mov
faddl
fbstp
scas
adc
ret
xchg
test
and
dec
ja
icebp
shll
cmpsl
incb
sbb
sarl
vcvtpd2ps
and
or
ret
cmpsl
mov
adc
out
lahf
and
jbe
fstp
dec
adc
out
xchg
add
adc
mov
cmp
movsl
add
push
les
test
sbb
test
lods
int3
mov
fcoms
jg
pop
inc
lahf
push
adc
fnstcw
outsl
inc
jmp
lods
mov
outsl
xchg
pop
add
repnz
in
es
sbb
out
bound
clc
xor
inc
pop
int3
xchg
inc
mov
jae
shrb
inc
repnz
sub
outsb
lret
mov
pop
mov
das
jge
fldt
dec
add
xchg
xchg
into
out
lret
dec
cmpsl
mov
xor
pushf
jo
jb
xor
cwtl
xchg
mov
aam
push
jb
push
iret
push
push
daa
sub
out
dec
xchg
enter
mov
pushf
call
xor
mov
mov
lret
and
shr
jle
push
clc
leave
mov
mov
shll
sbbb
or
pop
loopne
sbb
adc
inc
std
popa
ret
jmp
pushf
adcb
shll
push
adc
es
xor
xchg
adc
push
leave
pop
jge
fstps
inc
test
cmp
push
mov
sti
mov
pop
movsb
mov
mov
jecxz
xor
lahf
xor
test
cmp
mov
pop
push
dec
sub
push
mov
ds
out
test
pop
push
fdiv
out
inc
dec
fdivrs
mov
jo
xchg
xchg
call
push
add
paddusw
mov
cmpsb
addr16
ljmp
mov
mov
mov
mov
inc
xor
aam
push
mov
jne
movl
ffreep
mov
sub
inc
mov
in
test
dec
icebp
and
add
jg
in
xchg
pushf
mov
pop
inc
jo
movsb
lds
loop
sub
jecxz
enter
gs
sar
ret
sub
shll
not
mov
jecxz
xchg
xlat
fsubr
imul
add
and
std
addr16
add
mov
lods
mov
adc
jno
lods
xor
fiaddl
push
ja
cmp
scas
jno
out
lds
cmp
repz
mov
lods
and
fmul
mov
push
and
scas
lret
pop
xchg
and
cs
pusha
add
bound
or
mov
mov
xchg
aaa
pop
bswap
xchg
sub
fdiv
jb
movsl
push
mov
daa
xchg
sti
stc
inc
add
cmp
ss
adc
jns
movsb
imul
pop
pop
data16
dec
stc
and
jnp
stc
xchg
and
push
incl
addr16
xor
inc
pusha
mov
push
push
xor
stos
mov
add
loopne
dec
arpl
bound
mov
xchg
sbb
inc
xchg
inc
pop
leave
add
in
repz
xor
movsb
rolb
push
mov
push
xchg
hlt
adc
jb
xchg
fwait
pushw
jecxz
add
xchg
sbb
jl
ficoml
hlt
enter
outsl
xchg
push
cld
inc
andb
lcall
mov
daa
ja,pt
xor
ja
cmc
dec
jmp
out
dec
adc
sbbb
cmc
out
pushf
nop
fsubl
pop
jns
stc
mov
ss
sbb
push
icebp
or
jo
out
mov
movsb
pop
call
or
fldcw
outsl
dec
iret
xchg
mov
leave
mov
popw
mov
adc
add
fimuls
orl
push
xchg
callw
inc
sbb
pop
sbb
jno
fs
aad
out
icebp
std
and
adc
rcrl
jmp
sbb
dec
rcl
inc
rcrb
cmpsb
adc
xlat
out
mov
jle
movsb
adc
push
mov
xor
pop
sahf
adc
nop
push
mov
pop
punpcklbw
pop
movsb
fildl
pop
imull
xchg
cmpsl
sub
sbb
repz
adc
mov
jp
cmp
sub
jg
mov
lock
and
mov
or
lcall
pop
divl
adc
mov
test
rep
adc
jl
mov
mov
cmpb
mov
gs
ja
dec
sub
loopne
sub
push
sub
movsl
mov
mov
out
push
fwait
push
fidivl
mov
rcrb
out
lcall
pusha
mov
js
mov
dec
imul
int3
and
xchg
mov
pop
adc
xor
jmp
imul
push
icebp
add
cli
mov
insl
sub
pop
out
adc
imul
data16
xor
cwtl
sarl
fwait
pop
cmpsl
cltd
repnz
pmulhw
gs
aad
aaa
jle
sti
pop
inc
push
xlat
gs
inc
xchg
int
shrb
rol
push
lahf
add
pop
mov
lcall
push
add
lods
mov
enter
cmp
dec
leave
clc
cwtl
aas
cld
addr16
decl
mov
inc
push
push
pop
sets
mov
ljmp
nop
cld
stc
cmp
sbb
ja
xchg
jo
jne
push
pusha
div
cmp
sbb
xchg
jmp
lock
fimull
push
jmp
arpl
xchg
das
push
adc
insb
dec
int3
sbb
icebp
cmc
js
xor
jle
push
shl
push
fsubs
and
outsb
xchg
rcrl
lds
sti
sbb
das
xchg
pop
subl
dec
sub
std
adc
lret
add
js
fists
cmpsl
sub
je
les
outsb
ret
loope
mov
xchg
mov
lds
cmp
and
les
pop
cmp
cld
mov
jo
lahf
fiaddl
jne
xor
jg
data16
xor
mov
mov
inc
out
or
pop
cmpsl
add
sbb
sbb
dec
cltd
lret
cmp
testb
leave
and
and
int
pushf
repz
dec
imul
mov
outsb
je
jge
lods
fdiv
pop
xchg
adc
outsb
sti
lods
dec
aas
push
cmp
fcoms
das
das
sub
stc
and
xor
push
cld
mov
out
scas
pop
cmp
rolb
pop
adc
jno
cmp
addr16
lods
xor
and
xor
insb
bound
sbb
xchg
jecxz
cld
adc
insb
jp
push
push
jp
fcoml
ret
adc
shll
outsl
adc
fldln2
dec
mov
inc
pushf
push
insb
xor
sbb
dec
cmp
mov
jno
mov
mov
jo
xor
pop
sub
mov
jnp
popf
fwait
jle
cli
inc
push
outsl
push
int3
mov
mov
jl
adc
sub
movsb
pusha
cli
cmp
into
popa
jmp
stc
pop
cltd
pop
lret
sub
pop
mov
fisubrs
ret
inc
scas
adcl
mov
dec
outsl
dec
lds
push
xor
jmp
aam
xor
dec
shlb
call
mov
outsl
fadd
lods
incb
stc
int3
movsl
xchg
loop
stc
mov
sbb
insl
jge
icebp
mov
mov
mov
pop
les
pop
mov
outsl
push
mov
and
sbb
mov
mov
xorb
loop
sbb
fistpl
mov
sbb
fisubrs
jg
push
insb
mov
imul
loop
sub
push
icebp
rcrl
dec
ljmp
and
sbb
loopne
push
shr
jmp
xchg
jnp
clc
addr16
adc
adc
push
scas
nop
sub
mov
xor
jo
loopne
mov
lods
xchg
jmp
inc
fisttps
insb
fs
mov
sub
pop
mov
dec
mov
repnz
jecxz
flds
inc
int
mov
popa
lahf
xchg
sbb
mov
int3
cs
cltd
dec
xchg
dec
mov
mov
jbe
call
loope
push
xchg
aaa
xor
push
sub
ret
int
popa
mov
push
or
cmc
jnp
push
mov
pop
sub
add
cmp
mov
dec
jb
leave
mov
loopne
inc
mov
insl
hlt
lea
xorb
lds
mov
and
mov
rcrl
inc
in
gs
pop
push
sbb
push
bound
loopne
sahf
stos
das
jge
jae
in
scas
rcll
lods
shrl
call
pop
into
inc
inc
arpl
add
xchg
outsl
mov
mov
fs
and
mov
mov
pushf
and
rclb
cmp
mov
stos
notb
sbb
enter
stos
push
mov
clc
sub
and
pop
test
fcmovne
pop
push
dec
ds
push
mov
mov
lret
cltd
mov
cmp
xchg
mov
push
xlat
or
fcom
insb
and
imul
mov
scas
mov
loop
inc
sbb
aam
add
jg
inc
dec
jp
popa
aam
push
push
cmpsb
stos
cmp
mov
sbb
hlt
mov
mov
jl
pop
movsl
arpl
gs
ss
jge
or
shrl
movsb
rorb
mov
mov
shrl
mov
fidivrl
pop
enter
pusha
sbb
out
mov
push
mov
cmp
in
lods
pop
pop
xchg
inc
jbe
call
jns
inc
pop
test
in
add
fcmovu
sbb
data16
dec
ja
packssdw
arpl
clc
xor
mov
lret
cmp
mov
repnz
adc
mov
dec
pop
inc
sub
xor
xchg
inc
cmpsb
enter
outsb
and
mov
aas
insl
sub
jbe
pop
loop
mov
mov
xor
xchg
int3
mov
insb
push
shrl
inc
dec
jecxz
pushf
in
mov
push
aas
adc
addr16
lret
pusha
sub
push
ss
push
sbb
aaa
fists
push
mov
mov
mov
in
xchg
push
int3
icebp
cs
push
xchg
lahf
cltd
mov
fsubr
mov
pop
popf
lods
or
push
jne
cmp
push
out
mov
sti
mov
jecxz
ss
dec
sub
test
and
arpl
xchg
jns
lret
sub
dec
dec
xchg
xchg
addr16
xor
jmp
sub
incl
jbe
push
gs
xchg
out
jp
movsl
and
jg
popl
sub
xchg
or
inc
out
dec
sbb
xchg
lcall
cmpsb
inc
push
hlt
out
mov
and
adc
call
cmp
roll
push
int3
mov
insl
jnp
adc
pusha
cmp
fcmovu
mov
push
fidivs
inc
mov
dec
mov
out
inc
mov
sbb
int
sbb
add
mov
add
arpl
mov
enter
add
or
data16
lds
xchg
add
hlt
fldt
pusha
fwait
push
and
mov
test
lret
xchg
push
inc
lret
lods
in
dec
dec
out
lcall
and
inc
outsl
mov
cmp
int
mov
xor
icebp
inc
test
test
jne
das
bound
add
xchg
mov
loopne
fistps
testb
adc
adc
lret
js
rorl
or
icebp
mov
mov
les
push
adc
icebp
pushw
imull
and
scas
popa
mov
imul
roll
jmp
gs
pop
fsin
fwait
mov
je
and
daa
int3
dec
xor
xchg
mov
aad
leave
lret
mov
sahf
mov
mov
lea
push
adc
mov
pop
mov
addr16
or
negb
and
ret
fildl
push
xor
ljmp
dec
rcll
cmpb
inc
pop
loope
fistpl
es
inc
cmp
out
push
mov
cli
fcomps
cmp
mov
inc
xchg
inc
std
icebp
into
and
push
test
pop
dec
popa
jmp
inc
dec
enter
adc
es
mov
rolb
xor
push
negl
push
repz
call
rcrb
push
nop
insl
push
inc
outsl
std
stos
iret
loope
and
xchg
movsl
loop
mov
lods
imul
bound
scas
dec
rorl
inc
in
je
push
aam
iret
cwtl
mov
outsl
stos
test
je
roll
xchg
or
mov
bnd
repnz
dec
pop
cmpsl
sahf
pop
dec
mov
fisttpll
push
test
fwait
push
scas
stos
jle
push
mov
ret
push
sub
sbb
dec
cmp
adc
std
pop
js
cmpl
test
in
inc
jle
push
or
out
js
or
idivb
and
xchg
in
shlb
nop
inc
xchg
stos
cld
jmp
loop
xchg
or
sub
sbb
mov
and
inc
je
xorl
dec
sbb
leave
daa
test
daa
sbb
pop
add
aaa
testl
repz
shll
mov
dec
sbb
inc
push
in
sahf
dec
mov
mov
sub
sub
add
inc
or
les
stos
or
xchg
lods
push
mov
testl
dec
ret
pop
mov
mov
push
mov
jmp
jno
mov
mov
inc
shr
mov
sub
frstor
roll
push
sub
or
and
push
lods
xchg
sbb
jp
adc
xorl
cmc
or
jl
xchg
xor
mov
xorl
lret
inc
sub
or
adc
imul
xchg
scas
lods
mov
pop
or
ret
xor
test
int
inc
bound
leave
or
sub
ss
icebp
sahf
sub
ss
mov
lret
mov
aad
and
dec
sub
push
mov
mov
rcrb
out
mov
dec
das
fsubs
sub
fldenv
in
es
int3
mov
call
or
cmp
ja
rcrb
cmc
lahf
push
dec
mov
mov
mov
and
jo
sbb
in
jmp
mov
bound
shr
pop
lret
cmp
sti
cli
sbb
sbb
xchg
test
notl
jno
outsl
in
insb
ret
xchg
out
sahf
xchg
outsb
pop
and
adc
leave
jmp
aad
pop
or
mul
je
lret
inc
inc
lods
push
adc
insb
aaa
fdivl
insb
hlt
popf
int3
push
mov
lock
repz
sti
xchg
mov
mov
outsb
je
jns
adc
aas
jge
sahf
sbb
test
jmp
test
scas
repz
mov
repz
ss
fldcw
push
fisubrs
cltd
jmp
mov
pop
and
cltd
popf
jg
add
cmp
push
loope
sbb
cs
mov
sbb
push
mov
lods
push
cltd
mov
adc
pusha
daa
pop
dec
cmp
test
sub
filds
in
ja
jnp
add
xor
or
or
cmp
cmpsb
insb
inc
ljmp
arpl
mov
add
mov
stc
and
cmpsb
cld
sub
pop
push
add
push
xor
test
insb
sbb
cltd
inc
xor
callw
push
inc
xor
pop
lahf
stc
inc
repz
test
jno
loop
sbb
sbb
xchg
cwtl
sahf
scas
out
lcall
mov
inc
jmp
inc
js
or
jne
iret
and
imul
dec
repnz
jns
mov
leave
mov
dec
sub
cmc
scas
mul
jg
add
adc
pusha
icebp
out
sub
jbe
rolb
xchg
mov
pop
int
push
pushf
ds
dec
pop
out
xor
push
jle
xchg
inc
sub
and
jecxz
mov
icebp
and
or
in
sbbb
scas
inc
aaa
testb
sub
scas
or
cltd
add
in
ds
andl
pushf
adc
push
fistpll
cmp
int
cmc
fbstp
lret
int
dec
mov
dec
cmp
xor
sti
push
xor
push
xchg
mov
imul
insl
adc
dec
js
sub
and
add
jecxz
fisttps
insl
movsl
adc
fmuls
shl
adc
cmp
lods
lods
pop
fdivrs
lea
and
xor
jp
test
dec
in
aad
sbb
cltd
jo
testl
addr16
fscale
mov
mov
ss
dec
pop
mov
shlb
sub
inc
or
push
insl
iret
cmp
pop
mov
leave
pop
cwtl
jb
loopne
add
mov
mov
dec
loop
mov
jmp
inc
or
jmp
enter
push
dec
mov
movsl
mov
repnz
dec
jp
jne
push
and
xlat
out
mov
dec
push
scas
jns
int3
jb
adc
pop
int
xchg
clc
jae
add
imul
push
cwtl
xchg
xchg
lods
ljmp
test
push
xor
pop
dec
sbb
ss
mov
popa
call
mov
sti
fimuls
ror
sbb
adc
dec
div
mov
fsubs
push
filds
cld
imull
mov
pop
mov
xor
imul
and
ss
cmp
cmp
mov
lcall
lret
mov
mov
push
pop
xor
xchg
ret
clc
je
xchg
cmp
dec
stc
sbb
or
gs
xchg
enter
cmp
mov
pop
mov
sar
jae
add
int
sub
cli
icebp
jmp
mov
pop
addr16
stos
push
and
fsts
test
mov
pusha
cmp
jmp
or
pop
test
xchg
out
adc
sub
cltd
mov
pop
loope
jns
fwait
xor
stos
xchg
xchg
pop
lret
jno
aad
stos
dec
lret
jp
cmpsl
lock
jo
jge
in
roll
shll
mov
lods
ss
pop
movsb
mov
mov
into
je
outsl
jmp
xor
sbb
fisubrl
dec
les
fwait
mov
jecxz
lcall
outsb
stc
fwait
mov
jmp
loop
stos
jne
push
and
xchg
add
repnz
adc
add
repz
lret
push
or
orb
add
int
pop
mov
andl
sub
inc
push
in
outsl
push
inc
jecxz
js
loopne
push
lcall
std
out
fs
xchg
mov
mov
and
stos
repnz
xor
mov
jb
xor
sahf
xor
jnp
in
adc
pop
mov
inc
mov
mov
pusha
xor
pusha
addr16
std
hlt
aam
aaa
jae
jb
xor
popa
push
mov
inc
stos
add
mov
mov
xchg
sub
sub
es
and
xor
outsl
ja
daa
addr16
test
dec
adc
push
adc
outsb
push
push
movntq
jge
fndisi(8087
int
fisubs
sahf
push
int
jns
inc
bswap
in
xor
mov
icebp
divb
add
in
iret
loope
xchg
imul
cmp
jp
or
sbb
imul
sarl
aad
xchg
aas
nop
xchg
jp
lahf
mov
stos
ret
lret
fidivrs
insb
shrb
dec
lods
inc
inc
adc
sti
xor
or
iret
pop
push
and
ret
or
inc
movsl
enter
pop
xor
pushf
icebp
pop
pop
out
mov
clc
sbb
divl
jae
sahf
adc
sbb
adc
jns
jno
loopne
clc
pop
sub
or
xchg
pop
fdivrs
fistl
lods
pop
mov
rclb
lret
or
cmp
mov
and
and
or
xor
sub
stc
xor
inc
inc
fmull
movsb
mov
mov
jbe
sbbl
pop
fnstenv
xchg
push
aam
inc
sub
nop
mov
pop
cs
imul
aaa
idiv
into
insl
out
cltd
mov
mov
je
les
out
ja
cmp
fdivs
leave
ffreep
pop
stos
mov
mov
test
stc
daa
or
in
dec
flds
xchg
out
lods
sub
xlat
xlat
inc
lods
loope
mov
fs
sar
mov
pop
lock
xor
mov
or
cwtl
mov
dec
sbb
push
jbe
mov
aad
adc
push
mov
mov
pop
shl
fstps
xor
pop
dec
imul
cmpsb
add
std
fs
imulb
inc
add
and
mov
sub
mov
or
repz
aas
add
push
adc
sar
pop
add
lea
ja
pop
pushl
sub
adc
clc
adc
andb
data16
addb
cmp
stos
scas
scas
aas
add
insl
mov
push
test
adc
mov
out
lcall
out
mov
loope
sti
test
pushf
outsl
jne
div
xor
fs
pop
xchg
or
adc
mov
inc
inc
add
jp
into
sarl
pusha
push
lret
jmp
ficoml
imul
adc
sub
ret
rol
shrl
sub
mov
enter
push
sbb
mov
scas
subl
inc
mov
sbb
repnz
gs
in
test
inc
push
aam
sbb
sbb
sub
sbb
inc
cmp
mov
movsb
lcall
jp
jbe
fldenv
xchg
mov
jno
cmp
inc
imul
dec
sahf
ds
scas
mov
nopl
sbb
jne
and
inc
outsb
pop
inc
je
jae
ret
pushl
push
in
cs
lret
dec
insl
cs
mov
mov
lcall
and
mov
sub
sbb
add
test
and
cmp
push
mov
mov
xor
arpl
out
lret
stos
fsubr
xchg
imul
dec
jecxz
data16
cmp
xor
jl
sti
xchg
push
xor
inc
push
mov
add
fsubs
add
ret
jge,pn
sbb
inc
call
out
ss
cli
sub
aas
pop
test
ret
pusha
jnp
mov
mov
push
scas
fimull
mov
xor
divl
decl
fsubs
sbb
in
lahf
popf
mov
stos
rcl
leave
push
mov
ljmp
mov
pop
test
or
push
daa
jo
stc
xlat
xor
pop
pop
mov
loope
repz
xor
jg
pop
fnstcw
cwtl
lret
xchg
sbb
dec
das
cmp
sbb
mov
pop
jl
iret
dec
xchg
jo
daa
and
xchg
sub
das
lret
inc
addr16
out
sahf
ss
sbb
stos
mov
jp
sub
jle
ljmp
lock
test
cli
jo
sahf
shl
cmp
push
mov
jl
mov
lds
test
pop
jb
and
mov
bound
mov
adc
aaa
rcrl
jne
sarb
adc
out
outsb
adc
jb
add
sbb
xor
rcll
int
cmp
sahf
sbb
jns
sbb
mov
sub
mov
xchg
aad
aad
std
outsb
jle
loopne
in
lock
cmp
loopne
push
jnp
mov
xchg
inc
xor
ret
inc
push
pop
scas
push
mov
rol
xchg
rol
and
mov
fldl
mov
jnp
pop
add
faddl
leave
inc
cmp
fistl
scas
mov
mov
hlt
jns
gs
mov
sti
xchg
pop
movsl
gs
mov
sahf
sbb
iret
jmp
es
aad
int3
xchg
mov
push
pop
xchg
scas
cmc
mov
imul
je
push
ret
into
mov
push
sbb
mov
mov
testl
ds
xor
jne
fdivl
icebp
lret
nop
insb
or
subb
dec
pop
push
mov
lds
out
pop
loop
fidivrl
sub
std
lock
int
lea
add
xchg
sub
xor
insb
hlt
cmpsl
aam
inc
and
subb
ret
pop
pop
lock
dec
mov
sbb
jne
mov
lahf
jo
sbb
scas
mov
inc
or
hlt
daa
fnstsw
cmpsb
push
fsubrs
in
xchg
aam
inc
cmp
stos
pop
add
mov
mov
mov
pop
dec
pop
or
sbb
ja
aam
in
cmpsb
xor
pushf
cs
adc
push
imulb
push
cmp
aad
repz
insb
inc
repnz
adc
mov
arpl
mov
out
lcall
sub
or
fs
push
test
adc
push
push
adc
or
fcoms
push
pop
add
and
jb
jbe
dec
sbb
push
daa
aas
movsb
dec
popf
mov
shrb
push
daa
mov
scas
xor
dec
mov
add
xchg
shr
adc
stc
mov
fwait
testl
fsubrs
je
add
push
mov
push
in
jle
fimull
mov
sbb
jne
adc
sbb
xchg
cmp
mov
sbb
icebp
jne
jp
cmp
push
stc
fidivrl
sbb
mov
loop
das
jns
xlat
repnz
fcomip
in
mov
inc
pop
ror
ret
mov
jno
sahf
dec
sbb
bswap
sarb
pop
or
pop
cltd
pusha
push
xchg
lods
sbb
popf
out
sti
xchg
xor
jo
cltd
adc
push
mov
dec
js
nop
jp
addr16
and
je
mov
insb
and
dec
inc
test
stos
adc
mov
cmpsl
out
aaa
cmpsb
imul
je
repz
and
mov
sub
push
cmpsl
xchg
mov
xchg
ss
aas
pop
aas
lret
in
loop
out
lea
leave
in
enter
and
fdivl
mov
inc
or
nop
adc
push
add
push
xor
mov
data16
and
pop
push
jne
push
dec
or
mov
pop
repnz
int3
cmp
xchg
sub
and
jle
push
sbb
fstpl
fistpll
mov
sub
mov
xchg
shr
ds
mov
pop
inc
sub
insl
cli
outsb
mov
movsl
push
or
ret
dec
mov
push
test
fisttps
inc
f2xm1
lahf
js
sub
mov
pop
add
mov
fs
dec
fs
in
dec
jecxz
into
jl
mov
nop
aaa
pop
mov
insl
nop
sbb
push
and
cmp
push
mov
cs
xchg
loope
js
and
jmp
scas
lahf
lahf
mov
ret
scas
fstl
pop
outsl
adc
repnz
cld
out
aaa
mov
lret
cmp
scas
fnsave
pop
push
lcall
or
adc
sub
pop
mov
pop
fcomi
inc
in
jmp
jecxz
jle
dec
inc
ljmp
nop
les
mov
sub
imul
repnz
ja
ss
mov
dec
outsb
shrb
aas
fisubrl
fcomp
sbb
xor
or
out
ss
cmp
out
jb
ror
imul
icebp
test
mov
pop
cmp
imul
cmp
mov
dec
out
lahf
or
xchg
dec
test
push
jmp
push
inc
mov
popa
leave
ret
adc
inc
es
jecxz
mov
lods
lock
or
ret
inc
or
push
jmp
test
pop
push
xor
out
mov
stc
mov
inc
lret
cmp
cltd
or
fadd
xor
cmp
or
or
lea
inc
jecxz
pop
enter
lcall
xor
adc
sub
sbb
enter
cmpsl
fisubrs
pop
mov
hlt
adc
test
pop
fdivrs
mov
cld
movsb
lds
loop
pop
shlb
popf
dec
test
adc
xchg
in
test
mov
mov
sub
pop
in
stos
pop
inc
add
jnp
push
shrb
or
and
loopne
add
aam
testl
mov
jg
dec
push
sbb
mov
sbb
lret
orb
hlt
les
xor
jbe
gs
sbb
fiadds
inc
push
mov
add
outsl
cmp
out
fwait
add
out
scas
cmp
insb
das
add
stos
add
or
rcl
adc
xchg
pop
rcrb
out
jb
scas
scas
jmp
pop
aas
mov
xchg
adc
mov
xchg
aas
in
mov
push
and
aas
cmpsb
pop
rcll
aad
add
add
jno
outsl
push
mov
adc
mov
outsl
cs
sbb
leave
push
nop
cld
pop
mulb
inc
mov
adc
in
cmp
xor
daa
filds
out
insl
lahf
push
inc
lods
leave
movsl
mov
mov
mov
ror
dec
cwtd
loopne
leave
and
in
dec
jne
xor
xor
out
jmp
aas
mov
and
orl
jns
das
push
jnp
push
jno
xor
push
mov
test
mov
mov
xor
shll
xchg
stos
dec
pop
pop
or
in
outsl
push
fcoml
lcall
lret
xor
rorl
cli
jb
stos
mov
mov
lcall
xchg
das
sbbb
divl
test
mov
lret
imull
or
ljmpw
and
push
add
sbb
lds
sbbb
xor
adc
mov
inc
lcall
mov
rclb
pop
outsl
in
or
sti
mov
pop
dec
adc
sub
mov
add
xchg
xor
cwtl
cmp
orl
daa
xchg
lods
outsb
jo
aam
inc
and
inc
in
fwait
sbb
push
pop
clc
push
testb
mulb
mov
rorb
sub
sub
cmpl
xchg
push
sub
cli
jg
lret
cmp
pop
pop
pop
jo
push
push
mov
jns
icebp
ljmp
sbb
bound
xor
jne
scas
sahf
inc
inc
dec
dec
push
xchg
push
rcrb
inc
xor
pop
jo
jns
jle
xor
insb
or
pop
add
fwait
testb
movl
jo
xchg
outsb
jmp
fs
add
and
lods
test
out
lahf
push
jg
fdivs
mov
stc
addr16
repnz
pushf
mov
outsb
sahf
mov
outsl
xchg
pop
imul
pop
cmpsl
fldenv
ret
mov
enter
xor
lock
outsb
in
pop
cwtl
cwtl
jge
add
cmp
xor
cmc
adc
cmp
push
lahf
stc
repnz
xchg
inc
xchg
pop
mov
xor
loopne
gs
add
adc
pop
add
jno
iret
cltd
mov
or
add
fimull
decb
mov
ds
insb
test
or
push
jbe
push
mov
int
frstor
lods
sar
add
daa
mov
mov
std
sbb
sub
cmp
push
dec
movsl
gs
mov
shlb
fiadds
jno
mov
push
or
adcl
mov
test
add
add
xchg
rolb
or
ret
mov
sbb
into
mov
cmc
adcb
int3
cmpsl
psubq
aad
push
sbbl
lahf
pop
lcall
inc
lock
cmpsl
sbb
fimuls
fidivs
or
sub
add
out
jg
shl
pusha
int3
xchg
js
pusha
inc
daa
sbb
ret
shr
test
mov
mov
jge
or
inc
jbe
shll
mov
bound
lock
adc
jle
add
lcall
adc
push
sub
hlt
cmpsb
jl
and
out
and
popa
add
dec
in
movsb
adc
aad
addr16
dec
sub
daa
xor
cmpsb
cmpsl
add
pop
or
in
sub
dec
cmp
scas
cli
nop
rorb
push
in
push
test
hlt
mov
pop
aam
shrb
subl
icebp
lea
int3
ja
out
lea
andl
mov
push
in
push
pop
ss
push
pop
pop
in
arpl
mov
ret
aam
cmc
fwait
inc
cld
sub
sbb
out
repz
xchg
les
push
rcrl
push
outsl
inc
imulb
add
repz
push
aad
push
pop
cmp
data16
jne
sbb
fsts
inc
icebp
push
ret
jmp
jg
ret
fs
cmp
rolb
call
es
in
mov
mov
loopne
jp
aam
pop
fwait
and
mov
sbb
xchg
fsubrl
out
lods
lock
pop
adc
fnstcw
repnz
test
push
imul
mov
sub
xor
mov
outsb
lret
push
mov
push
push
pop
stos
add
and
cltd
add
fnstenv
push
and
pop
incl
fdivl
sub
xchg
jns
push
scas
inc
enter
popa
and
popa
and
bnd
add
mov
out
push
rcr
and
lds
jle
mov
lcall
sub
pop
or
mov
out
loopne
movsb
lods
sub
or
es
into
sub
xlat
test
mov
mov
mov
jne
loopne
xchg
xor
inc
hlt
cmp
or
inc
add
seto
mov
xchg
repz
stos
jns
sub
inc
fcompl
inc
rol
xchg
orl
xchg
mov
jbe
cld
out
mov
dec
push
dec
mov
mov
xor
data16
add
jne
pop
jno
daa
mov
divl
roll
pop
push
dec
xor
add
mov
pop
pushl
xchg
push
dec
ljmp
outsl
adc
push
push
aad
lock
mov
aaa
in
jb
ret
mov
rolb
dec
fdivrp
pop
ret
push
lret
rcrl
jecxz
mov
mov
shrb
mov
dec
cmp
in
icebp
rorb
or
popf
mov
jb
or
mov
sbb
and
dec
inc
xor
call
in
lock
inc
rorl
or
dec
jnp
cmpsb
pushf
xchg
inc
cmp
xor
mov
mov
mov
arpl
icebp
push
pop
fldl
lods
jae
lods
push
xor
inc
out
out
je
aad
ljmp
lret
jns
ret
add
jmp
jne
ficoms
mov
push
je
dec
into
cmp
mov
fstps
fisttpll
out
xor
out
test
push
in
sbb
dec
adc
and
mov
or
shrl
js
addb
cli
testl
mov
pop
fs
mov
inc
sbb
insl
scas
shll
sysexit
jbe
pop
sahf
mov
shll
fcmovnb
add
out
or
dec
orl
or
dec
enter
mov
add
or
daa
inc
xchg
movsl
jno
or
sarb
mov
mov
sub
jl
cmc
mov
push
jg
xchg
insl
iret
mov
xchg
cmp
adc
popf
leave
mov
orb
push
imul
xor
scas
in
leave
inc
bound
dec
ja
xlat
pushf
sbb
jbe
pop
shr
es
inc
stc
push
aad
or
dec
sbb
push
outsl
inc
add
and
mov
in
cmp
test
pop
movb
xor
scas
sub
stc
mov
mov
jl
mov
xchg
inc
add
pop
scas
dec
cmp
cmp
or
adc
xor
mov
outsl
xchg
pop
jl
cmp
jg
sub
mov
push
lret
mov
push
mov
sbb
or
arpl
xchg
cmp
push
dec
adc
inc
arpl
xor
cs
data16
dec
fs
fs
or
sbb
iret
lea
push
rorl
mov
push
fstpt
xor
rorb
jmp
repnz
or
push
sbb
jmp
jmp
mulb
icebp
jg
cs
sub
cld
daa
ret
jmp
jno
pop
mov
int
and
adc
lds
out
push
jecxz
mov
sub
cwtl
and
sbb
popf
aad
add
mov
mov
and
push
jmp
shrl
fisubs
ret
orl
jge
aaa
mov
cmp
and
test
pusha
add
popa
clc
sub
gs
in
inc
leave
pop
out
sarl
scas
push
clc
fmuls
daa
mov
aam
sub
sbb
jno
cmp
call
jge
adc
mov
fwait
add
lock
mov
xchg
test
int3
test
mov
ds
pop
repz
aas
test
inc
lea
jne
fimull
lea
sbb
or
ljmp
or
add
sahf
push
out
lret
cmp
les
fisttpll
dec
and
add
pop
xchg
les
mov
inc
inc
push
inc
jo
stc
fwait
and
cmpsb
inc
xchg
inc
jae
dec
and
sbb
daa
loop
scas
rolb
in
mov
mov
sub
mov
push
insb
push
adc
fists
add
fwait
xchg
sahf
cmp
fimull
popa
lcall
jb
movsl
cmc
jbe
aas
filds
in
in
movsl
push
in
imul
sbb
arpl
aaa
xlat
mov
jp
cmc
jp
outsb
lock
pop
add
out
pop
xor
mov
fcmovu
push
in
xor
out
mov
iret
mov
out
dec
bound
popf
add
inc
or
push
fbld
cmc
popa
in
jns
nop
and
dec
loopne
sahf
popf
dec
jmp
adc
jb
and
mov
xor
add
sahf
push
lret
add
icebp
ja
sbb
adc
insl
jp
bnd
fstl
cmp
stc
push
enter
cmc
dec
stc
testb
pop
sbb
jo
or
adc
enter
mov
pop
or
dec
or
mov
pushf
inc
xor
and
les
jb
adc
stos
and
sub
dec
jg
dec
cmp
cs
test
pop
rcrl
sub
nop
hlt
std
inc
clc
and
inc
and
nop
or
pushf
inc
cli
mov
cmp
xor
cmpsl
ljmp
data16
mov
push
adc
ret
push
out
pusha
cmp
icebp
out
jno
imul
fcmovnb
mov
jne
test
popa
mov
xor
lock
fcoml
sbb
xor
mov
jecxz,pn
loopne
mov
clc
add
in
and
std
push
aaa
les
pushf
enter
jno
fidivl
call
in
test
dec
subl
ds
mov
adc
push
in
ja
fnstsw
addr16
pop
pop
aas
hlt
xor
push
mov
sti
daa
test
sti
popf
pop
dec
mov
daa
repz
out
gs
mov
wrmsr
adc
lret
adc
sub
stc
jle
imul
jle
sub
repnz
sbb
push
mov
inc
cld
push
inc
push
pop
mov
add
push
xlat
mov
xorb
inc
ja
cmp
add
pop
out
fiadds
into
push
inc
stc
mov
loopne
addr16
int
push
cmp
dec
fimull
lods
pop
inc
cmp
mov
mov
mov
cmp
sub
mov
jmp
add
decb
mov
push
rorl
dec
rcll
aam
mov
pop
fcmovnu
int
push
dec
mov
pop
in
faddp
insb
xchg
jbe
cmp
mov
add
jecxz
out
xchg
sarb
lock
push
sbb
iret
aad
in
call
add
adc
int
dec
mov
enter
jae
sub
sahf
fstpl
stos
xor
pop
cld
or
movsb
xor
mov
negl
popf
adc
add
mov
lcall
fsub
pop
mov
fldcw
out
add
xchg
mov
cs
lcall
subb
sbb
inc
rorl
mov
lods
push
ret
jbe
dec
sbb
loop
cltd
in
pop
mov
and
dec
loop
jne
loope
movsl
idivl
cmpsb
mov
loopne
hlt
mov
dec
adc
sub
outsl
data16
cmpsl
and
xor
mov
bound
loop
xchg
in
sbb
ffreep
mov
sti
jmp
fldl2e
push
movsl
nop
repz
cwtl
inc
lret
pusha
push
dec
xchg
mov
idiv
sar
push
lahf
sub
fsubrp
pop
js
adc
xchg
fsubl
ss
ficoml
popa
jnp
stos
pop
mov
push
pop
and
mov
cmp
xchg
xor
mov
adc
aas
sbb
int3
inc
pop
stc
xchg
mov
push
cmp
dec
push
mov
xchg
icebp
mov
iret
sub
sbb
jmp
inc
fwait
and
xor
nop
cs
fsubl
aad
mov
push
iret
pop
andb
fcmovnbe
in
popf
push
mov
dec
adcb
mov
aas
dec
mov
push
xchg
or
pop
in
pop
orb
lret
lock
push
nop
inc
les
stos
jmp
mov
mov
jecxz
or
or
stos
rcr
out
pushf
imul
mov
fs
adc
or
and
mov
sub
out
scas
daa
xchg
mov
dec
xchg
iret
movsb
aad
xchg
mov
xor
inc
and
xchg
mov
pop
sar
xor
mov
adc
cmp
out
push
dec
fwait
mov
pop
cld
pop
test
into
cli
jecxz
nop
icebp
in
dec
pop
lock
lret
xchg
rcrl
cmc
cmp
call
in
sarl
addr16
jmp
test
mov
xor
add
lret
xchg
fdivrl
dec
or
in
xor
popf
jmp
lahf
push
cli
dec
in
inc
aaa
jb
push
loopne
hlt
test
lahf
call
ss
ss
sbb
add
inc
pop
into
or
push
loope
aas
dec
lret
stos
iret
outsl
cwtl
lahf
insl
in
cmpsl
jno
xor
mov
sub
ds
ja
aam
sbb
mov
and
outsl
fisubs
pusha
jle
mov
orb
cmp
xlat
sbb
ss
enter
push
lds
sbb
cwtl
hlt
inc
xchg
push
mov
push
mov
cmp
outsb
jae
ss
mov
scas
dec
xchg
js
mov
das
cli
and
lods
rcr
mov
jmp
sub
xor
fldl2e
out
adc
mov
jbe
mov
add
in
cltd
dec
js
pop
popa
fsts
lahf
je
sub
push
adc
loop
jmp
mov
mov
test
sti
add
sti
insl
add
cmp
and
daa
mov
and
fistl
dec
add
or
push
sbbb
clc
jp
xchg
inc
add
idivl
push
jns
movsb
out
sub
and
dec
cli
mov
into
pusha
test
test
negb
pusha
iret
aaa
push
pop
jno
loop
std
sub
xchg
pop
dec
add
hlt
xchg
inc
cmpsb
mov
xor
adcb
test
push
clc
out
aaa
mov
sbb
adc
loopne
mov
rorl
push
jnp,pt
inc
pop
jbe
bound
and
xor
dec
out
jecxz
xlat
dec
mov
test
sbb
clc
ljmp
cli
arpl
mov
push
jae
rcll
gs
fimuls
and
or
stos
bound
es
insl
ja
test
mov
inc
rcll
sub
add
inc
or
ljmp
mov
enter
mov
outsl
mov
loope
ret
inc
inc
xchg
sbb
and
inc
lock
sbb
dec
in
imul
sub
repz
and
lock
or
xorl
xchg
jb
cmp
jle
lods
mov
lods
push
test
mov
mov
popf
arpl
icebp
adc
jns
pop
into
mov
negl
nop
and
ret
dec
mov
mov
push
add
or
pop
loope
add
ds
mov
jo
das
enter
dec
mov
stos
pop
add
sbb
mov
sbb
jnp
xchg
les
or
mov
in
jmp
mov
roll
test
mov
mov
push
push
xor
lods
iret
ret
repnz
xor
out
ret
mov
ja
push
mov
stos
into
cmpsb
mov
push
pop
outsb
pop
into
lea
mov
push
sbb
jbe
xor
ljmp
jecxz
or
ret
mov
es
shlb
dec
pop
jmp
sti
fnstenv
in
cmp
pop
insl
sub
lds
fcmovnu
fsubs
shll
push
out
xor
or
int
push
sarb
xchg
xor
jg
leave
mov
add
arpl
jne
push
xor
aaa
jp
xor
out
or
jno
jmp
jp
aas
lcall
jmp
popa
pop
inc
xor
int3
aaa
add
ret
sbb
jns
xchg
adcb
sub
lods
or
dec
xor
cli
js
fs
mov
xor
mov
jns
push
cmpsb
xchg
lods
lods
mov
jns
hlt
mov
pop
mov
mov
sbb
xchg
js
dec
xchg
test
stos
enter
sbb
fisttpll
and
add
pop
jae
pop
and
push
inc
movsl
stc
inc
pushf
xor
cmpsb
bnd
dec
push
dec
fisubrs
bound
and
lcall
xor
lods
rcl
sbb
loope
add
imul
adc
hlt
repnz
addr16
pusha
popf
stc
imul
sub
fwait
mov
int
jl
adc
imul
scas
and
mov
jbe
aas
and
enter
xor
in
dec
add
or
bound
fdivs
add
cmp
xchg
movb
mov
fadds
pmaxub
jge,pn
aam
daa
mov
and
add
in
push
das
and
jnp
mov
out
add
mov
hlt
loope
inc
mov
pop
xchg
push
adc
jge
movsl
mov
lods
divb
xlat
int3
arpl
ja
pop
jecxz
or
insl
jmp
fst
pop
aaa
pusha
ljmp
das
push
fisubl
inc
cmp
push
mov
into
or
inc
bound
jo
mov
mov
or
jp
test
icebp
or
lret
data16
divl
arpl
and
cs
xchg
push
jl
push
add
mov
jmp
xor
out
outsl
push
iret
cmp
cltd
ds
lds
popa
cmp
std
cmp
push
addr16
es
dec
test
jns
inc
jg
pop
stos
cld
inc
outsl
mov
notb
not
mov
jecxz
push
lcall
xor
pop
adc
mov
sbb
gs
je
arpl
and
jne
dec
sbb
push
sub
fsubr
ret
hlt
pop
sbb
sti
mov
add
fcomp
mov
push
and
xor
sahf
adc
cwtl
push
push
ret
mov
xchg
jp
ret
test
adc
fcom
std
lock
or
mov
xor
sub
cmpl
je
shll
mov
shlb
add
lds
mov
lcall
or
cmp
xchg
adc
mov
push
imulb
sub
insb
dec
dec
ret
sbb
dec
and
push
sbb
aam
hlt
jae
call
hlt
aad
xchg
mov
mov
cli
outsl
das
mov
aaa
inc
movsl
call
loop
mov
clc
repnz
cmpsb
mov
jecxz
aaa
les
jecxz
xchg
pop
mov
add
ror
xlat
loope
aad
sbb
rcrb
and
pop
fwait
mov
inc
xchg
mov
pop
jg
movsl
lret
pop
inc
jge
jno
pop
insb
adc
or
xor
aaa
fdivrp
cmp
cmc
scas
in
dec
fistpl
adc
pop
mov
enter
outsl
stos
pop
je
sub
mov
aad
mov
cs
sub
inc
jns
adc
popa
aad
jb
gs
pop
lea
inc
out
adc
jne
add
push
insl
decb
adc
dec
arpl
neg
and
aaa
scas
aaa
fsubl
jo
test
jmp
sub
inc
inc
test
jecxz
push
ret
in
imul
push
inc
xorb
popa
mov
push
pop
mov
repnz
jmp
shlb
push
pop
and
push
pop
jmp
dec
lock
mov
test
inc
xlat
es
movsb
jp
sbb
aas
add
xor
mov
mov
imul
dec
lret
hlt
pop
mov
mov
lods
into
outsb
repnz
and
jmp
xchg
or
mov
ret
push
pop
pushf
xor
loopne
add
jnp
dec
lods
cld
pop
pop
add
out
aam
adc
dec
iret
mov
dec
add
aas
andl
sahf
mov
and
push
cmp
xchg
insl
jno
mov
fdivl
mov
dec
sbb
fwait
adc
xchg
mov
mov
cmpsl
xchg
cmp
aaa
ficoms
push
push
imul
lea
jge
jl
add
xor
in
int
addr16
andb
fdivr
lret
sbb
add
mov
repz
sbb
adcb
out
sbb
mov
dec
jecxz
inc
fstps
ret
sbb
add
sti
sub
mov
add
mov
testl
pop
inc
or
fcoms
lock
movsl
ret
push
mov
sub
fisubrl
add
xchg
jo
dec
pop
mov
cmp
or
imul
test
dec
inc
popf
sub
inc
mov
daa
xchg
mov
addr16
push
lods
mov
mov
pop
stos
pushf
mov
push
sub
mov
nop
pop
adc
jne
mov
add
pusha
inc
scas
jns
mov
push
lock
sarl
mov
sub
xchg
jmp
pusha
ficomps
jbe
fmull
add
jo
fstps
dec
aas
or
adc
in
and
xor
dec
lret
dec
xor
mov
test
lods
inc
push
jne
mov
adc
sti
xor
jns
hlt
mov
mov
fstl
stos
js
lds
insl
xchg
cmp
sub
mov
ret
sub
mov
dec
jnp
mov
cltd
sub
cld
mov
xchg
das
cwtl
mov
xor
cmp
int
dec
add
jge
push
test
fisttpll
aas
and
ret
ja
and
dec
lods
add
mov
mov
push
pop
mov
mov
shrb
in
std
aas
mov
sahf
mov
rolb
cmp
repz
shlb
add
je
adc
dec
sti
fs
mov
loop
push
cmp
jb
inc
nop
mov
cmp
call
xchg
pop
test
xlat
sbb
mov
aas
xchg
xchg
pop
repz
imul
test
add
sbb
jmp
iret
repz
jnp
jl
jb
loop
mov
les
mov
add
mov
push
js
inc
cmp
push
push
push
int
pop
and
shlb
sahf
xchg
movsb
mov
mov
add
out
xor
and
mov
pushf
jmp
lock
pop
and
loope
fs
sub
std
or
pusha
sub
jnp
sub
clc
pop
dec
aaa
push
cmc
testb
lret
xchg
iret
in
push
and
call
mov
dec
jmp
push
push
and
in
ror
jae
push
adc
push
xor
stos
dec
andl
mov
test
lods
push
jne
mov
jne
sub
dec
mov
aaa
push
hlt
es
mov
or
sub
in
popa
mov
push
dec
shrl
cmp
pop
cmpsl
clc
jg
mov
loop
xchg
xchg
ds
loop
and
xchg
xchg
call
movsl
aad
cmp
in
hlt
repz
outsb
in
xchg
inc
shll
or
and
push
scas
nop
hlt
or
repnz
sub
and
clc
inc
sbbl
popf
push
in
cmpsl
jae
push
push
mov
outsl
and
xchg
push
sbb
mov
mov
adc
pushf
add
xchg
xor
xor
sbb
rorl
popa
xchg
xchg
jo
xchg
xchg
ja
jle
xchg
jg
ljmp
jmp
scas
or
sti
mov
or
es
or
push
punpckhbw
les
mov
daa
lcall
or
scas
xchg
hlt
add
scas
mov
stc
mov
mov
cmp
sub
and
popf
and
dec
fists
out
int3
cmp
pushl
xor
in
jmp
outsl
jle
loop
aad
lcall
aas
pop
rcrb
hlt
stos
aad
cmp
dec
stos
cmp
lret
jns
scas
mov
and
cld
xor
adc
add
movsl
xlat
stc
out
add
dec
fdivrl
adc
jb
ret
push
js
add
mov
rol
xor
int3
sbb
jb
sahf
fildl
push
pop
test
decl
xchg
push
xor
pop
int3
insl
pop
and
stc
add
outsb
lock
cmp
jns
pop
xor
push
bound
mov
imul
xor
mov
mov
shlb
in
pop
adcl
push
sbb
fidivs
scas
pop
sub
xor
int
pop
add
scas
inc
clc
or
dec
sbb
jg
xor
cltd
call
push
dec
pop
hlt
add
push
dec
adc
dec
xchg
aaa
mov
xchg
loopne
orb
stos
in
jno
mov
sarb
adc
repz
enter
in
mov
in
fimull
xchg
or
fmulp
xchg
push
and
add
lds
sub
lret
fwait
ds
iret
add
mov
leave
mov
mov
cmp
mov
inc
mov
push
arpl
int3
sbb
testb
sahf
test
sbb
fcomps
add
dec
jp
xchg
dec
shrb
sbb
mov
mov
mov
mov
imul
addl
ds
movsl
mov
inc
data16
adc
fmull
push
les
adc
xchg
and
lods
push
out
in
jnp
push
call
cli
out
fwait
aad
mov
or
sar
sbb
sbb
pop
push
test
fcmovbe
mov
push
mov
pop
scas
add
sti
push
or
and
push
xchg
mov
movsb
mov
scas
sub
dec
mov
clc
stos
es
sbb
js
and
in
sbb
jg
jo
mov
push
movsl
daa
in
mov
fsqrt
mov
xchg
add
sbb
or
fxch
jbe
aas
mov
popa
js
dec
int3
addr16
gs
js
mov
out
jecxz
pushf
dec
in
pop
dec
pop
jo
push
cmp
dec
pop
mov
inc
das
out
into
icebp
or
loopne
and
xor
call
ja
stc
lock
loope
lods
loop
loope
es
cmp
test
fwait
movsb
pop
xor
or
jl
test
sub
and
ss
mov
jle
push
repnz
xchg
lds
adc
xlat
pop
in
les
ljmp
and
mov
call
mov
sahf
mov
pop
cmpsl
cmp
negb
jbe
out
jb
pop
or
adc
imul
adc
mov
je
or
pop
sbb
aas
mov
mov
mov
pop
ret
add
cltd
xchg
rorb
push
dec
cmpsl
inc
into
pop
pusha
dec
mov
add
mov
pop
lods
repz
pop
scas
js
xchg
or
or
mov
ret
rolb
test
fs
and
sbb
shll
imul
mov
out
movsl
lret
and
xchg
inc
mov
fstps
fsubrs
ret
cmpsb
stos
arpl
popa
cmc
dec
hlt
ret
popf
lds
mov
cmp
test
test
inc
iret
repnz
pushf
rolb
stos
add
vpmacsdd
jge
test
pop
sub
faddl
xor
scas
xor
in
and
cld
mov
xchg
pop
lcall
ret
inc
in
inc
cmp
shl
rorb
aaa
jno
jmp
xor
pop
add
out
sti
pop
or
xchg
and
jg
incb
or
test
jl
xor
pop
movsb
adc
shlb
pop
shrb
sub
shl
call
or
cmpsl
scas
aad
outsb
inc
shrl
mov
out
div
sbb
sbb
mov
sbb
ja
addr16
and
mov
ret
pop
mov
lret
insb
lahf
push
mov
sti
call
mov
lret
adc
loop
cwtl
adc
out
adc
fstpl
inc
adc
mov
push
popa
out
popa
inc
cld
adc
rcl
mov
mov
pusha
popf
or
and
cmp
int3
sbb
and
cltd
test
lock
dec
jno
pusha
das
loope
mov
cmpsb
movsb
cwtl
shrb
andl
jmp
clc
lock
jno
mov
mov
pusha
testl
jnp
push
sub
inc
lcall
ffreep
xor
add
add
jb
fidivrs
jge
or
push
mov
inc
cli
ss
arpl
xor
pop
aam
es
xor
and
dec
mov
cmpsb
jmp
popa
xorb
mov
push
pop
xor
lahf
inc
cltd
mov
mov
aas
sbb
lock
iret
xor
inc
lods
sbb
insb
scas
incl
notl
jge
mov
sub
in
inc
lret
fwait
sbb
loope
jge
pop
jg
inc
addr16
fistpll
pop
fildl
cmp
mov
cmc
inc
cmp
mov
sbb
mov
mov
and
adc
mov
xchg
ret
cmp
out
lret
inc
mov
sti
cmp
into
push
dec
pop
xchg
cs
jns
aam
in
ja
cmp
or
pop
pop
sahf
sub
out
inc
mov
mov
jmp
adc
or
aam
arpl
movsl
jmp
mov
js
leave
sbb
cltd
fcmove
cli
jmp
xor
jns
aaa
cs
mov
pop
xor
add
mov
sbb
inc
xor
das
pop
inc
out
xor
mov
addr16
int3
lret
lods
rcr
lea
sub
mov
pop
into
pop
pop
loope
sub
les
or
sub
push
mov
bound
fistpll
xor
ss
sub
cmp
shrb
fcmovnbe
xor
push
aam
rorl
or
arpl
pop
dec
aam
subl
sbb
pop
loop
sti
pop
dec
mov
mov
stc
dec
cmp
out
dec
xchg
sbbb
fldcw
inc
in
pop
inc
shr
aam
pusha
leave
or
adc
fists
pop
lret
fdivs
or
xchg
movsb
data16
xchg
inc
inc
imulb
mov
xchg
pop
in
and
shlb
into
stos
push
and
fisttps
imul
fadds
mov
mov
sbb
scas
hlt
popf
push
dec
out
negb
jno
jg
fwait
fwait
dec
mov
pop
ret
es
adc
cmpsb
jmp
les
in
dec
mov
sarl
movsb
gs
aaa
add
mov
test
int3
mov
mov
es
push
xlat
xor
clc
push
cmp
xchg
pop
fcoms
add
mov
inc
std
inc
add
mov
fdivrp
pusha
jbe
stos
mov
cmp
xchg
xchg
loope
jmp
in
loope
rorl
jmp
icebp
sar
push
cmpb
sbb
fsubl
dec
mov
fidivl
mov
test
mov
jb
lea
cli
pop
xor
insl
lods
xchg
sarb
outsl
sbb
rcrb
push
test
xor
pop
mov
or
aad
scas
in
shl
xor
xchg
jno
enter
test
add
adc
xchg
sti
ja
les
mov
mov
sub
jle
push
fisttpl
adc
mov
lcall
repz
and
lods
adc
test
fwait
adc
roll
test
out
xchg
gs
push
leave
out
aaa
dec
repz
pop
lea
imul
lahf
sti
fimuls
js
cmp
sbb
xor
mov
xchg
mov
pushf
push
test
mov
mov
sbb
in
rorb
sbb
xlat
dec
cmpsl
fsubs
xchg
int
lods
test
dec
push
adc
ret
sbb
std
aam
adc
cmp
insl
jne
dec
cmpl
xor
add
add
push
fistpll
pop
out
adc
dec
cltd
add
fbstp
jnp
hlt
pop
jle
cmp
mov
add
pusha
adc
add
sahf
and
mov
cmpsl
out
add
xlat
mov
mov
nop
fwait
jecxz
dec
push
hlt
aad
rep
push
jb
rclb
into
lcall
cld
outsb
clts
sbb
push
in
outsb
loope
pop
popa
test
outsb
and
xchg
mov
and
push
xchg
jo
mov
push
cmpsl
sbb
jecxz
mov
xor
mov
ds
shll
fidivrs
pop
push
dec
add
mov
mov
daa
mov
stos
or
lds
xchg
cmp
push
xchg
pushf
cmp
test
mov
in
push
inc
xchg
push
movsb
das
jne
mov
push
mov
cmp
inc
cmp
push
test
into
cwtl
add
aaa
jge
pop
insb
inc
test
clc
das
arpl
fnstcw
popf
mov
xor
jecxz
into
loop
mov
mov
ret
lea
cmp
xor
sub
mov
aad
outsb
dec
sub
mov
aaa
fsubl
inc
ficoml
gs
inc
pushf
push
mov
in
popf
xor
mov
sub
movsl
scas
push
add
bound
scas
out
pop
cmp
jnp
add
mov
scas
xchg
fcoms
insb
lods
adc
sbb
or
subl
add
dec
mov
fldl
insb
xchg
sub
inc
sub
sarb
jge
jg
jecxz
icebp
mov
xchg
xlat
xchg
outsb
mov
stos
gs
cmpb
mov
mov
cmp
pop
jo
cltd
lds
adc
add
sbb
xchg
insb
in
rol
movsb
loope
dec
pop
cwtl
in
mov
jg
mov
push
pop
mov
mov
popf
mov
mov
int3
add
xor
mov
or
out
cmp
xchg
and
rcrl
jns
stos
imul
mov
push
popf
push
sbb
mov
mov
icebp
mov
inc
pop
mov
mov
fimull
int
cld
cmp
pop
rolb
sbb
pop
lods
fisubrs
adc
sbb
pop
pop
jne
add
fs
cwtl
mov
sub
dec
add
and
push
popa
xor
push
jno
mov
add
call
cwtl
je
pop
rcl
jle
aam
xchg
pop
inc
fisubs
mov
fwait
imul
or
mov
mov
imul
or
push
mov
xchg
xchg
fidivs
pop
pop
inc
mov
sti
lods
dec
xchg
sbb
iret
inc
pop
pop
outsb
cmp
adc
sbb
mov
sbb
adc
mov
or
bound
into
ljmp
xchg
cltd
sbb
imul
xor
aam
and
xor
jne
popa
lea
fcoms
adc
fdivs
outsb
jmp
leave
data16
ljmp
outsb
push
es
cltd
idivb
dec
pop
inc
sbb
out
sbb
mov
sbb
in
mov
jp
and
cwtl
and
mov
cs
xlat
popf
xlat
xchg
cmp
leave
sbb
js
push
push
rcrl
pop
aad
push
imul
dec
shl
cmp
pop
es
negb
les
mov
leave
fucomip
inc
sbb
mov
mov
jnp
lds
mov
xor
aad
dec
sbb
and
mov
sub
ret
icebp
and
mov
jge
ds
sbb
scas
fisubs
repnz
outsb
xor
jbe
insl
aam
xor
dec
scas
shlb
inc
or
daa
sub
add
test
xchg
mov
fstpl
scas
xor
test
fs
xor
and
xchg
pop
aaa
add
xchg
pop
adc
in
pop
pop
sbb
adc
inc
aaa
icebp
mov
jmp
push
ljmp
fisttpl
dec
mov
in
lea
jmp
es
lods
fldenv
dec
mov
jmp
inc
pushf
mov
mov
xorl
rcll
in
stos
jmp
push
clc
fs
outsl
pop
sub
fimull
jg
jle
mov
jmp
or
pop
xor
xchg
push
inc
dec
out
jecxz
mov
out
xor
ja
stos
das
cmc
ljmp
out
lcall
sub
test
cli
sahf
roll
test
cs
pop
fisubs
mov
je
fsubrp
adc
pop
into
lahf
mov
pop
or
leavew
jae
popf
rcrl
shrb
and
add
push
xor
jmp
dec
cs
jle
movsl
adc
cmc
jae
sbb
fs
repz
cli
pop
cmp
adc
push
pop
jecxz
test
ret
push
rsm
sub
or
out
and
sub
hlt
test
aam
test
mov
inc
jp
push
and
shrb
cwtl
jb
mov
mov
imul
pop
dec
cmp
mov
fistpll
cmp
repnz
pop
sbb
insb
push
jo
jge
mov
mov
jae
jle
sti
loop
fildll
or
je
aaa
xchg
pop
push
cmp
cmp
in
loop
pop
ljmp
adc
adc
imulb
xchg
insl
xor
and
jo
mov
lret
or
xchg
mov
xor
out
sarl
pop
cmp
out
div
xchg
cmp
xor
adc
add
pop
movsl
push
outsl
cs
adc
fwait
mov
addr16
and
fmul
insl
fsts
sbb
int
jp
enter
lods
dec
jle
xor
stc
xor
sub
mov
fwait
xchg
pop
cs
xchg
fs
jbe
sub
push
lds
add
sarb
sub
add
imul
hlt
gs
mov
dec
inc
and
xor
aad
jmp
adc
lds
adc
jg
sbb
pop
lock
shl
cli
or
jns
movsb
inc
pop
in
ljmp
inc
mov
lds
xchg
add
dec
std
mov
ds
jl
jl
in
and
pushl
dec
mov
je
push
sub
movsb
push
fidivrs
scas
imul
xor
push
dec
decl
sbbb
les
aas
inc
xchg
pushf
data16
or
pop
int3
rcll
mov
loope
icebp
and
scas
stos
mov
sbb
repz
pusha
rorb
adc
adc
dec
jns
jns
rclb
rcll
in
gs
out
or
fistpl
jnp
rcrb
repz
push
cs
lret
loope
push
test
enter
add
clc
cld
add
repz
rcr
mov
inc
adc
fildll
imul
adc
jp
and
add
cmp
xor
mov
xchg
ret
push
pop
int3
stos
mov
push
or
and
push
jge
repnz
pop
xchg
or
jmp
stc
sti
push
jae
mov
jb
xchg
loope
push
sbb
shll
mov
add
mov
xor
cmp
mov
pushf
pop
xor
xor
jnp
enter
ja
orl
adc
addl
popa
mov
inc
js
inc
sbb
xchg
out
popa
mov
pop
aas
imul
sti
enterw
inc
dec
xor
fdivl
fwait
pop
outsb
jg
mov
xchg
mov
lods
cmp
rcrb
inc
out
xor
mov
dec
mov
and
sbb
rolb
pop
push
dec
mov
or
push
dec
xchg
jg
bound
cmp
mov
adc
gs
rcll
or
cwtl
insl
rorl
jne
lock
jo
fdivrp
inc
cmp
insb
andb
push
cmc
push
mov
sbb
cmp
xchg
xor
in
cmpb
fs
cmp
lahf
xor
lret
jbe
lea
lock
and
hlt
addb
and
inc
adc
add
xor
loopne
push
fmulp
jo
dec
in
repnz
rorb
inc
sarb
xchg
clc
out
sbb
jl
sbb
sar
pushf
mov
addr16
push
jb
rclb
or
jae
mov
repnz
fnstcw
add
ud2
or
xchg
rclb
iret
dec
sub
pop
cmp
push
fstp
sbb
mov
mov
hlt
pusha
jmp
jp
loopne
lret
mov
dec
pop
lds
sarb
jp
out
insl
push
in
cmp
flds
lahf
in
icebp
pop
pop
call
clc
scas
fs
sbb
dec
cmp
and
dec
aam
sbb
sbb
xor
adc
pushf
iret
test
ret
push
andb
or
inc
jae
sbb
lods
fwait
jae
hlt
jbe
loop
push
pushf
inc
add
jbe
dec
cmpsb
push
pop
mov
cmpb
js
js
xchg
out
shrb
push
mov
jl
push
das
fidivrl
shl
out
xchg
mov
fldl
icebp
mov
and
aas
loop
cmc
repz
mov
mov
shll
or
jbe
adc
in
sub
ja
clc
pop
pop
add
cld
lret
xchg
mov
out
adc
sub
out
ss
ja
mov
pop
mov
push
sbbl
mov
pop
fucomi
push
adc
lods
mov
sub
shl
out
out
fstl
sbb
mov
add
cmp
addb
inc
push
sti
ficoms
imul
dec
push
xchg
jle
rcr
aam
xlat
ljmp
out
lahf
pop
lds
ds
pusha
lret
add
pop
push
test
nop
data16
mov
gs
stc
pop
sub
aaa
popa
outsb
jo
add
xor
popf
mov
test
pop
lea
js
mov
pop
into
or
aam
popf
adc
int
in
fwait
adc
cwtl
fcomi
cs
lock
adc
or
push
cmp
jnp
or
sti
sub
fnstcw
mov
cmc
dec
nop
in
je
repz
jae
enter
fsubl
je
aas
js
sahf
lea
testl
icebp
test
xchg
add
bound
pop
sbb
inc
inc
dec
xchg
adc
mov
xchg
jns
inc
ja
loop
ss
push
cmpsl
sbbl
rol
adc
daa
sbb
pusha
sbb
pop
pop
into
lcall
sbb
pop
out
stos
insb
jae
test
inc
jnp
jle
mov
adc
adcl
std
div
fcmovne
fwait
and
xlat
dec
adc
dec
dec
test
sub
xchg
xor
mov
jo
pop
mov
aaa
rorl
cltd
jbe
mov
mov
push
jge
insl
cmp
daa
jl
popl
push
cs
dec
xlat
inc
inc
dec
imul
jg
pop
push
mov
sub
and
test
out
xor
sub
ss
leave
xlat
fwait
pop
les
rclb
adc
pop
mov
aam
movsb
or
xor
repz
add
adc
jle
loope
testl
xchg
imul
out
mov
or
pop
cltd
sbb
iret
xchg
out
sub
add
jb
sub
loopne
or
jecxz
mov
rorl
jl
xor
ja
sub
jl
fucomi
mov
lret
daa
mov
and
int3
idivb
and
insl
mov
push
rsqrtps
fldcw
sbb
pop
xchg
xor
mov
sbb
mov
jge
fcomps
xchg
mov
sub
aad
sbb
ret
adc
add
out
cwtl
push
loope
sub
or
enter
cmp
imul
mov
mov
mov
out
inc
test
aaa
lds
lret
push
jnp
insb
mov
hlt
and
inc
test
add
cmp
pop
xchg
shrb
add
inc
add
xchg
repnz
sub
xchg
adc
jno
mov
incb
xchg
ret
ja
stos
sahf
cld
mov
mov
leave
jecxz
mov
out
stc
ret
xchg
add
in
pop
or
dec
and
jmp
cmp
pop
cltd
sbb
push
dec
das
sub
subb
fisttpl
lahf
inc
sub
xchg
cmp
xchg
adc
add
jp
fs
mov
pop
das
sbb
adc
mov
mov
idivb
mov
in
aad
js
mov
sbb
pusha
mov
ret
adc
aaa
mov
push
sbb
pop
testb
sub
test
mov
mov
mov
mov
inc
stos
int
stos
push
pushf
cwtl
loop
mov
dec
out
add
cs
stc
movb
mov
dec
pop
xchg
and
adc
rolb
pop
jns
lods
push
inc
xchg
lcall
inc
mov
or
sbb
sar
push
and
clc
lcall
rcr
cld
clc
sbb
xchg
sahf
dec
cmpsl
in
in
pop
pop
mov
lods
lcall
aaa
sub
add
xor
add
sbb
jecxz
xor
sbb
push
aas
jae
push
data16
loop
xchg
sahf
xor
cld
sbb
cmc
insb
std
xchg
mov
repnz
cmpsb
iret
lock
pop
mov
sbb
or
jecxz
shr
in
rcr
xor
arpl
pop
and
pop
lods
sub
andl
loopne
loop
mov
mov
dec
hlt
loopne
or
test
pusha
jmp
insb
cmp
into
dec
stos
jp
dec
xchg
jg
cltd
repz
pop
negl
aad
mov
psubq
clc
jg
mov
out
push
and
mov
adc
xchg
pop
mov
push
lods
sub
pop
cmp
or
in
dec
out
sarb
lcall
dec
pop
incb
outsl
xchg
xor
loop
push
icebp
cmc
js
hlt
into
mov
adc
popa
out
test
jl
push
sbb
mov
cmpsb
enter
jno
inc
push
inc
sbb
sub
xchg
stos
ss
xchg
int3
inc
sub
shll
insb
ret
rol
jmp
testl
and
movsl
mov
push
cwtl
lds
cmpsl
mov
xchg
adc
adc
dec
sbb
insl
int
adc
movsl
sbb
test
fdivl
das
out
in
pop
dec
xchg
dec
cmp
add
mov
add
dec
inc
inc
in
mov
popf
aam
or
xor
jmp
add
std
xor
push
or
adc
addr16
cli
mov
clc
and
cmpsl
leave
scas
push
int
les
enter
fnsave
ljmp
ljmp
jbe
adc
test
jge
push
push
add
mov
mov
aas
arpl
addr16
xor
insl
inc
lock
clc
es
fs
ret
rol
xchg
adc
jnp
mov
mov
adc
popa
push
xchg
jno
pop
stos
pop
cltd
jae
lods
call
dec
ud2
in
and
enter
adcl
mov
dec
jmp
bnd
dec
mov
aad
pop
test
cwtl
push
insb
mov
in
pop
pushf
testl
dec
inc
cli
xchg
push
pop
mov
imul
addr16
dec
fsubrs
stc
jns
sbb
inc
cmc
inc
and
jge
stos
sub
mov
mov
sub
xchg
xchg
out
pop
and
leave
aam
lcall
sti
imulb
mov
sbb
cmp
mov
push
cmp
subb
sub
add
pushf
std
or
pop
popf
fists
cmp
push
cmp
nop
fists
shlb
shr
ficoms
push
mov
arpl
xchg
mov
xchg
out
mov
aas
call
lcall
cs
repz
pop
mov
inc
pop
and
mov
sub
stos
push
pop
int
les
iret
mov
leave
or
mov
dec
add
lcall
je
mov
cld
rcrb
mov
stos
icebp
xchg
out
sbb
test
add
cmp
daa
dec
test
dec
inc
in
dec
sub
into
stos
aad
sbb
stos
scas
push
hlt
negb
xchg
call
pop
mov
cld
cli
mov
dec
jecxz
xchg
sub
loop
cmp
mov
ja
cmp
ret
push
and
sub
scas
rcrl
jl
fs
call
push
jno
or
leave
call
jns
stos
xor
pop
jmp
mov
cmpsb
cli
adc
cmp
sub
ds
test
mov
add
pop
loope
mov
adc
push
dec
jnp
cmp
loopne
add
add
rol
dec
inc
sub
pop
clc
lret
and
inc
adc
nop
lcall
lret
jg
jl
inc
mov
sbb
or
sub
xor
fcmovu
enter
aas
and
outsl
scas
lahf
add
lret
dec
call
rclb
stc
inc
mov
pop
ret
xor
scas
fstpl
loopne
dec
cmp
push
mov
mov
out
test
aad
ret
insl
filds
mov
out
arpl
aaa
fcoml
aam
fwait
cmp
sub
scas
adc
mov
cltd
mov
pushf
cmpsl
ljmp
and
into
sti
in
mov
lock
pop
inc
add
pop
pop
ljmp
out
rolb
sbb
pop
test
cmp
inc
adc
divb
dec
pop
pop
fs
adc
cmp
imul
int
icebp
ret
aad
xlat
insb
xor
jne
push
lahf
push
lahf
pop
jmp
sarl
jno
das
fisubs
mov
xchg
xor
arpl
movsl
sbb
push
add
pop
xchg
push
mov
add
mov
idiv
fcoml
lock
es
push
push
adc
sbb
mov
out
je
jg
add
adc
xchg
fsubr
pop
and
ss
ds
pminub
pop
inc
repnz
shrl
mov
loope
imul
mov
fldcw
add
sub
cmpsb
xchg
and
cmpl
mov
aad
sbb
mov
jge
mov
mov
addr16
pop
mov
push
dec
scas
outsl
add
pop
lcall
lcall
mov
pop
push
mov
data16
mov
out
or
inc
sti
adc
mov
sbb
adc
pop
dec
xchg
or
frstor
cmc
mov
loopne
push
or
inc
je
je
dec
out
nop
cltd
pop
pop
fsubs
mov
fcmovnu
push
dec
add
jmp
arpl
sub
icebp
jp
and
mov
mov
mov
out
cmp
mov
dec
sub
aad
stos
push
dec
insb
xor
adc
je
es
std
mov
scas
inc
popa
dec
dec
ret
decb
icebp
sti
add
sahf
sub
cmpb
and
jle
and
dec
mov
scas
mov
mov
fdivrl
mov
mov
ret
push
adc
xchg
inc
dec
clc
lock
add
cmp
rorl
push
sbb
cmp
loop
push
or
cmpb
lcall
xchg
leave
stos
pushf
bound
mov
adc
mov
aad
cmp
jo
das
add
adc
fdivrl
jns
gs
loop,pn
sbb
jle
sub
jecxz
xor
push
or
arpl
incb
fs
es
xchg
xchg
pusha
pop
cld
xchg
cmp
outsb
fstpl
scas
pop
cmpsl
mov
sbb
mov
cmpsb
push
sbb
lea
pop
cmpsb
or
mov
jg
dec
mov
out
inc
dec
push
loop
test
or
ja
jmp
fcomps
inc
adc
stos
mov
jmp
fadds
pop
mov
adc
jbe
test
bound
or
pop
test
dec
mov
push
fs
les
mov
dec
ss
int
push
mov
cld
cltd
sub
roll
test
xlat
outsl
cs
cmp
in
pop
and
mov
mov
mov
xchg
mov
push
add
loopne
push
and
add
test
lret
jp
adc
jo
sbb
adc
lods
xchg
inc
loope
rorl
push
xchg
test
fucom
les
ret
daa
notb
leave
scas
cmp
inc
popa
mov
sub
repz
imull
aam
iret
iret
out
adc
mov
test
xchg
or
cmc
test
dec
lahf
jb
ss
lods
lret
inc
outsl
xor
sarl
sbb
push
clc
jb
jmp
xchg
jne
cmc
shl
rcrl
push
dec
push
pop
pop
add
test
shr
jge
xor
mov
dec
xchg
ret
jbe
aad
lods
sub
push
addr16
test
adc
push
xor
ljmp
and
push
adc
jg
sahf
pushf
mov
jnp
shll
sub
popa
scas
push
shlb
xlat
mov
roll
nop
jmp
inc
add
ds
scas
aad
push
jne
lds
aas
mov
xchg
sbb
insb
nop
push
pop
push
add
movsl
mov
scas
pop
xor
aam
jae
pop
lcall
ffreep
mov
or
mov
mov
or
jb
fildl
pop
outsl
push
ret
adc
out
jmp
sub
dec
daa
stc
adc
sti
pminub
and
call
cld
popf
pop
incl
and
mov
dec
fwait
sbbb
jg
jne
xor
setno
cmp
test
fisubs
lods
dec
sbb
xor
pushaw
sbb
pop
mov
mov
stc
repnz
push
push
mov
std
jno
mov
loopne
movsb
ret
push
dec
lahf
in
mov
enter
cli
rclb
sbb
add
sub
mov
jnp
adc
imul
sbb
jae
xor
into
xlat
sbb
lcall
adc
push
push
pop
push
mov
or
pop
cmpsb
sub
xchg
icebp
mov
sti
gs
test
lret
adc
push
in
inc
mov
push
pushf
cmp
sti
jno
pop
pop
pop
pop
pop
addr16
ret
push
fcompl
sbb
unpcklps
pop
mov
mov
sahf
and
sub
xchg
js
mov
dec
clc
mov
icebp
scas
add
xchg
loope
addr16
sti
stos
cmpsl
jbe
ljmp
ss
mov
ret
push
sbb
fnstenv
mov
mov
std
shr
xor
scas
pop
ja
xchg
int3
test
int
jl
rcl
test
mov
pop
mov
lods
and
and
fmul
jp
pusha
sbb
xchg
ror
movsl
hlt
out
pop
fstps
out
xchg
mov
shrb
addr16
fsubs
clc
cmc
cmp
mov
int3
jmp
sbb
call
stos
add
mov
add
les
jns
ret
mov
in
add
movsb
or
fistl
rorb
mov
fwait
xor
sub
cld
scas
scas
sbb
nop
push
dec
imul
clc
and
adc
push
rorb
and
in
scas
int
mov
out
fcoml
stos
and
dec
push
test
jb
dec
ljmp
mov
or
inc
sbb
xchg
movsl
stc
xor
adc
lcall
add
mov
cmp
pop
mov
mov
pop
ss
dec
or
neg
jne
fimuls
daa
clc
pop
pop
leave
pusha
mov
inc
push
sub
xchg
fcomp
jns
lcall
lret
bound
lods
sub
jle
mov
pop
mov
sub
stos
enter
xor
sahf
repnz
mov
test
xor
lods
jae
cmp
ljmp
enter
sub
lret
push
pushl
pop
adcl
stos
inc
shll
lahf
mov
rclb
push
cmp
adc
mov
js
loope
push
or
ljmp
ss
jne
pop
dec
mov
cmp
loopne
pushf
fidivrs
push
fcoml
xchg
cmp
lea
mov
aam
insb
mov
aad
int3
lret
inc
imul
jb
in
shll
nop
fldlg2
aam
push
xor
lret
cmp
adc
mov
add
adc
add
dec
mov
imul
popf
xlat
shrb
pop
pop
pop
fxtract
daa
aad
xor
or
fsubs
push
scas
movb
mov
mov
push
push
fisubrs
nop
cmpsl
pop
mov
int3
ficompl
inc
loopne
stos
cmp
inc
mov
leave
pop
dec
jp
shlb
cmpsb
mov
cmpl
sarb
jne
mov
jp
xor
xor
rorl
mov
cmp
add
mov
adc
out
shll
fmul
cmpsl
cmp
xchg
movsl
mov
sbb
sbb
addr16
sbb
pop
jne
cmpsb
lods
mov
jo
mov
jne
sarb
dec
loopne
lods
dec
stc
xchg
subl
or
pop
call
ret
insb
fcomip
jecxz
jb
cltd
mov
xor
adc
movsl
xor
or
into
mov
adc
shlb
mov
ret
xor
pop
or
adc
jge
stc
xor
xchg
xchg
or
cmpsl
scas
pop
cmp
shlb
sbb
std
in
add
enter
xchg
pop
and
xor
lock
popl
cmp
sub
and
or
bound
repnz
call
ret
test
add
test
shll
lret
sub
lret
or
hlt
jae
inc
lret
es
push
out
sub
xor
mov
and
or
loopne
scas
into
out
in
sub
lret
cmc
xchg
jg
cmp
pop
test
xor
jge
mov
scas
and
mov
add
mov
fimull
cmpsl
addl
arpl
sub
fwait
lods
adc
add
dec
rolb
mov
push
mov
ffreep
mov
jp
sbb
stc
jo
int3
cmpsl
outsb
mov
fadds
or
mov
addr16
or
enter
mov
fs
cld
cmc
dec
aas
adc
test
mov
fld
or
fcompl
les
cmp
shlb
xchg
cmp
sub
and
shll
rcrl
and
enter
leave
pop
adc
pushf
adc
in
pop
add
lods
lcall
jb
aad
cmpsb
shl
sbb
aam
in
cmpsb
arpl
lock
sub
pop
mov
adc
imul
push
and
pop
pop
sub
or
fdivrl
sbb
xor
out
test
xchg
stc
pop
xor
mov
xchg
cwtl
jns
dec
mov
mov
sbb
xchg
sbb
mov
mov
mov
mov
cltd
icebp
in
add
and
pop
adc
out
push
jecxz
pop
xchg
pop
int3
out
mov
pusha
xor
dec
ret
test
push
add
sbb
stc
adc
cmc
lods
jbe
xchg
sub
cmp
push
outsl
pop
xchg
mov
pop
push
push
lock
xchg
dec
out
jo
fbstp
cltd
xchg
xchg
mov
pop
jne
jo
mov
push
adc
or
xchg
xor
pushf
sbb
addr16
pushf
sub
xor
adc
pop
jb
int
mov
add
push
cmp
or
add
push
je
icebp
sub
mov
pop
and
bnd
xor
push
lds
adc
xor
lods
and
push
pop
add
ds
adc
test
arpl
mov
mov
xor
loop
mov
lahf
pop
imul
jbe
xchg
mov
cmp
mov
gs
shl
sbb
pop
dec
leave
fimull
inc
jne
add
jl
int
gs
loope
mov
lods
aaa
xchg
stos
int
lea
jne
jne
xor
stos
insb
jbe
mov
pop
xor
push
or
loop
jnp
push
pop
dec
sarl
andl
mov
das
sbb
mov
cld
xchg
cwtl
xchg
mov
adc
loope
sub
rclb
call
outsb
mov
loop
hlt
cltd
adc
sub
loop
inc
leave
inc
sub
inc
adc
mov
inc
dec
cld
xor
lret
xchg
dec
in
movl
pop
mov
fiadds
bound
dec
aad
push
cmp
xchg
ret
int
mov
fisubl
sti
sub
or
add
cmp
xchg
xchg
cmp
mov
adc
ss
bnd
out
cmp
outsl
mov
mov
loope
mov
sub
or
out
ja
ficomps
test
jns
into
inc
push
mov
les
int
fdivrs
xor
insl
push
lods
lock
fs
lret
adc
push
jl
pop
lds
lcall
inc
mov
or
adc
inc
push
adc
add
sarl
pop
add
mov
mov
fildll
mov
cwtl
cmp
mov
sub
sbb
sbbl
add
outsl
shlb
cld
jo
scas
pushf
jns
pop
push
aaa
cmp
jno
incb
sub
mov
std
mul
xlat
cmpsb
xor
into
mov
mov
lahf
mov
push
pop
jns
sub
adc
adc
out
xchg
dec
xor
or
xchg
push
rol
xor
push
test
hlt
inc
sbb
fs
outsl
jg
sahf
xchg
dec
in
iret
pusha
mov
out
sub
cmp
push
test
sub
jge
mov
call
fcmovb
mov
mov
and
mov
push
fistpl
sbb
mov
rorb
dec
inc
gs
lods
sti
jno
and
dec
cmc
aad
lahf
dec
sbb
and
mov
fisttps
pop
test
fbld
arpl
addb
push
jl
inc
and
lcall
pop
shll
dec
loope
xorl
sbb
inc
and
sbb
lcall
incb
jb
and
adc
add
push
jl
mov
je
xor
dec
jbe
push
pop
sbb
inc
jo
rcr
mov
test
scas
cmp
imul
ss
mov
cli
jno
sahf
stos
sub
dec
rcl
fisubrl
lahf
mov
movb
cmpsl
dec
xor
fdivs
mov
pop
dec
pop
daa
ja
mov
mov
and
stc
push
sub
or
out
push
adc
xor
inc
test
xchg
addl
out
mov
fsubs
add
push
lahf
fwait
hlt
in
push
repnz
subb
movsb
sbb
xorps
faddl
mov
add
arpl
imul
leave
push
mov
and
int
aam
and
adc
in
lahf
out
arpl
mov
pop
fldcw
pop
sub
aas
scas
jae
jge
popf
adc
ja
sub
test
push
dec
je
dec
xlat
fwait
sub
xchg
xor
scas
push
mov
fwait
push
xchg
and
sahf
popf
sbb
jno
pop
bound
xor
js
push
pop
add
dec
sub
lahf
ja
sub
lea
subb
pop
push
add
pop
fldenv
inc
sub
jmp
lds
mov
loop
pop
pusha
pop
push
fmulp
jecxz
in
insl
cmp
fldcw
pop
mov
push
ja
adc
mov
cmp
in
pop
pop
cmpxchg
sub
ja
xlat
fwait
mov
xchg
lods
je
mov
sub
in
test
mov
rcrb
rcll
mov
sbb
push
pop
or
movsb
push
stc
push
cwtl
fidivl
dec
imul
stc
in
add
dec
or
mov
adcb
sbb
add
dec
xlat
cmp
dec
int
pop
jmp
dec
adc
mov
pop
das
and
dec
xchg
stos
mov
xchg
movsb
dec
out
loopne
jmp
test
mov
jmp
mov
and
mov
lods
xor
scas
mov
or
push
jl
loop
mov
sbb
scas
lcall
sub
xchg
xor
cli
push
mov
push
pop
sbb
test
push
pushf
dec
cmc
pop
jb
or
dec
pop
jle
data16
js
push
push
divl
out
stc
out
scas
sub
in
ss
pop
aas
jg
adc
jno
or
dec
clc
cmpsl
lock
inc
adc
push
or
test
clc
pop
rcrb
into
pop
inc
sub
sub
jmp
lret
jmp
inc
frstor
push
ret
xor
and
jp
mov
push
sbb
mov
ss
loope
aad
xor
dec
adc
aad
mov
inc
jmp
aas
mov
in
ret
rcr
outsl
mov
dec
into
and
fisubl
aas
and
sbb
jnp
jns
add
push
inc
mov
icebp
adc
dec
je
call
jnp
lea
pop
inc
mov
sti
movsb
mov
xchg
fs
fwait
mov
or
or
cmp
lcall
mov
mov
adc
push
sbbl
pop
hlt
adc
adc
es
insl
lret
fs
inc
sahf
inc
jns
fists
pop
out
cwtl
int
out
test
fwait
lds
mov
sub
ret
cmp
mov
lea
addr16
push
jb
enter
inc
fisubrl
inc
call
push
leave
push
decl
lods
jle
xchg
push
aaa
cli
inc
xlat
clc
rcll
push
push
aaa
mov
sbb
adc
mov
cmp
shl
jae
add
ss
repnz
les
mov
sbb
subb
jb
aaa
dec
rclb
and
push
cmp
loop
mov
mov
les
in
test
push
shl
push
test
subb
stos
sarb
fwait
ret
cmp
fwait
xor
lcall
fmuls
cmp
dec
xor
and
lods
cmpsl
xor
je
xor
dec
pop
fxch
pop
rcrb
ret
in
repnz
fs
mov
pop
ja
mov
subb
mov
push
daa
in
push
and
popf
mov
out
orl
mov
cmpsl
lret
fdivl
jae
mov
mov
sub
aam
std
mov
mov
add
shlb
orl
cmp
pop
stos
add
leave
jb
arpl
and
out
adc
cmp
mov
and
mov
cmp
in
imul
lods
insl
adc
leave
mov
push
push
loopne
loop
xchg
add
ja
adc
out
pop
dec
sbb
mov
cmc
xchg
push
pusha
pop
lea
jno
push
sub
into
rorl
pop
push
cld
popf
jne
xor
inc
or
dec
xchg
stos
lcall
mov
push
mov
pushf
addr16
jge
cli
adc
push
popf
pmaddwd
jge
inc
inc
repnz
push
lahf
mov
jge
sarl
hlt
and
dec
jecxz
repz
pop
or
inc
mov
xor
fwait
jp
xchg
xlat
mov
xchg
inc
and
cmp
jge
push
out
jle
add
lods
or
in
popa
mov
push
cli
pop
push
outsl
nop
xchg
xchg
sbbl
pop
sub
lret
pop
push
push
ret
mov
push
cmp
cld
adc
shlb
fisttpl
js
add
sti
pop
or
inc
addr16
mov
in
push
inc
scas
cmp
in
mov
imul
out
adc
scas
push
xchg
push
mov
xchg
add
and
sbb
test
and
cs
clc
push
stc
loopne
fisubs
or
fcomps
sahf
jg
mov
std
inc
jnp
insb
mov
push
icebp
mov
std
sbb
push
dec
mov
add
sbbb
pushw
inc
dec
dec
fwait
dec
jg
pop
push
or
pop
mov
xchg
jl
outsb
mov
jns
pop
and
inc
imulb
in
je
out
dec
pop
scas
les
jns
inc
sub
sbb
hlt
iret
jg
add
shll
enter
and
xchg
into
ds
dec
inc
nop
mov
or
call
sub
addr16
mov
jo
out
sub
ss
jg
call
adc
fcmovnu
and
jge
test
shr
cmc
cmp
gs
sbb
fisubs
push
lcall
jg
repz
pusha
adc
jp
ret
jno
mov
fistps
sub
gs
cli
mov
sbb
outsl
subl
xor
in
sbb
lea
adc
stos
jmp
rorl
fidivrl
jg
movsl
xorb
dec
inc
ja
cmp
xchg
lea
sub
call
sbb
jo
mov
repnz
ljmp
clc
dec
dec
jge
sbb
mov
push
pushf
je
xor
inc
cmpsl
stos
iret
pop
push
cs
fidivrl
pop
loope
adc
pop
pop
iret
xchg
and
das
pop
test
mov
jp
xor
nop
arpl
fcmovnbe
inc
cmc
pop
das
incl
je
add
int3
ljmp
cmpsl
add
loopne
jbe
push
xchg
dec
add
cmp
in
cwtl
pusha
dec
fwait
xchg
dec
pop
fimuls
dec
imul
je
push
fdivs
lret
lret
scas
loope
lods
in
inc
jl
test
std
cmpsb
jmp
cld
sub
arpl
mov
sbb
cmc
sbb
out
cmp
mov
cmp
gs
mov
add
pushf
or
xchg
push
lods
cmp
mov
clc
jl
push
stos
es
je
xchg
xor
xorl
jle
jge
ficoml
outsl
hlt
lods
pop
xchg
inc
inc
mov
cli
xchg
lock
movsl
mov
adc
lods
popf
cmc
push
adc
or
mov
mov
xchg
or
gs
sub
aad
les
add
insl
loop
inc
mov
xchg
cmpsl
loope
imul
inc
jbe
add
into
mov
scas
ljmp
mov
out
stc
jecxz
pop
daa
aas
jnp
xchg
cmpsb
mov
mov
mov
cmp
xor
in
push
mov
int3
mov
adc
add
les
mov
mov
ror
fstps
gs
mov
and
imul
add
dec
pop
jge
add
push
add
add
subl
xchg
sub
arpl
jl
mov
ja
ret
dec
push
ljmp
sub
and
outsl
ret
xchg
imul
testl
lsl
push
mov
or
pop
lret
sahf
or
ficoms
mov
dec
data16
imul
adc
inc
add
lret
xchg
ret
or
and
ljmp
and
pop
mov
int
dec
in
push
popf
repz
pop
mov
imulb
add
aaa
add
add
add
nop
push
out
jle
enter
and
and
pop
push
or
in
adcb
pop
and
inc
cmp
dec
add
cld
scas
in
clc
das
subl
repz
call
std
adc
mov
lds
fcomp
push
jns
dec
mov
jns
dec
stc
imulb
pop
or
jge
jle
xor
je
mov
push
adc
pop
dec
mov
fsubr
pop
imul
movsb
fisttpl
dec
btc
cmp
in
repz
movsl
aad
inc
pushf
popa
lret
sub
loope
ret
jns
or
es
xlat
cltd
fsubrp
sbb
stos
divb
xchg
mov
push
mov
leave
mov
xchg
push
into
adc
testl
out
adc
clc
mov
stc
push
out
push
dec
pop
clc
adc
mov
insb
mov
cmp
xor
push
movsb
repz
test
jb
mov
add
pop
js
mov
in
or
rorb
mov
adc
and
orl
pop
lret
andl
stos
mov
or
xchg
mov
xor
xchg
mov
popa
cmp
fstl
sahf
xchg
xchg
test
arpl
out
push
insb
pop
je
mov
lret
xchg
adc
nop
lret
cmc
into
sbb
dec
mov
int3
mov
out
mov
dec
hlt
aad
pop
stos
pop
pop
sub
jae
jnp
xchg
hlt
xchg
lods
push
pusha
dec
out
rorl
outsl
sub
mov
ja
mov
add
cltd
sub
das
xchg
mov
jge
and
pop
xchg
mov
imul
out
xchg
ja
scas
pop
call
test
jb
inc
mov
lea
mov
push
sbbw
jbe
xchg
xchg
cmp
sti
stc
jl
dec
into
daa
iret
enter
out
lcall
test
mov
lret
add
insl
dec
or
enter
scas
mov
lret
ror
push
cld
call
pop
sbb
pop
mov
out
popf
je
pop
lahf
cli
stos
insb
das
inc
repnz
adc
mov
loopne
divb
sub
rol
and
mov
pop
or
xchg
jp
xchg
or
imul
inc
mov
pop
push
and
enter
dec
testb
sub
dec
lock
nop
or
pop
jae
xor
mov
outsl
xchg
mov
xchg
js
xor
outsb
lahf
add
lods
pop
stos
mov
sbb
xor
lret
shlb
xor
push
add
jge
pop
lds
jns
pushf
push
dec
xor
ror
lds
or
test
fistpll
or
sbb
sub
pop
cmp
loopne
mov
movsl
cmp
cmp
mov
roll
inc
ficompl
stos
push
mov
std
pusha
sub
cmp
rclb
movsb
std
add
nop
test
xlat
gs
loop
js
fs
xor
in
js
sbb
mov
rolb
fmulp
into
or
lret
sub
shll
fwait
aaa
mov
popf
mov
repz
xchg
or
cmp
stos
popf
mov
xor
in
mov
sti
daa
sbb
mov
add
clc
in
pop
push
dec
lods
testl
pop
dec
or
dec
xchg
pop
cmp
dec
add
imul
outsl
xchg
xor
shl
fucomip
push
das
add
jmp
loopne
inc
mov
inc
leave
scas
je
loop
nop
mov
sbb
movsl
inc
bound
imul
cmpsb
enter
mov
into
cmp
imul
sbb
std
jl
cmpsb
inc
add
je
xor
mov
sub
stos
test
in
or
push
dec
out
add
jecxz
adc
sti
pushf
adc
adc
xlat
add
fcompl
cli
sub
scas
dec
sbb
test
cwtl
and
dec
ss
and
lcall
dec
adc
sahf
mov
ret
in
decb
xor
sbb
push
nop
mov
push
pop
nop
xor
sarb
mov
aas
jnp
mov
pop
add
test
jp
push
cmc
nop
cmc
movsl
jnp
cmpsb
jecxz
mov
jo
in
sub
icebp
pop
add
xchg
xchg
pop
cltd
lea
das
jmp
xchg
mov
outsb
add
movsl
xchg
daa
sub
jo
sub
lods
dec
mov
and
adc
mov
fisubrs
jnp
xor
lods
out
mul
inc
hlt
int3
dec
dec
lods
outsb
les
adc
daa
mov
aaa
das
fdivs
nop
insb
ror
dec
sbb
sbb
pop
mov
xchg
mov
aam
and
stos
jae
in
lea
sbb
cmp
insl
and
aad
int3
imul
add
add
pushf
imul
int
pop
stc
in
pushf
mov
xor
xchg
subl
add
sahf
repz
pushf
mov
unpckhps
inc
xchg
std
pop
fiadds
jle
cmp
out
cs
xchg
cli
xor
sbb
pop
pushf
mov
test
bnd
xor
mov
adc
mov
inc
inc
pop
and
mov
add
cmp
mov
sub
adc
leave
lahf
aad
fisubl
pop
or
aad
adc
aam
cltd
lods
or
mov
std
xchg
sahf
sub
ret
xor
test
pop
mov
mov
ret
dec
ss
jecxz
jge
lret
jb
xchg
lock
mov
pop
loope
aas
xchg
lods
mov
push
out
ret
shlb
mov
ficoml
pop
add
mov
mov
cs
cli
xchg
push
add
rol
je
pop
or
pushf
jns
jno
or
xorl
cltd
mov
outsb
xchg
and
addr16
dec
or
stos
insl
push
or
adc
mov
orl
xor
lods
adc
sbb
lahf
loop
shlb
and
cmp
rcl
cmp
lock
mov
pop
or
jge
pop
sti
xchg
jp
sbb
and
in
or
mov
in
mov
mov
mov
shll
mov
test
pop
insl
sti
test
mov
xchg
add
pop
fwait
or
shrb
stos
dec
jns
cmp
pop
or
push
iret
jb
lock
es
scas
test
push
push
fimuls
xchg
sbb
clc
xor
mov
addr16
das
cmp
cmpsl
xchg
push
enter
jp
in
das
loopne
lret
mov
repnz
popa
fdivrl
in
js
or
fnsave
adc
push
dec
adc
rcl
imul
and
xchg
sbb
out
nop
and
sbb
jge
sbb
out
inc
and
mov
xchg
ds
in
mov
sub
dec
cwtl
in
mov
jb
lcall
xor
or
sbb
pop
mov
mov
inc
mov
shlb
xchg
adc
out
adc
lock
cmc
pop
popf
rorb
popa
dec
dec
mov
out
sub
hlt
mov
scas
jp
jnp
jp
sbb
mov
fiaddl
jle
mov
pop
lahf
sbb
cmp
idivb
add
daa
filds
loop
mov
jo
inc
insb
or
fstpt
pushf
xchg
xor
fidivl
les
loopne
push
out
dec
or
add
sbb
out
xor
les
cmc
test
das
push
xor
inc
push
testb
xlat
xchg
shl
sar
out
or
imul
call
xor
cli
rorb
out
push
push
adc
out
inc
in
inc
or
push
mov
sub
mov
mov
movsl
xlat
int3
xor
insl
push
stc
cmp
aam
movb
sbb
mov
xchg
out
movsl
fcoml
je,pn
fidivrl
sub
and
pushf
sbbl
jno
mov
fbld
push
in
mov
mov
jp
shlb
sbbl
pop
popf
sbb
mov
or
mov
jecxz
cmp
sub
dec
dec
lds
lds
and
jl
mov
idivl
push
scas
pop
mov
mov
sub
daa
jmp
mov
les
std
ret
loope
xchg
mov
les
lcall
test
test
xchg
ja
jmp
jno
shlb
mov
mov
adc
int3
push
push
popa
xor
cltd
outsb
movsl
push
and
xchg
rorb
mov
and
xchg
push
pop
add
cmp
scas
mov
mov
inc
out
mov
mov
aam
dec
and
jle
movsl
call
ja
lea
cmpb
mov
movsl
jmp
dec
fidivrl
inc
and
mov
mov
add
insb
push
scas
outsl
pushf
out
pop
pop
inc
pop
inc
push
lock
jnp
lods
std
and
rol
pop
loope
jge
mov
les
mov
in
jb
lret
mov
dec
clc
rcl
mov
in
xlat
push
leave
call
mov
sub
shrb
mov
xchg
cmp
loop
in
dec
xchg
adc
fsubl
aaa
sub
push
lock
cmp
daa
jnp
into
lock
ljmp
xor
mov
or
cmpb
pusha
loop
bound
popa
sub
ret
sahf
mov
popf
outsb
dec
fadd
lea
add
sbb
shl
sti
cmc
inc
mov
pop
dec
jae
fs
lcall
divb
cmp
lock
mov
test
dec
add
arpl
faddp
adc
pop
shrb
jmp
mov
insl
sub
ljmp
cld
push
sub
jmp
push
stos
cmp
std
repz
mov
out
lea
sarb
jge
das
and
sahf
call
lret
push
sbb
mul
sub
icebp
or
sub
xchg
mov
insb
or
insl
bound
mov
in
popa
xchg
jg
mov
xchg
mov
and
sti
pop
bound
stc
cmp
mov
sbb
xchg
cli
jb
jl
jg
test
add
sub
fnstcw
jae
insb
rcrb
lret
jb
fcmovnu
mov
push
mov
mov
adc
out
mov
faddl
ss
dec
mov
push
mov
lods
mov
lea
mov
lods
fs
and
adc
addb
fwait
sub
pop
cmp
push
mov
xchg
dec
insl
in
out
mov
arpl
cld
in
jg
push
lcall
adc
pop
mov
mov
mov
mov
lods
setnp
and
sub
adc
inc
dec
js
js
aas
mov
inc
push
inc
mov
push
pop
mov
mov
dec
push
pop
add
lock
jmp
cmpb
into
or
lea
fucomip
cmpsb
xorl
or
push
pop
add
pop
stos
scas
xchg
mov
loope,pt
in
loop
jne
repnz
adc
adc
xchg
mov
cltd
jae
push
outsb
loope
and
pslld
xor
fisttpll
adc
cmpsb
xchg
inc
and
jnp
jne
mov
and
out
push
dec
icebp
enter
test
or
pop
ljmp
nop
xor
lea
mov
adc
cltd
dec
jns
ror
push
pop
push
test
gs
push
mov
sub
mov
cmpsl
mov
shrb
xchg
xchg
test
lret
shll
or
lcall
es
push
cld
or
mov
sbb
mov
inc
pop
sahf
and
mov
dec
lock
pop
push
cbtw
icebp
or
push
xchg
loopne
popa
cmp
mov
dec
dec
xor
mov
fwait
mov
addr16
lret
inc
divb
mov
inc
jp
jbe
in
scas
ficoml
push
and
sbb
cmpl
cwtl
mov
sahf
cmp
mov
inc
add
cmp
test
dec
pop
xorl
out
out
xor
jbe
push
loop
sbb
and
jmp
pop
jne
mov
sub
sbb
orb
int3
cmpsl
inc
push
mov
adcl
mov
inc
lods
daa
cltd
mov
jle
stos
pop
push
insb
push
into
insl
imul
call
sarb
jg
js
push
or
scas
or
daa
ja
into
xor
pusha
leave
mov
mov
call
pop
cltd
adc
push
les
pop
cmp
in
imul
xchg
xchg
dec
sub
xor
int3
jo
fiadds
out
dec
inc
dec
xchg
fs
mov
out
mov
cmc
mov
mov
pushf
cwtl
insb
pusha
rclb
out
adc
or
xor
int3
mov
daa
movsb
fcoms
ljmp
cmp
js
ds
jae
mov
pop
subl
sbb
xor
notb
movsl
outsb
push
xor
pop
repz
push
int
out
cli
jnp
mov
cmp
inc
adc
pusha
mov
xlat
iret
inc
cmp
adc
shll
push
pusha
lock
arpl
sbb
cmp
call
or
and
xor
inc
add
sub
mov
mov
daa
sub
stos
and
push
pop
popf
sub
adc
aad
stos
push
popa
jl
shr
loopne
stos
dec
inc
adcl
mov
jmp
rclb
mov
xor
and
sbb
jne
sbb
pop
cmp
pushf
cmp
clc
xchg
arpl
sub
sub
jl
iret
jo
adc
fsubr
clc
cmp
stc
rorl
xor
and
sub
popf
adc
or
fisubl
sub
push
out
pop
stc
cmp
xchg
dec
ret
mov
addr16
mov
in
xchg
cmp
and
ljmp
gs
push
add
out
add
jno
mov
mov
pop
add
sub
mov
mov
lods
outsb
in
and
push
add
mov
or
cli
xchg
nop
fildll
fistpll
cmp
sub
cmp
scas
pop
mov
cmpsl
jae
jb
add
mov
mov
mov
mov
hlt
es
jg
or
inc
movsb
outsl
jg
icebp
mov
add
gs
subl
push
stos
mov
repz
jo
xor
jge
push
cs
aaa
fldcw
ljmp
cmpsb
imul
inc
jbe
push
movsb
into
in
pop
shr
fistl
and
cmpsb
adcl
ja
xor
addl
dec
dec
xchg
inc
in
mov
sbb
and
mov
mov
sub
scas
insb
cmp
or
aaa
xchg
push
adc
dec
fistps
jl
mov
push
jle
fwait
sar
test
pop
adc
push
sarb
jb
adc
stos
pop
jg
mov
mov
xchg
or
out
fidivrl
lret
jnp
add
jecxz
sub
std
ja
push
sbb
shlb
fldl
ss
pop
aam
subb
scas
out
pop
or
shl
test
cmpsb
insl
es
lods
add
add
add
mov
sub
cmp
loope
lahf
rorl
cmp
fcmove
mov
aam
xchg
pop
addr16
pusha
out
adc
int3
int3
lret
in
scas
mov
xchg
andb
mulb
xchg
mov
adc
cmp
push
push
mov
ret
push
inc
sub
insl
fwait
jecxz
test
aam
pusha
inc
cwtl
pushf
lds
cmpsb
mov
fisttps
adc
sbb
js
or
rcr
xchg
insl
addr16
cmp
pop
sbb
jecxz
mov
cltd
mov
pop
fdivl
adc
sub
ja
sub
mov
sub
rcrl
iret
adc
pushf
or
mov
mov
add
mov
sub
sub
push
mov
push
rcll
mov
sub
jl
or
xchg
mov
pop
xor
mov
xchg
and
cltd
xchg
testb
adc
out
mov
mov
addr16
shlb
mov
cwtl
cmp
adc
scas
push
jb
cmp
jle
into
adc
rcll
fpatan
cmp
xlat
dec
jo
notl
fisubs
jnp
jb
fcmovnu
test
and
dec
pop
and
mov
sub
in
cmpsl
push
or
test
ret
aas
pop
dec
outsl
xchg
adc
sub
pop
cmpsb
cs
aas
push
inc
aaa
addb
fcmove
cmpsb
jmp
or
bound
mov
dec
dec
or
jg
lods
pop
xor
push
inc
lods
fnstcw
repz
xchg
cmp
fwait
aam
push
cmovp
lahf
add
clc
xchg
sti
sti
pop
cmp
shrl
mov
out
dec
out
xchg
andl
jg
ficoml
cmp
fstps
js
sahf
popa
sbb
rcl
mov
outsl
mov
mov
imul
add
rclb
add
out
xchg
outsb
mov
xor
jne
pop
sub
push
push
rorl
pop
and
aam
dec
dec
sahf
fadd
mov
outsl
xchg
test
mov
xchg
jnp
lods
sub
ficomps
cli
stos
pop
mov
stc
sbb
adc
lcall
add
repnz
and
rorl
dec
add
aas
lahf
xchg
dec
sub
adc
jg
push
xor
insl
mov
push
rcll
jns
cmp
push
mov
pusha
mov
hlt
ja,pn
jge
shrl
xor
lods
xchg
gs
daa
mov
aad
jae
xor
or
notb
mov
addr16
cs
pushf
sbb
loop
adc
insb
dec
sub
mov
loope
mov
push
iret
xchg
add
les
or
icebp
push
not
insl
sbb
jp
jae
sbb
das
lods
sbb
jle
mov
dec
fidivrs
iret
xchg
mull
dec
mov
enter
push
jl
mov
or
inc
sbb
inc
insl
inc
arpl
je
sub
rol
out
lods
xor
daa
adc
sub
data16
sbb
add
xor
ret
sbb
movsb
jo
push
jmp
sub
outsl
mov
mov
aam
pop
mov
xor
lcall
add
pmullw
lcall
notb
pop
popf
push
push
xchg
and
dec
fbld
cmp
xchg
xchg
shll
sbbb
mov
jmp
jne
push
mov
fidivrs
andb
loop
and
xor
and
jne
cltd
jbe
inc
mov
inc
adc
fnsave
std
fs
int3
mov
pop
xchg
adc
and
popa
or
scas
in
or
std
cmp
fbstp
decl
dec
mov
in
sub
rcr
xor
push
lret
sbb
jo
movsl
mov
lock
pop
mov
jge
scas
xlat
repz
std
xchg
repnz
xor
lea
aad
mov
test
jnp
popa
leave
dec
add
lods
clc
ds
jle
push
test
ss
cld
push
fdivrs
xlat
movsl
and
mov
loope
or
sarb
outsl
std
data16
call
leave
cmp
push
mov
loope
lods
cmpsb
xor
int3
cmp
mov
mov
add
test
mov
ret
add
inc
punpckhbw
xchg
lods
std
push
repz
out
jb
mov
insl
mov
inc
inc
pop
prefetchnta
mov
mov
xchg
mov
push
push
inc
jge
mov
fidivl
jnp
pop
cmpsl
mov
pop
iret
sbb
mul
repnz
dec
fs
popf
and
icebp
lret
jp
xchg
cmp
push
jae
and
xor
sti
jp
pusha
mov
cwtl
xchg
arpl
cmp
loopne
sbb
dec
and
jl
loopne
sarb
fbstp
cli
jnp
xchg
cmpsl
jmp
dec
sbb
pop
sbb
mov
movsb
mov
int
add
add
mov
jns
or
pop
mov
movsl
fcmovnu
imul
ljmp
pop
adc
dec
and
xchg
push
pop
cs
inc
dec
movsb
inc
jge
test
jne
repnz
gs
push
dec
and
pop
stc
movsb
jmp
push
shrb
int
jmp
xor
out
popf
pop
call
in
mov
cmp
shr
hlt
adc
std
cld
inc
cmc
push
xchg
insl
scas
gs
nop
idivl
popa
sbb
andl
add
push
cli
data16
mov
and
push
clc
fisubs
fcoml
sbb
jb
mov
data16
jl
xor
add
sbb
push
mov
mov
mov
outsb
scas
divb
aaa
call
mov
mov
mov
scas
xchg
mov
sub
jmp
or
jmp
sbb
in
lods
and
jbe
daa
leave
test
shlb
sti
shl
dec
adc
mov
test
fwait
inc
xchg
ljmp
fstl
mov
loope
cs
js
arpl
dec
xor
push
gs
mov
adc
lock
cmpsb
or
lret
mov
jbe
dec
in
and
leave
jns
jb
popa
outsl
fadds
and
testb
stc
cmp
loopne
mov
call
cmpsl
les
ss
jl
xchg
mov
push
add
mov
jl
jecxz
test
pop
ds
cmp
das
cmp
push
jp
cmp
aam
imul
add
outsb
sbbb
xor
fbld
push
jns
cmpsl
lret
movsl
mov
arpl
andb
adc
je
push
xchg
mov
testb
dec
gs
rcrl
aas
mov
cltd
mov
mov
in
jae
jle
xorb
inc
test
pushf
lret
jo
jecxz
cmp
mov
add
cs
jne
mov
mov
test
shlb
push
aam
mov
addr16
mov
jmp
sbb
push
or
addb
jecxz
sub
int3
xor
mov
cmp
xor
xchg
jl
xor
mov
cwtl
addb
mov
mov
cld
shll
ja
sub
push
mov
lods
mov
mov
mov
mov
cwtl
mov
lods
lds
aas
xchg
insl
addr16
push
fcoms
dec
nop
lcall
nop
xchg
adc
shl
push
jl
sti
in
aad
jle
fadds
popa
cs
inc
out
sub
adc
jbe
add
outsb
or
roll
jae
insb
mov
add
fsubl
and
inc
shlb
mov
loope
jbe
sub
bound
insl
xor
push
mov
sbb
ror
test
lods
pop
mov
xchg
fildl
mov
xorb
ja
add
sbb
daa
add
mov
xchg
mov
andl
xchg
push
fadds
adc
and
outsl
fwait
cmp
pop
ljmp
lcall
xor
js
sbb
adc
push
loopne
bound
lds
mov
cli
jne,pn
int
add
sti
push
mov
lods
clc
popa
iret
push
cmpsl
popf
les
test
repnz
mov
mov
sarl
sub
cmp
add
andl
or
push
pushf
aam
cli
push
stc
pop
cmc
mov
jg
mov
sarb
cltd
mov
inc
mov
ds
jl
scas
or
mov
push
cmp
cmpsl
divl
xor
sub
bound
fnstsw
add
mov
push
mov
insb
adc
adc
dec
and
jp
repnz
add
push
sbb
xor
mov
pop
bound
sahf
sbb
pop
pop
jb
aad
stos
xorb
xchg
cmp
pop
fwait
pushf
lea
pop
xor
fdivrs
js
dec
pop
dec
dec
ret
jmp
rclb
adc
cld
push
or
mov
loope
lds
xchg
jb
mov
jmp
xchg
daa
insl
jno
cmp
pop
ljmp
inc
dec
mov
pushf
stos
idiv
in
xchg
cli
add
pop
jmp
es
sbbl
test
push
add
cli
mov
sub
jle
pop
mov
mov
lods
jno
pusha
cwtl
rolb
pop
jnp
and
pop
xor
fisubrs
lahf
xchg
adcb
sub
and
in
xor
mov
add
or
fldl
out
mov
pop
js
dec
cli
orps
movsb
push
fldl
test
filds
fldt
lock
mov
jl
test
sbb
mov
gs
lds
push
lret
loope
mov
in
pop
xchg
mov
pop
mov
call
movsl
cmp
lcall
inc
imul
mov
jmp
dec
lods
sbb
pop
iret
jmp
mov
stos
shlb
mov
repz
lcall
lahf
jbe
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
lcall
loopne
lahf
sti
mov
cltd
and
les
pushf
sti
mov
adc
jo
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
rorb
bnd
and
sbb
mov
push
xchg
hlt
cld
jno
push
add
push
add
push
dec
fdivs
cld
repnz
leave
jp
pushf
sti
mov
sahf
inc
out
popf
xor
movsl
sub
addr16
movsb
inc
jbe
jns
mov
popa
les
gs
lock
std
jp
imul
jmp
icebp
out
movsl
sub
stc
xchg
inc
fs
or
dec
mov
sub
outsl
inc
call
xor
hlt
mov
iret
mov
lret
mov
lods
xor
aaa
and
cltd
fcoml
xchg
xor
out
andl
jo
pushf
sti
mov
cwtl
xlat
adc
jo
jb
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fsts
les
pushf
sti
scas
in
and
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
int3
idivl
cwtl
cmp
les
pushf
jnp
in
and
mov
adc
jo
pushf
sti
scas
in
and
cltd
faddl
les
pushf
sti
mov
cltd
sub
enter
sti
mov
xchg
adc
jo
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
stc
or
aaa
and
jns
adc
pusha
imul
cltd
faddl
xor
mov
in
and
cltd
cld
adc
nop
inc
out
mov
xchg
and
cltd
mov
xchg
sti
mov
inc
fcoms
les
pushf
sti
mov
cltd
fdivl
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
cltd
fcoml
les
pushf
sti
mov
xor
adc
jo
mov
mov
jmp
aas
pop
idivl
jno
push
testl
mov
fsincos
dec
sub
in
pushf
in
xchg
lea
inc
push
inc
out
je
nop
roll
xchg
add
push
adcb
clc
push
sub
jno
mov
push
enter
rcll
pop
mov
shl
add
sub
int3
adc
adc
sarl
mov
sti
and
add
cmp
sar
adc
or
push
jl
inc
or
xor
test
push
cmp
ds
jne
add
sub
int3
popa
out
sub
fisttpl
push
idivl
cltd
cwtl
pushf
in
repnz
fistps
leave
sub
mov
jp
daa
pop
les
out
mov
call
mov
and
cmpsb
inc
fidivl
xor
movsl
testl
mov
mov
test
lret
add
dec
cli
xlat
mov
pop
push
jno
popa
jbe
adc
xchg
cmp
aad
xlat
adc
adc
mov
push
lods
sahf
imul
mov
mov
call
xchg
mov
hlt
loope
jo
bswap
ficompl
mov
xchg
pop
dec
sbb
adc
mov
fwait
fs
aaa
sub
lods
pop
mov
or
inc
push
xor
fdivs
mov
xchg
mov
mov
iret
xor
sbb
lea
xor
sti
ljmp
and
arpl
not
pop
pop
lahf
ret
out
sub
out
jg
imull
mov
jle
add
mov
jbe
and
imul
jecxz
mov
pop
sub
out
sub
xchg
mov
sub
dec
test
les
or
test
xor
pop
cmp
in
jae
sub
rolb
fcmovbe
dec
and
fnstsw
pusha
dec
cli
test
dec
inc
mov
and
xchg
cltd
lret
mov
mov
jo
cli
call
test
sub
shrb
enter
xor
jle
add
mov
or
and
dec
lea
or
fucomip
adc
fwait
jl
mov
pushf
add
ds
jno
push
jo
add
test
out
mov
mov
xor
bound
addr16
xor
cmp
aaa
rcrl
dec
mov
in
scas
mov
cmp
filds
adc
in
mov
mov
ret
scas
lret
sub
jge
sub
add
mov
mov
jecxz
js
push
cli
inc
xchg
ljmp
cmp
hlt
out
outsl
jbe
aas
ret
insb
test
cmp
mov
dec
xchg
xor
stos
cmpsb
mov
add
daa
mov
jg
mov
dec
ffree
loopne
in
rclb
sbb
lock
mov
js
xchg
sub
das
cs
js
sub
or
xchg
dec
mov
pminub
lock
addb
mov
mov
inc
pop
jl
push
add
mov
cmp
jae
les
dec
gs
jne
add
hlt
jl
stos
fwait
jge
cwtl
push
ja
les
dec
lsl
xor
outsl
stos
scas
xchg
data16
and
daa
inc
dec
shrb
or
sbb
fs
pusha
fnstcw
xor
faddl
add
or
push
std
call
jae
cmp
and
rol
adc
xor
loopne
jmp
std
cmp
lock
inc
mov
sub
scas
stos
arpl
insb
notl
sub
dec
fiaddl
ret
insl
dec
hlt
lods
push
imul
mov
cmpsb
sbb
incb
loopne
in
ret
repz
icebp
lods
gs
nop
dec
movsb
std
pusha
xchg
mov
scas
mov
xor
mov
cmc
repnz
or
cmp
iret
pop
dec
push
sub
dec
hlt
adc
lods
push
out
test
xchg
test
dec
shr
rclb
cmp
or
add
xchg
fisttpl
pop
xchg
loopne
push
pop
or
jae
shrl
jae
inc
imul
stos
and
shll
xchg
stos
xchg
lea
loop
push
repz
dec
pop
fstl
cmp
outsb
es
push
fisubrl
jge
mov
jmp
mov
aam
and
cmp
sbb
push
lods
pop
dec
lret
rcl
push
push
mov
push
sub
es
xchg
jmp
cmp
repz
out
jns
fstl
mov
mov
adc
add
add
sub
pop
mov
mov
sahf
add
push
sbb
sbb
dec
xchg
aad
shl
xchg
add
inc
jp
cmp
ror
stos
aas
adc
sbb
add
jo
mov
cmp
movsl
xchg
jp
orl
in
rol
adc
lahf
lea
movsl
jmp
cmp
sbb
bound
push
mov
pop
pop
mov
mov
or
sbb
repnz
jmp
lock
xchg
pop
mov
dec
movsl
loop
or
pop
nop
stc
sbb
push
and
push
push
jae
mov
jg
std
sbb
or
sahf
push
xchg
dec
fsubrl
xchg
ja
sub
inc
pusha
mov
cli
icebp
mov
je
or
or
mov
iret
xchg
mov
sahf
inc
bound
pop
andl
mov
lret
mov
mov
iret
push
sub
aam
insb
push
or
push
xor
daa
movsl
inc
ja
xor
je
bound
mov
ret
subl
and
jp
cmp
pop
pop
cmp
push
add
hlt
in
mov
mov
inc
jmp
add
or
movsl
jno
rolb
inc
bound
outsl
fimull
xor
out
add
rolb
xchg
dec
dec
outsl
test
je
mov
jmp
dec
inc
push
out
sub
insl
sbb
cmp
aaa
jne
cmp
jg
rol
ret
lret
jnp
xorl
mov
mov
cmp
mov
cmp
push
sbb
jmp
mov
push
jp
js
cwtl
dec
push
pop
ret
cmp
xor
lret
push
push
cmpsl
adc
movsl
mov
dec
aad
adc
aas
fwait
iret
icebp
fistpll
lcall
fsubl
sbb
cmc
mov
or
sar
repz
jo
jecxz
dec
fstp
je
pusha
fstpt
push
push
std
pop
je
stos
push
ret
add
sbb
mov
xchg
mov
add
or
mov
push
xchg
jbe
pop
into
pop
dec
jmp
rorl
test
xchg
aam
xchg
push
mov
jns
fcoms
testl
mov
xchg
ss
insb
rcrb
adc
cmpl
or
jae
fmuls
in
mov
inc
and
es
insb
dec
adc
out
push
arpl
xchg
leave
in
ss
or
test
icebp
and
subl
inc
fdivl
or
ja
sub
aaa
jno
sub
es
push
movsb
xor
push
xchg
imul
inc
shr
mov
inc
imul
icebp
add
and
pop
jp
mov
pop
sbbl
cmp
push
xchg
cmpsl
cs
sti
mov
dec
fistl
sub
pop
cmp
icebp
pop
jecxz
movl
dec
or
push
pop
ljmp
jae
dec
scas
push
dec
std
jle
dec
dec
adc
addw
push
int3
xor
repnz
xor
fs
fsts
popf
mov
sti
scas
shl
cmp
add
test
dec
adc
movsl
shlb
mov
fsubrs
test
ret
leave
sub
dec
daa
sub
cwtl
sti
loopne
mov
fcoms
or
test
inc
std
daa
aas
data16
pop
inc
sahf
mov
xor
cmp
bound
dec
shrb
aad
sahf
repnz
sub
dec
xchg
outsl
addr16
movsb
jbe
lea
sbb
inc
sub
aas
clc
and
fwait
xor
adc
jl
push
subb
sbb
add
dec
cmpsl
sub
das
leave
test
sub
into
dec
ret
push
mov
test
pushf
out
scas
pop
mov
jnp
out
or
cmpsl
inc
les
xor
mov
movsb
gs
push
and
test
clc
mov
mov
in
loop
es
cwtl
or
push
inc
std
in
sub
in
pop
popl
adc
and
xor
loop
or
sub
sub
xchg
xchg
daa
cmp
sub
outsb
je
xor
or
pop
ltr
pop
and
sub
test
push
or
add
and
out
jb
in
dec
ficompl
mov
cmp
popa
insb
or
dec
push
aam
xchg
int
inc
inc
popa
cmp
sbb
das
int
imul
cli
sbb
mov
push
js
hlt
cltd
pop
sub
out
push
popf
and
mov
adc
into
sbb
add
mov
mov
imul
ja
mov
sbb
leave
test
fmuls
js
pop
pop
pop
mov
mov
negb
cmp
sbbb
dec
insl
jmp
inc
fwait
cltd
jmp
dec
cmp
mov
jge
scas
dec
pop
push
push
cli
outsl
cmp
jne
adc
lods
out
cwtl
and
pushf
mov
nop
pop
add
mov
aas
sbb
fbld
add
stos
mov
sarl
adc
xchg
sub
fimuls
outsl
test
stc
lods
test
in
mov
ja
loopne
outsl
and
xchg
xor
mov
ds
mul
mov
jg
int3
cld
xchg
insb
je
add
aam
mov
sbb
imulb
repnz
mov
movsb
ja
sub
sub
xor
pop
gs
adc
iret
adc
stos
stos
fcompl
adc
lods
add
sub
push
jns
cmp
cli
adc
adc
push
repnz
adc
pop
inc
sahf
jae
test
push
cmp
jo
or
out
stc
faddl
xor
jbe
jl
xchg
xor
test
movsb
sbb
arpl
mov
out
push
sbb
dec
stos
aad
movsb
negb
sub
adc
fwait
aaa
shrb
in
dec
shrb
jg
divl
jl
in
jae
push
mov
inc
and
aaa
gs
in
cltd
xor
lods
cwtl
out
xchg
fwait
jnp
dec
inc
mov
movsl
test
int
je
andb
push
mov
push
jmp
in
fiaddl
mov
dec
subl
push
jo
mov
fisubl
pop
sub
mov
arpl
and
aas
je
push
std
dec
dec
pop
inc
dec
pop
aaa
push
pop
inc
push
pop
jge
pop
or
js
out
adc
mov
frstor
sub
xchg
mov
xor
cmc
pop
or
cmpsl
pop
cld
arpl
icebp
pop
mov
hlt
mov
xor
xchg
cmpsb
jle
dec
sarl
lret
fmull
pop
or
or
aaa
stc
pop
mov
dec
fstpt
fadds
mov
enter
jns
xor
mov
fsubs
test
stc
cmp
mov
jne
and
add
and
cmpsb
push
dec
adc
imul
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
