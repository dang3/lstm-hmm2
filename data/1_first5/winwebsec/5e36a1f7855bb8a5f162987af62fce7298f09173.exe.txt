push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
adc
cmp
inc
fcoml
aas
imul
xor
sbb
xor
pop
xor
push
xor
push
and
xchg
adc
mov
push
test
scas
mov
aas
cmp
jb
push
fsubrs
sbb
outsl
jne
push
adc
inc
mov
repz
inc
xor
into
sub
push
and
pop
xor
insb
mov
lea
cs
cli
mov
shr
push
out
pusha
jae
mov
adc
fiaddl
xchg
cmp
and
xchg
test
mov
mov
sub
aad
pop
cs
ja
mov
icebp
repz
gs
dec
call
add
je
mov
jb
int3
out
addr16
lods
das
add
aaa
mov
mov
xchg
cmp
mov
adcl
mov
test
lret
xlat
lods
outsl
dec
neg
js
js
ror
ror
add
push
js
and
inc
ret
inc
mov
sarl
popf
sub
dec
xchg
add
ss
xchg
lcall
dec
loop
push
pop
xchg
xlat
lahf
mov
push
insb
in
mov
pop
cltd
dec
pop
cld
inc
lea
or
shlb
inc
adc
mov
jne
xor
mov
pop
and
lcall
lds
inc
dec
jo
out
fcmovu
dec
fnstcw
test
in
cli
cmp
enter
xchg
iret
into
xchg
jecxz
pushf
stos
dec
fucomip
mov
mov
mov
dec
pinsrw
jmp
dec
jmp
adc
imul
in
stos
push
mov
stc
movsb
inc
aam
vpmacsdql
pop
out
ret
insl
cwtl
jmp
pop
aad
push
pop
loopne
mov
in
xor
nop
stos
daa
adc
inc
fmuls
xor
jl
inc
movzbl
std
xor
add
lock
out
lret
sub
shrl
popa
cmc
xor
lock
mov
push
movsl
cmp
cmp
mov
lret
sahf
call
jecxz
cmp
fists
inc
xlat
sahf
sbb
cmp
fmul
mov
lods
pop
mov
fnstcw
aas
into
daa
jne
jo
addr16
mov
or
sbb
push
jno
add
sbb
mov
insb
mov
push
fsubs
dec
mov
rolb
pop
cli
xor
mov
ss
jmp
adcb
test
dec
push
xor
adc
sbb
shr
dec
nop
push
les
aam
pop
adc
mov
sbb
fs
cmp
daa
test
inc
pop
adcb
into
clc
inc
jecxz
sub
jp
push
vsubpd
pop
sbb
cld
not
jge
std
push
push
test
jns
cmp
adc
sbb
aas
out
inc
out
sbbb
pop
fst
dec
std
pop
outsl
rcrb
rcl
pusha
cmp
inc
mov
ret
inc
jne
popa
pop
out
mov
lcall
xchg
jecxz
inc
outsb
mov
decb
pop
sub
push
cmp
rorb
sub
sarl
imul
xlat
jne
lcall
dec
push
and
add
rorb
ja
fwait
sub
dec
aaa
cmp
or
addr16
shr
inc
mov
mov
divl
gs
mov
out
in
in
adc
jg
and
sub
fdivrs
xchg
jno
adc
pop
sub
and
fisubl
sbb
testb
aaa
les
test
sbb
test
scas
lahf
sbb
dec
or
mov
dec
mov
and
add
push
pop
mov
cmp
imul
cs
and
into
jno
or
ror
inc
push
push
mov
mov
and
push
popf
cmp
add
add
push
jae
call
xor
stos
jbe
cmpsb
fstps
out
outsl
mov
cld
sub
jo
out
push
dec
sub
dec
icebp
pusha
ss
pop
mov
xchg
dec
jns
cmp
mov
inc
pop
pop
sbb
jo
shll
pop
mov
push
pop
pop
dec
sbb
xorl
insl
out
stos
sbb
add
mov
mov
into
sbb
lret
mov
in
push
fmuls
cld
jo
mov
inc
jae
xorb
mov
adc
icebp
ret
mov
mov
xor
in
pop
pop
mov
cli
fidivrs
and
sbb
mov
mov
test
pop
mov
add
cmp
hlt
in
xor
fwait
xor
pop
mov
in
stc
cmpsl
enter
and
das
cli
push
popf
add
fxtract
fstpl
jno
xchg
dec
vmovupd
pop
mov
or
dec
insb
cmp
xchg
mov
pop
xor
sbb
dec
inc
pusha
andb
sbb
mov
int
sbb
in
ret
mov
lcall
jp
je
mov
fistl
add
lock
push
orl
in
add
arpl
and
pushf
ret
jno
xor
fdivrl
xchg
push
dec
and
ss
fs
mov
repnz
adc
ljmp
mov
mov
and
mov
pop
in
sbb
enter
or
sahf
icebp
push
shll
fstpt
in
mov
sarl
dec
lock
shr
and
push
jmp
test
inc
adc
inc
lock
inc
smsw
out
inc
xchg
and
mov
mov
stos
lret
mov
add
lea
ret
adc
xchg
clc
ljmp
loop
jne
shll
dec
ret
xchg
lahf
jmp
sbb
sub
pop
cwtl
negb
xor
dec
incl
and
mov
mov
xor
ja
sub
std
ret
push
sahf
sahf
mov
cld
js
adc
dec
jns
ds
mov
jmp
shll
add
xchg
mov
enter
fs
ds
or
push
cmpsl
inc
call
cwtl
add
and
fistl
inc
adc
jnp
cmp
sub
jns
sbb
dec
lcall
pop
std
into
das
mov
sbb
vmwrite
pop
inc
scas
jnp
jmp
lock
jno
adc
pop
dec
xor
dec
sbb
lcall
outsl
mov
insl
fisubs
scas
mov
bnd
mov
shrl
cmp
push
leave
out
xchg
mov
push
and
and
adc
mov
jno
scas
in
jno
sbb
les
fmuls
arpl
sub
pop
popa
test
je
sub
das
inc
in
std
rcll
or
xchg
push
lahf
or
mov
or
ret
mov
pop
and
sub
sbb
mov
lea
mov
push
jb
and
fadd
or
lcall
cmc
aas
inc
add
jno
leave
mov
adc
mov
movsl
pop
arpl
cmp
sub
cld
mov
inc
loope
pop
inc
frndint
mov
lahf
lret
cmpsl
xor
cmp
mov
mov
push
out
xor
dec
insl
pop
les
fucomi
test
int3
icebp
and
xchg
xchg
fcmovu
and
dec
adc
dec
add
stos
ret
lret
jge
xchg
mov
sbb
mov
mov
adc
movsl
rcl
xlat
add
cmp
sbb
dec
scas
push
cmpsb
cmp
divl
cmp
sbbl
shrb
inc
sub
bound
mov
loop
in
pusha
sbb
jnp
sbb
decl
movsl
aaa
inc
iret
sbb
int
mov
xor
pop
repz
xchg
jmp
roll
nop
lahf
jmp
jnp
ficompl
jo
aad
shrl
subb
lcall
push
dec
push
sbb
fldt
leave
dec
bound
daa
mov
push
ficompl
pop
pop
mulb
adc
push
inc
loop
cmp
cmpsb
push
or
jbe
dec
js
je
cwtl
sbb
sbb
lahf
shlb
mov
sbb
sarb
or
inc
out
sub
ret
jb
repz
sub
dec
in
insl
push
pop
mov
push
iret
xor
inc
add
ljmp
or
popf
lods
aad
inc
aad
and
push
add
lret
mov
add
rcll
in
xacquire
testb
int3
pop
lret
ljmp
fs
xlat
sarb
negl
xchg
mov
ret
jmp
jl
and
out
inc
icebp
pushf
adc
jl
jbe
jp
sub
xchg
gs
xor
aas
in
lahf
and
pop
es
out
jp
sub
inc
sub
mov
cmpsl
dec
in
mov
bound
pop
test
push
xor
jecxz
xor
out
dec
lahf
lds
bound
shrl
jge
outsl
or
addr16
adc
cmc
mov
lock
lret
adc
pop
sbbl
repnz
push
xchg
out
daa
pop
je
fs
xor
imul
lods
push
int3
andb
mov
rcl
add
inc
sub
sti
dec
xchg
jne
sbb
jg
add
mov
insl
mov
fsubr
pop
mov
fcmove
add
test
int3
enter
fisttpl
push
adc
sub
push
fsubl
mov
sbb
inc
andb
aas
ret
ja
pop
mov
imul
push
addr16
gs
push
loop
xchg
out
jb
imul
sub
mov
in
jmp
inc
adcb
dec
mov
push
test
pop
push
lock
xor
xor
sbb
and
adc
scas
bnd
and
mov
icebp
xchg
fidivs
xor
mov
ja
shrl
jle
dec
int
lret
pop
jo
sbb
jl
jo
repz
jg
dec
test
add
std
pop
movsl
sbb
sbb
les
cmpsb
jns
dec
jecxz
mov
sub
push
adc
jae
popa
lret
out
adc
ja
mov
jo
loop
jmp
add
add
mov
add
aam
mov
xchg
imul
scas
inc
in
sahf
add
fisttpll
int3
xchg
dec
sub
hlt
xchg
dec
xchg
inc
or
adc
adc
dec
sahf
ljmp
fldt
adc
roll
push
mov
out
add
adc
rcl
ljmp
fisttpll
movsb
aaa
jge
pop
mov
fisttps
leave
scas
stos
fwait
mov
sub
scas
or
repnz
data16
loop
scas
inc
mov
imul
push
fldl
ds
or
stc
addr16
jmp
hlt
loope
adc
sub
in
in
xchg
movsb
sbb
addr16
and
int3
aas
les
data16
mov
add
sub
aas
es
fdivrl
imul
in
or
fs
mov
push
inc
ljmp
and
push
xchg
scas
xchg
xchg
and
mov
pop
mov
ds
mov
icebp
fwait
cmp
inc
movsl
push
decb
pop
xchg
and
jp
dec
pop
in
jmp
cmp
test
loope
mov
lret
adc
in
or
push
mov
sarl
js
cwtl
cmp
rolb
inc
jecxz
cmp
pop
and
mov
cld
or
ret
adcl
jg
outsb
jae
in
sbb
sbbl
xor
push
push
loope
flds
test
sub
dec
jle
xor
fdivl
mov
push
fdivrs
aad
gs
cmp
inc
cmpsl
in
scas
lods
jge
fidivl
xor
lcall
pop
arpl
daa
out
test
sbbl
cmpsl
mov
adc
push
outsl
xlat
lock
inc
add
push
movsl
sar
outsl
sub
in
lcall
dec
lret
sbb
and
xchg
mov
ja
push
jg
negb
aam
cmpsl
daa
cmp
test
add
mov
test
mov
lret
xchg
add
fs
rcl
out
and
mov
xchg
pop
dec
sub
clc
stos
inc
mov
leave
mov
mov
and
ret
fcomp
pop
cmp
test
out
repz
lods
mov
or
mov
gs
test
repz
icebp
mov
xor
loope
xchg
loope
xlat
jne
cmp
hlt
pusha
mov
lcall
add
sbb
xchg
std
or
aas
lahf
cmp
sub
mov
lahf
pop
push
jl
jb
stos
xor
mov
cld
or
push
mov
shlb
mov
cs
mov
mull
test
xchg
sbb
sahf
aam
mov
cwtl
loope
or
dec
fcmovu
mov
out
pop
jecxz
fnstsw
sti
aam
mov
inc
mov
inc
fnsave
sub
jmp
fistl
cmp
jl
scas
mov
test
push
shlb
rcr
test
push
arpl
mov
push
xchg
jno
imul
pop
or
arpl
sub
shll
or
pusha
jno
inc
xor
movsl
xchg
outsb
stos
pusha
cs
jp
fiaddl
ds
mov
aas
gs
cltd
xor
sti
in
negl
lahf
jecxz
mov
pop
xor
pop
jmp
jbe
jo
cmp
into
push
pop
cmp
shll
jbe
push
jle
mov
cld
adc
pop
sub
lret
mov
movl
pusha
sbb
rcrl
lret
jbe
cmpsl
jns
popa
add
jb
cmpsl
push
mov
cld
mov
stc
lahf
das
cmp
mov
outsl
dec
cs
and
cs
fucomp
cmp
dec
into
aas
mov
int3
xchg
mov
lods
xchg
popa
mov
fcoml
bound
mov
add
sahf
pop
cmp
mov
dec
xchg
pop
lret
mulb
aad
xor
aad
fidivrs
js
sub
sub
test
inc
push
xchg
and
ret
inc
test
push
add
adc
rorl
inc
mov
imul
sub
test
dec
mov
cmp
inc
xchg
xor
mov
adc
es
int
scas
dec
test
mov
sbb
push
adc
les
inc
or
mov
lds
js
sbb
int3
push
dec
fidivl
bswap
jnp
mov
sub
shrb
gs
pop
ja
xlat
das
dec
je
shl
nop
jbe
add
sub
add
and
jle
xchg
imul
stc
dec
xor
sub
call
jl
and
into
filds
or
adc
aas
push
movsl
add
mov
mov
mov
jge
mov
xor
inc
jbe
inc
popa
add
movsb
arpl
xchg
movsl
les
or
sbb
pushf
jo
or
sbb
xchg
loopne
xchg
cmp
mov
jb
pop
imul
in
adcb
outsb
sub
cmp
int3
out
ljmp
inc
and
ja
jp
adc
sbb
cmp
push
call
mov
push
sahf
sub
xor
pop
push
push
and
fistl
outsl
jmp
lret
mov
ljmp
js
aas
push
pop
sbb
int3
cmp
add
loop
out
divb
arpl
lahf
sbb
add
les
push
aas
mov
sub
mov
or
loopne
pop
mov
out
pop
mov
and
and
test
push
pop
and
dec
push
sbb
jb
mov
push
js
stc
jle
rcrb
dec
or
xchg
les
xlat
bound
insb
pop
dec
and
or
in
jg
popf
ds
scas
pop
mov
cli
icebp
pop
cmp
or
push
pop
xlat
dec
out
jne
jle
mov
ret
lods
addl
mov
mov
cmp
mov
cli
sbb
lds
xor
inc
jae
mov
inc
mov
mov
test
fldl
ret
enter
addb
int3
imul
and
movsl
xor
push
pop
push
subb
aaa
divl
mov
sub
sbb
mov
push
xchg
jp
imul
inc
imul
cmpsb
lcall
fistl
jl
divl
sub
mov
cmp
mov
jno
addr16
jg
jmp
inc
jg
and
dec
rclb
std
int3
pop
fwait
jmp
sbb
xchg
ljmp
mov
je
fdivrs
sub
popf
pop
pop
cmp
or
fdiv
push
cmpsl
imul
xor
add
xchg
ss
dec
mov
xchg
fwait
test
lahf
dec
int
mov
xchg
aaa
jmp
xchg
stos
add
mov
aas
call
js
jmp
nop
jmp
daa
pop
mul
xlat
sbb
insl
addr16
xor
push
and
scas
loopne
daa
jbe
aam
fmul
cli
jl
mov
cmp
sub
xor
cmp
lret
sbb
jecxz
xor
mov
pop
mov
xchg
push
adc
cld
pop
repnz
aaa
push
pop
xchg
gs
mov
call
subl
xlat
std
in
outsb
test
mov
jb
adc
cmpsl
push
mov
arpl
int3
inc
mov
pop
xor
inc
mov
insb
and
es
rorb
shr
xor
mov
loopne
lret
adc
jo
cld
sub
xor
es
addr16
ja
mov
idivl
sub
xchg
cmc
dec
sbb
stc
ljmp
cli
imul
xor
rcrl
lret
jns
jge
push
out
jecxz
js
std
pop
xchg
ja
mov
mov
add
sub
mov
pop
cltd
dec
ret
mov
ss
insl
add
cbtw
inc
dec
loopne
and
fs
adc
dec
popa
sbb
shrb
mov
insl
mov
dec
aad
mov
pop
das
into
sub
fisubrl
add
add
pop
or
add
lods
xor
cmp
orl
pop
sbb
test
leave
xchg
push
pop
mov
xchg
sub
out
push
popf
dec
and
inc
shll
subl
iret
stc
inc
imul
jg
or
mov
test
out
add
dec
lods
testb
dec
scas
test
xchg
mov
push
inc
ror
xchg
cmp
out
cs
mov
into
mov
push
gs
jnp
in
test
pop
and
out
lock
xchg
lea
call
out
pop
movsl
mov
cltd
aam
adc
setge
movsb
adc
dec
sbbb
mov
inc
inc
sub
in
cltd
and
push
jne
ds
pop
pusha
sbb
xchg
movsl
push
sahf
movsb
cmp
sarb
aas
pop
xchg
sbb
and
cmp
mov
and
or
es
arpl
lret
xchg
cld
shlb
adc
cmp
sarb
inc
or
pushf
repnz
stc
dec
cmpsl
repz
cmp
int
aas
pop
and
xchg
lahf
cmpsl
stc
subl
jo
jl
rcr
cmpsl
loope
mov
aad
jbe
int3
jae
test
jne
dec
pop
cli
lahf
in
or
and
xchg
xchg
mov
xchg
push
push
sbb
mov
hlt
ret
mov
and
pop
adc
mov
push
inc
mov
xchg
lcall
popf
mov
mov
daa
or
xchg
clc
add
out
hlt
or
cmc
mov
fwait
and
xlat
shll
and
pop
test
adc
pop
aas
jle
or
xor
pop
cmp
push
movsl
xchg
testb
mov
movsl
fsubs
mov
fs
ss
dec
loop
push
pusha
out
pop
stc
div
jae
fbstp
pop
cmpsl
jecxz
nop
js
test
icebp
xchg
pop
stc
pop
or
mov
add
fisttpl
pop
xlat
adc
cmc
add
jecxz
cltd
les
rcl
push
or
pop
xor
fldl
in
pushl
sbb
xchg
adc
xchg
insl
xchg
lret
call
loopne
cltd
js
and
pusha
cmpsb
mov
lock
and
adc
xchg
test
push
sbb
jnp
movsl
cmp
jmp
xor
popl
lret
movsl
loop
sub
lahf
iret
jp
mov
movsl
fisubl
aaa
cmp
xor
push
rsqrtps
mov
or
jl
push
mov
dec
loopne
cmp
aad
dec
inc
shrl
push
shrb
and
rcl
mov
jl
insb
stc
icebp
sub
cmc
jp
int
xchg
xor
les
or
cmp
pop
fs
out
xchg
ret
movsl
lds
andb
cmpsb
stc
adc
jge
test
ss
movsl
roll
and
and
inc
jne
scas
cmpsb
es
cwtl
aam
adc
outsb
rol
mov
pusha
int3
pop
enter
out
inc
mov
pop
and
or
mov
cmp
popl
jg
gs
out
and
pop
cmp
jb
cmp
xor
cmpsb
ljmp
arpl
jno
mov
and
mov
in
cmp
int3
or
jbe
and
jg
push
dec
pop
int
in
xor
pop
stc
adcb
mov
ret
das
ffree
fwait
add
lret
mov
mov
mov
sahf
add
jns
inc
push
aad
pop
das
daa
pop
mov
or
pop
and
dec
popa
scas
iret
adcl
mov
int3
out
or
lea
pop
insb
jbe
xchg
mov
mov
aad
test
cmc
sub
pusha
push
mov
sbb
in
inc
xor
pushf
stc
push
adc
sub
mov
pop
xor
sub
in
repz
scas
popf
fwait
ljmp
pop
xchg
mov
mov
mov
es
push
mov
stos
add
add
cmp
ljmp
sbb
movb
std
cwtl
add
scas
cmp
sbb
shl
xchg
stos
dec
aaa
cmp
jg
cld
jnp
push
jne
mov
cs
push
add
mov
outsb
sbb
sarb
imul
ljmp
aad
adc
adc
push
ss
push
jmp
add
daa
mov
stos
outsb
js
lea
lret
pop
in
and
pop
aad
call
add
insb
rolb
pop
xor
loopne
hlt
xor
xlat
lahf
sbb
mov
xchg
jae
xor
pop
cmpsl
mov
and
cmp
sbb
pop
dec
jnp
inc
icebp
push
pop
or
push
sbb
dec
mov
push
push
inc
xor
adc
jb
mov
sbbb
outsb
leave
in
rcl
aam
insb
iret
lods
or
mov
insl
add
repnz
and
sahf
hlt
popf
push
jp
push
dec
pop
xchg
jno
ret
adc
cmp
inc
and
mov
xor
xchg
addb
cmp
or
nop
inc
mov
xchg
out
jns
dec
push
into
mov
out
fisubl
push
add
scas
xor
pop
jmp
mov
lret
mov
dec
mov
xchg
int
pop
xchg
jl
mov
insl
clc
pop
pop
dec
pop
adc
outsl
jnp
pop
jecxz
push
mov
sbb
jl
add
incb
and
sar
jge
jmp
jne
jo
fmul
lods
inc
jne
outsl
xchg
jne
cmp
jns
inc
add
inc
out
jle
and
sbb
cmpsl
popf
shrb
mov
sbb
leave
dec
sbb
xchg
mov
jge
jns
clc
repz
adc
iret
mov
pcmpeqw
stc
loop
repz
rorb
cli
inc
jae
sti
aaa
in
dec
movl
cmp
add
rcll
mov
mov
mov
adc
sbb
lods
push
repnz
dec
outsb
dec
int
out
inc
mov
mov
mov
and
mov
push
ret
in
enter
or
imul
std
sar
addr16
test
mov
sbb
or
leave
hlt
lret
jecxz
fiaddl
sub
push
out
sub
std
out
and
xorb
xor
sbb
mov
jne
xchg
mov
ret
pop
in
lcall
fsubr
mov
add
aad
ja
or
mov
xor
scas
scas
loope
mov
push
xchg
sub
imul
add
ds
stos
xchg
push
inc
cmc
xor
push
jno
cmp
iret
enter
fisubs
push
loop
mov
dec
jmp
cli
dec
mov
cmc
cltd
out
pop
popf
lret
dec
jnp
loope
sbb
test
inc
mov
adc
movsl
loop
push
mov
push
out
clc
scas
std
dec
or
sbb
jmp
xor
enter
mov
mov
sti
xchg
aad
arpl
sbb
addr16
xlat
sahf
out
sbb
loope
out
cmc
sbb
xchg
ja
mov
shlb
scas
out
sahf
lcall
or
mov
lret
jo
lahf
ror
aas
mov
mov
lahf
clc
lods
xor
push
sub
insl
decl
fildll
iret
cmp
imull
inc
mov
adc
fisttpll
inc
and
fdivr
push
insl
in
mov
xlat
stos
shl
ja
cmpsb
frstor
inc
jae
pop
pop
das
fcomps
and
jmp
sub
ret
aaa
xchg
daa
cmp
sbb
sub
adc
cs
lock
cmc
dec
fisubl
xchg
mov
jb
popa
cmp
outsl
orl
test
pushf
cmp
cmpsb
inc
faddp
stos
lock
and
mov
loop
cltd
adc
jl
mov
test
jbe
addb
add
mov
lods
out
loope
xor
mov
arpl
and
jecxz
or
adc
adc
inc
lahf
xor
xlat
pop
lret
jecxz
pop
push
or
pop
sbb
sub
sti
cli
push
push
repnz
aas
xchg
xor
jl
xor
dec
int3
mov
push
push
pop
xchg
out
mov
test
or
jne
data16
cmp
and
aaa
test
mov
xor
mulb
test
sbb
inc
and
pop
mov
es
jmp
ja
xchg
jle
stos
cmp
adc
int3
clc
aas
mov
outsl
mov
or
and
xchg
mull
pop
push
aaa
xchg
mov
sahf
cmpsl
aas
out
xor
jmp
mov
out
popa
sub
loope
test
xchg
pop
iret
dec
push
mov
movsb
divl
cmp
ss
inc
cltd
movsl
push
data16
mov
pop
mov
dec
aad
mov
ja
in
pop
mov
or
jmp
sub
in
int3
mov
xor
shrb
xor
mov
lret
push
or
aam
rclb
lds
dec
pop
jno
mov
js
push
sbb
jbe
test
xchg
popf
xor
mov
out
insb
jne
push
sub
scas
sub
cmpsl
adc
mov
sbb
pop
mov
insb
adc
jne
pop
xchg
xchg
out
push
lret
sub
fs
adc
mov
jb
inc
xchg
rcrb
cltd
jne
mov
js
ror
xchg
jbe
pop
and
or
mov
sbb
mov
mov
xor
adc
pop
pop
pop
xchg
mov
mov
adc
sub
push
repz
mov
mov
out
rcll
into
in
xor
out
adc
aam
jg
sbb
and
or
adc
mov
cmpsb
test
es
jns
pop
and
mov
subb
cmp
lret
pop
adc
ss
mov
loop
xchg
push
pop
inc
dec
stc
enter
ljmp
jge
stos
jno
shrb
push
adc
popa
xchg
adc
push
fmuls
jl
push
pop
jb
cli
push
stc
xchg
mov
daa
dec
push
aam
nop
call
fwait
sub
gs
loopne
mov
scas
outsb
jecxz
sbb
cmpsb
jecxz
lcall
mov
lods
dec
push
in
in
ja
xor
jmp
adc
aaa
scas
lock
pushl
push
nop
rcrb
push
xchg
sbb
pop
dec
push
pop
mov
fdivrs
mov
fwait
and
popa
sub
lds
jle
rcr
jp
dec
pop
test
loope
ret
inc
ja
ret
dec
sub
scas
sarb
push
mov
test
add
inc
xchg
in
pop
jge
rorb
push
in
mov
cmpsb
dec
dec
mov
jb
lret
faddl
jl
incb
cmp
or
adc
mov
aaa
lock
add
jl
cmc
lret
lcall
test
outsb
dec
ja
sbb
adc
push
xchg
sub
mov
add
push
mov
arpl
test
fists
int3
pop
ja
lods
mov
pop
mov
das
fistpll
adc
jg
mov
ss
lock
adc
std
lds
mov
mov
outsb
mov
and
lea
mov
repnz
insl
rcl
mov
test
xchg
int3
lds
mov
dec
sbbl
and
add
jmp
and
pop
dec
cmp
xorl
pop
jae
adc
push
mov
mulps
mov
int
mov
shrd
and
inc
sbb
enter
xchg
ret
mov
sbb
stos
xor
xchg
fnstcw
xor
sub
push
adc
pop
bswap
dec
std
call
jnp
adc
xabort
jns
pushf
mov
int3
popf
std
xchg
and
int
push
lods
sub
out
inc
xchg
inc
fs
or
xor
mov
scas
push
jae
jle
and
xor
ficomps
mov
mov
pop
or
inc
popf
rcr
popf
fstp
aas
mov
jle
sti
sar
jb
dec
inc
mov
leave
xor
popf
sahf
adc
lea
xor
jmp
inc
xchg
cmc
cmpsl
popa
rorl
jp
xchg
out
fiadds
or
jbe
jo
aaa
das
stos
push
mov
or
cmp
mov
xor
jmp
pop
jg
daa
mov
or
and
xchg
mov
adc
jbe
pushf
mov
xorl
add
pop
popf
inc
mov
mov
aam
xor
and
lds
cwtl
add
test
daa
jnp
add
mov
lret
lret
cltd
jge
and
mov
sbb
xchg
lcall
mov
adc
outsw
sbb
sti
inc
pop
jae
aaa
lahf
ret
lret
xchg
int3
pop
popf
into
jns
xor
scas
pop
inc
and
rorl
fistpll
sbb
in
pusha
ljmp
ret
lock
mov
xchg
stos
jb
repz
nop
sar
filds
sbb
xor
jmp
leave
dec
cmp
stos
scas
popw
adc
jno
cltd
clc
bound
ss
mov
lods
xor
xor
sbb
shrd
ljmp
shlb
mov
repz
xlat
lds
std
out
add
sbb
inc
add
add
pushl
jo
pusha
add
repnz
arpl
cmpsb
insb
in
lahf
jno
inc
icebp
jo
js
bound
xchg
das
adc
xchg
aam
pop
cmp
sbb
cmpl
sti
mov
setnp
mov
pop
jne
outsl
mov
mov
pushf
cmp
jb
push
aam
outsl
popf
lahf
lahf
loope
cli
fisttpl
pop
jmp
scas
jno
mov
rolb
sub
add
orl
add
or
push
mov
xor
add
les
jnp
shrb
adc
lds
mov
add
loope
xor
add
dec
or
fisttpl
xchg
test
xchg
rorl
call
xchg
sti
push
sbb
sub
pop
push
and
andb
cwtl
repnz
icebp
cmc
cwtl
push
jl
mov
lds
jno
movsb
inc
pop
jl
in
rsqrtps
cli
out
mov
aam
test
or
test
loop
cld
adc
or
add
jmp
lret
jo
push
cmovne
cs
in
imul
jae
jl
cltd
call
out
or
ltr
mov
sub
stos
mov
xchg
push
push
dec
lods
dec
adc
and
lods
faddl
call
aad
add
jecxz
fcoml
cmp
imul
jle
jp
push
int
scas
push
pusha
dec
add
arpl
lock
lds
mov
jle
xor
jecxz
aaa
daa
add
mov
sbb
movsb
loop
in
sub
sub
pushf
icebp
cmpsl
insb
jg
and
scas
and
js
dec
sbb
jns
add
fnstenv
sbb
das
repnz
stos
inc
sbb
pushf
add
cmp
or
jge
aaa
sub
aam
vdivpd
inc
sti
mov
out
ror
call
ret
xchg
imul
frstor
push
mov
xchg
push
add
scas
push
xor
sub
mov
cltd
mov
ret
mov
test
dec
ljmp
lret
add
xchg
mov
ret
lds
movsl
cmp
inc
test
and
fcompl
cmp
mov
das
xlat
jl
loope
repnz
scas
mov
es
lods
sub
push
pop
or
ljmp
or
sarb
aam
addb
fwait
push
sbb
dec
filds
aam
stc
shrl
lock
and
test
jmp
mov
dec
jbe
pushf
dec
cmp
lock
mov
repz
jo
nop
jp
dec
lcall
scas
xchg
xchg
jae
mov
mov
dec
rclb
int
test
jl
add
sub
and
ja
cmp
dec
aam
shrb
mov
insb
les
fst
test
in
and
cmp
pop
in
and
xor
lahf
ret
div
cmp
movsl
hlt
or
ffree
addb
cmpsl
jbe
int
popf
inc
or
mov
adc
fildl
inc
jmp
bound
mov
fistpl
and
iret
sub
int3
xchg
loop
adc
insl
cs
fisttpl
andb
shlb
push
lcall
repnz
or
loope
jge
sub
sbb
jp
insb
sub
push
sbb
orb
add
les
std
push
push
test
xchg
pop
clc
jns
mov
sbb
sbb
repnz
mov
mulb
mov
ret
and
xchg
lret
mov
mov
xor
enter
mov
pop
enter
jecxz
jl
scas
pop
dec
xor
inc
subb
push
inc
das
ret
into
andl
sub
iret
jmp
push
repz
push
sbb
dec
aaa
sbb
mov
mov
mov
movsb
sar
es
mov
cwtl
sub
movsb
add
push
adc
pop
mov
sahf
add
ss
insb
and
cmc
or
push
mov
adc
rcl
jmp
dec
push
daa
cmp
rclb
les
test
repnz
sahf
idivl
pop
mov
mov
int3
pop
pop
aas
lea
out
jbe
jecxz
mov
mov
imull
in
test
into
enter
push
insl
xlat
jecxz
es
fldl
shll
inc
ljmp
jecxz
repnz
js
xchg
mov
dec
jae
add
out
dec
push
in
and
xchg
lret
or
in
xchg
xor
shl
jns
lret
xchg
pop
pop
cmpl
test
inc
add
or
add
jo
shll
loop
into
imulb
sbb
arpl
inc
daa
sub
sahf
out
cltd
nop
cld
mov
mov
push
jne
int
pop
inc
fs
rorl
mov
aaa
fidivs
mov
ret
bnd
in
shlb
test
test
test
add
insb
jnp
pop
lds
mov
out
xchg
mov
sbb
adc
cli
sub
stos
scas
aas
xchg
push
outsl
aaa
mov
clc
dec
xchg
or
add
test
aam
xor
jbe
cmpb
cltd
mov
lret
add
insb
mov
cmp
adc
jge
inc
xlat
fcomps
mov
movsw
cmpsl
sarl
scas
out
leave
sarb
jmp
lock
dec
sbbb
mov
adc
mov
es
jno
or
jge
mov
cmpsl
pushf
cmp
fistpl
insb
xchg
push
lahf
xlat
movsb
pop
or
xchg
sti
mov
scas
scas
pop
add
inc
shlb
mov
push
jg
mov
outsb
mov
inc
das
cmp
dec
adc
out
scas
fsubrs
out
xchg
addr16
sub
mov
xor
vunpcklps
nop
jns
pusha
mov
mov
xchg
push
rclb
mov
sti
jmp
mov
lods
sti
xor
fdivr
lret
push
mov
adc
xor
gs
mov
lock
in
rorb
stc
pushf
sbb
xchg
jmp
push
outsb
loopne
and
jg
jmp
stos
sbb
pop
mov
aaa
int
sarb
lods
xchg
xchg
mov
mov
xchg
je
cwtl
sbb
gs
push
cmp
ret
shlb
addl
call
in
cs
and
adc
mov
stos
jae
dec
hlt
sbb
in
jne
push
cmp
hlt
lock
fnstsw
add
mov
jno
cs
cs
outsb
cs
sub
xchg
test
or
mov
arpl
jno
test
sub
xchg
mov
mov
mov
pop
bound
js
pushf
pop
push
les
pop
mov
fwait
bound
aad
mov
cmp
movsl
inc
test
in
inc
outsb
aad
add
std
cmovge
clc
add
jne
or
mov
shrl
xchg
jno
xchg
xor
dec
ss
sbb
ss
mov
hlt
xchg
repnz
andb
cwtl
scas
cmpsb
out
push
and
jb
inc
mov
jae
push
shll
sub
and
sti
or
xchg
or
jl
daa
inc
ja
cmpl
mov
stos
dec
cmp
xchg
xchg
xchg
cwtl
test
inc
shr
cmc
mov
dec
clc
aad
insl
pop
ss
js
lret
loope
into
andl
inc
jns,pn
inc
inc
pop
pop
adc
notb
push
or
add
xor
arpl
push
in
add
mov
pop
push
xor
out
aas
jle
stc
pushw
xor
popa
jae
loope
and
sar
sbb
dec
push
bound
sti
out
cs
loope
cld
aas
jg
int3
ret
test
shrb
push
dec
cmpsb
or
in
call
ret
aaa
xchg
xchg
popa
test
enter
adc
sbb
jge
popf
push
in
loopne
push
cli
sub
pop
sbb
xchg
push
jno
aaa
pop
outsb
outsb
cmp
jae
sbb
xchg
pop
push
imul
subl
inc
fistpl
or
je
aad
jno
shrl
shll
sar
hlt
out
add
sub
mov
dec
nop
mov
sub
mov
mov
jae
mov
mov
mov
mov
mov
test
push
push
and
mov
rclb
pop
pop
pop
push
sbb
dec
cmpsb
aad
cltd
cmp
adc
jbe
mov
rcrb
add
xchg
mov
inc
and
push
adc
and
repnz
pushf
movsb
sbb
stc
into
adc
repz
out
xchg
push
pop
mov
sbb
mov
or
fldenv
es
hlt
inc
test
ret
je
imul
jmp
mov
xchg
or
pusha
movsl
clc
jns
loope
int
mov
fs
pop
loopne
fimuls
aas
into
jo
mov
mov
cmpsl
cmp
mov
push
adc
mov
push
enter
dec
scas
adc
jo
out
scas
icebp
pop
bound
jmp
mov
cmpsl
jnp
jle
sub
inc
dec
and
mov
lods
daa
frndint
int3
or
push
push
mov
cmp
imul
mov
js
dec
dec
jne
dec
mov
xchg
outsb
in
and
dec
jne
pusha
mov
lcall
sar
dec
or
add
dec
ret
insl
or
popl
and
das
mov
cwtl
test
gs
divb
adc
in
inc
sub
addr16
mov
bndldx
addr16
cmp
adc
jmp
xchg
adcl
out
mov
xor
sbb
xchg
lods
in
pop
ret
cltd
sbb
test
subl
add
and
or
push
pop
bound
jb
mov
mov
outsb
lock
loopne
jae
add
mov
lret
loop
cmp
add
jb
dec
movsl
hlt
popa
movl
mov
vfnmsub213ss
fwait
outsb
loope
sbb
jbe
aaa
subb
pushf
cld
push
jle
adc
add
xchg
lret
pop
mov
pop
add
pop
or
sub
mov
dec
scas
out
fistl
mov
lcall
xor
and
into
xor
loope
or
scas
push
mov
add
pop
inc
aad
lret
add
or
nop
stos
shlb
cltd
dec
push
out
fistpll
xor
repnz
push
mov
adc
lea
pop
inc
push
jb
xor
mov
mov
cld
scas
ret
pop
push
pop
mov
and
pop
icebp
add
jb
or
imul
into
mov
shrb
inc
pop
insl
lret
xchg
hlt
pop
jne
pop
cmpsl
and
mov
xchg
lods
add
dec
mov
dec
in
subl
ret
andb
dec
rcr
arpl
mov
jmp
into
or
sbb
xchg
push
repnz
test
pop
in
push
imul
jnp
int3
and
and
push
lret
addr16
movsl
jae
mov
mov
xchg
xor
xor
rdmsr
lock
add
andl
pop
xchg
gs
into
mov
sub
jp
dec
xor
pusha
inc
ret
and
mov
cmpsl
fnstcw
pop
mov
lods
int3
cltd
push
and
lods
dec
mov
sub
mov
xchg
cli
adc
cmc
mov
inc
xor
pop
mov
mov
jne
out
movsl
mov
bound
or
ljmp
and
or
mov
rolb
outsl
imul
jmp
lcallw
jne
sbb
push
and
cmp
jo
pop
and
xorl
roll
daa
test
xchg
pop
btr
fidivs
mov
jns
mov
mov
cs
push
aas
outsl
insl
and
sahf
or
cwtl
test
inc
data16
pop
sarb
stc
pop
inc
je
dec
fbstp
cmpsb
xchg
and
clc
xchg
lods
rcrb
addr16
lds
add
push
or
inc
les
aaa
and
and
xchg
mov
jmp
mov
cs
fwait
sbb
gs
push
pop
out
lock
inc
sbb
xlat
adc
imull
cmp
bound
daa
ljmp
pop
cld
loopne
pop
pushf
or
jg
es
jbe
movsl
mov
ja
in
std
mov
roll
mov
popl
aad
xor
add
mov
lds
fsubs
in
inc
pop
sbbb
popl
push
mov
out
popa
sbb
and
dec
scas
add
lock
sbb
jl
pop
fsqrt
inc
pop
cmp
sarl
in
sbb
movsl
jp
and
xchg
cmp
jmp
test
adc
popf
dec
hlt
xchg
lock
and
cli
decb
in
dec
ss
and
stos
std
aam
std
cmp
and
push
push
popf
push
ret
cld
pop
in
iret
pop
cmp
or
push
fdivrs
sbb
jg
mov
iret
jecxz
push
jns
rolb
rcrl
jns
or
push
push
xchg
shrl
push
sub
cwtl
mov
jg
mov
sbb
rcr
sub
cltd
xor
xor
leave
pushf
cmpl
sti
jae
cmp
xor
popl
lods
xchg
lods
in
xor
or
cmp
aaa
mov
stc
sbb
jae
pop
adc
adcb
add
leave
pop
repz
in
xchg
testb
jge
je
inc
add
or
sub
inc
and
or
mov
fists
push
push
mov
xor
mov
incb
mov
fwait
hlt
rcrb
xchg
inc
inc
sub
mov
stos
rcll
clc
jg
test
leave
repnz
stc
dec
jnp
pop
inc
jle
ljmp
jg
jo
inc
pop
out
xchg
pop
lcall
adc
jge
aaa
mov
jbe
sub
fnsave
movsb
ljmp
mov
jl
dec
outsl
mov
outsl
fstpl
loopne
sbb
push
sbb
dec
out
stc
xlat
imul
cs
sahf
sub
shl
stc
or
test
sub
test
sahf
insl
xchg
fistpl
dec
mov
fidivs
or
pop
xchg
mulb
fcoms
sub
cmp
and
cmp
sub
aad
jno
xchg
sti
scas
fbld
xchg
sub
stc
addb
int3
xor
inc
aaa
dec
adcl
jns
loop
test
pop
mov
cmp
and
in
fistpll
cli
sub
iret
push
andb
xor
orl
xchg
mov
out
add
inc
inc
push
cmp
push
push
lret
cmp
push
enter
lret
xchg
mov
lret
sarl
movsl
or
adc
sar
ss
jno
sbb
xchg
mov
lret
ret
mov
andl
stos
jmp
add
push
pop
fidivs
mov
loopne
scas
out
push
outsl
cmp
sbb
pusha
outsl
pop
idivb
mov
inc
jns
out
dec
in
cmp
test
rorl
inc
out
insb
lcall
in
movl
loop
sbb
mov
hlt
mov
and
pop
sub
sbb
mov
adc
int
lahf
mov
lods
ret
lock
inc
lcall
jge
inc
cmp
xchg
ret
out
das
jb
mov
imul
ds
xchg
inc
xor
es
cmc
mov
fistpl
scas
jl
mov
xchg
arpl
mov
jae
cmpsl
stc
idivb
mov
or
xor
cmpsb
cmp
mov
sti
stc
cltd
cmp
sbb
mov
pop
call
or
dec
hlt
and
lahf
and
sbb
jg
mov
cld
sbb
xor
imull
jmp
xchg
jae
aas
push
sub
into
mov
loope
fdivrs
jmp
inc
lea
cmp
dec
mov
mov
ds
rolb
enter
mov
outsl
les
xchg
inc
mov
outsb
mov
xchg
ss
jge
out
mov
hlt
pop
test
cwtl
movsb
arpl
scas
loop
repz
jae
mov
imul
push
mov
jo
sarb
je
or
mov
enter
popa
mov
das
daa
in
je
out
notl
fs
jnp
dec
inc
cmpsb
out
inc
mov
mov
add
dec
or
xor
dec
icebp
sbb
sahf
add
inc
test
dec
xlat
pushf
xchg
test
mov
in
push
les
ror
inc
xchg
loopne
sahf
pop
cmc
fdecstp
in
fcmovb
push
jmp
sub
test
pop
test
int3
push
fsubrs
test
into
fldt
sbb
hlt
into
rcll
sbb
dec
popa
mov
xor
sub
pusha
fisttps
add
insl
sub
mov
lret
rolb
cmp
loopne
shrl
adc
mov
xchg
das
mov
pop
and
pop
nop
sbb
cmpsb
pop
sti
insb
pop
add
fldl
inc
push
fistl
mov
cs
mov
lret
fwait
dec
iret
cld
iret
jns
fs
pop
cmp
mov
repnz
push
mov
ds
jg
ficoms
ret
push
shll
push
dec
gs
mov
jecxz
sbb
push
sub
add
pop
adc
mov
inc
mov
cmp
jns
add
test
insl
pop
xchg
scas
out
in
stos
mov
xor
xor
outsb
lds
int
lret
lahf
insl
outsb
push
bound
js
pop
dec
cmc
call
or
inc
stc
jge
xchg
roll
push
sub
mov
and
dec
jge
shr
sub
outsb
jle
mov
dec
cmp
sub
rcrb
mov
insb
xchg
pop
data16
and
jl
pop
addr16
adc
jge
clc
stos
pop
lds
cmp
testb
nop
outsb
popf
in
rcl
mov
mov
mov
sarb
and
jne
mov
cmp
add
imul
push
lret
test
mov
xlat
iret
fs
sti
stos
addl
pop
sbb
inc
sub
imul
dec
xor
leave
call
lock
test
and
cld
dec
jp
cmpsb
xor
loop
xor
jnp
sub
dec
popf
out
mov
xor
insl
push
imul
icebp
ja
and
cwtl
xor
test
push
mov
data16
cmp
push
sub
in
cmc
dec
test
mov
cli
inc
push
int3
stos
outsb
xchg
xor
mov
and
in
push
dec
shll
adc
iret
aad
jmp
jg
fs
inc
jl
xchg
das
jp
xchg
inc
stos
inc
dec
in
in
mov
out
mov
jle
out
pop
repz
lret
jb
call
pusha
jbe
dec
lock
cmp
jmp
out
jp
add
pop
popf
xor
cwtl
pop
das
jmp
divb
mov
jnp
push
and
pop
outsb
seta
mov
sti
xchg
push
add
pusha
push
mov
mov
shlb
pop
cmpsl
outsb
dec
stos
mov
bound
sub
dec
repz
das
push
xor
insb
in
and
imul
adc
mov
nopl
jge
mov
andl
mov
xchg
mov
ud1
fwait
mov
clc
sbb
sbb
cmc
jbe
aas
and
dec
sub
sarl
cmpsl
hlt
dec
inc
jnp
out
outsl
pop
xchg
outsb
inc
xor
sahf
rorl
fisttps
ffree
in
rcrb
outsl
sub
inc
or
jmp
stos
andb
xchg
sbb
pusha
aam
lcall
jg
mov
aas
dec
lret
gs
jmp
arpl
mov
test
mov
jl
jl
cmc
outsl
pop
jo
cmpsb
mov
sbb
shll
mov
fsubrs
rcr
push
xchg
lea
gs
call
xchg
pusha
cmp
arpl
and
and
mov
lret
xor
add
arpl
mov
mov
jno
ds
hlt
mov
jge
add
pmaxsw
push
jl
jle
aam
loopne
jg
push
xorb
repnz
adc
rcll
mov
sbb
jne
mov
push
xor
dec
lds
jp
cmp
mov
es
dec
fildll
mov
xchg
daa
popl
and
dec
ds
arpl
test
pop
mov
adc
shrb
mov
ljmp
fst
in
sub
add
loopne
std
dec
add
cmp
and
adc
arpl
enter
rolb
lret
je
cmp
inc
mov
jo
fimull
inc
or
fisubrs
loope
xor
std
jle
inc
je
push
jo
negl
ljmp
mov
addr16
push
jle
stc
testb
sti
notl
push
jae
pop
push
mov
inc
cvtdq2ps
mov
stos
addr16
out
mov
int
inc
lcall
fisttpll
test
pop
cli
in
jmp
mov
cmp
je
testb
fdiv
xchg
mov
cmpsb
cs
repz
add
add
inc
test
push
into
adc
je
ljmp
test
jle
adc
gs
push
js
test
sub
fsts
cli
movsl
xchg
cmpsb
mov
repnz
and
lea
int
cwtl
repz
std
xchg
call
cmpsb
pushw
jbe
ret
and
and
out
pusha
les
cmpb
mov
in
popf
mov
clc
jge
jl
out
aas
add
test
test
xchg
aad
jle
jg
lret
fdivl
xor
out
ret
decb
push
jns
push
shlb
nop
inc
fimull
pop
clc
xchg
pop
out
pushf
cmc
dec
mov
clc
pop
mov
push
jnp
dec
cli
xchg
push
out
xorl
xor
sub
stos
cmp
push
and
xchg
xlat
in
aad
lds
out
loop
and
insb
pop
mov
aam
aas
scas
cs
xchg
loope
dec
das
and
aad
dec
xchg
mov
cmp
fnsave
inc
adc
pop
test
ret
aaa
das
out
pop
loope
test
repz
mov
pop
int
sub
sbb
add
in
neg
and
imul
inc
pop
testb
jl
sti
data16
shr
aam
mov
push
or
mov
aam
mov
jp
pop
loopne
jp
fsubs
jo
mov
out
imulb
ljmp
out
lock
mov
lods
push
int3
cmp
mov
adcb
loopne
daa
inc
pop
adc
jg
iret
cmpsb
leave
out
xchg
and
jno
ficoml
push
adc
mov
adc
lods
sarl
imul
push
ss
repz
jo
popf
ss
cmp
inc
lahf
dec
clc
mov
xchg
inc
mov
insl
shr
dec
dec
inc
and
mov
jle
xchg
fs
sub
int3
cmp
pop
es
outsl
pop
mov
dec
sub
or
rcrb
cmp
or
xorl
call
sarl
imul
movsl
push
mov
jae
leave
inc
mov
cwtl
mov
sub
testb
dec
jmp
aam
loope
int3
rcrb
adc
cmpsb
mov
xor
jge
inc
mov
jge
fs
pop
popf
lret
popa
test
cltd
lods
outsl
and
icebp
sarl
lcall
jno
es
inc
mov
xchg
adc
and
lock
adc
pop
xchg
push
pop
cmp
inc
in
xchg
xor
mov
insb
cmp
pop
cmp
mov
test
sbb
mov
cld
in
iret
aam
dec
xchg
out
scas
push
dec
sti
notl
hlt
add
inc
pop
roll
inc
mov
pushf
mov
jge
lock
js
in
push
pop
dec
arpl
add
pop
adc
sti
loopne
fwait
lcall
and
xor
cld
aad
hlt
lret
test
adc
xor
sub
or
or
jnp
mov
mov
mov
rolb
shl
push
mov
cmp
into
push
or
inc
repz
cmpsl
mov
sub
pop
lds
cmpsl
rorl
cmp
sbb
adc
push
addr16
lds
lahf
lock
pusha
xchg
test
les
inc
aas
aaa
jmp
cld
push
out
push
repz
sbb
xchg
xor
test
imul
jg
xchg
add
xchg
mov
pop
js
jns
sbb
clc
sahf
pop
or
stos
lret
arpl
arpl
jbe
jge
xor
incl
clc
xor
roll
and
push
xor
pop
repnz
pop
aad
mov
pop
jae
stos
test
mov
cmpsb
neg
fcompl
sbb
jg
push
and
mov
jge
stos
es
mov
cmp
and
mov
jns
adc
adc
mov
mov
jmp
bound
ss
mov
divb
ret
pop
clc
sbb
sub
negl
ds
icebp
addb
flds
mov
xchg
ljmp
mov
cwtl
adc
jmp
pop
movsb
jo
ja
fnstsw
jg
lret
jb
and
dec
dec
inc
sub
push
rorl
jne
cli
push
nop
ret
lds
stos
dec
dec
jp
sbb
insl
in
and
add
aad
sbb
push
aaa
test
mov
jg
shrb
ret
incl
cli
mov
and
or
in
in
xchg
push
mov
jne
or
rcll
mov
mov
rcrb
gs
cmc
xor
je
push
dec
mov
sbb
jle
ret
loopne
add
jne
dec
dec
cwtl
or
jle
jo
fwait
jne
pop
cs
shll
jnp
xor
addr16
mov
scas
mov
pop
add
arpl
subb
dec
jl
dec
pop
push
std
jge
sarl
mov
cmp
add
test
jne
aaa
sbb
sub
add
cld
jge
cwtl
jg
cltd
add
sub
cmp
aad
addr16
push
lcall
push
int3
lret
test
jnp
push
iret
test
cmp
jmp
ffree
add
xchg
dec
or
pop
decl
mov
repnz
pusha
fidivrs
ds
adc
pushf
rolb
loop
insl
push
insb
test
popl
loopne
mov
xor
dec
int3
aad
add
pop
or
arpl
movsb
mov
dec
push
or
out
pop
pop
fstl
shrb
repnz
in
hlt
lods
jmp
pop
inc
faddl
lods
scas
push
xchg
xchg
and
dec
and
xchg
adc
out
and
repz
fadds
push
dec
push
cmpsb
mov
mov
mov
out
pusha
shll
aaa
mov
sbb
shll
data16
adc
sub
clc
xor
mov
lock
sbb
aas
in
and
xchg
hlt
leave
push
jae
mov
sbb
pushf
add
dec
add
adc
add
incb
mov
scas
stos
cmp
sub
adc
or
push
int
pop
dec
je
mov
jno
xchg
iret
gs
sbb
adc
mov
and
push
mov
out
cmp
add
stos
xchg
mov
mov
iret
fsubs
or
lock
xchg
call
mov
and
addr16
push
lret
add
sub
and
sbb
ret
jne
pop
pop
dec
mov
jo
inc
jb
push
mov
outsl
sbb
mov
pushl
lock
and
jp
je
imulb
add
add
xchg
daa
dec
xor
mov
sub
fwait
and
jl
lea
shll
mov
shl
cmp
cltd
xchg
aam
dec
mov
das
jg
mov
and
shl
push
mov
dec
cli
insb
adcb
cmp
cmp
pushf
inc
adc
cmp
sbb
push
icebp
push
sbb
lret
xorb
add
fiadds
call
aas
mov
fisttpll
test
push
jmp
push
aam
xchg
sbb
fs
xor
aaa
stc
lods
jle
insb
repnz
xor
mov
ja
cmc
xchg
lret
stos
sub
push
and
jle
pusha
add
sub
pop
imul
sti
cmpsl
stos
dec
cwtl
mov
add
out
xchg
jecxz
xchg
es
pop
lahf
loope
aas
lret
inc
jmp
fiaddl
shll
push
call
in
sub
pavgb
fbld
mov
scas
xchg
incb
shll
ret
testb
sub
outsb
cmp
repz
nop
jbe
mov
add
mov
shrb
stos
and
loop
in
xchg
sar
jno
adc
scas
mov
sbb
mov
cmc
cmp
or
jb
in
insb
adc
adc
adc
into
push
int
jb
push
fwait
test
iret
bound
push
lahf
scas
inc
sub
sub
out
cmp
in
movsb
adc
jbe
sub
js
lahf
mov
dec
lds
mov
std
ret
aad
cmp
mov
sub
add
fidivrl
mov
sbb
pop
aad
adc
fs
imul
testb
add
sbb
nop
and
push
cmpsl
dec
cmp
xor
inc
add
data16
cmp
lcall
jge
decb
sub
aas
lea
or
loopne
mov
cmpsl
mov
adc
inc
shlb
xchg
outsl
pop
jns
stc
lds
jl
test
inc
xor
cmp
jae
add
int3
in
and
sbb
sbb
mov
sbb
ljmp
adc
sub
fwait
xchg
bound
lea
outsl
cltd
scas
or
repnz
add
iret
dec
jae
addr16
adc
in
imull
dec
cli
rcl
adc
mov
ret
lcall
loopne
fadds
cs
xchg
sahf
pop
mov
push
add
ljmp
jno
in
dec
lret
xchg
fsubl
push
iret
outsb
xchg
lahf
or
test
jo
sbb
nop
xor
ret
incl
jle
pop
mov
sub
dec
push
adc
movsb
lret
ss
lods
lea
xchg
cmp
xchg
testb
scas
femms
mov
push
adc
add
cmp
add
mov
mov
mov
rcll
and
lahf
dec
daa
imul
outsb
ja
jg
repnz
push
xchg
addr16
xchg
pop
sbb
and
pop
out
ret
lcall
or
arpl
jl
int3
into
cltd
loope
mov
fldenv
sbb
sub
popf
ret
cmc
out
adc
out
lds
addr16
lock
loop
std
jno
iret
imul
xchg
mov
or
pop
ds
loopne
jle
dec
ret
push
lock
nop
jb
mov
arpl
push
mov
and
lret
out
jp
punpckhdq
sub
sub
push
shlb
stc
int
mov
movsl
jbe
in
push
dec
or
cmp
out
xchg
shll
inc
dec
enter
fcmovnb
cmp
test
sub
loope
xchg
add
push
jnp
test
add
mov
jmp
or
or
dec
js
add
push
push
mov
gs
ret
sub
jbe
jmp
int
push
pop
mov
stos
inc
out
push
lea
imul
lea
pop
push
dec
dec
mov
loop
aam
cmc
pop
lahf
lret
mov
gs
bound
mov
cmp
xchg
pop
xchg
mov
ja
subb
cmc
aam
xchg
iret
push
popf
add
cmc
mov
repz
or
insl
mov
aaa
nop
lods
loop
pop
int3
push
xchg
push
sbb
dec
outsl
cmp
jg
xchg
cmp
mov
adc
ja
bnd
inc
bound
jae
test
cs
and
nop
pop
mov
xor
scas
es
jne
fnstsw
sub
cwtl
repz
es
loop
mov
fdecstp
pop
mov
xor
pop
int
fs
fs
jae
xchg
mov
notl
loopne
fcmovnb
cli
push
das
lods
cmp
cmp
sti
and
push
outsl
jb
ret
lret
jge
out
in
sbb
sbb
jle
adc
push
sbb
adc
xlat
rcrl
cmp
imul
push
add
popa
int
out
push
mov
in
cmp
mov
iret
mov
push
adc
xor
cs
pop
data16
enter
lods
cmc
xchg
cmp
sub
popa
dec
call
out
clc
adc
inc
hlt
mov
ja
ret
cmc
jecxz,pn
pop
lret
push
xchg
mov
scas
jp
scas
outsl
adc
test
jbe
adc
adcb
lret
dec
mov
cmp
dec
push
aam
add
mov
lea
push
jmp
cmpsb
cltd
jbe
mov
push
xor
clc
push
fs
hlt
dec
in
stos
outsl
and
dec
mov
in
andb
add
add
xchg
dec
notb
xchg
in
imul
cmc
stos
jo
aaa
xchg
addb
jo
mov
push
jnp
xchg
cwtl
int
and
fstl
or
fcomps
loop
adc
lcall
lret
push
xchg
fcmovnb
add
lcall
daa
enter
fstl
jmp
xorl
push
arpl
jnp
outsb
adc
sub
adc
lock
in
add
mov
jecxz
filds
mov
ret
and
mov
in
adc
cmpsb
xor
aas
jge
dec
push
fadds
inc
adc
js
cwtl
dec
cmp
mov
jae
call
pop
out
roll
mov
pop
aaa
lock
in
imul
call
daa
scas
outsl
pop
push
iret
sbb
cmc
push
cli
pop
scas
push
call
mov
xchg
scas
orl
mov
cmp
xor
pop
xor
shlb
stc
setle
addr16
sub
fucomip
loopne
lahf
fsubrp
je
outsl
jb
cld
pop
pop
je
adc
lods
int3
pop
leave
push
imul
cli
mov
out
sub
cli
cmp
and
popaw
fdivrl
inc
sub
mov
shll
xor
mov
test
out
mov
pop
fs
movsl
mov
aaa
in
add
adc
mov
pop
fbld
adc
mov
jns
mov
gs
loopne
lcall
dec
iret
mov
mov
stos
push
mov
fwait
jge
sub
ja
in
push
xchg
or
mulb
dec
loopne
mov
mov
jno
ret
jge
mov
jno
adc
test
pop
inc
loop
cmp
push
adc
out
movsl
mov
fnsave
adc
cmp
sub
shlb
in
sbb
stos
sbbb
pop
ljmp
test
je
jp
pop
fisubrs
in
xchg
dec
dec
ret
xchg
pop
cs
mov
cs
or
lods
imul
int
outsl
add
inc
lds
and
ss
xor
dec
push
sbb
pop
cli
fnsave
xchg
adc
cmp
push
sub
xor
jmp
in
in
mov
mov
jns
cli
pop
inc
push
jns
or
push
repnz
jle
stos
stos
inc
insl
scas
mov
and
pop
sti
dec
cmovo
jecxz
jae
inc
cmc
sub
mov
stos
inc
or
cmp
clc
rcll
jb
xor
test
stc
push
pushf
pushf
inc
into
push
mov
filds
push
testl
pop
xchg
push
lods
sub
xor
pop
xor
cmp
data16
fisttpll
rclb
mov
scas
fistpll
popf
and
pop
sbb
xchg
outsl
mov
into
test
insl
fists
or
xchg
cmc
lods
inc
xor
int
dec
decl
popf
or
int
enter
stc
sub
iret
test
and
mov
sbb
xchg
jbe
xor
das
sahf
add
push
insl
xor
xor
fs
shr
or
or
jp
cmpsl
sub
mov
out
addr16
push
pop
jecxz
push
push
clc
sbb
adc
mov
scas
cltd
adc
ss
dec
je
into
shrl
out
mov
pop
loope
pop
jg
daa
jmp
jno
pushf
sahf
xchg
jmp
outsl
mov
fbld
and
aas
xchg
mov
mov
daa
movsl
push
xchg
ss
gs
pop
loopne
shrl
add
push
loope
xor
insl
push
into
fildl
imul
cmpsl
out
mov
sti
lods
xor
adc
xor
sub
mov
inc
jmp
push
jg
fcmovnbe
js
ja
jl
or
push
cmpsb
xor
pop
mov
ja
pop
icebp
call
push
lcall
lahf
mov
mov
repnz
daa
or
pop
fldenv
pop
loop
or
jmp
sbb
aas
xchg
mov
cmp
lret
cwtl
sub
adc
add
movsb
push
clc
sti
mov
je
jbe
jmp
sub
sbb
cmp
dec
ja
dec
imul
sub
xchg
and
sbbb
test
push
cli
jl
stos
xor
insl
test
inc
sti
add
or
dec
fistpl
test
push
lret
loop
jbe
pop
mov
sub
stos
push
inc
pop
outsb
xchg
cs
inc
addr16
lock
push
shl
jnp
push
pop
lods
call
adc
adc
stc
mov
iret
jno
lods
mov
sub
insl
mov
sub
adc
xchg
stc
lods
ret
xchg
cltd
movsb
enter
cmp
push
jo
mov
inc
addr16
subb
sbb
stos
mov
iret
sbb
xor
ljmp
dec
lods
lods
cmpb
xor
cmc
pop
test
insb
cmp
cli
outsb
jo
push
inc
ss
jno
scas
dec
stos
in
mov
das
jg
sub
jecxz
dec
popf
sti
mov
lret
mov
mov
and
inc
mov
gs
pop
jnp
out
push
pushf
pop
cmpb
or
scas
shrl
jo
xchg
jge
pop
sub
mov
xor
sub
dec
sti
lret
inc
inc
add
fisubrs
nop
push
cmp
call
loopne
lret
mov
jecxz
xlat
fstl
scas
jno
loop
or
jbe
xchg
es
testb
push
pop
into
sahf
movsl
out
xor
xchg
dec
mov
push
insl
test
lret
add
subb
and
mov
addr16
jl
popf
popf
jg
xchg
and
jl
add
mov
pop
cwtl
shll
add
mov
sbb
out
loope
mov
mov
jns
push
xor
lahf
dec
pusha
xchg
adc
js
in
aas
pop
push
cs
xchg
ja
mov
les
push
cltd
inc
pop
fists
sub
cmpsl
cmp
jecxz
sbb
jl
in
aas
jg
stc
jno
mov
aad
jle
mov
lea
pop
adc
aaa
add
jnp
push
cld
inc
scas
and
jecxz
mov
dec
or
xchg
dec
std
cltd
aaa
or
stos
ret
push
nop
movl
jmp
mov
or
sti
pop
adcb
in
pinsrw
push
jg
leave
inc
or
les
jns
out
mov
add
enter
nop
ret
mov
ret
std
mov
loopne
aam
outsb
xor
xor
repnz
jne
push
inc
int
fabs
dec
mov
addr16
outsl
leave
push
adc
pop
bound
std
cmp
cmp
adc
dec
or
mov
shrb
sbb
inc
xor
sbb
pop
adc
and
push
add
xchg
mov
jg
sub
adc
sbb
fildl
dec
mov
pop
mov
outsb
jg
popf
test
sub
out
dec
sti
leave
xchg
repz
dec
mov
pop
adc
cs
jnp
inc
ss
in
lods
adc
ljmp
push
jmp
mov
ja
pop
xchg
insb
aaa
popa
sbb
test
pop
arpl
orps
push
pop
and
cmpsb
test
push
popa
loopne
pop
testl
daa
push
cmovp
mov
hlt
cli
inc
aaa
pop
xor
or
fistpll
mov
imul
popa
xchg
xchg
shlb
cld
cltd
jbe
and
jo
cmp
cli
xor
xchg
xor
mov
add
mov
pop
fldcw
mov
shrb
mov
out
push
pop
mov
xchg
repz
cmc
mov
mov
dec
and
es
push
mov
xchg
int3
hlt
and
outsb
xchg
mov
push
pop
out
in
xchg
cmp
cmp
pusha
sbb
push
mov
adc
xlat
fdivr
cmp
adc
ds
lea
rol
ret
adc
scas
enter
nop
aad
das
mov
inc
loope
xor
scas
cmpb
sub
pop
add
inc
xchg
cmp
xchg
out
out
out
sarb
mov
cmc
adc
outsl
repz
int
xor
jae
test
xor
int3
xlat
ret
test
sbb
dec
fildll
ret
and
test
push
push
lret
mov
inc
test
inc
inc
xor
std
jg
mov
fbld
aad
xor
add
sbb
cmpsl
xchg
add
jge
and
shlb
jmp
jno
mov
cmp
jne
jbe
or
or
push
mov
das
xchg
dec
mov
xchg
mov
push
add
or
inc
int
add
nop
arpl
sbb
jne
push
jp
jle
sahf
mov
shr
push
sub
mov
push
lret
jle
lret
cmpsb
add
je
jb
jle
push
imul
sahf
push
outsl
xchg
jae
ret
rolb
xor
cmp
jge
int
loopne
jnp
in
sbb
pop
push
mov
dec
sub
dec
cmc
sbb
adc
mov
jb
push
imul
rcrl
xchg
mov
mov
adc
jae
dec
sbb
lret
and
cmpsb
xor
cltd
jg
subb
jb
jb
or
mulb
test
mov
mov
cli
mov
push
ds
cli
sbb
pop
subb
push
ret
mov
mov
cld
jg
inc
jns
lods
mov
lods
pop
outsb
in
test
addb
add
adc
pop
inc
xor
stos
cld
lret
ret
loope
cmp
dec
std
fwait
lock
xor
push
fs
jp
jns
pop
cli
es
clc
in
sub
dec
lds
cwtl
xor
pop
push
jne
shll
mov
gs
sbb
xlat
shll
cli
cmpsb
push
out
xor
stc
test
xor
stos
mov
xchg
inc
jne
sub
and
fs
idiv
or
fdivp
jbe
mov
mov
or
fwait
add
inc
pop
push
loopne
bound
pop
roll
jge
pop
aam
cmp
shll
in
sbb
adc
xor
xor
mov
aam
aas
add
imul
arpl
sahf
pop
or
jne
pop
or
push
xor
lret
fadd
cmp
xor
push
xor
or
xchg
nop
pop
out
out
sub
out
hlt
lock
sbb
dec
add
mov
imul
cmp
lret
jmp
fiaddl
xor
mov
xchg
xor
fs
insb
xchg
push
pop
or
mov
movsl
mov
xor
cmpsl
jbe
js
sbb
dec
test
inc
xorl
and
shlb
push
jle
add
fwait
jge
inc
pop
daa
adc
test
jae
sbb
and
xor
pop
sub
sub
or
mov
cmp
mov
sub
adc
fmull
jb
out
jae
lahf
push
imul
jae
outsb
mov
mov
mulb
scas
incw
jns
inc
fisttpll
or
leave
daa
imul
pop
push
mov
aad
enter
sahf
jb
imull
inc
hlt
loop
scas
cltd
mov
add
ds
push
xor
mov
or
outsl
ljmp
insl
xchg
mov
sub
lret
mov
out
and
cwtl
mov
cmp
pop
dec
and
push
pop
adc
jno
jae
ret
xor
dec
popa
repz
aas
popa
mov
mov
jo
or
cli
ret
fimull
jmp
je
arpl
adc
popf
push
xchg
ret
sti
jl
test
xor
dec
xor
cs
xchg
pop
inc
adc
xchg
cld
mov
divb
andps
outsl
pop
lock
cmp
cmp
ljmp
loope
jle
mov
sbb
mov
push
sahf
and
rorb
test
xchg
sbb
fwait
ret
test
mov
jae
and
and
adc
mov
pop
jp
xchg
and
and
inc
and
push
pop
adc
rclb
cli
mov
addr16
mov
test
pop
sub
int
push
xchg
out
fiaddl
mov
neg
cmp
hlt
or
js
gs
push
stos
cwtl
movsl
dec
std
pop
pushf
rorl
cmpsl
aam
cmp
out
sbb
or
jbe
fdivl
jge
xlat
sub
data16
js
faddl
mov
dec
xchg
leave
or
bound
xor
imul
xchg
or
sbb
sbbl
lret
mov
cld
and
xor
push
add
inc
ret
loopne
cmpsb
testl
test
mov
popl
adc
or
push
cmp
xlat
js
jno
clc
jno
out
mov
imul
and
mov
rorb
jns
mov
test
xchg
dec
xchg
xorl
mov
jg
repnz
mov
add
xchg
xorb
sarl
and
jmp
sub
mov
sbb
insb
jb
add
pop
add
sbb
jl
pop
and
cmp
ret
fisubrs
mov
mov
or
sub
xor
dec
push
jmp
mov
icebp
lcall
dec
mov
mov
dec
mov
inc
js
fiadds
sub
or
push
dec
inc
lods
in
pusha
addr16
pop
mov
inc
hlt
sbb
and
xor
cmp
mov
popf
clc
lahf
xchg
pop
mov
xchg
cmp
int
out
pushf
adc
fst
and
cmp
cmp
idivb
roll
je
repz
insb
test
lcall
repz
inc
jo
xlat
sbb
jl
mov
push
je
jmp
pop
jne
xchg
cs
movl
jb
test
fwait
pushf
les
call
addr16
mov
and
xor
dec
push
sub
push
cs
lret
pop
sbbb
cmp
scas
inc
or
cs
sbb
addr16
aaa
loope
pusha
imul
movsl
push
xchg
mov
cmp
mov
jle
xchg
inc
mov
and
popa
daa
sbb
xor
sti
sbbl
test
hlt
add
les
mov
add
xchg
push
push
and
outsl
fcoml
push
jecxz
ja
mul
dec
stc
outsl
sahf
pop
pop
cmp
cmpsb
push
aad
sub
vmovaps
mov
xchg
adc
test
xor
xchg
mov
push
mov
movsb
shlb
adcb
xor
vcomiss
fsubs
std
lea
push
push
mov
rcll
push
inc
push
xlat
enter
xor
add
bound
push
cmp
sub
fs
adc
mov
rclb
pop
adcb
jp
ss
inc
xchg
rorl
and
and
push
cmp
addl
add
into
cmp
js
dec
push
or
rcl
fdivrs
xor
or
sub
push
mov
mov
leave
push
mov
lahf
sbb
jbe
das
dec
iret
xor
loope
sahf
andl
adc
mov
or
jmp
add
insl
jb
dec
mov
pop
jno
lods
mov
adc
mov
cld
and
sub
mov
popl
add
cmp
xor
movsb
fisubrl
push
pop
push
add
mov
xchg
dec
test
inc
and
jg
mov
sub
jg
in
or
xor
push
sbb
cltd
repnz
push
jae
dec
sub
mov
leave
jae
and
loop
cmp
and
sub
insb
inc
sbb
inc
into
sti
cmc
lods
add
xlat
cmp
aam
xchg
jecxz
decl
lea
xor
cmpsb
jne
fldenv
xor
mov
mov
rol
pop
jge
jae
shl
and
xor
pop
ret
loopne
js
rolb
out
xchg
xchg
xor
rcrb
mov
scas
int3
in
dec
cmp
fsubl
cwtl
mov
in
lret
sub
jg
fisubrl
jle
and
outsl
imull
push
xor
pushf
sub
flds
in
lods
jbe
adc
ret
cvtpi2ps
mov
mov
rcl
cmp
inc
add
sbb
adc
addr16
cmp
adc
adc
fldt
clc
or
clc
dec
and
or
popf
cltd
cmp
cmp
ljmp
pop
in
repz
lock
clc
scas
inc
popa
fistpl
inc
imull
ret
rolb
bound
push
add
aaa
mov
jecxz
fxch
stos
inc
jge
cmp
subb
les
into
mov
cs
pusha
adc
orb
pusha
fs
fstpt
lret
idivl
shll
popa
test
cmpb
and
push
out
pop
lods
mov
jae
push
daa
sub
mov
imul
inc
or
lds
push
stos
jp
mov
orb
insb
dec
adc
push
xor
sbb
out
fldl
in
xor
cmp
and
push
and
pop
push
rclb
push
mov
stos
cltd
mov
adc
lret
sub
dec
loop
mov
mov
mov
out
rcrl
sbb
dec
cmp
iret
jg
add
jbe
sahf
add
push
cltd
cltd
inc
sbb
push
incb
push
scas
adc
fsubl
fwait
xlat
sbb
pushf
outsl
push
xchg
cmpsb
es
add
test
cmp
je
sahf
jmp
sub
mov
test
pop
sub
pop
mov
int
mov
pop
fsubrs
in
gs
adc
push
ret
ret
cmp
popa
movsb
sub
push
fnstsw
jnp
rolb
popa
call
adc
add
jo
stc
adc
xor
push
fnsave
mov
sub
mov
and
mov
sahf
pushf
mov
sub
jo
in
shll
in
jne
fisubl
jl
sbb
in
sub
pop
pop
hlt
inc
push
iret
dec
lret
jg
mov
mov
repnz
xchg
loop
or
shufps
ja
push
push
sar
jge
mov
mov
in
mov
cmpsb
jp
sbb
lahf
decb
lcall
clc
aad
fldt
mov
loopne
icebp
push
cs
in
cmp
test
push
dec
adc
gs
sarl
adc
out
dec
cltd
lea
fmuls
xor
adc
push
xor
mov
loope
jb
add
xchg
inc
xchg
dec
pushf
and
inc
fstps
mov
mov
xchg
sbb
jecxz
jle
push
fwait
push
adc
jg
pop
mov
aam
clc
add
cli
mov
ljmp
outsb
inc
imul
mov
mov
mov
cmpsb
or
in
out
push
mov
cld
adc
push
fsubrl
scas
push
sbb
add
outsb
adc
adc
es
insl
sub
idivb
jl
and
js
dec
push
ss
cmpsl
outsl
mov
jg
mov
fcmove
das
gs
js
push
mov
xchg
std
bound
jg
leave
cmc
popf
das
push
insl
testb
sub
ja
data16
or
aam
push
stos
mov
mov
dec
scas
inc
cmc
cmpsl
imul
xor
lods
xchg
adc
xchg
sbbb
fdivrs
pop
pop
mov
cmpsl
rcl
jno,pn
imul
sbb
adc
and
in
dec
xchg
adc
and
push
sub
scas
in
or
aad
test
pushf
or
xor
lock
fcomps
lock
or
xchg
mov
movsb
inc
std
pop
jl
or
cmc
scas
cltd
jl
xor
pop
ljmp
fisubs
andl
inc
cltd
adc
jl
je
scas
mov
jecxz
sbb
repz
xchg
jp
jne
lret
lock
dec
push
sub
mov
shlb
dec
xchg
test
scas
sti
lds
imul
pop
jbe
jle
cmp
in
jns
scas
mov
cmp
xchg
popaw
sbb
jns
mov
jecxz
pop
shl
loope
pop
out
sbb
rcll
mov
push
or
mov
pop
push
pop
sub
imul
fimull
adc
dec
push
hlt
jo
mov
mov
xchg
sbb
dec
ljmp
and
in
cli
mov
mov
shr
test
ljmp
pop
dec
add
inc
adc
pop
out
pusha
fcmove
add
push
rorb
sub
push
mov
out
xlat
and
adc
mov
jle
in
mov
adc
movsb
fs
test
lea
sbb
jecxz
mov
stos
cld
inc
jp
sbb
xchg
cmpsl
sbb
cmc
and
in
push
imul
pop
mov
inc
outsb
clc
dec
inc
loop
cmp
int3
xor
xchg
inc
jle
cltd
push
add
filds
dec
repnz
pop
sar
sub
jp
inc
std
mov
rcll
jnp
push
in
mov
test
mov
mov
fs
mov
cmp
jp
in
cmc
fisubrs
jmp
sub
loop
iret
cmpsl
ror
outsl
pop
in
inc
rolb
mov
and
xor
lods
in
and
jns
cmp
jmp
mov
jae
push
pop
sbbl
stos
sub
dec
mov
call
cmp
push
bound
rep
push
fidivrl
jle
int
movsb
jo
mov
enter
mov
push
fstl
pushf
pusha
jecxz
imul
mov
mov
aaa
out
jmp
pop
popa
sbb
xchg
rcrl
test
push
dec
pushf
jl
xlat
out
cmpsb
and
pop
repz
xchg
or
jecxz
jecxz
or
lock
call
or
ds
push
pop
fisubrs
out
int
dec
cli
sbb
xlat
dec
into
adc
stos
or
ja
lahf
mov
mov
dec
daa
mov
adc
mov
out
icebp
test
sbb
mov
or
scas
push
decl
ret
mov
addr16
sub
cmp
xchg
mov
adcl
stos
sysexit
imul
nop
and
xchg
lahf
stos
push
sub
jne
mov
push
mov
dec
filds
cld
lods
xor
arpl
daa
dec
lret
aad
mov
pop
dec
fcomps
lock
jb
decb
adc
sbb
pop
dec
cmpsb
mov
leave
stos
rorb
jp
mov
idivl
aaa
push
pop
lock
cltd
xor
add
in
jo
out
pop
movsl
mov
mov
or
fdivl
sbb
in
add
daa
frstor
and
mov
jnp
mov
xchg
les
and
xchg
das
sbb
subb
xchg
add
into
div
lods
cmpsb
sub
hlt
scas
mov
rorl
pop
subl
into
lret
fnstenv
jecxz
pusha
inc
inc
mov
in
dec
push
shlb
repnz
xchg
lea
jnp
cs
jns
cmpsb
cmp
call
push
adc
mov
iret
adc
xlat
gs
int
fcoms
ja
xor
and
sbb
dec
or
rcl
popf
sti
cvtps2pi
fs
fdivrs
push
sbb
ret
movsb
cmp
test
fcmovnbe
jns
jbe
mov
dec
mov
jecxz
lret
rcr
imul
lods
fiadds
das
mov
adc
jg
adc
dec
hlt
std
add
mov
scas
lcall
xor
cs
push
cmpsb
sbb
data16
lds
jbe
test
jmp
mov
fcom
out
subl
add
negl
lret
push
dec
outsl
movsb
jle
insb
inc
test
inc
xchg
or
inc
mov
mov
inc
ja
mull
leave
lcall
mov
adc
add
push
push
mov
iret
and
out
pop
in
xor
and
push
pop
jge
jne
sahf
mov
push
pop
stos
dec
lods
jno
out
push
std
mov
popf
fisubrl
adc
mov
movsl
out
and
push
mov
mov
sbb
jne
or
andl
pop
addr16
jp
add
sbb
shlb
pop
inc
or
mov
and
shll
mov
div
jae
xchg
mov
mov
std
xlat
xchg
lcall
and
aaa
mov
push
sub
fisubrs
mov
fimull
sub
xchg
add
xor
mov
and
pop
ljmp
sub
fwait
mov
sbb
mov
or
jmp
je
movsb
jmpw
ja
stos
dec
scas
sub
xchg
icebp
in
pushf
mov
out
add
shll
fsts
mov
lods
in
testl
push
dec
mov
dec
and
jge
arpl
push
stos
pop
xor
add
adc
pop
popa
sbb
push
mov
mov
cmpsl
xorb
jne
movb
xor
fiadds
sbb
rclb
push
sub
inc
sub
cmc
outsl
int
cmp
pop
lret
adc
cmc
lods
mov
mov
jecxz
xchg
jb
dec
xor
inc
cmp
mov
sub
push
adc
xchg
mov
decb
imul
fildll
ss
in
rclb
sti
sub
imul
test
sahf
mov
adc
test
scas
jecxz
insb
and
add
sti
int3
sbb
ljmp
add
sub
aaa
aad
sub
inc
rcrb
hlt
lods
cltd
mov
scas
push
mov
jle
push
enter
out
lret
fdiv
xor
bnd
jae
cmp
mov
inc
cmpsb
cmpsl
shrl
movsl
jmp
jbe
ret
pusha
std
pop
fmuls
pop
add
imul
mov
ljmp
cs
cltd
mov
ja
lods
dec
add
and
push
pushf
mov
repz
sub
pop
add
popa
addr16
add
add
adc
mov
cmp
cmp
fisttpll
lods
mov
out
ljmp
dec
cmpsl
or
enter
psllw
cmpl
shlb
int3
xchg
ret
mov
mov
mov
push
sbbl
xor
or
aas
fcompl
fdivrs
sub
ds
movsl
sub
cmpsl
in
je
data16
jle
push
inc
scas
icebp
mov
in
push
jne
mov
gs
dec
and
push
ror
pop
xchg
rcl
mov
int
or
jns
mov
mov
lret
repnz
inc
out
push
divb
fcomip
cwtl
jmp
in
in
js
push
cltd
push
fsts
faddp
fcomp
cmp
das
sbb
mov
stos
cmp
inc
in
roll
push
push
adc
pop
into
push
mov
mov
aam
imul
mov
cli
cmp
or
jl
hlt
jl
fdivrl
imul
dec
mov
icebp
jg
mov
inc
pop
xor
push
stc
fcomi
dec
push
sti
lods
sub
xchg
es
pop
leave
dec
rorl
inc
ficomps
sahf
std
mov
jnp
adc
mov
ss
inc
jae
xchg
xor
adc
inc
jo
jne
pop
pop
xchg
xchg
out
mov
imul
push
dec
aaa
out
adc
inc
sub
adc
adc
test
adc
mov
das
sti
sbb
ss
jbe
pop
std
pushf
lods
int3
mov
cltd
arpl
dec
or
xlat
lods
mov
cmp
sbb
mov
std
sbb
jle
mov
xchg
adc
and
clc
inc
jmp
into
inc
addr16
shrb
cmp
movsl
mov
sub
in
add
push
push
leave
xchg
sbb
cli
mov
dec
mov
loop
fnstcw
imul
test
or
ficompl
shlb
test
push
shrl
xchg
or
push
jecxz
adc
push
inc
dec
fcomps
clc
arpl
call
sbb
xchg
or
mov
adc
or
dec
outsb
fcomps
pop
es
movsb
pop
pop
fsts
cs
cltd
in
test
cmp
dec
dec
roll
stos
inc
and
ret
aam
out
leave
add
popf
ret
pop
lcall
xor
ret
or
clc
or
xchg
push
fdivrs
mov
cmpsb
push
sub
movsb
mov
jl
mov
je
out
sbb
sbb
fwait
mov
sub
sub
pop
fstps
xchg
mov
pop
pop
jl
mov
subl
ja
mov
xor
hlt
cmpsb
cmp
sti
push
ret
js
pop
loopne
insl
adc
cmp
pop
cld
jo
hlt
dec
sub
daa
dec
decl
dec
fistpll
xchg
xchg
je
xor
cmp
in
jle
imul
imul
pop
xchg
stos
push
je
jb
out
or
scas
add
cmc
movsl
mov
adc
call
mul
aam
or
scas
or
fiaddl
pop
pop
fxch
repz
pop
or
ja
cwtl
or
fld
icebp
adc
dec
call
lcall
add
aam
les
test
dec
shr
std
fstl
sub
mov
mov
or
das
les
bound
cmc
fs
test
jp
mov
push
std
push
test
sbb
and
sbb
jg
jbe
sbb
xchg
pop
xor
bound
and
sti
repnz
out
test
repnz
repnz
jp
stc
xchg
push
sbb
ret
adc
mov
push
ss
push
lret
pop
xchg
out
lcall
subb
xchg
pushl
int3
jns
rcrb
ljmp
out
and
sub
sub
ret
jecxz
mov
outsb
jnp
jb
in
lret
testl
shll
fsubr
das
loope
inc
outsl
popw
je
sbb
mov
dec
xchg
divb
xor
cltd
xor
lret
push
inc
cld
insb
jg
repnz
inc
out
jl
rolb
sbb
mov
imul
popf
test
fwait
push
push
in
jl
add
lahf
push
mov
loop
outsb
test
sbb
fistpll
push
fwait
mov
xor
insl
cs
mov
pop
nop
xlat
rcll
cmpsb
std
pop
mov
xor
into
xchg
or
adc
push
out
dec
daa
inc
cld
fildll
incl
repz
mov
aam
or
sahf
pop
dec
test
mov
jmp
sub
mov
sbbl
pusha
mov
xchg
ljmp
mov
jnp
cmp
push
push
xchg
mov
sub
ds
popf
jge
or
stos
pop
add
adc
and
nop
xchg
jo
add
aad
jne
clc
or
pop
pop
and
adc
adc
fwait
jecxz
jns
imul
daa
cli
pop
sub
in
ror
and
shlb
mov
mov
sub
aam
xchg
jb
jb
shll
jae
imull
es
jmp
inc
cmpsl
pop
and
test
out
push
fldenv
and
lds
inc
push
and
into
cmpsb
lret
cmp
popa
inc
roll
pop
int
jb
popw
xchg
repz
push
pop
sbb
and
xbegin
fstp
mov
fsubl
cltd
pop
stos
pop
xor
mov
rcrb
stos
add
sbb
es
jp
pop
add
dec
daa
pop
pop
inc
add
popf
fstpt
inc
or
inc
cmp
sti
xchg
inc
movsl
mov
mov
and
and
xor
dec
in
mov
outsl
add
daa
jo
pusha
repz
jge
insb
pop
cmp
pop
addr16
jno
cmc
and
lahf
imul
insl
in
push
inc
pusha
cmp
out
imul
mov
push
push
lock
and
jae
repz
adc
or
mov
pop
mov
jb
fwait
lods
pusha
sub
jae
int3
adc
scas
jmp
lock
mov
mov
inc
outsl
dec
fnstsw
scas
mov
nop
pop
xchg
stc
jne
mov
and
jo
enter
outsl
dec
add
sarb
and
mov
pop
out
inc
mov
mov
sub
pop
lock
xor
test
aad
adc
imul
repz
or
adc
inc
mov
call
iret
dec
into
pusha
ljmp
mov
mov
jmp
inc
push
test
pop
fimull
sbb
addl
sub
fdivl
push
dec
call
xchg
mov
popl
sbb
imul
in
pushf
jge
mov
jo
mov
roll
enter
je
add
in
scas
out
into
or
inc
ret
std
fsub
add
adc
clc
inc
jmp
xor
add
lret
xchg
ja
xor
cli
sub
xchg
mov
pop
mov
jb
jns
or
pushf
pushf
roll
ja
dec
arpl
adc
inc
mov
mov
mov
add
sub
jmp
lods
mov
mov
adc
and
inc
nop
fdivr
call
ret
cli
lods
jne
mov
adc
push
cmp
and
dec
pop
cli
mov
sub
adc
insl
adc
pop
jno
xor
sub
call
jp
lods
jmp
push
and
jg
and
test
arpl
sbb
out
mov
mov
xchg
dec
sahf
je
sub
mov
stos
sbb
xor
fwait
dec
jb
mov
add
xchg
cmp
or
int
jae
popf
xchg
jp
bnd
dec
or
sbb
dec
jg
rol
xchg
adc
add
loope
jo
xchg
es
and
mov
mov
and
push
push
push
ds
dec
arpl
fcompl
pop
aaa
insb
jp
dec
inc
push
cmp
scas
add
popf
xchg
mov
or
mov
mov
jo
rcl
or
orl
clc
push
out
cmp
std
sub
jo
test
sbb
into
sahf
pop
add
mov
push
lret
xchg
sbb
dec
test
adc
and
fs
sub
shlb
ret
outsl
jne
sbb
sahf
lods
add
ficoms
icebp
cmp
incl
jne
mov
sub
orl
ror
adc
jp
adc
dec
and
cld
cmp
cmp
xor
or
inc
addr16
aas
mov
or
jne
sahf
out
test
sahf
sbb
repnz
mov
std
and
in
cmc
aad
jne
inc
insb
daa
jnp
push
cmp
push
cmp
sbb
xor
cmp
pop
insb
sbb
inc
or
xlat
addr16
daa
mov
and
sahf
add
fistl
xor
fwait
neg
lods
cmp
pusha
shll
jp
and
int
push
xor
adc
jbe
jl
into
aas
pop
cmp
arpl
shr
mov
testl
xchg
fs
jle
stos
mov
dec
inc
loop
xchg
push
aad
int3
sbb
loopne
mov
lcall
rol
mov
add
sahf
movsb
mov
add
sub
ficoms
cmp
stc
shr
shrl
or
add
jle
lock
sbb
add
mov
push
adc
fiadds
out
inc
int
hlt
xor
pop
ljmp
cmpsl
lods
inc
fucomp
xchg
clc
es
xorb
mov
jb
jmp
pop
cs
mov
mov
cmpsl
frstor
xor
inc
inc
lahf
jg
stos
int3
pop
out
mov
std
pop
mov
mov
sarb
push
mov
jbe
add
sub
popf
cwtl
sub
and
nop
cwtl
xlat
adc
dec
sub
jecxz
and
lock
push
and
std
cwtl
or
test
stos
push
imul
or
std
fucom
fwait
push
xchg
repz
mov
rcl
xchg
push
push
in
inc
ja
sub
sti
cmpsb
ficompl
rcll
push
mov
pop
loopne
les
mov
lret
mov
dec
lahf
add
test
int3
xchg
iret
icebp
adc
sub
inc
or
mov
push
test
pusha
stc
es
jle
and
scas
lods
push
sub
insb
ror
fiaddl
ljmp
nop
pop
rcrl
sub
push
add
fistpl
push
push
xchg
fists
stc
les
call
imul
sti
movsl
cmc
addr16
mov
fsubrp
jo
lds
cli
inc
jae
jne
scas
sbb
add
aad
or
xor
aad
or
xor
fsubrs
jno
sub
sub
insl
mov
xor
jmp
cmp
orl
pop
push
adc
dec
xor
cmp
iret
sbb
gs
aas
mov
out
gs
pop
xor
xchg
jnp
mov
aaa
sub
xor
sbb
dec
inc
ja
or
ret
adc
jecxz
xchg
jg
push
sbb
cmc
shll
int3
lahf
cmpsl
ficoml
adc
test
and
inc
in
into
mov
fsub
mov
arpl
adc
sub
mov
sub
leave
jg
aaa
jo
or
call
hlt
push
mov
and
movb
in
arpl
ret
pop
jmp
hlt
mov
test
and
sti
xchg
mov
out
mov
sbb
add
mov
cli
ficompl
mov
push
jne
push
mov
out
test
cmp
jnp
loop
and
test
test
inc
push
clc
mov
pop
fbld
into
pop
call
cmp
fadds
dec
jg
adc
test
push
jne
dec
push
add
lret
daa
pop
jl
xchg
jg
xchg
lock
sbb
mov
push
add
cmpsb
dec
and
sahf
dec
pusha
mov
dec
aaa
dec
push
aad
pop
ret
jb
test
mov
and
and
cmp
pop
test
mov
xchg
add
fidivl
or
jne
sbb
popa
xchg
stos
sub
pop
outsl
add
mov
insb
cltd
lret
dec
dec
push
into
je
dec
sbb
shr
aad
xor
xor
stos
int3
sbb
mov
fsubrl
loop
pop
outsb
in
aam
jg,pn
cmp
movsl
push
icebp
cltd
adc
mov
cltd
mov
jge
test
gs
mov
pop
int3
aas
fildll
xor
call
sub
dec
mov
mov
jb
and
dec
or
clc
inc
jmp
push
stos
add
jae
sbb
adc
xlat
sbb
push
movsb
inc
mov
mov
ss
mov
int3
imul
jae
sbb
cmp
lret
pop
sub
add
bnd
inc
xchg
out
mov
and
enter
jl
scas
lods
mov
mov
mov
add
rcll
scas
jecxz
jnp
pop
mov
dec
or
fbstp
stos
call
ds
xchg
add
inc
movsl
sbb
adc
inc
and
mov
pop
pop
fildll
aad
mov
cmpsl
add
add
or
jb
dec
cmp
push
inc
fists
pop
mov
xchg
loope
popa
jl
movsl
cmpsl
push
jns
aas
daa
adc
xlat
in
imul
push
xchg
lock
mov
and
sarb
sbb
add
pop
sbb
ds
push
jecxz
out
inc
inc
fs
inc
and
mov
aam
cli
filds
jmp
adc
and
dec
pushf
movsb
mov
mov
push
dec
xchg
leave
sti
sub
lods
adc
sub
xchg
btc
adc
push
mov
dec
sub
aad
call
mov
pop
jns
test
aas
push
sbbb
sarl
sbb
daa
jecxz
push
cmp
imul
aad
data16
xchg
dec
test
xor
mov
ret
cmpsl
mov
int
repnz
mov
xchg
ljmp
jmp
add
jmp
jl
push
scas
jmp
fwait
aam
loope
loope
sub
mov
add
imul
mov
mov
fwait
mov
pop
push
mov
loop
mov
popl
rcrb
jns
xor
adc
ds
test
adc
push
cmp
pop
inc
scas
ja
mov
xor
xor
out
add
jnp
mov
sub
sub
add
addb
dec
sbbl
xchg
push
cs
xorb
lret
push
aaa
cmp
sbb
test
hlt
ror
mov
vshuff32x4
push
pushl
test
or
jo
mov
test
call
push
inc
in
xchg
rcll
das
adc
mov
cli
mov
or
add
or
xor
popf
inc
ljmp
mov
cmpsl
hlt
inc
jmp
or
movsl
popa
pop
mov
int3
inc
sub
repnz
es
mov
or
inc
mov
into
pushf
and
jg
pop
es
shl
sub
jl
out
jmp
jecxz
inc
mov
les
cmp
xor
mov
int
push
and
xor
mov
dec
cltd
fistl
std
jb
adc
xor
out
adc
adc
adc
pop
pop
xor
or
and
mov
lods
mov
add
scas
add
leave
lahf
push
jno
popf
sbb
adc
or
or
ficoml
dec
mov
cmp
aaa
jbe
cmp
hlt
fdivs
xor
and
and
adcl
jne
mov
fsubl
sbb
popa
dec
aad
sbb
icebp
cmp
rolb
and
adc
mov
ja
mov
aaa
push
xor
inc
mov
inc
pop
popa
sbb
add
aam
out
sbb
ds
decl
lret
mov
pop
sbb
mov
mov
imul
lahf
pop
scas
dec
lret
xor
lds
mov
jno
push
xchg
or
clc
call
cld
dec
scas
lahf
fsubs
sub
fwait
mov
imul
jecxz
dec
notb
outsb
sahf
int3
es
push
pop
cmp
inc
mulb
jmp
in
inc
jmp
mov
xchg
outsl
ljmp
cmp
xchg
mov
insb
shrb
push
jle
das
jl
pop
mov
or
mov
out
fidivrl
and
adc
rcrb
or
cwtl
inc
repz
and
mov
loop
mov
dec
and
loopne
js
dec
jno
lcall
and
push
or
add
sub
and
into
stos
nop
lret
pop
xchg
add
pop
es
sub
mov
mov
sbb
and
data16
mov
push
mov
insl
push
pop
lcall
mov
aas
mov
out
lods
pop
lret
push
fdivl
xchg
xchg
add
xchg
movsl
mov
lret
pop
ds
xor
mov
int3
adc
loop
and
xor
sub
out
cld
mov
mov
jg
pop
dec
sbb
repz
and
adc
mov
mov
in
sbbl
adc
in
jo
aas
mov
push
push
xchg
xchg
fildl
bound
mov
xor
es
idivl
fisubrs
mov
mov
into
das
test
faddl
adc
loopne
ds
adc
lock
mov
push
mov
cmpsl
mov
cltd
enter
fbld
jecxz
cmpsl
mov
xchg
pushf
paddw
pop
push
cs
mov
pop
arpl
lods
mov
ret
dec
insl
xchg
outsl
aam
fsubs
xor
push
xor
orb
jl
loopne
jg
inc
aad
stos
repnz
push
push
aaa
sub
mov
xor
mov
or
dec
aam
jg
jo
xchg
inc
stc
add
fisubs
lds
add
mov
sub
jl
lret
out
dec
in
lods
fisttps
add
rcrb
stos
ja
test
push
cmpsb
mov
frstor
repz
inc
test
mov
popa
cltd
aam
add
dec
lea
pop
lcall
idiv
push
pop
fs
cmpsl
sbb
jnp
push
jmp
sbb
push
not
pop
or
fisttpll
in
insb
mov
bound
leave
add
int
xchg
sbb
push
lods
pushf
fiaddl
jge
sarl
das
cli
pop
mov
mov
sar
xchg
shlb
pop
imul
outsl
lret
lds
sarb
test
bound
push
popl
cmc
icebp
add
testl
ljmp
cmpsl
mov
dec
jmp
mov
std
out
imul
pop
aad
int
cmp
or
frstor
cltd
aas
mov
adc
jns
or
rolb
sarl
imul
sbb
xchg
cmp
fwait
aas
sbb
mov
cmc
outsl
std
pop
dec
or
repz
lahf
mov
je
ficoms
or
jl
leave
xor
mov
jb
pop
das
stos
jge
ljmp
loopne
enter
shrl
push
iret
out
xor
and
or
adc
push
shl
loop
cmp
dec
pop
stc
jne
sub
out
test
dec
outsb
add
pop
lods
push
cmp
sub
fs
adc
push
stos
pop
int
fbld
mov
fcomp
cmp
sti
mov
and
imul
std
pop
imul
and
aam
movsl
sub
gs
inc
mov
mov
aad
les
out
fcoms
lea
nop
imul
add
mov
in
ds
insl
xorl
xor
xor
push
negl
out
dec
push
adc
mov
ss
jns
jecxz
pusha
test
adc
imul
xor
lock
jecxz
jg
cvtps2pi
jbe
add
xor
sahf
fldl
aaa
outsb
stos
xchg
mov
xchg
insb
mov
imul
sbb
test
loope
shll
sub
dec
or
push
icebp
dec
mov
and
out
push
pop
and
js
sti
or
dec
test
imull
icebp
pop
test
in
push
pop
js
mov
clc
inc
dec
mov
and
lahf
lods
int3
bound
mov
xor
mov
xchg
pop
cs
xchg
or
out
aam
cltd
cwtl
push
lock
add
xchg
push
mov
cmp
lret
xchg
clc
add
bound
mov
roll
mov
mov
mov
shlb
ficompl
dec
xchg
push
and
push
mov
jne
out
int3
sarb
shl
lahf
and
xchg
fwait
dec
cs
mov
sbb
sub
push
aad
or
leave
pop
sarl
jp
aam
xchg
gs
leave
sbb
lea
cmp
push
lret
dec
add
or
or
jg
jg
rolb
cmpsl
mov
push
mov
mov
jnp
add
aas
sub
das
rolb
loope
mov
mov
pop
push
enter
out
cmp
add
xchg
mov
and
mov
xchg
out
add
sub
or
mov
sarl
jl
loop
sub
imul
xchg
and
push
hlt
mov
rcll
cs
rorl
pushf
and
sbb
mov
fbld
outsb
sub
rclb
nop
popa
fucomi
scas
dec
dec
inc
add
bound
std
dec
cs
nop
dec
jns
push
js
push
sub
mov
pop
es
and
dec
pop
loope
jno
jmp
xor
xchg
pushf
mov
cmp
push
sahf
cld
jne
sarl
pop
int
sbb
or
test
pop
out
fidivrs
mov
insl
ret
subl
lret
or
adc
shlb
fidivs
push
jg
push
sahf
or
mov
xor
push
in
sub
out
repz
cmp
push
xor
fwait
call
pop
cmp
cmp
push
cmp
pop
subl
daa
mov
arpl
or
xchg
pop
and
jne
movsl
fs
mov
loop
ss
fsts
xchg
push
fucom
mov
ljmp
cmp
imul
lea
sbb
mov
xchg
mov
je
pop
cli
jmp
push
sub
mov
mov
stos
push
arpl
aam
sbb
and
mov
mov
lcall
movsl
xchg
test
shll
and
jmp
push
into
pop
sub
cmpsb
sti
imul
imul
dec
rcll
in
loopne
fwait
cmp
xchg
mov
add
pop
js
dec
jbe
fcmovnb
add
adc
pop
cmp
xchg
inc
inc
lock
xor
es
mov
sbb
xor
xor
add
inc
cmp
adc
stos
inc
cltd
cmp
push
pop
adc
out
jp
sub
shl
xlat
cld
es
dec
fdivs
adc
std
imul
adc
fldenv
jl,pt
mov
xchg
hlt
leave
pop
sub
mov
or
dec
cmp
adc
sbb
call
mov
push
xchg
pushf
inc
out
popa
xchg
mov
push
imul
and
std
adc
cltd
aaa
jns
xor
fldl
pop
jbe
push
test
test
mov
rolb
out
test
out
push
add
ss
inc
inc
addl
pop
push
inc
inc
inc
sub
mov
sub
cmp
pop
pop
adc
int3
mov
test
xor
adc
push
negb
pop
mov
fcmove
imul
ja
cmp
xor
adc
sub
addl
imul
or
fcomps
push
and
jb
jb
das
inc
xchg
fists
in
inc
adc
in
mov
arpl
aaa
in
aaa
jecxz
or
push
mov
adc
or
dec
les
push
lds
or
sub
sub
addr16
inc
fs
inc
data16
sub
dec
icebp
mov
sub
or
pop
lock
lds
imul
inc
aad
xlat
sti
outsl
adc
mov
fidivrl
rep
xchg
xchg
std
in
push
jle
sub
adc
or
jns
or
add
mov
push
xchg
push
sbb
aaa
xor
mov
cmp
pop
daa
dec
pop
adc
out
aam
mov
sub
jae
enter
aam
frstor
addb
jg
dec
std
cld
repnz
pop
lock
jns
mov
push
js
mov
idivb
mov
jae
rolb
jg
lret
jnp
xor
xlat
xchg
sbb
aam
mov
sbb
mov
pusha
mov
shrl
imulb
test
in
divb
rorb
pop
jecxz
stos
popf
adc
inc
popf
sbb
idivl
push
es
sbb
or
cmp
leave
mov
lock
test
arpl
ror
or
push
cmpsl
repz
lock
repnz
cmpsb
outsl
jg
cvttps2pi
jno
jp
sbb
mov
push
cmp
mov
pop
fidivrl
cmp
fwait
mov
xchg
fiaddl
xor
inc
ljmp
mov
fmull
jae
inc
sbbb
xlat
xor
cmc
jg
clc
adc
push
mov
mov
mov
dec
test
fwait
xchg
adc
imul
sub
dec
jge
sub
lods
lods
mov
fs
sbb
or
xchg
xor
psubd
addr16
adc
fs
inc
adc
lods
inc
xor
push
sub
std
scas
mov
cmp
daa
xchg
cmpsl
out
fwait
repz
or
mov
dec
les
or
arpl
jmp
mov
mov
nop
loop
insl
adc
adc
mov
lods
mov
cmpsb
sub
ds
push
dec
sbb
insb
xchg
xchg
inc
fists
xor
imul
push
movsb
lcall
push
cmpsb
into
adc
icebp
popa
hlt
mov
sbb
out
push
adc
int
sti
and
pop
stos
fwait
adc
cmp
push
jp
lock
js
mov
fiadds
push
sti
or
imul
dec
push
jbe
leave
push
pop
or
jge
lock
shlb
mov
pop
repz
cltd
adc
cli
jp
test
movsl
pop
bound
cs
out
fs
push
sbb
stc
inc
movsb
ljmp
aam
movsl
pushf
enter
fidivrs
cmp
xor
cld
fbld
test
ficomps
dec
dec
les
lock
sbb
push
test
aas
iret
test
int3
xor
mov
insb
lahf
mov
loope
dec
adc
outsl
out
push
pop
cli
into
sbb
lahf
out
dec
pop
insb
mov
lret
and
lret
nop
das
insl
add
mov
roll
std
or
in
mov
xor
in
lds
sbb
sub
sub
std
shll
stc
cltd
aad
sbb
push
jge
pop
inc
inc
sbbb
neg
out
cmp
dec
fimull
push
mov
ficoms
jno
fdivl
addps
inc
gs
loopne
dec
scas
rcr
xor
rcrl
lock
adc
sub
jnp
pushf
addr16
enter
stc
mov
mov
shl
and
adc
out
mov
push
push
adc
scas
inc
jg
mov
mov
arpl
scas
test
mov
pop
pushf
jg
mov
push
xor
fstpl
jmp
sub
jecxz
lahf
push
inc
imul
inc
or
push
sbb
fmuls
mov
push
push
cwtl
fmull
out
xchg
mov
dec
push
push
jmp
je
dec
pop
pop
rcll
adc
xchg
jp
pushl
push
iret
mov
xor
or
sbb
fbld
filds
push
add
mov
xor
inc
inc
pop
push
inc
sub
sarb
test
ss
fldcw
jg
movsb
xchg
sub
or
imul
add
pop
mov
jne
adc
and
jge
cmp
jo
xor
lods
jo
jl
dec
or
mov
iret
push
js
int
shrl
and
outsb
jl
xor
lods
lret
iret
add
mov
dec
jge
cmpsl
gs
sub
inc
sahf
fildll
xchg
push
jbe
clc
push
in
test
push
adc
data16
call
daa
xchg
inc
sti
jge
call
and
sahf
mov
push
pushf
fcmovbe
adc
outsb
hlt
jg
xor
and
mulb
lahf
mov
scas
mov
cld
jbe
and
test
jmp
pusha
sbb
pop
pushf
push
mov
cltd
inc
dec
mov
repnz
pop
or
jno
xchg
cmp
arpl
jne
sub
hlt
jl
das
je
inc
pop
pusha
es
mov
inc
adc
jecxz
adc
jbe
sub
gs
mov
and
inc
test
lock
ljmp
add
ds
or
loop
pop
insb
dec
inc
or
xchg
negl
sbb
pop
push
dec
adc
ret
mov
dec
push
jecxz
mov
mov
jge
dec
out
lahf
push
cwtl
pop
add
sbb
jno
or
fucomi
fstpt
xor
scas
dec
cmp
dec
sub
in
fwait
push
scas
iret
movsl
jecxz
fidivs
xchg
mov
pop
ljmp
adc
bound
test
adc
imul
inc
movsl
repnz
xchg
cmp
sti
sub
inc
fldl
pop
sbb
adc
mov
out
out
mov
into
cmpsl
push
loop
ds
mov
dec
pop
mov
lret
adc
in
jmp
mov
jle
or
cltd
imul
mov
decl
and
mov
sbb
xchg
out
imul
jb
sub
sahf
add
xor
imulb
jl
xor
ret
jmp
in
mov
and
sub
jae
jb
xor
adc
cmp
adc
or
cmpsb
adc
sub
outsl
xor
xchg
dec
call
shll
pop
je
inc
out
arpl
data16
ret
push
arpl
out
xor
jge
loopne
xchg
lock
out
fldenv
jo
jp
sub
ss
dec
outsl
out
push
mov
jo
aam
mov
sbb
pushf
les
dec
insb
shrb
ret
or
xchg
lods
mov
pop
daa
les
test
icebp
fcomps
mov
imul
jnp
or
mov
pop
mov
test
cltd
mov
testl
sub
out
cmp
sub
xlat
fsubrp
lods
repz
pop
push
mov
lea
outsb
cmc
push
leave
lea
push
push
sahf
inc
add
xlat
push
inc
jo
inc
jmp
push
mov
push
adc
xchg
les
scas
mov
jge
addr16
pop
sbb
mov
popa
mov
addb
into
add
fistps
les
fwait
inc
xchg
ljmp
bound
mov
jb
or
rcrl
xchg
leave
mov
fmull
cli
sub
and
insl
lret
mov
push
lods
out
mov
test
lea
rolb
orl
jle
xchg
pop
rclb
ja
push
cli
out
mov
lret
jbe
jg
jo
adcb
in
mov
or
pop
or
movsb
aaa
cmc
mov
sbb
xchg
js
jb
jne
mov
aad
inc
inc
push
xlat
add
pop
or
mov
das
popf
pop
dec
push
cli
inc
out
push
sbb
int
hlt
mov
adc
mov
sbb
call
mov
out
cmp
insb
pop
sub
push
sub
add
das
pop
jb
xor
test
pusha
xor
arpl
subl
aam
lods
and
fistpll
or
call
sub
mov
fimuls
push
sub
adc
or
adc
negl
stos
fisubs
xlat
in
xor
dec
andl
aad
nop
pusha
adc
test
fidivs
popa
add
addr16
mov
sub
mov
xchg
cmpsl
adc
and
push
adc
push
aaa
out
and
outsb
mov
lds
das
outsb
insb
cmp
mov
push
frstor
cmp
jge
sub
dec
lahf
in
aaa
xorb
fistl
push
cwtl
movsb
sub
cwtl
ljmp
je
xor
lret
repz
pop
pop
push
bound
and
rcl
xor
sbb
pop
negb
pusha
imul
div
xor
pushf
lods
xchg
push
dec
ret
and
pop
jmp
xchg
mov
sub
mov
rclb
pushw
inc
inc
add
stos
movsb
fwait
xchg
push
flds
dec
mov
xchg
pop
in
popa
inc
cmp
xchg
lret
in
adc
aam
in
mov
ret
inc
clc
repnz
punpckhwd
pop
inc
lock
aad
jne
and
enter
aas
adc
and
adc
push
ja
les
sbb
lret
movsb
incb
out
push
fwait
ret
inc
divb
or
cmpsl
push
mov
int
leave
dec
fistpll
jno
or
jge
xor
sahf
icebp
xchg
jl
push
imul
push
imul
scas
mull
call
cwtl
fmull
inc
out
call
and
inc
je
mov
dec
sub
sub
insl
mov
sahf
jb
andl
sahf
push
lods
test
out
aam
out
add
dec
cltd
movsl
dec
out
loop
enter
adc
mov
idiv
lods
jo
xchg
pop
dec
adc
cmc
lock
cwtl
dec
stos
push
xchg
cs
jg
and
stos
je
out
push
rclb
aad
imul
std
lock
in
mov
fwait
xor
xor
mov
inc
insl
bswap
push
enter
add
out
fnstenv
pop
pop
in
adc
mov
dec
nop
cmp
rolb
pop
and
call
movsb
jbe
adc
in
lcall
dec
es
test
popf
xchg
popf
add
subb
dec
loopne
sbb
mov
cwtl
adc
or
es
scas
mull
cwtl
and
sti
mov
loop
inc
add
mov
int
jno
mov
inc
fdivrl
out
cltd
in
sbb
mov
push
movntpd
adc
push
add
jbe
repnz
aam
add
fsubrl
sarb
clc
test
adc
xchg
cmp
cltd
adc
wbinvd
sub
sub
jle
sbb
pop
sarl
dec
shl
push
cmp
xchg
test
cmp
das
and
inc
adc
stc
pop
cmp
adc
and
jl
xor
leave
jge
imul
jl
jp
adc
mov
popf
mov
sub
sbb
mov
pop
mov
mov
xor
jae
push
push
cmp
pop
stc
daa
cwtl
xchg
fwait
xor
inc
xlat
outsb
sub
or
mov
pop
pop
stc
lret
fdiv
stos
ds
mov
cmp
fistpl
mov
mov
fwait
enter
push
into
xchg
lahf
sbb
pop
dec
mov
mov
inc
jmp
enter
jae
xor
adc
insb
xchg
jne
pushf
or
mov
int
loopne
popa
cmpl
sub
aad
dec
push
pop
jge
dec
mov
jge
pop
mov
pop
ret
add
lahf
loop
jmp
jl
jo
xchg
imul
sbb
lret
mov
push
ss
lds
ret
test
stc
je
add
xchg
scas
mov
insb
aas
dec
je
test
cmp
mov
and
scas
xor
inc
cltd
hlt
fnsave
and
cmc
jp
xchg
insb
pop
xlat
xorl
sarl
dec
xor
js
sbb
or
test
js
stos
fs
aas
mov
test
jecxz
sbb
repnz
rcrl
stos
cmp
or
cmp
xlat
dec
andb
fbld
pop
arpl
notl
xchg
jmp
pop
add
and
sub
scas
pop
pop
add
pop
push
lea
pop
jl
fimull
push
inc
or
scas
adc
adc
loop
imul
inc
in
les
lods
mov
jge
in
lds
movsb
adc
shrl
aam
sbb
mov
jo
cs
pop
jne
inc
lods
inc
mov
loope
and
stc
cmp
fadds
aad
adc
outsb
subl
test
dec
jg
xor
add
cmpsl
jge
sbb
inc
addr16
imul
inc
mov
icebp
lea
fstps
pop
outsl
mov
lret
dec
outsl
stos
adc
mov
push
inc
sbb
sub
mov
aad
mov
add
add
bndldx
rcl
lret
jbe
icebp
or
xchg
dec
adc
cmpsl
fcmovnb
pop
imul
fbstp
ljmp
xchg
fcompl
xchg
lcall
repnz
add
jle
and
inc
je
lods
lret
pop
xchg
sbb
inc
aam
mov
xchg
arpl
and
pop
incl
roll
pop
sbb
pop
xor
mov
in
stc
cmp
jge
shrl
dec
pop
popf
icebp
es
dec
mov
jo
lcall
xlat
cmp
roll
pusha
jecxz
outsl
aam
lcall
repz
js
mov
test
fldenv
xor
cmp
lcall
mov
dec
ja
lret
lret
adc
movd
sub
jp
ret
std
xchg
mul
lret
sbb
mov
test
jle
aam
mov
add
mov
std
add
mov
adc
push
rcrl
out
push
outsb
repz
or
mov
add
mov
cs
leave
xlat
notl
pusha
fiadds
cwtl
pop
daa
bound
push
jb
mov
add
icebp
repnz
sbb
cmp
ss
test
mov
jae
xor
mov
mov
cmp
fidivrs
pop
cmp
leave
add
std
dec
xor
stc
loop
daa
lods
sbb
inc
cs
test
jae
into
scas
mov
mov
outsl
sbb
rol
sub
or
das
rclb
pusha
or
mov
push
imull
es
or
fcoml
cs
lea
aad
push
jns
mov
and
inc
mov
cld
iret
sub
lret
sub
sti
test
test
hlt
push
and
sbb
dec
pop
aam
cli
dec
clc
pop
gs
add
xor
push
sbb
adc
inc
mov
enter
pushf
sahf
pop
inc
adc
cmp
iret
and
adc
bswap
stos
pop
imul
mov
repnz
mov
cmc
adc
out
xchg
arpl
and
inc
jmp
push
and
sub
sub
mov
movsl
and
push
and
das
popf
stc
inc
outsb
addr16
xchg
sub
lcall
cltd
push
push
movsb
and
pop
cmp
lret
faddl
fs
mov
cmp
and
inc
sub
cmp
cmp
jb
sub
enter
ss
nop
push
cmp
push
movb
mov
cmc
pop
sub
push
pop
test
mov
les
repz
add
xchg
cmp
jnp
pop
and
sub
movl
mov
cli
aad
push
pop
mov
scas
stos
push
cmp
aad
sbb
dec
ret
sub
xor
sub
scas
inc
ljmp
sahf
inc
add
xor
pop
inc
icebp
lods
add
sub
clc
sub
in
rcrl
lahf
insl
push
scas
in
pshufw
popf
or
sbb
xchg
cmpl
mov
movsb
into
ja
nop
gs
pop
or
mov
jl
test
dec
stos
bnd
push
es
iret
scas
mov
cmp
imull
loopne
pop
and
and
xchg
pop
mov
cwtl
mov
rolb
loope
bound
xchg
adc
bound
xchg
cmp
mov
push
mov
sbb
orb
dec
dec
mov
das
repz
and
loop
push
in
or
mov
shrl
xchg
inc
or
leave
inc
push
notb
je
into
jge
mov
cmp
js
jle
test
push
adc
test
fsubp
add
mov
mov
push
mov
jg
xor
clc
mov
dec
shrb
aad
movsb
add
or
push
push
test
daa
bound
mov
xor
jnp
and
cmp
dec
cmc
aas
enter
ret
aas
int3
and
mov
xchg
mov
insb
sub
mov
in
lret
xchg
dec
push
mov
stos
lret
imul
xchg
push
ret
negb
enter
add
jb
frstor
shl
into
mov
repz
mov
dec
std
scas
and
and
sbb
rcr
cltd
jno
mov
pop
jne
jns
cmc
sahf
inc
bound
out
sub
loop
mov
lock
inc
sub
popf
jb
cmc
and
xchg
test
loope
xor
testb
and
jnp
loop
sarb
fidivrs
push
addr16
pop
xchg
outsl
lret
std
dec
cmp
sbb
mov
outsb
jl
cmp
mov
push
repnz
sti
cmp
add
dec
lock
adc
dec
xchg
bound
notb
mov
nop
add
xor
pop
sub
adc
mov
ljmp
in
lcall
sub
out
movsb
mov
lock
pop
pop
nop
popa
fbstp
push
ljmp
inc
rorb
jae
scas
lds
jecxz
ja
std
outsb
dec
jg
daa
mov
lret
pop
inc
push
lahf
inc
cli
outsb
cmpsl
inc
mov
hlt
pop
mov
and
pop
mov
xor
jl
mov
mov
add
inc
mov
push
dec
scas
add
es
sub
cmp
out
mov
sub
lahf
inc
sub
insl
call
jmp
std
aad
std
dec
sbb
pop
in
jecxz
lods
adc
add
cmpsb
or
push
loop
popf
or
ret
sub
lret
int
cpuid
cmp
fldl
test
out
add
ret
aaa
add
add
fldt
scas
mov
xor
pop
cld
int3
adc
adc
loope
fbstp
or
frstor
mov
inc
jnp
incb
jns
sub
rcrb
mov
call
cmp
push
push
sub
sarb
lock
pop
sbb
cmp
add
mov
movsb
push
jp
and
push
mov
mov
jno
mov
push
out
push
mov
xchg
rorl
idivb
add
sub
mov
js
mov
lods
repz
test
in
add
addb
outsb
fiadds
sub
enter
out
fdivl
xor
int
pop
sbb
in
scas
outsb
inc
inc
test
sub
pop
mov
insb
testb
leave
fmull
cmp
push
xor
pop
aad
outsb
je
pop
sub
push
dec
aam
in
or
xchg
lds
jbe
mov
fiaddl
pop
mov
inc
rclb
xchg
ljmp
mov
lock
mov
icebp
out
in
loope
sti
ljmp
fisubs
or
mov
jg
add
cmpsl
and
mov
hlt
adc
xchg
mov
mulb
mov
es
dec
lret
test
imul
jae
sbb
fbld
lret
xchg
dec
das
pop
std
stos
adc
orb
inc
and
push
movsb
call
dec
and
test
add
xchg
jg
jns
dec
std
sahf
into
imul
mov
cmp
push
xchg
xorl
or
jp
clc
pop
cmp
mov
jp
or
std
cmp
lret
xor
out
bound
lret
and
call
daa
ljmp
mov
sub
ret
jbe
or
mov
lahf
je
leave
xchg
jecxz
dec
in
hlt
neg
leave
fwait
scas
loope
decb
add
and
jmp
std
sbb
arpl
add
cmpsl
and
cmp
ror
ja
mov
mov
not
sub
in
push
popa
mov
add
cmp
xchg
adc
sarl
jnp
xlat
and
filds
dec
into
push
add
bnd
cmpsb
adc
lods
ret
mov
mov
je
inc
xchg
mov
inc
inc
cmp
pop
and
jmp
iret
out
pop
push
movsl
jecxz
inc
lret
lea
xor
sbb
pop
shrb
insb
pop
jns
mov
aaa
cltd
and
stos
push
jb
flds
add
leave
adc
shlb
push
add
push
push
mov
pop
fistpll
xchg
mov
cmp
mov
mov
out
aad
sbb
inc
popa
incb
adc
xor
rcll
mov
leave
hlt
jnp
xchg
inc
clc
icebp
mov
out
push
das
or
dec
sbb
ljmp
adc
sub
xchg
cld
imul
add
dec
jp
jne
xor
iret
mov
test
psllq
mov
imul
pop
mov
pushf
push
pop
movsb
add
fstpt
aas
leave
sbb
fisttps
push
sbb
adc
mov
scas
mov
and
mov
aaa
cmp
mov
fldt
lods
out
jae
movl
mov
cmp
add
outsl
les
movsl
pop
xchg
stos
xchg
push
add
jb
lods
in
or
xor
jle
xchg
pop
xor
jae
ret
mov
adc
sarb
popf
xor
mov
xor
addl
popf
jp
bound
scas
jae
xchg
test
les
push
fnstcw
sbb
sbb
xchg
jo
daa
xor
das
inc
sbb
dec
mov
rcrl
jl
jl
shrl
test
insb
iret
aad
jne
mov
push
push
stos
stos
cmp
fisttpl
push
lods
lea
aaa
pop
push
add
scas
push
orw
in
fmul
pop
xchg
cmp
mov
sbb
dec
xor
dec
je
jbe
add
inc
mov
jbe
or
rcrb
enter
push
jle
imul
aaa
out
pop
jg
sbb
mov
sbb
je
pop
xor
push
sub
push
pop
and
or
cmpsb
mov
aaa
fists
lret
mov
outsl
xchg
mov
ja
push
outsb
mov
jb
gs
stos
shlb
movsl
mov
ret
mov
int
push
fs
dec
xchg
xchg
mov
xor
aas
and
in
xlat
inc
int3
sbb
mov
andb
imul
pushf
xchg
pop
data16
cmp
or
and
dec
dec
repz
mov
fmull
cs
sarb
cmp
xchg
das
fistl
pop
jle
xor
jno
scas
mov
loope
int
mov
push
pop
add
cwtl
je
adc
pusha
mov
aad
shll
dec
lea
xchg
push
push
mov
insl
ret
push
sbb
sub
fs
or
and
adc
lcall
orb
icebp
fldt
sub
loopne
and
xor
push
mov
into
or
icebp
jb
repz
add
mov
in
stos
ds
int3
cld
rcl
and
out
jle
pop
mov
jge
test
inc
pop
xor
daa
lret
in
xorl
ret
in
out
mov
add
inc
lock
scas
rorl
sbb
in
inc
cmp
sub
cmc
das
dec
sti
sti
pop
cltd
jne
aas
mov
mov
mov
rcrl
arpl
shl
cmp
imul
jne
dec
movsb
movsl
sbb
sub
stos
inc
dec
push
mov
mov
js
shlb
outsl
lods
sti
pop
mov
xchg
out
leave
rorl
out
shl
push
ljmp
ljmp
and
in
test
fdivrs
push
or
mov
jb
mov
out
mov
fmulp
mov
int3
out
fdiv
sahf
adc
out
and
bound
mov
mov
lret
jl
add
mov
je
jae
pop
bnd
ret
addl
add
aam
hlt
xchg
pop
imul
adc
xchg
sbb
mov
jae
cmpl
lock
js
mov
hlt
mov
mov
add
test
and
bound
aad
hlt
inc
fistpl
xlat
or
pop
popa
push
loope
adc
xchg
lea
xchg
sbb
fwait
movsb
adc
out
xchg
mov
outsb
jp
xor
sbb
test
adc
or
in
lahf
aas
data16
mov
fnstenv
mov
repz
fcompl
stc
push
fwait
dec
add
adc
and
push
cmp
mov
adc
js
or
or
cwtl
pop
fs
lahf
mov
ret
jb
mov
inc
mov
inc
mov
lret
into
inc
ljmp
push
ret
or
sub
scas
sbb
push
mov
imul
pop
lret
sbb
inc
xchg
ds
stos
push
cli
push
cli
or
mov
lret
xchg
lods
mov
fs
mov
push
mov
sahf
inc
out
mov
ffreep
mov
ret
fstl
xchg
xor
pop
adc
icebp
in
xchg
shlb
fistps
loopew
jp
xchg
xor
push
sbb
xor
in
ds
jmp
or
fstpt
repnz
stc
in
outsb
lret
jno
cmp
negl
push
jae
jo
xor
jecxz
adc
pop
inc
notl
push
mov
lods
cmp
mov
call
out
jbe
lods
lret
and
cld
xchg
outsb
mov
and
jo
inc
pop
or
push
sbbb
scas
test
pushf
push
movsl
sub
dec
fiadds
mov
ficoms
in
fsubl
inc
or
pop
mov
insb
mov
or
jno
mov
sahf
jmp
mov
out
sbb
cmp
push
popl
outsl
sbb
mov
ja
inc
fidivs
leave
adc
mov
mov
and
orl
cmc
fldenv
andl
xor
out
push
cmp
xor
ja
pop
sbb
mov
pop
int3
clc
jae
fists
rcl
xchg
cmpl
inc
mov
icebp
sarl
shlb
mov
iret
cs
or
movsb
inc
cmp
push
xor
popa
fildll
das
leave
imul
mov
and
lods
mov
xchg
insl
push
and
loope
pop
sti
sbb
sub
out
xchg
pop
jno
ss
popa
push
js
repnz
lods
je
fdivrs
aam
inc
or
sarl
out
or
mov
icebp
pop
fimuls
movsb
push
leave
aad
adc
in
adc
ljmp
pop
dec
add
inc
adc
stos
mov
push
ret
adcl
xlat
jns
xor
and
nop
push
add
push
clc
cmp
fsubrs
ret
bound
and
or
mov
or
cmpsb
shll
sti
loope
aam
xorb
mov
push
mov
pusha
pop
in
sbb
orb
cld
mov
add
jle
out
inc
call
push
out
inc
mov
xchg
jp
add
jmp
nop
pusha
cld
push
lock
push
add
push
cmp
xor
std
out
push
or
jb
imul
popa
dec
mov
sti
nop
add
sbb
mov
pop
pushf
xchg
cmp
push
pop
stc
xor
lock
push
lret
mov
pop
add
dec
out
xor
jb
inc
xor
pop
call
cmpsl
sub
pop
mov
cmp
jae
inc
arpl
std
js
fwait
lods
adc
mov
int3
loope
js
sbb
nop
inc
rep
xchg
mov
jecxz
add
incb
enter
sbb
jecxz
mov
mov
enter
xchg
test
ss
cmp
jne
jg
jp
lahf
ret
dec
ss
enter
out
rclb
aaa
cmp
in
lods
push
ja
in
test
sbb
rclb
fwait
jns
or
out
sub
ror
sti
or
cmp
sub
stc
adc
and
mov
mov
fmuls
cmp
movb
add
lahf
loopne
fwait
xorl
mov
or
aas
add
cmp
pusha
push
mov
lahf
loopne
push
out
xor
das
adc
sbb
in
mov
jl
and
push
dec
mov
mov
xor
popa
lea
jne
rorb
bound
pusha
frstor
fwait
loop
aam
mov
push
divb
jne
cwtl
xchg
jbe
sub
sti
sub
mov
clc
jbe
call
pop
cmp
je
sbb
add
jb
lret
arpl
push
fldt
test
scas
and
stc
push
js
xlat
loopne
lret
xchg
int
into
jnp
cli
pop
sub
xor
rolb
aad
mov
stc
repnz
mov
mov
dec
negb
pop
or
dec
call
and
jnp
or
loop
ret
sbbl
icebp
inc
lahf
test
jae
fwait
pop
lods
inc
push
leave
inc
adc
into
adc
dec
rorl
jbe
ret
jo
or
scas
push
fcomps
adc
sbb
fimull
dec
cmp
mov
mov
sub
ss
rorl
xor
fst
stos
mov
ljmp
sbb
mov
add
loope
jecxz
movsl
fwait
arpl
mov
sti
adc
daa
jge
test
jmp
xor
add
sti
pop
in
mov
jmp
fdivrl
es
lret
or
push
test
dec
test
mov
into
inc
xor
es
sub
out
xchg
add
sub
scas
mov
sub
ret
mov
pop
adc
push
imul
popf
loop
xor
sahf
cld
cmpsl
fbld
push
scas
mov
cli
popf
mov
and
sbb
xor
push
dec
mov
mov
mov
pushf
jmp
or
lea
in
cli
cmp
dec
dec
aas
mov
test
mov
xchg
xor
and
pop
sbb
rcrb
cmp
adc
lahf
test
je
jl
pop
aam
sbb
xchg
and
add
lcall
add
inc
push
sar
cmp
insb
rorl
repnz
jge
and
or
fs
push
mov
outsb
jl
ljmp
mov
test
xor
push
fdivrl
push
xor
cltd
imulb
int3
int3
std
adc
dec
ficoms
push
mov
inc
sub
inc
sbb
mov
push
in
out
inc
push
push
xchg
iret
pusha
mov
jbe
mov
push
jnp
fwait
ret
inc
push
xchg
repz
aam
push
ret
loopne,pt
loopne
pop
arpl
mov
add
adc
mov
adc
dec
out
add
ds
pop
das
outsb
jne
sbb
fwait
cmpsl
out
or
imul
mov
int
movups
in
push
test
dec
sub
mov
stos
inc
adcl
xchg
push
push
andl
stos
enter
mov
push
repnz
in
fdivl
movsb
mov
movsl
adc
sbb
sarl
jno
stos
ret
lret
jl
ret
mov
or
pop
cs
mov
adc
add
mov
iret
icebp
mov
mov
adc
dec
xor
sub
cs
jl
add
jle
pop
js
xchg
outsl
cmc
enter
ret
add
imul
gs
pop
test
or
daa
addr16
inc
cld
dec
or
outsl
or
and
es
jmp
inc
lods
aaa
lahf
pop
outsb
cmp
jns
repnz
call
xlat
cmp
adc
cmp
xchg
add
pop
jne
rolb
lds
push
test
jns
mov
mov
xor
xchg
sbbl
mov
adc
and
aad
popf
mov
into
pop
push
aaa
fst
pop
leave
sub
or
dec
jns
mov
fucom
lea
mov
call
mov
nop
inc
sub
pop
mov
mov
les
popf
xor
sub
push
lods
jecxz
jp
gs
pop
jg
xchg
fsubs
lretw
incl
mov
int3
mov
add
pushf
lret
fisubrl
ds
movsb
fcoml
mov
mov
pop
mov
sbb
inc
or
xchg
or
cmpsb
add
inc
push
lea
pop
mov
inc
popf
or
das
pop
mov
imul
mulb
pop
mov
push
mov
pop
or
add
xchg
push
outsl
pop
pop
add
jae
fistpll
sbb
cld
ss
add
or
and
roll
roll
mov
loop
inc
cmp
mov
ljmp
sub
jno
js
mov
in
mov
cli
mov
xor
sbbl
cmp
inc
lock
mov
fwait
movsl
push
push
jl
fstl
push
clc
push
shlb
push
cmp
xchg
sbb
xchg
mov
push
sbb
int3
icebp
or
in
mov
mov
rol
pushf
imul
sti
cmpsb
mov
nop
fsubrs
and
xchg
mov
pusha
dec
add
nop
mov
jp
mov
jl
leave
clc
mov
cli
fcom
cmp
iret
std
out
xchg
scas
loopne
jo
lret
jae
xor
adc
jmp
mov
mov
xchg
imul
call
inc
cmp
stos
in
ss
movsl
lock
shl
scas
inc
add
push
adc
mov
sub
std
popa
mov
add
call
nop
xor
xlat
out
popf
jbe
push
pop
and
cld
out
call
lcall
cmpsb
xchg
out
out
mov
push
out
lahf
dec
cmc
inc
mov
mov
sbb
and
repz
fsubrs
pop
in
mov
mov
adc
ljmp
rcr
jmp
sbb
inc
lcall
xchg
out
in
jno
ljmp
push
lcall
cmp
jb
lods
push
enter
jnp
adc
push
inc
dec
sbb
dec
pop
push
fs
jmp
enter
adcb
mov
pop
jmp
pop
icebp
adc
leave
pop
stc
push
mov
rcll
xor
lcall
xor
fdivl
dec
ret
jbe
push
adc
add
push
sbb
cli
xor
js
insb
scas
pop
mov
jns
mov
inc
cmp
loopne
xchg
enter
and
or
inc
xchg
jns
mov
dec
int
push
ucomiss
adc
sbb
bnd
out
mov
and
insb
bound
dec
stc
dec
pop
add
mov
xchg
shl
sbb
jle
aam
inc
inc
push
jecxz
cmp
pusha
sbb
stos
adc
into
xchg
mov
cs
mov
and
out
rorl
mov
hlt
sbb
push
cmovnp
stc
pop
push
test
pop
sub
inc
movsl
xor
pop
sbb
jnp
xor
jnp
repnz
mov
jae
pop
es
lods
outsl
fisubs
pusha
push
and
sbb
cld
jmp
push
cmp
xchg
ljmp
daa
cmp
stos
lcall
cmpsl
lret
xor
push
xchg
push
js
loope
mov
pop
dec
adc
lahf
xchg
and
pop
leave
and
adc
and
dec
mov
pop
rolb
icebp
jno
movsl
stos
lods
stc
fldenv
sbb
sbb
fcmove
xchg
dec
shrl
push
loop
loope
lds
cmp
sub
jmp
popf
mov
lea
mov
ret
and
and
sub
out
push
add
sub
adc
int3
jge
xchg
jmp
lret
lahf
fcompl
in
popf
pusha
add
in
insb
stc
cli
mov
push
mov
out
jo
sub
cs
jmp
out
add
pop
lods
movsl
and
divl
inc
sub
fsubrp
mov
add
push
dec
idivb
inc
repz
lods
sub
inc
stos
jg
mov
dec
jg
ss
push
out
jne
je
arpl
mov
fisttpl
add
into
out
fwait
add
adc
adc
in
mov
or
sbb
mov
inc
cmpsl
pop
call
jae
leave
lods
jg
aam
loop
out
jnp
and
cmp
iret
or
xor
in
dec
int3
mov
outsl
sbb
icebp
int3
outsb
mov
push
mov
push
lret
daa
rcrb
jl
add
in
cwtl
mov
mov
dec
pop
popf
jecxz
popf
fs
inc
cwtl
push
jo
inc
mov
sbb
insl
enter
gs
push
std
cmpsb
push
mull
inc
ret
xchg
in
hlt
and
mov
rcll
out
adc
mov
mov
int3
mov
flds
icebp
mov
cmpsl
mov
shrl
cmp
cmpl
mov
add
jo
xor
mov
mov
mov
out
inc
dec
repnz
iret
cmp
test
mov
xchg
ret
xor
stos
bound
adc
push
jo
add
popf
fbld
pop
fs
or
adc
pop
xchg
jl
std
xchg
jl
mov
cmp
repnz
sbb
push
mov
xlat
out
ja
or
mov
sub
lea
ss
or
jb
sub
test
insb
movsb
sbb
shlb
addb
mov
mov
fcmovu
lcall
arpl
add
mov
mov
out
cmp
xchg
dec
pop
test
aaa
jle
sub
mov
dec
in
jnp
xchg
testb
push
roll
jno
repz
push
push
pop
cmc
sub
xchg
cmp
cwtl
or
mov
inc
pop
lock
imul
push
push
fdivrl
mov
out
sahf
jb
cmp
push
push
adc
mov
je
push
pop
push
aaa
test
test
dec
mov
add
push
sub
adc
pop
lahf
inc
sub
jmp
inc
loope
lock
lret
enter
rcrb
cmpsl
int
dec
rcll
add
repnz
jmp
iret
push
inc
out
sbbw
jae
iret
insb
test
out
sub
ja
out
aam
sub
mul
aad
or
push
jg
and
repnz
add
popf
dec
jmp
xchg
adc
or
mov
mov
mov
cmpsl
mov
dec
push
cmp
push
sbb
stos
aad
pop
roll
add
icebp
xchg
pusha
cld
jae
adc
fld
add
push
pusha
push
shlb
adc
jge
outsl
push
sub
dec
ljmp
and
fstpt
in
push
mov
xchg
insl
cmp
mov
retw
lods
mov
gs
loopne
lds
daa
pop
in
xchg
cmp
mov
dec
mov
cmp
out
mov
lahf
gs
divb
insb
testb
adc
cltd
and
adc
jl
subl
pop
sbb
lret
add
fists
xlat
out
into
out
mov
sub
fisubrs
out
sub
xchg
xchg
loope
sub
hlt
xchg
sub
aam
sbb
inc
shlb
daa
and
sahf
jecxz
add
inc
test
mov
test
js
test
lods
shlb
mov
dec
repz
lock
jnp
std
ds
movsw
inc
dec
out
cmp
iret
push
cld
sbb
ss
fidivrs
mov
adc
lcall
fwait
sub
cmpsl
pop
sbb
loope
adc
xor
repnz
push
push
sbb
xchg
sbb
xchg
pop
or
pop
jecxz
call
adc
jl
sahf
adc
mov
pop
orl
stos
jo,pt
test
fwait
cmpsb
jne
xor
int
popa
push
xorl
and
mov
inc
mov
dec
pop
pop
imul
jb
mov
fwait
push
xchg
lods
rep
in
xor
push
sub
test
or
xchg
adc
and
sub
inc
mov
stos
pop
jge
jl
das
movb
outsb
into
inc
in
test
lret
pop
iret
xchg
mulb
xor
mov
sub
loop
or
repnz
out
push
sbb
in
mov
dec
and
dec
test
inc
shlb
mov
hlt
fstp
ret
dec
mov
pop
push
sub
scas
push
inc
addr16
lds
inc
dec
add
pop
adc
pop
sub
aaa
pop
das
sub
xor
jno
fadds
cmp
jnp
cmpsb
xchg
mov
in
xchg
and
in
pop
loopne
mov
inc
sahf
cmc
xchg
in
adc
mov
inc
imul
mov
xchg
xlat
fwait
les
shr
mov
es
fwait
push
iret
mov
mov
lea
scas
xchg
loopne
pusha
xchg
mov
ret
addr16
add
mov
xchg
fsubl
mov
inc
es
fistl
pop
popf
je
pop
adc
dec
and
scas
inc
mov
pop
repz
mov
mov
clc
xor
mov
bound
pop
into
movsb
movsl
stos
pushf
inc
rclb
cmp
pop
repnz
jae
jns
bound
fsts
pusha
in
mov
lahf
cmp
jmp
add
pmuludq
mov
mov
push
jns
dec
repnz
leave
cld
enter
movsb
mov
mov
shlb
pushf
lret
jnp
inc
sbb
cmpsl
and
pop
shlb
or
outsl
inc
jge
stos
sbb
jne
xchg
scas
sbb
int
negb
xchg
and
lds
jg
xlat
test
pop
insb
jae
add
movsl
int3
and
xchg
push
sbb
outsb
adc
out
bound
sub
ss
add
sub
fwait
inc
loope
stos
mov
cwtl
pop
jmp
in
dec
jge
lret
sti
dec
inc
inc
out
cmp
aaa
sbb
clc
addr16
arpl
cmp
mov
hlt
lahf
jecxz
stos
outsb
fsubrl
xchg
adc
adcl
movsb
lret
and
xchg
and
mov
mov
sahf
and
mov
push
sbb
clc
aaa
divb
xchg
mov
or
xchg
js
xor
insl
push
paddusb
out
add
inc
jl
into
cltd
es
adcl
pop
mov
fwait
add
out
adc
insb
pop
mov
xchg
js
or
jo
cmpsb
mov
dec
imul
rorl
jns
cmp
repz
mov
adcb
jae
add
adc
jmp
dec
std
ret
adc
inc
js
inc
dec
rol
pushf
add
pop
mov
jbe
xchg
sbb
adc
add
jle
mov
pop
sbb
sub
adc
inc
pop
cmpsb
push
mov
and
and
pop
shl
or
rcl
lods
shll
data16
les
pop
and
fcmovbe
mov
jae
loope
sub
fnsetpm(287
int
subl
or
movsl
int3
pop
dec
dec
mov
rorb
pop
lods
jle
inc
push
fdivrp
mov
dec
rorb
push
push
cwtl
rcl
or
out
jp
lock
std
test
rcll
lahf
ljmp
mov
loope
pop
pushl
popa
xchg
pop
cmp
xor
jge
je
aaa
push
fwait
cmp
cmp
sub
inc
pop
cld
and
test
movsb
or
dec
adc
imul
adc
jp
vpshaw
les
fidivrs
jmp
dec
adc
call
outsl
sub
mov
or
sub
sbb
daa
jae
or
jp
jno
in
lods
test
ret
mov
cltd
cmp
dec
ret
mov
out
jno
and
addr16
in
sti
add
dec
dec
push
insl
inc
popa
lret
fs
jne
mov
mov
sti
sti
and
aam
mov
jb
int
fldt
or
mov
adc
hlt
enter
xor
and
jae
and
sub
test
cmpsb
movsb
add
gs
cmp
test
jp
mov
scas
jb
sub
popf
ret
loop
xchg
popf
decb
pmulhuw
out
mov
inc
xchg
gs
inc
dec
sub
hlt
sub
out
adc
pop
popa
mov
ja
adc
mov
mov
jns
mov
outsb
sbb
aaa
fnstsw
mov
mov
inc
fildl
ret
mov
ucomiss
mov
outsb
sti
push
push
rcl
pop
and
add
push
jb
jge
decb
fadd
std
add
pop
lea
add
sbb
pushf
or
test
repz
and
ja
pushl
dec
lahf
ja
iret
fmull
inc
movsl
mov
and
outsl
leave
push
ret
jg
push
inc
and
cmp
lcall
pop
or
pop
mov
mov
gs
loope
cmpsb
pop
mov
mov
ja
rcll
int3
aas
xor
fdivrs
and
sti
add
add
imul
mov
fdivr
xlat
jl
pushf
dec
movsb
mov
add
mov
fs
jl
sbbb
push
ja
sub
jne
mov
or
jne
les
fstps
ret
dec
pop
pop
inc
xchg
inc
jnp
outsb
add
cmc
stc
add
mov
call
es
hlt
mov
out
jl
pushf
xchg
das
add
dec
cwtl
in
cwtl
pop
inc
and
adc
in
add
mov
out
insb
jno
add
and
incl
sbb
roll
push
dec
lods
popf
push
xchg
or
xchg
fiaddl
pop
addl
imul
cs
iret
jae
pop
jo
stc
mov
js
dec
inc
sub
cmova
aam
bswap
inc
test
ret
push
push
int3
add
lea
femms
rclb
add
xor
cmp
jns
or
cs
pop
jp
xor
repz
test
cmc
mov
xor
cmpsl
icebp
mov
add
mov
ljmp
bound
mov
add
add
sbb
movsb
fistps
push
aam
addb
xor
sub
jge
leave
bound
loopne
repnz
add
in
push
sti
int
mov
insl
xchg
lahf
fs
scas
add
loopne
je
test
sub
mov
mov
jbe
pop
xchg
call
xor
jp
loope
jae
jp
in
and
out
ljmp
xor
das
sarl
push
rol
adc
add
pop
xchg
push
jecxz
ds
xchg
int3
movb
pop
pusha
mov
push
pop
cmp
push
sub
ljmp
shl
pop
push
dec
xor
lahf
call
lods
cwtl
mov
hlt
clc
mov
push
xor
bound
fsub
pop
aas
mov
dec
jmp
aaa
das
incl
inc
mov
push
dec
clc
ss
bound
mov
sti
cmp
inc
int3
pop
aas
repz
cmpsl
scas
inc
ds
outsb
lret
adc
outsl
dec
inc
inc
loope
insl
stos
cmp
inc
pop
push
jo
adcb
negl
lret
push
out
mov
cmc
mov
inc
jbe
clc
dec
in
outsl
xchg
pop
stos
push
sub
fwait
int3
ret
mov
mov
mov
and
xchg
mov
cmp
dec
add
cmp
dec
scas
pop
mov
scas
push
jmp
subl
daa
out
mov
dec
ja
sbb
inc
sub
push
jp
stos
jecxz
sub
popa
loop
subb
ficoms
xor
xor
jg
dec
xor
rcrl
ljmp
int
pop
sbb
bound
loopne
mov
sbb
add
pop
cmp
cld
cmp
sbb
cmp
jecxz
add
push
cmp
cltd
repnz
rcl
pop
cmp
cmp
and
out
hlt
sub
out
jg
cmpsb
mov
add
into
sbb
nop
testb
pop
and
push
pop
frstor
and
add
dec
movsb
gs
adc
push
lcall
xor
outsl
xchg
and
xor
lods
push
in
mov
lock
push
pop
shll
xchg
scas
les
mov
mov
pop
push
lahf
dec
push
or
in
inc
stos
shrb
icebp
adc
xchg
push
push
repz
and
push
clc
stos
data16
adc
out
lds
xor
jge
jne
das
mov
mov
sbb
jnp
xchg
movsb
pushf
pop
cmp
pop
push
insb
inc
jae
les
sub
icebp
mull
sub
adc
adc
pop
dec
dec
inc
scas
movsl
add
ljmp
call
clc
push
push
xchg
dec
cld
mov
mov
sti
scas
sbb
stos
push
or
mov
sub
ljmp
inc
test
sub
pop
and
inc
out
addr16
out
inc
jns
sub
cs
inc
mov
fabs
imul
dec
neg
inc
daa
xchg
pop
xor
jae
inc
sub
push
inc
cmpsb
inc
sbbl
xor
imul
cld
fbld
mov
popf
push
mov
inc
test
setle
flds
outsl
imul
cmpsb
mov
adc
je
lahf
aad
adc
mov
mov
sub
mov
das
pop
out
pop
xchg
push
xchg
and
pop
xor
sub
scas
xor
lret
dec
or
incb
ret
mov
hlt
sub
mov
fidivrs
sbb
bound
in
dec
mov
push
or
rcll
push
push
loop
push
and
inc
std
adc
je
in
hlt
pop
xchg
popa
or
inc
ss
mov
aad
jae
or
sahf
bswap
movsb
push
or
int
cmpsb
cmp
popa
mov
test
leave
inc
mov
dec
mov
adc
push
xchg
push
inc
test
out
add
mov
negl
xchg
aas
hlt
fwait
addr16
imul
mulb
in
mov
pusha
setl
insl
shrl
negb
sbb
das
mov
sarl
xorb
je
and
popf
ss
xchg
repnz
andb
pop
push
int
int3
les
daa
call
mov
push
adc
push
jne
lret
jb
jmp
jns
or
out
test
xlat
shll
jp
test
test
cwtl
or
inc
pop
add
mov
push
rorb
mov
sbbb
pop
sub
popa
push
les
rep
inc
outsl
xchg
shll
cld
xor
icebp
add
cmp
mov
pop
mov
mov
repnz
inc
out
sub
pop
cmpsl
sub
js
jmp
lds
je
push
cmp
ss
cmp
aaa
sbb
aam
push
mov
leave
and
adc
add
fwait
fs
and
insl
mov
loope
test
pop
fwait
gs
cs
in
mov
and
mov
mov
jmp
mov
pop
xor
jle
mov
jbe
nop
jl
insb
adc
int3
es
cltd
cmc
gs
mov
adc
test
jo
or
sahf
ret
loope
ljmp
dec
data16
lds
xlat
xchg
mov
repnz
call
cwtl
sub
cmp
adc
lds
mov
xlat
fists
in
xchg
and
adc
mov
mov
inc
xchg
dec
imull
cs
int
or
in
hlt
stos
imul
cmp
inc
mov
xchg
lock
loope
or
out
clc
mov
pop
sbb
inc
rclb
jge
xor
sbb
mov
sbb
xor
add
inc
adc
push
loop
sbb
pusha
push
xlat
in
and
loop
add
das
dec
in
cmp
data16
rcrb
mov
cwtl
push
jnp
adc
mov
pop
cmp
scas
dec
je
xor
imul
dec
jns
mov
js
push
sbb
cmp
in
daa
cmp
inc
std
push
or
in
mov
adc
adc
aaa
adc
mov
cmp
and
push
pushf
mov
add
addr16
push
pop
sub
mov
out
scas
jnp
test
enter
into
inc
inc
mov
jl
sub
jns
lret
sti
push
int
outsb
mov
or
jo
dec
adc
adc
xchg
std
je
in
imulb
mov
int
mov
mov
test
jle
ret
inc
adc
jl,pt
sbb
xor
pop
in
inc
pop
inc
xor
xchg
jg
add
lret
sbb
stos
xor
test
push
mov
cmpsb
fstpl
sub
lds
xchg
lods
addr16
ljmp
mov
inc
call
sbb
mov
push
lds
cmp
lahf
jmp
mul
or
negb
dec
add
lods
cmp
mov
inc
or
in
cmpsb
adc
lahf
sbb
in
pop
and
or
and
cld
mov
scas
adc
pop
sti
fwait
push
ficompl
out
mov
test
andb
lcall
sahf
pop
xor
jne
frstor
cmp
inc
filds
lahf
aam
and
pop
outsb
or
adc
dec
clc
xor
fisttps
dec
xchg
repz
dec
sbb
fnstcw
adc
pop
inc
fadds
mov
add
jge
loop
shlb
adc
icebp
jns
jne
insl
mulb
pop
cltd
jmp
or
xchg
rorb
sub
xor
mov
pop
shl
into
test
push
and
mov
fwait
mov
pop
and
mov
or
arpl
loopne
lock
mov
pop
mov
dec
roll
pop
jp
int
lods
enter
adc
xchg
dec
push
out
push
inc
push
mulb
dec
test
pop
inc
and
in
add
in
les
and
mov
lret
sub
cmp
inc
movsb
fcmovne
jl
cs
pop
ljmp
mov
movsl
inc
fiadds
lock
imul
ret
mov
gs
imul
mov
jl
mov
mov
mov
into
lods
inc
jge
filds
push
imul
mov
xor
pop
and
xchg
xchg
aad
iret
in
fidivrl
popa
jle
mov
ds
lret
pop
outsb
ljmp
and
add
inc
pop
xchg
dec
adc
pusha
outsb
xchg
xchg
leave
inc
movq
mov
jmp
arpl
mov
das
js
leave
cltd
jl
inc
incl
jecxz
sub
or
jecxz
inc
jmp
or
lods
shrb
fwait
outsb
jo
iret
mov
lods
jge
mov
int
mov
sbb
and
xchg
repnz
mov
mov
push
and
out
cwtl
inc
jl
jnp
call
aas
xchg
shrl
and
in
enter
mov
call
lcall
sahf
jecxz
pop
xchg
cmp
jae
or
xor
mov
jg
xor
mov
inc
jp
dec
aam
dec
and
in
repz
ret
outsl
mov
sarl
ret
fimuls
sub
test
test
je
addr16
pusha
imul
adc
adc
pushf
lret
or
mov
cmp
sub
stc
pop
adc
add
push
and
call
sti
ja
mov
into
aam
push
cwtl
and
fstpl
push
lds
add
xor
pop
das
mov
sub
mov
mov
sub
aaa
fcmovb
outsl
outsl
or
addr16
out
ret
lods
or
pop
adc
xor
cli
cwtl
lcall
mov
aaa
pop
lea
mov
into
loope
mov
frstpm(287
rol
add
movsl
andl
daa
adc
pop
dec
push
dec
jb
clc
pushf
push
shrb
cmp
inc
jmp
sbb
and
and
lods
mov
dec
rcl
insl
xchg
xchg
scas
xor
subl
push
insb
es
fs
mov
repz
xlat
jmp
xlat
adc
sub
mov
jmp
aam
sbb
test
sub
in
sub
pop
mov
mov
enter
iret
lahf
mov
or
mov
cmpsb
bound
pop
xchg
xchg
push
add
pop
scas
aad
xlat
and
out
fdivr
push
jnp
inc
jecxz
incl
cwtl
bound
mov
push
jae
xchg
rolb
mov
inc
and
fldenv
sbb
push
mov
cs
dec
out
lods
frstor
push
push
lcall
mov
arpl
pop
cmp
push
lret
xchg
push
push
xchg
push
sbb
das
push
pop
les
cmp
fwait
adc
pusha
imul
lods
scas
ss
mov
mov
je
push
jecxz
add
push
cmc
push
cs
dec
aad
cmp
ret
adc
das
fimuls
rclb
scas
adc
jno
imul
xor
ja
js
cmp
xchg
mov
cltd
ds
and
mov
dec
xchg
mov
imul
in
push
movsl
push
sbb
dec
ret
mov
js
out
js
in
ljmp
push
loop
sbb
add
pop
pop
and
mov
adc
cwtl
hlt
std
mov
testb
pop
mov
mov
add
mov
mov
scas
jg
push
adcb
popf
test
cmc
mov
sub
addb
shrl
loope
adc
mov
mov
addr16
lret
or
xor
sub
sbb
sub
aaa
test
add
stc
lret
push
pop
cmp
jge
clc
pop
mov
mov
fsubrs
mov
adc
pop
dec
imul
hlt
and
mov
in
mov
dec
in
xor
and
mov
push
jge
cmc
inc
cmp
jne
insl
in
fbld
cmp
push
pop
cwtl
das
jl
stos
lret
addb
sahf
cld
iret
sub
jg
mov
pop
fadd
imul
mov
pop
call
insb
sahf
pop
pop
xchg
mov
xchg
xchg
push
mov
lock
cmp
mov
jge
outsl
mov
cmc
lcall
xchg
pop
xchg
push
xchg
fwait
nop
aad
mov
add
push
jl
int3
js
lahf
ds
cmp
leave
jle
cld
addr16
cli
push
adc
sub
inc
add
push
inc
sub
push
lahf
mov
inc
add
cltd
fldcw
jb
test
adc
push
add
jnp
int
lahf
or
imul
popl
shlb
cs
pop
mov
pop
lret
xchg
or
inc
call
jmp
add
mov
test
jne
inc
ss
aas
mov
pop
sub
inc
adc
inc
cs
roll
adc
jb
insl
jnp
jns
jbe
mov
fs
pop
repnz
popf
add
mov
fdivrl
xor
sbb
popf
mov
lds
mov
data16
jmp
push
cwtl
mov
sub
jne
loope
xor
xor
fdivrs
mov
jmp
adc
pop
pop
xchg
popa
adcb
cmp
dec
cmp
repnz
aas
mov
pop
xchg
push
mov
push
mov
or
mov
test
pop
inc
loop
test
adc
jae
mov
fs
loopne
push
mov
iret
out
sbb
adc
aaa
mov
push
pop
dec
movsl
cmpsl
outsl
push
and
dec
mov
or
outsb
incl
fcoms
sub
shrl
mov
es
ljmp
sub
xchg
dec
push
mov
adc
inc
sub
or
mov
cmp
fs
push
fstps
test
ds
stc
into
sbb
je
sti
jb
pop
in
dec
lock
cld
cmp
mov
fdivp
inc
aas
in
hlt
imul
xchg
repz
xlat
jbe
adc
sub
or
cmp
push
mov
xchg
ss
inc
push
sbb
add
mov
xlat
push
scas
daa
jne
movsl
js
leave
sahf
jnp
push
gs
inc
dec
sub
and
jnp
jnp
popa
sbb
movsl
push
xchg
inc
sub
loopne
ds
lods
arpl
clc
insb
aaa
imul
out
adc
mov
shlb
cmp
repz
icebp
or
dec
aas
dec
adc
sub
pop
xchg
pop
andl
les
ret
or
or
sbb
shlb
inc
cld
nop
fwait
push
push
mov
shlb
cmovno
out
in
adc
pop
xlat
push
cmp
add
adc
fldenv
sub
es
xor
mov
pop
sbb
mov
pop
mov
push
and
jns
mov
pop
sub
or
cs
pop
andl
jns
call
add
mov
dec
xchg
inc
or
cmp
mov
mov
push
cltd
mov
jne
jle
stc
cmp
enter
cmp
into
jae
mov
pushf
stos
repz
fs
rolb
in
aaa
cwtl
pop
jmp
sbb
dec
out
push
ret
sub
add
adc
push
sahf
nop
dec
and
and
xchg
jb
xchg
js
lahf
test
das
repz
pop
fnsave
and
push
adc
jb
into
sub
dec
scas
bound
add
aas
andl
ss
add
or
mov
stos
cmp
subl
xchg
cli
std
pop
adc
cltd
mov
pop
xchg
mov
pop
sbb
mov
mov
mov
mov
pop
xor
sbb
mov
outsl
lret
loopne
adc
out
aam
push
notl
je
inc
lcall
push
addl
jns
mov
xchg
inc
bound
test
fisttps
add
adc
nop
jl
test
aad
sub
xor
scas
maskmovq
imull
push
out
popa
cmp
lret
xchg
sub
sbb
xchg
and
in
fs
cmpsl
test
fwait
cmpl
push
daa
and
adc
sub
inc
test
jp
adc
in
add
lcall
orb
mov
mov
jle
popf
dec
lds
in
pop
pop
inc
sahf
jno
or
les
inc
mov
push
mov
enter
test
mov
movsl
hlt
pop
jmp
shll
mov
movsb
adc
sbb
mov
adc
mov
les
push
and
lea
mul
inc
inc
dec
push
fs
outsb
testb
and
dec
dec
stos
outsb
jg
sbb
and
call
inc
sarb
dec
xchg
push
pop
fcoml
dec
push
cmpsb
push
test
into
sub
mov
and
adc
push
dec
cmp
daa
bound
jb
ja
es
cmpsb
adc
test
push
andl
fcompl
jle
mov
pop
fsub
push
sbb
sbb
fsubs
xor
and
mov
ljmp
mov
push
sbb
mov
sets
jge
bound
push
test
mov
in
cmpsl
mov
call
jne
adc
add
lock
push
iret
dec
sarl
mov
ret
mov
xchg
fst
testb
aas
mov
cmp
mov
into
and
addr16
subb
xorb
pop
outsb
lea
jmp
in
xor
push
push
cmpb
jbe
fdivl
lcall
call
dec
lret
jnp
xor
mull
lret
sti
lcall
cwtl
jg
add
scas
outsw
stc
aad
xchg
leave
popf
notb
xchg
mov
xchg
orl
scas
push
cmp
inc
add
mov
das
movsl
pushf
or
iret
push
mov
xor
pushf
xor
xor
popl
mov
adc
ret
cmpsb
pop
call
dec
cwtl
sbb
or
ljmp
mov
push
jmp
ss
or
mov
sbb
sbb
or
inc
xlat
mov
test
sub
stos
jnp
dec
sbb
sub
jno
pop
cmpsl
pop
push
pop
loope,pt
mov
add
call
rcl
sahf
int
mov
lock
cltd
clc
xlat
mov
cli
xchg
leave
and
loope
mov
into
stos
add
int3
pop
out
cld
xchg
xor
rcrb
in
aad
sub
out
jp
ss
movsl
xchg
push
insb
lock
dec
mov
rclb
out
in
nop
mov
sub
or
je
mov
push
popf
adc
test
call
mov
jno
or
sbb
stos
ds
lret
add
jne
xchg
jae
jg
leave
insl
and
icebp
in
arpl
or
dec
popf
or
cmpb
mov
into
sbb
push
or
mov
testb
test
mov
mov
int
adc
jecxz
jmp
cmpsl
andl
and
xor
or
xchg
andl
pushw
jp
lods
jbe
out
xchg
int
ret
jl
fs
pop
cmpsb
pushf
movsl
flds
fstpt
shll
imul
and
mov
mov
lret
push
popa
cmc
movsb
outsb
std
push
stos
ss
fnsave
pop
xchg
popl
cmp
arpl
xchg
xchg
xlat
fsts
xchg
or
or
shrl
ret
sbb
sub
adc
mov
sbb
rorl
jmp
rclb
int
push
js
sub
mov
push
sub
leave
sti
dec
idiv
push
sbb
adc
in
fcompl
adc
xor
adc
xrelease
fs
andb
call
icebp
in
pop
sahf
inc
fnsetpm(287
cmpsb
ljmp
mov
or
outsb
outsb
jl
data16
pop
fcmovbe
shr
lds
aad
mov
xlat
movsb
inc
lcall
inc
popf
data16
fidivs
push
sahf
xor
xchg
jmp
leave
imulb
pushf
or
shl
mov
add
shlb
mov
xchg
push
mov
sub
insl
pop
jmp
jge
fsts
adc
and
inc
out
xchg
and
or
adc
addr16
cwtl
addr16
adc
outsb
cmpsb
inc
lea
push
xor
inc
dec
xchg
jae
andl
push
pusha
leave
addb
pushf
fwait
cmp
adc
mov
push
xor
imul
sub
and
sahf
mov
ret
xchg
xor
sahf
xlat
push
aam
jmp
aad
pop
pop
pusha
inc
sub
je
dec
xchg
pop
jb
mov
in
or
loopne
xor
into
xlat
stos
jge
fidivs
repnz
das
push
pushf
push
mov
push
aam
popf
sub
std
lods
mov
xor
add
sbb
aas
out
gs
out
pop
inc
or
adc
xchg
leave
adcl
repz
mov
dec
add
mov
cmc
mov
dec
in
rorl
inc
mov
sbb
ret
xor
pop
fisubrs
test
add
mov
repnz
push
xchg
xchg
jnp
cmp
xor
jmp
leave
fiadds
pushf
sahf
mov
stc
int3
xchg
pop
dec
ss
out
jnp
dec
ret
cmp
push
pop
mov
repnz
js
ljmp
and
movsb
cli
rcrb
mov
push
add
inc
sub
mov
and
test
cmpsl
js
xchg
fiadds
and
inc
push
arpl
cld
scas
aas
xor
cltd
pop
add
fwait
test
cs
fs
jecxz
xor
ds
js
mov
sbb
stos
call
push
test
xchg
lock
andb
and
dec
xor
mov
ljmp
pcmpgtw
loop
data16
ret
test
add
mov
imul
in
push
ss
decb
xor
insl
aas
lock
mov
inc
std
stos
in
mov
mov
mov
rclb
dec
mov
and
cmpsb
dec
sbb
int
sub
jg
push
js,pn
testb
test
pop
fsubrp
push
push
xchg
push
jo
imul
jb
lret
inc
inc
sbb
fsubrl
or
mov
loop
shl
stos
or
mov
les
out
inc
popa
xchg
add
aaa
pop
sbb
xchg
fsubs
sub
or
adc
lock
ret
imul
xor
mov
fstps
sub
push
sbb
xchg
scas
mov
lret
jp
adc
aas
lret
jg
xor
movsl
sub
adc
cli
pop
push
out
fdivs
stos
cmpsb
loope
push
inc
inc
je
in
sbb
sti
stos
shl
rorl
sbb
mov
mov
sbb
jmp
out
xor
iret
push
bnd
ss
stc
xlat
pop
mov
adc
and
inc
ss
cwtl
mov
cmp
pop
xchg
adc
push
loopne
sar
xchg
sbb
pop
and
in
pop
lds
add
push
idivl
lcall
xor
notl
out
stc
push
cmpsl
sahf
and
xchg
and
lods
inc
das
adc
mov
add
inc
cmp
in
push
xor
imul
jl
mov
call
mov
xor
test
xor
movsb
dec
mov
adc
xor
loop
xchg
popl
xchg
add
ljmp
push
jo
jbe
popf
bound
mov
je
inc
enter
pop
insb
lods
mov
push
lods
push
fwait
adc
sti
inc
jbe
push
arpl
mull
lods
inc
ljmp
jno
cli
int
loope
inc
outsl
std
cli
icebp
fs
adc
into
cmp
iret
pop
dec
sti
push
sub
cs
sub
adc
mov
jg
sti
bnd
xchg
pop
inc
pop
inc
pop
xchg
stos
mov
xchg
adc
mov
add
repz
cli
insb
dec
xchg
xchg
push
adc
and
dec
inc
fsubs
repnz
js,pt
rcrb
rcll
into
xchg
mov
and
push
aaa
jl
ret
sbb
sbb
sub
mov
lret
mov
sbb
test
imul
xchg
adc
inc
adc
sub
icebp
cs
outsl
insb
cmpl
nop
imul
into
shll
rep
sub
or
xor
movsb
imul
or
sub
push
jo
and
mov
bound
add
lock
add
xchg
dec
inc
add
fidivl
lds
iret
mov
mulb
jns
and
scas
dec
movsl
push
popf
mov
shrb
int3
outsb
mov
stos
test
or
dec
dec
xor
jp
fmuls
inc
test
adc
aam
cmp
sti
int3
jmp
das
sub
scas
test
or
lret
xchg
ds
add
cli
adcl
mov
xchg
shll
xlat
and
push
cmp
mov
lahf
mov
int3
pop
insl
adc
xor
pusha
test
jbe
movsb
roll
loope
lea
mov
dec
jo
ret
mov
mov
sbb
push
pop
mov
lret
dec
add
fldcw
mov
test
fidivl
sbb
pop
loopne
jb
push
mov
mov
cmpsl
rcr
pop
push
pushf
lea
push
stc
out
in
push
add
aas
mov
ljmp
pop
xchg
xchg
lea
fmull
fcomps
xchg
rorb
nop
sub
stos
xlat
sbb
jmp
sbb
cli
sbb
mov
icebp
or
xor
mov
mov
xor
mov
mov
test
xor
loope
cld
repnz
fs
lods
push
dec
stc
sub
bound
push
test
mov
sti
out
xchg
repz
ret
jmp
gs
mov
or
popf
push
mov
sahf
push
add
leave
cmp
mov
inc
outsl
or
outsl
pop
sub
or
push
scas
fcmovne
xchg
pop
sbb
jl
test
lret
xlat
jae
cs
xor
or
cwtl
mov
add
jnp
ljmp
cli
cli
push
lret
and
mov
insl
or
out
jns
and
fcmovu
inc
lods
in
xchg
xor
xchg
mov
dec
lret
mov
js
dec
into
bound
push
ss
push
pop
sub
push
roll
fstps
stos
scas
decl
leave
push
fucomp
and
ljmp
add
lods
adc
push
jge
insb
test
jns
stos
sub
fwait
sbb
cltd
adc
mull
test
push
jle
cmp
fstpt
lds
cmp
movsl
ljmp
sub
fbld
lahf
std
add
iret
pop
rolb
das
add
and
pop
das
xchg
jp
out
dec
sub
mov
inc
mov
adc
cmp
cmp
push
sub
cld
inc
imul
lahf
imul
imul
pop
neg
mov
cmpsl
or
inc
mov
jne
xor
stc
xchg
or
pop
lock
mov
inc
aad
sub
pop
xchg
sub
dec
cmpb
into
ss
mov
sub
mov
hlt
or
mov
mov
out
xchg
sub
rol
inc
xchg
popa
test
or
add
aam
xor
movsb
jl
fcompl
lods
sbb
rcrl
lea
sub
mov
in
add
popa
jl
mov
psllq
mov
pop
lret
dec
mov
in
pushf
fsubs
cmpsb
cli
xchg
fs
cs
fidivrs
sbb
mov
dec
pusha
xchg
roll
popf
push
inc
xchg
fwait
mov
push
lret
pop
mov
clc
jnp
xchg
xchg
leave
andl
dec
mov
lahf
int
mov
jno
call
inc
mov
mov
test
in
mov
add
pop
movsl
push
out
pop
and
pop
sbb
jb
adc
push
jo
inc
lock
sbbb
jae
xor
fwait
and
push
cmp
push
outsb
fcmovnbe
shl
insl
cmp
mov
and
and
mov
xchg
sbbb
fdivrl
js
add
sbb
sbb
pop
lahf
les
jmp
xchg
pop
cli
ds
push
xchg
jae
iret
inc
jge
xor
jg
jo
dec
and
leave
jmp
jg
cmp
std
imul
fs
or
pop
pop
cmp
rcrl
jnp
subb
push
ficoml
mov
ficompl
lods
mov
xchg
or
push
repz
mov
cld
lods
out
ffreep
rcl
jecxz
mov
pop
mov
jno
xchg
push
mov
mov
mov
das
or
das
or
mov
xchg
inc
pop
rcll
ljmp
addr16
jmp
add
sbb
cld
movsb
mov
sbb
adc
and
xor
cld
ret
fstps
loop
mov
test
lret
xchg
push
fstpl
mov
test
push
adc
lret
xlat
ljmp
and
or
mov
aaa
movsl
mov
inc
sbb
lret
fadds
scas
or
nop
push
xchg
push
outsl
repz
dec
fsubrs
mov
jg
pop
jns
xchg
lcall
jno
pop
dec
cmp
iret
mov
add
lds
aaa
sbb
gs
addl
pushf
les
mov
arpl
test
mov
xor
and
repz
dec
int3
xchg
int3
inc
or
push
jmp
jbe
push
and
add
dec
pop
dec
pop
lea
les
adc
add
xchg
inc
mov
jl
sahf
adc
and
aad
dec
popf
jne
stos
sbb
xchg
xchg
jp
loope
push
mov
xor
sbb
pop
dec
jp
and
clc
inc
imul
cli
jp
xchg
sub
xorl
mov
ds
dec
push
adc
clc
xchg
jg
fisttpl
cwtl
xchg
adc
inc
cs
in
mov
push
pop
fidivl
lret
icebp
data16
test
or
xor
cs
cmpsl
bound
leave
icebp
mov
push
xor
jne
and
xor
pop
pusha
cmpsb
and
js
filds
das
enter
mov
or
mov
repnz
sub
stc
insb
xor
rcl
scas
jle
pusha
in
and
pop
cltd
adcb
mov
and
dec
in
out
pop
mov
sub
xor
jle
ret
lret
lea
jp
js
jne
cmp
lods
lahf
dec
push
xchg
mov
movsl
inc
mov
jnp
jne
data16
push
fnstcw
add
inc
and
inc
push
dec
or
clc
push
cmp
movsl
xchg
pcmpgtw
mov
dec
xchg
inc
fwait
pop
jb
jg
sbb
les
out
sar
js
cs
and
mov
enter
mov
aaa
dec
mov
jne
pop
cmc
xor
fists
aad
fsubrl
fstpl
or
xchg
mov
popf
xor
mov
xor
pop
aam
fistl
xchg
pop
inc
pop
mov
and
sub
jbe
jle
aam
in
push
pop
mov
xor
lock
add
ljmp
lret
jl
cwtl
aad
jle
mov
add
xlat
xchg
push
icebp
ja
data16
cmp
dec
mov
jp
xor
loope
mov
and
jle
ds
out
mov
int
fsub
movsl
shlb
incb
fadds
fidivl
sbbb
xlat
dec
xchg
add
xchg
stos
imul
gs
add
in
sub
mov
icebp
mov
lea
dec
movsl
mov
inc
sub
jnp
fs
push
test
in
ret
pushl
aad
pop
add
xor
scas
je
mov
ljmp
in
or
xchg
mov
mov
sub
imul
int3
mov
xchg
xorl
pop
bound
and
ljmp
fisttpl
and
jbe
xor
jnp
add
in
push
fdivrl
xchg
int3
popf
cs
and
call
or
push
dec
loope
mov
xchg
mov
test
pop
pop
mov
mov
mov
mov
out
xchg
in
xlat
adc
xor
dec
xor
jae
push
push
cmc
testl
xchg
rcr
jl
xor
test
push
fimull
test
dec
pop
adc
cmp
int3
mov
dec
xor
sub
mov
mov
out
jo
mov
mov
out
fbstp
pop
loop
mov
xchg
ret
adc
rclb
sub
or
mov
push
ss
ret
cmpsl
jl
xchg
ffree
jp
jbe
adc
mov
fs
cmp
clc
leave
pop
and
push
test
lea
int3
xchg
inc
push
mov
pmulhuw
sbb
inc
sbb
lea
ret
subl
mov
imul
xchg
lret
xchg
out
mov
fadds
xchg
push
data16
adc
and
stc
dec
mov
jp
dec
xor
and
mov
dec
dec
inc
add
orb
adc
jo,pt
mov
ret
pop
jmp
leave
xchg
jo
xchg
mov
mov
sub
rcr
mov
sti
andl
inc
xchg
into
cmp
repz
mov
sahf
mov
stos
shl
rcrl
mov
pop
mov
pop
pushf
push
mov
aad
aas
int3
fnsave
insl
push
imul
sub
in
into
in
and
fistpll
sub
imul
mov
pop
insb
jno
mov
jecxz
mov
shrl
paddsb
add
mov
inc
scas
add
iret
adc
cmc
xchg
loope
cli
mov
mov
and
out
xor
leave
jecxz
mov
fcomip
aaa
push
jp
pop
iret
pop
push
jge
sub
cmp
lcall
stc
add
cmp
call
or
stos
loop
cmpsb
adc
push
into
push
inc
addl
and
xacquire
xchg
or
inc
shr
sub
lock
mov
sbb
add
popf
pop
out
and
or
cmpsb
sahf
lea
mov
aam
orl
xchg
sub
jnp
add
insb
or
pop
out
push
push
pop
mov
cwtl
cwtl
push
inc
cmp
push
mov
lret
sub
stos
dec
push
dec
sbb
push
insl
int
lret
pop
jae
mov
xchg
push
push
sbb
sti
dec
pushf
pop
inc
adc
pop
adc
push
add
mov
mov
jb
test
jmp
cmp
xchg
dec
mov
push
dec
sbb
sar
inc
fdivrl
repz
jmp
pop
add
mov
out
adc
das
jmp
or
dec
call
sbb
je
mov
jmp
sub
add
sbb
lret
addr16
or
xchg
sub
mul
jno
xchg
out
fcomps
inc
std
sbb
jne
and
in
or
push
fisubl
and
pop
or
clc
mov
fwait
out
rcl
add
or
iret
pop
jb
loopne
addl
jno
jl
fistpll
aad
mov
sub
jecxz
or
push
hlt
push
adc
ljmp
mov
ret
add
jge
xlat
cmp
sbb
mov
loopne
std
cmp
cld
clc
inc
xor
ss
mov
lods
out
add
cmp
cmp
in
lock
sbb
or
jno
xlat
mov
fmull
inc
cmc
sub
mov
add
je
loopne
xchg
jp
jp
mov
push
xor
xchg
jns
inc
std
adc
add
cmpsb
scas
cli
mov
sub
addr16
adc
rcrl
xor
jno
pop
xchg
lahf
aad
jl
add
popa
jl
pop
push
loop
lret
rcl
repz
lret
jbe
fimull
scas
xor
int3
jge
out
inc
pop
adc
lcall
mov
and
mov
xor
mov
negl
mov
add
and
div
fcomi
jb
hlt
sub
sbb
mov
test
call
pop
jbe
adcb
and
push
push
xchg
mov
pop
xor
jns
enter
push
arpl
call
arpl
sbb
and
sbb
gs
sti
rcrl
fcomps
cmpsl
adc
jl
pop
adc
sub
sbb
xchg
out
in
add
cs
sub
and
xor
pop
fildll
cmovns
inc
call
sbb
cmp
inc
push
jge
xchg
sbb
cmp
stc
daa
fs
add
out
int
hlt
jae
mov
jne
sbbl
adc
push
push
arpl
lcall
sub
and
int
and
jae
push
mov
imul
xchg
xchg
push
cmp
call
aaa
insb
xor
add
push
cmpsl
mov
sbb
bound
inc
xor
mov
in
xchg
int
fwait
into
mov
ja
imull
cmpsl
xorb
dec
in
outsb
xchg
cltd
cmp
std
push
mov
or
inc
addr16
xchg
out
xlat
push
and
xor
or
stc
xchg
mov
cmc
pusha
jbe
or
ja
mov
sub
jp
sbb
rcr
jp
sbb
jmp
jns
mov
fdivl
in
cmp
jp
scas
shrb
test
leave
jne
pop
jne
cltd
dec
out
arpl
dec
cli
aam
hlt
push
inc
jns
ret
push
fistpll
mov
mov
inc
ret
sbb
dec
gs
mov
mov
mov
test
int3
jmp
adc
and
add
or
dec
repnz
clc
fxch
or
dec
pop
lods
test
popf
cld
test
or
in
cmpsb
test
or
xor
mov
jecxz
adc
scas
dec
pop
and
mov
cs
pusha
shlb
inc
cmp
mov
xlat
insl
notb
scas
dec
pop
outsl
xor
int3
push
pop
bound
xchg
in
mov
jle
sub
push
sbb
jbe
push
ljmp
cmp
or
pusha
pop
sub
insl
xor
cmc
out
js
mov
jle
jp
test
inc
jno
pusha
or
sub
inc
jle
sbb
fdivrl
jne
pushf
push
call
lea
clc
out
enter
adc
lods
cli
pop
lods
cli
push
or
push
callw
sar
push
mov
or
mov
imul
or
ret
dec
aas
lahf
std
das
xchg
mov
fstpl
lods
lods
jns
in
iret
jae
popf
adc
imul
ret
int
pop
cmp
push
stos
cld
std
dec
sahf
enter
in
push
sti
mov
loop
or
in
mov
or
jns
mov
mov
push
or
jmp
mov
and
in
fsts
sarl
and
pop
scas
and
xor
lret
or
mov
inc
push
int
addb
stos
ror
and
mov
xor
mov
mov
xchg
dec
jne
stos
add
and
ret
or
xchg
pop
mov
jge
and
ffree
lock
in
xchg
dec
and
push
inc
add
mov
mov
pop
and
into
xchg
neg
cmc
pusha
jecxz
and
adc
mov
outsb
xor
adc
sbb
sub
popf
add
cltd
pop
bound
add
push
lcall
test
cld
jmp
lahf
xor
inc
jo
pop
add
lahf
mov
test
inc
cld
mov
and
sbb
outsl
cltd
les
xor
dec
push
inc
aaa
xchg
jb
jae
enter
fisttps
in
lahf
pusha
jge
fmull
inc
fprem
subl
xchg
and
push
mov
shll
hlt
dec
dec
shlb
imul
mov
shll
pop
cmpsl
inc
cmp
pop
jl
lods
jecxz
sbb
sbb
adc
ja
or
addr16
xlat
test
mov
or
int
cmpsb
adc
inc
ret
xchg
mov
and
cmpl
scas
dec
clc
cli
test
into
outsb
imul
sbb
sbb
adc
dec
push
pop
xor
pop
add
rcrb
sub
sbb
in
inc
sbb
std
cs
enter
outsl
fsubrl
dec
adc
push
and
mov
addr16
movsl
jbe
mov
push
push
add
inc
shlb
jl
push
or
xor
mov
bound
jbe
test
jp
dec
dec
loope
std
mov
shlb
cmpsb
lcall
mov
cli
aam
pop
inc
pop
mov
mov
or
loop
add
jb
lock
lock
xchg
push
stc
hlt
int3
arpl
inc
pop
and
movsl
pop
in
xchg
fldl
shrl
pop
mov
adc
leave
xorl
imul
cmpsb
xor
repnz
out
loope
push
in
insl
push
and
adc
pusha
ss
mov
sub
movb
mov
cmpsl
movsb
sub
in
jge
lock
in
clc
rclb
adc
mov
or
stos
fisubl
ja
or
mov
rcrb
sub
in
mov
arpl
dec
mov
dec
stos
push
sbb
cmp
call
popa
pop
mov
lcall
cltd
sub
fcomi
test
jmp
cmp
sbb
sub
or
cmp
dec
pusha
jbe
sarb
mul
stos
lea
lcall
cs
call
movsb
sub
loop
push
das
addr16
xor
mov
loopne
movsb
jo
mov
or
imul
loop
jno
fs
and
cmp
sub
repnz
sub
or
sahf
scas
add
mov
inc
sbb
jmp
jae
push
sbb
jae
cmc
xor
ds
cmp
nop
in
xchg
adc
mov
dec
inc
pop
mov
cmp
popf
jg
add
cmp
outsb
xor
dec
clc
mov
fcoms
mov
insb
inc
ret
ret
mov
iret
inc
out
imul
int
jle
int3
mov
jg
rcrb
addb
lcall
insb
icebp
shll
or
cltd
fsub
in
or
bound
push
xchg
mov
inc
sbb
aam
daa
hlt
pushf
jmp
add
jo
mov
jecxz
push
jecxz
inc
xlat
stc
xchg
jnp
inc
movsb
xchg
pop
cmovs
or
inc
or
push
and
ss
add
mov
mov
loopne
pop
and
push
sbb
repnz
std
add
lret
sbb
xlat
mov
xchg
les
push
sbb
flds
mov
dec
div
dec
test
add
adcl
xlat
xchg
roll
cld
ljmp
fsubl
loop
enter
push
dec
stc
pop
add
insl
dec
ja
xor
rcrl
loopne
js
out
cli
inc
pop
jecxz
rclb
lods
mov
enter
sub
cmp
jmp
ret
fsubs
scas
test
imul
sti
movsl
jg
add
jg
rolb
and
xor
mulb
push
sahf
imull
shrl
adc
mov
xlat
inc
sbb
iret
pop
mov
sahf
add
adc
popf
fadd
fwait
and
insl
jbe
pop
cmpsl
sub
ja
pop
inc
lock
cwtl
or
mov
cmp
xchg
dec
push
push
repz
or
outsb
jae
fsubl
or
insl
xchg
ret
jno
or
push
insl
cmp
mov
mov
cmp
lret
mov
or
cmpsl
stos
sbbl
add
cmp
mov
pop
shll
aam
mov
scas
sbb
lods
ret
andb
daa
cmpsb
mov
stos
mov
scas
jmp
cmp
and
push
sbb
cld
out
clc
insl
or
mov
sub
push
iret
mov
sbb
xor
pop
insl
add
jg
cmp
lock
ficoml
cwtl
mov
repnz
loopne
mov
push
out
aam
mov
push
fdivs
cmpsl
or
mov
sub
mov
add
inc
mov
into
xor
dec
aam
lcall
mov
cli
pop
add
jp
rcl
mov
or
cmpsb
mov
mov
stc
cmpl
pop
inc
pop
push
sbb
popa
lret
popf
roll
mov
or
mov
hlt
inc
aad
push
inc
aad
shll
icebp
push
mov
cmpl
clc
ja
std
test
fisubs
xchg
dec
dec
xlat
test
adc
inc
shlb
imul
mov
pop
jb
inc
push
pop
aam
mov
fcoml
mov
cltd
pop
adc
test
cmpsl
shl
lahf
lock
pusha
xor
sbb
outsl
xor
ljmp
cmpsl
pop
lds
std
adc
adc
sbb
sub
lea
les
and
jbe
loopne
cld
imul
mov
pop
mov
movsl
mov
push
adc
setno
mov
cld
cmp
fwait
cmp
js
pop
je
sbb
xor
popl
pop
fs
push
aas
dec
adc
pusha
sbb
test
ret
repnz
scas
or
jmp
adc
cmpsl
push
mov
je
jle
in
orb
mov
iret
inc
inc
inc
and
cmp
fld
daa
push
gs
or
push
into
push
dec
jae
iret
shlb
in
decb
xchg
cs
mull
xchg
and
in
inc
enter
mov
mov
push
jmp
adc
sbb
lock
cmpb
or
popf
test
loopne
leave
gs
in
jl
xchg
mov
mov
pop
mov
push
ja
cmp
ret
es
mov
mov
jmp
addr16
fisubrs
fists
lcall
xchg
lret
xchg
jle
ljmp
and
mov
sahf
scas
cmp
mov
pushf
sbb
rolb
lods
xor
add
and
push
jle
mov
aaa
xchg
ja
push
mov
lods
test
out
mov
decl
jle
sbb
js
fcomi
cmp
sub
ja
cltd
fs
xchg
ret
arpl
or
mov
push
cmp
inc
icebp
dec
insb
test
in
gs
mov
cmc
pxor
or
mov
nop
xchg
loop
jb
fs
cmp
adc
sarl
mov
aam
dec
out
and
data16
fdivrl
sub
jmp
push
jp
pop
inc
les
xchg
mov
test
jb
pop
in
ljmp
adc
or
xchg
fdiv
xor
inc
scas
inc
loopne
or
outsb
movsb
and
cltd
movsl
mov
xor
fpatan
andb
add
popf
repnz
cld
sbb
cmpb
mov
call
mov
xchg
cltd
jge
cli
mov
push
mov
test
jbe
nop
xchg
repz
mov
pushf
fdivrl
movsb
cmpsb
push
push
pop
cmp
sti
sub
inc
jle
leave
pop
push
inc
std
andl
daa
decl
fcoms
decl
jl
add
mov
fwait
incl
addr16
xchg
aaa
mov
nop
sbb
loopne
shlb
xchg
dec
or
test
insb
in
fsubrl
test
lock
jo
leave
pop
mov
jno
sub
push
mov
dec
clc
cmpb
inc
inc
mov
ret
movaps
sbb
and
jb
sbb
inc
inc
adcl
roll
arpl
sbb
int3
sbb
insb
add
popf
xor
bound
mov
inc
rcr
out
and
jp
xchg
add
dec
mov
and
xchg
sahf
repz
sbbb
in
in
in
inc
leave
push
mov
insb
popf
jnp
loop
ljmp
out
icebp
fistpll
or
ds
mov
ficoms
aam
jmp
imul
sub
add
mov
adc
cltd
into
inc
xchg
pop
add
cmp
xor
roll
add
mov
and
xchg
or
lret
xchg
pop
sahf
dec
xchg
test
clc
sub
stos
sbb
inc
pop
mov
repnz
push
adc
imul
mov
fidivrl
outsl
out
jno
cmp
mov
ret
sub
cs
pushf
mov
jmp
sub
adc
dec
lret
jns
subl
pop
mov
fsts
loope
enter
jbe
scas
arpl
dec
push
test
mov
jg
or
enter
and
mulb
mov
jmp
inc
dec
mov
mov
mov
xlat
jbe
xchg
loopne
in
xchg
movsb
jae
cmp
mov
sub
push
cwtl
push
sbb
add
mov
sbb
mov
and
cmp
push
aam
aaa
repnz
sbb
lret
push
mov
ja
ja
dec
ret
ss
clc
pop
adc
inc
cmp
xchg
jb
xchg
ret
sub
or
aas
fdivrl
test
hlt
mov
mov
cltd
cmp
jg
and
cmp
jmp
push
pop
mov
cli
cmp
push
push
je
in
shrl
inc
ds
xchg
mov
mov
les
mov
jl
mov
dec
pop
dec
test
aaa
iret
jmp
sahf
and
jge
mov
mov
xor
inc
adc
or
repz
adc
push
dec
mov
mov
mov
mov
xor
push
sbb
push
cmp
jmp
pop
aas
or
out
xor
decl
mov
jmp
repnz
mov
fcoml
add
and
mov
push
fdivrs
sub
stos
sub
pop
loope
and
loope
mov
adc
xlat
sub
adc
push
push
push
mov
pop
and
in
inc
fiadds
add
stos
or
xchg
fcoms
inc
add
pop
aad
lods
xor
fucomp
jae
or
cmp
and
lcall
push
pop
jnp
mov
xchg
or
push
stos
xchg
inc
ds
push
daa
icebp
stos
shr
jge
inc
adc
out
jle
xchg
pop
cmp
push
dec
mov
jg
aam
scas
mov
sbb
jo
mov
fldcw
or
das
out
xor
mov
jb
adc
adcl
test
jmp
nop
and
pop
dec
jnp
lods
and
data16
imul
cs
mov
fs
mov
jmp
and
movb
cmc
mov
lahf
cmp
inc
je
scas
scas
and
mull
pop
pop
jecxz
cmp
cmp
testl
jb
ficompl
sbb
push
scas
push
mov
lock
es
das
int3
movsb
pop
pushf
cmp
mov
and
adcl
cmp
aaa
in
subb
lods
sub
dec
subl
shl
addr16
data16
pop
in
lret
xor
lret
cmpsb
xor
dec
popf
outsb
mov
push
sub
add
pop
and
lods
cmp
pop
lret
xchg
push
mov
lds
push
inc
jmp
cwtl
das
popf
addl
repnz
pop
aas
and
xlat
xchg
xor
sbb
add
gs
aaa
sbb
inc
pop
mov
adc
cli
cs
mov
sahf
or
cs
mov
shll
sub
cmc
sbb
jmp
jb
dec
sbbb
adcb
shrl
loopne
jle
pop
inc
mov
dec
call
fdivrs
adc
or
push
loope
nop
jns
ret
push
jb
inc
dec
mov
pop
pop
mov
mov
pop
jne
mov
in
pop
push
and
cmp
sub
add
mov
data16
or
add
cmp
jg
xchg
std
outsl
xchg
jb
mov
add
add
negb
dec
and
aam
sub
std
dec
push
inc
ss
mov
test
data16
and
es
xor
into
icebp
jb
lods
mov
data16
xchg
movsb
sti
lahf
dec
test
sbb
sub
push
pusha
mov
xchg
jge
mov
xchg
inc
or
adc
mov
daa
rolb
jae
push
fwait
xor
jmp
in
xor
js
jb
xchg
xchg
sub
mov
sbb
mov
pop
notb
stc
in
mov
inc
jno
push
adc
pop
cwtl
hlt
lcall
scas
aaa
cmp
mov
loope
cmp
lret
ds
das
jns
outsl
add
in
pop
cmpsl
insb
outsb
xchg
daa
sahf
inc
mov
adcl
in
xchg
xor
pop
sub
call
push
or
lret
dec
mov
dec
pop
sub
push
pusha
dec
divl
dec
mov
pop
add
and
xchg
pop
pop
adc
jmp
imul
insl
ds
ljmp
lahf
int
nop
loope
sub
int3
lock
stos
push
loop
inc
iret
mov
push
fiadds
push
cmp
mov
ja
jle
add
mov
or
push
pop
jno
lcall
cmp
out
add
jo
pop
sub
sub
sub
mov
mov
xor
adc
mov
sbb
ret
inc
xor
pop
cli
dec
xchg
test
repnz
push
mov
pop
mov
xorl
lret
stos
das
mov
nop
into
leave
pusha
enter
dec
std
sub
push
popf
mov
mov
hlt
and
adc
cmp
sub
rcll
and
ficomps
stos
inc
mov
enter
dec
mov
xchg
mov
rclb
jge
stos
xchg
or
xor
pusha
push
lahf
daa
jg
jne
jmp
popf
incl
jl
dec
xchg
add
and
pusha
xchg
les
pop
lods
clc
push
pop
aaa
xchg
movsl
push
aam
into
jl
out
lds
inc
jb
int3
fimull
xchg
enter
jg
or
lods
lods
arpl
xor
inc
adc
loope
loopne
mov
insb
xchg
cmp
in
push
repnz
aaa
test
mov
or
pop
mov
xchg
ret
js
xor
ret
jne
sbb
push
loope
loope
aad
insb
mov
insl
movsb
mov
std
adc
loopne
xchg
jne
mov
cwtl
shr
dec
pop
repz
xor
jecxz
add
bound
and
and
pop
mov
push
mov
loop
div
mov
xor
mov
lds
rorb
sbb
add
jnp
jmp
push
lahf
or
cmp
shld
mov
repnz
movsb
stos
fwait
mov
fisttps
adc
lods
daa
inc
or
call
inc
pop
ds
call
cmp
add
cwtl
push
inc
inc
cmpsl
xchg
and
fcoml
pop
ret
arpl
jns
push
cmpsb
sub
arpl
ret
aas
mov
loopne
ljmp
and
loope
test
scas
pop
aad
int3
addl
lahf
ja
lret
or
lret
loopne
dec
cmp
sub
pop
test
arpl
push
cltd
mov
call
loope
cltd
mov
idivl
movsl
mov
xchg
sarb
ficoml
or
stos
popa
cmp
fists
stc
popf
cmp
loop
push
repnz
out
xor
add
fwait
xor
imul
sbb
psubsw
cli
pop
lahf
lahf
jno
push
lcall
nop
mov
out
repnz
lds
jmp
movl
sbb
in
mov
pop
in
jns
xchg
stc
movsl
mov
adcl
cltd
decl
pop
xchg
addr16
ret
xor
lods
push
pop
push
repnz
xlat
ret
sbb
pop
loop
cld
test
pop
out
cmp
xchg
sub
jo
loop
dec
cltd
cmp
cld
inc
loopne
dec
leave
sub
pop
popf
popl
xor
or
mov
adc
pop
adc
cmpsb
jno
arpl
cmp
push
xor
cwtl
gs
cmc
int3
cmp
or
xchg
in
xlat
cmp
fildll
lods
mov
in
ret
pop
push
mov
pop
int
and
fs
dec
lods
lea
push
xor
dec
xchg
insb
mov
in
xchg
xor
int3
adc
scas
jle
pop
cwtl
test
mov
xor
repz
pop
test
push
fs
lahf
movsl
push
push
stos
cmp
fwait
adc
insl
xor
or
jmp
rorb
cmp
pop
nop
test
fcmovnbe
ss
mov
push
sub
mov
jbe
dec
lods
das
int3
or
ja
cmpsb
mov
leave
lcall
jp
cmp
sbb
adcb
icebp
je
cmc
mul
mov
in
mov
lea
inc
xsaves
out
mov
sub
andb
ljmp
cld
imull
or
xor
mov
ss
daa
sub
sti
sbb
fsubl
inc
iret
lods
test
mov
lods
xor
pop
fildl
add
xlat
jg
loopne
stos
lret
mov
mov
sbb
test
scas
arpl
pop
cmp
mov
mov
fisttpll
arpl
jns
into
push
add
inc
test
xor
mov
mov
adc
pop
fistl
ds
sti
das
or
mov
jmp
inc
mov
rolb
lea
jg
xchg
xchg
mov
sbb
into
and
and
sbb
xor
in
xor
scas
hlt
std
insb
test
push
aas
sahf
cmp
fistpl
addl
lods
adc
fnstenv
mov
xchg
data16
movsl
mov
pop
cmp
sahf
push
xchg
dec
dec
pop
roll
push
sbb
int3
test
xor
pusha
cmp
sti
lods
push
xchg
stc
push
js
icebp
std
adc
inc
adc
ficompl
xchg
jo
in
enter
jg
addb
bound
lret
pop
into
jbe
mov
enter
jmp
mov
adc
pusha
mov
in
gs
fildll
pusha
imul
mov
mov
or
pop
xchg
pop
inc
dec
sub
fildl
stos
ja
mov
sub
pop
pop
movsl
add
stos
sbb
pop
lds
iret
fildl
sub
sarl
xchg
mov
xor
and
pop
push
pop
sbb
scas
outsb
pop
mov
jns
mov
roll
aad
or
inc
fsubrl
in
out
mov
mov
jecxz
mov
daa
sbb
and
fwait
dec
mov
sub
mov
cmp
jno
sbb
inc
pop
lods
mov
jg
ss
or
push
or
mov
fmul
push
clc
xchg
pusha
lods
mov
mov
arpl
aam
out
sbb
pop
imul
add
push
sub
push
cmp
mov
fcmovne
in
stos
jg
cmpsl
push
ficomps
addr16
addr16
fiadds
shr
jp
adcb
andb
addr16
mov
inc
pop
or
push
push
push
dec
jb
lods
enter
xor
pop
scas
dec
lcall
mov
fwait
outsb
pop
cltd
pop
xor
hlt
mov
scas
mov
pop
repz
out
adc
imul
sbb
dec
dec
sub
jbe
xor
add
pop
ds
mov
into
jge
sbb
filds
sarl
stc
cli
pushw
mov
notb
aam
mov
mov
push
pop
orl
fstpl
push
mov
inc
pop
mov
loop
sti
add
in
push
lret
rol
and
std
dec
movsl
or
out
fsubs
lods
test
mov
cmc
mov
cmp
lea
jle
enter
fwait
jl
mov
push
lcall
or
xchg
scas
mov
stos
cld
push
sarb
lock
ret
out
or
mov
mov
pop
sarb
loop,pt
vpcmpeqb
mov
xor
fnstenv
addl
push
dec
lds
add
pushf
sub
sbb
enter
loopne
cmp
notb
jge
popf
mov
push
rcrb
lock
arpl
xchg
pusha
lock
cmp
mov
incb
and
enter
xor
mov
jl
stos
mov
mov
pushf
leave
sbbl
and
std
jne
rol
ret
test
sarl
and
inc
jge
std
pop
sub
mov
xchg
scas
pusha
mov
pop
pop
fimull
add
movsl
pop
adc
movsl
or
out
sub
add
subb
fcomps
setns
clc
lds
xchg
out
adc
sbb
mov
sbb
inc
nop
sti
hlt
pusha
sub
inc
xchg
in
inc
movsl
les
bound
mov
add
sahf
cmpsb
cmc
pop
out
loope
arpl
or
xor
arpl
cmp
mov
lds
call
ja
mov
int3
sarb
mov
pushf
dec
dec
ja
inc
or
daa
mov
mov
jg
out
dec
mov
jo
xor
pop
push
int3
mov
faddl
jbe
mov
nop
dec
addr16
push
enter
fstps
stos
pop
je
xchg
outsl
or
dec
arpl
test
test
mov
adc
rcrb
jmp
repnz
int3
xor
jbe
cmp
scas
mov
mov
ss
xor
push
lds
and
clc
xchg
lret
cmp
mov
mov
movsb
dec
jo
insl
movsb
lods
mov
adc
jae
jae
jl
mov
aad
or
cmpxchg
mull
loopne
mov
call
scas
aam
cwtl
pop
adcl
insl
in
adc
fisttpl
mov
loopne
push
movsl
xchg
pop
gs
add
adc
mov
iret
cmp
clc
lret
push
sbbl
inc
adc
mov
xchg
and
ss
xchg
test
fwait
adc
push
add
fsts
add
shll
ret
add
ficompl
mov
mov
sbb
enter
fdivl
faddl
push
pop
ljmp
ss
negl
jb
insl
mov
xor
bound
cli
mov
jnp
cwtl
mov
or
sbb
mov
xchg
mov
lea
push
mov
mov
jmp
fisubl
aad
adc
jge
ds
inc
sub
xchg
aad
adc
sarb
and
xrelease
hlt
push
push
notb
jmp
sarl
roll
nop
mov
sbb
popa
add
cmp
adc
pop
ljmp
outsb
mov
push
jne
sbb
push
leave
rep
mov
add
clc
ljmp
lret
add
xor
push
and
push
bound
call
das
pop
clc
xchg
jp
out
in
push
jecxz
and
adc
stos
in
adc
jb
cmc
adc
ljmp
jns
and
push
stos
xor
dec
and
lods
mov
dec
or
mov
ficompl
pop
jle
iret
jo
xchg
inc
movsl
imul
aad
fcomps
inc
cmp
push
sbb
mov
pop
mov
popf
test
mov
xor
enter
lcall
push
or
xchg
mov
stos
adc
lret
xchg
arpl
inc
jecxz
xchg
cmpsl
sub
pop
vpunpckhwd
adc
xchg
loope
dec
scas
sub
clc
arpl
rcr
cmp
fsubs
mov
pop
test
xchg
lret
addr16
sarl
mov
dec
cmp
mov
sbb
and
pop
push
inc
push
jecxz
xchg
cltd
adc
test
imul
or
xor
ret
test
popf
push
xchg
mov
lret
inc
aam
int
div
les
pop
fcoml
adcl
inc
movsl
or
inc
inc
icebp
xor
xor
sub
rorb
cmp
out
and
or
mov
imul
fisttpll
fisubl
add
jae
call
in
jecxz
mov
sbb
mov
imul
xor
testl
xchg
insl
lcall
pop
lcall
loopne
sub
dec
cmpsl
sbbl
sub
gs
push
inc
out
xchg
rorl
mov
sbb
out
insb
test
fsubs
push
push
imull
sahf
inc
ds
push
push
imul
xor
pop
insb
es
jge
xchg
inc
mov
mov
lret
mov
dec
xchg
lods
sub
add
lret
push
jp
or
movsl
outsb
xlat
sub
adc
daa
mov
adc
cmp
std
daa
cmp
xchg
inc
lcall
lret
mov
push
fstp
mov
into
sub
and
aam
adc
in
inc
fwait
sbb
cmp
imul
and
or
outsb
ret
mov
push
gs
jmp
fcompl
sub
jp
lret
je
movl
xor
mov
mov
or
adcb
inc
push
icebp
enter
insb
sahf
xchg
jo
lock
loop
das
xchg
push
dec
jp
inc
mov
arpl
stc
dec
and
fisttps
je
and
repz
ljmp
iret
xchg
pop
xlat
mov
inc
fwait
xchg
jecxz
js
lret
insb
nop
push
pop
lahf
mov
and
aam
lods
and
cmp
xchg
cli
push
inc
cmpsb
hlt
stos
lret
push
and
jbe
push
insl
sbb
mov
test
pop
cltd
aas
lds
dec
ja
cmpsb
adc
and
push
fidivrl
adc
sbb
pop
ss
mov
mov
sbb
and
pop
mov
ret
test
xchg
pusha
cmpsb
adcb
lods
pop
jnp
loopne
call
mov
ja
xor
fisttpll
pusha
sub
pop
or
pop
sarb
and
gs
fstps
cmp
out
or
push
inc
sahf
fldt
int3
cwtl
pusha
xchg
jp
movsl
add
cs
fnstsw
add
lcall
fildl
repnz
sbb
aad
xchg
push
int
hlt
pop
jecxz
cmc
cltd
mov
cltd
sbb
je
outsl
ja
add
rcrl
add
push
scas
sbb
cld
jb
mov
pusha
cmp
xchg
cmp
sbb
stos
xor
fld
xchg
jo
xor
rcrb
xchg
jl
xchg
les
cli
cmp
scas
mov
push
xchg
test
addr16
xlat
in
push
out
rorb
mov
mov
jb
aas
out
mov
mov
inc
aad
fsubr
and
cmpsl
mov
mov
aas
add
arpl
mov
add
adc
ds
test
fnstenv
xor
xor
mov
test
jl
into
jl
ss
jns
rorb
add
xchg
inc
repnz
xorb
test
stos
frstpm(287
xchg
cmp
sbb
aas
into
sahf
jle
call
rcrb
dec
jo
inc
movsb
hlt
push
pop
clc
shrb
xor
cmovs
and
clc
inc
mov
aam
jne
subb
enter
gs
jge
ja
mov
inc
mov
mov
mov
mov
xchg
imul
and
pop
xchg
inc
lahf
lods
repnz
lret
gs
imul
or
mov
arpl
popf
push
rcll
push
pushf
xchg
jbe
and
ret
sti
repnz
pop
nop
aad
rol
sbbl
xchg
in
mov
outsb
inc
in
imul
push
and
xchg
mov
jne
in
adc
js
lcall
mov
pop
pop
sub
ds
in
push
pop
in
shll
sub
and
jno
xchg
jno
fisttpll
negb
xchg
dec
fxch
aaa
in
dec
leave
mov
nop
ror
adc
mov
cmp
pop
pusha
lods
xor
call
jg
mov
inc
jne
dec
xorb
subb
std
pop
or
or
add
push
loope
lcall
bound
xchg
cmc
shl
scas
lea
fadd
rcll
mov
adc
ja
cmp
adc
mov
cmp
insl
or
in
cli
mov
sbb
jne
or
xchg
clc
xor
or
mov
ficompl
decb
xor
or
sub
test
nop
or
sbb
xorl
testl
mov
jno
and
push
sbb
mov
addr16
or
jl
inc
inc
test
popf
jnp
movl
mov
pop
inc
dec
or
mov
addr16
fstpt
ret
ja
sbb
loop
jecxz
push
mov
aam
inc
or
adc
xor
jns
jp
add
std
stc
jne
jno
sub
and
mov
mov
ja
enter
js
into
sub
add
add
jo
lea
sahf
and
rclb
sub
rorl
movsl
or
hlt
xor
in
mov
sarb
fdivr
jne
das
pop
es
xchg
mov
out
push
pushf
stc
fisttpl
inc
jo
jne
adc
leave
pop
shr
sbb
or
lret
xor
dec
bound
jae
xchg
sbb
mov
aaa
jb
sbb
mov
xchg
insl
lret
fwait
inc
std
or
and
inc
jbe
jp
xchg
cld
mov
fidivs
cmpb
cmpsl
pop
jge
popa
cltd
xchg
cmc
sub
outsb
int3
jmp
mov
adc
arpl
sub
test
rorl
fistl
xlat
into
lea
sub
sub
repnz
stc
add
nop
lahf
aam
and
xchg
cmpsb
sahf
sbb
pop
add
mov
cmp
cli
aam
sub
sub
jle
movsb
sbb
dec
adc
loopne
and
sbb
cld
adc
sbb
mov
aaa
jg
lods
pop
xchg
mov
inc
pop
pop
adc
pop
cmp
lret
test
push
ds
aad
fisubl
cmpsb
inc
inc
sbb
and
aaa
xchg
push
cli
cli
inc
xchg
xor
xchg
gs
adc
mov
add
movl
sub
xchg
decb
and
or
or
jecxz
dec
stc
mov
inc
and
repz
das
test
add
xor
dec
enter
xchg
mov
leave
fldt
movsl
pop
and
pop
sub
das
mov
jmp
out
shrl
js
mov
pop
lret
arpl
jno
fsubrp
lret
add
aaa
orl
les
repz
int3
push
ret
xor
iret
es
or
fs
ret
xorl
sbb
xchg
or
lret
rcrl
aaa
pushf
xchg
icebp
int3
nop
pushf
jmp
test
inc
andl
sub
movb
xchg
test
popf
inc
push
shrl
cmpsl
fildll
mov
pusha
out
loopne
ljmp
xor
add
inc
sub
xchg
xchg
sbbl
dec
das
repnz
pop
hlt
sbb
pushf
push
cs
cli
jmp
pop
sub
out
or
enter
loopne
mov
add
popa
mov
sti
xchg
ss
test
popa
test
ret
push
and
das
and
mov
jl
cmp
mov
fbstp
fstps
inc
std
and
mov
add
xchg
xorb
or
lods
addr16
fdivrs
movsb
scas
inc
ret
push
xchg
jl
and
scas
push
and
popa
lea
imul
push
pandn
adc
lds
cmp
sar
out
shll
fwait
repz
cltd
sub
pop
jle
push
outsb
ss
inc
cmpsl
jae
loopne
aam
fldl
inc
add
pop
aas
dec
sub
mov
cmp
jp
jnp
add
insb
add
stos
scas
arpl
or
movsl
movsl
dec
dec
in
mov
outsb
push
stc
and
inc
je
mov
ret
das
sub
out
mov
gs
std
dec
pop
loope
fwait
xchg
jnp
ljmp
jnp
adc
pop
pop
enter
test
stos
mov
rclb
mov
out
js
mov
sub
add
iret
jge
mov
xor
out
fsubl
xor
sbb
cmp
stc
and
leave
push
stos
pop
int3
orb
jge
push
test
push
into
sub
fwait
jecxz
fcmovbe
jns
clc
add
stos
pop
xchg
pusha
lock
lock
pop
push
add
mov
mov
leave
outsb
inc
scas
iret
xchg
cmp
in
sub
push
loopne
add
repz
sub
xchg
inc
add
lahf
adc
or
cmc
arpl
popa
jo
sub
pop
xor
sahf
adc
sub
and
jmp
imul
jmp
mov
in
stos
lock
flds
sarb
fwait
rcrb
sbb
mov
aas
in
mov
mov
test
push
fsubs
pop
mov
add
and
push
loop
add
sub
int3
outsb
and
add
jnp
cmp
ljmp
adc
mov
popa
and
ss
sbb
stc
xor
pop
mov
in
pop
dec
imul
hlt
sub
popa
imul
repnz
lret
cmp
xorps
imul
inc
cltd
enter
add
pop
or
inc
xchg
jmp
sbbb
push
mov
or
popf
ss
xlat
mov
xchg
test
xchg
in
int
add
xor
mov
daa
mov
and
out
out
dec
sbb
sbb
mov
xchg
jns
ljmp
outsb
stos
adc
fwait
fs
sbb
aas
icebp
or
shll
lds
stos
icebp
ficompl
xchg
cld
iret
les
pop
mov
and
push
jno
mov
rorl
or
imul
inc
fsubs
in
add
add
adc
push
push
rcr
push
out
adc
mov
stc
push
fwait
xor
js
cmp
cmp
inc
fdivrl
jno
subb
pop
adc
and
aaa
pop
mov
xor
cmpsb
lret
movsl
lahf
pop
xor
adc
pop
pop
cmp
add
pushf
pop
xchg
dec
xchg
idivb
jae
xlat
in
dec
lods
mov
out
push
iret
and
out
shlb
cmp
add
add
jg
cmp
xor
pop
notl
xchg
out
scas
mov
repnz
hlt
mov
pop
pop
or
lret
clc
xchg
fiadds
in
jp
lock
lahf
dec
rcrb
pop
xchg
std
popa
push
ret
jne
popf
mov
int3
xlat
jb
lahf
rol
add
mov
scas
movb
scas
insb
xchg
push
fdiv
rol
dec
push
fdivrs
dec
xor
shll
cs
in
jg
and
test
sar
push
sbb
cmpl
or
sub
std
adc
inc
lock
push
idivl
in
push
sbb
push
inc
fsubrl
test
jg
cld
mov
xchg
ss
or
xchg
sahf
cmp
cwtl
pop
js
sub
or
cmp
pop
push
cmp
add
loopne
ds
jnp
pop
idiv
push
and
pop
xor
in
nop
mov
mov
out
cli
fildl
push
outsb
sub
xchg
pop
dec
in
decb
shl
cwtl
out
pop
subb
push
push
inc
sbb
js
pop
mov
jge
adc
and
mov
dec
insb
les
xchg
fsts
and
and
push
pop
sbb
jle
and
mov
pop
and
dec
aam
adc
arpl
jecxz
ret
fstpt
lea
push
into
cmp
das
addr16
in
mov
lcall
call
jnp
jp
adcl
mov
stos
mov
xchg
pop
cwtl
adc
mov
xchg
ja
push
push
pop
repz
sti
xlat
mov
je
mov
iret
movsl
xchg
xor
addr16
dec
inc
mov
jnp
test
mov
sbb
add
mov
fists
ret
mov
mov
adc
add
outsl
out
cwtl
aaa
ds
push
fisttps
popf
movsb
add
sbb
and
js
addps
pop
sbb
out
repz
pop
lods
fsubrl
dec
mov
cmp
pop
adc
fnstcw
cmp
jne
outsb
repnz
mov
enter
lret
dec
icebp
xor
pop
mov
xlat
mov
rcrb
cmc
lret
clc
neg
mov
mov
into
push
xchg
push
hlt
stos
mov
inc
es
fisttps
sub
pop
pop
mov
cmp
or
inc
mov
push
ret
push
lds
movsb
jp
rol
push
in
cs
nop
iret
mov
ret
jns
repnz
mov
es
popa
dec
seta
icebp
popa
cmp
mulb
andl
sub
insb
int3
push
dec
call
push
adc
scas
jo
jmp
sbb
fstpt
sbb
sbb
outsb
jmp
cmp
loop
outsb
push
in
in
nop
shll
dec
cmp
or
fistl
inc
xchg
pop
out
pop
xchg
jle
into
test
inc
pop
push
mov
stos
pop
xor
mov
mov
sbb
adc
lock
pop
dec
adc
repnz
in
addr16
repnz
mov
sti
pop
mov
sub
mov
fmul
dec
jne
adcl
adcl
sub
sub
ret
xor
sar
test
or
jnp
dec
vmulsd
lahf
ficoml
dec
loope
cli
inc
rorl
loop
fucomp
jbe
sahf
push
mov
cmp
push
imul
and
in
mov
hlt
pop
fs
inc
enter
movsl
dec
adc
cmp
xor
pop
aad
scas
dec
ret
ja
sbb
push
sbb
cwtl
push
imul
ficoms
lcall
cli
repz
and
rcr
daa
and
or
or
lret
lcall
xlat
popf
jecxz
xchg
lea
scas
xchg
push
ss
xor
int3
dec
leave
ss
push
cmpsl
mov
fnstcw
add
push
sub
mov
ljmp
ror
rcll
lea
subb
and
add
dec
test
enter
ja
insb
lods
test
in
sti
pop
mov
mov
mov
clc
outsb
mov
dec
scas
sub
and
xor
mov
push
icebp
jg
and
cmp
or
xchg
shl
repz
ror
jns
jmp
cmp
test
jno
push
insb
insb
lcall
dec
push
adc
jle
mov
out
mov
inc
jnp
orl
mov
mov
arpl
cmp
push
out
ljmp
inc
and
cmp
fucomp
sahf
ret
jae
int3
mov
sbb
rclb
jg
int3
adc
pop
mov
cmpsb
arpl
sbb
test
aas
inc
jnp
icebp
orl
out
and
insb
dec
daa
insb
scas
and
jecxz
fwait
or
mov
push
push
test
xchg
sub
sarl
sarb
pop
jo
out
dec
loopne
imul
clc
jecxz
ret
mov
jecxz
and
jg
shlb
fists
enter
pushf
in
sbb
mov
jno
repz
adc
stos
add
push
cmp
rolb
loopne
add
loope
fwait
and
sbb
dec
or
mov
push
jecxz
imull
jge
pop
in
sub
inc
cltd
ljmp
rcrb
adc
or
or
fadd
or
mov
sbb
or
stc
push
dec
push
fwait
sub
insb
add
and
std
add
leave
mov
test
jge
fisttpl
loopew
cmp
repz
les
xor
pop
cmp
fmuls
cld
jno
adc
xchg
or
addb
jmp
loop
mov
xchg
xchg
insl
mov
aam
inc
and
xor
add
lret
mov
fadds
movsb
ret
outsb
inc
jbe
mov
bound
push
sarl
or
fs
mov
sar
mov
xor
dec
scas
xchg
int3
js
sub
xor
fstp
push
and
movsl
int
lock
push
aad
dec
mov
or
je
sub
es
pop
sbb
repz
push
testl
mov
shlb
fst
inc
xor
add
cmpsb
cmp
and
sbb
aad
mov
inc
mov
pop
push
jno
stos
test
cwtl
mov
push
iret
mov
jns
or
inc
push
pop
and
mov
pushf
push
fcompl
hlt
fcmovnu
adc
imul
sbb
sbb
jg
mov
popa
insb
mov
push
das
jbe
and
movhps
outsb
cld
cmp
mov
insl
and
sti
pop
sub
mov
lods
and
gs
std
cmp
jo
scas
repnz
mov
push
imul
xchg
mov
fdivrl
jl
mov
or
inc
or
sub
and
cmp
add
or
ret
outsl
xchg
shll
imul
sub
test
nop
add
xchg
cltd
push
ret
dec
jmp
fildll
test
pop
add
push
insl
mov
mov
sub
push
rorl
and
xchg
imul
test
leave
sub
into
ja
cwtl
cmp
cmp
push
mov
cmp
pop
call
notb
cmp
lock
aas
mov
in
adc
scas
daa
push
fmuls
int3
std
repz
dec
xchg
cmp
cmp
sbb
jle
es
dec
int
mov
mov
mov
fcompl
in
mul
xlat
stos
sub
aas
xchg
inc
ljmp
mov
mov
in
out
push
dec
lds
in
inc
iret
sub
in
adc
fnsave
mov
xor
cmpsb
mov
cmpsb
outsb
pop
dec
loopne
pop
lods
and
dec
mov
in
dec
add
imul
adc
dec
sbb
mov
sti
sbb
push
mov
shll
mov
sbb
xchg
mov
scas
scas
sbb
sub
pop
inc
fldl
inc
jg
add
iret
inc
stc
ljmp
dec
dec
popf
arpl
inc
xchg
fs
mov
jne
xchg
arpl
outsl
loop
ret
loopne
sahf
icebp
mov
call
outsb
xchg
jne
incb
or
int3
dec
push
jb
sbbl
clc
out
add
loop
lcall
sbb
out
sub
xchg
sti
bswap
cs
or
mov
cmp
lcall
cmc
or
shrl
loop
roll
das
ds
push
aaa
inc
inc
jae
xchg
es
bound
lods
xchg
push
push
or
xchg
jb
out
rcll
das
cwtl
loopne
call
cmp
popa
and
cs
cmp
pop
pop
cmp
in
mov
inc
adc
adc
int3
out
jae
inc
xlat
push
aad
mov
aas
mov
mov
xor
test
outsl
push
pop
sbb
push
mul
cmc
aaa
out
fcoml
jg
mov
pop
push
adc
xor
ds
out
cmpsb
cltd
adc
jne
sub
mov
xchg
fwait
jl
adc
xor
in
sbb
push
mov
push
mov
js
jnp
cltd
pop
push
jge
out
xor
jl
rolb
cmpsb
jne
in
inc
xor
into
lret
sub
and
sbb
lods
dec
fstpt
jmp
push
mov
xchg
jnp
and
test
cmpsb
jo
lock
sarb
xorl
inc
mov
ss
mov
insl
jae
and
sub
inc
out
add
mov
add
pop
sbb
jbe
xchg
xor
cmp
jmp
or
aam
das
and
adc
in
dec
clc
cmp
sub
repnz
mov
popl
mov
mov
fwait
nop
repnz
mov
inc
fidivl
or
dec
aam
adc
mov
push
nop
lds
stos
rcll
pop
push
and
and
pop
jle
inc
shll
or
add
jne
fildll
push
push
or
mov
inc
enter
pop
mov
mov
dec
test
adc
mov
or
jge,pt
int
xchg
enter
popf
fldcw
add
fwait
mov
int
pusha
data16
jg
fcmovnu
sub
mov
or
or
sub
loope
in
cs
cwtl
stc
xor
xchg
push
lds
dec
test
and
aad
out
lods
stc
fnsave
xor
popa
and
fiadds
jno
fwait
xchg
xchg
aaa
adcl
iret
adc
outsb
xchg
dec
xchg
mov
pop
pop
jp
dec
cmc
nop
or
xchg
divl
or
testb
xor
lret
lret
and
jmp
adc
fisubl
pop
pop
sbb
jle
into
lret
insb
or
push
jns
lcall
in
fs
mov
mov
inc
pop
push
xchg
out
sti
movsb
sub
cs
jge
fs
push
mov
bound
push
mov
sbb
pop
xchg
jp
sub
mov
mov
loopne
in
loopne
inc
mov
fidivl
loope
inc
pop
sarb
and
sub
xchg
sbb
pop
fldt
ficoml
mov
push
es
xlat
icebp
test
adc
cmp
cli
push
push
and
xlat
inc
mov
fcmovb
cs
mov
aas
mov
xor
inc
shrb
cmp
inc
shlb
push
hlt
or
sbb
jnp
out
jbe
int3
push
sub
mov
ds
dec
xchg
stos
mov
je
ret
ljmp
insl
pop
jl
add
push
push
sub
lods
xchg
inc
and
inc
inc
xor
inc
mov
xchg
xchg
mov
imul
dec
in
ss
xchg
inc
mov
adc
js
pop
inc
popf
out
test
jbe
dec
inc
and
pop
or
stos
add
sbb
sub
lods
ret
icebp
mov
sbb
rorl
scas
daa
dec
push
sahf
lock
inc
scas
dec
decl
adc
xchg
mov
movsl
stc
ror
mov
sub
xor
xchg
dec
sbb
or
mov
in
xchg
xor
pushf
mov
stos
repnz
stos
adc
cwtl
xchg
inc
test
xchg
dec
cmc
call
pushf
jno
xchg
inc
xor
cmp
pop
rorl
and
sbb
jae
inc
or
in
jmp
push
dec
pop
mov
sub
into
lret
push
cmpsb
shlb
ds
lea
insb
outsb
push
or
xchg
or
sbb
pavgw
addr16
out
jmp
jae
fisubs
addr16
xor
mov
aas
xor
icebp
jnp
mov
jae
mov
fdivrp
leave
inc
add
fs
sahf
mov
mov
xor
and
imul
js
movsb
xchg
mov
aad
loope
js
push
ret
fsts
mov
mov
sub
jns
push
cmc
clc
pavgw
or
aaa
sti
sbb
popa
mov
popl
in
push
test
lock
and
dec
mov
cmp
push
xor
mov
pop
iret
cmpsl
popa
jmp
sub
rcrb
icebp
nop
push
stc
and
pop
jmp
sbb
push
xor
shlb
fdivl
fimuls
jnp
stc
fisttpll
push
sbb
push
push
dec
mov
imul
rcr
mov
andl
xor
xchg
dec
xchg
sbb
pop
jmp
sahf
mov
sbb
xor
fadds
rol
nop
cmp
ds
cld
sub
sbb
push
cltd
or
std
xchg
in
jb
je
cmp
in
push
sub
or
repz
push
pushf
cmp
hlt
cmp
lret
mov
xchg
add
or
fs
std
lret
mov
xchg
adc
mov
inc
sub
roll
adc
or
mov
rcrl
jae
or
and
repz
aam
call
aad
out
push
das
dec
sub
imul
and
mov
inc
cltd
push
test
xchg
cmp
fucom
inc
pop
imul
aas
mov
pushf
sub
adcb
aaa
ljmp
fisubrs
xchg
ja
fwait
jbe
sub
mov
fistps
nop
sub
movsl
adc
jnp
testb
mov
rcrl
in
arpl
enter
dec
sbb
or
pop
pop
pop
jae
jnp
mov
ficoml
ds
and
test
cli
mov
and
mov
pop
xchg
jp
dec
jno
lahf
test
sub
imul
xor
sbb
push
jnp
push
mov
cmpb
mov
pop
scas
stc
scas
stc
stos
jne
jno
sub
lea
iret
and
fdiv
or
pop
out
test
sub
dec
cmp
sbb
call
pop
out
lea
and
cmpsb
bound
shrb
cmpsl
adc
imul
mov
and
pop
mov
dec
leave
notl
cmp
into
ret
test
test
and
icebp
aaa
scas
xor
int
cs
lock
sub
test
xchg
out
test
cs
push
out
ds
ret
scas
addr16
xor
xor
loop
jb
fnsaves
lods
sbb
lods
fwait
test
test
dec
jne
inc
mov
or
sub
jnp,pt
popf
es
pop
cmp
je
dec
pop
jge
cwtl
xchg
ds
cli
mov
jp
xchg
lea
xchg
ficomps
mov
cmp
cmp
ljmp
dec
out
jge
hlt
inc
mov
loope
aad
cmp
sarl
jb
aaa
repz
sbbl
stc
inc
pop
addr16
incl
xchg
in
or
jle
or
ss
ret
sub
push
inc
push
scas
dec
arpl
aaa
push
pop
in
and
leave
pop
ljmp
pushf
adc
push
fucomi
add
dec
inc
icebp
dec
sbb
fsubp
lcall
icebp
idivb
das
dec
jo
cld
pop
orl
pop
cmp
cltd
orl
push
mov
pushf
jne
mov
test
mov
sub
lret
call
in
jmp
sti
cli
xchg
push
xchg
js
cmp
loope
pop
jno
addb
in
vpsllw
lods
int
aas
mov
dec
in
jecxz
fistpll
movsb
mov
xchg
sahf
push
lfs
cli
dec
sbb
mov
jmp
lods
cmp
sbb
add
xorl
adc
sub
jg
cmc
pop
mov
jae
cmp
lret
loopne
sub
int
dec
and
fiaddl
xor
gs
test
in
shrb
arpl
popa
adc
add
mov
mov
das
decl
stos
jae
adc
sbbb
outsl
fsubrl
cld
or
fidivs
push
inc
out
je
mov
bound
rclb
out
jne
jae,pn
std
je
lea
incb
mov
adc
cmp
jp
sub
test
dec
lcall
popf
sub
inc
jno
call
cs
addr16
lds
inc
inc
jo
data16
div
jp
stos
jne
adc
or
add
lret
push
xchg
jbe
out
into
scas
cmpsb
xchg
xchg
sub
jp
rorl
lret
sarb
sub
pop
mov
adc
xchg
dec
inc
inc
inc
cli
cmp
mov
hlt
in
mov
xchg
xchg
daa
in
fildll
or
mov
out
dec
int
xchg
shll
inc
mov
xor
es
popa
mov
push
insl
test
les
pop
mov
mov
sub
or
or
aas
fidivrs
mov
repnz
xor
aam
adc
mov
mov
and
int
sub
xchg
cmp
cmp
dec
pop
in
sub
sbb
out
ljmp
in
popf
inc
mov
xlat
and
in
jbe
or
push
shlb
in
nop
icebp
aaa
fisubl
cmp
cltd
push
cmp
add
rcrl
orb
stos
push
and
pop
in
pop
mov
out
jns
gs
jnp
enter
xchg
mov
hlt
cmp
leave
and
xor
or
mov
adc
jle
fcoml
fsubrs
rorl
and
push
test
imul
mov
imul
ficompl
stos
loop
lcall
add
out
mov
shr
test
mov
stos
cli
push
outsl
xor
add
sbb
cmp
cld
or
sub
movsl
xor
insb
jl
mov
cli
sbbb
lds
push
sub
cmp
cmp
loop
or
or
cmpl
add
popf
jle
cmp
pop
dec
data16
sub
ljmp
inc
mov
nop
sub
fsubrl
inc
fidivs
jno
mov
movsl
jge
or
sub
popa
mov
insl
mull
xchg
neg
push
sub
in
push
xchg
jae
enter
xor
mov
inc
mov
inc
add
gs
adc
sbb
int3
ljmp
sbb
loope
repz
mov
or
push
pop
pop
in
or
push
fstps
shll
stos
add
adc
pop
out
icebp
mov
push
mov
mov
leave
gs
push
mov
js
fbld
subb
aas
mov
into
insb
xchg
fistpll
out
fs
push
adcl
or
cmpsb
sarb
add
shrl
das
loopne
loopne
ljmp
dec
and
addr16
add
jmp
lcall
cmp
inc
aas
xchg
push
xor
dec
stos
in
mov
in
in
push
xlat
mov
sub
mov
push
insl
sub
mov
jmp
aas
add
mov
xchg
dec
fiaddl
movsb
xchg
mov
push
enter
pop
imul
or
out
inc
loope
mov
fisubrl
dec
mov
int
xchg
xor
mov
fcompl
ja
js
repz
ss
in
jp
mov
push
fwait
roll
mov
js
icebp
inc
add
ljmp
mov
flds
cmp
add
push
ror
mov
shrl
mov
or
mov
insl
xchg
mov
mov
or
sub
inc
enter
add
scas
push
pushf
adc
sbb
jle
xor
mov
pushf
loope
lcall
xchg
and
gs
cmp
mov
iret
arpl
filds
sub
sbb
fstpt
test
adc
jns
popl
sbbl
lahf
mulb
mov
pop
daa
pop
mov
mov
popf
frstor
xor
dec
mov
pop
cmc
sbb
xor
icebp
movsb
mov
repz
pop
push
loopne
cmc
jge
mov
aam
fldenv
xchg
stc
jp,pt
xchg
sarb
lds
mov
lods
or
xchg
nop
rcrb
add
fcmovu
mov
movsb
popf
stos
in
push
hlt
inc
subl
test
mov
pusha
stos
cmp
and
psllq
xchg
inc
sbb
roll
mov
mov
out
mov
lahf
pop
dec
cmc
test
mov
cs
adc
jmp
cli
dec
int
jge
xchg
push
mov
add
xchg
cmc
or
aaa
icebp
push
mov
jecxz
pop
cltd
insb
jg
repnz
aas
mov
enter
xchg
leave
fst
cwtl
mov
mov
pop
inc
xor
inc
cmpsl
xchg
jmp
adc
xor
mov
inc
and
push
jnp
jnp
sbb
cmp
imul
xchg
add
not
lock
inc
dec
es
fimull
mov
inc
frstor
mov
push
mov
mov
sub
mov
mov
in
jmp
sub
dec
adc
add
push
jo
gs
shlb
jmp
mov
movsb
jg
pusha
scas
fldl
jle
fdivl
jge
sahf
jge
shll
addr16
or
cmp
or
push
popa
cs
push
mov
xlat
pushf
cmc
cld
mov
push
mov
bound
sub
int3
shll
rcrb
push
sub
pop
out
jp
dec
sub
xchg
or
cld
icebp
movsb
add
cld
adc
pop
mov
aam
sub
xchg
mov
mov
js
pushf
jmp
pop
and
adc
aam
xchg
int3
insl
leave
inc
pop
ds
or
pop
out
scas
cmpsb
mov
dec
sub
jns
mov
inc
mov
arpl
or
push
mov
mov
xchg
fisttpll
out
imul
xchg
jl
rclb
jmp
dec
jecxz
ljmp
xor
sub
adc
sbb
mov
daa
out
xchg
stos
lahf
ficompl
lcall
mov
add
pop
jmp
outsl
xchg
data16
adcb
popa
dec
scas
sbb
push
or
add
add
cld
adc
lds
arpl
ljmp
scas
cmpsb
cmp
dec
and
ret
or
inc
mov
push
rcrl
mov
aaa
mov
dec
dec
rcl
pop
push
fbld
jle
fucom
lods
jecxz
sbb
insb
div
vpshad
and
stc
cmc
lahf
cmp
mov
stos
lret
shlb
cmp
jle
xor
repnz
popa
gs
aad
mov
mov
test
das
lock
xchg
test
out
cmpl
inc
pop
push
int3
push
outsb
mov
jge
cmp
daa
push
pop
pop
inc
lret
push
jnp
pop
push
lods
adc
cmp
mov
int
xor
sub
mov
pop
in
mov
je
subl
push
sub
scas
adc
scas
jno
pop
push
dec
aad
push
pop
jl
aam
lods
subl
xchg
fndisi(8087
nopl
sbb
xchg
imul
scas
rolb
adc
cmpsl
lock
and
lods
jle
xchg
sbb
push
jmp
js
mov
mov
pop
xchg
mov
icebp
mov
popf
dec
mov
jb
xchg
push
push
jno
sub
mov
xor
or
adc
and
iret
movsl
push
mov
or
rcr
push
xchg
push
jne
bound
adc
stos
pop
lock
test
movb
pop
cmp
notb
jecxz
mov
loopne
sub
inc
mov
mov
ss
and
xor
jnp
pop
je
push
call
jle
cmp
decb
pop
mov
adc
jle
rolb
mov
cmpsb
add
dec
fwait
scas
xchg
icebp
jae
jno
cmp
test
inc
frstor
add
in
and
scas
repnz
negl
dec
shrb
push
insb
mov
xor
repz
bound
clc
fadds
ljmp
jno
push
cmpsb
outsb
fmull
std
test
dec
sub
shll
sbb
aam
test
mov
aam
add
mov
jb
mov
loope
push
stos
and
sar
mov
add
pop
stc
scas
cmp
jp
aad
inc
out
pop
add
mov
pushf
sahf
sysenter
jb
mov
or
cmp
sub
xchg
cmpsb
pop
arpl
notl
pop
pop
in
lcall
arpl
pop
adc
shlb
xor
xor
xorb
cld
or
mov
fsts
aas
in
sub
inc
arpl
mov
fwait
movsb
aam
out
push
and
adc
into
adc
mov
aam
daa
mov
sub
repnz
mov
push
push
adc
cmpsb
adc
xchg
add
aad
mov
mov
mov
lret
push
sbb
push
cmp
dec
inc
adcl
xchg
adc
clc
lds
cmp
adc
add
pop
loopne
flds
cmp
sub
pop
jnp
les
jmp
pusha
sbb
xchg
enter
mov
mov
push
mov
stc
fidivl
sbb
or
std
adc
and
in
inc
dec
out
stos
push
jp
in
leave
push
lods
inc
test
push
shl
sub
sarl
jp
push
mov
sub
add
xor
cmp
shl
and
xor
pop
jle
pop
mov
cli
push
mov
jb
pop
movsb
leave
jp
rcrb
out
lcall
fsub
mov
test
sbb
outsl
rcll
mov
ret
adc
xchg
std
pop
lahf
push
adc
and
and
aam
mov
lock
pop
jl
sbb
xchg
push
add
test
lods
cmp
and
xlat
pop
pop
popa
neg
inc
mov
lret
sbb
cmp
in
mov
iret
repnz
push
cmp
or
push
psubw
or
out
pop
inc
je
ficoml
xchg
insl
xor
xlat
cmp
pop
pop
or
testl
cmpsb
je
cltd
push
loop
or
shll
test
push
push
add
pop
xchg
ljmp
cmp
scas
sbb
sbb
mov
sbb
movsl
mov
icebp
inc
mov
xchg
mov
cmc
into
ret
cld
mov
aad
cli
daa
popa
fisttps
repz
push
jns
mov
or
mov
pop
mov
sub
fadds
cmp
mov
sub
lods
mov
enter
andb
adc
mov
jge
test
push
or
and
inc
xchg
js
out
fdiv
pop
aaa
and
push
jmp
cmp
adc
sbb
rolb
pop
cmp
sub
sub
call
cmp
mov
stos
loope
orb
cmp
sbb
or
push
out
dec
mov
jle
and
or
lock
mov
ret
cmp
sub
jb
outsl
or
test
dec
mov
insl
dec
loopne
pop
xchg
lret
arpl
push
icebp
inc
xchg
aad
adc
insb
cs
add
jle
xchg
ret
pop
mov
lea
shl
cli
ret
inc
pop
push
lds
call
pop
js
stc
in
pop
jmp
pop
or
pop
mov
sub
or
jne
and
mov
mov
jo
in
mov
xor
cmpsl
sbb
or
mov
add
lods
bnd
rcr
sahf
insl
sbb
les
aam
mov
jp
adc
pop
push
lds
es
cmp
aaa
sbb
inc
mov
sti
insb
adc
lahf
or
stos
mov
hlt
std
pop
mov
sbb
sub
sbb
rclb
inc
mov
int
mov
sar
outsb
inc
mov
je
lcall
iret
dec
pop
sub
imul
imulb
mov
mov
sbb
xor
arpl
push
shlb
inc
arpl
adc
fidivrs
loop
xor
outsl
inc
mov
jge
test
push
mov
je
sub
ja
std
ret
out
sbb
arpl
scas
jecxz
add
insb
pop
pop
out
sub
inc
mov
xor
and
ret
int3
dec
xchg
inc
cmp
mov
roll
cmp
pop
int
push
pop
xchg
fcomps
int3
lcall
ljmp
push
mov
push
rorl
push
pop
lea
cmpsl
pop
dec
jg
in
inc
add
into
out
dec
stos
dec
movsb
and
mov
adc
xchg
cmp
sub
dec
sarb
sub
adc
push
add
mov
xchg
div
or
xchg
jnp
repnz
add
add
repnz
out
ficoml
mov
xchg
out
xchg
jmp
aad
jns
loopne
dec
or
js
jno
xor
imul
aad
rolb
faddl
imul
and
gs
push
dec
dec
cmpsb
jo
add
bound
imul
movsl
sahf
fcmovu
push
adc
and
sbb
cmp
sarb
cmpsb
inc
shlb
repz
jbe
push
ror
sub
lods
push
cmc
sbb
xchg
out
ror
sbb
jb
xor
adc
cmpsb
into
mov
mov
insl
xor
aad
jo
cmp
arpl
scas
jo
lds
rol
mov
fisttpl
addl
xchg
std
fs
lahf
iret
sbb
mov
jnp
jmp
jbe
or
sbb
cmp
add
repnz
lock
fwait
xchg
adc
and
jge
dec
inc
aam
mov
jg
xchg
jecxz
divl
add
sub
sbb
loope
mov
push
cs
cltd
cmp
iret
xor
inc
mov
pushf
inc
inc
daa
pushf
sub
inc
hlt
imul
jnp
xor
cmp
adc
xor
out
ret
imul
mov
push
adc
cmp
sbb
imul
push
andb
movsb
cmc
mov
cltd
in
out
in
adc
notl
or
lods
or
mov
push
sub
adc
mov
arpl
or
inc
cwtl
jne
in
xor
xorb
mov
xor
rcrl
lea
jno
lret
and
cmp
mov
les
mov
fcmovnb
iret
mov
xchg
lsl
add
psllq
rol
xchg
cmpb
lret
jle
in
mov
mov
dec
insb
mov
mov
cmp
test
stc
pusha
iret
add
lods
aas
repnz
and
add
xchg
into
cmpsb
mov
dec
add
push
pop
jb
test
jbe
fldz
stos
cli
insb
sub
sbb
dec
repnz
out
dec
out
jns
jp
ljmp
dec
mov
or
sub
mov
imul
sub
fimull
data16
xlat
mov
xchg
xor
jae
lods
xchg
lods
sbb
dec
cli
aam
pop
mov
dec
out
dec
stos
cmp
add
xchg
cwtl
dec
test
and
fnstsw
data16
dec
dec
mov
mov
or
in
xor
nop
shrb
ret
movsl
fcoms
mov
loop
mov
mov
mov
loop
fists
cmp
ds
mov
sub
lea
out
inc
jne
ja
jg
movsb
mov
insl
add
xlat
xchg
sti
daa
pop
sbb
aam
inc
cmpsl
test
sbb
add
loop
shrb
call
pop
push
fwait
pop
and
call
cmp
ret
push
add
adcl
mov
leave
mov
push
pop
jno
into
cs
mov
mov
cltd
jmp
gs
inc
insl
andb
ljmp
shll
pop
xrelease
jbe
pop
mov
insl
pusha
orl
aad
cltd
jmp
ljmp
lret
aad
cmp
pop
adc
push
add
jae
inc
add
dec
out
popa
mov
cmpl
push
or
daa
popf
into
or
cmp
and
mov
mov
cmp
out
pop
sarb
adc
jle
jae
int
fnsave
or
adc
xchg
loope
jbe
push
jb
xor
sbb
addr16
mov
sti
sub
jnp
orb
push
add
pop
repz
mov
in
shrl
mov
xchg
mov
push
pusha
jns
pop
fistps
xlat
mov
xor
mov
cmp
mov
sbb
lods
std
mov
push
outsb
cmp
cmpsb
sub
push
cltd
in
mov
popa
out
jle
push
data16
dec
rorb
gs
mov
outsl
push
push
jg
jecxz
sbb
aam
sbb
adc
push
and
es
mov
mov
dec
add
xor
add
popa
shll
cwtl
pop
inc
fidivl
aad
dec
mov
iret
sysexit
loope
jmp
insl
add
push
addb
mov
movsb
mov
icebp
call
push
cmpsb
xchg
imull
xchg
cli
adc
jp
ss
add
push
sub
out
aam
lret
mov
fwait
cltd
shll
insl
and
out
mov
ds
or
mov
mov
and
sti
stos
filds
mov
and
sub
and
ljmp
neg
mov
dec
sbb
mov
push
pushf
xor
push
sbbl
dec
dec
arpl
pop
dec
xor
hlt
cmp
loop
bound
jmp
inc
jo
mov
add
dec
sbbl
roll
mov
fsubrp
mov
insl
call
out
stos
popf
pop
xor
nop
repz
and
sbb
pushf
jns
and
outsb
push
insb
jns
popa
in
test
clc
outsl
and
stos
std
add
or
inc
enter
xchg
popf
cmp
push
dec
xchg
aas
enter
daa
popa
sub
sub
jecxz
sahf
dec
mov
or
imul
sub
mov
and
xchg
or
or
pop
out
sarl
mov
add
imul
ret
cli
ret
jno
lds
jmp
ja
dec
jns
sahf
jecxz
std
outsb
mov
ret
enter
cs
mov
call
pop
ret
cmp
xchg
cmp
jo
xchg
fst
mov
fcomps
stos
push
xchg
or
fists
push
or
popf
dec
lods
out
dec
mov
adc
sub
outsb
sub
mov
iret
push
cwtl
xlat
insb
xor
or
and
sub
test
mov
xchg
movsl
lcall
add
jnp
gs
shl
push
jl
or
push
add
leave
sbb
ljmp
into
dec
cmp
pop
out
pushf
jg
popa
xor
push
mov
jnp
mov
mov
inc
dec
repz
fisttpll
push
mov
js
jmp
sbbl
hlt
test
fwait
orl
push
mov
int
in
iret
xor
das
jnp
rorb
push
jg
pushf
mov
test
or
dec
idivl
cmp
arpl
loopne
aas
sub
call
push
stos
mov
mov
sti
test
cwtl
mov
stc
or
jae
mov
subl
mov
mov
and
mov
daa
stos
in
dec
lock
mov
xchg
test
inc
in
gs
loope
push
jl
or
movsl
daa
xchg
pop
jl
push
scas
addl
xor
das
adc
dec
add
add
rcrl
mov
jns
xor
mov
xor
jns
mov
jns
jb
jbe
pop
add
dec
jns
mov
idiv
push
les
mov
rol
jecxz
fimuls
or
adc
jl
add
add
arpl
dec
jl
sbbb
inc
inc
in
sbb
adc
sbb
mov
pusha
mov
mov
out
jbe
test
jle
mov
push
call
pusha
add
pop
inc
push
cmp
dec
push
jno
and
outsl
and
ss
xor
adc
ficoms
hlt
adc
imul
sbb
sti
pusha
push
cmp
cmpsl
test
lods
pop
out
leave
pop
mov
loop
pop
das
data16
push
add
pop
movsb
movsb
and
cmp
clc
jo
lods
mov
push
push
testl
imul
mov
negl
xlat
lea
into
out
xor
sahf
gs
xchg
cwtl
je
jb
aas
sbb
lcall
fildll
cmpsb
idiv
or
jp
es
xchg
rorl
mov
adcl
rclb
adc
stc
arpl
xchg
rclb
nop
enter
shr
scas
xchg
jbe
sub
dec
sysret
dec
lods
sub
push
mov
nop
mov
jns
add
test
xchg
xchg
push
test
fdivl
sub
test
jae
mov
or
sub
out
stc
mov
insb
and
jbe
cld
daa
jbe
daa
or
push
data16
push
mov
dec
mov
xor
jo
mov
arpl
push
ss
pop
arpl
sbb
fwait
mov
xor
xchg
rol
jo
gs
shrl
ljmp
aam
orb
fdivl
loop
rclb
and
mov
in
out
sahf
fistl
mulb
adc
dec
push
lret
push
pop
mov
push
dec
and
pop
cbtw
cmpsl
arpl
mov
push
in
inc
push
xor
adc
sub
leave
xchg
addb
cmp
scas
adc
xchg
mov
jbe
dec
repnz
imul
mov
dec
shl
fistl
xlat
add
mulb
popa
hlt
xchg
inc
jle
or
jb
inc
jbe
sub
or
repz
mov
mov
inc
xchg
mov
fists
in
movsl
adc
pushf
stos
mov
rol
jp
pop
jo
pop
dec
adc
mov
js
pop
imul
jno,pt
push
cld
xchg
sbb
mov
hlt
in
mov
dec
ljmp
fsubr
cmp
enter
pop
adcb
jmp
inc
push
je
jb
mov
movsl
ret
test
pushf
sbb
push
push
adc
cmpsb
ljmp
std
lea
vpcmpeqw
pop
jge
pushf
dec
ja
jecxz
add
push
faddl
popf
xchg
sbb
decb
loope
cmpsl
jnp
pop
dec
add
imulb
das
adc
movntq
aas
imul
lea
mov
outsl
es
xchg
xchg
mov
call
lret
out
sti
daa
out
xor
test
mov
xor
lret
dec
cmp
loope
sti
iret
scas
insb
les
hlt
mov
sti
xor
je
push
arpl
movsl
xchg
ss
cmovle
jne
scas
sbb
or
ja
xchg
std
dec
insb
iret
lds
pushf
mov
subb
pop
insb
ss
xchg
xchg
cmp
sub
sub
sub
lcall
inc
push
push
pop
push
push
mov
loop
int
lods
dec
pop
jbe
jl
adc
scas
rcrb
ret
xchg
inc
bound
xchg
cmpsb
adc
pop
jne
cli
outsl
dec
mov
pop
dec
mov
and
sub
push
push
push
out
sbb
test
xchg
pop
lretw
test
inc
pop
and
mov
push
jo
cwtl
pop
jne
sti
sub
lock
mov
cs
in
inc
imul
jp
into
sub
loopne
xchg
xlat
pop
adc
arpl
push
movsb
ljmp
out
sub
mov
fnstenv
lock
js
leave
mov
adc
cwtl
into
jle
ret
mov
pop
dec
jae
add
andl
cmp
jmp
iret
fsubrs
xor
sub
lods
inc
xor
jecxz
jns
mov
push
pop
cmp
into
xchg
cwtl
push
sbb
push
inc
ljmp
jo
or
pop
xchg
cmpsw
aad
clc
jl
lahf
pusha
aaa
lea
pop
cwtl
rcll
psubq
or
lret
cltd
pusha
jb
inc
cwtl
lret
in
cltd
test
sub
mov
arpl
mov
adc
mov
loope,pn
push
cmp
insb
shll
ret
mov
movsl
push
sahf
bound
daa
sarb
inc
mov
je
fwait
int
jmp
xor
lahf
ret
mov
xchg
loop
adc
iret
lds
jnp
aam
dec
xorb
jnp
xor
mov
sbb
xlat
lods
hlt
lods
movsl
pop
xchg
ds
pop
jg
mov
or
pop
scas
lods
int3
pushf
pop
push
jmp
mov
pop
addr16
and
adc
leave
adc
jbe
outsb
int
mov
clc
pop
dec
mov
and
notl
jbe
pop
loop
cmpsb
push
push
arpl
push
fcmovu
push
ds
push
adc
mov
lods
popa
inc
add
push
or
or
sbb
sbb
pop
push
ret
push
lods
clc
or
cmc
fwait
push
xlat
into
mov
insl
push
rorl
pop
jg
push
pop
sub
repz
insb
mov
ljmp
cmp
js
xchg
jecxz
add
rcll
repz
fildll
pop
mov
jne
pop
xchg
test
push
and
mov
dec
insb
xor
imul
sub
fs
mov
pop
push
sbbl
fs
jg
lea
adc
data16
xorb
ja
fisubs
xchg
sbb
cmp
fists
inc
dec
gs
push
std
ret
xchg
mov
and
jnp
inc
pop
cmp
mov
jmp
rclb
out
pop
repnz
cli
stos
out
outsl
xor
shrb
insl
or
es
cs
scas
jl
rol
push
mov
cld
push
jg
icebp
cli
ret
shr
negb
push
dec
imul
mov
mov
mov
push
mov
fdivrl
jne
icebp
repz
xchg
xchg
sbb
xchg
ret
cmp
es
aad
ja
pop
inc
push
xchg
push
jmp
add
xor
cmp
push
mov
repz
test
inc
xchg
sti
mov
lahf
negl
in
jnp
ljmp
loopne
cli
and
mov
push
pop
jbe
jne
cmpsb
jb
fstps
pop
pop
or
shl
and
test
adc
mov
push
cs
aad
loopne
movsb
inc
int
mov
je
xor
fildll
jle
cld
lods
mov
lahf
dec
mov
push
cmpsl
mov
outsl
testl
push
lahf
loopne
addb
pop
sbb
or
scas
jmp
mov
push
xchg
add
sbb
or
and
loopne
loop
sbbl
inc
pop
sbb
nop
out
mov
mov
les
ror
jecxz
sti
roll
je
jb
orl
aas
push
nop
in
in
cmp
sbb
iret
fsubp
lods
lahf
mov
icebp
sbb
out
ret
into
mov
inc
mov
jmp
lret
xchg
insb
cmp
ss
adc
push
lds
and
fsubrs
adc
movl
leave
pushf
ret
out
test
xchg
and
dec
mov
cmp
mov
mov
out
xchg
cmpsb
xorb
inc
roll
addr16
push
fistps
sub
hlt
and
js
aad
mov
ret
push
dec
or
inc
bound
lods
jmp
mov
mov
sub
roll
and
pop
std
rorl
cmpsb
stos
pushf
push
push
sbb
lahf
icebp
or
lahf
xchg
jmp
enter
jo
ja
jo
pop
jb
je
ret
push
add
mov
adcb
scas
push
aaa
push
mov
mov
js
hlt
and
mov
jnp
sub
out
lods
icebp
or
jo
jno
xor
xor
or
cmpsb
mov
sbb
sbb
push
lahf
xor
sbbb
sbb
adc
pushf
pop
addr16
or
mov
test
aaa
push
push
dec
aaa
ret
sub
jo
push
negl
inc
jbe
imul
push
inc
test
sbb
jb
mov
push
jle
jg
dec
cld
js
mov
jne
inc
push
ficomps
xchg
dec
test
sub
mov
cmp
iret
rclb
mov
lods
adc
aas
mov
idivl
lahf
ret
popa
js
ss
inc
add
fildl
push
imul
push
push
dec
push
cmpl
mov
rcl
push
pop
out
iret
andb
into
lods
add
pushf
dec
jae
divb
adc
lds
jb
pop
movsl
dec
pop
mov
pushf
mov
mov
mov
ljmp
sub
in
stos
mov
lods
xor
negl
or
aaa
cmp
pop
adc
mov
outsl
push
aad
and
inc
pushf
mov
lds
push
cwtl
imul
sub
dec
into
sar
not
mov
or
cmp
and
cmpsl
mov
cmp
adc
jg
fcomip
aam
jle
ja
addb
xor
xchg
dec
sbb
iret
ret
push
and
inc
jmp
xchg
int3
jmp
push
leave
test
ss
daa
cmp
shrl
fsubs
and
inc
cmpsb
das
xor
divb
mov
jge
pop
sbb
ljmp
insl
fwait
inc
sbb
shl
test
loopne
nop
xchg
sbb
cs
data16
adc
roll
cs
arpl
and
ror
and
add
mov
scas
lcall
insl
push
fyl2xp1
inc
mulb
lret
and
or
pop
rclb
js
addb
pop
xor
pop
aaa
mov
sarl
jae
jno
dec
mov
push
cmp
sbb
sub
cltd
mov
les
idivl
xchg
push
pop
pop
bound
sub
cwtl
lret
out
sti
sub
inc
and
pop
in
and
popa
insl
mov
mov
leave
mov
fidivrl
outsb
repnz
icebp
imul
cmp
fwait
iret
dec
lret
fistpl
sbb
adc
pushf
cmp
lock
ja
inc
cli
mov
in
outsl
xchg
cmpl
add
push
dec
push
dec
adc
nop
in
cmp
lahf
data16
in
mov
aas
stc
mov
push
sub
push
sub
or
loopne
jae
jno
push
mov
sbb
push
jge
push
insl
and
jmp
jle
mov
add
das
movsl
xchg
scas
outsb
enter
sbb
jae
sub
fstps
cli
aad
jp
jnp
into
mov
sbb
add
fmuls
pop
push
stos
aad
aad
ret
icebp
cwtl
or
or
aas
pusha
mov
push
les
test
outsl
addl
mov
jge
and
cmp
popa
or
sub
jmp
pushf
add
and
lret
pop
out
or
inc
loope
mov
les
imul
cmp
addr16
inc
mov
loopne
outsb
cmpsb
sahf
xlat
xor
sub
fwait
sbb
push
or
inc
inc
in
lret
pop
aad
mov
inc
ja
dec
mov
push
mov
mov
jg
and
testb
leave
jno
dec
mov
enter
shlb
repnz
push
push
fldcw
xchg
pmaddwd
xchg
mov
scas
loope
stos
sbb
cltd
out
sub
xor
cmpsl
xchg
call
popa
mull
enter
jns
add
pop
and
jp
and
and
test
into
je
sti
add
cmp
inc
mov
loopne
data16
dec
roll
aaa
std
leave
outsl
pop
push
xchg
inc
cmpsl
jp
xchg
push
les
sub
shl
insb
repnz
add
jbe
sub
mov
xor
jp
mov
cli
pop
in
scas
mov
push
pop
lret
or
imull
or
imul
aaa
call
mov
loope
loop
mov
mov
and
popa
movb
insb
add
inc
cwtl
dec
inc
adc
aam
dec
outsl
std
inc
mov
adc
dec
movsl
addr16
pop
pop
clc
int
daa
cmp
cmc
push
dec
cs
movsb
lea
xor
xor
call
pop
cmpsl
or
jmp
and
outsb
xchg
mov
hlt
sbb
dec
inc
mov
jle
dec
mov
mov
sti
inc
fcmovnb
sti
and
in
add
push
cmc
js
mov
xor
or
idiv
shlb
jp
je
enter
dec
ret
addr16
jae
lea
jno
sbb
inc
in
mov
jae
and
inc
jp
cmpsb
jg
pusha
mov
cld
sahf
xor
rcrl
leave
and
ficomps
jmp
pop
ljmp
cmpsb
pusha
pop
push
imul
mov
mov
pop
sahf
sub
fnstcw
jb
decb
out
loope
jbe
in
push
cmpsb
sti
sub
sbb
mov
add
into
cmpsb
push
arpl
or
outsl
bound
mull
aad
xor
call
shrb
and
mov
xchg
push
push
test
jne
insb
iret
cmp
fmuls
iret
mov
push
xor
mov
push
cld
notl
sbb
cmpb
dec
dec
xchg
push
cwtl
adc
xor
in
cs
mov
test
sbb
xchg
adc
mov
push
mov
or
xchg
adc
mov
popa
clc
xchg
in
push
xor
add
jp
paddb
scas
insl
rorl
adc
rcll
and
dec
xchg
push
mov
xchg
xchg
popf
es
pop
filds
test
ss
jl
es
sub
or
mov
aaa
int
add
stc
xchg
repz
test
out
lret
jae
adc
adc
scas
adc
cltd
dec
inc
xchg
jge
inc
jmp
cli
faddl
cs
repnz
subb
or
jp
mov
mov
jae
insl
fimuls
push
and
push
adc
lods
sbb
sub
push
mov
dec
sub
test
movsb
jnp
fwait
sub
jecxz
rol
push
push
inc
inc
lock
js
dec
cmpl
jae
jmp
cmpl
cmpsb
sub
xchg
cmp
cmp
sbb
ret
imul
pusha
push
jp
outsl
push
pusha
test
insl
push
adc
push
fs
pop
adc
sbb
adc
dec
js
cwtl
adc
xchg
test
mov
jmp
dec
les
sarb
lds
xor
mov
in
lods
mov
jmp
adc
cld
test
fwait
pop
int3
pop
sub
xchg
repz
and
fdivrl
inc
insb
fs
and
or
mov
and
adc
daa
lea
sbb
int
mov
sbb
push
fstpt
mov
or
call
ss
icebp
xchg
je
into
xchg
sbb
test
shrl
movsb
sahf
cmc
push
je
mov
jl
mov
cwtl
xchg
iret
add
lea
jmp
in
insb
dec
xor
xchg
inc
ss
repnz
arpl
ss
add
sti
lahf
insl
mov
and
pop
push
shl
and
sub
mov
sub
jmp
mov
xchg
shrb
ds
mov
sub
ret
cmp
out
movsb
mov
stos
cmp
data16
jo,pt
dec
mov
repnz
mov
daa
imul
jnp
add
or
push
cmp
push
repnz
jo
mov
stc
pop
outsl
lahf
ljmp
pop
popf
dec
mov
jp
mov
es
hlt
ja
test
cmp
mov
mov
inc
rcr
jo
mov
push
cwtl
mov
sub
scas
sarl
cltd
ss
cmpsb
in
jecxz
loopne
add
rcrl
decb
lahf
xor
adc
dec
dec
jle
call
aam
leave
arpl
adc
lock
imulb
mov
lea
cli
test
fnstsw
inc
jp
cli
aaa
mov
andl
negb
popf
xor
jae
push
movsb
jno
pop
lods
gs
jmp
popa
add
std
pop
mov
cmpsb
jbe
arpl
mov
test
sahf
pop
push
sets
cmp
out
cmpl
ljmp
shlb
adcl
mov
std
scas
fs
mov
cmp
adc
pop
push
dec
mov
insb
and
lock
pusha
mov
jmp
add
inc
out
das
adc
push
rorb
clc
mov
push
or
movsb
ret
xlat
or
ljmp
loope
inc
test
pushf
popf
gs
xchg
int
stos
int
add
das
xor
jmp
lcall
xchg
aas
dec
iret
lock
mov
sahf
out
pop
pop
pop
xor
lds
push
pop
stos
dec
jno
sbb
add
pop
flds
gs
clc
lret
fistpll
sti
or
out
scas
cmp
mov
push
sbb
movsb
mov
idiv
dec
push
inc
inc
sub
lahf
call
jno
xor
ja
sbb
cwtl
mov
aad
je
aaa
outsl
cmpsb
add
xchg
je
lds
sub
ljmp
push
push
sbb
out
jge
mov
int3
and
cmpsb
cmpsl
xchg
decb
push
mov
pusha
pushl
aam
cmp
mov
and
rclb
mov
sub
mov
and
push
ret
and
and
mov
push
cltd
xlat
jb
and
jne
fucom
xchg
sti
mov
push
addl
in
fcmovb
ds
jl
andl
andb
mov
out
sbb
ja
adc
cmp
adc
adc
lds
in
push
fwait
cmpxchg8b
jnp
das
testb
cmp
jge
inc
ds
les
in
pop
mov
loopne
mov
cmpb
pop
mov
adc
push
mov
push
fstl
mov
lds
jmp
into
cmc
lods
pop
outsb
inc
repz
in
dec
popa
and
arpl
add
movsl
sub
arpl
pop
mov
or
jne
xor
lret
in
add
sbb
aad
push
adc
aad
push
std
dec
stos
add
adc
xchg
adc
pop
xor
std
cmp
push
mov
mov
das
push
inc
ficoms
jg
adc
hlt
pushf
cmp
sbb
push
js
stc
aad
lret
ds
sbb
dec
ficoml
xor
dec
add
push
mov
add
insb
decl
mov
sub
insb
mov
mov
hlt
dec
shrl
and
mov
movsb
jne
sub
sub
out
fwait
call
sti
xlat
cmp
hlt
clc
push
adc
push
lret
mov
pop
mov
fldenv
jo
ja
inc
out
or
pop
outsb
xchg
enter
mov
push
clc
pop
adc
mov
es
mov
add
jbe
sar
in
xlat
cmp
les
cmp
daa
inc
mov
lods
and
xor
out
add
adc
pop
hlt
fisubrs
fimull
mov
pop
pop
loop
sub
imul
push
inc
stc
sub
sbb
repnz
xchg
sbb
jnp
mov
ror
mov
jl
cmp
mov
xchg
pop
ss
and
mov
sahf
xchg
push
mov
fnsave
ficoms
stos
jmp
test
pop
lea
pusha
inc
in
xchg
xor
mov
push
iret
inc
push
lret
pop
dec
jle
push
insl
lock
enter
mov
and
mov
mov
mov
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
test
fdivl
int3
aaa
int
aam
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
cmp
outsb
fists
xchg
push
in
dec
loopne
pushf
movsl
pop
pop
cli
cmpsb
scas
fimull
stos
lods
pop
add
int3
jae
pop
call
cltd
xchg
test
sarb
fcmovbe
fdivl
cld
fiadds
ret
loop
xchg
xor
orl
add
xor
xor
out
ja
dec
mov
in
push
bound
push
out
push
je
add
popf
mov
add
sbb
adc
adc
fbstp
scas
push
out
in
in
mov
lock
mov
dec
jmp
xchg
fdivrl
stos
movsl
or
mov
in
add
insb
fcmovbe
fdivl
xor
int
insb
mov
add
insb
fcmovbe
fdivl
xor
int3
cmp
fcoml
in
add
insb
ficoml
adc
insb
fcmovbe
pushf
mov
cld
add
imul
in
add
xor
int
insb
fcmovbe
faddl
xor
int3
push
push
enter
fcmovbe
int3
mov
cld
add
jl
fdivl
xor
int
insb
test
cmp
cwtl
or
mov
in
add
insb
fcmovbe
fdivl
sub
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
test
xchg
cwtl
add
insb
fcmovb
fdivl
xor
int
cmp
xchg
out
loope
in
add
insb
fidivl
repnz
lcall
push
insb
fcmovbe
sbb
jmp
enter
fcmovbe
fdivl
xor
int
dec
fcmovbe
cmp
fwait
mov
push
enter
fcmovbe
fcoml
xor
int
push
jmp
enter
lcall
sub
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
xor
int
insb
fcmovbe
fdivl
cmp
loop
insb
lret
lahf
dec
ss
jl
fistps
push
out
imul
out
jnp
jne
xor
push
negl
xchg
adc
sub
mov
inc
and
dec
fcmove
dec
jecxz
lahf
mov
stos
fnstenv
lcall
outsb
mov
fcoms
loopne
pop
adc
pop
adc
idiv
test
mov
sbb
dec
mov
mov
cmp
mov
dec
xchg
inc
jmp
mov
or
data16
mov
jecxz
push
stc
or
cmpsb
sbb
xor
sub
pop
adc
and
clc
pop
xchg
mov
negl
pop
jmp
adc
ljmp
rolb
jle
ret
mov
xchg
call
lret
xor
fdivr
scas
jmp
xor
jns
repz
jnp
dec
push
stc
loopne,pn
pop
push
repz
pop
jbe
ret
fidivs
xchg
push
jns
sub
mov
and
lahf
push
push
movsb
fldt
sbb
cmpsl
mov
sub
inc
xchg
test
mov
ljmp
popf
subb
and
inc
loope
cmp
inc
lods
cs
sbb
test
sahf
adc
cmp
bound
inc
jp
sbb
movsb
mov
mov
lea
pusha
adc
cmp
lock
push
and
ret
stos
js
mov
loop
cmc
and
out
inc
out
sbb
xor
pop
dec
cltd
lods
cmp
ficomps
test
dec
add
rcll
cli
or
mov
xor
xchg
dec
xor
cmc
or
in
cmp
fisttpll
sub
jecxz
fisttpl
and
in
fmul
adc
stc
aam
cltd
imul
mov
dec
mov
or
call
out
aaa
mov
xchg
pusha
jo
mov
pop
shlb
ja
cmp
push
stos
push
and
rcrl
cli
sub
add
adc
dec
or
ret
or
jbe
imul
and
mov
je
mov
mov
add
loopne
xchg
outsl
pusha
mov
inc
jl
pop
pop
test
xchg
add
imul
arpl
rolb
repz
adc
dec
adc
dec
or
inc
mov
loop
icebp
ret
and
pusha
cmp
jl
mov
mov
pushf
inc
cli
add
je
lds
xchg
adc
movsl
add
incb
push
ret
sbb
stos
and
fisubl
aas
mov
adc
lcall
mov
push
mov
addr16
imul
loopne
test
sub
sub
and
sahf
push
cld
pop
hlt
lahf
orb
pop
addr16
cmpsl
push
xor
push
push
inc
mov
lods
bound
xchg
in
imulb
sarl
dec
cmp
or
xchg
cmp
pop
lahf
pop
and
mov
mov
out
scas
sar
dec
sarb
lods
lret
cmpsl
test
adc
cltd
jle
movb
xor
mov
add
pop
xor
jae
hlt
xabort
adc
lret
push
jl
mov
push
out
insl
ss
sarb
iret
daa
lcall
mov
push
jecxz
cmpsl
mov
cmp
mov
movsb
xchg
aas
pop
test
aam
dec
push
lret
xchg
es
lds
and
xchg
sub
dec
cmp
add
sub
and
psllq
xchg
mov
inc
xchg
pop
inc
fisubs
pushf
jp
mov
cmp
jns
outsb
dec
hlt
ds
push
cmp
std
and
loop
jp
push
adc
adc
loop
rcrb
lds
outsb
aaa
push
lea
sbb
or
xor
outsb
mov
jne
testl
adc
xchg
sbb
jmp
call
cmp
mov
cmc
js
push
jbe
pop
je
in
inc
xchg
jb
mov
adc
in
mov
sarl
mov
mov
loopne
incb
lea
je
lock
lock
cmp
lods
outsb
mov
jge
and
pop
dec
iret
daa
xchg
das
aaa
add
inc
lods
hlt
cmp
dec
insb
mov
cmp
mov
push
mov
mov
push
rcll
mov
pop
mov
lahf
sub
rcl
push
icebp
lahf
cltd
in
clc
lahf
xchg
lea
fnstenv
movsl
sbb
mov
or
dec
addr16
cmpsb
cmp
ret
fbld
sbb
push
add
cmp
lods
sbb
js
vpunpckhqdq
fbstp
lds
gs
sub
mov
stos
mov
cld
mov
mov
nop
lods
mov
mov
movsb
stc
iret
pop
mov
scas
xchg
mov
sahf
scas
js
add
iret
adc
fxch
lds
mov
adc
je
mov
shlb
loop
enter
inc
jle
or
jp
jnp
pop
jmp
push
pop
sub
lods
and
sbb
xchg
loop
js
mov
insl
sbb
cs
pop
lcall
dec
std
adc
add
nop
cli
dec
lcall
push
cmp
add
jbe
bound
mov
cwtl
arpl
jne
xor
xchg
inc
loopne
push
popa
or
bound
mov
jno
out
dec
mov
xchg
add
insl
xlat
stos
pusha
scas
cmp
add
pop
clc
ds
stos
les
mov
mov
and
mov
pop
xchg
adc
lea
inc
mov
push
outsb
scas
sub
push
mov
sbb
sbb
or
mov
aaa
pushf
out
xchg
dec
shlb
mov
cwtl
pop
mov
or
mov
or
cmp
jle
test
int3
cmc
int3
lahf
xchg
loop
push
dec
jbe
mov
inc
pop
stc
sbb
je,pn
sub
or
mov
jbe
loope
fs
sarl
lahf
pop
add
cmp
and
dec
xor
xchg
lret
out
and
loopne
or
notb
movsb
shlb
xchg
movl
pushf
repz
nop
in
flds
jg
out
inc
rcrl
shrl
xchg
and
xor
fdivl
or
daa
add
adc
mov
mov
hlt
xor
mov
mov
and
xor
or
xchg
and
in
mov
icebp
push
cmc
xchg
lcall
push
mov
adcb
xchg
rcrl
pop
mov
or
jae
or
xor
push
pop
and
shl
cs
dec
mov
hlt
lahf
in
ror
fisubrs
test
or
mov
ja
xor
xchg
mov
jle
fldcw
subb
repz
xchg
aas
fldenv
adc
data16
mov
mov
stc
xchg
lock
push
imul
imul
adc
repnz
push
mov
arpl
mov
mov
mov
mov
lds
jbe
or
cmpl
xor
adc
outsb
dec
sbb
mov
mov
popf
mov
clc
or
mov
stos
or
sub
int3
loop
mov
in
les
xlat
pop
hlt
dec
inc
icebp
popa
mov
loope
fdivs
mov
mov
out
das
pop
push
pop
mov
xor
add
shll
inc
cmp
pop
sti
pop
ds
lret
cwtl
jns
aas
insb
inc
pop
mov
das
in
inc
cmp
adc
pop
fiaddl
mov
rclb
sub
imul
mov
das
jno
or
sbb
jb
cs
sbb
test
aad
cmp
dec
mov
push
inc
insl
lret
mov
in
jg
sbb
pusha
ss
inc
pusha
mov
xchg
dec
test
mov
cmpsb
jne
lods
and
push
jl
lock
sbb
push
cmp
lahf
shlb
je
xchg
sbb
or
pop
push
fldcw
movsl
icebp
rcr
aas
add
inc
subl
mov
outsb
mov
in
mov
xor
push
fwait
xor
nop
rcl
int3
scas
push
mov
out
lea
sti
mov
addr16
popa
sub
pop
xchg
mov
cs
data16
sbb
test
int
in
out
sbb
shlb
jecxz
popf
ss
das
fistpl
insl
jp
cmp
mov
pop
add
mov
push
dec
jbe
push
xor
lods
pop
iret
cmp
mov
pop
icebp
pushf
loopne
or
test
mov
jge
cmp
cmp
or
add
test
out
sbb
andb
add
lret
sti
mov
divps
loop,pn
jno
lahf
jecxz
cld
movsb
sub
cwtl
push
bound
xchg
cld
mov
mov
xor
mov
sub
push
sub
mov
and
lret
les
mov
fs
les
ficoms
xchg
outsb
sub
cmp
lock
stos
add
push
lahf
loope
lahf
mov
push
rcl
aaa
int
xchg
sub
and
ss
cmp
xchg
cvtdq2ps
nop
test
xchg
shlb
std
insb
jp
mov
into
push
test
mov
jae
or
mov
cmp
shrb
shrl
push
adc
dec
lods
mov
cmp
adcb
dec
pavgw
stc
out
fldl
push
and
sbb
dec
jp
movl
ljmp
inc
in
inc
push
sbb
lods
jbe
jle
nop
int3
dec
lret
push
sbb
adc
aas
xchg
cwtl
sub
sarb
andb
in
scas
incb
pushl
dec
xchg
int3
dec
mov
lock
out
push
add
dec
xor
loop
adc
outsl
add
bnd
add
mov
pop
inc
add
push
jb
roll
pop
xchg
or
repnz
inc
sub
and
je
pop
pop
aam
pop
sub
sub
add
mov
lods
mov
adc
cmp
ljmp
jo
test
inc
xchg
mov
push
adc
push
lret
push
ret
adc
mov
loop
gs
xchg
or
push
sbb
mov
push
lcall
cwtl
mov
lock
int
jo
out
jg
cmpsl
jns
bound
roll
lret
or
and
loope
inc
mov
adc
mov
dec
xchg
icebp
cli
cmp
les
and
lret
xor
push
test
and
std
jns
mov
cmp
out
stos
fdivrl
mov
cmp
mov
lods
insl
add
inc
hlt
out
test
lock
xor
cli
xor
cmp
lret
das
inc
lret
popa
jmp
mov
cli
adc
jg
out
add
mov
adc
xor
daa
adcl
adc
aaa
repz
pop
call
in
nop
movsl
ror
xchg
inc
xlat
negl
mov
loopne
je
lea
xor
jp
xchg
imull
sub
dec
ret
or
cwtl
xchg
cli
dec
jl
pop
sbb
arpl
je
inc
mov
stc
in
mov
pop
or
and
cmpsb
cld
addr16
bound
into
inc
ljmp
stos
into
sti
inc
dec
test
lods
dec
cli
popf
mov
loopne
xlat
in
mov
mov
in
loope
insl
mov
addb
adc
jle
in
xchg
dec
repnz
cmp
xorb
insl
roll
cmp
scas
xor
ret
mov
sbb
subl
lods
jno
dec
mov
jmp
push
sub
aas
mov
mov
loop
nop
mov
scas
inc
jg
sub
mov
push
decb
sub
or
imul
mov
int3
fs
pop
or
movsb
pop
jle
stc
sbb
xchg
sbbb
mov
iret
jo
je
jb
pop
ss
in
xchg
gs
out
mov
aaa
frstor
or
nop
or
into
pop
push
aaa
daa
int
scas
pop
xchg
inc
mov
lcall
shrl
es
and
cld
or
out
push
mov
pushf
jge
mov
jg
lds
xchg
ret
add
aad
cmp
gs
jae
inc
sbb
cmpsl
movsb
sahf
adcl
adc
push
inc
addb
out
sbb
jmp
leave
stos
shll
call
fsts
jecxz
cmpsl
das
mov
sub
faddl
xchg
and
pop
fidivs
xchg
mov
fnstsw
add
sub
jp
pop
dec
and
push
fcmovnbe
xchg
xchg
js
xor
adc
mov
jge
ja
push
mov
inc
mov
cmp
jecxz
dec
and
movsb
dec
sbb
dec
pop
mov
sbb
jl
dec
pusha
inc
int3
add
sti
mov
aam
out
lds
rcrb
push
or
aaa
pop
push
ficomps
cwtl
or
out
std
dec
pop
xchg
into
adc
fmul
cltd
dec
dec
xlat
xor
xor
sub
xchg
xchg
sti
sbb
call
jne
inc
movsb
jge
inc
pop
add
imul
push
ret
sbb
loope
and
imul
movsb
adc
out
out
repnz
add
add
lds
leave
adc
sub
ss
hlt
adc
or
inc
mov
shl
pop
cmc
adc
or
add
cmp
sbb
fcmove
daa
pop
loope
mov
jbe
add
push
enter
adc
push
iret
lcall
loopne
call
out
shr
jo
adc
das
cmp
pushf
ret
nop
mov
dec
xchg
shrb
cmp
cmpsl
push
xor
fdiv
dec
push
and
or
jns
ja
aad
in
mov
andb
pop
mov
mov
and
ret
shll
cmp
out
decl
sbbb
fsts
ltr
loop
or
push
pop
mov
adc
orl
or
mov
stos
sub
fwait
in
andb
int3
dec
fistpl
cld
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
