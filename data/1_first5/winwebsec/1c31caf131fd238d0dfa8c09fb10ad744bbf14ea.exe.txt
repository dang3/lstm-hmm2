sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
test
lcall
push
sub
sub
add
shll
and
push
xchg
test
mov
jbe
in
jno
lods
dec
dec
sahf
cmpsb
jg
xlat
sbbb
int
data16
add
add
push
jge
fsubrs
in
lret
loope
into
cmpsb
jge
pop
mov
mov
xchg
cmp
sub
pop
lock
xchg
in
push
rcr
add
mov
or
ss
mov
xor
push
leave
push
add
repnz
les
icebp
call
xlat
push
pop
sub
or
jae
jns
frstor
pop
xor
add
dec
repnz
hlt
push
push
dec
mul
dec
and
jecxz
fdivs
stos
inc
and
xlat
mov
orb
aas
fildl
push
shrb
xchg
in
sub
stc
inc
stc
inc
fucomp
xchg
xor
and
adc
shl
fs
testl
mov
mov
leave
inc
and
push
pusha
or
pop
jge
cmp
inc
lds
add
and
xchg
bound
jecxz
cmp
jo
lea
lea
lret
cmp
xchg
cli
decl
or
jecxz
call
movsl
sti
ret
ret
insl
mov
mov
das
push
fcmovb
and
lea
daa
and
mov
mov
sbb
push
repnz
cmpb
and
adc
loop
sbb
addl
cmpsl
stc
push
mov
jns
lret
fmul
or
jg
lret
addr16
pop
fs
pop
gs
inc
inc
popa
lahf
aam
mov
lcall
data16
dec
jmp
cs
fistpll
push
mov
inc
mov
in
cmp
jge
add
in
inc
and
adc
pop
dec
xchg
mov
mov
mov
movl
enter
dec
fldt
lds
mov
dec
dec
int3
icebp
int
add
idivl
jo
pusha
lea
push
or
cwtl
daa
movsl
xor
mov
dec
xor
inc
xor
sbb
adc
dec
add
inc
mov
rorb
sbb
mov
ret
mov
test
jb
out
jp
stos
and
lock
leave
fsts
cmpb
pop
add
jmp
or
xchg
enter
ljmp
jnp
jb
neg
jle
and
ss
push
call
push
push
js
fsub
pop
mov
js
scas
out
and
es
arpl
mov
test
inc
out
and
cmp
mov
jp
mov
and
test
mov
sub
and
cltd
mov
jg
hlt
rep
push
xchg
sti
fidivrl
test
cmp
jg
ds
mov
cmp
mov
xchg
cli
stos
push
sbb
sub
cwtl
out
xor
aas
mov
push
test
lcall
lcall
sbbb
fisttps
add
cmp
hlt
ret
sub
aad
push
invd
xchg
mov
hlt
cwtl
xchg
pop
or
add
pop
jp
mov
stc
sarl
mov
or
mov
ss
jp
and
and
out
pop
lods
daa
adc
les
cmp
cltd
jne
pop
ret
outsl
fiadds
mov
or
fwait
insl
xor
mov
mov
xchg
mov
popf
andl
mov
fidivs
inc
or
adc
scas
mov
fmuls
adcl
dec
sbb
and
xor
push
jecxz
mov
mov
xchg
je
dec
cmp
in
dec
sbb
enter
sbb
mov
mov
mov
xor
test
aam
xorl
push
test
aad
sbb
dec
sbb
idivb
mov
ror
pop
scas
sti
adc
imul
int
scas
dec
out
ret
aam
pop
stos
xor
and
mov
ret
leave
insl
aam
stc
pop
shll
insb
cmp
mov
adc
dec
sar
gs
pop
push
and
xor
push
inc
orl
scas
or
subb
pop
sbb
fsts
lea
sbb
jno
dec
add
sub
mov
pop
sub
mov
push
lods
lea
xchg
in
mov
rcrl
ljmp
jl
jnp
push
gs
loop
arpl
insl
pop
jo
dec
in
push
scas
iret
mov
outsl
mov
mov
and
dec
les
out
loope
aad
or
popf
mov
cld
jbe
int
lods
lods
xor
push
out
push
mov
xor
ja
call
sbb
sbb
or
stc
das
xchg
push
pop
xchg
adc
sahf
ret
xchg
mov
vpcmpgtw
fists
mov
jne
sub
fisttpl
push
pop
dec
xor
insl
mov
and
or
jecxz
cmpsb
mov
mov
sti
lahf
mov
rcll
bound
mov
xchg
cmp
fbld
jecxz
insl
inc
pop
jne
roll
enter
push
add
movsb
stos
mov
pop
imul
lahf
popf
mov
je
arpl
push
repnz
add
lret
dec
fdivr
inc
jne
pop
and
jb
fldl
insb
cwtl
mov
enter
pushf
sub
mov
lret
test
xor
sub
addl
or
sti
lods
shlb
aaa
clc
shlb
pop
jge
dec
out
pop
int
mov
cmp
push
mov
inc
fiadds
daa
inc
aaa
and
xchg
jns
clc
shll
mov
push
jns
sbb
outsb
inc
jno
xchg
sbb
rol
xchg
xchg
mov
dec
cld
jae
xor
mov
testl
js
sub
and
sub
add
dec
and
jbe
add
int3
pop
popa
lods
pushf
push
ds
xchg
addr16
push
clc
lret
imul
lods
push
adc
or
lret
ficoms
pop
sub
movsl
ss
push
insb
add
int3
std
aaa
or
ret
notl
or
bound
jnp
ja
push
cmc
lahf
scas
dec
orl
insb
insl
popf
xchg
flds
push
sub
fnstenv
std
mov
inc
fwait
scas
push
shrl
cmp
push
mov
rcr
dec
jnp
cs
pop
jae
pop
ret
enter
sub
add
jg
xchg
popa
or
mov
pushf
lods
pop
outsb
xchg
and
cmp
mov
inc
push
jle
mov
sbb
popf
ret
and
test
aam
pop
mov
adc
fisttpll
int
or
push
push
or
into
pop
and
out
inc
mov
mov
gs
or
lahf
jmp
lock
add
fimull
adc
hlt
gs
data16
cmpsb
pop
insl
test
ds
bound
and
xchg
aaa
fs
dec
out
pop
cmp
icebp
out
into
mov
push
in
sbb
dec
and
mov
jmp
adc
xor
pushf
popf
bound
stos
aam
out
adc
mov
sbb
inc
and
fisttpll
fbld
jnp
lcall
cltd
inc
xor
test
push
outsl
jo
dec
xchg
xchg
cmp
mov
xor
xor
jne
cs
arpl
pop
inc
imul
inc
add
xor
sti
dec
pop
data16
sti
cmp
jg
mov
mov
dec
popf
xor
or
jp
stc
mov
add
sub
loopne
xor
pop
add
mov
rcll
sub
loopne
mov
mov
js
ficoms
push
sbb
xor
bound
inc
ljmp
adcb
and
nop
and
dec
jl
ja
sub
sub
popf
lea
pop
out
xchg
jecxz
sbb
cmp
ret
icebp
xor
dec
je
pop
test
sub
cmp
or
adcl
jge
and
out
add
popf
je
add
sbb
imul
or
sub
in
test
mov
xchg
in
adc
or
shlb
push
pop
inc
mov
pop
shl
insl
aaa
mov
adc
addr16
cli
aaa
dec
mov
push
or
mul
dec
jb
inc
out
fndisi(8087
mov
or
test
or
sub
aad
sbb
outsl
sbb
or
ja
iret
testl
in
and
inc
lret
push
sub
lret
pop
mov
cs
cmc
mov
push
xor
nop
inc
sbb
insb
scas
jg
outsb
mov
imul
rcll
mov
and
add
cmp
sbb
mov
jg
cli
xchg
ss
or
xor
jno
mov
adc
sbb
popf
sbb
in
outsb
and
pushl
mov
xchg
add
and
jl
imul
adc
cld
es
es
inc
push
pop
push
push
jae
jne
rcr
push
or
repnz
scas
bound
pop
xor
adc
sbb
xor
sub
push
lea
inc
inc
mov
xchg
movsb
popa
sub
push
int
icebp
daa
push
outsl
into
lret
inc
movsl
lcall
std
add
das
cmp
movsl
push
cmp
mul
enter
pop
pop
in
or
mov
icebp
aas
daa
into
xchg
adc
sbb
loope
xor
push
daa
push
add
push
arpl
in
insb
pop
into
in
lea
daa
lock
je
pop
aas
sub
sub
movl
pop
and
and
xor
stos
push
sub
mov
mov
mov
lahf
or
xchg
jg
or
andl
stc
rcr
mov
subl
shll
jp
fcmovne
adc
jno
adc
js
push
arpl
mov
xor
orl
dec
push
in
lds
nop
stos
xor
jmp
sbb
cwtl
addr16
sub
loope
pop
sub
and
stc
outsl
fidivl
jno
jmp
dec
inc
push
shld
cld
lods
in
das
xor
pop
or
outsl
sub
dec
jne
nop
pop
adc
ret
dec
inc
dec
popl
mov
out
icebp
cmp
dec
mov
sub
in
repz
adc
enter
fsubs
mov
xor
or
dec
and
test
jo
mov
shl
pop
sub
xchg
lret
adc
xchg
stos
sti
test
push
ljmp
cltd
sub
lret
jae
push
mov
push
das
sti
or
xlat
mov
cmpsb
push
loope
int
sbb
xorb
mov
push
pusha
lret
imul
push
mov
ret
popa
lods
or
fdivrs
jg
daa
jg
ret
sbbb
inc
pop
and
xor
mov
sbb
jmp
add
cmpsl
cs
outsl
clc
test
shrb
mov
aam
bound
mov
rol
or
or
mov
das
es
test
mov
and
fstl
push
or
pop
mulb
sbb
jmp
push
aad
pop
enter
mov
or
adc
hlt
push
orb
outsl
sar
test
inc
mov
and
sub
or
push
into
mov
cltd
daa
sbb
sub
mov
neg
imul
insl
repnz
jp
stos
gs
pop
pop
jge
adc
in
test
fs
ret
mov
imul
sahf
sub
adc
sti
add
jl
fistpll
or
cltd
divl
orl
scas
pop
push
push
jbe
sti
push
mov
xchg
cs
xor
xorl
loope
jle
dec
cmp
mov
xor
jmp
push
rclb
or
adc
cli
mov
ret
adc
das
int
and
les
jle
mov
aaa
arpl
add
adc
mov
and
testb
nop
fisttps
jg
jns
into
dec
mov
xor
add
sbb
inc
imulb
sbb
bound
jmp
pop
cli
or
cmpsl
movsb
loop
jae
inc
stos
repz
dec
shrb
push
push
and
popf
xchg
fstpl
mov
addr16
pop
jge
dec
dec
std
lcall
lods
cmp
xor
pusha
ja
lock
imul
dec
test
lock
in
es
push
mov
mov
ret
mov
jns
sbb
ja
stc
sub
jo
data16
xchg
ror
sbb
movsb
mov
or
xor
mov
sbb
cmpsl
cmp
clc
jge
or
popa
push
mov
jb
fstpl
ffree
xor
push
bound
in
inc
inc
sarl
xchg
push
jmp
add
cmp
repz
mov
xlat
inc
lret
ss
xchg
lret
inc
sbb
mov
sub
inc
test
sub
dec
xor
lcall
cmp
pop
push
andl
cld
mov
xor
add
clc
fs
clc
pop
mov
and
xchg
pop
mov
add
div
imul
push
scas
or
xchg
pop
adc
shr
add
loop
jns
jo
and
xchg
sbb
lods
cmpsl
jns
fs
stc
add
movsl
jno
roll
inc
in
test
scas
mov
jno
clc
ja
mov
insb
iret
and
sbb
repnz
xor
mov
push
pop
dec
bnd
jo
pushf
sub
dec
dec
xchg
push
cltd
lea
mov
mov
sbb
loopne
repz
out
aad
sub
xor
push
dec
push
subb
enter
push
jge
sbb
jo
xor
nop
cmc
nop
cmpsl
lret
and
popa
pop
addr16
mov
dec
inc
and
xchg
jge
loope
into
inc
int3
iret
adc
jge
push
out
movb
dec
xchg
and
leave
ja
sbb
addr16
addr16
push
iret
ds
sub
mov
xchg
icebp
in
or
sbb
je
sub
popf
sbb
inc
aam
xchg
pop
subb
ja
mov
sub
and
dec
sub
and
test
sbb
inc
mov
dec
pop
sbb
pop
sub
out
incb
push
js
repz
pop
sbbb
pop
jae
rcrb
fsubr
aad
push
mov
in
push
adc
in
ret
add
adcb
jecxz
in
or
popa
dec
ja
pushl
jb
push
fiaddl
gs
push
push
adc
and
and
not
cmpsb
lret
mov
repnz
sub
addl
scas
dec
lods
idivb
jl
push
inc
sbb
pop
dec
out
std
or
cmp
xor
pop
sahf
icebp
aaa
add
push
and
inc
repnz
adc
xchg
xor
gs
mov
xchg
jg
leave
bound
fcoml
fisubs
cmp
xchg
in
inc
mov
jnp
clc
bound
ror
jns
pop
xor
lcall
ss
fmull
and
inc
mov
push
jo
mov
int
jl
adcb
push
xchg
xchg
xchg
shll
mov
adc
push
add
icebp
xlat
cmp
stos
dec
sbb
pop
jno
or
fnstsw
clc
aad
mov
pusha
or
sahf
jecxz
push
pop
jge
xchg
push
inc
push
shlb
js
push
add
lahf
in
shl
adc
dec
xchg
xchg
sbb
addr16
inc
sahf
dec
push
xchg
into
shl
mov
adc
and
mov
jmp
inc
adc
test
or
insb
fwait
cmpsb
cmp
lods
loop
push
jnp
add
sub
in
and
jno
jne
outsb
pop
push
clc
sbb
insl
in
dec
and
sub
jg
ds
pushf
stos
inc
mov
loope
push
popl
testb
addr16
mov
inc
mov
arpl
inc
cmp
pusha
sti
dec
ds
out
pop
cmpsb
aam
out
jp
addb
sahf
push
iret
pop
fdivrl
sti
jl
inc
sbb
in
mov
add
xor
jmp
xchg
mov
xor
cmp
dec
push
fnstcw
jno
sub
push
sub
mov
jmp
in
clc
in
and
xchg
ror
adc
jo
leave
add
mov
leave
dec
sbb
insl
aaa
cwtl
push
cld
hlt
mov
gs
add
jp
jnp
jle
pop
or
or
pop
cmpsl
or
xchg
pushf
xchg
aam
dec
mov
sub
and
sub
mov
mov
clc
xchg
push
enter
cmp
stos
and
sbb
xor
jne
cmp
ljmp
and
stos
call
adc
adc
pop
adc
sbb
push
dec
out
adc
push
stc
pop
or
fstp
push
ja
xor
out
mov
lds
or
sbb
mov
mov
mov
dec
xchg
jle
inc
dec
in
idiv
cwtl
ret
add
iret
xchg
cmp
adc
lds
mov
and
and
cmpsl
icebp
hlt
insl
test
inc
sbb
dec
orl
out
repz
test
xchg
push
stos
cmc
mov
dec
inc
sbb
gs
outsl
pop
out
imul
push
lock
cmp
sub
sbb
mov
mov
shl
mov
jne
mov
and
sbbb
dec
jl
das
or
inc
clc
icebp
js
loopne
fdivs
aas
xor
cwtl
mov
adc
or
jmp
mov
mov
pop
inc
pop
add
cmp
adc
ret
jne
add
cmpsb
push
pop
xchg
xchg
sub
cwtl
out
das
cld
insb
jle
adc
orl
or
rol
xchg
pop
mov
mov
test
mov
test
xchg
in
movsb
mov
lods
or
push
add
pop
adc
sbb
cmpsl
push
push
and
inc
add
mov
inc
pop
add
psubusb
repz
push
imul
test
pop
push
lret
sarl
and
dec
frstor
pushf
ret
test
cmp
pushf
or
jecxz
and
out
add
push
cmp
lods
mov
les
cmp
add
mov
inc
nop
pop
push
out
pop
iret
outsb
icebp
stc
mov
sub
or
jmp
xor
fadd
mov
cmp
mov
xchg
mov
xchg
and
hlt
jle
pop
shll
fwait
mov
imul
adc
adc
mov
pop
and
cmpl
jecxz
adc
mov
push
pop
iret
push
mov
divb
aam
out
and
adc
xchg
mov
xlat
jbe
add
out
cltd
jo
mov
loop
mov
ds
add
fadds
subl
sub
scas
sub
mov
inc
dec
imul
and
sub
dec
push
pop
xchg
cmpsb
lods
inc
lock
sti
jl
scas
dec
mov
inc
pop
mov
xor
jp
outsl
add
cli
dec
jb
repnz
mov
into
mov
or
cmc
mov
imul
outsb
test
or
ss
push
jge
inc
xchg
les
dec
ret
lret
repz
add
jg
dec
pop
loopne
loopne,pn
jb
cmp
push
scas
clc
dec
clc
mov
cmp
stos
pushf
push
mov
sub
pop
mov
jle
jae
dec
lret
sub
and
xor
push
xor
out
pop
push
mov
sbb
cld
arpl
outsb
cmpsl
lock
sbb
mov
cmp
movsl
push
adc
ss
fs
movsb
scas
cld
das
xlat
mov
orl
test
and
jge
sub
mov
dec
xor
add
push
xchg
out
mov
jge
mov
push
mov
call
lods
in
sub
lods
push
jne
xlat
add
sub
insb
hlt
out
aas
loop
lret
imul
leave
cmp
mov
test
imul
mov
hlt
cmc
sbb
ljmp
fdivs
xchg
jb
lods
das
jb
xlat
mov
dec
insb
mov
mov
insb
mov
xor
shl
ss
leave
fisttpll
lret
push
in
mov
jl
and
sbb
sarb
enter
popa
mov
add
pop
pop
shll
push
test
mov
sbb
test
sbb
outsb
clc
cmpsb
push
mov
negl
movsb
sti
add
push
ret
stos
mov
jno
hlt
das
jecxz
sub
xchg
push
inc
addr16
push
shlb
jp
lret
fdivrl
cmpsb
fcompl
loop
jbe
xchg
pop
ret
inc
xor
pop
dec
dec
bound
push
mov
scas
aad
xor
jl
jnp
cmpsl
xchg
leave
jnp
lret
pop
dec
ss
push
mov
mov
push
mov
loopne
ss
xchg
fisttpl
inc
pop
stos
pusha
xchg
jmp
pusha
insl
inc
out
shll
bsr
mov
ror
int
pop
jbe
sbb
gs
insl
jnp
cld
dec
jmp
or
and
sbb
inc
stos
imul
sbb
imul
pop
xor
repnz
or
gs
cltd
dec
pop
jbe
movsb
lret
insb
add
fisttpll
add
mov
lea
fnstsw
outsl
int
mov
push
test
ss
cmp
dec
call
adc
mov
sub
pop
int
fdivrl
jg
pushf
movb
mov
lret
push
popa
adc
mov
enter
sahf
mov
fidivrl
inc
cwtl
jno
outsb
adc
hlt
push
std
mov
adc
or
rcrl
jecxz
xor
inc
addl
int
cmpsl
inc
and
mov
clc
faddp
add
int3
test
xchg
int
sub
ja
sub
adcb
xor
sub
push
mov
mov
push
dec
test
jp
nop
dec
sarb
pop
repnz
lcall
nop
lds
add
push
or
negb
dec
ret
ja
mov
xchg
sbb
xchg
and
sub
mov
push
sbbb
sbb
clc
addr16
ret
dec
sub
mov
rcrb
jbe
pop
xor
cmc
cmp
lods
mov
in
sub
jmp
sbb
mov
or
mov
mov
cmp
mov
sbb
jge
push
int
cmc
mov
in
lahf
pop
and
cmc
stos
jl
cmp
inc
jno
jae
mov
sarl
sar
dec
push
push
scas
dec
imul
in
add
adc
in
scas
xor
push
dec
jmp
mov
cmpsb
adc
sbb
pop
ficoms
fs
xchg
test
push
stc
adc
push
pop
test
push
icebp
mov
push
sub
sbb
xor
xor
call
push
push
adcl
cmpsl
dec
dec
jl
stc
add
js
xchg
jecxz
cmpsl
ss
and
mov
jl
or
lods
aad
mov
cmc
popf
push
jp
or
cmp
fwait
rolb
add
lcall
jo
or
in
mov
xchg
shl
leave
mov
lods
or
mov
mov
nop
dec
idivl
sahf
in
jecxz
mov
mov
mov
fiaddl
mov
push
push
sub
ffreep
mov
fdivrs
popl
push
in
inc
adc
in
pop
pusha
pop
rolb
add
fdivs
adc
push
xchg
dec
ljmp
push
sub
push
outsb
inc
cld
fstps
sbb
dec
call
test
sbb
pop
dec
push
mov
addr16
mov
sub
jge
lahf
stos
jl
jns
add
mov
dec
popa
or
xor
lcall
into
lahf
lock
xor
sub
inc
lds
inc
stc
inc
xchg
nop
sbbl
cmc
xchg
or
jp
dec
pop
and
icebp
mov
fsubp
xor
xor
mov
cmpl
loopne
sbb
xor
jo
imul
push
in
lcall
pop
pop
fldt
sbb
mov
aas
pop
xchg
orl
jno
push
mov
xchg
notb
fisttps
mov
pusha
imul
enter
testb
sub
les
sbb
stos
ja
inc
rcl
imul
aas
ret
lock
jmp
in
aam
adc
cmp
popa
xchg
mov
jl
mov
jb
cmp
lcall
mov
bnd
bound
and
aam
xor
mov
xchg
adc
les
test
mov
xor
and
arpl
inc
in
inc
std
ud1
idivl
cwtl
push
adc
negl
aaa
mov
pop
imul
rorb
dec
mov
stc
aam
imul
push
and
and
add
cmpb
inc
iret
jnp
mov
xchg
mov
aas
es
and
mov
adc
lods
ret
xor
loop
ja
mov
fs
jg
mov
jecxz
into
movsl
cli
inc
mov
aaa
mov
pandn
and
jl
sbb
fprem1
xor
mov
push
inc
inc
pop
and
sbb
icebp
mov
jecxz
ret
dec
sbb
jbe
mov
pop
movsl
arpl
stos
cmc
enter
cmp
cmp
cmp
ss
arpl
ja
push
mov
add
ljmp
out
jnp
mov
pop
mov
xchg
or
pop
mov
and
stos
negb
xchg
mov
neg
fiaddl
bound
cltd
test
cltd
fs
std
fiaddl
jnp
popf
adc
mov
pop
loop
sbb
jne
punpckhbw
divl
inc
stos
mov
jnp
or
sbb
xorps
call
pop
xchg
in
data16
imul
inc
xor
pop
cmpsl
push
aaa
inc
or
stc
xor
or
xchg
pop
xchg
pop
jbe
daa
shl
xor
fwait
add
inc
lods
pop
das
pop
leave
arpl
ret
adc
dec
lds
incl
jb
scas
dec
mov
lahf
fwait
out
daa
subb
hlt
and
xchg
pop
or
jnp
faddl
nop
dec
mov
ljmp
and
shl
push
cltd
insl
shl
push
js
jl
outsb
inc
mov
mov
inc
dec
adc
xor
cmp
ljmp
fisubs
decl
jg
xchg
les
push
fs
fs
ret
push
xchg
out
and
mov
cmpsl
test
push
pop
int
pop
mov
mov
sub
cwtl
pop
in
push
mov
jbe
stos
in
xchg
and
stos
or
push
pop
push
out
sti
repz
lock
lahf
xor
icebp
nop
lea
push
cmp
outsl
lcall
adc
pop
hlt
std
xchg
or
in
mov
push
push
cmp
or
rcr
sub
mov
ds
scas
lds
pop
or
stc
lret
mov
iret
inc
dec
xor
rep
lock
lods
mov
or
jecxz
xchg
aam
notl
cli
mov
inc
mov
ss
repz
ds
pop
pop
add
xor
sbb
ss
or
cld
movsl
sbb
mov
mov
pop
add
out
jbe
xorb
test
js
popa
push
add
out
ja
leave
enter
xor
xor
into
dec
xchg
fdivrl
xchg
jnp
or
imul
jne
push
pusha
aas
insl
cmp
inc
and
mov
dec
inc
jp
aaa
fbstp
icebp
repz
add
adc
mov
xchg
shll
jns
dec
sbb
push
dec
out
jb
aam
into
sub
aad
pop
push
adc
push
mov
scas
fadds
clc
push
or
dec
pop
leave
sub
in
inc
fcompl
mov
xor
popa
mov
push
jb
add
icebp
dec
loopne
xchg
cmp
push
cmp
lcall
push
mov
js
mov
and
sar
and
push
jmp
xor
scas
cmp
std
mov
ds
dec
xchg
jmp
loope
in
adc
mull
hlt
scas
pop
mov
pop
or
icebp
dec
sbb
dec
repnz
push
testb
jmp
sub
cmpsb
and
push
sub
cmp
notl
in
leave
mov
je
mov
pop
js
adc
adc
test
mov
dec
push
cmp
jecxz
out
fnstcw
fcoml
inc
sub
or
xor
cmp
into
or
or
or
pop
mov
es
add
sub
sbb
mov
sub
pop
pop
das
imul
dec
insb
jp
jg
pop
out
push
mov
mov
xor
jb
push
and
std
mov
xor
jae
xchg
cmc
pop
hlt
adcl
sub
sub
mov
out
sbb
push
xlat
jo
sbb
jne
stos
xchg
test
mov
inc
mov
jmp
jb
in
lsl
aad
or
cs
je
cmp
sub
js
cwtl
mov
cmpsl
outsb
xchg
cmp
pop
mov
push
inc
movsl
jp
xchg
xor
xchg
out
push
lahf
fistpl
leave
push
push
sbb
addr16
jnp
test
mov
inc
or
enter
out
pop
adc
and
cmp
mov
mov
mov
xor
repnz
jge
test
mov
test
stos
leave
lcall
sbb
sub
dec
insl
sub
cmp
mov
imul
dec
repz
xchg
ljmp
lret
rcrb
mov
mov
aam
mov
aas
outsb
dec
dec
lods
jb
pop
add
ds
inc
popa
into
andl
sub
sbb
test
mov
shrb
gs
pusha
push
inc
out
push
add
xchg
or
sbb
inc
adc
push
sbb
cmp
lret
xchg
lods
and
and
or
incb
push
test
stos
pop
pop
pop
outsb
loope
cmpsb
sbb
add
jb
dec
rcrb
into
xor
ficoms
pavgw
xor
addr16
scas
dec
loop
outsb
mov
adc
pop
scas
dec
push
out
push
mov
pop
adc
push
fs
aam
jno
call
std
out
roll
notl
sti
sub
dec
gs
xor
xchg
call
repnz
ret
mov
or
popa
mov
sbbb
loop
movsb
lods
ss
push
mov
inc
mov
cmp
jmp
pop
pusha
aaa
in
out
call
es
stos
or
xor
icebp
or
cmc
cmp
addb
in
sub
dec
and
lods
push
mov
mov
into
mov
adc
hlt
insl
cmp
lret
mull
sbb
sub
add
mov
int3
lods
aad
ljmp
pop
fs
imul
cmpsb
adc
mov
sti
xorb
lahf
and
mov
popf
sub
push
pop
jne
mov
cli
mov
std
or
jge
rorl
add
sbb
pop
es
inc
xchg
xor
ss
jne
and
jnp
lret
fbstp
adc
cmpsl
lock
or
jne
mov
cs
pop
std
pop
mov
xor
nop
insb
xchg
aaa
jnp
sbb
cmp
inc
popa
arpl
ljmp
cmp
cmpsb
dec
nop
cmpsb
or
shlb
gs
pushf
xchg
enter
aaa
int3
iret
push
jg
add
dec
jg
push
add
jae
addr16
pushf
or
fsubrl
adcb
pusha
sbb
movsb
out
push
pop
clc
xchg
mov
mov
xor
add
sbbl
loop
and
dec
adc
adc
xor
mov
mov
out
ljmp
sub
cli
dec
lods
or
cmp
or
add
xor
xlat
pop
dec
mov
and
and
push
pop
cmpsl
push
sbb
fadd
push
adc
js
inc
or
jle
sti
pop
push
dec
lret
test
sarl
pop
mov
mov
sbb
test
push
out
fldcw
xchg
dec
jmp
dec
fsub
or
adcl
clc
and
sbb
pop
scas
inc
das
xor
and
push
mov
xor
pusha
sub
push
inc
jge
fs
insl
mov
push
xor
jae
sti
xchg
jp
sbb
push
stc
outsb
mov
lock
sbb
test
jne
shll
jbe
or
cmp
mov
sub
dec
mov
inc
lcall
hlt
cs
aad
addr16
fwait
adc
arpl
dec
insb
mov
push
mov
jle
icebp
adcb
aam
dec
dec
add
rcl
pop
sahf
daa
and
mov
xor
mov
dec
out
lods
and
ret
add
mov
pop
dec
xchg
jp
addr16
jno
jecxz
icebp
sub
push
mov
mov
inc
nop
jle
bound
pop
std
in
dec
xor
xchg
dec
dec
out
pop
jnp
out
push
inc
sahf
out
mov
roll
jbe
mov
jo
push
js
les
mov
adc
das
mov
loopne
jnp
mov
jnp
jecxz
add
leave
in
es
xchg
dec
xchg
mov
mov
sub
frstor
fstps
arpl
mov
jmp
das
dec
push
int
push
insb
cmp
stos
sub
pop
add
inc
iret
adc
mov
dec
fsubrp
push
scas
psllw
inc
loope
lahf
dec
enter
adc
mov
leave
jp
push
mov
repnz
loopne
into
xchg
insb
nop
es
and
pop
push
jae
repnz
in
xchg
cmp
shrb
pop
xchg
mov
mov
test
dec
in
out
sub
outsb
outsb
iret
mov
or
adc
mov
outsl
mov
mov
push
jle
loopne
mov
mov
jmp
in
sub
adc
mov
aad
adc
jp
and
das
or
loope
pusha
sub
jle
add
insb
sub
jns
sbb
nop
adc
xor
les
push
popf
hlt
push
jbe
pop
stc
pop
pop
std
aad
mov
mov
cmp
push
cmp
mov
call
xchg
jmp
and
aaa
xor
pop
js
test
aad
jne
cmpsb
ljmp
add
repz
inc
cmp
test
xchg
pop
shrl
mov
cmc
mov
in
add
into
es
pop
xchg
mov
lods
push
js
dec
lea
loope
xchg
mov
adc
adc
sub
and
in
or
and
and
loop
cmp
and
xor
mov
inc
scas
and
std
shll
inc
cld
dec
dec
xor
test
mov
add
cmp
mov
repnz
and
adc
mov
mov
sub
lods
jae
into
push
mov
out
es
mov
mov
cmp
lret
movsl
nop
les
rcrb
test
popf
fnstcw
lahf
dec
mov
pop
sar
fsubp
mov
pop
push
sub
cli
out
xlat
loop
xor
adc
shl
add
daa
dec
lea
and
sbb
fistps
int
xor
sub
pop
addr16
scas
rorb
loopne
pop
xchg
cli
cmpsl
mov
scas
sub
xchg
inc
lds
jecxz
and
adc
xchg
ds
or
enter
xchg
inc
ret
mulb
push
das
ja
jne
sub
lcall
push
cs
gs
cmpl
into
add
rorl
mov
push
add
fisttpll
adc
xor
mov
shlb
sbb
inc
mov
push
jge
test
sub
fldl
aam
adc
jo
dec
out
mov
js
cmpsb
jge
fildl
int3
mov
sbb
dec
mov
loop
dec
ret
inc
push
ljmp
dec
mov
shlb
int3
mov
cmp
xchg
push
ja
int
cltd
getsec
adc
shrb
jle
push
dec
pop
lcall
cmc
and
clc
cwtl
clc
mov
leave
faddl
stc
shl
add
inc
push
adc
clc
adc
push
in
popf
pop
add
out
sbb
rcrl
add
movsl
js
push
outsl
in
and
push
int
stos
iret
xlat
mov
push
push
dec
adc
mov
adc
xor
push
hlt
and
mov
int3
je
rep
fisttps
dec
pop
into
and
insl
or
adc
dec
mov
or
int3
lahf
mov
cld
ljmp
inc
cld
jns
jbe
xchg
cmpsl
sbb
loopne
or
rorl
inc
lock
sub
adc
mov
mov
fdivr
jnp
das
pop
mov
int3
outsb
imul
xchg
enter
inc
xor
fstps
push
in
push
repz
xchg
das
sbb
cwtl
dec
pshufw
sbb
test
fwait
mov
inc
out
xor
push
stos
sub
inc
mov
adc
jp
mov
xchg
sub
rorb
jmp
sub
adc
mov
mov
dec
nop
add
lcall
cmp
daa
rorb
leave
jp
call
push
orb
dec
mov
repz
ss
push
in
add
mov
dec
popf
lahf
mov
push
sbb
xchg
mov
les
dec
in
popl
imul
and
nop
daa
xlat
jb
mov
or
cmc
jl
repnz
pop
xlat
ret
and
dec
loopne
add
lahf
mov
scas
jno
popa
pop
test
test
sbb
dec
mov
sbb
pushf
adc
rcll
dec
daa
or
inc
mov
lcall
sbb
adc
das
nop
pop
mov
adc
sub
arpl
jge
cs
add
mov
push
sbb
cmp
dec
ficoms
lods
xchg
fwait
xor
dec
icebp
sub
gs
and
push
mov
arpl
lea
pop
inc
jnp
mov
popf
dec
xchg
fbstp
inc
mov
or
sar
test
repnz
and
jmp
inc
push
faddl
lds
inc
pop
xchg
push
dec
dec
fsubl
jl
mov
adc
outsl
cmpsl
pusha
lock
push
xchg
jne
jecxz
flds
sbb
jbe
call
or
inc
mov
jbe
stc
push
aam
flds
sub
into
mov
js
xor
lret
js
cld
insb
out
inc
bound
inc
adc
jns
out
cmp
sbb
add
out
mov
fwait
jae
xor
out
movsb
sub
add
loopne
jne
data16
sub
int
stos
pop
sbbl
cmp
aaa
cs
in
aas
jg
leave
ficompl
mov
adc
ds
inc
arpl
movsb
ljmp
mov
lods
ret
jno
adc
sbb
rcll
mov
xor
jns
nop
popf
xor
movsb
subl
and
sti
cs
mov
fcmovbe
xchg
xchg
cmp
int
sub
jae
inc
mov
rcl
xor
popa
call
xor
fsubrs
mov
and
aam
sub
sub
and
sarb
shl
sti
sarb
and
push
mov
fildl
jmp
add
xchg
pop
das
leave
in
pop
pop
inc
lods
lahf
std
dec
scas
cwtl
mov
sahf
jecxz
dec
test
ret
xor
aad
push
jle
fistpl
std
jg
sbb
in
fstpl
loop
jl
xchg
pop
fstp
adc
and
fcmovu
mov
ret
pop
push
lock
mov
arpl
jl
fs
cmp
imul
dec
ss
popa
cltd
pop
call
scas
out
push
loop
mov
adcl
and
jne
adc
add
jno
sbb
xor
addl
ret
jecxz
shl
push
inc
jl
add
cli
movsb
in
aaa
fndisi(8087
clc
sbb
loopne
int3
mov
insb
sub
push
or
addl
das
pop
test
adc
gs
lahf
js
out
sbb
stc
jecxz
adc
mov
and
das
sbb
repnz
mov
pop
xor
cld
mov
and
cwtl
cmp
sbb
lds
bound
adc
xchg
add
outsb
push
jmp
popf
repz
dec
fstps
adc
push
sbb
aad
jp
pushf
sahf
jmp
cmp
into
push
pop
cmpsb
repz
sti
pop
subb
pop
pushf
jl
cli
pop
xor
shrl
push
jno
cld
add
sub
push
pop
imul
or
sbb
stos
jb
inc
es
nop
scas
pop
mov
pop
addl
cmp
xchg
inc
mov
sbb
xchg
push
cmp
mov
xor
adc
jne
xchg
mov
push
xor
out
mov
xchg
jnp
mov
xor
mov
js
shl
adc
or
fucom
es
es
es
inc
add
lahf
sub
add
scas
mov
jne
fwait
pop
xchg
mov
cmpsl
cmp
mov
sbb
imul
xor
cltd
jbe
jle
aas
mov
movsl
inc
or
add
pop
stos
mov
xor
mov
pop
xchg
mov
jo
jecxz
or
mov
jo
lds
or
ljmp
shld
add
mov
ljmp
pop
jnp
pop
dec
popa
ficoms
dec
push
sub
test
xchg
inc
scas
jl
cmp
jg
dec
add
pop
sub
push
fucom
lods
and
dec
lods
cmp
xchg
repnz
xchg
or
pop
cwtl
iret
adc
sbb
adc
xor
icebp
sti
mov
pop
jg
mov
ljmp
mov
jbe
inc
sbb
orl
sub
and
pushf
sahf
shrl
sbb
ja
imul
jl
or
push
les
mov
jmp
loop
push
les
jmp
imul
dec
mov
in
push
cli
aaa
adc
mov
sbb
hlt
shll
or
mov
xor
jmp
aas
inc
loop
dec
repz
sub
cwtl
mov
loope
out
bound
js
sbb
inc
das
cmp
mov
aad
adc
xchg
cwtl
jmp
mov
xor
push
sbb
sub
push
mov
xlat
js
fstp
jbe
fidivl
jne
std
inc
sbb
xorb
mov
mov
jae
pop
sbb
push
mov
pop
push
jl
std
and
ret
test
fwait
inc
fistl
mov
rorb
aad
pop
cmp
fistpl
fucomip
inc
hlt
pop
fidivrs
testl
sbb
add
push
inc
sarl
xor
cli
cmp
xchg
push
pushf
xor
jl
lods
or
sub
sub
addr16
cmp
cltd
add
xchg
pop
in
cmc
sbb
inc
aam
ljmp
ret
inc
jnp
ret
sub
jne
push
dec
cmc
adc
aad
insl
xchg
xorl
sbb
push
add
fdivrs
int3
clc
bound
push
and
das
xchg
fs
or
mov
adc
dec
and
dec
ret
sub
lahf
mov
sub
push
jno,pn
hlt
sahf
repz
das
test
xchg
mov
jl
popa
jmp
pop
inc
xchg
pop
or
cmp
scas
sub
movsb
in
insl
mov
sub
jb
jns
fwait
sub
shlb
aas
jbe
xor
repz
cltd
and
adc
dec
add
cwtl
jbe
dec
xor
adc
add
fnsave
movsb
daa
popf
fbstp
fadds
fstps
push
ror
das
je
div
sysret
aad
mov
push
xchg
push
jge
adc
add
fnsave
sub
movsl
fwait
sbb
mov
inc
icebp
adc
fisttps
fildll
adc
cmp
shll
lahf
jae
out
mov
mov
xchg
dec
cwtl
sbbl
ja
or
out
fsts
lret
add
dec
iret
mov
std
sti
mov
jbe
pop
jmp
mov
aad
sbb
cmp
test
xchg
sti
fisubrl
xchg
mov
addr16
ds
in
loopne
xor
ja
xchg
fs
es
jns
add
popa
pusha
loopne
push
shrl
or
out
das
pusha
sarl
mov
push
shr
insb
int3
scas
dec
popa
or
stos
sub
out
icebp
iret
fwait
lret
inc
mov
loopne
imul
inc
addl
or
subl
mov
push
sbbb
and
xor
fildll
lods
sahf
inc
and
xchg
lcall
pop
enter
xor
in
in
je
mov
mov
adc
leave
pop
lock
xchg
lock
xchg
mov
movsb
repnz
mov
cltd
pop
jo
jnp
decb
rol
out
aad
xchg
addr16
inc
mov
dec
call
insb
sti
icebp
nop
test
xor
inc
test
add
adc
cli
es
pop
push
cli
fbstp
orb
dec
adc
mov
call
mov
xor
scas
mov
jmp
mov
xchg
pop
mov
or
or
loop
int
push
call
inc
out
hlt
lock
fsubl
fildl
xlat
pop
pop
cmp
lods
mov
lret
add
dec
xor
cwtl
sti
mov
jmp
push
jae
mov
in
mov
pop
cmpsb
xchg
xchg
lock
mov
pop
fisttpl
sub
xchg
rolb
push
mov
push
cmc
dec
cmpl
dec
test
pop
insb
mov
mov
jmp
dec
jae
loope
inc
ja
les
lods
xor
push
cmp
arpl
fistpll
mov
xchg
loop
stos
jp
mov
push
fidivs
jg
xchg
pop
fcompl
mov
cmc
mov
enter
inc
lahf
das
pop
inc
addr16
ret
ret
pop
dec
into
and
xchg
shr
daa
mov
aaa
mov
cli
jmp
xchg
into
daa
pop
inc
push
jecxz
xchg
push
jae
lods
lcall
iret
stos
add
les
jge
adc
aad
jl
test
xorb
sti
cld
mov
lods
mov
xchg
fwait
xchg
xor
sub
imul
data16
sbb
xor
pop
mov
mov
fcmovne
cli
orb
jne
lret
sbb
popa
jns
xchg
push
push
push
cmp
rcr
cli
imul
outsl
xlat
and
adc
stos
sbb
push
jecxz
es
insb
in
push
scas
sub
cmp
leave
sbb
pop
jno
xor
add
scas
xchg
sbbb
jo
lahf
in
mov
dec
imul
fldenv
imul
sbb
mov
add
cltd
inc
jo
subl
fs
sbb
pop
out
sti
and
inc
sub
sub
jp
cmp
push
mov
jb,pn
shl
mov
mov
sbb
mov
xchg
fmulp
es
rcrb
mov
mov
push
into
mov
mov
inc
fcomps
xor
cmp
arpl
je
int3
push
sub
xor
add
decl
cmp
cld
mov
sub
jl
popf
mov
cwtl
mov
call
es
ret
lods
dec
aaa
mov
rcrb
cmpsl
xchg
cmp
roll
sub
xchg
cmp
ret
out
mov
push
int
jge
sbb
daa
jb
imul
iret
js
scas
jb
inc
clc
or
xchg
add
sbb
xchg
push
pop
outsb
into
mov
mov
es
cld
push
xchg
popfw
jge
out
mov
call
inc
test
push
mov
cmpsl
pxor
mov
outsb
or
mov
fidivrl
xor
add
mov
mov
pop
cmp
addl
fildl
lea
adc
xor
fcmovb
out
mov
fwait
adc
xor
jecxz
jp
int
mov
xchg
inc
test
sbb
cmp
push
pop
mov
arpl
push
cltd
adcl
add
ret
outsb
mov
push
pop
fidivl
movsl
rorb
shll
shr
adc
imul
inc
mov
aaa
mov
xlat
lods
loopne
dec
test
lock
push
sbb
jae
push
push
mov
push
mov
aam
hlt
in
and
xor
cmpsl
scas
incl
cmp
test
jecxz
dec
or
mov
scas
rcrb
push
aam
cmpsl
dec
fwait
jmp
fisubrl
jnp
jb
dec
fsts
pop
or
repz
enter
xor
fsubrs
pop
rolb
into
add
add
jl
mov
jge
lahf
xchg
sub
testl
enter
into
mov
xchg
andb
xor
sub
shll
dec
mov
lret
adc
xchg
xor
adc
in
push
aad
add
push
jnp
daa
js
xchg
negb
dec
iret
xchg
dec
dec
dec
sarb
mov
add
push
dec
aam
jnp
mov
cmp
sbb
push
jl
mov
aaa
fsubrs
sbbb
test
and
cmpsb
aaa
inc
or
bound
movsb
shrb
or
pop
es
mov
adc
pop
lret
adcl
cmp
pop
sbb
sbb
jmp
sub
fcomps
rorb
cmp
movsb
pop
repnz
call
inc
punpcklwd
cmp
xchg
jbe
loopne
jae
push
repnz
ja
jp
fistpl
in
fucomp
jno
pop
fidivrl
cmpsl
add
push
mov
les
jl
std
xor
ljmp
push
mov
iret
and
aaa
pop
aam
js
jnp
lret
and
push
mov
pop
adc
jle
add
mov
call
das
sahf
or
out
dec
xorl
or
ret
pop
and
cmp
ud2
mov
adc
inc
call
int
cmovg
add
pop
mov
pop
inc
gs
stc
loop
and
loope
leave
pop
repz
pushf
inc
cmp
mov
cmc
dec
nop
movsb
sahf
jns
inc
mov
cmp
scas
push
aaa
je
cmovnp
adc
sub
faddl
cmovp
lret
adc
xor
inc
ror
mov
mov
pop
cmp
ljmp
hlt
xchg
adc
out
and
movsl
pop
icebp
fldl
xor
pop
lcall
lods
pop
inc
data16
imul
inc
mov
cmp
pushf
pop
imul
lea
xor
or
stos
mov
dec
dec
mov
popa
pusha
dec
dec
inc
lret
fst
cmp
loop
inc
fildl
sbb
adc
jo
dec
les
lock
loope
push
ljmp
mov
fsub
add
loopne
xchg
repz
movsb
pop
dec
and
mov
xchg
lds
push
cmp
jae
and
dec
sahf
sbb
mov
dec
repnz
bound
and
pop
shl
cmpsb
bound
lret
in
adc
sub
xchg
mov
inc
fisubs
and
mov
dec
adc
pop
sub
lret
mov
add
test
dec
in
mov
jno
mov
test
inc
mov
clc
fwait
xor
fwait
or
pop
mov
inc
and
mov
fmuls
andb
push
adcb
jle
ss
cmc
lahf
or
mov
in
push
or
orb
push
add
mov
adc
sbb
cmp
fiadds
test
or
ret
xchg
xor
or
mov
bound
int
push
jg,pn
ja
cmp
sbb
subb
jnp
jle
dec
add
cmc
xor
fcomps
arpl
mov
dec
push
cs
loop
sub
mull
pushf
movsb
sbb
add
jns
or
sub
dec
mov
outsb
call
push
lcall
jae
xor
dec
fwait
movsb
xchg
enter
jmp
jmp
subb
test
mov
sub
mov
adc
rorl
jl
jne
iret
jns
inc
pop
lcall
movsb
adc
add
clc
hlt
mov
cmp
dec
fsubs
insb
push
push
sbb
xor
add
in
push
and
and
pushf
lods
adc
mov
sbb
dec
cli
iret
imul
pusha
pop
in
mov
dec
inc
xchg
xchg
or
add
loope
pop
lock
mov
test
pop
shl
adc
movsl
out
dec
hlt
cmc
fnstenv
sub
pop
jle
cli
push
js
daa
cltd
dec
int
add
xchg
inc
inc
mov
mov
lret
add
jnp
test
jne
sti
es
dec
push
mov
mov
aam
aas
das
int
popa
les
sub
mov
in
jne
stos
push
push
pop
xchg
adc
jnp
inc
mov
and
insl
or
std
jno
jae
gs
stos
adc
mov
xor
ljmpw
jne
sbb
arpl
mov
andb
mov
sarl
and
jae
mov
pop
jl
sbb
rolb
sub
xchg
inc
mov
sub
outsb
imul
popf
stc
jl
stos
ljmp
xchg
push
xchg
mov
jmp
and
scas
cmpsl
mov
adc
or
push
test
sbb
fidivrs
cmpsl
mov
lret
inc
loop
out
icebp
decl
xchg
jno
rcl
fnsave
pop
push
xchg
sub
mov
xchg
push
mov
add
scas
jp
mov
xchg
sbb
sub
pop
sahf
jp
and
pop
sub
imul
scas
andb
jmp
dec
xor
fs
fbstp
cld
xor
or
adc
insb
ljmp
dec
repz
inc
dec
mov
cmc
call
rcr
sbb
stc
mov
movsb
divl
mov
mov
fdivl
fsub
pop
adcb
pop
mov
enter
out
xlat
cmpl
mov
mov
nop
sbb
in
js
sub
mov
dec
jl
test
jmp
xchg
aas
inc
sub
and
cmp
loopne
sbb
dec
cli
test
mov
ret
stos
out
mov
or
ret
adcl
pop
fsubl
insb
xchg
fstpt
fidivl
add
bound
cmpsl
mov
xchg
and
leave
xchg
rorb
in
lret
and
inc
clc
int
pmaddwd
cmc
add
fsubs
xlat
mov
stc
mov
mov
shll
fs
ja
outsb
ja
test
sbb
cmpsl
or
gs
or
jecxz
sub
insl
lds
mov
gs
adc
iret
adc
jo
mov
cmpsb
std
sbb
stc
test
push
movsl
psrld
xlat
das
xchg
mov
ja
mov
sub
pop
pushf
mulb
mov
ret
and
sbb
dec
js
pop
mov
mov
lods
push
loope
inc
shlb
clc
pusha
lret
mov
adc
xorb
inc
fwait
mov
mov
cmp
push
xchg
mov
into
xor
push
daa
fnstcw
sbb
imul
xchg
and
outsb
imul
cmc
insl
in
clc
inc
aas
pop
cmpsl
int3
mov
ja
shlb
mov
repz
adc
add
add
mov
nop
pop
loope
rcrb
addl
sub
daa
cwtl
aam
mov
jmp
push
addl
push
mov
out
mov
pop
push
jmp
add
idivl
fs
jp
outsb
sbb
test
fwait
sbb
nop
js
out
xor
fistps
test
inc
addr16
shll
fldcw
or
mov
sbb
inc
cvtdq2ps
ss
pop
xorl
shlb
inc
or
inc
imul
je
sbb
sbb
das
inc
mov
xchg
pop
in
xorb
arpl
pop
out
ret
out
incb
sbbb
push
ret
cmpsl
xor
cld
in
inc
fdivl
cmp
ja
mov
mov
inc
dec
into
insb
in
out
js
daa
inc
pop
test
cmpsb
test
inc
cli
int3
pop
lret
xchg
sbb
mov
scas
incb
out
sub
pop
scas
repz
lock
mov
adc
es
shlb
jno
sahf
shlb
out
inc
das
orl
sbb
popf
sub
sub
lcall
nop
jno
pop
xchg
aas
sbb
cmp
adc
push
and
fidivrs
pop
jae
mov
adc
and
cs
dec
ret
adc
jno
adc
outsl
ss
and
insl
push
lahf
inc
into
mov
inc
ja
sar
xor
idiv
popf
aam
xchg
movsl
xchg
sar
adc
movsb
andl
orb
aam
sub
adc
jmp
test
mov
in
into
or
rol
cwtl
add
or
out
testl
push
xor
adc
cld
cmp
push
sti
hlt
pop
fstpl
stos
sub
out
lods
mov
xchg
call
push
stos
mov
ficomps
push
mov
push
xchg
or
sbb
xor
mov
push
daa
cwtl
ljmp
dec
add
test
in
clc
fwait
add
pop
mov
cmpsb
test
mov
dec
dec
divb
rcr
pop
adc
mov
xor
data16
push
jne
xchg
jno
push
sub
sahf
mov
notl
or
les
sub
and
and
pusha
inc
popa
fimull
std
stos
push
push
and
jp
xor
xlat
addr16
push
movsl
or
or
mov
rcl
add
add
aad
inc
das
into
push
or
nop
mov
clc
lret
insb
rol
not
inc
and
push
add
dec
xchg
stc
lcall
push
mov
imul
aaa
cli
mov
xor
movb
mov
sub
frstor
push
inc
mov
movsl
and
xchg
mov
in
ret
push
cli
ffreep
jne
in
mov
cmp
push
sub
arpl
jmp
fldcw
xlat
test
popa
int3
pop
in
ficoms
sbb
lods
add
sarb
sbb
fwait
push
adc
lds
xchg
rclb
imul
sbb
in
cld
lods
outsl
xor
jnp,pt
sti
mov
push
jle
repnz
add
clc
xor
mov
mov
xchg
lock
sbb
outsl
test
lret
and
ffreep
scas
sub
pop
sbb
push
repnz
lret
fdivl
dec
fcompl
cmc
fs
add
jecxz
mov
stc
push
int
xchg
les
rcrl
fists
or
out
mov
fs
push
lahf
int
out
mov
mov
aaa
jae
jne
mov
adc
stos
dec
roll
pushf
cmp
lcall
mov
icebp
inc
cld
in
movsb
shrb
sbbl
popfw
enter
mov
jmp
shll
and
fsub
push
cmp
les
mov
ret
mov
xchg
ljmp
enter
xor
outsl
stc
es
xchg
jne
js
push
aam
inc
and
mov
sahf
dec
call
dec
add
and
adc
xchg
scas
enter
mov
sbb
mov
mov
into
xor
jbe
shll
loopne
mov
ljmp
xor
shlb
cmp
pop
jmp
and
shll
data16
aaa
jecxz
dec
pop
ficoms
mov
cld
aam
inc
pusha
xlat
popa
loop
jp
bound
and
adc
add
not
cld
lea
cli
fsubrl
aas
xchg
jmp
cmp
mov
daa
lret
or
pop
outsl
push
mov
inc
jl
orl
lret
dec
call
mov
clc
cmp
lret
push
pusha
popf
jle
stos
daa
fs
cmp
or
test
dec
push
add
jmp
pusha
mov
jl
add
jo
dec
jno
lea
push
daa
pop
inc
ret
imul
lahf
sub
push
test
lock
or
sbb
ds
rorb
movsl
cmc
test
ficoms
mov
cmp
rorl
fcmovnu
dec
mov
mov
mov
call
mov
cmpsl
and
ja
cmp
xchg
aam
xor
inc
scas
or
push
shrb
rcl
jno
sti
shl
mov
arpl
add
cltd
frstor
cld
pop
dec
or
into
mov
sbb
pop
pop
outsb
repnz
loop
out
call
test
cmp
hlt
mov
xchg
xor
sub
jnp
into
sbb
mov
pushf
fisttpl
jo
stc
and
xchg
filds
je
andb
push
inc
mov
inc
mov
mov
shrl
aam
fwait
int3
dec
mov
ja
pop
inc
inc
fmuls
cmp
loop
adc
addb
repz
sbb
push
mov
and
jb
push
xor
std
pop
addr16
pop
sub
cmpsl
push
inc
xor
enter
call
lods
xchg
sbb
mov
popf
in
xchg
test
cmp
movsl
mov
xchg
inc
rorb
mov
in
jp
jmp
xor
sub
adcb
call
dec
pop
xchg
mov
int
adc
jle
sbb
clc
andb
cmp
add
fnstcw
imul
add
lock
push
fnsave
jns
lods
enter
push
idivb
push
ja
push
gs
loop
and
adc
and
mov
cltd
or
xchg
xor
stos
jno
xchg
movsl
mov
aam
fisubs
cmp
add
enter
mov
mov
sbb
pop
cmpsl
adc
and
xchg
lret
lods
pop
je
dec
lea
mov
arpl
stos
stc
int3
or
popa
les
test
daa
jp
cmpsb
cmp
out
cmpl
icebp
mov
test
aas
lret
jp
adc
xor
comiss
jmp
xchg
std
add
lea
mov
pop
push
lcall
jbe
andl
sti
sbb
push
add
mov
in
mov
pop
jge
stos
or
sub
ret
enter
pop
mov
testb
jbe
loop
imul
cmpsl
xchg
loopne
lret
push
std
ret
inc
push
mov
sub
pop
inc
adc
cltd
xor
sbb
push
mov
dec
mov
stos
push
iret
cmp
inc
inc
ljmp
cmp
and
cmp
push
cltd
outsl
pop
outsl
icebp
jg
and
jno
lock
xchg
dec
adc
jg
orl
sub
cmp
add
mov
mov
stc
pop
stos
xchg
or
in
jno
mov
pop
push
inc
enter
cvtps2pi
add
xchg
cmp
pop
xchg
negb
into
jle
mov
nop
lahf
sbb
pop
shlb
clc
push
adc
or
mov
adc
hlt
leave
mov
stos
fimuls
xchg
clc
mov
sbb
leave
movsb
testl
or
call
mov
jno
push
xchg
pusha
in
rcll
or
leave
cmc
add
dec
xor
mov
pop
or
movsb
pop
in
mov
push
mov
arpl
mov
cmp
lret
popf
push
adc
jge
aad
lret
push
jle
pop
xchg
pop
insb
adc
jg
push
sbb
cld
add
in
iret
and
aaa
leave
insl
nop
adc
dec
mov
add
cltd
mov
enter
mov
call
sbb
shll
shll
sbb
insl
cli
cld
out
imulb
inc
stos
mov
xor
mov
das
sahf
sub
loope
mov
stos
mov
fisttpll
aas
scas
dec
hlt
test
add
scas
push
adc
and
jg
gs
xor
push
dec
pop
outsb
movsl
dec
dec
insb
sbb
enter
mov
xchg
cmp
adc
test
addr16
test
test
or
popa
ja
xchg
ret
mov
in
adc
inc
out
mov
out
cs
cltd
push
cmp
stos
push
flds
pop
ds
fdivs
arpl
cltd
fisubrs
in
cmp
outsb
pop
xor
fnstcw
sarl
xor
sarb
cld
scas
xchg
and
sbb
xlat
data16
add
repz
push
rcl
jbe
jno
repnz
fwait
aas
daa
rcrl
dec
test
jmp
add
ljmp
add
jge
loope
push
imul
pop
mov
pop
pushf
lds
mov
ret
mov
sbb
and
pop
sbb
push
jb
dec
movsl
pop
or
xor
mov
xchg
scas
sub
dec
pop
in
stos
movsb
dec
aad
cmp
mov
movsl
lcall
push
or
repz
pusha
int
icebp
add
add
cmp
mov
push
add
fsubrl
push
and
je
push
inc
int
lret
outsl
cmp
push
int3
mov
jle
test
lock
sbb
mov
cmpsl
cmpsb
jecxz
jge
mov
and
mov
cmc
xchg
les
sub
pusha
mov
jecxz
mov
mov
cmpsb
jge
adc
shl
je
inc
mov
aad
flds
js
loope
xchg
sbbl
sahf
cmp
das
cmp
xchg
or
insl
outsl
stos
je
mov
push
inc
push
sub
icebp
mov
mov
fisubrl
sahf
push
push
pop
jnp
stos
mov
jp
sbb
sbb
cli
mov
nop
dec
xlat
mov
adc
dec
mov
pop
adc
movb
and
mov
lock
lods
cli
mov
cmp
js
shrl
and
push
dec
hlt
mov
fdivr
push
mov
sarb
aas
or
sti
jecxz
mov
test
xchg
xchg
fucomp
in
shll
rcll
mov
lods
mov
ficomps
fstpl
movsb
cmpsb
repnz
sbbb
sub
jmp
test
scas
cmp
add
sbbb
insl
xchg
adcl
fldt
inc
jne
sbbb
scas
jmp
add
pop
sub
es
movl
loope
add
repnz
jnp
dec
lcall
fnstenv
xor
pushl
out
test
sub
add
xor
jns
push
xor
loop
push
aas
add
add
or
xchg
repnz
lds
das
cmp
jb
mov
stos
repz
adc
inc
dec
and
arpl
add
in
xlat
jno
inc
jno
push
imul
shlb
xchg
pop
outsb
xchg
sti
scas
stos
ja
mov
popa
adc
mov
movsb
rolb
jnp
adcl
cmp
sub
pop
icebp
xchg
popa
and
pminsw
fcom
test
out
in
lea
push
adc
sahf
sub
fadds
or
mov
or
dec
push
cmp
mov
pop
adc
insb
mov
inc
cli
lcall
and
mull
inc
dec
dec
sti
xor
cmp
mov
movb
mov
mov
jge
push
xchg
pop
sbb
fwait
outsb
cmp
mov
push
movsb
mov
mov
clc
jle
dec
pop
ds
dec
hlt
add
bound
xchg
and
sub
mov
popf
push
dec
test
pop
push
pop
loopne
cmpsl
xchg
cs
daa
std
std
jmp
adc
fwait
inc
mov
ljmp
iret
gs
jmp
and
mov
adc
jb
mov
pop
pop
inc
inc
out
mov
mov
jbe
imul
movsl
mov
inc
mov
dec
lods
adc
mov
stos
mov
and
mov
test
cmp
pop
dec
outsb
inc
out
push
mov
ss
mov
aas
push
out
inc
lods
jmp
sub
mov
dec
stc
jne
out
xor
or
mov
add
fsubrl
xor
jo
mov
adc
push
insl
out
inc
ret
outsb
or
ret
mov
in
mov
fists
ret
add
out
cmpsb
scas
fnstenv
adc
arpl
and
pusha
xor
or
outsb
lods
jmp
sub
jae
and
mov
sahf
push
mov
mov
mov
mov
or
inc
das
pop
xchg
adc
popf
outsb
test
addr16
fisubrl
pop
in
outsl
and
push
enter
sub
sahf
and
adc
jae
movsl
in
push
ffree
mov
and
sub
mov
scas
xchg
call
mov
and
mov
jne
xor
cmc
int
or
inc
pushf
or
inc
imul
push
ss
pushf
pop
jg
testb
push
shrl
pop
inc
dec
adc
leave
mov
je
cmp
mov
pop
je
pop
push
cmp
cltd
jo
xor
push
xlat
das
sbb
inc
push
add
sahf
rcll
push
push
inc
push
add
or
in
jge
sub
mov
xorl
lcall
lock
inc
mov
rcrb
mov
in
push
std
loopne
mov
into
scas
jg
xchg
pop
mov
dec
sbb
scas
jl
push
lods
aaa
je
and
and
lods
mov
cmc
and
in
mov
mov
xchg
sbb
out
jns
enter
aaa
push
scas
outsl
and
xchg
fisttpl
xchg
mov
xchg
lods
jno,pt
mov
pop
mov
mov
lock
test
mov
pop
int
xor
dec
lock
push
cmp
adcl
fwait
add
nop
repz
inc
fstps
cmp
sti
scas
pop
insb
or
pop
inc
repnz
inc
outsb
fmull
pusha
mov
dec
sub
dec
cmc
mov
jae
movsl
and
cmpb
repnz
push
pop
test
fs
lret
loope
xchg
and
xchg
in
into
sti
push
mov
addr16
dec
lods
xor
mov
push
movsl
pop
inc
xchg
mov
dec
outsl
pop
xchg
clc
sbb
aas
fs
ret
mov
clc
jno
or
test
sub
popa
cmp
addl
or
jg
icebp
call
mov
cmp
aam
fisttps
cmp
loop
pusha
in
imul
pop
insl
pop
sahf
mov
push
std
xchg
mov
mov
sbb
jp
mov
xchg
clc
stos
rcl
cmc
out
mov
fistps
inc
add
mov
mov
add
stc
into
and
lahf
bound
inc
lock
repnz
mov
push
pop
sbb
cmp
aaa
jp
test
fildl
sbb
insb
jl
pop
jo
je
jle
push
and
jo
mov
call
adc
rclb
pop
pop
dec
push
xchg
clc
jnp
push
or
roll
jns
inc
push
sbb
out
popf
stos
mov
xchg
lods
nop
loop
mov
test
push
mov
or
mov
hlt
or
dec
sub
cmp
loopne
mov
fists
loope
pop
repnz
push
stc
arpl
rcll
cmp
inc
aad
dec
int
sbb
scas
jl
test
out
lds
inc
jb
add
bound
xor
stos
adc
fbld
lock
es
test
and
and
push
scas
sbb
inc
es
xor
xlat
mov
inc
xchg
and
fbld
shrl
sub
es
and
es
outsl
dec
xor
pop
leave
scas
add
in
repnz
sub
or
xor
xchg
movsb
call
xchg
lret
mov
test
fimuls
push
push
shrb
mov
lea
inc
mov
daa
mov
xchg
lock
jecxz
sub
or
shll
sub
inc
mov
scas
add
mov
xor
movsb
ja
sub
mov
add
bound
xor
pop
cmc
mulb
shll
mov
iret
cmp
addb
cmpsl
push
adc
and
dec
hlt
iret
imul
rol
in
jns
incb
leave
or
enter
pusha
mov
sub
and
fists
movsl
icebp
es
push
inc
pop
sbb
lods
jo
push
mov
cmp
xchg
jb
or
jle
js
cmp
xorl
adc
mov
fcmovne
sbb
jne
mov
dec
pop
pop
mov
xor
fwait
outsb
dec
dec
jno
loop
fwait
rolb
xor
js
lret
sahf
test
inc
cmp
movsb
cmp
ret
pushf
mov
mov
pop
mov
jp
in
sbb
sar
shr
or
jno
inc
or
frstor
fsts
add
xchg
aas
jl
mov
sbb
in
inc
inc
dec
jp
rcr
fdivs
jmp
push
fdivs
or
cmpsl
mov
rcll
cmpb
or
hlt
fcmovnb
push
punpckhdq
sbbl
sarl
adc
xor
std
je
xchg
push
xchg
test
cltd
push
mov
sbb
lcall
pop
les
aam
jae
bound
add
mov
mov
cvtpi2ps
roll
flds
sbb
cmpsb
stos
out
leave
aaa
sahf
pop
test
mov
mov
adc
cs
mov
push
daa
ret
inc
lret
neg
pop
insb
test
call
or
push
jb
pop
xor
push
push
and
in
xorb
inc
js
hlt
mov
push
pop
sub
insl
add
test
fsubs
xchg
mov
loopne
fs
imul
add
das
flds
sbb
cmp
mov
loope
subl
ja
fnstcw
or
mov
mov
cmpb
lock
dec
stc
daa
enter
xchg
mov
cmp
mov
pop
jmp
pop
icebp
jno
ret
sahf
outsb
sti
fwait
pop
jno
adc
push
jbe
mov
jbe
push
fmull
pop
sbb
loop
or
in
pushf
and
addr16
rol
inc
fdivl
cmpsb
icebp
sbb
mov
xchg
cmp
mov
and
xchg
xor
push
push
and
or
mov
jns
add
sti
fisttpl
cmp
add
mov
inc
inc
jbe
and
push
mov
mov
imulb
insb
gs
ror
sub
dec
pushf
jmp
jge
movlps
insb
push
and
cltd
xchg
outsb
xchg
pop
xchg
into
xor
adc
mov
bound
fs
adc
dec
in
in
bound
and
aam
pop
fs
cltd
movsb
in
pop
or
or
stc
iret
inc
dec
aas
mov
xor
push
ret
xor
adc
mov
rorl
loope
jmp
jge
pop
mov
inc
xchg
cmp
dec
mov
dec
mov
jnp
iret
mov
scas
xchg
leave
call
jle
push
sahf
mov
mov
jns
mov
jg
xlat
inc
insb
in
push
je
std
add
push
inc
push
leave
test
test
jmpw
pop
sbb
test
lret
fwait
adc
jp
arpl
test
popf
fists
pop
fcmovu
pusha
and
pop
mov
mov
je
into
shrl
add
pop
loopne
cmp
lods
das
out
jl
dec
inc
adc
mov
xchg
jne
outsb
push
and
aad
pop
push
push
in
pop
xchg
ljmp
outsl
lods
cltd
or
jge
lcall
outsl
or
aas
dec
dec
pop
sub
filds
sbb
xchg
mov
lret
cs
inc
cmp
andl
or
sub
sbb
mov
mov
int3
dec
mov
pop
lret
test
cmp
xor
lcall
push
push
popf
pop
mov
mov
popf
mov
sub
add
sahf
sahf
out
stc
push
sub
xchg
sub
cltd
pusha
inc
test
add
inc
pop
mov
mov
mov
push
in
cli
lds
sub
inc
jge
pop
in
xor
sub
std
fwait
mov
inc
in
into
das
cmp
jcxz
xchg
das
lahf
cmp
pop
pop
and
add
push
ss
push
jl
and
int
dec
fistpl
mov
and
sub
cmpl
and
xlat
ror
idivb
inc
mov
jbe
jbe
mov
stos
jecxz
rclb
gs
jmp
cmp
mov
sbb
add
xor
add
stos
cmp
repz
mov
icebp
mov
adc
inc
ret
hlt
sbb
jns
mov
adc
aaa
xchg
sub
and
cmp
pop
dec
loope
fwait
sbb
xchg
mov
pcmpeqw
jge
movsl
aad
jg
sbb
rcrb
mov
fs
clc
lahf
nop
out
sbb
mov
pop
loopne
lcall
push
pushw
popf
lds
cmp
ds
test
pop
lods
outsb
je
out
ljmp
dec
daa
std
inc
test
add
inc
gs
xchg
mov
rorl
mov
adc
cmc
xlat
sbb
hlt
sub
xor
out
xor
or
jno
rcrb
in
test
dec
and
mov
lods
mov
lahf
push
cli
bound
loopne
lea
push
sbb
mov
inc
fldt
mov
dec
cwtl
or
stos
icebp
dec
fmul
rolb
pop
push
jbe
xchg
or
pop
mov
orl
jp
cltd
mul
cltd
aad
jne
dec
mov
pop
sbb
cli
sub
adc
addl
loop,pn
mov
neg
jb
out
pop
push
mov
mov
push
fcoml
sub
xor
mov
loopne
pop
pop
mov
jge
out
lods
xchg
lahf
cmpsl
jo
lods
into
mov
pop
add
es
push
pop
ret
pushf
vmwrite
scas
fmull
push
fistpll
jg
cmp
mov
inc
sarl
setno
aas
je
js
int3
ljmp
sub
jno
sti
fimull
adc
pop
cwtl
pushf
mov
adc
aad
inc
imull
fwait
lods
rcrb
cmc
mov
icebp
push
mull
xchg
push
push
movsb
sti
cmp
adc
cli
mov
cwtl
shr
lea
or
and
ret
fisttps
mov
test
xchg
mov
comiss
push
or
and
jno
push
addr16
adc
push
pusha
lret
in
aam
mov
jp
repnz
jb
push
xchg
xor
xor
xchg
dec
rcrl
call
push
mov
inc
int
jns
pop
cmp
ds
sbb
jbe
sub
stos
divb
insb
pop
mov
mov
adc
and
xchg
flds
out
ret
pop
xchg
dec
jno
inc
js
pop
pusha
inc
addr16
adc
clc
ljmp
movsb
out
xor
ret
aad
pavgw
rcrl
test
sbb
stos
and
stos
sub
shl
ffree
stos
jle
xchg
in
cmp
pop
dec
lods
ds
xlat
mov
imul
mov
push
pop
stc
adcb
mov
sbb
fisubrs
pushf
push
inc
sub
inc
mov
jmp
or
cltd
sbb
push
les
inc
sbb
out
cltd
push
pop
pop
or
add
inc
dec
imul
xchg
pop
ret
es
stc
out
adc
add
loopne
and
cld
jp
add
inc
and
dec
ja,pt
icebp
jbe
and
sub
neg
cmpsb
movsb
jns
sub
mov
xchg
out
popf
call
mov
jmp
rclb
into
add
mov
test
push
jmp
inc
ficompl
jp
xchg
mov
es
out
inc
scas
lret
pushf
fbstp
mov
out
outsl
inc
pop
and
daa
jne
inc
jne
mov
dec
lods
mov
jae
in
scas
mov
xchg
mov
gs
mov
ljmp
add
ja
push
add
mov
sbb
xor
and
adc
mov
int3
and
sarl
stos
mov
dec
out
sub
sub
aaa
lock
jl
pop
repnz
pop
gs
xchg
add
out
jl
lahf
int
iret
sahf
fdivl
add
subb
mov
inc
push
sbb
pop
cmp
out
fdivr
es
pop
jp
adc
push
mov
and
jl
dec
jg
cld
xor
add
mov
loop
cwtl
je
push
mov
lret
pusha
rcrl
scas
push
xor
jno
mov
inc
repnz
cmp
in
adc
fcoms
xchg
gs
jns
insb
mov
dec
stos
test
xor
mov
stos
sub
sub
jno
sbb
out
sub
pop
push
pop
rcll
jle
adc
bound
pop
aas
sbb
dec
fwait
jl
or
mov
repz
inc
test
jg
xor
push
loope
push
xchg
or
push
scas
nop
dec
leave
push
je
inc
cmp
sub
xor
or
cmp
jmp
cs
cltd
sbb
cld
insl
inc
rcrb
das
dec
add
and
popf
sub
dec
cmp
pusha
mov
adc
mov
xchg
mov
sbb
pushf
mov
cmp
out
mov
mov
fdivrp
inc
sbb
cmp
or
movl
inc
movsl
ja
xorl
and
pop
sbb
movsl
loope
jae
mov
mov
push
mov
pop
sbb
stos
mov
rolb
jmp
or
mov
and
test
sub
hlt
dec
aaa
int3
or
cmp
arpl
into
cmp
mov
sub
clc
in
out
lods
cmp
dec
ret
out
pop
push
and
lock
lcall
testb
aad
test
out
cmpb
push
or
pop
sahf
pop
or
int3
mov
decl
sub
sti
lods
xchg
mov
in
xchg
add
xchg
divb
lods
scas
pop
outsb
add
rolb
jecxz
add
repnz
pop
jo
jnp
popa
pop
sbb
or
push
pop
mov
mov
mov
push
dec
pop
dec
les
into
mov
or
test
jp
mov
popa
dec
sahf
pushf
btr
push
xchg
inc
sub
lahf
faddl
jl
mov
sbb
iret
xor
cwtl
sbb
popa
cwtl
aas
inc
mov
and
jne
xchg
adc
stos
jg
cmp
imul
mov
lock
sub
sbb
stc
and
pop
sub
ja
sub
cmpsb
jns
mov
mov
ss
mov
sbb
mov
ret
ret
inc
repz
xchg
adcl
mov
in
xchg
cmpsl
push
mov
pop
xchg
jnp
jae
dec
mov
vmovaps
sbb
cltd
aam
pop
pop
adc
sbb
adc
pop
dec
adc
cli
shl
enter
add
sbb
push
leave
pop
add
sub
pop
add
inc
ret
jp
add
or
orl
lahf
loopne
xchg
mov
cli
fldcw
lods
test
push
xor
shll
outsb
adc
stos
in
xor
push
sbb
or
outsb
pop
and
popa
pop
aas
cmp
out
test
cmpsb
add
xchg
dec
fisttpl
testb
int
xchg
insl
xlat
sub
dec
pop
inc
pop
ljmp
mov
mov
clc
push
cwtl
loop
call
mov
fstps
mov
ss
mov
xor
sysexit
sbbb
pushf
and
lret
outsb
out
xor
shll
dec
fidivrl
nop
jecxz
lea
push
ficompl
stc
dec
inc
nop
roll
inc
push
sbb
repnz
add
lds
add
cltd
fbld
jns
mov
out
xor
xor
add
push
sti
out
leave
loop
inc
arpl
add
and
loope
xchg
cli
fstpl
insl
ljmp
mov
sbb
stc
int
loop
es
dec
jg
jnp
mov
das
xlat
cmpl
ficoms
jp
xlat
sti
mov
test
insb
sti
mov
inc
or
mov
ror
mov
pop
dec
test
and
insb
bnd
pop
cmc
jp
pushf
sbb
sub
dec
lock
loopne
test
mov
jge
rep
inc
inc
stos
jae
lods
in
outsl
mov
add
stc
int
cmpsb
adc
mov
and
xchg
inc
pop
lret
testb
enter
or
aad
jmp
std
lds
aad
int3
sub
xchg
jl
adc
push
repnz
cwtl
mov
fistl
hlt
ficomps
sub
fidivrl
cmp
cmc
enter
scas
adc
add
mov
mov
mov
jg
pop
stc
fldcw
jns
imul
or
xor
pop
mov
push
out
ret
mov
repz
dec
divb
sbbl
aad
add
or
rolb
inc
cmc
int
xor
fstpl
jmp
jns
dec
push
repnz
push
les
or
test
push
in
mov
inc
sub
arpl
aas
jo
sti
insl
or
sub
call
repnz
fsubrs
sbb
or
repnz
mov
out
add
cmc
cmc
push
mov
mov
cmp
cmp
arpl
shr
fadds
xor
xor
andl
dec
adc
sub
add
mov
pop
push
and
or
sahf
sub
ror
rclb
xchg
cmp
out
popa
imul
xchg
sub
push
sbb
push
aam
enter
test
into
in
pop
xchg
adc
ss
in
ret
int
adc
ret
sbb
fmuls
sub
jp
push
lds
addr16
sbb
in
push
sub
popf
pop
mov
dec
sub
pop
and
stc
mov
sbb
dec
popa
loop
js
cli
iret
push
cmc
outsb
out
lahf
xor
enter
sete
out
xor
mov
and
call
adc
loope
pop
push
push
lret
dec
int3
in
fsub
push
jns
add
dec
fnstcw
in
pop
mov
in
push
sub
out
adc
das
in
xchg
cld
jle
sarb
and
aad
fistpll
sub
xchg
arpl
sbb
test
cmpsb
aad
adc
je
xor
push
mov
mov
scas
mov
mov
cltd
jns
xrelease
out
call
jbe
pop
mov
adc
iret
mov
in
inc
clc
xor
adc
idivl
mov
or
sub
movsb
mov
leave
sbb
ret
loopne
insb
adc
rorl
stos
lods
aam
in
clc
jbe
inc
sbb
int3
mov
xor
aam
cs
pop
pop
pop
adc
cmp
aad
cmp
movsl
mov
xchg
mov
xchg
mov
lds
xor
adc
jmp
push
or
xchg
xchg
jg
or
cwtl
xchg
in
xchg
jo
test
popa
push
jmp
movsb
add
add
mov
call
shrb
sti
jb
jne
and
jno
sbb
fwait
push
test
fldt
into
mov
aam
push
movsl
and
push
lods
and
stos
ret
test
stos
shlb
xchg
stos
mov
int3
bnd
mov
popf
add
dec
pop
dec
aad
jle
jp
imul
xchg
jmp
inc
movb
or
in
cmp
flds
xor
cmc
sub
cs
mov
mov
scas
bound
lock
dec
or
sbb
dec
cmp
push
popa
add
sub
adc
mov
bound
add
lea
push
jge
mov
ror
ja
pop
mov
xchg
push
lahf
and
and
cli
mov
popf
test
pop
jbe
cmp
leave
test
add
sti
fisubrl
sbb
gs
into
cmpl
or
into
sarl
mov
sub
add
mov
and
lock
jl
sti
push
lret
or
cld
in
enter
in
add
dec
adc
or
mov
jae
into
dec
sub
loopne
add
imul
dec
js
cmpsl
stc
pop
jmp
fdivp
mov
sub
sub
add
jb
enter
inc
icebp
pop
xor
mov
mov
test
ljmp
je
push
ret
setbe
gs
lret
jmp
sbb
inc
jns
sbbb
mov
add
jecxz
jo
adc
popa
notl
sbb
into
ds
lcall
lss
jb
push
xchg
mov
fmuls
inc
mov
test
jo
and
nop
xchg
cs
les
lcall
jo
add
push
mov
jge
mov
andb
ss
add
inc
ret
xor
sub
inc
or
cmp
sub
repnz
dec
fisubl
xor
pop
xchg
cli
insb
push
outsl
das
cmpsb
mov
push
mov
sub
sahf
xchg
pop
jno
scas
inc
test
xor
sti
rcrl
pop
bound
mov
or
outsb
and
adc
int
push
dec
aaa
js
dec
outsb
cmp
mov
mov
ret
fldl
ficomps
lahf
in
or
fs
xchg
loopne
jp
sbb
in
sbb
mov
jo
adc
fwait
add
enter
fs
insb
dec
in
ret
cld
xchg
repnz
lret
sbb
lret
add
das
lcall
data16
jo
sbb
pop
repz
inc
repnz
js
outsb
inc
sti
lahf
adc
or
lret
pop
dec
aad
inc
call
ds
jnp
adc
pusha
imul
out
dec
jmp
pop
mov
xor
mov
mov
hlt
lret
aas
mov
mov
test
mov
cmp
ret
adc
test
mov
adcl
or
arpl
pop
ljmp
and
bound
jno
les
mov
or
and
xchg
sbb
sarb
into
fists
test
mov
cltd
or
or
and
and
cs
lret
loop
icebp
arpl
mov
es
or
out
inc
and
std
mov
into
shll
mov
mov
dec
test
movb
pop
push
or
mov
adcl
aam
sti
imul
inc
fwait
and
sbb
pop
sbb
sbb
sbb
and
nop
jmp
inc
cmc
test
add
mov
dec
ror
sub
push
cmp
pop
rol
bound
pop
mov
and
sbb
rorb
push
dec
loop
ret
add
push
push
pop
adc
int3
mov
mov
cmp
dec
cmpsb
add
ret
pop
sbb
xor
test
inc
test
sbb
jns
stc
sub
xchg
xlat
or
mov
ret
and
push
inc
cwtl
stc
mov
jl
push
mov
hlt
clc
mov
pop
jp
into
mov
or
cmp
fs
orl
jne
fstpt
push
addl
sbb
or
imul
ficompl
aas
inc
clc
cmc
sbb
jecxz
in
js
mov
mov
rcrb
fimuls
push
iret
dec
popa
out
xchg
int
gs
inc
bound
jg
cld
or
jbe
sbb
xor
fisttpl
outsl
mov
sbb
mov
syscall
mov
push
jmp
mov
lcall
fwait
adc
test
mov
add
mov
decl
xor
aaa
dec
mov
or
orb
rcrb
ficompl
push
aad
and
jge
push
pop
inc
jmp
cmp
lahf
or
movsl
and
cmp
xor
das
or
rcr
std
dec
shrb
mov
cmc
rorl
mov
lret
xor
addr16
shll
and
mov
xchg
push
push
loope
lret
dec
push
sub
and
fcoms
mov
test
ret
enter
xchg
push
mov
cmp
dec
jle
push
adc
jecxz
adc
xor
add
cli
fisubs
mov
repnz
inc
adc
fstpl
sbb
cld
int
aas
in
mov
movsl
flds
and
pop
xchg
mov
ljmp
movsb
adc
add
cmp
loop
push
int3
cmp
sahf
out
pop
inc
idivb
cld
test
xlat
outsb
mov
lret
inc
scas
or
or
push
icebp
sbb
or
inc
je
xor
sub
arpl
or
pop
insb
int
adc
push
add
cmp
ficomps
pop
adc
xchg
mov
push
pop
jo
fadds
and
pop
mov
dec
xchg
add
fstl
lea
inc
jno
dec
mov
mov
sbb
dec
jmp
sub
jg
xchg
or
lea
incl
in
cmpsl
fmulp
loopne
jmp
xor
testb
cmp
cld
mov
pushf
dec
sahf
mov
lock
sbb
push
andl
and
or
ja
add
sub
or
repnz
mov
sarb
sbbl
xor
mov
gs
or
js
jo
inc
imul
nop
mov
and
lret
js
jge
xchg
pop
cmc
mov
fsubs
push
sar
sbbl
mov
test
das
push
cmp
or
shl
repnz
nop
sub
xor
das
ret
dec
cwtl
sub
mov
jl
sbb
xchg
push
pusha
jg
cwtl
ljmp
ljmp
or
aam
into
cmp
sub
add
subl
or
pop
ret
lods
xor
jge
hlt
or
pop
sub
sahf
je
mov
test
sub
sub
cs
push
inc
jge
xchg
mov
jge
pop
xchg
popf
imul
int
push
je
lahf
push
packuswb
aas
jmp
mov
dec
mov
out
fldenv
in
push
add
les
pop
test
lret
scas
cld
sahf
fs
xor
xchg
push
enter
es
fistpl
cwtl
aaa
cmc
mov
shrl
aas
inc
sub
stos
js
pop
sub
xchg
inc
test
lea
add
sarb
lret
jb
jbe
jmp
mov
mov
pop
xchg
jmp
lret
nop
rcrl
jbe
loop
shrd
or
mov
addr16
sub
mov
mov
add
je
test
and
mov
ficoms
out
cmp
xchg
repnz
push
push
enter
fisubs
cmp
jp
pop
gs
cmc
inc
loope
stos
mov
push
movsb
hlt
or
adc
pop
fcmove
mov
and
and
outsl
or
aas
dec
shlb
lret
das
decb
or
repnz
cmp
popf
add
imul
test
xchg
adcl
adc
inc
cmp
cwtl
xchg
mov
inc
inc
cmpsb
mov
stos
mov
lret
insb
mov
sbb
insb
in
dec
out
mov
stos
ljmp
enter
out
dec
mov
roll
add
cmpsb
pop
or
sub
sbb
xchg
sahf
in
decb
pop
xchg
cmp
push
xchg
jnp
xor
xchg
cmp
das
xor
add
int
add
mov
pop
subb
push
xorl
enter
dec
ss
dec
addr16
sub
scas
ds
jae
lds
xchg
leave
mov
xchg
popa
cmpsb
sbb
xchg
xorb
mov
adc
ds
sbb
ja
shrl
sub
std
mov
in
icebp
stc
xor
fwait
mov
cld
leave
ds
in
int3
xor
sbb
lret
jmp
push
inc
lahf
sbb
imul
scas
loope
jle
cmpl
in
mov
push
dec
cmp
push
out
imul
jle
push
in
or
jge
xor
lods
outsl
dec
sub
add
cld
rcrb
hlt
jbe,pt
jle
add
jnp
vpsubsb
sub
inc
pop
inc
pusha
add
cs
mov
fscale
lret
inc
nop
push
fisttps
popf
mov
xor
dec
in
dec
aam
outsb
int3
mov
aaa
arpl
inc
jg
sbb
mov
pop
test
add
mov
cs
mov
inc
pushf
xorb
or
jne
inc
mov
call
mov
fisttpll
stc
pop
insl
adc
mov
and
jnp
or
push
stos
fbld
or
jmp
mov
and
jge
movd
jbe
and
dec
sbb
mov
push
add
pop
adc
xor
xor
mov
sti
movsb
in
rorb
xchg
xchg
das
pop
fcomip
push
push
lds
rorl
ret
pop
xchg
popw
mov
jae
aam
push
in
in
inc
jmp
icebp
loope
scas
lret
mov
out
jmp
add
rol
mov
add
pop
ds
cmp
pop
mov
xchg
cwtl
jb
sbb
popf
pop
sub
insl
icebp
push
cmc
fisttps
in
jecxz
xor
jle
jmp
push
mov
sbb
stos
jo
push
lret
and
scas
xchg
int3
and
inc
cmc
mov
repnz
cmp
mov
add
pop
shrb
inc
es
movsb
testb
out
scas
aam
scas
je
stc
adc
mov
mov
cmp
dec
in
ljmp
mov
inc
mov
add
adc
dec
bound
and
adc
push
sub
pop
sub
fwait
shlb
sbb
push
mov
icebp
aad
cmpsl
or
insb
mov
fiadds
adc
mov
push
les
aaa
cmp
push
jl
mov
pop
mov
movsb
mov
adc
lea
or
xchg
lock
shll
mov
ds
push
xor
sub
insb
jne
pop
sbb
das
add
mov
mov
gs
mov
jns
pop
jle
jge
shlb
add
mov
in
mov
loope
aaa
sub
mov
jge
shll
mov
ljmp
jnp
fimuls
sub
mov
cmpsl
not
pop
or
inc
orb
sarl
push
inc
popa
sbb
loop
stos
rcrb
ljmp
test
pop
push
adc
imul
push
fwait
ljmp
cmpsb
xor
insb
sub
insb
call
imul
mov
or
std
cmp
add
fnstenv
stos
mov
sub
mov
xor
inc
xchg
js
xchg
jg
nop
push
xchg
cmp
jp
or
sbb
les
pop
test
jns
cltd
pop
gs
mov
mov
out
jmp
stos
or
loop
and
fsubrs
pop
repz
and
xlat
pop
loopne
jne
or
pop
dec
pop
jnp
dec
xchg
leave
mov
dec
fxtract
in
pop
in
add
push
test
les
cmp
fs
std
inc
js
in
cld
and
add
call
pop
test
cmc
jne
arpl
jo
sbb
add
ret
lock
push
rclb
and
add
outsl
jb
dec
sbb
bound
add
stos
loopne
mov
xchg
out
or
jnp
adc
sub
pushf
add
cmpsl
out
cmpsl
out
or
mov
mov
and
cmp
out
cli
and
push
lods
push
and
mov
jl
mov
arpl
test
jmp
ja
cmp
and
mov
imul
mov
cmp
push
mov
jae
cmp
lock
jg,pt
xor
xor
call
sbb
cs
add
mov
decb
dec
add
frstor
test
loopne
popa
fsubr
adc
nop
cmp
add
lock
add
lcall
adcl
push
or
ljmp
scas
xchg
fildll
sub
fmul
outsb
arpl
test
jl
pop
cmp
cmp
leave
push
pop
xchg
stos
int
movsl
push
cmpsl
sbb
fistpll
adc
daa
idiv
push
xchg
jo
and
sub
xor
inc
adc
outsb
pop
pop
xlat
sub
or
mov
and
xor
sub
das
sbb
outsb
inc
jp
cmp
mov
xchg
inc
mov
dec
dec
cld
clc
jae
jmp
test
js
icebp
xor
test
aaa
cmp
int
xchg
or
les
push
sbb
adc
aaa
adc
nop
out
jno
mov
pop
test
dec
in
fidivrl
dec
push
add
enter
adc
in
shrb
out
cltd
imul
xchg
mov
ret
mov
push
sbb
sub
xchg
aam
nop
inc
xor
hlt
adc
pop
call
scas
pushf
outsl
subl
cmpsl
aad
cmp
addr16
imul
pushf
mov
mov
cltd
push
inc
cwtl
ret
stc
jge
call
sub
mov
and
pop
mov
shrb
push
dec
xor
aam
outsl
clc
sbb
cmp
std
call
push
adc
inc
jbe
inc
out
mov
dec
sbb
mov
or
mov
mov
fdivrp
cld
cmp
cli
push
push
push
push
cmpl
ficomps
aas
pop
leave
loopne
das
icebp
pcmpeqw
sbb
dec
sbb
mov
test
popf
enter
cmpsl
mov
outsl
sbb
adc
mov
outsb
out
gs
xlat
ret
jp
xor
ljmp
jg
aam
nop
arpl
je
inc
hlt
fbstp
iret
push
pop
ror
js
out
or
mov
push
mov
inc
inc
shll
push
lds
xor
push
lds
out
xor
icebp
les
cmp
adc
pop
jp
fs
inc
bound
mov
insl
neg
or
mov
sar
subl
hlt
cmpsb
mov
out
and
ja
add
jbe
mov
ret
es
rol
cmpsb
das
jno
push
es
sahf
add
or
nop
mov
in
dec
mov
push
mov
in
dec
sar
mov
mov
ja
pop
adc
ljmp
add
stos
aas
mov
xchg
xor
dec
rcl
popf
mov
cmp
fnsave
leave
addr16
adc
adc
gs
cmp
sub
pop
je
mov
sbb
daa
sbb
std
mov
sub
cld
das
js
ja
xor
in
out
aaa
addl
test
mov
fcompl
xchg
add
mov
jl
fcoms
stos
lods
pop
aad
inc
sbb
inc
in
pusha
lea
add
out
cmpsl
int3
data16
je
imul
adc
jbe
pop
roll
scas
incl
push
push
out
fs
rolb
sbbl
mov
std
adc
inc
scas
loopne
mov
adc
mov
test
mov
adc
mov
cmc
imul
mov
mov
push
lods
mov
stos
sbb
cmp
xor
sub
jbe
inc
fs
popa
cmc
pop
leave
test
jecxz
and
add
repnz
repnz
sti
test
leave
enter
inc
ss
sbb
mov
push
ja
and
stc
repz
push
fidivrl
jl
cmpsb
stos
or
int
lcall
subb
lock
icebp
inc
in
mov
xchg
xlat
mov
jmp
adc
jle
adc
shlb
stos
outsl
xchg
dec
scas
sub
insb
push
xor
mov
and
call
lcall
fwait
and
mov
cli
hlt
and
push
xor
jp
rorb
jg
movsl
mov
or
stos
pop
inc
add
iret
imul
fwait
lcall
xchg
out
in
mov
mov
push
std
notb
ret
cmp
sahf
pop
and
leave
shl
add
push
or
or
adc
out
add
pop
out
and
xchg
mov
insl
pop
and
inc
ret
mov
cmp
cmpl
sbb
mov
xchg
out
in
jl
jae
cmp
mov
sahf
sahf
mov
sub
mov
stos
movsb
jge
es
mov
xchg
mov
in
mov
push
ja
dec
jge
pop
cmc
iret
sub
jne
lret
xor
insb
inc
aam
mov
lret
xchg
popf
xchg
sbb
sbb
push
cltd
mov
pushf
stos
fwait
scas
xchg
mov
sti
scas
lret
repnz
and
jl
or
dec
adc
stos
sub
das
push
jecxz
xchg
imul
mov
adc
aad
mov
mov
cmp
xchg
pop
in
jge
stc
push
cs
cmp
jmp
sbbl
mov
cli
sbb
pusha
in
insb
movsb
mov
sub
sub
mov
pop
mov
jle
xchg
dec
mov
xchg
mov
call
outsb
enter
sub
imul
jb
dec
pusha
es
cmp
das
call
enter
and
xchg
cmpsl
sbb
addr16
dec
adc
push
fwait
pusha
mov
loop
cmp
roll
mov
push
xchg
mov
cmc
movsb
aam
test
outsb
lods
add
jle
pop
sbb
hlt
xor
or
bound
inc
and
xchg
js
mov
or
nop
rolb
mov
mov
rorl
dec
mov
xchg
sbb
xchg
xchg
jge
or
pop
lock
sub
jl
xor
xchg
popa
movsl
mov
shlb
mov
sbb
into
push
out
push
negl
fcoms
inc
add
inc
xor
pop
jo
add
addr16
test
sbb
cmp
adc
lea
xchg
aad
repz
adc
addr16
rorl
notl
xor
repnz
pop
ljmp
push
cltd
mov
scas
pop
add
cmc
sbb
lret
and
popf
pop
lods
xchg
mov
rcr
addr16
add
xor
cmp
dec
cmp
jle
and
orb
pop
sub
mov
cmp
or
addb
mov
pop
lds
loopne
jle
mov
repz
xchg
out
jne
jnp
fwait
push
iret
lahf
mov
jnp
push
push
sub
push
aas
jecxz
pop
lahf
cmpsb
js
inc
lods
hlt
gs
pop
and
push
sub
xchg
popf
loope
xchg
add
dec
pop
mov
jbe
and
das
add
dec
hlt
cld
sbb
mov
xchg
add
jo
xchg
mov
cs
xor
push
lods
orb
dec
arpl
jecxz
add
push
loope
push
dec
lods
sbb
mov
jbe
adc
cmpsl
dec
stc
out
push
push
iret
sub
pop
in
inc
jnp
xchg
into
mov
adc
test
cmp
sub
push
add
dec
dec
insb
sbb
cmc
dec
pop
sarb
pop
pop
ret
rcrl
into
test
es
mov
push
push
and
push
or
dec
and
pop
mov
add
push
cltd
mov
sbb
addl
add
stos
pop
cmpl
sbb
pop
and
repnz
dec
lods
out
cs
jecxz
xor
insb
jmp
mov
hlt
cmpsl
stos
aas
js
mov
clc
in
dec
jns
mov
or
sbb
mov
test
into
jae
inc
jns
sub
int
in
insl
fcompl
dec
iret
scas
out
add
ficoms
pop
xor
pop
pop
mov
mov
sub
out
movsb
pop
stos
test
dec
hlt
pop
daa
jl
out
arpl
and
or
adc
sub
pop
push
and
dec
int
ffreep
clc
aad
pop
jnp
cli
in
int
loope
inc
popa
test
sahf
inc
or
cmpsb
cs
mov
push
scas
int
pop
sti
push
dec
into
fnstsw
movsl
dec
aad
and
jg
loope
lods
aas
ss
add
fs
in
aas
add
sub
mov
push
outsb
out
sub
loopne
push
ficoms
push
sbb
mov
sbb
jl
xor
jns
test
repnz
jnp
pop
xor
adc
push
add
pop
lock
jbe
repz
out
cltd
call
adc
xchg
ljmp
sbb
cmc
ret
imul
fmull
insb
sti
jmp
dec
mov
inc
adc
es
hlt
push
andb
shrl
cmpsb
add
adc
ret
mov
jmp
daa
sbb
sub
shrb
adc
or
inc
xchg
outsl
add
jb
in
cwtl
rcll
outsb
dec
popf
jne
xchg
mov
inc
pusha
pop
iret
gs
cli
sub
pusha
in
push
lea
push
and
inc
pop
lock
pop
fwait
cmpsb
outsl
cmp
mov
and
je
enter
scas
andb
int3
iret
gs
pop
shlb
push
test
or
icebp
je
pop
inc
repz
inc
daa
mov
loop
dec
or
mov
push
jmp
cld
rolb
and
mov
jnp
jl
inc
leave
outsb
cmp
mul
mov
js
mov
sub
add
cs
movsb
mov
out
out
icebp
pop
out
mov
mov
jg
test
mov
sub
nop
push
cmp
xchg
aaa
pop
mov
or
pop
jne
mov
xchg
mov
adc
jmp
adc
xor
in
and
outsb
pushf
insb
sbb
pusha
mov
mov
and
xor
dec
push
sub
std
sbb
inc
jge
mov
dec
inc
jb
loop
cmpsl
out
xor
arpl
push
push
jno
int
xchg
mov
jl
push
es
mov
iret
adc
or
mov
push
and
jmp
add
fnstcw
daa
shll
in
jl
sarb
dec
test
out
inc
insl
sub
es
sbb
sbb
push
popf
scas
nop
loopne
scas
hlt
push
dec
repnz
lods
adc
add
stc
or
cwtl
mov
add
in
and
mov
cmp
push
adc
pop
push
adc
out
mov
and
inc
adc
movsl
popa
fcoml
ficoml
inc
addr16
cs
call
outsb
mov
gs
or
mov
mov
pop
adc
loope
not
dec
cmp
loope
lea
sbb
ret
nop
fmuls
jp
ret
sbb
nop
cltd
inc
jecxz
aas
mov
pop
popf
in
push
mov
lcall
ljmp
dec
stc
std
dec
xlat
xlat
cmpsb
in
xor
in
ja
jmp
jnp
and
lret
js
jbe
fcmove
adcb
xchg
jge
pop
mov
enter
loopne
mov
jmp
pop
and
or
insb
out
sbb
push
mov
shl
leave
pop
inc
fdivrp
clc
jbe
lods
stos
jg
jns
sti
push
je
jecxz
cs
jmp
pop
pusha
repz
cmp
push
iret
pop
sbb
dec
add
adc
je
cltd
push
xchg
sbb
push
xor
test
lds
pushf
or
mov
push
hlt
xchg
in
and
es
pavgb
mov
fsubr
and
cmc
aaa
lods
movl
mov
nop
mov
sbb
loopne
iret
lds
jmp
test
pop
jb
test
lcall
dec
sbb
push
add
imulb
stc
or
add
aaa
xchg
xchg
test
mov
adc
loopne
push
xchg
add
push
std
xor
lcall
aas
mov
fistps
add
loop
xchg
inc
add
push
insb
loopne
mov
xor
adc
fistpll
mov
in
or
fcomps
mov
sub
out
push
xchg
xchg
adc
aam
test
out
in
test
das
sti
jg
jl
fidivl
pop
xor
mov
or
dec
es
int3
call
and
sub
js
inc
sahf
sub
sarb
inc
xor
cmc
mov
and
fistl
push
leave
jmp
test
jns
aad
xchg
mov
xchg
scas
ror
sub
push
mov
test
pop
jge
test
sbb
jne
loop
sub
fstps
mul
popf
mov
shrl
pop
scas
lods
xchg
cltd
leave
xor
fs
inc
jo
mov
jne
addr16
xchg
adc
in
cmp
or
int3
adc
jne
addr16
repnz
mov
mov
lods
push
ss
sub
dec
imul
add
pop
or
lea
dec
ljmp
xchg
das
mov
pop
setae
and
test
test
mov
jp
lock
jnp
inc
inc
scas
and
cmp
cmp
out
add
pop
pop
into
mov
sahf
js
add
and
xchg
cmc
shlb
mov
stos
sbb
xchg
cmc
sub
popa
fsincos
out
bound
mov
push
lods
sbb
stc
mov
inc
xor
cmp
mov
add
fs
add
lret
sarb
repz
inc
adc
sbb
jge
sbb
xchg
mov
mov
in
lods
inc
pop
pop
cmp
mov
cwtl
pop
and
push
mov
mov
add
lea
mov
and
stos
pop
jb
flds
jmp
aad
pop
push
jb
xor
xor
mov
xor
vextractps
cmc
cmp
add
dec
cwtl
ret
xchg
les
fcmovnu
inc
add
jb
iret
out
rclb
lods
lahf
sbbl
and
mov
mov
inc
movsl
lea
jo
jecxz
xchg
pop
sub
test
test
or
in
jp
addb
iret
cmp
call
push
pop
dec
pop
adc
or
fistpll
xor
rcl
push
adc
movsb
fidivs
jns
inc
lock
jo
aaa
aas
repz
lods
mov
out
test
loope
test
jge
insb
ljmp
mov
addr16
leave
insl
fwait
out
test
clc
push
xor
push
push
jnp
aad
pop
mov
push
cmp
in
dec
xchg
mov
jo
cmp
rcll
dec
fists
adc
or
lods
push
insl
pop
add
js
ret
add
inc
mov
loopne
rcrl
jnp
int
pop
pop
sbbl
mov
sbb
add
shrb
mov
dec
or
gs
dec
sbb
aas
inc
xor
add
and
jbe
mov
imul
lock
loopne
fisubl
jl
or
mov
stc
dec
iret
sub
jb
ud2
mov
push
bound
nop
xor
out
in
iret
fwait
xlat
mov
fistpll
cmp
pop
mov
mov
jge
push
movsb
movsl
push
cmpsl
mov
lea
movsb
xchg
aas
pop
lahf
cmp
pop
mov
push
mov
movsb
sub
test
mov
sahf
in
in
popa
arpl
mov
stos
pop
leave
xchg
cmp
push
lock
pop
pop
xchg
or
jmp
repz
lret
fisttpll
scas
dec
inc
dec
call
pop
repz
push
xor
dec
mul
loop
push
out
out
jmp
mov
ficomps
push
pop
jp
mov
int
xor
mov
iret
mov
sub
popa
aaa
add
adc
jno
fiaddl
xor
pop
mov
popa
sbb
or
add
jnp
test
jge
sti
int3
ds
pop
jp
test
mov
pop
sub
lods
dec
push
adc
stos
mov
dec
cmp
sbb
add
mov
pop
mov
das
lret
pusha
int3
inc
jae
cmp
int
sub
aaa
pop
xchg
or
mov
xchg
pushf
sub
sub
das
push
sub
nop
add
subps
int
loopne
mov
pop
mov
and
mov
mov
insl
xchg
or
xorl
fisttpll
aas
pop
and
cld
mov
orl
dec
daa
add
lahf
add
jb
insb
push
mov
invd
adc
movsl
mov
arpl
sbb
test
dec
add
xchg
jno
mov
mov
popl
push
mov
dec
fdiv
loop
jg
mulb
mov
sub
cs
adc
lea
loope
repnz
or
inc
and
jmp
sbb
scas
stos
stos
out
fcompl
out
bound
jns
mov
xorl
adc
mov
insb
and
sub
hlt
mov
xor
push
loopne
fidivl
bound
dec
dec
adc
jb
or
outsl
mov
dec
jbe
scas
pop
cmpsl
xchg
dec
popa
jnp
add
or
push
mov
pop
mov
and
or
add
mov
mov
xor
es
sub
int3
mulb
out
jne
sysexit
add
push
xor
push
addr16
fsubrs
push
test
mov
out
mov
lret
cmpl
mov
sub
push
push
stc
or
shrl
pop
iret
mov
int3
dec
dec
movl
or
int
mov
loopne
push
or
fildl
movb
aas
int3
clc
jnp
enter
lret
dec
push
add
mov
rcr
jp
scas
sub
mov
into
mov
clc
int
mov
jns
xchg
mov
push
cmp
xlat
stc
shll
les
lock
sbb
jo
cmp
xchg
xor
test
pop
scas
loope
mov
int
ret
in
xor
push
xor
mov
jl
mov
mov
xchg
pushl
push
dec
xor
cmp
sub
adc
sub
movsb
hlt
dec
jg
fcoms
mov
cmc
adc
movsl
and
xor
ds
sti
pop
sbb
int3
dec
daa
gs
dec
adc
call
and
das
jae
push
mov
or
scas
pop
xchg
dec
mov
push
enter
je
inc
imul
mov
cmpsb
repz
dec
popa
jae
jle
jl
test
repz
popf
pushf
movsl
rol
or
xor
enter
inc
pop
ret
dec
lcall
pushf
enter
mov
mov
nop
stc
pop
push
add
mov
jb
fmulp
or
pusha
xor
push
dec
push
or
je
jl
popa
lret
push
lcall
enter
mov
mov
cs
xchg
movsl
jb
xchg
sub
xchg
or
jb
pop
emms
xor
push
dec
mov
and
into
mov
push
ds
add
jns
cld
inc
sub
jne
sarb
movsl
aam
mov
stos
out
push
xchg
test
mov
in
arpl
shll
mov
pusha
push
shlb
jecxz
xchg
push
addr16
in
stc
ret
sahf
out
inc
ds
inc
mov
mov
out
lock
mov
ds
mov
outsl
cmp
jbe
orb
ret
jmp
jns
push
into
add
and
xor
sbb
lcall
xor
into
mov
adc
ja
daa
pop
mov
or
out
add
mov
das
dec
pop
jo
mov
sbb
mov
cmp
inc
gs
das
rcrl
js
mov
inc
inc
sub
xchg
js
cmc
stos
pop
cwtl
aas
jmp
pusha
jno
cld
dec
loopne
lret
adc
push
or
pusha
mov
out
insl
pop
xor
cltd
jno
ljmp
inc
subl
mov
fidivrl
mov
mov
pop
call
pop
and
enter
lret
xor
loop
pop
inc
pop
ret
sahf
xor
cmc
add
cltd
ljmp
call
movsl
das
jge
xchg
or
mov
cmpsl
sub
inc
push
sub
rol
mov
pop
aas
addr16
pushf
lret
pop
inc
push
jns
inc
inc
dec
xchg
cmpsl
mov
xor
mov
jo
lret
scas
xor
stos
sti
jb
insl
inc
cmp
cmp
or
fistl
roll
mov
out
in
movsl
lods
icebp
loope
lods
in
cmp
jns
jb
pop
and
and
mov
arpl
cmpl
mov
mov
cpuid
sub
lret
nop
lcall
pop
mov
mov
adc
ja
mov
push
andl
fwait
mov
lods
cmp
cmp
dec
rolb
or
mov
mov
test
test
adc
xchg
jbe
lahf
xor
iret
int
hlt
inc
dec
sub
jg
xchg
dec
insl
mov
shrl
push
jae
mov
insl
mov
cmp
stos
in
mov
call
cld
lcall
shl
and
test
data16
xchg
or
aaa
pop
cmp
inc
inc
fildll
cmp
adc
xor
fildll
push
inc
mov
pusha
mov
repz
and
scas
xorb
rcr
movsl
inc
mov
dec
mov
push
sti
out
pop
pop
jne
cwtl
cmp
xchg
adc
mov
mov
xor
jle
lea
jg
daa
and
test
or
cmp
mov
icebp
add
mov
adc
in
xchg
mov
rcr
and
push
xchg
sub
mov
rol
pop
cmp
dec
add
int
sub
xor
movsl
in
sbb
leave
cli
add
leave
icebp
int3
rcrb
and
sbb
mov
jge
cltd
sti
xchg
pop
add
sbb
jo
test
test
jge
xchg
lea
push
ret
in
inc
cmp
lcall
sub
mov
out
sub
sub
jno
or
jl
jae
dec
aaa
pop
cltd
dec
lahf
inc
pop
aas
pop
inc
pop
aam
testl
dec
fcmovnbe
fildl
xor
rcr
inc
xchg
sbb
shlb
shr
std
fisubl
lods
test
cmp
push
lret
test
adc
mov
or
pop
mov
popf
mov
or
insb
and
push
pop
ljmp
into
sbb
inc
loope
push
arpl
std
in
inc
cmc
dec
int3
jp
stos
push
inc
pop
jmp
adc
sbb
and
xchg
cmpsl
outsb
dec
pop
inc
sbb
jns
xchg
mov
mov
cmpsb
stos
xchg
push
ljmp
fimull
mov
sbb
incb
mov
mov
dec
negb
sbb
fdivs
js
mov
xor
nop
pushf
cld
cmp
jle
loope
dec
pushf
pop
stc
jp
push
push
adc
adc
repz
xchg
rclb
mov
stos
dec
imul
jne
aas
mov
mov
movsb
dec
mov
js
cld
mov
inc
sub
adc
pop
shrl
jg
jp
mov
data16
pop
mov
daa
sbb
stos
sub
or
imul
xor
into
sub
mov
dec
shll
lret
shrl
das
jmp
mov
mov
lret
jecxz
push
mov
jb
mov
adc
out
push
push
jecxz
lret
push
fs
in
loope
pushl
sbb
mov
ret
and
jo
mov
aas
pop
dec
rolb
fs
jp
leave
sahf
lret
rolb
inc
dec
xor
mov
scas
aas
lods
xlat
and
js
inc
sub
fidivrl
jb
shrb
xor
mov
jge
jo
in
pusha
pop
mov
pop
pop
stos
jno
jbe
insl
dec
xchg
cld
out
mov
shr
push
aad
pop
outsl
scas
movsl
fmuls
and
sbb
gs
sub
jo
repnz
push
jnp
and
ds
jns
dec
inc
pop
popl
mov
xor
inc
inc
lea
lahf
divl
adc
in
push
adc
cmp
lock
jmp
mov
les
cmpsl
in
jns
mov
test
mov
cltd
or
fs
ret
and
orl
jecxz
xchg
cmp
dec
mov
sub
mov
lcall
daa
add
mov
aad
addr16
out
cmp
dec
sti
popf
lea
push
hlt
leave
outsl
cmp
int3
aam
push
xchg
xor
sbb
sbb
jle
jle
inc
jp
jmp
daa
inc
xor
inc
in
lock
out
xchg
ljmp
mov
adc
cmpsl
push
xor
xchg
push
xchg
sar
adc
push
cli
repz
popa
push
popf
or
sbb
addl
loopne
cs
lods
bound
add
shr
out
adc
add
mov
mov
jbe
lock
add
xchg
iret
std
insb
sub
add
andb
cmpsl
jmp
in
cmp
pushf
leave
lcall
dec
adc
pop
aaa
mov
mov
cld
jmp
xchg
jl
pushf
into
insb
lock
and
lods
mov
fisubl
repz
arpl
fcoms
test
add
ret
sbb
and
lret
pop
roll
mov
ffree
shl
lock
les
or
mov
mov
sub
nop
mov
and
xor
movsb
or
push
lcall
jnp
subl
mov
pop
adc
int3
sarl
push
sub
jne
lret
mov
cmp
and
mov
push
push
stc
data16
test
or
jecxz
and
bound
xorl
sbb
adc
push
fsubrl
std
add
sub
stc
and
mov
mov
adc
xor
mov
out
outsb
jmp
or
xor
bound
or
xchg
movsl
cmp
push
loop
mov
aaa
xor
aam
mov
pop
shll
mov
sub
sub
cmpsl
rorb
icebp
mov
and
and
xor
in
fisubrs
sbb
pop
scas
cmp
je
mov
cmp
jecxz
lods
bound
and
mov
cli
int3
inc
ds
mov
clc
jae
mov
arpl
cs
cli
jae
sbb
lods
leave
xor
pop
adc
movsl
out
mov
fnstsw
push
std
pusha
push
push
sub
add
outsl
mov
in
rcrl
push
rep
pushf
push
mov
jae
jb
imul
mov
or
cmovnp
sub
shrl
or
je
ret
jnp
adc
jg
pop
lock
jge
push
lods
iret
inc
xchg
lcall
das
or
push
add
inc
cmpb
jb
pop
hlt
xchg
mov
xor
pop
fisttpll
sub
sub
dec
xchg
or
cmp
or
lahf
insl
jg
out
mov
xchg
jp
movsl
insb
lahf
mov
idivb
push
push
dec
cmp
jmp
sub
or
mov
popf
shl
pop
lret
pop
or
ss
std
and
sub
shlb
popf
push
aad
fucomi
fimull
lock
shll
cltd
movsl
out
jbe
mov
jns
adc
jns
and
lret
sarl
mov
loop
xor
js
jbe
or
mov
shlb
or
add
out
int3
inc
je
pop
sub
cmpsl
dec
adc
lcall
push
lahf
shl
cmp
sub
ret
sub
jo
sbb
sub
ds
insb
mov
jno
out
mov
cli
mov
pop
push
rcl
push
sub
mov
or
add
cltd
adc
ret
or
jae
divb
mov
into
sbb
pusha
lods
sahf
gs
repnz
mov
pop
test
in
adcb
sub
loop
mov
popa
sbb
push
mov
push
cmp
dec
movsl
cmpl
test
xchg
lea
test
xchg
push
adc
inc
cs
out
lods
cmp
jl
lcall
add
fistl
icebp
pop
xchg
push
mov
cmpsb
mov
mov
pushf
sarl
pop
aam
movsl
sub
push
jp
jmp
sahf
cmpsb
mov
jcxz
iret
or
dec
imul
dec
mov
les
mov
movb
add
cltd
repz
push
sbb
shll
or
in
push
lret
lret
mov
aas
bound
dec
imul
ficoml
repz
mov
add
jp
scas
repz
es
lret
lods
and
jne
cltd
jo
aam
inc
sbb
sub
lahf
inc
xchg
nop
call
arpl
test
push
dec
outsb
int3
negb
popa
mov
push
push
lret
sar
pop
insl
ficoms
mov
xchg
std
and
cmp
mov
packsswb
xor
fcmovu
in
fstpt
incb
das
push
xor
enter
xor
push
loop
insb
xchg
and
negb
cmp
test
cmp
sahf
inc
jle
gs
rclb
stos
push
es
add
push
addr16
lret
mov
or
cmpsl
add
test
lods
in
fstps
lcall
jb
icebp
fnstcw
lods
jae
bound
adc
cmp
lea
ja
inc
mov
pop
imul
mov
ret
mov
in
lods
fstps
jmp
repz
sub
testb
insb
add
shlb
inc
mov
cmp
in
iret
movb
adc
ret
into
jg
sti
adc
test
inc
repz
gs
in
inc
mov
aas
mov
pop
mov
jp
mov
negb
mov
inc
push
pop
fnstenv
je
push
lahf
imul
int3
int
and
int3
jl
sbb
mov
sbb
xor
in
iret
movq
sbbl
mov
out
push
int
test
ds
aam
mov
inc
xor
adc
push
or
sahf
aam
clc
mov
xchg
xor
sti
sub
sbb
cmpsb
jmp
fimull
inc
cld
pop
pop
popf
sub
shll
dec
stos
lock
pop
push
jmp
jne
xor
xchg
lahf
push
dec
out
adc
fldenv
push
inc
rcr
repnz
std
mov
xor
push
call
stos
orb
xchg
adc
push
in
mov
or
add
jle
pushf
in
cmc
enter
hlt
push
xchg
jl
mov
lahf
sbb
cmp
mov
jb
testl
loope
insb
fsub
lcall
aad
or
cmpsb
in
sbb
rcrb
add
push
les
xlat
cmp
fadd
mov
push
pop
and
mov
stos
out
sahf
fisubs
incl
dec
data16
mov
ds
xchg
inc
inc
xor
gs
int
mov
jnp
out
bound
fdivr
sti
mov
sbb
ficomps
pop
adc
fnstenv
cmpsb
xchg
ss
stos
inc
jecxz
pop
xor
popf
or
dec
mov
jnp
nop
popa
mov
lret
inc
jb
jo
add
push
scas
or
sahf
mov
sub
adc
stos
sbb
push
add
add
enter
loopne,pn
or
sbb
loope
and
jb,pn
scas
insl
stos
movsb
sar
repz
lahf
in
mov
in
scas
cmpsb
int3
lock
dec
jbe
shrb
inc
insl
cmpsl
push
idiv
dec
dec
mov
shlb
adc
negl
inc
jmp
adc
xchg
fcompl
jne
add
pushf
fistpll
and
sub
xor
mov
fs
xor
push
xorl
mov
or
into
dec
fwait
sbb
xor
bound
into
jb
push
add
push
shrl
hlt
xchg
cmp
cmp
pop
xchg
aas
out
inc
push
pop
push
lret
lret
rcr
and
cltd
xchg
unpcklps
adc
pushf
orb
dec
mov
mov
outsb
ljmp
push
mov
jns
sbb
push
push
popf
xchg
cmpsl
ljmp
es
lret
mov
cmp
mull
imul
gs
loopne
ss
cmp
add
lcall
push
xchg
dec
cmpsb
adc
inc
lock
mov
push
pop
xlat
stc
add
fwait
mov
inc
rcrl
call
push
dec
out
repnz
inc
addl
fcompl
test
jno
jl
pop
cmp
jb
in
mov
mov
out
and
or
imul
mov
insb
shlb
pop
add
lcall
enter
add
sbb
subb
loope
xor
dec
mov
nop
dec
push
shlb
imulb
xchg
and
loopne
cltd
cmp
mov
shrl
adc
ret
repz
fsubl
xchg
shrb
jbe
int3
insl
shr
inc
movsl
mov
lods
add
fnsave
mov
add
sarb
decl
inc
sbb
and
mov
dec
mov
hlt
sahf
cltd
pop
insb
push
out
inc
rol
mov
adc
inc
adc
xchg
sbb
popf
mov
mov
sbb
dec
xor
inc
call
cltd
add
xchg
pusha
sarl
xchg
rcll
rolb
imul
adc
mov
pop
sub
mov
jg
lods
je
test
cmp
push
or
mov
mov
inc
fwait
sub
mov
gs
jmp
stc
sbb
scas
leave
sub
jmp
lret
insl
movsb
jnp
iret
dec
xchg
imul
jmp
adc
arpl
loope
shlb
dec
sbb
test
popa
ds
xchg
cs
jp
jg
jns
in
push
icebp
into
dec
cmp
mov
fsubrl
inc
fmull
xchg
sub
repnz
or
gs
sarl
push
or
ss
js
test
mov
inc
cmpsl
dec
test
dec
loop
sarb
inc
dec
jecxz
or
andb
lods
imul
mov
dec
loopne
movsl
fistl
mov
xor
addr16
inc
add
lahf
ror
xlat
push
or
and
add
sahf
push
leave
test
mov
pop
fidivrl
gs
sbb
or
notl
ret
ss
ss
aaa
int3
push
jo
dec
inc
movb
js
lds
pop
mov
cmp
dec
mov
xchg
lret
jns
in
in
imul
fisubs
lret
movsl
cli
lods
push
lahf
iret
push
cmp
jae
jmp
mov
xchg
gs
sbb
pop
mov
sub
and
pop
shl
xor
xchg
cmp
pushf
mov
push
scas
lock
fwait
addl
pop
enter
mov
jl
dec
jp
in
call
inc
push
mov
fcoml
fistps
cmp
sub
push
out
cmp
lea
mov
pop
pop
in
insl
push
mov
call
mov
push
js
repz
sbb
daa
daa
inc
sbb
mov
jne
js
jnp
xor
inc
data16
xchg
sub
adc
insb
mov
xor
pop
jo
int3
dec
in
cld
inc
je
mov
mov
xchg
jo
inc
or
pop
mov
je
cs
inc
jmp
stos
iret
mov
roll
or
pop
push
inc
or
loop
push
sub
sbb
dec
add
dec
outsb
adc
lods
adc
nop
xor
mov
ret
shrb
push
sbb
loop
mov
push
dec
mov
or
test
imul
lea
jns
enter
cmc
xchg
insl
imul
insl
or
ljmp
push
movsb
xchg
and
mov
mov
stc
mov
push
adc
xor
movl
xchg
mov
mov
fcmovb
and
cmp
sbb
cs
je
push
pop
lods
loope
xchg
and
bound
rcr
xchg
adc
jne
or
jb
sbb
leave
xchg
int
iret
lods
dec
lret
jae
or
mov
fimuls
lds
incb
ljmp
ss
ja
inc
push
mov
ret
cli
call
orl
push
aam
sbb
or
sarb
pop
pop
nop
fbstp
lods
out
fs
mov
adc
and
mov
scas
add
cmp
lds
and
jmp
dec
and
adc
stos
mov
ljmp
mov
scas
pop
inc
cld
push
test
xchg
xor
je
lds
jbe
je
iret
imul
jns
add
sbb
cs
mov
fmuls
xchg
dec
aaa
aaa
and
jmp
les
pop
dec
adc
fs
pop
cltd
mull
mov
aaa
dec
std
pop
clc
bound
cmp
xchg
pop
mov
sbb
add
test
add
js
es
jmp
push
shrb
and
and
out
cwtl
bound
inc
add
in
call
sub
cld
mov
addr16
sbb
test
outsl
clc
or
leave
mov
cmpb
mov
mov
push
sbb
mov
sbb
movsb
test
dec
mov
test
loop
in
mov
push
pop
daa
push
mov
pop
cltd
and
fwait
stc
lret
fcomps
sub
loop
push
loopne
push
pop
fimuls
push
sahf
mov
push
or
push
mov
idivl
add
imull
jns
mov
cmpsb
push
add
xchg
sbb
jl
cmp
rcll
or
call
lods
arpl
jp
adc
les
das
adc
mov
movsl
mov
int
dec
subb
scas
xchg
fmuls
lods
add
inc
adc
inc
les
sbb
and
jo
push
pop
jecxz
and
jp
std
in
cwtl
sti
fstps
sbb
mov
loop
adc
mov
call
push
xor
call
sbbl
hlt
rcrl
cmp
xor
gs
stc
xchg
xor
push
push
push
inc
inc
outsb
pushf
jb,pn
xchg
flds
pop
mov
inc
lret
mov
nop
ja
jae
inc
pop
popa
cmp
sub
sbb
or
adc
insl
xchg
out
inc
pop
mov
xchg
jae
cli
pop
movsl
and
out
pop
cmp
mov
sub
mov
out
cmp
stc
sbb
cli
gs
aad
dec
cmp
jnp
push
ja
sub
xchg
outsb
aam
mov
sub
inc
adc
sub
jmp
cmpb
add
bound
clc
bound
mulb
pusha
push
ret
jbe
insl
dec
aas
xchg
jo
popf
jb
xor
inc
mov
test
jge
inc
jns
push
cld
dec
fsubrp
aam
push
out
pop
adc
scas
sub
mov
dec
lret
imul
pusha
fidivrs
inc
push
je
mov
mov
imul
fdivs
arpl
xlat
hlt
push
sbb
mov
fs
xchg
sbbb
mov
mov
lcall
and
cmp
fisubrl
movsl
ja
daa
sbb
scas
mov
jmp
sarl
mov
jle
inc
xlat
divb
push
clc
sub
subb
pop
inc
xchg
push
pop
sub
and
lcall
ret
jl
pop
xchg
inc
loope
mov
mov
sub
mov
pusha
jb
inc
sub
outsb
loope
fimuls
int
push
jnp
and
jns
inc
jnp
jo
cmc
inc
pop
mov
xor
pop
sub
cmp
mov
test
ss
lcall
mov
enter
push
xor
or
fcmovne
or
mov
jle
dec
fwait
mov
cs
cmp
lea
mov
test
lcall
rep
dec
out
adc
or
fs
xor
outsb
add
push
lret
arpl
test
dec
inc
and
enter
sbb
jl
std
inc
xchg
cmp
mov
fisubs
out
xchg
imul
cmp
push
das
dec
sub
out
mov
cli
push
scas
movsl
inc
aam
sbb
push
mov
xchg
inc
or
gs
shll
test
cmp
mov
bound
cli
out
and
clc
lret
dec
scas
fwait
inc
mov
out
notb
pop
pusha
pop
negb
dec
or
pop
andl
sub
xchg
inc
sbb
xchg
push
pop
mov
lods
mov
pop
pop
aam
lds
mov
jmp
cmp
pop
xor
scas
cltd
dec
sbb
movsb
fwait
cs
pop
jno
jae
add
out
mov
mov
int3
mov
ds
lret
ret
xchg
mov
sub
push
push
nop
mov
rcll
loop
mov
and
les
orl
pop
dec
mov
pop
jp
stc
pop
pop
xchg
cwtl
xchg
inc
xor
xor
mov
mov
and
dec
inc
lods
shlb
je
insl
xor
out
sub
xchg
pop
push
dec
xor
rcll
adc
ljmp
bound
out
inc
cmpl
cmp
jae
jecxz
repz
adc
aaa
mov
mov
mov
lods
lods
mov
dec
jnp
out
inc
or
clc
dec
mov
pushf
lea
dec
test
lock
dec
out
call
cs
aaa
push
cld
adc
in
jb
into
push
and
pop
outsl
fisubrs
enter
inc
jmp
outsl
or
insb
add
push
jbe
lret
push
jne
outsb
xchg
dec
adc
lahf
cmp
xchg
or
test
repnz
mov
cmp
leave
ret
leave
out
lock
inc
jb
mov
cwtl
ljmp
lea
add
imul
loope
es
xor
popf
xchg
pop
test
mov
adc
xchg
sub
adc
cmp
dec
push
mov
enter
push
add
lahf
fidivs
xchg
sbb
sub
add
cmc
or
fdivs
decb
adc
mov
mov
ss
xchg
icebp
repz
cmc
lock
stos
rorb
or
adc
sbb
push
fisttpll
adc
pop
sub
xchg
or
sub
lds
xor
fs
dec
mov
mov
xor
mov
cmp
test
cmp
mov
scas
xor
call
sbb
mov
and
push
mov
lret
or
push
iret
pop
pop
leave
xor
imul
sub
cmpsb
add
in
sub
test
mov
scas
jb
sbb
mov
mov
xchg
fisubl
jo
adc
addl
lds
mov
dec
adc
bound
pop
cmp
fidivl
repnz
add
outsl
outsl
sub
outsb
push
nop
cmp
mov
test
ret
xchg
aad
mov
inc
outsl
lea
push
iret
pop
jge
push
xchg
ljmp
add
shll
das
and
les
inc
mov
shlb
loop
xor
pusha
shl
ss
rcll
sub
stos
addl
lret
addr16
andl
sti
xor
adc
out
push
bound
xchg
shl
cli
and
mov
adc
pop
jae
pop
pop
out
ss
ret
push
xor
xorb
xchg
sub
or
jae
xchg
mov
jp
ss
dec
stc
fidivs
sub
popf
sbb
xchg
aad
jno
test
clc
fucomip
xchg
cmp
jns
test
xor
xchg
sbb
or
xchg
cmp
enter
sbb
xor
jae
adc
subl
pop
push
adc
mov
out
sbb
push
nop
jg
push
mov
sbb
cli
adc
test
mov
dec
enter
pop
ljmp
push
repnz
xchg
in
scas
cmc
out
pop
stos
mov
fs
mov
daa
jecxz
out
bound
sub
xor
adc
outsl
dec
mov
mov
mov
sahf
mov
out
lcall
js
addb
or
mov
mov
or
sbbl
popw
clc
or
sub
xchg
mov
loop
push
in
mov
mov
outsl
or
adc
enter
enter
imul
mov
xchg
shr
inc
fisttps
inc
push
xchg
or
rorl
testb
insb
popf
test
xor
les
push
jb
inc
jbe
xor
inc
pop
sar
mov
gs
and
out
cmp
pop
cmc
push
ret
pop
cmpsb
fdivl
stos
aaa
and
idivl
movsb
clc
mov
cmpsb
std
movsl
inc
addl
sbb
ret
rcll
push
js
xchg
inc
jno
cs
add
xchg
pushf
cld
jg
sbb
xchg
shrb
fiadds
bound
scas
enter
sarb
cmp
lret
mov
ja
xor
shlb
and
rcrl
jno
out
mov
adc
and
outsb
jle
aam
int3
dec
popf
cmpsb
aas
pop
add
xor
imul
lods
mov
or
cltd
inc
fldcw
adc
gs
orl
sbb
stos
js
jl
test
adc
dec
lret
pop
jmp
sub
mov
jmp
loopne
jmp
mov
daa
xor
sbb
fnstsw
sarb
xchg
jo
in
lcall
outsl
in
or
je
inc
xor
mov
into
and
mov
push
aad
cmp
sbb
mov
repz
mov
xor
rcrb
mov
int3
pop
jo
scas
mov
es
test
xor
enter
das
insl
subb
pop
int
lret
mov
xor
xchg
daa
xlat
mov
lret
mov
xor
fsubs
imul
push
notb
sbb
sbb
cs
roll
dec
mov
fsubrs
fs
lahf
addr16
jge
pop
inc
test
xor
inc
adc
or
decl
dec
lock
stos
push
aas
jae
add
xor
call
loop
jbe
in
xchg
xchg
adc
xor
sub
lret
test
ret
and
ror
adc
das
mov
jmp
sbb
fadd
cmp
dec
ror
xchg
aas
sar
and
jnp
jb
aaa
sub
loopne
jecxz
enter
mov
push
push
out
pop
lretw
stos
out
pop
and
imul
test
dec
ds
push
push
nop
mov
adc
sub
mov
mov
jne
jbe
lret
xchg
and
es
scas
lock
ficomps
test
out
mov
inc
push
aas
push
mov
loope
push
dec
shrb
js
scas
push
dec
je
iret
or
inc
stos
imul
adcl
sub
add
lds
xlat
mov
xor
jge
and
push
dec
clc
push
int
lods
sbb
mov
push
sti
popa
lods
and
jecxz
mov
icebp
mov
jl
xchg
pop
and
sub
sahf
dec
mov
cmp
insb
fists
mov
ss
daa
ja
fisttpl
jl
cltd
cmp
repnz
scas
in
addb
xchg
xchg
fisubrl
in
add
add
or
mov
shlb
mov
in
jge
push
movsb
mov
mov
iret
aas
rorb
and
loopne
xor
push
and
jg
and
loopne
and
mov
pop
sub
dec
movsb
inc
icebp
mov
mov
pop
push
mov
lret
push
mov
fmul
ret
dec
cltd
les
in
and
push
adc
cmpsb
test
out
jmp
sbb
rol
daa
loope
dec
push
mov
mov
sbb
add
lds
stos
in
in
inc
jmp
sub
xlat
leave
pusha
sub
nop
sbb
shld
aas
sub
aas
mov
xchg
fdivl
dec
lds
dec
scas
iretw
inc
lds
jb
pop
sub
fbld
sti
dec
mov
mov
out
add
iret
addl
in
mov
pop
movsl
pop
daa
fwait
stos
sbb
es
out
and
push
std
int3
cmp
xor
aam
mov
fstpl
lock
cmp
push
lcall
sbb
out
loopne
adc
out
es
mov
jnp
and
sbb
fnsave
or
push
mov
out
xchg
pop
ss
lret
lret
and
push
fnstenv
test
sub
repnz
scas
fnstcw
iret
mov
xor
fs
jns
mov
test
nop
jcxz
jg
fs
sub
adc
cmp
sbb
cli
dec
jecxz
and
loopne
in
mov
xor
shlb
cmp
sub
movhps
push
xor
testl
popa
ljmp
out
icebp
pushf
xchg
hlt
dec
popa
stos
in
xchg
jnp
sahf
jmp
cli
scas
shl
test
adc
mov
test
pop
inc
mov
mov
fldl
or
or
outsb
mov
pminsw
fwait
je
add
addb
add
mov
push
push
and
or
add
repz
dec
in
mov
bound
aas
dec
pop
fisubl
in
scas
dec
outsl
fcoml
push
sub
pop
mov
jle
iret
sbb
int
and
rcr
test
pop
pop
pushf
mov
xor
jl
ja
inc
mov
adc
rcrb
sbb
push
loop
dec
adc
jge
mov
jno
nop
push
orl
and
push
in
xlat
subl
pop
cmc
inc
fs
inc
test
subl
mov
imul
dec
mov
inc
sahf
pushf
sub
into
or
out
sub
icebp
sub
movsb
cli
mov
aas
scas
jl
adc
inc
mov
xchg
dec
out
and
int
xor
fnsave
adc
sbb
js
push
jo
inc
cmp
in
sub
and
inc
dec
cs
xchg
push
lds
fisttps
jmp
mov
shr
xchg
test
dec
das
cmpsl
pop
and
push
fwait
push
add
mov
sub
ss
pop
cmp
and
mov
jl
pop
mov
jbe
pop
subb
outsb
iret
cmp
pop
xor
in
dec
rcrl
xchg
sbb
icebp
mov
xchg
je
and
les
pusha
in
mov
fstp
and
pop
dec
or
push
lret
pop
sbb
mov
lods
sub
jg
nop
imul
sub
inc
sarl
or
cltd
mov
je
cmp
mov
aad
xchg
push
imul
sub
sub
jg
push
es
sub
xor
and
hlt
sub
faddl
aaa
test
fisubrl
aas
sbb
mov
mov
mov
je
cwtl
pop
and
leave
inc
dec
insl
add
imul
jmp
repnz
leave
inc
jo
ja
cmc
loop
mov
testb
or
push
shll
dec
xchg
lret
or
adc
sti
push
ret
andl
nop
data16
int3
rolb
aam
and
dec
dec
jge
xor
popf
sarb
jmp
out
xchg
adc
jo
flds
push
sbb
jae
mov
fmuls
movsb
lds
into
sub
sub
repz
pop
push
dec
lret
lret
lcall
xor
gs
aas
out
jl
js
xchg
jp
dec
fcmovne
pop
jg
push
sarl
push
cli
xor
rorb
int3
nop
mov
push
fld
ret
test
mov
push
imull
in
jl
mov
mov
add
dec
lea
mov
popf
jmp
leave
mov
pushf
adc
inc
lcall
xlat
dec
aam
mov
test
inc
or
and
je
fsubrl
or
xor
dec
cmc
mov
sub
std
xchg
push
loopne
out
jmp
outsb
daa
mov
sub
adc
popf
sbb
ds
mov
adcb
or
mov
dec
or
adc
movsb
or
popa
pop
paddusw
cmp
jecxz
jecxz
shlb
or
sub
push
push
ss
push
jle
movsb
decb
fdivs
or
push
mov
jno
or
stc
loopne
popf
xchg
fldcw
adc
jmp
stc
loopne
mov
jge
mov
dec
aad
stos
pop
cld
or
and
idiv
pop
sbb
mov
fisubl
xlat
popa
out
inc
add
outsl
mov
sbb
subl
repz
aas
cld
das
shll
rorb
out
mov
pop
adcl
daa
sub
mov
xchg
test
sti
xchg
add
inc
addr16
push
cli
lret
ficoms
pop
jbe
ret
cmp
ds
cmp
add
movsb
int
sahf
popa
outsb
adc
iret
push
pop
scas
fwait
and
sub
sbb
and
sub
insb
lock
xor
outsb
lcall
loope
xor
sub
std
push
sub
mov
and
pop
test
addl
jb
es
xlat
mov
dec
sbb
test
mov
cmp
xchg
xor
inc
jns
fbld
jae
push
shrl
xor
sbb
lret
dec
into
sub
insb
cmp
and
add
in
out
push
cmpsb
push
cmp
mov
or
lcall
pop
daa
addr16
stos
fbld
mov
repnz
sub
cltd
mov
jo
lret
adc
xchg
nop
push
data16
adc
inc
pop
jb
lea
mov
out
jae
push
push
push
aaa
clc
addr16
mov
icebp
push
shlb
cmpsb
xor
lock
loopne
insl
lods
repz
ss
mov
stos
outsb
cs
mov
mov
xchg
addr16
and
ja
test
add
mov
ljmp
and
xor
aad
or
cmc
mov
mov
stos
test
loopne
movntps
mov
enter
outsl
mov
xchg
loope
les
cmpsb
inc
adc
mov
cwtl
popa
fsts
lds
loopne
xchg
inc
adc
pop
js
xchg
mov
fldt
inc
mov
jb
js
sub
and
shll
les
sarl
ret
or
mov
cmp
out
shrb
push
jmp
push
cmp
in
psrlq
lods
loope
and
mov
std
jecxz
pop
shlb
jecxz
addl
sbb
pop
and
cld
pop
es
ja
jno
icebp
push
rcr
cmp
push
inc
imul
mov
imul
sbb
mov
dec
imul
xchg
xlat
lds
cmp
stc
or
cld
sub
jns,pn
test
mov
in
sti
icebp
xchg
out
push
inc
cmp
push
les
sub
insb
ds
enter
add
cmpsl
fisubs
mov
orb
mov
shll
outsb
mov
dec
dec
insb
jge
leave
dec
dec
sbb
pop
lds
in
rclb
push
jle
or
inc
cltd
mov
lock
push
mov
lcall
sbb
enter
push
sub
jb
adc
sub
rclb
es
in
pop
inc
push
inc
je
lods
xchg
xlat
repz
cmp
sahf
repnz
aas
mov
fistl
lret
sbb
mov
push
sbb
push
adc
lock
xor
mov
add
leave
and
imul
cmp
xor
cwtl
lods
push
mull
lret
jp
mov
fsubs
push
cmc
jge
or
addl
loop
cmc
data16
cmpsl
mov
addr16
pop
jecxz
cmpsb
xor
scas
in
movsb
iret
repnz
repnz
mov
mov
mov
imul
iret
nop
jns
xchg
cmpxchg
dec
aam
xchg
lret
adc
adc
stos
mov
inc
mov
orb
in
xchg
jnp
xor
add
scas
mov
adc
xor
outsb
mov
fcoml
inc
mov
or
jge
jecxz
ja
hlt
popa
ja
add
fdivl
sbb
inc
mov
add
dec
dec
inc
into
out
lock
pop
roll
insb
movsb
shlb
outsl
sub
sbb
sub
cmpb
pop
pop
or
or
aad
push
fwait
xchg
push
sub
jno
lret
xchg
mov
jnp
xor
test
cmpb
jno
mov
add
repnz
sbb
and
sub
pop
xchg
sub
sbb
insl
xchg
fimull
adc
into
pop
daa
pop
mov
int3
push
cwtl
or
add
add
dec
xor
xchg
sar
add
adc
sub
dec
loope
inc
popa
push
add
pop
iret
adcl
int3
nop
push
xchg
in
and
out
sarl
loope
popa
add
idiv
xorb
aam
xchg
mov
nop
lret
xrstor
mov
mov
or
aad
sbb
inc
dec
or
jmp
loop
fidivs
fnstcw
fimull
insl
pop
sbb
mov
add
cmp
shrb
loopne
repnz
ret
push
pop
sbb
jmp
inc
xchg
mov
pop
sbb
sti
lods
movsl
inc
lret
lods
adc
popf
sbb
fwait
daa
sub
rcl
out
push
mov
cmc
jmp
mov
xor
ret
pop
push
jb
aaa
jp
xchg
cmp
dec
into
push
orb
imul
jle
stos
pop
mov
mov
out
js
jg
sub
adc
inc
adc
insb
test
dec
mov
shl
inc
flds
inc
xchg
mov
sbb
bound
movlps
push
jl
or
xor
pushf
xchg
xor
jnp
sub
push
dec
mov
jmp
xchg
sub
dec
stos
cmp
lret
and
dec
xchg
push
lods
outsl
in
arpl
in
push
jne
sahf
dec
pop
lock
aas
ror
jae
cmp
aad
rorl
pop
xor
inc
repnz
dec
js
sub
jg
frstor
mov
testb
xchg
stos
push
and
cmp
sahf
xchg
mov
cmp
xor
and
ret
rcrl
loop
sub
jae
rcr
add
pop
or
push
mov
inc
jl
xlat
imul
push
add
stos
lods
xor
rorb
out
inc
mov
and
xor
arpl
cmp
jge
or
mov
push
cmpl
les
push
daa
dec
popf
mov
stc
jp
sbb
adc
shll
das
test
insl
xchg
mov
call
lods
inc
outsl
ficompl
xor
or
fsub
mov
xor
out
mov
into
mov
xor
push
imul
inc
mov
sub
fnstenv
push
lcall
and
andl
inc
push
mov
push
fld
sub
adc
cltd
ja
in
adc
or
sub
mov
loop
adc
jnp
inc
pop
pop
sub
out
push
dec
and
test
push
bound
mov
adc
cmpsl
sbb
inc
cmp
inc
orl
cmp
mov
mov
and
jne
push
clc
int3
mov
icebp
mov
and
push
sbb
mov
gs
inc
enter
push
cld
jne
loope
or
dec
sbb
gs
leave
cld
movsb
adc
and
xchg
sub
mov
push
mov
push
sub
addr16
lods
and
repz
bound
adc
sbb
and
sbb
stc
adc
bound
push
in
add
aam
mov
lret
fsub
test
xor
inc
fdivs
leave
ja
ret
mov
mov
je
xlat
sub
sbb
and
push
dec
push
insb
inc
in
or
mov
fs
push
inc
arpl
adc
jg
in
out
filds
movsl
xchg
pop
dec
imul
movsl
pop
add
insl
hlt
xor
sub
mov
addr16
mov
inc
orb
adc
cs
sub
icebp
inc
test
movsb
lret
in
push
and
in
das
or
pop
or
dec
mov
fdivrl
icebp
cmp
inc
lods
enter
in
clc
add
mov
push
scas
jg
ds
sbb
movsb
clc
cli
repnz
and
loopne
mov
mov
sub
jmp
pushf
jo
sbb
les
pop
jae
dec
xor
aaa
stc
call
les
dec
mov
cmpsl
subl
mov
in
cli
sub
and
mov
imul
lcall
jp
mov
pushf
repnz
jb
mov
scas
movsl
jmp
pushf
ret
fnstenv
out
in
add
ja
das
mov
push
sahf
sbb
inc
xor
imul
xlat
in
das
lret
aas
add
lods
mov
cmp
inc
mov
arpl
or
lods
cmp
dec
sub
add
add
add
das
out
xchg
jae
testb
cmp
push
xor
sti
ficomps
imul
ror
and
or
jmp
rolb
lret
xchg
fidivrl
cmp
sbb
lret
scas
cmp
fs
jl
sbb
std
mov
sbb
add
mov
mov
fstpt
mov
ljmp
cmpsb
ljmp
jp
sbb
mov
fiadds
int3
adc
or
inc
push
cmp
sbbl
popf
in
dec
inc
push
push
addl
imul
ds
dec
nop
loop
fwait
jle
jo
dec
sar
xchg
jno
xchg
arpl
inc
xchg
popa
out
push
mov
insb
xchg
jge
push
xor
mov
ret
cmp
push
xchg
jle
jb
fs
xor
js
push
dec
adc
jb,pt
fs
cmpl
scas
cmpsb
inc
in
mov
aaa
mov
aad
test
push
add
idiv
stos
shr
imul
pop
test
and
sub
jl
mov
in
cmp
mov
sub
xor
gs
xlat
jb
cmp
mov
mov
ljmp
mov
add
insl
fistpll
lock
jle
dec
mov
jecxz
loope
ljmp
sub
xchg
pop
mov
ret
mov
cmc
test
call
in
addr16
int
in
xlat
sbb
pop
sbb
push
pop
mov
jg
jecxz
dec
addr16
adc
and
jecxz
mov
mov
std
mov
lock
inc
sbb
add
mov
push
fxch
rorl
and
add
jo
scas
mov
pop
jae
shlb
xor
scas
pushf
jb
icebp
xchg
les
inc
adc
lret
inc
mov
repz
repnz
test
adc
dec
scas
mov
xchg
mov
mov
adc
adc
mov
push
sub
lods
lret
cmp
fst
imul
xor
push
in
sahf
add
packssdw
subl
xor
mov
push
data16
nop
inc
subb
fdivrs
fwait
add
cwtl
lret
daa
ret
mov
aad
ja
mov
insb
in
mov
dec
fs
rol
int
adc
mov
cld
xor
sbb
cmpl
movsb
enter
push
jg
add
stos
or
xchg
inc
aad
mov
inc
ret
ja
add
in
push
xchg
jne
and
ja
xor
pop
mov
sbbl
mov
andl
out
or
sbb
pushf
std
das
cmc
mov
arpl
xchg
lea
icebp
fnstsw
xchg
mov
xor
xchg
lea
or
mov
js
or
in
and
ret
inc
shlb
cmpsb
xor
jns
cmp
idivl
mov
cmp
sub
loope
jo
daa
mov
test
lock
aam
push
cmp
lods
shr
inc
test
lret
xchg
xor
ss
cmp
arpl
or
outsl
or
outsb
je
in
sub
xor
pushf
movsl
xlat
push
scas
mov
jl
pop
ret
jp
push
stos
orl
dec
pop
dec
clc
je
test
push
jmp
je
xchg
cmpsl
aas
sbb
add
xchg
int3
jo
and
sub
jbe
lds
sub
inc
pop
loopne
add
arpl
mov
cld
cmp
cmp
int
adc
out
out
pop
test
sbb
xchg
clc
std
cli
lret
rcrb
xlat
shlb
dec
into
mov
mov
mov
jle
ljmp
mov
loopne
nop
filds
cli
xchg
cmp
movsb
addr16
dec
fcmovbe
or
in
clc
xor
xor
jmp
dec
leave
test
cs
leave
movsl
jg
push
xor
or
movsb
push
mov
popf
cltd
pusha
push
mov
out
imul
and
call
popa
mov
rcrb
push
mov
pusha
lock
cmc
in
sbb
add
repnz
int
dec
mov
int
cmp
arpl
fcmovnbe
pop
iret
ljmp
aas
dec
jge
dec
daa
push
and
sbb
rcll
aam
das
stos
dec
cmp
sub
dec
dec
mov
out
in
sub
aaa
loopne
adc
imul
xchg
pop
sbb
push
mov
dec
pop
mov
test
je
pop
clc
xchg
test
jl
jle
and
enter
aam
leave
ret
aam
iret
mov
mov
and
mov
f2xm1
mov
xor
dec
std
iret
lahf
sahf
mov
or
aaa
mov
add
mov
pop
mov
and
sarl
sahf
das
pop
xor
sahf
mov
ja
mull
pushf
bound
cmp
repz
loope
mov
fbld
and
push
movsb
in
pop
mov
daa
cmpsb
dec
in
stos
pop
clc
mov
repz
rcl
testl
adc
dec
clc
cmovs
dec
jle
out
sbb
ret
jae
xchg
lahf
sti
movsl
xbegin
aam
cmp
jecxz
or
or
xchg
in
jnp
loopne
lea
and
xchg
adc
xchg
ljmp
out
int
sub
jp
dec
mov
aad
dec
pop
mov
dec
imul
xchg
cmpsb
mov
mov
pusha
jbe
fstpl
int
sahf
test
xchg
xor
cmpsb
movl
hlt
lret
xchg
sub
js
mov
add
into
sbb
test
and
mov
pop
mov
lods
leave
xor
xchg
sbb
sub
addr16
outsl
enter
xchg
jb
int3
cmc
fidivs
scas
lods
ljmp
loope
sbb
pop
arpl
push
jae
scas
pop
xchg
aas
push
jae
ja
sbb
jae
das
mov
and
add
jo
xor
insl
push
cmp
nop
jmp
std
aad
incb
and
adc
rcrl
std
push
out
push
or
aam
mov
xor
ret
les
cmp
ucomiss
in
ret
add
sub
dec
push
arpl
add
push
cmpsb
xchg
loop
pop
jmp
xchg
mov
dec
imul
shlb
sbb
add
sti
sbb
mov
mov
roll
hlt
das
mov
cmp
pop
jp
sbbb
sub
or
rclb
or
cmp
mov
mov
push
mov
pop
adc
fnsave
pop
cmp
sub
lcall
inc
outsb
arpl
pushf
ret
lock
lods
nop
fstp
pop
or
or
dec
fstl
pop
jns
sahf
jge
lods
xchg
mov
fldcw
add
dec
testl
push
icebp
jb
push
cmp
xchg
fstl
xchg
and
mov
sbb
test
sub
xchg
inc
inc
xchg
je
sub
es
mov
dec
jbe
add
inc
pop
xor
lcall
pop
lds
mov
testl
bound
cltd
pop
addl
push
sub
xchg
loop
ret
cs
and
lea
icebp
mov
cld
jg
outsl
call
out
mov
mov
outsb
push
mov
jb
push
jo
cmp
mov
jg
movsb
je
das
mov
or
jnp
fnstsw
rorb
sbb
push
fstl
out
data16
add
lahf
or
stos
lahf
test
lods
fistl
les
in
xor
mov
mov
jmp
mov
aad
cmc
lret
mov
jle
and
xchg
xchg
ret
xor
adc
pop
jns
jmp
sahf
jl
push
dec
push
or
jnp
jae
scas
es
mov
lcall
inc
sub
push
inc
sbb
loop
gs
sahf
jge
shrl
dec
rorb
inc
xchg
test
icebp
adcb
and
jecxz
or
xor
ss
push
jns
leave
cli
les
inc
add
cmp
call
sbb
test
roll
out
test
mov
imulb
test
sbb
imulb
xor
push
sahf
push
imul
xlat
imul
retw
xor
sbb
or
js
sbb
mov
push
xchg
call
inc
mov
push
mov
jbe
sub
mov
ret
add
movsb
mov
orl
into
js
test
pop
in
pop
cld
cld
cmp
pusha
std
gs
movsl
cmp
pop
xor
mov
rclb
ret
pop
pushf
inc
mov
add
aas
jecxz
ret
jbe
lret
adc
stos
into
dec
incb
jmp
pop
fdivrl
dec
or
iret
and
mov
nop
xor
mov
cmp
or
pushf
shlb
sti
shrb
inc
jnp
clc
xor
lcall
jmp
mov
and
and
andl
xchg
aaa
ret
iret
push
fdivs
ljmp
jg
cmc
ss
add
mov
mov
push
push
mov
outsl
cmp
pop
mov
or
icebp
add
pop
jne
jecxz
repnz
sub
gs
mov
dec
pop
fs
jle
xchg
vsubss
mov
jge
push
push
mov
insl
test
or
ljmp
movsl
pop
push
and
sub
in
int3
out
ss
cmp
gs
jmp
push
xchg
imul
cmp
xchg
xor
les
dec
push
js
in
mov
mov
or
dec
loop
pop
add
das
fsubrl
dec
mov
lods
inc
push
fcomps
test
dec
je
mov
xor
stos
cld
dec
adc
adc
lds
jg
mov
and
gs
ja
lods
fcomps
psubusw
out
adc
mov
dec
jg
and
enter
inc
mov
push
jecxz
enter
and
sbb
lods
pop
pop
daa
inc
popa
push
pop
pop
std
mov
jge
push
and
nopl
inc
jmp
cmp
das
inc
xchg
fisubl
dec
sub
imul
xlat
outsb
push
cmp
push
scas
enter
insl
out
stos
xchg
arpl
je
xchg
sub
xor
sbb
stos
pushf
mov
out
push
sub
push
add
dec
sbb
push
cli
cs
stc
test
mov
call
bound
xlat
popa
and
dec
fs
popa
sub
push
in
lret
dec
jmp
rcrb
ja
clc
sub
aas
cmp
sub
fmull
push
roll
dec
xor
pop
in
fsubrl
ret
ret
push
adc
mov
sbb
xorb
cs
jb
lds
js
sub
in
arpl
mov
mov
xor
xchg
add
cli
dec
jne
mov
adc
inc
rcrb
lea
bnd
and
push
sub
je
xchg
jle
jge
aaa
js
or
jae
or
out
mov
les
out
dec
adc
xchg
cmc
loopne
jb
clc
xchg
test
mov
sti
dec
inc
cwtl
fldt
push
push
das
daa
loope
adc
push
mov
pusha
sbb
sub
sbbb
outsb
add
nop
sub
rcrl
insb
cmpsl
push
mov
stos
fldl
or
add
incl
pop
repnz
push
std
jp
loope
sahf
dec
dec
mov
cli
bound
test
pop
dec
sti
mov
xor
sub
mov
ljmp
xor
jecxz
sbb
push
add
cld
pop
std
rcll
xlat
stos
pop
or
jp
or
mov
jb
and
mov
cmp
add
cmp
aad
push
mov
push
mov
sahf
jp
fs
push
fistl
jp
mov
clc
lcall
mov
cli
jne
jmp
and
sbb
jmp
jo
sub
aam
leave
pop
shlb
movsl
andb
cmp
dec
cmp
shlb
add
test
jne
out
insl
loope
mov
cmpsb
shlb
mov
les
cmpsl
pop
fcompl
pushw
mov
adc
icebp
jns
jb
in
jbe
orl
fnsave
pop
xor
idiv
dec
lods
add
jne
aam
sub
call
std
sbb
jge
and
jo
ss
es
sbb
mov
cmp
cmp
push
and
outsl
mov
pop
push
xor
sub
and
xchg
jne
test
mov
scas
sbb
sub
mov
fimull
lods
aad
pop
test
lret
pop
adc
jae
lods
int
imul
setle
fidivrl
sub
pop
in
lods
call
and
jge
push
or
push
push
mov
pop
xchg
clc
xor
popa
mov
xor
repz
mov
ficoms
addr16
mov
mov
sbb
and
lds
or
dec
or
mov
lea
pop
lret
scas
inc
adc
pop
adc
movsl
daa
loopne
es
sbb
data16
jp
xchg
cwtl
aam
inc
mov
mov
out
mov
rcr
mov
cmc
cmp
pop
pop
ficoml
cmpsb
xor
cwtl
icebp
mov
gs
mov
mov
xlat
adc
ss
ficompl
cmp
and
je
ja
add
jecxz
sub
ds
repnz
lret
lods
clc
in
sbb
xchg
ljmp
jmp
pop
pushf
shll
mov
shl
sub
adc
call
cmp
mov
push
push
add
cltd
movsl
pop
std
cmp
jmp
xor
lret
jnp
fidivl
lods
jmp
stos
inc
shlb
pop
adc
ljmp
cmp
int
and
repz
dec
in
add
xor
and
dec
mov
mov
movsl
call
imull
pushf
in
test
xchg
lods
pushf
mov
test
mov
lahf
push
in
scas
les
xchg
cwtl
aad
xor
jb
addl
or
ljmp
ljmp
xlat
rcrb
pop
push
mov
jp
cmp
add
out
jbe
cmp
mov
jge
clc
lahf
pop
add
ja
call
scas
cwtl
dec
in
cmp
jg
stos
sub
mov
js
push
pop
in
push
movsl
sbb
ret
mov
pusha
popa
rcrb
clc
push
jmp
fstl
in
push
cs
sbb
lret
jae
cli
pop
dec
mov
pop
mov
jbe
xor
les
push
int3
rcr
insl
cmc
leave
out
adc
mov
jmp
add
bswap
xchg
into
mov
mov
enter
sbb
lds
cli
scas
out
cmpsl
ja
inc
inc
cmp
push
mov
or
scas
sbb
mov
and
lret
scas
mov
fwait
mov
mov
push
lods
insb
lds
mov
shrl
ja
jno
inc
pop
xchg
insl
jmp
push
inc
mov
pop
push
scas
sbb
jl
out
lods
sbb
xchg
jb
outsb
push
fwait
inc
fldl
push
cmp
add
scas
fldenv
cld
test
inc
add
je
push
jmp
mov
fildll
out
in
mov
cmpsb
mov
xchg
or
jns
cmpsb
scas
cmpsb
lock
mov
loop
pushf
xor
and
xor
add
mov
mov
fnstsw
imul
imul
das
popa
dec
jp
add
and
aam
xchg
dec
and
push
in
cli
les
fldt
icebp
out
inc
imulb
adcl
mov
imul
scas
xor
cmpsb
jl
pusha
cmp
dec
jmp
xlat
jp
insb
xchg
or
push
inc
clc
into
repz
add
fcoms
imul
jg
cmp
cmp
loope
bound
in
sub
in
popa
in
enter
sbb
xor
mov
jecxz
sub
xor
push
xorl
pop
in
dec
andb
lret
cmc
cmp
ret
push
sbb
and
cltd
jl
push
sbb
ljmp
enter
pop
push
dec
push
sbb
dec
xchg
ret
sbb
aad
out
aas
jne
cli
fxch
stc
rcll
jp
jle
aaa
cmp
push
test
inc
testb
aam
mov
pop
daa
aaa
and
loope
add
mov
jne
je
jg
or
sbb
jg
xlat
mov
fnstsw
jb
test
test
push
rcll
icebp
jb
pop
sbb
scas
psrlw
iret
adc
in
mov
pusha
outsl
xchg
nop
cmp
in
mov
clc
mov
sub
lret
into
stc
fldl
outsl
xorb
dec
sbb
inc
lock
add
and
rcll
das
pop
dec
mov
cli
movsl
jbe
mov
out
mov
lahf
out
mov
mulb
adc
pop
iret
stos
lds
in
pop
jge
js
lret
mov
stos
mov
push
divl
mov
fisttps
mov
mov
fldenv
jg
das
or
lret
xor
adc
mov
pop
xor
and
add
fisubrl
dec
jp
mov
ret
inc
ret
lods
pop
inc
mov
push
sub
pop
sti
xor
hlt
jne
mov
inc
jmp
icebp
jbe
bound
jle
cmp
scas
adc
xor
sbb
cmp
adc
pushf
sub
pop
inc
pop
imul
pop
or
jb
push
std
push
insl
mov
test
sbb
inc
jp
dec
es
dec
xor
ds
xor
aaa
cltd
cmp
mov
psraw
mov
lcall
push
push
scas
stos
mov
mov
int
addr16
inc
nop
and
sub
mov
mov
ror
nop
outsb
enter
mov
xor
cld
fdivr
xchg
iret
movsl
insb
dec
pop
pop
aas
lahf
jg
or
hlt
cmp
xchg
into
jo
xchg
mov
mov
gs
and
add
xor
clc
xor
rclb
leave
fwait
test
mov
aaa
int3
into
sub
and
lret
cwtl
cmp
or
out
pop
dec
ret
push
in
lds
inc
mov
iret
jne
sar
test
adc
add
xchg
mov
mov
mov
lock
aaa
arpl
ds
mov
xchg
mov
sbb
or
test
cs
pushf
daa
mov
pop
testb
in
std
cmp
jb,pn
test
rcl
or
mov
insb
data16
pop
test
dec
inc
ss
lahf
gs
inc
out
jl
insl
imul
and
adc
mov
movsl
dec
jnp
das
addr16
fsubrl
mov
inc
add
mov
rolb
xlat
dec
orb
add
mov
mov
iret
aas
mov
insl
adc
daa
jne
xchg
gs
add
outsl
jb
mov
test
fsub
insl
loop
or
mov
movsb
cmp
and
in
imul
add
cli
cmp
decl
popa
in
shr
xor
xlat
jno
push
mov
outsb
test
mov
dec
fldt
cld
ds
and
pop
movsb
inc
mov
repnz
xchg
dec
aam
fidivrs
loop
inc
or
lret
notl
jecxz
and
and
pushw
aas
clc
mov
jnp
xor
int3
int3
push
int
jns
xchg
popa
repnz
popa
int
loop
lret
loopne
movnti
fnstcw
orl
push
jle
mov
cmpsl
mov
pusha
mov
mov
filds
add
into
addb
or
in
mov
aam
test
xchg
adc
repnz
dec
sbb
lret
add
cmp
mov
jle
inc
push
clc
arpl
cmp
cli
fnstcw
lret
lea
ror
xor
cmc
int3
fstl
or
jae
mov
add
ret
cmp
rcll
in
fsts
lahf
pop
mov
fdivrl
repz
iret
fidivl
jno
push
paddd
sub
call
shl
xor
pusha
xor
popf
mov
les
add
add
repnz
gs
jp
mov
adc
jmp
add
scas
mul
cli
adc
xor
inc
cmpsl
push
out
xchg
adc
inc
jne
push
inc
mov
mov
add
fisttpll
xor
adc
in
cltd
inc
mov
cmpsl
fisttpl
popa
xchg
stos
test
jo
fisttpll
scas
push
mov
push
or
sub
dec
sahf
xor
and
mov
sbb
sub
cld
adc
jecxz
ljmp
add
and
arpl
add
rcrl
and
ret
push
paddusb
repnz
int3
pop
ret
mov
push
test
push
in
sub
adc
lea
imul
rorl
mov
mov
mull
or
inc
pop
pop
std
or
xchg
and
push
add
es
loope
ljmp
add
add
cmp
push
jl
aaa
push
idivb
xchg
ret
push
rolb
mov
fistl
adc
jle
cmpsl
icebp
adcb
adc
pop
test
pop
jge
ret
cld
mov
bound
cld
clc
movsb
ret
xor
sbb
shrl
pop
repnz
jle
inc
pavgb
pusha
in
adc
or
lret
xor
ret
cmp
push
mov
dec
xchg
jle
xlat
lcall
sub
sbb
imul
sub
sbb
adc
rclb
cmpsb
aas
cli
dec
mov
jle
sub
mov
rcr
fcoms
mov
mov
aaa
jecxz
mov
aaa
dec
stos
sub
test
add
or
test
test
daa
xor
loop
mov
daa
add
outsb
jl
sti
orb
jmp
mov
inc
or
pop
adc
cld
rcrl
inc
inc
call
push
stc
or
pop
xor
mov
cmp
sub
jg
in
adc
xchg
orl
sub
adc
jb
and
sbb
inc
std
xor
std
in
jno
test
lods
pop
xchg
inc
enter
jno
fbstp
jae
cmpsb
mov
xchg
dec
mov
mov
push
in
sbb
fnstsw
pop
jbe
pop
rclb
lret
lds
add
pop
enter
movsb
push
sbb
push
jo
and
ja
out
fbld
or
jp
add
scas
xlat
mov
shlb
push
mov
push
movsb
cmp
fisubs
mov
push
xor
stos
pop
les
pop
out
popa
push
fsubrs
fimuls
inc
mov
inc
sbb
icebp
fwait
je
xchg
mov
cmpsl
js
mov
mov
push
fidivrl
jbe
jp
aad
dec
adc
pop
bound
in
nopl
adcl
sub
cmp
repnz
ds
push
jmp
xchg
stc
xor
xor
testl
in
jle
test
test
push
xor
sbb
enter
dec
xchg
das
in
adc
subl
cmpsl
pop
fucomi
fs
loope
rorb
insb
xor
xor
pop
addr16
out
mov
pop
ds
loope
pop
add
sti
arpl
out
loop
icebp
adc
sub
jmp
call
shrl
jge
push
js,pt
inc
or
fwait
test
lods
je
enter
pop
aam
pop
outsb
mov
jle
repz
jmp
daa
fwait
or
jne
push
mov
xchg
inc
sub
sarb
ficoms
cld
lods
shrb
in
ret
aas
sbb
lret
mov
and
cwtl
dec
adc
ret
in
fcmovu
ljmp
fnstenv
jg
int3
pop
push
rclb
xchg
mov
jmp
mov
roll
jp
xorb
inc
fiaddl
adc
out
lret
pop
jmp
call
add
movsl
push
idivb
mov
adc
push
iret
mov
jno
xchg
or
xlat
lea
addr16
cmpsb
jno
or
pop
subb
in
mov
insb
mov
orl
aam
push
dec
aad
jl
loope
push
mov
in
xorl
inc
mov
mov
shl
mov
std
pop
lods
cs
cmp
in
xor
gs
out
mov
stc
sub
in
xlat
xor
mov
mov
pop
sub
sub
aad
and
xor
add
sbb
bound
cmp
xor
in
inc
push
xchg
push
mov
dec
cmc
and
xchg
add
jns
rorb
add
mov
inc
loopne
mov
mov
dec
imul
mov
mov
mov
push
mov
adc
jmp
or
rcll
inc
push
and
inc
dec
aaa
pop
pushf
sbb
mov
out
repnz
shlb
rcrb
arpl
mov
ja
mov
mov
mov
and
decl
fdivp
push
jg
out
psrld
cmpl
out
xchg
push
add
push
push
dec
cwtl
cmpb
xchg
cmpb
test
dec
pop
sub
mov
jge
sti
cmpl
decl
arpl
mov
arpl
fs
dec
cli
ds
mov
dec
dec
inc
orl
fisttpll
jp
arpl
jo
and
xchg
adcl
imul
arpl
gs
or
mov
out
fmuls
cmp
dec
adc
jl
dec
out
scas
es
jp
sahf
sbb
popf
jnp
fwait
test
push
sbbb
mov
pop
cmp
lock
pop
sti
mov
xor
jo
inc
ret
pusha
nop
and
xchg
jb
pushf
fwait
movsb
sbb
pop
fcmovb
pushf
dec
loop
addl
ja,pt
sub
mov
mov
mov
mov
loopne
lcall
in
mov
and
aam
jg
xchg
xchg
les
outsl
add
push
stc
sarb
cmc
xchg
fdivrl
xor
dec
aad
ja
js
sti
pop
or
ljmp
addr16
popf
stc
add
push
int3
add
fdivr
bound
xchg
mov
cmp
and
adc
mov
jle
outsl
cmp
cld
jns
mov
mov
mov
sbb
out
sub
mov
call
out
mov
test
clc
push
sub
pushf
push
xchg
outsb
pop
addl
mov
loopne
movsl
int
cltd
and
pusha
push
mov
testl
or
pushf
sub
pop
mov
cwtl
je
pop
sub
jecxz
and
pop
mov
or
adc
lret
rcll
pop
cmpsl
adc
cltd
and
cmc
jmp
add
pop
fcmovnu
clc
xor
pop
ds
fs
in
xchg
sti
sub
jle
shl
lret
popf
and
cli
adc
jns
fs
lods
push
mov
mov
xchg
mov
xor
add
mov
arpl
jecxz
dec
aas
or
mov
xchg
out
shll
and
outsb
xchg
sbb
loope
pushf
push
insb
jmp
repz
or
insl
fldl
mov
out
pop
jecxz
mov
xchg
sahf
mov
stos
add
scas
and
xor
jae
aad
div
cmpsb
xchg
mov
stos
pop
je
ret
std
jmp
fs
push
mov
ret
in
cmp
xor
negl
fcomi
adc
js
push
xor
mov
scas
lcall
mov
lock
fdivs
cmp
das
push
mov
pushf
mov
xorb
je
jne
jae
pop
lret
push
scas
mov
inc
xchg
popf
inc
pop
pop
jmp
dec
cmp
fwait
jnp
loop
rorb
jb
jbe
cmp
xchg
lods
sbb
iret
adcl
jl
jmp
adc
push
in
shlb
cmp
sub
cmp
in
jmp
cwtl
sub
pop
jno
int3
cmp
inc
cld
int3
sub
sub
int
or
popf
inc
out
sahf
lds
jnp
jno
mov
sti
in
insb
add
xchg
xchg
je
mov
daa
jp
stos
lds
mov
jle
cmpsl
xchg
or
sbb
push
insb
pop
xor
cmp
shll
call
push
test
das
jno
adc
or
sbb
mov
adc
pop
lahf
push
add
mov
out
sub
call
aad
pop
in
sbb
stos
out
das
in
and
cmpl
insb
xor
iret
jns
and
cmpsl
js
xlat
lahf
cmp
push
cmpsb
mov
inc
daa
lret
ficoms
mov
push
mov
lock
mov
insb
and
inc
scas
add
pop
shrb
iret
mov
mov
inc
xor
rcrb
push
rorl
or
jnp
stos
xchg
gs
lret
hlt
xchg
dec
jle
lahf
sbb
jb
ret
inc
inc
inc
xchg
mov
mov
dec
test
stos
pop
ds
and
push
daa
repnz
pushf
mov
cmp
xor
dec
push
fwait
xlat
jmp
aam
int3
cmpsl
xchg
aam
push
ror
mov
fmuls
dec
loope
inc
adc
test
xchg
inc
in
add
cmp
pop
std
jmp
sub
lock
iret
in
pop
stos
mov
push
jb
pop
shl
dec
dec
sub
xchg
sahf
jae
mov
jo
aas
test
icebp
pushf
push
rorb
ret
scas
fstp
lcall
push
push
mov
mull
cmpsl
mov
dec
push
mov
ss
sbb
movsl
loop
jge
fiaddl
ja
cmc
adc
mov
xlat
push
data16
sahf
imul
ficomps
imul
cwtl
data16
movsl
xchg
mov
cmp
jmp
subl
xorl
scas
hlt
dec
lock
mov
or
fdivrl
mov
sbb
pop
outsb
or
faddl
lea
push
inc
xchg
mov
or
subl
fsubrs
insl
push
insl
push
fnstcw
push
popf
jl
sub
xchg
jle
gs
mov
jbe
orb
lods
jecxz
jecxz
dec
dec
dec
in
cmp
adc
scas
iret
push
add
pushf
dec
enter
mov
cmp
dec
sub
popa
arpl
cli
flds
imul
lods
cmc
and
dec
ss
test
xchg
lret
pop
cmp
les
std
in
xlat
xchg
daa
fidivs
sub
cmp
mov
test
inc
cltd
dec
xlat
xor
cmc
jp
and
and
xchg
cmp
inc
mov
push
add
lcall
in
int
jle
xchg
pop
sub
xchg
incb
push
cmp
shlb
dec
jne
sbb
pushw
mov
js
mov
or
cmp
adc
jnp
jle
lcall
and
aaa
mov
push
repnz
mov
cmp
cmp
psrld
mov
cmc
push
xchg
daa
rclb
mov
das
cs
and
adc
jp
push
xlat
pushf
push
or
test
cmp
and
add
jmp
movsl
lret
out
mov
dec
push
push
sarb
mov
adc
mov
adc
outsb
mov
mov
inc
and
or
jecxz
xchg
mov
imul
das
mov
dec
lea
shr
flds
test
add
addl
jno
dec
insl
jbe
aad
scas
inc
xor
cmp
mov
jle
loop
lods
fwait
mov
pop
ja
fidivrs
xlat
in
push
in
movsb
pop
or
data16
adc
sub
pushf
icebp
push
dec
pop
pop
stos
arpl
test
cmpsb
add
xchg
int3
dec
mov
mov
push
jg
mov
adc
fcmovnb
push
ds
stc
mov
sbb
adc
loopne
and
adc
and
xchg
ja
mov
insb
inc
xchg
fnstsw
sbb
movsb
sub
jo
push
jle
icebp
push
rorl
jl
lds
je
or
bound
test
mov
jg
pop
xor
inc
xor
in
ret
lea
pop
inc
shl
mov
aaa
mov
ds
inc
pop
push
sbb
push
xor
adc
jle
ftst
mov
imull
lods
pusha
lods
adc
test
test
test
cmp
fwait
in
ret
pop
mov
test
and
jnp
clc
xchg
dec
jae
mov
mov
leave
in
xorb
not
insl
daa
jp
loopne
inc
test
in
mov
or
jge
fiaddl
push
rol
lretw
call
in
in
adc
sbb
mov
or
mov
pop
push
jno
or
aaa
jle
mov
popa
test
pop
jns
push
icebp
mov
repnz
ret
pop
and
pop
stc
dec
jb
shll
bound
roll
inc
adc
xor
hlt
dec
mov
xor
jnp
cmpsb
sub
pop
mov
pop
movsl
cmp
popf
scas
cmpsl
adc
lods
pushf
notb
mov
ljmp
in
jns
ljmp
sub
push
insb
or
scas
adc
scas
cld
stc
push
sub
adc
push
in
jne
cld
xor
data16
mov
pop
outsb
and
add
mov
ds
jg
lds
es
dec
dec
jb
cmp
cmpsl
jge
inc
pop
push
adc
mov
mov
jp
mov
outsb
test
popf
jns
mov
adc
mov
inc
add
shll
mov
ret
inc
inc
mov
notb
add
aad
xchg
xchg
jmp
xchg
ret
sub
divb
adc
insl
xchg
lret
push
or
ds
dec
jecxz
mov
jnp
sub
mov
mov
lea
push
dec
cmpsb
jne
test
into
dec
hlt
loope
outsl
xor
fdivs
mov
dec
mov
aad
jmp
mov
push
sbb
dec
das
lcall
repz
push
or
adc
jg
into
rcrl
mov
jnp
les
nop
mov
xor
cmpsb
pop
aad
inc
mov
loop
lahf
es
in
rolb
mov
dec
hlt
jmp
jno
cs
shrb
lods
add
pop
mov
cmpsb
mov
out
pop
testb
out
cmpsb
out
add
mov
popf
push
iret
jae
and
xor
icebp
mov
sar
int3
jne
pusha
les
je
nop
xchg
push
adc
mov
repz
lea
lock
cwtl
lds
dec
dec
dec
int
in
xor
sar
xorl
imulb
add
idivb
cmp
loopne,pn
sub
ret
inc
mov
dec
xchg
out
jae
faddl
movsb
loopne
xor
ljmp
ja
pop
out
xchg
adc
shrb
stos
or
lock
data16
mov
pop
push
iret
movsl
push
cld
ret
push
mov
xor
dec
fcom
or
pop
push
dec
nop
mov
adc
mov
mov
je
push
into
nop
jg
mov
mov
lods
inc
jae
call
mov
mov
push
lods
push
xchg
inc
cmp
test
leave
sti
std
jb
and
cmpsb
xchg
mov
ja
mov
or
sti
pop
adc
push
mov
and
cmpsb
inc
inc
push
scas
dec
cmp
and
lahf
dec
and
in
xchg
mov
lods
es
sub
push
mov
scas
or
mov
mov
fdivs
jge
test
into
sub
ds
jbe
push
dec
cmp
or
fucom
mov
mov
data16
xor
dec
push
lcall
test
sbb
in
dec
mov
inc
and
jno
jne
mov
gs
lahf
insb
and
pop
std
jae
mov
inc
sub
jl
xchg
and
xchg
pop
movsb
xor
stos
std
sbb
mov
push
insl
scas
inc
es
or
cmpsb
imul
pop
cmp
sub
fwait
or
mov
fisubrs
mov
cmp
or
push
push
ljmp
sub
or
xchg
add
or
add
and
stos
cmp
or
sti
sbb
add
dec
in
mov
orb
mov
test
mov
and
xor
push
push
jg,pn
xor
rcll
outsl
dec
sub
xchg
push
mov
mov
jmp
jle
loopne
pop
pop
sbb
mov
add
fwait
testl
or
xchg
dec
push
mov
adc
jge
lret
arpl
scas
ljmp
push
pop
jmp
pop
add
mov
push
dec
test
ja,pn
cmp
mov
and
dec
cmp
daa
dec
mov
bound
je
xor
sub
mov
sar
mov
and
aad
dec
xchg
repnz
mov
popf
scas
ja
aaa
cmc
popf
push
pcmpeqd
icebp
jg
and
xor
nop
cld
mov
cmpsb
jno
aad
iret
leave
dec
adc
daa
ficomps
adc
push
ret
cmp
or
mov
jns
jo
in
adc
rcr
cmc
aam
icebp
inc
std
test
cmc
xor
cwtl
xorb
sub
int
fnsave
fdivs
shrb
fistl
decb
inc
movsb
inc
cmp
fbstp
js
out
cs
fldcw
jae
mov
xor
fmull
mov
subb
addr16
cmp
cmpsb
jge
push
loop
addr16
das
mov
sub
add
dec
xor
xor
fiadds
dec
dec
in
jmp
inc
insl
sbb
outsb
insl
push
inc
rcll
xchg
jp
dec
fbstp
xchg
and
or
fisttpl
mov
push
mov
pusha
out
mov
inc
shll
xchg
jns
mov
sarb
pop
mov
mov
sub
inc
push
sahf
xor
daa
cli
push
cltd
or
cli
sbb
cmpsb
lds
mov
rep
ret
xchg
xor
aas
jb
stos
pushf
bound
dec
add
or
mov
sub
je
jae
dec
sbb
sbb
ds
iret
mov
ja
mov
mov
cltd
adc
mov
cmp
or
pop
data16
add
sub
ljmp
mov
add
fldln2
xor
pop
ret
xchg
sar
xchg
push
pusha
pop
enter
push
notrack
insl
or
sbb
sbb
sti
cmp
test
popf
pushl
jno
and
adc
in
push
in
hlt
cli
and
scas
inc
jae
js
or
sbbl
jp
lods
stos
mov
inc
leave
in
pushf
push
ret
sbb
xor
in
jp
ja
and
hlt
bnd
mov
rcrl
add
int3
fimuls
adc
add
pop
dec
test
or
xchg
mov
xor
xchg
xchg
fmuls
lds
ds
sbb
shll
cmp
mov
fldz
jo
xor
push
dec
ljmp
and
int3
scas
and
mov
xchg
push
fwait
lods
dec
test
and
mov
cli
movl
mov
cmp
push
shlb
in
push
inc
and
sar
adc
add
ljmp
nop
gs
inc
insl
stc
leave
mov
ds
sbb
icebp
mov
fidivs
ljmp
or
jnp
out
nop
hlt
std
push
xlat
lret
cmp
divb
loopne
jg
mov
cmp
mov
xlat
jle
std
jl
addl
adc
sbb
test
mov
je
in
push
movsb
adc
xchg
adc
xor
aaa
xchg
jnp
pop
lret
test
fidivs
idiv
add
repz
stc
push
push
dec
mov
pop
mov
xor
test
or
and
cmpsb
adc
fsubrs
stos
adc
js
xchg
and
mov
cld
pop
and
inc
xor
xor
je
inc
or
pop
mov
or
out
sub
vmovmskps
inc
push
pop
inc
mov
lods
es
push
and
push
mov
outsl
lahf
or
sarb
in
aas
cld
hlt
xchg
inc
lcall
sub
rol
sti
es
dec
push
cwtl
lods
stos
jns
lods
cmp
and
inc
scas
and
insl
stos
repnz
inc
lea
mov
sub
pop
inc
dec
mov
mov
mov
and
mov
leave
dec
push
inc
inc
aas
mov
pop
xchg
mov
jle
repnz
adc
lcall
sub
fistps
mov
inc
pop
lret
cmpl
mov
dec
xor
cmp
add
mov
jl
insl
mov
je
les
pop
fcmove
inc
mov
fwait
dec
lret
xorl
dec
mov
jl
adc
adc
xor
movsl
inc
in
cwtl
jge
cli
mov
fdivrs
push
jbe
sti
and
dec
or
mov
push
push
movsb
je
dec
into
jnp
dec
push
dec
push
lods
ja
fsts
add
jae
pop
mov
arpl
cmp
daa
pop
clc
into
inc
ficoml
push
mov
mov
loopne
mov
lcall
push
push
hlt
xchg
and
lahf
jo,pn
jmp
lea
or
outsl
mov
add
mov
shll
lcall
dec
sub
sti
mov
adc
mov
pop
sbb
xor
ret
mov
push
mov
cmpsl
push
fwait
push
push
mov
jo
aad
std
pushf
jmp
mov
pop
mov
mov
stos
cmc
pop
xsavec
loopne
mov
shlb
push
sub
call
aaa
out
add
jae
cwtl
leave
daa
imul
test
call
mov
sti
cmp
jmp
rcrl
add
push
lahf
repnz
pop
into
inc
or
std
sub
pop
adc
shrl
pop
scas
mov
in
add
mov
pop
shrb
xchg
repnz
push
mov
push
xlat
push
fwait
jne
mov
mov
lds
rolb
jecxz
sbb
mov
cmp
or
jnp
repz
xchg
icebp
and
push
imul
test
inc
addr16
mov
dec
shl
push
lods
in
adc
fidivrl
pop
jo
aaa
ret
push
movsl
push
cmp
mov
nop
xchg
inc
int
sub
add
bound
xchg
movsb
rol
outsl
arpl
jge
and
sbb
jl
cli
sbb
and
jns
pushl
in
jle
ret
fwait
jb
sub
xlat
les
mov
xchg
call
sub
test
pop
int3
lods
add
stc
or
push
pop
decl
lds
add
push
popa
dec
insb
addr16
aad
cmpsl
ret
push
rol
fstps
movsl
sahf
into
dec
add
in
pop
stc
xlat
mov
je
push
cmp
jnp
cmp
push
leave
add
inc
sbb
push
add
leave
clc
pop
dec
jno
sub
lahf
jg
or
sub
inc
hlt
dec
mov
ljmp
int3
push
mov
iret
mov
pusha
adc
out
xchg
xor
sarb
out
movsb
pushf
or
mov
jns
stos
jnp
aas
add
stos
pop
jp
sbb
adc
repz
jg
add
push
loopne
cltd
inc
ljmp
mov
arpl
cwtl
add
mov
fwait
stos
add
push
int
push
sub
pop
inc
test
ds
xlat
mov
and
test
cld
sbb
shrb
lea
inc
outsl
cmpsl
jae
jnp
lods
pusha
and
ret
sub
movsl
insl
fisttpl
repnz
sub
lods
int3
sbb
inc
flds
mov
daa
or
ja
cmpsb
sub
fucomp
or
or
and
in
lret
jle
out
cmpsb
aam
xor
leave
push
sti
in
sbb
sbb
pop
sarl
fnstsw
cmc
scas
loopne
push
hlt
std
testb
out
fwait
test
test
popf
or
dec
jp
fiadds
mov
popa
call
jge
push
and
fmuls
rorl
jg
fnstcw
sub
mov
lret
adc
mov
lock
pop
cmpl
mov
test
aaa
lret
push
mov
mov
mov
pusha
rclb
fwait
nop
int3
dec
fnsave
leave
pop
mov
sub
enter
dec
cmc
mull
lahf
jno
inc
outsb
xchg
mov
fidivl
outsl
imul
jmp
xchg
xchg
loopne
lret
pop
ljmp
xlat
or
xchg
ljmp
mov
fs
sub
and
sahf
cmp
je
movsl
or
fcoml
stc
or
sub
jmp
mov
lret
push
gs
lret
sbb
xchg
pop
jg
les
xor
mov
mov
xlat
mov
cs
sub
mov
sahf
mov
mov
sbbb
scas
enter
std
add
int
push
add
cmp
mov
rolb
mov
shrl
dec
popf
insb
mov
pop
mov
lahf
sarl
push
mov
js
xor
cltd
push
sbb
pushf
inc
pop
imul
sti
mov
jle
popa
cmp
test
bound
dec
insb
les
cs
pop
xor
cs
and
lcall
movsb
xor
aas
stos
or
imull
movsl
pusha
aam
lcall
cmp
jbe
push
add
dec
loopne
test
inc
insb
cmp
dec
cltd
out
shrb
shrb
daa
push
jnp
rolb
fimuls
adc
shl
jle
lods
je
push
sub
popf
xchg
ss
cmpsl
test
lret
andl
jns
fbld
rorl
loopne
dec
ret
push
adc
xchg
clc
daa
xor
shrb
movsl
lret
add
dec
fldt
fs
je
jecxz
movl
mov
cmp
aad
mov
sub
ret
jg
movsl
dec
sti
dec
mov
std
lods
out
add
aam
aam
mov
stc
xorl
xor
jnp
stos
xor
pop
sub
jo
push
loopne
rcrl
cld
fistpl
lret
testl
loop
insb
add
lds
std
inc
xchg
push
and
xchg
mov
lret
mov
fstpt
stos
icebp
or
scas
repz
jb
in
out
pop
clc
sbb
test
in
mov
inc
and
lahf
cmp
cmp
add
in
aad
jne
jge
xchg
fcos
push
add
insb
push
sub
sub
xor
mov
add
sub
sub
mov
pusha
dec
shrb
add
push
repz
lea
es
lock
incl
sub
jmp
mov
insb
dec
bnd
jo
jo
mov
and
arpl
lds
xchg
pop
outsb
mov
aad
xor
pop
and
push
lret
shrb
outsb
sbb
jecxz
clc
push
add
fldl
inc
adc
adc
pop
cmpsl
mov
inc
cmp
lods
les
adc
fbld
mov
rorl
ret
mov
mov
push
sbb
cmpb
adcl
mov
das
mov
fbld
inc
jp
push
jmp
mov
pusha
xchg
add
sub
dec
ja
jbe
xchg
les
ja
into
dec
push
rcll
jp
xchg
repnz
divl
push
fdivrl
mov
roll
loopne
sbb
ja
ffree
lahf
and
and
jnp
scas
dec
sbb
push
cmp
and
aaa
fidivs
push
insb
mov
mov
xchg
xchg
in
mov
xor
int3
jns
jle
ljmp
xor
in
out
imul
jno
push
mov
repnz
inc
das
in
out
lock
mov
daa
mov
stos
fsubrs
jb
mov
lds
call
xchg
xchg
sbb
cli
lret
inc
jae
std
mov
sub
psubw
bound
js
sub
shrl
sub
sub
rclb
loope
repnz
push
mov
cmc
fisubrl
into
in
lret
lds
mov
jns
xchg
leave
cmp
mov
push
fwait
stos
fmuls
lock
mov
adc
cmp
mov
in
std
rolb
push
stc
fstpt
sbb
pop
pop
cli
test
lods
sbb
popf
mov
aad
jg
inc
or
mov
adc
jp
test
xchg
add
mov
hlt
rsqrtps
inc
repnz
movsl
sbb
inc
bound
fdivl
inc
jmp
push
imul
mov
sub
fidivs
jl
or
inc
pop
fdivrl
or
test
clc
frstor
sub
pusha
push
pusha
test
xchg
pusha
iret
shlb
mov
jecxz
xchg
xchg
es
push
pop
fs
push
push
jns
dec
cmc
mov
sub
add
pusha
test
mov
dec
fldcw
mov
jne
int
push
pop
xorl
cmp
fucom
mov
iret
test
and
xor
repnz
adc
imul
sbb
xor
or
xor
lods
pop
fsubl
clc
cwtl
xchg
push
bound
aam
add
mov
call
dec
aam
or
int
mov
mov
mov
loopne
xchg
push
cmpsl
leave
cmp
dec
popf
add
pop
in
push
fsubrs
aaa
add
inc
scas
jne
hlt
insl
das
fstps
mov
mov
dec
stc
pop
adc
outsl
cmp
dec
shrl
and
movsb
cld
mov
insl
aad
jmp
stos
loop
enter
rcr
lods
lret
loop
fdivs
call
mov
jp
mov
es
inc
popa
mov
inc
lock
mov
add
popa
xchg
mov
out
mov
xchg
or
xor
aaa
arpl
pop
jmp
push
xchg
jg
jb
add
je
push
mov
sbb
mov
cmp
cmp
adc
loopne
enter
jns
stc
or
fcomps
sbb
outsb
cmpsb
mov
xchg
and
push
adc
add
nop
cltd
add
mov
mov
xchg
sbb
mov
xchg
push
fdivrp
lret
jl
cmp
sub
lock
add
sbb
push
sbb
ja
xorb
mov
test
gs
push
aam
sbb
mov
cwtl
xor
xlat
jmp
repz
sti
cmc
push
js
sub
adc
fistl
idivb
and
jp
scas
push
shl
adc
out
mov
lock
pop
fwait
in
mov
sub
sbb
pop
mov
cltd
jno
mov
outsb
iret
das
push
jbe
push
scas
mov
bound
inc
andl
xchg
push
movsb
das
sub
jle
fsts
sub
mov
int3
out
pop
fwait
dec
mov
sub
stos
adc
stc
sub
test
icebp
insb
adc
ljmp
add
jecxz
push
jae
xlat
int
daa
btcl
iret
pop
and
xor
adc
mov
enter
cmp
jbe
or
sarb
les
repnz
outsl
sub
fs
cld
mov
movsb
daa
inc
jge
sbb
cmpsl
ret
fwait
push
xchg
ljmp
xor
mov
lahf
xor
push
sub
inc
push
dec
cmpsl
sub
subb
mov
push
jno
int3
sub
mov
data16
mov
sbb
test
or
push
push
lds
mov
push
lcall
xor
imul
mov
sarb
hlt
jge
fsubrs
xchg
std
jge
add
sbb
and
push
xor
pop
out
insl
adc
dec
in
pop
imul
repnz
ja
ja
fisttps
dec
dec
inc
sbb
pop
std
ret
or
shlb
add
fisubrs
loope
dec
mov
mov
mov
sbb
das
dec
pop
mov
test
pop
xchg
movsb
jle
lcall
cmp
mov
jmp
aam
imulb
jne
lods
aad
data16
loopne
repz
ret
or
das
sub
add
movsl
lods
jle
push
sarb
mov
test
fs
sub
nop
pop
inc
cwtl
mov
sub
setbe
cltd
and
mov
cmp
cmpb
ret
fldt
cmpsl
jno
add
lea
xchg
inc
push
pop
cmp
jo
lock
push
xchg
mov
dec
outsb
test
imul
fwait
rcrl
andb
daa
dec
data16
scas
enter
lods
xor
outsb
or
sahf
inc
xchg
lret
insb
lcall
push
add
add
add
scas
mov
mov
stc
mov
sahf
jl
add
shll
inc
out
pop
cmc
ds
jge
jmp
rorb
add
stos
jle
push
test
lock
xchg
adc
in
jb
bound
lods
pop
adc
out
mov
test
mov
out
andb
mov
cld
push
imul
adc
mov
xchg
xor
pop
jmp
or
sbb
bound
push
and
cmpsb
jns
in
daa
dec
shlb
dec
aas
mov
or
cmp
jmp
xchg
dec
mov
das
or
cmp
pop
cmp
push
or
cmpsb
mov
pop
sbb
in
sbb
or
sub
cmpsl
jmp
sbb
sbb
mov
addr16
int3
std
cs
dec
cltd
sub
xchg
bound
in
imulb
ds
or
mov
jno
dec
ds
xchg
mov
push
lret
repz
add
ds
outsb
dec
insb
adc
adc
nop
std
nop
or
push
inc
pop
je
xchg
push
out
jno
and
fcmovnbe
mov
in
cmp
lahf
ds
les
xor
popa
pop
mov
jg
jns
stc
mov
mov
mov
mov
add
pop
cmc
movsl
lret
sarl
sub
adc
jne
mov
rolb
dec
loop
cmpsl
sbb
imul
adc
sar
lea
sub
jne
imul
sub
shrl
and
and
mov
jb
pushf
stos
out
ljmp
cmpsb
leave
imul
jo
rcl
push
pop
sbb
scas
dec
repz
mov
lods
adcb
dec
xchg
popf
in
add
repnz
jle
jge
loope
imul
stos
xchg
push
xchg
pop
and
push
mov
mov
pop
pop
or
scas
fwait
mov
jbe
ret
in
je
cmpsb
mov
push
add
in
jle,pt
outsl
fsubl
or
popf
lcall
push
or
mov
jecxz
cmc
jmp
mov
inc
in
stos
mov
in
add
mov
pop
add
push
xchg
sbb
fs
sbb
sub
out
mov
popa
ficoml
dec
int3
sub
imul
adc
imul
and
xchg
cmp
cmp
pusha
jmp
cltd
rcrb
cltd
jae
jl
lds
add
pop
aad
clc
in
loopne
mov
pushf
jae
jnp
aas
out
divl
lahf
ss
pop
imul
jecxz
nop
xchg
rorl
mov
popa
movsl
adc
mov
rolb
into
shll
cmpsl
inc
lds
push
jo
arpl
addr16
jp
and
dec
push
mov
or
xchg
xchg
xchg
dec
lfs
cli
enter
imul
das
icebp
mov
loope
cmp
sbb
repz
sub
dec
push
lods
rcrb
in
iret
nop
xchg
jp
lock
stos
push
insb
stc
stos
jae
pushf
iret
sbb
jl
bound
aam
mov
lcall
ret
add
movsb
dec
mov
mov
xor
add
xchg
mov
mov
pop
sub
je
sbb
jbe
push
pop
andb
fwait
xchg
popf
mov
cmpsb
js
and
xor
mov
outsl
mov
call
sub
inc
fnstsw
xchg
sub
ret
mov
cmp
push
aaa
ds
jns
jo
repz
stos
ss
add
xchg
ret
xchg
lods
push
xor
pop
mov
inc
and
dec
popa
cltd
inc
sub
stos
and
xor
outsb
push
dec
inc
stc
cmc
cmc
jae
imul
movsb
or
fwait
test
dec
scas
jae
ss
mov
cmp
ret
cmpsl
adc
shlb
push
sbb
les
repnz
out
popa
out
push
push
out
mov
mov
insl
in
test
push
mov
scas
mov
xchg
mov
jge
shrl
fsubs
pushf
ds
xor
icebp
dec
ret
pop
sahf
popf
push
lods
mov
push
loop
sub
push
repnz
mov
push
adc
inc
mov
ljmp
in
mov
sbb
or
test
fistpll
jb
mov
mov
lret
xchg
push
dec
sbb
data16
scas
mov
repz
rcrb
decl
xor
inc
sarl
or
pop
push
pop
push
dec
dec
aam
pop
jne
jp,pt
cwtl
cmpsb
fnop
cmpsb
sbb
jmp
insl
lds
mov
add
fnsave
aam
adc
insb
fmul
push
xor
test
xor
and
clc
ret
and
in
or
mov
ret
mov
push
push
test
mov
hlt
aas
bound
xor
test
scas
cmp
pushf
xchg
push
lret
jns
mov
dec
cli
adc
daa
jnp
sbb
jae
pop
add
jmp
jmp
in
mov
xor
adcb
loopne
and
mov
adc
adc
pop
insb
xchg
cmpsl
sub
clc
adc
jp
inc
add
mov
movsl
fldenv
fs
int
stos
sub
out
cwtl
dec
sbb
jnp
pop
fidivl
int3
out
adc
icebp
nop
sub
aas
out
popf
test
lret
movsb
sub
pop
loopne
mov
push
leave
or
sub
xor
neg
fisubrl
inc
xlat
fs
add
insl
dec
sbb
and
icebp
or
sub
subb
dec
sbb
cmpb
mov
mov
jns
shl
and
adc
test
xchg
stc
and
dec
and
popf
cmpsl
gs
sub
cmp
cld
stc
xrelease
data16
adcb
mov
mov
inc
cmp
cmp
xchg
sub
jo
jge
xchg
push
flds
popa
stos
jl
jae
and
pop
dec
les
xchg
clc
jae
movsb
adc
adc
mull
in
mov
cli
pop
add
xor
mov
xchg
jne
xchg
push
and
inc
out
push
jmp
mov
insb
fists
cwtl
test
xchg
loop
push
xchg
repnz
cwtl
aad
jl
pop
cmp
fmulp
fiadds
fcmovne
mov
mov
lret
dec
mov
sahf
out
lret
cmp
push
xchg
pop
mov
jl
int
xor
sbb
fwait
add
adc
sbbb
icebp
repz
adc
or
mov
add
xor
pop
adcb
jge
mov
mul
lock
xchg
xchg
mov
push
jl
stos
mov
in
adc
sbb
inc
sbb
sbbb
fs
insl
imul
inc
inc
mov
push
push
shlb
movsl
mov
dec
ret
dec
mov
mov
push
fisubs
xor
outsb
mov
data16
mov
jmp
ss
pop
test
test
test
pop
mov
push
sbbl
cld
lods
cmp
pop
add
idivl
inc
mov
push
or
jmp
rcll
push
cmp
es
inc
cmpsb
push
inc
xor
jo
filds
inc
xchg
push
adcb
mov
inc
mov
adc
and
jo
xchg
pusha
push
pop
je
shl
insb
mov
jno
sub
movsl
arpl
addb
cmp
mov
sbb
jns
sbb
mov
leave
xchg
mov
sbb
jne
mov
and
sub
loope
push
jae
add
push
mov
mov
jle
std
xchg
in
sbb
adc
call
jae
adc
out
push
cmp
insl
pop
rorl
fcmovnbe
or
cmc
inc
into
movsl
inc
sbb
mov
xchg
into
fbld
xor
ss
sbb
mov
int
int
push
add
sbb
pop
int3
rcll
ret
jnp
lret
mov
jl
xchg
sbb
hlt
ficoms
xchg
mov
xchg
repnz
in
repz
xor
or
icebp
jp
lret
xchg
jno
jp
jp
cld
push
pop
divl
sub
push
and
cmp
sbb
adc
push
or
xchg
fs
arpl
pushf
jb
or
dec
iret
int3
mov
and
cmp
adc
xor
mov
push
aam
xor
cmp
push
rcr
fsubl
mov
pop
mov
shlb
xor
xchg
mov
nop
fsubl
jl
mov
xchg
jb
das
cmpsb
or
xor
inc
cmc
add
int3
test
inc
mov
sbb
mov
sub
sub
sub
add
cmp
mov
sub
popa
xchg
ror
lods
mov
cmpsb
jmp
sbb
lret
fwait
mov
call
jbe
mov
jo
pop
pop
rol
inc
leave
cmpl
adcl
scas
cmp
mov
cmpb
add
les
ror
fisubl
lods
jl
cli
push
xchg
mov
imul
fists
sarl
xchg
sbb
fsubs
jmp
xchg
cmp
jne
shlb
sbb
xor
mov
shll
lret
inc
ds
sub
mov
das
into
push
xchg
dec
das
call
aad
in
cmp
ljmp
imul
cli
cmp
es
sbb
jo
je
inc
adc
pop
sbb
loope
mov
jne
std
lret
gs
push
mov
or
rorb
pop
mov
mov
mov
rclb
data16
cmp
pusha
scas
add
divb
and
fcoms
dec
ficoml
xchg
fs
das
loop
dec
or
clc
mov
ja
sub
in
dec
ret
xchg
dec
xlat
sbb
fs
adc
jnp
cmpsl
lret
xchg
test
sbb
dec
fwait
and
xor
sti
daa
xchg
les
pop
adc
into
sahf
push
push
loopne
movsl
cltd
sarb
xchg
push
adc
hlt
dec
dec
xchg
in
push
or
fwait
jle
lcall
xor
push
pop
push
gs
dec
out
mov
add
out
mov
sbb
push
cmp
pushf
push
xor
xor
jo
pop
mov
popl
sub
cmpsb
in
jae
pop
jp
lods
pop
jecxz
stos
shll
sbb
inc
mov
adc
push
inc
lock
scas
movsb
aas
dec
or
sub
mov
sbb
xor
xchg
sbbl
aad
dec
xchg
lret
jp
aam
mov
cli
repz
dec
and
xor
pop
arpl
fisubs
pop
jbe
std
mov
scas
movsl
cmp
xchg
insl
sbb
sub
push
jb
insl
push
enter
or
mov
inc
push
sub
pop
bound
and
ss
rcll
jle
dec
repnz
sbb
aad
and
hlt
sub
mov
imulb
ficoms
jns
pop
in
dec
push
out
cmp
pop
sbb
push
and
inc
sub
inc
stos
inc
add
sbb
cmp
pop
adc
imul
jno
test
cmpsl
dec
test
sbb
cwtl
stos
aad
adc
repz
xchg
test
sbb
cmpsl
jo
fidivs
lret
insl
push
sbb
aas
imul
aam
sbb
mov
pop
aad
cmpsl
mov
push
cwtl
push
xchg
pop
jle
sub
mov
leave
orb
ret
ljmp
addb
loope
popa
jge
test
outsb
inc
jecxz
or
mov
add
enter
xchg
mov
shlb
ja
movsb
push
jmp
xor
xchg
ds
mov
iret
xor
dec
jle
cld
mov
test
mov
jmp
add
jge
sbb
add
xor
subb
lahf
mov
adc
push
mov
test
lock
push
cmp
fidivrl
inc
add
jp
jl
cmp
dec
jge
jmp
pop
dec
mov
arpl
add
pop
push
pop
and
cmp
pop
jns
ret
das
push
loopne
test
imull
xor
pop
out
jns
inc
shrb
push
out
or
push
dec
leave
sbb
sub
in
leave
js
lods
cld
cs
lret
popf
pushf
shll
stos
jle
das
push
push
dec
jb
mov
sub
sbb
cmp
mov
jo
ror
sub
xor
jg
divl
push
inc
das
pop
xchg
cmpsb
sbb
mov
mov
inc
sub
mov
jb
xor
dec
stos
xor
jnp
push
xchg
fnsave
fdivp
mov
shll
and
out
jbe
push
cmpsb
int
test
sub
mul
cmp
sub
jge
pop
lcall
sub
out
sahf
popa
lea
int3
clc
sub
xchg
in
mov
rol
and
sbb
movsl
jb
movsb
aad
in
ficompl
xchg
push
out
das
sarb
rolb
scas
outsl
mov
lock
lock
aad
mov
push
mov
jae
fwait
into
in
or
sbb
pop
rolb
jp
push
and
sub
pop
fistl
rcll
js
or
outsl
fcmovne
mov
xchg
ljmp
das
mov
mov
push
shll
movsb
mov
aas
mov
ror
or
jne
mov
add
jmp
imul
dec
incb
or
ret
push
sahf
lret
addl
or
insb
outsl
push
mov
add
xlat
leave
cmpl
and
pop
mov
push
xor
lret
xchg
in
fwait
pop
negb
and
dec
or
or
adc
dec
mov
xor
and
cltd
push
xorb
cmpsl
ret
mov
subb
pop
int3
and
jmp
jo
insb
xchg
aas
jno
sbb
les
lcall
or
sub
sti
mov
xor
out
roll
dec
sub
lock
push
cmpsl
and
jle
js
push
repnz
push
ja
mov
stos
xlat
repz
jle
push
stos
sbb
push
mov
subb
xchg
orb
jge
mov
xor
leave
sub
shlb
push
push
je
dec
jnp
lahf
inc
adc
outsb
push
pop
push
imul
std
inc
add
int
inc
mov
repz
and
cli
xor
fstpl
adcb
insl
dec
outsl
dec
imul
lret
lea
out
ja
mov
dec
and
mov
fisubs
mov
push
jne
movsb
inc
xor
xor
gs
and
or
bound
add
sahf
sahf
in
out
mov
add
and
adc
xchg
aam
mov
inc
sub
popa
enter
mov
inc
mov
repz
xor
jge
mov
sti
dec
test
in
cmc
mov
cmc
shll
mov
imul
jno
adc
cltd
and
cld
add
dec
sbb
sbb
jle
cld
inc
mov
cmp
mov
push
aam
repz
xor
jl
push
std
inc
xchg
repz
push
mov
fbstp
shlb
bnd
and
xor
jl
imul
push
outsb
xor
jp
test
pop
pop
mov
pop
out
inc
fadd
stos
in
add
subb
or
pop
mov
xchg
xor
add
cli
mov
xor
jmp
enter
sub
xchg
xchg
cs
mov
testb
out
or
das
and
out
mov
js
push
push
or
pop
mov
ss
popa
call
jae
push
cmp
xchg
dec
inc
repnz
mov
cmp
jne
xchg
shlb
inc
test
ljmp
mov
xor
push
and
outsl
mov
pop
sbb
and
mov
xor
push
xchg
test
xor
cmp
mov
add
dec
mov
and
add
int3
popa
lods
jb
add
xchg
daa
fsts
leave
aaa
add
mov
into
insb
pop
dec
cmpsb
jns
jbe
add
mov
test
sbb
hlt
mov
scas
movsb
test
mov
sbb
mov
and
nopl
arpl
and
lods
adc
sub
dec
fimull
pop
adc
daa
cmc
lds
je
xchg
fstpl
sub
jg
out
enter
fcompl
mov
jno
mov
mov
pop
sbb
adc
lret
lcall
repz
into
jmp
dec
sbb
movsb
cli
mov
pop
mov
test
fcmove
in
inc
push
lret
dec
in
and
cmpsl
fidivrl
shll
or
fcomps
sub
nop
lret
mov
adc
and
cmpsb
push
data16
popf
inc
sub
mov
out
stos
lahf
inc
lds
cmp
or
xchg
or
push
dec
push
mov
xchg
das
and
mov
movsl
fisttpl
sbb
lcall
xchg
mov
cmpsb
inc
xor
ljmp
ja
addr16
adc
fidivrs
mov
mov
mov
dec
xchg
xor
pmaxub
scas
and
inc
je
dec
xchg
xorps
sahf
adc
dec
pop
push
fs
popa
test
hlt
scas
push
repz
int
pop
mov
dec
jnp
int3
ret
lahf
mov
inc
cmp
jo
mov
adc
mov
aas
or
mov
popa
jns
xchg
rcrl
mov
in
dec
jns
cmc
aam
insl
cmpb
dec
stos
popa
mov
mulb
pop
xchg
sahf
lea
cltd
fstp
dec
clc
hlt
in
insl
cmp
ret
push
push
lcall
and
dec
inc
daa
scas
lret
ss
sahf
inc
sub
xorb
rcrl
notb
ljmp
adc
jb
subb
dec
pop
jp
dec
sbb
jbe
mov
pop
adc
popa
jne
mov
ss
cmp
pop
jge
add
push
mov
adc
loopne
shrl
push
mov
scas
mov
sbb
gs
stos
dec
jge
mov
in
add
mov
pop
rolb
icebp
or
clc
scas
loope
inc
cwtl
ss
or
push
add
mov
sub
sbb
push
sub
ds
push
mov
xchg
mov
insb
loop
popf
mov
cmc
rcr
cmp
sti
scas
clc
inc
ffree
jns
testb
popa
add
sub
out
fbld
cmpsl
xor
xchg
cmpsl
xchg
and
cmp
or
cwtl
jge
fisubl
leave
cmp
xlat
and
and
sbb
pop
and
inc
jge
rcrl
push
lret
or
mov
pop
add
jl
mov
sub
mov
in
ds
inc
jns
arpl
les
imul
insl
push
adc
popf
fimull
inc
lret
mov
stos
movsl
insw
sbb
push
sbb
pop
mov
sub
jno
jno
pop
sub
lds
loope
adc
and
push
ja
push
cli
dec
imul
jno
cmc
loopne
ja
daa
add
ss
pop
fstpt
movb
repnz
lods
xchg
mov
repz
pop
sti
xchg
sub
sub
popa
sbb
add
je
sub
stos
jmp
aam
push
das
jae,pt
std
sbb
pop
fnstsw
fcomps
je
outsb
inc
jp
test
scas
dec
push
sbb
push
sub
sub
or
dec
test
adc
jae
fisttps
xchg
sub
insl
push
xor
sbb
dec
mov
jb
or
jbe
fcoms
js
loope
and
pop
jbe
xchg
xor
ljmp
mov
xchg
inc
divl
daa
mov
jge
cli
pop
xchg
sub
jbe
jle
lret
add
icebp
dec
cli
mov
jns
and
insb
inc
pop
cmpsl
fwait
or
int
pop
repz
adc
std
stos
enter
rol
fnstcw
shlb
mov
mov
insl
stos
repnz
fnsave
mov
lahf
jno
sub
inc
add
cltd
outsl
xchg
sarl
aam
cmp
mov
sbb
insb
test
push
out
nop
in
daa
fldl
aaa
cmp
xlat
pusha
xchg
fwait
sbb
dec
mov
mov
dec
pop
or
cld
inc
sarl
lret
jae
fidivl
test
imul
cmp
stos
or
xor
lods
decl
xlat
sub
adc
fisubs
inc
adc
insb
mov
scas
ds
pop
cmp
in
jb
lock
call
sub
and
aas
ss
dec
xor
clc
sub
in
out
cmp
scas
sub
mov
and
in
aam
in
addl
dec
lcall
ss
das
cmpl
add
fidivrl
or
sahf
and
popf
js
push
adc
jbe
sbb
cmp
mov
mov
xchg
lahf
pop
pop
cmp
into
jae
sub
jp
decl
ret
sarl
lret
fistpll
jno
mov
movsbl
pop
andl
lret
mov
sub
jne
ret
sbb
xor
jmp
in
and
int
push
add
mov
cmpsl
test
jns
jns
inc
test
fldenv
mov
out
add
leave
pop
popa
mov
jne
jbe
and
enterw
inc
dec
xor
in
sbb
mov
cmp
out
je
pop
into
xchg
xchg
adc
into
into
call
jmp
nop
jno
iret
sub
aam
jmp
sti
and
daa
aas
or
js
sbb
sub
icebp
outsl
das
inc
test
push
daa
xor
in
dec
add
dec
outsl
lea
mov
mov
cmp
les
les
test
mov
jns
and
pop
pusha
cmpsb
dec
frstor
inc
push
adc
mov
sub
push
sbb
loope
push
and
stc
xchg
cld
sbb
xor
data16
sbb
sbb
sbb
sbb
adc
and
jae
mov
pop
insb
fsubs
lock
cli
xchg
cmp
jge
and
int3
pop
and
into
cmp
jmp
mov
pusha
xlat
mov
xchg
out
add
sub
das
jbe
adc
mov
out
mov
sbb
jg
lods
and
and
repz
sahf
shr
jb
dec
fimull
das
adc
mov
xor
and
iret
jb
sbb
sarb
insl
sti
xchg
mov
or
mov
aas
or
dec
add
call
and
nop
push
jge
cmp
adc
insb
mov
je
bound
pop
sbb
or
lret
test
outsb
clc
daa
ja
sbb
jno
or
mov
loopne
mov
lret
ds
mov
or
stos
fstpt
mov
insl
mov
cmp
dec
mov
subps
ss
out
xchg
sub
int
push
jnp
rol
in
jp
mov
lods
fcoml
add
test
pop
jb
xchg
popa
bnd
adc
rorb
test
mov
xchg
cmp
adc
jg
mov
fldenv
jp
inc
sbb
rclb
cmpsl
mov
lods
nop
jbe
cld
lods
test
sahf
and
sbb
or
inc
dec
pushf
jo
test
cmpsb
insb
cld
add
pop
fwait
xor
sub
sub
mov
jo
pop
in
int
add
xchg
add
ffree
xor
roll
mov
or
movsl
add
int3
sbb
adc
push
inc
rolb
es
clc
rorb
mov
lock
mov
sbb
int
fmull
xor
add
movsb
les
insb
xor
dec
lods
sub
and
cld
xor
or
mov
fwait
loopne
inc
xor
inc
in
arpl
test
xor
jnp
out
sbb
and
or
sbb
sahf
mov
pop
imul
mov
js
mov
shlb
mov
inc
push
jecxz
jno
add
pop
mul
mov
sbb
mov
or
mov
xor
shlb
arpl
dec
jge
xor
inc
push
arpl
lods
inc
and
jle
mov
xchg
sbb
sti
push
jmp
or
jae
lods
push
sub
ljmp
ss
les
xor
jnp
lods
icebp
jge
int
loopne
inc
pop
pop
fsts
jno
test
add
nop
dec
das
rol
sub
cmp
push
enter
jge
mov
loope
jle
push
movsb
jge
lds
sbb
jl
repnz
inc
scas
jns
in
nop
push
lds
aaa
adcb
adc
lcall
loope
shlb
mov
sub
push
std
test
mov
lcall
stos
ficompl
bound
outsb
ds
mov
push
push
into
push
test
sub
inc
inc
mov
push
push
fisubrs
lahf
sub
xchg
rcll
xchg
icebp
pop
sub
jnp
xchg
call
fadds
insl
jmp
adc
mov
hlt
cmp
jno
es
xchg
in
xchg
cmp
push
ss
dec
fs
push
sub
cmpsl
into
push
mov
add
mov
movsl
sahf
pop
and
mov
dec
imul
into
std
mov
jp
stos
mov
imul
fsubs
cmc
nop
mov
into
insb
ror
stc
std
or
lret
xor
imul
sahf
adc
push
fnstcw
aad
int3
push
not
outsb
imul
popf
mov
stos
jmp
fildll
mov
jne
out
fisubrl
out
es
ss
pop
aas
cld
int3
xor
dec
xor
xor
test
inc
dec
int3
inc
repz
add
sub
lea
adc
xlat
enter
pop
dec
je
push
into
jnp
in
imul
je
push
xlat
ds
arpl
hlt
sub
lods
shl
sarb
xor
je
out
adc
jnp
xor
push
repnz
cld
cmpsl
loop
dec
push
cli
and
aad
xor
cld
xor
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
ljmp
mov
hlt
adc
stos
sbb
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
add
js
pop
clc
idivb
sti
mov
xor
jne
and
pusha
outsl
and
popf
bound
add
pop
jge
ret
lahf
xor
sbb
and
add
or
inc
jnp
dec
mov
hlt
cli
adc
int
adc
adc
xchg
in
adc
pop
inc
jmp
sbb
jecxz
pop
shrl
xchg
call
jne
push
mov
pop
mov
lods
jne
cmp
push
in
mov
lock
cmp
mov
dec
mov
pop
fidivrs
sub
jb
cmp
fnstsw
insb
push
out
xor
dec
cli
push
idiv
cld
fwait
xor
out
jno
dec
mov
hlt
sbb
jnp
pop
out
jno
mov
push
js
push
out
jo
dec
mov
in
adc
push
out
jno
dec
mov
hlt
cli
adc
push
loop
jo
dec
mov
hlt
call
jns
push
out
jno
iret
mov
js
gs
jae
dec
ss
hlt
ljmp
jno
dec
mov
hlt
cli
adc
push
testl
cli
adc
rorb
mov
hlt
lret
mov
adc
push
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
pop
addr16
and
cli
adc
pop
out
popa
adc
insb
lock
adc
mov
xor
sbb
push
hlt
cli
adc
je
dec
xchg
cmp
cli
adc
add
dec
jno
inc
mov
movsb
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
dec
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
push
out
jno
dec
mov
hlt
cli
adc
sbbb
jno
pop
mov
ficomps
or
stos
lret
inc
mov
test
sbb
movsb
pop
push
fdivs
pop
mov
lock
xchg
mov
pop
jge
mov
sbb
jns
out
dec
sbb
jle
rcr
dec
and
lret
out
gs
xor
test
stc
xchg
stos
repnz
sbb
stos
xchg
inc
roll
inc
cmp
setne
cmpsb
sbb
cmp
push
icebp
cwtl
les
xlat
ret
test
xor
jp
and
adc
pop
xor
push
rol
jmp
cmp
inc
mov
loop
mov
dec
fdivs
mov
lcall
leave
jbe
xchg
stos
das
jnp
mov
mov
sbb
int
xchg
cmpsl
xchg
cmp
lret
in
adc
mov
mov
sub
ret
pop
mov
pushf
push
aaa
lret
jg
dec
xchg
imul
adc
rcrb
dec
cmp
test
loop
scas
out
sbb
push
sub
cmp
lea
inc
out
cmpsb
cli
imulb
in
add
stos
mov
fwait
jge
lea
ret
sarb
mov
ljmp
add
adc
enter
mov
lret
lods
fistpl
mov
and
fisttpl
xchg
jge
mov
jecxz
push
xchg
shl
and
mov
std
mov
repnz
bound
loope
pop
xor
adc
mov
shlb
mov
jb
rcrl
xchg
repz
pop
push
repz
mov
out
xlat
cwtl
cmp
and
sti
mov
outsl
mov
gs
xchg
lock
out
shll
gs
xchg
jnp
pop
in
adcb
pop
call
xlat
test
popf
addr16
stos
jge
push
loope
adc
sbb
cmc
fistl
or
into
loope
push
jg
ficompl
ja
mov
insb
xor
in
sbb
mov
inc
xchg
leave
and
xchg
leave
adc
mov
sub
scas
std
push
xchg
js
jecxz
cmc
mov
cmp
cmp
clc
lods
cmpsb
push
xlat
cli
add
sbb
push
xchg
scas
jb
and
in
sub
lods
mov
push
lods
jo
or
inc
mov
mov
pop
popaw
pop
or
fwait
stc
inc
movsb
xchg
cwtl
cli
sbb
jl
xchg
cmp
adc
sub
mov
ficoml
adc
sti
jne
fs
negl
and
cmp
xchg
sub
fsubp
or
mov
pushf
jbe
loope
and
dec
testl
adc
lcall
gs
pop
inc
mov
push
add
scas
mov
mov
push
dec
scas
jg
jmp
repnz
in
in
nop
mov
lret
ds
and
mov
out
orl
les
cmp
fsubrs
xchg
inc
jne
pusha
add
inc
scas
repz
cmp
xor
xchg
fmull
pop
xchg
jo
and
mov
int
cltd
push
mov
aam
inc
icebp
jge
loope
sbb
cmc
frstor
scas
xlat
dec
cmpsl
pop
mov
orl
add
orps
in
jl
sub
into
gs
sbbl
test
inc
xor
inc
xlat
pop
jecxz
and
xor
or
out
mov
or
add
insb
mov
push
inc
mov
adc
dec
mov
and
cmp
mov
inc
jge
inc
and
stc
xchg
push
mov
jae
aaa
adc
xchg
jg
insb
sbb
push
adc
into
xchg
cwtl
loop
ja
lds
jae
dec
test
dec
stc
push
dec
push
ljmp
aaa
inc
divb
mov
lcall
or
and
shl
in
fmuls
iret
adc
push
or
pop
scas
xor
cld
xchg
insb
jl
outsl
pop
mov
aad
xor
iret
adc
sti
dec
lahf
cmp
pop
scas
les
loop
lahf
ds
jae
jmp
out
rclb
add
andb
sbb
rorb
or
jne
push
repnz
int3
inc
push
and
fs
jbe
sub
jo
imul
jg
push
test
cltd
imul
in
mov
popa
xor
not
je
mov
push
mov
outsl
or
pop
sbb
pop
push
sbb
jno
daa
mov
mov
mov
sub
leave
fcoms
das
xor
sbb
sub
sbb
push
out
and
outsb
movsb
sbb
outsb
aas
cmp
or
mov
ret
pop
into
aam
adc
push
or
jae
xchg
in
mov
cli
scas
mov
fnstcw
jbe
test
shll
jno
jle,pt
push
nop
addr16
inc
dec
scas
fsubp
add
dec
adc
fdivs
cmc
daa
lods
insl
jnp
cmpsl
lahf
jp
cmp
pop
scas
inc
sti
push
or
xor
in
push
xchg
cld
push
imul
sub
scas
es
loopne
lock
pushf
or
jno
out
aam
or
out
aam
xorb
inc
mov
push
je
cmp
ret
xchg
xchg
mov
in
jne
push
dec
jae
sti
and
insl
dec
adc
add
roll
movl
lahf
out
fwait
cltd
and
cmp
add
mov
popa
je
push
pop
cmp
cmp
test
lods
sub
cmp
mov
rclb
lock
adc
pop
out
xor
popa
or
int
and
dec
add
dec
sti
cmp
cmp
push
xchg
xchg
mov
testb
jb
or
orl
out
gs
dec
adc
jp
shlb
test
xor
je
cmpsl
into
sbb
mov
inc
inc
xchg
xor
cltd
test
mov
or
sub
fstpt
mov
les
jns
repnz
mov
popa
mov
fsub
insb
jmp
stos
jle
test
add
jmp
mov
or
rcr
mov
adc
xor
loope
cmpsb
aad
in
adc
sti
mov
lcall
adcb
scas
cwtl
repnz
js
cmpsb
nop
mov
roll
test
sahf
sbb
inc
sbb
push
jne
stos
push
aad
sub
int3
pushf
test
add
mov
mov
movsb
into
out
stos
addr16
popf
in
sti
pop
sbb
push
jno
sbb
and
xor
add
gs
repz
std
dec
cmpsb
lahf
dec
push
aas
ljmp
xor
enter
push
mov
fsts
inc
xchg
aaa
jg
call
loope
ds
scas
adc
insl
addr16
or
arpl
leave
mov
das
clc
xchg
or
dec
stos
and
insb
lea
cmp
jno
mov
or
fldt
insl
adc
xor
out
je
jns
xchg
mov
jmp
sbb
jne
test
ret
add
cld
pushf
or
je
add
cmp
insb
in
imul
ljmp
xor
cmp
xchg
mov
pop
ljmp
das
mov
dec
mov
les
call
push
cmpsl
sbb
xor
mov
or
lds
mov
sbb
pop
push
loope
cli
into
mov
mov
jno
jge
or
mov
xor
outsb
xchg
fidivrs
mov
pop
push
scas
mov
cmc
xlat
push
cmp
loopne
fcomps
jno
jle
sub
je
enter
ljmp
xor
sbb
jbe
dec
sbb
aaa
enter
push
push
dec
iret
test
sub
bound
add
lret
xlat
outsb
pop
out
jg
sub
push
or
fwait
outsl
call
out
ss
call
lret
addl
dec
sbb
mov
inc
lcall
mov
mov
mov
add
dec
out
fiadds
adcb
int3
fcomps
and
sbb
cmp
sarb
jo
shrb
cmpsl
and
sub
fwait
cld
mov
popa
outsb
add
das
pop
mov
lahf
push
dec
xchg
lret
sub
mov
adc
xlat
incl
fxch
ret
add
pushw
push
pop
adc
bound
repz
push
pusha
jne
mov
cltd
adc
dec
cmovge
pop
sbb
lcall
jns
fnstsw
inc
fidivl
cmpb
test
pop
pop
jge
push
sub
jae
jmp
fistl
mov
sub
or
lret
dec
fldenv
pushf
arpl
maxps
pushl
imul
jae
jno
mov
inc
mov
inc
insb
jp
push
jp
loop
lds
ret
push
js
mov
mov
andb
les
fdivrp
ljmp
lock
inc
fcmovnbe
push
pop
and
icebp
push
mov
push
add
dec
lcall
lret
mov
clc
push
add
daa
xchg
andl
ss
rolb
fcomi
sub
jb
loopne
add
and
dec
adc
bound
and
data16
test
and
and
sbb
shrb
pusha
aas
push
push
and
cmpsw
into
lock
inc
sub
lds
cmc
jge
lods
xchg
sub
mov
push
adc
jae
cmc
dec
pop
xor
adc
dec
ljmp
push
xchg
sti
ljmp
xor
gs
xchg
fidivrs
lods
clc
and
cmp
mov
add
push
lahf
sub
pop
movsb
idivb
es
fs
rolb
sub
jae
mov
mov
jmp
cld
push
sub
sbb
and
ja
lock
adc
movsb
xor
repz
pop
mov
and
sbb
outsl
js
and
mov
xlat
aam
lcall
pushf
push
lods
mov
cmp
pop
inc
mov
dec
inc
ret
sbb
lahf
mov
pop
jmp
lds
or
mov
push
fsts
call
and
into
mov
cltd
jo
mov
mov
and
mov
add
shrb
int3
cmp
jle
insl
pop
pop
cmp
lock
cmp
sub
dec
jmp
mov
rcrl
and
ds
or
addr16
mov
movsl
ret
icebp
pop
pop
pop
dec
shlb
push
inc
notb
xor
ds
xchg
push
cltd
push
dec
xchg
or
cmp
sbb
inc
mov
xchg
clc
pop
enter
into
sbb
loope
pushf
jo
sbb
adc
jmp
jae
xchg
mov
js
loopne
es
jge
mov
inc
mov
rorb
lret
fcmove
scas
mov
loop
rol
mov
sbb
add
in
or
push
scas
nop
push
adcl
cmpsb
inc
ret
cmpsb
sbb
sub
movsl
xchg
subb
insb
cmpsb
jg
sahf
fsubrs
idivb
pop
lret
lods
xlat
jo
cmc
cmc
cmp
inc
adc
outsl
mov
cwtl
insb
xchg
dec
xlat
mov
addr16
mov
pop
xor
iret
jns
rcrl
sarl
adc
in
roll
add
aam
test
std
daa
call
lret
pop
imul
jl
sbb
out
rcl
arpl
rolb
dec
dec
hlt
xchg
pop
iret
adc
push
cwtl
rcrb
mov
fildl
add
pop
sahf
lea
cmpsb
sbb
pop
shrl
sub
adc
loopne
jb
pop
add
mov
fisubrl
fwait
aam
nop
adc
mov
push
aaa
push
xchg
inc
lods
testl
fwait
rclb
dec
push
mov
mov
fisttps
add
mov
das
sub
stos
mov
lahf
outsl
cmp
popf
adc
mov
imul
add
mov
mov
or
dec
mov
pop
mov
ffreep
add
in
into
js
sbb
mov
data16
pop
or
out
mov
mov
jno
or
rcrl
xor
js
fdivs
ss
xchg
push
and
mov
scas
ss
sti
cmp
dec
mov
mov
cmp
and
sbb
push
stos
add
popa
xchg
pop
mov
jge
xlat
fidivrl
das
rclb
out
cmp
xor
inc
addl
pushf
ss
mov
inc
rcrb
notb
mov
mov
xor
adc
pop
jne
jae
movsl
loop
test
pop
test
sarl
movsb
xchg
js
push
jo
push
pop
pop
jb
push
push
fcoms
in
je
scas
fldenv
mov
outsb
inc
push
sbb
arpl
ds
popf
sbb
das
sbb
out
leave
sbb
push
cmp
outsl
mov
mov
push
fnsave
sub
lds
shl
pop
adc
fcom
xlat
les
ja
rcl
pop
data16
push
sbb
jp
xchg
icebp
or
add
inc
fsub
in
and
inc
cltd
fdivs
dec
adc
mov
xor
es
inc
icebp
sub
mov
out
pop
incb
mov
push
pop
mov
jp
ret
out
xchg
pop
push
jmp
popf
lock
cmc
dec
arpl
mov
cmc
push
mov
jecxz
sub
add
outsl
cmp
mov
inc
stos
js
cld
jns
push
adcl
jmp
mov
jb
daa
mulb
jno
mov
and
in
mov
mov
mov
sarb
ljmp
pop
push
push
sub
mov
sahf
call
das
scas
add
jecxz
add
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
