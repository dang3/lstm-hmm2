sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
cmp
mov
adcl
jg
add
in
mov
daa
adc
ret
adc
popa
pushf
push
jp
and
insb
fldl
mov
cmp
push
js
stc
jbe
cmp
jne
add
xchg
mov
data16
ds
cwtl
leave
nop
xchg
aad
ja
test
pop
daa
push
push
popf
cmp
push
dec
stos
leave
ds
xchg
orl
repz
push
das
daa
and
sub
push
sti
or
mov
jbe
imul
dec
push
ret
push
jo
push
int
add
imull
call
xor
jns
pop
pushf
ljmp
sbb
xchg
pusha
xlat
pop
pop
and
inc
xor
push
mov
dec
jmp
push
xor
adc
sbb
sub
jge
repz
popf
cmp
mov
pop
pop
out
adc
pop
xlat
inc
inc
cmpsw
stos
cli
add
mov
fwait
jmp
es
lahf
and
fs
push
lahf
sub
enter
adc
pop
fimull
mov
inc
sub
ja
jp
adc
roll
add
ss
movsl
jns
fistl
movsl
jg
pusha
mov
stos
jmp
jbe
pusha
sub
adc
cmpsb
adc
cmpsb
push
dec
stc
xchg
sbb
cwtl
or
fdivrs
call
and
lret
sub
repnz
idivl
pusha
xor
lahf
adc
rcrl
in
js
dec
mov
add
cmp
mov
fwait
push
mov
xor
mov
jno
add
movsl
mul
es
push
and
cmp
mov
or
ret
aam
jle
push
mov
js
sub
mov
cmp
shll
push
sub
repnz
test
es
add
fwait
sbb
imul
in
and
mov
sub
stos
loopne
scas
je
inc
in
mov
addr16
inc
std
and
notb
mov
xor
pop
sbbl
inc
loop
xchg
and
fnstcw
sub
push
or
stos
shrl
pop
mov
inc
loopne
mov
push
xchg
mov
sbb
lods
sbb
xor
sub
cmpsb
sarl
jnp
mov
rcll
ds
push
pop
fsub
cltd
stc
lahf
mov
outsl
loopne
dec
mov
dec
fdivr
mov
insl
and
xchg
daa
inc
cmpsb
cmp
lods
push
imul
xor
jmp
xchg
stc
fildll
lret
mov
xchg
fbstp
add
inc
orb
cli
loop
dec
dec
xlat
inc
lcall
stc
in
jmp
test
mov
xchg
and
lock
cwtl
outsl
and
sahf
mov
push
das
sarl
add
or
repz
lcall
ljmp
inc
xchg
mov
pusha
cmpb
adc
jmp
rcr
jnp
std
je
aad
jb
test
or
orb
popa
stos
and
push
es
push
fdivrl
sbb
xor
mov
sbb
jp
subl
movsb
jno
es
jne
aam
popa
arpl
cmpsl
xor
ret
dec
inc
jne
out
cmpsl
or
jp
testl
ret
int3
les
nopl
nop
adc
mov
popf
nop
out
push
push
and
xchg
cltd
sarl
sub
loopne
aad
dec
cmpsb
aas
mov
rcrl
fnsave
xlat
repz
or
les
mov
xchg
jae
in
mov
jnp
push
fnsave
push
and
xor
pop
sub
mov
jle
test
mov
inc
cltd
mov
hlt
outsb
outsl
jne
cmp
ja
movsl
sbb
pop
fnstenv
xchg
jg
pop
pop
pop
push
xor
sbb
mov
stc
sti
fwait
pop
not
fsubs
les
fldt
xchg
mov
pop
adc
fsts
push
sub
shll
or
xchg
jg
add
cmpsb
aad
xorb
dec
sub
xchg
fisubs
mov
xor
xor
repnz
lds
xor
lret
jb
sub
fsubrp
xchg
cli
push
mov
pop
inc
popf
sbb
mov
hlt
sbb
pop
cwtl
lret
dec
fistl
sarb
jno
mov
pushf
subl
mov
adc
shr
leave
shrb
sub
in
fadds
cmpb
xchg
cmp
adc
mov
mov
arpl
imul
or
test
dec
leave
xor
outsl
xchg
aaa
and
stos
mov
gs
sbb
orb
fdivrs
cmpsb
mov
dec
lret
aam
fidivrs
testb
mov
js
lret
inc
jae
hlt
lds
scas
inc
stc
push
mov
dec
adc
outsb
mov
cld
lods
xor
jo
pushf
inc
arpl
jecxz
arpl
into
xlat
mov
sbb
dec
lret
push
andl
mov
mov
inc
dec
xor
movsb
push
popf
pop
mov
aaa
jmp
lock
pop
icebp
xchg
push
push
xchg
cmp
cwtl
aas
cmp
andb
int3
jb
das
mov
je
pop
jg
ret
inc
lock
in
cmp
movsl
testb
jg
les
or
cli
mov
push
aam
sbb
sub
push
aaa
lds
sbb
loopne
inc
mov
sbb
fcmovbe
mov
or
mov
ljmp
insb
push
arpl
sti
xlat
pushf
test
test
leave
fstl
enter
cmp
add
cmpsl
aad
aad
dec
and
mov
jnp
roll
mov
adcl
sub
mov
cmp
arpl
scas
outsl
add
mov
ficomps
repnz
lahf
test
pop
loop
push
push
cmp
pop
add
xor
fwait
pop
test
mov
xchg
clc
sbb
inc
jecxz
dec
gs
add
out
cmpsl
ss
inc
inc
pop
aas
and
mov
fistpl
out
xchg
mov
push
or
sub
outsb
add
cmp
pop
ljmp
push
dec
mov
sbb
ss
xor
or
sbb
xchg
adc
icebp
out
cld
sub
mov
fstpl
cmp
add
cld
mov
mov
push
ret
and
xor
cmp
cmc
lods
push
jbe
push
mov
cmpsl
push
sbb
pop
movsb
push
clc
mov
xor
sub
or
and
pop
fistps
xor
sub
adc
repz
test
cmp
outsb
insb
rclb
push
fdivrl
xor
gs
mov
sti
adc
dec
ja
aam
dec
test
dec
jmp
ss
pop
mov
and
mov
cmp
hlt
aas
sar
pop
xchg
xchg
jp
out
in
aad
aam
dec
push
flds
das
cmp
mov
mov
xor
out
cltd
clc
inc
iret
sbb
out
xlat
cmpsl
hlt
lret
out
imul
movsl
rcrb
mov
je
aad
js
shrl
xor
lods
lcall
outsb
ret
dec
test
lods
aaa
callw
pop
sarb
sbb
pop
shl
and
stc
lret
or
push
out
sbb
les
mov
jnp
xor
lds
orb
call
fnstsw
inc
rcr
into
jge
cwtl
xor
int
into
cld
dec
aam
add
clc
sbb
js
fstps
jb
mov
cmp
xchg
mov
lock
std
imul
push
jmp
mov
lods
jp
dec
and
add
es
dec
loopne,pn
movsb
rcr
stc
push
ss
dec
jns
push
gs
das
jnp
push
sahf
mov
sbb
outsl
push
cmp
push
inc
push
mov
popa
sti
iret
imul
mov
dec
cs
mov
lret
movl
sub
inc
in
nop
lods
mov
je
popa
les
jg
add
jno
imul
push
mov
mov
loop
pop
pop
aam
sub
rorb
add
cmp
jbe
inc
jp
scas
inc
pop
andl
nop
dec
jo
sub
rorl
and
pop
xchg
and
pushf
sub
out
bound
ljmp
inc
mov
movb
les
jae
sub
insl
sbb
cwtl
out
mov
adc
int
xchg
ja
adc
icebp
mov
mov
aas
inc
xchg
movsl
cmp
hlt
push
mov
xchg
push
test
out
or
fiaddl
fdivrl
imull
ffreep
add
lcall
lods
adc
pop
in
addr16
sub
divl
adc
leave
les
fldt
pusha
adc
and
dec
sub
or
cmp
lock
lret
push
pop
fs
test
fs
xor
sahf
shll
out
aas
test
lods
inc
mov
test
lcall
cwtl
mov
add
pusha
add
mov
subb
insb
jmp
jns
jns
lods
ficoml
movsb
xchg
push
cmp
cmpl
mov
lahf
and
push
xchg
cmc
pop
mov
lds
or
add
cld
repnz
push
jo
loope
out
cmp
lods
cmp
adc
xchg
int
decb
sahf
mov
insb
dec
jno
movsl
fstps
xchg
outsl
roll
test
rolb
sub
mov
push
std
adc
out
inc
inc
enter
lahf
mov
sub
orb
rclb
pusha
jmp
les
pop
dec
addr16
aas
inc
test
test
xchg
jno
xlat
in
lea
loopne
fldenv
sbb
push
push
jl
mov
pop
add
rorl
lea
push
aas
mov
dec
lahf
stos
mov
cmp
push
push
fadd
paddsw
subb
nop
mov
jp
aas
and
daa
lods
dec
pusha
adc
cmp
mov
lea
pop
push
out
int3
sub
imull
and
push
and
or
hlt
imul
dec
push
pushf
xchg
pushf
mov
push
dec
add
dec
adc
out
dec
jmp
hlt
xor
cld
xlat
call
cmpsl
ss
pop
push
imul
dec
cmp
in
inc
pop
jp
mov
test
mov
xchg
test
mov
leave
fsubs
add
popa
data16
leave
cmpsb
mov
push
jne
push
imul
shr
mov
out
mov
sahf
lret
jle
popf
negl
lret
nop
jne
aas
lds
jb
fwait
popw
jmp
roll
add
mov
lods
or
adc
or
jp
in
in
push
ds
lret
xchg
out
cmp
and
mov
movsl
and
inc
call
push
push
push
inc
and
cmp
pop
xchg
movsl
inc
adc
ss
aas
mov
rcrl
loopne
inc
push
shrl
mov
mov
xchg
in
fbstp
xlat
call
pushf
js
add
pop
cmp
pop
adc
dec
clc
repnz
lret
stc
les
inc
mov
mov
leave
dec
mov
jecxz
fisttpl
in
and
cs
loopne
mov
or
sub
fcmovnb
sbb
jnp
inc
inc
stos
pushf
sub
mov
cmp
aad
leave
test
xchg
jnp
dec
mov
ljmp
std
das
fdivs
push
outsl
les
popa
rclb
and
movsl
adc
pop
in
and
add
mov
lret
int3
pushf
sub
and
cli
xchg
jmp
ret
int
xchg
inc
pusha
sub
loope
xorl
js
mov
mov
icebp
xor
test
sbb
inc
xor
push
subb
not
mov
xchg
mov
orl
adc
mov
addr16
shll
push
repnz
out
or
inc
scas
popa
ret
lret
fisubs
loopne
adc
dec
lcall
sub
jae
fs
popa
in
fxch
cltd
cli
fstpt
lods
in
fs
out
xchg
sbb
mov
cs
int3
push
out
mov
mov
push
in
xor
fildl
lahf
sub
inc
mov
fs
js
adc
lock
in
iret
fisubrs
pusha
dec
loopne
cmp
in
pop
inc
ret
xor
mov
int3
cmp
stos
out
mov
imul
add
or
scas
adc
stos
or
cmpsb
std
mov
int3
mov
js
outsb
or
push
cmpsb
inc
cmc
in
bound
lods
loop
cmp
xor
nop
push
sti
mov
lock
decl
or
ud2
jne
mov
inc
mov
add
cltd
pusha
jne
popf
shrb
aad
jnp
or
cwtl
aas
add
add
mov
fildll
pop
lret
or
dec
or
adc
jne
insl
sbb
and
ljmp
rol
dec
adc
xchg
push
add
mov
and
inc
cs
cli
ret
mov
sbb
adc
add
sub
inc
sbb
sub
and
into
sub
mov
js
xchg
xor
push
out
push
lds
ss
lret
out
xchg
je
les
inc
sti
std
ds
pop
test
aas
call
jbe
or
and
mov
adc
lcall
jg
enter
std
jp
jl
repz
mov
test
loope
or
out
and
adc
data16
and
lods
jns
rcrb
cs
jge
push
rcr
popa
inc
bound
lods
and
mov
xchg
pop
pop
incb
movsb
xchg
lret
and
outsl
test
mov
or
stos
pop
jo
roll
lcall
and
movsb
mov
test
imul
fisttpl
mov
dec
jecxz
int
mov
push
sti
dec
int3
out
das
shrb
dec
mov
das
mov
sub
and
cmp
lret
movsl
push
mov
push
sub
je
jae
in
outsl
push
cmp
test
inc
push
loopnew
into
mov
imul
dec
sub
fcomps
jl
outsl
push
cmpsb
jp
addr16
aad
sub
sub
mov
shl
pop
xor
dec
jl
add
ret
jecxz
bound
jb
repz
iret
mov
ljmp
cmp
sarl
imul
out
mov
mov
xor
mov
xor
sbb
fiaddl
pushf
sbb
xor
rdpmc
out
sbb
hlt
cmp
push
xchg
int3
mov
jmp
pushf
out
test
leave
sarb
mov
pop
dec
jg
pop
lock
ret
cmp
ljmp
adc
rcll
test
loope
jle
mov
xchg
call
out
inc
das
xchg
xrelease
je
pop
js
movsl
arpl
je
jp
xor
repnz
sub
int3
ljmp
fisttps
dec
inc
insb
sbb
insb
add
imul
cmc
imul
ror
aaa
cmp
adc
insb
jg
bound
push
leave
push
or
leave
test
cs
pop
dec
mov
and
push
xor
dec
pop
mov
cmc
shrb
xchg
dec
adc
mov
test
pop
dec
cld
int3
jb
pusha
mov
push
lret
js
cmp
testb
popf
xlat
sub
xchg
jbe
mov
dec
pop
jecxz
js
enter
mov
lock
into
test
jp
ficoms
cli
and
fdivr
shlb
push
cmp
and
dec
gs
sub
cmp
push
cmp
mov
das
shrl
mov
cwtl
mov
into
or
sub
mov
adc
fsubs
push
daa
jecxz
nop
cmpsl
mov
movsl
out
adc
cltd
sbb
jne
sbb
fucomi
cmp
add
mov
clc
mov
lret
mov
shlb
mov
jg
je
int
jmp
or
mov
push
mov
sahf
pop
xlat
cmp
or
dec
loop
xor
xor
nop
es
sahf
sbbb
push
jbe
lds
sbb
lret
xchg
jle
call
or
dec
dec
hlt
shll
cld
lea
int
jae
fidivs
loop
scas
mov
jge
inc
pop
fisttpll
imul
mov
iret
jecxz
es
lret
sub
fwait
cmpsb
xchg
mov
jns
movsb
xor
add
push
in
test
int3
cmp
mov
inc
fdivl
xor
mov
fcoml
mov
sbb
fimull
add
sub
push
js
dec
data16
clc
mov
jecxz
leave
call
outsb
lea
sub
push
outsb
jl
call
sbb
push
dec
sub
jnp
or
mov
xchg
pushf
lahf
adc
loope
aaa
xchg
jp
out
les
mov
cmp
in
mov
push
test
outsb
outsb
or
sbb
out
sarl
mov
adc
shlb
inc
mov
mov
jp
test
outsb
cltd
fs
popa
adc
pop
dec
xor
sti
mov
xchg
orl
jle
fnstsw
imul
ljmp
lock
mov
add
sub
inc
sti
sbb
xchg
pushl
mov
test
inc
outsl
cmpsb
sbb
mov
popa
xor
imul
mov
and
fucom
lods
call
push
or
outsb
push
sbb
push
lcall
mov
push
mov
mov
sbb
pop
lea
nop
xor
mov
xchg
xchg
dec
xchg
sub
cld
inc
cmp
arpl
das
sub
ja
mov
mov
fistpll
cmc
push
sub
mov
rcrb
pop
xor
xchg
push
pop
test
movsl
xor
sub
in
or
mov
out
iret
mov
inc
daa
inc
xor
stos
xchg
shlb
mov
xchg
pop
mov
dec
mov
ret
dec
xchg
sub
lds
cltd
push
dec
fidivl
mov
repnz
ljmp
pop
ret
jb
xchg
add
jbe
add
repz
mov
mov
cld
cmp
jns
adc
mov
inc
cmp
rcrb
fdivrl
xor
pop
xchg
int3
push
xlat
dec
pop
fwait
aas
xchg
fcompl
sahf
xor
popf
in
add
adc
stc
cmpsb
cmp
cs
je
pop
adc
negl
cmc
movl
pop
jmp
movsl
push
jbe
leave
mov
lods
inc
int3
and
add
adc
jl
mov
pusha
aaa
mov
or
and
adc
ds
push
sub
xor
add
cmpsl
fwait
add
into
xor
sbb
inc
push
iret
push
adc
dec
push
cmp
lahf
xchg
push
jbe
mov
and
fisubs
push
daa
sbb
adc
add
cwtl
xchg
fisttpl
fidivrl
dec
int
xor
mov
ja
addb
test
popa
xacquire
leave
jg
arpl
sbbb
sbb
mov
jl
dec
stos
mov
adc
loop
and
xor
imul
or
sahf
sahf
xchg
flds
jnp
xor
lock
jg
std
inc
adc
test
add
xor
gs
incb
int
xchg
nop
xchg
push
sub
fstpl
aaa
sbb
jb
sub
mov
mov
in
adc
cmc
stos
jecxz
aam
int
out
xor
xor
mulb
bound
das
cmpsb
mov
divl
mov
mov
rorl
or
jae
jae
adc
jo
xor
pop
xchg
pop
lcall
mov
jp
into
dec
pop
push
sub
ret
lret
in
fdiv
push
xchg
cltd
ret
push
dec
xor
fnclex
outsb
insl
mov
lret
sarl
push
icebp
xchg
dec
xlat
xchg
cs
inc
out
fwait
xor
adc
js
leave
nop
mov
mov
nop
sbb
sbb
add
mov
lods
stc
sub
insl
mov
repnz
cmp
movsb
bswap
jp
jecxz
out
inc
dec
or
mov
adc
and
or
shrb
mov
pop
out
push
mov
push
cmpsb
mov
std
adc
push
push
mov
jb
repnz
dec
in
sbb
adc
mov
jecxz
inc
mov
adc
jns
pop
pushl
aam
inc
data16
pop
lret
icebp
movsb
into
popf
adc
fsubr
and
dec
add
mov
pop
inc
lcall
ficoml
jno
jns
adc
inc
insb
dec
nop
or
lret
dec
ss
fwait
call
loop
push
push
or
jp
sahf
or
mov
cmpsl
xor
es
pusha
data16
adc
dec
jno
sub
mov
sub
arpl
xlat
xor
jecxz
aam
or
dec
jge
and
add
into
cmp
or
pop
add
out
xor
inc
sbb
ja
fidivs
add
lcall
pop
pop
pop
dec
test
lret
stc
fldenv
lods
loopne
cmp
sub
int
mov
data16
stos
cld
pcmpgtd
mov
and
sbb
sbb
mov
dec
inc
and
cli
cmp
or
cmp
and
jle
setle
jno
add
mov
mov
mov
adc
in
mov
and
into
in
test
pop
mov
jmp
les
je
and
pop
mov
scas
push
sub
je
faddp
pushf
aas
lcall
pop
aad
addr16
ficoms
jno
or
aad
jecxz
lods
popa
out
cmp
sbb
pop
test
push
jp
imul
push
lods
cmp
ja
xchg
mov
shl
jno
jge
pop
sbb
test
mov
sbb
sub
loopne
mov
jl
inc
dec
iret
push
inc
cmp
and
dec
cmc
dec
add
movsl
jp
mov
addr16
sti
hlt
mov
fcompl
popa
dec
in
push
xchg
jae
xor
decl
out
sbb
inc
cwtl
rcr
in
aas
loop
shll
mov
sub
pushl
pop
stos
sub
pop
mulb
subl
mov
lea
sbb
add
mov
ss
movsl
xlat
xor
cs
inc
out
in
pop
mov
or
sub
xchg
stos
sub
dec
xor
xor
jg
lret
out
jne
adc
mov
add
dec
dec
mov
dec
inc
leave
sub
mov
mov
adc
pop
imul
pop
aas
mov
sub
out
push
enter
or
popa
sarb
in
je
and
int
test
adc
xchg
call
cmp
in
out
mov
push
jecxz
mov
jbe
aaa
mov
sar
sbb
out
leave
nop
xor
out
mov
pop
and
push
shlb
jns
jne
lock
jo
subb
sub
mov
add
sub
xor
cmp
fs
mov
jmp
int3
stos
cmp
into
cmp
jnp
pop
dec
fs
movsl
dec
lret
test
sbb
push
sub
lahf
jb
mov
sahf
outsb
arpl
pop
fcmovbe
aam
push
mov
xor
lret
cmpsl
aas
ret
pop
flds
add
mov
jnp
or
lret
movsb
inc
pop
xchg
sub
lds
scas
cli
cmp
mov
scas
jp
xchg
lret
push
insl
inc
imul
mov
adc
sahf
shrb
jo
push
mov
and
and
push
sbb
cmp
jmp
rcll
lret
xor
std
in
sub
dec
and
xchg
jmp
gs
in
shrb
das
sbb
xor
lock
int
pusha
notl
loope
movsl
stc
enter
aas
mov
shll
mov
loop
push
jge
mov
push
pop
fnstenv
cmp
in
inc
daa
add
mov
mov
add
fscale
inc
daa
daa
mov
xchg
fdivrs
js
push
jns
out
mov
dec
mov
mov
aaa
inc
pop
or
in
jp
jg
mov
out
cmp
jp
cwtl
call
pop
inc
jecxz
push
in
jo
adc
lahf
adc
jmp
mov
testl
push
addr16
pop
xchg
inc
pop
mov
leave
dec
jno
shll
loopne
mov
mov
xchg
daa
pushf
stos
lods
xor
push
movsl
pop
or
lcall
data16
xlat
fs
xlat
and
not
pop
fldt
aas
ficoms
shlb
fcomps
jne
add
sti
cmp
and
popl
repnz
mov
jg
ds
xchg
pop
inc
dec
daa
into
sbb
pop
flds
xchg
xchg
sbb
dec
popa
sbb
rolb
lcall
xchg
push
sbb
mov
out
test
mov
xor
orl
test
jne
ljmp
push
test
xor
jb
jns
push
mulb
push
fidivl
sbb
sbb
stos
sbb
jno
leave
lahf
leave
dec
hlt
mov
and
or
adc
add
lahf
cmp
or
movsl
pushl
test
add
js
aas
lcall
sbb
xor
pusha
in
pop
jmp
inc
mov
and
lcall
in
jge
cmpsl
cmp
or
aas
scas
rcr
mov
stos
cmp
push
jbe
dec
cltd
fstps
xor
inc
mulb
adc
stos
and
mov
addr16
xor
inc
movsb
sbb
sbb
mov
std
push
pop
pop
mov
adc
test
ljmp
and
stc
push
in
daa
mov
imul
sbb
or
push
push
xchg
jns
xor
fists
mov
shlb
std
int3
js
cli
test
mov
jne
sbb
inc
aam
add
mov
mov
push
mov
mov
subl
movsb
int
cmp
je
push
idivl
fwait
in
fwait
notl
addr16
hlt
leave
aad
push
sbb
les
test
add
aas
fwait
gs
mov
cmp
jle
shl
dec
pop
mov
pop
push
cwtl
cmpsl
popa
mov
gs
cmp
adc
imul
mov
test
push
scas
and
ret
leave
in
repz
xor
sub
outsb
insb
out
ss
xchg
and
xchg
cwtl
cli
pop
mov
in
push
stos
in
xchg
inc
mov
rcrl
pop
movsl
loopne
mov
sti
jb
int3
lret
outsb
cmpsl
ds
movsb
or
inc
cmp
cmovl
push
movsb
daa
inc
xor
imul
pop
stos
fimuls
add
outsb
mov
or
mov
iret
subl
enter
iret
add
mov
insl
rcrb
mov
daa
dec
xor
sub
lea
add
pusha
sbb
fwait
mov
mov
cmp
pop
jns
xchg
movsl
pusha
lcall
xchg
jbe
xlat
xchg
mov
out
lahf
and
mov
pop
ss
loopne
pop
mov
pop
xor
jl
pop
sahf
sahf
in
popa
negb
movsb
mov
adc
add
aas
xlat
arpl
adc
jns
jl
loope
mov
mov
dec
add
add
adcb
push
or
mov
adc
push
fiadds
mov
sti
ret
sub
shlb
adc
xor
pusha
sbb
jp
ss
dec
daa
call
push
pop
xor
sub
ljmp
mov
mov
arpl
leave
dec
lds
mov
call
mov
out
mov
outsb
pop
fiaddl
icebp
out
data16
pop
mov
xor
push
dec
sub
inc
jno
int3
pop
sti
arpl
cltd
notb
xchg
aas
inc
xchg
sub
adc
jmp
ja
movsb
jae
shlb
testl
fs
enter
mov
hlt
or
insl
mov
negl
ret
aam
adc
ret
daa
sbb
outsb
iret
in
sub
inc
cwtl
mov
das
jno
push
fisubrl
orl
mov
jno
ds
lret
or
adc
hlt
xor
pop
jbe
mov
bound
shufps
fcmovnu
mov
push
pop
pand
pop
lret
mov
repz
sbb
roll
lods
mov
cmpsl
pop
jns
mov
xchg
sbb
jb
mov
push
lea
fucom
lret
xor
lods
iret
mov
fs
das
iret
stc
push
mov
pop
and
and
push
lds
mov
dec
gs
lods
or
push
xor
outsb
mov
repnz
xchg
notb
mov
popa
ljmp
jno
popf
sbb
dec
pushf
lret
push
popf
int3
scas
into
lahf
outsl
cs
fsubrl
dec
xchg
aaa
or
outsb
sub
or
sub
stos
pop
orb
repz
int3
mov
and
subb
xor
and
je
daa
sbb
sub
jnp
mov
dec
in
mov
lahf
sub
mov
push
hlt
fs
cwtl
out
xchg
xor
mov
and
add
cmpsl
mov
mov
mov
jo
sub
imul
mov
int
xor
mov
mov
das
gs
pop
int3
jno
or
mov
xchg
push
cmp
xor
cmp
lret
enter
repz
pusha
xchg
inc
fstp
movsl
outsb
pop
mov
cmpsl
into
loope
lods
sbb
jl
scas
mov
xchg
daa
mov
test
and
sbb
xchg
sbb
lret
cli
lds
ja
cmp
jo
xchg
mov
jb
dec
or
mov
pop
xchg
jl
aad
sub
cmp
add
inc
push
jno
loop
cltd
mov
sbb
into
xchg
rcr
orl
int
loope
fmul
cli
sti
mov
or
out
jge
jnp
repnz
and
jg
mov
sbb
test
popa
mov
ds
mov
jnp
add
mov
mov
repz
add
sbb
xlat
mov
arpl
fadds
das
sbb
mov
nop
xchg
psraw
insl
cmp
dec
inc
shll
mov
mov
test
jbe
aam
inc
sub
xor
out
test
dec
notb
scas
jae
push
add
rcrw
pextrw
push
or
mov
ja
rcrl
mov
or
and
scas
or
lds
sbb
sbb
mov
fldt
push
das
sub
loop
pop
mov
pop
shll
mov
push
lahf
mov
xchg
ret
sbb
adc
sbb
orl
xor
mov
pop
sbb
loopne
mov
lock
ret
inc
and
ret
movsb
stc
mov
int3
sbb
popa
lods
cmp
or
inc
jo
iret
roll
push
adc
push
pop
ret
mov
ja
cltd
jne
jb
gs
fmull
aad
aas
xchg
dec
and
xor
aaa
push
push
inc
cltd
and
sbbl
ret
xchg
fstpt
mov
dec
testl
movsb
stos
addr16
sbb
sbb
ja
dec
mov
fldenv
xchg
mov
in
adc
mov
jmp
call
xor
dec
jge
jns
lods
rcrl
pop
adc
jl
out
jo
lods
pop
andb
es
outsb
xor
mov
call
hlt
inc
cmp
jl
push
stc
mov
in
lahf
lods
js
loopne
sbb
addr16
loope
iret
xor
cmp
dec
xorb
adc
aad
stos
adc
andl
sub
int3
sahf
call
int3
mov
xchg
fs
repz
test
push
incb
imul
sahf
jae
int
inc
stc
shll
cmp
and
aas
in
xchg
jle
push
das
jbe
dec
cmp
out
inc
fildll
inc
clc
xchg
rolb
loope
roll
movsl
outsl
jnp
mov
ficoml
dec
icebp
idivl
idiv
pcmpeqd
mov
push
rclb
rcrb
je
leave
xchg
aad
pushf
outsl
cs
mov
sbb
movsl
xor
pusha
inc
out
cmpsb
or
xor
inc
and
jnp
add
imul
pop
add
ja
addr16
into
scas
rcr
jl
inc
mov
lods
hlt
pop
cmp
inc
jo
push
pop
add
mov
call
xchg
dec
sbb
rclb
fisttpl
test
dec
cmpsb
pop
mov
into
xor
dec
cmp
jbe
rcll
movsl
int3
and
cmpsb
enter
es
addl
xlat
loope
orl
dec
xor
out
jge
loop
jmp
mov
mov
ljmp
inc
jge
in
out
bswap
cmc
lret
fsts
dec
cmp
adc
and
jo
sub
and
outsl
jle
test
push
incl
xor
dec
ss
in
aad
push
xchg
das
jge
add
lock
aaa
ret
or
sub
jo
lret
jae
add
xor
xchg
and
fmul
push
in
adc
lahf
xlat
push
mov
jne
inc
dec
lods
adc
mov
jb
push
insb
andl
jno
imul
inc
cmp
and
mov
pusha
pop
cltd
mov
ja
dec
mov
out
push
loop
sbb
in
cmp
cmp
incb
pusha
in
inc
stos
cmp
ljmp
jg
out
mov
pop
les
jbe
sbb
adc
ret
jmp
paddb
scas
roll
mov
ret
scas
orl
mov
icebp
fsubrl
mov
xchg
and
adcb
lods
push
rcrl
xor
scas
and
decl
repz
repnz
mov
or
rcll
sbb
fidivl
mov
jno
xchg
rcrb
pushf
adc
xchg
and
stos
dec
shlb
dec
inc
mov
sar
movsb
test
int3
movsl
into
or
sarl
push
int
mov
imul
mov
daa
sahf
out
fsubl
fdivrl
or
nop
aam
sub
shlb
sbb
sub
sub
sub
jge
fcmovb
ret
fs
loopne
cltd
xor
sarl
xchg
mov
dec
sbb
and
mov
xchg
hlt
rorb
push
jbe
xchg
pop
push
inc
pop
mov
ds
ror
jecxz
hlt
pop
jmp
movsl
inc
ficoms
fstl
rol
sub
iret
push
hlt
mov
or
add
jge
mov
movsl
xchg
cmpsb
mov
cld
scas
xor
imul
out
mov
inc
shrl
push
lods
xchg
pop
cmp
call
outsl
adc
mov
jmp
sbb
orl
xchg
xchg
adc
sub
cmpsb
xchg
xor
dec
jbe
orb
push
pop
rcr
sbb
and
jg
aas
mov
pop
mov
pop
dec
jp
sahf
and
jno
adc
or
cld
dec
xchg
cmp
shlb
decb
sbb
mov
sub
push
mov
dec
push
or
jle
jns
test
push
gs
xchg
push
fistl
jmp
mov
sub
lea
mov
add
xchg
and
insl
mov
out
inc
xchg
enter
lcall
shlb
into
mov
lahf
popa
xchg
bound
ss
dec
imul
bound
ret
inc
jno
xlat
push
and
ds
cmp
mov
mov
mov
stos
sbb
pop
out
jo
cmpl
adc
push
aam
xchg
fdecstp
in
dec
icebp
pushl
loopne
and
cmp
enter
loop
push
push
cmpb
pop
mov
xor
dec
xchg
scas
or
int
fstps
sub
or
or
sarl
pop
cmpsl
faddl
lret
mov
daa
pop
jne
inc
popa
cmp
dec
push
xchg
lret
ret
cltd
xchg
xchg
jnp
cmc
mov
ss
es
xchg
or
repz
or
mov
jle
aaa
jb
sti
mov
dec
mov
cmp
inc
iret
gs
dec
sub
test
dec
pop
aaa
jno
inc
adc
scas
outsb
ja
mov
cs
int3
xor
push
pop
mov
aam
stos
sahf
movsb
mov
mov
vmovhpd
aad
jmp
ror
xchg
in
rcrl
sbbl
aam
das
fwait
sub
add
inc
shr
arpl
pop
int
call
jb
xor
shll
hlt
loopne
xchg
repz
adc
repz
lar
mov
lock
mov
jnp
sbb
cmp
xlat
js
mov
idivl
xchg
outsl
push
mov
stc
jmp
dec
xor
xchg
sub
xchg
cmp
push
lahf
push
bound
inc
xor
xchg
mov
ds
mov
mov
add
ds
sub
test
adc
pop
dec
sub
test
shl
sub
fs
sti
sar
loopne
lcall
pop
loope
orps
jmp
outsl
js
ret
mov
and
std
jb
pop
push
mov
push
js
jmp
movsb
or
andb
lret
pop
cmpsb
cmc
movsb
add
inc
xchg
call
rcll
inc
cmp
jne
mov
fidivrl
or
out
or
adc
cmp
fisttps
sti
xorl
fisubl
sbbb
cmp
sbb
dec
xchg
dec
jne
push
pop
xchg
subb
sub
sbb
mov
into
jo
jl
mov
scas
mov
fmuls
fwait
mov
push
mov
adc
pop
shll
or
std
bound
and
mov
mov
cwtl
cmpsl
aad
cmpl
lcall
into
cmpsl
jp
pop
sbb
fwait
add
lcall
xchg
cmpsb
ss
dec
sbb
push
or
sahf
sub
adc
rcrb
and
fcoml
outsl
outsl
push
cmpsb
mov
push
repnz
cmp
int
orl
jne
stc
adc
icebp
cwtl
inc
fstl
and
ja
xor
dec
popf
mov
mov
push
xchg
mov
shrl
cmp
sbb
repz
cmc
pop
mov
lea
xchg
das
xchg
ljmp
out
or
jmp
mov
sbb
lea
mov
sub
ret
stos
cmpsb
push
xchg
mov
xchg
push
repz
subb
inc
cmpsb
sub
add
push
pop
movb
push
xchg
xchg
dec
add
clc
rolb
insb
jp
xchg
lock
adc
dec
outsb
lea
add
add
and
cmpsb
rcl
or
and
jecxz
clc
pusha
and
int3
sub
div
or
or
sub
add
or
mov
leave
xor
cmp
dec
js
mov
inc
mov
pop
pop
xchg
push
cmc
sub
aam
sub
rolb
jmp
inc
and
pop
out
rol
js
or
ret
dec
outsb
push
scas
sub
mov
jge
push
pop
or
mov
xor
fs
lea
mov
aaa
add
push
sar
inc
add
or
jmp
dec
push
push
lds
das
fwait
inc
test
push
cmc
ljmp
sbb
ss
arpl
je
repnz
sbb
xchg
push
xchg
sbb
and
mov
mov
fucomip
rolb
stc
sahf
ja
stc
aad
cmc
stos
pop
orl
mov
js
pushf
xor
cmp
sub
jb
adc
and
stc
mov
mov
jb
pop
mov
push
out
lcall
daa
xchg
lret
push
repz
test
sub
mov
inc
adc
addb
add
test
fisubl
iret
jp
inc
sahf
into
inc
mov
stos
push
dec
xor
add
das
mov
js
pop
imul
jecxz
sub
shlb
or
push
cmp
dec
xor
ljmp
sahf
mov
inc
add
adc
sub
xchg
rclb
repz
mov
inc
lods
sbb
pop
cmp
pop
cmpsl
fwait
mov
sub
int
data16
cmp
scas
ret
cltd
leave
shlb
sti
lret
xor
repz
add
or
sar
cmp
popa
push
cmp
xor
cmpsb
les
mov
push
dec
xchg
push
aam
jae
cmp
add
mov
enter
iret
sbb
cs
shrl
lret
mov
divb
repnz
dec
dec
inc
pop
cli
fnstenv
lcall
inc
inc
adc
or
push
loopne
call
ja
jmp
mov
sub
inc
push
inc
push
push
push
clc
and
lds
cmp
in
pop
push
xchg
jno
sysenter
in
push
out
mov
pop
mov
fdivl
andb
es
xlat
pushw
inc
movsb
dec
popf
addr16
rorb
xchg
out
subb
xor
jns
mov
xchg
dec
mov
push
movsl
mov
enter
push
sub
push
int
or
add
scas
ja
pop
insb
pop
test
and
mov
cmpsl
pop
flds
sar
and
mov
fistl
or
out
or
xor
xchg
stc
add
mov
enter
xor
lods
fsubrs
push
jb
out
jl
aas
inc
inc
sbb
sbb
dec
jg
sbb
inc
fwait
inc
clc
mov
filds
ror
ds
xchg
jnp
dec
pop
push
mov
out
js
add
mov
pop
loopne
data16
mov
shlb
cmp
lea
popa
lcall
pusha
pop
cmp
adc
mov
imul
add
pop
test
cmp
orl
and
jns
and
imul
jle
mov
adc
es
in
clc
jp
sub
aam
mov
movsl
add
push
testl
pop
popa
fucom
xor
inc
mov
add
mov
rcrl
inc
cltd
aas
jno
adc
jbe
lcall
cwtl
mov
mov
lret
push
xchg
jl
and
sub
stos
fs
jg
push
jmp
lods
fmuls
in
movsb
push
insb
jmp
lret
in
scas
mov
cld
sub
imul
xlat
aam
and
pop
mov
rolb
sbb
lods
pop
sub
xchg
jle
xchg
neg
xchg
sbbb
ljmp
sbb
adc
out
sbb
sub
and
pop
sub
xchg
inc
ljmp
push
lock
push
cltd
or
stc
dec
ret
push
jg
call
bound
je
adc
stc
data16
arpl
orl
jle
xorb
imul
cltd
loop
inc
movsb
insl
sub
mov
xchg
scas
out
call
popa
inc
out
dec
pusha
xchg
push
jns
pop
xor
jecxz
lret
stc
dec
cmpsl
adc
lds
mov
loop
mov
or
xor
mov
inc
or
sub
mov
insl
fsubl
jmp
or
xor
fildll
call
push
js
dec
xor
mov
dec
test
jno
pop
adc
std
rorl
jo
and
pushf
dec
jg
jmp
jmp
cmp
xchg
lret
mov
inc
cmp
mov
pop
jmp
js
imul
jl
addb
or
jl
dec
cs
pusha
popa
xchg
push
sub
dec
or
stos
mov
aam
into
jbe
inc
pop
and
popf
sub
cwtl
cmpsb
adc
jns
inc
cmc
cld
inc
inc
repnz
dec
dec
pop
sub
xor
mov
push
aaa
out
and
test
or
push
xchg
jmp
fisubrs
in
cmp
mov
add
sbb
adc
fidivl
sub
sbb
fsubr
movsb
xor
scas
inc
push
xchg
out
jb
daa
xchg
orb
cmc
inc
push
xor
jl
or
cmc
sub
mov
or
mov
adc
imul
xchg
mov
fiadds
popa
movsb
stos
sti
js
jb
inc
je
sbb
and
jo
jo
jnp
adc
les
cmpsl
out
sub
sarb
ss
mull
shrb
jae
adc
loopne
adc
pop
ret
inc
adcb
dec
std
adc
rcrb
pop
inc
lock
xchg
mov
js
or
leave
mov
jg
jle
shrl
jb
lcall
std
lret
fstl
bound
insl
ja
sub
loopne
xchg
call
dec
jp
sub
dec
dec
lret
jno
inc
in
lahf
lcall
push
sub
mov
xor
push
mov
enter
pop
mov
aaa
or
jne
mov
and
test
and
jns
mov
jecxz
pop
pusha
nop
jae
lret
add
and
jae
jns
mov
xor
lods
push
add
push
jle
and
mulb
push
xchg
push
cltd
popa
aaa
xchg
push
shll
push
sti
aaa
pop
mov
mov
mov
mov
test
fldenv
jmp
push
jge
xor
pop
lea
les
divb
inc
out
jge
ljmp
pop
adc
paddsw
push
andl
sahf
cld
jl
dec
in
cmp
add
sbb
add
push
mov
jle
ljmp
jl
or
fsubrs
test
pop
jle
cmp
cmpsl
sub
lds
stos
mov
outsl
les
inc
test
jp
in
int
fisttps
js
es
mov
lods
loope
sbb
fdiv
mov
pop
push
push
push
cmpb
rcrb
call
test
push
into
pop
mov
nop
adc
sub
aad
jno
cltd
adc
or
pop
cmp
stos
shll
pushf
lret
sub
push
xlat
xchg
popf
mov
xchg
pop
pop
add
fldenv
je
jp
jecxz
ret
dec
cmpsl
fistpl
lahf
push
std
jl
outsl
push
push
jne
fsubrl
fwait
and
mov
lcall
in
dec
inc
and
fiaddl
push
adc
sbb
dec
rcrl
out
jno
cmp
enter
fidivl
iret
out
dec
lods
xchg
mov
fwait
andl
lret
out
mov
adcl
arpl
imul
inc
or
add
fwait
arpl
jecxz
jmp
leave
mov
ljmp
cld
xchg
cwtl
jo
mov
mov
pop
mov
xorl
push
enter
pop
push
cld
cld
and
sbb
icebp
bnd
cmp
mov
dec
push
inc
lret
sub
jge
addl
cmp
cli
push
pop
stos
movsb
jl
push
js
shlb
mov
inc
mov
pop
dec
out
and
ljmp
outsl
mov
in
inc
xchg
dec
cld
xchg
nop
jne
addb
icebp
push
ret
dec
imul
leave
icebp
jp
xchg
xchg
mov
in
sub
cli
xchg
add
nop
adc
dec
cltd
lods
out
lcall
lcall
fcmovu
addb
jg
ljmp
ret
xor
gs
fldenv
fcomps
jo
and
inc
jae
daa
push
or
not
sbb
nop
test
pop
in
inc
jecxz
daa
mov
fnstsw
xor
out
cld
push
pop
or
cmpsb
sub
loope
inc
mov
push
pop
out
jge
rorl
test
pop
mov
ljmp
cmp
clc
int3
pop
mov
rcrl
and
add
addr16
sub
mov
dec
sbb
add
and
adc
inc
or
mov
or
fwait
and
mov
popa
sub
scas
outsb
pushf
fmull
fnstsw
cmp
dec
fcmove
mov
inc
jp
in
or
dec
inc
inc
pop
sub
rcll
sub
mov
fstps
add
and
hlt
shrl
sbb
addr16
mov
pop
mov
adc
cmp
sub
int3
ja
fsubr
sub
sarb
bound
fidivrl
out
push
xor
aad
xchg
movaps
pop
cs
mov
icebp
jbe
scas
or
mov
ljmp
les
mov
call
mov
jne
jp
jge
ror
das
push
imul
hlt
int3
sti
sti
jo
dec
jnp
xchg
inc
adc
jnp
nop
int
pop
sub
pop
pop
jmp
xchg
push
sarl
mov
cltd
or
inc
inc
cltd
and
out
push
add
add
test
jno
aas
lds
out
pop
pusha
or
fildll
inc
mov
jp
push
fstps
popa
fwait
dec
sub
out
mov
sti
scas
sbb
rcpps
mov
xor
cmc
push
rorl
dec
sbb
rcll
mov
std
ds
push
mov
ffree
lahf
dec
ja
nop
fidivrs
mov
outsl
inc
push
daa
mov
insb
cmp
mov
ds
add
lar
jns
add
aad
cmp
stos
fdivrl
inc
fwait
cwtl
int
push
cmp
mov
sbb
lret
xchg
in
dec
sub
mov
xchg
push
fstpt
test
and
pop
test
sbb
fmull
sbb
add
int
add
jg
sbb
fsubrs
jne
xor
sbb
cmp
mov
xchg
and
sti
dec
into
inc
aas
mov
lods
sub
xchg
pop
or
into
add
push
mov
out
into
jp
lock
inc
jo
mov
ret
dec
dec
fidivrs
jb
adc
add
mov
adc
adc
jo
xchg
test
mov
cmc
ljmp
rep
addr16
cmp
xchg
inc
mov
lock
pusha
push
popa
dec
or
ljmp
sbb
sbb
xor
mov
mov
jge
mov
out
adc
imul
push
jne
fistl
das
mov
dec
mov
dec
ss
sbb
push
push
mov
jmp
enter
outsl
dec
lods
lds
orb
mov
sub
mov
and
xchg
fiaddl
leave
push
pop
xor
rol
adcl
jle
dec
dec
aaa
sarl
jle
xchg
loop
sbb
xchg
jecxz
cmc
or
dec
scas
xchg
add
out
inc
dec
icebp
sbb
movsl
jp
push
sarl
mov
js,pt
or
sahf
bound
dec
popf
pushf
in
add
dec
push
test
into
iret
sub
and
mov
cmpsl
mov
cmpsb
mov
ljmp
cmp
cmc
iret
popf
inc
je
adc
out
push
mov
aas
mov
outsl
divl
cmp
xor
adc
sub
pop
inc
mov
inc
test
or
push
shrl
and
xchg
sbb
loope
mov
loop
loop
dec
popa
xchg
je
push
sub
mov
and
ret
lcall
lret
andl
in
int3
push
int
int3
mov
movsb
dec
nop
stos
jp
js
pop
cmp
xchg
int3
cwtl
cmpsl
je
push
dec
mov
fsubs
rcr
cmpsl
fisubl
xor
mov
cs
sub
jecxz
enter
xchg
mov
bound
rcrb
in
lea
sti
inc
cmpsl
mov
mov
ljmp
xchg
imul
fisubl
movsb
or
jg
shll
dec
test
fs
sub
pop
jmp
inc
or
jmp
xchg
inc
pop
xor
push
cmp
notb
cmp
popf
mov
sub
scas
std
xchg
mov
push
pushf
scas
inc
gs
lahf
dec
in
sbb
adc
xchg
hlt
mov
cwtl
cmp
shll
ret
lahf
out
adc
mov
cmp
xor
ret
push
bound
xchg
arpl
movsl
scas
arpl
inc
push
insl
inc
jnp
shrl
xor
cmovs
xchg
or
add
addr16
jmp
setle
jns
sub
pop
sbb
movsl
mov
push
pop
mov
mov
test
imul
ss
aam
pushf
repnz
fs
in
pop
mov
aad
lods
xor
data16
fldl
cwtl
jns
jecxz
out
into
mov
lret
lods
or
add
jg
out
popa
inc
jne
cmpsl
inc
mov
xor
out
cwtl
pop
jl
mov
pop
imul
jae
repnz
jns
xor
out
push
stos
or
and
fadds
and
cmp
std
sub
enter
pop
aad
ffree
movntps
imul
fcoms
loop
or
outsb
xchg
jl
sub
pop
adc
popa
imul
leave
push
mov
or
testb
iret
bound
add
add
lret
adc
testb
int
mov
cmp
jge
pop
bound
inc
mov
xor
mov
test
and
xor
sub
repnz
scas
decb
out
sub
fiaddl
pop
in
jle
mov
push
xchg
movsl
push
aaa
add
push
loope
pop
int
test
pop
or
std
js
popa
scas
test
xor
aas
pusha
cmpsb
repz
mov
clc
push
pushf
pop
xor
push
push
adc
cmp
push
movsb
ficoms
jae
dec
test
std
mov
clc
stc
mov
arpl
leave
andl
negl
or
pushf
dec
iret
stos
jno
bound
insb
filds
test
add
inc
and
mov
hlt
mov
cmp
mov
mov
xlat
cmp
cmp
fimuls
or
fbstp
clc
icebp
mov
mov
ljmp
add
in
iret
cs
out
std
aad
add
ret
out
mov
mov
push
push
add
adc
das
xchg
or
movsb
adc
addr16
cmp
mov
adc
addb
ret
inc
pop
lods
bound
movsl
sbb
cmp
repnz
call
insb
lods
iret
sti
in
insb
fcompl
imul
add
or
push
ss
das
pop
repnz
les
cld
std
cmp
xchg
sub
mov
add
subb
jmp
sub
movsb
pop
jnp
and
cmpsb
das
add
sub
test
imul
push
mov
jb
lods
add
inc
pop
lcall
lahf
push
mov
mov
bound
bnd
repz
jnp
loop
movsl
iret
fnstcw
shlb
mov
nop
xchg
mov
or
dec
roll
mov
mov
xchg
sti
lcall
push
lcall
adc
sub
in
cmpsb
jle
pop
incb
xchg
push
cli
push
pop
cld
scas
mov
mov
pop
mov
adc
mov
add
mov
popf
add
dec
stos
sub
lods
jg
cmp
cmp
push
push
ret
or
incb
sbb
clc
insl
lcall
out
rcl
mov
loope
addr16
adc
testb
adc
mov
pop
clc
jns
push
andb
ss
incb
lds
mov
jg
lds
mov
vmaskmovdqu
leave
notl
xor
stc
xor
les
andl
inc
sbb
int
cmpb
popl
mov
fld
inc
pop
lea
mov
pop
add
add
push
div
adc
out
punpckhdq
imul
push
lods
push
lds
mov
cmp
icebp
or
popa
jmp
mov
mov
adc
add
aaa
dec
mov
and
adc
daa
xchg
cltd
test
pop
jbe
shlb
test
adc
or
push
test
jns
and
sub
sbb
cli
ds
and
lcall
cmc
or
push
fdivr
dec
adc
mov
adc
out
movsl
inc
addr16
shl
xchg
fwait
jmp
inc
lock
add
je
push
lcall
je
inc
cmp
out
and
xchg
push
pop
or
mov
insb
fstps
repz
insl
xor
mov
enter
insb
cmp
pusha
movl
in
pop
fcomp
leave
rcll
shlb
mov
addl
int3
pop
mov
jle
jnp
pop
xor
push
push
cmp
incl
cmp
and
sti
lret
shlb
pop
push
testb
inc
out
in
xchg
shrb
mov
sarl
xor
mov
lea
mov
adcb
mov
push
mov
pusha
lea
ljmp
movsl
mov
xchg
or
test
clc
xchg
aas
leave
es
ret
pop
jae
dec
push
adc
cli
mov
mov
in
cmp
inc
mov
jl
popf
adcb
mov
pop
mov
fists
addr16
shr
jo
hlt
pop
aas
cmp
push
sbb
xchg
mov
lcall
movsb
xchg
pusha
pushf
sub
clc
dec
xor
test
xor
jae
int3
inc
mov
mov
cld
repz
cld
sub
push
outsl
push
xchg
shl
jmp
ss
faddl
leave
ret
sbb
and
xor
sbb
xlat
xor
out
mov
arpl
scas
ljmp
push
or
push
sub
or
cmp
scas
cmp
bound
xor
push
jae
add
sti
jbe
and
fsts
pop
sbb
call
arpl
or
or
push
aas
stc
or
jg
xor
fs
add
add
cmp
lods
inc
sbb
int
mov
cmp
lea
hlt
fwait
cmpsl
cld
shrl
ljmp
jl
adc
xlat
clc
ljmp
xchg
mov
xchg
mov
cs
int3
ficoms
push
cli
jge
mov
push
add
push
push
xor
jg
mov
inc
push
cmc
loopne
sarl
push
scas
jno
push
or
mov
cwtl
sti
clc
scas
movsb
mov
pop
adc
mov
movsl
adc
rorl
jne
gs
in
mov
or
xor
jns
ret
push
pop
imull
add
cmp
lods
fistl
js
jg
aaa
dec
rol
and
inc
outsb
shll
ss
out
mov
fmull
aad
lock
and
loopne
inc
push
ss
aas
ss
rol
sub
inc
adc
dec
mov
scas
rolb
inc
or
xchg
push
lds
test
mov
dec
jg
imul
test
adc
add
std
rorl
mov
dec
push
pushf
mov
fs
xor
add
rolb
sub
hlt
and
xor
test
cmp
xor
leave
pop
insl
sti
dec
mov
push
mov
xor
fdivrp
jae
mov
jg
xor
xor
sub
xchg
rclb
jecxz
push
cmp
mov
dec
jae
sub
mov
cmp
xor
mov
fdivrs
add
sbb
push
and
loope
dec
test
int
and
or
add
in
sti
aam
adc
fcmovnu
adc
push
mov
mov
cmc
rol
mov
mov
cmp
cmpsl
push
mov
lds
xchg
push
cltd
cmp
inc
xchg
les
repz
sbb
dec
jb
pop
jo
mov
js
adc
js
sub
jae
aaa
out
mov
pop
add
mov
std
or
pop
mov
repz
cmpsl
xor
push
jl
cwtl
arpl
pop
flds
push
or
inc
mov
sbb
jecxz
jl
and
jns
sub
mov
push
dec
mov
mov
cmpsb
mov
mov
inc
ss
mov
pop
push
xchg
in
stos
and
xchg
lock
mov
fldt
jg
push
lret
cltd
cmp
ficoml
pop
adc
pop
pop
mov
jnp
js
outsl
mov
leave
jno
out
jno
fmuls
rcll
enter
inc
push
lds
test
movsb
pushf
rclb
arpl
lds
outsb
pop
fwait
adcb
pop
mov
mov
mov
scas
sbbb
sub
repnz
jne
jbe
xor
addr16
arpl
adc
push
scas
xorb
and
fs
dec
clc
xchg
mov
fistl
lds
ja
mov
dec
je
dec
stos
test
inc
dec
pop
repnz
jnp
insb
repz
mov
mov
sub
pop
xlat
int
cmp
cld
mov
daa
mov
mov
xlat
out
mov
add
cwtl
mov
add
ljmp
mov
add
mov
mov
sbb
mov
inc
sub
lret
add
aas
xchg
mov
cmp
pop
add
cmp
test
mov
add
push
inc
repnz
jge
adc
push
and
fcomp
inc
adc
out
ret
add
and
or
or
sahf
loope
hlt
pop
adc
sarl
fisubrs
xor
mov
jmp
cmpsl
fsub
dec
fdivl
lods
fildll
cmpl
lods
fpatan
push
inc
and
inc
pop
xchg
pop
ffree
leave
les
sbb
nop
js
adc
xchg
or
shlb
inc
mov
in
xchg
mov
adc
sti
xchg
outsb
cli
inc
insb
sbb
add
bound
in
cmc
mov
mov
mov
adc
testl
push
icebp
mov
call
enter
jp
mov
lcall
rorl
sbb
cmp
push
cmpsb
in
cwtl
adc
adc
xor
mov
xlat
pop
and
push
push
cmp
xchg
in
add
jnp
stos
test
adc
movsl
ret
or
push
ret
punpckhbw
cmc
aam
jg
fld
cmp
push
cmpb
cmpsb
xchg
das
cmp
in
push
loope
jo
sub
jge
xchg
jb
ss
jmp
xor
push
aas
lret
sub
movl
push
push
xchg
and
pop
fdivrl
lret
adc
xchg
mov
xchg
repz
mov
repz
daa
push
xchg
or
into
pop
mov
inc
clc
ja
jno
pop
jle
cmp
adcb
mov
inc
ja
testl
xchg
mov
scas
dec
test
jmp
nop
movsb
jnp
xor
dec
pop
into
nop
adc
xor
hlt
mov
push
pop
test
dec
cltd
sub
aaa
ret
in
cltd
sub
jl
outsb
fbld
xchg
sub
pop
push
cmp
mov
adc
stos
add
xchg
inc
mov
sbb
idivl
push
inc
in
in
sub
sub
pop
mov
xor
jl
inc
sti
in
sub
mov
dec
movsb
jge
jl
lods
das
movsl
mov
add
pop
cs
inc
sbb
repz
or
scas
add
out
bound
lret
dec
ljmp
push
mov
je
cs
cltd
stos
mov
jge
ljmp
jecxz
enter
mov
and
in
dec
dec
pop
bound
push
mov
pop
scas
mov
jg
test
setge
inc
fnstsw
fildll
cltd
mov
ret
pop
sbb
sub
movsl
xor
ret
dec
fld1
sbb
xchg
mov
sbb
cmp
push
test
out
outsl
les
mov
sbb
lods
lahf
int3
add
mov
xchg
loopne
jb
pop
cmp
pushf
andl
and
cmp
add
les
mov
lahf
xchg
jae
aam
sbb
repnz
dec
cmp
cmp
dec
add
fists
mov
sbb
adc
scas
cli
ja
jp
stc
dec
loope
stc
popf
pop
outsl
test
jecxz
std
cmp
roll
jp
mov
hlt
arpl
lret
je
jns
jle
fdivs
sub
xchg
jno
mov
pop
fnstenv
inc
mov
cmp
orl
out
js
pop
mov
or
lock
cmpsl
jns
push
push
fadds
loope
push
insb
and
addr16
lret
mull
xchg
test
push
push
push
pop
cmp
in
xor
mov
into
test
pop
pop
movb
jle
movsl
push
pop
popa
adc
and
add
call
sti
jl
jns
out
pop
and
out
pop
mov
fwait
imul
dec
in
mov
orl
fiaddl
dec
loopne
add
push
xlat
les
xchg
mov
enter
jnp
pop
daa
xchg
mov
xor
and
pop
movsl
pop
mov
push
push
idiv
push
and
sbb
cmp
jle
cmc
jb
push
jbe
xchg
js
push
jne
push
push
add
leave
xchg
or
jp
cltd
jle
decl
xchg
lea
pand
sub
inc
orb
test
inc
or
daa
lods
dec
xchg
aad
test
sub
push
push
mov
cmp
or
shlb
repz
pop
jg
leave
dec
add
sbb
jecxz
push
dec
and
mov
shrl
ret
jbe
lret
in
lock
xchg
push
mov
cmc
out
add
cmp
sub
jl
sub
mov
cmp
addl
xchg
inc
lods
xchg
mov
dec
jp
add
popf
mov
push
sub
mov
dec
xchg
das
stc
inc
inc
add
or
push
mov
jbe
test
or
popf
call
ffreep
andb
fldlg2
cmp
xchg
out
pop
fimull
rclb
fwait
sbb
xchg
jb
aad
inc
iret
in
ljmp
mov
push
std
jecxz
add
testb
jl
cmp
mov
push
mov
and
jns
popf
sbb
push
or
mov
pop
push
aad
pop
jb
and
dec
sahf
xor
sahf
xchg
je
lds
mov
cli
ljmp
push
cmp
inc
sbb
cld
xchg
push
jge
or
mov
in
popf
outsb
pop
ret
cmp
jmp
jb
cltd
iret
inc
cmp
testb
arpl
adc
push
shll
ret
pushf
negl
aaa
inc
insb
fisubs
mov
push
cmc
int
out
add
xchg
or
aaa
sbb
pushl
stc
xor
es
push
jo
jecxz
pop
push
sbb
enter
mov
les
jbe
jge
cmp
rcrb
dec
fldenv
and
ja
push
push
dec
fistpll
repnz
mov
push
lahf
dec
cmc
jl
adc
or
sub
mov
add
pusha
mov
xchg
test
pop
dec
xor
lahf
mov
ss
push
rcll
mov
push
and
jnp
movsb
and
sbb
push
add
imul
inc
pop
add
addr16
imul
cmpsb
lods
cmpsl
push
or
leave
mov
inc
stos
or
out
pop
sub
aad
jnp
loop
cltd
xchg
and
add
aaa
jmp
cmpsb
push
jmp
sbb
scas
inc
push
xlat
insl
cwtl
inc
shr
out
outsb
ja
fnstcw
in
cmpb
fistpll
adc
in
scas
sbb
mov
sbbl
xor
fisttps
cmp
or
imul
dec
arpl
out
insb
sbb
mov
adc
repnz
xchg
inc
xor
imul
mov
cld
adc
adc
aaa
mov
and
jl
fnstsw
inc
test
sbb
bound
loopne
lahf
mov
mov
stos
adc
inc
jnp
dec
xchg
sti
mov
sub
sub
jns
lods
and
movsl
rcll
insb
add
adc
mov
adc
sub
or
pop
push
sbb
xchg
or
pop
imul
imul
xchg
lret
inc
push
adc
fs
xchg
rcrl
addl
cli
es
fnstsw
or
hlt
xchg
jge
sbb
fcom
push
into
or
and
jae
jns
push
pop
test
mov
in
xchg
shl
decb
or
adc
sbb
std
aam
filds
mov
divl
bound
popa
and
ljmp
movb
xor
pusha
cli
nop
shll
inc
adc
xchg
and
out
inc
inc
pop
outsb
icebp
movsb
out
insl
and
dec
mov
pushf
sahf
pop
mov
and
loop
mov
push
pusha
cmovb
sub
mov
mov
cmp
std
in
jnp
stos
shrl
and
mov
call
inc
fmulp
shl
sbb
aad
mov
pop
aaa
out
shrl
add
mov
addr16
dec
ss
int
cmc
sbb
dec
sbb
or
outsb
pop
stos
sub
or
pop
clc
cmp
hlt
outsl
pop
pop
popa
inc
das
push
testl
cs
mov
mov
bound
cmc
or
cmp
jle
mov
iret
dec
mov
mov
das
aaa
stos
lret
mov
inc
xor
inc
pop
ret
xor
movl
mov
sbb
mov
and
push
xor
orl
scas
or
test
adcb
in
jb
enter
fbstp
int3
mov
loope
or
in
xchg
es
mov
test
push
cs
jg
xor
jecxz
push
repz
cwtl
cmc
iret
pushl
fmull
mov
sub
bound
test
jno
or
xchg
ljmp
sti
adc
movsb
add
adc
enter
loope
adc
or
mov
stos
jl
js
jl
pop
push
repnz
mov
bound
movsl
mov
mov
stos
loope
xchg
push
push
lods
adc
hlt
addl
ficomps
adc
cmp
pop
push
outsl
push
jb
fstpl
in
stos
mov
jns
dec
xchg
std
addr16
fcoml
dec
adc
aam
xor
out
andl
push
push
pushf
add
leave
pop
imul
push
push
les
scas
push
fildll
adc
xorb
mov
cmp
ljmp
outsb
dec
repnz
xor
push
std
mov
pop
dec
add
in
movl
push
or
jecxz
and
repz
and
enter
inc
sbb
mov
lock
stos
es
rcrb
scas
cmpb
sahf
shl
ljmp
fldt
add
lret
dec
jecxz
outsl
out
ljmp
repnz
js
mov
fsubrl
xlat
jge
pop
pop
add
dec
js
mov
sub
inc
mov
adc
test
shlb
pop
push
movsb
aas
or
pop
pop
test
push
mov
jl
fwait
mov
dec
inc
cmp
aas
mov
hlt
in
lods
cmc
and
les
pop
pop
xchg
out
sub
or
rclb
sbb
lahf
stos
push
in
mov
pop
neg
push
add
jae
xchg
aaa
sub
notl
fwait
js
addb
insl
adc
xchg
mov
repnz
cli
lahf
push
push
daa
stos
mov
or
std
sub
sbb
mov
call
movsb
inc
mov
out
pushf
stos
test
mov
rcrb
fldenv
or
or
jb
sahf
and
pop
xlat
pop
es
subb
insl
bound
adc
or
fsts
inc
out
xor
fs
inc
mov
in
mov
fcoms
hlt
and
xchg
xor
lods
test
hlt
scas
lcall
es
inc
mov
loope
add
js
addr16
sbb
pop
add
dec
inc
jmp
lahf
xor
leave
daa
adc
push
shlb
mov
push
rolb
test
mov
lods
ja
les
mov
or
into
push
orl
adc
jno
fimull
mov
lret
push
mov
jne
adc
insl
pop
pop
add
xlat
jge
mov
mov
bound
mov
mov
xchg
pop
stc
add
push
and
inc
insb
cmp
in
cmp
test
ja
imul
lock
loope
mov
inc
roll
insb
sar
mov
stos
jl
jge
nop
repnz
cmpsl
fnstenv
pop
jnp
scas
insb
mov
int
cltd
hlt
mov
mov
pop
sbb
push
fs
jno
enter
add
lods
stc
cmpl
lret
xchg
std
insl
mov
mov
add
popa
insb
push
insl
or
hlt
lret
xchg
push
xor
push
out
pop
stos
in
sti
xor
xchg
adc
sub
mov
sbb
pushf
sarb
bnd
pusha
lcall
inc
jmp
nop
lahf
das
out
xchg
jns
sub
dec
xor
daa
sub
rclb
std
shl
shrb
jnp
push
push
repz
cmpl
dec
adc
mov
test
cmp
in
xchg
mov
insb
inc
and
inc
out
stos
ret
pop
les
mov
call
push
push
lahf
push
sbb
or
sbb
outsl
pop
fcoml
in
ds
jae
mov
adc
mov
fadd
mov
sbb
nop
fsts
jge
nop
aas
ljmp
push
sahf
jl
xor
mov
push
mov
or
fs
fwait
sti
lock
inc
xor
push
xchg
mov
out
inc
xchg
dec
or
xchg
mov
rorl
jbe
xor
test
xor
push
lods
loope
call
out
dec
shr
movaps
and
imul
pusha
pop
insb
les
jg
out
or
out
vpsrlq
fnstenv
arpl
push
cld
loopne
imul
in
sbb
int
xchg
inc
imul
enter
adc
imul
dec
dec
cmp
loope
lret
sahf
mov
popf
subl
xchg
or
cmovb
mov
and
jns
int
push
jne
popa
xlat
xor
pop
fwait
dec
aam
push
repnz
push
ror
adc
into
and
push
xchg
repz
push
inc
xchg
push
push
pushf
sub
cmpsb
sbb
mov
ljmp
mov
fcom
xor
ja
stc
test
mov
lea
xchg
push
jl
je
ja
cmp
jmp
pop
lcall
dec
icebp
sbb
stos
jl
orb
push
fdivr
daa
outsb
mov
fcomp
mov
pop
ret
bound
mov
ljmp
inc
loopne
sub
adc
pop
pop
xchg
gs
clc
pop
mov
outsb
adc
pop
gs
jmp
lock
ror
sub
mov
jnp
mov
test
add
clc
push
jno
aaa
cmc
sbb
lret
cli
fdivrs
dec
xor
mov
adc
jle
jb
shr
jge
mov
push
or
lods
lds
in
xchg
hlt
mov
fucom
xchg
popa
arpl
fldenv
inc
push
jecxz
int
stos
push
es
outsb
imul
mov
and
push
int3
imul
jno
lahf
movsb
aas
pop
flds
js
jp
fstps
pop
imul
add
jae
lcall
or
test
mov
jle
addb
nop
mov
mov
sti
inc
aaa
test
xchg
and
push
jb
dec
in
lods
in
shll
pushf
mov
pop
push
leave
push
push
xchg
pop
js
adc
xor
pushf
stc
xchg
sti
loop
nop
jae
inc
sbb
insl
imul
pop
cld
mov
out
or
mov
mov
loop
and
pusha
dec
call
xchg
leave
cli
sahf
in
data16
int3
inc
jecxz
pop
cmp
bound
fcos
xchg
bound
ja
test
aaa
pop
clc
add
stc
lea
popa
div
aad
push
jb
and
cmp
call
push
push
add
scas
les
iret
mov
addr16
cmp
mov
push
push
mov
jp
cmp
pop
mov
fsubl
mov
mov
mov
mov
xchg
cld
mov
mov
xor
cmp
repnz
in
add
mov
mov
repz
jmp
mov
or
and
jae
movsl
xlat
jnp
mov
inc
fstl
mov
xlat
gs
int3
push
xchg
mov
loopne
xor
arpl
mov
pop
pop
movsl
pop
inc
and
xchg
push
out
jge
jb
cmp
dec
pop
movsb
scas
mov
out
js
mov
inc
mov
add
dec
push
addb
push
out
cmpl
mov
ret
sub
imul
mov
fistps
aam
push
arpl
add
clc
adc
cmp
sub
lds
or
mov
adc
cmc
jns
jno
add
jb
mov
cmpsb
loope
sub
imulb
mov
mov
xchg
shrb
mov
lods
testb
jle
mov
fisubl
es
add
sub
cmp
and
push
rcrb
dec
dec
in
rolb
in
add
call
jmp
leave
int
inc
cmp
cmpb
pop
mov
inc
stc
bound
dec
movsb
idivb
cmpsb
adcb
lret
pop
sub
dec
lret
imul
leave
mov
in
or
and
dec
cmp
in
aas
jae
fst
test
out
and
popf
cmp
fdivr
jge
popa
cld
jbe
mov
jne
test
pop
ja
nop
sahf
pop
inc
arpl
mov
addr16
cmc
mov
ss
add
into
fisubl
xor
int
daa
jp
sbb
cmp
loopne
pop
jmp
xchg
loope
icebp
incb
aaa
xchg
int3
jo
movsl
cmp
movsl
lret
mov
pop
sub
scas
pop
fwait
sub
sbb
fsubp
gs
lea
mov
pop
fwait
jb
das
push
sub
inc
nop
add
cmp
nop
outsl
sub
mov
stos
mov
fidivrs
fiaddl
je
add
xchg
enter
push
add
movb
enter
jle
mov
icebp
es
push
mov
mov
je
outsb
sub
shr
test
jmp
cltd
jmp
mov
iret
lret
das
arpl
adc
nop
xchg
push
addr16
xor
stos
mov
jb
jae
sbb
ds
test
fldt
xchg
xchg
jo
sub
dec
call
xor
pop
sub
mov
dec
mov
repz
fcmovb
pop
lret
inc
mov
rcll
in
xlat
in
jecxz
testl
pop
out
xor
sti
cwtl
outsl
filds
outsb
jb
fistps
cmp
jmp
or
add
ljmp
out
lahf
sar
pop
pop
icebp
pop
bound
ds
pop
out
inc
stc
push
lahf
repnz
adcb
mov
out
into
loope
clc
xor
xchg
xchg
pushf
insl
jae
cltd
rcl
nop
cmpsl
sub
subb
hlt
mov
jae
cli
and
fimuls
aas
sbb
xchg
fidivl
or
jae
pop
sub
jge
ret
pop
test
xchg
mov
cmp
ret
jp
cmp
mov
jl
es
jns
addr16
scas
push
loopne
cld
je
add
clc
xor
fsubl
mov
dec
cmp
popa
ljmp
bound
mov
lods
aaa
mov
adc
xor
lahf
mulb
into
adc
hlt
mov
mov
jge
mov
xchg
sbb
adc
sbb
loope
sti
subl
mov
imul
fldpi
insl
movsb
xlat
icebp
arpl
pop
mov
fiaddl
mov
xchg
cwtl
test
out
xchg
stos
sbb
pop
pop
cmp
lahf
xchg
mov
subl
das
cmp
sbb
jle
cmp
mov
negl
fidivs
dec
jp
inc
int
fsubl
and
mov
pusha
push
push
pop
xchg
mov
push
bnd
add
mov
inc
xchg
lds
mov
std
and
adc
jb
jle
cmp
dec
mov
jl
gs
stc
dec
and
loop
fldt
lcall
mov
jae
sbb
mov
add
std
sub
fisttpl
xchg
loopne
in
imul
pop
pop
shr
shl
pop
xchg
or
sbb
add
push
inc
pushf
dec
xchg
jno
lcall
xor
add
aaa
fs
cmp
out
sarl
ret
sbb
aas
xor
leave
scas
pop
loope
fidivrs
pop
mov
icebp
or
bound
adc
stc
jecxz
jb
mov
mov
fidivl
rcrl
lea
jg
dec
and
add
aas
icebp
xchg
push
incl
pop
in
cmp
loop
les
cld
fwait
loope
jb
mov
fidivrl
aam
rcrl
je
in
test
lcall
add
shlb
popa
pop
pop
in
ret
xchg
push
loope
push
mov
mov
jg
cli
stos
mov
mov
pop
jcxz
fidivrl
divb
repz
mov
orb
lret
xor
call
repz
dec
out
test
inc
out
outsl
in
adc
sub
call
or
adc
lret
cltd
push
lock
repz
movsl
xor
xchg
jmp
int
jmp
insb
in
and
mov
dec
inc
imul
int
testb
pusha
test
mov
lcall
adc
gs
dec
lea
mov
add
jmp
jl
inc
out
out
pop
jae
or
in
mov
jno
and
pop
in
cmc
xchg
sbb
xchg
dec
mov
add
pop
push
add
lods
jae
cld
jb
gs
dec
imul
insl
in
mov
addl
cmpsb
lcall
xor
popf
test
aad
dec
xchg
mov
fsubs
in
pop
sbb
mov
mov
test
mov
mov
mov
fisttpll
xor
jle
sbb
xchg
dec
add
xchg
xlat
out
roll
jge
ljmp
jo
repz
dec
addr16
cli
xor
jecxz
cltd
sbb
lods
push
pop
sahf
lcall
icebp
xchg
sub
ficoml
xlat
mov
std
adc
cmovb
mov
cmpsb
lret
pop
and
cmp
pop
scas
mov
fucomp
inc
mov
push
jns
lcall
add
daa
pop
mov
pop
pushf
cmp
out
adc
sbb
dec
lods
dec
mov
lcall
aad
or
mov
push
hlt
ficomps
pop
dec
gs
aad
cltd
dec
dec
inc
aas
lods
std
xchg
lods
pusha
clc
pusha
enter
adc
insb
addr16
out
lahf
leave
popa
add
push
xor
sub
loop
incl
pop
xchg
fidivl
lret
aas
clc
je
sarb
in
stos
dec
dec
out
loop
or
loop
shll
into
les
movl
pop
pusha
add
xor
pop
jnp
repz
mov
pusha
pop
or
or
jb
in
out
out
stos
mov
mov
pusha
push
xchg
sbb
decb
and
mov
cli
and
and
cwtl
aaa
xchg
test
adc
mov
jne
cltd
pusha
enter
lret
xchg
ret
inc
inc
icebp
jns
mov
sbb
adc
mov
mov
mov
or
es
movl
add
xchg
add
or
loope
bound
sbb
push
das
inc
sub
adc
in
jne
int
sub
mov
jg
ja
sub
xor
adc
das
jne
sbb
js
mov
mov
xor
mov
mov
mov
inc
push
xor
call
daa
into
xlat
mov
inc
aad
lods
bound
push
clc
dec
sbb
aam
xor
loop
mov
mov
sbb
stc
cld
std
repz
call
xor
add
jl
data16
jb
popa
add
mov
jmp
sahf
icebp
mov
imul
xor
fwait
pop
jmp
aas
push
dec
lds
jbe
add
int
dec
nop
test
dec
lods
into
pop
adc
sbb
stos
inc
scas
or
xor
mov
xchg
pusha
mov
and
js
idivl
outsl
shlb
inc
rcll
push
ret
fldln2
push
cmp
xor
outsb
jne
lods
jp
bound
test
and
sahf
jo
icebp
push
scas
push
ss
icebp
cmpsl
sbb
decl
sbb
gs
bound
cs
jnp
pop
mov
and
leave
aam
adc
stos
push
jae
lods
ret
add
adc
mov
push
orl
jns
pusha
push
test
sahf
adc
mov
jnp
insl
out
xchg
sbb
sti
adc
pop
adc
pop
sub
popa
inc
sub
and
cmp
es
sti
jnp
jbe
inc
cmp
rcll
mov
cltd
repnz
add
xchg
ficoms
imul
cmpl
filds
out
dec
lcall
lcall
sarl
push
xchg
les
pop
inc
and
xchg
pop
stos
fs
arpl
mov
inc
adc
int
xchg
push
pop
fs
out
xchg
addr16
dec
push
lret
inc
mov
enter
sub
or
adc
mov
mov
subb
aas
clc
mov
mov
std
push
jne
dec
lea
pop
pusha
es
mov
cmp
and
inc
jno
cmp
cmp
aad
sub
push
add
pusha
pop
test
or
nop
testb
add
cs
cmp
dec
push
push
pushf
pop
push
fs
mov
cld
in
in
loop
mov
cltd
adc
movsb
jno
xchg
push
in
stos
lock
cmp
pop
sub
in
mov
subl
jns
aad
push
jecxz
aaa
adc
fisubrs
insb
cmp
lahf
jne
fistps
orb
cmp
lods
jo
xor
jge
cmp
jecxz
pushf
out
pop
xor
test
pop
sarb
pop
push
cli
pop
dec
jecxz
pop
inc
bound
pop
icebp
and
mov
or
icebp
mov
lret
mov
outsl
push
leave
repz
push
out
jp
lods
add
push
ret
xchg
adc
inc
sahf
les
mov
mov
adc
cmp
js
mov
cmp
fists
xchg
inc
xchg
add
je
push
ret
or
loop
and
stos
add
jo
lock
push
andl
insl
sbb
cmpsl
push
sub
xchg
adc
jge
shll
xchg
lret
add
lcall
mov
xchg
pusha
add
dec
lahf
sti
int
xchg
dec
inc
ljmp
sub
out
xor
mov
sub
jbe
or
ss
or
lds
sub
divl
xorl
ss
fiadds
pop
and
fisttpl
je
mov
aaa
xor
fstpl
inc
sti
in
aad
xchg
lock
popf
lahf
jg
xchg
inc
mov
js
cwtl
mov
stos
jge
push
or
or
xor
cmp
lahf
lret
jb
stos
dec
iret
dec
push
rcrb
mov
arpl
lock
shl
inc
inc
xorb
push
pushf
mov
shll
nop
inc
int3
xchg
gs
xor
test
dec
xor
data16
es
push
sub
push
jp
pop
lea
or
clc
pop
cmp
push
sbb
inc
or
mov
or
dec
sarb
mov
pop
pop
andl
hlt
sti
stos
jae
push
sub
mov
jbe
and
sub
pusha
pop
mov
and
inc
mov
stos
sbb
and
fcoms
dec
lods
imul
add
sub
cmp
push
cld
add
push
mov
insb
jg
inc
jne
dec
movsl
loopne
ds
xorb
dec
out
cld
cli
push
fistl
jmp
push
push
jecxz
ljmp
or
nop
repnz
adc
adc
aaa
push
adc
add
lods
leave
imul
test
or
push
decb
mov
pushf
es
xchg
enter
imul
push
jmp
mov
and
repz
mov
cmp
call
xlat
jne
dec
mov
call
pop
cmpsl
sbb
aad
mov
clc
jnp
sbb
push
sahf
push
rclb
lea
mov
add
xchg
inc
sub
sbb
push
cmp
pop
in
jg
add
xor
leave
xchg
xor
pop
stos
int
xor
push
cmp
jno
in
lods
shlb
sbb
pop
xchg
or
test
jle
imul
aam
insb
clc
mov
sub
mov
stos
or
stc
sub
xchg
push
adc
xchg
sbb
adcb
js
fidivl
sbb
lods
lea
mov
sti
sbb
sub
mov
pop
sahf
mov
jp
fadds
std
andl
xchg
mov
lock
adc
push
mov
adc
imul
xchg
fs
roll
pop
push
popa
push
pop
dec
push
int3
subl
jl
jnp
cltd
iret
pop
rolb
mov
cltd
enter
in
push
pop
dec
out
sbb
push
aas
in
pop
mov
outsb
bound
push
test
cmpsl
add
inc
movb
ds
leave
lods
push
mov
xchg
and
fwait
mov
dec
adc
mov
sti
test
pop
mov
rorb
ljmp
jg
arpl
or
into
push
add
pop
fldl
int3
ret
inc
mov
push
adc
popa
fcoml
sbb
addb
adc
jnp
sar
ret
adc
fildl
sahf
pop
jno
stc
mov
sbb
jl
add
loope
lahf
sahf
fildl
dec
inc
inc
mov
into
push
and
cwtl
lock
scas
outsb
push
mov
testl
push
inc
adc
icebp
loope
xchg
add
pop
loopne
sbb
jecxz
xchg
mov
repnz
fidivs
insl
sub
aam
xchg
data16
inc
outsb
sub
call
mov
cmp
inc
sub
lcall
inc
scas
jns
ljmp
test
xchg
inc
sbb
rcrb
test
sub
xchg
fisubrl
add
ds
int3
sub
sub
shl
mov
add
subl
add
inc
mov
lcallw
adc
mov
pop
cmp
imulb
jb
shll
mov
mov
adc
ja
pusha
or
cltd
in
xor
xlat
lock
ja
test
jae
jbe
add
jno
add
push
push
scas
sub
adc
adc
loopne
cli
aad
mov
pop
bound
pop
scas
jg
out
push
xchg
or
lret
jbe
and
daa
push
push
lret
fucomip
ja
test
pop
rorl
pop
mov
or
xchg
nop
cmpsb
sub
rorl
inc
test
fwait
jae
and
adc
test
adc
std
jnp
pop
outsb
arpl
sbb
ficompl
mov
out
sahf
pop
popa
pop
push
out
mov
stc
xorps
xchg
inc
sbb
addr16
pop
push
and
rcl
pop
cmp
cmpsl
insl
mov
andb
jecxz
mov
stc
push
inc
sbb
shlb
shr
idiv
cmc
xor
xor
push
fsubrs
cmpsb
bound
add
and
add
inc
out
stc
mov
xchg
mov
out
adc
mov
ret
mov
jne
cmpsb
mov
call
test
mov
mov
inc
mov
jmp
lods
cld
inc
rcrb
mov
loope
cmp
mov
cltd
loop
mov
cmp
ss
push
mov
lret
xchg
mov
push
pop
push
pop
or
dec
out
pop
cmp
clc
mov
jbe
mov
dec
out
stos
push
leave
dec
out
xor
xor
sub
cmp
movsl
test
push
mov
dec
fs
dec
and
pop
aam
cmp
subl
xor
out
sub
mov
jp
sbbb
pop
pop
adc
gs
mov
mov
mov
andps
rcll
xor
push
pop
sbb
not
hlt
mov
je
in
loop
mov
push
push
lds
and
push
in
push
pop
loopne
lret
sti
fstl
je
xor
mov
add
push
nop
pop
test
std
xchg
icebp
je
pop
pop
ret
sbb
cwtl
ja
mov
fsincos
ja
lea
movsb
ds
or
ret
add
imul
xor
mov
cs
repnz
jns
in
test
push
add
jl
das
push
ret
imul
fldl
shl
mov
mov
negb
pop
push
jmp
scas
jns
and
xor
idivb
out
mov
pop
sar
pop
jmp
push
lahf
ret
push
scas
lret
dec
popf
xor
negb
mov
aad
movsb
pop
cmp
sub
pop
push
sti
cs
addr16
inc
aas
int3
or
mov
in
je
adc
movsb
loopne
push
ret
ret
mov
ret
mov
aad
jmp
repnz
mov
xor
mov
outsl
lret
inc
sub
jmp
or
cmp
pushf
or
es
xchg
daa
inc
sbb
pushf
adc
mov
mov
je
filds
les
jmp
fadd
push
imul
sbb
mov
jl
xchg
mov
js
xor
sub
cmpsb
add
pop
sbb
loop
mov
pusha
sub
mov
and
xor
inc
and
jno
mov
jge
cmp
mov
in
pop
dec
mov
cltd
cmp
in
dec
cmpsl
inc
es
xchg
ss
mov
jae
insl
fstps
pop
arpl
stc
cmp
subl
pop
fadds
in
loope
in
adc
mov
stos
add
dec
add
aaa
xorb
push
cmp
push
repz
push
imul
jno
dec
jo
in
push
or
add
xor
popf
ret
lds
mov
push
int3
ja
movsl
sbb
cmp
xor
movsl
and
sbb
cwtl
xchg
decb
adc
loop
aad
je
xchg
sbb
idivl
push
mov
add
cmp
add
pop
jp
or
stos
jbe
push
test
popl
clc
pusha
xorl
add
sbb
mov
push
push
inc
in
insb
ret
jmp
cltd
ja
fistl
mov
pop
into
push
mov
aas
xchg
mul
jo
shlb
xchg
imul
xchg
dec
cwtl
pop
out
sti
imul
sub
cld
cmp
push
or
inc
shll
xor
cmp
xchg
sahf
pop
pop
xor
js
cltd
sbb
rorl
ja
sub
sti
mov
xor
pusha
notl
pop
adc
hlt
add
mov
xlat
cld
dec
xor
push
ja
fdivs
divl
jge
hlt
cmp
xchg
stc
lahf
sub
push
cmc
or
push
pop
add
out
insb
jge
mov
or
sbb
inc
xchg
cli
mov
mov
mov
and
pusha
inc
inc
les
mov
or
lds
mov
mov
insb
mov
fdiv
mov
inc
dec
in
pusha
cli
and
mov
or
ss
icebp
cmc
or
rcll
pop
sarl
popa
jb
sbb
dec
lret
xchg
xlat
jecxz
sbb
ret
sub
aas
adcl
data16
pushf
sbb
scas
mov
mov
test
add
xor
or
lret
test
loopne
loop
testl
inc
hlt
call
in
mov
inc
cmp
jmp
jg
rcrl
incb
xchg
mov
lods
shll
sub
mov
xlat
ja
xor
or
jmp
inc
movb
jecxz
mov
jmp
push
or
sbb
sub
test
sub
or
stos
mov
lods
jbe
xor
mov
or
into
sti
sub
add
int
pop
fildl
adc
sbb
or
fmuls
or
mov
lea
push
push
mov
movsl
loopne
mov
mov
shll
inc
sub
sub
sahf
add
xchg
xchg
mov
dec
xchg
repnz
cmp
out
adc
cwtl
mov
aaa
stos
lcall
fs
mov
roll
pop
inc
push
mov
in
testb
jns
lcall
ljmp
bnd
mov
pop
or
in
dec
adc
sbb
add
push
push
adc
cmp
push
mov
popa
pop
int
xchg
xchg
mov
xchg
in
cmp
out
add
push
sbb
into
in
setl
shlb
jg
sbb
gs
inc
popl
add
pop
in
xchg
lods
xlat
sbb
push
adc
scas
jecxz
dec
mov
shlb
adc
lret
outsb
pop
jle
in
test
adc
ds
or
fmul
imul
xchg
or
and
loope
or
xor
sbbb
call
jno
mov
add
je
mov
dec
sbb
jns
adc
fcoml
cmp
aam
adc
jno
sbb
sub
lret
dec
in
mov
xchg
inc
lret
mov
inc
stos
xor
cmp
add
cwtl
gs
ret
rclb
incb
insb
jge
xor
cmpb
inc
lods
xor
dec
xchg
xor
mov
call
jg
test
jo
in
stos
imul
arpl
xchg
mov
dec
cmp
test
pop
incl
and
xchg
jp,pt
and
mov
enter
pop
fnstsw
adc
xchg
insl
pop
xor
xor
mov
xchg
sbb
fists
popa
pop
jp
ret
scas
inc
sub
outsb
mov
out
hlt
outsb
out
shll
mov
push
and
mov
cmpsb
mov
ret
mov
sbb
mov
pop
pop
jg
and
scas
push
scas
sub
mov
pop
cmp
fdivl
mov
adc
lea
out
jle
add
in
ficompl
adc
idivb
in
ss
mov
popf
fcoml
insl
arpl
test
xlat
mov
loop
hlt
xchg
add
cmp
xor
sti
adc
add
inc
in
or
push
dec
dec
mov
mov
mov
mov
out
or
mov
xchg
hlt
pop
xchg
mov
aas
pop
aad
sbb
dec
push
int3
or
add
subl
jns
ds
scas
jmp
adcl
out
cmp
mov
mov
pop
mov
mov
push
fidivs
pop
pusha
ret
orb
mov
adc
jg
enter
fistpll
enter
call
xchg
jp
loopne
inc
test
out
repz
jp
xchg
pop
dec
mov
sbb
ds
mov
out
loopne
pop
test
imul
pop
pop
cmp
gs
aas
mov
cmp
insb
push
jp
rcll
jecxz
adc
out
in
idivl
add
aam
fwait
pop
clc
sub
xchg
dec
cs
test
jns
adc
iret
scas
xchg
fsubs
insb
rolb
adc
test
push
out
movsb
popf
and
test
jo
mov
cmp
sub
and
imul
sbb
rcrb
xor
dec
lret
jo
sbb
xchg
es
leave
adc
mov
loop
sbb
mov
aad
and
cmpsb
insb
leave
pop
and
repz
dec
mov
clc
test
xchg
lret
push
jnp
nop
daa
xchg
orb
mov
adc
push
jle
stos
gs
rep
inc
sahf
mov
mov
inc
lea
push
imul
jb
outsb
xchg
popf
cmp
movsl
add
das
data16
adc
add
dec
lods
add
fwait
leave
sahf
xor
add
rcl
cs
movsl
push
jns
lret
xchg
ljmp
scas
filds
icebp
mov
hlt
mov
insl
and
mov
movsb
cmp
in
ret
mov
pop
loop
pop
sbb
stos
fistpl
ss
and
add
imul
sub
lret
rorl
les
jne
ret
movsl
xor
and
loopne
pop
jb
int3
xchg
cmp
aaa
out
sti
dec
mov
add
jo
aaa
test
cmpsb
xlat
mov
int
pushf
out
jb
pop
lods
sub
lods
jns
rcll
hlt
stc
xchg
loope
subb
pop
in
push
cli
shl
leavew
movsb
cmp
add
inc
lahf
xchg
and
xor
jbe
pop
mov
divb
sbb
fwait
movb
out
enter
xchg
jno
loopne
push
sbbb
repz
push
cmpl
jge
call
mov
mov
jb
dec
ret
pop
add
ror
scas
aas
into
mov
fimuls
lods
and
ficompl
cmpsb
les
shrl
pop
mov
or
inc
mov
inc
xchg
icebp
jmp
out
divb
imul
mov
jg
lds
xchg
lahf
nop
scas
pcmpgtb
xor
jno
loope
clc
out
xor
cmp
pop
push
lcall
xchg
sahf
pop
daa
sub
inc
fidivrl
and
jb
leave
cmp
lea
cmpsb
push
sbb
cmp
ret
inc
xchg
aaa
mov
adc
fisubrs
jns
fs
push
lret
mov
mov
sar
add
fmul
mov
jnp
xor
aas
std
inc
mov
stos
cli
sub
fwait
push
push
mov
pop
inc
sbb
fwait
jne
les
das
and
movsl
leave
dec
test
movsb
jp
pop
cmp
push
mov
cli
xchg
xchg
imul
adc
sbb
cmp
test
shr
mov
fisttpl
pusha
mov
imul
dec
or
lods
jae
int3
cs
lea
adc
fbstp
push
es
int
in
add
pop
lahf
repz
into
lods
dec
sbb
add
lea
mov
sbb
fbld
sub
repz
mov
dec
dec
push
test
xchg
mov
mull
inc
xchg
adc
push
xchg
sub
dec
and
push
cld
imulb
mov
jo
lods
andl
cs
xor
cltd
in
cmp
mov
pop
add
scas
fsubl
jg
adc
out
ss
cmp
mov
loop
bound
xor
test
int
pop
inc
cmp
shrb
and
push
mov
push
call
cld
push
andl
shrl
fadds
lea
cmp
aad
loopne
inc
sub
pop
div
dec
sub
dec
jge
and
les
pushf
and
mov
daa
cmp
mov
mov
dec
fsts
dec
cmc
mov
push
sub
sub
cmp
push
mov
aas
lcall
lock
mov
test
sub
hlt
dec
dec
lret
jmp
mov
xor
mov
hlt
sbb
xorb
mov
icebp
cmpsb
inc
push
rcrb
loope
inc
pop
sahf
xchg
push
cmp
xchg
mov
orps
pop
orb
sub
mov
adc
pop
pop
cmp
push
lock
push
dec
inc
xchg
insl
xor
lret
fcmovnb
int3
out
push
pop
and
inc
frstor
push
in
jmp
mov
adc
sub
inc
inc
pop
push
iret
fiadds
ss
fnsave
inc
icebp
xchg
sub
icebp
jbe
cmp
outsl
pop
xchg
or
dec
fists
in
sub
fsubrp
pop
aas
or
jne
mov
inc
into
pop
cmpsb
cld
movl
lret
imul
xchg
add
adc
das
repnz
xchg
push
lea
or
aas
mov
clc
repz
mov
in
sbb
test
lcall
cwtl
sbb
decl
outsl
lea
fsubrp
pusha
pop
cmpb
inc
jmp
mov
cmp
xlat
movsl
xchg
popf
in
loop
nop
push
inc
inc
arpl
loop
lahf
mov
shll
jb
and
inc
fdivl
pop
imul
cmp
dec
add
test
sahf
arpl
mov
addr16
xchg
inc
jb
sbbl
sub
scas
sub
push
sub
repnz
pop
cld
loope
daa
std
push
xchg
sahf
sub
pop
dec
push
inc
sub
ret
pop
add
daa
mov
or
cmp
fcmovu
xor
xor
xchg
das
aam
mov
sbb
jb
shlb
push
pop
add
sbb
hlt
jp
and
cli
fcompl
mov
int
call
cmp
shll
enter
xchg
into
xor
aad
sbb
xchg
loopne
js
popf
imul
mov
push
cmpsl
lret
enter
xchg
pop
in
jnp
pop
inc
mov
js
pop
rcl
pop
shr
in
hlt
rcrl
mov
xorb
cmp
leave
push
jl
aam
lret
sarb
sbb
stos
inc
les
mov
fcomps
add
push
dec
outsl
push
cwtl
sahf
pop
and
shlb
add
test
jo
pop
lret
xor
xor
sbb
add
and
ret
shlb
movsl
ljmp
jge
sub
xor
lods
daa
xchg
mov
outsb
movsb
jl
mov
pop
mov
xorl
jno
adc
adc
mov
rcrb
add
mov
pushf
and
xchg
adc
gs
and
push
bound
xor
dec
and
out
rclb
push
imul
les
xchg
add
jno
test
int3
in
dec
jbe
hlt
mov
xchg
sub
jno
cmp
inc
xchg
call
mov
xor
fstpl
mov
mov
cmp
add
sarl
jge
push
pop
push
pop
das
cmp
jbe
fimuls
addb
pop
loopne
cmp
add
stos
or
dec
jb
mov
idiv
and
rcrl
flds
cmp
pusha
dec
adc
rolb
xchg
out
loop
mov
xor
repz
into
add
adc
pop
jp
ret
dec
jl
mov
mov
mov
xchg
mov
xor
test
xchg
fnstcw
jno
or
xor
jo
test
nop
pop
inc
pusha
or
cmp
pop
sbb
add
imul
call
jp
xchg
iret
into
push
stos
out
nop
xor
push
and
dec
stc
test
into
xor
es
xchg
ja
pop
adc
pop
aam
daa
mov
outsl
outsb
inc
jnp
int3
popf
jae
out
xchg
in
das
idiv
and
flds
rep
mov
mov
cmp
out
test
xrelease
outsb
push
dec
jmp
incb
dec
and
gs
push
push
out
or
popf
xor
lret
cltd
push
xor
push
rcrl
add
test
inc
pop
mov
sbb
jg
add
gs
aam
ja
dec
imul
fcompl
sub
pop
push
add
pushf
out
pusha
xchg
aam
fidivrs
dec
and
sarb
pop
popa
imul
add
pop
pop
insl
mov
popa
xor
ds
js
dec
pop
sub
mov
loope
mov
jmp
aas
jecxz
push
cmp
movsb
aas
mov
mov
push
cmp
xchg
imul
xor
push
push
sbb
mov
mov
cmp
addr16
cmc
jmp
xchg
in
insl
lds
jb
sub
cmp
insb
repz
test
or
shr
repz
add
dec
shrl
stc
xchg
dec
cmpsl
inc
xchg
lea
mov
gs
lcall
cld
pop
jbe
arpl
sub
mov
push
mov
mov
inc
pusha
test
data16
aaa
push
jg
or
shrb
pop
add
leave
into
out
lods
mov
mov
imul
cmp
and
xorl
loop
jno
or
jle
orl
xor
movsl
ja
cmp
push
scas
pusha
sti
push
rorl
in
mov
or
lahf
dec
imul
cltd
adc
fdivl
push
push
hlt
or
sarb
or
inc
sub
mov
inc
add
pusha
lea
sub
xchg
mov
sbb
test
dec
cmpb
ret
inc
gs
push
lock
adc
push
movb
pushf
sbb
or
rclb
jge
out
mov
loope,pn
pop
gs
mov
ja
xlat
sub
sbb
mov
mov
jno
inc
rorb
mov
mov
mov
sub
xchg
sub
std
test
adcl
std
fs
lods
daa
xor
xlat
cmp
xchg
aas
fcomps
popa
adc
inc
mov
pusha
xor
in
dec
in
jb
ds
popa
mov
xchg
cs
pusha
pop
and
push
pop
test
sub
punpcklwd
push
and
mov
cli
or
inc
sub
shl
sub
ret
sarl
and
add
in
sub
dec
xchg
sub
hlt
fiaddl
mov
mov
inc
sarb
inc
loope
add
sbb
sbb
stos
jbe
dec
dec
fwait
movsb
mov
push
xchg
sbb
sub
out
mov
or
jle
mov
mov
popa
sahf
fstpl
shrb
in
push
cmp
sti
sub
xor
aaa
dec
xchg
push
inc
mov
les
lods
pop
mov
add
fists
push
jl,pn
cltd
pushf
outsl
imul
into
sbbl
in
popl
icebp
jle
adc
out
fnstenv
icebp
std
cli
mov
rcr
into
mov
addr16
sbb
daa
inc
pop
mov
pop
sbb
push
aad
dec
xor
das
mov
mov
fst
cmpb
pop
insl
mov
add
xlat
popl
fcmove
out
cli
jmp
dec
scas
pop
lock
out
mov
shrb
jnp
lock
jge
test
leave
nop
out
pusha
aaa
lret
test
iret
and
xchg
add
lret
cmp
movsb
or
jno
push
loop
adc
or
sahf
clc
sarl
aam
ljmp
mov
push
sbb
in
testb
fs
lods
mov
call
and
popa
mov
int
sub
ljmp
sub
rol
sbb
inc
jo
aaa
xchg
aad
cwtl
lea
push
sub
lods
cmp
gs
divl
mov
outsl
movsl
rcrb
mov
mov
test
sub
pop
lods
mov
cmp
fwait
dec
mov
shlb
mov
pop
and
mov
pop
sbb
and
insb
in
fucomp
xchg
aam
and
roll
sbb
pop
pop
cmp
icebp
fsub
jge
sub
mov
out
jl
jmp
in
test
cmp
inc
jno
jmp
mov
sbb
add
lods
mov
clc
mov
lea
and
pop
inc
jo
cmp
mov
adc
rcll
movsb
xlat
aaa
cmp
push
xchg
jecxz
sub
or
inc
lea
pop
mov
stc
fistl
icebp
pop
xchg
das
mov
out
mov
sti
repnz
std
mov
in
inc
aas
leave
cmp
inc
repnz
xchg
xchg
rolb
test
pop
mov
adc
nop
in
cmp
ja
enter
frstor
dec
xor
cmp
leave
cmp
loop
push
xchg
fisubs
pushf
int3
arpl
addr16
mov
sahf
pop
stc
pcmpeqd
mov
cmpsl
clc
mov
mov
int3
mov
loopne
or
cltd
fbld
lods
js
ret
push
push
inc
enter
inc
mov
aaa
test
pop
loop
xchg
jae
test
or
lret
sub
cmp
mov
data16
or
mov
notl
mov
rcrl
rclb
dec
fs
xchg
test
iret
push
dec
inc
ljmp
adc
and
fcmovnbe
inc
fstpt
fs
clc
mov
int
icebp
mov
scas
lock
sbb
mov
fisubrs
movsl
fsubrl
xor
cmp
out
lcall
cmp
pop
xchg
sub
outsl
mov
xchg
inc
jo
xor
iret
xchg
aad
mov
lret
xor
or
xchg
cmp
popf
cmc
fcoml
out
aas
movsb
mov
pop
test
mov
xor
jnp
sbb
hlt
pop
or
xor
cmp
xlat
cmp
and
push
xchg
jb
addr16
enter
cmpsl
push
mov
cmp
xchg
jnp
sbb
push
mov
mull
jmp
push
mov
mov
jp
jno
xor
jnp
dec
stc
sbb
push
jecxz,pt
cmpl
test
scas
aaa
sub
jo
cmp
jno
jns
int
mov
inc
aam
imul
jae
cmpsb
cli
iret
jo
and
mov
jo
shll
gs
sbb
std
decb
cwtl
cwtl
fdivrp
add
pop
aas
fstl
and
add
push
inc
ret
fsubrl
inc
mov
xchg
cmp
icebp
stos
ja
loop
push
pushl
mov
lret
movsl
out
adc
xchg
mov
inc
inc
sbb
mov
xchg
xor
movsl
adcb
les
popa
iret
add
mov
xchg
or
mov
cltd
daa
pop
movl
sbb
repz
fists
cmp
jae
hlt
std
out
adc
sub
int3
push
cli
in
dec
and
pusha
ds
repz
xchg
sbb
mov
cmp
xor
mov
jae
out
lds
rcrl
xor
and
cmp
mov
into
iret
imul
into
lods
ss
mov
fisttpl
sub
mov
or
lods
out
mov
xchg
pop
out
cld
push
adc
cmpb
inc
cwtl
aas
out
mov
aam
or
in
mov
jg
sub
sub
fnsave
jb
aaa
stos
repz
push
push
sahf
std
xor
or
mov
push
sub
push
ret
sbb
dec
lea
sahf
lcall
mov
out
enter
xchg
adcl
adc
call
shld
dec
xor
push
sbb
jne
adc
push
and
movsb
jmp
jmp
repz
mov
das
into
ja
inc
xor
pusha
jns
jge
mov
addr16
iret
iret
sub
aaa
lcall
sbb
pushf
popa
outsl
xchg
imull
stc
es
push
loop
cmp
enterw
jb
inc
or
pop
stos
leave
mov
popa
or
outsl
adc
xchg
sbb
aaa
pop
mov
mov
push
xchg
stos
xor
fnsave
pop
fcmovbe
lods
or
fs
stos
dec
sub
xor
test
push
pop
push
test
inc
je
mov
fwait
and
adc
mov
push
nop
jle
xchg
mov
lods
xchg
adc
add
popf
je
pop
das
hlt
out
cld
xor
fwait
inc
push
sar
movnti
or
imul
dec
fdivr
push
sub
add
adc
xor
fisubl
inc
mov
push
addr16
leave
stc
jbe
xchg
xchg
add
insb
ljmp
ficomps
push
mov
mov
dec
ret
mov
lahf
xchg
es
or
mov
nop
xor
xor
fistps
cli
cmp
adc
or
ror
iret
loope
sub
add
cmp
dec
xor
xchg
test
lock
sbb
sbb
sub
fucomip
stos
or
mov
sarl
push
stos
popa
scas
pop
pop
push
add
cltd
outsl
jg
inc
fldt
jle
out
or
nop
aam
movsl
pop
mov
mov
mov
xor
sbb
incl
hlt
sbb
jmp
fmull
add
mov
and
aam
push
movsl
sub
pusha
push
push
in
pushl
mov
xor
cs
mov
cmc
mov
xor
das
dec
mov
cmp
in
enter
adc
sbb
lret
jae
lea
sahf
mov
cmp
popa
jae
pop
sub
xorb
scas
mov
idivb
insb
add
sbb
daa
push
testl
mov
movsl
add
sub
rcrl
dec
mov
iret
jecxz
add
sbb
mov
shrl
mov
scas
loopne
stos
jb
mov
mov
mov
mov
arpl
mov
sub
inc
out
pop
in
pop
hlt
vpopcntb
add
loopne
fs
pop
scas
jae
pop
push
or
popf
loop
subl
mov
addr16
cmp
sbb
movsl
popf
jecxz
push
in
lcall
push
call
add
leave
leave
adc
imul
sbb
add
xor
mov
cmp
decb
aaa
out
cmpsl
jo
test
push
mov
push
push
imul
jmp
jbe
mov
pop
sub
push
imul
mov
cmc
adc
repnz
or
inc
in
mov
stc
jne
mov
iret
xchg
mov
sub
daa
adc
xor
sbb
cld
xchg
xor
int3
cs
loopne
jecxz
sahf
fwait
adc
popf
daa
jecxz
and
sahf
iret
mov
xlat
push
pop
cmp
loop
inc
pop
std
es
jecxz
pop
dec
pusha
push
xchg
das
push
cmp
and
fcmovbe
xor
sbb
cmp
sarb
mov
dec
add
and
dec
pushf
ds
lds
mov
mov
mov
xor
into
sub
cmp
movsb
sbb
sbb
and
jg
repnz
lods
mov
mov
js
sbb
fcmove
inc
xchg
jmp
out
je
or
and
aam
outsb
jns
insl
pop
sbb
pop
xchg
xchg
sub
pop
out
and
daa
push
add
xor
xor
mov
out
lcall
arpl
cmc
iret
jo
hlt
iret
add
xor
movsl
mov
xlat
mov
mov
mov
out
insw
into
adc
adc
shrb
sbb
cmpsb
sbb
bound
xchg
pop
adc
lret
mov
pop
adc
imul
in
mov
sub
jo
lods
fcomps
test
xor
mov
adc
leave
enter
push
cwtl
pop
inc
out
fs
mov
mov
pusha
mov
or
mov
xchg
ret
pop
aam
scas
mov
inc
add
test
or
jnp
cld
mov
out
xchg
insb
mov
cld
fbstp
and
sbb
mov
add
mov
cmp
scas
add
fisubrs
dec
or
ljmp
pop
adc
test
loop
pop
mov
push
test
gs
rorl
and
push
stos
mov
inc
enter
loop
xchg
mov
aam
adc
add
sbb
mov
sahf
sbb
dec
dec
out
sar
pop
stc
popa
push
mov
loope
and
inc
int
stos
out
push
popa
clts
or
bound
inc
mov
sbb
xchg
and
jbe
xor
in
xor
xor
ja
sub
lods
xor
roll
call
and
shlb
push
jg
lret
aam
int3
jp,pn
ljmp
mov
jbe
xchg
mov
ljmp
add
pop
mov
dec
dec
lcall
jb
je
js
jae
popf
in
cwtl
and
sub
fiadds
mov
xchg
roll
shlb
mov
sahf
sahf
cmp
sbb
inc
mov
ss
iret
adc
cmp
pop
int3
pusha
mov
xchg
xchg
jecxz
dec
repz
cld
xor
scas
mov
push
and
mov
cli
mov
inc
sub
cmp
insb
sbb
push
aam
mov
mov
insb
dec
lahf
jmp
clc
lods
repz
insb
rcll
popf
add
divb
adc
aaa
pushl
jecxz
mov
cmp
mov
xchg
sbb
movsb
sub
push
sbb
sbb
movsl
xor
pop
daa
int
and
test
stos
mov
out
xchg
inc
in
push
mov
les
adc
lret
cmpsl
or
lods
aam
fistpl
scas
icebp
mov
mov
gs
mov
decl
xchg
je
mov
insl
rcrl
daa
mov
cmp
sbb
mov
mov
cmpsb
leave
pop
in
inc
bound
dec
jle
xor
mov
or
loopne
sahf
xlat
xor
push
dec
add
and
fists
cmp
cmpsb
hlt
pop
loop
fildl
arpl
fildll
stos
jmp
sbb
xor
mov
add
cmp
mov
mov
add
xchg
cmp
lods
std
xchg
xchg
sahf
sub
mov
popa
test
ljmp
xor
rcll
fists
ficoms
mov
mov
xchg
mov
xchg
push
add
and
push
sahf
subl
sahf
inc
push
pop
shlb
dec
push
imul
mov
enter
lods
sbbb
push
sbb
push
dec
sub
ss
test
push
xlat
les
sub
lock
nop
jmp
es
or
fdivrl
lahf
out
ds
jle
cmp
or
push
cmpsl
scas
dec
fdivrl
stc
insb
sub
xchg
add
movsb
add
jge
scas
repz
in
aaa
shlb
test
mov
in
or
out
mov
aas
mov
cmp
adc
or
add
adc
mov
add
ret
adc
cld
sub
or
push
xchg
fwait
xlat
test
ret
in
sti
dec
aam
xchg
enter
jns
push
imul
sar
lock
ss
test
xor
pop
or
cmpsb
jne
or
jne
aas
pop
mov
jns
lods
sbb
es
mov
mov
xchg
lea
mov
mov
out
jg
ret
aaa
cwtl
mov
inc
and
cmp
add
aas
add
jb
mov
adc
xor
sbb
lahf
pop
mov
cli
jmp
pmaxsw
mov
cmp
sti
dec
mov
xchg
aaa
push
add
xchg
jle
jmp
mov
and
inc
xchg
xchg
aam
in
sahf
aaa
arpl
clc
das
jns
xor
addl
incb
cli
jns
push
cmp
out
mov
test
dec
xchg
adcl
repnz
pop
add
pop
add
inc
ss
or
cwtl
outsb
sub
iret
xchg
ficompl
xor
cld
addr16
aad
movsl
repz
mov
mov
adc
stos
cs
adc
loop
jl
and
clc
orb
push
repz
call
pop
mov
xor
shll
push
dec
xchg
inc
shl
sub
push
int
mov
xor
mov
out
icebp
push
mov
test
pop
popa
sahf
loop
mov
jnp
push
lea
iret
jmp
push
jbe
push
adc
mov
xor
xlat
push
or
cmp
in
lcall
cwtl
and
testb
inc
jp
fcoms
enter
lods
insl
jo
inc
or
xor
cmp
dec
fs
fs
aad
push
int
jecxz
dec
popa
jo
popf
lea
jle
iret
sbb
loope
push
aam
psubb
daa
sub
xlat
xor
push
in
jp
das
mov
cmp
ss
cmp
cwtl
xchg
and
into
data16
fcmovnu
fldt
push
pop
pop
ljmp
pop
fistpll
movsb
cmp
sbb
loope
loop
cmp
add
inc
cmp
mov
push
in
lcall
pop
or
leave
gs
sbb
cld
mov
jo
in
adc
ret
js
xchg
cmp
pushf
fidivrs
pop
dec
or
mov
mov
pop
cmpb
and
push
jns
ljmp
mov
aam
int3
xchg
adc
mov
mov
fnclex
sbb
jnp
pop
fcomps
fsubrl
inc
xchg
das
sub
ds
cs
es
adc
or
inc
insl
pusha
pop
dec
das
jne
out
outsb
push
or
ficoms
lret
cld
push
inc
scas
rolb
in
mov
push
mov
subb
call
inc
mov
loopne
loop
pop
pushl
aad
mov
clc
push
adc
jge
inc
mov
mov
loop
cmc
pop
inc
ja
pop
xor
jmp
lcall
fimull
xchg
adc
mov
xlat
es
cmp
mov
mov
adc
ljmp
mov
imul
adc
imul
icebp
inc
mov
push
and
aaa
adc
addr16
xor
ror
add
pop
int3
inc
cmp
loope
sub
lahf
dec
icebp
in
loop
out
ficomps
dec
pop
rolb
sub
or
mov
fnstsw
push
mov
sbb
scas
mov
sub
gs
sub
fucomip
addr16
pusha
sbb
lods
cmp
std
imul
movsb
test
push
sbb
pop
mov
sahf
scas
loope
push
fnop
stos
ds
fidivrl
sbb
adc
pop
je
andb
sbb
sub
cmp
sbb
repz
dec
push
repz
xchg
sahf
fildl
lock
jae
sub
popa
inc
mov
pop
ficoms
sbb
ds
jno
int
outsl
stos
cwtl
fmul
mov
out
push
das
in
pop
mov
iret
in
rol
orl
dec
mov
stc
add
arpl
lods
mov
popa
fwait
popf
sub
lods
or
or
sub
push
lahf
leave
push
jbe
push
mov
cmp
stos
inc
in
jmp
add
repnz
xchg
arpl
jmp
cmp
orb
sarl
lahf
out
data16
out
out
mov
je
cmp
pop
jnp
pop
xchg
mov
cmp
push
dec
adc
out
cmpsb
mov
in
add
sbb
aam
or
pop
ss
and
adc
mov
lret
push
fwait
sbb
mov
popf
xchg
jo
mov
rcrb
into
xor
jge
sar
cmc
mov
jnp
push
mov
mov
sti
es
and
lock
out
js
idivl
out
inc
push
fchs
aas
fmuls
sbb
arpl
cli
into
lock
sbb
and
pop
movsl
fwait
clc
push
mov
pop
dec
repz
cmp
sbb
sub
sub
dec
imul
jle
cmp
repz
push
lahf
in
adc
js
repz
adc
xor
arpl
jmp
jge
xor
enter
push
sahf
rcrl
lods
sub
test
jae
mov
dec
xchg
sbb
jecxz
clc
sub
mov
in
ds
or
mov
mov
xchg
mov
test
push
xchg
aad
push
dec
lcall
lods
popa
push
dec
lods
loope
into
lahf
jbe
out
repz
bound
cmpl
and
cwtl
jo
cmp
ret
imul
push
mov
xlat
pop
loopne
ret
insb
jae
mov
xor
movsl
xor
inc
cmp
jne
xorl
rclb
or
mov
mov
mov
push
and
cmp
into
data16
arpl
stc
cmp
fmull
lea
push
push
inc
loopne
push
sbb
nop
jge
sbb
mov
cmp
xchg
imul
or
divb
push
mov
jge
into
pushf
rcll
ret
outsb
adc
std
mov
aas
pushf
repz
jo
sbb
push
mov
icebp
xchg
dec
push
lods
xor
test
mov
dec
jnp
in
jo
sub
mov
push
mov
das
and
push
xor
jns
pop
jne
call
shr
cltd
scas
jmp
test
js
shrl
nop
pop
cld
xor
cmp
and
jge
movmskps
xlat
out
fcmove
stos
lods
in
jns
in
dec
aas
mov
cwtl
cmp
dec
mov
scas
or
dec
dec
js
stc
mov
mov
fbld
lcall
jno
daa
out
mov
stc
xor
aad
mov
test
sub
xchg
sbb
incl
pop
or
fisubrs
and
cli
push
dec
mov
dec
mov
and
loopne
icebp
mov
aaa
popa
or
cmpsb
xchg
iret
repz
stos
xchg
and
sahf
jp
rcll
pop
push
mov
pop
pusha
push
xor
add
adc
mov
mov
mov
jae
adc
inc
aam
xor
sahf
pop
mov
cmp
jle
jl
push
sub
pop
inc
push
xor
jo
subb
xchg
jnp
icebp
and
int3
dec
roll
in
movsl
inc
mov
lret
xchg
push
xor
call
loope
cmc
jns
das
movsl
mov
inc
stos
mov
nop
test
adc
xchg
sub
pop
adc
mov
sub
out
outsl
cmp
std
std
mov
cli
fildl
ret
fwait
dec
push
cld
push
sahf
ja
sub
cmp
fs
cmp
jne
pop
fs
nop
test
lods
mov
mov
push
call
lds
jle
lds
je
icebp
inc
or
std
clc
adc
loope
sbbb
and
xchg
mov
test
shl
xor
negl
std
loopne
das
cmpsl
mov
scas
in
out
sti
adc
mov
cmc
mov
iret
aam
test
xor
loope
dec
and
push
or
les
nop
add
jmp
addps
scas
inc
cld
fiadds
aam
adc
xor
sbb
in
cmp
or
xor
push
mov
xchg
mov
es
ljmp
push
out
xchg
int3
pop
add
push
jle
mov
dec
sbb
stos
cmovnp
sub
pop
ret
or
jo
repz
movsb
and
mov
fldcw
push
mov
xchg
jns
rcll
cld
xchg
cmp
xchg
adc
or
lret
inc
pop
dec
and
xor
xchg
in
aas
ret
sahf
jnp
jle
push
dec
xor
cmp
pop
popa
mov
ljmp
jne
cwtl
xlat
lods
push
mov
ret
inc
movsl
pop
lret
push
dec
dec
add
pop
inc
pop
xchg
lock
in
xchg
gs
repnz
pop
std
outsb
dec
gs
add
outsl
scas
jg
fcmovu
and
testb
ret
push
aam
mov
call
mov
in
push
imul
notl
std
fstl
pop
stos
dec
lret
xchg
xchg
xchg
jo
ficompl
add
test
inc
or
fsubl
test
dec
mov
in
cmp
xorb
imul
ljmp
push
in
ljmp
jp
sti
ss
jge
ret
cmp
out
inc
mov
cmp
adc
add
and
or
jo
adcl
push
mov
sub
sarb
rclb
and
jl
ret
xchg
loopne
lcall
push
pop
test
cmp
mov
call
mov
cmp
add
dec
pop
sub
xchg
push
cmc
sbb
mov
scas
cmc
pop
cs
push
pop
fwait
xchg
fstps
dec
sub
inc
movsl
mov
fstpl
push
dec
inc
add
ljmp
cltd
pop
inc
out
test
iret
and
iret
stos
mov
inc
mov
inc
and
jno
aam
sbb
lahf
push
mov
inc
pop
je
push
and
in
hlt
xchg
and
out
hlt
nop
test
js
sbb
xor
add
xor
jmp
or
sbb
ja
fistpll
mov
cmp
xor
add
les
out
cltd
push
mov
ljmp
mov
jb
mov
xchg
sbb
mov
xor
and
inc
imul
xchg
add
in
push
xor
shlb
mov
pop
rclb
xor
decl
clc
cmp
xlat
jae
add
je
fwait
imulb
or
adc
adc
xchg
push
lea
loope
add
or
jne
inc
or
das
xor
out
dec
sub
imulb
test
les
jmp
xor
cmp
or
cld
pushf
lods
jge
push
push
enter
add
fs
scas
adc
cmp
fwait
sbb
aam
arpl
lock
ds
mov
fdivr
bound
xchg
std
scas
adc
mov
and
xchg
add
inc
jmp
out
push
sbb
jg
mov
xor
daa
or
arpl
push
lcall
add
std
xor
aam
test
hlt
in
push
std
jmp
add
mov
scas
outsb
jbe
cmp
sti
push
jg
stc
je
xchg
mov
mov
cmp
ja
les
mov
shrl
push
sub
jns
mov
and
pop
xor
dec
jecxz
jno
dec
inc
jo
std
or
mov
aad
dec
cmc
dec
repz
pusha
popf
pop
int
sbb
stos
jne
popa
adc
xchg
add
fwait
dec
cs
lods
pop
jecxz
lret
sub
or
cli
jnp
loope
or
sub
push
cwtl
sti
fs
mov
or
pop
mov
inc
mov
adc
sbb
mov
mov
mov
push
cmp
adc
jae
pop
pushf
imul
mov
js
push
cmp
mov
add
enter
dec
jl
xchg
inc
pushf
fwait
sbb
jp
sti
rol
add
cmp
cli
mov
es
sbb
mov
out
stc
imul
inc
push
mov
outsb
pop
test
daa
fsubs
rorl
test
mov
insb
cmp
lea
add
int
fldl
outsl
fsub
mov
and
call
mov
mov
inc
mov
in
add
hlt
sub
fdivrl
rclb
ds
add
pop
push
and
stos
iret
jp
xchg
cmpsb
inc
mov
cmp
add
dec
loop
adc
loop
xor
lret
in
imul
or
mov
mov
fst
leave
inc
mov
mov
add
jmp
mov
dec
into
mov
test
pop
shl
imul
push
stc
shl
push
xor
mov
jl
cs
fadd
and
enter
fnstsw
push
loopne
fldenv
ljmp
or
xchg
stc
pop
cltd
mov
frstor
push
mov
sbb
push
mov
pop
rcrb
mov
sub
mov
push
sbb
enter
or
outsl
sub
test
mov
xchg
out
in
push
scas
ror
imul
mov
inc
push
jg
add
cmp
out
xchg
in
jle
push
int3
fisubs
int3
inc
adc
adc
jle,pt
aas
jge
movsb
push
out
popf
stc
enter
lods
pop
xlat
arpl
adc
push
jnp
and
repnz
in
loope
pusha
push
into
and
pop
xchg
push
sub
mov
mov
mov
in
xor
pop
pop
sahf
popa
inc
push
xor
rclb
dec
shll
jbe
and
mov
mov
test
and
stc
dec
repz
and
or
sbb
mov
mov
ja
repnz
xchg
lret
xor
insl
pop
or
in
xchg
push
bound
in
sub
xchg
push
add
xor
in
mov
stc
add
or
inc
nop
or
add
sbb
es
xlat
decl
in
repz
sub
mov
mov
or
leave
xchg
mov
push
adc
mov
sbb
inc
out
fistpl
shl
fnstenv
mov
pushf
add
fmull
movsl
fildl
sub
add
ficomps
daa
test
adc
jae
push
jbe
les
stos
and
or
sbb
and
inc
lcall
jnp
sub
xor
lods
xchg
lock
inc
divb
mov
syscall
scas
mov
popf
push
popa
jae
sub
call
sbb
shrl
xchg
inc
ss
adc
out
popa
dec
sub
push
sub
cmc
addr16
mov
dec
mov
sahf
and
cs
int3
rcrb
sub
sti
jbe
testl
mov
jo
dec
lea
adc
sbbl
sub
lret
jb
xor
and
repnz
fistps
mov
in
fcomip
mov
cmp
enter
orl
lret
outsl
inc
mov
fisubrs
rcl
xchg
lods
fst
cmpsl
lods
push
mov
push
pop
mov
add
and
add
scas
and
mov
jl
push
fbld
popa
mov
fs
or
xor
pop
mov
std
push
xchg
pop
sahf
shrb
cmc
cmp
jo
cld
cli
and
hlt
fadd
movsl
mov
daa
sub
xor
dec
sub
jg
jne
test
aad
loope
sarl
inc
xchg
jmp
test
outsb
shll
fisttpll
iret
lcall
outsb
loope
push
xor
loope
mov
adcl
cltd
mov
stc
and
js
sub
cmp
mov
cmpsl
xor
xchg
bound
enter
repz
sub
shll
subb
mov
in
jl
jns
cmc
dec
std
fistpll
sub
shrb
sub
sbb
mov
bound
les
andb
call
ja
test
sub
mov
test
movsb
jb
jae
notl
in
adc
mov
test
out
je
dec
test
out
hlt
mov
sahf
xchg
add
ja
inc
cmpl
clc
imul
pop
out
inc
jne
xchg
movsb
sbb
pop
ds
adc
lret
int
aam
xchg
pop
mov
aas
push
je
or
ds
sub
les
fs
sub
push
jnp
js
add
pop
call
lock
mov
shl
sbb
arpl
cmpsl
inc
jg
mov
jo
cli
daa
dec
mov
sub
pusha
and
add
dec
mov
xchg
pop
sub
popa
aam
pop
xor
ror
and
ret
mov
lcall
mov
test
mov
dec
mov
xchg
aad
iret
jno
push
aaa
lret
mov
in
cmp
push
ret
fmul
mov
xchg
jecxz
push
bound
or
adc
xchg
std
cmp
mov
in
push
add
mov
mov
sbb
pop
lock
lcall
test
xor
xchg
mov
ret
cmp
sub
pop
ja
cmpsl
test
inc
shl
fwait
loopne
mov
mov
mov
mov
repz
sub
adc
shll
adc
jp
movsl
roll
pop
jo
xor
test
xor
sbb
and
sbb
xor
mov
das
adc
mov
mov
lea
dec
data16
inc
cwtl
daa
dec
loope
jmp
dec
sub
sub
mov
jmp
jno
cmp
int
jp
das
adc
xchg
mov
in
sbbb
arpl
push
cmp
fiaddl
ret
fistl
test
outsl
lock
pop
pop
sbb
adc
inc
jge
cli
ljmp
fldcw
repnz
aaa
jmp
imul
pop
fcmove
popf
cmp
jns
lods
sbb
pushf
cli
sub
lcall
data16
inc
dec
inc
ds
scas
mov
push
int3
dec
and
mov
loopne
outsl
xchg
ss
sti
icebp
pop
lret
add
cs
pop
hlt
fwait
test
lret
inc
outsb
scas
sti
dec
adc
enter
rolb
sbb
ret
addb
xor
fsubrp
scas
loop
mov
ret
roll
add
xchg
cmp
add
cmp
xchg
dec
pop
cmp
fnstcw
cwtl
lret
pushf
add
test
out
insb
shr
inc
dec
and
outsl
mov
pushf
cmp
cmc
push
jge
cmpsb
adc
movsb
mov
cli
fcmovb
out
mov
xor
jnp
jne
mov
aaa
push
pusha
push
cmp
cmpsb
aam
adc
call
cmpsl
push
clc
push
nop
dec
inc
loop
movsl
adc
inc
add
dec
add
icebp
addr16
cmpsb
jne
lahf
inc
mov
pop
xchg
xchg
icebp
loope
jne
in
test
das
pop
push
stos
pop
aam
and
mov
mov
xchg
cmpsl
gs
add
mov
ss
jo
rcrb
or
stos
pop
in
xlat
cmpl
adc
int3
and
pop
or
loopne
mov
xor
inc
and
jo
daa
bound
mov
and
dec
lods
aaa
add
xchg
add
lods
jae
sbb
stc
xor
dec
dec
lret
pusha
ret
cmp
cld
sub
inc
or
dec
ss
inc
pop
rcrl
dec
das
or
int
jns
mov
pop
clc
rcll
push
inc
std
push
sar
int
push
pop
jge
scas
add
pushf
jle
sbb
ss
iret
popa
cmp
lods
jbe
nop
jmp
scas
push
fcoml
jmp
sahf
sbb
add
mov
mov
fcomps
sub
mov
or
mov
or
cmp
stc
jecxz
fcmovnu
scas
mov
jmp
xor
mov
inc
push
cmp
lods
outsl
add
lret
xor
gs
or
daa
mov
ret
xchg
xchg
mov
and
mov
rcrb
repz
rorl
arpl
mov
sbb
out
leave
insb
cs
sub
test
jecxz
cmpsb
lcall
jp
fnclex
or
mov
adc
scas
and
fwait
daa
insb
jmp
or
ret
clc
out
dec
jmp
stos
cmpsb
test
insl
popa
xor
addr16
xor
arpl
jmp
cmp
xlat
adc
in
in
ds
and
pop
ss
out
mov
mov
in
cmp
sub
pop
xchg
out
fs
xchg
add
xchg
cwtl
int3
cwtl
cmp
scas
add
aaa
pop
lret
cmc
lock
sti
mov
mov
data16
shll
call
fisubl
scas
divl
mov
fsubl
insl
sub
jp
into
xchg
cli
daa
insl
mov
lds
jns
fadd
add
xor
ret
adc
cmp
arpl
icebp
mov
pop
mov
aas
jns
cmp
mov
jne
divl
mov
inc
sbb
xor
sub
stc
pushf
hlt
scas
dec
xor
and
adc
add
xor
mov
inc
push
mov
add
xor
add
mov
mov
repz
loopne
pop
insb
sahf
fucomp
bound
jne
push
or
popf
dec
cmp
or
hlt
jb
dec
dec
cmpsb
test
pop
push
rclb
sbb
pop
es
rorl
add
les
pushf
aas
adc
movsl
jno
ja
ja
xor
dec
sbb
add
inc
fwait
popf
jo
mov
push
inc
xchg
sbb
int3
sub
shl
in
out
pusha
and
or
imul
mov
and
es
ret
test
sahf
adc
mov
lahf
out
addr16
cli
jle
and
loopne
inc
or
andl
or
or
sub
fcomps
xchg
add
outsl
popa
xchg
es
addr16
scas
int3
lret
pop
pop
testb
sbbb
nop
adc
xor
fs
xchg
pop
and
dec
aam
hlt
outsb
stos
jnp
lods
push
dec
subb
push
jge
and
cld
mov
xlat
into
addr16
fs
cwtl
mov
shr
ja
or
enter
mov
push
mov
mov
stc
and
hlt
cs
inc
js
shl
sahf
push
dec
fstp
pop
xchg
bound
test
add
mov
outsl
cltd
cmpsb
cmc
sub
mov
sbbb
loop
xchg
and
mov
sahf
or
push
rol
arpl
inc
aam
dec
call
fwait
dec
xor
popf
or
xor
aas
popa
dec
loop
xchg
arpl
test
lods
mov
jecxz
mov
mov
repnz
gs
jp
bound
sub
loopne
aas
inc
cli
or
shll
jno
xor
inc
push
inc
push
mov
mov
xor
xchg
push
pop
sahf
push
or
push
mov
push
out
add
hlt
mov
popf
jns
les
mov
addr16
repnz
mov
inc
gs
add
cmp
push
shrl
lock
int
xchg
sbb
xchg
xor
outsb
lret
and
push
je
std
lret
inc
jno
mov
loop
enter
out
les
das
add
mov
adc
out
or
jae
rol
dec
add
roll
xor
ficompl
lods
clc
mov
loope
cs
roll
push
and
inc
jge
push
test
pop
and
das
in
push
adc
das
sbb
add
mov
or
push
xchg
mov
cli
addr16
fnclex
aad
add
mov
clc
lock
out
xchg
aad
cmp
mov
sub
fistps
ret
add
push
pusha
fcmovnbe
xchg
dec
pop
mov
dec
data16
sbb
mov
je
lds
addr16
mov
mov
pop
repz
repnz
jmp
daa
inc
sar
pop
or
cwtl
mov
popa
push
out
mov
push
inc
sub
sub
mov
in
cld
xor
xchg
and
push
adc
lret
cmp
mov
xor
movsl
push
sbb
inc
in
lods
shll
repz
movsb
push
adc
and
sub
sub
je
int
mov
pop
daa
xchg
roll
inc
or
out
sahf
add
in
cmpsb
dec
fwait
mov
push
lods
jbe
fwait
in
ret
aas
sahf
mov
dec
and
rolb
aaa
popa
inc
aad
das
pop
mov
inc
stc
popa
addl
gs
cmp
enter
ds
loop
cld
cli
dec
fidivs
mov
or
mov
loopne
mov
lret
pushf
cwtl
jb
mov
pop
fcoml
add
icebp
mov
push
popl
repz
xchg
pop
aad
scas
push
mov
pop
mov
mov
and
adc
push
and
adc
popa
ficoms
sbb
mov
push
sub
add
lret
pop
outsb
xchg
push
lock
mov
jbe
sub
ss
ss
ret
mov
and
in
pushf
clc
adc
sbb
lods
lret
mov
and
popf
repnz
sub
call
lcall
insb
sbb
movsb
insb
cmp
inc
mov
into
xchg
push
fdivl
push
lds
mov
or
mov
xchg
cmpsl
mov
jno
in
jae
lret
nop
in
mov
popf
lret
add
or
ss
fldenv
rol
jg
aas
push
push
ret
jnp
cld
in
int3
mov
mov
inc
and
add
lds
jle
pop
adc
mov
hlt
std
cmc
cmp
mov
cmp
mov
fdiv
dec
roll
jg
add
fsubl
lahf
cmp
mov
jl
loopne
call
xchg
inc
mov
scas
enterw
rcll
push
push
push
test
pushf
cmp
out
in
xor
xchg
pop
addr16
add
cld
test
xchg
dec
sub
mov
mov
std
int3
sub
stos
inc
push
mov
xchg
sbb
popl
popa
cmp
dec
inc
cld
stos
test
dec
add
int
xchg
mov
pusha
pusha
xchg
mov
dec
jge
or
xor
fwait
sub
push
lret
push
shlb
jno
sub
pop
stos
pop
dec
loopne
sti
add
fwait
jbe
dec
in
clc
inc
mov
pop
sbb
fwait
mov
mov
adc
leave
test
xlat
mov
fcomi
mov
popa
xchg
mov
inc
sub
popa
ret
cmp
mov
scas
xlat
mov
or
or
gs
cltd
push
test
inc
cld
sub
mov
cmp
in
pop
lods
adc
nop
aam
cmp
xor
fidivrs
rcrl
scas
sarl
dec
stc
ret
sbb
cmp
and
add
fdivrl
call
loop
adc
bnd
mov
aaa
mov
cmpsl
out
es
pop
out
imul
pop
je
or
repz
leave
mov
jnp
jns
inc
dec
jns
stos
push
pop
gs
mov
dec
lret
sub
push
popa
xor
adc
cli
in
add
pop
movsb
imul
test
lock
pop
jb
mov
sub
mov
fimull
fsubs
mov
movsl
sbb
mov
cmp
addr16
push
pop
fsub
lahf
add
mov
fs
dec
sbb
out
mov
fs
dec
out
mov
inc
pop
adcl
xchg
je
dec
leave
cmpsb
aaa
pop
hlt
xor
jns
jg
lret
adcb
std
addb
stos
movsb
pushf
addr16
lds
mov
xchg
push
xor
stos
sub
jle
mov
push
fstl
mov
pop
pop
arpl
enter
jmp
adc
jl
hlt
jnp
xor
cmp
push
in
icebp
addb
fmul
mov
dec
xlat
sub
insl
ds
add
sub
mov
movsl
test
sbb
dec
out
cmp
cmp
jns
movl
cmp
and
dec
orl
inc
pop
out
jp
cwtl
outsl
cmp
push
cmp
mov
iret
daa
or
mov
jbe
inc
push
push
mov
add
data16
xor
xchg
flds
insl
out
pop
test
mov
cmp
mov
xor
mov
dec
lds
pop
es
gs
cwtl
subb
xor
shr
pop
cmp
xor
adc
jnp
mov
adc
mov
jmp
and
sub
and
jecxz
jo
std
outsb
xchg
and
cmpsb
sub
imul
stos
es
mov
sti
nop
lods
shl
cmp
fistpll
push
fcomip
je
inc
ja
mov
or
add
mov
mov
adc
dec
ret
lret
inc
pushf
daa
cli
sub
xchg
shll
fcomp
frstor
sub
cmp
jo
mov
hlt
clc
sub
cmpsb
ljmp
jp
xchg
dec
fidivl
adc
ja
icebp
in
insb
or
add
jge
aam
aad
lds
xor
jb
lea
sahf
mulb
pop
icebp
fsubr
inc
notl
sbb
add
add
xor
xchg
cli
lods
jecxz
arpl
lahf
addl
out
es
lock
jp
call
xchg
icebp
mov
adc
sahf
lock
popf
dec
mov
sbb
pop
mov
mov
ffreep
lock
dec
out
jnp
jmp
daa
fstl
cwtl
orl
push
iret
dec
in
push
jae
add
mov
jnp
fwait
or
xchg
inc
jle
loopne
mull
and
pushf
mov
xor
push
pop
add
dec
adc
jl
cld
aam
scas
sub
out
add
mov
inc
shll
imulb
les
and
push
lods
cltd
jl
idivb
add
jge
popl
mov
mov
mov
idivl
lret
ss
lds
push
sbb
or
sub
sahf
xchg
jae
insb
fisubs
jge
loopne
roll
jp
mov
push
addb
dec
aad
jbe
xor
or
mov
push
in
lret
lcall
mov
outsl
push
aad
push
mov
jle
loop
test
dec
mov
clc
adc
daa
adc
cmp
lods
mov
sbb
insl
mov
push
push
and
push
in
jnp
mov
xchg
pop
cmp
filds
pop
jge
mov
adc
push
adcb
iret
push
add
lods
cmp
push
pop
ja
sub
stos
push
stc
push
lret
or
mov
arpl
stc
cli
in
sar
outsl
lea
mov
mov
sbb
stc
nop
pop
cvtps2pd
mov
cmpsl
jmp
fdiv
jbe
xor
in
xchg
push
mov
sub
jge
pop
push
test
pop
test
add
mov
idivb
decb
mov
jns
push
rolb
xor
call
push
cmp
outsl
ds
clc
pop
push
aad
das
daa
jecxz
jo
push
mov
pop
cmpsb
in
fnstsw
pop
shrb
aaa
fbstp
stos
addb
sub
data16
sub
xlat
int
adc
push
cs
sub
gs
inc
add
jo
adc
fs
addr16
xchg
pop
insb
push
pop
cld
insl
jg
xchg
addr16
dec
mov
adc
mov
adc
xorb
sub
pushf
pop
jg
inc
xchg
sarl
loop
rorb
xor
pop
lock
sub
aaa
shrb
cmpsb
push
aam
cmp
cld
xor
fsubr
sub
mov
ret
jl
loop
scas
dec
inc
divb
sti
iret
add
mov
and
out
jmp
enter
sahf
aaa
cmp
inc
rorb
mov
or
int3
je
add
add
and
or
push
inc
mov
dec
mov
inc
sbb
popa
enter
add
mov
lock
sbb
push
pop
push
loope
fptan
jg
cmp
sbb
cmpsb
outsl
xor
jp
cli
jp
cmp
xor
mov
jmp
or
cmpsb
push
jl
dec
mov
cmp
mov
add
pop
pop
dec
movsl
dec
clc
xchg
push
sub
jae
jecxz
xlat
push
shrb
loope
cmp
mov
pop
pushf
hlt
dec
xor
dec
outsb
push
scas
les
sti
mov
or
in
shrl
mov
cltd
scas
nop
or
ret
mov
fimull
or
movsl
or
cmpsb
cmp
sbb
jno
addr16
mov
out
sub
push
mov
xchg
aad
sub
push
and
mov
cmp
push
or
ljmp
pop
jnp
popf
arpl
xchg
fisubrs
pop
mov
mov
fmulp
push
xchg
out
test
dec
mov
repz
inc
pop
fimuls
cmp
popa
scas
repnz
pop
fiadds
pop
ljmp
test
aam
add
cmp
add
negb
push
pop
cmp
mov
add
paddusb
es
mov
pop
cltd
movsl
adc
adc
leave
mov
jae
fistps
int3
ret
ljmp
jmp
adc
cmp
xchg
js
imul
mov
popa
sub
inc
movsb
pop
push
jg
imul
and
test
mov
pop
xchg
xchg
cmp
out
lds
add
xor
lods
inc
movsl
lcall
jb
mov
pop
std
pop
sub
fdivl
xchg
pop
sarb
dec
int3
cwtl
and
jg
lods
mov
and
mov
test
mov
cmp
mov
mov
loop
lret
dec
mov
sub
and
mov
dec
dec
fwait
mov
lahf
test
fwait
loopne
loop
fcom
bound
jecxz
in
cmp
dec
mov
push
dec
mov
gs
stos
pop
pushf
lret
mov
push
mov
inc
das
loope
lret
fsubrs
in
flds
and
ffreep
out
les
push
cmpsl
sbb
test
es
xor
mov
rcl
pop
lret
scas
daa
pushf
sti
sahf
addb
xchg
jg
xor
cmp
fs
xchg
mov
rcrb
ret
or
pop
int3
pop
mov
movsb
lahf
sub
pushf
xor
adc
test
inc
fdivr
orl
repz
and
outsb
cmp
nop
and
out
ret
loop
loope
jo
adc
jge
mov
test
clc
dec
iret
mov
inc
movsb
ss
sbb
xor
scas
add
clc
pop
loop
push
stos
xor
orl
stc
mov
cs
dec
fistps
mov
add
pop
out
push
jp
je
mov
lods
mov
cmp
fwait
jbe
shlb
out
ja
inc
shlb
lds
aas
cmpsb
std
aas
mov
lahf
movsb
push
lahf
cmpsl
loope
xchg
lods
xor
movsl
leave
or
cmp
loope
inc
loopne
aad
aas
add
dec
aad
mov
mov
bound
inc
xchg
orl
xor
xchg
push
aas
xor
daa
mov
pop
stc
lret
pop
mov
sub
call
ret
subl
pop
xchg
pusha
fistps
xchg
out
jbe
mov
push
jecxz
je
das
cwtl
leavew
mov
mov
cmp
jne
mov
pop
or
cmp
fists
xor
adc
popf
push
bound
pop
push
push
xor
out
loopne
push
lds
scas
cmpsb
nop
xchg
sbb
into
call
xor
mov
das
dec
sub
ljmp
call
out
and
test
lods
les
push
xchg
and
je
xor
rcrl
mov
dec
mov
jmp
sub
add
mov
and
inc
jb
mov
shlb
ret
rorb
adc
xchg
mov
mov
and
das
adc
dec
xor
fisubl
or
jns
mov
mov
ret
cmp
test
sub
arpl
or
pusha
sub
ds
sub
lcall
out
aam
movsb
mov
jmp
jle
outsl
jl
cmp
cld
int
sub
test
jmp
dec
jbe
shr
or
or
sub
nop
xchg
jecxz
imul
mov
or
pop
pop
pop
ror
push
jle
push
add
dec
shl
inc
add
movb
std
cs
jmp
pop
mov
in
repz
in
gs
out
divb
xchg
jno
sahf
and
pushf
lret
loope
arpl
mov
roll
xlat
add
jg
xor
nop
arpl
lds
mov
lret
cmpl
movsb
arpl
mov
cli
int
xchg
dec
aam
inc
test
jp
int3
or
inc
out
ret
lods
push
push
arpl
cmp
cs
push
es
imul
push
mov
pop
fimull
je
push
or
das
or
xor
fimull
sub
adc
ja
jno
or
repz
int
stos
xchg
cmc
xchg
clc
stos
mov
in
lock
cmpsb
lahf
adc
adcb
cmp
pop
in
add
imul
or
mov
hlt
mov
mov
or
movsl
mov
loopne
or
pop
jbe
or
std
ja
pushf
call
dec
xor
mov
push
and
push
pop
int
sahf
das
lret
std
jl
dec
imul
fmull
and
insl
mov
fildl
mov
sub
lahf
mov
movsb
shl
push
adc
add
mov
nop
inc
xor
ficomps
scas
subb
sub
ja
fnstcw
lods
dec
scas
push
mov
pop
fucomip
xor
gs
adc
popa
mov
cwtl
dec
dec
add
jbe
cmp
push
aaa
mov
dec
xchg
pop
fimull
inc
popa
int3
mov
nop
xchg
repnz
and
adc
aaa
stos
cmpsb
push
cwtl
push
inc
lcall
adc
jno
sbb
inc
imul
sub
xchg
or
jp
inc
xor
xor
arpl
xchg
jge
adc
or
mov
xchg
inc
popa
lea
mov
enter
ret
mov
pop
lods
push
mov
das
sahf
iret
push
icebp
stos
add
push
fistps
fiadds
ret
xor
loopne
pop
xor
ret
stos
adc
xchg
push
mov
xchg
mov
jo
mov
aaa
inc
adc
inc
push
roll
mov
outsl
rcrb
cmpb
mov
xor
cmc
hlt
fcmovbe
mov
cld
push
xor
pushf
lea
pop
xchg
and
xchg
out
cltd
mov
push
in
jns
lret
fsub
rol
lahf
push
test
loop
mov
ljmp
daa
mov
fwait
sbb
loopne
and
or
jle
adc
push
mov
sub
pop
or
mov
test
add
lret
std
inc
test
add
mov
dec
mov
adc
sbb
dec
repz
mov
pop
shrb
scas
add
xor
cmp
inc
push
add
movsl
insb
hlt
mov
inc
scas
shrl
sahf
mov
and
popa
adc
fnstsw
and
push
xchg
sub
jo
mov
jns
into
mov
daa
test
sti
xchg
or
cmp
add
mov
xor
addl
in
or
mov
mov
cmp
sbb
dec
push
ljmp
mov
lss
jecxz
or
xchg
add
ss
dec
mov
inc
in
shl
xor
call
dec
fnstsw
scas
shll
jle
iret
movsb
cmp
mov
dec
je
mov
lock
lahf
xor
cmpsb
add
lret
cmc
ficoms
cli
inc
and
or
ss
mov
xchg
movsb
cmp
cmp
or
fisttps
jns
fistl
test
clc
pop
fstpt
cli
insb
lea
mov
ror
ja
and
inc
mov
push
ja
rolb
sub
imul
nop
stos
push
xchg
or
shrl
mov
xor
xor
ficoms
sub
mov
das
jne
jl
push
fwait
cmp
test
push
pop
fstpl
jl
call
add
insl
std
sub
test
xor
dec
mov
out
ljmp
pop
icebp
idiv
sbb
aad
pop
cwtl
into
cwtl
push
lret
mov
or
rcll
push
pop
jecxz
inc
ja
fisubl
and
mov
scas
leave
mov
outsb
sbb
in
add
and
mov
scas
sbb
jmp
pop
adc
inc
mov
xor
inc
pop
mov
sub
xchg
std
icebp
dec
and
dec
mov
adc
jmp
ret
scas
aaa
sbb
lcall
movl
xor
in
dec
push
call
push
push
pop
mov
add
pop
jge
pop
dec
mov
dec
in
push
test
sti
push
insl
gs
xor
and
ret
cmp
mull
push
lds
aaa
ret
mov
push
mov
pop
insb
rcrb
test
mov
cmpsb
add
ror
cld
arpl
and
jecxz
fwait
stos
push
rcll
lds
add
jnp
pop
adc
push
ljmp
push
ficoms
dec
add
je
call
repz
push
dec
nop
aad
test
pop
fwait
daa
in
out
fimull
lret
jno
lcall
pushf
out
mov
jo
and
and
xchg
dec
enter
xchg
test
mov
or
std
mov
jno
inc
sti
fisubs
test
pop
es
std
add
rolb
pop
dec
icebp
add
out
cmp
ret
dec
fwait
jb
jg
xor
mov
xchg
inc
rcrl
push
mov
sbbb
inc
ret
xchg
push
sahf
inc
rol
mov
adc
push
inc
out
cmp
jne
stos
pushw
add
sbb
lods
adc
mov
fsubr
jg
xchg
push
int
in
testl
inc
clc
addr16
cld
cwtl
xchg
adc
lahf
dec
sub
dec
es
ljmp
jp
add
lahf
mov
pop
mov
mov
push
inc
adc
sbb
dec
loopne
push
fidivl
xor
into
or
jnp
imul
in
xchg
xchg
and
arpl
out
mov
xlat
call
mov
xchg
jno
mull
insb
loopne
mov
jecxz
ja
pop
push
insl
fcoml
popf
movsb
or
sbbl
push
insl
fs
xchg
mov
sub
icebp
stos
adc
fsubrs
mov
clc
enter
push
and
stc
mov
pusha
pop
adc
movsl
in
lret
icebp
or
xor
jae
sub
pop
mov
cmp
mov
arpl
mov
js
mov
pmaxub
xor
pushf
sub
call
pop
gs
mov
jae
dec
add
mov
dec
inc
in
daa
inc
push
jecxz
hlt
jo
mov
repnz
push
dec
inc
out
mov
push
and
hlt
stc
lcall
lcall
inc
int
pop
pop
stos
shl
mov
repnz
pusha
movsb
ljmp
mov
jecxz
les
xchg
adc
fnsave
cmp
mov
mov
mov
movsl
dec
adc
inc
jno
push
mov
mov
push
and
xlat
int3
or
testl
mov
lahf
shll
rol
xchg
mov
xchg
push
xor
xchg
mov
pop
popf
sbb
popa
enter
imul
repnz
std
fcmovbe
aas
enter
scas
or
pop
or
push
jo
cmp
cmp
xlat
and
shlb
mov
aam
add
lret
adc
subb
dec
xchg
outsb
sub
xchg
pushl
out
das
shrb
push
dec
incb
add
dec
and
pop
lods
xchg
in
ret
push
push
fwait
in
aam
mov
pop
mov
lds
pop
rorb
pop
bound
lret
mov
and
add
push
stos
add
test
lods
jge
repnz
out
jg
pop
adc
xchg
mov
mov
cmp
pop
jle
add
cmp
nop
in
or
testb
mov
or
push
or
jnp
and
xchg
or
fildl
xchg
stos
pushl
inc
dec
or
jb
xchg
inc
or
dec
gs
mov
jmp
arpl
cli
scas
push
sbb
fdivp
push
xchg
dec
stc
fnsave
jp
lea
mov
adc
shr
pop
or
push
fisubrl
popa
push
mov
fbld
dec
aas
out
mov
adc
lsl
or
movsl
adc
cld
cwtl
adc
call
pop
fwait
xchg
das
popa
stos
sub
inc
sub
add
push
enter
xor
cmp
or
or
xor
stos
and
loopne
and
roll
mov
rclb
cmpsb
ficompl
or
int3
sahf
pushf
mov
and
nop
sub
out
mov
pop
lea
and
sbb
movsl
adcb
inc
mov
mov
jg
cs
mov
mov
cmp
pop
aad
sub
mov
lods
adc
xchg
fdivs
cmp
cwtl
scas
fcmovne
or
inc
clc
rcrb
dec
jo
mov
pop
push
mov
popf
jo
xchg
push
ficomps
stc
push
ljmp
jmp
mov
imul
movsl
push
loop
mov
stos
shl
sbbl
mov
stos
or
pushf
lret
fidivl
test
xchg
jg
stos
xchg
xlat
loope
jns
jbe
or
jmp
xor
sbbb
add
xor
mov
add
ja
cltd
sarb
fadd
sbb
mov
out
sub
push
ret
scas
in
jl
jnp
leave
xchg
call
ffree
bound
xchg
or
outsb
xchg
push
iret
repz
popf
sub
or
push
repz
xchg
and
fs
jp
push
sub
or
mov
mov
js,pn
xor
pop
mov
sti
daa
jb
dec
rolb
cmp
sub
out
mov
sub
movsl
into
push
cli
ret
lret
mov
arpl
xchg
and
adc
add
cmc
xchg
rorl
aas
fwait
mov
sub
inc
dec
push
push
cltd
repz
or
sub
not
enter
ficoms
sar
jmp
test
mov
mov
add
sbb
pop
lret
cs
jnp
fwait
out
xorb
fdivl
push
mov
lods
sub
push
mov
add
jp
or
pop
xchg
mov
imul
in
dec
test
call
jp
dec
fwait
dec
scas
lcall
xor
or
mov
adc
push
or
movsb
mov
enter
jp
pushf
mov
sub
pop
popa
jg
cld
ljmp
pop
jl
sbb
mov
jl
arpl
fsubs
inc
xor
dec
les
or
popf
pusha
out
lods
add
and
movsb
push
push
lcall
lods
add
les
mov
cmc
int3
pop
jae
stos
jle
and
fstpl
or
int
movsb
sbb
jle
xor
mov
mov
jnp
in
dec
in
fidivrl
sbb
or
loop
rcrb
rorb
shrl
push
mov
sbb
sub
or
push
outsl
jo
imul
mov
sbb
pop
lahf
hlt
test
shr
or
push
aad
pushf
movsl
pop
test
dec
popf
int3
jle
pop
ficoms
push
movsb
xchg
out
out
push
iret
or
xor
mov
xchg
inc
sbb
fnsave
push
sub
mov
adc
loop,pt
stos
fwait
mov
xlat
push
dec
xor
inc
cmp
cmpsl
inc
jg
push
test
fwait
dec
ljmp
dec
pop
inc
dec
xorb
imull
pop
push
push
cmpsl
in
dec
jns
in
cmp
or
ror
orb
cmpsl
jbe
bound
ret
xlat
cld
in
aaa
outsl
inc
or
sahf
sbb
and
cmpsb
dec
in
imul
mov
pusha
enter
test
imul
movq
outsb
ss
add
sbb
xlat
pop
add
lock
bswap
outsl
xor
lea
repz
fisubs
cld
inc
jl
inc
mov
mov
xchg
sbb
sub
ficoms
add
mov
pop
lea
or
shrl
cs
jmp
and
cmp
xor
in
jns
stc
dec
fs
push
jecxz
inc
lahf
test
dec
push
push
cltd
push
adc
jbe
movb
mov
dec
push
or
cld
push
adc
aaa
pop
fsubl
mov
sahf
cld
or
inc
shll
mov
les
pop
jmp
mov
outsl
ss
or
sbb
cltd
fdivl
ljmp
aam
push
add
sbb
push
test
cmp
sbb
sbb
out
lea
iret
push
cmp
cmpsl
jne
sti
mov
nop
jl
ljmp
lcall
shll
and
mov
mov
int3
sbb
mov
inc
jnp
in
jge
hlt
sbb
cli
push
mov
inc
out
test
dec
iret
loopne,pn
sbb
test
cltd
xor
cmp
or
fs
xor
loope
or
sarb
jmp
sbb
call
icebp
das
jno
sbb
pop
cmp
outsb
lds
xor
xor
push
cld
adc
mov
insb
adc
push
add
inc
cli
push
lahf
push
ja
shrb
in
jb
pop
cmp
xchg
pop
cltd
fldcw
ret
pushf
and
xor
shrb
hlt
push
leave
or
xor
or
xor
push
fldenv
addb
xlat
dec
insb
pop
rcll
hlt
dec
call
xchg
iret
je
cmpl
scas
cld
out
lds
sbb
pusha
cmp
pop
or
fwait
sti
sti
shlb
addb
sbb
out
dec
jle
ljmp
dec
cwtl
push
pushf
cmpsl
inc
ret
xor
mov
mov
jmp
jmp
jo
lret
incl
xchg
int
mov
xor
mov
mov
movsl
mov
and
lahf
and
mov
incl
push
in
hlt
push
inc
pop
jne
xorl
stc
add
lods
repz
push
loop
ss
jno
stos
loopne
ficoml
xchg
rcrb
test
andl
shlb
pusha
in
jae
ret
incb
push
pop
mov
push
add
imul
mov
inc
fs
mov
xorb
imul
sarl
xchg
sub
and
lret
data16
or
xchg
js
repz
cmpsb
pushf
lret
mov
popf
lods
pop
jb
sbb
test
jle
xchg
sbb
ror
sarb
loop
fiadds
outsl
mov
add
aas
movsl
push
adc
and
mov
add
and
stos
cmpsb
xor
into
test
shlb
test
jle
cmp
shll
stc
mov
pop
outsl
cli
xor
aam
mov
xchg
xorl
xchg
fisubs
sub
mov
stos
inc
mov
mov
sub
icebp
inc
fstl
xchg
mov
xchg
and
cmp
enter
xchg
push
add
fsubrl
mov
sub
ffree
sbb
and
and
add
xor
jb
fisubrl
popf
jbe
push
ja
cmp
repz
xchg
shll
out
mov
insb
arpl
sbb
cmpb
mov
xor
mov
addl
sub
roll
cmp
sbb
nop
fadds
adc
cmpsl
jp
mov
fidivrs
xor
sub
dec
sub
lock
stos
inc
jo
sub
mov
ds
mov
lods
sbb
popa
addr16
mov
imulb
mov
lods
xchg
mov
pop
sub
out
jle
mov
inc
and
sub
fistps
pushf
mov
xor
test
pop
jae
and
adc
in
test
incb
mov
test
fistpl
ss
jmp
testl
or
sub
mov
mov
mov
mov
pop
or
sti
pushf
idivb
test
into
cmc
push
or
jne
loop
cli
enter
inc
addl
movsl
popl
jae
rep
into
notb
ja
and
imul
mov
je
sbb
push
jo
cli
sbb
ds
into
jo
movsb
mov
xor
lods
push
push
stc
mov
out
ds
and
jnp
inc
adc
mov
std
xor
add
pop
movsl
jge
cmp
loope
sahf
mov
mov
fdivrs
and
and
lcall
mov
inc
mov
adc
fistps
jg
xchg
pop
cmc
mov
mov
push
neg
cmpsb
sub
ljmp
jmp
and
push
push
mov
inc
pop
push
mov
lock
repz
and
in
test
cmpsb
add
inc
mov
xchg
pushf
pop
dec
fst
and
dec
test
jl
jbe
fs
int
jp
and
in
aad
mov
xchg
jg
sub
pop
je
cmp
fldenv
jle
ljmp
popf
mov
pop
std
sub
gs
xchg
dec
or
mov
mull
lods
rorl
fldt
mov
xor
outsb
fiadds
mov
push
in
inc
les
insl
and
dec
inc
lahf
jp
decl
jg
vpmovsxdq
pop
fiaddl
mov
das
inc
add
xchg
xor
and
add
jl
sub
add
aaa
mov
or
mov
adc
push
in
ficomps
xchg
repz
sub
lock
pop
sbb
add
cmp
hlt
pop
cwtl
sbb
and
mov
push
rol
gs
les
out
popf
or
ret
pop
adc
xlat
push
sub
xchg
or
jb
jo
push
xlat
dec
or
jb
xchg
pop
sbb
mov
xchg
jb
sbb
dec
test
in
loop
mov
mov
idivl
shr
cld
mov
aaa
jb
aad
inc
xchg
inc
inc
cmpsl
or
sarb
clc
xchg
inc
push
pop
cmp
mov
inc
scas
shlb
inc
mov
mov
test
pop
xchg
sbb
cmp
fs
xor
adc
loopne
rol
jg
mov
test
inc
call
aaa
jge
jae
lock
mov
inc
add
aad
in
xor
jge
xchg
lods
cmpsb
fistpll
mov
mov
in
mov
repnz
fiaddl
mov
pop
andb
adc
jbe
add
lods
inc
and
mov
mov
movsl
cmp
das
mov
aas
pop
incl
pop
test
mov
and
icebp
imul
out
adc
jg
jge
inc
jae
repnz
push
hlt
pop
jbe
push
jp
filds
inc
cmp
test
and
push
aaa
jge
push
insb
in
or
insl
insl
pop
adc
cmp
jo
push
movsb
repz
cmpsb
js
mov
pop
test
xchg
add
mov
fcmovbe
jp,pn
iret
ss
fwait
xor
jmp
adc
and
xor
dec
mov
scas
push
callw
dec
ret
pop
enter
xchg
adc
pop
cmp
mov
out
stc
adc
ds
inc
and
jecxz
xchg
int
xchg
icebp
xchg
outsl
sbb
ss
jp
clc
ds
fwait
stos
out
ljmp
cmc
sbb
xchg
mov
pushf
imul
daa
xor
mov
scas
sahf
aad
mov
mov
add
mov
ja
cmp
insb
sbb
cs
pop
add
andl
mov
movsl
ss
or
mov
in
mov
sbb
mov
scas
jae
lcall
mov
gs
mov
rol
stos
sub
push
fisubs
pusha
jne
mov
sub
sub
or
loope
aad
adc
or
enter
sbbl
xorb
xchg
test
idivb
ljmp
jno
push
pop
imul
lock
daa
shrb
add
cltd
jge
or
or
xlat
push
push
addr16
addl
cwtl
ror
stos
cmp
push
or
arpl
cs
xchg
jns
mov
std
adc
sbb
adc
push
mov
add
sub
mov
js
cmp
loop
aam
clc
xchg
notl
scas
pusha
mov
push
std
mov
cmp
mov
mov
sti
mov
inc
popa
and
xchg
rolb
into
int
jge
mov
jl
pop
dec
jnp
sub
mov
pop
inc
cltd
push
roll
lods
fwait
cwtl
sub
shlb
in
and
add
in
push
std
push
cs
jne
xor
push
jnp
pop
in
insl
jno
in
inc
stos
das
mov
mov
or
addr16
mov
lds
cmpsb
dec
sbb
dec
sub
mov
iret
shll
mov
int3
xchg
adc
jmp
imul
fidivrs
addr16
jns
cmp
rcl
repz
fwait
lods
pop
ss
faddl
adc
pop
xchg
mov
rclb
mov
xor
ja
xor
jno
icebp
lds
mov
pop
mov
xchg
dec
sti
movb
jno
dec
add
ret
pop
scas
dec
lock
fldt
sbb
adc
iret
ljmp
test
xor
aad
fimuls
cli
pop
fldt
repnz
mov
aad
lds
rclb
loopne
jae
fidivs
int
outsl
push
jb
xchg
insl
push
andb
xor
add
xor
push
cwtl
and
loop
push
lods
ret
movsl
cld
popf
add
out
outsl
fnstsw
gs
inc
xchg
orb
mov
je
xor
nop
test
xchg
pop
or
out
push
jp
mov
push
enter
and
bound
das
pop
stos
int3
pop
xchg
and
jg
in
cmpsb
js,pn
cmp
pop
or
sub
jle
aas
das
or
sub
add
add
nop
adc
insb
pop
ljmp
cmp
jp
lods
push
mov
scas
push
push
mov
xchg
pop
lret
ja
mov
jae
jl
insl
cmp
stos
cwtl
push
stos
add
sbb
outsl
data16
push
mov
jg
jmp
pop
incl
pop
jg
fildll
cmp
push
mov
jne
int
icebp
andb
outsl
mov
cmp
push
test
push
out
repnz
sub
mov
sub
push
repnz
inc
into
into
add
movsb
ficomps
sbb
ds
push
mov
ret
xor
into
jns
out
dec
mov
out
jae
inc
cmp
stc
mov
gs
mov
clc
fimull
lods
movsl
adc
repz
les
cltd
xor
cmp
dec
in
inc
iret
jl
repz
cwtl
jle
sub
cmp
xchg
mov
call
lcall
push
popa
sub
pusha
mov
sahf
fcmovu
out
cmp
push
jb
ljmp
xor
jl
push
outsb
les
jecxz
leave
sbb
xchg
and
xchg
dec
mov
add
sti
inc
hlt
add
sarl
test
add
adc
fwait
es
inc
adc
test
dec
ljmp
sub
faddp
ss
mov
cmp
roll
inc
out
sub
ficompl
jl
stos
jnp
mov
loopne
xchg
sub
mov
sub
mov
lahf
add
and
popa
test
in
push
scas
xchg
test
inc
insb
popf
pop
icebp
jbe
xor
xchg
in
push
insb
cmp
andb
sahf
sbb
inc
es
sbb
mov
jb
stos
mov
jo
pop
roll
push
daa
into
outsl
pushl
ficoms
inc
jns
pop
popf
std
xchg
int
xchg
adc
mov
sarl
pop
cs
int
pop
bound
call
and
pop
nop
test
out
sti
or
inc
xor
xor
out
or
or
add
jge
pop
inc
lcall
adc
inc
add
jno
movsl
lret
adc
aas
cmp
mov
adc
cli
call
mov
mov
adc
xor
adc
pop
popf
dec
test
push
push
dec
jns
lock
daa
and
push
adc
sub
lahf
fwait
pop
cmc
push
inc
xor
or
mov
jne
sarb
fisttpl
xchg
lds
inc
adc
cmp
gs
arpl
mulb
or
repnz
and
lock
in
int3
mov
divb
in
pusha
adc
lret
mov
out
mov
sbb
and
add
adc
mov
outsb
data16
push
jle
xchg
push
stc
fstp
stos
xchg
mov
addr16
jg
fbld
pop
jns
dec
xor
orl
fistpll
test
jo
push
aaa
jge
clc
adc
out
and
jg
adc
jne
sbb
mov
rclb
inc
ljmp
repz
inc
mov
int
aam
mov
pop
in
xchg
cs
iret
scas
loope
sub
enter
leave
xchg
push
inc
mov
sbb
xchg
inc
shll
jp
sarb
xchg
test
inc
in
push
mov
pop
aam
pusha
or
clc
xor
out
aam
lahf
das
add
push
mov
outsb
lock
inc
leave
leave
lahf
andb
outsl
lea
or
fsubl
mov
add
and
subl
lea
xchg
jg
mov
mov
sub
sub
dec
ds
aam
dec
inc
stos
call
xlat
lds
outsl
mov
into
dec
jb
js
or
ret
pop
cmpsl
adc
sub
loope
cmp
lds
add
push
or
pop
inc
in
sbb
ror
add
mov
sub
mov
pop
imul
call
arpl
nop
jecxz
mov
adc
loope
push
inc
inc
sbbb
cmp
pop
xor
fsubr
sub
ss
ds
iret
mov
push
cltd
in
mov
movsl
mov
callw
push
jne
les
js
sub
dec
mov
adc
mov
loope
adc
jle
dec
mov
stos
pop
cmp
int
int3
fimull
or
dec
testl
xchg
jb
scas
xchg
cmc
pop
int
pop
push
popf
fs
fidivrl
inc
daa
xor
in
push
xor
fidivl
add
jnp
add
in
pop
jns
adc
xchg
mull
dec
mov
movsb
stos
pop
mov
out
data16
dec
pusha
dec
and
sahf
cmp
repz
test
or
xor
adc
add
push
insl
dec
lret
in
xchg
int3
inc
xor
and
pop
out
frstor
lds
movsb
fucomip
jno
jns
ss
push
pop
jnp
xchg
movsb
rorb
sbb
pop
or
pop
rorb
out
sbb
pop
arpl
mov
xchg
cmp
push
sub
not
push
sbb
sbb
mov
js
shrl
add
pop
xlat
pop
and
jg
dec
subb
ljmp
cmc
iret
repnz
mov
ds
loopne
xor
out
insb
mov
xor
or
mov
imul
stos
scas
dec
inc
aam
lods
dec
call
push
jl
push
mov
pop
js
in
cmpsb
lea
popa
lret
push
dec
outsl
xchg
fcmove
std
test
scas
jae
or
mov
cmc
divb
aad
stc
mov
nop
leave
gs
sbb
imul
sarl
or
sub
cmp
inc
add
les
test
xchg
push
iret
fcompl
mov
pop
push
inc
mov
in
pop
push
inc
lock
add
and
leave
xchg
xor
dec
push
decl
mov
dec
hlt
jne
mov
mov
lahf
mov
jmp
mov
push
jbe
das
cmp
pop
aam
adc
adc
stos
mov
ds
cli
inc
call
adc
or
add
sub
pop
cmp
lods
pop
adc
inc
push
insb
mov
and
cmp
pop
adc
rcrb
add
mov
fcmovne
jno
mov
or
xor
inc
les
xchg
lods
insl
and
fidivrl
or
lea
into
xor
bound
aam
mov
fs
sbb
or
mov
sub
clc
sti
mov
push
and
orb
ja
adc
mov
mov
dec
mov
sbb
and
ja
add
mov
into
mov
dec
stc
mov
cli
cmp
push
lret
pop
in
popf
xchg
push
test
or
xchg
idivl
scas
lret
mov
inc
mov
fucomp
pusha
xlat
mov
sbb
enter
bound
shll
push
push
repnz
pop
int
or
or
sahf
inc
dec
inc
lea
and
sbb
loop
cwtl
inc
insl
push
loop
imul
and
addr16
add
iret
sbb
mov
leave
fcmove
std
subb
mov
subl
add
cmp
dec
bound
jge
and
leave
mov
cmpsl
xor
pop
sub
xchg
cld
lahf
shrb
mov
movsl
or
aad
xor
cmpsl
push
aad
and
roll
insl
aad
xorl
adc
xchg
mov
cmp
sbb
das
or
mov
sbb
cmc
adc
sahf
fwait
ljmp
xor
xchg
mov
mov
push
fwait
jo
mov
das
mov
jl
and
push
push
adc
jo
dec
adcb
adc
mov
mulb
jmp
xchg
out
aaa
add
mov
dec
hlt
outsl
insb
lret
out
sbb
rorb
fdivp
fnstenv
sub
xchg
jo
std
test
nop
mov
fisubrl
add
xor
lret
outsl
xor
xchg
pop
movsb
ffreep
test
outsb
int3
outsl
ss
cltd
inc
push
lahf
or
adc
mov
jp
jp
aaa
adc
inc
add
dec
repz
jecxz
or
in
lcall
insl
push
sti
pop
in
mov
cld
loop
cmpsb
sbb
mov
mov
push
mov
push
in
ss
scas
inc
inc
pop
jmp
test
mov
lods
xor
push
lcall
cld
lods
inc
push
or
add
subl
lea
pusha
rcll
cmp
leave
and
je
xchg
sub
sbb
add
scas
mov
push
pop
mov
adc
addr16
jo
xrelease
push
int3
cmp
mov
jb
or
ret
push
stos
cs
dec
pop
loope
adc
jmp
mov
jle
cmp
repz
ror
push
mov
iret
inc
inc
repnz
rsm
sub
int3
pop
call
test
inc
mov
leave
sbb
xchg
pop
icebp
cmp
push
dec
inc
add
movl
jmp
fidivl
mull
fbld
push
push
je
push
add
in
or
pop
dec
ljmp
in
jp
fimuls
jae
aad
xchg
movsl
mov
jmp
fldl
ret
sbbb
or
cld
sbb
stos
xor
ficoml
mov
idiv
xor
cmp
sbb
mov
or
xchg
add
clc
mov
addr16
sub
scas
add
sahf
inc
sub
insl
pop
inc
cmp
ret
mov
pop
xor
push
jbe
mov
dec
mov
std
push
pop
cmpsb
mov
adc
sbb
data16
sbb
or
xlat
xlat
xor
push
dec
cmp
out
xor
mov
pop
bound
lods
adc
adc
adc
shrl
mov
mov
mov
mov
mov
icebp
jbe
fs
adc
cltd
les
fdivrs
xchg
xchg
mov
test
test
jb
imul
xchg
jno
inc
xor
lahf
test
mov
dec
cli
lods
fisubl
dec
aas
stos
xchg
test
lret
or
icebp
sarb
jae
add
roll
jmp
xchg
lret
stc
pop
dec
push
rolb
add
jb
and
sarb
jmp
inc
lahf
int
push
outsl
arpl
fildl
fs
mov
pop
and
push
inc
sbb
jge
mov
popw
xor
test
mov
ds
mov
sbb
leave
ja
push
pop
cld
jb
vmovups
dec
mov
int
cli
loopne
sub
int3
mov
or
mov
inc
mov
fnsave
aam
jno
stos
repnz
out
or
pop
ljmp
mov
aam
arpl
clc
xor
push
adc
int3
out
aad
inc
mov
repz
cltd
daa
push
in
sub
mov
dec
test
fistl
outsl
pop
sub
push
outsb
aas
loopne
js
stos
nop
push
push
lds
clc
pop
imul
repz
mov
mov
cmp
inc
js
sub
jecxz
arpl
call
daa
push
dec
leave
aad
pusha
popf
mov
sarl
pusha
popa
xchg
mov
pop
adc
push
adc
int3
insl
add
adc
mov
add
xor
in
mov
mov
pop
cmp
je
outsb
fidivrl
mov
js
xor
sarl
in
in
mov
pop
negl
cmp
lret
xchg
cmc
xor
add
lret
inc
ljmp
jae
in
std
nop
and
pop
movsl
add
imul
scas
lret
push
xor
stc
mov
xchg
aad
xor
cmp
jecxz
push
outsl
jne
pop
or
fdivl
incl
outsl
add
or
push
aaa
lds
jg
das
ds
std
jnp
jae
push
fiaddl
aaa
jbe
add
pop
dec
xorl
mov
scas
data16
fisubs
sahf
sub
mov
fnstenv
xchg
xchg
sahf
or
or
pop
fdiv
mov
int3
xor
push
mov
out
push
jae
cmp
outsb
mov
xchg
sub
stos
jne
test
idiv
lea
lods
sbb
and
jae
mov
pop
or
fstps
in
mov
jns,pt
add
shrb
pusha
lock
nop
push
push
mov
xorl
out
push
xchg
mov
cltd
mov
test
dec
mov
call
ljmp
push
enter
rcrb
mov
popf
xchg
pop
je
xchg
cwtl
add
mov
sti
out
outsl
jbe
je
inc
push
loop
jo
cwtl
subl
sub
or
pusha
or
fldl
repz
popf
ljmp
ljmp
out
pop
pop
aad
loope
and
mov
inc
pop
ffreep
imul
repz
mov
js
pop
cs
dec
je
hlt
test
sub
icebp
mov
scas
lds
pop
mov
out
sub
rcrl
push
jmp
lods
cmp
add
inc
and
xchg
call
lds
and
jg
pop
xor
loopne
mov
add
and
sbb
sahf
or
fdivrs
outsl
aam
pop
jge
inc
stos
jbe
xlat
xor
mov
decl
xchg
fucomp
sbb
stc
inc
das
lock
adc
cmp
addl
lcall
stos
jnp
adc
ret
mov
dec
stos
pop
fdivrl
cmp
out
dec
inc
adc
mov
popf
jnp
stc
mov
sti
mov
mov
das
movsl
leave
mov
scas
sbb
xor
push
dec
rolb
add
xchg
aad
loopne
in
push
ds
mov
les
add
movsb
lahf
xchg
aam
gs
outsb
pop
in
sub
call
mov
push
icebp
pop
add
or
jle
mov
xchg
mov
jg
test
sub
cmp
repz
arpl
in
fidivrl
inc
dec
mov
mov
pop
pop
mov
mov
mov
rolb
pop
lock
clc
xor
push
sbb
push
fistps
mov
in
scas
std
shr
push
xchg
cmpsl
push
cmpsb
sub
sbb
jp
test
add
shll
or
fs
jle
in
sub
test
mov
sbb
cs
mov
push
sarl
xchg
popf
aaa
enter
push
mov
loop
pop
aaa
mov
mov
adc
mov
adc
addr16
lods
pop
dec
ja
sahf
fs
sbb
rclb
repnz
sub
cmp
test
inc
testl
and
mov
inc
pop
jle
xchg
rclb
cmp
dec
jp
mov
jmp
mov
repnz
push
pop
sub
push
xor
popf
popf
fnstcw
jecxz
mov
xor
test
jbe
adc
adcb
add
inc
or
jecxz
mov
cmp
andb
cs
ja
popf
bound
sbbl
add
rorl
insb
xchg
cmpl
lcall
leave
pusha
outsb
jecxz
rorb
xchg
loopne
loope
inc
adcl
mov
xchg
fisubl
add
jne
loop
sti
imul
sbb
fisubl
jns
rcl
adc
jae
sbb
shl
into
xchg
clc
pushf
sbb
pop
sbb
negl
sbb
jp
shl
push
cltd
mov
faddp
into
hlt
jmp
sbb
inc
push
int3
rcrl
jmp
push
cmp
lds
cmpsb
adc
dec
fnstenv
rol
cmpsb
lock
and
cs
mov
call
and
lea
mov
repnz
dec
popa
cmpsl
xor
test
inc
push
call
out
test
mov
std
add
inc
sbb
lahf
sarb
mov
push
lea
push
xor
rcrb
fadd
xchg
cld
xchg
push
sub
dec
push
rorb
int3
insl
fwait
sub
add
inc
or
rcll
cli
mov
nop
jne
aam
cmp
out
sub
clc
adc
pop
xchg
cmpsb
fldt
insl
pop
adc
ss
ljmp
movb
pop
in
jmp
es
insb
insb
jle
in
aam
test
in
and
scas
les
popa
mov
mov
lret
mov
pushf
insl
add
in
inc
sub
mov
push
repnz
add
mov
outsl
xor
add
rorb
mov
xchg
pop
inc
inc
inc
pushf
dec
mov
sub
dec
in
jmp
iret
adc
arpl
orb
dec
nop
xor
cmp
rorl
mov
adc
add
or
scas
out
test
pop
cmp
push
or
out
lods
or
fidivrs
adc
and
add
inc
shlb
xorb
popa
scas
fbstp
loop
std
fwait
loopne
and
fnsave
push
inc
push
jg
sbb
adc
aam
mov
inc
aad
mov
inc
mov
call
in
pop
popa
dec
mov
cmp
fbld
into
pop
das
in
pop
fmull
dec
push
sbb
insb
call
mov
cltd
jae
cs
insl
or
imul
fs
mov
out
clc
cs
loopne
xchg
mov
dec
sbb
mov
jle
add
pop
mov
inc
sbb
inc
inc
xchg
pop
clc
sub
xchg
mov
jle
mov
pop
int
pop
add
sbb
xchg
mov
mov
lods
pop
loop
fbld
jle
jo
cmpsb
ficoml
in
cmp
fisubrs
mov
add
mov
jo
cmpsb
sbb
push
pushw
cmp
sbb
ja
xchg
push
xchg
leave
push
mov
or
xchg
cmp
cmp
dec
xchg
addr16
popf
or
xlat
push
pusha
jnp
fbld
add
xor
jbe
in
pop
mov
or
cmp
adc
fwait
add
pop
mov
subb
add
add
out
loop
aas
sub
pop
mov
xchg
into
aad
sbb
xor
and
and
lret
bound
lods
arpl
adc
data16
imul
addr16
and
rcl
lret
pop
imull
sar
mov
inc
cmp
xchg
bound
in
xchg
push
sub
mov
inc
lcall
roll
roll
ja
sbb
das
aam
pop
mov
pop
fsubrl
adc
loopne
ds
add
or
or
pop
xchg
jge
sub
sbb
dec
jne
rcrl
pop
std
jae
mov
decl
ss
xchg
push
out
xchg
gs
mov
mov
push
mov
jbe
and
iret
lret
in
and
mov
addr16
popa
dec
fnsave
sbb
bound
jmp
jge
nop
mulb
cltd
inc
adc
lahf
push
es
mov
mov
mov
cmpsl
out
lea
insl
sub
rcrl
gs
dec
sub
pop
xchg
jno
xchg
mov
xor
leave
inc
arpl
sbb
xchg
stos
aam
loope
js
stos
mov
jbe
loope
sub
mov
xchg
enter
xchg
fistps
rcl
mov
cld
dec
sub
pop
ficompl
mov
and
and
scas
imul
jmp
inc
lea
daa
es
cmc
insl
mov
dec
sub
call
sti
call
sbbb
cmp
pusha
xchg
mov
aam
mov
adc
popf
mov
clc
inc
filds
popf
push
mov
fs
out
call
pop
scas
add
inc
lea
mov
pop
push
aad
xchg
fsubs
mov
push
push
inc
lahf
rclb
pop
push
icebp
stc
nop
push
sbb
jl
mov
mov
jnp
jmp
cmp
movsb
pushf
dec
lods
lret
popa
pop
repz
repz
or
call
icebp
sub
mov
mov
lds
or
pop
add
cmp
shlb
es
jo
add
cmc
cmp
into
mov
jno
loop
aam
add
dec
rol
loope
in
stos
xchg
sbb
fimull
jle
adc
jb
add
popa
xchg
mov
pop
cmp
dec
push
dec
pop
cld
cwtl
push
in
ret
jmp
js
lods
xor
and
lods
mov
jmp
lds
sub
out
out
push
mov
adcb
sbb
inc
mov
cmp
mov
es
dec
inc
cltd
xchg
sbb
cmpsb
adc
loope
or
jmp
mov
adc
cmpsl
mov
imul
cmp
enter
mov
push
call
sub
jge
and
pop
int3
mov
movsl
push
jl
sahf
or
test
ret
nop
fisubrl
pop
xchg
enter
mov
in
in
mov
roll
addb
or
mov
push
pop
test
movsl
or
push
lahf
cmpsl
pop
add
add
test
andb
and
adc
xor
jmp
mov
in
sbb
mov
and
das
or
mov
mov
xlat
mov
xor
fstpl
lds
aaa
lods
or
out
scas
mov
sub
movsl
gs
test
xchg
insl
add
aaa
inc
lret
and
dec
xchg
sbb
scas
movsb
mov
ret
pop
add
dec
cld
ljmp
shrl
pop
imul
cmp
fsub
pop
lret
in
lret
pop
repnz
xor
add
mov
dec
xchg
mov
sbb
sahf
cmp
test
loopne
fwait
cmp
cmc
adc
inc
in
sbb
cmp
or
mov
shrl
jg
xor
hlt
sarb
scas
lods
int
lods
ds
cmp
scas
dec
add
add
imul
decl
fstpt
das
mov
push
cltd
adc
push
ja
mov
bound
int
aaa
xchg
mov
repz
lods
mov
sbb
mov
sbb
ficoml
jmp
pop
xor
inc
cmpb
and
dec
xchg
xchg
imul
mov
inc
popa
mov
jecxz
jg
jo
clc
and
sub
xchg
sbb
sbb
xchg
in
cld
jl
push
xchg
sahf
dec
push
iret
cli
pop
fsubs
daa
jmp
mov
xchg
mov
jne
iret
xor
cmp
cmpsl
and
mov
inc
outsb
lret
dec
lock
out
xor
popf
fdiv
mov
pop
mov
mov
xchg
and
mov
xor
push
pop
pop
fnstsw
cwtl
push
mov
jl,pn
add
sbb
dec
aaa
test
xor
mov
repz
icebp
cmpsl
pop
popa
daa
xchg
pop
adc
sub
sbb
sarb
enter
dec
sbb
cmp
push
repnz
jg
adc
in
dec
mov
shll
cmp
push
paddb
enter
or
sbb
sahf
test
lea
out
sbb
mov
lock
aam
call
mov
adcl
test
dec
sub
mov
cmpsb
push
mov
std
xor
xchg
xor
out
jmp
add
adc
xchg
xchg
jae
jb
cmc
scas
jle
aaa
fucomip
sub
fdivs
dec
push
jp
add
sub
mov
mov
mov
adc
mov
cli
dec
mov
dec
sub
push
mov
dec
push
xor
mov
cmp
xchg
mov
inc
pop
test
out
insl
rcll
and
mov
add
mov
pop
jno
daa
dec
push
and
les
out
adc
xchg
enter
jno
outsl
push
inc
jg
loopne
lahf
and
xor
mov
mov
ljmp
lret
ret
dec
inc
sti
out
xlat
dec
xor
adcb
add
les
jns
loopne
and
xor
je
jge
push
andb
and
rcrb
jne
xchg
icebp
and
ss
gs
mov
cmp
cltd
stos
lock
shr
pop
movsb
add
test
push
loopne
jl
das
dec
fwait
loop
ret
jp
and
mov
jo
into
jg
xor
mulb
or
pop
sbb
jnp
mov
jns
std
xor
mov
lcall
daa
bound
xor
mov
cmpsb
out
xor
js
inc
push
sub
push
sarb
jmp
inc
pop
test
ret
ss
out
mov
sub
cmpsl
leave
push
repnz
in
mov
inc
scas
push
push
dec
mov
aas
sub
mov
ud1
pusha
push
jg
jl
xchg
or
imul
add
iret
fisubs
pop
aam
push
xchg
repz
jae
jnp
mov
dec
insb
xchg
xchg
cmp
jns
lods
dec
mov
dec
xor
add
push
push
pusha
jmp
imul
sub
cmp
mov
pop
mov
push
pop
cltd
jae
lret
push
mov
pop
pop
xchg
and
pop
fwait
xchg
cmp
add
mov
outsl
adc
arpl
xchg
xchg
add
shlb
or
adc
and
adc
push
notl
fs
in
sahf
xor
push
stos
out
and
out
add
push
xchg
push
push
es
andb
movsb
fistpll
rcl
mov
in
call
pop
in
iret
sub
dec
lret
test
push
jbe
cld
push
les
dec
pop
inc
or
jge
add
sbb
dec
fs
add
dec
and
iret
stc
push
push
pop
push
sti
sbb
inc
insl
adc
insb
mov
enter
dec
out
pop
aas
cli
mov
insl
rorl
leave
and
test
in
pop
adc
daa
rcll
adc
mov
repz
cld
in
push
lret
or
out
lds
jmp
icebp
push
addb
push
xor
scas
out
cmp
imul
jb
cli
xchg
jg
dec
in
adc
fcmove
adc
jo
bnd
hlt
cmpsl
lds
leave
std
lret
in
negb
outsb
daa
add
gs
inc
mov
ror
jbe
pop
cld
aad
aaa
loope
mov
inc
xlat
add
xchg
add
cmpb
testl
cwtl
loope
popa
add
ficompl
mov
sbb
lea
gs
sbb
or
dec
lret
mov
jl
in
lahf
lea
sub
inc
pop
je
arpl
mov
mov
jno
push
cwtl
leave
add
loop
push
xchg
mov
les
popa
push
jp
sub
jne
lret
lret
push
sub
sbb
mov
mov
loop
mov
jbe
rol
aam
movb
xchg
add
cmpsl
xor
ds
cmpsb
test
mov
add
arpl
stc
adc
sub
sub
dec
inc
lock
arpl
mov
pop
jnp
pusha
add
addb
mov
cmp
out
out
xchg
into
jns
or
cs
dec
outsb
js
sbb
aaa
mov
pop
xchg
mov
push
fwait
gs
push
sub
out
cltd
sbb
repz
and
mov
jae
or
sub
push
lea
ret
and
sub
or
shll
call
add
ja
mov
pop
xchg
lock
inc
xchg
add
mov
adc
mov
pop
mov
sbb
adc
sub
jp
push
shl
dec
xchg
iret
xlat
hlt
filds
insb
fbstp
sahf
lea
or
mov
or
fwait
in
stos
xchg
inc
loopne
fistps
or
pop
push
aam
pop
rclb
repnz
and
rcrl
mov
pop
xor
in
out
and
dec
xchg
xchg
cltd
jmp
sub
stc
mov
sti
fst
not
fs
cmp
push
push
xchg
pusha
xor
sub
lock
pop
xor
sbb
jmp
decb
fs
push
mov
sub
add
pop
jecxz
or
mov
hlt
jns
dec
mov
sub
mov
sbb
jae
push
cmpsb
imul
push
aad
movsb
push
scas
movsb
shll
jnp
mov
xchg
pop
xchg
pop
jge
rcrl
sbb
ljmp
stc
jg
sti
xchg
hlt
rclb
aam
cmpb
inc
mov
xor
fs
mov
scas
pop
es
dec
and
mov
adc
push
xor
cmpsb
fst
mov
sbb
cmc
lret
jb
lahf
push
pop
xchg
xchg
mull
jp
xchg
xchg
pop
aam
enter
jbe
jge
sbb
xor
clc
xchg
lds
or
repz
aaa
adc
or
cltd
mov
mov
lret
mov
push
jmp
cmpsb
mov
push
shrl
mov
add
push
imul
data16
imul
aam
jb
jno
pop
dec
pop
mov
lods
nop
test
and
enter
iret
subl
push
in
cltd
mov
stc
cld
dec
cs
icebp
fdivs
pop
cmpsl
out
out
loope
inc
ret
xor
clc
cli
call
in
fidivs
dec
push
std
std
in
stos
scas
outsb
or
inc
loope
sub
in
jne
jmp
pop
mov
or
or
and
rorl
and
push
stos
int3
mov
pop
arpl
mov
xchg
shll
lods
ja
sahf
fcompl
je
addr16
xor
mov
iret
or
inc
pop
cwtl
fucomi
mov
push
and
scas
inc
or
rcrl
movsl
insl
sbb
roll
dec
and
jne
jge
or
aas
cmp
cmp
sub
adc
adc
scas
mov
out
inc
mov
dec
mov
push
inc
stc
or
and
or
enter
sbb
mov
bnd
mov
pop
jecxz
sahf
pusha
jne
mov
lret
ret
mov
mov
dec
sub
fistps
jmp
pop
xor
ret
bound
rorl
jae
cmc
out
dec
iret
cmp
adc
pop
andb
jns
aad
mov
fmuls
xor
adc
mov
jns
popf
popa
out
pop
neg
cmpl
dec
xchg
jp
loopne
add
lds
jle
ljmp
jo
outsl
adc
xor
and
cmp
repnz
int
add
lock
push
cmp
sub
mov
push
aas
cmp
inc
or
push
fnstcw
push
pop
xchg
mov
or
aaa
incb
movswl
leave
loopne
push
cmc
pop
mov
jnp
sbb
mov
jne
jl
into
inc
jne
fcoml
imul
pop
jnp
mov
lea
cmp
test
jae
cmp
ds
mov
adc
sub
out
push
mov
hlt
and
pop
mov
inc
sub
cmc
cmp
pop
cli
mov
xor
pop
and
xchg
ljmp
push
bound
mov
add
xchg
rcrl
mov
or
ss
cmpsb
div
pop
add
inc
mov
cmp
stos
mov
out
rol
pop
jnp
mov
and
dec
inc
dec
pop
stc
mov
sarb
adc
jle
pusha
lds
fwait
jbe
adc
mov
out
pop
test
sarl
je
dec
jne
and
push
aad
aaa
dec
dec
std
je
sbb
jecxz
inc
xchg
xchg
dec
or
mov
push
push
out
cmp
add
aaa
xor
data16
mov
ds
repz
repnz
jmp
pop
test
lds
jecxz
xor
rcrb
xchg
sbb
rorl
lcall
jb
pop
add
mov
sbb
sti
inc
mov
or
xorb
dec
push
cmp
sub
jge
ret
or
inc
negl
cwtl
adc
cmp
adc
stc
jp
mov
fld1
and
add
mov
out
lret
mov
aam
fidivs
and
pop
leave
icebp
mov
clc
adc
sub
xor
jns
idivl
xor
cmp
arpl
addl
adc
es
sti
mov
cmp
pop
addr16
ret
add
push
mov
vpshuflw
xchg
jnp
mov
rcrl
xchg
push
mov
cmp
inc
mov
orb
enter
dec
sbb
mov
xlat
ss
les
rcrb
fnsave
cmp
in
pusha
jmp
mov
mov
xor
inc
jno
adc
fs
es
les
arpl
inc
jb
jmp
enter
push
shlb
or
pusha
jl
push
sbb
mov
mov
leave
sti
int3
xchg
je
shrb
icebp
stos
pop
dec
dec
lods
mov
sub
xlat
sbb
out
loopne
mov
cs
cmp
std
inc
and
roll
imul
lret
push
xorb
por
pop
dec
dec
pop
mov
stc
pop
mov
mov
pop
jmp
cli
test
adc
clc
imul
xlat
cmpsl
inc
push
pop
mov
hlt
cli
test
js
lcall
icebp
sbb
xor
xchg
lcall
pop
int3
jg
mov
iret
or
cmc
test
inc
inc
add
adc
lcall
cmp
rorb
rcrl
test
sarb
leave
cmp
mov
icebp
xlat
arpl
test
xor
dec
insb
mov
mov
pop
cmp
xor
sahf
xor
in
and
or
cmpsb
insl
xor
fdivrs
jmp
xor
ret
out
pop
xor
cmc
sub
mov
inc
cmpsl
test
jmp
nop
push
mul
lds
add
xor
push
and
dec
pop
test
test
or
jge
lea
push
scas
xchg
mov
ja
mov
jnp
in
cld
in
cltd
jmp
lods
pop
or
negl
insl
or
pusha
mov
mov
lahf
add
loopne
das
test
out
dec
dec
inc
mov
or
xchg
sbb
inc
mov
ja
sahf
popf
jns
das
mov
mov
test
dec
jnp
jmp
mov
pushf
js
out
add
push
stc
pushf
enter
cltd
cmp
jb
push
push
mov
addb
lret
mov
aaa
call
sub
sti
jno
stos
add
mov
pop
pop
jo
frndint
mov
fisttps
rcrb
push
inc
in
movsl
fadds
xchg
fldl
ficompl
and
cmc
push
adc
cmp
lret
insb
mov
movsb
and
aas
and
adc
jb
subb
mov
xchg
dec
mul
das
std
rorl
jb
push
xchg
lea
fildl
push
pusha
xor
icebp
jecxz
mov
jg
mov
mov
xor
add
arpl
cwtl
rorb
outsb
popf
inc
xor
ret
sub
cli
pop
jo
push
lcall
call
jnp
push
mov
cli
adc
sahf
xchg
loopne
cli
loop
insb
push
sub
mov
mov
pushf
ffree
add
mov
sbb
pop
fstl
add
dec
shl
dec
inc
mov
jne
test
rcl
cmp
movsl
je
dec
xor
and
test
adc
jbe
inc
jl
jl
add
outsl
lods
jp
and
xchg
or
testb
rcrl
jmp
inc
pop
les
lahf
push
xchg
cmp
push
mov
sbb
dec
dec
js
adc
fidivs
jmp
mov
bound
add
filds
addl
repz
add
int
push
clc
and
push
xor
fs
test
xor
mov
cltd
scas
fistl
out
frndint
xlat
lock
and
cmp
stos
adc
or
mov
stos
adc
cmc
repz
repz
mov
inc
sub
pop
ficomps
loopne
or
add
arpl
adc
pop
jb
dec
or
dec
pop
leave
mov
cmp
sub
scas
add
cmpsb
lret
push
pop
pop
mov
pop
jo
adc
mov
out
and
jg
rcrl
fsts
in
mov
mov
test
test
mov
fs
outsb
es
out
pop
push
test
xchg
int
mov
mov
das
cmc
in
scas
mov
sbbb
inc
mov
or
mov
add
stc
xor
or
iret
pop
jl
cmp
xchg
dec
jecxz
aaa
mov
pop
jecxz
push
adc
sub
out
stos
mov
cmp
cmp
shl
sbb
cld
and
dec
cmp
fdivrs
xchg
adc
call
mov
aad
jnp
dec
xor
sbb
jmp
fwait
or
jae
xchg
cmp
pushfw
rcl
int3
pusha
xchg
jne
loop
jb
push
ficoml
repnz
and
sub
in
jo
test
inc
mov
pop
stos
stos
push
dec
or
sbb
adcb
insb
mov
pop
stos
cmp
dec
jae
xor
cwtl
xlat
sub
cmp
adc
xchg
xor
mov
mov
mov
mov
ljmp
clc
fs
add
ret
inc
out
lods
or
sbb
fcmovnu
out
out
fdivrs
inc
mov
jle
sub
jo
mov
pop
mov
mov
bound
and
jg
push
fincstp
and
dec
filds
mov
or
stc
shrb
dec
mov
push
and
inc
xchg
inc
mov
xchg
fdivs
ret
imul
xor
adc
jmp
pop
mov
lods
loopne
les
or
shll
dec
sub
in
subl
mov
xchg
jbe
pop
lods
adc
iret
pop
and
xchg
enter
movl
xchg
mov
add
fnstenv
lods
mov
fucomip
imul
adcl
dec
iret
js
ret
pop
push
push
mov
sar
push
push
or
stos
sbb
add
cmpl
inc
sbb
das
push
jle
loopne
scas
es
out
xchg
push
sbb
dec
nop
rolb
push
mov
andl
jge
mov
outsl
comiss
inc
xlat
cmpsl
inc
push
dec
aam
adc
push
dec
sarb
mov
push
pop
fsubrp
lds
push
adc
xchg
xor
add
inc
pop
int
jl
xchg
int3
push
fisttpll
mov
jecxz
outsb
sub
outsl
loope
std
push
pop
xor
jno
popf
incb
add
pop
or
sub
xchg
pusha
sub
movsb
mov
push
jae
xlat
and
jne
lds
cs
xor
sub
outsl
stos
aad
sub
dec
icebp
in
mov
mov
xor
mov
inc
and
jb
jg
cwtl
aam
hlt
xor
push
sub
into
add
jne
daa
inc
int
xor
es
mov
shlb
xor
jb
xchg
fs
sbb
mov
cwtl
sub
pop
mov
test
jo
xor
lock
or
mov
cmp
sahf
pop
shr
loopne
ret
loope
test
jae
push
shll
sub
jg
out
cmp
int
int3
pop
jb
dec
fsubrl
ss
cmp
xchg
iret
lcall
call
mov
icebp
inc
insb
movsl
jmp
rclb
loop
add
test
pusha
ret
aam
mov
leave
outsb
clc
leave
dec
lahf
fcmovnb
cmp
int3
push
dec
push
mov
hlt
daa
roll
ret
push
pop
push
adc
ljmp
lods
idivb
sub
repz
and
aaa
stos
cs
les
or
push
outsl
push
dec
mov
int
xor
sub
sub
dec
dec
xchg
int
mov
daa
pushf
sub
test
mov
in
jo
lret
mov
inc
ljmp
out
pop
pop
sub
aas
inc
xchg
jnp
jp
pop
mov
mov
push
test
pop
inc
adc
jae
and
inc
push
jnp
aad
not
mov
cltd
sub
fildll
jl
add
fcomip
jo
aam
jns
or
lret
inc
mov
sti
incb
adc
loop
in
sub
fbstp
lret
jg
test
nop
jns
mov
lds
fdivs
push
sub
mov
das
std
or
stos
pop
xchg
imul
fldt
rclb
jo
sub
jnp
shlb
pushf
adcb
iret
mov
dec
sbb
adc
pushf
ret
adc
cmpsb
xlat
cmp
sarl
adc
xchg
jl
mov
sub
pop
jp
notl
mov
xchg
add
mov
sbb
pop
not
xor
aas
cwtl
shrl
enter
xchg
cld
pusha
cmp
add
push
imul
pop
es
add
pop
arpl
pop
and
xor
dec
sbb
inc
pop
hlt
add
repnz
xor
mov
mov
lea
mov
mov
das
xor
pop
or
sbb
inc
cmp
or
xchg
fwait
outsl
bound
les
ljmp
push
push
add
aam
jp
sbb
inc
add
jp
dec
sbb
loop
pop
pop
aaa
xor
aam
imul
ror
mov
or
jecxz
or
xchg
scas
xchg
scas
shrb
daa
arpl
cld
pop
mov
shr
enter
rclb
xor
jnp
aad
sbb
push
mov
hlt
dec
push
or
mov
test
xchg
fidivrs
mov
xor
pop
and
es
decl
gs
imulb
fucomi
pop
dec
xor
dec
fs
call
fidivs
testl
std
xor
inc
dec
jecxz
in
aas
fstl
pop
push
mov
mov
xchg
adc
or
sub
repnz
pusha
mov
push
dec
xchg
pop
ds
int3
push
push
int
sbb
pop
dec
push
adcl
lahf
mov
insb
and
xchg
cmp
jo
into
xchg
sub
jge
ret
test
sahf
ja
adc
bnd
lods
xor
adc
jbe
push
insl
mov
sbbb
imull
jns
ret
sub
ljmp
sbb
scas
adc
stc
and
xor
mov
mov
pavgw
out
mov
shl
cmp
push
cmp
frstor
shll
lea
push
jno
add
ficoml
mov
mov
dec
mov
fimull
dec
int3
mov
jne
cmc
stos
dec
pop
mov
bound
out
cli
xor
popf
and
lds
loope
mov
sbb
rolb
call
shlb
push
int3
aas
mov
faddl
mov
or
mov
enter
jno
std
pop
dec
sbb
sbb
jg
stc
and
popf
scas
sbb
js
dec
jne
push
lock
iret
xor
mov
or
and
pop
jl
jge
adc
inc
ljmp
lea
push
test
insl
ljmp
pop
pop
pop
sbb
or
xchg
fistl
subb
idivb
xchg
push
mov
push
xchg
xor
sub
dec
pop
mov
cld
fucomip
mov
xchg
fimuls
sub
sbb
ficoml
out
mov
push
jmp
enter
cmp
mov
dec
pop
out
aam
aam
and
cs
negl
sub
xchg
out
into
out
pop
xor
insb
dec
lea
xlat
fwait
pop
int
mov
movsl
sbb
mov
andl
ret
addl
sub
sbb
into
or
mov
push
fadds
xor
pop
add
clc
imul
fimull
ljmp
aam
shll
lea
xor
in
push
add
inc
sbb
push
mov
decl
stc
imul
pop
cli
mov
cmpb
data16
je
adc
call
loopne
repz
xor
xchg
pmuludq
lcall
mov
lret
sub
idivl
push
aaa
xlat
mov
in
ja
adcb
dec
out
cld
jns
sarl
subb
mov
es
cmp
testb
inc
ss
pop
popf
das
mov
mov
add
sti
in
and
xchg
sbb
jmp
push
add
jb
test
lds
pop
shll
jno
pop
or
hlt
gs
cmp
or
xchg
out
scas
or
pop
adc
mov
adc
pop
es
jb
pop
or
int3
mov
cmovg
popf
call
in
adc
pop
cmp
jns
stc
dec
test
cmp
iret
pushf
es
loopne
xlat
xor
xor
daa
test
bswap
pop
flds
pop
shrb
mov
cmp
repnz
dec
xorb
jp
mov
cmp
sbb
push
mov
sbb
test
clc
mov
ret
rep
xor
mov
mov
scas
cltd
xor
pop
cmpsl
out
adc
inc
jle
test
jo
adc
iret
lcall
xchg
outsl
stos
push
xchg
ljmp
inc
mov
mov
jg
xchg
add
push
sbb
mov
int
lods
subl
sbb
pop
sarb
aaa
insl
in
fnstenv
lods
shll
stos
jno
dec
out
pop
jo
mov
pop
popa
jno
jmp
outsb
mov
ja
sub
push
push
out
add
lods
in
pop
sbb
mov
in
pusha
jo
ds
adc
pop
test
mov
inc
lret
mov
push
ret
sub
icebp
dec
adc
imul
mov
test
sub
or
jnp
xchg
loope
out
pop
and
inc
pop
push
mov
push
sbb
jnp
xlat
mov
fsubr
iret
xchg
sbbb
mov
add
push
stc
cmp
repz
mov
dec
scas
sub
jecxz
stc
mov
ret
out
popa
iret
imul
mov
and
and
push
pushf
hlt
int3
xor
mov
lahf
add
xor
xlat
in
xor
push
jnp
jnp
js
mov
aam
lds
stc
inc
sub
movsb
inc
cmp
xchg
pop
out
bnd
xor
fs
mov
mov
mov
or
mov
addr16
leave
push
jns
cld
lret
clc
jg
or
imul
sbb
jno
movsl
nop
sti
inc
outsb
xchg
jg
jno
jp
jg
jb
mov
cmpsl
mov
sub
fists
dec
stos
pop
jnp
test
push
sub
pop
pusha
pop
scas
sbb
cmc
mov
push
dec
out
inc
pushl
jmp
arpl
push
std
lahf
xchg
push
xchg
pop
rcl
aaa
push
cmp
cmp
mov
sbb
push
mov
cmp
movsb
and
std
xchg
data16
aad
pusha
shll
addl
mov
jno
mov
arpl
jecxz
dec
cmp
inc
add
add
std
cs
mov
shl
lock
pop
jg
lret
insb
mov
jge
das
loope
mov
in
xor
pop
or
out
test
adc
push
jnp
pop
dec
test
xchg
and
out
mov
dec
add
in
mov
dec
clc
aad
lret
fisttpl
scas
xchg
push
stc
mov
mov
inc
popf
cwtl
mov
lcall
dec
inc
sbb
movsb
adc
stc
loopne
cltd
add
xor
sbb
jmp
cmp
ljmp
lds
fisubl
sbb
daa
and
xchg
rclb
sub
push
int
cltd
aas
lcall
mov
or
xchg
sbb
mov
and
arpl
sub
mov
mov
clc
push
dec
insb
arpl
jle
lods
sahf
lahf
xchg
pop
inc
adc
into
mov
inc
xlat
or
bound
push
insl
pop
mov
push
xchg
pop
sbb
icebp
sub
clc
jbe
and
mov
pop
andb
fstpt
adc
iret
cli
mov
sahf
loop
insb
add
mov
out
inc
mov
lret
cmpsl
adc
jns,pt
push
cmp
cmp
lea
sbb
jle
or
ss
and
sub
adc
and
dec
popa
ljmp
push
add
roll
adcb
in
sub
sbb
xor
mov
and
mov
jmp
movsl
test
setge
cs
pushf
add
push
adc
ret
aaa
xchg
adc
cmpsb
into
int3
int
je
inc
ljmp
jmp
movsb
icebp
fcmovbe
pushf
mov
inc
xchg
and
bound
lea
bound
xchg
pop
aas
jae
xlat
loop
cmpsl
test
xchg
std
idivl
pop
nop
popf
push
dec
inc
jmp
int
adc
jno
rcl
rorl
loope
adc
mov
inc
pop
in
scas
decl
pop
push
bound
dec
pop
mov
dec
xor
jae
sar
outsb
stos
andb
cmpsb
sti
jnp
add
cli
test
xchg
sbb
dec
rcrb
pop
xchg
jns
dec
push
sub
xchg
xor
pop
mov
ja
jecxz
add
jle
sarl
data16
stc
mov
nop
jbe
aaa
stos
sarb
and
addl
jmp
bound
jb
jmp
cwtl
add
enter
push
cmp
les
test
push
gs
push
aad
jmp
imul
or
imul
sub
push
mov
pop
pop
pop
mov
dec
sub
pop
xchg
popa
and
and
jno
push
jb
outsl
lcall
out
lods
or
sub
pop
roll
iret
loop
dec
outsb
sti
jg
mov
lods
arpl
add
pop
popa
mov
test
mov
stos
cmp
dec
mov
fcmovb
test
jg
pop
ljmp
int3
nop
addl
ror
push
pop
ja
dec
or
sub
dec
mov
movsb
test
and
fwait
movsb
lret
cld
jnp
mov
aad
cwtl
arpl
push
and
mov
sbb
adc
push
xchg
xor
pushf
sbb
addb
xchg
sbb
lock
clc
sub
div
cltd
insl
add
sub
jg
push
or
das
inc
push
or
mov
repz
addr16
jg
outsb
ret
sub
jecxz
mov
sub
cmovp
or
das
pop
inc
jmp
mov
xchg
or
ss
mov
das
jno
scas
imul
outsb
gs
xchg
cmpsb
mov
jge
pop
iret
lea
push
lods
cltd
in
jnp
es
push
adc
pop
adc
fsubr
dec
mulb
mov
inc
fldt
adc
mov
int3
jmp
push
pop
inc
jae
leave
add
addb
jg
stos
adc
loopne
jle
mov
add
je
cmp
sbb
sub
sbb
popf
leave
mov
mov
pop
cltd
rcll
cmpsl
sub
mov
jbe
shl
test
mov
jge
mov
push
lods
pop
sbb
push
xchg
lret
xchg
dec
mov
rol
push
dec
dec
mov
insb
aam
loopne
mull
das
add
test
mov
mov
es
imul
jl
cmp
mov
das
pop
clc
lods
cmc
scas
jne
fstpt
mov
imul
rcl
add
push
lret
shll
dec
or
or
mov
mov
mov
mov
push
and
mov
mov
es
lret
sub
cmp
hlt
push
popf
stos
fcomp
mov
or
cwtl
mov
sahf
add
push
mov
mov
icebp
mov
or
popa
sub
inc
ljmp
or
arpl
mov
clc
or
mov
push
mov
sub
mov
adc
xchg
push
addr16
mov
test
test
mov
xchg
imul
or
cmpsl
adc
xlat
bound
imul
sahf
ss
mov
pop
inc
das
rorl
pop
shrl
cwtl
ret
in
into
repnz
imull
mov
pop
jp
rcll
imulb
xchg
subb
push
test
fiaddl
or
daa
movsl
std
and
aad
les
xor
push
mov
sub
mov
dec
ret
sti
mov
rcrl
fdivr
pop
jae
push
mov
sub
push
and
test
and
sbb
adc
mov
cmp
icebp
push
inc
adc
inc
add
shrb
aad
mov
dec
insb
arpl
pop
xchg
std
xorl
out
pop
jb
dec
and
ret
iret
xor
cmp
sub
jle
xlat
xor
xor
cmp
pop
pop
push
pop
int3
and
repz
js
subl
jl
mov
out
out
sub
mov
stc
or
add
fidivl
push
addr16
mov
or
setl
xorb
cmpsl
dec
or
jo
xor
in
mov
subl
mov
mov
cmc
cmpsl
cli
sub
imul
pop
mov
mov
add
es
sub
test
xor
add
outsb
cmp
xrelease
and
mov
je
lock
mov
syscall
cmp
call
ficoms
je
lahf
xchg
test
shlb
sbb
sbb
rorl
scas
xor
push
les
push
jno
sarl
loopne
mov
mov
mov
loop
stos
rolb
aaa
mov
int3
pop
mov
leave
jo
mov
pop
jl
fisubrl
lret
add
lahf
mov
lods
cmp
mov
adc
shll
adc
jge
in
and
in
xchg
sbbl
ficoml
mov
cmovo
xor
fsubrs
les
adc
xor
popa
push
add
lret
fildl
pop
cwtl
cmp
aad
in
repz
or
adc
mov
mov
rclb
loop
popl
dec
xchg
mov
sub
or
and
mov
sbb
sub
lahf
scas
fstl
pop
push
pop
aam
test
mov
add
nop
mov
mov
pop
leave
jns
xchg
jnp
xor
and
pop
cmp
mov
outsl
and
pop
mov
faddl
mov
pushf
push
cli
in
push
je
lods
outsl
mov
mov
pop
push
cli
push
xchg
dec
mov
loope
ja
jo
out
lret
mov
shrl
lds
in
repz
mov
sub
mov
dec
mov
out
ljmp
jno
mov
mov
test
scas
test
dec
xor
mov
cld
nop
icebp
add
or
movsl
mov
pop
scas
inc
mov
scas
jge
sub
pop
fs
leave
adc
movsb
lea
mov
inc
jbe
sbb
hlt
ljmp
adcb
push
xchg
adc
push
sub
dec
and
jnp
cmp
les
subb
cmpsl
cmpsb
mov
or
adc
daa
xor
inc
lods
adc
dec
dec
subb
fisubs
and
xchg
lahf
fdivl
mov
jbe
out
fmull
jno
fbld
mov
jl
xor
sbb
jb
dec
jmp
cmp
push
out
lea
out
mov
movsl
sbb
jp
push
lods
repz
pop
add
std
dec
mov
or
push
lods
jae
aaa
daa
fs
xchg
shrl
cmpb
adc
adcl
inc
xor
jns
pop
sub
nop
test
adc
lock
bound
subl
mov
or
sub
and
mov
inc
push
and
sub
xchg
rcr
adc
inc
imul
cmp
adc
stos
mov
sub
inc
and
mov
push
xlat
popa
or
sahf
jno
pusha
mov
lea
adc
xchg
ljmp
mov
add
sti
mov
pop
mov
jl,pt
mov
inc
loop
out
and
mov
pushf
sbb
cmpl
pop
mov
test
sub
jb
ss
popa
push
out
sbb
mov
in
dec
sbb
push
ja
fcomps
cmp
loop
popf
xchg
cltd
mov
dec
dec
ljmp
pop
push
mov
jo
dec
pushf
rclb
movsb
or
adc
xchg
jge
lea
rclb
lcall
mov
xor
adc
dec
lea
xlat
push
cmpl
iret
push
fiaddl
nop
xchg
xlat
fcompl
pop
lock
outsb
mov
mov
sbb
sbb
mov
mov
ljmp
xchg
xchg
pop
imul
in
cmpb
pop
dec
fwait
mov
pop
iret
inc
mov
iret
xchg
and
push
or
inc
and
push
js
add
clc
jmp
not
pop
pop
jns
xlat
hlt
dec
mov
mov
jl
push
push
fcmovb
jmp
or
mov
bound
sti
rcrb
popa
out
rolb
fisttpll
pop
mov
enter
lea
jnp
adc
mov
mov
fdivrp
sub
fiadds
imul
scas
push
mov
inc
push
xchg
leave
lret
fstpt
cld
mov
mov
rcrb
push
jmp
dec
cmp
cltd
insb
in
inc
scas
roll
mov
sub
lea
repnz
rorl
and
repz
shll
fildl
iret
pop
jb
adc
xchg
push
leave
mov
or
sub
fnsave
in
int3
movsl
lret
andb
sbb
mov
xchg
mov
dec
test
sub
mov
pop
jg
xchg
jmp
inc
add
jnp
in
ss
negl
add
jae
je
xlat
fs
sbb
push
jbe
and
fwait
xor
xor
nop
cmp
sub
add
cmc
mov
mov
ss
inc
gs
dec
in
fs
mov
mov
ljmp
stos
mov
and
cli
cli
xchg
jbe
test
sbb
cwtl
or
pop
cmp
lahf
dec
das
inc
icebp
cmp
in
xchg
cli
lret
dec
aaa
movsb
mov
ds
cmp
jo
jae
push
mov
sub
jle
std
dec
push
mov
pusha
dec
sbb
mov
push
mov
idivb
cmpsb
or
jae
loop
cmc
fisttpl
jmp
sbb
mov
sahf
in
ficompl
hlt
stc
or
int
sub
sub
jmp
mov
xchg
push
dec
push
pop
je
sti
in
jae
addl
enter
jecxz
pop
sbb
std
mull
or
aam
or
cmpb
mov
fdivl
andb
mov
pop
test
xor
inc
cli
cmpsb
xor
pop
sub
jp
cmpsl
popf
sbb
test
scas
dec
popf
stos
xor
shl
or
hlt
repnz
test
shll
mov
out
cld
xchg
and
sbb
sub
pop
push
fcoml
outsb
jp
pop
pushf
addb
js
inc
lock
test
lock
cli
adc
rcrl
nop
push
inc
cmp
xor
push
inc
rclb
push
pusha
inc
cld
pop
mov
iret
int3
in
insl
or
add
cmp
adc
stos
jg
outsb
stc
mov
scas
mov
test
aam
or
cmp
jns
sbb
pop
xchg
shrl
aas
bound
inc
lret
jle
std
daa
add
out
mov
fldt
mov
daa
test
mov
jge
hlt
jbe
add
mov
pusha
loop
mov
push
pusha
subb
and
mov
movsl
push
push
leave
test
dec
into
mov
hlt
leave
adc
add
mov
in
mov
push
add
xchg
pop
add
lret
mov
cmpsl
cmp
dec
add
bound
or
jle
pop
out
sbb
cmp
icebp
fwait
lahf
mov
aaa
int
xchg
mov
cli
cli
lds
cmp
and
inc
fbld
mov
shlb
mov
ja
pop
jl
sub
fsubl
js
xchg
popa
or
jne
add
mov
test
push
pushf
adc
sub
dec
add
ss
mov
pop
or
iret
push
dec
nop
push
scas
push
test
mov
cmp
or
or
es
add
push
push
push
mov
xchg
mov
mov
cmp
push
stc
pop
jg
cmovno
cmp
out
into
mov
outsl
pop
xchg
into
fcmove
orl
xchg
jge
stos
fwait
inc
jns
pusha
sahf
inc
add
sub
cmpsb
sub
shr
adc
dec
ljmp
in
in
insb
movsb
sbb
cmp
mov
iret
jmp
cli
test
cli
xchg
sub
lret
jb
rcll
movsl
dec
cmc
xchg
mov
sti
adc
sarb
rcrl
xor
cltd
pop
loopne
movsb
add
popf
mov
movsb
push
push
insl
xorb
daa
sbb
insb
dec
sarb
mov
lar
shrl
cmp
xchg
iret
aaa
adc
arpl
call
aad
dec
sub
lret
icebp
add
jmp
cmp
nop
int3
mov
xor
fiaddl
shrb
aam
cmp
mov
cld
dec
xor
mov
mov
andl
pop
fstpl
cs
xchg
jg,pt
xlat
xor
push
scas
mov
sub
mov
xor
adc
inc
lods
mov
jecxz
outsb
sahf
or
outsb
shlb
xchg
enter
scas
inc
addr16
adc
inc
mov
sbb
xchg
data16
sbb
stc
sbb
mov
out
and
inc
and
jg
adc
push
fistpl
notl
mov
mov
iret
addb
cmp
mov
cmp
stc
adc
inc
ret
call
sbb
mov
pop
mov
aaa
or
dec
leave
xor
cmp
jle
imul
rcrl
inc
in
cmp
je
inc
jecxz
dec
add
enter
pop
and
push
bound
scas
je
int
add
add
test
mov
xchg
hlt
push
sbb
jle
mov
mov
out
xor
xchg
movsl
xchg
jo
mov
sti
mov
fbld
sar
hlt
pop
ret
jmp
mov
clc
lea
mov
adc
lock
jle
in
ret
cli
mov
mov
inc
std
js
inc
lock
jecxz
cmp
into
xor
lods
lea
jns
push
nop
dec
hlt
mov
pushf
iret
pop
mov
idivb
aam
in
fisubl
sarb
sub
rorb
lods
aas
mov
or
fdivrs
outsl
js
dec
in
pushf
std
xchg
sub
icebp
mov
sbb
pop
inc
jge
sbb
xchg
loop
enter
lods
jle
popa
ljmp
es
popf
fistps
in
mov
xchg
scas
mov
and
in
fldt
es
out
cltd
adc
das
cltd
das
xchg
jmp
cmp
movsb
mov
aam
pop
mov
and
pusha
ljmp
fisubrs
pop
jbe
sbb
push
push
cld
pop
nop
cwtl
or
sub
cmc
mov
xchg
sub
test
jbe
into
fs
in
xchg
clc
xchg
mov
test
dec
pop
ret
fidivl
andl
ret
cmpsb
out
dec
lods
ja
xor
rcll
test
mov
inc
sahf
inc
ftst
cmc
dec
stos
es
roll
pop
add
mov
dec
leave
imul
mov
jno,pt
cs
test
add
mov
or
loop
loop
movsb
push
std
cld
sbb
flds
data16
pushf
mov
stos
popf
insb
mov
lods
jecxz
jb
in
cmc
mov
and
lods
inc
ds
sbb
fs
outsl
mov
xchg
maxps
cmp
sbb
and
push
inc
jle
lods
xor
outsb
mov
in
push
fsubrs
ljmp
ss
mov
xlat
lret
mov
jmp
cmpsb
inc
test
mov
dec
test
divl
fs
ja
std
aas
mov
inc
mov
push
jne
sbb
mov
ss
jmp
push
mov
loop
xchg
outsl
adc
cmc
push
adc
repz
jg
or
repnz
or
pop
in
push
pop
ja
shr
fistl
push
sub
ficoms
ret
mov
mov
in
sbb
xchg
xchg
cmp
fcoms
ljmp
pop
mov
inc
push
movl
lods
ja
ret
cmp
lock
push
out
jp
aas
and
lods
mov
sbb
lods
out
jecxz
mov
add
add
jns
imul
cmp
data16
mov
mov
cmp
xlat
fs
push
jecxz
imul
xlat
aaa
shlb
ljmp
xchg
arpl
sub
dec
mov
pop
jae
push
sbb
out
xor
ja
cmp
imul
cmpsl
rol
mov
adcb
imul
dec
popf
imul
mov
mov
push
jecxz
inc
add
loop
test
sub
lcall
push
push
je
jmp
leave
cmpsl
lahf
dec
das
in
mov
cli
mov
jne
ja
dec
jmp
leave
mov
jae
mov
mov
int3
fidivrl
cmp
in
adc
or
add
dec
pop
out
fdivs
jb,pt
cmpsb
dec
sti
jno
movb
int
xlat
gs
xchg
jnp
out
dec
mov
das
and
cmp
jbe
pop
xlat
aam
and
insl
xlat
or
jbe
jae
sub
cwtl
mov
mov
jle
shl
jl
fsubp
aas
cmpsb
jle
into
lods
xchg
mov
sarb
inc
out
std
or
lds
sbb
jbe
mov
in
sbb
dec
fdivl
lods
jmp
in
push
inc
idivl
xchg
add
jecxz
cmp
add
shll
idivl
mov
pop
sarb
sub
scas
bound
movsb
movsl
push
jb
sub
bound
mov
test
push
mov
mov
shlb
cmpb
jle
sub
test
jl
sub
idivl
daa
mov
jbe
cmc
jmp
sbb
sti
cmp
mov
inc
insb
fnstcw
inc
mov
push
mov
xor
mov
and
adc
leavew
ja
or
fs
call
mov
repnz
fwait
mov
insb
test
mov
jno,pn
push
jo
push
iret
idivb
fcoms
movsb
neg
lcall
aad
movsl
mov
xchg
imul
pop
inc
int
ljmp
ret
out
lcall
and
lret
push
fcoml
leave
pop
into
cmp
cmpsb
sbbb
aam
push
xchg
sub
and
xor
repnz
les
sbb
shrb
inc
mov
pop
shrb
and
sbb
jo
mov
sbb
not
test
mov
mov
into
movl
mov
jecxz
lahf
aaa
and
mov
lret
cmp
inc
pop
dec
fiaddl
or
xchg
push
test
xor
pop
dec
out
inc
repnz
mov
insl
cmp
into
xchg
inc
mov
or
loope
inc
xor
stos
push
imul
in
ficoml
dec
or
jae
mov
xchg
inc
jne
push
cltd
adc
js
sti
andl
add
adc
adc
pushf
test
inc
dec
cli
inc
push
jl
pusha
ja
imul
jb
in
les
xchg
inc
cltd
pop
jmp
mov
mov
rcpps
in
mov
dec
jb
pop
jle
inc
jg
scas
flds
adc
out
scas
fcomip
inc
adc
xchg
mov
pusha
in
jecxz
cmc
and
mov
cmpsl
mov
xor
inc
cmc
dec
popa
mov
pop
sub
inc
push
xchg
pop
andb
cmp
and
push
repz
push
stos
mov
cld
sbb
inc
inc
push
mov
clc
push
aad
fwait
sbb
sub
jnp
lds
nop
pop
cmpsl
rorb
cmp
fwait
add
inc
subb
xlat
imul
sub
cmpsb
cmp
pop
dec
and
push
fcmovnb
add
jmp
mov
mov
rorb
mov
pcmpeqd
jns
js
jg
add
cli
push
sbb
push
ljmp
iret
les
gs
add
xlat
sub
pop
xchg
mov
pop
insl
xchg
insb
mov
and
push
jnp
test
adc
dec
enter
push
mov
and
jl
ret
push
xor
jecxz
lret
pop
or
aad
adc
push
cld
xor
and
sub
pop
in
inc
sub
fdivrp
cmpsb
xchg
rcll
insl
jle
sarl
int
dec
mov
les
ret
push
mul
ljmp
bound
fmull
jmp
mov
mov
enter
mov
out
out
mov
aas
sub
adc
cmpb
add
sub
movlps
stos
jge
fdivrs
out
sub
jmp
pop
pop
repz
incl
fs
adc
sbb
ja
jl
enter
pop
fmuls
mov
in
data16
mov
aam
enter
gs
imul
mov
outsb
ficompl
addr16
ficomps
dec
xchg
repnz
mov
xchg
mov
mov
inc
xor
xchg
aas
push
into
js
movsb
mov
ja
shrb
sti
xor
add
cmpsl
push
daa
movb
inc
lcall
movsb
xchg
insb
sarl
jb
xchg
push
test
sub
imul
mov
scas
aad
les
mov
movsl
dec
sbb
jno
loope
cmp
mov
std
pusha
mov
xor
insl
shrl
leave
fidivrl
aad
push
push
dec
scas
lods
push
xchg
hlt
push
sbb
sahf
movb
movl
ja
inc
inc
bound
jnp
adc
in
and
jl
xchg
dec
mov
sbb
in
shrl
and
or
lahf
ja
mov
add
loop
jge
les
into
jnp
lret
mov
fsubrs
aaa
lods
inc
sub
flds
add
or
xchg
ds
cmp
pop
mov
clc
insb
cs
imul
testl
jmp
dec
dec
push
out
sub
js
sbb
xchg
jmp
dec
aaa
or
fwait
int
add
in
les
or
push
mov
les
inc
or
lods
es
jb
into
mov
jg
lds
pop
shll
out
cwtl
sub
mov
xchg
sahf
pushf
cld
push
adc
sub
adc
mov
jne
mov
sbb
pop
inc
test
cmp
xor
xor
jnp
fwait
andl
mov
mov
int
call
lret
add
and
xchg
mov
fstpl
dec
and
insb
es
sbb
or
mov
sub
leave
cli
mov
or
mov
inc
fchs
scas
rcl
loope
out
pop
shrl
push
jle
popa
jp
cltd
xchg
mov
dec
hlt
sti
cwtl
loopne
lock
add
imul
xor
xchg
imul
cmpsl
das
fwait
push
or
rclb
cmpsb
mov
mov
fwait
or
popf
cmovl
ljmp
rorb
pop
test
ret
dec
cld
jbe
push
test
fisubs
xchg
mov
inc
jecxz
and
dec
or
shl
in
ja
icebp
ja
roll
push
xchg
in
mov
das
lret
sub
les
push
cmp
enter
dec
xor
lret
repnz
inc
sbb
jmp
mov
loope
jle
dec
ret
movsb
test
pop
bound
lods
out
add
out
add
test
push
adc
xor
xchg
add
mov
sbb
mov
subl
movsl
or
mov
ss
add
xor
pop
push
lock
and
inc
cltd
mov
inc
cltd
pop
scas
push
insb
jle
xchg
fwait
mov
leave
fwait
or
js
xchg
jnp
pushl
mov
imul
cltd
mov
xchg
rcrb
cmp
jp
in
pop
cmp
lcall
pop
and
out
movsb
dec
xchg
sub
xlat
lret
ret
aas
mov
sub
and
mov
add
and
sbb
sahf
and
bound
jp
jl
pop
bound
addr16
fimull
cmp
aad
cmpsl
cmp
negl
sbb
jmp
pop
add
jb
pop
pop
fldcw
jmp
and
inc
out
sub
mov
inc
mov
pop
loope
fwait
movl
xor
jl
imul
stos
and
out
push
shl
and
push
pop
push
cmp
icebp
mov
dec
push
jae
mov
mov
inc
icebp
xchg
popa
mov
in
mov
adc
xor
cli
mov
sub
fcoml
mov
mov
ljmp
add
xchg
mov
out
ds
addb
test
jecxz
mov
adcb
loopne
popf
dec
mov
sti
out
add
add
out
ficoms
psrlq
outsb
cmp
xchg
xor
es
jne
pop
ret
fistpll
mov
jge
sub
test
push
jmp
jg
cmpsl
pop
repz
lahf
xor
fsubl
and
test
mov
inc
xor
push
mov
loope
adc
hlt
and
movsl
xor
cvtps2pd
mov
ljmp
xchg
xor
gs
xor
test
jle
pop
or
ja
fnsave
mov
xorb
dec
xchg
dec
jo
xchg
pop
push
jle
mov
and
daa
push
sub
add
les
enter
or
and
cmpsb
mov
cwtl
ss
mov
jbe
adc
subl
repnz
mov
orl
into
fldl
mov
call
aaa
std
fstpl
test
cmp
mov
and
xor
mov
mov
out
imul
pusha
or
xchg
repnz
push
insb
stos
push
repz
cmp
lret
pop
xor
jns
dec
pusha
aam
inc
cmc
fwait
test
push
pushf
push
das
add
push
loop
outsl
es
icebp
cmp
sub
and
push
sbb
cltd
pop
dec
mov
jmp
cmp
jle
dec
movsl
stos
bound
divl
pop
icebp
std
add
or
jae
stos
in
sbb
stos
imull
loop
dec
adc
data16
cwtl
lahf
insl
mov
mov
loop
push
or
dec
rcl
cli
das
aad
mov
xor
repz
popf
xor
notl
test
fidivl
std
inc
dec
lret
arpl
imul
mov
lahf
jne
inc
jle
movsb
pop
movsb
and
sub
xchg
jge
cs
and
xor
mov
add
into
cli
xor
into
scas
mov
mov
dec
in
insl
cli
fs
xor
cmp
iret
cli
movsl
dec
out
inc
adc
dec
out
std
shll
xor
ljmp
stos
xor
gs
mov
popa
ja
xchg
stos
xlat
daa
rclb
dec
ljmp
push
or
outsl
dec
or
mov
dec
xor
fistpll
and
nop
pusha
orl
imul
sbb
popf
sbb
ret
add
jnp
xchg
inc
rclb
aad
push
adc
mov
jne
inc
lcall
mov
dec
mov
je
adc
cld
cmpsl
sti
add
mov
add
jne
ret
dec
xchg
jge
pop
mov
hlt
rol
test
sti
cmp
loope
shl
dec
imul
sar
push
dec
mov
push
mov
cwtl
aam
push
ret
iret
js
pop
mov
mov
enter
rclb
not
pop
and
mov
inc
repnz
jns
popa
push
mov
cmp
mov
xchg
data16
pop
sub
push
xchg
pusha
gs
js
insl
xor
inc
jecxz
inc
test
int
fcmove
test
je
or
jge
jo
add
xchg
daa
pop
stos
jbe
inc
out
cmp
fucomip
test
inc
xor
or
xchg
inc
jmp
jp
lods
pop
cmp
cmp
adc
add
shrb
pusha
int3
std
mov
cmp
and
idivb
cmp
mov
dec
xor
scas
pop
push
ret
pop
je
pusha
stos
iret
inc
dec
xor
in
insl
rcrl
or
push
stos
pop
cmp
daa
fcomip
aam
xor
cli
orl
sbb
and
mov
xchg
imul
fs
repz
cmp
cmpsb
aas
jl
or
daa
icebp
mov
out
dec
arpl
test
mov
adc
test
dec
test
in
aas
adc
fwait
icebp
aad
sbb
pushl
sarb
movsb
fildl
out
sub
jne
xor
pop
mov
mov
lds
xchg
mov
mov
ds
lds
dec
sub
addr16
pop
dec
push
fistl
in
mov
fxch
cltd
mov
inc
cmp
bound
fcoms
pop
sahf
push
fcoml
lock
lock
inc
in
and
outsb
in
js
mov
dec
cltd
jmp
xchg
dec
cmp
xchg
sub
dec
daa
clc
test
sbb
cltd
aas
mov
lods
dec
bt
cs
mov
pop
xor
mov
cmp
movsl
xchg
push
mov
mov
pop
or
jmp
sahf
add
scas
outsb
jmp
xchg
in
pusha
repnz
into
mov
push
push
mov
out
ds
mov
adc
cld
fwait
loopne
jb
shl
push
inc
xchg
icebp
cld
mov
or
jo
and
mov
cmpsb
aam
dec
push
push
xor
pop
je
xorl
xor
out
cmpl
pop
dec
xlat
sub
and
mov
xchg
push
adc
jne
add
imul
movsl
dec
es
xchg
lods
mov
into
cld
pop
jg
jmp
aad
and
mov
mov
jmp
and
lahf
sbb
pop
mov
sub
test
rolb
push
stos
pop
sbb
lret
les
scas
ss
popa
or
jnp
popf
sub
add
loopne
mov
xor
xor
fdivrl
ret
cs
add
pop
jge
and
out
push
add
mov
pop
jae
push
mov
inc
clc
add
mov
int
push
inc
mov
mov
fwait
sarl
mov
lret
fsubr
sbb
xlat
adc
div
jl
xor
test
xchg
add
sub
mov
pop
jns
xor
dec
jbe
dec
lds
sub
hlt
lock
mov
pop
ret
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
decl
call
stc
imul
mov
xor
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
push
mov
or
mov
xor
cmp
lcall
mov
dec
add
cltd
and
out
and
or
sbb
and
arpl
lea
repz
add
xchg
dec
mov
stc
imul
jmp
jno
pop
mov
scas
sub
xchg
xchg
pusha
add
orl
popa
test
pop
xchg
int
jmp
and
sub
inc
sarl
mov
scas
sub
sbb
in
jmp
popf
lds
out
scas
imul
insl
pop
sti
mov
pop
repz
outsl
add
jno
pop
stc
imul
loop
mov
sbb
imul
out
stc
imul
push
mov
mov
stc
imul
mov
xor
push
stc
jnp
cmp
mov
out
jmp
push
mov
out
stc
imul
mov
mov
stc
imul
mov
mov
stc
imul
mov
cltd
out
jmp
push
mov
out
stc
imul
mov
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
std
subb
imul
mov
mov
push
ret
outsl
sahf
cmp
mov
mov
stc
imul
mov
cmpsl
xchg
and
gs
jmp
in
push
stc
cmp
inc
mov
mov
push
stc
imul
mov
imul
cmp
mov
out
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
mov
mov
push
stc
imul
popf
jecxz
notl
inc
cmp
adc
inc
outsb
sub
pusha
adc
lods
add
cmp
icebp
cmp
xor
push
inc
fldt
lahf
in
add
cs
mov
inc
dec
or
sub
outsb
pop
jp
out
push
daa
je
mov
inc
jecxz
adcb
out
xchg
sub
into
lods
pop
mov
repnz
icebp
mov
xor
aaa
outsl
or
pop
imul
mov
inc
adc
push
push
enter
xor
insb
mov
mov
fcompl
cli
fstp
fs
jae
loop
scas
test
sti
fcmovbe
jmp
push
mov
xchg
fnstenv
fcmove
jecxz
lods
ja
sbb
xor
xorb
pop
int3
dec
in
jnp
fwait
cltd
push
mov
fs
mov
cmp
aaa
imul
in
movsb
mov
insb
nop
xlat
mov
pop
push
js
add
cmp
and
jle
lock
aam
adc
cli
unpcklps
cld
js
or
je
ljmp
daa
popa
add
dec
inc
xchg
aaa
scas
andb
mov
jp
mov
fisttpl
or
add
adc
jbe
pop
lods
movsl
add
cmp
pop
or
or
fcomp
add
gs
in
data16
xchg
ret
push
adc
sub
je
mov
push
dec
ret
subl
arpl
fwait
daa
and
icebp
xchg
xor
mov
shll
add
lock
add
inc
add
mov
dec
jecxz
in
test
inc
jmp
cs
frstor
mov
aad
mov
xchg
daa
fnsave
cmp
ficoms
mov
test
inc
inc
mov
sbbb
add
lret
inc
roll
push
push
mov
pop
dec
mov
or
jp
lods
into
jbe
mov
mov
xlat
paddsb
arpl
or
popf
or
test
sub
adc
cmp
sahf
and
pushf
in
cmp
jmp
or
or
sahf
cmpsb
mov
dec
fldt
jns
push
mov
mov
les
xchg
add
xchg
adc
add
mov
movsb
ret
add
lds
mov
lds
sub
add
xorl
cmp
mov
aas
adc
add
dec
and
dec
pop
and
jnp
jl
sub
mov
add
pop
mov
mov
adc
push
adc
scas
sbb
or
cmpsl
cmp
addr16
jbe
mov
divl
cmp
in
dec
decl
cmp
mov
inc
xor
hlt
in
leave
int
or
and
inc
add
jecxz
fs
or
and
inc
jnp
mov
std
cmpsl
add
insb
jg
jo
js
push
stos
mov
arpl
fiaddl
loopne
inc
ret
popf
inc
sub
dec
ss
shll
repnz
push
jle
mov
xchg
daa
sbb
cld
mov
fsub
ffree
ss
and
rol
nop
movsb
pop
inc
sbb
jb
push
or
pop
mov
cmp
out
add
sbbl
mov
lds
mov
push
sub
pop
push
jecxz
sti
lret
pop
mov
inc
cltd
mov
call
aad
mov
lcall
lods
add
dec
xchg
push
bound
js
xchg
mov
outsl
nop
rorl
scas
shrl
adc
mov
in
mov
pop
mov
test
out
out
cmpsl
loopne
rorl
pop
lock
cwtl
lea
mov
fbld
cld
lret
sub
jo
into
lcall
or
int3
in
inc
push
fsts
fs
call
fbld
aas
in
jmp
pushf
cmp
dec
ror
das
mov
cmp
lret
xor
push
push
pop
repnz
jno
xor
movsb
sub
sbb
hlt
cld
addb
xor
les
or
sbb
cmpsl
pop
mov
push
mov
add
and
jbe
stos
xchg
stos
inc
aad
adc
jne
sahf
repz
jle
out
addl
aaa
imulb
and
roll
test
mov
sub
sbb
test
je
xor
inc
adc
jbe
out
sbb
mov
pop
subb
mov
ss
sub
cmpsb
pop
inc
inc
sbb
adc
sub
inc
test
xor
loope
sub
cli
xor
mov
or
repz
or
push
sub
out
dec
pop
inc
or
cmc
addr16
lods
mov
mov
mov
push
ffreep
mov
into
push
pop
fwait
into
push
xchg
insb
xchg
dec
dec
repz
in
addr16
jbe
adc
jno
jmp
sbb
dec
stos
mov
pop
rcl
push
dec
jno
test
ret
xchg
cmpxchg
lds
loopne
fstpl
insl
jp
inc
xchg
scas
pop
cmp
mov
inc
xor
push
dec
or
add
or
imul
mov
adc
lret
push
dec
mov
jo
sbb
mov
es
mov
cli
push
push
jmp
adc
stc
adc
add
ljmp
fnstsw
sahf
repnz
mov
push
lcall
xchg
mov
push
sub
lds
sub
cmpsb
jge
enter
ret
and
popf
push
cmp
leave
adc
sub
in
fsubs
jb
leave
in
mov
sbb
inc
out
fwait
int3
sub
es
xor
jb
aas
push
pop
cmp
call
out
stos
mov
inc
cli
jge
jne
in
rol
sub
xchg
hlt
ds
add
inc
inc
dec
out
sub
xor
mov
insl
adc
jns
jg
outsb
sbb
jns
fimull
js
lret
push
stc
mov
sar
mov
xor
sub
in
dec
inc
xchg
jecxz
and
and
dec
xor
inc
and
adc
mov
test
aam
add
rcrl
inc
sbb
sbb
cltd
stos
das
rcrl
aad
inc
hlt
inc
lock
lahf
mov
sub
pop
in
fldcw
sahf
fistpll
pop
push
cmpsb
out
mov
and
push
xor
aam
in
mov
lock
fdivr
cs
popa
jae
sub
movsb
out
and
decb
add
cmp
pop
pop
shrb
lcall
inc
popa
js
out
mov
aam
arpl
push
mov
xchg
les
rcl
repz
fwait
lods
sbb
insl
imul
jne
lret
les
add
mov
xchg
jle
imul
jnp
in
sbb
int
dec
movsl
sbb
js
xchg
add
lcall
mov
inc
ja
aaa
daa
sbb
arpl
andl
inc
push
lea
cli
test
out
rorl
cmp
add
lds
mov
sahf
push
pop
aas
stos
dec
xor
push
aad
in
xlat
inc
pop
loope
in
mov
push
call
int
xchg
out
xor
and
xchg
fsubrs
dec
ds
frstor
loop
and
sbbb
or
arpl
test
mov
bt
cmp
adc
cmp
sub
mov
pop
out
push
cmpsl
sub
scas
cmpsb
mov
cld
push
hlt
jae
xor
inc
mov
xor
outsl
jg
xchg
daa
cmpsl
cmp
into
jae
xchg
stos
loope
add
dec
sbb
sbb
sub
pop
popa
sub
iret
adc
push
and
xchg
sarb
mov
shrb
icebp
nop
int
sub
jns
inc
inc
fstp
mov
add
rcrb
mov
jae
inc
fsub
and
insb
daa
mov
mov
pusha
fs
dec
fldenv
cli
ret
ret
xchg
adc
add
ror
pop
aam
jno
push
dec
jg
jno
inc
xor
shrl
out
pop
orb
call
cmp
jp
or
lods
aas
add
xor
mov
ret
xor
mov
arpl
mov
test
xlat
out
jle
add
mov
loope
mov
data16
cltd
jecxz
leave
notl
sbb
sbb
or
in
daa
pop
mov
or
inc
std
cmp
lea
icebp
fsub
neg
xchg
inc
adc
shrl
or
pushw
or
jnp
pusha
jl
lea
loope
inc
andl
imul
scas
hlt
nop
and
push
push
dec
sti
jecxz
add
sbbl
cmpsl
mov
je
aaa
outsb
cmpsb
jmp
sbb
jb
stos
sbb
add
sbb
inc
ja
cmp
push
cld
sahf
and
inc
jp
nop
xchg
mov
lret
in
xchg
ret
out
pusha
outsb
dec
arpl
cmp
fs
sub
jae
cli
ret
mov
and
mov
jnp
cwtl
dec
nop
xchg
mov
push
in
call
jne
cmp
adc
lods
imul
shr
dec
add
pushf
sbb
fsubl
xchg
and
xor
leave
cmp
pop
adc
outsb
in
inc
sarl
hlt
dec
sub
add
sar
pop
jns
sbb
ret
push
mov
mov
add
push
icebp
outsl
push
popf
ret
xor
add
std
addr16
push
clc
repnz
and
jno
push
jmp
inc
addr16
sarb
jl
push
inc
sub
in
adc
mov
or
adc
and
or
pop
rol
or
mov
inc
sbb
add
inc
test
icebp
jecxz
in
or
sti
add
into
ds
fimuls
jmp
mov
sub
mov
aad
mov
fstps
add
out
js
int3
sahf
call
sub
aaa
pop
cli
popf
das
scas
bswap
push
stos
cmp
cli
mov
push
xchg
rcr
push
gs
inc
mov
pop
mov
pop
mov
xor
std
mov
adc
shlb
ljmp
ret
daa
lock
in
xchg
push
in
movsl
cwtl
cmpsb
sbb
push
leave
mov
cmp
push
ja
std
dec
stos
mov
repz
adc
fistpll
xchg
xchg
sti
xchg
aaa
fsub
xchg
push
sbb
or
sub
incb
push
inc
push
jmp
les
mov
xlat
lock
out
push
cmp
mov
adc
sbbl
gs
cmp
jecxz
jae
fistpl
popf
repnz
lret
xor
je
shll
push
jnp
imul
mov
clc
daa
int3
es
lds
xor
rolb
adc
pop
and
dec
fdivrp
pop
cli
es
lahf
dec
mov
xor
push
cmp
cmp
or
aad
adc
icebp
pop
idivl
add
jg
lods
aas
xlat
stos
jle
xor
addr16
cmpsl
and
push
jl
cmp
movsl
pop
jno
stc
out
xor
dec
pushf
jmp
push
inc
mov
call
xlat
testb
mov
mov
cli
xor
jmp
aaa
filds
adc
js
or
ljmp
fnstsw
pop
mov
imul
out
cmp
ja
insb
xor
cmp
jo
cmp
inc
rcrb
cmc
xor
cmpsb
hlt
mov
pop
xchg
push
movsb
je
dec
xchg
jge
pop
iret
iret
jg
mov
cmp
push
fmull
cli
fmull
cmp
mov
jae
in
jnp
in
inc
lret
mov
pusha
pop
mov
mov
and
pop
mov
jb
icebp
sbb
outsb
test
dec
xor
rorb
add
clc
pop
sub
xchg
jge
cmp
testb
add
xor
xchg
jl
jno
pop
mov
dec
push
xor
test
aas
mov
test
xorl
sbb
jb
ret
mov
lea
xchg
int
faddl
sbb
jbe
call
lods
pop
jp
jmp
loop
aaa
out
cmpb
xchg
repnz
insb
jecxz
jnp
out
or
jne
jns
sbb
and
mov
pop
daa
adc
mov
shrb
push
xor
add
lods
push
jb
mov
pop
test
mov
lahf
adc
jo
bound
mov
xchg
jp
xor
mov
subl
inc
lea
lods
mov
icebp
inc
clc
pop
pop
insb
or
in
adc
loope
xor
fcmovnu
sub
test
dec
cli
inc
jno
xor
repnz
sub
shl
add
fisubl
mov
sub
jle
sarb
mov
lds
lcall
add
mov
loope
mov
and
lods
jo
add
jo
outsb
aam
fwait
adc
stos
xlat
loopne
push
dec
inc
xchg
mov
bound
test
mov
imul
adc
add
pusha
jbe
sti
dec
push
fcomp
mov
inc
pop
ss
insl
fimull
mov
or
imul
cmp
fisubrl
mov
pop
mov
fmuls
icebp
pop
cwtl
and
nop
aaa
mov
push
movsb
pop
mov
in
fimuls
dec
adc
mov
pop
xlat
ret
xchg
pop
nop
fstps
sbb
push
xchg
mov
inc
lahf
xor
fstl
jg
fisubl
rsm
fisttpll
lret
out
and
enter
mov
pop
fcomip
pop
leave
cmpsl
add
cs
dec
idivl
mov
and
fstpl
pushf
mov
scas
dec
addl
daa
inc
pop
out
push
push
jmp
ds
ret
dec
mov
outsb
mov
or
mov
xor
rolb
nop
nop
nop
nop
jmp
