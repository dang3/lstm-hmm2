add
inc
les
add
and
or
add
es
add
adc
dec
inc
jb
add
inc
ret
test
popa
sbb
or
and
add
and
add
or
andb
add
or
and
iret
inc
inc
or
adc
test
mov
cmp
and
lods
adc
add
xchg
sbb
push
jbe
add
or
inc
subb
xchg
add
sub
shlb
test
and
or
add
xor
jp
mov
add
test
inc
add
adc
pop
or
push
mov
add
and
add
dec
adc
xor
add
nop
add
nop
dec
adc
loopne
adc
or
inc
xor
push
inc
orb
cmpsl
fsubs
sbb
add
add
ret
add
rclb
and
add
add
add
cmp
add
sbbb
add
push
or
inc
push
inc
add
rolb
add
and
add
and
or
and
add
xor
xor
loope
mov
inc
andb
mov
mov
push
xor
add
xchg
fs
mov
and
mov
or
shl
shlb
mov
adc
add
add
sub
rcrl
add
sub
andb
pusha
add
adc
add
add
ret
sbb
mov
add
or
mov
orb
test
push
test
insb
or
add
and
adc
sbb
fmuls
push
add
xor
inc
adc
andb
or
rclb
sub
addl
adc
pusha
add
test
and
loop
xor
inc
and
inc
inc
lret
loopne
and
inc
add
mov
add
and
push
dec
add
add
add
add
and
xchg
pushf
xor
adc
add
and
add
xor
or
add
add
mov
dec
dec
and
addb
and
mov
mov
add
addl
add
add
and
adc
xchg
or
add
inc
and
inc
adc
add
add
xchg
xor
imul
dec
adc
and
push
xchg
and
mov
sbb
or
pop
pusha
inc
mov
ret
inc
mov
addb
test
dec
adc
jp
inc
or
add
leave
andl
push
inc
adc
and
into
or
push
push
and
add
and
adc
add
inc
mov
add
dec
add
pusha
cmp
mov
add
popa
cs
sbb
add
inc
addb
sbb
or
adc
add
add
add
inc
adc
add
loopne
add
sub
cmp
adc
adc
and
add
nop
mov
sbb
push
adc
mov
inc
add
sub
sbb
movsb
add
add
add
and
and
add
xor
adc
add
cwtl
cs
add
orb
pusha
loopne
sbb
add
xchg
inc
and
adc
add
add
inc
add
and
or
inc
addb
loopne
test
pusha
add
or
or
adc
or
sub
xor
cmp
or
inc
add
mov
xor
adc
addb
ret
dec
inc
inc
and
mov
adc
add
or
loopne
inc
addl
push
add
xor
mov
push
cmp
or
and
or
or
or
mov
or
bound
and
mov
and
add
or
xchg
add
jl
loop
inc
into
sbbb
dec
adc
inc
sbb
aad
pop
leave
mov
enter
inc
addb
mov
and
adc
and
inc
add
add
and
push
or
and
xor
add
or
or
add
push
xorl
cmpsb
add
or
and
inc
sub
inc
add
test
add
add
xchg
in
xchg
add
inc
adc
or
adc
test
adc
add
addb
add
add
or
scas
and
add
or
pusha
orl
xchg
add
sbb
add
mov
add
add
or
sbb
test
add
orb
mov
push
inc
adc
sub
leave
or
xor
test
loopne
and
and
xor
inc
mov
add
pusha
add
rolb
add
inc
cmp
inc
xchg
addb
test
sub
fsubs
sbb
add
sub
test
or
inc
pusha
mov
inc
pusha
xor
andb
orb
and
mov
or
inc
mov
and
int
and
cltd
and
adc
mov
push
test
add
mov
test
add
sbbb
inc
inc
adc
sbb
or
dec
shlb
rcrb
push
add
add
mov
inc
add
pop
push
add
xor
add
inc
add
add
inc
movsb
orb
adcl
lea
mov
push
inc
testb
xor
inc
inc
add
add
orb
add
ret
roll
dec
or
add
inc
mov
push
add
test
adc
adc
add
add
nop
adcb
add
add
push
addl
orb
push
rolb
adc
rolb
xchg
dec
adc
or
or
movsb
and
adc
sbb
inc
sbb
sbbb
dec
mov
jb
fs
adc
adc
add
push
shrl
mov
inc
or
and
adc
addl
mov
and
or
sbb
xor
add
mov
adcb
mov
and
sbb
loopne
nop
inc
and
or
sub
inc
push
add
add
inc
push
je
nop
inc
adc
inc
add
mov
test
loopne
and
addb
and
add
add
add
inc
inc
inc
inc
and
add
add
enter
popa
adc
dec
add
add
or
sbb
add
mov
sbb
inc
xor
nop
or
inc
sbb
fs
and
add
andb
and
dec
add
add
add
add
xchg
add
sub
or
adc
add
leave
or
or
adc
bound
adc
pop
inc
add
adcb
sub
dec
or
add
add
add
inc
inc
xchg
inc
or
xor
add
push
lcall
mov
dec
addb
or
sub
add
sub
xchg
andb
mov
push
addl
sub
test
xor
pop
add
mov
sbb
and
xor
test
inc
add
adcb
add
mov
inc
test
add
test
add
add
add
and
shr
and
add
cmp
dec
add
pop
and
mov
add
mov
sub
or
inc
inc
add
pop
add
inc
add
test
inc
or
mov
addb
cmp
push
add
adc
add
xor
add
and
sub
xor
lret
add
addl
adc
int3
loopne
and
rclb
and
add
add
add
adc
nop
dec
add
add
add
popa
inc
sbb
adc
dec
add
and
call
and
add
mov
adc
add
adc
adc
lds
addb
add
add
adc
and
ret
mov
push
rolb
test
and
push
pusha
addb
pusha
and
add
add
or
xor
inc
or
cmp
sarb
inc
add
or
cwtl
and
sub
addl
mov
mov
add
and
adc
and
adc
push
xorb
inc
fs
add
addb
add
jne
add
adcb
and
or
push
push
add
push
enter
and
adc
lods
add
add
nop
add
inc
adc
sbb
sbb
and
xor
add
adc
inc
adc
add
lea
inc
pop
andb
adcb
fs
sub
adc
add
add
xchg
call
and
add
or
or
and
and
or
inc
add
subb
dec
adc
and
add
add
inc
and
adc
add
add
add
add
inc
sub
sbb
and
sbb
and
add
and
and
les
sbb
inc
mov
add
dec
dec
and
les
mov
addb
inc
adc
add
add
inc
inc
addb
lahf
xchg
adcl
test
adc
dec
sbb
popa
add
mov
push
enter
add
mov
orl
add
xor
test
test
add
mov
inc
and
pusha
dec
pop
inc
stc
es
inc
loopne
add
add
or
pusha
add
add
push
add
inc
add
add
xchg
add
mov
pusha
add
adc
or
sbb
push
push
and
mov
cmpsb
addl
test
mov
jo
mov
or
movsl
push
add
or
or
add
add
add
sbb
addl
mov
or
sbb
or
rdtsc
les
dec
add
filds
subb
jb
adc
test
add
nop
add
pusha
and
orb
and
jno
sbb
addb
and
shlb
and
push
adc
add
add
movsl
push
add
add
inc
inc
sbb
mov
dec
add
and
cmp
add
push
add
jno
xor
and
inc
adc
add
inc
add
mov
inc
test
adc
mov
and
and
adcb
cs
or
sbb
jp
adc
add
cwtl
sbb
add
add
add
sub
gs
push
add
rolb
add
mov
fcoms
sbb
adc
adc
dec
add
sbb
and
les
bound
or
inc
adc
and
or
nop
add
add
sbb
nop
add
adc
add
adc
add
adc
push
cmp
shlb
aam
addb
adc
adcl
or
dec
inc
andb
add
rolb
int
add
or
or
add
mov
or
mov
pusha
pusha
and
je
and
add
add
sub
mov
add
bound
add
xor
or
adcb
xchg
and
mov
lea
inc
inc
or
add
addl
xorb
pop
dec
inc
add
add
les
add
add
add
add
arpl
add
and
adc
adc
dec
add
add
or
or
add
or
addb
and
inc
sbb
add
cltd
or
add
add
add
enter
adcb
inc
addb
add
and
add
push
and
inc
or
and
dec
inc
mov
mov
nop
adc
bound
or
add
andb
and
or
mov
or
or
add
inc
mov
jno
mov
and
mov
and
and
add
or
add
add
inc
add
add
insb
addb
or
sub
add
and
mov
add
mov
add
and
xchg
mov
push
andb
adc
adc
xor
inc
inc
or
rclb
sub
adc
adc
add
orl
xchg
push
and
add
pusha
test
cltd
adc
mov
mov
add
add
or
or
dec
mov
sub
or
mov
add
xorl
add
add
push
adc
test
mov
arpl
add
and
add
adc
jne
sbb
and
dec
sbbl
add
or
dec
adc
inc
inc
adc
add
or
or
add
ret
nop
bound
add
inc
andb
pusha
xchg
add
mov
adc
or
mov
add
ret
add
sub
rcll
or
nop
cmp
inc
roll
dec
add
and
add
add
mov
mov
or
inc
test
or
and
add
or
add
add
add
add
adc
ss
inc
add
adc
addb
add
add
inc
subb
sub
and
pusha
add
test
sub
or
inc
loopne
add
xor
or
call
bswap
adcb
add
add
and
adc
and
adc
inc
or
rolb
rolb
or
or
sbb
andb
addb
mov
add
add
and
or
movsb
add
xchg
pop
or
add
rorb
add
adc
add
add
jo
pusha
inc
inc
sub
or
adcb
cwtl
add
test
adc
pusha
lret
add
and
add
add
arpl
add
adc
sub
push
mov
add
or
and
add
dec
add
or
adc
addb
adc
add
add
add
and
nop
add
push
mov
xchg
enter
and
sbb
or
and
test
adc
add
add
adc
adc
nop
or
adc
out
add
push
mov
xorb
xor
add
test
add
sub
add
add
push
orl
addb
add
adc
mov
adc
or
add
add
add
inc
add
lds
dec
adc
sbb
push
add
add
inc
inc
inc
mov
and
js
add
and
add
push
loopne
inc
sbb
or
add
stos
pusha
inc
inc
add
addb
adcl
add
and
dec
shlb
addb
andb
and
adc
js
inc
adc
mov
addb
add
and
addb
or
adc
push
sub
adc
add
adc
xor
shrb
mov
adc
dec
movsb
add
daa
or
push
add
adc
add
inc
add
add
mov
sbb
add
or
and
add
sbb
rclb
dec
xchg
inc
add
inc
add
addb
add
addb
pusha
push
mov
xor
add
es
add
adc
loopne
sbb
push
mov
popa
adc
mov
xor
dec
subb
or
or
pop
icebp
sub
or
and
add
add
add
add
push
pop
cmp
or
add
add
add
and
add
cmp
adc
sub
add
add
nop
push
inc
test
and
and
shrb
roll
or
add
pop
add
or
add
xor
add
popa
xchg
inc
adc
or
add
add
add
dec
pop
inc
les
add
orb
inc
dec
adc
inc
add
fldl
add
orb
nop
or
cltd
adcb
test
jb
add
adc
dec
and
jne
or
add
inc
or
add
bound
add
add
mov
add
add
sub
xchg
and
add
les
add
adc
inc
adc
push
add
add
ret
inc
and
jo
inc
add
add
cmp
sbbb
add
adc
lcall
repnz
dec
inc
inc
or
add
inc
add
inc
adc
adc
test
cmp
add
add
push
add
or
add
subb
inc
mov
inc
or
and
or
dec
add
and
xor
or
add
and
and
or
cmp
nop
bound
test
add
adcb
xor
dec
push
mov
inc
and
and
add
and
inc
rorb
les
or
addb
dec
adc
sbb
pop
enter
mov
push
xor
add
inc
addl
mov
popa
inc
nop
and
adc
or
adc
add
jae
add
gs
add
and
dec
or
mov
sbb
add
mov
add
add
add
dec
add
mov
add
adc
sub
adc
add
popa
or
inc
mov
popl
inc
sbb
and
adc
orb
andl
add
add
subb
bound
mov
andb
inc
add
add
or
orb
inc
and
add
pusha
or
orl
adc
inc
mov
sub
inc
push
adc
dec
mov
add
sbb
or
add
pop
xor
or
or
or
and
add
and
dec
sub
xor
add
jo
add
sbb
rolb
add
add
test
or
cmp
push
cmp
push
or
and
dec
addb
mov
add
mov
rolb
inc
xor
add
loopne
pop
and
adc
sbb
and
add
cmp
inc
or
les
sbb
or
roll
inc
nop
or
and
inc
add
inc
add
xchg
or
test
or
add
add
imul
adcl
add
or
and
adc
and
lcall
mov
dec
or
and
add
orb
pusha
and
mov
add
and
shlb
adc
enter
or
subb
add
add
rolb
mov
sbb
orb
add
dec
and
add
and
push
inc
lods
stos
dec
add
add
add
mov
or
inc
and
inc
mov
add
sub
mov
adc
and
fsubs
and
add
test
in
and
mov
dec
addb
and
mov
add
adc
dec
add
add
sub
add
jo
sub
adcl
add
pop
jb
movsb
push
add
inc
sbb
sub
add
rolb
add
and
or
and
add
mov
ror
orb
add
mov
xor
addb
sub
cmp
adc
sub
call
addb
xor
fs
addb
sub
les
add
inc
add
or
add
xor
mov
ret
cltd
add
sbb
add
push
push
add
sub
xchg
leave
add
push
mov
add
dec
inc
xor
add
jo
mov
orb
nop
add
adcb
or
nop
and
add
test
inc
add
and
rcrb
add
or
mov
adc
inc
rolb
push
addb
inc
push
and
add
sbbb
dec
and
and
inc
dec
sub
add
mov
and
mov
dec
or
mov
and
and
pop
add
adc
adc
adc
inc
xchg
movsb
add
test
inc
add
loopne
sub
add
add
inc
inc
add
push
mov
or
int3
or
push
add
sub
add
test
add
push
inc
add
sbbl
add
shll
rolb
mov
push
mov
add
add
test
data16
sbb
subb
dec
adc
xchg
or
or
xor
add
push
dec
add
add
mov
inc
push
sub
addb
xor
add
add
add
pusha
mov
ret
xchg
inc
and
or
dec
adc
adc
and
cld
and
xchg
mov
mov
loope
adc
sbb
xor
pusha
mov
add
mov
mov
loopne
orb
add
inc
push
fs
add
push
and
adc
add
adc
adc
adc
add
adc
add
mov
dec
cmp
mov
movsb
add
adc
add
add
inc
add
dec
inc
and
add
adc
roll
test
add
mov
add
xchg
add
addb
adc
xor
ret
mov
add
add
or
sub
or
and
inc
adc
adc
add
add
push
repnz
add
add
push
push
mov
add
and
or
dec
nop
add
adc
sub
push
orl
push
add
push
les
add
and
push
add
add
add
add
add
add
add
iret
and
pop
sub
and
and
popa
sbb
sub
mov
jo
adc
add
mov
and
mov
add
add
les
adc
add
add
adc
or
inc
mov
adc
or
adc
xorb
and
sub
or
cmp
add
adc
or
add
or
sub
push
inc
add
addb
subb
add
or
adc
add
add
sub
mov
subb
inc
and
dec
mov
add
orb
lea
or
sbb
push
cmp
rolb
mov
or
add
sbb
or
adc
push
or
orb
mov
jae
add
adc
mov
or
add
cwtl
xchg
or
push
add
adcb
add
and
inc
add
or
add
add
or
and
and
add
inc
add
adcl
addb
and
add
xor
and
or
xchg
inc
inc
adc
add
pusha
and
cmpsb
sbb
add
adc
andl
addb
add
cltd
and
and
or
and
and
add
and
or
dec
and
inc
sbb
or
or
or
adc
push
mov
icebp
or
add
inc
and
add
add
sbb
and
inc
push
add
add
call
jno
pop
jb
jns
add
cmp
cwtl
push
add
sub
add
les
add
add
and
inc
test
pop
or
and
test
jo
enter
mov
addb
inc
aad
test
xorb
add
push
inc
add
nop
andb
add
cwtl
addb
add
and
test
add
and
and
xor
inc
add
or
or
mov
sub
add
or
addb
arpl
inc
xchg
inc
push
and
xor
add
sub
adc
add
or
add
or
sbb
and
enter
add
add
add
sbb
or
push
xor
orb
mov
addl
add
ret
rcll
xor
mov
mov
and
add
adc
sub
add
or
push
pop
adc
add
add
push
xchg
and
sub
xchg
cmpsl
and
add
add
adc
mov
andl
add
and
add
call
or
or
inc
and
mov
cwtl
cwtl
inc
add
rolb
addl
add
inc
sub
mov
cwtl
cmp
sbb
add
or
and
test
add
or
xchg
adc
pop
add
mov
or
inc
or
addb
pusha
or
or
or
inc
add
add
mov
or
sub
add
xor
add
add
xchg
addb
inc
xchg
adc
and
and
and
or
inc
add
add
add
add
inc
xchg
or
add
mov
inc
add
adc
add
push
inc
add
or
fldl
xor
add
mov
or
inc
add
add
adc
enter
test
adc
jbe
nop
or
add
ror
pusha
dec
shlb
add
or
inc
pusha
add
das
sub
or
shrb
data16
add
or
sub
push
mov
ljmp
or
add
add
add
sub
pusha
push
ret
sub
dec
adc
mov
xor
add
add
add
add
add
dec
addl
inc
and
add
pusha
test
add
andb
adc
add
aam
stos
sub
or
add
or
cmp
sbb
adc
or
add
add
add
cmp
mov
and
jo
sbb
xchg
add
push
xchg
inc
adc
mov
or
dec
or
sbb
mov
adcb
inc
xor
add
and
pusha
sub
inc
add
adc
push
sub
cmp
or
call
adc
add
mov
add
test
addb
add
and
add
sbb
inc
adc
popa
and
xchg
mov
add
mov
inc
test
add
adcb
and
push
adc
push
mov
add
sub
adc
adcb
adc
mov
add
and
add
add
and
or
and
or
adc
adc
add
add
add
mov
sbb
add
es
add
dec
adc
dec
or
xchg
or
or
adcb
xor
add
or
xor
ret
and
adc
adc
mov
inc
dec
or
add
or
add
or
add
pusha
mov
mov
push
inc
push
adc
add
or
or
add
je
subb
mov
pusha
add
dec
xchg
add
orl
rcll
and
add
add
or
inc
adc
sbb
add
add
enter
pop
sbb
add
add
sbb
and
xor
sbb
adc
leave
mov
add
add
add
sub
inc
mov
inc
push
cmp
orl
add
into
and
add
add
sub
add
test
addl
mov
adc
push
les
enter
adc
add
push
andb
add
lods
adc
mov
and
inc
add
add
sub
in
add
adc
or
push
add
cmp
popa
flds
inc
dec
push
inc
rolb
push
nop
sbb
nop
inc
xchg
and
sub
dec
or
add
add
nop
add
cwtl
push
sub
sbb
mov
adc
leave
mov
sahf
or
inc
push
test
inc
inc
mov
add
add
or
addb
push
add
push
addl
inc
and
xchg
sbb
add
test
add
inc
addb
adc
mov
sbb
and
inc
push
andb
or
add
sbb
inc
mov
sbb
adc
add
shll
xchg
rolb
inc
nop
jo
or
inc
and
add
add
sbb
add
lds
push
add
add
mov
add
add
add
add
lcall
adc
and
sub
add
or
and
adc
or
and
or
or
add
add
adc
add
adc
es
and
or
dec
or
push
or
cmp
xchg
or
add
or
xor
add
sbb
add
or
adcb
add
and
adc
add
push
xchg
or
add
pusha
and
cwtl
les
add
add
or
push
inc
aam
inc
add
add
add
add
or
push
jno
xor
in
add
imul
add
add
or
add
add
loopne
dec
cmp
call
popa
add
cmp
add
inc
adc
mov
ret
and
pop
add
or
add
add
or
sbb
add
pop
sbb
inc
stos
add
cwtl
add
add
push
or
xchg
inc
add
add
add
adc
xchg
add
ljmp
inc
sbbb
nop
add
adc
adcl
push
or
xchg
and
and
add
and
sbb
femms
add
xchg
add
mov
inc
and
add
or
or
add
mov
mov
mov
adc
add
rolb
add
add
sub
inc
add
rcll
test
and
add
adcb
addb
push
andb
dec
or
or
add
adc
or
jl
add
add
adc
adc
add
add
add
and
add
shlb
or
add
add
adc
add
push
add
sbb
add
nop
inc
xchg
add
and
or
and
jmp
mov
and
sbb
inc
xchg
jo
addl
ljmp
sbbb
push
add
or
adc
dec
or
mov
push
adc
les
add
addb
add
or
addb
and
pusha
les
pusha
xchg
add
add
xchg
andb
and
orb
add
add
add
jno
sbb
xchg
pop
jno
pusha
mov
push
and
or
push
inc
movsb
add
mov
and
inc
add
dec
fs
rclb
mov
add
adc
or
inc
xor
cwtl
sbb
or
gs
push
add
and
pusha
adc
nop
mov
add
push
movsb
adc
inc
adc
test
mov
inc
or
add
add
xor
add
and
dec
or
adc
adc
inc
lret
or
rorb
addl
add
adcb
rolb
sub
and
and
add
inc
cwtl
add
lcall
rclb
add
add
or
fmuls
and
imul
test
and
movsb
add
add
add
add
xchg
add
inc
test
dec
dec
inc
add
adc
adc
inc
and
nop
add
add
lds
add
lcall
add
and
pop
pusha
or
add
or
and
and
xor
addb
and
xor
add
add
and
dec
add
add
andb
inc
pop
or
add
adc
add
push
add
add
add
push
test
add
sub
jo
and
add
or
or
les
add
and
sbb
add
rorb
inc
inc
sub
mov
add
add
add
cwtl
sub
add
push
orl
enter
and
push
andb
and
sub
push
xor
add
test
add
or
xor
nop
add
mov
and
and
cltd
shlb
inc
adc
push
add
sbb
sbb
or
add
add
mov
or
add
add
andb
and
adc
adc
add
orl
cwtl
and
movsl
imul
adc
or
inc
stos
add
addb
nop
and
adcb
mov
sub
pusha
inc
pop
mov
or
sub
add
inc
adc
add
arpl
dec
inc
nop
dec
rol
inc
sub
mov
add
add
add
inc
or
add
dec
inc
adc
add
adc
add
inc
adc
add
adc
inc
pop
inc
or
aaa
sub
orb
add
or
add
test
pop
push
mov
add
addb
adcb
add
lods
add
dec
adc
inc
mov
andb
or
sub
cltd
add
adc
addr16
test
lea
addb
orb
xor
fadds
add
add
test
adcb
or
and
or
call
mov
add
jno
stos
rorb
inc
add
sub
mov
xchg
adc
add
sub
inc
add
inc
adc
or
adc
inc
add
mov
or
xor
inc
addb
pusha
dec
adc
test
dec
pusha
and
mov
andb
insl
mov
inc
or
adcb
add
xor
inc
or
inc
test
sub
lcall
adc
mov
xor
int3
push
adcb
movsb
sbb
add
add
and
dec
dec
add
and
add
cwtl
pop
xor
inc
and
push
add
push
add
adcl
add
xorb
andb
push
or
and
dec
and
or
inc
sbbb
aas
add
push
es
mov
adc
test
loopne
add
or
push
insb
sbb
jb
lret
add
xchg
inc
add
inc
or
add
bound
shlb
and
add
inc
adc
inc
and
mov
inc
xchg
add
or
add
add
mov
add
add
add
add
add
or
add
ss
and
sbb
push
sbb
and
inc
in
or
test
add
mov
add
sbb
sub
adc
adc
push
test
jecxz
mov
adc
and
loopne
addb
rclb
rorb
mov
stc
inc
or
les
add
mov
push
add
adc
push
and
add
dec
adc
test
add
and
mov
addb
stos
or
adcb
addb
add
add
and
push
add
and
test
push
inc
add
mov
and
ret
add
add
add
xor
sub
inc
inc
add
mov
add
mov
mov
add
push
inc
cmp
dec
and
addb
mov
dec
add
add
inc
adc
adcb
mov
pushf
lds
or
add
andb
sub
rclb
add
adc
or
inc
push
push
or
or
pusha
andl
addl
push
dec
movsb
les
add
add
les
mov
cmp
sub
cmpsb
cmp
add
add
adc
test
add
movsb
adc
add
insl
andl
push
shll
or
or
sub
add
or
add
inc
sbb
push
and
adc
inc
addb
push
pusha
or
adc
sub
mov
and
add
leave
addb
addl
inc
xchg
adcb
add
add
data16
movsb
int3
add
inc
rolb
adc
mov
or
add
and
xchg
add
lar
adc
inc
adc
mov
inc
xchg
add
or
add
inc
andb
popa
and
add
sub
add
or
pusha
and
add
adc
and
andb
push
ret
sbb
les
add
add
add
aam
addb
add
dec
orb
and
and
or
rolb
addb
add
adc
add
or
push
add
inc
add
rolb
dec
orb
rol
sbbb
adc
jae
adc
addb
add
add
loop
dec
add
dec
adc
add
sub
add
lcall
dec
enter
sbb
popa
rclb
xor
or
js
add
movl
add
and
add
lods
add
inc
add
addb
inc
sub
mov
inc
lods
add
and
adc
add
inc
and
andb
adc
add
or
add
add
mov
andb
mov
add
or
and
add
test
movsl
js
orb
scas
or
add
or
or
subb
add
pusha
inc
mov
add
and
clc
fidivrl
cmpsb
orb
add
and
mov
jb
inc
or
or
inc
add
and
add
rolb
add
bound
add
and
or
add
or
sub
ror
adc
inc
shlb
add
inc
push
pop
mov
ret
data16
shlb
push
add
mov
orb
add
and
dec
or
push
and
add
sbb
add
inc
add
add
add
cwtl
cmpb
popa
add
inc
cmp
insl
or
add
xchg
add
sbb
add
mov
inc
or
and
add
and
mov
or
and
add
enter
adc
adc
pop
mov
or
inc
inc
add
add
xor
cmp
push
dec
imul
add
adc
pop
sub
add
adc
add
adc
add
and
or
and
add
adc
and
add
xor
mov
add
outsb
add
sbb
push
xor
inc
add
adc
add
inc
add
add
addl
or
andl
adc
adc
or
sbb
inc
inc
and
bound
adc
add
mov
mov
add
add
adc
and
push
add
pop
mov
adc
or
mov
bound
add
inc
add
add
or
adc
ret
add
adc
sbb
xchg
sub
roll
add
add
cmp
and
mov
or
mov
inc
test
xor
add
and
jo
mov
mov
add
inc
adc
xchg
adc
and
and
inc
nop
or
addb
add
and
and
mov
add
sbb
in
add
or
or
sub
add
push
adc
fs
add
mov
imul
addb
mov
andb
adc
mov
adc
cmp
movsl
xor
sub
add
add
movsb
inc
jecxz
nop
push
or
pop
adc
orb
push
inc
sbbl
push
or
xor
rolb
add
mov
or
mov
add
adc
sub
movsb
inc
cltd
add
add
pop
add
sbb
adc
sbb
add
or
or
nop
inc
add
inc
add
xor
andb
test
inc
and
adc
adc
addb
xchg
pop
inc
add
add
les
inc
rorl
add
add
addb
push
sbb
or
addb
add
xor
add
imul
pusha
or
nop
xor
andb
push
and
or
orb
or
adc
andb
add
inc
orb
add
mov
sbb
adc
sbb
addb
add
mov
rcll
mov
and
inc
inc
rolb
mov
inc
addb
add
movsl
or
add
sub
cwtl
push
inc
cmp
mov
add
inc
mov
xorb
add
add
addb
xor
sub
rclb
pusha
inc
adc
nop
add
cmp
mov
mov
adc
and
and
xchg
and
add
and
push
inc
test
sub
add
add
addl
cmp
adc
adc
xor
or
and
aam
test
dec
and
add
add
mov
addl
data16
add
dec
push
xchg
mov
add
adc
add
cwtl
xor
or
roll
sub
nop
pop
andb
sub
and
sbbb
add
and
or
adcb
mov
orb
adc
nop
push
and
add
shlb
test
and
inc
and
inc
movsb
add
scas
and
push
add
test
loope
lock
sub
adc
inc
xor
push
adc
and
inc
sub
pusha
add
add
add
and
pop
adc
adc
add
add
mov
add
sbb
or
add
mov
add
and
mov
adc
sub
add
orb
popa
add
inc
and
add
addb
xor
or
and
shrb
and
scas
cli
loopne
add
sub
mov
cwtl
xor
inc
add
add
les
les
nop
sbb
addb
add
orb
or
mov
add
and
add
push
inc
and
addr16
test
addb
add
sbb
and
popa
or
add
sbbl
sbb
sub
or
addb
and
pop
mov
adc
add
or
or
add
inc
enter
push
add
push
add
add
and
andb
add
add
xor
adc
mov
mov
addb
rorb
mov
orb
ret
inc
adc
rclb
add
add
fiaddl
add
and
lds
dec
sub
add
add
sub
or
sbb
mov
add
or
or
adc
or
or
inc
add
add
mov
or
subb
add
mov
and
xor
inc
adc
add
add
and
sub
add
pop
sub
arpl
add
pusha
push
and
push
inc
add
pusha
adc
add
and
pop
addb
inc
add
xchg
or
add
and
or
add
test
adc
mov
and
dec
inc
xchg
mov
or
adc
pusha
addb
and
push
and
inc
add
xor
or
add
enter
and
inc
add
add
inc
inc
rolb
and
mov
xorl
mov
nop
call
movsb
dec
add
inc
add
lods
add
rolb
enter
xchg
add
lods
add
stos
addb
test
loope
bound
adc
push
add
add
or
add
and
inc
add
add
push
push
mov
inc
mov
xchg
inc
ret
push
and
xorb
add
lods
nop
add
add
and
xchg
or
add
add
dec
mov
loopne
rcll
sbb
inc
push
loopne
or
inc
test
and
scas
or
inc
adcb
mov
test
adc
add
lret
add
add
and
xchg
push
mov
and
sub
and
ret
shlb
adc
sldt
add
push
add
inc
and
pop
inc
jo
inc
andb
adc
pusha
lock
orl
or
add
add
and
add
add
add
push
add
addb
add
add
pop
push
add
inc
add
andb
dec
add
push
or
inc
mov
dec
add
or
addb
add
push
adc
daa
inc
or
adc
or
dec
mov
push
mov
and
adc
push
inc
orb
scas
add
or
add
add
mov
bound
addb
sbb
sub
stos
add
dec
add
add
addb
add
pop
adc
add
addl
inc
sbb
xchg
or
or
inc
and
add
add
and
test
push
and
nop
inc
popf
sbb
add
or
mov
mov
push
add
inc
xor
or
and
sahf
sbb
addb
test
mov
adcb
sub
add
fs
and
dec
mov
add
inc
pusha
add
xchg
and
mov
inc
enter
sub
add
inc
mov
xor
push
dec
dec
test
or
add
add
and
push
dec
inc
or
mov
adcl
and
daa
sub
xor
inc
rclb
and
test
inc
fmuls
movb
xchg
adc
add
movsb
adc
cmp
or
inc
lret
adcb
dec
sub
xor
xor
add
pop
or
add
pusha
bound
and
adc
add
add
and
or
bound
inc
add
inc
add
test
or
or
and
or
adc
inc
sbb
sub
add
add
push
sub
xchg
sbbl
inc
inc
inc
add
or
mov
mov
inc
add
popl
add
dec
xchg
sbb
sub
adc
xchg
add
add
or
adc
sbb
bound
pushf
xchg
adc
inc
rolb
orb
sub
lcall
push
adc
cwtl
add
or
add
and
bound
addb
mov
inc
add
mov
sbb
or
ret
sbb
add
push
inc
movsb
and
adc
add
add
or
pusha
add
adc
adc
adcb
adc
and
call
inc
xchg
add
or
lds
add
adc
inc
or
push
fmul
or
adc
xor
add
dec
addb
adc
sahf
add
add
dec
test
xor
mov
sbb
test
mov
adc
daa
add
add
inc
adc
test
xchg
adc
and
add
addb
adc
and
or
and
and
mov
inc
adc
inc
mov
mov
adc
lcall
dec
xchg
add
addb
adc
and
push
add
add
or
mov
add
add
and
orb
and
inc
inc
lcall
movsl
add
adc
loopne
adc
arpl
add
pop
subb
inc
adc
adc
add
pusha
adc
add
and
rolb
adc
and
or
add
or
add
pusha
and
fnstsw
subl
inc
add
rorb
cwtl
add
xor
and
add
add
gs
add
add
add
add
add
add
mov
add
int3
push
add
dec
and
sub
sbb
and
subb
add
or
adc
or
push
push
adc
add
pop
sbb
sub
nop
inc
inc
and
or
adc
subb
push
inc
rorb
add
and
xor
add
adcb
add
mov
add
xor
and
xchg
adc
and
sbb
add
inc
dec
or
add
adc
add
mov
add
add
add
js
mov
rorb
add
inc
inc
aad
rorl
and
mov
pop
adc
inc
adc
cmp
or
or
add
or
add
add
or
add
mov
pusha
mov
inc
push
add
cmpsb
add
pusha
jl
add
sub
adc
add
push
andb
or
add
or
mov
add
add
inc
and
or
pusha
mov
adc
inc
and
add
and
adc
add
add
inc
add
add
add
sub
add
sub
dec
pop
or
pop
add
adc
adc
arpl
inc
dec
push
nop
inc
add
andb
add
inc
cwtl
add
shll
test
ljmp
mov
add
adc
leave
or
and
sub
and
inc
and
adc
xor
or
add
jp
adc
test
nop
mov
sbb
add
inc
add
dec
sbb
and
bound
add
xchg
nop
nop
add
xchg
inc
adc
mov
popa
adc
sbb
addl
inc
and
enter
addb
sbb
or
sbb
mov
jo
cmp
ret
sbb
inc
addb
adcb
ret
inc
xchg
or
sarl
inc
inc
or
popa
cwtl
addb
andl
adc
add
push
repz
add
and
add
or
je
and
inc
push
mov
test
add
sub
add
adc
add
mov
push
add
add
or
or
add
add
adc
inc
adc
inc
and
add
add
adc
push
sub
pop
add
xchg
jmp
inc
add
adc
shlb
add
orb
add
rorb
leave
add
nop
outsb
inc
xor
nop
inc
inc
xor
add
add
sub
add
or
add
shlb
and
add
sub
sbb
inc
call
add
inc
popa
add
add
or
and
adc
push
push
adc
or
adc
add
sub
add
add
mov
push
push
or
inc
mov
add
add
sub
push
addb
dec
and
andb
add
adc
sub
push
xchg
sbb
add
add
test
adc
add
sub
or
rcl
pop
ret
xor
xchg
mov
mov
shll
add
test
inc
orb
add
andb
test
mov
cmpsb
or
or
add
or
add
add
aaa
jp
test
adcb
or
add
test
and
add
inc
add
xor
and
and
sbb
add
xor
add
add
andb
and
or
dec
mov
cmpb
add
pop
sbb
mov
pop
and
add
andb
sub
adc
xchg
or
cmp
inc
loop
or
add
add
or
or
adc
add
add
inc
or
mov
mov
push
or
inc
mov
or
add
inc
add
add
push
addb
andl
push
and
add
pusha
adc
add
inc
add
mov
sbb
add
les
lldt
xchg
adcl
and
jp
adc
inc
sbb
add
inc
push
xorl
rclb
add
imul
add
inc
inc
pop
add
xor
mov
rclb
arpl
inc
orb
sub
adc
push
inc
and
pop
sbb
and
adc
push
mov
lds
add
and
push
mov
add
add
or
addb
pop
push
mov
out
add
add
or
push
mov
xchg
sub
add
popa
xchg
addb
addl
and
mov
cwtl
and
gs
sbb
adc
cmp
and
cmp
xchg
and
dec
add
or
subl
add
sbb
rolb
xor
add
sahf
sub
add
or
or
sub
addb
and
test
adc
or
xchg
add
mov
mov
xor
adc
add
bound
add
add
xor
addb
add
adc
xor
add
add
add
add
mov
xchg
add
inc
and
mov
out
or
xor
add
orb
or
adc
or
add
cmp
or
test
and
addb
and
adc
push
test
test
add
addb
add
push
add
add
movsb
xor
add
adc
adc
push
push
rolb
sbb
cmp
andb
add
inc
add
addb
gs
xchg
addl
sarb
add
add
or
add
sbb
add
inc
add
test
and
test
add
adc
shlb
add
pop
pop
addl
add
or
in
and
add
inc
inc
dec
or
add
add
add
adc
dec
bound
test
addl
add
or
or
mov
add
push
add
xor
dec
add
xorb
and
add
aam
or
push
dec
adc
add
or
push
add
sub
add
inc
or
add
add
mov
add
pop
adc
adc
add
add
inc
inc
add
inc
nop
and
add
mov
mov
adc
add
add
add
add
add
add
add
inc
sub
push
and
add
add
pusha
dec
add
andb
adc
add
add
adc
adc
sbb
sbb
sbb
add
add
add
add
push
orl
inc
ret
or
inc
add
and
sub
add
add
dec
adc
or
jb
inc
push
adc
push
adc
add
addl
add
mov
popa
ret
add
xchg
loope
jo
add
push
add
inc
inc
add
dec
add
or
add
add
push
add
adc
add
loopne
add
add
push
add
add
xor
add
add
adc
dec
pop
addl
and
mov
dec
pop
add
or
or
test
mov
add
add
xor
add
dec
add
add
push
push
nop
imul
and
add
add
inc
add
leave
push
dec
add
addb
add
add
push
addb
bound
inc
lds
test
adc
inc
add
or
add
or
addl
add
adc
inc
or
xor
adc
adc
or
inc
push
add
or
add
add
xor
add
adc
add
sbb
test
add
inc
and
pusha
inc
add
addb
add
rcll
nop
lret
or
lret
inc
or
sub
add
push
inc
add
push
add
add
add
mov
add
add
add
rolb
inc
add
sub
adc
add
add
orl
andb
or
add
add
andl
sub
add
and
xchg
roll
rolb
mov
dec
add
add
add
adc
add
adc
add
xor
add
popa
loope
add
add
add
inc
add
and
arpl
add
add
and
push
popa
and
add
add
inc
arpl
push
add
add
add
add
xchg
and
xchg
addl
dec
pusha
adc
orb
add
add
add
or
or
adc
test
add
add
inc
and
mov
inc
addb
inc
add
inc
sbb
or
and
add
mov
add
add
xor
sub
addl
sub
push
or
add
add
dec
or
sbb
add
inc
sub
xor
pop
add
andl
andl
rorb
sbb
subb
mov
addb
or
add
or
adc
and
inc
xchg
add
or
add
rolb
add
pop
addb
push
add
add
add
and
and
cmp
leave
inc
add
add
inc
nop
pop
adc
add
add
adc
add
add
xor
and
sbb
adc
add
or
add
or
push
sbb
nop
add
or
adc
orb
and
add
add
add
add
sbb
add
or
mov
add
add
add
add
adc
add
adc
adc
inc
or
sub
test
or
add
rolb
adc
or
push
add
and
and
and
adc
add
inc
and
add
daa
inc
inc
add
adc
add
push
and
cwtl
or
and
or
and
or
add
add
add
add
and
or
addb
add
add
addb
addb
add
add
rolb
inc
and
imul
inc
adc
inc
or
xchg
sbb
add
addb
mov
add
or
inc
add
mov
inc
add
add
inc
mov
or
sub
add
add
xor
or
push
test
add
addl
add
inc
push
popa
inc
mov
pop
sub
orb
xchg
and
adc
and
inc
rolb
popf
or
test
or
addb
addb
adc
mov
add
push
push
add
addl
inc
mov
adc
add
add
dec
sbb
adc
bound
orl
sbb
push
adc
add
add
add
add
xor
inc
mov
add
add
inc
inc
inc
addb
add
add
addb
or
add
add
test
add
inc
pusha
inc
test
add
add
roll
adc
add
popa
adc
add
add
test
add
add
ret
sbb
push
adc
add
add
and
add
add
add
jno
add
add
sub
lret
add
adc
add
add
inc
jo
add
add
add
adc
add
and
adc
adc
add
add
adc
jns
mov
add
adc
addb
or
inc
and
sub
or
xor
add
add
adc
sbb
mov
inc
adcb
addl
inc
add
add
add
push
test
andb
add
inc
add
adc
add
add
dec
or
movsb
pop
push
addb
add
add
add
push
or
cltd
inc
or
and
add
add
add
add
add
add
addb
xchg
bound
test
or
add
add
test
addl
adc
push
inc
stc
inc
push
add
add
dec
jne
inc
mov
and
adc
test
addb
nop
mov
xor
add
or
bound
add
add
addl
inc
inc
popf
verr
mov
add
and
inc
add
and
adc
inc
or
sub
add
add
add
leave
mov
add
adc
bound
add
adcb
add
inc
addl
or
inc
mov
add
addb
add
add
xor
xor
push
xchg
pusha
add
and
and
add
nop
and
add
les
mov
add
add
add
add
inc
add
sbb
roll
xor
add
aam
or
inc
clc
and
add
add
adc
xor
add
mov
add
sub
add
and
add
add
add
pop
test
add
pop
dec
xchg
add
add
add
orb
addl
or
adc
add
dec
or
push
add
orb
adc
test
add
add
inc
mov
and
add
or
or
xor
add
mov
add
mov
mov
cmpb
dec
inc
xorl
add
jo
addb
and
add
or
adc
inc
addb
add
push
and
adc
and
test
add
or
add
mov
push
inc
inc
adc
adc
or
dec
add
test
add
mov
add
addb
adc
pop
add
add
inc
and
inc
add
inc
or
and
andb
cmpl
pusha
orb
movsb
inc
add
and
add
orb
adc
sub
mov
addb
mov
add
pusha
subb
mov
pusha
add
add
add
mov
add
nop
add
add
add
nop
mov
add
inc
add
addb
adc
sbb
add
and
inc
adc
push
add
cwtl
nop
add
add
add
mov
add
or
add
add
inc
inc
adc
andb
and
add
sub
rclb
ret
mov
fs
add
add
sbb
addb
and
inc
push
adc
add
sbb
add
add
add
test
add
add
adc
add
or
pusha
push
add
or
add
test
enter
and
cld
rolb
mov
adc
popa
es
push
rclb
add
add
add
mov
inc
add
add
add
and
add
mov
or
sub
or
and
add
sbbl
and
addl
or
addb
and
in
nop
loopne
add
and
add
pusha
add
add
rolb
adc
add
add
test
add
push
add
add
and
add
add
inc
xor
xor
add
adc
inc
add
add
add
jecxz
roll
inc
push
mov
addl
xorb
bound
add
sbb
push
xchg
orb
or
add
nop
push
or
pop
add
mov
inc
and
xchg
adc
ret
andb
add
add
add
cmp
sub
sbb
adc
mov
and
add
add
adc
inc
mov
andl
and
add
adc
add
inc
movsl
adc
add
push
and
add
push
or
add
dec
add
add
jne
add
addb
add
adc
or
add
inc
add
inc
or
inc
push
push
mov
xchg
pop
mov
add
add
popa
pusha
icebp
sub
nop
data16
xor
inc
pusha
movsl
dec
add
xchg
adc
add
add
add
add
mov
jg
add
or
or
adc
push
add
call
add
lret
inc
or
or
add
or
pop
add
sbb
add
and
adc
or
add
add
and
and
add
add
or
xchg
and
add
dec
add
push
pop
add
mov
inc
or
jno
push
leave
adc
mov
and
add
add
adc
add
sbb
adc
and
sub
orb
addl
push
add
adc
sub
mov
mov
add
and
subb
add
popa
sbb
add
test
cwtl
add
add
add
adc
inc
and
pusha
xor
xor
adc
add
add
adc
mov
mov
add
inc
or
addb
add
push
add
add
mov
and
pusha
and
add
add
add
add
sbb
addb
or
add
add
addb
add
rolb
nop
and
add
or
dec
mov
push
add
dec
nop
add
addb
add
add
addb
add
sbb
add
cltd
and
adcb
or
add
push
mov
popa
add
adc
inc
add
add
inc
inc
or
fwait
addb
inc
inc
xor
lea
and
inc
and
and
adc
inc
cmp
push
add
sub
mov
and
les
add
inc
inc
add
dec
add
add
or
or
add
add
inc
addb
xor
add
sbb
or
add
add
mov
adc
add
jne
adc
add
and
mov
and
movb
add
addb
addb
add
add
mov
addb
inc
lret
addl
or
test
mov
add
jbe
cmpb
add
push
mov
or
mov
add
add
pusha
rorb
sub
mov
inc
addb
add
and
add
addb
add
sub
add
adc
add
push
add
popa
test
add
mov
inc
rolb
add
nop
adc
add
or
mov
lcall
add
add
mov
add
adc
add
add
and
adc
add
add
add
inc
inc
addb
and
or
inc
xchg
add
popa
inc
push
or
add
roll
inc
and
adc
and
add
mov
push
or
inc
mov
or
inc
add
addb
roll
add
add
and
out
mov
add
adc
adc
add
and
inc
add
dec
add
adc
adc
add
or
inc
inc
or
sbb
inc
and
inc
add
add
adc
rolb
ficoml
loopne
inc
push
adc
push
addb
addb
or
add
add
inc
and
add
add
or
inc
add
add
test
add
adc
add
inc
add
or
adc
roll
add
jo
andb
sbb
add
add
popa
mov
add
add
and
andb
test
or
add
add
test
and
add
andb
sbb
adc
adcb
add
and
and
add
and
roll
add
or
add
popa
add
adc
mov
dec
pusha
add
add
rolb
push
add
add
adc
adc
or
adc
add
add
sbb
inc
add
inc
pop
sbbb
mov
add
jb
add
add
adc
addb
inc
and
and
add
rorb
and
inc
xor
add
push
add
sub
adc
leave
mov
inc
sub
add
add
addb
add
add
or
inc
and
add
xor
add
add
inc
add
or
add
xchg
addb
es
and
int
add
sub
adc
mov
and
addl
add
ret
add
inc
add
add
add
add
inc
add
adcb
add
add
add
and
or
nop
dec
inc
add
dec
or
inc
or
add
sbb
add
adc
add
add
push
mov
add
add
adc
addl
add
adc
add
xchg
adc
adc
mov
sub
adc
add
cmpsb
loopne
xlat
loopne
dec
call
inc
mov
or
mov
or
fstl
std
pop
cmpsl
nop
mov
push
call
cli
scas
or
movsbl
cmovb
mov
inc
cld
mov
xor
ss
adc
lock
xchg
cmpsl
sbb
movsl
push
push
pop
inc
imul
mov
pusha
xor
jecxz
imul
push
subl
pusha
rcr
add
lock
mov
ds
iret
xchg
fmull
dec
push
pop
cwtl
dec
stos
popa
aaa
dec
fstpl
mov
lcall
dec
inc
sbb
mov
popf
or
movsl
popf
add
in
adc
fisttpll
dec
lcall
dec
adc
dec
icebp
lcall
dec
ljmp
jns
fisttpll
pushf
cmpsl
push
mov
aam
push
sbb
dec
push
ficoms
mov
fmull
test
push
xchg
jne
mov
mov
push
fimuls
int
filds
xor
mov
fldl
shlb
mov
aas
sbb
xchg
fmull
dec
lock
leave
mov
in
movsb
xlat
push
cwtl
aam
xchg
mov
out
cmc
add
loope
push
add
fmull
mov
insb
rclb
stos
xchg
xchg
or
xchg
mov
ficoms
insl
mov
pop
or
fucom
aam
fldl
xor
fisttpll
insl
and
mov
pop
loop
sahf
es
xchg
js
fisttpll
pop
fcmovnu
ljmp
sub
shl
fprem
and
add
adc
js
lcall
xchg
sub
xchg
fidivrl
lcall
xchg
loope
test
and
dec
lock
lahf
mov
fistps
xor
lret
mov
xchg
adc
sbb
and
dec
and
dec
fstpl
cwtl
sub
lret
cltd
mov
jae
adc
ficomps
lods
loop
xchg
mov
test
leave
add
sub
aad
and
sub
aam
add
cltd
jmp
loopne
mov
push
xchg
xor
popa
push
dec
lcall
sahf
es
adc
sbb
mov
mov
std
dec
fldl
inc
into
cmpsb
js
fisttpll
xor
fisttpll
dec
fmull
add
sbb
fisttpll
fnstsw
mov
mov
movntps
xchg
pop
mov
nop
dec
fwait
sbb
push
sbb
xchg
mov
adc
rorb
pushf
xor
inc
int
out
stc
enter
push
xchg
shll
adc
or
dec
lcall
dec
or
add
stos
mov
jl
pop
into
lock
in
dec
mov
mov
push
frstor
xlat
pop
mov
fisttpll
xchg
or
sub
cwtl
xor
or
sub
pop
fcmovnu
fbstp
mov
addb
jecxz
dec
sahf
push
sbb
fwait
or
nop
mov
ljmp
fisttpl
xlat
dec
sahf
mov
inc
sub
cmp
mov
nop
dec
jnp
inc
xor
mov
js
xchg
fisttpll
mov
fisttpll
mov
push
dec
leave
lcall
dec
and
test
in
adc
fisttpll
xor
fmull
pop
fcmovnu
sahf
into
mov
js
xchg
fisttpll
mov
fisttpll
xchg
int3
dec
push
aam
xchg
cmp
imul
mov
mov
sbb
sahf
es
mov
xor
mov
out
js
in
dec
adc
js
cwtl
fisttpll
aam
rcrb
sbb
xor
dec
negb
lahf
add
jecxz
add
repnz
mov
pop
cwtl
dec
sbb
sbb
jecxz
push
inc
imul
or
sbb
es
movsb
dec
adc
xchg
mov
pusha
push
jb
stos
mov
push
inc
mov
lcall
dec
jle
sbb
sbb
cwtl
aam
ljmp
mov
fisttpll
lahf
add
or
faddl
dec
lcall
aad
out
sbb
roll
mov
dec
jmp
dec
cmp
in
mov
sub
or
lcall
dec
cmc
mov
push
mov
in
cmp
pushf
iret
push
loopne
stos
xchg
repz
fwait
dec
fmul
push
adcb
es
cwtl
dec
dec
jle
dec
fwait
push
sbb
insb
jae
dec
mov
testb
nop
jns
out
dec
stos
fisttpll
cmp
and
dec
fwait
loopne
out
fisttpll
aad
mov
cwtl
dec
adc
ja
xchg
fisttpll
dec
fwait
push
pushf
aam
cmc
sbb
movntq
dec
aam
test
out
xchg
xchg
mov
sub
inc
fdivp
push
stos
fisttpll
insl
mov
pop
or
dec
add
add
dec
lcall
scas
popf
loope
mov
sub
iret
or
jmp
add
incl
out
lcall
dec
add
and
mov
sub
xor
inc
aas
sbb
cmp
ffreep
out
loopne
mov
and
mov
nop
loop
aaa
roll
call
cmc
push
lds
push
mov
push
imul
adc
pop
mov
lock
fdivrl
shrl
sub
jns
addr16
push
push
pop
rorl
add
clc
sar
cltd
loopne
loopne
fmull
loopne
inc
dec
fistps
mov
pop
pop
loop
xchg
pop
and
fwait
pop
pop
add
dec
test
nop
mov
ljmp
mov
notb
ds
lock
scas
pop
ljmp
cmovae
xor
jae
fisubl
fcoms
int
ficoms
std
lcall
ljmp
lods
fistl
sbb
fstpt
popf
mov
dec
lcall
xor
cli
adc
ret
sbb
mov
jl
sub
mov
and
loope
inc
in
roll
add
mov
lcallw
inc
ja
daa
cmp
es
pop
and
cmp
dec
imul
mov
movsb
cmp
dec
sub
pop
test
inc
loop
nop
fwait
dec
add
vpaddusw
or
push
dec
mov
pop
or
fwait
popf
testb
leave
lcall
cli
scas
pop
pop
js
mov
or
fwait
mov
aas
push
pusha
mov
push
sahf
mov
xor
adc
mov
add
jns
test
dec
sbb
std
cmp
daa
jl
stos
lret
lods
arpl
nop
sbb
das
sbb
sti
imul
or
adc
aad
mov
adc
mov
pop
fdivs
shlb
mov
pushf
cmc
arpl
pop
dec
push
inc
lds
pop
jbe
subb
fisttpll
mov
xor
leave
add
sbb
int
loopne
sub
and
je
outsl
fdivs
cmp
xchg
dec
into
into
aad
mov
insb
enter
daa
out
fnstenv
inc
cmpsl
dec
sbb
test
mov
fwait
out
xor
rcrb
ss
into
push
sbb
dec
and
negl
pop
aas
fs
int
adc
mov
cmp
jb
loopne
pop
sbb
hlt
push
ds
mov
loope
sarl
lds
pushl
leave
pop
add
jbe
pop
xchg
mov
sub
cld
mov
ficomps
dec
xor
fdivrl
jno
nop
rsqrtps
stc
dec
movsb
add
and
gs
mov
out
xor
fsts
sbb
pop
outsb
nop
call
pop
mov
dec
cwtl
fadd
or
ret
nop
rolb
add
dec
out
js
fidivrl
jmp
dec
mov
push
adc
fisttpll
jbe
in
sub
loop
mov
jno
lock
out
aas
pushf
cs
push
mov
inc
sbb
push
pop
dec
xor
call
addl
vcvtdq2ps
out
int
jne
dec
push
cmpsl
fwait
cmp
mov
sub
lods
out
bound
repz
mov
sbb
fiadds
fucomp
cmc
ret
test
mov
xchg
sub
cmp
lret
jnp
ja
loope
dec
outsl
push
pop
xor
sub
mov
pusha
mov
push
nop
and
mov
push
movl
and
shlb
fwait
mov
cmp
sahf
stos
les
js
or
push
push
fmull
cmp
nop
ljmp
or
adc
ds
fwait
push
bound
mov
ja
push
out
jne
mov
jae
mov
fwait
pop
jne
push
pop
es
frstor
sub
xchg
jmp
and
xor
orl
leave
iret
cs
daa
cmovp
movsb
sarl
mov
repz
xchg
into
jb
mov
lea
push
fwait
pop
sub
dec
fisubrs
fldcw
decb
dec
jno
fldenv
add
imul
les
cmp
jne
mov
xchg
add
mov
pushf
adc
sbb
and
jbe
add
inc
popa
addr16
mov
push
jmp
std
jmp
cltd
pushf
xchg
jmp
sbb
ds
pop
fisubrs
xchg
xor
nop
imul
xchg
cmp
jmp
sub
sbb
cmp
int3
fwait
add
lods
addr16
push
xchg
cmpsb
js
and
adc
add
outsb
loope
add
repz
xchg
xlat
sbb
leave
ja
ljmp
xor
fwait
add
xor
jle
inc
movsl
xor
lahf
sbb
inc
fiaddl
cmc
rcl
ret
fstpl
sahf
mov
xchg
mov
add
jecxz
mov
mov
jmp
js
inc
aas
popa
mov
mov
inc
imul
aad
fstpl
insb
dec
sub
leave
dec
iret
pop
xchg
sbb
adc
mov
rorl
inc
mov
xor
sti
int3
enter
sub
outsl
xchg
cmp
fnsave
fcoms
stc
data16
mov
cmpsl
test
icebp
in
insl
inc
mov
add
adc
mov
loopne
mov
xchg
cmp
sbb
and
add
decl
orl
sbb
test
adc
imul
add
dec
or
imul
jmp
inc
adc
lret
mov
mov
fs
fisttpl
xchg
cmpb
mov
fwait
inc
out
insb
ja,pt
outsl
out
pop
stos
push
pop
xor
in
mov
dec
mov
mov
lods
add
popf
aaa
dec
cmp
outsl
cs
cmp
jl
sub
nop
jae
pop
in
or
lret
je
mov
push
pop
cld
xchg
inc
sbb
rorb
fdivs
sub
ja
fwait
je
adc
push
sub
ss
pop
mov
jb
sahf
les
xchg
fisubs
jo
mov
pop
jmp
mov
sbb
pop
repz
icebp
fnsave
jbe
add
pop
mov
daa
dec
mov
or
mov
jge
adc
xorb
dec
xchg
xlat
fwait
jae
xor
in
or
lahf
cmc
mov
sub
inc
iret
xchg
mov
fimuls
cmp
and
mov
outsl
data16
movsl
sbb
dec
data16
sahf
cmp
sub
adc
das
aas
jnp
loop
push
xchg
sbb
repnz
mov
jge
js
adcb
add
loope
dec
jmp
outsb
adc
lcall
bt
jp
xchg
cmpsl
adc
fwait
shlb
xor
jbe
repnz
movsb
outsb
xchg
or
fnstsw
pop
inc
sbb
imulb
les
mov
pushf
cwtl
insb
jg
xor
push
lret
and
pop
mov
jne
add
cwtl
imul
into
xchg
incb
mov
js
in
fcmovne
and
or
icebp
popf
pop
ret
cmp
and
iret
jns
scas
mov
mov
cli
push
shlb
push
rorl
int3
mov
dec
pop
adc
loope
mov
lcall
int3
dec
pop
les
repnz
icebp
clc
sub
add
aam
dec
or
test
xchg
lahf
xlat
int3
popf
or
dec
mov
pop
dec
insb
adc
icebp
pop
lcall
fiadds
adc
xor
pop
cmp
nop
mov
test
cmp
and
or
sbb
push
dec
ja
cld
lds
call
mov
imul
fistpll
mov
scas
add
fwait
jge
fwait
rcrb
push
ds
mov
in
jns
aad
push
xlat
ss
sub
xchg
dec
scas
inc
repz
fstl
in
cmp
sub
cli
pop
push
sub
pop
pop
pop
gs
lds
fwait
inc
popf
aad
push
mulb
fdivs
push
inc
movsb
out
scas
insl
fnsave
mov
dec
movsb
data16
loopne
aaa
popf
nop
not
cmp
xchg
pushl
repnz
nop
fs
arpl
fwait
cmpsl
in
fistpl
int
nop
pop
inc
xchg
adc
mov
subl
frstor
jne
add
dec
push
push
mov
jb
icebp
dec
std
stos
dec
loopne
adc
dec
cmp
cli
stos
mov
dec
cmp
xchg
pop
lods
nop
mov
fwait
push
cmp
dec
xlat
lods
cmpsb
cli
pushf
roll
jp
mov
jns
test
push
push
or
fsubp
mov
ret
sahf
dec
fwait
cmp
sub
leave
shlb
xchg
loope
fstpl
bound
call
dec
xor
sti
sti
inc
bound
xor
std
cs
fidivrs
divb
nop
and
fcmovu
pop
mov
nop
sub
pop
nop
add
pop
jno
test
adc
int3
xchg
cltd
pop
nop
jns
sti
jg
inc
jmp
dec
cmp
imul
es
sub
cmp
icebp
sti
sub
nop
cmp
scas
insb
dec
cmp
cmp
bound
mov
dec
or
stos
hlt
mov
dec
fwait
out
push
sbb
fistl
xor
pop
arpl
pop
gs
testb
movsb
cmc
sahf
popa
dec
sub
xchg
fwait
sub
xchg
stos
mov
lret
jae
adc
mov
and
xchg
xor
mov
dec
jo
cmpsb
adcb
out
aad
dec
insb
mov
div
xor
rcll
dec
hlt
dec
adc
mov
add
xchg
mov
sahf
enter
scas
cwtl
xor
sub
and
addr16
pusha
dec
jno
add
mov
addr16
sub
pop
xor
dec
fmull
out
sub
xor
sub
jge
in
scas
adc
dec
loopne
imul
dec
subb
fildl
lea
mov
mov
jg
leave
jl
popa
lods
in
stos
test
subb
push
mov
and
jp
mov
inc
inc
shrb
nop
or
movsl
jge
dec
mov
or
fwait
xor
test
fidivrs
scas
jl
jle
nop
call
ds
jl
push
mov
in
and
stos
or
dec
mov
dec
orl
and
fwait
push
jmp
fnstsw
adc
fidivrs
jge
cmp
popf
fcoms
std
les
mov
insl
xor
jne
js
nop
cmp
xchg
pop
enter
xchg
ljmp
lods
mov
mov
out
scas
bt
pushf
out
scas
out
mov
sbb
pop
sti
mov
cs
leave
test
xchg
jp
xchg
mov
dec
push
cmp
xchg
addr16
sbb
dec
lcall
not
jns
ficomps
test
mov
and
or
sub
push
aas
rcrb
and
xorl
subb
out
outsb
push
mov
xchg
int
dec
loope
mov
icebp
jg
inc
dec
jo
cwtl
push
inc
loop
mov
cld
sbb
in
dec
jno
sbb
push
mov
jns
inc
es
leave
push
movsb
push
push
xlat
mov
leave
xchg
push
xchg
jl
shll
std
sbb
mov
std
rol
fyl2x
mov
or
jl
push
xchg
mov
jecxz
ret
cwtl
test
stc
mov
inc
pusha
sbb
imul
loopne
jno
addb
testb
mov
mov
or
enter
push
inc
outsb
movsb
sahf
mov
pop
push
popf
pop
xor
or
fcomps
stos
loope
adc
push
cld
stos
enter
mov
mov
nop
sbb
in
gs
push
mov
xchg
or
fwait
sub
dec
test
dec
dec
inc
loop
xor
loope
or
add
ret
aas
mov
je
outsl
xor
cmpl
pop
fiaddl
adc
or
dec
iret
push
and
daa
add
sbbb
inc
mov
sub
xchg
nop
xchg
sub
dec
mov
stos
leave
lods
jge
xchg
xchg
les
cmc
mov
shrb
pop
or
pop
cmp
ja
sub
clc
lods
cmp
mov
sbb
mov
clc
fidivrl
hlt
loopne
or
pop
xchg
sbb
insl
aam
mov
dec
pop
jle
sbb
xchg
movsl
xor
test
jmp
sti
lcall
and
out
cmp
enter
mov
dec
ss
xchg
cli
xchg
scas
sbb
sub
mov
hlt
fisubrs
adc
adc
ret
adc
pop
dec
or
jb
dec
add
xor
pop
nop
dec
cmp
xorl
addb
sbbb
mov
out
pop
lret
pop
mull
mov
mov
mov
jne
dec
dec
push
xchg
inc
cmp
or
scas
mov
or
frstor
adc
xchg
push
inc
in
fnstsw
cmp
nop
in
ljmp
dec
incb
push
cld
xor
fwait
and
jnp
incl
or
icebp
fisubrl
pushf
push
mov
or
loope
pop
sbb
or
ss
loopne
mov
inc
sub
arpl
xor
cltd
pop
aad
subb
cmp
sbb
add
ds
xor
sub
cmp
inc
sub
mov
jp
dec
jbe
mov
cmpsb
test
jo
lret
jp
pop
xor
mov
lcall
dec
mov
mov
fnsetpm(287
sahf
not
dec
adc
in
addr16
add
jo
or
jmp
xchg
jg
out
jne
lret
ffreep
out
mov
fisubs
stc
push
mov
lods
push
push
mov
mov
ret
pusha
sbb
iret
cmc
scas
rcl
addr16
mov
adc
adc
std
mov
mov
adc
pusha
fimuls
int
mov
ret
nop
ret
mov
mov
shr
push
js
jg
aas
xor
xchg
cmp
pop
or
and
test
sahf
cld
mov
ljmp
sbbb
test
sub
enter
aas
rorb
out
lret
jno
popf
in
fwait
jo
mov
fsubp
addr16
out
scas
iret
je
pop
popf
push
inc
xor
outsl
imul
sub
inc
adc
ret
frstor
fisubl
adc
cs
cmp
dec
imul
lret
popf
mov
icebp
stos
loop
rorl
add
xlat
dec
xchg
iret
push
ret
xor
mov
scas
pop
es
mov
inc
sub
mov
mov
mov
out
fdivs
push
cs
mov
imull
mov
lock
cwtl
rolb
nop
dec
sub
mov
mov
pop
in
cmp
stos
cmp
jle
daa
popa
fwait
inc
dec
cld
stos
fldl
add
or
sahf
aas
out
rorl
mov
xlat
pop
pop
adc
and
int
lods
adcl
jl
call
imul
jne
sahf
or
xchg
mov
daa
jns
push
mov
adc
jg
or
idivb
sbb
repnz
rclb
xor
cli
lret
bswap
pop
adc
sbb
jl
daa
xchg
das
mov
enter
in
sbb
jnp
pop
dec
es
and
adc
fsubp
insl
and
xor
mov
xor
in
sub
fcoms
out
jmp
and
xchg
add
mov
mov
gs
icebp
pushf
cmp
repnz
insl
xchg
push
mov
add
inc
arpl
inc
nop
jno
fs
data16
mov
adc
mov
pop
cld
jo
push
push
pop
test
mov
dec
stos
mov
pusha
loope
cli
xchg
lcall
and
testl
xchg
sbb
fwait
adc
mov
in
jbe
clc
push
aam
shll
xchg
jmp
aas
xor
inc
fwait
cld
push
mov
push
jnp
inc
sbb
add
cmp
or
mov
cmp
dec
ret
adc
dec
cmp
jno
shld
outsb
movsb
or
in
jmp
xchg
mov
add
mov
or
add
rolb
jbe
loop
add
adc
or
sub
fwait
loop
in
aas
dec
xor
and
inc
arpl
fstps
pop
add
xor
xor
stc
jae
sbb
pushf
push
fwait
adc
addl
jge
jno
add
lods
mov
repnz
dec
subl
stc
jmp
pop
push
out
pushf
pushf
movsl
cwtl
rsm
mov
mov
jle
cmp
add
gs
scas
add
fwait
adc
mov
and
cwtl
xor
pop
cmp
out
push
cltd
fcoms
mov
dec
lods
dec
pop
jg
xor
push
pusha
xor
mov
sti
sub
add
repnz
out
sub
and
test
mov
leave
nop
xlat
cmc
push
jno
pop
add
dec
aad
and
pop
xor
xor
pop
push
push
das
leave
dec
test
loopne
sbb
call
fs
out
stos
or
leave
xor
sub
imul
sbb
iret
rcr
iret
jmp
out
lds
inc
mov
push
sahf
pop
and
pop
sti
icebp
bound
cmp
inc
xchg
sbb
inc
fimuls
jae
jns
data16
insb
call
sahf
cmc
mov
sarl
fdiv
aam
cwtl
add
rcrl
jg
movsl
cmpsl
jo
in
lock
cmp
fwait
test
jmp
je
dec
xor
stc
jnp
fwait
adc
jp
out
sbb
push
sbb
mov
out
cltd
or
mov
cmovne
scas
orb
xchg
es
ret
outsb
fwait
stos
in
iret
xor
mov
mov
or
sbbl
rcrb
fs
push
xlat
fwait
out
xchg
sbb
mov
test
fwait
pop
mov
push
cwtl
jne
xchg
mov
cmp
fmull
pop
jno
cmp
nop
cli
mov
fs
cmp
mov
fldt
mov
shrb
fsubrp
jae
mov
enter
lods
fwait
xlat
idivb
js
daa
aam
std
sbb
movsl
push
arpl
das
xor
pop
fdivs
mov
lcall
sbb
jl
xchg
xchg
adc
adcb
pop
xor
dec
cli
add
jge
rcrl
aam
push
movl
in
pop
nop
sub
rcrb
cmp
std
pop
int3
dec
or
testl
pop
movsl
xchg
pop
dec
cmp
sub
fwait
push
jmp
dec
rolb
inc
sbb
test
lahf
pop
cmpsl
sub
sti
aas
repz
fidivrs
cli
sti
pop
mov
mov
dec
adc
jmp
aad
push
dec
testl
push
decb
js
bound
leave
pushw
push
cli
inc
fcomi
es
and
xor
dec
dec
mov
arpl
push
sub
out
nop
insl
movsb
xor
negb
bound
dec
xchg
test
sub
nop
mov
mov
push
inc
je
dec
push
pop
pop
out
aaa
add
aam
inc
jecxz
sbb
fimuls
and
ficompl
add
lcall
fs
scas
std
mov
cmp
xor
dec
cs
sbbb
lock
sahf
out
xchg
mulps
and
mov
mov
repz
test
fidivs
lock
outsb
or
fwait
mov
mov
leave
push
in
pop
jae
in
xor
cmc
and
mov
in
push
shll
mov
roll
sbb
call
mov
mov
jg
jb
pushf
ds
jle
sub
mov
sbb
je
lods
cmp
push
int3
frstor
jno
das
nop
jmp
imull
outsb
xchg
fstpt
leave
daa
in
add
je
mov
js
cmpsb
xchg
xlat
fs
repnz
xchg
mov
pop
pop
sahf
or
jnp
add
outsl
and
pop
mov
stc
movsb
jbe
push
rcll
mov
and
lret
shll
jb
xlat
std
insb
fwait
and
arpl
sub
fiadds
out
adc
stc
out
xchg
aam
lret
les
sti
adc
jmp
add
xchg
test
lods
aaa
add
leave
addl
jmp
mov
and
popf
xor
dec
ficoml
shrl
arpl
push
fwait
xor
and
or
add
mov
mov
sbb
lcall
jno
subl
lret
cmp
jg
mov
xchg
movsl
nop
scas
loop
pushf
mov
in
mov
or
pop
adc
dec
sahf
pop
jne
fiadds
fnstcw
or
std
mov
pop
into
leave
push
stos
pop
pop
lahf
fisttpll
xchg
cmp
test
fucomp
incl
push
movsl
aam
mov
out
dec
dec
cmp
mov
sub
es
inc
mov
jnp
frstor
mov
sub
mov
inc
push
cld
out
xorb
cli
das
push
je
pop
xor
pop
stos
clc
mov
fimuls
sub
jl
dec
nop
xor
and
lock
sub
add
das
jp
sbb
mov
lds
shll
in
fwait
mov
lahf
xchg
mov
mov
nop
fcoms
mov
rorw
mov
sbb
inc
cli
mov
lahf
and
addr16
dec
inc
cltd
mov
lret
mov
lea
adc
fwait
call
mov
nop
lods
call
popa
pop
add
adc
mov
lods
inc
push
repz
cmp
mov
jecxz
xorb
xor
jg
std
fnstsw
push
xor
out
push
xchg
xchg
dec
pop
insl
sbb
pop
cmp
stos
ret
mov
cwtl
xchg
popf
mov
mov
inc
push
int3
test
fwait
lret
jbe
jecxz
inc
push
xchg
gs
inc
jnp
mov
nop
mov
dec
xchg
jmp
fbstp
mov
adc
outsl
ss
scas
dec
fcmovu
pop
dec
xlat
mov
pop
fwait
repz
mov
sbbb
loopne
xor
or
pop
cmpsb
lods
push
scas
dec
mov
sbb
cmp
inc
rclb
gs
sahf
dec
mov
out
pop
dec
mov
rep
mov
push
dec
negb
adc
fwait
sti
jle
push
fisubrs
insb
mov
popf
xchg
mov
out
pop
fs
mov
or
and
rcr
inc
pop
ja
mov
nop
or
je
aam
test
dec
loope
shll
das
leave
xlat
cmp
test
mov
mov
std
scas
or
cmp
sahf
xor
xchg
sbb
into
pop
dec
sbb
sub
cmpsl
or
cmc
fdivrs
nop
call
push
dec
test
xchg
sub
rclb
or
and
add
lock
ds
and
mov
loope
nop
pop
mov
fists
jo
in
lcall
xchg
mov
adc
mov
loope
push
fildl
enter
add
xchg
lcall
sbb
sahf
adc
insl
ret
shl
ja
mov
xchg
roll
mov
orl
aaa
rcl
popa
or
mov
xor
lods
cmc
mov
adc
sahf
or
inc
fs
and
inc
leave
push
sub
loopne
xchg
and
push
adc
lcall
cltd
fwait
pusha
out
push
inc
in
push
aad
fs
stc
das
push
pushf
scas
sbb
and
decb
cltd
xor
xchg
pushf
popf
lret
cmp
cmp
and
test
add
fiadds
scas
jmp
cwtl
pushf
add
xor
mov
push
dec
mov
out
out
jecxz
push
rcll
fisubs
sbb
push
js
in
rclb
jle
push
lods
frstor
xsha256
cmpsb
adc
orb
icebp
adc
add
and
jecxz
add
push
hlt
fwait
jl
push
push
cmp
mov
dec
addr16
xchg
aas
push
cltd
fsts
out
jno
cltd
ds
lods
rorb
jp
js
imul
nop
test
add
addr16
sub
and
xchg
or
gs
notl
scas
inc
in
fstl
jmp
mov
ja
cli
xlat
adc
sub
out
push
ficomps
cmp
push
loopne
jbe
test
fisubrs
jge
out
cmp
outsb
push
dec
mov
outsb
dec
in
test
mov
push
mov
aad
jae
jnp
rcr
popf
pushf
pop
dec
jbe
mov
jne
stc
subl
fucom
mov
shr
lahf
in
mov
in
adc
nop
imul
mov
pop
mov
inc
fimuls
xor
cmpsl
fstps
xchg
mov
aaa
and
aaa
adc
and
mov
mov
nop
frstor
jne
dec
add
dec
cmpsb
xchg
es
push
sbb
sub
fcomps
dec
xchg
mov
pop
jnp
jl
mov
sbb
std
xor
jl
lahf
or
adc
pop
in
dec
outsl
jno
pop
pushf
push
ja
dec
rcll
in
and
cs
jp
mov
adc
lret
pop
dec
mov
sub
sti
lods
in
iret
add
mov
add
inc
pop
fs
adc
nop
into
nop
inc
cmp
push
call
mov
dec
cli
dec
icebp
push
fstp
xchg
and
cmp
je
sbb
fidivs
or
bound
into
cli
mov
sbb
fiadds
fisttps
nop
sti
xchg
and
jo
dec
mov
inc
sarl
lret
dec
fidivs
fisubrs
pop
enter
mov
xor
lret
shlb
fwait
cwtl
adc
gs
mov
mov
testl
js
push
nop
out
in
leave
outsl
xchg
into
dec
dec
pop
and
mov
fwait
in
or
repnz
movsl
insl
stos
fidivrl
fwait
movsl
cmp
in
pop
fisubs
repz
adc
xchg
mov
nop
mov
jno
nop
or
sahf
pop
add
push
int
dec
mov
in
push
dec
sub
inc
test
lock
rcrl
das
fwait
mov
insb
lods
jno
cs
icebp
not
jecxz
nop
lcall
or
mov
jp
add
and
popa
dec
clc
clc
dec
mov
cli
and
xchg
lods
nop
bound
xchg
dec
aas
adc
mov
hlt
jne
fwait
clc
call
jnp
fisubs
add
lea
and
sbb
mov
fwait
mov
jb
sbb
frstor
jnp
stos
pop
cmp
imul
jb
dec
push
dec
mov
mov
sbb
fdiv
or
sahf
push
nop
mov
mov
leave
lcall
push
sti
fiadds
fwait
xor
fidivrs
maxps
xor
jp
xchg
push
sbbb
enter
sbb
test
mov
xchg
mov
jne
or
in
out
push
pop
je
out
jnp
and
ret
fsub
mov
mov
adc
outsb
mov
mulb
pop
scas
nop
mov
repz
xor
push
cmp
mov
lahf
mov
sti
inc
lret
sbb
lret
inc
cs
insl
sub
push
pop
test
xchg
mov
idiv
rcr
int3
insl
fcmovnbe
lods
dec
lock
pusha
and
or
mov
mov
push
sub
shlb
scas
lret
aad
sbb
mov
jns
std
adc
or
cmp
xchg
call
cwtl
cmpsl
sub
scas
sbb
es
push
shlb
lret
pop
pop
mov
push
fwait
rcll
lock
mov
xlat
iret
mov
jns
push
in
nop
pop
lock
iret
arpl
dec
fildl
mov
pop
sbb
xchg
cmp
add
pushf
jmp
dec
dec
sbb
push
aas
loopne
cwtl
push
push
mov
mov
fwait
pop
cmpsb
mov
inc
fdivs
push
in
dec
mov
out
jmp
rclb
cmp
js
fwait
jnp
and
xchg
clc
push
xchg
fimuls
push
inc
mov
pop
mov
fiadds
xchg
mov
ja
mov
je
jbe
or
dec
lods
push
dec
fwait
or
pop
xchg
xor
cld
dec
mov
xchg
mov
sahf
mov
cmc
push
inc
fs
jne
jl
sbb
js
sbb
lret
cmpsl
jnp
inc
nop
inc
mulb
mov
aad
outsb
leave
sti
lock
aam
sbb
nop
incl
xchg
inc
pop
mov
and
mov
imul
lods
cmp
pop
inc
les
out
jo
cmp
fnsave
pop
aam
sbb
jl
jnp
int
inc
mov
out
sub
nop
insb
xlat
and
pushf
pushf
jns
daa
mov
data16
mov
dec
xor
adc
fnstsw
fs
xchg
lcall
icebp
popf
dec
mov
test
push
fmulp
xchg
fucom
data16
lods
aas
xchg
rcl
mov
ficoms
lods
int
int
xchg
cld
add
in
ret
dec
in
scas
sbb
push
mov
dec
test
pop
rclb
out
jmp
test
lret
jo
les
cmp
cltd
mov
dec
pusha
add
pop
jecxz
mul
loope
pop
pop
mov
outsb
imul
pusha
subl
loopne
lods
cli
and
nop
mov
jns
lods
sub
insl
cmp
dec
enter
dec
jp
mov
lea
cmp
int
push
lock
cmp
push
mov
mov
sbb
int
fwait
xchg
fnstenv
stos
shrb
inc
jne
add
movsl
sub
add
add
ficoms
jecxz
enter
or
cltd
and
jns
mov
cmp
adc
lea
sbb
mov
leave
es
andl
or
cmc
and
and
mov
loop
xchg
mov
insl
leave
insl
xor
sub
dec
and
cltd
cli
popa
das
outsb
sub
aad
nop
nop
pop
mov
or
nop
outsl
pop
jle
jle
and
pusha
cmp
repz
idivb
ss
dec
jnp
push
mov
movsl
pop
pushf
dec
dec
ret
push
pop
pop
sahf
mov
and
roll
push
in
popa
aaa
and
inc
ficompl
mov
sbb
mov
push
cmp
fs
stos
pop
pusha
cmpsb
cli
daa
pop
push
cmp
ja
jmp
into
leave
lret
push
rcr
mov
subl
fstps
pop
outsb
test
xchg
in
sbb
test
repnz
or
int
bound
and
mov
lret
pop
hlt
xchg
or
fildl
and
jno
sub
aam
test
cmp
insl
dec
fwait
pop
mov
inc
fsubs
pop
fwait
pop
pushf
cld
insb
and
popf
iret
add
sub
xchg
sbb
ss
and
int
mov
xchg
ja
popa
lcall
adc
push
xchg
push
sub
dec
insl
mov
aas
add
in
xchg
jl
and
gs
pop
dec
push
fisubrl
lods
lods
imul
outsb
aas
orl
mov
dec
nop
lret
xchg
or
mov
stos
mov
dec
sbb
mov
dec
pop
xchg
enter
frstor
sar
fst
cli
mov
clc
lret
fs
repz
cmp
imul
insl
push
add
adc
pop
sahf
jle
or
dec
hlt
scas
push
push
inc
popf
jg
fwait
loopne
pop
mov
xor
push
jecxz
aas
lods
pop
rorl
push
in
jnp
xlat
fcoms
inc
xor
std
inc
mov
jmp
fwait
mov
jne
pop
fdivrp
pop
jae
and
inc
inc
add
fwait
lods
loop
sahf
and
lods
bound
outsl
sub
mov
or
jecxz
int
fisubs
add
sub
pop
cmp
mov
pop
sbb
out
push
mov
xchg
xor
jns
and
fcomp
sub
icebp
xor
push
ljmp
jae
push
nop
addr16
push
pop
pop
lahf
inc
xchg
lea
lcall
es
adc
test
xchg
icebp
std
add
lcall
hlt
cmpsl
nop
stos
mov
lods
insb
lds
dec
inc
cmp
mov
jecxz
stos
jne
ljmp
out
jne
pop
cli
jp
sbb
mov
xchg
jne
fsubp
mov
sub
lods
mov
sbb
pop
inc
xchg
add
jg
pop
and
pop
cwtl
mov
fst
insl
js
clc
clc
ret
jge
jge
pop
and
shrb
sbb
andl
inc
nop
adc
ja
adc
pop
int3
daa
mov
dec
rcrb
pop
push
in
sbb
pusha
jnp
out
fwait
sbb
sarl
mov
mov
fcmovbe
dec
dec
and
lock
test
mov
clc
mov
add
popw
rcr
push
mov
push
rcr
out
sahf
pop
movsb
insl
and
movsl
nop
push
xchg
aas
pop
rorl
dec
daa
scas
xor
scas
dec
ficoml
repnz
and
fcompp
test
popa
rorb
movsb
inc
pop
xchg
dec
adc
scas
ror
fbstp
mov
out
ss
mov
notl
push
xchg
nop
sbb
mov
cmp
or
arpl
add
mov
push
pop
push
jae
in
fwait
sub
inc
rcrl
bnd
mov
outsb
inc
jp
dec
enter
ret
adc
in
sub
fucomp
xor
adc
mov
mov
xor
out
aam
or
sbb
ss
ret
fisttpl
lret
mov
dec
and
sub
inc
inc
mov
mov
xchg
and
mov
mov
xor
nop
fmuls
pop
enter
movsl
clc
push
push
insl
out
mov
orl
xchg
sbb
xchg
and
pop
jecxz
dec
cmp
cmpsl
mov
in
and
cmp
repz
cmpsl
xchg
or
cmp
je
nop
shll
into
push
lods
cltd
sbb
aad
or
or
pop
dec
lods
adcl
xchg
repnz
or
dec
stos
out
shlb
inc
into
stos
loop
jae
sahf
sub
xchg
push
jb
rcr
mov
pop
loop
outsb
dec
nop
mov
enter
push
xor
cmp
jae
mov
sahf
mov
inc
ficoml
jp
aas
dec
test
fnsave
mov
imul
add
shll
mov
icebp
xor
rcrl
mov
xchg
cld
mov
sbbb
pop
neg
adc
fnstsw
xchg
fsubl
sub
mov
out
rolb
xor
fld
fwait
inc
jmp
inc
mov
mov
pop
cmpsb
cmc
mov
shlb
sbb
lret
xchg
testl
movsb
js
adc
nop
xor
add
mov
iret
fwait
mov
test
ds
mov
pop
pminub
jnp
mov
adc
add
ljmp
mov
pop
add
mov
pop
test
dec
push
sbb
xchg
lea
ficomps
cs
lea
xchg
pop
jge
stc
push
fwait
pop
js
xor
fimuls
les
mov
repnz
loop
xchg
lea
test
test
loop
in
xor
test
nop
lret
pop
pop
push
fnstenv
pop
mov
outsl
not
mov
icebp
add
outsb
or
cmp
sahf
es
mov
or
mov
loope
fisubrs
insl
subb
das
ja
pop
loope
shr
lods
cmp
stos
jnp
inc
pop
shr
jne
outsb
cli
xor
mov
lret
pushf
xor
adc
nop
sahf
repnz
adc
dec
mov
mov
pop
prefetcht0
pop
adc
pop
pop
aaa
pushf
pop
xchg
scas
mov
sbb
jns
bound
xchg
xchg
xchg
sub
sbb
enter
sbb
iret
cmc
pusha
es
mov
xlat
jne
cli
mov
mov
push
rorb
out
sbb
in
jle
fistps
cld
gs
nop
adc
fidivrl
stos
sub
mov
inc
jecxz
cmpsb
cwtl
rcll
sbb
jbe,pt
mov
and
js
repnz
nop
cmp
inc
cltd
inc
dec
fistl
push
push
ja
fnstenv
pop
stc
or
xlat
icebp
gs
xchg
in
pushf
sbb
xchg
testl
dec
push
pusha
repnz
movsb
nop
leave
jb
and
adc
lret
mov
xchg
mov
gs
nop
or
and
test
xor
or
xor
and
pop
data16
nop
inc
or
mov
dec
jle
cwtl
repz
mov
dec
cmpsl
xor
add
dec
mov
adc
fwait
adc
mov
stos
and
cmpsl
out
test
jnp
mov
xor
and
in
fld
sar
pop
sub
push
mov
call
fisubrs
imul
pushf
mov
dec
mov
push
pop
dec
gs
cli
cwtl
mov
bound
cmp
frstor
push
ja
nop
jnp
ds
mov
xchg
sbb
mov
pop
pop
imul
mov
and
dec
shl
out
popa
rolb
clc
dec
xchg
cmp
cmp
xchg
popa
add
jmp
dec
mov
or
jl
stos
xchg
hlt
push
fistpl
xor
cmpsb
sub
enter
nop
sub
sub
dec
out
jmp
in
sub
sbb
pop
adc
cli
repz
jns
mov
iret
dec
xchg
inc
jmp
mov
inc
sbb
outsb
fstp
sub
sarb
jmp
fs
into
sbb
fstl
pop
jnp
inc
jmp
xchg
nop
std
inc
mov
nop
mov
sti
dec
and
fwait
int3
inc
test
xor
jmp
das
mov
cmp
movsl
fwait
xor
push
jbe
sub
mov
in
pop
mov
mov
dec
adc
inc
or
insb
sub
jmp
jle
jns
xchg
dec
mulb
cmp
ljmp
jno
pop
dec
lods
iret
dec
pop
xorb
and
imul
in
sbb
xchg
push
mov
nop
insb
xchg
jbe
cmp
sbb
jae
jmp
jecxz
pop
outsl
push
in
push
hlt
hlt
test
addr16
nop
addl
dec
fsin
sbb
sbb
jb
nop
sbbb
cmp
sbb
push
mov
mov
xor
mov
mov
mov
xor
fisttps
dec
sar
inc
inc
cld
lret
jecxz
movsl
popf
inc
loope
cmp
lods
inc
fcomp
adc
pop
xor
std
sti
enter
mov
fsubrp
dec
nop
sbb
adc
adc
sbb
dec
dec
loope
xchg
insb
je
out
fldl
out
dec
test
mov
add
pop
ret
dec
popf
jne
sbb
sbb
add
addr16
cltd
dec
in
xor
les
inc
test
or
das
lret
xchg
fwait
sbb
cs
sbb
inc
mov
xchg
jae
test
jne
into
xor
adc
sub
out
roll
dec
dec
inc
xor
dec
mov
incb
fwait
add
ljmp
mov
das
insb
adc
inc
repz
out
inc
sub
ss
dec
push
or
sbb
movsb
test
or
mov
lock
das
and
jp
pop
push
fstl
mov
nop
or
ret
dec
loope
addl
mov
cwtl
enter
sub
das
inc
negl
push
dec
xor
or
jbe
fisubl
daa
dec
cli
in
sbb
movsb
pushf
jne
push
xor
stos
inc
pop
mov
adc
push
push
inc
fs
dec
mov
sub
xor
mov
nop
out
jecxz
fwait
rcl
push
stos
xchg
fisubs
fdivr
outsl
nop
pop
fmuls
mov
add
call
int3
loop
imul
push
fsubrs
jne
test
std
imul
in
imul
ljmp
int
sub
lea
repnz
mov
inc
xchg
xchg
mov
out
or
cld
mov
filds
inc
bound
dec
and
mov
or
outsb
fwait
inc
push
stos
arpl
pop
dec
fdivrp
jp
leave
sub
xchg
push
nop
add
xor
mov
into
fwait
pop
sub
dec
faddp
or
hlt
ljmp
xchg
mov
xchg
mov
pop
ret
push
sbb
lcall
ss
cmp
lock
sbb
jle
lahf
ficoms
sub
das
push
dec
push
bound
xchg
lahf
mov
lock
inc
fisubrs
inc
lret
lret
iret
lahf
insb
or
xchg
jns
dec
xchg
pop
fwait
sub
rcll
shrb
popa
dec
pop
jl
mov
loop
add
fisubs
loop
mov
sub
nop
out
sbb
mov
dec
fimuls
inc
adc
lock
xor
lock
mov
movsb
jne
fwait
es
fs
sub
in
ja
pop
out
mov
xorl
mov
mov
sub
sbb
fwait
shrb
imul
mov
xchg
fcmovne
mov
dec
sub
mov
loopne
lcall
pop
xchg
nop
jmp
loope
mov
icebp
lahf
das
sub
leave
dec
mov
xchg
nop
divl
adc
add
call
jo
xchg
decl
into
xchg
fldenv
cmp
cld
sub
sbb
and
adc
scas
jbe
shl
jns
out
push
mov
cwtl
nop
aad
stos
scas
xchg
add
mov
mov
mov
cltd
imul
dec
cli
adc
pop
sub
inc
add
mov
xlat
xor
fdivrp
sub
cmp
clc
inc
pusha
sbb
xchg
into
int
jns
pop
mov
scas
xchg
rolb
ror
dec
sub
mov
ret
mov
ljmp
flds
pop
add
nop
xchg
and
aaa
mov
mov
in
iret
and
add
cli
loopne
add
and
fwait
inc
stos
imul
in
sbb
jp
out
pop
int
nop
cmp
test
imul
push
fisttpl
pushf
repz
cli
imul
push
and
leave
stc
or
fwait
inc
add
rcrl
sub
xor
fs
adcb
test
insb
pop
dec
shr
out
addr16
adc
mov
fiaddl
mov
adcl
and
repz
sub
mov
outsl
jl
or
fwait
test
bound
cmp
xchg
insb
movsb
lahf
repz
cli
fwait
addl
adc
jle
dec
arpl
fnstcw
aad
inc
lahf
adcl
adcb
push
ss
lcall
jae
mov
pop
lret
mov
jno
sbb
aam
hlt
jge
add
clc
aad
in
lret
sub
inc
xchg
fwait
push
pop
icebp
and
fiadds
mov
mov
pop
ret
cld
or
scas
mov
sti
xchg
push
vmovdqa
outsl
jg
sub
sub
leave
cmc
sbbb
test
test
ret
pop
shrl
sub
pop
dec
dec
jne
and
in
xor
aas
or
xor
sti
fldt
add
clc
dec
repnz
or
mov
cmp
or
sbb
and
in
loope
xor
jo
mov
insl
pop
in
insb
ja
mov
loope
out
test
ljmp
adc
addl
pushf
icebp
or
test
addb
push
nop
call
cmp
mov
sub
int
rcrl
dec
ficoml
cmp
jb
sar
xchg
push
fsubrs
pop
lcall
inc
push
sti
pop
sahf
icebp
mov
movsb
add
es
roll
popf
mov
or
mov
dec
mov
enter
inc
xchg
mov
sub
fwait
aaa
ss
jmp
fisubrs
xchg
xchg
mov
or
ficoml
add
cmc
subl
fiadds
cmp
pushf
or
sub
sbb
nop
cmp
dec
scas
push
xchg
insl
cwtl
imul
sub
jg
xchg
movsb
mov
hlt
test
je
test
dec
pop
cld
addr16
in
dec
cmc
push
xchg
stc
loope
adc
push
cltd
aam
dec
fidivs
cmp
nop
and
clc
lock
orb
cwtl
pop
outsb
lds
mov
cmpsb
fldcw
bt
jne
mov
hlt
xlat
xor
jecxz
cmp
mov
sbb
sbb
imul
addl
das
jnp
inc
mov
xor
mov
mov
push
inc
test
add
push
add
ja
sbb
push
jo
lahf
xchg
sbb
stos
arpl
arpl
lea
std
add
ja
ja
test
dec
bound
and
pop
jp
xchg
je
sbb
ljmp
mov
loop
cwtl
fwait
inc
test
cld
imull
xor
xchg
xchg
mov
clc
adc
shll
sbb
cmp
es
rcrb
ficoms
fists
add
inc
enter
mov
fisubs
fsin
fwait
ljmp
imul
add
ficoml
pop
repz
pop
xor
cmpsl
mov
dec
aad
daa
outsb
dec
jns
jns
cmp
lods
hlt
push
add
sub
imul
nop
idivb
dec
xor
test
pushf
push
dec
jb
jg
dec
loope
push
stc
repz
incl
fs
or
nop
fstps
sub
mov
sub
inc
pusha
push
sbb
jns
out
sub
jnp
rorb
pushf
xor
sahf
gs
mov
jne
cli
jg
xlat
aas
add
jge
arpl
push
jg
pop
lods
pop
add
sti
xchg
adc
out
mov
push
daa
filds
jl
fimuls
and
jbe
pop
lret
roll
xchg
fdiv
les
stc
js
jecxz
or
cmpsb
push
cmp
xor
mov
ret
sahf
pop
xor
rcr
sbb
cltd
pop
push
xchg
adc
pushf
cmpsl
push
push
call
cs
push
nop
outsl
xorl
imul
cmpsl
int
fnsave
cmc
xchg
or
out
or
inc
and
fsubs
in
sbb
xchg
push
mov
mov
add
push
inc
pop
adc
and
mov
jmp
fsts
loope
ret
cmp
or
mov
xchg
ja
cs
add
adc
cmp
xchg
in
cmpsl
pop
into
fwait
sbb
inc
push
sbb
sub
push
cmp
stos
inc
dec
fsubp
shlb
nop
add
es
xchg
js
dec
hlt
test
pushl
fld
sbb
xlat
mov
sarb
gs
fistl
add
imul
mov
lods
mov
sbb
mov
or
sub
jno
iret
xchg
test
sahf
movsb
int3
rorb
add
lcall
jno
push
out
jbe
arpl
or
sub
or
pop
dec
mov
mov
je
call
nop
adc
gs
push
dec
mov
sarb
cmp
shrb
outsl
fisubs
xor
inc
cmp
test
dec
enter
inc
dec
pop
sti
fwait
pop
dec
xor
dec
fisubs
aaa
mov
nop
mov
imul
addr16
lock
xchg
xchg
and
lea
shr
inc
aas
pop
outsb
mov
fcmovbe
fldt
pop
fxch
je
lret
mov
xchg
sti
add
movsb
in
pop
sbb
pop
nop
je
movsb
inc
popf
and
jle
in
fidivrs
and
dec
arpl
mov
xchg
sbb
or
mov
mov
mov
inc
dec
cmp
adc
lret
movsb
cmpsb
or
fnsave
jbe
xor
push
orb
mov
leave
fwait
lret
loope
xchg
dec
in
fiadds
mov
push
or
aad
insb
mov
les
pop
cltd
fxch
mov
test
into
mov
mov
sbb
sub
or
xchg
int
aas
push
and
fnsave
ss
jb
pusha
sub
cmp
xchg
fisubrs
or
ds
push
xorl
repnz
adc
jg
jno
push
mov
and
cmp
leave
adc
mov
pop
fs
sbb
sti
sbb
cmp
dec
popa
push
cwtl
cmp
adc
negl
mov
dec
lods
adcb
cmp
shlb
fs
and
int3
fwait
sub
mov
fmulp
repz
pop
das
sub
mulps
pop
inc
sbb
test
sbb
scas
cli
push
fucomi
and
jp
popa
dec
pop
cmpsl
push
inc
cmp
push
xchg
fsubrl
sbb
fldl
push
fldcw
movsb
add
jns
fwait
jnp
and
push
loope
movsl
lea
mov
jg
nop
push
out
hlt
inc
dec
inc
push
add
inc
jp
fwait
pop
pop
mov
leave
xchg
fisubrs
xchg
cmpsl
arpl
cltd
lret
popf
nop
dec
jle
mov
dec
jno
dec
adc
mov
clc
lea
add
imul
in
or
and
cld
aas
popa
push
rorl
pop
ss
aam
add
mov
ret
dec
jne
dec
dec
mov
push
ss
and
ficompl
dec
adc
cmp
fwait
out
hlt
loopne
iret
movsl
incl
push
push
sbb
adcl
or
in
fcoms
xor
pop
loope
inc
mov
xchg
aam
pop
xchg
inc
adc
popf
insb
pop
xorb
mov
or
std
adc
pop
mov
test
js
cmp
das
test
lds
mov
movsl
movsb
ret
fisubrs
dec
or
mov
jo
mov
push
dec
xor
popf
je
scas
xchg
test
sahf
fdivrl
and
mov
jnp
icebp
in
lods
cli
inc
sbb
mov
mov
mov
inc
leave
xor
dec
nop
push
movsl
fdivrs
das
je
mov
jne
pop
jo
inc
dec
mov
inc
popf
ror
sar
cmpsb
lods
insl
inc
add
test
ss
sub
mov
or
sub
xchg
dec
ds
js
stc
cmp
aas
xlat
adc
push
addb
mov
mov
nop
pop
cmp
xchg
mov
lret
aam
cmp
xchg
mov
add
sbb
dec
xchg
dec
mov
push
cmp
xor
dec
add
loope
rcr
int
sbb
xchg
sbb
jl
shrl
sbb
popa
sbb
addr16
add
xchg
shrl
cmp
sub
xor
lds
popf
daa
xor
out
std
xor
dec
pop
test
sti
repz
push
int3
xchg
aaa
or
sub
jo
mov
mov
mov
fwait
xor
gs
or
lahf
in
ss
popa
nop
inc
xchg
jg
pop
imul
lock
int3
popf
les
sub
pop
dec
daa
lret
jo
lods
negb
movsl
filds
ficoms
pusha
pusha
imul
mov
ss
out
dec
mov
dec
aam
dec
mov
push
jl
fwait
inc
dec
inc
repnz
push
pop
push
xlat
shrl
xorl
das
ljmp
mov
cmp
outsb
dec
jl
test
xchg
sbb
pusha
mov
imul
dec
inc
mov
negl
mov
dec
and
jmp
xchg
pop
ficoms
ljmp
xchg
mov
jne
mov
inc
xchg
dec
lock
shrl
repz
ljmp
in
xchg
dec
sub
mov
sahf
rolb
cmp
push
mov
pop
mov
or
jbe
inc
mov
jne
ds
pop
repz
sahf
and
or
test
sbb
mov
in
push
ljmp
adc
add
das
enter
dec
in
movsb
jl
xchg
stos
arpl
lret
fnstsw
fnstenv
pop
xor
push
imul
xor
fimuls
xchg
adc
dec
sub
insb
sbb
xchg
inc
and
testl
ret
repz
sbb
jnp
nop
mov
sbb
jmp
cli
outsl
lock
cli
push
xor
xor
mov
cld
ret
push
fldt
add
cmp
inc
nop
movsb
test
cmp
frstor
aaa
sbb
push
push
rcll
lods
xor
outsb
rolb
lret
lahf
out
sub
mov
cmp
or
xchg
inc
dec
popf
pop
xchg
arpl
test
mov
test
or
push
mov
scas
clc
adc
aad
sub
fwait
cs
mov
rclb
pop
out
js
sbb
aas
mov
mov
mov
fisttpll
in
xor
mov
cmpsb
and
add
js
pop
icebp
xchg
jl
mov
xlat
sbb
imul
shlb
stos
aaa
or
lcall
fidivl
xchg
lods
cmp
in
iret
jl
mov
cmp
push
in
and
cmp
inc
pusha
insb
cltd
addr16
sbb
push
push
dec
js
add
icebp
ficoml
inc
cltd
lret
dec
mov
xchg
jo
add
xorl
shlb
lcall
ljmp
mov
pop
mov
adc
add
pushf
add
orl
dec
scas
fiaddl
test
mov
adc
add
test
sub
cmp
dec
and
mov
pop
push
loope
in
icebp
sbb
lret
push
pop
xlat
fldl
nop
pop
out
aas
jo
jno
decb
pop
clc
loope
and
jae
les
shrl
stos
nop
addr16
mov
dec
in
jb
mov
add
jo
dec
cmp
mov
xor
cmpsl
div
mov
jmp
lahf
and
dec
push
dec
push
stos
fwait
and
mov
fimuls
and
dec
ret
sub
or
pop
aaa
dec
popa
dec
dec
in
ss
xor
pop
xchg
inc
in
mov
cmpl
fidivrs
aad
test
xor
mov
dec
stos
sbb
cmpsb
cmpsl
push
sub
push
scas
push
cmp
push
pushf
adc
cltd
mov
test
xor
mov
jmp
outsb
sbb
dec
cmpsb
mov
ss
dec
decb
sti
or
ficompl
rol
ret
mov
fcmovne
rcrl
imul
push
fwait
push
sbbl
add
add
pop
loop
fwait
xor
cmp
add
fwait
and
popa
pop
fidivs
lea
nop
popf
sub
rorb
dec
pop
es
or
pop
rcll
jno
fisttpl
imul
and
lret
pop
pop
jnp
sbb
pop
add
mov
roll
scas
or
ljmp
adc
dec
push
xchg
mov
cmpb
repnz
xor
xchg
and
mov
aad
jnp
orb
inc
ljmp
mov
inc
hlt
cmp
test
jno
jp
xchg
push
enter
test
dec
fiadds
xor
add
leave
xor
adc
mov
aas
adc
or
loope
mov
out
fcomps
xor
dec
cmc
shlb
pop
jle
and
mov
jnp
push
dec
das
andl
fwait
js
adc
stos
subl
mov
adc
fwait
out
pop
call
fstpl
bound
out
and
nop
ficoml
xchg
call
mov
test
fwait
xchg
out
sbb
frstor
cmp
int3
fwait
inc
data16
lods
cmpsl
mov
dec
les
jnp
nop
loope
mov
rolb
movsb
cmc
jne
ret
aad
addr16
mov
and
mov
mov
das
mov
imulb
mov
dec
shl
add
sbb
jp
push
mov
or
cmpsb
mov
and
out
call
jb
hlt
dec
enter
dec
jg
inc
push
sub
imul
int
cmp
cmpsl
fwait
iret
insl
loopne
xor
scas
cld
push
dec
lret
adc
nop
jle
inc
push
hlt
popf
outsb
mov
pop
adc
lock
outsl
test
test
adc
pop
push
clc
pusha
xor
xchg
jo
and
xchg
cmp
test
fdiv
cmpsl
sub
loope
cmp
jnp
ds
fwait
testl
pop
or
adc
xchg
jl
fwait
andl
fdivp
mov
in
xchg
scas
in
popa
rcrl
stc
mov
out
dec
fwait
mov
add
mov
js
mov
nop
cmpsb
dec
sbb
std
push
btc
lea
dec
in
fwait
scas
push
push
dec
movb
xchg
cmpl
inc
sub
push
jns
pop
pop
cmpsb
pushf
push
fdivrp
in
cli
mov
int3
dec
sahf
in
pop
jmp
sub
fmulp
mov
out
ficoml
decb
dec
mov
mov
ret
push
int3
fucomp
call
nop
adc
xor
mov
repnz
mov
jge
sub
mov
mov
sahf
enter
test
cmp
scas
dec
mov
dec
ret
imul
out
fisttpll
dec
mov
nop
pop
popa
call
dec
jmp
inc
xchg
sarb
jp
push
ljmp
das
mov
pop
cld
fidivl
addr16
push
and
test
push
push
mov
movsb
into
or
leave
cmp
leave
dec
imul
or
pop
mov
pop
push
xor
or
xor
repnz
ja
std
pop
mov
pop
lret
out
sbbl
mov
xchg
inc
daa
loopne
mov
push
into
push
pop
nop
out
gs
xchg
push
fwait
jl
outsl
pusha
push
mov
arpl
out
and
nop
movups
mov
push
jge
lret
fs
stos
aaa
xchg
jb
mov
rolb
mov
xchg
nop
xlat
test
idivl
clc
lock
stos
pop
pop
push
mov
inc
xchg
pushf
lds
pop
cmp
sti
mov
loope
xchg
in
clc
sahf
or
sbb
ja
sub
push
std
push
add
in
adc
xchg
int3
shrl
dec
push
pop
cwtl
dec
inc
pop
jp
fwait
push
push
push
or
push
stos
xchg
mov
or
fwait
insb
cs
add
jp
test
xor
ds
fwait
pusha
mov
mov
mov
in
lea
shll
jmp
pop
add
xchg
dec
pushf
xor
jnp
adc
repnz
and
or
pop
inc
dec
dec
inc
jmp
cmp
fisttpl
fwait
popf
xor
push
mov
sbb
add
inc
fidivrl
and
fdivl
jl
push
sahf
xchg
xchg
sbb
fistpl
xlat
lds
cmp
jo
and
into
test
cmp
sbb
sbb
cld
push
jge
xchg
aas
add
les
push
rcl
push
pop
dec
aaa
repz
insl
push
add
mov
scas
pusha
sub
out
cmp
push
jo
out
pop
adc
lea
lods
sahf
fisttpll
mov
and
mov
popf
sarb
daa
out
inc
aam
sahf
imul
in
test
sbb
push
jo
stc
mov
movsl
scas
icebp
mov
fdivs
bound
add
xchg
cli
and
push
enter
cmp
dec
stos
outsl
sub
lods
dec
mov
pop
mov
mov
cmp
stos
push
push
aam
jg
fwait
loope
test
jbe
sbb
lods
idivb
xchg
dec
add
aas
jmp
or
test
call
in
icebp
loope
lret
imul
inc
addr16
adc
lea
inc
adc
push
outsb
mov
movsb
rcrb
jne
imul
push
adc
outsb
shrb
fisttpl
fsts
cli
cwtl
mov
push
push
outsl
dec
pop
or
mov
pop
cmc
scas
mov
mov
imul
xor
sti
loop
push
adc
into
mov
jmp
mov
pop
ficomps
push
out
inc
cmp
fiadds
push
data16
movsl
fwait
or
dec
insl
jle
xor
cld
cmp
ret
mov
in
mov
xchg
enter
test
inc
sti
pop
nop
sbb
fwait
testl
sub
mov
sbb
xor
dec
cltd
xchg
repnz
cmp
mov
push
xor
out
push
pop
sub
idivb
ds
mov
clc
add
fisttps
dec
loope
dec
mov
fwait
mov
out
ds
scas
cmp
inc
cmp
mov
mov
fcomp
push
dec
lock
dec
jp
movl
cwtl
mov
out
ja
or
frstor
sub
dec
xchg
in
xor
mov
adcb
dec
pop
dec
scas
cltd
xlat
xchg
and
push
leave
cmpsb
pop
iret
lahf
xor
fisttpl
xchg
ret
cmp
enter
mov
push
push
dec
pop
nop
mov
inc
incl
fisttpl
sub
xchg
jl
shrl
lret
daa
nop
rolb
or
sahf
pop
mov
xor
outsb
push
xchg
les
or
out
xchg
aas
inc
xor
fwait
mov
push
in
cli
sub
pop
out
inc
fwait
xchg
or
sbb
and
fidivrs
sti
loope
push
das
lea
mov
adc
push
mov
sar
adc
push
faddp
or
or
lods
ret
insb
mov
mov
dec
idivb
jl
inc
nop
mov
jne
fs
or
add
loope
cmp
add
lds
fimuls
subl
fimuls
call
imul
sahf
xchg
cmc
mov
test
loope
aad
inc
adc
mov
popf
adc
add
inc
inc
fdivrp
push
fcmovnb
cmp
pop
or
add
inc
cld
fidivl
call
sbb
xchg
gs
dec
sub
or
rcl
cmp
aaa
fiadds
subb
sbb
push
arpl
xlat
mov
fcompl
push
je
rcrl
popf
aad
xor
dec
xchg
bound
push
lahf
das
cmc
sub
lret
cmp
in
fisttpll
push
into
xor
xor
mov
xchg
dec
mov
daa
neg
xchg
sahf
mov
ret
cmp
inc
add
cmp
dec
test
dec
adc
fwait
mov
das
jg
fisubs
clc
cmp
std
and
jl
adc
dec
test
scas
fcmovu
dec
xchg
test
push
sub
std
xor
add
cs
ds
or
xchg
leave
dec
ret
push
pop
xor
jecxz
ret
jg
dec
pop
clc
xchg
mov
pop
adc
push
lods
inc
add
daa
fwait
adc
add
push
push
jae
cmp
or
cmpsb
adc
or
testb
and
aas
adc
enter
nop
in
jne
mov
push
arpl
sbb
xchg
mov
add
vcvttss2si
sti
dec
test
dec
adc
mov
mov
fists
fwait
int
dec
popf
jle
xor
inc
xchg
jnp
xor
mov
lds
mov
pop
arpl
sub
add
pop
push
cmp
sbb
xor
nop
sbb
adc
sub
addr16
imul
jo
sahf
adc
pop
dec
nop
fisttps
cmpsl
enter
ret
lds
pop
mov
repz
sbb
sbb
add
cmc
adc
je
adc
xchg
or
loope
xchg
decb
mov
pop
fsubs
nop
cltd
adc
mov
lcall
data16
lock
decb
sub
sbb
inc
cmp
popf
dec
out
dec
pusha
xchg
mov
xor
mov
or
cld
movsl
push
push
adc
push
fwait
jbe
andl
ficoml
fmulp
les
shll
mov
mov
adc
rcr
dec
je
and
jae
shl
fwait
insl
xchg
mov
fisttpll
xor
aad
nop
pop
dec
adc
xor
pop
mov
xchg
in
jnp
and
add
dec
sar
sub
xchg
lcall
mov
aas
ja
frstor
or
lods
mov
in
sub
mov
xchg
mov
xchg
jecxz
nop
mov
test
ljmp
push
push
or
aad
dec
mov
lea
stos
sarl
mov
setnp
mov
push
mov
push
leave
dec
int3
sbb
mov
mov
fistpl
jecxz
bound
jb
test
and
pop
movsbl
fmulp
mov
mov
mov
data16
popf
and
pushf
out
dec
cmp
ficoms
adc
jmp
dec
popa
in
inc
mov
dec
ds
fdivrl
fisttps
add
clc
mov
mov
test
in
aas
psubb
popa
push
int3
sahf
fwait
loope
pop
shlb
nop
add
scas
imul
shrl
pop
adc
popa
ja
jp
mov
or
jno
call
push
mov
fwait
and
dec
cmpsl
les
push
fbld
jo
xor
jecxz
test
ljmp
xor
idivb
add
shll
jle
lret
dec
imul
repnz
adc
fwait
sbb
xchg
aad
sub
push
nop
jae
int3
push
xor
jmp
and
or
fsubrp
cmp
fstp
lcall
xchg
pushf
xchg
push
pop
dec
adc
fnstsw
stc
dec
or
rdmsr
push
jle
mov
ljmp
push
inc
pop
pop
jmp
aaa
dec
mov
sub
pushl
sbb
push
fsub
pushl
push
repnz
addr16
fsts
dec
dec
dec
je
adc
fxch
roll
mov
test
sub
push
fs
dec
cs
fistpll
pop
jo
dec
test
icebp
pop
bound
shll
repz
fs
dec
mov
data16
mov
add
fimuls
mov
and
mov
sti
fimuls
dec
push
in
daa
fnstsw
hlt
fwait
enter
cwtl
lret
sbb
sub
inc
arpl
jmp
pop
mov
inc
insl
sbb
aaa
ficoms
adc
jmp
mov
ljmp
into
fldl
std
cli
jae
sub
sub
leave
enter
cmc
insl
div
push
push
xchg
xor
rcl
call
mov
or
fwait
xor
mov
mov
mov
xor
lcall
or
dec
sub
sbb
fwait
in
ja
andb
ds
mov
push
in
dec
mov
add
call
stos
cmp
xchg
out
gs
fimull
dec
in
les
arpl
call
ljmp
inc
fwait
xor
fnsetpm(287
in
inc
push
push
enter
push
data16
dec
les
xchg
gs
aam
lahf
push
rcrl
xor
jge
jle
mov
xchg
xrstors
dec
cwtl
pusha
jg
test
out
outsl
mov
dec
or
mov
pop
jg
test
cmpsb
popf
enter
pushf
fcmovb
push
xchg
sbb
sahf
arpl
jo
sbb
xor
int3
out
xchg
repnz
xchg
mov
fwait
lods
test
shr
mov
fwait
xor
in
js
addr16
fstl
or
inc
inc
or
dec
sbb
daa
mov
mov
cmp
push
leave
xchg
pop
ficoms
and
in
inc
inc
std
pushf
les
or
pop
jl
into
fstpl
cli
stc
push
enter
or
mov
frstor
aaa
sbb
or
nop
push
pop
bndstx
push
js
leave
stos
insl
jae
movsl
shrb
pop
mov
mov
push
nop
js
pop
gs
popa
aam
sbb
inc
cltd
fs
in
mov
popa
call
into
and
add
sub
sbb
enter
pop
enter
ficompl
stos
mov
fisttpll
pop
xchg
out
sbb
ss
cwtl
mov
push
mov
leave
inc
xor
mov
xchg
inc
repnz
mov
stos
xor
imul
hlt
jno
xchg
int
push
fisttps
push
rcll
sbb
mov
ja
fwait
aad
pop
mov
ficomps
inc
rcrb
jl
fwait
xor
and
sbb
fwait
mov
pusha
rcrb
inc
aaa
cmp
ret
sahf
fisttpll
lock
test
push
nop
xor
mov
cmp
cmpb
inc
imul
dec
xor
push
xchg
mov
mov
jbe
dec
imul
movsb
mov
fildl
and
insb
push
pop
imul
sahf
stos
pushf
loop
shrb
cs
sbb
mov
mov
mov
js
paddsw
pop
jle
stos
and
into
cmp
aad
jp
mov
repnz
sub
bound
gs
cli
fcmovnu
and
xorl
push
add
loopne
inc
stc
dec
mov
lods
xor
stos
int3
jmp
xor
faddp
mov
cld
nop
dec
iret
insl
nop
ffreep
push
shll
sub
dec
out
jmp
jg
int3
lock
push
jbe
cltd
or
es
lret
rorb
scas
xchg
dec
dec
dec
add
mov
imul
ss
push
fcmove
ficomps
sub
loopne
mov
cmp
btr
fisubrs
mov
nop
nop
stos
sub
repnz
sbb
jbe
adc
add
jecxz
nop
lret
push
push
pop
outsb
cld
iret
stos
jmp
scas
adc
imul
hlt
mov
jnp
dec
jb
sub
sbb
mov
xlat
xlat
sbb
cwtl
in
imul
and
rorb
fiadds
in
inc
inc
int3
fisttps
cli
push
add
loopne
ds
mov
call
jb
cmp
mov
nop
in
add
les
stos
std
dec
adc
test
inc
xchg
ss
sbb
or
mov
and
or
push
mov
dec
mov
les
pop
inc
jle
nop
xchg
je
cmpl
push
ds
xchg
sbb
mov
push
scas
nop
push
sub
dec
fsubs
jl
mov
lea
xchg
in
pop
fisubs
adc
dec
int3
push
in
fs
xchg
sub
nop
ret
cmp
push
inc
ror
lock
lea
mov
push
cmc
mov
fisttpll
outsl
sarb
mov
pop
cli
pusha
int
hlt
ja
sub
in
cmpsb
ficomps
insl
jle
imul
jno
aam
dec
add
out
adc
jno
mov
add
ss
sbb
mov
scas
adc
inc
xchg
dec
cmpsl
dec
push
or
in
inc
outsl
mov
sub
push
and
pop
fdivrl
mov
fsubrl
xchg
or
jp
mov
aaa
cs
daa
xchg
es
punpckhwd
mov
pop
dec
push
adc
push
xor
cs
lods
push
nop
mov
outsl
sbb
rep
lea
dec
or
incl
movsb
mov
pop
test
orl
jl
test
mov
wbinvd
ds
pop
and
mov
imul
xor
pop
cltd
mov
es
cmp
nop
and
jno
xchg
push
ja
xor
and
pop
pushl
dec
sbbb
or
sbb
cli
nop
repnz
or
scas
in
jo
jge
sarl
mov
jnp
mov
mov
xchg
pop
mov
aam
xchg
sti
inc
test
fisubrs
stc
insb
xor
lock
fildl
cli
lret
out
or
les
mov
loop
fbld
movsb
ss
dec
popf
mov
stos
je
sbbl
adc
pop
push
nop
jbe
out
mov
lahf
loop
and
mov
leave
cli
subl
jnp
lret
leave
xorl
push
jecxz
pop
movsb
fwait
jle
sbb
push
jnp
loope
sub
inc
out
and
push
lret
movsl
sub
dec
ret
add
mov
bound
xor
jmp
dec
inc
cld
enter
aad
test
arpl
adc
pushf
xchg
in
mov
movaps
nop
adc
loop
mov
das
xchg
inc
fwait
loope
int
add
fidivrs
push
sbb
movsl
add
int
mov
or
ljmp
fwait
xor
stc
adc
aas
cmp
xor
sahf
push
and
subl
enter
roll
loopne
push
lret
fstpl
xchg
lds
dec
xor
loope
dec
je
lods
ljmp
call
xor
xor
pushf
aaa
mov
push
pop
xor
out
mov
leave
scas
in
test
popf
xor
fs
adc
mov
mov
inc
pop
fwait
xor
mov
and
nop
pop
ficompl
cltd
jmp
cmc
fs
xchg
fs
enter
and
and
insl
in
icebp
roll
mov
fsubrl
xchg
mov
pop
fidivs
shll
push
sub
xchg
push
adc
or
inc
sbb
insb
lret
xchg
or
adcl
imul
lods
sbbl
dec
mov
fwait
test
sub
fwait
xor
sub
xchg
daa
je
xchg
addr16
popf
inc
pusha
xlat
push
lock
repz
push
cmpsb
inc
adc
mov
dec
lahf
xlat
jne
xchg
push
loop
xlat
lret
jp
mov
xor
jmp
pop
sub
fldl
shl
dec
popa
or
fwait
adc
and
jmp
mov
xor
mov
sub
lods
out
aaa
vcvtpd2ps
dec
je
adc
sbb
icebp
outsb
popa
mov
cmp
gs
les
fwait
inc
pop
sub
test
mov
setle
sbb
jae
scas
inc
adc
loope
mov
cmp
int3
xchg
pop
dec
out
lea
push
fdivs
in
cmc
sub
repnz
mov
push
call
push
rol
dec
mov
aam
sub
fldl
jg
cmpsb
push
in
xor
dec
jp
fwait
mov
inc
mov
int3
pop
xchg
cmp
and
jns
sub
das
pop
fwait
lods
and
jecxz
shr
out
stos
scas
fiaddl
add
daa
push
scas
inc
cwtl
je
fisubs
rorl
nop
sbb
sub
repnz
ljmp
data16
sbb
out
pop
sti
mov
fwait
push
or
repz
into
mov
test
fnstsw
and
dec
mov
cli
mov
sbb
test
xchg
mov
mov
and
inc
cmp
or
int3
movsl
adc
push
nop
fimuls
rolb
int
test
pop
aas
repz
out
dec
xor
or
fimull
mov
xor
enter
dec
dec
adc
cmp
stc
push
mov
mov
jnp
insb
in
and
test
bound
fiadds
sub
sbb
lcall
leave
push
mov
fwait
cwtl
push
add
rcr
xchg
dec
or
lcall
mov
clc
mov
in
ja
aas
dec
pop
icebp
orl
mov
mov
inc
fwait
enter
jmp
dec
dec
or
mov
sbb
sbb
and
inc
int
dec
shr
jmp
xchg
jle
sbb
jl
sbb
jo
shrb
and
or
or
adc
cmpsb
dec
sub
dec
and
lahf
inc
xor
dec
xchg
cmp
mov
add
arpl
mov
negb
adc
add
mov
inc
enter
fwait
loopne
sbb
mov
inc
dec
push
adc
aam
fidivs
mov
cwtl
leave
push
das
scas
lods
hlt
mov
sub
cmp
dec
pushf
or
xor
fwait
xlat
mov
addr16
loopne
rep
iret
cmp
test
cmp
pop
stos
insb
push
in
cltd
in
lock
rclb
fwait
cmp
or
lods
pushf
ja
and
sbb
in
inc
fs
mov
lcall
in
aad
insl
in
xchg
ret
adc
fisubrl
nop
aam
sub
icebp
dec
stos
pop
pop
js
mov
movsb
fwait
dec
mov
arpl
adc
jne
sbb
inc
int3
mov
or
pop
mov
push
shlb
sbb
mov
add
je
cwtl
inc
fisubrs
sti
les
adc
idiv
aad
js
dec
aaa
jns
push
imulb
repz
mov
shll
int
notl
xlat
ljmp
fists
adc
push
loopne
adc
cmp
xchg
out
push
dec
cs
mov
fldl
push
clc
aas
nop
mov
repz
aam
jnp
jbe
mov
div
mov
xchg
pop
jo
clc
dec
mov
inc
in
dec
inc
mov
push
nop
or
cmpsb
mov
aaa
scas
lea
or
inc
mov
icebp
fildl
add
xchg
inc
mov
ret
iret
jb
xor
push
xor
xor
fcmove
notb
test
xchg
mov
push
repnz
xor
dec
add
fwait
icebp
jnp
int
push
lret
push
cmpsb
sbbb
mov
sub
pop
das
mov
lds
mov
push
mov
popf
xor
sub
scas
push
fiaddl
test
push
or
cmp
jns
mov
repz
mov
rorl
sbbb
call
ret
mov
shl
arpl
popf
lcall
dec
xor
pushf
ja
inc
pop
adcb
mov
dec
subl
fisttpl
fwait
mov
iret
push
jg
mov
insl
dec
and
cmp
mov
dec
stos
fs
push
or
pop
nop
in
out
ljmp
out
iret
adc
int
stc
loopne
inc
imul
ret
pop
dec
fcmovnb
pop
pop
das
test
jbe
lods
scas
outsl
push
cs
sub
scas
jle
mov
out
aad
xor
push
ds
cmp
inc
lret
inc
ret
xor
in
xchg
xchg
push
jmp
push
push
loop
test
enter
lock
aam
mov
dec
sub
jge
sahf
mov
or
rorb
adcb
fwait
iret
std
sub
int
mov
repnz
mov
outsb
nop
pop
inc
daa
andl
mov
pop
xchg
fwait
or
cmp
shl
dec
out
cmp
push
std
add
lds
sbb
fdivrp
sub
fwait
stos
ss
cmp
jne,pn
das
xchg
add
adc
jmp
stos
inc
push
sahf
xor
xor
hlt
ja
les
push
inc
mov
inc
ljmp
xchg
add
push
jg
cmp
add
xor
out
fwait
leave
sbb
loopne
les
stos
enter
jbe
addr16
mov
fs
test
imull
cli
rorl
pop
mov
stos
fmull
dec
mov
fsubrp
add
or
mov
cmc
xor
add
pop
pop
xchg
out
ja
jmp
or
sub
test
clc
dec
sbb
pop
cmp
add
add
orl
sub
nop
int
push
addl
nop
add
pop
test
lea
or
lahf
repz
or
xor
test
xor
popa
push
mov
mov
fdivs
daa
dec
push
fisubrs
pop
mov
mov
in
mov
divb
dec
push
push
movsl
fwait
aam
add
jle
mov
fiadds
pushf
in
jns
fwait
ss
push
stos
mov
adc
mov
nop
add
push
test
pop
and
stos
das
inc
loopne
jnp
out
iret
xchg
cld
mov
xor
add
cwtl
jbe
test
mov
sbb
stos
cmc
mov
mov
fwait
pop
push
js
sti
pop
insl
lods
mov
jp
cs
pop
jae
popf
iret
jae
or
ss
test
icebp
lods
push
ret
push
push
pushf
mov
sub
add
mov
xchg
nop
in
xchg
out
ret
pop
stos
sub
call
mov
xchg
cmp
std
sub
out
insl
dec
add
mov
dec
out
pop
xchg
decb
lret
sub
dec
adc
cmpsb
xchg
xchg
mov
dec
rcl
shlb
mov
mov
pop
jo
jbe
xor
sub
cmc
add
jl
or
dec
test
and
stos
push
subl
and
setnp
and
jmp
fcmove
cmpsl
jecxz
nop
adc
mov
dec
pushf
hlt
cli
test
mov
pop
fwait
mov
jecxz
lods
test
rcr
xchg
int
fmuls
dec
mov
sbb
pop
dec
iret
out
pushf
into
sbb
out
cli
stos
out
xchg
filds
cmova
nop
jle
outsb
xchg
inc
fidivs
fmul
test
leave
dec
mov
dec
jbe
push
sarl
pusha
cld
ss
rcl
arpl
leave
gs
inc
dec
jge
outsl
dec
shl
mov
dec
shl
pop
aam
ucomiss
in
dec
jmp
subl
vxorps
adc
push
mov
push
mov
lret
mov
xchg
pop
ljmp
pandn
cltd
pusha
dec
xchg
xor
scas
adc
test
out
aam
decb
jb
in
mov
fdivp
test
push
pusha
fsubl
pop
mov
push
mov
std
inc
or
mov
jns
mov
test
jo
push
movsl
jb
bound
mov
ror
xchg
sbb
fbld
pop
cmpsb
leave
mov
dec
jno
dec
dec
cmpsl
ss
pusha
xchg
fistpl
cmp
adc
add
aam
fwait
stos
sub
sub
inc
mov
stc
ffree
movl
cmp
sbb
stos
push
jl
popf
lret
add
das
jo
mov
sahf
xchg
xchg
movsb
imul
lea
pushf
nop
and
jmp
lea
xor
push
fmulp
mov
mov
nop
dec
inc
xor
loop
stc
mov
rclb
ss
std
add
fwait
xor
sub
rcrb
or
icebp
jns
cld
in
sbb
xchg
hlt
dec
push
mov
testb
mov
fwait
pop
loopne
sti
imull
mov
xor
popa
dec
es
int
push
push
jmp
fwait
dec
ss
jge
push
test
pusha
push
rorl
enter
nop
dec
jns
addr16
stc
jmp
mov
fwait
ja
repnz
addb
scas
adcb
insb
push
pop
dec
mov
lock
and
cltd
outsl
add
fwait
ret
push
push
mov
lods
xor
adc
aas
push
sub
fwait
cltd
ret
adc
or
fisttpll
inc
dec
sbb
iret
nop
pop
sbb
in
mov
fstpl
push
decl
sub
and
fwait
jl
fistpl
jbe
mov
xor
push
into
mov
loopne
iret
es
dec
int3
leave
sahf
xchg
lock
adc
sub
sub
fisttpll
rorl
fistps
dec
pop
and
push
mov
mov
scas
mov
add
mov
xchg
fwait
imul
stc
jmp
pop
imull
mov
ja
call
mov
loopne
xor
pushf
frstor
lock
xchg
xor
mov
imull
lahf
or
mov
mov
nop
adcb
pop
nop
xchg
insl
and
add
out
dec
add
jge
xor
lret
cwtl
aas
test
pop
push
or
xchg
sbb
lret
inc
cmc
xchg
daa
add
mov
rcrl
mov
mov
lret
fisttps
xor
or
popa
jecxz
mov
xchg
and
pop
loope
adc
imul
push
dec
shr
cmp
adc
jne
imul
mov
fs
inc
popa
outsl
mov
fldenv
push
mov
nop
loopne
cltd
scas
dec
nop
push
outsb
lea
dec
add
dec
xchg
repz
loopne
xor
mov
mov
out
pop
bound
stos
clc
inc
cmp
jecxz
inc
mov
dec
popa
out
outsb
mov
or
dec
daa
or
mov
fistpl
xlat
nop
sbb
push
pop
sarb
xor
insb
stos
or
lahf
sbbb
cmpsb
push
push
in
dec
mov
fstpt
push
fwait
xor
mov
aaa
negl
hlt
cmpsb
mov
push
jg
push
dec
push
lret
and
fisubrs
cmp
je
dec
fcoms
mov
hlt
dec
jno
call
pushf
inc
xor
loopne
mov
arpl
dec
dec
mov
mov
rclb
push
push
mov
popf
in
or
call
lret
jbe
ja
lahf
inc
lods
fstl
into
repz
loop
pop
mov
add
or
sbb
mov
dec
sub
push
jcxz
dec
adc
cmovno
mov
std
shl
cli
dec
dec
sti
sub
daa
lcall
dec
and
sub
out
test
add
lea
add
nop
ja
dec
xor
push
sarb
addb
xchg
add
mov
push
in
cltd
pop
adc
fstpl
out
movsb
mov
cs
jmp
arpl
sbb
pop
xchg
gs
popa
outsl
icebp
ret
scas
cli
push
sub
dec
pop
dec
out
idiv
repnz
fcomps
xorl
pop
sub
rorl
lret
cmc
mov
xor
mulb
into
push
jl
xchg
lahf
loop
push
orb
rorl
aas
pop
dec
xor
adc
cmp
pop
dec
movsb
std
mov
rcrb
jb,pn
xchg
scas
push
pop
xchg
pop
cmpsb
insl
cmp
pop
push
lahf
nop
cli
cmp
and
insb
push
push
sahf
aas
pop
movsb
nop
mov
ss
loopne
test
cmp
sbb
cmp
cmp
or
and
adc
stos
imul
lds
fwait
int3
test
and
jge
sub
mov
ss
push
sub
push
je
loop
out
xor
push
pop
mov
ret
out
fisttpll
push
dec
adc
add
nop
adc
mov
jg
xchg
mov
outsb
cli
pop
cmc
int
sub
mov
push
loopne
sub
fucom
push
mov
inc
xor
nop
dec
mov
jbe
js
dec
out
lea
out
setne
enter
mov
and
loop
stos
fnsave
aaa
inc
pusha
nop
es
mov
lea
mov
mov
scas
sbb
push
sub
xchg
jmp
movsb
shl
or
pop
fidivs
out
xorl
push
clc
imul
dec
in
jecxz
imul
cmp
loope
sarl
dec
push
sub
scas
fwait
xchg
imul
repz
sub
in
and
cmp
and
ffree
push
in
das
pop
cmpsb
nop
pop
pop
scas
jb
sbb
jne
xchg
lret
lock
inc
cmp
mov
sub
jl
aam
loopne
ficoms
cli
lret
inc
rolb
jp
adc
fcoml
cmp
mov
or
push
cmp
int3
push
lret
pop
xchg
dec
ljmp
add
xchg
std
call
sub
sub
std
fimuls
xlat
ja
dec
fildll
je
lock
or
repz
negl
xchg
insl
stos
push
fbstp
inc
jb
xor
mov
ret
mov
fs
mov
addb
jbe
std
sarl
repz
adc
fimuls
notl
pop
std
aas
bound
arpl
and
cmp
aam
xchg
jecxz
popf
jmp
stos
nop
loop
or
mov
lret
shlb
and
pop
dec
dec
ja
dec
or
cmpsl
sbb
jp,pn
mov
adc
fcmovu
shrb
xchg
fdivrs
shrb
push
lret
pop
bnd
xchg
rcrb
inc
sbbb
call
adc
fwait
jecxz
loope
std
cli
je
fstl
add
add
dec
pop
cli
lcall
icebp
inc
jmp
xlat
xchg
pop
fwait
lock
pop
push
sarb
mov
push
xor
nop
jo
imul
pop
cmp
cmpsb
mov
mov
outsb
call
je
cmovp
repz
mov
test
jg
dec
std
or
outsl
fwait
out
mov
cmp
lds
fdivrl
xor
and
fwait
pop
pop
enter
ja
fnstenv
and
std
loopne
xchg
gs
sti
inc
push
mov
jno
lock
push
push
lods
fnstsw
and
dec
dec
and
lahf
cmpsl
xor
inc
lret
js
mov
push
sahf
sub
test
iret
jnp
or
js
fidivrs
mov
hlt
push
rcl
test
rcrb
dec
in
fstpl
data16
dec
cmp
imul
jb
test
in
pusha
xchg
jp
xor
sub
fwait
cmp
imul
loope
add
sub
xchg
and
addr16
mov
push
les
fisubs
adc
push
nop
push
fildll
or
push
mov
int3
sbb
xor
inc
dec
pop
fisttpl
jne
enter
bound
shl
or
and
sub
into
sbbb
ljmp
push
lcall
jge
dec
jnp
scas
dec
jo
push
push
fldz
aaa
ficompl
stos
idivl
call
xchg
test
add
nop
adc
mov
mov
mov
jmp
movsb
es
test
push
imul
mov
mov
jnp
jl
adc
enter
mov
test
mov
add
and
loopne
push
xor
popa
leave
adc
dec
test
inc
rcl
sub
jl
cmpsb
int3
int
xchg
je
mov
xor
adc
in
xchg
out
and
inc
pop
inc
divl
ret
mov
xchg
nop
mov
and
dec
ss
popa
fmulp
shll
fwait
loop
dec
jg
jbe
fistps
ds
and
nop
sub
outsl
cld
cmc
mov
subb
mov
ds
sub
lds
lcall
jp
xchg
nop
out
sbb
jns
inc
bound
pushf
jecxz
jle
push
call
js
and
jmp
stos
cwtl
std
dec
mov
filds
xchg
jle
jg
pushfw
fadd
ret
fldl
xor
sbb
add
pusha
dec
sbb
mov
add
ljmp
test
in
das
ja
repz
insb
dec
leave
loopne
dec
ss
stc
sbbl
sbb
sbb
jl
daa
test
shrb
fidivl
and
dec
cmp
or
push
insb
xchg
mov
add
pop
cwtl
sbb
dec
inc
add
sub
nop
sub
lods
lret
je
mov
dec
int3
ret
repz
xchg
dec
es
xor
mov
sbbl
lcall
inc
xor
mov
lock
imul
incb
fbstp
subb
push
popf
out
dec
leave
jns
mov
sbb
cmp
or
in
inc
loopne
scas
jg
push
nop
outsb
adc
inc
dec
mov
and
popf
push
mov
je
mov
test
fstl
shll
repz
sub
aad
test
xchg
or
mov
dec
sahf
xchg
sub
fimuls
mov
fldenv
push
sahf
push
nop
sub
xor
stc
jo
dec
and
aas
cli
mov
mov
add
sarb
repz
fwait
stos
repnz
push
dec
push
imul
jnp
jmp
stos
aam
lds
mov
cmp
fwait
inc
cmp
rorl
stos
js
push
test
mov
enter
in
sbb
hlt
xchg
adc
fwait
test
adc
sahf
popa
popa
out
nop
mov
sub
xor
lcall
fwait
jg
in
cltd
pop
add
sbb
jg
sub
rcrl
iret
test
xor
push
cmp
js
cmp
dec
dec
pop
pop
ficomps
fs
sub
mov
dec
xchg
cmc
adc
xchg
fwait
cmp
stos
jo
jnp
notb
nop
fisttpll
mov
aam
jle
push
mov
jno
or
mov
imul
push
mov
cmpsl
xchg
mov
pushw
shlb
fidivs
push
dec
inc
mov
decb
hlt
fsubrp
pop
dec
rcr
push
shll
mov
fnstcw
cmp
mov
sbb
dec
ret
jecxz
stos
out
pop
lahf
mov
mov
fists
subl
shlb
pop
fwait
jecxz
push
inc
out
loopne
xchg
in
aam
mov
adc
fwait
pop
jns
jae
and
rcr
out
xchg
out
xchg
imul
xor
pusha
adc
jae
sub
xor
fwait
aam
jg
pop
lea
ret
cmp
mov
sbbb
push
xchg
inc
lcall
push
mov
fs
jns
test
fwait
je
xor
pop
loop
mov
insl
ret
mov
ss
stos
outsl
and
inc
cmp
fisubs
daa
add
in
dec
imul
add
pop
jmp
test
mov
aam
cmp
xchg
mov
xchg
imul
pop
jns
in
in
xor
dec
sbb
in
fwait
and
fwait
loop
fisubrs
orb
loopne
mov
stos
sbb
ret
fstl
sbb
lods
and
cld
dec
and
cs
adc
hlt
stos
dec
dec
cmp
add
pop
daa
fisubs
outsl
dec
inc
aaa
les
pop
xorb
xor
out
mov
test
pushf
mov
fs
adc
xlat
or
sub
jg
push
outsl
inc
add
pop
jl
out
xor
test
das
fwait
cmp
imul
push
cmp
inc
fs
ljmp
punpcklbw
fs
into
jnp
dec
stc
xlat
mov
xor
fisttpl
pop
cmpsl
in
scas
shll
gs
mov
xchg
cmp
xor
jo
fwait
push
adc
sbb
ror
or
inc
popf
imul
push
lds
iret
inc
or
dec
inc
lods
mov
cld
pushf
cmp
orl
test
mov
fwait
dec
repnz
dec
je
sbb
mov
cmc
xchg
sub
xor
and
pop
pop
push
movl
lock
inc
shrb
add
xchg
stc
fwait
pop
repz
xchg
jp
loopne
xchg
aas
subl
mov
fidivs
adc
dec
dec
fwait
outsb
adc
or
fisubs
pop
mov
and
inc
jnp
jl
mov
in
xchg
add
in
fiadds
xchg
cmp
and
pop
in
mov
mov
fistl
dec
push
jnp
sbb
add
inc
adc
xchg
push
jo
xorb
mov
js
inc
sub
ja
fstpl
add
adc
loope
js
fidivs
fcmovne
xchg
nop
sahf
mov
jmp
jecxz
dec
subl
jmp
mov
imul
sti
xor
rorb
xchg
nop
pop
jl
bnd
jp
dec
gs
jnp
fwait
enter
cwtl
adc
fldl
xor
decb
andb
sub
test
pop
xor
dec
mov
gs
stos
jecxz
jns
push
outsl
inc
aad
stos
mov
andb
dec
sub
and
mov
sub
adc
cld
mov
cs
push
mov
dec
pop
xchg
in
mov
cmp
fimull
aaa
mov
shr
shll
rcrb
and
lcall
pop
nop
dec
ss
mov
xchg
loopne
dec
mov
fcomps
jnp
and
fstl
jmp
outsl
sub
call
das
pop
adc
loopne
dec
lcall
pop
mov
nop
or
cmc
cmp
push
lahf
cmpsb
dec
mov
and
push
ret
nop
loopne
jbe
xlat
das
addr16
pop
insl
filds
sbb
iret
dec
icebp
ja
insb
daa
pushf
nop
sahf
jecxz
pushl
fisubl
insb
orl
stos
sbb
jp
dec
mov
movsb
sbb
rclb
dec
sbbb
jl
lcall
stos
enter
mov
or
mov
cmp
cmp
sahf
das
ret
dec
sub
dec
std
push
aam
pop
outsb
mov
xor
xchg
aaa
cmp
xchg
pop
cmc
dec
loop
dec
popf
movl
ret
pop
cmp
mov
sub
in
fistpll
cmp
nop
or
mov
rep
lock
inc
pusha
mov
or
sub
jl
cmp
mov
xor
stos
pop
push
inc
pop
fisubs
dec
adc
xbegin
fdivs
mov
adc
dec
xchg
out
or
and
jle
or
scas
mov
lea
inc
inc
sub
loopne
rolb
xor
dec
pop
jns
sub
in
adc
cmp
movsb
lock
push
loop
xchg
adc
nop
shrb
pop
push
dec
ret
sub
lods
nop
mov
or
xchg
nop
jbe
ss
rolb
sar
pop
inc
dec
into
insb
adc
mov
and
lret
mov
mov
in
lock
cmp
sbb
insl
nop
repz
jo
stos
mov
dec
or
xor
imul
and
cwtl
dec
hlt
fs
std
mov
push
and
jb
xchg
and
xchg
mov
pop
jl
cmp
and
xor
andb
inc
int
jno
push
mov
inc
loop
inc
and
roll
leave
pop
inc
pop
fwait
mov
pop
mov
daa
add
imul
repnz
jg
outsb
cmp
dec
lahf
sub
andb
mov
mov
out
cmp
fnsave
mov
ds
jns
lcall
jg
cmpsl
jmp
cmp
dec
pop
ds
push
and
xchg
test
int
ss
xchg
or
insl
mov
xor
push
addr16
ficoms
rcrl
rcll
mov
mov
add
sbb
pop
pop
movsl
call
push
fisubrs
js
imul
mull
xchg
arpl
out
movsl
or
mov
fwait
jae
cmp
adc
add
fcoml
or
cltd
imul
sub
sahf
jo
fcompl
xor
mov
sbb
daa
stos
jnp
nop
pushf
in
jbe
mov
ret
inc
mov
lcall
lret
testl
or
mov
stc
test
pop
loop
pop
inc
xchg
mov
mov
lahf
notl
cmp
decl
arpl
pop
pop
inc
nop
cld
outsb
sub
jns
push
cmp
mov
pop
mov
add
in
jbe
lock
stos
mov
inc
push
outsl
sub
std
scas
scas
mov
jbe
in
aaa
pop
adc
mov
ror
sub
hlt
add
mov
adc
cld
sub
mov
pop
cld
dec
imul
fwait
dec
fmuls
jne
sub
inc
lock
nop
dec
pop
shl
mov
push
loop
fiadds
into
dec
push
dec
push
or
xor
and
or
inc
sbb
mov
dec
rclb
scas
mov
shrb
cld
sbb
mov
cmp
mov
adc
xchg
mov
mov
nop
hlt
sti
mov
aad
cmp
mov
popf
xchg
sbb
stos
or
fldcw
sub
sbb
cmp
sub
and
cmp
movsb
adc
shll
aas
scas
dec
inc
pop
mov
adc
push
mov
cltd
push
filds
setge
dec
test
inc
mov
shrl
lret
ret
shrb
and
mov
adc
sub
mov
cli
push
test
pop
stos
mov
fldcw
test
push
xchg
adc
call
aam
pop
inc
xchg
divb
mov
or
pop
sbb
movsl
pop
fs
fs
jnp
fwait
std
sbb
jp
xor
insb
subl
pop
int3
cwtl
cmp
jg
dec
pusha
add
es
subl
stc
inc
out
cmp
sub
fstp
dec
inc
enter
mov
decb
xchg
jbe
iret
ljmp
nop
lea
mov
sub
xor
and
mov
pop
test
rcrb
mov
call
sub
sub
jg
mov
dec
jns
xchg
jg
sbb
pop
push
in
adc
mov
orb
nop
push
insb
mov
mov
pop
pop
adc
push
mov
cmp
sbb
bound
fimuls
mov
int
push
xor
cmpsb
out
test
push
nop
pop
mov
pop
xchg
mov
mov
fildl
dec
fwait
jb
cmp
inc
jmp
adc
outsl
xchg
push
jns
inc
nop
push
mov
outsl
add
inc
fucomp
inc
or
loopne
aaa
out
dec
add
xchg
jg
mov
in
mov
mov
fistpl
scas
dec
sti
jno
sbb
add
lahf
xchg
mov
mov
fstpt
dec
push
adc
in
inc
btr
out
sbb
xorb
imul
cwtl
sahf
pop
aad
add
xchg
cmp
jmp
jecxz
out
or
iret
arpl
jecxz
dec
xrelease
mov
mov
lods
int3
cmpsb
pop
xor
jbe
xor
addb
xorb
fildll
jl
ret
aas
imul
push
add
cmc
mov
sti
or
cs
scas
andl
xchg
imulb
mov
ljmp
outsb
dec
xor
xchg
mov
fwait
mov
and
cwtl
mov
xchg
or
movsb
xor
inc
push
clc
dec
loope
add
fwait
cwtl
stc
jg
ss
loopne
mov
sbb
mov
mov
imul
shrb
fstp
jl
fwait
jo
pop
mov
in
sub
adc
lahf
xor
mov
xchg
out
sub
arpl
mov
sbb
fwait
or
fwait
dec
add
mov
jbe
dec
cltd
test
sbb
xor
pop
rclb
mov
mov
data16
cs
add
lds
imul
mov
lds
mov
gs
jae
adc
ret
movsb
cmp
pop
mov
xchg
mov
fwait
mov
mov
fwait
rcrl
lcall
insl
inc
je,pt
sbb
enter
fwait
cmc
mov
ljmp
mov
adc
adc
sub
fisubs
xchg
stos
mov
les
movsl
push
mov
fidivrs
or
lret
cmp
adc
sub
int
or
fisttpll
xor
jae
sbb
shl
mov
sti
sbbl
jno
insb
imul
sbb
sub
sbb
test
jg
push
sbb
loopne
mov
pop
ret
push
mov
add
ja
dec
popa
cmpsb
fisubrl
pop
and
pushf
nop
test
fiadds
ja
gs
aas
in
adc
mov
and
mov
dec
lods
jecxz
mov
fwait
lcall
cld
frstor
sbb
mov
push
ret
stc
bound
fsubp
inc
push
cmp
rcrl
dec
lcall
push
fisubrl
mov
dec
sub
faddl
pop
xor
adcb
sbb
jmp
notl
sbb
rorl
jae
lock
lahf
fistpl
aad
pop
sahf
cmpl
dec
add
jb
fmull
negb
jne
pop
fimuls
loope
xor
icebp
mov
pop
fs
pop
loope
mov
sub
fcoms
testb
or
cmp
gs
sbb
lea
push
ficomps
sub
pop
movsl
inc
cwtl
sti
push
inc
pushf
sbb
sbb
inc
je
pop
fisubrs
out
adc
stos
mov
imul
xlat
push
fsubrs
jne,pn
setnp
fidivs
sbb
cld
fwait
or
adcb
adc
push
fmulp
sbb
push
fwait
jae
and
xor
inc
jno
xorb
push
fwait
iret
fiaddl
popa
fisubs
cmp
inc
jp
fwait
aas
mov
or
lds
adc
fstps
xchg
js
add
sub
pushf
add
bound
xchg
push
stos
jnp
imul
icebp
lahf
nop
cs
sbbl
testb
jbe
js
in
nop
shlb
icebp
repz
pop
scas
dec
jno
stos
outsb
jns
or
scas
imul
shlb
jmp
dec
cmc
mov
push
jb
push
js
cmc
add
mov
cmc
dec
mov
cmp
loop
push
pop
jb
andl
mov
cld
in
mov
lahf
mov
and
jne
push
push
movsl
and
andb
mov
push
xchg
sahf
jae
cmp
mov
jge
jo
pop
jo
cmp
icebp
loopne
xchg
jmp
jecxz
push
dec
mov
push
pop
in
nop
cltd
push
fisttpl
mov
adc
movsl
xchg
data16
lock
clc
mov
les
add
mov
xchg
and
dec
jbe
xchg
shrl
clc
fwait
xchg
push
add
cli
fisttpll
loopne
inc
sbb
push
jmp
xchg
or
jo
push
outsl
lret
daa
das
xchg
jbe
dec
and
sub
movsb
popf
inc
or
testb
cwtl
fwait
and
nop
or
insl
adc
mov
lds
fidivrs
mov
lahf
mov
sbb
nop
std
inc
pop
addl
push
jp
fidivrl
sub
scas
lods
mov
gs
dec
add
fwait
jb
inc
lock
subb
and
adc
pop
adc
fwait
mov
sub
jle
scas
test
xor
movsl
or
cmpb
je
movsb
cmp
mov
out
mov
aad
fimuls
and
nop
ljmp
ljmp
ficoms
mov
mov
hlt
sarl
scas
xor
pop
pop
xchg
fmul
xor
adc
pop
das
mov
lret
fwait
mov
sbb
fisubrs
fucom
push
pushf
xchg
pop
xchg
fnsave
sbb
xchg
xchg
movsb
outsl
adc
mov
add
or
pushf
lret
mov
cmp
add
icebp
ljmp
lock
and
mov
pop
pop
jns
sub
cmp
testb
xor
dec
or
mov
setnp
movsl
inc
jo
add
movsb
push
pusha
cmp
fldt
lea
dec
xchg
xchg
sub
mov
mulb
xchg
inc
iret
xchg
push
les
adc
mov
push
push
sbb
in
lea
xchg
clc
sahf
pop
loope
xor
rorl
mov
pop
in
add
cmpsl
loope
and
dec
fmuls
pop
das
lods
fidivl
and
lock
inc
addr16
cmp
mov
xchg
push
sub
pop
inc
pop
or
mov
pop
mov
jp
test
push
push
push
iret
sti
addr16
push
mov
rcr
xchg
lods
mov
mov
loopne
xchg
fs
fdivrp
or
outsl
xchg
call
mov
inc
int
nop
mov
cltd
pop
xlat
or
popa
push
sbb
and
fbld
mov
sbb
mov
pop
ficoms
ss
nop
xchg
pushf
add
push
js
cwtl
fwait
pusha
or
and
popf
inc
jns
mov
nop
or
xor
xor
pop
adc
mov
imul
xchg
jge
inc
cmp
outsl
adc
jg
std
jmp
sti
mov
hlt
lds
dec
gs
loope
insb
imul
inc
sub
push
pop
pop
mov
aad
or
ret
test
adc
xchg
imul
sbb
xor
adc
rolb
lock
jnp
add
xchg
ficoms
lock
clc
add
mov
in
push
inc
movl
or
mov
nop
rorl
add
pushf
scas
jmp
lret
xor
sbb
test
cmc
fwait
pushf
sbb
sub
sti
or
lods
nop
sarl
das
cmp
and
dec
sub
mov
jg
fdivl
add
fidivrs
push
and
cmp
pop
cmpl
push
loopw
mov
cmp
loop
cwtl
scas
fdivl
arpl
imul
jnp
sbb
or
xchg
int3
popf
idivb
in
ret
dec
sub
mov
sahf
lods
mov
mov
movsl
in
and
mov
nop
pop
fbld
cwtl
roll
fldenv
in
clc
jnp
xchg
pop
mov
pop
movsb
dec
cmpl
mov
or
insb
push
push
fimuls
mov
stos
mov
scas
shl
cmp
inc
xchg
xor
xchg
and
push
fidivrl
mov
xchg
lods
xor
in
dec
xor
test
mov
popa
cs
xchg
clc
int
dec
addl
out
fwait
cmp
xchg
dec
add
mov
add
repz
cmp
ljmp
adc
xchg
mov
ljmp
sub
and
inc
cmc
icebp
icebp
push
dec
scas
aad
icebp
push
rcll
js
in
dec
out
jp
and
or
xchg
insl
aaa
int3
and
jnp
fistl
jl
jo
jp
into
loope
aas
mov
mov
xor
mov
push
jno
inc
jl
bound
sbb
inc
pop
jecxz
mov
aad
cs
sti
jp
mov
dec
mov
movl
dec
jp
adc
data16
mov
dec
sub
shll
dec
xor
push
rep
sub
imul
icebp
inc
dec
addl
lods
ds
push
rclb
mov
sbb
xchg
std
popf
fistps
sbb
pop
ljmp
mov
test
xchg
cmp
sbb
xchg
inc
and
loopne
iret
push
push
dec
fwait
loop
jge
andb
dec
and
fstps
fwait
mov
out
testl
sub
jp
fwait
xchg
add
test
sbb
adc
and
adc
dec
stc
aad
test
loope
fwait
sub
push
sbb
pop
push
lahf
cmp
in
cs
inc
movsl
and
pusha
mov
leave
mov
xor
dec
push
or
jo
mov
nop
and
xchg
lret
jns
imul
xchg
aad
cmp
ss
pop
std
add
ficomps
lret
leave
cmpsb
mov
nop
fbstp
in
lahf
aaa
scas
jge
dec
aas
jae
cmpsb
jge
mov
and
mov
cli
fstp
lcall
mov
pop
pop
and
pop
push
push
shrl
andb
inc
push
jno
cwtl
hlt
fwait
repz
pop
mov
dec
mov
sub
push
fwait
int
mov
loopne
out
push
cltd
dec
pop
mov
negb
jl
add
ds
mov
cmp
dec
fstpl
jo
in
pop
mov
sbb
cmpsb
lret
and
sub
sbb
dec
negl
loope
lods
dec
or
mov
mov
and
cmpsl
cmp
sahf
outsb
popf
lea
aas
adc
mov
xchg
fcomps
mov
mov
cli
loop
lret
sub
lea
xchg
outsb
dec
add
mov
fwait
mov
mov
mov
nop
fimuls
nop
cmp
mov
nop
cmp
push
xchg
sbb
mov
cmp
mov
and
pop
clc
mov
xchg
xorb
jmp
mov
fst
cmp
je
loopne
je
or
mov
test
ja
xor
leave
push
movsb
and
ds
xchg
popf
sahf
pop
inc
stos
lret
outsl
add
mov
mov
cmp
jne
sbb
clc
cs
out
jge
xor
lods
pop
push
andl
test
sbb
xchg
xorl
nop
push
dec
bound
dec
xchg
mov
sub
cmpsl
lods
xchg
fwait
xor
jne
push
xchg
xor
jecxz
aas
jg
or
pop
jp
nop
push
cltd
mov
push
jmp
scas
test
cmpl
mov
ret
add
fsubrp
xchg
or
cmp
and
xor
mov
mov
in
sub
shr
clc
pop
fimuls
sbb
nop
in
cmc
or
xchg
or
rorl
cmc
lea
mov
mov
jmp
and
mov
dec
loop
lods
nop
mov
mov
jb
push
imul
movsl
mov
nop
dec
push
hlt
das
imul
pop
sbb
cmpsl
dec
int
je
cld
and
ljmp
xchg
out
lods
lahf
inc
add
jge
jecxz
mov
rcr
cmpsb
int
call
adc
xor
iret
push
insl
xchg
aad
dec
bound
dec
sbb
hlt
adc
ret
adc
mov
fstl
stos
pop
xchg
scas
int3
mov
cmp
cmp
or
jnp
mov
movsl
inc
sbb
dec
or
stos
test
and
scas
fwait
test
cmp
add
int
sti
insb
sub
lahf
dec
sbbl
sub
movsb
outsb
push
out
cmp
loop
mov
subb
xor
call
cmc
cli
outsb
data16
pushf
xor
out
fisttpll
xchg
test
sub
fbstp
and
adc
hlt
jge
fimuls
loop
xchg
loop
sub
xor
or
push
xor
fcoms
and
fisttpl
leave
stos
outsl
lret
jl
rorb
add
shll
push
lret
push
lock
cmpsb
fsts
push
xchg
add
push
pop
enterw
and
mov
sarb
stos
add
jg
lcall
inc
fldl2e
cmp
andb
dec
cmpsl
jo
ret
data16
fwait
shlb
xorl
cmp
popf
aad
xorl
push
push
ficomps
add
pop
sub
loop
lret
cmp
and
jecxz
lods
xor
adcl
clc
or
popf
dec
and
dec
mov
into
fidivl
jnp
fidivrl
int3
fstps
xor
or
or
add
int
dec
lods
leave
mov
stc
sub
fisubrs
movsl
ds
insl
adc
fwait
cmp
ret
adc
sub
pop
add
mov
inc
mov
out
lcall
es
sub
jge
std
mov
insl
jne
or
mov
xchg
shrb
mov
push
sub
jmp
xlat
repnz
movsb
mov
std
js
pop
test
dec
movsb
pop
leave
gs
sub
push
rcll
xor
rolb
test
cmp
inc
mov
jg
lcall
inc
mov
in
stc
imul
xorl
ss
sub
jbe
dec
dec
aam
mov
fwait
sbb
push
mul
sbb
dec
and
imull
xchg
fistps
push
push
dec
into
mov
cli
mov
xchg
fs
mov
pop
rorl
mov
lahf
xor
test
lcall
iret
movsb
into
popf
nop
push
mov
xor
fstps
repnz
scas
test
ret
nop
dec
adc
addb
mov
inc
jle
ljmp
insl
sbb
stc
xor
mov
popf
sub
fwait
sbb
pop
dec
xchg
mov
sbb
lret
xchg
sbb
sbb
mov
fwait
test
fnsave
mov
nop
cwtl
in
sarb
mov
sbbb
fistps
aas
movsl
xor
mov
je
data16
mov
std
call
popf
adc
xor
sbb
jae
xchg
jo
out
fwait
cli
enter
movsb
adc
mov
test
frstor
push
sub
test
fstpl
jb
mov
addr16
dec
push
testl
test
pop
gs
daa
pop
popa
push
pop
jnp
daa
inc
mov
nop
les
mov
sub
push
mov
iret
pop
jb
dec
jnp
pushf
lods
fwait
push
lock
mov
js
out
or
pop
imul
mov
xor
jp
paddw
sbb
add
sbb
daa
jecxz
cmpsb
jmp
dec
dec
in
ret
mov
cmp
pushf
xor
dec
enter
push
test
jge
jne
mov
fwait
in
movsb
adc
out
and
fldl
test
jmp
cmp
jle
std
es
jns
outsb
test
movsb
nop
or
inc
push
pop
call
xor
mov
or
andnps
idiv
adc
sub
cmpsb
mov
push
xlat
mov
dec
sahf
fldt
bound
aaa
mov
inc
in
sahf
lods
fistpl
out
dec
pushf
movsl
shll
ret
inc
fwait
gs
cmp
hlt
loope
scas
loope
and
bound
pop
mov
xor
dec
mov
inc
repz
ja
jmp
fwait
repnz
in
mov
loopne
xchg
call
adc
jns
fstl
jno
jp
inc
jge
fwait
das
sub
and
frstor
aas
sarl
adc
call
andl
ror
outsl
ja
xchg
das
addr16
mov
outsb
inc
fidivs
or
add
add
push
dec
call
adc
lea
pusha
sub
push
dec
lret
mov
pop
jbe
mov
sti
cmpsl
pop
push
in
in
jle
loopne
out
xchg
xchg
push
pop
jecxz
nop
xchg
das
dec
dec
ret
ret
jg
movsl
fcompl
fidivrs
jp
sub
and
jae
fwait
dec
cld
scas
add
outsb
xor
xor
pop
aas
push
nop
cmpsl
adc
add
je
dec
icebp
jbe
push
cmp
add
pop
xchg
cwtl
push
fisubs
ja
leave
push
pop
sub
mov
iret
pop
leave
dec
lahf
mov
fsubrl
enter
push
sub
cmp
xor
jbe
ret
fwait
or
sbb
frstor
loopne
jns
jns
mov
stc
pop
cmp
or
dec
aad
repnz
or
cmpsb
jbe
nop
dec
pop
push
loop
pop
les
ficomps
andl
pushf
pop
loop
fwait
stos
push
sub
jne
dec
dec
in
out
ss
jae
xchg
mov
or
sbb
xchg
loop
mov
mov
fwait
xrelease
into
adc
aaa
aaa
mov
xchg
push
sub
xor
insb
jnp
push
arpl
in
lods
mov
pop
lahf
out
lret
dec
sahf
adc
loope
add
xchg
jmp
xchg
xchg
fiadds
xchg
sbb
mov
fstpl
cmp
lea
sti
pushf
dec
sub
add
mov
or
mov
sbb
outsl
movsl
ror
fidivs
dec
push
cmp
stc
sbb
jl
dec
dec
ficoms
push
gs
int3
aas
push
pop
xor
leave
add
clc
fstpl
lcall
cmp
jmp
cli
mov
lret
rorb
inc
lock
outsl
fwait
mov
ret
movsl
push
fimuls
cmp
sti
popf
sbb
adc
or
mov
xchg
popf
aas
mov
daa
pop
add
pop
fwait
fwait
xor
movsl
shll
sub
mov
sbb
or
inc
test
mov
int
or
mov
les
or
mov
leave
add
ds
dec
pop
dec
mov
add
mov
out
mov
inc
std
push
fiadds
sub
rcll
mov
jp
dec
and
fisubrs
push
in
in
pop
mov
push
ret
loopne
jo
rorl
pop
decb
loop
bound
lods
mov
shlb
insb
and
in
inc
mulb
fs
std
mov
lea
add
mov
lcall
adc
shl
sti
or
mov
icebp
es
ja
gs
fwait
repnz
dec
into
and
add
repnz
adc
mov
out
sti
imul
pop
nop
or
iret
pop
push
dec
xlat
outsl
dec
mov
loope
inc
sahf
push
push
mov
loop
xor
mov
pop
dec
fwait
cmp
loopne
pusha
sbb
mov
push
dec
jmp
push
fucom
push
leave
xor
std
lods
and
or
add
je
fwait
icebp
stmxcsr
fisubrs
fidivl
inc
nop
inc
inc
adc
dec
test
pop
mov
mov
dec
out
jnp
mov
adc
dec
xchg
fisubs
push
mov
nop
fsubl
rorb
jmp
push
dec
out
loope
or
adc
xor
lahf
cmp
dec
add
add
fwait
cld
mov
sti
popa
sti
cmp
adc
cmc
pushf
arpl
jns
fldt
stos
add
leave
jne
movsl
mov
inc
add
sbb
sbb
xchg
push
push
mov
cmp
bound
push
inc
xchg
daa
xlat
les
fdivs
cmp
popf
mov
mov
jno
ds
adc
frstor
mov
out
adc
idiv
ljmp
es
loope
pushf
sti
mov
loope
push
cmovp
inc
inc
dec
push
xchg
push
fwait
adc
hlt
push
cmp
xchg
faddp
stc
loope
mov
mov
test
fisttps
xchg
sahf
add
pop
fwait
mov
sti
mov
rcll
adc
icebp
add
push
int
jae
sub
jmp
fldcw
fwait
sbbl
hlt
adc
xor
and
iret
xchg
fidivs
out
xchg
sub
push
stc
fwait
rorl
jbe
push
add
aas
mov
jns
nop
cmpsl
or
xor
fiaddl
dec
jmp
jmp
mov
fisubs
lahf
je
lahf
cmp
outsb
dec
ficomps
out
test
fwait
sbb
je
adc
jmp
cs
lds
cli
out
xchg
into
mov
movsb
sub
enter
repz
jae
mov
fisubs
movsl
xchg
cld
xchg
push
jge
mov
pusha
xor
sub
ficoms
mov
adc
out
sarb
mov
sbb
pushf
jecxz
pop
leave
fcmovnbe
stc
ljmp
mov
push
inc
xchg
test
adc
mov
pop
mov
out
mov
push
sbb
mov
add
fs
or
pop
sarl
aad
push
adc
adc
push
ja
jmp
lds
or
mov
dec
leave
xor
mov
mov
popa
push
add
mov
adc
xchg
nop
fs
out
cmpsb
pop
push
leave
adc
pop
bound
fdivrp
jbe
popf
mov
filds
sbb
sub
bound
mov
adc
push
loop
dec
add
imul
add
movsb
jo
int
js
inc
cli
aad
movsb
and
pop
adc
out
nop
and
jle
sbb
int
out
jb
fsubrs
pop
mov
sub
mov
sahf
fwait
and
adcl
mov
lret
js
mov
das
mov
cli
push
bound
stos
imul
imul
mov
dec
cli
aaa
fisubs
xchg
lods
add
fwait
mov
cmc
lds
frstor
jno
ja
ret
mov
das
lret
add
xor
pop
fisubs
aam
mov
test
sub
dec
push
and
nop
lods
repz
enter
int3
push
loopne
or
int
xchg
clc
cmp
mov
fdivp
or
adc
jo
das
ljmp
ficomps
mov
nop
rcrl
subl
js
incb
mov
lock
mov
dec
fxch
rcr
mov
dec
dec
or
fwait
pushf
jle
movsl
inc
jno
rcr
in
mov
out
mov
push
xchg
lcall
jne
pop
shlb
dec
jl
sub
cs
mov
in
movd
outsb
fimuls
jp
js
inc
cmc
sbb
test
mov
aaa
xchg
lock
sbb
mov
dec
cwtl
fldl
lcall
and
aam
ficomps
dec
jge
pop
push
jmp
lret
jno
add
arpl
int3
enter
gs
push
fsubl
cld
std
and
mov
xchg
int3
dec
mov
cmpsb
std
xor
int
pop
psubsb
outsb
sbb
xchg
pop
js
in
sub
push
jl
mov
lahf
mov
adc
data16
push
test
xchg
fwait
inc
mov
inc
clc
adc
nop
or
jne
dec
into
add
push
ret
js
xchg
addr16
lock
sbb
mov
ret
movsl
subb
xlat
cli
sbb
lret
mov
xor
arpl
testl
mov
push
mov
ret
out
mov
jl
scas
dec
jne
push
cmp
imull
leave
add
pop
fsubs
mov
add
xchg
test
jns
lcall
mov
dec
clc
push
jne
mov
dec
insl
pusha
fdivs
fwait
mov
mov
repnz
push
mov
lods
js
std
cmp
and
es
dec
xor
sti
adc
lahf
and
dec
add
pushf
push
pop
aas
dec
mov
pop
bnd
ja
andb
int3
xor
xchg
mov
cmp
test
mov
scas
ja
mov
adc
adc
add
inc
fnstsw
and
sub
sbb
fs
and
or
lahf
ds
sahf
mov
cwtl
push
fucomip
cmpsb
jg
mov
sbbb
into
jg
sub
push
clc
cltd
or
dec
out
jmp
push
add
inc
in
test
lea
cmpsl
filds
mov
and
xor
das
aas
xor
dec
icebp
stos
cli
add
jae
aas
cwtl
mov
xchg
popa
inc
incb
loope
les
imul
outsb
sbb
jnp
dec
adc
push
sbb
scas
test
clc
lret
inc
mov
or
jge
push
mov
mov
lods
mov
fisubrs
sub
cwtl
sbb
int3
mov
jmp
lahf
mov
xlat
mov
xchg
sbb
scas
sbbl
or
jb
dec
push
fdivrl
push
cmpsb
rorb
int
pushf
xor
xchg
lret
sbb
fcomps
pop
push
jl
test
xlat
and
mov
int
xor
jae
jmp
dec
pop
or
movsb
outsl
sahf
fisttpl
mov
cmp
mov
and
mov
push
add
xor
js
je
dec
pop
ss
aam
lret
nop
lcall
xchg
push
lods
leave
sbb
mov
seta
nop
inc
jmp
rclb
jns,pt
int3
subl
fcmovne
jns
mov
imul
daa
lret
subl
inc
ds
popf
sahf
jns
out
mov
bound
xchg
fisttps
jp
and
push
sub
test
stos
lds
aam
insb
cmpsl
sahf
xor
mov
inc
jmp
mov
jg
test
mov
test
loope
adc
inc
sbb
cmp
nop
cmp
inc
je
leave
add
out
sbb
jl
nop
repnz
int
mov
ljmp
jnp
inc
sahf
dec
mov
pushf
imul
fidivrs
in
gs
adc
mov
xor
xchg
mov
jne
cmp
xor
pop
mov
nop
fistpll
imul
fidivs
cmp
cmp
push
dec
mov
push
es
sbb
inc
imul
pop
inc
sbb
push
xchg
sub
jnp
fwait
sbb
or
push
mov
fidivs
icebp
out
nop
adc
ljmp
pushf
leave
stc
int
std
out
nop
test
push
repnz
lret
cmp
add
je
fwait
fwait
outsl
pop
cmpl
loopne
and
std
stos
aaa
pop
add
testb
fsubrp
bound
pushf
nop
test
pop
mov
dec
pusha
imul
mov
dec
sub
fistl
cs
fwait
sub
fnsave
push
shll
or
jecxz
je
cltd
dec
and
dec
pop
sbbb
fcomps
pushf
std
loopne
dec
jmp
movsb
lods
cmc
ja
mov
dec
jmp
pop
sbb
fisubs
nop
xor
or
xchg
adc
leave
dec
xchg
inc
pslld
stc
xchg
ret
dec
test
add
shrb
dec
sbb
and
les
push
es
fucom
outsl
add
mov
cmp
jg
mov
inc
dec
mov
cmp
xor
and
lea
cmp
sub
popa
cmp
stos
les
sti
scas
shrl
lcall
xor
out
into
cltd
fwait
jle
xor
xchg
faddp
cmp
xchg
xchg
das
jl
pop
in
cmp
imul
jo
ds
mov
testb
push
test
enter
jge
sti
aas
sub
aam
xchg
xchg
inc
sbb
mov
pop
jbe
rcll
test
add
fnsetpm(287
cs
mov
data16
repz
dec
pop
clc
stc
push
and
jg
movsb
dec
fsub
aad
push
jb
pop
scas
fs
test
sbb
nop
xchg
xchg
inc
pusha
jne
hlt
dec
xor
dec
mov
and
mull
nop
push
push
dec
ret
pop
out
adc
jmp
sbb
push
lret
stos
adc
test
dec
ss
icebp
mov
mov
mov
pop
pop
sub
mov
mov
xchg
cltd
or
pop
mov
jae
cs
cmp
sub
push
or
xor
enter
gs
lea
icebp
jp
testl
lret
jns
push
lahf
mov
incl
mov
jns
lahf
outsl
arpl
nop
enter
shll
test
ljmp
pop
xor
and
fmulp
mov
pop
rcll
and
lea
arpl
sbb
fwait
in
mov
push
fmulp
testb
hlt
and
nop
pop
stos
push
insl
mov
xor
idivb
fwait
stos
rcrb
daa
popa
pop
sbbb
sbbb
ss
push
and
stc
inc
call
dec
insl
out
in
rclb
in
dec
cmp
xlat
push
into
xor
pop
pushf
nop
jmp
icebp
adc
push
pushf
dec
pop
pop
mov
fmuls
in
loopne
inc
mov
lret
popa
jmp
dec
dec
inc
rep
std
stc
fcompl
xchg
imul
inc
test
adc
mov
adc
movsl
aad
pop
dec
fisubs
jo
xchg
cmc
sbb
cmpsb
jg
test
iret
cli
fldcw
push
sahf
clc
test
lahf
movsl
fwait
mov
cwtl
pop
dec
je
mov
jbe
adc
repz
loop
fstp
cmp
rcr
sbb
or
mov
mov
push
fstps
mov
es
fsubrl
lret
test
fwait
jmp
rclb
stos
mov
lret
clc
aam
pop
mov
xor
xlat
fcom
mov
ficoml
add
ficoms
add
nop
sbb
lea
fmull
dec
ret
out
sub
jnp
nop
std
divl
std
dec
fcmovne
leave
into
push
aas
pusha
test
loope
inc
cmp
push
and
aad
push
pusha
lods
and
xchg
push
mov
test
push
jg
sub
xchg
pop
sub
adc
nop
ret
mov
es
dec
pusha
dec
lcall
fwait
in
popf
hlt
xchg
pop
sub
xor
call
xchg
jmp
mov
push
in
loop
dec
sti
push
jle
lret
xchg
fwait
fwait
inc
cmpsb
cli
mov
mov
push
dec
push
sbb
insl
imul
pusha
dec
inc
sahf
cld
pmaxub
scas
iret
lahf
addr16
fidivrs
mov
xchg
jae
pop
mov
adcl
arpl
push
loopne
adc
xor
mov
mov
pushl
outsl
or
xorl
into
loop
fwait
mov
push
dec
leave
pop
fisubrs
in
jge
nop
sbb
es
xchg
lock
dec
lods
fidivl
ret
mov
dec
sti
fwait
scas
xchg
xchg
jmp
inc
stos
in
lret
inc
pop
inc
dec
pop
fs
rcrl
and
popf
inc
lods
or
mov
adc
neg
std
mov
and
mov
sub
loope
cmp
cmp
adcb
mov
cwtl
out
cmp
push
lock
scas
mov
int3
nop
test
pop
jge
dec
add
pop
adc
imul
and
and
jae
push
fisubs
sbb
mov
nop
xor
in
sbb
mov
dec
mov
hlt
mulb
fwait
cmp
cltd
xchg
hlt
sbb
mov
jns
mov
pop
fwait
sub
arpl
mov
xlat
sub
out
xorl
mov
pop
pop
mov
out
jl
cmp
pop
and
scas
mov
repz
cmpl
xchg
add
push
addr16
dec
lahf
add
ja
lret
inc
lds
inc
cld
flds
mov
cmp
pop
mov
sub
lret
leave
insb
xchg
mov
loop
add
pop
xor
test
cmp
nop
add
push
addr16
jle
dec
push
adc
ret
fwait
stc
mov
sbb
push
fidivrs
shll
xor
es
mov
fisttps
daa
bound
inc
sti
popf
add
fwait
sti
or
lods
vmwrite
ficoms
fstpl
seto
or
stos
dec
sbb
sub
cltd
mov
aaa
or
mov
iret
push
push
pop
mov
mov
xchg
loop
push
add
ret
or
mov
pushf
dec
ljmp
imul
jp
lock
aas
loopne
sbbl
je
mov
mov
movsb
fwait
mov
bound
jnp
mov
pop
ret
xchg
mov
dec
add
push
sbb
fwait
mov
xlat
mov
cmp
mov
xchg
dec
in
out
cwtl
std
insb
xor
test
xchg
test
popf
sbb
push
sbb
movsb
push
add
mov
push
shl
jae
lods
gs
push
hlt
mov
mov
call
repnz
pop
loopne
xor
lods
add
and
lock
fsubp
jmp
dec
sbb
outsl
stc
fiadds
dec
mov
and
push
lahf
sub
and
test
in
ficompl
ljmp
push
insb
mov
dec
fmulp
cld
mov
pop
push
and
sahf
es
sbbl
inc
mov
push
imul
and
fists
mov
cmpsl
dec
loopne
xchg
aaa
in
fnstcw
popf
insl
push
frstor
jne
inc
jns
je
push
jmp
imul
mov
ret
add
rcrb
stc
lods
mov
xorb
jne
test
addr16
pcmpgtb
adcl
mov
clc
or
jecxz
sub
pop
jg
pop
repnz
jle
in
clc
or
nop
into
add
negb
mov
cmc
jg
aaa
out
fwait
loope
mov
imul
mov
mov
nop
aad
push
es
call
pop
jae
push
mov
sarb
mov
imulb
jg
stc
push
sahf
xor
and
stos
mov
out
inc
sbb
pop
pop
fucomp
dec
repz
loopne
mov
stc
sub
rorb
sub
add
loopne
movsl
mov
sahf
pop
inc
sti
cmc
sbb
subl
mov
sub
sbb
pop
test
xchg
mov
inc
adc
test
push
push
dec
roll
stos
dec
out
js
roll
fwait
push
fidivs
adc
xor
mov
loope
int3
test
xchg
nop
ret
in
popa
xchg
dec
sahf
nop
push
shrl
cwtl
inc
inc
mov
sbb
sub
sub
pop
adc
mov
pop
mov
arpl
cli
repz
int
or
leave
adc
in
push
lods
fstl
movsl
xchg
test
fiadds
xor
inc
nop
stos
gs
jmp
cmc
push
push
mov
fwait
push
mov
imul
push
pop
nop
push
test
repnz
or
jge
mov
ja
push
and
gs
aaa
sahf
adc
sbb
mov
push
mov
pop
fsubrs
mov
fmull
cmpsb
pop
adc
das
lds
dec
inc
xchg
mov
test
xchg
dec
xchg
xchg
fwait
movsl
popf
inc
push
data16
fdivl
stos
imul
out
jl
push
mov
add
or
nop
in
mov
sub
and
xor
shll
xchg
int3
ljmp
sbb
adc
push
nop
sbb
sub
scas
dec
push
enter
icebp
fistl
lahf
push
clc
movsb
inc
adc
inc
dec
es
int3
or
lock
stc
or
ja
in
mov
cwtl
mov
lods
fwait
insb
jmp
gs
cs
pop
cltd
aaa
sub
sbb
add
ss
cmp
cmp
ffree
lret
arpl
xchg
add
jae
mov
or
fwait
xchg
cmp
cmp
jge
jg
test
mov
fs
cmpb
mov
les
fucomi
mov
lock
mov
push
push
loop
jecxz
xor
aas
fsubp
xor
orl
jecxz
mov
sbb
aaa
loope
lods
or
jp
stos
push
adc
xor
pop
loope
xchg
les
rcr
test
aam
cmc
sub
and
fstps
jae
or
mov
push
cmp
cmpsb
aam
xor
jge
push
mov
into
or
or
inc
andl
inc
add
or
mov
adc
sub
std
out
jnp
inc
pop
mov
out
xor
ss
mov
lret
jne
pop
sub
and
mov
cmp
cli
inc
in
dec
test
pushf
in
loope
pop
xlat
popf
push
xchg
mov
inc
cltd
inc
xchg
push
xchg
mov
mov
fnstsw
cmp
jge
cltd
jb
jno
cmpsb
dec
push
cmp
jne
sbb
movsl
sbb
sub
push
mov
in
in
sbb
add
in
ficoms
xchg
mov
push
movsb
sbb
inc
cmp
pop
ss
lret
js
push
fwait
sbb
outsb
pop
xor
and
push
cld
sbb
lahf
popf
jp
fldt
push
add
or
test
cmc
out
stos
movsl
fucomip
mov
push
je
int
popf
inc
xlat
sub
sbb
stos
out
jne
repnz
dec
roll
adc
hlt
lds
and
dec
cmp
enter
xor
cmpl
adc
bound
mov
fisubs
adc
repz
nop
mov
or
adc
mov
clc
hlt
add
mov
icebp
rcr
push
inc
cmp
jae
lods
mov
rorb
movsb
out
lock
rorb
fwait
inc
js
dec
ja
push
cmpsb
sti
in
fs
jl
negb
int
loope
xorb
ljmp
sbb
dec
lea
fwait
es
jmp
xor
xor
lret
sbb
test
xor
inc
cmpsb
dec
push
and
push
cmp
mov
aad
insb
loop
xchg
mov
push
and
pop
mov
nop
xor
add
mov
adc
test
cli
jg
call
inc
adc
test
add
fwait
or
dec
mov
cmpl
xchg
leave
sub
mov
add
and
push
ret
fstps
or
and
inc
out
xchg
arpl
pushf
mov
mov
mov
pop
cmpsb
in
jnp
cmp
fiadds
sub
rclb
xor
pop
xchg
pop
jb
orl
mov
fwait
popf
pop
add
or
enter
daa
or
push
negb
xchg
in
in
sub
fwait
addr16
ret
dec
mov
test
addb
lods
jb
jp
jge
cmpsb
sahf
xlat
rcr
add
ret
sub
enter
nop
inc
stos
jnp
movb
imul
pusha
cmc
pop
test
pushf
cwtl
xor
ret
mov
cmp
inc
pusha
xor
popa
xchg
dec
movsb
add
xchg
mov
enter
jg
mov
out
xorb
xchg
pop
movsb
dec
adc
lods
pop
mov
fistps
scas
cmpl
nop
loope
mov
add
jbe
mov
ja
fpatan
das
inc
xchg
nop
out
fwait
xchg
out
aaa
nop
ficomps
ljmp
mov
dec
cmc
aad
jecxz
adc
mov
std
xor
jno
cmc
mov
scas
lret
adc
adc
xchg
inc
xchg
mov
sbb
movsl
ficoms
sub
mov
sbb
mov
inc
mov
scas
or
or
mov
lret
cmpsl
scas
mov
mov
nop
in
or
ror
mov
lods
dec
adc
mov
jno
jnp
movsl
imul
in
pop
fcmovnu
xlat
push
aad
push
int
lcall
mov
shrl
and
adc
cs
pop
mov
testb
and
int
js
test
in
cmp
xchg
mov
clc
pop
movsb
lods
adc
sbbb
pop
popa
adcb
idivl
nop
push
xchg
mov
cmp
jecxz
push
sub
fwait
jae
sbb
push
push
into
dec
and
std
xchg
dec
sub
popf
lret
dec
xchg
pop
or
sar
fisttps
out
test
add
fwait
insl
test
add
fcomp
in
cmp
jb
adc
dec
cmp
add
ficomps
cmp
xchg
xchg
jno
hlt
push
sbb
inc
ficoms
mov
sti
or
sbb
sahf
dec
dec
or
outsl
mov
xchg
inc
stos
or
cmpsl
adc
push
push
mov
dec
inc
adc
sarb
fldenv
jo
aad
lds
cltd
fwait
add
ret
sbb
xor
cmp
adc
sub
pop
jnp
push
sahf
fwait
sub
mov
popa
fimuls
xorl
pop
push
and
xor
fwait
lret
mov
sahf
mov
fstpl
popf
in
fisubrl
nop
dec
sahf
inc
and
dec
lods
and
negb
pop
sti
xor
frstor
dec
adcl
mov
ss
decb
add
je
in
pop
xor
nop
cltd
inc
icebp
xchg
cmc
movsb
push
cmpsb
dec
std
call
or
mov
andb
mov
xchg
loope
dec
mov
scas
repz
pop
cli
sbb
pop
loope
dec
push
aam
lea
mov
inc
mov
mov
pop
and
dec
fwait
cmc
fimuls
xchg
xchg
inc
sbb
xor
cmp
add
stos
cmp
lea
shlb
adc
pushf
inc
add
sub
push
nop
pusha
mov
dec
lds
add
pushf
aas
ficoml
sub
mov
cli
lahf
outsb
sahf
daa
pushf
in
decb
inc
mov
dec
lea
sbb
out
pop
mov
lods
push
aam
insl
ficompl
adc
mov
movsb
push
pop
xchg
xchg
rorb
movb
mov
nop
ret
sub
add
dec
icebp
cmovp
inc
lds
dec
int
cmc
pop
inc
adc
in
pop
les
in
adc
jno
dec
push
pusha
gs
lret
in
clc
loope
dec
mov
lock
sbb
test
incb
dec
mov
sub
jge
jno
mov
imul
hlt
sbb
insb
je
sahf
mov
push
dec
lods
push
adc
adc
cmpb
adc
enter
lods
sarb
and
lods
lds
pop
push
inc
movsb
scas
leave
adc
fistpl
push
adc
dec
scas
or
add
lret
rcrl
ds
in
sub
sbb
icebp
sti
add
lcall
jo
loop
inc
mov
xor
xor
push
clc
or
movsb
dec
jnp
mov
mov
jae
mov
outsb
adc
hlt
adc
popf
loope
fwait
lea
mov
fwait
mov
push
pop
nop
pop
jg
ss
dec
dec
lock
xchg
aaa
jecxz
xchg
and
call
mov
push
sub
inc
int3
push
sbb
push
fwait
add
and
ss
fwait
iret
inc
aam
mov
fisttps
pop
idivl
cmp
data16
jnp
pusha
inc
nop
xor
scas
lods
dec
and
mov
jne
mov
fcompl
imul
mov
mov
jecxz
test
stos
inc
push
shl
sbb
xchg
jle
divl
shl
shlb
int
mov
jo
in
or
adcl
xorl
js
push
stos
push
lods
dec
arpl
pop
mov
lods
lret
mov
push
mov
xchg
test
sbb
dec
dec
mov
cs
subl
call
nop
push
pop
movsl
mov
insb
xchg
mov
sbb
cmp
mov
arpl
dec
sub
andnps
pop
jns
xor
ljmp
shlb
mov
in
nop
dec
shl
stc
jae
lret
pop
popa
ljmp
pop
nop
pop
xchg
std
cmp
jae
cmovp
ret
dec
cltd
push
pop
stc
lahf
pop
add
pop
push
adc
test
addr16
imul
inc
ss
leave
jl
dec
es
mov
adc
cmp
xor
sbb
mov
ja
lcall
mov
icebp
call
stos
push
sbb
fs
test
and
imul
lahf
and
ds
mov
and
adc
cld
sbb
dec
pusha
push
dec
in
mov
add
mov
insb
loope
or
std
mov
ss
nop
into
stos
mov
cmpsb
shlb
or
imul
xchg
les
and
or
imull
xor
pop
aad
hlt
xchg
push
or
enter
jb
jl
sub
fsubrp
xchg
cld
testb
aaa
cmp
sbb
pusha
push
sub
xchg
sub
pop
dec
jmp
xchg
mov
stos
adc
jb
dec
test
jo
dec
nop
mov
add
out
lea
lcall
fnstsw
dec
inc
rcll
lods
cli
add
sbb
ljmp
dec
inc
xchg
or
repz
rol
xchg
mov
or
enter
jno
fnsave
sti
iret
cs
fwait
cld
add
add
jne
mov
cmp
in
cmpsl
cmp
jnp
mov
in
xchg
cwtl
pushf
cmp
fsubrl
and
push
fmull
push
imul
sbb
lds
stos
add
adc
jecxz
mov
or
or
cmc
shrl
and
pop
push
int
sbb
insl
fnsave
ficomps
dec
mov
nop
inc
stc
mov
add
lods
rcl
pop
xchg
mov
pop
ljmp
push
cltd
mov
scas
nop
mov
in
stos
and
imul
sub
outsl
or
dec
mov
stc
add
iret
fidivrl
das
movsb
scas
leave
cltd
not
rcr
adc
sbb
test
jne
xchg
out
mov
xor
fiadds
cmp
pop
jno
les
dec
mov
fsubp
out
pop
pop
nop
pop
sub
push
adc
test
aam
imul
sahf
inc
mov
jmp
mov
leave
and
popf
sbb
sarb
mov
pop
fsubrp
add
std
mov
lahf
cltd
sbb
jae
mov
sub
data16
dec
popf
pop
out
inc
mov
push
nop
cmpsl
stos
lock
ds
dec
icebp
mov
icebp
cltd
ret
mov
xchg
pop
add
aad
jp
mov
repz
or
sbb
cmp
jge
fdiv
and
or
inc
push
pop
jl
or
push
adc
fwait
pop
inc
test
fisubrs
lock
add
jle
and
ror
push
outsl
dec
sahf
gs
xor
lcall
mov
stos
inc
xor
nop
das
shlb
mov
mov
push
mov
lock
mov
sub
push
js
jecxz
dec
gs
pop
jbe
adc
cmp
js
cmp
sbb
out
popf
aad
mov
mov
push
into
xchg
adcb
adc
lahf
sub
imul
popa
imulb
xchg
cmp
int
and
sbb
add
fcomps
pop
jnp
fwait
mov
jb
nop
daa
add
cmp
imul
aam
lcall
sub
or
lea
mov
push
nop
cmp
or
js
clc
dec
xor
mov
aas
xchg
xchg
mov
and
fsubrp
mov
xchg
setl
ja
repz
sub
je
jo
aas
nop
push
xor
mov
out
jae
jl
push
nop
cld
nop
inc
scas
lea
inc
insl
dec
xor
fwait
popa
fistps
iret
add
xchg
dec
cmp
ror
cmp
leave
jmp
imul
jnp
xor
rol
mov
mov
test
test
aaa
jno
xor
mov
xor
xchg
aaa
mov
out
lret
ret
lea
sub
mov
mov
xor
mov
bound
cmp
or
xlat
mov
mov
sub
sub
inc
enter
repz
cmp
mov
ds
ljmp
dec
fs
clc
jae
sbb
jg
pop
or
in
imul
mov
inc
or
rorb
movsb
in
lods
push
inc
jbe
fwait
sarl
push
jl
enter
clc
popa
pop
mov
dec
in
mulb
fwait
addr16
push
sti
xchg
add
loope
arpl
cli
pop
mov
lods
jle
repz
fisubs
mov
repnz
es
xchg
imul
clc
frstor
out
push
pop
nop
movsb
imul
dec
push
pop
stos
jmp
out
cmp
mov
xor
xchg
xor
popf
add
push
pop
cmp
pop
cmc
sbb
sub
test
fwait
or
mov
in
out
stos
cltd
pushf
or
scas
movsl
iret
fstl
test
stc
and
cmp
mov
dec
nop
lds
inc
mov
add
testl
push
pop
nop
fs
into
stos
ret
dec
dec
xor
dec
inc
inc
cld
pushf
outsb
jle
jno
pop
push
xchg
and
sbb
sahf
jae
bnd
dec
inc
in
cmpsl
loop
add
xchg
je
lret
mov
mov
pop
cmp
ljmp
mov
and
lea
jp
xor
lahf
cmpsl
pop
mov
cltd
cmpsl
mov
sub
mov
sbb
lea
inc
mov
rcll
mov
in
dec
fidivs
jo
subl
popa
into
ficomps
addr16
shrl
fldl
stc
push
mov
mov
or
or
jns
int
xchg
inc
addr16
fistpl
jl
pop
mov
mov
jge
push
fwait
mov
xchg
popa
fisubs
jmp
or
sbb
push
sub
sub
xor
jmp
push
inc
ffree
cmp
out
adc
add
mov
inc
popa
pop
jmp
jle
stc
ffree
sahf
adc
outsb
testb
cmp
and
xor
adc
filds
fwait
mov
jp
dec
ficomps
mov
xchg
add
jne
xor
inc
sahf
rclb
jns
push
dec
aas
mov
sti
ficomps
adc
sti
pusha
iret
push
xor
push
adc
js
xor
dec
out
rcr
enter
pop
arpl
imul
in
jo
mov
and
jp
sub
ljmp
sbb
clc
xor
jge
mov
aad
xor
ja
push
cmp
sarl
cs
xchg
cld
and
pop
and
dec
cmc
mov
and
dec
das
xor
mov
pop
inc
daa
mov
addb
xor
test
xchg
adc
fidivrl
sbb
outsb
sub
xchg
subb
sub
popa
imul
addr16
dec
scas
call
jne
jmp
vmovapd
sarb
and
fwait
gs
adcb
mov
jge
jecxz
adc
jg
cmp
push
fxch
cltd
adc
lock
dec
mov
cmp
fwait
xor
inc
leave
fldl
insb
sub
ret
test
popf
into
cli
sti
out
rorl
lods
lds
jae
mov
cmp
fwait
push
mov
push
lock
repnz
mov
out
xchg
pop
imul
pmaxub
fs
scas
shr
mov
inc
add
in
testl
jl
inc
lods
test
scas
xor
xchg
aad
add
dec
mov
adc
push
jg
and
sti
cmp
lds
fiadds
lret
push
out
out
hlt
jl
cmp
xor
fwait
mov
nop
mov
mov
add
cs
pop
cltd
add
mov
imul
dec
pop
push
int
add
push
jae
mov
mov
xlat
cmpsb
ja
jecxz
adc
xor
mov
mov
jmp
sub
push
fidivs
inc
pop
fiaddl
notl
cmp
loope
xchg
dec
enter
mov
lock
cmpb
popf
in
cwtl
xchg
mov
jge
jnp
mov
add
fdivrl
icebp
fisttpll
or
sbb
or
mov
dec
xchg
add
cmpb
dec
rol
mov
adc
sarb
les
fwait
out
cwtl
int3
faddp
in
cmp
ds
push
push
iret
xchg
leave
ret
mull
cmp
mov
cmpsb
pop
jns
outsb
test
mov
push
cli
add
insl
cmp
pop
imul
pop
push
sbb
scas
data16
outsl
push
in
adc
add
inc
icebp
dec
xchg
xchg
xchg
mov
xchg
into
cld
cmpb
sbb
sarb
mov
sub
dec
xor
js
fwait
sti
clc
jnp
dec
and
sbb
cmpsb
mov
rcll
pop
subb
cmp
cmp
ficoml
push
pop
int
cmp
or
lods
fidivrs
movsb
sbb
mov
adc
scas
add
loop
fisubs
incl
scas
sti
fistl
test
dec
popf
and
int
xchg
popa
pop
push
repnz
mov
das
xchg
inc
and
mov
paddsb
mov
sahf
dec
cmpb
or
jne
sub
or
out
push
jle
mulb
push
push
jl
push
fildll
ficompl
nop
aad
mov
xor
std
xchg
adc
scas
es
fwait
push
out
fsubl
in
movb
lret
pop
inc
test
fimuls
push
imul
jns
pop
mulb
dec
adc
and
or
aaa
fs
data16
xor
adc
ficoms
jne
fisttps
loopne
fadds
dec
sub
aad
outsl
jg
xlat
sti
ds
xchg
fidivs
add
fistl
aad
jne
pop
stos
out
cmc
sti
dec
fdivrp
and
nop
xchg
or
adc
ret
dec
xor
stc
shrl
xor
mov
fstpl
stos
and
mov
nop
out
stc
sbb
int
in
dec
add
nop
or
rclb
dec
paddusw
mov
or
sbbl
or
pop
mov
add
dec
add
adcl
gs
sub
lret
inc
jmp
push
jmp
xchg
je
js
fwait
lods
movb
push
and
xor
cli
mov
adc
push
xchg
and
mov
mov
or
or
dec
test
jmp
mov
subb
and
sub
icebp
adc
test
mov
dec
jecxz
mov
pop
sub
mov
pop
outsb
mov
jbe
int3
adc
aas
fwait
pop
mov
cmp
ficoms
daa
jp
mov
fiadds
lds
jb
inc
pop
loop
std
pop
nop
mov
adc
sub
fwait
cmp
sbb
mov
imul
outsl
fwait
cmpsl
mov
sbb
cwtl
pushf
fnsave
add
push
clc
fcomi
sbb
and
jbe
lock
jmp
cwtl
outsb
xor
fwait
neg
sarb
xlat
xchg
jmp
out
push
nop
cli
jecxz
jp
dec
dec
cli
addr16
fisttpll
jo
cmpsb
pop
fwait
mov
fwait
pop
push
jb
aam
ret
pop
out
nop
or
clc
lods
cmp
dec
push
mov
fwait
aad
sbb
fstl
loop
arpl
fldenv
jb
pop
outsl
xchg
loope
out
add
shlb
je
xor
icebp
cmc
aam
mov
sub
in
xor
ds
push
dec
cltd
mov
adc
mov
das
xchg
loope
ficomps
xor
nop
test
fwait
cmp
dec
mov
popf
lahf
adc
stc
mov
adc
imul
pop
inc
in
jmp
cwtl
dec
mov
sbb
fst
mov
jb
fimuls
and
mov
push
scas
mov
sub
xor
jmp
xor
fnsave
pop
mov
rorb
subl
fwait
cmp
jns
fnstsw
xor
fnsave
orl
pop
fnstsw
nop
mov
notl
push
dec
jecxz
call
or
shlb
iret
stos
lds
ja
sub
in
fildl
inc
mov
dec
out
into
fwait
rcr
fldt
mov
sbb
push
shlb
xor
sbb
add
fistl
insl
adcl
aam
pop
in
cs
aam
xor
add
mov
imul
xchg
stos
rcll
add
xor
mov
enter
nop
inc
test
dec
cmp
mov
fwait
cmc
push
jnp
add
cld
dec
das
ret
dec
in
fmull
lahf
inc
mov
imul
dec
push
pop
lahf
mov
mov
cmp
lret
dec
fiadds
cwtl
cmp
fwait
pop
inc
lods
sbb
fstp
loop
fldcw
inc
sub
test
daa
inc
cld
fsubrl
fwait
xchg
sbb
or
fadd
pop
fistpll
stos
mov
lret
fwait
ljmp
pusha
fsubp
or
cmp
jl
mov
lock
insb
xchg
pushf
jae
or
inc
dec
sbb
popf
std
dec
push
aas
adc
sbb
sbb
push
xchg
cli
xor
push
lods
xchg
outsb
std
fisubrs
nop
pop
push
and
mov
pop
xchg
pop
in
mov
cmp
je
mulb
scas
rcrl
lret
nop
fidivl
push
out
xor
push
js
test
cmpsb
jecxz
jg
fnsave
jge
aam
dec
out
rorl
lret
jmp
cwtl
dec
sarl
dec
idivl
es
xlat
pushf
stc
xlat
mov
xchg
pop
push
jns
dec
scas
inc
sub
push
fwait
repnz
insl
add
cld
lds
sbbb
jo
insl
mov
xchg
repnz
xchg
pusha
dec
pop
fwait
and
outsl
loopne
popf
cmpsb
ret
pop
nop
dec
sbb
scas
sub
pop
jmp
sahf
mov
push
cmp
lret
pop
into
xchg
fidivs
scas
roll
nop
mov
in
aad
mov
and
jecxz
pop
outsl
mov
hlt
lods
lds
lea
loopne
cwtl
daa
call
xor
or
ret
add
das
fdiv
lods
outsl
aas
mov
mov
mov
dec
and
jp
sahf
sbb
daa
mov
and
and
stos
add
cwtl
dec
iret
jle
lods
cmp
int3
outsl
std
icebp
inc
dec
imul
stos
hlt
lret
xchg
mov
jmp
das
dec
pop
mov
cwtl
and
fdivrs
in
push
mov
fistl
lret
mov
and
or
sahf
in
pop
adc
inc
xchg
push
xor
jmp
mov
adc
stos
jb
jb
lahf
xor
call
imul
or
out
loopne
sbb
cs
aam
push
add
jbe
je
sub
xchg
jle
or
mov
push
sbb
shlb
testb
lret
mov
stos
sub
jge
mov
lods
mov
sbb
mov
movsb
fiadds
xlat
jnp
stos
mov
cmovs
test
mov
cwtl
popa
or
and
mov
pop
mov
rol
out
rcll
dec
dec
out
loop
popa
nop
test
test
cmpsl
inc
jmp
popf
cmp
pop
shrb
lods
mov
jbe
inc
repz
fsubrp
hlt
out
xlat
lock
loop
xchg
adc
dec
lcall
sub
in
pop
fldl
pop
sbb
lcall
pop
fwait
cmp
dec
orb
xchg
adc
js
nop
mov
sub
xlat
xchg
dec
loope
pop
ja
popf
mov
enter
clc
add
xchg
repnz
mov
cwtl
test
push
xchg
xchg
add
dec
filds
addr16
out
cmpsl
pop
pop
cmp
or
pop
rolb
jg
test
mov
popf
fisttpll
dec
imul
nop
cmpsl
cltd
loop
jo
jno
dec
int3
jle
sahf
xlat
mov
mov
fildll
sbb
aad
cld
dec
dec
sbb
mov
jp
je
adc
leave
shll
les
pop
insb
mov
sahf
xchg
and
insb
mov
adc
movsl
dec
dec
adc
ds
icebp
arpl
pop
and
es
xlat
loopne
imul
cmpsl
cmp
fwait
cmpsl
inc
cmp
cltd
ss
lea
mov
or
mov
repnz
ret
pop
inc
xor
in
out
divl
mov
adc
jg
fnsave
sub
mov
inc
insb
aam
or
push
cli
js
xchg
icebp
cwtl
and
fisubs
jnp
pop
sbb
sahf
dec
shrl
ja
jae
out
inc
dec
movsb
les
scas
mov
cmp
icebp
and
cmp
mov
inc
adc
nop
iret
dec
test
subb
je
icebp
pop
cwtl
fcomps
lock
adc
dec
or
adc
xor
das
xchg
add
lock
mov
jge
loopne
lds
push
or
sbb
daa
xchg
inc
decb
pop
mov
inc
adc
push
push
bound
or
mov
or
test
fwait
and
imul
xor
push
pop
les
das
fists
mov
jb
mov
push
mov
fstl
inc
insl
add
fwait
mov
test
push
ficoms
cld
pop
pop
xor
push
nop
sub
cmp
mov
jns
pop
cmp
xor
xlat
inc
xchg
fidivs
lret
fadds
fwait
ret
add
or
out
dec
mov
xchg
add
fistpll
jecxz
fnstsw
mov
outsl
jns
scas
push
hlt
and
fcomps
add
mov
mov
andl
test
xor
enter
pushf
outsl
les
stos
push
add
xor
jl
sbb
test
fmull
out
add
cmp
repnz
loop
mov
xchg
and
or
sbb
mov
mov
cwtl
mov
push
adc
mov
enter
push
inc
les
pop
xor
sub
push
mov
push
rcr
iret
lock
les
mov
leave
mov
xchg
insb
out
dec
xchg
push
lcall
jbe
shl
jge
ficoms
dec
or
lods
movups
lds
nop
adcl
pop
dec
outsb
in
mov
dec
mov
mov
popf
push
pop
dec
in
sarb
and
in
scas
mov
mov
sub
aaa
push
lods
fwait
or
add
into
sub
jae
mov
roll
fisubrs
movsb
cmp
aaa
jmp
mov
pop
mov
cmpsb
push
add
out
mov
inc
negb
mov
scas
cmp
xor
imul
push
insb
cmpsl
mov
mov
dec
test
push
push
and
inc
push
xor
sahf
fmull
pop
xor
pop
jmp
inc
test
sbb
int3
mov
sar
jbe
mov
jno
nop
xor
pop
sbb
out
hlt
mov
leave
mov
call
daa
mov
nop
cmp
lret
jb
lods
jp
dec
lret
aam
push
cmp
fwait
arpl
aad
jb
shl
lods
lahf
xchg
in
leave
xor
push
push
imul
outsb
inc
ficoms
ss
jbe
mov
mov
fistl
adc
icebp
cltd
lcall
cmpsl
push
or
push
adc
sbb
and
xchg
push
mov
sar
mov
nop
pusha
add
lea
sub
cmp
mov
test
aaa
xor
xchg
loop
ds
outsb
mov
push
push
test
sahf
addr16
out
pop
push
push
in
cmp
dec
in
ja
cld
or
mov
pushf
nop
cmp
ja
and
xchg
mov
inc
dec
sub
daa
or
fwait
push
repz
inc
adc
inc
and
pop
and
pop
xchg
sub
mov
bound
sub
loopne
nop
insl
sbb
fsubp
inc
jge
sub
jb
lret
adcb
xchg
and
pop
cmpsb
or
mov
pop
add
or
movsl
fwait
cmpsb
bnd
fldl
sbb
inc
mov
in
mov
aad
aas
jmp
cwtl
hlt
imul
cmpsb
adc
xchg
jns
jnp
mov
xor
push
scas
mov
imul
mov
inc
nop
and
ret
or
dec
cmpsb
mov
cli
fwait
add
add
popa
cmc
adc
nop
int3
jl
in
shrb
ds
pop
push
xor
in
add
sub
imul
aaa
sbb
sbb
nop
test
cmove
xchg
pop
sub
outsb
jp
adc
nop
icebp
sub
jne
ret
jo
push
inc
inc
pop
push
dec
nop
repz
into
test
addr16
addr16
es
stos
repz
xorb
dec
inc
nop
std
stc
cmp
mov
fsub
xor
inc
mov
sahf
jl
daa
addl
mov
cmp
mov
adc
dec
and
xor
bound
mov
jmp
cmpsb
pop
cmp
inc
pushf
ret
and
cs
push
jnp
mov
push
lret
rolb
movsl
push
adc
ja
mov
sub
ret
ss
pop
mov
xchg
in
fbld
cmp
cld
cmc
cmp
pop
pop
inc
sub
cwtl
dec
dec
shll
fwait
negl
push
in
mov
push
aas
pop
push
test
lods
or
xchg
or
xor
pusha
fwait
mov
pop
or
sub
call
and
cmp
les
pushf
push
insb
fists
add
stos
ss
mov
mov
sub
or
push
cmp
jp
push
fdivr
movsl
dec
push
mov
fstl
imul
ret
mov
lahf
mov
mov
jmp
insb
cmp
adc
in
jl
dec
jg
adc
fwait
mov
jae
das
in
inc
mov
adc
mov
movsl
or
mov
rol
out
lret
sbb
fisttpl
test
jne
cmc
jmp
dec
std
test
xor
je
nop
mov
xor
cmp
test
shll
jecxz
or
bound
adc
push
or
fwait
cmp
xchg
mov
fiadds
pusha
xchg
add
push
popa
xor
dec
leave
dec
aaa
push
imul
mov
inc
fidivs
nop
push
cs
mov
push
faddp
out
mov
outsb
repnz
xchg
sbb
pop
lds
or
repz
xchg
nop
ds
sub
sub
mov
sub
hlt
xlat
xor
push
inc
outsl
fstl
mov
sbb
lods
push
push
mov
sbb
test
mov
in
enter
lret
sbb
or
sub
shrl
jns
adc
cld
sahf
pop
pop
test
mov
fsub
cmp
add
lea
aad
sarl
jmp
outsb
and
and
fisttps
test
cmpsl
cmc
xor
mov
dec
ficompl
out
mov
das
cmp
cli
pop
cmpsb
lock
cmp
dec
jo
es
insb
data16
cmp
xor
mov
mov
shlb
stos
sbb
sub
dec
push
add
mov
icebp
rorb
fsubp
into
mov
mov
cmp
mov
outsb
lret
inc
hlt
fwait
and
in
mov
ficoms
inc
sub
or
das
adc
fidivrl
add
xor
and
cmp
cmp
add
or
or
aam
sub
fdivs
dec
test
mov
fwait
out
adc
inc
jl
nop
sub
pushaw
lret
mov
inc
pop
stos
movsl
test
popa
mov
sbb
sub
fdivs
out
inc
push
adc
sbb
jl
or
mov
xchg
dec
pushf
mov
popf
or
cltd
mov
and
scas
sahf
pop
in
inc
xor
push
shr
imul
mov
divb
outsb
loope
push
and
frstor
push
jbe
into
fdivrs
nop
jg
mov
nop
ljmp
xchg
push
xlat
xlat
adc
movsl
cs
inc
push
sbb
jmp
adc
test
adc
fsub
out
fwait
xchg
or
add
jl
setnp
cmp
pop
nop
sub
push
or
jmp
dec
dec
int3
inc
dec
xchg
insl
or
popf
fs
mov
in
jae
dec
jge
jae
ret
lods
pop
rolb
and
mov
sbb
push
xchg
jbe
unpckhps
adc
sbb
dec
fiadds
cwtl
jns
jnp
insb
nop
in
inc
sti
dec
insb
pop
pusha
dec
add
iret
ret
pushf
mov
ss
out
pop
jne
out
lock
mov
stc
push
fwait
mov
idivb
pop
xor
mov
cld
add
decb
sarb
push
dec
inc
sub
rcl
and
sub
insl
cmp
std
dec
mov
sahf
sahf
cmp
fisubrs
fwait
jp
mov
rorl
loopne
js
rcrb
inc
pushf
cmp
loop
or
cmpsb
mov
leave
mov
mov
pop
fdivrl
mov
ljmp
add
mov
cmp
pop
jge
push
xchg
mov
loop
pop
dec
xor
fwait
in
xor
push
dec
repnz
fwait
daa
cs
nop
jnp
push
clc
mov
xchg
inc
adc
cmp
hlt
fpatan
insl
push
into
dec
cmpl
fs
pop
sbb
dec
sbb
insb
inc
jle
cmp
bound
loope
jecxz
bound
xchg
jp
popf
jl
or
pop
pop
scas
xor
or
fwait
adc
pop
fistpll
ds
mov
xor
pop
dec
xor
bound
mov
jb
fwait
mov
dec
test
gs
adc
vpaddusw
nop
mov
or
fwait
pop
mov
imul
xor
dec
ret
aaa
lret
mov
fisubrl
bound
push
and
nop
cmp
pop
xor
addr16
pop
jge
fnstcw
lock
ret
and
fdivs
push
in
xchg
lcall
addr16
rcrl
loop
daa
dec
cmp
inc
xchg
cmc
leave
sti
add
mov
movsl
lods
inc
fnsave
fwait
loop
shlb
and
mov
xchg
je
inc
and
nop
mov
sub
xor
dec
imul
in
xchg
or
dec
push
mov
lds
mov
movsb
int
ja
cmc
mov
in
bnd
mov
mov
pushf
cmp
add
mov
dec
mov
pushf
fwait
mov
lods
mov
loopne
cmpsb
hlt
add
pop
adc
sbb
fcompl
repnz
icebp
cwtl
lds
out
pop
imul
mov
fdiv
frstor
popa
xchg
cmpsb
sbb
mov
jecxz
jp
xor
pusha
dec
lahf
int
inc
les
sub
adc
inc
arpl
add
cltd
or
nop
les
adc
pop
push
fnstenv
js
mov
sti
frstor
push
push
mov
xor
or
mov
fwait
lods
stos
into
lahf
mov
mov
push
sbb
or
jno
scas
inc
inc
xchg
adcb
dec
testl
jmp
clc
xor
xor
pusha
mov
mov
out
inc
cmp
jp
aam
inc
ret
mov
mov
fcoms
pop
lret
mov
std
setns
mov
cltd
or
in
mov
out
pop
jl
fstl
not
cmp
insb
mov
jecxz
sbb
xchg
dec
pop
lods
es
adc
sub
ljmp
rorl
out
push
cmp
fidivs
out
dec
xorb
mov
cmpsb
mov
fisttpll
push
pop
sub
imul
aam
lods
dec
adc
sub
push
addr16
xchg
leave
imul
ffree
aad
dec
cmpsb
dec
outsb
mov
fwait
int
lods
sub
ljmp
adc
daa
icebp
hlt
test
call
dec
fdecstp
push
xchg
jbe
subb
pusha
pop
xchg
cmpsb
into
out
add
xlat
fcoml
mov
push
fisttpll
inc
fldl
cltd
sub
fwait
imul
ret
adc
push
aaa
fisubs
jne
int
lods
int
mov
fwait
xor
es
dec
push
ret
add
mov
jne
andb
nop
mov
inc
movsl
imul
mov
or
lret
xchg
mov
mov
roll
xchg
rcr
mov
test
xchg
jmp
cmc
mov
cmpb
shufps
movsl
cmp
xchg
dec
movsb
loope
push
jnp
and
psubb
stc
fs
popf
gs
imul
pushf
aam
lcall
xchg
cmp
adc
xchg
mov
and
dec
or
scas
in
ret
lock
sahf
mov
clc
outsl
aad
xor
dec
push
cmpsl
jl
scas
mov
fistl
nop
pushl
dec
sub
ds
sub
es
xchg
inc
jb
add
in
mov
lret
mov
dec
rcl
faddl
flds
pop
mov
cmpsl
mov
pushf
dec
sub
add
mov
loop
rolw
loopne
sub
fwait
mov
fsubs
mov
adc
dec
into
mov
mov
xor
sbb
stc
loope
jg
add
adc
pop
cs
mov
fwait
inc
loope
into
imul
mov
fisubs
xor
cli
icebp
test
insl
inc
pop
mov
cmp
sub
dec
sub
mov
xchg
mov
hlt
jle
add
rorb
mov
int3
inc
or
movsb
fwait
popf
xchg
nop
lret
xchg
mov
sbb
arpl
push
xchg
push
inc
and
mov
inc
xchg
and
repnz
lcall
add
sub
xor
xor
je
stos
nop
shlb
call
imul
inc
nop
xor
cmpsb
cmp
in
dec
aas
pop
mov
ljmp
xchg
dec
jecxz
iret
dec
pop
dec
dec
jp
mov
rcll
jno
nop
pop
push
fisttps
stos
dec
bound
pop
jo
in
pop
mov
mov
or
sbb
loopne
loop
scas
mov
adc
push
cmp
sbb
cltd
or
or
flds
sub
paddq
nop
mov
lahf
dec
xor
xor
cld
lret
scas
sbb
fwait
loopne
es
fsubp
mov
xor
ret
pop
dec
jne
mov
sub
pushf
adc
lahf
pop
jge
adc
push
in
repnz
mov
ret
pushf
add
lods
mov
movsl
out
pop
mov
lock
out
or
mov
push
icebp
sub
jae
adc
and
test
nop
adc
outsb
xor
into
loopne
dec
jmp
call
pop
fidivs
out
rcrb
mov
bnd
add
fwait
pop
mov
lods
fdivs
out
mov
mov
sbb
mov
inc
outsb
dec
add
sbb
pop
mov
xor
fcoms
jmp
rcl
nop
icebp
sub
sub
scas
xchg
lods
fnstsw
out
lods
fldenv
ficoms
mov
testb
or
out
and
cmpsl
shrb
nop
sti
icebp
data16
pop
inc
jne
in
int3
add
add
int
dec
in
je
jb
fdivp
push
mov
ja
push
fstl
adc
fstps
mov
jmp
ljmp
pop
repz
pop
and
adc
cwtl
dec
int
icebp
frstor
notl
mov
ja
mov
mov
lret
pop
arpl
mov
test
pop
jl
or
outsl
in
aad
dec
jnp
imul
int3
sahf
mov
jne
adc
repnz
fsts
jl
mov
pop
shlb
push
dec
repnz
xlat
sbb
lcall
js
sbb
loop
out
fwait
rol
push
cli
shrl
outsl
sbb
test
push
outsb
data16
mov
xor
adc
cmp
push
aad
jg
movl
dec
sub
push
or
fldt
or
xorb
rclb
jp
and
sub
int
mov
fwait
lret
in
mov
mov
xor
fwait
ss
shlb
sub
jg
xchg
push
mov
xchg
add
add
and
sbb
xchg
lds
jo
cmp
fisttpll
cmc
fistl
add
fwait
dec
lods
cwtl
or
dec
out
cli
pop
push
push
xor
dec
lds
sub
arpl
das
stc
jge
push
into
cmpsl
nop
ret
test
fcmovu
dec
dec
and
addr16
je
sti
fwait
repz
dec
jb
mov
pop
negl
insl
push
out
nop
pop
add
jbe
pop
and
and
lahf
add
mov
out
push
or
std
sub
insb
jae
add
pop
and
inc
jecxz
fstp
adc
incl
pop
push
adc
rorb
fidivs
mov
addl
add
jge
mov
sub
icebp
lcall
movsb
sub
adc
xor
lds
jg
jne
lea
out
cmp
repz
pop
pop
xchg
jne
or
repz
sbb
scas
cmpsb
fstpl
cs
cmp
int3
sbb
or
push
push
dec
mov
das
jl
inc
push
push
mov
call
push
sub
or
push
sti
fsts
inc
inc
xchg
stc
fcmovu
mov
sub
xchg
mov
lcall
dec
adc
aad
fwait
sub
cmp
fstl
dec
xor
cltd
mov
sbb
dec
pushl
nop
leave
repnz
mov
dec
mov
jecxz
les
outsl
sti
add
rcr
xor
int3
cmp
and
mov
dec
jno
aaa
add
loope
movsl
in
sbb
nop
push
shlb
dec
and
mov
rorl
mov
jo
xchg
fwait
iret
add
inc
inc
ficomps
adc
in
xchg
jne
rcrl
jl
in
out
and
jecxz
push
mov
mov
jmp
lock
and
pop
pop
inc
mov
mov
push
jno
pop
loopne
nop
daa
hlt
imul
inc
and
dec
jb
enter
mov
aaa
sbb
jmp
cs
outsl
mov
stc
cmp
sbb
push
pop
jl
iret
int
fucom
adc
cmp
mov
pop
jno
jmp
and
cwtl
xor
jge
push
cmp
pop
xlat
inc
cmp
mull
mulb
pop
push
sub
fiadds
sub
nop
cmp
sahf
sub
cmpsl
mov
inc
inc
push
or
int3
daa
cld
ret
jbe
pop
mov
insl
push
fdivr
test
mov
pop
or
sbb
push
xor
and
adc
add
movsb
ror
pop
pusha
lock
jmp
adc
test
loop
fistps
and
shlb
iret
mov
je
pushf
dec
mov
mulps
cmpsb
push
xorl
dec
nop
push
scas
pop
pop
add
push
fwait
sbb
out
dec
fistps
cmp
add
popa
jno
jmp
les
fdivrs
push
push
sbb
cmp
dec
mov
cwtl
aaa
jno
mov
fwait
push
xorl
adc
sub
mov
aad
mov
mov
sbb
push
loop
fs
add
inc
dec
and
xchg
ja
mov
mov
sbb
adc
fwait
lcall
sub
and
pop
jno,pn
mov
lods
repnz
gs
out
clc
popa
inc
jnp
jae
cltd
mov
push
cmp
pop
out
xchg
mov
push
inc
icebp
and
divb
jae
mov
inc
adc
and
into
jecxz
jecxz
insl
cmp
dec
nop
les
hlt
fisubrl
pop
cli
dec
adc
or
and
or
jb
shl
popa
push
jb
add
fimuls
test
or
cld
inc
dec
push
nop
sbb
popa
xchg
repnz
push
mov
and
dec
testl
push
push
lret
xchg
pop
mov
fidivl
mov
rolb
inc
call
int3
push
push
dec
sti
add
popf
pop
in
pop
xor
xchg
in
mov
aas
mov
sub
mov
sub
xor
mov
push
add
mov
mov
cmp
jne
cmp
je
cmp
je
cmp
je
mov
add
mov
sub
sub
add
and
and
push
add
sub
push
mov
add
mov
or
test
jne
mov
mov
sub
add
or
add
mov
and
cmp
jne
and
or
mov
sub
mov
and
and
cmp
jne
mov
mov
mov
and
cmp
jne
cmp
je
add
cmp
jne
mov
mov
add
or
add
sub
cmp
jne
cmp
jne
mov
mov
add
add
sub
sub
sub
add
cmp
je
cmp
jne
add
cmp
je
add
xor
xor
mov
add
sub
add
add
sub
mov
mov
cmp
jne
mov
mov
add
or
sub
mov
cmp
jne
cmp
je
and
or
add
cmp
jne
add
add
sub
mov
mov
add
or
mov
and
or
cmp
jne
mov
mov
xor
sub
add
and
add
sub
add
mov
sub
mov
sub
add
mov
mov
sub
add
cmp
je
sub
mov
cmp
je
add
mov
sub
add
xor
mov
sub
add
mov
add
mov
sub
test
jne
cmp
je
add
and
or
mov
add
mov
cmp
jne
cmp
jne
mov
and
test
je
sub
mov
add
and
sub
add
and
add
and
mov
sub
test
jne
sub
cmp
je
add
mov
test
jne
add
mov
mov
cmp
jne
sub
cmp
je
cmp
je
mov
mov
and
sub
cmp
je
add
xor
cmp
jne
test
jne
xor
test
jne
mov
mov
or
and
add
test
jne
mov
mov
add
cmp
jne
add
mov
add
mov
sub
mov
sub
add
cmp
je
mov
add
mov
cmp
je
mov
add
mov
add
test
jne
cmp
je
test
je
mov
xor
test
je
add
add
mov
or
mov
sub
add
test
jne
add
and
xor
cmp
jne
mov
mov
cmp
je
or
cmp
je
mov
mov
add
add
cmp
jne
add
xor
cmp
jne
mov
mov
mov
sub
cmp
je
add
xor
mov
add
sub
test
jne
sub
or
add
add
and
sub
xor
sub
cmp
je
mov
mov
and
test
je
cmp
je
or
mov
mov
and
sub
sub
mov
sub
mov
cmp
jne
add
mov
add
mov
add
and
cmp
je
add
add
sub
cmp
jne
and
mov
or
add
push
call
mov
xor
cmp
jne
mov
add
mov
sub
sub
cmp
jne
add
mov
mov
test
je
mov
test
jne
sub
mov
mov
sub
mov
sub
or
sub
add
sub
cmp
je
cmp
jne
cmp
je
add
mov
sub
mov
xor
cmp
jne
or
cmp
je
add
mov
sub
mov
mov
sub
sub
add
sub
sub
cmp
je
sub
cmp
jne
and
add
add
mov
sub
mov
add
sub
add
or
cmp
je
add
mov
sub
sub
mov
or
sub
sub
sub
and
xor
sub
add
mov
add
add
mov
sub
add
sub
mov
sub
mov
sub
add
sub
sub
mov
sub
and
mov
cmp
je
mov
add
and
or
add
add
add
sub
add
mov
xor
add
mov
add
sub
sub
sub
sub
sub
sub
mov
mov
cmp
je
mov
cmp
je
cmp
jne
mov
and
cmp
jne
mov
test
jne
cmp
je
xor
xor
add
mov
or
add
add
sub
add
add
and
mov
mov
mov
sub
add
add
sub
and
add
add
xor
sub
add
or
add
call
mov
mov
xor
and
sub
add
mov
mov
add
cmp
jne
mov
mov
or
cmp
jne
or
xor
mov
xor
sub
sub
cmp
je
add
mov
mov
add
sub
mov
cmp
je
mov
sub
xor
sub
and
add
add
and
add
sub
cmp
jne
sub
and
add
sub
push
push
call
add
mov
mov
cmp
je
add
mov
mov
add
add
and
xor
sub
mov
xor
call
or
add
mov
mov
cmp
jne
or
cmp
jne
mov
mov
add
add
test
jne
mov
xor
mov
and
mov
add
add
cmp
je
mov
sub
sub
cmp
je
mov
mov
cmp
je
mov
and
mov
add
add
sub
sub
sub
sub
cmp
jne
mov
mov
and
sub
add
add
sub
cmp
jne
cmp
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
sub
add
sub
add
sub
and
sub
test
je
sub
sub
xor
add
sub
mov
sub
cmp
je
sub
cmp
jne
add
add
sub
cmp
jne
add
add
mov
and
add
add
mov
add
mov
and
sub
sub
add
mov
cmp
jne
add
mov
or
add
sub
mov
add
mov
mov
sub
sub
sub
sub
add
mov
mov
mov
add
add
mov
and
add
sub
mov
mov
add
test
je
mov
sub
cmp
jne
add
add
sub
sub
cmp
jne
and
sub
mov
sub
mov
cmp
je
and
mov
and
and
add
test
je
mov
add
cmp
jne
sub
and
xor
sub
mov
xor
mov
sub
mov
add
or
sub
xor
mov
sub
sub
sub
add
mov
mov
mov
cmp
je
add
mov
mov
sub
sub
sub
mov
add
mov
add
cmp
jne
cmp
je
sub
cmp
je
or
mov
sub
mov
cmp
je
mov
sub
cmp
jne
mov
and
mov
sub
add
and
cmp
jne
sub
mov
sub
sub
mov
mov
add
mov
add
sub
mov
cmp
je
mov
mov
sub
and
cmp
je
add
add
add
xor
xor
or
add
mov
test
je
mov
add
mov
add
sub
sub
sub
sub
cmp
jne
cmp
je
sub
sub
mov
add
and
cmp
je
mov
xor
sub
sub
add
cmp
jne
sub
add
cmp
jne
mov
or
or
cmp
jne
mov
xor
mov
cmp
je
mov
mov
add
and
sub
test
jne
cmp
je
mov
sub
mov
cmp
jne
mov
and
sub
sub
mov
test
jne
and
mov
cmp
jne
cmp
je
or
cmp
jne
cmp
jne
add
and
mov
mov
cmp
jne
add
add
mov
mov
and
cmp
je
mov
sub
or
xor
sub
add
sub
sub
sub
sub
mov
lea
and
add
sub
add
xor
mov
mov
and
test
jne
sub
cmp
je
sub
xor
mov
sub
xor
sub
add
mov
sub
mov
mov
or
sub
push
mov
mov
sub
cmp
jne
sub
or
sub
add
mov
add
add
sub
sub
mov
and
or
push
xor
mov
cmp
jne
sub
sub
cmp
je
mov
mov
add
sub
sub
and
and
cmp
jne
mov
mov
test
je
cmp
je
mov
mov
cmp
jne
add
add
mov
add
mov
xor
sub
and
test
je
mov
or
call
add
mov
mov
add
add
test
jne
sub
cmp
jne
add
cmp
jne
sub
mov
mov
sub
add
sub
cmp
je
sub
cmp
je
cmp
jne
mov
cmp
jne
cmp
jne
or
mov
and
cmp
jne
mov
sub
or
add
cmp
jne
cmp
jne
mov
cmp
je
mov
add
mov
mov
and
or
sub
sub
or
or
mov
mov
mov
add
xor
cmp
je
mov
add
cmp
je
or
shr
sub
cmp
jne
test
jne
mov
xor
sub
sub
sub
cmp
jne
test
je
mov
add
add
test
je
xor
mov
mov
add
sub
or
add
sub
sub
mov
add
mov
sub
sub
cmp
jne
sub
add
xor
sub
xor
add
sub
call
mov
add
mov
add
mov
cmp
je
mov
mov
sub
cmp
jne
mov
cmp
jne
sub
add
cmp
jne
sub
mov
xor
mov
sub
xor
add
mov
mov
cmp
je
add
cmp
jne
sub
mov
add
mov
cmp
jne
mov
cmp
je
mov
add
mov
xor
xor
add
sub
add
pushl
push
pushl
call
mov
mov
add
cmp
je
sub
addl
mov
mov
add
sub
cmp
jne
sub
add
mov
mov
add
test
je
mov
xor
add
and
add
cmp
jne
cmp
je
mov
or
add
mov
sub
add
or
sub
cmp
je
and
test
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
add
mov
mov
add
mov
add
sub
mov
mov
mov
or
add
mov
cmp
je
test
je
sub
mov
sub
sub
mov
sub
sub
sub
call
mov
mov
sub
add
and
cmp
jne
mov
mov
cmp
jne
cmp
jne
mov
mov
add
add
add
and
add
sub
sub
sub
sub
mov
pop
xor
add
mov
and
sub
add
pop
cmp
jne
cmp
jne
xor
and
mov
or
sub
test
jne
sub
sub
mov
mov
or
add
mov
pop
cmp
je
and
sub
cmp
jne
cmp
jne
mov
mov
or
add
test
je
xor
test
jne
and
mov
sub
add
and
sub
add
or
add
cmp
je
mov
add
xor
sub
test
je
xor
sub
sub
and
sub
add
mov
add
cmp
jne
mov
test
jne
mov
cmp
jne
cmp
jne
cmp
jne
add
sub
and
cmp
jne
cmp
je
mov
cmp
je
cmp
je
add
cmp
jne
cmp
jne
mov
xor
test
je
mov
mov
add
sub
add
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
or
mov
push
mov
or
push
sub
push
mov
add
sub
xor
movl
sub
add
or
mov
mov
test
jne
add
cmp
jne
mov
or
cmp
jne
cmp
jne
add
cmp
je
sub
mov
mov
test
je
sub
sub
sub
and
and
sub
call
sub
sub
and
mov
mov
or
and
sub
add
cmp
jne
cmp
je
mov
mov
test
jne
sub
mov
cmp
jne
mov
mov
sub
mov
and
sub
sub
mov
sub
or
add
test
jne
or
or
sub
cmp
je
and
mov
cmp
je
mov
mov
sub
sub
cmp
jne
or
cmp
jne
cmp
je
mov
mov
sub
cmp
jne
mov
xor
sub
cmp
jne
mov
mov
add
mov
and
sub
cmp
je
sub
sub
or
cmp
jne
mov
add
cmp
jne
sub
mov
sub
mov
add
add
cmp
jne
and
add
cmp
je
sub
call
sub
mov
mov
sub
add
sub
sub
mov
mov
add
mov
sub
or
cmp
jne
cmp
jne
add
or
call
add
sub
mov
or
add
test
je
mov
mov
cmp
jne
add
add
mov
add
or
cmp
jne
mov
mov
add
add
add
and
xor
xor
mov
mov
xor
add
add
sub
add
cmp
je
add
cmp
je
xor
cmp
je
test
je
xor
mov
sub
and
mov
mov
add
sub
and
add
sub
add
xor
sub
add
xor
sub
mov
mov
or
mov
add
cmp
jne
mov
sub
and
or
cmp
je
mov
cmp
jne
sub
cmp
jne
sub
add
add
mov
mov
cmp
jne
add
mov
test
jne
sub
add
add
sub
test
jne
mov
add
sub
mov
or
sub
cmp
je
mov
sub
add
sub
mov
and
cmp
je
mov
cmp
jne
mov
sub
cmp
jne
mov
sub
sub
sub
cmp
jne
mov
sub
mov
add
add
test
je
mov
cmp
je
cmp
jne
sub
and
sub
cmp
jne
cmp
je
mov
sub
cmp
jne
add
add
and
cmp
je
add
mov
sub
add
and
mov
sub
cmp
jne
add
mov
cmp
je
test
je
test
je
cmp
jne
sub
mov
add
add
mov
sub
add
cmp
jne
cmp
jne
mov
test
jne
add
cmp
jne
mov
xor
cmp
jne
cmp
jne
xor
test
jne
mov
mov
or
mov
and
add
test
jne
mov
mov
add
add
sub
and
and
sub
sub
sub
sub
cmp
jne
mov
mov
sub
and
and
cmp
je
mov
cmp
je
sub
sub
cmp
jne
sub
xor
sub
cmp
jne
sub
sub
mov
mov
cmp
je
and
sub
mov
mov
add
or
add
add
cmp
je
mov
mov
mov
cmp
jne
sub
mov
sub
mov
and
add
add
cmp
jne
add
add
add
add
sub
sub
sub
and
sub
sub
cmp
jne
mov
cmp
je
mov
mov
mov
test
jne
mov
add
sub
add
cmp
jne
cmp
jne
cmp
je
sub
mov
add
mov
sub
cmp
jne
mov
sub
xor
sub
and
sub
sub
sub
cmp
je
test
je
mov
sub
sub
mov
add
cmp
je
add
mov
mov
and
sub
add
add
cmp
jne
add
xor
mov
add
cmp
jne
add
mov
and
mov
and
cmp
je
sub
mov
mov
sub
sub
and
sub
cmp
je
test
je
cmp
jne
xor
sub
add
mov
cmp
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
test
jne
and
sub
test
jne
sub
cmp
jne
mov
xor
sub
sub
sub
add
cmp
je
mov
cmp
je
cmp
jne
sub
sub
or
test
jne
cmp
jne
mov
cmp
jne
and
or
test
je
cmp
jne
sub
sub
cmp
je
cmp
je
mov
xor
sub
and
cmp
je
cmp
jne
mov
add
add
mov
cmp
jne
add
mov
cmp
jne
cmp
je
add
add
add
sub
sub
xor
mov
add
sub
sub
cmp
je
cmp
jne
cmp
jne
add
push
call
cmp
jne
cmp
jne
mov
add
cmp
jne
mov
sub
cmp
jne
or
or
je
cmp
jne
add
addl
mov
xor
add
sub
lea
sub
mov
cmp
jne
mov
mov
cmp
je
sub
mov
mov
or
add
and
sub
add
add
sub
sub
cmp
je
add
cmp
jne
mov
mov
cmp
je
mov
add
mov
sub
or
sub
sub
inc
mov
mov
add
add
cmp
jne
mov
add
sub
cmp
jne
xor
sub
cmp
jne
cmp
jne
cmp
je
sub
or
mov
add
add
sub
mov
mov
add
mov
or
add
sub
xor
mov
mov
sub
sub
cmp
jne
xor
sub
cmp
jne
sub
cmp
jne
mov
cmp
jne
mov
sub
mov
and
and
or
add
add
xor
add
test
je
sub
xor
sub
mov
add
sub
cmp
jne
mov
and
cmp
jne
add
mov
or
mov
add
sub
test
jne
sub
add
sub
mov
mov
and
cmp
jne
sub
cmp
je
cmp
je
and
add
xor
mov
sub
cmp
jne
sub
sub
mov
xor
sub
sub
or
add
add
cmp
jne
xor
mov
mov
mov
sub
add
add
add
sub
sub
sub
sub
test
je
or
mov
mov
add
and
sub
sub
add
add
mov
mov
test
je
test
jne
mov
cmp
je
add
sub
add
mov
mov
mov
cmp
je
and
cmp
je
xor
sub
mov
and
sub
and
sub
sub
add
cmp
je
cmp
je
add
mov
cmp
je
add
sub
sub
and
xor
mov
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
je
sub
sub
mov
or
sub
mov
add
cmp
jne
cmp
jne
mov
sub
xor
and
add
add
add
sub
mov
add
add
mov
cmp
jne
cmp
je
mov
mov
add
cmp
jne
mov
add
mov
sub
cmp
je
mov
mov
sub
xor
sub
and
sub
cmp
jne
add
cmp
jne
mov
xor
xor
mov
test
je
and
add
mov
sub
and
pop
add
and
mov
sub
cmp
jne
mov
mov
sub
sub
cmp
jne
add
sub
and
mov
test
jne
xor
sub
sub
sub
cmp
je
cmp
jne
mov
add
mov
add
cmp
jne
mov
sub
add
add
mov
cmp
jne
cmp
jne
add
cmp
je
test
je
xor
add
add
pop
mov
add
sub
add
pop
or
cmp
jne
or
and
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
sub
push
add
push
mov
cmp
je
cmp
je
and
and
push
add
add
test
jne
mov
and
xor
cmp
jne
and
add
sub
mov
mov
add
or
sub
sub
mov
and
add
add
rdtsc
sub
add
add
or
cmp
jne
mov
or
mov
sub
add
add
sub
mov
pop
sub
cmp
je
cmp
jne
mov
mov
cmp
jne
add
mov
mov
and
sub
cmp
je
cmp
je
add
mov
test
je
add
or
cmp
je
mov
xor
cmp
je
sub
xor
cmp
je
cmp
jne
mov
mov
or
add
and
and
and
cmp
jne
mov
mov
add
add
cmp
je
add
add
cmp
je
add
test
jne
cmp
jne
add
pop
mov
mov
or
sub
sub
pop
sub
and
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
add
mov
sub
xor
push
mov
add
push
cmp
je
cmp
jne
add
push
add
mov
add
mov
sub
sub
add
sub
xor
mov
cmp
je
mov
mov
and
add
add
sub
add
sub
or
and
mov
xor
mov
add
mov
sub
cmp
je
or
mov
add
mov
or
add
sub
cmp
je
xor
and
mov
mov
sub
sub
cmp
je
mov
mov
cmp
jne
cmp
je
add
add
mov
xor
add
cmp
je
add
decl
mov
xor
cmp
jne
add
mov
sub
cmp
je
cmp
jne
cmp
jne
cmp
je
add
sub
test
jne
cmp
je
add
subl
mov
xor
cmp
jne
mov
cmp
jne
cmp
jne
or
or
add
cmp
je
cmp
je
mov
and
mov
or
cmp
jne
mov
sub
mov
and
cmp
je
sub
sub
add
sub
mov
mov
and
cmp
jne
add
add
cmp
je
cmp
je
mov
or
sub
add
mov
xor
add
cmp
jne
test
jne
cmp
jne
or
sub
sub
sub
jmp
mov
sub
sub
mov
add
mov
add
mov
cmp
jne
cmp
je
mov
or
pop
mov
xor
sub
and
add
pop
mov
sub
mov
sub
and
cmp
jne
mov
sub
sub
xor
cmp
je
mov
cmp
je
sub
cmp
je
add
mov
cmp
jne
sub
sub
sub
mov
mov
add
add
sub
sub
cmp
je
mov
add
add
mov
sub
sub
add
add
sub
pop
cmp
je
cmp
jne
cmp
jne
mov
add
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
add
add
mov
push
xor
mov
sub
sub
and
sub
push
mov
cmp
je
mov
and
mov
add
push
mov
add
sub
and
cmp
je
and
mov
cmp
jne
test
jne
mov
and
mov
sub
mov
sub
add
sub
mov
mov
mov
cmp
jne
mov
cmp
jne
or
mov
cmp
je
mov
sub
sub
sub
add
cmp
jne
mov
cmp
je
or
mov
cmp
jne
sub
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
sub
add
mov
cmp
jne
add
add
xor
cmp
jne
cmp
je
sub
add
mov
add
cmp
jne
xor
mov
add
mov
mov
or
cmp
jne
mov
mov
sub
sub
or
add
cmp
jne
mov
sub
mov
or
add
and
add
cmp
je
sub
xor
mov
or
add
mov
or
add
and
sub
sub
add
add
test
jne
mov
xor
sub
add
sub
sub
add
add
add
cmp
jne
mov
add
add
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
or
add
add
sub
add
cmp
je
test
je
mov
and
cmp
jne
add
or
cmp
jne
sub
push
add
mov
xor
add
mov
xor
sub
add
and
add
cmp
je
mov
add
mov
xor
and
add
sub
add
sub
and
sub
cmp
je
mov
xor
cmp
je
mov
sub
add
add
add
and
mov
test
jne
mov
mov
or
and
sub
and
or
sub
cmp
je
test
je
mov
cmp
jne
xor
sub
sub
push
cmp
jne
sub
push
mov
sub
push
mov
mov
cmp
je
xor
and
mov
cmp
jne
mov
mov
test
je
and
mov
cmp
je
or
sub
cmp
je
add
mov
mov
add
add
cmp
jne
mov
mov
cmp
jne
mov
mov
add
add
test
je
add
add
cmp
je
mov
add
add
test
je
add
or
cmp
jne
sub
mov
mov
cmp
jne
mov
add
add
xor
sub
cmp
je
cmp
je
mov
mov
sub
add
sub
and
or
sub
cmp
je
cmp
je
mov
mov
sub
sub
mov
sub
cmp
je
sub
xor
mov
cmp
je
mov
cmp
je
mov
mov
add
add
cmp
jne
cmp
je
cmp
jne
mov
sub
cmp
jne
mov
sub
and
mov
add
sub
sub
sub
add
add
sub
sub
mov
sub
sub
sub
mov
cmp
jne
mov
add
mov
or
test
je
cmp
je
mov
sub
mov
add
sub
add
mov
and
and
call
sub
mov
sub
sub
mov
cmp
jne
or
mov
mov
or
cmp
jne
add
mov
cmp
jne
mov
mov
sub
cmp
je
test
jne
add
mov
mov
add
cmp
je
xor
mov
and
add
cmp
jne
mov
sub
and
mov
cmp
je
add
mov
mov
cmp
je
sub
mov
add
cmp
je
mov
xor
add
mov
sub
sub
and
cmp
jne
mov
mov
add
test
je
mov
sub
mov
and
cmp
je
mov
add
mov
sub
cmp
je
and
mov
mov
mov
sub
add
sub
add
cmp
jne
sub
cmp
jne
cmp
jne
cmp
jne
mov
mov
or
sub
cmp
je
cmp
jne
mov
sub
mov
or
or
sub
and
sub
add
cmp
jne
or
add
or
mov
mov
mov
and
and
add
sub
and
add
mov
mov
mov
test
je
add
mov
cmp
jne
and
mov
add
cmp
je
mov
mov
and
add
and
xor
sub
sub
mov
cmp
jne
mov
mov
cmp
je
sub
mov
cmp
jne
sub
sub
sub
cmp
jne
or
add
mov
cmp
jne
mov
or
mov
or
add
add
mov
mov
mov
add
or
sub
add
mov
cmp
jne
mov
mov
cmp
je
add
sub
test
jne
sub
cmp
jne
mov
sub
mov
add
add
or
cmp
je
sub
mov
add
add
sub
sub
or
cmp
jne
add
mov
add
mov
add
sub
mov
sub
cmp
jne
mov
mov
xor
sub
mov
mov
cmp
je
add
mov
cmp
jne
cmp
jne
cmp
jne
mov
and
cmp
je
or
cmp
je
add
add
mov
mov
mov
mov
cmp
je
mov
or
or
je
add
repnz
or
mov
cmp
jne
sub
add
cmp
je
add
cmp
je
sub
add
cmp
je
cmp
jne
mov
add
test
jne
cmp
je
sub
add
add
mov
sub
addl
add
jmp
sub
xor
mov
sub
add
mov
mov
xor
add
and
sub
and
test
je
mov
cmp
je
sub
cmp
je
mov
add
or
xor
add
sub
add
cmp
je
mov
mov
sub
add
add
pop
add
pop
mov
mov
add
sub
add
test
je
mov
xor
add
sub
add
cmp
jne
and
add
add
mov
mov
cmp
je
add
sub
mov
and
sub
sub
add
sub
add
sub
sub
pop
add
add
add
leave
ret
