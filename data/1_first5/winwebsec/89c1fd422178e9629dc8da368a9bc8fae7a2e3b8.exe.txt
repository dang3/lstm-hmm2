sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
push
push
call
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
movl
mov
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
mov
push
call
fistpl
cmpsb
dec
sti
or
testl
xor
xor
rcrl
shlb
mov
mov
ficoml
push
outsl
in
std
stc
ds
push
jne
mov
int
in
test
push
push
enter
sub
adc
sti
loopne
or
outsl
jns
int
xchg
and
and
dec
or
ljmp
mov
in
dec
push
scas
imul
or
arpl
clc
mov
subb
nop
out
push
hlt
xlat
and
fldl
cmp
dec
jle
dec
xchg
push
mov
jp
std
lcall
sbb
push
dec
dec
adcb
daa
mov
xchg
lcall
inc
push
xrelease
mov
mov
mov
sbb
rorl
test
aaa
xchg
cmp
and
movb
xchg
scas
pushf
xchg
inc
sub
xlat
jg
mov
aaa
enter
push
ret
stos
fistpll
ljmp
outsl
mov
jbe
je
repnz
lods
xchg
xor
pop
imul
sub
mov
mov
mov
or
push
lret
mulb
inc
aam
sbb
jno
xchg
fnsave
mov
xor
inc
xor
popl
xor
adc
inc
test
mov
push
mov
fdivr
fwait
mov
subl
es
in
mov
cmp
out
xor
shrl
out
les
xchg
jl
and
fists
lea
sub
push
fwait
or
push
scas
stos
pop
push
js
adcl
pop
push
scas
adc
rorb
xchg
cmpb
fwait
lea
cld
xchg
mov
inc
pop
loope
push
push
dec
or
mov
xchg
adc
lods
fs
mov
out
nop
out
dec
and
out
add
das
roll
roll
and
jle
sbb
test
fwait
or
sub
ret
mov
outsl
xor
scas
mov
mov
or
fwait
xchg
subb
fs
push
push
lea
mov
outsl
mov
mov
jo
scas
xchg
in
xor
push
pop
add
sub
xchg
or
mov
xlat
xadd
sub
fisttpl
insb
lds
mov
cmp
mov
push
loopne
movsb
enter
sbb
int
sbb
mov
inc
push
dec
pop
mov
xor
sub
dec
aas
repz
repz
fmuls
sbb
call
cltd
lock
insb
cmp
bound
ret
xchg
imul
fcompl
jmp
das
and
dec
add
je
and
lret
add
loope
dec
add
add
fnstsw
pop
inc
lret
mov
into
orl
movsl
stc
dec
push
sub
cmp
or
mov
mov
xor
jae
clc
stos
pop
mov
fistl
inc
scas
mov
mov
xchg
fstpl
pop
bound
jmp
jge
test
mov
pushf
lcall
sbb
scas
jnp
cmpsl
mov
iret
cmp
inc
pop
sub
inc
cs
pop
inc
popf
dec
sbb
bound
addb
or
mov
mov
in
xchg
mov
aad
jecxz
pop
jo
jg
jl
test
imul
ljmp
movsb
fcmove
lods
add
mov
movsl
in
js
ficoms
clc
dec
dec
push
jb
xchg
fiaddl
xchg
push
movb
fisttpll
mov
cmp
cmpsl
inc
inc
out
int
pop
sbb
loop
add
cli
mov
movsl
jp
stc
mov
cltd
mov
shrb
sub
clc
sub
cmp
out
lods
outsl
js
out
xchg
aam
mov
in
mov
and
jg
lock
in
repz
mov
xorb
inc
ret
cmp
icebp
add
sub
lea
add
sub
jge
adc
fsubrs
jb
es
or
push
inc
fdivl
stos
ja
xrelease
in
repnz
in
sub
jl
into
stos
inc
popa
outsb
add
ljmp
push
pop
and
cltd
movsb
mov
test
lea
jge
xor
sbb
sub
lea
pusha
ljmp
ds
pusha
adc
test
rol
fsubr
adc
pusha
test
and
pop
sub
or
fiaddl
dec
jg
pop
pusha
movsb
or
movsl
fiadds
stc
insb
fnstcw
mov
push
jae
xchg
int
in
push
out
cli
out
bnd
inc
addr16
mov
in
mov
ficomps
or
cs
pop
mov
cmpl
in
insl
sub
mov
xchg
aam
call
add
loop
xor
mov
xchg
loop
aas
sub
scas
ds
mov
or
jne
adc
mov
jmp
lods
mov
push
adc
insl
inc
inc
stos
in
cmp
cmpsb
sbb
adc
xchg
pop
adc
mov
test
cmpsb
jb
repz
cmp
inc
out
sub
out
inc
sbb
fisubl
rorb
daa
outsb
les
les
jnp
push
outsb
insb
pop
les
xchg
lret
jo
jecxz
sbb
mov
and
leave
mov
or
jno
ja
imul
mov
jmp
lret
push
jmp
push
adc
dec
mov
cmp
inc
or
mov
std
jne
push
rcrb
push
roll
xor
ja
insl
stc
xor
fbstp
sub
mov
xchg
mov
ss
and
dec
sbb
dec
mov
arpl
sub
pop
cwtl
out
lret
out
aas
test
fsubrs
cmova
mov
mov
out
ficoms
mov
jnp
pop
cmp
aaa
lret
xor
outsl
pop
out
mov
adcb
lods
rorl
sbb
mov
mov
adc
jae
nop
mov
push
jmp
cmp
pop
arpl
shrb
nop
in
add
pushf
test
ret
sub
nop
pop
xchg
lret
jbe
es
push
dec
addb
xor
push
pushf
mov
lods
push
mov
inc
shll
nop
xor
cmpsb
out
push
dec
or
aaa
jmp
movsl
cmpsb
adc
in
sub
shr
pop
mov
pushf
jb
fwait
mov
dec
push
stos
sub
ja
mov
xchg
in
dec
add
sub
repz
negl
std
add
or
pusha
repnz
daa
roll
outsb
orb
push
notb
cmp
xor
test
popf
inc
stos
loope
in
roll
das
fdivr
and
or
jge
lods
rcrl
jle
rclb
mov
les
push
jae
out
jnp
into
add
adc
cmp
lock
sbb
mov
pop
dec
pop
mov
jl
lods
push
adc
cmpsb
ds
lea
mov
dec
push
pop
gs
movl
fiaddl
jns
jne
xchg
lods
push
cli
sbb
mov
dec
imul
lret
lret
jae
hlt
pop
nop
jbe
sbb
pop
pusha
sti
pop
mov
mov
sub
cmp
jnp
xchg
mov
int
fiadds
mov
test
mov
sbb
pop
push
mov
es
shll
add
push
cmp
das
and
ljmp
lcall
jnp
or
cmp
cs
out
jecxz
xlat
ror
mov
call
fisubl
das
test
in
sbb
lret
incl
out
sti
adc
dec
lcall
inc
lret
lcall
icebp
insl
imull
jne
clc
pop
icebp
cmp
std
leave
in
dec
pop
int
sti
pop
cwtl
hlt
stos
dec
cmp
xchg
repnz
dec
outsb
lret
movsl
sub
icebp
pop
bound
or
xor
mov
sbb
ds
xchg
cmp
pop
lahf
mov
add
lods
pop
mov
pop
icebp
loope
popa
mov
fisubrs
movsl
push
fdivrs
jo
shrl
sub
scas
inc
cmp
jo
lahf
lock
mov
scas
lret
or
faddl
inc
lea
dec
inc
iret
arpl
jnp
fxch
cmpsl
hlt
or
adcb
ja
dec
inc
cli
push
mov
mov
mov
mov
xor
xchg
adc
movsb
jno
adc
or
aas
jp
out
xlat
xor
mov
jp
repnz
push
scas
cmpsb
dec
push
mov
add
insl
mov
inc
mov
into
xor
mov
add
mov
in
cmp
xchg
fcom
rcl
std
js
mov
cli
pop
shlb
loopne
mov
pop
pop
pop
mov
mov
movsl
jne
mov
lods
cli
std
cld
sub
sub
dec
icebp
xchg
xor
aas
loope
inc
push
pop
repz
cmpsl
cmpsl
dec
int3
xor
mov
cmp
cmp
sub
cmp
enter
pop
fdivs
and
adc
mov
fadds
aad
or
xchg
cmp
cmp
daa
rcrl
in
or
cmp
adc
cmpsb
ja
int
cld
loopne
or
xchg
cmp
cmc
fldenv
out
cld
mov
inc
sbb
mov
cmp
inc
dec
cltd
repnz
inc
adc
shlb
and
bound
in
inc
adcl
gs
sahf
push
call
daa
sub
sub
push
dec
lods
data16
pop
lods
nop
push
push
or
mov
push
xchg
ficoml
popa
jmp
ss
xor
pop
aas
sbb
mov
or
adc
pop
leave
inc
jmp
int3
es
or
pop
enter
das
insb
sahf
cmovns
inc
mov
xor
idivl
pop
xor
xorl
imul
lds
push
in
sbb
and
jmp
stc
add
mov
mov
mov
jo
sub
xor
mov
mov
shlb
stos
sub
aam
sbb
pop
sarb
scas
inc
mull
dec
cwtl
loopne
cmc
xor
xchg
xchg
frstor
sti
mov
popa
sbb
adc
xlat
outsl
test
icebp
out
decb
lret
mov
push
push
jg
ljmp
leave
int3
insl
adc
test
sbb
loopne
sahf
je
xlat
add
ja
inc
lret
xchg
adc
shll
repnz
into
cmp
mov
mov
add
lea
cwtl
add
xchg
and
xchg
dec
test
fidivl
cmc
push
or
or
jnp
jo
stos
adc
sbb
or
int3
es
es
scas
ljmp
fucom
or
repnz
mov
and
xchg
stc
movsl
mov
shrb
xor
inc
sub
or
aas
les
sarl
jg
xor
pop
mov
mov
out
scas
pushf
push
aad
dec
fstl
mov
mull
adc
add
or
into
and
cwtl
out
cmp
imul
add
cmpsb
or
push
cmp
hlt
mov
jne
stos
push
insl
add
fwait
jle
pusha
xor
popf
aaa
jae
fiaddl
stos
push
inc
jnp
jg
dec
xchg
pop
test
dec
test
mov
fildl
xchg
daa
xchg
repnz
in
mov
cwtl
sub
jg
sahf
add
adc
in
or
add
leave
repnz
xchg
in
add
mov
loop
sbb
cmp
jecxz
sarl
test
dec
mov
mov
loop
or
mov
hlt
insl
adc
dec
jmp
test
in
aaa
je
lret
stc
in
leave
aaa
out
or
jl
jmp
xor
push
sbb
shl
vmwrite
cmp
paddsw
mov
and
hlt
fldl
les
into
hlt
mov
loope
xor
clc
xor
dec
lcall
adc
cmc
pop
push
dec
rolb
das
rcr
nop
fiadds
xor
ss
mov
shrb
or
into
cli
jbe
jne
or
arpl
adc
xor
jg
in
lods
lea
jmp
mov
clc
test
out
mov
sarb
movsb
notl
pop
mull
movsb
adc
pop
in
dec
in
xchg
insb
scas
arpl
or
dec
mov
add
push
and
adc
add
pop
aaa
into
shll
jg
clc
adc
xchg
pop
ljmp
and
xor
sahf
imul
inc
push
xor
pusha
mov
or
hlt
sub
out
lret
adc
in
mov
incl
mov
mov
xor
push
mov
js
sub
lahf
jnp
inc
pushf
xchg
fdivr
insb
cmp
or
xor
shl
dec
pop
push
mov
push
cmp
mov
dec
jecxz
js
or
scas
jmp
clc
insb
in
add
dec
mov
add
loopne
into
cmc
sbb
mov
bound
imul
xchg
addr16
xor
mov
lcall
mov
bound
gs
pop
out
xchg
push
popa
mov
inc
stos
cmpsb
add
dec
cmp
push
cld
in
jns
out
ss
dec
fucom
and
jle
inc
sub
cs
sbb
sbb
call
fisubs
xchg
out
mov
inc
xor
add
cwtl
loopne
sbb
enter
xlat
leave
sub
divb
fsubrl
out
dec
mov
outsl
gs
cmpsb
in
gs
dec
ret
mov
sub
inc
and
jmp
sub
in
xor
sahf
inc
or
xchg
fwait
js
mov
in
ss
mov
lret
xor
mulb
mov
cmp
iret
xchg
aad
push
adc
pop
lea
ljmp
test
outsb
adc
jge
mov
in
out
push
dec
sub
cmp
cmp
stos
int
push
dec
int3
ret
insl
leave
sbb
pushf
out
sbb
repz
push
xchg
mov
out
dec
movsl
fisubrs
leave
dec
arpl
lock
int3
cmp
hlt
xor
mov
in
push
vpunpckhqdq
mov
pop
loope
push
ljmp
push
pop
adc
dec
gs
imul
xchg
xlat
lcall
push
push
insb
sbb
test
push
jae
arpl
ds
icebp
popf
in
xchg
jne
and
rcr
sbb
lock
add
dec
stos
mov
js
imul
xchg
add
sbb
jg
jecxz
hlt
push
sub
xor
stos
or
rorb
out
mov
jne
xchg
daa
js
dec
ds
cmpsl
fimuls
mov
loope
sbb
out
jnp
cs
fwait
lahf
jno
pusha
dec
aaa
lret
in
repnz
test
mov
push
gs
ret
clc
rcl
fadd
test
add
adc
push
inc
sub
in
mov
xchg
cmp
cmp
clc
pushf
jecxz
sbb
or
xchg
loopne
cmp
cmc
leave
insl
pop
mov
mov
mov
leave
cs
jecxz
push
xchg
sbb
pop
rcll
pushl
popa
cmpb
sti
cmc
dec
into
enter
in
je
fildll
and
sti
or
sti
pop
addr16
cmp
mov
mov
pop
imul
mov
xchg
inc
sti
js
mov
roll
cli
mov
dec
dec
cmp
jo
push
mov
dec
sbb
stos
enter
test
mov
lods
stos
push
clc
mov
sbb
pop
xor
cmp
test
mov
and
lret
mov
cmp
jmp
or
lds
pop
sti
xchg
push
dec
xor
or
ret
roll
icebp
sbb
sub
pop
aam
sbb
sub
push
fchs
leave
sahf
loopne
aas
lea
jmp
dec
mov
mov
stos
and
adc
xorb
das
pop
add
and
out
fdivrs
leave
or
jb
add
imul
jne
ret
sbb
mov
sub
cmpsl
into
idiv
test
pop
cmp
mov
add
sub
cmp
mov
push
lret
loope
fcomp
fnsave
mov
add
stos
shl
lea
bnd
cs
into
sbb
stos
sub
pop
das
mov
pop
out
adc
pushf
in
inc
call
mov
lds
xchg
dec
shlb
push
and
push
push
xor
dec
adc
test
decb
and
or
fs
mov
sub
test
fucomp
xor
mov
stos
cmp
test
loope
pop
rcrb
mov
insb
push
cmp
jg
gs
or
hlt
jo
cmp
and
pop
jecxz
dec
xchg
jns
or
std
movsl
dec
inc
frstor
mov
aad
or
push
jp
mov
push
adc
sub
daa
adc
fwait
jecxz
jns
xlat
fdivrs
fistl
orl
repz
or
rcr
fiaddl
jno
jg
push
adc
fbld
dec
fsubl
sub
movsl
out
sti
jp
adc
insl
push
mov
outsl
dec
cmp
and
movsb
push
icebp
xchg
mov
popf
dec
adc
jae
sub
fiaddl
lods
data16
sbb
mov
mov
pop
push
jecxz
mov
mov
mov
call
dec
or
dec
stos
ljmp
aad
jb
mov
mov
repz
sub
mov
mov
jno
das
cmc
je
adcb
sub
aas
lcall
mov
sub
imul
orb
pop
and
subb
mov
imul
pop
dec
and
push
sbb
faddl
cmp
adc
cmp
rcrl
outsl
cld
in
stos
push
repnz
push
xchg
out
sub
test
mov
sar
lods
fdiv
push
out
push
cltd
jne
lret
dec
das
mov
in
inc
dec
rcl
adc
cs
pop
sub
andl
imul
scas
shrl
and
push
pop
pop
sub
add
fwait
pop
cltd
add
push
clc
jne
mov
ret
sbb
push
push
cmp
scas
inc
fists
jle
pusha
lcall
repnz
sub
mov
mov
mov
sbb
jge
inc
xor
popf
xlat
cmp
sub
stos
or
sbb
loop
sbb
or
sbb
push
fcomps
dec
into
arpl
rolb
sub
cmp
std
jmp
add
out
xor
loope
adc
in
mov
xlat
das
xchg
call
push
mov
imul
jg
in
jbe
mov
push
sti
mov
xor
out
mov
adc
jecxz
mov
mov
and
xchg
jns
bound
stos
rorb
inc
jbe
ror
mov
xchg
cmpsl
ss
jle
mov
aas
jmp
sbb
pop
aas
std
and
fnstsw
jl
test
test
das
xlat
push
or
pop
clc
ja
xor
lret
stos
mov
lods
stos
loope
sti
push
jmp
and
popf
daa
push
dec
mov
jne
push
repz
lcall
add
xor
mov
dec
cmp
test
inc
data16
add
int3
imul
loope
cld
mov
test
mov
add
pop
mov
popf
lea
out
popf
xchg
cmp
loop
test
lret
into
pop
data16
call
nop
or
ja
mov
addr16
or
dec
divb
xchg
and
out
into
test
lds
ljmp
add
les
and
push
mov
mov
clc
mov
or
cmp
jbe
in
sahf
and
push
add
xor
loope
jbe
xor
sub
dec
push
dec
cmpb
push
data16
dec
push
xorb
inc
icebp
aam
pop
or
jnp
inc
fdivs
xor
mov
jno
mov
mov
fnstenv
or
arpl
out
jne
cwtl
cmp
inc
into
loop
es
add
mov
push
insl
in
mov
fisubs
mov
xchg
cmp
data16
pop
pop
shll
jnp
scas
std
mov
adcl
es
ljmp
stos
and
outsb
insl
jnp
mov
inc
fwait
mov
int3
and
sub
fwait
das
or
xchg
mov
gs
pop
sbb
mov
add
rcr
stos
mov
stos
cmp
mov
outsb
lret
fbstp
out
adc
or
jecxz
dec
shrl
mov
mov
inc
loop
cmp
inc
out
xchg
daa
push
mov
push
mov
nop
inc
insl
mov
rorl
sti
inc
hlt
adc
in
ss
mov
sub
fstpl
jo
jae
lahf
push
lds
sub
int3
xor
jg
adc
xor
js
jg
data16
mov
ja
pop
rclb
mov
ja
adc
subl
jno
pop
popa
inc
push
fisttpl
mov
fs
aas
lret
test
or
cmp
sbb
xchg
jns
add
cmp
adc
lods
orb
gs
mov
into
into
inc
xchg
adc
xchg
mov
mov
out
addr16
and
icebp
xor
mov
ljmp
xchg
cs
aas
lods
mov
pop
and
cmp
mov
and
ss
in
cltd
xchg
ret
jle
filds
mov
ret
and
popf
out
mov
xchg
stos
cmp
mov
xor
lahf
inc
cmp
loopne
rcrl
lods
aam
fisttpll
jge
enter
je
sbb
and
loope
xor
cwtl
lret
nop
adc
jmp
inc
in
push
fwait
mov
insl
hlt
hlt
cld
xchg
das
xchg
outsb
sbb
add
loop
lods
insl
icebp
sub
lds
test
pop
push
icebp
shrl
out
push
sbb
fildll
mov
pop
add
ja
pop
adc
dec
es
lods
mov
jns
xchg
or
dec
cmp
cltd
test
mov
add
push
mov
cmc
xor
pusha
push
jne
imul
jg
int3
dec
notl
xor
popa
mov
add
push
jnp
mull
aad
in
sbb
daa
pop
loop
and
es
insl
les
aaa
cltd
adc
mov
xor
push
adc
pop
xchg
movsl
or
pop
insb
jne
or
stos
pop
in
lcallw
ficomps
push
add
int3
jae
or
sub
xlat
scas
cwtl
add
int
jl
imul
cltd
sarl
xchg
dec
pop
je
cmp
inc
lods
dec
ficoms
test
sbb
data16
lret
or
lock
sarb
adc
cs
jp
std
into
dec
loopne
mov
mov
aaa
sub
lahf
cmc
mov
popf
aaa
test
test
add
inc
cltd
inc
inc
dec
cld
test
loopne
lods
dec
loop
cmpsb
in
cmp
test
dec
fisubrs
jle
cmpsb
std
inc
adc
stos
sub
pop
sahf
sarl
push
shlb
sub
cmpb
cli
sti
leave
inc
lret
insl
int3
lret
jle
les
xchg
fwait
movsb
mov
popa
pop
xchg
push
mov
mov
mov
inc
xor
shr
or
dec
cmp
mov
jmp
stos
adc
sbb
insb
xchg
jg
movsl
adc
test
jl
push
out
mov
test
js
sbb
xor
mov
out
mov
push
xor
shlb
mov
rol
mov
mov
scas
stos
std
ja
xor
addr16
in
stos
jecxz
mov
push
imul
dec
pop
and
lahf
push
jbe
sub
dec
jge
mov
xor
inc
fmuls
call
or
pop
cltd
mov
fs
data16
mov
dec
push
sub
mov
inc
outsb
and
adc
fcomp
lods
adc
aam
lahf
and
jecxz
add
sbb
xlat
adc
popa
and
out
inc
cmp
xchg
sbb
jns
push
sbb
mov
nop
inc
fstpl
add
pop
ds
jg
push
ss
and
xchg
subl
xor
mov
mov
adc
dec
inc
mov
out
loopne
xchg
lods
in
test
add
jno
xchg
push
jg
je
xlat
je
jno
sbb
mov
adc
jl
pop
or
iret
aas
leave
cmp
push
test
cltd
movsb
loop
aam
scas
aam
jne
out
test
cmc
cmp
je
loop
push
jecxz
xchg
cwtl
stos
inc
popa
in
mov
cli
mov
and
lcall
lcall
pop
dec
push
movsl
mov
xchg
xchg
dec
bound
movsb
fcom
push
mov
fxam
popf
lods
out
mov
xor
clc
mov
jae
xor
cli
dec
xlat
xchg
adc
sbb
rcrb
call
pop
inc
push
dec
hlt
sbb
push
daa
insb
push
mov
push
pop
sub
insb
cmp
ret
call
int
ljmp
fsqrt
adc
cmp
call
cmpl
imul
cmc
push
aam
dec
adc
cltd
and
mov
xor
and
xchg
mov
sbb
out
mov
inc
jl
je
aas
mov
out
ds
sub
mov
out
mov
clc
test
mov
mov
movsb
cld
or
js
mov
xchg
sbb
fwait
mov
cmp
scas
loopne
mov
lds
jmp
aas
imul
shlb
sbb
pop
mov
xchg
cmp
mov
pop
add
push
sbb
push
and
ds
inc
pop
dec
icebp
or
sub
mov
mov
mov
aam
jbe
dec
mov
push
xchg
adc
in
lods
jb
jmp
mov
icebp
jmp
sub
out
dec
sub
pop
dec
cmp
adc
jl
and
mov
and
insb
push
push
dec
stos
dec
mov
push
adc
movsl
pop
dec
jg
jl
pop
xchg
and
and
ret
dec
movsl
cmc
sbb
pop
push
insb
out
add
push
jl
mov
xor
cwtl
dec
adc
in
adc
inc
jb
stc
dec
sub
mov
outsl
dec
xchg
loop
mov
cltd
xchg
dec
and
in
out
fldcw
movsb
les
bound
mov
xchg
push
fucomi
cmpsl
sbb
and
test
add
cmp
sub
int
mov
jb
jmp
and
nop
or
inc
xor
loopne
pop
daa
mov
add
mov
xor
imul
or
rclb
aas
cmp
ja
outsl
movsl
bnd
daa
mov
in
push
nop
or
adc
fcmovb
bound
jmp
orl
jno
jecxz
dec
push
mov
test
mov
shll
sub
xlat
das
les
andl
rcrb
test
mov
xchg
jge
dec
mov
jnp
push
loope
jnp
imul
xchg
bound
xor
jb
cwtl
sub
ds
shrl
shlb
cmc
xchg
int
sbb
push
add
lcall
out
cmp
stos
loope
es
mov
iret
push
jbe
jno
popf
push
cmc
sub
inc
jae
xor
hlt
rorl
add
mov
xchg
test
jb
sbb
pop
mov
jb
cmp
mov
enter
cmc
inc
push
jo
add
std
sub
ljmp
insb
mov
push
aam
dec
cmp
xor
mov
out
mov
mov
xchg
sti
or
adc
js
mov
and
jg
js
inc
int
out
fistps
sub
push
push
ficompl
inc
sbb
aas
jp
rcrb
cmp
mov
andb
pop
add
sub
adc
scas
out
or
insb
sub
aad
jecxz
cwtl
lcall
push
adc
les
xor
push
in
jle
xor
lea
cmp
inc
and
push
pop
dec
mov
push
fildl
pop
dec
test
fsubr
hlt
dec
jmp
cmpsb
outsl
aas
mov
loope
xor
out
lahf
jle
and
out
pop
imull
pop
rcrb
jle
lods
add
push
mov
cld
pop
cli
leave
out
notl
push
sarb
aam
sbb
cmc
ljmp
repz
cmp
es
stc
xor
or
ret
xor
inc
mov
jl
add
dec
jg
fxam
ret
pop
dec
adc
and
jae
jle
sub
inc
push
arpl
arpl
stos
push
cmp
mov
add
daa
in
cmp
int
sbb
adc
leave
inc
xchg
xchg
fmull
lcall
sahf
push
mov
xchg
test
bound
sahf
jl
mov
add
cld
push
add
test
add
pop
sahf
scas
cmp
mov
mov
inc
nop
les
sub
inc
out
xchg
lock
push
cwtl
rcr
shrb
scas
pop
xlat
xchg
rcrl
push
jg
mov
push
inc
scas
je
cmp
add
inc
cmp
sbb
push
mov
xor
sahf
loopne
add
rcll
push
iret
bound
push
xor
dec
testl
adc
dec
mov
xor
push
mov
cwtl
mov
leave
mov
movsb
sbb
mov
jecxz
mov
stc
xor
xor
push
cwtl
jp
ror
mov
xchg
popa
sub
mov
jmp
js
les
jo
ja
fldl
sbb
scas
xor
xor
nop
movsl
dec
outsl
lcall
or
popa
or
loopne
adc
jge
std
gs
mov
cmpsl
call
mov
pop
jne
in
pusha
popa
cmp
call
movsb
push
shl
sti
jae
popf
cmc
inc
in
or
sub
cmpsl
incb
xor
cmpsb
push
jnp
test
aad
add
sub
test
lea
leave
out
push
das
dec
xor
pop
pop
xchg
push
arpl
js
mov
push
pop
fcomps
pop
subb
enter
mov
sub
jae
jge
mov
xchg
movd
daa
clc
xchg
fs
fiadds
lds
cmp
daa
jmp
mov
and
adc
adc
ret
stc
jle
pminub
lock
mov
mov
ss
jle
mov
movsb
mov
cmp
push
or
in
or
dec
xor
pop
inc
mov
mov
fidivrl
mov
mov
je
out
add
cmp
sbb
mov
xchg
mov
mov
sti
xor
cmp
pop
mov
rcrl
jecxz
xor
push
lret
xor
push
int3
cwtl
mov
test
test
repnz
and
jno
loopne
push
hlt
xchg
insb
or
test
loop
bound
mov
mov
mov
js
lret
repz
sbb
adc
fstps
inc
movsb
jge
inc
icebp
jnp
mov
inc
pop
sbb
sahf
xor
jp
pop
and
mov
jbe
pop
std
lea
data16
loopne
sbb
xlat
push
ficompl
lcall
xor
js
adc
pop
mov
je
ficoml
repnz
movb
add
test
ljmp
sub
xor
std
jle
cmp
pop
jns
les
mov
cmp
lds
add
aam
xchg
popf
cmp
lret
jl
cmp
movsb
test
imul
pop
jge
je
scas
cwtl
das
or
add
loope
lods
push
jne
mov
dec
arpl
out
pop
lcall
jmp
lret
lret
pop
test
push
mov
bound
imul
jae
lcall
jno
jnp
xchg
mul
jne
stos
jbe
ror
and
mov
xorb
inc
dec
dec
in
mov
shlb
mov
cmpl
cmpsl
push
xchg
add
mov
sbb
cld
push
mov
addr16
imull
mov
pop
xchg
push
mov
pop
jns
hlt
in
xlat
mov
mov
jl
sbb
mov
xlat
das
jmp
pop
pop
mov
mov
insb
jnp
sub
mov
es
cmp
call
lret
xchg
and
call
or
push
test
loope
pop
pop
pop
aas
jne
jmp
jb
mov
dec
adc
pop
lret
mov
mov
cmp
jae
fstl
test
leave
jne
pusha
xchg
mov
arpl
sub
out
repz
xchg
sbb
sti
xlat
push
sub
shr
push
xchg
sbb
lods
mov
dec
mov
or
mov
cmc
test
mov
jo
popf
pop
or
xor
ret
sbb
aad
pop
jl
add
fsubrl
push
rorb
std
jmp
xchg
and
push
or
divl
rol
cmp
into
shrl
adcb
and
mov
pop
in
mov
pop
jbe
roll
xorb
int
mov
adc
cmp
movsb
out
addr16
outsl
mov
sarb
call
mov
sti
adc
icebp
or
adc
flds
lock
iret
lret
push
shll
das
adc
outsl
mov
cmc
movsb
in
push
fcomi
test
pusha
insl
jae
sub
out
in
lahf
fidivrl
lods
push
mov
mov
jb
push
jae
mov
cmp
and
mov
outsl
aas
nop
int
sbb
cld
lret
pushw
jbe
adc
inc
stc
sbb
inc
sbb
ret
cmpl
in
xor
popf
ljmp
xchg
subl
inc
daa
cltd
cmp
fnstenv
pop
cwtl
sbb
shll
mov
aaa
sahf
push
aam
bound
in
jbe
movsl
call
and
pusha
shl
lret
mov
shrl
inc
cld
incl
bound
daa
inc
out
repz
fsubr
leave
loop
flds
adc
adc
pushf
test
std
xchg
loopne
add
inc
cmp
scas
jns
hlt
gs
mov
xchg
xchg
jg
mov
mov
mov
lods
xchg
xor
fstl
cmpsb
push
out
mov
scas
xchg
sbbb
mov
ret
shll
mov
mov
aaa
sbb
mov
dec
push
or
cmp
in
cli
mov
nop
pop
sbb
dec
inc
dec
xor
outsb
sub
sti
in
sub
mov
jbe
mov
pop
adc
mov
mov
mov
scas
in
pop
or
ljmp
in
std
pop
cmc
cmp
mov
ljmp
dec
or
cld
cld
dec
adc
pop
cs
mov
pop
in
aas
into
inc
dec
cmp
push
xchg
mov
hlt
inc
sbb
jns
daa
and
push
test
xor
cmp
mov
inc
xor
lea
jmp
or
shlb
dec
jbe
lcall
cmp
addr16
mov
ja
into
cmp
jle
cltd
mov
jl
or
rcrl
dec
aam
iret
fisubrs
dec
jb
lcall
daa
arpl
lcall
pop
sub
call
lods
add
cmpsl
push
faddl
fcoml
jnp
mov
inc
dec
adc
xchg
mov
lret
xchg
loopne
fnstsw
push
pusha
pop
fwait
mov
repz
popf
push
mov
jae
mov
lea
add
out
in
daa
jo
or
aas
push
cmp
pop
clc
sub
inc
fiadds
xor
or
mov
mov
mov
shrl
rclb
sub
daa
arpl
jle
add
cmp
mov
xchg
sarl
in
outsb
cmpsb
enter
clc
or
mov
fcompl
std
sti
call
sbb
mov
lods
jg
mov
mov
jo
stc
loope
arpl
lods
sub
imul
inc
jmp
mov
lods
sub
and
sbb
fidivl
dec
fbstp
hlt
dec
inc
fwait
popa
repz
in
cmp
in
lds
shll
outsb
outsl
in
sbb
nop
jge
gs
jae
mov
ds
sahf
fbld
shrl
inc
stos
int
out
movsl
and
jl
enter
push
dec
dec
sahf
jnp
push
pop
add
ret
fcoms
or
movsl
out
popf
lock
inc
leave
imul
es
mov
xchg
cwtl
insl
xorb
jne
out
ljmp
jmp
mov
mov
call
out
add
inc
xor
pushf
ret
shlb
inc
out
xor
xchg
rolb
sub
xor
mov
mov
push
cmp
nop
jnp
notl
fimuls
das
aad
sar
pop
add
outsb
xor
jnp
mov
lret
test
aaa
mov
ret
push
pop
leave
hlt
inc
test
movsb
ret
jns
aas
data16
add
jle
cmpsl
xor
nop
fwait
xor
shrl
lods
int3
addb
xor
mov
repnz
cwtl
push
xlat
scas
push
pop
aaa
mov
jmp
push
roll
xchg
shrl
mov
scas
cltd
mov
bound
repnz
decb
fwait
iret
jbe
test
call
sbb
aaa
bound
out
cmp
imul
dec
popa
mov
and
arpl
sub
imul
inc
jbe
pop
pop
cmpsl
mov
or
mov
int3
and
out
enter
test
mov
mov
fwait
xchg
cli
mov
out
rorb
push
loop
out
js
cld
imul
and
fidivs
sub
imul
in
dec
and
cmp
scas
dec
sub
std
cs
mov
pop
and
cmp
jp
push
push
cmp
and
mov
fwait
test
sbb
push
std
test
mov
cmp
mov
inc
inc
mov
daa
sub
push
dec
cmp
movsb
mov
jmp
pop
mov
mov
fstl
sbb
jle,pn
push
cmp
mov
fldl
or
mov
push
fs
sub
shrl
mov
push
cs
adcb
push
icebp
adc
mov
ljmp
incl
mov
in
fldl
jns
adc
inc
stc
mov
lea
push
cs
loopne
stc
adc
mov
push
adc
in
push
add
cmpsb
mov
enter
pop
ss
movsl
sahf
mov
popa
outsb
repz
das
xchg
pop
xor
js
jmp
sbb
pop
in
or
pop
fldl
pop
xchg
nop
mov
or
cmc
outsb
fs
stos
push
ficomps
loop
push
fwait
sbb
inc
iret
jo
fucomip
out
xor
pop
cs
in
sbb
push
outsb
push
xor
mov
mov
xor
push
fwait
cmp
leave
std
ret
addr16
push
xor
adc
xchg
insb
cmp
cmp
jp
cmp
outsb
jo
dec
or
mov
push
and
push
imul
inc
js
in
fcoml
xor
mov
outsl
sti
negb
out
outsl
cli
fs
jle
pop
adc
pop
cmp
stc
inc
ret
xor
cmc
sbb
out
xchg
mov
pop
mov
pop
or
nop
stos
sub
push
insl
les
or
push
test
loop
sub
xlat
jle
lea
sbbb
cmp
mov
sbb
lock
in
dec
es
fisttpll
ja
jp
add
negl
cmp
and
iret
add
pop
das
inc
mov
pop
xchg
push
or
mov
loop
pop
in
inc
das
pop
je
das
out
jbe
add
sti
mov
repz
divb
out
movsl
xchg
jno
sbb
jno
push
jnp
stos
jne
out
test
or
push
pop
loop
aad
sti
cmp
mov
push
repz
gs
pop
les
mov
sub
mov
fs
aam
icebp
push
xchg
push
mov
aas
lret
ret
cmp
sub
movsb
orb
jno
push
les
sbb
or
and
mov
inc
hlt
jmp
cmp
lods
sbb
xlat
push
notb
sbb
loopne
cmp
sub
cmpb
mov
sbb
arpl
xchg
push
xchg
lock
push
inc
sbb
lahf
je
mov
arpl
cmpsl
adc
les
je
cmp
fistl
out
xchg
sarl
into
jnp
test
inc
pop
pop
mov
adc
and
gs
cs
mov
mov
push
bound
cmp
jecxz
jnp
sti
daa
scas
fwait
jno
inc
fsubrs
fsubrl
fldz
push
daa
cmp
ds
bound
adc
adc
or
pop
clc
ret
and
jno
setge
jecxz
andb
into
push
cmp
mov
gs
popa
mov
arpl
dec
or
mul
into
mov
xlat
jnp
mov
xor
clc
faddp
pusha
stc
sti
xchg
pushf
inc
mov
cs
push
mov
data16
lret
shll
push
pop
loope
aam
loop
std
jge
mov
inc
push
jl
in
or
ja
inc
mov
movsl
adc
sub
rol
and
xchg
fadd
in
sbb
sbb
shlb
lret
or
mov
cli
xchg
lods
roll
aam
dec
jo
inc
decb
movsb
mov
int3
lock
mov
ficompl
fstl
fs
xchg
and
mov
shll
fstpl
mov
in
sub
lret
mov
cmpsb
insb
testb
in
jl
hlt
test
pushf
movsb
fsubrs
pop
pmaddwd
and
sbb
xor
addr16
sub
out
and
and
mov
and
mov
sbb
setl
ret
gs
pop
lcall
cmp
mov
mov
jle
lahf
xor
push
mov
adc
mov
push
fprem
call
lds
aas
aaa
or
mov
das
pop
pop
fmul
push
fstl
jmp
push
and
lods
pop
lcall
fsub
loopne
sahf
daa
or
or
lods
decl
pop
fistpll
xorb
inc
adc
sbbb
test
insl
pop
or
add
mov
idiv
in
and
mov
stos
fsts
jne
mov
adc
adc
and
int
pop
add
leave
add
push
fmuls
fs
xchg
or
arpl
subl
dec
jle
mov
dec
dec
adc
ljmp
push
jle
mov
dec
push
rcl
pushf
xor
or
movsl
mov
push
in
push
or
or
pop
pop
inc
dec
adc
fimuls
pop
pop
aas
xchg
fprem1
or
mov
xchg
push
test
pushf
pop
sbb
jmp
leave
pushf
dec
clc
aaa
setnp
jnp
lahf
rol
push
jo
loop
test
repz
inc
in
int
xor
test
xchg
aad
adc
stos
mov
scas
xchg
insl
mov
or
outsl
dec
into
ja
jo
sbb
or
adc
out
divb
aam
stos
adcb
daa
xlat
insb
cmp
xchg
popl
pop
mov
xor
sbb
xor
jmp
mov
cmc
push
lcall
imul
int3
ret
rorl
lea
je
cmpsl
call
ja
scas
xchg
fbstp
pop
fidivs
lahf
xchg
aam
cltd
jnp
jb
pop
sbb
lret
pop
mov
leave
test
stc
cmp
pop
imulb
or
pop
push
jno
cli
aam
dec
push
push
cwtl
pop
inc
in
mov
rclb
inc
xchg
push
and
call
or
clc
xorl
cli
clc
push
mov
in
lods
mov
push
push
pop
pop
mov
roll
or
xchg
add
popf
add
cli
sbb
mov
sub
cmpb
incl
stc
xor
or
movsl
sbb
repnz
imul
ret
lock
xchg
xchg
mov
and
sbb
insb
cmp
cmp
call
sub
push
jbe
nop
test
and
data16
mov
cmpsb
mov
and
xor
negb
pop
je
pop
sub
fisubl
lret
xor
fcomip
and
out
pop
lods
xor
add
outsl
pushf
xchg
pop
xor
ljmp
add
dec
jecxz
push
cwtl
lds
cli
cmpsl
jle
outsb
sti
push
mov
mov
add
movsb
dec
pop
ja
cmp
lret
movsb
test
pop
mov
shlb
frstor
adc
rorl
fwait
aad
xchg
pushf
mov
inc
dec
pop
dec
push
jne
mov
mov
sub
pop
fs
ret
imul
in
int3
jb
xchg
lods
lret
rcll
shlb
rol
or
jp
sub
push
pushf
push
stc
in
call
jae
xchg
lret
pop
fsubrs
popa
icebp
fsub
mov
aas
and
cmpsb
pop
xor
or
aad
dec
aad
push
add
jmp
push
adcb
daa
jo
pop
jmp
decl
xchg
hlt
mov
push
mov
xchg
ror
sahf
das
or
fdivr
xchg
jecxz
mov
out
jne
jne
cmp
pop
fistpl
mov
xchg
mov
mov
cmp
jmp
testb
ljmp
adc
in
add
ja
jo
or
cltd
xor
imul
cmpsl
xchg
jl
adc
inc
movsl
jge
lret
aad
fldt
popf
sbb
jmp
je
xor
mov
cltd
mov
jnp
mov
das
mov
and
xor
pop
roll
sbb
enter
lock
test
cmp
fstpl
mov
out
xchg
and
push
and
fdiv
mov
jne
lock
cmc
push
adc
stos
out
leave
jle
mov
or
inc
inc
loop
push
in
dec
int
push
mov
loopne
pop
jle
fsubp
xor
test
mov
shrl
sub
sub
cmp
jecxz
outsl
mov
daa
insl
add
lahf
sub
jns
dec
adc
push
outsb
mov
mov
mov
jne
out
arpl
add
push
jg
out
jmp
hlt
pop
test
cmp
jge
cmp
fptan
fs
call
cmp
mov
pop
xchg
mov
cmp
xchg
pop
dec
gs
stc
pop
xor
and
xor
xchg
lret
shrl
dec
imul
push
push
mov
dec
in
in
mov
add
mov
ret
popf
imul
push
mov
mov
mov
pop
sub
sub
sub
lret
mov
das
inc
nop
out
movsb
pop
inc
cli
push
shr
add
mov
loopne
lret
imul
add
dec
sbb
lret
sahf
stc
fisttps
jae
push
or
and
orl
mov
jae
dec
sbb
jno
cmp
mov
test
fs
push
hlt
aaa
lds
mov
loop
inc
sti
insl
mov
movsb
adcl
xor
int3
cmpsl
test
add
sbb
xchg
mov
leave
stos
pop
mov
int3
test
and
sub
inc
jb,pn
icebp
sbb
mov
loopne
mov
and
stos
inc
fisttps
or
xor
dec
pop
pop
cmp
and
xchg
mull
mov
loope
js
test
aam
cmp
cmpsb
clc
test
xchg
sahf
xchg
dec
or
repnz
cmc
xchg
arpl
cmp
ss
inc
mov
fwait
add
or
imul
dec
movb
cld
pop
mov
inc
ljmp
push
add
les
adc
dec
enter
xlat
pop
nop
in
jge
bnd
dec
or
iret
pop
or
lret
fcoms
sbb
adc
and
aaa
loop
mov
xchg
std
mov
loope
xor
xchg
fld
jl
adc
mov
mov
push
cmc
enter
sarb
aad
mov
ja
pop
add
adc
push
push
jge
je
in
into
mov
shll
mov
popf
lcall
mov
cwtl
mov
push
jge
add
dec
ljmp
dec
mov
in
dec
add
inc
dec
loop
jg
int3
inc
cmp
loop
pop
jo
mov
inc
in
call
aam
xchg
in
jmp
xor
rcrl
xchg
mov
push
std
lds
cmp
arpl
add
pop
sub
test
pop
inc
xchg
jae
cli
push
pop
lea
sbb
fcoms
jmp
pop
es
or
loop
popf
negl
push
aam
cmp
push
imul
pushf
mov
lret
test
orb
js
push
xchg
stc
int3
xchg
ret
ds
jge
gs
cld
sub
je
sub
leave
dec
mov
add
mov
adc
jp
cmc
push
fistps
aaa
daa
dec
sbb
mov
sbb
enter
cmp
cmp
sub
mov
mov
pop
ret
sbb
gs
or
xor
lods
stos
fwait
inc
jmp
imul
cmp
jns
cli
rcll
inc
push
cwtl
jecxz
pop
cmp
dec
dec
sub
add
xlat
aaa
popf
out
mov
dec
es
hlt
dec
bnd
fs
dec
xchg
in
push
xchg
xor
aam
jmp
adc
in
ljmp
pushl
mov
xor
fldenv
adc
sbb
jb
ja
shll
adc
xchg
adc
sbb
xchg
les
mov
pop
xchg
inc
jno
adc
pop
jle
mov
push
mov
push
shl
dec
in
mov
je
cmpsl
push
movsb
inc
loop
xor
add
jns
outsl
cmpsb
out
mov
mulb
sbb
cmpsb
fstl
std
sub
ret
test
or
aad
push
mov
ljmp
xchg
jle
mov
jns
dec
iret
push
test
repz
push
shll
cltd
imul
test
lea
mov
push
inc
add
fnstcw
inc
mov
inc
xor
out
mov
loop
push
xchg
jmp
lret
les
mov
hlt
cmpsb
jmp
xor
inc
jmp
cmp
jnp
push
dec
int
xchg
in
cmpsl
sub
cmpsb
inc
test
push
insl
call
add
insl
iret
cmp
and
cld
cmp
hlt
out
adc
repz
stos
inc
mov
rcrl
dec
push
sbb
stc
cmp
sbb
repz
cmp
iret
jnp
cmpb
ret
leave
mov
pop
jno
out
push
arpl
push
pop
xor
mov
jle
jl
int3
jo
jle
xchg
pusha
mov
xor
sub
mov
xchg
ss
mov
ss
pop
aam
mov
test
or
arpl
sub
scas
pop
mov
push
push
jnp
add
gs
inc
push
cmp
pushf
cmp
add
ss
sahf
and
adc
imul
mov
and
cli
or
repz
ljmp
jno
pop
clc
xchg
dec
inc
xchg
pop
fwait
inc
lock
cmp
ds
jecxz
stos
adc
shll
dec
stc
jmp
call
cmp
jo
test
out
xchg
outsb
mov
in
push
imul
mov
pusha
stos
clc
mov
sbb
loope
shrb
push
js
sbb
jmp
cli
sub
fldl2t
out
jge
jbe
add
out
or
testl
pop
mov
xor
push
dec
pop
cmpsl
cld
sbb
ret
jp
sbb
bound
push
and
jbe
in
pop
xchg
pop
add
repz
mov
cmpsb
aam
lods
in
xor
pop
outsl
and
or
lock
cli
out
cmp
pushf
push
inc
stos
mov
xor
jl
fidivs
sahf
aad
incl
pop
cmp
dec
je
test
shl
shl
orl
cmp
mov
test
mov
xchg
fsubrp
leave
int
bound
mov
dec
test
ss
mov
fcoml
sahf
idivl
fldcw
adc
popf
fisttpl
pop
pop
mov
cwtl
pop
jge
inc
jg
in
mov
icebp
xor
cltd
mov
scas
roll
out
mov
call
add
mov
jmp
lds
add
or
xchg
pusha
push
mov
aas
shlb
clc
mov
fidivrl
in
pop
adc
call
jne
dec
jne
cmc
jecxz
or
mov
adc
in
mov
sub
outsb
cmp
in
filds
xorl
pop
dec
daa
setl
push
push
cmpsb
cmpsb
jge
das
movsb
fstp
mov
jmp
pop
das
or
into
pop
cmpsb
shlb
pop
rorl
sub
loopne
xor
sub
fcoml
stos
ja
mov
xchg
sti
dec
mov
or
fidivs
arpl
dec
aaa
pop
and
cld
lret
mov
mov
aaa
repnz
hlt
call
inc
imulb
sbb
enter
dec
or
aad
inc
cwtl
fs
add
cmpsb
xchg
mov
out
mov
pop
out
out
sbb
movlps
xchg
or
cmp
enter
orb
inc
cmpsl
xor
rolb
aaa
jecxz
mov
inc
stos
xchg
subl
rolb
scas
insb
jp
pop
imul
xor
mov
push
cmpsl
pop
jae
dec
sbb
or
mov
cmp
cmpl
xlat
and
in
xchg
cmp
inc
push
pop
bound
push
rorb
lock
into
fistl
cmp
mov
and
mov
sub
xchg
mov
fimull
pop
divb
mov
mov
nop
inc
mov
cmp
mov
mov
xchg
adc
ja
xchg
push
dec
cmp
and
xor
into
loopne
imul
ja
stos
dec
js
iret
scas
push
mov
cmp
arpl
pop
daa
push
dec
vmovntps
sarb
push
lock
xchg
fnstsw
vzeroall
adc
push
mov
flds
lahf
jecxz
or
push
into
lcall
je
xor
inc
sbb
int3
push
imul
loope
dec
jo
xchg
out
mov
fsubr
icebp
in
stos
push
xchg
sbb
mov
pop
mov
fs
push
push
movsl
ljmp
repz
movsb
and
jno
adcb
xchg
pop
and
mov
repz
xor
lahf
sub
mov
or
scas
sub
ljmp
sbb
push
in
ret
push
sbb
lods
add
xor
arpl
test
stos
in
out
inc
in
or
or
sbb
repnz
mov
stos
cmp
mov
mov
mov
push
imul
bound
cli
out
inc
test
mov
pop
mov
and
lcall
adc
jp
int3
sub
or
loope
sub
mov
aas
mov
shlb
pop
cmpsl
xchg
mov
pop
push
cmp
sbb
add
rcrb
add
mov
ds
cmp
mov
dec
mov
cmp
push
adc
into
data16
push
ret
loopne
inc
cltd
jo
aas
fisttpll
fisubrl
cmpsl
push
rep
xor
cmc
jnp
push
out
cmpsl
call
sbb
mov
std
hlt
das
push
aas
test
and
repnz
mov
push
adc
popf
imul
inc
push
out
das
mov
repz
fsubrs
cmpb
and
flds
cmpsl
movb
adc
push
aaa
mov
cld
pop
aaa
pop
xchg
into
push
ljmp
pop
lahf
or
push
jo
xor
inc
movswl
xor
add
adc
movsl
inc
and
cmp
add
testl
fidivl
inc
sbb
or
icebp
dec
imull
insb
cmp
pop
movsb
shlb
outsl
insl
jg
mov
add
in
int
inc
je
adc
arpl
xor
hlt
pop
sub
test
mov
int3
lea
add
lcall
mov
cltd
sbb
pop
jp
push
dec
jp
pop
sbb
inc
mov
fwait
cwtl
pop
adc
popf
lcall
xchg
push
clc
inc
test
mov
jo
fxch
gs
push
loop
into
push
sbb
int3
sbb
pop
inc
cmpsb
imul
mov
cmp
sub
and
js
shufps
negb
mov
pop
sub
ret
cmp
and
or
into
insl
xchg
xchg
mov
inc
xor
jbe
cltd
aam
dec
ficoml
mov
cs
std
int
dec
loop
cmpsl
sub
loop
repz
dec
dec
pop
sti
inc
pusha
ret
js
and
addr16
pop
lods
shll
adc
adc
test
addr16
nop
push
xchg
or
repz
out
cs
inc
das
movsl
js
ret
mov
xchg
aas
js
imul
inc
dec
inc
mov
outsl
ret
movsb
in
in
pop
pop
das
js
jecxz
xchg
out
ret
pop
pop
repz
push
adc
test
sub
cmp
xor
lcall
fs
dec
shll
mov
movsb
fs
sbb
testb
sbb
sub
loop
mov
sbb
adc
in
push
in
adcb
add
jp
lods
decb
lods
iret
xor
rcrl
enter
adc
xchg
rdmsr
subb
jp
lock
mov
dec
cmpsl
and
aam
pop
sbb
xor
xchg
pop
push
pop
and
lret
dec
dec
mov
je
pusha
fwait
jne
pop
ja
scas
shrl
pusha
or
fildll
addb
sarb
inc
jmp
lds
idivb
sub
sarl
dec
rorl
mov
push
pusha
and
adc
xchg
jbe
rorb
gs
and
sbb
adc
into
aad
cmp
add
add
mov
push
sub
dec
fildl
ljmp
test
mov
mov
lahf
mov
lods
sti
mov
inc
test
sar
add
loope
adc
mov
and
add
inc
inc
cmp
daa
lods
xor
add
aad
sar
jns
pop
cmpsb
rclb
or
xchg
pop
imul
cmpl
xchg
adc
inc
stc
lret
test
xor
lret
mov
mov
mov
lahf
sbb
push
test
xchg
daa
mov
jae
fsubrs
xchg
cwtl
pop
aad
xor
outsb
out
pushf
imul
inc
aam
pusha
add
outsl
dec
push
js
int
test
and
mov
sub
jg
push
fisttpll
jecxz
insb
jl
mov
cltd
xor
cmpsb
in
mulb
pop
ffree
push
hlt
out
or
adc
rolb
adc
cmp
adc
push
jnp
inc
jno
mov
mov
cmp
decb
frstor
xor
mov
pop
xchg
fucomp
dec
add
idivb
inc
jge
gs
xchg
hlt
mov
scas
ffreep
stos
cwtl
pop
xchg
mov
movsb
jecxz
mov
mov
mov
mov
out
es
and
ret
outsb
lcall
pop
call
and
push
push
inc
pop
aad
lods
jb
dec
enter
cmp
sub
dec
popa
inc
add
lds
aaa
add
sbb
ds
imul
flds
sbb
push
or
stos
mov
or
mov
jns
test
icebp
es
subl
inc
fwait
jg
cmp
mov
cmp
fsubr
out
xor
and
cwtl
inc
cli
ss
mov
jp
movsl
sub
xor
cld
mov
pop
push
cld
call
sbb
pop
jle
pusha
mov
pop
rcrl
pop
and
dec
cmp
or
cmp
dec
dec
adc
loopne
jo
cmp
push
inc
idivl
adc
inc
ret
xor
hlt
add
cltd
in
nop
sub
das
push
lahf
sub
add
jno
adc
ror
lea
inc
leave
dec
inc
repnz
lret
fistpl
movsl
xlat
adc
daa
out
hlt
fimuls
adc
push
pusha
scas
test
sbb
leave
aam
lods
pop
push
in
jg
mov
lcall
pop
rcrb
push
outsl
push
ret
movsl
xchg
add
adc
xchg
js
loopne
or
xchg
dec
push
xchg
fisubl
subb
jns
sub
ljmp
push
jne
sub
mov
adc
ja
or
inc
loopne
mov
out
push
sub
jae
mov
ret
sub
bound
dec
ljmp
mov
mulb
xchg
mov
mov
outsb
adc
ja
and
xchg
mov
insb
jb
movsl
add
sbb
andb
xlat
aas
ret
aas
jecxz
or
mov
xchg
adc
dec
sbb
repz
adc
fidivrl
sbb
gs
push
pop
mov
mov
jne
aaa
or
sbb
add
xor
push
dec
mov
and
scas
mov
xor
fistpl
lea
idiv
sub
orb
jp
stc
loop
movsl
popa
add
je
mov
stos
pop
into
add
fdivrl
rcrl
daa
sub
cmpsb
mov
cmp
add
fsubrl
mov
and
mov
xor
push
pusha
push
scas
cld
adc
in
pop
xor
jnp
gs
sar
fsubl
cmp
je
or
rolb
xor
lret
cwtl
sub
icebp
rcrb
inc
sbb
push
xor
mov
rorl
in
sub
orb
fisubl
cmpl
in
mov
adc
add
pop
out
adc
mov
sub
cmpsl
push
mov
push
xchg
fdivs
aam
cwtl
scas
sub
cli
push
popa
adc
add
mov
xchg
lds
mov
out
xor
dec
cltd
or
pop
mov
xor
jnp
push
hlt
aad
int3
adc
pop
adc
mov
clc
addr16
outsb
jge
add
adc
xchg
pop
dec
lret
pop
or
repz
lods
push
cmp
lcall
scas
xchg
std
daa
fs
data16
fwait
sbb
cmpsb
jne
mov
stos
les
pop
popa
pusha
cmp
jne
lods
sub
mov
lahf
sbbb
or
mov
loope
fildll
lods
int3
ret
nop
les
pop
dec
or
ret
xchg
into
outsl
push
mov
call
push
loopne
insl
jbe
ficompl
cld
movsb
xor
push
decb
cs
addb
scas
dec
jmp
push
push
add
pusha
pop
or
cmpsb
cmp
out
inc
icebp
jge
mov
jb
test
scas
jae
ret
imul
cwtl
xchg
inc
fldenv
pop
jmp
and
aaa
adc
in
ret
add
in
sahf
mov
js
pop
lret
jns
dec
hlt
or
sub
fbld
mov
pop
adc
lcall
sub
mov
clc
mov
hlt
outsb
in
pop
ss
or
idivb
xchg
movsl
sbb
cmpsl
push
xor
add
add
sbb
dec
js
movsl
push
rcl
push
adc
in
call
jg
and
mov
sbb
mov
test
push
insl
aam
gs
mov
das
dec
push
cmp
aaa
jmp
or
inc
jb
dec
xor
ljmp
mov
sub
pop
pop
mov
mov
jg
fsubr
in
add
push
les
sbb
mov
popa
test
stc
addb
aas
sarl
fsubl
mov
fimuls
or
xchg
sbbb
mov
and
lret
sti
test
sbb
lahf
xchg
pop
xor
int
pusha
stc
ja
into
inc
and
dec
shll
outsl
push
sbb
test
std
arpl
inc
cmp
rol
or
pusha
fisubrl
jp
stos
xor
or
xchg
lods
sub
adc
inc
test
mov
and
addr16
idivl
sbb
lock
jg
pop
je
jno
imul
test
in
cltd
jg
mov
dec
aad
test
cmp
dec
dec
mov
cmpsl
add
push
push
test
cld
imul
push
ds
xchg
xlat
scas
or
jo
imul
sub
test
nop
or
scas
addr16
or
int
popa
jmp
dec
imul
pop
push
xchg
ret
les
mov
test
mov
sub
push
mov
push
pop
aam
in
and
imul
push
ds
push
dec
dec
ljmp
lret
popf
inc
loope
mov
or
pop
cld
mov
test
shll
rorl
fninit
pusha
xlat
in
push
scas
jecxz
push
hlt
cwtl
aam
inc
hlt
mov
inc
mov
push
pusha
sub
push
push
inc
daa
inc
std
in
int3
mov
cmpsb
push
test
push
fidivrl
repnz
das
push
pushf
scas
out
or
std
or
mov
add
and
add
inc
dec
stos
cli
xchg
pop
or
imul
mov
repnz
testb
lods
push
mov
xchg
jnp
jmp
scas
sub
xor
inc
lock
dec
mov
sub
jae
out
push
xchg
pop
cmp
cmc
ljmp
stos
popf
push
cmpsb
push
mov
add
cmp
adc
cmp
push
mov
ljmp
inc
xlat
fs
or
or
adc
mov
xchg
arpl
test
pop
mov
in
jmp
je
hlt
sbb
xchg
fs
shll
pop
jae
hlt
push
push
lahf
movsl
sbb
adc
cltd
xchg
into
push
mov
add
push
aas
mov
sub
sub
sahf
aam
push
out
mov
pop
mov
das
daa
push
fwait
je
shr
outsb
push
das
mov
mov
cmc
add
cs
add
pop
xchg
jno
push
loopne
mov
stos
das
popa
in
dec
cld
lds
pop
stos
pop
jmp
loopne
push
idivl
cltd
adc
add
xchg
std
or
in
xor
fildll
pop
movsb
mov
repz
rcrb
xor
stos
lea
and
push
stc
pop
scas
pop
test
jne
mov
dec
sbb
mull
push
adc
mov
add
mov
sbb
ja
fstps
sub
jb
repz
and
mov
jge
jno
cltd
lret
pop
fnstcw
or
stc
popf
pop
xchg
or
push
push
dec
icebp
clc
ja
int3
pop
test
adc
pusha
xor
push
je
std
jae
imul
xlat
clc
dec
dec
in
sub
shll
sub
or
mov
sbb
ljmp
adc
xorl
bnd
mov
mov
sub
gs
mov
mov
jge
mov
mov
adc
mov
jg
fwait
out
jge
mull
mov
and
mov
mov
sbb
stos
xor
add
and
insl
adc
ret
sti
push
mov
xchg
pop
sahf
pop
mov
movsl
xchg
xor
sub
es
int
subb
negl
sbbl
and
inc
xchg
stos
inc
pushl
cltd
dec
lret
push
rorl
jmp
pop
fisttps
mov
sub
push
inc
sbb
inc
sar
dec
jge
into
movsl
repz
incb
repz
adc
or
insl
lock
mov
rorl
mov
fsubrs
cld
push
adc
cli
xor
sbb
imul
dec
shlb
pop
sbb
jns
popf
push
and
mov
xlat
testl
aam
jge
mov
and
dec
imul
push
nop
xchg
arpl
jp
aam
cmp
mov
adc
rorb
pop
out
ficoml
and
push
pop
lods
es
cmp
int
adcl
jns
jp
add
imul
out
icebp
adc
les
mov
int3
mov
pop
mov
fwait
and
inc
das
aas
test
test
cmp
sbb
mov
xor
loope
pop
sub
jbe
cmpsl
lret
pop
adc
pop
jecxz
aam
mov
call
xor
insb
shlb
nop
push
popa
mov
sti
out
fisttps
pop
bound
movsb
das
or
aas
cmpsb
or
lcall
pop
bound
fdiv
in
cld
cs
test
pop
pushf
aaa
ret
frndint
dec
stc
pop
jne
das
cmpsb
inc
pop
dec
jle
dec
mov
incl
ret
mov
add
rcrl
mov
cli
inc
xor
stc
aad
add
in
push
push
mov
push
sub
adc
arpl
adc
insl
and
push
mov
pop
sbb
mov
cmp
xorl
sbb
gs
outsb
sbb
or
xlat
xor
jae
xor
jno
xchg
fbld
retw
push
cmp
jo
jp
sbb
sub
add
sub
cmp
jb
out
out
mov
mull
in
iret
jno
pop
mov
push
stos
aad
scas
jb
mov
cmpsl
vpshufhw
cwtl
xor
shll
inc
inc
jo
clc
cwtl
leave
lahf
xor
or
andb
repz
push
lods
jns
lret
push
mov
loop
mov
call
xor
mov
xor
test
test
adc
pop
push
adc
mov
cs
mov
adc
cmp
nop
les
mov
call
rolb
push
stc
add
and
xor
je
jp
popf
mov
push
cwtl
sbb
hlt
in
and
jae
inc
in
movsb
and
pop
ja
or
aas
push
jnp
push
pop
push
inc
jl
and
inc
pop
lods
or
fdivrl
dec
jmp
pusha
jnp
push
xchg
jmp
pop
adc
das
mov
adc
mov
xor
push
out
shl
in
fstpt
ljmp
push
ja
jnp
push
ret
fidivs
rclb
sysexit
scas
and
xlat
es
jge
xor
stos
fisttpl
frstor
in
stos
mov
cmp
and
sbb
dec
sbb
mov
xchg
pop
jge
push
or
movsl
cmp
adcb
xchg
sub
pop
test
in
int
adc
out
push
mov
cli
mov
dec
inc
mov
scas
popa
rorb
add
shlb
mov
lahf
testl
cmc
sub
out
popa
sub
mov
psllq
lcall
and
sub
add
fimuls
sbb
mov
out
cmp
andl
dec
mov
insl
add
insl
and
stos
shr
aad
imulb
mov
cmpl
test
pop
sub
inc
push
add
jne
pop
push
push
popf
adc
pop
xchg
fadds
sar
pop
add
sbb
aas
test
movsb
push
sub
loope
cmp
push
adc
mov
inc
out
cld
flds
add
lods
test
jo
movsl
cmp
dec
mov
fildl
es
ja
popf
dec
push
in
and
rorb
cmp
inc
dec
iret
ret
lahf
pushf
xchg
xor
mov
ret
sahf
dec
xlat
call
jg
mov
jnp
jmp
fisttpll
fs
fistpl
test
lods
insl
cmpsl
push
pushf
loope
pop
mov
push
push
rol
roll
call
cmp
lret
sbb
pop
push
pop
xchg
loopne
test
test
pop
les
les
out
jle
rcrb
test
jbe
cmp
inc
mov
adc
fbld
mov
pop
cmpsb
push
sbb
aad
push
cmp
push
and
jge
rclb
sbb
push
cmp
mov
pop
fimull
push
enter
sbb
jnp
out
pop
jbe
xor
sub
ljmp
dec
repnz
and
xchg
adc
xchg
mov
jnp
shll
pop
inc
cmc
jge
sar
insb
pop
push
pop
iret
lret
mov
aad
movq
cli
adc
leave
fdivrs
lea
sub
push
cmp
xor
dec
cli
mov
stc
jo
mov
jle
xchg
imul
fwait
jb
hlt
or
cmp
cmpsl
vpunpckhbw
cmp
xchg
pop
adcl
or
adc
addl
filds
mov
mov
or
movsb
hlt
lods
sbb
insl
lea
push
jae
loope
xchg
sub
ja
addl
sbb
push
shll
jp
pop
add
push
ret
xor
in
adc
pop
ficompl
cvtdq2ps
sub
mov
ret
nop
inc
or
aaa
loope
pop
lea
aam
pop
fdivrp
pusha
adc
rorl
test
add
mov
mov
sub
xchg
xchg
inc
popa
pop
lahf
jecxz
xchg
sbb
test
mov
bound
adc
jbe
lahf
jle
or
ffreep
xchg
in
ljmp
out
enter
dec
cmp
cwtl
xchg
aad
xchg
adc
xchg
fs
inc
or
add
icebp
test
mov
mov
andb
roll
stos
fildll
stos
sub
lds
cmovg
push
popa
jecxz
xor
popf
fwait
outsl
repnz
insl
jp
fildll
imul
fmull
sub
sub
fdivs
insb
jmp
push
add
or
pop
mov
stos
ret
xchg
arpl
insl
push
fstcw
divl
cmc
pop
sub
or
dec
pop
mov
imul
cwtl
sbb
test
clc
lods
aam
adc
sti
mov
clc
inc
mov
xor
mov
and
mov
sar
stos
leave
or
or
leave
ret
fcos
fsave
mov
dec
xchg
pop
imul
adc
ret
inc
nop
jo
ljmp
lock
xchg
inc
mov
scas
push
shrl
pop
jge
xor
dec
loop
xchg
mov
push
mov
pop
add
ret
lods
and
jmp
and
ficoml
pop
jo
mov
cli
xor
mov
add
mov
pusha
sbb
cmp
mov
testl
test
jnp
iret
iret
inc
test
imull
lods
push
and
mov
outsl
int3
push
popf
hlt
xchg
dec
sbb
mov
lock
or
add
cli
clc
cmp
outsb
xchg
das
outsl
les
inc
xor
js
add
adc
sarl
mov
inc
jno
jae
lods
xor
sbb
pop
sub
fldl
std
in
inc
cmpsl
inc
fnstenv
xor
sbb
movsl
movsb
inc
addr16
dec
xchg
js
dec
scas
xor
in
inc
and
push
jnp
dec
mov
jp
dec
adc
push
push
test
les
jns
in
jecxz
mov
popa
cmp
std
and
sahf
inc
into
pop
dec
popf
inc
daa
nop
mov
out
jne
push
les
fs
int3
dec
or
pop
gs
cmp
adc
lahf
and
dec
fstpt
cmp
adc
lock
stc
outsb
bnd
xchg
aam
lcall
and
jnp
xchg
xchg
sarl
lock
jg
lret
inc
xchg
inc
cmp
aas
ja
dec
testb
es
stos
hlt
sbb
mov
jne
ss
xor
in
hlt
xchg
out
xlat
sbb
mov
std
and
repnz
popa
inc
jge
scas
lods
pop
adc
pop
shl
cmp
dec
jecxz
adc
add
fnstsw
jo
call
jmp
cmp
movsb
pop
push
mov
cmp
or
pop
icebp
push
inc
push
in
xor
pop
dec
or
dec
push
or
iret
mov
dec
push
jl
push
sbb
in
mov
mov
iret
inc
into
cwtl
sarb
cli
and
stos
ds
xchg
lock
cmp
xchg
lds
mov
inc
arpl
leave
sarl
pusha
sbb
fidivrs
mov
iret
dec
push
xchg
jp
hlt
xor
loope
or
push
popf
push
adc
xor
js
adc
aam
jb
dec
xchg
sbb
mov
pushf
into
xor
outsl
loopne
out
idivl
sub
fadds
and
jmp
fistps
xchg
push
cmp
cli
pushf
movsb
push
or
clc
push
adc
into
add
add
imulb
mov
mov
scas
sbb
es
jae
shlb
lock
push
or
rcrb
mov
mov
repz
in
shrb
test
add
in
or
sub
out
rcll
mov
xor
pop
cmp
mov
xor
int
lret
push
pop
andb
inc
ret
popa
lds
mov
jle
popa
repz
xor
das
pop
mov
push
test
aaa
in
enter
push
stos
jl
mov
inc
inc
jle
addr16
adc
jl
orl
xchg
mov
and
fs
mov
imul
xchg
mov
cmp
cmp
aas
sbbl
xor
cmpsl
mov
sbb
dec
mov
mov
pop
mov
xchg
cld
xchg
push
cli
adc
shrl
dec
xchg
repz
orl
lahf
pusha
fucompp
jmp
test
scas
in
and
or
test
jle
cmp
push
inc
out
or
insb
daa
mov
icebp
sbb
push
cld
add
mov
mov
sahf
int3
subb
shrl
sbb
lds
sub
ja
sub
push
fld
xchg
or
mov
insb
fscale
pusha
test
inc
add
fldenv
xor
or
jb
xchg
stos
or
push
jb
imul
call
add
mov
mov
std
dec
push
dec
in
stos
test
clc
pusha
adcl
inc
sub
mov
pop
sarl
andb
movsb
dec
shll
add
enter
insb
stos
jp
jg
mov
dec
ds
out
sahf
lds
or
lea
loop
imul
mov
mov
cmpsb
lea
jb
cmp
jnp
mov
test
loop
lret
push
xor
in
rol
int
inc
lret
jg
nop
stc
xor
jmp
mov
mov
jmp
imul
ficompl
repz
mov
jo
insb
int3
mov
lods
jb
sarl
push
add
lret
lock
xchg
sub
loope
dec
idivb
pop
cmc
push
mov
fcomp
loop
lods
mov
push
fwait
nop
test
gs
cmc
xor
mov
out
cmpsb
fadd
stos
push
sub
jmp
bound
fucomip
mov
xor
sbb
add
sbb
fucomi
sub
push
push
mov
clc
and
es
ds
mov
test
mov
popf
orl
mov
inc
vmovupd
imul
push
cld
push
sub
jne
out
push
into
mov
and
rclb
xchg
cmpsb
inc
and
icebp
and
nop
fdivl
xchg
subb
mov
lahf
mov
xlat
add
mov
inc
aam
fisubl
arpl
iret
mov
lret
mov
fcomps
cmc
testb
icebp
movsb
mov
or
and
data16
sbb
sbb
xchg
aam
xor
mov
rclb
bound
cmp
ds
rcrb
loope
cld
addb
cmp
test
ss
add
inc
jo
dec
hlt
cmp
push
mov
mov
fstpt
sub
aam
loop
into
in
sub
cmc
cmc
lock
xchg
push
sarl
mov
push
filds
cmpsb
rclb
mov
fwait
push
dec
div
push
jnp
xchg
jo
jmp
aad
xchg
ret
mov
lock
popf
adcb
inc
mov
ljmp
mov
int
adc
mov
stos
and
jb
js
xor
out
loop
jae
cmp
push
scas
jmp
aas
mov
pop
int3
inc
cmp
inc
test
int
jmp
addr16
jne
cmc
cltd
and
push
iret
testb
inc
or
data16
loopne
roll
mov
std
adc
sbb
rcll
xor
mov
test
cmp
es
lods
mov
cli
int3
jno
jne
jnp
or
mov
xor
mov
ja
js
mov
loop
ret
xor
mov
mov
out
aaa
fisubl
or
fisubrs
or
mov
cmp
outsb
roll
in
mov
sbbb
repnz
jbe
jg
in
scas
stos
and
and
rcll
cwtl
mov
jo,pn
xchg
inc
add
xchg
jbe
and
push
push
das
adc
aas
cmc
mov
je
or
xchg
fwait
push
sbb
inc
mov
mov
fbstp
test
loopne
fcom
mov
add
das
lods
mov
mov
mov
sbb
test
mov
push
in
imul
and
loope
lods
push
xchg
repz
cmp
cs
test
jg
out
push
mov
jmp
scas
outsb
mov
jo
dec
dec
mov
sub
and
sbb
push
cltd
icebp
cmpsb
arpl
lcall
jp
pop
and
jg
fildll
mov
sub
dec
xor
scas
lahf
repnz
dec
fldlg2
cmp
ja
jno
out
sbb
popf
daa
stos
pop
std
add
mov
add
mov
imul
pop
ja
dec
xchg
sti
push
sub
jae
orl
pop
or
cmpsl
cmp
movsb
daa
push
dec
jnp
mov
movq
add
shr
sub
mov
add
xor
mov
movsb
dec
jp
fnstcw
xor
adc
popf
sub
es
aad
das
int
lds
fisubl
or
mov
mov
xor
cmp
cli
push
enter
add
sub
adc
push
jg
jbe
into
jo
fldl
mov
or
sub
adc
xchg
stos
imulb
jmp
imul
aad
push
cs
dec
loope
push
in
dec
cmp
jne
jg
push
cmp
loope
mov
or
dec
jb
repz
dec
jb
loopne
mov
add
mov
mov
scas
dec
test
xchg
add
pusha
mov
pop
and
sbb
cmp
test
and
or
enter
sahf
cltd
lret
cmp
cmpsl
xor
bound
std
mov
frstor
js
jg
mov
inc
push
mov
call
mov
cmpsb
rcr
jo
pusha
rorb
pushf
orb
ljmp
inc
insb
movsb
shrl
mov
outsl
arpl
scas
aaa
outsb
out
fwait
mov
stos
mov
fwait
cmp
xchg
add
idiv
repz
inc
adc
mov
cltd
jo
xor
push
push
and
dec
jg
mov
push
repz
lcall
cmp
jp
jbe
add
lds
sub
sbbl
sub
cs
lret
mov
add
and
bound
arpl
and
inc
mov
mov
sub
inc
sub
shll
mov
int3
fs
mov
int3
and
mov
in
pop
push
mov
add
std
adc
xlat
pusha
jno
xor
lock
cmp
insb
test
test
sub
aad
in
out
fadds
and
scas
inc
fldt
scas
enter
stc
les
out
push
xor
pop
jne
jns
pop
adc
fidivrl
push
cmpsl
fnstenv
dec
xor
cmpsl
mov
cmc
lea
cmp
inc
inc
icebp
mov
pop
sti
fstpt
and
push
cmp
or
or
push
push
insl
mov
dec
push
mov
rclb
test
or
in
xor
pushf
dec
jo
test
push
mov
arpl
bound
push
xchg
jg
pop
cmp
adc
or
pusha
lret
psubusb
shlb
scas
sub
jle
dec
sbb
in
mov
cs
xchg
ret
sub
lcall
scas
sarb
cmp
int
aaa
push
ret
dec
mov
xchg
cmovno
ja
fmull
mov
vsubpd
and
cmp
mov
je
xor
add
and
fdivp
je
add
inc
cli
mov
mov
sbb
mov
and
jl
test
pusha
lea
cmc
push
or
fiadds
push
test
or
add
ss
jmp
negl
push
mov
sbb
dec
push
ret
push
out
jne
lea
fidivrs
pop
cmp
ret
cmp
push
orl
lods
out
cld
ljmp
sbb
xchg
adc
dec
xchg
popf
adc
subl
cmc
push
sub
pop
int
inc
aaa
stos
cmp
in
jbe
sti
fwait
adc
push
gs
sbbl
mov
shrl
xchg
cmc
pop
iret
popf
mov
push
ja
cmpsb
repnz
scas
out
aaa
inc
leave
inc
cs
xchg
movsl
mov
out
daa
mov
push
sahf
sbb
xchg
shufps
pusha
adc
movsl
jge
addr16
dec
mov
fisubs
mov
add
pop
xchg
loopne
fnstsw
in
sub
int
dec
nop
or
cwtl
cmp
push
ljmp
addps
jae
mov
fistps
fdiv
decl
inc
cmp
movsb
mov
in
in
push
data16
out
inc
in
inc
loopne
loop
out
or
sbb
and
mov
inc
cmpl
movsl
pop
mov
jmp
jbe
mov
xchg
mov
xor
mov
lods
outsb
lea
mov
sub
cmp
push
or
popa
push
cmpsl
mov
sbb
cmpsl
outsb
movsl
jo
jmp
test
lods
dec
shr
cmp
ljmp
cmc
repz
sbb
pop
jns
sbb
sbb
inc
mov
je
call
movsl
pop
push
push
clc
mov
jl
inc
out
adc
mov
or
iret
xchg
xchg
out
pushf
or
dec
out
mov
insb
adc
add
dec
pop
data16
cmp
xchg
test
fldcw
mov
incl
mov
adc
repnz
mov
in
sub
aam
sarb
je
divb
cmp
je
movsl
out
cmpsl
rorb
addr16
js
sub
cmp
adc
jmp
xor
pop
jno
test
and
sbb
subl
jb
test
push
sub
xor
repz
ss
sbb
std
sbb
inc
and
add
js
sbb
and
dec
inc
in
lock
sub
leave
fimuls
dec
sub
repnz
movsb
loop
hlt
inc
push
xchg
fildl
mov
mov
cli
cld
push
jmp
in
sub
mov
xchg
inc
xchg
stos
repz
sbb
mov
mov
testl
fbld
jp
mov
aaa
repnz
in
test
test
inc
aas
mov
pop
dec
xor
imul
cwtl
jl
or
std
and
jbe
lods
jl
rclb
lods
cmp
test
add
loop
sbb
push
das
fwait
add
push
mov
sbb
xor
add
xchg
iret
and
inc
lret
mov
iret
or
mov
cmpsl
and
stos
out
inc
xor
in
add
dec
and
imul
push
sub
mov
pop
mov
ss
pushf
popa
sbb
int3
mov
adcl
pop
mov
jecxz
xor
shlb
pop
cmpb
imul
sbb
les
lret
add
sub
aam
mov
push
fwait
push
ss
dec
mov
into
pop
add
inc
lahf
push
mov
adc
sahf
sbb
rcll
mov
loope
add
sbb
mov
add
sbbl
xchg
cmp
push
addl
add
rcr
lods
jne
dec
pop
subl
ret
in
in
mov
sti
or
mov
mov
adc
mov
xlat
ds
test
inc
and
xchg
inc
sahf
xchg
xchg
add
std
mov
std
mov
cmpsb
gs
xchg
fwait
mov
and
leave
add
pop
aas
ret
push
cwtl
fists
xor
mov
lss
sbb
mov
aam
pop
add
or
lret
adc
insl
xchg
pop
ss
and
rolb
in
aam
mov
lahf
dec
jmp
cvtpi2ps
sbb
ljmp
sti
lock
jne
stos
adc
or
sub
popf
insl
addr16
fimuls
in
jmp
pop
aaa
in
jmp
cld
push
pop
out
mov
pop
push
outsl
out
adcb
xor
and
jb
mov
and
rcrw
fiadds
lock
dec
rcrl
jb
jp
scas
jb
push
stos
insb
cwtl
mov
mov
push
mov
enter
popa
sbb
in
push
repnz
and
cmc
push
or
xchg
xchg
dec
or
sahf
mov
les
mov
js
stos
lahf
out
fists
adc
mov
lcall
lcall
repz
mov
or
push
jecxz
aad
das
inc
adc
test
xchg
addr16
movsb
in
test
in
cmp
xchg
out
mov
std
jp
pusha
test
push
pop
fdivrs
jno
cmp
mov
mov
push
insb
pop
fisubrs
roll
hlt
pop
inc
sbb
imul
call
fisubrl
sbb
mov
add
ret
je
movsb
cli
push
iret
xchg
aas
aas
and
sub
pushf
adc
mov
inc
repz
push
xor
test
jns
mov
and
les
add
inc
scas
ret
or
pusha
add
stc
push
xchg
cwtl
fbstp
mov
push
mov
outsb
jnp
inc
ljmp
jg
jae
and
repnz
ffreep
mov
lds
push
lret
lcall
and
mov
lock
stos
xor
imul
xlat
popa
icebp
xlat
je
iret
sbb
loop
add
mov
les
test
cmp
popa
sbb
push
xlat
aad
pushf
add
xchg
add
stos
ja
insb
out
sbb
lds
stos
aaa
mov
cmp
push
adc
movb
cmp
nop
mov
adc
xchg
flds
mov
in
fsts
ljmp
fcompl
cs
add
push
fidivrl
lret
dec
mov
cmpsb
aaa
mov
or
mov
jle
dec
outsl
inc
and
pop
ficoms
xchg
outsl
cwtl
pop
addl
or
and
sbb
imul
dec
or
and
mov
mov
jmp
clc
dec
out
jnp
sub
das
mov
add
aam
push
inc
into
push
pop
and
ficoml
inc
xchg
mov
mov
mov
ret
movsb
outsl
cmpsb
xlat
sub
pushl
xchg
fwait
lock
mov
cmc
jle
es
lods
ljmp
xchg
xchg
adc
adc
jo
mov
test
adc
mov
lds
xchg
scas
mov
mov
pop
jns
shlb
daa
pusha
xchg
dec
mov
ss
sub
adc
jb
mov
cmp
mov
lret
test
scas
sahf
mov
push
inc
jle
sub
jp
ljmp
mov
fidivrl
adc
out
and
cmpl
popa
out
daa
addr16
ljmp
inc
cmp
inc
add
addl
inc
xor
sbb
jg
popf
roll
and
sub
imul
add
cmc
dec
push
mull
jns
fidivrl
xchg
xor
push
rcrl
pop
inc
cmp
aas
or
mov
jns
stc
mov
sbb
pop
inc
push
pop
jns
int
mov
aaa
adc
sahf
addr16
or
cmp
into
loop
cmp
repnz
mov
jno
sahf
xor
lret
xchg
in
xchg
cmp
iret
stc
js
mov
rcr
push
xchg
mov
es
ds
andb
in
lea
inc
bswap
mov
push
mov
mov
js
lds
rcrl
in
mov
mov
xor
out
mov
jp
dec
in
pushf
outsl
xor
mov
aam
jmp
stos
dec
bound
mov
bound
xchg
adc
dec
adc
movsb
arpl
inc
push
in
push
cmp
xor
pop
fwait
stos
call
adc
and
fcmovu
jecxz
pushf
cmp
sbb
or
ljmp
push
call
jae
pushf
push
xchg
test
push
insb
adc
scas
mov
cmpsb
test
pop
adc
or
loop
dec
iret
inc
cli
shl
cltd
fimull
lods
adc
jae
negl
or
insl
movsb
mov
movsb
mov
xor
fisttpll
into
stos
sub
pop
push
mov
repnz
in
jl
test
std
xchg
mov
iret
push
gs
sub
add
add
daa
movsl
rcrl
outsb
cmp
jg
cmc
sbb
or
ja
rcrl
mov
and
imul
sub
icebp
mov
leave
dec
lret
jae
mov
cmp
cmpsl
adcb
ljmp
clc
insb
push
hlt
cltd
and
ret
cmp
notl
adc
lods
aaa
push
das
in
and
call
mov
sti
or
mov
hlt
in
bound
je
dec
and
jae
adc
loope
jne
out
add
sub
test
dec
pop
aaa
shrb
sbb
push
jb
cmp
lds
jp
cmp
cmc
push
mulb
mov
push
mov
pop
cwtl
movb
out
mov
sbb
ret
cli
lea
adc
sbb
int
stc
dec
fisubl
push
movsl
test
push
imul
sub
pop
sbb
sub
add
xchg
fldenv
sbb
out
cmp
jae
fs
mov
in
sbb
jae
daa
sbb
sub
pop
pushf
mov
xor
lods
mov
cmpsb
xchg
not
mov
cli
outsl
stos
pushf
imul
jne
in
insl
push
sbb
ds
ficoml
iret
push
mov
mov
sub
fcomp
loopne
int
popa
mov
push
scas
fcompp
push
arpl
pop
icebp
das
sbb
xor
shlb
push
mov
mov
cmpsl
and
push
ss
cmovbe
sti
mov
fistpll
and
repz
cltd
xor
add
mov
ret
xor
jns
test
cltd
lahf
in
or
out
cmpsb
aas
aas
popf
mov
aaa
dec
push
cmp
loop
sarb
aam
xor
mov
or
add
lahf
fsubrs
mov
je
rcr
pop
add
jno
jl
inc
sub
repz
addb
cli
xchg
sub
mov
mov
adc
and
sarb
inc
adc
scas
repnz
push
jno
sub
jecxz
jmp
and
ret
xor
pop
cld
call
cli
in
das
dec
popa
fidivrs
mov
orl
inc
dec
jne
add
nop
dec
pusha
pmulhw
jp
mov
pop
pop
mov
push
ds
in
jmp
fistpll
int
repz
ret
aaa
fldcw
xor
or
stos
push
ret
in
or
jns
and
das
xor
fsubl
xor
shlb
aam
cs
cld
xor
push
adc
mov
xor
fsubs
cwtl
xlat
sbb
xor
fldl
inc
out
out
add
fcompl
pop
loopne
mov
stos
jecxz
jno
andb
adc
mov
rcrb
call
imul
push
jnp
hlt
pop
push
leave
inc
mov
push
mov
mov
xor
jge
icebp
test
arpl
xor
movsb
or
insb
ffree
insb
pop
xchg
scas
mov
mov
aad
pmullw
pop
scas
add
mov
movsl
jecxz
lds
add
lret
jo
xchg
xchg
rcr
cmp
in
lds
cmpsb
adc
xchg
movsl
sbb
xor
fs
adc
stos
push
mov
or
lea
mov
xchg
and
out
pop
das
test
daa
sbb
push
lods
mov
pop
cmp
ss
ss
bound
mov
jecxz
int3
push
scas
lcall
dec
xchg
sub
fists
pop
cmp
aaa
arpl
jnp
push
pop
sbb
jge
mov
clc
pop
aad
sti
adc
jl
ds
loopne
cltd
fs
ret
arpl
mov
xchg
jecxz
popa
js
mov
mov
fwait
push
jmp
mov
sub
sahf
cmp
iret
xorl
mov
mov
fiaddl
sbb
out
lahf
shlb
mov
jp
data16
push
aaa
pop
out
pop
sub
lahf
adc
outsl
shl
cmp
repz
in
push
rolb
push
pusha
mov
push
repnz
or
xor
adc
jmp
fdiv
jmp
pushf
inc
or
pop
sub
cmp
mov
loop
out
inc
jns
inc
jns
data16
jl
mov
nop
xor
rorl
ret
fwait
jnp
hlt
cmp
dec
adc
daa
adc
mov
les
or
cmp
mov
lahf
sbb
jae
pop
test
push
pop
mov
dec
mov
and
sub
test
outsl
lret
mov
xor
fdivrs
in
jo
push
sbb
or
sahf
pusha
inc
jp
cmp
movsb
out
and
cmp
inc
cmp
pusha
imul
push
and
xchg
imul
lret
xchg
test
cli
mov
cmp
addr16
pop
imul
stos
test
push
inc
jp
fldt
push
cmp
fisubrs
ss
fwait
xchg
mov
lods
and
jp
jnp
cmpsb
aam
je
cwtl
pop
lcall
sarb
sysexit
inc
iret
pop
dec
mov
add
jae
push
mov
push
insb
and
xchg
mov
push
jge
lods
add
jl,pn
dec
lods
mov
sub
push
push
mov
in
enter
push
dec
enter
inc
and
pop
push
xlat
mov
daa
fnstcw
repz
leave
cmp
inc
mov
mov
ljmp
mov
gs
sti
repz
cmp
repz
aam
cld
xchg
add
pop
stos
aad
push
mov
inc
lea
and
lds
cmp
jo
sub
xchg
sti
inc
push
pop
mov
mov
fsubrs
push
xlat
jl
jns,pn
pop
mov
mov
inc
cltd
sub
scas
push
or
mov
je
sub
mov
scas
mov
mov
sbb
mov
inc
and
in
sti
sbb
inc
pop
and
mov
in
cmp
leave
movsl
orb
push
xchg
and
pop
lret
xchg
sbb
inc
or
push
ja
sbb
stos
mov
mov
mov
mov
push
addb
jbe
dec
mov
push
lahf
stos
push
notb
xchg
test
push
lcall
push
or
or
mov
push
inc
add
jae
gs
in
pop
jg
mov
jl
sbb
imull
mov
out
cwtl
iret
mov
inc
dec
out
xor
arpl
lcall
imul
cmp
repz
mov
nop
dec
adc
push
mov
fwait
and
dec
popa
sbb
ss
jl
xchg
sub
mov
inc
pop
ret
jo
in
test
insl
cmpsb
pop
pusha
call
xor
xchg
addr16
xchg
pusha
sahf
dec
bound
inc
iret
psrld
sti
xor
jb
cwtl
xchg
push
psubusw
movq
xor
mov
mov
lea
mov
inc
cmpsb
add
or
lahf
in
lahf
outsb
lods
cmp
loop
sar
or
pop
or
rol
sub
repz
inc
ror
pop
jbe
test
sub
enter
subl
jno
loope
out
icebp
xchg
cmc
cmpsb
mov
and
or
mov
imul
test
and
ja
jne
lret
sbb
lods
stos
mov
cli
movb
sbb
mov
imul
sub
mov
mov
adc
lahf
ret
aas
call
jns
loope
mov
rorb
mov
rol
sbb
mov
fcompl
pop
movsl
pop
add
push
push
jnp
dec
pop
daa
xlat
mov
test
inc
btr
aaa
xor
xchg
scas
iret
in
cltd
jmp
mov
jge
das
aaa
jno
push
xlat
sbb
fnstenv
stc
aaa
or
in
and
sub
sahf
mov
or
cmp
gs
cmp
wbinvd
adc
mov
mov
fwait
scas
jns
add
mov
enter
orb
insl
outsl
fstl
pop
sarl
xchg
ja
cpuid
push
pop
or
cmp
jns
and
adcl
inc
imul
popa
push
jecxz
dec
or
movsl
insl
lds
pop
cmova
sti
cwtl
pop
pushf
push
mov
dec
sti
adc
add
lea
sbb
mov
jecxz
rcr
pop
stos
jle
push
in
test
movsb
add
clc
imul
scas
xor
sbb
in
test
ja
jb
mov
insl
std
jo
jbe
adc
jae
mov
xlat
stc
add
xor
jecxz
out
push
add
jmp
movsl
test
and
gs
bound
add
fsubl
rcrl
push
pop
jmp
mov
sar
addr16
add
and
int
pop
pop
notb
lret
shll
daa
out
cmpsl
push
jl
mov
sbb
in
xchg
mov
push
jnp
mov
gs
cmp
dec
pop
in
adc
in
repnz
cld
pusha
pop
test
in
negl
imul
ss
mov
cwtl
stos
mov
cltd
sarl
adc
mov
jae
or
in
mov
fcoms
inc
cmp
sub
outsl
hlt
pop
int
ret
dec
adc
scas
or
lock
int3
push
mov
add
jnp
xor
loop
popa
int3
and
and
or
mov
scas
inc
pusha
push
adc
in
jo
cmpsl
test
loope
cli
stos
clc
mov
notb
pop
incl
jecxz
iret
xchg
mov
inc
and
jmp
aaa
push
adc
push
pop
or
xchg
ficoml
cmp
fistps
xchg
fwait
push
cwtl
mov
push
pop
sub
push
mov
inc
mov
mov
add
and
out
mov
shrb
cmp
dec
sbbl
mov
clc
cwtl
jae
cmp
mov
sub
imul
adc
stos
jmp
js
xorl
clc
mov
nop
xchg
pusha
loopne
and
loop
or
insb
fimull
rcrb
in
movsb
mov
pop
jne
enter
add
aam
aam
and
orl
jae
jecxz
fidivs
ja
jle
or
xor
sbb
mov
pop
iret
xchg
sub
or
jg
push
cli
repnz
jo
adc
dec
jg
xchg
mov
push
cmpsl
xstore-rng
cmpsl
inc
insw
mov
test
mov
test
loop
push
and
xchg
cmpsl
mov
lea
jbe
cmp
pop
add
outsl
push
ljmp
fwait
mov
fisubrs
pop
xchg
adc
into
inc
push
sti
dec
repz
cmp
loopne
ja
cmpsb
call
in
inc
jae
fdivl
nop
xor
cmpsb
scas
sub
inc
lcall
sbb
push
adc
dec
mov
idiv
push
pop
push
hlt
jmp
icebp
cmp
std
dec
int
pop
cld
xor
lds
cmc
add
cli
jl
sbb
mov
negb
mov
jae
dec
mov
dec
push
fsubrs
mov
cmp
sbb
add
jbe
ret
mov
dec
cld
lcall
roll
push
xor
mov
fcomps
dec
inc
adc
add
or
aaa
sbb
cmpsb
and
xchg
imul
add
das
mov
pop
out
add
jge
mov
mov
loope
cld
cmc
mov
jbe
pushf
aas
bound
lock
dec
sub
xor
movlhps
test
sbb
inc
jo
sub
ja
add
xchg
ret
mov
jne
bnd
mov
dec
jle
cmp
loopne
sub
cs
sub
cwtl
stc
mov
scas
jmp
and
mov
push
nop
mov
pop
loop
scas
add
sub
ss
mov
in
xor
pop
jg
mov
cmp
jp
cmp
sub
test
add
push
rclb
jae
sbb
push
sbb
dec
dec
stos
and
std
sub
inc
or
adc
std
cmp
repz
cmpsl
lahf
imul
pop
jns
jnp
not
pop
mov
lret
fstp
outsl
pop
pop
aaa
jg
pop
xchg
lcall
inc
dec
and
jl
inc
jns
dec
aad
jbe
mov
and
mov
cs
adc
sub
jne
xchg
sub
test
in
stos
sti
mov
inc
mov
mov
push
insb
lods
pop
ljmp
loopne
pop
int
mov
xor
loop
lret
mov
dec
imul
xchg
adc
jge
jle
mov
inc
pop
xchg
test
jle
push
aad
mov
add
stos
sbb
cld
mov
mov
pop
sbb
mov
cmp
inc
clc
in
lds
inc
mov
fwait
sbb
cld
les
hlt
lock
outsb
push
mov
pop
rcrl
pop
and
inc
cmp
mov
xchg
ss
icebp
in
jnp
loope
pop
jl
sbb
inc
xor
mov
stos
clc
cmc
repz
pushf
jne
nop
and
lods
in
cmp
mov
xor
fld
sub
das
pop
lret
add
out
mov
cmp
loope
mov
fnstsw
jg
xchg
addl
xor
mov
icebp
stos
mov
fistl
imul
movsl
cwtl
in
inc
stc
fdivp
xchg
pop
sbb
cmpsb
mov
add
add
and
mov
inc
mov
adc
popa
push
pop
pop
aad
pop
cmp
lock
or
rcr
xchg
sbb
ja
loope
jb
test
int3
daa
jecxz
xor
xchg
dec
mov
bound
movb
sub
or
or
test
mov
or
jmp
dec
and
mov
sbb
jle
in
iret
addr16
sub
dec
sub
jecxz
jne
inc
fs
bound
dec
or
fcomp
mov
inc
xchg
mov
adcb
outsl
mov
and
arpl
or
rcll
rorb
pop
xor
or
dec
push
xchg
data16
and
aas
cwtl
int
mov
mov
rcl
or
daa
jp
imull
cmp
call
mov
repz
pop
cli
jl
ss
stos
cmp
cmc
jno
sbb
push
sub
pop
leave
push
jns
xlat
in
push
jne
and
cmp
cmpsb
cmc
pop
xor
addl
mov
mov
xor
bound
cwtl
add
aas
mov
cwtl
jge
push
sbb
fdivs
loopne
fidivl
jge
into
lss
adc
ret
inc
jl
dec
fs
lahf
add
mov
rcrl
ret
inc
xlat
stos
and
lret
inc
movsb
xchg
stos
cltd
push
dec
xchg
push
jns
aad
pusha
push
adc
inc
lret
loopne
lods
frstor
adcb
aam
pop
adc
dec
adc
push
mov
repnz
outsw
loope
negl
ficomps
and
mov
xchg
mov
das
inc
aas
inc
dec
lahf
mov
xor
sbb
cmc
cmp
fistl
pop
popa
out
arpl
mov
push
flds
xchg
pop
pushf
cs
adc
pop
mov
aaa
movsb
sbb
in
out
jo
and
xor
outsl
test
push
test
cmp
aad
or
shll
test
add
cmpb
xchg
icebp
out
test
jg
jle
sahf
out
and
in
adc
rorl
pop
mov
push
and
xor
and
arpl
fistpll
std
and
movsb
or
ret
pushl
cmpl
dec
movsl
hlt
xchg
jnp
sbb
je
outsl
xchg
pusha
mov
jmp
dec
push
cmc
bound
addb
fiaddl
sub
cs
fxch
push
scas
sbb
push
sbb
pop
rorl
mov
push
sub
push
ret
xchg
mov
gs
push
sub
or
shrb
xchg
lds
call
bound
rcl
mov
das
xchg
loop
push
mov
enter
or
scas
js
push
fisubl
dec
mov
es
adcb
sahf
mov
iret
sub
scas
xchg
dec
pop
dec
lods
into
ss
rclb
dec
into
jle
cld
xor
xchg
movb
lock
jl
xchg
or
test
cld
mov
aad
adc
in
mov
inc
pop
das
dec
mov
out
insb
arpl
repnz
add
sbb
mov
jno
lods
jecxz
xchg
mov
in
pushf
stos
mov
push
andl
lock
jecxz
xchg
or
fbld
xor
scas
dec
sti
push
fwait
and
inc
jb
jo
or
insb
xchg
int3
push
and
ret
or
push
lret
mov
add
cmc
in
rcrb
pop
cmp
dec
std
xchg
sbb
test
ja
sbb
xchg
data16
lcall
and
and
mov
div
and
pop
mov
xor
inc
jl
inc
stos
push
imull
mul
inc
leave
out
movsb
adc
jo
jno
or
cmpsl
push
pop
ds
adc
or
and
jge
shl
jg
js
in
filds
fldenv
mov
lods
shll
mov
xor
mov
sub
aas
xor
inc
mov
sahf
inc
scas
js
mov
pop
adc
sbb
incl
roll
pushl
ret
into
adc
mov
mov
adc
pop
xchg
push
idivb
or
pop
dec
pop
push
test
inc
imul
jmp
aas
or
add
lahf
jmp
xchg
repz
int3
jge
mov
and
jl
call
dec
and
jb
jne
xchg
int3
out
inc
mov
and
cmpsb
mov
pop
add
jns
rcrl
scas
or
inc
inc
xchg
aas
or
sbbl
stos
cs
out
in
sahf
or
pushl
cmp
mov
xor
pop
sub
add
push
imulb
push
pop
jne
enter
mov
mov
add
iret
cmp
xchg
pop
and
ret
jne
or
mov
scas
or
push
mov
aam
ljmp
popa
cmp
jnp
pusha
call
or
sub
push
fdivl
popf
lods
lret
adc
popa
or
xchg
cltd
mov
clc
ja
dec
adc
mov
and
dec
add
mov
imul
hlt
jl
aas
js
daa
lds
adc
xchg
pusha
cltd
dec
mov
ret
insl
daa
mov
or
test
push
mov
lods
sbb
jl
ljmp
jge
mov
out
jae
mov
mov
xchg
dec
sub
sub
mov
aaa
notb
leave
push
inc
test
mov
adc
inc
add
xchg
sub
dec
mov
push
add
rolb
add
pop
xor
and
and
push
test
rorl
mov
movsl
mov
adc
and
push
lret
bound
push
xchg
ljmp
in
in
or
xor
push
sbb
mov
push
outsl
lret
pop
xchg
cltd
cmc
mov
and
cmpsl
and
mov
xchg
xor
mov
inc
cmp
js
and
push
je
jp
aas
mov
insb
into
inc
xchg
outsb
lcall
pop
nop
enter
mov
mov
ss
jns
ljmp
jmp
lods
fisubrs
mov
fwait
adc
mov
inc
fisttps
outsl
orl
cmpb
jmp
je
inc
lods
movsl
jle
sbb
popa
push
sti
lret
ja
in
cltd
push
sub
sub
push
xchg
dec
mov
mov
pop
shll
adc
mov
xor
sbb
lahf
dec
ss
add
ss
inc
pop
cmp
addl
mov
inc
xlat
xor
mov
sub
ljmp
fiaddl
ficomps
jbe
xchg
mov
mov
sub
gs
mov
cmc
call
cmpsb
jae
bound
int3
aad
add
sti
sbb
ljmp
inc
pushf
sub
jno
mov
mov
push
xor
stos
call
cmp
mov
lods
aam
je
iret
mov
lret
lahf
mov
scas
adc
pusha
pushf
cli
sti
xor
mov
mov
and
insb
mov
add
jbe
and
das
mov
jo
sub
lahf
repnz
fisttps
test
add
pop
scas
cmp
jle
adc
push
mov
xchg
pop
fnstenv
pop
fbld
lods
andl
xchg
ss
cli
ret
hlt
mov
out
inc
push
nop
pushf
or
cmp
clc
subl
movsb
aad
adc
js
and
xor
aas
push
pop
and
aam
gs
xor
xor
jo
dec
je
cmpsb
add
or
dec
arpl
scas
loope
orb
dec
xchg
dec
mov
jb
ljmp
aad
jbe
into
mov
loop
into
push
mov
imul
fiaddl
mov
sbb
jecxz
fisttpll
ja
mov
mov
test
xor
cli
insb
jmp
mov
push
mov
por
cmpsl
arpl
inc
lock
fisttpll
cmp
push
jns
cmpsl
pop
cli
and
mov
push
adc
shlb
aad
nop
in
divl
and
insl
mov
jb
xchg
xor
xchg
es
in
pushf
je
inc
scas
lea
je
scas
call
imul
std
movsb
mov
pop
xchg
and
mov
ja
fcomi
mov
mov
push
push
add
aad
cld
cwtl
rorb
sarb
pop
mov
mov
adc
jb
pop
pop
pusha
mov
xchg
in
cmp
and
les
inc
and
jmp
imul
pop
fiadds
adc
lahf
pop
or
negl
sahf
dec
out
imul
xchg
and
cs
lods
and
inc
mov
or
sbb
inc
dec
pop
xor
inc
mov
mov
add
stos
test
ds
or
pop
aas
icebp
in
ljmp
popf
ret
mov
gs
pop
or
pop
inc
jge
or
cmp
dec
inc
shll
fxch
jl
mov
daa
xor
jbe
das
in
daa
pop
pusha
movsb
cmp
jno
lods
roll
scas
mov
xor
and
out
and
lret
fsts
push
enter
test
addr16
jmp
scas
cmp
aam
inc
xchg
insb
jo
arpl
popf
mov
xorb
repnz
fists
jmp
fcomip
xchg
mov
pop
add
lahf
and
xor
js
fcoml
js
pop
movsb
outsb
shrb
or
and
fwait
pop
fs
clc
es
mov
push
notb
push
adc
push
push
rolb
inc
xchg
stos
jno
imul
xor
or
mov
aas
sti
das
pop
mov
bswap
jecxz
rcll
pop
cli
sub
dec
adc
out
push
fdivs
push
shll
inc
scas
mov
mov
loop
sub
push
fdivrs
loope
xchg
pusha
jg
call
jae
add
jno
jo
inc
push
scas
lahf
mov
imul
sbb
inc
or
cmp
pushf
jb
push
das
and
or
mov
jo
nop
shrl
jecxz
inc
xor
cmc
sbb
insl
sahf
dec
lods
mov
pop
pushl
movsl
sub
mov
sahf
insl
xor
mov
rol
inc
sbb
out
es
sub
dec
notb
movb
enter
add
in
in
mov
int3
add
mov
les
push
outsl
pop
sbb
sub
mov
mov
sbb
stc
mov
pop
xchg
call
stc
xor
dec
add
inc
rcrl
aas
in
addb
adc
rcrb
ss
jecxz
call
fwait
mov
icebp
ret
in
mov
scas
popf
or
scas
in
flds
test
rcll
sbbb
lock
aam
fmuls
mov
sbb
fs
pushf
test
cmp
push
das
adc
shlb
int3
push
pop
dec
aaa
rolb
xor
stos
rolb
cmc
or
in
pop
or
sbb
xchg
xor
cltd
inc
daa
jecxz
xor
mov
repz
mov
hlt
test
aas
hlt
fnstcw
inc
pop
pop
sarb
mov
aaa
dec
imul
inc
lret
jmp
sbb
das
sub
sbb
sbbb
out
and
push
test
xchg
xchg
leave
aas
lfs
mov
ret
pop
stos
inc
cltd
lret
jg
outsl
stc
dec
xchg
movb
test
lock
aam
xchg
aas
hlt
ja
jge
test
and
xchg
in
in
clc
add
jge
outsl
xor
shlb
cmp
sbb
jge
cmp
mov
into
xchg
in
xchg
mov
and
sub
inc
sbb
mulb
leave
pop
and
sub
out
xor
fnstenv
cmp
pop
bound
ja
pop
sub
fs
and
mov
mov
cmp
add
fstpl
add
lds
cwtl
cmp
out
lret
or
gs
pushf
sub
aad
sub
ss
loope
enter
sub
arpl
fcoml
popf
jg
jns
bound
dec
loope
outsb
xchg
pop
out
pop
jno
push
pop
pop
or
lret
sub
repz
ficoms
push
push
dec
mov
adc
jmp
jns
mov
or
dec
mov
cld
icebp
pop
inc
or
sub
clc
mov
add
orl
push
dec
int3
pop
inc
jecxz
push
fdivrp
xchg
jae
addr16
pop
fiaddl
inc
mov
or
jp
in
mov
lcall
ja
xchg
aas
or
mov
fistl
lahf
lods
repz
addr16
ret
xchg
rorl
iret
add
xchg
sub
xor
jg
shll
jns
pusha
xor
xchg
ss
ret
aad
cltd
cld
roll
sub
in
lods
xchg
out
mov
out
popf
xor
call
jno
dec
sbb
pop
mov
lret
fs
xchg
cmc
out
enter
ljmp
pushf
and
adc
scas
xchg
xchg
ljmp
mov
push
std
shlb
test
and
arpl
cwtl
sbb
jecxz
add
movsl
jns
rcrl
je
pusha
lcall
rcrl
int3
bnd
dec
ds
pop
mov
dec
test
dec
push
clc
dec
push
jne
or
icebp
adc
jno
cmpsl
sub
lods
mov
or
sub
push
or
out
imull
mov
stos
jnp
sarb
jmp
int3
mov
jo
push
xor
orl
dec
pop
sarb
sbb
lcall
test
push
mov
loopne
xor
pop
inc
movl
jp
pop
iret
or
inc
add
clc
add
cmp
out
and
repnz
popa
in
orb
xchg
fisttpl
popa
push
aas
lea
test
mov
pop
xchg
loop
shll
pop
shl
mov
les
xchg
dec
adc
mov
pop
sub
out
xorb
jns
mov
test
push
fsub
xor
cli
les
jge
mov
xchg
jnp
stos
lods
loop
cmp
mov
mov
lods
add
lock
lret
xor
mov
divl
mov
sbb
aaa
outsb
addr16
ret
shrl
xor
mov
add
jno
xchg
sti
lock
dec
jns
pop
test
mov
jnp
sahf
sbb
xchg
adc
rclb
add
or
or
lock
and
push
fwait
inc
pusha
int3
rolb
in
rcrl
les
jno
sbb
andb
inc
fcompl
xchg
mov
mov
testl
or
mov
lods
outsl
out
scas
popa
add
sub
call
leave
scas
xor
mov
jnp
mov
inc
xchg
mov
imul
int
mov
mov
out
jnp
mov
loope
movsb
inc
fs
fldenv
xchg
fs
jb
mov
int
sbb
nop
hlt
insb
mov
cli
ret
mov
mov
ljmp
xlat
loop
adc
ja
dec
in
cmp
stos
mov
je
jmp
add
xlat
add
mov
jo
mov
adc
sti
in
popf
fwait
adc
xchg
cmp
or
dec
mov
outsl
xchg
ret
sti
imulb
xor
es
push
adc
les
popa
and
cmp
adcb
and
dec
addr16
sub
fmul
mov
popa
mov
push
mov
gs
xchg
insb
pop
xor
xor
icebp
incb
mov
cmp
mov
rolb
adc
sbb
mov
mov
out
pushl
imul
pop
mov
mov
rcll
ds
mov
mov
pop
loopne
leave
lret
sub
xor
arpl
negb
bnd
mov
fisubrl
js
xchg
and
data16
fistpl
stos
loopne
addr16
mov
push
and
dec
sub
icebp
push
sub
dec
cmp
loope,pn
lods
movhps
xchg
outsb
or
jmp
andl
push
inc
sub
cli
imul
inc
mov
out
subw
sti
sub
mov
icebp
js
or
lea
gs
or
shl
out
lock
inc
call
repnz
scas
pop
xchg
ljmp
js
inc
mov
out
ret
xchg
ret
jg
enter
ljmp
mov
inc
out
cmp
jmp
incb
mov
inc
fidivrs
out
mov
aaa
pop
insb
outsb
jmp
xor
mov
jp
xchg
push
sub
sub
addr16
out
xor
in
and
xor
adc
mov
inc
rcrl
mov
push
in
dec
jle
mov
mov
sub
inc
push
pop
mov
mov
aas
mov
adc
dec
and
mov
cmp
das
push
push
mov
and
fidivl
adc
sar
in
and
aad
into
and
rcll
mov
mov
push
lods
ljmp
dec
mov
lods
sub
in
mov
xchg
or
add
jg
sub
push
adc
xchg
bound
es
adcl
aaa
rorl
mov
cmpsl
es
lret
lock
stos
outsb
scas
mov
div
mov
sub
cld
mov
pop
mov
or
bound
cld
test
test
daa
je
rol
mov
das
sbb
cltd
hlt
out
push
das
push
hlt
mov
movsb
mov
adc
test
push
addr16
jmp
sub
pop
push
sub
xchg
adc
lock
sahf
jecxz
mov
and
xor
int3
or
pop
movb
int
rclb
and
lds
jbe
arpl
psubusb
fcmovnbe
push
es
bound
stc
stos
aas
out
sti
sub
sub
xchg
xchg
stos
add
cwtl
mov
in
in
adc
mov
pop
pop
or
adc
test
push
mov
mov
push
mov
movsl
sub
cmc
cwtl
and
inc
lret
lahf
lcall
popf
jle
jg
gs
cmc
or
cmpb
roll
sbb
inc
mov
pop
je
jae
sub
lret
xchg
hlt
cmp
push
xlat
xchg
movsl
fistpl
jl
sbb
clc
cmpsl
repnz
stos
stos
adc
jnp
or
jne
movsb
leave
dec
dec
pusha
gs
add
adc
adc
in
fildl
movsb
sub
sub
jns
scas
sub
cld
jnp
mov
fisttpll
mov
test
gs
mov
pusha
ret
inc
imul
push
int3
lea
mov
sahf
mov
sets
mov
cli
push
adc
rolb
scas
out
fisttpl
mov
ret
dec
cmp
xlat
or
and
pop
divl
sub
mov
xlat
xchg
pop
ret
ds
or
idivl
pop
filds
or
subl
out
out
xlat
push
pop
out
scas
or
mov
mov
std
sbb
xchg
test
pop
inc
xchg
inc
mov
dec
push
push
sbb
sbb
inc
inc
stos
pop
push
clc
mov
rorb
sbb
arpl
pop
aam
lds
cmp
ficompl
dec
ficomps
mov
mov
daa
cmpsb
js
stos
leave
cmp
sub
in
repnz
popa
test
ds
adc
fprem
movsl
fisubrs
mov
and
xor
inc
or
jne
int
pop
xchg
rdtsc
xchg
push
shl
pop
scas
fstpt
or
mov
ljmp
dec
leave
mov
xor
dec
xor
clc
in
and
inc
jle
or
xor
sub
sarl
jo
std
lahf
mov
adc
cltd
mov
or
aaa
out
je
sub
cmp
or
inc
fs
sub
bound
xchg
inc
imul
aam
push
mov
push
outsb
adc
mov
rorl
push
jmp
inc
daa
push
stc
push
push
mov
jmp
inc
fcomip
and
dec
enter
xchg
or
cltd
sbb
lods
ss
mov
outsl
xor
xor
adc
test
cld
sub
insb
pop
cltd
lock
add
repnz
or
dec
xor
jbe
add
add
jbe
xor
dec
mov
fiadds
cmpsb
dec
dec
add
mov
int3
mov
add
icebp
push
push
movsl
pop
cmc
test
fwait
in
xchg
mov
int3
mov
mov
ficoml
mov
pop
popa
sub
movsl
cmp
mov
ljmp
pop
enter
mov
inc
gs
adc
mov
ja
mov
scas
je
popf
push
and
outsl
push
or
mov
cmp
out
or
xor
cmc
sub
or
or
or
and
sub
jg
pop
loop
mov
adc
add
sub
pusha
pushf
dec
or
dec
or
xor
xchg
movsl
and
repz
ror
pop
and
lret
fldcw
xor
fdivl
pop
into
lret
mov
sahf
popa
mov
nop
xor
jno
inc
cmp
jp
inc
sbb
mov
pop
adc
inc
xlat
adc
sub
in
test
test
leave
test
push
push
mov
push
arpl
testl
mov
lret
js
sub
mov
pushf
pop
fwait
jne
lret
ds
push
dec
insb
dec
std
adc
xchg
fistpl
adc
pop
jmp
andb
xchg
or
push
cmp
punpckhdq
loopne
jo
xchg
push
xor
fldt
mov
mov
repnz
ret
and
mov
mov
push
xor
add
push
sti
out
iret
mov
rcr
mov
mov
stc
push
dec
out
js
add
adc
es
rcrb
loope
daa
push
lods
sbb
jb
cmp
test
pop
pop
iret
jo
loop
jno
xchg
mov
dec
in
adc
fldcw
int3
sbb
fldl
xor
push
outsb
shlb
adc
leave
imul
aad
xchg
ss
int3
imul
xchg
popf
scas
lea
jecxz
subl
jmp
sbb
loopne
stc
in
les
sub
insl
xchg
mov
sub
push
leave
orl
push
into
imull
data16
aaa
sbb
xchg
neg
push
cmc
adc
jl
mov
rcr
add
pop
daa
mov
scas
xchg
cmp
lds
cwtl
out
insl
out
sbb
sbb
adc
cmp
cmc
subb
dec
cmp
add
sti
xor
pop
gs
pop
pop
ret
pop
mov
dec
adc
ljmp
mov
ds
dec
mov
or
ret
loop
mov
mov
fadds
ja
or
xor
out
je
in
jbe
mov
outsb
mov
jnp
jno
dec
or
mov
shrl
cltd
jl
and
out
and
and
adc
lds
inc
xlat
adc
or
cmp
int
test
fsubrl
sub
mov
adc
cmp
cltd
dec
fcmove
add
into
imul
lret
or
leave
cmp
inc
xor
or
sub
addr16
push
adc
mov
fstpl
sub
jge
dec
outsb
pop
fstpt
mov
fidivrs
movsl
in
outsl
mov
push
push
push
jge
data16
jo
popf
popa
repnz
cli
or
push
dec
sbb
mov
mov
and
lret
stc
dec
xchg
or
mov
sbb
mov
int
mov
jmp
adc
inc
psrad
ds
sub
nop
scas
movl
ljmp
test
add
sbb
adc
xchg
sub
cmpsl
out
and
inc
inc
mov
dec
ljmp
mov
cld
fs
stc
and
jne
stos
xor
fsubrs
adc
fbld
or
adc
dec
sbb
cmpsb
lret
sbb
or
push
push
sbb
push
add
nop
sub
addl
int
frstor
shl
orb
shl
rol
push
mov
pop
fwait
jo
and
inc
dec
or
inc
cmp
out
mov
pop
jae
out
pop
test
and
dec
xchg
dec
or
aas
add
sbb
jl
cld
dec
movsl
adcl
fwait
adc
lds
scas
sbb
inc
loopne
out
or
add
push
scas
daa
mov
into
gs
inc
les
fwait
or
mov
mov
lock
mov
rcll
mov
sahf
sbbb
adc
adc
stos
loope
test
cs
je
mov
pushf
mov
rcr
pop
mov
cmp
mov
xchg
lock
or
rorb
sbb
and
mov
mov
inc
ja
nop
pop
pop
pusha
aad
enter
xchg
aam
adc
mov
xor
lcall
push
mov
sbb
jne
sbb
shll
mov
push
insl
cli
in
jl
fldl
scas
sbbb
ja
addr16
pushf
shll
cli
shrl
inc
stos
cmpsb
mov
add
imul
fsubrl
mov
xor
and
cmpsb
cmp
push
mov
or
pop
pusha
cmp
cmc
mov
jno
ffreep
push
jecxz
loope
mov
insl
mov
push
in
mov
mov
imull
popa
int3
cs
repz
push
xor
outsb
and
sbb
popf
push
outsl
push
stc
insb
sti
scas
aam
sbb
adc
enter
lcall
mov
jle
dec
jl
fst
iret
and
cwtl
out
bound
jmp
jecxz
adc
sub
daa
dec
push
pop
ss
or
adcl
dec
xor
int3
xchg
mov
sbb
sti
jne
mov
loopne
xor
aad
scas
pusha
lea
mov
inc
cwtl
sub
add
mov
cmp
mov
jae
add
sarb
fdivrp
adc
jl
mov
and
inc
push
and
pop
push
les
loope
adc
out
mov
lahf
les
push
dec
sub
xor
mov
fadd
jl
sti
mov
fcmovnbe
xorps
pop
test
ret
and
incb
ss
and
mov
push
mov
push
mov
adc
and
mov
stc
aam
movaps
push
incl
subb
lea
into
xor
lret
sbb
xor
sbb
nop
stos
push
pushf
cmp
outsb
pop
lret
outsb
cli
push
inc
insl
mov
dec
fisttpl
es
cmp
lea
mov
in
mov
add
jmp
aaa
mov
and
ficompl
sub
xlat
xchg
sub
enter
pop
orb
mov
add
sbb
lods
and
and
dec
pop
bound
neg
clc
mov
js
inc
jl,pn
jle
dec
mov
sub
inc
pop
xchg
hlt
aam
bound
jle
ficomps
jo
out
das
in
insb
add
lock
and
cmc
sbb
pop
sub
pusha
fs
movb
ret
and
fldt
mov
mov
aas
scas
or
insb
lret
cwtl
adc
push
aam
sub
cmpsb
or
aas
pop
lods
pushf
mov
adc
adc
in
add
cs
popf
add
inc
jmp
xchg
insb
sahf
dec
addr16
insb
loopne
call
cmp
rclb
dec
clc
mov
popa
push
xchg
pop
leave
bound
daa
mov
iret
mov
fsubrs
jae
enter
xorl
inc
sarb
repz
mov
sbb
movd
cmpsb
test
sub
xor
aad
arpl
into
sbb
add
push
jl
mov
add
aam
lret
icebp
in
cmp
or
lret
sbb
jae
icebp
test
in
mov
inc
pop
ljmp
ljmp
push
mov
mov
std
adc
mov
data16
in
shlb
in
inc
mov
and
cmc
pop
xchg
nop
inc
jo
mov
mulb
cmp
pop
popf
or
pop
int
stc
jae
mov
xchg
jp
cmp
vcvtss2si
mov
scas
xchg
icebp
stos
paddb
jbe
xchg
push
mov
fcomip
sti
imul
inc
jle
shlb
mov
xor
daa
mov
call
clc
push
lods
adc
mov
push
adc
sbb
sbb
es
mov
lods
xor
sub
stos
or
test
dec
mov
jno
add
mov
or
arpl
fisubrs
imul
push
jecxz
mov
dec
dec
das
cmp
bound
xchg
shrb
push
xchg
pop
loop
push
cmc
dec
jmp
xchg
and
inc
xlat
and
ret
gs
sub
lods
pop
mov
es
test
jnp
sbbl
pop
mov
icebp
cld
push
dec
ljmp
jmp
int
rclb
sti
cmp
cmp
js
dec
movsl
jne
sbb
cltd
and
dec
rcr
dec
and
cli
xchg
push
lds
fwait
cmp
mov
fldenv
or
fcom
push
in
jmp
mov
inc
outsl
lock
mov
out
in
notl
mov
push
test
aad
mov
and
fs
fstl
sahf
dec
xor
cmp
into
mov
push
jge
push
mov
mov
jno
mov
idiv
xor
cwtl
push
lret
insl
sbb
cmp
fmuls
repz
xchg
loop
movsb
mov
mov
mov
jge
mov
int3
lcall
inc
addr16
mov
mov
sbb
push
cmp
movsl
and
test
inc
xchg
adc
add
aad
pop
xorl
jl
mov
or
scas
aam
repz
fistl
jmp
pushf
enter
insl
push
cmp
sbb
dec
xchg
in
xor
ret
xchg
test
scas
idivl
lods
ret
lods
bound
lret
repz
cmpsl
pop
les
cwtl
out
inc
mov
aas
or
xchg
mov
imul
jo
jp
xor
stos
fistpl
scas
dec
mov
fwait
pop
dec
inc
lahf
mov
int
push
or
lods
sub
lret
es
mov
cwtl
inc
push
imul
jge
ss
ljmp
cmp
shrb
cli
in
add
popf
inc
cmpsl
arpl
lret
add
das
sub
fcoms
cmp
ja
push
sahf
out
arpl
lds
testl
cmp
hlt
pop
cmpsl
loopne
out
xor
lds
shll
in
jmp
mov
mov
out
jae
or
mov
aam
mov
ds
fcmovb
dec
repz
lea
inc
add
cmpsl
inc
fisttpll
nop
insl
mov
adc
aaa
rorb
lcall
pop
lret
lahf
mov
shr
int3
icebp
outsb
xchg
xchg
es
inc
cmp
push
xchg
dec
jns
mov
inc
pop
inc
inc
jle,pn
arpl
stc
jmp
mov
mov
je
repz
cmp
mov
in
push
setge
add
xor
xor
pushf
push
lds
mov
mov
jae
scas
fldcw
movsl
test
and
and
mov
shll
mov
xchg
test
mov
xchg
mov
xchg
movsb
clc
mov
lods
jmp
pop
ss
xchg
rcrl
add
sbb
and
in
pushf
push
add
dec
sub
popa
cltd
fwait
pop
inc
push
add
int
aad
push
divb
movsb
mov
rorl
dec
out
test
mov
pop
mov
xor
in
push
into
test
js
in
pop
arpl
xchg
jns
push
jl
lahf
outsl
cmp
xor
push
push
fmull
arpl
aaa
aad
out
dec
insb
push
xchg
lods
dec
sarb
push
ljmp
jmp
cmpsb
fwait
push
imul
mov
pop
push
or
sti
orl
push
mov
mov
cli
add
mov
imul
sub
data16
xor
mov
inc
aaa
aaa
mov
fcmovnb
test
jl
push
pop
in
mov
or
push
jae
jmp
cmpsl
xor
jecxz
in
or
cmc
nop
jmp
lods
sbb
pusha
jge
mov
and
and
adcl
inc
mov
inc
mov
sub
jl
arpl
sub
xor
mov
inc
lret
cmp
pop
rolb
jne
arpl
sarb
cmp
push
add
repnz
dec
test
jns
or
xlat
test
jg
in
mov
aas
mov
adc
dec
ja
stos
xchg
sub
xchg
into
mov
xchg
arpl
leave
ds
in
pop
sbb
cmp
mov
add
out
and
inc
out
lar
rcll
inc
imul
shl
mov
ret
dec
stos
repz
ret
es
out
shrl
mov
mov
aas
push
or
inc
mov
in
push
pop
cld
and
xor
add
jg
jne
subl
push
sub
jmp
push
sub
das
int
popf
xor
mov
fdivs
ret
push
xor
xor
in
iret
sbb
icebp
cmpsb
adc
push
push
and
push
les
es
das
sub
sbb
loope
mov
xchg
mov
lock
xorl
cltd
cltd
jmp
sbb
mov
mov
push
nop
mov
jmp
xchg
shrb
mov
aad
jo
fisttpll
xchg
xor
out
cmp
jne
cmp
jecxz
in
adcl
sub
ror
cmp
xor
jae
shrb
mov
shlb
loope
mov
popf
call
std
fisttpll
jmp
dec
inc
push
test
mov
std
push
loopne
hlt
in
add
jmp
iret
xor
movsb
outsl
jl
add
icebp
iret
cltd
cld
in
push
cmpsl
enter
call
push
shr
in
aam
xor
jb
jmp
dec
mov
fs
jne
loope
push
out
fwait
dec
or
inc
adc
out
push
lret
lock
pop
js
out
sbb
dec
aas
mov
sub
shlb
daa
inc
ror
add
dec
cmc
add
adc
repnz
lret
dec
sbb
pop
xor
int
aaa
mov
ret
push
popa
cmp
daa
mov
rclb
lea
mov
dec
fwait
sbb
test
cmpsb
push
adc
testb
in
hlt
in
dec
lahf
xor
push
xor
lods
or
insl
std
or
add
dec
and
lcall
xlat
ja
cmp
inc
push
in
lods
notb
sbb
sbb
cmc
test
mov
sar
mov
ret
mov
xor
jo
test
mov
stos
shl
add
sti
jnp
mov
daa
stos
das
or
aam
inc
movsb
popf
xor
mov
aas
dec
repnz
bswap
push
push
jmp
stc
mov
and
fsubrp
adc
test
repnz
xor
insl
lods
mov
inc
pop
mov
xchg
jge
xchg
stc
rorl
dec
xchg
mov
add
add
outsl
pop
fwait
add
lahf
fpatan
xchg
sub
mov
lcall
andb
xor
hlt
imul
clc
jecxz
out
sbb
mov
fadds
sti
rorl
test
fistpll
cli
mov
mov
push
lahf
xchg
fnsave
cmp
loopne
lods
loope
fildl
out
jg
add
popf
sbb
into
shlb
cmp
outsl
outsb
rcr
nop
push
mov
jb
cmp
and
mov
pop
sahf
rclb
sbb
add
sub
sbb
mov
popa
negl
loope
mov
adc
ljmp
jns
mov
sub
leave
xchg
jb
jp
mov
xor
jnp
adc
into
insb
sbb
sarb
fisttpll
outsl
cwtl
lea
movsl
mov
mov
push
jecxz
sbb
pop
dec
push
xchg
out
ficoms
push
dec
and
mov
xchg
test
mov
jp
mov
adc
fcmovbe
mov
stos
sbbb
je
ds
testl
fdivp
push
sbb
in
mov
mov
fsubrs
aaa
ds
add
shrb
dec
sbb
clc
xor
xor
cmp
mov
push
adc
arpl
xor
jmp
test
add
dec
nop
inc
pushf
movsb
lods
inc
std
mov
mov
cli
repz
cs
fidivrl
lods
stos
data16
repz
add
xchg
loope
inc
lds
inc
pop
jne
mov
jne
mov
sbb
pop
mov
fiadds
sbb
rcl
lea
movsb
push
and
dec
hlt
xchg
mov
pop
std
dec
pop
subl
jbe
push
mov
bound
jo
jl
stc
add
add
or
sbb
out
mov
pop
inc
fsqrt
repnz
data16
xchg
add
mov
into
push
rcll
int3
lods
xchg
xchg
daa
outsb
cmp
in
pushl
inc
push
aas
je
aam
data16
adc
lods
and
loopne
shlb
sbb
outsb
push
xchg
add
jmp
shr
scas
xchg
fistpl
xor
pop
fisttps
shll
in
fsubrl
sub
in
pop
mov
shll
cld
fmull
outsl
je
jle
out
ret
jg
aaa
in
call
or
inc
pop
lds
fwait
or
push
insb
cs
or
es
add
mov
sbb
loopne,pt
adc
clc
in
jo
enter
cmp
andl
rcr
adc
add
xchg
mov
daa
fnstcw
mov
pop
repz
mov
sti
jmp
dec
cmp
xorl
flds
shr
sbb
lea
mov
mov
sub
add
iret
push
popa
mov
sahf
mov
scas
aaa
cmovns
dec
lcall
int
cmp
lret
iret
or
jbe
int
sub
aam
aas
dec
out
imul
push
sbb
dec
data16
xchg
and
std
dec
imul
mov
lcall
xlat
inc
inc
xor
cmpsl
adc
mov
popa
mov
add
push
cmpsl
lcall
xchg
xor
out
sbb
fisubs
inc
ja
pop
xchg
mull
mov
mov
lods
stos
aad
sub
mov
int
andb
adc
and
push
jl
adc
push
stos
sbb
movhlps
sbb
lea
test
ret
mov
mov
dec
adc
cmp
mov
ds
sbb
stc
rorb
sub
inc
and
aad
xchg
out
sub
inc
cmp
dec
dec
outsb
inc
and
pop
jbe
and
xchg
andl
jb
xor
xor
or
push
mov
dec
fcmovbe
add
jp
dec
icebp
sbbb
into
lods
sbb
cli
aas
jne
ss
push
mov
sbb
push
jo
push
jb
in
add
dec
jae
push
sarb
mov
and
cmpsl
mov
fistpll
pop
cmp
sbb
jg
and
imul
icebp
stos
push
test
nop
xchg
fsubrl
jg
add
leave
mov
dec
movsl
aad
push
dec
pop
test
movsl
and
push
rorb
adc
or
clc
add
dec
adc
sahf
out
pushf
imul
idivb
dec
xor
mov
sub
pop
inc
jbe
pop
cld
dec
imul
inc
ret
movsb
and
pop
push
cld
outsb
lea
jp
sub
pop
adc
inc
mov
fbstp
gs
mov
aam
mov
pop
inc
popf
ss
or
call
arpl
dec
pop
mov
push
jnp
push
xor
inc
mov
loope
and
and
or
pop
int3
push
pop
aad
shll
cmc
fsubl
cmpsb
mov
in
jle
ret
cmc
dec
shl
xor
cwtl
cltd
insl
or
sub
xchg
es
shll
cmp
lahf
dec
and
data16
adc
mov
push
cs
out
add
jns
cmc
dec
mov
sub
jle
dec
push
pushf
jmp
fidivrs
pop
mov
lock
imul
jge
adc
flds
sub
and
pop
push
int3
fldln2
sbb
repz
mov
mov
incl
jo
ja
cmp
out
mov
in
sbb
stc
adc
adc
add
fldenv
mov
pop
cmp
fsubrl
or
jbe
push
jno
scas
out
fcoml
cmc
mov
stos
mov
test
stos
sub
stos
out
pop
mov
clc
push
sub
push
lods
xchg
pop
fcomps
add
xchg
pop
ss
out
xchg
lea
out
pop
jecxz
mov
jl
cmp
dec
and
nop
pcmpgtd
pop
xchg
sahf
inc
mov
mov
int
loop
loope
push
mov
lods
adc
pusha
cmp
mov
mov
cltd
cmpl
shr
in
cmp
cmp
xchg
insb
das
xor
sub
and
inc
push
stos
orb
xchg
movlps
cs
es
sub
test
push
lahf
fcoml
ds
add
int
mov
adc
mov
xchg
cltd
dec
iret
push
inc
in
mov
cmp
test
mov
mov
inc
sbb
pop
push
pushw
pop
mov
mov
lahf
xor
adcl
xor
jecxz
pusha
enter
push
imul
popf
inc
movsb
out
je
add
stos
inc
fisubl
lcall
loope
cmc
movsb
mov
scas
vmread
int3
cs
mov
stos
mov
xchg
lret
imul
xor
sbb
pop
stc
imul
push
dec
lock
dec
sbb
pop
or
sar
int3
data16
fldl
mov
adc
inc
ljmp
push
movsb
daa
lret
cwtl
in
int
jbe
inc
adc
lods
sub
rclb
xorl
mov
inc
xor
and
lock
adcb
and
cmp
cmp
inc
pop
rorb
or
stc
lods
out
jo
lock
dec
jl
mov
mov
cmp
loop
push
outsl
faddl
les
stos
orb
cmp
or
add
into
test
dec
adc
scas
movsb
pop
fsubrs
clc
adc
mov
sbb
push
dec
scas
outsb
add
mov
mov
loop
pop
mov
sbb
add
fwait
or
pop
xchg
add
pop
push
cmp
xor
cwtl
mov
shll
cltd
mov
dec
out
push
mov
call
adc
pop
arpl
push
xchg
push
out
mov
sbb
adc
out
jl
ljmp
sub
je
js
out
or
cmc
jnp
movl
jae
or
mov
dec
xchg
xor
and
aas
in
adc
sub
mov
cmpsb
add
pop
or
fdivrl
cld
add
outsl
xlat
mov
cmpsl
ds
or
lea
in
aaa
adc
sbb
daa
xchg
ret
jno
xlat
pushf
stos
lret
xlat
inc
leave
ljmp
adc
idivl
mov
in
imul
jo
sahf
or
popf
mov
inc
hlt
push
jb
inc
rcrl
adc
gs
push
sub
cld
fs
rcrb
orb
sub
dec
mov
cmpsl
cmp
out
pusha
jns
cmp
popa
push
js
xor
pop
jo
repnz
int
daa
jmp
xchg
nop
test
push
outsl
push
outsl
mov
mov
cmc
fisubl
push
cmpsl
rcl
mov
iret
jp
cmp
pusha
sbb
mov
idivl
shrb
adc
sub
inc
cmp
out
lcall
daa
jnp
push
outsb
in
arpl
out
pop
popa
and
mov
sub
fstp
clc
clc
mov
fisubrl
cmpsl
push
subl
push
sarl
jb
push
lret
cs
ds
pop
aad
cli
lret
repz
cwtl
stos
add
js
lretw
lods
or
jmp
add
je
ret
ds
inc
js
sub
test
int
jns
mov
arpl
jae
dec
pushf
arpl
and
sarl
dec
out
leave
add
fmuls
sub
push
popf
shll
test
mov
filds
inc
dec
dec
adc
sbb
push
xor
aas
xor
push
fisttpl
mov
lcall
pop
sarl
scas
add
dec
std
xor
arpl
mov
aas
int
daa
push
xchg
gs
pop
jo
pop
cmp
cmp
js
leave
fwait
inc
imul
jl
mov
es
dec
mov
aam
and
xchg
mov
adc
adc
jl
fs
pusha
pop
lds
lcall
insb
mov
fucomip
inc
mov
sbb
sub
stos
enter
add
int3
sti
out
jns
push
lcall
push
push
scas
dec
leave
dec
jmp
cltd
jns
std
dec
and
jb
fs
xorb
mov
loop
shll
add
adc
xor
mov
mov
inc
pop
cmp
and
xchg
push
mov
dec
pop
push
test
mov
dec
pusha
xor
test
inc
cmp
jnp
cmpsb
ret
test
jae
or
lret
xor
push
cltd
xor
out
in
mov
pop
ss
sub
push
or
inc
push
sbb
mov
fdivrs
movsb
in
mov
xor
push
sbb
mov
add
sti
jle
and
jnp
mov
or
mov
sbb
out
cld
push
cs
push
dec
sub
cmpsl
sbbb
scas
mov
jecxz
mov
lret
push
mov
stos
push
lods
lock
cmpsl
test
sbb
pop
jbe
adc
mov
cmc
xlat
lods
and
mov
js
or
inc
xor
push
loope
and
pop
or
icebp
aas
inc
pop
pop
dec
loop
call
sbb
cmp
outsb
push
cmp
test
mov
lds
outsl
stos
inc
lret
je
dec
mov
nop
mov
andl
pop
and
cmpl
add
std
adc
test
pop
ror
mov
lods
mov
movsl
stos
push
push
mov
xchg
imul
xor
add
std
push
xor
pop
push
out
addr16
xor
adc
inc
and
sub
fistl
and
mov
or
shr
bound
cmpsb
push
bound
fwait
sbb
outsb
mov
stos
cmp
jp
add
and
dec
in
push
mov
movsl
repnz
push
inc
dec
jecxz
ja
mov
loopne
jmp
xchg
push
gs
bound
sbb
jl
xor
mov
jnp
lret
cli
sbb
or
imul
lods
dec
out
dec
fldenv
fadd
mov
adc
out
or
int3
jg
scas
out
in
xchg
sbbb
frstor
cs
xchg
out
enter
fdivr
fisttps
pop
pop
mov
out
rcrl
mov
imul
or
icebp
rorb
push
jge
push
lcall
nop
xchg
pushf
pop
and
into
lahf
mov
pop
inc
inc
push
ret
mov
pop
or
dec
pop
pusha
mov
lea
cmp
mov
adc
pusha
ss
mov
into
xchg
movsl
lret
shll
mov
sub
jae
mov
cmp
push
mov
lret
sarb
ret
decb
stos
push
mov
in
das
sub
jg
mov
dec
and
jl
cmp
insl
cltd
leave
adcl
xor
pop
mov
inc
fstpt
xor
movsb
mov
cmp
scas
ja
leave
insl
jb
shrl
test
pop
fstpt
movsl
fnstcw
mov
cmp
mov
inc
mov
mov
add
arpl
mov
int
lahf
lret
cmc
lret
aam
sbb
or
jbe
pop
push
jo
jmp
bound
or
pop
out
xor
mov
inc
jecxz
out
mov
cmp
cli
and
es
pop
repnz
inc
lods
rolb
dec
int3
rcll
dec
call
inc
or
xchg
xchg
scas
sub
xlat
or
faddp
mov
jg
cmp
out
loop
in
add
popf
xchg
push
sub
sbbb
or
fisubrl
jo
mov
mov
mov
gs
lds
and
push
out
add
xchg
xlat
outsb
mov
rcrl
cmpsb
dec
pop
or
pusha
call
pop
mov
cmp
inc
imul
subl
dec
mov
or
sbb
stos
jno
cs
inc
incl
cmp
xor
push
js
cmpsl
xchg
pop
scas
ds
mov
das
inc
cltd
sahf
and
inc
inc
aad
xor
sbb
xchg
and
ficoml
data16
pop
int3
cmp
popf
arpl
fnstenv
inc
outsl
into
xlat
and
inc
mov
mov
add
iret
cs
sub
cmp
jno
and
test
pop
push
inc
cmp
aas
xchg
mov
push
cltd
push
add
test
mov
pop
push
adc
scas
shl
les
lahf
rorb
and
adc
rcrb
mov
or
in
jmp
dec
inc
pop
xchg
cwtl
add
ret
cld
pop
pop
or
movb
dec
lods
mov
and
jmp
inc
in
sbb
xchg
dec
jb
add
iret
or
data16
popf
fnstcw
and
xlat
sbb
cltd
and
cli
movsb
pusha
and
or
sub
roll
sahf
rorl
jns
fwait
hlt
gs
xorb
adc
push
xchg
stos
sbb
cs
jmp
push
jmp
xchg
mull
xchg
lea
out
into
pop
mov
xor
stos
fdivrl
add
ja
adc
movsb
fs
mov
jle
insb
push
leave
imul
gs
mov
sbb
orb
enter
sub
movsl
bound
jbe
xor
or
cltd
inc
sub
push
imul
mov
mov
cmp
xor
lds
outsb
push
test
les
mov
loop
clc
mov
cltd
add
cli
inc
neg
pop
ret
push
insl
test
inc
push
push
jno
negl
cld
lds
xchg
test
scas
jg
jae
rcll
add
sbb
gs
out
cld
pop
xchg
xor
mov
mov
and
jns
fabs
negl
push
sbb
decb
push
mov
xlat
sbb
jg
iret
mov
push
lahf
adc
inc
inc
push
jecxz
mov
loopne
pop
int3
inc
push
ficomps
addr16
dec
pop
and
inc
ret
outsl
dec
mov
negl
leave
mov
rcr
mov
scas
xor
push
mov
icebp
fs
pop
mov
aam
cmpsl
repnz
lds
or
mov
ret
fldenv
incb
jge
pop
call
shll
aas
shll
gs
xor
pop
cmp
shll
sbb
add
mov
push
pop
mov
mov
mov
js
mov
xchg
outsl
scas
mov
mov
cltd
mov
mov
cmp
ljmp
loope
aaa
xor
push
sbb
sub
adc
add
xor
dec
xchg
push
les
xlat
loope
test
pusha
cmpsb
jo
mov
shrb
mov
int3
pop
mov
xchg
ja
mov
loop
jl
mov
movsb
sti
sub
dec
push
cmpsb
sub
or
push
subps
outsb
insl
push
push
inc
arpl
mov
outsl
filds
lock
and
das
data16
je
sub
jne
xchg
int3
je
sbb
pop
insb
scas
inc
jno
idivb
enter
arpl
cmpsb
mov
fsub
push
or
ret
cmpsb
xchg
fildl
push
xor
das
call
mov
mov
mov
outsb
mov
inc
inc
jb
lret
jle
lock
lret
sbb
push
out
push
push
call
jmp
xor
aad
inc
or
ljmp
mov
add
test
sti
xlat
rorb
movsb
outsb
enter
test
loop
mov
pop
je
mov
mov
leave
pop
rcrb
mov
scas
pop
sub
sbb
int
adcb
stc
inc
push
pop
jp
fiaddl
jge
ljmp
sub
mov
adc
sbb
sub
iret
test
jp
sub
cmp
lcall
push
dec
mov
jne
xor
insl
movsl
xchg
adc
push
jp
inc
ficomps
inc
push
std
push
aad
pushf
mov
mov
scas
mov
sahf
insl
push
test
mov
call
mov
dec
dec
repnz
mov
push
repnz
xlat
lods
adcb
xchg
sbb
xchg
and
jnp
jecxz
sub
cmp
mov
jb
arpl
insb
dec
dec
pop
adc
ljmp
adc
cli
pop
rcrb
add
out
mov
sub
cltd
idivl
fwait
repnz
sbb
pop
push
pop
sahf
sarl
cmc
dec
xor
jle
mov
mov
sbb
mov
jnp
push
stos
cmp
hlt
lods
clc
adc
jl
xchg
pop
sub
fucom
insb
loopne
mov
mov
and
insl
lret
or
and
scas
mov
sub
int3
test
push
lcall
fstpl
into
fdivrl
push
test
js
ja
outsl
insl
loopne
jne
sub
bound
jle
fldt
into
dec
pop
pop
imul
dec
lret
popa
out
ret
outsl
xlat
xor
ljmp
push
pop
lea
add
lds
inc
pop
lahf
mov
test
leave
insl
inc
push
inc
xor
sub
and
xor
sbb
mov
xor
fistpll
mov
cmp
cmp
rcll
mov
jge
inc
data16
cmpsl
mov
lcallw
int
inc
jno
inc
movsb
adc
sub
add
sahf
orl
shrb
sub
loop
push
adc
jmp
out
daa
lmsw
repnz
mov
or
push
orl
sbb
xchg
je
xchg
cmp
cmp
mov
xchg
int3
jmp
pusha
inc
add
dec
dec
lea
cltd
push
sti
mov
inc
pushf
dec
xlat
xchg
js
mov
lods
sbb
adc
dec
add
packsswb
mov
popf
test
xor
sub
movsl
xchg
sarb
into
cs
enter
roll
add
into
jp
sahf
mov
inc
and
into
int3
adc
lret
adc
incb
enter
mov
jae
sbb
cmp
loop
cmp
jo
or
cmc
inc
stos
push
clc
sbb
ljmp
dec
jge
or
mov
pop
mov
push
popf
and
out
sub
mov
cmp
rorl
shrl
int
jno
popf
mov
pop
mov
pop
ret
aaa
or
mov
pusha
push
push
xchg
jecxz
fxch
mov
test
fsubrl
fists
push
sbbb
jl
xor
pop
push
xor
movsb
sub
xchg
or
jae
sub
sub
adc
mov
lahf
and
clc
xor
mov
push
dec
push
enter
xor
scas
cli
adc
xlat
pop
scas
mov
sbb
push
xchg
mov
add
daa
and
imul
push
mov
test
mov
xor
add
push
pop
mov
push
out
cmp
sbb
jns
stc
adc
hlt
jge
mov
dec
pop
jns
dec
outsl
mov
popf
test
sbb
and
enter
cmpsb
jne
pop
jbe
adc
test
dec
notrack
pop
out
dec
push
mov
jp
push
ficoms
je
sbb
js
stc
stos
cmp
lods
jbe
sarl
xchg
fwait
mov
leave
mov
cmc
dec
popa
xchg
mov
pusha
mov
mov
es
add
xchg
roll
stc
cmp
test
mov
jns
inc
loopne
ljmp
mov
push
inc
mov
mov
sub
test
pop
lds
mov
mov
push
jo
jnp
jle
or
or
add
xor
xor
push
jl
jb
in
dec
pop
jns
xchg
adc
mov
out
inc
dec
mov
je
xchg
push
sahf
xchg
sbbl
pushf
movsl
mov
les
popa
inc
dec
sub
xor
hlt
adc
mov
or
xor
add
call
push
repnz
stos
xchg
cmc
push
inc
sti
add
hlt
pusha
daa
jg
push
jp
ret
jp
hlt
test
hlt
mov
dec
mov
xor
jnp
mov
push
fldt
test
testl
and
jae
mov
adc
mov
in
pop
sbb
cmp
out
lahf
mov
mov
jns
cmp
xchg
mov
xchg
xchg
movsb
jmp
ret
in
in
jae
pop
cwtl
pushf
sbb
loop
xor
rolb
fstl
pop
popa
jnp
jnp
push
inc
push
test
outsl
loop
stc
pop
dec
mov
pop
fwait
mov
mov
pop
dec
mov
ret
mov
mov
jno
or
add
or
push
negl
mov
das
hlt
sub
cltd
stos
int3
out
pop
xor
enter
mov
addr16
ret
aam
imul
subb
or
fsub
in
arpl
mov
inc
dec
and
lods
jge
lock
adc
sub
or
sbb
lods
push
stc
fwait
sbb
or
and
call
rcrb
adc
mov
scas
pop
icebp
sbb
jb
insb
mov
das
mov
pop
adc
bound
xor
add
xchg
xchg
stos
pop
mov
sbb
int
xchg
insb
sub
int
ret
lcall
add
pop
sti
repnz
andl
fs
adc
inc
dec
out
sbb
stc
mov
nop
fs
mov
ret
pushf
pop
cmp
xor
push
jno
pusha
mov
in
dec
pop
xchg
jmp
arpl
pusha
lods
je
test
lret
stos
xchg
push
dec
imul
cwtl
lahf
mov
mov
inc
jnp
or
outsl
xor
dec
inc
in
sbb
outsb
cs
shlb
loopne
cmp
jne
clc
xchg
jb
xchg
adc
cltd
int3
outsb
xchg
xchg
lret
xor
jmp
xlat
jle
mov
push
call
xchg
jecxz
shl
jne
inc
out
aam
shrl
xor
stos
test
and
inc
repz
pop
inc
jo
test
xor
xor
aad
sbb
fwait
push
pop
cli
dec
cmp
add
push
mov
sbb
js
mov
add
fisttpl
out
clc
enter
mov
sub
jecxz
xchg
ss
pop
cli
pop
jae
cmp
xor
xchg
push
push
lahf
or
jmp
shrb
lahf
fdivl
pop
pop
cmp
mov
jle
or
cmp
call
ret
xor
inc
mov
add
xor
sbb
add
mov
sub
and
shll
cmpsb
stc
lcall
dec
das
sbb
and
or
add
sti
lea
push
cmp
jecxz
dec
cmp
js
aam
mov
lret
dec
aad
movsl
add
cmp
pop
fstpl
dec
icebp
cmpsb
mov
cli
dec
shll
add
mov
mov
sbb
mov
jnp
cmp
mov
lahf
jb
hlt
cld
mov
test
add
sbb
xchg
ret
jb
pop
pop
jns
adc
inc
fs
addr16
cmpsb
scas
jge
insb
mov
fistpll
imul
add
pop
push
push
xchg
out
in
ljmp
xchg
inc
fidivrl
push
jge
pop
xlat
dec
les
rcrl
pop
mov
popf
mov
inc
pop
adc
into
cmp
out
jno
inc
lcall
imul
lea
lods
mov
adc
shll
inc
sub
sub
or
xchg
lret
pop
lret
sub
aam
push
std
movsl
push
dec
sub
repnz
in
jae
lock
outsb
xchg
inc
loope
bound
dec
lret
jne
out
stc
les
add
int
addr16
shrd
and
xchg
and
jae
popf
mov
sbb
push
int3
aas
mov
cmpsb
out
mov
and
out
mov
cltd
push
inc
cmp
sbb
mov
in
sub
andb
test
mov
dec
scas
cmp
insl
ljmp
pushf
push
push
push
stos
jbe
daa
add
andl
pop
icebp
scas
lea
std
lret
mov
fmuls
xchg
ss
xchg
xchg
aad
les
lahf
mov
pop
or
jle
mov
sbb
add
daa
loop
add
test
insl
scas
insb
and
iret
in
cmp
in
clc
jecxz
js
in
rclb
fnstcw
and
jmp
sbb
aam
or
scas
shlb
or
out
ret
cmp
jl
sub
mov
lret
mov
je
lds
mov
dec
cmp
addb
add
fdivrs
inc
ss
sbb
xor
add
or
mov
mov
push
xor
out
adc
jmp
addr16
jb
hlt
pusha
or
jnp
lds
mov
dec
out
dec
or
fists
sbb
xchg
cmpsb
xor
test
xchg
enter
mov
jl
pop
test
std
sub
inc
inc
pop
das
xchg
jns
loopne
pop
adc
cli
sbb
fsubr
lock
and
mov
push
lock
sbb
push
lea
les
push
and
or
insb
sbb
movsl
int
pop
jmp
jbe
adc
dec
in
repnz
mov
xor
push
adc
mov
pop
push
repnz
dec
pop
or
xchg
gs
sub
add
call
lds
add
xchg
imul
jbe
cmp
jbe
fstpt
or
aam
adc
lods
aas
cmc
lahf
and
das
mov
lods
mov
xchg
sbb
in
cs
and
in
test
mov
outsb
test
add
jge
das
loope
mov
repnz
pop
add
cli
mov
and
and
outsl
aaa
mov
pop
jle
pop
pop
pop
jne
mov
hlt
mov
loope
xchg
mov
outsl
sahf
arpl
push
pop
in
shr
ljmp
clc
mov
sbb
cld
int
mov
in
xor
mov
jecxz
repnz
sub
fcomi
xchg
cmp
adc
lods
stos
sub
jp
imul
ror
push
and
enter
xor
loopne
and
push
mov
filds
lret
dec
xchg
dec
xor
cltd
adc
mov
jmp
jmp
and
ds
and
xor
xchg
subb
idivb
xchg
pop
add
pop
repnz
dec
fcmovnbe
stc
or
cmp
idivb
insl
sub
add
call
mov
ljmp
sbb
push
divl
and
cli
int
rcrl
xor
jnp
aaa
mov
add
mul
mov
jno
sbb
shlb
cmc
mov
daa
and
sbb
fdivl
ret
mov
outsb
xchg
adc
xor
fstl
popf
push
adcl
inc
aaa
das
mov
nop
inc
inc
out
stos
inc
test
es
push
cmpsb
test
xchg
adc
and
out
pandn
jecxz
outsl
rorl
repz
lock
pop
dec
mov
addl
js
xchg
lea
mov
inc
test
imul
sarb
dec
test
mov
enter
push
jge
enter
xor
mov
scas
enter
das
or
aaa
mov
arpl
add
inc
xchg
scas
popf
outsl
imul
mov
stos
push
push
adc
mulb
cmpsb
testb
add
dec
imul
cmp
cmp
and
ror
test
in
or
pop
mov
jo
mov
push
mov
sbb
inc
movl
enter
pop
arpl
sti
daa
stc
jl
daa
pop
scas
mov
out
in
add
lods
sub
cmpsl
jbe
sahf
and
fdivl
mov
popa
or
ja
iret
or
push
push
test
pusha
mov
imul
sbb
loopne
repnz
add
xlat
jl
sub
mov
and
arpl
jnp
mov
fcomps
fcomip
enter
clc
cs
les
inc
repnz
xor
pop
fs
outsb
xorb
arpl
and
xor
cltd
pop
sahf
and
test
fucomp
mov
insl
mov
inc
jnp
adc
js
mov
cmp
pusha
test
pusha
sub
shll
sub
fisubrs
xchg
xlat
push
mov
sar
cmp
test
adcb
mov
sub
push
loopne
mov
add
lods
insl
cmp
jmp
push
mov
mov
andl
jge
sub
cli
lods
je
mov
xor
js
gs
std
jp
push
adc
mov
lret
mov
sub
pop
lea
test
into
pop
and
sti
inc
cmpsb
push
xor
jp
inc
push
test
cs
call
lods
fildll
adc
pop
pop
mov
pop
test
and
out
pop
sbb
jecxz
orb
faddl
icebp
cmp
in
and
sub
mov
out
fcompl
outsb
scas
fldl
js
cltd
and
xchg
shll
shll
and
mov
push
mov
cmc
dec
xor
lcall
rclb
or
pop
cld
ficoml
movsb
ds
not
xchg
bnd
mov
mov
pop
xor
mov
mov
or
push
inc
mov
mov
inc
movsb
fprem1
or
push
roll
and
into
lods
ljmp
xchg
call
shrb
mov
lret
ss
mov
arpl
cmpsb
add
dec
xchg
es
sub
jae
jl
sbb
movsl
daa
sbb
pop
sbb
mov
arpl
ljmp
cmc
test
or
lods
movsb
inc
cwtl
insl
imul
imul
clc
inc
fcmove
insb
fisttpll
mov
xor
cmp
jns
or
pushf
loope
std
push
push
lods
add
insb
xor
mov
sahf
test
dec
mov
adc
inc
mov
adc
aad
inc
aas
jo
sbb
lcall
xor
xchg
xchg
fcmove
jb
fldenv
cmp
jnp
dec
jg
or
adc
scas
call
les
je
nop
jb
pop
lcall
loope
push
dec
xlat
outsl
fwait
les
pop
mov
cmpsb
fsubrl
bound
rolb
imul
jbe
xchg
push
sub
aas
or
stc
cmpsl
adc
repnz
pop
pop
fnstenv
adc
sbb
das
test
xchg
sub
cli
enter
mov
adc
push
xor
add
fbld
cld
jmp
push
icebp
insl
ds
test
push
pop
out
push
les
adc
mov
repz
mov
cmc
fwait
cmp
push
mov
add
ljmp
loope
push
mov
xchg
jmp
arpl
scas
and
movsl
cmp
lock
sub
mov
pop
mov
in
push
rcll
push
jmp
add
cmpsb
xor
jecxz
sub
mov
rcll
sub
inc
scas
mov
pusha
fdiv
test
cmp
inc
loop
data16
jns
push
out
adc
mov
jle
bound
fiadds
dec
call
mov
dec
add
dec
inc
add
push
loop
lods
mov
xor
dec
xlat
lock
mov
jne
mov
cmp
mov
mov
sahf
mov
fsts
push
or
cwtl
sbb
shl
mov
data16
dec
xchg
jmp
test
lods
sbbb
test
pop
rcll
mov
pop
gs
insb
pop
test
sub
out
pop
jmp
cmp
and
mov
aam
mov
cmp
xchg
xchg
adc
push
daa
imul
aam
mov
xchg
adc
int
fiadds
int3
and
ficoml
or
lock
imul
and
cmp
push
adc
mov
and
mov
dec
adc
lahf
lods
mov
or
mov
push
out
ficomps
push
inc
pop
push
addl
xchg
jnp
sub
js
imul
call
push
aam
sub
pop
sarl
jno
mov
lcall
pusha
gs
jg
push
inc
fisttpll
cmp
fdiv
pushf
sbbb
stos
dec
std
cmp
sub
imul
push
mov
jne
pop
sbb
adc
test
jb
inc
loopne
icebp
pop
or
mov
fstl
adc
into
sbb
sub
stos
in
xor
push
cli
or
fs
mov
nop
sub
pop
gs
pusha
and
fcoms
pushf
push
pop
push
sti
imul
or
xor
in
fisttps
push
add
push
hlt
addr16
push
and
or
int3
int
cmp
sahf
adc
cmp
cli
sbb
test
mov
rcr
loope
outsl
or
push
and
jmp
icebp
and
cmp
in
mov
lcall
imul
divl
fnstcw
jb
cmpsl
or
adc
mov
hlt
sub
clc
pop
and
test
cmp
fistpll
inc
xchg
pushf
lods
ret
cmp
pop
js
in
or
add
mov
int3
pop
add
pop
lds
sub
jge
mov
cs
jne
ret
stos
in
test
mov
arpl
pushf
xor
clc
loope
es
xor
popa
loopne
addr16
call
retw
cmp
mov
mov
mov
or
cltd
cld
or
out
add
inc
int3
and
pop
xor
fstps
sub
dec
jns
xlat
mov
cmc
inc
mov
inc
test
cmpsb
int
xchg
lock
mov
push
jmp
clc
rcr
lahf
adc
jno
mov
lds
std
add
les
es
push
insb
pop
or
popf
aaa
xchg
pop
loop
fnsave
lret
cld
adc
dec
dec
dec
jo
in
and
pushf
mov
pop
jno
ds
pop
insl
bound
xor
scas
test
into
push
pusha
inc
xor
pop
xchg
lock
loopne
jae
push
sbb
insb
dec
jnp
sbb
cmp
mov
or
les
stos
jmp
pop
mov
pop
push
xchg
scas
mov
inc
jecxz
pop
aas
sbb
dec
add
adc
shl
sti
sbb
sbb
fidivrl
jmp
xchg
cmp
bound
lods
enter
dec
jle
jae
and
mov
shl
sbb
mov
add
mov
jne
imulb
push
cmp
rcl
cwtl
jns
mov
lcall
and
out
pop
cmc
or
mov
sbb
or
shrl
movsb
cmp
fisubrs
jg
mov
pop
pop
ret
and
clc
push
mov
shlb
add
and
cmpsb
push
inc
test
sub
popf
pop
in
push
cmp
cltd
or
imulb
scas
and
ja
sbb
stos
gs
call
aam
nop
les
push
popf
lahf
arpl
repnz
add
lods
mov
sub
pop
sahf
mov
push
push
mov
mov
inc
and
out
repnz
jbe
mov
sbb
push
mov
or
xor
inc
pop
push
ret
mov
or
mov
sbb
sbb
push
and
add
jbe
dec
stos
data16
sarb
mov
psrad
jbe
out
pop
orb
and
cld
pop
stos
popa
mov
sub
xor
push
xor
clc
mov
jo
out
push
scas
mov
data16
jecxz
pop
push
cmp
movsl
loop
into
lret
pop
push
aaa
pop
lret
mov
pop
fistpll
jecxz
cmp
jp
fstps
out
mov
sarl
cmp
mov
and
mov
lock
xchg
pop
mov
stos
shrb
dec
clc
popa
jecxz
hlt
sub
sbbl
fistl
push
xchg
mov
aas
jp
cmp
fndisi(8087
xor
stos
mov
pop
repz
cmp
xor
cli
fldenv
into
out
sbb
mov
dec
cmpsl
aad
in
testl
add
scas
pop
imul
orb
fs
mov
movsb
insb
mov
push
lret
mov
inc
push
roll
xchg
sti
out
movsl
pop
sub
popf
push
xor
push
fldcw
xor
inc
into
outsl
pop
std
scas
insl
std
adc
cltd
and
fwait
or
rcll
jb
or
testb
stos
sbbb
sbb
inc
je
cmp
inc
mov
and
arpl
xchg
mov
push
xchg
or
cwtl
pop
cs
xchg
push
adc
pop
sbb
jp
jge
mov
push
adc
out
das
sub
rcll
hlt
push
test
sub
lds
or
cmc
jo
scas
jb
jbe
sbb
cltd
cmp
and
rcrl
sub
scas
mov
or
mov
imul
push
sub
xchg
out
insb
jecxz
jo
adc
aam
out
aam
mov
mov
xor
stos
mov
push
or
movsl
dec
mov
fisubrl
in
int
test
mov
mov
and
or
add
icebp
pop
sub
pop
js
xor
xchg
stos
lock
push
sub
push
les
arpl
xor
fstp
xor
lret
jae
push
shlb
dec
add
in
fsts
loope
pop
xlat
dec
push
sarl
out
cmp
adc
pop
test
lds
add
xlat
inc
or
jae
aam
add
sbb
pop
loopne
lea
loopne
jae
sub
dec
inc
movsl
cwtl
lock
or
stos
lock
jnp
loopne
mov
test
mov
arpl
ret
fwait
test
push
inc
mov
sub
push
mov
mov
mov
xchg
movsl
fidivl
scas
decl
adc
je
jo
hlt
aad
fimull
add
rclb
xchg
bound
test
jl
popa
sti
push
in
sahf
shll
cmp
inc
cmpsl
in
xor
sub
repnz
mov
xor
push
test
mov
inc
not
push
ss
jns
sub
loop
outsb
out
push
std
in
dec
adc
inc
sar
adc
mov
inc
es
xchg
xlat
mov
fisttpl
push
xorl
cmp
lcall
es
in
imul
addr16
push
jmp
repnz
push
in
sbb
inc
sar
sbbb
inc
inc
jns
movsb
dec
das
pop
push
add
add
push
clc
mov
jecxz
shrl
fxtract
js
lcall
ljmp
jo
movsl
mov
enter
mov
mov
cltd
jno
xchg
imul
mov
enter
xchg
clc
sub
roll
fisttpll
lods
or
int3
jns
dec
aam
mov
xor
push
loop
fidivrl
icebp
xchg
add
int3
pop
enter
in
jp
push
lods
fdivs
dec
fwait
cmp
push
xchg
fbld
push
fldcw
mov
mov
adc
sbb
pop
loopw,pn
or
stos
cmp
xchg
icebp
xchg
imul
xchg
dec
sub
out
pop
cs
out
loop
push
pop
inc
int
xor
les
mov
cwtl
fildll
mov
je
dec
jno
movb
add
scas
inc
std
rorb
sbb
imul
inc
or
into
sbb
testl
cmp
out
xchg
es
pusha
lock
lock
mov
inc
sbb
fwait
adc
pusha
jecxz,pt
out
out
mov
inc
stc
int3
cmp
jg
lea
jle
lret
data16
inc
shlb
test
repnz
cmp
lahf
cmc
jecxz
rorl
xorl
iret
dec
xor
divb
in
jl
push
cmp
into
jle
out
mov
testb
jb
push
push
lock
sbb
mov
mov
movsl
sbb
cltd
mov
ss
je
or
inc
repnz
jp
mov
jecxz
cmpsb
enter
jno
gs
out
jns
xor
aam
and
cmp
inc
int
xor
cmc
sub
and
jbe
push
adc
imul
sub
sub
mov
and
dec
sub
or
push
lret
jle
push
mov
addr16
mov
push
mov
popa
mov
inc
lods
fcomps
xor
add
mov
repz
xor
sbb
push
inc
in
mov
stos
mov
jns
push
mov
mov
jae
mov
mov
stos
lret
leave
sarl
popf
mov
adc
or
stc
sbb
pop
int
cld
sub
inc
pop
aad
pop
ret
xor
cmp
xor
mov
hlt
fs
sti
out
dec
mov
out
sub
pop
in
xor
orb
mov
aaa
cmp
repnz
fistl
xchg
lock
ljmp
dec
cmp
mov
jne
mov
data16
push
cmp
daa
sbb
xlat
push
pop
addr16
fcomip
push
filds
testb
pop
inc
sbb
rorl
inc
push
clc
cld
sti
push
mov
daa
loop
shl
subl
sub
mov
dec
loopne
inc
sbb
jae
jmp
sbb
fnsave
fnstcw
mov
xchg
xchg
dec
push
xchg
xchg
add
out
lods
jae
jo
mov
mov
dec
or
mov
inc
loope
push
sub
dec
pop
cs
add
scas
sbb
push
in
or
lahf
fcoms
lret
dec
mov
dec
lahf
sub
add
xchg
scas
dec
jmp
stos
loope
test
scas
js
mov
imul
mov
ljmp
out
dec
jbe
popa
xor
sub
mov
cwtl
push
jne
inc
mov
sbb
mov
aad
mov
pop
or
mov
mov
dec
shl
fistpl
dec
push
mov
inc
xchg
arpl
inc
jmp
aaa
iret
insb
ret
imul
testb
stos
lods
outsl
mov
pop
loope
sub
mov
stc
insb
pop
lods
or
cmp
sbb
push
aas
mov
mov
leave
movsb
xlat
xchg
aaa
pop
jge
push
inc
adc
dec
pmulhw
jne
notb
enter
sub
clc
rcrb
xlat
insb
push
imul
adc
orl
cmpsl
iret
fadd
dec
jge
iret
jno
mov
loope
imul
jge
stos
xor
inc
jb
icebp
mov
ja
inc
jns
cmpsl
rorl
fs
nop
aas
jns
js
jp
adc
or
jmp
lock
xor
int
arpl
mov
cmpsl
pop
mov
test
fwait
cmpsb
sarl
sub
lcall
mov
sub
and
repnz
out
cmp
xchg
jne
mov
fwait
test
int
scas
push
mov
mov
clc
mov
cmpsb
mov
jns
mov
fdiv
sub
adc
jbe
test
hlt
imul
pop
repz
inc
inc
mov
mov
jnp
insb
lcall
push
loop
in
xlat
xchg
sub
insb
inc
mov
or
das
sub
cltd
and
inc
jle
fisttpll
cmc
sti
mov
call
push
fbstp
xchg
rolb
mov
dec
sbb
add
daa
mov
xchg
push
pusha
or
icebp
or
jne
fcos
jmp
adc
test
mov
xor
mov
pop
sub
adc
insl
mov
mov
mov
subl
mov
cmpsb
ljmp
ljmp
ret
std
stos
sub
mov
mull
mov
adc
adc
jge
ljmp
xor
dec
popa
lds
ss
dec
dec
iret
outsb
inc
into
cmc
ficoml
hlt
mov
jbe
cmp
add
ds
into
je
shrl
fcomip
ret
lods
add
inc
dec
in
rorl
cmp
pop
les
loope
inc
or
or
sbb
mov
subl
pusha
jle
fstps
and
inc
in
sub
jo
je
mov
loope
fidivs
add
mov
adc
lret
adc
test
lods
add
in
inc
adc
sbb
push
das
ret
jne
int
clc
shll
mov
repnz
jb
add
pusha
mov
mov
adc
cwtl
xchg
fisubl
shll
sub
outsl
pop
cmp
add
inc
outsb
andb
outsl
insl
nop
fildl
ja
dec
ficoml
fsts
mov
and
xchg
mov
lods
xchg
out
out
push
mov
mov
jp
inc
pop
dec
mov
mov
popa
pushf
out
cmp
fcmove
push
cmp
movsl
sub
insb
inc
mov
test
mov
dec
movsb
clc
in
in
mov
ret
mov
fidivl
test
and
cmc
arpl
xchg
mov
aam
repz
dec
push
aaa
adc
pop
fsubl
xor
daa
inc
and
xchg
aad
mov
js
inc
xchg
sti
mov
ja
cmp
mov
nop
sbb
int
ficompl
jbe
enter
outsb
xor
xchg
xor
leave
mov
jnp
sbb
mov
mov
push
dec
test
sub
jmp
nop
cmp
or
int
popf
and
orl
pop
clc
mov
pop
mov
popa
xor
inc
fwait
push
fsubrl
sbb
ja
mov
mov
sahf
or
inc
cmpsl
mov
imul
cmp
mov
es
mov
addr16
hlt
dec
lods
cli
outsb
xor
push
shr
mov
addl
sub
icebp
out
cld
ror
mov
pop
and
mov
jp
or
mov
mov
mov
loopne
or
sub
jno
popa
hlt
ja
jne
cmpsl
inc
mov
and
loopne
sbb
aas
outsl
sbb
sahf
leave
mov
cwtl
pop
sbb
movntq
jp
dec
popa
ss
popa
adc
pop
leave
outsb
add
and
push
dec
lods
mov
pop
dec
and
dec
adc
fsubs
add
dec
loope
bound
push
lea
jne
lods
lret
in
add
jno
jno
push
add
jecxz
push
and
loopne
ret
repz
push
popa
dec
mov
adc
insb
loop
cld
push
and
clc
jmp
adc
dec
mov
push
in
pop
ljmp
add
movsl
insb
imul
mov
movsb
dec
shll
call
popa
dec
call
add
jmp
xor
and
or
inc
push
test
in
cltd
decb
je
inc
movb
push
lret
dec
or
cmp
xlat
mov
push
jbe
out
mov
inc
push
push
scas
sub
mov
repnz
push
push
pop
mov
in
add
xor
leave
lcall
mov
jl
ljmp
in
mov
adc
sbb
and
enter
outsb
push
fadds
push
dec
cwtl
cmp
dec
mov
pop
adc
xchg
and
call
mov
add
cmc
cmpsb
mov
rcl
repnz
sub
push
inc
push
ds
pop
and
mov
mov
clc
std
out
int
or
inc
fcomps
gs
dec
push
aam
or
fwait
sbb
loope
xchg
fadd
enter
pop
ja
movsl
ret
test
movsb
call
pushf
mov
mov
pop
mov
test
push
fwait
cli
ja
jns
cmp
jb
in
popf
outsb
mov
addr16
pushf
jmp
negb
insl
sub
jb
fldt
loopne
pop
xchg
bound
out
sbb
xlat
adc
push
aad
stos
roll
hlt
out
push
stos
js
xor
aaa
je
pop
ret
stos
pusha
outsl
cmpsl
mov
mov
mov
loopne
leavew
scas
mov
pop
in
popf
mov
pop
sub
fwait
testl
push
loope
out
inc
mov
andb
sahf
seta
fstpl
mov
pop
push
push
sub
enter
int
mov
xchg
ljmp
lds
iret
sub
jmp
fs
add
test
nop
jo
in
dec
imul
outsb
add
add
push
shll
int
sahf
lds
mov
mov
pop
ret
js
sub
setbe
pushf
dec
test
imul
lcall
or
sub
or
lea
popf
cld
pop
xchg
xor
dec
push
addr16
jo
movsl
aad
aas
and
popa
push
lret
pop
adc
cmp
adc
nop
stc
rol
loope
es
cmc
mov
cmp
sbb
popa
pop
call
icebp
rorl
fsub
sub
mov
dec
xchg
addr16
pop
dec
sub
sub
push
dec
dec
popa
mov
jecxz
xchg
mov
dec
addr16
cmp
inc
sub
adc
mov
adc
xchg
sub
inc
add
add
cli
sbb
insl
and
cli
xchg
push
test
in
repnz
inc
pop
ret
xor
insl
and
mov
out
xor
jns
stc
dec
push
or
and
dec
mov
mov
bound
fnsave
mov
mov
pop
pop
and
cmp
fmull
sahf
add
pop
mull
push
imul
push
scas
adc
xchg
fs
jb
mov
xchg
dec
fidivl
mov
hlt
pop
push
stos
mov
jp
mov
push
movsl
in
out
aam
lea
fldenv
in
xchg
xchg
xchg
test
and
jmp
data16
hlt
scas
scas
out
push
loop
mov
movsl
rcll
shl
int
cmp
xchg
sbb
rorb
cmp
lods
inc
push
cmpsb
cmp
outsl
cmc
jnp
cs
add
arpl
add
push
jo
jecxz
pop
jp
movsb
or
mov
cmp
mov
mov
xor
lcall
outsl
out
stos
out
lahf
jp
call
outsb
dec
add
add
dec
cwtl
test
movsb
int3
les
shrb
int3
and
jno
daa
por
out
push
push
inc
negl
inc
adc
adc
cmp
iret
fidivrs
test
mov
push
dec
mov
xchg
pop
movsl
repnz
addb
jo
pop
jns
cli
test
arpl
fs
push
mov
add
les
pop
xchg
adcb
in
mov
inc
jne
pop
mov
data16
out
add
mov
adc
mov
or
pop
lret
jb
sub
call
xchg
shl
addr16
cwtl
bound
pop
push
jo
mov
icebp
out
pop
test
sbb
adc
inc
mov
or
add
insb
dec
hlt
mov
sbb
sub
dec
mov
cmp
unpcklps
or
inc
cmp
mov
or
pop
inc
lret
cwtl
pushf
loope
mov
sub
mov
jl
xchg
pop
cltd
inc
sub
cmpsb
subb
xchg
and
nop
sbbl
lret
and
and
je
mov
roll
or
daa
insb
movsb
mov
mov
repz
push
adc
stos
sti
mov
and
test
rol
ljmp
ret
stos
dec
mov
xrelease
nop
cmp
adc
and
add
iret
dec
xor
mov
cmpsl
sarb
lret
neg
cmpsl
in
jno
push
mov
outsl
jae
mov
sub
xchg
fs
cli
or
pop
jns
loope
push
dec
dec
sbb
mov
imul
rcrb
mov
mov
clc
clc
incl
adc
enter
shrb
push
mov
aam
sbb
and
xchg
xor
imul
and
xor
push
pop
xchg
repz
pop
pop
in
add
jo
loopne
call
in
adc
push
stos
adc
mov
outsb
sahf
xchg
loopne
push
das
lret
add
loope
ficomps
popl
mov
mov
xchg
pop
mov
xchg
adc
xchg
inc
and
ja
in
ror
movsl
lds
push
inc
sub
prefetcht1
sbb
inc
dec
push
inc
and
jg
xor
mul
insl
and
sbb
cltd
cmp
sbb
sub
in
rcrb
inc
pop
push
lds
inc
test
cmp
sub
mov
adc
sub
mov
insl
add
int
repnz
cwtl
cmp
and
jmp
pop
into
adc
out
jbe
jge
stc
push
outsl
pop
xchg
lcall
cmp
cmpsl
lock
ja
push
or
stos
call
jle
jne
cltd
jl
pop
jb
sub
push
scas
scas
jb
shrl
and
rol
adcl
fucom
call
bound
xchg
adc
sar
pusha
and
pop
fists
rcl
fs
sbb
xchg
adc
jb
or
dec
and
data16
xchg
mov
fldenv
xlat
bound
push
push
inc
mov
mov
lods
xchg
mov
pop
mov
pop
and
and
sbb
test
faddl
idivb
mov
rcrl
xor
movsb
mov
sar
leave
addr16
cltd
dec
xchg
jg
adc
xchg
popa
push
cmp
test
jno
cmp
mov
mov
fstps
rolb
jle
or
sti
mov
add
rcl
fildll
out
add
and
int3
sar
mov
add
gs
loope
inc
cmp
fidivrs
mov
push
outsb
adc
xor
stos
xchg
jecxz
mov
and
into
out
xorb
sub
ljmp
stos
sahf
es
cmp
xchg
sbb
adc
jbe
daa
je
rorb
loopne
dec
or
shlb
or
xlat
pavgb
movsl
call
sbb
push
idivb
inc
mov
cltd
into
sahf
add
daa
mulb
pop
cmpsb
nop
ss
mov
sub
and
add
lods
jne
std
mov
aas
xor
and
push
loope
push
pop
test
rolb
fadds
push
or
jb
lods
jb
inc
movsl
mov
cmpsb
xor
dec
mov
movzbl
mov
cli
pop
popf
fisubl
xor
scas
mov
jecxz
dec
int
and
or
jbe
imul
mov
xchg
cmc
inc
adc
sbb
das
rclb
adc
dec
outsl
sub
sub
xchg
das
mov
jg
mov
cmp
jno
push
loopne
in
jnp
sahf
xchg
jns
pop
xchg
inc
xor
jecxz
fiadds
popf
loopne
or
and
adc
fstps
push
fisttpll
mov
lods
push
ret
lods
imul
pop
into
inc
mov
push
clc
outsl
push
scas
sbb
into
add
xchg
int
adc
mov
or
mov
test
hlt
push
aad
fsts
inc
lcall
iret
sub
cld
xchg
mov
sbb
cmpsb
push
mov
das
sti
xor
and
lock
jl
shr
push
or
mov
mov
movsb
xchg
push
lahf
popf
and
rcrl
push
das
mov
dec
insb
push
inc
daa
test
fstps
in
cmp
mov
outsl
dec
mov
xchg
cmp
jo
xor
add
sbb
xchg
and
push
add
push
xor
lea
inc
mov
mov
outsb
cmp
out
mov
sahf
fcoms
xor
call
sbb
out
inc
mulb
push
pop
mov
dec
sbb
stc
pop
das
lds
enter
sub
mov
repz
addr16
repnz
add
sub
cmp
orb
addr16
adc
loope
aam
jbe
cmp
orl
lods
lea
int
fmuls
sbb
loope
adc
mov
icebp
push
mov
pusha
mov
adc
out
insl
mov
mov
cmc
push
int
cmpsb
jnp
daa
mov
jno
test
pop
mov
inc
das
out
pop
jbe
test
jle
jge
mov
xchg
repz
mov
pop
ret
xchg
imul
push
cmp
scas
inc
enter
mov
sub
rcl
das
scas
shlb
xchg
xorl
pop
adc
negl
dec
dec
mov
stc
sub
je
test
push
movsl
ljmp
push
push
insl
mov
fwait
fwait
dec
or
pop
pop
hlt
mov
push
cmp
incb
aas
pop
fwait
inc
fists
xchg
cmpsb
sub
mov
dec
mov
jo
and
lods
fcomps
int
mov
movsl
add
orl
loopne
push
leave
mov
test
sbb
addr16
adc
mov
cmpsb
add
out
cwtl
pop
sub
sub
pop
push
cmc
test
mov
call
push
cmp
pop
nop
int3
sub
mov
and
in
push
jp
push
or
lea
std
testl
int
add
test
push
push
sbb
xchg
icebp
dec
pop
mov
repnz
test
and
subb
aaa
filds
xchg
lahf
out
mov
inc
adc
jle
cmpsl
movsl
or
movsl
or
pushf
je
lods
jmp
mov
dec
pusha
mov
jno
inc
xor
cltd
ret
cmp
fisubrs
int
sub
mov
out
bound
push
push
out
fdiv
testl
inc
xchg
sbb
js
pop
ret
into
popf
andl
sbb
inc
lcall
int3
insl
movsl
push
push
jns
add
mov
inc
dec
pop
xor
and
cwtl
xor
cmp
inc
in
fisubrl
and
dec
or
mov
mov
push
loopne
push
adc
add
dec
xor
push
scas
lea
insb
lds
mov
lea
cmp
std
inc
loopne
jmp
and
in
xor
repnz
pop
cmc
pop
das
sbb
jle
inc
adc
jp
and
or
fdivl
cmp
mov
popa
inc
mov
jge
cltd
cs
stos
movsl
ret
or
bound
cltd
in
fildl
mov
push
push
inc
inc
mov
in
adc
loope
inc
insl
xor
or
inc
adc
sahf
mov
cltd
jmp
mov
dec
sti
push
xor
add
jl
mov
scas
enter
shll
cmpsl
and
cmpsb
lock
jns
cmp
scas
mov
pop
scas
cmp
inc
inc
sub
pop
hlt
mov
xor
mov
or
mov
mov
stos
mov
inc
cs
or
sub
fbld
mov
sub
jg
push
inc
mov
loop
test
unpcklps
imulb
mov
and
test
xor
xor
orb
jl
push
mov
inc
dec
mov
sub
inc
cltd
sub
out
mov
pop
andb
movsb
int
nop
mov
fwait
sbb
mov
mov
xchg
pushf
ror
leave
enter
and
popa
xor
adcb
outsb
adc
jp
je
test
xor
fwait
jne
bound
cmp
and
dec
and
daa
mov
pop
fdivl
clc
xor
and
dec
call
fdivl
xor
and
xchg
ja
mov
insl
push
jb
mov
stos
mov
dec
mov
jge
or
ret
add
into
stos
and
ficompl
sub
and
dec
sub
outsb
add
cmp
xchg
add
push
imul
adc
scas
insb
adc
mov
mov
mov
xor
out
push
pop
fs
mov
inc
dec
insl
mov
xchg
imul
scas
fldcw
push
dec
test
sub
test
daa
or
adc
sahf
sub
mov
les
jp
adc
mov
out
xchg
sub
leave
ja
xchg
mov
pop
pop
mov
mov
hlt
push
das
dec
mov
call
arpl
add
test
xchg
push
gs
xchg
sarl
xor
adc
xor
mov
in
jns
out
adcl
faddl
dec
movsl
movsl
push
sub
popf
xchg
call
fldcw
adc
mov
mov
xchg
fwait
jne
lret
push
and
inc
lret
cld
repz
pusha
dec
jecxz
cmc
or
xchg
mov
in
or
je
inc
test
cmp
shll
pushf
fmuls
or
jne
sahf
test
movsb
out
jmp
and
sbbb
inc
cwtl
les
sbb
mov
movb
push
push
data16
stos
jns
pop
sbb
mov
or
daa
pop
cmpsb
lds
jo
call
sbbb
push
loopne
push
ljmp
repz
xchg
pushf
xorl
adc
std
scas
cmp
out
test
int3
fucomip
out
rcrb
cwtl
mov
mov
mov
or
sub
fmuls
lods
dec
adc
sbb
jge
mov
pop
icebp
into
mov
jbe
nopl
mov
and
pushf
mov
xor
loopne
inc
dec
shll
inc
and
out
ja
rcr
and
sbb
jecxz
out
outsb
enter
or
mov
adc
sub
testl
adc
shlb
sti
or
lds
frstor
imul
push
adc
les
and
ror
mov
cmp
dec
ret
push
leave
mov
sbbl
pushf
xchg
or
jae
aas
cmpsb
ljmp
or
into
leave
fwait
lahf
mov
pushf
sbb
xchg
not
lret
es
ret
dec
out
ljmp
mov
add
pop
ja
cmc
lods
cmpsb
pop
inc
sbb
cmp
pop
push
int
jbe
or
xor
cwtl
mov
in
stc
shlb
int3
push
insl
mov
cli
mov
mov
das
mov
jne
or
adcb
sbbb
adc
push
in
mov
inc
decl
mov
push
nop
stos
adc
cmpsl
mov
ljmp
js
ss
in
lea
fisttps
jnp
or
mov
aam
jae
push
or
ljmp
and
cld
sbb
adc
push
in
int
and
arpl
and
aad
adc
inc
inc
mov
mov
lcall
insl
out
pop
jbe
cmpsb
add
xor
pop
leave
and
hlt
push
test
mov
cli
jb
jns
lods
jle
dec
fadd
add
lea
or
or
out
test
je
jb
push
test
mov
inc
out
add
pusha
or
add
adc
loopne
adc
push
cmp
fdivrs
mov
sarb
shrb
and
cld
xchg
or
outsb
jbe
mov
imul
test
stc
cltd
int
fidivrl
sub
and
pop
dec
mov
pop
cltd
in
arpl
in
jne
inc
sbb
data16
push
dec
xchg
sbbb
popf
adc
xor
out
roll
or
sub
jge
mov
in
lcall
sub
mov
push
add
dec
xor
dec
ljmp
mov
inc
mov
popf
shrb
mov
dec
add
test
xchg
sbb
xchg
negb
out
dec
frstor
aad
sub
lea
scas
addr16
cmp
add
jno
jno
jnp
je
sbb
pop
pop
xor
cmp
adc
fnstcw
and
mov
mov
xor
leave
jno
out
call
pop
loopne
and
push
dec
xchg
mov
and
jae
mov
cmpsb
xchg
jge
jno
jb
jg
and
xor
insb
inc
pop
ljmp
or
sub
sub
add
push
cmc
das
outsb
out
push
jl
out
icebp
cli
jecxz
ret
ljmp
movsb
push
jbe
push
jae
test
stc
and
pop
cmp
test
ss
dec
inc
ficompl
popf
sub
adc
movsb
call
mov
test
adc
shlb
out
pop
lds
mull
push
or
mov
push
mov
inc
lods
cmpsb
and
lods
mov
stc
push
jmp
sub
testl
data16
xorl
fnstenv
insb
mov
aaa
repz
mov
loope
pusha
xor
int3
inc
dec
jne
ret
jmp
rcrb
or
sbb
mov
add
jle
das
adc
push
push
mov
fsts
mov
mov
movsb
fwait
test
sbb
js
mov
popf
out
out
jmp
rolb
xchg
lret
ret
pop
inc
add
push
cmpl
xchg
cmp
cmp
push
jg
mov
gs
out
jns,pt
lods
cli
orb
fsubl
xchg
inc
daa
in
mov
fucomp
xchg
sbb
jns
xchg
lret
pop
pop
fimuls
faddl
xchg
xchg
das
in
mov
adc
mov
rcr
sti
std
mov
xchg
push
out
cwtl
mov
cltd
cmpsb
int
jge
add
mov
mov
fwait
or
out
sub
aad
test
in
fcomps
xchg
xchg
ret
add
push
test
fwait
push
call
sbb
mov
jae
into
and
cmpsl
and
fistps
mov
popa
mov
adc
insl
lods
fidivl
lds
popa
adc
push
rcll
pop
rcrb
fcoms
popf
and
cltd
and
loop
cmp
aad
mov
adc
addl
dec
xor
cltd
sbb
cmpsb
cltd
in
sbb
fdivrl
and
xor
adc
js
lods
das
lods
and
jne
fidivl
cmp
mov
xor
sbb
lret
mov
and
pop
push
bound
dec
gs
push
in
push
and
aam
in
inc
adc
sbb
cmpsb
mov
div
adcw
inc
and
lock
cmp
cmp
mov
punpckhdq
dec
in
jno
std
add
mov
outsb
xchg
daa
test
shlb
mov
mov
jne
inc
sub
les
pop
jg
sbb
sub
dec
push
pop
or
xlat
scas
inc
repnz
xchg
xchg
pop
push
push
inc
adc
pop
sub
jl
and
and
mov
out
push
sub
fwait
pop
mov
int3
cmp
cmc
jmp
mov
jnp
lock
xchg
aas
cmp
mov
dec
xor
test
rcl
or
mov
jns
and
rol
stc
push
cmc
adcb
mov
adc
cmp
loope
mov
mov
stc
and
jbe
fisubrl
cs
into
jle
jmp
negl
fsubs
sub
movsb
data16
scas
fnsave
add
lock
cmp
jmp
orb
out
ret
xorl
push
and
push
ss
add
jl
sbb
bnd
pusha
jbe
xchg
xchg
in
sub
shrb
add
mov
shr
mov
push
repz
je
pushf
or
cmpsb
mov
repnz
sub
pop
imul
lret
addr16
mov
sub
push
cwtl
sub
xor
jp
or
rorl
out
fildl
jmp
jecxz
es
sbb
mov
dec
leave
or
sub
or
jnp
xor
mov
enter
aaa
push
xor
push
xchg
mov
mov
xchg
mov
fistps
push
js
mov
mov
ficoms
add
sbbl
and
mov
fiadds
hlt
mov
enter
adc
sti
mov
loope
pushf
out
mov
adc
sahf
cmc
pop
fsubrs
dec
mov
add
add
outsb
fsubrs
pop
mov
jmp
pop
sarl
push
call
int3
mov
or
inc
cmp
nop
push
inc
xor
aaa
jns
cmp
je
mov
cmp
sub
in
gs
pusha
repz
jb
movsl
and
or
data16
cmp
lock
jmp
fcmovb
xchg
insb
fmul
inc
xlat
fidivl
cwtl
adc
shrb
fidivrs
test
xchg
out
jle
adc
cmpsl
jge
sbb
xor
cld
pop
push
in
mov
lods
sbb
jae
movsb
loope
pop
aad
inc
jbe
scas
dec
pop
mov
aaa
mov
cmc
in
xchg
pop
push
mov
idivl
xor
nop
outsl
jmp
daa
add
ret
xchg
cld
imul
notl
dec
push
cld
arpl
add
jbe
cmp
aaa
cmp
push
xchg
cmc
inc
adc
sub
out
inc
fidivl
ds
lcall
adc
sub
inc
cmp
push
adc
enter
jne
push
repnz
push
pop
mov
mov
adc
mov
data16
clc
fs
xor
or
cmpsl
fiaddl
in
add
mov
mov
xchg
jns
lea
shrb
sub
stos
pop
aad
sbb
filds
arpl
mov
adcl
mulb
push
add
ljmp
jbe
sub
adc
mov
and
inc
mov
add
push
rorb
popf
imul
jmp
imul
and
pop
mov
push
sub
test
jbe
jno
stos
add
push
lret
popf
cli
out
loop
mov
mov
negl
sbb
sbb
add
fdivrs
shr
je
shll
fmuls
xor
add
lret
loopne
xor
gs
lea
inc
adc
pop
cli
inc
push
mov
enter
mov
xchg
xor
das
test
pop
and
cmpsl
xchg
jecxz
adc
fmuls
movsl
xor
add
xchg
into
xchg
jp
jg
fisubrl
mov
lea
popa
dec
add
std
adc
mov
sub
hlt
in
add
dec
test
sahf
jb
es
mov
into
pop
adc
faddp
and
push
pop
xor
mov
loope
shl
fcmovu
dec
fisubl
xlat
ljmp
lods
popa
jnp
jecxz
jp
stos
dec
mov
icebp
data16
jns
push
mov
inc
inc
dec
scas
movsl
insl
movsl
jno
cmp
rolb
sahf
add
cmp
lcall
mov
and
orb
xchg
cld
xchg
scas
call
out
xchg
dec
mov
in
sbb
jb
mov
push
rcrb
syscall
add
mov
fdivl
fildl
jns
dec
outsb
adc
push
and
fsubs
in
dec
int
lds
xchg
and
push
imul
jne
dec
repnz
stos
pop
mov
add
leave
cmpsb
loop
in
ss
out
cmp
and
shl
jno
stos
and
sub
movsl
xchg
ja
aas
cmp
test
aam
xor
mov
dec
idiv
mov
repnz
and
xchg
sub
jbe
loopne
push
mov
jne
aad
xor
loope
mov
pop
mov
fs
es
mov
add
mov
or
shll
outsl
mov
lods
xor
pop
dec
push
sbbl
test
pusha
jg
aam
and
jne
lret
sbb
test
lret
sub
xchg
lcall
dec
popf
ficoml
cmp
scas
das
test
or
loopne
mov
data16
inc
ds
inc
imul
fs
xchg
adc
push
icebp
mov
les
stos
pop
mov
stos
lods
and
neg
out
adcb
call
les
cmp
ret
fdivrl
aaa
call
add
xchg
bound
fsubrs
jnp
sub
xor
mov
lcall
idivl
jl
divl
and
or
aas
notb
pop
push
jmp
dec
or
xor
lds
in
inc
fldl
jnp
shlb
and
adc
jl
adc
in
mov
jo
pop
inc
inc
test
jg
insl
dec
stos
cltd
jmp
inc
xchg
pop
psrld
push
cwtl
push
scas
stos
imul
push
push
arpl
adc
xor
nop
mov
cli
cmpl
pop
xor
pop
sub
aad
sbb
cld
mov
aaa
mov
or
mov
loope
insb
faddl
jle
inc
add
fadd
mov
jg
mov
ret
stos
fstl
cli
notb
adc
adc
inc
scas
and
sub
cmp
cltd
ss
jno
push
pop
icebp
popf
gs
data16
xchg
scas
mov
scas
sbb
adc
mov
pop
and
pop
clc
popa
cli
fwait
cmp
scas
movsl
sbb
and
lea
mov
xlat
lret
and
lock
inc
cmp
add
pop
xchg
and
test
sub
dec
idivb
adc
cmc
mov
ret
movsb
loopne
push
push
add
pop
sahf
popf
xchg
stc
jle
mov
add
jmp
hlt
xor
mov
push
aam
xchg
or
push
and
pop
mov
aad
les
push
stos
xor
lods
mov
mov
jae
fildll
push
or
sub
cli
movsl
xchg
aam
repz
jo,pt
cmp
iret
mov
rcrb
jg
xor
ret
popa
imulb
inc
sub
xor
roll
int3
adc
push
addr16
jns
jmp
xchg
mov
add
out
scas
and
sbb
ljmp
and
sub
aaa
mov
mov
cmp
xor
rcrl
xchg
shl
jns
scas
stc
lock
jb
insl
movsl
jo
push
into
inc
adc
pop
ds
popf
xchg
push
movsl
lret
stos
sub
addr16
sub
loop
call
outsb
movsl
jl
stc
jmp
adc
cltd
lcall
loopne
jge
in
sbb
lcall
loope
clc
out
xchg
mov
out
ss
pop
sub
aas
into
lods
add
add
xor
int
inc
lock
xchg
enter
sub
pminub
repnz
push
xchg
jg
pop
lret
fdivl
inc
add
mov
dec
mov
or
jns
add
inc
mov
out
or
je
dec
push
mov
dec
stos
int3
divb
mov
mov
dec
cmc
pop
rol
mov
jmp
mov
mov
dec
test
mov
mov
je
sub
je
ja
lock
hlt
push
insb
fdivrl
sub
fcmove
sub
cmp
pop
ret
and
rcrb
test
and
mov
lods
fwait
nop
adcb
sti
cmc
mov
js
stc
or
ret
jo
xor
or
mov
insl
mov
sbb
inc
inc
cmp
in
arpl
add
mov
dec
sub
std
jo
mov
add
pop
mov
sub
out
pop
jg
cmpsb
sarb
jo
fistps
or
addr16
dec
mov
jo
loopne
or
add
out
roll
mov
lods
mov
mov
nop
into
mov
mov
xor
mov
jl
pop
cwtl
pop
or
rcl
inc
dec
and
cltd
gs
cmpsb
sub
mov
enter
out
xor
jge
xchg
cmp
nop
ret
xchg
shlb
adc
out
rcr
xchg
jle
inc
or
loopne
shlb
xchg
cmp
fstpl
sbb
fcoms
shll
pop
mov
jnp
dec
movq
add
jecxz
pop
loope
lods
pop
int
ljmp
jbe
and
lahf
xor
sub
ja
loop,pt
fs
pop
jg
out
mov
lret
and
xchg
dec
pop
ljmp
xor
cmp
ret
fistl
push
int3
test
pop
pop
pop
mov
mov
adc
push
inc
test
fwait
push
in
pop
jnp
xor
pop
popa
iret
inc
push
pushf
xor
fidivrs
jmp
dec
jle
push
imul
jge
mov
add
inc
mov
in
rolb
leave
sub
call
decl
sahf
test
or
inc
xchg
mov
sub
xor
push
add
lock
jnp
lcall
inc
push
pop
pop
dec
xchg
pop
mov
push
cwtl
xchg
sbb
sbb
cs
repnz
jae
sahf
mov
cs
push
out
pushf
repnz
in
adc
jecxz
lods
pop
in
cmp
mov
dec
cwtl
scas
cld
faddl
vpshuflw
mov
or
sbb
adc
orl
scas
mov
mov
jne
test
cltd
out
leave
push
cmp
je
jecxz
testb
dec
ja
push
scas
pusha
xlat
mov
mov
aad
mov
cmp
inc
push
loop
xchg
rcll
aas
lods
call
int
push
out
pusha
sbb
pop
dec
mov
das
aaa
push
repnz
push
rep
add
repnz
sbb
mov
inc
pop
movsb
xchg
xlat
mov
add
mov
jg
mov
xchg
jg
ljmp
aaa
or
mov
filds
push
test
mov
cmpsl
lock
mov
and
mov
jne
call
gs
loope
and
dec
or
movsl
sub
pusha
sbb
call
popf
lds
jae
bound
xor
movsl
js
idiv
jl
aaa
mov
je
out
sbb
imull
mov
call
scas
mov
fldcw
jl
pop
adc
push
xor
lods
sub
andb
mov
repnz
mov
out
cltd
fcoms
pop
imul
adc
mov
lds
push
mov
hlt
cs
or
push
xor
popf
ret
lret
add
stos
add
ds
and
push
cmpsb
xor
loope
ja
and
or
adc
jae
push
inc
call
insl
out
js
and
subb
repz
mov
or
xchg
fisubrl
cmp
add
jge
bnd
mov
and
cmp
or
jno
repnz
push
adc
cmp
fistl
lods
notb
push
leave
inc
mov
addl
popf
inc
arpl
cld
je
call
push
icebp
mov
mov
jl
sbb
add
mov
stos
int
lcall
stos
fcmovu
data16
or
dec
pop
and
orl
push
mov
xchg
insb
mov
cmpsl
jge
testl
push
xchg
popa
or
adcb
sub
aam
fwait
cmc
dec
dec
into
jae
inc
inc
xchg
movsl
push
mov
jp
xor
fistps
imul
in
mov
icebp
mov
fwait
jecxz
add
loope
rclb
in
add
jle
add
or
xchg
sbb
jne
pop
jae
xor
ret
xchg
mov
sbb
pop
inc
fdivrl
and
jbe
pusha
testl
ds
jl
in
rclb
mov
addr16
push
fwait
jo
push
popa
stos
fwait
add
enter
mov
lods
pop
fstps
jecxz
cmp
dec
mov
sbb
js
pushf
dec
xor
flds
fcoml
loope
cmp
int3
sub
dec
push
lds
dec
xchg
dec
jbe
jb
lods
and
push
shll
xlat
sbb
push
jno
insl
stos
push
xchg
subb
jb
loope
icebp
pop
call
xor
or
sbb
adc
fcmovnb
jp
stos
sub
sub
jg
xorl
movswl
push
lret
std
cmc
xchg
jnp
add
test
and
fs
inc
aas
fucomp
or
outsb
pop
push
iret
insb
and
mov
addr16
movsb
lds
cmp
mov
pop
roll
xchg
cltd
mov
xorb
daa
sahf
stos
push
lds
pop
jp
fidivrl
mov
jno
fsubr
and
jno
or
loopne
xchg
pop
jp
and
xor
add
push
pop
or
bound
insb
add
bound
sub
enter
in
add
std
mov
in
dec
mov
add
iret
jle
sbb
stos
inc
loopne
xorb
cmp
or
sub
inc
push
pop
adc
sbb
fwait
outsb
adc
data16
jle
dec
and
mov
test
jae
jb
adc
add
add
fwait
adc
jbe
cwtl
daa
bound
lods
pop
jecxz
inc
jnp
mov
cmp
lods
repnz
data16
jecxz
jne
lea
add
mov
test
int3
imull
push
mov
push
in
jmp
inc
jb
xchg
adc
inc
or
inc
inc
jg
popa
insb
jne
adc
push
mov
mov
lea
xchg
mov
cli
xor
sbb
test
rcll
je
ljmp
lods
bound
add
out
rcrb
shlb
lock
jp
out
clc
cmp
out
xor
cli
xor
add
mov
orb
in
inc
cmpsb
out
fldt
jns
mov
push
pop
imulb
lods
inc
cmp
push
popl
scas
scas
scas
movsl
mov
pop
insl
or
inc
repnz
insl
push
push
cmc
sbb
push
adc
outsl
ja
mov
mov
test
mov
bound
insl
mov
push
ret
icebp
pcmpeqb
push
decb
xchg
cmpsl
jo
jbe
inc
cmp
lea
ss
or
mov
ret
lahf
mov
ja
jg
fdivs
add
dec
out
lock
mov
je
in
loope
mov
movsb
cld
adc
stc
cld
and
mov
or
jecxz
subb
leave
int
xlat
loope
mov
pop
sbb
leave
in
std
je
push
or
mov
nop
mov
movsb
sub
imul
pop
and
xchg
pushf
dec
repz
push
mov
xor
js
adc
dec
cmp
movsb
or
repz
scas
mov
shlb
ja
cmp
and
rcrb
fidivrs
cmp
and
cmc
popa
cmp
movsl
popa
lret
sbb
push
rol
popf
cmp
cmp
pop
cmp
mov
aam
repnz
iret
add
jle
add
imul
lret
lret
pop
mov
jp
pop
iret
pushf
mov
pop
frndint
dec
push
cltd
push
push
fistpll
and
sbb
stos
and
test
add
lahf
out
or
dec
ret
icebp
imul
pop
enter
ds
test
lret
inc
jge
cmp
and
outsb
cmp
das
mov
icebp
adc
dec
stos
pop
cmpxchg
add
xchg
xor
jo
out
push
enter
rcrb
jl
mov
cmc
and
push
mov
sub
adc
lea
cmpsb
xor
fwait
cmp
inc
testb
add
outsb
ret
scas
dec
jae
loopne
cltd
outsb
pop
push
cmp
orl
rcrb
lret
mov
dec
fwait
adc
lahf
fistps
pop
daa
es
loop
pop
enter
cmp
xchg
rorb
cmc
pop
mov
movb
pop
cmp
orb
inc
and
dec
inc
jl
mov
hlt
jb
outsl
add
mov
adc
xor
fcmovne
shll
pop
jno
push
push
ljmp
sub
push
xchg
or
jo
pop
insb
add
jge
pop
sbb
push
push
loop
leave
std
xor
out
mov
stc
loope
icebp
dec
sbb
cmp
mov
dec
roll
mov
popf
cmpsl
stos
cmp
ss
jecxz
lahf
popa
push
and
pop
adc
sbb
insb
jne
jl
loop
inc
dec
dec
out
std
or
sub
mov
fsubs
out
mov
in
push
or
or
adc
jmp
sub
inc
dec
lret
jge
cli
sahf
fwait
jne
out
jmp
mov
or
lcall
pop
imul
loop
cmp
insb
push
or
mov
dec
testl
mov
add
jb
xchg
dec
mov
leave
aad
mov
lcall
mov
pusha
mov
stos
mov
fdivl
jae
mov
popf
iret
inc
scas
mov
dec
xchg
mov
cltd
loop
fs
flds
lcall
addl
xor
sbb
xorl
jno
xchg
incb
jae
out
xorb
loop
dec
fstpl
ror
orl
pop
mov
shlb
ficomps
popf
mov
pusha
pop
jle
fistpll
loopne
test
stc
pop
emms
subl
xor
dec
jae
mov
sti
fmull
fistpll
dec
cmpsb
or
mov
insb
xchg
call
insb
mov
and
pop
adc
sub
sbb
xchg
mov
in
out
push
in
mov
cmpsb
add
cli
xor
pop
leave
mov
shl
push
fmul
shlb
cmpsl
bound
les
loop
arpl
stc
push
xchg
jp
xchg
fidivs
adc
mov
shl
mov
pop
lods
dec
sarl
xor
add
mov
jg
sti
sbb
leave
mov
les
ret
fdivl
int
inc
js
das
outsb
loop
and
push
fldcw
jl
dec
push
mov
loopne
mov
and
jp
jmp
cmp
sbb
jmp
mov
lds
sbb
or
dec
inc
mov
and
cltd
rolb
push
xlat
sub
ljmp
fcompl
jne
int3
mov
xlat
lea
stos
dec
call
mov
and
pop
sub
sub
inc
cmc
pop
imul
bound
sbb
mov
leave
pop
cli
aaa
mov
out
xchg
cmp
jmp
cmpsl
mov
mov
pusha
test
movsl
imul
xchg
adc
or
lret
mov
nop
mov
xor
lret
ret
xchg
cmp
ja
mov
stos
mov
or
or
jg
lods
ds
out
add
inc
jnp
leave
or
and
inc
jb
fdivrp
mov
sbb
sub
cs
insl
xor
pushf
iret
push
pop
sub
dec
push
aad
push
sub
das
in
dec
add
pop
movsb
jle
mov
lods
jg
jg
sarl
movsb
popa
loop
or
sbb
daa
idivl
mov
pop
cld
inc
mov
jmp
xchg
sub
add
xor
adc
insl
or
gs
push
pop
js
xor
mov
xor
and
orb
in
andb
sbb
mov
ds
mov
inc
sbbl
fwait
add
or
rcr
mov
jge
cmpsb
cmp
les
jb
lock
xor
add
sbb
hlt
int
pop
add
sub
loope
jg
sub
fs
lret
adc
out
jno
add
fmul
test
pop
push
shl
addb
mov
pusha
adc
cmp
cmp
loop
ss
jb
fidivl
or
jnp
xor
test
jl
insl
adc
cwtl
inc
sub
fcmovnbe
dec
xchg
or
inc
loope
sti
rolb
mov
push
push
sub
xor
out
push
out
stos
xchg
fs
mov
jns
xor
loope
adc
std
sbb
and
test
mov
xchg
mov
push
add
jno
xchg
inc
sbb
stos
lret
insb
cmpsb
mov
les
fwait
inc
fdivrs
sahf
jl
pushf
inc
lret
sub
push
in
ror
call
or
repz
add
xor
fadds
popf
into
pop
jecxz
jp
ja
and
and
xchg
mov
hlt
aam
pop
xchg
xor
je
jp
pop
gs
cmp
ja
xchg
mov
into
inc
sub
mov
rcr
pop
pop
xor
xor
mov
ja
movsb
test
movsb
sbb
out
and
shrb
fildl
mov
mov
or
sub
jg
jp
push
repz
jge
mov
out
or
rclb
xchg
mov
mov
mov
fists
or
out
inc
adc
cmp
push
push
mov
jae
adc
cwtl
xchg
and
jns
push
fistpll
rcrb
call
ja
pop
addr16
inc
roll
or
mov
push
negb
sub
das
cmpsb
shrl
inc
mov
aas
das
mov
test
adc
lahf
jae
testl
aaa
xor
repz
inc
adc
push
sub
dec
pop
push
dec
push
shll
sbb
add
mov
lea
push
lds
les
dec
ja
jae
iret
rclb
ss
outsb
sub
xchg
imul
push
mov
mov
cli
out
clc
xchg
sbbb
fisttpl
or
xor
test
xor
pop
inc
and
sbb
pushf
add
pop
in
sub
or
icebp
movsl
addr16
std
fimull
imul
adc
je
shll
sbb
cltd
fsts
je
cmp
sub
cmpsb
or
xchg
xchg
in
xchg
adc
cmp
popf
out
fwait
inc
fwait
ds
mov
mov
stos
das
hlt
in
fprem
xlat
insb
xchg
xor
bound
insl
xchg
or
insb
or
mov
lret
dec
jle
pop
imul
pop
and
cltd
mov
cmp
std
test
loopne
pop
andb
sbb
push
sub
inc
mov
sub
xchg
sbb
cmpsb
sbb
mov
push
jle
dec
imul
adc
xor
pop
shrl
shrl
jnp
adc
dec
push
inc
sub
cmpsl
adc
lahf
and
push
mov
cmc
lahf
push
rorb
ja
scas
mov
fcmove
mov
addr16
repnz
lds
mov
repnz
jg
jns
push
jge
pop
scas
sub
ret
mov
xor
cli
dec
add
cmp
mov
arpl
neg
mov
arpl
pusha
mov
push
iret
mov
cmc
and
gs
fwait
clc
xchg
xor
dec
nop
dec
mov
imulb
stos
inc
pop
jmp
inc
dec
sarl
add
add
jo
lret
aas
dec
xor
scas
or
les
subb
sbb
cmpsl
cmp
push
aad
int3
xchg
into
add
pusha
pop
pusha
int
ret
loope
pop
jp
push
dec
into
cwtl
jge
mov
aad
cmp
and
and
jns
xchg
call
and
push
jmp
xchg
or
pop
cmp
dec
xchg
cltd
lcall
jmp
bound
or
pop
xchg
mov
cmp
add
test
sub
rsqrtps
loop
test
inc
pop
out
inc
cmc
je
mov
enter
out
sub
mov
cmp
out
and
inc
lods
inc
push
shrb
lea
aam
scas
adc
push
or
or
stc
xor
jae
jmp
pop
pop
data16
sbb
out
cmp
inc
jbe
lods
fcomp
mov
insl
mov
rcrb
insl
lods
xchg
jl
push
shlb
gs
mov
bound
mov
fnstsw
pop
out
dec
adc
pop
adc
xchg
jg
sbb
adc
hlt
fsubs
sub
out
mov
popa
adc
lret
jne
xor
lret
int
cltd
pop
test
lods
xor
fdivrl
inc
xchg
lahf
enter
lahf
sbb
unpcklps
or
nop
rolb
xlat
cmp
cwtl
aaa
dec
jmp
sbb
pop
cs
insl
lahf
or
js
pop
mov
sub
repz
inc
dec
in
stos
sti
push
mov
dec
in
sub
iret
lret
js
in
xor
cmpsl
or
jp
xchg
mov
xor
adc
test
stos
movsb
push
jl
stos
jp
movsl
mov
mov
dec
push
std
out
mov
sub
sahf
add
shlb
cmpsl
xchg
fwait
pushf
lock
insl
outsb
fstpt
mov
add
adc
fidivrl
mov
or
pop
adc
stc
loope
add
filds
clc
pop
dec
out
adc
enter
rorb
imul
loopne
dec
xchg
dec
aad
hlt
and
xor
or
int
xor
push
cwtl
dec
dec
ss
mov
int3
es
xchg
shll
rolb
je
dec
int
push
cmp
sbb
sti
jbe
pop
add
jns
jl
rol
subl
nop
mov
cmpsl
mov
cmp
inc
bound
decb
push
mov
cmpsl
sbb
test
inc
xchg
les
stos
fwait
stos
pop
pop
inc
cmp
sahf
ss
ja
ja
mov
mov
dec
or
fisttpl
lods
mov
cwtl
les
push
sub
cli
xor
cld
scas
pop
sbb
add
cmp
and
mov
jns
dec
jp
jecxz
sahf
fldt
add
je
adc
inc
jne
mov
mov
add
idivb
insb
mov
add
inc
mov
or
jge
shll
cmpsb
xchg
movsb
sbb
or
adc
lahf
sub
xor
mov
mov
paddd
insb
xchg
popf
fucomip
sub
fs
enter
inc
pop
cltd
fimull
mov
or
adc
add
mov
lea
sub
test
mov
jl
call
sbb
mov
xor
mov
cld
mov
mov
lds
repz
sbbb
dec
cmp
xor
call
xchg
cmc
inc
sbb
xchg
pop
rcr
fdivrs
call
clc
adc
mov
pop
adc
std
cmp
or
aas
fbstp
ja
adc
dec
pop
pop
pusha
pop
and
out
cmpsl
jnp
jno
call
cwtl
loope
jmp
js
or
clc
xchg
inc
mov
lret
or
rclb
cmpsb
pop
mov
inc
mov
sub
xchg
mov
jle
aam
mov
lock
cltd
out
pop
jl
test
dec
loop
cwtl
jmp
jp
push
mov
jmp
js
and
push
aaa
xchg
scas
pop
push
adc
jnp
inc
dec
fcoml
cmp
punpckhwd
mov
outsb
stos
pop
rorl
insl
add
cmp
out
test
scas
cltd
ljmp
jmp
pushf
int
mov
out
xor
loope
scas
testl
es
xchg
jnp
std
leave
sbb
mov
in
lock
jns
testb
sbb
movsl
sahf
outsb
cwtl
pop
xlat
mov
xor
or
rclb
mov
mov
add
sub
jne
cmp
mov
cmpb
out
push
shrl
lahf
js
andl
jae
jb
cld
cmp
sahf
sub
fbld
fwait
adc
lret
xchg
fdivrl
les
lret
push
clc
push
jo
fnstsw
mov
ljmp
fnstcw
add
js
xlat
add
sarb
cmp
in
jmp
and
cmpsb
movsb
outsb
jmp
inc
jmp
shll
mov
lcall
sub
clc
pop
jbe
and
dec
in
sbb
add
popa
pop
les
in
mov
pop
insb
fistps
repnz
inc
fiadds
call
or
sti
loope
popa
or
icebp
sbb
ret
repz
mov
or
jg
in
xor
flds
sarb
scas
adc
pop
jo
stc
lea
nop
lret
mov
pusha
adc
xchg
jmp
sub
in
leave
mov
enter
cmc
movsl
les
jnp
pop
outsl
testl
cwtl
jne
pop
mov
out
push
rorb
ja
push
stc
and
cmp
divb
cmp
movsw
mov
andb
mov
mov
pop
aas
ja
in
cmpsl
mov
cmpsl
or
insb
mov
push
mov
popf
scas
jbe
cmp
push
and
mov
mov
lods
out
into
dec
lods
sub
jne
adc
jae
jle
sbb
mov
xor
imulb
mov
ss
cmp
push
movsb
bound
inc
adc
jnp
pusha
pop
cmc
xor
mov
mov
xchg
jge
mov
addr16
fldt
mov
add
scas
cmpsb
sbb
in
pop
cmp
lods
inc
push
out
sti
mov
loopne
repnz
jp
scas
ljmp
jmp
out
rcrb
push
out
inc
dec
repz
push
mov
inc
stos
xchg
cmp
in
mov
clc
xor
les
imul
rclb
mov
scas
push
out
bound
sub
icebp
ljmp
add
adc
sub
test
jnp
insl
jp
bound
arpl
pop
adc
in
cwtl
cs
pmulhw
mov
xchg
lods
daa
call
mov
pop
dec
int3
sbb
stos
xor
jno
mov
pop
push
insb
push
adc
movb
loope
mov
pop
in
sbb
stos
sti
pop
std
xchg
sub
idiv
inc
in
xchg
cld
xor
adc
arpl
sbb
pop
jae
dec
sahf
lds
mov
and
sub
add
addr16
dec
ljmp
sti
or
imulb
and
push
loope
loope
mov
inc
arpl
mov
cmp
adc
push
cmp
fs
cli
xchg
and
xchg
xlat
out
push
add
sub
cmpsb
das
mov
daa
fs
mov
and
adc
cmp
mov
ficompl
data16
jge
shrl
movl
loope
jo
in
push
jns
mov
jb
gs
add
movsb
mov
pop
push
jg
roll
mov
pop
outsb
or
pop
add
or
cmp
repnz
jbe
mov
into
movsb
push
clc
lahf
push
mov
scas
lret
pop
cmp
fs
cs
scas
aam
loope
sbb
push
std
into
leave
fnstsw
popa
push
sti
sbb
pop
lods
in
pushf
pop
mov
rorb
xchg
sub
or
in
jg
pop
insl
clc
stos
cld
imul
and
mov
and
jns
xlat
aaa
loopne
mov
scas
aaa
fnstenv
adc
xlat
test
mov
dec
jno
ffreep
imul
out
push
into
popf
testb
lock
decb
jno
push
pop
int
lret
xchg
or
movsl
mov
xor
gs
fbld
popf
mov
lock
sub
fidivs
sbb
shl
in
jge
orb
cmpsl
cmp
arpl
dec
jbe
mov
mov
lods
adc
sbb
mov
pop
mov
lods
popa
loopne
sub
lock
add
and
mov
outsb
jo
pop
ja
sbb
js
clc
mov
mov
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
call
push
push
push
call
push
push
push
push
push
call
test
je
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
call
push
push
call
push
push
push
call
lea
push
call
call
cmpw
pop
push
je
push
push
call
push
call
add
call
jmp
push
push
call
pushl
jbe
xchg
xor
rcr
push
add
add
leave
jbe
xchg
xor
rcrl
dec
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
enter
jmp
rorl
mov
cmp
push
jmp
dec
mov
rcrl
add
push
sbb
insl
push
pop
push
mov
fcomip
or
xchg
xor
rcr
push
pop
jl
insl
mov
icebp
xor
ret
sub
out
cmp
pop
lahf
pop
ret
inc
aad
jne
or
xor
insb
fbstp
imul
insl
mov
icebp
inc
cli
fcmovb
leave
mov
dec
sti
mov
mov
lahf
push
add
or
lods
jns
xlat
enter
cwtl
cwtl
add
pop
jl
xchg
xor
rcr
icebp
sti
cmp
leave
cmp
xor
xor
dec
leave
jbe
xchg
sarb
rcr
cli
cli
popa
add
jb
xchg
xor
rcr
icebp
sti
imul
leave
jbe
test
cmp
fcomip
sti
imul
leave
jbe
xchg
xor
rcr
icebp
imul
leave
jbe
xchg
xor
sti
imul
dec
jge
xchg
xor
shll
imul
leave
mulb
and
ror
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
jmp
add
jbe
xchg
xor
rcr
jne
pusha
add
lret
xchg
add
rcll
int3
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
xor
sar
cli
sti
imul
leave
jbe
xchg
xor
xlat
fcomip
stos
cs
jp
cmp
xor
rcr
sar
imul
mov
cmp
fbld
ret
lds
cmp
loope
sti
imul
leave
jbe
xchg
xor
rcr
icebp
fldt
test
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
rcr
icebp
sti
imul
leave
jbe
xchg
xor
xchg
xor
sti
inc
add
jbe
mov
push
cmc
test
and
mov
jne
js
fistps
sbbb
std
std
mov
pop
js
inc
xchg
pop
pushf
pop
mov
adc
xlat
cmc
and
into
push
xchg
lret
jae
mov
scas
cmp
imul
outsb
pop
sub
fisttpl
cmpl
pop
sbbl
jne
adc
and
movsl
adc
stos
and
jae
sbb
inc
stos
push
add
xchg
sbb
mov
mov
cmp
outsb
xchg
pop
call
mov
js
mov
fsubl
push
cmp
mov
shlb
repnz
stos
inc
sbb
lds
loopne
int
shll
mov
je
inc
mov
adcb
cmpb
sbb
imulb
pop
mov
arpl
xchg
popa
add
clc
xor
jb
out
scas
mov
in
jecxz
xor
fisubrl
leave
push
call
stc
mov
cmc
in
pop
pop
cwtl
jne
lock
sub
loope
lods
outsl
fistpll
jle
daa
enter
fs
bound
sub
sub
push
xchg
fwait
cmp
lcall
test
sub
dec
stos
fisubs
aad
mov
jns
fcomps
cwtl
lods
sub
dec
outsb
inc
repnz
or
outsb
mov
mov
mov
test
inc
sbb
mov
mov
mov
jmp
dec
out
fcoml
adc
jecxz
incl
repz
push
mov
and
les
popa
sbbl
inc
pop
sbb
mov
jne
subl
ds
test
iret
fwait
and
xor
inc
mov
or
popf
jae
and
sub
cmpsb
push
outsl
ret
xor
push
sbb
dec
mov
cs
xchg
dec
dec
xchg
aam
and
mov
xchg
xor
mov
jae
and
fcoml
imul
jl
insl
sbb
les
cmp
pop
es
pop
bnd
insl
sbb
pop
inc
call
test
mov
fcoms
mov
sbb
and
and
out
sbb
nop
mov
sbb
arpl
rcrl
push
cli
and
xchg
in
pop
repz
push
lods
inc
xchg
pushf
adc
and
lret
xchg
pop
nop
mov
inc
aad
lret
push
pusha
sub
jg
xchg
repnz
shll
out
add
cmp
jl
in
test
rcl
xchg
lcall
push
dec
mov
xchg
mov
cwtl
cmp
pop
and
and
sbb
xor
adc
mov
imul
fimuls
pusha
stos
adc
lods
jns
sub
mov
jp
cmp
or
fwait
hlt
rolb
dec
das
dec
std
ret
mov
add
test
sbb
jg
jmp
sub
popa
xor
dec
push
pop
imul
sub
adc
pop
jae
mov
and
lods
es
fidivs
or
mov
cmpsb
jmp
cmpsb
stos
mov
and
fistpll
cmp
jno
andl
and
xor
jbe
or
push
add
xchg
mov
cmp
aaa
mov
inc
iret
shll
xchg
into
add
stc
sub
mov
add
sbb
push
cmpsb
adc
xchg
push
pop
jns
adc
jns
mov
xchg
js
xchg
sarb
cmp
or
aad
sarb
or
loope
xor
mov
dec
loopne
aas
aaa
lea
cmp
mov
jae
mov
dec
std
or
leave
clc
les
sub
mov
inc
or
shrb
lret
jno
fisubl
and
sub
out
jnp
mov
imul
lret
ds
je
xor
mov
in
lret
out
and
sub
mov
int3
cmpsl
pop
movsb
iret
jl
jge
push
jbe
addr16
sbb
mov
fdivrl
les
inc
pop
inc
jl
dec
int
cmp
pop
icebp
adc
mov
js
shrb
lods
inc
std
stos
pop
into
sub
test
int3
mov
dec
sbb
repz
or
jg
scas
sbb
imul
sbb
mov
or
mov
mov
push
jbe
jne
xchg
fists
cltd
push
jp
cld
rcrl
lret
cmpsb
dec
jmp
jbe
movsl
mov
mov
jns
cltd
add
stos
in
scas
scas
xchg
loop
movsl
mov
push
sub
stos
inc
stc
mov
data16
xlat
cmpsl
call
fisttps
bound
andl
xlat
mov
jmp
cmp
adc
pop
out
inc
mov
mov
sbb
mov
add
dec
fucomp
pop
mov
int3
test
sub
sbb
sub
and
popa
xorl
xchg
xchg
xchg
mov
dec
scas
sbb
aas
or
jge
in
and
std
xchg
out
loopne
push
sub
hlt
push
xorl
mov
ja
mov
inc
outsl
push
gs
mov
sub
imull
xlat
inc
push
mov
cmpsb
jns
mov
fisttpl
or
sbb
adc
pop
es
xlat
ja
loope
add
add
ss
pusha
pop
inc
adc
mov
adc
xchg
push
int3
and
cmp
imul
add
and
movsl
jae
rcll
or
roll
sbb
xchg
xchg
das
fldl
ss
jno
jbe
mov
cmp
nop
fimull
and
cmp
cs
add
xchg
nop
fwait
cwtl
lea
imul
cmpsl
sar
lea
sub
mov
and
je
rcrl
push
das
in
fdivrl
ror
xchg
lahf
pop
popa
cmp
mov
inc
loope
mov
scas
mov
insl
lods
mov
mov
pop
mov
jbe
sbb
leave
dec
fcoml
test
pop
out
cli
lret
fcompl
shl
xchg
jmp
sarl
xchg
aaa
insl
add
sub
and
mov
scas
popf
sbb
popf
mov
cld
adc
adc
andl
mov
jmp
int
mov
mov
push
fadd
je
cmp
movsb
lea
insl
cli
adc
dec
pop
out
sub
out
ret
inc
in
or
and
inc
or
mov
add
mov
lahf
jbe
xor
adc
jl
rcll
add
pushf
leave
mov
sub
pop
xor
js
icebp
dec
or
test
inc
dec
fildl
outsb
fbstp
pop
push
sub
mov
jb
sub
pop
adcl
lds
jb
repnz
inc
dec
hlt
jl
dec
mov
test
jp
mov
lret
aas
pop
out
fldcw
pusha
add
addr16
mov
in
and
rclb
cmp
cmpsb
xor
sti
out
ud0
movsl
ret
mov
les
xchg
lahf
push
add
js
mov
jmp
ljmp
xchg
pop
pop
std
insl
scas
inc
rol
push
mov
rol
fcmove
out
fcoml
jl
je
mov
rcrl
sbb
ret
mov
das
sub
mov
or
dec
xor
add
das
cmp
xchg
loop
pop
pusha
adc
sub
push
jl
dec
clc
dec
movb
dec
jo
xlat
xor
push
into
mov
jns
sahf
add
test
jl
int3
bound
shll
nop
dec
xor
or
sub
inc
xor
cs
mov
pop
push
pop
inc
push
aam
movsl
fsubrs
pop
js
jmp
push
fyl2x
push
xor
out
xor
add
jle
jo
jne
jl
sbb
arpl
pop
mov
lret
movsl
ret
sub
std
leave
inc
je
push
loope
jbe
xchg
sahf
and
push
adc
cmp
push
popa
jg
movsl
rcrl
mov
aas
xchg
mov
jmp
mov
popa
cwtl
jbe
mov
les
test
sbbl
mov
add
arpl
lahf
push
mov
jnp
jne
ja
push
ljmp
in
fcmovnb
repnz
xor
inc
bound
mov
shll
xchg
sbb
cmp
in
and
stos
dec
aam
dec
cltd
enter
arpl
jns
jle
adc
faddp
and
cmpsb
push
or
sub
inc
jmp
xchg
dec
popa
xchg
shl
jl
call
sub
xchg
dec
imul
dec
dec
sahf
mov
imul
jge
jno
daa
and
js
aad
hlt
divl
push
sbb
loop
jo
jle
ja
adc
sbb
and
xorb
fstpt
in
aaa
rorb
mov
ret
jg
sub
mov
fbstp
mov
xchg
inc
ror
incb
mov
push
mov
adc
sbb
lahf
inc
push
inc
inc
out
and
fdivs
cmpsb
push
inc
fiaddl
pop
mov
gs
adc
scas
in
je
sbb
ret
adc
push
js
adc
sub
aaa
xchg
jns
les
adc
mov
mov
push
mov
test
xor
mov
dec
dec
push
mov
push
xor
xor
bound
ja
mov
mov
call
sarb
mov
ret
ret
aad
dec
jp
ljmp
fcmovb
jbe
dec
add
jp
xchg
jo
cmpb
out
pop
loope
adc
adc
pop
add
das
inc
mov
xor
xchg
loopne
sub
xchg
fdiv
mov
mov
pusha
xchg
mov
add
fwait
pop
shll
hlt
shlb
repz
outsb
pop
add
sti
lea
in
fildl
or
pop
es
xor
add
sub
in
mov
push
add
gs
add
cmpsb
or
jecxz
and
sub
loop
sub
pop
mov
mov
enter
or
fdivs
ret
add
sub
xchg
aaa
fisubl
push
xor
mov
lea
lods
outsl
data16
sti
mov
xchg
xor
mov
pop
jp
add
outsl
mov
out
xor
push
jl
xor
aaa
adc
iret
out
out
adc
and
add
cmp
xchg
and
popl
mov
subb
dec
enter
lds
push
neg
sub
dec
insb
jbe
pop
xor
pop
lret
adc
push
andl
rcl
mov
cmpsl
test
cmp
jl
fnstsw
roll
mov
sub
in
aaa
inc
mov
icebp
std
out
js
jecxz
lcall
lahf
lock
clc
jmp
add
pop
shl
jnp
lods
sub
push
pop
dec
scas
xor
inc
scas
dec
pop
sub
xchg
dec
fsubs
and
in
fstl
cmpsl
dec
cmc
and
add
hlt
pop
pop
inc
negb
mov
dec
loopne
add
and
in
fucomp
mov
daa
sbb
mov
jecxz
shl
pop
cmpsb
test
inc
ds
push
xchg
mov
in
pop
stc
cmpl
sub
inc
add
sahf
push
outsl
aaa
and
pop
enter
xchg
sub
pop
inc
mov
in
cmc
sbb
cmc
test
sbb
jae
or
xchg
sbb
aas
xor
pop
movsl
lcall
sbb
push
lcall
mov
pop
leave
mov
push
push
fwait
pusha
pushf
in
ret
in
mov
fisubrl
sub
stos
and
loop
test
add
sbb
stos
sbb
movsb
push
aas
sbb
sbb
lds
lods
mov
push
popa
out
mov
jl
fcom
cmp
dec
push
std
xchg
add
aam
jecxz
cmp
int3
es
test
xor
nop
sti
push
pushl
jbe
daa
lret
cmp
pushf
mov
scas
getsec
sub
mov
jmp
dec
pop
dec
out
push
add
pop
cmp
lret
jnp
or
das
push
xor
scas
adc
sub
jae
pop
jo
inc
lods
jae
dec
and
pusha
jmp
push
jno
xchg
ficompl
xchg
dec
adc
in
cmpb
add
mov
cmpsb
test
in
cmpsb
js
cmpsb
mov
fimull
lods
add
mov
pushl
push
fldl
insl
jle
es
in
in
adc
and
clc
adc
xchg
call
jns
jns
mov
mov
mov
aas
into
dec
je
rcr
push
repnz
fiaddl
out
iret
subl
xchg
fs
mov
repz
push
mov
pop
in
mov
lcall
gs
inc
pop
mov
xor
loope
outsb
mov
xchg
pop
fbstp
jae
shl
push
lret
addr16
pop
ja
movsb
in
push
orl
inc
fidivs
mov
test
dec
push
into
scas
xchg
mov
xchg
cmp
mov
jae
jmp
jecxz
outsb
add
cmp
aam
and
jae
jb
scas
das
cmp
and
std
not
jle
sbb
fsubl
mov
push
adc
xlat
repz
fsubl
in
addb
xor
xor
stos
iret
roll
add
out
push
mov
rorl
push
ja,pn
daa
dec
cmp
sub
lahf
fsubs
imul
rcrl
push
sub
insl
mov
loopne
aaa
aaa
add
cmp
das
icebp
add
std
or
out
arpl
inc
nop
cmpsl
jnp
push
adc
out
lcall
popf
jae
popa
ja
push
mov
jge
push
inc
pusha
in
scas
aam
test
mov
xchg
jnp
mov
pop
xchg
sbb
icebp
psllq
hlt
ss
mov
sub
adc
adc
add
call
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
bound
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
bound
nop
bound
mov
add
bound
jo
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
bound
aam
inc
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
arpl
nop
arpl
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
test
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
test
nop
test
mov
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
test
aam
inc
add
test
hlt
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
test
nop
test
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xchg
addb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
