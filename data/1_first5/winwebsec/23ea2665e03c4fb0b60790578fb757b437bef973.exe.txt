push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
cmp
dec
movsb
mov
pop
cmpsb
mov
cwtl
imul
mov
or
jge
call
sub
sbb
push
repz
roll
sub
dec
jae
adc
mov
jae
dec
das
or
jl
push
lahf
sahf
adc
fwait
jmp
and
dec
int
lret
hlt
in
inc
push
pushf
mov
stc
xchg
dec
pop
loopne
pop
outsl
jb
stos
sub
push
or
sbb
popa
rcr
and
mov
fwait
shrl
jp
xor
mov
inc
enter
jmp
and
xor
cli
ficomps
cmpb
cli
hlt
mov
es
sbb
data16
jo
int
sti
xchg
add
int
in
sbb
and
clc
sbb
fsub
lcall
out
inc
ficomps
sub
push
icebp
ret
mov
aaa
lcall
cmp
mov
pop
and
push
aas
in
dec
js
sbb
lret
cli
push
xchg
aad
add
addl
mov
adc
cmpsb
xchg
inc
rorl
repnz
jne
jns
mov
jnp
xchg
js
add
and
aad
or
cmc
cmp
jle
dec
add
mov
jp
inc
jl
dec
adc
sti
int
cmpsl
cmp
fsubrs
mov
mov
adc
or
dec
cs
xchg
and
sub
cld
xchg
cmc
mov
fisubs
add
cmp
push
push
xor
inc
insb
lds
and
cli
jnp
pop
leave
test
and
in
xor
cmp
push
jnp
jg
xlat
and
les
aaa
adc
push
lcall
xchg
add
out
sub
pop
push
jns
es
cmpl
lret
inc
xor
inc
shrl
pop
cmp
int
popf
mov
cli
pop
mov
inc
popf
insb
mov
mov
add
in
idivl
mov
in
cld
stos
push
and
cmpsb
inc
dec
jne
jnp
nop
xchg
stc
sbb
movsl
rorl
mov
aad
mov
nop
dec
stc
dec
pop
push
jmp
adc
test
push
test
mov
jo
xor
in
xchg
mov
push
jle
clc
cld
pusha
push
push
mov
push
xchg
sbb
adc
dec
jecxz
sub
mov
adc
scas
stos
mov
divb
pop
sub
mov
fcom
dec
cltd
daa
imul
cmp
sbb
or
push
in
into
jbe
cmp
mov
adc
cmp
jecxz
repnz
or
mov
imul
pop
xchg
mov
mov
adc
pusha
xchg
lods
xchg
sub
sub
mov
into
in
mov
int3
xchg
les
fxch
ficomps
pop
shlb
xor
push
mov
mov
jle
shll
rep
in
adc
rorl
and
mov
jl
roll
dec
aad
movsb
frstor
jnp
addr16
lea
xchg
adc
or
adc
aad
xor
icebp
cs
aad
jbe
aad
hlt
adc
aad
lods
rcrl
cmpsb
mov
mov
aas
push
lock
cmp
mov
lcall
rol
std
shrl
shll
clc
sti
and
push
out
push
jecxz
xor
sub
xor
adc
fucomip
std
aas
jbe
dec
dec
and
push
dec
push
fwait
xor
data16
test
mov
leave
mov
push
pop
std
out
mov
sub
sub
jae
je
inc
pop
je
adc
cmpsb
mov
mov
and
jns
ljmp
andl
cmp
out
mov
lret
inc
outsl
push
mov
cltd
int3
iret
or
lock
dec
dec
jne
or
lret
mov
inc
inc
xor
sti
xlat
mov
bound
mov
push
les
imul
add
cmp
jg
sub
lock
mov
push
push
adc
jmp
add
subb
imul
subl
push
sub
add
jge
or
js
cmp
adc
mov
or
mov
xor
leave
inc
or
cld
mov
cmp
incb
test
jmp
dec
in
or
out
loopne
and
push
outsb
repnz
popf
cmp
add
mov
adc
dec
push
sub
push
push
imul
cwtl
stc
stos
push
rcr
push
test
push
pop
lds
movsl
loopne
data16
mov
scas
scas
jecxz
mov
mov
pusha
mov
ljmp
or
hlt
lret
jp
push
cs
xchg
adcl
sub
pushf
and
inc
xor
push
jmp
and
movb
jge
lret
sub
sbb
cmpb
sub
and
push
cmc
dec
jg
jmp
stc
sbb
mov
in
mov
xchg
popa
rol
sarb
test
or
popf
out
ror
testb
push
dec
pop
push
xchg
in
call
cmp
notl
repnz
leave
stc
xor
or
xor
mov
subb
sbb
outsl
push
push
mov
mov
test
rol
ja
push
xchg
inc
out
jne
jae
mov
scas
push
pop
mov
cli
sub
and
and
inc
xchg
ds
fidivrs
dec
jns
and
xor
gs
fcmovu
movsb
repz
stos
adc
lret
bound
pop
sub
shlb
or
inc
aas
mov
pop
lret
loop
and
imul
adc
push
pushl
stos
repnz
cmp
shrl
into
jb
push
sbb
sbb
push
adc
dec
push
stos
push
outsb
lahf
pop
repz
imul
jl
lods
dec
xchg
sti
push
inc
cltd
jne
push
fstpl
test
ret
jne
fdivp
mov
jbe
rcrl
push
pop
shll
and
mov
push
jmp
or
iret
cltd
add
fwait
int3
or
fs
push
or
leave
xrelease
mov
push
in
jge
add
or
pop
mov
shlb
mov
mov
add
movsl
insb
jg
jg
lcall
cmp
adc
pop
xchg
enter
dec
sub
call
movsb
fsubs
jmp
sbb
mulps
inc
mov
adc
adc
lret
pop
cld
cmp
es
mov
insb
xchg
dec
jne
mov
inc
mov
mov
sub
shll
mov
int3
dec
inc
je
outsl
cltd
in
mov
loope
jecxz
cmpsb
fstpt
fwait
xchg
int3
ds
jle
stos
shll
sarl
mov
jmp
dec
dec
pop
jmp
or
push
fdiv
mov
ret
fidivs
rcrb
xchg
gs
ret
or
aad
push
adc
cs
xchg
xchg
mov
int3
std
add
test
es
jmp
push
ror
cmpsl
xor
add
mov
roll
add
inc
inc
stc
call
fdiv
shl
pop
or
jmp
mov
inc
or
push
pushf
pushf
mov
int3
pop
sbb
aaa
mov
and
inc
sarb
sub
insb
icebp
lahf
enter
fnstenv
mov
lret
mov
out
add
sub
inc
mov
inc
cmp
ds
scas
addr16
es
lcall
imul
sbb
inc
pop
xchg
add
fnstenv
dec
and
cmpsl
test
pushf
jmp
sti
into
lods
or
adc
subb
xor
xchg
inc
xchg
hlt
mov
cmpsb
test
adc
lret
cmp
fwait
xor
lret
xchg
js
or
sub
push
in
xor
or
mov
je
or
mov
push
cmp
bound
inc
push
sub
mov
sbb
int3
mov
or
ret
aas
int
pop
movsl
jb
lods
xchg
fs
aaa
call
mov
xchg
sti
lahf
dec
leave
add
cmp
nop
mov
mov
movsl
pop
shll
cwtl
aaa
push
cmp
gs
mov
imul
cmp
inc
cld
mov
pop
cmp
aam
adc
mov
jne
add
adc
loope
mov
mov
int
adc
dec
pop
movsb
add
das
test
xor
sbb
push
jge
jno
jge
push
lock
and
icebp
sub
add
and
rcr
subl
sbb
xlat
fnsave
cmc
ljmp
push
cltd
xchg
jecxz
mov
test
jo
scas
inc
inc
xchg
adc
add
adc
pop
cmp
pop
and
ss
mov
cs
pusha
addr16
popf
or
daa
aam
xchg
lods
dec
jg
rcrb
lret
jne
ss
and
mov
xor
jb
cmp
push
imul
and
loopne
push
dec
and
repz
aas
sbb
arpl
mov
and
subl
mov
jle
mov
cli
and
aad
inc
nop
sbb
test
jmp
addr16
dec
rol
inc
add
movsb
and
mov
cs
mov
std
js
sub
jp
imul
inc
jbe
mov
jae
mov
pushf
pop
xor
outsl
fidivs
inc
pop
cs
jge
iret
cld
pop
mov
push
mov
pop
push
pop
jecxz
sbb
sbb
addl
mov
xlat
insb
cmp
cmpsl
iret
jp
mov
lea
mov
into
adc
pop
je
aam
sahf
lret
xor
add
fadds
gs
aaa
jecxz
shll
push
clc
adc
cmp
lahf
lcall
ds
pushfw
scas
loopne
jae
lea
mov
sbb
pop
out
imul
loope
cmp
popf
orb
repz
rep
mov
add
aam
pusha
xor
mov
sarb
rcll
push
push
inc
add
movsl
mov
loop
enter
sbb
adc
ss
lcall
xor
or
in
popa
inc
dec
jg
push
rorb
xchg
inc
sub
cmp
ret
mov
inc
or
push
es
cmp
mov
scas
inc
or
loopne
aaa
mov
push
lods
shll
fdivl
or
push
daa
pop
fmull
int
test
movsb
jg
mov
pop
mov
test
xchg
push
test
aad
jne
mov
sub
insl
jg
out
out
lods
insl
ss
xor
mov
sti
mov
je
outsb
int3
mov
fnsave
in
cli
pop
jnp
add
lea
mov
lret
adc
lcall
mov
jecxz
popf
cltd
sub
cmp
xchg
inc
xchg
lret
js
cwtl
push
sbbb
outsb
xor
outsb
adc
inc
mov
es
rolb
mov
cmp
jae
jb
add
mov
ret
mov
jnp
insl
outsl
adc
mov
ss
lea
or
and
cmc
dec
arpl
subb
pusha
stos
pop
lret
push
jg
jmp
lahf
sub
cs
inc
adc
pop
loopne
push
jmp
mov
pop
mov
pop
int
in
js
in
inc
int
sbb
jl
ds
in
gs
aad
orb
push
leave
cmpsl
fidivrs
add
xor
pop
ss
jae
pusha
jae
out
stos
nop
repz
and
inc
xchg
mov
adc
xchg
imull
ficoms
loopne
mov
ret
in
es
stc
adc
jl
daa
lds
add
hlt
je
inc
faddl
xchg
insl
imul
into
pop
movsl
nop
stc
les
repnz
sub
or
jnp
pop
sbb
mov
dec
leave
cld
pop
dec
cmc
fdivrl
js
xchg
lock
and
push
xor
jo
cmp
add
mov
dec
adc
repnz
push
mov
shrb
mov
iret
pop
das
movsl
stc
pop
testl
ja
mov
loop
add
sarl
sub
jle
in
jbe
sub
add
or
test
test
adc
loope
cs
adc
add
add
mov
xchg
sub
shll
sbb
cs
out
ret
mov
jae
ds
in
mov
pop
pop
mov
cmpsb
hlt
adc
jns
push
jno
sbb
push
negb
scas
dec
cmp
je
dec
adc
or
test
mov
loop
xor
jne
outsl
decl
faddl
pop
push
lds
subl
std
xor
pop
int3
sahf
sbb
pop
xchg
mov
cmp
xlat
mov
pop
jns
daa
xchg
call
and
insl
outsb
cmp
mov
ret
fistl
sbb
fiadds
popa
in
ss
and
mov
or
outsl
das
bound
movsl
dec
cli
push
and
in
push
and
cmp
jge
das
out
adc
je
push
testl
jae
xchg
sub
neg
adc
in
mov
loope
stc
and
xchg
cld
mov
mov
sub
dec
lods
xchg
push
shrb
lock
xchg
add
aam
xor
sub
cwtl
lds
jge
scas
lret
mov
in
popa
jnp
std
adc
xchg
pop
je
xchg
dec
sahf
clc
lock
ret
and
inc
mov
cmp
scas
cmp
sbb
push
xchg
adc
stos
jno
jno
xchg
push
xchg
add
xchg
adc
movsl
dec
test
inc
push
stc
mull
mov
testb
pop
outsb
roll
cvtdq2ps
aas
lcall
sar
inc
jae
xor
stc
stos
out
nop
aam
lock
and
jno
popa
dec
sbbl
pop
js
movsl
sub
lods
and
sub
dec
jb
push
lahf
push
sub
movsb
push
xor
mov
push
jmp
xor
xchg
push
pop
push
and
inc
popf
shlw
data16
stos
imul
push
mov
jecxz
fs
inc
or
xor
mov
pop
sbb
mov
mov
sbb
test
cmc
jno
xor
mov
jl
movsb
pushf
mov
xlat
add
or
aaa
jge
sahf
lds
push
add
cmp
adc
hlt
add
inc
xchg
ss
enter
pop
in
xor
imul
loope
pop
aas
jno
lds
sarb
mov
pusha
and
dec
xchg
aad
pop
sbb
xchg
inc
sarb
inc
pop
xrelease
xor
leave
jae
mov
stos
push
popa
sar
int
lock
xchg
adc
mov
cmp
ljmp
out
test
shlb
shl
mov
outsl
or
enter
and
jb
repnz
adc
push
sub
mov
sbb
dec
mov
aad
jae
sbbb
enter
sub
loopne
sub
sbb
pop
scas
stos
sbb
orb
out
mov
nop
stos
pop
mov
mov
mov
arpl
push
jo
mov
hlt
outsb
mov
daa
loopne
xchg
mov
dec
push
movsl
add
aad
and
xorl
add
gs
into
mov
shll
push
movsb
mov
scas
pop
stos
in
fsub
push
xor
dec
jns
dec
lea
cmp
xor
insb
leave
sub
addb
repnz
shrl
pop
mov
or
test
adc
mov
and
out
into
pop
sub
cmc
mov
add
pop
push
lods
push
test
mov
xchg
mov
jl
lret
inc
sbb
sub
fnstcw
sub
mov
jbe
sbb
imull
dec
addb
cmp
add
inc
and
or
sub
fildll
sti
paddd
mov
into
sarb
sbb
pop
pop
or
pop
mov
out
jmp
mov
or
sbb
sti
into
insl
hlt
adc
or
adc
lds
mov
repnz
sbb
dec
mov
mov
ds
sub
sub
addr16
outsl
xchg
sbb
insl
insl
jp
mov
mov
repz
pop
int3
fwait
enter
push
ljmp
mov
or
js
addb
jnp
into
insb
cli
dec
sbbl
or
xchg
push
mov
ss
pop
jmp
in
pop
sub
and
out
add
repnz
adc
jo
ss
mov
fsubrs
ret
xor
insb
mov
iret
imul
sbb
stos
pusha
inc
mov
xlat
sbb
cld
test
stc
lds
cmpsb
pop
mov
out
lock
test
add
push
lcall
sahf
div
xor
lock
mov
mov
mov
xor
mov
lahf
filds
cmp
sbb
sub
xchg
iret
cmp
ljmp
lahf
ror
ss
es
pop
dec
inc
std
stos
add
icebp
dec
fstpl
sbb
sbb
dec
or
pop
pushf
fs
mov
jbe
jl
out
test
pop
sub
mov
sbb
push
or
pop
fisttpll
sub
shl
sub
cmp
add
daa
mov
dec
push
mov
inc
ret
xchg
in
sub
xchg
mov
lods
cmp
push
lahf
orl
inc
sub
xchg
add
lods
xor
pop
and
sahf
bound
jecxz
stc
xchg
dec
and
mov
scas
adc
icebp
aad
inc
inc
adc
or
into
jl
mov
xchg
pop
or
jo
mov
loop
dec
adc
push
std
popf
sahf
mov
outsb
pop
mov
or
and
xchg
mov
shll
jg
inc
mov
xchg
insl
mov
stos
into
fldenv
add
xor
mov
inc
pop
sahf
imull
pop
jns
dec
test
rorl
xor
in
xchg
test
fimuls
ret
rolb
inc
hlt
loopne
lret
insb
sahf
aam
dec
in
jge
dec
les
xchg
jg
jmp
adc
into
repnz
addr16
mov
je
sbb
cmp
mov
mov
es
push
push
and
xor
mov
jge
les
nop
leave
ror
int
fs
ja
js
dec
addl
xchg
or
dec
call
xchg
sbb
pop
repz
ja
cmp
mov
jne
and
jge
movsb
leave
push
sahf
mov
fnstsw
outsb
ret
jae
outsl
pop
xchg
movsb
test
dec
ss
int
in
ficomps
andb
leave
or
dec
mov
sbb
call
lret
bound
shlb
dec
mov
mov
jge
into
movsl
mov
inc
mov
sbb
jbe
popa
xchg
gs
fst
aaa
in
sub
sub
mov
pop
lcall
fs
je
testl
adc
in
xchg
ljmp
push
daa
into
in
js
and
mov
in
fnstsw
test
dec
mov
or
stos
popa
shr
loopne
outsl
jge
data16
mov
jecxz
inc
sbb
insb
inc
dec
arpl
pop
insb
loope
push
jl
mov
push
pop
fcompl
dec
xlat
aam
lret
and
rcr
mov
add
pop
and
shlb
stos
push
testb
mov
das
lcall
push
jnp
call
push
hlt
shll
mov
mov
movsl
popa
dec
test
xor
jne
movsl
cmp
dec
cmp
outsb
stos
push
adc
ret
mov
mov
movl
repz
iret
mov
popf
aad
mov
and
ds
mov
mul
mov
fcmovb
lds
jns
pop
shlb
nop
aam
in
rorb
js
adc
adc
mov
rcrl
inc
and
test
pop
xchg
dec
push
out
or
mov
jg
sbb
pop
fs
lret
test
nop
inc
outsb
imul
cmpsb
mov
and
xor
out
out
ret
add
les
sbb
and
or
jmp
lret
adc
pusha
cli
mov
outsb
pop
push
rcrb
push
repz
mov
lret
mov
insb
aaa
sub
pop
adc
out
ds
inc
lret
jno
inc
les
cmc
int3
out
mov
mov
data16
stos
inc
loopne
int3
mov
popf
sub
sbb
pop
dec
clc
mov
sbb
cltd
in
hlt
fstpt
adc
and
pop
in
and
lock
test
repz
or
dec
outsl
test
movsl
or
les
sub
ficoml
aad
in
pusha
aam
fldt
cmp
xchg
int3
outsl
or
cmp
push
and
mov
adc
into
and
daa
sbb
xchg
pop
stos
adc
aam
mov
gs
sub
pop
sbb
lahf
push
push
mov
inc
rdpmc
sbb
xor
mov
orl
out
xor
aaa
ljmp
mov
cs
mov
xor
push
imul
sub
adc
push
out
jmp
jge
pop
addl
mov
pop
mov
idivb
call
iret
xor
mov
daa
cmc
sbb
repz
jmp
push
inc
dec
sub
or
jl
lods
xor
mov
jnp
add
cmp
cs
icebp
lcall
push
pushf
inc
adc
stos
and
jecxz
adc
jge
cmp
mov
movsb
stos
pop
pop
aad
cmp
cltd
or
repnz
fmulp
dec
into
jo
jns
in
shr
clc
cs
testl
dec
xlat
insb
aad
inc
sub
aam
sub
jnp
jg
int3
mov
lock
jg
mov
dec
jge
lds
test
or
push
push
push
jno
scas
cmpsl
lea
pop
jecxz
dec
imul
or
outsl
lods
xchg
mov
xor
shrb
out
fs
insb
mov
xor
lods
xchg
roll
sti
or
jo
jnp
mov
mov
test
enter
andb
dec
push
sahf
mov
sbb
out
mov
sub
bound
xorb
popf
mov
leave
insl
add
jge
aad
dec
cmp
call
dec
shll
xor
gs
dec
xchg
fidivrs
jg
lds
dec
dec
test
imul
and
mov
shll
in
cmp
les
mov
lret
jns
popf
cmpsl
shrb
lahf
nop
popl
sub
lret
imul
into
sbb
iret
jecxz
fistpl
push
iret
sbb
cmp
les
outsb
add
insb
mov
aas
lea
loope
repz
cmp
stc
jne
mov
jecxz
dec
push
push
rclb
fadd
ret
cmpsl
popa
xor
xchg
aas
pop
jl
xor
dec
std
scas
ret
sub
lods
clc
pop
lods
cmpsb
jno
in
pop
nop
jae
cmp
jno
aad
cli
mov
mov
adc
jnp
es
rol
xchg
rorl
pushf
scas
repnz
lret
icebp
cmp
out
xlat
jne
test
out
dec
mov
test
push
sbb
push
add
inc
sbb
adc
inc
xchg
cltd
xlat
mov
xor
hlt
loopne
push
adc
repnz
daa
movsb
pop
push
dec
scas
lods
inc
mov
in
or
fisubrl
mov
addb
cmp
xchg
lcall
popa
sbb
ja
jl
lcall
or
jae
dec
loop
mov
adc
cs
data16
es
jnp
xchg
das
xor
gs
inc
repnz
jae
loope
addb
push
mov
enter
fstl
lock
rcr
dec
mov
and
imull
and
in
adc
mov
push
and
mov
lcall
push
mov
add
fildll
ds
xchg
pusha
cmp
roll
outsl
adc
imul
jno
push
cmp
dec
mov
sbb
push
repnz
add
pop
lock
ret
ljmp
inc
int
cmc
sti
add
mov
xchg
sahf
cld
ret
jg
lock
xor
lods
and
je
mov
inc
mov
mov
out
leave
in
loopne
leave
dec
and
add
int
test
sbb
sbb
adc
adc
test
mov
out
xlat
and
lds
rorl
jmp
mov
jb
test
cmp
aas
xor
ret
sbb
in
popf
xchg
popa
insl
leave
sub
push
cmp
sbb
lret
dec
jle
pop
bound
test
stos
les
dec
adc
repnz
xor
cld
jbe
test
mov
or
rorb
shrb
movsb
or
mov
insb
mov
jns
sti
add
adc
push
adc
movsl
inc
sbb
sub
pop
fisubl
push
or
mov
imul
mov
xchg
out
and
imul
in
outsl
or
gs
arpl
jg
rcl
filds
dec
adc
imul
push
jns
push
fprem1
dec
daa
pusha
ss
fildl
pushfw
mov
xchg
aas
pop
cs
fmul
adc
mov
pop
call
jnp
cmp
mov
jmp
sub
fistl
sbbb
xchg
aas
scas
icebp
shll
jmp
dec
test
sub
pop
ret
push
fnstsw
aas
js
dec
push
jg
lock
mov
xor
or
xor
dec
dec
dec
and
jne
mov
cmpl
xchg
cli
loop
aad
into
jp
icebp
mov
jb
jp
clc
cmpb
mov
jecxz
outsb
ds
mov
rcrl
xor
mov
mov
movl
push
mov
mov
leave
push
add
das
mov
add
mov
xor
ret
scas
test
leave
inc
enter
and
sub
je
cmc
jnp
pop
jle
mov
loopne
dec
mov
push
outsb
jp
sub
jne
adc
inc
shl
jo
or
insb
mov
pop
sub
adc
lea
std
sub
cs
mov
jbe
cmp
xchg
push
pop
cld
loopne
jno
sbbb
xchg
lret
adc
pop
mov
cmpsl
les
xor
cli
add
xor
arpl
lret
xchg
js
xor
mov
mov
sub
push
mov
xor
pop
dec
cmp
cli
sbb
ja
and
adc
enter
lds
cs
adc
sahf
inc
repz
or
add
sti
cmpl
inc
jno
xor
add
sahf
xor
sti
fldt
mov
add
push
fcomps
fdivr
cmpb
cli
popf
mov
xor
je
lods
push
test
cmc
sbb
push
lds
enter
push
insb
cmc
inc
and
cmpsb
mov
imul
jne
add
mov
and
mov
incl
ds
mov
mov
lret
xchg
mov
cltd
ds
aaa
add
in
xchg
cwtl
lods
test
adc
idivb
pop
mov
jb
sub
push
adc
aas
mov
push
sub
xchg
xor
pop
sbb
sub
shr
popf
mov
and
aas
gs
movsl
inc
jmp
xor
ss
ficomps
mov
fbld
fistps
mov
outsb
xchg
test
pop
jge
hlt
lea
pop
out
and
pusha
je
and
jg
jmp
into
rclb
pop
pop
repnz
enter
inc
sbb
das
dec
xchg
daa
jecxz
outsl
pusha
xor
mov
jge
aas
pop
push
fistpl
push
ss
jmp
sbb
sarl
sbb
stc
cli
xor
dec
into
xor
mov
inc
jge
roll
int
push
cld
cmpsl
movsl
ret
jo
mov
cltd
repnz
fsubrl
push
daa
add
leave
jge
cs
adc
out
dec
jmp
test
xchg
inc
cmp
mov
and
push
push
inc
int
lret
lcall
jne
loopne
es
push
fstps
adc
cmovnp
hlt
lcall
mov
mov
les
das
rcll
or
daa
iret
pop
ljmp
stos
inc
fmuls
ret
inc
cmp
fistps
fbstp
add
insb
dec
stos
and
inc
xchg
aam
daa
mov
das
pop
stos
and
lea
je
jp
jbe
push
cmpsl
ret
cli
test
loop
push
gs
dec
sub
lahf
test
and
shlb
and
pop
fsubr
pop
test
cmp
in
pop
mov
adc
dec
mov
cmp
nop
int3
mov
cmpsb
adc
fildl
cmpsb
cs
pop
fs
daa
xchg
jg
push
cmp
sub
fs
jmp
mov
sub
stos
cld
and
aad
scas
jbe
test
daa
pop
dec
pop
subl
aas
in
orb
jmp
movsb
push
cmp
leave
xlat
lcall
das
clc
ret
mov
lcall
mov
call
adcl
jne
les
jl
aas
leave
mov
outsl
test
out
mov
insl
icebp
int
hlt
dec
mov
push
add
loope
xor
sbb
jne
jnp
cmpl
je
xor
sahf
jecxz
std
mov
pop
pop
push
clc
mov
cmpl
pop
inc
fidivl
push
push
repnz
add
mov
popa
arpl
pop
stos
rclb
in
xor
stc
loopne
add
inc
out
inc
mov
sub
ret
cld
aam
imul
or
cld
cmpsb
or
data16
jle
sbb
sub
jno
cmpsb
in
dec
mov
je
push
sub
rcr
xor
dec
insl
popl
fwait
push
xchg
or
clc
cmc
pop
mov
aaa
imul
aad
jle
test
nop
adc
test
rcrl
mov
test
or
nop
iret
sub
mov
fdivrs
cmp
fwait
push
mov
nop
and
mov
mov
out
in
insb
pop
scas
jl
jmp
push
ficompl
cmp
in
sub
and
pop
scas
mov
and
insb
mov
enter
js
scas
outsl
aam
cmp
jb
test
lods
js
fs
cmp
in
jmp
jnp
jmp
js
cmp
or
out
int
inc
pop
mov
mov
and
pop
ljmp
pop
mov
push
jmp
cmpsl
int
loop
test
out
push
or
imul
rcl
cs
push
inc
out
lea
mov
or
and
les
mov
or
jecxz
xchg
add
cli
mov
cmp
inc
add
daa
out
imul
push
xchg
fdivs
sahf
andl
test
mov
push
movb
pusha
jo
mov
sahf
xchg
pop
or
lahf
lock
out
mov
fiadds
std
addr16
mov
dec
cmp
adc
jecxz
test
lret
mov
test
xchg
pop
pop
orb
sbb
int3
and
icebp
stos
pop
loop
fildll
jg
dec
add
out
adc
mov
mov
repz
inc
cmc
xlat
movsb
std
jmp
xlat
movsb
js
mov
push
ss
adc
adc
cmp
pop
xor
or
sub
fmul
xchg
js
cld
mov
add
loopne
adc
insb
jns
xchg
pop
aad
xchg
cmp
mov
mov
xlat
jbe
fwait
xor
pop
xchg
push
pop
jns
rcrb
add
dec
stc
test
xor
lods
aaa
das
mov
cwtl
arpl
mov
or
arpl
jl
add
fdiv
adc
cmc
inc
mov
inc
aam
jecxz
push
es
mov
push
push
mov
call
test
movsl
adc
xchg
fadds
nop
add
jnp
xor
ds
cltd
repz
jno
cmp
repnz
cmp
mov
fcomp
jb
sti
imul
out
cmp
cmp
adc
mov
push
ss
imul
popf
xchg
sub
xchg
cmpsb
scas
or
sbb
dec
jle
and
ss
pop
and
ja
int
pop
mov
inc
sarl
xlat
aam
inc
xchg
jbe
xchg
aam
cmpsl
pusha
xlat
pop
fnstsw
inc
js
dec
adc
jl
xlat
add
mov
sub
fs
jecxz
xchg
and
and
ljmp
rep
pop
mov
leave
repnz
sti
jl
inc
push
out
xor
pop
pusha
in
test
fdivl
jge
nop
addb
ret
or
test
dec
sub
add
add
or
popa
int
sbb
arpl
fcomip
pop
daa
xor
mov
cmpsl
daa
and
sbbl
jnp
mov
mov
sub
es
aad
out
fstpl
push
popl
add
loopne
pop
mov
fbld
xchg
push
pop
push
push
jo
jge
rcrl
imul
mov
dec
rolb
push
ret
pop
fidivs
je
pminub
xchg
js
adc
jg
aad
mov
mov
leave
js
into
cmpsb
mov
cs
adc
xchg
nop
or
repnz
add
iret
cmp
dec
dec
lret
aas
clc
jecxz
add
dec
jne
mov
xchg
dec
movsl
xor
es
xor
mov
jae
cmp
leave
mov
cs
lcall
mulb
int
cmp
xor
aam
outsb
add
movsl
sbb
mulb
orb
outsb
daa
push
cmc
je
adc
jae
xchg
mov
pop
sbb
lcall
push
rcrb
mov
cmc
pop
in
jp
cwtl
aaa
inc
inc
int
push
push
mov
xchg
daa
push
into
sub
hlt
out
repz
push
hlt
jae
xchg
mov
ss
ja
test
push
push
negb
lcall
jo
ret
shll
push
push
dec
js
in
fcompl
mov
lds
jecxz
jae
and
cs
lds
sub
push
sbb
dec
loope
push
add
in
shl
jg
aam
mov
xlat
data16
dec
jo
sub
repnz
ror
jne
jns
cmp
insl
xchg
test
mov
fucomp
sbb
sarb
or
or
cs
jmp
jmp
push
sub
pop
lret
push
mov
stos
mov
add
dec
enter
es
cltd
adc
sub
adc
add
add
insl
test
mov
adc
enter
int3
adc
dec
repz
cmpsl
movsl
mov
cmp
xchg
out
loope
loop
pop
mov
mov
cmp
les
cld
push
dec
cmc
out
shrl
movsb
and
jge
daa
test
arpl
inc
or
push
and
mov
sti
pop
dec
sbb
or
sbb
push
push
add
sub
rcll
adc
pop
adc
adc
rcrb
jmp
xor
decl
mov
sbb
vmovd
xor
xlat
cs
sti
or
lahf
jnp
pop
pop
push
testb
aas
inc
scas
jbe
or
je
inc
in
add
movsb
cmp
jmp
repnz
mov
adc
mov
jbe
or
and
jo
gs
loopne
adc
and
ret
lret
repz
lods
push
cltd
lret
or
fwait
pop
mov
cltd
push
push
inc
jle
and
push
mov
das
enter
jno
out
in
jmp
add
xchg
push
dec
push
stos
dec
test
lahf
hlt
cli
cmp
push
sub
rclb
lods
xchg
xor
into
das
sbb
mov
jno
mov
xchg
ret
outsb
xorl
popf
ret
subb
rcr
js
popf
mov
adc
ret
push
loopne
adc
out
call
cmp
not
ljmp
xor
xchg
pop
sbb
fs
mov
fwait
mov
sbb
mov
mov
push
inc
ja
loop
lret
xor
addb
xchg
fs
adc
dec
movsb
mov
mov
cmpb
and
or
addl
sub
jmp
xor
push
mov
mov
jne
aas
and
mov
sub
mov
sbb
cltd
and
scas
movsl
or
xor
fcom
push
aas
imulb
mov
aam
xor
test
jge
adc
inc
or
add
mov
aas
pushf
cmp
dec
dec
adc
scas
jns
xor
push
into
inc
stos
sbb
pop
push
mov
cld
mov
in
sbb
dec
add
arpl
ds
cld
jbe
lods
aam
pop
mov
bound
stos
mov
test
sbb
push
or
dec
rcrl
ret
push
xor
movsb
insb
clc
jnp
jns
mov
pop
xchg
or
jmp
dec
ss
sbb
ljmp
fdivrs
jmp
jge
mov
push
leave
popa
adc
dec
repz
sahf
fldt
mov
or
lret
int
xchg
scas
out
lret
adc
pop
sbb
pop
and
rolb
inc
roll
call
xor
cltd
jmp
int
fimull
sbb
pop
mov
jl
mov
and
add
idivl
push
pop
xchg
and
xchg
sbb
ljmp
jecxz
cmp
pop
inc
xor
ret
iret
mov
dec
iret
out
inc
and
outsl
mov
cmp
cs
ss
cli
dec
repz
call
clc
adc
xchg
mov
sub
ljmp
movsl
mov
push
sbb
mov
into
rcrl
es
sub
or
cmc
dec
sbb
je
jp
sub
std
xor
bound
fbstp
loopne
pop
ss
push
inc
jmp
dec
fs
shl
cld
call
jg
pop
insl
loope
jno
daa
sbb
inc
mov
dec
aaa
test
shll
inc
enter
into
test
popa
sub
mov
mov
sub
pop
cli
push
gs
mov
mov
sbb
mov
push
pop
jo
jge
sbb
adc
adc
jg
push
jne
aas
outsb
mov
push
sarl
adc
insl
shrb
dec
addl
xchg
jle
jns
stc
loope
xchg
pop
fsubl
inc
loope
outsl
enter
mov
subb
lock
push
loop
or
cmpsb
lods
mov
mov
shrl
add
pop
cmp
in
popa
fisubl
push
jp
push
mov
xchg
xchg
cmpsl
push
inc
cltd
or
daa
cmp
xor
fistps
xchg
call
xchg
add
jle
mov
sti
jge
mov
bound
push
fldcw
inc
call
loopne
pop
test
jg
jno
or
cltd
cmpsb
ret
cmp
push
notl
divl
cmpsl
xor
cli
rolb
mov
out
add
and
jecxz
and
mov
ucomiss
arpl
cmpsb
push
dec
roll
and
test
pop
pop
or
jmp
ljmp
mov
lods
cmpsb
mov
xor
in
and
mov
sbb
adc
in
xchg
aaa
test
mov
ss
mov
rcrl
xlat
es
das
inc
xchg
mov
jno
pop
or
outsb
clc
sarb
cmp
push
out
test
popa
in
lods
les
fadds
ret
pop
dec
cmp
aas
icebp
pop
xor
pop
rcr
mov
mov
mov
mov
cmp
call
and
mov
loop
push
add
stc
sub
loope
sub
fcmovnb
std
adc
xor
enter
outsl
lock
sar
xlat
scas
stos
cmp
dec
jnp
fisubs
mov
int3
outsb
fs
pop
jmp
pusha
movsl
ss
dec
xchg
mov
fbstp
and
cli
rcll
fistpll
pop
out
and
push
aam
xor
and
cmp
mov
jbe
jl
je
test
aam
faddl
mov
mov
in
or
add
xchg
pop
popa
lahf
add
and
idivl
mov
int
push
icebp
mov
push
push
or
push
mov
jl
hlt
fs
xlat
adc
add
xor
nop
lahf
sbb
cli
cli
sub
cmp
cmp
and
shrb
and
aas
or
repz
jp
sbb
push
cltd
mov
pop
cmc
adc
pop
bound
push
mov
ds
adc
movlhps
dec
jbe
mov
arpl
push
mov
andb
arpl
lcall
sub
cwtl
pop
fisubl
in
movsb
out
shrl
aad
test
mov
mov
data16
loope
adc
bound
cmp
mov
adc
xchg
push
lods
lahf
jmp
lds
mov
fucomp
pop
adc
daa
in
dec
test
into
cmp
push
jne
xchg
dec
fs
stos
dec
xchg
test
push
ret
xchg
and
pop
xchg
stos
and
lea
enter
stos
xor
es
mov
pop
and
in
xchg
adc
es
jns
push
jmp
xor
mov
cli
jge
ja
aad
pop
sub
fidivl
inc
pushf
fistpl
in
xchg
mov
push
addr16
outsb
les
xchg
sti
mov
fldenv
dec
stc
iret
mov
jg
fcmovbe
ljmp
inc
jns
lds
fs
push
sbb
jecxz
adc
scas
inc
adc
ds
cmpsb
mull
jnp
into
push
adc
push
std
cmp
cmpsl
dec
mov
xor
inc
and
sbb
mov
jecxz
xchg
shrb
dec
pop
in
in
add
test
cltd
insl
xor
mov
addr16
xor
pushf
mov
les
jmp
inc
push
sub
mov
pop
cltd
inc
mov
xchg
xchg
cmp
fdivrs
cmp
ja
push
mov
sub
pop
dec
scas
cli
test
mov
push
pop
fsubrs
xchg
pop
out
and
cmp
int3
xchg
ljmp
adc
in
mul
lret
mov
adc
ljmp
lods
gs
rcr
xor
dec
rclb
sub
ret
sbb
cs
outsl
ficompl
jmp
leave
inc
imul
push
dec
lcall
sub
cs
add
add
dec
out
push
mov
leave
dec
mov
lahf
inc
pop
and
aam
push
mov
adc
sub
add
mov
inc
mov
mov
loope
or
int
mov
stos
pop
test
push
adc
int
push
rcrl
jl
jmp
mov
mov
mov
iret
inc
loope
pop
mov
inc
push
or
jo
scas
dec
inc
inc
mov
mov
divl
cmp
jl
lds
rol
aad
jno
jg
cli
aam
mov
xchg
xor
mov
ret
loop
stos
mov
xor
cltd
pop
xchg
sub
jp
pop
jae
xchg
mov
shll
adc
in
or
pop
clc
jae
icebp
push
inc
inc
mov
pop
add
negl
and
cmp
adc
stc
cli
fstpl
mov
popf
sbbl
pop
cmp
mov
orb
adcl
xor
loopne
cmp
jb
or
icebp
sub
enter
mov
pslld
jno
pop
jb
xchg
into
adc
in
pop
dec
sbb
cli
sub
fwait
mov
pop
or
and
sbb
shr
cmp
lret
incl
out
adc
mov
jbe
push
adc
dec
or
or
das
cmpsl
test
int
int3
or
push
xchg
mov
dec
aad
push
cmp
outsl
inc
aaa
fwait
mov
mov
adc
pop
out
stos
iret
rcll
test
or
aad
test
jmp
mov
pop
aad
ret
in
imul
or
push
xor
outsl
cld
xchg
insb
mov
dec
sub
dec
jbe
lahf
test
enter
mov
popf
pop
scas
sub
xor
cli
jo
mov
mov
jle
cmpsb
cli
add
icebp
push
xchg
fidivrl
lcall
xchg
jecxz
cld
mov
jae
add
pop
scas
fs
pushf
sub
ss
sub
mov
push
mov
je
xchg
ficoms
sbb
mov
mov
subb
sarb
out
adc
jne
cmp
mov
mov
in
push
test
mov
sbb
mov
lea
js
or
cmp
test
sti
out
and
arpl
call
popf
pop
push
mov
xchg
or
cmp
inc
sahf
xchg
sub
sti
aam
lea
insl
pop
les
inc
pinsrw
and
sbb
pop
out
les
sub
std
insl
iret
mov
loop
sti
sub
movsl
pop
sub
jg
mov
mov
popa
addb
xchg
adc
dec
in
cmp
in
cmp
cld
jno
mov
dec
daa
repz
daa
test
push
cld
jne
mov
arpl
mov
pop
push
repnz
lds
sti
data16
cs
jne
pop
mov
ficomps
outsl
mov
fsts
adc
sub
jg
ljmp
dec
repnz
sub
jb
xchg
imull
outsl
mov
cli
pop
jle
push
jo
cs
jp
out
jbe
mov
jno
inc
mov
add
push
lahf
inc
mov
dec
rolb
mov
pop
sub
fisttpll
xchg
jnp
icebp
test
xlat
sarb
lret
pop
movsl
mov
lea
push
push
arpl
pop
in
lcall
or
arpl
pop
inc
adc
mov
lcall
dec
cmpsb
repz
push
shl
roll
xchg
lock
mov
imul
xor
mov
fimuls
addb
mov
jecxz
jg
add
mov
cmpsb
push
xor
testl
mov
int3
mov
xchg
jle
outsl
test
xchg
adcl
sar
mov
inc
mov
hlt
mov
stc
bound
nop
mov
inc
lds
push
pop
cmp
and
insb
loopne
mov
mov
test
or
ss
pop
fcoms
inc
sbbb
add
fnstsw
push
rorl
loopne
add
pop
and
and
or
dec
mov
or
stc
stc
ret
lcall
and
aas
sub
jns
mov
jmp
and
popf
testb
jmp
xchg
aam
sti
xor
xor
loop
pop
lcall
mov
into
push
roll
lea
sar
pop
jnp
pop
mov
xor
cmc
push
outsb
in
test
adc
xor
or
sbb
in
sub
adc
xchg
pop
cpuid
lret
ret
push
push
mov
into
into
cs
popa
cmpsl
and
test
jbe
dec
out
mov
pop
dec
push
push
sub
aam
push
std
xchg
mov
outsl
add
mov
jne
popa
daa
inc
pop
mov
jb
cmp
pop
jge
dec
cmp
jl
dec
lcall
movsb
mov
mov
jo
sub
and
mov
or
inc
xor
in
mov
out
adc
push
lcall
push
mov
mov
fucom
sub
xchg
aas
xor
pusha
jbe
inc
shl
xchg
xor
cmp
push
adcl
adc
aad
test
dec
jo
sbb
in
sbb
fdivrs
xlat
and
add
enter
fsubs
xor
cltd
push
xchg
or
mov
adc
xor
rolb
inc
sahf
jle
lods
lock
sete
pop
or
cmc
xor
xchg
scas
imul
ret
add
adc
out
xor
insl
das
test
mov
stos
or
sub
sbb
sbb
mov
mov
dec
jae
jns
pop
jno
jo
addb
nop
pop
cli
ret
push
test
scas
movb
mov
cwtl
push
enter
pushf
adc
ljmp
into
dec
xlat
dec
push
push
sbb
fnsave
xor
movsl
scas
push
dec
aad
sbb
sub
xlat
pop
xor
imul
xchg
mov
ja
nop
mov
jp
xor
test
cld
lcall
bound
fwait
insl
outsl
push
add
inc
xchg
test
inc
decb
mov
mov
dec
and
inc
leave
in
mov
ja
and
inc
rcll
fistpll
adc
jg
pop
mov
xchg
mov
push
lret
addr16
cld
fiaddl
or
fiaddl
or
shrl
pusha
jmp
in
pop
lods
gs
xchg
add
lock
lods
pop
ss
adc
pop
loopne
insl
xchg
sahf
mov
in
fldcw
xchg
jbe
sub
icebp
arpl
out
sar
dec
push
cmp
fiadds
dec
sub
sbb
insb
xor
inc
popa
push
sahf
and
jno
push
dec
test
std
and
data16
push
pop
insb
add
xor
std
test
fldenv
into
popf
mov
dec
pop
ret
xchg
movsl
push
xor
adc
cmp
loop
or
jne
sbb
mov
adc
push
popa
fs
mov
xchg
cwtl
enter
jne
int3
cmc
jbe
cmpsl
loop
and
dec
test
push
add
cmpsl
cltd
cmp
dec
int
push
mov
sub
out
fistpl
mov
pop
iret
pop
push
mov
and
jg
stos
lahf
clc
test
lock
mov
clc
rolb
pusha
leave
inc
ficomps
jb
xor
mov
sub
mov
popa
inc
or
ficoml
dec
scas
and
push
fcmove
stos
xor
imul
mov
icebp
pop
test
push
xor
stos
mov
into
lret
xor
cmpsl
enter
dec
or
aad
xchg
lock
loop
enter
cmpsb
int
push
fcompl
mov
jne
out
jmp
xchg
inc
sahf
bound
hlt
mov
fwait
out
leave
push
xor
xor
mov
pusha
mov
or
sbb
pushf
daa
mov
sub
in
xor
cmovp
mov
jae
and
jg
ret
lret
ss
inc
iret
loope
out
fcompp
cmp
xchg
leave
pop
lods
jmp
imul
push
push
int3
insl
xlat
mov
les
add
mov
sbb
movsb
mov
in
fisubrs
adc
xlat
mov
sbb
xchg
lods
push
adc
lds
dec
jecxz
data16
mov
mov
cmpsl
mov
icebp
nop
into
mov
sahf
dec
xchg
mov
add
mov
sub
sbb
cmp
std
mov
push
fimuls
icebp
icebp
fwait
xorb
add
insb
jno
mov
mov
mov
mov
shrb
jmp
add
inc
pop
mov
mov
js
add
ss
lret
fisttps
push
dec
out
sub
pop
jo
subl
push
push
pop
mov
scas
js
inc
xchg
and
xchg
mov
lods
mov
shrl
xchg
dec
clc
fistps
arpl
xor
push
or
out
int3
push
std
aam
test
stos
mov
out
fistl
cmp
xchg
cmp
nop
cmp
into
fwait
repz
sub
test
test
icebp
xchg
das
or
jp
icebp
jb
or
test
mov
mov
js
fcmovnb
sub
mov
pop
pop
pushf
popf
out
pop
add
lret
pop
cmc
xor
dec
scas
xchg
leave
sbb
sbb
mov
and
pop
dec
ret
mov
jge
call
fstl
cltd
test
push
xchg
insb
hlt
in
mov
rcll
mov
pop
lcall
scas
loopne
ljmp
cmp
cmp
sbb
cld
in
aas
mov
ret
xchg
sti
cmpsb
fs
push
divb
mov
fcom
lods
xor
pop
movsl
mov
and
and
xchg
es
dec
push
and
mov
sub
js
inc
in
pop
cmp
xchg
add
stos
inc
out
sub
jcxz
mov
xor
stos
sbbl
leave
mov
pushf
mov
stc
xchg
roll
aad
je
mov
jp
sbb
bnd
iret
fnstcw
mov
mov
or
leave
loopne
arpl
int3
enter
xor
fisubs
iret
adc
mov
jo
lods
xor
call
repnz
outsb
es
cmp
mov
icebp
mov
push
cmp
out
sbb
adc
jl
inc
dec
cmc
mov
and
xor
dec
push
inc
je
pop
pusha
mov
push
xchg
sub
inc
mov
push
clc
loopne
cmp
adc
mov
mov
lods
inc
mov
push
mov
xsavec
sbb
and
and
mov
jmp
into
faddl
std
mov
or
out
push
js
lret
leave
cltd
cmp
and
xor
gs
stc
mov
xor
nop
dec
fsubrs
ljmp
js
mov
outsb
mov
ds
pop
pop
int
sub
fxch
cmc
fcmovnu
insl
xor
jg
xchg
xor
lea
lahf
popl
push
xchg
xorl
cld
mov
sar
daa
rclb
cmp
or
pop
or
sub
bound
push
push
cmp
insb
dec
add
lahf
iret
sub
push
cmc
fwait
xchg
and
testb
lods
mov
adc
leave
jmp
shrl
mov
xchg
add
enter
push
ret
push
les
and
sbb
cli
push
jo
push
pop
imul
xor
mov
push
data16
jae
sub
cmc
movsb
jne
out
loope
sub
in
or
int3
sbbl
mov
cmp
and
in
pop
push
test
push
testb
rcll
neg
mov
push
push
pop
and
xchg
cmp
mov
scas
cmc
faddl
pop
add
loope
jb
ja
clc
sub
aaa
idivl
mov
loopne
mov
pop
jno
clc
in
jg
sub
aas
xor
std
jecxz
mov
jp
fldenv
push
mov
sbb
push
jnp
sub
jmp
add
ret
popa
out
outsb
pusha
stos
movsb
add
inc
fdiv
jp
add
sbb
xor
mov
ss
adc
push
mov
push
in
scas
xor
in
pop
xchg
mov
add
and
mov
shll
xor
jae
and
push
std
jmp
xchg
dec
xchg
pop
cs
mov
test
xchg
add
shrb
xchg
into
push
mov
mov
xor
push
adc
add
mov
arpl
cmp
scas
rorb
xchg
sub
outsl
daa
jnp
jnp
mov
lcall
mov
add
mov
xor
inc
mov
mov
iret
xchg
add
add
push
mov
scas
dec
cmc
fwait
icebp
adc
repz
add
cs
aas
push
lods
push
ret
mov
rcrl
jmp
cmp
icebp
push
cmp
xchg
xchg
imul
outsb
cld
and
push
fimuls
js
mov
mov
adc
xor
mov
pop
daa
lds
jge
inc
lret
or
and
call
xchg
adc
and
ret
xlat
inc
outsl
sbb
and
mov
sti
scas
push
xor
inc
lcall
ljmp
addr16
rcr
jns
pop
fisubrl
add
add
jg
sub
xor
jg
xor
iret
jno
testb
notl
je
loope
les
fldcw
dec
fstpt
adc
test
nop
pushf
push
jbe
sub
cli
ss
cmpb
xor
in
iret
lods
sbb
sub
jno
not
repz
and
lds
jae
mov
fsubrs
jo
daa
aam
adcb
mov
mov
dec
popa
lret
test
mov
sbb
pop
xchg
add
inc
cltd
mov
pop
aas
mov
jge
and
lret
dec
insl
gs
and
loope
mov
test
outsl
xchg
xchg
andb
mov
mov
jl
adc
insb
xchg
lcall
mov
mov
jns
and
mov
mov
xchg
sbb
xchg
addb
int
or
sbbb
jge
pop
into
pop
test
push
pextrw
xchg
xchg
mov
test
push
sbb
lcall
and
sbb
test
jg
jge
push
cwtl
push
inc
xor
cwtl
nop
sahf
mov
mov
xchg
mov
add
stc
inc
aad
mov
std
repnz
sub
add
mov
cmp
subb
sbb
inc
loope
mov
sti
sbb
jp
cmc
push
sub
into
mov
nop
pop
adc
sub
inc
sbb
ja
in
mov
sbb
push
fwait
pop
xchg
mov
movsb
adc
push
addr16
pop
or
adc
xchg
fidivrl
cmp
ret
jnp
add
int
and
add
adc
fldl
mov
and
loopne
mov
pop
adc
xor
mov
fldln2
fisttps
outsb
int
lea
push
stc
xor
fadd
jns
and
mov
pop
jmp
dec
cmpsl
sahf
daa
sbb
pop
movsb
bt
cli
outsl
int3
jbe
push
lahf
adcb
and
inc
push
mov
xchg
mov
jg,pn
xchg
mov
jecxz
jne
xor
pop
add
ja
sub
out
xchg
mov
add
jmp
int
icebp
push
jne
int3
pop
leave
iret
lods
push
push
mov
test
and
stos
andb
ljmp
push
inc
mov
cmp
sar
imul
scas
xlat
inc
enter
inc
inc
cs
push
mov
add
push
add
xchg
ljmp
ja
cltd
adc
pop
mov
dec
cmp
jo
jp
testb
in
pop
outsl
iret
jno
mov
fsubr
jb
sbb
movsl
pop
and
in
pop
or
shrl
lcall
lods
cmp
jbe
out
mov
xchg
outsb
cld
cmp
pop
push
setl
dec
fdivs
incl
mov
ret
inc
pop
jns
dec
sarb
and
out
jbe
jl
stc
repnz
mov
insb
jg
scas
enter
fwait
push
and
cmp
dec
pop
loopne
push
jo
pop
or
sub
cmp
std
pop
xor
std
jmp
mov
in
or
pop
mov
xor
shrb
sub
testb
mov
arpl
stos
es
lcall
pop
ret
add
jge
std
push
sbb
inc
mov
push
xchg
stos
out
fmuls
xlat
fwait
dec
arpl
inc
pop
in
jnp
jmp
out
push
lahf
je
decl
cmp
ret
rcr
cmpsb
push
pop
gs
or
xlat
fcmovnb
cmp
rcll
dec
test
cmp
testb
push
sub
push
mov
scas
adc
fistpll
pusha
dec
clc
xchg
add
popf
pop
cwtl
cs
adc
jmp
mov
adc
loop
inc
fsubr
inc
jge
shl
out
inc
xchg
addr16
mov
xchg
sbbl
dec
or
imul
enter
sbb
jl
mov
mov
xchg
ds
fnstcw
push
mov
in
mov
js
push
ss
fwait
hlt
sub
dec
repz
cmpsl
arpl
scas
mov
dec
sub
cvtdq2ps
pop
rcl
popa
ljmp
xor
test
mov
xchg
mov
pop
dec
out
and
fucomi
notl
sub
movsb
repz
dec
add
and
xor
push
xchg
bound
insl
int
pop
arpl
roll
cld
or
out
inc
iret
in
imul
int
inc
or
jl
lds
outsb
les
pushf
sbb
xchg
cs
cli
pop
jge
shrl
xor
gs
jns
mov
jo
pushf
ss
scas
rorl
jmp
popf
hlt
pop
or
jl
loopne
inc
out
shrl
ds
dec
repnz
mov
sub
enter
xor
sub
iret
scas
and
xchg
ds
cltd
and
iret
test
add
jo
xor
adc
jge
dec
test
jmp
push
pop
jbe
push
jecxz
sti
push
jge
xchg
loop
adc
loop
xlat
jg
adc
sbb
mov
std
lea
jle
fwait
shrb
adc
cld
jp
outsb
cli
mov
cwtl
pop
push
lret
push
test
xor
xchg
sahf
mov
std
call
xor
insl
scas
cli
and
ljmp
idivl
ret
cmc
inc
leave
out
daa
lock
inc
in
stos
jo
xchg
icebp
cmp
call
lcall
mov
arpl
cs
iret
inc
imul
jle
ss
shl
mov
in
lret
and
mov
stos
jge
addb
jmp
mov
cs
mov
test
xor
imul
and
xor
pop
mov
pop
ret
enter
lret
push
gs
push
jp
sbb
test
insl
sbb
dec
mov
pop
data16
xchg
mov
dec
adc
jle
icebp
scas
mov
insl
inc
es
or
xor
int
mov
jbe
mov
adc
sbb
das
ds
out
cmp
jns
sbb
fsubl
mov
mov
cmp
imul
popf
jns
inc
cld
and
ljmp
inc
int
inc
bound
jne
mov
push
out
js
xchg
cmp
cmp
inc
call
pop
sub
stc
int
xchg
pop
mov
dec
push
add
inc
cmp
jb
test
pop
xchg
js
adc
adc
push
xor
cmp
inc
mov
test
ljmp
mov
loope
dec
pop
outsl
lds
gs
outsl
sbb
lret
jp
jmp
ljmp
lods
shl
pushf
and
test
cltd
test
mov
sub
call
scas
iret
mov
add
fcmovbe
cmp
sub
mov
cmp
pop
out
out
cmp
icebp
shlb
sbb
sbb
bound
dec
aaa
sub
mov
shrb
lock
push
repnz
sbb
inc
mov
inc
pop
mov
outsl
cwtl
xor
jne
cmc
xchg
sub
sbb
adc
sti
jae
repnz
pop
notl
cmp
adc
into
jecxz
push
sub
jne
jns
addr16
ja
inc
stc
mov
in
cmpsl
pop
sbb
jne
xor
mov
stos
cmp
repz
mov
mov
out
scas
add
xchg
jb
inc
ret
add
mov
sbb
insl
testb
jmp
clc
cmp
adc
shll
getsec
mov
and
lahf
inc
sbb
sub
jle
push
mov
fidivrl
mov
daa
aaa
das
xor
xchg
daa
divl
xor
sti
js
mov
loopne
repnz
sti
gs
mov
lock
sbb
int3
push
push
popf
mov
les
int
jns
hlt
mov
push
mov
push
shll
aad
ficompl
lret
xchg
push
inc
cmp
cwtl
pusha
test
fwait
mov
arpl
pop
mov
mov
int3
div
mov
pop
mov
pop
adc
add
popf
fstpt
sbb
mov
cmpsb
outsl
cmpl
imul
subl
idivb
cmpl
jo
jg
mov
stos
xor
into
xchg
push
ljmp
xlat
pop
in
pop
adc
pop
mov
sub
mov
mov
shll
mov
fidivl
jg
jecxz
or
idivl
bound
bound
ljmp
jo
adc
mov
loope
mov
push
and
lahf
jnp
push
mov
jno
push
jo
aad
imul
and
xchg
iret
jg
xor
sub
mov
xor
push
adc
fimuls
sub
jae
jne
daa
sub
fwait
leave
punpckhwd
push
xor
jo
cmpsl
repnz
jno
jg
mov
add
iret
jmp
push
aaa
cmp
fildll
xchg
repnz
ret
fisubl
in
xchg
add
inc
scas
push
and
xchg
jae
into
add
push
dec
outsl
stos
mov
pushf
lret
ret
sub
push
xorl
inc
test
mov
das
and
jns
out
sub
sub
pop
imul
adc
aad
jb
mov
jmp
lcall
jns
cmovl
push
jbe
xchg
movsb
imul
adc
jae
fsubs
pop
lahf
mov
jbe
loop
mov
jl
mov
push
mov
dec
ficomps
flds
sahf
inc
pop
test
gs
cs
and
add
insl
sahf
xchg
repnz
sub
cmp
add
and
cmpsb
xor
pushf
mov
cmp
insb
jp
loop
repz
dec
shrl
mov
inc
nop
pop
adc
in
sahf
out
movsl
fisubl
clc
imul
lcall
lahf
or
repz
xchg
insb
add
sarl
fisubrs
lds
ret
fcompl
fsubs
cmpb
mov
adc
movsl
mov
add
dec
inc
cmpsl
imul
xor
jne
xorb
jns
pusha
rcr
sub
xchg
cmpsl
mov
or
out
and
cmp
jb
in
std
mov
push
xchg
sbbl
lods
dec
aas
les
ss
xor
mov
push
subb
pop
inc
rcrl
sbb
pushf
ret
arpl
dec
cmc
mov
xchg
cs
cmc
sbb
loopne
in
cmp
insb
repz
jmp
ss
jb
adc
xor
pop
in
jge
cmpsl
xchg
push
testl
adc
es
lahf
xchg
jne
imul
cmp
cld
or
xchg
jbe
addb
adc
sti
rcr
cmp
sbb
repnz
jae
push
movsl
shl
shll
cmc
mov
leave
outsb
cmc
in
jbe
ret
sub
mov
pop
adc
mov
pop
rcrb
in
test
fsubs
xor
xor
adc
arpl
inc
adc
lock
lret
inc
adc
cmp
mov
orl
sub
and
fdivl
jle
xchg
mov
shrb
pusha
or
ret
inc
push
or
mov
sbb
and
mov
xchg
sbb
add
cmp
jle
mov
rorb
jns
loopne
mov
xchg
fstpl
out
popa
push
mov
add
sbb
out
add
pop
or
imul
les
sbb
mov
aaa
mov
inc
mov
or
xor
cli
xor
jmp
insl
std
mov
cmc
inc
xor
add
jg
call
mov
cs
adc
dec
pop
sbbb
jnp
mov
fmuls
push
jp
xor
out
sbb
mov
rcr
adc
loopne
sbb
fdivl
out
dec
pop
sub
insl
sbbb
repnz
push
add
jp,pt
xchg
mov
dec
js
out
pop
xchg
or
lods
jecxz
pop
xor
jns
pusha
syscall
dec
or
cmp
dec
and
cmp
mov
mov
int3
jecxz
jmp
adcl
and
mulb
cmp
pop
mov
lods
xchg
inc
js
lahf
jne
fsts
int3
mov
sub
out
js
int
adcl
xorl
sbb
aaa
fidivrs
push
cltd
jmp
and
divb
mov
xor
xor
loop
mov
mov
jno
dec
loopne
test
xchg
rcrb
out
insl
push
lods
inc
inc
gs
jno
add
xchg
inc
in
fcoml
mov
xchg
dec
xchg
clc
xchg
pop
xor
xor
push
cmp
mov
jbe
clc
add
add
inc
call
pusha
ret
cmp
rcl
pminsw
and
sbb
mov
mov
dec
andl
cmp
adcb
out
out
pop
iret
sub
dec
sbb
xor
lret
push
scas
arpl
mov
cmc
xchg
cmpsl
loopne
ja
fsubrl
not
mulb
sbb
cmp
int3
out
fimull
sub
and
push
clc
or
or
mov
sbb
fdivrl
add
add
loop
fisttps
test
sbb
lock
push
push
into
js
xchg
cwtl
sub
cmp
pop
xchg
mov
xchg
call
movsl
dec
out
mov
and
xchg
out
add
mov
mov
lods
sbb
scas
cwtl
ficomps
inc
xlat
sbb
jnp
test
push
pushf
scas
rorl
xor
sbb
adc
lock
mov
mov
mov
pusha
jle
movsb
mov
out
je
fs
mov
out
popa
gs
push
testb
popf
mov
push
mov
jne
ljmp
hlt
jecxz
adc
push
ja
lock
adc
or
jl
fs
iret
mov
add
jg
xorb
mov
cld
mov
jmp
shll
xor
jbe
and
and
into
fcoms
aam
js
or
cmpsl
movsb
mov
add
jecxz
dec
sub
in
fisubrs
xchg
dec
cmp
mov
shrb
std
nop
jge
jmp
push
shll
sbbb
int3
into
repz
adc
rclb
dec
loope
out
mov
push
add
test
inc
sbb
add
mov
movsl
pop
inc
inc
out
push
in
sarb
mov
popa
mov
mov
mov
or
xchg
xchg
scas
or
popl
loopne
adcb
dec
or
scas
add
mov
gs
lea
negb
push
and
sahf
push
test
ss
std
xlat
sbb
pop
or
mov
xchg
fmull
mov
dec
cltd
ret
in
sbb
jnp
bound
stc
out
aaa
dec
jnp
sbb
fxch
dec
ja
andl
mov
js
clc
lret
gs
jg
cli
insb
cli
xchg
inc
sbb
js
inc
mov
mov
fcomps
andb
ds
inc
xchg
adc
repnz
stos
cmpsb
iret
sbb
orb
mov
andl
adc
movsl
cmovbe
jg
cltd
out
arpl
inc
cmp
sbb
ss
cmp
movsl
or
aaa
mov
push
leave
aaa
popf
aad
cmpsl
sub
ja
xor
aam
mov
cmp
mov
jmp
out
pop
mov
sub
pop
xlat
js
pop
push
int3
lods
movsb
shlb
adc
mov
inc
dec
fcoml
pop
test
cmp
push
jo
or
jo
or
cld
mov
xor
mov
loop
xchg
sub
or
ljmp
mov
std
inc
sbb
xchg
dec
jnp
movsl
jp
test
ljmp
mov
jmp
push
sbb
pop
jae
jmp
rcll
into
fnstcw
popf
stos
push
pop
and
sbb
inc
fdivrl
and
dec
inc
pop
aad
lea
loope
pushf
cli
addr16
inc
or
jg
xor
addr16
mov
popf
pop
in
ret
mov
add
dec
xchg
xor
xor
add
mov
lds
inc
cmp
mov
adc
sbb
data16
lock
dec
sahf
add
mov
fldl2e
pop
push
xchg
push
cmpsb
mov
add
fsubl
ja
pop
in
mov
jno
pushl
enter
cwtl
xchg
popa
ljmp
dec
sarb
pop
adc
clc
ret
pop
fldcw
pusha
cli
mov
jnp
cmc
mov
jnp
cmc
push
faddl
push
xor
xchg
inc
aaa
stos
loopne
icebp
or
jo
sub
sbb
adc
sti
xor
fstps
inc
outsl
mov
sbb
sub
repz
or
xchg
movsl
xchg
cmp
lret
call
mov
pop
fldenv
xor
aad
cmpsl
inc
inc
aas
add
mov
jle
push
inc
dec
push
cwtl
xlat
pop
imul
ss
inc
lock
cmp
mov
cwtl
xchg
incb
ljmp
push
push
cld
mov
cs
fcomi
jle
cmpsl
push
clc
mov
lock
mov
addr16
orl
xchg
rolb
mov
inc
lea
xor
pop
and
inc
fwait
es
cmp
sbbb
cmp
push
xorb
sbb
mov
sbb
les
int3
cltd
mov
push
cmp
inc
aas
inc
mov
sti
ret
or
loop
int
or
movb
fsubrl
xor
lea
mov
add
cld
mov
test
inc
fistps
xchg
ds
jbe
and
dec
jp
inc
icebp
imul
clc
push
mov
add
repnz
add
mov
or
mov
lea
push
dec
sub
popa
repnz
les
out
push
pop
frstor
sub
sti
lahf
mov
nop
push
jg
jg
mov
mov
xchg
pop
out
les
lods
mov
nop
xor
outsl
loopne
push
jg
mov
push
leave
sbb
scas
dec
dec
popa
mov
dec
or
sbb
fnsave
pop
sub
movsl
jle
fists
jb
std
popa
fsubrl
ja
rorb
add
sub
bound
sub
in
jnp
pop
mov
pop
cwtl
add
cmp
bound
mov
pushf
ljmp
cmp
std
cmpsb
inc
call
adc
out
sub
or
jp
arpl
imulb
or
add
inc
lret
sarb
out
jmp
inc
je
sarb
jns
push
inc
aas
ret
jb
mov
ss
in
xchg
add
mov
cwtl
sub
xchg
cltd
lahf
fidivrs
cmpsl
mov
stos
out
xchg
stc
int3
movsb
dec
enter
adc
mov
cli
jns
mov
and
push
cmp
lock
sti
cmpsb
jnp
inc
adcb
xlat
ret
fmuls
xor
mov
jne
in
clc
int
push
jge
mov
sub
ds
mov
mov
xlat
or
xor
lock
roll
pop
out
loop
jno
pop
test
lds
adc
and
mov
xchg
jecxz
test
mov
sbb
pop
pmovmskb
mov
lret
sub
dec
clc
xor
xchg
roll
xchg
xchg
shlb
outsl
push
xchg
mov
adc
stos
movsb
lods
mov
sub
mov
pusha
je
push
push
jle
or
mov
pop
jle
out
cmp
leave
dec
inc
stc
pop
pusha
cmp
pop
movsb
dec
dec
jle
out
jo
mov
out
ss
mov
or
fisubs
adc
push
popf
pop
mov
and
mov
push
lock
push
cmpsl
fdivl
pop
mov
test
inc
adc
das
addr16
shrb
lahf
jb
mov
xor
ja
jo
jmp
mov
fstp
pop
jmp
lahf
xor
push
orl
dec
sub
orl
repz
call
loopne
mov
fsts
cmp
push
enter
pop
iret
jns
sahf
sbb
mov
ss
pop
fs
push
ficompl
mov
aad
mov
loop
dec
xchg
mov
cld
pop
stos
push
pop
lds
inc
and
out
add
sub
sbbb
addr16
push
popa
ret
pushf
insb
jbe
shll
pop
or
sub
and
mov
jns
pop
xlat
xchg
dec
pop
mov
stc
fwait
inc
outsb
cmpsl
ljmp
cmpsl
and
jo
jb
loop
pop
cmc
int3
lods
rorl
sbb
xor
sub
loopne
fdivs
addb
shrb
mov
mov
lret
int3
inc
stos
sbb
mov
cld
leave
and
xor
inc
dec
jg
and
mov
add
sub
ss
repz
jo
repnz
test
cmp
sub
mov
shll
scas
push
dec
addr16
into
out
std
call
cmp
xorl
fsts
dec
sub
jge
mull
cli
fwait
mov
adc
pop
ret
mov
cmp
test
sub
dec
sbb
mov
les
sbb
mov
xchg
ss
inc
mov
sbb
add
add
pusha
fnstsw
and
dec
mov
in
int
or
loope
into
sbb
mov
aad
jmp
xor
pop
push
push
in
das
dec
pop
fwait
add
xchg
out
rep
test
rclb
xlat
repnz
loopne
dec
or
jns
out
mov
es
aas
mov
cmp
and
rcr
adc
fwait
cmpl
popf
jne
fistps
or
hlt
sub
stos
aaa
jnp
sarl
cmp
aad
jno
ljmp
cwtl
enter
fstpt
cmp
push
mov
loop
sub
mov
cld
pop
arpl
jbe
pop
lods
lods
cltd
xchg
fiaddl
cmp
pop
dec
pop
sti
add
pop
or
sub
mov
das
mov
jle
or
roll
js
dec
sub
repz
pop
mov
mov
adc
xor
dec
jge
add
cmc
repz
sub
sbb
pop
test
hlt
mov
dec
mov
lea
inc
mov
sbb
push
jg
adc
mov
rol
cmp
xor
in
mov
sbb
pop
cmp
aam
add
and
insb
lea
push
cmp
nop
icebp
sarb
mov
fdivl
aas
mov
fwait
cmp
push
xchg
je
mov
dec
call
outsl
pop
dec
dec
sti
test
pop
out
cmp
loopne
imull
aaa
cmpsb
xchg
and
inc
lods
test
xor
in
push
incb
mov
jo
mov
ja
stos
jno
mov
icebp
mov
insb
in
les
jg
lret
pop
adc
aad
mov
ret
insb
pop
dec
fs
sarl
movsl
jno
fisttps
jle
sahf
mov
or
imul
pop
movsl
dec
je
scas
sbb
mov
sbbb
and
lds
cli
daa
cmp
in
mov
xchg
mov
and
scas
mov
mov
out
push
jno
xor
jb
int
das
xchg
sbb
and
scas
test
pop
dec
xor
jae
jne
mov
fsubr
pushf
scas
dec
mulb
pop
aaa
sub
enter
jecxz
scas
xor
xchg
fcoms
rcl
mov
push
scas
xorl
mov
sbbb
repz
add
jge
mov
inc
pop
lret
mov
jecxz
test
dec
pushw
xlat
mov
mov
jge
xchg
jae
mov
ret
jne
sbb
xor
daa
adc
mov
rcrl
fnstcw
pop
jecxz
cld
sbb
mov
aaa
les
and
push
movsl
jmp
push
lret
out
inc
movl
inc
inc
xor
sarl
icebp
outsb
or
test
fs
xchg
adc
inc
pop
in
dec
stos
aas
add
aad
push
and
add
xor
data16
mov
cmpsb
mov
inc
xchg
xor
mov
cmpsl
lahf
jne
mov
cmpsb
xchg
push
in
mov
xor
sub
mov
test
sub
mov
filds
insb
ds
es
and
mov
jl
jnp
outsl
sub
xor
aaa
jmp
sbb
adc
gs
ret
mov
rorl
imul
inc
mul
rcll
pop
movl
and
sti
outsl
push
gs
adc
cmp
or
insl
mov
gs
ja
fs
leave
adc
dec
jb
xchg
lahf
cmp
inc
in
or
cli
xchg
jg
cmp
cmp
imul
pushf
mov
pop
test
mov
mov
mov
call
mov
push
xor
nop
dec
mov
dec
pop
sbb
pusha
inc
xchg
cmp
sub
inc
adc
xor
ljmp
ret
jl
push
inc
in
scas
ja
pop
pop
push
ss
in
xor
mov
cmp
adc
cmp
sti
dec
enter
sbb
ror
leave
pop
inc
xchg
jne
dec
mov
adc
xor
icebp
int
sub
or
push
pop
jl
and
sbb
icebp
xchg
xchg
lea
sbb
mov
test
sbb
lahf
dec
xchg
push
jl
xor
sbb
je
pop
xchg
adc
insb
fcomps
sbb
push
push
xor
dec
cmp
into
mov
jno
fidivrl
inc
jbe
int3
dec
sbb
arpl
sbb
loope
ja
jmp
jp
pushf
jg
push
sub
insb
sbb
jg
push
and
push
ret
fdivs
mov
and
movsb
pusha
sti
test
xor
jne
jb
push
out
sub
int3
outsb
es
outsb
mov
adcl
xlat
mov
mov
mov
iret
or
push
jb
and
mov
mov
adc
js
dec
insl
ficompl
adcl
pop
mov
ja
jl
ret
jnp
inc
and
fsub
daa
mov
out
mov
dec
ss
sub
testb
pop
mov
pop
pop
pop
xchg
xlat
add
ss
pop
inc
insb
std
xor
fwait
aaa
mov
loope
jo
cltd
movsb
pop
xchg
enter
fisubl
jns
out
daa
jns
out
imul
repnz
iret
xor
mov
cs
mov
or
and
mov
mov
adc
jmp
sbbb
cmp
xchg
add
ret
mov
cmp
jecxz
adc
aaa
rclb
dec
or
sbb
mov
sbb
dec
psrlw
mov
adc
loope
bound
adc
pop
fsubl
sbb
outsb
mov
incb
dec
adc
add
push
jp
jno
js
add
or
into
pusha
idivl
ret
push
scas
test
ret
sbb
popa
sbb
int3
insb
fistps
mov
imul
inc
rcrb
dec
pop
mov
fisubrs
add
mov
or
ljmp
fisubrs
stos
fmuls
sbbl
sub
pushf
xor
sub
fs
mov
sub
mov
std
xchg
sub
aad
test
cmp
into
jmp
add
mov
sahf
mov
movsb
rcll
mov
aas
faddl
xchg
sbb
cwtl
push
mov
mov
loop
insb
repz
and
dec
add
mov
xchg
jns
mov
xchg
jne
sub
mov
mov
inc
insb
jbe
enter
or
cld
xor
xchg
push
clc
std
lds
lods
stos
cwtl
cli
pushl
xchg
mov
test
mov
shlb
mov
test
scas
xchg
lret
icebp
push
adc
frstor
aas
dec
addr16
ret
mov
jle
pop
adc
jns
xchg
or
loop
ss
ret
mov
push
dec
mov
mov
mov
xor
lock
xor
add
ljmp
pushf
inc
xlat
dec
dec
imull
mov
dec
aaa
and
push
fcoms
inc
dec
mov
cmp
dec
sar
enter
aaa
mov
add
add
pop
push
outsb
dec
fcompl
mov
push
jmp
xacquire
sarb
aas
lahf
js
loope
xor
adc
dec
loop
push
loop
mov
bound
cmp
paddw
mov
push
inc
shll
mov
fisubrs
inc
shl
fidivrl
filds
and
rcrl
cmp
test
sub
push
adc
repz
jl
scas
jo
push
adc
stos
mov
add
cmp
jg
mov
xchg
fcoml
test
mov
mov
in
lret
inc
mov
aas
ret
scas
push
cwtl
test
xchg
lods
arpl
cld
fildl
jmp
push
mov
xor
mov
pop
cmp
push
idivb
jnp
aas
leave
nop
lcall
les
xchg
repz
divb
stc
or
es
fnstcw
lock
movsl
xchg
sbb
cli
aad
pushf
mov
shrb
data16
jnp
ds
add
loop
std
xor
jne
xor
dec
scas
iret
mov
push
push
andl
lcall
pop
cld
xlat
jmp
sti
cmp
ret
nop
ss
and
adc
cmp
insb
scas
lret
fcmovu
fisubrl
dec
mov
imul
loop
jmp
jb
push
fldt
adc
sbb
and
push
sub
arpl
mov
popf
dec
outsl
sub
scas
sub
adc
add
jnp
xor
cli
popf
cli
inc
scas
ds
ret
cmp
loop
push
out
mov
mov
xor
sub
loope
push
outsb
mov
hlt
lds
cmpsl
pop
mov
cli
fcmovnbe
outsb
cmp
in
jg
pop
cmp
mov
arpl
icebp
dec
sti
push
push
cli
mov
xchg
jns
xor
stos
pop
mov
jl
dec
add
push
leave
cmp
fwait
jns
repnz
xchg
lcall
sti
sahf
adcb
es
mov
cmp
mov
fidivrl
scas
or
mov
lock
mov
icebp
xchg
jne
jecxz
fldcw
mov
call
add
jl
lock
sub
and
outsb
pop
lods
xchg
std
cmpsb
and
dec
push
std
fs
jle
push
sahf
subb
jle
push
mov
mov
fisttpl
cmp
pop
adc
pop
xlat
cmp
mov
lock
jp
mov
test
and
shl
in
popf
pop
nop
out
sbb
mov
shll
push
pop
add
lods
icebp
sub
jge
pop
push
or
push
fbstp
call
mov
lret
jbe
sbb
icebp
jno
mov
pop
in
jmp
pop
in
int3
xor
inc
and
jle
ss
push
jmp
test
leave
mov
fwait
cwtl
cmp
ja
aad
jp
adc
mov
int3
data16
xor
mov
scas
stos
or
mov
idiv
xchg
and
sahf
sub
outsb
and
out
fwait
or
add
xlat
inc
pushf
loop
push
inc
loop
sub
mov
in
imul
fld
pop
add
ljmp
iret
lock
mov
push
add
xor
in
icebp
xchg
mov
cmpsl
xorb
jecxz
xchg
and
xlat
sub
lods
pop
add
and
loop
mov
into
in
pop
ror
pop
jb
pop
pop
repz
stc
ss
sarl
scas
jmp
iret
lock
inc
sbb
adc
cmpsb
scas
dec
aaa
dec
pop
sub
lock
dec
pop
andb
fisubs
push
lds
and
aaa
fstps
dec
cmpsb
imul
aas
xorl
mov
push
and
inc
mov
repnz
lcall
jp
pushf
cmpsl
enter
adc
dec
imul
inc
inc
imul
cmpsl
xchg
dec
xchg
push
or
cwtl
adc
sbb
dec
or
out
rol
mov
pop
jb
jns
pop
pop
test
xor
mov
out
mov
push
pop
cmpsb
pop
cli
or
mov
xor
mov
mov
adcl
dec
and
and
fwait
scas
and
and
ss
es
std
push
outsl
ds
mov
cmp
mov
mov
inc
aaa
rcl
adc
ss
fnstcw
push
pusha
mov
xchg
sbb
sbb
dec
or
enter
jge
sahf
xchg
cmc
sbb
sahf
lret
jp
mov
xor
add
dec
bound
add
gs
adc
xchg
loop
mov
adc
scas
hlt
jno
ljmp
add
mov
jns
and
movsb
push
dec
iret
inc
repz
lahf
testb
push
cmp
jnp
jno
test
incb
jle
add
rcrb
iret
dec
movsb
mov
fldcw
jmp
sub
pop
cmp
add
or
cmp
or
fisttpll
mov
sbb
push
icebp
aam
adc
xorl
aad
daa
mov
pop
aad
mov
inc
and
vmovaps
sbb
push
mov
push
sub
adc
lods
inc
cmpl
js
andb
pop
aaa
or
push
ficomps
es
insb
push
daa
fs
inc
les
cmp
add
andl
mov
sub
divl
or
icebp
push
je
insl
jg
mov
rcrl
jecxz
fsub
adc
mov
enter
test
cmp
xlat
leave
ds
add
popa
loope
pop
xor
mov
pop
mov
loop
dec
fimull
test
movsl
cmp
adc
scas
lea
pop
xlat
addr16
sbb
call
dec
xorl
lods
lea
nop
ja
xor
mov
xchg
loop
cmp
cmpb
pop
in
xor
mov
and
loope
mov
or
push
dec
sub
mov
push
pop
pop
cmpsb
xor
ret
pushf
into
dec
sub
idiv
adc
stos
adc
sbb
rorl
jmp
lea
outsb
test
std
adc
mov
arpl
jg
add
or
mov
pop
out
dec
inc
dec
jo
dec
out
jo
sub
js
lret
test
icebp
loop
lcall
lds
rcrb
pop
xchg
cmp
and
sub
stos
aad
mov
adcl
mov
jge
xchg
pop
pop
and
push
cmp
rcrb
cmp
mov
scas
cld
mov
sub
in
popf
sbb
sbb
out
imul
dec
in
cli
popf
pop
push
mov
xchg
add
inc
or
incl
or
aas
jge
mov
mov
sub
addr16
inc
cmpsl
jg
bnd
lcall
inc
loop
dec
les
pop
mov
lods
sbb
std
adc
movsl
pop
cwtd
aad
mov
xchg
sahf
in
push
shrb
sub
roll
unpcklps
add
dec
xchg
push
cmp
int3
mov
clc
mov
int3
xchg
pop
xor
mov
ss
mov
add
inc
cmp
rcrl
cmp
dec
jnp
pop
jne
or
dec
xchg
sub
fistpll
imul
popa
sub
mov
jecxz
jo
out
cmp
mov
inc
xchg
or
mov
test
popa
jp
testl
lods
call
push
andl
popa
sub
push
lods
lahf
fs
cmp
mov
mov
or
push
in
in
ds
sahf
scas
jo
and
int3
inc
sbb
lret
push
outsb
push
cmp
adc
cmp
push
lret
leave
arpl
les
fadds
dec
pop
sbb
ljmp
gs
in
lcall
pop
roll
popa
and
adc
xchg
fnstcw
rolb
adcb
les
les
xchg
in
jae
fcmovnu
xor
push
xor
loop
sbb
insb
adc
xchg
or
jl
jp
and
ljmp
jecxz
adc
push
stos
xlat
mov
jnp
scas
imulb
cld
call
pop
ret
xor
inc
and
pop
mov
dec
add
popa
xchg
jae
add
sub
mov
jae
jae
push
mov
dec
mov
dec
mull
mov
push
test
mov
sbb
ss
rclb
test
loop
push
fwait
clc
lods
fbld
stos
push
mov
add
mov
xor
xor
ret
or
test
les
dec
push
lods
push
inc
in
repz
cwtl
movsl
in
mov
and
iret
push
lods
das
or
fsubrl
push
pop
popa
mov
push
sub
add
dec
imul
and
outsl
repz
push
and
push
pop
mov
mov
fs
sub
dec
adc
pop
pusha
stc
jns
nop
mov
xchg
cmp
das
stos
pop
gs
cltd
subl
fbld
xchg
lods
lahf
xchg
add
push
les
je
push
dec
ret
or
or
lods
loopne
stc
adc
sbb
aaa
in
stos
insl
add
rcrl
test
ja
pop
pop
inc
push
jg
and
sbb
cs
inc
xor
in
jns
cmc
in
lods
imul
add
cltd
mov
mov
sub
call
inc
faddl
xchg
jl
out
mov
lock
xor
in
shlb
sbb
rclb
and
sti
pop
mov
lret
sbb
shrl
push
shrb
mov
mov
xor
aas
xchg
inc
adc
adc
mov
gs
jns
fisttpl
add
je
gs
inc
iret
imul
and
ja
xor
negb
lods
inc
jo
icebp
cmp
xchg
jp
inc
push
cmp
push
js
cld
xor
fnsave
or
jge
push
imul
repz
out
imul
xchg
sub
push
jle
xor
or
mov
pop
sahf
leave
imul
mov
adc
pushf
jecxz
xlat
mov
pop
cmp
pushf
sbb
adc
scas
out
mov
push
outsb
insl
pop
mov
lods
call
insb
xor
push
inc
je
pop
lahf
mov
sbbl
jne
push
imul
call
jnp
pcmpeqw
push
lea
xor
lcall
push
mov
push
loope
dec
in
cmpsl
push
mov
test
rol
cmp
push
inc
ljmp
cmp
pop
push
imul
pop
dec
xor
push
ret
dec
pop
fmull
push
sub
dec
pop
sahf
xchg
jbe
repz
jg
cmp
xchg
add
lea
popa
daa
adc
mov
call
js
jnp
ljmp
xchg
jecxz
in
dec
clc
push
pop
jno
inc
lret
out
add
mov
in
xchg
mov
outsl
and
or
andl
ret
insl
pop
fsubp
or
pop
into
mov
push
mov
pop
mov
ja
jo
dec
mov
arpl
mov
or
loop
outsl
inc
xchg
mov
jno
mov
iret
sub
push
invd
addr16
mov
inc
call
xchg
insb
dec
in
ret
inc
das
xchg
sub
daa
fcmovnb
pop
cld
adc
int3
loopne
inc
pop
sbb
flds
sub
cmpsl
dec
mov
in
faddp
pop
mov
jno
push
pop
nop
jp
imul
sbb
xrelease
pop
bound
xor
and
std
pop
mov
add
pop
adc
xchg
jne
test
scas
lret
and
enter
mov
mov
mov
sbb
inc
mov
flds
fsubs
hlt
loopne
std
sbb
lods
cmp
jo
aam
neg
aas
or
bound
lret
mov
cmp
xor
push
lods
sub
or
lock
imul
mov
ret
repz
outsb
xchg
mull
add
mov
pusha
lret
inc
js
js
push
repz
jmp
lcall
arpl
mov
jne
in
mov
lods
push
lret
dec
jle
cmp
inc
adc
insb
mov
jnp
cmp
push
cmp
cmpsb
call
js
std
inc
fnsave
xchg
mov
jae
jae
inc
xor
add
xchg
push
mov
sbb
and
jp
je
inc
ds
test
xor
mov
mov
xor
jge
xchg
ja
pop
in
adc
cld
pop
xchg
imull
scas
ds
mov
lods
cmpsb
or
cld
push
push
pusha
xchg
mov
mov
rcl
jno
testb
xor
das
stos
jae
push
push
nop
mov
popa
add
mov
arpl
add
pushw
fwait
shlb
test
loop
sarb
fldt
in
inc
fiadds
push
mov
xor
lock
adc
fwait
adc
pusha
movsl
jno
mov
nop
dec
popf
nop
dec
jecxz
nop
xor
out
scas
sbb
aas
mov
shll
push
pop
sbb
fs
adc
js
sub
or
cli
pusha
or
mov
pop
cmp
rcll
xchg
filds
xchg
mov
fcoml
das
cmc
dec
aam
lea
sahf
stos
jle
jns
and
dec
adc
or
orb
sub
loop
sub
std
fsubs
lea
test
cmc
loop
mov
xor
stos
jae
aam
mov
lods
sub
fsubr
popa
xchg
cli
lret
xor
in
scas
xor
inc
sbb
test
sub
fucom
fbstp
mov
cmpl
pop
loope
inc
push
enter
and
mov
dec
andl
cmpsb
cs
mov
cwtl
fisttps
lret
pop
stos
jo
data16
ja
push
hlt
rcrl
das
testb
cmp
in
andl
sub
call
nop
dec
cmp
or
add
push
xor
adc
dec
dec
shrl
and
fwait
sub
into
loope
cmp
add
repnz
sti
mov
lahf
subl
lods
retw
aas
movsl
dec
adc
ret
ss
sub
mov
sub
fsubrp
outsb
push
mov
es
mov
aaa
idivl
mov
add
push
ficomps
imul
pop
iret
cwtl
or
push
test
add
mov
or
lahf
pop
inc
cmp
mov
cmp
cmc
dec
pop
mov
outsb
aaa
ret
jmp
call
ret
cmp
testb
rcr
jae
inc
push
movsb
pop
iret
mov
pop
into
mov
mov
jmp
mov
lods
pop
push
es
inc
sarb
movsb
test
loope
fwait
dec
cmpsl
push
mov
mov
out
lahf
mov
sarl
aam
push
orb
in
mov
pop
mov
jb
pusha
push
sbb
push
fidivl
stos
xchg
push
lods
dec
jae
test
fildl
inc
jo
in
mov
add
push
in
and
lcall
xor
cmp
xor
mov
jb
mov
popa
and
cli
imul
dec
dec
sti
je
pop
iret
fwait
or
and
mov
fiadds
gs
sub
lock
ljmp
inc
or
jns
adcb
shll
add
push
dec
add
lds
xor
and
adc
std
daa
cmp
int
mov
dec
pop
adc
cmpsl
fldcw
cld
fnsave
sub
add
xor
sahf
dec
insl
sub
leave
cs
push
push
mov
repz
ret
mov
pop
sahf
mov
xlat
cmpsb
sbb
xor
push
cmovno
jecxz
or
mov
cmp
mov
pushw
mov
and
xchg
push
and
mov
imul
or
adc
mov
mov
pop
cmp
ja
sbb
movsb
sbb
adc
nop
mov
cmpsl
inc
ljmp
pusha
sbb
xor
js
xchg
sbb
aaa
sub
add
fdiv
in
shll
out
jbe
mov
into
add
pop
xor
shl
lahf
popa
sbb
push
inc
repnz
mov
and
daa
mov
orb
sub
xor
leave
dec
sbb
int3
pop
outsl
sub
ror
inc
imul
das
mov
push
and
test
mov
or
xchg
test
mov
and
xchg
sbb
dec
sarb
push
ret
out
cmpsb
xlat
and
test
push
rclb
push
xchg
jae
mov
pop
sbb
lds
xchg
nop
push
je
aaa
xchg
sub
mov
add
jns
pusha
stos
in
pop
xor
js
sbb
lcall
inc
xchg
pop
stos
and
and
shlb
dec
pop
add
and
add
nop
add
xor
int
sbb
cs
push
xchg
mov
pop
jne
out
shll
jo
loope
and
jbe
aaa
mov
add
push
in
xchg
jg
repz
test
aad
aas
cld
mov
cmpsb
or
adc
loope
sarb
lahf
push
xor
mov
fildl
lds
push
add
or
pushl
std
sahf
jg
dec
shrb
push
mov
add
xchg
sbb
loop
ja
mov
std
inc
sbb
pop
scas
out
adc
mov
ficoml
arpl
cmc
lds
pop
stos
in
subb
in
cmp
lret
in
sbb
and
rcpps
gs
js
test
in
das
sar
cmp
pop
outsl
or
sbb
gs
push
xchg
jo
cmp
add
int3
sub
out
in
add
add
loopne
add
insl
mov
fstps
and
add
movsl
pop
mov
add
xor
lcall
xchg
adc
jmp
mov
jl
mov
unpcklps
into
push
push
test
out
cmp
aas
inc
es
xor
cmp
fs
sub
xor
sbb
or
xor
setnp
add
movsb
mov
jecxz
mov
lock
xorps
in
iret
add
cmp
pushf
repz
mov
lcall
xchg
iret
sbb
dec
lds
shl
in
shl
dec
mov
cmp
add
hlt
inc
pop
pusha
hlt
movsl
dec
adc
or
icebp
mov
push
lea
mov
xchg
inc
lcall
pop
mov
xorb
fsubrs
dec
xchg
iret
mov
scas
cmc
dec
push
xchg
dec
lcall
push
icebp
movsl
add
push
dec
mov
sbb
push
int
fnstsw
inc
inc
mov
and
inc
inc
aas
xor
in
push
outsb
or
outsb
arpl
adc
pop
dec
mov
popf
out
inc
mov
inc
adc
repnz
dec
xchg
out
mov
or
mov
mov
arpl
jge
clc
jns
std
add
sahf
inc
adc
mov
adc
jne
outsl
add
ljmp
ficoml
lahf
jae
lahf
inc
lea
je
fsts
fs
lods
dec
stos
mov
sub
std
jmp
movsl
push
icebp
sbb
out
dec
fcmovnu
ror
mov
std
rcl
je
dec
mov
movsl
and
pop
fdivp
scas
dec
lret
mov
jnp
icebp
and
jae
out
js
cli
mov
or
ret
adc
xor
int
into
jp
test
jl
or
jbe
jmp
fstpt
mov
jp
pop
icebp
lods
outsb
mov
sbb
cmp
xor
add
xchg
mov
pop
sbb
dec
adc
stc
dec
shlb
repz
xor
fnsave
add
and
fxch
aam
ret
inc
add
shlb
stc
pop
divb
in
add
leave
cs
mov
or
lods
movsl
mov
push
or
rcll
mov
scas
xlat
push
and
mov
cltd
lods
dec
sahf
inc
lcall
rclb
push
imul
push
imul
push
lret
outsb
and
repz
mov
xor
out
mov
popf
dec
pop
jle
push
mov
jne
and
dec
add
sub
or
jae
jg
jae
dec
lods
pop
lret
ret
icebp
mov
push
jle
jno
inc
jo
mov
xor
hlt
sbb
fcmovbe
jle
cmp
mov
inc
sub
or
shll
rclb
inc
lds
sbb
sub
clc
fs
into
in
stos
add
cmp
repnz
repnz
cmc
mov
inc
mov
mov
mov
pop
outsb
dec
scas
es
cltd
mov
sbb
sti
shl
rol
leave
inc
inc
imul
jno
insb
movsl
pop
les
loopne
sub
movsb
mov
movsl
jle
sahf
sbb
stc
pop
or
or
mov
cwtl
pop
test
mov
xor
xorb
pop
leavew
sub
in
faddl
fdivr
dec
xor
sbb
dec
scas
mov
in
aaa
xchg
sarb
xchg
dec
mov
repnz
fldenv
sbb
xchg
jl
int3
xchg
jp
push
mov
popf
scas
sti
adc
xor
xchg
inc
sbb
test
and
ret
mov
and
inc
fsubs
pop
test
daa
push
xlat
fsubs
cmp
dec
cmp
in
ficomps
xchg
test
push
imul
mov
movsb
push
jle
push
adc
lahf
loopne
cmp
jae,pn
mov
jle
cmp
rclb
pusha
sub
insl
sub
and
fwait
mov
mov
jg
test
mov
mov
inc
cmp
sub
aas
dec
dec
dec
stos
in
xor
test
inc
xor
aaa
in
int3
dec
dec
adc
xor
imul
shlb
jle
sub
mov
sarl
js
push
xchg
test
mov
xchg
pop
pop
dec
or
mov
fwait
xor
pop
pop
pushf
sub
icebp
fistpll
subl
push
push
mov
mov
xor
inc
out
jae
xchg
xlat
xchg
jg
movsl
sub
inc
inc
stos
int3
es
adc
and
push
fdivrs
imul
adc
call
push
fbstp
mov
ja
and
inc
addb
mov
jmp
pop
xor
sbb
jecxz
rcrl
fstpt
mov
or
add
sub
insl
iret
push
cmc
lahf
std
pop
or
push
inc
or
sti
xchg
xchg
das
mov
movsb
sub
sbb
mov
hlt
lock
outsb
mov
mov
push
push
pushf
imul
cmp
push
call
or
and
push
mov
clc
popf
pop
out
pop
xchg
mov
iret
divl
aas
or
push
repz
insb
push
push
fstp
xor
sbb
cltd
cmp
icebp
fbld
test
push
shlb
in
adc
and
mov
test
lcall
add
sub
pusha
loop
out
xchg
js
inc
movsb
mov
lods
pusha
js
into
and
pop
and
je
mov
insl
jmp
xlat
cmpsb
repnz
hlt
pop
stos
ds
adc
dec
mov
sti
mov
out
scas
xor
fsubrl
les
or
sbb
push
push
fildl
testb
push
jns
adcl
mov
pop
push
insl
jl
sahf
dec
icebp
fwait
adc
sbb
xchg
push
call
loope
mov
lret
mov
shr
pop
aad
and
int3
fists
cmp
push
adc
out
sbb
xchg
mov
lret
xor
mov
mov
cmp
es
mov
in
mov
sub
xor
adc
enter
sub
aas
lret
orl
popa
mov
inc
lret
dec
icebp
jae
mov
or
loope
in
jns
inc
dec
and
sub
pop
pop
call
sbb
bound
ljmp
add
test
xor
les
hlt
jae
push
imul
clc
in
mov
pop
dec
pop
insl
outsb
std
add
lods
outsb
fldcw
inc
inc
cltd
ss
lea
iret
jge
sub
pop
sub
aas
or
push
lahf
inc
jno
stos
bound
dec
jecxz
dec
pop
pop
outsb
cmpsl
inc
and
dec
nop
sbb
adc
push
add
icebp
addr16
fincstp
cmc
adc
je
push
mov
jmp
loope
negb
cmp
mov
cmc
inc
repnz
xor
call
ret
out
iret
ljmp
or
or
xor
and
pop
xchg
scas
out
inc
or
aam
stos
push
mov
cmp
push
dec
std
adc
mov
jae
xchg
xchg
out
jae
or
cmp
add
xchg
add
jle
jge
fwait
cli
adc
cltd
mov
outsl
inc
jmp
push
pop
lds
sub
int3
mov
rcl
adc
xor
jno
leave
push
out
sahf
mov
add
dec
xchg
cmc
or
or
sbb
out
jae
testl
push
cmpsl
out
or
and
jmp
scas
xor
xchg
out
pop
enter
in
dec
daa
push
sti
lds
mov
call
mov
out
sbbb
or
pop
inc
lahf
pusha
in
sub
pop
or
push
dec
outsl
sub
popf
mov
jle
insb
cmc
or
rcr
sub
mov
push
outsl
adc
mov
adc
pop
jg
addr16
mov
repz
mov
es
add
inc
mov
lock
iret
jno
xor
jmp
ret
call
insb
je
out
arpl
outsl
test
inc
mov
sbb
orl
mov
inc
ljmp
xchg
shll
icebp
jle
insb
fisubs
pop
daa
aas
in
jns
push
push
mov
inc
ret
lods
stos
aam
push
mov
xchg
sbb
insb
jecxz
into
scas
mov
push
pop
inc
or
pop
sarb
mov
daa
xchg
xchg
aam
pushf
ror
sbb
sub
mov
stos
fldl
iret
mov
rcll
data16
pop
out
push
jge
pop
rol
and
out
imulb
fcomps
aad
repnz
pop
adc
pop
or
mov
or
hlt
pop
movsl
cmp
lock
and
sbb
pop
inc
repz
xchg
xlat
sub
push
sbb
hlt
outsb
cmpsl
xchg
cmc
mov
out
ljmp
mov
mov
pop
push
mov
xlat
xor
mov
add
sbb
stos
push
sub
pusha
add
fnstsw
mov
mov
outsb
popf
xchg
cli
test
mov
lock
adc
sub
dec
inc
mov
inc
cld
pop
sub
pop
mov
data16
js
daa
test
insb
rclb
in
xchg
test
cmpsb
pop
jg
testb
fdivr
sub
push
sbb
mov
shl
cmpb
repz
xlat
add
mov
lret
cmpsb
icebp
fistps
retw
push
add
shrb
pop
mov
pop
xchg
dec
into
sub
or
adc
inc
nop
sub
jmp
aad
ret
in
xchg
jg
cmc
out
mov
push
add
test
mov
std
cli
jge
bound
or
psrld
and
xor
and
ds
cmp
fisttps
insb
mov
dec
mov
test
jg
lcall
mov
push
jb
mov
add
adc
xchg
scas
or
and
fdivr
js
aas
ss
into
and
cmp
jmp
dec
lock
adc
mov
aam
sub
push
adc
adc
out
dec
and
cwtl
xchg
stos
jg
lods
pop
scas
mov
cmpsb
add
xchg
repnz
outsl
sub
cmpsl
push
or
sahf
add
test
xor
cltd
test
inc
out
sarb
adc
mov
push
cmc
insb
popa
mov
xchg
sbb
stos
mov
in
movsb
popf
test
iret
fs
dec
sbb
adc
enter
outsl
jle
xor
and
movsb
and
fnsave
mov
mov
sarl
adc
pushl
adc
mov
xchg
xor
and
push
sub
sub
or
inc
pop
lcall
mov
inc
in
bound
fists
shlb
push
jg
xor
cltd
mov
xor
pusha
filds
js
stc
push
pop
mov
mov
cmp
push
ds
daa
mov
sub
in
sarb
adc
sarb
jbe
pop
sbb
inc
daa
fldcw
fistps
cmp
hlt
out
ret
sbb
inc
pop
jns
xchg
icebp
mov
scas
jae
ja
ds
mov
sub
adc
pop
jo
xor
outsb
mov
rorb
pop
mov
mov
lret
mov
dec
xchg
int
sbb
pusha
repnz
movsl
jb,pn
jns
jge
mov
mov
or
pop
jo
daa
movsb
inc
test
lahf
js
std
xor
xchg
fs
push
imul
nop
daa
fnstcw
loopne
test
mov
mov
xchg
div
pop
lea
adc
mov
and
push
sub
in
mov
or
fwait
das
aad
lods
fs
rorb
mov
mov
in
ds
iret
mov
cmp
bound
icebp
mov
cmp
fisubl
or
xchg
cmc
pop
out
jb
mov
es
test
daa
js
push
out
hlt
jl
xor
sub
dec
out
sub
xor
out
in
adc
bound
sub
rolb
xor
scas
xchg
cmp
int3
add
inc
mov
aad
add
test
push
jae
movsb
mov
add
dec
lahf
lea
push
lahf
sbb
mov
push
add
imul
decb
mov
pushf
imul
leave
insl
mov
ja
data16
inc
mov
mov
jl
sub
pop
mov
sbb
fmulp
stc
pop
daa
pop
lcall
xor
movsl
mov
inc
add
sub
push
inc
lcall
cwtl
aam
push
push
or
xor
repnz
jae
lds
sbbb
pop
sbb
add
aad
mov
cld
sbb
shl
inc
jno
icebp
scas
stc
call
pop
test
cmp
xchg
scas
mov
xchg
xchg
scas
mov
jnp
inc
inc
jno
mov
lcall
xchg
cli
pusha
xchg
outsl
repz
outsb
adc
dec
cmp
add
jo
mov
xchg
jb
push
in
pop
fsubrs
fs
icebp
rcrb
icebp
loop
add
mov
aad
xor
enter
hlt
fucom
mov
or
or
push
adc
je
cli
pop
sub
mov
adc
inc
mov
test
dec
sahf
cmpsb
pop
cmp
xchg
sub
and
lds
push
mov
popa
inc
cli
scas
mov
xchg
orl
fldl
mov
sbb
inc
cwtl
sub
pop
outsb
gs
dec
and
xlat
dec
aas
ja
xor
std
in
mul
xlat
jg
adc
jo
sub
bound
clc
inc
mov
sbb
push
cwtl
jbe
loopne
sub
xor
ret
xorps
loopne
ljmp
int
inc
push
mov
sbb
aam
lds
pop
mov
test
dec
xor
push
outsb
add
and
outsb
xor
stc
inc
fdivl
mov
gs
arpl
adc
outsl
or
enter
or
movsb
push
jbe
adc
sub
pop
xchg
pop
inc
jo
dec
dec
adc
aam
push
out
inc
and
mov
xor
int
rclb
arpl
sub
roll
out
dec
pop
mov
fsubr
adc
cld
push
pop
add
cmp
mov
mov
fwait
aaa
mov
test
stc
push
pop
jge
push
push
mov
jns
in
fsubs
lcall
dec
jbe
dec
add
negl
fisubl
mov
dec
fnstsw
test
xchg
cmp
sar
shll
mov
insl
mov
push
and
scas
data16
femms
clc
lret
pop
sbb
repnz
mov
test
add
or
outsb
ljmp
sub
lret
sti
sub
pop
aam
dec
scas
js
hlt
aam
js
std
push
lret
fstl
out
imul
fs
in
push
inc
xchg
inc
stos
test
sbb
push
sti
icebp
pop
mov
inc
xor
loop
icebp
cmpsl
mov
call
jnp
pop
lea
jo
push
add
shrb
push
das
xor
mov
int3
xor
adc
lcall
fucomip
das
js
and
repnz
cmp
add
cmc
hlt
fisubl
adc
cmc
fwait
out
js
push
addr16
mov
scas
cmpsl
cmp
out
data16
inc
xchg
sti
pop
nop
test
aad
jmp
xlat
call
in
push
aaa
push
insb
out
ja
dec
out
mov
sub
sbb
dec
mov
pop
ret
mov
dec
loope
decb
rdtsc
daa
bound
insb
xchg
arpl
sub
sub
in
mov
shr
pop
iret
mov
inc
push
or
cmp
add
push
outsb
add
mov
icebp
mull
das
lock
mov
and
arpl
mov
jae
adc
inc
inc
sub
adc
mov
adc
insl
es
adc
cmpsl
orb
push
jae
mov
fists
imul
sbb
out
mov
mov
push
push
mov
fwait
push
sbb
fdivrs
or
fildll
dec
stos
cmpb
fwait
cltd
sub
sbb
outsb
pop
push
xchg
jp
pop
xchg
andl
jns
inc
inc
mov
mov
pushf
jl
jo
ja
cmpsb
adc
jnp
pop
dec
adc
adc
aaa
test
pop
mov
gs
insl
das
mov
in
outsb
les
aaa
dec
and
or
dec
lods
mov
jl
dec
loop
aam
clc
inc
sbb
pop
ret
inc
jne
movsb
mov
xchg
sub
and
push
sub
cli
jns
clc
jge
out
add
es
leave
test
lods
cmp
repnz
fwait
dec
and
add
jecxz
movsl
adc
sbb
inc
sbb
bound
push
xor
pop
sbb
sub
dec
cmp
gs
mov
lea
imul
pop
les
sub
jbe
les
or
pop
and
push
fisttpll
jnp
roll
sbb
dec
or
jns
mov
push
in
pushf
sbb
mov
inc
scas
pop
add
mov
addl
addl
mov
fisubrl
movsl
lret
ss
imul
cmp
add
lcall
data16
sbb
mov
sbb
add
dec
xor
jle
xlat
jl
lea
mov
jo
xchg
out
adc
fcompl
xlat
mov
out
or
mov
in
adc
mov
dec
outsb
xchg
push
inc
cli
icebp
or
xchg
std
add
out
cmpsb
and
jge
sbb
loop
insl
out
rcr
movsb
lret
insl
cmp
rcll
pop
movsl
imul
imul
cmp
out
in
sub
mov
daa
pushf
xor
adc
ds
aas
mov
outsl
cmp
or
dec
fidivl
jae
sub
sbb
xchg
lea
mov
loopne
mov
sar
hlt
inc
dec
sbb
outsb
or
loopne
mov
mov
fs
add
stos
mov
lcall
cmp
sbb
sub
mov
hlt
mov
out
stos
inc
push
popf
push
fnstsw
nop
dec
pop
xor
or
fdivp
ds
xchg
subl
inc
mov
hlt
pop
mov
and
in
push
sub
adc
scas
adc
mov
sub
mov
scas
cmp
jns
lods
pop
cmp
add
xchg
enter
out
pop
lods
sti
cmp
fs
inc
jae
fbld
cmp
mov
sub
je
cmp
mov
pop
xchg
mov
pop
gs
and
lods
push
sbb
sbb
outsl
dec
dec
fsubp
andb
sub
aam
jae
movsl
sbb
cli
pop
mov
cmp
lcall
ficomps
bnd
cmpsl
mov
xchg
lcall
lea
jg
xchg
fs
jns
out
mov
ret
popa
vpunpcklbw
fisubl
nop
xchg
sub
clc
inc
jb
int
fs
xchg
notb
insl
les
fldenv
inc
stos
cmp
add
push
test
fdivrs
add
fs
call
dec
jle
int3
in
xchg
cs
mov
inc
loopne
or
pushf
shrb
ret
int3
mov
mov
push
ja
push
xchg
fisubl
mov
fimuls
mov
push
daa
adc
jl
or
xchg
fsubl
mov
popa
add
mov
aam
push
xor
shll
ljmp
loop
xor
nop
xlat
cmp
mov
jns
mov
mov
push
mov
icebp
cwtl
and
hlt
and
inc
cmp
ret
cmp
push
ret
imul
pop
adc
jo
adc
mov
jbe
test
inc
js
pop
and
xchg
mov
or
adc
mov
dec
pop
xor
call
dec
and
call
icebp
add
insb
push
shlb
pusha
scas
scas
imul
dec
lahf
hlt
lock
and
mov
mov
imul
addr16
ss
pop
arpl
jne
repnz
add
das
dec
xchg
adc
icebp
stc
lret
les
xchg
or
std
sbb
and
push
or
lret
mov
sub
or
sbb
push
imul
inc
fwait
pop
fwait
aas
add
adc
mov
aad
fwait
and
lahf
scas
sbb
out
shl
push
pushf
leave
nop
call
aam
dec
jmp
dec
mov
pop
xchg
daa
movsb
aas
fdivrs
inc
mov
pop
lcall
ret
stc
xchg
jno
iret
jnp
nop
mov
jle
adc
add
fildl
int
cmp
js
call
ss
hlt
mov
push
hlt
ljmp
pushf
mov
sub
inc
sub
enter
mov
jns
pop
push
sbb
xchg
lret
fdivs
enter
mov
cwtl
jo
jae
add
ret
data16
xchg
pop
add
out
call
push
into
outsb
cld
idivl
fimuls
and
xlat
jg
push
pop
in
mov
daa
in
lcall
outsb
inc
cmc
icebp
adc
cli
rcr
cmp
or
xorl
jecxz
xor
out
dec
cwtl
stos
add
jne
les
inc
test
cmp
sbb
fistpll
cmp
dec
pop
xchg
lret
dec
fs
movsl
insb
mov
adc
jge
repz
std
int3
fldl
and
out
popa
pop
xorl
outsb
sti
out
mov
jecxz
mov
mov
xorl
xor
xchg
pop
adc
roll
xor
cmpsl
test
shlb
and
lds
xchg
xor
stc
and
or
xchg
hlt
mov
das
lock
repz
sub
lods
outsb
add
sub
out
pusha
loopne
repz
sahf
fldl
pop
movl
fcmovnu
jne
cmc
out
gs
mov
pop
xlat
adc
and
mov
dec
fcompl
mov
in
scas
jle
pop
call
jae
adcl
mov
and
les
inc
fisubrl
out
pop
js
add
xor
jge
mov
sbb
pop
pop
and
call
mov
push
pop
xchg
adc
add
cli
dec
or
out
pusha
aas
rcll
in
jle
inc
adc
xchg
mov
idivl
xor
mov
cmp
rolb
sbb
mov
out
cmp
std
cwtl
lahf
xchg
fnstsw
jle
xchg
pop
loopne
in
or
cmpsl
xor
icebp
jb
mov
jbe
and
in
jns
neg
add
lock
sub
inc
fldl
cli
imul
jae
mov
sahf
shrl
xchg
outsb
xchg
mov
adc
pop
int3
dec
jo
sub
pop
ds
xchg
mov
test
mov
or
xchg
jns
jp
dec
fldl
sahf
call
lea
int
mov
jle
aas
or
icebp
mov
sub
jbe
sbb
or
arpl
inc
loopne
mov
xchg
lcall
push
cmpsl
inc
add
pop
dec
dec
into
mov
je
loope
cwtl
and
mov
xchg
loopne
nop
cmpsl
dec
lds
mov
mov
cmp
pusha
jnp
push
pop
popl
xchg
cmp
pushf
xor
sti
or
fidivs
je
shrb
sbb
dec
ret
unpckhps
jle
mov
out
incb
cmp
push
loopne
jns
or
push
mov
adc
pop
movsb
fldenv
sub
mov
lea
jle
dec
inc
xor
or
iret
icebp
repnz
mov
mov
adc
mov
in
add
into
cmp
pushf
inc
sbb
das
mov
lock
mov
mov
sub
scas
or
fwait
mov
ret
in
push
jbe
mov
pop
sar
icebp
jecxz
and
andl
test
pop
adc
cmp
sbb
xor
add
xlat
lods
dec
int3
jl
aas
inc
sub
fdivs
dec
es
jno
dec
mov
dec
test
out
or
inc
mov
movsb
xor
or
into
mov
add
push
lahf
xchg
mov
fiaddl
mov
xor
xchg
add
lret
mov
adc
jae
inc
xor
push
mov
hlt
mulb
ds
dec
pop
js
jae
and
fdivrl
xchg
push
and
xor
testl
sub
shrb
dec
and
mov
lods
and
bound
inc
and
cmpl
fwait
out
add
sub
rorb
fs
cmpsl
xor
mov
xchg
sub
in
cmp
mov
mov
stos
into
push
scas
mov
sbb
sbb
push
inc
pop
aas
je
inc
mov
fmuls
lretw
lods
and
adc
filds
adc
fdivr
test
cmpb
jne
mov
hlt
xchg
arpl
inc
dec
outsl
insb
stos
daa
push
push
cmp
fs
fistpl
mov
sub
cmc
stos
push
jg
add
xor
jp
xor
and
lret
cmp
imul
mov
add
hlt
mov
loopne
push
or
sti
loop
mov
cwtl
push
jp
enter
push
fs
and
sbb
add
pop
loope
movsl
xchg
lea
fdiv
mov
cli
cwtl
popf
cli
test
mov
adcl
cmp
xor
xchg
insl
xchg
dec
xor
lea
mov
add
pop
mov
jp
add
mov
loope
cltd
add
mov
cmp
jb
aad
test
mull
sub
adc
mov
rcll
cli
xchg
dec
js
adc
lret
jo
add
cmp
xor
or
push
sarb
movsb
das
and
shl
int3
fmull
inc
imul
xchg
out
add
jg
scas
outsb
notb
add
aad
jne
jnp
or
push
ds
sub
ss
dec
jge
add
cs
sub
setns
pop
mov
icebp
mov
testb
jl
mov
bound
sbb
cmp
mov
int3
push
xor
fldl
sbb
in
outsl
jno
pop
jmp
enter
decl
aad
sub
fnstenv
adc
pop
ret
push
lcall
movb
add
mov
jno
clc
or
add
jmp
call
push
mov
jmp
dec
or
pop
jg
lret
inc
js
mov
mov
lret
lret
or
clc
clc
cmp
add
push
xchg
in
movsl
scas
jns
fdiv
scas
leave
pop
mov
int3
xchg
fs
test
mov
xlat
jle
ret
or
cmpps
inc
movsb
mov
dec
push
mull
loope
fldt
and
push
add
jle
test
insb
fistps
cmc
cmp
lahf
adc
xorl
sub
jns
xchg
scas
dec
ljmp
mov
aad
sub
div
mov
mov
mov
mul
sahf
jb
sbb
in
lcall
das
ljmp
cmp
mov
hlt
ret
cmp
call
push
mov
lock
scas
mov
or
add
cwtl
xorl
das
dec
push
cs
lret
sbb
pop
and
jb
shlb
loop
shlb
into
jecxz
imulb
loop
pop
and
xchg
adc
hlt
jmp
jmp
and
scas
nop
outsl
dec
insb
sti
mov
or
xchg
inc
cmpsl
dec
repnz
imul
fistpll
les
mov
sub
imul
sahf
cmpsb
dec
mov
sub
in
jne
jne
pushf
aad
push
fidivs
push
pushf
mov
aas
adc
inc
mov
inc
mov
out
inc
rcr
mov
mov
mov
cmp
lods
xor
adc
lods
jecxz
xchg
data16
pop
cwtl
add
fwait
mov
sbb
pop
mov
or
lret
and
in
mov
inc
sub
sbb
ret
sub
mov
hlt
xor
shrl
std
adc
jae
ret
add
jecxz
push
hlt
xchg
fs
and
out
or
push
repnz
sbb
xchg
mov
add
xchg
xchg
pop
cs
push
sbb
mov
add
iret
cltd
push
xorl
repz
aaa
movb
jg
mov
pop
mov
cmpsl
add
mov
in
add
outsb
and
cmp
lock
xor
movsb
mov
push
pop
adc
call
jbe
dec
mov
mov
adc
or
stos
rclb
xchg
mov
daa
lods
dec
push
mov
push
mov
mov
xor
movsl
femms
pop
sbb
or
jae
push
push
cmp
shlb
popf
mov
lods
xchg
enter
jo
mov
popa
jmp
dec
test
inc
je
jno
aad
rorl
in
pop
pusha
cmp
stc
addr16
arpl
pop
dec
fcomps
imul
movsb
mov
pop
ss
sbb
cmpb
pop
mov
test
pop
sahf
js
enter
adc
and
dec
inc
out
addb
lods
fnstenv
mov
pusha
or
pop
dec
jle
mov
cmpl
xchg
lret
ds
iret
sti
ror
push
push
shll
cmp
mov
enter
in
and
adc
jecxz
sub
insl
insb
sbb
lods
push
test
add
xchg
icebp
clc
movsl
aas
cmp
push
sub
add
mov
mov
mov
cmpb
lock
cwtl
mov
dec
sbb
std
pop
pop
iret
sbb
dec
or
jp
mov
rol
cli
mov
repz
repz
jge
ret
in
pushf
mov
cmp
cs
fs
hlt
push
stos
lea
dec
add
pop
mov
adc
and
movsl
out
mov
leave
and
adc
in
sbbb
outsb
test
pusha
xchg
gs
mov
lret
mov
cmc
pushf
shlb
cmp
loop
jge
push
mov
das
sbb
test
adc
int
iret
aad
push
clc
dec
inc
and
adc
ljmp
mov
add
cmp
js
loopne
clc
jg
push
out
aad
sbb
jbe
or
and
sarb
testl
arpl
inc
repz
cmp
push
push
popa
pop
movsl
inc
cmpsl
outsb
pusha
dec
inc
cmp
fidivs
in
mov
daa
push
nop
pop
stos
xor
cmpsb
sbb
pop
mov
mov
scas
add
int3
loop
shrb
scas
add
aam
cmp
lods
jne
cmp
imul
fdivs
ss
ret
lcall
jecxz
sub
lcall
decb
mov
dec
and
sbb
mov
test
loopne
popa
daa
sbbb
std
jge
in
data16
jns
pusha
sahf
mov
pop
fsincos
pop
dec
sahf
or
and
push
rorl
jmp
and
jne
addl
mov
sbb
vmaxsd
sbbl
ficompl
ja
and
jbe
into
test
sub
addr16
and
dec
insb
test
xlat
xchg
dec
scas
subl
mov
dec
sub
in
in
outsl
cltd
pop
xor
lock
mov
mov
or
ss
aaa
mov
adc
mov
cld
push
mov
lods
imul
fidivs
cltd
push
dec
fisubrs
add
inc
stos
adc
and
adc
loope
pop
push
mov
jl
sbbb
push
inc
outsl
mov
je
lcall
adc
mov
pushf
jo
mov
sahf
cs
or
sub
xchg
jne
push
loop
push
jno
jnp
adc
cmp
enter
out
in
lret
jge
mov
inc
lcall
mov
sub
mov
fstl
jb
outsb
rolb
push
loop
mov
or
fstps
jnp
or
cmp
push
test
mov
out
frstor
rcrl
push
mov
lock
mov
outsb
mov
lea
sbb
std
sahf
popa
jecxz
fwait
or
inc
inc
push
xchg
jl
inc
mov
cltd
pushw
adc
loopne
jmp
xor
add
sbb
dec
xor
int
mov
adc
mov
add
jle
push
and
out
mov
or
stos
mov
jno
lods
mov
cmpsb
ljmp
push
mov
in
shll
xchg
sahf
sbbl
cmp
add
das
dec
inc
pushf
add
inc
arpl
pop
js
fwait
leave
decb
enter
xchg
in
and
enter
les
mov
cmpsb
js
arpl
imul
sub
imul
vsubps
fsts
stc
mov
icebp
fbstp
inc
in
add
jne
xor
mov
ficoms
icebp
lds
push
popf
in
sbb
hlt
bound
cmpsl
in
mov
mov
sub
xor
addr16
jo
jne
outsl
jns
sbb
mov
and
inc
cmc
lcall
aas
sbb
cmp
adc
fdivr
jmp
pop
mov
xor
mov
fisubrl
in
out
das
jae
jnp
xchg
out
adc
xchg
movsb
xchg
jl
loopne
xchg
ss
jmp
mov
inc
lea
jge
adc
xor
in
pop
dec
or
cmpl
js
mov
rep
dec
xchg
xor
rcrl
out
das
cld
sub
insb
arpl
mov
push
jnp
test
xorb
ds
js
stos
mov
mov
mov
mov
outsl
out
mov
inc
jb
and
pop
xchg
lea
loop
scas
cmp
fsubl
xchg
pop
xchg
aas
and
lret
mov
add
pop
xchg
loopne
outsb
xchg
dec
add
push
enter
mov
xor
mov
sub
push
sbbb
fwait
pop
push
add
jnp
fwait
in
and
rcrl
mov
ret
dec
or
rcrb
lds
sysret
je
mov
les
jo
or
pop
fstps
mov
jle
aas
fwait
xor
xchg
sub
mov
push
sarb
and
add
xchg
std
icebp
jmp
pop
cmp
ret
fwait
test
cltd
jge
lret
push
and
adc
push
fistpll
jae
negb
loopne
mov
ds
sub
les
repnz
test
lods
mov
jmp
scas
enter
push
popf
in
push
add
adc
mov
inc
in
addr16
cmc
mov
out
mov
inc
add
jp
xor
xor
dec
inc
push
adc
xor
std
cmp
jns
and
aad
insb
mov
rcr
pop
cmp
repz
xchg
into
xor
xor
mov
enter
push
into
jp
inc
stos
jns
fwait
jmp
pop
push
jbe
adc
insb
jecxz
or
mov
mov
dec
shll
cmp
addr16
cmc
mov
jo
imul
sbb
and
movsl
scas
pushf
mov
adc
icebp
out
loope
mov
push
adc
movsl
dec
cld
or
test
inc
or
shll
dec
xchg
rol
xor
cwtl
sbbl
add
xor
mov
mov
hlt
dec
test
addr16
call
mov
test
or
test
lods
mov
add
pop
xchg
cs
loop
mov
jb
in
ja
out
mov
cmp
stc
fdiv
mov
mov
subb
lcall
add
or
mov
icebp
cmp
dec
cmpsb
sbb
jl
mov
jle
int
popf
mov
dec
in
mov
xchg
outsb
pop
inc
sub
in
test
pop
dec
cmp
int3
mov
sub
test
and
mov
shlb
dec
cmp
push
in
iret
mov
dec
jnp
push
rcll
add
gs
nop
shlb
sub
mov
lcall
pusha
arpl
fsubrs
adcl
push
repz
push
xchg
out
ds
lret
add
xchg
jecxz
in
dec
jno
into
popa
out
jbe
mov
xchg
ja
je
xor
scas
mov
and
mov
add
adc
sbb
adc
mov
adc
fwait
in
push
mov
xlat
stc
scas
int3
pop
dec
popa
push
iret
gs
dec
lahf
cmp
cmp
xchg
popa
cs
ja
push
arpl
adc
mov
xor
fwait
imul
jle
dec
dec
cli
test
movsl
mov
roll
les
arpl
lea
lds
loope
popf
popf
xchg
adc
jns
pop
mov
in
sbb
sub
stos
jmp
out
add
addb
stos
insl
jb
bound
inc
sub
pop
jae
lret
pop
xor
and
dec
hlt
iret
lcall
sahf
xchg
mov
mov
mov
adc
cmpsl
add
popf
ror
sub
xor
out
pop
stos
push
popf
sbb
pop
inc
pop
or
in
jno
xchg
jb
jge
mov
ljmp
mov
pop
ljmp
jb
mov
decb
pop
addr16
rorb
and
fidivrl
jbe
les
rcr
or
mov
movsb
cmp
pop
mov
inc
movb
scas
cmc
xchg
sarb
out
jg
sub
jecxz
inc
or
and
mov
mov
and
sub
or
inc
cmp
lcall
outsb
out
dec
cmp
test
jp
test
call
leave
test
and
sar
and
pop
jmp
inc
add
and
shlb
xchg
gs
adc
inc
xor
jecxz
fcompl
jns
bound
test
sbb
arpl
or
inc
push
ja
jbe
imul
stc
jno
jo
icebp
jecxz
loopne
mov
pop
fs
dec
leave
sub
inc
aam
icebp
shlb
jp
outsl
xor
pop
adc
mov
push
fdivs
inc
mov
cmpl
popf
mov
repz
cmp
imul
orb
lock
jb
addr16
adc
mov
sbb
js
dec
int
daa
hlt
xor
adc
pop
push
cmpsl
xchg
lcall
shl
inc
cmp
or
adc
xchg
dec
out
jae
add
and
shll
inc
rcll
test
stc
or
inc
sbb
adc
and
pop
xor
add
xchg
push
movl
pusha
lock
push
shl
or
push
mov
add
rcll
jbe
inc
das
sub
xor
call
xchg
sbb
lcall
out
pop
jg
cmpsl
lds
mov
mov
out
fisttps
cmpsl
mov
mov
and
outsl
scas
mov
mov
popl
stc
jecxz
mov
pop
push
out
rorb
sub
lcall
lret
test
adc
cld
out
ja
rorb
rol
dec
rolb
mov
data16
in
insb
std
mov
shl
sbb
mov
or
pop
adc
test
flds
mov
mov
adc
add
sbb
roll
mov
fsubrl
shlb
lret
das
push
pop
mov
stos
scas
pop
pushf
xchg
cld
cld
into
cmp
mov
call
lea
adc
jecxz
push
gs
xor
les
inc
aas
adc
sbb
movsl
fisubs
xor
xchg
aam
sub
daa
popl
idiv
or
negl
mov
jge
mov
mov
or
ficomps
sub
push
test
dec
xchg
pop
popf
jmp
adc
aaa
pop
aas
mov
mov
sbb
sbb
aas
fstps
jge
inc
std
or
jns
jae
xchg
jbe
sub
mulb
icebp
jb
test
popa
es
andl
js
cmp
pop
in
icebp
inc
add
test
adc
je
adc
rcr
mov
xchg
cmp
cmc
test
stos
inc
mov
subb
xor
jnp
aam
leave
hlt
push
cmp
push
mov
daa
cmpsb
xor
cmc
imul
sahf
or
inc
pop
vcvtpd2psx
shlb
pop
in
or
rolb
cwtl
cli
mov
in
mov
inc
dec
xchg
into
and
lret
mov
mov
or
inc
ss
outsb
mov
lock
sub
arpl
adc
xor
push
jg
lock
cltd
mov
scas
jbe
adc
mov
lds
mov
mov
push
mov
inc
xlat
in
and
loopne
es
cld
inc
cld
insl
jmp
ss
fcomps
subb
gs
pop
mov
insb
loop
push
fstpt
cmc
testb
jecxz
mov
pusha
gs
shll
loopne
lods
es
adc
push
cld
sub
dec
bound
fidivl
ror
inc
dec
bound
mov
ficomps
loope
xchg
rcr
repnz
dec
xorl
leave
daa
inc
or
mov
sbb
mov
cmp
out
and
pop
or
outsb
push
lea
mulb
xchg
fsub
mov
jbe
jno
lods
push
mov
xchg
mov
mov
test
test
int
pop
cmp
inc
xor
pop
in
lret
pop
add
sbbb
mov
push
int
pop
push
stc
enter
or
repz
bts
imulb
je
xor
mov
mov
bound
mov
dec
ret
cmp
loopne
rorb
test
addr16
mov
sub
mov
or
pop
data16
ror
fwait
gs
sbb
mov
inc
jo
test
fsubs
scas
sti
mov
js
out
outsb
sbb
xchg
jno
cmpsb
sbb
inc
xchg
or
repnz
and
and
cs
enter
daa
xchg
mov
gs
bound
xchg
test
int
jo
jbe
or
push
pop
dec
scas
leave
inc
scas
imul
xor
loop
dec
add
dec
outsb
mov
pop
fnop
sbb
lcall
add
call
sbb
and
insl
mov
imul
mov
shrb
xor
in
mov
in
fmul
stos
and
out
adc
popa
sbb
adc
jl
test
lods
aad
mov
rcrl
sbb
jns
stc
jmp
xchg
add
out
push
adc
fcmovnb
ret
imul
xchg
dec
pushf
in
lock
mov
pop
hlt
sbb
mov
stos
mov
gs
pop
lcall
cld
sub
pop
pushf
jns
push
xchg
mov
dec
mov
mov
lods
cltd
sbb
test
inc
lds
push
imul
popa
gs
test
mov
daa
fidivrl
rcr
sbb
out
xor
aas
bound
nop
push
mov
mov
scas
aad
adc
aas
rorl
ss
dec
out
mov
xchg
hlt
mov
imul
xor
sbb
jl
andl
das
or
mov
inc
mov
movsb
lcall
mov
inc
xor
mov
push
aam
in
lea
daa
std
dec
test
insb
mov
sub
and
popf
cmpsb
push
fs
sub
ret
jle
aam
jmp
cmp
jg
or
jo
imul
cmp
cld
mov
loop
leave
add
jne,pn
test
aaa
or
int
pushf
jl
and
sub
pusha
cli
push
push
jnp
movsl
cmpsb
stos
cmp
and
cmc
jnp
mov
jg
cmpl
xor
roll
jbe
push
loope
sub
pop
add
sbb
mov
jecxz
into
push
sbb
jne
cld
mov
sub
insb
dec
sahf
les
cli
imul
mov
cmc
add
call
dec
cs
mov
stos
imul
mov
cwtl
pushf
push
lcall
push
lcall
pop
inc
mov
and
push
repnz
xor
xchg
add
xor
aaa
ljmp
push
aas
arpl
add
out
dec
lock
les
cli
icebp
ret
insb
pop
cld
mov
push
sbb
or
jp
enter
icebp
int
pop
xchg
pop
xchg
pop
fldl
adc
sbb
lcall
shrb
rcrl
bound
iret
push
cli
xchg
add
mov
adc
pop
mov
dec
mov
cmp
jmp
xchg
jg
xchg
xchg
push
adc
mov
jne
test
or
sar
lret
cwtl
stc
sbb
add
inc
inc
pop
int
int3
lock
hlt
test
movb
mull
mov
sub
mov
outsb
in
in
aam
sbb
mov
jg
pop
into
jg
mov
inc
add
sub
cli
lock
leave
pop
sbbl
inc
sub
jl
int3
cld
ffree
mov
mov
jmp
fwait
aad
jns
sub
andl
out
xchg
loope
stos
jno
sub
test
push
shlb
in
xchg
sbb
in
cmp
and
pop
aad
cmp
xchg
jecxz
loopne
cmp
popf
mov
adc
addr16
dec
icebp
add
cmpsl
aaa
inc
ds
daa
add
add
inc
xchg
jl
aaa
imul
and
inc
mov
push
popl
std
hlt
push
and
lock
lret
jl
shll
ja
lds
sbb
into
sbb
push
mov
xchg
hlt
lea
and
adc
hlt
mov
cmpsl
xor
or
push
sbb
dec
push
inc
mov
les
mov
aad
test
les
imul
fs
movsl
sub
adc
pop
jno
inc
int3
dec
push
push
std
pop
xor
and
mov
lock
xor
and
incl
imul
cmc
mov
int3
int
shl
add
jmp
stc
addr16
xorl
jns
lods
outsb
orl
cmp
mov
lret
incl
je
test
xor
testl
sbb
or
ds
inc
jp
cmc
cmpsb
sub
sub
jg
cld
jns
pminub
jge
mov
xchg
les
adc
aaa
jb
mov
inc
sbb
ss
dec
push
loop
sahf
mov
shl
mov
dec
push
sub
enter
inc
data16
fs
and
mov
pop
dec
push
rcl
test
fs
adc
mov
xlat
outsl
jecxz
stos
scas
xor
jo
push
ja
imul
imul
mov
xchg
push
add
jge
fimuls
jl
xor
add
add
test
fwait
out
ficoms
jns
nop
and
jge
sarb
enter
pop
sbb
rolb
pop
cs
sbb
push
out
call
cmp
and
sbb
push
mov
push
test
mov
pushf
inc
repnz
nop
ss
xchg
cs
aam
ss
inc
lods
and
nop
mov
dec
inc
scas
lea
or
xor
sub
and
das
shlb
or
jge
mov
push
add
mov
jmp
gs
and
jb
cmp
stc
call
sub
lock
movsb
js
mov
jl
adc
xchg
jmp
lret
in
shlb
xchg
inc
repnz
test
sub
mov
aaa
mov
imul
or
fistps
or
test
mov
inc
jp
jp
xchg
fcompp
dec
dec
or
pop
adc
shrb
and
cmp
out
flds
push
insb
pop
jmp
rol
int3
cmp
movsb
xchg
ss
lret
cld
imul
jp
js
cmpsl
out
dec
shl
adc
movsl
loope
mov
or
jmp
jbe
jnp
dec
sbb
or
je
mov
addr16
mov
mov
mov
push
push
adc
mov
sbb
lret
aas
out
cmp
cmp
jne
push
cwtl
cmp
add
mov
das
cmp
dec
sbb
xchg
push
das
inc
sarl
nop
and
dec
out
xchg
scas
fcoms
pusha
test
mov
mov
inc
jl
dec
shrb
mov
fisubs
outsb
or
test
pop
add
pop
shlb
mov
xorb
stc
dec
mov
xor
sbb
test
inc
adc
adc
insl
xor
xchg
sub
ljmp
sahf
lods
push
mov
sbb
test
insl
mov
ret
dec
outsl
pop
push
out
push
jb
out
sub
cmp
xor
insb
xor
repz
das
jns
movsb
pop
lds
ds
pop
or
inc
dec
mov
xchg
mov
cmp
addb
dec
notb
insl
into
dec
push
leave
bound
ja
cmc
push
add
outsl
insl
lret
cli
scas
es
jg
shr
push
jle
jbe
cli
push
scas
or
mov
fucomp
jmp
jbe
std
pop
adc
gs
or
sahf
jl
aam
leave
in
int
test
fisubs
sub
pop
push
sbb
push
xchg
in
jmp
push
xchg
sbb
cld
inc
add
mov
scas
add
data16
cltd
cmp
add
xor
in
pop
cld
gs
ds
repz
mov
sbb
loopne
clc
and
jl
cmp
xchg
cmp
xchg
enter
xlat
out
mov
clc
push
inc
push
push
faddl
mov
mov
mov
cli
ret
mov
and
add
aas
jns
mov
push
mov
int
lea
cmp
and
mov
inc
mov
lret
and
out
mov
lret
mov
ljmp
push
hlt
push
add
cltd
and
mov
and
call
cmp
xor
cli
inc
add
flds
movsb
sub
dec
popa
sub
outsb
arpl
lret
ljmp
sti
sar
or
add
add
cmp
mov
xchg
fnstsw
inc
movb
movsb
js
mov
mov
push
dec
jno
cmp
sbbl
rcrb
roll
scas
popa
loope
test
shll
jecxz
fadds
adc
data16
stc
jl
in
add
repz
jle
jecxz
call
add
push
test
cwtl
cmpb
flds
movsb
addr16
ret
xchg
fcmovnu
sbb
dec
cmp
fldenv
cmpsb
add
mov
nop
push
push
jp
add
add
lahf
mov
xchg
xchg
pop
fs
aad
push
or
xor
cmp
jne
inc
fmull
aas
cli
jmp
lret
cmpb
adc
stos
xchg
fidivrs
std
inc
mov
mov
movsb
nop
dec
insl
test
lods
mull
and
clc
add
fwait
cmp
jo
popa
outsb
and
movsb
fstpl
popl
test
jecxz
add
repnz
aam
inc
inc
cwtl
pop
jae
mov
xchg
popa
aad
pop
repnz
stos
mov
es
bound
cli
in
sarb
cltd
std
mov
and
jo
scas
dec
sbb
lahf
xchg
sarb
jo
scas
add
scas
outsl
stos
cmp
shll
mov
sbb
shl
add
sbb
jmp
cltd
test
in
hlt
cli
pop
sub
les
add
xor
or
icebp
call
ret
xchg
jg
mov
dec
into
repnz
pop
inc
fadds
push
repnz
push
std
cmp
mov
adc
adc
adc
out
clc
fbld
icebp
mov
sbb
addr16
int
in
mov
ret
inc
mov
insb
stos
in
mov
lret
mov
sbb
in
dec
sti
and
in
dec
enter
mov
mov
or
push
lret
xor
cmpps
cmpsl
push
sbb
xor
jle
mov
adc
and
lcall
lods
jecxz
shrl
jns
push
sbb
jnp
inc
sub
mov
fldenv
push
cmp
mov
fidivl
push
test
xchg
pop
dec
movsl
inc
sbb
push
ficomps
lods
push
adc
test
push
divl
sbb
pop
adc
lds
stc
outsb
pop
sub
cmp
pop
out
mov
add
jbe
mov
cmp
lahf
ja
fs
sbbl
sub
pcmpeqd
pop
jl
adc
mov
mov
mov
push
stos
mov
mov
pop
lds
jbe
push
dec
xchg
pop
aam
push
xchg
jecxz
in
repnz
dec
aaa
and
dec
cwtl
pop
pusha
sbb
and
fistpl
mov
pusha
mov
push
icebp
sub
fnsave
push
sub
pop
popa
test
popf
jg
call
data16
nop
xchg
insb
cmp
xor
mov
or
shll
cltd
sbb
out
iret
adc
push
mov
aam
ror
sub
add
rol
lods
mov
push
cmp
in
dec
jge
test
mov
mov
mov
dec
inc
sbb
movsb
adc
pop
adc
test
push
add
push
xchg
sub
cmpsb
hlt
movsb
mov
in
repnz
lahf
add
push
xor
lret
push
pop
jne
imul
repnz
mov
cld
out
decb
cs
cs
fnsave
pop
fcmovnu
jl
out
jne
and
std
das
cmp
cmp
and
mov
hlt
push
sub
aaa
ficomps
sub
fsubp
int3
cld
adc
cli
in
and
sahf
and
xor
sub
sbb
icebp
jl
pop
daa
push
dec
push
jecxz
jns
fistpl
jle
call
fistpll
rolb
push
push
punpcklbw
adc
stos
mov
fcomip
xor
jp
addr16
fimull
mov
mov
dec
pop
mull
lret
in
mov
aaa
cmp
popa
mov
jbe
xlat
and
jb
je
mov
pop
inc
xor
out
xor
insb
and
dec
imul
ret
dec
cmc
xor
push
loopne
cltd
icebp
push
rolb
lret
popa
cltd
cld
jg
test
icebp
sahf
pop
test
pop
mov
rcl
sahf
lret
xor
shl
mov
arpl
mov
addl
cs
arpl
out
xor
stos
xor
xchg
pop
mov
in
lret
cmp
jne
xchg
ja
or
loop
shl
daa
gs
leave
push
lods
mov
sub
xorl
data16
mov
pop
sbb
sub
mov
and
ds
sub
or
decb
add
sbb
rorb
arpl
inc
cmp
cli
mov
stos
dec
cmp
xor
popf
das
iret
pushf
sarl
jge
push
insl
cltd
movsl
js
cmp
dec
aad
jp
stos
push
data16
push
aad
push
xor
stc
xchg
fsubs
mov
jecxz
stc
insb
inc
dec
mov
movsb
sub
and
sbb
or
in
popf
adc
data16
popa
lcall
xlat
or
lret
fwait
xor
clc
ljmp
mov
sbb
inc
out
mov
mov
into
sub
scas
popf
sub
jecxz
popa
lock
imul
outsb
jo
inc
in
aam
test
cs
mov
sti
insb
movsl
dec
xchg
cld
xchg
xchg
adc
lcall
push
cltd
or
sub
cmp
imulb
push
jb
sub
cs
fwait
lods
pop
leave
cmpb
xchg
ret
xor
push
pop
pop
xchg
push
add
in
mov
fstp
js
sub
je
fldcw
cmp
mov
pop
or
mov
xlat
aam
lods
cli
cmpsl
addl
enter
dec
stc
and
adc
stc
xchg
sbb
sbb
adc
imul
movsb
mov
xchg
ja
icebp
xor
jno
and
inc
adc
leave
lret
out
and
or
mov
bound
push
sub
lea
pop
mov
adc
lods
xor
sub
rcrb
sti
loopne
sti
repz
fsubp
aam
mov
dec
push
clc
dec
addr16
add
xchg
pop
aas
inc
and
daa
push
lret
jg
push
dec
enter
sub
pop
loopne
dec
push
daa
push
lock
pusha
adc
adc
lds
sub
in
xor
out
shll
loop
mov
jg
test
mov
xor
mov
dec
push
clc
test
loopne
cld
or
pop
bound
xor
lahf
andl
dec
adc
movsl
mov
je
fwait
mov
mov
popl
adc
cmp
sub
pop
and
cwtl
xchg
mov
pop
cmp
and
xchg
jb
mov
xor
imul
jecxz
sarb
cwtl
push
ret
in
xor
pop
out
out
or
dec
movb
push
test
jle
push
lcall
fs
cmp
xchg
test
xor
daa
mov
or
icebp
adc
xchg
loop
add
pop
sar
mov
jecxz
lods
inc
or
xor
or
cmp
adc
push
sub
or
out
jl
int
pop
dec
adc
xchg
mov
xchg
rolb
enter
mov
dec
faddp
mov
or
in
jo
rcl
inc
shlb
cwtl
dec
or
mov
xchg
bound
leave
cmp
dec
mov
subl
shll
test
movsl
icebp
sahf
out
popa
adc
add
pop
add
sbb
or
xchg
mov
jmp
clc
push
sbb
jbe
subl
les
les
call
or
mov
jl
movsb
dec
and
stos
ja
test
or
sbb
mov
pop
push
scas
sar
imul
cltd
ret
daa
nop
loop
mov
cmp
and
out
adc
mov
dec
adc
xor
cld
mov
gs
cmp
out
cwtl
pop
sbb
stc
mov
in
mov
cli
cwtl
sti
lcall
fildl
cs
ljmp
test
addr16
xor
in
jmp
push
in
mov
push
dec
loop
int3
pop
xor
jno
push
adc
mov
pop
lcall
arpl
mov
add
fwait
inc
test
xchg
cs
push
mov
rcrb
sub
fcomp
inc
mov
out
cmp
sbb
xchg
mov
aaa
dec
insl
les
sahf
mov
cmp
inc
mov
ror
and
or
push
or
push
inc
pop
adc
cmc
aad
and
and
repz
cmpsb
lret
fidivl
push
daa
jecxz
cmpsb
arpl
in
scas
mov
push
or
bound
push
add
je
add
mov
aam
std
out
hlt
adc
test
dec
jns
mov
fldl
or
leave
pop
scas
rep
rcrb
cld
mov
mov
jmp
inc
in
pop
mov
xor
push
mov
jle
std
jnp
or
xchg
cld
adc
push
cmp
mov
cmpsb
in
cli
jbe
dec
les
fwait
aam
repnz
mov
arpl
popf
inc
fadds
xor
in
inc
mov
jnp
mov
leave
dec
adc
mov
lret
pop
je
cmp
aaa
dec
icebp
mov
ret
filds
in
or
std
out
add
cmp
xchg
adc
pop
das
fdivs
adc
nop
push
popa
mov
and
jb
inc
jo
es
pop
mov
fwait
jg
in
inc
dec
scas
in
les
hlt
push
andb
inc
ja
adcb
cmp
add
cmp
sub
pop
push
arpl
sbb
adcb
imul
arpl
xchg
stos
or
inc
xor
test
loopne
adcl
adc
dec
cmp
jno
ret
dec
dec
pop
cli
out
xchg
xchg
in
adc
movsb
fwait
xchg
call
adc
jno
pop
popa
add
cs
sub
ja
pop
shll
popf
ja
inc
ret
or
stos
push
sub
ja
jl
add
push
adc
shrb
aaa
push
iret
add
jb
ja
push
arpl
ret
int3
and
out
cmp
cmp
into
xor
lock
mov
mov
lahf
negl
mov
pop
adc
mov
add
xchg
xor
sub
dec
push
aas
mov
dec
lods
andb
pop
setno
sahf
xor
mov
adcl
stc
sub
push
and
dec
in
adc
sub
sub
mov
push
mov
cli
ret
mov
mov
mov
lods
sub
loope
mov
shl
in
inc
lcall
dec
rcll
push
dec
push
imul
lods
push
inc
ss
pop
dec
adc
cmp
ja
fwait
movsl
icebp
or
arpl
fs
pushf
xor
adc
fisttps
daa
pop
data16
pop
std
clc
sbb
inc
das
push
jle
es
int
mov
pushf
js,pt
sbb
mov
mov
fadd
fnstsw
scas
pop
cmp
cmpl
and
pop
xor
push
jne
scas
shl
rol
jne
subb
sarl
divl
push
or
sar
and
adc
jo
mov
dec
mov
out
sub
mov
test
repz
fwait
mov
mov
dec
ficoms
sub
dec
mov
stc
or
into
imul
xchg
mov
xor
lret
incb
testl
or
or
xor
out
rclb
fwait
ret
aad
or
xchg
xchg
pushf
in
out
pop
inc
jmp
sar
dec
fwait
std
mov
sti
dec
js
sub
in
arpl
mov
fldenv
xchg
mov
cmp
mov
sub
inc
or
sbb
jge
pushf
lods
and
and
xchg
repz
int
mov
push
add
ljmp
je
mov
icebp
push
loopne
sbb
out
gs
mov
imul
mov
and
jg
es
aam
lds
cltd
loope
mov
jnp,pn
mov
cmp
cmp
lds
cli
push
adc
pop
jge
fimull
sbb
cmpsb
pop
mov
xor
stc
lea
mov
out
in
out
fs
mov
add
add
sti
addr16
xor
xchg
jno
outsb
inc
sub
daa
adc
xsha256
cmpsb
xchg
aas
pop
mov
out
loope
inc
outsb
bound
and
addr16
div
cmp
inc
pop
push
xchg
das
cmp
cmp
xchg
mov
dec
add
xor
cmpsb
xchg
gs
push
loop
xlat
rorb
pop
or
pop
movsb
jno
outsb
out
js
orl
push
into
outsl
add
stc
testb
arpl
lahf
and
subl
in
outsl
pop
loope
loopne
bound
sbb
ret
push
inc
ret
mov
int
out
fcomi
or
aaa
mov
cmpb
fcompl
rorl
bound
dec
push
or
xorl
xor
fstpt
or
popf
cs
in
mov
cld
push
sub
loop
mov
orl
ret
ret
mov
imul
sub
movsb
test
mov
in
pop
pop
pop
and
ficoms
mov
pop
in
cmpl
out
leave
popa
dec
sub
test
xchg
pop
push
adc
push
fwait
adc
mov
jl
subl
sbb
sub
subb
outsb
jo
jns
mov
mov
dec
out
std
mov
pop
xor
movsb
mov
and
sub
inc
jge
pop
mov
xchg
fmuls
lret
mov
mov
lea
dec
sub
xchg
and
mov
sbb
in
xor
imul
data16
lret
fmul
xchg
sbb
sub
sbb
setl
outsl
mov
loope
add
mov
and
cld
arpl
pop
mov
adc
jno,pn
imul
in
add
mov
pop
testb
movsb
adc
int3
mov
adc
mov
mov
call
or
pusha
sub
clc
or
xchg
das
pop
aam
xchg
pop
mov
fsts
xor
xor
xchg
dec
into
pushf
sub
inc
mov
pop
fisubs
sahf
fstp
ss
repnz
dec
arpl
int3
out
es
pop
adc
sub
movsl
xor
sub
push
or
jle
adc
das
cmp
push
pushf
mov
xor
out
mov
jo
sbb
int3
clc
rcrb
out
xor
inc
pusha
mov
dec
jns
dec
mov
pop
mov
inc
dec
xlat
loop
mov
jl
fcompl
push
dec
jne
pop
pop
xchg
stos
mov
or
lret
adc
or
sti
fucomp
insb
stos
and
lock
mov
mov
int
add
aad
adc
arpl
xchg
cmp
insb
adcl
lock
out
push
pop
pop
sbb
push
arpl
movsl
cmp
xchg
pusha
scas
cmp
mull
addr16
fidivs
xchg
pop
cmp
mov
out
xbegin
cs
mov
pop
test
cmp
mov
sub
lahf
outsl
or
adc
lods
dec
xorb
pusha
mov
push
sub
pop
cld
mov
lret
bound
scas
inc
and
lea
dec
mov
xor
or
xchg
push
lahf
cmp
dec
out
hlt
adc
pop
dec
je
jecxz
pop
jnp
sbb
and
jnp
sbb
cli
push
loopne
stos
mov
subl
ret
int3
push
lahf
push
mov
push
repnz
mov
inc
inc
icebp
scas
xchg
add
stc
fisttpll
fwait
and
int
mov
loopne
mov
sbb
loope
mov
or
gs
das
fdiv
inc
add
pop
push
xchg
lahf
push
sub
dec
inc
pop
fistl
scas
mov
ljmp
add
dec
jne
mov
dec
mov
decl
or
cmp
sbb
sahf
jo
xchg
idivl
xchg
push
inc
jmp
ss
mov
orb
lret
pandn
cmp
lea
mov
dec
icebp
incb
imulb
mov
cwtl
mov
sbb
xchg
jmp
push
insl
pop
cmpl
dec
dec
fsubrl
daa
mov
shrd
xchg
inc
xor
sahf
and
push
aaa
jge
dec
add
cmc
jmp
sti
and
rcrb
xchg
lcall
inc
xor
push
pop
pop
xor
and
movsb
aad
xchg
jnp
lods
cltd
mov
inc
fisubl
inc
adc
aam
xchg
hlt
xor
add
insl
mov
es
xchg
test
fildl
js
pop
sub
add
cli
scas
popa
out
xchg
sar
dec
add
lds
frndint
dec
mov
push
lods
iret
hlt
outsb
dec
dec
fmuls
ss
mov
and
push
cs
arpl
imul
jl
cmpsb
fs
adc
mov
testl
mov
dec
jle
je
cltd
dec
dec
push
or
lahf
movsb
pushf
dec
out
pop
push
scas
sbb
repz
or
popa
push
popf
roll
or
cmpsl
inc
ljmp
outsl
aad
xchg
add
outsb
orb
push
insb
push
jnp
dec
add
and
mov
add
lock
insl
gs
jns
jle
jmp
pusha
inc
xorl
jge
xlat
and
dec
mov
pop
aad
push
adc
xor
push
xchg
pop
inc
xor
xor
das
dec
xor
sbb
popl
loope
stos
mull
push
jg
lock
dec
loop
and
add
and
loop
lret
inc
jbe
adc
arpl
nop
adc
inc
sbb
fstpt
repz
mov
xor
inc
ss
ss
aaa
or
sub
xorl
in
fisttpl
popf
jb
mov
xor
insl
mov
mov
shlb
jmp
mov
out
add
add
gs
pop
xchg
sbb
daa
mov
sub
adc
loop
jge
push
adc
cmp
hlt
mov
lret
shl
mov
cmpsl
enter
aas
clc
add
lods
jecxz
insb
jbe
ret
into
bound
cltd
out
in
sub
divb
xchg
mov
mov
flds
pop
mov
rorb
adc
add
shl
adc
or
repz
sub
push
loop
fdivrp
lahf
jnp
jle
test
add
sub
mov
std
call
push
xchg
mov
jbe,pn
fistpl
scas
mov
in
je
push
imull
pop
scas
notl
insl
subl
test
neg
add
ficomps
icebp
sbb
movsl
dec
pop
push
xor
inc
mov
sbb
mov
cli
inc
mov
scas
add
out
arpl
inc
mov
pop
xor
call
add
mov
mov
jne
sti
xor
lods
cmp
sbb
aad
pop
sub
cs
aam
lds
fildl
sbb
sbb
jno
cli
dec
jb
lret
bound
pop
lret
push
sub
jae
mov
add
adc
mov
int3
rcrb
adc
adc
xchg
mov
inc
xor
pop
fwait
adc
cmp
sbb
xchg
std
jns
jbe
jle
pop
pop
nop
adc
dec
imul
jmp
addr16
xor
mov
xchg
jl
andb
icebp
jo
pop
or
repz
cmp
aad
xchg
or
sub
fsubr
shr
cmp
popa
dec
into
lock
mov
mov
faddl
insb
jle
imul
mov
mov
fwait
hlt
inc
or
in
add
sub
mov
push
push
idivb
sub
sbb
xchg
mov
xchg
jne
fcoml
mov
dec
mov
fucomip
or
mov
lods
sahf
testl
test
in
mov
dec
ficoml
xchg
add
or
mov
inc
pusha
xchg
lahf
mov
sbb
add
push
push
insb
adc
jg
mov
xor
add
aas
dec
jecxz
jne
and
xor
xor
iret
pop
jno
in
sbb
xor
cs
cli
push
stos
mov
roll
insl
leave
lahf
iret
dec
xor
scas
mov
test
mov
sysenter
inc
arpl
das
push
stos
pop
jae
dec
mov
mov
sarl
jle
inc
add
jp
sbb
push
shll
aas
or
add
xor
pop
sub
fs
pop
loop
sbb
aad
mov
bound
jp
cmpsl
icebp
out
push
push
lods
int
into
mov
ficoml
xchg
mov
hlt
in
movsb
jmp
pop
pop
jg
aaa
aas
daa
pop
adc
dec
sahf
jbe
xor
daa
shll
mov
pop
mov
add
xlat
sub
mov
pop
jno
cmp
inc
scas
daa
jo
or
inc
push
out
adc
rcrl
lea
test
cltd
add
in
mov
push
test
dec
add
or
outsl
mov
ss
shrl
psubb
add
adc
fsubp
xchg
or
mov
and
push
dec
imul
mov
popa
jl
add
fldenv
dec
push
cs
and
out
into
push
ss
das
xchg
stc
dec
das
jns
sub
xchg
cltd
and
sbb
fwait
mov
or
cmpsl
jl
mov
sbb
mov
jp
and
dec
and
cmpsb
add
inc
mov
sbb
xchg
mov
mov
xchg
fs
clc
adc
ret
mov
add
sub
mov
xor
nop
imul
insl
testb
mov
dec
cmpsl
xor
lea
movsb
or
insb
dec
imul
arpl
fiaddl
inc
dec
fidivs
ljmp
nop
mov
xor
out
lods
adc
sbb
stos
clc
jp
cmp
sahf
xor
std
insb
shll
or
imul
mov
pop
push
push
pop
arpl
adc
push
mov
and
mov
jb
xor
imul
adc
cwtl
pop
pop
pop
jnp
pop
sbb
push
sbb
lret
jno
test
mov
adc
in
jge
insb
cli
ret
sbb
sahf
xchg
scas
gs
pop
sub
cmp
cmp
inc
cmp
stos
xchg
mov
jmp
addr16
cs
cld
pop
sbb
movsl
fstpt
sbb
jecxz
sub
insb
lods
sub
leave
cmpsb
sbb
mov
sti
push
push
mov
movsb
cltd
adc
adc
int
jnp
test
mov
mov
jl
test
nop
scas
loopne
nop
cmpsb
lret
lock
test
mov
push
ljmp
cmp
xchg
add
or
and
jo
out
mov
daa
fisttpll
cmp
add
sub
dec
bound
cld
mov
and
testl
xchg
mov
sub
in
testb
in
jne
std
out
gs
dec
xor
xor
xchg
cmpsl
jmp
or
or
out
test
mov
incl
lock
pop
scas
inc
dec
pop
popf
push
dec
les
or
pushf
lret
and
in
dec
jns
call
cli
jno
xchg
jge
add
scas
inc
pushf
push
sbb
je
and
lods
push
jb
popa
unpckhps
dec
push
jge
dec
stos
mov
push
cmpl
inc
mov
mov
push
cmp
mov
sub
lret
loope
push
mov
jmp
mov
iret
sub
pminub
push
jno
sub
jb
xchg
ds
fdivs
pop
addl
jl
jno
and
push
push
or
imul
dec
fsub
ds
sub
mov
mov
lcall
jne,pn
add
xor
push
jg
mov
jmp
lahf
mov
in
aaa
mov
cmp
jbe
ljmp
test
adc
lds
sbb
mov
icebp
mov
xchg
pop
mov
imul
imul
pusha
leave
pop
pushf
mov
dec
fldcw
pop
sbb
testl
rcl
lahf
adc
cmp
jg
sbb
sbb
lcall
call
aas
add
inc
cli
push
xor
sub
xor
fidivrs
pop
mov
add
frstor
popf
ret
lcall
aaa
mov
sub
add
pmullw
pushf
mov
scas
ljmp
sbb
in
leave
sub
imul
subb
sarl
pusha
xchg
xlat
jge
icebp
lock
mov
out
push
scas
loope
lahf
inc
cmp
inc
add
dec
mov
mov
icebp
dec
rorb
push
sbb
xor
adc
in
roll
je
xchg
fisubrs
inc
push
sti
push
arpl
mov
xor
mov
and
dec
and
icebp
pop
cs
decb
inc
cmp
aas
sub
in
stos
mov
dec
in
mov
push
cwtl
cmp
inc
or
push
daa
int3
xchg
push
sbb
sbb
jle
fcomi
loope
outsl
pop
test
js
mov
mov
or
push
dec
push
lods
mov
or
jno
insb
jmp
and
pop
fwait
rorl
je
jp
inc
sti
inc
imul
es
int
mov
or
pop
in
mov
mov
mov
popa
iret
insl
fbld
xchg
jle
not
mov
adc
int
pop
dec
jp
cmp
add
clc
arpl
mov
jns
dec
cmp
xchg
negb
sbb
cmp
sbb
sub
mov
clc
adc
mov
mov
or
mov
test
into
lea
cmp
stos
inc
dec
inc
push
aam
scas
jl
add
gs
mov
not
inc
push
insb
inc
aad
shlb
aas
js
push
mov
cmp
sub
cmp
ss
sub
or
sar
insb
pop
ret
test
mov
mov
jp
pop
test
in
mov
testl
jno
mov
push
cmc
hlt
call
push
in
in
and
pop
sub
vmovaps
push
add
and
jnp
outsb
insb
shlb
and
ss
cmp
imul
push
push
inc
fcmovbe
fs
icebp
xchg
xor
inc
dec
icebp
jmp
jb
jecxz
cltd
jp
out
push
mov
fstps
jae
call
push
push
or
divl
loope
push
ficomps
fs
cld
push
or
sbb
lret
in
pop
icebp
test
or
hlt
stos
loope
leave
and
in
les
adcb
mov
fstps
dec
negl
leave
cmp
jge
movsb
xchg
xchg
into
push
and
push
pop
sub
mov
jne
pop
push
nop
pop
mov
jge
xchg
insl
outsb
popf
sub
cmp
cmp
inc
mov
aam
data16
lea
les
push
add
xor
add
rcl
xor
gs
bnd
cmp
and
pop
sbb
pop
aaa
imul
cli
andb
pextrw
jo
push
xlat
adc
ficomps
and
jp
repz
fmull
lcall
daa
enter
sbbb
rcll
mov
insl
and
mov
mov
dec
dec
aam
mov
lret
idivl
mov
lret
mov
pop
pop
push
ror
sbb
add
push
xchg
pop
ds
cmp
lds
or
gs
sbb
cwtl
pop
frstpm(287
ss
repnz
xchg
dec
shlb
and
test
pop
roll
stos
jp
out
add
dec
cmp
push
sarb
ss
fbstp
jge
enter
cld
xchg
popa
fld1
mov
adc
test
xchg
gs
and
jbe
das
fsubl
push
mov
fwait
aad
into
push
subl
test
repnz
and
lret
rcll
xchg
sbb
jo
pop
sbb
adc
into
mul
mov
rclb
push
fsts
sub
cmpsl
push
dec
out
shl
xor
mov
test
sbb
stos
adc
call
roll
jmp
sbb
xchg
inc
jnp
inc
xchg
std
cltd
adc
fisttpl
or
icebp
adc
mov
insl
push
das
fldt
push
repnz
int3
push
add
xor
mov
cmp
mov
std
cld
imul
mov
and
aaa
adc
or
mov
add
or
mov
insl
xchg
lea
lods
dec
adc
jb
push
pusha
push
push
pop
inc
fwait
pop
loope
jg
imul
flds
mov
jmp
mov
cmp
shl
adc
jns
fstpt
scas
add
mov
cwtl
dec
inc
call
dec
in
ret
popa
pusha
leave
cmp
jo
push
aam
in
mov
mov
and
xlat
inc
mov
scas
lds
sub
fwait
sbb
rcl
lods
push
loop
adc
jl
outsl
and
mov
or
lret
cmp
ljmp
idivl
inc
fsubrs
mov
add
cltd
adc
mov
fidivrl
sbb
dec
test
adc
jne
out
add
jecxz
jbe
test
sub
pop
cwtl
xor
test
jb
pop
pusha
out
and
jl
jb
in
adc
pop
mov
xchg
mov
sub
repnz
xchg
hlt
inc
xor
pop
mov
aam
lcall
mov
sbb
xor
pushf
cld
mov
je
fsub
sbb
and
cmc
ja
xchg
out
adc
dec
sub
fidivrl
add
ficomps
pushl
mov
test
mov
addr16
push
and
repz
dec
das
orb
mov
fcoms
add
imul
cmp
xchg
cwtl
and
xchg
push
bnd
ret
fs
cmp
push
xchg
mov
jl
inc
adc
mov
divl
pop
sbbl
mov
repnz
jo
cwtl
in
les
dec
in
test
pop
js
mov
movsb
xchg
xchg
inc
add
xchg
fnstcw
addr16
mov
scas
mov
and
push
addr16
cmp
xor
and
mov
adc
ret
fwait
cmp
jmp
jae
jecxz
or
jge
incb
idivb
jnp
ficoms
add
lock
mov
jg
adc
add
outsb
cmp
outsl
cmp
test
adc
and
push
not
loope
jb
xchg
cmpsb
pop
int3
mov
mov
dec
int
fcom
ror
ret
jge
jb
lret
lret
daa
fldenv
movsb
xchg
ds
popa
mov
outsl
popf
lds
fisubs
jle
jmp
pop
sbb
fisubl
push
idivb
cmpsb
mov
repnz
mov
dec
out
rcrb
sahf
add
stos
ret
ret
subb
dec
push
pop
jp
mov
xchg
insb
mov
mov
std
pop
leave
mov
xchg
jg
sbb
fwait
push
xor
sti
pushf
adc
hlt
sub
jp
mov
mull
jle
mov
jbe,pn
insb
inc
adc
mov
gs
adc
sbb
pop
xlat
insl
adc
fsubrp
sbb
cmp
decb
mov
repnz
push
pop
fwait
ret
mov
repz
dec
loopne
fimull
fcmovne
jl
aam
nop
sub
jecxz
add
xchg
fsubs
add
loopne
frstor
pusha
outsl
push
cmp
push
sub
xlat
mov
mov
push
cmp
lods
fisttpll
and
in
push
cltd
les
stos
sbb
xchg
sbb
mov
leave
leave
or
xchg
jb
xor
lcall
and
push
fdivl
ficompl
mov
xchg
adc
les
jecxz
add
cli
cld
jg
addr16
mov
aas
mov
inc
aas
jno
xor
mov
aaa
testb
add
mov
xorl
stos
cmp
mov
mov
fld
xor
test
xchg
inc
or
jbe
lods
shrl
cmpsl
mov
xchg
sbb
fstps
adc
ficoms
add
dec
pop
mov
mov
push
dec
rcl
add
lret
fsts
sub
xor
cmpsb
mov
aam
out
clc
mov
mov
out
loope
xlat
add
push
mov
dec
mov
xor
mov
and
lea
aaa
adc
pop
xchg
add
dec
test
out
mov
fimuls
fs
gs
stc
xchg
sahf
dec
or
test
dec
or
popa
movsl
out
testb
repnz
int
mov
in
sub
xchg
fwait
mov
in
xchg
xchg
push
add
mov
mov
add
sbb
and
cmpsl
rorl
jmp
js
pop
push
lds
sbbl
aas
jl
adc
mov
out
dec
in
xchg
lcall
xchg
mov
movsl
xchg
mov
arpl
jecxz
or
and
mov
push
jo
push
xchg
jb
and
push
fnsave
imul
sub
and
cld
xor
in
das
mov
push
add
mov
pop
dec
mov
mov
mov
or
push
cld
cmpsl
xchg
pop
and
mov
inc
mov
jb
je
cld
bound
jb
sbb
xchg
addr16
daa
add
ret
push
scas
dec
push
inc
mov
sbbb
stc
outsl
jne
fidivrs
sti
add
mov
lret
mov
into
mov
loop
mov
xchg
roll
push
aam
jnp
pop
jno
sub
inc
push
mov
jp
jp
sub
lret
lret
push
mov
sbb
aaa
movsl
mov
dec
jl
inc
pop
adc
cmp
mov
xchg
dec
ret
sub
stos
out
sbb
push
fs
push
lods
fnstsw
loop
aad
push
arpl
jl
push
iret
jmp
dec
cmp
jge
sbb
pop
int
mov
sub
insb
adc
int
enter
mov
dec
lock
clc
pop
stos
iret
cmp
movsl
idiv
pop
mov
inc
cmpsb
lret
jp
test
xchg
pop
sbb
xor
xor
loop
pop
pusha
push
pusha
daa
lds
dec
out
xchg
mov
jns
divl
dec
cmpsl
sub
xchg
test
xchg
cmp
xor
shlb
cmpsb
xchg
adc
jge
lret
push
inc
data16
mov
call
mov
xchg
fcoml
popa
stos
cmpsl
xor
lock
mov
ds
imul
adc
in
pop
fldl
jle
jl
mov
adc
sub
cltd
out
jp
inc
inc
mov
cmp
popf
xlat
pop
outsl
adc
mov
mov
decb
cmp
and
inc
xchg
int
jl
jl
mov
dec
and
jp
sti
sahf
fbld
ret
data16
lea
gs
mov
cwtl
lods
outsb
add
orl
sbb
mov
scas
push
push
cmp
or
xor
and
loope
in
repz
and
sbb
imul
fwait
push
sub
dec
popf
in
push
sbb
insb
std
enter
jle
jp
xor
inc
adc
fs
fcmovnu
imul
jecxz
sbb
aas
pop
pop
fcmovb
es
push
lods
add
jne
mov
leave
loop
jb
lea
iret
std
mov
adcl
not
mov
xor
test
lds
or
push
mov
sahf
jl
cmp
out
repnz
pop
ss
movsb
loopne,pn
or
sahf
push
xor
fidivrl
jae
cld
leave
scas
daa
mov
fnstenv
lret
fcmovbe
out
pop
sub
jne
xor
mov
sub
je
sub
push
test
test
pop
mov
mov
and
xchg
jmp
mov
inc
icebp
aas
rcrl
sbb
mov
cs
pushf
mov
and
inc
negl
xchg
mull
test
mov
pusha
dec
mov
lret
lods
push
or
lea
add
dec
xchg
push
lret
pop
sbb
ret
clc
push
pop
push
xor
test
imul
jecxz
jo
mov
jp
sti
cmp
call
lret
add
jmp
sub
xchg
mov
add
jb
mov
pop
leave
std
inc
cmp
daa
jo
pop
cmp
psrlw
xchg
push
jo
add
mov
out
in
cmpsl
xlat
push
mov
or
mov
test
lret
cli
popa
and
and
mov
mov
inc
stc
cmpsl
or
out
outsb
std
cmc
adc
outsb
test
pop
or
cmp
lcall
scas
daa
aam
push
stos
test
inc
dec
inc
push
ja
out
std
das
sub
sub
or
in
aaa
scas
stc
cld
mov
push
adc
imul
adc
mov
call
sbb
shlb
mov
test
mov
mov
loope
sarb
les
add
pop
ret
xchg
jge
enter
lcall
es
insb
ja
aaa
icebp
lcall
sub
add
clc
xchg
int
xor
aam
movsb
scas
sbb
jbe
mov
in
xor
pop
pop
jp
xchg
and
sub
cltd
jnp
mov
sbb
loopne
mov
divl
lock
daa
lret
les
jle
ljmp
setp
js
sub
xor
aas
mov
push
jl
pop
inc
add
pop
push
xor
cmpsl
dec
insl
jmp
mov
mov
mov
outsl
xor
scas
scas
jg,pn
adc
and
mov
dec
pop
and
sti
mov
adc
lods
loope
les
inc
xchg
popa
or
and
xor
adc
push
inc
scas
push
and
pop
sbb
rolb
cs
js
xchg
mull
mov
dec
lds
ss
jge
pop
enter
pop
subb
mov
leave
pop
fcomps
mov
push
inc
push
lahf
gs
ds
sub
dec
lods
mov
sbb
in
mov
xchg
pop
jne
cmpl
int
mov
cmpsb
sbb
mov
loope
add
xlat
push
shlb
int3
dec
mov
adc
inc
or
lret
cwtl
add
xchg
mulb
in
or
into
outsb
cwtl
les
loop
pop
insl
insl
packuswb
mov
lret
fdivp
iret
fbld
fsubs
movsl
out
jp
cld
sti
leave
mov
inc
push
inc
test
add
in
test
icebp
adc
clc
lcall
mov
pop
sbb
dec
out
loope
dec
jo
push
scas
mov
push
jno
popf
fwait
ret
jnp
nop
cltd
push
or
scas
pushf
popl
popa
lock
pop
xchg
dec
arpl
stos
and
and
add
outsl
xchg
test
mov
xchg
jp
int
clc
sub
inc
es
cmp
add
addr16
xchg
icebp
andl
xchg
or
out
lods
arpl
adc
cmpsb
or
je
inc
jbe
mov
minps
xorl
mov
addr16
dec
lds
mov
mov
cmp
inc
into
outsb
fisttps
mov
xor
push
imul
mov
push
loop
cmp
jno
fbstp
xor
add
jno
mov
movsb
pop
imul
dec
fstpt
movsb
sti
dec
loop
scas
jecxz
fwait
repnz
outsb
xchg
fwait
test
and
and
loope
mov
cmpsb
into
pushf
je
dec
stc
jle
jno
xor
sub
pop
cmp
scas
mov
push
push
into
rorb
fisubrl
out
fisubs
cmpsl
pop
outsl
xchg
clc
adc
push
adcb
addb
test
fwait
stc
subl
mov
call
pushl
ficompl
add
je
clc
xor
sub
add
cmc
out
adcb
jno,pt
iret
push
pop
pop
int
sub
dec
push
loope
cmc
ja
scas
loope
ds
mov
test
mov
jp
and
lret
sbb
movsl
test
mov
call
and
bound
cli
repz
lock
into
and
stc
fists
scas
push
adc
and
xor
divb
outsl
pop
cmc
sbbl
cmp
pop
loope
xor
cmp
dec
mov
xchg
cmc
adc
xor
lock
add
cmp
mov
mulb
mov
mov
test
and
or
mov
jae
mov
addr16
add
stos
outsb
mov
daa
jb
push
jge
aaa
jmp
jnp
cwtl
mov
movsl
mov
pop
or
out
cmp
fs
mov
mov
in
add
sub
cmp
subl
push
imul
push
xchg
xor
imul
popf
cmp
dec
ss
mov
jae
pop
shlb
add
dec
xor
addl
push
xchg
cmpsl
aas
inc
cmpsb
jbe
push
cmpsb
xchg
mov
lods
dec
jl
es
cmp
jl
frstor
les
mov
lock
cli
cmpsb
mov
roll
movsl
add
test
cmc
test
mov
hlt
outsl
lret
push
jns
movsl
pop
stos
les
hlt
iret
cmp
aas
mov
mov
fwait
push
dec
sti
pop
movl
add
popa
xchg
add
pop
sub
test
in
jo
mov
test
xlat
cmp
lods
xchg
test
clc
dec
push
dec
mov
pop
inc
xchg
xchg
jne
jecxz
jo
ds
je
jp
mov
add
inc
mov
sahf
jbe
jno
or
cmp
jp
imul
jmp
mov
fidivrl
test
sbb
mov
xor
imul
jl
pushf
in
add
mov
je
ret
or
sbb
movsl
fstps
lock
mov
push
scas
cwtl
dec
adcb
lds
loopne
xor
fisubs
out
in
or
rorb
jne
xchg
or
sbb
imul
jns
mov
pop
lcall
adc
enter
in
mov
fs
and
repnz
mov
out
mov
in
lea
add
ss
inc
fistpll
push
adc
icebp
repz
sbb
mov
insl
out
pop
bound
push
imul
pop
push
and
rcrb
stc
shrl
iret
loopne
test
imul
sarb
loopne
ss
cmp
sub
aad
xlat
dec
mov
sbb
xchg
das
je
add
mov
jp
pop
push
xor
add
adcl
cmp
out
push
in
pop
push
test
sti
sub
mov
push
pop
clc
std
dec
fwait
xchg
xor
aaa
cmp
dec
inc
push
pop
arpl
mov
inc
in
aad
pop
xor
outsl
adc
dec
out
and
iret
or
mov
pop
call
adc
rcll
int
dec
lret
cltd
push
sub
aaa
adc
in
mov
xchg
add
or
inc
test
push
jbe
hlt
and
pushf
sub
add
js
xchg
and
loop
xchg
popa
arpl
ret
cmpsb
loope
dec
xor
out
js
push
loope
adc
adc
enter
pop
fnsave
jl
push
xchg
dec
pop
mov
mov
adc
xorl
lret
sahf
jne
bound
add
pop
cld
pop
push
ja
xchg
jnp
pop
fcmovne
and
out
test
lods
call
cld
add
pop
stc
into
jg,pt
jl
in
sbb
push
mov
push
add
arpl
add
sub
jecxz
pop
lea
int
jl
jmp
mov
stos
andl
cltd
cmc
movsb
ficomps
movsl
stc
or
sbb
sub
mov
ret
mov
or
xchg
out
mov
jne
std
imul
loop
xlat
test
jo
push
add
inc
clc
jae
ret
sub
jns
mov
mov
loop
dec
aaa
push
cmp
adcb
scas
test
inc
jae
aaa
into
inc
repz
xchg
dec
or
xor
xlat
sbb
xchg
mov
fidivrl
xlat
pusha
cmpsb
push
and
xchg
push
iret
sbb
hlt
addr16
nop
dec
dec
test
in
scas
ljmp
fwait
mov
inc
jmp
jo
ret
pop
imul
js
mov
int3
push
outsl
cltd
mov
ret
mov
add
push
fsincos
adc
mov
aaa
inc
fcomip
fidivs
mov
jae
cltd
cmc
sub
adc
dec
push
in
stc
insl
icebp
add
daa
or
fstpl
cmp
cld
lods
sbb
push
jb
nop
insl
or
pop
scas
test
sbb
mov
inc
cmpsl
pop
and
sub
imul
lods
xchg
insb
jnp
aaa
adc
mov
fmul
in
data16
lcall
lea
mov
jae
dec
iret
jne
mov
cwtl
xchg
mov
adc
imul
push
pop
and
adc
mov
push
test
or
loope
xadd
xchg
mov
stc
adc
lds
cmp
add
cli
shlb
call
cwtl
sbb
push
xchg
add
add
test
mov
jl
push
sti
pop
and
lods
jno
lods
mulps
in
mov
mov
js
js
scas
cwtl
ljmp
dec
stc
mov
cli
mov
in
int
pop
push
pop
xor
std
xor
pop
and
dec
test
in
mov
aad
mov
loop
jle
repz
push
outsb
pop
lahf
cmpsb
add
add
pop
rorb
mov
xchg
pop
xor
leave
jae
aad
cli
pop
pop
sbb
clc
pop
xchg
aas
adc
push
nop
dec
add
xchg
into
pop
iret
inc
push
sahf
dec
mov
call
jl
sbb
add
inc
in
ds
push
stc
inc
sub
mov
mov
push
mov
in
mov
adc
sbb
and
add
push
add
pop
inc
sbb
adc
mov
mov
std
mov
insl
pop
in
and
iret
mov
jp
xor
inc
adc
std
iret
mov
and
mov
push
inc
mov
lret
cmp
inc
int3
inc
stos
into
cmpsl
ret
stos
jae
jbe
in
mov
jns
push
xchg
shll
popa
fsubrl
sahf
sub
sub
sbb
aaa
out
mov
pop
dec
cli
mov
push
adc
gs
mov
mov
cmc
insb
and
out
int
je
stc
xchg
or
ss
inc
cwtl
xchg
into
or
ss
sub
add
push
jg
sti
xor
mov
xchg
pop
xchg
outsl
imul
and
fsubp
lds
scas
addr16
xchg
fdivl
adc
aam
stc
sub
push
lods
mov
jno
sbb
outsb
incb
repnz
xor
ds
xchg
jmp
jb
mov
cs
or
test
hlt
mov
mov
jnp
mov
hlt
sbb
test
js
pop
repz
xor
subl
sub
sahf
mov
pop
add
cmp
sbb
mov
imul
fldl
adc
mov
loope
xchg
mov
xrelease
scas
push
mov
out
adc
mov
inc
xchg
dec
ffree
sub
jge
dec
xorb
loopne
or
and
repz
mov
stos
fistpll
pop
inc
mov
cmp
mov
sbb
and
jae
and
sub
pop
mov
ljmp
aaa
inc
cmpsb
std
jp
fcoms
dec
mov
pop
fnstenv
mov
add
pusha
push
rorb
sbb
mov
inc
or
ficoms
cs
clc
or
pop
lods
mov
xor
dec
pop
and
addb
jmp
mov
sub
cmp
adc
xor
mov
mov
in
mov
mov
mov
sbb
push
inc
jmp
mov
and
adc
enter
xor
lahf
in
cmc
dec
sti
push
mov
jo
rolb
and
mov
add
call
add
je
int3
roll
pop
ret
mov
jns
jo
mov
mov
in
sti
pop
mov
adc
mov
and
jl
data16
and
or
data16
mov
mov
daa
sahf
imul
rolb
cmc
sarb
or
divl
test
adc
outsb
or
in
jmp
jg
retw
lret
cmp
std
and
xchg
bound
dec
leave
pop
mov
mov
enter
fsubrl
aam
lea
sbb
push
fisubs
into
dec
in
or
out
ret
cmp
scas
fnstenv
mov
adc
push
sub
stos
imul
sub
xchg
mov
ljmp
xchg
sub
cmpsl
addr16
clc
pop
xchg
or
push
loope
imul
inc
insb
aad
les
push
dec
jbe
mov
ret
mov
jp
jp
stos
jno
xchg
lahf
addb
xor
ds
mov
insb
or
pop
repnz
test
inc
and
das
int3
ret
sarb
xor
add
xchg
int
mov
push
xchg
fisubl
in
cmpb
sub
fistpll
adc
cld
imul
scas
pop
inc
sub
test
rcr
xor
dec
push
stc
mov
jne
iret
pushf
ja
fnstcw
cmc
imul
sarl
in
or
cld
xor
cmp
add
repnz
mov
xchg
xchg
test
addr16
dec
mov
es
jbe
cmp
std
cltd
in
cmpsl
roll
sbb
sbb
clc
in
out
das
dec
jne
add
xorb
lock
movsl
cmp
mov
add
xchg
out
or
loop
inc
bound
ljmp
sub
add
dec
dec
add
aam
dec
jge
lcall
xor
xchg
sub
loope
push
jb
icebp
lret
and
fdivrl
push
dec
jnp
xchg
push
push
scas
push
inc
inc
and
jp
sub
lcall
sar
pop
je
hlt
lock
mov
mov
pusha
or
stos
xor
mull
add
jbe
mov
daa
pop
call
adc
xchg
popf
in
sarb
fcoml
push
xor
cld
mov
add
push
push
ret
cmp
xchg
rclb
pop
push
lahf
cmpb
mov
aas
inc
jmp
cmp
mov
mov
ljmp
lret
rcrb
jge
inc
stos
ljmp
or
mov
cs
mov
decb
and
jo
addr16
out
stc
mov
leave
in
jle
aad
jns
inc
dec
jge
cltd
mov
inc
mov
sub
jg
push
outsl
shlb
and
clc
mov
shrl
dec
cwtl
xor
sbb
dec
test
add
ret
dec
mov
mov
or
cs
xchg
jbe
test
sbb
std
cltd
je
pop
movsb
jecxz
mov
adc
sbbl
mull
cwtl
and
dec
cmc
inc
push
jmp
fmul
mov
insb
test
mov
cmpsl
mov
fimuls
mov
sub
push
xchg
dec
and
out
jecxz
inc
std
cmp
idivb
mov
movsl
movb
sub
mov
xor
shrb
stc
mov
out
push
pop
sub
scas
in
addr16
pop
in
sbb
leave
mov
fs
pop
cmc
es
inc
loopne
sbb
hlt
mov
jp
xchg
mov
imul
lret
in
xchg
sub
outsb
mov
shl
imulb
adc
sub
mov
mov
push
aaa
push
cli
push
fstpt
daa
sbb
addb
cltd
data16
daa
popa
dec
sarb
xor
cmpsl
in
movsl
cmpsb
fidivs
in
jmp
push
popf
and
add
cltd
mov
mov
and
inc
rolb
int3
insb
mov
dec
sti
into
cli
lock
clc
test
mov
push
xlat
cmc
aaa
sbb
xchg
or
dec
adc
mov
push
sbb
mov
pop
push
jo
int
popa
js
dec
jmp
and
adc
push
xor
lock
scas
dec
sub
cli
ret
fisubrl
jecxz
jne
cltd
dec
or
jmp
leave
adc
and
arpl
xchg
sti
mov
movsl
xchg
roll
xor
xchg
xchg
add
and
lret
insl
inc
outsl
or
mov
lock
aaa
rolb
xchg
inc
loope
mov
fwait
mov
xor
mov
jp
or
mov
cli
ds
xchg
je
pop
sub
dec
push
sahf
enter
insl
mov
pop
loop
xchg
mov
jmp
push
hlt
inc
pop
dec
adc
lcall
hlt
out
popl
sti
mov
jge
call
jns
push
cs
mov
xchg
adc
test
in
sub
dec
leave
es
es
test
imul
mov
add
fidivl
rcll
adc
dec
icebp
jle
mov
icebp
mov
out
and
mov
cmc
sub
jne
dec
scas
fcmovnu
sbb
mov
jnp
push
dec
inc
dec
loop
hlt
ret
sahf
loopne
out
ljmp
inc
jno
dec
out
xor
cltd
xorb
pushf
popa
inc
enter
and
notl
pop
cmp
mov
imulb
and
nop
aad
loop
test
cmc
cld
xchg
and
iret
insl
fistpl
xchg
rclb
mov
jp
add
xor
xchg
pop
pop
incl
cmp
xchg
xchg
enter
test
lods
clc
test
xchg
hlt
xor
or
jo
add
in
push
xchg
inc
jl
cmpsl
pop
or
jb
inc
jmp
add
out
mov
test
mov
ds
mov
popa
in
into
iret
in
inc
inc
mov
pop
inc
xor
dec
insb
xchg
mov
popa
shll
or
insb
sub
stos
sub
and
push
cmp
push
push
out
and
out
lods
add
adc
pop
mov
sbb
enter
ss
movsl
push
dec
mov
sbb
add
xchg
pushf
cmc
movsb
mov
mov
adc
imul
jp
mov
sbb
inc
aaa
fiadds
add
icebp
and
sti
call
jp
xor
dec
mov
repnz
mov
inc
movsl
or
inc
sbb
push
pop
int3
ljmp
sbb
das
mov
filds
xchg
dec
adc
scas
cmpsl
scas
fs
push
jns
mov
mov
add
mov
scas
xor
bound
xchg
call
fldenv
xor
and
std
pop
das
roll
test
add
mov
mov
xchg
fcoms
xlat
cmpsl
arpl
insb
iret
sbb
je
out
pop
ljmp
add
scas
out
sarb
rcll
xor
orb
cltd
mov
xor
pop
mov
cmpsl
je
push
dec
add
gs
out
jne
push
nop
add
push
and
int
xchg
sub
cltd
xor
aas
adc
scas
mov
movsl
mov
cli
fnstenv
cwtl
or
sbb
les
movsb
dec
adc
dec
push
xchg
sbb
and
call
enter
ss
movsb
sub
rcrb
pop
mov
and
psllq
jnp
pop
orl
divb
cmp
jg
adc
mov
sahf
mov
imul
popa
add
mov
pop
outsl
dec
out
and
adc
in
jb
xchg
out
repnz
mov
push
cmc
push
int
xor
popf
jecxz
jne
or
cmp
insl
sub
jle
pop
sbb
jp
fs
and
or
jo
arpl
sub
push
lds
lods
xor
leave
add
ja
and
sahf
scas
les
fisubs
or
mov
mov
test
adc
adc
mov
adc
neg
add
dec
pop
or
mov
vmwrite
mov
aam
iret
mov
cmpsl
jne
lock
js
test
lcall
je
fisubs
sbb
push
jp
shl
mov
jns
out
dec
jmp
repnz
sub
inc
or
cmp
adcb
lret
pop
ljmp
sti
mov
addl
jmp
jl
cmc
fdivp
mov
fwait
xchg
lds
lret
andb
fwait
cmpsb
or
repnz
cmp
sub
mov
rcrb
sub
loopne
add
div
ds
or
sub
sti
or
cmp
clc
push
add
ds
jmp
mov
and
imul
xlat
dec
outsl
gs
in
pop
sbb
fisubl
mov
cwtl
outsl
imul
ds
xchg
push
mov
subb
xor
sbb
mov
call
les
andl
popf
hlt
imul
and
xchg
std
sbb
loop
add
mov
xor
rcr
daa
test
dec
movq
out
sub
lahf
out
jl
loop
xor
stos
push
lock
xchg
pop
xchg
fs
lea
sbb
subl
push
dec
push
scas
test
out
cmpsl
add
out
jae
xchg
ds
incl
inc
push
mov
cmc
jbe
xor
sbb
lret
sub
sbb
dec
sti
cli
call
dec
into
xor
dec
int
cltd
ret
push
mov
jo
iret
test
or
iret
push
lea
xchg
or
pop
push
std
sahf
fmuls
popf
push
imul
test
arpl
and
fidivrs
cmp
int3
dec
out
pop
mov
rcr
push
jae
mov
in
cld
dec
imul
jbe
imul
or
out
es
pop
cld
xor
jae
test
mov
push
ror
ljmp
rcrl
mov
mov
ds
adc
iret
fucom
push
leave
xor
jo
scas
jnp
push
fildl
xlat
add
push
outsl
pushf
js
or
cli
mov
in
pop
push
mov
dec
push
pushf
inc
and
lea
stos
sbbl
addr16
data16
jp
out
ljmp
aaa
lret
mov
int
and
lcall
clc
lock
push
push
pop
movsl
add
jp
jl
mov
dec
cltd
repz
mov
mov
mov
lret
rcrb
add
arpl
adc
or
lea
or
jae
add
imul
mov
aam
fldcw
inc
jle
mov
jae
fwait
mov
outsl
mov
mov
mov
dec
mov
pop
fs
je
sub
dec
pop
rclb
mov
mov
mov
test
xor
cs
inc
push
in
or
popa
cmp
xchg
push
mov
mov
bnd
xchg
cmp
adcb
pop
popf
push
mov
jns
xor
rcr
cmp
clc
fwait
push
in
ret
test
push
inc
jae
mov
push
xchg
jno
mov
cmpsb
jno
dec
outsb
push
mov
inc
idivl
pusha
push
adcb
jns,pn
push
push
jae
lahf
orb
pop
andb
mov
jp
hlt
mov
adc
adc
in
mov
fdivr
and
hlt
frstor
inc
mov
inc
or
and
pop
in
lock
sahf
loope
sbb
push
fadd
push
push
xchg
pop
sub
dec
out
xor
adc
add
lods
popa
inc
xchg
stos
popf
mov
push
test
ret
gs
lock
xchg
jg
out
pop
mov
and
push
popa
scas
lret
ret
out
push
mov
xchg
fs
jnp
mov
pop
adc
push
sbb
cli
mov
mov
push
fs
mov
lcall
mov
adc
jnp
shrb
sub
lret
repz
adc
xchg
push
lret
mov
xor
fwait
dec
push
ljmp
sarl
xor
in
dec
mov
in
mov
push
adc
and
call
xchg
movsl
add
mov
cltd
jb
in
ret
sub
sub
daa
jo
mov
cli
or
mov
aad
jbe
jbe
pop
hlt
mov
in
inc
sub
pushf
pop
and
push
xor
sbb
add
rcrb
jmp
mov
inc
pop
sub
add
out
dec
cmp
push
and
xchg
ret
orl
cmp
cmp
jno
mov
inc
sbb
mov
mov
jae
imull
cmc
icebp
mov
push
dec
jmp
lcall
add
rol
adc
jl
pop
mov
aad
dec
mov
in
negb
dec
xchg
sti
mov
pop
jbe
sbb
jbe
test
mov
aad
adc
xor
in
or
xor
mov
pop
into
mov
mov
pop
dec
dec
cmp
pop
pop
addr16
add
scas
pusha
xchg
sub
lods
pop
jp
mov
loope
std
adc
idivl
cmp
lahf
xorl
cli
jmp
scas
xchg
mov
lods
xchg
scas
aam
gs
aas
or
dec
fdivrp
mov
andl
hlt
xchg
cmp
stos
sahf
aam
jno
push
xchg
and
mov
bound
fwait
and
and
data16
fsubs
xchg
and
int3
cli
mov
subps
arpl
xor
shl
dec
sub
adc
mov
push
popf
sbb
in
rolb
dec
cwtl
jo
jp
lret
orb
inc
mov
stc
and
fsubrp
jmp
lcall
shl
cmpsl
stos
mov
or
xchg
je
pcmpgtd
pushf
adc
mov
aam
aas
mov
out
sub
jmp
movsl
jmp
sub
int3
and
cld
stos
sub
incb
jns
mov
and
inc
push
mov
outsl
dec
arpl
js
daa
notl
add
icebp
push
adc
shlb
test
push
mov
cmp
cmp
pop
mov
pop
outsb
xor
pusha
shlb
mov
scas
jg
ja
enter
or
aaa
jae
je
pusha
dec
nop
enter
add
and
bound
sbb
add
xor
jo
push
test
jge
pop
xchg
cmp
hlt
adc
mov
pop
inc
incb
test
in
mov
test
jno
pop
push
outsb
orps
and
stos
mov
pop
sahf
rcrl
bound
cmp
jge
outsl
and
mov
scas
dec
xor
shll
mov
push
loope
loope
fmull
push
test
cmp
arpl
push
scas
movsl
inc
sbb
cmp
arpl
out
ret
inc
filds
movsl
mov
gs
pop
repz
pop
ret
jp
xor
ja
movsb
jne
dec
and
dec
mov
add
inc
movsl
xchg
or
jecxz
inc
shrl
adc
rcl
stos
insb
mov
das
adc
dec
adc
jne
test
sub
sahf
push
das
pop
int
jno
repnz
xchg
test
cltd
fiaddl
pop
fbld
push
pop
int
inc
dec
mov
das
int
std
inc
jmp
insl
lods
ja
sbb
popa
add
mov
loopne
fstl
loopne
xor
rcrl
jnp
inc
fwait
jne
xchg
andb
and
sti
sbb
xchg
lods
cmp
outsl
jnp
jae
imul
repnz
les
clc
jae
les
pop
dec
outsb
ja
mov
stos
aaa
inc
pop
ret
hlt
test
xor
mov
dec
dec
sahf
insb
cmp
xor
and
test
lock
or
mov
in
push
sub
stos
lret
xchg
cwtl
jb,pt
xchg
jg
jo
out
and
push
test
add
add
insl
imul
xchg
pop
aas
jecxz
and
fists
mov
xchg
popf
repz
push
dec
jne
mov
add
and
popf
jecxz
ss
adc
sbb
out
nop
xchg
push
es
mov
sub
mov
mov
sbb
xchg
aas
movsl
jae
loopne
add
lea
mov
out
enter
icebp
adc
xor
sbb
imul
cmc
pop
cwtl
data16
js
data16
fistl
mov
push
push
dec
hlt
jmp
out
ret
stc
pop
push
inc
nop
fidivrs
dec
idivb
xchg
shrl
popf
dec
hlt
push
or
mov
dec
clc
loop
jmp
mov
jle
adc
stos
cmp
loopne
jmp
std
pop
mov
test
sub
loope
rcrb
mov
jge
sti
xlat
outsl
mov
scas
mov
jmp
adc
jnp
add
cmp
ret
jecxz
pop
insl
jp
or
or
add
into
dec
imul
mov
xlat
sahf
xor
pop
adc
and
gs
vmwrite
pop
popa
lahf
cmp
pop
push
mov
mov
xchg
mov
loopne
rol
cmp
jbe
mov
decl
fisubs
adc
test
cmpsl
mov
mov
mov
aaa
shrl
negl
insb
loopne
les
cltd
dec
mov
sub
ljmp
pushf
inc
adc
mov
testl
outsl
xchg
mov
push
in
xor
sbb
xchg
add
jo
outsl
fisubrl
daa
push
xchg
mov
sbb
push
lret
adc
pushf
lret
mov
sbb
or
push
sbb
push
test
rcll
xchg
and
das
xchg
sub
push
scas
jo
and
mov
jne
imul
sbb
jne
xor
cmpsl
out
lods
jnp
sbb
fwait
nop
ljmp
flds
pop
scas
mov
cmpsl
cmp
mov
test
cltd
cmp
cmp
xor
xor
ds
adc
test
inc
add
in
loopne
aad
outsl
jnp
mov
push
adc
add
xchg
or
mov
sbb
repz
push
outsl
ret
lret
test
mov
mov
xchg
and
push
lret
cmpsb
clc
jns
and
roll
insl
movsl
outsl
adc
repnz
lret
sub
and
in
nop
subl
les
mov
stos
rcrl
test
mov
lods
out
pop
mov
icebp
hlt
nop
pcmpeqb
mov
data16
js
xor
and
sbb
stos
int3
or
pop
dec
movsl
mov
and
push
jb
jne
or
stos
mov
in
daa
jnp
in
test
adc
loop
push
leave
jne
clc
xchg
test
jp
push
cli
jb
fcoms
pop
xchg
faddp
xlat
xchg
out
pop
inc
std
xor
push
popa
aas
inc
xor
push
sbb
and
mov
hlt
push
jmp
xchg
ficompl
push
loop
stos
dec
dec
ret
push
mov
sti
call
or
aas
sub
decb
sbb
xor
pop
sbbl
jb
fidivrs
jmp
xlat
cmc
xorl
shl
js
notb
push
inc
xor
xor
dec
imul
push
test
mov
inc
push
fstpl
mov
jnp
mov
push
push
xor
dec
out
push
cli
je
or
in
adc
and
add
mov
mov
das
int
test
xorb
pop
sub
inc
push
jae
icebp
inc
out
dec
xor
cmc
enter
push
aam
fsubrs
repnz
mov
inc
into
xor
test
jl
scas
movsb
lahf
sti
dec
add
in
jg
repz
jg
push
mov
adc
cmpsl
inc
dec
jne
test
dec
xchg
xchg
sub
dec
sbb
cltd
sbb
ficoml
insb
xorl
sub
add
rep
pop
es
sub
mov
mov
sub
mov
cld
push
push
cmp
xchg
mov
xchg
mov
scas
movsl
je
cltd
or
xchg
iret
lahf
sbb
addb
daa
and
lcall
mov
nop
push
cmp
pop
mov
pop
pop
sub
xorl
lods
xchg
scas
xor
leave
inc
test
sub
cmc
stc
stos
jo
nop
ficoms
shr
pop
sbb
pushf
ljmp
mov
dec
add
or
lea
adc
nop
in
call
push
js
or
je
add
and
fdivrs
test
jns
push
jle
test
push
test
xchg
sbb
mov
insl
xchg
mov
mov
xchg
andb
push
movsb
sbb
int3
pop
into
es
cmpsl
imul
push
fistl
xchg
jecxz
xchg
fistpl
out
fs
inc
or
pop
mov
xchg
movsl
sbb
push
xor
xlat
push
movsb
ss
in
add
push
int3
adc
jl
js
rcrw
jo
rcrl
pop
dec
and
mov
out
add
inc
jmp
and
gs
dec
ret
and
popa
mov
inc
test
jp
inc
dec
pop
cltd
ret
xchg
add
add
jo
inc
sbb
cmp
jp
rorl
adc
xor
xor
aas
sbb
nop
inc
fsubrs
outsb
in
ret
fsub
inc
push
out
push
dec
and
int
insb
in
mov
inc
jbe
out
negl
xlat
mov
test
mov
aam
jecxz
stos
xchg
xchg
fadds
mov
push
add
push
and
stos
add
daa
xchg
insl
mov
adc
bound
gs
pop
pop
pop
adc
and
mov
mov
cmc
sub
in
popa
arpl
push
sbb
cmpsb
lea
aam
and
cwtl
pop
adc
std
sbb
aad
push
scas
aad
or
xchg
loopne
in
das
arpl
insb
xchg
xorb
daa
stc
cmp
cs
mov
call
xchg
push
cli
iret
sti
push
negb
push
jg
jg
mov
fcmovbe
clc
addr16
jno
or
push
out
adc
in
xchg
push
into
nop
xchg
js
inc
mov
adc
insb
cs
dec
mov
fcmovu
sbb
pop
in
cli
xchg
loop
or
sbb
addr16
popf
lret
aas
shlb
mov
nop
insb
in
stos
outsb
es
and
rclb
inc
jge
jecxz
aaa
jno
rorb
mov
out
xchg
ds
imul
pop
cmp
xchg
xchg
mov
fisttps
pop
mov
or
outsl
and
xchg
sbb
mov
inc
push
adc
das
imulb
sarl
cmp
mov
pop
loopne
nop
enter
xor
stos
dec
in
mov
dec
ret
in
pop
add
es
loope
inc
insl
outsl
mov
jecxz
cs
into
je
adc
cmp
call
divb
xchg
shrl
xor
jbe
aam
mov
xchg
dec
das
pop
das
xchg
xchg
rcl
mov
cmp
jecxz
lea
and
xor
aaa
pop
int3
jecxz
out
mov
xchg
sub
out
inc
or
cwtl
ret
or
inc
mov
es
cld
in
shl
testb
pop
gs
push
add
mov
mov
jl
out
push
cs
divb
out
into
ds
jl
cmc
push
fidivs
das
push
ja
iret
daa
jb
mov
mov
dec
loop
push
cmpsb
adc
clc
aas
push
pop
hlt
je
add
adc
ja
inc
idivl
cwtl
mov
outsb
repnz
outsl
xor
mov
notl
inc
popa
fistpl
mov
nop
push
pop
scas
repnz
sahf
cmp
or
push
jmp
cmc
scas
jle
adc
pusha
ljmp
add
pop
call
inc
fildl
imull
das
test
mov
pusha
in
and
mov
cmp
xor
dec
pusha
out
nop
add
pop
pop
in
or
mov
mov
cwtl
adc
xchg
jne
sbbl
push
inc
inc
and
pop
and
scas
andb
test
lods
test
dec
mov
das
js
mov
fs
dec
inc
jg
sub
inc
jmp
repnz
add
call
or
das
jb
int
shll
pop
notb
lods
dec
lock
sahf
shll
mov
dec
fnop
outsb
popf
cli
push
fs
iret
mov
stos
movsl
xchg
insb
loope
jnp
mov
in
sub
jmp
cmpsb
mov
sbb
addr16
inc
jae
dec
jb
lret
or
dec
mov
pop
loope
xor
add
jns
dec
int
cmpsb
pop
inc
inc
mov
xchg
mov
xchg
jb
jbe
add
sub
push
add
pop
adcb
test
into
mov
sbb
lds
jg
pop
jae
dec
div
sub
movsb
jne
xchg
cmp
enter
pop
add
sahf
add
jmp
pop
aam
sahf
fnstsw
cld
cli
lods
int
xchg
out
pop
cmp
rorb
xchg
inc
das
sub
sbb
cmp
movsl
lret
fsts
lods
pop
popf
incb
movsl
shll
jp
push
mov
mov
xchg
dec
and
loopne
jmp
movsb
imul
mov
mov
ffreep
xchg
adc
cs
shld
popl
ja
loope
add
icebp
add
pushf
cmc
int
sbb
dec
repnz
pop
bound
xchg
scas
pop
daa
mov
or
icebp
sar
inc
cmp
in
mov
and
call
jae
ds
jae
jecxz
and
inc
insb
push
comiss
jb
or
cmpsb
jnp
loopne
imul
fldcw
cmp
bound
out
sub
cmp
push
loope
int
pop
inc
imul
push
pop
fstps
mov
jnp
pop
xor
mov
cmp
pop
je
cwtd
jmp
out
sub
push
add
inc
inc
je
mov
and
dec
pop
pop
mov
pop
mov
mov
aas
int3
cmpsb
push
into
push
sub
or
addr16
sarl
loop
mov
fs
sub
and
mov
leave
outsl
rcr
sti
aas
jbe
jne
xchg
in
jecxz
add
lods
pop
clc
out
add
xor
mov
jecxz
fildl
mov
scas
mov
jno
cmp
dec
or
push
out
add
call
fnstcw
inc
clc
lock
and
push
roll
xor
fadds
loop
lock
dec
inc
xchg
pop
lods
das
dec
inc
pop
repz
push
nop
subb
push
add
iret
mov
cmp
mov
pop
ds
bnd
jnp
inc
and
mov
dec
jecxz
mov
fdivrs
xchg
push
dec
mov
sbb
push
push
ljmp
cmp
sahf
jge
inc
jl
pop
cld
sahf
sti
adc
int
or
lret
lods
add
xor
pop
ljmp
sub
cmp
add
mov
idivl
xchg
cmp
addr16
in
sub
pop
push
mov
mov
insl
fidivl
mov
add
scas
or
rorb
xor
pop
xchg
push
and
and
push
dec
enter
pop
cmpsl
scas
and
enter
and
imulb
lahf
push
mov
or
mov
lods
xor
push
cmpsb
inc
aam
outsl
sbb
cmpsl
popf
xchg
int
or
pop
and
adc
out
jge
jo
leave
mov
repnz
xchg
sbb
mov
cwtl
add
ret
mov
jp
fs
xchg
out
dec
lods
icebp
in
and
outsl
scas
cmp
xchg
xchg
lcall
dec
sahf
incl
mov
jmp
cwtl
xchg
cmpsb
aam
xchg
sbb
xor
test
and
test
inc
aas
int3
cmp
adc
sarl
popf
and
test
fwait
mov
cwtl
dec
aas
mov
lahf
popf
fbstp
cli
movsb
movsl
sbb
repnz
gs
cmpsl
jp
mov
adc
scas
out
icebp
and
jb
sarb
cmp
addl
mulb
adc
sarb
inc
xor
fmuls
pop
mov
mov
jns
jmp
inc
leave
sbbb
in
xchg
cmp
ret
push
ljmp
fsubl
jnp
test
cltd
scas
lods
js
mov
stos
sbb
js
xchg
pop
jb
inc
pop
movb
push
xchg
fucom
mov
xor
sub
aad
add
les
push
lahf
pop
call
xor
loop
in
mov
jp
xchg
arpl
inc
adc
sub
cmp
in
mov
lret
pop
sbb
dec
xor
das
inc
jbe
imul
call
movsb
das
data16
adc
pushf
call
xlat
sub
xor
loopne
mov
adc
mov
mov
cmp
sub
and
sahf
lea
cmp
cwtl
sbb
andl
inc
xor
pop
cmp
xor
push
xor
xchg
dec
inc
mov
xchg
push
scas
mov
xchg
shrl
andb
loop
cltd
mov
in
jecxz
repz
in
mov
ss
dec
iret
repz
lea
int
imul
mov
mov
push
xchg
inc
cltd
mov
push
fcoms
jb
cmp
icebp
pop
jg
jne
xor
dec
popa
pop
inc
imul
push
xchg
mov
xchg
stos
mov
ljmp
xchg
inc
test
sbb
or
jecxz
arpl
inc
inc
push
stos
jno
mov
out
nop
cmp
int3
xchg
lods
mov
shll
bound
push
loopne
sbbb
pop
ret
mov
dec
stc
inc
test
mov
adc
mov
cmc
jae
nop
cmp
leave
xor
imul
pop
dec
popa
lcall
jne
addr16
add
xchg
pushf
adc
movb
nop
inc
mov
mov
out
enter
enter
push
cld
mov
mov
xorb
xchg
jmp
xchg
popf
inc
out
sbb
arpl
pop
sub
inc
pop
xchg
addr16
jge
jnp
xor
pop
xor
jb,pn
outsb
pop
add
imul
out
outsl
test
sbb
mov
mov
ret
cli
push
mov
sub
test
xchg
mov
or
xchg
nop
clc
in
pop
les
mov
cmp
or
mov
jmp
je
stc
jnp
jnp
xor
pop
jp
inc
fcomp
mov
jle
test
pop
xchg
push
jmp
add
addr16
lea
mov
dec
mov
fstpl
and
mov
xchg
cmpsb
negl
mov
xor
and
dec
ficompl
stos
popf
lret
push
sbb
ret
das
fwait
xor
arpl
push
testl
add
adc
ja
neg
mov
icebp
in
stc
mov
xor
sub
inc
xchg
push
sub
lahf
stos
les
orb
dec
cmc
test
in
pop
leave
es
enter
push
add
cmp
imul
rcr
sub
out
inc
xorl
or
lock
inc
mov
in
stc
mov
push
pop
sbb
std
adc
loope
test
push
pop
lret
mov
sbb
mov
lret
jb
inc
shll
mov
ljmp
push
push
rcrb
inc
loope
dec
jae
std
insb
push
in
cwtl
ficompl
fimuls
pop
xor
or
mov
inc
or
or
stc
mov
aas
xorl
pand
and
xor
jnp
stc
xchg
inc
repz
lret
push
adc
mov
pop
pop
inc
sbb
mov
and
aam
lock
scas
mov
das
mov
mull
fdivr
insb
shr
mov
pop
jg
insb
aad
jne
xor
js
insb
pop
push
out
sbb
cli
lods
out
faddl
popa
das
xchg
or
xor
push
icebp
jb
idivb
and
imul
cli
in
jne
incl
sbb
jns
dec
test
xchg
sub
mov
and
mov
push
sbb
pop
in
xor
xchg
cwtl
xor
mov
push
lods
xchg
cmp
add
cltd
dec
push
mov
je
or
adc
outsb
mov
cmp
adcl
push
jo
xor
pop
pop
shll
fbstp
sub
mov
lods
jbe
mov
add
loop
add
cmp
and
arpl
adc
mov
out
sbb
enter
mov
or
pop
push
fists
repnz
sbb
jmp
sbb
inc
sub
ja
pop
enter
jo
and
aaa
imul
pop
or
imul
int
or
sahf
sti
adc
xor
jl
aam
cmp
ret
lds
fcomp
add
sub
inc
xor
aaa
rcrb
pop
movsl
ret
les
inc
jp
cmc
js
out
inc
rclb
or
jne
icebp
xchg
mov
pop
data16
inc
clc
repz
jl
out
jmp
ja
xchg
and
xor
inc
mov
xor
aad
daa
push
xor
push
adcl
and
add
das
or
lcall
mov
ss
push
mov
into
mov
xor
stc
add
mov
and
sub
push
int3
sub
negl
push
adc
xchg
call
shll
jl
push
inc
shlb
xchg
adc
push
je
scas
add
insl
cmpsb
js
out
inc
mov
push
push
sub
push
testb
outsl
lods
mov
mov
jnp
or
push
push
jg
in
cltd
xor
sbbl
andl
xchg
cmp
jb
arpl
add
adc
push
lcall
sub
jle
mov
pop
or
or
loop
lea
orl
xlat
sbb
pop
mov
leave
push
loope
mov
xor
and
call
cmp
xchg
sbb
jl
or
adcl
push
shrd
cs
mov
dec
mov
xchg
pop
mov
sbb
xor
mov
add
pop
setge
insb
unpckhps
xor
mov
inc
imul
das
mov
cmp
loope
pop
cltd
push
in
push
jg
sub
sub
int
sbb
fwait
adc
cld
ret
repz
or
inc
frstor
adc
jmp
mov
mov
inc
int
mov
cmpsb
jmp
jmp
repz
adc
leave
lods
add
cmc
push
jle
jns
dec
icebp
shll
rclb
sar
cld
repnz
arpl
jg
leave
mov
pop
push
xchg
jl
jo
mov
out
sbb
cwtl
leave
out
and
fldl2e
inc
xor
sub
sarl
xchg
ss
pusha
xchg
xor
fdivl
rclb
aaa
jg
push
mov
les
ja
pushf
jne
scas
leave
insb
push
insl
mov
jbe
or
and
aas
push
jne
iret
loope
insb
inc
into
scas
and
dec
cmp
in
outsb
fstps
sub
fwait
inc
mov
jmp
faddl
lds
sarl
jle
inc
test
add
cmp
sbb
sbb
imul
jno
mov
lods
and
add
repnz
lret
rcrl
push
cmp
inc
and
mov
jg
xor
add
sbb
repnz
pop
mov
xchg
jnp
es
hlt
in
pushf
out
jg
pop
imul
sbb
repnz
shlb
test
jmp
lcall
push
or
add
test
pop
push
inc
mov
imull
andb
dec
xlat
pop
mov
lods
or
sbb
xor
add
xor
insb
scas
pushf
mov
push
scas
push
testl
fldl2t
add
inc
pop
and
aam
std
lret
repz
jmp
test
es
and
leave
aad
mov
addr16
cwtl
xchg
cld
lea
or
je
sub
loope
scas
std
pushf
xor
sbb
mov
pop
xchg
adc
sbb
scas
dec
adc
mov
xor
jg
outsl
xor
aad
ret
std
add
inc
add
lea
xchg
fwait
inc
rorl
push
sub
insb
fildl
pushf
dec
cmp
repnz
add
lds
fs
loope
shll
pusha
pop
and
push
add
daa
aam
mov
leave
cmp
pop
loopne
jp
adc
add
mov
roll
out
addr16
cmp
cmpsb
mov
daa
stos
pusha
movsb
and
pop
mov
fcmovne
iret
pop
loop
scas
ret
std
inc
xlat
push
mov
in
bound
arpl
xchg
push
inc
daa
gs
cld
pop
test
cmp
fnsave
xor
sub
xor
rcll
inc
push
push
in
dec
adc
fidivrs
mov
dec
jnp
adc
cmpsl
mov
push
jnp
mov
fmull
sbb
xchg
jg
xor
int
add
mov
mov
sub
movsb
pop
push
scas
stos
mov
push
push
push
scas
mov
lods
xchg
ret
cs
mov
add
ljmp
negl
fcom
adc
rclb
dec
add
xchg
dec
mov
pop
faddl
scas
dec
mov
xor
ja
pop
mov
mov
sahf
inc
pop
fs
cltd
je
fs
and
iret
xchg
loop
mov
mov
ss
add
adcb
pop
dec
mov
mov
dec
imul
push
jns
mov
xchg
adc
xchg
xchg
jge
sbb
gs
fiadds
fistps
jmp
and
add
sub
mov
cmpb
jl
xor
xchg
pop
iret
mov
and
mov
frndint
lods
das
pop
and
xor
aad
jmp
jne
flds
pusha
dec
call
jmp
inc
lret
jmp
orl
inc
jne
test
arpl
popa
nop
push
sub
pop
mov
in
mov
rolb
jno
pop
mov
shlb
lahf
sub
ret
int
add
push
jne
push
sub
mov
or
jl
addb
bound
mov
adc
push
jbe
jl
mov
ds
adc
out
add
add
pop
cs
mov
sbb
push
jg
push
dec
repz
stc
pop
movsl
or
xchg
dec
nop
in
repnz
out
repz
jae
pop
es
hlt
out
mov
shl
sbb
xor
or
popl
loope
insb
sbb
pop
lods
idivl
cltd
mov
dec
jbe
sbb
jg
je
or
test
lahf
xchg
adc
inc
push
pusha
aad
data16
xor
jb
inc
sub
push
mov
push
push
lcall
ljmp
mov
aam
repz
insb
addb
dec
or
add
jns
pusha
cmp
cli
push
pop
ds
sbb
pop
fists
arpl
or
pop
inc
mulb
cmp
in
cld
or
sbb
cbtw
cwtl
sub
sub
sbb
imull
pop
shll
xchg
fmuls
sbb
cmp
inc
push
sub
sub
in
sub
inc
push
andb
push
imul
jne
push
xorl
xchg
mov
add
sub
pop
cmc
hlt
mov
das
inc
ds
cmp
lret
push
dec
call
push
mov
fisttps
andb
je
push
mov
push
cli
or
xchg
mov
sbb
mov
idivb
roll
sub
push
in
jno
add
jge
sbb
cmpsb
mov
into
adc
sbb
dec
inc
or
inc
sahf
xchg
mov
inc
popa
jbe
addb
das
sub
jne
lock
clc
test
xchg
and
stc
insb
pop
jo
mov
dec
push
add
fwait
mov
outsl
ljmp
stc
and
inc
xor
mov
mov
mov
iret
daa
arpl
in
dec
sbb
add
aam
cmp
jle
lea
jmp
clc
aam
in
sbb
dec
out
pop
pop
mov
hlt
dec
push
jmp
sbb
fsub
mov
mov
aas
cmp
fstps
push
les
xchg
xchg
push
mov
fstl
push
pop
jne
shrl
sub
jl
mov
mov
mov
jbe
lods
cmpsb
addr16
int
aad
js
dec
or
bound
rcl
sahf
in
in
aad
pop
dec
mov
inc
insb
mov
fwait
insl
inc
xlat
clc
jecxz
sub
loop
sahf
inc
icebp
sbb
fstpl
lock
dec
adc
cmc
cwtl
mov
xchg
xchg
add
enter
jp
dec
jns
push
sub
dec
mov
imul
imul
frstors
lods
scas
sbb
jmp
stos
add
gs
add
dec
arpl
or
loop
mov
xchg
push
dec
and
sub
jo
inc
adc
or
cltd
pop
lahf
ficoml
add
xor
lods
in
sahf
xchg
lock
shll
cli
mov
scas
leave
roll
inc
mov
sarb
push
pop
xchg
aad
push
xor
stc
ret
pop
les
pop
hlt
cld
test
aam
add
xor
mov
mov
mov
sarb
clc
outsb
mov
jg
in
pop
and
dec
cld
std
push
out
test
or
outsb
in
inc
stos
movsb
mov
icebp
sub
pop
ljmp
sub
push
shlb
jle
xchg
pop
push
gs
fwait
popf
inc
inc
xchg
into
cmp
and
and
je
clc
das
mov
push
dec
je
xchg
mov
inc
iret
push
outsl
add
dec
jb
and
inc
push
fisubrl
and
push
incb
sub
frstor
cmp
and
mov
pop
popf
sub
ret
jmp
fs
cmp
or
sub
pop
sti
popa
push
loop
mov
xchg
pop
and
jne
push
xchg
push
push
inc
sbbb
xchg
xor
sub
out
pop
shll
rcrl
jg
jno
push
or
and
jbe
arpl
stos
sbb
add
adc
xlat
stos
and
lds
gs
imul
icebp
pusha
fdivl
push
push
mov
int3
sub
push
push
jecxz
sub
sub
lods
fiadds
adcl
mov
mov
push
rorl
jns
jecxz
or
mov
outsl
mov
jg
cmc
insl
add
data16
sbb
inc
mov
ret
mov
scas
push
lcall
xor
lahf
sti
insb
jnp
push
jp
test
lea
js
cld
push
mov
push
mov
mov
sbb
int3
lods
sub
int3
xchg
adc
mov
js
sub
add
pop
sub
dec
scas
in
or
out
inc
mov
or
sbbb
scas
in
imul
cmp
sbbl
rcrl
je
cmpsl
or
dec
dec
mov
fimuls
jne
popf
jmp
sbb
jp
jae
xor
std
ljmp
fmuls
xchg
jecxz
sub
scas
iret
adc
test
adc
push
and
mov
or
sub
ret
xor
sbb
js
shlb
inc
fists
inc
push
add
mov
lret
sbbl
mov
jae
inc
pusha
test
out
in
and
xlat
jge
stos
push
arpl
xor
cmpl
fcmovb
lcall
cmp
jle
xor
mov
push
jg
xor
xor
stos
or
aam
pusha
insb
mov
test
and
add
mov
cmp
es
xor
fwait
push
pop
rcrb
jne
cltd
arpl
movsb
sbb
mov
cmp
mov
pop
jl
or
hlt
mov
in
sub
dec
inc
push
pop
xchg
pushf
add
loop
es
out
or
outsl
dec
sub
data16
push
lcall
sarb
ds
sub
mov
roll
cwtl
jle
xchg
aam
sti
add
or
cmp
dec
dec
jno
or
lds
test
lcall
mov
jecxz
jecxz
mov
adc
lods
mov
mov
mov
adc
and
xchg
or
movb
sub
xor
jae
js
nop
outsb
cwtl
sub
mov
jp
rcr
pop
jmp
inc
jmp
stos
pop
popa
inc
test
jge
out
inc
bound
jmp
cmp
mov
mov
daa
sbb
lret
cmp
ret
shl
adc
xor
divl
int3
add
in
jbe
leave
jp
cmc
out
enter
dec
sbb
pop
fdivrs
in
add
mov
pop
stc
push
xchg
add
fisubl
sub
jge
popf
mov
inc
shll
bound
inc
ljmp
pop
jo
jge
or
aaa
adc
mov
adc
pusha
mov
dec
mov
sub
push
sub
push
fadds
int
lcall
ljmp
adcb
cmc
stos
int
mov
xchg
fnstenv
sarl
push
and
pushf
stos
es
lret
xor
dec
nop
jbe
loope
dec
out
mov
addr16
in
sbb
cmp
leave
adc
sahf
div
cli
insb
push
fs
adc
add
mov
mov
dec
xchg
stos
adc
clc
mov
pop
shl
ss
sbb
in
inc
cmovae
xchg
add
add
scas
sub
mov
adc
mov
test
xor
into
mov
ret
popf
mov
mov
aas
inc
rcrl
aaa
xor
aad
mov
jle
std
push
stc
xchg
push
adc
dec
dec
and
rorb
out
xchg
add
test
jmp
pop
mov
mov
xchg
addl
jne
jl
std
sbbl
out
inc
stc
loop
clc
js
mov
nop
pop
cld
sub
test
repz
insl
cmovg
xchg
inc
aas
test
pushf
xor
arpl
pop
inc
xor
pop
sub
loopne
lods
daa
fadd
and
push
inc
jmp
xchg
pop
add
outsb
fidivrs
push
dec
or
movsb
lahf
mov
or
ret
enter
mov
xchg
adc
sbb
gs
xchg
cmp
push
out
dec
dec
aas
cmp
pop
insb
gs
fs
and
std
add
mov
dec
lahf
ret
movsl
sbb
out
push
call
xchg
dec
jns
lcall
xchg
push
or
in
scas
dec
clc
int3
movb
dec
and
stos
pop
dec
add
dec
ret
jp
cwtl
mov
rcrl
mov
cwtl
push
dec
int
js
mov
inc
in
push
jle
in
int3
pusha
imul
iret
jg
xlat
imul
repnz
sbb
das
icebp
lods
xlat
xor
xor
xchg
add
stos
xor
ret
sub
inc
sub
cmpsl
mov
adc
outsb
scas
lret
or
cmpsl
ss
es
jmp
xor
scas
int
mov
ret
mov
enter
mov
int
xor
dec
jp
sbb
sysexit
out
push
fwait
cmp
popa
loop
cmpb
xor
xor
push
or
sbb
xchg
pop
jmp
fisubrs
mov
scas
sub
adc
sub
iret
adc
lea
mov
mov
mov
adc
sub
sbb
mov
scas
int3
pushf
movsb
inc
adc
fsubrl
cwtl
ds
xchg
cli
lods
push
jg
xor
xor
xor
add
push
insb
dec
fidivrs
inc
addr16
mov
fistl
fimull
fs
out
bound
or
pushf
scas
scas
cmp
ja
xchg
sub
dec
xor
test
push
push
mov
imul
mov
push
inc
vmovddup
mov
jecxz
sub
outsl
orb
mov
movsb
xchg
sub
pop
lea
inc
inc
fists
mov
cmp
addr16
mov
call
loope
push
inc
jecxz
jne
and
add
and
cmp
bound
add
lret
xor
arpl
pop
jmp
and
addl
inc
lcall
sahf
jnp
fcompl
sarb
shl
inc
je
clc
pop
jmp
cmpsl
push
xor
imul
or
dec
jae
pop
or
popf
push
sub
sahf
add
ljmp
push
jmp
cli
cmp
pop
sub
int
movsb
outsb
xchg
test
xor
mov
loopne
outsb
inc
lock
xchg
fdivrs
loopne
lahf
push
xchg
xchg
sarl
inc
mov
mov
pop
jae
popf
adc
inc
sbb
sahf
mov
jg
mov
dec
ljmp
into
and
mov
xchg
and
inc
push
stos
pop
lret
mov
mov
mov
lds
lea
lock
and
jns
cmp
sahf
jl
loop
pop
xchg
lcall
hlt
mov
aam
daa
xorl
out
xor
les
inc
push
scas
dec
jg
frstor
jnp
xorl
popf
sahf
leave
add
xor
decl
adc
mov
pop
push
das
push
iret
or
xchg
inc
lcall
xchg
imul
inc
movsb
sbbl
mov
adc
xor
sbb
sbb
and
mov
mov
popf
loopne
sub
dec
out
shr
lock
scas
loope
shlb
cwtl
and
lret
outsl
mov
int
ret
xchg
adc
pop
mov
xchg
inc
pop
pop
mov
ret
xlat
inc
fimull
inc
mov
je
xor
mov
pop
push
jo
daa
adc
push
ja
add
bound
ds
mov
push
ds
xor
rcrb
fiadds
dec
scas
mov
push
push
jle
push
or
fnstenv
scas
xor
adc
imul
mov
ja
inc
enter
lahf
xor
mov
imul
add
jns
in
inc
out
mov
sub
cs
inc
jle
mov
out
sbb
or
mov
ljmp
add
mov
dec
or
daa
pop
push
cmp
testb
jae
test
adc
adc
sub
mov
dec
mov
imul
cltd
add
mov
add
aam
cli
fs
sub
cmc
and
xor
movsl
repnz
push
outsb
adc
or
into
stc
and
dec
push
or
jp
sub
lret
je
adc
push
pop
punpckhdq
fists
sbb
test
mov
outsl
or
fnstenv
sarl
ret
iret
add
dec
daa
cmp
dec
jno
movsl
xorl
rcrb
mov
test
push
sbb
outsb
add
adc
movsl
add
bound
pop
xor
push
sbb
cmp
jno
mov
dec
xchg
cld
adc
pop
into
gs
pop
cmp
mov
nop
add
sub
ds
push
dec
xchg
andl
fs
xchg
sbb
push
nop
and
inc
movsl
aad
sahf
inc
loope
lods
ret
or
mov
push
xchg
addr16
sbbl
stos
push
mov
cmp
lds
pop
pop
xor
in
ljmp
icebp
mov
sbb
fdivs
xor
sti
outsl
data16
lret
popf
push
add
stos
and
sbb
cmp
arpl
dec
fisttpl
insl
cmc
subl
int3
sub
insl
sahf
pop
daa
cmc
xchg
mul
lods
or
lods
loopne
icebp
inc
xchg
xchg
repnz
gs
das
addb
popf
cmp
jl
mov
nop
shll
les
adc
dec
push
cmp
push
aad
push
cwtl
aad
dec
pop
push
mov
dec
pop
mov
mov
mov
mov
clc
aam
outsl
sub
stc
dec
jae
sub
mov
fs
inc
mov
repz
out
leave
jg
lcall
repz
loopne
push
outsb
push
sub
fmulp
inc
loopne
testb
imul
int
cmp
arpl
mov
cmc
bound
popf
jno
into
jo
popa
or
js
mov
jecxz
icebp
lcall
pusha
xor
jmp
jle
push
or
sbb
inc
xor
into
sbb
ret
xchg
ret
mov
aas
xchg
adc
mov
jae
sbb
adc
stc
adc
fcmovbe
ss
sbb
xor
mov
adcl
jg
mov
adc
dec
dec
xchg
out
xchg
sub
sub
fdivrs
int3
fiaddl
repnz
sub
mov
popa
cmpsb
into
xchg
jbe
ljmp
xchg
ret
xchg
dec
xchg
dec
ret
mov
test
pop
or
adc
mov
add
and
lahf
dec
out
sbb
add
out
call
test
roll
cmpb
jno
mov
xor
ret
mov
or
jns
movsb
jns
imul
push
ret
xor
std
ja
outsl
and
rcll
xchg
dec
xlat
in
pop
add
fwait
testb
push
pop
adc
mov
out
and
int
stos
test
sti
out
xor
sbb
pop
mov
rol
test
add
ds
out
add
popf
je
mov
popa
pop
js
test
leave
test
sbb
hlt
pop
add
mov
xor
cld
je
les
pop
es
pop
insl
ss
jl
repnz
cmp
loopne
pusha
or
xchg
or
arpl
xchg
mov
sub
push
add
cmp
stos
insb
iret
mov
shrl
inc
fistl
movsl
and
sbb
mov
aas
das
mov
add
sti
xchg
xor
imul
lods
inc
rcr
scas
inc
mov
out
mov
data16
sar
cvtpi2ps
outsb
inc
jo
daa
push
lea
push
jmp
sbb
mov
dec
jmp
pop
push
mov
std
sub
cmp
lock
lahf
or
sbb
xor
outsb
push
fidivs
outsl
addb
cli
bound
mov
imul
or
sub
sti
cmpsl
pop
adc
ss
frstor
mov
int
jne
push
stc
push
inc
dec
cmp
incl
mov
dec
xchg
sahf
and
xor
pop
mov
mov
cwtl
and
repnz
cmp
outsl
sbb
mov
or
inc
mov
lahf
xor
arpl
fdivp
jbe
xchg
repz
jl
cld
pop
mov
lods
xchg
or
sar
call
ljmp
push
or
aas
stc
in
or
or
inc
xchg
nop
inc
pop
push
xor
sub
call
mov
jnp
mov
dec
mov
add
inc
cmp
ret
jl
into
mov
jb
dec
dec
inc
mov
ficomps
xor
push
imul
mov
jb
repz
xchg
pop
xor
jmp
lds
xor
aam
mov
sbb
pop
jecxz
jmp
xchg
lds
shll
push
jae
sarb
sub
cmp
mov
lds
mov
ret
jge
inc
out
jbe
mov
dec
lea
repz
in
add
inc
ret
fimull
cli
lods
dec
nop
cmp
outsl
ja
ljmp
jns
inc
cmp
fstl
ljmp
or
stos
test
mov
lock
mov
outsb
arpl
ret
clc
sbb
sub
ffree
push
movsb
jl
cltd
and
outsl
int3
leave
sbb
hlt
cmpsl
sub
jbe
shll
dec
divb
filds
das
popf
inc
mov
aam
jns
pop
push
add
out
mov
std
decb
sbb
movb
das
push
pop
pop
out
out
leave
jecxz
pop
stos
inc
enter
js
push
or
push
leave
mov
pop
imul
shll
lret
fucom
cmp
cwtl
pusha
or
iret
dec
mov
test
lcall
ds
mov
mov
js
inc
lods
test
push
mov
dec
div
jl
test
inc
sub
pop
or
xchg
fstl
or
dec
mov
push
xchg
lcall
in
cmp
or
in
scas
jp
insb
movsb
fildl
shlb
or
test
mov
sbb
lret
dec
lret
push
das
sub
popa
add
xlat
sub
pushf
push
inc
int
and
mov
ror
pushf
outsl
or
pop
push
repz
fwait
ficoms
dec
jns
adc
sub
or
dec
fimull
cmpsl
pop
lahf
xlat
shl
jle
push
inc
and
popf
cmp
inc
sbb
pop
add
sbb
out
pop
aad
jns
adc
cmpsb
pop
add
inc
dec
sub
lcall
or
ljmp
dec
jecxz
pop
xchg
test
lods
cmp
and
pop
pop
inc
insb
inc
es
negb
adc
into
cmc
push
fsubrs
pop
xchg
push
jge
pop
or
imul
lock
adc
adc
xor
dec
push
lret
test
pushf
mov
xor
pop
idivl
jmp
push
int
xor
clc
fdivs
jo
mov
cmp
lret
dec
hlt
pop
adc
adc
faddl
push
ljmp
and
mov
aaa
xor
imul
shrl
repz
mov
aaa
jo
adc
bound
mov
xchg
and
mov
xor
or
cld
mulb
dec
addr16
rclb
es
xorl
gs
bound
aad
out
ss
arpl
sbb
jae
jecxz
ret
and
cltd
or
pop
push
push
jnp
repnz
mov
stos
loop
fisttps
lock
test
mov
ss
push
sub
lods
push
xorl
int3
rcr
scas
adcb
popa
psubw
add
ss
pop
aad
mov
sub
or
push
outsl
xchg
clc
addb
loope
mov
test
push
push
cmp
push
cld
in
mov
jae
push
shll
pop
call
or
daa
cmp
arpl
in
cmpsl
pop
sub
sub
fistps
mov
scas
sbb
jmp
shlb
ja
and
lods
hlt
jns
popf
iret
das
sbb
aas
mov
scas
xlat
subb
xor
xchg
ret
mov
and
xor
jecxz
cwtl
mov
dec
push
lock
xor
cmp
mov
and
and
xor
mov
imul
push
imul
pop
mov
adc
dec
or
and
cli
outsb
popa
jns
dec
pop
sub
ljmp
sub
xlat
and
ret
cmpsb
mov
pop
fisubrl
in
adc
and
shlb
ja
aas
mov
jmp
aad
xchg
ljmp
mov
sub
rclb
mov
dec
icebp
xchg
subb
rcrl
movb
ss
loop
push
mov
outsb
mov
xor
test
sbb
xchg
push
jae
pop
xor
sub
pop
xlat
pop
pop
and
sub
lds
bound
inc
xor
pop
xor
push
repz
xchg
sub
cmp
ret
jbe
fs
pop
test
mov
leave
pop
sarl
sbb
push
mov
std
stos
inc
call
dec
mov
mov
or
mov
mov
hlt
xchg
cmp
in
add
jbe
jne
push
add
lea
mov
push
pop
ret
movsl
sub
dec
stc
push
in
sub
popf
mov
inc
ss
cmp
or
mov
andl
mov
add
cmpsl
pop
loop
mov
mov
push
mov
sub
clc
outsl
pop
out
or
inc
cmp
pop
in
sub
xchg
jns
call
dec
pop
adc
leave
push
std
push
movsl
stos
movsb
mov
jl
loop
fwait
in
sub
into
cmpsl
cmp
mov
mov
push
mov
jnp
push
inc
mov
add
ljmp
stc
sbb
stc
mov
adc
xchg
pop
pop
jecxz
adc
divl
into
cmp
jnp
lods
and
jo
ret
pop
pop
mov
jb
pop
les
xor
enter
cmp
mov
jno
sub
dec
imul
pusha
pop
movsb
arpl
lea
in
lcall
ja
insb
xchg
jo
and
js
mov
add
mov
popf
pop
and
bound
mov
mov
aad
add
jmp
hlt
stos
js
push
test
mov
adc
and
jecxz
mov
jmp
pop
jl
and
into
add
arpl
stos
pop
inc
push
adc
jmp
mov
movsb
aad
mov
lcall
hlt
adc
pusha
movsl
int
and
xlat
fidivl
fs
fldt
add
rclb
jmp
pop
pop
add
xchg
test
sub
inc
loopne
mov
xor
mov
xchg
stos
inc
scas
andl
adc
pop
mov
jne
or
xchg
ret
dec
push
call
imull
in
lds
adc
push
add
xchg
mov
popa
test
dec
call
or
addr16
sub
mov
mov
outsl
fdivr
mov
cmc
cmp
add
sbb
loopne
jb
pushf
nop
push
insl
imul
mov
jns
inc
addr16
sub
clc
loope
pop
pop
jno
cld
pop
aam
push
jmp
adc
push
ja
cmp
xchg
lret
test
gs
lds
pusha
pop
paddq
mov
cli
xchg
int
cwtl
andl
mov
out
push
mov
jle
sbb
mov
stc
iret
sti
clc
pop
sbb
and
dec
mov
loop
or
ljmp
cmp
or
sbb
lret
into
mov
lea
scas
xor
lret
push
mov
mov
in
popa
pop
mov
jge
out
and
or
aam
lds
sbb
neg
cli
mov
out
mov
shlb
ret
cmp
sbb
mov
cmp
aam
out
fwait
rcr
jp
adc
leave
test
pop
push
lds
sbb
loopne
dec
add
adc
xor
mov
dec
lret
ja
xlat
mov
push
push
aam
and
push
dec
mov
mov
push
inc
imul
dec
inc
dec
mov
xor
fsubrl
hlt
push
sbb
dec
mov
stc
mov
in
push
xchg
arpl
dec
dec
push
rorb
push
mov
inc
xor
cmp
ficompl
jg
or
push
inc
stos
add
lahf
lahf
pop
inc
cmc
adc
add
sub
push
cmp
fisubrs
dec
adc
testb
jp
rolb
pop
mov
gs
data16
js
jbe
out
dec
fdivs
pop
addr16
rcrb
test
movsb
aaa
ds
and
pop
push
pop
push
lret
inc
les
mov
ss
test
aas
and
jmp
inc
loope
sahf
jno
mov
scas
ljmp
sbb
in
xlat
push
inc
sub
push
popa
add
cltd
jo
dec
mov
sbb
fwait
out
repz
jmp
lods
pusha
out
icebp
mov
mov
insb
mov
mov
scas
inc
mov
ljmp
xor
adc
popf
or
pop
out
pop
and
inc
push
push
out
pop
bound
mov
fucom
addr16
aas
cld
cmpb
jo
leave
out
mov
mov
sub
test
lods
jbe
loop
dec
mov
push
mov
das
cmp
mov
pop
addr16
hlt
jle
sub
inc
jo
push
jbe
leave
in
mov
hlt
lcall
outsl
cwtl
xchg
nop
enter
and
xchg
fists
cmpb
xchg
hlt
or
mov
lsl
repnz
fs
enter
lret
divb
aad
mov
enter
mov
aad
xchg
test
adc
push
mov
cltd
pop
jecxz
mov
push
ficompl
mov
push
enter
test
gs
imul
ret
fcoms
inc
jo
loopne
or
push
jbe
xor
push
xchg
sub
mov
sbb
mov
pop
mov
cmp
or
andnps
fldenv
dec
xlat
mov
and
orb
sbb
mov
xor
mov
push
fisttps
fistpl
add
ja
arpl
mov
int3
ljmp
push
and
push
cmp
cld
fsubrs
movsb
test
mov
cli
lret
pop
mov
int
or
and
sti
xchg
insl
mov
imul
jg
add
cmp
pop
jmp
push
sub
add
push
imul
or
add
hlt
int3
scas
shll
int3
ret
mov
jb
loope
push
push
adc
repnz
popf
pop
hlt
jg
xor
xlat
pop
xorl
inc
in
loope
mov
nop
jns
push
lcall
xchg
icebp
dec
cs
sbb
ficoms
xchg
leave
mov
or
outsl
pushf
scas
mov
pop
xor
lret
jge
mov
cld
les
adc
or
inc
mov
aam
sti
stc
outsb
adc
mov
dec
xchg
jp
cmp
sub
ss
cmp
xchg
xlat
ficompl
add
mov
or
scas
jno
in
sbb
inc
in
or
jae
cmpl
lcall
call
stos
std
lret
adcb
or
xchg
cwtl
cmp
pop
inc
fnstsw
or
fisttpll
movsl
pop
js
sub
shrl
stc
lods
div
cld
insb
les
xchg
ja
jbe
push
push
ret
out
sbb
mov
lods
fistl
mov
and
popf
ljmp
xchg
mov
ret
and
dec
sub
mov
push
stos
dec
lret
pop
ret
aaa
aam
ds
mov
out
lcall
mov
enter
and
sti
cmp
push
jle
in
dec
fcoms
ljmp
sbb
mov
loope
push
movsl
loop
sub
arpl
hlt
test
jl
aam
push
mov
sub
push
aas
push
je
mov
sub
ret
jmp
divl
and
addr16
xchg
add
arpl
mov
rclb
mov
testl
mov
inc
cmp
outsb
test
add
in
adc
jae
test
mov
add
cwtl
in
cli
decl
or
lret
imul
dec
mov
or
ret
test
sbb
push
pop
xor
subl
rep
mov
lods
mov
mov
das
cmpsl
fdivrl
mov
stos
pop
pop
sub
mov
or
sbb
cmp
cmp
iret
mov
test
scas
xchg
sub
xor
jp
mov
xor
in
in
cmp
push
bound
inc
hlt
stos
push
insb
es
add
das
push
push
add
inc
push
in
mov
pop
push
jmp
jmp
mov
daa
jo
dec
sbbl
cmp
das
mov
push
js
ja
loop
dec
add
mov
out
pop
dec
mov
pop
shlb
mov
ljmp
rcrl
and
test
shlb
jo
rorl
xor
push
xchg
into
jae
loope
push
scas
subb
and
lods
adc
and
fimull
and
mov
mov
sbb
jbe
jle
mov
ss
in
xor
lods
pop
fisubs
xchg
popf
pusha
and
xchg
and
popf
pop
cmp
xchg
ja
test
and
inc
push
push
adc
sub
xorb
add
cmpsl
pop
shlb
mov
mov
hlt
add
mov
cltd
xchg
jge
and
sahf
mov
jns
int3
iret
push
rcll
cmp
and
xchg
dec
ret
xchg
fisttpl
pop
xchg
repnz
mov
add
in
adc
cmp
clc
sbb
insl
mov
sbb
out
push
les
or
xchg
pop
push
mov
out
sub
cmc
and
mov
or
ljmp
add
mov
pusha
lret
jp
sbb
scas
inc
rol
repnz
xchg
push
movsb
les
sub
std
jb
push
in
pop
adc
mov
outsb
add
push
call
pop
pop
or
or
push
jmp
sbb
mov
pushl
dec
mov
push
outsl
and
pop
mov
and
jge
and
jno
mov
bound
mov
mov
and
pop
outsb
sbb
popa
sub
in
cld
vpshaq
inc
cmc
mov
aas
sub
stos
pop
lahf
add
inc
test
mov
in
dec
orb
dec
xchg
dec
add
push
stos
sub
fwait
sbb
nop
dec
imul
mov
enter
mov
xchg
rorb
and
mov
mov
fbstp
mov
cld
lcall
popf
cltd
lahf
ror
cwtl
xor
pop
push
insb
fadd
das
inc
fisubs
sbb
add
mov
and
and
add
call
inc
xchg
jp
xchg
outsl
andl
mov
insb
cmpsb
pop
sub
xor
push
xchg
xor
addl
xchg
shrl
xchg
in
repnz
sub
push
insb
xor
push
jae
add
jle
popf
movsb
and
mov
shrb
jecxz
dec
or
push
sub
je
das
rcrl
xchg
pop
sub
mov
loopne
xchg
andb
dec
call
shl
aad
or
nop
pop
and
xchg
and
out
push
stos
jmp
and
push
std
jo
cmp
frstor
test
pusha
and
and
aas
or
or
jno
hlt
repnz
rcrb
icebp
push
inc
inc
jne
pop
lds
lock
xor
jl
mov
incb
mov
lret
out
out
cmpsb
les
outsb
or
xchg
fisubl
ret
pushf
dec
jg
lock
jns
sbb
dec
or
jg
imul
and
cmc
insl
jl
loopne
test
jnp
cli
mov
cltd
mov
sbb
fisubl
cmp
push
fbstp
fwait
aaa
pop
icebp
cmp
add
sub
out
push
xchg
mov
or
xchg
pop
mov
stc
push
loopne
add
jbe
jb
jg
cmc
scas
ja
inc
cmp
jmp
mov
jmp
push
std
xchg
cmc
sub
test
mov
push
ljmp
pusha
xor
sbb
rcll
fldt
fistps
adc
or
fwait
lock
or
sbb
popa
cmpsl
push
enter
repz
stos
outsb
jp
dec
ret
adc
mov
xchg
xrelease
sub
pop
sub
popfw
aam
add
xor
out
pop
pop
add
mov
mov
mov
pop
xchg
ja
xor
mov
call
push
int
test
movsl
inc
mov
test
inc
cwtl
dec
rorb
mov
mov
testb
fstpt
cld
out
fisubs
or
test
and
or
mov
scas
dec
push
lret
xchg
out
inc
cmp
nop
add
repnz
sbb
shrb
jmp
or
iret
out
shrl
nop
or
xor
dec
mov
sub
pop
push
mov
xor
das
add
push
mov
cmpsl
aaa
cmp
dec
inc
rorb
shlb
insl
adc
lret
je
ja
mov
movsl
xor
mov
push
shrl
fcoms
rcrb
pop
hlt
sar
stos
in
addl
rcll
dec
add
int3
push
pop
dec
xchg
mov
mov
stc
xor
jl
mov
ss
add
icebp
icebp
icebp
mov
mov
fidivrl
loope
sti
xchg
cltd
push
xor
or
sub
popa
sub
cmpsb
insb
aas
push
js
enter
xor
mov
mov
jmp
xor
into
adcb
movsl
adc
adc
pop
push
shlb
cmpsb
cld
xchg
lcall
xchg
push
int3
shl
les
sbb
mov
mov
nop
cltd
repz
mov
pop
xor
mov
in
xchg
mov
repz
pushf
push
je
xlat
add
fimuls
das
jb
sub
inc
into
cmp
adc
and
stc
xchg
lea
mov
dec
mov
jae
cld
aam
push
setae
mov
aas
xor
dec
sbb
fnsave
xor
imul
mov
push
jnp
mov
inc
jmp
nop
xchg
lea
xchg
xor
outsb
insl
and
adc
lods
jbe
or
dec
sti
xchg
pop
sbb
movsl
icebp
pushl
subb
pop
xchg
out
insl
lret
mov
mov
movsl
sbb
dec
stos
cmc
push
icebp
mov
sub
dec
xor
xor
adc
ds
jmp
sub
pop
test
xchg
xchg
pop
iret
es
mov
and
xor
pusha
push
cmp
add
dec
jmp
subb
sbb
mov
mov
add
jno
inc
adc
pop
dec
pop
mov
idiv
and
xchg
loope
xchg
push
jae
mov
scas
movsl
rcrb
jbe
mov
push
and
sbb
push
scas
push
cmp
mov
pop
jbe
ds
iret
xchg
in
push
mov
and
test
sub
fisttps
pop
mov
sub
cltd
xorl
xchg
dec
jns
aas
stc
popf
insl
jg
mov
loopne
mov
pop
and
mov
and
mov
shlb
loope
int
push
lods
and
xor
push
cld
lea
mov
push
mov
xor
push
sub
lea
sbb
mov
adc
ret
inc
pop
xchg
fwait
jmp
or
fadd
jnp
je
adc
insb
sahf
in
sahf
adc
out
mov
cmp
lret
xlat
cmp
and
pop
jnp
push
mov
or
cmpsb
jecxz
inc
fdivr
adc
leave
sbb
xchg
add
push
cmp
xor
cmpsb
imul
add
add
xor
dec
mov
add
enter
movsl
sbb
xor
in
dec
sub
jle
push
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
dec
inc
out
ljmp
mov
std
sbb
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
sbb
dec
out
sbb
xor
pop
cltd
mov
lret
lds
mov
xor
adc
push
movsb
sarb
adc
out
or
iret
sbb
je
stos
inc
sub
adc
inc
inc
rcrb
call
dec
or
test
jg
in
int3
mov
ja
jns
fldt
mov
xchg
je
or
cmp
cltd
push
or
test
sbb
push
rcll
jg
js
int3
daa
sub
jns
inc
xor
lods
pusha
mov
fwait
or
or
js
jo
inc
rcrb
mov
add
jle
stos
inc
sub
add
jle
cli
add
movsb
out
je
mov
dec
push
xor
stos
inc
sub
add
jne
mov
jne
xor
add
jle
stos
pop
xchg
movsb
mov
add
jnp
stos
inc
imul
sbb
stos
inc
sub
add
jle
stos
inc
sub
add
sub
inc
sub
and
movsl
adc
or
stos
inc
cmp
add
jle
stos
inc
sub
add
jp
cmpsb
inc
jb
mov
add
ljmp
mov
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
push
rcr
mov
add
sub
push
sbb
out
pop
sbb
in
jne
mov
add
pop
ljmp
mov
adc
sbb
ljmp
test
ljmp
mov
add
jle
stos
inc
lret
mov
adc
jle
stos
inc
sub
add
ret
inc
sub
add
jle
ljmp
mov
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
stos
inc
sub
add
jle
mov
scas
mov
push
rcll
cmp
inc
int
or
roll
mov
cli
xchg
stos
leave
sub
pop
jae
xchg
mov
lret
push
sub
dec
es
pop
pop
cmp
push
daa
mov
mov
jmp
cmp
xchg
les
mov
lods
in
gs
mov
mov
mov
fistpll
xchg
mov
ja
and
repnz
sti
sub
lret
pop
mov
mov
cmp
push
or
insb
mov
or
cltd
iret
pop
xchg
xchg
inc
pop
mov
ja
repnz
insb
and
lret
outsb
cmpsl
das
fldenv
cli
xor
int3
ret
push
mov
xor
ss
add
sbb
mov
mov
or
pop
and
or
test
mov
pusha
nop
jbe
fldt
aam
aam
or
mov
jmp
lret
sub
mov
jl
lods
ja
jge
shlb
addl
pop
imul
adc
lods
push
dec
jo
out
out
cmp
popf
mov
lcall
mov
out
mov
icebp
fstpl
enter
repnz
cltd
popf
das
push
adc
xchg
lods
stos
jp
inc
movsl
dec
push
inc
in
pop
imul
aaa
xchg
jae
mov
xchg
jg
rcll
outsb
insl
out
es
mov
mov
imul
mov
add
dec
cmc
adc
stos
addr16
add
push
lcall
incl
adc
jle
pop
repnz
inc
fdivrs
push
pop
in
es
add
mov
shrb
jne
ss
popl
cmp
movb
push
call
dec
pop
je
rorl
inc
mov
jo
push
aaa
rolb
icebp
icebp
scas
and
loope
repz
jmp
jmp
inc
lds
test
test
cmp
sub
and
pop
push
sub
or
outsl
sbb
out
cmp
inc
adc
in
pop
push
std
xchg
mov
mov
insb
addr16
adc
fmuls
arpl
cmp
iret
in
loopne
pop
xchg
ret
lahf
pop
xor
xchg
pop
push
aaa
or
pop
dec
jno
test
enter
lret
scas
test
inc
sub
aam
adc
cs
jl
inc
pop
test
mov
adc
loope
mov
loopne
mov
and
outsl
and
dec
lret
push
mov
push
xchg
push
push
lds
mov
xor
sti
cmpsl
pop
xlat
pushf
mov
outsl
add
sub
addr16
imul
insl
imul
xchg
and
add
das
inc
xchg
push
insb
mov
arpl
jno
je
ret
jle
mov
insl
scas
orb
add
sbb
rol
aaa
push
rcrb
popf
fxam
adc
and
dec
pop
jge
pushf
mov
jne
arpl
and
jle
inc
dec
shrl
ss
mov
and
pop
popf
pop
fs
in
xor
lods
pop
push
outsl
xor
inc
pop
pop
xor
mov
cmp
dec
mov
loope
xchg
in
or
pop
add
mov
les
imul
loopne
mov
inc
jbe
std
int
rcll
es
sbb
loop
lods
adcl
stc
cmp
sarl
mov
call
test
insl
pop
rclb
dec
aam
jno
pop
push
xchg
out
xor
and
outsb
enter
add
pop
pop
push
out
ljmp
call
int
mov
aad
mov
adc
popf
ja
outsl
add
imul
pop
mov
iret
outsl
pop
dec
loop
inc
pop
ret
mov
and
cwtl
out
xlat
lea
stos
xchg
xor
cld
test
pop
pop
mov
push
push
movsl
movsb
pushf
inc
cmpl
ljmp
cmp
pop
jbe
mov
cmp
jecxz
pop
hlt
lret
push
mov
cwtl
movsb
movsl
rol
or
xlat
mov
sbb
xchg
iret
xorl
fadds
lret
pop
xor
scas
lods
fs
icebp
jo
pushf
sub
dec
jecxz
cmp
out
hlt
data16
mov
sub
decl
cld
ficoml
or
push
je
stos
loop
cmp
sub
lods
sti
push
mov
inc
call
in
inc
arpl
mov
add
dec
mov
xchg
jae
lahf
xlat
or
and
ljmp
mov
adc
es
dec
push
dec
fimull
or
cmp
jle
clc
lahf
movsl
adc
ja
jmp
sub
dec
xchg
cmpsl
push
or
ss
bound
aam
hlt
enter
adc
adc
fwait
sub
mov
fisubl
mov
rcll
pop
push
mov
popf
scas
and
out
fists
jns
out
iret
stos
add
aam
in
xchg
push
adc
popf
stos
loop
xor
inc
out
sub
imul
inc
ljmp
sbb
mov
lret
push
scas
jl
push
leave
sbb
and
test
int
mov
push
adc
inc
lret
xchg
mov
fnsave
lret
out
hlt
into
and
mov
pusha
push
test
inc
out
frstor
cltd
mov
sbb
dec
mov
fwait
or
dec
mov
nop
and
sub
fldt
cmp
lods
bound
jb
out
out
outsb
stos
je
push
mull
stos
les
sub
inc
cmpsb
sbb
xchg
add
imul
clc
test
jbe
mov
aas
testb
add
inc
sbb
cmc
dec
xchg
push
lret
orl
stos
sbbb
mov
dec
leave
xchg
imul
pushf
js
dec
cld
jecxz
arpl
adc
mov
mov
push
mov
popf
jge
lahf
mov
and
push
pop
pop
fiadds
imull
stos
out
aas
sbb
adc
cld
je
and
or
mov
pop
mov
jmp
jl
dec
and
cld
out
sbb
jbe
ss
movsb
out
sti
add
call
push
mov
mov
outsl
jnp
jno
mov
jae
mov
cmp
loopne
cs
dec
and
cmpsb
stos
mov
inc
imul
sbb
lret
sahf
push
loopne
and
popf
les
adc
xor
imull
xchg
in
or
shlb
jmp
das
ret
loopne
movl
pop
shrb
aas
and
adc
xor
adc
test
inc
and
leave
into
sbb
mov
mov
xor
ror
xchg
arpl
mov
negl
sarb
mov
je
push
repz
jmp
movsb
adc
jg
push
pop
imul
xchg
div
inc
stos
mov
pop
adc
inc
mov
insl
fisubl
xchg
iret
ret
inc
push
sbb
xchg
jmp
sbb
sti
jns
shl
or
cli
pop
in
pusha
call
call
or
add
fcoml
sbb
scas
push
fwait
cli
leave
gs
sbb
xor
mov
push
das
push
jnp
mov
adc
cltd
js
shll
dec
int3
shlb
nop
cmpsl
in
stos
xchg
sub
xchg
daa
sbb
movsl
sbb
notb
pushf
mov
shlb
mov
xchg
adc
mov
movsb
ds
lods
push
and
sub
sbb
pop
mov
call
fimull
test
ja
int
or
addr16
pusha
adc
dec
mov
mov
push
mov
cmc
sub
cmp
pop
sbb
xchg
mov
es
cltd
mov
popa
cltd
pop
cmp
and
scas
jb
sub
out
test
mov
and
into
stos
mov
cwtl
and
dec
pop
inc
adc
cmp
inc
mov
adcb
xchg
cwtl
call
pusha
inc
pop
and
cld
popa
cmp
arpl
jp
ljmp
test
pop
adc
icebp
cltd
pop
add
jg
inc
jle
sarl
gs
mov
les
push
fcoml
jb
shr
call
out
scas
sbb
aas
stos
xor
mov
and
push
dec
jp
mov
pop
cmp
inc
ja
push
sub
rcrb
push
jmp
pushf
out
cltd
popf
loopne
lea
leave
pop
dec
test
in
faddl
xor
orb
ljmp
jne
cli
aad
xor
jle
shl
int3
daa
xor
es
sarb
test
mov
sub
loope
fadd
movsl
inc
mov
push
xor
fisubrs
scas
push
and
in
mov
ja
adc
popa
inc
mov
jno
add
jg
insl
jecxz
sti
and
aad
pop
jecxz
inc
mov
mov
fdivp
cltd
push
xchg
and
in
aam
mov
popf
push
inc
pop
cmpsl
andb
and
mov
test
mov
add
mov
rcrb
add
pop
shr
filds
mov
fbld
jle
ljmp
cmc
or
hlt
sbb
xchg
pop
pop
xor
pop
popf
loopne
enter
push
mov
jp
mov
inc
aam
push
sub
mov
or
leave
enter
test
and
das
fadd
lret
xchg
push
lcall
inc
push
insl
add
gs
insb
popa
out
je
push
inc
mov
repnz
add
outsl
movsb
jne
xor
inc
inc
xor
or
imul
scas
or
daa
das
test
dec
stos
and
lods
cmp
enter
mov
lcall
lds
leave
push
dec
adc
sahf
sub
cli
movsl
inc
in
push
fs
mov
fists
mov
xor
fisubrs
mov
mov
leave
rorl
lods
or
xchg
out
fstpl
lock
lods
lods
mov
cmpsl
stos
mov
mov
xchg
push
add
sub
decb
aad
data16
add
icebp
in
lcall
adc
lcall
and
cli
xchg
dec
daa
jmp
loope
sub
in
das
in
mov
pop
cs
xchg
jbe
xchg
in
loopne
cli
xor
xchg
sbb
mov
mov
nop
sti
lret
inc
addl
repnz
mov
push
mov
fidivrl
aam
mov
mov
repnz
xor
xor
push
dec
jno
sub
mov
pop
xor
inc
pop
inc
pop
test
pop
scas
pop
lcall
xchg
mov
pop
js
sub
sub
rorb
xchg
push
leave
dec
mov
mov
jl
aad
fcomp
mov
stc
mov
hlt
inc
ja
int
or
rcrb
js
ret
andl
out
jl
adc
fdivs
fcmovu
cwtl
jp
cmp
add
shlb
xchg
xchg
mov
std
cmp
fidivs
out
fmuls
lods
adc
cli
cld
cmp
inc
cs
cmp
sub
push
pop
in
cmp
sub
xor
cli
aaa
test
lods
mov
jp
jne
jae
sbb
fwait
sbb
mov
inc
dec
push
mov
cwtl
in
fstp
or
adc
daa
push
jle
jb
mov
jmp
sbb
out
mov
rclb
mov
int3
mov
cmpsb
push
mul
ja
jns
int
and
mov
shll
test
das
push
sub
jecxz
pop
shlb
shrl
cmpsl
push
outsb
mov
call
and
pushl
pop
test
cmpsb
xor
clc
fsubrp
inc
mov
inc
fs
inc
mov
dec
imul
mov
and
shll
mov
jg
call
push
pop
cs
test
and
leave
cmp
push
and
filds
sbb
les
cltd
mov
xor
mov
mov
lods
dec
sub
xor
mov
adc
sub
dec
repnz
xchg
dec
fsub
mov
xor
push
fldcw
inc
sub
mov
mov
leave
test
mov
or
cmp
adc
test
xchg
push
jo
sahf
js
push
mov
cmc
jg
in
lods
cmc
sub
test
int
lea
lds
shll
adc
icebp
jp
int3
les
int3
jp
adc
xor
inc
div
fsubrs
mov
xor
test
pop
test
inc
or
add
jl
or
fst
dec
idivb
mov
lcall
in
jbe
insb
jl
inc
mov
in
por
ljmp
jb
into
mov
adc
jg
movsl
lahf
push
mov
imul
mov
push
stc
xchg
push
and
pop
cmp
mov
mov
xchg
aam
cli
and
adc
scas
int3
sbb
sub
sbb
aaa
int3
aaa
nop
dec
jmp
ficomps
test
adc
lods
cli
or
xchg
call
adc
and
sub
jl
push
out
mov
pop
pop
ret
xchg
in
int
add
nop
lds
lahf
je
nop
cmpsb
loopne
bound
aam
and
adc
sbb
jb
test
ja
fmul
inc
dec
xor
inc
imul
and
inc
nop
test
add
stos
pop
testl
mov
jae
movsl
sbb
cmc
pop
cmpb
adcb
cli
and
fisubs
and
mov
in
movsl
or
pop
pop
xchg
leave
loop
pop
push
mov
insl
fstpt
lods
arpl
std
inc
push
ficoms
hlt
dec
cmp
xor
jno
je
mov
ja
xchg
jne
push
int
add
repz
xor
lods
arpl
rcrb
push
movsb
test
in
jo
std
inc
aaa
les
frstor
cmc
xchg
fidivs
cld
dec
sbb
jl
dec
and
add
pop
push
jmp
pop
xchg
or
jecxz
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
