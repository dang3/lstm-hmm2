sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
mov
push
call
lea
push
lea
push
call
test
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
push
push
push
call
movl
jmp
movb
movb
movb
push
call
pushl
pop
mov
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
mov
push
call
fidivl
mov
jns
stos
ret
push
mov
dec
xchg
add
jmp
sti
mov
icebp
xchg
mov
cmp
push
rol
cmc
in
xlat
shrl
arpl
inc
dec
and
push
jo
pop
nop
adc
and
mov
hlt
gs
negb
outsb
push
pop
mov
out
iret
call
sub
cmpsl
mov
imul
in
inc
lods
lods
cmp
les
mov
ds
andb
jno
mov
dec
and
pop
aaa
or
xchg
mov
pop
sbb
loop
cld
mov
fidivrs
mov
xlat
cmpl
add
or
stos
add
ret
mov
mov
cmpb
sbb
sbb
xor
and
inc
lods
push
push
mov
shlb
adc
test
adc
adc
lods
cmpsb
shl
jae
jle
mov
dec
repnz
cwtl
les
xor
xor
mov
cmc
mov
hlt
in
loop
push
xor
xor
adc
jmp
ds
filds
out
inc
xchg
and
std
sub
xchg
jbe
add
inc
inc
sbb
xchg
testl
lretw
push
sar
testl
stos
stos
test
movb
repnz
inc
lret
cltd
pop
cltd
lahf
push
jne
stos
sbb
insb
lods
in
insb
push
cmp
mov
inc
in
push
jle
movsb
sbb
or
mov
mov
push
cmpsb
push
arpl
mov
lret
or
pop
or
lret
fsubrs
or
mov
in
imul
mov
aas
push
dec
xchg
sub
mov
xlat
lret
ret
stos
xchg
xor
stos
or
pop
push
adc
pusha
cmp
xor
cmpsb
int3
push
fs
xor
push
sbb
fisttpl
gs
popf
ss
push
jae
or
or
fbstp
test
dec
popf
shrb
push
outsb
ljmp
push
and
mov
sub
mov
out
push
lcall
mull
movsb
xchg
or
data16
or
imul
lds
in
cmpsl
cs
push
fwait
add
cmp
aad
aas
adc
scas
push
and
cmpsb
or
xchg
mov
sub
and
xlat
sbb
sbb
jle
scas
fs
xchg
pusha
cmp
and
xchg
mov
push
je
sub
mov
aaa
xchg
ret
enter
cld
adc
pushf
dec
jae
loopne
mov
mov
cmp
fsts
test
sahf
int3
inc
xchg
sbb
sarb
stos
imul
arpl
cli
mov
pop
cltd
jmp
cli
xchg
popa
sahf
pop
sbbb
fldl
xlat
pop
mov
das
ljmp
sub
cmc
test
adc
in
in
xorl
imul
lcall
mov
mov
cmpsb
xchg
dec
cmp
pop
pop
subl
mov
pushf
fnsave
mov
ds
inc
jmp
sub
js
pop
pop
cmp
in
push
and
arpl
pop
xchg
mull
dec
out
incl
fsubp
nop
scas
xor
test
outsl
out
jg
enter
gs
cmpsb
sahf
jmp
imull
clc
lahf
std
xchg
popa
fisubrs
pop
cmp
add
xchg
mov
lret
cmc
js,pt
mov
mov
push
add
xor
mov
stos
mov
pop
cs
sarl
jle
nop
pop
xor
adc
add
daa
imul
adc
pop
shl
push
mov
push
in
cmp
dec
jmp
enter
mov
and
in
push
jbe
cli
popa
or
pusha
sbb
cmp
or
cs
push
insb
movsl
rcl
sbb
cmp
cli
and
cld
not
cmp
dec
mov
jp
mov
outsl
xor
adc
mov
push
ret
mov
punpcklwd
adc
mov
inc
call
jne
cmc
jb
imul
pushl
mov
sub
inc
cwtl
mov
in
cmp
dec
add
pop
repz
ficoml
inc
out
in
sahf
and
adc
sbb
and
shl
repz
sub
clc
or
pop
xor
fbld
cmp
or
push
je
aas
xor
xchg
jecxz
lods
xor
cmp
jp
rsm
dec
push
sub
push
sub
movsb
xor
iret
icebp
mul
inc
and
dec
test
lds
stc
sahf
xor
pop
and
stos
sbb
imul
das
xchg
xor
xchg
clc
or
mov
add
dec
dec
xor
inc
aas
xchg
sbb
adc
cmc
xchg
fs
jmp
xchg
out
icebp
or
push
shl
cmp
pop
inc
cld
pop
and
and
adc
lret
test
pop
cmp
push
jg
sub
call
push
dec
out
iret
mov
cmpsb
xchg
gs
aad
rclb
push
jbe
pop
test
sbb
movsl
jbe
mov
scas
adc
or
sub
and
icebp
adc
xchg
clc
pusha
cmp
mov
mov
imul
jb
mov
fsubrs
add
daa
ljmp
dec
add
out
imul
cmc
sbb
jp
pop
xchg
lock
add
xchg
mov
pop
pop
sbb
mov
test
cmp
hlt
insl
jo
or
dec
hlt
xchg
xlat
jo
inc
mov
test
cwtl
sub
mov
mov
sub
fidivs
test
mov
insl
cmpsb
sarl
mov
mull
sbb
les
test
jbe
jl
rolb
outsb
cmpsb
imul
jne
dec
fucom
jnp
mov
inc
pusha
mov
mov
shll
test
inc
loop
and
lea
mul
adc
nop
shll
sbb
leave
nop
lret
jns
mov
dec
cld
fistpl
push
pop
ret
jl
les
hlt
jmp
les
insl
mov
xchg
int3
mov
out
sbb
ret
movsb
aaa
inc
push
push
outsb
push
inc
jnp
insb
ss
xchg
pop
xor
xchg
cmpsl
outsb
cmp
sahf
pushf
imull
adc
adc
jecxz
sub
imul
mov
lcall
inc
hlt
gs
and
inc
mov
and
cs
inc
push
mov
inc
jge
fiadds
test
and
cltd
xchg
jnp
rcll
sub
pop
inc
jo
mov
rol
movsb
inc
push
testb
out
fsubl
mov
inc
dec
jns
sbb
jg
fwait
jl
jle
add
sarl
sbb
testl
loope
stos
in
jo
push
out
movsb
sbb
sub
sub
jmp
jb
push
data16
mov
mov
mov
xor
push
daa
arpl
fdiv
repz
add
scas
stos
dec
cli
dec
cmpb
xchg
add
push
lds
ljmp
nop
push
mov
cmp
enter
inc
ljmp
int
pop
shll
orl
int3
lea
inc
mov
mov
daa
adcl
loope
repz
sub
adc
add
inc
mov
mov
pop
in
push
das
fldenv
mov
orl
or
iret
pop
out
ds
and
fucom
into
iret
enter
jbe
cmpsl
add
jmp
add
test
stos
lods
xor
stc
out
adc
daa
add
les
xlat
pop
stos
sbb
addl
add
xchg
mov
imul
rcrb
xor
jp
lods
cld
sbb
mov
gs
es
loopne
rclb
xchg
mov
cs
cld
mov
jns
std
ljmp
fsubp
inc
mov
xchg
testl
ret
add
and
inc
fs
mov
xor
stc
cmp
in
mov
xchg
push
inc
shll
jns
into
or
shrb
popf
cmp
push
xrstor
push
das
outsb
xor
push
cmp
push
xor
xchg
sahf
mov
cmp
xchg
cltd
addl
lock
pop
jne
jmp
out
push
xor
dec
push
pop
lods
test
fwait
shl
lock
scas
cmpsl
in
cmp
stos
inc
ja
push
xchg
int
jnp
lret
aam
test
roll
pop
and
test
push
cmp
sbb
and
imul
cmp
inc
repnz
add
jno
cmpsb
cmp
xchg
cmp
mov
or
sti
cmp
jnp
ret
mov
ret
inc
and
push
push
lahf
xchg
das
dec
add
jno
cmp
or
jno
jne
stos
cmc
xchg
fcomip
add
movsl
inc
push
je
xchg
sub
addb
dec
dec
rcl
inc
les
mov
cwtl
daa
pop
ffreep
stos
rcrl
outsb
insl
and
sub
movsb
pop
mov
push
cli
adc
jge
shlb
imul
xchg
js
sti
jle
xchg
inc
int3
and
out
mov
push
scas
inc
mov
adc
in
cmpsb
mov
push
and
dec
xor
enter
sbb
outsb
add
push
mov
pusha
mov
mov
mov
mov
int3
enter
enter
test
jae
adc
outsl
loop
nop
insb
leave
jo
xor
adc
jbe
or
xor
je
mov
mov
orl
clc
movsl
and
sbb
adc
mov
aam
imul
jns
sub
nop
jl
add
pop
sbb
out
in
inc
cwtl
lret
data16
push
and
cmpsl
xor
add
rorl
divl
pop
xchg
push
pop
in
das
sub
dec
mov
mov
jns
lret
jae
cld
and
cmp
sub
add
int
je
mov
push
adc
and
cltd
insb
inc
push
jg
lret
jae
pushf
repz
or
push
and
adc
sub
mov
in
push
mov
int
xchg
adc
aam
mov
hlt
jecxz
mov
stos
test
xchg
pop
xor
lds
shlb
in
inc
mov
xor
fstpl
pop
adc
mov
adc
add
test
push
mov
pop
arpl
push
cwtl
nop
mov
cltd
push
and
inc
movsl
sbb
push
fcmovnu
in
jae
sub
jecxz
inc
jmp
mov
push
insb
cmp
mov
nop
orb
lahf
pop
mov
mov
add
sub
sbb
cmp
pusha
ret
sbb
popf
push
orb
pop
sub
rorl
mov
push
dec
mov
push
movl
stos
cmp
or
xchg
cld
xchg
mov
int
mov
inc
sub
adc
pop
pop
fbstp
fmul
xor
shrd
and
scas
in
sub
daa
inc
mov
inc
out
mov
std
cmc
add
xchg
mov
mov
fs
leave
rcrb
mov
cmpsl
arpl
mov
jnp
mov
sub
jo
popf
and
shll
dec
cmp
push
sti
or
pop
aas
jle
jo
xor
shl
push
pop
loopne
imul
lahf
mov
push
je
loopne
xor
inc
fldt
mov
dec
cltd
or
orb
mov
rcr
lret
pop
cwtl
outsb
leave
addl
jns
aas
fisubl
jge
mov
jle
cmpsb
adc
mov
push
jnp
add
movsb
nop
cmp
cs
cmp
xor
jp
sbb
das
mov
lock
outsb
shlb
xor
rcr
lahf
mov
cmp
out
xchg
jb
and
stos
mov
push
inc
or
or
clc
icebp
and
mov
shrb
popf
int3
in
vpcmpeqw
mov
mov
int3
mov
adc
inc
ja
fldenv
ds
popf
lds
mul
add
test
notb
scas
rol
inc
les
dec
jecxz
mov
mov
int
dec
ror
push
out
insl
mov
test
lret
mov
sbb
shr
lods
pop
mov
cltd
ljmp
imul
sti
pop
icebp
jb
subl
jae
mov
dec
xor
adc
clc
and
std
pop
xor
outsl
mov
test
inc
and
jecxz
inc
add
jl
mov
adcb
sti
inc
or
jo
push
push
cmpl
mov
dec
mov
out
stc
ds
xchg
inc
fisubrl
outsb
jle
mov
mov
mov
dec
in
xor
loop
mov
loopne
mov
pop
scas
fiaddl
test
add
jns
adc
adc
cltd
ja
adc
leave
sbb
mov
mov
dec
dec
jb
pushf
cmp
inc
out
jno
movsl
cmp
pop
xlat
push
loopne
or
sub
es
iret
pop
cmp
fiadds
iret
add
fsubs
inc
ja
xlat
sub
and
cld
sar
jg
push
inc
or
imul
jae
dec
mov
fs
in
iret
mov
adc
xchg
loopne
cmp
mov
repnz
push
jno
adcl
jl
lods
movb
cmpb
ds
cwtl
mov
jbe
aam
fldln2
std
jle
aaa
in
leave
push
scas
mov
fisubrl
xor
add
adc
pop
ror
pushf
sub
inc
pop
out
cmpsb
jp
add
cltd
imul
sub
adc
cmc
sbb
pop
loopne
cmpsl
loopne
xor
mov
mov
mov
xor
insb
xor
std
sub
pusha
cli
sub
add
out
mov
xchg
iret
mov
imul
mov
lods
das
lahf
push
or
testl
push
add
insb
pop
lahf
or
or
mov
add
lahf
pop
push
int3
rcrb
cwtl
das
jmp
push
cmp
inc
sub
sahf
stc
clc
cmpl
mov
das
add
je
loop
int3
punpckhbw
inc
popf
mov
pop
xlat
inc
mov
jnp
pop
jmp
push
aaa
movsb
mov
pop
jb
sarb
filds
js
fildll
mov
add
mov
aam
dec
jae
sarl
adc
lock
xchg
lret
ja
test
push
popa
mov
sbb
xlat
jnp
adc
sub
call
jo
push
into
sub
jae
aad
push
mov
loop
xlat
jb
aaa
das
imul
pop
dec
fdivr
xchg
aas
pop
lods
leave
adc
and
das
add
sbbl
imull
jbe
sbb
xor
xchg
push
repz
inc
sub
je
test
xadd
adc
lds
arpl
daa
jg
cmpsl
jge
push
bound
push
ret
stos
shrb
pop
pop
out
push
xor
xor
pop
ds
sub
insb
sbb
orb
xchg
das
shlb
xchg
sub
clc
add
or
cmp
jl
xlat
aad
sub
and
jg
add
add
dec
fdivl
sub
sub
icebp
cmp
and
push
rorl
out
inc
outsl
test
sub
sti
adcl
stc
cli
pop
mov
dec
or
push
aaa
out
aas
popa
and
jbe
jecxz
jae
into
jl
sub
or
pop
in
inc
std
les
inc
inc
dec
les
pop
fisubl
push
xchg
mov
mov
jae
rcll
dec
mov
cmp
cmp
lahf
stos
or
dec
sub
leave
js
mov
popf
and
imul
xlat
mov
fsts
xchg
in
mov
pop
lret
sub
imul
mov
add
jns
addr16
leave
push
xchg
ljmp
and
pop
or
lret
inc
loope
cmpsb
hlt
fidivrl
ds
imul
inc
in
fimuls
js
or
add
lret
dec
repz
adc
sti
bound
dec
mov
jae
lahf
dec
hlt
and
ror
clc
cmp
mov
pop
je
inc
int3
push
jbe
fs
adc
inc
outsl
dec
cmc
pop
adc
stos
lock
gs
cmp
xor
add
repnz
imul
pop
pop
inc
dec
xor
das
lea
rcrb
sti
push
aad
push
cmp
test
movsl
pop
out
ljmp
fcmove
jg
adc
movsb
stc
into
push
mov
pop
cmp
roll
add
gs
mov
enter
fistpl
dec
add
dec
in
pop
or
iret
sbb
sub
int3
lcall
test
test
shld
jbe
inc
sahf
idivb
repz
inc
jno
mov
inc
fincstp
fisttps
popa
int
mov
insl
loope
or
lds
xchg
das
xchg
fwait
adc
xor
fdivrp
insl
mov
mov
sahf
repnz
dec
in
test
out
mov
inc
jno
rcr
push
mov
dec
fsts
iret
cwtl
lods
mov
bound
test
fdiv
jmp
adc
jle
xchg
aad
jmp
cmc
xchg
mov
popa
in
mov
xor
in
sub
cmp
ja
popa
gs
push
pop
mov
movsl
sub
std
mov
add
sub
sub
das
mov
cs
std
and
popf
sub
xchg
pop
aad
cltd
jnp
mov
cltd
sbb
fsubr
mov
dec
mov
xor
ret
sub
mov
aam
dec
mov
lock
mov
fwait
test
shl
sbb
stos
dec
mov
cwtl
call
push
mov
dec
int3
stos
jbe
arpl
cmpsb
ss
push
cmp
aad
test
and
add
fs
sbbl
inc
lcall
or
outsb
pop
movsl
fs
inc
and
fidivrl
mov
sbb
enter
push
les
clc
mov
int3
cli
ja
clc
jle
push
pop
fxch
loop
sbb
outsb
sub
jmp
pop
hlt
mov
seta
and
mov
lret
pop
xor
adc
xchg
cmc
scas
add
cwtl
sub
inc
jne
jns
and
lock
cmp
call
lret
aaa
fcomp
jl
push
loop
pop
pop
stc
mov
mov
mov
sbb
test
xchg
dec
or
add
xorb
in
jae
or
je
out
sub
xchg
icebp
dec
lods
ficoml
xchg
jg
fldt
mov
loopne
mov
dec
push
mov
mov
lahf
shrl
sbb
push
movsb
adc
sarl
sbb
lret
fadds
sub
jnp
arpl
mov
arpl
mov
insb
aad
or
inc
popa
mov
or
and
stc
mov
mov
sub
push
mov
mov
test
mov
inc
jae
dec
jge
cmpsb
jecxz
lock
std
fildl
lahf
push
das
cmp
add
pop
jmp
cwtl
call
inc
push
pop
xlat
mov
insl
insb
mov
xor
sahf
jne
arpl
scas
mov
adc
xchg
mov
mov
ret
mov
mov
xor
movsl
into
ljmp
or
jl
fldl
cmp
inc
jmp
adc
fidivs
dec
fs
outsb
rorl
pop
mov
sahf
mov
pop
movsb
jecxz
mov
ljmp
mov
jb
stos
xchg
sbb
das
add
into
dec
lcall
sub
negl
test
adc
in
push
cwtl
std
inc
jns
sub
clc
and
sbb
dec
movsl
dec
out
adc
pusha
lock
cmp
pop
es
cmpsl
sahf
adc
sub
and
sub
sbb
push
mov
jg
mov
shr
loop
lods
push
sub
jno
ret
add
push
addr16
sahf
pop
out
add
push
aam
dec
add
pop
insl
adc
aad
stos
test
and
inc
call
push
fnstcw
pop
and
dec
ljmp
xor
gs
in
dec
stos
lahf
sub
sub
cmpsb
setge
test
sub
hlt
push
pushf
inc
adc
lahf
rcl
push
mov
loop
sub
out
push
rcl
xor
sbb
divb
xor
push
and
mov
pushf
mov
shlb
jp
add
lods
sbb
jl
je
popf
test
cmp
cli
push
jbe
inc
out
push
mov
mov
cmp
notb
pop
int3
mov
repz
sti
sub
cltd
leave
push
pop
pop
in
and
mov
out
roll
xchg
ret
mov
test
mov
add
xchg
push
fisubl
adc
sbb
js
fsubr
and
std
pop
push
stos
inc
xchg
mov
adc
dec
xchg
and
ret
mov
inc
mov
or
sub
mov
imul
sbb
pop
fwait
stos
pop
jns
inc
inc
jmp
cwtl
jge
sub
mov
dec
sub
cs
pop
fidivrs
scas
outsl
pop
push
lret
xor
or
sti
inc
jnp
cltd
repnz
sub
inc
push
sub
out
xor
in
in
dec
pop
sbb
sub
popf
jecxz
mov
frstor
test
jge
lods
stos
aaa
shr
inc
aaa
hlt
cli
pop
push
mov
adc
push
in
bound
das
fucom
lcall
cmp
jae
test
push
mov
test
fimuls
mull
mov
pushf
mov
stc
dec
push
or
sub
or
sahf
jg
fcmovnbe
fwait
adc
push
movsb
mul
pop
out
fisubrs
rorl
mov
push
inc
push
jbe
ds
enter
mov
sub
xor
cmc
mov
je
pop
pop
sti
in
dec
pushf
shrb
push
mov
out
ficoml
fmull
push
inc
sbb
cltd
iret
cmc
lock
test
sub
jp
aas
rorl
cmp
addr16
pushf
mov
or
mov
pop
rcll
cmp
pop
xchg
push
mov
pop
stos
lock
adc
out
cltd
insb
scas
mov
gs
adc
mov
stc
hlt
push
lods
ret
movsb
iret
pushf
mov
xchg
sbb
test
mov
sbb
ljmp
add
xchg
pop
jae
xor
into
je
push
clc
xchg
std
cmc
std
jge
pop
and
xor
sub
sub
inc
divb
jae
sub
insb
fimuls
and
stos
fldenv
push
mov
cmp
test
in
inc
mov
mov
mov
cmp
and
push
inc
sahf
mov
or
lds
movsb
and
dec
loope
push
cmp
fisubl
jge
xchg
lea
lcall
mov
dec
fmulp
std
inc
aad
mov
mull
popf
addr16
add
data16
pop
adc
aad
add
fs
mov
inc
mov
and
and
push
jecxz
push
pop
mov
add
gs
jno
data16
lods
sbb
sarb
fwait
pop
mov
and
add
fisttps
icebp
mov
lret
sub
adc
jnp
cmp
js
lods
ficompl
in
adc
xlat
inc
test
scas
cs
out
leave
fiaddl
pop
repz
scas
bound
push
xchg
dec
mov
sbb
jb
lret
cmp
out
inc
lds
clc
pop
mov
pop
cmp
mov
adc
xchg
mov
xchg
jp
dec
adc
in
mov
dec
out
and
pop
mov
jb
add
push
shll
sub
mov
popf
add
push
out
dec
cltd
ja
mov
sahf
mov
push
frstor
les
das
add
or
rcrl
cmp
push
lock
scas
add
or
lods
or
stos
leave
pop
mov
out
add
and
mov
hlt
sahf
sbb
and
dec
mov
push
jne
inc
shll
mov
or
shll
lea
add
jne
pusha
repnz
movsb
jg
push
hlt
and
pop
sub
mov
mov
jecxz
push
stc
mov
mov
add
pop
pop
pop
cltd
adc
dec
fstpl
lahf
mov
inc
mull
mov
data16
filds
mov
clc
adc
out
movsl
push
jmp
ja
mov
or
lcall
addr16
and
pusha
xor
cmc
pop
lret
pop
in
push
pusha
lock
inc
pop
mov
xchg
add
mov
and
inc
mov
inc
sahf
mov
sub
in
cmp
mov
ror
inc
xchg
dec
ja
or
sub
xchg
push
js
mull
loopne
dec
cmpsl
add
out
cmp
arpl
pop
and
in
mov
adcl
jae
dec
xchg
mov
dec
pop
mov
pop
push
fs
lods
int3
fdivs
mov
adc
dec
xchg
jle
jecxz
scas
or
mov
mov
mov
lds
pop
rep
push
inc
frstor
bound
mov
mov
push
xchg
inc
add
mulb
jo
fnstenv
push
loope
inc
sti
ds
in
and
lahf
cltd
je
js
fmulp
and
popa
mov
sub
sbb
mov
adc
je
xchg
jge
ret
inc
cmp
xchg
imul
inc
push
shll
xor
jae
mov
outsl
stc
into
push
test
xlat
mov
push
xor
xchg
pop
dec
inc
xor
cmc
imul
pop
in
xor
mov
stos
xchg
jne
loope
in
dec
add
fadd
ljmp
jge
xlat
push
inc
cmp
push
xchg
aaa
pop
movsl
test
cmp
ja
or
sub
inc
aas
dec
lret
push
std
mov
int
imul
push
jns
sub
in
add
push
icebp
inc
pop
xchg
dec
imul
xchg
rcr
or
test
dec
mov
fisttps
bound
push
ror
mov
or
xchg
xchg
movsb
adc
add
aaa
adc
es
xor
pop
imul
dec
std
inc
dec
outsl
iret
pop
mov
xor
and
cmp
aaa
sarl
jnp
aam
xor
inc
sub
mov
orl
enter
mov
js
int3
adc
cld
mov
mov
pop
scas
incb
inc
repnz
loope
cs
lock
push
push
icebp
aad
nop
pop
outsb
sbb
mov
mov
or
test
movq
mov
std
decl
add
outsb
xchg
daa
daa
mov
out
adc
mov
sbb
lret
inc
repz
xchg
sbb
inc
lods
adc
pop
xor
loopne
es
jnp
fsts
lea
shll
arpl
out
into
jge
jae
stos
xor
xchg
cld
inc
jae
rcl
pushf
mov
pop
inc
mov
movsl
mov
sbb
dec
cs
mov
xchg
mov
dec
cmp
mov
cltd
pusha
and
push
push
pop
jae
xchg
icebp
add
dec
jl
jns
jp
push
outsl
lods
jmp
push
xchg
and
mov
mov
or
loop
and
adc
aad
jmp
aas
xorps
push
pop
aas
ret
dec
out
add
daa
arpl
loop
fucom
push
dec
repz
addr16
jecxz
pop
inc
pop
push
ret
jle
lock
jge
test
xchg
add
enter
out
pop
pushf
adc
push
xchg
and
sbb
push
add
shl
je
mov
adc
mov
push
das
xchg
imul
mov
jp
scas
fsubs
lahf
pop
mov
push
stos
aam
mov
mov
mov
insb
push
rorl
arpl
sarl
insb
hlt
mov
les
lods
mov
xchg
mov
xor
lcall
negl
sub
push
imulb
icebp
sbb
je
mov
inc
and
xchg
inc
add
or
cmpsb
test
pushf
push
nop
popa
cld
cli
add
test
dec
mov
aam
jb
pop
addb
mov
out
xchg
xchg
xlat
pop
xor
aad
lds
xchg
pop
stos
inc
pop
pop
push
mov
movsl
fisubrs
mov
addr16
sub
pusha
push
xchg
mov
sub
sub
std
je
frstor
adc
insb
and
or
das
jbe
jb
popf
push
mov
jo
mov
in
mov
mov
mov
repnz
dec
aad
fwait
lds
addr16
movsl
es
mov
and
fisubrs
sti
popa
bound
xchg
inc
mov
jge
aad
xlat
cli
xchg
dec
or
shll
mov
jp
fxch
inc
rclb
call
rorl
xchg
mov
or
pop
and
mov
sub
orl
lret
add
mov
lods
into
rcll
mov
iret
adc
pop
shrb
fmull
xlat
pop
out
lods
push
adc
dec
das
test
ret
pop
push
pop
push
mov
imul
imul
or
cmp
int
push
mov
aas
les
cmp
lret
mov
or
or
pop
xchg
mov
push
sub
push
jnp
and
lret
jae
jbe
movsl
mov
add
xchg
cltd
and
in
mov
xor
pop
imul
inc
xchg
pushf
packuswb
sbb
lock
and
and
mov
add
imul
outsb
aad
dec
fildll
xchg
lcall
xlat
rorl
aam
xchg
fsubrp
or
in
jnp
pushf
xor
mov
std
fwait
inc
test
cmpl
mov
or
dec
inc
mov
andl
dec
xor
insl
lea
in
cld
dec
pop
scas
push
mov
notl
test
test
jecxz
jmp
es
cmpsl
sahf
push
pop
imul
or
ret
sub
out
or
movsb
dec
mov
aas
push
dec
jl
dec
arpl
fwait
cs
xchg
pop
orl
test
or
std
jae
sahf
mov
add
push
rolb
mov
push
dec
mov
inc
mov
and
fnstenv
rcl
add
mov
push
cld
dec
sub
loope
pop
and
pusha
addl
fnstsw
pop
jb
pop
ret
nop
jl
loop
cmp
test
xchg
mov
cs
scas
repnz
adc
inc
dec
jb
sbbl
scas
and
xrelease
cmp
lock
stos
mov
int
xchg
jg
and
pop
mov
jne
in
mov
loop
add
lods
lea
mov
out
mov
cmp
or
fildl
xor
or
imul
push
ret
and
outsb
sub
jmp
xchg
out
popa
or
or
add
dec
dec
sbb
push
scas
dec
dec
pop
std
xor
lods
scas
fcoms
in
fwait
jmp
pop
jns
call
cwtl
xchg
test
clc
popf
pusha
mov
mov
icebp
sti
sar
cli
movl
aad
pushf
inc
pop
lods
or
inc
mov
into
jae
test
dec
stc
jl
xchg
mov
add
mov
push
ret
mov
insl
pop
jmp
call
sbb
push
imul
pop
sbb
push
add
jecxz
inc
jno
btr
pop
mov
adc
test
es
jge
mov
cwtl
xor
jecxz
jge
push
sbb
call
push
mov
push
out
mov
add
dec
cld
or
int
aad
stos
mov
call
xlat
xlat
dec
sub
sarl
or
mov
adc
or
nop
mov
and
stos
xor
popa
pop
mov
add
cmc
lret
jnp
add
mov
push
add
add
mov
dec
stos
icebp
popa
mov
enter
inc
movsl
jmp
push
sbb
cld
sahf
loop
dec
push
and
mov
jo
frstor
sub
sub
call
jl
outsb
mov
push
mov
adc
sti
dec
fs
lea
test
pop
je
loopne
xchg
xor
inc
inc
popf
std
loope
jo
dec
cmp
pop
jg
pop
mov
jae
cmp
mov
adc
fucomi
incl
push
jae
adc
daa
pop
in
ds
popl
insl
jl
xchg
inc
loopne
outsl
pop
mov
rcrl
les
and
xor
pop
adc
testb
cli
rorb
inc
cmp
mov
mov
aas
jle
cs
inc
dec
fisubs
mov
repnz
dec
repnz
imul
add
pop
push
sub
add
pop
aam
pop
add
xchg
xor
and
adc
xchg
nop
mov
int
ficomps
inc
xchg
call
test
pushl
test
jle
imul
xor
insl
or
inc
addr16
call
mov
fwait
mov
lcall
imul
fs
mov
xchg
adc
iret
es
inc
mov
xor
incl
sub
and
pop
popf
mov
ficoml
sarl
ja
jmp
and
jp
movsl
cmpsl
push
cli
mov
xchg
pop
or
lcall
je
xor
rcrb
bound
fisubs
add
pop
add
mov
repz
add
adc
xchg
int
pusha
test
ret
push
das
out
rorb
xchg
scas
pop
xlat
aam
add
inc
jnp
xchg
inc
cs
call
ljmp
mov
mov
jnp
adc
cld
pusha
repnz
pop
std
out
repnz
in
or
push
lds
mov
and
lret
xorl
cwtl
aam
mov
mov
inc
fwait
or
into
pop
dec
xor
and
int3
adc
and
mov
andl
or
mov
push
or
jae
cs
in
rorb
adc
cmp
xchg
popa
stc
fistpl
mov
test
rcl
xchg
inc
mov
jno
sbb
bound
push
ds
in
inc
pusha
lcall
addr16
les
cwtl
js
fwait
push
or
xchg
hlt
xor
fs
cmc
dec
loope
add
xchg
dec
sub
enter
les
sti
mov
mov
mov
jmp
sub
out
cmpsb
cmp
shrl
xchg
into
push
daa
repnz
lods
cmp
and
pop
mov
scas
aaa
xor
sti
sbb
mov
xor
mov
ret
ror
insb
dec
movsb
mov
mov
addr16
pop
sbb
rclb
loop
pop
imulb
push
mov
cmpsl
dec
sub
cli
or
and
icebp
outsb
fisubrs
xlat
daa
gs
hlt
pop
stc
adc
mov
in
mov
lea
enter
adcl
dec
mov
sbb
cmpsl
push
inc
pusha
add
pop
xor
inc
jns
inc
xor
hlt
shll
sbb
xor
jae
jne
push
mov
fidivrs
xor
pop
loope
sbb
pop
mov
std
cmp
push
ljmp
push
lds
stos
test
movsl
dec
test
ja
xchg
mov
mov
adc
stc
jmp
mov
lret
repz
popf
dec
jl
xor
lods
xchg
add
inc
lret
push
loope
dec
lods
add
xor
out
mov
mov
stos
ret
inc
faddl
inc
cwtl
outsl
lods
sub
sub
pop
xor
test
jle
popf
jno
mov
jmp
sbb
movsb
aam
pop
movsl
adc
incl
fcomps
mov
loop
imul
dec
mov
mov
jmp
mov
pop
popa
lock
mov
or
loop
int
sbb
dec
jne
cwtl
jb
sarb
stos
or
push
test
popf
repz
mov
dec
jo
daa
inc
pop
mov
fs
push
push
and
sub
pop
or
ss
ret
mov
jg
fsqrt
insb
push
fs
rol
pop
call
enter
in
xlat
ret
cld
movsw
sub
repz
dec
jne
inc
call
ja
das
test
pop
inc
or
jno
mov
out
sbb
push
lds
and
jge
leave
jp
sub
ficomps
loopne
rcrb
mov
call
lret
cli
movsl
jl
sbb
jp
dec
fisubrs
orb
lcall
addr16
out
jno
pop
or
stos
icebp
adc
pop
sahf
rcl
lahf
push
and
xchg
dec
mov
mov
pop
cmp
xor
icebp
jge
dec
pop
ja
or
mov
daa
test
movsb
lods
stc
dec
in
jno
mov
incb
jae
adc
add
test
or
in
out
out
add
push
and
inc
or
out
sbb
sub
push
and
inc
ja
mul
sbb
and
leave
push
inc
lea
js
movsb
sbb
icebp
adc
xchg
incl
xor
outsl
sbb
testb
sub
push
sbb
ss
inc
xchg
push
repz
lahf
push
cmc
imul
sub
addr16
cmp
push
xchg
add
pop
add
lea
dec
mov
jle
ret
sbb
mov
add
adc
push
imul
mov
rcll
add
and
lret
rolb
inc
pushf
or
add
pop
sahf
in
in
pushf
jbe
lret
xor
bound
jae
subb
and
push
test
xchg
jmp
adc
vhsubpd
cmc
push
add
xchg
in
push
add
insb
dec
decl
fists
stos
mov
hlt
xor
insb
dec
jno
pop
dec
push
sub
pop
js
or
sysenter
fisubl
arpl
adc
pop
adc
mov
cwtl
pop
cmpsb
dec
out
add
ret
add
mov
data16
push
mull
mov
ss
jbe
imul
and
hlt
lahf
or
lret
sbb
andb
adcb
xchg
int3
mov
loopne
out
adc
mov
or
fildl
ret
pop
xchg
shlb
cmpsb
jle
mov
mov
mov
je
sub
cmp
cmp
add
add
jns
loop
shrb
aaa
lds
sarl
add
xchg
fwait
outsl
rol
daa
daa
jne
mov
mov
shll
insl
in
sbb
mov
xor
push
add
int3
cmc
test
add
test
stos
adc
jge
leave
addr16
pop
je
push
push
mov
pop
sub
arpl
xlat
test
dec
ret
lock
lret
add
mov
xchg
outsb
stc
sbb
out
lahf
lods
in
cmpsb
mov
xchg
shl
cli
cmp
ja
icebp
mov
dec
jg
xorb
mov
pop
fwait
lea
vphaddudq
idiv
popa
add
roll
inc
in
repnz
outsl
bound
push
xchg
mov
in
and
push
test
aaa
add
lea
cmp
in
lods
leave
mov
jae
push
mov
and
addr16
jecxz
mov
and
mov
add
repnz
std
or
jne
lods
and
sub
stc
xchg
jmp
mov
jle
imulb
add
mov
gs
imul
push
fldt
ds
cli
xor
dec
mov
das
xchg
jnp
repz
cmc
cli
add
mov
loope
mov
sub
fs
outsl
xor
push
insl
pop
and
movsb
aas
out
int3
insb
out
movsl
cmc
test
sbb
xchg
pop
scas
pop
negb
stos
adc
cmc
aad
in
cmpsl
jle
prefetcht2
out
stc
les
rcr
test
mov
test
fldl
out
sbbb
lock
roll
mov
xchg
pushf
fdivs
int3
pop
into
xchg
cmpsb
or
stos
gs
out
jmp
insb
pop
dec
stc
popa
stos
fiadds
lret
mov
jno
movl
fs
add
xor
loope
sub
mov
ret
xchg
dec
fisubrl
cmc
jg
movsl
mov
les
push
mov
sbb
jb
dec
test
mov
pop
and
gs
int3
push
test
orb
fs
dec
outsl
push
mov
mov
sub
int
cmp
xlat
mov
mov
lea
or
jecxz
xor
scas
loop
and
cld
mov
jecxz
cmp
inc
lock
sbb
stos
pop
lds
fwait
pop
fnsave
cmp
scas
in
lcall
xchg
outsl
mov
push
add
lea
mov
push
pop
popf
inc
fistps
and
dec
fbld
loopne
imulb
sub
jo
int3
jp
mov
cmpsb
mov
in
in
and
pusha
push
mov
push
push
out
stos
sub
adc
sbb
loopne
jl
pushf
insl
int3
push
js
cmp
sbb
aas
mov
dec
sub
faddl
dec
aas
or
push
outsb
pop
add
loope
sub
js
stc
sbb
sbb
xchg
jbe
ret
sub
mov
loopne
mov
shl
shr
jnp
cmpsl
repz
mov
fs
jbe
push
pop
popa
int
adc
arpl
in
jbe
gs
movsl
mov
test
mov
lds
pop
les
xchg
stos
sbb
pop
pop
push
or
cmpsb
call
jo
and
dec
out
test
mov
js
pushf
cmc
xchg
fisttpl
pop
xor
xchg
test
push
push
out
pop
cwtl
sub
adc
add
sbb
and
fcoms
rorb
rcl
lods
mov
mov
int
lods
cli
xchg
pop
iret
adc
inc
into
sbb
insb
pusha
bound
push
movsl
repnz
push
or
mov
push
cld
aaa
stc
imul
test
incl
sub
scas
push
xor
lcall
sub
cli
adc
jecxz
movsb
ljmp
push
int
cs
or
mov
xor
and
fcompl
push
xor
mov
fldl
mov
testl
xchg
dec
push
push
add
add
pop
dec
aad
dec
gs
inc
fwait
push
popf
and
testl
push
adc
sbb
ljmp
jne
lret
ss
sahf
mov
push
negl
jmp
lock
lods
xchg
cmp
sub
and
xor
pop
jmp
xchg
add
mov
dec
adc
xchg
lret
jno
lods
gs
dec
adc
inc
dec
xor
adc
lods
mov
push
and
mov
pop
lds
push
call
in
mov
enter
xchg
dec
shll
repz
xor
lock
clc
orl
or
or
xchg
sub
pushf
xchg
movsl
xchg
repz
rcrb
sbb
or
test
movsb
dec
xchg
mov
aad
push
std
out
sarl
scas
in
jecxz
sahf
ljmp
or
xor
fsubr
push
push
push
nop
test
test
popa
ds
pop
push
les
inc
xchg
ds
xchg
jb
je
cli
and
mov
lods
mov
add
mov
sbb
mov
adc
xchg
pop
mov
scas
test
jne
jno
mov
aad
push
xor
sub
into
out
or
mov
and
mov
sbb
in
test
iret
sub
pop
pmullw
mov
inc
push
sbb
data16
ss
mov
std
cmp
roll
cmc
xchg
je
mov
mov
roll
fwait
repz
lret
loopne
test
pushf
cltd
cmp
push
mov
fiadds
mov
lods
jo
cmpb
push
popa
lahf
int3
adc
cmp
in
fmull
test
fdivrs
push
sbb
or
pop
lahf
mov
mov
movsl
ss
mov
cmpsb
ja
push
xorl
lret
xor
insb
sahf
addr16
push
jo
pop
popf
cmp
xchg
or
enter
adc
hlt
and
or
mov
lret
mov
jno
pusha
movsb
ljmp
mov
mov
cmp
jne
pop
ret
insl
addr16
jno
sbb
mov
stos
lds
ds
pop
pop
sbb
test
sbb
sbb
movsb
jp
pop
lds
lods
pop
adc
jae
or
push
xchg
jb
pop
pop
fcomi
fyl2xp1
lret
and
lret
shrb
xlat
ds
ja
cli
push
pop
outsl
mov
add
inc
push
xchg
jbe
add
dec
popa
iret
nop
cmp
jae
pop
adc
mov
sbb
jge
notb
push
xchg
mov
out
lret
jle
loope
std
adc
mov
cmc
lret
mov
pop
adc
clc
out
or
js
mov
lock
int
jnp
adc
data16
xor
call
push
adc
and
sti
lock
mov
sbb
test
mov
inc
pop
repnz
add
outsl
std
popa
push
fadds
jno
popa
call
jge
cmp
push
sti
push
enter
dec
sarl
dec
push
lahf
add
jp
xlat
test
je
dec
out
add
ljmp
gs
sbb
push
daa
lods
sahf
or
sub
mov
pop
jle
lret
outsb
mov
jae
jmp
xchg
and
shlb
sbb
incl
test
std
dec
cmp
ficoms
pusha
dec
inc
repnz
or
gs
sbb
aas
jl
repz
stos
lods
fiaddl
or
xchg
or
stos
add
xchg
mov
aam
inc
decb
in
std
cmpsb
hlt
push
cwtl
jns
pop
addl
mov
push
test
dec
cltd
xor
loopne
test
jmpw
aas
xor
dec
inc
pop
jbe
testl
les
xorl
fisubs
cld
xchg
xchg
lret
or
outsl
xchg
rcl
std
flds
jne
mov
fsubrs
cld
pop
out
shlb
push
mov
or
xor
jne
cmp
repz
mov
pop
jns
mov
dec
cmc
dec
push
mov
push
scas
xchg
jge
and
lds
lods
push
push
and
bound
and
shlb
loop
mov
test
out
push
or
jg
lret
fld
imul
dec
data16
pop
and
mov
jp
push
adc
js
add
stos
nop
shrl
ret
loop
add
cs
jg
ljmp
rol
fdivl
ss
push
cli
or
out
pop
xchg
rol
sub
out
fs
jno
leave
dec
imul
fimuls
daa
loope
or
mov
xchg
int
mov
sarl
jge
popf
pop
push
cli
sub
cwtl
aam
add
repnz
xorb
or
adc
cwtl
scas
int
jmp
push
es
xor
mov
rcrb
in
dec
sahf
mov
jnp
cli
pushf
inc
add
sbb
mov
insb
lods
les
orl
shll
cmc
sub
mov
mov
cmpsl
hlt
push
cmp
addr16
xor
jecxz
mov
icebp
mov
clc
cmp
or
mov
movsl
cmp
movsb
push
bound
sbb
cmc
xor
jns
xchg
movsl
out
cmp
xchg
xor
arpl
inc
outsb
insb
mov
push
inc
pop
cmp
sahf
in
or
cltd
add
arpl
pop
mov
add
or
mov
or
add
ret
xor
pop
and
jo
mov
cmp
inc
jmp
and
test
pop
inc
jnp
dec
jecxz
or
xchg
out
enter
int
iret
mov
rolb
int3
fisubs
inc
push
cmp
scas
jb
rcll
or
dec
inc
pop
push
rcll
xchg
push
int3
pop
mov
dec
push
pop
mov
iret
imul
dec
dec
sbb
or
sub
repz
xchg
shll
pop
mov
call
dec
sarl
adc
out
mov
sub
test
in
mov
pusha
add
call
jbe
rorb
scas
pop
fidivrl
lahf
lcall
adc
pusha
mov
in
out
das
push
pusha
dec
ss
cmpsb
inc
sbb
cld
test
push
jno
pop
jg
ret
xchg
dec
lods
pop
mov
cmc
enter
nop
popf
les
jo
lock
xchg
adc
imull
pop
int3
aad
jbe
stc
lret
jmp
dec
push
sub
sub
repnz
in
aas
out
fdivrs
add
shll
movsb
stos
inc
mov
hlt
or
pop
mov
or
into
mov
loop
popf
outsb
ljmp
bound
pop
popa
push
xchg
imul
scas
mov
lock
adc
stc
subl
and
and
loopne
fildll
aad
mov
jns
shll
cmc
call
aam
adc
sub
xchg
mov
xchg
inc
loop
dec
mov
cmp
pop
jecxz
xor
jae
sbb
cmovnp
popf
sahf
jge
add
mov
loope
sti
stc
das
push
fcompl
addr16
outsl
test
bound
jl
adc
rcll
lret
repnz
ds
jns
pop
test
adc
movsl
mov
xchg
test
shl
and
jge
add
jae
idivb
inc
and
push
testb
mov
sahf
movsb
mov
dec
sub
pop
pop
rorl
ds
sbb
cmc
add
mov
push
pop
cmpsl
sbb
or
arpl
shll
mov
cmpsl
inc
mov
jecxz
or
mov
pop
idivl
divl
jmp
mov
cmpsb
lods
repz
shr
in
jp
cmp
lret
test
sbb
mov
and
mov
fcmovnu
push
je
or
mov
jmp
ret
iret
cli
test
jg
pusha
loope
std
push
and
xchg
fdivp
jl
movsb
inc
inc
xchg
push
xor
into
and
inc
jno
jb
adc
push
pop
push
pushl
pop
jbe
fadds
popa
idivb
lds
mov
lock
pusha
cmc
dec
or
rcr
xchg
mov
addb
out
jnp
roll
pushf
cwtl
jb
push
scas
sub
add
sbb
in
add
lahf
push
jmp
jecxz
decb
add
test
je
mov
mov
iret
push
push
mov
mov
jecxz
out
adc
and
andb
dec
mov
and
out
jge
hlt
fs
xchg
cmpsb
push
aaa
inc
mov
lock
sbb
cli
xor
into
add
push
lock
mov
sub
sub
ds
and
dec
scas
jbe
shl
jns
mov
adc
fcoms
mov
xor
push
mov
mov
imul
mov
push
jo
mov
ja
in
push
adc
sahf
cld
sub
pop
ljmp
mov
iret
jns
subl
lock
mov
ret
mov
and
ljmp
xor
rolb
pushf
repz
cmp
push
adc
stos
xor
or
sbbb
cmpsl
int
cmp
leave
or
cs
and
adc
fdivrs
pop
fildll
xlat
fsubl
mov
scas
sub
lret
enter
ficomps
jmp
stos
and
scas
dec
in
test
int3
pop
xchg
push
pop
cwtl
sbb
push
or
in
pop
cmc
aad
sbbl
sbb
xchg
cmpsb
mov
fisttps
adc
push
inc
arpl
ret
lret
push
cs
lods
or
or
cli
gs
out
dec
mov
or
add
xchg
fmull
jecxz
adc
stos
add
shrl
mov
cltd
scas
mov
iret
subb
jne
out
fwait
out
call
adc
dec
scas
jae
mov
adcl
repz
rclb
and
or
aam
push
jae
lods
aad
push
lods
iret
mov
fidivrs
aad
cld
imul
stos
mov
xchg
cs
and
sub
jne
or
stos
shll
icebp
push
out
arpl
jne
adc
icebp
iret
sub
fwait
or
aaa
lea
dec
ds
jbe
sbb
es
lret
ds
dec
ds
nop
push
jo
pop
in
popa
in
iret
icebp
lcall
aas
lods
test
xchg
js
out
sub
daa
lods
pop
adc
push
es
cmp
dec
sar
push
shll
and
and
inc
fistl
inc
push
ret
rcl
fimull
insb
xchg
dec
ja
adc
gs
adc
pop
pop
adc
xor
les
adc
jg
out
mov
dec
test
test
out
pop
mov
pop
jg
and
mov
or
adc
mov
jmp
sub
pop
and
leave
dec
and
roll
push
enter
mov
mov
das
fimuls
pop
int
repnz
lds
jo
rol
icebp
pop
inc
sbb
pushf
mov
xchg
cmc
dec
add
pop
add
popa
or
outsb
sbb
mov
push
push
inc
cmp
cld
daa
fmul
cmp
xchg
call
dec
notb
add
add
push
clc
addl
jb
dec
xchg
push
outsb
push
jae
adcl
pop
adc
push
clc
mov
sub
dec
add
iret
out
adc
add
imul
sub
add
test
mov
test
in
loopne
cs
lods
mov
adc
push
aad
dec
mov
or
or
jmp
jle
lods
add
nop
mov
push
adc
arpl
aam
and
xchg
inc
das
sahf
pushf
fs
mov
stc
loop
pop
sbb
inc
dec
sbb
rcll
or
push
in
mov
jae
loopne
out
les
testb
ret
jo
outsl
loope
adc
cmp
int3
inc
int3
mov
mov
leave
or
or
inc
inc
xor
fsub
bnd
aad
sub
cmp
fisubs
xor
rcrl
ret
loope
aad
dec
shr
sbb
xor
cmp
or
mov
jl
out
xchg
mov
movups
cld
sbb
sbbb
sbbb
cmpsl
xchg
fs
ss
mov
lods
aaa
mov
or
xlat
push
jbe
stos
push
lret
sti
add
sahf
test
stos
in
mov
cmp
cltd
sarb
jle
inc
into
push
push
dec
mov
push
push
ret
xchg
jno
shrl
jae
and
aas
imul
test
fs
js
jno
xchg
xor
mov
daa
stos
jp
ret
mov
mov
test
sub
pop
sub
rcrb
mov
mov
mov
mov
lock
jo
data16
xor
data16
add
mov
xchg
insl
mov
int3
inc
push
push
add
jp
cmp
test
jae
adc
fnstenv
inc
scas
shlb
rclb
xchg
pop
mov
sbb
jnp
dec
xchg
inc
push
lahf
inc
jle
mov
inc
xor
mov
inc
imul
call
mov
pop
pop
int3
sarb
jge
jg
or
xchg
daa
arpl
movsl
push
cmp
mov
pop
out
arpl
sub
repnz
cmp
dec
jle
cwtl
icebp
inc
mov
pop
add
cmp
cs
cwtl
in
pop
add
std
cmp
xlat
mov
movsl
cli
incb
jae
fidivrl
test
cmp
scas
sub
pop
mov
lcall
inc
mov
shlb
xchg
sub
jp
mov
and
sbb
mov
shl
subb
ror
outsb
dec
mov
aaa
fiadds
mov
mov
stc
xor
add
mov
adc
and
aas
ret
adcl
cmp
stos
sub
ficoml
and
dec
daa
test
xchg
loop
pcmpgtb
xchg
cltd
inc
je
gs
add
adc
movsl
mov
jae
jle
and
bound
es
dec
mov
inc
cmc
adc
adc
insl
pusha
into
test
cli
incb
cmp
out
xlat
add
jp
cmpsl
addr16
frstor
in
pop
xchg
pop
je
mov
adc
test
push
or
jmp
shll
inc
out
adc
std
les
pop
sbb
stos
out
lds
cmp
adc
cmp
jns
cmp
sub
cmp
jle
jl
loop
add
inc
dec
sti
insb
lret
sti
push
mov
setle
dec
mov
jb
adc
dec
and
xchg
jle
das
mov
pop
repz
jge
sbb
out
pop
jb
xlat
inc
pop
iret
out
loopne
dec
es
call
mov
mov
repnz
lahf
add
pop
mov
bound
mov
cmp
add
imul
push
orps
movsl
dec
cmpsb
or
rorl
int
notb
je
in
push
shll
inc
sbb
ret
xchg
push
push
or
int3
jg
test
sub
mov
dec
addl
jo
mov
or
and
xor
popa
insb
sbb
push
out
sub
mov
test
enter
int3
xchg
push
jl
or
sbb
mov
mov
xchg
sahf
shll
lret
loopne
clc
add
arpl
inc
pop
pop
out
nop
and
push
out
repz
dec
cmp
ret
icebp
add
rcrb
push
dec
shll
pop
and
inc
cld
fwait
push
into
push
mov
adc
jge
ljmp
mov
je
and
push
adc
push
mov
in
inc
mov
xchg
xor
movsl
inc
cmp
hlt
xchg
jge
pop
inc
lcall
or
sahf
mov
lret
lea
cltd
push
push
xor
rcr
sahf
sub
xchg
fadds
pop
mov
mov
in
cld
pop
jge
lret
or
adc
lods
xchg
push
mov
inc
ret
jp
jmp
pop
xor
ljmp
mov
adc
mov
scas
sbb
lret
push
mov
divl
mov
jae
int3
mov
or
je,pn
sub
jle
in
add
test
mov
into
cmp
sub
in
sbb
out
jns
inc
inc
pusha
xor
test
cmp
fcompl
rcrb
shlb
pusha
adc
dec
jno
and
sub
in
jb
mov
jl
and
repz
test
in
add
pop
inc
jae
sub
jnp
and
mov
jno
pushf
pusha
xchg
push
sahf
jmp
popa
add
mov
rorb
call
sub
adc
or
xor
push
daa
jnp
aam
aam
outsl
mov
cmp
and
js
or
fs
aad
dec
mov
inc
dec
fwait
or
jne
int3
xchg
or
std
pushf
jo
fnstenv
lds
inc
mov
jg
loope
addr16
bound
stos
cwtl
mov
jl
xchg
push
push
fistpl
xchg
dec
xchg
and
sub
pop
mov
mov
pop
mov
dec
adc
or
bound
xchg
mov
popf
stc
int
add
arpl
adc
enter
rol
cltd
adc
insl
mov
cltd
dec
dec
out
insb
out
aad
jnp
push
dec
xchg
inc
cmp
rcl
adc
inc
inc
inc
repnz
int
fldl
add
repz
clc
cli
jle
add
pushf
and
sbb
dec
mov
mov
sbb
in
mov
sbb
push
add
dec
ja
dec
out
mov
inc
fdivrs
cmp
mov
inc
out
add
imul
sbb
xor
lea
rclb
cmp
cmpb
lret
ret
push
pop
popf
and
daa
out
mov
mov
xchg
and
sbb
pop
imul
add
out
mov
jae
mov
shll
cltd
sbb
push
cmpsl
add
mov
js
adc
or
dec
insl
popa
push
inc
mov
sub
and
mov
repnz
mov
mov
fiadds
faddl
imul
data16
sti
cmp
loope
inc
jb
cld
lea
or
cmp
sbb
add
dec
pushf
add
movsb
lea
push
mov
loopne
xor
push
adc
push
out
not
xchg
xchg
out
jl
adc
popf
or
daa
das
adc
inc
mov
inc
jp
xchg
cmp
jp
mov
dec
mov
loopne
push
push
out
out
loop
aad
dec
jnp
lcall
in
push
ss
mov
cmp
pusha
dec
and
adc
xor
mov
mov
insl
sti
add
mov
push
mov
arpl
pop
popf
jne
ffree
inc
or
cwtl
push
xor
cmp
cmp
scas
call
sub
movsl
cmp
mov
xchg
lahf
cmp
lcall
les
adc
inc
xchg
movsb
inc
lods
cmpsl
pop
xor
sub
mov
and
andb
data16
imul
inc
fs
jae
and
xor
jae
mov
test
lods
jecxz
iret
sti
leave
popf
lret
fsubs
mov
scas
cmovne
inc
aaa
bnd
leave
add
mov
inc
enter
cs
mov
stos
aaa
sbb
mov
in
lods
repnz
xchg
pop
jns
mov
out
lds
push
pop
shll
pop
cltd
test
add
js
push
and
cmp
inc
daa
cmp
gs
insb
mov
int
mov
sub
jp
mov
inc
mov
push
ss
cmpb
mov
mov
jne
sbb
inc
cmp
sub
sbb
into
sti
sbb
flds
adc
jb
cmp
mov
adc
adc
adc
cmp
lcall
xchg
inc
adc
jbe
out
adcl
ja
stos
pop
cli
cmp
sub
pop
cs
test
insl
xor
dec
arpl
xchg
je
fmuls
xchg
mov
or
xlat
sbb
mov
lods
or
cli
arpl
mov
dec
call
int3
inc
lcall
sub
cwtl
mov
add
push
imul
lret
cmpsl
adc
arpl
jne
mull
sub
jne
dec
xchg
addr16
insl
jb
add
fsubrs
sub
and
jns
xchg
rcll
es
cwtl
rol
cmpsb
mov
sub
dec
mov
fistps
mov
sbb
pop
lods
fistps
jb
popf
fnstcw
ja
lods
pusha
iret
shll
mov
fwait
jns
popa
xchg
outsl
mov
loop
sub
stos
pop
cmp
ret
stos
and
lds
add
push
cmp
aas
imul
and
insb
or
jle
add
xorb
pop
or
push
je
xchg
xor
pusha
pop
test
jns,pn
jno
sub
mov
and
xchg
add
mov
iret
imulb
in
nop
push
sub
leave
mov
fidivs
xchg
lahf
movsb
aad
imul
and
pop
push
mov
fcomps
je
pushf
sbb
sbb
dec
push
mov
dec
push
dec
push
cltd
mov
out
cmp
xor
lods
mov
add
adc
fstpt
lret
lock
and
pop
in
cli
dec
je
xchg
daa
in
out
dec
stc
in
out
mov
dec
hlt
push
mov
inc
imul
cltd
int
jbe
dec
loop
or
pusha
test
inc
andl
scas
filds
pop
stos
ljmp
fistps
jp
pushf
jge
fistpll
xchg
fidivrs
gs
repz
out
in
or
scas
lock
das
sbb
and
sbb
aaa
adc
xor
fldl
mov
enter
fidivrs
rcl
add
dec
jo
push
aaa
nop
test
sbb
inc
or
pop
nop
mov
and
pop
popf
xor
stc
jae
push
jne
ret
jmp
jge
ret
cmpsl
pusha
aas
adc
insb
pop
push
mov
sub
mov
dec
outsl
mov
jp
xor
xchg
dec
pusha
in
sbb
in
push
in
cmp
xlat
jecxz
inc
outsl
mov
fildl
sub
decb
xchg
xchg
and
aam
xor
inc
je
cmp
jg
mov
push
cmc
sbb
enter
ds
outsb
loop
fsubl
jnp
push
fisubs
xchg
in
mov
arpl
mov
inc
in
test
xor
inc
lret
pop
push
popa
sar
sbb
ds
test
gs
subb
push
repz
mov
rclb
mov
outsb
scas
xor
call
sbb
ss
or
or
mov
xor
mov
popf
xor
std
shll
ljmp
ret
sbb
fisttps
jle
cmpb
adc
push
test
lcall
imul
sbb
out
jbe
xchg
das
sub
ja
fwait
mov
mov
imul
mov
push
cmp
or
push
mov
mov
or
clc
fsubp
outsb
rol
addr16
jl
jmp
mov
xchg
xchg
adc
push
xor
xor
int
stc
ret
andl
push
aaa
jle
ret
lods
ficoms
mov
mov
push
int3
push
clc
lret
jbe
addr16
jbe
stos
xor
dec
mov
jnp
sbb
sbb
repnz
xor
nop
js
cmc
cmp
jmp
inc
sbbb
flds
dec
jae
mov
aad
jmp
and
mov
pop
mov
out
pop
imul
sbb
sbb
mov
cltd
jmp
mov
in
xor
in
cltd
dec
add
xlat
shl
pop
in
xor
jno
push
hlt
mov
pop
andl
ret
test
add
aad
cmp
or
cmp
ret
xor
dec
inc
jns
stos
insb
nop
es
imul
jbe
xor
ds
add
imul
mov
push
movsb
inc
or
jle
call
add
pushf
xchg
test
mov
out
shll
sbb
add
mov
jecxz
mov
test
or
lcall
push
push
and
ja
scas
and
lret
out
daa
outsl
shll
movsb
gs
add
or
jge
stc
add
mov
stc
fs
cmpsb
hlt
loop
adc
mov
fwait
lahf
fcomi
pop
jmp
pop
or
repz
sub
xor
push
xchg
adc
pop
out
pop
idivb
adc
add
test
sub
out
fstpl
ds
mov
and
orl
lcall
pop
sbb
loopne
jle
xchg
loope
mov
lods
out
adc
or
xchg
in
adc
repnz
rcll
stos
adc
jp
rcrl
test
in
dec
adc
lahf
aad
scas
add
mov
push
into
fstp
xor
inc
xchg
xor
lods
daa
cmp
shr
popa
inc
clc
lds
jns
xchg
repz
fs
inc
lret
xchg
inc
xchg
add
jns
jb
mov
in
fwait
aaa
pop
cmc
ficompl
pop
lds
rcl
cmpsl
bound
es
into
fildll
rcrl
pop
dec
adc
cmc
test
insb
pop
pushl
or
adc
nop
out
fnstsw
jns
out
dec
pop
push
imul
icebp
sbb
push
sbb
mov
ja
sbb
dec
cmp
sub
xchg
push
scas
aas
ljmp
gs
out
lock
adc
xchg
pop
jno
xor
pop
mov
test
dec
dec
jns
orl
push
jge
inc
inc
cmp
sbbl
gs
scas
insb
lds
or
add
lcall
test
xchg
mov
and
pop
pop
aad
xchg
mov
pop
dec
push
bound
and
fildl
loop
in
push
xor
testl
dec
adc
icebp
adc
pop
lock
aaa
and
out
adc
mov
dec
pushf
stos
frstor
mov
adc
xlat
cmp
xchg
cmp
sbb
test
in
lds
fs
loopne
mov
or
or
rorl
stos
xchg
ja
test
add
and
repz
bound
lods
push
cmp
adc
xor
inc
ret
es
xor
add
xor
stc
sarl
jns
loop
jne
or
das
add
ss
push
faddl
sub
repnz
imul
scas
sbb
mov
xchg
lret
cmpb
test
loop
arpl
pop
fsubrs
lcall
push
add
adc
mov
testb
inc
adcb
repz
adcl
dec
lahf
cmp
mov
or
push
and
leave
mov
fstp
jno
rorb
mov
and
xchg
adc
cld
mov
push
jmp
fnstsw
sub
adc
insb
pop
mov
mov
mov
mov
sub
xchg
scas
mov
and
pop
sub
ss
add
sub
adc
push
push
xchg
mov
jmp
cmc
cld
jae
imul
xchg
dec
xchg
arpl
imul
cli
mov
fists
cmp
lcall
mov
insb
ja
or
loopew
push
aad
push
pop
dec
sbb
ljmp
and
cld
adc
aad
dec
test
das
xchg
push
cli
dec
jle
testb
loope
cmp
iret
je
dec
outsb
es
xor
sub
jae
les
inc
push
push
push
rcr
dec
jo
loope
jb
icebp
jo
mov
sti
lret
inc
mov
push
push
pop
xchg
aaa
or
in
xor
je
pop
andb
pop
jg
dec
in
je
mov
mov
imul
add
jmp
faddp
jne
mov
addr16
imul
dec
and
lock
dec
in
and
pushf
mov
jle
dec
and
pop
mov
xchg
hlt
repnz
rclb
sbb
and
sbb
mov
cld
hlt
pop
shll
imul
jae
addl
aaa
out
push
jmp
push
xlat
test
in
or
cmp
popa
push
aaa
ror
xor
out
xor
cmp
dec
sbb
sub
popf
daa
mov
add
popa
mov
loopne
aad
pop
mov
std
stos
jmp
lcall
jb
mov
mov
mov
mov
pop
xor
pop
push
fiaddl
xchg
pushf
aas
dec
imul
ror
pop
popa
push
jno
lods
nop
mov
xor
mov
scas
mov
push
lods
mov
sub
sub
jae
dec
xchg
xchg
inc
sub
adc
ds
cmp
lods
scas
sub
and
stos
dec
adc
repz
int3
and
mov
sahf
or
dec
in
mov
adc
jne
sub
pop
pushf
adc
xor
icebp
rcl
ret
insb
aaa
sti
lds
jp
shll
or
scas
jecxz
loopne
shrb
or
int3
mov
repz
xlat
xchg
mov
imul
push
xchg
inc
scas
mov
cltd
push
lret
xchg
clc
xor
rcrb
sbb
out
shll
sbb
in
in
das
push
sbb
pop
adc
stc
push
movsl
fisubl
data16
leave
cmp
call
ljmp
into
mov
push
sarb
out
dec
jbe
lcall
push
lcall
jg
dec
xchg
out
pop
xor
adc
fisttpl
mov
data16
fs
jcxz
nop
repz
aaa
lret
mov
dec
idivl
xchg
shlb
les
or
inc
popa
inc
dec
dec
xchg
jle
push
inc
mov
xor
into
xchg
push
inc
cmp
loope
push
mov
fcom
sti
sahf
jnp
std
insb
cmp
popf
or
rorl
insl
lds
and
ret
adc
mov
dec
in
aas
push
lods
lods
or
int
mov
cltd
mov
or
mov
or
mov
cs
jbe
stc
inc
rcrl
push
cmc
push
pop
test
inc
loope
lahf
push
sbb
mov
adc
rolb
xchg
rolb
push
movsb
xor
loop
in
fs
mov
mov
inc
roll
aam
lods
loopne
pusha
cltd
jmp
push
lret
xor
mov
jmp
mov
ret
and
stos
iret
and
xchg
mov
jg
sub
sbb
lds
or
les
sbb
mov
hlt
nop
adc
pop
or
ret
pusha
push
scas
inc
and
out
or
lret
dec
adc
ljmp
addl
and
out
push
dec
pop
fstl
jl
jecxz
test
push
mov
inc
int
inc
push
xchg
cmp
jnp
std
cmpsl
leave
pusha
leave
sbb
cmpsl
loop
fiadds
push
rolb
xlat
call
add
cmp
movsb
fdivl
sbb
adc
rcl
scas
fildll
gs
cmpsl
fnstsw
int3
cmp
cmp
je
das
scas
dec
jno
sarl
push
aad
dec
popa
xchg
mov
or
jne
cmp
lret
mov
outsl
mov
and
sub
xor
or
push
enter
leave
jb
stc
fiadds
rcrb
inc
movsl
mov
int
cmp
shrl
lret
dec
repz
adc
fcompl
xor
jp
cs
jecxz
or
outsl
and
or
stos
rolb
xor
aaa
les
mov
out
and
dec
test
call
cltd
pop
popf
test
xchg
mov
jl
bound
jmp
cld
mov
push
or
fistps
ljmp
add
mov
js
mov
sub
sub
cmpsl
pop
loop
stos
pop
lahf
scas
mov
cmpsb
sbb
enter
cmp
ss
sti
aam
and
xchg
mov
jecxz
hlt
mov
or
das
jmp
xor
ds
sbb
sub
mov
mov
cmp
lret
int3
scas
cmp
cld
test
rolb
jae
sbb
pop
add
movb
push
mov
fldpi
sub
mov
mov
xchg
add
ret
dec
leave
js
aas
fld
repz
cmp
lcall
pop
in
ret
push
cld
out
jle
in
test
mov
dec
sub
imul
push
leave
xchg
gs
lahf
lahf
lret
out
dec
js
sbb
inc
cmp
or
push
arpl
int3
pop
jns
fcoms
movsl
push
stos
adc
addr16
mov
add
rcr
es
arpl
repnz
addr16
pushf
xchg
loope
inc
scas
sti
mov
mov
cmpsl
xor
inc
mov
repz
cmp
jb
enter
testb
jbe
mov
ds
push
cmp
lret
push
fidivs
lods
mov
jne
lret
sbb
insb
xchg
mov
pop
jmp
lds
or
jns
bound
repz
sbb
xchg
add
dec
cmpsw
stc
fnstsw
mov
in
notb
sbb
xchg
and
fsts
outsb
lock
xchg
xchg
mov
dec
mov
icebp
mov
fldt
out
push
xchg
mov
jns
int3
inc
push
mov
call
mov
mov
add
add
lret
adc
pusha
cmpsb
rcll
adc
jmp
fcomp
stc
in
icebp
aad
push
and
movsb
adc
jb
dec
dec
mov
mov
sub
fldcw
addr16
lods
movsb
or
add
loopne
mov
jmp
add
je
adc
push
test
rclb
xor
cmp
or
aaa
and
das
fs
xchg
movsl
cmpsb
mov
clc
fdivrl
dec
mov
je
pop
cmp
stos
pop
pop
or
cmp
test
ljmp
inc
leave
push
jle
and
cmp
outsl
lock
test
adc
out
loop
xchg
jno
pusha
pop
out
fists
jns
iret
fwait
cmp
cli
xchg
push
jcxz
scas
movsl
xchg
fimuls
mov
xorb
test
cltd
xor
mov
and
inc
aaa
insb
leave
ret
cli
xchg
push
outsb
fisubs
out
test
mov
cld
mov
mov
push
fs
jecxz
lods
push
mov
mov
cmc
sbb
push
pop
adc
popa
add
lahf
inc
ficoml
outsl
cwtl
xchg
and
daa
mov
addr16
push
mov
ss
arpl
mov
push
mov
rcrb
dec
inc
call
sub
or
jl
xchg
jl
div
sti
and
aad
push
inc
daa
je
pop
xchg
push
insl
or
cmpsb
shrb
push
leave
data16
sub
mov
lock
rclb
dec
push
cwtl
mov
rolb
sub
push
outsl
repnz
rolb
adc
dec
lods
xchg
jp
repnz
and
jle
inc
adc
daa
lret
mov
push
int
loop
pusha
sbb
leave
test
mov
je
cmpsb
popf
enter
xorb
lock
pop
pop
xor
jo
in
loop
adc
shll
scas
ficomps
leave
aad
ds
das
addr16
aad
in
add
push
jle
hlt
cltd
fisubrl
fcompl
outsl
cmc
out
adc
xchg
mov
out
cwtl
or
inc
jl
cld
pop
ds
in
xchg
xor
fs
cmp
jno
mov
xchg
lcall
fimuls
xchg
mov
cmp
subl
fmul
mov
hlt
aad
inc
andnps
sbb
xor
imul
mov
pop
jp
mov
inc
sbb
or
mov
or
pop
jns
aaa
jae
jmp
cli
les
sub
gs
jg
mov
shl
mov
jecxz
pop
not
mov
popa
cmc
inc
push
adc
ret
sub
sbb
arpl
mov
rcll
clc
cmp
mov
daa
add
lret
xor
cwtl
xchg
cs
imul
mov
aaa
int
cmp
lods
add
xor
mov
roll
fwait
cmp
iret
test
rcll
shlb
aam
iret
sub
add
fisubs
jne
adc
out
sbb
dec
xchg
sbb
mov
fwait
adc
pop
add
sbb
adc
add
popf
lods
lods
or
stos
roll
inc
cld
mov
lret
fldt
jnp
inc
pop
pop
int
int3
lods
mov
nop
xor
in
xor
test
mov
rorl
and
cmpsb
loopne
pushl
inc
in
in
loope
mov
js
push
fcom
lret
jbe
hlt
push
dec
sbb
mov
or
imul
jg
push
incl
sarb
xlat
inc
add
sub
inc
mov
scas
mov
sbb
mov
aam
fiaddl
push
shll
jbe
in
push
xor
push
xchg
in
popf
mov
mov
inc
mov
lret
pop
add
dec
fmul
inc
divb
adc
jge
movsl
mov
jo
aaa
pop
les
ds
bound
cmp
mov
les
jle
mov
add
inc
cld
xchg
xchg
or
or
xchg
loop
div
and
rcrl
mov
xor
ja
push
fstpt
add
lds
or
cltd
imul
movsb
push
out
add
mov
xor
mov
call
adc
sbb
leave
imul
mov
mov
mov
rorl
ret
mov
cmp
icebp
lret
clc
in
in
fs
xor
rcrl
movsl
std
and
mov
arpl
jmp
pop
xchg
out
sbb
movsl
mov
push
std
inc
cld
les
jns
push
jmp
js
cmpsb
xor
cmp
cmp
bound
ror
lret
hlt
xlat
dec
ret
jns
xor
js
push
jno
xchg
sbb
cmp
stos
mov
mov
lea
ss
xlat
push
daa
mov
roll
add
addl
mov
andb
sbb
loopne
movsl
repz
sbb
cmp
or
xor
out
inc
xchg
mov
lret
fstl
inc
cmp
aam
jl
mov
popf
fscale
ja
push
popa
or
xor
mov
lods
inc
pop
jmp
add
lock
mov
xchg
enter
rorb
xchg
xchg
jp
mov
mov
adc
adc
inc
test
push
mov
mov
out
stos
lock
push
int3
dec
lods
push
fcoms
mul
cmpsl
fiadds
scas
sarb
test
and
sbb
adc
addl
dec
cmc
xchg
inc
cli
jae
cmpb
xchg
dec
jo
addl
in
into
xor
push
inc
test
inc
fimull
stos
or
rcrl
or
cmp
stos
adc
cmc
jb
push
pop
add
lcall
stc
mov
popl
ja
imul
imul
or
or
fs
jo
lock
push
cs
shl
jl
push
out
add
jg
outsl
pushf
lcall
cltd
sub
ja
dec
jge
or
lods
cmp
dec
clc
cmp
xchg
das
add
ja
lret
in
pop
push
es
jo
and
lods
cmp
xchg
flds
ds
cmc
call
jmp
cmp
sub
dec
ret
aaa
repnz
inc
mov
mov
adc
mov
int
mov
fildl
mov
mov
or
xchg
das
mov
nop
mov
ss
clc
and
push
adc
shlb
or
sbb
push
mov
pop
lock
ljmp
stos
sub
fisubl
cmp
jecxz
in
jo
popa
mov
and
ret
gs
sarl
lahf
cmp
into
and
cmpsb
push
out
popa
mov
std
mov
pop
repnz
outsb
jecxz
sbbb
ds
inc
pushf
cmp
idiv
cli
test
jp
insl
pop
mov
add
pop
jp
fldenv
or
mov
not
lret
je
xchg
insb
mov
enter
cwtl
pop
mov
cmc
aam
adc
and
mov
shlb
mov
popf
fldl
push
pop
push
cs
sbb
mov
mov
insb
push
lahf
cmc
mov
test
fsubrp
sbb
in
push
mov
xorb
mov
test
sub
and
sub
sbb
scas
inc
push
push
fsubs
fsubrl
mov
inc
add
push
xchg
scas
ret
pusha
adc
dec
loopne
icebp
and
mov
jnp
popa
jge
sub
add
lds
fdivrl
sti
mov
sub
add
push
lcall
in
js
inc
pop
jmp
pop
pop
adc
fbld
cltd
or
int
push
iret
and
jle
shr
jne
ss
mov
stc
mov
and
andl
lods
and
sbb
lahf
mov
sbb
pop
or
xor
mov
inc
xchg
popf
cli
icebp
add
lods
ds
enter
scas
cmpsb
pop
mov
push
xchg
push
sub
mov
xchg
and
addb
push
mov
ret
rclb
cmp
in
xor
xor
out
inc
sub
call
outsb
or
adc
xchg
lcall
stos
push
xchg
fsts
push
push
fwait
mov
popa
and
adc
fs
cmp
inc
and
inc
cmp
mov
cmc
or
jns
test
cmpsl
lret
rolb
sbb
popa
sub
and
in
insb
ljmp
cmpsl
int
mov
lock
shlb
xor
dec
xchg
dec
jl
xchg
popf
lea
mov
mov
fcom
arpl
fs
cltd
fdivrl
jo
pop
aad
mov
mov
imul
mov
cmp
lods
dec
pop
ret
int
lret
adc
xor
pop
fiaddl
add
mull
fwait
cmpsl
je
xchg
pop
cli
or
scas
mov
xchg
ret
inc
push
lea
shrl
ss
inc
icebp
and
pushf
cltd
ror
add
fistpll
test
lea
push
sbb
xor
fldt
mov
bound
pop
and
xchg
lret
jmp
mov
dec
inc
std
and
fdivl
repnz
dec
lods
xchg
mov
pop
insl
mov
lcall
push
inc
add
xchg
daa
aas
sbb
mov
pop
cwtl
or
daa
pushf
push
pop
sbb
adc
repnz
lods
cli
adc
popf
imul
adc
push
mov
fwait
aas
push
lret
cmc
push
popa
int
sbb
cmc
mov
lea
add
or
fwait
xchg
jg
test
and
imul
fidivrl
out
mov
mov
movsl
out
insb
aam
insl
adc
xchg
subb
pop
and
sub
mov
sub
cmp
xchg
sti
dec
cmp
or
loop
out
mov
cmpl
xor
sub
fidivrl
sub
sub
or
xchg
lret
push
or
inc
and
pop
xor
sub
cmc
jl
movsb
jnp
xor
out
pop
mov
and
sar
push
sbb
ljmp
mov
sbb
add
into
push
rorb
fbld
insl
inc
mov
or
out
fs
adc
out
movsb
push
jecxz
iret
xlat
aas
daa
shl
mov
cmp
jns
lods
mov
push
adc
in
in
cmp
sahf
imul
cld
iret
mov
fsubs
outsl
addr16
sbb
push
dec
mov
imulb
std
xor
daa
xchg
inc
movb
push
jmp
xor
jb
sub
adc
ljmp
jae
jmp
rclb
dec
sbb
sbb
outsb
lods
inc
pusha
bound
es
ja
andb
and
jb
sbb
push
xchg
ljmp
pop
insb
add
movsb
and
dec
outsb
fst
jge
loop
sbb
add
inc
gs
jg
imul
cmpsl
push
sbb
push
jnp
cmpsb
jmp
jp
call
sbb
push
insl
mov
aaa
xlat
mov
fcompl
es
pop
cmp
mov
lret
add
cmc
lcall
xchg
mov
pop
add
out
mov
icebp
ds
fdivs
jb
fsubrs
pop
mov
jbe
incb
jge
xor
jo
cmpsb
jge
cmp
popa
aaa
jge
call
out
popf
pop
jns
xchg
add
imul
lahf
mov
std
adc
adc
orl
inc
out
sub
xchg
sub
pop
inc
gs
mov
push
and
sti
sub
shlb
sub
sbb
test
out
insl
mov
push
mov
jns
adc
and
rclb
xchg
adc
push
aad
mov
test
rcrb
mov
add
xchg
sbb
push
mov
dec
mov
popf
lahf
push
inc
fwait
mov
dec
leave
lock
inc
or
fldl
cs
iret
aam
dec
cwtl
adc
push
sbb
enter
pop
cmp
xor
push
mov
sub
and
add
xor
pop
roll
lea
mov
loopne
cmp
mov
jle
or
movsb
push
jle
fnsave
cltd
imul
aam
inc
xlat
mov
repz
imul
das
icebp
movsl
jle
dec
mov
mov
xchg
pusha
testl
add
icebp
and
sub
and
std
push
or
jmp
mov
int3
lea
lcall
adc
add
out
inc
fisttpll
push
cwtl
add
sbb
stos
mov
es
test
fsubs
sbb
iret
lret
sub
sbb
push
mov
sbb
mov
dec
sbb
sbb
imul
push
shlb
and
outsb
sbb
cli
fidivrl
sub
and
mov
push
pop
push
aad
adc
inc
in
mov
push
shlb
and
or
fs
fisttpll
loopne
repz
pop
pop
cmpsl
push
xlat
das
sbb
jbe
inc
mov
inc
sbb
jmp
popf
out
mov
add
inc
icebp
pop
sub
push
pop
mov
and
xchg
data16
push
fwait
pop
push
cmp
cmp
mov
icebp
xor
jns
cwtl
leave
loop
mov
jecxz
xchg
flds
fildll
cmp
mov
cs
popf
push
mov
cmpb
cmc
stos
jecxz
xchg
movsb
and
mov
sbb
add
cmp
ja
mov
add
sbb
push
mov
rcr
lock
pop
cmpsl
mov
sub
add
or
adc
dec
and
cld
inc
xor
sub
xchg
lods
shlb
repz
or
dec
mov
push
and
adc
out
pop
ficoms
negb
adc
pop
xchg
rcr
rol
das
xchg
add
cld
cmp
mov
cmp
inc
rcl
and
xchg
inc
mov
inc
test
iret
into
mov
mov
cmp
mov
xchg
bound
jae
cmc
lock
mov
dec
push
cmp
loope
mov
mov
sub
jmp
icebp
jae
push
ret
add
in
fcoml
out
test
mov
mov
adc
loope
aam
jmp
jne
dec
inc
outsb
call
out
cmp
inc
lcall
mov
xor
jae
cwtl
push
xchg
push
xchg
in
mov
test
mov
push
out
aaa
mov
out
jne
push
lock
pop
shl
mul
sarl
cmp
inc
dec
dec
adc
mov
cmp
rclb
push
add
xchg
arpl
out
imul
push
push
xchg
lret
xchg
and
je
call
fsubp
inc
js
orl
pop
sar
sbb
imul
gs
and
push
adc
repnz
xor
mov
mov
ret
xchg
lahf
inc
in
loope
scas
jbe
clc
out
mov
push
xor
das
call
sub
cmc
inc
or
fistps
outsb
cmove
xchg
or
adc
add
addr16
flds
cltd
ljmp
or
or
push
test
es
jbe
fs
sbb
inc
out
inc
pop
movsb
clc
test
ja
sub
loope
rorl
mov
inc
int
push
rorl
push
pop
insl
dec
pop
sub
aaa
mov
inc
adc
xor
imul
or
mov
inc
push
push
mov
ja
movsb
adc
aad
pushf
push
out
mov
mov
pop
mov
and
mov
inc
lock
add
mov
fdiv
inc
jnp
adc
insl
pop
je
jo
push
lea
ss
test
bsf
pop
mov
mov
mov
sbbl
loopne
sbb
mov
sub
mov
mov
jo
hlt
sbb
push
cmp
or
and
and
jmp
and
movsb
push
mov
movsb
movsw
adcb
jne
jmp
push
mov
xor
jg
xor
xchg
mov
sbb
mov
stc
push
test
stos
jecxz
icebp
xchg
add
into
rcr
outsl
call
pop
adc
xor
sbb
scas
pop
push
cmpsb
jge
mov
or
push
cmc
in
sub
mov
flds
jo
outsl
inc
and
and
mov
mov
rolb
test
push
js
adc
out
aaa
int
sub
dec
push
sti
flds
xor
pushf
enter
jg
dec
mov
gs
mov
mov
xchg
mov
xchg
aas
xlat
mov
cmpsb
shlb
adc
sarb
push
rorl
cmp
addb
inc
xchg
test
in
mov
mov
pop
xchg
cmpsb
cmpsl
mov
in
test
daa
pop
sbb
pop
out
addr16
pusha
sar
jge
in
adc
out
stos
push
xchg
pop
mov
cmp
mov
frndint
gs
fcomps
fmull
fwait
xor
jo
adc
popf
push
xchg
push
jecxz
mov
insl
nop
xor
lods
gs
lcall
xchg
scas
mov
cmc
aam
pop
inc
sbb
xchg
dec
inc
jo
sub
test
xor
jecxz
loopne
xchg
lea
lret
js
shrb
mov
xchg
pop
rolb
jno
int3
je
add
push
es
nop
and
stos
in
cwtl
divl
fisubl
test
je
lods
pop
fmuls
into
popf
cmc
loope
inc
cld
mov
loope
pop
sub
mov
shrl
cmp
mov
into
push
xchg
mov
retw
jp
and
aas
mov
outsl
sbb
dec
cmp
mov
mov
and
and
sbb
stos
xchg
and
imul
shl
add
push
stc
pop
dec
add
mov
rcrl
in
inc
andb
mov
adc
movsl
pop
cmp
jecxz
lret
mov
out
mov
ss
lock
inc
jb
sbb
xor
andb
popa
jae
push
sbb
stos
dec
insl
push
in
sbb
arpl
loopne
push
add
xchg
push
hlt
aas
adc
inc
adc
inc
push
scas
lret
fistl
sub
ja
cmp
movsb
movsb
inc
mov
ds
xchg
scas
test
pop
fcompl
cmpsb
cs
bound
insb
xor
dec
pop
lret
lret
mov
mov
jnp
jmp
and
jne
push
mov
and
push
xorb
nop
iret
clc
jns
mov
sbb
mov
mov
dec
mov
inc
mov
test
dec
in
and
inc
mov
push
mov
and
xor
imul
pop
mov
sub
and
dec
xchg
cmpsl
bound
sub
sti
inc
xchg
mov
sbb
in
mov
xchg
jmp
nopl
movsb
mov
mov
or
and
xchg
sbb
ret
xlat
pop
in
aam
pop
mov
mov
add
fistl
or
sti
ds
cmp
ljmp
xchg
stos
jl
inc
sub
int3
scas
jl
and
iret
or
add
loop
push
out
sbb
popf
fcomp
jp
lods
dec
xchg
rcrl
inc
xor
insl
inc
sub
js
pop
push
pop
jbe
insl
ret
cli
sub
mov
jns
outsb
mov
loope
inc
lock
rol
dec
sbb
pushf
js
jbe
inc
mov
mov
fidivs
and
inc
add
jle
jg
adc
push
and
pop
ret
and
add
pop
jbe
push
je
mov
sahf
lea
dec
jns
jl
out
jbe
mov
insb
dec
ds
pop
cmp
pop
mov
pop
or
and
jecxz
scas
pusha
in
add
xor
dec
pop
loopne
outsl
lret
int
pop
ss
iret
sub
xor
imul
aas
in
aad
movsl
and
sub
aam
adc
xor
inc
sub
cli
jge
inc
xor
mov
cmp
lret
popa
xchg
aad
sti
adc
test
fisttpll
mov
hlt
mov
dec
inc
das
or
add
cmp
pop
adc
outsl
pop
adc
sbb
lods
mov
nop
popf
js
loop
lds
mov
gs
xlat
adc
jo
dec
insl
pop
or
lahf
ja
dec
jmp
stos
cltd
cmpsb
movsb
xchg
xchg
and
add
sar
cmp
movsl
je
imul
jns
cmp
sub
out
push
jge
je
lahf
push
scas
test
mov
sti
rcrb
lret
scas
and
sub
inc
pusha
andb
jae
inc
out
adc
and
test
mov
sub
scas
xor
std
repnz
sbbl
adc
pop
ja
cmp
push
lahf
adc
sub
mov
dec
testb
sub
lea
inc
add
xchg
pop
mov
mov
adc
stos
pop
mov
pusha
fmuls
jno
cld
mov
cmc
dec
mov
mov
sub
inc
and
push
pop
cmp
cmp
push
push
dec
lea
les
testb
xlat
adc
jne
inc
in
outsl
fistpl
push
int
scas
sahf
pop
loop
pop
pusha
inc
outsl
ds
mov
rorb
jns
dec
inc
xchg
sbb
and
mov
lock
sbb
in
pusha
cmc
aaa
sub
adc
lock
sub
subb
cwtl
mov
mov
clc
push
les
ljmp
das
negl
mov
popa
popf
popa
inc
leave
sahf
cli
mov
ds
push
cld
xchg
scas
sbbl
ljmp
mov
into
jnp
ret
xchg
mov
call
push
mov
mov
inc
push
add
jno
jo
cld
hlt
test
or
lcall
test
add
ficomps
ret
add
pop
xor
aas
test
fadd
test
ret
fisubs
pop
fdivs
pop
jmp
pop
scas
mov
pop
imul
cmp
mov
jae
shlb
xchg
repnz
adc
push
pop
jmp
mov
sub
gs
mov
mov
mov
cs
lods
jp
outsb
inc
mov
hlt
mov
mov
imul
mov
nop
ret
push
pop
lcall
jge
sub
mov
inc
jge
insl
ret
loopne
sahf
pop
pop
inc
lret
mov
outsl
mov
cld
ljmp
xor
fwait
jge
outsb
and
or
lods
mov
inc
sub
push
or
add
out
or
inc
inc
push
popl
lret
jb
js
addb
mov
fcmovnbe
leave
cmp
mov
aaa
or
addr16
shll
fimuls
push
xchg
and
stos
mov
cwtl
xchg
data16
sahf
mov
int3
popf
mov
scas
dec
xchg
es
aas
pop
insb
jle
jle
loop
ret
push
ljmp
movsb
jne
jle
inc
cmpsb
movsl
cmp
ja
repz
fwait
dec
mov
push
movsl
jmp
sbb
jp
mov
aad
out
inc
mov
jle
cli
in
mov
or
rolb
mov
sub
fidivrl
pop
xchg
mov
cmp
into
scas
xchg
cwtl
ljmp
shrl
insl
sub
mov
pop
lods
arpl
call
dec
pusha
sub
and
adc
sbb
lods
push
fwait
stc
std
test
sub
scas
mov
mov
ss
movsb
sub
ret
jnp
add
push
shlb
loop
in
add
jns
mov
aad
and
xor
lret
movsl
mov
fists
repnz
imul
repnz
mov
mov
sti
inc
int3
iret
xchg
lods
xor
mov
jnp
jne
popf
add
mov
or
sbb
pushf
imul
xlat
shll
add
pop
jecxz
cwtl
jecxz
fiaddl
jl
addr16
out
mov
lea
push
popf
dec
mov
iret
add
xchg
gs
add
lock
sti
mov
jo
and
lock
mov
push
xchg
pop
cmp
std
imul
sub
rcll
and
xor
scas
and
addr16
xor
add
movsb
or
fwait
out
cs
or
in
xchg
pop
hlt
push
pop
hlt
clc
or
xchg
push
xor
xor
mov
jecxz
mov
adc
sbb
in
push
out
ljmp
pop
mov
xchg
cmc
sbb
mov
sbb
bound
mov
mov
and
setge
pop
jg
mov
mov
in
and
or
das
push
pusha
inc
inc
movsl
pop
mov
call
inc
or
inc
adc
inc
out
lods
mov
shr
cmp
rcl
or
xchg
test
jmp
or
stos
or
sbb
jns
shlb
or
out
sbb
sbb
lcall
pop
sti
in
mov
subb
push
jg
adc
mov
pop
adc
mov
insb
dec
jns
loope
loopne
mov
and
daa
adc
testb
and
add
fdivs
sar
repnz
xchg
out
pop
dec
xchg
push
cltd
repz
js
jno
adc
ljmp
int3
dec
sbb
loope
je
mov
rcrl
out
fdivl
adc
xor
icebp
hlt
lods
sub
out
mov
pop
aad
jbe
and
xor
call
aam
xchg
popa
mov
insl
loope
add
and
and
xchg
xor
incb
clc
mov
and
xor
jbe
jno
dec
push
in
fisubs
movsl
imul
or
cmpsb
jne
and
mov
outsb
pop
dec
testl
pop
add
cmp
movsl
ret
push
sub
movb
popf
ljmp
mov
aaa
subb
out
test
addr16
mov
outsb
cwtl
lret
mov
push
xlat
dec
sub
xchg
sub
daa
xor
jbe
dec
adc
ds
add
push
icebp
xchg
mov
clc
sub
shl
mov
addr16
je
pop
cmp
ficompl
popa
push
imul
lea
lods
clc
xchg
lods
jno
roll
es
add
pop
test
roll
rcl
jae
push
or
aaa
addr16
and
fsubrs
add
loopne
inc
pop
icebp
out
push
fidivl
mov
xchg
fnstenv
js
sub
push
push
in
mov
xor
cmpsl
imul
xchg
fisubrl
sbb
push
std
dec
das
xchg
mov
test
push
push
leave
repz
push
into
xchg
and
mov
orb
adc
xor
icebp
outsl
cmp
out
pushl
int
int3
or
mov
lahf
mov
mov
loop
fdivrp
das
push
lcall
cmp
mov
addr16
mov
mov
adc
pop
pop
outsl
mov
std
adc
sbb
sub
inc
sub
lcall
mov
push
gs
xor
xchg
idivl
into
je
sub
mov
mov
adcl
in
sar
cmp
xor
and
imul
sub
mov
inc
into
sahf
sub
dec
aaa
out
insb
sub
call
mov
xor
loopne
mov
pop
mov
jae
divl
dec
and
aaa
adc
das
mov
mov
mov
or
mov
sbb
cmp
or
xor
notb
add
xlat
mov
shll
add
adc
xchg
mov
xchg
bound
nop
arpl
loop
pop
popf
popa
jmp
push
ja
jns
insl
pusha
popa
cmp
add
aad
sbb
or
ss
mov
test
rorl
mov
lcall
pop
jnp
sbb
adc
pop
in
cmp
dec
xchg
jmp
rcll
std
pop
xchg
outsb
and
mov
lods
pop
xor
arpl
lds
frstor
popl
pop
adc
sahf
cmpb
das
movsl
xor
dec
mov
mov
mov
lret
test
fldcw
int3
fadds
flds
mov
out
rclb
arpl
mov
outsb
fsubs
jmp
sbb
jo
icebp
inc
notl
call
add
inc
mov
cmp
sbb
int3
jge
cmp
shl
add
jl
fsub
jae
pop
jae
fcomps
pop
add
ret
xchg
int
mov
lahf
data16
xchg
jne
mov
push
rcrl
aaa
sub
and
movntq
out
hlt
sub
lret
dec
mov
push
test
push
cmp
lods
out
or
mov
mov
mov
xchg
int3
loope
sbb
dec
cmp
mov
sub
out
sbb
test
enter
in
lods
adc
xor
xchg
add
pop
inc
add
lock
rol
or
xor
xchg
adc
outsb
ret
mov
enter
adc
adc
xor
stc
adc
mov
arpl
shll
out
pop
popf
adc
cmpb
inc
test
roll
mov
dec
lds
sub
dec
jg
rorl
jno
jg
add
bound
adc
and
adc
sbb
xor
mov
sbb
add
pop
adc
mov
and
xor
sbb
mov
push
insl
jmp
es
mov
das
adc
push
cmpsl
out
cmpsl
mov
mov
aaa
ret
fimull
stos
add
fwait
or
mov
jb
and
pop
cmp
jbe
pop
daa
mov
xor
inc
and
pop
pop
jg
xor
add
push
jne
push
xor
loope
jp
into
rcl
das
sub
fdiv
push
dec
shll
dec
jmp
fwait
iret
push
cwtl
inc
jns
je
mov
in
inc
push
sub
mov
fwait
movsb
inc
and
scas
inc
xor
sbb
fsts
sbb
push
xor
mov
pop
es
xchg
pushf
pushf
or
push
xor
xchg
jb
push
bound
es
mov
mov
dec
sbb
pushaw
push
outsb
mov
xchg
pop
cmp
fimuls
popf
push
mov
mov
shrb
push
movb
psubusb
hlt
fidivs
adcl
sub
fldl
test
nop
mov
fsubl
out
add
inc
pop
sub
cmp
push
in
dec
ljmp
dec
cmp
jnp
adc
push
or
negb
inc
adcl
sub
addr16
aaa
push
ja
mov
cmpsl
cmp
cmpsl
lods
mov
xlat
mov
and
ljmp
call
les
aas
aad
jne
shll
adc
inc
inc
pop
jmp
mov
add
es
jmp
iret
pop
sahf
push
cmp
in
push
jno
mul
push
xchg
adcb
sahf
iret
xchg
aad
fdivs
insb
pushf
inc
push
fnsave
cmp
sub
pop
add
mov
ret
or
mov
je
ds
out
cmc
mov
mov
lahf
mov
pop
mull
sbb
bnd
push
sarl
loopne
test
es
sbb
push
scas
cs
sub
mov
sti
fsubrl
sbb
sbb
xor
lret
outsl
jge
mov
xchg
out
and
lods
dec
movsb
jo
push
std
clc
adc
test
add
test
js
imul
insl
out
or
lret
xlat
dec
dec
rcrl
mov
pop
movsb
xchg
ljmp
in
lock
mov
or
add
push
push
jl
sbb
stos
inc
mov
adc
dec
call
sub
cwtl
adc
dec
xchg
rorb
das
mov
nop
cmpsb
mov
cld
push
iret
push
push
xchg
cmp
test
popa
pop
sahf
lods
add
dec
aaa
mov
out
rcrb
nop
inc
test
cmp
ja
inc
jb
aam
fadd
mov
pop
adc
mov
cli
push
sbb
pop
push
push
push
sbb
leave
inc
mov
mov
push
mov
mov
pop
sub
cmp
shrl
mov
stc
outsb
adc
sbb
fsubp
aaa
cmpsb
cltd
xor
mov
jmp
sbb
cli
push
push
push
lcall
sub
cmpsl
addr16
or
sub
je
sub
jp
xchg
mov
int3
scas
mov
dec
test
sub
ret
xchg
fldenv
mov
mov
gs
ret
mov
mov
mov
inc
xchg
sub
mov
sub
xchg
cltd
mov
or
adc
xchg
dec
cmp
mov
lods
jnp
lret
push
push
jecxz
xchg
jecxz
push
sub
mov
inc
xchg
fsubrs
dec
ret
pop
ds
push
test
cmp
fcmovb
std
shll
stos
jne
cmpb
pop
lods
or
aam
xor
push
lcall
sbb
mov
repnz
fcmovnbe
xchg
gs
adc
or
pop
jg
cwtl
pusha
mov
xchg
jnp
or
mov
or
into
and
and
pop
push
rorl
inc
dec
cmp
insb
jmp
shll
xchg
shll
icebp
xorb
jne
popf
loopne
stc
cmp
icebp
loopne
testl
stos
insl
push
sti
xor
rclb
jp
mov
mov
lock
sub
les
stc
push
xor
push
fwait
inc
cwtl
iret
sub
inc
dec
stos
add
pop
fs
popl
lcall
push
push
mov
aam
sti
jmp
jmp
stos
cmpsb
pop
lcall
add
movsl
cmp
cmp
jo
sub
add
cmpsb
popf
jb
test
lcall
push
fldenv
adc
jge
xor
iret
push
dec
call
mov
fidivrl
or
pop
adc
data16
in
cmpsb
sahf
rolb
and
ret
lcall
clc
test
lds
inc
push
addl
sub
adc
cmp
mov
add
dec
orl
mov
sub
cltd
pop
pop
gs
fimuls
cmp
ret
mov
xchg
mov
je
aaa
inc
into
notb
in
repnz
imul
fucom
int3
ljmp
jg
sub
xor
stos
jbe
and
sbb
mov
ja
push
popf
shlb
and
fwait
adc
jge
jl
test
incb
mov
rcl
add
movsl
cmp
fs
rep
cmp
sarl
push
xchg
lds
sbb
insl
icebp
sti
jmp
sbb
push
and
jo
mov
push
mov
es
push
mov
push
pop
out
fldcw
xchg
mov
mov
or
pop
xor
shll
ret
loopne
jmp
sbb
ficompl
and
mov
jb
sub
pop
cmp
loopne
mov
jbe
mov
sub
push
jae
nop
fnstcw
adc
sbb
xor
cld
mov
aam
mov
mov
sbb
popa
or
fidivs
inc
mov
adc
jecxz
push
adc
rol
ja
orb
sbb
mov
xchg
mov
pop
test
and
push
sub
or
add
into
sar
cmp
pushf
jb
mov
push
pop
xchg
faddl
movsl
xchg
mov
test
pop
lods
sbb
xor
lahf
cmp
fisubl
repnz
mov
adc
outsl
xor
insb
add
xchg
pop
mov
movsb
and
addr16
inc
test
iret
xchg
lods
push
cmp
pop
add
mov
xlat
mov
cmc
es
add
xchg
sub
rcrl
rcrl
cmc
out
aad
pusha
mov
movsl
jns
pop
roll
aam
add
addl
mov
insb
or
add
lock
lahf
mov
fidivrs
jmp
cwtl
push
inc
inc
into
imul
and
sub
in
scas
mov
test
fsubrl
inc
ljmp
pop
push
lds
cmp
xchg
aaa
mov
jae
scas
ds
lea
lods
fiaddl
lods
push
sub
mov
pushf
scas
mov
cmp
test
cmpsb
call
nop
mov
out
add
sarl
lahf
mov
jnp
in
das
pop
xor
jnp
jbe
mov
pop
jb
cmp
lret
outsb
pusha
pop
cmp
and
or
pop
xor
pop
cmp
in
and
daa
xchg
pop
sbb
leave
mov
aas
mov
mov
or
daa
inc
adc
loopne
loop
mov
push
call
testb
popf
leave
push
push
ret
movsb
pop
mov
stos
mov
cmp
stc
jecxz
shrb
bound
inc
mov
lcall
jne
sbbb
or
loopne
lods
popl
xchg
dec
in
iret
pop
push
pop
lea
stos
mov
mov
dec
push
js
fdiv
jno
lds
jb
ret
and
inc
scas
js
fcompl
dec
mov
pop
aaa
add
adc
push
and
push
int
sbb
and
or
shll
mov
incl
repnz
adc
jp,pn
lahf
movsl
js
add
and
insl
jb
das
nop
cmp
ss
pop
aad
je
stos
and
and
rcrl
mov
sbb
in
sub
inc
call
and
jecxz
jb
jmp
cmp
inc
out
popa
in
inc
cmpsl
sbb
cli
stos
sub
xchg
in
push
jle
add
stos
icebp
sbbl
clc
jne
dec
xchg
adc
sbb
out
std
sbb
cmp
pop
sub
and
leave
pop
shrl
inc
popa
mov
fcomps
adc
fcompl
xchg
fisubl
fdivr
out
mov
stos
ret
cmp
pop
icebp
and
mov
pop
mov
icebp
and
addr16
lcall
adc
shlb
dec
inc
mov
das
and
les
inc
ja
in
adc
sub
sbb
mov
loopne
mov
mov
push
push
pop
push
sub
aam
push
pop
sub
in
xchg
pop
aam
rol
pop
fwait
sub
push
leave
lods
jmp
cmp
test
mov
and
popa
dec
in
js
jecxz
inc
mov
aaa
adc
ljmp
push
fwait
and
cmp
gs
stos
pop
xchg
mov
sub
jle
pop
jmp
push
enter
fstl
mov
adc
push
addr16
aad
inc
mov
loop
pushf
aas
sbb
xchg
andb
pop
mov
xchg
inc
and
xor
sarl
lods
mov
in
outsb
adc
pop
into
rcrb
fists
adc
sub
ficompl
test
int3
lcall
lret
cmp
in
das
adc
subl
cmpb
out
ret
shlb
aad
in
aam
test
or
rcrb
push
std
jno
inc
shlb
mov
lahf
pop
call
mov
cmp
insl
frstor
stos
fisubs
pop
dec
mov
scas
pop
mov
mov
push
out
pushf
popa
insl
aam
ret
scas
jb
test
or
incb
loopne
jne
es
jmp
sahf
addr16
data16
mull
xchg
std
adc
jo
and
cltd
mov
sahf
pop
lret
push
in
in
pop
mov
and
mov
xor
pop
add
es
dec
filds
lods
in
pop
in
mov
punpckldq
mov
ret
loop
xlat
jecxz
sbb
mov
test
out
mov
mov
stc
cld
movsl
movsb
mov
mov
or
lret
cmpb
popf
push
lea
or
mov
xchg
push
xor
orb
push
sub
mov
enter
daa
bound
arpl
bound
andl
aas
lahf
inc
into
ficoms
xchg
add
ficoms
and
mov
stc
ja
dec
or
push
inc
sbb
aaa
notb
int3
adc
sbb
repnz
fnstenv
cld
adc
not
mov
inc
int
repnz
test
jge
jo
xchg
push
jl
adc
dec
es
and
fdivrs
and
adc
xorl
repnz
or
sbb
cld
dec
fwait
andl
xchg
xchg
addr16
jb
mov
outsl
sbb
jno
cwtl
push
or
jmp
xlat
and
cmp
jp
divl
push
push
mov
sub
jp
daa
in
adc
lods
pop
pushf
psrad
mov
cmc
mov
dec
xchg
sub
push
out
dec
test
in
fisubrs
cmp
xchg
lret
js
xchg
sbb
pop
arpl
flds
jae
jl
dec
rcrl
rolb
and
shlb
sub
add
cmp
dec
testb
xor
scas
dec
fcmove
sti
cld
mov
and
imul
icebp
sub
fsubrs
ja
andb
mov
sub
mov
out
fs
dec
inc
push
jne
xor
mov
pop
mov
mov
pop
enter
dec
xor
sbb
popa
leave
xchg
aam
jp
fwait
in
aas
xchg
movl
lret
outsb
sbb
in
lea
mov
loopne
jno
mov
hlt
pop
mov
test
mov
jbe
mov
jo
scas
cmpsb
movsw
addr16
mov
xchg
push
inc
imul
cmc
and
cmp
jo
mov
add
adc
cmp
jecxz
xor
dec
mov
xchg
sub
test
jmp
mull
mov
or
aam
and
sub
xchg
xorl
xlat
xor
notl
xor
dec
xchg
pop
into
sub
jne
popa
dec
mov
incl
arpl
add
dec
out
pop
push
mov
push
testl
push
push
and
inc
mov
jmp
mov
enter
xchg
sbb
xchg
enter
push
scas
insl
and
inc
adc
lcall
out
aam
add
jmp
aaa
sbb
rcrb
add
add
shl
ret
mov
or
cli
jbe
xlat
call
shll
pop
dec
xchg
add
and
xor
mov
xchg
movl
pusha
push
mov
js
mov
add
call
pop
jge
push
cmp
adc
fcmovne
mov
xor
dec
test
imul
jg
inc
fmul
aaa
mov
inc
and
addr16
mov
cmp
rol
mov
sbb
inc
mov
adc
add
shr
or
hlt
dec
iret
popa
inc
das
ljmp
std
div
xchg
pop
mov
cmp
fdivl
inc
dec
cld
jno
cmp
in
mov
pop
adc
pop
adc
sub
jbe
lret
mov
jno
hlt
push
rorl
or
fisttpl
adc
data16
out
sub
test
popf
jmp
test
out
pmaddwd
sarb
or
sbb
and
push
fstpl
inc
js
bnd
mov
fmull
rcrb
xchg
in
push
push
lret
xchg
inc
jno
addr16
stos
dec
xchg
jmp
jne
in
out
lods
adc
mov
adc
xchg
orb
outsb
aam
aad
rdtsc
mov
int3
out
sti
xor
iret
ja
sbb
sub
sub
sub
jmp
sub
fdivp
scas
dec
pop
inc
je
gs
pop
dec
xchg
out
cld
out
push
push
mov
stos
aam
adc
mov
jle
xor
mov
mov
lahf
dec
mov
add
sbb
popf
xchg
gs
inc
aam
xor
push
xchg
outsl
dec
inc
cmp
gs
hlt
cmpsb
dec
repnz
dec
rorb
rcr
loope
cmp
adc
lahf
scas
mov
repnz
pop
dec
popf
lahf
or
aas
xchg
je
sub
loope
or
jno,pn
into
and
push
outsb
test
cmp
cmp
faddl
rol
pop
sarl
or
cli
add
and
in
sbb
scas
inc
push
fcoms
scas
sbb
in
ljmp
push
push
sub
add
sahf
inc
pop
xchg
enter
dec
fsubp
lds
push
pop
pop
out
aaa
xchg
xchg
aam
push
sub
pop
shrl
fsubp
or
negb
cmp
scas
adc
jns
pop
aam
mov
pop
xlat
repnz
jbe
sub
shlb
out
dec
xor
jecxz
add
andb
xchg
adc
fsubs
stos
jl
mov
jp
add
popf
bound
inc
loop
lock
icebp
inc
xor
mov
sbb
mov
push
subl
bswap
xor
ds
outsl
ficomps
mov
or
adc
add
add
jecxz
and
hlt
fsubrl
cli
cmp
push
push
lcall
dec
dec
jnp
pavgb
and
push
push
hlt
icebp
xor
pop
loopne
outsl
fmull
sub
sbb
jo
mov
outsb
lds
mov
push
je
jp
jecxz
and
ja
xchg
xlat
sub
mov
xor
adc
and
ss
cmc
cld
nop
and
sti
idivb
push
jns
movsl
imul
out
mov
pop
mov
push
mov
cld
xor
ret
cmp
lcall
fstl
fimull
adc
xorl
jne
rorl
out
int
cwtl
and
cmp
xchg
cmp
hlt
mov
sar
test
push
xchg
xchg
mov
push
or
in
adc
iret
bound
push
addr16
xchg
lods
push
sub
pop
ss
mov
cld
sbb
push
cmpsl
sub
ljmp
add
push
dec
cmp
adc
js
imul
pop
or
adc
jl
mov
mov
mov
xchg
mov
pop
xor
sahf
cmp
mov
lea
loopne
pop
mov
dec
lods
mov
sub
data16
cmpsl
mov
rcll
pop
lret
inc
loop
sbb
add
pop
xor
pop
xor
retw
inc
pop
jle
inc
sub
subl
das
mov
das
bound
push
add
imul
in
sbb
dec
mov
es
and
jae
sbb
andl
mov
movsb
xchg
stos
call
pop
testb
lock
cmp
js
dec
dec
daa
mov
sub
movl
dec
imul
and
sti
imul
sub
outsl
fs
cmp
jo
add
sub
mov
popa
and
sub
mov
xchg
sbb
call
leave
and
add
test
adc
push
pop
lret
or
inc
sub
and
data16
push
pop
cmp
push
addr16
mov
loop
out
jecxz
fucomip
pop
rcr
xor
int
dec
sub
jmp
mov
scas
adc
ljmp
adc
adc
xchg
imul
imul
mov
and
sti
subb
aam
jae
lahf
xor
sbb
js
xor
enter
mov
dec
ss
or
inc
xchg
sbb
inc
pusha
dec
movaps
inc
cmp
sbbl
pop
inc
xchg
xor
adc
clc
repnz
lods
jl
xor
mov
test
xchg
sbb
adc
xor
out
addl
add
or
xchg
jmp
mov
imul
push
cli
sub
mov
int3
cmp
lahf
test
mov
inc
jb
fwait
pop
cmp
lods
push
into
out
inc
scas
adc
fwait
jmp
shlb
sub
ficomps
lea
jno
out
cmpsb
mov
les
inc
pop
fmuls
jge
test
nop
inc
push
nop
sub
and
repz
sub
dec
xchg
stos
add
dec
cld
sub
mov
mov
or
arpl
fidivl
pop
sbb
add
dec
lret
add
mov
and
std
push
sti
sub
and
dec
mov
cltd
dec
jecxz
mov
xor
movsb
lea
repz
popa
lcall
outsb
xchg
aam
jge
ret
and
add
pop
sub
outsl
mov
std
lret
inc
or
fs
mov
xchg
and
lds
and
mov
hlt
mov
mov
je
sub
add
push
add
lds
out
mov
mov
inc
sub
sbb
push
nop
ljmp
aad
jae
cmp
icebp
dec
sbb
xchg
add
inc
loopne
jae
out
xor
sbbb
mov
dec
int3
xor
xchg
xor
adc
mov
ret
je
pushf
ffree
lret
in
testb
insb
adc
jo
inc
sbb
rcl
nop
sub
pusha
mov
js
xchg
aas
lods
jle
ja
iret
xor
xchg
mov
mov
jl
jl
sub
std
ja
aaa
push
imulb
fwait
imul
rorl
adcb
inc
xchg
cltd
iret
test
das
pop
lret
sub
mov
les
imul
add
sub
sbb
lods
lret
test
fadds
repz
mov
pop
aas
nop
pop
sub
loopne
push
ret
lods
xchg
inc
lahf
dec
add
jne
mov
es
jge
vmovddup
insb
sub
dec
pop
jl
and
fwait
and
and
enter
shll
mov
enter
lea
mov
sub
xor
cmc
rcl
out
sahf
cmc
push
lret
ss
xchg
sti
insb
jp
xchg
dec
sub
arpl
push
mov
outsb
jbe
loop
dec
mov
imul
call
popf
pop
dec
out
lods
jge
or
adc
in
mov
jg
clc
outsb
dec
test
jmp
mov
ljmp
cmpsb
push
ljmp
and
out
call
cmp
jns
insl
jecxz
mov
repz
in
jle
or
push
repz
pop
stc
sbb
push
hlt
hlt
inc
hlt
sub
mov
sbbb
es
mov
in
psllq
movntq
cmp
mov
inc
sub
pop
xchg
mov
xor
fldl
sahf
hlt
adc
stos
mov
sbb
inc
sub
enter
jnp
lahf
mov
push
jb
and
sub
movsl
lods
sbb
out
cld
sarl
mov
in
mov
add
sbb
cmp
xchg
negb
enter
add
push
xchg
es
pop
mov
add
ss
add
mov
push
fiaddl
test
aam
and
jle
sbb
push
xlat
xchg
call
addb
mov
gs
and
rcll
or
in
mov
pop
pusha
cmp
fstpt
test
jg
jbe
cmc
out
in
insl
jmp
sub
push
in
sarb
imul
mov
int
sub
xchg
cmp
data16
movsl
pcmpgtw
inc
pop
and
insl
xor
xchg
aad
sbb
cmpsl
add
push
mov
scas
jecxz
or
js
insb
cmp
sahf
pop
fistps
xlat
jnp
add
mov
jl
in
inc
scas
aad
pusha
adcb
das
scas
inc
push
imull
aam
jle
je
scas
mov
add
adc
cmp
ljmp
and
lcall
add
adc
mov
cli
pop
jne
test
adc
jmp
and
inc
jo
jle
lahf
clc
cli
jae
jg
fimull
pop
xchg
and
lcall
dec
xchg
mov
imul
inc
jb
cltd
lds
jg
popl
cld
and
sub
mov
movswl
push
aas
outsb
pop
loope
jns
outsb
sub
add
add
dec
sahf
dec
or
filds
cmp
mov
push
cmp
xchg
imul
shr
in
or
xor
xchg
into
jecxz
les
fcomip
fmull
xchg
shlb
inc
mov
shlb
out
jle
cli
inc
xor
ja
sub
je
lret
fimuls
fwait
lods
adc
xor
push
sbb
jns
es
or
pop
and
mov
xlat
dec
hlt
rcl
xchg
mov
aad
popa
mov
dec
jge
out
push
sbb
pop
je
mov
pop
arpl
pop
out
lock
or
sbb
orl
sub
mov
dec
test
dec
repnz
shll
out
or
insb
lods
xor
add
lret
add
div
fcomp
ljmp
rorb
push
fs
gs
inc
stc
inc
decb
sbb
jae
arpl
out
test
adc
lahf
hlt
icebp
in
or
call
lods
xlat
inc
mov
fwait
pop
repnz
pop
insb
mov
arpl
das
xchg
movsl
xchg
pop
xor
push
sbb
cmp
repnz
stos
push
push
repz
mov
punpcklwd
add
push
fsubs
fistps
icebp
push
jmp
xchg
mov
jns
mov
inc
hlt
fisubl
xor
outsl
inc
and
es
sub
rclb
call
fistl
xchg
xchg
jns
cmc
mov
sub
mov
out
jecxz
fs
add
cmp
nop
and
push
pop
leave
or
lds
adc
cld
sub
out
pop
insb
mov
xor
and
and
sahf
mov
loope
xchg
jo
das
in
sub
repnz
into
inc
and
cli
push
cmp
xor
inc
mov
cmp
cmp
cmp
mov
mov
insb
int
xchg
lods
clc
je
mov
pop
aas
imul
mov
adc
hlt
inc
sub
mov
push
cmp
inc
jmp
or
or
ret
pop
dec
ljmpw
mov
mov
lods
adc
mov
bound
pop
arpl
in
sbb
call
adc
mov
loopne
jp
mov
xchg
sub
xchg
jb
jbe
cmpsb
push
sub
test
inc
ret
cld
xor
jo
xchg
mov
jno
xchg
jecxz
shll
andb
jnp
ret
addr16
cmp
fucomi
daa
pop
pop
and
mov
leave
lods
and
adc
pop
popa
mov
jo
popa
out
sub
xor
add
push
pop
push
hlt
cwtl
mov
fs
add
dec
mov
psrlq
mov
pusha
xor
mov
repz
es
mov
out
leave
ljmp
dec
jge
out
std
inc
sub
orl
lret
push
ret
push
icebp
jmp
frstor
jnp
test
insb
out
jle
push
scas
lods
push
fbstp
fimull
mov
xor
orb
std
mov
dec
mov
xor
xchg
cltd
in
jecxz
sub
imul
inc
mov
xchg
push
notb
jmp
xor
icebp
mov
push
inc
dec
pop
cmp
nop
jge
cmp
insl
xor
sub
shll
aaa
sarb
out
popf
sbb
test
dec
pop
mov
inc
xchg
cmp
inc
or
push
fmuls
pop
inc
stos
repz
insb
mov
mov
arpl
loopne
xchg
pop
shll
or
stos
and
jae
push
jbe
xor
lods
mov
cltd
push
fidivl
test
shl
push
ds
sub
xchg
shrl
into
test
sbbl
ja,pn
push
sub
add
sbb
aas
add
cltd
stc
mov
dec
outsl
xchg
add
into
jns
cmc
inc
pop
test
adc
enter
mov
ret
pop
or
cmpsb
jne
vsqrtpd
gs
cmpsb
jne
mov
pop
mov
xlat
adc
adc
inc
xor
adc
cmp
popa
adc
js
and
pop
mov
inc
das
in
sbb
aad
jo
cmpsl
mov
push
mov
test
pop
arpl
sbb
jp
in
xchg
lock
outsl
out
jb
add
rclb
and
or
dec
sti
popf
popa
testb
jl
negl
bound
dec
into
nop
repnz
inc
adcb
adc
push
ja
arpl
rorl
mov
scas
jo
out
pop
pop
mov
test
dec
test
add
clc
fwait
push
xchg
lahf
rorb
pop
jns
adc
leave
js
xor
rorl
in
jnp
ja
insl
call
out
add
adcl
sub
cmp
fcompl
push
jge
jnp
fsubrs
fistl
cmp
in
jo
mov
mov
add
lahf
cltd
xchg
and
dec
add
stos
test
lods
mov
mov
sub
inc
dec
outsw
jbe
arpl
or
rolb
cli
mov
fcmovnu
sti
aaa
mov
jp
add
jg
or
xor
jbe
xor
xor
cmpsb
mov
push
adc
dec
aam
adc
fistpll
divb
or
fidivrl
scas
stc
cld
xchg
xchg
xor
mov
dec
pop
add
lret
aam
and
push
psraw
cmp
inc
add
mov
cwtl
jge
mov
andl
movsl
ss
iret
xor
inc
pop
sub
cmp
lods
jecxz
enter
add
aad
xlat
je
fwait
dec
in
popf
shlb
imul
ss
fistpll
push
test
insl
fcmovnbe
xchg
cmp
int3
dec
sub
in
or
jo
es
adc
push
and
int3
shr
xchg
dec
shr
dec
out
pop
icebp
jbe
test
les
mov
rcl
test
push
push
in
mov
sub
test
sarb
repz
fwait
push
out
movsb
push
fwait
lahf
pusha
add
loope
push
fists
jne
cmp
dec
cmpsl
sub
sbb
fs
cs
cmp
pop
inc
jae
call
add
pop
hlt
add
dec
loop
loope
xlat
flds
dec
test
inc
lock
int
xchg
arpl
test
adcl
and
scas
inc
sbb
xor
dec
xchg
bound
pop
mov
pop
lahf
push
cmpsl
push
xchg
push
sbb
stos
and
xchg
movsb
leave
dec
push
shll
ljmp
pop
add
cs
cmp
sbb
push
dec
mov
gs
shlb
cltd
sarb
ja
adc
ljmp
rolb
xchg
ja
mov
test
dec
cmpsl
pop
xor
int3
and
fisubl
mov
jg
cli
dec
dec
popa
xor
inc
outsl
pop
mov
cmp
dec
mov
xor
mov
sbb
pop
into
pop
arpl
mov
vmovmskps
inc
cmp
dec
or
lcall
icebp
jmp
rolb
icebp
xor
mull
cmp
test
shlb
cs
addb
shrb
mov
scas
push
lret
leave
mov
push
push
jge
int3
sbbl
add
lcall
push
cs
repz
xor
mov
add
adc
sti
nop
filds
jle
mov
and
je
leave
stos
or
cmpb
or
sub
pop
xchg
jp
pop
fbstp
call
jle
sbb
scas
stos
sub
mov
nop
test
xchg
sub
sub
testl
mov
insb
inc
push
lds
pop
fcmovnb
inc
ret
fs
popa
jne
aas
dec
and
inc
cs
mov
popa
fsubs
add
shlb
dec
jbe
jns
ja
clc
xor
jmp
out
xor
fsubrp
adc
jns
cwtl
out
or
or
xlat
mov
mov
mov
sub
sub
repz
cmp
dec
sbb
jle
shll
pop
ret
jmp
mov
inc
clc
jp
sub
pusha
imul
pop
push
ja
xchg
daa
dec
mov
jmp
mov
shrl
add
lcall
and
in
cmp
jno
ds
shll
add
pop
loopne
sub
fwait
cwtl
fisttps
std
flds
das
into
imul
lahf
outsb
cmp
sti
in
lods
movsl
cpuid
jno
icebp
mov
pop
mov
dec
push
test
imulb
inc
dec
cltd
cmpsl
dec
or
mov
cmp
mov
scas
hlt
lods
jl
jno
or
pop
lds
cltd
and
lret
imul
inc
push
ds
mov
test
xor
xor
in
in
loopne
and
leave
dec
sbb
lock
cmpsb
inc
push
dec
sbb
cmpsl
int3
cmpsl
sbb
inc
test
scas
xor
jnp
xchg
jbe
sbb
orl
rol
dec
lods
jmp
ja
lcall
lahf
dec
dec
mov
inc
or
sub
xchg
inc
pop
add
ret
aad
xchg
mov
inc
or
pusha
sbb
mov
fsave
lcall
lds
into
or
sub
cmp
push
mov
hlt
test
fs
lock
jae
addr16
mov
inc
cltd
mov
sti
iret
mov
sub
or
cmp
lods
and
cs
jg
loopne
out
test
call
jns
repz
js
icebp
xor
jns
or
inc
bound
adc
fisubs
insl
imul
pop
dec
pop
aaa
sti
mov
xchg
jge
or
fisubl
jmp
shll
adc
and
pop
xor
push
cmp
out
cmpsl
dec
ret
mov
mov
or
imul
pop
mov
xchg
outsb
imul
rcrl
jl
adc
and
lock
sub
inc
adc
mov
and
push
sub
mov
push
pop
push
rcrb
mov
in
mov
push
pop
xlat
jecxz
nop
and
das
rol
jb
in
add
sar
cmp
testl
sarb
test
test
in
sbb
stos
test
pop
push
clc
mov
push
out
push
add
rdpmc
inc
stc
gs
repnz
jae
lea
jle
mov
jmp
xchg
mov
sub
push
sub
into
js
cli
pop
mov
sub
mov
cmp
xor
lods
shll
or
popa
leave
or
inc
sub
push
mov
sbbl
js
enter
adc
stos
in
scas
int
mov
inc
dec
push
pop
arpl
cmp
adc
inc
xchg
mov
jmp
sbb
js
push
add
mov
xchg
xchg
mov
xor
stos
stc
fisubrs
fsts
adc
data16
add
scas
popf
adc
xlat
in
aas
imul
scas
dec
lret
pop
loope
add
cwtl
fisttps
out
xchg
aas
nop
fistl
or
enter
mov
sbb
shrl
inc
mov
inc
out
dec
xlat
push
add
add
lret
xor
push
push
popf
push
lahf
fwait
jge
cli
int3
std
jbe
or
xorl
or
jo
mov
scas
fldcw
test
faddl
jb
shrl
sub
push
push
repz
test
sbbl
in
jmp
mov
movsl
and
mov
cmpsl
cwtl
mov
xchg
sub
adc
mov
mov
out
sub
ja
fwait
sti
les
call
cmp
cmp
adc
adc
sbb
sub
aam
mov
mov
pop
push
cmp
aad
dec
subb
dec
out
sbb
stc
ss
dec
popf
stos
je
gs
sub
cmc
xor
or
mov
lea
movsb
mov
fldl
xor
mov
into
sti
test
fwait
enter
mov
ret
fsubs
cs
clc
frstor
lahf
addr16
scas
out
call
or
out
je
mov
lock
jb
xor
ja
jno
xor
adc
aam
push
cmp
lcall
mov
jge
mov
mov
xor
aam
hlt
mov
popa
cmpsb
xor
and
sahf
sbb
mov
jno
aas
aas
data16
pop
mov
sarl
push
mov
lret
and
rcrb
add
int
stc
mov
xor
mov
lods
xor
mov
xor
into
xchg
mov
sub
stos
movsl
push
arpl
push
ret
pushf
pop
push
mov
movsb
dec
rorl
lds
xor
dec
std
repz
fisttpl
aad
adc
mov
sbb
dec
arpl
dec
mov
xchg
out
icebp
adc
pop
or
cmp
lcall
mov
add
jns
cmp
pop
dec
jns
addr16
and
sbb
gs
in
int3
clc
popl
inc
sti
movsb
cs
jge
cmp
jae
test
push
lock
insb
or
jns
mov
adc
pop
pop
mov
inc
cld
and
xlat
xchg
mov
jp
sbb
ror
inc
mov
fwait
inc
pop
or
mov
cli
les
loopne
out
loop
nop
cli
cmc
sub
cmc
adc
aas
add
icebp
push
sbb
pop
sbb
xor
aas
cs
mov
dec
xor
mov
pop
lods
lea
sti
inc
in
mov
or
test
mov
xlat
js
cld
dec
push
xchg
ret
sbb
aaa
movsb
cmp
or
adc
lock
enter
stc
pop
or
jns
mov
cltd
cmp
cmpsb
ds
push
push
out
arpl
sbb
xor
loop
jns
jle
adc
and
lds
xchg
imull
sbb
mov
aam
mov
repnz
lea
add
popa
push
xor
mov
lcall
mov
push
shrl
mov
xchg
adc
dec
aas
pop
mov
push
shll
shlb
notb
push
pop
cmpsl
xor
test
push
or
arpl
mov
leave
mov
dec
cwtl
cmp
loop
pop
xor
cvtpi2ps
or
scas
cmp
fnstsw
and
bound
rcr
xchg
imul
mov
cmp
cmpl
inc
mov
js
scas
cld
enter
aaa
fstpl
rcr
sbb
std
lea
in
cs
aad
adc
xchg
imul
js
adcb
test
mov
adc
into
mov
dec
sbb
push
sub
cmpsb
aam
js
mov
outsl
test
mov
cld
fbld
rcrb
jne
fstp
rclb
lods
lea
enter
sbb
es
adc
fwait
dec
mov
push
push
inc
adc
jb,pt
inc
movsb
es
cmp
cltd
push
jecxz
jg
fcomip
jmp
mov
cmc
in
pop
lods
sbb
jbe
push
mov
lahf
in
sbb
xor
sahf
and
jns
dec
scas
jge
dec
out
cmc
rorl
jg
mov
mov
xchg
in
daa
lock
mov
xchg
or
and
dec
jno
daa
add
lret
out
arpl
jecxz
pop
xorb
xor
ss
cwtl
mov
fsubrs
xchg
mov
outsl
test
pop
pop
add
iret
cmp
dec
out
les
mov
nop
fimull
mov
divb
lcall
xchg
cwtl
fcompl
iret
lock
enter
jne
jp
and
ja
inc
pop
or
cmp
and
mov
incb
je
mov
neg
les
ret
es
and
inc
out
push
fwait
bound
sbb
jle
dec
out
inc
inc
scas
and
inc
push
dec
mov
xlat
icebp
pushf
inc
test
xchg
jge
test
bound
xchg
mov
dec
mov
and
popf
inc
push
mov
arpl
cmp
mov
add
mov
cmpl
in
xchg
fldl
fsub
ss
ja
ss
jno
sete
inc
dec
adc
ss
mov
pusha
or
movsl
mov
shlb
jnp
mov
mov
hlt
push
push
mov
dec
inc
movsb
leave
vmlaunch
shl
pop
push
repnz
xchg
ja
and
fstps
cmc
loope
ss
inc
mov
test
mov
call
adc
movsl
in
outsl
jg
xlat
repnz
mov
cwtl
jl
add
push
inc
xchg
repz
sub
xchg
movl
call
mov
push
pop
les
fisubs
outsl
hlt
enter
xor
xchg
sbb
jl
mov
cmp
xor
and
pusha
xchg
fwait
xor
fcoml
cmpl
daa
dec
daa
fdivr
jbe
jno
ret
sbb
or
in
cmp
mov
out
lds
sarl
lret
enter
dec
nop
pop
cwtl
adc
test
xor
mov
imul
pcmpeqw
or
xor
and
es
sbb
adc
or
or
sub
in
push
mov
imul
xor
push
xor
pop
jmp
adc
push
mov
loope
jns
pop
ret
fidivs
loope
bound
in
or
inc
push
cmp
sub
xor
jg
jo
mov
mov
enter
outsb
adc
shl
sbb
stos
repnz
ret
enter
mov
lea
sub
pop
pop
dec
adc
ljmp
and
adc
sbb
stos
xchg
adc
and
push
or
adc
pop
cmp
movsl
lret
pop
js
add
je
sub
xchg
sti
xchg
sub
shr
adc
add
insl
sbb
mov
pop
jecxz
mov
in
jecxz
loop
push
loope
rolb
stc
jle
mov
mov
fs
movsl
je
jne
scas
jae
push
push
test
out
mov
inc
out
mov
lcall
je
push
pop
fstps
dec
xchg
fst
push
imul
sub
pop
dec
call
lock
sub
pop
cli
test
pop
mov
daa
xchg
and
and
lds
repz
adc
sbb
scas
cmp
jp
jne
popa
cmp
mov
sub
in
sub
clc
xchg
cmp
adc
test
adc
mov
xchg
and
add
into
jne
icebp
rclb
xchg
out
fcmove
jb
mov
shlb
sub
mov
shl
fistpl
dec
mov
outsl
adc
inc
cwtl
xor
jp
mov
ror
inc
mov
aas
pop
push
inc
dec
repnz
cmp
jno
pop
shlb
aad
or
sub
aad
jg
ret
push
imul
ja
pop
add
std
lock
sbb
add
addr16
push
imul
jmp
das
dec
inc
pushf
xchg
in
inc
mov
or
cs
es
ret
imul
add
or
scas
insl
mov
pop
mov
stc
lret
sarb
aam
insb
iret
jb
xchg
std
je
mov
add
stos
adc
lahf
sarb
fbstp
rcrb
stc
clc
jecxz
jg
jo
adc
pop
cmp
and
test
add
decl
lods
inc
cmp
int
ljmp
mov
stc
adc
adc
and
ds
loopne
insl
popf
push
out
stc
xchg
lock
ret
test
pop
imul
nop
repnz
mov
lods
pusha
lcall
lahf
cmc
int3
xchg
notl
clc
jae
pop
ret
cmpsl
add
push
jmp
add
mov
in
and
aas
and
mov
xchg
cmp
xor
xchg
sub
xchg
xor
int
adc
fsubrs
adc
mov
rcrb
dec
add
outsl
mov
cmpsl
and
shlb
mov
ja
adc
mov
fbstp
sub
push
orps
fsubs
mov
inc
outsb
inc
aad
cltd
adc
inc
xchg
leave
in
mov
inc
out
mov
mov
sub
or
jne
in
push
xor
rol
pop
sbb
inc
in
xchg
lods
sbb
pusha
insl
mov
xor
nop
xchg
pop
lret
push
in
mov
cmp
xchg
lds
sub
inc
mov
jle
popl
gs
xor
scas
xchg
push
adc
add
into
jge
lock
xor
inc
imulb
and
cmp
icebp
jbe
ja
sub
pop
jnp
js
lcall
mov
jl
out
in
sbb
scas
xor
add
xor
sub
cld
sub
dec
mov
inc
mov
pusha
inc
cmpb
mov
sub
psllw
div
push
mov
inc
in
in
pop
int
add
mov
fwait
mov
int
stos
mov
or
push
test
mov
mov
cltd
xor
jnp
loopne
xlat
sbbb
xor
pop
jg
push
dec
push
pop
lahf
adc
cmp
push
jb
xchg
pop
xor
push
push
es
clc
inc
out
add
cmp
sub
ljmp
leave
dec
push
mov
orl
fdivl
adc
negb
adc
mov
sub
repz
pop
clc
mov
cmp
rclb
xchg
add
dec
and
mov
xor
jecxz
iret
dec
push
inc
mov
jecxz
idivb
push
xchg
popf
push
xchg
push
ds
loop
fs
test
push
mov
or
sub
popa
sub
sahf
nop
lret
mov
pop
outsl
hlt
mov
cwtl
insb
dec
cmpb
and
test
mov
cmpsb
out
div
fidivs
lock
ja
mov
xor
cmp
add
shlb
push
jmp
xor
fsubs
icebp
dec
jns
adc
mulb
dec
mov
sti
cmp
bound
lcall
sub
dec
fiadds
push
push
pop
repnz
push
outsl
adc
adc
nop
cmp
cli
rcl
inc
pushf
inc
xchg
js
in
jb
xchg
xor
pop
xchg
sbb
mov
lcall
in
mov
push
lds
sub
stos
xor
pop
jno
js
js
pop
sti
sbb
popa
mov
sbb
xchg
lret
lds
xchg
pop
cmpsl
lcall
mov
stos
dec
mov
mov
cmpsb
testb
repz
push
jne
jle
mov
add
mov
arpl
jno
dec
mov
leave
out
mov
loope
pop
dec
mov
aad
int
enter
push
add
or
outsb
jno
aad
in
dec
adc
mov
mov
and
sub
add
insb
lret
outsb
loop
ljmp
adc
cmc
push
inc
mov
pop
pop
aaa
lret
daa
and
or
mov
push
xor
sti
out
inc
mov
in
cmp
jae
out
sbb
mov
pop
mov
or
les
fwait
mov
pop
sub
lcall
xchg
test
adc
pop
test
pusha
leave
push
jp
xchg
xchg
outsb
inc
das
lea
es
jmp
mov
add
popf
fmull
jp
pop
pop
sbb
dec
out
inc
dec
popf
in
sbb
xchg
add
in
pushf
sbb
pusha
dec
inc
mov
xchg
mov
and
push
cmp
mov
inc
mov
add
leave
or
aad
push
nop
jg
add
mov
mov
mov
cmp
push
dec
pushl
pop
adcl
dec
cmp
push
pop
mov
fadd
cli
jecxz
ds
bound
or
mov
xor
shr
sub
xor
dec
mov
jo
insl
scas
movsl
out
test
mov
mov
pop
std
out
test
or
inc
repnz
loop
jecxz
push
out
add
sub
test
cmp
pop
adc
lock
popf
xchg
push
dec
jae
out
sub
pop
out
jne
pop
decb
inc
push
or
cs
rcll
dec
sahf
pop
fdivrs
data16
mov
pop
into
add
mov
shlb
lcall
xor
adc
sbb
js
inc
ret
iret
sbbb
inc
pop
mov
add
push
sub
jecxz
stc
jbe
pop
add
data16
enter
xlat
mov
scas
mov
lods
mov
lahf
jmp
bound
dec
jbe
std
or
mov
jb
cli
xor
nop
cli
int
fimull
push
insb
pop
xor
pop
mov
test
lods
loop
mov
gs
outsl
inc
and
mov
or
mov
lahf
int
cltd
in
dec
adc
or
sub
push
xchg
fdivrl
fsts
ret
push
and
mov
insb
inc
mov
enter
cs
push
sbb
jg
test
push
stos
pushf
jns
sub
inc
or
mov
addr16
cmc
and
cmc
ss
jne
movsb
mov
xchg
mov
inc
ss
leave
sbb
incl
xchg
xchg
insb
fisubs
pushl
bound
data16
bound
xchg
inc
push
pop
hlt
std
xchg
ss
popf
mov
dec
inc
sbb
data16
mov
in
rcr
jge
in
jo
push
mov
jns
pop
push
movsb
insb
test
cmc
inc
hlt
jp
movsl
xor
lret
pop
cs
xchg
stc
ds
mov
sub
jae
lret
scas
lcall
je
inc
mov
leave
aaa
dec
add
and
sti
fs
cmp
xor
cltd
sub
mov
xor
int
mov
xor
cld
js
out
test
ficoms
in
lods
jo
frstor
push
aad
jnp
sbb
mov
sub
mov
mov
les
add
pop
ds
arpl
mov
mov
and
mov
les
mov
and
je
push
xor
insl
leave
inc
data16
addb
adc
mov
adc
jae
cli
popf
sbb
inc
loope
push
or
dec
sub
fs
pop
mov
in
pop
push
out
in
mulb
mov
sbb
fwait
jp
or
lcall
push
stos
mov
sub
int3
push
jg
jg
push
xchg
shlb
mov
test
cltd
push
dec
fmull
pop
jnp
jmp
cmp
jle
add
adc
add
xchg
test
push
fists
xor
mov
mov
negl
arpl
roll
cmpsl
sbb
popf
mov
aas
mov
aad
sub
in
aas
mov
adc
in
jle
dec
cld
lods
lret
in
shrl
inc
inc
icebp
jp
pop
mov
mov
out
and
nop
movsb
mull
or
and
pop
pop
xchg
stos
inc
mov
ljmp
je
sub
jle
adc
mov
mov
inc
add
xchg
lret
lds
ljmp
fadds
clc
or
bound
jb
pop
ja
add
sub
sar
mov
mov
xchg
in
sub
xchg
iret
or
dec
mov
stos
fidivl
and
out
aaa
adc
pop
popf
std
pop
lea
mov
push
mov
xor
push
mov
dec
and
inc
int3
test
jl
pop
arpl
pop
insb
popa
in
jae
mov
aad
inc
sbb
inc
add
jp
addr16
shlb
rcrb
iret
stos
rcr
sbb
sub
dec
and
jg
sbb
mov
rorl
pop
mov
aas
ljmp
psrld
dec
aam
xchg
dec
iret
push
mov
push
mov
les
or
inc
jbe
push
mov
clc
lods
sbb
fcoms
maskmovq
mull
and
insl
sti
pop
push
sbb
hlt
mov
push
push
mov
ret
xlat
push
and
push
lret
xorl
pop
ljmp
push
addb
push
imul
or
fwait
inc
aad
mov
bswap
jge
or
call
fildl
and
push
and
cmp
sbb
adc
test
jl
inc
jmp
pop
mov
clc
rorb
int
negl
nop
mov
inc
jmp
mov
outsl
mov
in
add
repz
adc
pusha
inc
jno
push
mov
mov
enter
jnp
pop
dec
dec
cli
insl
sub
inc
jno
push
jne
push
shl
xor
call
and
inc
push
sbb
stos
daa
mov
test
sbb
les
ret
vpsubusw
pop
xor
lds
enter
pop
ret
popa
lret
mov
dec
pop
add
push
xchg
es
jnp
out
mov
mov
mov
in
lds
stos
lret
nop
hlt
call
adc
cmc
fimull
jno
add
cltd
fiaddl
xor
mov
jge
clc
insl
add
iret
mov
in
sahf
lds
and
fcmovbe
or
popa
and
sbb
test
rcll
not
jecxz
es
mov
imul
imul
push
test
cwtl
pushl
xor
loop,pt
lods
pop
pop
dec
mov
sbb
sbb
pop
inc
or
test
xchg
or
adc
and
popa
adc
lock
rcrl
jb
cwtl
pushf
or
lret
cmp
ret
ret
nop
and
jge
mov
lret
frstor
int
cmpl
push
and
gs
mov
pop
and
adc
push
pushf
cmp
ret
fcmovnu
jmp
ja
insb
add
pushf
aaa
ss
fwait
jl
ret
insl
lods
mov
in
cmp
ret
int3
loopne
xchg
aam
leave
sub
aaa
sbb
mull
daa
aad
int
jae
ja
stc
popf
dec
jno
dec
push
adc
pop
loope
fisubs
jae
ret
stos
inc
cltd
sti
mov
gs
mov
and
outsb
pop
sti
call
test
mov
push
pop
call
imul
pushf
sbb
dec
cli
mov
xchg
imul
imul
mov
pop
inc
mov
mov
dec
movsb
clc
dec
cmp
lds
xchg
pop
inc
aaa
fildll
inc
pop
cmp
das
test
push
ret
xchg
adc
mov
dec
cld
aad
adc
mov
jne
jle
add
inc
outsb
insl
sub
loopne
mov
xchg
cltd
sbb
adc
sbb
jo
push
lret
aas
cmp
sbb
mov
call
mov
inc
mov
or
ja
hlt
add
cs
pop
mov
push
iret
mov
add
push
mov
cmpsb
adc
cwtl
xchg
mov
push
inc
fcmovnb
out
xchg
inc
push
push
subl
aas
pop
and
mov
jno
dec
inc
mov
loope
orps
and
ss
cmp
lret
fistl
ret
sbb
divl
pop
inc
sahf
jmp
or
push
fsubl
xor
mov
mov
sub
mov
sahf
cli
jle
fiaddl
lock
add
dec
mov
aas
inc
arpl
xlat
fldenv
imul
jecxz
pop
inc
pop
lods
sarl
jle
push
outsb
int
xchg
pushf
imul
dec
mov
or
add
dec
cld
xor
mov
lock
lret
mov
aad
fwait
xchg
test
cmc
fnstenv
push
fnsave
bound
jge
outsb
mov
scas
dec
std
and
sub
cs
jbe
popa
push
and
mov
push
xchg
add
jnp
lods
mov
and
mov
mov
dec
popf
loop
sub
das
adc
shll
ss
iret
dec
lcall
in
or
push
nop
push
gs
adc
outsb
aam
iret
sarb
loope
push
and
jnp
cmp
adc
adc
xor
jl
cli
or
lahf
pop
ret
sbb
in
pop
fadds
out
pop
cs
mov
outsb
xchg
xor
sbb
sub
lahf
mov
rclb
xchg
rcll
xchg
lea
mov
mov
shlb
dec
cwtl
loopne
insb
ja
cmp
and
sarl
cmc
fmuls
or
fldz
shrb
or
aam
ja
mov
push
sub
pushf
enter
lock
addl
and
test
outsl
imul
out
fs
xchg
mov
fdivl
sbb
push
pop
pop
shrl
movsl
ds
sbb
into
ja
push
test
inc
pop
in
outsb
mov
xchg
cmp
xchg
ja
das
mov
mov
in
popa
inc
push
hlt
out
mov
shl
cmc
out
fiaddl
lcall
mov
fs
in
insl
inc
pop
jecxz
mov
pop
jg
rcr
mov
neg
sahf
std
arpl
and
mov
cmp
push
push
faddp
mov
cld
inc
adc
and
cltd
sbb
add
mov
and
mov
mov
hlt
push
bound
js
add
push
jmp
and
cld
ficoms
or
jg
mov
cmp
cmp
jns
xchg
mov
andb
push
add
mov
and
test
xchg
fstpl
pop
pop
sbb
jae
sbb
scas
xor
data16
pop
mov
negb
sbb
stos
mov
les
push
jo
mov
scas
fsubs
mov
add
int
add
adc
pushf
in
sbb
adc
loopne
mov
xchg
push
test
test
lock
xor
dec
pop
sbb
jno
into
ret
mov
pop
mov
add
cmpsl
popl
cmc
fldcw
stos
inc
clc
mov
jne
or
fiaddl
adc
pusha
sub
pop
fs
lock
add
inc
shrb
adc
ja
sbb
outsl
cmp
jecxz
daa
push
hlt
imul
test
ret
js
jmp
mov
jge
loope
movsl
xlat
adc
out
mov
ret
pop
jl
ss
insl
test
cmp
sbb
dec
mov
inc
mov
mov
js
add
dec
mov
data16
ja
inc
jge
ret
out
mov
loop
das
mov
mov
sub
in
pop
dec
adc
mov
paddusw
int
psubq
push
sbb
mov
cwtl
adc
mov
and
xchg
nop
mov
clc
and
mov
mov
pusha
test
push
cmp
cmp
loop
xchg
xor
fldcw
push
test
mov
fiaddl
cmp
xor
sub
sub
enter
je
sub
les
xor
test
xor
jno
cltd
pop
xchg
imul
inc
cwtl
cmpsb
dec
fidivl
lea
xchg
out
scas
loopne
pop
xor
mov
xchg
adc
or
ja
sarl
iret
cmpl
and
mov
sub
and
adcl
cmc
cmp
aam
arpl
adc
xchg
sti
mov
shrb
cmpsb
mov
arpl
hlt
cmp
add
stos
stos
mov
loop
fildll
xchg
fs
enter
add
loopne
pop
mov
sar
add
mov
xor
cwtl
jecxz
insb
fcomps
addr16
pusha
aam
mov
dec
adc
and
mov
adc
lcall
sub
adc
aad
pop
xchg
cmp
lcall
rcll
push
mov
sub
xor
dec
lods
mov
addr16
ret
jbe
jne
js
xchg
sti
and
add
insb
jo
fiadds
push
or
sahf
pop
outsb
lcall
outsl
and
les
mov
fcmovbe
aaa
add
and
pop
cmp
adc
sti
mov
cmpsb
mov
jb
loopne
xlat
ret
int3
aas
pop
insl
lock
ret
adc
mov
mov
enter
call
sarb
cmpl
dec
jle
jecxz
movsb
xor
rolb
addb
outsl
mov
and
xor
push
test
xchg
or
leave
test
movsl
mov
fwait
xor
rcrb
jne
sub
inc
insl
and
add
push
in
scas
mov
lock
cmc
fnstenv
jl
jb
aas
mov
fwait
mov
jp
xor
ljmp
aaa
push
ret
sti
jp
inc
cmc
add
cwtl
cmc
jecxz
rorl
ds
shl
xchg
add
scas
mov
cmp
sub
jns
arpl
push
fcoml
frstor
dec
lret
mov
rolb
ljmp
mov
sub
or
sub
lds
fnstsw
ret
jg
inc
or
adc
mov
or
sbbb
mov
jge
xorl
sub
xor
xchg
subl
inc
xchg
mov
cmpsl
dec
and
pop
and
add
clc
or
cmp
imul
and
fistl
lods
xor
xchg
add
ja
pushf
aas
cmpsl
or
lods
in
mov
xchg
mov
dec
stc
testl
adc
or
mov
push
or
cmpsl
incl
jne
in
jb
sub
jo
jnp
jo
shrl
lock
cmp
testl
fsubrl
je
jne
js
add
imul
lock
stos
mov
sbb
mov
jbe
xorps
xchg
mov
stos
mov
lret
mov
divb
lock
ret
lret
xchg
ret
jne
mulb
andl
hlt
jp
adc
adc
ret
ffreep
mov
aaa
and
and
cld
sahf
dec
test
ja
pop
outsl
sbb
push
dec
insb
push
out
outsl
ljmp
xchg
outsb
inc
fnstcw
mov
sub
mov
cs
aas
leave
mov
loope
hlt
adc
ja
mov
push
mov
aas
xchg
imulb
hlt
and
clc
mov
orl
mov
lea
arpl
int3
pop
outsl
pop
push
mov
adc
shrb
jne
jle
sub
insb
mov
mov
ror
sbb
mov
fisubrl
add
repz
into
mov
lret
jmp
cmp
adc
popa
popf
xchg
mov
inc
sub
xor
outsb
dec
or
adc
jp
mov
fidivl
pop
lock
xor
std
cmpsb
pop
mov
lret
dec
sub
or
pop
clc
xor
lods
addl
movlhps
testl
aad
xchg
jle
pop
cmp
push
fimull
insl
jmp
cmpsl
lahf
jmp
lds
sub
mov
in
sub
sbb
add
hlt
add
xor
push
jg
mov
and
imul
int3
in
or
adc
dec
hlt
mov
ljmp
push
and
dec
jno
cmpsb
adc
dec
insl
sub
push
mov
mov
dec
xchg
lods
cmpb
inc
lahf
lret
imul
cmpb
pop
mov
mov
sti
pop
sahf
subl
mov
xchg
push
decl
jo
jle
dec
out
cltd
enter
mov
xchg
jge
add
in
mov
jno
jp
add
ficoml
roll
ja
cmp
into
movsb
jp
cmp
aad
or
ficoml
sbb
gs
push
mov
or
je
push
int
insl
add
mov
lahf
in
fstpt
cmp
mov
or
in
ja
pop
outsb
mov
leave
icebp
das
lods
mov
or
fisubs
dec
mov
jg
mov
mov
add
xor
push
sbb
roll
cmp
mov
out
mov
sbb
enter
jae
mov
add
popa
outsl
pop
out
leave
mov
mov
movsb
aad
popa
jne
pop
add
jmp
aaa
push
jge
imul
sub
cs
scas
out
mov
cwtl
shr
fisubrl
mov
cmpsl
aaa
mulb
movsl
xchg
pop
lods
adc
leave
push
insb
mov
insb
icebp
daa
pushf
adc
stos
addl
daa
xchg
mov
and
adc
xchg
or
fs
adc
mov
in
sub
hlt
inc
xor
mov
or
out
repz
or
add
inc
dec
cmp
jmp
add
cmp
jnp
andl
mov
imul
push
dec
mov
jae
cmc
dec
xor
div
inc
push
sub
mov
ret
mov
inc
into
dec
out
das
sbb
clc
pushf
push
pop
push
dec
dec
testb
xchg
lret
arpl
cmp
rol
sbb
mov
jp
jae
ja,pt
sub
pop
jno
inc
jo
pop
sbb
mov
sub
imul
sbbl
cltd
icebp
mov
dec
aam
or
sbb
aas
mov
xor
int3
nop
gs
addb
dec
in
fdivrs
adc
fldcw
popa
subl
fnstenv
mov
or
mov
ficoml
out
cmp
rorl
loopne
in
out
aad
and
xchg
fs
loopne
xor
cwtl
add
loop
cmpsb
data16
mov
sub
add
scas
popf
xchg
sub
mov
xor
mov
sahf
into
icebp
cmp
andb
xchg
imul
xchg
scas
jns
jne
movsb
xor
pop
ja
sbb
mov
and
mov
xchg
xchg
mov
movsl
jns
xchg
mov
fisubrs
movsl
cwtl
les
jmp
xchg
nop
or
in
nop
dec
push
push
pop
push
mov
repz
test
xchg
out
pop
pop
ja
or
fxch
aam
adcb
xor
leave
pop
push
push
sahf
into
and
mov
mov
clc
je
mov
mov
xor
mov
cmp
mov
adc
add
adc
ret
mov
outsl
mov
adc
ss
ret
jae
movsl
adc
xchg
adc
test
cmpsb
mov
nop
popf
lcall
pop
int
loop
ret
test
loopne
mov
mov
inc
aaa
orb
xor
pushf
jo
jb
mov
push
loope
dec
cmpsb
out
jae
movsl
mov
pop
pusha
arpl
fwait
xchg
mov
cmp
stc
mov
test
or
sub
leave
or
imul
adc
adc
sub
pushf
lods
aaa
inc
pop
add
lock
xor
leave
cwtl
test
mov
int3
ljmp
push
mov
jae
xchg
outsl
jge
es
sub
adc
sahf
ds
jle
mov
in
leave
int3
mov
lret
rorl
sub
repnz
movsb
or
leave
xchg
aam
adc
sbb
out
sti
pop
mov
stc
lock
outsl
mov
cmpsb
lret
addr16
lcall
xchg
mov
movsl
das
push
xchg
in
fmuls
lock
dec
cltd
sbb
cmp
jle
dec
push
pop
lods
mov
pop
aam
shlb
scas
mov
jge
lret
pop
std
repnz
call
dec
sub
popa
and
or
je
sub
out
icebp
mov
out
mov
pushf
push
cmpsl
adc
clc
add
cmp
fldenv
lret
adc
je
mov
pop
cmpl
and
orl
pop
fdivrs
out
ret
aaa
jl
xor
xchg
test
shrl
ficompl
fucomi
mov
rcll
xchg
loop
cmc
aaa
mov
cld
jbe
negl
push
fsubp
hlt
pop
or
movsb
xor
hlt
push
ret
push
jl
push
add
imul
dec
push
dec
jnp
out
adc
or
ja
stc
push
test
dec
mov
add
jp
test
inc
ds
xor
jl
pop
xlat
dec
add
popa
outsl
test
stos
out
ja
in
add
and
es
mov
jl
in
xchg
hlt
mov
push
sub
push
sbb
jle
sbb
sbb
jae
push
cmp
in
adc
arpl
addl
and
je
cwtl
push
cltd
movsb
mov
adc
frstor
xchg
xchg
xchg
xchg
insb
adc
fdivr
fsubs
mov
ss
lea
aas
push
mov
data16
pop
mov
mov
dec
xor
pop
mov
test
or
and
xor
sbb
mov
mov
xchg
es
jne
loop
shll
add
mov
fstpl
scas
outsb
aad
je
fsts
mov
aaa
fiadds
sub
rcr
xor
mov
or
lcall
ja
sbb
dec
adc
adc
push
aaa
das
mov
lods
test
jl
xchg
jbe
pop
mov
jns
shrl
loopne
cwtl
unpcklps
and
loop
inc
sbb
insb
and
test
xchg
and
outsl
dec
pop
inc
std
sbb
rorb
sarl
pop
popf
js
movsb
pushf
add
xchg
jecxz
adc
xchg
les
stos
out
xor
add
cmp
cmp
sti
popf
mov
sub
cmp
lds
fstpt
xchg
aas
out
cltd
jle
into
or
andb
push
sbb
filds
aam
pop
dec
mov
mov
add
scas
jl
in
push
xchg
adc
mov
inc
sub
popf
xor
into
roll
stos
xor
sub
push
andb
sti
mov
aaa
js
into
jp
add
aas
movsl
push
jns
mov
xor
inc
leave
inc
in
add
fwait
add
insl
outsl
mov
addb
mov
sub
addr16
cmp
adc
loop
call
and
lret
jbe
clc
dec
subb
adc
push
cs
ljmp
inc
adc
push
xchg
sub
xor
add
mov
fmuls
mov
shl
jge
inc
cli
mov
outsb
fistpll
push
fs
mov
fistps
adc
in
fwait
cmp
out
andb
orb
out
adc
pop
xor
scas
inc
dec
dec
xor
jmp
adc
in
mov
mov
cmp
xorb
pop
repnz
sub
pop
or
xor
or
mov
fwait
outsl
in
out
mov
xchg
dec
stos
mov
push
out
pusha
leave
out
or
test
cmp
push
mov
cmp
movsb
or
nop
es
popf
bound
cmp
rorl
jno
xchg
loop
pop
cld
sub
int
mov
add
inc
cmp
jge
push
aad
cltd
adc
ret
int3
pushf
inc
jbe
mov
push
ds
rcrl
shll
nop
adc
add
loope
pop
adc
std
test
insb
stos
sub
outsb
ljmp
sub
cmp
jo
and
xorl
jbe
xchg
cmp
insb
in
sbb
stos
jle
adc
mov
repz
out
insb
xchg
or
jae
mov
jb
lcall
and
lahf
les
cltd
lods
pushf
retw
into
out
fiaddl
out
data16
adc
mov
xor
xchg
xor
cmpsb
int3
int
aad
mov
xchg
ljmp
mov
push
rcrl
movsl
ss
call
lahf
data16
stc
adc
xchg
mov
rclb
cmpsl
mov
insb
leave
jecxz
jne
rcll
add
push
mov
movsb
addr16
or
mov
dec
push
nop
add
dec
xchg
pushf
adc
ds
out
cmp
xlat
jl
xchg
cs
ja
mov
int
test
inc
mov
les
mov
lods
or
mov
into
adc
ret
pop
push
cmpsb
aaa
jmp
es
lret
and
jb
test
out
push
inc
jl,pt
lods
out
jg
fbstp
inc
enter
mov
xchg
dec
mov
int3
ds
push
cwtl
dec
cmp
cmp
or
fldl
fsts
mov
add
mov
xor
inc
clc
decl
inc
enter
or
fisubs
ret
mov
stc
adc
and
lret
inc
ja
ja
inc
out
mov
ljmp
sbb
xchg
xchg
push
mov
icebp
imulb
sbb
fs
vcmpss
imull
cwtl
inc
ficompl
pop
rorb
icebp
mov
outsb
or
in
mov
mov
xchg
popa
or
jmp
inc
popf
js
inc
jbe
out
clc
pushf
mov
cwtl
lret
addl
negb
push
movsl
mov
mov
and
fsts
mov
and
add
shll
lods
mov
xor
sub
push
jmp
push
insb
shr
cmp
jae
ljmp
in
call
rorb
xchg
xchg
ror
pop
inc
in
dec
ljmp
dec
out
push
cld
cwtl
inc
inc
xor
and
fisubrl
push
sub
out
je
jle
add
adc
cmc
ljmp
ficoml
mov
jl
or
adc
or
xchg
test
and
movsbl
in
mov
push
jmp
jns
add
shr
loope
lods
push
xorb
andl
push
jp
push
je
jl
ret
cmp
repz
cld
pop
mov
mov
cmp
or
push
subl
push
push
ja
add
loop
xchg
outsb
adc
pop
loope
pop
scas
into
and
cltd
pop
loope
cmp
sbb
hlt
sub
cmpsl
les
sbb
push
fwait
mov
inc
mov
mov
ja
repz
mov
repnz
push
fs
sbb
xchg
adc
xchg
daa
xchg
push
subb
loop
pop
int
enter
scas
add
pop
inc
jb
mov
sbbl
cld
lret
iret
out
sub
cwtl
mov
mov
push
or
cmpsl
push
popa
inc
dec
loopne
lock
mov
cld
xchg
nop
imul
movsl
xchg
jo
xchg
ficoml
addr16
pop
cmpsb
shl
xchg
xor
or
das
lods
andl
dec
subl
ror
jl
cwtl
dec
arpl
or
jae
inc
movsl
sbb
je
insl
nop
push
loopne
outsl
rcl
gs
imul
jle
movsl
jns
aam
jbe
mov
fiaddl
add
pushf
pusha
inc
pop
jne
mov
mov
dec
cs
or
xor
out
jg
cmp
jnp
clc
adc
mov
stc
out
push
push
test
fcom
fisubs
jno
mov
dec
je
fbstp
test
or
jmp
shll
loop
icebp
sbb
imul
insl
xor
lds
stc
inc
and
ret
and
mov
mov
mov
in
adc
sub
rcl
or
xchg
movb
add
mov
lcall
test
or
aad
test
xor
lret
pushf
jl
push
pop
stc
jb
lret
andl
xchg
adc
int3
packuswb
jns
das
cli
push
add
xchg
push
push
pusha
sbb
xlat
dec
mov
outsl
jnp
mov
inc
and
cmp
inc
jo
xlat
cmp
mov
xchg
lods
jne
aas
movsl
rcrb
sub
jb
lret
bound
int3
das
push
inc
nop
or
repz
loop
ja
andl
adc
pop
mov
adc
inc
into
xor
add
jae
shll
test
push
js
and
push
adc
xchg
int3
add
pop
sbb
es
repz
sahf
mov
loop
ret
mov
inc
sbb
lcall
dec
mov
xor
ljmp
jge
push
sub
test
aas
sbb
lea
pop
testl
in
inc
int
inc
mov
cmp
mov
fstl
icebp
fldenv
push
int3
imul
mov
push
jns
call
dec
jne
mov
and
inc
jbe
and
cmp
sub
movsl
sub
pop
jns
push
icebp
int3
mov
mov
lea
loopne
movsl
inc
test
pushl
rorb
push
or
push
xor
movsb
jb
in
shlb
lock
into
mov
cmpsb
mov
gs
lock
adc
and
jns
in
or
and
dec
xchg
inc
inc
test
rorb
paddusw
cs
in
inc
call
rcll
mov
push
fst
fisttpl
loop
ljmp
xchg
push
mov
xchg
pop
scas
add
incl
icebp
stc
pop
pop
outsl
mov
mov
push
pop
hlt
sti
jnp
fs
sti
mov
sbbb
sbb
pop
stos
divb
push
mov
lock
inc
push
lea
mov
pop
out
loop
xor
fidivl
cmc
mov
adc
addr16
inc
lahf
fisttpl
sar
addr16
jns
push
loopne
inc
mov
pop
loopne
icebp
sbb
or
popf
pop
cmp
pop
fwait
sahf
lahf
popf
pop
jbe
stos
xchg
lcall
aad
mov
loopne
sub
xchg
imul
in
scas
mov
rclb
enter
inc
fs
adc
adc
lea
jl
pop
inc
scas
adc
and
inc
in
inc
idiv
push
dec
test
sub
fucomp
sarl
jl
sti
test
in
and
int3
or
mov
idivb
and
inc
mov
sar
sub
xor
aaa
lret
jo
sub
xchg
jb
pop
cmp
lods
fs
mov
sub
adc
popa
mov
sub
sbb
lock
cmc
jns
repz
push
mov
sti
das
mov
lods
cmpsb
lods
mov
dec
mov
jnp
nop
fwait
mov
stos
cmpsb
jge
cmp
pusha
push
dec
ss
push
dec
and
mov
cmc
xor
jg
mov
xor
push
pop
pop
scas
jae
jb
xor
sub
addr16
add
repnz
xorl
mov
mov
das
and
aam
sbb
rorb
push
jp
xchg
pop
or
call
push
cli
fdivrl
jl
ret
dec
cli
cmp
mov
mov
fisubl
cwtl
pop
fs
gs
sbb
leave
roll
mov
and
fisttpll
mov
repz
pop
lahf
push
out
mov
fcmovbe
xlat
mov
jne
pusha
outsb
shll
cmp
mov
mov
mov
ja
inc
outsb
jns
aaa
les
stc
fcomi
xor
cli
lcall
dec
xor
push
jge
cmp
sub
mov
inc
mulb
mov
fdivr
mov
loopne
sbb
popf
iret
push
mov
cmp
push
loope
dec
lods
sahf
inc
mov
inc
roll
inc
sub
int
stos
cmp
ljmp
loop
imul
push
mov
jo
push
shr
push
sub
sahf
imul
insb
shlb
mov
packssdw
jecxz
add
movsl
testl
push
jbe
mov
inc
out
and
movsb
fs
jl
out
fs
sbb
test
jb
jle
ret
xchg
sub
cli
jae
xchg
cmp
jg
mov
sub
leave
mov
sub
sub
sarb
dec
dec
mov
imul
les
jl
sbb
fucomi
xchg
sbb
repz
lds
or
sahf
rcll
xchg
cmp
fisttpl
dec
push
pop
stos
push
jno
movaps
add
adc
out
pushf
pop
jle
stos
mov
dec
push
sbb
push
xor
mov
in
imul
mov
mov
cmp
ds
mov
xor
dec
dec
pop
xchg
mov
mov
lock
cmp
push
mov
negl
outsl
fidivl
ds
mov
cmp
out
rcrl
mov
jbe
in
cmp
mov
xor
int
in
mov
mov
pop
jg
cmp
ljmp
cmp
ret
aas
xor
shll
jl
lret
ljmp
icebp
ljmp
fmul
push
pop
mov
lods
pop
jg
sbbl
or
xor
cld
and
mov
lret
out
mov
std
dec
pushf
inc
mov
and
int
mov
lret
fwait
es
lds
daa
dec
jb
mov
push
dec
jp
inc
orb
jnp
dec
hlt
or
push
mov
add
jo
inc
test
sub
mov
es
fidivrs
test
imul
sti
mov
cmpsl
lods
and
andl
movsb
mov
dec
inc
out
mov
test
mov
int
icebp
data16
stos
rolb
pop
data16
pop
pusha
dec
dec
and
inc
loop
lods
js
push
adc
stos
lcall
push
inc
mov
pop
ss
mov
xor
add
mov
call
pop
xor
dec
aam
incl
bound
add
or
lods
aad
jl
bound
sub
lods
mov
jb
rcrl
in
stos
jp
or
outsb
xchg
xchg
and
jmp
sti
pop
lret
add
and
xor
rcll
mov
pop
push
or
xor
test
mov
push
scas
in
add
movsb
adc
loope
mov
sarb
lcall
mov
aad
arpl
mov
xor
fsubrl
not
lahf
xadd
add
fstpt
sti
movsb
test
xor
out
jmp
lea
std
loopne
mov
test
int
call
gs
out
or
xor
cmpsb
pop
rclb
xchg
sub
inc
ret
clc
mov
pop
push
mov
int
in
psrld
sub
cmc
xor
scas
imul
cmp
push
adc
mov
pop
or
mov
movsb
add
arpl
shl
and
lahf
je
inc
es
movsb
add
mov
lock
ret
jne
in
jl
jno
mov
xchg
dec
imul
loope
andl
mov
cwtl
xchg
xchg
jmp
pusha
mov
pop
inc
jge
lock
jecxz
add
int3
out
jnp
in
stos
pop
adc
mov
lds
gs
add
sti
fcoms
xchg
stc
mov
stos
dec
inc
sbb
repnz
or
std
hlt
lock
les
lods
mov
pop
xchg
mov
push
lods
or
fildl
ds
cmp
adc
scas
stos
orl
test
mov
fsubs
mov
je
mov
pop
mov
sar
sub
pushf
scas
in
ds
and
jecxz
lcall
adc
scas
shl
out
arpl
fidivl
mov
xor
fnstsw
pop
adc
xchg
dec
cwtl
pop
cmp
ljmp
lods
jmp
ss
fsubrl
cmc
push
xchg
jl
shlb
sbb
push
stos
xor
shll
rorb
push
jge
movb
mov
bound
imulb
lcall
push
push
add
stc
jg
adc
and
inc
mov
mulb
or
stos
fidivl
movsb
dec
inc
mov
stos
add
stos
test
cmc
jl
xor
pop
mov
popf
or
hlt
jl
push
mov
push
mov
sti
out
dec
dec
std
push
mov
pop
movsb
fists
insb
in
jbe
mov
and
dec
add
xorb
cmc
add
out
mov
jb
mov
push
cli
pop
push
ret
loop
push
mov
shlb
je
sub
pusha
xchg
jge
pop
xor
out
mov
rcr
add
xchg
dec
push
dec
enter
and
add
addr16
negb
repz
inc
pop
std
pusha
imul
xchg
sub
add
or
and
add
adc
cld
cwtl
nop
and
inc
cmp
sub
ret
fincstp
jp
inc
mov
inc
jno
test
push
in
jbe
jnp
mov
mov
into
cs
inc
jb
inc
outsl
mov
cmp
in
fisttpll
xlat
and
fldcw
xchg
sub
mov
div
xchg
icebp
mov
cli
inc
lods
test
mov
pop
js
arpl
pusha
push
sub
sbb
mov
pop
lods
lods
fwait
push
in
pop
adc
jl
add
or
lods
push
adc
dec
ja
ret
sub
push
test
repz
inc
iret
and
das
pushf
daa
test
pop
aad
mov
mov
and
xor
inc
xchg
in
aad
roll
pop
mov
scas
xor
adc
aas
sti
mov
pop
pusha
ja
js
std
mov
aam
pop
push
pop
movsl
push
ds
dec
pop
push
scas
test
shl
pop
inc
mov
int
inc
pop
lock
mov
arpl
and
mov
cmpl
into
hlt
xor
mov
mov
pop
inc
out
jp
and
mov
in
jle
mov
push
test
jae
xchg
pop
mov
test
pop
pusha
add
outsb
shrl
jp
outsb
insb
jge
shll
pop
pusha
call
or
and
inc
mov
fdivrl
lret
int3
add
pop
out
xlat
insl
cmp
in
repz
mov
fisttps
fcoms
xchg
unpcklps
and
add
sbb
sub
lods
mov
and
enter
leave
repnz
jle
in
sub
mov
push
add
or
cltd
inc
stos
sbb
dec
daa
dec
cmp
pop
cmpl
adc
cmc
hlt
sbb
mov
jnp
jmp
pusha
dec
jmp
add
mov
insl
popf
cwtl
out
or
roll
and
ss
sub
lds
jnp
je
mov
xchg
stos
lea
add
dec
inc
out
xor
jle
dec
mov
fxch
sub
dec
push
pop
pop
cltd
sbbl
sbb
jbe
and
mov
fists
xlat
or
cmpsb
inc
aaa
les
divl
shlb
imul
sahf
jno
adc
push
repnz
pop
out
daa
sub
loope
dec
int
mov
inc
cmp
add
lock
mov
cmpsb
dec
aad
outsl
fcomp
xchg
jns
sbb
sub
out
sbb
push
jno
nop
cs
insb
jno
jg
stc
dec
dec
ret
lods
xor
lcall
xor
jae
in
cmp
aad
outsl
pop
jo
out
pusha
sbb
sbb
push
inc
inc
iret
mov
lcall
in
pop
in
out
or
xchg
xor
mov
aas
pop
adc
add
das
pop
mov
dec
pop
jo
popa
popa
cmp
add
add
cmp
insl
add
inc
fldt
xor
bound
dec
outsl
push
cmp
inc
cmp
jle
movsl
addb
adc
mov
cwtl
scas
inc
rcrb
lds
and
std
or
shll
inc
sub
stos
xchg
jge
lret
in
xlat
enter
adc
int
xlat
push
sbb
push
das
inc
sub
aas
mov
xor
or
fcoml
lcall
arpl
push
inc
repnz
push
cli
ficomps
or
lds
sub
fucomp
lock
mov
lcall
xorl
gs
xchg
pop
or
std
out
lret
test
rcl
int3
insb
mov
sbb
ja
popf
dec
xor
in
decl
loop
and
dec
out
lods
mov
lret
jae
jecxz
insl
stc
fbstp
cmp
jbe
fldenv
aam
mov
sbb
out
dec
pop
fs
insb
jl
jns
insb
test
std
in
xor
xchg
je
and
imul
mov
fs
pop
gs
jnp
in
pusha
pop
paddb
stos
bnd
mov
adc
dec
in
inc
lret
fidivrs
fisubs
mov
sbb
pop
test
pop
lahf
and
jnp
imul
dec
sub
sub
rorb
mov
sub
roll
out
cmp
mov
out
notb
sub
in
aam
push
mov
jge
paddsb
rcrl
cmp
lret
sbb
add
mov
pop
inc
in
jb
mov
aam
push
sbb
test
xchg
dec
mov
or
push
jne
ljmp
in
movsl
and
pcmpeqw
test
push
mov
out
sub
mov
cmpsb
mov
stos
xchg
pop
shlb
jl
lret
dec
sub
test
and
insb
fneni(8087
mov
inc
inc
push
adc
lret
in
cli
push
xchg
dec
jns
lods
outsb
and
mov
lock
inc
add
sahf
inc
or
mov
sub
cmp
fbstp
sbb
sahf
push
jae
mov
xor
sti
xor
jg
ret
cmpsl
fwait
mov
and
imul
cmp
insb
sbb
out
not
sub
lods
xchg
out
cli
mov
xchg
out
notl
jo
push
push
jbe
nop
push
in
or
push
aad
lahf
sub
imul
lahf
lret
icebp
pop
adc
inc
and
add
pop
out
push
leave
jmp
sub
arpl
daa
or
xchg
dec
add
xlat
xor
es
insb
push
in
mov
in
div
xchg
pop
int
adc
adc
aaa
mov
mov
addr16
test
out
mov
rcll
xchg
jo
stc
mov
xor
hlt
lcall
mov
lret
jmp
dec
mov
rcrb
cmp
mul
xor
xchg
mov
dec
cmp
std
insb
lret
push
xchg
shlb
mov
bound
out
cmpsl
outsb
je
inc
pop
or
js
pop
ror
sbb
divl
push
pop
sarb
call
mov
jmp
or
cmpsb
fs
mov
cmp
inc
lret
xchg
into
pop
and
repnz
fists
add
sbb
int3
shll
jo
mov
call
pop
nop
dec
hlt
sub
pop
test
and
fwait
xchg
or
push
mov
push
mov
add
pop
jbe
mov
fisubl
adc
mov
movsb
xchg
sub
xor
mov
cmp
sarl
pop
fistps
mov
and
lods
adc
push
mov
lods
negb
popf
sarb
and
out
xchg
arpl
pusha
jo
and
lahf
repnz
jo
ret
inc
dec
insb
or
lret
jo
popa
addr16
and
aam
negb
sbb
int
xorl
xchg
stos
sub
and
fxch
mov
cmc
or
jl
pop
adc
sbb
fcompl
clc
jo
xchg
push
fbstp
adc
popf
push
std
mov
push
sbb
mov
push
test
push
sbb
mul
cmp
push
adc
loop
cmp
in
hlt
ds
xchg
push
jne
or
mov
or
jmp
adc
shrl
scas
cmp
dec
push
add
pop
jno
pop
sub
dec
pop
sub
xor
push
insb
test
mov
mov
cmp
adc
loope
or
pusha
push
gs
pop
mov
addr16
lret
notb
lahf
aam
pusha
dec
out
xor
jmp
jnp
shll
mov
jb
mov
mov
jecxz
lret
inc
or
lret
cmc
xchg
ret
test
xor
cmp
ret
test
int3
insb
xor
push
cmp
out
xchg
lret
dec
lock
js
xchg
sbb
xor
imull
shrb
rcrl
dec
mov
or
lods
or
lods
out
movsl
nop
leave
call
xchg
push
fcmovnbe
ret
pop
sub
repnz
pop
pop
or
mov
add
ljmp
inc
ret
cmp
pop
andl
jnp
and
ret
push
inc
jns
push
dec
lret
inc
insb
aam
sbb
push
xor
sub
mov
lret
inc
sidtl
add
aaa
jae
jl
fidivrs
inc
jp
mov
or
negl
es
mov
clc
daa
push
aam
inc
lahf
fistl
cmpsb
fldl
scas
cmp
iret
cs
mov
adc
cltd
scas
add
insl
pop
ss
mov
loop
mov
push
outsb
pop
fistps
pushw
bound
inc
movsl
ret
or
cpuid
or
sarb
push
mov
repz
or
jb
outsb
mov
repz
mov
ret
jae
adc
call
mov
push
orl
and
les
gs
mov
movsl
mov
js
jecxz
hlt
out
mov
fidivrs
stc
les
out
sub
adc
cmc
outsb
shl
cmp
or
jb
cs
mov
in
dec
scas
dec
adc
pusha
sarl
adc
xchg
in
int
cli
loopne
push
jle
imul
xlat
xor
mov
dec
mov
pop
sahf
adc
inc
mov
cmp
fwait
ljmp
lods
fistpl
adc
mov
dec
icebp
fbstp
add
xchg
xor
pop
scas
inc
xchg
jge
repz
mov
iret
xor
stc
jne
cs
pop
pop
jmp
fistl
jmp
jp
fbld
std
mov
lret
pop
push
mov
pop
lea
aad
xchg
push
push
cli
and
pop
and
clc
movsl
xchg
test
mov
xorl
or
inc
sbb
mov
sub
pop
xor
aas
pop
lea
data16
adc
adc
xchg
loope
jno
xchg
inc
xor
jp
ss
test
ficompl
push
mov
or
aas
fsubs
nop
push
jbe
push
imul
loope
inc
movsb
mov
testb
mov
pop
aas
pop
loop
loope
iret
and
insb
or
adc
xor
cwtl
into
xchg
jo
sbb
std
xor
cmpsl
test
insb
jnp
je
scas
fadd
xor
ljmp
out
bound
aad
imul
dec
lea
push
sub
xchg
add
test
mov
dec
mov
ret
out
push
add
aad
adc
inc
imul
loopne
mov
and
int
popf
xor
shl
and
clc
insb
sub
pop
mov
add
pop
add
push
push
pop
orb
outsb
imul
mov
fwait
hlt
stos
andl
mov
jle
adc
cmp
mov
mov
xor
or
sbb
fs
xchg
pop
xchg
inc
dec
cmpsb
dec
popf
pop
insl
sub
ss
notb
add
test
inc
add
sub
aas
mov
xor
leave
clc
xchg
mov
lret
pop
mov
inc
or
aam
jb
push
out
jle
out
push
into
push
dec
call
mov
enter
mov
in
insb
out
sbb
push
mov
sbb
jge
clc
mov
xor
jnp
sbb
es
adc
sti
pop
push
cli
pop
push
jbe
and
aas
adc
dec
inc
push
out
or
sbb
iret
in
mov
cmp
cmp
shlb
repnz
das
inc
pusha
cmc
cwtl
inc
mov
sbb
mov
push
xchg
das
shll
adc
aad
lds
aam
pop
cmp
mov
gs
call
fnstcw
mov
dec
xchg
inc
dec
ficoms
lret
je
or
mov
jne
pop
pop
mov
fstpt
out
stos
inc
and
mov
out
fsubs
or
add
mov
pop
or
jnp
dec
bound
mov
and
rcll
xchg
cltd
rorb
in
pop
or
mov
rcll
fistps
inc
cwtl
out
add
aas
in
push
fdivrp
repnz
dec
ljmp
js
dec
and
dec
pop
sbb
xchg
aad
jle
pop
pop
pop
xchg
ret
ds
sbb
and
outsb
stos
out
cmc
movsb
mov
jp
call
dec
mov
sbb
inc
pop
and
dec
add
out
mov
lds
loope
xor
cmc
xchg
stos
or
push
imul
pop
mov
divb
jns
add
xor
jmp
and
hlt
add
xchg
out
imul
pop
stos
jns
lahf
ret
shl
pop
inc
mov
xor
outsl
xor
movsl
pop
mov
lret
push
pop
sbb
adc
test
xor
cmp
xchg
negl
pop
rdmsr
lods
lahf
scas
cwtl
push
add
and
fnstenv
or
xor
in
xchg
or
inc
lcall
stos
fildl
add
sbbb
and
sbb
ds
sub
and
mov
pop
je
loope
fcmovnb
mov
insl
mov
jecxz
dec
ss
push
or
int
adc
lret
jmp
lock
decb
jmp
push
xor
scas
cmpsl
les
mov
mov
lods
xor
fdivrl
jnp
jle
outsb
test
push
dec
cmpsb
mov
lahf
pop
das
pushf
dec
inc
sbb
cmp
dec
cmp
xchg
mov
mov
adc
fistps
bound
shrl
ss
jns
inc
cltd
jmp
imul
adc
mov
or
inc
inc
fldln2
test
mov
sbb
pop
mov
arpl
jb
sbb
or
xchg
iret
mov
xor
leave
mov
or
inc
mov
loope
in
repnz
clc
stc
outsl
iret
lock
in
inc
jbe
mov
jae
rcrl
sbb
xchg
outsb
jo
xor
stos
cmp
into
test
shll
cld
es
ljmp
ja
dec
jo
insl
hlt
cmp
or
push
jo
clc
hlt
sti
subl
insl
out
mov
lcall
push
cmpsb
inc
xlat
jnp
xor
or
adc
negb
sub
jno
sbb
aas
mov
fidivl
add
repz
and
test
cmp
xor
jne
xor
dec
call
movsb
call
out
push
adc
push
cmpsb
enter
rcll
xchg
gs
jne
cli
adc
aad
xor
imull
sub
rorl
mov
push
ljmp
pop
ds
or
insb
and
jnp
insb
push
das
test
nop
aaa
mov
or
ret
sbb
insb
addr16
mov
push
pop
mov
xchg
mov
idivl
and
fwait
adc
mov
or
jg
push
pop
adc
data16
imul
movsb
fnstcw
xchg
push
and
jmp
mov
cmpsl
insb
sub
movsb
mov
in
mov
scas
scas
dec
nop
jle
cmp
imulb
mov
jbe
mov
scas
faddl
adc
scas
mov
jecxz
roll
xor
inc
or
add
jne
mov
addl
out
push
pop
add
into
jecxz
mov
push
movsb
into
mov
push
fidivs
sahf
add
sub
out
call
ret
inc
in
xor
jno
mov
add
or
cmpsl
out
pusha
test
jns
xor
xor
pop
enter
rcll
outsl
mov
adc
pop
stc
fsubr
xor
mov
xor
jo
es
imul
xor
fucom
xchg
xor
pushf
pop
test
mov
punpcklbw
rcrl
mov
push
mov
das
lock
sahf
sbb
or
jl
mov
mov
inc
adc
dec
ljmp
rcrb
xchg
dec
mov
mov
pop
and
psllq
mov
pop
push
cmp
bound
adc
hlt
and
cmpl
mov
ror
pop
jno
inc
mov
sub
mov
pop
push
sti
adc
nop
popf
das
jle
rcrl
cmp
cmp
dec
pusha
int3
mov
mov
insb
push
push
jb
sti
add
sub
mov
xchg
jmp
sub
gs
add
sbb
loop
and
out
jg
cmpb
fdivl
lea
pushf
adc
popf
inc
mov
mov
rcr
xorl
ret
or
mov
pop
inc
sub
mov
push
inc
jle
xchg
push
outsl
popa
sar
leave
jg
xchg
mov
ret
ja
mov
shrb
aas
cltd
jmp
mov
mov
jmp
jo
scas
cmpsl
je
xchg
fistl
inc
lock
fisttps
rcll
stos
sbb
mov
pslld
jle
jmp
adc
push
arpl
xor
cmpsl
jb
add
sub
push
adc
jle
inc
cmp
sub
call
inc
loopne
add
test
or
cs
sub
mov
and
add
cwtl
push
popa
mov
imul
dec
mov
mov
cmp
cmp
or
scas
shr
fidivs
and
addr16
jo
fidivrl
mov
cmpb
hlt
cmp
mov
sbb
push
sbb
sub
jmp
cs
mov
js
aad
arpl
pop
adc
xchg
rcrl
jp
dec
dec
dec
ds
daa
stc
fsubs
pop
pop
dec
mov
or
xorb
xchg
xchg
inc
loope
push
xor
leave
test
mov
mov
or
xor
cmpsl
jb
pop
sbb
mov
sahf
push
and
in
push
dec
push
pushf
pop
lods
mov
xor
dec
mov
xchg
into
push
sbb
cwtl
fcompl
aad
dec
clc
scas
or
push
sbb
dec
mov
xchg
aad
into
jmp
xor
cld
cmp
xchg
pop
mov
inc
mov
inc
ss
das
andb
push
and
mov
jns
dec
cli
jp
jns,pn
push
mov
jb
push
mov
mov
cwtl
add
or
xchg
inc
aam
add
sbb
addl
pop
or
xor
imul
jmp
add
aas
add
data16
xchg
fmulp
xchg
mov
adc
dec
mov
scas
test
inc
mov
mov
aam
outsb
cmc
cli
out
ss
stc
test
sub
es
pop
and
pop
fldt
xor
xchg
inc
sarl
mov
mov
mov
stc
sub
adc
std
test
xor
mov
sbb
jns
sub
and
inc
sti
das
popf
mov
les
das
wrmsr
dec
pop
mov
cmpsb
jp
addl
jnp
test
mov
xchg
mov
xor
loope
rcl
xchg
xchg
inc
cli
or
shr
addb
clc
mov
mov
daa
xchg
xchg
inc
stc
xor
inc
mov
push
pop
jecxz
xchg
les
cmpsl
je
out
fidivrl
jmp
pop
cmpb
jns
je
dec
push
out
jmp
or
dec
ret
ds
or
ds
xor
bound
loop
js
xchg
cltd
subl
insl
pop
rcll
lahf
addl
xor
xor
pushf
fldcw
fbld
ss
ja
or
cmp
jp
test
lea
inc
lock
imul
xchg
pusha
push
sub
das
sti
jl
fldl
int
fimull
dec
divl
push
jmp
sub
or
push
lcall
ficoms
lahf
fnstsw
mov
jmp
jae
and
xchg
xchg
fs
add
cwtl
lds
cmp
mov
add
and
movsb
xor
xchg
sub
jb
pushf
inc
ret
loope
sbb
out
ror
movsl
mov
mov
inc
mov
scas
push
push
and
add
jb
xchg
xchg
in
adc
negl
mov
push
fcoml
hlt
cltd
aad
sbb
and
out
int3
pop
in
popa
das
repnz
nop
shlb
pushf
inc
sti
and
arpl
inc
scas
shll
mov
pop
inc
stc
sbb
push
rol
stos
arpl
jecxz
pop
sub
inc
sbb
cld
cmp
insb
mov
push
cs
xor
adc
lahf
imul
not
sub
pusha
ljmp
push
jg
adc
enter
test
insl
lcall
std
enter
ret
cmc
stos
mov
xor
jle
sub
xchg
loope
loope
out
add
es
aaa
mov
gs
cmpsb
fcoml
pop
push
repnz
jle
leave
push
loope
sti
sub
jle
cmpsb
xchg
sbb
rolb
xchg
mov
inc
call
mov
and
lret
nop
push
outsl
pop
enter
nop
sub
jg
in
jb
cmp
mov
mov
addr16
inc
inc
shrl
addl
mov
cmp
enter
sbb
cmpsb
js
mov
aad
in
mov
adc
out
xlat
mov
test
xchg
out
jg
into
inc
mov
cmp
pop
fidivrl
mov
add
mov
mov
cmpsl
jecxz
pop
jo
jecxz
call
or
mov
mov
les
popa
mov
xchg
pop
pop
in
add
cltd
test
adc
decl
in
negb
mov
cli
mov
or
mov
dec
cmp
pop
repz
lret
mov
test
jmp
ljmp
jno
repnz
fwait
mov
int3
call
int
and
fisttpll
xor
popf
and
pushf
je
cmc
inc
cmp
mov
stc
addr16
lods
les
add
xor
leave
call
push
rorl
mov
jbe
insl
or
inc
mov
adc
pop
mov
xchg
xor
and
sub
imul
fstl
xchg
push
inc
dec
xor
imul
loope
inc
sub
xchg
xor
push
cmp
movsl
xor
lock
inc
xchg
sub
icebp
mov
sbb
out
shrl
adc
lcall
inc
cmp
sub
xor
push
cmp
nop
leave
add
mov
in
sub
mov
mov
ret
fisubrl
adc
push
xlat
cmp
cmp
mov
in
in
xchg
cmpsl
sti
shlb
mov
jmp
fidivl
xchg
pop
or
cld
push
gs
dec
test
jb
lcall
imul
xchg
xor
fidivl
sbb
mov
sub
mov
ja
shll
xor
sbb
pop
imul
testl
daa
sbb
inc
or
xorb
sub
dec
xchg
jo
ja
mov
popf
insl
sbb
mov
cmpsb
push
cmp
fnstenv
sbb
aaa
popa
mov
loopne
repnz
aas
push
push
sbb
icebp
mov
mov
insl
sbb
ror
call
cmp
je
cmc
jmp
call
test
jl
mov
test
loop
notl
scas
sbb
push
call
adc
xor
clc
popa
sub
cmp
push
in
hlt
mov
mov
roll
mov
test
sbb
pusha
outsl
sti
fnsave
inc
mov
jg
cmp
sahf
mov
call
mov
sbb
sbb
popf
add
mov
cmp
sahf
rcrl
rcrb
pop
je
jg
jnp
daa
push
sub
jge
insl
fdivrl
or
adc
aas
push
mov
mov
jb
push
add
rcrb
loop
xor
or
cmpl
sub
in
sbb
pop
stos
jb
test
ljmp
mov
jno
push
test
int3
lret
mov
push
pop
add
jne
movsb
fldenv
cmp
sahf
and
clc
xorl
dec
mov
stos
fwait
imul
ja,pn
js
in
mov
fidivrs
std
imul
push
insl
inc
jne
rcrb
cld
xchg
add
clc
xor
daa
shll
xor
jl
and
cmp
in
or
xor
push
push
out
push
mov
loope
or
call
dec
mov
and
ljmp
mov
adc
pop
mov
mov
test
out
sbb
lret
dec
push
dec
aam
orl
jg
fistpl
subl
or
fiadds
push
or
out
nop
jne
dec
jmp
lret
test
out
ss
mov
imul
sbb
test
imul
pop
mov
mov
adc
mov
dec
js
ja
push
mov
mov
mov
or
mov
sub
sbb
sub
push
imul
mov
cmp
dec
jne
ret
es
insl
movl
mov
lock
fdivrs
inc
gs
inc
icebp
cmpl
or
lods
lods
pop
insb
jmp
mov
fwait
xchg
pop
and
dec
test
pop
inc
subl
fldcw
icebp
inc
ljmp
insl
inc
sub
ja
or
adc
fildl
popa
aas
push
ja
pop
cmp
leave
xchg
sub
repz
adc
mov
aaa
add
or
fmull
push
icebp
test
in
mov
testl
fildll
fwait
jmp
pusha
ss
sar
test
mov
scas
lcall
push
int
sbb
clc
mov
repnz
outsl
adc
pop
jo
fildl
or
jbe
scas
in
mov
mov
imul
fdivr
adc
arpl
lret
xchg
or
xchg
std
lock
loopne
mov
cmpsl
xor
fcoms
fidivs
pop
jnp
adc
pop
in
push
icebp
es
sti
push
add
mov
dec
jmp
cmp
mov
dec
popf
popf
and
dec
sub
jmp
lahf
jno
push
adc
adc
outsl
xchg
fisubs
gs
push
icebp
inc
inc
and
lret
in
fcmovbe
xchg
pop
inc
lahf
mov
pop
mov
mov
jns
push
fcomi
jo
lods
push
outsb
mov
stc
xchg
dec
shrl
jns
fdivl
ljmp
std
add
icebp
inc
daa
xchg
xor
sub
rorl
subb
lcall
out
inc
or
push
mov
lds
sbb
mov
pushf
in
cmp
lret
xchg
fbld
inc
add
andl
and
clc
xchg
sti
push
inc
adc
div
xchg
int3
js
dec
xlat
lea
xchg
adc
testb
cmp
sarb
or
int3
in
inc
popa
xor
mov
xchg
pop
pushf
roll
sub
mov
mull
into
jbe
mov
arpl
cmp
inc
and
jns
mov
adc
lods
or
test
adc
pop
jae
loopne
in
mov
ss
or
xchg
jns
push
movb
and
mov
in
push
jbe
adc
sbb
mov
sbb
insl
fmuls
out
dec
ds
xchg
cmc
push
sub
in
xchg
and
jnp
jge
lcall
inc
es
add
mov
int3
cli
inc
mov
inc
fwait
insl
mov
mov
xorb
popf
sbb
jns
mov
int
cli
jle
in
movsl
test
arpl
inc
mov
and
mov
outsl
add
jns
pop
cmp
adc
sbb
pusha
or
stos
dec
mov
xchg
fdivrs
fbld
aam
nop
inc
mov
sarl
sub
mov
addr16
inc
adc
fnstcw
and
ds
xlat
fisttpl
fwait
outsb
pop
inc
jl
sub
xchg
mov
ret
dec
sub
std
cmpl
insl
ljmp
sti
enter
fsts
push
mov
pop
sbb
add
cmc
rclb
ds
mov
mov
or
ljmp
popa
push
ret
lods
mov
insl
je
sbb
test
outsb
mov
int3
jg
outsl
std
cmp
lahf
jge
mov
in
xor
push
pop
stos
push
or
add
fidivrs
fs
les
verr
mov
ret
sub
push
ret
push
clc
in
inc
adc
aam
xor
inc
in
mov
xchg
js
sub
add
lods
xchg
push
sti
or
mov
ljmp
aam
js
out
mov
dec
xor
das
mov
xchg
hlt
inc
subl
or
add
add
inc
call
cmp
pushl
fdivrl
jle
ret
mov
pusha
inc
push
and
cmpsb
mov
cmp
pop
popf
outsl
popl
dec
jl
loope
push
xchg
mov
sbb
and
fsts
divl
xchg
pop
dec
adc
sbb
stc
pusha
lcall
xchg
shl
xor
mov
lret
incb
test
lods
jb
mov
sbb
adc
test
push
ljmp
pop
scas
int3
jge
lods
fcoms
gs
loope
movsl
popl
push
mov
loope,pt
ss
lea
scas
test
mov
cmp
subl
les
pushf
cltd
cwtl
jge
push
push
mov
std
jl
sbb
push
jne
je
stc
int
xor
sub
jmp
inc
inc
in
arpl
loopne
mov
pop
xor
xchg
mov
or
pop
loopne
sbb
shl
pop
jne
push
subl
rsqrtps
scas
jle
xchg
stos
hlt
ds
sub
xor
lods
fnstenv
pop
mov
and
lahf
fs
shrb
fcomps
in
pop
jno
rorl
test
shll
rol
jmp
mov
adc
call
mov
inc
jmp
cli
mov
push
fwait
xchg
adc
dec
lods
gs
push
pop
and
loopne
hlt
sub
mov
jbe
xor
push
gs
pop
cmpl
pop
and
loope
js
ret
mov
fnstenv
jno
mov
lret
mov
push
dec
xor
insl
cmpsl
stc
imul
rcrl
cmp
sub
pushf
and
scas
popf
push
pop
dec
cmp
xchg
mov
cltd
fnstcw
pop
add
cmp
out
test
fdivs
push
std
in
out
inc
jmp
icebp
adc
rclb
repz
fwait
hlt
addb
or
dec
cs
pushf
xor
jle
push
outsb
in
xchg
movsb
mov
sub
arpl
aad
xor
cmp
mov
es
ss
jge
sbb
jg
cwtl
push
mov
push
int3
push
in
and
enter
jo
pop
dec
mov
mov
aad
fisubrs
icebp
repnz
fldcw
inc
and
dec
cwtl
cli
or
enter
xchg
sbb
outsl
aas
adc
mov
push
xchg
shll
scas
push
sub
mov
jne
mov
cltd
pop
jno
lods
jp
mov
push
xchg
popl
sbb
jmp
dec
les
dec
ss
adc
lods
mov
mov
aam
aam
aam
jle
add
xchg
jl
lret
mov
push
add
lds
fs
cld
cmp
adc
sbb
cmp
pop
ret
fimuls
mov
and
mov
and
jmp
mov
or
ljmp
fistpl
ds
sbb
dec
or
test
lods
ds
mov
out
fiadds
mov
pop
idivl
jne,pn
inc
cmpsl
hlt
mov
lea
stos
psubq
movsb
dec
fmuls
clc
mov
sti
testl
cltd
stos
dec
sahf
inc
in
ret
push
sub
shll
out
mov
sub
mov
sub
loopne
xchg
dec
inc
imulb
sbb
or
fwait
xor
cli
inc
stos
mov
adc
mov
leave
out
mov
adc
pop
cwtl
pushl
fldt
mov
xor
imul
xchg
pop
add
xchg
pusha
ss
in
js
push
cs
push
adc
inc
orb
push
add
pusha
in
inc
adc
inc
ret
cwtl
pop
add
repz
mov
les
cmpsb
popl
das
jge
xchg
js
dec
lods
jno
jl
pop
add
data16
bound
andb
pop
sbb
pop
lods
and
jge
in
scas
ror
cmpsl
xor
inc
aam
enter
mov
fcoml
pop
cwtl
daa
cs
push
rcrb
mov
mov
adc
mov
cli
adc
aad
test
aad
test
push
jne
mov
jo
and
mov
js
rcrl
pop
cli
lods
cmp
mov
sub
ficoml
xchg
add
aam
int
adc
cmp
int3
aas
inc
lea
mov
fstp
mov
sub
insb
dec
add
pop
cli
pmaxsw
cmp
lock
cs
icebp
dec
inc
lock
cmp
and
lock
cmpsl
ss
dec
mov
fcomi
rorb
mov
jo
leave
imul
mov
fcoms
adc
mov
in
jno
cmp
jle
rorb
jno
jle
test
pop
xor
push
shr
popf
dec
nop
jl
mov
lahf
in
cmovae
mov
jle
lret
add
jnp
or
pop
orl
outsl
cli
sbb
fildll
scas
push
es
pop
jp
mov
lea
jge
setl
loopne
repnz
imul
xor
mov
lret
or
dec
clc
lret
mov
cmp
dec
das
scas
test
mov
data16
lock
dec
stc
and
mov
pop
mov
push
pop
nop
dec
push
pop
lret
pop
fwait
xchg
mov
xlat
les
jmp
jle
xor
pop
mov
ljmp
addb
cs
roll
scas
sbb
jmp
sub
loop
jae
loopne
and
add
pushf
addr16
mov
xchg
dec
xchg
inc
scas
repnz
aaa
addb
repz
sbb
mov
xor
add
test
outsl
xchg
push
sub
insb
and
dec
fisubrs
inc
inc
ret
ds
add
xchg
ret
mov
test
jne
rclb
inc
lds
in
inc
mov
mov
sahf
mov
fistps
push
jp
and
rolb
push
push
pop
push
adc
dec
mov
mov
das
sbb
popf
and
pop
ja
jle
clc
jl
mov
scas
js
scas
xchg
xor
or
push
mov
fwait
sbbb
stos
sub
scas
popa
adc
jb
jns
push
daa
out
xchg
mov
jmp
mov
pop
sbb
jbe
pop
xchg
ret
in
in
push
popa
pop
ja
repz
shrb
inc
fistl
ja
aas
hlt
pop
adc
cli
aaa
mov
and
movsb
sub
jb
mov
div
cmp
pop
mov
cmp
aam
out
and
bound
jae
jno
stc
mov
sub
out
sub
call
or
add
das
lods
es
or
hlt
mov
popa
iret
pusha
andl
push
mov
aam
pushf
shl
test
sub
xor
insb
pop
push
lret
add
dec
int
mov
aam
faddl
cmp
pop
push
xlat
lret
mov
mov
add
mull
inc
roll
mov
lcall
cmp
in
arpl
outsb
jl
pop
loopne
sbb
xchg
adc
rcl
jno
dec
icebp
stc
outsb
pop
sub
mov
jle
push
xchg
cmp
inc
adc
mov
xchg
dec
or
add
xchg
push
cmpsb
fmuls
mov
cld
dec
insl
pop
leave
mov
and
jbe
bswap
leave
push
jne
setb
rcll
imul
add
pop
dec
mov
xor
les
outsb
jmp
incb
test
or
cld
ret
adc
das
outsb
sub
data16
daa
rcrb
cli
xchg
xchg
into
push
je
cld
dec
sbb
cli
adc
movsl
cli
pop
stc
ja
leave
jge
add
jb
xor
fnstsw
cmp
fcomi
cmp
dec
sbb
insb
add
xchg
ret
sahf
mov
xor
shlb
and
outsl
aas
push
repnz
ljmp
hlt
or
jl
push
out
lea
loope
sub
cltd
or
fcmovbe
out
shll
popa
mov
push
ds
out
lahf
cmpsl
dec
dec
lea
inc
and
jge
xor
jp
aam
mov
jno
jae
inc
pop
ja
popf
and
lcall
inc
lock
out
icebp
bound
pushf
jmp
lods
mov
jg
mov
or
mov
cmp
faddl
and
xchg
jb
out
cmpsl
rorb
cltd
divb
clc
mov
dec
or
testl
sub
test
into
jle
xor
addl
clc
addr16
arpl
jg
fiaddl
std
test
insb
imul
push
mov
aam
mov
movsl
mov
scas
test
es
sahf
or
push
fdivl
aad
xchg
mov
xlat
push
arpl
fiaddl
sbb
jp
push
mov
or
mull
sbb
or
inc
mov
xor
nop
pop
lock
ja
addr16
and
cmpsb
icebp
ret
hlt
dec
jo
jecxz
adc
push
mov
call
sub
sahf
mov
push
shrb
dec
movhlps
mov
jb
rolb
loopne
mov
jbe
ss
pop
enter
xlat
cmp
out
ret
insb
xor
adcl
popa
aam
loopne
lret
adcb
sub
adc
in
fbstp
jmp
mov
push
push
jns
test
push
je
loopne
test
decb
sub
sub
xor
add
adc
inc
push
inc
lock
add
pop
call
pop
jns
cmp
push
decl
mov
shll
or
daa
gs
rorb
aaa
or
inc
pop
xchg
out
aaa
leave
pop
data16
push
cmp
daa
push
fcom
jne
adc
in
std
push
cmp
and
lcall
mov
push
loope
mov
sbb
sbb
jp
dec
scas
dec
cmp
push
dec
push
lock
jo
cmp
repnz
jp
cmp
pop
es
mov
incb
inc
lds
cltd
inc
and
push
inc
orl
mov
inc
mov
mov
mov
jbe
pop
mov
mov
insb
test
aad
xchg
cmpsl
push
mov
mov
push
mov
bound
fwait
mov
dec
out
xchg
sbb
sub
dec
cmp
cwtl
repz
int
sbb
sbb
in
lahf
js
jae
inc
ja
mov
or
cwtl
popf
xchg
jno
cmpb
scas
sbbl
adc
sbb
mov
scas
mov
jne
xchg
inc
es
data16
xchg
xchg
add
into
adc
mov
dec
dec
pop
dec
stos
pop
pop
lahf
rcr
aam
push
enter
and
cmp
hlt
push
insl
inc
cmpsb
cltd
add
ret
cltd
lock
jo
push
enter
mov
mov
pop
scas
arpl
xchg
leave
pop
dec
lcall
pop
add
lea
xor
mov
cld
sbb
cmpsl
js
imul
outsb
shll
fiaddl
int3
leave
lret
imul
adc
pop
testl
insl
mov
push
daa
cmp
pop
mov
stc
jno
jnp
stos
icebp
out
shlb
mov
aaa
aam
xor
sbb
ffreep
push
push
loopne
sbb
push
and
or
stc
jp
inc
sub
imul
arpl
movsb
std
inc
repz
pusha
dec
sahf
mov
mov
xchg
mov
out
ja
call
lcall
and
pop
mov
and
mov
ja
cmp
add
mov
push
xchg
xor
rolb
jg
sbb
xor
and
repz
jne
sbb
not
lret
pop
das
cmc
pop
push
sbb
mov
or
in
adc
add
sbb
push
loop
mov
inc
mov
bound
cltd
subb
in
addb
mov
and
arpl
xchg
out
adc
popa
dec
jg
movl
arpl
arpl
add
outsl
mov
roll
pop
dec
cmp
mov
or
jbe
in
insl
icebp
or
pop
xor
cmpsb
cwtl
push
fs
in
pop
sbb
cmpsb
cmpsb
dec
addr16
dec
xchg
lretw
dec
jecxz
cmp
incb
sti
pop
outsb
sub
aas
mov
xor
mov
cmp
hlt
es
iret
mov
repnz
jg
in
imul
or
xor
push
cltd
inc
push
sbb
jecxz
and
sarb
jae
cmp
fs
mov
jnp
cld
lcall
mov
test
subb
inc
loop
jne
hlt
rcrl
inc
iret
ret
mov
pop
jg
mov
jp
pop
sbb
sbbb
fwait
addr16
inc
inc
add
out
push
clc
and
xor
mov
mov
push
outsl
sahf
bnd
mov
popf
sbb
imul
cmp
dec
in
mov
dec
test
mov
arpl
stos
lock
std
leave
xor
mov
insl
adc
stc
mov
jo
pcmpeqb
xchg
inc
aad
pop
xor
pop
mov
mov
ja
ja
cmp
dec
push
ljmp
mov
rcrl
adc
lods
imul
and
push
xchg
std
iret
pushf
or
and
xchg
inc
push
rcr
pop
and
mov
das
fidivs
out
add
rcrl
pop
lret
lock
add
pushf
jmp
xchg
pop
cmp
sbb
cltd
aaa
ja
push
cmp
out
jle
stc
outsb
mov
xchg
mov
ficomps
or
push
jae
mov
push
jl
jno
sub
fs
mov
xchg
ds
repz
cmc
nop
push
popf
mov
dec
mov
stos
dec
fnstcw
and
adc
dec
cmc
inc
sub
das
mov
xor
lahf
nop
fcmovnu
sbb
mov
call
inc
adc
sbb
xlat
and
dec
lret
or
ja
imul
loope
pop
push
roll
adc
insb
cmc
sti
mov
xchg
sub
cmc
lret
xor
inc
mov
xlat
push
shll
loope
mov
in
lock
test
jae
not
mov
inc
mov
outsl
xchg
and
add
ja
push
bound
xchg
add
inc
mov
icebp
call
jne
dec
xor
mov
push
cmp
jge
int3
pushf
sub
or
inc
jge
bound
xor
std
shlb
loope
jb
loope
xor
pushf
xor
pusha
aaa
test
sub
xor
cmp
pop
test
cmpsb
bound
mov
aas
or
xchg
addr16
ljmp
mov
cld
xchg
or
mov
mov
push
inc
scas
out
fldcw
push
shl
push
jns
shll
stos
inc
outsl
xlat
push
sub
mov
out
cmpsb
jle
and
sbb
int3
mov
dec
insb
xlat
aas
mov
in
or
imul
in
add
cmp
xor
stc
ja
das
inc
adc
mov
insl
adc
inc
cmp
lret
sbb
push
sbb
add
and
inc
cld
xor
mov
mov
push
inc
sbb
push
sahf
icebp
js
aas
leave
xor
cmp
loope
in
push
sbb
jno
dec
inc
lods
jle
or
mov
fcmovnbe
out
mov
loopne
es
sub
or
cwtl
push
xchg
ss
push
pushf
lcall
push
pushf
js
sti
lahf
shlb
shr
js
insl
lret
xor
js
mov
nop
nop
jb
inc
ljmp
aad
pop
add
inc
in
cmpl
lret
push
mov
inc
push
mov
repz
push
push
xor
and
sbb
xchg
and
or
add
mov
mov
cmc
test
and
push
add
ret
popf
cmpb
incl
or
fwait
xor
cmpsl
jo
in
call
andl
pop
out
inc
dec
into
ljmp
fildll
ret
mov
push
pextrw
imul
adc
pop
lret
fldt
sbb
inc
jecxz
outsl
icebp
or
scas
adc
stc
pop
imul
lock
loop
and
loopne
and
daa
mov
or
pop
aas
jne
and
mov
int3
popf
add
aas
lock
xlat
ds
movsb
into
mov
iret
or
add
sahf
push
xchg
adc
jbe
pop
mov
sbb
stos
or
push
mov
fmuls
dec
notb
cmp
push
stos
mov
lods
cld
sbb
mov
mov
cltd
loope
push
fsub
pop
mov
sub
push
jae
sbb
and
xlat
mov
add
or
cmc
xor
sub
orl
dec
inc
xor
mov
insb
mov
jmp
dec
mov
sub
xor
dec
xor
mov
push
push
stc
mov
sbb
inc
or
jmp
jcxz
adc
loope
fcmovb
scas
push
xor
pop
add
pop
in
les
jbe
xchg
pushf
sub
test
cltd
xor
repz
dec
movsl
mov
xor
lcall
mov
adc
dec
push
pop
xlat
mull
in
repnz
jb
pop
mov
inc
jg
dec
mov
into
add
xor
push
cmp
jno
div
in
pop
stc
mov
enter
xlat
or
xchg
push
push
aaa
stos
ret
rcrb
jno
cmpsl
push
call
inc
iret
dec
and
xor
enter
and
scas
stos
icebp
sub
push
and
add
sbb
and
push
sub
cld
sub
dec
test
cli
pop
dec
cmc
add
jge
dec
ds
rcll
xchg
pushf
jp
popf
or
mov
mov
adc
and
mov
xorb
nop
pushf
push
adc
pop
pop
sbb
xchg
and
xchg
mov
test
iret
xchg
add
xor
xor
test
test
dec
xor
fidivs
sub
mov
lret
enter
mov
fisubrl
xorb
fstpt
pusha
mov
mov
arpl
pop
cmp
xchg
push
addl
pop
sbb
dec
out
incl
lods
mov
lods
arpl
pusha
dec
add
fcmovu
es
xchg
jns
inc
fisttpll
pop
in
shrl
rcr
inc
xchg
int3
push
cmp
loop
push
cmpsl
and
je
popf
mov
xchg
in
push
ljmp
push
daa
bound
enter
test
jmp
dec
cmp
add
add
fwait
je
cwtl
mov
adc
insb
sub
stos
cwtl
in
fcoml
inc
mov
pop
shlb
jecxz
fnsave
ds
pop
xor
and
gs
mov
cmc
mov
sub
cmp
add
push
leave
in
pop
ror
push
insb
sbb
jge
aam
xchg
xor
imul
inc
cmc
add
sar
imul
lret
loopne
dec
pusha
arpl
mov
lret
imul
loop
into
sub
ja
mov
dec
aad
cmp
loopne
into
daa
and
fdivs
xor
cwtl
lcall
aam
mov
leave
jb
cs
sub
sbb
js
mov
cwtl
inc
pop
cli
adc
outsl
call
xor
cmp
dec
data16
jmp
imul
and
mov
in
xchg
inc
pop
cmp
enter
xchg
inc
add
popa
pop
bound
push
dec
shlb
push
leave
call
xchg
orl
xor
push
xor
test
dec
inc
jmp
cltd
popa
pop
pop
mov
mov
jae
rorb
push
jbe
loopne
roll
out
add
pop
xor
pushf
jne
and
out
dec
xor
xor
sbb
icebp
andl
cmpsb
popf
bound
push
sub
jbe
lods
mov
mov
push
jl
xchg
lea
rcr
cmpl
inc
push
mov
das
dec
int3
mov
push
out
cli
jbe
mov
lcall
mov
add
dec
xor
mov
cmpps
pusha
xor
call
or
cmpsl
sbb
nop
fdivrs
inc
jecxz
addr16
xchg
outsb
pop
sbb
cltd
mov
arpl
xchg
fdivl
shll
inc
jne
xor
faddl
loope
jo
int
jg
xchg
lods
push
cld
in
adc
mov
adc
xor
and
int
adc
sahf
add
and
or
adc
push
and
ret
dec
daa
mov
cld
mov
jb
push
inc
adc
jns
ds
mov
imul
mov
stos
or
xor
iret
addr16
call
sub
push
push
les
in
sub
sbb
scas
jle
icebp
mov
aam
add
xchg
enter
ja
sub
mull
jmp
jge
inc
add
into
jg
int
xchg
push
adc
rolb
and
bound
or
xchg
cmpsb
std
lret
mov
mov
mov
sbb
cwtl
aad
pop
dec
xor
sub
test
push
ret
pusha
sbb
push
jge
iret
pop
call
mov
push
mov
xor
xor
dec
inc
out
out
push
mov
mov
xor
pop
mov
mov
push
popf
inc
dec
push
push
repnz
enter
xchg
add
xchg
xchg
into
outsl
inc
cmpsl
jle
notb
idivl
push
mov
or
mov
xchg
loope
xor
insb
adc
ss
cmpsl
dec
dec
roll
repz
mov
fsubrs
xchg
dec
dec
mov
aaa
sarl
pop
test
sub
std
push
fwait
or
jl
pop
dec
pop
add
jbe
int
push
int3
jg
and
pushf
fiadds
mov
and
push
out
dec
adc
icebp
or
jmp
dec
mov
mov
add
repz
icebp
insl
jb
dec
xchg
gs
jecxz
fsub
test
sti
mov
adc
jnp
and
add
popa
sarl
call
aaa
imul
loopne
es
loopne
orb
adc
mov
aas
mov
xchg
push
or
mov
inc
mov
jne
hlt
xor
or
xchg
mov
gs
dec
jmp
fcoms
scas
cmpsb
dec
pushf
addb
clc
inc
fbstp
out
lds
outsl
sub
test
cmp
inc
sbb
mov
mov
shl
ds
jno
frstor
test
mov
in
lock
andb
lcall
outsb
movsl
lret
push
out
xor
movsb
or
fistpll
pop
cmc
cmp
mov
push
mov
push
inc
mov
clc
cmpsl
cmp
imul
int3
packssdw
movl
sbb
ljmp
sar
mov
fs
daa
movsb
pop
jno
fcom
iret
pop
add
test
pop
into
lods
into
addl
in
jle
pop
rol
sbb
scas
xor
cmp
cld
test
mov
shll
cli
adc
mov
pop
add
mov
arpl
stos
pop
push
push
les
sub
sbb
push
mov
repnz
mov
mov
out
int3
pop
sub
sbb
cwtl
mov
pop
mov
mov
dec
inc
jae
cld
and
mov
adc
add
push
sbb
subb
mov
test
push
dec
mov
shrb
cwtl
add
dec
int3
ss
inc
in
rorb
stc
mov
xchg
scas
or
pop
sub
daa
mov
sub
cs
cmp
gs
lret
cmp
inc
out
inc
outsb
enter
aaa
push
fs
jecxz
les
push
in
jbe
jo
pop
movsl
xor
or
leave
add
aaa
pxor
adc
loope
inc
pushf
cld
adc
test
loopne
xor
cmp
add
add
adc
test
js,pt
sti
jp
push
outsb
ret
loopne
scas
lret
mov
mov
mov
mov
xor
xor
mov
push
or
xchg
rclb
jnp
mov
in
in
sub
pop
js
enter
out
adc
gs
lahf
sbb
ret
or
scas
ja
bound
frstor
lods
call
dec
and
sti
sub
xchg
pop
xchg
inc
or
adc
scas
pushf
jne
dec
subb
push
stos
add
push
aaa
loop
mov
sub
adc
insb
pop
cmp
scas
jle
mov
daa
pop
add
ret
xacquire
repz
push
push
mov
inc
mov
decb
stos
mov
scas
dec
sub
mov
push
inc
pop
dec
mov
pusha
jmp
orb
pop
pop
call
sbb
pop
and
in
or
js
sub
mov
out
shrb
xor
movsb
xchg
xor
push
adc
cmpsl
pushf
adc
cltd
add
inc
or
jl
mov
jp
aaa
xorl
mov
out
pop
sub
aam
popf
test
add
inc
mov
sub
pusha
iret
mov
pop
gs
mov
cmp
xchg
scas
xchg
push
cmp
repz
jns
sub
stos
scas
push
mov
jae
icebp
dec
test
imul
and
and
lods
fcomps
xchg
mov
sub
dec
push
out
test
enter
inc
mov
push
repnz
lods
ret
or
shl
cld
push
icebp
leave
int3
xor
mov
xchg
and
and
pop
call
or
push
push
fldl
scas
cmp
push
sbb
call
sub
fwait
sbb
mov
push
loope
jns
roll
adc
pop
in
sub
and
xchg
test
fdivrs
jbe
js
sbb
sub
cli
mov
and
push
aas
movsl
xchg
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
push
call
push
push
push
push
call
test
je
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
push
push
call
xor
pop
mov
pop
ret
nop
nop
sub
push
push
push
call
push
push
call
lea
push
call
call
push
push
push
call
cmpw
push
je
push
call
push
call
add
jmp
push
push
push
call
ljmp
stos
xchg
jmp
mov
out
les
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
dec
or
dec
xor
inc
imul
or
stos
xchg
aaa
cltd
imul
adc
sbb
nop
insb
or
push
lret
jne
sub
insb
inc
mov
mov
cs
icebp
jmp
mov
out
mov
arpl
out
add
outsb
sti
cmp
xorb
or
sbb
pop
in
enter
lock
xor
in
add
icebp
sti
dec
loop
push
movsb
mov
imul
xor
xor
xchg
aas
push
in
outsl
out
inc
jns
arpl
cmp
in
sbb
cltd
inc
lcall
out
cmp
inc
mov
add
je
icebp
add
jmp
push
or
dec
xor
add
data16
mov
out
cmp
add
icebp
jmp
mov
out
ds
add
icebp
sti
pop
mov
in
cmp
add
jmp
mov
out
cmp
add
imul
testb
icebp
add
loop
pop
movsb
or
pop
cmp
add
sti
pop
mov
out
cmp
add
jmp
mov
out
mov
repnz
jmp
test
out
push
arpl
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
sub
xchg
sbb
imul
icebp
adc
adc
mov
push
movsl
sub
out
sbb
loop
adcl
je
or
dec
imul
push
cli
jmp
mov
out
aas
arpl
add
jmp
mov
out
cmp
add
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
out
cmp
add
jmp
mov
mov
add
jmp
push
rclb
test
sbb
add
lahf
cmpl
aad
setge
pop
enter
jne
pop
xchg
lods
outsl
push
push
pop
xor
jbe
ja
push
rcrl
push
outsb
test
sub
loopne
sarl
idiv
repz
sub
mov
fisubl
fdivs
pop
cmc
pop
sti
pop
mov
sub
sub
mov
dec
shr
outsl
inc
andb
enter
aaa
push
cmp
test
pop
or
xchg
icebp
mov
aam
push
leave
pop
into
imul
xor
xchg
add
dec
in
adc
lock
gs
xor
ja
imul
mov
fdivrp
out
sbb
push
pop
je
imulb
xor
jnp
out
arpl
dec
stos
icebp
das
movsl
inc
mov
stos
popa
xor
push
sub
jle
leave
ds
xor
adc
div
jecxz
cld
roll
pop
outsl
in
jne
mov
stos
je
sbb
xchg
xchg
jnp
cli
dec
dec
mov
add
push
sahf
std
push
push
adc
xor
sbb
mov
mov
push
imul
shll
data16
sbb
sbb
push
ljmp
mov
shlb
movsb
fcoms
repz
ljmp
test
xchg
pop
cwtl
or
cmp
xor
xor
ret
pop
sub
mov
sbb
bound
sub
andb
lods
or
rcrb
cmc
dec
lds
iret
fistpl
jmp
sbbb
mov
stos
and
add
int
pop
ret
pusha
lret
pop
imul
jmp
and
aas
fsubr
and
push
sti
je
sbb
bnd
out
clc
out
das
popf
ds
lock
sbb
jb
mov
lods
out
repnz
call
jge
push
push
and
daa
mov
mov
mov
out
or
xor
dec
lret
outsl
push
test
sahf
das
mov
stos
mov
subb
xor
push
push
mov
adcl
mov
sti
movsl
outsb
rclb
into
mov
test
mov
adc
and
sti
jg
adc
pop
or
push
jl
test
mov
sub
inc
xchg
sbb
loopne
jns
clc
dec
out
cmp
or
mov
jbe
and
rcrb
addr16
mov
fwait
pushf
dec
xchg
add
cmp
adc
and
dec
pusha
xor
jmp
sbb
sbb
popf
xchg
cmp
and
outsb
jo
pusha
loope
daa
xchg
push
arpl
sub
push
dec
pop
pop
and
repnz
mov
sar
lcall
scas
jg
andb
xchg
test
and
test
xor
icebp
pop
pop
stos
test
dec
jl
jg
nop
sti
xchg
pusha
loopne
adc
je
dec
dec
push
mov
cmp
jmp
out
inc
sub
add
sub
mov
insl
das
cmpsl
mov
mov
mov
je
orb
inc
add
cs
test
bound
cmc
fmull
xor
mov
xor
jae
sbb
xor
jge
sbb
imul
mov
stc
movsb
sub
mov
pop
clc
negl
js
sub
mov
orb
pushf
mov
mov
in
xor
outsb
roll
or
pop
or
mov
sub
sub
movsl
ss
xchg
popf
pushf
and
or
push
std
mov
icebp
mov
lahf
aad
and
clc
int3
push
scas
inc
xor
mov
mov
adc
dec
testb
jg
adc
lds
cmp
out
scas
pop
mov
adc
fyl2xp1
aad
or
stos
cmp
sbb
out
cmp
fisttps
xchg
repz
mov
out
jg
xor
jns
jle
inc
cmp
test
out
mov
mov
int
push
and
mov
repnz
arpl
jo
ds
push
mov
jl
je
dec
cmp
idiv
sbb
xchg
std
outsl
sahf
sub
pop
or
xchg
jne
cmpsb
neg
lds
cmpl
loop
in
jbe
sbb
adcb
jnp
cld
cwtl
push
imul
push
call
add
add
ret
movsl
xchg
sbb
dec
xor
adc
dec
cltd
push
das
or
test
stc
and
inc
mov
lods
adc
or
je
popa
mov
pop
ficompl
insb
cmp
xorl
dec
dec
je
insb
add
in
dec
mov
rorl
dec
dec
fnstcw
cmpsl
pop
xor
xchg
sub
add
fnstsw
xchg
ss
add
xchg
fnsave
sbb
mov
stc
sbb
cmp
jp
add
inc
int3
pop
cmp
or
push
mov
in
in
or
jmp
lds
jp
rorb
xchg
lds
popa
jbe
imul
pop
inc
xor
push
out
dec
mov
jge
fwait
out
cli
xchg
xlat
clc
sbb
lcall
cmpsl
push
mov
cmp
pop
nop
dec
sbb
jp
dec
in
mov
xor
or
push
lock
pop
sbb
rcrb
jne
mov
push
mov
lods
adc
std
adc
cmp
scas
loop
xchg
inc
inc
sbb
out
insb
mov
push
fcomp
push
mov
mov
add
dec
test
ja
cld
jmp
jle
aaa
mov
inc
xchg
xchg
inc
lods
sub
pop
push
add
cmpsl
das
test
add
movsb
rsqrtps
inc
sub
sub
adc
test
lods
insb
pusha
mov
div
cli
lock
cmp
pop
clc
push
cmp
scas
lret
sbb
aam
cmpsl
dec
in
mov
sub
cs
test
pop
cltd
sub
jne
out
xchg
mov
addl
andl
in
or
fmulp
pop
push
ret
dec
rcr
andb
lcall
push
push
push
popf
ds
mov
cwtl
ret
sahf
sti
lods
xchg
sbb
pop
pop
std
aas
or
jecxz
inc
mov
sbb
push
mov
or
jae
int3
rcrb
mov
sub
data16
and
cmpsl
inc
ret
push
mov
vandnps
or
and
mov
jg
ss
sub
dec
in
mov
inc
outsl
xchg
lods
jo
add
fnsave
push
push
and
leave
dec
imul
mov
in
dec
xchg
sub
icebp
mov
pop
jmp
xchg
iret
sbb
cmp
mov
inc
and
lea
mov
mov
sub
inc
insl
ret
jbe
loopne
xchg
addr16
pushf
addl
mov
add
in
rcrb
mov
sub
lds
xchg
sub
out
iret
push
xor
pusha
dec
jb
pop
outsl
mov
dec
mov
or
pop
arpl
and
aas
pop
fsubrp
xchg
mov
sub
sub
mov
adc
stos
outsb
sub
leave
xchg
jne
jmp
repz
dec
mov
push
mov
dec
push
das
pusha
ret
lock
lods
pop
test
cmc
pop
xor
sbb
loopne
push
and
enter
popf
push
cmp
leave
stos
mov
fdivl
pop
cmpsb
push
rorl
fnstenv
rcrl
jo
mov
mov
gs
jno
in
lret
adc
mov
cli
jge
hlt
jbe
push
daa
sbb
xor
or
lock
stos
gs
cwtl
call
ss
cwtl
dec
inc
movsb
repnz
mov
fbld
fsubrl
mov
or
cmp
mov
xor
sbbl
push
icebp
add
pop
sti
mov
mov
int
gs
inc
pop
push
inc
insb
cmp
shlb
adc
ret
dec
push
sbb
stc
in
stc
dec
call
and
cmpsl
bsr
add
mov
mov
arpl
inc
cwtl
lret
jecxz
xchg
xor
mov
iret
imulb
xchg
ud2
dec
inc
mov
insb
sbb
xchg
fnsave
fcomp
mov
insl
inc
inc
fadds
or
push
lods
and
pop
pop
stos
int
cld
xor
inc
push
repz
inc
pop
and
mov
mov
jg
cmp
call
adc
push
movsl
inc
cmp
enter
call
xlat
or
dec
data16
lcall
je
les
add
pop
inc
pop
in
mov
dec
cmc
fcoms
loop
cmp
push
sbb
ja
cmp
cmpl
mov
mov
in
je
mov
sub
add
jne
imul
div
mov
in
add
movsl
test
xor
lock
cmp
rorb
xchg
rcrl
mov
mov
fistpll
push
bound
lcall
push
fadd
rcr
fildll
lods
mov
in
jno
xlat
out
cmp
xor
add
mov
fs
ret
ss
sahf
test
lret
mov
inc
popf
and
jne
int
mov
add
add
push
jae
fwait
and
sahf
cld
cltd
lods
mov
add
cli
loopne
jo
shlb
adc
test
xchg
dec
int3
sti
mov
idiv
into
pop
testl
outsl
outsl
fucomi
dec
test
pop
mov
dec
xchg
xchg
orl
xor
mov
test
rorl
xor
in
adc
sbb
mov
add
sub
xor
int3
push
jp
stos
movsl
or
addr16
add
rorb
jo
inc
adc
imul
je
sbbl
sbb
jl
fisubrl
mov
mov
jae
shll
je
das
aad
ljmp
sub
sbb
iret
mul
xlat
mov
xor
aaa
stos
jbe
mov
push
xchg
sahf
clc
mov
xchg
xchg
xlat
repnz
add
mov
sub
fildl
loop
dec
pop
lock
mov
jae
pop
cmp
mov
sub
in
loop
iret
sbb
fwait
stc
lret
cld
scas
es
fsubrs
jae
and
sub
adc
or
int3
out
dec
or
mov
mov
push
push
sbb
out
popf
xor
fisubl
adc
mov
lahf
add
sub
jo
pop
dec
faddl
lcall
fidivrl
dec
inc
dec
std
add
xor
repz
adc
xlat
mov
xchg
mov
in
mov
mov
or
push
xor
pop
subb
mov
xor
sbb
das
jb
inc
lahf
and
fs
push
ja
add
mov
je
and
in
gs
shll
ret
out
xchg
xor
mov
mov
sub
scas
arpl
aad
adc
imul
mov
insb
sub
jno
out
jge
xchg
outsl
ret
pushw
jbe
insl
jne
shll
testb
xchg
jbe
lds
push
jbe,pn
idivb
jae
fistl
xchg
adc
fldenv
jo
scas
imul
cli
mov
stc
jb
mov
xor
stc
push
xchg
outsb
sbb
xchg
xor
push
adc
int
mov
xchg
outsl
sbb
orl
or
xchg
sbbl
mov
add
aaa
or
mov
jp
aas
int3
mov
fidivrl
in
push
imul
ja
dec
loop
and
lods
out
mov
sub
popf
repz
aaa
or
xor
sbb
sub
push
icebp
lods
pop
cmp
scas
ja
jecxz
mov
push
sbb
pop
mov
test
shl
mov
and
movsb
pop
test
jns
into
xorl
pop
cmpb
adc
adc
add
call
int3
fdivrs
fcompl
or
cwtl
or
push
push
inc
add
sahf
mov
pop
rcll
icebp
dec
jl
roll
add
repz
fs
xchg
mov
std
loope
pop
sbb
or
xlat
fwait
pop
call
push
add
bound
fucomi
xor
cmp
sahf
insb
mov
sahf
pushfw
imul
ss
inc
adc
inc
inc
stos
popa
mov
mov
push
pop
sub
mov
les
or
dec
negl
dec
xor
push
sbbl
or
push
addr16
pop
outsb
lds
jbe
out
push
jno
cmp
notl
test
pop
cld
push
inc
xor
insl
cltd
adc
adc
pop
mov
outsl
scas
test
movb
pop
enter
cmp
cmp
and
out
aas
hlt
sbb
inc
mov
dec
inc
jo
imul
pop
cmc
aas
cmpsb
sub
mov
push
sbbl
jl
repnz
inc
pop
insb
out
push
or
pop
push
sbb
mov
sbb
imul
mov
xchg
mov
jecxz
outsl
xor
lock
inc
cmc
mov
pop
and
mov
mov
orl
xchg
adc
sub
jecxz
push
inc
scas
xchg
fdivl
or
lcall
stc
in
test
xchg
mov
repnz
xor
lds
adc
fcomi
or
aas
adc
daa
push
stos
and
or
aam
std
scas
cltd
inc
dec
add
mov
pushf
dec
iret
arpl
xchg
fdivrp
pop
loope
jne
xor
fists
out
jno
jmp
in
cmpsl
cmp
mov
push
xor
in
cli
cmp
cwtl
pop
xchg
push
fwait
popf
xor
and
cli
call
les
not
push
aad
aaa
inc
jg
or
jb
scas
stos
clc
lcall
mov
outsl
jne
push
push
push
call
push
push
call
xor
add
ret
nop
jmp
jmp
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
pusha
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
popa
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
popa
inc
add
popa
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
bound
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shlb
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addb
addb
addb
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
inc
add
addb
addb
addb
addb
addb
addb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
addl
addl
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
test
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
