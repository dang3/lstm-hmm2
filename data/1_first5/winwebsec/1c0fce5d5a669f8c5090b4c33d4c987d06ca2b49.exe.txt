push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
inc
cmp
pop
push
mov
stos
aad
add
call
jno
jo
adcb
jge
jbe
xchg
cmp
test
mov
adc
mov
mov
in
mov
adc
movsb
jb
push
jno
stos
fs
mov
ss
lods
lret
int3
out
rcll
xchg
loopne
inc
xor
stc
movsl
mov
dec
in
mov
pusha
sbb
xor
jle
and
fadd
adc
cli
ret
jge
clc
pop
dec
sub
xor
xchg
andl
or
icebp
or
add
imul
sbb
stos
add
mov
aas
adc
shll
pushf
fisttps
push
or
mov
test
shrb
lcall
test
hlt
jmp
mov
popa
mov
rcrb
mov
push
lahf
rolb
xchg
hlt
pop
jo
es
mov
or
xchg
inc
ret
data16
add
push
add
jnp
xchg
mov
cs
ficoms
add
jg
xchg
dec
xchg
add
mov
xchg
push
pop
sub
adc
mov
cld
gs
and
dec
push
mov
icebp
or
or
outsl
sub
jmp
jg
stos
test
adc
pop
aas
sub
xor
std
inc
lahf
push
mov
cmp
cmp
mov
dec
bound
hlt
xchg
mov
hlt
jge
outsb
lea
push
pop
jne
je
cli
loopne
idivb
nop
xor
roll
into
daa
imul
in
jb
adc
xor
cmpsl
stos
outsb
jbe
jmp
cli
popf
scas
mov
ret
add
mov
mov
xchg
loopne
xchg
sbb
insb
loopne
lret
mov
mov
scas
fldl
outsl
cs
lcall
gs
imul
rolb
jbe
out
divb
xlat
popl
fs
push
shrb
push
sbb
imul
imul
outsl
xchg
xchg
mov
sbb
mov
fstps
fisubl
std
adc
mov
in
aaa
mov
dec
inc
icebp
push
mov
insl
jbe
stos
xor
js
stc
pop
xlat
cs
jecxz
mov
jge
pushf
in
dec
cmp
rcrl
popf
mov
adc
push
repz
call
mov
and
fs
out
fdivl
fs
dec
arpl
cmc
add
inc
stos
add
pop
stos
xchg
mov
out
jle
adc
arpl
mov
and
pop
popa
push
pop
dec
and
push
js
sbb
mov
sub
xchg
push
xchg
cmp
pop
push
pop
insb
sub
or
arpl
xchg
sub
js
shr
cmp
mov
cwtl
cmp
xor
adc
pop
and
push
xchg
adc
jl
mov
push
inc
mov
in
xchg
mov
and
xlat
clc
lcall
add
lcall
pop
sbb
leave
xchg
mov
and
adc
pop
and
jge
lea
adc
sub
es
leave
out
xchg
or
xchg
out
fisttps
insl
push
pop
out
imul
lret
data16
xor
ljmp
push
lds
xlat
sub
je
sub
imull
pcmpeqb
dec
mov
or
dec
stos
in
xchg
pusha
mov
and
aaa
icebp
cmp
hlt
stos
stos
inc
pop
pushf
xorl
pop
mov
pop
push
inc
mov
daa
in
push
inc
pop
insl
fwait
pop
rcrl
xchg
dec
cltd
jne
lea
rcl
arpl
data16
sbb
test
pop
loope
outsb
push
pop
xchg
sub
repz
sti
out
sbb
push
mov
ss
push
and
push
lds
add
fucom
lds
mov
or
cmp
lods
negb
xchg
cli
xchg
push
shlb
push
mov
add
or
jbe
xchg
sbb
test
std
mov
imul
dec
inc
xchg
in
pop
dec
xorb
mov
add
and
mov
pop
ja
add
sub
mov
dec
stos
addr16
jle
push
inc
sbb
gs
pop
cmp
push
idiv
and
leave
dec
pop
hlt
xchg
clc
lods
lret
pusha
lock
test
push
movsl
lock
cmp
gs
sbb
inc
out
sbb
lcall
mov
sahf
cs
jecxz
mov
xor
loop
cmp
stos
dec
mov
test
sar
mov
cmp
and
pop
stc
dec
mov
into
push
lods
std
mov
pushf
mulb
pop
loope
aas
aaa
dec
xchg
scas
iret
ljmp
pushf
test
sub
bound
je
mov
jne
mov
pop
dec
xor
jns
xchg
stos
push
pop
mov
movsb
dec
dec
ret
sbb
es
mov
jae
imul
pusha
in
xor
xor
cmp
rcll
and
fcmovnb
out
sbb
hlt
stos
and
pop
add
jo
mov
add
push
add
push
fidivrl
mov
out
iret
outsl
sub
rcrl
test
test
xorb
out
repnz
sbb
ficoms
js
fistpll
sar
fisubrl
add
pop
loop
in
insl
push
out
popf
mov
xchg
xchg
ret
cmp
mov
std
fisttpll
cmpb
mov
sub
push
leave
jp
xor
cmp
js
stos
icebp
sti
insb
outsl
pop
mov
add
jns
push
jp
jns
mov
xor
or
les
insb
dec
pusha
jmp
repz
and
fwait
xchg
mov
sarl
pop
out
lahf
xchg
sub
test
add
fwait
lret
push
andb
push
pop
aaa
jecxz
pop
popa
gs
in
hlt
ret
jb
sahf
mov
invd
in
mov
mov
mov
mov
ret
out
mov
or
push
test
leave
bound
xorl
js
sti
dec
pop
test
cwtl
and
dec
xchg
lock
inc
cmpsb
cmp
mov
lahf
or
fcomps
pop
fstps
jmp
je
lcall
les
dec
jmp
and
mov
mov
dec
dec
mov
aaa
movsl
xor
movaps
pop
test
in
push
mov
push
or
or
push
jbe
dec
mov
jle
bound
inc
insl
or
es
sbb
mov
popa
mov
pushf
jbe
mov
sbb
scas
popa
lock
jp
aam
dec
call
xor
roll
sbb
inc
jmp
push
or
cmp
xor
int
lcall
mov
or
sub
and
imul
loope
xor
dec
mov
in
xchg
out
jae
mov
out
aaa
pop
mov
adc
xor
lds
cwtl
int
mov
inc
mov
xor
outsl
pushf
xchg
dec
cwtl
cmpsb
scas
icebp
scas
adc
jle
stos
mov
jge
cwtl
mov
or
cmp
add
lahf
mov
ret
xlat
in
out
jle
and
sbbb
ljmp
fistl
outsl
xchg
sub
mov
lret
out
sbb
aas
enter
ljmp
movsb
jge
mov
cmp
mov
test
fsubs
push
scas
mov
mov
inc
mov
call
mov
mov
sbb
movsl
or
dec
arpl
test
xchg
pop
cmp
xchg
mov
insl
inc
jne
mov
lods
sbb
incb
cmpb
xor
jbe
push
leave
dec
jmp
in
xchg
mov
mov
push
in
cmp
test
xchg
mov
xor
fidivl
sub
mov
je
inc
arpl
insl
lock
std
jae
nop
push
or
fwait
adc
out
push
fisubs
iret
dec
lahf
mov
ret
aaa
div
adc
xor
mov
dec
lds
push
adc
mov
sbb
ljmp
dec
lret
mov
xchg
fisubs
sub
loope
lret
adc
add
ret
mov
xchg
repz
arpl
das
cmc
push
add
sub
or
xor
movsb
sbb
mov
addr16
movsl
inc
leave
xchg
outsb
or
adcl
enter
lds
inc
stos
mov
cmpb
dec
or
scas
adcl
or
cld
cmc
lea
out
push
push
and
out
xor
ds
dec
xchg
bound
jnp
movsl
inc
cmpsb
adc
pop
mov
inc
inc
push
xchg
into
jnp
and
and
fwait
xorl
mov
inc
or
int3
inc
xor
push
movsl
and
sub
cmpsb
inc
addb
mov
test
push
push
mov
daa
idivl
je
dec
push
loope
divb
push
adcb
dec
and
mov
shlb
enter
push
inc
arpl
lock
dec
ffreep
aam
dec
jno
popa
pop
cmc
stos
dec
push
sti
outsl
sub
in
bound
add
lret
movsb
push
lods
jo
popa
pop
in
jne
mov
xchg
cmc
lahf
dec
ficoml
arpl
popf
xchg
mov
mov
insl
jo
test
sahf
cmp
dec
iret
subl
pop
push
push
imul
sub
mov
mov
cld
pop
ret
mov
insl
aaa
cs
frstor
pop
jg,pt
jmp
push
daa
mov
inc
push
int
and
push
dec
cmp
inc
pusha
lcall
scas
xor
add
ret
lcall
test
add
push
adc
les
rcrl
jle
dec
and
mov
fcomi
mov
cmp
lahf
xchg
or
cmp
insb
test
aaa
shll
pusha
loop
data16
pop
lcall
cmp
shl
cmp
jl
imull
call
add
les
or
pushf
movsb
inc
out
cld
pop
cld
cvttps2pi
mov
dec
add
mov
sub
paddsw
add
test
daa
or
mov
xchg
repnz
fs
mov
sbb
jecxz
inc
adc
ss
pop
ja
pop
xchg
add
dec
daa
ljmp
insb
fabs
fcom
fucom
dec
pop
cmp
inc
xchg
cs
xchg
orl
outsl
loop
ja
lret
cli
mov
mov
adc
or
push
test
sbb
sti
leave
je
sub
or
test
rcll
push
xor
jecxz
mov
out
add
dec
and
lea
xor
and
cmp
mov
mov
dec
int3
daa
ret
test
dec
add
cs
sub
rorb
sbb
xchg
cmc
jnp
mov
mov
repz
shll
rep
pop
test
iret
mov
cmpsb
mov
push
mov
ficoms
xlat
add
ss
pop
cmc
or
imul
add
ja
icebp
xchg
mov
xchg
xchg
movsb
adc
adc
or
mov
shr
inc
mov
add
es
jnp
mov
orb
stos
xchg
outsb
mov
mov
sbb
leave
or
fs
xchg
fdivrl
out
lcall
push
out
jle
pushf
sahf
shrb
sbb
push
sti
daa
jae
jecxz
jnp
test
mov
mov
jmp
mov
adc
adc
cmp
pop
inc
es
dec
adc
xchg
rol
fs
sub
jle
ret
sub
lods
inc
test
pusha
mov
dec
sbb
cwtl
mov
sbb
test
ffreep
push
push
mov
jno
icebp
or
dec
cs
cs
cmp
mov
cld
push
inc
aas
decb
shl
lods
gs
imul
ds
cmp
daa
or
fdivr
jecxz
fstl
iret
dec
dec
sbb
shl
mov
add
mov
insl
push
or
cmp
push
negb
xorb
adc
dec
icebp
in
mov
ds
fwait
repnz
repnz
enter
mov
and
xor
xchg
pop
dec
rep
xchg
and
cmp
cmpsl
dec
scas
jno
enter
add
popf
push
lea
pop
pop
test
and
mov
jg
inc
cld
add
pop
add
insl
cld
js
inc
into
pop
dec
xorb
sahf
out
clc
xorl
or
mov
aas
mov
shrl
repz
pop
aas
push
test
mov
pop
cmc
cmc
add
scas
add
add
mov
stos
push
push
cmp
mov
jecxz
rorb
mov
ret
test
push
xor
insl
push
insb
mov
fisubrs
arpl
test
jo
and
dec
notb
adc
add
outsb
ja
sub
mov
xchg
mov
dec
cmp
stc
push
in
mov
cld
aas
pusha
mov
lcall
pop
inc
cltd
mov
aad
into
push
arpl
cmpsb
mov
dec
outsl
fcmove
xor
test
in
adc
xchg
add
push
cmpsl
mov
push
js
adcl
push
repz
icebp
nop
jae
rcll
and
enter
sbb
fcmove
cmc
dec
sti
mov
adc
mov
mov
inc
test
xor
in
mov
mov
xlat
pop
adc
lret
and
and
mov
popa
xor
xchg
and
cli
mov
push
fidivrl
in
jb
cmp
jo
mov
push
dec
xor
and
mov
repz
pop
daa
es
inc
fwait
mov
or
mov
out
xchg
mov
outsl
mov
out
movsb
xor
sbb
jbe
mov
xorb
hlt
dec
xlat
sbb
into
xor
mov
inc
aad
or
fisubrl
ret
and
xor
cmp
test
mov
sarb
pop
mov
clc
sub
mov
cmp
je
pusha
pop
mov
mov
mov
add
cwtl
xchg
dec
cltd
test
mov
mulb
push
push
sub
add
andb
in
lock
push
lods
lds
icebp
clc
out
test
in
cmp
leave
fwait
xchg
popa
cmpsl
fs
or
sub
into
jae
dec
push
sbb
or
mov
sti
or
lea
xchg
inc
jge
xchg
mov
mov
cmpsb
bound
les
mov
sub
mov
and
das
sti
push
jne
xor
neg
adc
sub
repnz
and
fisttpll
pop
pop
add
jno
push
inc
mov
and
out
mov
in
cld
xor
out
jmp
shrl
xchg
jns
add
and
dec
movsl
lret
lahf
out
cltd
testl
jmp
cmp
mov
pop
shl
adc
in
outsl
or
cmp
sub
cmp
mov
in
enter
cmpsl
pop
sub
or
js
push
das
adc
orb
loopne
and
int
pop
fcomps
in
out
aaa
arpl
lret
pop
xchg
xlat
out
mov
mov
mov
fstpl
jp
mov
xor
std
mov
rolb
adc
inc
cmp
mov
inc
clc
inc
daa
test
cmp
or
mov
push
in
imul
inc
sbb
and
and
mov
pushw
push
xor
popa
ja
sahf
and
cmp
aaa
sbb
mov
ret
enter
loop
push
icebp
or
jne
das
push
fs
jle
sbb
jp
dec
and
mov
in
push
or
sub
fwait
out
sub
mov
int
andb
xchg
mov
push
shl
in
aam
inc
int
jl
sbb
lock
or
xor
cmpsl
cmp
jmp
or
scas
sub
rcrb
push
jmp
movsl
push
sbb
mov
out
pop
int3
xchg
push
xchg
leave
jp
sbb
adc
mov
enter
rclb
jle
aad
pop
push
mov
dec
lock
int3
ret
sbb
sub
imul
push
push
pop
std
scas
gs
sbbb
push
xor
test
insb
jecxz
xchg
clc
es
stc
in
fistpll
ss
or
inc
loop
or
push
lods
pop
frstor
stc
xor
jmp
xlat
pop
jbe
int
jo
and
insb
js
aas
or
push
inc
hlt
clc
jnp
mov
and
das
mov
imulb
loop
inc
mov
push
sub
lods
arpl
dec
mov
push
mov
fmul
and
sbb
lahf
or
mov
xchg
inc
add
fsubrl
mov
mov
adc
jae
stc
bound
cltd
js
sbb
xor
scas
es
cwtl
adc
sub
ljmp
push
fimull
aad
add
xchg
cli
push
xor
sub
test
jge
cmp
jb
in
add
nop
cmc
call
push
push
push
cmc
fcmovnbe
inc
repz
repz
cmp
pop
cli
adc
add
pop
pop
fisttps
mov
xor
arpl
addr16
inc
repnz
icebp
push
call
mov
pushf
loopne
cwtl
jb
popa
sub
mov
add
jl
pop
ret
lds
mov
and
xchg
lret
sbb
jbe
xchg
cmc
mov
dec
add
out
popl
pop
clc
sbb
pop
out
mov
push
in
test
push
mov
sub
pushf
scas
fwait
nop
adc
push
add
movsl
packssdw
dec
jecxz
add
je
shr
xorw
sbb
dec
push
mov
clc
fcmovu
jno
cmpsb
lret
out
pop
lock
icebp
aam
leave
cmp
rcrl
sub
lods
testb
inc
inc
mov
std
jno
arpl
and
push
lods
movsl
cltd
mov
outsb
or
mov
mov
lret
in
xor
testb
inc
mov
in
xchg
adc
push
lret
inc
stos
enter
and
into
gs
sub
sbb
sahf
leave
mov
dec
lcall
mov
mov
cmp
test
sbb
jns
jl
test
push
push
mov
xor
xchg
jmp
jb
mov
pop
pop
js
add
jbe
cmp
test
loopne
inc
dec
and
push
enter
sub
lock
mov
inc
push
pop
and
test
xor
mov
test
mov
mov
frstor
in
aam
adcl
adc
dec
xor
cmpb
sti
mov
cmp
or
scas
push
add
jbe
jmp
sbb
push
pop
outsb
movd
or
mov
push
stos
mov
cli
out
scas
test
out
and
or
lea
clc
sbb
push
add
mov
jg
inc
int3
sbb
pop
fistl
mov
or
pop
int3
roll
call
adc
push
inc
cmp
mov
movsb
xor
out
incb
int
fprem1
inc
mov
movsb
mov
and
jae
cmp
fcoml
mov
jg
outsl
dec
jnp
mov
pop
call
xchg
xor
rorl
jp
pop
add
out
inc
int
cli
negb
sub
clc
pushf
pusha
js
test
mov
or
iret
sbbl
xlat
mov
pop
pop
xchg
in
mov
xor
pushf
push
cli
test
rcll
iret
gs
adc
or
shlb
cmp
arpl
iret
ret
xchg
inc
ret
addr16
dec
and
sbb
mov
clc
ljmp
push
movsb
push
sbb
xor
fidivrs
rcrl
xchg
mov
cmpsb
jmp
test
mov
pushf
push
sub
push
leave
lock
jecxz
lds
push
mov
pop
jno
inc
cli
in
mov
imul
push
push
sbb
rol
push
pop
in
imul
insl
push
lret
mov
jns
js
adc
push
fistps
adc
push
xchg
cli
cli
pop
xchg
enter
ds
jle
daa
cmp
jb
xor
insl
test
inc
xor
pop
cmc
movsb
insl
jae
push
cmp
xor
push
shl
call
stos
icebp
jl
pop
out
adc
test
sub
fiadds
jbe
stos
pop
xor
sbb
pushf
dec
pop
sub
xchg
push
ds
jnp
or
sti
and
or
inc
mov
xor
mov
xor
lcall
sbb
cmp
or
xor
inc
and
cmp
aas
aaa
cmpsb
xor
xchg
repnz
or
sbb
pop
les
sbb
lcall
adc
adc
sbb
push
rclb
jg
or
rolb
add
and
and
jae
and
out
xor
cmp
push
pop
dec
jge
adc
pop
sbb
fists
or
fsubs
add
mov
inc
int
negl
adc
mov
push
mov
daa
xor
mov
mov
pop
rol
sub
lds
add
mov
add
jne
ja
fsubl
pop
mov
loop
pop
pop
mov
sbb
mov
cmp
inc
pusha
cmp
fwait
push
cmp
inc
leave
cltd
pop
mov
push
leave
dec
stc
repnz
jg
pop
repnz
xchg
rcrl
cmpsl
pop
and
add
fisubrs
fcmovnbe
sti
add
cmp
jnp
enter
lret
sbbb
loopne
push
xchg
addr16
fstpt
add
popa
push
or
adc
sbb
cmp
orl
insb
leave
bound
sarl
outsb
ljmp
jno
pop
push
push
pop
mov
loopne
js
push
sub
ds
jl
sbb
pop
call
test
incl
xchg
or
mov
mov
cmp
xor
adc
cmp
inc
mov
cmpl
dec
sub
mov
push
xlat
xchg
dec
sub
clc
test
mov
cli
xor
lods
xlat
dec
xor
adc
add
or
mov
dec
mov
nop
adc
sub
xor
xor
repz
or
sbb
sti
dec
inc
jno
jge
jge
adc
cmp
andl
loopne
jne
addr16
xlat
sbb
dec
cmpb
ret
dec
stos
pushf
sub
adc
adc
xor
jle
je
adc
in
xlat
cmpb
inc
fdivp
rclb
loope
xchg
out
pop
or
lock
mov
arpl
leave
add
cmp
jg
mov
mov
test
mov
loopne
insb
jae
hlt
mov
push
dec
fsts
pushf
js
mov
add
xchg
xor
mov
repnz
jecxz
loopne
sub
add
decb
loopne
xorl
xor
adc
xchg
and
push
repz
mov
mov
out
pop
lods
dec
test
xorl
mov
jmp
fdiv
sahf
dec
mov
jge
dec
jbe
leave
inc
aam
and
and
jnp
in
mov
lods
stos
sbb
mov
xor
inc
or
jne
icebp
fsts
xor
pop
mov
ja
stc
pop
fildll
lret
push
ss
nop
orb
adc
out
dec
jle
cld
xchg
sbb
pusha
pusha
out
and
xchg
jmp
subl
xchg
mov
lahf
ljmp
insb
jle
and
fdivr
pop
lret
jne
rolb
or
jle,pn
negl
push
cmp
ds
or
jns
xor
mov
insl
cmpl
pop
dec
cltd
push
xorb
dec
mov
mov
jmp
out
mov
sub
mov
and
scas
lods
loope
xchg
mov
and
pusha
shll
sub
sahf
loope
in
add
cmp
mov
jg
push
enter
fisttpl
inc
leave
jae
add
insl
cmp
cwtl
cld
out
xor
mov
lret
adc
sbb
repnz
or
cld
fdivr
dec
xchg
hlt
push
and
cmp
sub
sbb
ss
cmpsl
mov
pop
repnz
lods
sub
fld
ja
mov
mov
pop
divb
rcrl
adc
xchg
inc
sbb
inc
dec
outsl
mov
jecxz
jge,pt
lods
cmp
dec
sbb
fldt
outsl
lds
dec
sub
ljmp
mov
sub
pop
pop
data16
xchg
test
lds
leave
dec
pop
fstps
sbb
nop
rcrl
sbb
andl
jmp
inc
lods
pop
lcall
xor
push
mov
lcall
lcall
aas
xchg
jge
push
mov
int
filds
mov
dec
inc
mov
int3
shlb
hlt
xor
adc
rolb
add
lea
mov
inc
mov
add
shrl
push
hlt
clc
nop
dec
test
shr
ficoms
cs
inc
das
push
decl
pop
add
jbe
cmc
test
inc
dec
cli
ret
jo
jecxz
mov
imul
dec
inc
aam
cwtl
pop
insb
sbb
into
sbb
cltd
addb
sub
adc
pop
gs
rorl
inc
test
enter
in
sub
out
pop
and
test
jl
sbb
hlt
cs
inc
jg
mov
cmpsb
pushf
out
out
inc
push
in
cli
dec
push
mov
lods
loopne
cwtl
xchg
push
jo
sub
mov
popa
push
push
call
or
andb
decb
pushl
push
or
dec
decl
add
push
out
jns
test
cs
mov
mov
and
cmp
sbb
rorb
cld
lods
dec
pop
xor
mov
dec
jns
cli
push
scas
aam
repz
mov
xor
and
push
or
sub
fcoml
xchg
pop
fmul
enter
push
pop
cmp
dec
sbb
gs
push
jge
and
fwait
lods
lods
movsl
stc
sub
add
or
into
mov
movsb
cmp
rclb
fnstenv
or
test
cltd
sahf
xchg
rolb
popf
scas
in
repz
insl
inc
je
mov
repnz
sahf
xor
shl
cmp
call
sbb
jle
nop
dec
rorl
iret
mov
sub
jne
fstl
xor
aas
push
jne
jae
sbb
push
jns
out
mov
pop
pusha
outsl
xlat
pop
pop
cli
dec
push
adc
sub
hlt
mov
sub
incb
jnp
pop
mov
xlat
adc
push
aam
popa
ds
insl
sub
ret
or
cld
gs
sti
mov
out
repnz
cmp
test
dec
cmp
mov
dec
cltd
pusha
add
lret
rorb
add
xor
jne
addr16
add
inc
push
mov
inc
add
or
ds
jp
add
cwtl
out
xchg
jae
pop
mov
pushf
sub
push
push
xor
mov
cmpsb
sub
mov
sbb
pop
fwait
xchg
xor
or
sbb
sarl
jmp
add
pop
fnstcw
mov
sti
dec
cmpsb
aam
in
lods
xor
dec
inc
imul
icebp
dec
orb
inc
aad
xor
stos
and
xor
cmp
dec
pushf
sub
imul
pop
ret
xchg
mov
mov
lock
hlt
mov
mov
repnz
mov
sbb
jl
call
shlb
sub
test
stos
leave
dec
rcll
or
cmp
and
sti
rolb
jp
leave
push
int
stos
in
sub
push
xor
sahf
jb
addl
mov
xlat
jno
cmp
sub
sub
inc
mov
loope
movsl
jno
or
aam
add
inc
lods
sub
and
je
repz
cwtl
dec
sbb
sbb
mov
aam
insb
cmpsb
xor
mov
lods
pop
inc
xchg
inc
pop
mov
mov
cmp
mov
rclb
dec
aam
mov
sbb
mov
loop
mov
jl
pop
inc
lcall
jp
sbb
jge
mov
push
bound
jnp
inc
inc
xchg
add
mov
repnz
out
rorb
push
inc
scas
aad
stos
and
inc
dec
or
test
cmc
fwait
push
fwait
add
fadd
adc
lea
add
popa
cmpb
popa
dec
sub
gs
gs
mov
sahf
outsl
push
popa
les
mov
rorb
pop
mov
jnp
shlb
icebp
in
dec
add
pop
and
imul
and
or
faddl
outsb
or
cli
sbbl
sbb
fisubrl
icebp
pop
out
dec
push
std
lret
sbb
or
arpl
fwait
push
jnp
sahf
jns
aam
mov
xchg
fwait
jp
or
scas
ljmp
in
push
mov
sbb
mov
xchg
cwtl
pop
xor
clc
xchg
sahf
insb
jp,pt
rolb
nop
and
jbe
and
gs
movsb
cmc
lods
pop
push
pop
nop
cmp
mov
mov
sub
mov
js
xchg
jb
test
out
add
inc
adc
mov
pop
cmp
push
push
iret
dec
sbb
dec
sub
es
rcll
xchg
sub
rorl
pop
cmp
ret
adc
rolb
rclb
inc
cmp
loope
add
mov
lret
fwait
adc
mov
sub
mov
dec
int3
in
std
int3
push
das
cmp
ljmp
das
movsb
and
shrl
addr16
add
pop
mov
jmp
jg
aas
aad
inc
js
push
pop
sub
pop
movsb
icebp
fwait
add
leave
sbb
icebp
push
xchg
xchg
adc
sbb
pop
mov
sti
inc
sub
push
jb
pop
pusha
and
mov
push
add
fprem1
aam
mov
out
cmp
jno
pop
jb
mov
adc
xor
push
push
jmp
addr16
add
or
lcall
mov
mov
push
sbb
repz
cmp
adc
dec
sbb
ds
les
sub
jge
xchg
jp
movsb
and
rol
sub
ss
testb
fisubrs
into
sbb
xchg
or
mov
dec
jl
push
std
pop
nop
push
cmp
dec
mov
or
notl
xchg
or
stc
in
aam
cmp
in
pop
add
adc
pop
leave
dec
xor
jmp
lods
shll
xor
cmpsb
adcb
lods
clc
in
dec
pop
shrb
loopne
add
inc
jno
mov
cmc
and
and
cmp
out
shrl
call
push
mov
mov
xchg
sub
cli
jmp
push
inc
fsubl
inc
insb
into
cmc
insl
fldcw
lcall
adc
mov
adc
das
mov
mov
fbstp
repnz
pop
sbb
shrl
popf
imul
in
imul
xchg
mov
jecxz
cmp
xchg
lock
mov
fsubrp
pop
push
lods
repz
or
or
xchg
les
cs
imul
ljmp
xadd
xchg
stos
sahf
test
add
je
mov
movl
out
js
mov
mov
in
mov
in
cmpsl
and
imul
mov
cmpsb
into
or
add
test
fs
xor
sbb
pop
pop
out
sti
and
es
mov
xchg
rorb
cmp
mov
dec
imul
adc
daa
hlt
sub
xchg
xchg
out
je
ret
or
pop
mov
subb
mov
jnp
cmc
xlat
mov
imul
adc
insb
jno
dec
or
jae
pop
mov
mov
lods
mov
das
scas
adc
mov
fistpll
xlat
jo
sbb
sub
aas
dec
jnp
cmp
xchg
add
das
rcll
jge
scas
push
loope
ret
mov
sub
push
cmp
pop
pop
in
loopne
aam
push
jg
mov
jg
add
sbb
js
dec
lret
cmpsl
gs
fcmovnu
xchg
sbbl
cmpsb
mov
mov
addr16
test
push
into
pop
push
jge
pop
lret
ljmp
mov
xor
push
sbb
dec
xchg
mov
inc
mov
jno
lods
cmp
add
inc
lods
nop
lds
mov
pop
sub
inc
ret
fidivs
int
push
fsub
sahf
in
gs
jp
sub
mov
dec
addr16
jns
insl
lahf
jb
insb
mov
dec
push
inc
or
daa
mov
lods
add
xor
inc
aam
xchg
cmp
adc
stos
loop
test
cmp
fcomps
add
outsl
cwtl
mov
inc
out
add
xchg
lahf
jl
bound
adc
inc
dec
cmp
scas
repnz
insl
fists
ds
mov
or
cmp
xchg
test
andb
inc
lret
adc
mov
aad
and
mov
push
aas
ja
push
or
cwtl
mov
cmpsb
outsb
mov
xor
lret
jecxz
fldcw
jl
loop
std
lret
or
mov
iret
jmp
mov
imul
popa
rcrb
sbbb
xor
pusha
jns
mov
push
and
data16
cmp
aam
mov
in
shlb
push
push
xchg
mov
cli
mov
scas
mov
aaa
inc
mov
cmp
mov
mov
nop
pop
shr
xorb
icebp
inc
clc
divb
adc
inc
inc
lret
out
lock
mov
std
and
aad
rcll
sbb
adc
fwait
leave
pusha
mov
push
dec
pop
ret
les
add
dec
loope
sub
sti
adc
add
sub
sti
das
jl
mov
jecxz
inc
fbld
and
adc
int
or
jb
js
xorb
jge
xor
sbb
sub
push
inc
sub
pop
cltd
stc
outsb
and
cli
push
pop
out
les
push
sti
mov
inc
sbb
ret
push
xchg
nop
and
pop
mov
mov
jb
jnp
out
mov
jo
insl
subb
bound
clc
ja
adc
ss
aaa
xor
insl
inc
fdivs
mov
mov
iret
mov
lea
mov
dec
cmc
addr16
jb
repz
pop
or
pop
cltd
jge
icebp
std
hlt
inc
and
pushf
xchg
mov
dec
xor
xorb
pop
sub
int3
loop
psrlq
pushf
jno
test
xchg
inc
jp
push
xchg
push
pusha
sbb
insb
pop
int3
xor
bnd
insl
jae
fistpl
pop
aad
and
divb
cmp
mov
pop
push
mov
pop
adc
movsl
adcb
clc
fnsave
mov
mov
mov
mov
xor
in
fidivs
mov
test
je
mov
mov
jnp
scas
jne
mov
ja
mov
ljmp
adc
pop
lret
push
inc
ficoms
dec
shrb
inc
lods
pop
cmp
mov
or
mov
nop
cltd
pushf
addr16
push
inc
lahf
cmpl
mov
mov
test
pushf
sti
cmpsl
ror
and
mov
xor
jns
ljmp
sub
shll
push
cmp
repnz
adc
iret
push
cmp
dec
out
lds
and
jb
inc
cs
lods
pop
jle,pt
bswap
rcll
movl
fbstp
cs
scas
addb
add
stos
aam
shll
insl
mov
sub
fwait
xchg
sbb
xchg
imul
pop
fstl
popa
pop
dec
jmp
mov
repnz
neg
mov
ret
daa
ja
nop
jle
lock
pop
jge
mov
xor
adc
in
addl
xchg
mov
or
or
dec
daa
mov
sbb
push
mov
test
jb
mov
add
jns
out
ss
rolb
rorb
stos
pop
xor
int3
adc
xchg
mov
mov
stos
fstpl
push
addb
aam
adc
mov
adc
pushf
sub
mov
mov
mov
cmc
iret
adc
push
jp
daa
in
dec
push
scas
jns
sub
enter
dec
pop
jge
inc
jbe
iret
or
xor
add
dec
and
jle
dec
cwtl
rcll
sti
pop
inc
fcoms
push
and
mov
push
insb
lea
aas
insl
cmp
and
lock
push
add
adc
daa
jns
outsb
iret
lock
push
loope
push
mov
dec
cli
ss
clc
dec
cmp
dec
xchg
aaa
jno
xchg
add
mov
pop
je
or
pop
pop
sub
pop
xor
out
sub
sti
shrl
addb
sbb
fisubrs
mov
and
jl
mov
das
mov
pushf
mov
xchg
popf
cmp
xorl
push
rolb
or
mov
mov
lods
popw
movsl
inc
or
mov
lret
outsb
mov
bound
js
xor
cli
outsb
outsl
adc
mov
int3
jne
mov
dec
loopne
test
jle
test
imul
pop
daa
idivl
cld
mov
sub
inc
stos
cld
jns
adc
repnz
imul
sbb
ror
sub
sub
adc
repz
mov
adc
cs
push
jmp
les
dec
js
shlb
jnp
jecxz
fdivr
pop
mov
aad
sbb
es
dec
dec
dec
dec
ljmp
xlat
jbe
out
jbe
dec
mov
xchg
gs
repnz
pop
adc
pop
pop
xchg
mov
jns
jno
push
xchg
nop
or
aam
pop
push
call
sbb
mov
lret
cld
iret
mov
jecxz
push
dec
es
lahf
dec
sarw
out
lahf
dec
fcom
or
pop
dec
movd
add
sub
mov
push
scas
in
jns
stos
lret
jbe
push
daa
xor
les
fisubrs
xchg
dec
adc
mov
sub
ljmp
jns
cwtl
jbe
cli
andb
push
mov
inc
push
int
mov
sub
push
stc
into
cmp
shl
pop
sbb
sub
cmp
sti
inc
mov
or
fsubrl
shll
sub
shl
mov
addl
int3
xchg
dec
jno
push
jne
mov
add
add
xchg
xor
push
xchg
pop
jl
daa
push
mov
xchg
inc
int3
call
dec
loope
add
fists
lret
bnd
adc
sbb
xchg
and
sub
ds
xchg
call
es
insl
dec
mov
mov
mov
lahf
popa
icebp
xorb
push
mov
adc
cltd
pop
vzeroupper
int
loope
outsb
dec
imul
scas
or
jle
push
adc
cwtl
or
cmpsl
ficompl
cmc
pop
andl
lcall
faddl
sti
push
das
cltd
xchg
lret
mov
je
stos
pop
push
xorb
popf
and
lods
mov
cld
push
aas
mov
jg
mov
xchg
js
sub
test
repnz
arpl
or
jno
sti
test
push
sub
in
scas
shlb
fsubr
aad
insb
fdivl
inc
insb
fcomip
mov
jmp
mov
mov
adc
fidivl
arpl
shlb
imull
loop
imul
lea
inc
pop
lret
out
lock
push
inc
add
loop,pn
mov
push
jo
bound
test
leave
or
jae
test
xlat
aaa
mov
jl
dec
pushf
inc
imul
shll
push
in
adc
mov
push
addr16
adc
lahf
fwait
sbb
lahf
pop
push
jb
jo
xorb
cwtl
jmp
mov
repz
xor
sahf
inc
test
shll
dec
dec
ret
pop
out
enter
add
xchg
arpl
mov
pop
sub
lahf
adc
bound
push
pop
xor
aaa
xchg
pop
mov
lahf
pop
fs
out
push
pop
aas
jmp
aas
mov
mov
mov
lcall
add
int
adc
mov
call
mov
insl
mov
cs
popf
sbb
sub
inc
xchg
aad
cmp
call
outsb
testl
pop
mov
les
shl
fisubs
mov
push
movsl
mov
loopne
add
cmp
std
popa
pop
std
xchg
shlb
js
pop
mov
pop
dec
pop
repnz
insl
sub
lret
mov
mov
lds
jnp
out
xor
movsb
sub
pop
adc
jo
sbb
and
mov
leave
cmp
xor
jg
mov
pop
ljmp
cltd
js
popf
fildl
leave
outsl
neg
push
outsb
pop
add
imul
dec
xchg
jbe
scas
mov
jae
ds
jne
sahf
sub
psrlq
inc
cmp
fistpl
mov
insb
mov
lahf
fisttpl
bnd
es
fwait
and
mov
test
lods
enter
push
outsb
cmp
lea
enter
lds
inc
mov
xchg
xchg
pop
test
xor
test
shll
cmc
and
sbb
movsl
hlt
sub
mov
fistl
out
or
pusha
loopne
mov
divb
pop
mov
mov
fdiv
mov
and
xlat
sub
in
into
jb
int3
jno
adc
loop
pusha
les
xor
inc
dec
nop
inc
cmpsl
stos
fcoms
adc
out
hlt
sub
les
ljmp
pop
mov
mov
push
out
jne
mov
pop
icebp
mov
jns
stos
and
add
and
sub
data16
pop
add
cmc
in
lds
adc
fdecstp
icebp
push
mov
mov
push
jl
sbb
mov
je
in
mov
inc
stc
cwtl
add
loop
xchg
mov
outsl
loope
xchg
mov
movsb
adc
jb
mov
ds
mov
rolb
pop
or
and
dec
sub
push
pop
push
xchg
outsb
jnp
scas
sub
jl
cs
shlb
sbb
scas
and
sarl
cmp
pop
sbb
and
jo
je
mov
aad
xchg
xor
sbbb
jg
ljmp
add
add
mov
dec
xlat
mov
push
lret
sbb
fwait
lock
cli
in
fsubs
shll
fwait
inc
cli
loop
sbbb
and
pop
test
lods
outsb
fidivrl
ror
mov
fs
cmpsl
cmp
push
call
outsb
ss
lods
mov
xchg
pop
dec
ret
xchg
hlt
pop
imul
push
xchg
dec
loopne
js
or
adcl
mov
mov
mov
int
pop
or
cmpsb
mov
test
shrb
jle
inc
push
inc
add
pop
lret
pop
cmp
out
aam
adc
aaa
mov
je
xor
out
insb
sub
frstor
cmpsl
rolb
shl
das
and
dec
xchg
jne
add
mov
cmpsl
pop
ja
movsb
xor
and
cwtl
rorl
mov
push
or
jnp
shll
fstl
in
aas
hlt
sbb
pushf
gs
mov
cs
cmp
mov
imul
enter
push
lahf
cmp
pop
leave
cmpsl
outsb
aam
jb
lods
mulb
xchg
sahf
or
cmp
sbb
pop
mov
add
icebp
jmp
fmul
pop
and
iret
lret
mov
ljmp
jae
and
fildll
stc
dec
push
imul
pop
inc
pop
or
clc
pusha
add
scas
xor
hlt
es
call
sbbl
xchg
cmc
int
rolb
cmp
or
adc
mov
call
loopne
in
sub
repnz
daa
xchg
push
movsl
prefetchnta
clc
nop
cmpsb
and
das
cmp
pop
mov
sbb
push
push
adc
or
es
and
sub
fdivrl
lock
and
int
push
js
test
pop
fbstp
scas
lods
aas
xchg
push
into
inc
loopne
xor
inc
xor
xor
rol
sub
ljmp
or
push
and
pop
sbb
dec
fcomp
add
pop
jo
in
push
and
xor
mov
leave
vmovupd
lods
inc
cltd
inc
inc
inc
add
lret
ret
or
shl
mov
push
mov
ficoms
xor
jb
mov
push
inc
adc
inc
testl
repnz
ficoml
pop
mov
xchg
mov
scas
add
or
add
jle
jbe
xchg
mov
repnz
or
pop
or
in
rcrb
test
dec
ret
xor
testb
cmp
cltd
push
mov
insl
bound
jecxz
or
es
icebp
sbb
stc
dec
in
shll
incl
movsl
cmpsl
ds
out
jne
outsb
mov
mov
cmp
and
dec
sub
in
dec
mov
xlat
loope
dec
cmpsl
shr
inc
jmp
inc
int
jmp
insb
or
fldcw
jo
jecxz
aaa
insb
test
cmp
push
fwait
and
rorl
add
xchg
xor
pop
outsl
lds
pop
push
cmp
stos
lds
dec
mov
and
lret
loop
mov
cwtl
rep
insb
mov
outsl
mov
mov
sbb
test
and
popa
mov
jmp
nop
or
pop
mov
pop
adc
pop
in
pop
mov
adc
push
sub
arpl
jbe
mov
add
jo
push
cld
and
fisubrs
fwait
sub
or
push
jl
cli
jge
shlb
jns
hlt
fistl
mov
or
cs
aad
add
jbe
hlt
jle
lahf
imul
mov
xchg
mov
jo
outsb
movsl
fisubs
aad
mov
push
inc
mov
cmp
mov
aaa
cmp
xchg
lcall
or
pop
std
jne
mov
jg
adc
std
pusha
in
fstpt
andb
push
int3
into
adc
push
daa
or
lret
daa
call
js
ret
inc
add
ja
loope
scas
fnstenv
pop
inc
lahf
adc
xor
stos
push
in
mov
xchg
ds
fdivrp
xlat
pop
insb
js
mov
cmp
adc
arpl
mov
cmp
dec
popf
es
jle
fistpll
ja
mov
mov
lods
adc
jno
push
sub
mov
ror
fmull
pop
push
stos
mov
enter
loope
sbb
pushf
js
xorb
inc
jbe
lock
add
movsb
in
adc
and
dec
dec
inc
ss
add
ret
aam
in
mov
xor
lods
mov
push
xchg
ficoml
jmp
sbb
xchg
in
pop
ret
dec
pop
out
push
sbb
fnsave
lea
jmp
repz
fdivr
in
test
scas
inc
dec
fwait
je
mov
push
pop
xlat
or
xchg
popf
push
push
xchg
adc
ja
mov
lcall
fsubs
mov
push
pop
rcr
jbe
jo
cmpsb
adc
orb
adc
inc
enter
or
fisttpl
cld
add
test
outsb
in
add
enter
mov
pop
imul
repz
adcb
or
push
sbb
mov
test
adc
sub
stos
adc
je
xchg
ja
xchg
cmp
push
in
jg
iret
popa
sbb
sbb
out
push
mov
and
hlt
stos
out
sub
cmp
scas
push
je
punpcklbw
into
cmp
sub
in
sub
cmovge
jecxz
pop
daa
mov
cwtl
in
rclb
adc
jg
out
pop
scas
cmp
sbb
mov
in
xor
dec
inc
es
xchg
outsb
imul
out
jnp
jae
inc
mov
sub
and
jbe
push
adc
cmp
pop
mov
ja
xor
xchg
test
pop
mov
and
out
fimuls
jnp
stc
rcrl
push
pusha
jns
push
ljmp
push
dec
stos
fdivs
movsb
repz
ljmp
je
push
ss
adcb
dec
and
out
jl
push
stc
adc
out
jl
mov
xor
jg
inc
and
or
add
int
out
mov
mov
jae
sahf
aad
cmp
dec
fldt
int3
fmuls
mov
sbb
adcb
push
cmpb
mov
fadd
adc
dec
sarb
lods
out
pop
mov
les
jle
add
mov
addr16
or
pop
push
rcrb
fwait
xchg
cmp
insb
adc
mov
adc
lock
test
mov
xor
fs
xor
shrb
lods
xor
or
mov
lea
into
loopne
jae
push
mov
or
jae
cmpsl
lahf
add
icebp
sahf
or
jne
shll
bound
mull
jge
lcall
push
pop
daa
mov
add
and
or
jmp
xchg
cmp
ja
and
jae
stos
lahf
lds
cli
jnp
add
fs
stos
out
and
jnp
testb
lock
test
je
and
outsb
jnp
pop
orb
cltd
add
mov
mov
outsb
mov
cwtl
jbe
scas
imul
rcrl
arpl
mov
fistl
cli
lods
mov
sbb
sbb
sbb
int
rorb
cli
adc
in
or
mov
mov
repnz
leave
inc
setae
sbb
or
mov
pop
push
lock
xor
and
mov
pop
nop
inc
hlt
lret
cmpsb
js
push
jmp
orb
jle
loope
jo
out
jo
enter
outsl
daa
sti
imul
cmpb
lcall
cmc
cld
jno
sbb
mov
rcr
xchg
push
divb
stc
sub
fistl
add
inc
cld
fs
pop
mov
fadd
pushf
in
jge,pn
bound
xchg
les
mov
jno
in
push
fistpll
xchg
cmp
add
cmp
xchg
and
or
adc
cmp
mov
lret
pushf
push
inc
in
cmp
mov
dec
jmp
test
sbb
sub
iret
mov
jo
arpl
call
loopne
or
ljmp
xor
push
les
leave
sub
or
arpl
add
fcmovnb
pop
fildll
mov
sbb
aaa
pop
push
int
jp
inc
test
add
adc
nop
jp
jbe
mov
dec
or
in
add
jg
incb
adc
cmpsb
scas
push
push
lcall
jl
add
cmp
rcl
inc
jl
clc
push
cmpsl
ja
lret
xor
pop
aaa
outsb
push
outsb
jae
movlps
movsl
fiaddl
test
mov
xor
shr
stc
mov
rcl
cmpsb
test
sti
add
test
or
and
cmp
xor
std
mov
sub
into
fmulp
fdivrl
dec
mov
push
out
jbe
stos
int
pusha
xlat
cmc
leave
lcall
add
cmp
jns
push
rcr
jo
ffree
push
push
shl
pop
js,pn
push
imul
inc
daa
lods
leave
sub
lds
adc
sbb
or
or
mov
pop
add
mov
mov
rclb
and
incl
fs
fs
dec
or
mov
sub
mov
sub
or
push
cmpb
fldl
push
nop
and
dec
lods
sbb
mov
mov
cs
mov
into
jl
pop
std
xor
mov
cwtl
ficomps
jbe
mov
and
das
mov
andb
insb
scas
mov
jg
adc
xor
mov
adc
jnp
shll
scas
adc
shl
lds
push
jnp
and
gs
adc
or
xor
fistl
into
out
jle
sub
fildl
enter
dec
mov
in
mov
dec
sbb
jnp
call
jmp
xor
movsb
pop
mov
jp
mov
dec
inc
push
mov
xor
or
out
push
jns
arpl
add
add
inc
enter
add
mov
stos
jb
fs
inc
add
mov
lods
cltd
lods
aad
sbb
scas
popa
mov
fistl
jmp
mov
mov
popa
popf
cmp
cmp
mov
mov
mov
in
fstl
jg
mov
or
jne
jno
xor
clc
add
adc
jle
cmc
mov
and
dec
pop
jp
mov
and
adc
sub
xchg
jne
js
jns
pop
dec
dec
insl
mov
xchg
lcall
push
cwtl
jnp
jg
je
stos
pcmpeqb
lcall
mov
jmp
xor
div
ror
ja
mov
repz
rcrl
dec
jecxz
inc
sbb
mov
inc
xor
and
outsb
ret
inc
scas
cld
push
sub
dec
leave
sti
pushf
in
mov
scas
xor
ret
test
xor
add
pop
aad
jle
mov
mov
addr16
xchg
adc
push
in
inc
stos
int3
loopne
xchg
xchg
inc
dec
in
add
pop
inc
sbb
mov
xchg
lahf
jge
cmpsl
sbb
cmovns
cmpsl
testl
pusha
and
rolb
push
shll
leave
mov
lahf
fadds
xor
mov
cld
cmp
lods
in
pop
dec
fldt
cmc
out
dec
inc
mov
mov
jbe
mov
rclb
dec
test
xchg
cmp
sub
lock
in
xor
mov
test
movsb
ja
add
daa
scas
push
cmp
bound
sbbl
pop
cld
inc
push
cmp
jno
sti
mov
xchg
aaa
pop
out
push
stos
gs
gs
cld
subl
and
mov
fs
out
test
lret
sub
nop
aad
test
cmpsb
or
inc
jo
jmp
mov
mov
mov
fcmovnu
and
mov
rol
pop
pop
in
je
jmp
lret
and
roll
das
xor
jecxz
pushf
iret
xor
xchg
scas
stos
inc
pop
data16
decb
push
mov
in
sub
in
mov
xor
cmp
daa
jns
dec
bound
mov
lods
nop
pop
or
fdivs
dec
add
jmp
jle
mov
test
mov
cmpsl
sbb
das
adc
cli
data16
cs
test
jns
push
push
js
sub
add
je
and
ljmp
push
ljmp
jg
repnz
dec
sub
div
jg
and
sahf
movsl
bound
bound
fwait
mov
adc
mov
test
cli
mov
xor
rol
lret
rcl
cs
mov
lods
je
jno
call
xchg
enter
mov
out
gs
xor
idiv
ja
out
stos
sub
mov
push
mov
int3
ss
leave
cmpsb
jl
or
xlat
fbld
sbb
pop
mov
dec
push
pusha
xor
cmp
adc
cmc
lcall
dec
imul
pop
push
pusha
add
bound
add
sahf
cmp
nop
ss
xchg
push
aaa
mov
outsb
pop
xchg
nop
std
sbb
xchg
mov
adc
add
jmp
lds
fwait
dec
outsb
scas
and
test
pop
mov
into
rcll
out
xor
lods
xchg
push
icebp
popa
inc
add
out
mov
fimuls
add
jmp
pop
aad
into
push
push
pop
or
cltd
push
jns
pop
mov
pop
push
push
or
dec
mov
int
popfw
dec
pop
jns
mov
add
gs
ds
lods
lret
adc
dec
xor
lahf
pop
fs
xchg
mov
push
subl
rcll
inc
cld
hlt
lcall
mov
popf
std
arpl
pop
mov
push
jne
sbb
xchg
jle
scas
mov
daa
jne
mov
push
out
or
and
loopne
or
lret
jge
dec
mov
nop
xchg
subb
lcall
mov
in
jl
shr
outsl
sub
lea
cmc
add
adc
imul
adc
stos
pop
sub
out
cmp
test
sbb
sub
mov
movsl
aaa
mov
ja
jle
ret
cmp
inc
mov
imul
push
negb
sar
adcl
popf
xchg
xchg
add
dec
cmc
mov
js
add
pop
cmp
faddp
jmp
scas
jb
mov
mov
and
jmp
out
icebp
xor
cltd
jmp
scas
cli
and
jmp
inc
repz
xorb
add
cmp
je
mov
cmp
dec
stos
push
inc
popa
outsl
out
ficomps
addl
test
movsl
pop
and
fsubl
add
fdivl
cmpl
mov
mov
pop
pop
jbe
dec
mov
mov
pop
lods
inc
fsts
push
imul
sti
fsubrs
mov
push
dec
mov
mov
popa
ja
mov
mov
mov
add
frstor
jnp
cmp
inc
push
lds
test
xor
fmul
push
test
xchg
pop
movsb
and
xor
imul
xor
pop
mov
in
jg
jp
mov
add
andb
add
repz
pushf
or
cmp
jg
push
ss
rorl
stc
push
lods
or
scas
mov
cmpsb
mov
fbstp
mov
pushf
jns,pn
jecxz
jnp
mov
ret
xor
xor
loop
or
mov
push
out
mov
cmp
test
cmc
jo
mov
jle
lea
icebp
adcb
sub
mov
das
xchg
icebp
pop
shrb
subb
loopne
push
popf
cmpsb
cmp
push
popl
sahf
sti
pop
add
ja
ret
jl
add
int3
pop
pop
ret
scas
xor
adc
cltd
jb
lahf
mov
and
jg
dec
pusha
lret
rorb
push
xchg
jle
fdivrs
cmp
mov
lds
stos
cmp
cs
out
fstpt
shrb
xchg
pushf
cmp
xor
loopne
or
rorb
xchg
pop
in
aaa
xor
lret
movsl
inc
insl
popf
ljmp
sbb
call
jle
mov
je
xor
out
xchg
push
sti
mov
xchg
pop
mov
notl
mov
inc
xchg
ret
inc
cmc
pop
adc
inc
cli
pop
sbb
fists
mov
call
jmp
sub
insb
mov
fs
add
aaa
inc
inc
stos
pop
xor
call
movsb
xchg
and
sar
lock
call
addr16
pop
das
fs
clc
fdivrl
mov
pop
subl
push
add
mov
xorl
dec
adc
or
xchg
int
jb
sbb
clc
repz
inc
pusha
jae
mov
in
test
loopne,pn
cmpsl
idivl
xor
jle
cmp
push
ret
fbstp
sahf
and
cmp
imul
and
aaa
mov
mov
mov
pop
pmulhuw
and
enter
xchg
popa
adc
pop
cmp
dec
sbbb
xor
add
ljmp
scas
push
mov
es
jmp
call
mov
shlb
lahf
pop
sbb
cltd
push
hlt
lea
sbb
sub
mull
jae
subl
lods
fnstcw
out
mov
adc
cmp
add
sub
cld
movsl
mov
adc
sub
nop
cmp
pop
movsb
clc
jno
pop
or
in
dec
cmpsb
jp
push
out
xchg
loop
fisubrl
aad
ret
mov
xorb
test
or
add
daa
sar
sti
shl
sti
xorl
cwtl
mov
pop
in
test
push
sub
sub
outsl
ret
outsb
clc
sub
push
add
lds
xor
sbb
xchg
int3
out
or
jne
inc
je
jb
or
pop
jb
insl
pop
adc
and
imul
cmp
push
or
mov
dec
stos
push
sbb
push
aas
jae
push
sub
clc
mov
movsl
inc
push
scas
aas
or
ficomps
push
sub
out
or
into
mov
dec
mov
in
repnz
pop
inc
notl
push
xorb
jg
add
inc
mov
and
dec
jmp
jp
adc
jae
data16
push
in
jbe
mov
int
push
or
adc
in
out
loop
mov
test
icebp
xlat
inc
in
mov
push
lret
sarb
cli
pop
xor
ja
sbb
mov
roll
push
jg
test
xor
xchg
adc
shlb
dec
adc
xor
mov
out
add
sbb
sub
or
xor
mov
or
push
lock
dec
add
jns
fimuls
pop
dec
push
rcll
insb
jp
cmp
dec
mov
push
jg
sub
insl
les
daa
add
enter
loopne
mov
cmpsl
mov
xchg
and
mov
pop
jb
outsb
pop
jbe
cltd
xchg
mov
mov
cmpsl
mov
cmpsb
mov
pop
inc
mov
ja
xor
scas
sbb
sub
pop
pop
cmp
imul
adc
lcall
fsub
lods
int
cmp
icebp
xrelease
mov
in
cld
aad
fsubrs
stos
cld
xchg
sti
mov
es
dec
scas
enter
add
enter
in
jg,pn
jno
adc
xor
das
aas
lret
and
dec
xchg
cwtl
inc
jmp
fiaddl
and
data16
dec
outsb
or
mov
dec
inc
pop
or
sbb
pop
test
inc
jns
jge
pop
stc
push
mov
into
fwait
nop
insb
jmp
mov
sub
push
or
je
out
sub
add
sbb
enter
icebp
sbb
cmp
stos
sub
int3
xor
xor
adc
hlt
dec
inc
lcall
cmpsb
das
daa
stos
cs
test
mov
cmp
pop
sbbl
or
mov
pop
sbb
sub
fcompl
adc
mov
push
int
inc
xlat
jmp
shlb
sti
adc
lock
decl
mov
pop
jg
xchg
loope
xchg
and
cs
pop
pop
andl
fdivrl
enter
adc
mov
scas
enter
jecxz
jecxz
pop
mov
pop
repnz
scas
xlat
popa
mov
push
int3
xchg
icebp
mov
cmpsl
popa
adc
pop
iret
xchg
cmp
ljmp
jmp
lahf
and
push
push
sub
addr16
xor
cmp
leave
ja
sti
pop
fisubrs
jns
lods
jno
sub
aam
popa
lcall
cmp
or
arpl
clc
mov
xchg
movsb
das
leavew
jmp
outsb
mov
ffreep
and
call
jnp
fimuls
dec
icebp
popa
call
mov
and
repnz
mov
popf
push
inc
repz
push
push
fs
cmp
enter
es
jno
stos
add
xchg
push
cmp
nop
call
push
mov
cs
xchg
sarl
inc
fwait
jnp
push
mov
rcl
sbb
mov
xchg
inc
icebp
adc
lahf
ja
xlat
lock
clc
mov
inc
mov
sbb
fwait
loope
lock
jae
jne
add
xchg
mov
int3
cmp
jae
adc
in
mov
int
scas
call
rcrl
and
jae
loope
dec
sub
mov
jo
aaa
out
sbb
or
push
inc
out
scas
rcl
jbe
movsb
shll
and
ja
and
fcomip
mov
adc
lds
hlt
xor
inc
lock
mov
fisubrs
sub
add
stos
mov
sbb
sar
jae
lahf
inc
pop
push
aam
scas
pop
jns
and
out
aad
repz
ljmp
mov
jo
std
jae
fbld
ret
les
sbb
pop
nop
and
loopne
ret
cmp
sbb
sbb
mov
xchg
xor
jecxz
jmp
fs
scas
mov
sbb
xchg
mov
stos
or
in
pop
and
push
aam
pop
call
addr16
sbb
movsl
lds
enter
mov
xor
sbb
and
mov
mov
inc
adc
das
or
ret
xchg
cmp
cli
mov
pop
outsl
roll
cld
mov
rcl
js
jge
mov
push
testl
cwtl
add
das
and
mov
in
loope
inc
mov
inc
andb
or
jbe
sahf
or
lcall
xchg
out
mov
mov
sub
rcrl
mov
adc
pop
mov
cmp
inc
cmp
sub
hlt
or
popa
cmp
xchg
scas
shl
mov
pop
push
or
int
sub
xchg
xor
inc
in
out
pop
cmp
aaa
add
mov
dec
mov
movsb
mov
dec
mov
jno
jmp
adc
and
in
test
out
pop
fidivl
adc
pop
fldl
mov
sub
xor
adc
icebp
sbb
jg
jns
inc
push
mov
mov
das
jb
lret
and
adc
cmp
dec
les
shrb
rcll
add
cmpsl
popa
out
push
pop
push
mov
aas
cltd
insb
loop
aaa
mov
int3
stc
dec
mov
mov
add
lret
loop
fldt
add
cli
fisubrl
inc
xchg
push
pop
enter
pop
loop
sbb
out
and
in
test
xchg
xlat
jg
je
jle
or
cli
fwait
psrlq
mov
mov
jbe
push
push
stc
add
xchg
repnz
test
dec
push
sub
mov
mov
hlt
push
pop
loop
rol
pop
or
stos
cmp
inc
pop
test
mov
cmp
sbb
insl
xchg
mov
fwait
or
lods
sti
mov
ret
push
push
dec
dec
sar
and
sub
mov
mov
ret
push
cmp
add
shll
syscall
scas
pop
fisubrl
insb
test
mov
or
cs
mov
iret
out
mov
fwait
cmc
hlt
xchg
std
xchg
xchg
cmp
pop
xchg
and
pushf
bound
jecxz
lea
out
sub
and
ds
cli
ror
cltd
mov
jnp
js
stos
lret
push
xchg
dec
aas
pop
cli
and
inc
jne
adc
ret
cmp
mov
in
out
pusha
popf
stc
mov
fcomps
mov
dec
dec
sahf
dec
mov
orl
shrl
sub
gs
xchg
mov
test
cmp
mov
and
popf
jbe
fdivp
jl
movsl
xor
jg
jle
pop
int3
pop
outsb
xchg
mov
lods
mov
mov
mov
xchg
add
pop
cmpsl
push
aaa
mov
leave
dec
out
push
lock
mov
mov
adc
add
push
pop
pop
addb
sbb
mov
cmp
jp
push
sbb
inc
sarl
in
push
aam
mov
jo
mov
xchg
stos
mov
ficoml
cmp
mov
sbb
jns
lahf
movsb
push
mov
stos
adc
pop
cmp
sub
jmp
fwait
outsl
mov
xchg
push
xor
xor
nop
mov
sahf
adc
xchg
cmp
fldcw
cmp
adc
ss
inc
cmp
pop
push
fcoml
mov
inc
and
inc
mov
cmp
insb
adc
sti
dec
cmp
mov
jmp
test
jae
jb
dec
push
cmp
fsubrs
das
add
mov
mov
dec
cltd
fisttpl
cmp
mov
pushf
in
cmp
popa
mov
xor
cmp
sub
mov
and
fdivs
pop
jl
inc
arpl
stos
bound
inc
addr16
loopne
push
cmp
xlat
or
int3
cltd
stos
ljmp
insb
xchg
xchg
mov
addl
lods
sub
add
and
insb
jnp
add
jne
pushf
leave
nop
adc
cmpsl
or
mov
cli
pop
add
jno
pusha
dec
push
or
add
mov
in
shll
adc
mov
lods
and
mov
inc
mov
mov
cmpsl
push
fs
cwtl
push
in
push
sbb
ret
and
xchg
ret
int
fisubrl
loopne
inc
cmp
lock
lock
outsl
cmc
xor
lock
fisubrl
mov
xchg
xor
push
outsl
testb
pop
mov
insb
ljmp
sbb
shll
lea
pop
pop
xor
mov
xor
mov
and
adc
jecxz
push
add
mov
add
sbb
jg
add
mov
adcb
inc
mov
adc
jge
pop
or
fnstsw
arpl
xor
test
mov
aas
inc
push
aaa
push
inc
ret
gs
mov
test
pusha
lds
mov
mov
lcall
jp
and
xchg
adc
mov
xchg
ffreep
inc
cwtl
xor
jg
and
push
xchg
jp
sbb
mov
sbb
fdivs
add
cwtl
xor
add
cmp
int
mov
fisubrs
push
mov
mov
out
cmpsb
jl
cmp
stos
dec
dec
push
xor
xlat
push
movsb
sbb
sti
jmp
jl
mov
pop
iret
cmc
fld
popa
xor
rcrl
or
mov
lret
daa
pop
in
fwait
scas
inc
inc
inc
pop
adc
cmc
lds
sbb
pop
push
cmp
sbb
xchg
pop
adc
pop
sbb
movl
mov
mov
pop
lock
repnz
lods
push
test
pop
adc
sbb
aam
xchg
add
lock
mov
add
pop
dec
xchg
daa
movsb
mov
inc
decl
imul
inc
add
xor
and
stos
pop
add
ret
lret
pushf
in
and
add
loop
loopne
call
sbb
adc
stos
mov
adc
int3
movsl
xor
mov
dec
pop
cmp
and
xchg
adc
and
jbe
aaa
xor
pop
shlb
xchg
dec
sub
scas
shll
in
push
cmc
enter
loopne
mov
pop
std
lahf
inc
sbb
test
push
daa
addb
cmpsb
push
jle
inc
jecxz
mov
outsl
test
and
addr16
mov
popl
das
xchg
xchg
rol
and
mov
adc
test
testl
cli
lcall
stc
pop
insl
mov
adc
adc
clc
mov
pop
and
addl
mov
xchg
psubsw
mov
test
rcll
mov
aad
xlat
add
dec
pop
inc
jmp
stos
gs
jmp
mul
xchg
lret
xchg
push
movsl
cli
lea
popf
push
xor
cmp
xor
lcall
xor
sbb
fwait
inc
loop
mov
jle
inc
stos
insb
das
add
sbb
mov
test
adc
lret
xchg
jmp
or
adc
arpl
and
mov
adc
movsl
xor
sbb
mov
into
xchg
rcll
inc
push
aam
mov
call
cli
lds
out
push
rorb
movsl
inc
out
call
out
cmp
std
aad
lods
sarb
sub
into
sbb
or
mov
dec
sub
sub
inc
jb
outsb
or
jae
dec
test
push
sbb
inc
mov
imul
or
lret
xchg
mov
lods
dec
in
popa
fs
adc
cmp
repnz
iret
dec
movsl
loope
pusha
cmpsb
imul
mov
imul
jnp
pop
lock
pop
fbld
sahf
sub
lds
mov
and
or
pop
pop
cwtl
mov
mov
dec
and
cli
jo
repz
fisubrl
and
loop
adc
sub
out
scas
xor
mov
and
popf
adc
inc
sub
pushf
xlat
pop
inc
bound
sub
push
xor
incb
mov
pop
and
rorl
loope
iret
stc
stos
inc
int
jno
jns
fsts
bound
dec
mov
imul
popa
pop
cmp
mov
leave
repnz
mov
push
cmp
mov
mov
push
xlat
push
pop
xchg
sbb
bound
int
lret
inc
iret
mov
add
or
rcll
jmp
and
outsb
movsb
xchg
in
push
push
lcall
sub
rolb
shlb
sub
push
cmp
stos
jo
lods
int3
sbb
mov
loope
pushf
jg
mov
jl
sub
mov
les
dec
and
aam
data16
xlat
sub
xor
mov
jae
adc
iret
jno
xlat
mov
sub
inc
mov
xchg
mov
dec
xor
adc
push
mov
in
cmp
call
cmpsl
daa
std
aam
test
and
divb
jb
loope
int
dec
movsl
pop
call
cld
fdivr
clc
pop
aam
jne
sti
add
xchg
andb
sbb
mov
in
cmp
movsb
lods
xchg
mov
jle
mov
pop
cmp
push
inc
cli
add
mov
sbb
xchg
xlat
jnp
inc
mov
sub
xor
mov
ss
fs
lock
xchg
das
aaa
fs
jne
push
mov
add
push
rcll
cmp
fwait
pop
ljmp
pop
and
into
cli
lea
ret
mov
and
test
sub
lahf
lods
adc
pop
lods
mov
fcomps
mov
dec
scas
ret
scas
ljmp
cmp
lods
mov
push
aas
jle
repnz
fldenv
adc
in
mov
pop
mov
imul
cs
sbb
and
sub
rcl
mov
mov
jnp
fcmovb
out
cmc
insl
rcrb
les
add
or
mov
aaa
repnz
scas
enter
xchg
test
fwait
xor
pop
repz
inc
imul
loop
ficompl
test
sbb
cmp
inc
js
mov
call
inc
cmpsl
jns
idiv
pusha
add
inc
or
push
sbb
sbb
mov
lret
scas
add
lahf
ss
rolb
stos
push
push
adc
dec
cmc
into
push
mov
push
sti
lret
jge
int
adc
inc
lea
sbb
push
sarb
inc
rorl
in
pop
bound
mov
push
jns
sbb
and
xchg
sbb
jno
inc
divl
pop
jl,pn
mov
mov
popf
stos
imul
add
and
jl
mov
fisubs
sbb
sub
inc
jg
andb
or
jo
xlat
mov
fucomip
mov
aam
mov
mov
pop
and
les
orl
lret
cmp
fnstenv
inc
fwait
sub
leave
fiadds
test
pop
push
lcall
ljmp
mov
fistpl
out
pop
pop
push
push
sbb
lret
cmpb
lea
mov
mov
cmp
xchg
mov
in
test
hlt
int
dec
shll
rcrb
mov
xor
mov
add
jle
inc
in
addb
mov
pop
cmc
mov
cwtl
in
adc
iret
cmp
xchg
inc
pop
dec
xor
cmpsl
shlb
dec
lods
nop
imul
shl
fnsave
pushf
stos
and
adc
stc
pop
mov
mov
cwtl
aas
bound
outsl
push
lea
fistpll
fldl
sti
mov
test
push
sbb
cmp
pop
push
mov
ds
scas
or
push
xor
inc
or
add
lds
fcomps
shr
fisubrs
sbb
std
dec
out
sbb
fldenv
insb
outsl
push
into
lds
pushf
lahf
lea
aas
in
iret
jg
test
xor
sahf
jp
sub
call
out
iret
pop
sbb
test
mov
aaa
call
test
xchg
dec
adc
add
int3
cmp
imul
bound
mov
out
adc
sub
test
mov
or
cmpsb
jg
stos
push
movsl
cmpb
sahf
fimull
dec
inc
loop
push
mov
mov
push
mov
mov
outsl
test
xorb
lcall
mov
mov
inc
mov
jmp
or
or
out
jae
jns
jmp
dec
and
cmpl
adc
cmp
jl
mov
jle
jae
jge
sahf
outsl
shl
sbb
out
shlb
sbb
xorb
nop
cli
rcll
addb
cmp
push
push
xorl
mov
stos
dec
leave
mov
push
push
pop
dec
aam
and
push
in
int3
rorl
lret
mov
into
scas
xchg
insl
add
stos
sub
imul
les
arpl
add
jl
popf
push
cmp
mov
mov
shr
insl
ja
fisubs
ret
fs
sarl
fistpll
sbb
andl
dec
dec
xchg
mov
cmp
pop
mov
mov
pushf
pushf
cli
and
negb
outsl
inc
outsl
mov
ja
scas
leave
sub
test
orl
lods
in
mov
iret
mov
repz
inc
in
gs
dec
stos
dec
xor
scas
mov
xchg
test
or
jge
xchg
mov
rorb
bound
mov
ss
fcoml
lcall
mov
mov
loopne
out
add
mov
jae
addr16
aas
pop
les
or
fwait
xchg
pushf
insb
push
es
nop
add
add
dec
test
in
arpl
dec
int3
mov
arpl
loope
and
lods
hlt
mov
sbb
inc
cmpsb
jns
repnz
xchg
ret
cmp
xor
mov
pop
jle
popf
or
fwait
cli
nop
jne
pop
cld
push
mov
and
add
mov
imul
sub
inc
ja
andl
call
cmp
cltd
out
cmpsl
mov
decb
xchg
fwait
sbb
and
jecxz
cltd
test
inc
xor
adc
push
test
push
out
sub
pop
mov
sbb
pushf
dec
fmull
pusha
mov
push
out
mov
je
adc
pop
scas
sub
outsb
into
pop
aad
push
gs
fsubrs
cmp
inc
shlb
inc
pop
loopne
cmp
negl
mov
imul
xchg
repnz
push
and
jno
xor
in
pop
es
sub
mov
or
jp
lds
fisttpl
cs
dec
adc
sub
mov
xchg
imul
inc
rorb
cmpsl
lea
arpl
add
jb
sbb
arpl
mov
mov
xchg
dec
and
cmp
int
adc
xchg
icebp
dec
pop
mov
lea
into
mov
inc
inc
mov
pop
xchg
sub
cs
mov
imul
inc
or
pusha
inc
cld
or
inc
int
fistps
xor
lcall
outsl
inc
jge
pop
mov
sarl
inc
in
mov
popa
aad
notb
shl
fs
das
out
mov
fcompp
cmpsl
mov
mov
fs
mov
mov
xchg
out
sub
std
xchg
and
shrl
jg
mov
das
add
aad
fstpt
inc
sbb
mov
je
scas
add
lock
inc
shl
les
je
shrl
cmp
push
inc
pop
sbb
jns
and
divl
fdiv
aas
mov
cmp
mov
jb
ds
imul
popf
adc
adc
cwtl
out
add
jge
cmp
cmp
je
mov
and
daa
fistpll
push
lcall
cltd
iret
sub
sub
lret
pop
inc
jle
inc
sbb
ret
dec
cmp
dec
clc
out
mov
cmpsb
lret
cmp
test
mov
sarb
or
cmp
sub
je
xchg
in
aam
clc
fdivl
inc
test
fs
xor
dec
movsb
fidivs
arpl
or
cmpsb
pop
dec
mov
push
scas
sub
je
mov
fadds
movsl
dec
pop
xor
or
cs
push
xchg
jns
stos
dec
and
mov
je
xchg
sbb
cli
bound
idivb
add
fistpl
push
sbb
sub
mov
adc
adc
jae
xchg
call
rcl
xor
cld
pusha
out
ss
sub
push
imul
fildl
xchg
test
addr16
adc
out
lret
lds
outsb
sahf
cli
sub
push
cltd
fiadds
jmp
or
mov
jp
dec
adc
dec
cmc
out
daa
push
rol
cmp
pop
sub
adc
test
lea
out
insl
cmp
das
cmp
insb
mov
mov
add
adc
lock
xchg
mov
test
sahf
jb
in
mov
add
in
rcll
adc
shl
shr
cli
jge
jl
cmp
push
mov
xchg
push
cmp
add
ss
adcl
imul
sbb
mov
or
fisubrl
lods
shlb
in
jmp
in
setp
xchg
push
jle
mov
cmc
test
lahf
mov
cld
cmp
lea
and
sbb
jno
adc
fstl
aas
or
mov
push
or
lret
in
cmp
fsubrp
addr16
and
inc
sarl
mov
aam
pop
data16
out
loopne
xor
jne
jbe
movsl
pop
mov
pop
add
xchg
or
push
add
lds
and
mov
sbb
mov
cltd
jmp
test
push
mov
xchg
add
cmpsl
sub
inc
inc
lret
mov
fcos
jnp
pushf
ret
sub
mov
or
js
add
sbb
sbbl
xor
push
lds
inc
xlat
in
xlat
sbb
test
pop
mov
stos
int3
roll
mov
aas
hlt
sbb
arpl
nop
into
out
loop
iret
lret
sbb
pushf
scas
mov
mov
popf
sarl
mov
add
addb
or
add
cmc
push
repnz
rorl
out
cmc
jno
aaa
inc
je
jne
push
mov
out
jb
js
mov
inc
in
mov
les
inc
lea
sahf
rcl
outsl
sahf
or
stc
dec
cmp
add
cmp
xor
mov
push
jns
add
add
stos
mov
pop
out
ja
sub
std
inc
add
pop
es
xchg
shl
inc
jbe
pop
jnp
inc
test
mov
arpl
movsb
jns
sub
jno
out
and
jno
push
sbb
and
clc
mov
sahf
xchg
add
sub
ficomps
fmuls
push
es
jne
bound
or
mov
inc
int3
cld
mov
jne
mov
adc
bound
cwtl
roll
push
loop
mov
mov
mov
ret
push
jl
call
int3
pushf
cmpsb
lahf
adc
or
jne
outsl
jecxz
ljmp
lods
push
xor
cli
call
or
cmp
fdivrl
int
enter
ja
addr16
ficomps
xchg
mov
mov
jg
pushl
cmpsl
stc
push
mov
clc
ljmp
jb
imul
lret
mov
in
ret
mov
lcall
adc
xchg
es
notb
stos
lret
dec
lret
inc
xchg
push
movsb
imul
xchg
aaa
adc
adc
add
es
cltd
xchg
dec
stos
cld
arpl
fadds
gs
sub
syscall
ds
cs
jp
mov
inc
rclb
xchg
cmpsb
jp
pop
push
inc
mov
push
leave
jo
xchg
cmpsl
in
bound
nop
add
scas
mov
sti
or
aam
shrb
into
ret
jg
aaa
je
clc
or
lods
jne
loopne
or
push
cmp
pop
xlat
rorb
jl
roll
mov
inc
push
test
jp
sub
test
movsb
addr16
lock
insl
cmp
inc
mov
filds
es
cmp
arpl
pop
push
jmp
mov
loop
roll
mov
in
pop
js
jns
dec
fdivl
dec
jg
xor
jae
arpl
xor
cmp
xchg
mov
les
repnz
cmp
mov
dec
mulb
mov
jge
mov
adc
je
cli
jecxz
stos
mov
push
notb
add
xchg
fisubrs
jno
jmp
shll
in
loopne
push
jg
xchg
dec
dec
lret
push
mov
pop
mov
ds
jnp
sahf
and
jp
mov
mov
je
mov
xor
je
test
push
sub
pop
sub
pop
push
fildl
js
push
in
dec
pop
and
mov
test
mov
mov
std
sahf
repnz
iret
jl
xchg
mov
out
dec
incl
jne
aad
push
xor
orl
add
lods
fcmovnbe
jo
in
iret
shll
sbb
test
add
sub
fisttpl
subb
dec
outsl
pop
jge
out
and
ret
pop
ficomps
push
pop
ljmp
pop
sahf
and
mov
outsb
clc
add
or
or
inc
jne
popf
dec
filds
mov
stc
cmpsb
pop
jmp
aas
push
add
cmp
mov
push
fistpl
push
push
jmp
mov
push
and
xor
sbb
movsl
testl
in
lcall
push
pop
mov
pop
ja
push
movsl
cmp
call
adc
xor
enter
pop
mov
mov
push
insl
adc
lock
subl
push
mov
mov
test
hlt
fwait
dec
mov
and
ds
in
push
pop
inc
pop
fwait
inc
inc
cmpsl
enter
xor
lods
daa
enter
cli
mov
aam
jg
dec
in
loopne
mov
cmc
adc
jmp
add
push
add
and
out
imul
mov
xchg
mov
sahf
sbb
pushf
fistpll
pop
jo
or
popa
add
int
xor
adc
push
xor
mov
lds
imul
sbb
cwtl
xor
addl
popa
and
xor
mov
add
clc
repz
dec
push
mov
push
mov
adc
sbb
mov
sub
aaa
add
add
sub
mov
mov
cmpsl
push
or
lods
jl
jle
sub
mov
jmp
dec
test
and
push
xor
adc
int
icebp
mov
add
loop
adc
push
lods
push
jmp
or
ret
ds
cmp
mov
mov
loop
pusha
nop
lock
xchg
mov
sti
insw
pop
sbb
adc
mov
sbb
out
push
cwtl
or
mov
addr16
loopne
pop
push
xchg
mov
mov
and
jl
leave
loop
inc
cmp
std
data16
cli
movsl
pop
jge
call
out
xchg
mov
inc
out
mov
loop
pop
int
decl
mov
sbb
fdivrl
out
jmp
push
shlb
loop
fdivr
mov
inc
push
inc
mov
push
jg
out
inc
push
outsl
cltd
ficoms
xchg
arpl
cmc
and
out
lcall
adc
cmp
push
testb
push
flds
shll
out
sti
push
popa
add
cmp
mulb
xchg
in
shll
sbb
cs
das
pop
rclb
jl
mov
pop
fsubrs
push
lcall
and
popa
cmp
or
cmp
push
mov
xchg
dec
mov
neg
aas
inc
mov
out
jbe
sub
xchg
scas
insl
push
lea
mov
test
dec
add
push
jmp
in
stc
pop
cmc
push
jp
xchg
xchg
add
scas
lret
xchg
test
xor
idivb
or
inc
sub
repz
dec
scas
sub
cltd
push
sub
and
push
sar
pop
pop
mov
pop
sub
test
inc
mov
push
mov
cmp
jecxz
mov
inc
jae
push
lret
imull
ss
push
outsl
mov
bound
sub
jecxz
ret
lcall
inc
cltd
stc
mov
stos
pop
fstpt
or
jb
std
xor
das
aas
decl
inc
or
sbb
adc
push
bound
cwtl
xlat
push
rclb
sbb
ret
push
adc
test
jae
jb
mov
pop
xchg
cli
test
mov
cmp
out
lahf
fcoms
cs
push
mov
loop
cmp
jp
loopne
mov
jae
mov
sub
outsb
shrl
jp
dec
push
xchg
pop
jmp
inc
imul
jne
and
mov
mov
test
pushf
insb
mov
or
inc
lcall
ds
sbb
je
scas
loop
popf
and
xchg
aad
mov
and
out
cmp
cmc
gs
js
or
stos
insb
jae
popa
mov
mov
pop
pop
or
xchg
pmaxsw
sub
cli
call
movb
adc
lea
xor
fdivr
int3
in
mov
xchg
loopne
dec
cmp
addb
xor
pop
push
sub
bound
xor
mov
sar
push
pop
nop
nop
mov
cwtl
fsub
dec
sbb
inc
and
call
and
pop
xchg
dec
jmp
shl
dec
insl
xor
sub
or
jp
mov
lods
outsb
sbb
es
addr16
mov
push
add
cmc
fistps
inc
mov
mov
adc
xchg
loope
cli
sub
js
dec
xor
dec
push
jb
ret
xor
int3
or
insb
test
dec
scas
ret
xchg
xor
dec
fcoml
cmp
sahf
repz
cmp
repz
mov
out
out
mov
jmp
dec
sbb
aam
sub
test
lods
mov
jg
xor
or
cltd
out
lret
out
lock
dec
mov
sbb
dec
mov
sbb
push
jno
inc
rcll
pop
imul
dec
or
loopne
mov
jb
pop
push
cmc
out
and
outsb
sti
add
pop
aas
shl
int
scas
cmpsb
aaa
ljmp
pop
sti
or
in
dec
test
fwait
push
std
add
imul
aas
mov
jg
scas
mov
mov
sbb
cmc
shl
push
sbb
mov
dec
cld
xor
jl
pop
icebp
arpl
stos
icebp
push
pop
xchg
lock
dec
dec
cmpsb
sbb
inc
adc
mov
xchg
imul
jb
test
lahf
sbb
js
in
dec
aas
pop
xchg
mov
and
aam
jne
mov
mov
enter
add
mov
pushf
or
sbb
cwtl
dec
test
mov
add
repnz
xchg
bound
js
aam
cmpsl
ret
movsl
std
and
mov
fistps
lds
xchg
cmpl
outsb
outsb
inc
or
mov
popa
jnp
pop
jno
pop
shlb
add
sbb
sbb
inc
mov
stc
cmp
aad
in
test
into
rol
sbb
fcomi
and
add
jle
outsl
fsubs
xchg
sub
dec
sti
fdivrp
push
mov
popf
push
mov
dec
in
mov
ja
out
fildl
fistpl
cmpsb
enter
push
mov
les
imul
mul
sbb
cmp
lds
xchg
or
fldenv
jmp
xor
rcrb
andb
or
pop
outsb
sub
add
pusha
ljmp
lods
inc
inc
aaa
icebp
pmaxsw
adc
loop
mov
sbb
cmp
fstpl
pop
std
mov
jns
xor
cmp
mov
popa
push
lods
inc
or
repnz
js
ss
pop
insb
push
in
push
jg
mov
pop
out
mov
xchg
lahf
inc
adc
in
add
scas
sub
call
xchg
mov
or
push
lcall
test
xchg
jnp
mov
and
mov
movsl
xchg
or
xchg
jbe
out
dec
sbb
dec
out
cwtl
mov
jne
push
cltd
testl
push
mov
cli
cmp
pop
iret
movsl
outsb
cld
mov
das
scas
fldt
cmpsb
rorb
stc
mov
xorb
mov
xchg
into
test
pop
xor
fs
cmpsb
notb
jp
lret
inc
mov
push
xchg
ds
xchg
jae
dec
mov
xlat
mov
outsb
inc
adc
scas
sub
imul
out
pushf
or
add
je
jmp
add
cmp
repz
mov
outsb
jl
fldcw
arpl
dec
js
add
jne
lret
sbb
pop
dec
sub
fsubp
xor
stos
xchg
pushw
mov
pushf
movsl
pop
repz
sbb
lods
outsb
in
jbe
sarb
fs
sqrtps
adc
enter
nop
movsb
hlt
scas
data16
xor
pop
xchg
pop
pusha
imul
push
not
dec
and
jmp
adc
mov
lods
mov
mov
mov
jae
aas
mov
mov
jno
pop
jl
mov
inc
mov
xor
jae
aaa
fwait
adc
int3
xchg
test
sbb
pop
dec
cmp
jle
fs
jl
cmpsl
aam
imul
sub
lcall
push
mov
pop
das
mov
je
xchg
xor
xchg
inc
add
mov
lret
int3
sahf
fistps
addr16
sbb
and
cmp
in
mov
jns
lahf
out
adc
movsb
jne
mov
mov
or
mov
mov
stos
inc
clc
cmpsb
addb
adc
or
mov
cmp
push
or
lea
stc
arpl
mov
dec
pushf
pop
inc
repz
sahf
in
mov
inc
lret
mov
movsl
cmp
stos
rcl
loopne
dec
mov
adc
pop
repz
roll
cmp
leave
or
mov
lods
test
call
sbb
dec
or
dec
jbe
cmp
mov
movsb
es
lahf
cmp
mov
fninit
jl
pop
daa
aam
and
in
push
mov
shlb
cwtl
enter
push
jp
lahf
add
sbb
and
pusha
insl
hlt
add
popf
or
push
pop
shlb
push
adc
jle
push
sbb
sbb
jmp
adc
lock
lods
cmpsl
mov
push
out
jp
mov
jmp
and
stc
mov
sbb
sahf
mov
cwtl
out
repz
fcomps
add
cltd
cmc
sahf
xchg
loope
mov
jmp
ficompl
shll
popa
shrl
ret
fmul
shr
fwait
ret
lea
mov
sbb
cmc
popa
inc
xchg
int
jae
hlt
ret
cltd
and
mov
mov
pop
xchg
insl
imul
shrl
mov
int
mov
ljmp
pop
and
scas
jg
cmp
sub
mov
mov
sbb
add
dec
andl
dec
test
fisttps
loopne
mov
fdivs
push
xor
push
push
xchg
pop
jno
nop
leave
scas
or
dec
subb
add
subl
daa
test
inc
xchg
dec
popa
gs
cltd
sbb
rcll
and
inc
cmpsb
shl
cld
xchg
call
or
cmpsb
movsb
adc
clc
mov
push
test
rorl
mov
xchg
inc
addr16
cwtl
sub
jns
or
and
stos
xor
push
push
mov
fiadds
jne
adc
sbb
lcall
daa
aas
mov
arpl
cmpsb
loope
xchg
jns
xlat
push
pusha
imul
pop
ljmp
incl
sbb
pop
data16
arpl
push
fiaddl
sbb
dec
add
dec
cs
in
ret
fildl
xchg
mov
add
pop
in
movsl
ret
and
mov
fcoml
fildl
pop
mov
loop
adc
insl
mov
inc
jns
test
push
int
lds
or
push
add
sub
mov
mov
jo,pn
pusha
sbb
icebp
mov
xlat
sub
fwait
pushf
jp
cltd
out
xor
mov
dec
popa
push
jle
fisubs
sub
dec
aad
jbe
add
sub
and
push
fsubl
lret
pop
mov
dec
add
sbb
es
xchg
add
addr16
in
mov
mov
pop
pop
cmp
mov
add
pop
xchg
sub
dec
fldenv
clc
idivl
lods
xchg
add
and
push
jmp
dec
adc
in
push
rcrb
push
mov
pusha
ja
or
or
and
btr
or
cmp
dec
mov
cmpsb
cs
shll
or
sbb
jg
clc
in
neg
rcrl
or
icebp
sub
loope
mov
jge
test
xor
xchg
es
push
gs
cmp
xchg
fs
ss
fwait
mov
andb
inc
int3
lret
cmp
scas
sbb
push
push
inc
repnz
xchg
jno
rcrb
cmpsb
mull
ret
xor
or
scas
enter
xchg
inc
aas
jge
inc
adc
in
lret
in
fadds
mov
xorl
mov
jo
std
xchg
adc
lods
and
or
pop
fwait
sbb
cmp
cli
mov
inc
xor
and
repz
out
and
fidivl
mov
lcall
lcall
mov
and
sbb
sub
mov
push
sub
or
xor
mov
mov
pop
push
sbb
clc
out
fidivrs
out
lcall
fbld
lock
xor
repnz
adc
enter
dec
mov
popa
jns
xor
shrl
cmp
ljmp
inc
and
jmp
or
cmp
inc
mov
test
pop
xchg
jb
push
into
mov
push
ljmp
xchg
addr16
das
or
dec
xchg
les
lret
mov
add
adc
int
cs
pop
shll
push
mov
lahf
test
pop
dec
add
mov
push
lahf
xchg
cmp
add
dec
or
shl
enter
xchg
insb
mov
dec
cmc
cmp
test
mov
sbb
sbb
push
movsb
mov
add
lret
and
addr16
in
cld
shlb
mov
into
jo
sbb
shll
dec
les
or
dec
xchg
shrl
pop
push
xchg
sti
xchg
dec
mov
pop
jmp
adc
cmp
jno
shl
add
xchg
lahf
addl
mov
push
mov
xchg
outsb
and
out
sahf
cmpsl
jmp
test
mov
testl
shrl
daa
xchg
sbb
hlt
ja
jb
sub
add
jl
outsl
mov
adc
pop
das
dec
repz
rcl
scas
inc
and
dec
lods
popa
sarl
dec
leave
pop
push
sbb
mov
sub
xchg
movsl
push
scas
ss
add
sti
adc
jbe
repz
sbb
scas
or
out
aam
sbb
dec
or
ret
xchg
fisubs
push
push
xor
mov
mov
sub
pop
int
fs
mov
xlat
sbb
jne
or
les
movb
jmp
stc
setne
nop
popa
pop
jo
xor
gs
cmp
push
adc
insb
push
push
inc
out
jnp
out
rcrl
sub
jle
test
out
insb
cmp
leave
icebp
push
xchg
outsb
push
in
add
or
jp
imul
mov
cld
test
sbb
push
test
insl
mov
sbb
xlat
mov
aas
pop
sbb
push
xchg
pushf
pop
call
jg
dec
test
stc
adc
mov
dec
aam
imul
inc
jg
sbb
lahf
mov
inc
mov
cmc
pop
data16
and
lcall
inc
or
mov
sub
es
inc
sbb
jl
jno
pushf
ret
repnz
pop
int3
ljmp
shll
push
xchg
pushf
adc
into
mov
test
subl
jne
jmp
push
jno
jge
faddp
imul
movsl
mov
dec
outsl
popf
mov
fisubs
push
mov
and
push
cmp
dec
js
fimuls
idivl
int
inc
push
push
mov
test
cmp
mov
jno
or
xchg
arpl
cmp
out
xor
add
hlt
mov
pop
xchg
dec
out
mov
lods
adc
cmpl
cmpsb
leave
lcall
adc
in
jae
cld
dec
ljmp
cmpsl
mov
ja
int
stc
pop
jmp
push
mov
aas
testl
sub
imul
in
and
ljmpw
nop
mov
jb
inc
int3
push
sbb
adc
jns
push
xor
cld
and
inc
data16
lock
inc
ja
dec
jle
lods
xchg
lea
pop
jne
mov
in
push
out
fnstcw
sub
inc
subb
icebp
dec
mov
fiaddl
les
adc
adc
mov
push
push
xchg
mov
rolb
add
flds
mov
jl
lea
icebp
lods
sar
call
pop
xor
inc
fldl
xchg
loopne
inc
cwtl
faddp
dec
cmp
pop
and
or
push
subb
push
xor
mov
mov
mov
mov
jl
sahf
scas
into
inc
js
rclb
xchg
popf
jmp
dec
sub
ljmp
sahf
jns
add
adc
inc
or
icebp
mov
fistps
or
insb
jge
mov
test
aam
mov
popa
push
adcb
insb
ret
clc
dec
int
in
pop
jae
or
push
mov
lods
sub
fisubl
rcl
roll
cmp
cmc
sahf
std
iret
loop
lods
mov
ret
and
addr16
aas
shl
dec
adc
out
or
adc
pop
gs
cmpsb
xor
jb
mov
inc
pop
insl
or
push
fsts
lret
or
flds
scas
das
sarl
enter
sub
push
mov
ja
sub
xor
inc
adc
jg
call
mov
test
xlat
adc
mov
push
and
divl
iret
insl
add
dec
pop
sbb
mov
mov
mov
in
sub
rcrb
and
or
dec
jo
hlt
xchg
pop
repz
mov
bound
cli
fmull
es
cld
fxtract
xchg
pop
mov
inc
xor
out
daa
mov
or
aaa
lock
js
ljmp
jmp
lret
pop
fdivrl
pop
test
mov
in
jo
fs
ret
shlb
push
cld
fsubr
test
dec
adc
ds
scas
xchg
push
leave
pushf
push
add
repz
jmp
jae
pop
mov
xchg
mov
ret
add
cmp
inc
lcall
add
xor
jecxz
aas
jno
clc
mov
scas
cmp
nop
test
cmp
and
and
cmp
jo
sub
icebp
push
jl
fdivrl
jno
push
mov
dec
test
loopne
lret
or
dec
lds
jg
dec
insb
adc
scas
xor
ljmp
mov
pop
add
mov
call
xchg
addl
movsl
mov
pop
leave
je
aad
jmp
fmulp
gs
xchg
fimull
pop
fisubs
add
lds
stos
aaa
mov
jae
pushf
adc
cmp
test
insb
je
mov
outsb
sbb
scas
nop
cmp
pop
inc
call
inc
and
inc
pop
add
es
cmpsl
sbb
enter
dec
in
addb
sub
and
sahf
aam
push
xchg
sbb
pop
mov
iret
push
cwtl
or
jnp
movsl
je
mov
out
sub
lock
adc
in
loopne
inc
jp
and
push
push
adc
mov
cmp
ljmp
outsl
jmp
xchg
jo
jle
xchg
test
xor
shll
add
push
ret
push
mov
sbb
mov
nop
add
adc
xchg
mov
add
nop
and
fiaddl
pop
mov
ret
xor
lret
pop
test
mov
adc
clc
xchg
arpl
xchg
mov
lods
or
into
sub
push
sbb
jb
adc
add
xchg
shr
push
pusha
xchg
mov
add
cmp
fldt
adc
xchg
inc
loope
and
cmp
push
lea
setl
movzbl
xlat
pop
jbe
cmpl
iret
xor
cmp
jg
mov
xor
shrb
or
aaa
xchg
cld
imul
les
inc
js
shrl
cmp
adc
and
inc
out
lret
inc
out
mov
dec
aaa
push
loop
jnp
cmp
mov
push
jp
int3
and
push
sub
cmp
fwait
push
test
dec
inc
jp
or
mov
mov
jg
fdivs
in
mov
outsb
mov
mov
jmp
rcrb
adc
adc
mov
es
mov
sub
cmpsb
inc
dec
int3
js
test
pop
mov
xorb
sbb
xchg
insb
gs
xchg
xor
push
and
repz
ficoms
mov
repz
inc
insb
sub
call
cmp
aaa
aas
xchg
imul
cli
gs
sub
sub
and
mov
xchg
mov
ret
jg
push
push
in
inc
inc
inc
adc
jno
push
jg
in
fldl
mov
sbb
mov
je
test
out
xchg
sub
jno
cmp
dec
dec
jle
xchg
mov
mov
hlt
mov
xor
dec
mov
frstor
jo
insl
lret
repz
mov
je
push
cmp
lret
or
mov
sbb
rorl
mov
push
stc
sub
jbe
jecxz
int
arpl
aaa
sti
orl
xorb
cld
sbb
in
push
mov
dec
cmc
cld
cmp
sub
lods
in
xchg
addr16
movsb
xchg
sahf
js
dec
pop
cmpsl
int3
push
or
push
loopne
ffree
jb
mov
dec
cmc
loop
mov
clc
or
sbb
jecxz
loopne
jle
cmp
dec
or
negl
lods
je
jb
sahf
inc
adc
lret
div
push
sbb
inc
adc
lock
nop
mov
test
mov
aad
mov
sbb
cmc
push
fsub
aad
mov
jmp
mov
shlb
sahf
sbb
pop
xchg
xchg
add
mov
jp
pop
jp
sti
test
lret
pop
cld
popa
cld
roll
scas
pushl
fnstcw
lcall
xchg
shrl
fidivrl
jnp
stc
test
xlat
js
cmpb
cmp
fsts
aam
in
divl
inc
js
inc
push
sbb
push
es
adc
mov
sti
dec
mov
add
xor
sarb
dec
clc
loop
aaa
mov
mov
and
clc
add
sti
stos
or
fisubl
das
pop
pop
inc
jp
pop
cwtl
int
mov
rcrl
jecxz
xchg
push
test
push
sbb
sbb
cs
fmulp
cmp
add
rcrb
xchg
shlb
adcl
and
stos
jb
pop
xchg
jecxz
test
dec
xchg
enter
in
inc
fwait
not
and
into
jns
fsubs
inc
jbe
fidivrs
imul
adc
or
or
ja
sbb
and
dec
shlb
pop
subl
xor
sarl
jno
dec
rcrb
sub
stos
int
fstl
out
sub
mov
xchg
inc
inc
stos
inc
xchg
cmc
cmp
ficoms
and
dec
in
pop
lods
js
outsb
sahf
loopne
add
bound
sbb
xchg
mov
and
xor
repnz
mov
addl
jbe
cmpsb
xor
add
outsb
mov
pop
xor
pop
push
ret
lahf
mov
aaa
je
out
ljmp
rolb
mov
jmp
xchg
cmc
or
loopne
not
add
clc
mov
neg
je
in
imul
loopne
lret
or
xlat
or
cmp
lret
movsl
aaa
add
adc
xchg
adc
mov
pop
rcll
pop
pop
jl
sub
outsb
out
add
add
mov
jb
xor
test
sarl
das
popa
mov
sahf
dec
and
mov
push
es
outsl
shrl
pusha
mov
in
fs
call
sbb
jnp
inc
inc
leave
mov
jb
movsb
aam
scas
in
xor
xor
sbb
mulb
scas
inc
bound
jp
xchg
clc
mov
cli
mov
push
dec
loopne
outsb
push
push
cmc
add
out
call
jg
pop
adc
push
adc
jge
jo
fildl
loopne
shlb
out
data16
rcrl
inc
xchg
sub
int3
ret
arpl
enter
sub
pop
mov
xor
pop
or
jg
sbb
popf
movsl
sbb
inc
loope
imul
rclb
sbb
add
add
lret
sbb
cmp
pop
pop
jo
xor
lock
push
jmp
andb
jbe
xchg
xchg
inc
sbb
xchg
jge
inc
inc
movsb
cmp
cmp
ds
repz
fsubs
rsqrtps
aas
arpl
or
pop
sbb
rorb
fistps
in
enter
xchg
xchg
rorb
sbb
lds
jmp
xor
xor
out
or
ret
pop
popa
and
jbe
add
fs
pop
lahf
imul
pusha
loop
dec
pop
pop
repnz
jne
xor
add
rcll
add
cmpsb
jmp
adc
pop
dec
nop
add
test
out
fiaddl
mov
cmpl
pusha
ret
cmp
dec
call
divb
mov
arpl
push
xorl
das
dec
cmc
pushf
mov
mov
cltd
jno
dec
xlat
xor
fsubs
or
das
sbb
push
fcoml
inc
add
lret
jl
or
subl
inc
repnz
lds
adc
outsb
lea
or
frstor
adc
adc
push
insb
pop
iret
push
icebp
dec
and
push
adc
bound
xor
cld
stos
dec
xchg
or
xor
cmp
mov
movsl
lock
or
ljmp
xor
mov
addl
mov
stc
xchg
repnz
mov
subl
js
jmp
lods
or
icebp
repz
hlt
cmp
or
loop
push
jnp
js
or
js
mov
push
dec
push
xlat
cmp
jp
nop
aas
jle
jbe
pop
sbb
dec
iret
loope
pop
and
dec
adc
dec
pop
int3
outsb
xchg
sub
add
ja
sub
sub
fmuls
jle
xor
in
jb
pop
or
or
mov
push
and
dec
fmulp
fdivr
xchg
lret
sbb
mov
or
fisubrs
loop
sbb
inc
push
lret
stc
rcll
dec
lods
pusha
jnp
jge
cmp
add
arpl
mov
adc
mov
je
in
adc
mov
dec
aaa
punpckldq
cmp
in
jne
sbb
pop
push
call
mov
je
sub
imul
out
loope
jle
xchg
es
out
add
aaa
sarb
sub
cltd
lcall
test
idiv
and
inc
push
inc
lea
fisttpl
and
cmc
lods
loopne
std
cld
mov
mov
mov
rcrb
mov
sub
inc
push
lahf
adc
or
jp
pop
call
jecxz
mov
inc
jno
dec
in
cmpsb
int
sti
fcmovne
mov
sbb
hlt
xor
sbb
icebp
push
and
inc
pop
scas
add
ljmp
mov
lret
jl
gs
test
pop
fwait
xchg
sbb
jns
push
das
sbb
jbe
dec
mov
dec
inc
loopw
xlat
mov
mov
mov
ljmp
add
cli
stos
cmp
stos
mov
mov
outsb
cmp
hlt
jo
out
popl
inc
sub
pop
imul
add
out
xchg
testb
sbb
lea
xor
jle
sbb
icebp
test
push
subb
mov
and
sub
mov
aad
and
scas
fs
adc
mov
ss
daa
mov
sahf
clc
shrl
jns
inc
insl
xor
into
aam
jge
std
sbb
aaa
sbb
jnp
clc
inc
jb
in
clc
in
movsl
pop
fs
dec
frstor
outsb
outsl
cmp
and
test
mov
cltd
jle
fsub
pusha
or
jnp
cmpsb
xchg
dec
inc
dec
xchg
out
lods
adc
inc
jnp
jg
jle
pop
insl
mov
js
mov
sbb
in
fdiv
testb
insl
sub
mov
push
sbb
pop
and
das
add
jbe
je
sbb
push
xor
outsb
repz
mov
es
jno
jne
cli
je
pop
icebp
xor
mov
jno
fistl
cmp
insl
mov
out
aaa
sbb
rclb
addr16
mov
adc
push
nop
stos
stc
cli
data16
xchg
gs
or
stc
mov
mov
cmpsb
cs
sub
aad
cmp
aam
fmuls
jge
pushf
pop
in
arpl
cmpb
or
imul
add
cli
jmp
movsl
in
icebp
dec
sub
andb
jle
dec
xlat
scas
mov
stos
inc
into
imul
jmp
jns
stc
jmp
fsubl
pop
movsl
mov
xchg
stc
fidivrl
cmc
or
and
mov
jnp
mov
xchg
or
mov
negl
mov
sub
lods
es
xchg
and
cs
pop
mov
addr16
mov
jl
mov
test
adc
rorb
mov
xor
xchg
jecxz
ret
jno
or
dec
je
or
dec
adc
xchg
xchg
test
jle
sub
ljmp
cwtl
outsl
mov
repnz
xchg
mov
leave
dec
sbb
test
adc
je
xor
lcall
jge
mov
xchg
cmc
mov
dec
out
lods
cs
sti
inc
mov
sbb
pop
cmp
bound
push
movsl
sar
jae
inc
sbb
or
or
xchg
jmp
in
lods
xchg
mov
imul
push
mov
lds
aaa
mov
jge
inc
jnp
pop
mov
lret
fisttpll
xor
inc
jge
mov
push
lret
xor
mov
xor
orb
mov
jl
mov
aas
scas
mov
out
jle
fidivs
mov
adc
xchg
enter
mov
xor
filds
aaa
or
dec
mov
bound
out
and
mov
xlat
les
pop
js
cmp
mov
cmc
mov
stos
test
mov
inc
faddp
leave
jmp
scas
out
fmuls
mov
aad
and
inc
mov
adc
xchg
xchg
int3
sub
fildll
loope
adcb
scas
rcrl
sbb
flds
imul
scas
mov
inc
sub
div
test
ds
dec
subb
inc
sub
jge
mov
cmpb
int
adc
dec
in
inc
aaa
push
lcall
repnz
int3
vmovss
jns
mov
cld
clc
insl
lods
mov
add
sbb
fsubr
add
insl
rcrb
xchg
push
and
jp
mov
lahf
xchg
leave
rolb
test
ss
repz
mov
inc
pop
push
int3
add
xchg
cs
test
loop
sub
ror
pop
lock
jne
and
aam
push
mov
mov
inc
sbb
pusha
fcmovnb
xchg
lahf
addl
pop
xchg
in
dec
test
or
fiaddl
pop
stos
push
mov
push
sub
stos
sbb
fs
stos
cmc
pop
dec
out
sbb
pushl
sarl
into
insl
sbb
fildll
repz
out
popa
sbb
test
and
xchg
pushf
mov
bound
leave
mov
outsb
pop
jns
hlt
pop
daa
cmp
out
push
xor
mov
std
cmp
aaa
pop
push
cmp
add
btr
xchg
mov
lods
push
sub
jg
popa
and
sub
insb
pop
push
mov
leave
xor
insb
test
popf
adc
pop
add
lods
push
mov
jmp
fcmovnu
cmp
pop
push
adc
testl
jb
xor
sub
cmpsl
mov
setnp
iret
push
das
out
xlat
xor
rcll
xchg
jb
jecxz
rorl
jns
js
add
mov
sub
js
out
mov
or
and
cmp
in
outsl
fsubs
in
push
or
rclb
rolb
out
mov
mov
repz
sbb
xchg
popf
jb
inc
iret
pop
or
adcb
leave
out
insb
xchg
jge
push
adcl
popa
not
insb
mov
aaa
cmp
call
xlat
mov
jbe
mov
mov
xchg
sbb
dec
push
shrl
adcb
sub
aam
add
mov
mov
xchg
ja,pn
lahf
xchg
popf
gs
cmp
hlt
mov
iret
leave
cld
aam
lahf
addr16
inc
add
dec
aaa
jno
in
arpl
pop
mov
dec
subl
je
cmp
dec
lea
loopne
outsl
aas
inc
dec
push
pop
mov
cmpsb
pop
jbe
enter
pop
xlat
es
rclb
mov
add
push
add
call
sbb
loope
mov
and
jl
into
sub
or
sbb
bound
imul
push
xor
shr
jecxz
rcr
pop
and
and
popf
cld
inc
dec
xor
pop
cs
mov
sbb
sti
cmpsl
sarl
test
dec
cmc
dec
ja
xchg
stos
andb
cld
fstps
leave
push
or
push
xor
or
ret
cwtl
pusha
outsl
add
xor
xchg
subb
cld
int3
repnz
jge
cmp
or
data16
or
adc
sbb
fisttpll
lods
ficomps
pop
mov
hlt
in
xor
leave
into
inc
in
imul
in
jge
sbb
mov
mov
iret
test
dec
cmpl
out
inc
je
out
iret
xchg
repz
add
adc
pushw
test
xor
and
push
repnz
in
and
stc
pop
out
enter
sti
lock
add
jne
xchg
sbb
repnz
push
fnstsw
adc
movsb
mov
mov
add
mov
mov
aas
into
shrb
inc
jecxz
inc
je
xor
xor
iret
or
add
or
add
in
das
pop
lds
roll
mov
sbb
pcmpeqw
add
jo
mov
mov
and
mov
movsb
je
adc
mov
outsl
pop
shlb
xchg
outsl
adc
hlt
call
add
test
mov
aad
adcb
mov
sbb
test
in
dec
daa
jnp
pop
test
mov
mov
int3
mov
or
push
cld
imul
inc
dec
cmc
push
sbb
out
cld
add
int
xlat
push
adc
les
fdiv
fiaddl
or
hlt
lret
div
fidivrs
dec
jns
adc
mov
mov
mov
pop
dec
cltd
mov
xchg
or
ljmp
ja
gs
inc
lds
stos
shl
cmp
cmp
jle
loopne
fisubl
dec
pusha
aaa
mov
outsl
rcr
adc
cmc
xor
push
xor
add
cwtl
xchg
mov
xchg
cwtl
jb
or
mov
mull
dec
push
pop
testl
cld
aas
add
or
mov
icebp
je
pop
aad
inc
popf
pop
loopne
ds
icebp
popa
aam
movsl
mov
pushf
ljmp
sbb
jl
xor
push
lock
sub
ret
mov
inc
push
xchg
mov
xchg
subl
push
cmpsl
mov
int
pop
in
fcomip
int3
xor
fbld
mov
test
jecxz
sub
ret
push
xchg
mov
sub
adc
adc
pop
cmp
xlat
or
jg
push
jl
out
rol
dec
jbe
cmc
sub
xchg
out
mov
jb
dec
test
test
insb
pop
les
jmp
cmp
pusha
mov
test
test
inc
imul
adc
shrb
test
idivl
xchg
jno
imul
out
iret
xchg
loopne
data16
push
sti
add
inc
cmc
lods
popa
xchg
xchg
cmp
fdivs
sub
lcall
mov
stos
dec
jmp
orl
jb
imul
into
xchg
js
sarl
dec
sbb
sub
das
data16
jle
rcr
lcall
jl
push
data16
push
enter
mov
insl
mov
xor
pop
mov
stc
icebp
ret
out
lret
movsb
scas
dec
jmp
or
adc
ret
adc
xor
repnz
jmp
jno
add
sbb
or
mov
inc
leave
mov
ds
rcll
ss
jns
popf
xchg
int3
sub
xor
sub
push
shl
orb
push
lds
mov
mov
mov
jne
aad
push
mov
mov
cmp
sahf
roll
out
jmp
outsb
dec
sti
xchg
dec
add
mov
add
stos
addr16
sbb
and
cmpsl
inc
sub
pop
push
xchg
roll
insb
cmp
push
mov
shrb
out
shlb
sarl
push
ret
cltd
mov
lea
xor
scas
push
inc
push
les
jnp
arpl
adc
cmp
outsl
outsl
test
in
into
add
or
push
mov
popf
mov
or
into
cmp
in
leave
rclb
push
xchg
js
jns
mov
rcll
aas
jns
mov
pop
loop
lret
push
push
outsl
add
add
ja
out
std
and
mov
arpl
sarl
or
add
lea
shrl
jb
daa
repz
jae
or
pop
aad
or
movsl
push
loop
adc
or
addr16
sbb
imul
sub
call
int
inc
adc
and
pop
stos
or
fbstp
jbe
jbe
mov
inc
pop
dec
jmp
enter
xchg
or
in
sbb
in
and
popf
outsb
pop
inc
int3
mov
cmp
adc
fwait
jle
sub
jo
jmp
mov
cmc
clc
sub
call
shl
jecxz
and
stc
stos
loopne
jno
lret
dec
lds
xchg
lcall
jmp
test
ret
mov
gs
into
aaa
mov
dec
cmp
or
cli
jns
pop
mov
cmp
pop
aam
push
out
inc
das
addb
cs
adc
stos
js
mov
popf
pop
pop
imul
ret
xor
sub
push
dec
mov
mov
popf
pop
mov
enter
aas
push
mov
int
js
mov
pop
lahf
call
jecxz
jg
or
dec
mov
sbb
ds
mov
stos
cmp
and
int
clc
and
sub
loop
sub
leave
mov
cmc
stos
inc
fcomi
es
xor
dec
adc
xor
stos
jae
fildl
outsl
test
push
in
movb
bound
insb
mov
mov
fdivl
cld
mov
add
mov
xchg
daa
mov
adc
aaa
adc
xor
and
mov
out
push
repz
and
mov
imul
cmpsl
aad
xchg
cwtl
test
mov
mov
mov
push
inc
lret
mov
xor
inc
bound
jmp
and
jb
inc
jge
and
push
cmp
jae
adc
cld
movsl
out
mov
in
or
push
adc
sbb
dec
mov
mov
mov
test
jl
pop
jmp
mov
lds
dec
out
inc
jo
pop
inc
into
adc
call
movsl
in
popa
fs
clc
xchg
loop
gs
sbb
mov
cli
out
sti
jmp
mov
out
lea
out
or
adc
adc
popa
mov
cmp
inc
fs
jge
in
xchg
inc
pusha
or
outsb
out
sub
sub
sub
and
or
push
or
sub
inc
pop
sbb
leave
das
mov
xor
mov
rclb
adc
movsl
inc
iret
inc
lods
les
test
call
mov
imul
mov
aam
mov
inc
in
test
sti
imul
pushf
pop
jne
in
xchg
outsb
out
daa
sbb
sbb
or
xor
lcall
fdiv
ficoms
pop
mov
pushf
bound
stos
dec
pop
mov
pop
call
test
mov
sub
jp
xchg
out
adc
dec
jg
inc
mov
rorl
jl
les
sahf
hlt
out
mov
cmpsl
movsl
enter
test
jns
test
hlt
mov
mov
push
pop
cmp
mov
out
dec
xor
call
ljmp
stc
add
or
ret
lret
sbb
inc
cltd
mov
xchg
cmp
jle
lods
pop
ss
sti
dec
mov
jmp
fldenv
fiaddl
jg
mov
lahf
rcrb
jle
iret
sbb
push
clc
mov
pop
repz
jno
mov
sub
jo
adc
fwait
xorb
dec
inc
ret
xchg
das
mov
fcomps
mov
mov
movsl
cmpsl
add
pop
push
pushf
das
jmp
lds
ds
inc
sub
jle
or
out
inc
jp
cmpsl
pop
adc
in
mov
adc
mov
stc
or
fsubs
pushl
roll
push
fsubrl
and
pop
fstpl
xchg
xor
imul
xchg
pusha
pop
push
xor
adc
lret
jmp
mov
mov
and
loopne
push
sahf
and
test
add
out
je
outsb
sysexit
ret
jmp
fdivl
add
add
mov
xorl
call
das
mov
push
clc
ljmp
lret
movsl
fdiv
aas
inc
and
mov
out
loop
sub
or
or
out
outsb
fidivrs
xor
rolb
jne
inc
cmc
add
test
adc
call
les
dec
stc
jge
mov
les
mov
mov
fistpl
jb
push
dec
ret
jae
fstl
sub
aaa
jl
arpl
cmp
dec
lods
dec
mov
dec
div
adc
mov
aas
enter
mov
cwtl
movsb
inc
push
mov
add
pop
push
mov
cmp
fisubl
mov
cmpsl
push
mov
ss
or
addb
adc
pop
jne
pop
ret
fwait
xchg
jle
push
test
and
mov
sub
ljmp
out
aaa
or
ss
stc
pop
push
push
cmpsb
leave
fists
sbb
push
dec
adc
jbe
stos
shll
hlt
testb
xchg
ficompl
dec
sbb
mov
inc
ret
sbb
cmp
jno
shlb
mov
das
loop
inc
push
add
xchg
nop
clc
cmc
pop
pop
clc
add
xchg
adc
int3
in
ret
sbbl
movsl
mov
dec
push
push
inc
or
sub
xchg
push
and
test
dec
cmp
sahf
jl
in
xor
scas
mov
movsb
cmpl
out
arpl
fmuls
push
sbb
ja
popa
xor
js
pop
cmpsb
mov
xchg
mov
jg
int3
add
lods
dec
inc
loopew
jbe
jp
lock
push
push
push
adc
push
dec
lock
add
push
add
and
sbbl
cmp
mov
cwtl
xchg
scas
cmp
dec
jnp
sti
sub
aad
jmp
pusha
fldenv
or
shrl
jle
adc
mov
data16
daa
inc
repz
xor
push
adc
mov
cld
mov
stos
or
fwait
adc
mov
testb
push
test
jp
ret
in
push
push
movsb
insl
test
push
mov
je
and
xor
pop
addb
out
imul
inc
xor
gs
cmp
or
cmp
loopne
sub
push
jne
xor
nop
idivl
inc
push
inc
cmc
movsb
and
pop
stos
ss
scas
sub
fsubs
mov
bound
sub
out
and
inc
mov
gs
es
dec
xorb
dec
dec
jle
out
push
mov
scas
cmp
jne
sub
pop
push
mov
es
mov
pushf
adc
add
sub
stc
dec
xlat
out
pop
les
sub
mov
mov
ljmp
mov
stos
jl
lods
leave
dec
sbbb
cmc
sahf
adc
popa
lret
push
test
pop
ret
and
fadds
push
or
lds
push
mov
stos
pop
out
fisttps
push
arpl
aas
or
adc
jnp
fwait
xchg
mov
stos
imul
popf
ret
xchg
push
cld
out
cmpsb
das
ret
test
push
aam
daa
push
lods
mov
lret
hlt
mov
or
sub
pop
cmp
and
pop
lods
int
sub
mov
out
movsl
xorl
mov
cli
or
jno
arpl
clc
inc
xchg
jmp
pop
mov
decb
mov
or
jmp
mov
mov
scas
mov
lcall
mov
sub
mov
mov
fdivr
sbbb
or
dec
stos
es
je
outsl
out
or
xlat
mov
scas
sbb
mov
pop
pop
fimull
negl
sahf
mov
push
and
dec
sub
das
aaa
mov
mov
or
jle
cwtl
and
or
in
gs
das
mov
cmp
fildll
out
sahf
jp
int
mov
call
jbe
iret
aam
and
adc
loop
rolb
or
cmp
sub
mov
les
inc
jo
push
sbb
sub
stc
clc
xor
jno
xchg
mov
movsl
mov
cwtl
in
rcll
mov
leave
add
sub
and
je
pop
pop
fwait
xchg
cmp
pop
mov
scas
in
or
lcall
lcall
stos
cmp
sub
ss
ds
mov
ror
mov
inc
in
cld
dec
imul
lcall
cmp
jmp
mov
and
ds
add
dec
sub
jae
jno
mov
dec
xchg
push
imul
push
scas
pop
enter
add
fstp
push
sub
pop
int
inc
cli
add
sbb
movsb
int
pop
mov
dec
inc
push
insl
ljmp
push
pop
aam
push
int
sub
push
out
cli
pop
int
jbe
sahf
fimuls
popf
xor
fs
iret
or
xor
mov
ficoms
sbb
push
xlat
adc
xchg
jb
test
test
addr16
sbb
rol
mov
push
mov
mov
push
xchg
adc
insb
jae
in
shrb
adc
jmp
outsb
xchg
mov
lods
sub
nop
scas
aad
pop
or
leave
and
lods
addr16
fdivrs
dec
sbb
sub
or
icebp
sbb
jbe
arpl
xchg
nop
nop
test
cmpsb
negl
sub
adc
xor
bound
push
data16
lods
ret
mov
pop
inc
cmp
test
scas
xchg
cmp
bndstx
mov
lods
jns
rol
sbb
dec
xor
cld
les
outsl
out
enter
imul
add
lods
stos
adc
sahf
jns,pt
cmp
inc
dec
lcall
push
jg
mov
test
xchg
xchg
adc
fwait
adc
jbe
aaa
dec
fldt
je
pop
cmp
rclb
pop
scas
lcall
out
cmovge
stos
sub
jp
xchg
in
inc
inc
push
orl
mov
cmp
iret
sbb
xchg
or
fdivrs
js
daa
int3
bound
rep
inc
out
ja
bound
xchg
stc
mov
cltd
cmp
adc
in
iret
mov
je
ljmp
push
lods
aad
mov
ficomps
mov
cmp
mov
mov
add
mov
mov
rcr
mov
dec
test
lahf
imul
pop
sbb
dec
enter
mov
push
cmp
in
mov
add
push
orl
dec
out
push
xchg
shrl
out
nop
mov
clc
pusha
test
movsb
imul
and
rcll
imul
adc
mov
jbe
test
xor
adc
aad
cwtl
inc
adc
lods
add
and
push
sbb
daa
pushf
adc
add
xor
jl
pop
pusha
cmp
xchg
xor
cli
sub
in
int
push
xchg
pop
test
fistpl
mov
sti
push
mov
movb
inc
dec
stc
mov
mov
adc
out
mov
and
aad
sbb
mov
pmaxub
test
in
fwait
movsb
lods
inc
fucomi
push
xor
mov
inc
sbb
push
dec
stos
out
out
cmp
mov
pop
call
movsl
nop
rcrl
dec
and
and
loopne
add
fidivrs
loopne
cmp
inc
inc
push
push
cmpsb
dec
out
and
cli
jmp
sub
add
sbb
sub
jecxz
jg
jne
or
nop
sbb
adc
ret
invd
sbb
pop
inc
cmp
or
out
mov
filds
testb
fs
push
shlb
add
jecxz
stc
or
shlb
jge
sti
sbb
jmp
test
xchg
repnz
out
add
icebp
dec
shrb
inc
xor
add
and
pop
iret
psrld
insb
mov
jo
out
outsb
fstl
push
pop
xlat
xor
pop
jmp
xchg
xchg
dec
xchg
lahf
push
push
fwait
jae
xor
and
sub
ja
in
cs
mov
orl
mov
dec
fwait
pusha
pop
cmpsb
xor
and
mov
jnp
or
outsl
sub
lret
jne
gs
add
in
push
int
nop
leave
inc
add
inc
push
and
adc
push
fistl
adc
loope
mov
mov
jmp
xor
sbb
lods
ljmp
push
lret
movsl
jle
daa
or
pop
out
es
ljmp
test
bound
inc
scas
mov
sahf
lcall
jae
xchg
dec
fiadds
je
mov
ret
aam
retw
push
call
adc
xchg
adc
inc
inc
cmp
push
addr16
jne
loop
das
jg
jecxz
and
addr16
stos
jo
loopne
and
mov
mov
cmc
dec
out
lds
out
and
or
dec
xchg
lds
jns
pop
outsl
xor
leave
pop
repz
aad
jecxz
xlat
xchg
adc
push
ds
cli
jge
std
mov
call
sbbb
mov
in
and
push
mov
mov
mov
and
mov
test
stc
add
imulb
stos
or
cltd
fcompl
in
sub
dec
mov
or
xor
cmp
repz
add
xchg
pop
cmpb
add
mov
sbb
and
outsl
sbb
cltd
rolb
sarb
push
jb
push
leave
mov
pop
xlat
xchg
xchg
lret
pop
pop
sub
inc
sbb
cmp
xchg
int
rcrb
test
pop
sbb
mov
rcll
xlat
fprem
lcall
in
imul
inc
inc
lea
mov
sub
roll
sarl
repz
adc
aaa
in
mov
les
loop
cld
sarl
dec
rcrb
cmp
clc
sub
inc
mov
ja
movb
jnp
mov
lret
jg
xlat
iret
pop
stos
mov
xchg
dec
shl
lock
rclb
dec
bound
icebp
lods
arpl
into
xchg
jg
jle
mov
fdivrs
pop
loope
jle
mov
in
cmp
push
leave
sub
jge
inc
scas
aam
outsl
jns
je
ret
in
ss
or
dec
test
mov
inc
pop
xchg
sbb
inc
int3
cli
sbb
por
adc
jmp
repnz
cmp
pop
mov
xchg
in
push
mov
sub
mov
or
int3
popa
inc
dec
arpl
int3
ds
push
add
repz
push
mov
scas
loopne
scas
jmp
pop
or
push
pop
add
movsb
outsb
popl
ffreep
mov
enter
aaa
int3
sub
adc
pop
mov
push
in
pop
add
pushf
iret
fsubs
sbb
enter
ret
add
out
mov
adc
sbb
mov
movsl
cli
aad
nop
push
xor
mov
xchg
xor
jle
sub
mov
xchg
es
sbb
iret
ret
sbb
sbb
push
int
cmp
ja
ret
push
jbe
test
pop
clts
lock
test
nop
in
aaa
dec
jl
xor
jae
or
in
icebp
push
mov
bound
or
pop
lahf
mov
pop
ret
pop
cmp
and
xchg
cltd
hlt
es
popf
mov
mov
or
push
dec
out
mov
fs
add
std
inc
mov
jmp
adc
fnstenv
push
mov
inc
ja
mov
push
or
pop
cli
outsl
ljmp
xor
call
int3
dec
xchg
sti
sbb
push
pop
cmp
fldenv
jo
cmp
xor
sbb
xchg
nop
mov
jae
mov
stc
ror
out
loop
aad
lock
pop
ljmp
int
jns
mov
jp
adc
pop
push
int
xor
jae
mov
or
iret
xor
imul
and
push
cmpsb
adc
or
mov
mov
pop
adc
mov
lods
cmp
cmpsl
pop
adc
arpl
stc
ret
xor
mov
cltd
and
hlt
mov
xchg
aaa
call
xchg
pop
adc
pop
or
mov
cmc
push
imul
ret
popa
cmp
ss
loopne
insb
push
mov
insb
push
imul
and
or
lahf
stc
ja
jbe
mov
xchg
pop
lea
icebp
pop
mov
sub
mov
mov
shll
outsb
es
aaa
add
iret
lods
xor
push
jno
rolb
sbb
mov
fcompl
mov
adc
out
into
mov
loope
cmp
mov
daa
mov
mov
mov
mov
leave
dec
add
cs
push
xchg
cmp
mov
and
movsb
fldenv
mov
pop
lods
nop
out
ret
mov
loope
out
pop
xchg
pop
lods
xchg
fisttpll
xor
fcoml
std
mov
sbb
mov
push
mov
je
mov
loopne
xor
aas
jb
xlat
jmp
jae
push
jp
ret
adc
sbbl
ljmp
dec
paddq
push
aaa
dec
dec
jmp
fwait
xor
xchg
in
jp
fcompl
sahf
scas
call
adc
or
or
mov
movsb
pop
cli
icebp
mov
jmp
inc
pop
test
pop
sub
test
pop
mov
cmp
icebp
mov
or
daa
dec
mov
pop
jecxz
cmovp
test
mov
or
or
jmp
popa
test
sub
orl
ret
xchg
sarl
cmp
or
and
adc
xlat
sub
pop
sbbl
cli
jl
cmc
push
out
jle
test
dec
in
xchg
jnp,pn
gs
lods
lock
cmp
mov
mov
pop
fwait
mov
movd
or
jo
pushf
jbe
out
loopne
push
add
pusha
mov
ret
jno
ja
outsl
xchg
arpl
add
xchg
add
mov
out
push
sub
sbb
jnp
cwtd
sub
sub
popf
test
loopne
ljmp
push
imul
push
mov
push
faddp
das
adc
xchg
cli
mov
dec
jle
adc
sbb
dec
push
xlat
jb
fisubrl
popf
in
or
jl
push
push
inc
popf
daa
fwait
push
xchg
dec
shrl
add
cmp
xchg
in
popf
pop
stc
dec
les
daa
lcall
xor
nop
cmp
pusha
sahf
cld
xchg
xchg
call
or
push
push
xlat
pop
mov
push
sar
jp
xor
sbb
cmpsb
push
loopne
shl
inc
outsb
in
sub
xchg
dec
fwait
test
das
push
mov
inc
xchg
pop
add
push
outsb
jecxz
movl
sub
gs
jl
fcoml
stos
push
mov
leave
lea
push
xchg
jno
and
xor
add
push
in
mov
sbb
mov
loop
jge
pop
aad
dec
popa
adc
jecxz
pushf
mov
leave
insb
inc
add
sahf
xor
pop
mov
sub
cmpb
adc
clc
ds
pop
sbb
inc
jnp
out
clc
sbb
scas
cld
pop
mov
jbe
cwtl
push
ja
adc
push
sbb
sub
frstor
add
adc
xor
and
mov
fsubrp
lods
and
rorb
daa
sbb
ret
stc
lds
xor
sbb
test
test
fadds
inc
jae
sbb
negb
mov
and
clc
push
dec
cwtl
fdiv
mov
and
xchg
cmp
add
scas
adc
pop
push
mov
leave
and
cmp
mov
mov
aaa
sub
jae
cmp
out
push
icebp
xchg
push
and
push
jp
icebp
rorb
xchg
daa
xchg
sbb
sbb
imul
lds
out
and
push
push
inc
xor
add
jne
mov
push
and
daa
inc
lds
cmpsl
inc
jnp
ja
stos
inc
xchg
push
mov
and
xor
push
adc
sub
out
loop
cmp
pop
push
xchg
out
adc
xchg
xlat
aaa
or
out
mov
out
enter
push
stc
xchg
enter
lods
andl
cmpsl
cmp
fstpt
js
rep
xor
dec
add
iret
ljmp
push
add
popf
stos
pop
lock
arpl
cmc
pop
stos
pop
push
iret
cld
inc
and
pop
inc
xchg
jp
imul
inc
enter
push
and
push
mov
scas
xchg
and
add
xchg
stos
outsb
ss
pop
push
push
jbe
cs
fimuls
outsb
sbb
call
repz
pusha
int3
inc
cltd
xor
or
pop
aam
sbb
test
jnp
mov
mov
push
pop
pusha
cs
scas
jecxz
in
cmp
bound
shrb
adc
scas
inc
xchg
push
shll
cmc
inc
pop
stc
fists
in
dec
aam
adc
sbb
xor
inc
cli
movsl
cld
adc
and
sbb
lea
inc
int
js
imul
add
or
jecxz
dec
loopne
xchg
fdivr
in
cmp
push
loope
out
fldenv
xor
inc
nop
xchg
xchg
add
xor
sub
sub
in
dec
push
gs
adc
mov
in
mov
mov
fnstsw
push
pop
add
dec
pop
adc
orb
sbb
xor
mov
and
and
insl
mov
adc
inc
cmp
xchg
jg
daa
push
mov
mov
lds
cmp
in
jb
or
xchg
jmp
popa
xor
push
stos
push
addr16
lods
test
outsb
aaa
mov
mov
outsl
in
cmp
cmp
dec
add
mov
adc
jg
mov
ret
xchg
cmp
xor
lock
adc
call
aaa
sub
dec
jae
js
aaa
pop
xlat
nop
jae
pop
fnstenv
mov
xchg
es
negl
or
call
jne
imul
ljmpw
ljmp
jp
rorl
cli
inc
sbb
mov
ret
leave
sahf
jmp
test
shrb
ljmp
mov
add
push
iret
mov
movsl
pop
sub
jns
cmp
inc
xor
xchg
xchg
adc
addb
sbb
xlat
ret
push
mov
jbe
jnp
fiadds
or
push
aad
popa
lods
ja
flds
mov
outsb
addl
push
imul
pop
dec
jae
cld
xchg
icebp
mov
lods
scas
pop
aas
or
dec
adc
dec
or
pop
mov
cmp
nop
pushf
loope
in
or
mov
pop
xchg
dec
out
fnstenv
loopne
hlt
bound
andl
jnp
les
push
cmp
jne
jle
loope
jb
movsl
cmp
xchg
insl
xor
and
sub
lret
faddl
dec
add
xchg
pop
pop
pop
pop
or
ja
imul
mov
xlat
rcrb
and
dec
jo
jnp
pop
cltd
mov
jg
fidivrl
lods
out
out
adc
mov
pop
insb
loopne
pop
adc
xchg
das
mov
divl
in
aas
jnp
inc
and
sbb
dec
mov
xchg
push
dec
cmpsb
ret
test
sub
add
js
fwait
int3
pop
add
add
fldt
loopne
ja
in
cli
mov
or
test
xor
mov
popa
mov
shrb
test
ja
sarl
jge
outsl
pop
fidivl
out
or
add
dec
or
sbb
rorb
push
and
push
outsb
lret
sbb
mov
cmp
push
ret
mov
push
cli
inc
gs
xor
cmp
inc
xchg
cwtl
xor
and
lock
and
imul
mov
cmp
xchg
push
sbb
pop
pop
das
mov
std
jnp
sub
lods
sarb
mov
add
call
xchg
fbstp
mov
xlat
cmp
mov
nop
and
test
mov
dec
sbb
not
hlt
pop
sub
incb
mov
jg
jmp
andl
xorl
add
outsb
push
dec
icebp
dec
lds
pop
mov
pusha
fisubrs
notb
dec
cmp
cmp
jae
movsl
adcb
inc
cltd
inc
ja
scas
add
call
xchg
xchg
lahf
xchg
orb
pop
ljmp
mov
inc
dec
xor
lods
popa
ds
sub
mov
or
sti
xlat
xchg
jecxz
xchg
gs
sahf
mov
mov
repnz
sbb
out
arpl
jnp
mov
or
mov
repz
dec
jp
jnp
push
sbb
jle
push
sub
adc
pcmpgtd
push
pop
xlat
pop
ss
mov
cwtl
cmp
dec
mov
cmc
lds
cmpsl
or
mov
xchg
enter
push
js
or
jp
mov
push
lret
idivl
sbb
sbb
xchg
xchg
jmp
cmp
mov
rcrl
dec
clc
inc
hlt
sbb
push
scas
ss
fcmovnbe
fwait
lock
push
mov
pop
popf
mov
mov
push
add
add
addr16
iret
xchg
stos
ficoms
cs
mov
in
cmc
push
shlb
mov
aaa
pop
push
inc
test
sbb
mov
dec
mov
stc
cld
imul
dec
inc
lahf
inc
pop
shlb
js
jmp
sub
and
cmpsl
inc
bound
cmp
xchg
lahf
and
sub
and
test
jle
int3
out
jno
cmpsl
loop
aaa
imul
cwtl
ret
nop
and
lcall
dec
cltd
movsb
xchg
repnz
lods
xchg
adc
sub
test
faddl
mov
into
lods
lock
clc
sub
jle
pop
pop
xlat
into
movsb
mov
insl
rcrl
ds
sbb
fs
repnz
fsubr
inc
push
outsl
aad
ljmp
xorl
mov
jmp
sub
sub
mov
aas
jbe
mov
dec
add
mov
scas
and
adc
popf
and
cmp
mov
cmpsl
lahf
in
xchg
dec
outsl
in
jb
jnp
lods
pop
shll
and
inc
mov
stos
push
lods
ja
push
sbb
repz
or
sub
leave
add
sub
pop
sub
das
mov
cmp
xchg
or
rorb
scas
xchg
cltd
ss
sub
insl
cli
push
dec
sbb
in
popa
cld
inc
jnp
mov
mov
cmp
jecxz
notl
xchg
cmc
das
add
mov
and
bound
mov
stos
inc
dec
repz
xchg
lock
or
cmp
jge
pop
push
fildl
mov
inc
adc
jno
jae
xlat
pop
push
aas
or
pop
or
loope
pop
adc
xchg
push
loopne
scas
jns
and
std
and
test
sub
xchg
aaa
cmp
sub
lret
mov
gs
inc
lock
cmpsl
shll
push
lds
adc
int
dec
roll
lahf
and
push
lods
and
out
leave
mov
fwait
icebp
xchg
sub
stc
insl
inc
xchg
mov
data16
mov
inc
cmpsb
js
mov
sbb
dec
das
shrl
cmp
sti
ds
outsb
push
leave
xlat
fs
lret
cmpsl
pop
lods
fs
mov
repnz
ret
int
mov
adc
mov
fs
and
fistpl
mov
incb
add
sub
ret
push
ror
or
fistpl
hlt
imul
mov
pusha
jne
and
xlat
mov
aaa
mov
in
mov
clc
fnstsw
int
aad
inc
sbb
and
outsl
out
and
fwait
pop
ljmp
ret
enter
and
push
and
and
xchg
pop
call
aad
insb
fildll
xor
sbb
mov
mov
or
mov
ficoms
add
xchg
push
shr
ja
sti
rcrb
lret
inc
mov
mov
or
xchg
daa
fdivrl
jmp
daa
shl
hlt
mov
pop
rcrl
int3
mov
cmp
fsts
and
js
jnp
je
ficoml
push
pop
jb
jmp
xor
fisubl
hlt
icebp
mov
fcoms
ja
mov
push
stc
daa
std
ficoms
cltd
out
jbe
xorl
sarb
scas
mov
jge,pn
gs
scas
sbb
outsb
and
push
sub
dec
adc
ja
xor
mov
jbe
mov
mov
jge
jb
scas
popf
leave
cs
into
cmp
add
pushw
adc
paddusw
data16
jp
data16
fldt
dec
push
fidivs
jbe
fsubp
js
mov
orl
loopne
data16
push
nop
out
jnp
xchg
fiadds
pop
inc
arpl
sub
in
test
inc
call
ss
jge
enter
loope
jnp
mov
xchg
push
cmpsb
incb
ja
mov
cmp
push
ret
imul
pushf
repz
cwtl
sbb
mov
mov
and
mov
mov
sbb
inc
mov
xor
out
xchg
and
popf
xchg
enter
adc
fisubrs
xlat
sub
pop
push
mov
mov
fs
jle
out
je
out
cmp
and
jecxz
js
cmp
mov
pusha
cmp
sbb
js
outsb
leave
push
arpl
out
mov
aas
and
jl
test
mov
stos
cmp
mov
lods
push
dec
add
jmp
sbb
inc
data16
xor
enter
fwait
lahf
icebp
test
test
adc
dec
popa
shl
cmp
jns
inc
pop
mov
aam
fiaddl
int
dec
fdivrs
mov
fidivrl
mov
jbe
testl
hlt
or
xlat
adc
movsl
das
je
jp
rolb
cmp
dec
icebp
adc
mov
and
or
pop
cld
in
pop
mov
in
enter
testb
mov
out
mov
xchg
jmp
lcall
aaa
pop
and
loop
bnd
pop
jecxz
fnstsw
mov
sub
in
gs
push
hlt
incl
xor
es
shl
movsb
mov
xlat
inc
lret
nop
dec
sbb
sbb
pop
pop
dec
push
mov
mov
mov
jae
dec
test
iret
imul
or
adc
jg
stos
gs
add
inc
lock
roll
flds
sbb
nop
jnp
xor
add
inc
icebp
dec
xchg
cli
inc
out
je
clc
clc
mov
pushf
xor
sti
test
xchg
mov
pop
movsb
cli
ret
cld
lock
jbe
add
repz
in
add
pop
pop
lret
popf
insb
das
std
push
pop
adcb
fs
push
push
in
mov
mov
je
cmp
mov
jo
xchg
or
out
scas
orb
mov
icebp
mov
test
dec
mov
loop
push
jl
xlat
jge
lahf
out
inc
js
cld
dec
pop
inc
add
gs
mov
sub
mov
imul
xchg
bound
mov
pop
in
xor
or
fldenv
mov
xchg
loopne
sub
cmpsl
mov
cmpl
idivb
mov
pop
mov
xchg
idivl
sub
mov
adc
call
mov
ret
inc
insl
icebp
aas
push
cltd
aaa
roll
sbb
mov
or
loop
scas
mov
xor
dec
pusha
or
push
aas
cmpsb
push
mov
jmp
cvtdq2ps
aad
dec
xchg
faddl
xor
das
dec
scas
mov
mov
mov
outsb
fwait
sub
or
roll
mov
mov
mov
inc
xor
adc
jge
xchg
inc
or
popa
inc
adc
lcall
nop
bound
je
lea
imul
mov
daa
push
dec
lret
jmp
mov
sbb
sub
lock
sbb
cltd
popf
xchg
ret
xor
pop
call
in
pop
or
std
jmp
jmp
in
in
add
fnstcw
inc
cmpsl
jno
bound
dec
lret
lcall
cltd
sti
icebp
arpl
push
mov
aad
popf
stc
aam
ret
xor
aas
sahf
jmp
cmp
push
rorb
pop
es
push
inc
cmpsb
fdivrp
sbb
add
inc
xchg
outsb
sbb
sub
mov
repnz
fmull
add
addb
leave
push
aad
xchg
pop
pop
fstl
jge
rcl
mov
lahf
jg
aaa
fidivrl
in
in
cmp
ja
pushf
fs
jl
push
rclb
mov
loope
lahf
inc
jb
jge
jbe
add
cltd
mov
sbb
dec
mov
mov
and
pushf
push
movsl
test
loopne
jns
pop
jne
pop
mov
sbb
mov
addr16
sar
in
add
subb
cmpsb
push
leave
sbb
imul
out
sub
mov
mov
pop
fwait
add
push
sbb
ret
repz
sub
push
enter
jle
fdivr
xlat
ss
cmp
dec
mov
xor
ja
icebp
mov
sub
lret
loopne
in
push
mov
sbbb
pop
stc
cwtl
pop
rorb
test
cltd
dec
cld
pop
add
mov
aas
test
cltd
push
add
std
scas
mov
nop
dec
or
cmp
iret
shlb
sub
cld
addr16
hlt
daa
jno
push
int
inc
mov
movsb
ficompl
jp
push
pop
subl
and
adc
sti
in
pop
pusha
sbb
mov
fisubrs
das
mov
imul
cli
int3
fistps
call
pop
adc
adc
push
pop
xchg
sbb
add
in
fdivl
lock
imul
add
pop
push
pop
mov
pop
imul
jl
jne
movsl
cmpsb
cmp
sti
add
sub
sub
scas
push
xor
stos
loope
leave
jp
cmp
sbb
aas
sti
aas
xlat
inc
mov
movsb
outsl
bnd
cmpsl
movsl
fwait
xchg
out
stos
arpl
or
xor
adc
cmp
push
icebp
nop
out
bound
pop
loope
or
xchg
mov
jno
dec
vcvtsd2ss
adc
out
and
push
out
pop
pop
in
shrb
cli
mov
lock
loop
jae
add
jo
int3
dec
xchg
xchg
add
cwtl
gs
pop
sub
stos
jns
add
push
push
or
or
data16
xor
push
sub
aad
mov
outsl
loope
jmp
mov
cltd
push
mov
add
cltd
loop
mov
push
push
and
lock
out
int3
xchg
inc
call
rolb
mov
inc
mov
mov
xorb
into
dec
pop
sti
inc
loop
cmpsb
cmp
popa
popa
test
test
cmp
aad
xor
fwait
push
pop
js
nop
out
mov
pop
and
adc
mov
mov
popf
dec
mov
push
sub
pop
sub
dec
scas
scas
or
cmp
les
mov
pop
add
pop
scas
out
aad
fstl
jmp
mov
adc
loope
pop
loope
xor
mov
movsl
lret
ficompl
movsl
mov
dec
dec
pop
mov
es
mov
jecxz
lds
jbe
xchg
mov
add
ret
imul
mov
sbb
fxch
inc
adc
add
aaa
xlat
mov
pop
loopne
cwtl
lahf
pop
stc
jo
movsl
jae
mov
adc
cmp
mov
adc
lds
sub
arpl
push
clc
mov
mov
movsl
dec
jp
clc
mov
mov
fisttps
adc
dec
cmc
out
icebp
rcr
sbb
xor
stos
cli
dec
insb
add
mov
std
stos
lds
popf
scas
mov
test
andb
xor
arpl
fs
test
sub
or
xor
mov
sahf
data16
jg
mov
push
rclb
jg
out
cmpl
daa
add
je
mov
into
lods
add
jbe
iret
jle
dec
mov
sbb
lds
mov
and
push
cltd
mov
push
pusha
out
jae
cmp
add
mov
pop
aad
xor
scas
lds
lcall
mov
add
add
repnz
or
push
and
in
repz
xlat
cmc
negl
stc
mov
aaa
arpl
push
iret
repnz
lds
fistps
fwait
cmpsb
mov
xor
cmc
pop
outsb
push
push
xchg
bswap
sti
pop
mov
xchg
inc
adc
test
je
and
or
test
add
xlat
mov
dec
movsb
sub
or
mov
fiadds
orb
fsubs
cs
lahf
jmp
add
pop
jnp
dec
out
jecxz
jmp
push
les
inc
mov
lret
out
div
add
xchg
mov
inc
repnz
daa
pop
flds
nop
pushf
xlat
addb
push
or
inc
enter
mov
setns
mov
inc
testb
xor
nop
in
cmp
test
mov
xchg
pop
scas
adcb
pop
ret
xor
out
jbe
jecxz
push
jmp
xchg
test
sbb
les
das
sub
addr16
jne
push
jne
jns
mov
fstl
es
mov
daa
pop
into
xchg
aaa
pop
movsl
pop
fisttpll
pop
jle
ret
sbb
enter
iret
xchg
xchg
mov
test
or
cmp
frndint
lret
dec
xor
lcall
in
push
xchg
in
mov
pop
jb
sub
dec
cltd
or
pop
dec
lret
imul
daa
mov
push
insb
push
add
mov
xor
cli
sti
xor
push
mov
decl
mov
jbe
and
ret
mov
mov
fistpl
xchg
lret
cmp
mov
xor
pushf
imul
stos
mov
jecxz
pushf
inc
lret
mov
pushf
movsl
sti
lods
fldl
repz
fsubs
out
fwait
daa
push
insl
mov
shlb
mov
xor
inc
loopne
fidivs
and
lret
es
mov
jnp
int
pop
mov
je
dec
test
pop
cmpsb
dec
sub
jmp
pop
dec
aad
scas
clc
or
out
dec
loop
bound
les
cmpsl
cmp
out
cmc
and
dec
packssdw
mov
xor
jbe
roll
push
lock
gs
ret
jnp
jmp
lret
jge
aas
mov
cmpsl
xchg
scas
das
lock
insb
adc
outsl
icebp
sbb
inc
je
sti
push
jl
movsl
loop
or
inc
mov
ja
ret
les
out
int3
cltd
popa
sbb
inc
inc
xchg
jmp
cmp
pop
ret
rclb
stc
das
jae
jg
movsl
movsb
pop
out
mov
bound
imulb
sub
mov
jno
dec
loope
xchg
lds
rorl
mov
dec
push
shrb
popf
rorl
addl
push
testb
and
test
dec
xchg
dec
mov
or
cwtl
pop
xchg
mov
add
adc
clc
popa
cmp
jmp
xor
loope
push
aaa
loope
inc
stc
inc
sub
or
ljmp
push
and
mov
push
in
xchg
and
mov
inc
test
ljmp
mov
test
addr16
stos
out
mov
leave
shll
filds
enter
and
fidivrs
add
xor
pop
cld
pop
aas
aas
xor
out
jne
cmpsl
cld
fdiv
lds
and
ds
out
sub
push
loopne
inc
sahf
adc
and
fs
jne
cmp
push
xchg
movsb
or
push
jg
jecxz
jae
inc
jbe
movsl
out
jnp
inc
inc
push
sub
push
ret
enter
pop
push
cmp
aaa
push
mov
ficoml
movsl
mov
mov
fmull
mov
lea
lcall
daa
icebp
sti
xchg
repnz
mov
or
jecxz
fidivrs
arpl
in
dec
addr16
cmpsb
in
push
cld
or
and
cli
sbb
sub
loopne
jge,pt
movsb
imul
jnp
adc
xlat
shrb
and
or
test
ds
cmp
xchg
hlt
je
bound
adc
iret
dec
mov
mul
shl
mov
dec
out
lods
stc
adc
pusha
mov
jecxz
add
jg
cmp
jnp
push
sbb
jne
push
pop
pop
mov
test
insb
pusha
push
xlat
sbb
fisttps
insb
out
push
ret
pop
xor
mov
add
into
mov
cmp
pop
js
ret
mov
jmp
in
or
fcom
jle
sub
push
pop
aam
pop
push
cmp
xchg
cli
cmp
push
clc
and
out
cmpsl
inc
int3
cli
xchg
iret
xchg
xchg
mov
and
mov
mov
xor
stc
jae
pop
sub
ret
jecxz
mov
adc
sbb
jb
cmpsb
mov
jno
mov
icebp
test
fmul
mov
out
mov
fidivrl
fcmovbe
in
dec
rorl
movsl
xor
sarb
dec
loop
scas
mov
inc
lods
mov
mov
cli
inc
cmp
cmp
pop
inc
ja
nop
mov
orb
and
ret
xorl
dec
cwtl
mov
add
sub
dec
out
insl
pushf
outsl
je
mov
pop
popa
dec
pop
test
stc
nop
lods
mov
imul
sti
cld
movsb
movsl
pop
ja
jecxz
fisttpll
jbe
dec
stc
sbbl
aas
inc
insb
divb
push
lcall
adc
inc
data16
sbb
jb
mov
ds
xchg
ficoml
insb
sbb
je
dec
push
imul
lods
shl
cwtl
shll
mov
std
loopne
rclb
inc
js
sub
and
out
divl
mov
ds
arpl
scas
push
pop
jns
fs
push
and
js
and
add
push
call
xchg
add
cmp
jnp
jmp
outsl
pop
sub
inc
pusha
lds
pop
addl
or
jle
jo
orb
xor
inc
daa
mov
pusha
mov
mov
add
mov
jnp
sub
cmp
out
jl
mov
sbb
ds
lods
mov
loop
adc
clc
mov
mov
stc
enter
sub
and
xchg
outsl
dec
mov
addl
imul
sbb
and
xchg
cwtl
xor
jne
lahf
js
xor
xlat
loopne
test
fdiv
pop
adc
lahf
mov
ds
ret
fisttpl
mov
lret
fwait
jle
ja
adc
imul
jno
nop
cmp
repnz
lahf
jb
jecxz
lea
and
push
mov
cmp
jae
imul
xchg
xor
pop
jge
jo
rolb
jne
cmp
mov
stos
scas
fiadds
shll
out
inc
ljmp
popa
inc
jnp
mov
cmpsb
jo
stos
rclb
rolb
sbb
or
inc
sti
xchg
mov
mov
fldenv
sub
cmp
xor
je
arpl
inc
or
addr16
sub
jns
jecxz
gs
jecxz
test
icebp
hlt
sbb
cmpb
and
int
fldl
adc
dec
pop
push
sbb
add
push
mov
repnz
lret
ljmp
mov
scas
xchg
in
pop
sbb
cli
xor
xchg
or
jg
into
dec
ds
push
jp
sbb
and
fwait
jge
repz
testl
mov
and
add
popf
push
add
mov
mov
dec
dec
addr16
cmc
push
in
jp
popf
fs
xchg
cmp
orl
imul
flds
aaa
xor
lods
or
add
notb
mov
inc
mov
mov
jo
test
scas
mov
test
push
dec
push
xor
sbb
adc
sbb
shl
sub
aam
outsl
addr16
fwait
add
xor
sbb
xchg
fwait
in
pop
addr16
mov
fdivs
or
sub
hlt
pop
movsb
cltd
jmp
inc
jno
jmp
cld
andl
dec
inc
addr16
lret
jle
mov
or
jl
sbb
mov
rcr
mov
xlat
adc
inc
in
dec
xchg
xor
push
test
arpl
popf
or
xchg
pop
inc
push
pop
adc
fadd
xchg
in
and
mov
or
test
cmp
scas
adc
imul
in
sub
scas
loop
push
call
dec
ficomps
xchg
mov
sbbl
rorl
lcall
mov
popa
movsb
dec
jae
cwtl
inc
fnstsw
xchg
sbb
rep
or
cmp
or
or
jl
mov
dec
in
ljmp
insl
cmpsb
mov
int
cmp
loop
jge
mov
imul
sub
mov
sub
lea
sub
mov
inc
imul
cwtl
mov
xlat
jo
pop
push
add
xor
inc
mov
js
xor
push
sar
lods
jbe
scas
xchg
xor
in
cld
mov
insl
addr16
xor
pop
push
sbb
dec
mov
lahf
orb
cmpxchg
dec
pop
stos
fwait
and
pop
test
mov
inc
inc
adc
jae
xchg
inc
into
push
sub
cld
loope
xlat
push
jbe
repz
lods
push
push
jecxz
lret
addr16
jnp
out
test
sbb
int
imul
pop
bnd
mov
pop
push
pusha
pop
arpl
mov
mov
stc
jo
mov
cltd
and
push
ja
imul
ljmp
and
mov
clc
dec
pushf
stos
push
sub
call
scas
movsl
pop
sub
xchg
stos
jl
pop
subl
sbb
out
mov
cwtl
sti
sbb
out
or
lahf
and
stc
fldt
lcall
mov
ja
rcl
ds
mov
ljmp
dec
mov
cmp
movsb
in
fcomp
test
jl
pop
inc
or
dec
jge
dec
jle
and
hlt
push
adc
or
mov
xchg
dec
stos
jns
xor
dec
adc
adc
sub
sbb
outsb
mov
adc
fucomip
fsubr
pop
inc
cmpsl
and
mov
xor
test
loope
dec
xchg
stos
sbb
orb
jle
pop
push
jo
pop
imul
lods
add
lea
aas
pop
mov
out
call
cpuid
adc
es
fnstcw
lahf
sahf
leave
outsb
push
pushf
xor
xchg
xor
lock
mov
xchg
cli
test
mov
lods
adc
add
lock
or
mov
int3
stos
xor
inc
dec
add
push
aas
jl
lret
nop
add
call
out
jb
insb
imulb
jmp
hlt
cmp
mov
dec
push
adc
outsl
xchg
aad
jle
loopne
inc
push
lock
movsl
mov
mov
lea
push
out
cwtl
scas
jns
imul
loopne
mov
dec
dec
cmp
add
xlat
push
jp
xor
scas
push
loopne
test
and
xor
popa
dec
dec
and
add
xchg
mov
repnz
inc
jmp
pushf
insb
jl
outsw
sub
pop
and
jno
sub
fwait
or
mov
je
inc
js
xchg
cmp
xchg
pop
sbb
jp
add
sub
dec
add
je
shll
aad
ja
inc
inc
dec
in
stos
ljmp
mov
adc
jb
mov
xchg
cmp
shl
nop
jmp
inc
pushf
mov
cld
push
jle
popf
lock
push
out
xor
dec
inc
xchg
or
call
sub
jge
ret
repnz
xorl
lea
xor
aas
sub
repz
pop
testl
xchg
xchg
adc
xor
lahf
cwtl
add
pop
and
or
lods
mov
cwtl
cmp
ficompl
push
cmp
push
xchg
cmp
dec
cld
pop
push
lea
daa
add
jg
pop
mov
jle
jbe
in
jmp
int3
mov
xchg
xchg
dec
jbe
mov
popf
jno
ret
addb
or
inc
cmp
out
test
add
test
shl
pop
push
add
inc
and
push
xor
and
xor
loopne
fdivs
mov
cmpxchg
sub
pop
rolb
cmp
mov
ret
test
and
mov
test
in
loope
jmp
sbb
hlt
popf
addr16
xchg
flds
je
dec
nop
xchg
les
xchg
inc
jb
sub
add
pop
dec
and
std
out
fstpl
ret
jno
mov
inc
loope
int3
inc
dec
mov
lods
ret
fsubl
lret
imul
dec
xor
icebp
push
add
cmp
in
jne
push
jbe
add
aaa
jle
lcall
jnp
and
sub
inc
or
pop
cli
pop
dec
push
mov
ja
fwait
pop
gs
shlb
bound
mov
jg
push
loopne
add
in
fwait
jo
mov
adc
inc
adc
popf
jmp
pop
loopne
dec
das
mov
or
cs
cmp
dec
push
in
xchg
fwait
sub
sub
int
leave
pop
jae
jb
rcr
dec
sti
add
add
stos
lahf
shll
dec
popf
sahf
cmp
out
push
cltd
push
add
inc
fs
inc
pop
test
cmp
inc
adc
insl
cmc
mov
and
fdivrl
jns
stc
xchg
ficoml
ret
jl
enter
jns
xchg
aad
or
lret
cwtl
mov
jns
out
out
push
mov
jle
or
leave
dec
pusha
into
and
push
sbb
jbe
fistps
leave
jecxz
shrl
jae
mov
xchg
sub
sti
lret
mov
dec
repz
dec
cwtl
or
mov
and
pop
cld
inc
popa
fdivl
in
outsb
jle
xchg
clc
push
enter
std
int
inc
test
pushf
das
jl
fdivs
ret
rcll
pop
test
iret
dec
lahf
test
shrb
jae
dec
rcrl
push
mov
sar
mov
push
imul
jecxz
mov
bound
loope
xor
push
mov
jle
in
out
scas
lds
pushf
inc
push
ss
lock
fnsave
or
enter
push
outsl
xor
adc
fmull
xor
lock
pop
xchg
pop
movsl
mov
pop
out
gs
fnstsw
push
push
nop
sbb
pusha
stc
pop
lds
mov
out
fwait
aas
fwait
sub
cmp
fwait
pop
iret
push
xchg
repz
dec
push
dec
push
jbe
mov
dec
popf
mov
pop
cmpsb
out
mov
aam
ljmp
pop
cltd
addr16
or
xor
inc
repz
test
test
pop
mov
imul
lcall
xor
lret
pop
imul
and
sahf
clc
pop
add
out
xor
je
hlt
and
outsl
inc
js
stos
xor
inc
sti
divl
insl
push
and
out
mov
or
cld
adc
jb
mov
mov
sbb
cmpl
mov
loopne
das
lds
push
sahf
or
dec
sub
sub
push
movsb
mov
out
xor
jl
loop
aaa
out
aas
mov
loope
xor
add
mov
sub
roll
mov
mov
xchg
test
imul
adc
loop
sti
imul
das
movsb
scas
mov
dec
js
notb
cmpb
mov
sar
adc
lock
lds
pop
mov
mov
int
sbb
aad
add
mov
insl
call
mov
mov
mov
lds
cmp
stos
lods
pop
and
sbb
push
leave
test
cs
iret
mov
dec
xchg
xlat
loopne
dec
in
fldenv
dec
and
lret
imul
mov
aas
lds
outsl
jnp
imul
push
mov
adc
mov
gs
shr
push
aas
inc
dec
aad
mov
cwtl
bound
mov
aas
jnp
mov
mov
lcall
fstpl
and
push
sbbl
stc
sbb
mov
xor
sbb
adc
out
pop
aam
sbb
stos
mov
pop
je
mov
fbld
fidivl
lret
xor
dec
movsl
scas
test
arpl
sub
les
stc
or
shrb
push
xchg
int3
ja
shl
idivb
sbb
add
dec
and
nop
mov
xor
xor
out
or
jp
jne
popf
enter
je
ljmp
push
cmpsb
pop
or
in
gs
into
les
loope
adc
je
dec
clc
in
scas
enter
bound
daa
xchg
sti
dec
cmp
cwtl
shll
add
xchg
sbb
lahf
sub
xchg
insb
xchg
imull
ret
and
shll
clc
sbb
ja
xor
mov
jmp
mov
test
jne
sub
mull
and
testb
fiaddl
dec
outsl
push
pop
movsl
aad
sub
fldcw
lods
sbb
cmp
daa
dec
push
push
add
xchg
lods
adcl
cmp
das
imul
and
loopne
nop
cmp
lds
jnp
gs
std
pop
jne
cmp
push
repnz
test
popf
inc
test
jecxz
into
push
fmul
insl
xchg
mov
cmp
ret
lods
in
sbb
ss
push
in
xchg
stc
pop
sub
aas
jl,pn
cmp
xchg
sub
shlb
cmpsl
push
cli
mov
mov
cmp
xchg
ret
jnp
ljmp
mov
jne
jne
cld
sbb
imul
lods
adc
xor
cli
incb
fimuls
fimull
mov
adc
jmp
aas
shl
or
mov
push
pop
je
add
lret
xor
and
jne
shl
ja
jl
sub
add
pop
out
rorb
jo
lret
dec
daa
add
cmc
inc
push
or
sti
jnp
out
sbbb
xor
movsb
mov
jne
adcl
jmp
cmp
sub
out
cwtl
lcall
cltd
and
mov
xor
mov
adc
je
repz
lret
mov
icebp
sarl
jno
or
mov
pop
sub
daa
push
and
jg
repz
cmp
fsub
dec
test
movsb
es
adc
fisubs
mov
scas
sub
aaa
dec
add
mov
lret
jb
cmp
mov
cmp
pop
jmp
sarb
sub
in
ds
xchg
testl
or
loope
push
pop
push
sbb
xor
negb
xor
jbe
sbb
mov
xor
popa
std
and
adc
cwtl
aam
inc
stc
push
mov
fcomps
out
movsb
push
sub
or
and
inc
cmp
roll
test
cmp
sub
mov
pop
in
inc
sbb
aaa
add
rcrl
lret
mov
jae
sub
inc
sahf
add
adc
pop
test
cmp
sbb
sahf
faddp
xchg
xchg
jns
push
mov
fldcw
shll
sbb
sub
insb
mov
pop
les
test
push
jp
out
cmpsl
leave
and
cmc
xchg
xor
aas
dec
xor
test
stos
mov
xchg
or
bound
lods
jle
je
test
cmp
xchg
lret
je
sub
loop
in
jns
aam
xor
adcb
jmp
stos
xor
loop
jge
pop
xor
xor
add
jno
push
cld
sub
in
push
mov
and
sbbb
and
xlat
and
sbb
and
test
dec
push
mov
ss
pop
rol
bound
xchg
dec
stos
and
jnp
movsb
xlat
shl
adc
mov
int
inc
fs
sbb
jp
xchg
xchg
pusha
scas
jbe
inc
mov
imul
xchg
dec
lahf
pop
jnp
jne
test
scas
sub
inc
xlat
lahf
adc
jo
popf
and
pop
mov
sbb
dec
push
frstor
pop
fcomip
sbb
add
xchg
and
mov
push
mov
jle
rorb
push
mov
es
dec
call
or
pop
cmpsb
stc
cmp
and
xchg
sub
stc
sub
mov
in
repz
xchg
fwait
adc
push
rcr
mov
lret
js
movsb
jno
inc
mov
fldenv
fcmovnb
repz
sbb
lea
sahf
fwait
xor
test
mov
and
push
nop
insb
adc
mov
fldcw
movb
mov
lods
insb
mov
out
imul
cs
cltd
stc
adc
jo
fldcw
add
jns
adc
shlb
sub
adc
lret
lahf
aad
fwait
dec
fldenv
cmc
les
jecxz
test
mov
mov
push
jnp
lcall
pop
mov
fistpll
outsl
rolb
cmp
fs
cmpsb
mov
test
cmpb
xor
dec
adcb
cmp
cmp
inc
popa
mov
xor
or
js
inc
add
shld
mov
mov
xchg
fnstsw
outsb
xchg
in
dec
aaa
out
xchg
faddp
mov
push
data16
mov
jmp
inc
into
daa
add
ret
jg
fisubs
xchg
dec
pop
dec
push
mov
push
lret
jbe
arpl
outsb
rcr
push
add
shrd
xor
hlt
dec
mov
or
xchg
inc
xchg
pop
sarb
mov
popl
push
jmp
jmp
or
outsl
cmpl
je
popa
iret
jns
or
cmp
dec
pop
enter
cmp
push
loope
sbb
xlat
popa
bound
in
mov
movl
lods
and
and
test
mov
push
orl
imul
stc
mov
ret
aaa
fwait
sub
sub
xchg
push
cmp
push
enter
add
arpl
mov
mov
dec
leave
es
sbb
stos
lods
outsb
pop
jge
into
jge
cwtl
dec
push
out
mov
arpl
sub
pushf
or
test
jle
and
sub
inc
test
xor
ja
lods
ss
mov
es
aad
adcl
je
popa
sub
jge
addr16
or
add
xlat
das
cmpsb
dec
mov
mov
add
out
xchg
xchg
test
push
ss
clc
popf
pop
aaa
push
aam
dec
shll
into
sbb
mov
push
repnz
aad
bound
scas
stos
dec
adc
jl
and
lcall
xor
andb
sub
out
mov
inc
adc
sub
sahf
imul
nop
test
dec
inc
fstl
jp
daa
stos
sbb
ja
sub
xchg
test
cmpsb
xor
fwait
arpl
inc
lods
jecxz
push
fbstp
mov
or
in
sub
and
mov
push
adc
mov
or
xchg
fcomps
pop
xor
jp
mov
sbb
pop
ja
pop
cmp
xor
fmuls
imul
pushf
adc
bound
or
xor
out
adc
mov
or
push
in
hlt
cmp
sub
jg
add
fldt
mov
sahf
sub
stc
or
jmp
loope
and
ljmp
insl
jo
or
div
xor
data16
fs
filds
inc
mov
or
test
cmp
pop
int
pusha
pop
sbb
xchg
ds
jmp
insb
inc
xor
pop
fcmove
daa
mov
out
mull
insb
loope
iret
movsl
adc
inc
inc
cmp
push
stc
add
comiss
xchg
mov
out
out
jns
mov
xchg
sbb
mov
std
push
mov
lds
add
cmc
adc
push
add
mov
jne
and
mov
push
mov
xor
mov
mov
xchg
cld
or
xlat
mov
les
je
pop
js
mov
and
and
cmp
jp
jmp
nop
xchg
lret
lret
enter
add
pop
cs
in
aas
out
and
and
jmp
arpl
stos
xor
stos
rcll
or
inc
cmp
push
sbb
ficompl
mov
push
cmp
call
movsl
adc
push
adc
int
cld
adc
negl
push
inc
xchg
negb
test
test
pop
stc
aad
inc
xchg
and
mov
mov
push
sub
adc
inc
mov
xor
out
fabs
lods
and
lods
add
push
jns
fisubl
test
fidivl
sbb
mov
or
out
out
cltd
sbb
pop
test
xchg
sbb
adc
xchg
add
mov
dec
imul
push
ds
sbb
sbb
mov
pop
push
fildl
roll
dec
std
push
sub
std
fldt
stos
cld
shlb
cltd
stos
fimuls
ja
ja
popa
and
es
loopne
pushf
testl
xor
push
sub
nop
ret
popa
inc
pusha
cli
sbb
test
mov
das
push
and
xchg
sbb
fidivrs
fwait
inc
in
outsl
flds
push
fcoms
enter
stc
js
ret
fisttps
imul
cmpsl
inc
cmp
adc
cld
mov
mov
hlt
adc
sahf
xchg
adc
cmc
xchg
adc
mov
pushl
ret
into
jbe
add
andb
sti
mov
cmp
sbb
xchg
shrb
sub
stos
into
dec
dec
frstor
mov
je
ljmp
pop
rcll
popf
cmp
sti
or
test
cmp
cmp
les
or
push
scas
in
pop
in
stos
repnz
mov
push
pop
addr16
popf
jge
fldl
inc
sbb
dec
lret
outsb
adc
mov
add
ds
inc
subl
jns
xchg
in
leave
dec
rolb
push
shll
push
into
xor
adc
jmp
xchg
gs
adc
pop
int3
inc
jo
addr16
in
push
and
mov
stos
test
sbb
arpl
sbb
mov
jbe
dec
xchg
es
es
test
push
scas
les
iret
dec
nop
pusha
adc
push
and
cli
mov
adc
adc
ja
add
mov
jle
push
in
cmp
aam
and
mov
mov
dec
std
mov
xchg
repnz
add
xchg
aas
insb
push
rcrb
or
xor
mov
sub
hlt
lods
mov
test
jle
sbb
sub
or
test
jnp
mov
mov
push
pop
ss
mov
xchg
xor
pop
roll
enter
icebp
and
test
mov
jecxz
call
xchg
data16
fcomip
fxch
jg
and
xchg
inc
pop
idivb
push
and
mov
adcb
sbb
adc
dec
scas
pop
rcll
jne
lock
andb
or
sub
dec
in
mov
dec
jno
popf
push
push
jecxz
sarl
add
fs
fmulp
mov
arpl
imul
dec
and
xor
rcll
notl
or
inc
sub
je
fs
movsl
sbb
movsw
fisubrs
ljmp
inc
jg
inc
add
ret
nop
cmp
mov
xor
lock
lea
aaa
lods
jo
xchg
aas
push
sub
adc
push
add
jp
daa
dec
jne
mov
xchg
cmpsl
outsb
jl
cld
fsts
inc
pop
pushf
mov
sbb
or
fsubr
ss
adc
incb
mov
sbb
insl
call
movsl
movsl
or
into
push
or
les
push
imul
outsl
xor
nop
das
sub
imul
loope
pop
adc
shll
insl
mov
jae
jno
adc
lods
pop
out
inc
xchg
xor
test
adc
adc
fsubl
sbb
or
pop
out
imul
rolb
jg
inc
imul
ret
jmp
lcall
sti
push
mov
pop
mov
or
aaa
and
and
and
aaa
lahf
xchg
push
xor
mov
mov
jne
addr16
push
ds
mov
inc
sub
test
dec
jmp
mov
inc
inc
mov
insb
fiadds
je
xchg
aad
stc
xor
mov
test
and
sub
js
add
sbb
cmc
sub
inc
pcmpgtw
fimull
inc
icebp
dec
inc
orb
lods
into
stos
bound
fiadds
sbb
lahf
xchg
mov
popf
int
test
divl
cmp
push
push
and
scas
test
xchg
cmp
lahf
xchg
insb
mov
shrb
pop
inc
jae
mov
cltd
and
scas
dec
pop
fdivs
dec
sub
stos
inc
rolb
sbb
cmp
mov
add
xlat
out
out
in
cwtl
repz
shrb
sub
mov
iret
sbb
push
inc
jg
sbb
jmp
add
ror
cmc
sub
pop
mov
fsubl
pop
scas
imul
sub
and
inc
jmp
and
pop
adc
sti
sub
dec
mov
mov
faddl
in
mov
mov
xor
push
add
and
inc
rcll
fstpt
adc
mov
fildl
and
hlt
fidivrl
mov
xor
rolb
mov
pop
js
and
sub
cmp
fbstp
mov
pop
cmp
jle
adcl
push
data16
in
inc
leave
testl
mov
cmp
and
decl
pop
subps
jmp
xor
or
cmpb
mov
jmp
aam
add
clc
push
clc
or
mov
or
xor
rcl
aam
add
mov
call
or
aaa
or
movsb
lods
divl
mov
and
rcrb
push
arpl
ljmp
repz
fsubs
shll
push
shrb
fistpl
mulb
loope
push
jbe
mov
inc
es
lods
lds
push
inc
movsb
sbb
pusha
xchg
loope
push
mov
in
inc
jbe
dec
in
repnz
inc
xchg
jl
and
jbe
mov
mov
inc
mov
dec
pop
into
imul
lret
pusha
pop
jae
ds
loopne
inc
fs
dec
pop
xchg
xchg
pop
pushf
sbb
xchg
jmp
js
mov
push
mov
sahf
xchg
outsl
fimuls
adc
or
add
rolb
and
cs
aam
push
mov
jl
and
fbstp
fidivl
dec
mov
pop
aas
and
lcall
sti
jae
mov
pop
mov
cltd
fnsave
adc
subb
test
xor
add
mov
jp
addl
imul
arpl
rcr
fs
testl
cli
and
xchg
mov
push
mov
test
mov
das
and
ljmp
imul
sbb
das
fwait
jbe
mov
pop
jecxz
fwait
pop
std
jp
aas
mov
scas
dec
xchg
adcb
hlt
scas
pop
push
and
pushf
sbb
lds
test
jbe
add
mov
testb
cs
fs
push
ss
cmpl
jo
loopne
bound
inc
fwait
shlb
adc
pushf
jecxz
inc
in
das
imul
jo
pushf
xor
cmc
fiadds
mov
or
in
push
adcb
mov
mov
addr16
shlb
cmpl
dec
cmc
fdivrp
and
inc
cmpsl
mov
push
mov
mov
cld
in
mov
lods
lret
fisubrs
faddl
pusha
test
dec
lods
push
cs
jp
and
pushf
and
in
xor
mov
shll
stc
jge
ja
pop
adcb
pop
dec
bound
iret
jecxz
xchg
jno
and
adc
cmpsb
dec
sti
mov
sti
and
inc
dec
je
cmp
ret
mov
rcrl
pop
sahf
and
arpl
aaa
inc
adc
int
test
hlt
sbb
shll
outsb
pop
sti
add
loop
negb
jle
rcll
mov
push
sub
lods
push
inc
add
cwtl
push
pop
out
fisubs
xchg
jne
pop
jbe
test
leave
dec
xchg
jecxz
and
movsl
shrd
sbb
mov
cmpsl
adc
jp
lock
xor
xchg
inc
in
fcmovnu
xorb
pop
cmp
cmp
xchg
sti
push
shll
shlb
arpl
adcb
es
lock
les
lods
sub
insb
pop
dec
testl
mov
inc
cmpsb
mov
mov
sbb
cmp
mov
adc
fldl
fbld
hlt
sbb
addr16
cli
add
stos
clc
ds
inc
lcall
movsb
xchg
jge
hlt
xchg
dec
ret
sub
xor
sub
mov
out
mov
pop
push
or
dec
test
pop
jno
cmp
cmpsb
xchg
fisubl
sbb
aas
orl
xchg
push
sbb
lock
and
sbb
in
mov
stos
cmp
popf
pop
cmp
add
js
push
push
mov
sub
sbb
rolb
pop
fs
fmuls
into
gs
sub
cmp
test
dec
ss
mov
gs
lret
or
mov
mov
add
cmc
pop
pop
xchg
das
adc
les
les
or
mov
xchg
cmc
inc
dec
inc
pop
jg
sbbb
jb
out
out
loopne
in
push
pushf
sub
xor
lods
cwtl
mov
mov
push
mov
mov
mov
nop
jb
push
mov
sahf
jle
pushf
fsubr
popf
fldl
scas
cmp
inc
cmpsb
cld
mov
mov
add
insb
je
adc
jg
inc
cmp
jmp
jl
jg
pushf
ret
popa
xchg
sbb
add
inc
push
xor
push
jl
hlt
cld
push
iret
and
loope
sbb
inc
sbb
push
cmpsb
mov
fbstp
out
ss
mov
outsl
jecxz
cmpsl
sarb
out
repz
pop
out
push
ljmp
clc
mov
adc
add
jl
insb
xchg
out
pop
in
jb
lahf
cmp
jmp
sub
sahf
dec
shlb
mov
mov
enter
rorl
scas
mov
xor
and
pop
mov
jo
ja
or
and
lock
aaa
scas
rcr
shr
push
push
fdivrs
push
mov
sbb
rep
mov
jnp
lods
into
cmp
outsl
adc
rcrb
xchg
adcb
mov
fldl
xchg
and
dec
iret
enter
pop
xchg
ja
pop
stos
inc
and
and
push
and
or
mov
andb
ret
sbb
jmp
lods
outsb
xchg
clc
test
mov
int
fidivl
adc
fsubl
inc
adc
scas
icebp
cmp
arpl
add
xor
icebp
adcb
sub
repnz
mov
js
pop
mov
sub
fs
mov
out
xchg
sahf
or
mov
pop
mov
subb
push
sub
lcall
mov
negl
scas
jns
sub
push
mov
xor
cmp
shrl
mov
adc
daa
and
das
lods
dec
cli
sub
inc
sbb
cmp
jb
sahf
mov
xor
jge
pop
dec
sahf
sub
or
mov
pushf
fcmovnu
mov
std
pop
fisubrs
insl
mov
fdivl
stos
ja
mov
push
cmc
dec
out
aad
test
pop
push
or
dec
jae,pn
and
mov
lret
mov
mov
xor
aaa
adc
ljmp
cmp
sti
cmp
daa
movsb
addr16
inc
filds
xchg
or
push
cmp
xchg
cmp
sahf
xchg
jmp
lock
int
fstl
lods
lcall
mov
mov
sub
xchg
and
pop
mulb
dec
sbb
stos
daa
mov
sbb
cld
mov
rclb
inc
push
popf
lock
lcall
cmpsb
jne
jbe
cmp
subl
xchg
fisubl
fistpl
adc
jle
mov
mov
push
xchg
cwtl
mov
xchg
pop
cs
and
xor
mov
xor
pop
push
cmp
mov
icebp
cmc
mov
adc
or
add
js
mov
rol
test
mov
daa
aas
cwtl
push
lcall
cmpsb
xor
inc
lods
cmp
push
repnz
xor
test
icebp
inc
fwait
cmpb
push
push
ljmp
ret
dec
push
ret
aam
jno
mov
ljmp
push
push
lds
mov
ja
push
test
sbb
mov
xchg
pop
dec
aaa
dec
mov
jecxz
lret
test
push
shl
xchg
addr16
lcall
adc
repz
adc
sbb
inc
add
jmp
dec
mov
sub
pop
fisubl
fistpll
movsb
sub
pop
std
lea
stos
in
sbb
mov
add
sti
push
test
push
fdivl
scas
inc
dec
jnp
fistpll
mov
xor
dec
push
xor
and
jns
shlb
movsb
cltd
mov
stos
lret
cs
adc
addr16
xor
fwait
test
dec
into
xchg
inc
sbb
cmpsb
jge
aam
lea
adc
sub
jl
and
mov
sbbb
jle
add
cmp
push
cmp
andl
mov
push
pop
int
sbb
mov
mov
dec
mov
sbb
mov
clc
or
sbb
fistl
xor
jg
mov
cmpsl
aad
jo
jno
sahf
mov
aad
or
dec
mov
mov
les
imul
stc
or
in
mov
les
aam
adc
stos
std
pop
loop
add
insb
jbe
push
gs
cltd
jo
cmp
imul
push
cli
sahf
cld
in
xchg
xor
arpl
pop
adc
jecxz
fbstp
pop
push
inc
ljmp
testb
sub
or
adc
xor
jg
add
aaa
fs
sahf
fs
lahf
dec
jl
stos
inc
inc
xchg
jmp
mov
sub
dec
cs
mov
ret
jno
jb
pop
mov
dec
out
adcb
fstpl
inc
cmp
iret
pop
push
icebp
fildl
icebp
loopne
cbtw
cmp
xor
and
and
adc
add
scas
bound
rcll
repz
aaa
inc
and
data16
mov
insb
mov
cld
sub
lock
call
movsl
popf
scas
fists
je
hlt
adcb
mov
call
clc
je
add
mov
add
test
xor
cld
stc
adc
xor
mov
into
adc
jle
sub
cmpsl
mov
mov
push
insb
mov
pushf
xchg
inc
or
jge
sbb
dec
dec
or
bound
adc
movsl
xlat
fdivrs
pop
sbb
sbb
out
aaa
divl
cmp
adc
out
lock
and
pop
mov
mov
add
bound
inc
mov
adc
pop
or
xchg
mov
pop
mov
dec
insl
xchg
mov
push
repnz
push
rcrb
push
pop
mov
vunpcklps
push
mov
jp
pop
xor
rorb
int
fnstcw
fsubrs
sub
leave
push
stos
jecxz
mov
fimuls
fucomip
cmp
xor
jne
leave
adc
mov
jmp
push
out
decb
dec
jbe
arpl
fcmovu
sub
repz
push
push
cmp
or
scas
into
shl
movsl
aaa
pushf
mov
cltd
jno
sbb
and
inc
cmpsl
xchg
aam
cwtl
popa
inc
inc
lds
popa
popa
mov
nop
xchg
push
jl
inc
and
int
les
cmpsl
testb
out
enter
pop
push
lds
push
xor
pop
std
xor
out
int3
fistl
jnp
sti
mov
mov
andl
xchg
addr16
push
data16
int3
or
ss
xor
xchg
adc
mov
inc
push
pop
cmc
and
inc
push
ja
mov
dec
xor
in
andl
push
add
stc
jo
and
xchg
rorb
aas
ret
addr16
test
je
sahf
xchg
repnz
rcrb
xchg
in
stos
mov
dec
movsb
cwtl
push
insb
jmp
xor
xor
mov
outsb
jo
pop
in
add
cld
inc
lods
pop
or
testl
loopne
fstl
popf
pop
cli
mov
sub
inc
cmp
scas
xor
gs
mov
push
fisttpl
push
int
jo
mov
es
iretw
jno
in
nop
pop
adc
lock
pusha
pop
sub
lods
cmp
adc
jmp
fwait
pop
dec
scas
les
test
bound
cs
pop
push
cmp
clc
or
jo
aad
shrb
pop
imul
test
into
cmpsb
cmp
lock
scas
fcmovu
push
sbb
and
out
dec
pop
mov
pop
jno
ja
lds
pop
mov
scas
or
and
sub
pop
push
inc
ds
add
xchg
stos
mov
aad
mov
outsl
dec
aad
std
nop
push
mov
loope
ja
or
fwait
adc
xor
xor
ret
and
mov
lds
rcrl
mov
inc
jl
loopne
xor
mov
and
jne
fadds
mov
sahf
dec
outsl
xlat
add
add
and
xchg
jge
push
sbbl
sub
js
lods
movsb
inc
and
arpl
push
je
jmp
adc
cmp
dec
add
lret
imul
lock
and
mov
daa
mov
mov
mov
popa
push
cwtl
mov
stc
pop
jae
cmp
pop
mov
sbbl
add
out
int3
fwait
mov
mov
mov
pop
add
loope
cld
in
sub
shll
sbb
cmp
call
jg
dec
push
xchg
aad
mov
test
push
jmp
adcb
push
xchg
or
sub
mov
rcll
daa
xchg
out
arpl
or
lods
add
in
pop
dec
jmp
xlat
or
icebp
call
push
rcll
xchg
pop
mov
jg
paddb
dec
icebp
stos
sub
jmp
jnp
mov
mov
pusha
adc
out
cmp
das
xor
loope
outsb
in
cmpl
sahf
pusha
add
imul
lock
lahf
adc
lock
dec
sub
sbb
dec
repnz
or
clc
push
and
dec
mov
mov
mov
xchg
enter
cld
mov
negb
adc
das
les
cmpsb
loope
sti
pop
cmp
jns
ja
mov
dec
jb
jne
cmp
aam
or
cli
je
pusha
xlat
adc
fdivs
xor
lods
dec
leave
daa
inc
jns
xchg
adc
sbb
inc
lods
mov
dec
xor
jg
mov
sbb
adc
jno
outsl
xchg
movsl
mov
or
jecxz
jnp
pop
push
jmp
and
push
mov
js
cmpsb
add
repz
shrl
inc
mov
xchg
push
negl
hlt
push
mov
inc
dec
xor
cmp
xchg
xchg
mov
sbb
xor
jo
pop
outsl
mov
inc
shr
ljmp
fistpl
jl
pop
sub
loopne
stos
xlat
or
into
mov
mov
or
pandn
jbe
mov
sub
jp
inc
outsl
mov
ljmp
test
daa
adcb
cmp
push
in
and
mov
inc
push
aad
addr16
adc
and
popa
inc
cmp
fldt
leave
mov
or
lods
ret
stc
sbb
pusha
fisubl
lea
or
jne
test
sub
pop
pop
jb
push
cmpsl
mov
rorb
cltd
pop
jb
jno
cmp
jno
sbbb
push
sub
mov
add
test
lret
fidivs
lret
inc
xchg
das
lds
and
aaa
jns
fcoms
imull
mov
lahf
fwait
psubq
add
js
imul
adc
jno
pop
mov
dec
pushf
leave
xchg
arpl
js
lods
shrb
xlat
mov
icebp
je
push
out
ficompl
stos
mov
inc
pop
xor
push
sbb
or
test
sub
push
pushf
rep
sub
jle
and
mov
push
div
aad
movsl
cltd
sub
int
xchg
push
adc
out
inc
sbb
ficompl
mov
lds
cmp
pop
dec
push
sub
cwtl
jmp
mov
lock
add
mov
sub
push
xor
pop
xchg
xorl
mov
dec
lods
cvtpi2ps
test
pop
xor
pop
movsl
arpl
lret
in
aad
jnp
out
push
rcl
sub
push
add
add
sbb
add
push
sbb
adc
stos
mov
mov
fsubl
mov
pop
clc
dec
sub
jl
mov
shll
loop
push
bound
cmp
cwtl
loopne
pop
pop
ljmp
stc
push
jl
xchg
sub
mov
mov
and
lods
sarb
das
out
andb
int
mov
jnp
and
cmp
mov
push
orl
jle
push
xor
push
mov
dec
test
divl
cltd
sbb
fs
ljmp
sti
inc
pop
adc
add
lret
jle
aaa
dec
sbb
and
inc
imul
loopne
icebp
or
pop
rcrl
test
cmpb
inc
or
xchg
insl
push
sbb
push
cs
cmpsl
daa
in
fistpl
in
scas
mov
sbb
sub
lds
aaa
in
cli
popa
popf
mov
jns
addr16
ret
mulb
fsubs
cmp
dec
cs
lahf
repz
rclb
xchg
xchg
sbb
push
in
lods
mov
xchg
aas
jne
inc
lea
fsubr
add
and
inc
dec
hlt
push
pop
ljmp
aas
cmp
rclb
stos
aas
jne
cmp
pop
int
out
data16
dec
inc
mov
dec
mov
jl
sbb
adc
mov
js
lods
mov
sbb
ljmp
rorb
hlt
test
mov
mov
jnp
xor
or
les
xchg
inc
das
outsl
mov
dec
mov
enter
and
movsb
lret
adc
and
test
xchg
adc
inc
cmpsl
sarl
mov
andl
icebp
or
and
dec
lahf
clc
je
jne
leave
repz
sub
push
test
lret
stos
dec
push
aad
testl
ja
out
sub
into
imul
cmpsl
int3
xlat
add
xchg
push
test
ret
sti
test
gs
push
addr16
jbe
push
ret
jmp
movsl
xchg
loope
xchg
pop
in
jno
xorl
sbb
fdivl
fdivs
cmp
scas
clc
aam
or
mov
mov
cwtl
jnp
cs
or
mov
cmp
popf
ljmp
xchg
insl
fmuls
push
mov
pop
ret
push
mov
jb
or
lahf
mov
adc
arpl
sub
daa
mov
pop
in
outsb
lret
add
inc
std
sti
mov
repz
jge
imul
or
xor
xchg
bound
cmp
jmp
in
mov
push
lods
pop
enter
adc
mov
xchg
mov
jecxz
stos
sub
icebp
mov
arpl
sahf
fwait
xchg
pop
or
fbld
popl
sbb
lock
mov
shll
fwait
or
adc
mov
mov
dec
or
imul
pop
adc
aam
mov
mov
adc
add
pusha
inc
dec
sarl
mov
ret
sub
add
fildl
data16
fisttpll
push
lds
push
movups
fcmovne
push
out
jbe
inc
pop
mov
aaa
or
rclb
push
test
nop
int
leave
fcomp
adc
xor
add
adc
les
fs
fdivl
enter
data16
in
popl
and
jns
pushf
cltd
out
aam
push
jo
cmp
and
mov
add
lods
dec
scas
movsb
test
and
insl
aad
outsb
je
push
pop
xchg
sbb
pop
push
sbb
cmp
xlat
pop
push
cltd
sub
pop
cmp
test
and
pop
adc
repz
push
cmp
pop
mov
pop
xchg
sbb
sbb
inc
inc
lds
jae
leave
addb
cs
mov
sbb
pop
sub
xchg
mov
mov
mov
mov
push
mov
enter
xchg
adc
mov
mov
mov
mov
mov
jnp
and
stos
fcomp
ds
or
adc
jmp
aaa
loope
out
movb
jbe
loope
and
scas
xor
nop
loopne
jnp
pop
add
inc
iret
jp
fyl2x
test
inc
dec
mov
pushl
dec
sbb
sarb
adc
int
xchg
lea
inc
ss
jno
mov
or
xor
jo
shlb
and
sub
push
daa
xlat
or
mov
pop
bound
push
imul
leave
xchg
fistpll
out
fcomps
lcall
push
test
jg
adc
stos
outsl
push
data16
fs
out
add
scas
cwtl
testl
jbe
out
fwait
test
xchg
ret
pushf
xchg
xchg
movsl
push
cli
data16
dec
cmp
add
xchg
xchg
inc
mov
cwtl
sbb
flds
divl
jge
add
lret
pop
jmp
inc
int
in
cmp
rcr
push
fdivrl
pop
pusha
xor
js
out
pop
aaa
lret
xchg
mov
in
cmpsb
hlt
xchg
int3
dec
movsl
je
xchg
pop
aaa
dec
mov
adc
popa
cwtl
dec
popa
das
cwtl
iret
sbb
inc
inc
push
orl
mov
imul
hlt
mov
sbb
lret
pop
xchg
scas
mov
sub
sub
xchg
andl
popf
test
adc
jp
es
aam
fistpl
sub
data16
test
or
lret
sbb
les
idivb
xchg
sahf
int
mov
push
xor
sub
leave
mov
jle
pop
pop
sub
add
popf
push
sti
ficoml
jnp
loopne
mov
push
outsb
add
cmp
push
in
push
jb
or
out
int3
push
pop
mov
xchg
jbe
push
insl
out
test
push
inc
mov
sbb
jne
adc
cwtl
jae
sub
stc
popf
insb
mov
push
testb
mov
push
mov
mov
lret
in
push
xchg
mov
cmp
jmp
jl
mov
push
test
cmp
mov
inc
mov
imul
std
jmp
xor
lcall
xor
iret
lret
stos
jno
scas
je
hlt
or
push
xor
sbb
add
bound
loop
stos
xchg
pop
cld
loopne
cld
push
sbb
aam
out
dec
cltd
xchg
aad
pusha
sarb
inc
rolb
fcompl
aad
test
daa
jnp
loopne
stos
mov
dec
lcall
fcmovne
ljmp
fs
jp
xchg
jge
rorl
cwtl
into
adc
xor
sub
xchg
andb
push
sarb
adc
add
fcoms
sub
sahf
jecxz
mov
cmc
push
outsl
repnz
adc
inc
dec
push
lds
icebp
jge
jge
outsl
iret
pop
pop
inc
push
movsb
repz
fcoms
mov
rcll
gs
xchg
jnp
lods
imul
pop
adc
inc
les
push
cwtl
lds
call
sbb
mov
add
dec
test
and
mov
mov
pop
push
decb
pop
pop
lret
lods
test
addb
notl
inc
inc
jb
jmp
pop
cli
mov
mov
mov
iret
out
mov
cmp
movsl
pop
icebp
ret
pop
dec
jo
popa
jne
jp
fdivr
dec
daa
clc
xchg
fcoms
jmp
jne
xlat
adc
int
adc
insb
mov
std
call
lods
arpl
cmp
sarb
mov
dec
inc
pop
jl
push
je
lock
loope
aad
insb
jge
jnp
adc
pop
mov
mov
push
or
mov
je
shll
sbb
fucomi
int3
cmp
stc
pop
push
mov
or
push
dec
and
or
dec
repnz
push
ficompl
push
pmulhuw
cmpsl
sbb
mov
sbb
dec
inc
xchg
inc
cmp
pop
pop
mov
adc
mov
mov
push
mov
and
cmc
ret
sarl
mov
stc
loope
push
cmp
shll
mov
bound
cmp
xor
xchg
xchg
gs
pusha
ljmp
cwtl
xchg
jbe
jmp
pop
sub
pop
xchg
scas
inc
push
xor
cmpb
cmp
pop
repnz
nop
jae
cmpl
push
roll
je
loop
lock
shl
lahf
jp
push
mov
out
or
lea
cmp
fs
cmpsl
mov
aaa
cmpsb
xor
mov
aaa
jmp
repz
ja
push
insb
pop
imul
adcl
adc
leave
sub
cmpsl
mov
in
call
jle
sbb
shl
jmp
inc
mov
push
sarl
dec
mov
fsubrs
mov
call
xchg
adc
fmuls
xor
lcall
sub
ja
adc
mov
fwait
sub
cmp
cltd
push
add
loope
mov
arpl
jbe
jae
ficoml
mov
cmp
dec
jle
into
lret
test
inc
push
into
add
outsl
inc
fidivrl
das
lret
mov
int
call
fcomps
sub
adc
push
les
addr16
stos
enter
sub
rcrb
popa
wbinvd
mov
insb
sbb
es
sub
fwait
fs
jge
leave
add
or
out
xchg
mov
lcall
push
xchg
cld
inc
add
mov
xor
mov
in
lret
repnz
push
je
push
push
iret
call
cmp
ret
mov
mov
jg
xor
pop
out
pusha
test
pop
sbb
fwait
daa
or
fstpt
movsl
pop
ja
imul
and
popl
sbb
xor
hlt
inc
sbb
stc
mov
cs
add
mov
stos
pop
orl
std
addr16
insb
mov
mov
nop
xchg
sarb
hlt
leave
or
lea
pop
data16
xor
push
pop
pop
jge
js
lods
fs
sarl
push
repz
lcall
push
data16
lea
lcall
imul
adc
inc
shrb
stc
pop
stc
jne
daa
sbb
pop
fsubp
adc
psubb
lods
lods
jmp
sbb
mov
fidivrl
dec
cli
aam
addl
xor
pusha
mov
dec
flds
mov
add
movsl
dec
dec
pop
cmp
jns
xchg
das
std
pop
nop
iret
movsb
test
xor
gs
enter
cwtl
adcb
insb
xor
adc
cs
mov
std
sarb
jns
add
cmp
inc
test
adc
cli
xor
jnp
iret
jae
add
inc
ret
lods
out
mov
xchg
push
push
push
cmpsl
daa
leave
imull
sbb
dec
out
mov
pop
xlat
pop
or
into
ret
push
je
lahf
fldenv
rcl
fsubp
cmp
lock
and
std
inc
repz
hlt
iret
and
sti
cwtl
add
leave
out
mov
aas
jl
xor
jle
sub
xchg
push
push
adc
pop
xchg
out
pop
stc
cmpsb
mov
cltd
add
jnp
adc
cmp
jp
adc
daa
lret
paddusb
orb
sub
mov
cmp
orb
cmpsl
aam
jnp
inc
sbb
adc
pop
in
jge
xchg
push
lret
leave
shrl
dec
jecxz
insb
pushf
repz
xor
daa
popa
mov
push
adc
mov
mov
xchg
mov
jle
scas
dec
pop
fsts
mov
mov
rolb
js
adc
out
sub
add
or
loop
push
enter
aad
push
add
sbb
jge
xor
push
fsubrl
jo
jl
add
and
push
jmp
pop
aas
sub
sbb
mov
push
aas
lds
jae
test
das
cmp
xchg
xchg
aas
or
inc
insb
adc
lock
xchg
out
jecxz
adc
stos
cmpsl
inc
dec
inc
daa
cmpps
int
clc
dec
dec
gs
xor
popl
add
jl
push
popf
aas
and
repz
inc
sub
inc
ret
stc
mov
inc
mov
fld1
cltd
and
movsl
popa
cmp
lods
pushf
imul
aas
jp
inc
stc
xor
movl
divb
leave
cmp
mov
imul
adc
adc
addr16
adc
icebp
sub
add
push
sahf
pop
push
call
lcall
call
cmp
cli
lahf
jmp
xor
lcall
or
enter
mov
inc
pop
repz
fidivrl
movsb
shr
pop
addr16
xor
push
fsubrs
lret
pusha
cltd
insl
adc
mov
imul
sub
fmul
shrl
jne
pop
icebp
icebp
sbb
addr16
lcall
inc
lds
xor
sbb
xor
ret
cld
jb
fptan
push
test
inc
stos
sub
add
add
ret
cmp
xor
addb
notb
sbbb
test
repnz
jmp
test
icebp
and
mov
xor
cld
int
adc
divb
out
test
arpl
lahf
icebp
mov
inc
nop
pop
ds
cli
dec
shlb
and
loope
xchg
rcrb
cmp
sub
cmc
push
or
imul
mov
push
dec
push
insb
test
fs
loop
mov
dec
aaa
testl
sbb
mov
insl
das
aad
adc
inc
cmc
xchg
dec
sbbb
pop
ljmp
push
push
inc
pop
dec
je
add
test
and
jae
movsb
sahf
add
pop
mov
adc
pop
cmp
jge
je
lahf
mov
sahf
outsb
cli
pop
push
pop
jle
jbe
sarl
sub
mov
lret
mov
fcmovnu
sbb
adc
loope
jmp
adc
pop
fisttpl
sbb
out
test
add
out
into
xor
dec
jae
js
push
aas
cmp
xor
lret
and
mov
sbb
sbb
or
xchg
push
dec
rorb
pusha
mov
mov
int
xchg
cmp
mov
add
or
inc
pusha
movb
mov
fwait
mov
incl
xchg
sbb
mov
in
sbb
dec
fsubrs
mov
adc
fnsave
into
imul
gs
out
gs
icebp
add
test
jns
sbb
addr16
xor
or
adc
insb
xor
outsb
push
cmpb
adc
sahf
out
cli
lret
push
pop
dec
add
imul
mov
mov
adc
call
push
orb
scas
sub
pop
mov
jo
enter
in
test
push
jnp
and
push
push
mul
mov
sbb
cmp
xor
int3
add
mov
sub
sarl
sub
cmp
sarb
sub
loopne
jg
es
lock
xchg
cltd
iret
fcmovnbe
out
sbb
cmpsl
dec
cmpl
repnz
icebp
inc
out
sub
repnz
call
cmp
popa
mov
sbb
out
ljmp
jle
ljmp
jp
mov
ret
stos
lret
scas
dec
mov
bound
xor
dec
les
out
cmp
jle
jp
mov
jno
mov
iret
add
adc
loope
mov
je
cld
pop
enter
test
mov
jl
pop
je
fidivrs
mov
xchg
push
cmp
cwtl
insl
dec
js
outsb
and
pop
xchg
aam
inc
test
pop
cmpsb
lahf
jmp
pcmpgtd
xchg
ja
or
add
popf
mov
fistl
jno
push
mov
pop
pop
or
dec
out
jecxz
int3
sbb
sub
xchg
ss
rclb
xchg
movaps
add
xor
sahf
fbld
dec
and
ljmp
add
aas
jmp
shll
je
mov
pop
add
out
sbbb
std
xchg
xchg
pop
inc
pop
push
jns
jbe
jbe
inc
adc
jno
mov
mov
stc
mov
shlb
mov
jecxz
xchg
lret
mov
sub
jne
fwait
aad
adc
mov
jmp
into
stos
mov
jg
push
xor
mov
popa
jecxz
cltd
stos
std
movsb
and
xor
xchg
mov
cmc
xor
or
xchg
add
fwait
xor
in
xchg
and
adc
add
out
std
jne
movl
pusha
mov
sub
les
dec
push
aad
add
xchg
pop
outsb
add
lahf
lock
scas
lods
or
sti
ds
pop
or
push
jl
gs
dec
shlb
pop
ss
lcall
push
push
nop
std
adc
pop
mov
imul
fwait
mov
daa
das
loope
outsl
mov
jbe
jbe
fstpt
xchg
into
inc
outsl
or
shll
jge
fadd
dec
shr
je
das
mov
idiv
inc
fldl
jne
shrl
fsubrp
fmuls
addr16
fsubr
dec
mov
dec
and
popl
add
ja
lods
sub
lods
dec
mov
lahf
fldt
push
dec
sbb
sti
pop
xor
and
inc
dec
aam
or
aaa
lods
mov
in
jb
push
add
and
in
pop
dec
cmp
mov
inc
push
pop
xchg
push
jg
xor
ss
dec
mov
outsb
in
in
xchg
jo
imul
aaa
lahf
jb
stos
push
out
shll
pop
push
xchg
jns
test
adc
xor
sbb
push
sub
jmp
xchg
and
pop
rcrl
pushf
inc
and
ss
sub
in
cmc
aad
cmc
lea
lods
lock
jle
stos
call
adcb
xchg
jo
mov
pushf
jae
in
mov
sbb
inc
in
cwtl
inc
fisttpll
bound
subl
rcrb
mov
cmpsl
ja
pop
push
adc
aad
sbb
or
fidivl
sarb
sbb
jne
rolb
and
shrl
shrb
loope
mov
addb
shll
add
stc
fildl
cmpb
insl
mov
mov
mov
xlat
mov
mov
cltd
fcomp
int3
sub
cmp
sub
cmp
out
pop
mov
and
notl
int
iret
inc
push
sti
cmc
push
cmp
call
cld
fmuls
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
pushl
jne
clc
mov
mov
dec
daa
outsb
aas
shlb
mov
dec
daa
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
and
jmp
dec
mov
imul
fcmovnb
and
lcall
mov
xchg
ret
cwtl
imul
mov
stc
add
or
xor
push
mov
dec
daa
imul
mov
fs
push
xor
jmp
inc
push
lret
ja
mov
mov
fs
mov
out
rolb
and
jge
sub
scas
adc
mov
fs
push
xor
or
cld
lret
fcomps
movsl
sub
fs
out
int3
sahf
mov
sub
cmpsb
insb
imul
mov
mov
movsl
les
aas
mov
xchg
sti
mov
mov
ds
push
mov
dec
daa
outsb
sarb
in
sti
mov
pushf
std
dec
daa
outsb
lds
mov
aad
mov
mov
dec
and
in
sti
mov
mov
dec
outsb
sarb
in
jnp
push
mov
dec
daa
shl
cmp
push
mov
dec
daa
jle
aas
mov
test
mov
mov
dec
daa
outsb
shrb
in
sti
mov
mov
dec
daa
outsb
inc
push
mov
push
mov
inc
daa
mov
xchg
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
lret
loopne
into
and
aas
mov
xchg
sti
mov
mov
dec
and
outsl
mull
mov
dec
daa
outsb
loopne
mov
mov
std
dec
daa
outsb
nop
aas
mov
movsb
lock
fdivr
dec
daa
push
les
mov
xchg
sti
mov
mov
dec
daa
outsb
rcrb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
daa
outsb
sarb
in
sti
mov
mov
dec
pusha
or
popf
in
jmp
push
cmpsb
pop
xchg
push
or
adc
les
cmpb
inc
mov
mov
jl
or
add
je
scas
cmp
mov
add
push
adc
add
cmpsb
mov
pop
jmp
das
mov
cmp
fildll
sub
adcl
icebp
roll
cmp
xlat
out
push
je
add
sbb
bound
mov
mov
lcall
lds
adc
mov
std
loop
mov
add
sbb
rcl
mov
add
aam
or
enter
fmul
jnp
sbb
dec
popf
js,pn
sub
in
ds
test
mov
inc
out
push
mov
fisubs
mov
psraw
xchg
inc
mov
ret
inc
jo
cmp
into
aas
xor
mov
jmp
mov
adc
insb
gs
or
cmp
pop
popa
pop
gs
scas
out
popa
add
jne
stc
fidivrl
and
adc
cwtl
add
mov
push
fisubs
sub
jbe
inc
mov
stos
repnz
mov
jae
add
adc
lahf
cmp
push
add
lock
andl
push
adc
fcmovne
bound
mov
lahf
mov
and
inc
fwait
and
outsl
or
or
scas
push
push
inc
and
lock
jg
mov
add
shll
xor
ror
dec
roll
arpl
add
push
xor
ret
fidivl
inc
pop
sub
push
lahf
fiadds
mov
sub
cmp
cmp
clc
lahf
andl
cmpl
inc
pushf
daa
jmp
jne
and
mov
inc
push
pop
rcrl
mov
mov
push
jg
pop
cmpsb
dec
aad
arpl
pop
pop
jge
sub
pop
dec
adc
inc
fistl
jne
push
sub
clc
pop
ficompl
jne
jnp
push
ficoml
insb
xor
inc
cli
call
xor
xchg
lea
addr16
xor
jne
lods
imul
jecxz
rcl
push
scas
fadd
jbe
sbb
pop
xchg
cmpsl
lds
into
imul
stos
xorl
pop
jo
sbb
je
or
sub
jp
fwait
dec
pop
cmp
daa
in
pop
sbb
lea
mov
movsb
jmp
mov
push
add
fimull
sub
xor
mov
xchg
arpl
fildll
inc
pop
ror
or
scas
mov
movsb
arpl
into
dec
inc
add
out
push
pop
and
jb
test
stc
xor
cmp
sbb
mov
lahf
loope
push
pop
xlat
cmp
in
js
movsl
and
adc
stc
jge
loop
mov
fucomp
mov
push
mov
addr16
and
pop
orl
push
hlt
out
mov
or
lods
push
hlt
orb
inc
imull
mov
subl
or
push
bound
dec
adc
enter
mov
pop
fs
lods
andb
btr
fdivrs
mov
insb
lcall
ucomiss
mov
loopne
dec
sub
hlt
out
sbb
xchg
lret
xchg
dec
jbe
xor
out
cmp
ja
inc
ficoml
and
aaa
sbb
sbbb
jmp
fmull
push
aas
leave
mov
xor
xor
leave
jbe
adc
mov
cmp
sub
shrl
sar
mov
mov
mov
aaa
push
lret
and
clc
ret
xchg
sbb
movsb
aas
into
out
lahf
mov
jo
roll
lock
push
mov
sar
push
ljmp
out
mov
xchg
in
popf
cwtl
fistpll
or
jg
inc
sub
dec
iret
aam
adc
sbb
xorb
jle
mov
das
mov
lods
inc
imul
pop
xlat
ret
xor
popa
stos
adc
cld
jmp
in
inc
dec
std
add
xor
sbb
repnz
mov
mov
lds
int3
inc
data16
mov
push
aaa
lock
ret
ja
ss
ds
jle
clc
scas
push
test
jg
ljmp
in
push
in
hlt
idivb
insl
fldenv
sub
cmpsb
add
push
fcoms
aad
inc
xchg
fistl
sbb
mov
mov
out
sub
sub
pop
cltd
sub
xchg
jmp
ficomps
insb
outsl
fnstenv
push
xor
mov
mov
nop
stos
mov
call
mov
push
ret
into
lods
push
dec
mov
out
add
nop
mov
jecxz
ja
loop
jnp
flds
shl
lahf
hlt
or
hlt
inc
jno
inc
jns
or
lret
ficomps
mov
popf
fdivs
bnd
outsl
out
mov
cmp
add
mov
xchg
add
ret
cld
scas
outsl
xchg
inc
insl
cmc
mov
push
stos
ja
es
mov
test
pop
rcll
push
inc
or
sbb
movsl
xor
xchg
ret
cld
sbb
int3
or
ja
mulb
or
arpl
pop
or
rorl
or
fnstsw
jns
ss
je
clc
push
xchg
adc
or
ss
adc
xlat
xchg
push
lods
mov
lret
push
icebp
mov
pop
inc
jge
scas
mov
pop
mov
xchg
popa
inc
stos
subb
aam
mov
or
xchg
and
cmp
enter
xor
dec
mov
out
enter
fdivs
jns
bound
or
test
jmp
jnp
imul
push
out
mov
mov
sbb
lahf
outsl
out
loopne
add
dec
lods
cwtl
push
and
cli
out
hlt
rcrb
test
add
fimull
gs
sub
push
fbld
mov
xchg
popf
push
jp
lahf
or
sub
push
fldenv
dec
push
ret
ja
loopne
dec
and
scas
outsb
enter
mov
push
cmp
inc
sbb
pop
adc
dec
dec
mov
pop
inc
jmp
cld
cli
leave
cmp
das
sub
xchg
add
clc
xchg
fwait
push
shl
fistpll
pop
inc
mov
add
push
sbb
xor
enter
subl
pushf
mov
xor
sbb
push
in
mov
lods
aaa
jae
or
inc
push
movsl
inc
inc
xor
mov
movsb
into
lahf
xor
arpl
dec
pop
sbb
sub
sbb
or
jns
pop
shr
mov
pop
fwait
stos
pop
mov
repz
sub
lret
aas
xchg
cmpsl
mov
into
addr16
jnp
adc
mov
add
mov
push
inc
aas
outsb
and
jl
movsl
sbb
mov
mov
xor
jp
cltd
aaa
and
xchg
cmc
and
stos
hlt
call
adc
imul
xor
aas
loopne,pt
int
xchg
fidivl
push
enter
outsb
dec
lods
xchg
xor
dec
jo
push
enter
xor
outsb
mov
jb
and
mov
push
adcl
scas
pusha
jl
jmp
mov
scas
pop
mov
mov
add
jge
fistpl
push
or
mov
mov
hlt
pop
nop
push
in
push
xlat
inc
cmp
push
pop
cld
leave
pop
loopne
jp
or
stc
sub
cmpsl
cmp
dec
scas
sbb
test
xchg
dec
popa
mov
adc
outsb
pop
pop
or
push
xchg
aam
arpl
rol
fcom
je
es
add
jbe
adc
test
je
andl
mov
push
sbb
ss
mov
push
xor
js
icebp
xchg
rolb
dec
sahf
shlb
add
cmpsb
cmpsl
stc
mov
jecxz
mov
call
test
xchg
shll
adc
push
mull
adc
cmpsb
mov
lcall
cs
dec
pop
testb
scas
repnz
push
shrb
push
fidivrs
or
push
lret
pop
das
aam
es
ja
cwtl
xor
out
pop
popf
push
cmp
addr16
movsl
scas
in
data16
jae
inc
add
cs
add
mov
lods
popa
mov
movsb
fistpl
mov
dec
xor
dec
cltd
mov
xor
mov
dec
mov
dec
xchg
sbb
sbb
test
data16
pusha
pushf
movaps
insb
test
ret
push
es
call
cld
pop
xlat
mov
nop
lods
dec
stos
loop
sbbb
pop
lfs
xor
out
adc
fistps
and
icebp
cmp
stc
pop
into
sub
das
sahf
test
pusha
scas
fs
js
sub
repz
jmp
xorl
sahf
ret
popa
mov
mov
outsb
rorl
cmpsb
shl
jno
jp
xor
ds
add
cmp
bound
rclb
decl
lods
andb
popf
xlat
cli
xchg
sbb
dec
jle
cmpsb
xchg
jg
xor
repnz
outsl
rclb
and
and
mov
or
xor
xchg
movsb
mov
cmpsl
push
xchg
xchg
outsl
imul
sbb
xchg
dec
leave
and
add
pop
fldenv
lret
push
loopne
jnp
xor
negb
les
aad
mov
pop
adc
les
jle
lea
sub
sbb
and
cmp
push
and
pop
pop
ja
inc
sub
inc
pushf
repz
jge
push
divl
jge
aam
jno
les
test
out
aas
rorl
sbb
xor
adc
mov
adcl
jl
jnp
ljmp
fwait
mov
jnp
cmp
fstpt
ss
fisubrl
cwtl
decl
mov
into
sub
je
enter
es
cmp
roll
test
jae
mov
jnp
mov
test
imul
out
gs
sub
cmove
shll
add
xlat
repz
mov
stos
cmp
add
mov
fildll
hlt
stos
mov
mov
xchg
pushf
jbe
in
test
mov
jg
inc
fwait
stos
lret
mov
popa
push
pop
xchg
negb
sahf
mov
fmulp
jno,pn
inc
push
add
sbb
mov
adc
cmp
sahf
lcall
out
or
test
dec
pop
mov
stc
ds
sbb
daa
add
andl
lcall
xlat
divb
jmp
ret
shlb
push
out
mov
cmp
xor
repnz
cltd
cmpsl
push
sub
gs
dec
test
pop
mov
cs
movsb
imul
pop
push
or
push
push
or
cmp
mov
shll
mov
add
push
repnz
lahf
stc
push
loope
fwait
sub
dec
xchg
push
ds
adc
cmp
xchg
push
cmp
fdivs
leave
mov
in
xchg
cs
sub
lds
pop
iret
dec
xchg
xchg
pop
add
enter
out
push
mov
inc
lock
roll
push
sub
in
stos
dec
mov
mov
sbb
mov
cmpsl
add
mov
adc
out
jo
jns
xchg
negb
xlat
jo
repnz
fs
leave
sub
push
mov
out
xor
add
adc
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
