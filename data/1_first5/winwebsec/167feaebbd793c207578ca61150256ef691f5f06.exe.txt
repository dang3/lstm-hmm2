jo
jne
mov
cwtl
push
shl
pop
lock
jbe
mov
mov
gs
xlat
shr
adc
jecxz
in
or
mov
sub
mov
jge
pop
aad
rolb
jge
xchg
mov
xchg
dec
jb
adc
sub
iret
push
imul
out
test
inc
test
cmp
sbbl
pop
cmp
mov
dec
or
dec
daa
fsub
scas
push
push
repnz
xchg
inc
cld
or
jmp
imul
mov
gs
out
imul
inc
imul
iret
inc
das
mov
xlat
ljmp
scas
cmp
dec
push
push
jb
adc
lods
aas
rorl
push
loope
mov
loop
fwait
test
pop
mov
cli
fs
decb
pop
jb
orl
dec
lret
pop
movsl
in
push
enter
dec
pop
ret
test
lods
and
filds
jnp
mov
cli
lcall
mov
push
fwait
loopne
pushf
sbb
push
and
je
adc
add
ret
xchg
cmp
int
sbb
into
loope
sbb
mov
lds
js
int
adc
push
pop
or
xor
dec
add
dec
xor
mov
test
adc
cmp
test
add
dec
stc
inc
add
insb
test
out
pop
xchg
cmc
insl
iret
mov
enter
sbb
inc
cli
xchg
add
xlat
sahf
popa
mov
sbb
test
mov
stos
push
filds
sar
xor
push
pop
jecxz
add
inc
scas
cmp
repz
mov
xchg
sbb
cmp
in
sbb
cmp
int3
rclb
mov
mov
and
xchg
adcb
pushf
subb
xchg
jge
cmp
cmpsb
mov
aaa
mov
dec
push
inc
sbb
sbb
fsubs
inc
mov
adc
sti
mov
jg
test
and
sbb
int3
fmuls
lret
push
dec
arpl
add
lea
inc
fdiv
sbb
xchg
gs
mov
xor
fistpl
stos
sbb
pop
pop
out
lret
inc
xchg
stc
insb
jge
mov
sbb
dec
sti
aam
jle
sar
aas
cmp
shll
fstps
or
push
xor
js
cli
lret
adc
lods
sbb
add
push
sbb
mov
nop
mov
pop
dec
dec
movsl
and
mov
cmp
pop
mov
lret
push
outsb
xor
sbb
adc
fnstsw
mov
xor
ret
adc
insl
in
sti
dec
mov
repnz
xor
mov
rorb
cmp
xchg
xor
or
inc
test
inc
jp
data16
loopne
fsubrp
cmpsl
lds
cmp
push
aam
lea
icebp
ss
pop
imul
add
fwait
pop
push
inc
xchg
addr16
insb
ss
sbb
mov
in
fcoml
scas
sbb
fsubs
lret
mov
cwtl
mov
add
push
add
cmp
nop
sti
cmpsb
pop
sahf
ljmp
jae
xchg
dec
cmpsb
pop
lock
xlat
in
rcll
or
push
mov
mov
sub
jno
xchg
neg
fwait
addr16
push
push
icebp
inc
fsubr
stc
lcall
loope
cli
dec
pop
sub
dec
add
and
push
sbb
sub
add
shrb
dec
fildll
aad
cli
aad
push
aas
stos
imul
hlt
sbb
das
lods
aam
jle
iret
fcoms
push
adc
and
xor
mov
xor
dec
mov
outsl
jmp
xor
rep
loopne
fnstenv
jp
cmp
sub
and
cwtl
mov
cli
hlt
inc
cmp
sbb
loop
cld
pop
js
adc
jp
hlt
pusha
dec
test
addl
mov
gs
pop
adc
loope
xor
add
in
std
jmp
imul
shll
push
les
pop
lock
cltd
jb
cli
cltd
les
imul
lahf
mov
jmp
cmp
xor
pop
repnz
dec
xor
cmp
sub
cld
push
xor
mov
or
mov
in
negl
mov
insb
adc
ret
arpl
out
sbb
mov
dec
daa
jge
pop
in
daa
xlat
hlt
sbb
push
push
pop
cltd
and
jo
push
test
and
sbb
lcall
pop
push
sbb
push
test
sbb
sbb
loope
jnp
inc
cmp
mov
cmp
push
or
shll
mov
xor
fmuls
jae
sbb
lret
mov
in
sti
add
rcll
pusha
add
mov
dec
cmp
xor
xchg
pop
sbb
fimuls
shll
sahf
adc
fiaddl
xor
test
dec
cmp
shlb
jecxz
mov
cmpsb
rcrb
jge
repz
sahf
repz
cmpsl
lods
push
fldenv
mov
into
out
xor
lds
mov
shrb
xchg
lods
daa
dec
rcr
lock
mov
fwait
jge
xchg
pop
dec
repnz
into
gs
bound
sub
fdivrp
mov
call
cwtl
pop
cld
iret
stos
or
lock
xor
dec
clc
mov
fcmovbe
fwait
popf
push
insl
pop
fisubs
mov
cli
cmp
inc
pop
adc
insl
lds
xor
jl
cli
stos
jp
jg
test
pop
xor
lods
push
mov
aas
mov
js
add
rcr
inc
loopne
std
std
movntq
fadds
je
std
pop
xchg
and
leave
or
out
mov
mull
add
clc
cmp
cltd
mov
les
and
rorb
test
dec
xlat
subb
rcl
jns
push
enter
jg
out
mov
out
iret
in
iret
cltd
mov
test
stos
xchg
icebp
dec
aam
ljmp
xchg
mov
leave
jecxz
sub
loope
icebp
into
mov
xchg
jnp
mov
enter
push
dec
in
leave
int3
pusha
test
mov
sbb
mov
cli
mov
mov
and
xchg
call
push
aam
vmovaps
testb
inc
inc
inc
xchg
or
testl
mov
mov
outsb
test
mov
jne
or
pop
or
mull
push
fbstp
lock
daa
xor
cmp
adc
bound
inc
jb
out
add
sub
popf
das
into
andl
push
lock
adc
mov
and
insb
jns
mov
sbb
rcrb
repz
cmp
popf
int3
xchg
jl
insl
repnz
and
outsb
add
mov
mov
fistl
jle
jb
in
scas
ret
push
aaa
stos
mov
mov
test
je
mov
std
pop
imul
das
iret
or
sub
inc
xor
imul
das
movsl
test
sti
sarb
faddl
divb
xchg
out
dec
inc
jg
inc
xlat
jp
dec
insl
imul
mov
icebp
negl
mov
jmp
xor
in
loope
fcomps
fwait
sub
fcmovbe
lds
inc
orl
adc
adc
inc
cs
fwait
mov
mov
push
mov
push
gs
sbb
nop
rolb
xchg
rcrb
pop
int
add
xchg
add
jb
arpl
shll
jb
pop
adc
gs
daa
das
mov
xchg
gs
or
mov
sti
mov
or
mov
divb
push
imul
mov
sbbl
mov
rcr
pushf
sub
jae
gs
mov
pop
test
mov
pop
pop
xchg
rolb
loop
mov
in
pop
adc
mov
cmpsl
mov
xor
aam
insb
pop
testl
pop
pop
lret
dec
js
adc
sbb
and
pop
daa
push
jl
test
pop
fldl2t
in
cmp
xchg
ss
out
cmp
scas
movsl
jae
mov
cli
push
movsb
std
ret
fstps
sub
and
xor
icebp
jmp
nop
and
cmpsb
xchg
mov
into
lods
lcall
cs
sub
push
out
cmp
dec
shrb
dec
cmpsl
cmc
jle
mov
xchg
mov
cmp
mov
jns
xchg
imul
add
adc
fists
inc
imul
ficomps
ljmp
rcrl
in
je
call
add
mov
or
sarl
rolb
mov
insl
and
and
mov
cli
int
xchg
or
mov
or
adc
mov
adc
pop
out
das
pop
xchg
leave
scas
xor
ss
dec
xchg
and
cld
mov
orb
imul
or
shl
adc
cli
je
repnz
sbb
inc
in
popf
cmpsl
lods
ret
mov
test
push
sbb
cltd
std
jmp
ret
xor
mov
jge
movsb
in
movsb
fistl
data16
out
sub
pushf
leave
add
stos
scas
mov
jb
pushf
fstpt
das
mov
aaa
iret
addr16
data16
loop
xchg
mov
xchg
shrb
sub
sbb
fisubs
pop
subl
enter
mov
mov
and
push
jl
lret
jl
push
dec
fcmovu
mov
mov
rcrb
pusha
sub
ret
sub
int3
std
cmp
dec
in
in
ud1
call
movsb
xor
sub
add
mov
adcl
stos
inc
roll
or
adc
in
xlat
xchg
std
xchg
in
cmc
das
add
icebp
push
mov
or
push
mov
je
imul
in
loope
push
cmp
in
and
cmpb
and
dec
fdivl
popa
add
aam
into
nop
push
out
mov
lahf
sub
add
inc
sbb
subb
dec
push
inc
pop
subb
daa
rol
cmp
pop
in
push
mov
and
dec
push
lock
adc
mov
adc
in
mov
shl
xor
pop
adc
test
fdivrp
xor
notl
pushf
aam
imul
nop
popa
pop
jae
xchg
lret
in
push
cmp
popf
sbb
mov
mov
enter
xor
sbb
jl
jne
int
push
add
add
xchg
xor
pop
xor
cmp
adc
sbb
lds
jge
lds
test
insl
push
loope
or
xchg
xor
xor
fsubl
add
dec
sahf
test
test
aaa
adc
movsb
sahf
ja
ret
imul
pop
jns
insl
push
add
xchg
divb
xor
push
xchg
pop
daa
mov
sbb
sbb
or
jmp
aas
data16
sbb
fwait
imul
sub
lahf
fmul
imul
bound
repnz
stos
inc
dec
dec
outsb
fdivrs
adc
lret
mov
push
inc
mov
iret
and
les
xchg
mov
shr
mov
pop
in
sahf
pop
aas
cmp
push
lock
ffreep
dec
mov
jbe
xlat
inc
fcompl
xchg
dec
into
adc
and
mov
cld
jns
rcrb
sti
sbb
sbb
dec
xchg
hlt
loop
sub
sub
mov
mov
inc
jne
test
jmp
xor
popl
cmpsb
outsl
iret
loop
repz
mov
mov
andl
adc
lods
scas
ltr
test
cmp
jle
mov
xlat
pushf
mov
pop
lret
add
xchg
inc
daa
adc
test
loop
scas
cmpl
adc
fildll
leave
dec
in
cwtl
shll
in
mov
dec
sub
xchg
lret
xor
inc
cli
bnd
xchg
pushf
nop
push
lcall
insl
pop
sub
lods
mov
push
fdivr
xchg
jno
int
lea
jns
jl
dec
and
movsl
out
jge
sub
test
std
dec
sar
mov
fisubl
jmp
ljmp
cltd
loope
negl
testl
dec
cmp
lcall
mov
and
shlb
push
cld
repz
icebp
negb
dec
lods
and
add
pop
mov
sarl
in
negl
jp
adc
lahf
stc
imul
sbb
movsl
cli
cli
dec
dec
and
mov
rolb
pop
je
pushf
mov
dec
rorl
mov
out
dec
sub
xchg
mov
cmp
mov
and
loope
adc
jne
test
lcall
sbb
xchg
xor
divb
xchg
xchg
call
rcrb
add
decl
mov
push
or
or
rcrb
sub
jg
in
popa
test
aaa
outsb
in
les
dec
mov
out
gs
fnstenv
fucompp
aas
mov
es
bound
test
pop
lret
mov
fimull
jb
cwtl
pop
movb
lahf
fcompl
dec
add
mov
jno
leave
xchg
in
pop
sub
dec
pop
xchg
out
mov
xchg
rdpmc
dec
sbb
movsl
cs
enter
inc
fisubl
jb
icebp
outsl
pop
sbbb
or
loopne
iret
mov
sub
mulb
sahf
lods
filds
jo
js
lods
push
in
jae
mov
jne
xor
ficomps
mov
mov
cmc
xorb
mov
mov
add
or
insl
push
sbb
cmpb
pop
filds
mov
fsubrs
jae
xchg
fsubs
mov
xlat
and
dec
xchg
xchg
inc
sbb
negl
or
or
xchg
out
sbb
outsl
lret
push
popa
gs
aas
sti
inc
lods
pop
loopne
lret
mov
out
out
xor
lahf
inc
xlat
cmpsb
or
fisttpl
mov
cmpsb
mov
pop
inc
add
js
pop
xchg
int
xchg
adc
out
pushf
mov
pop
andl
mov
xchg
jo
and
sub
int
imul
js
push
inc
ret
and
xor
lods
mov
sub
fimull
push
cwtl
lcall
adc
mov
push
int3
cld
movsb
mov
fadd
bound
int3
jb
jl
sub
fbstp
sahf
jo
pushf
xchg
inc
stc
mov
xor
fcomps
push
pop
cmp
inc
bound
popa
out
scas
leave
scas
push
ss
int
aas
adc
sub
push
or
movsb
es
push
mov
ljmp
movsb
push
call
movsb
dec
push
pop
lahf
fistpll
movsl
mov
xorb
stc
out
dec
mov
enter
shlb
stos
xchg
cmp
arpl
cmpsb
jl
cmp
xchg
shll
ficoml
cwtl
fistl
or
xchg
rcl
cmp
icebp
mov
inc
xchg
mov
sbb
sub
dec
pop
enter
add
push
arpl
mov
or
xchg
orb
testb
pop
cmpsl
fdivrs
mov
shl
adc
cmp
and
adc
add
rcr
mov
jns
cmp
jge
movsl
int3
fiadds
aaa
cmp
dec
or
int
lods
stos
lock
inc
mov
or
mov
inc
mov
mov
cmp
jmp
push
inc
push
cwtl
pop
pop
into
movsb
clc
adc
pop
inc
inc
xchg
out
sub
popa
das
jl
jecxz
scas
rolb
es
xorb
and
push
mov
xor
jle
adc
sbb
sbb
sti
fimull
mov
mov
jo
xor
adc
xchg
cmpsb
mov
inc
adc
stc
push
add
mov
lret
mov
pop
cli
ds
inc
push
cmp
sti
sub
imul
xor
pop
mov
js
gs
cwtl
aam
and
cmc
cwtl
push
mov
jb
fcomps
pop
imul
cmpl
jno
and
and
das
mov
jnp
xchg
xlat
lds
xchg
push
add
nop
scas
sbb
hlt
dec
sbb
aam
mov
push
jno
lahf
adc
lret
push
lock
popa
or
jle
enter
mov
pusha
mov
int
push
imul
pop
rol
lods
das
bound
ret
fldenv
xor
mov
or
lods
clc
dec
test
lods
lea
add
jg
mov
addr16
or
in
out
cwtl
add
test
sar
push
mov
sbb
mov
inc
aaa
bound
inc
movb
iret
push
and
ds
add
ret
adc
pop
lret
inc
xchg
cmp
push
lds
cmc
and
leave
js
lret
pop
nop
xor
mov
lock
pushf
or
icebp
push
mov
cwtl
jne
mov
xor
popf
and
fisubs
movsbl
xchg
jmp
arpl
arpl
insl
mov
xor
inc
cmp
push
or
fistpll
mov
imul
sub
sub
lock
dec
mov
test
push
test
push
mov
lret
or
xchg
das
fisubrl
insl
mov
jae
inc
popf
cmp
inc
addl
mov
cmpsb
adc
sub
scas
pop
cmp
ret
out
or
repz
sbb
movsl
jbe
lcall
gs
sub
cmc
in
jbe
cvttps2pi
mov
add
adc
cli
cltd
add
and
dec
popa
dec
jae
popa
jecxz
mov
out
test
or
xor
int3
cld
mov
not
jno
pop
daa
mov
jo
push
mov
orb
in
push
dec
xchg
hlt
pop
loop
mov
sbb
jb
sbb
into
lahf
repz
aas
inc
daa
jne
and
cltd
addr16
lock
or
push
shrl
inc
mov
andb
lock
add
mov
adc
lods
xchg
insl
out
adcl
and
sbb
pushf
dec
sbb
push
popf
leave
push
fcoms
std
cmpsb
sbb
mov
push
add
push
rcrb
test
stc
test
int
mov
aad
flds
pop
dec
pop
or
sbb
push
cmp
or
push
jbe
movb
insb
jnp
mov
pushf
add
fsub
dec
imul
mov
inc
push
fs
cmpb
mov
pop
mov
add
lock
lcall
ljmp
adc
inc
fsubrs
dec
out
cmpsb
addb
push
jmp
das
cli
fdivrs
jmp
insl
xchg
es
mov
push
add
mov
pop
cmp
adc
repnz
push
inc
aam
jns
mov
add
fildll
xchg
stos
les
xchg
add
pop
push
adc
push
sub
ja
pop
sbb
cld
pusha
sub
mov
inc
jle
ret
test
icebp
add
test
mov
lock
sbb
add
lcall
mov
repz
push
mov
dec
push
xchg
repz
sbb
notl
icebp
lcall
xchg
ret
mov
adcl
jnp
dec
in
pop
add
cmp
and
pop
and
in
dec
jmp
aaa
push
mov
loopne
stos
ss
pop
ds
fsubrl
in
jmp
adc
frstor
daa
in
mov
bound
stc
clc
cmpl
mov
inc
daa
xor
outsb
les
fs
in
sub
pop
inc
adc
jno
fnstcw
mov
lahf
dec
mov
clc
pop
mov
cmp
mov
sub
mov
icebp
loop
jl
cmc
jns
jge
or
pop
int3
inc
xorl
sub
jbe
mov
push
ficompl
insl
or
lret
into
pop
in
pop
mov
mov
jne
mov
mov
xchg
and
mov
scas
jb
imul
arpl
cltd
push
mov
jg
pop
fcompl
jno
cltd
xchg
sub
or
push
arpl
adc
divl
mov
and
inc
scas
mov
aad
mov
pop
xor
fldlg2
mov
sub
adc
lock
outsl
push
push
or
xchg
mov
pop
jle
push
daa
fidivl
and
sahf
out
inc
into
sub
cmc
call
pop
pop
mov
in
out
imul
pop
movsb
cli
loope
outsl
mov
xlat
sub
in
xchg
leave
lods
mov
icebp
mov
dec
and
mov
mov
jnp
jg
in
pop
sbb
sbb
push
mov
xlat
adc
loopne
aas
sub
cmp
dec
outsl
mov
ja
fadds
push
and
xor
pop
int3
stos
ss
mov
push
fwait
movsl
lods
jmp
mov
das
movsb
call
jmp
add
add
jecxz
std
lods
sub
jmp
aam
lods
lea
js
cld
mov
push
pusha
jge
xchg
movsl
dec
cmc
jmp
nop
cli
addl
in
add
fisubrs
call
loope
mov
xchg
or
movsb
mov
add
pushf
and
sbb
xor
dec
cs
js
aad
stos
pop
mov
lods
pop
mov
rcrl
cmp
mov
sub
cmpb
sub
icebp
sbb
mov
scas
jecxz
mov
stos
dec
xor
add
cmp
and
xchg
fdivl
fwait
dec
int
leave
sbb
jns
outsb
icebp
pusha
arpl
pop
jbe
fxtract
and
cmc
cmp
xchg
pop
lret
ja
cmp
enter
push
sbb
iret
out
popa
cmp
lds
add
dec
dec
dec
inc
jmp
mov
sahf
scas
aad
or
ljmp
mov
xchg
sub
add
neg
or
dec
dec
xchg
push
push
shrb
das
and
das
lods
mov
adc
shll
mov
push
clc
scas
jb
negl
data16
insb
pushf
push
and
xor
into
cmp
lods
sbb
ljmp
in
lcall
or
dec
and
dec
or
xchg
lea
sbb
pop
cmp
sbb
mov
rcrl
mov
and
pop
sbb
dec
and
inc
sbb
imul
sahf
add
dec
mov
inc
repnz
sub
popf
xchg
or
stc
js
jne
jle
leave
cmp
sbb
mov
mov
fcomp
sbb
inc
sbb
mov
and
mov
ret
cli
movsb
stos
loop
popf
pop
je
lds
inc
lahf
fnstcw
arpl
daa
xorl
lret
dec
dec
push
push
std
pop
or
test
cld
pushf
clc
or
push
enter
nop
xchg
mov
nop
sub
test
push
xor
popa
lods
data16
or
in
or
dec
adcb
enter
in
and
mov
lahf
movl
adc
sub
lock
push
mov
fwait
iret
and
xchg
sti
push
out
mov
ret
cmp
inc
rorb
insb
in
enter
nop
pop
cmp
mov
add
fcmovnbe
repz
push
inc
jmp
xchg
mov
cli
imull
push
stc
or
int
js
out
dec
lcall
mov
sbb
loopne
or
cmpb
xor
pop
sub
jb
dec
mov
lods
les
loop
aam
dec
dec
kmovb
popa
mov
hlt
jg
cmpsb
dec
aas
mov
ret
adc
enter
mov
jmp
inc
jo
cmp
pop
mov
and
pop
mov
xor
mov
ja
jo
rclb
cmp
adc
sub
mov
lea
loope
out
and
pop
setg
lahf
popf
mull
rol
and
shll
cmp
pusha
lahf
aaa
sub
enter
fwait
xchg
xor
mov
xchg
push
add
sbb
mov
xor
out
mov
jo
je
lea
or
aas
jg
fnsave
mov
cmp
sbb
or
data16
mov
push
ret
sti
add
divb
add
in
adc
sahf
lahf
imul
jns
clc
dec
cli
and
add
mov
or
daa
test
push
movl
mov
mov
repz
adc
mov
mov
inc
mov
or
cmpb
mov
mov
repz
aas
sbb
cmc
jl,pt
push
push
faddl
pop
and
fcmovu
daa
cmp
popf
push
push
cmp
in
icebp
lods
mov
scas
xlat
add
xchg
sub
mov
or
cld
pop
xchg
icebp
lret
cmc
repz
dec
int
jge
addr16
and
out
insb
push
insl
or
sti
ret
or
aad
data16
mov
mov
and
cmp
add
pop
push
xchg
jecxz
outsl
ret
cmpsb
inc
add
sub
mov
out
sbb
lahf
sahf
inc
jge
add
mov
jmp
cltd
jb
bound
mov
jo
or
mov
add
and
mov
lods
inc
jo
dec
fsubl
insl
data16
mov
cmp
jae
dec
enter
es
cld
inc
inc
dec
aam
imull
imul
cltd
imul
jb
xchg
nop
aam
push
jecxz
aam
daa
stos
jo
xor
adc
mov
dec
xor
add
mov
mov
jle
and
cmc
and
nop
arpl
leave
aad
push
xchg
and
scas
or
jecxz
cmp
jmp
test
pushw
lds
outsl
push
mov
imul
dec
adc
sbb
in
mov
lock
cmp
lahf
inc
or
mov
cmp
out
test
dec
sub
fists
add
in
jp
jo
rolb
in
mov
sub
jg
mov
xchg
outsl
and
popa
pop
pop
push
push
pop
inc
mov
ja
popf
sbb
and
lahf
lcall
jne
dec
mov
dec
or
push
cmpsb
iret
mov
sub
pavgw
sbb
mov
out
jo
loope
mov
mov
lea
xor
loopne
idivl
lahf
cmp
jg
lahf
bound
sub
subl
xchg
cs
fwait
aas
lods
les
cmp
aas
xlat
cmpsb
mov
xor
jae
jo
mov
sbb
xor
xor
sub
test
dec
or
mov
mov
out
in
push
mulb
repz
lods
inc
sbb
push
popf
mov
jmp
jge
iret
lcall
jno
loop
sarb
xor
jo
fs
mov
and
aam
push
ja
les
cmp
push
mov
test
sub
test
pop
inc
mov
mov
loopne
jno
imul
cli
call
jb
shlb
cmp
data16
xor
dec
loop
outsl
xor
cwtl
cli
push
scas
stos
pop
xor
mov
sbb
sub
fs
mov
jnp
ljmp
ret
push
repnz
outsl
push
sarb
jbe
dec
add
push
xorl
mov
pop
rcr
insl
dec
and
lods
and
int3
call
mov
sub
sbb
jbe
sti
cld
scas
in
jl
pop
std
jns
dec
sub
add
fldcw
in
cmp
mov
int
add
iret
push
ja
mov
push
fists
pop
roll
out
mov
jle
mov
stos
add
push
pop
push
repz
jge
rcrl
into
ret
mulb
jge
scas
sbb
lret
push
jno
stos
cmpsb
bound
sbb
xor
pop
addb
push
movsb
inc
push
xlat
adc
add
hlt
setg
xchg
stos
je
in
addl
lods
mov
fstpt
aas
fucomi
xor
mov
out
or
shlb
pop
inc
and
push
cs
jno
sbb
jmp
icebp
jg
pop
test
test
stos
out
imul
mov
jge
mov
shll
sti
mov
mov
lea
dec
mov
sbb
push
mov
sub
icebp
and
dec
test
jbe
addr16
lods
mov
ja
loope
jecxz
repz
mov
repnz
pop
fildll
sti
jecxz
cwtl
xor
in
movsb
add
mov
lds
gs
movsb
aad
and
in
sbb
pop
inc
pop
jl
lret
adc
or
mull
sbb
fcmovbe
nop
jle
adc
add
shrl
push
mov
push
ds
xchg
jle
xchg
data16
lahf
pop
dec
ret
add
sbb
movsl
loope
ret
fistps
fldenv
out
jp
lods
and
sub
mov
fmul
iret
sbb
mov
push
lods
test
mov
xchg
mov
mov
xor
or
mov
jg
scas
mov
mov
add
lahf
sub
loopne
stos
dec
movsl
mov
fnstcw
mov
int3
jnp
jo
sub
xchg
pop
stc
std
aad
adc
sti
aaa
inc
icebp
adc
shl
or
push
ja
out
mov
add
mov
sub
push
jo
xchg
aas
stc
es
xchg
xchg
stos
pop
imul
stc
outsb
dec
subb
in
jns
imul
js
popf
xor
sub
xor
addr16
das
pushf
jns
pop
movl
or
stc
aas
jle
mov
lds
jecxz
dec
je
jl
sarb
cli
out
sti
cmp
les
test
pop
mov
dec
mov
mov
out
enter
cs
fmulp
scas
xchg
add
adc
cs
mov
sahf
add
cmp
je
and
insb
xlat
ss
int
movl
mov
xchg
dec
lahf
sub
pop
add
inc
fs
adc
cmp
and
inc
inc
scas
dec
push
ljmp
jp
and
sub
jp
xor
mov
fwait
fldenv
imul
imul
outsb
ret
call
faddp
das
adc
xor
fs
movsb
jmp
mov
stc
and
leave
lret
and
adcb
add
sar
in
xor
fs
sbb
out
ds
mov
jne
pop
js
ljmp
imul
stc
les
or
pop
sti
clc
mov
jp
pop
cmpsl
mov
sbb
test
aad
pop
shl
mov
outsl
out
xor
add
mov
sbb
cmp
insl
iret
ds
les
xchg
push
cmp
push
and
mov
dec
in
add
inc
std
pop
jp
inc
xchg
dec
std
ret
xchg
xor
and
pop
fidivrl
cmp
dec
add
in
push
sbb
jno
push
xor
ss
xchg
inc
cwtl
xchg
ret
stc
xchg
pop
daa
push
in
repz
xchg
shrl
dec
ja
xchg
in
inc
aaa
movsb
fadds
pop
inc
test
gs
pop
fcomps
dec
jecxz
jb
xor
fs
pop
je
mov
jo
sbb
xor
je
xchg
xor
lds
sbb
jo
xchg
int3
xchg
xor
fwait
rclb
ljmp
sub
pop
frstor
jmp
fwait
xchg
loop
pop
adc
je
movsb
insb
addl
lods
jle
lret
jge
sbb
and
xchg
mov
test
cmp
or
xchg
les
sbb
icebp
in
fistl
push
mov
insb
in
cmp
jnp
add
mov
adcl
test
xor
pop
sub
add
mov
call
xchg
or
pop
pop
shr
push
ljmp
jg
lock
jl
mov
dec
mov
xor
negb
mov
pop
cltd
push
cmp
xchg
rclb
aad
add
sub
push
mov
repz
push
push
adc
ret
mov
lds
sbb
roll
iret
imul
xchg
leave
xchg
lret
rcll
inc
mov
mov
xchg
mov
sub
push
dec
xchg
gs
jo
imul
sbb
fcmovnb
add
jecxz
rcr
mov
push
movsl
sbb
mov
and
data16
arpl
sbb
ljmp
mov
imul
jp
fucomip
pop
xchg
xchg
inc
rcr
sub
jp
xor
cli
pop
cmp
push
test
outsl
and
adc
ss
sbb
adc
sub
mov
ss
inc
cmp
cmp
addr16
or
push
mov
sub
push
cmp
test
paddb
into
in
sahf
sub
imul
fiaddl
adc
stc
mov
je
push
mov
mov
xchg
es
adc
sub
jne
test
dec
inc
xor
pop
popf
pop
lods
clc
insb
push
sti
stos
fsubrs
call
movsl
cli
jns
xor
push
mov
and
rcrb
lret
iret
ja
inc
xchg
lret
mov
jne,pt
test
mov
outsb
les
shlb
imul
lock
ljmp
sub
adc
inc
rcrb
sbb
ja
sub
mov
or
out
mov
dec
or
mov
fsubr
rorb
lock
dec
popf
xchg
inc
sbb
mov
addl
mov
mov
popf
add
inc
test
popa
arpl
out
push
mov
pop
cmp
cmpsb
sbb
js
jmp
icebp
int
or
daa
mov
cmpsb
cli
push
cmp
add
bound
sub
mov
jno
inc
popa
in
ss
popf
mov
sbb
int
mov
pop
cmpsb
loope
insb
push
out
xchg
mov
push
mov
testb
xor
pop
or
sub
fdivs
jle
cmp
mov
imul
bound
clc
popa
lea
mov
xchg
jmp
ljmp
lahf
mov
popf
das
test
xchg
in
and
das
push
and
mov
xlat
cmpsl
cld
inc
imul
and
out
lret
jge
popa
pop
inc
test
mov
cmp
js
mov
ficoml
sub
test
and
mov
call
cmp
sti
enter
shl
push
add
das
rclb
push
push
push
sbb
outsb
leave
in
inc
jb
dec
ds
shlb
roll
mov
jge
fisubrl
andb
mov
adc
sbb
repnz
jle
inc
out
ss
sbb
xchg
xorb
f2xm1
mov
loop
cmp
pop
pop
daa
lods
aam
mov
icebp
cmc
test
loope
nop
cmp
jnp
sarl
nop
fiadds
or
rcrb
or
daa
add
ret
leavew
aas
cmp
lret
cltd
mov
push
jp
out
add
in
scas
mov
adc
aad
mov
add
jmp
push
movsl
pusha
jne
pushf
jmp
testb
add
mov
sub
sbb
in
cmpb
test
icebp
jmp
cs
data16
test
subl
popa
mov
jbe
testl
mov
push
mov
sbb
dec
pop
mov
push
ror
or
xchg
cltd
and
xor
divps
mov
fstps
jae
lods
scas
pop
es
gs
sub
jl
bound
jne
jmp
push
addb
sbb
and
xor
aaa
adc
mov
imulb
popf
dec
cmp
inc
movsl
jo
movl
or
mov
mov
mov
call
push
dec
xchg
jne
test
lods
popf
frstor
je
addr16
mov
sahf
loope
scas
stc
xchg
xchg
shlb
pop
mov
sub
inc
mov
loope
sarb
sub
cmc
mov
xchg
sbb
rorl
adc
fwait
int3
push
inc
test
mov
mov
jp
or
aam
xchg
inc
mov
icebp
push
and
pop
jae
pop
scas
out
cmp
iret
dec
or
lret
mov
clc
pop
out
mov
lcall
push
aaa
dec
jl
dec
jle
or
sub
cwtl
xchg
fisubrs
add
mov
cmp
in
jne
add
loop
lds
pop
out
push
daa
punpckhbw
adc
jb
subl
lock
outsb
cmp
adc
sarb
xchg
or
movl
push
jle
stc
sahf
xor
jle
cmp
lods
outsb
inc
pop
lret
dec
mov
jl
orl
call
mov
xchg
push
pop
gs
fisttpll
nop
jmp
test
shll
pushf
jle
inc
repnz
inc
imul
mov
inc
sbb
hlt
and
fisttps
inc
jle
out
push
adc
push
out
imul
mov
sbbl
and
sti
dec
sub
popa
ret
sub
mov
std
jp
movsb
mov
jb
jp
mov
fcomi
push
scas
in
add
out
cwtl
hlt
in
jmp
ficompl
mov
sub
aam
xor
orl
lods
aad
imul
out
loopne
ss
inc
outsb
aad
enter
cmp
int
xchg
inc
iret
and
or
lock
jo
rcrl
push
sub
test
in
add
and
cmc
cmp
sub
aam
fsubrl
mov
fsubrs
mov
inc
fisubl
dec
pop
jle
sbb
mov
shl
fsub
icebp
rcrl
hlt
stc
stos
add
adc
lods
stc
add
lret
jae
push
mull
mov
xor
jecxz
je
push
jmp
mov
hlt
test
loope
push
pop
lods
dec
xchg
add
jecxz
mov
dec
lods
loope
in
push
cmp
inc
daa
incb
sarb
loop
mov
jmp
jae
aaa
ret
lret
sahf
mov
rcrl
mov
xor
cmpb
cs
nop
mov
push
xor
add
stos
adc
iret
inc
aad
dec
fsub
mov
pop
push
sub
std
xchg
call
push
scas
jae
lret
pushf
adcb
sbb
jns
aaa
pop
jno
mov
pop
into
sub
jp
push
and
lret
jno
mov
jg
or
sub
lods
or
push
cld
mov
arpl
pop
rorb
scas
sarl
inc
mov
cmp
jno
addr16
daa
mov
lret
adc
xor
cmp
out
ds
test
sti
in
rcrb
or
add
push
mov
and
xor
jp
not
jnp
out
mov
fs
lahf
and
sbb
inc
cmc
jle
std
int
outsl
sbb
mov
arpl
rolb
movsl
cmc
dec
mov
rolb
roll
pop
movsl
out
stos
mov
ficompl
andb
cmp
imul
mov
fcmovnbe
mov
lock
add
lods
pushf
sub
stos
rcrb
or
cmp
mov
shrb
lcall
mov
jno
lahf
xchg
adc
jbe
sbb
pop
ja
mul
xchg
rcr
gs
imul
and
fistps
stos
sub
pop
push
mov
mov
sbb
push
mov
loop
in
cmp
mov
jecxz
add
dec
insl
inc
repnz
dec
inc
fwait
pushf
popf
add
mov
or
sbb
stos
loop
mov
fucom
mov
inc
test
inc
push
jae
pop
int
testb
jno
in
aam
and
cmpsl
shrl
cltd
pop
popf
int
in
shlb
adc
xchg
cmp
into
loope
repz
call
insb
push
rorb
fisttps
mov
sbb
mov
cmp
add
lss
les
fistpll
loopne
inc
add
fs
popf
xchg
or
lahf
inc
push
sbbl
enter
and
hlt
xor
pop
push
mov
xchg
arpl
sbb
rorb
sahf
add
push
adc
hlt
ret
pop
in
test
xchg
pop
push
mov
fs
aas
enter
out
mov
sbb
cmp
daa
out
mov
mov
fs
mov
mov
cmp
mov
out
cmp
sub
insb
cmp
lahf
jns
inc
shlb
lds
dec
jno
cmp
push
jae
das
leave
inc
aam
mov
add
in
popa
push
mov
mov
pop
xor
xor
sahf
loopne
lods
sbb
repz
stc
loopw
sub
fcomps
lock
outsb
jns
add
fidivl
sub
out
daa
and
pop
fwait
shlb
jne
stos
xor
add
mov
sub
sub
int
mov
icebp
and
cld
fwait
fwait
clc
push
sbb
in
cwtl
bound
sbb
sbb
mov
into
lods
popf
scas
test
fmul
loop
rcrl
inc
aam
jno
shrl
push
mov
jmp
jo,pt
or
icebp
cmp
jmp
cmc
cmp
pop
sub
xor
xor
push
push
aad
xor
scas
js
jns
sbb
mov
dec
mov
sahf
and
jne
mov
in
push
push
mov
fidivs
jb
push
cmc
sub
aad
fs
xchg
stos
jp
push
insb
in
mov
cmp
push
xchg
inc
in
js
sub
divl
mov
inc
roll
std
bsr
and
aaa
mov
in
cmpsb
fmull
mov
insb
or
clc
insb
jno
into
imull
sub
sbb
inc
adc
test
arpl
fsubr
cmovae
loop
pusha
jmp
cmp
jp
push
loopne
xchg
adc
dec
xchg
jp
into
inc
inc
sub
cwtl
test
test
cwtl
inc
mov
in
rclb
or
pop
xchg
mov
ret
sbb
in
sub
or
inc
fadds
out
xchg
pop
leave
enter
dec
daa
mov
arpl
xchg
dec
sbb
cld
cmpsl
loopne
in
mov
ret
imul
mov
and
in
outsb
dec
or
xchg
jge
sub
scas
das
notb
outsb
repz
fs
xor
movsb
jge
ret
dec
xchg
fwait
cld
into
fnstsw
jecxz
mov
ss
subb
repz
outsb
add
ljmp
pop
into
or
sahf
dec
add
inc
lds
ret
cmc
pushf
scas
xor
pop
mov
sub
and
adc
decl
jae
arpl
mov
jmp
idivl
pop
cmpsb
xlat
xor
shr
adc
pop
adc
mov
mov
loope
mov
jg
ret
dec
or
mov
mov
or
repz
ret
jb
call
insb
xchg
push
mov
mov
mov
lods
jle
adcl
push
out
notb
stc
shlb
add
xorl
addb
outsb
xchg
add
ds
das
push
inc
lcall
pop
push
cmp
ror
cld
popf
fs
loop
not
aas
lds
shl
or
pop
pop
cmp
mov
cli
inc
cld
fisttpl
mov
pop
dec
sub
bound
out
and
cmp
mov
cmp
arpl
dec
sbb
sarb
je
dec
dec
lret
mov
in
sub
pop
cmp
ljmp
lahf
test
inc
cwtl
cmp
sub
scas
shrb
sbb
and
sub
adc
dec
mov
mov
push
cmove
leave
pop
xor
mov
das
xorl
lds
inc
and
fnstenv
pop
mov
inc
cmpb
or
lock
lahf
mov
lret
int3
dec
xchg
pop
cs
adc
or
sahf
push
inc
lret
scas
inc
dec
lds
clc
pop
fnstsw
sahf
xor
jp
jae
pop
xor
bound
idivb
ss
test
dec
jle
push
mov
mov
push
push
les
in
icebp
jb
inc
lds
test
inc
or
mov
aad
dec
mov
das
dec
out
int
inc
mov
xor
popf
sbb
fnstenv
gs
ret
inc
sar
xchg
and
loope
xchg
cli
add
int3
psllq
cmpb
mov
pop
xchg
pop
jl
pop
popa
jecxz
adcl
lods
dec
scas
repnz
inc
mov
faddl
dec
pop
push
pop
dec
loop
aam
mov
in
dec
jp
out
popf
iret
aas
stos
testb
mov
data16
jno
fld
sub
fcmovne
lea
fstpl
add
sub
inc
mov
aas
sbbb
inc
cmp
sbb
and
inc
nop
gs
push
sbb
ret
mov
adc
movsb
jecxz
jae
lock
pop
shlb
movb
das
or
scas
fs
push
cmp
push
jno
push
jecxz
popa
dec
dec
mov
and
lahf
cltd
sarl
mov
int3
cs
imul
pop
adc
mov
push
or
gs
dec
pop
or
fldl
or
incl
int3
pusha
cmpsb
xchg
push
add
fcmovne
xchg
out
shll
lock
in
movsl
mov
xor
fwait
jo
in
bound
fisubrs
clc
roll
shrb
test
dec
jns
mov
loop
and
inc
pop
cmpb
les
into
popl
sti
in
jge
mov
syscall
cmc
out
int
fs
add
fnstenv
ja
mov
psadbw
fidivs
mov
mov
sahf
jmp
adcb
jo
dec
push
ret
mov
lahf
sub
test
push
adc
in
stos
inc
push
push
js
or
mov
dec
push
aam
mov
in
lret
mov
push
incb
add
add
fs
imul
dec
and
data16
mov
cmp
cmp
clc
stc
dec
and
outsb
dec
inc
les
std
popa
hlt
les
cmp
aas
sbb
cwtl
aaa
lret
sbb
sub
notl
lds
imul
popa
mov
imul
shlb
push
sbb
icebp
sbb
inc
insl
arpl
sahf
jp
sbb
dec
je
push
ljmp
in
cmc
shlb
add
icebp
cmp
mov
shl
inc
aad
test
or
add
dec
subb
pop
lods
cmp
movsb
outsl
das
cs
mov
push
xor
or
cmpsl
shlb
jb
jge
sub
stos
mov
pop
fadd
sub
lret
hlt
mov
int
fstpl
add
in
push
fldt
pop
leave
cmp
mov
addl
loop
loop
push
arpl
push
mov
dec
and
add
xchg
inc
shrb
pusha
mov
ja
xchg
mov
jnp
lods
ret
mov
pop
rolb
add
or
movsl
scas
maskmovq
imull
popa
loop
lret
mov
push
ds
orb
dec
push
fdivrs
inc
lods
push
popa
mov
lock
inc
sub
js
sub
lret
ljmp
dec
inc
jb
cmp
sub
jecxz
jns
rorl
adc
sub
xor
push
or
ret
unpcklps
push
mov
stc
out
outsl
lea
aam
popl
pop
mov
mov
scas
inc
sbb
bound
cwtl
adc
mov
movsl
cs
sub
je
adc
imul
mov
jno
rol
in
int
mov
bound
jns
test
pop
call
je
and
cmp
cwtl
dec
pop
jns
pop
inc
mov
pop
sbb
stc
stc
es
mov
pop
add
sub
and
sbb
test
adc
pushf
andl
out
in
ds
cwtl
loop
xchg
dec
fwait
or
sbb
dec
bound
ljmp
mov
cmpl
cld
das
pop
add
push
cwtl
adc
jne
cmp
sbb
xchg
test
lcall
call
repnz
repnz
out
in
imull
xchg
lret
sub
adc
jecxz
scas
mov
cltd
cmp
movsl
aaa
lods
daa
pop
jp
les
arpl
ret
sahf
addr16
dec
rcpps
testl
imul
sbb
inc
cli
cmp
xor
jp
cmp
test
xor
sbb
mov
xor
mov
mov
stos
popf
mov
out
adc
xchg
xchg
bound
lods
adc
out
scas
lods
mov
xor
mov
push
xchg
cmp
stos
loope
in
push
lods
mov
pop
pusha
test
inc
mov
pop
cmpsl
sbb
stc
xor
cmp
test
mov
sub
pop
xchg
notb
add
cmp
pop
jb
inc
and
ljmp
sub
mov
push
and
les
test
add
adcb
sbb
movsl
popa
jno
push
push
lock
lods
roll
mov
in
pushf
div
ja
dec
jp
data16
mov
xor
xor
ss
and
mov
lcall
fldcw
inc
fldl
pop
or
dec
sbb
xor
cs
sti
pop
pop
cmpsb
call
jo
sub
pop
sub
inc
cmpsb
stos
sub
rcr
pop
dec
repnz
ja
jae
std
inc
loope
add
mov
add
pop
mov
jnp
int
mov
mov
loopne
and
dec
cmp
loope
jl
xor
mov
inc
je
orb
xchg
cmp
adc
outsb
fs
insb
mov
loop
sub
ret
outsl
pop
cwtl
fistpll
and
imul
daa
sub
sub
adc
jnp
leave
cli
inc
push
dec
int3
jbe
cmpsl
sti
inc
sbb
popf
out
inc
add
pop
mov
std
xlat
push
add
sub
stc
lods
add
in
mov
inc
out
xor
int3
xor
enter
ffree
lret
insb
and
lods
cmp
mov
mov
movsb
pop
pop
pop
into
adc
and
mov
sahf
xchg
lret
and
inc
in
and
xchg
push
mov
ja
or
and
or
stos
in
push
mov
mov
xor
aad
dec
je
inc
add
aad
outsl
out
xchg
mov
dec
lahf
loopne
cmpsl
jne
xor
ret
and
cltd
sub
or
xchg
insb
mov
cmp
cli
mov
mov
repz
dec
xorl
jmp
out
shl
ss
mov
or
cld
and
pop
ja
shll
stos
sbb
pusha
mov
inc
hlt
lahf
mov
lahf
cs
cmp
push
cmp
and
in
je
mov
cmc
xchg
into
imul
cwtl
inc
mov
xchg
cmp
xchg
mov
and
pop
lret
rcrb
repnz
out
or
mov
dec
jbe
cltd
fsubs
adc
iret
sti
js
movsl
aaa
ficoml
sbb
pop
imul
imul
dec
and
xchg
lahf
aaa
leave
les
popa
push
rorl
leave
xchg
pop
dec
sbb
jge
pop
cld
aam
mov
imul
add
mov
and
popf
xchg
xchg
inc
pop
outsl
sbb
and
pop
sarb
dec
mov
je
pop
inc
orl
test
fs
cld
int3
dec
cmp
push
push
fdivrs
je
pop
inc
fwait
xor
insl
es
or
jg
mov
pop
fadd
movl
dec
lods
sbb
add
adc
fiadds
int3
lds
insl
loopne
ljmp
movl
pop
test
fwait
mov
shlb
jp
add
add
imul
rol
call
in
stos
insl
jecxz
mov
xor
fistps
sbb
sub
mov
inc
xor
in
adc
mov
sbbb
cld
sbb
xchg
mov
pop
mov
xchg
push
rcl
cmpsl
inc
bound
dec
test
mov
or
inc
xchg
fwait
ret
sbb
xor
cmpsl
lock
gs
sti
aam
inc
data16
adcb
xchg
adc
sbb
popl
loopne
fisttps
push
nop
aad
scas
inc
ja
jb
mov
mov
adc
xlat
and
fistl
mov
test
or
outsl
xchg
sbb
rol
jo
shrb
xor
in
rcl
pushf
cli
popa
shll
push
dec
hlt
insb
adc
es
test
sub
loope
or
lea
xor
into
cmp
int
das
push
mov
pop
xchg
shrl
sub
inc
ret
shrl
or
mov
fimull
out
push
ljmp
rcrl
jp
xchg
pop
jno
repnz
cmc
dec
ja
ja
push
inc
adc
mov
faddp
mov
nop
bound
aam
and
xchg
je
out
adc
xchg
pop
call
leave
das
ss
mov
scas
jmp
cmp
pop
xor
nop
mov
or
jg
rcll
cmpsl
dec
xchg
dec
push
cmpb
call
imul
mov
imul
push
mov
dec
or
mov
divl
push
jne
fildl
add
arpl
pop
push
inc
repnz
out
sbb
cltd
addb
pop
inc
sub
adc
lret
stos
jl
addr16
ret
je
int3
jge
mov
dec
iret
insl
jl
mov
aas
mov
sub
std
mov
jge
mov
insl
push
daa
lods
dec
or
push
push
dec
mov
out
xchg
push
dec
sbb
sub
loope
mov
fptan
jns
xor
dec
xchg
testl
hlt
pushf
pop
adc
hlt
xchg
or
ret
insl
cli
iret
out
xchg
in
int3
sbb
ret
int3
sub
aam
xchg
out
xchg
pop
jbe
add
adcl
rcll
sbb
dec
mov
lret
xchg
fdivrs
imul
ds
in
xchg
pop
push
push
xor
xchg
jl
mov
lahf
add
or
inc
cmpsl
or
lods
cmp
pop
pop
aam
pop
fnstcw
daa
notb
popa
mov
or
or
mov
jle
gs
pop
repnz
mov
mov
pop
stc
push
cwtl
cmp
adc
fiaddl
iret
cwtl
or
repnz
js
push
cmp
add
and
out
lahf
sbbb
xor
adc
leave
inc
inc
decb
dec
dec
xor
add
xchg
adc
mov
das
push
int3
std
sbb
pusha
lret
dec
mov
sub
cmp
inc
adc
add
push
icebp
clc
lret
sub
out
and
pop
push
inc
repnz
xor
scas
fwait
sbb
mov
push
mov
fildl
sti
adc
sbb
fists
add
cmpsl
sbb
into
fisttps
pop
loope
loop
lea
push
bound
or
call
xchg
xor
sbb
nop
daa
mov
inc
fiaddl
sbb
out
mov
push
insl
jl
lahf
fwait
push
loope
fisttps
fisttps
icebp
xor
or
mov
jb
sbb
sbbb
mov
ljmp
add
add
adc
pop
xor
cmpsl
insl
mov
xchg
jns
adc
sbb
sub
dec
or
xchg
popa
inc
mov
dec
fisubl
inc
mov
push
and
in
ljmp
int
pop
inc
out
adc
out
push
testb
arpl
addr16
xor
mov
cmp
sbb
jge
je
shl
imul
inc
stos
or
add
xchg
das
pop
inc
call
sarl
pop
push
jbe
push
popa
mov
stos
sbb
mov
repz
in
fs
enter
cmp
lods
push
or
fisubl
adc
jno
jp
sbb
stos
inc
jmp
idivb
sbb
ret
fdivrl
and
lret
xchg
in
cmpl
mov
pop
sbb
fnstenv
iret
fwait
test
mov
xchg
dec
inc
stos
xchg
addr16
xorl
push
movsl
inc
mov
ret
mov
stos
cmpsl
pop
and
outsl
pop
sub
lret
push
aad
gs
push
nop
scas
push
jecxz
xchg
sub
dec
or
faddl
fwait
cmpsb
adc
popf
sbb
xchg
push
mov
mull
jo
xor
mov
push
loopne
sbb
loope
shlb
adc
jl
lret
in
not
push
movsb
shll
inc
mov
addr16
nop
frstor
lock
mov
push
aad
les
inc
test
inc
popa
pushf
add
sbb
loop
popa
jno
mov
mov
mov
enter
push
stos
lret
mov
push
daa
jo
lock
inc
pop
pop
jp
ret
test
mov
xchg
dec
ja
pop
fsubr
sub
lret
adc
pshufw
data16
cmp
faddl
adc
push
push
cmpl
xchg
ja
test
pop
in
orb
mov
adc
jbe
and
std
cld
test
and
mov
add
push
and
sbb
and
iret
mov
sahf
inc
ja
add
lret
mov
xor
and
cwtl
fcompl
call
orb
movl
insl
fistpll
sub
iret
cs
fcom
or
xchg
adc
xchg
imul
ret
inc
incl
xor
out
pop
xor
lahf
mov
dec
dec
lods
cmc
push
inc
xchg
iret
pop
xchg
pop
cmp
jl
mov
lea
xchg
ficoml
insb
mov
mov
xchg
sbb
fcmove
pop
fcmovnbe
mov
fs
aam
test
fadds
jge
out
dec
add
pop
incl
jo
jp
sub
jp,pt
rcrb
xor
repnz
inc
test
cli
add
call
lea
or
jl
insb
aas
and
loopne
pop
test
mov
les
dec
fsubrs
in
aad
lea
outsb
iret
adc
inc
jl
pusha
repnz
bound
aam
outsb
aaa
and
pop
repnz
jle
dec
push
mov
loopne
add
dec
mov
jg
push
cmp
mov
pop
lcall
push
cmp
xchg
cmp
fisubrs
divl
movsl
jl
jb
les
push
lret
cmc
mov
fsub
lea
mov
jns
jle
jg
lds
in
or
jb
dec
mov
sbb
in
mov
push
cmp
bound
and
push
or
stos
int3
rcrl
shll
mov
int
fisubrl
mov
cmp
insb
pop
jno
adc
mov
fwait
pop
mov
lret
cwtl
int
xchg
aad
loope
jo
lahf
adc
lds
sti
lret
pop
or
xor
aam
add
fisttpl
orl
sbb
dec
arpl
jp
push
test
insl
ds
ffreep
push
sbb
sub
push
cmp
adc
loop
xor
lahf
mov
push
fimuls
in
aam
or
lret
mov
insl
mov
sub
push
cmp
dec
push
lea
push
pop
clc
scas
mov
pop
sbb
jo
jmp
lods
mov
cmpsb
mov
inc
loope
xchg
xor
inc
xor
ret
xor
je
jbe
ds
sub
imul
xchg
dec
rcrb
mov
addr16
or
jg
roll
ss
pop
test
adc
imul
dec
stos
xor
push
xchg
jbe
aam
dec
or
aad
std
loopne
pop
idivb
fcomps
sub
push
fidivs
mov
add
outsb
int3
mov
rcll
call
mov
lret
push
adc
jp
icebp
add
jge
aad
subb
fcmovnbe
mov
jne
xchg
sub
add
and
sbb
xchg
sbb
fists
push
or
pop
mov
mov
adc
movsb
mov
push
clc
mov
out
mov
fistl
push
pop
mov
fucom
xchg
mov
mov
adc
sub
int3
test
mov
mov
mov
aas
popf
bound
and
push
sbb
jl
and
iret
jg
aad
mov
xor
xchg
fcompl
pop
test
lret
jg
jno
sub
mov
test
and
dec
shl
sub
mov
lock
xor
mov
xchg
cmpsl
or
cwtl
movsl
mov
or
or
popa
stc
sbb
test
mov
insl
in
sbb
mov
mov
dec
pusha
xor
repnz
jb
or
xchg
ds
test
pop
mov
mov
push
repz
les
int3
mov
xchg
mov
inc
int
movsl
fcoml
cs
jmp
adc
push
cltd
sub
mov
xor
dec
faddp
push
iret
sub
movsl
jne
cmp
push
inc
and
or
pop
and
xor
dec
cmpsb
int3
xchg
jl
dec
scas
adc
lret
icebp
push
push
dec
int3
loop
inc
pushf
push
mov
stos
dec
ror
sub
mov
inc
add
clc
or
ror
and
push
mov
dec
leave
jecxz
jnp
inc
and
call
mov
popa
dec
test
stc
cltd
aam
fldenv
sahf
adc
lret
mov
push
mov
add
outsb
and
or
loop
sub
ljmp
sub
addr16
movsb
ds
fldt
jge
rclb
leavew
mov
mov
dec
add
sub
jo
into
xchg
inc
jmp
push
out
stc
sub
jns
dec
and
rcll
push
mov
push
sub
jg
lea
or
adc
and
mov
call
or
push
jp
jmp
cld
in
call
cmpsb
ret
out
lods
sub
mov
xor
icebp
cwtl
xor
movsb
inc
cmpsl
pop
xor
mov
push
adc
xchg
orl
mov
mov
mov
jl
lret
cltd
cmpb
lcall
ds
dec
mov
push
inc
bound
inc
ret
dec
ds
lcall
mov
xchg
mov
jns
pop
xchg
mov
iret
sbb
sbb
adc
rcll
xchg
sub
cld
inc
cmp
adc
je
push
pop
out
cmp
hlt
inc
sbb
js
nop
lea
xchg
add
jp
xchg
ljmp
xchg
es
xchg
push
mov
int3
iret
inc
leave
adc
sahf
push
xor
sub
adc
repnz
stos
inc
pop
or
push
sbb
cltd
js
clc
cwtl
jg
mov
and
outsl
leave
and
cltd
cwtl
pop
sbb
push
ss
out
popf
push
adc
shrb
testb
out
or
loope
outsb
adc
sub
outsb
mov
or
inc
imul
filds
in
test
mov
push
and
aam
out
pop
cli
pusha
pop
fsts
mov
imul
repnz
lret
roll
xor
lret
sub
adc
lcall
clc
jnp
cmpsb
mov
mov
sub
loop
cwtl
and
bound
loop
lahf
xor
outsl
aaa
mov
imul
in
cltd
lahf
jb
pop
repz
lahf
cmp
jno
cmp
xchg
into
sbb
aad
cwtl
cmpsl
mov
adc
inc
mov
lret
push
xchg
ja
add
cltd
cmc
dec
push
aaa
ja
dec
insb
jae
hlt
cltd
jmp
mov
dec
imul
add
adc
jle
cmpsl
push
and
push
iret
and
sbb
mov
arpl
fld
les
fidivs
mov
or
test
std
hlt
and
ja
add
repz
aaa
cmpsl
aas
addr16
add
xchg
jecxz
jg
out
sub
mov
xchg
xor
jae
adc
aaa
lock
jecxz
insl
pop
inc
jnp
hlt
lods
or
jbe
cmpsl
sbb
fcom
test
fidivrl
jl
dec
rorl
jne
pop
ret
ficompl
jne
xchg
fsubl
jmp
fadds
pop
xor
cmp
out
cwtl
pushf
or
or
add
rcll
push
repnz
mov
mov
inc
add
leave
sti
pop
imul
js
and
sub
mov
sarl
cmp
popa
fmuls
fsubrl
push
inc
scas
dec
mov
sbb
cmpsb
enterw
insb
dec
pop
mov
in
push
sbb
movsl
out
xchg
xchg
fiaddl
pop
jge
xlat
adc
adc
cwtl
das
sbb
ljmp
mov
pop
pop
mov
nop
imul
inc
lock
push
or
mov
jge
jne
ja
jbe
lods
cwtl
imul
out
inc
push
push
test
fidivs
dec
and
fistpl
adc
sub
fists
clc
add
xor
cltd
cmp
cwtl
scas
sbb
push
pop
popa
push
dec
rcl
jmp
lock
sbb
dec
aas
inc
mov
xor
fldl
or
psubw
mov
popf
dec
sub
into
popf
aad
test
aas
mov
push
stc
mov
jmp
les
add
xchg
mov
shrb
or
mov
dec
aam
sub
push
mov
adc
dec
dec
lcall
mov
in
mov
sar
cld
mov
in
and
jae
daa
pop
push
js
xorb
orb
adc
shr
aas
imul
test
fcomi
dec
jae
mov
je
fucomi
movsb
sub
je
pop
mov
sti
mov
push
dec
xchg
sbb
test
mov
jg
add
push
mov
xor
dec
mov
scas
lock
shrl
imulb
loope
jge
adc
int
ja
es
inc
adc
xchg
and
push
push
loopne
psrlq
push
lods
data16
pop
dec
cwtl
mov
out
ret
and
mov
mov
sub
push
adc
leave
mov
jbe
pop
mov
dec
or
les
sahf
adc
iret
mov
mov
inc
pop
xor
inc
out
pop
sbb
pop
out
jmp
xor
or
sbb
scas
les
xchg
pop
out
xchg
mov
std
jbe
add
cmp
shlb
dec
mov
add
add
and
scas
sarb
and
or
push
push
lea
and
push
ret
sahf
jnp
ljmp
shll
mov
mov
insl
mov
insb
movsb
hlt
mov
mov
shlb
cmpl
inc
iret
rep
push
outsl
fidivrl
je
xor
dec
push
fsubs
dec
push
test
adc
fcomps
mov
push
jo
aaa
sbb
mov
mov
lahf
in
js
inc
shll
dec
jno
jb
sbb
call
dec
pop
xchg
mov
mov
xchg
mov
ja
xchg
out
fcoml
pop
xchg
xchg
push
cmpsl
lret
add
and
cmp
das
imul
or
xor
mov
mov
jge
outsb
stos
cmpl
lahf
rcrb
cmp
popf
mov
popf
xor
lods
pop
pop
in
shlb
sub
push
add
outsl
adcb
out
mov
or
cmpb
mov
mov
cs
pop
push
and
lret
jmp
jb
dec
arpl
or
jmp
in
in
loop
repz
jge
mov
xchg
sahf
sar
and
sbb
xchg
popf
mov
testb
or
clc
loopne
sub
mov
add
mov
adc
xchg
add
sbb
and
lret
popa
pusha
popa
mov
fcmove
push
insl
js
mov
jae
jge
mov
movnti
scas
lods
test
adc
mov
adc
loop
jns
jle
mov
nop
lods
push
xchg
rcrl
jl
inc
xchg
fsubs
and
sahf
sbbb
call
inc
dec
pop
xchg
mov
jb
cmpsb
insb
movsb
push
and
push
add
pop
dec
jmp
data16
jp
imul
clc
std
pushf
aas
xchg
out
bound
leave
inc
fidivs
pop
cli
mov
outsb
aam
test
lret
aad
mov
pop
and
js
daa
pop
movsl
sub
sahf
outsb
daa
xor
mov
mov
ret
xlat
jge
push
test
fsts
inc
ljmp
dec
ficoml
insl
cli
push
ljmp
push
dec
nop
scas
add
popf
rcr
push
out
ds
call
sahf
in
sbb
cmpsl
pushl
repnz
ffree
sub
jae
lahf
push
clc
add
sti
cmc
fidivs
jge
mov
jmp
jp
xor
lock
pop
insb
pop
xchg
add
cmp
incl
ret
ljmp
cmpsb
mov
out
cmp
cmp
test
push
lret
imul
aad
inc
xor
movsb
loopne
jae
jl
jae
iret
xchg
sub
push
into
pop
jmp
addr16
mov
out
outsl
inc
jo
mov
rolb
cmp
in
imul
call
jle
pop
divl
lret
rcrb
adc
pop
mov
out
mov
out
inc
inc
jp
sbb
aad
fdivr
into
mov
xlat
fs
xchg
xchg
inc
in
int3
jb,pt
loop
in
mov
and
sahf
mov
sti
push
int
js
lods
mov
mov
mov
cmc
inc
popf
xor
movsl
pushf
shr
jg
adc
ljmp
stos
cwtl
inc
inc
sub
in
dec
mov
in
pop
dec
add
cmc
mov
pop
loope
pop
cmp
loope
mov
lds
ljmp
hlt
add
push
popf
mov
nop
xchg
call
push
aad
in
dec
jns
popa
lea
mov
jge
rolb
or
push
ja
into
pop
sahf
clc
mov
call
les
mov
cmpb
pop
stos
or
repz
iret
setns
lea
mov
xor
popa
sahf
int3
lock
dec
mov
daa
shlb
adc
andb
jae
jl
or
ss
inc
or
imul
sub
xor
pushl
lock
inc
cmp
or
add
je
add
mov
sahf
inc
push
bound
icebp
sub
pop
inc
dec
fldl
xchg
jbe
test
pop
dec
fiaddl
sbb
mov
movl
cmp
cmpsl
out
xchg
jle
mov
jbe
mov
scas
stc
cli
aas
loope
pushf
lret
cmp
scas
call
pop
sar
push
jnp
test
sbb
in
fimull
test
pop
pushf
adc
out
in
pop
pop
out
pop
xor
rclb
xor
dec
jp
insb
push
insl
testl
adc
shl
jp
mov
addl
in
fistpl
fcompl
cmp
mov
insl
js
ja
adc
fwait
jo
iret
addr16
add
incl
mov
aas
insb
mov
stos
ja
aam
divl
pop
and
loope
inc
inc
mov
in
and
out
popa
xor
xor
sbb
stos
into
adc
lods
xchg
rolb
je
aaa
in
fsubrl
dec
adcl
sbb
sahf
test
adc
adc
stos
jp
hlt
dec
inc
je
data16
cltd
cmp
ficomps
mov
pushf
pop
jmp
cmp
or
cmpsl
inc
and
das
cmp
shl
push
jmp
insb
adc
sub
test
movsb
out
jl
mov
mov
push
pusha
sbb
push
rolb
loope
loope
dec
mov
inc
rcll
pop
inc
xchg
mov
mov
ret
mov
push
jg
jbe
lods
dec
jns
fistl
and
fdivs
sbb
fists
xor
daa
movsb
push
mov
cltd
testb
call
jne
push
and
mov
aam
add
mov
out
in
in
and
cld
aam
outsl
sub
xorb
and
mov
dec
arpl
lret
ja
cmp
and
or
xchg
add
in
mov
cmp
ret
xchg
pop
pop
add
inc
jg
mov
mov
inc
inc
fs
sub
ret
cmp
mov
mov
xor
pop
mov
pop
fisubl
js
jmp
jne
mov
push
popa
add
inc
mov
cmp
or
ftst
ss
dec
loope
mov
je
jbe
enter
sub
je
dec
out
xchg
fcmovu
add
push
syscall
push
lahf
push
ss
into
inc
add
popa
aas
add
mov
add
in
cmc
and
arpl
cmc
jmp
and
and
popa
add
xor
jle
int3
in
mov
dec
xchg
jnp
dec
fildll
fucom
adc
cmpb
mov
jecxz
add
jg
add
inc
stc
add
lea
pop
push
les
xchg
int
shlb
lods
xchg
ja
cmp
pushf
xchg
and
std
lret
icebp
ds
cs
testb
ds
cmp
jge
scas
fcoml
xor
out
jno
jbe
in
cmp
mov
cmp
xlat
jo
pop
sub
ret
ret
sbb
shll
fldl
mov
dec
arpl
push
test
cmp
sbb
std
mov
mov
fimull
fisubrl
aad
pop
add
adc
push
cmp
lret
jl
add
jbe
subl
adc
push
xchg
xchg
jp
loope
mov
jnp
into
inc
sbb
mov
jae
pop
mov
aam
lret
shl
stc
imul
stc
jg
mov
push
stc
and
lcall
fidivs
cmp
scas
jae
pop
jle
pop
jmp
sub
jge
pop
sbb
cwtl
mov
sub
movsl
cltd
scas
stos
mov
push
cmpsl
mov
lods
push
adc
jle
xchg
iret
es
fstpl
pop
xchg
das
imulb
jnp
push
stos
inc
mov
scas
test
imul
hlt
imul
push
das
jb
adc
and
lea
call
mov
xchg
stos
mov
js
mov
pop
adc
ss
mov
xchg
mov
scas
add
pusha
pop
jmp
ja
shlb
das
in
push
shrb
fdiv
inc
adc
rorb
mov
aad
js
out
test
xor
push
cltd
dec
pop
adc
aaa
add
test
adcb
push
dec
mov
sbb
xchg
cmp
xor
cmp
mov
sbb
shll
fidivs
pop
repnz
cmp
int
jmp
in
push
loop
cmpsb
mov
jmp
insb
jb
adc
sar
cmpsl
adc
sbb
inc
add
stc
aad
loop
test
test
lret
pop
imull
out
sbb
cmc
inc
push
xor
leave
pop
scas
fs
arpl
inc
stos
cwtl
push
push
les
out
or
add
dec
jno
cwtl
orb
out
imul
sub
and
pop
movsl
xchg
jns
cmpsb
sbb
mov
ret
clc
mov
sub
mov
lahf
lret
inc
mov
out
stos
sbb
bound
rorb
add
adc
shlb
and
pop
ja
jle
xor
cwtl
les
xchg
push
pop
add
and
inc
mov
ja
fdivs
pop
rclb
rcrb
dec
je
movsb
insb
push
jg
mov
dec
or
out
sbb
nop
xor
jno
mov
scas
dec
push
sbb
clc
mov
add
insl
std
mov
ret
pop
shrb
sbb
cmp
cmp
inc
pop
les
cmp
pop
cmp
adc
rorb
inc
leave
mov
es
cli
mov
inc
imul
cltd
xchg
sub
xchg
test
pop
fdivrs
mov
addr16
mov
add
mov
dec
mov
mov
mov
dec
fnstcw
push
out
adc
lods
mov
lods
mov
pop
pusha
mov
ficomps
xchg
lea
movsb
push
out
outsl
sti
lds
xchg
sarb
inc
stos
fs
fisttps
sbb
gs
add
cmc
or
pop
lret
jecxz
outsb
xor
dec
mov
leave
daa
fcoms
inc
xchg
adc
jg
adc
movsb
dec
mov
add
dec
pop
xchg
lea
pop
cltd
mov
push
lods
pop
je
shrl
fwait
repnz
ror
xchg
push
ret
stos
getsec
jmp
mov
inc
cmp
cld
jo
jle
push
negb
enter
jns
jae
fldl
fldl
scas
pushf
inc
cltd
dec
push
jp
addl
es
fcoms
inc
mov
add
js
lret
inc
mov
xchg
or
idivl
fdiv
cwtl
and
xor
std
ja
jne
pop
repz
adc
shl
xor
xor
mov
mov
cmp
mov
insb
imul
ss
xor
push
jbe
dec
mov
loop
mov
or
pop
mov
fnstcw
pop
pushf
andb
pop
je
lahf
scas
mov
cmp
sub
mov
mov
insl
mov
pop
xchg
test
jp
push
dec
adc
mov
inc
mov
pop
stc
sub
out
sbb
push
cmpsb
mov
xor
adc
lods
xor
fstpt
cmc
sub
and
in
adc
shlb
ljmp
xor
loop
jle
adc
mov
cli
jnp
xchg
test
pop
add
or
cmpsb
mov
aam
dec
jecxz
test
in
movsb
xchg
repnz
jge
xchg
pusha
mov
adcl
lcall
or
mov
inc
shll
dec
fwait
or
mov
and
lahf
jg
or
test
or
aad
mov
xchg
push
mov
xchg
mov
cmp
clc
xor
divl
sub
push
mov
out
push
mov
fcompl
push
push
aam
xor
pop
test
xor
push
scas
mov
mov
es
shrl
mov
lods
or
add
jae
leave
rcrb
lds
xchg
movsb
fwait
mov
or
adc
sbb
dec
xorl
sub
pop
adc
cli
bound
pop
dec
rorl
fiadds
rclb
jo
divl
push
push
xchg
int
mov
xchg
add
or
lods
enter
mov
cwtl
lods
fwait
or
negb
jns
xchg
cld
pusha
aam
fbstp
fcmovu
call
pop
dec
or
movsl
jl
xchg
jle
loop
lods
mov
push
adc
add
fwait
push
and
fistpl
pop
jp
or
and
add
loop
mov
dec
pop
arpl
and
test
add
pop
scas
mov
ljmp
lds
inc
cmp
arpl
nop
mov
push
pop
iret
stos
xchg
mul
and
push
and
or
xor
or
std
data16
ficoms
cmpsl
cmp
cltd
ja
push
inc
xchg
loop
fstpl
loop
clc
mov
lds
pop
sub
mov
jl
xor
in
xchg
jnp
lea
aad
mov
mov
out
push
push
fldl
std
loope
test
lcall
ret
mov
and
mov
leave
stos
mov
xchg
ss
insb
and
fiadds
nop
mov
cmp
mov
jmp
stc
icebp
mov
xor
push
movsb
adc
and
pop
sbb
adc
jle
sahf
add
fistps
es
inc
adc
imul
les
push
mov
aam
les
fisttpll
sub
sub
mov
rorb
mov
test
lret
mov
inc
out
jns
jle
js
mov
test
adc
mov
mov
out
scas
mov
xchg
lds
fimuls
xor
xor
into
das
add
jl
stc
adc
fdivs
fs
xor
mov
loope
sahf
andl
pop
test
jb
into
lcall
xchg
pop
movl
sarl
in
call
cmp
das
mov
xchg
stc
jnp
andb
inc
xchg
mov
aas
mov
mov
push
in
pop
jne
sbbb
push
push
pop
inc
addr16
rolb
cmp
shlb
mov
ja
pop
push
iret
out
sbb
lea
call
call
xchg
jmp
mov
xchg
dec
lods
push
lret
xor
mov
insb
fiadds
add
xchg
push
jae
int3
int3
and
sub
stc
push
dec
mov
push
fisttps
fmuls
sbb
jnp
ds
mov
ljmp
gs
pop
mov
dec
push
mov
sub
ljmp
imul
adc
popa
jg
mov
psubsb
cmp
fnstcw
mov
pop
mov
popa
out
mov
jge
rcrb
cmp
jbe
rcll
lret
push
bound
jmp
mov
add
ficompl
adc
jecxz
add
sub
inc
jg
push
cli
test
push
sub
jo
iret
jge
repz
test
sbb
test
fcom
jge
test
cmp
test
xchg
movb
dec
adc
xchg
jo
cmc
push
lds
enter
out
jbe
and
lock
mov
in
enter
sub
lret
and
fcmovnb
jae
mov
out
and
shrl
mov
and
xchg
push
sub
or
push
cmp
cmp
mov
sti
pop
xlat
mov
xchg
das
cs
pop
mov
and
sbb
into
xlat
or
ret
xchg
sbb
shrl
aaa
into
clc
sub
je
sbb
clc
rclb
gs
sbb
jne
in
add
push
les
xor
aad
mov
cltd
xor
loope
data16
mov
call
xchg
gs
jg
cmp
sahf
inc
mov
std
mov
xchg
outsb
push
and
out
mov
test
cmp
dec
inc
ljmp
pop
pop
inc
push
into
pop
and
sarb
fnstsw
xchg
inc
jg
in
loop
inc
inc
xchg
and
lret
cmp
jg
pop
inc
enter
iret
fcmovbe
and
xchg
mov
dec
mov
enter
fistpll
and
aad
pop
loopne
or
loope
lea
xchg
or
adc
divl
sarl
in
ja
xchg
mov
cmp
cmp
xchg
pop
xchg
mov
or
adc
aad
rcrl
imul
insb
insb
push
cs
add
stos
adc
add
out
es
repnz
clc
data16
mov
repz
repnz
mov
or
incl
roll
shrl
or
mov
stos
mov
add
aam
test
jg
lea
roll
loop
fdivrl
scas
adc
mov
cs
sbb
popf
mov
aaa
mov
loopne
cmp
imul
adc
pop
rep
pushf
push
mov
xor
popf
sub
sti
jne
fs
pop
cmp
sub
fwait
add
push
mov
int
aam
nop
test
movl
cmp
test
sysenter
jl
mov
inc
pop
mov
rcl
pop
lret
push
mov
xchg
xor
sub
in
mov
fildll
lea
or
add
ja
fdivr
mov
push
loope
pop
inc
pop
push
lahf
fsubs
pop
mov
es
aam
ds
cs
xor
lret
rolb
ljmp
scas
popa
dec
stc
jo
fldl
rclb
cmpsl
lods
lea
and
fcomp
add
xor
mov
in
test
rcrl
idivl
cs
jl
mov
mov
jne
fwait
test
dec
scas
and
outsb
xor
fmul
adc
mov
fisubrs
test
add
mov
ret
and
dec
out
pop
pop
push
ret
lahf
in
add
pop
sub
adc
mov
fwait
inc
aas
cmpsb
notb
sub
push
dec
sbb
jne
inc
mov
cmp
gs
jbe
sub
mov
loop
push
xchg
xchg
xchg
imul
int3
adc
jmp
xchg
cmc
pop
dec
mov
push
mov
cs
cmp
mov
mov
push
mov
jle
xchg
push
inc
in
jle
ret
ljmp
push
rorl
or
stc
lock
mov
mov
jo
outsb
test
jae
ja
push
fdivrp
push
out
add
ret
sti
adc
adc
fsubr
pop
movsl
mov
pusha
stc
mov
stos
push
xchg
lret
mov
lret
fidivs
sub
cmp
cs
or
xchg
in
ja
lahf
pop
xor
fistps
xchg
dec
push
in
into
push
and
rolb
dec
xchg
aam
jo
popa
ds
ja
dec
adcb
or
jns
inc
rolb
addr16
push
in
out
mov
push
mov
push
inc
or
cmpsl
cmp
cs
mov
shl
in
push
test
xorb
cmp
mov
mov
or
adc
bound
sbb
push
into
enter
std
mov
imul
cmp
and
mov
in
jno
testb
mov
pop
xor
lods
push
rcr
aas
scas
sbb
add
daa
das
mov
shlb
jl
subl
arpl
in
mov
in
dec
dec
and
pop
mov
aam
adc
ds
fdivr
push
mov
insl
push
adc
push
adc
lods
jge
pop
ret
jmp
adc
xor
int3
aas
xor
insl
mov
and
jbe
pop
rorl
xor
mov
jne
nop
cmp
push
and
stos
mov
jo
adc
mov
mov
mov
fstl
jae
jnp
adc
add
mov
std
les
push
mov
dec
pop
inc
call
sbb
push
sbb
mov
push
xchg
pusha
pop
loop
rorl
xchg
cmp
push
pop
xor
hlt
jo
fdivr
adc
or
sub
pop
mov
and
data16
cmpsb
pop
sbb
sbb
insb
inc
scas
mov
push
out
adc
push
popa
dec
xchg
test
stos
aad
in
rcr
or
mov
sahf
popf
outsl
lret
sbb
pop
dec
insl
mull
xchg
arpl
inc
shrl
mov
popf
mov
out
pop
sub
imul
adc
jb
xchg
sahf
and
inc
fcomi
cltd
jb
rolb
lds
jo
addr16
mov
lods
addl
popl
pop
pop
mov
mov
or
ss
movsl
push
stc
movsb
lret
insl
mov
xchg
sub
sbb
push
clc
sbb
mov
cmpsb
imul
gs
cwtl
loope
movsb
repz
mov
mov
leave
mov
mov
xchg
call
mov
add
xchg
push
add
shlb
das
outsl
inc
cmp
fcompl
sub
push
mov
lods
push
ret
fsubrl
mov
popa
mov
stc
mov
rol
into
cmpsl
fs
out
cmc
xor
and
mov
xchg
add
pop
cli
sbb
dec
xor
cmp
outsl
int
aad
daa
jp
imul
or
jl
or
mov
shll
repz
mov
dec
and
lock
cs
or
cmpsl
pop
test
scas
or
lods
imul
ret
and
adc
cs
add
and
xchg
shll
test
ret
mov
sub
dec
and
jne
test
aas
fidivl
mov
xchg
adc
mov
int3
shll
xor
daa
gs
dec
popf
std
in
inc
movsl
icebp
sarb
push
fstps
scas
movsb
push
in
mov
xchg
testb
imul
adc
xchg
loop
cld
scas
js
push
lcall
mov
je
cmp
pop
mov
sbb
jg
inc
pop
aaa
jmp
jbe
jl
js
push
nop
jns
dec
outsl
push
repnz
into
sbb
xor
sbb
inc
or
lock
inc
jl
or
sbb
xor
cmpsl
xor
mov
cmpsl
adc
mov
push
lret
adc
sarl
cltd
pop
xlat
sub
lret
push
xchg
cmp
sti
cld
fnstcw
cli
rcl
and
mulb
sub
jp
inc
mov
sbb
mov
push
cmp
rcrl
mov
xchg
pop
ljmp
inc
xor
cmpsb
push
scas
pop
in
fwait
push
xlat
testl
rcl
sahf
fwait
stos
pusha
hlt
inc
adc
loopne
in
test
cmpb
or
xchg
sbb
adc
loope
jl
sbb
sub
mov
add
lret
mov
mov
cld
out
icebp
xchg
repz
jo
ret
fisttpl
scas
dec
add
dec
das
jp
sbb
push
sti
in
mov
jge
ret
imul
mov
loopne
xor
stos
jbe
adc
cwtl
aas
push
jnp
push
add
lods
ljmp
ror
add
aad
fxch
in
fmull
divb
popl
inc
stc
mov
in
sub
dec
xchg
pop
cmp
rcl
sti
xchg
or
jle
dec
adc
pop
sub
pop
mov
and
stos
cmp
jg
push
int
stos
fcmovnu
imul
shr
inc
mov
push
lcall
popf
push
add
jne
xor
jae
dec
add
pop
loope
add
aam
mov
lock
sahf
and
aam
adc
inc
mov
push
mov
ds
test
enter
cs
test
mov
cmc
mov
sbbb
aam
int
cmpsl
jecxz
in
sub
mov
push
stc
cltd
loop
xchg
xchg
jl
cld
aas
mov
mov
mov
jnp
in
jb
popa
arpl
mov
repnz
es
pop
add
js
add
pop
rolb
xor
dec
push
sbb
push
flds
arpl
mov
int3
fs
xor
add
jge
xchg
ret
jbe
and
lock
mov
push
add
add
das
mov
call
xchg
mov
xchg
rcll
test
rcrl
arpl
pop
gs
or
lret
push
stos
fdivs
in
xchg
pextrw
mov
mov
dec
add
cmp
jae
fcomps
fsubrs
rorb
xchg
dec
std
inc
xchg
addr16
sub
and
aaa
std
mov
addr16
std
insl
fisttpll
repz
inc
jmp
ficoml
mov
outsl
ret
mov
mov
cmc
ljmp
int
imul
adc
jmp
iret
xor
addps
add
mov
cltd
dec
xchg
fidivrl
in
mov
subb
sti
or
out
fsts
or
dec
lret
inc
loopne
add
pushf
or
or
adc
inc
sbb
mov
pop
lret
xchg
addr16
mov
shrl
cmp
add
xor
jge
fmuls
inc
in
out
lret
dec
sbb
lret
sub
clc
test
outsb
pop
repz
mov
mov
jp
movsl
aas
push
lock
mov
mov
cmpsb
mov
popa
jo
jo
mov
jg
adc
iret
inc
ret
adc
call
jl
enter
rclb
mov
inc
mov
inc
loop
push
jno
push
call
pushf
jmp
jnp
stos
pop
push
mov
leave
or
cmpsb
dec
or
aam
cmc
icebp
jb
je
movsb
xchg
cltd
push
dec
sbb
stos
aaa
or
mov
jns
xchg
mov
jno
call
ret
mov
testl
jbe
push
rorl
cld
loope
jb
mov
mov
lea
and
imulb
loopne
xor
adc
cwtl
fyl2xp1
mov
rclb
clc
add
negl
dec
push
repz
fs
pushf
es
fisttpll
stc
int3
add
lahf
xchg
cmp
mov
repz
fucomi
push
stc
rorl
inc
leave
xchg
lds
out
dec
lods
std
push
cmpsb
ret
shll
je
aad
les
cwtl
in
popa
sub
in
xor
adcb
rcll
dec
pop
shrl
xchg
lods
inc
pop
stc
and
mov
xor
lods
rorb
int
shrb
lods
stc
add
fiadds
inc
lock
iret
lods
ret
sbb
adc
xor
or
int
mov
xor
jge
into
rcll
mov
mov
cwtl
push
imul
je
pop
jge
inc
pop
and
pop
adc
in
repz
loopne
dec
push
or
xchg
scas
push
lds
pusha
jge
jmp
xor
cwtl
xor
les
and
pop
jle
stos
pop
mov
inc
mov
xchg
pop
push
jecxz
push
mov
mov
adc
mov
jb
fmull
mov
inc
out
stc
adc
gs
movsl
pushf
xchg
hlt
mov
xchg
sbb
or
add
lahf
ret
lock
cmp
dec
adc
aaa
jecxz
cmpsb
xor
sub
lds
test
ss
stos
add
js
insb
adc
push
mov
in
xchg
andb
mov
or
mov
fcomi
mov
jmp
sbb
cmp
mov
xchg
and
icebp
mov
lret
ret
fidivrl
fcmovnb
cmpsl
rcrl
dec
addr16
or
push
push
cmp
jp
mov
mov
jae
mov
test
repnz
div
popf
dec
jmp
xchg
in
sarl
insb
jns
jmp
fs
clc
push
movsl
iret
ss
pop
icebp
pop
pop
in
jle
ret
pop
jp
sbb
mov
or
stos
adc
and
int
add
push
in
add
dec
stos
loopne
loop
add
xor
pop
movsb
or
mov
mov
pop
scas
sbb
nop
sbb
jp
ficoml
es
enter
xor
fistps
testl
in
push
mov
xor
cmp
rolb
mov
das
enter
js
outsb
cmpsb
xor
fucomip
xlat
mov
sahf
sub
clc
pusha
adc
cltd
loopne
mov
dec
mov
insb
dec
stc
adc
jne
scas
sbb
or
jmp
daa
dec
daa
clc
push
push
ljmp
sbb
in
enter
test
lods
xchg
std
cli
cmp
sub
cmpsb
pop
scas
sbb
test
sar
jb
roll
push
push
xor
cmp
addb
push
mov
jb
pop
mov
push
pop
pop
sti
cld
mov
mov
rcl
rclb
ret
je
insb
sub
push
mov
fisubs
mov
ja
nop
scas
pop
or
subl
daa
lahf
fsubs
xchg
sbb
aam
icebp
cld
jecxz
lods
dec
lea
in
mov
sub
mov
and
cmp
stos
jb
mov
adc
mov
into
sarl
xchg
dec
cld
out
inc
adc
sti
test
testl
sbbl
mov
sti
insb
jmp
and
sub
loop
jle
fisubl
sub
shl
shl
mov
inc
lret
xchg
out
xchg
cmp
aam
lods
rol
mov
xchg
out
sub
sbb
ds
ljmp
cmpsb
dec
jb
adc
fldcw
sub
loopne
inc
and
movsl
jmp
or
jg
add
dec
inc
test
movsl
gs
test
xor
in
lods
xchg
xor
or
test
mov
or
ss
adc
stos
xor
insl
push
add
sbb
dec
cmovns
add
dec
push
cmp
stc
sbb
imul
leave
inc
popf
fs
fidivrs
cmpsb
insb
mov
push
xchg
jae
std
jmp
sahf
clc
and
sub
andl
xor
icebp
adc
xchg
rcrb
push
xor
cmovnp
push
xor
mov
and
push
dec
push
sbb
push
xchg
push
js
dec
cmp
fildll
ljmp
mov
testb
inc
pop
mov
arpl
mov
lods
out
ficoms
and
mov
test
pop
in
lea
and
js
subb
shlb
adcl
das
inc
and
sub
int
paddb
sub
enter
or
xchg
fdivl
aam
adcb
cmp
lcall
sub
mov
test
sub
add
into
sbb
cmpsb
in
xor
jge
lcall
daa
nop
and
mov
ss
mov
sub
mov
mov
xchg
xor
dec
ror
cltd
and
dec
inc
xor
rolb
dec
idivb
ret
sbb
pusha
fistpll
leave
fnstenv
xchg
sbb
int3
fidivs
loopne
vphaddwd
sub
out
outsl
into
mov
clc
mov
cmp
cli
scas
test
jns
je
adc
jmp
xor
pop
pop
sub
mov
fdivs
lds
and
dec
or
cwtl
xchg
and
sti
aam
add
adc
stos
gs
jns
aad
ja
hlt
pop
sbb
adc
sub
push
sbb
adc
jbe
add
imul
xchg
scas
ffreep
stc
push
mov
lds
rcr
pop
adc
icebp
mov
test
lock
inc
cli
ss
ja
add
add
repnz
out
sub
das
jmp
inc
sub
stc
jle
mov
scas
test
sbb
add
mov
daa
imulb
call
dec
dec
adc
sub
sbb
jp
stc
jae
clc
pop
daa
ds
sub
shlb
ds
or
lret
lahf
mov
dec
mov
pop
icebp
and
pop
sub
push
addr16
xor
sub
push
pop
lods
jmp
xchg
lcall
aaa
jg
test
push
or
sub
aaa
adc
add
xchg
jnp
adc
or
jle
mov
jg
hlt
add
fs
outsb
pop
das
jo
fwait
or
mov
mov
mov
mov
loopne
popa
mov
add
shrl
push
mov
dec
adc
notl
push
ficoms
sbb
mov
faddp
inc
cmpsl
fnstcw
jl
scas
push
cmp
push
fptan
arpl
scas
adc
push
xchg
notl
xor
clc
decl
movsl
mov
mov
cld
andl
mov
sbb
cmc
mov
and
jecxz
shlb
xorl
ror
repz
iret
cmp
imul
dec
mov
mov
aad
dec
mov
leave
inc
int
pop
movsl
shll
in
cmpsb
xchg
pop
mov
pop
push
call
shll
mov
push
cmp
rorb
adc
push
mov
mov
cmp
outsl
stc
mov
inc
dec
hlt
iret
mov
insl
push
outsl
lcall
shll
dec
ror
xchg
test
aad
sbb
inc
loope
sahf
jp
pushf
and
xor
jbe
add
jb
imul
into
lods
call
mov
push
dec
sbb
jae
in
lods
rcrb
or
cmpsl
filds
jb
mov
xor
jns
mov
pop
divps
into
in
repnz
lea
jbe
xorl
in
hlt
movsl
sahf
push
cld
fmulp
push
cmp
adc
dec
cmp
push
ds
arpl
adc
jmp
mov
lret
fistps
popf
mov
inc
jg
in
sbb
cmp
adc
mov
inc
inc
cmp
xchg
cld
xor
push
adc
addr16
add
xor
insb
ss
xor
test
push
mov
inc
popf
xchg
lahf
add
outsl
inc
cld
fstpt
mov
push
xchg
test
cwtl
pop
stc
outsl
adc
push
xlat
mov
xchg
sbb
sti
movsb
shlb
inc
icebp
scas
es
or
cmp
mov
sub
es
rcl
out
jp
add
into
es
les
pusha
faddl
enter
pop
xor
enter
aas
sbbl
xor
or
mov
ja
pop
fdivl
xor
xor
test
cmp
lret
or
sub
lods
dec
dec
movsl
fcoml
dec
dec
sub
xchg
adc
mov
test
ljmp
maskmovq
negl
mov
in
in
xchg
enter
hlt
insb
ret
adc
xchg
add
push
nop
cmc
mov
jb
push
into
popf
loopne
push
lds
or
adc
rolb
out
push
add
jg
xchg
ja
or
test
dec
cli
testb
mov
ret
movsl
movsb
push
loopne
mov
push
loope
sar
lds
inc
or
pop
outsb
jg
mov
out
pop
mov
adc
dec
push
cwtl
mov
cmc
mov
mov
icebp
cmp
push
dec
aas
scas
std
popf
cmp
sti
ja
int
mov
cmp
insl
jmp
or
adc
scas
sahf
iret
xor
aam
lods
pop
dec
in
rcl
mov
inc
cs
sbb
scas
inc
popa
dec
xchg
aas
add
xchg
pop
mov
out
dec
aaa
frstor
jmp
xor
xchg
pop
inc
mov
in
sarl
pop
out
mov
repnz
ja
mov
mov
push
push
mov
test
mov
in
push
fcomp
and
lea
stc
or
sub
pop
add
int
mov
pop
fdivs
out
data16
nop
cli
lods
pop
xchg
stos
in
movsb
mov
mov
add
out
mov
repnz
lea
pusha
mov
push
gs
xor
leave
cmpsb
and
mov
xorl
in
sti
outsl
leave
inc
jns
dec
es
xor
and
or
pusha
int3
js
add
rclb
sub
mov
hlt
pop
sub
fidivrs
pop
push
popa
enter
jb
push
push
fldln2
test
in
adc
shrb
adc
cltd
aad
sub
in
xor
sahf
mov
jb
stc
imulb
fcos
xor
xchg
aad
push
out
push
mov
bound
jmp
xchg
mov
hlt
inc
xchg
dec
les
ret
popa
shlb
hlt
dec
jo
jp
out
rcll
inc
push
stos
and
test
cmpxchg
and
xlat
cmp
aaa
xchg
xchg
gs
sbb
push
int3
xlat
mov
push
clc
or
or
iret
test
clc
xlat
mov
push
sbb
or
and
cli
jne
ret
mov
int3
loopne
mov
lcall
imulb
neg
loop
rcr
sub
add
xchg
in
xchg
out
lea
cmc
je
lretw
push
cltd
rclb
add
lds
dec
xchg
add
and
or
test
les
xchg
rcrb
enter
or
ds
push
dec
mov
and
lods
push
mov
mov
mov
lret
rorb
js
xor
das
xor
xor
mov
xor
insb
jnp
adc
jp
daa
aas
lret
inc
repnz
fbstp
and
in
daa
xor
add
dec
adc
aaa
loope
pop
and
inc
bound
jmp
pop
out
jbe
ds
or
and
movsb
out
in
push
mov
test
sbb
xchg
ljmp
dec
add
xchg
test
imulb
mov
inc
jle
mov
ss
lods
aad
jno
push
jns
mov
or
jae
sarl
and
enter
xchg
fwait
inc
inc
jne
push
adc
cmp
das
mov
fidivs
lock
lahf
lret
aas
pop
pop
ja
sarb
stc
inc
lods
fnstsw
imul
push
mov
xor
psrld
push
lahf
lret
clc
xor
jno
decb
jle
adc
push
cmpsb
adc
mov
lret
hlt
mov
lea
mov
sbb
loop
push
sti
mov
mov
fcompl
pop
pop
push
xchg
loope
or
add
inc
push
movaps
test
jne
inc
cmp
fildll
pop
enter
push
cmp
xchg
push
sbbl
ds
add
lea
clc
out
adc
mov
mov
pop
ds
xor
add
cmp
mov
leave
mov
add
out
rcrl
mov
rol
pushf
or
aaa
std
or
addr16
jae
push
es
lods
push
jl
into
jg
shlb
es
inc
adc
xchg
cmp
enter
and
es
scas
adc
inc
sbb
mov
pop
push
xchg
lahf
out
jo
not
mov
fnsave
rorb
ja
shlb
pop
xor
pop
in
dec
dec
jae
rcr
lret
xor
mov
jnp
movl
test
orb
xchg
push
popfw
ret
popf
insb
insl
jp
repz
icebp
shlb
ret
push
ja
and
fimuls
xchg
out
mov
leave
repz
cmpsl
pop
sub
sub
mov
pushf
xor
jns
pop
pop
sarl
andl
gs
add
imul
test
pusha
lret
sbb
or
fisttps
stos
cwtl
and
mov
and
leave
xchg
aaa
sub
inc
fwait
mov
pop
sbb
fildll
cs
push
aaa
loop
jle
inc
lahf
mov
pop
lock
sar
scas
repz
xor
fldt
mov
xor
aaa
add
mov
push
movsl
and
jmp
pop
jg
in
xlat
push
fstps
out
into
scas
mov
ds
ss
or
mov
mov
or
punpckhbw
loope
ss
movsl
jecxz
adcl
pop
pop
jl
and
mov
loop
and
mov
xor
xchg
xor
pop
jae
add
xchg
pop
pop
insl
dec
pushf
sbb
jnp
incb
jbe
jbe
stc
popa
mov
cmp
dec
dec
aaa
js
inc
cs
je
rcrl
jns
mov
adc
cltd
lahf
rcr
fiaddl
cld
fdivr
mov
fnstsw
mov
loope
js
dec
je
adc
addb
test
scas
stc
es
jmp
fstsw
and
outsl
mov
add
out
xchg
jp
nop
mov
push
adc
jecxz
rcll
mov
add
inc
jmp
mov
repz
sbb
push
mov
sbb
enter
dec
lret
fmulp
mov
xor
push
cmp
sbb
jle
jmp
inc
mov
sbb
scas
bound
cmc
mov
lret
mov
idivl
stos
dec
roll
repz
repnz
adc
and
cltd
pop
push
cmp
int3
dec
daa
bound
dec
and
adc
or
push
jle
popf
sub
mov
jne
pop
outsb
xchg
xchg
and
xor
xchg
push
iret
stos
jns
test
cmp
je
leave
daa
xchg
in
mov
ja
xchg
popf
stos
sbb
lock
loopne
test
lahf
ljmp
mov
vandpd
call
mov
mov
mov
lods
lcall
std
clc
mov
stc
iret
ds
cmpsb
jae
xchg
and
jmp
popa
xor
cmc
mov
punpckhwd
outsl
shrb
or
inc
cmpsb
adc
inc
bound
adc
icebp
into
pop
lret
aas
ret
push
sbb
inc
sbb
jl
movsb
imul
ja
out
adc
repnz
fwait
adc
sbb
pop
mov
hlt
jne
imul
mov
adc
mov
pop
adc
out
or
jge
mov
inc
clc
cmc
adc
mov
test
jmp
addr16
jns
enter
shrl
push
push
outsl
mov
sbb
icebp
xor
dec
lea
fdivrs
jb
shll
daa
xlat
dec
int
xchg
adcb
sub
neg
and
into
data16
cmpsb
xchg
roll
sub
adc
fwait
mov
or
jo
lods
sbb
add
mov
fnstenv
and
pop
push
subl
dec
jmp
mov
adc
js
fs
mov
and
sbb
jo
push
adc
lcall
in
xor
cmp
push
sub
push
mov
adc
and
shlb
mov
fdivr
adc
shlb
shll
addr16
cmc
addr16
aas
loopne
ljmp
dec
cmp
dec
aad
sar
or
dec
inc
fistpl
es
ficompl
ja
sbb
mov
mov
jge
stos
mov
pusha
out
sub
data16
mov
and
xor
lock
push
scas
imul
mov
test
aaa
sbb
decb
jo
mov
outsb
ljmp
data16
or
std
shll
insb
popf
jne
xchg
aaa
sbb
jnp
mov
je
jmp
nop
lret
rcrl
mov
xchg
fs
mov
popf
xchg
push
out
enter
dec
adc
insb
xchg
clc
sbb
xor
sbb
cwtl
dec
repnz
push
outsl
xor
aas
dec
in
inc
pop
sub
mov
mov
or
lock
pop
adc
or
cmpl
mov
and
loopne
pop
push
lea
iret
repnz
mov
fst
push
pop
in
dec
cmp
test
add
sahf
dec
iret
push
popf
in
or
and
add
add
xchg
xchg
mov
mov
or
xchg
sbb
jne
sub
jge
les
or
and
xor
outsl
fbld
mov
jae
je
fdivrs
mov
mov
pop
xchg
fstpt
sub
cmp
add
ljmp
pop
repnz
fucom
jmp
push
jge
test
sub
cs
aad
loopne
dec
mov
movsl
in
pop
jle
ret
mov
loope
dec
repz
xchg
pop
lcall
fadds
add
cmp
push
fisubl
inc
or
mov
add
lods
mov
das
jnp
push
jge
ljmp
sub
add
jmp
jge
shll
and
ds
push
pop
inc
out
inc
cmc
dec
dec
out
push
incb
out
fsubrs
jb
pop
jl
and
or
mov
dec
lods
xchg
idivb
clc
xor
adc
mov
xor
je
mov
sbb
dec
xchg
adc
cmp
sbb
push
jmp
ss
insl
lahf
out
popf
std
js
stc
ret
and
xchg
sahf
out
sbbl
out
or
clc
fwait
shlb
stos
test
test
les
fisubs
sbb
in
cli
mov
mov
mov
dec
sbb
sahf
outsl
repz
adcl
pop
push
cmpsb
adcb
cmp
aas
outsl
inc
or
push
shrb
xor
push
sbb
dec
fwait
loopne
in
arpl
cmc
mov
shlb
push
push
idiv
mov
icebp
dec
xlat
adc
cmpb
sti
mov
lret
pop
aad
pop
shl
xchg
in
push
xor
mov
sub
fistpll
je
pop
push
mov
mov
mov
fldcw
dec
inc
dec
sbb
push
sbb
aad
pop
xor
ret
dec
shlb
jbe
sbb
mov
pop
push
stos
push
dec
pop
in
push
cltd
xor
sbb
mov
jg
leave
add
into
out
mov
cmp
xchg
xchg
fcmovnbe
pop
cmpsb
or
outsb
pop
fs
mov
into
cmp
aad
je
imul
jle
scas
sbbb
jl
shrb
cli
icebp
mov
leave
push
stc
xchg
cs
xchg
sub
jge
dec
and
outsl
and
push
xlat
mov
xlat
and
push
mov
das
pop
push
sub
mov
xlat
pop
mov
and
pop
test
aad
adc
loop
xor
inc
mov
aam
loopne
test
sbb
sub
jge
sub
dec
adc
adc
pushf
mov
inc
repz
mov
xor
ds
sti
frstor
jno
in
dec
gs
push
jno
les
jp
test
add
push
test
mov
jge
and
jp
pop
lret
cmp
xchg
xor
fsubl
aaa
cmp
sub
aaa
popl
mov
sarl
adc
repz
xchg
xchg
out
add
mov
inc
and
scas
jg
and
stc
mov
pop
dec
xor
ret
xchg
mov
pop
outsl
rcll
enter
add
mov
lock
mov
push
imul
cwtl
fsubrp
sub
push
pop
sbb
ds
rcll
test
rcr
push
jno
add
mov
jg
push
inc
cld
testl
andb
out
arpl
cmpsb
fcompl
fsubs
cli
in
lods
jp
aas
add
dec
cmp
adc
jmp
and
test
dec
xchg
cmpsl
mov
pop
inc
enter
mov
sbb
rcll
std
and
pop
cs
and
pop
jb
cmp
mov
xchg
fcoms
scas
mov
int3
je
sub
jb
and
xchg
mov
inc
enter
dec
sbb
cwtl
mov
xlat
icebp
xchg
pop
mov
cmp
fbld
aaa
pop
pushl
mov
repnz
push
gs
jo
lock
int
add
jno
and
mov
fsubrs
xor
xor
mov
xchg
push
add
push
in
dec
div
jmpw
stos
push
pop
sub
cmp
hlt
inc
call
scas
xchg
imulb
data16
or
stos
stc
int
mov
cmp
iret
add
sbb
jne
sti
gs
cmp
pop
lret
add
add
xchg
cmp
xor
mov
gs
les
sti
into
inc
inc
mov
fcomip
xchg
imulb
mov
dec
iret
mov
aas
mov
icebp
in
stc
lock
mov
inc
or
mov
scas
push
aaa
jmp
adc
addr16
adc
adc
mov
sbb
andl
mov
bound
int
nop
xlat
enter
arpl
sub
sub
xor
mov
or
imul
cmp
fiaddl
pop
aam
clc
cmp
jmp
mov
sub
gs
pop
dec
or
aaa
pop
pop
ret
mov
repz
fisubl
lret
std
mov
pop
sub
and
imul
sbb
enter
cmp
movsl
mov
ljmp
jne
test
lods
and
add
pusha
mov
popl
fwait
movsb
fldt
add
pusha
adc
inc
out
xchg
cmpsb
sti
aam
test
jbe
outsl
cmpsl
out
imul
mov
loopne
mov
fistps
xlat
push
or
sbb
shll
cmpsb
scas
xchg
leave
xlat
call
mov
test
cli
lea
test
mov
or
add
cmp
je
add
arpl
lods
or
xor
xor
xchg
into
pop
testl
hlt
adc
jmp
inc
mull
push
in
in
cmc
and
mov
add
hlt
shlb
add
mov
dec
or
sub
shl
loope
stos
xchg
jecxz
mov
ret
mov
xchg
cmpsb
adc
or
and
inc
xor
lock
xchg
test
les
xor
xor
shll
adc
clc
stos
add
test
add
add
daa
mov
push
xor
dec
push
jecxz
idivl
pop
and
jmp
adc
push
dec
in
sbb
add
in
nop
sbbb
pop
andl
adc
cmp
lock
fs
wrmsr
in
pop
pop
add
push
inc
push
push
pop
mov
push
and
mov
mov
push
mov
dec
sub
enter
add
sbb
mov
mov
fs
jno
movhps
cmp
pop
out
aas
ror
scas
shrl
sahf
into
testl
in
inc
sbb
push
xchg
push
idiv
jecxz
insb
add
rclb
outsl
insl
mov
xor
mov
nop
ss
pop
inc
test
dec
fildl
pusha
sub
popf
es
int
out
hlt
xchg
dec
enter
iret
enter
mov
pop
out
insb
jne
clc
dec
mov
mov
mov
and
push
popf
pushf
xor
pop
test
sahf
xlat
or
xchg
xchg
std
pop
decb
push
jns
push
into
lods
loop
push
pop
cmc
pop
icebp
pop
cmp
inc
sub
les
cmpsb
xchg
addl
fdivl
push
sub
addl
test
cmc
packuswb
xchg
inc
jno
and
and
push
jge
addl
shll
cmpsb
push
repz
int
scas
sti
pop
pop
lods
and
fcmove
or
jb
mov
mov
pop
xchg
movsb
xchg
xchg
xlat
rorb
mov
jno
lret
jecxz
push
out
sti
xor
mov
and
shlb
lret
jb
test
subl
push
pop
cs
adc
ss
adc
pop
adcl
xchg
call
push
push
or
inc
jbe
pushf
out
imul
sbb
and
aam
push
outsl
xchg
jns
and
jge
mov
add
pop
cmpsl
sbb
pop
push
lods
cmc
xchg
xchg
sbb
stos
pop
cmp
jp
xchg
je
pop
sbb
inc
lods
repz
outsb
out
rol
add
and
imul
inc
dec
mov
movsl
insb
test
add
jo
or
mov
sbb
xor
lds
mov
outsb
call
pushf
in
fdivl
or
inc
mov
jp
adc
pop
mov
and
add
xor
cmp
pop
iret
movsb
sub
mov
cmp
sbb
leave
cmp
std
mov
or
shl
mul
xor
xor
fcompl
fdivl
mov
gs
add
rcll
bound
repnz
add
dec
les
sub
call
ret
bound
ret
test
jbe
je
cmp
lahf
lret
in
subl
xchg
mov
cmp
ja
sub
icebp
cld
imul
jge
cmpsl
sbb
push
push
jae
data16
js
cld
push
mov
inc
cltd
sti
push
cmpsb
mov
adc
mov
mov
dec
not
fmull
push
fldl
insb
mov
push
movsl
sbb
cmp
adc
jmp
rol
scas
adc
dec
jns
pop
push
xchg
mov
rcrb
or
cwtl
fisubl
push
fwait
adc
out
xchg
and
xchg
in
cmpb
push
or
xor
jne
mov
icebp
and
cld
fwait
mov
jae
mov
mov
pop
rcll
ds
sub
jbe
outsb
les
rcrb
mov
add
insb
jo
test
sbb
adc
push
arpl
xor
lds
repnz
xchg
pushf
test
icebp
xor
fsts
jns
jecxz
sub
fadd
or
repz
push
sub
test
addr16
shll
add
rorb
jecxz
pop
fsubrl
fidivrs
out
popf
mov
adc
sub
xor
cwtl
stos
mov
xorl
packuswb
addb
jne
mov
jl
xor
bound
inc
xchg
mov
pop
mov
mov
int
mov
ljmp
es
mov
call
daa
cmp
in
insb
or
push
mov
sub
rorl
aaa
and
and
fstpt
xor
mov
push
bound
imul
addb
int
pop
dec
pop
cmpl
shll
js
xchg
push
sbb
ss
lods
std
jp
xorl
jae
hlt
das
int3
dec
popa
jge
mov
inc
xchg
out
stos
jns
jmp
jno
adc
xchg
sbb
mov
pop
xlat
mov
icebp
enter
push
insb
shll
and
or
add
out
dec
sub
stos
pushf
sbb
dec
jb
push
mov
adc
aad
insb
add
push
or
pop
es
pop
cmp
jno
lea
xor
jne
js
fldl
aaa
sbb
or
xchg
or
add
xor
cs
sub
stos
test
jp
rcr
jle
mov
pop
subb
jl
or
imul
mov
jbe
mov
lock
mov
ljmp
fmull
lcall
jnp
inc
inc
movsl
pop
out
test
xchg
cmpsl
ret
test
test
fiadds
lcall
out
lods
lock
call
pop
call
inc
mov
lock
mov
pop
pop
shll
jp
sti
adc
jg
push
and
xor
shll
pop
inc
in
bound
adc
cmp
out
mov
insl
mov
out
xor
pop
pop
xchg
das
loope
popa
xchg
iret
popf
push
and
jp
in
xchg
xor
lock
cli
mov
push
inc
pop
jb
cmc
cmc
pop
push
add
popa
test
out
roll
repnz
jae
jl
xor
or
mov
aaa
je
or
dec
rclb
mov
in
xchg
test
xor
stos
std
adc
mov
shll
and
push
sbb
sbb
mov
inc
sbb
adc
dec
xchg
sti
es
jo
call
stos
je
dec
sbb
das
xlat
mov
imul
addr16
jnp
ss
lods
sbb
sub
mov
nop
jp
je
xchg
into
subl
xchg
xor
pop
and
xlat
dec
add
push
xorb
push
cld
jbe
cmp
xor
lds
out
into
cmpsl
pop
cmp
movsl
sti
das
push
add
pop
arpl
out
es
jbe
sti
mov
gs
push
pop
lahf
test
push
dec
jp
xchg
icebp
mov
cs
mov
pop
pop
cmpsb
fs
jne
pop
popf
jbe
mov
xchg
xor
add
in
js
lods
aas
inc
fidivs
cwtl
xor
fbstp
fdivrp
repnz
lea
repnz
dec
inc
push
sahf
dec
sub
pop
push
cmp
mov
ret
ret
les
jno
or
pop
in
mov
xor
out
lahf
add
or
mov
out
test
jmp
cli
sbb
inc
in
and
inc
add
jle
mov
pop
icebp
imul
iret
adc
dec
cli
dec
mulb
scas
jns
lods
or
ret
leave
dec
ret
inc
shll
stos
mov
loop
and
jmp
add
adc
xchg
out
add
xchg
or
rcrb
aaa
insl
neg
scas
pushf
iret
and
xor
push
jb
clc
aaa
xorl
cwtl
mov
dec
ss
jbe
xorb
push
push
xchg
mov
ja
pop
int
jo
mov
or
mov
dec
xchg
and
out
arpl
scas
mov
jns
cmc
lret
mov
in
idivb
vlddqu
mov
sub
iret
call
cmp
cmp
call
push
mov
mov
adc
insb
mov
mov
cmp
inc
or
stc
pop
sub
mov
xor
jge
push
out
outsl
adc
xor
cmp
stc
es
mov
pop
lods
iret
jge
xchg
ja
in
lea
mov
loopew
jg
test
dec
xor
jns
sbb
andb
inc
dec
mov
fcompl
sub
cli
xlat
loope
fmull
imul
pop
in
and
or
jle
add
inc
pop
int3
nop
mov
jnp
popa
rol
lahf
inc
pop
dec
inc
xchg
jecxz
push
adc
fdivrp
enter
cmp
test
push
sbbb
xor
aas
jp
dec
rcl
movsb
or
fisttpl
lds
or
mull
sub
decl
mov
not
loope
xor
jge
loop
or
sbb
mov
inc
fdivl
pop
push
iret
insl
sub
out
mov
sub
cld
sub
jno
nop
add
xor
fcomp
xlat
mov
jne
lods
ret
xchg
pop
fstps
add
into
loop
sub
pop
jmp
sti
add
pushf
mov
or
or
adc
bound
or
fbld
cmp
pushf
mov
xor
decl
rorb
lods
and
or
mov
fldcw
push
push
inc
jnp
xchg
loopne
sub
inc
add
int
es
cld
js
hlt
cmpsb
in
mov
cmpsl
xchg
pop
aad
pushf
cmpsl
cwtl
mov
cmp
test
add
xor
cmc
sbb
mov
ja
aas
shrl
inc
sbb
mov
inc
pop
out
xchg
cwtl
sahf
aam
es
xorl
iret
data16
jg
mov
lahf
clc
cmp
sbb
test
mov
pop
cmp
movsl
push
sbb
cmp
lock
je
test
jbe
or
nop
dec
adc
out
mov
add
ljmp
or
pop
lds
fmuls
xor
xchg
cmc
frstor
jb
mov
mov
pop
cltd
sub
ljmp
inc
je
sub
fidivs
popf
cmc
adc
xchg
pusha
es
jl
inc
adc
push
inc
jno
fstpl
jno
sarb
sbb
mov
cmpsb
pop
xor
cld
pop
xchg
loop
dec
dec
jbe
stos
mulb
cwtl
add
insb
xchg
cmpsb
enter
sub
dec
mov
or
mov
insl
xor
and
push
cmp
ret
xchg
lods
aas
nop
dec
notb
xchg
jno
cmp
test
xchg
add
movsl
rorb
cmc
div
out
iret
hlt
daa
out
call
lcall
andb
xor
adcl
fs
push
test
fucomip
inc
sub
in
filds
sti
aas
lds
fwait
cmp
dec
aam
push
xor
push
add
sbb
cmpsb
int3
das
inc
inc
sub
std
xchg
decl
jmp
popf
pop
pop
pop
mov
into
mov
inc
fsts
and
orb
andb
test
leave
ret
ljmp
or
int
std
cli
ss
popf
test
enter
test
jnp
scas
pushf
cmc
repz
cmp
daa
fstps
fnstenv
cmpsl
jb
pop
loop
popf
jns
jne
sbb
xlat
cmpb
inc
mov
dec
sbb
xchg
add
flds
scas
push
lods
or
movsl
cmp
je
lods
loopne
enter
aam
pop
inc
or
push
jecxz
mov
jmp
insb
mov
ja
adc
mov
sbb
in
leave
cmp
insl
mov
pusha
sbb
adc
fwait
lcall
stc
call
dec
lea
xor
pop
sbb
jmp
adc
xchg
xorl
mov
daa
or
in
inc
cli
inc
xor
mov
xor
int3
jnp
dec
dec
inc
leave
je
sub
popa
mov
mov
push
movsl
jle
out
ret
sbb
mov
sahf
mov
dec
dec
cmp
push
cmp
adc
stos
ljmp
push
hlt
fisubrl
movsb
cmpb
and
out
cmc
dec
stc
xor
loope
mov
data16
lahf
sarl
das
loop
push
jns
cmp
outsb
xor
push
push
pop
aaa
dec
aas
pusha
push
negb
sub
fs
sbb
in
data16
roll
cmp
pop
inc
lods
in
fs
jno
pop
sub
loope
in
stc
scas
lds
xor
test
sbb
loop
iret
out
jns
clc
mov
data16
movsb
ret
mov
insl
out
ja
xchg
cmc
adc
mov
repz
lods
push
lds
adc
sti
aas
sub
test
jp
push
jae
add
in
mov
test
loope
jae
scas
pop
adc
shr
push
out
popf
fisubrl
fsubrl
fwait
cld
lahf
ja
jmp
pusha
jmp
xchg
pop
sbb
cmp
icebp
pop
sub
jb
inc
push
sbb
aam
or
scas
into
inc
push
cmpsl
jae
cmp
lea
out
mov
out
orb
divl
xchg
dec
shl
mov
nop
arpl
dec
mov
outsb
fwait
mov
jmp
jno
adc
push
test
mov
inc
arpl
pop
hlt
push
outsl
mov
pop
test
or
lds
shrb
out
mov
jae
jp
fldl
call
mov
dec
pop
enter
jecxz
aaa
fisttpll
pusha
repnz
idiv
les
push
les
or
les
cwtl
js
pop
push
mov
xchg
dec
sub
sub
fwait
xchg
adc
out
imul
push
popf
call
cmc
dec
and
lea
cmpsl
sbb
dec
call
pop
dec
and
jbe
push
cwtl
inc
mov
movsl
stos
stos
and
sub
xchg
xor
out
jecxz
sbb
sbbb
pop
mov
shrb
and
mov
pop
lods
push
scas
cmp
repz
leave
outsl
add
mov
inc
add
fwait
lret
fdivrs
movsb
xor
dec
adc
or
mov
lods
fmull
xor
cmp
addb
push
pop
rcrl
daa
xchg
daa
outsl
push
mov
ds
mov
add
stos
xor
aaa
mov
inc
and
jnp
sahf
scas
add
mov
aam
fmull
sub
ss
js
jae
fidivl
stos
mov
cmp
bound
push
ja
daa
lcall
inc
stos
xor
or
roll
mov
mov
push
xor
mov
sbb
adc
jne
test
mov
inc
mov
sbb
pop
xchg
jl
mov
xor
shrb
enter
filds
pop
mov
in
jp
jo
loopne
xchg
push
loopne
or
and
faddl
xor
enter
jnp
aam
jmp
or
and
adc
sub
test
ret
inc
rorb
scas
mov
adc
sbb
xor
pop
jl
nop
int
cmp
and
sbb
dec
dec
cs
jle
or
mov
hlt
sub
push
jle
cli
sub
aaa
jl
cmpsb
lock
mov
pop
mov
imul
lret
aam
inc
stos
add
movsb
jnp
cli
pop
mov
fidivs
les
pop
dec
mov
inc
outsl
cmp
jne
pop
and
and
xchg
in
lret
mov
andb
push
push
iret
scas
cli
lahf
lcall
or
or
hlt
or
cli
cmp
inc
xor
stc
lea
xchg
pop
mov
aam
inc
inc
adc
mov
ret
dec
rol
imul
jmp
push
sub
jmp
xchg
and
push
mov
fwait
jnp
sub
mov
les
aad
mov
imul
out
lret
cmpsb
sub
pop
out
sbb
das
mov
lea
jne
rcrl
in
push
rcll
mov
inc
mov
les
sbb
mov
adc
cmpsl
stc
jnp
jl
xor
xchg
clc
mov
or
stos
in
push
cmp
add
inc
stos
imul
inc
sbb
and
xchg
xor
cwtl
aas
scas
cmp
mov
bound
mov
jmp
fldenv
sahf
clc
mov
fisttpl
sub
loope
inc
popf
fucomi
jb
dec
sbb
repz
sbb
mov
ret
or
pop
push
mov
mov
mov
je
in
push
pop
mov
cmp
jg
sbb
add
jg
mov
rorl
xchg
mov
fst
mulps
push
add
dec
push
cmpsb
or
xor
jle
add
ret
dec
mov
das
cmp
mov
int
sbb
jmp
jb
scas
dec
aas
lods
inc
in
xchg
sbb
pop
sub
jge
mov
push
loope
push
je
adc
or
jl
cltd
dec
jl
adcb
cld
cmp
test
in
push
fcoms
es
andl
imul
mov
dec
add
scas
rcr
inc
lds
adc
xor
jecxz
xor
pop
and
push
pop
fidivs
ss
fs
fidivs
loop
aam
pop
mov
ret
loop
fwait
inc
pop
xchg
leave
sbb
xchg
daa
pop
pop
fsubrl
push
jne
sarb
int3
loopne
cmpsb
and
scas
lock
mov
or
mov
xchg
jg
or
fiadds
xchg
add
mov
popa
aam
sub
jns
enter
test
cmp
mov
add
add
dec
adc
imul
jnp
imul
hlt
out
testb
cmp
lea
push
jp
leave
lea
push
sub
pop
or
stos
leave
insl
inc
ja
sbb
pop
rcrl
mov
and
leave
imul
pop
enter
jo
cmovl
lds
push
or
xchg
push
orl
push
popf
mov
fistps
sar
jmp
mov
mov
in
dec
js
push
cmp
loopne
push
lret
repnz
loop
mov
repz
rclb
cmpsb
mov
stos
cli
in
outsl
shrl
mov
add
cmp
add
not
cmp
mov
jbe
mov
arpl
mov
cmpsl
and
and
das
or
add
mov
pop
jg
fcompl
sbb
pop
xorl
add
out
stos
xor
mov
pop
or
or
subb
out
mov
xor
sbb
loope
in
test
push
fucom
in
xor
jle
pushf
out
or
pop
jb
cmp
sub
mov
mov
jge
adc
xor
cmp
inc
lods
push
and
xchg
xor
stos
cmc
pop
iret
dec
or
ss
cld
aaa
or
arpl
imul
shr
pusha
or
clc
lahf
test
repz
out
lea
add
jecxz
test
xor
mov
mov
cmp
sbb
in
pop
dec
and
mov
inc
ror
sbb
shrb
or
dec
jl
sbb
mov
dec
and
mov
in
movsb
test
xchg
and
pop
leave
mov
pop
mov
cmp
fwait
leave
sarb
xchg
outsl
ds
das
adc
outsb
arpl
cltd
dec
loopne
xchg
adc
imul
les
adc
dec
sub
test
pop
dec
cltd
sbb
nop
or
push
aam
inc
aaa
vsqrtss
pop
and
or
pop
xor
xchg
hlt
fstpt
cs
je
sub
cmp
push
or
imul
testl
test
ficompl
aam
movl
pusha
repz
push
cs
push
dec
jmp
repnz
imul
pop
adc
insl
imul
sbb
push
xchg
inc
xor
push
inc
pop
test
clc
push
adc
sbb
pop
sbb
mov
and
aad
mov
psllw
dec
mov
sub
jmp
jbe
es
das
enter
aad
mov
clc
call
scas
stc
sarb
or
sub
clc
cmp
xor
lds
jge
call
mov
jnp
imul
adc
rorl
add
dec
cli
int3
div
and
icebp
loope
inc
lcall
addr16
add
rsm
mov
sub
imul
imul
les
pop
inc
cmpsb
push
aaa
and
cmpl
mov
out
lea
mov
hlt
inc
fldt
stos
jns
inc
jmp
jbe
fnstsw
and
cmp
movsb
out
cmp
insl
pop
fcom
inc
es
dec
and
ljmp
test
out
test
in
adc
inc
or
jp
sbb
lds
mov
es
xor
xchg
xchg
adc
jmp
lods
xchg
loop
mov
lahf
xchg
arpl
repz
push
lret
add
inc
inc
jae
xchg
clc
add
push
xor
insb
aas
and
in
cmpsl
xchg
lret
js
imul
and
jnp
xor
mov
push
mov
dec
adc
or
inc
jo
and
fs
push
stc
out
xor
nop
sbb
xchg
sbb
xchg
inc
jo
mov
mov
jo
clc
scas
or
pop
ss
cmp
inc
cmp
adc
lret
lea
filds
outsb
sbb
ret
fucomp
movl
cmp
fidivrl
pop
mov
dec
aam
or
mov
pushaw
inc
push
rclb
lcall
nop
mov
add
inc
dec
lret
dec
xchg
dec
sub
arpl
mov
js
test
mov
aam
xchg
xchg
or
pop
adc
ffreep
inc
pop
shlb
lea
das
loopne
pop
stos
adc
in
mov
outsl
je
in
sarb
or
shll
ljmp
cmp
mov
and
adcb
aam
dec
mov
pop
dec
test
dec
pop
mov
pop
jo
cld
pusha
push
cmp
jb
hlt
fisttpll
cmp
les
mov
jno
xchg
push
xor
jecxz
repz
test
sbb
arpl
add
mov
out
in
push
jecxz
lock
imulb
sub
repz
lock
jl
pop
sbb
leave
fisttpll
or
cmp
push
mov
flds
push
mov
roll
mov
sub
andl
fstps
xor
inc
daa
and
sbb
add
mov
shlb
nop
pop
inc
andb
cmp
popf
mov
sti
mov
push
lahf
and
je
or
and
push
adc
mov
add
fwait
in
outsb
and
fnsave
je
cmp
jmp
lock
scas
push
cs
mov
ret
or
mov
bound
in
in
push
loopne
call
mov
pusha
mov
mov
testl
adc
or
aam
xor
mov
sbb
jg
incl
cmp
mov
pop
bound
push
adc
rclb
lahf
push
shll
fmull
mov
mov
lcall
dec
push
insl
mov
insb
lock
cmpsl
into
rcll
das
out
rcr
lods
xchg
mov
hlt
pushf
test
dec
daa
sbb
jae
jmp
or
jl
movq
adc
adc
sbb
xchg
pop
lods
in
push
clc
mov
or
adc
arpl
jo
inc
push
mov
sbb
outsl
pop
hlt
enter
out
cltd
loop
cmc
mov
incb
aas
add
les
cmp
jp
jbe
repz
push
mov
cmp
cmp
icebp
jecxz
or
movsl
incl
jl
cmpsl
sbb
add
into
jg
cwtl
jae
in
stos
fstl
pop
push
subb
int
jbe
push
inc
pop
insb
cmp
lea
cwtl
dec
adc
sub
mov
xor
scas
ljmp
les
cmp
out
cmc
push
pop
push
xor
xor
xor
fwait
pushaw
mov
scas
loop
js
xor
jne
adc
add
jl
and
sbb
iret
pop
clc
mov
enter
mov
xor
mov
cmp
push
xor
mov
dec
push
lea
clc
neg
jne
out
xor
mov
data16
out
or
sub
popf
inc
lret
jnp
sbb
in
add
lret
aaa
pop
mov
xchg
jb
mov
icebp
adc
xor
icebp
or
ljmp
xchg
sti
into
mov
inc
cmp
jmp
add
lds
mov
mov
push
test
pop
pusha
inc
dec
cmp
pop
mov
clc
or
push
icebp
popf
sahf
and
sbb
rolb
cmp
push
mov
mov
jg
arpl
adc
repnz
mov
lock
test
inc
lret
cltd
xchg
mov
dec
or
mov
mov
push
in
cltd
lcall
cwtl
pushf
popf
les
test
or
nop
cli
outsl
sti
jle
sub
lds
loop
test
xor
sub
push
cmc
fiaddl
int3
gs
test
imul
and
ficoms
mov
imul
mov
lret
adcl
in
aad
fiaddl
test
inc
jl
dec
xor
mov
aaa
mov
in
sbb
aas
sub
test
loope
dec
stos
loop
push
int3
inc
xchg
lods
in
xchg
sub
test
popf
fistl
push
das
xchg
jae
shl
andl
mov
pop
pop
push
pop
imul
mov
fldcw
or
pop
jp
xchg
ret
ljmp
movsl
or
scas
or
test
jge
out
pop
mov
mov
adc
cmp
xlat
pop
jmp
pop
loopne
out
mov
jae
lds
dec
push
or
or
xchg
das
dec
sub
dec
mov
jmp
mov
dec
cmc
sub
cmpsl
mov
repz
lret
incb
es
or
cmpsb
pop
push
mov
mov
aaa
sbb
cs
arpl
ret
flds
xor
cmp
jg
ja
punpckhwd
rclb
addb
cs
pushf
out
out
inc
imul
sbb
xor
scas
ljmp
mov
or
imul
mov
inc
cltd
jle
in
lret
lret
test
xchg
outsl
and
jle
mov
stos
repz
jl
pop
in
cs
arpl
xor
mov
inc
ljmp
mov
lret
xchg
andl
stos
push
jno
fwait
or
lds
fs
jnp
xor
or
xchg
fcomps
icebp
arpl
sbb
xchg
jns
shrb
test
cmp
sbb
push
xchg
xor
popf
aad
sbb
mov
popa
and
xor
fsubl
xchg
add
adc
cmpsb
push
cmp
jecxz
inc
or
pop
add
xor
pop
popa
sbb
push
push
sub
test
and
jecxz
mov
xchg
pop
xchg
sbb
mov
sbb
sbb
adc
loope
sti
or
and
cmpb
in
add
pop
xor
pop
adc
pop
xchg
in
pop
in
fwait
ret
outsl
mov
mov
dec
idiv
jle
and
fucomip
ret
pop
mov
mov
lds
xchg
pop
adc
fwait
jge
xrelease
push
xor
scas
insb
and
adc
int
js
test
hlt
pop
enter
mov
and
cwtl
push
xor
and
mov
mov
lea
dec
mov
jo
cld
int3
test
roll
into
mov
fisttps
mov
and
nop
out
sbb
mov
xchg
pop
out
jge
loopne
xor
sub
les
ss
sarb
or
cmpb
sub
adc
pop
mov
dec
addb
outsl
push
out
and
ret
enter
jp
push
out
ss
popf
movsb
mov
jmp
loopne
xor
pop
push
pop
addl
and
adc
repz
xlat
pop
outsl
stc
sub
lahf
sti
ss
out
bound
jmp
inc
mov
mov
push
gs
dec
out
cmp
or
jmp
xchg
das
dec
cmp
call
add
je
out
jg
leave
mov
xchg
add
xor
jno
xchg
xchg
movsb
xor
cmp
inc
pusha
test
push
mov
mov
cmp
pop
inc
push
ret
icebp
je
dec
shrl
dec
call
sbb
scas
aas
jg,pn
sub
enter
add
aas
mov
pusha
int3
jno
sub
lds
xchg
cmc
pop
scas
mov
mov
cmp
inc
cld
inc
in
xor
inc
es
cmp
fcmovnb
sbb
jmp
mov
js
fsub
jno
sbbl
ret
aaa
or
xchg
inc
leave
xchg
adc
jg
jecxz
fwait
nop
sub
cltd
fwait
popf
dec
outsl
lret
aas
mov
pop
and
lcall
gs
imul
jne
fisttps
arpl
jge
dec
fbld
dec
mul
and
aam
add
lcall
xchg
aas
pop
xor
cmp
into
xor
and
adc
xor
rorb
mov
loopne
adc
or
pop
int
ljmp
inc
out
test
lods
jmp
and
dec
sub
xchg
cmp
mov
xor
icebp
mov
lock
cmp
mov
mov
mov
xor
stc
ret
mov
inc
mov
xchg
dec
pushf
mov
cmpsb
mov
out
xchg
lods
cmp
pusha
dec
dec
dec
aas
hlt
movsl
cmpl
fisttps
jg
cmp
cmpsl
mov
hlt
lret
mov
cltd
dec
inc
add
test
push
push
aad
jae
or
xor
xor
lret
int3
in
adc
cmc
ret
push
outsb
movsb
push
or
mov
and
fiadds
xchg
mov
xchg
pop
mov
aaa
xor
adc
mov
jle
jno
int3
mov
testb
pop
test
outsl
cmp
push
mov
jae
loope
inc
rcr
mov
xchg
sub
test
inc
lahf
jae
push
pop
cmp
icebp
dec
sub
lea
in
cmpsl
pop
out
fnstenv
sub
out
shll
pop
mov
sbb
fwait
sub
inc
or
inc
jns
or
int3
add
mov
xor
mov
xchg
inc
icebp
pusha
pop
fidivs
ror
ja
imulb
adc
mov
or
mov
cmp
dec
popf
jbe
jecxz
xchg
and
test
sarb
aaa
adc
mov
cwtl
imul
insb
cmp
xor
or
mov
cmp
clc
outsl
mov
repnz
add
dec
inc
out
test
lock
dec
cli
xchg
aas
pushf
fs
ficomps
lcall
rcll
mov
mov
mov
or
call
jns
sar
sbb
jbe
inc
mov
mov
inc
sbb
add
mov
fmul
pop
add
sbb
sbb
mov
movsl
pop
data16
inc
cmp
adc
cmc
lret
fnstenv
cmpsl
mov
test
pushf
repz
sbb
jbe
xor
in
std
fisttpl
mov
xchg
or
stc
and
popa
dec
out
adc
mov
sbb
out
xchg
pop
add
or
add
sti
fs
mov
out
arpl
test
xchg
dec
sub
ficoml
sbb
jge
adc
push
adc
gs
stos
addl
inc
xor
movsl
lock
popa
jae
arpl
fdiv
dec
aam
add
test
adc
cmp
sbb
cmc
pop
jl
jne
lock
into
int
movsl
clc
or
cmp
stos
aas
test
scas
insl
pop
pop
sarb
out
xchg
fdivs
sbb
fs
ret
stos
lret
xor
jle
popf
or
cld
dec
mov
add
add
jb
fbld
inc
or
shl
mov
sbb
pop
pop
cmp
mov
aaa
pop
mov
test
in
mov
repz
out
call
pop
outsl
add
mov
movsl
push
mov
and
jbe
sbb
cmp
idivl
pop
or
sub
insb
std
cmp
std
incl
cmpsl
push
shll
cld
xchg
filds
lcall
add
rcrl
insl
test
jge
mov
movsl
rcrb
dec
mov
dec
mov
mov
lret
jge
jno
mov
xchg
sub
nop
and
sbb
add
fs
mov
rclb
out
adc
mov
xchg
pop
cmpsb
cs
int3
out
fisubrl
jbe
pop
adc
addb
push
mov
add
mov
rcrb
mov
cwtl
fstp
push
lods
push
ss
or
xchg
adc
nop
pop
in
bound
pusha
push
dec
xor
or
cmp
mov
faddp
orl
sub
clc
mov
adcl
in
ss
jne
lods
xor
and
inc
xor
scas
adc
mov
mov
cltd
mov
lods
outsl
flds
add
jns
fldl
and
js
pop
test
rorb
in
jns
or
lret
lea
lea
outsl
in
inc
mov
jle
adc
sub
stos
fwait
inc
push
pop
cmpsb
push
and
push
popa
dec
cmp
add
popa
lret
fnstsw
pop
fsts
mov
hlt
fld
fmuls
mov
adc
add
inc
mov
xor
rcrb
hlt
push
pop
pop
push
shr
mov
das
sub
adc
cmp
inc
sub
jl
xchg
mov
push
push
sbb
ljmp
pop
cmp
push
dec
add
cmp
jmp
sahf
cmp
dec
iret
dec
adc
frstor
mov
sub
pop
fcomps
or
pop
dec
xchg
add
push
cmpb
cmp
lock
dec
out
xchg
ret
pusha
cmp
cmp
inc
std
sbb
xor
lods
pop
cld
pop
mov
jae
mov
mov
push
pushf
xchg
pextrw
mov
xchg
push
cli
test
aas
add
or
movsb
jmp
or
mov
mov
lahf
jl
ljmp
and
pop
sbb
and
ljmp
nop
mov
sbb
and
push
pop
jmp
dec
cmc
cmp
inc
shlb
cwtl
adc
enter
and
xchg
scas
jb
imul
pop
or
cmp
sub
repz
adc
sti
ret
jae
call
cmp
aas
xor
pop
rol
insl
sbb
les
dec
jae
mov
nop
int
xchg
add
cmp
push
arpl
sub
clc
dec
cs
out
cmp
insb
cmc
adcl
into
daa
mov
inc
push
adc
aas
jno
out
pop
in
jno
aam
xchg
mulb
mov
stos
mov
aad
test
push
popf
rcrl
jg
jae
popa
lock
call
dec
dec
and
push
adc
arpl
test
hlt
cmpl
push
fisubl
cltd
ds
movsb
dec
test
leave
sbb
aad
mov
mov
loopne
xchg
sub
mov
cmp
divb
popf
push
addr16
ror
arpl
xlat
mov
xor
cmpsb
stos
xlat
push
sahf
ja
mov
cmp
jle
sbb
add
push
mov
outsb
add
testb
loope
iret
cmc
loop
cli
mov
xor
sub
rorl
jbe
and
add
lods
inc
cmp
jg
movsl
jnp
imul
push
xchg
in
xchg
cs
movsb
data16
out
fwait
cs
aam
or
push
xor
xchg
call
push
js
sbb
xor
addl
and
xor
sbb
mov
push
and
jmp
insb
andl
shrl
cmc
ss
jecxz
repz
or
in
cmp
push
mov
push
hlt
sbb
mov
pop
jne
mov
aam
cmp
jp
xchg
mov
or
xchg
mov
mov
fwait
arpl
sbb
jg
arpl
push
loopne
sub
xchg
xlat
cmp
mov
ret
sarl
lods
int3
aad
adc
pop
dec
sbb
mov
cld
ss
mov
popa
mov
or
ds
mov
hlt
imul
test
push
test
xchg
cmp
xchg
and
jge
xchg
xor
scas
pusha
cwtl
test
inc
pop
stos
stc
xchg
fldcw
and
aas
push
cmp
test
sub
pop
jb
in
cmp
imul
mov
or
mov
rcll
test
cmpsl
xor
dec
ljmp
lds
lods
push
enter
mov
out
cmc
push
inc
inc
in
repz
ss
mov
stos
xchg
or
inc
scas
movsb
stos
cmp
xchg
fadd
mov
icebp
sbb
fistpll
push
push
add
je
push
in
cs
cwtl
lret
jno
jle
push
push
aaa
and
cmp
stc
or
mov
fidivs
or
fmuls
xlat
lock
adc
in
sar
test
out
mov
arpl
and
gs
clc
inc
pop
push
inc
dec
sub
xchg
sbb
xchg
in
mov
xchg
jecxz
jge
dec
ljmp
dec
inc
adc
or
data16
popf
sbb
jmp
mov
loopne
rcll
push
arpl
cmp
dec
sbb
scas
and
mov
pop
xchg
es
and
fsubs
mov
jns
xchg
adc
test
add
push
ds
stos
popf
insl
fsubl
inc
test
pop
xor
in
push
addl
ja
sahf
sbb
andnps
divl
xor
inc
sbb
and
cmp
mov
fstpt
insl
pusha
push
inc
ret
sbb
lods
stc
test
fucomp
aam
xor
stc
or
cld
add
jb
pop
jg
mov
cli
enter
pop
mov
xchg
and
mov
xchg
call
pop
mov
icebp
loopne
push
add
shrl
stos
xchg
sbb
pushfw
inc
cmp
in
and
push
ficoml
gs
mov
pop
fcoms
adc
jl
mov
cmp
mov
cli
fs
jg
pop
lcall
mov
sub
xor
push
movsl
push
jle
mov
arpl
add
cmc
jae
dec
xorl
dec
mov
mov
icebp
add
sbb
sub
cmp
and
xor
xlat
rol
lods
loop
mov
or
in
sbb
cli
adc
fs
int
push
sub
das
ljmpw
test
stc
cmp
insl
mov
repnz
cs
add
fistps
outsl
sub
adc
sbb
or
mov
sub
inc
gs
pop
in
repz
mov
dec
and
stc
adc
iret
add
std
xor
or
mov
xchg
inc
xchg
jne
dec
std
loope
scas
mov
iret
sbb
add
cwtl
shrl
imul
xchg
adc
add
xor
jmp
sub
arpl
jmp
jl
icebp
sbb
mov
testl
inc
icebp
and
aas
or
jb
jmp
ja
cmp
es
sar
mov
mov
sub
or
mov
sub
mov
or
pusha
jl
cwtl
test
movsl
fisubs
das
int3
sbb
jb
andb
sbb
push
out
inc
lods
repz
cmpsb
insb
fsubrs
and
outsl
sbb
cmp
lea
ds
pushf
xor
out
or
leave
dec
fldt
repnz
aas
push
loop
mov
shlb
imul
movsb
xor
mov
js
ficoml
cmp
or
shl
adc
push
pop
gs
sub
mov
fisttps
pop
mov
into
rorl
repnz
pop
ret
mov
in
pop
cltd
subps
xor
lock
jnp
add
pop
arpl
pop
lods
pop
scas
pusha
jae
dec
orb
push
not
push
jl
enter
and
sarb
jmp
mov
pop
andl
movsl
dec
mov
mov
inc
and
in
mov
popf
jle
ja
imul
sub
jle
xchg
fst
lret
jle
inc
in
sbb
inc
adc
in
inc
mov
fs
js
jnp
mov
push
or
loope
jecxz
ret
and
fmull
xchg
shrl
lret
dec
dec
sahf
dec
dec
jnp
mov
xchg
xchg
cwtl
clc
hlt
jle
add
movsl
in
sub
mov
push
ss
sbb
daa
pop
push
sub
sahf
into
push
push
jmp
dec
mov
insb
in
cli
ljmp
in
in
adc
pushf
popa
test
out
test
mov
pop
xchg
xchg
xor
out
enter
add
rcl
sub
enter
scas
adc
ss
xor
loop
mov
cld
xchg
lahf
scas
ljmp
jb
testb
addr16
mov
mov
sub
mov
jbe
sbb
in
jns
inc
xor
and
sub
leave
pop
sub
adc
cmpsb
inc
cli
mov
add
movsb
aam
clc
xchg
imul
jae
shl
into
lahf
cs
rol
push
mov
sub
aaa
repz
das
mov
fistpl
adc
ds
bound
lds
rcr
sbb
out
outsb
and
sbb
mov
lret
js
mov
inc
dec
and
xchg
mov
jae
cmp
cmp
push
notb
aaa
stos
jno
add
or
xor
push
pop
jmp
pushf
cld
movsl
sub
mov
aaa
rclb
stos
out
insb
or
mov
pop
leave
enter
scas
orb
xor
and
orl
hlt
cmp
and
mov
jb
mov
imul
inc
movsl
dec
mov
and
testb
into
xchg
sbb
dec
in
cs
sub
dec
jge
push
test
pop
icebp
inc
imul
push
pop
pop
mov
mov
insl
push
cltd
pop
inc
cwtl
ljmp
loopne,pn
cmpsl
jge
cmp
enter
mov
pop
mov
push
cmp
jg
add
mov
inc
popa
jmp
rorb
in
mov
xchg
jb,pn
in
bnd
cld
and
out
xchg
push
flds
into
lret
push
cmp
inc
sub
xchg
inc
xlat
jge
mov
pop
or
jo
push
sub
jbe
dec
loope
inc
sbb
xchg
add
int
lock
adc
data16
adc
fwait
and
xrelease
cmpsb
mov
or
xchg
sub
ret
sbb
dec
ljmp
fdivr
push
add
outsl
andb
inc
lods
nop
add
push
ljmp
insl
sub
mov
xchg
or
stos
scas
pop
dec
and
subb
push
mov
lret
dec
inc
std
lods
call
mov
cs
inc
jl
lret
divb
aad
cmc
aas
nop
push
pop
jns
out
mov
outsl
inc
lods
jo
or
roll
fidivs
aaa
les
mov
lret
adc
mov
popa
dec
mov
pop
pop
add
lods
mov
xchg
ja
sti
je
arpl
les
fs
push
scas
push
jnp
test
shrb
movsl
add
mov
jno
mov
test
mov
push
mov
cmp
push
xor
add
lods
lcall
out
jmp
inc
mov
mov
xchg
or
loop
fcompl
mov
mov
add
lock
mov
loope
ljmp
cmp
aad
ja
ja
cmp
adc
sub
xchg
mov
jmp
mov
aas
test
jne
push
cmpsl
pop
in
popa
or
jp
popa
cwtl
lods
insl
xchg
xchg
adc
or
jle
mov
movsl
cli
adc
je
popf
dec
and
adc
push
stos
cmp
dec
clc
mov
inc
icebp
rclb
jmp
popf
cwtl
cld
rcr
cmp
dec
xor
jae
lods
fsubrp
call
addr16
or
jns
movsl
xor
shll
adc
outsb
gs
push
int3
xchg
adc
ss
rolb
and
xchg
sbb
lock
addr16
fnclex
pop
pop
push
cmpsb
jecxz
adc
xchg
jl
mov
jne
mov
aas
cs
mov
popf
jecxz
adc
rorb
mov
sbb
rclb
call
inc
add
sti
fs
dec
add
or
sbb
adc
inc
mov
or
add
int3
fisubrs
mov
das
lods
cld
sahf
sbb
add
popf
pop
add
ret
inc
inc
mov
pop
xchg
xor
sar
inc
in
fldt
xchg
sbb
adc
pop
pop
or
gs
xor
jecxz,pt
pop
jbe
fsub
test
lock
repz
lods
addb
xor
mov
pop
dec
push
push
lods
test
cld
stos
and
inc
jne
test
jge
push
or
or
push
sbb
xchg
fsubrl
mov
mov
pop
cmpsb
iret
cmp
aas
out
ss
fcomip
push
xchg
in
cmp
push
std
mov
mov
jmp
cmp
push
fstpt
pop
sub
mov
adc
push
mul
inc
addr16
nop
orl
repz
xchg
ret
movsl
add
and
mov
sub
in
pop
jl
movl
mov
dec
jns
in
addb
lds
dec
insb
cld
mov
movsl
sbb
loopne
outsb
lds
ja
ret
xor
mov
mov
or
cmp
mov
dec
push
cmp
test
push
popa
std
js
mov
dec
imul
insl
stos
test
sbb
cmp
mov
xchg
scas
dec
add
mov
pop
jae
and
daa
int3
xchg
call
cmp
push
fildll
jl
sti
mov
les
lret
ficompl
mov
xor
dec
fs
xor
out
lds
cs
mov
add
or
add
push
or
push
mov
les
or
add
aas
xchg
add
cmp
mov
jle
aas
xchg
mov
je
jmp
cmp
loop
and
inc
je
jno
andb
adc
jle
repz
jns
jne
jecxz
add
push
cmpsl
pusha
imul
stos
mov
mov
int3
inc
xchg
mov
pop
scas
lds
inc
and
and
xchg
ret
test
out
out
ret
xor
jmp
push
test
sub
sub
in
fucomi
jg
xchg
roll
xor
sbb
jno
jno
xchg
lock
addr16
andl
cmpsl
insb
sub
xchg
pushf
mov
jo
jnp
out
mov
mov
insb
test
dec
enter
push
inc
das
gs
fs
and
pop
and
and
shll
subb
fwait
pop
add
sbb
adc
cmpsb
negl
andl
pop
stos
xchg
pmullw
mov
lret
and
lea
ja,pt
xchg
lea
jbe
pushf
add
mov
lds
add
cld
lcall
cmp
xchg
jge
sbb
les
inc
cwtl
nop
jmp
call
cld
fldcw
lods
orl
sub
hlt
outsb
int3
and
in
sub
xor
cmp
mov
push
rcrl
mul
pop
cmp
call
fisubrs
ds
sub
adc
pop
hlt
push
cmp
pop
icebp
cmc
stos
cmpb
or
stos
add
fcomps
and
pop
mov
mov
out
push
push
leave
out
aad
and
xor
les
imulb
cltd
hlt
mov
cli
dec
push
add
int3
xor
mov
cs
inc
add
mov
pop
sahf
mov
push
jns
inc
jnp
inc
or
mov
jmp
jno
adcb
cli
xchg
rcrl
inc
jns
push
lods
pop
pop
iret
xor
daa
jle
cmpsb
daa
jne
test
pop
mov
sbb
mov
push
xlat
fwait
clc
sub
and
pop
test
push
mov
inc
xor
cld
push
mov
add
mov
mov
out
cmpsl
icebp
mov
fsubrs
sub
fucomip
adc
pushf
dec
pop
fimuls
inc
pop
in
adc
lcall
int
ret
xchg
dec
jbe
insl
pusha
mov
insl
outsl
sbb
scas
add
outsb
cmpl
pop
faddl
lock
sub
xor
mov
sbb
outsl
test
mov
jo
incb
into
ret
jno
out
addr16
popa
shl
jns
sbb
xchg
mov
stos
lahf
in
push
xchg
xchg
or
inc
and
xor
ret
mov
sub
enter
pop
cli
mov
fidivs
ljmp
sbb
shll
push
push
jmp
jb
std
fbstp
enter
sahf
cmp
mov
bound
mov
loop
sub
push
dec
mov
mov
pop
pop
xor
int3
xor
mov
loope
shl
sbb
push
dec
stos
mov
out
jmp
imul
jge
rcrl
scas
and
mov
leave
cmpsb
call
push
gs
cli
je
inc
pop
loop
push
inc
nop
imul
push
adc
sbb
sbbb
pop
fucomi
push
mov
or
jne
mov
mov
das
jmp
jl
test
out
lahf
fucomip
les
or
mov
cmp
fdiv
inc
outsb
je
sbb
add
lods
int
scas
inc
sbb
xchg
inc
ljmp
testb
cmp
push
rcl
push
xchg
fwait
add
fsubrl
xchg
out
out
jae
sub
insb
ds
pop
icebp
test
sub
sub
out
inc
rclb
mov
inc
gs
xor
test
dec
test
and
inc
scas
xor
test
pop
cmp
scas
imul
je
add
fcmovnbe
fadd
sbb
pop
scas
push
pushf
jo
lcall
sbb
ss
xchg
cmpl
daa
sub
mov
push
movsb
sbb
dec
inc
sbb
lret
pop
test
add
data16
xchg
mov
sub
pop
add
dec
outsb
pop
cld
sub
and
add
sub
adc
xchg
cmc
mov
lret
ja
jecxz
in
into
popa
aam
push
push
add
mov
stos
cwtl
jge
jbe
jbe
pop
adcb
mov
mov
jne
fdivs
xor
outsb
roll
push
out
repz
cmp
scas
rol
push
es
fldcw
jo
cmpsb
cmpsl
mov
faddl
ret
dec
pop
lea
add
les
loope
in
sahf
sbb
out
popa
pop
daa
sub
fnstcw
cwtl
andl
mov
rcl
xor
cmp
mov
jle
mov
mov
and
jge
sub
lock
xchg
repz
pop
push
pusha
add
inc
addb
sub
js
orb
test
aam
stos
test
or
jno
test
imul
dec
into
cmpsl
push
mov
cmpsl
icebp
rorl
xor
mov
insb
inc
mov
lds
dec
ret
mov
sbbb
int3
ja
fwait
call
ret
cmp
loopne
jmp
sbb
lods
inc
faddl
add
popf
dec
aas
notl
ljmp
inc
jmp
flds
enter
inc
or
jae
roll
fs
jg
in
xor
push
movl
pusha
insb
or
and
push
stos
cmpsl
push
orl
dec
mov
mov
stos
push
mov
mov
pop
xlat
push
lods
ds
push
sub
push
sbb
xchg
es
mov
push
lods
and
enter
dec
dec
out
jge
jl
sbb
loope
push
pop
jl
jecxz
lcall
jp
insl
imul
push
push
pop
shl
pop
sbb
add
iret
sub
cmp
cltd
pop
loope
cmp
xchg
aad
inc
jnp
push
hlt
sbb
and
shlb
sbb
push
add
orl
pop
mov
ja
dec
mov
mov
and
cmpl
dec
mov
outsl
aaa
xchg
jmp
das
movsl
mov
jle
mov
lret
lock
cmp
hlt
adc
pop
push
mov
dec
into
lds
dec
clc
mov
jge
sbb
pop
jge
xchg
push
pop
push
lret
shll
loope
repz
test
movl
mov
sub
cmp
sbb
xchg
pushf
mov
gs
sbb
pop
outsl
dec
jmp
jp
scas
cli
inc
cmp
xor
mov
mov
imul
lods
push
cmpsb
out
or
call
mov
cld
jae
push
and
outsb
dec
test
in
hlt
push
mov
scas
pop
roll
orb
cmp
jb
ja
dec
mov
mov
push
mov
jg
dec
out
mov
arpl
and
push
mov
mov
orl
dec
dec
adc
jne
push
icebp
imul
mov
add
stc
inc
insl
cmp
or
andb
xchg
scas
lods
aaa
mov
adc
xor
cltd
mov
push
fsubrs
or
mov
and
mov
das
roll
jmp
je
dec
test
repz
dec
jno
sar
stos
pop
out
pop
ds
subl
fwait
mov
fsubr
add
cwtl
jb
inc
jecxz
sub
xchg
pop
mov
push
popf
add
and
mov
sub
repnz
lret
pusha
mov
mov
mov
add
push
mov
rcrb
cmp
addb
ja
lret
lcall
add
adc
insb
out
xchg
mov
cltd
sarb
and
push
and
cmp
ds
inc
dec
dec
enter
sbb
cld
cmp
mov
iret
fcomip
jb
dec
push
notl
popa
dec
mov
push
push
push
or
mov
xchg
shrb
adc
push
fisttps
jnp
xchg
adc
push
popf
hlt
fstp
mov
inc
rorb
aad
cmp
imul
mov
test
stc
mov
fidivrl
mov
js
add
shlb
movsl
sub
jmp
mov
mov
dec
mov
daa
mov
sbb
dec
pop
popf
cltd
mov
xor
test
xchg
push
les
jle
ss
in
fildl
pop
mov
int
push
js
mov
push
xlat
jle
jle
inc
or
arpl
xor
stos
test
jo
js
lcall
mov
mov
sbb
fidivs
lahf
call
dec
sub
mov
sub
sub
or
jb
dec
in
push
fisttpl
je
inc
push
inc
je,pt
mov
xor
mov
aad
cs
cmp
rol
fistps
inc
mov
rolb
xor
inc
outsb
loope
dec
loop
xchg
mov
std
xor
in
nop
scas
xchg
pop
ss
and
test
addl
push
sbb
leave
cld
lods
stos
outsl
xchg
mov
add
and
jge
out
ja
rol
lods
push
pop
cmp
daa
inc
loope
stos
neg
xchg
push
loopne
mov
mov
jmp
testl
fs
call
or
data16
movsb
fcomi
cmp
or
mulb
andl
or
fwait
icebp
dec
xchg
sbb
sub
mov
scas
addl
inc
fmull
cltd
push
add
push
repnz
fcmovu
sub
or
pushf
movsb
mov
mov
cmp
mov
in
std
ja
dec
mov
sub
xchg
loop
test
mov
sub
push
ss
fsubs
push
int3
std
and
jl
and
test
xchg
add
imul
outsl
sbb
jp
out
mov
adc
repnz
daa
scas
and
mov
icebp
aas
icebp
gs
cmp
testl
add
popf
cmc
outsl
push
sub
mov
test
dec
jp
daa
iret
popf
push
test
mull
addr16
pop
jo
int
xchg
stc
xchg
push
sbb
in
stos
push
std
dec
jbe
add
imul
lods
ficompl
dec
sti
dec
rclb
iret
mov
fimuls
push
cmpsl
cmpsb
inc
jo
push
jae
inc
pop
xor
adc
cmpsb
nop
inc
adc
pushf
inc
shrb
add
fs
das
test
fdivl
xchg
fidivrl
pop
xchg
xchg
rorl
in
inc
xlat
shlb
push
cmp
ja
pop
pop
aad
sub
cmpsb
xlat
or
js
and
addr16
in
les
rcrb
jno
cvttps2pi
jle
cltd
mov
addr16
popf
push
fistpll
notl
mov
icebp
mov
pop
or
in
jmp
add
inc
jp
arpl
xchg
cmp
mov
mov
mov
mov
test
int
outsl
cwtl
jp
xchg
sbb
mov
in
push
cmpsb
xor
jne
sbb
out
lret
sbb
or
adc
jno
pop
xchg
mov
inc
mov
mov
push
enter
rol
loopne
cwtl
aad
fs
aam
jecxz
bound
xor
mov
outsl
sub
aam
xchg
mov
cmc
xchg
ret
and
dec
adc
test
mov
enter
movsb
mov
pop
mov
movsb
out
push
pop
mov
sahf
inc
jae
insl
and
les
popa
xchg
out
xchg
cmc
and
inc
ret
xchg
outsb
pop
sbb
sbb
xor
xor
adc
jl
add
sarl
sarb
les
jg
std
into
testl
cmp
and
dec
inc
lret
pusha
fidivs
add
cli
stos
insl
push
in
sbb
dec
rcrb
fsubrl
cmpsl
mov
mov
lret
dec
into
mov
sub
stos
cltd
fcmovne
push
hlt
out
pop
enter
pop
jo
sub
mov
cltd
test
sarl
jle
dec
mov
rcrl
orl
je
xor
enter
push
xor
xor
xchg
aam
or
and
pop
sbb
pop
xchg
push
or
mov
shrl
add
dec
mov
hlt
shl
add
ss
push
push
and
enter
in
dec
jl
into
pop
ret
mov
mov
shll
dec
mov
sub
fstpl
xchg
nop
sbb
add
mov
clc
test
push
mov
mov
mov
jmp
out
cltd
imul
cmpsb
and
mov
or
fstpl
sbb
pop
xchg
ret
pusha
inc
out
push
sbb
sub
sub
negb
sbb
pushf
xlat
or
push
dec
stc
pop
push
shll
loopne
jae
jns
add
dec
cli
test
nop
dec
mov
mov
loop
or
popl
push
out
incb
mov
sbb
daa
loope
or
adc
aaa
fcmovne
dec
ss
or
insl
scas
dec
jo
sub
ss
dec
sbb
cwtl
adc
jnp
push
dec
cmp
xor
or
aam
data16
mov
pop
test
imull
int3
or
inc
adc
scas
xchg
mov
and
mov
sub
enter
cmp
xlat
lahf
add
mov
jmp
test
pop
fsubl
lock
imul
iret
xlat
ret
pop
scas
cwtl
add
sbb
xchg
jmp
out
and
mov
mov
adc
xchg
mov
icebp
lea
rolb
sub
cmc
and
addr16
incb
out
lea
mov
pusha
mov
push
mov
addr16
rcr
insl
cwtl
repnz
pusha
jns
into
stc
or
and
std
stos
or
mov
mov
shll
push
jo
jp
icebp
cmp
subl
sub
ret
push
mov
stos
mov
mov
dec
loopne
inc
test
out
mov
mov
and
fisubl
inc
mov
inc
sbb
xor
inc
repnz
jno
ret
fsubr
inc
or
inc
or
adc
ret
pop
mov
xor
xor
outsb
int3
pushf
rcll
and
ds
jp
mov
add
jae
add
lods
fstpl
ljmp
js
jbe
push
inc
mov
push
sahf
popa
lods
aas
lods
dec
xchg
mov
dec
setbe
aad
xorl
sub
jl
mov
popf
lods
mov
stos
sbb
frstor
insl
idiv
movsl
mov
jnp
and
cli
push
sbb
and
in
mov
aaa
daa
rcrl
scas
mov
cmp
mov
cmpsb
inc
clc
gs
pusha
popa
jmp
pop
xlat
sub
mov
inc
add
shll
sbbl
jae
faddl
repz
dec
push
or
xor
mov
incl
add
es
push
ljmp
std
out
fwait
add
mov
jg
push
adc
ficomps
push
push
cmp
iret
mov
mov
aad
push
inc
sub
mov
insb
cmp
jne
dec
xchg
aam
add
pusha
push
adc
aaa
mov
adc
xchg
lods
inc
add
xchg
push
jmp
dec
out
and
push
jno
xor
add
fisttps
loop
jne
mov
sub
inc
jecxz
lds
pop
cmc
jo
insl
ljmp
sub
fwait
xor
mov
in
adc
pmulhuw
and
push
scas
jecxz
das
push
fcompl
push
jo
xor
out
cmp
mov
add
xor
pop
dec
jle
mov
fucomip
fmuls
pop
mov
push
or
sar
arpl
lock
pusha
add
test
push
mov
outsl
xchg
mov
out
jnp
shl
lcall
notb
test
or
mov
or
rcll
pop
mulb
movsl
or
scas
bound
andb
shlb
and
jmp
pop
mov
push
add
inc
cmpsb
pop
mov
insl
out
sub
sub
inc
jmp
imul
and
movsl
fistps
sti
stos
pop
push
cwtl
pop
cmp
jns
fld
push
mov
call
lods
aas
push
rcrb
mov
mov
cltd
pusha
js
cli
jb
sbbl
insb
inc
ja
adc
popa
mov
add
jge
scas
aad
push
cs
dec
repz
call
mov
mov
adc
xor
stc
leave
mov
rclb
xlat
inc
cmpsb
lcall
dec
loope
out
sbb
jmp
lahf
xchg
fstpl
push
lret
cmp
push
jp
dec
xor
xchg
adc
inc
mov
push
dec
repz
push
adc
test
mov
icebp
divb
insb
out
test
fnstsw
mov
dec
dec
outsl
test
call
fld
call
mov
sbb
jne
test
movsb
pop
adc
or
pushf
mov
and
xchg
insl
outsl
mov
enter
sub
add
adc
clc
mov
in
mov
stos
loope
xchg
jae
mov
mov
sub
movsl
adc
ret
sbb
sbb
les
jmp
or
loope
sub
add
and
ficoms
sub
xor
cmp
rcrb
jmp
inc
lea
divb
mov
xor
push
push
lods
xchg
or
mov
and
scas
jae
sub
or
lcall
jbe
adc
aaa
jp
std
mov
les
mov
js
mov
adc
cmp
inc
jp
pop
mov
cmp
shlb
jl
dec
rorb
insl
adc
pop
push
pop
mov
movb
imul
add
ret
jmp
inc
in
push
xchg
inc
push
pop
push
or
inc
mov
in
push
lea
mov
and
scas
dec
aam
les
gs
mov
imull
int
xchg
lret
mov
fs
pop
push
pop
push
repnz
xor
mov
mov
rep
cmp
movsb
or
add
xor
shrw
push
mov
test
mov
icebp
clc
xchg
into
cmpsb
insb
stc
inc
mov
jno
rcrl
aas
clc
cmp
test
sbb
repnz
loopne
mov
and
scas
dec
xchg
or
adc
xor
add
sbb
rcrl
imul
xchg
call
lcall
jbe
je
out
in
test
movsl
mov
mull
mov
popf
add
mov
outsl
pop
pop
jle
mov
inc
imul
push
movsb
mov
lock
fisubs
lcall
scas
jl
cld
mov
dec
into
or
int3
jns
inc
inc
mov
insl
sub
repz
jbe
call
cmpl
push
test
in
xchg
in
push
pusha
mov
mov
cmp
sbb
out
or
cs
and
xchg
mov
mov
add
push
scas
pop
int
mov
cmpsl
cmp
sbb
aam
stc
jg
jno
sub
inc
bound
adc
jmp
test
sbb
test
or
mov
cmc
loope
scas
lea
aaa
std
jb
stos
mov
mov
out
mov
sbb
push
orl
sbb
test
imull
testb
pop
cmp
add
xchg
jecxz
add
cmp
mov
dec
push
scas
mov
mov
mov
test
jl
xchg
aas
mov
add
div
imul
push
mov
mov
in
inc
jl
shrl
jb
jmp
lahf
adc
test
jecxz
pop
and
sbb
je
in
xor
ret
push
sub
shl
ja
sbb
jge
push
sbb
ret
out
xchg
adc
insb
test
dec
cld
lods
sub
cmpsl
sbbb
addl
add
dec
cmp
jns
in
ljmp
enter
jbe
les
fcoml
mov
imul
adc
sbb
sbb
xor
inc
jle
cmp
repnz
cwtl
out
loop
cmp
sub
jle
jp
push
insl
xchg
xchg
nop
pop
xchg
sbb
iret
nop
push
add
pop
sarl
push
xchg
iret
cmpsb
pop
inc
jl
outsl
outsl
icebp
je
cmp
imulb
mov
xchg
dec
push
pop
dec
jne
shrb
iret
int3
ss
aad
jno
push
dec
jno
xchg
movsl
stos
add
inc
cmp
sbb
mov
je
orl
cmp
adcb
cwtl
adc
lret
adc
lret
cwtl
in
jp
push
loope
mov
lea
hlt
lahf
repnz
mov
mov
jmp
xor
mov
addr16
ffree
aaa
sbb
outsb
mov
je
xchg
mov
push
sbb
inc
sub
push
test
insb
push
outsl
into
cltd
dec
icebp
imul
icebp
pop
pop
test
ficompl
bnd
cld
cmp
mov
ja
insb
push
rcll
xchg
hlt
push
sub
clc
mov
scas
or
sarb
xchg
movsb
sbb
mov
sti
cmp
fstpt
ja
dec
push
mov
xor
dec
dec
out
sbb
push
dec
cmp
mov
sbb
cmpb
nop
jae
out
outsl
fidivl
cltd
xor
sub
mov
push
push
dec
adc
jne
daa
lods
das
pop
pop
daa
jo
rcr
mov
fcoms
stos
mov
adc
push
shl
push
or
insb
fstpl
push
pop
adc
adc
fmulp
in
or
addr16
pop
cmp
loopne
vpperm
pop
add
addr16
imul
andl
aas
movsb
out
xchg
movsl
fsubrl
pop
xor
jno
xlat
in
ror
push
pop
pusha
cmp
insb
insb
scas
jg
mov
xchg
jmp
or
shrb
shlb
sub
xor
scas
push
je
popa
shlb
dec
sub
pop
add
rolb
leave
pop
out
jnp
test
adc
lret
pushf
insb
enter
test
mov
out
adc
and
sar
imul
fnstcw
xor
push
xchg
push
mov
jne
sbb
aad
cmpsb
xor
cli
jae
out
xchg
mov
or
pop
in
mov
leave
outsl
push
dec
insl
aad
and
xchg
aad
and
sbb
shrb
mov
adcl
ficoml
sbb
les
mov
mov
cmp
mov
ret
mov
jle
pop
outsl
iret
sub
xchg
aaa
push
xchg
enter
sbb
jae
and
dec
cltd
outsl
sub
stos
xchg
insb
inc
push
cmp
fmulp
dec
icebp
dec
icebp
sub
decb
movsl
outsl
int3
jp
jb
xchg
dec
out
in
xor
adc
add
aad
inc
xchg
stc
lea
xor
in
or
xchg
in
add
mov
aaa
lods
out
mov
ljmp
hlt
push
push
fmull
and
je
sub
inc
pop
sbb
or
jge
sarb
jne
test
push
scas
fld
inc
dec
lret
int
mov
mov
add
gs
mov
imul
repnz
call
cmp
fisubs
imul
repnz
in
cmpsl
cmp
dec
and
mov
add
mov
cmpsl
jns
push
sahf
jno
mov
shlb
clc
fwait
pop
jbe
mov
adc
ret
fildl
aas
jecxz
mov
aad
mov
dec
arpl
je
push
outsb
ds
push
jle
and
aad
dec
xor
enter
movsb
cld
test
mov
loop
std
pop
js
lea
cs
sub
add
jle
cmp
pop
cmp
out
ja
pop
loope
inc
inc
sahf
les
push
push
or
mov
repnz
int3
pop
loopne
lret
jl
push
mov
faddp
adc
xchg
sti
or
push
adc
dec
sub
loope
test
scas
inc
daa
jns
jecxz
fldcw
jge
and
jl
mov
mov
popa
inc
bound
mov
adc
and
jae
out
xchg
add
inc
or
mov
push
in
pop
nop
fcmovb
stos
lods
fucomi
sahf
idivl
pop
es
inc
jl
cmp
add
fwait
lods
sti
mov
in
mov
push
push
mov
sarb
adc
fsubrl
mov
mov
adc
leave
mov
dec
pop
jno
mov
push
xor
jb
lods
cld
xlat
mov
idivb
lock
jg
mov
cmp
mov
sbbl
lret
ljmp
and
jno
dec
addr16
inc
in
out
out
adc
test
push
mov
in
popf
rcl
in
cmp
iret
sahf
add
loopne
dec
test
mov
and
in
je
stc
mov
push
fdivrs
xchg
mov
mov
xlat
add
push
mov
add
pop
jecxz
je
test
sbb
xor
rclb
inc
jbe
js
imulb
rorl
inc
arpl
mov
into
mov
push
push
cmp
xchg
repnz
notl
add
dec
dec
pop
pop
cmp
cmp
add
pop
mov
std
jmp
fs
inc
and
mov
aam
or
sub
dec
xchg
in
lcall
push
cmpsl
mov
cmp
xchg
mov
mov
clc
movsb
test
and
daa
pop
fidivrs
sub
jne
pop
mov
pop
xchg
inc
push
fnstenv
ret
call
mov
xchg
inc
and
or
xor
cmp
push
rorb
popa
in
insb
xlat
aad
or
outsb
jmp
mov
mov
fidivrl
outsb
into
inc
add
frstor
xor
pushf
adc
pop
xchg
inc
xchg
inc
dec
aaa
xchg
jno
jns
popl
leave
cld
and
inc
popf
mov
sbb
xchg
sub
push
stos
test
fimull
and
mov
push
cmp
pop
rclb
adc
fnstsw
jp
dec
in
jge
fimuls
les
or
mov
sbb
es
sub
mov
inc
fidivs
insl
mov
or
xchg
sahf
mov
sub
loopne
aam
sbb
popf
imul
in
xchg
lret
xorb
jecxz
push
mov
or
sbb
or
fdivrs
push
jmp
mov
lret
mov
or
xor
fs
shll
push
out
dec
repz
insb
push
sbbl
leave
lcall
xorl
mov
xor
mov
sub
lret
jl
addr16
inc
push
fisubrs
mov
add
stos
mov
cmpsl
cli
dec
jne
sub
dec
xchg
loope
das
pop
arpl
mov
sahf
in
call
lret
sbb
aam
push
scas
aaa
and
test
adc
cmp
stos
ds
bound
loop
ja
add
xchg
mov
mov
lods
xchg
dec
adc
mov
xor
xchg
add
xor
pop
mov
cmp
dec
mov
xchg
rep
insb
pusha
push
xor
arpl
in
push
fildl
fs
push
adc
or
popa
cld
push
test
insb
mov
mov
cmp
and
xor
cmc
xlat
int3
out
in
sub
xchg
int
jle
mov
pop
xor
lea
shlb
sbb
pushf
cld
bound
ds
insb
or
int3
add
xor
cwtl
jge
inc
arpl
sub
ficompl
add
lods
jb
jp
xchg
pop
sub
push
add
mov
loopne
push
lods
adc
mov
dec
sub
ljmp
jbe
push
fdivr
stos
mov
jge
mov
xchg
dec
or
test
jbe
inc
movsb
inc
mov
ss
test
je
divl
rcrb
adc
inc
pop
xchg
jae
sbb
cmp
cmp
cmp
call
mov
dec
out
hlt
out
and
dec
mov
sbb
xchg
fdivrl
cmp
add
adc
push
test
stos
push
into
inc
jg
and
stos
inc
daa
pop
mov
xchg
sbb
adc
jns
xchg
add
jmp
add
scas
scas
orl
ss
sahf
ret
cs
lret
add
iret
jmp
into
mov
sub
das
loope
mov
rcll
in
jns
ds
sub
or
repnz
vprotw
sbb
jne
add
pop
outsl
push
subl
fstp
fstl
jb
dec
or
mov
jbe
pop
imul
mov
xchg
in
inc
lcall
mov
dec
adc
pop
movsb
pop
sub
pusha
frstor
mov
ret
call
and
dec
cmp
sub
push
cmp
sub
hlt
cli
loop
xor
adc
lret
and
std
mov
jp
pop
pop
pop
pop
dec
mov
dec
in
push
or
jb
hlt
gs
popa
sbb
jae
sub
outsl
or
fcos
and
aam
lods
pop
mov
dec
icebp
cmpsl
fwait
js
or
mov
and
in
mov
test
push
mov
loop
test
or
mov
rcrl
push
pop
sbb
mov
jge
sbb
dec
cmp
pop
loope
mov
outsl
cmpb
adcb
xchg
data16
out
pop
cmc
xor
push
mov
mov
cli
dec
aaa
jecxz
inc
mov
pop
fs
fisubl
movsl
pop
outsl
addr16
xor
mov
mov
in
fnsave
or
mov
cmc
dec
shrb
cmpsb
lock
xchg
jno
jl
sub
mov
dec
and
sbb
sahf
rcrl
lock
fs
fwait
test
adc
mov
sbb
push
mov
fs
les
add
bound
mov
inc
mov
xchg
push
stos
xchg
fnstenv
out
dec
xor
fnstcw
cmp
test
andl
mov
out
sbb
push
push
imul
or
ds
xchg
add
cld
mov
add
cs
push
in
sub
pop
add
iret
pop
insb
adc
sti
lock
push
fnstcw
add
jo
sti
dec
cmp
scas
out
push
dec
cmpsl
jns
scas
push
mov
xchg
adc
mov
inc
xor
dec
orb
cmp
mov
jae
rcr
aaa
ret
push
jno
mov
inc
mov
jl
mov
outsb
loopne
dec
adc
mov
mov
xchg
mov
call
repnz
pop
jge
lret
jo
mov
imul
mov
out
mov
cmp
mov
lds
dec
ja
test
mov
push
add
pop
push
mov
in
or
test
sub
aad
xchg
jns
bound
dec
pop
lcall
mov
push
mov
xchg
inc
cmp
pushf
lock
ret
sub
pop
mov
arpl
push
mov
xchg
add
add
std
mov
jae
xor
fildl
cwtl
mov
sub
ja
jmp
push
mov
add
cmpl
rcrl
aaa
int3
iret
aaa
inc
mov
jmp
std
bswap
inc
adc
push
icebp
sbb
loope
addr16
and
lret
pop
rorl
cli
xor
and
cmp
mov
sbb
sbb
fmuls
jl
leave
hlt
cmp
sub
xor
sbb
nop
out
ss
sarl
in
in
imul
gs
mov
mov
rcr
pshufw
daa
pop
lods
std
data16
pop
stos
push
test
iret
mov
call
pop
sbb
je
mov
mov
rclb
lret
clc
cmc
and
mov
inc
js
or
scas
aad
pop
sub
xchg
add
movsb
std
add
mov
arpl
adc
imul
xor
jno
inc
xor
push
mov
pusha
dec
add
mov
xor
pop
dec
dec
das
mulb
and
ror
repz
mov
popa
dec
jae
in
orb
fldenv
mov
xor
dec
adc
hlt
adc
fldl2e
test
in
das
out
nop
xchg
fcoms
pusha
push
andl
gs
imul
out
mov
pop
pop
cmp
ljmp
adc
pop
pop
mulb
orl
adc
jp
jns
xor
inc
repnz
adcb
test
addr16
and
xor
test
lea
push
shll
outsl
in
adc
scas
fwait
cs
stc
dec
es
pop
cmpsb
shll
dec
sub
sbb
mov
mov
popw
fnstsw
icebp
lret
fisubrl
int
sarl
or
push
div
mov
xacquire
fidivl
leave
pop
pop
cmpxchg
and
sti
and
enter
mov
mov
int3
imul
aaa
fdivrs
call
mov
mov
orb
insl
clc
adc
mov
inc
fisttpl
mov
xchg
popf
ljmp
inc
xchg
push
dec
xor
shrb
xchg
xchg
imul
or
xor
leave
mov
sti
arpl
cmp
xor
fnstenv
mov
push
hlt
fidivs
push
xchg
icebp
call
movsb
adc
jle
and
dec
aaa
adc
out
lods
cmp
pop
pop
lcall
xor
mov
div
pop
cmp
out
das
jecxz
stc
pop
mov
mov
xchg
sbb
push
add
nop
ficompl
adc
loopne
inc
pop
mov
clc
jnp
adc
int3
pusha
aaa
adc
movsb
mov
repnz
into
test
rcrb
jno
test
shlb
sbb
mov
test
movsl
ficomps
stos
idivb
cwtl
pop
push
jnp
cltd
inc
fadds
xor
and
jnp
sbb
test
fbld
jne
adc
or
repnz
pop
icebp
mov
pop
cmc
dec
sub
jecxz
dec
inc
jge
popa
js
xchg
out
jmp
pop
pop
sbb
popa
cmc
fxtract
pop
scas
mov
shlb
cld
cltd
mov
cmp
cli
pop
ret
dec
out
xchg
pop
mov
or
repz
cmpsb
adc
pxor
xchg
mov
je
cltd
fmull
mov
cmpsb
pop
sti
bound
dec
popf
pop
cmc
idivb
leave
dec
xor
pusha
test
fldl
daa
lret
push
sbb
inc
ss
pop
sub
mov
cmp
adc
xor
je
pop
and
inc
push
in
xchg
cmp
jge
or
cmp
cmpsl
lcall
sbb
add
popa
sbb
push
out
pusha
dec
stos
into
andb
xorl
lret
roll
xchg
xor
fmull
push
loope
add
or
mov
xor
or
movl
mov
sbb
insb
cmp
ret
adc
sar
add
out
mov
nop
and
jg
cmpsb
js
lea
in
fisttps
jle
xor
iret
cli
xchg
sbbl
inc
push
pop
jecxz
in
mov
popa
push
scas
push
jmp
inc
push
or
push
sub
jae
cmpb
dec
pop
rorl
pop
cmp
addr16
inc
push
pop
sbb
lret
movsb
mov
and
imul
pushf
xchg
jge
imul
mov
call
loopne
cmp
ss
jecxz
pop
jecxz
add
out
add
sbb
in
imul
scas
mov
test
pushf
nop
int3
jle
stos
xchg
jle
mov
js
jmp
cmpsb
adc
inc
dec
jle
jae
cld
pusha
int
xor
xor
aad
adc
mov
mov
mov
sub
arpl
add
push
aam
or
xor
dec
push
xchg
or
stos
mov
fsts
add
dec
push
sub
repnz
or
int
xchg
bswap
pop
test
lods
pop
cmc
mov
jo
cwtl
cmp
adc
insb
cmpsb
jne
test
inc
test
inc
lret
mov
jge
dec
out
xchg
sarl
mov
xchg
mov
rcl
fwait
dec
xchg
pop
daa
ret
jg
dec
loop
and
test
jl
testl
loop
icebp
pop
ds
ss
add
mov
js
cmp
das
push
adc
into
enter
out
xchg
lcall
jmp
shll
pop
cmp
movsb
jns
jnp
add
mov
mov
rcrb
pop
pop
push
jmp
ja
mov
xchg
xor
inc
cmp
js
mov
sti
jmp
mov
add
arpl
cmpsl
gs
loope
cltd
add
loop
fwait
adc
mov
enter
std
cmc
prefetch
or
jge
mov
rclb
mov
nop
cld
jb
lds
or
stc
aas
mov
add
loop
inc
or
addb
lret
jbe
shr
movl
loop
cmp
add
xor
cld
popa
or
hlt
mov
js
jns
xlat
add
mov
inc
sbb
jp
faddl
push
popw
jne
shl
push
push
adc
mov
dec
ljmp
mov
orb
subb
cltd
test
roll
lea
imul
lods
xchg
in
inc
iret
addr16
mov
ss
mov
mov
mov
sbb
mov
jl
pop
pop
lea
out
and
xorl
xor
repz
lock
sbb
sub
lds
mov
cmp
or
jecxz
inc
fcmovu
add
cmp
inc
ja
stos
int3
sbb
lret
rcrl
shlb
mov
mov
sbbl
adc
fsubs
cltd
pop
and
push
mov
xchg
adc
push
jle
xchg
jl
lock
jmp
add
cmp
mov
and
cltd
xor
ror
sti
shll
sbb
add
mov
mov
inc
and
mov
sub
xchg
lock
int
dec
pop
das
leave
xchg
ret
xchg
in
aam
push
popa
push
sub
inc
and
inc
mov
shrl
cmp
xor
shll
xor
add
mov
mov
rcrl
ss
jbe
sarb
xor
xor
stos
repnz
sbb
xchg
adc
lret
dec
enter
lods
pop
mov
ds
aad
iret
mov
int
push
ss
mov
sbbb
pop
jmp
inc
sub
lcall
ja
sub
scas
jg
mov
lret
pop
sbb
dec
xchg
lahf
and
sbb
lcall
mov
cmpsl
xor
mov
mov
jge
lahf
sub
xor
aaa
rorl
xorb
call
sar
mov
pushf
cmc
mov
cmpsl
pop
pop
notl
shll
mov
jge
jbe
stos
out
mov
sbb
aas
pop
cmp
inc
mov
dec
imul
cmpsl
xor
mov
pop
dec
push
pushf
or
pop
pop
inc
adc
dec
inc
mov
sub
jno
cmpsl
xor
and
cmp
cmp
push
das
inc
and
or
fimull
or
ss
ffree
sub
out
push
ss
and
enter
test
scas
mov
mov
cmpl
addb
xchg
push
stc
fistpl
shr
fdivl
add
insl
sbb
sub
bound
test
test
cmc
aaa
fstpt
aas
dec
jp
fsubrl
sub
ficoms
mov
jae
inc
jno
lds
adc
xchg
xor
jmp
into
imul
dec
sbb
cmp
inc
idivb
cld
lea
xchg
data16
bound
aas
mov
jmp
and
add
add
mov
and
repz
leave
nop
cmp
lods
add
sub
xchg
pop
fwait
insl
cmp
sub
or
and
mov
aaa
xor
pop
stos
mov
sub
mov
subl
and
das
cmp
xchg
add
push
mov
insl
lea
sbbl
inc
int3
pop
jecxz
mov
addl
dec
pusha
mov
addr16
pop
add
fsubl
mov
sbb
jne
pop
ss
sbb
and
cltd
repnz
jmp
xchg
cmc
or
push
adc
in
lock
cmp
push
fbstp
std
dec
das
push
sub
outsl
arpl
xor
ret
std
mov
and
pop
push
push
divb
mov
cmpsl
mov
push
mov
mov
movsb
es
mov
xor
outsb
add
mov
push
fdivl
push
sti
pop
test
jl
lret
jb
test
jge
pop
push
in
rclb
fwait
daa
shrl
cmpsb
mov
or
or
cmp
mov
push
pop
push
sti
pop
lods
dec
adc
dec
mov
int3
jno
sar
bound
out
orl
lahf
cli
sub
dec
outsb
scas
jge
sub
add
fs
and
movsl
je
mov
mov
rcr
push
sub
mov
cmc
and
mov
movsl
das
push
scas
sub
dec
andl
in
push
fs
dec
xchg
sbb
xchg
mov
fsubr
add
adc
mov
iret
mov
inc
mov
xor
push
mov
mov
xchg
das
mov
rcr
push
sti
sub
iret
add
repz
sbb
in
inc
jbe
repz
lea
data16
loop
ret
stc
ljmp
cmp
icebp
jbe
sahf
decb
cld
aaa
xchg
movsl
fwait
jecxz
popf
mov
inc
pop
mov
fsts
daa
rcll
dec
jle
lock
gs
aam
jg
push
cmp
ret
xchg
add
inc
inc
sub
nop
jo
icebp
mov
sar
mov
addr16
popf
popa
or
cmpsl
xchg
push
scas
cmp
jle
push
sti
movsl
add
cmp
mov
xchg
dec
test
pop
or
or
sbb
fdivrs
std
stc
movsb
mov
shl
xor
fwait
pop
push
adc
cmpsl
insl
cwtl
lea
into
div
orl
les
pop
push
out
mov
jns
or
or
les
adc
xchg
clc
imul
mov
lret
mov
sbb
jmp
cwtl
sub
add
lret
pop
cmp
or
inc
push
cltd
or
inc
insl
xchg
out
jo
ja
xor
iret
movsl
je
or
mov
loopne
or
add
call
outsb
fisttpl
adc
lods
cmp
jno
xor
mov
sahf
fsubl
cmc
mov
and
inc
mov
jo
sbb
and
addb
xchg
jp
stos
push
ja
std
jge
iret
test
out
pop
add
add
lods
pop
aad
out
mov
in
and
std
xchg
mov
popa
arpl
clc
adc
xchg
dec
mov
movsl
mov
mov
paddsw
lock
aas
dec
mov
push
mov
scas
outsb
fldcw
dec
pushf
es
movsl
lds
mov
mov
mov
pop
dec
pop
fsubrp
adc
stos
in
stos
cmpsb
jl
stos
xchg
mov
sbb
or
ss
jno
inc
adc
mov
fisttpl
sub
into
cmp
inc
mov
mov
imul
pop
adc
xchg
push
push
xchg
das
lret
sub
mov
cmp
rcl
in
sub
sbb
push
outsl
adc
cld
ffree
adcl
jne
fucom
test
jno
mov
xor
xchg
clc
cmp
jmp
inc
in
xor
sbbb
fstl
fs
jae
jmp
cmpsb
or
push
ds
jno
dec
lret
dec
gs
jne
or
jp
fld
fists
mov
pop
pushf
sti
inc
mov
xchg
cltd
cmp
arpl
imul
add
mov
dec
dec
xor
roll
dec
js
gs
mov
notl
cmpsl
xchg
jg
lods
push
aad
aaa
adc
movsl
add
mov
sbb
mov
mov
addr16
xor
jle
xor
mov
out
cmp
inc
lahf
dec
mov
ja
in
jo
adc
loopne
aad
int3
in
pop
sbb
lcall
push
cmp
pop
gs
pop
and
lds
arpl
andnps
pop
addb
je
pop
test
xlat
pop
ss
inc
pop
addb
pop
nop
mov
imul
pop
loopne
dec
adc
dec
icebp
sub
inc
shlb
scas
pop
sbb
lods
sbbl
mov
out
in
stos
cld
cwtl
addr16
sub
hlt
lods
mov
mov
sbb
add
clc
and
dec
inc
fldenv
mov
xor
pop
or
jb
fistpl
cmp
push
mov
movsb
in
test
sbb
popa
inc
bound
jecxz
add
xor
mov
mov
imul
hlt
xor
dec
out
jge
inc
and
movsb
cmp
mov
dec
shll
subl
mov
mov
je
shll
cmc
adc
lods
gs
imul
rcrl
nop
jp
xchg
push
shl
pop
cmp
fisttpl
mov
cmp
out
xor
ljmp
sub
stc
in
data16
mov
das
dec
mov
inc
sub
leave
movsl
daa
pop
adc
imul
lock
add
xchg
jbe
pop
icebp
addr16
hlt
push
int
push
inc
cltd
in
mov
les
movb
lds
add
stc
sti
jne
cmpsl
xchg
rcll
cli
frstor
sarl
sub
mov
and
hlt
cmp
mov
mov
sbb
ljmp
push
cmp
int3
movsb
sub
pop
in
mov
pop
xor
xchg
dec
int
mov
cmc
std
mov
push
insl
mov
jno
push
cmpsl
mov
enter
pop
cmp
mov
aam
cli
or
cltd
or
in
xchg
jne
mov
cwtl
and
addr16
inc
ds
nop
and
and
rcr
xor
lods
pop
mov
loop
xor
pop
mov
xor
pcmpgtb
jo
lret
shrd
mov
push
add
stc
adc
loop
mov
inc
inc
fwait
cmp
mov
push
daa
dec
clc
jg
icebp
adc
inc
int3
scas
dec
mov
and
cmp
xchg
out
xchg
call
cmp
mov
les
mov
gs
xchg
popf
xchg
jb
cmp
popa
mov
scas
sbb
lods
sbb
push
adc
notb
jbe
jg
aas
push
mov
popa
daa
fnsave
popf
mov
cmc
ss
aaa
cwtl
xchg
cmp
dec
data16
and
mov
cmpsl
das
out
repz
xor
aaa
dec
push
loop
ficoml
push
arpl
inc
dec
into
add
notb
je
test
cs
inc
mov
repnz
pop
xor
cli
pop
movsb
movsl
cmp
mov
push
jne
cmp
inc
es
xor
pop
idivb
mov
shl
xchg
sbb
push
mov
adc
or
lods
mov
mov
rorb
popf
mov
lcall
xchg
xchg
sub
mov
je
inc
xchg
ja
adc
mov
cltd
stc
jp
lea
adc
mov
adc
das
mov
ret
mov
adc
enter
stos
hlt
dec
ljmp
xor
std
pop
sarl
xchg
jle
push
dec
ds
cs
pop
mov
mov
jbe
adc
rcl
sub
scas
neg
mov
lcall
sbb
mov
stos
std
in
lock
inc
inc
aaa
push
hlt
fmul
xchg
insb
mov
fadd
add
xlat
test
out
dec
rcrl
ljmp
adc
leave
leave
cmp
pop
mov
mov
inc
xor
shlb
arpl
and
fdivrs
dec
xchg
cmp
imul
arpl
mov
or
pop
loop
pop
lods
and
jge
sub
popa
jns
arpl
and
movsl
xlat
leave
fildl
enter
mov
mov
jl
adc
cmp
test
loopne
push
js
lock
dec
cmp
test
enter
andl
ljmp
push
jno
test
aam
and
jge
push
mov
test
push
mov
sub
cmp
or
inc
push
pop
sub
fsub
bnd
adc
sub
stc
jp
std
jp
adc
push
aas
pushw
xchg
test
test
add
jne
jmp
adc
xchg
sub
or
outsb
sahf
push
fwait
int
pop
pop
data16
xor
pop
add
xchg
pop
iret
jb
addl
xchg
sbb
xor
loope
rolb
mov
in
or
sti
stos
gs
fistps
mov
add
push
mov
pop
add
lods
lcall
pop
fsubl
lods
mov
and
dec
jl
cmp
int
inc
or
mov
sub
cs
lods
and
scas
push
mov
xor
sbb
push
xor
inc
or
iret
xchg
out
enter
aad
inc
push
adc
lret
mov
jns
mov
out
cmp
mov
mov
cmp
adc
int3
dec
fcompl
fs
xor
push
jb
inc
pop
repnz
and
mov
arpl
cmpb
push
dec
mov
xor
jmp
icebp
cwtl
jae
sti
add
xchg
mov
in
mov
repz
pop
jns
imul
movsb
int
fistps
leave
sbb
inc
mov
in
leave
or
pop
inc
jbe
cmp
into
pop
adc
sub
xor
push
jge
xorl
mov
lds
jbe
add
adc
out
jbe
repnz
and
dec
cld
es
es
jp
cmp
jns
xlat
add
jge
sbb
jno
push
pop
stos
sbb
xchg
in
adc
fmul
hlt
push
data16
dec
push
inc
mov
mov
pop
inc
pusha
adc
and
aaa
mov
push
aaa
roll
and
int3
mov
sbb
mov
fs
xor
cs
jno
push
dec
mov
rcrb
xor
jno
cmp
add
sbb
mov
call
insb
fs
mov
rcrb
mov
js
pop
push
in
movsl
sub
mov
xor
push
test
loope
rcrl
std
mov
stos
test
or
mov
int
and
jo
out
lock
aam
stos
jge
movsl
in
test
sbb
insb
mov
mov
sahf
mov
test
mov
out
decb
push
xchg
pushf
adc
xchg
and
jmp
xchg
push
aad
in
add
mov
ljmp
aas
aad
lahf
pop
push
mov
and
jbe
mov
mov
or
dec
ret
aad
dec
jg
into
loop
mull
popf
or
loopne
xchg
arpl
inc
cmp
xchg
mov
push
hlt
pop
das
stos
fdivs
xor
add
test
imul
mov
add
xor
aas
bound
aam
cmp
pop
ret
dec
mov
lea
cwtl
lods
mov
mov
stc
fldenv
lcall
push
xchg
and
out
js
pop
push
les
xchg
xor
xchg
lahf
xchg
dec
int3
es
popa
jle
fucomi
jl
stc
jnp
mov
mov
inc
popa
mov
mov
test
sbbb
mov
xor
jp
nop
pop
cli
out
and
out
cmp
push
sub
scas
fs
add
jb
test
enter
ss
lods
sbb
xlat
aaa
xorl
jae
or
roll
mov
shrb
sti
inc
sahf
push
es
cmp
mov
inc
xchg
mov
xor
sub
inc
lods
jb
pop
pop
outsl
jae
test
leave
xor
xchg
js
ss
push
or
mov
popa
popa
popf
movsl
stos
test
jns
xlat
mov
orb
xor
jns
lcall
sbb
in
pusha
incb
xchg
push
int
mov
cmpsb
sbb
dec
vmovq
xchg
out
inc
das
js
add
and
mov
or
mov
ss
xor
push
push
cli
addr16
mov
pop
in
addb
mov
push
cmp
sti
sub
add
pop
xchg
enter
inc
mov
arpl
sbb
insb
mov
sub
xchg
inc
mov
das
xchg
std
bound
inc
repnz
mov
pusha
test
push
and
sbb
outsb
cmp
inc
jne
pop
mov
mov
xchg
jnp
sub
jns
fisubl
xor
fldt
lds
insb
and
insl
out
icebp
dec
fucom
js
sbb
mov
shl
sbb
push
clc
lahf
mov
in
add
fldt
sub
push
or
mov
pop
repz
daa
loope
in
fs
stos
movsb
loop
dec
push
jle
mov
mov
fsts
mov
or
pop
ss
inc
bound
sbb
pop
in
adc
das
imul
jb
cmp
imul
and
mov
scas
xor
movsb
mov
out
xor
mov
sub
pushf
push
out
push
or
fstl
lods
std
mov
sbb
xchg
popf
in
aaa
xor
pop
inc
loop
inc
adc
add
pop
push
inc
aad
mov
popf
popf
adc
adc
and
sub
cmp
fimull
jmp
or
xchg
sbb
subb
jns
arpl
jecxz
dec
inc
negl
fsubs
jp
adcl
cwtl
add
mov
or
push
lcall
sahf
jecxz
jecxz
aas
mov
inc
imul
mov
lcall
imul
pop
pusha
vphadduwd
sbb
out
inc
xor
xor
pushf
and
add
loope
sub
mov
out
dec
xor
cmp
imul
xchg
sbb
lret
jno
cltd
repz
popa
inc
shrl
je
cmp
xor
sbb
cmp
jno
push
and
lahf
sub
movsl
mov
xor
xchg
mov
mov
std
setnp
mov
loopne
test
mov
add
lods
mov
cmp
test
in
outsb
push
mov
and
pop
iret
push
push
mov
inc
sbb
in
data16
jb
push
mov
dec
fdivrl
jp
mov
inc
gs
faddl
cmp
dec
push
or
xchg
sbb
fs
addr16
jge
cmp
adc
lods
jb
hlt
scas
sbb
sbb
popf
data16
push
aam
enter
push
das
test
stc
movsl
dec
insb
loope
or
movsl
cs
and
jg
jns
ja
nop
insl
mov
jno
mov
jnp
adc
cmp
shlb
into
pop
ja
jbe
push
pop
cmc
mov
add
push
nop
mov
cli
jnp
and
in
or
inc
push
add
rorb
mov
lret
pop
mov
movsb
mov
out
mov
inc
mov
inc
repnz
push
loopne
test
add
mov
cld
aas
push
jno
aas
enter
pop
inc
std
mov
xor
ljmp
cmp
and
lock
push
add
pop
jp
lcall
push
lock
push
fmull
jo
pop
scas
faddp
mov
inc
mov
jno
loope
sub
mov
jge
scas
push
shr
into
mov
sub
mov
bnd
movsb
push
dec
shl
popf
xchg
sub
push
and
add
jns
or
idiv
popa
sbb
xchg
ss
fistpl
inc
push
and
mov
pop
icebp
sbb
je
or
xchg
pop
cltd
insb
and
pop
jg
mov
insb
inc
lcall
inc
push
cmp
das
mov
inc
push
and
stc
push
movsl
lods
sbb
inc
jns
mov
xchg
push
jae
add
cmp
bnd
xor
pop
fdivrl
popf
xchg
in
les
aam
xlat
cmp
dec
loopne
lds
cmc
xchg
inc
lret
add
stos
addr16
test
or
outsl
sbb
jb
nop
pop
jae
push
jle
and
pop
stos
adc
add
leave
ret
pop
mov
dec
mov
aam
dec
ret
jns
add
xor
mov
mov
je
mov
cmp
insb
fcmovnu
jbe
mov
outsb
push
cmc
sbb
pop
xor
loopne
in
jle
cmp
repz
movsl
cmp
clc
in
xor
ss
fdivs
fs
jle
sahf
push
lds
jl
movups
scas
mov
leave
cmp
mov
addr16
pop
insb
arpl
mov
and
jo
std
or
xchg
adc
icebp
pop
jl
and
dec
inc
ror
icebp
sub
repnz
jbe
sub
or
notl
xlat
repnz
fldl
fmull
adc
xchg
sti
sarl
and
mov
fldcw
dec
jp
mov
mov
call
scas
in
aad
testb
call
push
sub
mov
and
fwait
popf
popa
out
cld
cmp
lods
add
mov
add
push
aaa
xchg
stc
sahf
or
in
jmp
cmp
sbb
pop
cmpsb
dec
pop
lds
adcb
cmc
subb
add
fs
mov
ret
leave
fstpt
jbe
stos
sbb
lock
movsl
notb
mov
sbb
cmp
push
fidivl
imul
scas
inc
filds
mov
mov
ja
cs
movl
mov
in
jns
orl
inc
xor
or
in
push
mov
leave
repnz
notl
jnp
pop
mov
cmp
incb
sbb
jp
mov
ficoms
push
cmc
int
scas
mov
lods
lds
or
fldl
mov
ret
mov
test
dec
xchg
add
mov
and
xor
push
and
ja
cmp
js
sbb
subb
adc
lods
lret
mov
jl
decb
jg
rcr
jns
movsb
fcompl
jp
pop
sbb
int3
enter
adc
pop
ds
add
xchg
cld
test
dec
dec
dec
hlt
adc
adc
dec
dec
cmp
push
cld
adc
xor
sti
jmp
jge
adc
adc
out
scas
jg
push
mov
or
stos
stos
inc
jnp
test
fiadds
fcom
imul
cli
sbb
jno
push
imul
fistps
imul
add
gs
jecxz
out
sub
mov
cld
push
mov
lods
or
inc
sti
jnp
out
sub
js
and
and
bound
sbb
xchg
fisubrl
lahf
mov
fcmove
je
dec
int
test
push
jns
scas
loopne
ror
cld
fcmovnu
cwtl
iret
daa
fsubrs
xchg
mov
loopne
mov
inc
orl
jmp
les
mov
jg
js
push
add
sub
inc
std
ja
lret
pop
lds
std
stos
nop
sbb
loope
fldcw
sub
mov
mov
dec
out
mov
adc
adc
pushf
aad
xor
clc
pop
mov
sbb
fwait
insl
icebp
sbb
dec
mov
mov
dec
jmp
sahf
fdivrs
aad
out
sbb
nop
pop
cwtl
pusha
sub
jnp
sbb
lods
jae
nop
sub
cli
shll
aad
mov
jnp
dec
leave
scas
pop
cltd
add
mov
xchg
fidivs
insb
pop
popf
sbb
cltd
aam
xor
pop
cmp
fwait
out
loope
out
shrl
lcall
stc
xor
bnd
or
je
mov
cmp
or
bound
lcall
pop
stos
mov
and
gs
xchg
cltd
test
lea
pop
pop
imul
aas
push
fdivr
pop
arpl
mov
jl
jae
jbe
lret
pop
pand
xchg
and
jle
add
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
incl
dec
inc
dec
pop
ficompl
lea
dec
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
roll
push
pop
js
mov
dec
dec
pop
sbb
lods
dec
jmp
sub
sub
cmp
das
sbb
jns
loop
loope
add
dec
pop
ficompl
lea
pushf
mov
pop
xchg
jl
add
add
lret
rcl
mov
dec
adc
jecxz
mov
orl
adc
mov
xchg
lds
andb
add
loop
fld
rclb
push
adc
dec
inc
movsl
dec
push
xchg
call
jecxz
sbb
xor
mov
pushf
mov
lret
lea
lcall
sub
jno
inc
dec
pop
ficompl
lea
filds
pop
ficompl
mov
into
clc
dec
pop
fimull
lea
filds
pop
lret
lea
fiadds
pop
ficompl
lea
filds
push
ficompl
lea
fldl
fstp
pop
fisttpl
jno
push
dec
pop
lret
lea
filds
pop
ficompl
lea
fildll
pop
ficompl
xchg
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
icebp
xor
lea
iret
inc
dec
pop
push
pop
lret
lea
pushf
ja
adc
pop
lret
lea
aas
imul
test
lret
lea
fbstp
lret
lea
filds
pop
ficompl
lea
fbld
lret
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lea
filds
pop
ficompl
lds
pop
pop
fidivl
push
fnclex
xchg
and
pop
adc
jg
int3
cmc
ljmp
rorl
test
xor
or
dec
clc
pop
in
sub
sarl
fsubr
js
dec
imul
push
mov
and
mov
mov
jmp
movsl
jne
and
add
push
adc
lea
fdiv
lret
mov
push
test
jne
mov
fdivl
pop
hlt
cmpsb
cli
mov
roll
popf
pop
les
pop
insl
or
pop
in
jg
or
pop
ret
add
mov
fsub
leave
movsl
imul
cwtl
addb
ficompl
sub
mov
mov
popf
inc
jbe
jns
dec
sub
test
pop
adc
or
aaa
mov
dec
xchg
dec
sub
xchg
xor
mov
push
mov
adc
jecxz
nop
jmpw
loope
jae
mov
xchg
inc
sbb
stos
fs
lods
pop
fsubs
xchg
sbb
inc
pushf
pop
mov
sbb
cmp
push
je
xlat
sbb
mov
dec
stos
mov
subb
dec
adc
jno
mov
ss
ret
jbe
and
fiadds
ljmp
inc
push
cmp
mov
testb
adc
add
jmp
test
sbb
mov
pop
in
adc
imul
mov
sub
inc
lock
aam
pop
lea
and
fisttpl
mov
sub
inc
lahf
push
aaa
addb
in
xor
cmp
cvtdq2ps
dec
lahf
decl
ret
aaa
addb
lret
mov
adc
add
mov
sbb
add
setbe
add
sub
and
ss
cs
push
push
fcmovnb
xchg
xchg
push
in
mov
xor
imul
insl
mov
push
xchg
ret
repz
loop
inc
int3
adc
sbb
clc
jmp
filds
jl
mov
or
es
or
sarb
mov
push
loop
mov
shrl
out
xchg
arpl
xor
loop
mov
sbb
dec
icebp
xchg
nop
int3
je
mov
sbbb
mov
xchg
filds
out
clc
shl
lods
rcl
add
pop
pop
mov
adc
or
jg
enter
push
xor
shlb
sub
adc
lret
loope
or
and
test
cmp
lret
pushf
and
mov
or
mov
jno
iret
out
shrl
mov
outsb
int
ficomps
mov
sti
leave
push
pop
fwait
pop
jno
inc
xor
and
and
es
movsb
popa
pop
add
xchg
push
push
push
or
pop
mov
aaa
mov
jbe
adc
ja
scas
inc
incb
adc
and
mov
sbb
push
movsl
xor
aam
mov
mov
shlb
push
xor
addr16
pop
popa
mov
pop
repz
cmpsl
push
adc
sbb
addb
rorb
mov
push
and
into
xor
xor
xchg
ds
jb
mov
pop
mov
xchg
pop
repnz
push
out
jge
add
adc
insb
daa
aaa
mov
int3
test
test
sub
jbe
loopne
sbb
mov
jo
fnstenv
mov
inc
pop
xlat
lcall
mov
inc
roll
idivb
push
mov
push
pushf
stos
into
and
mov
add
xor
jecxz
cwtl
setge
das
xor
out
add
jecxz
fsub
fidivrl
pop
pop
ret
mov
or
inc
push
cmc
cmp
jnp
rclb
test
arpl
mov
inc
and
hlt
repnz
push
cmp
and
pop
sahf
imul
inc
mov
xchg
push
pop
fisubrl
sbb
add
in
add
lods
push
subb
pop
dec
arpl
sub
sub
jae
add
sbb
popa
push
sti
mov
xchg
stos
imul
mov
out
sub
push
xor
loop
movsl
fcompl
int
mov
sub
or
cmp
xor
jnp
and
sahf
push
mul
pop
mov
into
xchg
es
cmp
xor
or
adc
jmp
das
add
push
int3
cmp
scas
push
cwtl
cmpxchg
push
jle
std
mov
cltd
arpl
mov
fmull
or
push
or
add
sahf
jge
aaa
add
cmp
outsl
or
mov
add
jo
cmp
fimuls
add
out
mov
cmp
scas
js
jne
outsb
mov
xor
pop
mov
xchg
sub
push
push
mov
das
pop
into
sbb
dec
jne
push
fsubrs
mov
hlt
mov
test
mov
addr16
into
addr16
mov
cmp
push
dec
shll
and
jp
mov
nop
pop
hlt
data16
cmpb
jecxz
insb
jo
fwait
cs
cmp
push
cmp
pop
adc
sahf
jle
push
sahf
inc
adc
mov
sub
sbb
cmpsb
jp
loop
sub
cmp
aad
mov
pop
loopne
jle
mov
lock
mov
enter
fnsave
lods
jle
scas
dec
pop
cwtl
pop
shlb
test
xor
ss
leave
ds
pusha
pushf
ja
pop
xlat
movsl
jbe
add
add
movl
enter
push
mov
inc
jp
add
insb
js
jno
pop
mov
testl
icebp
inc
idivb
adc
pop
jbe
shrl
mov
imul
jmp
ficoms
fldcw
pop
loopne
adc
daa
arpl
imul
pop
push
inc
stc
adc
adc
adc
mov
gs
cmpsl
dec
mov
or
jb
jbe
int
fists
xor
lcall
test
iret
mov
std
out
jl
adc
ja
mov
test
jg
outsl
fimull
push
cmp
xchg
fbstp
enter
xor
in
and
scas
lods
xlat
mov
int
push
out
jno
popa
xchg
jbe
loop
fwait
xchg
ret
xor
xor
cmp
mov
or
xchg
sub
addl
xor
idivl
pop
fidivl
rorb
andb
rolb
cmpsb
scas
push
sbb
stos
ja
mov
mov
stc
push
mov
xchg
test
mov
sub
jbe
mov
imul
mov
mov
dec
dec
add
cmp
inc
loopne
jecxz
dec
sahf
movsl
cmp
lcall
or
and
repz
cli
stos
out
inc
out
dec
add
mov
dec
sub
mov
test
scas
fs
fstps
jne
and
sub
loop
nop
shrl
xor
xchg
dec
jg
fcomp
icebp
int
outsb
add
enter
sbb
cmp
sahf
push
flds
nop
loop
jge
loop
inc
jns
aam
das
xor
push
xor
pop
in
mov
xor
lods
imul
fisttpl
xor
sub
pop
add
pop
cltd
repnz
cld
mov
inc
in
jno
fcmovnu
dec
shll
std
cmpsb
jecxz
addr16
jge
xchg
lock
fwait
es
cli
mov
inc
je
aaa
ret
mov
xchg
mov
cmpsb
cmp
jp
sub
popf
leave
mov
mov
mov
mov
fcmovb
sub
stos
pop
push
mov
test
notb
adc
jns
dec
mov
enter
or
adc
ja
cmc
inc
push
jl
daa
mov
jbe
pop
jl
mov
idiv
and
push
xchg
xor
fmuls
es
push
cmp
stos
in
push
nop
hlt
ret
cmpsb
in
shl
cltd
add
mov
sbb
loopne
pop
int3
leave
jg
loop
sti
jg
arpl
and
push
aam
ucomiss
not
fwait
loope
imul
add
movsl
mov
ljmp
push
notb
mov
xor
aam
inc
jmp
push
cmp
dec
jae
js
shll
mov
out
popa
pusha
push
adc
in
ja
fdiv
cs
xchg
shll
fadd
adc
ljmp
pop
dec
jle
rcrb
rolb
mov
ficomps
cmpl
xchg
out
mov
inc
in
sbb
sbb
ljmp
and
mov
add
lock
fwait
push
rcrl
rorl
and
dec
flds
clc
pushl
leave
inc
cltd
mov
loop
mov
fs
lcall
add
jnp
rcll
push
jp
dec
mov
test
sarb
pusha
push
cli
cmpl
and
pusha
add
dec
out
and
xchg
loope
test
shlb
jno
aam
cmpsl
sti
or
in
mov
jo
jo
push
pop
push
jle
and
and
mov
leave
jp
rcrl
mov
pop
jb
je
sub
lret
punpckhbw
ja
push
mov
test
xchg
mov
leave
sbb
aam
inc
ljmp
roll
rcl
add
dec
jae
test
dec
adc
fcomip
xor
cmp
in
inc
or
inc
push
in
jne
call
leave
pop
movsl
sti
movsb
mov
inc
or
add
dec
adcl
cmp
ret
inc
arpl
push
outsl
psubb
jmp
js
and
sub
iret
jle
mov
repnz
int3
lret
mov
mov
sbb
mov
scas
pop
enter
mov
inc
push
dec
inc
mov
cwtl
and
pop
int
jnp
mov
and
bound
add
inc
xor
xchg
jb
xchg
sub
fwait
dec
fiaddl
out
leave
xlat
int3
mov
out
iret
popa
movsb
adc
cmp
sub
jb
loop
xchg
lret
scas
mov
popa
cmp
jne
push
push
add
es
cmp
ja
int
pusha
lods
jae
fwait
mov
mov
shl
xchg
imul
out
mov
inc
movsb
shl
test
mov
mov
ja
cli
or
loop
addr16
mov
int3
mov
aas
enter
mov
cld
mov
sahf
addr16
popf
jno
into
jb
mov
test
bound
add
inc
or
sbb
fildll
dec
cmp
testl
mov
jnp
add
xchg
push
pop
cmp
or
xor
sub
inc
testl
jne
jg
pop
push
das
xor
sbb
mov
clc
mov
es
outsl
sbb
inc
push
xchg
pusha
sbb
jo
aas
out
hlt
adc
jecxz
pop
cli
inc
cmp
xchg
repz
imul
adc
mov
dec
inc
mov
jb
imul
dec
or
cmpsb
ret
or
dec
popa
push
and
lret
andl
leave
repz
and
jbe
dec
cmp
dec
jae
popa
sbb
ja
lds
repz
outsb
xor
mov
and
scas
rorb
and
dec
sbbl
add
push
fsub
adc
jge
sahf
insl
roll
push
xor
push
sbb
iret
jbe
sbbl
les
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
