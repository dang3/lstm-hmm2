ds
inc
and
cmpsl
rol
cmpsl
sbb
sbb
sbb
push
push
xchg
adcb
rcl
out
mov
movsb
sbbb
mov
call
mov
bound
fiadds
or
dec
gs
pop
orb
mov
jle
les
fwait
out
bound
pop
xchg
loopne
sbb
inc
imul
adc
mov
sbb
fnstsw
leave
pop
int
das
aad
push
pop
mov
xor
or
out
scas
push
push
dec
or
fs
adc
sbb
leave
sbb
out
jo
push
jle
addr16
mov
adc
push
das
loop
in
fldl
icebp
shrb
call
push
mov
stc
mov
iret
cmpsl
mov
shrb
cmp
ret
pop
imul
out
sti
push
dec
fwait
add
arpl
into
mov
aas
int
pushf
jmp
jmp
adc
call
inc
adc
insl
xor
je
sub
mov
fwait
idivl
sti
nop
jecxz
xchg
push
adc
nop
inc
mov
jae
mull
jge
mov
fisttpll
inc
add
xor
adc
loope
loopne
out
mov
ss
or
pop
pop
cwtl
std
jecxz
mov
push
push
xor
lret
push
aad
and
cmc
mov
push
bound
jp
push
xchg
mov
cmp
xor
insb
hlt
std
sub
ds
loope
sbb
pushf
mov
out
in
adc
push
mov
idivb
adc
test
sbb
push
es
xor
fmull
push
test
or
nop
lods
add
lea
inc
ds
rorl
sub
mov
mov
push
push
or
xor
insb
lahf
cmp
sahf
pop
sub
sahf
cmovp
add
rorl
in
das
sub
xlat
ss
outsb
mov
and
and
js
pop
xchg
mov
inc
movsl
inc
jg
sbb
add
pushf
push
aad
pop
xlat
jge
movsb
arpl
enter
fimull
aaa
call
jmp
insl
cwtl
sahf
loop
je
mov
out
adc
scas
mov
xchg
jae
push
ret
scas
dec
cltd
mov
fwait
ds
mov
xchg
add
push
inc
andl
push
cmp
push
insl
cmpsb
addb
sub
fwait
out
fsubl
push
jbe
cld
incb
pop
in
fnstsw
jp
pop
sbb
and
stos
jbe
cmc
push
mov
int
data16
loope
lods
mov
or
fldcw
pop
test
xor
in
and
insl
fsubrl
xchg
ja
js
cmp
enter
into
sarl
xchg
mov
std
mov
insb
jge
roll
xchg
dec
loop
add
sbb
jns
push
sarb
push
xor
jno
jecxz
stos
cmp
mov
lock
and
fwait
rcrl
mov
sub
mull
sub
cmp
hlt
dec
sbb
mov
cmp
int
mov
call
hlt
pushf
push
aad
mov
dec
daa
xor
and
sbb
outsb
or
aam
ror
xchg
mov
cmpsl
fisubrs
xor
push
dec
pushf
test
fs
cmp
jb
inc
js
lahf
cmpsb
cwtl
loop
sahf
jecxz
sbb
xchg
mov
xlat
pop
or
push
xchg
mov
jne
das
mov
ljmp
mov
inc
adc
mov
in
jae
jbe
subl
ret
fcomps
cmpsl
repz
adc
xchg
mov
inc
sbb
scas
nop
in
and
pop
jbe
ds
adc
in
fsts
rcrb
dec
xlat
dec
lret
jns
iret
mov
cs
or
xor
out
mov
and
inc
cmpsl
mov
cmpsb
je
stos
jmp
dec
sarb
test
int
mov
fs
dec
pusha
xchg
add
cltd
mov
icebp
sti
mov
push
sbb
mov
inc
and
sbb
flds
jmp
rcl
outsb
rcrl
pop
sub
mov
inc
test
cmpsb
pop
dec
popf
push
dec
in
mov
pop
jecxz
inc
rcr
push
and
cwtl
dec
dec
adc
dec
lds
xor
xchg
push
es
sub
fisubrs
inc
add
cmpsl
aam
in
or
leave
lret
aaa
pop
movsb
es
mov
jno
into
adc
fwait
and
pop
mov
loope
or
mov
or
or
xor
insb
fiadds
push
jne
xchg
xchg
gs
mov
roll
adc
imul
or
filds
bound
orb
in
push
lods
js
mov
lret
pushf
or
adc
push
inc
xor
push
out
andb
lods
sti
jl
aas
sti
fs
inc
lret
xor
cmpsl
jp
pushf
push
jl
addl
mov
iret
aas
cli
xchg
icebp
cmp
dec
shr
mov
pop
out
leave
push
je
sub
int3
push
sub
aad
xchg
int
mov
pop
add
mov
sbb
jnp
leave
das
inc
lret
call
sub
mov
dec
cmpsb
mov
cmp
lods
mov
test
into
std
ja
xchg
xlat
cli
jge
jo
insl
ret
sti
aam
jo
push
push
push
and
pop
ss
cltd
xchg
xor
pushf
loop
stos
arpl
lods
lahf
std
int3
inc
lret
or
pop
mov
xor
or
push
in
cmp
inc
dec
out
and
mov
loop,pt
and
ret
push
enter
fs
jne
dec
aad
inc
adc
fs
xchg
jo
jnp
aam
aam
call
imul
jbe
xchg
cltd
std
pop
jl
adc
and
fs
sub
lds
sbb
scas
xchg
aad
jae
mov
fucomip
cli
jns
daa
icebp
cmpl
dec
aam
xchg
sub
cmpsb
rorl
test
and
std
pusha
sbb
ljmp
adc
inc
xchg
push
mov
pop
inc
dec
add
movsl
lret
xchg
int3
dec
addr16
ja
test
fnstsw
xchg
pop
push
lds
add
cmp
pop
gs
xor
pusha
mov
aad
leave
dec
out
and
sahf
cmc
inc
in
in
in
ss
push
out
in
jnp
pop
rolb
fwait
jb
dec
mov
fdiv
push
repz
outsl
mov
jno
cmp
dec
enter
sbb
loop
dec
sahf
mov
or
repnz
repz
shrl
mov
movsb
data16
ja
test
ljmp
les
adc
shr
ja
stc
rorb
mov
insb
pop
iret
pop
push
jg
ror
mov
push
mov
fstpl
in
fcmovnbe
xlat
cmp
pushf
sarb
fisttps
add
mov
pop
push
or
adc
insl
mov
pop
out
jg
adc
xorl
pusha
pop
push
pop
push
mov
sbb
mov
insb
fxch
mov
mov
pop
push
insb
mov
dec
arpl
popf
rcll
jle
sub
rclb
hlt
rclb
push
fcomps
scas
repnz
clc
bound
insl
cmp
ret
dec
xchg
pop
bound
arpl
mov
mov
pusha
xchg
cmp
pop
pop
out
push
xchg
mov
inc
movsb
mov
fs
divl
out
push
mov
xor
adc
rclb
movb
pop
sbb
scas
std
ret
xchg
iret
mov
xchg
adc
iret
jb
xchg
push
adc
ds
pushf
lods
addb
fistpl
js
mov
enter
outsb
mov
inc
xor
es
cltd
in
stos
or
mov
adc
popf
push
xchg
sbb
jge
dec
or
data16
jl
dec
lcall
inc
loopne
mov
orl
stos
jmp
inc
sub
out
inc
test
sbb
ja
mov
js
andb
adc
insl
xor
sub
fst
xor
rcll
or
in
leave
sbb
dec
push
adc
push
pop
mov
jp
mov
outsb
sbb
in
aas
out
xchg
sbb
cmp
lods
clc
xchg
pop
sub
add
or
fadd
lds
dec
add
ret
lods
sbb
nop
sbb
push
ret
mov
pop
movsb
lods
dec
inc
daa
mov
bound
jp
sub
jo
add
fildl
sbb
dec
shll
cmp
xchg
adc
jmp
mov
dec
dec
push
fstl
stos
fwait
xchg
stos
lods
mov
sub
outsb
cmc
xor
dec
mov
in
or
pop
repz
jge
push
push
mov
popf
cmp
leave
xchg
and
jle
jecxz
jne
push
je
stos
es
add
loopne
xor
in
mov
dec
add
mov
mov
mov
adc
lret
and
dec
mov
mov
pop
test
lds
push
push
inc
push
cs
shl
jmp
push
sub
jle
sub
mov
cmpsl
scas
xor
fisttpl
or
push
out
in
pop
jmp
cltd
dec
ret
xchg
xor
int
mov
pusha
adc
aad
div
fs
push
fistl
jge
lds
rorb
push
test
dec
push
add
rorb
and
mov
adc
mov
mov
bound
popf
mov
test
mov
xchg
pop
pop
add
test
mov
hlt
push
xchg
scas
pop
pslld
inc
hlt
push
stos
inc
cmp
push
jp
push
xchg
mov
movl
test
cmpsb
arpl
movntq
inc
push
inc
inc
mov
mov
inc
lret
mov
inc
aam
xchg
sub
mov
repz
loop
cmc
fdivp
cmpsl
pop
aas
aaa
adc
mov
les
mov
lcall
js
inc
mov
adcl
stos
in
movsb
pusha
sbb
mov
mov
xlat
inc
pop
out
jmp
add
les
and
icebp
sbb
lea
mov
sub
cld
bound
lds
ljmp
sub
adc
xchg
cmc
lcall
sbb
xor
shll
push
sub
pop
cwtl
loope
daa
mov
xchg
mov
sub
hlt
aas
pop
out
lea
jnp
ss
hlt
and
in
mov
inc
das
shlb
mov
inc
jnp
out
push
push
inc
movsb
repnz
jnp
stos
aas
insb
jmp
subl
mov
les
cmp
sbb
out
xor
push
add
push
clc
push
add
and
mov
loope
dec
jge
sbb
sarb
xchg
lods
in
mov
call
popf
jle
out
sub
sbb
int
stos
and
dec
dec
sub
jp
repnz
and
cmc
rcrb
cmp
mov
mov
and
arpl
inc
or
fs
lods
dec
push
cmp
cmp
je
test
enter
in
mov
cmp
pop
sti
sbb
mov
cmp
mulb
push
mov
mov
cltd
sbb
movsb
push
roll
cltd
lea
sbb
fsts
inc
or
in
sbb
xorb
mov
dec
inc
sbbl
sub
stc
scas
add
xor
test
into
dec
xor
repz
xchg
push
push
nop
pop
sbb
mov
and
leave
push
shrb
arpl
cmpsl
pop
aad
sahf
mov
add
push
xlat
pop
inc
pop
repnz
inc
pop
cmc
ret
xchg
push
or
sbb
inc
pop
clc
mov
sarl
push
sub
push
sete
jp
in
cmovns
xchg
aas
jmp
insb
push
jnp
push
adc
popf
daa
aad
int3
lret
adc
adcb
sbb
mov
push
int
mov
loop
dec
pop
orb
xchg
mov
arpl
and
stos
mov
stos
mov
shlb
push
adc
jge
iret
cli
pop
push
test
test
arpl
scas
pop
and
enter
push
lcall
mov
and
inc
out
loopne
int
mov
pop
push
rcr
jae
pop
cwtl
pop
or
outsl
stos
mov
ret
subl
and
sub
cmc
js
add
jnp
ljmp
aad
mov
inc
mov
adc
iret
fistps
pcmpeqb
inc
add
push
mov
mov
pop
jg
roll
add
shlb
cmp
mov
and
aam
or
movb
lahf
cmpsb
jecxz
popa
in
xor
int3
pop
aad
lahf
sahf
xor
dec
scas
lds
and
inc
mov
in
add
rcll
js
cmpsb
add
dec
sub
mov
cld
pop
inc
cmp
jbe
add
test
fdivs
cld
push
and
push
aas
adc
inc
jmp
popf
cmpsl
inc
mov
jg
pop
mov
out
imulb
rcrb
mov
sub
cmp
push
adc
aad
test
jg
jmp
and
adc
ret
out
adc
xchg
jmp
mov
cltd
lock
pop
mov
mov
lock
mov
popf
das
outsl
inc
add
dec
cmp
mov
cmp
dec
mov
mov
fsts
outsl
lret
sub
inc
mov
xlat
xor
adc
and
pop
cli
ss
aam
sub
sbb
hlt
loop
xor
inc
adc
lcall
inc
test
cld
loop
in
push
gs
adc
incl
xchg
flds
inc
mov
adc
into
inc
cmp
inc
in
or
sbb
pop
fs
aas
pop
outsb
pop
cld
or
inc
inc
ret
roll
sbb
imul
das
leave
lods
jmp
lahf
jp
adc
fdiv
cmp
pusha
mov
mov
std
push
mov
lods
dec
mov
dec
icebp
cld
xlat
pop
daa
sbb
testl
lret
cld
imul
mov
mov
add
addl
mov
jns
or
ja
sbb
inc
addr16
filds
mov
xor
out
fbld
inc
sbb
mov
xchg
enter
fdivrs
das
mov
xchg
faddl
shrl
jge
or
pushf
xchg
push
fs
clc
add
punpckhbw
movsb
arpl
fldpi
fsubrl
stos
jl
jns
mov
cli
scas
and
cwtl
ljmp
js
out
outsl
cmp
dec
push
cmpsl
sbb
dec
popa
push
sub
xor
fistpl
fildll
sbb
push
shll
adc
lcall
jl
jmp
mov
lret
cmpsl
adcb
iret
mov
push
jge
push
mov
mov
dec
pusha
loope
popf
pop
out
add
sub
lock
dec
insl
add
scas
in
icebp
rcr
jp
mov
fs
push
popa
or
and
xor
add
mov
inc
testl
sub
sub
clc
xchg
mov
test
nop
fucom
pop
nop
mov
pop
movsl
jle
stos
ficomps
cmpsl
pusha
or
call
icebp
dec
mov
iret
test
out
gs
mov
pop
push
add
cmp
inc
mov
bound
int
subb
mov
xor
js
lods
mov
mov
fists
push
jbe
sub
movsl
cld
add
clc
sarl
rorl
les
loop
push
sti
in
and
mov
or
sub
out
adc
mov
pop
lea
jae
out
je
ja
js
xchg
rep
ret
mov
push
fisttpll
punpckhdq
and
adc
add
call
lahf
sti
sbb
jmp
outsb
inc
fcoml
fdivrl
mov
or
jns
test
pop
in
xchg
mov
hlt
cmpsl
and
ss
testl
inc
ss
jl
dec
ret
dec
jb
pop
xchg
movb
mov
pop
popf
jp
aas
push
mov
imul
nop
mov
mov
mov
popa
cli
adc
xlat
loopne
loopne
js
leave
pop
ret
sbb
adc
outsl
push
inc
push
cld
pop
xor
loop
call
push
sub
dec
xlat
out
cli
xor
jge
lret
in
xor
add
xchg
fstl
cs
inc
je
outsl
mov
cmpsb
pop
gs
shlb
ds
pop
inc
into
jmp
xor
shlb
popa
mov
pop
ret
mov
sub
ds
je
faddl
xlat
jae
sarl
push
cmpsb
shll
lret
xor
movb
dec
pop
stos
lret
lods
push
ss
lods
jo
cmc
add
cs
mov
imul
sbb
lods
inc
jmp
lret
jnp
inc
mov
jbe
addr16
adc
inc
dec
pusha
dec
loope
xchg
add
cwtl
aaa
addl
inc
jbe
push
mov
xor
loopne
or
xorl
jo
movsl
mov
and
daa
sub
adc
fnstsw
sub
push
adc
aas
and
xchg
xchg
ret
insl
dec
mov
sbb
pshufw
lea
mov
mov
fwait
jge
popf
stos
aad
sub
sub
shl
dec
and
test
subl
or
jle
xchg
incb
aam
out
xlat
xchg
popa
gs
les
fdivrs
sub
mov
sub
nop
lcall
ror
push
test
jo
add
add
cmp
enter
aas
xchg
sbb
sub
mov
iret
adc
or
inc
daa
ljmp
fimuls
nop
ljmp
inc
mov
lods
ljmp
push
mov
pop
stc
stos
lret
lods
call
sbb
jb
push
cmpl
push
mov
jo
int
das
fstps
rorb
popf
sbb
jg
fiadds
pop
les
lods
aad
pop
or
push
adc
lcall
dec
stc
and
dec
pop
xchg
adc
xchg
inc
or
leave
xchg
push
insl
jecxz
cmc
push
fs
mov
sbb
lea
xorl
clc
mov
push
movsb
sub
dec
adc
push
mov
pop
jle
xchg
inc
cmp
mov
pop
mov
cmp
lods
pop
rcrl
repnz
add
add
xor
and
aas
sarb
mov
mov
jp
cmp
fstps
fbld
hlt
out
out
fists
dec
mov
rcrl
xchg
fwait
test
pushf
test
jne
mov
sub
test
mov
mov
dec
repnz
sub
stos
into
inc
int3
jbe
sbb
mov
lahf
out
mov
out
push
in
sub
dec
cmp
es
jl
mov
jnp
mulb
cs
int
inc
pop
add
sti
push
mov
mov
mov
mov
jge
dec
pop
cld
shrl
mov
in
dec
jo
and
std
add
pushw
jecxz
clc
jle
sub
sbb
dec
mulb
imul
inc
cli
mov
lcall
add
enter
mov
push
jp
mov
hlt
movsb
dec
mov
sbb
ret
subb
insl
xor
and
imul
jb
test
adc
sub
div
jnp
mov
sub
mov
sub
iret
cmp
sub
adc
cmp
and
and
mov
faddp
lock
adc
or
push
decl
incb
adc
rolb
inc
lcall
mov
sub
loopne
into
fnclex
je
xor
mov
pop
inc
and
popf
test
out
sbb
sbb
jnp
lcall
mov
push
mov
dec
test
test
lret
movsb
aad
pop
pop
imul
insb
addr16
cmp
jmp
test
sti
jge
push
jecxz
lcallw
dec
add
mov
pop
out
test
xlat
fwait
imul
pop
or
shll
inc
adcb
aas
xor
int
cli
inc
or
and
xor
repz
outsb
dec
and
inc
lods
sbb
loopne
out
cmp
pop
pop
es
aas
add
jbe
push
test
sbb
cmc
in
loopne
xchg
fisubs
addr16
jl
andl
mov
add
sti
out
addr16
mov
dec
pop
adc
aam
push
gs
add
and
or
test
sub
call
xchg
scas
and
stos
fbstp
jmp
mov
add
testl
mov
dec
cli
fidivrl
iret
or
mov
xlat
add
sub
or
cmc
imul
cmpb
fists
mov
popf
loope
in
mov
mov
clc
repz
iret
mov
fwait
add
inc
pop
xor
inc
movsb
jae
sbb
jmp
out
mov
xchg
iret
or
mov
add
cmp
xchg
cmp
jge
lods
out
iret
mov
int
insb
out
pushf
inc
stc
fwait
lahf
popf
loop
or
das
jmp
mov
xor
ds
sbb
dec
negl
mov
ret
std
ret
jl
adc
xchg
sub
push
sbb
repz
sub
test
mov
pop
mov
dec
imul
out
loopne
out
das
or
les
inc
jns
push
xchg
out
inc
cli
adc
aad
bt
jge
adc
lea
rolb
sub
mov
das
xchg
jo
subl
insb
sbb
icebp
faddl
sahf
xchg
int
jno
aad
cmp
es
push
out
int
into
xor
push
mov
in
movsl
sbb
mov
jb
mov
cmp
cmp
pop
mov
int3
out
cmpsl
xchg
mov
xchg
notb
mov
pop
cwtl
add
lea
mov
jmp
notl
ja
pop
fwait
gs
and
icebp
fnstsw
lret
jo
icebp
mov
fstl
imul
or
cmp
jo
cmpsl
popa
cmpsb
data16
add
jo
test
mov
sti
int3
into
push
xchg
bound
pusha
push
sub
push
dec
or
cmp
mov
lods
je
xchg
bound
push
and
mov
xchg
lret
xchg
test
sbb
ret
das
xchg
imul
sti
mov
test
gs
dec
shl
jbe
xor
pop
test
clc
decb
fcomip
aam
shll
add
xchg
inc
mov
lods
sbb
sub
xchg
shr
dec
aad
mov
es
out
aam
mov
jecxz
and
test
cmp
inc
dec
ret
inc
pop
test
stc
push
adc
testb
out
mov
jne
popa
sub
repz
mov
fwait
ds
repnz
dec
loopne
ret
lock
stos
pop
jnp
lods
outsl
adc
cmp
shlb
loope
leave
xchg
gs
or
aad
mov
cmp
push
aad
pop
enter
cld
mov
lods
dec
dec
cmp
gs
rclb
ficoms
test
pop
push
pop
and
xchg
xchg
mov
fwait
je
lea
nop
iret
clc
xlat
imul
clc
xchg
jne
adc
je
pop
jle
imul
sbb
mov
mov
mov
mov
add
aad
dec
mov
push
mov
jmp
jno
movsl
les
xor
or
adc
pop
push
push
dec
mov
cmp
push
dec
jl
hlt
fisttps
in
and
xchg
xchg
nop
pop
mov
cmp
adc
jmp
mov
movsb
mov
mov
rcrl
mov
sub
sub
xor
inc
add
stc
adc
cs
movsl
push
xchg
and
mov
pop
sarl
icebp
xchg
sub
mov
fnsave
mov
gs
lods
sub
lods
lcall
jnp
ficoml
cmp
and
loope
sbb
push
mov
add
pop
inc
popa
sbb
mov
insl
ss
shr
lret
insb
ret
add
in
pop
dec
xchg
push
mov
mov
push
inc
cmc
out
xor
ds
mov
jno
or
es
sti
addl
inc
mov
rolb
and
shll
jno
out
or
pop
cmpsl
int3
ja
inc
outsb
jle
adc
int
lcall
pop
add
jle
cmpsb
pop
mov
sub
cmp
xor
stc
jge
mov
sbbl
cmpsb
aam
sbb
mov
pop
mov
mov
add
and
pop
mov
dec
gs
mov
roll
pop
int3
pushf
cld
ds
sub
pop
sub
into
into
jge
add
pop
lahf
jae
mov
pop
inc
sbb
adc
out
adc
ret
testl
je
or
cmc
push
and
mov
or
lods
sarl
in
fwait
ds
ds
data16
out
lret
rorl
pop
push
into
or
and
movsl
rcr
xchg
lods
inc
sub
outsb
pop
and
insb
push
jnp
test
dec
cmpsl
popa
fmuls
or
sahf
push
push
rcll
xchg
xchg
and
scas
cwtl
int
je
mov
sahf
repz
cli
icebp
stc
mov
inc
ds
xchg
into
fsts
test
jl
and
bound
mov
xchg
cmpsl
push
or
xorl
decb
inc
xchg
sbb
nop
pusha
orb
out
and
xchg
aad
pop
xor
cld
push
adc
fwait
ror
sarl
jae
lods
stos
dec
fidivl
popa
test
jmp
jmp
sbb
or
inc
dec
xchg
dec
lahf
inc
cmp
pop
test
pop
or
pop
int3
mov
sub
int
xchg
inc
cmp
js
outsb
adcb
fisubs
or
int3
pop
aad
loop
sub
xor
jne
inc
fdivrl
inc
insb
jl
or
int
daa
arpl
lds
mov
aam
jle
mov
popa
push
inc
dec
add
push
cltd
stos
ficomps
iret
scas
loop
inc
push
dec
mov
mov
push
gs
ret
mov
push
test
pop
lcall
call
lods
sbb
mov
mov
or
pop
test
mov
jp
mov
push
sub
push
dec
sub
adc
jae
fstps
mov
sbb
scas
arpl
inc
mov
jno
in
int
xchg
xlat
adc
xor
xchg
clc
fdivrl
rcr
rclb
aad
dec
and
or
push
dec
mov
inc
xor
xor
les
xor
sbb
and
pushf
xlat
pop
jge
cmpsl
inc
push
out
cltd
or
and
add
faddl
adc
lret
daa
inc
test
pop
dec
imul
pop
sarb
idivb
sub
cmpsb
inc
loope
jp
xorb
addb
mov
mov
fcomi
lock
loope
pop
jne
jo
pushf
jp
push
mov
xchg
mov
movsl
sub
jnp
clc
sbb
jp
adc
adc
and
or
into
pop
push
mov
loope
lds
dec
jge
xor
pop
sbb
xchg
dec
repnz
ja
imul
adcb
pushf
stc
sub
fs
pop
ret
aaa
xchg
mov
mov
dec
dec
mov
mov
aaa
iret
inc
cmp
xchg
outsb
js
test
in
push
push
jp
or
sub
enter
fstp
lcall
outsl
jmp
loopne
jb
cltd
adc
xchg
push
cmpsb
pop
jnp
dec
mov
cld
inc
loopne
bound
in
je
pop
ret
mov
enter
mov
or
movsb
xchg
jae
lods
adcb
cwtl
inc
out
mov
sbb
sahf
stc
in
outsb
fs
add
or
mov
or
cmp
stc
jbe
mov
aad
xor
in
xor
jecxz
xchg
sbb
push
jle
mov
loopne
test
push
mov
push
int
xchg
mov
loop
es
push
shl
or
xor
push
inc
shlb
movsl
test
insb
pop
shrl
bound
call
leave
leave
or
dec
push
mov
loope
sub
and
rcll
mov
outsl
test
xor
inc
loop
and
sbb
lds
andl
mov
pop
inc
popfw
fidivs
rcr
add
ret
push
stos
add
dec
jge
inc
push
jle
dec
outsb
mov
stos
outsb
shr
lock
out
mov
xor
hlt
inc
mov
mov
add
cltd
rcr
cmpb
fbld
add
cmp
hlt
dec
jno
and
out
lret
bound
ss
jbe
ss
or
cli
sbb
pop
nop
jle
repz
rcr
sbb
xchg
sub
scas
add
pop
ljmp
outsb
dec
inc
adc
inc
daa
sbb
pop
mov
ds
lods
fisubrs
scas
lret
sbb
imul
lret
test
int3
adc
adc
inc
jp
push
fidivrl
dec
js
outsb
xor
xchg
push
popa
jecxz
insb
xor
and
and
aas
cmpsb
dec
outsl
ss
or
inc
aam
loopne
cmp
aam
sub
pop
insb
add
jp
aaa
inc
int3
insb
call
daa
and
mov
add
call
cmp
push
jnp,pt
daa
test
adc
outsb
xchg
addr16
jmp
add
stos
push
in
jo
fstl
stos
push
inc
addps
and
movsb
int3
js
out
repnz
push
in
add
cmp
sbb
jno
jl
jnp
dec
movsl
or
scas
or
cltd
outsb
jne
pop
push
dec
lcall
mov
stos
repz
push
ljmp
rcll
mov
test
sbb
mov
stos
sbb
in
lock
clc
in
ss
jae
cmc
jp
popa
push
icebp
fldcw
and
fcmovnu
subb
outsb
jmp
clc
add
insl
jl
ret
es
adc
xor
std
pop
stos
jbe
hlt
add
loope
shl
fs
push
xchg
scas
arpl
pop
xchg
mov
sbbl
mov
fcomps
hlt
loopne
xchg
sub
lds
and
adc
rcll
push
jae
out
outsl
movb
daa
imul
in
ret
mov
mov
imul
xchg
cli
imul
mov
fcoms
cmc
and
shr
and
aas
and
enter
out
sub
jne
adc
add
cmp
fmuls
jnp
jp
repnz
jl
loop
lods
mov
or
sahf
push
mov
pop
mov
popf
std
xchg
shll
jo
insb
mov
inc
fldenv
mov
in
inc
or
jecxz
rcl
cmp
mov
and
push
es
and
fldl
in
mov
aaa
push
sbb
mov
ds
lcall
jp
enter
push
mov
or
xchg
fwait
sub
out
adc
xchg
arpl
mov
and
cmp
inc
mov
xor
push
pop
sub
mov
fcmovu
add
dec
or
rol
lret
dec
jmp
psubd
test
scas
adc
adc
jno
imul
xor
sbb
push
and
adc
push
mov
or
stc
xchg
xchg
data16
cmp
dec
and
or
cmc
mov
fstpl
pop
out
js
xchg
lods
ja
lock
sub
inc
loopne
mov
out
push
enter
push
scas
sub
pusha
pop
xchg
lret
jl
sbb
push
mov
sahf
cmpsb
in
lret
pop
incl
outsl
roll
enter
push
cltd
jae
std
test
inc
lods
and
xchg
imul
cmp
jno
xchg
pop
cmp
cmp
jnp
push
pop
out
pop
jle
jno
roll
cs
and
mov
pop
stos
sbb
shlb
ficoml
pusha
lock
out
dec
sub
lods
mov
jae
xchg
pop
inc
jbe
adc
dec
cli
mov
sub
mov
int
fstpt
push
loop
outsl
push
scas
dec
inc
add
cltd
dec
xchg
xor
and
inc
imul
test
jl
inc
jmp
xchg
gs
add
or
push
inc
repz
lea
bound
test
push
jl
je
jae
pop
fwait
mov
pop
lret
lods
stos
cmpsl
cmpsl
inc
cld
push
fnstenv
jl
stos
jns
xor
add
call
mov
inc
ret
loope
lea
jge
fwait
jge
shrb
rolb
mov
push
test
inc
stc
out
xor
jae
xor
add
pop
mov
add
lock
loop
push
mov
mov
hlt
push
loope
loope
popf
mov
roll
and
test
mov
and
fs
out
xor
dec
aas
sub
lds
mov
cmpsl
aam
leave
inc
mov
jl
mov
push
sub
sbb
fstpl
add
in
add
test
enter
imulb
lds
mov
dec
in
in
sti
add
push
out
and
shrb
sti
push
dec
push
jecxz
or
mov
push
push
jecxz
dec
stos
out
push
mov
stos
daa
or
fwait
pop
and
lods
mov
pop
inc
sub
mov
mov
sbb
xor
inc
inc
or
das
fwait
xchg
arpl
rorb
and
int3
leave
sti
in
inc
push
adc
stos
cmp
lret
and
xlat
lea
sbb
aas
lea
jmp
cmp
outsb
mov
fwait
mov
sbb
and
jo
fdivs
sub
mov
inc
cli
movb
cltd
hlt
mov
andl
xchg
xchg
push
pushf
gs
aaa
fildl
les
push
adcb
and
jmp
or
int
aaa
sub
push
ret
scas
sub
xor
ficoms
out
jb
add
imul
jbe
jne
lods
and
sbb
loopne
mov
inc
pop
mov
push
xchg
sbb
inc
in
pop
popf
adc
mov
adc
pop
add
inc
loopne
dec
test
mov
lahf
pusha
scas
insl
cld
enter
push
int3
mov
icebp
inc
dec
jns
popf
mov
pop
mov
push
in
cmp
jl
cs
fcos
xorb
leave
ret
lods
xchg
or
insl
int3
mov
push
fidivs
out
dec
addr16
xor
std
and
mov
fildl
insl
stos
out
icebp
lea
scas
addb
pop
arpl
incl
mov
in
loopne
add
ja
scas
dec
int3
jno
xchg
pushf
scas
add
cmp
jno
jg
and
jmp
jb
sub
js
cmpsl
popf
adc
pop
or
inc
data16
and
push
shrl
push
inc
daa
xchg
inc
loope
mov
idivl
dec
mov
mov
incb
pop
in
imul
jg
addb
xlat
cmc
adc
outsl
imul
push
push
and
es
test
fsubl
cmp
adc
popa
and
xchg
and
sbb
leave
stos
insl
loop
mov
cmp
data16
pop
inc
push
fmuls
mov
mov
les
or
std
repnz
xchg
mov
sbb
fwait
cmpsb
addr16
mov
lcall
add
sub
or
dec
out
push
arpl
pop
outsl
pusha
shll
cli
inc
cmp
loope
xor
mov
call
test
sbb
or
out
jae
mov
cmp
mov
stos
movsb
test
jno
jnp
lcall
not
lret
mov
sub
fimull
xor
test
sahf
sbb
sbb
das
ss
pop
dec
daa
dec
nop
push
int
mov
mov
cmp
lret
ror
push
add
fs
fwait
nop
cmp
inc
mov
pop
subb
inc
sbb
and
loopne
inc
out
leave
jecxz
js
cmpb
orb
xor
dec
cmp
pop
mov
mov
pop
fimuls
xchg
sub
inc
sub
and
sahf
jg
jno
and
jle
push
shll
cmp
push
jb
inc
cmp
jl
aaa
es
dec
sub
xor
cltd
aas
pop
stc
cltd
push
test
inc
cmc
test
add
mov
mov
adc
arpl
push
test
pop
cmp
inc
inc
mov
lods
xor
test
push
mov
or
push
xchg
sbb
mov
jmp
mov
loop
push
test
in
mov
rcl
push
push
and
pop
mov
mov
rol
xor
inc
jne
mov
mov
jno
out
imul
ljmp
scas
xchg
add
popa
inc
fst
jge
add
jmp
push
mov
adc
mov
ret
dec
out
fsts
jmp
stos
js
inc
insb
ficompl
mov
jne
jnp
scas
sbb
mov
jnp
aas
sti
jp
nop
jno
cmp
outsl
xchg
into
push
sub
scas
pop
shrl
lods
popf
and
sahf
mov
jecxz
ss
call
mov
mov
lea
cmpsb
pushf
add
push
adc
mov
or
and
xor
mov
aas
repz
jecxz
aam
repz
call
int3
mov
dec
add
out
xchg
lods
into
mov
cwtl
gs
cltd
mov
nop
xor
dec
negb
xchg
lea
inc
mov
imul
lahf
sahf
ret
popf
adc
mov
in
out
push
lds
add
test
xchg
aam
add
lahf
push
out
or
pop
sbb
xor
sti
push
rol
sub
lret
jge
test
lahf
mov
iret
stos
mov
push
out
inc
push
xchg
push
sbb
adc
fistpll
das
xorb
bound
addr16
xor
mov
fxch
inc
inc
inc
into
push
cli
sbb
cmp
std
call
arpl
rclb
cmpsl
push
sub
add
xchg
in
insb
and
andl
or
inc
jl
andb
lret
pushf
push
std
sbb
fsts
mov
gs
adc
das
mov
mov
aam
jl
dec
ret
sbb
dec
addb
sahf
sub
test
gs
push
xor
sti
lahf
jae
sub
mov
sbb
xor
xchg
push
and
cmp
js
mov
lea
or
cwtl
dec
fidivrs
mov
jg
sub
fwait
mov
and
adc
lds
add
pop
fistpl
fs
js
xor
lods
pop
addr16
xchg
cmp
mov
xor
aad
push
fcoml
dec
inc
fnstenv
icebp
inc
pop
fildll
mov
mov
fwait
inc
loop
jbe
lret
cmp
sbb
insl
je
outsl
daa
popa
add
ss
test
hlt
mov
jae
mov
adc
fiaddl
xor
or
jne
fcmovnbe
jg
flds
cmpsl
push
push
scas
les
mov
nop
popf
xchg
dec
lods
lds
jbe
loop
push
clc
arpl
mov
push
dec
lds
out
data16
cmpsb
inc
test
es
stos
lods
cmc
data16
xor
nop
call
xchg
xchg
loop
mov
cwtl
lds
cmp
sbb
mov
mov
lea
in
data16
test
cmp
repz
repz
fimuls
icebp
jbe
pushf
mov
data16
es
xchg
aas
loop
pop
clc
mov
push
in
inc
mov
xor
jmp
jbe
xor
mov
test
lret
adc
cltd
sub
push
popa
cmp
pop
adc
dec
ds
add
pop
test
sub
loop
push
stc
and
lahf
sub
pop
andb
or
sti
lods
sub
icebp
sbb
sbb
es
mov
adc
or
scas
cld
je
cmp
call
in
mov
mov
out
adc
imul
pop
jne
ret
pop
aam
cwtl
pop
push
jl
adc
roll
adc
in
jns
scas
mov
push
out
push
ret
inc
cmp
aas
loope
xchg
inc
mov
outsl
stos
das
pop
in
lcall
push
push
cld
dec
or
or
push
mov
xchg
jmp
gs
aam
push
sbb
lahf
adc
vmovsd
dec
sbb
adc
xor
dec
popa
or
fildll
arpl
push
les
sbb
xor
push
and
push
add
push
addl
in
add
xor
jne
xchg
xchg
jmp
pushl
cld
adc
aam
fcmovnbe
loope
adc
jae
mov
insl
sub
enter
jbe
cmp
jb
fidivs
cli
dec
sbb
jno
inc
add
pop
push
and
shll
jg
add
add
repz
jmp
or
pop
shrl
fildll
push
cld
gs
jae
or
cmp
mov
inc
cs
rcll
out
imul
sub
sbb
movsl
test
push
cli
sub
sbb
pop
mov
addr16
mov
and
xchg
and
bound
sub
sub
lret
push
jns
cmp
fsubs
pusha
sbb
dec
ret
push
add
std
mov
fistpl
mov
push
insl
jnp
sbb
push
jno
je
xlat
shr
mov
cmp
mov
mov
je
adc
lea
mov
or
cltd
mov
loop
in
adc
lds
repz
insl
mov
push
inc
pusha
int
cmpsb
mov
mov
movb
test
std
cmp
sbb
and
cmp
lret
jmp
push
cwtl
cwtl
or
sbb
jle
arpl
dec
push
addr16
cmp
clc
mov
int
rclb
pop
popf
xchg
push
push
adc
insl
imul
xor
pop
and
mov
cli
mov
aas
aam
adc
pop
mov
mov
pop
and
xchg
pop
dec
insl
push
add
cmpb
mov
call
dec
mov
pop
outsl
xor
pop
sub
nop
jge
and
lss
mov
subb
cmpsb
or
sub
adc
push
push
fidivl
push
test
xchg
jo
push
xchg
cmc
adc
cmp
aas
adc
add
mov
xlat
inc
arpl
dec
xchg
loop
dec
test
shrb
xor
push
rolb
rorb
add
mov
arpl
jg
xor
popa
icebp
push
mov
push
push
add
ds
push
mov
jae
imul
push
mov
push
notl
or
xor
push
and
and
lret
insb
idivl
cmp
pop
sbb
and
sar
pop
jns
mov
sbb
insl
sub
and
in
mov
xchg
icebp
xor
shl
inc
mov
pop
mov
xchg
aas
fbld
fst
bsr
fstpl
aad
ljmp
lods
imul
gs
adc
add
cmp
clc
jp
xchg
inc
inc
jp
fcomi
popa
insb
push
cmp
inc
cmp
pushf
insl
adc
fwait
push
mov
repnz
pop
ljmp
cltd
cmpsb
inc
sub
int
jmp
or
lret
push
and
mov
inc
mov
jmp
jns
cltd
inc
stos
cmp
ljmp
lock
cmp
jp
push
dec
out
push
push
dec
sbb
lret
pop
js
xor
arpl
mov
mov
xor
push
jnp
mov
jmp
or
jecxz
shl
out
rclb
cmp
mov
test
dec
mov
jle
nop
popa
mul
mov
xchg
xor
sbbb
in
popl
lret
cmp
int
sub
jg
icebp
ss
ficoml
out
xor
jne
sub
test
int
ljmp
out
pop
std
sbb
and
xor
dec
bound
lcall
push
mov
xchg
mov
outsl
ds
negl
xchg
mov
insb
popl
addr16
fiaddl
ret
test
jmp
in
inc
mov
or
stos
jb
mov
xor
xor
imul
lret
icebp
and
sbb
mov
or
gs
adc
pushf
sub
push
mov
orl
hlt
push
fs
xchg
mov
imul
call
cmovl
sbb
sub
or
xchg
fcoml
or
cmc
call
jl
mov
inc
inc
adc
out
xchg
out
bound
lcall
das
inc
negl
push
loopne
jge
cmp
add
addb
and
gs
jns
dec
fistpll
test
cmp
nop
lahf
shrl
cmp
stos
mov
aaa
cmp
sub
idivb
push
imul
push
mov
lods
xor
sbb
decl
aaa
int3
mov
or
nop
dec
dec
xor
daa
sub
cli
mov
mov
mov
and
xchg
pop
fs
mov
pushf
cwtl
in
call
xchg
fisttps
nop
int
cmp
mov
xchg
dec
aad
cmpl
inc
ffreep
mov
popa
xchg
xchg
adc
enter
dec
sbb
jmp
test
pusha
movsb
adc
jmp
gs
jns
sub
aad
and
addr16
cmp
inc
dec
iret
sbb
iret
lock
test
jl
js
jle
mov
hlt
cld
push
cmp
pop
je
jns
push
rcll
sub
inc
das
in
mov
scas
xor
stc
not
lods
push
in
jns
aam
and
aad
addb
in
xchg
jns
inc
iret
notl
xor
loope
nop
inc
or
push
mov
and
imul
mov
and
cmc
push
push
mov
dec
mov
mov
clc
adc
mov
bound
jecxz
dec
sarl
enter
add
fistpl
sbb
or
and
fsub
arpl
push
xor
jae
push
orb
dec
dec
insl
fcmovnb
pop
add
and
jl
out
pop
enter
mov
xchg
stos
mov
pushf
lea
mov
icebp
popa
popf
inc
mov
dec
aaa
sub
sub
in
mov
fnsave
lds
jae
dec
cmpsb
leave
movsb
ficompl
push
mov
cmp
mov
adc
and
inc
dec
mov
xchg
test
imul
push
and
fdivrs
xor
pushf
aam
sub
jno
repnz
add
sub
jo
in
cmp
xchg
popf
xor
stos
out
and
jle
test
cmp
or
dec
test
popa
dec
mov
push
in
mov
mov
mov
cmp
inc
xor
in
and
sbb
push
scas
mov
es
rorl
cmc
out
sbb
mov
enter
add
mov
scas
add
icebp
cmp
dec
aam
lods
push
sub
cmp
es
mov
test
pop
popf
aad
test
lods
cmp
stos
andl
inc
push
inc
sub
and
dec
out
aas
and
ret
or
cld
ds
pop
or
or
out
dec
mov
adc
cmpb
push
mov
ss
jg
sbb
inc
lds
lret
add
lea
sub
mov
stos
nop
or
rorl
mov
xchg
stos
push
cmp
sbb
orl
in
addr16
mov
stos
xchg
dec
inc
cltd
leave
jp
and
test
pop
add
and
imul
ja
sub
out
lds
cld
mov
jg
cmovle
xlat
adc
arpl
out
jg
test
dec
push
lods
pushf
nop
sti
test
cli
jb
mov
inc
pusha
adc
sub
lret
cld
pop
xchg
mov
insb
sbb
sahf
outsb
sbb
dec
mov
test
lods
mov
test
push
imul
ljmp
negl
fwait
cmc
push
sub
cwtl
jbe
push
sbbl
mov
xchg
push
movsl
lret
mov
into
push
push
add
aam
xchg
mov
out
sub
les
sahf
enter
jae
push
mov
out
push
cmpsl
adc
in
sahf
pop
repnz
jmp
gs
lcall
mov
dec
das
dec
mov
add
pop
xor
daa
and
jg
movsb
int3
insl
in
xchg
jbe
daa
and
cli
pop
test
arpl
push
mov
adc
lret
pop
movsl
mov
sbb
lret
push
sub
mov
adc
mov
ret
popf
fidivrs
dec
subb
das
and
sbb
sbb
sub
push
add
imul
scas
in
sub
sbb
sbb
mov
sbb
jo
pop
sub
push
or
xchg
xor
notl
adc
imul
adc
xchg
mov
jp
xor
inc
mov
mov
push
dec
cmp
lods
add
int
sub
pushf
rcll
ret
iret
lock
pop
push
loope
sbb
fistpl
push
cmpsb
inc
push
jnp
inc
cmp
dec
sub
in
addr16
cmp
pushf
movsl
icebp
mull
loop
or
jno
je
xchg
jge
sub
shrl
imull
pop
or
xchg
iret
sub
push
jb
mov
sbb
push
imul
add
jbe
loopne
cmp
js
or
xor
xchg
in
jo
test
adc
out
aas
repz
fdivrs
pop
mov
jmp
js
mov
xchg
cmp
inc
and
daa
jbe
mov
test
xchg
cwtl
pop
leave
popf
jecxz
pop
pusha
xchg
mov
jo
mov
and
fwait
and
pusha
daa
dec
ret
jne
test
aam
arpl
lods
sbb
jns
push
inc
les
mov
mov
out
xchg
cmp
jle
cmp
call
xor
jb
lds
das
ds
xchg
mov
mov
lock
dec
enter
jecxz
loop
sbb
cmpsb
cmp
popa
mulb
adc
add
fldt
sub
cld
pop
into
fidivrs
dec
sub
lea
sbb
addr16
out
iret
cltd
adc
pop
jp
cwtl
testb
mov
mov
add
ljmp
pop
jb
adc
sub
sbb
mov
shll
and
jns
hlt
mov
jo
jo
test
lret
fisubrl
jmp
adcl
and
adc
sub
mov
outsb
add
ror
out
pop
sub
xchg
out
js
addl
pop
pop
jecxz
fsubr
idivl
repz
mov
pop
sbb
mov
mov
andl
add
scas
push
sti
or
gs
int
movsb
pop
in
adc
adc
push
and
aad
ds
out
stos
hlt
out
pop
loop
adc
fdivrl
push
sub
pop
jae
jnp
xor
fdivrs
pusha
stc
shl
js,pt
leave
cmpsl
dec
lcall
or
std
lahf
inc
adc
out
lret
adc
dec
imul
mov
push
dec
out
sub
nop
adc
lahf
notb
dec
add
lahf
inc
ss
push
add
xor
cmp
mov
pop
sbb
jg
xchg
fcoml
subb
imul
dec
fisttps
into
and
push
loop
repz
out
dec
inc
mov
inc
sahf
cmp
jo
mov
cltd
fsubs
shll
pusha
or
pop
es
inc
add
out
cmp
movzbl
cmpsb
push
cwtl
mov
or
or
lods
xchg
adc
insl
fadds
sub
pop
testb
inc
pushf
push
mov
clc
insl
push
lods
loopne
popf
cwtl
fsts
and
jge
ja
jge
cmpsb
mov
pop
std
loope
or
jge
mov
mov
iret
jp
adc
stos
mov
jno
dec
cmp
mov
idivl
scas
sbb
mov
fists
movq
mov
ljmp
jnp
inc
sub
ss
cmpb
fidivrs
xchg
mov
iret
xor
adc
movb
sahf
je
xorb
aam
cmp
arpl
xchg
jge
jne
punpckldq
push
outsb
lock
mov
push
lock
rdtsc
mov
call
sbb
outsl
inc
addr16
xor
sbb
add
fdivrs
pop
inc
adc
sbb
in
sub
mov
inc
jecxz
xchg
in
aas
int3
imul
hlt
mov
pop
insl
imulb
movsl
ljmp
lock
das
mov
jmp
in
pop
lcall
mov
orb
dec
mov
mov
nop
dec
adc
lret
aaa
jae
pop
in
std
mov
arpl
lret
inc
xchg
adc
mov
mov
xchg
jecxz,pn
pusha
and
cmpsb
or
dec
pop
push
and
pop
pop
inc
lods
xlat
mov
mov
push
cld
outsl
lods
push
ja
mov
add
jae
cmp
icebp
cltd
dec
mov
pop
xchg
mov
adc
xchg
push
inc
mov
scas
dec
dec
roll
adc
popa
add
aas
push
jge
push
gs
adc
rclb
lock
ficompl
loope
and
test
popf
sbb
and
roll
notl
dec
cltd
test
es
andb
sti
push
fcoms
test
mov
mov
inc
filds
popf
outsb
sub
push
imul
pop
cmpsb
clc
je
fbld
sahf
je
hlt
cmp
pop
push
jno
js
adcl
add
cmp
lret
push
divl
add
ja
stc
or
cmp
lea
sub
in
in
or
frstor
push
sbb
filds
imul
sbb
fistpll
sub
sbb
in
push
mov
shll
stc
outsb
xlat
into
fisttpl
dec
lret
andl
jae
push
cmpb
daa
mov
mov
mov
sbb
inc
or
mov
xchg
adc
arpl
nop
stos
aad
mov
add
jno
sbb
sub
int3
in
add
sub
incb
cmp
dec
ficoms
ud0
push
loop
inc
cmpsl
inc
xchg
std
jb
pop
lahf
cbtw
push
dec
mov
mov
insl
jl
stos
jbe
jle
or
add
push
xor
sbb
lods
cmp
cmp
cwtl
in
movsb
mov
cld
and
stc
lahf
push
sbb
mov
inc
arpl
or
and
mov
sarl
jl
sbb
fidivs
pop
mov
jl
push
scas
adcb
xor
pusha
sub
mov
push
mov
pop
les
xchg
xchg
shl
xor
pop
cmp
dec
and
pop
lods
inc
xor
jl
hlt
mov
xlat
dec
cld
mov
and
jbe
push
test
add
stos
inc
test
cmp
and
jmp
rcl
aaa
pop
daa
sub
cmp
mov
inc
or
scas
push
pusha
fdivrl
loope
mov
fists
push
adc
mov
mov
leave
sbb
out
popa
cmpsb
mov
and
and
mov
pop
sbb
push
sbb
sbb
push
push
push
inc
in
in
mov
rolb
cmp
adc
xchg
mov
fs
and
das
imul
sub
pop
lea
out
mov
mov
inc
sarb
cmp
inc
es
jbe
adc
xor
mov
icebp
les
fstl
fisubs
test
and
pop
xchg
sub
lcall
mov
sub
jo
std
xor
adc
call
mov
mov
and
lds
or
pop
and
pusha
lds
cmp
movsb
dec
jo
xor
xchg
xor
adc
add
hlt
movsl
ds
mov
mov
and
jne
mov
pushf
or
mov
insb
jne
inc
or
mov
fists
les
mov
movsl
mov
shr
leave
imul
int3
in
scas
xor
mov
insl
and
add
jmp
inc
dec
mov
lcall
fwait
push
mov
testl
aam
mov
inc
mov
outsb
shlb
adc
push
sub
cmp
sub
jns
in
mov
mov
into
insb
cmp
adc
mov
jno
les
inc
cmp
mov
mov
and
xchg
or
mov
pushf
mov
push
xchg
lret
mov
fnstsw
xor
mov
test
enter
cmc
or
mov
mov
repnz
insl
xor
mov
clc
mov
dec
repz
in
call
pop
push
or
ds
inc
jl
subb
xchg
test
sub
jge
cmp
fistpl
in
movl
repnz
stos
mulb
cmp
daa
jmp
push
mov
mov
ljmp
xchg
jecxz
fbstp
addb
cmp
icebp
push
xchg
lret
sti
sbb
dec
dec
fsts
cmc
inc
inc
push
inc
cwtl
testl
mov
cmpl
cmp
aaa
popf
nop
out
arpl
mov
ss
push
ret
fs
xor
sub
movsb
mov
mov
cmp
and
push
mov
scas
mov
in
inc
xchg
adc
fsubl
ficoms
dec
scas
add
cmp
add
pusha
dec
mov
jne
out
pop
fisubs
cmpsl
sbb
pop
mov
pop
cmc
rorb
popf
and
roll
dec
cmp
mov
xchg
and
add
jle,pt
sub
fnstcw
sarl
mov
ljmp
iret
or
fsub
pop
notl
in
cmpsb
adc
ror
sub
js
mov
or
xor
sbb
xor
cld
mov
js
test
pushf
dec
mov
mov
cmp
std
push
xchg
repnz
fisttps
jg
pop
fisubl
lahf
sub
inc
cs
mov
or
mov
aam
call
inc
xchg
adc
insl
xchg
push
leave
lods
xchg
and
sbb
jo
jno
jo
lds
scas
sahf
scas
out
xlat
fnstcw
cltd
aaa
xor
and
repnz
leave
and
and
daa
fwait
adc
adc
jl
int3
fsubrl
xchg
mov
mov
dec
pop
dec
clc
jne
xchg
lahf
pop
aad
xchg
mov
mov
rcll
jbe
and
jmp
je
inc
cs
jns
mov
loop
test
cmpsb
mov
cmp
repnz
lsl
sbb
and
mov
sub
imul
fs
push
rorl
aad
pop
jbe
dec
loopne
adc
cmp
push
pop
nop
mov
pop
push
add
inc
int
cli
fnsetpm(287
shrb
in
inc
sub
jp
daa
scas
xor
jnp
sbb
add
sub
push
adc
in
add
sbb
jle
inc
xchg
subb
jge
add
adc
mov
jle
dec
sub
adc
pop
sub
icebp
popf
pop
roll
ret
jmp
push
mov
lds
adc
add
loope
sub
lock
mov
mov
adc
cltd
inc
inc
mov
sti
in
cmp
stos
xchg
mov
xchg
pop
scas
sbb
rdtsc
push
cmc
jmp
xchg
mov
je
dec
xchg
mov
cmp
lock
lea
jecxz
mov
loop
adc
or
cmp
pop
hlt
lcall
mov
clc
jmp
sbb
hlt
test
lret
push
inc
arpl
lods
xor
jg
mov
aam
jge
mov
roll
arpl
negb
cmp
jecxz
dec
negb
cs
jle
ret
cmp
or
adc
jne
lds
pop
inc
mov
ret
pushf
out
stos
push
and
cmc
mov
mov
std
mov
xor
popa
cmpsl
jnp
and
popa
xchg
mov
mov
lahf
push
pop
mov
insb
fbld
sbb
cld
mov
xchg
push
push
ss
and
adc
push
fcomp
mov
push
into
rol
cmpl
sbb
loop
xchg
or
andl
aas
mov
jbe
insb
push
add
sub
jp
mov
out
ret
std
adc
ja
xor
test
add
std
rcl
jge
ljmp
loop
insb
mov
popa
arpl
jmp
ljmp
xchg
sti
stc
lret
inc
sbb
pop
jne
psadbw
xor
mov
xor
pushl
shrb
cmp
nop
test
dec
and
sub
fstpt
leave
push
mov
stos
aad
dec
fnstsw
jl
mov
push
sbb
push
ds
pusha
push
es
pushf
les
mov
push
test
xorb
in
mov
and
flds
hlt
into
jge
aad
jo
jmp
negb
mov
enter
adc
mov
addr16
jo
adc
or
push
jge
inc
inc
outsl
xchg
outsl
push
data16
jno
or
pop
mov
mov
and
mov
dec
pop
popa
dec
stos
fdiv
lahf
cmpsb
inc
outsb
push
stos
adc
mov
dec
add
sub
add
xchg
les
pushf
ljmp
inc
jae
mov
xor
cmp
sub
sahf
mov
call
mov
aam
xorb
shr
out
out
inc
jb
and
xchg
pusha
jo
hlt
insb
ffreep
pushf
or
mov
push
das
jns
mov
jle
xchg
pop
mov
jl
in
cmp
cltd
pop
push
cmp
adc
daa
sub
ja
push
leave
adc
int3
jae
fldl
cmp
test
addr16
or
mov
scas
push
xchg
lock
filds
in
adc
aaa
dec
pop
adc
pusha
test
inc
mov
inc
jle
std
sbb
pop
int
inc
scas
cmc
decl
in
mov
sbb
dec
daa
mov
sub
fidivs
ljmp
mov
cmp
cld
jne
mov
sarb
enter
dec
psrld
xchg
loopne
pop
ss
lock
test
mov
pop
aaa
mov
fsubp
xor
inc
jns,pt
bound
aaa
xchg
popf
in
insb
mov
dec
mov
rep
pusha
adc
adc
cmp
ljmp
lcall
in
jns
mov
jle
cld
push
inc
mov
pusha
loope
xor
dec
mov
or
inc
xchg
xchg
or
xchg
xchg
jb
outsl
test
pop
fstpl
js
and
popa
dec
cmp
fsubs
dec
mov
out
rolb
out
mov
xor
and
adc
push
rorb
test
mov
xor
or
xor
ljmp
cmc
cmp
incl
fidivrs
fisubrs
outsb
xor
push
jg
xor
mov
rcrb
bound
xchg
and
jmp
push
pop
mov
cmc
push
dec
pop
xor
pop
test
iret
xchg
push
ljmp
imul
sub
add
add
cmpsb
mov
push
jmp
xchg
fmulp
xor
mov
repz
pushf
js
les
or
call
sub
lds
je
add
mov
cmp
add
dec
lds
divl
pop
or
fisubs
and
ret
out
xor
sub
push
sti
mov
out
je
popf
xor
call
fwait
xor
push
scas
aas
mov
mov
xor
enter
sahf
outsb
fsubrs
icebp
xchg
jecxz
mov
xor
dec
mov
inc
sbb
push
cwtl
sbbl
sub
insl
cmpb
sahf
je
xor
or
cmp
lahf
inc
bswap
inc
mov
aas
test
decb
push
popf
movsl
hlt
mov
jmp
jns
jl
mov
ds
mov
sub
movsb
cmp
add
inc
jo
xor
adc
adc
cmp
inc
into
or
adc
push
adc
mov
nop
dec
fcmovb
fistpl
mov
jb
pop
dec
arpl
xor
ja
test
ret
jns
or
std
xlat
std
push
add
pushf
push
insl
mov
cmpsb
jb
popa
push
pusha
mov
outsl
scas
sbb
mov
fnstsw
addr16
sbb
scas
dec
or
push
push
mov
repnz
adc
ret
int
cmp
xchg
cwtl
cmp
push
js
dec
sub
sub
test
ficompl
xchg
cli
sbb
scas
outsl
outsb
cmpsl
aad
add
xchg
sub
mov
jecxz
out
outsb
mov
cmp
sbb
mov
les
repnz
pop
test
imull
arpl
pop
rcrl
xchg
ds
shl
pop
lret
and
inc
xor
enter
xchg
outsb
sar
mov
jmp
pop
sub
addr16
ja
jo
cmp
cltd
jecxz
xchg
mov
push
cmc
push
loope
and
daa
mov
outsl
divl
cwtl
in
fsubs
shlb
cli
mov
aaa
mov
fwait
sub
mov
in
adc
js
xor
and
jbe
mov
mov
and
stos
push
idivl
int3
stc
mov
jl
jb
popa
adc
inc
aad
cmp
call
mov
push
scas
lahf
jge
ficoml
aam
test
cmpl
mov
mov
push
repz
and
insb
push
pusha
mov
and
xor
sbb
mov
push
ficoms
std
dec
jg
xor
in
popa
jl
ljmp
dec
adc
cmc
and
loopne
push
pop
inc
int
mov
jo
cltd
mov
mov
fxch
popf
mov
jae
rcl
and
push
fimull
out
mov
bnd
fxch
mov
xor
loop
jo
and
jno
push
int
mov
fs
subl
sub
jne
dec
xchg
mov
push
test
int3
sbbl
lcall
mull
call
jns
fidivrs
cmp
dec
cmp
pusha
lods
mov
cmp
or
data16
adc
sti
enter
out
and
aaa
pop
inc
pop
add
bound
xor
jecxz
cmp
xor
mov
push
xchg
push
jo
mov
xor
mov
cmpsl
lods
cmp
lock
mov
jmp
cmpsl
dec
nop
xor
and
dec
pop
adc
bound
movsb
sbb
mov
roll
sub
jnp
dec
mov
mov
or
add
mov
sub
cmpb
fs
add
into
pop
icebp
cld
loop
imul
ds
mov
adc
sbb
movsb
or
fdivr
inc
addr16
or
ror
or
fwait
jg
pusha
xchg
adc
adc
fiaddl
scas
lcall
cltd
sbb
fsubl
cmp
rcrb
push
pushf
and
jl
popf
adcl
dec
mov
sarl
sahf
in
inc
aad
mov
loopne
lahf
jnp
dec
mov
inc
clc
jmp
pusha
subl
test
aas
das
out
mov
sub
test
xor
and
stc
push
push
xor
pop
mov
pop
aaa
and
or
aaa
lds
js
push
push
mov
into
xor
pop
or
outsb
aad
mov
in
add
in
mov
dec
mov
aad
es
dec
xchg
and
jno
push
adc
int3
bound
inc
mov
jbe
ss
mov
inc
mov
bound
sub
sub
pop
jae,pt
pop
fcmovne
addl
or
sar
push
cmp
or
mov
mov
lods
dec
mov
add
mov
call
fldl
fcoms
jns
dec
jb
xchg
aaa
jle
fldenv
int
sub
jp
bound
mov
pop
ljmp
aaa
sbb
mov
and
pop
adc
addr16
and
pushf
out
bound
xor
xchg
adc
mov
adc
rcl
shll
enter
xlat
cmp
call
in
ljmp
je
mov
insl
push
arpl
cwtl
mov
cli
add
sbb
cmp
hlt
dec
inc
sub
adc
das
and
xchg
hlt
leave
ljmp
lret
shr
lcall
insb
mov
sub
or
je
fcmovnbe
out
dec
pop
rcr
std
jg
in
mov
xorl
inc
pop
push
sub
cmp
cmp
add
and
insb
sub
stc
scas
jne
arpl
dec
cld
cmp
cmp
or
lea
mov
idivl
mov
jno
sbb
in
cmp
mov
push
or
je
or
fidivrl
ror
sti
sbb
xlat
push
lock
out
lret
mov
fnsave
or
dec
xchg
mov
mov
mov
inc
mulb
lahf
int
gs
loop
add
inc
stos
add
xlat
andb
xchg
negb
ds
loope
std
stc
clc
add
mov
push
mov
incl
mov
js
jle
insb
rcrb
mov
lock
fnstcw
dec
enter
mov
out
fs
scas
mov
dec
jmp
ret
jl
test
aaa
out
mov
ss
aas
xchg
cmp
mov
lret
cmpsb
or
inc
add
sbb
adc
int3
inc
xor
shll
push
mov
mov
adc
jbe
aam
dec
into
jg
jno
daa
mov
mov
in
jmp
aaa
repnz
fildll
outsl
movsb
out
sub
divl
lock
adc
out
sbb
xorb
mov
mov
sbb
bound
sub
out
dec
mov
loopne
inc
fwait
aaa
aam
jmp
inc
adc
pop
cmp
mov
push
mov
adc
mov
xchg
ljmp
mov
fnstcw
lods
xor
gs
mov
aad
pusha
mov
xchg
or
flds
and
push
mov
popa
js
xchg
push
into
incl
daa
pop
pop
add
fbstp
and
sar
push
ds
cmpsb
inc
ss
add
sti
lock
daa
mov
insb
int3
cmp
ret
rcl
xchg
lret
jg
cmp
std
jge
pusha
sub
mov
pop
cltd
sbb
lahf
or
pop
popf
fstl
and
icebp
fmuls
bnd
mov
dec
adc
inc
dec
jb
ret
repnz
aad
pop
lcall
repz
lret
mov
xchg
ret
jae
add
sub
lcall
mov
sub
pop
inc
mov
push
cmpsb
das
add
pop
shll
add
pop
lret
cmp
jp
sub
add
mov
pusha
mov
push
fwait
xor
sub
mov
and
jbe
jns
xor
sbb
jno
iret
shll
sbb
sti
mov
out
loope
stos
sbb
or
rclb
fidivs
and
or
js
flds
sub
xor
lcall
xchg
mov
push
mov
inc
mov
fmul
or
in
enter
dec
ret
out
pop
pop
mov
jp
fldenv
popa
fmull
jns
and
sahf
push
dec
aas
xor
xor
jg
shlb
xor
fs
nop
inc
cld
xor
mov
pop
xchg
add
in
andl
fisubrs
popf
gs
std
gs
loop
icebp
xchg
xchg
sahf
repnz
pop
xchg
mov
add
enter
test
and
enter
dec
push
in
adc
int
xor
push
std
sub
cmp
mov
mov
push
inc
mov
pushf
push
xor
shll
mov
mov
fbld
adc
cmc
xor
or
in
in
popa
bound
cs
sbb
test
test
mov
add
sbb
sub
adc
mov
lea
xchg
cld
or
push
and
pop
mov
jmp
xchg
sub
jle
ds
addr16
jge
inc
xorb
mov
clc
imul
aad
rcll
data16
dec
fmull
mov
cmp
and
test
inc
mov
ljmp
addr16
pop
cli
fwait
push
leave
add
inc
mov
adc
add
cltd
shrb
fdivrl
pop
add
mov
mov
imul
arpl
xchg
and
push
rorl
push
cs
jmp
stos
mov
xlat
cmp
ret
inc
rolb
mov
ss
mov
inc
cmp
jecxz
xchg
adc
sahf
sbbl
xor
and
bswap
jbe
insl
mov
fwait
push
aad
xchg
fsts
cmp
hlt
fwait
rclb
cmp
jae
ss
xchg
sub
aad
ss
mov
loop
xor
sub
adc
out
push
and
mov
or
ss
iret
dec
jge
addr16
jecxz
stc
jmp
xor
popa
stos
mov
ss
es
jbe
incl
pop
mov
cmp
xor
xor
sbb
xchg
cmp
icebp
sahf
inc
in
pop
addb
daa
xchg
loope
mov
cmp
dec
mov
inc
mov
loope
std
sub
fwait
pop
jmp
add
in
sub
out
shlb
adc
mov
rclb
inc
cmp
dec
push
mov
jle
and
sti
cmp
es
jns
push
mov
cmp
subl
xchg
gs
adc
add
insb
sbb
push
ret
stc
sub
xchg
movsb
les
in
in
or
cmpl
add
mov
movsb
sbb
repz
insb
je
iret
je
repnz
dec
xor
xchg
mov
imul
mov
fadds
lods
or
imul
xor
fadd
gs
xorl
lods
push
mov
iret
and
icebp
xor
inc
stos
es
insl
push
add
xorb
mov
push
std
lcall
xchg
loopne
dec
push
test
adc
stos
mov
inc
and
jg
jo
sbb
and
jo
shll
lret
sbb
fdivrs
sbb
nop
cmpsl
ss
adc
push
ja
imul
xchg
stos
out
jmp
pop
push
and
mov
sti
out
push
mov
popf
repz
lds
clc
flds
cs
les
fdivp
push
pop
jno
lods
mov
jb
jl
rolb
cmp
jns
arpl
repnz
mov
mov
adc
je
mov
clc
cmp
bnd
push
stos
test
loop
xlat
lods
push
pusha
mov
popa
xorl
jmp
push
sbb
cmp
leave
movsl
adc
movsb
sub
test
jb
in
mov
push
sahf
lods
repnz
scas
outsb
fadds
push
leave
push
push
jb
stos
xchg
xor
out
test
sqrtps
outsb
loope
mov
dec
cmp
xor
jmp
ret
scas
out
in
dec
xchg
cltd
jl
push
jle
out
push
or
repz
es
xor
jp
fdivrp
aad
inc
out
gs
xacquire
sbb
push
inc
add
dec
test
jb
sub
icebp
enter
xor
lret
xor
dec
sahf
repz
mov
sahf
jns
jecxz
je
push
push
stos
lds
pop
loop
lds
test
aaa
pusha
pushf
jns
mov
mov
jg
or
jg
ret
mov
shl
or
scas
in
test
push
sti
and
in
into
pop
push
jno
xor
pop
divb
jge
fildll
add
leave
dec
stos
adc
imul
sbb
or
or
push
fwait
xchg
shrb
jnp
rorb
popf
cmp
cwtl
mov
out
add
pushf
inc
je
push
and
add
lods
les
in
loop,pn
loopne
fisubs
sti
push
and
mov
fdivrs
sbb
js
pop
push
jle
adc
jge
movsb
scas
sub
testl
or
mov
lds
das
jo
popa
loope
xchg
pop
add
jns
neg
or
jne
lretw
imull
out
jne,pn
mov
sbb
fidivrl
cld
aaa
mov
jle
call
push
cld
xor
adc
sbb
adc
pusha
cld
test
imul
add
shrl
test
rcl
push
mov
push
push
push
in
inc
xchg
xor
es
sbb
dec
and
ja
or
bound
mov
incl
or
rol
int
sub
mov
jl
sub
aas
les
adc
dec
push
bound
and
in
popf
dec
aam
int3
sub
lds
rorl
divb
cli
xchg
sbb
adc
inc
insl
sbb
pop
and
jns
iret
push
mov
xor
fnsave
dec
xchg
movsl
mov
push
mov
and
lods
pop
call
inc
subw
lahf
fcomip
insw
add
sub
sub
subl
mov
pop
xchg
sub
in
ds
cmp
mov
sbb
int
test
sti
fcomps
dec
insb
shrb
les
out
add
pop
lret
clc
sub
add
fwait
mov
jp
adc
xchg
jecxz
out
xor
dec
ss
mov
data16
xor
je
jne
std
sbb
insb
sbb
out
std
orl
aad
stos
add
imul
lods
pop
xchg
xor
bound
push
mov
hlt
je
jmp
cmp
lods
sbb
je
imul
and
push
loope
jp
andb
sbbb
inc
adc
sbb
jae
ja
adc
shrb
adcl
mov
cmp
and
mov
xor
jg
leave
fs
jnp
ljmp
sbb
mov
movsb
xor
add
in
mov
out
mov
or
movsl
mov
popf
dec
scas
es
in
mov
ret
mov
jg
sbb
mov
aas
ljmp
leave
fcmove
xor
cmp
ss
orl
shr
mov
mov
aad
adc
in
js
adc
gs
jl
mov
and
push
sub
pushf
inc
mov
pop
ljmp
mov
ds
pop
cmpsl
cs
push
inc
cmc
ss
sar
mov
orb
outsb
and
xchg
mov
fistpll
bound
iret
lea
cmc
lock
loope
pop
cmovp
jb
stc
das
jae
aad
mov
xor
es
lods
mov
orb
aad
mov
xor
in
dec
js
sbb
xchg
mov
fisubrl
mul
psubd
leave
dec
and
loop
aaa
cmp
and
lfs
mov
pop
sub
xchg
mov
enter
jecxz
add
pop
pop
in
xchg
out
mov
push
lret
notl
outsb
rolb
dec
mov
mov
out
mov
cwtl
pop
push
test
fs
and
pop
sub
lea
test
scas
int
flds
lods
inc
push
adc
imul
outsl
mov
pop
cld
stos
stc
mov
daa
stos
jmp
xor
outsb
xchg
xor
mov
mov
mov
mov
call
lock
adc
sub
lea
ret
cmp
and
cld
sahf
inc
sub
aas
out
xchg
movsl
xor
into
jb
mov
pusha
xchg
aad
lret
clc
push
shll
nop
jnp
sbbl
std
pop
aam
test
add
mov
nopl
inc
inc
lods
mov
mov
cmc
cmp
lock
cmp
jge
fwait
das
mov
xchg
lods
jnp
mov
lcall
cmp
dec
push
in
shrl
pop
and
adc
test
jno
hlt
rcll
cmc
xor
xor
sub
jb
bswap
pop
repnz
push
push
cs
movsb
pushf
sbb
jno
lods
sti
or
data16
xchg
xchg
test
outsl
xchg
outsb
sub
in
cmp
pop
shlb
or
push
movsb
pop
or
and
sbb
clc
imul
pop
outsb
inc
xor
shr
lret
into
jb
dec
inc
in
bound
mov
or
dec
cmp
inc
imul
inc
push
xor
push
sub
jg
loop
and
das
jle
rorb
hlt
aaa
daa
mov
adc
sub
pop
jno
inc
repz
ffree
mov
sub
jbe
js
rorb
inc
xor
jle
push
les
shrl
mov
es
scas
cmp
sbb
sarb
ds
push
or
aas
xor
popf
adc
rolb
rol
sub
cmp
adc
xor
add
push
insl
pop
sbb
and
pop
push
aam
and
les
ret
inc
fcoml
cmpsl
ds
mov
and
xor
and
aam
out
rolb
or
aad
xor
pop
stos
iret
rorl
aaa
mov
push
push
lea
pop
clc
xorb
sahf
pushf
mov
out
sub
fdivrp
dec
test
cmp
fs
enter
push
jmp
aas
cmp
enter
lret
rorl
fnstcw
or
out
pusha
test
jne
dec
mov
sbb
xchg
mov
or
xchg
mov
jge
test
mov
test
fwait
jbe
jmp
addb
and
loop
leave
mov
seta
jecxz
sub
addr16
lock
stos
icebp
mov
sarb
arpl
mov
sub
pop
test
adc
subl
imul
lahf
xor
and
pop
pushf
sarb
fs
or
pusha
aas
xchg
adc
cltd
mov
or
sti
or
sbb
lcall
cmp
fcmovnb
xor
push
shlb
and
jmp
and
and
lcall
jmp
pop
mov
dec
lock
mov
ds
lahf
fistpl
cmc
cmp
movsb
mov
ja
inc
adc
sub
xchg
shll
fs
jmp
pop
int
push
push
outsb
repnz
orl
xchg
xchg
shrl
sbb
xlat
sbb
sub
sub
xchg
in
shll
add
jmp
es
lret
xchg
push
aas
imul
mov
inc
rolb
scas
xchg
fsubl
sub
mov
xchg
stc
mov
and
ss
sarb
shlb
add
movsb
mov
pop
jbe
xchg
movsb
pop
pop
add
or
orb
imul
scas
mov
sbb
push
insb
cmpsl
sub
scas
rcll
lds
adc
lea
popa
lods
cmp
fs
mov
xchg
xor
sub
outsb
cmp
xchg
adc
mov
movsl
jno
mov
xor
adcb
and
jo
cmp
ljmp
inc
jecxz
inc
or
dec
push
sbb
in
repz
and
repz
cmp
mov
xor
cmc
ret
lahf
cs
mov
inc
das
enter
sub
sbb
jle
in
inc
repnz
scas
imul
sbb
call
mov
sti
sub
mov
xchg
add
call
sbb
outsl
popf
rcrb
hlt
insb
fisubs
ret
and
mov
jmp
mov
sbb
roll
mov
test
enter
dec
xlat
fsubs
aam
sbb
adc
cld
cmpsb
lods
icebp
push
and
push
lahf
jae
mov
mov
loope
loopne
adc
test
std
push
int3
movsb
pop
and
fcompl
sub
xchg
je
int
cmpsl
push
clc
int
mov
xchg
and
mov
in
pushf
in
movsl
clc
mov
aaa
xchg
cmp
sbb
jl
xorb
inc
shr
cmp
mov
lock
mov
lock
cmp
push
ret
fsubrl
outsb
loopne
inc
enter
loope
lods
cmp
mov
ret
cltd
out
xchg
icebp
cmp
jle
lock
or
movsb
stos
mov
in
in
imulb
mov
and
sbb
xchg
lahf
repz
mov
push
adc
clc
xchg
xchg
xchg
mov
bound
or
jmp
pop
sbb
leave
sbb
movsb
cs
fstps
cmp
leave
and
mov
sbb
mov
outsb
hlt
sahf
arpl
mov
jg
adc
cli
outsl
enter
imul
push
sub
addr16
xchg
subb
fcmovnb
mov
mov
into
xchg
and
cwtl
ds
dec
inc
cmpsl
imul
sbb
push
mov
xchg
ja
je
and
jmp
pop
jb
jle
fistpl
dec
xor
lods
adcb
push
testl
xor
xor
mov
imul
ret
or
push
lahf
mov
xor
aaa
sbb
fisubrs
andb
pop
and
xchg
fxam
stc
popl
in
dec
pop
pop
notl
pop
pop
or
or
sub
jmp
loope
inc
pop
mov
inc
int3
push
xchg
hlt
ror
mov
jo
dec
les
ljmp
fxch
cltd
adc
in
xor
int
clc
test
and
mov
inc
cld
xor
lahf
fimuls
adc
xorb
loope
mov
je
inc
ret
cmp
outsb
sbb
mov
sbb
iret
das
or
andb
daa
mov
pop
imul
fxch
rolb
mov
and
pop
aaa
cltd
mov
mov
cmp
jle
lret
push
mov
push
jo
cmp
insb
fcoms
jl
inc
negl
inc
jge
in
mov
pop
fwait
repnz
mov
cmc
dec
pop
mov
cmpsl
push
sub
fs
out
fcmovnbe
sub
repnz
sbb
test
and
or
repnz
mov
or
aaa
xor
scas
pushf
mov
bound
mov
or
and
mov
jecxz
sub
cwtl
mov
jo
loope
arpl
pop
xchg
or
out
enter
mov
push
mov
pop
or
pushf
jle
dec
inc
pushf
dec
sbb
xchg
xchg
addb
mov
stos
mov
enter
fists
pusha
scas
sub
scas
jb
sbb
adc
addb
fcmovne
mov
dec
push
dec
sbb
mov
sub
push
dec
cmpsl
dec
pop
lahf
fnstcw
imul
cld
mov
xchg
fmul
fists
cmp
mov
clc
lcall
mov
xchg
mov
js
iret
mov
mov
popa
loopne
push
movsl
cmp
mov
aaa
sbb
imul
xor
sub
das
xlat
shr
loope
gs
xchg
sub
loopne
nop
xchg
pusha
stos
jbe
and
jl
in
mov
pop
rep
mov
mov
test
lret
adc
fwait
jge
in
cltd
sbb
out
dec
xor
shll
fwait
cmp
mov
mul
add
pop
adc
jae
and
cmpsl
dec
jne
mov
imulb
mov
push
pop
dec
mov
cmove
add
jne
cmpsb
fidivl
repz
push
adc
jbe
push
insl
sti
xchg
jb
movsb
sbb
mov
pop
in
mov
arpl
lods
fwait
leave
sti
dec
shll
add
pop
cmp
mov
pop
xchg
xchg
jmp
push
push
mov
xor
add
xor
fidivrl
cmpsl
rorl
push
imulb
add
jp
frstor
inc
inc
push
das
adc
sub
es
imul
dec
les
dec
adc
adc
test
sub
jecxz
fsts
jmp
aas
popf
test
subl
adc
out
inc
sbbl
dec
push
movsl
dec
xchg
and
nop
or
pop
arpl
inc
add
or
repz
test
rcll
xchg
lods
test
and
dec
das
jle
icebp
out
in
cmpsl
xor
cmp
rclb
jg
ja
shl
fsub
pop
rcll
arpl
out
fwait
rcrb
cmpsl
or
add
mov
mov
pop
push
scas
inc
dec
std
sub
shrl
cs
push
out
aad
and
sbb
cmpsb
shlb
call
jl
sbb
sarb
stos
ljmp
dec
and
bound
inc
push
xor
aad
push
scas
cmp
xchg
mov
inc
xor
int
jne
jge
adc
inc
lods
jns
xchg
stos
mov
adc
shl
lods
out
in
mov
and
dec
push
fidivl
cmpsl
xchg
movq
jp
outsb
sbb
mov
cwtl
subb
call
in
outsl
aam
sub
jbe
cld
push
imul
imull
xchg
daa
sarl
mov
aad
dec
dec
xorb
mov
xor
sar
loope
rcr
jge
aas
into
pop
xchg
mov
dec
cwtl
outsb
jo
pusha
and
jmp
adc
or
sbb
add
adc
xchg
mov
push
push
loopne
xchg
pop
loopne
jb
fldcw
loope
and
mov
cltd
mov
popf
pop
loopne
idiv
imul
push
mov
and
rorb
dec
xlat
sub
mov
push
jne
mov
mov
jp
lods
mov
mov
push
aad
into
aam
pop
hlt
iret
cmc
mov
xor
rcrb
push
push
shll
mov
push
cmp
imul
gs
xchg
cmp
cmpsb
cli
or
jns
or
notb
xor
pusha
sub
mov
sbb
std
and
sbb
mov
clc
xchg
adc
das
mov
rep
inc
inc
outsl
ficompl
test
xor
push
rcr
jbe
and
jle
lods
jmp
xchg
out
or
cmc
test
sbb
dec
push
loope
inc
jmp
inc
and
fidivrs
mov
mov
lods
cli
or
lea
enter
pop
movsb
sbb
imull
hlt
movsb
ret
add
fldt
in
mov
mov
call
cs
mov
pop
push
pop
in
mov
mov
mov
adc
pop
cli
push
cmc
jp
cmp
jp
cmp
loope
adc
out
fsubl
xchg
test
fdivrs
bound
stos
stos
movsb
aad
movsl
mov
sahf
mov
leave
xor
cmp
xchg
les
xchg
cmp
int3
fbld
inc
jnp
sbb
or
or
aaa
mov
pop
addr16
push
xchg
add
bound
arpl
sub
sbb
sub
jmp
add
pop
cmp
insl
or
pop
push
mov
and
xor
xor
out
inc
popa
jns
sub
or
cs
or
lret
push
fnstenv
push
dec
stc
jecxz
and
cmp
mov
stos
add
mov
sub
stos
adc
ljmp
xchg
test
jmp
sbb
mov
and
ja
adc
dec
mov
and
mov
adc
mov
stos
sti
out
aaa
xor
push
jbe
add
mov
sbb
cmp
shll
pusha
movsl
pop
sub
enter
mov
sahf
faddl
jp
adc
icebp
pop
or
std
mov
add
push
jp
inc
mov
and
ret
gs
mov
xor
jp
add
xor
mov
ja
mov
inc
pushf
pushw
scas
rorb
and
adc
mov
jae
int
mov
adc
je
lret
daa
inc
push
loopne
test
loope
lahf
mov
mov
mov
sub
sub
sub
dec
mov
lds
fbld
dec
xchg
scas
enter
rorb
xchg
mov
lea
daa
in
cld
test
cld
mov
add
xchg
es
ret
scas
popf
cmp
lahf
jg
push
adc
xor
scas
ja
test
sub
insl
push
xchg
adc
ret
cmp
mov
mov
mov
pop
sti
test
xchg
sahf
ret
stos
mov
and
jns
ss
aad
sub
popf
stos
scas
pop
and
mov
cmp
adc
add
lea
pusha
ret
insb
xchg
out
in
mov
sbb
push
jg
sbb
cmp
stos
add
xor
xchg
out
mov
and
loope
dec
or
mov
mov
mov
js
movsb
sub
stos
xchg
lahf
adcl
scas
xchg
push
outsl
jae
sahf
repz
sub
jle
sbb
or
cwtl
out
xor
es
fldenv
adc
mov
mov
push
mov
movb
push
mov
psrad
adc
in
int3
sub
lds
stos
push
movsb
ja
rol
and
xchg
and
cmp
xchg
outsl
mov
jo
testl
inc
jmp
pop
pop
in
cmc
movsl
loope
xchg
roll
repz
mov
lret
push
loope
fisubrl
mov
lds
add
mov
jecxz
rolb
cmp
push
out
es
rcrl
and
loope
mov
xchg
mov
aaa
orl
inc
push
sbb
jnp
adc
mov
mov
inc
xchg
jecxz
idivl
shl
inc
nop
dec
lds
xchg
cs
je
mov
sbb
repnz
mov
adc
stos
inc
incb
out
stos
imul
lds
outsb
fdivrl
les
cmpsl
stc
cmpsl
mov
push
jbe
sub
jo
popl
mov
jle
xchg
inc
mov
cwtl
and
sub
add
xor
imul
cmp
outsb
scas
in
fistps
push
xchg
stos
scas
es
xchg
cmp
xchg
cmpsl
int3
inc
ss
xchg
in
jle
loop
movsl
dec
adc
adc
xor
xor
dec
fcmovnb
xlat
adcb
or
clc
jae
lret
jno
fwait
popf
sbb
fldcw
sub
es
lods
loope
xor
fs
icebp
pop
loop
dec
insb
mov
ret
pop
mov
push
pop
pop
adc
mulb
dec
push
push
pop
adc
sbb
cli
sbb
imul
movsb
pushf
stos
out
mov
fs
sub
jae
data16
mov
repz
adc
sub
add
xchg
mov
test
test
and
ja
xchg
shlb
jle
xchg
and
sbb
pop
inc
js
sbb
and
cmpsl
mov
into
xchg
dec
pop
cmp
sbbb
insb
movsb
imul
push
scas
mov
xchg
ret
sub
lret
repz
lods
inc
mov
add
std
sbb
add
add
popf
stos
sub
stc
ret
enter
mov
shr
ds
jb
cmpsl
mov
sbb
push
cmp
dec
lods
sarl
cmpb
je
das
sub
jo
add
and
mov
add
xor
inc
pusha
inc
sub
mov
lds
push
mov
mov
dec
jns
mov
rorl
js
mov
pop
jo
mov
mov
fisttps
leave
int
popl
sub
test
xchg
stos
push
imul
test
push
cld
mov
mov
bound
pop
aam
rcrb
add
pop
mov
add
push
cs
mov
cmc
jmp
cmpsl
jp
fdivs
loop
in
pop
mov
rorb
repz
sub
fiaddl
add
lret
iret
add
adc
pop
inc
or
adc
sbb
test
or
pop
sbb
scas
jo
in
lret
mov
hlt
push
pop
mov
in
je
sbb
xor
inc
jnp
pop
push
xchg
sarl
add
xchg
pop
in
lds
in
jmp
aad
inc
jle
push
mov
pop
add
xchg
mov
xor
pop
in
cmpsb
cmpsb
out
and
rolb
std
sbb
push
icebp
add
mov
jns
daa
imul
outsl
xchg
clc
push
cmp
pop
popa
and
jno
or
rep
and
int3
inc
jge
xchg
jmp
lahf
dec
pop
sbb
imul
loope
insl
cmpsl
xorl
rcrb
bound
movups
shrl
push
int3
xlat
insb
adc
mov
scas
leave
cmpsl
and
push
jg
mov
or
out
call
das
sub
fisubrl
es
js
push
mov
xchg
nopl
ss
sub
loope
stos
mov
push
xor
xchg
adc
fsubr
lcall
in
je
inc
mov
add
cmp
rcll
mov
gs
orb
adc
cmp
lock
add
pushf
cmp
mov
test
sbbb
aam
mov
adc
dec
mov
jo
or
outsl
imulb
pop
inc
inc
call
clc
and
and
andb
daa
sub
xchg
inc
in
call
mov
lret
shrl
add
xchg
dec
loop
loopne
scas
mov
xor
nop
xchg
adc
sbb
les
sbb
rcrl
add
test
ret
cmp
sar
mov
mov
mov
or
aaa
jp
add
inc
sbbl
pop
es
outsb
jge
ds
cld
ficoml
sub
adc
cmp
xor
dec
cld
inc
bound
adc
outsb
mov
push
fwait
loopne
movsb
ficoml
sti
add
pop
mov
adc
cmp
and
xor
push
notl
loop
insb
test
xor
and
mov
adc
add
ret
pop
xor
pushf
xor
inc
lods
inc
lcall
clc
out
mov
and
rorb
and
mov
adc
rcl
push
xor
push
push
ss
push
lods
fisttpll
and
jbe,pt
jae
pop
push
xor
and
mov
ror
imulb
sbb
sbb
cmpsb
add
mov
or
cmp
pop
cmpsl
sti
ror
aam
add
stos
ds
pop
ds
sub
mov
mov
xchg
out
or
inc
jecxz
sub
sbb
pushf
les
std
shlb
mov
aad
pop
das
std
leave
mov
mov
scas
mov
mov
xchg
pop
dec
shll
jg
mov
push
hlt
inc
mov
rcll
jae
push
xlat
jl
cs
mulb
addr16
sub
jg
push
das
sbb
inc
adc
lods
shrb
test
ljmp
and
out
push
std
pushf
div
push
lock
rcl
fnstenv
test
arpl
jne
xor
jge
pop
and
lods
out
outsl
xor
popa
xor
sub
cmc
dec
inc
xchg
push
ja
inc
pop
cltd
or
jbe
mov
clc
cli
das
dec
pop
shl
cmc
pop
insb
mov
adcb
cmp
xchg
add
jo
fldenv
ja
rolb
pop
sbb
out
je
jae
clc
cmp
add
pop
mov
cwtl
and
jl
or
push
das
xor
inc
ret
arpl
sbb
sarb
popa
mov
jo
into
sbb
push
ja
mov
fisubs
mov
jno
call
or
sub
mov
test
xorl
or
push
lret
dec
push
hlt
jecxz
movsb
cld
mov
out
inc
xor
lret
test
or
addl
ror
insb
rorb
cmp
jnp
mov
clc
inc
or
popa
jle
in
fstps
dec
inc
jb
int
sub
cs
and
arpl
jmp
stos
add
sahf
loop
popa
iret
sub
mov
aaa
push
mov
and
and
dec
add
fwait
mov
inc
xchg
and
xlat
cmove
mov
loope
xchg
aaa
xlat
cmp
pusha
push
jnp
dec
pop
das
clc
cmc
clc
adc
mul
and
lock
or
sarb
push
loop
sub
repnz
jl
pop
pop
mov
ficompl
cltd
sbb
daa
sti
enter
xor
jae
pop
inc
test
adc
xor
inc
push
add
sar
push
out
scas
fwait
movsl
mov
mov
imul
xchg
loop
sub
inc
lea
adc
jo
fstl
fwait
push
aad
test
inc
add
pop
pop
cmp
pusha
idivb
notb
stos
sbb
rolb
cs
sub
rorb
xchg
jnp
mov
test
sbb
jo
imul
sbb
inc
push
lds
jg
int
outsl
filds
leave
lock
loope
lock
mov
mov
test
mov
ret
lods
cmp
cmp
sbb
fcmovnb
mov
jle
out
cmc
and
mov
int
add
xor
mov
add
jmp
fistpll
add
stc
call
pop
repnz
ret
movsb
jae
in
jl
pop
sub
adc
fnstcw
or
lds
mov
loop
out
arpl
mov
jp
shl
dec
loop
sub
or
push
sub
iret
lret
cmpsl
cli
in
nop
roll
add
in
xchg
icebp
mov
repnz
cli
fdivr
repz
inc
xor
das
repnz
filds
xor
inc
imul
jl
dec
cld
repz
addb
ljmp
sub
andb
push
xchg
fidivs
aam
ljmp
sbb
adc
mov
fidivrl
push
bound
pusha
or
inc
push
and
pusha
dec
jns
inc
xchg
incb
push
lock
mov
sbb
dec
int
cmpb
pop
bound
xor
lret
mov
les
addr16
mov
cld
pop
ja
sbb
fs
cmp
js
in
xor
sub
and
jecxz
xchg
push
loop
jne
xor
adc
add
inc
test
out
out
xor
mov
outsl
cmc
ds
cmp
sub
jecxz
test
pop
inc
jno
inc
cltd
jo
stc
and
cmpsb
aas
test
xlat
in
test
mov
mov
pusha
hlt
push
lods
loopne
jno
outsl
pop
pop
ret
mov
push
sub
push
inc
fwait
xor
xchg
mov
dec
mov
pop
iret
xor
mov
ret
mov
popf
ret
or
jns
shr
rcll
mov
fs
lea
and
jle
and
dec
test
mov
mov
jae
jno
xchg
sub
stos
les
mov
add
in
pop
insl
lea
lcall
cwtl
es
mov
ss
es
and
jp
jnp
jns
outsl
pop
nop
stos
pop
subb
add
sub
cmp
pop
fiaddl
popa
lods
std
dec
outsl
les
insb
inc
incl
clc
aad
or
mov
pop
or
arpl
mov
out
out
imul
lret
jmp
rcrl
inc
jp
gs
sub
jg
or
mov
inc
jbe
aaa
xchg
cmp
pop
jle
mov
xchg
and
outsb
xor
shl
je
add
mov
sbb
mov
mov
rcrl
iret
inc
ret
popa
in
ds
aad
ja
dec
jb
rclb
enter
pop
mov
ljmp
ret
test
push
inc
adc
testb
mov
lret
inc
xor
cmpl
lods
fwait
xor
xchg
and
lretw
fwait
jg
cs
cmpsb
cmpl
addb
push
scas
dec
xor
aaa
rcr
scas
fstl
and
push
mov
loop
jl
orl
div
in
loopne
jg
notl
cmp
cmpsb
jecxz
mov
lret
dec
enter
dec
cbtw
ret
mov
jae
mov
call
arpl
mov
sbb
cmp
or
sti
fwait
test
xor
movsl
sub
movsl
jle
fsubrs
call
dec
add
mov
ffreep
mov
mov
js
xchg
stos
aaa
jb
stos
lods
fsub
aam
mov
shrl
and
pop
popa
adc
lods
lock
aas
in
mov
fcmovnbe
mov
clc
xor
mov
jns
mov
or
inc
or
sub
repnz
pop
in
out
int3
lret
xchg
push
out
and
int
cmpsb
and
test
mov
pusha
out
push
mov
cmpsb
mov
add
cmpsl
test
sub
scas
dec
pop
jl
sbb
pop
mov
inc
xchg
idivl
jg
data16
push
dec
inc
std
int3
lock
lds
frstor
and
dec
jb
mov
cwtl
flds
mov
mov
lock
xor
add
repnz
cmp
bound
in
shll
dec
push
push
cmpl
dec
or
jns
push
daa
lds
stos
daa
ret
cmp
push
sahf
xlat
outsb
push
push
mov
xor
in
push
test
mov
imul
mov
add
cmc
mov
push
jmp
jecxz
dec
gs
rcrl
js
lds
sbb
sub
and
adc
out
stos
adc
cwtl
sub
lret
test
mov
jmp
xlat
and
faddl
cmc
out
add
push
fnstcw
push
loopne
mov
in
mov
xorl
xchg
jl
arpl
xchg
lea
das
mov
subb
loop
cmpsl
and
movsb
and
ss
sub
xlat
fcoms
inc
aad
cwtl
imul
inc
fidivs
mov
mov
sbb
aaa
test
test
imul
inc
cmp
inc
and
scas
rclb
xor
dec
lcall
fmull
stc
outsl
inc
dec
pop
xlat
jno
mov
out
sbb
out
test
stc
pusha
mov
in
xchg
cmpsl
gs
fs
into
repnz
shl
aas
add
inc
frstor
mov
jne
shl
jp
jns
lcall
sub
ficoms
pop
outsb
mov
arpl
repnz
orb
inc
cmp
or
sub
fwait
lods
inc
or
enter
faddp
scas
shlb
scas
pop
cltd
repz
es
xor
sub
xchg
and
xchg
addr16
cmp
adc
cld
push
mov
or
mov
push
jle
pusha
sub
imul
add
int
and
sbb
ret
jns
dec
add
jmp
ss
cmp
mov
jno
test
test
int3
enter
std
dec
and
xor
leave
clc
adc
sahf
in
adc
xor
mov
sub
fnstsw
or
pushf
adc
test
adc
in
xchg
fxch
mov
lret
xchg
mov
adc
inc
jne
mov
hlt
orb
pop
std
pop
sti
filds
add
loope
push
mov
pop
dec
jns
inc
in
push
fimuls
mov
lds
adc
pop
xchg
out
and
js
push
xchg
jne
push
fidivrl
push
push
xor
and
scas
inc
negb
aas
fdiv
pop
push
sub
or
fsubrs
mov
or
xchg
int
ror
aad
pop
dec
sub
xor
test
adc
in
shll
adc
mov
sub
insl
cmp
pop
dec
inc
repnz
imul
or
cmpsl
xlat
movsl
inc
and
addr16
mov
adc
repnz
aaa
cltd
mov
mov
dec
xor
xchg
jns
pop
mov
ficoms
jp
xchg
enter
pop
lods
int
push
cmp
repz
inc
mov
lea
call
xchg
popa
add
testb
lret
cmp
mov
pop
mov
add
cltd
xchg
lahf
xor
sbb
es
enter
lods
fnstcw
outsb
push
enter
jp
mov
xchg
dec
jle
sub
sub
ja
test
pop
movsl
jnp
cmpsb
xchg
outsb
ret
push
mov
cmp
enter
sbb
fnsave
adc
pop
stos
jmp
je
js
shl
inc
mov
je
sbb
in
mov
inc
sbb
pop
mov
pop
mov
lea
push
push
cltd
sub
in
in
cmc
pop
or
cwtl
mov
clc
sub
push
xor
jl
xchg
aaa
mov
mov
ficomps
daa
sub
jmp
dec
insb
stos
cmp
sar
jle
xchg
dec
loop
push
mov
imul
cmp
or
nop
cmp
pop
inc
xor
sbb
loope
je
shl
bnd
lods
mov
push
inc
fadds
arpl
aas
or
pop
or
lods
sbb
and
aam
mov
sub
xor
outsb
mov
ja
es
mov
or
xchg
xorb
imul
mov
mov
dec
ja
inc
lcallw
scas
jmp
xor
jmp
ret
pop
inc
insl
loope
aaa
clc
ja
scas
adc
xchg
add
cmp
or
incb
push
mov
jmp
xor
push
mov
stos
sti
jle
jecxz
jle
inc
inc
and
push
stos
iret
adc
fabs
andb
push
push
xchg
xchg
lods
cmc
stos
loop
iret
pop
push
clc
pop
pop
mov
cli
mov
fbld
sbb
cmp
dec
mov
push
ljmp
sti
flds
sub
cmpsl
jle
jae
xchg
loop
test
jnp
testb
mov
nop
mov
jg
cmp
mov
popa
cmp
ljmp
stc
mov
enter
jb
cmp
aad
xchg
pop
xchg
in
pop
decl
xchg
mov
out
mov
jns
int3
and
lret
sbb
push
push
jecxz
push
imul
xor
ljmp
pop
xor
mov
aam
lahf
out
mov
stc
push
jle
aad
adc
cltd
fld
pop
cmp
pop
add
scas
mov
add
std
aad
ljmp
and
push
jle
fs
pop
pop
push
cltd
jle
daa
or
and
pop
sub
rcll
push
jge
add
mov
stos
lods
hlt
add
stos
inc
aam
jl
test
sbb
shll
aaa
leave
iret
in
pop
fwait
mov
shrb
jp
pop
mov
stos
ficomps
pop
add
std
and
sbb
cmpsl
ss
xchg
iret
inc
jno
jbe
scas
ja
popa
fwait
sahf
fs
out
dec
jnp
in
mov
xor
xchg
sbb
bound
loopne
addr16
shll
fstp
stos
push
mov
adc
cmp
mov
test
add
inc
push
adc
mov
add
jg
out
mov
cmpsb
mov
stos
push
push
jl
dec
jge
mov
icebp
and
sbb
pop
push
inc
gs
mov
inc
jg
push
cmp
add
mov
pushf
jns
xor
lods
jns
pop
sbb
push
inc
addr16
pop
jns
movsb
cmpsb
ret
in
repnz
mov
or
jb
test
data16
daa
dec
or
lret
xor
sbbl
add
cld
push
into
movsl
ret
iret
xchg
lds
mov
xchg
aaa
mov
sub
pusha
orb
adc
mov
sub
pop
add
push
shr
cmp
adc
push
outsb
cld
repnz
movsb
and
dec
mov
pop
lcall
in
cltd
fdivrs
ljmp
jne
push
lret
fidivrs
xlat
push
or
pop
push
das
pop
and
movsl
stc
dec
or
test
dec
push
scas
inc
ja
pop
dec
movsl
repnz
dec
xorb
adc
jl
lcall
fmuls
push
das
push
pop
add
mov
push
pop
cltd
jge
jmp
add
addl
xchg
dec
or
jmp
sbbl
push
add
lea
bound
inc
and
aas
idivb
xchg
cli
jb
ja
imul
adc
jns
js
shr
icebp
rol
inc
xor
mov
fdivs
dec
mov
jmp
aas
dec
ret
cmc
rorb
xchg
lods
mov
add
add
cmp
movsb
lods
or
or
inc
xchg
arpl
loop
mov
aam
push
fs
sub
dec
adc
push
out
addr16
or
loope
insl
test
add
pop
sbb
ljmp
rorl
iret
xor
into
idivb
sub
lahf
mov
adc
ret
pop
xor
out
cmp
adc
shrb
sub
hlt
inc
jp
add
rcll
cmp
leave
jbe
js
or
xchg
imul
add
mov
inc
lahf
adc
sub
sbb
jo
xchg
xchg
adc
xor
test
sub
or
outsl
dec
outsb
stos
add
shrb
aad
inc
lahf
dec
jae
mov
aaa
xchg
scas
aaa
stos
xchg
push
lgs
push
gs
lods
je
test
mov
pop
dec
xchg
or
mov
outsb
insb
int3
jns
xchg
push
and
sbb
pop
add
mov
dec
lahf
push
test
test
sub
sub
add
call
repnz
sbbb
fcomi
adc
mov
and
pop
stos
shl
outsb
filds
cld
stos
popa
das
lods
jecxz
jmp
mov
jo
ret
push
push
xor
leave
movsb
ret
jge
push
test
ret
and
rorl
scas
xchg
scas
fdivl
sbb
dec
ja
adc
imul
pop
ljmp
fmuls
jo
pusha
cmc
add
cwtl
mov
push
xchg
dec
addr16
mov
adc
loope
scas
pop
cmp
cli
scas
aas
push
sbb
mov
cmpsb
dec
aam
sub
xor
sbb
das
testl
outsb
movsl
xor
insb
imull
mov
out
dec
xchg
jne
je
pop
jne
lock
mov
out
hlt
repnz
clc
stc
inc
imul
adc
jmp
in
dec
pop
push
pop
mov
push
stc
aad
icebp
push
shlb
cltd
sbb
adc
jle
mov
arpl
aas
or
in
mov
popf
ret
push
push
mov
stos
xchg
fidivl
clc
out
jb
xchg
lahf
imul
icebp
int3
imul
push
fsubrl
cmp
or
xchg
aam
add
lahf
repnz
cwtl
fcom
add
test
ljmp
iret
xlat
mov
imul
ljmp
fists
ss
push
adc
insl
mov
and
xchg
jl
insb
pop
jge
mov
or
add
jmp
std
dec
jns
aam
in
int3
fisubrs
fnsave
jno
xlat
movl
gs
cs
xchg
in
inc
lea
shlb
xor
xchg
insl
jg
fcompl
imul
cmpsb
ds
mov
lahf
stos
sbb
mov
jmp
test
mov
pop
jmp
aas
lods
ret
push
addr16
and
mov
mov
js
add
icebp
iret
cmp
lods
pushf
and
xlat
int3
push
shl
ret
aaa
xor
addr16
mov
dec
daa
sbb
rclb
sbb
lds
pop
mov
insb
mov
or
cmp
mov
test
sub
lds
inc
dec
call
ja
cmp
xor
imul
push
aad
sbb
jo
jns
or
popa
arpl
outsl
inc
push
or
sub
loopne
aad
cmpsb
adc
sub
inc
cmp
sub
mov
cltd
xor
fwait
ret
and
shr
iret
sub
pop
dec
addr16
cmp
push
repz
fwait
xchg
icebp
je
les
dec
testl
push
ja
cltd
add
mov
pop
pop
popf
stos
add
jns
xchg
add
jmp
clc
rcrb
mov
fwait
add
decb
movsl
cmp
pop
mov
arpl
rorb
or
sbb
in
push
enter
mov
lock
out
jg
adc
mov
fwait
fwait
rcrl
mov
inc
sbb
sbb
push
jae
aam
dec
ror
sti
aaa
add
ja
mov
aaa
test
or
cltd
iret
mov
mov
in
dec
xchg
in
movsl
call
and
lea
xchg
iret
cmp
xor
in
or
push
jnp
xchg
lods
xchg
xchg
arpl
std
xchg
loop
inc
sub
out
push
arpl
jnp
je
mov
mov
xchg
loopne
call
dec
aam
cli
dec
fiaddl
test
in
aam
mov
add
das
leave
lock
fdivrl
adc
push
test
push
xchg
enter
xchg
idivl
loope
mov
sti
insb
vcvtpd2psx
add
and
xchg
movsl
sbb
sub
mov
das
imul
in
push
jno
sub
nop
pop
cmp
or
adc
bound
jecxz
xor
leave
sahf
xor
jo
jnp
dec
mov
xchg
notb
imul
xlat
xor
dec
insl
push
add
test
dec
rcrl
pop
jp
push
lahf
sbb
ficoml
mov
add
and
pusha
in
pop
mov
ja
sti
nop
cmp
insb
ds
cmovbe
test
stos
iret
mov
inc
push
in
push
inc
pop
hlt
xlat
outsl
dec
sbb
test
xchg
in
stos
xchg
inc
sub
rorl
insb
push
cmp
push
jne
adc
cmp
push
daa
sahf
jb
cltd
adc
sbb
push
adc
mov
and
xchg
dec
xchg
arpl
rcr
das
mov
out
cmp
xchg
imul
xchg
mov
cmpsl
dec
sbbb
sbb
lret
arpl
xor
cli
imul
fldcw
sbb
pop
mov
scas
sub
sahf
cld
enter
dec
cmpsb
pop
in
pop
dec
cmc
cli
je
xchg
cltd
or
outsb
fidivrl
adc
addr16
daa
sub
xchg
cld
jge
and
lret
cmp
leave
in
loope
daa
pop
dec
in
xor
lret
xchg
popa
mov
xor
loopne
sub
in
sub
pusha
lock
pop
stc
mov
mov
loopne
in
inc
jge
xor
jns
notl
mov
jmp
or
and
pop
xor
add
mov
mov
inc
and
xchg
ret
into
pop
sbb
xchg
test
out
xchg
pop
add
hlt
add
pop
fs
cmp
or
popa
insb
shrb
mov
cmp
pop
fwait
push
push
ss
lahf
mov
jecxz
ret
leave
mov
jbe
dec
in
lock
stc
push
out
sbb
movsb
outsb
lods
mov
imul
jmp
pop
mov
inc
push
mov
test
fsub
mov
movsb
cmp
cltd
mov
clc
dec
imul
mov
mov
js
lods
or
nop
or
mov
dec
and
gs
fidivrl
pop
ja
incb
or
pop
pop
push
cmc
loope
ja
rclb
out
pop
sub
jmp
xchg
pop
or
dec
xchg
cli
mov
push
mov
out
into
frstor
int
inc
lret
mov
push
xchg
hlt
mov
testb
inc
xchg
data16
or
inc
test
mov
dec
bound
push
sub
push
xchg
pop
pop
push
push
out
in
ljmp
xchg
mov
lcall
and
popa
sub
mov
push
test
sub
xchg
push
fldt
sub
adc
jl
xchg
sahf
push
cmp
push
dec
xchg
cltd
inc
pop
lods
cwtl
or
push
stc
sbb
pusha
jmp
add
xchg
sahf
sub
enter
add
jge
out
shll
cmp
cmp
aad
cmp
movsl
jb
arpl
in
add
int3
adc
add
test
stos
enter
lds
add
add
ds
dec
mov
push
mov
imul
sbb
inc
mov
and
dec
ds
fcompl
je
daa
std
cmp
dec
cs
ds
inc
adc
jnp
or
add
scas
out
sub
adc
outsl
push
dec
jecxz
cli
mov
mov
xor
shl
pop
arpl
pop
or
mov
fwait
aam
out
sahf
imulb
adc
mov
loope
mov
cmp
jne
lods
and
mov
ljmp
lcall
sbb
mov
frstor
jne
sbbl
adc
push
jg
xor
dec
scas
xor
aad
stos
fidivrl
adc
or
std
push
dec
loopne
pushf
cmovbe
sbb
xchg
jg
push
xchg
push
mull
xor
mov
sub
xchg
adc
jmp
xchg
test
icebp
in
outsl
xchg
dec
pop
or
inc
loope
cmp
lods
cmp
pop
xchg
cwtl
pop
xchg
loop
cwtl
jo
outsb
pop
lea
jl
add
xchg
bnd
sbb
insl
dec
nop
out
jmp
push
aad
inc
xor
es
and
xor
sbb
sub
lret
jo
fsubrl
sbb
fnsave
mov
mov
cmpsl
loop
das
movsb
dec
scas
sbbl
sbbb
xor
lods
dec
std
stos
sbb
cs
daa
out
add
lea
push
movsl
das
push
push
fcomp
addr16
pop
sbb
cmp
inc
mov
mov
mov
aad
cmp
sbb
adc
mov
mov
xlat
insl
rolb
test
aas
lds
pusha
pop
lret
scas
popa
dec
movsb
inc
dec
int3
lahf
orb
push
and
das
xor
xchg
pop
in
mov
icebp
dec
aam
cwtl
push
push
fsts
inc
cmp
xlat
fisttps
mov
and
cmp
cld
dec
inc
jmp
cmp
sub
jbe
xchg
xor
ja
scas
lds
sub
sbb
add
lret
jg
bound
ret
rorb
cmc
in
data16
cmc
or
lcall
addl
sbb
dec
les
and
add
mov
inc
fiadds
out
das
out
ljmp
pop
je
and
pop
outsb
inc
push
mov
dec
adc
mov
pop
lods
push
push
das
lds
xor
or
sbb
into
inc
mov
lds
leave
or
lock
popf
lret
jno
enter
mov
nop
movsl
fcoms
popa
mov
dec
pop
mov
mov
dec
mov
fcmovnbe
lret
cmp
push
pop
add
loopne
add
out
into
pop
mov
push
pop
arpl
dec
rclb
fwait
adc
mov
cmc
jl
dec
and
pop
cmpsl
leave
push
test
push
out
xor
pop
stos
rcl
dec
lahf
push
jae
cld
stos
dec
scas
dec
out
dec
xor
add
jbe
push
fcmovb
imull
in
aaa
mov
jae
or
mov
mov
dec
hlt
mov
inc
adc
jae
dec
push
sahf
loope
ljmp
ja
lods
mov
sbb
sub
mov
lods
add
push
in
enter
sub
insl
xchg
test
out
or
mov
sbb
cmc
dec
lahf
and
and
inc
mov
arpl
fsubrs
cwtl
loope
sub
xchg
xor
je
xchg
dec
jmp
mov
or
fwait
mov
cmp
cmp
mov
cltd
sahf
jno
mov
jns
inc
sub
push
cmpsb
dec
dec
jb
cmp
test
popf
push
imul
cmc
xchg
xchg
cmc
mov
aad
scas
sbb
aam
pop
jbe
lret
add
int3
pop
push
or
insb
roll
pop
push
add
xchg
jecxz
les
inc
sahf
mov
push
outsl
fsubrl
mov
and
loopne
inc
mov
mov
adc
shl
jecxz
push
pushf
xchg
bnd
mov
jle
rorl
push
outsl
cld
test
fisttps
fdivs
mov
jecxz
out
hlt
sar
sahf
sub
das
and
dec
mov
shlb
insl
enter
dec
lods
ja
adc
or
add
sbb
mov
sub
xchg
cmp
imul
mov
cmc
stos
out
ret
outsl
in
mov
scas
sbb
nopl
inc
arpl
or
sub
ret
push
xor
jno
bound
shl
dec
mov
out
cmc
adc
adc
or
fs
out
xlat
and
push
pop
jle
pop
and
sbb
and
push
das
jnp
lock
mov
in
pop
rorb
lock
adc
mov
test
data16
cmp
shl
lret
pushf
repz
cs
cmp
imul
push
mov
jge
in
in
scas
push
xor
or
mov
addl
sbb
sbb
and
xchg
or
jge
adc
daa
shrb
and
inc
xchg
clc
enter
jl
push
mov
lret
xlat
out
lea
cmp
mov
ret
enter
fildl
dec
or
cmp
inc
or
add
jle
mov
pop
hlt
ss
dec
ret
sbb
push
inc
or
push
mov
or
dec
mov
cmp
dec
cmpsb
or
add
inc
jne
aad
dec
add
xor
xchg
xchg
jmp
mov
sbb
fidivrl
dec
mov
jne
stos
adc
js
lods
es
mov
or
jg
sbbb
ret
jecxz
aas
ss
sarl
jecxz
mov
push
adc
lcall
add
sbb
mov
iret
test
int
dec
std
aam
push
push
stos
fs
push
push
sub
loope
add
mov
orb
nop
xchg
sub
or
pop
mov
lock
idivl
out
adc
xor
test
mov
inc
sub
loope
push
ja
sbb
sahf
fcoms
inc
enter
enter
decb
dec
sbbb
repz
and
cmc
add
fistps
push
jle
loop
fyl2x
add
mov
mov
push
mov
lahf
ljmp
cmp
shrl
mov
xchg
and
repnz
rolb
aaa
push
inc
cmp
fdivp
fbstp
mov
orb
loopne
mov
xor
stos
push
bound
into
push
and
mov
pop
mov
jmp
leave
and
push
push
lods
xchg
push
and
cld
ja
dec
sbb
fcmovne
dec
shlb
mov
fidivs
inc
jae
mov
push
xlat
aam
ja
ficoms
pop
push
cmc
clc
repz
shlb
cmp
mov
icebp
repnz
mov
insl
or
sub
fwait
and
in
pop
stc
arpl
sbb
sti
es
int
cmpsl
inc
insb
std
stc
sbb
aas
cmpsl
loopne
push
rclb
je
cltd
or
sub
inc
mov
cltd
push
mov
aaa
js
push
mov
xchg
cwtl
push
xchg
mov
or
mov
adc
rcrl
push
or
mov
int
test
sub
sub
mov
loop
fcomps
insl
subl
push
mov
rcll
dec
mov
loop
push
cltd
cmpsb
cmp
jl
dec
dec
in
mov
loop
dec
test
inc
dec
or
jb
pop
pusha
icebp
and
insl
ret
xchg
pop
inc
cltd
cwtl
pop
imul
add
pop
or
mov
mov
sub
pop
jnp
push
pop
pushf
fsubrs
movsl
scas
rol
mov
into
lcall
mov
and
mov
ret
addl
in
mov
in
test
sarb
dec
dec
sahf
xchg
xor
mov
add
mov
mov
in
cmp
and
iret
dec
insb
xor
ja
nop
imul
sbb
out
rcrl
test
add
mov
fwait
inc
scas
aad
aam
inc
data16
mov
pop
cwtl
inc
enter
push
fdivrs
rcr
in
pusha
jp
sub
out
cld
enter
sub
push
jb
aaa
insb
test
mov
adc
sbb
fstl
mov
int
out
inc
xchg
cwtl
nop
jae
cmp
outsl
negb
xchg
mov
aam
mov
pop
push
insb
or
xor
mov
lahf
ret
xchg
add
cmp
xor
out
mov
add
and
jmp
push
repnz
in
test
lds
pop
sarl
jns
jb
cs
sahf
adc
cmp
push
rolb
adc
filds
inc
icebp
scas
sbb
mov
imul
cmc
mov
pop
xor
push
aam
aam
adc
and
jns
dec
sub
bound
add
push
sbb
jne
cmp
cmpsb
aaa
sahf
movsl
ror
in
bound
mov
pop
pop
pop
nop
mov
bound
jbe
pop
int
inc
add
mov
jne
stos
test
lcall
sub
dec
fisttpll
adc
int
push
int3
and
lods
insl
xchg
insb
mov
int
jnp
jns
xor
and
sub
mov
loop
sub
popa
fidivrl
es
sbb
or
inc
xchg
pop
and
dec
int
xor
lea
out
mov
sbb
pop
mov
das
sbb
xchg
bnd
mov
and
mov
pop
cmp
cltd
and
jge
add
test
in
mov
push
inc
and
imul
call
inc
mull
push
lahf
inc
dec
cmp
pop
add
pop
jbe
jb
add
and
jne
sub
adc
ficompl
or
add
fwait
out
add
xchg
sub
lods
xchg
cmpsl
push
insl
repz
lahf
icebp
push
cmp
fstpl
cli
aam
pop
or
sbb
shrb
dec
mov
add
iret
and
out
or
pop
cmp
mov
paddsw
iret
sbb
or
xor
cmc
mov
notl
mull
es
cmpsl
and
xchg
jg
js
jo
dec
cmp
inc
jno
push
dec
push
pusha
mov
jmp
std
push
cmpsb
adc
fs
push
idivb
add
xchg
mov
icebp
pop
xorb
jnp
pop
dec
inc
add
mov
jle
sub
xor
ljmp
fiaddl
pop
pop
in
pop
rcrb
mov
pop
pushf
and
pop
daa
ja
mov
pop
jecxz
and
test
xchg
nop
call
dec
add
xchg
cltd
aam
and
loope
and
xor
push
je
or
push
cmp
mov
daa
test
mov
stos
enter
subb
jmp
push
xlat
push
jne
push
pop
add
ja
rcr
loope
cmp
testl
in
add
dec
hlt
stos
ret
fcoml
rcrb
push
dec
cmc
stos
fs
mull
mov
push
sbb
sub
in
adc
cmp
sti
mov
repz
dec
dec
ds
out
xor
sub
gs
add
call
cmp
adc
bound
sub
mov
test
sub
push
lods
stc
icebp
ljmp
adc
and
fcomps
mov
dec
fidivs
pusha
movsb
lods
test
outsb
push
dec
mov
and
adc
sbb
inc
adc
push
in
adc
or
or
bound
mov
add
sti
jne
sub
pop
mov
mov
and
fdivl
jle
mov
or
loop
mov
dec
jecxz
cli
pop
rcrl
lahf
xchg
rcll
out
pop
sub
sub
daa
notb
or
mov
andb
and
xchg
cltd
mov
push
mov
mov
push
lcall
fsts
clc
xorb
lds
adc
mov
leave
sub
xchg
sbb
push
and
mov
mov
dec
add
inc
pop
call
loope
xlat
fidivs
adc
push
jmp
insl
push
pop
outsl
inc
sahf
rolb
inc
in
jno
fwait
jns
mov
das
jae
dec
cli
cli
pop
aad
mov
mov
orl
sahf
xchg
mov
adc
pop
adc
ret
test
mov
push
movsl
push
push
scas
sbb
cmp
xchg
rclb
jg
addb
add
xor
xchg
popf
mov
lret
xor
andb
sbb
sub
gs
xor
cmpl
lcall
lods
cmp
sub
pop
bound
dec
and
out
rorb
push
or
ret
imul
mov
pushf
sbb
push
repz
in
stos
test
inc
fisubrs
mov
sahf
adc
stos
push
js
mov
cli
jo
pop
cli
inc
dec
or
fisubrl
ret
out
fmull
sahf
inc
loopne
mov
xlat
mov
and
xor
mov
mov
lods
aas
mov
andl
dec
sub
popa
enter
cmp
mov
inc
and
cmp
push
lahf
and
xchg
pop
cmpsl
lret
es
xlat
pop
mov
movsb
push
xchg
pop
loope
xorb
fwait
cmp
adc
cmpsb
xchg
loopne
ds
rcrl
jl
lock
icebp
or
mov
dec
neg
scas
mov
cmp
sbb
and
lea
bound
sbb
lods
cmpsl
or
dec
xchg
in
sbb
adc
pop
sarl
adc
cmp
setne
stos
mov
mov
imul
test
ret
sbb
cmp
xchg
ret
in
mov
data16
push
cmp
fdivrl
clc
scas
jmp
xor
pop
mov
outsl
cmpsb
jbe
push
std
les
mov
sahf
xchg
js
and
movsl
push
aas
xor
data16
cmp
push
sub
daa
dec
lods
std
jns
dec
mov
fucomip
mov
incb
xchg
loop
cwtl
iret
pop
xor
and
xchg
test
sti
cmpl
fs
jnp
pushf
sbb
push
pop
adc
xchg
cli
ja
push
push
mov
mov
push
aad
cmc
push
jns
mov
insb
cmp
rcll
ds
inc
sahf
and
pop
repz
mov
imul
adc
out
xor
lods
loopne
in
cmc
pushf
lock
push
inc
push
push
mov
xchg
add
push
cmc
mov
pusha
pop
mov
and
fldenv
xchg
orl
fcoms
in
ds
sub
aad
sub
in
mov
xor
inc
shll
pop
jne
mov
sub
mov
mov
imulb
cmp
xchg
cmc
test
mov
pop
and
scas
fistpl
push
pop
ds
outsb
xor
out
aad
jb
call
xchg
adc
mov
das
jge
ja
sub
lock
jp
shrl
cli
sub
mov
cld
or
add
loopne
jo
popf
fs
or
repnz
jecxz
adc
xchg
xor
dec
in
imul
xlat
push
mov
in
dec
dec
xchg
lods
jecxz
dec
sbb
lcall
loop
xchg
call
push
cmp
aas
movsb
or
and
mov
mov
add
sbb
push
mov
sub
sub
lret
sbb
jle
mov
pop
je
lret
or
cmp
in
jle
push
mov
pop
push
imul
inc
dec
mulb
cmpsl
out
mov
jnp
mov
je
pop
lret
imul
jb
mov
xchg
in
dec
push
clc
div
int
ror
xchg
or
inc
inc
jmp
mov
or
add
mov
adc
nop
pop
test
add
fwait
notb
sbb
outsl
or
mov
cmp
mov
dec
cmp
aas
dec
into
jmp
inc
in
out
sbb
cld
or
lcall
cmpsb
mov
and
dec
sub
mov
out
sub
mov
push
imul
pop
loope
mov
inc
cmp
mov
add
sub
jl
clc
mov
jbe
pop
mov
fwait
cmp
xor
outsb
inc
test
jns
cmp
imul
test
dec
roll
xor
cltd
cmp
cmc
aas
je
cwtl
mov
fisubrl
scas
push
adc
dec
mov
rcrb
mov
add
rep
dec
shrl
bound
lea
sbb
lret
inc
mov
dec
ljmp
jno
scas
ret
dec
add
sub
xor
lahf
add
lret
pop
lods
push
add
inc
or
inc
jnp
add
push
aam
push
xchg
fldenv
sbb
or
aas
pop
cmp
cmc
jnp
jb
xor
das
in
push
mov
fnstsw
cmp
pop
ja
arpl
adc
pusha
lods
jnp
push
neg
jp
movl
xchg
cmp
sub
xlat
xor
cmp
sahf
test
pop
and
dec
fwait
stos
ror
sbb
shrb
inc
push
or
out
pop
or
push
inc
and
test
xchg
adc
mov
jbe
mov
jmp
data16
pop
jbe
test
cs
jnp
lods
outsb
sbb
xchg
mov
mov
out
popa
icebp
dec
testl
ret
insb
stos
loopne
jmp
comiss
pusha
insb
dec
stos
or
sti
inc
xchg
cltd
outsb
mov
inc
jno
lahf
aaa
mov
sub
cmpsb
mov
jae
and
leave
dec
and
add
adc
adc
jmp
jle
push
loopne
mov
mov
dec
jns
adc
and
push
mov
inc
or
xor
or
mov
lock
mov
int
sti
and
or
mov
xchg
push
in
push
mov
in
les
jmp
movsl
sbb
pop
xor
push
xchg
and
mov
xchg
jecxz
mov
js
pusha
int
addl
or
insl
jbe
push
mov
and
mov
shrl
push
jnp
push
xchg
push
and
call
mov
mov
push
adc
jb
je
bound
rcrb
repz
nop
xchg
inc
repz
in
imul
dec
pop
adc
insl
enter
mov
adc
dec
inc
xor
jo
sbb
lret
pop
jo
ss
dec
je
mov
xor
rolb
xchg
jecxz
xchg
mov
sbb
aas
mov
mov
mov
ljmp
negl
xchg
xchg
push
or
xor
mov
cmp
mov
fwait
imul
jp
sub
add
inc
ja
xchg
outsb
inc
pop
and
push
js
mov
ja
imul
sbb
inc
rcll
adc
fisubrs
or
xchg
daa
or
xchg
imul
sub
in
shll
imul
xlat
xchg
inc
iret
fmull
insb
sti
pop
pop
mov
mov
sub
xor
xchg
pop
add
or
rep
outsl
cmc
dec
insb
test
mov
dec
lahf
pcmpgtd
mov
out
pop
and
test
dec
and
iret
cmc
inc
add
push
dec
xchg
push
mov
out
jg
pop
fiadds
jl
enter
pop
cltd
lds
dec
repz
movsl
xor
inc
rol
mov
lock
jge
xchg
test
mov
sbb
pop
mov
or
call
int
jp
loope
test
popa
clc
mov
dec
cmc
jns
dec
inc
aad
or
pop
insb
pop
and
push
inc
bound
jo
popf
adc
xchg
cltd
out
hlt
xchg
mov
pop
mov
xchg
pop
adc
out
ficoms
push
cs
aam
or
and
cmc
xor
aad
sbb
cli
inc
inc
push
shr
cld
shrb
cmpsl
aad
push
push
pop
mov
pusha
stos
aam
out
add
add
add
and
or
cmpsb
mov
popf
jno
mov
leave
int
sub
lcall
pop
mov
in
push
fimull
mov
and
clc
scas
sbb
dec
mov
in
cmp
push
cmp
inc
cmp
pop
mov
test
or
int3
leave
gs
sbb
test
mov
mov
sti
cmp
push
xchg
or
dec
in
es
sti
ljmp
mov
pop
leave
xor
cmp
insb
jnp,pt
inc
test
cmp
lock
xchg
xlat
aaa
xor
sub
das
jnp
add
sahf
inc
mov
or
pop
pop
push
or
jo
into
inc
pop
cmp
dec
pushl
in
stos
xlat
in
cmp
loope
xor
imul
push
rcrb
aad
and
lcall
xor
out
stos
ret
pop
inc
jmp
sub
cltd
pop
int3
repnz
sahf
cmc
xlat
aaa
xchg
pop
sbb
icebp
xor
inc
sub
loopne
push
xchg
std
add
push
jmp
pop
cmpsb
and
mov
call
or
or
xlat
adc
add
popf
and
gs
pop
mov
int
add
mov
cwtl
popf
mov
mov
arpl
or
and
cmpsb
testb
sahf
pop
pop
out
inc
adc
test
sbb
and
push
pop
sti
mov
add
shll
arpl
dec
jne
lods
repnz
pop
popf
idiv
adc
xchg
rorl
xlat
jp
outsb
divl
out
scas
sbb
add
call
dec
test
pop
mov
xchg
inc
xor
lret
add
sbb
in
shlb
and
iret
inc
mov
daa
test
mov
stos
andb
push
pusha
or
fs
js
rorl
adc
pop
pop
mov
fstps
sbb
sub
mov
repnz
or
nop
jae
pop
lret
jle
fsqrt
xor
pop
loopne
movsl
stc
je
sahf
and
jbe
ds
mov
dec
inc
imul
push
jbe
fstl
adc
fistpl
adc
dec
cmpsl
rorb
add
stos
xchg
cmp
fwait
repz
inc
outsl
cmp
push
loopne
mov
xchg
mov
push
xor
mov
cmp
cmp
push
xchg
jl
cmpsb
outsl
mov
stos
je
scas
cmp
dec
test
mov
mov
and
xchg
xchg
jecxz
paddd
mov
idivb
fstpt
push
mov
xchg
test
bound
out
push
dec
iret
aad
inc
mov
pusha
pop
scas
insl
lcall
sub
or
or
clc
and
jae
mov
and
fs
cmpsl
add
sti
dec
xor
xor
jecxz
aaa
xchg
push
adcl
fmull
sub
push
insl
sahf
mov
cmp
xchg
add
mov
inc
call
xor
sbb
les
icebp
jl
incb
xchg
push
std
mov
cmpl
dec
gs
nop
inc
loope
xor
mov
setbe
mov
sub
and
aaa
cmpsl
jecxz
loope
jl
jmp
sahf
push
int
mov
outsl
sahf
lcall
test
mov
andb
sahf
and
pop
rol
sbb
loop
sbb
push
mov
add
dec
jnp
adc
and
shll
addr16
call
jbe
or
lret
dec
pop
push
pop
pop
and
jp
iret
test
outsb
mov
pop
ds
and
ret
push
sub
mov
push
jne
std
dec
jnp
or
sub
stc
shlb
cs
adc
ja
loopne
xchg
or
dec
enter
adc
pop
mov
fildl
jecxz
fdivrl
pop
mov
mov
push
adc
and
mov
pop
adc
jge
mov
aad
and
jo
xor
push
test
sbb
lds
mov
xor
dec
add
add
bswap
and
inc
decb
mov
inc
mov
mov
stos
inc
pop
rcr
fildl
cmp
je
ret
cld
cmpsb
outsl
mov
jb
jecxz
jo
xor
je
sub
xor
xchg
ds
pop
loope
and
icebp
shlb
or
rorb
jnp
or
sub
pop
test
int3
push
das
xor
orb
jl
add
cmp
jne
sarl
fwait
jno
aam
or
pop
notl
scas
fsubl
loopne
popa
mov
sbb
push
lock
dec
cmpsl
and
mov
jg
test
dec
add
jns
punpcklbw
mov
xchg
lods
mov
jl
mov
xchg
adc
dec
sbb
pop
jge
jle
loop
jno
ja
rcr
inc
xchg
jle
popf
dec
mov
add
lods
mov
out
inc
push
in
adc
rolb
xchg
jbe
popf
fwait
add
test
push
or
aam
xchg
add
adc
fistps
xor
mov
pop
sbb
cmpsb
lahf
bound
jg
dec
mov
movsl
sub
imul
pushf
add
dec
pop
cmp
pop
adc
int
scas
test
test
stc
pop
mov
enter
test
popf
ljmp
cwtl
cmp
nop
push
cli
dec
idivb
jns
jae
loopne
mov
add
das
dec
jae
repz
cmp
cmp
dec
jb
xchg
hlt
in
and
stc
icebp
inc
cmp
scas
outsb
daa
dec
inc
xor
std
out
cmpsb
fistpll
cltd
fimull
cmp
xchg
pop
test
inc
add
mov
jns
icebp
sub
sti
sub
ret
rcll
mov
add
sahf
and
cli
scas
in
lea
cmpsl
fdivrl
mov
push
dec
adc
adc
xchg
ja
cwtl
pop
lds
lret
fs
inc
xor
loopne
inc
popa
jl
outsb
mov
js
add
push
fildl
imul
fdiv
adc
mov
mov
sbb
sub
mov
dec
jnp
sbb
stos
addr16
mov
dec
clc
xchg
movsb
lds
dec
loope
inc
aas
push
ret
mov
inc
sahf
xchg
and
add
fadd
test
sbb
sub
enter
push
jne
mov
arpl
mov
pop
stos
test
scas
daa
cmp
pop
fstpl
jl
mov
jle
lock
and
lret
test
pop
dec
ds
push
xor
mov
xchg
loop
pop
in
or
sbb
cmp
add
es
std
test
cmpb
stc
sbb
shl
js
loopne
cmpsb
adc
in
or
xor
mov
or
out
mull
jo
jbe
xor
mov
mov
or
add
push
popf
jmp
or
arpl
xchg
sub
push
imul
jns
lret
aam
cmpsb
inc
mov
in
mov
rorb
push
out
in
or
lcall
lcall
das
popf
mov
ljmp
push
addb
add
cmc
jge
shll
notl
sti
jecxz
dec
lods
mov
dec
loopne
adc
xor
push
sub
xchg
pusha
xchg
and
xchg
ss
lock
repz
pusha
dec
mov
out
mov
shrb
sahf
mov
mov
aam
lock
ror
pop
jo
test
cmovle
xor
jbe
cli
mov
in
pushf
mov
xchg
lahf
in
pop
insb
cmp
xchg
gs
sbb
cmp
dec
push
inc
mov
pop
dec
cltd
and
mov
sub
shlb
cmc
movsb
sub
ds
dec
mov
cltd
notl
mov
xchg
dec
rol
pop
leave
in
inc
mov
cmp
repz
push
or
push
jmp
or
cwtl
test
and
xchg
es
sub
pushf
pop
rcrl
mov
loopne
movsb
ja
cmp
test
ss
lods
aam
imul
add
es
xchg
mov
loop
les
sub
sarb
jns
les
jl
xchg
loop
insl
lds
js
cmc
dec
add
ret
daa
leave
jmp
mov
std
or
sub
jg
dec
xchg
jle
xchg
pushf
faddl
pop
and
cld
adc
aad
mov
mov
loope
aaa
mov
aam
push
pop
dec
dec
xchg
sbb
inc
lea
pop
je
xor
into
xchg
sbb
into
or
and
ds
int
adc
mov
iret
and
dec
or
cmp
shll
cld
rcr
fdivs
sahf
test
loop
jo
mov
jp
sarb
inc
xor
xchg
sbb
fwait
lds
push
pop
loopne
je,pn
xor
adc
or
shrb
inc
jne
insb
inc
and
jmp
xor
popf
inc
lock
out
jg
insl
mov
mov
imul
dec
cmpsb
push
in
lahf
mov
or
lret
cmpsl
pushf
push
and
xor
lret
in
stos
mov
pop
add
cmp
addr16
insl
pop
add
sbb
adcl
enter
imul
push
imul
jbe
mov
xor
insl
pop
leave
divb
dec
out
xor
lahf
push
xor
cmp
xchg
cmp
shl
pop
sarb
mov
lock
std
and
push
fs
pop
inc
sub
sbb
in
ss
test
ffree
adc
push
or
or
mov
sub
lods
test
or
iret
sub
jle
fistpll
lds
mov
aad
adc
shll
push
imul
ret
rorb
cmp
jne
sub
lret
leave
sub
rolb
subb
push
test
push
dec
xchg
mov
mov
inc
xchg
mov
mov
push
xchg
sti
mov
mov
fdiv
aam
pop
and
fdivrs
cmp
pop
pop
fistl
pop
fdivs
mov
xchg
and
inc
or
sub
adc
push
cltd
adc
ffreep
add
lret
gs
divb
outsb
fbstp
xchg
xchg
push
ret
inc
or
scas
xchg
in
xor
ja
popa
in
pop
bound
lea
xor
and
fidivl
shlb
or
pop
lds
jecxz
sti
outsl
mov
inc
sbb
iret
inc
clc
sub
data16
mov
sub
icebp
ror
sahf
and
pusha
ret
in
mov
cltd
mov
mov
and
out
mov
mov
sahf
mov
xchg
nop
or
pop
loop
jle
pop
orb
xchg
push
cli
add
aam
gs
cmp
ficoml
sahf
rcll
lret
inc
call
lds
inc
outsb
sbb
out
dec
enter
loopne
add
pop
sahf
ret
push
jp
mov
adc
sub
or
or
imul
or
jnp
push
in
popf
sub
int3
int3
or
push
add
lods
pop
imul
loop
jns
scas
dec
in
test
add
mov
jno
sub
and
std
xchg
dec
nop
hlt
rcrb
in
cltd
sub
mov
lret
dec
in
pop
jno
pop
sub
addb
jb
pop
out
fs
dec
mov
sti
fwait
rol
mov
mov
sahf
and
in
pop
jge
lock
xchg
fbstp
mov
adc
scas
mov
dec
cmp
adc
push
cmp
fisttpll
sbb
repz
aas
mov
enter
adcb
out
xor
pusha
sub
sbb
cmp
ret
adc
push
xor
mov
pop
push
mov
jno
pushf
jae
push
les
fs
in
mov
jbe
shll
mov
imulb
inc
lds
in
rcll
lea
push
lcall
movsb
push
pop
add
jbe
sarl
mov
ret
in
shrd
cli
sub
add
test
lret
in
push
out
vpsubd
popa
and
sarl
imul
stc
dec
in
in
fisubs
push
mov
cltd
sbb
lret
ja
jns
scas
orl
sti
mov
aas
jmp
jno
leave
mov
sub
test
xor
sbb
fistl
outsl
push
cmpsb
xchg
imul
andl
sar
adc
cli
repnz
fdivrp
pop
lret
enter
insb
addr16
adc
arpl
test
sub
mov
out
cmp
add
int3
out
add
jmp
cmp
das
ficomps
mov
dec
rolb
arpl
repz
push
shlb
xor
mov
lea
and
add
and
cmp
in
inc
add
mov
bound
push
stc
push
sub
push
and
out
cmp
push
cmp
pushf
into
adc
mov
mov
int3
push
lret
sbb
jns
adc
mov
mov
pop
ja
inc
ss
js
or
jge
adc
jge
stos
enter
xor
fld
clc
jmp
popf
xlat
imul
xchg
add
dec
mov
sbb
pop
imul
imul
xchg
mov
push
dec
pop
aas
fdivrl
lods
jno
adc
push
inc
and
cli
or
insb
adc
push
cmc
cld
bound
movsb
or
sub
imul
cmpb
daa
push
mov
repz
mov
faddl
cld
mov
bound
push
outsl
mov
xchg
in
fcomip
mov
data16
das
test
imull
push
and
in
scas
ljmp
das
repz
lcall
push
inc
shlb
movsb
xlat
js
dec
test
nop
es
loop
shll
leave
int3
in
inc
sub
and
cmp
cmp
stc
xor
and
mov
jno
mov
loop
dec
jecxz
pop
xor
xchg
xlat
sub
mov
xor
pop
cmp
outsb
sbb
addb
push
jnp
pop
aaa
scas
jno
fisubl
xlat
xchg
fldcw
push
nop
sbb
mov
cli
loop
imul
dec
jecxz
add
or
push
clc
cs
ss
fadds
lea
push
es
lds
aad
mov
mov
or
lods
cmc
stc
aad
aad
outsb
sbb
stos
push
fldenv
sub
fnstenv
int
pushl
adc
xor
sarl
xchg
or
idivl
addr16
or
pop
or
adc
arpl
pop
pop
in
scas
imul
push
jle
test
xor
in
mov
int3
push
add
and
dec
addb
sub
out
xor
aas
mov
stos
pop
mov
cmpsb
cli
dec
movsl
lea
adc
lods
test
jnp
adc
pop
ds
shlb
in
dec
repz
subb
repnz
in
loop
dec
and
vorps
or
adc
push
mov
mov
or
mov
mov
pop
loope
cli
adcb
loopne
pop
dec
roll
cmp
arpl
outsb
pop
stos
lea
mov
sarl
clc
je
lods
mull
stos
outsl
jbe
mov
jp
fucomi
mov
neg
add
es
inc
aam
add
rol
dec
mov
jl
inc
xor
xchg
jo
push
mov
fiadds
ja
ds
aad
rcrb
xor
jne
mov
movsb
pushf
mov
and
inc
arpl
jns
cmp
je
dec
xorb
lret
rcr
dec
aad
pop
imul
jle
push
sub
jge
xor
adc
cmc
and
loope
shrb
in
mov
mov
std
push
dec
adc
inc
ds
scas
push
cmpsl
pop
adc
nop
cwtl
dec
cmp
or
mov
xor
adc
adc
lret
mov
loop
lods
jb
mov
jb
fcoml
int
stc
das
dec
mov
or
mov
fildll
fstl
pop
sarb
adc
clc
xchg
movsl
iret
loop
rolb
or
jle
cmp
in
ljmp
je
stc
xchg
lods
push
lcall
mov
jae
mov
je
and
or
dec
iret
dec
xchg
xlat
adc
cmpsb
pushf
pushf
push
xchg
adc
cld
sub
cmp
arpl
push
rolb
mov
in
lods
movsb
or
cld
subb
mov
lea
fcmovbe
mov
push
test
sub
js
or
cmp
jne
sbb
faddp
jge
inc
es
ljmp
mov
sti
cld
scas
mov
nop
cwtl
inc
std
adc
cmpsb
fldcw
lods
and
lahf
pop
shl
addl
sbbb
orb
mov
fsub
xchg
imul
les
cld
xor
pop
iret
std
addr16
movsl
sbb
rcrl
push
push
pushf
bound
xchg
je
cmp
into
and
jg
out
inc
ret
movmskps
push
push
es
loopne
xor
out
mov
inc
js
stos
addr16
sbb
xchg
mov
out
mov
pusha
imul
push
xor
xchg
ljmp
std
dec
inc
out
push
out
imul
lret
sub
push
dec
cs
mov
idiv
xchg
push
adc
je
pusha
mov
adc
inc
arpl
fs
shl
fidivl
je
sub
cmpsb
xlat
into
fadd
adc
add
inc
or
out
out
adc
call
outsb
cmp
popl
add
sub
add
jnp
xor
and
loop
popf
stc
call
dec
and
push
mov
cmc
test
xor
aad
push
lahf
adc
inc
dec
in
cltd
aad
fwait
pop
add
dec
lods
or
mov
mov
push
nop
and
subb
push
addr16
les
xchg
test
sti
push
xchg
push
pushf
popa
mov
std
xor
daa
sti
mov
fbld
int3
fs
lods
xchg
xchg
sbb
dec
std
das
xor
aad
not
hlt
aam
push
jge
imul
and
fiadds
mov
test
stos
ret
aam
pop
fadds
mov
sbbb
les
fdivrl
jmp
jb
add
cmp
in
jo
dec
push
fdivl
mov
or
sub
or
or
movsb
xchg
dec
dec
xor
lahf
inc
add
xchg
repz
lahf
les
push
jecxz
arpl
lods
add
dec
pop
cwtl
jae
loope
add
pop
inc
adc
sub
out
cli
dec
loope
ljmp
cmp
push
lahf
jnp
lea
fistpll
adc
or
sub
out
fbld
add
ret
xor
and
addr16
sti
int
jbe
outsb
and
sub
lret
or
enter
and
loop
xchg
jne
push
sub
stos
mov
in
mov
lods
xor
jge
adc
xor
enter
jp
arpl
xor
or
or
scas
inc
rolb
test
orps
test
loopne
fidivs
mov
lret
push
jbe
neg
or
push
shl
andl
stos
push
repnz
push
fisubrl
dec
aas
jnp
inc
aaa
dec
loop
push
cwtl
arpl
jge
lods
movsb
stc
push
sti
add
test
cmp
loope
xchg
cltd
cld
mov
add
mov
daa
jne
dec
ljmp
in
xorb
inc
adc
cmp
and
sbb
pop
in
mov
xchg
cld
xor
imul
push
push
sub
jae
and
mov
out
mov
pop
pop
jmp
and
aad
mov
mov
add
push
inc
cmp
mov
adc
divl
std
add
mov
call
xchg
mov
cmpsl
jbe
shlb
or
cli
fcmove
push
aas
fstps
cmc
or
jecxz
sub
lods
or
adc
inc
add
andb
fldenv
fnstcw
or
js
dec
xchg
shlb
shll
adc
pop
mov
cmp
sbb
pop
mulb
rorl
dec
loopne
lock
jnp
sbb
shl
outsl
pushf
outsl
fstl
test
xchg
sub
cmpsb
inc
jo,pn
pop
insb
push
adc
into
jp
out
or
hlt
scas
fucomp
xchg
push
imul
call
fisttps
arpl
add
cltd
jnp
jne
jns
shrb
bound
in
jo
aad
jp
xchg
cmp
jp
mov
push
ret
xchg
dec
xchg
inc
mov
mov
cmpsb
in
pop
scas
out
adc
lea
sbbl
scas
inc
lahf
outsb
push
outsl
sbbl
out
gs
push
imul
outsl
fsubs
scas
imul
stc
mov
sbb
in
sub
aam
js
cli
mov
xor
push
ficoml
mov
mov
jns
cmpsl
mov
mov
in
pop
adc
test
inc
push
pop
jno
mov
inc
xlat
push
cmp
andl
in
outsb
dec
mov
mov
mov
lock
stc
mov
mov
stos
imul
imul
rcl
xchg
dec
mov
cmp
into
dec
ds
mov
ja
scas
jle
outsb
xchg
and
jbe
push
xor
pushf
xchg
mov
lods
inc
pop
sub
fwait
in
idiv
dec
lods
push
ja
pop
adc
push
dec
addr16
sahf
xor
jmp
cmp
mov
pop
call
mull
xchg
testl
int3
cmpsl
inc
or
jmp
scas
arpl
add
ffreep
icebp
shrb
xchg
sbb
adc
stos
pop
adc
loop
push
das
mov
cmp
push
fmul
cli
mov
push
add
nop
xchg
ret
sbb
in
bound
in
dec
cs
add
push
add
scas
dec
nop
inc
mov
adcb
push
cmovae
dec
sbb
push
out
scas
test
lcall
mov
cmpb
push
inc
jl
dec
or
shll
jb
sub
imul
adc
inc
cwtl
inc
push
xlat
and
inc
dec
inc
jp
dec
daa
and
adc
push
xchg
lret
int
add
cwtl
out
stc
shrb
stos
fs
pop
ljmp
insl
mov
arpl
incl
cwtl
cmp
testb
fisubs
mov
test
mov
sub
ss
cmp
xchg
sub
mov
mov
pop
push
jmp
icebp
icebp
and
fwait
nop
xor
dec
xlat
dec
es
jo
cs
mov
pop
cli
fs
sub
push
inc
pop
lock
jbe
cli
mov
jo
aad
mov
or
shl
adc
out
repz
in
call
mov
pop
or
roll
dec
inc
mov
out
test
bound
cmp
cmpsb
pop
cmp
push
scas
pop
mov
pop
movsb
int
push
and
mov
in
jecxz
outsl
dec
cmp
aaa
arpl
sub
or
or
inc
fcmovu
xor
sbb
mov
in
push
pop
dec
mov
cmp
mov
adc
fwait
jb
cmp
out
xor
out
hlt
jnp
xchg
loopne
mov
mov
mov
mov
push
xchg
inc
mov
mov
jbe
push
pop
sbb
aad
out
mov
adc
sbb
fcomps
jns
pusha
fdivr
adc
add
aam
mov
std
push
fs
xchg
cltd
rol
sbb
sbb
sbb
fcoms
sti
inc
cmp
adc
push
xchg
xor
cmpsl
inc
gs
loopne
add
adc
ss
aaa
add
fsubp
inc
xchg
loope
adc
movsb
sub
sub
pusha
sbb
mov
shlb
lds
and
dec
fucom
mov
pop
rclb
sbb
or
fsubs
dec
xchg
enter
insl
cmpsl
int
push
push
fucomp
repz
add
cmp
adc
pusha
fcoml
mov
mov
adc
mov
xchg
xchg
push
loope
mov
jp
add
push
push
push
adc
inc
xor
sti
in
es
shll
das
cmp
jge
dec
lahf
sub
pop
cmp
xchg
ficompl
push
aaa
adc
repz
mov
dec
push
jecxz
mov
loopne
push
adc
test
enter
pop
andl
jp
fld
sub
dec
fwait
sub
sub
sub
cmpb
pushf
cltd
dec
mov
adc
scas
in
ror
cmp
adc
or
outsb
mov
mov
out
sub
mov
mov
xchg
cmpb
xor
mov
jnp
cmp
pop
add
sbb
mov
and
or
fldenv
jmp
lcall
mov
dec
push
push
add
outsl
inc
adc
rorb
jg
stc
gs
jbe
sbb
jecxz
pop
fbld
jp
aad
jg
enter
mov
adc
cmpsl
fldcw
in
out
int
sub
decl
in
inc
jo
clc
mov
int
mov
mov
add
clc
mov
clc
add
sub
push
jb
popa
dec
add
bound
out
clc
std
fdivr
lea
xor
lret
mov
out
icebp
nop
stos
mov
out
xor
mov
popa
sahf
fstl
mov
pop
or
int3
shrb
ss
add
roll
push
lods
mov
test
jle
ljmp
sub
sub
lods
loope
mov
mov
sub
in
mov
les
popf
mov
adc
jecxz
in
lds
jnp
xor
push
arpl
fsubs
fcmovnb
jecxz
xor
cli
jno
xor
lds
jg
test
sbbl
out
mov
adc
je
ds
lods
adc
not
test
and
aaa
jae
fs
in
repnz
inc
adc
iret
stos
and
ret
nop
mov
leave
fmuls
push
sub
push
jb
xchg
mov
adc
sub
push
mov
stc
mov
mov
adcl
fidivrs
mov
or
dec
into
movsl
push
lea
cltd
lods
mov
shll
xor
pop
mov
or
mov
into
lods
sub
mov
je
push
add
dec
xorl
or
stos
js
inc
pop
push
add
or
adc
lds
in
in
in
and
inc
mov
out
ss
mov
call
outsb
dec
xchg
scas
sarl
sub
mov
fsubrs
roll
mov
insb
mov
mov
mov
sti
leave
into
sbb
in
hlt
test
adc
cli
add
test
fnsave
push
mov
mov
sbb
aaa
mov
out
sub
or
adc
push
push
es
mov
add
sbb
cli
jecxz
in
gs
and
jge
loope
loope
lret
loop
ret
and
jg
push
insl
iret
call
cwtl
xor
repnz
xchg
in
pop
lahf
loope
adc
xor
lds
stos
clc
mov
cmp
dec
mov
cmpb
adc
int
pushf
inc
in
cmp
push
mov
pop
mov
pop
rcl
jne
jne
mov
jno
fs
fnsave
jno
scas
or
xchg
out
data16
dec
cld
mov
mov
xlat
test
sbb
xchg
cwtl
cmp
sub
adc
ss
loopne
ret
inc
ljmp
filds
inc
loopne
cld
jp
leave
push
adcb
xchg
in
xchg
mov
inc
xor
sub
mov
pop
cmp
fistl
popf
mov
in
inc
pushw
mov
outsl
movsb
aam
mov
decb
insl
add
fcomps
sbb
cmc
pop
enter
les
out
sbb
hlt
mov
jns
sub
adc
mov
in
sahf
daa
cld
fimull
out
adc
fstl
fwait
adc
xchg
out
jmp
loop
cmp
ss
mov
xchg
and
data16
cmp
dec
aas
pop
xchg
pop
fsubrs
inc
outsl
icebp
into
stos
fwait
les
mov
sbb
in
jg
jl
mov
nop
fisubrs
sbb
mov
aad
stc
mov
mov
and
jne
out
pop
cld
cs
push
sbb
xchg
stos
inc
fsubrs
pop
add
inc
nop
ss
xchg
std
int
clc
ss
fisubs
mov
pushf
xchg
mov
cld
test
popa
imul
dec
xchg
cmpsb
mov
pop
mov
jnp
shrl
adc
xchg
pushf
loope
jno
inc
std
push
mov
xchg
xchg
inc
aas
adc
pop
imul
xchg
or
dec
add
cmpsl
lock
pop
mov
sub
stos
leave
mov
aas
push
sub
xlat
adc
ret
jb
imul
lret
das
xor
mov
mov
ja
fidivl
add
pop
push
xchg
cwtl
or
cmc
outsl
aad
test
adc
or
or
ret
adc
loopne
jg
jns
push
pusha
or
dec
movsl
xor
inc
pop
jbe
push
fisubl
daa
xchg
adc
xchg
xchg
inc
icebp
test
mov
jns
jg
fadd
jo
cwtl
jle
jb
movsl
sub
lea
sub
sub
ret
dec
xor
dec
mov
sub
add
cwtl
jp
push
rorb
out
lcall
insl
sbb
push
xchg
pop
movsb
scas
outsl
add
xor
sbb
dec
adc
jle
add
mov
lret
sub
xchg
enter
and
fwait
loope
stc
movsl
mov
cmc
sti
inc
scas
pusha
cmpb
xchg
in
mov
test
stos
ss
xor
inc
in
test
mov
test
pop
loopne
xlat
gs
pop
dec
scas
repz
popa
ja
lods
cs
unpckhps
mov
aas
test
leave
test
mov
push
or
scas
lds
and
fprem
inc
arpl
dec
mov
jle
adc
lcall
scas
popf
cmp
jbe
dec
cmp
pop
lock
xchg
add
jae
adcb
aaa
mov
stc
mov
dec
adc
dec
mov
mov
dec
jge
loop
lods
push
in
xor
and
cmpsb
xchg
ret
fmulp
xchg
lret
mov
test
lock
movsl
push
mov
imul
jp
stc
mov
sub
lahf
outsb
movsl
fstl
sub
push
adc
cmp
push
fs
add
mov
cmp
or
lcall
xchg
shlb
sahf
std
pop
push
movsb
xor
mov
pop
fsub
fstpl
ret
icebp
inc
jmp
fnstenv
clc
or
pop
sbb
lds
pop
xchg
popf
cmpsb
push
or
pop
cmp
fistl
add
or
or
ds
sahf
test
mov
xchg
mov
sti
ds
mov
jg
mov
ret
scas
mov
jl
push
fs
outsl
aam
sub
mov
arpl
mov
shl
cmpsl
in
icebp
es
lret
fistpl
mov
leave
out
into
xchg
mov
push
jnp
lahf
out
jne
jp
or
sub
inc
insl
xor
in
lods
icebp
stc
fs
xchg
mov
in
in
mov
mov
jnp
mov
jl
fsubrl
mov
mov
pushf
push
pop
add
pop
add
scas
nop
or
xor
mov
or
inc
pop
mov
pmullw
jo
inc
sbb
jmp
out
rcrb
les
add
jnp
sub
dec
out
pop
or
stos
cltd
mov
jle
cld
shl
dec
scas
jo
jl
loop
xor
stos
xchg
cmp
leave
push
xor
lea
or
shr
pop
xchg
addr16
mov
jg
lahf
adc
jnp
shll
rcrb
dec
sbb
adc
in
icebp
dec
fs
flds
and
add
adc
dec
scas
pop
push
aas
arpl
cmc
jmp
push
cmp
or
pop
mov
sub
mov
jl
and
or
seto
mov
mov
addr16
addr16
cmp
pop
mov
mov
jge
dec
cmpb
imul
loopne
and
push
cmc
mov
inc
sub
lret
jle
mov
or
mov
jnp
or
iret
mov
lret
fcoms
loope
lods
jbe
jb
add
fsubs
sub
add
test
dec
push
movsl
call
stc
xchg
repz
jge
je
mov
mov
testl
cmp
nop
pop
inc
xchg
sbb
push
test
push
sub
fnstenv
dec
lds
insb
lcallw
nop
push
mov
mov
mov
add
popf
pop
fbstp
ret
xor
rcr
pop
mull
inc
call
jns
call
sbb
cmc
movsl
shll
sbb
xchg
inc
xchg
out
push
dec
or
add
lods
das
fs
scas
adc
mov
repz
into
push
push
mov
jle
mov
mov
dec
sbb
fsqrt
sti
movsb
aas
shrb
mov
sub
addb
pop
and
or
mov
mov
int
daa
aas
pop
mov
xchg
aaa
cmp
push
mov
jns
sbb
pop
jne
in
sub
xor
sahf
mov
dec
out
test
out
add
icebp
adcb
jmp
jecxz
sbbl
ror
stos
xor
adc
or
or
fmull
cmpsb
push
fs
je
xchg
inc
icebp
and
or
arpl
fs
xor
jg
sti
cli
dec
xor
xor
out
mov
subl
dec
stos
lret
dec
sbb
adc
scas
pop
ljmp
into
push
jne
dec
inc
iret
pop
and
jle
sbb
mov
imul
and
leave
mov
fcmovne
sub
arpl
cli
xchg
inc
or
mov
std
ja
ret
aas
cmp
stos
popf
sbb
mov
sub
loope
or
imul
clc
movsl
std
cmp
icebp
push
fwait
call
and
mov
stos
jno
push
xor
ret
fldln2
and
movl
int
imul
sbb
popa
jg
or
push
mov
xor
mov
sub
sub
aam
imul
mov
inc
or
loope
arpl
ja
loope
mov
mov
xchg
jecxz
bnd
insb
fidivrs
or
jmp
out
adc
pop
scas
ss
xor
iret
cli
mov
enter
cmp
inc
push
cli
nop
lods
cmp
cmpsb
push
out
mov
pop
movsl
scas
sbb
ljmp
cmp
xchg
and
testl
pop
lret
pusha
sub
paddsb
fs
jecxz
inc
sbb
dec
cmp
cltd
jbe
jbe
mov
lret
mov
lahf
sbb
mov
push
xor
fcoml
jb
cli
dec
movsl
cmpsl
push
xchg
pop
lock
or
out
arpl
lret
shll
roll
sar
dec
aaa
dec
pop
mov
movsb
jge
fidivrs
xor
push
iret
cmpl
and
das
adc
pop
mov
and
or
xor
add
sub
out
pop
ds
out
or
xor
adc
in
insl
stc
push
or
into
arpl
stos
movsb
popa
cs
int3
fisttpl
sbb
fstpt
xor
rcrl
dec
test
rcll
lcall
in
test
xchg
push
pusha
dec
and
subl
out
or
fmull
add
movsb
mov
fcompl
push
adcb
xor
imul
mov
cmp
mov
jle
xchg
push
sbb
jne
icebp
xchg
mulb
stos
frstor
testb
test
sar
inc
shll
das
lret
sub
push
repz
pop
daa
aaa
xchg
sti
lods
ds
push
mov
iret
inc
dec
pop
test
mov
xchg
and
jp
inc
inc
and
xor
arpl
sbb
sbb
jo
adc
andb
add
lahf
sbb
lahf
daa
test
and
cmc
dec
in
push
pushf
mov
dec
jns
in
cmc
adc
dec
pushf
dec
push
sub
add
fsubl
arpl
xchg
lods
push
mov
mov
mov
sahf
shrl
aad
pop
and
es
xchg
jns
and
scas
sbb
nop
pop
cltd
stos
lock
test
inc
imul
and
push
or
push
dec
mov
out
dec
roll
mov
ficomps
cmp
inc
jo
xchg
mov
inc
into
jne
pop
cmpsb
pusha
in
testl
or
icebp
inc
sub
idivb
mov
out
sub
fcoms
fisubrs
mov
or
outsl
and
push
insb
daa
dec
push
arpl
test
sbb
push
sbb
xor
inc
lock
call
aaa
adc
or
test
add
add
inc
mov
push
test
push
lret
push
bound
adc
adc
fwait
lfs
inc
xchg
and
arpl
aaa
inc
mov
hlt
fsubrs
sbb
fiadds
dec
clc
out
fsubl
in
inc
pop
je
push
xor
pusha
push
mov
push
sbb
jne
dec
mov
lods
cmovbe
mov
pop
add
out
add
popa
jo
inc
xchg
inc
sub
pop
dec
enter
das
aaa
out
inc
negl
lret
inc
xor
fsub
out
mov
and
jge
int
lock
inc
fsub
cmp
and
xchg
inc
int
or
adc
or
add
fcomps
add
inc
ret
test
test
gs
push
mov
mov
mov
roll
pop
push
mov
xchg
ja
jne
lods
pop
cmpsb
das
daa
push
in
push
jecxz
popa
adc
sub
dec
mov
bound
push
popa
mov
inc
inc
mov
dec
outsl
xor
aaa
fs
pusha
push
sbbl
adc
outsb
pop
dec
cs
mov
enter
mov
add
cmp
enter
js
push
ret
pop
and
add
in
aam
les
or
push
fcoml
stos
das
aad
dec
stos
stos
push
inc
sbb
mov
push
out
popf
outsl
insb
mov
movsb
popa
aaa
outsl
loopne
push
mov
sbb
mov
rcrl
test
jne
ds
lahf
push
mov
data16
pop
push
arpl
pop
sysret
xchg
mov
pusha
mov
push
dec
push
adc
xchg
cld
cld
cmp
imul
fcoml
xchg
adc
add
cmp
fldl
bswap
mov
mov
daa
ss
daa
mov
incl
pop
push
movsl
inc
aaa
xor
pop
cmp
fstpl
jno
cmp
xlat
and
jl
lds
mov
cmpsb
dec
xor
pop
jo
fwait
aad
jne
and
add
add
xchg
xchg
dec
mov
movsl
cmpsl
sub
xchg
fdivr
roll
mov
sub
repz
fcomp
mov
ss
repz
mov
inc
inc
icebp
sbb
add
les
jne
mov
push
jle
dec
test
cli
pop
mov
ret
popf
jg
pop
pop
std
in
pop
js
ret
or
fstp
rcrl
je
outsb
clc
or
call
call
movsl
pop
or
icebp
imul
xor
jo
ret
fcmovnb
fwait
adc
rorb
and
cli
dec
jp
mov
aas
call
add
cs
je
push
mov
cmp
ljmp
fisubl
mov
stos
mov
cs
pop
mov
shrb
in
fidivrl
je
cmp
mov
push
je
mov
xor
bound
std
filds
xor
mov
fildl
test
jo
into
in
data16
mov
push
ss
jb
xchg
dec
scas
pusha
lods
dec
xchg
inc
cmp
pop
push
mov
pop
mov
cs
bnd
sub
xor
jo
add
dec
xor
test
inc
xor
scas
push
sbb
fwait
icebp
cltd
rcl
call
xchg
add
in
insb
jmp
rcrl
and
lahf
daa
or
mov
xchg
orl
mov
xorl
negl
dec
sbb
add
pop
inc
jne
daa
inc
aaa
pop
enter
fbstp
cmp
mov
arpl
std
jmp
mov
popf
and
inc
or
sbb
jne
int3
push
sarl
and
lcall
imul
fs
fldl
or
push
mov
and
inc
fiadds
popa
add
popa
xor
gs
sub
jle
cmpl
ljmp
push
sti
cld
cld
rep
iret
movsl
mov
mov
xchg
rcrl
ljmp
dec
test
gs
sarb
mov
sbb
mov
pop
stc
and
insb
test
xchg
pop
pop
loope
pushw
mov
clc
sub
or
sub
aas
outsl
add
or
and
xchg
dec
cltd
jbe
rolb
or
imul
dec
dec
xchg
mov
subl
push
sbb
mov
mov
sti
mov
stos
icebp
std
jnp
mov
or
shr
lea
pop
push
scas
pop
cmp
mov
dec
push
push
push
fidivrs
popa
jg
adc
xor
andb
mov
clc
sbb
insl
xor
pop
ficoml
out
sub
std
cltd
or
sbb
idiv
ds
imul
mov
pusha
pop
push
cltd
jg
add
or
call
inc
fs
mov
out
mov
sbb
faddl
insl
rcrl
fldt
inc
outsb
iret
cli
icebp
cs
out
adc
sub
or
pushf
pop
push
add
mov
popa
sahf
in
inc
jg
clc
sbb
ljmp
fcoml
cwtl
jns
sub
cli
pop
rorb
lock
inc
mov
mov
ret
push
hlt
jl
cld
jmp
shr
xchg
jmp
aam
addr16
xchg
push
lahf
push
or
ljmp
outsb
jp
mov
lret
in
frstor
or
pop
inc
cmp
mov
xlat
cmpsl
cmp
shl
lahf
lods
cmp
imul
xchg
mov
or
fwait
shll
fadd
dec
fstl
mov
notb
les
pop
cmp
cs
dec
and
push
movsl
sti
push
pop
adc
xlat
sub
mov
cmp
lock
xchg
aad
sbb
scas
ljmp
mov
dec
testb
insb
xchg
push
xchg
pop
pusha
sub
mov
sahf
mov
cmp
or
das
push
dec
int
add
jmp
push
imul
mov
mov
add
push
pop
repz
jae
lods
icebp
or
adc
sbb
mov
jo
fistpll
xorb
aaa
xchg
repz
test
push
cmp
mov
ss
movb
mov
push
push
cmp
cmc
push
sub
pop
inc
loop
in
lods
push
sarl
xchg
in
imul
aam
shll
push
arpl
ds
xchg
cmp
daa
je
mov
mov
pop
test
shl
dec
inc
ss
aad
add
mov
sbb
xchg
sbb
out
add
mov
jns
inc
dec
pop
pushf
dec
repz
inc
jae
stc
mov
dec
and
mov
dec
lods
shl
loope
jmp
mov
jmp
fidivl
rcrb
subb
cmp
mov
sti
mov
clc
in
int3
sarb
cli
jns
imul
sbb
ljmp
pop
ret
and
out
sub
xchg
xchg
pop
push
push
lods
adc
sub
or
xchg
add
ficompl
imul
lds
dec
repz
faddl
sub
mov
cmp
fnstsw
dec
divl
sbb
add
xor
cwtl
xchg
sbb
insl
fnstenv
in
ret
and
add
subl
rcr
mov
push
pop
cmp
in
or
xchg
jmp
lock
repnz
sub
outsl
insl
shr
or
adc
jl
mov
test
push
outsb
inc
cmpsb
xchg
mov
aad
mov
out
pop
xlat
inc
xchg
sbb
out
jl
inc
cmp
test
sbb
mov
insl
loop
mov
sub
mov
mov
inc
dec
test
sahf
cmp
pushf
insb
lds
xor
out
ljmp
mov
cmp
loope
push
ljmp
daa
jne
jl
adc
in
or
outsl
mov
xchg
mov
cmp
mov
ret
xchg
push
subl
xor
mov
dec
mov
adcb
add
jne
iret
fldl
sub
add
cmp
imul
ljmp
das
dec
clc
in
jno
push
jge
inc
cli
out
into
mov
andb
daa
loopne
outsl
enter
adc
lods
popa
fidivs
mov
jecxz
jno
push
mov
cmovno
gs
jnp
pop
or
cmp
adc
jp
fdivrl
or
push
sub
lods
mov
test
cmpsb
insb
test
push
cmpb
sbbl
jmp
lret
data16
aaa
mov
aad
fsubp
fld
pop
jb
mov
jb
gs
xchg
stos
pop
cli
push
rorb
sbb
mov
push
jbe
outsb
mov
sbb
ret
and
daa
jo
jbe
dec
sub
aas
aas
xchg
inc
or
cmpsb
lock
rep
test
mov
inc
lods
add
data16
pusha
push
pop
sbb
pop
shrb
inc
lcall
andb
je
and
mov
inc
loopne
mov
jecxz
mov
loope
sub
mov
and
data16
gs
push
lcall
inc
popf
repnz
imul
inc
lahf
lods
lcall
icebp
shlb
xchg
adc
adc
mov
mov
loop
out
sub
aam
ljmp
xchg
adcb
mov
inc
loope
mov
push
push
jp
xchg
out
push
jge
std
ret
mov
sbb
shrl
jae
andps
dec
call
mov
mov
or
xor
push
push
scas
sub
add
scas
daa
aam
je
std
mov
jne
dec
aaa
pop
pop
lahf
cld
push
outsb
xlat
adc
xchg
lea
and
dec
jecxz
in
add
std
cmpsb
pop
sbb
jecxz
push
leave
imul
pop
inc
pop
pop
scas
fwait
mov
aam
sahf
fsubr
bound
jbe
ds
pushf
test
in
mov
les
or
mov
sub
test
and
arpl
add
dec
data16
sahf
mov
scas
sbb
adcl
and
inc
xor
nop
push
sahf
xor
pop
xchg
popl
shrb
into
int3
int
subl
into
out
mov
push
xor
sub
les
pop
jp
nop
jle
mov
dec
push
jecxz
mov
pop
lock
pop
adc
mov
adc
movsl
js
inc
in
xlat
icebp
clc
and
inc
mov
fbstp
mov
addr16
push
adc
arpl
mov
add
cmp
jbe
mov
pop
add
int3
out
lds
sub
xor
mov
into
ficoml
xor
loop
inc
inc
jle
cmp
inc
imull
fistps
jp
cmp
int
jb
fxch
in
mov
fildll
mov
insb
out
adc
sub
popa
mov
in
bound
aas
scas
in
orl
mov
les
fs
cli
dec
push
xor
jnp
adcb
cwtl
dec
das
mov
and
inc
sarb
sub
ret
mov
mov
cmp
std
dec
outsl
sbb
pop
stos
and
arpl
cmc
icebp
mov
push
in
ss
aaa
xchg
loop
in
imul
inc
imulb
fsubp
push
mov
push
ja
jnp
outsb
mov
incl
mov
jnp
test
xchg
dec
dec
out
popa
repnz
mov
xchg
enter
int3
sbb
cmc
cmp
add
cmc
stos
cmc
sub
push
test
lret
ret
add
aad
or
dec
fistpll
or
inc
inc
aaa
sbb
sbb
push
shl
pop
hlt
mov
movsb
hlt
insb
mov
xchg
adc
popa
xor
mov
loope
adc
adc
mov
out
mov
jg
stos
pop
mov
mov
in
adc
add
jl
sahf
push
xchg
fidivl
stos
mov
jo
inc
iret
or
xchg
aas
inc
pop
push
out
push
popa
push
in
rorl
xor
dec
mov
es
sub
mov
fadd
icebp
mov
xor
sub
pop
xor
jle
dec
dec
mov
bnd
jbe
fsub
cmp
pop
jp
xor
je
rcr
je
jl
hlt
popf
jae
rorl
mov
mov
aad
jecxz
jle
ja
jge
cs
outsb
shrb
xchg
insl
int3
or
mov
in
xor
notb
iret
das
imul
scas
dec
mov
xchg
arpl
pop
and
mull
int
jmp
jno
scas
push
xor
sub
pop
leave
mov
and
xchg
inc
mov
arpl
stos
shll
mov
cmp
pop
mov
and
jae
mov
sub
out
call
mov
gs
ret
cmp
cmpsb
mov
or
sub
es
xchg
pop
shr
or
pop
rclb
add
add
add
cmp
add
shlb
push
mov
test
cmp
in
outsb
xor
jns
aad
addr16
out
pop
and
int3
imul
sub
pop
aad
pop
movsl
xor
adc
lods
js
rcr
pop
jle
mov
jl
push
push
mov
daa
adc
sub
gs
call
inc
hlt
mov
jp
or
lds
ficomps
ret
mov
fucom
insb
jl
rolb
cmp
jns
fildl
out
adc
adc
jecxz
into
xchg
fwait
jg
adc
or
test
enter
lods
sub
stc
push
mov
and
fbstp
push
ss
or
jmp
fdivs
push
cmp
out
dec
adc
mov
sub
dec
pop
pusha
dec
push
xor
xchg
icebp
stos
xlat
es
mov
add
mov
lret
fsubs
imul
xor
xchg
adc
dec
in
pop
and
test
xor
enter
ss
scas
sti
scas
and
jle
cmp
xchg
jae
sub
pop
out
inc
jnp
pop
sbb
and
sub
lret
pushf
and
sub
out
fcom
lea
gs
and
mov
idivb
jne
jp
and
jecxz
outsl
or
jb
subb
jle
in
or
in
jbe
fsts
sub
sbb
adc
outsb
stc
imul
push
jae
jecxz
push
inc
ss
jmp
andl
xor
fwait
cld
and
pusha
arpl
push
std
jp
lret
shlb
subb
push
stos
stos
jae
nop
inc
sub
add
adcl
jns
pop
lret
sahf
or
mov
push
mov
mov
inc
mov
mov
mov
in
fs
add
push
jbe
cmp
mov
cmp
adc
adc
jbe
daa
dec
cmp
jg
inc
mov
cmc
lds
mov
sbb
pop
inc
xor
xor
cmp
mov
xchg
scas
pop
dec
fistl
and
lock
js
repnz
imul
aas
jb
cmp
iret
rcrb
and
ds
dec
sbb
addr16
lea
sub
loope
aad
mov
in
or
mov
mov
ret
dec
fdivl
jne
add
rcll
stc
push
sub
pop
push
ret
sbb
push
sub
aad
subb
inc
dec
test
pop
cli
mov
pop
das
int
jnp
xchg
icebp
pop
or
scas
loope
inc
ljmp
test
rcl
es
repnz
in
mov
adc
mov
cltd
fcoml
vmwrite
jge
dec
push
jle
out
jnp
shlb
xor
fiadds
xor
fildll
push
push
in
or
fnstcw
sbb
push
mov
lcall
popa
mov
stos
pop
mov
test
add
dec
xlat
mov
nop
mov
sbb
repz
adc
xor
out
add
ljmp
call
mov
loope
mov
add
inc
mov
je
dec
mov
imul
mov
jge
sbb
xchg
leave
dec
xchg
lahf
sahf
ds
outsb
insl
rcl
mov
ss
pop
adc
sbb
adc
cmp
not
ret
lods
pop
lds
pop
into
mov
or
pop
mov
mov
rolb
loope
adc
es
sub
pusha
adc
mov
dec
pop
push
mov
jle
dec
pop
inc
pop
mov
arpl
cmp
xor
cmp
cmp
mov
std
mov
sarb
pop
push
cld
fcmovnu
mov
or
pop
jge
out
pop
pop
adc
loop
inc
icebp
loop
cwtl
pop
xor
and
int
fcompl
daa
cwtl
xchg
call
nop
or
pop
lret
mov
inc
insb
cmpsb
mov
mov
fists
sbb
gs
cltd
stos
mov
repz
dec
xchg
fwait
out
dec
in
push
jle
add
mov
shl
xor
jno
test
pop
jbe
or
int
mov
hlt
arpl
push
push
jl
push
jp
xchg
and
cwtl
sub
jp
push
stos
sub
push
fwait
or
mov
sti
notb
out
movsb
movsb
inc
cs
fisubs
les
lock
sahf
fdivr
faddl
shlb
mov
jmp
cli
mov
inc
push
pusha
inc
jge
pushw
and
daa
in
aam
push
cmpsl
aam
jmp
testb
fwait
mov
cwtl
jns
mov
popa
add
xor
jo
popf
ljmp
ret
sbb
movsl
add
imul
or
dec
lods
mov
lods
fs
cmp
pop
aam
lods
cmc
lea
xchg
je
mov
push
fs
mov
adc
ljmp
jl
in
mov
icebp
out
outsl
out
cmpsb
lods
fs
std
lret
or
jg
adc
stc
mov
add
xchg
aas
popf
ds
sarl
addr16
rcrb
cmpsl
fiadds
filds
mov
insb
sahf
mov
inc
ficoml
mov
cmp
add
jo
ljmp
fwait
add
pop
aaa
out
mov
aad
scas
mov
mov
cmp
arpl
cwtl
dec
mov
cli
ret
dec
jbe
ret
jle
jle
daa
pop
jns
mov
lret
sub
cmp
cs
ret
fstp
and
and
insl
cmp
movl
lahf
fbld
fmull
push
add
mov
mov
inc
pop
pop
test
xchg
inc
jge
cmp
in
lcall
and
or
out
scas
pop
cmp
dec
jo
iret
mov
xor
adc
aam
sbb
sub
clc
dec
sub
insb
repz
sbb
inc
nop
inc
fs
adc
jle
int
or
ds
popl
sti
cs
xor
js
add
cli
clc
adcb
adc
pop
repz
shll
xorl
lock
inc
out
or
push
jo
push
xchg
mov
and
iret
or
mov
adc
pop
xchg
xchg
call
pop
pop
pop
jp
test
xchg
mov
jne
adc
dec
jge
in
insl
fistpll
mov
cltd
lret
enter
xor
add
loop
rcrb
in
fs
pop
xchg
ja
push
mov
ret
std
push
sbb
fld
add
daa
les
fcoml
push
add
iret
jno
bswap
mov
fmull
jle
inc
sbb
mov
int
test
mov
and
out
insl
aas
cs
adc
xchg
or
mov
int3
push
imul
inc
ljmp
sbb
adc
xchg
cs
sub
push
push
in
iret
xchg
sbb
sub
push
cmpsb
pop
fstp
push
mov
sub
jae
es
stc
daa
pop
push
shr
enter
push
pop
lock
imul
movsl
cmp
xor
popa
nop
jb
or
outsb
dec
inc
dec
cmp
cmp
push
dec
outsb
cmpsb
int
pop
cld
sti
jge
sbb
ret
push
pop
out
test
xchg
cmp
pop
test
lock
mov
stos
popa
push
fwait
mov
cmp
test
jmp
cld
testb
pop
mov
sub
stos
jge
mov
je
notl
fcomps
int3
mov
arpl
push
add
cmp
imul
scas
pop
push
jl
stos
fildll
push
inc
and
shlb
dec
outsl
mov
mov
jnp
scas
add
xchg
or
jmp
hlt
inc
add
pop
inc
adc
in
mov
insb
pushf
pop
gs
xchg
or
fdivr
loop
lods
outsb
fsubs
cwtl
call
call
mov
out
and
adc
xlat
sti
adc
cli
cmp
or
cmp
xchg
pushf
mov
or
xchg
in
std
or
push
pop
sub
lods
iret
push
xorb
popf
mov
adc
dec
and
jo
ljmp
pop
mov
cmpl
popf
lods
inc
adc
lret
pop
inc
fldt
pushf
dec
loopne
add
std
cmp
inc
icebp
mov
inc
and
adc
dec
or
sti
xorl
mov
mov
imul
jmp
inc
ret
add
mov
subl
mov
into
rorb
add
mov
cmpsl
jbe
mov
cmpsl
inc
inc
xchg
lcall
rorl
mov
aam
adc
push
xor
mov
inc
loope
rorb
mov
mov
or
dec
mov
mov
test
pop
mov
lsl
pop
add
filds
xchg
and
dec
add
das
add
lea
inc
je
or
jbe
arpl
inc
pop
xor
cmc
arpl
jl
sbb
or
iret
mov
aam
dec
adc
cmc
or
sbb
sbb
mov
mov
mov
pop
inc
add
cmp
andb
inc
fdivl
push
clc
daa
inc
divl
xchg
add
cmpsl
cmp
jae
fcomps
call
mov
jb
js
xor
dec
jmp
pop
fisubl
mov
pop
outsl
ja
push
xchg
adc
jno
xchg
mov
add
pop
stos
loope
fnstcw
jns
ret
pop
int3
pushf
adcl
fists
fildl
or
mov
add
add
cmp
mov
cmp
stc
push
pop
stos
dec
or
bound
jne
dec
das
mov
popa
xchg
jg
mov
xor
cmp
js
inc
aad
dec
xchg
stos
jmp
cmp
icebp
clc
clc
pop
stos
cltd
pop
xchg
gs
test
sub
popl
in
mov
fs
xor
xor
adc
std
inc
insb
jmp
xlat
add
roll
mov
into
cmc
std
ljmp
cmc
outsb
lods
jo
and
stos
loop
test
sub
inc
or
push
in
leave
jne
fs
jno
pop
mov
test
xor
pop
repz
aaa
pop
repz
lgs
jl
xchg
lcall
aad
jne
scas
gs
cmp
adc
inc
mov
sbb
jp
sahf
into
adc
add
or
out
mov
dec
and
fadds
pop
inc
shlb
or
jle
clc
loope
insb
fwait
add
shlb
jo
bound
xchg
jbe
pusha
lret
loope
loopne
pop
aad
mov
xchg
cld
shr
call
bound
jle
sbb
out
rcrb
pop
imul
dec
dec
dec
js
test
push
and
mov
jo
sbb
movsb
jecxz
out
mov
cltd
pop
push
in
addl
int
mov
and
inc
sar
aam
mov
call
fnstsw
mov
xor
adc
cwtl
ss
push
add
inc
xor
sub
roll
hlt
jmp
xchg
dec
scas
jne
push
push
xor
xchg
push
psrad
cli
jle
sar
xchg
jg
inc
ss
sahf
mov
cmp
sub
jb
mov
lcall
outsl
cmp
insb
aaa
sub
insb
mov
pop
sbb
flds
test
cmp
std
lock
lock
sbb
or
rcl
pop
cli
add
xchg
jl
iret
push
loopne
test
loopne
adc
scas
ret
or
sahf
sub
mov
daa
shlb
dec
adc
out
f2xm1
sarb
jg
mov
push
dec
iret
enter
std
ljmp
jmp
hlt
cmpsl
xchg
pop
cmc
je
push
lds
and
push
dec
das
into
lret
sbb
mov
cmp
xchg
das
or
inc
cmp
fidivrl
dec
aam
sub
inc
outsl
testl
add
sbb
mov
ss
inc
rcr
and
pop
mov
test
push
jle
daa
jecxz
inc
scas
addr16
add
mov
test
jg
mov
xchg
and
or
pusha
outsl
mov
and
inc
testl
cmp
mov
pop
jns
cmp
cmp
push
andl
sbb
in
pushf
outsl
xchg
fildl
adc
adc
sub
cmp
arpl
insb
pop
and
push
pop
lods
iret
push
cwtl
and
or
rorl
or
out
jno
js
cmpsb
js
push
jae
jno
push
jae
mov
lret
arpl
mov
inc
pop
test
pop
mov
inc
push
mov
sub
lea
or
cld
syscall
mov
pop
adc
inc
lret
xor
xchg
xchg
mov
arpl
inc
es
sub
cltd
push
push
repz
cmp
lcall
ret
xor
jp
pop
xchg
adc
fimuls
pusha
mov
inc
es
sti
xchg
shlb
mov
icebp
push
add
jnp
jo
pop
push
movsl
jns
ds
shlb
test
pop
pop
inc
loope
rcrl
mov
xchg
imul
jecxz
push
cmpsb
xor
add
fidivrl
faddl
xchg
mov
adc
out
mov
rcrb
fsubrs
sbb
xchg
push
fstl
je
outsb
pop
jmp
into
pop
sbb
je
jbe
ret
jbe
sbb
mov
push
in
ret
jns
lcall
jns
jle
xor
xlat
cmpsb
jmp
lret
xor
cmc
xor
xchg
outsl
pop
in
outsl
pop
fdivrs
xchg
stos
adc
jecxz
rclb
sti
js
push
sbb
push
push
test
add
and
and
jne
add
repz
std
pop
notl
xchg
push
or
fnstenv
sub
add
push
lock
out
mov
dec
xchg
or
test
or
popa
add
adc
and
jp
add
push
stc
sbb
xchg
add
pop
and
push
les
adcl
mov
into
dec
jnp
out
dec
xchg
mov
aaa
jecxz
jo
daa
scas
std
pop
push
out
pop
out
cltd
inc
inc
inc
int3
jl
xor
cs
cltd
into
out
xor
push
cmpsl
std
loop
fsubrl
out
pop
jecxz
mov
call
roll
mov
mov
push
adc
jmp
inc
push
pop
das
mov
mov
popa
and
inc
daa
xchg
lret
call
push
jg
outsb
or
ljmp
xor
jns
mov
jmp
in
mull
push
insb
mov
ret
add
scas
jmp
mov
xchg
sub
fdivs
inc
push
inc
push
mov
add
pop
dec
xor
jno
push
pop
jge
jg
aas
scas
sub
push
stos
xor
xchg
sar
dec
push
cltd
lods
jmp
hlt
andl
in
push
orl
xor
sbb
out
adc
sbb
inc
std
aas
arpl
sbb
aad
mov
inc
inc
test
pop
or
test
loope
insl
fbld
sub
or
hlt
test
jg
dec
mov
lret
adc
add
xor
popl
push
arpl
and
mov
lock
outsl
xor
movsl
and
jnp
sbb
adc
test
data16
roll
mov
xchg
es
mov
sub
jle
xor
cmpsb
push
mov
jno,pt
aas
rcll
inc
mov
xchg
loope
repnz
jnp
mov
cmp
out
xor
mov
mov
popf
dec
subl
mov
push
outsl
xor
ja
pop
gs
jb
hlt
mov
addb
cmpsb
shlb
arpl
fidivl
std
in
xor
pusha
jns
stc
jmp
decb
out
stc
jno
jecxz
js
jp
mov
cmp
and
sbb
mov
mov
fiaddl
aas
adcl
aad
ds
data16
lcall
xchg
cmpsl
xchg
loopne
ljmp
mov
sub
xchg
pop
shl
add
out
mov
pushf
xchg
nop
nopl
pop
mov
sub
mov
sub
jno
pop
push
insl
sub
sub
test
fwait
ret
jnp
jae
jle
mov
lret
lret
rcl
and
jae
scas
mov
ficoml
fisttps
adc
sub
rcrl
cmp
and
pop
or
testb
leave
lahf
jns
xor
jnp
adc
jbe
lds
movsb
sbb
nop
nop
and
insb
push
mov
cmp
movsb
pop
loope
and
inc
cmpsl
jbe
jg
negl
fsub
jo
lods
jae
push
sbb
int
outsb
pop
loop
and
pop
scas
mov
pop
pop
out
pop
adc
les
pop
ret
xchg
sbb
test
jbe
cmc
sti
inc
mov
stc
push
fistpll
jae
push
mov
and
popf
jge
mov
mov
pop
cmpsb
or
movsl
xor
shll
xor
xchg
notb
ja
lds
push
or
ss
xor
sbb
out
xorb
sbb
out
loope
pop
or
aaa
daa
adc
into
pop
ljmp
dec
lahf
or
xchg
pop
mov
dec
jns
mov
je
aaa
adc
aad
in
push
sub
outsb
sbb
int3
mov
fcompl
out
xchg
cmpsl
fidivl
dec
cmp
add
imul
mov
loope
pop
mov
popa
mov
or
js
sbb
adc
aas
scas
sub
aaa
popf
pop
iret
mov
imul
xlat
mov
inc
xchg
es
stos
lds
daa
stos
pop
fs
or
xor
ja
sbb
shlb
pop
in
xor
sub
push
adc
dec
imul
hlt
push
mov
add
clc
sbb
sbb
lmsw
xor
mov
clc
cmpsl
or
lods
insb
or
add
or
fwait
cmp
dec
mov
add
icebp
add
jge
int3
xchg
add
stos
mov
pop
cmpsl
ficoml
and
pop
mov
daa
mov
mov
aam
xorb
mov
pop
mov
push
mov
imul
mov
adc
inc
inc
rcl
outsb
inc
scas
xor
mov
pop
gs
jno
jo
ljmp
pusha
int
aam
filds
cltd
fists
mov
adc
movsb
aam
jbe
inc
ljmp
add
roll
push
jae
xlat
aam
adc
sti
cmp
fst
jle
xor
mov
shlb
rolb
push
cmp
jbe
fcomi
in
cmpsl
pop
add
leave
out
sub
in
sub
pop
js
push
shrb
mov
cltd
or
pop
mov
iret
add
les
lock
mov
outsb
dec
fsts
pop
data16
xchg
pop
add
out
shl
out
ret
jl
into
faddp
mov
int3
ficoml
push
pop
incl
lret
cwtl
insl
test
jecxz
mov
xor
cmp
jle
or
sbb
mov
sbb
pop
cmc
mov
xchg
push
sub
push
mov
cmp
adc
out
push
scas
gs
loope
mov
mov
test
add
mov
jle
imul
jne
sub
xchg
sbb
pushf
ljmp
mov
pop
mov
pusha
cmp
sbb
es
jae
fs
aad
insb
out
adc
in
cltd
jno
xchg
xchg
fistpll
cwtl
dec
adcb
pushf
lret
pop
fidivs
add
adc
int
xchg
fbstp
push
mov
dec
cmp
pop
gs
jle
leave
fwait
push
dec
xchg
sbbl
lret
xlat
icebp
add
std
cmpsb
sbb
inc
xchg
pop
repnz
ja
call
adc
inc
cmp
fists
mov
xchg
xchg
jno
and
test
cmpsl
sub
mov
inc
aas
test
lods
shrl
cmp
arpl
xchg
add
inc
pop
mov
jb
cmp
outsl
xlat
aam
sti
ss
jb
pop
xlat
xlat
sbb
fstpl
outsl
xchg
sub
or
lret
les
sbb
pop
mov
jecxz
adc
sbb
cld
pop
bound
xor
out
cmpsl
lods
xchg
xor
pop
lahf
rorb
push
xchg
sbb
pop
xor
adcl
stos
mov
lret
fdivrl
or
push
fwait
stos
adc
xor
inc
pop
mov
repz
push
or
mov
stos
dec
lea
cltd
fldl
xchg
cmp
pop
sti
aam
js
cmp
lahf
xchg
cmp
inc
xchg
movsl
push
cmp
scas
js
cmp
xchg
add
lahf
lret
in
aam
xorb
push
dec
cltd
rorb
rcrl
imulb
cmc
pop
outsb
xchg
ds
pop
add
sahf
adc
and
test
decb
push
mov
sbb
or
leave
arpl
inc
cmp
scas
in
je
inc
mov
out
push
fimull
pushf
iret
dec
out
fcomps
jle
dec
into
pop
or
ja
inc
sbbb
mov
lds
cmpsl
icebp
push
cmp
pop
repz
xchg
adc
add
add
push
js
fsubrl
mov
jecxz
cmp
out
dec
sub
xor
js
mov
int
aaa
mov
xor
push
movsl
push
cli
sbb
sbbb
call
popl
aam
push
ret
rorl
pop
dec
sub
jge
push
lock
mov
mov
test
pop
xor
xchg
mov
or
mov
xor
mov
rorb
jl
jne
es
push
pop
ret
out
fs
sti
pop
xchg
adc
lods
fisttpll
test
setp
lret
mov
xchg
cmc
jnp
sbb
inc
aam
ffree
fwait
enter
add
sbb
cmp
push
sbb
xlat
sbb
pop
and
push
clc
pusha
adc
push
movsl
inc
mov
xlat
or
and
sub
push
pop
push
idivb
fistpll
pop
aam
mov
lret
bound
push
icebp
popf
int3
std
push
xor
lock
bound
push
xchg
pop
dec
popf
mov
pop
pop
lock
pop
inc
fldl
loopne
in
jns
test
sub
adc
inc
adc
mov
push
inc
jns
sti
fdivrp
mov
out
push
and
adc
push
sbb
jmp
iret
rorb
cmpsb
xor
xchg
push
lea
inc
mov
add
pop
adc
sbb
ja
cld
loop
cli
cmpsl
filds
push
xor
shld
mov
les
nop
in
lea
testl
adc
nop
orps
stos
add
movsb
mov
lret
jne
mov
jmp
jae
iret
jmp
les
in
test
xchg
or
decl
mov
pop
add
pop
add
sti
cmp
jmp
xadd
loopne
jge
lock
nop
adc
mov
jle
outsb
xchg
es
xchg
and
or
cmpsl
fimuls
push
inc
pop
pop
mov
add
pop
repnz
in
sub
insl
sti
push
or
lock
mov
and
and
ret
stc
les
xor
pop
ljmp
pop
clc
add
in
rolb
std
loop
xchg
das
and
inc
repnz
int
push
jle
imul
jg
stos
fs
inc
push
jmp
cmp
js
adc
xchg
scas
dec
sub
xor
fs
jmp
or
imul
mov
loop
cmp
int
pop
aad
push
jns
sbb
or
popa
fwait
imul
addl
push
xchg
inc
fs
mov
inc
dec
cmp
xchg
pop
fidivrs
in
jl
mov
shl
iret
and
mov
jb
dec
lcall
sahf
rorl
scas
mov
jl
dec
inc
ss
mov
shl
lock
int3
gs
repz
push
jo
nop
adc
fldenv
push
mov
or
arpl
jb
das
pop
dec
rcrb
push
out
loopne
push
stos
jp
cmp
aad
imul
add
push
and
xor
dec
xor
into
pop
xchg
push
aaa
arpl
adc
lds
je
bound
imul
imul
jl
mov
out
sub
adc
cmp
dec
stos
test
divb
inc
jnp
dec
xchg
sub
or
mov
nop
ja
jl
pop
dec
cmpsl
jnp
push
pop
lea
shlb
push
pop
adc
lret
push
jle
popf
jbe
sub
fiaddl
mov
jecxz
mov
sbb
sti
adc
dec
mov
lea
jne
lds
dec
out
add
mov
subl
dec
add
push
arpl
stos
mov
jl
push
push
pop
mov
popa
mov
mov
aad
adc
adc
push
jp
dec
fsubl
lods
pop
mov
outsb
mov
push
push
xchg
jmp
ljmp
outsb
loope
add
inc
hlt
imul
mov
fdivs
inc
dec
aad
je
fldt
leave
stos
push
daa
inc
jno
sar
test
mov
jl
sahf
cltd
arpl
pop
es
fisubs
cmp
pop
enter
or
inc
dec
sti
xchg
push
xor
xchg
iret
out
dec
inc
sbbb
aaa
xor
add
mov
mov
pop
jo
mov
mov
je
rcr
sub
daa
repnz
loopne
fcoms
jp
test
lea
mov
lcall
sub
xor
fcmovnu
push
push
xchg
das
and
shlb
mov
sbb
aad
arpl
mov
pop
sahf
add
sbb
rorb
int
jp
mov
test
or
mov
popa
inc
in
loop
arpl
push
xor
mov
repnz
nop
pop
push
cltd
inc
dec
cltd
jno
iret
push
inc
xchg
add
pop
repnz
pop
test
push
cwtl
xchg
aad
add
xor
mov
lahf
fdivp
test
lret
adc
imul
inc
loop
loop
insl
mov
mov
mov
dec
adc
sbb
shr
js
adc
jns
cmp
outsb
pop
jae
mov
mov
cwtl
dec
movsl
and
xor
dec
lcall
into
aad
and
dec
cmp
test
push
cs
shl
push
mov
pop
lods
sbb
bound
shr
xchg
push
mov
js
cmpsb
cmp
push
add
jbe
mov
lcall
lret
pusha
js
gs
mov
addb
cltd
loop
xchg
test
push
xchg
imul
bound
push
pop
cmp
xchg
jo
jbe
xor
daa
movsl
adc
and
and
js
xchg
jecxz
push
arpl
addr16
xor
jge,pt
pop
sub
xorb
lds
xor
lea
push
push
sub
mov
cmp
adc
in
fcomip
dec
inc
aam
test
lcall
repnz
filds
mov
xor
jo
pop
and
mov
adc
or
jle
mov
adc
pop
and
test
test
add
mov
int
cwtl
dec
test
ja
inc
inc
je
add
or
dec
aam
test
nop
pop
enter
adc
sbb
sbb
sbb
sub
push
rcrb
or
dec
icebp
orl
int3
hlt
mov
jle
mov
xor
and
mov
mov
hlt
jecxz
movsl
cld
cmp
dec
or
jae
adc
lcall
hlt
lret
mov
xchg
xchg
jg
popa
dec
xchg
xor
je
das
lea
dec
ret
jecxz
sub
push
mov
notb
inc
push
test
fidivs
add
sti
cmc
add
cltd
aam
xor
int
mov
sub
pop
decb
ja
xchg
inc
je
mov
jo
lcall
sar
or
dec
sub
lcall
mov
xchg
inc
jo
sbb
jns
dec
dec
dec
dec
cmp
cmp
jns
and
jecxz
out
test
sarl
jnp
push
stos
in
cmp
sbb
mov
repnz
pop
mov
jne
testb
jns
adc
out
bound
js
add
test
icebp
or
call
mov
outsl
mov
mov
adc
ss
stos
orl
inc
push
pop
andb
ret
mov
push
inc
jne
adc
mov
sub
pop
mov
cmc
inc
pop
cmp
xchg
dec
fs
dec
inc
lret
hlt
sbb
insb
cmp
cli
fcmovne
xchg
xchg
loop
imul
fs
xchg
gs
jns
cld
popa
jp
imul
dec
pop
add
dec
and
aam
mov
ds
pop
pusha
inc
in
iret
mov
add
push
mov
xor
imul
mov
rep
sbb
mov
sbb
xchg
sub
imul
je
pop
lods
fstpl
addb
inc
shlb
xchg
push
sbb
adc
enter
or
das
imul
mov
inc
lahf
add
xchg
cmpsb
mov
imul
and
mov
xchg
inc
test
push
push
jge
in
add
xchg
jecxz
xchg
jp
test
or
out
sub
mov
sub
xchg
bound
push
cmp
add
out
mov
mov
faddl
adc
xor
push
hlt
pop
adc
filds
adc
aam
aas
syscall
insl
inc
lock
std
adc
adc
dec
mov
push
insl
fxch
jge
aam
xor
lret
aaa
dec
and
mov
lock
jbe
lret
jg
add
and
cmp
je
push
cmp
nop
ja
pop
inc
cmpsb
add
call
lods
ljmp
lock
test
imul
leave
dec
sbb
inc
pop
lret
pop
das
repz
push
mov
sbb
or
mov
jle
iret
push
out
addr16
add
mov
push
hlt
xchg
enter
les
xchg
jmp
scas
mov
shrb
clc
mov
push
mov
jl
out
test
js
cli
or
push
push
jl
mov
xchg
pop
inc
divb
jb
lcall
sarl
cli
scas
push
out
or
or
mov
loop
mov
jge
sahf
jmp
add
arpl
shll
lret
jge
push
cld
pop
test
int3
inc
outsl
test
push
insb
mov
add
lods
ret
mov
cmc
jne
arpl
loope
xchg
push
pushaw
repnz
out
and
loopne
cli
mov
mov
test
jns
xchg
and
mov
jnp
loope
add
hlt
xchg
aas
ljmp
lods
sbbl
cmp
lea
adc
icebp
out
dec
in
dec
andb
lock
mov
cmpsl
dec
in
xchg
pusha
in
ljmp
pop
mov
sahf
sbb
jl
xchg
popa
inc
neg
loopne
addr16
repz
int3
add
popf
xchg
ja
ror
fs
addr16
xchg
ret
in
fwait
sahf
cs
hlt
out
lahf
lods
cmp
push
out
insl
lret
or
or
iret
loope
add
xchg
loop
imul
jl
mov
cmpsb
dec
sbb
add
xor
jg
push
test
idivl
stos
iret
xchg
jg
sub
xchg
daa
pop
icebp
vphaddwd
idivb
jmp
or
int3
add
insl
xchg
dec
sub
fdivr
add
xlat
idiv
sbb
aas
adc
ljmp
jp
add
or
lret
push
mov
mov
or
aaa
xchg
jg
rdmsr
xchg
pop
jecxz
pop
add
test
add
pop
sbbl
rclb
push
lods
mov
cwtl
cmpsl
in
loop
cltd
push
inc
popa
out
sub
push
sarb
testl
movsl
cmpl
test
mov
lahf
loope
or
call
jmp
add
lret
or
cltd
or
ss
movsl
std
and
imul
movsl
sbb
ret
lahf
cltd
pusha
in
jmp
in
cmp
mov
imul
pop
lods
or
ja
ds
mov
nop
xchg
mov
xorl
outsb
dec
cmpsl
pop
push
shlb
fldt
aam
cltd
fbstp
mov
push
cmp
sub
cmpsb
loopne
sbb
lods
mov
mov
push
adc
out
sub
dec
or
or
cmp
sbb
sahf
js
xcrypt-cfb
cmpsl
gs
nop
test
mov
lock
aad
insl
int
or
sbb
lds
fs
mov
ja
sub
cs
stos
in
mov
pop
fidivs
notb
mov
mov
je
mov
cwtl
jb
cs
xchg
lcall
mov
in
dec
shlb
adc
xchg
sbb
jb
rorb
gs
xor
jge
push
push
imul
fistl
adc
inc
adc
je
push
pop
mov
inc
sub
or
jg
inc
xchg
insb
cmp
jl
xchg
mov
dec
js
data16
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
or
jp
movl
xchg
cmpb
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
lahf
cmp
add
pop
adc
dec
pop
jge
pop
clc
dec
pop
js
adc
jl
push
call
int
int
jno
xor
pop
lcall
cmp
pop
lds
cmp
jp
movl
rol
out
add
insb
into
out
outsb
hlt
ss
adc
lods
push
es
add
and
aas
xchg
sahf
jo
setnp
out
sub
or
movsb
jbe
fstpt
cmp
inc
insb
iret
out
push
push
cli
mov
mov
lock
lock
movsb
fwait
bound
pop
out
push
push
or
xor
out
add
jp
movl
aam
jge
in
js
addr16
adc
ss
cmp
in
jp
movl
xchg
cmp
roll
pop
in
addb
movl
xchg
jnp
or
jp
movl
nop
cmp
in
jp
movl
xchg
cmp
movl
xchg
cmp
in
jp
movl
xchg
sub
std
jp
movl
xchg
cmp
in
jp
movl
xchg
push
jle
in
jp
int3
add
adc
jge
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
mov
jp
movl
cmpl
test
pop
xchg
pop
mov
rorb
sub
jp
movl
jno
lahf
sbb
in
xchg
lret
in
and
in
xchg
cmp
in
jp
movl
xchg
fidivrl
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
movl
xchg
cmp
in
jp
insb
cmp
in
xchg
cmp
in
push
or
test
push
ds
in
mov
gs
sub
sub
mov
jp
pusha
mov
or
mov
sbb
das
adc
repz
push
mov
test
jmp
lret
out
out
jle
fnstsw
cmp
pop
cmp
and
popf
xchg
addr16
out
pop
jo
inc
push
dec
ret
test
mov
mov
cmp
inc
push
adc
push
imul
xor
test
repz
push
mov
push
jmp
bound
cwtl
shrb
xchg
sub
lret
xchg
push
adc
bound
or
add
or
cmp
dec
imul
out
jns
add
cmp
les
aam
pop
lret
mov
scas
fildll
sub
stos
aam
clc
push
mov
and
shll
loope
xor
inc
dec
xor
sbb
aas
or
cmp
ss
fstps
subb
jmp
mov
sbb
jg
xor
nop
shl
ljmp
push
fs
dec
mov
ret
sbb
cwtl
test
je
adc
fdivrp
rcrl
mov
sbb
pop
test
scas
dec
fmul
xchg
das
mov
xchg
or
xlat
ftst
jl
mov
push
lods
dec
daa
stos
xor
fdivs
dec
cmp
push
adc
inc
inc
and
xor
or
jg
shll
mov
jge
test
pop
test
push
lret
out
add
pop
test
insb
adc
or
lret
loope
adc
sti
shlb
je
and
xor
and
fildl
fisttpl
mov
xchg
or
mov
call
fistpll
sbb
fdivs
push
gs
pushf
stc
sti
ret
mov
stos
jae
adc
aad
dec
fcmovnu
loop
push
mov
das
aad
daa
xchg
movsl
in
ljmp
mov
cmp
jmp
shrl
sub
or
movsb
testb
out
mov
cmp
movsl
inc
ret
add
mov
cmp
rorl
xchg
int3
mov
testl
in
lds
bound
in
icebp
in
mov
lcall
or
pop
into
ds
push
sub
imul
inc
xchg
roll
pop
mov
aaa
outsb
subb
cld
ret
mov
cmpsb
repz
or
push
shrb
pop
shlb
pop
ja
hlt
sub
adc
cmp
inc
in
and
mov
mov
push
std
adc
or
mov
mov
lcall
into
push
jnp
leave
xor
lea
cmpsl
sti
insb
lods
xchg
mov
dec
sbb
shll
xor
test
lret
adc
push
jmp
dec
or
pop
sub
push
insl
xchg
adcb
xchg
or
or
scas
ljmp
xchg
push
shlb
dec
jbe
pop
inc
sahf
push
enter
mov
in
inc
or
les
mov
shl
movl
scas
xchg
leave
mov
xchg
jne
aaa
ficoms
cld
fistps
sub
imul
fisubs
fildl
cmc
inc
addr16
scas
lock
pop
pushf
out
into
vshufps
add
sub
mov
sub
gs
das
xlat
adc
adc
test
ds
out
add
or
mov
loop
stos
pusha
mov
lcall
sub
mov
lret
and
jmp
xor
dec
sti
sbbb
lea
filds
push
movsb
test
stos
movsl
dec
fwait
outsl
xor
push
popf
mov
bound
imul
inc
jg
sbb
jae
lds
cld
test
xchg
sahf
aaa
xor
rclb
out
cs
pop
clc
jb
sti
fisubrl
sbb
adc
lods
inc
xlat
fldl
shll
popf
shrl
fnstenv
sub
sbb
testl
pop
inc
xor
int
cmpsl
sub
jmp
sub
in
int3
add
or
jmp
fldt
add
xchg
or
xchg
and
data16
sbb
and
xor
imul
shrb
pushf
out
sarb
loope
cmp
subl
sbb
xor
fstps
sub
imul
shlb
xor
outsl
ror
ret
fwait
add
or
ja
jo
insl
mov
xor
in
jns
lea
add
std
sub
jmp
mov
and
push
pop
mov
mov
mov
lret
dec
jo
xchg
sarl
add
xchg
dec
pop
or
mov
shrl
mov
pop
int
ss
jmp
xlat
aam
sub
push
in
sti
adcl
xor
scas
mov
popa
jb
cli
sub
ss
inc
dec
inc
xchg
mov
imul
mov
sahf
sbbb
cmp
or
ss
cmpsb
cmp
sbb
lods
call
aam
add
cld
or
les
inc
and
into
mov
push
data16
cmpsb
addr16
into
gs
mov
sti
sub
cltd
scas
lock
xchg
std
in
cmp
inc
dec
and
mov
and
adc
outsb
addl
xchg
pop
jmp
mov
sahf
addr16
or
cwtl
sub
jmp
pusha
push
xor
adc
stos
hlt
cmc
test
loop
pop
imul
mov
jp
mov
pop
popa
sar
iret
js
je
add
push
rcll
es
shl
mov
push
jns
xchg
bound
mov
and
iret
jmp
jno
lahf
sub
test
pop
lods
mov
imul
mov
push
je
push
pop
pop
std
arpl
ja
adc
pop
cwtl
sub
bnd
jle
test
inc
mov
popa
mov
xchg
call
bound
sahf
aam
outsb
ss
js
loop
filds
dec
xchg
daa
in
adc
sbb
stos
adc
sbb
and
fwait
subb
jmp
fcompl
xchg
pop
inc
cltd
sbb
mov
adc
rolb
mov
leave
xchg
cmovae
aad
clc
fildll
sahf
sub
mov
xchg
and
cmp
shl
mov
sub
and
ljmp
add
xor
cli
in
sbb
sbb
sub
sbb
add
jmp
sti
cmp
arpl
cmp
xchg
test
add
sbbl
push
out
jmp
sub
xor
jl
in
mov
jge
xchg
mov
push
pusha
or
jbe
jne
ja
fcompl
stc
out
cmpsb
cld
mov
push
add
and
mov
daa
adc
dec
fs
xor
sbb
and
sar
stos
lcall
cmpsl
call
push
pop
aas
push
xor
mov
cmpsl
repnz
mov
jno
aaa
dec
sub
xchg
xchg
jle
test
fdivr
insl
and
testl
popa
mov
repz
insl
mov
addb
sahf
mov
jbe
mov
aad
pushf
jo
sub
jecxz
cmp
xchg
mov
dec
jp
aad
cmpb
pop
or
orl
inc
popa
jle
cltd
push
scas
adc
cmp
fisttpl
or
lea
inc
fnsave
and
jle
lock
in
inc
mov
int
xor
notb
or
fisubl
sti
dec
mov
mov
repnz
xchg
pop
arpl
loopne
inc
nop
or
bound
cmpsl
lahf
stos
mov
test
add
dec
mov
xchg
outsl
pop
dec
inc
dec
ret
add
cmc
arpl
lods
aad
mov
shrl
mov
jbe
pop
push
lret
cmpsl
jns
add
out
test
adc
insb
pop
inc
rcll
xor
pop
shl
out
mov
lock
xor
inc
and
stos
mov
outsl
shlb
mov
xchg
add
jge
cmp
jb
shl
stos
push
jnp
jnp
and
mov
xchg
int
nop
pop
add
fldcw
mov
out
scas
popf
mov
sbb
movsl
out
sti
cmpb
dec
or
or
inc
and
adc
jno
sbb
pop
mov
and
sub
movsl
xchg
cmpsb
mov
hlt
pop
dec
push
xchg
push
mov
push
pop
adc
pusha
mov
in
testb
insl
loope
cmp
mov
pop
jg
mov
fs
lcall
xchg
aad
jp
ss
clc
ret
stos
push
les
hlt
fistpl
or
shll
adc
and
sbb
cmpsl
xchg
mov
mov
into
push
bnd
push
cmpsb
sti
pop
push
shlb
cs
lods
loop
nop
pop
stos
pop
cmp
inc
movb
fwait
insb
mov
xor
xchg
and
fs
mov
std
xchg
mov
cmp
mov
xor
sbb
imul
push
mov
cmp
adc
add
add
lcall
loop
in
mov
sub
lock
and
arpl
xchg
or
mov
adc
jl
jnp
sub
inc
nop
sahf
xchg
scas
push
addr16
sahf
shl
imul
es
push
add
jp
or
cli
xchg
scas
int3
push
cmp
mov
js
adc
scas
test
sub
sbb
js
out
dec
mov
nop
cmp
test
adc
pop
xlat
mov
cmp
dec
mov
fsubrp
dec
movb
or
mov
xchg
icebp
jecxz
mov
loopne
ret
int
lea
and
mov
repz
sbb
fcompl
xchg
add
mov
adc
or
mov
mov
cs
push
sbb
hlt
leave
repz
xor
cld
lods
shll
add
push
pop
movl
test
rcrl
fcoml
rcrb
inc
pop
out
adc
dec
push
arpl
dec
shl
sti
adc
inc
lret
dec
push
or
or
xchg
xorl
xor
cmp
fdivrp
pushl
loop
ljmp
xchg
cmp
fsts
roll
shlb
es
jmp
fdivp
shll
in
dec
ja
ljmp
dec
mov
dec
lcall
fdivr
push
add
cltd
leave
loope
mov
hlt
and
and
cli
out
shlb
inc
cmpl
add
adc
aad
sahf
and
jg
add
or
xchg
inc
rcll
orb
ret
mov
daa
cli
out
adc
and
gs
std
lods
sbbl
stos
inc
xor
push
jno
mov
add
pusha
inc
aam
mov
arpl
test
lds
jecxz
mov
mov
jecxz
mov
xchg
cmp
jae
push
or
and
mov
div
wrmsr
outsb
outsb
mov
test
mov
ret
out
mov
push
push
mov
pop
xor
shlb
rol
pop
lret
cs
in
sbb
orl
scas
das
data16
ficompl
cmp
and
and
mov
fwait
test
inc
ds
loop
push
jo
mov
jne
popa
pop
jne
es
cmp
pop
xchg
ss
xchg
pusha
repz
mov
shlb
icebp
jmp
test
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
