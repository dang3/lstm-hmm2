sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
fdivrs
adc
loope
cmp
jge
mov
stos
fwait
push
mov
daa
testb
and
sbb
push
or
xor
out
mov
xlat
cli
leave
push
enter
mov
aad
lret
adc
push
pop
adc
enter
xor
adc
stos
jne
sbb
dec
das
add
and
fwait
lret
push
jb
cli
push
das
pop
push
fsubrp
mov
cmp
int3
sbb
inc
inc
jmp
insb
icebp
cmp
mov
movsl
jge
aaa
movsb
mov
dec
pop
lock
daa
or
mov
inc
jg
mov
push
dec
mov
or
add
cli
jno
jnp
push
push
loope
lods
cmp
mov
mov
sbb
jnp
xchg
bound
mov
sbb
xor
jnp
mov
movsl
mov
hlt
rcl
push
mov
cmp
cmp
leave
test
pushf
imul
mov
sar
xchg
andb
mov
push
mov
aad
jmp
sub
lahf
push
dec
js
dec
add
lds
or
dec
or
insl
push
and
jle
and
das
test
jg
jg
cmpsl
cli
movsl
fwait
jge
pushf
sbb
and
fsubrl
pop
push
cmp
enter
cmpsl
shrl
faddl
push
add
pop
test
ja
sahf
mov
push
fwait
or
test
fcomip
mov
jo
lea
imul
adc
mov
int
push
dec
sbb
loope
sbb
inc
cld
fiaddl
dec
xor
lods
mov
xor
jne
lds
or
mov
or
xchg
movb
pop
jo
and
cmp
push
in
lods
jmp
movsl
fdivrs
or
xchg
add
popf
cmp
adc
subl
shlb
push
sbb
mov
mov
adc
jo
jbe
insb
out
dec
add
mov
test
outsl
imul
enter
mov
insb
scas
movb
push
lds
ljmp
mov
aaa
cmp
xchg
in
sbb
int
mov
out
or
push
aad
mov
dec
push
rcrb
sbb
xchg
pop
sbb
imul
ja
and
cmp
fcoml
jle
inc
cmp
enter
adc
mov
sti
push
clc
imul
add
fsubl
add
aas
popa
pop
rcrl
rol
shlb
sbb
lea
mov
push
sub
cld
clc
mov
inc
jns
repnz
enter
xchg
push
out
stos
cmp
les
call
sbb
fidivrs
cmpsb
test
arpl
and
or
arpl
dec
or
popf
fidivrl
add
loope
xchg
dec
cmp
call
paddusb
adc
lods
cmc
clc
mov
or
sub
xchg
cli
or
shll
dec
pop
pop
pop
inc
nop
xchg
mov
je
inc
das
movsb
lahf
push
andb
inc
add
jle
movsb
xchg
ret
out
test
inc
ret
outsb
jge
das
stc
pop
xchg
add
aaa
pop
addr16
daa
mov
das
xor
dec
int3
or
mov
repz
mov
cmp
jg
ljmp
dec
notl
inc
xchg
mov
iret
call
adc
mov
pop
popa
lahf
lds
mov
fucomip
cli
stc
dec
cwtl
lds
push
loope
xlat
mov
and
pop
jno
mov
xor
fwait
pop
enter
dec
stos
mov
ja
out
xchg
mov
xor
pop
xchg
sbb
iret
out
mov
pop
mov
insl
adc
inc
push
pop
pop
jne
gs
rol
mov
negl
mov
cmc
iret
incb
shlb
outsb
std
dec
sub
in
and
inc
fwait
sbb
pop
sub
aas
or
sbb
jge
lret
add
shrb
cmpsb
and
ja
and
aad
jmpw
inc
pusha
inc
jecxz
add
or
imulb
sub
pop
inc
inc
sbb
loopne
sub
xchg
cwtl
inc
mov
scas
test
dec
push
xchg
xchg
mov
clc
outsb
and
adc
std
or
jno
flds
xchg
fmull
dec
negb
xor
fs
stos
shl
lods
adc
push
fisubrs
push
enter
notl
xor
pop
mov
pop
pop
sbbb
sbb
xchg
sarl
or
sub
push
in
frstor
dec
or
pop
insl
cltd
sbb
imul
lea
leave
push
aaa
dec
add
addr16
jg
inc
icebp
je
push
cmpsb
sub
xor
enter
insl
xchg
out
xor
pushf
iret
adc
and
pushf
fistps
jae
clc
jns
jno
ss
adc
cmpsb
mov
push
push
mov
sbb
lahf
pop
sub
lods
sbb
jecxz
ja
jo
push
or
add
shrl
inc
mov
inc
mov
aam
inc
stc
imul
cwtl
xor
xchg
add
nop
ljmp
inc
lods
daa
bswap
test
jmp
fwait
mov
jle
icebp
in
std
xor
mov
pop
imul
adc
divb
icebp
enter
push
subl
lods
daa
rcrl
sbb
mov
push
mov
jae
jmp
insl
sub
mov
xor
rcrl
mov
cld
je
mov
xor
fs
mov
xlat
push
mov
pop
orb
ret
jnp
ficoml
dec
sub
mov
cmp
jecxz
and
xor
xor
in
sub
outsb
mov
mov
ret
movsl
cmpsl
add
int
mov
cmp
ret
inc
mov
sbb
jp
and
dec
mov
pusha
movsl
sbb
or
sbb
cld
dec
fistps
xchg
insb
and
pop
icebp
scas
xorb
pop
push
fisttpll
iret
mov
frstor
inc
test
xchg
stos
cmc
push
sub
dec
pushf
cmpsb
lds
adc
adc
out
push
sub
inc
inc
jo
sar
les
xlat
jbe
add
push
dec
daa
js
or
inc
mov
push
xchg
lods
fistpl
dec
mov
add
bound
sbb
push
dec
loope
adc
out
push
mov
mov
in
iret
dec
add
fstps
adc
inc
sbb
cmpsl
mov
cmp
out
or
js
push
js
paddusw
mov
mov
adc
in
pop
or
push
jl
test
adc
push
aad
sbb
mov
rdpmc
es
sahf
lods
adc
push
pop
sbbl
sti
insl
dec
inc
sbb
inc
jb
jmp
push
cld
adc
and
in
jp
mov
adc
std
dec
jns
adc
jecxz
sbb
jns,pn
outsl
cwtl
into
or
rorb
stos
in
fidivrs
sarb
adc
test
push
das
sub
pop
xchg
sbb
loope
lods
inc
cmp
leave
mov
pushf
lahf
aad
shrl
mov
lahf
adcl
leave
push
sahf
js
nop
cltd
lcall
jle
out
loope
mov
and
and
cltd
pushf
cli
js
jmp
xor
or
icebp
push
push
dec
push
out
push
add
bound
xor
push
je
or
push
cli
bound
and
adc
or
call
insb
movsb
pushf
cmp
js
cwtl
out
push
int
cmpsb
lods
subb
inc
and
xor
xchg
sub
pop
jmp
jns
sarl
xrelease
adc
iret
sub
movsb
pop
stos
outsl
jmp
jle
decb
lret
call
cmp
enter
or
iret
sub
inc
dec
and
pop
dec
xchg
jne
and
sub
mov
inc
movsl
insl
in
mov
into
pop
sbb
jecxz
pop
xor
in
icebp
cmp
ror
orl
dec
insb
dec
js
scas
inc
aam
cmpsb
jp
sub
sub
sub
mov
repnz
jbe
cmp
jl
fcoms
xor
pusha
xor
add
jae
mov
mov
xchg
into
loope
sti
push
adc
xchg
inc
lds
pop
cmpsb
inc
call
sub
cli
insl
loope
dec
imull
int3
xor
jp
and
fldl
fdivs
cli
imul
dec
pop
xchg
adc
xchg
or
ret
push
sarb
std
gs
arpl
sub
loope
loopne
cmp
daa
aaa
cs
push
cld
pop
test
ja
inc
lret
xchg
cwtl
hlt
push
cmp
jmp
add
push
frstor
jbe
mov
mov
ljmp
bound
das
adc
push
pop
fadds
or
rorb
cwtl
cmpsb
push
mov
pop
jl
adc
cmp
dec
in
push
adc
cmp
fs
add
dec
xchg
dec
out
mov
cwtl
pop
push
daa
ds
pop
test
mov
fildl
cmc
push
loope
pop
jmp
mov
sbb
inc
mov
jmp
int
cmp
adc
cltd
cmp
popa
aas
out
pop
enter
daa
pop
jge
out
or
mov
mov
leave
inc
scas
hlt
cmpsl
jecxz
faddl
jge
push
xchg
les
in
xchg
scas
pop
cmp
shrb
lret
push
xor
mov
mov
outsl
jge
mov
test
in
sub
roll
imul
repz
mov
add
shrb
push
flds
or
js
jmp
inc
cli
out
dec
outsl
pop
xchg
xor
or
add
test
dec
sub
cmpsb
dec
packssdw
mov
ljmp
icebp
push
lds
xchg
pop
or
jg
mov
lret
shl
sub
mov
leave
mov
jle
rclb
sub
mov
push
enter
xorl
mov
dec
push
mov
lcall
mov
push
adc
sub
aad
test
add
scas
inc
inc
shlb
sub
sub
mov
or
and
sbb
push
xchg
mov
mov
stos
push
subl
push
xchg
mov
xchg
push
jo
sbb
fldl
int3
and
aam
pop
add
and
popf
push
mov
aad
aas
repnz
and
aas
xor
cmp
lods
jo
icebp
sub
and
inc
scas
aas
and
cmp
pop
mov
or
cmpsl
dec
dec
sbb
jnp
mov
push
out
jne
test
adc
add
pushl
push
pop
iret
add
scas
imul
inc
inc
faddp
sbb
or
pop
mov
and
test
lods
mov
dec
aad
movl
and
mov
ds
gs
xchg
mov
mov
sbb
shrl
mov
outsb
cltd
sti
push
sbb
inc
mov
int3
adc
jmp
lret
iret
ret
mov
push
fmull
push
add
mov
out
jecxz
pop
xchg
push
sbb
pop
repz
sub
add
rolb
loopne
jbe
fldenv
jecxz
xchg
stos
jo
dec
push
sub
xorb
jns
push
mov
negl
imul
pop
xchg
pop
ret
clc
push
push
add
mov
lea
xchg
in
out
ffreep
sub
adc
int3
pop
sub
negb
int
cmpb
adc
sbb
mov
cmpl
out
test
inc
imul
inc
pop
inc
ja
loope
int3
mov
xchg
loop
xchg
cmc
jecxz
xchg
inc
cli
lret
pop
adc
in
mov
xor
repz
push
mov
jl
cmp
in
cmp
dec
pop
push
out
loop
lock
fsubr
pop
fldl
in
cmp
ret
lret
cli
andb
push
adc
jp
out
je
mov
sub
cmc
sub
cmpsb
cmp
arpl
pop
test
or
ret
psrlq
dec
loope
push
sub
aad
sub
fldl
push
subl
mov
dec
and
sbb
inc
loopne
in
push
loopne
pushf
push
ficompl
pop
push
mov
adc
pop
cmp
push
call
leave
imul
xchg
dec
lods
push
jp
sti
xor
inc
add
addr16
fcomp
xor
aam
outsb
inc
xchg
lods
es
stc
in
in
dec
cmpsl
pop
push
sub
negb
adcl
je
mov
in
fnstcw
dec
sub
mul
sbb
outsl
sbb
mov
int3
sar
idivl
jg
cmp
notb
pop
cwtl
insl
cmp
out
or
push
add
sahf
and
or
inc
dec
xchg
hlt
and
mov
mov
mov
mov
jge
repz
add
ja
mov
inc
aad
rcr
hlt
rol
jle
lcall
mov
pop
sub
and
or
fcomps
or
out
stos
ret
xlat
sahf
add
orl
pavgw
xor
aas
cmp
les
xor
test
push
movsb
call
xchg
add
les
cwtl
stos
aaa
test
xchg
mov
call
jnp
fwait
push
mov
cmp
loop
pop
inc
add
imul
mov
jne
test
fcmovnbe
pusha
pop
insw
rorl
mov
sbb
in
adc
repz
lods
pop
aad
pop
popf
gs
jnp
push
addr16
mov
jge
mov
stos
sub
sub
mov
test
popa
pop
data16
mov
int3
mov
fsubp
or
pop
fwait
add
sar
cmpsb
mov
loop
cmc
pop
cmp
add
roll
imul
jmp
dec
or
out
scas
mov
lds
into
add
jg
repz
aam
sub
jp
les
and
cmp
mov
dec
fisttpll
and
loop
pop
cmc
mov
pop
push
xchg
or
or
aaa
mov
jmp
jbe
xchg
xchg
pop
iret
adc
repnz
lock
jo
aas
pusha
push
mov
push
jbe
mov
fstpt
and
bound
dec
or
mov
jnp
imul
mov
jmp
inc
adc
dec
xor
adc
leave
scas
jmp
fwait
add
add
bound
lret
xor
mov
or
lcall
push
adc
dec
test
mov
mov
push
adcb
dec
mov
mov
mov
or
dec
pushf
push
cmp
lock
fcmove
lret
loope
arpl
pushf
rorl
jbe
cmpsb
sub
xor
push
inc
push
ret
sbb
cmp
js
cmp
cmp
adc
bound
mov
adc
mov
in
mov
mov
fcmovu
jne
pop
mov
cwtl
sub
ficompl
out
and
in
jb
and
mov
out
adc
dec
mov
stos
ret
stos
insb
mov
cmp
ficomps
push
gs
adc
lea
mov
xlat
sub
bound
jmp
mov
mov
dec
imul
ss
inc
push
jnp
lods
xor
cmp
imul
int3
mov
xchg
mov
add
icebp
cmp
jne
sbb
push
jno
aaa
testl
xlat
add
and
repnz
lret
and
and
enter
push
repz
dec
cmova
jns
pop
loop
xor
loope
hlt
iret
dec
cmp
and
xor
stos
inc
popa
push
jge
sbb
fimull
mov
addr16
rep
test
jecxz
lea
and
int3
mov
popf
mov
jbe
aaa
mov
sub
add
loopne
mov
cmp
mov
sbb
mov
push
mov
shl
ret
into
or
mov
in
add
jns
test
imul
jbe
mov
aad
into
inc
jmp
orl
test
lret
ror
daa
loop
bnd
ret
cld
test
xor
pop
inc
jb
lock
nop
xlat
test
popf
jge
ljmp
pop
loop
mov
xor
loop
adc
pop
lock
sub
push
cmpsl
sub
insb
insl
ja
or
push
ljmp
ret
dec
sbb
jl
mov
lock
mov
cmpsb
push
rcll
add
rorl
mov
jns
xchg
push
sahf
jnp
inc
test
dec
lahf
fadds
aaa
imul
lds
je
bnd
setno
icebp
pop
push
notb
pop
push
icebp
xor
aaa
in
ljmp
jl
or
pop
std
pop
aaa
test
fs
hlt
jne
dec
loopne
add
mov
dec
add
mov
insb
adc
lret
xchg
int
jmp
inc
and
fistpl
imul
popf
and
mov
push
add
push
mov
or
das
insb
iret
xchg
sahf
or
xchg
arpl
mov
les
or
mov
lret
mov
fs
mov
sub
add
aad
cltd
inc
fwait
sbb
mov
cmp
add
imul
mov
mov
push
inc
xchg
xchg
cwtl
or
mov
pop
cs
mov
call
mov
lea
push
je
xchg
inc
mov
cwtl
roll
add
lea
xchg
orb
mov
imul
cli
cs
adc
push
call
into
cmpsl
pop
out
inc
enter
mov
scas
clc
fs
inc
sahf
push
add
aaa
std
mov
dec
fldln2
cmp
add
aas
addr16
mov
stc
add
push
cld
xor
cmpb
cmp
jge
xchg
fstps
and
in
scas
repz
shll
push
cmp
and
add
scas
jae
leave
inc
push
jb
ss
mov
add
fs
mov
pop
sbb
and
sub
dec
outsl
pop
add
sbb
aas
fisttps
push
jne
mov
mov
fdivl
int3
jmp
adc
aad
stos
imul
fcompl
push
xchg
inc
and
movsl
mov
sbb
sbbl
out
aas
mov
maxps
shlb
mov
icebp
mov
out
dec
pushf
addr16
test
or
push
and
add
mov
ret
mov
jp
int
cmpsb
cmp
int3
xchg
mov
std
add
sbb
adc
popa
sbb
xchg
cmp
sub
sti
cmpl
icebp
or
xor
pop
xchg
hlt
lret
scas
ficoms
mov
and
xchg
inc
rclb
iret
loopne
movsl
adc
push
add
addr16
das
lods
lock
in
notl
lret
movsl
test
call
sub
in
icebp
ret
sar
arpl
dec
xchg
shlb
sub
xchg
popf
fs
out
fadds
in
sbb
sbb
jecxz
or
cmp
fidivrl
cmpsb
sub
mov
dec
jg
push
scas
mov
ja
adc
mov
pop
shrb
gs
cmp
fisttps
adc
jno
ss
fadd
insb
fdivrl
gs
pop
loopne
xchg
xchg
push
ds
lock
cmp
lods
cmp
jns
push
insb
fcomps
inc
cmpsl
add
and
loope
sub
lock
int3
inc
mov
test
outsb
outsb
rol
mov
and
clc
movsl
repnz
inc
rorl
rcr
call
ja
inc
lods
movsl
fucom
std
xchg
adc
push
mov
ja
std
pop
and
mov
sbbl
sbb
cs
inc
pop
or
pop
mov
cwtl
push
and
mul
gs
mov
fnstenv
push
stos
cmp
das
cmpsb
cmpsb
gs
jge
xchg
cmp
fildll
lods
mov
cld
out
rcrl
repz
imul
xchg
int3
xchg
jo
mov
adc
fidivs
lods
ficoml
icebp
call
jp
cmp
cmp
icebp
jmp
movsl
sub
call
cmp
shrl
rclb
leave
lret
sub
outsb
sbb
shl
ss
sub
dec
inc
and
and
out
jne
daa
mov
testl
xchg
mov
inc
push
mov
xlat
dec
inc
repz
ja
inc
pop
cltd
pop
mov
sub
xlat
test
ss
pop
pushf
sbb
lea
imul
push
out
push
repnz
inc
jo
mov
fwait
les
bound
sub
arpl
movsb
mov
lods
inc
testl
xor
sahf
aas
cmp
rcrb
dec
adc
push
lea
cs
pusha
xchg
into
mov
ret
inc
sbb
rol
test
xchg
xchg
out
mov
xlat
xor
rcll
mov
sub
mov
and
or
pop
mov
sub
insb
in
cmp
out
xor
shll
pushf
or
pop
mov
insb
lods
bound
cmc
test
sahf
cld
or
sbb
sbb
cmp
push
mov
addr16
xor
cmc
xchg
push
or
dec
sbb
hlt
push
mov
repnz
add
sub
dec
xchg
insl
in
loopne
scas
cmpsl
sbb
fstps
dec
mov
xchg
cld
movsl
repz
or
mov
in
je
out
cmp
dec
mov
xor
iret
mov
push
push
aam
sub
push
stos
sti
fs
pop
stc
mov
nop
roll
or
int3
cmp
inc
or
cmpsl
jne
mov
movsl
jmp
cmp
jecxz
daa
mov
pop
inc
lret
pushl
pusha
addb
les
loope
cmp
mov
xor
mov
jp
dec
cmp
and
cmp
cmp
sub
pop
add
lret
push
cmpsl
push
into
push
psllw
adc
jle
mov
stos
popf
sbb
inc
cmpsb
rcll
shrl
hlt
push
push
push
fiadds
push
cltd
mov
sub
adc
fdivs
adc
mov
sti
stc
jge
std
cmp
invd
pop
pop
jl
test
mov
enter
xor
roll
add
dec
sbb
add
gs
test
mov
and
lret
rorb
xchg
rcrb
sbb
inc
cmp
lret
xchg
inc
or
lret
stos
jle
pop
jne
and
cmpsl
mov
mov
pop
push
jnp
pop
mov
jo
addr16
jecxz
scas
or
mov
cmpsb
das
adc
scas
mov
gs
xor
das
test
mov
outsb
repnz
stos
cld
lods
pop
xor
scas
outsl
leave
mov
mov
pop
jg
fs
cmpsb
cmp
cmp
hlt
test
pop
movsl
mov
xchg
shlb
outsb
sbb
mov
jl
insl
xchg
push
sub
mov
push
lods
mov
sarb
add
jae
test
xchg
jno
cmpl
daa
pushf
shlb
bound
cmp
imulb
pop
test
jge
cltd
in
scas
push
cmp
clc
or
stos
addb
aas
sub
push
sbb
cmp
sbb
xchg
jns
jae
je
test
cmp
dec
jp
and
dec
mov
mov
push
or
sub
ja
jmp
pop
cmp
lds
in
sub
sti
mov
lcall
sbb
mov
cltd
cmovge
jl
mov
sbbl
ljmp
push
aad
xchg
pusha
xchg
stos
and
lods
loop
mov
mov
cli
cli
push
ret
adc
sahf
cmp
cmp
adc
mov
lods
out
lds
jo
lret
xchg
add
jo
leave
push
lahf
jo
dec
js
jecxz
lock
ss
test
bound
rol
mov
rolb
pop
out
dec
sahf
mov
popa
jl
xor
sbb
aad
sbb
xor
dec
lcall
inc
andl
add
ret
inc
mov
test
or
cmpxchg
mulb
push
imul
sbb
es
sub
add
sbb
push
insl
adc
cli
dec
in
pop
or
repz
and
enter
mov
push
repnz
sbb
cmp
adc
cmp
mov
xchg
call
xchg
mov
xchg
outsl
lock
push
xchg
into
push
into
gs
clc
sahf
sbb
repz
sub
or
push
enter
das
jo
jl
and
aam
clc
insb
jbe
shr
push
cwtl
rol
push
jne
cwtl
cmc
inc
fisubl
xchg
addb
xchg
mov
mov
aas
outsb
sahf
jmp
cmp
dec
cmpsl
sub
sbb
jae
lret
and
sbb
jne
pop
ret
or
shl
icebp
sub
js
rorb
and
jno
adc
push
in
sub
hlt
movsl
dec
cmpsl
or
lret
aas
addr16
sub
iret
mov
icebp
dec
movsb
push
cltd
fsubrs
testb
ds
xlat
shll
or
sbb
mov
call
sub
sbb
push
roll
movsl
in
ret
push
jg
lock
xchg
movsb
xor
xor
jbe
enter
fwait
jns
inc
mov
bound
clc
push
cld
cmp
mov
and
enter
dec
mov
or
sub
lea
scas
inc
pop
ljmp
inc
jle
add
xchg
leave
push
add
sbb
xchg
or
pushf
sarb
fistpl
pusha
lret
icebp
dec
movsl
les
lcall
jns
xor
lods
movsb
dec
jbe
jo
jbe
roll
pusha
aam
lods
mov
popa
test
enter
movsb
dec
jne
lods
mov
mov
xlat
mov
test
jb
in
or
xchg
enter
out
sub
iret
cmp
je
cmp
cli
mov
push
insl
sar
ja
call
aad
push
push
adc
in
outsl
cmp
xchg
addl
test
lret
adc
jae
cmp
clc
sbb
sbb
mov
adc
jmp
fisubl
stos
and
inc
sbb
es
dec
idivb
cmpsb
ja
jg
icebp
in
xchg
cmp
ss
mov
bnd
out
imul
cmc
push
aad
push
jno
aam
fcoml
dec
dec
mov
into
scas
mov
in
cld
fs
xlat
faddl
icebp
jl
rcrb
cld
adc
dec
pop
rcll
add
ljmp
and
add
xchg
sub
inc
mov
cwtl
or
mov
pop
add
xor
push
fnstenv
movsl
lret
xor
xchg
ss
pop
lahf
lea
fmul
jge
and
push
pop
out
jecxz
mov
jmp
sbb
scas
jnp
push
out
nop
les
mov
dec
jmp
dec
jecxz
sub
ss
cmpsl
orl
sarl
jecxz
ss
std
and
pop
lahf
shl
cld
testl
sbbl
imul
js
js
xchg
jae
shlb
sbb
xor
cwtl
sbb
daa
push
ficomps
push
jae
jno
jo
arpl
xchg
and
lds
mov
outsb
mov
jb
sti
testb
call
fidivrl
rorb
push
inc
cmp
and
mov
imul
add
inc
test
mull
shlb
pop
shlb
and
mov
nop
pop
and
testb
orl
mov
sbb
cmp
out
arpl
mov
jmp
adc
sbb
push
push
pop
lods
rcl
cmp
mov
push
in
mov
adc
int3
fimull
lock
lret
daa
sub
mov
lahf
std
scas
enter
dec
mov
sbb
cmp
mov
sub
lea
push
xor
push
add
pop
xorb
das
mov
jb
shll
xor
jno
shrl
in
cmp
xchg
jns
pop
fs
xchg
sbb
cld
lods
in
mov
rol
lret
out
repz
push
cmpsb
sbb
dec
icebp
pop
jg
dec
push
sti
icebp
pushf
add
inc
mov
sub
insl
push
inc
sub
dec
push
add
and
dec
inc
xor
fscale
add
mov
in
xor
jns
jnp
in
jp
fnstcw
roll
aas
cmp
stos
pop
mov
lcall
jle
test
cltd
cmp
dec
orl
das
mov
and
std
cmp
push
mov
outsl
insb
popa
push
sub
xchg
and
adc
int
ret
push
les
in
push
pusha
cmp
adc
pusha
js
addr16
mov
fwait
cmp
adc
imul
ss
aaa
sub
jmp
cmp
sbb
and
inc
test
push
and
pop
mov
out
push
cmpsb
or
cs
inc
cmp
arpl
test
pop
icebp
mov
stos
stos
cmp
jae
mov
test
dec
xor
mov
mov
add
shl
xchg
int
lods
xor
sar
jno
cmp
adc
pop
mov
leave
out
ret
pop
mov
fcoms
and
in
jecxz
sahf
and
push
jbe
xorb
ret
xchg
push
and
cmpsb
stos
push
pop
xorl
inc
lcall
mov
mov
inc
sahf
mov
pop
xchg
cmpsb
mov
sahf
add
push
inc
jne
rorl
ss
adc
aam
enter
push
push
je
push
xchg
jb
fsubrl
xor
add
xchg
lods
and
fdivrs
std
pop
sub
jl
dec
into
xor
repnz
in
inc
mov
daa
pop
inc
mov
pop
imul
stos
out
adc
jo
je
faddl
mov
jmp
insb
js
incb
or
das
mov
xchg
xchg
mov
dec
loope
add
jmp
sub
xor
ja
lds
aam
pusha
cmpsb
cs
pop
out
test
imul
jg
dec
ss
call
out
gs
jne
and
cli
mov
sbb
xor
mov
pop
xchg
mov
pusha
lahf
mov
into
add
dec
or
mov
sete
stos
or
pushf
mov
cmp
fiaddl
fstpt
jne
lcall
and
cld
xor
rcll
mov
daa
mov
cli
xchg
jle
fbstp
ja
in
les
xchg
fidivs
ret
cs
gs
jne
adc
or
popa
js
loopne
aaa
sahf
mov
inc
adc
int
xor
jns
cmc
int
dec
fs
shlb
das
mov
outsl
invd
out
das
sbb
sub
out
pushf
lcall
cmp
arpl
push
xor
push
sbb
stos
inc
cwtl
and
pushf
dec
mov
call
arpl
les
repz
dec
xor
stc
bound
cmpsb
imul
push
ja
jb
jecxz
mov
fldl
pop
rorb
imul
mov
add
pop
mov
iret
push
mov
mov
fldcw
stos
and
push
mov
insb
add
outsb
lock
push
or
sahf
sub
push
out
scas
adc
pop
push
pop
int
fsubrp
inc
push
mov
dec
add
clc
aad
xchg
stos
subl
in
ficomps
inc
xor
push
enter
jge
pop
and
outsb
cmpsl
js
cmp
sub
neg
cmpsl
sub
or
aad
mov
dec
xchg
lods
mov
dec
out
int3
cwtl
and
mov
mov
jp
mov
das
aas
jbe
arpl
pop
xlat
je
das
sub
dec
or
clc
cmp
cmpsl
out
pop
mov
das
mov
push
jns
ljmp
pop
or
insb
pop
jb
push
xchg
mov
adc
xchg
gs
clc
rclb
xchg
push
push
push
add
mov
enter
xchg
add
andb
pushf
rcrb
inc
std
lahf
outsl
sub
ja
and
pop
mov
jecxz
xor
mov
roll
adc
xchg
or
pushf
sub
mov
in
lods
jl
cwtl
adc
aad
arpl
push
in
popf
mov
xchg
cmp
jb
cltd
aad
dec
sbb
cmp
xchg
cmp
das
adc
popf
pop
adc
sbb
daa
mov
mov
jbe
xchg
stos
lcall
mov
lahf
loope
fcoms
in
mov
and
mov
dec
sub
sbb
dec
pop
mov
sbb
pop
push
cwtl
cmp
xor
hlt
sbb
or
sbb
mov
mov
sbb
sbb
jne
dec
cltd
icebp
add
lcall
dec
ror
mov
aas
popa
pop
pop
scas
jnp
or
push
or
mov
out
loopne
dec
xlat
xor
jp
push
lods
addr16
pop
fisttpl
mov
clc
xor
jo
test
mov
dec
dec
into
xchg
sbb
push
sub
out
pop
dec
das
adc
inc
gs
fdivr
mov
in
pusha
or
or
and
mov
loop
iret
inc
and
lret
je
xchg
mov
mov
sub
shlb
dec
push
enter
call
lahf
push
jae
xchg
dec
in
je
fsubrl
lret
mov
pop
iret
dec
xchg
pop
add
mov
mov
stos
addr16
cmc
in
sub
fsub
cmp
fiadds
pushw
push
pop
sbb
push
jbe
fnstsw
ret
shrl
lcall
popl
ja
push
push
aam
xchg
dec
xlat
orb
cs
scas
xchg
ret
mov
pop
sub
jecxz
mov
sub
je
jb
or
repnz
add
loope
int
push
jle
mov
leave
fwait
testb
and
iret
mov
xchg
adc
test
mov
push
dec
pop
pop
mov
sbb
pop
es
cltd
jbe
and
sub
into
rol
fdivl
fwait
ret
sbb
repz
loope
hlt
lock
jns
fisubrs
cmp
pop
movsl
rorb
stos
pop
jle
andl
adc
mov
jb
cmpsb
jl
cmp
iret
pop
jp
hlt
jnp
inc
mov
out
cmpsb
loopne
or
test
push
or
or
mov
testl
adc
push
mov
sbb
adcb
lret
mov
fstpl
loopne
sub
stos
jge
shrl
inc
lock
scas
pop
movsb
dec
daa
into
jle
add
shll
outsl
inc
mov
scas
xchg
ret
xchg
jg
mov
pop
mov
das
mov
ljmp
mov
mov
outsb
jle
pop
xchg
nop
xchg
add
push
cld
mov
or
pop
iret
divb
clc
ljmp
push
jb
fists
out
sti
mov
xchg
mov
jecxz
jge
jno
hlt
push
sub
out
popf
pop
pop
imul
insl
outsb
adc
enter
in
inc
aas
imul
arpl
outsl
xorl
jne
cltd
shlb
movsb
cld
xor
push
orb
jb
lock
pop
push
or
test
mov
insb
pop
jo
sbb
or
sub
inc
scas
cmpsl
dec
idiv
sub
or
insl
push
sub
inc
cmpsl
in
iret
in
int
repz
test
pushf
cs
movsl
cmpsb
sarb
adc
scas
push
outsl
xchg
shrb
or
mov
xor
add
mov
pop
insb
jle
mov
push
cld
mov
cs
inc
dec
jmp
push
sub
xchg
popa
cs
fs
rcl
out
inc
jno
outsb
or
inc
js,pt
and
mov
mov
lds
arpl
ficoms
mov
loope
cmp
dec
ss
pop
cmp
aaa
jl
sbb
pusha
addl
mov
scas
push
jl
enter
into
mov
shll
adc
lods
adc
pushf
mov
mov
shll
movsl
insb
adc
jmp
icebp
push
or
fnstenv
pop
cmp
addl
int3
mov
mov
sar
jg
cwtl
ljmp
test
adc
pop
imul
loop
mov
mov
std
pop
jno
jb
add
xchg
aas
in
mov
pop
movsb
jno
adc
inc
sbb
adc
cld
aaa
pop
out
lods
jo
test
pushf
add
mov
lahf
push
and
jl
cmc
nop
or
or
mov
dec
movsl
popf
pop
or
out
pop
int3
fyl2x
mov
mov
shl
xorl
cwtl
sbb
xor
xor
sub
push
pop
out
repnz
sbb
mov
pushw
pop
lock
push
pushf
imul
add
clc
jnp
mov
ret
loop
cltd
nop
adc
sti
inc
loopne
addb
mov
and
addr16
test
fsubs
push
xchg
pop
addr16
xchg
sub
out
adc
fsts
sarl
les
and
push
jne
add
popa
es
xlat
sbb
dec
in
repnz
mov
add
pop
and
lahf
bound
pushl
outsb
and
cmp
movsb
lcall
imul
mov
mov
gs
adc
push
push
sahf
fsubl
rcrb
xchg
or
lock
nop
call
out
jne
jne
iret
add
inc
movsb
fimull
and
jle
jle
test
xor
nop
sub
or
aaa
xor
mov
add
movb
sbb
jg
sbbl
mov
pop
dec
ret
mov
test
xchg
ljmp
ds
cs
cwtl
sub
aaa
test
or
mov
adc
ja
gs
je
mov
xor
xor
fdivl
hlt
and
or
push
stos
out
and
push
lcall
cmp
sbbb
pop
call
mov
xchg
arpl
and
mov
adc
test
or
mov
movsl
mov
jo
std
sahf
scas
push
xor
sub
insb
icebp
sahf
aam
mov
or
out
loope
xchg
pusha
jns
and
pop
add
sbb
and
push
lea
pop
int
lret
dec
sarl
out
pop
inc
mov
sbb
xlat
pop
mov
in
mov
push
jmp
lea
in
dec
jmp
fsubrs
cld
cli
popa
ljmp
cmp
push
and
rorb
xor
into
xchg
pusha
lods
imul
fadds
cli
jmp
outsb
cltd
pusha
pop
inc
inc
inc
cltd
cld
stos
jnp
mov
pop
adc
jl
sbbb
popf
aaa
push
movsb
adc
fisubrl
enter
jmp
adc
push
add
pop
sbb
lea
arpl
lret
cmp
nop
cmp
shl
imul
sbb
mov
pop
and
mov
add
xor
int
mov
in
inc
insl
inc
outsb
inc
imul
push
insb
testl
jns
cmp
scas
insb
sbb
movsb
mov
push
iret
pop
fsubl
push
xor
sub
inc
or
int3
adc
inc
in
inc
lods
sub
mov
ljmp
mov
adc
faddl
sbb
adc
stos
fadd
sbb
mov
pop
lods
jno
sub
or
sti
or
xor
mov
mov
jne
push
sbb
dec
jmp
mov
cmpsb
lds
lods
jecxz
pusha
lock
lahf
cmp
mov
or
xchg
imul
adc
cmp
das
cmpsl
imul
adc
mov
xchg
std
hlt
stos
add
mov
in
mov
jl
les
rclb
xor
jnp
cltd
sti
leave
cmpsb
aam
imul
cwtl
movsb
mov
pop
jo
xchg
aaa
rorb
into
aam
adc
mov
or
dec
test
add
or
mov
mov
popa
cmp
stc
lds
push
cmp
push
mov
jmp
fisttps
test
xor
insb
or
push
xchg
jg
vdivsd
inc
sbb
cmp
insl
adc
mov
adc
rol
sbb
cld
adcb
aam
in
sub
mov
repz
sub
inc
jo
mov
xchg
ret
and
fidivrl
inc
cmp
mov
adc
fwait
scas
arpl
jecxz
mov
xor
shll
jge
push
lcall
inc
or
xor
cmp
push
lods
and
mov
sbb
pop
sbb
jns
xlat
iret
xor
add
pop
in
mov
jecxz
xchg
inc
stc
pop
andb
cmc
nop
add
aad
out
lods
dec
adc
aaa
mov
jecxz
and
clc
add
repz
push
or
in
scas
shl
jecxz
add
push
movsl
pop
cmp
rorl
std
mov
mov
outsl
sbb
cmpsb
inc
push
repnz
jns
xor
add
cmpsl
ficomps
insl
mov
arpl
mov
add
lahf
sbb
cwtl
mov
outsb
aam
repz
adc
idiv
pop
aaa
lock
jae
dec
dec
dec
testb
adc
loope
mov
mov
mov
cmp
mul
lahf
lods
into
sub
shrb
push
lahf
es
nop
insb
test
cmc
repz
sub
jb
inc
scas
jne
push
or
mov
xchg
les
push
add
push
outsb
push
xor
mov
or
jle
cmc
sbb
xor
pop
push
loopne
cmovo
shrl
push
push
cmc
dec
push
jmp
cmc
and
shl
pop
jecxz,pn
cmc
shlb
dec
cmp
sub
popa
rolb
outsl
out
dec
ret
sub
adc
sbb
out
ds
push
ret
imul
movsl
dec
in
inc
ss
mov
jg
xor
in
ffree
cmp
iret
cmp
iret
or
pop
bound
aaa
hlt
lods
xchg
aaa
jo
lcall
mov
adc
vpsraw
dec
jno
std
das
jp
push
subl
inc
mov
pop
loope
int3
sti
mov
int3
cmp
cltd
aad
cmpl
jnp
xchg
add
mov
test
divl
cmp
daa
negb
leave
cmp
inc
aam
or
push
xchg
out
adc
in
shrb
cli
outsl
cmp
std
testb
pop
in
movsl
out
xchg
mov
mov
sub
shlb
and
mov
dec
fimull
test
scas
xor
or
mov
int3
clc
pushl
or
xorb
dec
mov
dec
and
xor
enter
pop
push
or
incl
ret
sbb
dec
mov
push
mov
sti
cwtl
cmp
loope
imul
mov
jne
sarl
popf
test
fptan
jno
pop
mov
jne
xchg
sbb
cmc
push
cli
mov
rclb
rcll
xor
xchg
mov
stos
and
dec
pop
enter
lock
jmp
bound
lcall
lock
hlt
push
shll
mov
mov
fs
cwtl
aas
push
nop
insb
xchg
mov
sbb
fldl
add
jl
mov
xor
clc
scas
xchg
xchg
push
pop
xchg
test
imul
fimuls
add
pop
cmp
sbb
mov
pop
mov
add
jl
pop
inc
dec
jo
mov
push
leave
pop
push
and
hlt
mov
add
add
call
subb
xor
lcall
popa
scas
shl
repnz
leave
xor
dec
or
mov
jmp
aam
cmp
hlt
fisubrs
push
lods
in
inc
xor
les
shlb
xor
push
jmp
xor
cmp
cmp
mov
dec
lods
test
push
cmp
mov
jno
mov
jns
push
xchg
sahf
push
xor
loope
rcrb
adc
test
add
call
outsl
push
lahf
ss
xor
stos
mov
cmp
xchg
mov
and
xchg
fnstenv
fnsave
xchg
call
aad
cmpsl
or
jecxz
enter
cmp
data16
scas
xor
push
mov
inc
cmp
push
scas
or
jns
push
inc
add
dec
rolb
adc
jae
adc
add
add
adcl
jle
call
pop
sub
mov
jmp
scas
or
nop
xor
xor
arpl
inc
out
pop
dec
xchg
add
xchg
jg
test
inc
xor
push
push
repnz
fcomi
inc
mov
rcrb
pop
gs
mov
push
test
mov
ljmp
je
sub
inc
rorb
pop
and
xor
movsl
mov
lock
fmuls
ss
cmpsl
cs
dec
pop
mov
cmpsl
dec
hlt
push
mov
rorb
mov
xchg
mov
inc
and
shll
mov
jmp
inc
enter
popa
lock
xor
jns
ds
and
mov
sbb
ljmp
imul
sbb
cmc
test
pop
adc
aas
and
test
outsl
push
add
add
ljmp
jae
dec
pop
das
in
stos
inc
mov
shrl
hlt
aaa
mov
or
vcmpss
insb
mov
add
inc
fwait
mov
fsubl
push
add
xchg
inc
insb
pop
mov
clc
out
add
xchg
push
push
sbb
jmp
xlat
push
and
adc
aas
or
mov
es
popf
inc
popa
bound
mov
adc
inc
dec
jle
fsubs
rol
fwait
xor
mov
sbb
and
je
cwtl
mov
jl
inc
and
sahf
in
shll
addr16
mov
orl
dec
dec
xchg
inc
sbb
jecxz
and
xchg
lock
pop
and
jns
and
sbb
cmp
ret
cmp
jbe
cwtl
add
es
outsl
pushf
push
xchg
push
mov
les
sti
add
push
xchg
out
in
push
notl
mov
call
iret
movsb
fs
gs
loopne
adc
or
inc
jo
test
adc
inc
cltd
dec
ss
cltd
lret
or
outsb
xorb
outsb
flds
cmpsl
sub
xor
and
mov
repnz
or
cmpsl
fdiv
mov
and
mov
mov
in
inc
loopne
xchg
inc
call
mov
ss
sbb
imul
dec
jne
push
cmp
push
or
and
push
jp
mov
mov
mov
in
rcrl
faddl
lock
sub
add
xorb
ds
es
outsb
notl
addl
mov
push
shrl
cmp
mov
or
cmpsl
fcmovnu
push
or
lea
push
jl
xor
mov
lods
xchg
rorb
inc
xchg
das
add
testl
or
rep
test
sbb
mov
adc
idivb
mov
sub
and
add
loopne
cmp
jne
sahf
cs
adc
mov
cs
fcmovb
xor
and
cmp
push
and
add
mov
stos
sbb
mov
jg
sbb
xchg
lea
aam
cwtl
cmc
adc
push
add
dec
leave
sbb
jbe
xlat
add
cli
or
scas
pop
xchg
scas
scas
fs
sbb
jg
fimuls
cwtl
cmp
mov
rclb
mov
push
and
xchg
cs
in
fsubrs
cmp
mov
ss
addl
outsb
sbb
sub
pop
lret
rol
jmp
test
inc
loop
xchg
jbe
into
sbb
ljmp
pop
je
sbb
std
cmp
lret
inc
int
mov
jle
xor
stc
jnp
stos
fcoml
call
inc
jo
jecxz
dec
and
push
std
leave
fildll
push
mov
or
fdivs
cli
mov
fmull
jo
idivl
and
xor
xchg
xor
pop
out
call
mov
mov
imul
jnp
out
and
lods
clc
mov
sbb
iret
clc
add
scas
aas
lcall
mov
xchg
or
mov
cmp
fistl
jo
iret
fldenv
and
iret
sbb
cmp
jne
int3
dec
fs
jo
fbld
test
lcall
adc
sub
dec
pop
loopne
pop
mov
in
push
sub
xor
push
xchg
dec
jmp
mov
and
ss
xor
pop
adc
ret
or
fisubrl
and
lods
dec
fistps
mov
jmp
sbb
dec
and
sahf
sub
inc
movsl
jbe
inc
das
jmp
call
jg
dec
int3
mov
stos
mov
and
xchg
fsubp
andl
insb
ja
pop
dec
jnp,pt
mov
insb
std
int3
mov
mov
lods
mov
xchg
push
rolb
or
cld
and
aam
cld
ljmp
sbb
mov
aaa
cltd
fwait
bound
lahf
push
cmp
adc
dec
insb
js
xchg
adc
inc
insl
jmp
fldl
sub
sub
sub
push
xor
fldcw
cmp
sub
fldcw
xchg
loop
mov
clc
and
es
xchg
mov
gs
dec
jg
mov
or
xor
out
mov
sub
mov
add
jl
stc
hlt
add
loop
or
hlt
outsl
pop
cwtl
inc
sbb
data16
rcr
sahf
cli
loopne
mov
xor
cmpsl
sub
dec
pop
jnp
ja
clc
mov
icebp
adc
sarl
mov
movlps
out
sbb
rclb
into
push
arpl
xor
and
inc
stos
clc
dec
cwtl
fcomip
mov
and
cmp
aas
stos
shll
pop
fwait
xchg
xchg
dec
in
out
pop
pop
cmp
and
lods
aad
mov
or
push
lods
loope
and
mov
dec
in
lcall
imulb
xlat
movsl
cli
add
cwtl
pop
ret
pusha
push
popa
nop
insb
loope
loopne
fsub
mov
rclb
leave
cmp
sbb
pop
mov
aam
loop
sbb
mov
inc
ret
jae
push
cmp
pusha
push
sahf
pop
xchg
push
jb
adc
mov
lods
negb
push
dec
inc
xchg
loope
aaa
inc
sahf
jg
push
adc
mov
push
dec
dec
jl
mov
mov
out
dec
dec
xor
arpl
push
pop
sti
daa
pop
std
sub
insl
fsubrp
xor
push
jb
dec
inc
ja
dec
je
add
jle
mov
into
lcall
or
mov
sub
lcall
rcrl
jo
pop
mov
je
dec
and
mov
cmp
pop
ljmp
mov
mov
pop
shr
dec
sub
rcl
mull
adc
xchg
test
jnp
jg
ffreep
xor
std
xor
xlat
repnz
sahf
les
lcall
fadds
arpl
xor
fmull
adc
fidivrl
lods
jnp
jbe
loope
daa
cli
cld
cmp
cmp
lock
mov
sbb
xor
push
out
adc
jo
push
stc
hlt
inc
imulb
sub
fisubrs
lock
adc
scas
mov
sbb
cmp
mov
pop
adc
jg
mov
adc
lcall
mov
mov
ja,pn
es
stc
ret
mov
addr16
mov
inc
dec
stc
popf
jecxz
insl
pop
daa
je
aam
jmp
outsb
pop
xchg
mov
lea
mov
push
sbb
mov
xor
outsl
pop
xchg
adc
nop
adc
mov
es
inc
sbb
addr16
loope
mov
pop
loopne
mov
jge
fcmovb
test
les
cmp
lods
inc
iret
pop
xchg
mov
les
sbb
rcl
cmp
push
in
xchg
inc
out
adc
jae
in
int
dec
out
or
movsb
test
inc
jo
sub
inc
jno
outsb
fadd
pop
inc
add
inc
push
fdivp
pop
add
cltd
pop
jecxz
adc
pusha
in
mov
gs
jmp
jno
xchg
jp
sti
scas
jo
cld
mov
cltd
jne
sub
fcmovu
push
lcall
mov
in
aaa
lds
cmpsb
cmp
adc
loopne
test
mov
pop
icebp
pop
push
repnz
xchg
push
mov
loopne
dec
adcl
add
sbb
inc
add
ret
cwtl
pop
or
lcall
arpl
cmp
jmp
aad
xorb
lahf
ret
xchg
sbb
dec
test
sarl
add
inc
fiaddl
cmp
cmp
out
loope
xchg
inc
dec
ret
cli
out
fists
adc
stc
xchg
jns
in
and
pop
rclb
or
or
push
fimuls
push
inc
push
ficomps
push
scas
or
sub
loop
fmull
outsl
addr16
cld
pop
cmpsb
and
dec
add
lret
pop
mov
je
test
aam
push
xor
movsb
rcr
mov
mov
cmp
test
push
cmp
test
or
sahf
jnp
mov
inc
scas
lcall
jge
lret
sub
xchg
jae
aam
repz
pop
xor
inc
sti
test
lea
push
cmp
iret
mov
mov
jae
mov
mov
js
jb
jge
jl
ret
stos
pop
dec
ljmp
out
rorb
pop
les
cltd
cs
mov
mov
pop
push
scas
mov
mov
dec
pusha
push
mov
shlb
xchg
outsb
insb
lret
xor
sub
and
adc
mulb
xchg
dec
into
sub
adc
lcall
cmc
mov
sub
pusha
in
rcll
and
xchg
sbb
dec
dec
in
rolb
in
mov
adc
fidivrs
cmp
lret
adc
pop
testb
and
rorl
xchg
aam
fldt
mov
fwait
cmc
lea
ret
xor
push
out
pusha
aam
cmp
sub
lods
cmp
pop
test
imul
pop
mov
ret
aas
bound
mov
sti
std
cmp
pop
xchg
dec
xchg
and
mov
testl
sti
fbld
push
xchg
xor
rcrl
lods
inc
call
sbb
lds
sub
lret
stc
add
shll
shrb
xchg
inc
sahf
cmc
mov
cmp
sbb
jne
xchg
leave
scas
fwait
mov
mov
scas
repz
push
xor
push
je
orb
out
pop
scas
notl
sub
or
jbe
bound
int3
sbb
imul
into
xorb
in
mov
pop
xchg
pop
repnz
add
fistl
sbb
mov
scas
popf
inc
cmpsl
or
inc
fucom
inc
fwait
xchg
push
test
aam
dec
inc
ret
cmp
mov
gs
imul
jecxz
mov
jno
or
fisubl
lret
jne
stos
inc
dec
inc
and
sbb
mov
push
or
inc
jns
mov
sar
call
mov
pop
es
lahf
push
lahf
sub
fs
test
mov
aad
jge
pop
insl
aas
jb
dec
adc
roll
push
inc
xchg
pop
inc
adc
or
ljmp
ds
adc
ret
pop
ds
sbb
jg
lcall
cmpsl
mov
sub
rorb
es
sbb
or
mov
sbbl
aaa
push
mov
and
fdivrs
push
sbb
inc
pop
adc
js
pop
dec
and
mov
lds
pop
jne
imul
out
push
push
jle
lods
and
xchg
xchg
rclb
in
das
fadd
mov
xchg
pop
mov
lock
filds
jns
jecxz
lcall
fldl
rorb
sbb
jl
int3
mov
icebp
test
mov
sub
mov
add
repz
faddl
sbb
dec
fldcw
addr16
fld
fchs
das
jle
test
std
sub
push
pop
lret
out
inc
ret
sbb
sahf
int
insl
icebp
ret
std
adc
xor
loopne
pop
jb
hlt
cmpsl
hlt
popl
fwait
and
push
or
lret
jl
orl
lods
stc
xchg
loop
dec
xor
idivl
push
sbb
xor
and
arpl
lahf
and
lret
frstor
xchg
pop
sub
mov
jg
or
add
out
mov
mov
add
pop
in
int
lods
push
adc
mov
sbb
into
mov
ljmp
dec
pop
icebp
sbb
jno
or
mov
gs
cmpsb
jnp
jmp
jno
stos
or
jbe
mov
pop
cmp
dec
jge
jl
mov
inc
fdivs
cmp
outsl
jge
jl
xor
add
andb
in
movsl
xchg
adc
pushf
inc
aad
outsl
mov
ficoml
je
fcoml
notl
jo
push
inc
inc
ror
hlt
cmp
test
xor
pop
test
lds
stc
adc
mov
fists
sub
bound
xchg
xor
std
push
sbb
fadd
ss
ds
mov
jo
pop
dec
fisubl
jge
loopne
test
loopne
fldenv
ret
jno
mov
add
push
inc
cmp
mov
fwait
xor
jp
sub
mov
cmpsl
inc
lea
fs
mov
or
rclb
pop
mov
pop
andl
aam
or
movsl
test
subl
fldcw
in
inc
xchg
stos
shrl
push
adcl
xor
int
in
push
mov
mov
sub
jns
jecxz
cmp
xchg
in
xchg
mov
test
mov
imul
daa
xchg
fstps
push
movsb
push
fmuls
andl
sbb
out
addps
jnp
jbe
xchg
add
movsb
push
pop
out
pop
ss
adc
mov
cmp
les
dec
xlat
cmp
and
jp
addr16
jo
dec
xchg
jmp
dec
xchg
pop
lods
sbb
lcall
in
jmp
mov
jno
lcall
jmp
repz
arpl
mov
ja
ret
inc
pop
xor
rcr
adc
push
cmp
add
add
xchg
imul
dec
scas
inc
sbb
cld
popf
push
int
mov
sbb
pop
popa
in
pop
fstp
clc
push
jb
jno
daa
ljmp
xchg
ss
icebp
dec
jns
adc
dec
mov
ret
inc
mov
and
jle
fimuls
inc
cld
popa
push
push
cmpsl
inc
xchg
test
out
gs
cmp
inc
push
mov
ds
lods
cltd
loop
push
test
push
inc
cmc
int3
outsb
loope
movnti
add
in
rolb
test
push
jecxz
into
mov
int3
inc
push
dec
sub
jae
data16
dec
outsl
or
cltd
pop
in
in
fisttps
shll
sub
jne
mov
pop
pop
push
shll
rcrb
dec
xchg
imul
shlb
or
mov
mov
popf
sahf
add
lret
cmp
or
dec
push
fadds
es
inc
mov
jle
push
xchg
dec
and
cmp
xor
jl
mov
les
cmp
test
ljmp
sub
xchg
lea
xchg
das
into
dec
call
adc
mov
dec
or
xchg
repnz
dec
pop
mov
or
das
ror
scas
push
jmp
or
xor
pop
shl
push
aaa
addr16
push
aam
mov
ljmp
lret
pop
or
or
outsl
or
test
mov
stc
aad
inc
test
xor
mov
sub
pop
jns
xlat
mov
push
out
pop
gs
pop
lods
lret
pop
pop
sub
cmpb
fcmovne
sahf
cmp
sbb
push
xor
hlt
out
cmp
stc
out
add
jmp
testl
call
push
data16
and
dec
sbb
mov
xor
cmpsb
adc
or
icebp
test
sarl
pop
pop
cmp
daa
adc
jecxz
add
mov
pop
lahf
jae
adc
rol
push
mov
lock
push
jmp
mov
sti
push
js
mov
in
adc
scas
dec
pop
call
les
pop
lock
sub
cmpsb
mov
sbb
jmp
into
xor
xchg
sub
jp
mov
mov
dec
outsb
outsb
pop
xchg
and
pop
sub
jl
jno
mov
adc
outsl
xlat
clc
jno
xchg
mov
bound
inc
ja
add
sub
imul
mov
cmp
push
or
mov
sub
inc
push
xor
sbb
ds
xchg
sub
pushf
test
push
mov
cmc
movsl
loop
pop
rep
test
or
fwait
mov
mov
xor
out
sbb
cmpsl
or
push
xchg
popf
mov
andl
adc
jbe
fwait
pop
aam
cmpl
cmp
cwtl
inc
and
sbb
notb
mov
adc
add
pop
push
sub
insb
sub
in
in
out
xchg
aaa
mov
nop
sub
popf
pop
loope
lret
lock
aas
pop
push
adc
mov
movsb
jl
dec
push
enter
xor
inc
test
sbb
dec
dec
les
adcl
xchg
mov
xor
mov
stos
fsubrl
lock
ja
stc
or
xchg
adc
aad
mov
sbb
mov
pop
jmp
outsl
cmp
sbb
out
lcall
add
mov
push
fisttps
add
leave
int3
test
jb
popa
mov
mov
imul
mov
adc
jle
xor
lods
cmp
adc
mov
or
aad
sub
inc
std
fcomps
cmp
fdiv
push
mov
bound
lods
fs
in
cmpsl
sbb
imul
jmp
add
adc
outsl
movl
into
in
push
adc
mov
cmp
mov
shrl
mov
cmpsb
cmp
in
ret
xchg
pop
cmp
xor
mov
mov
cltd
repnz
jp
xlat
push
dec
je
cmpsb
add
mov
sbb
cwtl
faddl
push
movsl
dec
imul
cmpsl
nop
dec
jge
int3
cld
es
add
inc
mov
test
loop
sub
popl
lahf
pop
xor
pop
mov
mov
pop
cmpsb
sbb
lret
xchg
push
shl
stos
add
std
cwtl
jmp
in
mov
inc
ret
ret
and
addr16
pushf
xor
test
fildll
hlt
repnz
jns
jle
cltd
stc
xor
inc
pop
mov
es
hlt
or
pop
in
dec
and
and
pop
in
lock
bound
hlt
fnstcw
dec
pop
das
push
and
stos
push
scas
popa
adc
push
stos
mov
mov
mov
mov
scas
insl
movsl
push
dec
xchg
pop
pop
sbb
inc
iret
stos
inc
mov
loopnew
orb
xchg
inc
add
cltd
shlb
pop
mov
imul
cmpsl
fcmovnbe
out
ror
lea
mov
gs
push
jp
hlt
incl
clc
and
out
insb
dec
test
add
fldt
ja
aam
dec
dec
fcmovb
repz
and
outsb
mov
movsb
cmp
fimull
cld
and
sbb
ja
scas
mov
gs
mov
ss
pop
pop
push
push
rcrb
xor
cmpsb
jbe
leave
cmp
insb
shr
xor
sti
fmuls
pop
pop
sbb
fmul
sbb
fucomi
std
sub
jmp
fidivrs
out
fisttpll
pop
fidivl
push
and
imul
mov
cmp
enter
and
int
ret
sbbl
test
roll
mov
mov
repz
adcb
jl
je
push
or
sub
dec
sbb
lock
test
jae
and
movsb
jnp
jno
dec
hlt
and
fcmovnu
mov
sbb
testl
inc
inc
leave
sbb
cmp
xchg
xor
jno
mov
mov
pop
sub
test
gs
or
les
inc
or
je
inc
and
out
cmp
enter
ja
xabort
pop
lret
fiadds
pop
push
jl
mov
xchg
mov
mov
cmp
sbb
pop
or
lea
in
sahf
ficomps
adc
inc
test
iret
dec
mov
stos
out
je
fcomps
and
out
popf
dec
jo
or
mov
xchg
pop
pop
je
jno
sbb
mov
cs
add
sahf
lds
mov
mov
sbb
sub
xchg
les
adc
pushf
mov
pop
out
aaa
jne
andl
aad
dec
xchg
mov
popa
aam
shlb
jae
fs
mov
sahf
adc
cmp
sub
xchg
das
arpl
ljmp
jmp
fnstenv
sub
xor
fmuls
imul
mov
adc
mov
pop
push
add
loop
scas
mov
out
xor
inc
test
gs
mul
cmovno
xor
out
xor
js
faddp
testl
sbb
or
jg
xchg
movswl
call
ret
sbb
lcall
mov
mov
inc
adc
out
xor
das
scas
cltd
sub
mov
stos
pop
mov
cli
stos
jle
call
cs
out
push
stos
inc
push
dec
xor
mov
sub
add
push
daa
push
dec
dec
test
test
cmpsl
mov
aam
lods
sbb
jnp
push
mov
adc
out
xchg
mov
imul
mov
xchg
push
xlat
call
and
loopne
add
stos
xchg
aas
nop
mov
mov
sbb
fisubrs
js
arpl
cmp
xchg
add
or
aam
pushf
sarl
hlt
push
fsubs
add
stos
subl
mov
mov
mov
push
add
imul
inc
cmp
lahf
aad
sub
stos
sbb
cmp
adc
std
js
int
sub
add
repz
scas
lret
jmp
les
inc
mov
mov
pop
push
dec
out
dec
or
ret
inc
inc
negb
scas
ret
stc
dec
lds
or
dec
pop
mov
lcall
pushf
insl
xlat
lahf
pop
sysexit
lret
lds
fs
pusha
loopne
and
sarl
xchg
xchg
mov
jl
or
fnstsw
test
pop
insl
lret
fs
dec
in
in
sub
out
sti
pop
adc
mov
pop
mov
ja
in
fs
jb
jmp
sarb
lret
xor
cmp
adc
pop
lock
jp
or
mov
arpl
fimuls
aaa
shlb
hlt
adc
aaa
nop
xor
enter
int
adc
mov
fwait
pop
rorl
push
das
loope
sti
imul
mov
mov
add
dec
inc
mov
cmp
xor
addr16
lcall
sbb
jg
movb
dec
cmp
and
inc
mov
js
mov
mov
sbb
clc
shlb
inc
add
into
push
xor
cmpb
xchg
int3
rorb
mov
cmp
xor
or
adc
mov
xchg
das
fsubrs
cmp
aam
sbb
dec
and
cmp
pop
insb
mov
cmp
sub
xor
movsl
lock
leave
mov
xor
ret
mov
cmp
ja
inc
cmc
out
dec
loope
pop
jb
inc
push
adc
loopne
jl
insl
mov
jecxz
jle
inc
lds
pop
iret
inc
xor
stos
ja
aas
loope
cs
nop
aas
or
cmp
orb
dec
cltd
call
inc
cmp
popa
insl
sti
popf
or
jo
cmp
scas
sub
sbb
xor
pop
push
ljmp
pop
inc
add
push
inc
incb
jns
and
inc
ljmp
rclb
cwtl
ret
popa
lods
xor
jle
xor
sub
mov
std
push
lock
or
jl
xchg
xchg
dec
out
xchg
push
and
arpl
fmul
jl
xchg
mov
test
repnz
adc
adc
sub
xor
pusha
mov
sub
clc
icebp
lods
in
ss
ljmp
mov
xchg
lret
data16
sbb
mov
sub
mov
stos
cmc
or
sbb
test
ljmp
bound
xor
pop
mov
mov
mov
pusha
cmp
pushf
sub
adc
mov
add
out
cmpsb
xchg
pop
jbe
out
shll
mov
cltd
stc
ret
in
mov
pusha
mov
mov
jmp
ret
jnp
dec
xchg
push
jbe
push
aam
inc
lea
cs
xchg
mov
xor
sub
adc
shlb
loopne
repnz
stos
imul
mov
xor
fists
jecxz
mov
pop
aas
sahf
nop
mov
inc
push
test
fdecstp
push
inc
xchg
popf
es
inc
sbbl
sbb
imul
and
pusha
je
cmp
xorps
enter
jo
inc
jb
imul
dec
cwtl
fldt
mov
loop
shlb
pop
jl
mov
xor
push
popa
cmp
sub
outsl
or
mov
dec
push
jl
pop
inc
scas
jae
jmp
jp
fisubs
pusha
inc
sub
addl
sti
xchg
sti
scas
pop
sarb
icebp
mov
mov
xor
add
mov
sub
lods
icebp
leave
mov
sub
mov
add
lds
add
mov
push
dec
xor
xor
sbb
sete
pop
dec
in
jle
jnp
or
data16
mov
in
mov
stos
lock
icebp
add
pop
push
push
movsb
call
pusha
mov
mov
jp
xlat
mov
dec
lods
ficomps
mov
pusha
outsl
bound
in
jle
cmc
gs
aaa
xor
std
xchg
cmc
push
test
sub
add
jl
mov
push
push
cmp
cmpsb
andb
dec
in
sbb
sub
sub
insb
xchg
outsb
adc
or
mov
and
stos
push
scas
nop
jbe
jae
sbb
xor
imul
and
adc
mov
cmp
adc
xchg
shr
rcll
es
and
mov
push
sub
lea
lock
mov
push
cwtl
xlat
xorl
mov
adc
dec
ja
pop
insl
mov
cli
call
dec
gs
pop
or
jne
inc
push
mov
or
ror
aaa
add
mov
add
sbb
test
out
ja
xchg
ret
lcall
cmp
int
or
iret
popf
rcrl
std
jnp
repz
pop
repnz
mov
mov
pop
outsb
pop
mov
pop
sbb
shll
jne
fwait
mov
mov
cmp
mov
inc
pop
sysenter
repz
cwtl
pmuludq
xor
sub
cmp
lds
push
jl
or
inc
mov
push
push
out
in
mov
push
inc
add
and
rclb
mov
mov
dec
sahf
mov
dec
sbb
mov
aad
mov
mov
sub
dec
push
in
insb
xchg
stos
dec
call
fmuls
sub
addr16
jns
jne
sub
add
aam
test
scas
xchg
push
and
ja
js
clc
adc
mov
in
sub
or
mov
jg
rcll
push
and
add
fildll
pusha
xchg
or
ret
js
or
cli
aas
sbb
sub
imul
ret
in
or
aas
fwait
sub
xchg
out
stc
out
bound
inc
dec
cmc
fwait
xchg
in
mov
pop
pop
cmpb
inc
imul
or
dec
jnp
cmp
cld
bound
ret
sbb
fnstenv
xchg
arpl
xor
shlb
pop
dec
mov
shrl
aaa
adc
lea
jns
jbe
and
push
aam
mov
inc
aam
cmc
ss
push
cld
xchg
clc
stc
or
dec
dec
loope
aad
add
lock
stos
xor
xor
cwtl
push
or
mov
ret
hlt
push
int3
sub
jne
test
push
mov
mov
jbe
subb
jb
imul
imul
jmp
lds
mov
or
push
inc
mov
in
adc
jle
sub
mov
mov
shll
xchg
add
test
sub
stos
dec
call
sub
mov
fldcw
jle
cli
out
dec
fdivrs
mov
aas
aad
ds
xchg
rol
mov
mov
inc
cmp
mov
inc
out
rcrb
leave
icebp
mov
shrb
imul
loop
pop
jns
rcll
addr16
mov
clc
pusha
cmp
or
insl
jbe
pop
dec
cwtl
xor
jae
jl
fstpt
mov
xchg
in
cmc
inc
out
es
mov
xor
lcall
push
mov
dec
dec
scas
aas
scas
xor
mov
lods
into
adc
cmp
movsl
xchg
jae
push
jg
fmull
je
dec
xchg
repnz
xchg
push
jp
add
imul
xchg
fstpt
add
frstor
push
pop
mov
and
mov
movsb
aas
xor
mov
sub
in
pop
push
mov
push
or
and
mov
jp
movsb
shrb
dec
stos
fistps
or
rclb
imul
cmp
clc
cmpsb
test
sbb
mov
ficoms
pop
xchg
iret
sti
fcompl
out
inc
stos
pop
or
xchg
popf
test
repz
mov
repnz
xchg
sbb
stos
mov
xchg
or
xchg
lods
scas
icebp
push
iret
adc
rcrl
mov
fadd
dec
sub
sbb
call
lea
jne
mov
loopne
xor
dec
int
add
add
jp
cmp
les
add
bswap
or
sbb
popa
xchg
cmp
mov
out
add
outsl
es
lret
add
int3
xchg
movsb
pop
sub
push
jbe
xor
push
pop
mov
xor
inc
iret
imul
xlat
and
pop
insl
add
dec
jmp
in
mov
aad
cmp
push
mov
xchg
jp
push
and
xchg
or
adc
lods
fidivrs
mov
fwait
addl
data16
std
mov
xor
and
cmp
icebp
cli
les
testl
jbe
push
inc
and
gs
addb
neg
lret
mov
cs
sti
push
pop
mov
pop
imul
jmp
jbe
jnp
in
inc
dec
data16
mov
push
mov
testb
mov
mov
iret
cmpsb
add
sahf
out
adc
popl
jp
lea
xor
mov
sub
and
push
lods
jg
test
loope
mov
ss
inc
push
pusha
shlb
inc
cmc
cmp
ja
xchg
icebp
lock
xchg
test
xchg
pusha
iret
pop
or
and
lea
inc
stos
out
sbb
mov
out
fcos
push
fs
jle
mov
std
push
sahf
add
movsb
loopne
add
outsl
sarb
adc
or
pushf
pop
xchg
xor
inc
icebp
fstps
push
xchg
mov
jo
dec
je
push
xchg
in
roll
fcoml
ret
lret
mov
push
and
push
fcomps
push
xchg
cmp
mov
hlt
pop
leave
sub
out
fidivl
lret
cwtl
dec
out
add
cmpsb
lock
adc
fsubrl
loopne
or
sub
push
xor
cmpsb
add
cmp
cmpsb
xchg
aas
ret
xchg
inc
adc
dec
add
push
aas
fisubrl
leave
cld
cmpsl
xchg
xchg
clc
clc
dec
mov
test
or
adc
int
dec
test
mov
fbld
lea
jle
repz
dec
xor
enter
cmp
in
jmp
xor
sub
lds
sbb
insl
xlat
divb
jmp
test
das
ret
std
add
out
mov
jg
jno
js
pop
pop
pop
ljmp
jb
jnp
mov
fs
add
xchg
add
mov
aaa
fsubs
inc
sbb
xchg
and
jnp
mull
push
dec
sbb
negl
add
xchg
xchg
mov
cmpsb
int3
es
mov
cmpsl
out
fcoms
jno
jns
inc
xchg
daa
push
and
test
push
ds
lret
or
mov
lahf
cli
push
out
xchg
insb
jl
fisubl
add
adc
ljmp
lea
mov
nop
jmp
xor
lds
int3
jae
dec
je
int3
lock
dec
xor
add
mov
aaa
ljmp
mov
push
call
in
lahf
push
jecxz
in
gs
adc
push
xchg
push
sbb
jae
int
mov
lcall
push
add
add
push
adc
outsl
std
sbb
pop
mov
push
repnz
sub
sbb
add
mov
mov
xor
or
mov
rol
adc
sbb
jne
xchg
das
lock
jnp
dec
hlt
mov
jg
dec
jp
repz
fiaddl
orl
xchg
lea
xor
call
out
out
sbb
jg
and
decl
add
mov
decb
cltd
jg
lret
addl
lods
sub
mov
cmovl
cld
inc
push
loopne
outsl
movsb
test
xor
push
test
movsb
jnp
mov
in
xlat
inc
test
call
mov
cmpl
mov
das
push
leave
lock
sti
push
loopne
lret
xor
ja
aas
pop
push
mov
out
leave
mov
lods
xor
lcall
inc
in
insb
stc
and
pop
fisubl
dec
push
or
roll
inc
fdivl
pop
jecxz
pop
mov
cmpsl
sub
mov
jno
ret
sbb
imul
and
es
sub
cmp
mov
mov
jo
enter
arpl
movsl
inc
add
sub
fdiv
fstpl
fwait
aad
or
clc
scas
sti
sub
cli
icebp
or
shl
out
push
xchg
les
xchg
mov
dec
stos
lret
loopne
lret
cmp
movsb
or
stos
mov
scas
push
out
sbb
fldt
xchg
adc
xor
adc
inc
mov
in
loop
mov
std
mov
stc
mov
leave
outsl
xchg
dec
aam
xchg
out
xor
or
in
sahf
inc
iret
jnp
loop
movsl
mov
shr
jmp
sub
popa
sub
imul
out
add
scas
add
push
sbb
test
inc
loopne
adc
std
fdivs
push
out
repnz
lock
jmp
rcl
insb
sbb
push
ficoms
aad
push
daa
or
mov
sarb
jb
xlat
xchg
shll
mov
inc
mov
into
cmp
xor
jg
adcb
pop
mov
cmp
mov
cmp
mov
ss
aaa
rcrb
push
aas
in
orl
in
add
je
enter
loope
arpl
daa
cmp
adc
add
push
pop
add
lods
sahf
mov
enter
ret
cmp
ja
lcall
repz
ficoms
lcall
out
mov
cmp
sub
outsb
mov
sbb
mov
xchg
jo
fiaddl
jmp
push
mov
xchg
mov
aas
leave
lods
cmp
daa
jmp
out
fs
or
push
jae
repz
movsl
push
mov
sbb
push
sub
in
repnz
lds
mov
xchg
scas
cmp
jg
or
ss
scas
inc
rcrb
mov
sub
cmp
lahf
pop
dec
or
jo
js
sbb
rorl
aas
scas
xchg
lds
xchg
sbbb
aam
test
movsb
addr16
das
push
cltd
insl
jno
test
jns
adc
dec
shlb
mov
movsb
gs
mov
scas
int
ret
inc
aas
push
xchg
dec
push
and
shr
call
push
adcb
jle,pn
sbb
inc
push
mov
fs
pop
pop
mov
jns
cmpsb
xor
cli
js
ss
movsl
ljmp
push
xchg
mov
inc
adc
xor
jnp
movsl
dec
in
mov
cmp
sub
test
imull
movsl
mov
jl
push
scas
dec
sub
aad
insb
addr16
mov
cmp
aaa
not
xchg
cmp
cs
call
and
dec
dec
mov
enter
aad
mov
mov
sarb
cmp
rcrb
clc
jns
out
xchg
xchg
jp
fmull
or
loopne
cmp
cmpsl
push
das
inc
sbb
ss
aad
mov
fnsave
rorl
nopl
sahf
add
pop
idivb
mov
lods
ficoml
mov
lcall
scas
repnz
xchg
jnp
lahf
cmp
cmpsl
add
jne
cli
cwtl
or
aas
mov
jmp
pop
popa
pop
sbb
xchg
ret
out
orl
addr16
jmp
push
shlb
ljmp
push
jno
cmpsb
or
bound
add
test
or
out
and
xor
inc
rcrl
cmpsl
sahf
fcoml
lahf
push
jp
ret
mov
pop
or
xchg
adc
ljmp
mov
mov
cmp
movsb
insb
xor
es
nop
pop
shl
or
mov
rcll
mov
jne
out
inc
cmpsl
insb
mov
addr16
popf
stos
xchg
mov
xor
push
push
aas
repnz
iret
lcall
jecxz
add
mov
pop
push
fisttpl
pop
je
dec
inc
pop
and
cld
orb
lret
jno
dec
gs
inc
lret
jl
jecxz
mov
push
in
iret
daa
dec
pop
xchg
scas
push
mov
insl
mov
push
push
hlt
xchg
adc
int3
cmc
add
imul
dec
inc
dec
mov
frstor
lea
clc
mov
shl
jno
ja
mov
xor
mov
sub
mov
fucom
shl
or
sbb
jmp
cmpsl
xchg
dec
in
adc
jno
adc
dec
sbb
es
shrb
call
sbb
mov
pop
fucomip
fnstcw
movsb
mov
test
cmp
jmp
notl
sbb
and
and
stos
cmpsb
add
shll
rcll
ja
mov
stos
xor
cmp
cmp
cmp
sbb
xchg
lret
mov
mov
inc
lret
into
xor
pmaxsw
pop
fidivl
mov
lock
sbb
sub
and
dec
into
push
xor
ja
xchg
xlat
cmpsb
lret
cwtl
dec
lds
adc
xchg
inc
rcr
dec
pop
sbb
add
js
cld
push
push
in
jae
jne
in
popa
movsl
hlt
push
inc
push
mov
hlt
xchg
push
mov
sub
xchg
orb
arpl
call
imul
pop
inc
out
xor
xchg
mov
test
lea
push
loopne
mov
das
pop
xchg
cmpsb
rcr
add
push
shl
popa
test
gs
fldcw
loope
and
sub
jmp
mov
dec
pop
bound
sub
and
imul
mov
pop
lods
mov
shl
add
fdivp
ret
pop
xchg
test
ret
in
gs
mov
btcl
pop
into
loop
sahf
pop
and
cmp
xchg
sub
cmpsl
dec
xchg
fs
insb
adc
mov
fstp
dec
mov
lds
jecxz
inc
xor
jecxz
inc
jo
push
cmpsl
adc
aaa
inc
enter
pop
mov
sahf
ja
jnp
pop
aas
mov
stc
push
loopne
ficoml
pop
sbb
fst
and
pop
or
nop
cmpsb
nop
lea
insl
cmp
jae
loop
pop
mov
jo
sub
stc
xchg
aam
out
fbld
jmp
stos
cmc
lcall
rclb
dec
cmpsl
adc
inc
xor
lret
jbe
and
and
sar
in
xchg
xchg
rcrb
stos
pop
cmp
inc
inc
inc
jecxz
sbb
push
retw
out
lds
insl
mov
out
sub
pop
and
adc
or
outsb
imul
inc
in
cli
mov
pop
jle
inc
aas
dec
inc
pop
loope
mov
cmp
push
mov
mov
dec
mov
sbb
xchg
addl
add
adc
add
xor
xchg
cmovbe
mov
mul
sbb
jp
popa
add
loop
outsb
fwait
sub
popf
pop
in
cmpsb
jle
inc
and
xor
pop
jge
in
aaa
or
arpl
mov
ljmp
xchg
out
outsl
lret
iret
divps
jns
ficoms
stc
adc
sahf
popf
cmc
je
mov
movsb
test
pusha
loop
xchg
dec
jle
xorb
cmp
mov
loope
shl
insb
xchg
push
push
push
lea
data16
imull
add
test
mov
and
lds
mov
clc
xor
rclb
xchg
repnz
push
loopne
lds
sbb
subl
inc
insl
stos
mov
push
rolb
outsl
xchg
push
out
mov
outsb
pop
mov
jne
mov
jmp
fmuls
push
pop
mov
push
adc
jmp
or
lret
sbb
jb
mov
and
test
inc
xchg
jns
mov
mov
loope
outsb
jne
shr
popf
pop
mov
iret
add
sub
push
dec
int
pop
aad
and
mov
fldl
imul
fprem1
sbb
int3
and
xlat
mov
mov
pop
aam
test
jl
inc
dec
xor
adc
aad
add
js
aam
in
pop
aas
mov
outsb
rcll
pusha
inc
aas
push
mov
mov
xor
mov
ret
adc
ret
mov
adc
pop
xchg
das
adc
movl
mov
movsb
mov
aas
xrelease
inc
sbb
sbb
xor
xlat
fimull
dec
jl
aad
mov
std
and
adc
mov
inc
xchg
mov
mov
push
pop
push
arpl
int3
inc
jecxz
cld
push
add
cmpl
cmp
in
dec
lods
cwtl
xchg
sbb
scas
mov
imulb
arpl
add
sub
cmpsb
shrl
jge
fldl
dec
xchg
mov
in
call
jns
or
lods
outsl
dec
rolb
mov
addr16
clc
orb
xchg
add
mov
enter
dec
cld
inc
jg
ret
movsl
push
and
push
loope
jo
push
roll
fnstcw
dec
xlat
jecxz
test
sahf
fmull
pushf
sub
add
loop
lcall
or
mov
sub
and
stos
push
add
mov
push
lahf
lahf
and
je
insl
mov
and
js
test
mov
outsb
cmp
hlt
jmp
fdiv
sbb
mov
fwait
pushl
cmp
loopne
loope
mov
cmp
jmp
movsl
mov
push
mov
dec
and
scas
inc
fcompl
dec
xchg
cmp
push
into
jbe
push
subl
xor
mov
push
inc
jb
scas
xchg
mov
shl
jmp
inc
pusha
dec
das
cs
jnp
mul
rcll
mov
mov
mov
mov
fwait
mov
cmp
pusha
jns
scas
cwtl
jb
fidivrl
hlt
xor
test
outsb
mov
ss
and
cmp
push
push
fs
dec
jbe
push
aas
scas
lahf
mov
lds
aam
sub
sbb
inc
mov
pop
pop
cmp
and
xchg
mov
jb
xchg
movsb
lahf
stos
sahf
pop
in
push
mov
mov
mov
adc
or
loope
mov
insb
fisubrl
aad
cmp
push
loopne
scas
std
insl
js
ja
nop
out
inc
push
jmp
icebp
movsl
out
xlat
push
jb
rcll
ds
push
cmpsl
dec
push
push
sub
push
stos
xlat
add
clc
xlat
push
movl
clc
sbb
pusha
sub
ja
out
out
jns
loope
pop
pop
addr16
gs
ror
fimull
dec
out
jecxz
cld
das
sbb
popa
jnp
mov
in
jl
cmp
movsb
dec
pop
sbb
sbb
repnz
add
jp
repz
add
test
jno
dec
enter
jns
mov
or
andl
adc
fmull
mov
lea
add
imul
leave
rcl
mov
lret
fwait
pop
and
mov
stc
sub
adc
add
clc
addl
sahf
push
mov
mov
cmp
pop
pop
jl
inc
add
dec
cli
sbb
cmp
repz
or
mov
scas
cmp
xchg
mov
lods
in
pushf
jmp
mov
mov
dec
and
rcll
icebp
imul
xor
or
mov
adc
sub
imul
cmp
repnz
pop
stos
sbb
in
fsts
push
imul
test
fwait
stos
xchg
sub
hlt
cmp
mov
mov
fcomp
insl
cmc
insl
pushf
mov
dec
cmp
mov
loope
mov
adc
or
mov
insl
lret
and
and
jl
mov
cmp
test
fcmovnb
inc
loope
fdivr
mov
lahf
loopne
mov
bound
jge
push
daa
mov
adc
xchg
sbb
aad
fucomi
xchg
fcomip
xchg
pop
jae
int3
jae
arpl
or
cmpsb
sbb
enter
xor
cmpsl
or
out
mov
push
pop
ficoms
sub
roll
sahf
dec
push
mov
jnp
loope
pop
xlat
add
clc
ljmp
insb
dec
cmp
xor
mov
mov
icebp
sbb
mov
jnp
outsb
rol
test
mov
mov
push
cli
pop
and
xor
dec
or
mov
mov
push
sub
jnp
fists
dec
inc
xchg
je
dec
test
pop
pop
pop
adc
fwait
les
fimuls
inc
add
ds
inc
xor
mov
jp
mov
jle
mov
xchg
lret
in
add
ljmp
and
repz
xor
mov
mov
push
pop
sub
jno
ss
push
lea
loope
test
inc
in
and
fistps
fistpll
jo
cmp
fsubs
xchg
pusha
out
sub
cmp
xor
xchg
andl
mov
jp
ljmp
ss
fdivrs
push
outsl
gs
lds
add
mov
mov
je
jnp
mov
aaa
fistps
mov
mov
inc
xchg
dec
inc
lods
mov
shlb
mov
fcmovu
mov
xor
or
scas
adc
adc
or
xchg
jns
mov
cs
sbb
mov
int3
adc
test
dec
pop
cmpsl
stc
xor
hlt
leave
push
xor
jge
pushf
andb
push
sti
rolb
jae
lds
xchg
das
and
pop
push
or
xchg
jle
enter
xor
ss
lods
xchg
arpl
cmp
xchg
and
adc
xchg
femms
icebp
rorl
jmp
repnz
pop
pop
push
xchg
jmp
sub
inc
xchg
mov
mov
fimuls
nop
mov
fbld
adc
jle
dec
mov
pop
push
xor
and
je
mov
inc
ror
pop
push
add
rcrl
stc
aam
js
test
jg
or
inc
xchg
sbb
xor
push
idiv
xchg
arpl
cld
xor
pushf
push
out
cmp
jl
xor
hlt
inc
sub
je
int
sbb
dec
mov
sbb
lock
lods
fs
out
mov
xor
add
divb
mov
and
jmp
jge
jo
dec
jg
into
or
mov
cmp
jnp
adc
aaa
ret
push
sar
test
ja
jge
loopne
pop
inc
jno
imul
mov
scas
mov
loopne
pushf
lahf
sbb
mov
ss
jns
pop
lret
hlt
cmp
push
pop
cltd
mov
lret
dec
dec
lret
xchg
adcl
inc
adc
adc
imul
cmpsb
add
adc
pop
pop
jge
loopne
inc
sbb
into
mov
loop
and
mov
int3
fidivrs
sub
lcall
aad
rol
xchg
mov
sub
sbb
jl
jmp
adc
mov
fwait
inc
and
fmull
mov
mov
and
cmp
fmull
mov
push
nop
fsubs
and
xor
inc
addl
imulb
push
popf
jp
movsl
inc
je
push
icebp
dec
daa
sti
push
pusha
mov
cmp
jmp
push
dec
pop
scas
jo
cmp
fistpll
mov
jae
lret
push
sti
cmp
inc
cmpsl
push
clc
sbb
fistps
inc
xor
cmp
pop
cmp
dec
loop
mov
pop
sbb
push
enter
adc
mov
addr16
insb
pop
xchg
push
imul
xchg
loop
data16
cmpsb
xor
xor
push
std
xchg
inc
loopne
adc
cld
shl
inc
cmp
mov
pop
iret
mov
out
adcb
sbb
loop
fbstp
lods
ror
cmp
jne
mov
ss
adc
add
pop
outsb
aas
arpl
jno
movsl
pop
or
repz
stc
mov
jecxz
js
int
call
xchg
lods
jae
mov
mov
dec
cmp
scas
push
xchg
ljmp
adc
das
out
mov
cltd
adc
sbb
pop
pop
and
sarl
sbb
cmp
mov
push
push
repnz
pop
sbb
cs
xchg
cmpsl
sti
orb
sub
mov
and
mov
mov
stc
dec
mov
xor
out
jle
stos
jae
pushf
lods
stos
adc
ret
fnstenv
arpl
into
jo
adc
pushf
aaa
cltd
std
dec
xor
ret
cmc
and
sbb
mov
in
or
pop
cmp
xor
dec
clc
lds
lock
push
enter
pop
rcrb
in
aas
shlb
leave
xor
mov
or
ficoml
cld
sbb
pop
cmp
add
jb
mov
xor
sub
add
jmp
mov
lcall
and
inc
aas
push
xor
inc
mov
test
xchg
bound
add
mov
andb
mov
xchg
inc
or
pop
inc
xor
lret
push
jmp
xchg
dec
mov
andl
mov
jb
dec
aas
jnp
push
cmpsb
fnstenv
sahf
rorl
push
add
dec
imul
rolb
cmp
les
pop
out
or
insl
and
scas
mov
cmp
leave
cmc
push
lahf
int
push
test
lea
add
outsl
lods
mov
sahf
mov
fwait
mov
ficomps
add
push
ljmp
dec
xchg
paddusb
xor
mov
stc
stos
movsl
and
mov
addr16
xor
push
jno
fdivrs
xor
mov
push
inc
mov
out
fdivs
aam
add
gs
add
aaa
fsubrs
adc
fcomi
std
sub
cmpsl
jle
and
out
push
shll
sahf
adc
pushf
sbb
or
jecxz
jnp
int3
shrl
cmpsb
lret
out
subb
out
xor
inc
or
xor
push
jo
rclb
loop
xor
xchg
mov
mov
addr16
push
sub
jg
xor
dec
test
xor
dec
dec
and
xchg
sbb
mov
mov
mov
push
or
arpl
jbe
rcll
cmp
daa
jmp
daa
std
rol
xor
mov
filds
inc
frstor
add
inc
or
outsb
adc
imull
cmp
inc
add
cmpsb
addr16
push
inc
mov
mov
into
push
sub
testl
sub
fisubl
push
loopne
sbb
pusha
lret
and
movsl
test
and
loope
sub
mov
jo
enter
fsubs
bound
mov
ja
xchg
add
jb
fcmovne
and
in
add
loopne
jo
jge
push
pop
pop
push
and
and
rcll
lods
dec
aam
movsl
sbb
nop
lret
scas
inc
add
rcrb
scas
sub
outsl
add
fadd
dec
mov
js
dec
sub
inc
dec
movsl
and
push
loop
sub
test
push
aam
cmp
lea
lock
push
repnz
or
adcl
cmp
ret
jmp
xchg
aas
ljmp
inc
adc
jns
push
inc
pop
das
aam
pushw
add
pop
sarl
xchg
ja
shl
stos
inc
and
sahf
xchg
shll
popf
mov
lods
or
scas
adc
dec
mov
mov
sub
pop
sub
xor
pop
mov
jle
fdivp
jmp
mov
jle
or
mov
adc
mov
int
lret
pop
leave
push
fldl
mov
mov
jp
sbb
lret
pushf
cmp
dec
inc
mov
cmp
ss
push
cmp
ljmp
sbb
mov
and
sbb
in
mov
pop
or
mov
add
ljmp
push
enter
lcall
adc
push
movsb
in
arpl
jns
push
and
lods
mov
mov
pop
mov
cmp
jge
push
push
addr16
xlat
add
add
sti
jns
sbb
or
xchg
mov
outsb
pushf
scas
sbb
pop
pop
ss
mov
js
jmp
mov
cmp
pop
push
mov
cwtl
push
xchg
jle
lret
scas
fldt
out
mov
and
sub
rcl
addr16
mov
jmp
fcmovnu
jge
sbb
pop
dec
inc
and
shl
add
mov
mov
pop
sbb
movb
and
stc
mov
mov
in
jnp
gs
and
cmp
lahf
mov
mov
ret
push
add
xchg
adc
mov
mov
jnp
je
lods
cmp
adc
jbe
cmc
dec
sbb
arpl
test
dec
mov
lods
test
sub
mov
pop
lret
sub
sbb
or
out
cmp
sbb
inc
pop
iret
les
mov
test
adc
inc
out
out
pop
or
sbb
lods
push
jb
out
and
mov
lods
pop
and
aam
mov
sbb
sub
cmp
stos
rolb
cltd
push
aad
pop
cmp
adc
jno
shrl
dec
mov
into
aam
repz
iret
sub
or
loope
dec
vpunpcklqdq
xorl
rcrl
sub
stos
add
push
data16
lea
mov
pop
or
out
mov
xchg
jnp
mov
jnp
xchg
lds
push
cmp
movl
fstpl
cld
sbb
mov
dec
adc
mov
mov
in
pop
fwait
mov
mov
lret
or
xchg
cmpl
pop
push
mov
dec
mov
or
rorl
push
lahf
rcl
pop
or
add
pop
fisubrl
ss
iret
jp
aaa
dec
aam
dec
test
xchg
mov
sarl
lea
add
je
loop
cld
inc
xor
pop
add
mov
jbe
or
or
call
xor
mulb
mov
adcb
jo
fcoms
fnstcw
sub
stc
loope
dec
xor
scas
adc
xchg
cmp
xchg
into
inc
mov
adc
sub
std
nop
jge
mov
push
and
push
ss
add
in
stos
ja
jp
mov
aam
fisubl
add
add
inc
int
or
xchg
fadds
dec
xchg
mov
pop
add
les
sub
sbb
lret
sub
sbb
cmp
addb
xchg
lret
add
add
lds
in
mov
outsl
divb
fwait
sbb
cltd
xchg
and
push
lret
dec
xchg
pusha
daa
sbb
lcall
lret
cmc
fidivs
adc
pop
sbb
xchg
xor
sbb
or
lods
and
mov
jae
xor
adc
mov
sar
or
mov
cmpl
dec
lds
push
pop
out
sar
dec
sbb
jmp
pushf
add
jno
mov
push
popf
add
lods
xchg
mov
cmpsb
xchg
das
dec
pushf
std
xchg
shl
scas
push
cmp
pop
ja
jns
loope
mov
imul
push
push
jecxz
jno
dec
jmp
imul
jge
xchg
mov
jle,pn
not
jne
or
inc
xor
or
aad
enter
jge
and
test
mov
ja
enter
in
cmpsb
out
imul
mov
mov
pusha
push
pop
movl
lea
shrb
sti
xor
inc
push
mov
cltd
pop
mull
inc
add
mov
sbb
push
test
push
pushl
mov
lea
sub
stc
movsl
adc
sub
ja
imul
bound
mov
in
push
bound
add
mov
out
mov
lcall
add
push
fldenv
ja,pn
cmc
adc
cmp
lea
lods
jo
push
adc
xchg
push
and
sbb
loope
sub
or
push
sub
jnp
shlb
push
stc
mov
rcrl
and
push
repz
data16
cli
pop
add
pop
xchg
xchg
insb
popf
adc
mov
pop
lods
fistpll
or
jge
ret
mov
push
sub
adc
enter
loopne
push
andb
jmp
sti
cwtl
cmp
sbb
mov
mov
cwtl
mov
clc
in
ss
ss
leave
add
ret
dec
lret
pop
xor
popa
and
sar
pop
xchg
lahf
iret
or
mov
and
aas
pusha
dec
movl
jns
rorl
xor
sahf
lods
js
jbe
loopne
int
xchg
insl
scas
fmull
jo
ljmp
xor
push
inc
test
xchg
jg
jp
push
fucom
movsb
ret
std
xchg
adc
dec
xchg
mov
stos
sub
mov
and
mulb
stc
bound
packsswb
es
jae
mov
cmp
insb
sbb
jge
xlat
xchg
ficomps
out
fucom
lock
pop
insl
lods
repnz
jbe
ror
lcall
ds
mov
out
or
cmp
jp
rcrb
pop
into
pushf
push
xchg
pop
mov
das
inc
scas
daa
rcrb
mov
in
scas
enter
je
jno
jle
jmp
lret
movb
imul
jp
pusha
push
sbb
or
sahf
xorb
pop
fistpl
andb
jp
mulb
push
inc
into
subl
push
and
scas
xchg
inc
mov
sbb
cli
push
dec
mov
imul
pop
cmp
mov
add
aad
rclb
daa
mov
or
stc
xchg
cmpsb
pop
jle
pop
xor
cmp
repnz
mov
or
popf
pop
clc
cwtl
xorb
push
pop
xor
mov
mov
jae
jp
dec
sbb
out
fs
xchg
xchg
cmpl
jmp
xchg
mov
sti
das
pop
je
int
sub
jge
in
test
call
or
daa
imul
inc
adc
leave
popf
ja
cmp
xchg
cs
pushaw
inc
repz
in
mov
popa
cli
add
sub
sub
shll
loope
dec
xor
mov
test
mov
sbb
dec
rol
pop
pop
inc
ja
sub
insl
loop
adc
adc
push
cmp
adc
xor
mov
cli
fnstsw
inc
jmp
sub
test
sub
enter
push
dec
inc
jnp
stc
sbb
xor
cltd
inc
sub
shlb
jb
stos
cmp
push
enter
fisubrl
jl
js
in
in
mov
repnz
out
sub
mov
and
out
pop
xor
inc
pop
add
data16
xor
dec
pop
or
sub
scas
imul
xor
ds
jns
mov
add
arpl
mulb
xor
inc
inc
pop
sahf
xchg
and
cmp
mov
fildll
in
mov
cli
je
dec
push
lcall
push
sahf
and
adc
enter
mov
lahf
pop
mov
sub
xor
sub
mulb
sbbl
out
or
fildl
ss
xchg
js
or
shlb
adc
cmp
jno
add
adc
out
lret
roll
mov
xor
fcomi
and
int3
jp
or
filds
mov
and
or
add
adc
mov
jno
push
sbb
dec
cmp
push
fs
add
mov
xor
out
cmc
or
and
push
sbbb
lods
pusha
xchg
xchg
movsl
jbe
int3
outsl
jg
add
repz
rclb
jmp
hlt
inc
mov
sarl
jne
int3
push
dec
insl
jmp
fs
in
test
mov
dec
adc
and
repnz
adc
sub
mov
repnz
mov
mov
xchg
mov
pusha
jbe
imul
sub
xchg
fcoms
lcall
adc
push
dec
outsl
add
inc
scas
pop
les
test
loop
out
dec
cmp
test
pusha
push
add
into
pop
rorl
nop
mov
push
adc
cltd
loope
mov
cmc
cmp
mov
jbe
push
push
mov
lahf
jp
bswap
lret
push
push
mov
mov
xor
push
test
pmulhuw
fcmovnbe
outsb
pop
int
and
scas
aam
aas
pop
cmp
leave
jbe
add
inc
scas
sbb
dec
jl
cltd
movsb
sbb
rcrb
jae
or
rolb
imul
push
push
mov
xor
xor
lret
negb
pop
sub
enter
lock
dec
cmp
mov
cld
jp
in
arpl
and
mov
mov
and
je
or
insb
orb
xchg
loope
pop
push
xor
sub
rolb
dec
xlat
fstpl
movsl
jb
mov
and
push
idivb
or
jmp
sti
out
popa
int
push
in
inc
pop
scas
stc
xlat
or
mov
cmp
add
test
pop
cmp
inc
dec
test
sub
xor
add
shl
arpl
psubd
inc
push
shrb
std
das
hlt
cmp
push
mov
aaa
push
lret
shrb
push
jbe
std
and
dec
lahf
int
sbb
sti
mov
inc
test
mov
jecxz
loop
lea
inc
adc
je
mov
mov
sahf
lret
inc
push
xor
orb
scas
dec
aas
shlb
add
pop
neg
lret
ret
dec
iret
fadds
insb
pop
cmp
sub
xchg
mov
sub
xchg
bound
and
out
xchg
ss
push
and
sbb
push
xor
gs
in
iret
mov
jo
rolb
sbb
insl
jne
cmp
outsb
mov
or
mov
push
mov
inc
cmp
shll
fstpt
cmp
inc
dec
xchg
out
or
je
pop
or
mov
imul
xchg
and
es
push
mov
jnp
sahf
inc
jle
xor
les
and
xchg
jae
loop
and
push
add
fidivrs
adc
dec
sub
ds
add
mov
mov
jno
insl
and
cwtl
mov
sub
movsb
loop
mov
xor
cmp
lods
repnz
xor
test
aad
lds
lret
jmp
cwtl
lret
test
rolb
jecxz
add
add
cmp
cmp
call
mov
and
in
jne
mov
pop
fidivrl
cmp
fs
adcb
adc
data16
adc
push
stc
jnp
adc
pop
sub
cmp
mov
mov
push
fistps
inc
in
pop
loope
scas
and
in
ror
rcr
js
xchg
loop
jle
fisttpll
xor
test
inc
xor
aad
sbb
xor
mov
inc
stos
sub
in
clc
sub
inc
mov
in
jp
mov
lods
ret
pop
out
fidivs
lds
xchg
into
push
imul
sbb
lea
jle
int3
faddp
lods
fdivl
add
jl
mov
nop
stc
push
insb
loop
scas
xchg
pop
das
or
out
cmp
cmp
std
xor
or
lods
jg
push
sbb
in
les
cmp
loop
cmpsl
xor
ret
cmp
dec
push
and
and
leave
sbb
jae
imul
jp
push
icebp
js
jmp
scas
mov
push
push
out
mov
adc
popf
mov
or
mov
push
jbe
ja
sbb
pop
cmp
jne
push
lods
jae
add
cmc
lcall
pusha
xlat
fcmove
mov
lret
jmp
cwtl
jo
je
add
sahf
mov
or
je
mov
test
cs
aam
jle
mov
mov
int3
xor
pop
mov
nop
inc
enter
jns
push
rol
mov
dec
shl
fxch
dec
shlb
fistpll
jl
ret
sbb
xchg
fldcw
or
stos
sub
sbb
aam
in
fsubs
xchg
movsl
and
adc
scas
add
or
inc
adc
mov
sbb
data16
pop
inc
es
daa
jns
movsb
inc
cmc
adc
rclb
push
inc
or
fidivrs
pusha
mov
addr16
add
push
icebp
add
jp
xchg
sbb
rorl
loopne
xchg
lcall
sahf
mov
xor
push
ret
and
adc
dec
ljmp
sahf
push
lret
iret
push
in
mov
dec
in
add
addl
jnp
xor
cmp
cli
xchg
push
push
mov
mov
mov
mov
out
or
cmp
aam
stos
and
sbb
out
push
dec
outsb
push
pop
enter
xchg
push
sarb
push
xor
pop
pop
jp
cmpsl
movsl
sbb
jge
push
add
js
out
jno
test
sbb
mov
fistl
pusha
mov
iret
add
in
outsb
pop
fsubs
mov
sbb
lds
jb
fists
repz
mov
stc
mov
cmp
stos
lods
or
jbe
rclb
xor
ljmp
scas
out
sbb
inc
loope
data16
mov
mov
stos
into
xchg
jmp
insb
in
or
pusha
sbbl
jl
out
mov
daa
addb
pushf
jecxz
stos
push
inc
pop
das
or
lret
or
lods
cmp
push
insb
imul
loop
push
gs
adc
add
add
mov
push
fs
sub
inc
mov
push
xchg
fcmovnb
call
and
mov
push
inc
xor
dec
fimull
push
inc
mov
xlat
mov
jp
lcall
lods
xor
mov
inc
push
push
stos
andb
jmp
inc
xorl
arpl
pop
andb
cmpsb
xchg
inc
xor
sub
xlat
xor
cmp
mov
icebp
mov
std
les
mov
push
sub
pop
sbb
pop
pop
pop
insl
push
aam
xorps
loop
pop
mov
jbe
ja
cmp
int
lock
adc
mov
dec
call
dec
add
xchg
push
movsl
out
cmpsb
push
mov
jbe
dec
or
mov
mov
jo
xchg
mov
rcrb
jmp
ljmp
cltd
arpl
stos
loopne
cmpl
bound
pop
mov
xchg
pop
mov
mov
sti
xchg
ret
mov
xchg
sbb
mov
scas
repz
iret
mov
mov
cmp
mov
pop
and
data16
repnz
xchg
mov
jge
push
add
mov
jecxz
stos
xor
aam
mov
pop
dec
xorl
push
cmpsl
jmp
lret
inc
lret
sti
xchg
mov
int3
cmpsb
jae
mov
mov
or
jns
mov
mov
pusha
mov
or
sahf
je
arpl
push
mov
push
adc
push
inc
loop
xchg
cli
push
cmpsb
xor
sar
jno
push
xor
inc
mov
sti
jmp
movsl
inc
jae
imul
js
aad
sbb
stc
es
push
adc
mov
scas
jle
xchg
incl
out
arpl
lock
xchg
dec
cwtl
or
push
cmovae
or
hlt
cmp
adc
adc
mov
jecxz
loop
gs
jno
sbb
dec
fisttps
movups
xor
outsb
pop
pop
loopne
lahf
push
xchg
negb
out
add
leave
xchg
in
inc
dec
or
fistl
fbld
push
sbbb
in
jge
mov
fcom
mov
adc
pop
cs
pop
sub
sub
push
stos
push
pop
fstpl
push
vprotd
adc
scas
setl
arpl
jnp
nop
inc
inc
imul
pop
mov
sbb
fstps
xchg
lahf
adc
jne
mov
enter
rorb
lret
pop
aaa
outsb
sub
andl
sbb
scas
mov
mov
fdivrs
scas
sete
pop
mov
pushf
rcl
movsb
fisubs
scas
xchg
and
hlt
add
es
jp
push
aas
inc
lret
popa
pusha
gs
jge
xchg
jo
inc
rclb
sbb
pop
mov
pop
push
lcall
mov
sti
sub
xor
sarl
xchg
aam
orb
mov
push
and
mov
add
pop
push
iret
and
je
lea
test
das
mov
inc
sub
or
icebp
mov
mov
out
push
mov
addr16
sub
movsb
adc
pushf
push
pop
xacquire
inc
repnz
mov
fnsave
lcall
lahf
insb
pushl
adc
pop
or
lock
mov
mov
movsl
add
and
jbe
push
test
fmuls
mov
inc
and
call
lods
dec
sahf
mov
jge
sbb
out
loopne
mov
pop
gs
stc
rol
out
imul
push
sbb
test
ret
arpl
fdivrs
push
insb
insl
out
cmc
cltd
pop
or
int
dec
rcll
jae
push
out
test
call
fdivrs
sub
imul
sbb
daa
or
dec
mov
mov
mov
dec
inc
inc
sbb
enter
ja
in
sub
add
dec
dec
mov
xor
add
lret
loopne,pn
xchg
fsubp
sub
mov
out
ja
pop
ret
jmp
out
pushf
div
pop
xorl
jnp
loopne
mov
jmp
cmpsb
jecxz
jecxz
and
jne
mov
pop
or
testl
adc
mov
insb
loopne
xchg
daa
aad
pop
fisubs
jbe
sbb
mov
mov
lea
cmpsl
mov
inc
push
push
inc
pushf
fidivrl
xor
fadd
rcrb
sarb
das
clc
sbb
inc
aas
mov
sti
stos
add
and
mov
insl
cmpsl
mov
xor
sub
outsb
shll
std
lcall
or
xlat
pop
sbbl
fsubrs
bound
aam
je
sub
pop
loop
or
int
mov
lret
add
movsb
lods
pushf
xchg
push
jb
adc
sub
inc
xchg
xchg
jae
mov
sbb
rcr
push
inc
push
stos
sti
fldt
jge
or
xor
push
mov
rolb
stos
and
cmp
mov
shll
cwtl
cltd
and
imul
popf
mov
adc
jno
mov
cmp
fldcw
dec
mov
aaa
pusha
mov
movsb
popa
clc
shl
std
sub
mov
aad
add
cmp
pop
jecxz
ret
ret
add
sbb
filds
adc
rol
daa
mov
jmp
aam
xchg
sbb
mov
inc
sub
hlt
and
sbb
rorb
add
cmpb
jns
mov
add
dec
rcr
pushf
inc
pop
dec
movsb
js
push
sub
jb
pop
push
pop
push
xlat
iret
lahf
xchg
fsubrp
enter
cmp
cmp
add
ja
pop
fidivrl
mov
clc
jnp
jno
or
test
xchg
pminsw
mov
inc
loop
or
push
sarl
xchg
xchg
sub
jne
das
int3
lcall
das
jg
aam
add
and
xor
fsubrl
rol
jmp
test
jb
loopne
push
pop
sbb
test
push
rcrl
out
int3
fistpll
aam
out
pop
loopne
lods
pushl
mov
push
pop
scas
call
xchg
outsl
fucomip
icebp
stc
sub
jbe
fs
push
lret
or
or
mov
push
jb
es
dec
cwtl
sub
sub
rorl
add
repnz
push
mov
push
adc
addr16
sti
nop
sub
or
jge
jg
jecxz
cli
arpl
les
sub
fsubrs
inc
or
push
lds
rclb
xchg
pop
loope
mov
xchg
je
subb
stc
in
imul
ss
movsb
mov
jne
push
dec
xchg
xor
xor
sub
pushf
test
fs
and
inc
push
xor
pop
pop
inc
shlb
xchg
pop
aas
sarb
movsb
push
inc
mov
adc
mov
inc
xchg
cmp
xchg
inc
mov
mov
lods
sub
inc
in
push
xor
push
inc
ja
push
pop
daa
ficoml
arpl
imul
sub
loope
lods
pop
cmc
icebp
cmc
jmp
pop
rolb
es
addr16
pop
sbb
adc
dec
sti
jbe
sbb
pop
and
jo
jne
ja
push
lea
adc
xchg
push
xor
dec
mov
jbe
lcall
jae
push
sub
adc
filds
jbe
jl
mov
mov
and
cmp
push
sbb
cmp
mov
add
and
mov
lods
and
xor
dec
popf
mov
mov
mov
call
cmp
fucomp
mov
cmpsl
mov
push
in
loopne
mov
ss
insl
std
xor
push
cld
pop
fcmovbe
jb
shr
addl
popa
push
jl
pop
mov
xchg
mov
xchg
lds
jae
shlb
imull
pop
jecxz
and
or
ret
shl
inc
xor
push
and
jmp
pop
sbb
xor
arpl
shll
sub
scas
inc
loope
sub
shrd
cmp
dec
test
add
out
into
fnstsw
movsl
mov
insl
outsl
sub
imul
inc
sub
sbb
insb
xor
pop
push
pop
lock
clc
xlat
jnp
adc
cmpsb
in
clc
out
lods
push
xor
loopne
icebp
sub
adc
mov
mov
jle
and
mov
inc
iret
notl
push
outsb
leave
hlt
data16
dec
nop
lock
inc
push
xor
mov
mov
cld
sbb
add
call
or
fmull
cltd
mov
inc
insb
enter
loope
sbb
xchg
or
or
out
add
pop
pop
add
es
ss
nop
mov
fwait
outsl
and
sbbl
adc
ret
mov
sbb
jl
pop
scas
leave
jg
add
xor
test
jo
std
push
ficoml
push
jle
jecxz
call
rcrl
popl
or
ja
clc
das
mov
mov
add
xor
lcall
clc
ret
sub
cli
xor
mov
jl
jp
push
fstl
xor
aas
loopne
push
sub
arpl
pusha
xchg
call
inc
adc
sub
inc
ret
ja
sbb
imul
sub
jecxz
lcall
out
pop
fcompl
daa
mov
in
xor
out
push
dec
int
sbb
adc
mov
xlat
cmp
xchg
insl
rclb
add
mov
repz
scas
out
xchg
adc
sub
dec
hlt
mov
shlb
mov
pop
xor
lock
pop
jp
jns
pop
imul
sub
shlb
inc
inc
or
mov
imul
pop
xchg
sbb
test
sbb
pop
lds
enter
fcmovnb
jb
std
pop
xchg
mov
sahf
dec
jmp
mov
add
push
pop
mov
pop
push
or
ljmp
pushf
add
int3
cwtl
stos
or
loopne
into
js
imul
inc
xchg
fdiv
pop
outsb
pop
lods
xlat
mov
sbb
pushf
pop
xchg
arpl
mov
les
pusha
push
cld
ljmp
pop
xchg
or
mov
and
adc
jmp
mov
push
stos
add
in
add
fsubs
scas
repz
fdivrs
xchg
outsb
lds
push
inc
shrl
in
bound
push
sbb
adc
ljmp
jg
in
cmpsb
inc
test
int3
push
aaa
fsubrl
fcomps
dec
mov
add
popl
and
and
add
mov
inc
hlt
dec
adc
mov
fsubl
cmp
pop
jne
int
movb
in
pop
sbb
sbb
fistpll
xchg
shlb
or
mov
dec
add
lcall
mov
ds
lods
lods
orl
xchg
ds
lods
call
jl
jnp
mov
jl
js
mov
add
xlat
stos
clc
lods
sub
aam
test
add
inc
mov
or
shrb
push
sub
imul
xor
add
popf
pusha
xchg
inc
jbe
mov
movsb
add
jmp
ljmp
fldt
in
pop
fadd
cmpb
or
sarl
les
xlat
sbb
xor
cmp
scas
jl
mov
int3
ljmp
or
ret
and
cmpsl
xor
aaa
filds
jb
shr
sub
out
lods
xor
stc
adc
xlat
fildll
cmpsb
gs
xor
test
popa
lods
and
roll
outsb
pop
pop
sub
and
movsb
jo
jmp
das
jb
push
mov
mov
dec
mov
fnsave
xor
shr
fdivrl
je
adc
xchg
pop
xchg
fwait
mov
stc
inc
xor
mulb
filds
sub
insl
jl
test
and
mov
outsl
sti
mov
mov
cmp
xor
jl
xchg
shll
in
cmp
aaa
mov
dec
out
out
lock
divb
or
pop
dec
scas
xchg
mov
and
loop
in
outsl
inc
mov
mov
pop
sub
or
jp
int
jns
lret
test
mov
cli
pop
xor
jbe
mov
std
push
mov
inc
gs
pusha
out
mov
imul
push
insb
mov
cltd
push
fisubrs
ss
xor
outsl
xchg
sub
cmp
or
fsub
mov
xchg
or
sub
pop
dec
jae
ret
xchg
inc
xchg
xchg
inc
jle
dec
addr16
jecxz
fsub
fwait
ret
pushf
mov
pop
lahf
imul
stos
adc
push
rcll
mov
out
or
insl
xchg
out
mov
jbe
iret
jno
icebp
push
adcl
cs
js
xchg
jbe
arpl
call
mov
xchg
aam
or
mov
hlt
inc
stos
stc
mov
rclb
adc
dec
add
xlat
nop
imul
inc
scas
and
bound
push
mov
ret
hlt
add
in
or
adc
sti
clc
cli
jb
push
fwait
stc
push
and
inc
inc
aas
xor
sub
iret
mov
fwait
std
rcrl
and
adc
xlat
pop
negb
xchg
push
sbb
sub
imul
pop
jg
adc
fsub
scas
ljmp
xlat
movsl
leave
push
xor
xor
mulb
push
sbb
fcoml
inc
jns
xor
stos
and
cs
mov
fiadds
in
mov
rcll
pop
add
jnp
inc
inc
ljmp
inc
pusha
xor
push
std
or
sbb
int
imul
adc
fbld
fcomps
cld
ss
stos
sub
dec
xchg
adcl
push
subl
sbb
pop
sbb
mov
push
adc
aad
aas
push
int
addr16
sbb
sbb
mov
adcl
mov
addl
xchg
in
xor
pop
negb
into
test
pop
or
sub
insb
ljmp
pop
cli
test
mov
push
rorl
dec
dec
mov
jne
jp
scas
mov
add
call
stc
sbbl
imul
dec
testl
jl
insb
test
sahf
stos
sbb
cwtl
gs
in
icebp
xor
andl
in
test
mov
dec
dec
out
adc
xchg
jmp
sbb
xor
je
sub
jbe
mov
pop
jg
jno
mov
mov
fnstenv
push
jne
out
in
sbb
aam
outsl
out
das
int3
adcl
and
push
andb
test
lods
mov
and
stos
shrl
fcmovbe
or
sub
aad
enter
lods
mov
in
daa
cmp
xchg
mov
das
repz
or
add
inc
xor
loope
daa
icebp
inc
xor
stos
js
scas
inc
outsb
aad
sbb
sub
mov
lcall
push
adc
test
test
outsl
outsl
rcr
sbb
or
nop
sub
out
push
fwait
adc
adc
jo
and
mov
js
cwtl
xor
int3
shl
cltd
fcoml
sti
mov
decl
xchg
fists
lea
dec
js
lret
ss
push
mov
xchg
mov
adc
or
das
call
test
inc
sub
sub
mov
test
pop
fsubrs
mov
dec
lret
jb
pop
add
dec
fwait
es
push
pop
mov
shrl
out
mov
test
mov
inc
xor
push
loop
mov
push
inc
pop
or
sbb
or
jo
sub
shll
jo
pop
into
sub
into
xor
dec
fdivr
sahf
js
jp
std
jae
pop
jl
fidivs
leave
test
dec
dec
movsl
dec
stc
push
push
fistl
xor
xchg
lret
and
mov
cmp
dec
lret
cmp
jmp
jg
push
add
sti
fcmovne
movsb
adc
and
cwtl
cmp
shlb
out
dec
xchg
push
adc
dec
mov
call
mov
popa
and
mov
push
cmp
add
and
mov
sbb
dec
movsb
mov
popa
push
and
or
icebp
fidivrs
mov
outsb
mov
movsb
mov
dec
aas
sti
fstpt
jb
mov
ret
cmpsl
push
jae
ret
sub
arpl
aam
or
xchg
lea
jae
jg
test
inc
pop
lcall
pop
add
cs
add
sub
mov
or
cmp
pop
cmp
mov
shlb
dec
pop
mulb
ror
jmp
dec
xchg
push
aaa
mov
xlat
push
popf
mov
inc
jp
pusha
scas
gs
jns
jge
dec
push
das
add
inc
inc
add
dec
les
sbb
sbb
fmull
mulb
xchg
mov
jbe
popf
xchg
inc
outsb
mov
fcmovnu
popa
and
add
rcr
fwait
out
lods
jb
leave
dec
out
popf
mov
repz
cmp
jl
inc
daa
int
enter
xchg
nop
xchg
outsl
rol
mov
arpl
mov
mov
into
cs
push
outsl
ja
mov
push
sti
or
or
cltd
rolb
scas
ret
mov
lea
dec
mov
mov
movsb
xchg
dec
enter
rcrl
inc
ret
sbb
sti
adc
cmp
popf
mov
adc
xor
clc
push
cmpsb
inc
jmp
stc
insl
pop
push
testb
mov
aad
data16
pop
mull
cmpsb
jmp
cmc
pop
imul
mov
mov
sbb
adc
jmp
xchg
xor
xchg
lret
adc
xor
sahf
loopne
test
xlat
scas
or
loope
lahf
out
and
jb
and
adc
lahf
mov
pushf
jg
pop
movsb
data16
sub
lcall
out
shrl
push
loop
dec
pop
into
in
lds
test
outsl
xchg
mov
stos
cld
ret
and
shlb
loopne
inc
dec
push
add
inc
jno
adc
dec
cmp
out
mov
and
nop
sub
popa
outsb
push
in
fidivl
popf
fs
iret
add
lds
lock
jne
aam
ret
jecxz
loope
xchg
rcrl
xor
sahf
popf
enter
cld
adc
inc
add
aam
leave
lcall
push
fs
sbb
xchg
flds
cmpl
mov
and
adc
nop
mov
cmp
adc
mov
fcompl
pop
push
out
mov
movsb
imul
in
movsb
sbb
sbb
scas
mov
sarb
scas
xchg
jns
imul
sub
lea
inc
shlb
mov
sub
sbb
popfw
movsl
out
cmc
outsb
out
push
cmp
xor
cli
cmc
test
mov
lahf
xchg
cmpsb
popa
outsb
inc
fs
testb
sbb
cmp
push
sub
outsb
sub
mov
sub
pusha
aas
add
imul
out
jp
dec
dec
xlat
sbb
inc
push
sahf
dec
mov
jge
fisubs
xorb
scas
and
ljmp
das
dec
jmp
icebp
and
mov
ficoms
sub
jnp
inc
push
in
call
add
cltd
sub
mov
jae
jb
or
idiv
add
ja
mov
mulb
xchg
gs
movsb
data16
mov
ds
movsb
imul
sbb
and
jmp
dec
hlt
xor
dec
add
dec
orb
pusha
icebp
orb
pop
xor
lret
lcall
inc
xor
pop
and
or
ljmp
andl
mov
enter
cld
orl
je
adc
mov
cs
outsb
into
and
ljmp
daa
aad
fisubrs
in
in
jne
out
fcoml
xor
test
inc
add
or
and
loope
and
xor
addr16
pop
test
sbb
and
ret
xchg
out
push
stos
adc
add
rorb
mov
in
call
lods
push
fidivs
lcall
fcomps
pslld
cmpsl
push
add
aam
jns
lods
clc
xor
jge
push
xor
mov
sub
roll
add
mov
cli
sub
das
sub
xlat
rclb
mov
lea
jmp
sbb
roll
cmp
mov
aas
xchg
dec
cld
cmp
sub
jle
in
add
mov
push
xlat
jl
and
or
xchg
ds
jo
inc
arpl
sub
movsb
cmp
push
mov
pop
xlat
cmp
jecxz
sti
push
ds
cs
cmp
insl
mov
enter
mov
sbb
or
jns
shlb
xor
add
mov
and
mov
roll
and
inc
daa
mov
mov
fnstcw
fildll
ficompl
jge
pop
cmp
arpl
call
in
pop
mov
data16
fsubr
mov
inc
cmp
dec
jbe
mov
leave
or
sub
les
xor
ret
dec
ret
ljmp
xor
pusha
sub
sarb
jbe
lahf
mov
sub
adc
bound
inc
mov
mov
out
and
movsl
xchg
cmp
mov
scas
ljmp
jae
stos
imul
cli
mov
aaa
aam
mov
in
frstor
inc
inc
bound
movsl
jp
ficoms
cmpsb
leave
push
daa
loop
and
aaa
sub
push
and
add
jnp
adc
aam
add
add
adc
aaa
push
xchg
mov
mov
in
dec
jns
insb
lcall
xchg
out
test
mov
jo
outsl
mov
pop
or
and
push
mov
loope
shrb
add
push
into
cwtl
out
shll
outsb
push
gs
mov
test
int
test
inc
sbb
adc
pop
xchg
in
dec
mov
mov
cmp
in
or
data16
pop
pop
cmp
sbb
xor
sub
mov
sbb
jmp
xchg
mov
and
jo
mov
push
das
out
leave
scas
loop
pop
fcmovb
aad
mov
incb
test
cltd
idivb
shrb
sti
xchg
adc
adc
xchg
push
call
pop
cmpsb
inc
cmp
push
stc
dec
cmp
inc
cmp
adc
rorb
jns
or
push
mov
lea
leave
mov
call
mov
pop
lock
and
out
or
cs
sub
jb
and
sar
push
lds
jns
out
mov
xchg
inc
jmp
out
fs
sbb
leave
cmpsl
jl
mov
test
adc
or
jbe
jecxz
cmpsb
mov
cltd
test
ds
xor
and
popa
cmp
fldcw
out
out
lock
test
cmp
mov
xor
mov
jle
fisubrl
sub
mov
jnp
pop
pop
lods
repz
je
je
xchg
mov
sub
sbb
dec
xor
bound
bound
push
sub
mov
outsl
push
ret
loop
cmp
ss
adc
int3
test
or
test
jno
push
fdivs
lea
jg
cltd
or
sbb
iret
sbb
and
mov
shr
xlat
mov
jg
pop
cmpsb
dec
fildll
cmpsb
sub
cmp
jp
dec
lret
nop
mov
adc
mov
cmpsl
cld
test
inc
dec
sub
data16
xchg
les
mov
sub
add
arpl
movsl
stc
jmp
int3
loop
sbb
sub
jo
in
add
out
inc
mov
je
adc
cmp
pop
xchg
aaa
lcall
adc
mov
mov
or
sub
sub
cmc
add
sbb
inc
xlat
cmp
pusha
shlb
jns
sarl
insl
ljmp
mov
xchg
push
push
rcrb
int3
push
mov
add
push
shlb
ss
xor
sarb
orps
jecxz
sbb
divl
sub
jns
insl
cmp
push
mov
cmp
mov
bound
ss
xor
addr16
push
cmp
dec
jmp
mov
andb
mov
push
stos
pusha
mov
lcall
data16
mov
pop
lcall
add
sub
ret
adc
jp
mov
shr
ds
paddusb
les
lret
and
jbe
ret
jg
lcall
push
rolb
rclb
xor
cs
mov
mov
dec
adc
xor
mulb
inc
daa
xchg
call
or
adc
dec
push
jo
sbb
xchg
xchg
push
mov
mov
mov
loopne
ficoms
inc
cmpsl
decb
jl
sahf
pop
mov
xor
jge
neg
leave
pop
ret
adc
aaa
sub
xchg
add
xchg
push
xor
sub
mov
dec
cmp
gs
pop
sarb
es
out
out
scas
and
lds
sub
pushf
fisubs
xchg
fcompl
stos
movsl
cmp
in
ljmp
fdivl
loopne
mov
sub
mov
mov
mov
mov
or
jno
loop
mov
repnz
xchg
cwtl
xchg
jmp
push
stc
shrl
sarb
stos
orl
xchg
jo
int
or
das
aad
jne
adc
rorb
test
stc
pop
xor
daa
test
jb
cltd
das
negb
into
leave
iret
out
movsb
push
jmp
xor
adc
mov
fdivr
jle
aas
iret
sbb
mov
jecxz
mov
lret
pop
sub
add
push
ljmp
fs
or
xor
insl
das
imulb
adc
mov
sbb
shlb
outsb
cmp
fcomps
lods
mov
xor
enter
fisttps
sub
test
cltd
scas
inc
jle
mov
inc
orl
mov
adc
xchg
jg
pop
loopne
push
xchg
cmp
hlt
lret
xchg
mov
test
outsb
ret
push
jmp
aaa
js
xchg
add
mov
ss
mov
mov
xor
xor
jmp
inc
cli
mov
sti
sub
pop
mov
dec
xchg
sbb
stos
fldcw
shll
sub
sar
shlb
test
idiv
sub
sub
inc
sahf
add
dec
pop
in
jp
sub
rcll
add
dec
loop
test
mov
jns
test
pop
mov
pop
jne
hlt
rcrl
ret
pop
incl
in
mov
inc
stos
lret
add
and
out
cmpsb
in
in
pop
or
fisubrl
inc
xchg
adc
pop
or
push
and
jp
xchg
xor
es
mulb
ljmp
jb
mov
in
xchg
test
jb
xlat
shlb
lods
lret
repnz
add
fsubr
in
ljmp
xchg
push
std
cmpsl
sbb
dec
out
enter
push
jl
xchg
jle
jg
mov
inc
add
movsb
cltd
xchg
push
enter
pop
xchg
pop
adc
xor
cmpsb
jb
insb
out
aam
ret
lea
xchg
lock
scas
pop
add
repnz
lods
rcrl
aam
sub
aaa
in
out
sti
inc
pop
inc
pop
ret
push
je
dec
fs
cs
push
xlat
out
and
sbb
movsb
rorl
xchg
les
xchg
adc
add
adc
pop
call
rclb
mov
enter
sbb
outsb
inc
repnz
loopne
data16
sub
pusha
cmp
aaa
les
adc
lock
ss
inc
imul
cwtl
daa
push
bound
aad
jnp
sahf
iret
js
sbb
jg
xchg
test
push
out
or
sbb
mov
mov
add
dec
dec
fsubl
fistpl
and
pusha
jmp
sbb
imul
int
pop
addr16
repz
fwait
mov
jecxz
jmp
mov
jne
fisttps
repnz
incb
cmpsb
mov
imul
cld
leave
push
scas
bound
mov
push
int
out
jae
xor
pop
cmp
inc
jne
out
shlb
add
or
repnz
mov
aas
inc
test
cmc
pop
fimull
and
mov
push
and
leave
lret
out
in
incb
aaa
std
orl
into
add
out
out
ret
push
jne
inc
das
or
inc
or
fisttps
jae
push
jmp
add
test
ds
cmp
lcall
mov
repnz
pusha
cmc
aaa
or
imul
je
cmp
arpl
test
inc
shr
mov
lahf
jg
mov
xchg
outsl
inc
mov
cmpsb
cmp
lret
sbb
inc
push
cld
pop
sbb
cmp
ja
shll
sub
iret
popf
je
sub
pop
inc
mov
and
mov
movsb
push
mov
jmp
fnsave
mov
mov
test
cmpsb
dec
push
or
sub
movsl
sub
cmpsl
xor
int3
cmp
pop
mov
sbb
loope
js
xchg
ljmp
aam
mov
lods
rclb
mov
mov
lock
pop
repz
mov
in
imul
jae
xor
sub
arpl
dec
xor
test
aaa
pop
movups
jbe
xor
cli
inc
punpcklbw
loope
loopne
jmp
push
fnsave
pop
pop
frstor
and
int
lods
out
mov
mov
mov
gs
loopne
pushf
xchg
push
popf
sbb
add
dec
fwait
adc
push
rcl
inc
inc
mov
out
pop
adc
lret
mov
push
inc
xchg
push
mov
sbb
imul
mov
imul
pcmpgtd
jl
add
jo
xchg
sbb
jmp
jl
int
lock
add
and
pop
lods
in
cltd
scas
test
inc
push
testl
mov
int
lret
dec
popa
in
jmp
jbe
adc
je
arpl
mov
pcmpgtw
xchg
pop
loop
push
xlat
inc
pop
add
cwtl
jae
pop
xchg
outsb
push
cltd
popa
sbb
cmp
in
cmpsl
adc
scas
rcrl
insw
ret
jne
outsb
dec
test
leave
xchg
int3
xor
mov
adc
ja
vpunpcklwd
fcompl
sub
lcall
sub
add
adc
mov
mov
pop
and
sub
add
faddl
rcrb
testb
add
loope
dec
dec
jmp
fs
push
xor
jge
pop
mov
popf
int3
jns
hlt
fldcw
xchg
or
mov
int
ficomps
call
xchg
mov
or
cmp
cmp
sub
cld
mov
xchg
xchg
cmpsl
push
push
jl
push
outsl
add
sahf
xor
mov
dec
xchg
mov
aad
mov
icebp
mov
repz
push
pusha
inc
jl
mov
sbb
mov
imul
stc
aad
nop
aad
sbb
subl
fucom
jb
fidivrl
ss
inc
xchg
mov
fmull
dec
js
shlb
pushf
pop
jl
call
out
mov
fstpt
js
iret
clc
inc
arpl
inc
and
jnp
push
lock
xchg
inc
xor
stos
add
dec
xchg
lcall
jmp
inc
xchg
pop
test
xchg
dec
loopne
out
push
jno
jge
std
jno
add
inc
sub
mov
pusha
les
fstps
add
js
mov
jno
and
pop
test
test
pop
fidivrs
shl
jmp
lcall
jecxz
xor
pop
insl
mov
xchg
add
xor
push
fs
mov
cmp
inc
push
dec
sub
pop
dec
repz
push
jbe
jno
scas
sub
push
jnp
into
adc
mov
out
sbb
jle
repz
pop
dec
popf
sub
sub
sbb
inc
rorl
push
popa
out
jecxz
or
sub
incb
clc
and
and
enter
mov
jnp
ret
push
cmp
jnp
cli
jl
xchg
into
cmpsl
sahf
dec
inc
fistpll
jmp
push
mov
cli
daa
inc
push
inc
stc
shrb
mov
flds
jb
lea
xchg
inc
push
jae
lahf
insb
lret
scas
push
fisubrl
hlt
fldl
lods
aad
and
cmpsb
fstpl
mov
mov
jecxz
xchg
cmp
pop
sub
mov
dec
mov
and
loop
cld
or
std
addr16
stc
in
dec
mov
cmp
mov
inc
in
cmp
icebp
movsl
mov
les
cmp
mov
testl
or
aas
xchg
insl
pop
clc
fstpl
xchg
in
mov
fwait
loope
leave
daa
xor
inc
repz
jecxz
mov
push
fwait
negl
xchg
out
pop
sub
jmp
xor
dec
dec
sbb
mov
mov
push
and
fsubs
xor
leave
push
push
sub
xchg
outsb
xchg
inc
sub
cmp
rcll
pop
jbe
push
fidivl
adcl
aam
cmp
lods
cmp
mov
nop
push
lods
xchg
adc
xchg
outsl
xor
sbb
aam
xchg
cli
dec
ljmp
mov
lds
dec
xchg
xchg
es
imul
jno
cmp
pop
mov
sbb
clc
or
or
push
loop
jne
cmp
rcrb
mov
movsl
bound
jns
mov
adc
pop
data16
out
lret
or
rcr
sarb
push
pop
mov
add
pusha
aad
xor
outsl
push
adc
mov
pop
push
inc
inc
imulb
int3
xchg
in
arpl
in
sub
fnstenv
adc
fisubrl
insl
roll
ret
mov
pusha
mov
mov
sub
les
gs
or
pusha
clc
pusha
loopne
icebp
leave
xor
std
ja
scas
dec
mov
filds
mov
es
stos
rcl
popa
push
das
loopne
es
pushf
orb
pop
iret
or
sar
inc
scas
and
rclb
xlat
dec
mov
sub
aam
or
inc
push
push
or
or
scas
icebp
inc
gs
cmp
xchg
je
pop
or
dec
xor
lods
adc
jle
jge
pop
mov
in
mov
movsl
dec
cmpsl
xchg
cltd
sbb
lds
dec
addr16
and
loope
arpl
fisubrl
pop
or
lret
push
jbe
sub
cwtl
dec
cmc
add
add
in
in
mov
pop
xchg
arpl
in
test
push
imul
scas
pop
rolb
imul
or
insl
outsl
ss
xchg
ret
xchg
mov
jle
repnz
jne
mov
or
push
movl
push
rol
iret
jne
xchg
out
jg
pop
pusha
es
jmp
and
mov
add
stc
dec
sub
rcll
add
sub
jg
pop
mov
js
mov
aam
jns
xor
cmp
cmpsl
sbb
or
pusha
cltd
imul
shll
sti
mov
iret
mov
mov
lret
mov
or
pop
jle
scas
dec
imull
dec
dec
xor
aad
js
inc
subl
mov
push
and
loop
mov
inc
and
push
outsl
repz
sti
add
adc
push
clc
inc
js
pop
or
sti
xor
cs
add
imul
or
push
stos
inc
inc
hlt
jmp
aas
mov
mov
in
jge
dec
out
xchg
pop
adc
xchg
je
inc
pop
sbb
jb
sub
cltd
xchg
mov
cld
jns
push
cmpsl
cmp
fsubrs
dec
enter
mov
loop
out
cmp
jb
inc
cli
iret
or
adc
push
mov
insl
pop
adc
stc
mov
dec
fdivrs
dec
cmc
sbb
inc
out
cli
out
add
loope
dec
jae
lret
cmpsb
testl
jle
nop
shrl
inc
sub
shll
and
les
imul
cmp
cwtl
jg
inc
aas
ds
int3
movsl
cmp
sub
daa
add
and
add
scas
pop
cmc
cwtl
xchg
add
fldenv
dec
cs
adc
das
mov
sti
mov
add
jae
pop
mov
mov
sbb
xchg
and
fwait
insb
jle
iret
xor
inc
bound
rep
push
scas
aas
or
and
aad
push
mov
mov
sahf
cmc
jle
inc
cli
sbb
cmc
jge
sti
cmp
les
inc
pop
arpl
fs
out
jne
mov
mov
aas
fcom
xorl
incl
in
dec
inc
je
rol
mov
sub
xlat
push
adc
in
cmpsb
inc
dec
jns
call
lods
fisttpll
lcall
cwtl
mov
lods
cmp
fmuls
push
pop
je
int3
adc
adc
loopne
mov
sbb
lea
inc
popa
mov
mov
or
lods
lods
jmp
add
cmp
dec
mov
push
mov
push
jae
push
testl
mov
sbb
pop
xor
push
cmpsb
jmp
out
mov
adc
jle
scas
cmpsl
out
stos
mov
dec
js
inc
stos
dec
mov
adc
int
inc
gs
leave
push
sbb
cmp
aas
mov
dec
sbb
daa
push
mov
mov
cs
jle
xchg
xchg
sub
mov
adc
int3
push
lahf
lret
lods
insl
fwait
cmp
push
push
gs
push
arpl
vpmadcsswd
mov
dec
es
and
dec
loope
repnz
lret
stc
std
push
or
mov
pop
pop
mov
repz
adcb
push
arpl
jge
fcmovnu
add
push
dec
pop
mov
push
arpl
dec
add
sbb
mov
adc
inc
ss
cltd
mov
sub
cli
jl
imul
inc
into
push
stos
sbb
lret
xchg
dec
outsl
push
stos
cld
repz
sub
pushf
js
dec
cs
mov
popa
cmp
rol
jmp
and
fs
jns
repz
mov
jne
and
lret
and
scas
jne
push
jb
aam
sbb
inc
sbb
mov
lahf
dec
add
ficoms
and
pop
push
push
xlat
jns
adc
pop
ja
mov
add
xor
lret
int3
out
sar
mov
mov
movsl
mov
popf
inc
incl
dec
ss
test
adc
scas
insl
sub
jle
cmp
dec
out
xchg
mov
cmpb
in
sub
and
xchg
and
cld
dec
das
add
lret
mov
and
lods
pusha
nop
or
enter
stos
add
xchg
sub
mov
fcomps
push
add
clc
push
add
mov
repnz
dec
mov
sbb
lea
pop
out
sub
aam
mov
imul
xlat
lock
insl
push
inc
and
dec
mov
es
outsl
add
push
ja
mov
mov
in
movsb
das
xor
dec
add
enter
arpl
int
mov
mov
jns
mov
mov
rcl
ret
ret
nop
mov
add
sbb
out
leave
jecxz
mov
icebp
and
jnp
pop
aaa
in
push
pop
dec
fwait
mov
mov
mov
push
mov
repnz
xor
sub
or
xchg
ret
jmp
or
xchg
das
jo
rcr
fildl
lods
movsl
je
movsb
test
add
sub
mov
pusha
inc
dec
fistpl
jmp
inc
pop
icebp
pop
xor
sub
jge
lret
dec
pop
push
les
fdivl
pop
jmp
cmpl
dec
sub
mov
scas
pop
pop
fwait
mov
sbb
push
ret
pop
jb
jne
cs
add
stos
fs
les
or
dec
imul
xor
dec
and
nop
div
fs
or
mov
ds
jl
int3
pusha
div
mov
fiaddl
inc
mov
sub
push
sbb
rcrl
or
pop
mov
enter
loope
mov
scas
ret
jle
pop
mov
stos
push
insl
sub
jle
scas
scas
enter
adc
call
rorb
xor
sbb
xor
lods
dec
rorb
jbe
ds
xchg
jbe
and
push
cmp
dec
test
daa
out
aas
push
mov
mull
add
fists
loop,pn
cmp
mov
inc
adc
pop
xor
push
pop
iret
pusha
mov
sub
vpcomd
jb
and
or
bound
jo
sarb
xor
stos
iret
leave
repnz
push
mov
pusha
stos
mov
xchg
and
mov
lock
mov
mov
lea
pop
mov
mul
lcall
inc
or
inc
cli
test
aad
stc
cmp
and
loop
ljmp
std
std
push
jae
inc
iret
jns
mov
rcl
xchg
inc
cs
aam
outsl
cwtl
xor
movsb
jg,pt
rcrb
jbe
add
and
outsl
out
in
inc
mov
xchg
and
test
arpl
jno
lods
mov
ja
push
dec
xchg
adc
notl
jecxz
and
xchg
and
pushf
lods
jl
in
pop
scas
movsb
inc
hlt
adc
and
rclb
int
xchg
adc
xor
leave
in
and
inc
ret
xchg
mov
mov
xchg
lret
les
xorb
sub
xchg
xchg
lret
jns
sahf
cwtl
pop
push
push
mov
sbb
fs
fwait
xchg
cld
or
rorl
fiadds
inc
mov
sti
in
dec
popf
inc
aam
push
test
ret
insb
xchg
add
cmpsl
adc
inc
ja
gs
sub
jns
jg
loopne
jp
cmpsl
and
aam
push
sar
ss
ss
and
mov
jg
flds
sub
int
popf
push
dec
adc
sub
cmp
pop
pop
les
scas
xlat
xlat
shl
add
popa
lods
mov
in
or
mov
lods
sbb
lahf
lock
add
imul
in
jecxz
xor
cmp
mov
test
jno
mov
aam
cmpsl
out
hlt
mov
jae
fucomip
dec
mov
repz
fcompl
pop
or
addr16
mov
into
fnsave
imul
push
pop
dec
mov
movsb
jmp
ljmp
adc
stos
xor
lcall
mov
sbb
je
clc
and
jle
push
sbb
mov
sub
stos
push
dec
sbb
pop
inc
xchg
rorl
and
sub
push
and
inc
pop
mov
cmp
rolb
mov
sub
xchg
dec
addr16
mov
push
cmp
cltd
mov
push
out
orb
inc
int
out
and
ss
imul
int3
add
lock
and
xchg
in
test
out
or
inc
lret
jl
cs
mov
push
popf
lock
stos
loope
inc
repnz
and
repnz
es
xor
out
rcrl
push
insb
scas
aad
adc
int
stos
sbb
lods
mov
mov
mov
push
nop
and
sub
imul
cmp
inc
jl
lock
repz
or
lds
or
shll
imul
inc
jl
mov
inc
js
mov
push
mov
xor
stos
test
movsl
mov
fwait
jne
dec
das
fmull
pusha
das
gs
pop
mov
sbb
adc
sbb
xchg
fsubrl
mov
gs
addps
fs
or
dec
push
sub
out
aam
xor
add
repnz
push
es
add
dec
sti
xchg
pop
and
pmaxub
xchg
bound
cmp
xor
xchg
push
mov
lahf
or
mov
js
popf
and
mov
in
jb
lock
pop
lock
cld
jl
xchg
push
repnz
in
sti
arpl
sbb
jmp
fs
jb
push
sti
std
inc
push
mov
push
and
jge
jg
jp
cmp
xorb
idivb
xor
ds
sahf
test
push
sub
subl
and
lock
cs
ret
sbb
jg
sbb
addl
int3
aam
dec
add
push
mov
lods
out
sahf
push
mov
jnp
into
fidivs
fsts
aad
aas
insl
push
pushf
leave
rorb
jg
loope
pop
inc
push
mov
mov
or
jno
ror
repnz
jge
sub
es
fsubrs
cld
sbb
jmp
add
inc
mov
or
pop
fmul
pop
es
shlb
inc
lret
inc
jbe
adc
icebp
rcr
outsl
adc
xor
out
sbb
jl
faddl
mov
cmp
push
push
jno
pop
push
movl
je,pn
incl
daa
mov
int3
out
scas
rorb
jg
xchg
sub
icebp
mov
sar
cltd
dec
sbb
pushf
lcall
sbb
cli
mov
sub
xchg
push
fists
loop
sbbb
std
pusha
xchg
mov
and
add
fadd
decb
shll
adc
xor
andb
lds
cli
adc
pusha
mov
cmp
xchg
inc
cmp
fistpll
xchg
dec
in
sbb
mov
xchg
rclb
pop
je
and
cwtl
push
loopne
sub
or
loop
testl
sbb
lret
or
mov
fs
shlb
jno
sahf
jne
mov
and
or
pop
mov
addr16
fbld
jae
int
cld
jp
in
into
mov
or
movsl
or
mov
cmpsl
imulb
mov
dec
jle
in
mov
stos
mov
adc
cmp
xchg
scas
cvtpi2ps
sahf
es
dec
mov
mov
push
pop
pusha
fs
in
sarb
cmc
pop
loope
gs
cli
rcll
jle
sbb
loope
inc
fldt
or
shll
mov
cmpsl
jns
mov
mov
inc
push
fstpt
lcall
enter
loop
dec
mov
jns
loope
jbe
xor
inc
xchg
jnp
sbb
in
add
lcall
cmp
cmp
push
lods
sub
mov
fsubr
add
mov
into
push
enter
add
inc
xchg
pop
lds
cmp
jg
lcall
adc
jo
enter
cmp
cmpsl
das
popa
orl
xchg
in
mov
pop
mov
into
lds
push
and
mov
xchg
cmpsl
outsl
jg
sub
mov
fisubs
xchg
sbb
sbb
jmp
cli
and
jo
aaa
mov
and
ds
cld
jle
jae
arpl
shl
pop
repz
pop
movsb
mov
cmp
dec
stos
sbb
outsb
fwait
adcb
cmp
sbb
adcl
call
fmull
dec
fs
xor
stos
imul
aas
dec
aaa
and
mov
cli
rcr
das
shll
cmp
jne
mov
jne
xor
lock
and
fisttpll
jae
mov
mov
enter
mov
fiaddl
scas
xor
addb
stc
cmp
outsb
and
out
dec
and
dec
mov
push
xchg
testb
cmpsb
lds
xchg
mov
mov
add
xchg
repnz
outsl
push
jbe
enter
sub
cmp
mov
mov
xor
fwait
cmpsb
orl
xchg
loopne
jne
fnstsw
test
out
lcall
arpl
push
fldcw
mov
pop
jnp
fmuls
cmp
push
cmc
cli
call
lcallw
shl
sub
push
dec
dec
out
and
das
dec
mov
mov
fcoms
mov
push
leave
cmp
imul
pop
fbstp
movb
jae
xchg
sti
call
or
mov
xchg
fisttpll
mov
insb
cmp
loope
xlat
in
add
not
jecxz
sbb
mov
xlat
pusha
out
xchg
jnp
dec
xor
lods
push
int3
jl
sub
subb
xor
dec
sub
es
stc
insb
push
in
xor
mov
adc
popf
testb
dec
mov
shl
jne
cmp
push
popa
cmp
out
xchg
aam
mov
out
mov
mov
push
pop
xor
xchg
imul
in
xor
pop
jbe
push
sti
pop
jge
mov
mov
xchg
inc
imul
mov
and
add
pusha
and
clc
cmp
jnp
test
xor
push
aaa
decl
cmp
add
jl
push
jl
aad
sub
adc
fldt
jg
and
stos
and
aam
lds
push
test
or
mov
out
loop
adc
jmp
or
cld
or
cmp
sbb
sbbb
fdivl
push
js
jno
nop
mov
les
lea
push
lods
mov
inc
mov
loopne
nop
dec
cmpsb
dec
mov
add
sub
dec
xor
mov
jp
mov
and
movsb
loopne
push
mov
jle
mov
enter
inc
push
pop
std
out
lock
push
adc
push
lcall
sub
add
popf
and
icebp
sub
add
std
fidivs
movsb
popa
sbb
pop
push
mov
movaps
repnz
mov
xor
inc
or
lods
add
xor
inc
jno
enter
repz
enter
add
mov
adc
rcr
icebp
fucomip
pusha
xchg
or
pop
cwtl
inc
pop
mov
divb
js
loop
inc
into
ret
pop
push
iret
push
and
dec
dec
cmpsl
xor
mov
push
sub
loope
mov
rorb
xchg
fisttpl
mov
inc
add
test
pushf
jle
gs
dec
cmp
fcom
cs
in
mov
push
dec
inc
mov
test
push
pop
pop
insb
push
jae
subb
inc
jp
mov
ss
xchg
pop
lock
lods
cmp
fsubrl
imul
cld
cld
xor
cmp
mov
fnsave
mov
popa
outsb
dec
cmpsl
pushf
std
loopne
mov
mov
cwtl
sbb
cmp
inc
sbb
sahf
mov
xchg
jo
add
pop
in
pop
fstl
mov
add
ss
bound
call
sub
add
push
and
xchg
mov
repnz
pop
je
popa
pop
cmp
push
sahf
adcb
xchg
insb
pushf
push
inc
cmp
push
add
sub
popf
mov
jbe
push
iret
push
imul
xor
sbb
mov
mov
sub
mov
loop
sub
shr
in
iret
pop
or
jae
push
jns
test
call
push
loope
inc
mov
dec
cwtl
pusha
xchg
data16
test
dec
ret
shrl
in
and
loope
shll
xchg
cmp
mov
or
mov
xchg
test
mov
shrl
adc
sbb
add
lcall
xchg
imul
and
dec
daa
xchg
popa
out
test
pop
push
mov
adc
das
add
movsl
adc
out
xor
icebp
push
jmp
das
fdivp
pop
mov
push
or
inc
mov
and
ljmp
pop
pusha
sahf
pop
lods
xchg
pushf
repnz
ljmp
xchg
ret
pop
mov
mov
cmp
dec
mov
jp
dec
pop
invd
out
out
adc
sub
jp
bound
test
cli
shl
fldcw
mov
je
push
push
pop
mov
leave
inc
mov
inc
xchg
out
loopne
sub
adc
stos
sbb
js
and
out
add
mov
not
gs
outsl
shrl
cmc
push
lods
inc
add
sub
pushf
mov
jg
imul
jle
xorl
in
jne
cmp
mov
imul
mov
je
fisubs
push
out
fistpl
cmp
and
ret
imul
setns
insb
hlt
sbb
push
sub
add
jecxz
xchg
and
ljmp
sbb
mov
cwtl
pop
xchg
ss
push
push
jmp
in
rol
iret
xor
jb
mov
xchg
add
bnd
test
inc
clc
inc
divb
xchg
movsl
cmpsb
je
and
enter
fwait
adc
push
push
inc
xchg
push
stos
inc
mov
add
sub
jb
push
mov
retw
cwtl
notb
push
mov
and
movsl
dec
lock
jnp
into
hlt
arpl
out
les
lds
xlat
jmp
adc
push
adc
insl
push
push
popf
ja
jle
ss
add
add
sbb
adc
ja
orl
dec
pop
inc
pop
adc
push
push
mov
sbb
scas
mov
shrl
xlat
push
rcrb
gs
sbb
mov
data16
xchg
sub
pusha
or
lcall
inc
cltd
in
push
dec
mov
js
fmuls
dec
sbbl
mov
loope
adc
test
sub
outsl
sub
mov
inc
scas
leave
int3
lock
les
xchg
inc
in
roll
push
outsl
cmpsb
xchg
add
in
cmpl
mov
arpl
mov
jmp
movl
mov
js
xchg
sti
inc
lret
lock
cld
pushf
add
mov
or
cmp
das
sbb
fstps
push
xlat
xor
fwait
jge
xlat
xchg
lods
sbb
test
mov
repz
xchg
pop
and
sbb
xchg
rorb
mov
jl
mov
mov
jge
mov
push
js
sub
inc
xor
and
push
mov
outsb
out
sub
shlb
push
or
ss
inc
jns
push
xchg
jno,pn
dec
in
lret
jno
lret
sbb
push
inc
ffreep
mov
pusha
add
daa
adc
imul
xchg
sbb
fs
mov
pop
mov
insb
xchg
jge
enter
and
cld
pusha
popa
and
dec
jecxz
pop
pusha
push
in
aas
stos
mov
repnz
xchg
iret
imul
or
insb
mov
jb
push
sub
negl
test
push
mov
inc
mov
or
jns
jae
push
cwtl
adc
pop
test
cvtpi2ps
jmp
or
cmpsb
ja
lahf
jnp
mov
sub
es
or
jecxz
jne
outsb
fs
es
dec
ficomps
cmp
aas
fcomps
add
sahf
jg
jge
dec
mov
sub
push
call
pushf
add
ret
repz
xchg
popa
call
or
or
cmc
cmpb
sahf
loop
mov
cmp
pushf
jmp
pop
jecxz
pop
stos
jnp
rclb
outsl
movsb
imull
scas
xor
jp
shlb
xchg
loope
push
repz
pop
xchg
mov
imul
fidivs
sbb
loop
or
imul
test
jl
shr
lods
rcrb
or
adc
fsubl
insl
hlt
adc
cmp
mov
add
or
pop
dec
and
and
and
loope
sti
les
incb
bound
test
rclb
jg
mov
in
sbb
stc
cmp
adc
pop
and
sub
cmpsb
push
jns
pop
sbb
loop
push
hlt
push
xlat
lods
mov
stos
test
inc
jl
jp
jl
je
xor
fstpl
test
repz
mov
loop
arpl
das
sub
mov
mov
xlat
pop
push
sbb
out
testl
rcl
aad
mov
cmp
adc
clc
xor
jmp
mov
mov
stos
int
dec
sti
lods
in
ss
ret
fisubs
and
out
fwait
arpl
cli
scas
ljmp
cwtl
dec
add
mov
repz
aaa
xchg
mov
cmp
hlt
pop
mov
pushf
data16
push
mov
shr
mov
dec
into
popf
dec
pop
mov
xchg
sub
mov
sub
mov
aam
pop
pop
aas
push
xchg
ja
mov
push
jno
mov
ret
xchg
xor
mov
dec
in
adc
adc
dec
daa
stos
push
mov
fdivs
cmpsl
sbb
push
lret
imul
jno
rcll
push
add
aad
push
pop
xor
add
xor
out
lret
sbb
push
dec
test
lret
xchg
cmp
imul
aas
add
mov
or
outsb
lret
out
js
add
dec
xor
jnp
and
and
jl
add
popa
arpl
ljmp
mov
in
xchg
test
js
scas
test
dec
push
or
push
sbb
loopne
std
dec
mov
fisttpl
shlb
jmp
cmc
cwtl
addr16
into
pop
mov
pop
xchg
pushf
int3
fwait
rcrl
mov
scas
lea
int3
leave
stos
sbbl
and
jp
jo
xchg
dec
popf
aas
es
jl
adc
jg
and
cli
in
and
stc
mov
das
data16
cltd
daa
push
sub
addb
and
dec
jmp
xchg
loop
fsubrp
mov
sbb
push
in
bound
mov
pop
scas
out
inc
xchg
mov
stos
and
push
cmp
or
cmp
or
addr16
adcl
mov
movsb
fldl
push
add
sub
mov
popa
ljmp
test
lret
pop
adc
jl
mov
mov
movsl
enter
sbb
dec
cmp
jo
xchg
jl,pt
cmpsl
mov
lea
out
call
dec
pop
outsl
cmpsb
xor
pop
loopne
test
adc
lea
mov
pop
xchg
bound
sbb
jnp
out
insb
mov
mov
or
cmp
and
in
adc
cmp
mov
mov
cmpsl
add
loop
outsb
add
xchg
mov
out
mov
xchg
or
xchg
ror
push
pop
data16
sbb
and
into
clc
and
lods
dec
or
push
jnp
imul
call
mov
jo
mov
scas
and
mov
mov
loope
dec
sbb
dec
lahf
mov
mov
repnz
adc
dec
lar
mov
cld
arpl
bnd
adc
add
and
sarl
pop
test
gs
lds
mov
rorb
test
jecxz
ret
loop
xchg
inc
rorb
mov
sbb
add
into
sub
mov
cmp
pop
lods
in
lret
xchg
jbe
mov
push
or
std
inc
outsl
insl
pop
sub
xor
or
imul
sub
mov
in
push
sbb
pop
jp
std
int3
push
fsubl
dec
or
enter
into
mov
add
jo
jnp
and
xor
out
dec
movsl
ljmp
mov
inc
cmp
xchg
lock
push
insl
movsl
and
out
enter
mov
xchg
inc
repz
mov
xchg
mov
xorb
sbb
lret
inc
xchg
pop
aad
xor
aaa
arpl
ret
jmp
adc
jle
repz
ds
sbb
pop
sbb
sbb
shll
cli
jns
insb
jl
sbb
sbb
or
xor
mov
add
arpl
cltd
cmp
cld
mov
xchg
push
sub
sub
clc
push
pushf
dec
leave
pop
mov
cmc
push
mov
stos
mov
mov
test
xchg
int3
repnz
int
xor
dec
icebp
mov
inc
cwtl
stos
sbb
in
pop
dec
in
inc
stos
inc
fmull
add
jbe
iret
adc
dec
test
sub
sub
movsl
dec
sbb
imul
negl
setp
push
int
loope
jmp
pop
mov
sbb
orb
loopne
mov
jmp
pop
push
fimuls
mov
dec
adc
es
xor
mov
adc
push
dec
cmpsl
sbb
pusha
es
adc
xor
xchg
mov
lahf
cmp
add
mov
inc
pop
stc
nop
sahf
repnz
ret
pop
stos
fs
inc
iret
and
mov
push
jnp
rcl
es
arpl
stos
test
movsb
incl
cmp
fadd
aas
pop
stc
popa
xchg
mov
mov
lods
cmp
lock
cmp
repnz
lods
mov
scas
outsb
iret
icebp
mov
aas
loop
shr
mov
mov
mov
mov
and
leave
dec
sahf
rolb
into
mov
or
push
mov
loope
mov
push
xor
mov
or
popf
insb
sub
mov
inc
loope
adc
out
outsl
jecxz
sti
inc
sbb
scas
data16
cwtl
sahf
test
pushf
jl
aam
dec
pop
cmpsl
cmc
ja
fiaddl
rcr
aad
xchg
jg
outsl
pop
lahf
or
or
and
lcall
in
dec
js
cltd
xor
inc
push
sbb
inc
inc
sub
sbbb
jnp
pop
aam
xor
dec
inc
pop
call
push
jp
push
js
push
push
aas
dec
fwait
mov
testl
and
sub
inc
push
cmc
cld
pop
cmove
add
dec
out
adc
pop
lret
loop
and
dec
add
insb
addr16
mov
insb
cmp
dec
mov
leave
push
subb
dec
pop
cld
jg
inc
push
inc
jmp
stos
popa
pop
jge
out
mov
insb
fistpll
and
in
shll
mov
xchg
into
out
jnp
mov
stos
or
inc
and
mov
iret
ds
pop
in
popf
cmp
add
push
sub
fs
pop
leave
push
mov
ss
pop
cmp
fs
addr16
in
shlb
mov
shlb
ds
ret
jecxz
int3
loopne
xor
xchg
ret
lahf
pusha
arpl
rorl
aas
lret
mov
mov
lcall
test
xor
pop
pop
popf
fimull
pop
cltd
jmp
cmc
mov
sbb
sub
xchg
dec
orb
enter
aas
sub
fsubl
test
popf
stos
out
mov
pop
xor
loop
or
mov
sbb
dec
imul
adcl
sbb
sbb
dec
lds
data16
aaa
aas
fcoms
fldenv
adc
add
mov
push
or
xchg
and
repz
repz
lods
mov
mov
aad
add
cmpsl
inc
mov
lods
out
in
dec
dec
jae
cld
fisubl
push
inc
outsl
ret
out
inc
iret
add
push
jno
imulb
mov
loope
je
add
mov
cmp
sbb
push
mov
loopne
cli
or
mov
sti
lds
sbb
imul
fnstsw
loop
inc
hlt
and
int
fcomps
cltd
push
mov
das
hlt
push
mov
cs
repz
push
cmp
jbe
cmp
or
mov
sub
hlt
adc
sbbl
pop
jp
test
test
rorl
aaa
jbe
xchg
dec
adc
hlt
cmp
call
gs
int3
bound
add
jo
adc
fwait
mov
add
add
stos
and
pop
jo
xor
pop
and
inc
fidivs
jno
mov
or
loop
movsb
movsl
lods
xor
pusha
jecxz
add
or
lea
lahf
jne
out
jno
call
fnstenv
ret
mov
stos
add
movmskps
je
outsb
cmp
inc
ret
or
fnstcw
sbbl
adc
dec
add
es
out
icebp
push
dec
test
add
out
imul
sbb
ljmp
push
ja
pushf
stc
insl
faddl
enter
pusha
dec
push
not
lock
clc
xlat
or
cltd
mov
jmp
xchg
cmpsb
out
inc
clc
pop
ret
cs
push
push
aam
push
mov
push
popf
arpl
mov
add
pushl
and
cmp
pop
and
mov
cmc
mov
mov
mov
cmp
popa
sub
lret
sarb
ds
shl
and
leave
adc
loopne
push
or
mov
pop
add
xor
xor
sbb
aam
ds
ja
inc
rcpps
mov
jmp
movsl
jp
add
cld
leave
inc
gs
or
jmp
xchg
popa
je
outsl
aam
jbe
mull
js
arpl
rorb
jno
outsl
test
pop
mov
cmp
maskmovq
notl
std
cmp
sahf
imul
mov
sub
sub
ficoml
negb
ja
and
nop
out
cltd
jg
adc
and
push
xchg
sahf
adc
rol
mov
pop
ja
adc
pop
stc
push
mov
add
add
inc
fwait
fwait
mov
or
insl
in
fidivrs
movsl
inc
dec
das
outsb
sbb
push
aam
ret
pusha
in
mov
xlat
mov
hlt
lcall
fwait
xlat
fwait
jp
pop
sbb
int
fisubrs
je
lcall
and
pop
rcrb
cmc
pop
mov
or
jae
xchg
dec
adc
mov
enter
fistpl
cmp
flds
adc
in
dec
lock
in
add
in
lret
and
pop
xchg
rcrb
cmc
lock
and
sbb
push
rol
mov
shlb
mov
dec
stc
lret
clc
ret
xchg
rorl
loop
pop
roll
pop
rcrb
jp
fimull
xor
jnp
or
rcr
mov
out
inc
cli
cmp
incb
neg
adc
bound
fidivrs
adc
sub
shrb
push
dec
mov
pop
je
push
in
loopne
push
das
pop
iret
jb
sbb
sbb
js
dec
mov
xlat
cmpsl
xorl
movsl
bswap
imul
hlt
xchg
sbb
rdpmc
cmc
adc
lods
sub
sub
xor
mov
push
and
in
insb
adc
notl
sti
repnz
dec
or
sbb
test
mov
jmp
jno
or
popa
es
xchg
scas
mov
xchg
daa
mov
push
push
inc
icebp
jns
ds
mov
in
scas
or
ljmp
imul
adc
lea
stos
cwtl
or
mov
scas
loop
loopne
cmp
mov
sub
xchg
fstpt
hlt
xchg
cmp
pop
arpl
adc
std
mov
add
mov
jp
push
mov
sbb
std
cmp
lret
xchg
idivb
sahf
xchg
aaa
xchg
sbb
cmc
jecxz
cltd
push
adc
mov
jne
call
jb
cmp
ret
push
gs
fidivrs
add
aad
ss
bound
cmp
repnz
adc
hlt
ds
push
rcrb
aas
mov
cmp
or
xchg
push
add
jmp
inc
shlb
push
call
mov
iret
add
fwait
mov
lret
int3
dec
mov
pop
mov
jle
dec
cmp
dec
scas
adc
pop
cmp
addr16
popa
xor
ret
ljmp
dec
fistpll
sbb
push
ret
lahf
imul
and
int
dec
dec
sbb
in
cmc
bound
or
shlb
sbb
push
sbb
sbbb
inc
dec
insl
fwait
jbe
jno
std
sbb
cmc
or
lret
pop
mov
jo
xor
fsubrs
call
push
mov
inc
dec
cmp
sbb
push
jno
repz
cmpsl
iret
popa
xor
fisubl
aam
cmp
mov
jmp
adc
pop
pushf
aaa
xchg
push
shrb
adc
rcll
es
outsb
pop
xchg
shlb
sbb
fs
mov
xchg
xchg
std
and
push
addr16
inc
mov
pop
jecxz
adc
push
jne
sbb
and
pop
icebp
jbe
xchg
jle
icebp
dec
shll
or
push
jecxz
adc
mov
sub
inc
sti
or
mov
add
xor
sub
lcall
cmp
sub
mov
fcmovne
mov
cmp
inc
pop
idivl
inc
call
js
pop
and
xor
testl
inc
cmpsb
add
cmc
in
fcoms
rorl
jns
roll
mov
cwtl
outsb
mov
sti
dec
pop
sub
in
sbb
pop
fisubrl
lret
push
inc
aas
mov
mov
stc
add
pop
into
push
test
stos
jnp
push
orb
je
mov
fadds
pop
sbb
dec
xchg
inc
mov
mov
jne
push
push
test
test
mov
mov
ds
cli
in
mov
add
xor
jnp
fdivs
sahf
aam
mov
or
out
xor
mov
pop
dec
mov
push
and
xchg
addl
push
mov
rclb
test
out
movsl
push
in
mov
pushf
rcrb
sbb
push
or
mov
cmp
in
inc
orl
adc
sub
test
mov
les
sub
add
mov
cmpb
hlt
shl
cmpb
inc
leave
cld
xchg
mov
loope
jge
loop
pop
out
xchg
sub
push
jp
int3
je
stos
mov
add
ret
test
test
enter
ficoms
ja
out
sbb
push
push
mov
or
aam
into
cmc
push
icebp
sahf
jne
mov
mov
lods
rcr
xchg
scas
jmp
test
clc
mov
mov
xor
mov
mov
stc
addr16
sahf
and
sbb
sbb
dec
inc
xchg
dec
inc
fucomp
addr16
add
add
push
scas
and
dec
shlb
inc
sub
pop
push
jle
sub
cmp
ss
adc
outsb
dec
loop
imul
hlt
jl
dec
xrelease
call
sub
fsubs
outsb
or
inc
leave
nop
out
pusha
jge
dec
in
shlb
cltd
mov
scas
fsubrl
xor
push
mov
ret
jnp
ret
inc
mov
add
push
mov
negb
fs
dec
mov
sbb
sbb
dec
mov
mov
adc
mov
dec
pop
pop
jmp
lahf
push
adc
sbb
mov
mov
je
and
lods
repz
pop
ret
inc
fsubrl
stos
negl
stos
movsb
in
sub
push
fwait
enter
mov
pushf
inc
test
shl
mov
inc
sarb
xchg
inc
jecxz
push
int
divl
mov
test
stos
cmp
outsb
or
jecxz
sahf
filds
inc
mov
ret
pop
dec
jns
or
lahf
push
lahf
inc
cmp
xchg
sahf
pop
push
mov
out
arpl
addr16
or
cmc
outsb
rorb
cmpsb
cmpsl
add
das
ja
out
test
dec
push
js
inc
test
mov
imul
mov
or
xchg
cmp
adc
repz
inc
or
notb
and
and
push
xor
mov
leave
lea
int
leave
ret
popa
cld
outsl
sahf
fisubl
ret
mov
sbb
sub
je
lahf
xchg
pushaw
mov
xor
out
shll
xchg
xchg
dec
js
adc
jne
push
mov
adc
cmp
push
mov
rol
int
enter
dec
add
push
icebp
lea
aam
popl
mov
or
popf
mov
mov
test
pop
jmp
and
cmpsl
mov
loopne
xchg
adc
psrld
inc
lret
mov
dec
js
inc
cmp
mov
mov
pop
pop
in
shr
lret
fnstcw
sbb
cmp
iret
loopne
sbb
stc
sbb
lock
daa
enter
int
cmc
sub
adc
xor
mov
clc
jbe
lds
inc
xlat
pop
adc
ret
ja
sbb
enter
add
pop
mov
add
mov
xor
stos
add
jno
shrb
push
rorl
mov
pop
insl
sub
nop
rclb
pop
in
push
push
pslld
pop
mov
insl
inc
adc
movsl
ja
mov
lcall
scas
jns
fadds
jmp
dec
dec
push
pop
call
and
popa
jb
imul
decl
je
call
push
cwtl
mov
es
fmuls
loopne
sbb
xor
cmp
or
xchg
pop
inc
mov
xchg
imul
shrb
push
mov
nop
or
dec
rclb
imul
cmp
in
sbb
xor
mov
push
lret
mov
cmp
cmp
in
pop
adc
adc
in
jae
xchg
icebp
fisttpl
pusha
add
mov
push
imul
int
movsb
xchg
and
outsl
xor
mov
xchg
movsl
pop
lcall
mov
movb
push
lock
in
inc
sbb
push
aas
divb
sub
or
cmp
cmp
in
test
or
add
jg
xor
or
cmp
mov
xchg
out
fucomi
popa
inc
inc
inc
scas
dec
test
xor
sar
push
fidivrs
push
adc
lahf
roll
cmp
shrd
or
jbe
mov
inc
sbb
enter
dec
mov
adc
inc
dec
data16
or
lods
fidivrs
js
fbstp
repz
push
mov
shlb
mov
push
mov
jnp
dec
outsb
dec
mov
jl
sub
cld
sbb
je
mov
sti
mov
js
test
cmp
mov
and
mov
push
xor
mov
lret
and
repnz
or
pop
lret
popf
jno
adc
ror
jo
mov
or
dec
xor
jnp
ret
add
fadds
mov
cmp
jl
mov
sbb
adc
je
sbb
mov
aad
push
mov
hlt
jecxz
dec
sti
adc
ficoml
inc
dec
les
test
rorl
lea
xchg
stos
xchg
icebp
outsb
inc
lcall
fwait
test
stc
inc
fmuls
sub
mov
inc
lods
mov
test
fxch
adc
sbb
fs
mov
aas
lea
out
xchg
cmp
test
add
fsubs
aad
pop
imul
clc
and
and
negb
daa
inc
imul
sti
sbb
fbld
push
add
jmp
mov
cwtl
cmp
popf
cli
mov
cmp
in
mov
mov
mov
and
sbb
addr16
jnp
fdivrs
lret
out
adc
mov
jecxz
sbb
popl
push
cwtl
lds
cmc
sub
icebp
pop
mov
mov
jge
jnp
dec
inc
test
imul
and
std
inc
inc
imul
sbb
xchg
stc
add
sbb
mov
ljmp
sbb
cld
incl
mov
das
dec
jbe
sti
dec
out
shll
lock
jo
decl
cld
adc
ret
repz
jmp
loope
sub
sub
testb
gs
inc
push
push
int3
dec
pop
int3
jnp
in
fstl
mov
xchg
cmp
popf
adc
inc
outsl
sub
inc
xor
idivl
ret
sub
add
mov
pop
stos
pop
popa
push
mov
mov
cld
repz
loope,pn
lods
popf
and
ret
jne
lahf
cltd
ds
out
pop
jg
lock
xchg
arpl
movsl
imul
fistpll
xor
push
jnp
cmpsl
cmp
cs
add
cmp
insl
and
mov
jl
outsl
pop
mov
or
sub
sti
sahf
jp
mov
cmpsl
cltd
retw
sbb
int
and
push
sbb
push
jns
movsb
lods
jne
adc
in
fsts
cmp
cmp
popf
shll
xor
int
iret
xchg
add
int
enter
loopne
jge
ret
mov
xor
xchg
xor
add
and
inc
mov
or
mov
or
xor
adc
clc
mov
data16
scas
fnstcw
pushf
pop
dec
fidivrl
xorl
pushf
daa
xchg
push
and
js
push
push
mov
jp
mov
jae
sbb
inc
out
scas
xchg
sbb
mov
lahf
movsb
push
enter
mov
test
jb
sub
jno
pop
push
xchg
push
or
push
imull
imull
movsl
mov
mov
ds
movsl
xlat
xor
popf
nop
pop
rol
inc
mov
inc
addr16
cmpsl
jle
mov
fs
std
pop
loopne
xchg
mov
jmp
pop
sub
ret
leave
rclb
inc
loop
test
sub
ret
sub
mov
aaa
mov
adc
ss
jbe
sub
rcll
divb
and
mov
mov
push
push
xlat
mov
mov
fwait
mov
idivb
and
test
scas
jb
cltd
mov
loop
jns
pop
roll
jl
adc
push
or
out
jp
test
enter
adc
push
inc
pop
xchg
popa
lahf
into
mov
add
cmp
addr16
inc
pop
push
mov
jne
mov
ret
jmp
fidivs
add
cmpsl
mov
mov
sti
divb
xchg
pop
mov
inc
xorl
and
pop
fimuls
cmp
mov
dec
lcall
jae
divl
test
push
jbe
mov
sub
mov
pusha
sub
loop
xchg
ds
pushf
inc
xchg
lods
ljmp
xor
aad
jl
stos
fs
bnd
int3
test
jb
dec
cld
scas
lds
jns
js
out
mov
push
cmp
mov
push
or
jmp
xchg
aas
push
xchg
sub
lods
push
adc
int3
fisttpl
mov
pop
sbb
cli
mov
inc
popf
lret
cmp
sub
fisttpll
jmp
je
aas
test
stos
lret
adc
sti
aaa
fdivrs
out
xchg
out
das
loopne
les
adc
int3
rcll
cmpsl
lods
cmp
pop
xor
jmp
in
mov
and
or
in
pop
or
lret
mov
sub
mov
cld
pop
fmuls
inc
and
ss
mov
jle
cmp
imul
sti
loop
xchg
sub
mov
mov
ret
sub
mov
xor
testl
fistl
xchg
fdivr
bound
jl
push
pop
or
mov
loope
lods
mov
scas
mov
cmp
jmp
inc
sub
repz
loope
das
fstl
shll
xchg
mov
ret
shr
mov
push
popa
mov
xor
jnp
jg
pop
mov
adc
add
lahf
or
das
push
icebp
or
mov
leave
daa
inc
pop
in
rcr
mov
cltd
mov
lea
or
lods
jns
into
out
pop
xchg
fcoms
outsl
mov
fldt
pop
fidivrs
mull
mov
sbb
loop
aaa
cmp
insl
mov
out
jmp
mov
pop
dec
mov
sub
or
std
cmp
xlat
inc
cmpsb
pop
aam
je
repnz
outsb
pop
push
andl
jecxz,pn
jb
leave
jecxz
jno
ret
xchg
ret
ja
cli
add
or
xchg
icebp
push
int
pop
dec
movsb
dec
inc
sbb
add
lods
popa
mov
mov
mov
loopne
pop
jnp
pop
pop
lods
aam
lcall
and
and
movsl
shrb
fisubrl
rclb
lret
mov
mov
sub
add
lods
pop
sbb
inc
sub
mov
adc
movl
mov
dec
jmp
push
and
cmp
jle
inc
push
push
mov
fisubs
outsl
pop
sub
jl
xor
repnz
mov
adcb
mov
dec
ja
in
jnp
outsl
lods
paddsw
pop
pop
inc
loopne
mov
dec
imul
push
scas
dec
inc
lea
jl
cli
push
mov
mov
cmp
mov
dec
dec
inc
xor
cwtl
int
leave
or
sub
std
and
adc
ss
scas
enter
ds
add
xchg
cs
clc
jbe
insl
push
xchg
and
sbb
sbb
ja
mov
mov
adc
mov
dec
lods
sbb
fwait
dec
mov
pop
hlt
jle,pt
imul
fisubs
and
mov
and
mov
addl
enter
adc
mov
ds
sbb
ficompl
pop
dec
push
add
xchg
cmp
lret
xchg
inc
jae
cmp
scas
gs
push
cli
pop
push
pop
out
cmp
mov
push
and
dec
enter
ss
ds
lret
lret
cmp
inc
xor
mov
adc
out
inc
in
mov
dec
repnz
mov
push
jne
cld
out
push
jb
inc
fxtract
shll
pop
stc
xor
push
pushf
in
add
pop
std
enter
js
jo
js
in
or
xor
xchg
add
cmc
xor
mov
test
push
call
mov
mov
mov
es
pop
and
adc
popf
cmp
sub
loope
mov
ds
jmp
xchg
sub
mov
sbb
pop
push
jmp
jbe
dec
add
mov
pop
decb
push
inc
add
push
adc
aad
jp
push
mov
fstps
pop
push
mov
add
sbb
xchg
jae
jb
pavgb
sub
adc
aam
aam
icebp
adc
inc
sar
mov
add
loop
bound
adc
inc
ljmp
clc
mov
cvtdq2ps
xor
adc
jno
xchg
jecxz
jp
inc
lds
mov
sbb
mov
mov
fwait
repz
add
mov
sahf
and
out
addl
movsb
cmp
test
hlt
jp
stos
out
iret
pop
imul
xchg
dec
sub
nop
inc
idivb
xor
sbb
fwait
andb
mov
or
das
pop
jl
sti
adc
leave
pushf
mov
inc
and
pop
aas
pop
outsl
aas
int
mov
shl
cmp
fdivr
subb
inc
mov
mov
and
aad
mov
rorb
stos
cmc
mov
ja
das
loopne
xor
and
pop
xchg
push
push
cli
push
mull
outsb
jo
nop
jl
jmp
fcmovnu
shll
mov
mov
inc
popa
adc
and
inc
push
aad
int3
jne
xor
enter
jo
push
and
addb
shlb
das
jbe
ds
nop
adc
pop
stc
jl
jp
inc
cmpsl
cmp
cmp
jecxz
in
and
mov
lds
out
jecxz
in
push
or
jns
sbb
bound
movsb
or
xor
scas
adc
xchg
mov
xchg
sbb
nop
fmul
ds
push
dec
test
cmpsb
mov
cwtl
push
cs
mov
addr16
pop
mov
jle
cmc
fists
data16
pushf
psubw
push
cmc
outsl
jbe
loope
jns
or
or
ljmp
cmp
adc
push
push
mov
push
pop
enter
xchg
mov
and
cli
push
stos
cmp
cmp
cmc
cwtl
pop
xchg
mov
adc
ret
mov
les
push
pop
jl
in
xor
xchg
int3
lcall
mov
jg
jns
lcall
arpl
xlat
ret
in
cs
sarb
loop
inc
or
cmp
add
and
xchg
cwtl
outsl
pop
or
enter
and
ret
pop
pop
dec
cmp
in
mov
sub
pop
jo
sbb
xor
xchg
std
orl
stos
sbb
sub
dec
pop
or
scas
mov
sub
aam
test
sub
xor
in
mov
ja
and
addr16
pop
add
push
add
dec
inc
popa
sti
xchg
push
mov
xchg
push
stc
pusha
mov
sub
lret
cmp
pop
mov
out
popa
jp
int3
cld
sbb
scas
jp
pop
je
dec
jae
mov
sub
orb
mov
mov
fdiv
push
cmc
push
cmp
or
mov
fnstsw
add
and
outsb
jle
daa
fmul
out
fmull
inc
leave
out
jg
pusha
cli
jno
mov
xor
lcall
jnp
les
or
loop
outsb
nop
sbb
stc
gs
ss
sbb
and
cmpsl
es
adc
daa
push
out
mov
adc
out
hlt
xor
aas
pushf
data16
or
aad
jecxz
pop
mov
adc
in
mov
cmp
out
out
fisubrs
into
jl
inc
test
clc
cmp
cmp
xor
adc
enter
sahf
xchg
fistpl
mulb
cmpsb
mov
sbb
out
int3
mov
dec
xchg
jb
dec
fcmovnb
cmp
jmp
jecxz
out
inc
sub
or
push
push
adc
imul
mov
inc
xor
mov
repz
les
pop
stos
cwtl
jne
jne
movsb
flds
aas
mov
adc
lods
jle,pn
test
xlat
les
std
jle
iret
rcr
inc
out
out
jne
jp
insb
js
sub
fists
push
outsl
mov
icebp
mov
aas
and
sub
inc
mov
jmp
add
xor
ja
mov
bound
fcomi
add
jmp
cmp
dec
imul
mov
cli
push
test
pop
sahf
adc
cmp
cmp
in
fdiv
cmpsb
stc
in
sbb
push
call
push
jge
hlt
or
lods
jb
sub
push
lods
aas
outsb
jge
sub
xor
mov
enter
jp
lahf
rclb
test
fdivrl
call
call
int3
or
daa
lods
adc
push
adc
hlt
mov
stc
pusha
mov
lret
inc
xchg
sub
outsl
push
inc
add
add
xor
push
inc
sub
ret
les
adc
mov
arpl
mov
mov
je
loop
add
iret
mov
arpl
push
mov
test
lcall
bsf
test
fsts
dec
fists
push
fimull
jae
pop
push
inc
add
int3
cmpsl
push
mov
std
add
pop
cmc
push
xlat
jae
xor
push
pop
or
hlt
loope
mov
cmc
mov
in
dec
cltd
mov
mov
pop
scas
lds
js
pop
shrb
adc
jl
nop
xor
dec
mov
loopne
xchg
test
xchg
pop
fdivr
xor
out
sub
or
repz
cmp
fbld
cmpsb
push
repz
je
idiv
movsb
lret
mov
inc
or
cmovb
or
je
call
rcl
push
test
das
adc
sbb
inc
dec
icebp
dec
inc
dec
daa
mov
push
push
and
push
xor
in
mov
and
jecxz
pop
push
xor
cld
and
lods
cld
xacquire
push
jecxz
addl
mov
in
jne
jae
sbb
dec
xchg
adc
push
jno
mov
or
aaa
daa
lock
arpl
inc
jb
fcomps
and
add
cmp
xchg
or
cmp
ds
movsb
call
ss
mov
dec
cmp
ja
filds
jmp
insl
pop
mov
xchg
ja
mov
pop
sti
lret
push
rcrb
insl
and
jb
mov
xchg
jmp
sub
mov
xchg
pop
icebp
cmp
and
add
nop
or
test
pop
icebp
subb
shrl
jne
cs
jg
outsl
and
loopne
sub
sahf
adc
mov
cmc
out
mov
sub
addr16
inc
aaa
inc
stos
sub
push
imul
push
jae
mov
sbb
loope
add
jg
jmp
jno
add
push
mov
jbe
mov
push
xchg
out
inc
pusha
fdiv
dec
in
adc
jecxz
shlb
and
push
mov
push
inc
into
aas
mov
sbb
frstor
sub
adc
mov
stc
push
jne
loop
aam
lods
or
stos
lock
mov
movsb
sbbb
push
pop
mov
mov
into
push
jp
xchg
pop
add
sbb
and
mov
inc
dec
dec
jg
xor
sub
repz
jle
mov
arpl
mulb
cli
push
in
mov
rorb
inc
mov
pushf
add
popf
push
xchg
and
stc
push
addl
call
or
mov
push
test
aam
jns
sub
dec
dec
mov
test
jb,pt
inc
push
add
clc
lock
xchg
sbb
sbb
insb
xchg
adc
outsl
loop
lahf
movsb
xorl
roll
push
push
or
bound
or
adc
inc
loop
pop
sti
scas
add
inc
xor
dec
add
das
fsubrs
arpl
mov
inc
jno
cmp
stos
mov
movb
xchg
mov
inc
mov
jnp
divb
in
fs
or
mov
rclb
lea
sbbl
inc
cs
mov
add
xor
adc
call
daa
xor
xchg
hlt
dec
or
sahf
cmc
je
pusha
mov
push
bound
add
pop
lods
lahf
test
lcall
popa
fldt
or
cwtl
movsl
aas
push
or
or
cmp
cmp
xor
hlt
push
and
inc
adc
xor
mov
push
aad
aam
pop
jb
cmp
sub
lret
adc
lds
mov
push
push
arpl
arpl
mov
shll
inc
or
stos
inc
mov
rcrb
push
adc
addl
fisubl
mov
mov
adc
mov
addr16
out
cltd
cmp
out
fistpl
pop
aaa
lret
dec
cmp
outsl
push
rcrl
mov
mov
cltd
ljmp
cmp
xor
popf
xchg
xchg
or
in
cmp
cwtl
jb
shlb
loopne
outsl
cs
push
popa
std
fildll
inc
lret
aaa
xchg
insl
loope
jae
push
flds
mull
fs
or
ja
mov
mov
push
int3
lds
inc
mov
adc
scas
stos
fucomip
mov
cmp
test
inc
mov
mov
push
adc
lcall
insl
in
adc
xchg
fadds
mov
stc
lods
dec
add
push
daa
ljmp
dec
out
add
fisttpl
mov
ret
xor
test
mov
xchg
lea
sbb
int
int
lea
adc
mov
call
mov
jae
imul
lds
sarb
mov
sub
mov
mov
cwtl
push
pushf
shll
sub
popf
sub
and
adc
stos
cli
in
mov
outsl
adcb
or
mov
sub
fstps
lcall
clc
ud0
in
xorb
dec
xchg
dec
xorb
imul
fwait
xor
jbe
sub
pop
sub
jno
lahf
mov
and
pop
pop
push
bnd
sbb
jecxz
xchg
pop
lea
push
inc
mov
sub
cmpsl
add
mov
lret
icebp
lahf
mov
xchg
dec
fwait
out
sbb
xor
add
jo
popf
mov
mov
outsb
xchg
push
sub
repnz
jns
ret
push
rcr
cs
in
test
pushf
inc
jl
insl
or
repnz
lods
aad
jge
loope
es
xchg
movsl
jg
movsb
enter
stos
stc
push
jecxz
inc
xor
adc
or
xor
fisubrs
mov
mov
or
push
pop
out
movsb
test
or
mov
adcb
mov
pop
xchg
xlat
mov
xor
daa
lock
or
inc
pop
aaa
test
adc
or
mov
add
ret
pop
aam
loop
push
das
pushf
adc
mov
xor
pushf
dec
out
pop
inc
push
xchg
pop
lret
push
add
mov
mov
fdivr
lds
subl
roll
jnp
and
mov
adc
mov
mov
or
or
jb
mov
lretw
outsl
xchg
insb
andl
adc
cs
out
jl
and
imul
mov
jle
xor
ds
jne
faddl
ss
pusha
sub
cmp
insb
or
and
sbb
mov
jno
add
and
cld
in
push
call
adc
aad
cli
mov
mov
pop
mov
imul
and
pop
pop
incb
nop
rcl
js
add
or
xchg
cltd
xchg
pushf
test
xlat
test
xchg
cwtl
outsl
jb
cwtl
mov
jge
xchg
stc
testb
pop
or
and
mov
mov
inc
and
push
mov
cmp
xor
aaa
cmpsl
imul
dec
sti
add
adc
sub
xchg
jns
testb
mov
lea
push
sub
dec
push
xor
test
sahf
sub
enter
jo
xchg
cli
lock
fldln2
sbb
mov
push
in
pop
scas
sub
les
adc
test
dec
adc
jnp
lods
adc
aam
pop
push
cmp
mov
dec
insl
or
mov
out
xor
push
adc
jmp
push
push
add
dec
xor
adc
out
jbe
mov
add
out
stos
push
test
sbb
in
and
sub
test
fmull
xlat
sbb
dec
mov
or
push
mov
add
xor
xchg
aaa
jo
outsl
push
aad
and
out
es
popf
push
jae
mov
jae
int3
aaa
aam
xorb
orb
lds
mov
mov
add
in
cld
xchg
sub
mov
negl
arpl
xor
out
aas
add
dec
shlb
shlb
fisubrs
ja
les
add
nop
mov
out
jns
xchg
ljmp
cs
mov
inc
sbb
xor
inc
jecxz
push
cltd
and
out
ja
femms
lds
jae
loop
and
fimull
inc
insl
pop
popf
xor
imul
sbb
shlb
sub
addr16
mov
sbb
jnp
aaa
int3
mov
adc
addr16
mov
arpl
xor
das
ret
inc
scas
daa
movsb
xor
push
xchg
xor
je
sbb
adc
shll
and
dec
movl
xor
or
rcrb
daa
addr16
adc
out
xchg
lods
add
sub
cmp
rcll
jecxz
lods
dec
cmpsl
test
sub
divl
scas
adc
push
xchg
sarl
stc
inc
popa
imul
mov
lds
xchg
fadds
pop
add
lock
sti
adc
mov
and
mov
dec
jae
stc
test
outsb
mov
pop
xchg
stc
push
idiv
and
mov
cmp
std
aas
sbb
add
aad
xchg
lea
xchg
mov
push
in
test
lods
sub
in
ret
adc
xor
sbb
cmpl
mov
mov
mov
mov
arpl
dec
cs
test
stc
push
in
inc
and
cmp
pop
adc
inc
xchg
rorb
add
mov
outsl
stos
sbb
out
into
arpl
out
repnz
pop
adcl
mov
in
jae
cmpb
push
add
dec
push
shll
js
mov
test
mov
pop
push
push
dec
shll
into
stos
push
ljmp
inc
or
jno
jg
inc
add
jg
dec
xor
arpl
into
nop
bound
pop
je
dec
push
xchg
and
xchg
fdivs
in
sub
xchg
ret
scas
and
xchg
mov
sub
out
inc
dec
lods
sbb
loopne
test
add
fstpt
daa
mov
js
add
mov
pop
mov
dec
out
jo
sbb
or
mov
ffreep
lret
add
jns
sar
sub
xchg
leave
dec
sub
jle
imul
push
jmp
fldcw
add
mov
sub
mov
dec
subb
test
xor
iret
cmp
xchg
repnz
sbb
movsl
in
outsl
pop
popa
mov
in
xchg
adc
xor
arpl
push
lahf
pop
testl
sbb
cmp
dec
clc
add
data16
add
call
sarl
pop
mov
cli
fistps
xor
icebp
cmpsl
ret
scas
or
fdivrl
or
fistps
lahf
sbb
iret
push
mov
jbe
std
in
test
mov
mov
sub
xchg
pop
sbb
out
mov
sub
andb
xor
mov
cmp
pop
mov
jnp
icebp
lea
xlat
int
and
cmp
push
andb
mov
mov
push
xchg
lret
scas
sub
enter
dec
or
mov
data16
xor
sub
jbe
fdivrs
iret
stos
lahf
fs
push
das
mov
inc
in
mov
cmp
jnp
movsb
testb
sti
lods
xor
je
xor
add
sti
sub
sub
mov
hlt
ds
pop
inc
repz
jmp
xchg
xlat
fwait
andl
inc
enter
pop
addb
call
pop
lret
clc
cmp
jo
test
outsl
push
test
xor
dec
xchg
or
adc
sbb
scas
and
cld
int
stos
adc
pop
mov
fidivrl
add
add
xor
sbb
sti
push
or
out
rcrb
outsl
rorl
lea
mov
mov
cld
pushf
imul
lods
and
subl
lds
xchg
repnz
cmp
add
icebp
inc
shrl
adc
ret
dec
dec
adc
xchg
jbe
imul
pop
jecxz
and
pop
loope
loop
cmp
mov
in
call
push
push
fwait
mov
sbbl
lock
popf
movb
cmp
ja
les
int
mov
hlt
xor
dec
xchg
jge
and
in
dec
mov
dec
and
idivb
cmp
mov
dec
cmp
pop
xchg
xorl
cld
cmpsb
rclb
sbb
cmp
mov
nop
ss
xchg
add
add
sbb
cmp
nop
jmp
fs
loop
mov
or
sarb
xchg
mov
das
mov
xchg
xchg
repnz
das
cmc
push
sti
or
adc
jmp
xor
ss
imul
push
int3
pop
push
pusha
movsb
mov
rcll
pop
push
je
rcr
xchg
pop
push
inc
pop
scas
cwtl
or
mov
mov
mov
xchg
out
insl
mov
cli
cmp
xchg
jp
pop
popf
mov
jecxz
and
loopne
push
mov
add
cwtl
jns
pop
enter
mov
dec
imul
js
aaa
mov
add
cmp
xor
push
aas
push
int
inc
sarl
mov
cmpsl
in
dec
lret
add
sbb
xor
out
jmp
mov
sbb
cltd
jge
pushf
push
pop
cmp
addr16
xor
fidivrl
xor
xchg
inc
pop
int3
jg
lret
fptan
nop
and
jmp
fdiv
js
add
mov
dec
fdivrs
jle
pop
pop
sub
std
dec
jne
roll
sahf
fcoms
cmp
fwait
mov
xchg
cmpsb
xchg
mov
mulb
js
fcomps
rclb
pop
inc
jbe
es
cmp
iret
dec
mov
xor
dec
loope
test
cmp
outsb
pop
and
stc
popa
dec
mov
test
xchg
das
cmpl
popf
mov
or
adc
jge
scas
mov
rcrb
dec
or
in
sub
push
xor
and
cmp
popa
add
sub
fsubrs
and
xchg
leave
and
push
sbb
insb
in
xor
int
mov
lcall
dec
adc
add
mov
subb
inc
add
lods
arpl
mov
lea
movsl
insb
fistpll
loope
push
pop
mov
xor
loope
bound
pop
or
in
and
imul
and
pushf
mov
push
sbb
mov
xchg
and
or
fistpl
cmp
fyl2xp1
mov
xchg
mov
mov
push
push
repz
fimuls
inc
mov
ret
dec
dec
cmc
or
jns
dec
shl
es
fildl
js
pop
push
scas
or
popf
aaa
cmc
mov
imul
out
adc
push
je
bound
add
xchg
rcrl
filds
fs
push
or
repz
nop
lock
xor
xchg
jbe
jbe
cmp
push
pushf
cmp
dec
aaa
xchg
ret
adc
pop
movb
jle
call
xor
sub
int
dec
add
xor
clc
idivl
sti
pop
push
jp
shlb
push
mov
sti
popf
insl
dec
loop
add
xchg
rcrb
mov
loop
mov
inc
pop
in
fmuls
rol
xchg
loope
enter
jle
mov
cmpsb
xchg
mov
xchg
mov
push
push
mov
ss
fdiv
mov
out
xor
jge
jg
rcl
push
push
sbbl
adc
jno
and
das
pop
stos
arpl
shlb
into
jne
out
jmp
mov
sti
subb
mov
dec
push
add
push
lret
rcrb
dec
sub
sbb
out
lods
push
sbb
fbld
adc
dec
aaa
push
or
pop
fs
xchg
xchg
lret
inc
stc
loop
jb
mov
lret
adc
cmpsb
mov
push
mov
pop
cmpsb
adc
stos
sahf
push
or
int3
mov
xchg
rcrl
jmp
insl
adc
in
scas
dec
jb
cmp
mov
in
hlt
add
nop
push
movsb
cmp
popf
ss
cli
sub
adc
arpl
and
dec
mov
lea
pusha
dec
jecxz
cmp
cmp
pop
or
add
rorl
xchg
mov
les
dec
cmpsl
daa
or
or
add
popf
addr16
ja
mov
mov
and
addr16
mov
das
mov
inc
mov
jg
add
pop
aam
rclb
mov
or
xchg
push
jmp
mov
xlat
aam
jmp
mov
or
divb
mov
fs
fisubrs
mov
iret
out
pop
mov
xor
outsb
enter
and
mov
adc
in
daa
js
push
inc
mov
fldl
fadd
popf
cltd
popa
pusha
fwait
ret
test
inc
mov
jbe
xor
push
adc
repz
add
das
aaa
and
das
fistl
scas
jg
push
in
push
cmp
std
cmp
xchg
lahf
ret
stos
in
out
mov
mov
dec
pop
cmp
jecxz
dec
inc
or
cmp
mov
mov
mov
jp
add
repz
inc
mov
test
mov
xor
or
dec
jecxz
shll
push
cs
dec
cwtl
push
popa
cmc
inc
sbb
cmp
adc
ret
loopne
outsb
out
shl
ss
das
or
fidivs
lds
repz
insl
push
inc
inc
push
push
sub
cltd
rcrb
or
jae
sub
jmp
cmp
jge
loopne
rorl
xchg
addr16
jl
xor
jmp
lock
push
es
repnz
xchg
scas
into
repnz
ds
jne
add
pop
jno
cmp
cld
adcl
repz
jae
and
gs
sbb
push
sahf
out
sbb
push
fs
enter
out
inc
adc
inc
mov
out
in
cmp
out
sarl
jo
push
or
xchg
mov
inc
dec
ds
pop
cmpsl
mov
in
xchg
sbb
mov
mov
inc
push
jbe
mov
sahf
jl
mov
lock
adcb
pusha
sti
dec
jg
push
lret
mov
scas
jo
mov
push
and
shrw
lret
add
cmpl
cmp
pushf
mov
sub
mov
jbe
dec
sub
bound
jle
or
lds
cmc
in
pop
roll
jmp
data16
daa
in
pop
xor
xlat
lds
jno
pusha
mov
ljmp
rcrb
or
and
test
inc
xchg
cld
sbb
fidivrs
jns
cld
adc
xchg
inc
xchg
and
jae
inc
sub
lea
pusha
push
adc
mov
std
xor
in
outsl
mov
push
sbb
push
in
or
add
sbb
fs
mov
sub
mov
es
add
push
xor
add
bound
jle
ss
sbbl
mov
add
ds
imul
mov
mov
dec
push
dec
fstps
iret
mov
cmc
scas
xchg
dec
data16
adc
iret
sub
or
shlb
add
push
lret
xlat
hlt
repz
xchg
test
pushf
pop
jo
xchg
inc
mov
or
cmp
loope
popf
movsb
fstpl
fstps
enter
or
fstpl
jno
je
jecxz
mov
mov
fmuls
mov
sbb
xorl
sub
mov
pop
jle
aas
lcall
and
aam
mov
xor
mov
int
sarb
ljmp
out
jmp
adc
cli
sbb
mov
add
loop
inc
mov
std
out
ror
mov
lods
cmp
call
out
ret
add
dec
daa
add
in
in
or
jp
sbb
jmp
jl
mov
mov
out
dec
sahf
xor
fs
mov
adc
test
xchg
sbb
adc
pop
mov
sti
and
hlt
xlat
xchg
mov
test
dec
and
test
mov
jb
mov
push
test
xor
in
int3
mov
jp
adc
mov
dec
mov
xor
pop
sub
daa
xchg
cmpsb
and
jb
inc
aaa
pushl
jl
repz
rcll
lock
ljmp
lock
cwtl
pop
out
mov
flds
aaa
push
in
mov
and
pop
inc
idivl
loop
mov
mov
dec
jne
xor
push
dec
lahf
sub
mov
xor
bnd
in
popf
add
jne
or
movl
leave
or
aad
jg
adc
imulb
sub
pop
insb
push
mul
pop
or
aaa
pop
inc
mov
cmp
and
and
in
mov
sub
cli
lret
or
mov
call
adc
mov
out
int3
das
std
int
mov
cmp
pop
dec
add
sbb
aas
test
fidivs
rol
loop
xchg
pop
shll
cltd
sub
pop
cmp
xchg
push
inc
mov
ret
insb
inc
xor
sub
push
inc
dec
xchg
jg
sub
shlb
push
loope
inc
cmpsb
xor
fldl
stos
xchg
jb
es
divb
pushf
aad
inc
rclb
sub
adc
inc
pop
das
call
mov
lock
inc
push
cltd
and
push
call
sub
xchg
cld
dec
sub
push
rorl
add
ret
or
outsb
scas
xor
lods
xor
add
jns
cmpsl
lahf
aas
push
push
xlat
cmp
and
jnp
and
sbb
xchg
andb
pushf
fldt
orb
jl
push
movsb
push
mov
adc
cmpsl
cmc
xlat
outsb
sbb
imul
push
push
cmpsl
and
push
adc
xor
out
mov
stos
sbb
call
push
pop
fwait
mov
cmp
adc
xor
jle
int3
adc
inc
insb
pop
xchg
sub
or
inc
addr16
sub
xchg
iret
adc
movsl
xchg
popf
fistpl
or
add
dec
repnz
imul
sbb
mov
aam
fdivrl
add
int3
and
jns
mov
mov
jge
push
dec
pop
cli
or
lahf
in
enter
push
aas
fimuls
sub
daa
jo
sarb
pop
insl
movsl
hlt
inc
bound
pop
jae
or
push
lea
pop
loope
push
xchg
xor
sar
out
cmp
jmp
xchg
lods
inc
popf
popf
push
stos
out
xor
sahf
in
push
xchg
xchg
inc
scas
out
add
sarl
add
or
repnz
sbb
mov
lret
ss
mov
repnz
jno
lcall
test
xchg
push
sub
ret
mov
shlb
mov
add
subb
inc
icebp
push
xor
cmpsl
loop
or
or
fldcw
mov
cwtl
add
mov
or
inc
test
cmpsb
sub
inc
cmc
jo
in
pop
push
xchg
fs
fs
cmp
sbb
repnz
sub
jo
push
mov
into
or
repz
je
in
jo
adc
test
int3
aam
adc
push
out
dec
ljmp
sbb
lret
jns
loope
mov
test
adc
adc
sbb
dec
ficompl
out
cmpsl
add
cltd
in
ds
sbb
jge
lock
inc
dec
fsubrp
clc
mov
popa
mov
lods
cmc
clc
jmp
add
jl
ja
notl
mov
sbb
inc
lcall
sub
xchg
insl
adcb
add
call
dec
cmp
jo
xchg
inc
xchg
adc
inc
add
in
fisubs
jne
les
sbb
sub
sub
lds
add
jmp
aas
add
pop
mov
fcomps
lcall
bound
pop
outsb
aad
fwait
aam
sbb
pop
ljmp
dec
pop
dec
cmp
movsl
nop
jns
aas
frndint
loop
sub
xor
jmp
nop
mov
or
je
add
cltd
notb
jb
jle
mov
js
das
bound
cmp
push
adc
rorl
xchg
pop
imul
xlat
cmp
in
stc
dec
cld
ror
pusha
mov
xor
jb
scas
jl
jns
add
arpl
sub
shlb
jl
scas
jle
add
aaa
cmp
mov
stos
pop
inc
popa
mov
pusha
sub
pop
adc
int3
xchg
jae
imul
repz
cmpsl
std
pmullw
leave
test
mov
add
stc
fs
pop
cmpsb
scas
mov
aad
nop
nop
xor
or
outsl
ret
add
mov
enter
xchg
xor
int
mov
xchg
cmp
mov
ret
add
jns
bound
pop
fwait
bound
push
pop
cmp
mov
imul
int
enter
and
mov
fcom
outsl
xor
mov
ja
insl
inc
mov
int
xchg
stc
lods
mov
push
lahf
inc
mov
add
hlt
lods
daa
push
ss
out
movups
movb
mov
rcrl
mov
inc
pop
cmp
pop
int
dec
sbb
call
fstpt
stos
data16
mov
sub
inc
outsb
jmp
fdivr
dec
pop
and
cwtl
lcall
mov
jp
push
popa
insb
push
shlb
icebp
xchg
jne
cmp
adc
cmpsb
jecxz
jle
mov
mov
jnp
jle
lock
test
sbb
aaa
jmp
movsl
int
xor
mov
out
test
bound
push
clc
jne
aas
xlat
pop
ror
pop
add
jecxz
aaa
loopne
xchg
sbb
pop
push
mov
ret
cli
lret
dec
xor
sti
xlat
inc
push
fmuls
xchg
cmp
cmp
add
imul
mov
sub
lods
mov
in
ja
inc
pop
sar
jle
loop
repz
xchg
add
dec
fidivrl
cmpsb
mov
scas
call
out
push
xchg
pop
fs
mov
addr16
or
sub
jecxz
mov
addr16
sbb
sbb
rolb
cld
jmp
jecxz
or
mov
xor
mov
cli
mov
pushf
xchg
hlt
mov
aad
out
jo
pop
push
cli
pop
ljmp
add
popa
movsl
adc
out
scas
ret
test
daa
mov
testb
aam
sub
gs
test
xchg
loopne
bound
xchg
imul
jl
or
cltd
mov
fs
jl
or
out
mov
add
and
push
sub
stc
lahf
mov
pop
pop
cmpsl
fisubs
add
inc
and
xchg
jle
inc
adc
bound
push
xchg
mov
cmpl
xchg
cltd
pop
stos
mov
bound
push
dec
push
stc
dec
ret
dec
popa
lahf
adc
mov
mov
jle
mov
adc
dec
data16
inc
insl
and
repnz
insl
stc
mov
andl
push
pusha
dec
sti
dec
loope
hlt
mov
fistpl
sub
outsb
stos
roll
and
push
push
sbb
cli
mov
std
mov
inc
mov
or
lods
rol
fisttpl
leave
pop
fs
cld
rcr
cmp
cli
cmp
aaa
push
out
iret
dec
leave
adc
and
in
es
aaa
mov
dec
out
and
sub
xlat
push
and
test
xchg
shll
loopne
and
loope
xor
sbb
push
data16
ja
ds
out
xorb
xor
add
daa
pop
mov
popa
push
mov
out
int
jb
imul
imul
fisubrl
mov
dec
xor
insb
or
aas
push
outsb
xchg
imul
add
movsb
jle
in
enter
sbb
sub
mov
xchg
incb
lods
movsb
and
xlat
jp
mov
dec
ficompl
loopne
mov
sub
shr
call
bound
inc
adc
enter
fcompl
mov
loope
add
push
sub
inc
and
stos
push
add
mov
pop
mov
sub
or
jecxz
dec
sub
and
jge
adc
sahf
loop
jne
fcomps
sub
inc
fwait
sub
ficoml
rclb
test
in
imul
test
gs
je
push
jo
jg
icebp
cmpsl
repnz
movsb
inc
lea
in
cmpsl
cmp
jp
adc
dec
in
inc
sub
idivl
lea
mov
and
mov
insb
nop
movsl
fisttpll
xor
or
fstpl
in
xor
push
inc
mov
push
loope
xchg
leave
mov
inc
dec
fiaddl
push
xchg
mov
mov
jne
aas
xchg
push
sbb
andb
lea
mov
add
mov
nop
inc
mov
mov
inc
pop
lret
and
push
mov
sbb
js
push
mov
pushf
faddl
ret
cmpsb
je
mov
jl
sbb
fmulp
push
mov
rep
adcb
sub
or
adc
jle
mov
adcl
aaa
mov
arpl
movsl
test
inc
lea
out
mov
mov
xchg
ret
inc
cmp
mov
cli
inc
or
orb
subl
push
xor
int3
or
cmpsl
push
fistps
dec
jbe
outsl
lcall
xor
push
mov
push
fs
dec
add
and
add
loopne
push
xor
ret
jp
add
mov
pusha
shll
or
out
jle
cmp
nop
adc
mov
arpl
aam
cmpsl
fnstcw
xorb
pop
mov
mov
or
add
movsb
xchg
int3
rclb
mov
or
dec
xlat
lods
jo
pop
shrb
inc
pop
aaa
popf
dec
xchg
sub
outsl
cmpsl
jg
pop
movsb
pop
mov
jnp
or
xlat
pop
and
imul
xor
ja
out
mov
adc
mov
jo
loop
mov
push
icebp
cmpw
fwait
imul
outsb
movsb
repz
pop
and
fnstenv
inc
test
sbb
mov
sbb
repnz
sub
adcl
cli
mov
push
hlt
cmp
in
loopne
mov
outsb
add
pop
sub
fisubl
cmc
jl
cmp
add
mov
cwtl
adc
push
xchg
mov
popf
aaa
xor
sbb
mov
insb
lock
fsubrs
add
repz
adc
jne
pop
js
int3
dec
ret
std
mov
repnz
and
cmp
sahf
or
insl
ja
lds
test
stos
mov
push
out
pop
sti
jnp
pop
dec
fsts
jno
int
aas
lret
stos
idivb
das
addr16
sub
popf
add
xchg
movsb
loope
sbb
das
sub
data16
mov
dec
out
xor
mov
xchg
jp
jl
ror
sahf
imul
outsb
fcoml
bound
mov
sbb
push
cmp
inc
xor
mov
or
inc
pop
mov
jbe
pop
add
or
push
jae
arpl
sbb
mov
bound
insl
sub
into
sbb
sbb
scas
inc
mov
into
ds
ds
dec
xchg
push
test
rcr
jg
and
lahf
jne
inc
xorl
cmc
lret
sarl
push
insl
xchg
sbb
daa
test
add
mov
fwait
pop
adcb
std
cs
cmp
js
jns
jecxz
cmpsl
daa
rorl
push
ret
push
addl
fistpll
jle
push
in
sub
sarb
dec
repnz
jl
xor
js
ljmp
punpckhdq
notl
inc
ljmp
out
movsl
ret
lds
icebp
mov
fs
push
std
mov
sub
and
xlat
lcall
ret
dec
dec
jb
fwait
sub
or
sub
mov
sbb
mov
cmp
xor
enter
dec
mov
rorl
or
mov
dec
mov
xlat
xor
dec
rcrl
jae
jg
cmc
insb
and
aas
leave
iret
stos
jbe
mov
ljmp
cld
mov
jg
imul
push
push
adc
push
xchg
inc
add
shl
ja
cmp
rol
cmpsb
mov
fdivrs
sub
pop
out
sarl
int
cmp
sbb
fsubr
adc
movsb
ljmp
popa
fstl
dec
cmpsl
mov
push
sub
sbb
out
sub
int3
sub
popa
pushf
cld
push
push
add
test
iret
pop
xor
lock
pop
jecxz
or
xorb
adc
xchg
mov
xchg
pop
divps
push
in
rclb
add
pop
xchg
sub
cs
sahf
jne
pop
mov
mov
dec
cwtl
jp
inc
insl
or
bound
dec
les
stc
xorb
loopne
jecxz
jle
push
mov
jg
xor
jae
dec
rorb
testl
pop
mov
sbb
jl
xchg
in
das
mov
inc
mov
int3
xchg
mov
adc
test
cs
xlat
xchg
loope
push
dec
jno
add
or
mov
aad
jmp
pushl
pop
push
xchg
push
mov
mov
clc
or
aad
push
xchg
ds
out
push
test
test
push
mov
mov
sub
sbb
outsb
jns
outsb
test
enter
lahf
sahf
mov
adc
xchg
lret
sbb
or
cli
xchg
sub
cltd
dec
jmp
vxorps
push
outsb
push
arpl
cmpsb
ret
mov
outsb
xchg
pop
mov
sub
mov
mov
sti
in
pop
in
cmp
mov
test
mov
push
pop
mov
push
insl
movsb
rcl
xchg
pop
mov
and
sahf
rcrb
mov
xlat
mov
or
fwait
in
pop
int3
mov
mov
mov
push
jle
es
dec
adc
in
mov
orl
push
fcomp
mov
inc
lea
stos
fsubrl
out
popa
lcall
scas
sahf
sbb
xchg
adc
pop
cmp
mov
insl
lret
xchg
das
pop
pop
sub
insb
xor
jmp
jno
arpl
xchg
jle
adc
lret
pop
rcll
jb
jne
out
jge
push
push
jae
dec
sbb
adc
jmp
hlt
cmpsl
hlt
mov
fs
int
das
ficoms
push
lea
fisubs
fucomi
pop
inc
js
pop
mov
and
jno
inc
leave
pop
aaa
test
fstpl
bound
mov
loop
dec
test
push
test
pop
out
mov
inc
jge
dec
pop
addb
sahf
sub
mov
adc
mov
xchg
sbb
mov
push
addr16
in
sbb
gs
repnz
xchg
rolb
cmp
js
cmpsb
pop
mov
rcl
push
lods
cmpsl
fimull
adc
pop
xchg
adc
outsb
vpmaxsw
mov
sbb
xor
pop
clc
xchg
xchg
jo
adc
sti
xlat
imul
pop
mov
lcall
push
xlat
jl
lea
push
rolb
into
pop
aaa
add
repz
movsl
xor
sbb
loopne
and
popa
and
jp
dec
cmp
out
mov
xchg
mov
cmp
inc
adc
das
test
push
mov
lds
mov
jp
inc
sbb
popf
mov
aad
shrb
sub
jnp
fwait
jb
enter
rol
pushf
sbb
mov
xchg
stos
lock
cwtl
std
mov
loop
ret
inc
xor
adc
insl
pusha
mov
out
mov
scas
inc
add
pop
stos
jne
mov
jno
out
push
mov
in
in
xchg
pop
xor
lea
movsb
adc
xchg
sbb
in
nop
mov
add
add
xor
movsl
cmpsb
cld
mov
lock
add
sbb
in
or
loopne
mov
or
push
stc
add
and
in
lods
dec
pushf
or
pop
sbbb
cmp
xchg
mov
jne
in
mov
cmpsb
fldenv
or
cmp
aam
clc
push
hlt
jb
enter
lock
xor
scas
leave
mov
jb
adc
sar
xchg
arpl
das
mov
and
push
ss
movsl
xchg
mov
hlt
push
pop
mov
clc
test
orb
mov
cmp
cmpsb
loopw
in
pop
and
pminsw
sub
push
loop
testb
jnp
mov
push
mov
fwait
inc
mov
sub
je
adc
sbb
shld
aam
adc
mov
adc
cmp
in
aad
fidivs
shrb
dec
aad
pop
pop
or
pop
ss
out
pop
mov
cmp
xor
fisttps
pop
push
stos
push
in
aad
es
jp
mov
jae
mov
mov
sbb
mov
movsb
push
xchg
repnz
daa
rcrb
sub
stc
test
fsubr
js
test
in
or
dec
xor
push
jb
cwtl
mov
rcrl
lret
clc
push
mov
and
jmp
cmp
movsb
nop
dec
test
pop
pop
aas
adc
inc
adc
lret
adc
es
cmpsl
fimull
insb
int3
idivl
lea
mov
in
jb
je
lcall
lock
and
mov
cmpsb
call
test
lods
xchg
push
pop
xorl
pop
xor
sbb
inc
push
add
aas
stos
ss
insl
xchg
xlat
fists
les
dec
push
mov
add
lss
lret
jo
mov
cltd
pop
pop
fistpl
dec
add
cmpsl
cltd
shrl
fildll
popa
rorl
and
dec
xchg
push
movsl
or
pop
mov
xchg
mov
mov
mov
fistps
aad
mov
mov
and
or
and
push
les
pop
loopne
push
jns
push
mov
cmp
jmp
push
jmp
shlb
and
mov
in
sahf
jo
in
cmp
pop
ret
jmp
nop
out
bound
es
je
lcall
sahf
std
and
adc
mov
fcmovbe
mov
and
stos
lock
mov
and
xchg
dec
add
lods
push
inc
pushl
add
sbb
test
pop
inc
dec
xchg
dec
in
add
inc
xor
imul
inc
stos
xchg
jbe
cs
dec
jns
jns
inc
leave
ds
mov
push
push
orl
lret
stos
sub
adc
into
repz
mov
inc
jecxz
and
fists
jg
mov
in
arpl
mov
jnp
andl
fstl
add
add
daa
inc
cmp
mov
fsin
cmp
xor
sub
jae
cs
insl
icebp
mov
iret
cmpb
ds
shll
les
in
jbe
ret
jno
jbe
outsb
dec
ret
mov
lcall
push
repnz
mov
fxch
inc
hlt
cs
into
popa
jg
les
mov
fisubrl
aas
sti
jnp
je
mov
mov
inc
sbb
mov
fldl
or
jecxz
stos
mov
xor
mov
out
and
and
dec
sbb
push
pop
mov
jge
addb
push
sub
add
cmp
cltd
add
push
sbb
into
jle
sti
cs
lea
jo
sub
arpl
leave
push
cmp
rorb
ret
add
push
arpl
test
jo
out
pop
stc
and
cmc
outsb
jns
and
popf
push
sbb
dec
cmpsl
dec
in
shll
mov
add
pop
jge
mov
loopne
cmp
mov
into
cwtl
mov
pop
orl
scas
out
dec
imul
mov
in
hlt
in
mov
test
cmp
iret
test
inc
rorl
sub
inc
call
mov
test
mov
mov
push
lret
cmc
mov
fdivr
xor
int
ljmp
movsl
xor
dec
dec
pop
ficoml
push
cmpsl
sti
mov
addr16
mov
push
scas
rol
jae
leave
je
dec
sbb
jae
rcrl
jnp
push
in
xchg
jg
push
fmuls
testb
cmp
iret
cmp
aas
sti
or
jmp
ret
outsb
and
les
mov
adc
cmc
push
cs
jl
sbb
lods
pop
adc
sbb
or
je
testl
mov
roll
or
gs
rcrl
pop
and
lods
xor
push
xchg
sub
mov
pushf
mov
and
movb
sbb
jmp
push
sti
push
in
std
cltd
sahf
sbb
stos
and
sbb
mov
sbb
pop
pop
sbb
btr
mov
xchg
dec
jbe
xchg
xchg
and
outsl
pop
out
lret
sub
inc
mov
leave
adc
xor
mov
fmull
aas
sarl
pop
or
in
icebp
mov
add
lcall
mov
xor
sub
aam
inc
fldz
pop
push
cmp
aaa
dec
push
xchg
cmp
jp
inc
mov
add
outsb
popa
les
cmp
mov
les
jg
mov
cli
xlat
mov
enter
cmp
xor
adc
fs
sub
xor
test
movsl
mov
jno
jnp
jle
xor
dec
and
jbe
sbb
or
mov
pop
jne
outsb
outsb
dec
cli
jne
clc
addr16
inc
fdivp
jmp
std
pop
mov
and
add
fmull
shl
mov
inc
adc
popl
or
int
pop
ds
inc
mov
ret
std
sarl
pop
nop
mov
dec
aaa
repnz
pop
cmp
je
std
lock
push
jne
popf
push
or
inc
cltd
cmp
cmc
pusha
cmp
pop
or
popf
adc
in
dec
inc
mov
icebp
sub
xchg
pop
mov
daa
pop
nop
push
push
push
and
add
add
cmpl
or
lods
inc
add
pop
and
fbstp
test
aad
out
filds
pop
outsl
aam
or
mov
push
dec
or
push
or
arpl
pusha
pop
andb
push
adc
lcall
movsb
adc
repz
or
push
popa
out
mov
jge
adc
dec
aad
or
testl
jne
ss
xchg
iret
insl
mov
jle
mov
loop
or
mov
xor
xor
mov
repz
adc
addr16
cs
pop
clc
or
test
sub
inc
inc
pop
push
loopne
jl
dec
fisttps
push
lret
push
inc
hlt
sub
xchg
aad
mov
pop
jp
les
test
ficoml
jmp
rorl
imul
out
lock
out
xchg
jnp
push
dec
and
ja
popa
xchg
push
inc
int3
filds
lock
fisttpll
push
mov
cmp
mov
and
dec
xor
hlt
sub
call
dec
xor
das
sbb
fidivl
push
add
add
xor
sbb
ret
inc
push
mov
jmp
cmp
cmp
ljmp
mov
mov
addr16
aaa
pop
mov
xor
jmp
jp
xor
or
dec
mov
je
or
ffreep
int
loope
cs
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
pushl
aad
ficomps
xchg
xlat
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
and
cmp
outsl
outsb
int
scas
bound
out
imul
jmp
iret
jmp
mov
cmc
in
mov
fsubrp
outsb
dec
sahf
mov
out
mov
dec
fcmovb
aad
ficompl
filds
dec
into
xchg
ja
xchg
adc
hlt
fisubs
rcrb
aaa
lcall
mov
shrb
and
lds
pop
call
out
fcmovne
lea
xchg
adc
hlt
scas
stc
std
sarb
aam
xor
cmpsb
jecxz
sarb
test
push
adc
aaa
mov
or
mov
dec
into
aad
ficompl
inc
outsl
fimull
mov
xchg
xchg
outsl
fcmovb
aad
cmp
mov
outsl
ss
ficomps
xchg
rcr
aad
ficompl
xchg
cs
lds
leave
sti
xchg
outsl
fcmovb
aad
fistps
xchg
outsl
pop
iret
aad
ficomps
xchg
outsl
fiaddl
lret
mov
incb
lds
leave
out
xchg
outsl
fcmovb
aad
ficompl
lea
push
fld
aad
ljmp
add
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
sbb
cltd
push
add
xchg
outsl
fcmovb
out
mov
cltd
push
mov
pop
mov
push
mov
inc
test
cmpsl
in
ficompl
xchg
pop
rol
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
xchg
outsl
fcmovb
aad
ficompl
test
aad
js
and
rcrl
xchg
aaa
repnz
rorl
xchg
mov
int3
test
jl
pop
sarl
std
ds
cwtl
xchg
das
xor
shlb
ret
es
daa
insb
mov
adc
mov
rolb
test
mov
in
dec
adc
sbb
pushf
xorb
pusha
notl
mov
xchg
ret
xor
or
mov
cmpsb
and
inc
lea
dec
addb
pop
or
js
cmp
sub
repnz
in
daa
cltd
pusha
in
inc
imul
jb
jle
sub
movsb
out
sub
enter
cmp
testl
jbe
or
pop
jmp
pop
fistl
idivb
in
push
inc
inc
aam
rcl
cmp
mov
imul
adcl
jns
std
frstor
popa
ret
inc
add
mov
les
fistps
imul
or
mov
repnz
sbb
js
sub
xor
fwait
scas
push
push
lcall
bound
faddl
pop
lock
gs
cmpsl
push
or
addl
movsl
inc
out
adc
mov
jl
in
push
loopne
inc
fs
aaa
addr16
aas
jns
lock
xchg
xor
mov
push
inc
pusha
icebp
scas
cli
mov
outsb
test
shlb
and
daa
or
les
pop
push
mov
jecxz
addr16
popf
repz
xlat
inc
jae
xor
add
xchg
push
daa
adc
or
add
sub
sbb
pop
jb
enter
inc
icebp
adc
shll
adcb
pushf
sub
xchg
inc
xlat
xorb
cs
jl
into
pop
mov
xor
mov
mov
mov
jbe
and
cltd
out
dec
cmc
out
mov
mov
pushf
in
cmp
or
sub
push
jnp
cmp
sbb
push
push
in
ds
das
rorl
add
jbe
pop
imul
jg
jle
sbb
mov
and
push
mov
int3
xchg
and
jb
outsb
cmp
out
jecxz
mov
inc
push
or
shll
pop
incb
xchg
and
cmpsl
sbb
xchg
test
aam
dec
divl
dec
les
push
int
movsb
jnp
xor
push
mov
mov
sahf
jg
xchg
dec
rcll
fdiv
push
and
or
pop
jge
ret
lret
pop
aas
out
dec
inc
pop
adc
daa
call
push
gs
inc
push
mov
std
fwait
out
out
lods
add
adcb
pop
push
jmp
lcall
mov
dec
inc
dec
xchg
lcall
xor
adc
push
rcr
lock
rcrb
or
xchg
jl
cmp
fldcw
sbb
mov
enter
lds
data16
rol
xor
mov
cmp
push
jb
cs
cltd
and
pushf
jmp
popf
inc
mov
jnp
int3
xchg
add
mov
xor
fstps
or
insb
adc
in
rclb
insb
and
inc
pop
ret
cmp
jl
ret
xor
add
dec
pop
mov
jmp
mov
addb
xchg
fisubs
jl
in
xor
xchg
and
or
insl
imul
iret
mov
jmp
aad
dec
push
adc
fwait
or
cmc
cmp
xor
cmpsb
and
cmpsb
lds
or
arpl
add
jnp
xchg
std
mov
inc
fimuls
lcall
push
sahf
outsl
pop
or
push
sub
scas
shlb
sahf
xor
mov
mov
imul
add
dec
in
mov
faddl
cmpsl
mov
cmpsb
clc
pop
xlat
orl
pop
ds
pop
cmpl
jg
dec
fcomps
daa
test
mov
orb
mov
push
inc
mov
jbe
lret
xchg
aam
fs
xor
jecxz
pop
in
push
bound
push
dec
ljmp
xchg
and
leave
in
fnstenv
sti
inc
jecxz
xlat
addr16
dec
jno
sar
push
push
adc
dec
icebp
adc
mov
cwtl
jp
xchg
add
in
push
xor
dec
dec
add
int3
lahf
or
add
not
call
sbb
pop
and
jecxz
stos
repnz
movsl
insb
cli
gs
push
jb
cld
fadds
mov
insl
cmpsb
pop
fistpl
fsubl
jle
repnz
or
test
jne
fs
test
movsb
dec
inc
pop
jg
cltd
iret
pop
mov
jno
mov
cli
sub
ja
stc
cmpsb
sub
cli
in
push
add
mov
cltd
das
addr16
pop
in
pop
outsl
pop
inc
push
add
mov
inc
pop
mov
cli
fs
xor
imul
popf
and
pusha
cmp
lock
scas
xchg
push
ret
mov
divb
or
ss
mov
add
sti
mov
lods
dec
inc
xor
mov
push
frstor
or
pushf
fs
hlt
and
pop
adc
out
mov
in
aas
sbb
mov
or
and
fs
push
push
jmp
loop
pop
adc
data16
out
pop
jge
int3
mov
jbe
xchg
mov
cmp
xchg
jp
pop
repnz
jmp
test
and
arpl
mov
lds
push
push
je
jb
fadds
scas
rcl
int3
sbb
hlt
jg
mov
int
call
movsb
sub
adc
mov
ret
fistl
mov
call
out
mov
std
into
sahf
sbb
leave
outsb
xchg
arpl
shl
dec
or
cmp
outsl
mov
jmp
mov
shlb
enter
fstps
xrelease
iret
sub
or
out
in
sahf
mov
sbb
pop
push
adc
outsb
iret
mov
jnp
in
cmp
rcrb
es
es
xor
push
xchg
adc
sub
inc
loopne
dec
xchg
jmp
aas
and
pop
ret
jo
xor
bound
stos
jl
insb
movsb
adc
stc
xchg
fldt
mov
into
fnsave
sbb
sahf
fisubl
jmp
in
rorb
push
mov
mov
outsb
push
andb
pop
adc
xchg
cmpsb
je
inc
or
scas
adc
arpl
gs
xchg
adc
fisubrl
adc
xchg
hlt
xchg
dec
pushf
adc
int3
push
xchg
adc
es
mov
mov
push
pop
sub
pop
and
popf
jle
cltd
scas
dec
cld
xchg
jo
adc
pop
dec
pusha
push
insb
out
xor
sbb
adc
cli
xorb
add
push
rcrb
inc
fs
mov
xchg
push
cmp
aaa
lock
jns
jno
mov
inc
adc
mov
pop
add
mov
ret
sub
bound
add
test
aad
mov
adc
decb
add
fsts
imul
icebp
mov
inc
sahf
popf
mov
xor
ja
xor
mov
mov
fidivs
xorb
lods
shlb
jle
mov
sub
dec
pop
add
cld
lods
jp
fildl
sbb
adcl
lret
lds
scas
push
pop
pop
addr16
in
sub
sbb
xchg
roll
idivl
and
pop
push
je
jg
cld
cwtl
leave
mov
dec
sub
int
clc
shlb
push
sub
pop
inc
mov
rclb
shlb
mov
mov
sbb
adc
add
push
xor
inc
xchg
movsb
push
outsl
fcompl
test
arpl
dec
add
cwtl
xchg
and
aad
jno
lds
mov
mul
jno
scas
data16
nop
les
loopne
popa
test
inc
push
jge
push
movsb
pushf
inc
adc
sbb
mov
je
and
ss
ds
outsb
adc
es
push
lret
daa
cmp
or
inc
sub
mov
jae
pop
jg
or
ud2
inc
mov
and
cmp
jo
sub
popa
cwtl
cli
stos
dec
fs
cld
dec
add
aad
sbb
into
stos
rcr
mov
jae
pop
test
jb
rorl
cld
xor
mov
stos
push
int
lcall
and
adc
adc
sub
mov
push
pop
mov
jns
jmp
xor
fwait
adc
push
push
xchg
lea
loope
push
out
adc
arpl
sub
pop
es
cmc
jmp
out
lret
inc
aas
aam
mov
xor
add
jl
scas
test
dec
icebp
sahf
inc
mov
adc
adc
sbbl
mov
imul
lods
mov
add
lcallw
mov
xchg
and
lds
inc
nop
xor
add
sti
test
loope
ds
cmpsl
jae
adc
sbb
mov
out
scas
dec
mov
scas
test
adc
ds
dec
enter
es
call
jno
xor
sub
lret
xchg
fdivp
mov
pushf
cwtl
push
pop
mov
outsl
mov
insb
lcall
movsl
mov
imul
xor
jno
les
jecxz
sub
or
mov
mov
sub
repnz
leave
add
int3
test
sbb
out
push
sbb
fsubs
dec
jg
mov
sbb
xchg
push
out
xlat
mov
out
pop
inc
sbb
mov
sub
push
test
lret
inc
adc
xchg
js
addb
sbb
es
sahf
mov
xchg
and
push
jb
std
cld
imulb
and
pop
aam
lock
out
fsubs
out
push
and
jmp
dec
mov
cs
jmp
dec
movsl
sbb
in
in
fiaddl
movsl
sub
cwtl
je
dec
sbb
cltd
or
adc
rolb
mov
mov
arpl
leave
pop
or
aad
pusha
movsl
jo
lahf
xor
mov
fcompl
sub
mov
fidivrl
jne
cmp
cmc
lea
mov
icebp
test
fiadds
addl
mov
and
and
jle
stc
sbb
mov
hlt
outsl
mov
push
sbb
add
cs
repz
mov
mov
add
mov
call
lock
or
inc
shl
ja
adc
dec
dec
gs
call
mov
mov
cltd
inc
sarl
xchg
adc
daa
push
in
stc
cli
cmp
xchg
add
iret
stos
aaa
sbb
imul
cmpb
int3
stos
push
mov
rcr
fiaddl
stos
inc
dec
cld
adc
mov
rcrb
insb
popl
push
jno
ss
shlb
push
arpl
and
int
or
stos
lods
outsb
dec
fwait
jmp
jg
pop
push
sbb
out
cli
inc
lret
pop
jge
pop
jge
in
xchg
call
inc
mov
mov
call
call
ret
add
enter
mov
xchg
jno
lock
jae
stc
fiaddl
roll
cmp
lea
adc
jecxz
adc
or
fdivl
or
aad
adc
fmull
sbb
cmc
stos
ljmp
cli
mov
xor
inc
or
mov
mov
pop
cwtl
popf
dec
imul
xchg
repz
mov
or
jg
cmpsb
fdivs
sub
xchg
popa
insl
fdivp
dec
add
mov
sbb
nop
xchg
mov
add
inc
outsb
clc
mov
add
mov
jge
fsts
rcrb
cmp
push
adc
inc
xchg
ret
add
cmp
test
push
cld
pop
xor
daa
icebp
loope
out
or
xchg
and
data16
in
xchg
mov
cmp
stos
shlb
inc
and
mov
out
jne
xor
out
sbb
fcompl
or
cmp
das
mov
cmp
ljmp
out
data16
inc
adc
xchg
and
jle
clc
sub
sub
outsb
fwait
sub
jbe
pop
push
clc
negb
imul
ja
push
rcrb
lods
call
dec
adc
inc
inc
into
shlb
mov
nop
mov
movsl
lahf
xchg
std
xchg
jne
outsl
data16
ja
shlb
aam
ret
add
lret
cmpl
jo
xchg
pop
aad
sti
inc
push
xor
dec
insl
loopne
pop
bndldx
cmp
pop
jae
push
xchg
jnp
inc
dec
push
mov
shll
adc
jp
mov
dec
push
inc
arpl
sti
pop
incl
fdivl
sbb
adc
sbb
xchg
cmp
pop
jb
imul
mov
pop
cld
sbb
pop
xor
inc
push
sub
jo
adc
push
movsl
int
push
and
add
sbb
mov
sub
xor
lcall
and
leave
pop
add
aaa
pop
popa
int
imul
fstpl
mov
lods
into
mov
out
jge
aad
repz
xchg
fisubrs
mov
sbb
fldl
sbb
lock
jbe
inc
xchg
hlt
mov
jl
dec
adc
shl
pop
xorb
adc
movsb
xor
iret
mov
test
mov
fsubl
jl
pusha
xor
sub
ss
pushf
dec
jmp
sub
fimuls
lods
cmc
enter
adc
jmp
das
sub
push
mov
popa
lods
rdmsr
out
inc
inc
sub
jmp
jl
jne
push
adc
lahf
cmc
pop
gs
out
fiaddl
jmp
stc
hlt
xor
push
fildl
fs
pop
leave
scas
fs
mov
movsb
icebp
jp
jg
shr
add
cmp
nop
push
pop
mov
mov
mov
and
push
lea
int3
xor
cli
xchg
or
add
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubl
add
popa
inc
add
popa
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
arpl
movsb
arpl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
addl
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
inc
add
addl
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
test
movsb
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
