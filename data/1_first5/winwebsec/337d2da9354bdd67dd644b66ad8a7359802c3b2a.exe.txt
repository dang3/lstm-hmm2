repnz
das
jae
push
pop
xor
movsb
iret
sub
jne
out
add
or
xlat
mov
lds
cmpb
sbb
test
jno
stc
int3
mov
fcoml
stc
lret
jns
sub
xor
daa
xor
inc
mov
adc
and
or
loopne
adc
ss
fidivs
stos
xchg
and
jnp
pop
ret
lods
gs
stos
mov
sti
jnp
gs
lods
lcall
mov
mov
sbb
jmp
pop
cs
xor
add
pusha
adc
icebp
fiaddl
lret
out
mov
jecxz
pop
pop
movsb
popf
add
mov
inc
xchg
jno
sahf
es
in
lcall
push
test
push
or
fcmove
test
out
scas
mov
pop
insl
testb
lcall
mov
cmp
addr16
das
addr16
mov
scas
pop
add
mov
mov
or
jne
test
stc
stos
mov
ss
shrb
sahf
fbld
sub
ds
fdivrs
inc
and
dec
or
test
cmc
add
mov
in
or
sub
push
ds
or
mov
mov
scas
in
xchg
in
int3
leave
mov
dec
and
jle
lds
out
lret
pushf
push
loop
dec
mov
subb
mov
push
insb
and
in
fildl
pushl
and
xor
inc
pop
nop
outsb
cmp
loopne
push
dec
push
psrld
mov
inc
repz
sbb
push
inc
lcall
ss
mov
cmp
lret
rorb
pushf
jl
call
repnz
fidivs
ja
pop
out
cmp
fsincos
into
test
loope
fs
lock
xor
fmuls
data16
into
seto
mov
imul
pop
mov
in
call
inc
xor
test
inc
mov
and
cltd
out
xchg
mov
imul
lret
je
jbe
jmp
popf
dec
mov
pop
fsubs
dec
shrl
cmp
jo
std
aas
cltd
cld
push
cli
dec
jae
scas
movsb
lcall
enter
and
jno
xlat
pushf
xor
mov
dec
outsb
lods
out
call
hlt
pusha
hlt
shll
test
std
aad
xor
outsb
dec
shll
les
leave
fisttpll
and
lds
pop
test
push
fs
loope
cmpsl
in
aam
cmp
xchg
pop
mov
pushf
pop
dec
inc
insb
mov
cli
ss
xchg
xorb
lahf
int3
cmp
out
cmp
lret
scas
xor
inc
aam
dec
lods
or
lock
std
imul
pop
aas
add
stc
push
pop
pop
add
push
ret
shll
mov
push
push
enter
mov
xor
add
push
lret
jbe
mov
es
adc
cmp
mov
jns
sbb
sub
mov
xchg
fimull
mov
inc
sahf
rcrl
aaa
inc
xlat
mov
mov
lahf
repz
mov
xor
dec
add
cmpsl
or
in
into
loopne
insb
mov
dec
cmp
aaa
cmp
push
pushf
loop
adc
fmuls
cmp
movsw
incl
xor
push
repnz
mov
mov
out
push
fsubl
adc
lock
xor
xor
cmpsl
add
and
frstor
gs
sub
mov
pushf
leave
mov
dec
jl
imul
mov
jne
hlt
push
aam
xchg
add
fidivl
loop
cs
loopne
sbb
jo
cmpsb
loopne
fisttpl
and
xchg
push
push
and
test
jp
pushf
daa
sub
jg
push
cmpsl
pop
and
rorb
or
xchg
sbb
push
int
pusha
cmpsl
js
and
sbb
dec
push
lahf
mov
or
lds
jo
sbb
inc
cmc
mov
mov
les
dec
jnp
cmp
mov
mov
xor
cli
cs
and
and
xlat
clc
leave
push
jbe
push
rcrl
mov
in
mov
dec
mulb
dec
int
cmp
popf
xor
sti
in
mov
sub
add
sub
cmp
or
shl
pop
xchg
sti
inc
repz
push
movsl
negb
lahf
bound
jle
leave
ss
mov
adc
mov
in
push
testl
jnp
jns
jae
stos
inc
adc
or
sub
out
cmpsl
movsw
aad
in
xor
or
fwait
aad
cli
add
sub
movsb
stos
roll
mov
push
inc
and
pop
sar
inc
dec
rolb
adcl
jnp
and
add
adc
test
dec
adc
dec
lahf
add
sub
mov
push
sbb
dec
xchg
xor
jl
shrb
rcrl
dec
data16
out
xchg
icebp
dec
movsb
add
inc
pop
mov
push
adc
dec
push
and
test
xchg
pop
addb
dec
dec
pop
add
int
outsl
aad
sbb
fs
mov
adc
add
mov
push
cmpl
or
std
movsb
dec
jns
inc
jp
dec
pop
or
fldt
dec
xchg
mov
es
add
sbb
nop
roll
mov
or
jns
lret
xchg
sub
clc
xor
jmp
loopne
ljmp
sahf
test
sub
and
or
and
mov
cmpsb
cld
test
add
lock
or
sbb
mov
shl
orl
int3
push
cmpsl
dec
xor
daa
push
pop
push
jbe
xchg
sub
lret
imul
addr16
pusha
mov
sub
dec
popf
xor
jb
pushf
test
add
xor
cmp
lods
jge
add
scas
aad
sub
dec
and
cmc
pop
inc
adc
inc
shrb
mov
ret
xorb
cmp
sti
lods
dec
js
add
and
into
fisttpll
lods
pop
fsubs
xrelease
xchg
mov
mov
cmp
or
or
push
lds
add
xchg
xchg
shll
and
mov
add
mov
pushf
fwait
imul
xchg
push
outsb
mov
fidivrl
pop
enter
rcll
js
cmp
sarb
adc
pop
mov
xor
inc
shll
int3
xchg
jg
jns
jl
scas
mov
adc
pop
inc
ret
add
arpl
sub
pushf
sub
pop
adc
out
sub
lea
xchg
out
jno
aad
inc
dec
lret
mov
lock
jmp
stos
nop
or
adc
repnz
sbb
adc
cmp
add
stos
mov
mov
out
aad
jmp
cmp
in
ljmp
icebp
ljmp
push
arpl
loope
fs
xchg
xchg
cmp
mov
div
mov
xchg
push
sbb
sub
int
dec
pusha
xchg
mov
stos
mov
xchg
push
xchg
pop
cmp
insl
mov
ret
sahf
sub
dec
or
jae
sbb
sbb
std
xor
ja
pop
in
inc
inc
adc
xorl
enter
cli
popa
jl
sbb
xchg
pop
fadds
fwait
mov
sub
cmpl
es
test
cltd
sbb
insl
cli
gs
js
cmp
repnz
loope
and
inc
mov
aad
fstp
les
hlt
mov
pop
mov
mov
std
inc
or
rcl
mov
push
mov
mov
fists
cmp
cld
add
iret
adc
addr16
ljmp
cli
fildl
cmp
inc
dec
xchg
mov
xchg
jmp
sub
insl
inc
mov
fidivrs
inc
lret
jg
cmp
in
lret
pop
ret
ds
dec
push
sti
mov
ror
pop
std
mov
add
popa
ss
arpl
mov
clc
jnp
cmp
inc
sub
push
cmp
inc
adc
cmpl
xor
repnz
jb
ljmp
pop
aaa
ret
jnp
push
pop
xchg
ja
shlb
ret
stos
cmc
repnz
repz
mov
push
pusha
mov
fnstenv
and
test
and
pop
leave
xchg
addl
xchg
pusha
push
test
pop
addr16
pop
frstor
lds
hlt
adc
push
xor
in
cld
fldl2e
cltd
addr16
dec
xor
xchg
insl
psraw
sbb
stc
push
xchg
ret
popf
jp
mov
push
xor
dec
pop
mov
xor
push
dec
push
sbb
cs
andl
stos
dec
rorl
mov
outsb
pop
iret
push
pop
fstpt
nop
es
icebp
dec
loopne
movsl
inc
xlat
repnz
xor
mov
fnstenv
insl
mov
jb
jl
es
sub
ret
xchg
cltd
stos
and
cmp
cwtl
xor
leave
js
jno
and
lahf
dec
gs
mov
dec
insl
sbb
pop
movsl
bt
push
lods
jns
ja
loope
sbb
imul
sub
cwtl
xchg
out
push
jl
or
sub
pop
mov
scas
lret
sbb
push
inc
or
test
dec
fstps
cltd
mov
fwait
xlat
inc
and
in
jle
lret
clc
pusha
dec
outsb
jne
into
fcompl
loopne
imul
mov
stos
inc
sub
call
fbld
cmpsb
and
mov
call
imul
push
pop
ds
dec
jmp
dec
pop
xor
adc
enter
jge
adc
stos
dec
out
jae
xlat
test
test
sbb
out
pop
pop
add
adc
decl
sti
sbb
loopne
mov
mov
test
ds
mov
jmp
lods
dec
mov
mov
outsl
sbb
mov
mov
jp
ret
nopl
lods
sahf
hlt
sub
fucomip
fldl2e
cmpsb
scas
loop
xchg
adc
dec
cmp
xor
dec
dec
pop
pushf
mov
lods
movsl
iret
push
xor
loopne
fcoms
hlt
jmp
sbb
mov
lcall
push
in
push
test
scas
dec
jmp
cwtl
and
sub
lret
pop
inc
shll
aas
push
adc
sti
rcrl
ja
mov
subl
and
hlt
mov
sbb
jno
add
dec
add
int
ljmp
jns
jp
mov
loope
clc
mov
inc
aaa
push
dec
mov
fdivs
push
ds
mov
and
mov
xor
and
pop
jmp
or
xchg
in
in
pushf
rclb
xchg
fs
and
rcr
mov
je
push
mov
inc
cmpsb
pop
mov
dec
test
push
jp
icebp
push
inc
dec
mov
lods
test
arpl
das
insl
dec
and
sub
sbb
dec
imull
jmp
mov
test
stc
leave
ret
xor
in
sti
push
fxch
js
lea
fldcw
and
int
stos
push
cmpb
sbb
aaa
outsb
mov
adc
inc
lcall
push
mov
pop
pop
ljmp
shrb
orb
push
jg
add
hlt
adc
and
mov
cli
jmp
addr16
ror
in
or
adc
test
sar
fisttpll
inc
inc
iret
loop
das
scas
ja
iret
add
rolb
test
arpl
push
dec
pop
rcll
jnp
mov
sarb
enter
add
jecxz
dec
mov
sbb
jmp
and
fisubs
mul
sbb
push
loop
pop
sti
pop
cwtl
stos
adc
es
dec
xchg
idivl
mov
cmc
xlat
mov
xchg
jo
push
pop
inc
pop
sub
mov
imul
sub
dec
mov
cmp
xchg
add
or
ds
popf
mov
pop
dec
cmpsb
jle
mov
sarb
incb
lret
xchg
int3
adc
outsl
mov
lret
imul
stos
dec
shl
jecxz
and
std
push
cwtl
add
inc
xor
test
das
das
or
rcrb
sbb
add
pop
mov
cmp
js
jle
cwtl
adc
and
aaa
dec
test
les
inc
mov
cmp
dec
in
jg
outsb
loope
lahf
outsb
mov
lea
int
add
mov
fwait
popa
arpl
pushf
aaa
jecxz
xor
and
stos
lock
or
and
pop
push
adc
pop
lret
cmpsl
fnsave
fisubrs
sbb
icebp
jle
mov
cmp
idiv
mov
insl
sub
bound
cmp
iret
pop
cli
stc
movsl
cld
insl
cli
inc
cmp
in
push
out
lea
and
and
out
stos
out
inc
std
adc
cwtl
lahf
fs
int
or
jg
mov
and
imul
in
mov
int3
pop
scas
and
cmp
sbb
mov
into
mov
repnz
in
mov
cmp
ja
xchg
xor
and
out
jle
xchg
or
jno
xor
stc
mov
cmpsl
cli
push
mov
and
mov
xchg
ljmp
xchg
imul
nop
xor
fld
push
mov
rcll
jns
cmp
in
popl
aaa
mov
jecxz
jg
loop
push
sti
cltd
lods
push
add
shl
inc
lret
jl
lock
decb
xchg
dec
mov
ja
mov
jle
int
call
mov
sbb
ss
and
add
mov
aad
jl
sti
and
popf
in
pushf
pop
pop
scas
dec
mov
push
movsb
ljmp
scas
push
int3
xchg
add
in
orb
repnz
mov
notl
stc
ja
sub
dec
pop
fstpl
stos
arpl
pop
daa
xchg
add
test
inc
fcomps
ret
xchg
and
push
xchg
add
and
icebp
jmp
std
inc
mov
pushf
xor
les
fwait
jg
dec
sub
leave
add
je
test
out
xchg
sbb
and
and
add
aas
jp
aam
jmp
dec
push
movsl
lret
rol
les
mov
xchg
mov
fisttpl
cmp
dec
adc
inc
push
dec
ds
mov
pop
scas
jae
cmp
out
inc
push
int
pusha
imul
sub
imul
mov
lods
push
dec
mov
mov
out
es
add
mov
push
dec
lea
ret
adc
pusha
out
fsubrl
or
jb
aam
dec
scas
insl
and
xchg
push
out
hlt
shrb
push
loope
in
jnp
dec
lret
dec
cmp
jb
mov
shll
xor
inc
ljmp
push
mov
jnp
inc
pop
cmc
mov
add
mov
dec
dec
xor
dec
lods
dec
insb
or
sbb
call
mov
adc
xchg
jae
mov
pop
aas
lahf
inc
ljmp
xor
sbb
leave
fsts
push
std
or
cld
cld
icebp
out
out
cld
lods
fldt
lea
imul
add
scas
test
mov
lods
xchg
add
subb
xchg
fldt
imul
add
sti
mov
push
adc
in
inc
jmp
lcall
lock
es
dec
push
fcompl
cmp
daa
adc
fucomi
shl
test
xor
popf
ret
sbb
push
jae
iret
out
push
pop
adc
push
icebp
lahf
adc
out
neg
aam
loopne
xor
aaa
add
and
pop
mov
cmp
pusha
jl
and
and
incl
ja
pop
insb
das
xchg
xor
call
mov
pop
dec
mov
inc
sahf
movsb
dec
mov
mov
int3
stc
mov
clc
and
or
sbbl
rclb
push
aaa
or
dec
xchg
mov
xor
push
stc
push
hlt
ret
pop
jl
inc
and
les
andl
push
mov
xor
lods
add
xchg
aas
mov
mov
test
add
imul
dec
add
pusha
test
fs
std
shrb
in
cmp
sub
xor
xchg
rcl
ljmp
pop
mov
ljmp
xchg
adc
mov
sbb
aas
mov
sbb
or
dec
inc
sub
inc
push
jmp
stos
insl
sub
inc
sbb
xchg
cmp
jae
clc
or
and
adc
lods
xlat
je
mov
mov
mov
fildll
out
sti
sahf
stos
subb
inc
mov
repz
mov
daa
pop
int
or
rcrb
add
push
pop
loopne
rclb
and
aas
jg
outsl
js
cmpsl
mov
xchg
repz
lods
js
jnp
mov
sbb
xlat
xchg
mov
jne
es
mov
cmp
cwtl
xchg
ficompl
scas
dec
mov
and
rclb
lahf
and
cmpsl
mov
push
jno
adc
cmpsb
movsl
enter
jnp
cld
pop
xor
jo
or
int3
pop
ds
and
xchg
aam
jp
loope
mov
xchg
mov
push
jecxz
cli
lds
or
aad
insb
mov
cmpsb
pop
adc
daa
mov
arpl
aam
dec
xlat
mov
ja
int3
cmp
mov
jo
push
movsl
cmp
push
movsb
mov
and
in
cmpsl
mov
shll
sti
add
or
fs
xchg
notl
ret
outsl
inc
insb
or
push
inc
mov
inc
xlat
sub
fchs
enter
and
int3
xor
push
ja
test
hlt
adc
in
shrl
xor
xchg
enter
or
jb
xor
adc
pop
fmul
add
clc
pop
repz
testb
inc
mov
lods
shll
popa
push
inc
scas
lret
pop
orl
sub
and
pop
movsb
ds
repz
mov
mov
loope
or
iret
popf
mov
push
mov
cmpsl
jo
pop
icebp
int3
cli
sub
jmp
or
lods
jg
inc
mov
mov
push
mov
push
sbb
push
nop
test
cltd
lret
or
mov
jecxz
insb
imul
cmp
and
mov
pop
adc
lods
push
xlat
repnz
pop
pop
repnz
data16
test
mov
jmp
lds
xlat
fwait
addb
mov
or
jle
sub
mov
dec
inc
sbb
cmp
or
jp
sub
addr16
nop
inc
xor
inc
lret
sub
sahf
scas
xchg
aad
lods
arpl
es
push
ret
push
aad
shrb
adc
out
jg
mov
mov
jmp
or
data16
inc
jl
sub
sbb
nop
movsl
out
dec
lret
jl
lea
pop
or
lods
and
int3
adc
push
mov
scas
fs
std
arpl
stos
mov
cmp
cmpsb
pop
cmp
repnz
cmp
loope
or
xchg
cli
fildl
rcl
fcoms
cld
dec
push
repz
daa
das
imul
aam
push
dec
inc
fcomps
adc
into
jmp
jmp
iret
jae
sub
cltd
jno
mov
mov
addl
mov
mov
jae
pop
data16
fisubl
ficompl
lret
xchg
inc
orl
cwtl
pop
xchg
add
adc
and
push
mov
subl
inc
push
fnsave
outsb
jmp
lahf
jae
in
xor
xchg
outsb
test
cld
mov
dec
je
cmp
sti
test
xchg
je
cmp
cmp
or
in
insl
adc
dec
mov
jle
adc
dec
xchg
push
xchg
cli
mov
xchg
add
test
sbb
push
loopne
xor
and
sti
enter
fcomp
cmpb
cli
stc
pop
xchg
mov
pop
cmpsl
mov
test
xchg
arpl
clc
push
xor
lcall
ficompl
pop
insb
xor
aas
movsl
push
aad
sahf
subl
mov
testb
lods
sub
outsb
test
push
movsl
xchg
or
lcall
int
aaa
dec
pushf
push
add
lcall
lods
push
ret
lods
aad
out
scas
enter
xchg
out
or
mov
push
cmp
mov
repz
jge
icebp
mov
push
cwtl
xchg
jl
arpl
mov
inc
hlt
pop
in
cmp
das
pop
mov
add
cmp
sbb
push
xor
inc
jge
jbe
dec
lcall
dec
pop
repnz
pop
push
out
mov
mov
xor
sar
int
test
scas
repz
cmp
push
cli
lret
push
xchg
xchg
sbb
add
cltd
mov
int3
adc
fldl
scas
cmp
jne
ret
in
iret
out
insb
jmp
mov
loopne
stc
xor
popa
xor
push
fimull
notl
cmp
fst
clc
and
dec
mov
mov
neg
pop
aad
test
test
sbb
insb
xor
mov
xor
fmuls
stc
out
in
inc
es
jne
rcll
push
add
std
add
xchg
movsb
stc
scas
dec
shrb
aam
or
push
xchg
lods
pop
mov
inc
out
out
sub
dec
pop
rcl
jecxz
sbb
xor
adc
enter
mov
pusha
xor
jmp
mov
push
ret
subb
pop
jb
ret
push
push
je
xor
out
decb
push
outsl
outsl
push
push
xchg
dec
xchg
push
into
xlat
out
aam
or
mov
in
ret
fs
test
and
add
sbb
mov
in
test
cld
test
in
out
nop
or
mov
push
xchg
add
addr16
je
cmpsb
dec
popf
stc
mov
sbb
mov
out
ja
rorl
rcrb
testb
cmpsb
or
mov
dec
sbb
and
ret
mov
mov
mov
mov
or
jno
pop
or
pop
cmpl
fsubs
jp
outsl
dec
xor
inc
lods
loopne
les
dec
sbb
les
jmp
mov
stos
dec
lcall
jns
fistps
xor
dec
xchg
add
push
aas
outsl
clc
push
xlat
rol
adc
pop
out
push
cmp
adc
or
test
push
jae
xor
in
mov
and
imul
aaa
push
and
lahf
sub
lds
xchg
sar
fcomi
jne
sbb
fcoms
jbe
in
pop
in
sbb
shll
or
jb
push
sub
push
test
dec
loop
fadds
xchg
cmpsl
add
insb
popf
mov
scas
jge
shll
sti
lds
jae
lods
inc
cmp
aas
push
out
or
gs
pop
mov
fs
jb
adc
xchg
out
pop
sub
test
es
mov
pop
cmc
sbb
pop
enter
xchg
in
jb
inc
ljmp
movsl
fcmovnb
lret
push
dec
xchg
fadds
lds
fs
bound
push
ss
dec
insb
int
fistps
aaa
mov
mov
jg
cltd
daa
push
xlat
push
shll
push
fnstcw
cmp
jnp
xchg
push
mov
lds
test
clc
jns
or
jp
xchg
out
and
imul
sub
nop
je
inc
fists
mov
push
test
cmpsb
cmp
insl
jb
jbe
js
mov
subb
push
insb
mov
cmpsb
jne
push
pop
push
and
rorl
ja
fs
loope
rorb
pop
out
push
call
mov
cmpb
daa
pusha
dec
fs
jl
xor
mov
cmpsb
daa
jbe
dec
push
or
sub
adc
add
push
sti
sbb
mov
mov
mov
loop
jne
jle
int3
dec
mov
mov
mov
inc
js
imul
lea
ror
or
aas
or
imul
pusha
sbb
jmp
cmp
push
mov
shrl
sub
les
iret
daa
lock
lods
out
stc
dec
xlat
lret
jnp
pushw
adc
or
sbb
mov
sub
mov
inc
xor
pop
fcomp
push
mov
dec
outsb
xor
xor
stos
rorl
stc
lea
mov
icebp
test
cltd
ss
js
and
mov
cmc
xchg
pusha
xchg
add
pop
pop
xchg
mov
xor
sub
cmp
cmp
ljmp
sbb
cmpb
push
in
lret
mov
aam
inc
sub
insl
and
adc
mov
fs
jae
mov
sub
insb
mov
mov
out
jae
in
push
cli
lock
dec
mov
mov
mov
xor
popa
and
test
push
lds
mov
dec
call
cs
imul
lret
sub
mov
rolb
jl
in
movsb
sbb
push
in
shll
adc
rcll
cmp
cmpsl
push
cmp
mov
cmp
outsb
dec
push
jnp
adc
add
jbe
icebp
mov
mov
stc
icebp
sbb
mov
in
push
jbe
mov
jg
outsl
cmp
jae
loopne
adc
loopne
mov
or
cmp
dec
leave
push
and
rorb
pop
mov
jne
lea
or
leave
xor
xchg
mov
mov
lret
jmp
mov
jp
pop
pop
pop
fstpl
test
in
inc
ds
push
jns
negb
xchg
gs
aaa
icebp
popf
xor
pop
mov
xor
sub
xor
push
icebp
jbe
aas
cmpsl
movsb
les
xchg
push
clc
dec
jge
push
movsl
repnz
sbb
push
clc
sub
ss
loopne
outsb
idivl
cmp
adc
cmp
aas
push
gs
mov
mov
leave
fwait
adc
cmc
in
in
or
aam
outsl
test
sahf
add
stos
jge
fucomip
out
data16
insb
aas
cmc
in
pop
lret
cmp
cmp
cmpsl
sbb
jle
and
cs
fcomp
mov
mov
jbe
loop
or
xor
shl
mov
adc
xor
in
fwait
mov
mov
fdivl
fcomip
adc
xchg
stos
mov
ficompl
push
cwtl
inc
jb
pushf
cwtl
xor
jb
iret
jle
or
push
sub
mov
mov
popw
dec
lock
out
push
dec
cmc
je
jne
xor
fld
lods
or
incl
cmp
inc
mov
inc
enter
repnz
fs
mov
mov
loope
shl
jmp
or
mov
inc
je
or
dec
inc
shl
lcall
pop
or
fwait
pop
movsl
push
sub
fs
sarb
mov
or
or
inc
lods
scas
clc
imul
sbb
clc
loope
dec
fcoml
add
rolb
jnp
sbbb
outsb
lahf
nop
ficoms
mov
dec
pop
out
outsb
adc
mov
test
jg
dec
sbb
xchg
dec
jnp
cmp
daa
and
rcrb
repnz
inc
inc
loopne
mov
xor
dec
mov
ja
or
arpl
push
addl
and
inc
xchg
mov
jns
xor
sbb
fwait
test
or
pop
outsb
xchg
test
mov
cld
loopne
add
repz
movsl
mov
xor
mov
push
iret
ljmp
fldenv
rcrl
pushf
and
loopne
xchg
sub
xchg
sub
xchg
xchg
mov
mov
xchg
les
test
movsb
iret
push
out
flds
mov
dec
xor
and
movsl
outsl
mov
sub
mov
ss
imul
and
and
mov
cmp
outsb
shl
add
inc
jno
xor
repnz
ljmp
push
fildl
daa
stc
or
mov
addr16
fistpll
pop
adc
push
pop
pop
ret
mov
cmp
inc
call
ret
in
sub
push
cld
aas
and
mov
sbb
decb
adc
xor
test
popf
inc
inc
or
xchg
inc
xor
jecxz
insb
fwait
dec
jp
pop
outsl
jl
dec
inc
cmp
cld
add
hlt
xchg
lcall
nop
or
jge
or
imul
sbb
notb
and
cmp
int
xlat
sub
dec
inc
arpl
es
pop
divl
mov
add
mov
ds
icebp
rcrb
not
and
test
and
inc
sbb
out
mov
xchg
std
push
xor
ret
das
fmull
sarb
enter
lahf
sahf
je
sbb
xchg
mov
xor
fisttpll
cmc
sub
adc
aas
mov
mov
ret
test
sbb
and
push
cltd
jmp
dec
cmpb
nop
dec
xchg
and
pop
xor
iret
xchg
dec
dec
xor
sub
movsl
cmc
xor
aad
xlat
jg
in
xor
pop
inc
cltd
mov
js
or
loope
jle
mov
jecxz
test
mov
sub
mov
push
repnz
int
cmp
add
mov
ljmp
testl
xchg
pop
lret
cmp
aas
imul
inc
loop
xor
aam
jnp
cli
jno
add
and
mov
cli
pop
pop
push
rcl
mov
push
cld
add
test
or
repnz
cltd
jecxz
subb
cwtl
imul
pop
popf
neg
or
mov
bound
repnz
divl
xchg
lret
fwait
xchg
rclb
xchg
inc
daa
and
xchg
mov
inc
gs
jno
dec
sbb
clc
and
pushf
xlat
cwtl
in
xor
ljmp
jae
repz
daa
mov
xor
enter
lcall
sbb
cmp
lods
jp
stos
loope
daa
or
pop
ss
adc
or
inc
mov
pop
fcmovb
imul
mov
int3
cmc
xor
fsubs
lcall
cmpsl
lea
insb
adc
and
push
dec
jg
mov
pop
stc
mov
add
loopne
lea
outsl
movsb
shrl
out
and
inc
mov
jle
mov
leave
cs
cmovge
sbb
cs
call
and
aas
push
sub
rclb
adc
sbb
dec
jge
jp
ds
xlat
push
xchg
dec
pop
fwait
sub
icebp
jmp
xor
stos
xchg
adc
sub
popf
fimuls
hlt
pop
sub
fcmovu
fisubrs
test
std
mov
icebp
dec
xchg
mov
stc
in
out
cmp
inc
push
insl
stc
mov
je
jge
jb
int3
dec
add
int3
daa
or
sub
cmp
popf
cmp
and
push
jnp
addb
aaa
pop
sahf
ds
cmc
repnz
sbbb
mov
jecxz
sbb
and
movl
stc
adc
xor
xchg
pushf
cmp
dec
fucom
and
ret
inc
jge
xchg
inc
dec
and
adc
movb
cmp
and
daa
shr
icebp
cwtl
lock
xlat
lret
cmp
sbb
dec
xor
push
xor
jnp
push
out
aad
xchg
loop
repz
sbb
mov
mov
or
xchg
int3
out
lret
push
and
sub
add
out
sbb
mov
mov
pop
mov
dec
xchg
shll
cld
cmc
cs
sbb
orb
popa
aam
add
test
cmp
shlb
cwtl
mov
ss
cmp
lds
mov
cmp
jl
fists
xchg
ret
lds
std
pop
outsb
sbb
add
faddl
cmp
jmp
mov
jl
outsb
icebp
rcrl
mov
xor
popa
out
xchg
in
out
mov
adc
pop
js
mov
fwait
bound
adcb
mov
adc
add
xor
aaa
repnz
mov
gs
outsb
shlb
dec
dec
cmp
sub
std
cmp
or
xor
lret
mov
sbb
pop
fldcw
mov
or
xchg
push
xor
sub
subl
or
in
lahf
xor
rcrb
arpl
out
pop
gs
push
xor
or
jg
mov
test
jnp
fsubrl
jo
mov
push
sbb
inc
test
outsb
jne
jnp
aam
xor
pop
mov
fdivrs
sahf
sub
and
ljmp
sahf
fucomi
sti
cmp
idivb
fldl
xor
fmul
out
stos
repnz
inc
xchg
xchg
pop
sub
stos
ljmp
dec
dec
and
add
or
mov
inc
mov
jae
outsb
push
jl
cltd
sub
xchg
lds
pop
mov
enter
push
jae
xchg
orl
out
xchg
mov
inc
addr16
out
stos
clc
movsb
pop
add
je
xor
push
pmullw
decb
out
rcrb
int3
inc
xchg
sub
leave
dec
call
scas
test
lret
pusha
sti
pusha
loop
inc
adcb
sbb
add
std
pop
bswap
or
in
or
mov
mov
shl
jge
cs
lds
or
adc
sub
and
aas
ficoml
es
test
cwtl
sbb
add
dec
mov
jbe
adc
jae
aas
dec
shlb
xchg
adc
xchg
push
jmp
pusha
mov
mov
pop
arpl
movsb
test
mov
xchg
mov
sub
mov
add
xchg
cltd
adc
cmp
cmp
imul
sub
sub
insl
mov
mov
jecxz
inc
clc
popf
push
lret
mov
loope
push
nop
lret
stc
xchg
fcompl
in
mov
hlt
jecxz
jae
enter
pop
test
test
out
push
cmc
add
es
mov
push
stos
or
xchg
dec
push
adc
pusha
sbb
int
cwtl
lock
sbb
imul
xchg
mov
xor
and
and
pop
les
add
push
in
dec
cwtl
pop
cs
jns
out
push
push
or
mov
out
fs
xchg
lds
mov
stc
xchg
push
ljmp
inc
xchg
xchg
mov
xor
and
outsl
cmpsb
repnz
jmp
inc
push
lcall
clc
sar
inc
nop
jmp
mov
pop
mov
insb
loop
scas
jne
lock
push
lods
sub
and
ret
push
mov
sbb
pop
sbb
inc
and
pop
and
fsubl
inc
xchg
mov
mov
mov
in
adc
js
out
push
cmpsl
shlb
fsubl
sbb
repnz
mov
cmp
ret
pushf
nop
xor
stc
sub
push
hlt
pop
cmp
pmullw
arpl
stc
add
cmp
loope
outsl
push
cmp
nop
dec
adc
jmp
mov
or
out
hlt
xchg
push
cmp
out
test
push
subb
ljmp
inc
out
or
pop
in
jecxz
fcmovnu
stos
rcr
dec
in
aas
mov
adc
jge
insl
into
stos
leave
repnz
jbe
inc
or
cmpsl
scas
loop
lods
cli
scas
fidivl
jmp
pushf
lsl
jmp
sbbl
sbb
arpl
mov
addr16
push
test
or
fildll
repnz
cmp
mul
or
scas
jmp
sbb
cmp
loop
cli
lret
cli
imul
push
inc
cmp
pop
imul
or
cmpsl
mov
mov
pop
pushf
test
out
or
or
int
or
and
xor
mov
and
sbb
and
xchg
fnsave
cmp
ja
js
fwait
lahf
shrb
mov
jnp
jae
jmp
adc
les
test
data16
test
aas
mov
xchg
adc
push
sti
ljmp
imul
out
repnz
fcompl
loope
mov
push
mov
arpl
divb
mov
test
ret
mov
add
repnz
cmp
sub
outsb
loope
jge
cmp
push
movsl
testl
addr16
ljmp
mov
stos
jbe
hlt
cmp
btr
shrl
std
test
dec
or
xchg
xchg
negl
enter
xchg
xchg
xchg
hlt
divb
cli
aaa
frstor
or
stos
add
sbb
scas
cmp
inc
fiadds
sbb
popa
rol
push
xchg
mov
xor
cmc
data16
mov
inc
repz
pop
test
cwtl
jp
ljmp
push
out
fcompl
ljmp
aaa
loope
fcoml
push
orl
xchg
add
imulb
fwait
push
test
cmp
repnz
or
mov
push
cmpsl
pop
incb
xchg
adcb
incb
and
and
enter
sbb
inc
xchg
clc
cmpsl
inc
jns
mov
xor
lahf
xchg
insl
add
mov
cs
cld
divl
or
and
sub
add
insb
sbb
push
stos
repz
xchg
xor
bound
shlb
mov
dec
sub
mov
mov
dec
adc
lods
sbb
cmp
push
or
adc
push
pop
xorl
scas
pop
mov
lret
pop
adc
sti
and
mov
aaa
cmpsl
adc
lahf
insb
mov
sahf
xchg
push
aam
sub
js
pushf
lods
adc
ja
pop
sub
cmp
cmp
cmpsl
int3
push
mov
sbb
jecxz
outsl
dec
sbb
ds
jl
pop
lea
aam
popf
cltd
xchg
loop
push
imul
cmp
adc
test
das
dec
ret
in
pop
cs
fstps
or
das
adc
icebp
scas
inc
xor
xor
aaa
cmpsl
jmp
sub
ret
jge
adc
pop
addr16
scas
adc
mov
mov
daa
add
mov
and
popa
fdivs
push
and
call
xor
cmp
adc
shr
mov
movsb
out
sub
fimull
sub
lods
jl
int
jnp
repz
push
cld
pop
mov
jmp
mull
repnz
push
inc
dec
out
sub
push
ja
mov
add
inc
dec
inc
xor
mov
popf
pop
adc
jg
into
in
sub
aaa
xlat
repnz
mov
stos
rcl
cmp
cmpb
aaa
push
push
rcl
and
xchg
ret
leave
popa
inc
rcl
add
repz
and
push
fnstcw
aas
hlt
aas
or
add
push
jbe
mov
jecxz
shrb
xchg
mov
icebp
lahf
outsl
push
xchg
loop
cmp
xchg
pop
idiv
ret
hlt
es
sub
pop
sub
add
mov
adc
fbstp
mov
test
enter
mov
xchg
mov
sub
add
mov
jb
adcb
in
movb
addr16
iret
inc
es
leave
mov
mov
jnp
cmpb
push
ret
xlat
inc
xor
mov
push
pop
pop
jge
mov
push
push
std
jbe
sub
inc
jg
ljmp
ret
and
sbb
das
dec
push
inc
addr16
lods
sti
outsl
mov
cmc
push
int
repz
nop
or
push
xchg
inc
pop
xlat
mov
sub
loopne
push
jb
js
push
sbb
inc
and
add
out
repz
ret
les
mov
jl
inc
imul
and
pop
push
inc
sbb
dec
in
nop
or
mov
mov
push
mov
je
dec
cmp
push
cmp
in
cmp
and
sbb
jns
inc
pop
outsb
repz
sub
addr16
test
adc
sbb
insl
aad
sub
fs
lds
scas
mov
push
sbb
ds
js
scas
fnstcw
mov
or
outsl
jbe
repz
jbe
adc
stos
cld
jle
sbb
test
add
cmc
xor
gs
pop
jno
in
jno
repz
and
icebp
std
fidivl
jp
out
push
lea
je
lods
orl
shll
clc
inc
shr
dec
dec
mov
popf
inc
xor
push
mov
clc
inc
sbb
jecxz
mov
pop
jle
pop
stc
pop
outsb
xlat
icebp
jns
mov
mov
jbe
mov
sub
fidivrs
into
dec
push
jbe
jmp
mov
in
push
sbb
outsb
pusha
lcall
mov
repz
jns
pop
xchg
rol
inc
dec
xorl
jg
mov
xchg
and
xor
jo
les
ljmp
cltd
nop
jmp
jns
outsl
ret
lods
sahf
lahf
mov
pop
adc
sti
mov
mov
sbb
mov
ret
fsts
aam
clc
sbb
dec
or
xor
aas
outsb
mov
inc
out
sub
imul
shlb
sbb
sahf
les
sahf
dec
in
sti
mov
fsts
cltd
pop
lods
inc
jecxz
insl
dec
mov
mov
push
addr16
sbb
or
sarb
cli
inc
cmp
fwait
or
mov
cmp
cs
cmp
xchg
pop
ss
dec
mov
shrl
xchg
sub
adc
and
jecxz
dec
sahf
jns
cmp
jg
jo
test
testl
mov
icebp
mov
mov
inc
adc
enter
pop
popf
jne,pt
push
push
outsb
psubq
xor
cmp
mov
loope
push
iret
movsl
fistpl
cld
cmpsl
addps
jecxz
push
ljmp
imul
xchg
sahf
aad
add
fsubl
sub
fdivp
push
shll
arpl
dec
xor
loop
aad
mov
or
aas
cmp
rorb
sar
xor
add
push
mov
out
popf
ret
xor
into
js
test
xchg
pop
add
mov
jecxz
pop
sbb
dec
push
push
cmp
add
pop
nop
pop
cli
insl
insb
rcll
mov
sub
pop
test
shrl
js
daa
cs
ret
jbe
test
xor
jbe
aas
inc
repnz
mov
inc
jg
and
ret
pop
in
mov
mov
add
jns
mov
call
mov
mov
or
mov
pop
xchg
mov
inc
add
add
jp
loopne
push
jle
jae
rcl
xchg
inc
in
xor
add
into
xor
xchg
ljmp
add
rcr
addr16
out
push
das
inc
lods
jo
xor
gs
cmc
stos
aad
lcall
dec
repnz
fidivl
scas
icebp
adc
xchg
jo
cmpsb
daa
mov
sub
mov
icebp
scas
aad
stos
pop
insl
fdivs
inc
mov
mov
jb
mov
jp
in
push
stos
js
enter
popa
jo
jne
mov
iret
or
jmp
mov
nop
pop
inc
repz
ja
push
shlb
mov
mov
jp
push
orb
mov
movsb
test
xchg
adc
orl
jp
or
lcall
mov
js
ret
dec
push
fldlg2
sbbb
subl
mov
add
mov
loop
sub
lods
add
popf
fnstcw
cmpsl
cmp
push
xchg
rclb
sti
and
sub
pop
cmp
inc
lret
and
dec
jbe
test
cmp
cmpsl
sbb
flds
aam
and
or
aad
adc
aaa
std
sub
sbb
or
or
xchg
test
out
inc
fbld
mov
leave
clc
mov
add
cs
ficoml
fwait
test
cmp
std
xchg
dec
pop
enter
or
sbb
dec
jle
xchg
push
dec
push
sbb
das
aas
addr16
jnp
xchg
xor
nop
sub
pop
std
fsubrp
jecxz
pop
gs
in
add
cmpsb
inc
mov
sbb
rol
and
aam
add
andb
add
imul
xchg
nop
cmovb
xchg
mov
andl
mov
cmpsl
add
sahf
lock
mov
decb
mov
icebp
xor
push
lods
inc
mov
pop
addb
adc
movsb
mov
fwait
imul
jp
ljmp
sbb
addr16
sbb
xor
test
addb
insl
cwtl
sahf
xchg
and
fs
mov
fisttpl
inc
mov
and
adc
andl
ret
jg
or
nop
inc
xor
dec
cld
dec
cmp
sub
adc
pop
sbb
xor
cmpsb
sub
or
fld
jg
shll
pusha
cmpsl
mov
fstps
push
fsubs
or
sar
aad
sbb
dec
mov
orb
addl
lcall
inc
sub
pop
mov
add
jo
adc
out
sbbb
fcomi
icebp
and
test
mov
mov
cmp
or
cmp
fsubrs
xor
push
aad
rcrl
mov
and
mov
xchg
sbb
cltd
and
mov
mov
push
cmpb
arpl
aaa
out
add
into
pop
and
mov
aad
sbb
movsl
rorb
dec
lock
testb
xchg
sbb
iret
daa
rorb
outsl
enter
push
repnz
dec
pop
arpl
pop
push
sti
jo
sub
out
lcall
inc
mov
push
leave
xor
cltd
sbb
imul
sbb
or
xor
in
jns
xlat
jmp
mov
pushf
dec
enter
pop
or
mov
jns
dec
mov
pushf
dec
mov
cwtl
mov
adc
and
mov
adc
mov
sti
and
mov
xor
mov
inc
repnz
cmp
push
movsb
xor
dec
in
out
fidivs
and
ret
jns
aas
repz
out
or
fisttpl
cli
sbb
mov
fsubrs
dec
les
mov
inc
push
adc
adc
mov
call
shll
jle
pop
or
cli
popa
mov
loop
cmp
xchg
pop
and
mov
stos
jnp
loop
out
test
sub
ret
imul
mov
loop
xor
mov
shlb
adc
idivl
ror
push
movsb
cmpsl
or
lcall
mov
sbb
repnz
push
sub
loope
dec
icebp
mov
cmpsb
fs
fs
scas
dec
pop
xchg
or
flds
sub
mov
xchg
hlt
iret
out
iret
adc
loopne
pusha
inc
pop
sbb
cmpsb
mov
insb
ret
xchg
and
and
push
rol
jne
pop
aaa
movsl
xor
cmp
mov
cs
cltd
or
dec
gs
mov
pop
test
lock
les
in
mov
push
mov
mov
scas
aas
jns
cld
xor
nop
in
repz
lock
gs
xchg
jecxz
cmpsl
dec
dec
out
cmp
lods
movsl
fwait
pusha
adc
cs
test
cmp
bound
stos
mov
xchg
jecxz
mov
loop
test
sbb
lret
cmp
dec
dec
xchg
bound
inc
arpl
stos
sub
mov
popf
xchg
insb
movsb
mov
inc
scas
repnz
push
int
pop
inc
rcll
sub
pop
sbb
jp
mov
insb
jg
xchg
mov
popa
push
rcl
notb
pop
push
shll
mov
jb
jbe
imul
roll
mov
and
push
repz
or
out
in
das
call
scas
fnstenv
xor
test
test
dec
add
shrl
adc
daa
mov
inc
jecxz
fwait
mov
addr16
xchg
inc
das
push
push
jl
imul
ljmp
bound
push
mov
sub
rcrb
cmp
mov
ja
jge
lods
inc
notl
lock
jecxz
mov
adc
mov
jbe
sub
or
das
add
in
cwtl
scas
out
mov
xchg
pop
mov
jg
fidivs
pusha
outsb
add
rcll
mov
test
mov
and
pop
and
jp
inc
xorb
imul
and
cmpsb
mov
mov
xchg
ljmp
popf
push
xchg
xchg
popa
inc
lcall
lea
and
outsb
mov
mov
pop
push
repz
sub
xor
xchg
and
or
lcall
addr16
jno
xor
push
add
pop
ja
movsb
stos
scas
fldcw
and
sub
push
xchg
mov
and
xchg
mov
imul
inc
int3
mov
ss
imul
lock
sti
sti
mov
out
cmp
into
and
inc
push
pop
xchg
les
mov
jl
jmp
mull
rcrl
sub
shl
les
scas
out
lea
mov
jae
pushl
adc
ss
or
ret
push
inc
mov
mov
cli
cltd
jne
in
cmc
fldcw
xlat
into
jne
jno
repz
shll
cs
sti
xchg
jecxz
adc
inc
add
arpl
mov
pop
inc
mov
out
jbe
loop
je
dec
xlat
nop
inc
jecxz
add
mov
sub
inc
mov
call
call
push
mov
mov
pop
xchg
sub
jno
mov
cmc
jnp
jp
inc
imul
and
inc
test
mov
shl
or
orb
jns
mov
mov
imul
fildll
clc
push
jle
mov
cld
hlt
aas
fists
std
add
ja
insl
pop
mov
testl
insb
jmp
xor
mov
pop
daa
mov
mov
xchg
in
enter
pop
xchg
inc
adc
pop
jmp
or
notl
push
and
std
rclb
pop
sbb
les
mov
pop
push
or
xor
outsl
int3
xor
jge
mov
aam
ficomps
pop
shl
mov
loope
dec
xor
ret
push
xor
lds
stos
sub
pop
adc
fcmove
sub
ljmp
pop
jbe
mov
cwtl
int3
loop
sbb
arpl
push
stos
call
mov
mov
sbb
sbb
sbb
jle
mov
es
les
or
or
mov
das
loope
leave
inc
push
xor
enter
cltd
and
dec
icebp
or
out
mov
dec
add
fimull
punpckldq
inc
push
or
jbe
pop
movsl
cs
push
fcomps
rcll
xor
sbb
xchg
mov
sti
or
icebp
fdivl
cmpsl
inc
test
adc
inc
ret
stc
lods
jnp
test
inc
lahf
push
mov
cld
or
jge
inc
enter
add
adc
pushf
pop
js
mov
jne
add
inc
inc
dec
push
lock
xor
xchg
data16
gs
and
mov
scas
push
lods
rol
or
push
je
scas
dec
xchg
mov
mov
or
imul
les
pusha
in
clc
stc
out
jmp
mov
call
ljmp
and
jae
or
test
jne
out
movsl
sahf
outsl
imul
jg
push
or
jns
mov
shlb
aas
mov
jo
mov
pop
inc
jo
sti
adc
scas
or
adc
jne
das
test
popa
int3
outsl
dec
push
in
cmp
addr16
jecxz
inc
ret
icebp
or
jle
push
jl
sarb
xorl
jb
xchg
in
mov
mov
mov
test
and
or
popf
adc
fiadds
mov
jae
mov
nop
hlt
jmp
into
iret
or
add
loope
in
dec
pop
xorl
lock
push
adc
mov
dec
push
jne
fisttpl
xlat
movsl
movsb
lahf
icebp
loopne
push
test
popf
inc
push
bound
dec
cs
loop
test
adc
je
negl
pop
mov
clc
sub
jne
dec
popa
push
push
mov
call
pop
pusha
fwait
mov
subb
mov
jg
xor
repz
negl
add
jbe
clc
les
mov
sub
sub
clc
cltd
int3
call
inc
pop
push
scas
sbb
cwtl
xchg
inc
stos
push
jle
pushf
in
push
je
xchg
loope
add
dec
jp
gs
jp
add
notb
mov
movsb
add
mov
inc
cmp
mov
or
add
enter
enter
enter
aam
mov
ret
xor
mov
rorl
test
xchg
mov
aas
jle
int
lea
dec
dec
scas
cli
arpl
adc
xchg
adc
pop
push
call
sarb
rclb
fildl
xchg
pop
out
add
or
push
cli
call
aaa
add
test
jecxz
xlat
inc
sahf
mov
and
lret
sbb
xor
lea
jp
pop
cmp
insb
cmp
add
ret
mov
outsl
push
das
push
mov
jge
cmp
push
lahf
and
jne
pushf
movl
lret
sti
jge
pop
or
std
push
inc
out
adc
out
mov
add
xchg
and
mov
sub
outsb
cltd
cmp
jecxz
fucomi
out
xlat
sysexit
das
xor
adc
xchg
sahf
xchg
inc
mov
jmp
out
or
push
add
dec
xor
push
imul
xchg
cli
bndldx
fimull
mov
js
into
jns
cs
stc
mov
es
mov
orl
or
repz
pusha
fs
xchg
stos
jns
mov
mov
push
mov
push
push
cli
adc
fwait
test
add
aam
add
push
jmp
popa
mov
in
xchg
push
fists
jae
and
lret
adc
inc
and
aad
or
jbe
int
adc
xor
test
jb
mov
jmp
cmpsb
dec
arpl
pop
sbb
adc
jecxz
ror
adc
in
out
mov
lods
pxor
mov
cmp
adc
mov
cmpsb
cwtl
sbb
out
sub
loope
mov
je
inc
out
ret
dec
or
dec
inc
push
fldl
sbb
nop
pop
sub
rorl
sbb
cmpsl
pop
sbb
int
xlat
fwait
xor
fidivrs
ljmp
sub
fldenv
xor
mov
pop
jbe
fimull
mov
sub
and
in
out
nop
fs
es
pop
int
inc
aad
pop
pop
and
xchg
dec
lcall
xlat
pop
add
lret
std
inc
fdivl
shrl
mov
jp
xchg
mov
movl
ja
push
roll
jnp
xchg
test
pop
jns
rcll
je
insb
push
hlt
gs
adc
pop
loop
outsl
adc
mov
test
int
insb
outsl
cwtl
mov
out
out
mov
jg
push
aam
dec
and
push
mov
pop
and
sub
lahf
into
sbb
adc
cltd
rcrb
lock
sti
sti
mov
sub
fs
mov
lock
in
pop
mov
cmp
lret
adcb
andb
or
jne
pop
mov
leave
notl
jbe
sti
adc
inc
popf
pop
pop
mull
lcall
lea
daa
push
mov
mov
jno
add
sbb
sbb
dec
and
dec
cmp
inc
mov
xlat
loopne
dec
lahf
lahf
iret
pop
jge
sub
sub
rcrl
fldt
rcr
adc
pushf
and
dec
in
push
sub
add
ja
shr
pop
inc
push
jg
das
addr16
mov
nop
jge
ret
dec
jne
mov
sti
push
mov
cltd
mov
or
or
xor
xlat
jb
mov
xor
pop
cmp
inc
jb
stos
add
mov
dec
in
xchg
mov
mov
jne
or
cltd
xor
lret
pop
pop
addr16
fdivl
cmpl
mov
in
push
ljmp
lret
sbb
xor
fsubrl
cmp
fwait
out
outsb
les
adc
vpshad
movsb
sub
adc
cmp
pop
mul
sub
jg
out
scas
cltd
mov
or
arpl
lahf
inc
shll
fnsave
push
jne
push
add
cmpsl
cmp
int
arpl
rcrb
lcall
cmpsl
bound
dec
sti
pop
xchg
ret
je
dec
dec
mov
ljmp
cmp
call
fcoml
outsb
cmpsb
inc
in
cmp
ljmp
mov
fimull
dec
push
imul
cs
jbe
leave
pop
cli
les
pop
push
adc
and
mov
xor
xor
test
nop
lods
pop
movsl
lahf
or
movsb
add
and
xchg
jle
push
idivb
dec
lds
daa
test
add
xor
pop
test
sub
adc
jmp
imul
push
add
add
jl
push
dec
or
mov
push
nop
test
outsl
push
add
movd
or
movb
or
arpl
adc
call
je
rcll
out
push
mov
lock
cmp
xchg
lea
xchg
aaa
or
movq
rclb
mov
lea
pop
push
adc
lods
xorl
mov
popf
ret
mov
cld
mov
inc
cwtl
addb
add
daa
out
lds
sub
outsl
lock
jmp
mov
mov
and
mov
pop
mov
lret
std
mov
loop
cs
push
jl
xchg
lods
loope
mov
test
xchg
mov
outsb
shlb
mov
outsl
scas
lcall
call
mov
xor
sub
pop
popf
cmp
sub
or
or
in
adc
mov
and
test
jne
out
adc
fadds
pop
xlat
fisubrl
mov
or
push
inc
popa
leave
dec
mov
mov
into
inc
mov
xchg
cmp
data16
in
mov
dec
xchg
add
test
int
cmp
or
fwait
cmp
fstp
inc
movsl
pop
push
scas
out
lahf
xchg
sub
neg
ret
dec
xchg
xor
stos
jle
inc
add
push
testb
lcall
sbb
popf
jge
pop
fcomps
cwtl
in
mov
shl
leave
in
adc
pop
inc
fs
or
sahf
ret
insb
jl
push
add
xlat
inc
test
sub
mov
add
jb
sbb
fmull
pop
mov
sbb
jg
cmp
add
pop
sbb
dec
xor
lock
or
fld
sbb
xor
fimuls
dec
push
in
inc
lock
mov
cmpsl
cli
cmpsb
push
dec
mov
or
loope
enter
xlat
and
leave
stos
sub
cmc
jecxz
xor
cmp
adc
ja
insl
stos
xor
les
xor
clc
mov
notb
frstor
das
lds
dec
xchg
pusha
test
push
xchg
orl
aaa
lock
xor
test
sarl
aam
aas
or
adc
stos
mov
pop
fidivl
ret
mov
test
add
test
pop
icebp
push
adc
push
xor
mov
test
clc
sar
bound
adc
fisubs
insl
cmp
pcmpgtd
clc
pusha
cmp
jbe
mov
xchg
pop
mov
aaa
push
push
popa
int3
inc
mov
out
xor
xchg
cmp
ja
or
jnp
jns
dec
inc
adc
sahf
jo
or
mov
faddp
fisubl
aad
mov
add
movsl
inc
mov
in
xor
sub
aam
and
xchg
notb
imul
xchg
cld
mov
mov
mov
mov
dec
adc
dec
lods
flds
test
ret
jge
test
iret
inc
lea
mov
movsl
mulb
add
int3
es
fs
test
imul
ja
popa
fcomps
xchg
jl
leave
mov
or
push
mov
dec
jl
inc
setae
add
or
icebp
dec
dec
imul
mov
xchg
mov
sahf
loopne
pop
pop
mov
lods
mov
xchg
imull
cli
add
call
jns
pop
aam
lret
mov
dec
test
sbb
or
fs
and
add
xchg
adc
xor
imull
fldl
pop
out
lods
inc
dec
cli
fcomip
in
mov
and
cwtl
loope
bound
xor
add
lret
insb
popf
push
sub
push
into
adc
in
outsl
in
add
js
ret
mov
pop
cmp
repnz
arpl
loop
aaa
mov
fldt
add
fsubp
mov
test
faddl
in
insl
lret
dec
sbb
shll
aad
stos
add
xor
stc
or
into
xor
inc
lret
aas
xchg
push
outsb
lods
adc
clc
movsb
mov
loopne
rclw
std
dec
pop
adcb
xor
pop
push
sbb
adc
and
mulb
mov
add
xchg
xchg
adc
push
inc
mov
cmp
push
inc
xor
mov
dec
shll
fwait
push
sahf
fldenv
xlat
rcrb
faddl
lahf
call
aad
push
jne
insl
dec
inc
jne
int
adc
xchg
fstpl
adc
cmp
sbb
xor
mov
fstl
adc
dec
sbb
int
fistps
adc
or
leave
std
test
pop
mov
loop
cmpsb
mov
add
xchg
add
push
ret
inc
pop
data16
pushf
loop
push
xchg
mov
fsubl
jae
sti
or
loopne
push
xchg
lds
in
sub
push
fistpll
push
mov
fs
push
roll
dec
jae
jae
in
push
fcmovnu
jb
scas
sti
mov
mov
scas
jg
mov
and
or
scas
inc
fisubs
mov
xor
pop
dec
inc
dec
xor
adc
mov
jno
sti
pop
test
movsl
xor
inc
mov
xchg
push
in
dec
std
mov
fldl
out
cmp
pushf
in
cmpl
xchg
xchg
arpl
push
sbb
mov
adcl
out
sub
fs
inc
inc
pop
fldenv
cld
enter
cmp
cli
sub
jns
mov
xchg
aam
sub
add
js
loop
mov
test
jg
movsb
test
cltd
and
cwtl
inc
cltd
cmp
inc
popf
mov
sbb
adc
idivl
nop
inc
js
inc
push
jo
jmp
push
dec
out
pop
or
jp
fbstp
cwtl
jge
repz
sarl
fcompl
outsb
scas
add
leave
hlt
outsl
dec
fstps
idivb
das
cmc
nop
sti
xchg
jno
inc
rcrb
in
hlt
insl
ret
cmp
add
adc
lea
push
or
and
sahf
adc
js
mov
jno
jnp
andb
mov
test
inc
enter
inc
add
jl
mov
stos
faddl
cmp
jnp
in
cmc
jge
sbb
std
push
or
enter
subb
or
aaa
jge
xchg
jg
mov
push
inc
sub
imul
in
push
enter
movsb
pop
clc
push
lods
mov
out
je
jo
or
pusha
mov
xlat
inc
sub
pop
cwtl
aam
xchg
fimull
xor
add
cmp
out
lahf
dec
and
sbb
pop
adc
and
adc
push
testb
pushf
jp
jae
stos
int
mov
pushf
hlt
adc
outsl
sbb
jg
sarb
sti
lock
push
pop
sbb
adc
out
mov
mov
lahf
orl
aam
or
xchg
mov
pop
popa
sbb
and
es
cmp
and
dec
pop
or
dec
xchg
popa
loope
pop
sbb
sub
outsl
adc
mov
fcompl
push
movsb
mov
push
pop
fmulp
stos
aad
push
stc
ficoms
dec
sub
sbb
lods
push
xor
mov
outsb
and
subps
je
jmp
mov
mov
dec
daa
pop
fwait
rcrl
push
xchg
fidivrs
imul
shr
pop
jge
testl
push
imul
arpl
cli
ret
cmpsb
lea
leave
sbb
popa
push
mov
int
cmp
mov
mov
shll
pushf
mov
pop
xchg
xchg
hlt
inc
test
aam
sub
aam
push
xchg
sbb
xchg
mov
mov
fisttpl
pop
cmp
imulb
push
test
push
xchg
out
sbb
aad
repnz
cld
dec
mov
test
xchg
sbb
rorl
dec
dec
std
clc
push
out
test
jp
xor
in
aas
dec
lahf
sub
xchg
rcll
jne
lea
pop
add
cmp
add
mov
cmpsl
sti
push
adc
xor
sub
icebp
pushf
ret
mov
jnp
add
imul
push
in
or
mov
sub
mov
pop
mov
push
js
js
or
fstp
pop
fs
push
shrb
inc
jge
or
insb
pop
cltd
stos
dec
xchg
sbb
adc
fs
dec
jo
mov
or
xor
daa
mov
cmp
in
fwait
nop
sub
leave
or
es
xor
pop
lds
xor
lret
pushw
ja
push
jmp
xchg
add
push
jle
ret
das
push
adc
iret
pop
test
cwtl
cmp
sti
add
rcrb
icebp
push
lahf
and
scas
repz
adc
in
jo
mov
mov
aam
jle
dec
pop
fimull
into
pcmpeqw
mov
xchg
lahf
subl
into
mov
xchg
pop
clc
push
inc
fadds
insl
test
mov
mov
gs
loopne,pt
cmc
loopne
fstps
adc
aam
sbb
sbb
xchg
ds
fbld
stos
cwtl
subb
fs
xchg
leave
popa
lock
test
and
push
jno
xchg
enter
push
mov
push
jmp
into
cmpsb
stos
shlb
sahf
mov
jno
cmp
jle
inc
mov
icebp
js
setns
jg
mov
mov
sub
push
push
sahf
std
mov
dec
dec
sbb
sub
xchg
mov
jbe
bnd
mov
sub
add
inc
fwait
cmpsl
adc
iret
enter
jmp
cltd
fisttpll
mov
aas
sbbl
cmp
adc
call
add
and
inc
inc
mov
mov
imul
and
movsb
cvttps2pi
fildll
mov
ret
cs
jno
stos
cmp
pop
push
push
push
or
int3
lret
jnp
jg
movsb
and
fimull
fistps
mov
sbb
shlb
dec
mov
mov
adc
popf
movsl
sti
lock
pop
cli
inc
push
jp
popf
xchg
lcall
and
loopne
nop
movsl
out
add
cmp
add
ret
repnz
fucom
lods
and
mov
jns
decl
xchg
lods
cmp
cmpsl
sbb
sbb
into
mov
dec
out
adc
cld
fcmovnbe
cmp
or
pushf
jo
pop
into
jbe
mov
mov
push
cmp
cs
fs
and
or
enter
in
pop
ret
cmc
sub
stos
push
jle
fcoml
lahf
ficomps
data16
jge
js
ljmp
xor
mov
xor
out
mov
xor
scas
repz
jge
mov
cmpsl
and
lcall
inc
pop
push
and
push
push
in
dec
das
or
inc
lcall
movsl
les
mov
xchg
push
in
pop
rorl
add
xchg
fnstenv
aam
jns
lods
dec
xor
enter
cmpsl
mov
xchg
mov
mov
shlb
adc
mov
scas
in
aam
sbb
rorb
ja
outsb
sahf
jecxz
ret
ds
lcall
mov
pop
pushf
daa
jns
cmp
xchg
ja
push
push
cld
cmp
or
mul
addb
scas
xchg
lea
call
mov
ss
pop
dec
push
adc
test
jge
or
sub
sbb
call
outsl
mov
and
mov
add
push
adc
fnstenv
jbe
push
clc
adc
xchg
lea
mov
orl
leave
adc
pop
dec
push
xor
jns
xor
nop
mov
in
std
xchg
frstor
out
jecxz
adc
push
daa
repz
push
insl
leave
or
push
sub
popf
sub
rcrl
cmc
mov
push
adc
xor
pop
bound
jge
mov
outsl
xchg
mov
mov
xchg
lods
aam
adc
and
push
xor
lahf
js
iret
and
imul
mov
adc
shl
jl
xor
adc
gs
mov
add
fs
int
aas
sub
lea
stos
cmpl
push
test
push
adc
or
lahf
enter
sub
aas
push
push
mov
add
and
mov
dec
fnstsw
movsb
or
jp
pop
sub
pop
xor
mov
add
and
xchg
sbb
push
push
sub
imul
mov
lcall
sbb
and
int
push
lahf
outsb
inc
arpl
dec
nop
and
inc
pop
sarl
jecxz
nop
filds
push
je
into
ss
sbb
mov
adc
mov
sbb
sbb
push
xadd
mov
aaa
and
or
bound
sahf
fwait
push
sbb
jmp
add
jno
mov
push
aas
cs
dec
stos
push
scas
jno
lret
cld
mov
in
sub
scas
dec
call
xchg
ficomps
add
cmp
stos
shlb
adc
add
cltd
shr
pop
adc
into
shrl
dec
add
jmp
jnp
xchg
dec
in
lea
psubusw
fbstp
cmp
xchg
push
inc
addb
or
push
stc
sbb
and
scas
or
sub
push
mov
adc
and
stc
adc
js
mov
add
mov
ret
pop
addr16
cmc
dec
adc
into
cmpsl
jl
inc
mov
icebp
cmp
out
mov
xchg
jecxz
popa
xor
push
mov
lret
mov
iret
mov
pop
popa
pop
xor
loop
and
mov
mov
es
xchg
xchg
and
push
xor
cmp
push
xchg
mov
xchg
sub
or
popa
xchg
jmp
nop
inc
and
mov
jae
movsl
hlt
jge
xchg
sub
dec
or
xchg
fldcw
jmp
mov
add
sub
nop
push
mov
sub
neg
sub
mov
lret
cld
add
loop
and
cmp
ret
cld
push
and
les
int
lret
pop
scas
stc
sbb
icebp
icebp
push
mov
sbb
dec
pop
or
rolb
mov
mov
push
sbb
scas
jns
pop
jge
and
sub
sbb
movsl
imul
ret
inc
int3
repz
add
addl
and
push
fisubl
sti
sub
xor
cmpb
popf
pusha
xchg
mov
jecxz
aaa
pop
mov
jae
sbb
xchg
clc
inc
and
push
or
cmpsb
testl
fstps
sub
sbb
stos
sbb
mov
push
xchg
dec
mov
mov
lock
dec
icebp
ffreep
sbb
scas
mov
push
sub
sbb
fdivs
fisttpll
inc
mov
cltd
mov
push
stos
mov
dec
xor
dec
xchg
leave
add
adc
jl
sub
mov
mov
xor
jge
xor
daa
push
ds
push
sti
sbbl
mov
mov
fstpt
xor
push
add
mov
inc
test
pop
dec
mov
xchg
jne
dec
push
fidivrs
mov
add
repnz
and
popf
enter
lods
mov
push
or
xchg
movsb
xchg
lock
xchg
mov
push
sbb
dec
mov
mov
je
movsb
mov
das
movb
ja
lea
mov
jle
test
mov
in
lea
inc
dec
sti
pop
sbb
loopne
ret
inc
js
and
andl
adc
lahf
push
in
aas
sub
sbb
mov
imulb
loop
lods
inc
add
xor
mov
sub
mov
mov
and
lret
mov
lds
std
stc
pop
test
mov
cmpsl
push
insb
xchg
in
mov
in
fcmovbe
lahf
jge
sbb
aaa
push
mov
arpl
imul
in
add
mov
std
jo
or
mov
or
sub
cmp
je
and
lds
imul
push
add
sub
xchg
rcrb
jne
or
inc
lahf
sbb
and
xor
push
xor
es
xchg
pusha
test
push
pop
mov
fcmovu
sbb
fdivl
inc
cwtl
enter
pop
xchg
fcoml
mov
mov
cmp
mov
cld
je
imul
inc
enter
or
adc
cli
mov
aaa
aas
std
adc
clc
xchg
fwait
inc
jp
pusha
sub
imul
cmp
ret
mov
lret
into
mov
shrb
jae
push
test
cmc
call
andb
inc
insl
xchg
mov
addb
int
call
bound
mov
pop
rolb
xor
cmp
imul
dec
adc
adc
js
or
adc
adc
js
pop
adc
jae
subb
aam
xchg
and
jmp
aam
jb
ds
mov
xchg
lret
mov
mov
mov
les
and
inc
adc
imul
fwait
sbb
mov
outsb
orl
jge
xor
fcmovbe
cld
js
sub
mov
popf
insl
cmp
idivb
xor
lret
pop
adc
jne
sub
dec
movsl
mov
xchg
push
lcall
imul
cmpl
push
push
in
xchg
out
adc
int
jp
das
mov
ret
in
lret
jne
xlat
stc
sbb
cmp
sub
in
pop
pop
aaa
incb
sti
and
push
cwtl
mov
mov
jl
pushf
aam
mov
outsl
jns
xor
xchg
loop
icebp
mov
in
subb
lods
jb
inc
jge
lahf
leave
imul
cmp
jmp
sub
push
xchg
shlb
ja
mov
mov
cmpl
xor
dec
push
ret
pushf
mov
push
orb
jns
xor
into
push
add
scas
mov
xorb
frstor
mov
imul
insl
ja
xchg
xor
leave
popa
mov
fnstsw
push
cmp
mov
rcll
mov
in
into
and
popf
test
mov
mov
fmulp
pop
cmpsl
push
rcrl
addr16
sahf
pusha
or
je
in
inc
jl
mov
sbb
xchg
pop
sbb
mov
mov
add
mov
imul
cmp
and
pop
mov
stc
adc
inc
xlat
call
add
ds
pushf
push
in
js
movsl
fstps
aam
gs
push
dec
push
cmp
jns
lods
test
push
cmpsb
xor
js
mov
rcl
jge
or
mov
mov
arpl
dec
icebp
push
xor
and
lret
sub
lret
mov
test
fsts
gs
pop
sbb
jnp
je
je,pn
xchg
mov
pop
jle
xchg
dec
xor
xchg
push
mov
push
add
divl
push
stc
movsl
gs
cld
mov
test
or
hlt
popf
ss
push
sbb
adc
loope
addb
xchg
aam
pop
fsubr
or
add
jbe
insb
jnp
addr16
or
sbb
lods
xchg
dec
inc
xor
repz
fwait
nop
push
sub
xchg
mov
xor
mov
jno
jbe
aaa
adc
cmp
xchg
xor
adc
xlat
pop
mov
sub
xor
add
push
dec
jge
xor
inc
out
adc
out
inc
adc
sti
mov
lods
sub
fsubrl
push
mov
call
das
jbe
mov
sub
rcrb
pop
push
stc
std
dec
jecxz
sbb
imul
lcall
popf
aad
fcomps
mov
mov
call
xor
jnp
adc
push
xor
loope
cltd
or
dec
insb
jbe
pop
out
mov
rcl
imul
inc
mov
popf
leave
mov
gs
shlb
ja
movsl
int
sbb
std
push
in
outsl
push
push
pop
push
test
xor
push
sti
test
test
icebp
push
enter
mov
sbb
xor
push
data16
ret
inc
leave
aas
cmp
mov
cmp
or
iret
ficoml
push
jb
insb
and
push
cmp
mov
mov
pop
stos
mov
pop
pop
out
fistpl
sahf
sahf
aam
push
add
mov
imul
cli
xchg
lods
sub
lahf
test
lret
and
dec
xor
adc
fstl
jne
push
push
js
fcmovnu
cld
push
add
push
add
xor
jno
sbb
xchg
pop
inc
cmpsl
vmread
out
mov
lock
jl
adc
dec
bound
data16
adc
aad
xor
xor
lahf
lret
pop
xchg
mov
cmp
ss
push
push
es
scas
daa
aas
imul
pop
imul
aad
movsl
fldl
push
and
or
mov
sub
push
sbb
enter
jo
inc
push
ror
test
lods
mov
xor
pop
cmpsl
shr
xor
xchg
mov
fnstenv
ja
or
add
jmp
iret
arpl
int3
es
mov
js
jmp
mov
mov
sbb
jno
sbb
fidivrl
or
sarl
cmp
xor
mov
xchg
xchg
addr16
push
mov
jg
mov
popf
adc
add
ss
orps
and
cmpsl
ds
ss
sbb
fidivrs
cmp
sub
jmp
mulb
shlb
mov
sti
sub
outsb
sti
push
mov
loope
popa
mov
jb
cmp
xchg
insb
push
jae
pop
or
addr16
lods
or
dec
imul
add
xor
add
rolb
jnp
or
cmp
or
mov
sbb
push
cmpsl
movsl
out
inc
lret
pushf
and
add
dec
inc
dec
dec
push
jbe
xchg
movl
mov
stos
imull
add
rcr
jne
mov
push
or
inc
mov
cltd
sbb
lds
pop
in
jge
movsb
jbe
jecxz
or
int
imul
daa
cmp
movsb
pushf
mov
cmp
ss
cltd
inc
stc
data16
outsb
aas
in
and
pop
insb
jg
sub
cmpsl
in
in
cmc
xchg
roll
xor
cmp
icebp
int
xchg
int3
sti
pop
jo
cmp
fs
mov
or
sub
sbb
pop
cmp
ficoms
ja
mov
xchg
imul
lods
cmp
adc
inc
mov
ljmp
adc
sub
mov
jno
int3
jp
jmp
repnz
int3
or
subb
pop
daa
jno
xchg
aaa
pop
sbb
jns
add
pop
add
sbb
cmp
sub
in
daa
inc
dec
pop
ljmp
mov
mov
out
addr16
xor
jb
sbb
mov
daa
es
add
xchg
inc
pop
jmp
lret
jno
loopne
lods
call
and
aaa
xchg
stc
cmp
leave
idivb
jnp
dec
jg
int3
jg
add
sti
cmpsl
ret
pushf
and
xchg
jl
out
push
cmp
sbb
xchg
mov
das
sti
mov
sub
or
xchg
cmp
adc
dec
add
mov
mov
loopne
dec
pop
ret
out
out
addr16
sbb
add
fildll
sub
mov
scas
fnsave
cmp
cmp
pushf
xor
sbb
jg
mov
push
icebp
leave
adc
cld
mov
mov
cmp
mov
mov
xchg
lock
jns
or
in
cmp
cmc
cmpsl
stc
out
pop
jmp
pop
mov
lds
mov
int3
or
dec
fisubl
mov
aad
xor
ret
inc
push
mov
dec
into
mov
pop
mov
pop
cmp
adc
add
into
mov
xlat
popa
adc
push
lahf
sbb
leave
leave
xchg
xchg
je
xchg
mov
mov
add
cmp
fyl2xp1
xor
test
dec
sub
xchg
aas
xlat
out
es
mov
push
call
movsl
xor
cmp
scas
mov
adc
push
lods
pop
xchg
xor
int3
leave
subb
push
adc
adc
cmp
jnp
sub
push
sbb
xchg
hlt
icebp
loope
loopne
test
inc
mov
je
xor
add
in
sub
jp
push
mov
jmp
lcall
and
and
mov
je
push
movb
push
lret
loopne
jnp
jl
mov
fiaddl
xchg
sub
stos
out
cs
jne
repnz
dec
cmp
jb
nop
dec
xchg
mov
jo
loope
xchg
fimuls
nop
ret
notl
and
fisubs
push
int3
icebp
insb
fstl
in
scas
stc
cmc
jle
mov
cmp
sbb
notl
out
hlt
dec
test
xchg
dec
pop
cmpsl
js
xor
sub
shll
pop
cmp
shl
push
shll
aaa
mov
and
ss
xchg
sub
inc
cmp
fwait
pop
xor
sub
mov
add
xchg
fnsave
stos
xchg
dec
repz
fisubl
sbb
movsl
ret
mov
or
sbb
pushf
mov
sbb
clc
xor
or
push
and
stos
mov
inc
cmp
xchg
jno
enter
push
jbe
push
sub
sbb
jne
mov
inc
movsb
add
inc
and
lret
cmp
jnp
ds
and
call
jmp
pop
mov
js
ds
cmp
scas
insb
sub
ret
jns
std
insb
dec
mov
loope
add
pop
push
pushf
je
or
and
jg
inc
iret
shl
xchg
loopne
mov
cld
cmpsl
pop
aad
pop
xchg
mov
ljmp
jnp
xor
in
sbb
fdivl
mov
inc
in
mov
cmp
idivb
and
das
jecxz
je
sbb
mov
mov
test
sti
je
incl
mov
sub
pop
adc
mov
jns
mov
pop
popl
aaa
dec
ret
dec
insb
pusha
jae
movsl
test
std
movsl
xchg
addr16
mov
mov
pop
add
ds
xlat
fs
pusha
xchg
js
test
clc
push
xor
cmp
inc
adc
movsl
add
pop
stos
popa
sub
fisttpll
imull
les
stc
xchg
fcomps
sub
or
mov
jno
out
pop
int3
jp,pn
or
in
push
add
subl
dec
in
sahf
popa
sub
popa
xchg
and
adc
xlat
and
mov
jmp
ss
test
add
xor
sbb
add
adc
or
ret
or
mov
inc
jo
fisubrs
in
js
clc
dec
or
jmp
call
insb
cli
sbb
leave
adc
loop
mov
add
mov
adc
jae
shl
aaa
xchg
out
lock
and
push
pop
lock
rolb
pop
mov
add
cmp
cmpsl
pop
sarb
out
shrl
rcrb
fistl
bound
mov
push
pop
xchg
xchg
add
scas
popf
cs
or
lock
test
ljmp
push
push
mov
push
pusha
or
xchg
jl
mov
mov
sbb
mov
fadds
xor
pop
jle
add
sub
lods
out
pop
mov
xor
js
ljmp
xor
iret
or
mov
cmp
std
jae
fldenv
mov
mov
or
into
push
mov
es
push
and
lea
aas
xor
call
and
and
movsb
cmp
pop
jae
cmp
cwtl
adc
jnp
out
out
xchg
jg
iret
test
pop
adc
in
lahf
lahf
xor
mov
jae
add
repnz
ret
repnz
imul
pop
cmp
push
test
sbb
jp
cld
pusha
xchg
mov
pop
pop
cmp
mov
or
push
mov
in
ficomps
shr
subb
addl
bound
insl
xchg
popa
clc
jo
xchg
out
push
cld
pop
jmp
mov
cltd
rorb
mov
dec
aam
insl
jne
out
or
sub
jle
sub
mov
lds
inc
call
add
call
mov
inc
jle
mov
frstor
popa
pop
and
and
jo
mov
add
dec
adc
cmpsl
icebp
add
stos
je
sbb
pop
mov
pop
inc
repz
xor
add
dec
inc
mov
rcll
mov
dec
pop
fnstsw
insb
push
jne
mov
adc
lret
inc
adc
and
lret
clc
hlt
mov
jne
int
test
push
clc
inc
sub
dec
icebp
or
and
push
out
push
pop
sbb
ja
stos
imul
in
in
mov
scas
pusha
mov
push
sbb
inc
mov
mov
add
xchg
xchg
or
mov
and
jno
dec
lock
jp
add
xchg
imul
cmc
xlat
lahf
xor
adc
lds
loope
and
leave
mov
repz
aaa
adc
cli
jg
or
mov
fcoms
ja
xchg
rcrl
shrb
or
push
inc
fs
addr16
push
popa
mov
imul
xchg
ret
push
ss
push
push
mov
and
push
pop
push
out
cmp
repz
sbb
test
bound
jnp
in
xchg
jmp
sbb
push
xor
jbe
push
or
lret
pop
mov
sar
inc
pushf
cld
stos
addpd
sbb
aas
jmp
jno
inc
testl
ds
ljmp
mov
inc
pop
sub
jg
pusha
mov
sbb
addl
cs
mov
sahf
and
ss
cmp
out
push
pop
pop
js
adc
aaa
ret
sub
inc
adc
sub
push
movsl
mov
cli
pop
pushf
aas
mov
mov
jb
xchg
jae
dec
jno
imul
dec
pop
mov
cmpsl
into
push
push
xor
cmp
inc
pusha
adc
xchg
mov
lods
adc
jne
jae
outsb
mov
dec
cmp
cld
jecxz
rorl
sarl
ljmp
sbb
iret
cmpsb
mov
cmpsl
push
jns
ret
mov
call
scas
xor
dec
pop
pop
cmp
bnd
mov
mov
in
cmpsb
int3
mov
pop
into
sbb
in
es
jbe
push
daa
mov
pusha
daa
sbb
das
sub
sbb
in
dec
jns
adc
mov
or
lret
in
cmp
add
add
ljmp
push
pop
cmp
mov
nop
jl
cltd
push
dec
loope
xor
hlt
xchg
loope
in
lahf
xor
movsb
mov
sarl
mov
mov
outsb
mov
sbb
fisttps
pusha
and
mov
jmp
shrb
push
or
push
popa
data16
dec
cmp
in
jp
cmpsl
fucomi
xchg
pop
mov
pop
xor
std
repz
cmpsl
js
dec
inc
std
insl
cmpsl
dec
sar
shr
imul
sub
fs
loope
fldt
jl
fistps
mov
and
or
lds
fistl
jo
hlt
sub
sub
sub
dec
adc
sub
pushf
jae
pop
pop
stos
jmp
fisubl
cwtl
data16
test
lret
int3
push
cmc
jge
ljmp
lods
mov
and
sbb
push
mov
cmc
xchg
loop
fldenv
jmp
mov
xchg
mov
dec
add
in
inc
and
inc
xor
pop
push
loop
add
sub
mov
xchg
sub
cmpl
outsb
xor
add
xchg
and
or
repnz
out
test
notb
lds
or
xchg
shlb
pop
pop
fwait
pop
in
out
pextrw
mov
subl
inc
cmp
icebp
repnz
imul
xlat
mov
dec
jnp
push
add
jecxz
jl
dec
push
xlat
mov
out
push
mov
mov
mov
xor
mov
pop
add
mov
sbb
insl
sbb
jp
iret
or
mov
xor
loopne
icebp
mov
pop
lock
mov
jle
sub
jae
push
stc
add
cmp
jo
in
or
cli
sub
scas
or
outsb
ljmp
push
sbb
sub
pop
cld
out
lret
pop
sub
outsb
pop
push
sub
sbb
lea
jge
adc
xchg
jg
int
push
push
xchg
sub
mov
xchg
clc
mov
adc
lcall
movsb
mov
stos
xchg
jbe
outsl
mov
cli
rorb
pop
mov
lahf
outsl
dec
jl
test
ret
test
mov
dec
mov
xor
cmc
movsl
cwtl
xchg
popa
push
aaa
pop
adc
pop
sbb
adc
lods
call
mov
xor
mov
or
dec
xchg
sbb
jns
cltd
inc
push
mov
push
inc
aad
les
lret
lret
jp
andb
out
sahf
mov
or
pop
ljmp
jne
jg
cmp
jg
rcrb
xchg
pop
aaa
outsl
or
ja
inc
add
jle
inc
or
or
xchg
add
push
aaa
jmp
int3
push
or
ss
stos
rcrb
mov
jnp
lret
pop
cmp
jge
pop
aas
or
xchg
adc
imul
in
xchg
jns
daa
and
rcrl
mov
in
adcl
test
js
fnstenv
cli
mov
sub
fimuls
ds
sub
jne
and
stc
stos
testl
adc
cmp
cld
leave
inc
mov
pop
inc
inc
mov
push
mov
sbb
fidivs
jmp
add
inc
stos
sbbl
js
mov
mov
push
mov
das
mov
testl
add
mov
sub
mov
cmp
ret
xlat
or
aas
pop
shr
pop
sub
cli
mov
cmp
out
pop
outsb
mov
cmc
shll
xorl
aas
lods
fiadds
inc
xchg
add
shll
arpl
add
push
idivb
mov
pop
jbe
scas
sbb
xchg
mov
push
mov
mov
xor
movsl
and
inc
pusha
mov
scas
aas
pop
add
and
mov
clc
js
add
pop
notl
push
je
dec
js
mov
sbb
pop
jbe
pop
sbb
jg
jmp
add
hlt
flds
mov
and
movsb
ds
sbb
das
out
pop
pop
ret
mov
pop
fisubrs
pop
arpl
out
inc
imul
shll
dec
adc
jbe
out
sti
in
xchg
sub
add
xor
ror
test
orl
mov
mov
outsb
mov
sbb
in
pop
pop
add
sub
push
arpl
xor
imul
das
add
out
out
cmp
jo
fisttps
movlps
jno
push
test
xchg
int3
ljmp
mov
in
or
jbe
roll
add
into
adc
cld
dec
adc
popf
dec
bound
gs
lret
jno
cmp
xlat
inc
test
ds
test
sub
test
jp
mov
mov
mov
shrb
xchg
add
add
dec
jo
push
mov
insb
sub
stos
stos
pusha
test
lcall
xchg
js
jbe
in
jo
andb
insb
cmp
enter
std
fdivrs
cmp
add
xor
mov
jnp
jne
mov
cmc
ror
xor
jle
hlt
subl
leave
mov
enter
ror
dec
mov
mov
imul
sub
divb
sub
pop
clc
fsts
into
iret
inc
fstpl
mov
cld
addr16
xorps
pop
inc
mov
cmp
jne
ficoml
lods
pop
jg
data16
ljmp
cmp
call
xchg
stos
xor
cmp
xchg
stos
cmp
and
mov
or
cwtl
lock
test
es
sbb
cmp
pop
lea
loopne
dec
stc
sti
outsb
adc
lea
dec
mov
push
and
rcrl
sub
mov
cmp
std
push
sbb
sbb
ss
mov
push
clc
icebp
scas
mov
xchg
mov
xor
xor
pop
inc
sbb
xchg
jns
add
pushf
sbb
xor
dec
insl
pop
andb
in
decb
cmp
jno
imul
push
andb
rclb
iret
mov
adc
push
sub
jmp
adc
in
push
ret
les
mov
xchg
lds
push
cmp
dec
cmpsl
push
cwtl
or
aam
mov
xor
adc
int
sbb
lret
xor
popf
pushf
sub
push
xchg
inc
mov
ss
ret
sbb
push
mov
imul
sub
mov
shrl
xor
into
xor
cs
mov
ret
psraw
gs
xchg
mov
in
sbb
mov
mov
lret
mov
add
mov
dec
mov
cmpsl
mov
mov
rcl
add
xchg
es
mov
es
cltd
mov
ss
dec
outsl
fists
inc
add
popf
leave
aad
xchg
mov
ljmp
mov
push
loope
cltd
aam
ljmp
ds
adc
xor
test
mov
mov
idivl
jge
cmp
inc
sti
mov
push
loope
jecxz
cmc
xchg
cwtl
sbb
icebp
imul
push
js
push
mov
ret
dec
dec
cmpsl
xor
push
sub
mov
lea
or
in
xor
dec
push
dec
inc
scas
xchg
mov
rorl
inc
lret
lret
adcl
mov
pop
fcmovne
cmp
inc
daa
sbb
pop
push
leave
push
push
movsl
mov
divl
aad
adc
mov
add
mov
repz
into
mov
mov
jl
jnp
xchg
dec
imul
mov
addr16
pop
cwtl
push
inc
dec
popf
in
shr
add
push
lret
movsl
cmp
xchg
test
ret
arpl
ja
adc
pop
sahf
push
es
in
fbstp
jnp
cmp
dec
push
fs
dec
pusha
repnz
push
jp
inc
std
sbbb
or
lahf
mov
jl
fcmovu
mov
cld
xor
add
dec
lea
mov
imul
cltd
inc
mov
aas
or
std
push
mov
sti
das
adc
cltd
push
and
xor
inc
out
mov
mov
shrl
adc
out
inc
test
push
int3
scas
ja
dec
pop
insl
imul
test
jns
cmp
dec
testb
add
sub
mov
lods
jg
test
sti
lock
enterw
mov
mov
pop
push
lods
xchg
cmpsb
cltd
das
and
jae
pop
sbb
pop
add
xchg
je
jne
pop
pop
push
inc
int
mov
jne
cmp
xor
fmuls
mov
inc
shl
mov
mov
mov
sbb
aad
mov
movsb
icebp
add
icebp
mov
pop
sarl
jecxz
addb
xabort
or
mov
cltd
pop
inc
push
out
xor
les
adcb
iret
mov
pop
pop
or
dec
push
push
or
cwtl
push
and
and
sub
cmpsl
testl
bound
adc
popa
xlat
ror
dec
sbb
dec
mov
or
mov
bound
xchg
xor
ja
aam
adc
mov
js
popa
out
push
push
and
mull
cld
scas
and
mov
mov
jae
fwait
std
out
jmp
pop
bound
pop
pop
aaa
or
jmp
dec
or
mov
cmpsl
xchg
cld
mov
sbb
fcoms
std
cmovae
nop
fiaddl
loope
stos
cmpxchg
or
leave
xor
add
push
fstpt
add
mov
jns
push
ss
aas
push
xchg
mov
xchg
out
fmul
mov
inc
gs
cld
repnz
stos
mov
jecxz
sbbb
jo
and
arpl
cs
add
inc
insb
pusha
push
push
push
and
cld
adc
out
pusha
in
mov
rclb
push
push
mov
sbb
stos
mov
inc
mov
out
mov
xor
fwait
test
xchg
call
jecxz
test
aam
fisubs
or
jle
pop
pop
aas
xor
loop
sarl
les
or
adc
lahf
loop
movb
inc
test
jo
inc
dec
lds
rcl
mov
icebp
push
cmpsl
aad
mov
pop
test
mov
imul
pop
filds
orl
fwait
insb
inc
xor
fwait
adc
into
push
popf
add
into
dec
inc
repnz
jg
lods
mov
andl
fdivrs
and
cli
pop
push
iret
inc
xor
loop
sbb
pushf
xchg
mov
hlt
int3
jge
lahf
and
fs
mov
add
pop
in
mov
bound
jns
or
insb
cmc
jg
dec
sbb
sub
loop
jbe
xchg
add
addb
ds
sbb
in
das
sbb
jecxz
mov
cmp
femms
inc
gs
dec
shrl
mov
xchg
sbbb
outsl
add
imull
pop
jmp
xchg
dec
shlb
arpl
xchg
lret
xor
mov
sbb
bound
lret
adc
push
xchg
inc
mov
inc
into
sub
mov
or
aad
fisubrs
mov
lahf
jmp
pop
test
xlat
dec
xchg
mov
mov
movsb
jge
push
push
ret
xchg
lods
jo
std
sub
jmp
and
inc
sub
clc
add
aas
pop
dec
rorb
andb
leave
mov
adc
fucom
add
cwtl
mov
add
mov
and
ss
mov
mov
inc
and
decb
dec
das
push
pushf
push
and
mov
nop
cltd
es
push
sub
test
in
je
xor
or
pop
icebp
push
cmpsb
movsb
pop
lcall
into
or
xchg
enter
cmp
aad
add
lcall
es
rorl
fisubl
daa
dec
xchg
add
push
inc
pop
cli
popa
mov
lahf
lds
repnz
xor
fsub
adc
neg
das
xchg
jne
fs
pop
jge
dec
stos
fiaddl
dec
add
dec
push
jno
hlt
xchg
adc
filds
test
jno
mov
mov
sbb
xchg
test
mov
add
aaa
mov
cwtl
mov
add
and
cli
and
mov
stos
pop
pushf
or
mov
icebp
sarb
addr16
leave
icebp
inc
xlat
push
daa
mov
stos
push
xor
cmc
jns
enter
out
sti
packuswb
cmp
out
push
sbb
xchg
in
or
mov
shrl
das
test
cmpsl
pop
jbe
outsl
inc
xchg
les
inc
mov
aaa
jbe
cmpsl
pop
imul
cmp
add
std
aaa
adc
mov
frstor
ret
insb
popf
mov
push
jnp
aaa
inc
lahf
mov
cmp
jb
dec
mov
es
add
shrl
cmc
popl
mov
sub
mov
and
add
dec
ficomps
push
lret
hlt
mov
add
mov
sub
inc
and
divl
ret
xchg
arpl
xchg
popf
jb
mov
outsb
aam
mov
xchg
imul
sbb
es
int3
xchg
sub
pushf
mov
adc
bnd
adc
xchg
and
outsb
dec
and
das
dec
cmp
jo
and
nop
mov
clc
out
shrl
mov
and
ja
and
test
popl
adc
fimull
mov
sbb
cmp
scas
lock
mov
cmp
pop
sbb
daa
push
dec
aad
int
pop
push
hlt
scas
mov
aad
xchg
jnp
mov
jbe
lret
cmp
sbb
pop
stos
or
lods
ljmp
sub
inc
push
iret
icebp
jle
inc
fcmovbe
adc
inc
das
test
sbb
loop
xchg
inc
ljmp
or
sub
mov
fs
add
insb
mov
xor
sahf
adc
dec
add
sub
push
inc
sbb
add
xchg
jae
add
xor
and
sarb
sbb
dec
sbb
or
mov
add
jo
test
rcr
std
notb
and
cmp
popa
fmulp
inc
test
leave
testl
nop
in
mov
dec
daa
frstor
lea
or
and
icebp
ja
sbb
push
pop
scas
dec
sub
enter
movsb
push
jnp
lret
mov
push
in
cmp
dec
add
daa
scas
or
xchg
dec
push
lahf
or
mov
orb
sub
mov
dec
aam
sbb
movsl
cmp
pusha
pop
adc
rcrl
movsb
lods
call
xchg
stos
push
je
outsl
mov
or
add
xchg
call
pop
cmc
dec
lds
inc
and
int3
xor
or
mov
cmpsl
sbb
xchg
push
cmp
push
out
pushf
jg
mov
mov
or
xchg
enter
pop
ss
mov
mov
xchg
loope
xor
pop
orl
pop
inc
int
push
or
dec
push
into
ds
sbb
push
xor
popa
mov
repnz
mov
mov
mov
loopne
imul
repz
mov
imul
aas
adc
in
rol
ljmp
in
int
xchg
fs
repz
lock
outsb
or
dec
mov
mov
lock
lds
int3
inc
shlb
ret
insl
jge
xchg
subl
nop
lds
flds
cltd
out
xor
cmpsl
sbb
cmpsl
enter
xor
cmp
sbb
xlat
sub
xchg
les
aaa
jl
xchg
and
push
js
mov
mov
lods
or
sbb
imul
fisttpl
lret
jno
pop
adc
mov
dec
cld
mov
les
scas
jnp
dec
adc
and
mov
lret
mov
imul
lea
int3
push
push
imul
cmc
xor
shll
push
out
adc
adc
inc
les
jns
movsl
xor
xchg
dec
cwtl
std
arpl
pop
repnz
jp
adc
and
scas
xchg
and
in
pusha
stos
and
or
push
sbbb
inc
nop
pop
pop
add
xchg
pop
xchg
dec
cmpsl
xlat
inc
call
dec
dec
jb
lret
mov
inc
jge
mov
add
pop
inc
inc
mov
repz
repz
insl
shrl
push
dec
push
jb
subl
popf
jnp
xlat
cmp
adc
rcll
dec
adc
jnp
add
xor
sub
loope
cwtl
cmp
adc
push
aad
dec
add
sub
jne
icebp
sti
bnd
push
mov
loope
pop
mov
mul
sbb
mov
mov
cmp
pop
xor
mov
inc
loope
xchg
push
mov
inc
sub
scas
mov
jmp
add
jae
repz
leave
out
cmp
sbb
lods
out
popa
xor
in
pop
lahf
icebp
inc
add
int
dec
add
fs
jg
mov
add
adc
daa
outsb
jae
cmp
sahf
jmp
or
xchg
out
adc
insl
rclb
cmpsb
jno
add
rclb
test
fwait
xchg
push
repz
bswap
fadds
pop
xor
sbb
test
clc
fdivrp
jmp
jg
jns
pop
inc
leave
fisttpl
push
or
add
xchg
int
sub
xor
fcomi
stc
dec
sbb
out
outsb
pop
mov
out
mov
aam
push
mov
sti
cmp
xchg
pop
pop
sbb
pop
add
enter
jb
loope
inc
icebp
jecxz
mov
repnz
rorl
cltd
js
push
inc
xor
sti
add
mov
je
dec
outsb
imul
adc
and
sbb
clc
xchg
push
jo
out
imul
test
ret
mov
push
inc
stc
scas
int3
nop
dec
sahf
inc
xchg
popf
xchg
inc
fstpl
or
xor
mov
imul
in
insl
hlt
outsl
xchg
mov
adc
sub
mov
xlat
sub
les
fldenv
iret
push
xor
pop
jnp
add
jns
movsl
sbb
pop
dec
sbb
cmp
cmp
pop
iret
mov
push
sub
out
jmp
xchg
bound
xor
loopne
bswap
inc
adc
insl
mov
insb
scas
or
jmp
aam
pop
xchg
sbb
push
mov
shrl
adc
jmp
lock
dec
jno
jg
xchg
inc
push
loopne
add
cs
leave
cmpb
or
xor
mov
inc
fs
jg
pop
mov
daa
mov
shll
adc
xor
loopne
cltd
in
stc
fcmovb
jp
fmuls
xor
mov
dec
or
fnstenv
out
inc
adc
inc
lods
jno
pushf
cli
mov
ss
xor
fdivl
adc
pop
xor
std
push
sub
enter
gs
inc
adc
xchg
outsl
test
arpl
dec
sahf
xor
ja
xchg
push
or
mov
pop
cli
pop
sahf
jnp
scas
pop
fsts
pop
dec
sar
cmp
pop
pop
mov
push
aaa
pop
lahf
jmp
mov
push
rorb
cltd
cmp
xchg
addb
xor
adc
xlat
arpl
outsl
cmpsl
rcll
ds
mov
sbb
test
sahf
push
leave
icebp
in
arpl
std
mov
shll
mov
dec
fcompl
in
add
add
out
jnp
test
or
cld
daa
rol
roll
mov
or
pop
xlat
lahf
imul
into
jo
sbb
rorb
lahf
jno
cs
push
dec
mov
cmp
rclb
xchg
xor
adc
dec
jl
icebp
add
xlat
push
es
sbbb
add
fadd
xchg
je
lret
inc
sbb
sahf
push
xchg
or
test
push
inc
cmp
jno
aad
and
lret
sub
bsf
sbb
xor
fistpll
mov
aam
or
loopne
sbb
and
add
inc
outsb
je
and
xor
and
hlt
fdivrp
hlt
cmp
insb
mov
dec
mov
pop
pop
out
popl
pop
xor
int3
mov
ret
pop
and
flds
jge
push
fadds
je
cltd
cli
cltd
mov
sub
arpl
cmovp
add
subb
int
fidivrl
movsl
dec
mov
iret
in
fildl
jmp
mov
fst
cmpsb
add
pop
cmp
push
je
out
adc
test
mov
xchg
inc
sbb
mov
push
xchg
addr16
leave
xor
pop
push
test
call
cmp
fcomps
stos
sub
adc
push
sbbb
cmp
push
push
stos
stos
pop
fimuls
add
cmc
xor
adc
and
jmp
ret
or
mov
dec
cmpsl
mov
bound
cld
test
mov
adc
outsb
xchg
or
mov
dec
ljmp
adc
out
test
mov
jae
pop
inc
jge
ret
sbb
jmp
pop
int
sbb
repz
push
out
lods
xchg
das
xchg
xor
shl
mov
xor
xchg
aas
aaa
notl
aam
sub
out
les
int
loopne
and
xorb
lock
loop
xchg
lcall
inc
fsts
into
dec
cmpsl
lret
sub
sub
pop
cld
mov
das
test
fsubrs
push
xchg
jecxz
xchg
icebp
dec
push
aas
xor
pop
scas
lods
adc
pop
sti
cltd
jmp
rorl
jbe
cli
outsl
jecxz
test
xor
aam
in
dec
jns
sbb
ljmp
aaa
and
xchg
insb
mov
dec
sbb
cmp
push
mov
inc
pop
addr16
lret
mov
gs
lret
push
adc
jl
enter
into
dec
mov
ret
cmpps
and
or
jp
jg
repz
dec
addr16
cmpsl
pop
add
lret
cli
loopne
sbb
rep
push
lea
out
add
mov
or
jmp
test
scas
gs
xchg
pop
mov
push
mov
sbb
mov
ljmp
enter
xorb
ja
adc
push
pushf
push
inc
adc
push
xchg
jmp
in
imul
ss
pop
gs
das
mov
sub
and
sub
dec
jmp
mov
stos
pop
xchg
adc
subb
rcr
inc
mov
pop
sbb
sub
pop
cmp
mov
cltd
idivb
insl
jp
int
xchg
jge
jae
and
inc
xlat
idivb
lar
aas
dec
pushf
rorb
mov
fcompl
xchg
and
test
fsubl
in
hlt
popf
into
jo
mov
ss
loop
sarb
or
pop
push
pop
inc
cs
xlat
mov
outsb
das
push
jle
inc
sub
int
incb
mov
and
dec
loope
test
mov
cltd
test
dec
imul
clc
scas
xchg
push
lcall
or
mov
inc
mov
in
xor
fdivrs
pop
push
and
sarl
xor
push
cli
rcrb
leave
fstpt
pop
iret
sti
sbb
or
subb
dec
fmul
dec
scas
and
dec
imul
push
es
shlb
and
outsl
loopne
xchg
icebp
pushf
ja
arpl
stos
xlat
mov
dec
mov
jge
out
mov
jmp
aas
aad
mov
divb
mov
sbb
pop
ja
into
dec
or
dec
ja
lods
pushf
lods
aaa
inc
daa
jne
sbb
in
jns
lock
adc
add
ljmp
aam
cmp
cmp
jecxz
arpl
lods
test
add
loop
inc
inc
xor
xchg
data16
xchg
enter
inc
jle
jbe
pop
lods
movsb
fstpl
or
xchg
test
and
jb
and
sub
cld
sbb
outsb
dec
xlat
in
inc
xchg
fwait
mov
push
or
jecxz
mov
aaa
add
jg
inc
loop
mov
sbbb
cmc
xchg
icebp
je
mov
fwait
leave
mov
mov
and
inc
jnp
mov
mov
out
push
shll
lds
lods
js
push
cmp
lahf
xchg
test
imul
fcmove
jg
xor
aam
push
leave
or
fwait
inc
push
cld
lock
sub
call
cmpsb
in
mov
jge
test
das
adc
xchg
xor
cmpsb
and
std
jecxz
push
or
mov
das
cmpsb
push
xlat
add
cmpsb
xor
xchg
repnz
jmp
push
mov
pop
gs
adc
js
jle
inc
loope
mov
pusha
or
push
and
cmp
popa
scas
pop
xchg
mov
dec
sti
mov
test
out
cli
cmpsl
or
jp
xorl
or
lret
lock
inc
mov
xor
loope
cmpl
pop
fldl
dec
test
aas
add
adc
xchg
lea
xor
pop
push
add
sub
jmp
pop
mov
and
xor
adc
xchg
or
clc
pop
aad
inc
mov
int3
sbb
loopne
inc
xchg
add
lcall
mov
xchg
or
inc
push
mov
repnz
pop
ret
repz
cltd
int
mov
je
pop
adc
push
rol
sbb
add
popf
pop
adc
dec
add
mov
jle
negb
add
and
lock
xchg
lock
xchg
ret
int
push
cld
xchg
in
add
mov
subl
gs
mov
sub
aaa
mov
sub
jb
jl
in
clc
and
push
insl
sub
cli
call
flds
fs
rcll
into
lret
aaa
arpl
inc
adc
xlat
cli
push
inc
js
js
and
out
inc
loopne
add
mov
sbb
out
test
ss
xor
je
mov
inc
mov
pop
xor
cmpsb
incb
push
arpl
dec
sub
cmc
icebp
mov
out
mov
dec
rcl
arpl
push
scas
std
jnp
enter
ds
push
aam
ret
sub
lds
in
xor
pop
lahf
mov
push
addr16
ffreep
hlt
sbb
fmul
in
mov
mov
loopne
xchg
mov
inc
das
dec
inc
jecxz
sbb
add
sahf
shrl
adc
imul
cmp
sbb
add
dec
and
mov
ret
out
iret
cmp
fdivl
or
lea
stos
sub
jne
loope
subl
push
movsl
fnstsw
mov
loopne
push
pop
bound
mov
sbb
and
xor
test
inc
fwait
aaa
loope
cmpsb
mov
fbstp
sbb
out
pop
xchg
dec
xchg
test
or
adc
and
outsl
push
dec
ret
ss
mov
jae
in
outsb
sub
push
push
add
stos
cmp
arpl
pop
shlb
lds
cmpsl
push
rorl
loop
mov
insb
int
ja
imul
pop
shlb
mov
push
or
ret
pushf
and
xor
out
sub
jecxz
addl
sti
ds
cld
test
sub
or
sub
lea
movsl
push
inc
sub
sub
sub
sbb
adc
xor
in
out
out
mov
xchg
push
and
mov
imul
xlat
push
arpl
pop
sbb
fsubr
aas
lods
push
ljmp
cmp
cmp
dec
out
aad
jecxz
ljmp
adc
iret
sbb
jl
stos
ficoms
and
sub
xchg
aam
testb
mov
hlt
or
ljmp
pop
loope
lret
adc
add
sbb
xchg
pop
ljmp
orl
push
pop
add
lret
sbb
nop
mov
shr
mov
in
subb
sahf
iret
cs
mov
inc
mov
mov
mov
push
sbb
pushf
xchg
pushf
xchg
mov
sti
push
push
in
push
add
sub
pop
fcompl
add
xor
lcall
mov
test
jle
add
pop
insl
xchg
adc
and
arpl
xchg
sbb
ja
smsw
mov
popf
dec
xorb
xor
and
andb
add
orl
test
xorb
or
mov
pop
adc
xchg
push
repz
sbb
add
jno
pop
jne
add
sbb
ja
sti
or
sub
mov
cli
int
lock
rclb
inc
out
stos
and
scas
into
filds
in
sub
dec
mov
dec
push
push
fs
or
imul
pop
mov
xchg
sub
push
movb
mov
in
je
pop
dec
jo
loop
mov
add
stos
xchg
mov
movsl
inc
fs
loopne
adc
xor
pop
or
icebp
mov
cld
inc
inc
cltd
inc
lods
cmp
inc
sbb
mov
pop
das
ljmp
xor
push
pusha
jmp
xor
mov
xchg
xchg
lds
or
cmp
xchg
mov
nop
iret
xorl
add
mov
popf
stos
pop
xor
dec
loopne
rorb
add
sub
mov
cmc
roll
testl
sahf
int3
xor
jecxz
enter
pop
rcl
hlt
xchg
mov
imul
sbb
sbb
testb
xchg
sbb
pop
fidivl
xchg
rolb
loope
mov
jle
pop
xchg
jnp
mov
imul
pusha
sarl
test
sbb
inc
inc
mov
or
and
test
cmp
cmpb
insl
rolb
cmpsb
mov
in
fdivrs
jmp
mov
call
xlat
enter
or
rorb
pop
repnz
andb
stos
pop
dec
test
and
fs
daa
fistl
fwait
dec
jmp
fldcw
add
in
call
pusha
shll
inc
clc
add
lds
and
js
dec
adc
sbb
mov
sub
pop
pop
or
popa
ret
cmp
pop
xchg
fcmovnbe
sbb
inc
mov
pusha
inc
cs
fcomps
daa
leave
dec
mov
push
stc
mov
inc
sbb
stos
cmpsl
push
adc
fnsave
enter
in
test
inc
mov
rcrb
outsb
pop
push
outsb
sahf
pushf
xchg
and
int
aas
jle
adc
cmp
aaa
jns
or
cwtl
popf
cld
stos
cmp
adc
jnp
out
add
fdivl
dec
insb
xchg
xchg
xchg
push
sbb
mov
imul
lds
mov
test
aaa
xchg
sbb
lock
out
cmp
stc
mov
dec
push
nop
aam
lock
notl
je
fs
aaa
jo
lcall
xor
mov
cwtl
iret
inc
xlat
test
xchg
mov
das
mov
call
mov
adc
arpl
fldt
sti
pop
stc
int3
bound
inc
call
ljmp
jno
out
xlat
call
mov
and
pop
pop
jge
sub
mov
inc
pop
dec
xorb
test
push
xchg
out
ja
push
sub
ljmp
xorb
xor
or
sbb
stc
into
add
pop
lds
adc
fdivrs
lock
ja
hlt
stos
cmp
push
xchg
repz
shll
xchg
lret
jl
insl
mov
pextrw
lods
add
clc
sti
mov
mov
mov
lcall
push
roll
scas
movsb
mov
loopne
and
lcall
roll
mov
es
fbld
mov
notb
cs
cwtl
inc
outsb
pushf
stc
clc
mov
push
movsb
je
jmp
jbe
or
dec
loopne
sahf
scas
push
adc
and
mov
insl
repnz
pop
xor
mov
lcall
add
push
cmp
ficoms
pop
xchg
stc
out
add
pusha
or
adc
mov
stos
aas
popa
and
in
sub
ficoml
das
sub
sub
cmp
jne
jge
lret
in
int
cld
inc
in
subl
push
cmpsb
mov
jle
xor
out
push
cld
and
inc
shll
mov
pop
sbb
popa
pop
sub
mov
gs
sub
movsb
addr16
out
mov
pop
shlb
sub
repnz
adc
int
leave
mov
jae
enter
xlat
sar
cli
lock
stos
imul
add
jbe
jle
xlat
dec
into
push
mov
insl
or
inc
movsb
mov
cli
pushf
cs
aad
shlb
gs
stos
lret
lea
sub
and
lds
mov
mov
enter
add
loope
push
jp
mov
xchg
adc
int
or
ret
sbb
xor
mov
cmpsb
mov
je
pop
dec
sahf
lock
xchg
test
jmp
mov
inc
sub
and
sti
mov
mov
enter
fnstsw
movsl
call
xlat
jo
mov
cmpsl
mov
cld
cli
in
adc
add
lods
inc
cmp
les
stos
jns
rcll
pop
mov
mov
adc
rcl
push
xlat
fs
in
clc
push
sbb
mov
loope
pusha
xchg
aam
mulb
jne
mov
cwtl
imul
imul
ljmp
push
adc
in
pop
nop
xchg
pop
sub
pop
xchg
push
adc
std
mov
lret
sbb
adc
aad
movsb
das
mov
sti
ds
gs
mov
jmp
shrl
loopne
idiv
sahf
fimuls
inc
mov
insl
call
mov
scas
aad
test
xchg
mov
and
fisubl
ljmp
imul
leave
jns
push
push
inc
push
dec
sbbb
shll
jno
cmp
jbe
int3
xchg
rcrb
ss
push
mov
pop
je
or
popa
js
adcb
and
mov
sbb
hlt
pop
jmp
or
mov
incb
xor
xchg
jo
mov
jbe
fcoml
ljmp
aaa
pushf
sbb
add
cmp
mov
mov
and
mov
bound
cmpsb
sub
divl
cwtl
xchg
fidivl
negb
outsb
out
pushf
sahf
lods
cmp
test
xchg
sub
or
fildll
mov
mov
add
call
popa
movsb
xchg
xlat
hlt
outsb
loop
enter
sub
mov
fdivrs
and
ljmp
mov
lea
in
dec
lds
pusha
or
adc
pop
out
pop
insb
and
and
pop
and
je
nop
loop
aam
xchg
enter
jge
and
sub
lret
test
cmpsb
jne
pusha
push
aaa
bound
iret
ror
sti
lods
xor
xchg
fistps
pop
inc
sub
mov
sbb
sbb
mov
outsl
inc
xchg
push
out
adc
fwait
push
adc
fstl
inc
fcoms
and
sbb
and
jl
js
in
test
int
rcr
insl
adc
dec
les
jl
int3
mov
inc
testb
jb
push
inc
push
sahf
and
test
and
push
xchg
adc
mov
out
dec
out
sub
xchg
jb
pop
shrb
jo
sbb
adc
test
pop
push
stos
cmpsl
dec
xchg
push
and
jbe
mov
add
sti
and
xchg
mov
xor
mov
iret
pop
push
mov
dec
mov
sub
mov
cwtl
scas
and
push
xor
andb
cmp
in
mov
int3
fcmovnu
push
in
dec
mov
xor
loop
dec
mov
xor
add
sbb
hlt
dec
push
mulb
inc
loopne
loopne
rcrl
fisttps
lcall
adc
cwtl
and
lcall
pop
xchg
and
mov
inc
aas
xchg
or
inc
xor
mov
xorb
ret
xor
es
xor
add
daa
or
movsl
ret
push
mov
aaa
lahf
inc
mov
xchg
mov
fistps
xlat
rcll
fldenv
movsl
fsubl
rclb
inc
mov
pop
pushf
les
jne
and
or
xor
or
adc
stos
int3
mov
push
adc
inc
mov
pop
cmpsl
mov
mov
outsb
jmp
add
mov
dec
test
or
loop
mov
xor
std
add
stc
out
mov
mov
out
mov
pop
jns
icebp
leave
mov
icebp
push
xor
xchg
pop
mov
test
adc
push
push
and
xchg
mov
ljmp
mov
sar
push
inc
jno
lahf
roll
pop
bound
pop
je
out
xchg
inc
into
rolb
pop
xchg
push
xchg
scas
mov
sub
insb
mov
and
in
jecxz
mov
xchg
xlat
mov
jge
add
negl
mov
pop
pop
mov
pop
adc
sbb
fsubrs
mov
iret
adc
in
movsb
dec
sarl
xchg
ja
pop
mov
mov
insb
sbb
push
icebp
das
xor
push
lock
push
jns
in
outsw
mov
daa
fstpl
fwait
rcll
jnp
dec
inc
cmpl
cmp
clc
sarb
inc
mov
inc
cmp
jnp
push
adc
into
and
xor
imul
loope
inc
jl
dec
inc
cld
pop
lret
pop
mov
adc
shl
lret
sub
sub
pop
lods
mov
and
sti
lock
xor
dec
int3
pop
lods
jmp
and
popf
xor
sbb
inc
andl
cmp
jae
lock
mov
les
cltd
pop
addr16
in
dec
dec
jg
cs
ds
in
jns
mov
clc
rcrb
xchg
sbb
scas
je
cmp
imul
mov
dec
in
cmpsb
mov
hlt
xchg
outsl
xor
loop
out
jp
adc
mov
sub
sbb
movsb
testl
lret
push
pop
cs
xchg
cmpsl
fdivs
or
mov
insl
stos
xchg
js
mov
loop
lds
insl
js
test
adc
pop
pushf
push
pop
test
fisttpll
repnz
call
jmp
sub
pop
adc
push
mov
call
sub
jo
sbb
push
mov
lahf
movsb
push
cltd
cltd
std
into
sub
xor
or
scas
lods
or
pop
ja
std
mov
lahf
lret
movsb
inc
sub
into
mov
add
lea
sahf
insb
mulb
dec
and
mov
sub
dec
aam
adc
ljmp
mov
cli
add
jbe
xchg
dec
int3
shrb
mov
gs
dec
jbe
dec
xchg
sub
popa
sbb
dec
xor
adc
mov
shr
enter
push
mov
dec
pop
fdivp
es
daa
add
xchg
cmp
mov
insl
into
lods
addr16
inc
inc
xchg
cmc
cmp
mov
ss
dec
cmpsl
shlb
cmp
sub
jp
and
ss
xchg
pusha
mov
jp
cmp
jbe
xchg
out
cwtl
pop
or
sbb
mov
cmc
test
inc
mov
sbb
jae
pop
pusha
enter
out
stc
xchg
repnz
or
fidivs
lahf
adc
in
push
loope
cmpsb
arpl
xor
das
or
clc
aas
lea
adc
out
adcl
fs
jnp
cmc
pop
pop
lock
push
xor
pop
out
sub
add
mov
push
cmp
test
fidivrs
int
int
pusha
cmc
sbb
xchg
out
or
mov
shr
sub
js
inc
mov
pop
xlat
pop
icebp
icebp
or
sti
pop
outsl
mov
in
std
push
lahf
adc
popa
or
cmp
lret
cli
xchg
and
push
jmp
push
cmc
insb
or
cltd
xchg
loope
popf
aam
xchg
in
ss
rcl
push
xchg
iret
cmp
pop
xchg
jbe
faddl
xor
cmp
in
call
test
add
scas
das
sti
cmp
add
and
and
and
adc
push
add
push
fistl
mov
nop
repz
aam
stos
mov
mov
cmpsb
xchg
adc
push
and
or
popf
sarb
dec
ja
xlat
push
xor
mov
popf
bswap
call
xor
pop
mov
daa
int3
pushf
sbb
sarb
fldl
mov
xchg
aaa
sub
or
fcmovbe
idiv
fsubp
cwtl
push
call
xchg
cmpsl
mov
flds
sbb
scas
aad
es
test
imul
adc
int
push
and
mov
add
jbe
cmp
out
mov
pushw
pop
push
adc
or
cwtl
pusha
aaa
xchg
cmp
cmp
loopne
iret
xchg
out
rcr
push
mov
or
push
inc
adc
jg
icebp
fsts
test
in
cmp
out
sbb
push
cmp
bound
lods
loop
addr16
and
dec
jl
shlb
icebp
nop
jns
out
sbb
imul
in
stos
pop
lods
mov
divb
cmp
fstl
add
lahf
push
out
dec
xchg
cli
pop
aas
aam
iret
mov
pop
xchg
cmc
pushf
inc
mov
xchg
repnz
sbb
pushl
repnz
or
sbb
jns
in
pushf
inc
mov
jne
ret
pop
rcll
pushf
cmp
cmp
or
imul
sub
testl
inc
mov
inc
sahf
out
cwtl
xor
dec
push
int
mov
add
pop
in
cmp
pop
out
cmpsb
fistl
xor
sahf
mov
outsb
fdivs
aam
sbb
cmp
and
cmp
mov
repnz
call
push
pop
sbb
in
mov
shrl
out
and
fucomip
lcall
test
in
in
jmp
movsb
cltd
dec
pop
mov
cmpb
mov
jne
mov
lods
mov
insb
push
mov
and
pop
ds
mov
inc
and
dec
or
dec
mov
icebp
aad
push
repz
xor
in
sub
fs
inc
ljmp
cwtl
int3
inc
stos
movb
jae
cmpsb
leave
pop
lret
ficomps
or
pushf
or
add
sarb
mov
in
fldenv
dec
and
fistpl
xchg
inc
stos
cs
sbb
loop
mov
cld
outsb
or
push
leave
mov
pop
dec
repnz
mov
and
out
push
sahf
test
in
cld
cmp
mov
mov
cmpsb
lcall
lret
jbe
fisttps
adc
cmp
sub
or
adc
movsb
mov
fwait
in
and
and
fildll
fyl2x
mov
add
jp
inc
xor
mov
aas
xor
inc
mov
jmp
ljmp
and
xor
xchg
pushf
std
movsb
and
out
xor
jp
outsl
inc
fiadds
pmaxub
inc
test
enter
jb
or
jns
ret
lret
stos
lods
push
push
sarl
sti
pusha
add
hlt
mov
lock
pop
or
jbe
fldl
push
mov
fdivl
outsb
fdivs
fwait
dec
arpl
mov
notb
dec
adc
leave
sub
mov
dec
cmpsb
iret
arpl
jmp
fidivrs
loopne
pop
sbb
lods
pushf
adc
orl
mov
repz
pop
aas
and
cmp
je
and
xchg
add
xchg
xchg
pop
call
xchg
inc
lock
fidivl
test
push
jns
push
scas
mov
jns
add
inc
xor
jmp
out
mov
int3
mov
movsl
sub
mov
inc
ret
inc
xchg
pop
shll
xor
lret
repz
mov
fiaddl
shr
pop
mov
xchg
xchg
movsb
ror
dec
or
into
insl
fs
cmp
dec
pop
stos
lcall
lcall
sahf
ja
mov
adc
mov
mov
inc
cwtl
sbb
fsubrs
je
lods
mov
or
in
lcall
mov
xchg
dec
imul
add
mov
or
push
fcoml
xor
sub
insb
mov
fildll
es
push
inc
aas
pop
aas
ja
or
xchg
pop
mov
xor
outsl
mov
dec
sti
mov
cld
int3
sbb
push
xchg
les
jnp
lea
cmpsl
xchg
dec
add
pop
out
sarb
stc
repnz
cmp
sbb
xlat
nop
adc
push
loop
xor
mov
add
lods
mov
mov
js
lds
sbb
rcll
loopne
push
push
xchg
shl
adc
fbstp
push
pop
hlt
inc
inc
icebp
lret
and
xchg
xor
daa
jns
jb
divl
lods
xchg
push
test
pop
cmp
lahf
mov
cwtl
popa
subl
push
xor
mov
sarl
mov
test
mov
mov
inc
cmpl
mov
js
fs
mov
paddsw
and
cmpsl
adcb
lea
mov
stos
sti
rolb
mov
imul
popl
xlat
sbb
mov
addr16
mulb
lret
hlt
mov
fadds
xor
aas
cmp
rorl
or
jbe
jmp
lea
mov
call
arpl
cmp
stos
dec
adc
jnp
sarl
dec
leave
pop
shlb
ficoms
jno
aam
call
pop
pop
andl
xor
outsl
push
das
push
add
cmp
rcr
xorl
push
je
pop
sub
dec
adc
or
out
mov
imulb
mov
nop
jp
jmp
or
adc
pushf
jnp
movb
adc
adc
insb
lret
push
fists
mov
and
sbb
adc
sub
fldl
add
mov
jge
or
int
scas
bound
dec
push
add
add
cltd
sub
adc
jle
out
xorl
fisttpl
shrb
ljmp
and
jmp
pop
jb
les
and
dec
movsb
loopne
test
sbb
mov
pop
cmp
pusha
stos
mov
icebp
outsb
lcall
mov
mov
xor
int3
xor
pop
jb
dec
test
mov
dec
insb
pop
inc
xor
or
test
xchg
cmp
mov
jecxz
push
call
je
lods
xchg
aam
pop
fucom
test
pop
std
xchg
into
shll
movsb
jle
inc
jecxz
inc
stos
fwait
shrb
loope
imul
cmpsb
cmp
jmp
scas
xchg
xor
cli
push
jmp
xchg
xlat
xor
pop
inc
and
and
les
xchg
lock
jns
inc
push
cmp
adc
notb
and
and
jbe
movsb
mov
aaa
dec
fxam
in
push
push
ljmp
fs
xchg
movsl
arpl
mov
in
pusha
jae
loop
js
repz
das
mov
ret
jle
jg
inc
stos
lea
hlt
push
jg
aam
adc
repz
ret
mov
push
rcrb
pop
ljmp
lret
addb
jl
push
movsb
sbb
pop
into
lea
cmpsl
xchg
xchg
outsb
xchg
push
mov
mov
imul
rcr
inc
dec
push
movsb
and
hlt
incl
repnz
sbb
repz
jge
out
xchg
mov
in
nop
pop
testb
mov
inc
sbbb
dec
lds
negb
jbe
jg
jmp
mov
daa
aad
or
xor
test
scas
mov
xchg
adc
aad
insl
jne
fadd
stos
cmp
cmp
add
pop
jo
shlb
gs
and
lret
jge
sahf
add
pop
or
popl
movsl
inc
push
add
loop
insl
hlt
aad
adc
or
js
xor
push
dec
imul
ret
sbbb
lods
jmp
adc
iret
popf
cmc
mov
dec
sbb
add
into
jp
adc
jle
pop
mov
pop
shrl
dec
inc
dec
push
repnz
in
lret
dec
cmpsl
mov
nop
fisttps
daa
repnz
adc
jbe
jge
aas
sbb
sub
repz
out
scas
pop
imul
jmp
inc
xor
xchg
jmp
mov
jno
adc
loop
fisttpll
repnz
data16
lods
jb
lods
add
hlt
stos
mov
enter
fldz
push
push
pop
repz
stos
xor
adcl
xchg
xorb
ljmp
ret
mov
repnz
outsl
lahf
sarl
jae
push
sbb
xchg
lret
imul
ret
fcomi
push
push
pop
enter
mov
xlat
pop
inc
cmp
pop
xchg
xchg
and
fsubs
mov
stc
mov
insb
sbb
xchg
jmp
jecxz
pop
mov
hlt
cmp
mov
dec
inc
lds
notl
out
push
pop
rcrl
xchg
test
push
jne
into
lahf
sbb
sbb
frstor
rorl
out
xchg
dec
jge
outsl
fdivp
inc
push
movsl
ds
ret
xchg
lods
inc
mov
or
push
and
into
out
xchg
xchg
popw
outsl
adc
ret
adc
fstpt
daa
push
xchg
loopne
nop
mov
dec
cld
pop
cli
insl
mov
pop
outsl
xchg
dec
aas
or
cltd
push
je
mov
cltd
xor
mov
or
push
mov
fdiv
push
pop
mov
inc
dec
andb
sbb
add
and
ds
adcb
int3
lret
mov
testb
fimuls
push
lahf
push
sub
mov
xchg
popa
add
mov
movsl
popa
arpl
loope
rorl
pop
cwtl
lret
movsl
adc
into
mov
fisttps
hlt
lret
leave
xchg
ficoml
inc
push
out
pop
leave
pop
movsb
xchg
add
jbe
or
repz
adc
ljmp
cmp
push
cmpb
adc
mov
jge
clc
xchg
mov
imul
hlt
data16
jmp
fadds
mov
mov
clc
fidivs
imul
test
aam
scas
rcll
movsb
mov
shll
pop
cmp
arpl
stc
mov
movsb
loop
aam
and
mov
add
add
test
mov
cld
aam
in
cmp
imul
xor
dec
inc
cltd
stos
fsubs
mov
adc
call
pop
mov
insl
xchg
adc
nop
repnz
xor
aaa
roll
pop
mov
mov
inc
insl
mov
outsl
ficomps
pop
popa
in
cmp
aaa
sarb
ret
popa
notb
cld
mov
push
cmp
dec
xchg
cmp
or
mov
mov
lods
popa
mov
rcrb
jg
scas
je
mov
lods
sub
push
cwtl
mov
in
insb
mov
je
mov
clc
call
inc
out
mov
cmp
cmc
mov
in
mov
push
icebp
clc
push
add
pop
dec
mov
xchg
push
mov
outsb
hlt
sti
cwtl
pop
movsl
in
lret
sub
lcall
in
outsb
add
and
imul
ret
lret
or
inc
inc
pop
mov
or
mov
xchg
sahf
dec
das
rclb
xor
rcrl
or
dec
in
aas
int
jecxz
or
push
sub
adc
jecxz
lods
jae
or
imul
in
xlat
imul
sbb
pop
fst
repnz
push
mov
jecxz
xchg
jne
xchg
adc
and
popf
insl
xchg
repz
sbb
push
cmpsb
pop
leave
ficoms
mov
repnz
or
sbb
pop
test
mov
outsl
xchg
fs
incb
adc
mov
imul
jecxz
dec
jo
fwait
es
jl
int
and
pop
pushf
adc
sbb
in
imul
jle
enter
cmp
fdivs
insl
cmpsb
mov
shll
loop
test
aam
repnz
dec
and
addr16
imul
jecxz
and
lods
jns
cld
jno
push
cmp
mov
adc
jbe
jmp
xchg
push
repnz
je
fdecstp
push
jb
test
lea
mov
sbb
mov
in
cmp
out
lock
aaa
adc
cmp
and
mov
cmp
setae
sbb
sub
iret
add
adc
xchg
fdivrp
cmp
imul
lret
in
cmp
push
stc
out
mov
pop
inc
aam
and
loope
fwait
lret
pop
or
cli
lret
cld
add
iret
xlat
fninit
or
or
cmp
sub
icebp
enter
push
cltd
loopne
aas
pop
pop
lahf
sbb
out
push
mov
popa
push
ss
bnd
pop
outsb
outsl
adc
scas
cmc
mov
adc
jecxz
sbb
mov
and
mov
fdivrs
lret
scas
xchg
rcr
outsl
jae
inc
les
bound
aad
fnstsw
mov
pop
mov
lea
outsb
gs
pop
inc
and
orb
fwait
add
cmp
into
leave
push
cltd
mov
and
enter
push
dec
ljmp
xchg
push
sbb
imul
shlb
call
push
imul
int
insl
lods
fists
sahf
lods
and
push
cmp
cli
pusha
pop
push
or
cltd
and
ja
add
pop
lret
sbb
cltd
in
adc
pop
gs
push
jo
test
mov
dec
pop
mov
and
push
mov
movsl
std
and
mov
je
adc
bound
movsl
jno
call
sti
popa
ret
mov
adc
out
rolb
adc
outsb
adc
daa
and
lcall
add
fwait
pop
mov
lds
sub
movsb
adc
subb
jl
mov
or
pop
jg
push
push
adc
repnz
dec
xchg
hlt
cmp
sti
pop
pushf
repnz
mov
jo
gs
push
gs
aaa
sbb
jmp
fwait
push
jo
outsb
fwait
idivb
mov
fsubs
dec
je
dec
pushf
negb
dec
sbb
stos
cltd
ja
rorl
aas
cmpsl
inc
pop
sub
mov
cmpsl
arpl
int
lret
jbe
rorl
call
dec
sbb
pop
hlt
inc
aas
roll
nop
std
ficoms
into
mov
in
lret
or
mov
gs
push
jo
jnp
lea
jno
push
inc
pusha
aad
mov
adc
in
sub
pshufw
sub
push
mov
inc
ffree
lea
xor
push
sub
test
imul
dec
push
jecxz
test
loope
jae
daa
sbb
mov
cmp
pop
pop
fnsave
dec
push
rorl
jo
jno
pop
lahf
pop
mov
cmp
imul
add
adc
push
push
adc
sbb
rcll
push
mov
mov
and
sub
or
shlb
out
test
cld
call
mov
sbb
shrl
jle
pop
mov
jmp
mov
test
loopne
in
ljmp
arpl
xor
jecxz
jns
das
xorl
pop
push
mov
fcoms
xor
cmc
ret
push
fidivs
adc
data16
add
out
xor
lods
bound
mov
and
or
mov
cmp
jmp
stos
or
lcall
hlt
cmp
in
scas
sbbl
fdivrl
inc
aam
push
nop
and
pop
push
mov
addr16
mov
mov
jb
xchg
or
xchg
cmpsb
xor
lret
js
dec
pop
shll
push
in
mov
jb
xor
mov
push
rolb
sti
mov
push
mov
test
xor
cli
ja
sti
cmc
insb
fneni(8087
mov
stos
outsl
and
sbb
jg
fcoms
or
dec
mov
out
out
out
gs
and
and
ja
dec
jle
jne
push
add
mov
mov
cmp
push
dec
jl
leave
adc
addb
pop
pop
sbbl
in
fwait
in
in
dec
lods
adc
rol
mov
jmp
mov
xor
pop
std
mov
or
push
iret
in
cmp
push
das
sub
arpl
jecxz
mov
pop
cmpsb
xchg
cmpsb
mov
cmpsl
stos
mov
lret
xchg
stos
mov
jb
fbstp
test
mov
pop
xor
ficompl
mov
fdivr
and
out
jo
fstps
jae
fldt
out
mov
xchg
inc
shl
je
add
in
sub
mov
push
lock
xchg
sti
pop
cmp
stc
dec
cmpsl
outsb
test
out
xchg
out
fucomi
cmpsb
cmp
inc
pushf
or
and
cmpb
mov
in
inc
xchg
aad
jmp
pop
cmp
lcall
pop
repz
jp
cmpb
dec
popf
add
xor
lods
xor
mov
mov
inc
push
push
jno
scas
insl
mov
outsl
sub
push
xchg
mov
cli
call
cld
xchg
ret
stos
add
push
outsl
inc
mov
test
es
mov
xor
lcall
inc
jb
fiaddl
cmp
jnp
outsl
jmp
add
lcall
push
dec
shll
pop
and
mov
mov
sub
stc
je
pop
les
mov
out
in
pushf
insb
push
or
pushf
mov
jns
mov
nop
ret
jg
pop
xchg
fisttps
push
ljmp
xor
pop
pop
ds
nop
cmp
sbb
enter
dec
sahf
sarb
push
enter
push
push
stos
enter
into
fxch
fwait
unpcklps
cmpsb
pslld
jmp
push
jb
pop
lock
add
jo
xchg
adc
and
adc
sti
int
popf
aam
cli
iret
lods
push
stos
scas
cltd
loopne
xor
add
inc
das
sbb
pop
dec
ljmp
pop
popl
jge
jge
mov
and
enter
inc
das
pop
jge
dec
adc
sub
shll
lahf
lret
and
mov
scas
jg
xchg
push
cld
js
repnz
out
cmc
stc
add
leave
aaa
pop
pop
inc
pop
neg
mov
inc
mov
mov
fsts
sbb
sub
sbb
pop
push
je
xchg
mov
mov
jp
sub
cs
fldl2e
push
loope
push
and
cmpb
adc
fsubrl
lahf
ja
sti
push
push
sub
jl
fdivl
lret
push
fdivr
sbb
and
push
xor
xor
les
push
inc
pop
dec
inc
sub
push
dec
vmovq
sbb
cmp
lret
xor
loop
leave
pop
fnsave
dec
or
in
sbb
mov
pop
ret
jmp
xchg
mov
jae
scas
xchg
shlb
xor
movsb
inc
repz
sbb
in
test
add
xor
iret
ret
test
ds
xlat
lods
fwait
sub
xchg
int3
dec
push
not
adc
clc
fsub
sbb
xor
add
add
push
sub
dec
lds
adc
inc
push
dec
and
dec
dec
test
sahf
cmp
adc
xor
test
sarl
mov
xchg
pop
xchg
and
lcall
rolb
jecxz
pusha
fistps
mov
daa
popf
es
mov
das
addr16
jl
daa
fldt
and
stos
cmp
addb
clc
test
dec
repz
inc
shll
add
jo
shrl
mov
cld
jnp
dec
outsb
pop
call
mov
cmp
fidivrl
sbb
aas
sub
sbb
decb
mov
jo
sbb
pusha
arpl
push
sbb
jae
repnz
ds
out
sbb
sbb
movsb
dec
push
loope
lods
xchg
repz
in
jnp
outsl
push
cmpsl
lret
adc
push
jmp
add
and
xchg
out
add
or
inc
jp
xchg
repnz
aad
pusha
in
mov
mov
stos
arpl
jmp
pop
cmp
cmc
popf
jb
out
lcall
rolb
loop
mov
add
xchg
mov
aas
xor
leave
sub
jmp
repz
lods
je
lret
push
mov
rcll
in
loope
cmp
lret
pop
int3
lods
add
jbe
neg
xorb
pushf
movsb
enter
outsb
in
sub
fcompl
add
dec
inc
dec
or
daa
inc
lahf
push
pusha
into
mov
pop
je
xor
pop
push
lods
push
inc
push
orl
and
sbb
sahf
gs
insb
mov
dec
hlt
sub
push
ret
and
mov
jmp
push
dec
lahf
jle
inc
mov
sub
test
shll
out
xchg
sbb
js
bound
loope
mov
mov
test
jg
jnp
movsb
pop
mov
lret
ds
mov
add
fldl
mov
push
movsb
pop
xchg
in
xor
ret
int
xchg
mov
xchg
dec
lock
xchg
std
mov
shl
test
cmpsl
cmp
sub
movsb
adc
les
clc
cmp
fsubp
out
test
fldl
ret
xor
dec
rcll
mov
in
cmp
mov
lcall
xchg
in
mov
cwtl
cli
popf
fisubrl
jns
cmp
cmp
sarb
sbb
sbb
incb
js
xchg
or
sbb
ljmp
xor
or
pop
sub
stc
sub
push
cwtl
mov
xlat
outsb
leave
loopne
int
sti
cld
popf
stc
mov
xor
pop
push
cli
and
xchg
aaa
pop
cmp
imul
aaa
mov
mov
nop
pop
or
sbb
js
and
mov
hlt
push
jl
pushf
xor
fsubs
out
sbb
ja
bound
sti
sub
pop
test
xor
fbstp
mov
pop
mov
adc
dec
fxam
imul
arpl
xchg
lcall
lahf
adc
add
add
imulb
negb
call
mov
xor
dec
and
xchg
inc
cltd
jmp
sub
jae
mov
cli
loop
into
or
push
cli
sub
mov
jno
stos
testb
lods
xorb
jae
ffree
mov
sti
scas
stos
jne
jns
dec
in
negb
cmc
jp
push
test
mov
scas
in
scas
ja
fs
adc
mov
aam
or
pop
ds
cli
nop
and
test
and
aaa
xchg
int
fstl
sti
xchg
das
jbe
pop
push
loope
jne
scas
pusha
pushf
adc
out
sbb
mov
push
movsl
loopne
fstpt
cmpl
cwtl
push
cmpsb
movsb
jmp
jbe
inc
inc
xor
pop
sub
xor
test
or
inc
inc
aam
sbb
sub
les
jp
jp
and
inc
cmp
adc
mov
outsb
sbb
dec
jnp
cltd
cmp
das
sub
mov
jle
bswap
pop
aad
fldenv
sub
jbe
or
andl
loopne
mov
mov
adc
mov
outsb
cwtl
outsl
daa
in
fldenv
push
test
add
mov
push
jae
shll
or
into
push
dec
and
stc
cmovnp
popf
aad
iret
and
adc
out
lds
mov
push
mov
cmp
dec
pushf
popf
enter
push
sysret
lea
jbe
call
ds
pushf
fstp
cmpsl
mov
pop
ret
cld
popf
in
in
push
into
cmp
mov
scas
dec
shrb
testl
lods
aas
sahf
lcall
mov
mov
push
mov
push
add
mov
lcall
xor
test
sbb
adc
stos
inc
xchg
push
mov
xor
roll
arpl
or
das
inc
nop
mov
pop
dec
ficompl
jne
mov
ljmp
and
mov
adc
xchg
pop
ljmp
gs
xchg
xor
xlat
fwait
decb
mov
popf
std
jge
add
jbe
xchg
movsl
mov
mov
dec
in
dec
push
pushf
xor
loope
push
mov
dec
add
dec
and
jne
push
in
mov
mov
pop
xlat
fisubl
int3
mov
stc
and
pop
push
mov
xchg
pusha
xchg
jle
push
icebp
icebp
pop
fistl
adc
push
sti
and
xchg
lret
mov
mov
cmpsl
cmp
xchg
pop
stos
sbb
xchg
pop
and
mov
fs
lahf
push
adc
cmp
cmpsb
xchg
mov
xor
inc
inc
add
add
sbb
pop
push
js
xchg
out
or
int3
cmp
int
sub
xchg
rcll
mov
fsubl
adc
or
dec
add
shlb
add
test
cs
dec
mov
push
pop
jmp
cmpsb
inc
fsts
sahf
clc
pushl
in
push
pop
into
into
cmp
mov
mull
mov
pop
and
or
inc
fadds
cld
push
in
or
xchg
insb
push
add
push
call
mov
stos
loopne
jecxz
jns
aas
loopne
repz
outsl
push
cmp
jmp
scas
mov
pop
mov
adc
sub
pop
xchg
mov
or
or
pop
ja
adc
push
push
dec
and
mov
insb
xorb
xor
cld
jl
add
mov
aas
rcl
jg
mov
and
push
xchg
lock
mov
enter
pop
mov
cmpsb
stos
out
movsl
jne
jp
stos
inc
xor
mov
aas
pop
add
xor
and
out
iret
mov
cmc
test
in
movsl
push
pop
shll
mov
jg
lcall
inc
xor
cmp
std
aaa
fs
andb
ljmp
jns
pop
or
int3
xor
adc
sub
mov
and
lret
mov
jp
adc
aas
sbb
or
sbbl
push
sbb
lret
test
cmp
and
fsubs
mov
pop
or
leave
cmc
pop
and
adc
mov
aad
rep
scas
mov
mov
adc
push
sahf
add
cs
add
std
pop
jg
pop
sahf
jg
imulb
outsb
cmpb
xorb
mov
movlps
xchg
mov
jmp
aam
arpl
pushf
out
subb
jl
jo
add
xchg
subb
int3
mov
sti
daa
jae
jns
shlb
sbb
xchg
xor
pop
adc
lahf
ljmp
ret
call
lahf
sbb
stos
bound
pop
lods
jae
rorb
jnp
mov
bound
scas
xlat
push
cmc
mov
xchg
aad
inc
sub
push
xor
stc
aaa
sbb
std
cmp
pop
repnz
bndstx
mov
adc
aam
xchg
mov
outsb
pop
rclb
jle
fisttpl
pop
inc
jmp
adc
adc
pop
das
mov
jl
sbb
jmp
clc
mov
sub
cmp
out
cmpsb
into
sbb
mov
mov
testb
test
cld
mov
inc
inc
sbb
jns
sbb
shr
push
mov
xor
jmp
and
push
mov
jns
cmpsb
daa
in
lock
int
fnstsw
mov
xor
pop
push
pop
adcb
dec
aaa
or
mov
jbe
movsl
jbe
dec
adc
out
imul
sarb
mov
xchg
je
mov
lds
jbe
rcrl
sti
pop
jns
sub
mov
and
sti
mov
adc
js
les
dec
test
mov
push
lahf
and
pop
mov
lcall
loop
sub
scas
push
mov
imul
jae
rcrb
cmp
fcmovnb
sub
lea
mov
or
lcall
jnp
mov
or
mov
scas
movsl
iret
dec
stos
pop
test
pop
and
inc
push
lock
dec
mov
je
or
add
lock
sarl
mov
call
sub
mov
mov
xchg
jg
xchg
xchg
sbb
push
frstor
cmp
cmp
pop
and
data16
inc
cmp
es
and
inc
int
sub
ss
test
jb
push
mov
ja
and
fcomip
mov
dec
js
daa
cmp
sub
mov
pop
push
pop
xor
mov
mov
ficomps
ss
xor
int3
inc
je
pop
push
leave
jns
iret
jbe
and
lods
lea
pop
adcb
xchg
gs
stc
dec
icebp
pusha
idivb
ss
in
ret
cmc
je
sub
and
cmpsl
pop
scas
jg
divb
lret
popf
fldenv
je
xchg
adc
test
mov
mov
mov
pusha
pop
sbb
mov
cmp
out
sub
pop
sbb
fisubrl
in
and
push
mov
les
out
dec
insl
lods
movb
cld
int3
divl
cmp
pop
sahf
mov
push
inc
das
out
jle
mov
scas
or
push
aad
jb
or
xchg
cmpsb
adc
roll
cmc
shll
cld
stc
xchg
aas
inc
out
jg
into
scas
mov
mov
jns
jae
pop
ljmp
hlt
popa
pop
or
xor
push
inc
test
in
push
cs
imul
sahf
adc
pusha
std
or
lcall
sub
dec
jne
bound
mov
mov
mov
dec
sub
outsl
lods
aad
test
cmpb
mov
repz
xor
pop
lea
xchg
das
jle
push
imull
shrl
pop
pop
outsl
xor
icebp
sub
fsubrs
int3
in
and
xor
iret
cld
test
filds
out
lahf
cmpsl
scas
xor
stos
cmpb
push
jmp
ds
inc
imul
test
mov
xor
outsb
add
add
push
pushf
inc
mov
lret
cwtl
aam
mov
sbbl
mov
mov
xor
scas
push
loope
scas
and
movsl
aad
dec
mov
cltd
les
cpuid
add
dec
fsubrp
stos
mov
push
insb
mov
inc
out
cmp
mov
push
leave
or
mov
test
out
shll
sub
push
movsl
sbb
adc
pop
test
or
push
and
dec
ja
les
sbb
or
jno
or
pop
fcmovu
cmp
std
mov
aaa
jno
in
xchg
cmpb
rorl
sbb
add
ja
test
fdivrs
fcoms
or
pop
in
loope
imul
jp
test
ss
cmp
xor
stos
adc
adc
out
xchg
lcall
leave
aam
test
icebp
push
rcr
mov
push
fdivrp
cmp
xor
mov
dec
xchg
dec
pushf
cmpsb
push
insl
out
pushl
pop
inc
call
out
or
push
xchg
push
out
adc
sbb
sbb
pop
hlt
lods
ficoml
cmpsl
es
mov
insb
in
dec
clc
and
movl
sbb
adc
pusha
mov
insb
pusha
pop
cmp
in
loop
int3
pop
outsl
or
nop
cmp
mov
mov
gs
popf
sbb
clc
and
dec
hlt
sbb
lahf
pop
push
cmpsb
cmp
loopne
fnstenv
aam
pop
mov
mov
dec
addr16
shlb
mov
inc
rorl
or
cltd
lret
daa
cmp
arpl
lods
mov
pop
dec
mov
negl
push
dec
ljmp
sbb
aad
sti
sbb
cmp
xor
pop
pop
scas
jl
xor
mov
dec
xor
sbb
add
aad
sbb
frstor
push
in
jns
pcmpeqw
out
sti
cltd
xchg
lods
mov
inc
push
rorl
jb
pusha
repz
sub
in
hlt
lret
aaa
jbe
jmp
mov
fwait
add
xor
push
push
lds
cmp
into
rep
mov
push
inc
or
rorl
test
pop
jbe
pop
xchg
dec
imul
mov
fisttps
mov
pop
adc
and
in
jmp
jp
jp
inc
das
aas
jp
sbbl
jle
andl
iret
cmpsb
jl
aam
enter
scas
sbb
push
pop
outsb
stc
stc
outsb
out
loope
push
ja
pop
nop
imul
ja
lds
test
mov
xlat
dec
lahf
inc
lcall
push
jmp
sbb
xchg
push
jns
test
and
mov
iret
cwtl
stos
cmp
mov
mov
cwtl
jbe
je
mov
cld
push
jmp
jl
shrl
fists
mulb
pop
mov
pop
sub
adc
fucomi
adc
sbb
jne
xchg
movsl
xchg
outsb
push
repnz
push
mov
mov
jge
int
sub
in
fs
xor
jno
jno
movsl
mov
ret
sbb
dec
pop
aaa
fimull
push
cwtl
adc
pushf
cwtl
lock
jns
ja
movsb
adc
jnp
push
test
mov
and
test
and
imul
mov
addl
imul
outsb
sbb
gs
scas
mov
push
dec
sub
mov
mov
fsubr
xchg
mov
dec
sub
inc
test
std
lock
rorl
push
jnp
add
xor
xchg
mov
xor
loopne
out
leave
cmp
mov
or
sub
xor
faddl
in
mov
mov
push
mov
jl
pop
pop
data16
cwtl
and
cmpsl
jl
out
adc
sub
fs
mov
stos
cld
out
jb
or
insl
scas
push
jno
leave
mov
int3
popf
fiadds
fdivr
xchg
lea
out
fcom
outsl
int3
xchg
sbbb
pop
fldt
jnp
push
mov
push
lock
in
out
test
sbbb
or
ret
imul
jne
mov
leave
test
add
mov
shl
mov
lds
mov
mov
mov
mov
xchg
lds
gs
inc
mov
sub
jb
loopne
push
lahf
aas
push
dec
cli
and
jno
dec
outsb
jmp
scas
and
out
dec
jbe
and
pop
mov
rclb
dec
mov
test
mov
lret
fidivs
std
mov
jb
adcl
push
int3
scas
movsl
and
pop
call
bound
push
mov
loop
push
stos
scas
cmp
je
lods
andl
xchg
cmpsb
loope
lods
push
xlat
and
mov
in
popa
adc
adcb
test
jno
aaa
in
pop
out
bound
in
or
out
loop
pop
sbb
aam
sbb
mov
sti
lea
lahf
fbld
negb
nop
sub
mov
mov
and
or
lahf
jbe
int
lret
inc
mov
add
stos
movsl
push
push
xlat
loopne
cmpl
xor
cmpsb
in
test
rolb
out
mov
imul
jno
cmp
adc
xchg
gs
lahf
adc
aad
or
pushf
data16
mov
lret
andl
fldt
or
pop
ljmp
notl
hlt
shrb
ja
data16
cwtl
js
lret
ljmp
std
add
mov
dec
dec
jge
dec
lret
dec
add
dec
and
sbb
in
push
leave
mov
inc
adc
mov
addr16
add
or
enter
movsb
insb
and
inc
xchg
mov
cmp
push
stos
mov
inc
outsl
mov
imul
mov
test
movsl
repnz
jns
out
sbb
sbb
arpl
dec
mov
mov
xchg
mov
test
popa
xor
out
xchg
push
call
testb
or
xorl
xchg
ret
shlb
test
sub
pop
out
cltd
hlt
pop
and
es
test
cmp
jnp
and
test
mov
xlat
les
xchg
movsb
mov
movsl
clc
jp
mov
test
in
jg
dec
inc
fstpl
dec
mov
shlb
mov
out
push
insl
cmpl
mov
sbb
mov
sub
pop
and
enter
ja
and
jnp
ljmp
fdivs
pop
shlb
bound
jl
sub
les
cwtl
xchg
adcb
push
push
and
mov
rclb
add
pop
in
repz
in
xor
and
lret
dec
je
inc
pop
cmp
xchg
cmp
fistps
mov
fistl
sbb
clc
push
mov
dec
adc
out
push
out
rclb
xor
push
movsl
inc
jbe
mov
fnstcw
outsl
and
dec
push
mov
ja
sbb
movsl
arpl
add
in
mov
daa
add
test
les
lds
inc
jo
or
pop
fdivl
add
daa
mov
inc
sub
stos
mov
and
testl
push
repz
pmaxub
dec
or
pop
addr16
pop
push
test
and
inc
mov
fcoml
sub
adc
or
cwtl
push
jp
lea
inc
mov
add
icebp
cld
adc
mov
inc
mov
inc
inc
mov
filds
sti
fiaddl
cmp
pop
inc
ds
adc
lcall
into
add
pop
jo
test
lret
cmpsb
cmp
fidivrl
or
mov
cmp
cmp
mov
xor
lods
int
ss
stos
in
sub
stos
dec
cmp
push
mov
imul
out
mov
arpl
insl
rcr
inc
jl
nop
insl
lea
xchg
js
adc
sbb
cmp
clc
mov
push
inc
into
mov
test
or
pop
add
loopne
sti
shrb
data16
hlt
loopne
pop
inc
inc
add
pop
out
mov
les
aaa
mov
jae
ficoms
dec
orl
fistpll
pop
aas
fidivl
inc
jmp
addr16
cwtl
push
scas
insl
movsl
das
jmp
push
push
fsubs
std
mov
sub
test
das
enter
jge
push
bnd
jp
arpl
mov
cmpsb
inc
testl
pop
jmp
adc
or
xor
ja
or
std
pop
popa
or
mov
and
inc
mov
push
and
loop
xorl
cli
mov
addr16
movsl
sbb
xchg
pushf
leave
add
jp
jmp
cmp
out
and
dec
shlb
sub
jp
jae
imul
lcall
push
test
jecxz
pop
and
cld
scas
leave
dec
int
shl
cmpsl
loope
fwait
cmp
loopne
repnz
loop
sub
adc
mov
xchg
or
and
or
daa
sub
rorl
sahf
cmp
mov
lret
xor
push
jg
pop
mov
pop
cmp
mov
sub
inc
jne
mov
push
cmp
loope
xchg
sbb
push
hlt
imulb
shlb
pop
outsb
movsb
adc
push
dec
and
pop
ror
in
push
xchg
aam
or
mov
xor
xor
xor
jge
pusha
ja
addb
pop
mov
lret
stos
in
and
loop
int3
sbb
sti
cmp
add
dec
mov
xchg
mov
sbb
test
xor
xchg
adc
lcall
aad
nop
ret
xor
dec
lock
test
repz
pop
dec
adc
pop
pop
imul
hlt
mov
sub
xorl
in
adc
push
das
shll
sbbl
pushf
das
lret
decb
and
add
mov
imul
xchg
bound
leave
pop
or
jg
jo
dec
push
jle
repz
pusha
out
sub
cmpsb
jbe
push
addl
jo
adc
fcompl
xchg
xchg
gs
cwtl
inc
std
xor
add
les
rcrl
cmp
in
std
or
iret
push
cmp
in
inc
inc
test
adc
and
and
gs
rclb
stos
xchg
push
in
aaa
lock
cmp
movsl
scas
ss
pop
imul
push
push
xchg
mov
das
cmpsb
pop
mov
lahf
mov
fsubrl
or
shlb
out
and
out
jl
repz
push
pop
fstps
push
lods
stos
xchg
ja
lcall
fwait
sub
pop
push
cmc
lods
adc
int3
popa
add
lock
push
hlt
rorl
and
sbb
add
sbb
push
repnz
testl
sub
push
adc
push
pop
mov
dec
repnz
pop
xorb
push
popf
mov
mov
mov
test
jbe
push
and
movsb
xchg
fstpl
sbb
push
jle
xor
pop
stc
mov
int3
jmp
jge
mov
sahf
sub
mov
lods
push
fdivl
xchg
inc
jecxz
insb
mov
ja
clc
lahf
push
mov
scas
cmpsl
xor
imul
in
xchg
lret
lds
dec
lods
jg
sbb
or
cmp
mulb
dec
in
ds
sbb
xchg
popa
push
push
js
sub
jle
sbb
aas
inc
sbbl
mov
lock
and
mov
cmp
ret
inc
into
dec
add
jg
orb
and
pop
mov
mov
mov
sub
or
ret
rclb
add
jb
mov
xchg
shll
push
push
dec
inc
loop
stos
add
ja
test
scas
int3
mov
outsb
adc
ss
fsubrs
decb
pop
pusha
repz
in
mov
in
movsb
leave
or
insb
rcrl
loope
je
adc
mov
push
test
rcrb
push
mov
sbb
subb
lret
lgdtl
dec
cmpsb
bound
fcmovnb
std
nop
xchg
xor
or
sub
iret
adc
cmp
xor
mov
mov
push
lea
jo
adc
xchg
cmpsl
push
cmp
nop
mov
movsl
dec
jp
outsb
aaa
xchg
inc
and
mov
jl
cmpsl
insb
sbb
push
stos
sbb
xchg
mov
jp
mov
rorb
push
out
xchg
pop
js
stos
call
clc
mov
aaa
and
lret
xchg
inc
cmp
push
jge
sbb
dec
jae
sbb
int3
mov
test
sarb
mov
push
das
push
data16
mov
js
jne
loop
mov
imul
and
add
in
push
mov
lret
jl
out
and
mov
addr16
jmp
xor
scas
leave
and
mov
mov
pop
aad
jno
aad
loope
lods
sub
leave
pop
cs
out
cmp
cmp
xchg
pop
pop
xlat
dec
cwtl
inc
push
add
scas
sub
pop
fcom
test
out
pop
sahf
popf
add
arpl
cmp
push
fistl
fidivrs
cmp
inc
jne
pop
inc
lret
xchg
add
push
or
in
cmp
adc
lds
dec
adc
adc
bound
cmpsb
inc
adc
jne
jb
fs
sbb
popf
xchg
sbb
bound
out
xor
adc
xchg
xchg
jmp
push
mov
pop
add
rorb
jae
pop
fnstcw
das
jge
in
in
faddp
add
aas
jo
loope
mov
mov
push
mov
xor
jp
je
je
in
xor
jp
aas
cmp
rcl
or
sahf
jle
sub
stos
cmp
fisttpl
sbb
xor
xor
stc
lret
pop
lea
add
pop
xchg
jl
aam
out
jmp
std
dec
divl
jle
mov
fnstsw
movsl
mov
push
popl
pop
jmp
out
push
mov
stc
adcl
popf
aad
adc
test
push
loope
fucomip
jne
pop
xor
mov
lock
lahf
jecxz
cmc
fstp
or
dec
aad
mov
mov
sub
das
mov
arpl
pop
js
pusha
fs
ja
push
pushf
pop
sbb
in
inc
aam
outsb
adc
mov
dec
shlb
orl
in
pop
push
sbb
jmp
add
movsb
jo
popa
and
jns
fs
lods
outsb
adc
pop
in
pop
add
fsubrl
imull
rcl
sub
js
or
addl
xlat
dec
adc
dec
inc
add
test
pop
ret
aaa
mov
das
push
adc
cmpsb
sbb
cwtl
sbb
outsb
xor
in
imul
jl
mov
sub
or
add
dec
shl
jp
pop
lods
std
jne
sub
dec
divb
sub
pop
jl
dec
cmp
pop
or
adc
lahf
mov
rcll
or
ds
sbb
mov
push
mov
mov
leave
push
add
sub
repnz
loopne
in
add
pop
pop
int
jecxz
push
jmp
xchg
xchg
mov
mov
sbb
dec
addr16
loop
in
and
in
in
inc
lcall
decl
mov
outsb
mov
cltd
xchg
ffree
cmp
das
test
pusha
inc
push
fs
push
scas
bound
lret
mov
jne
and
out
add
mov
xor
arpl
popa
mov
icebp
mov
xor
dec
pop
cmc
mov
pushf
sbb
lock
and
es
mov
data16
insl
cmp
loope
adc
inc
scas
rclb
add
dec
out
jae
or
stos
call
iret
pop
fcomip
ljmp
inc
imul
dec
or
xchg
and
stos
in
fwait
xor
add
mov
loop
test
cmp
gs
sahf
mov
in
ret
pop
dec
and
stc
out
pop
cmc
pop
dec
mov
and
aaa
into
dec
xchg
sub
dec
jcxz
mov
push
cmc
dec
inc
sahf
sub
pushf
sub
cmp
mov
repnz
pusha
clc
jmp
xor
clc
test
jne
push
outsl
ret
jno
dec
addb
in
xchg
lea
mov
cltd
dec
subl
dec
sbb
cmc
add
add
mov
test
mov
xchg
js
or
sbb
dec
fistl
jne
sbb
add
inc
clc
and
ror
jg
xchg
nop
bound
movsl
dec
movsb
shll
stos
xor
mov
pop
pop
pushf
imul
and
shr
jnp
add
lock
mov
in
dec
in
push
test
cmpsl
or
dec
pop
adc
mov
jno
dec
mov
pushf
and
cmp
mov
out
cmp
jne
push
orl
popf
adc
xlat
stos
repz
sbb
fadd
repz
lret
sub
scas
pop
dec
ds
movsl
sbb
insl
mov
loopne
daa
js
lahf
ds
xchg
pop
mov
add
in
xchg
or
cmp
scas
pop
imul
testb
cmpsb
sub
and
jl
popf
mov
push
dec
mov
repnz
pushf
mov
and
jns
sub
in
insb
stc
subl
rorl
cmp
push
sti
lcall
in
aam
mov
xor
push
out
xor
js
mov
pop
movsl
popf
insb
sub
addr16
xchg
and
or
test
cmp
jle
mov
imul
daa
nop
jb
jle
cld
cmp
push
les
shrl
ljmp
adc
es
jecxz
push
sbb
stos
dec
mov
or
scas
imul
shrl
test
inc
xor
inc
lcall
add
lods
fadds
jecxz
mov
movsb
xchg
in
xchg
out
sti
das
sub
aam
pop
popf
pop
cld
pop
mov
arpl
pop
pop
es
shlb
mov
cltd
mov
dec
lock
ret
cmpsl
loop
scas
sub
lcall
dec
and
mov
pushf
mov
jmp
dec
fwait
ja
jb
or
jp
push
xor
jl
test
mov
or
adc
cmc
in
out
popa
mov
or
daa
cmpsb
adc
pusha
xchg
dec
je
ja
push
inc
faddl
int3
scas
mov
dec
aad
push
xor
sub
add
outsl
cld
push
ljmp
mov
inc
dec
sti
icebp
xlat
jno
loope
mov
int
aad
mov
je
gs
rorl
mov
inc
lods
xlat
shrb
std
fdivl
ret
push
xor
fstpt
pushf
xchg
ja
int3
sub
in
sub
mov
ja
cmpsl
imull
cmp
pop
sti
ja
adc
out
xor
imul
out
mov
or
mov
lock
dec
int3
mov
repz
cli
pop
sub
jbe
repnz
fcomi
fiadds
fstpt
jp
lahf
pop
mov
xor
stc
cwtl
iret
or
lods
push
jmp
push
mov
rcr
stos
xchg
inc
xchg
mov
imul
rcr
jmp
daa
push
dec
xor
push
js
test
popf
aaa
fisttpl
sub
nop
repnz
mov
pop
loopne
mov
mov
inc
cmp
jge
ss
movsb
loop
and
pop
xchg
das
xor
test
jmp
into
shrb
push
sub
mov
testb
mov
shll
mov
je
insb
cmp
sub
insl
xchg
and
mov
repz
leave
mov
mov
inc
mov
int3
and
lods
rcll
out
xchg
xor
jmp
xchg
xchg
mov
lods
in
lods
mov
cmp
lods
mov
adc
loop
mov
inc
stc
mov
adc
das
bound
clc
pop
out
mov
adc
sbb
xchg
and
hlt
fldt
mov
ret
movsl
popf
shrd
sbb
cltd
into
mov
lods
xor
adc
or
enter
and
out
lods
sbb
cmp
in
js
aam
jbe
cld
sarb
or
mov
imul
jg
les
ret
push
in
repz
mov
pop
jo
movsl
xchg
movsl
sub
subb
insb
fisubrl
lock
out
pop
add
les
inc
enter
mov
add
imul
push
push
xlat
jns
test
shlb
sahf
sbb
jl
or
lds
jbe
jae
scas
xchg
dec
ret
es
into
arpl
fdiv
ret
popa
rclb
sub
psubd
out
lea
push
mov
insb
xchg
shrb
lock
or
idivl
int
ds
pop
jae
cld
loopne
lret
inc
jp
dec
test
notb
jbe
scas
shll
jnp
add
mov
mov
in
outsb
xor
xor
ljmp
pop
push
sti
lahf
pop
and
movb
fisubrl
jbe
or
jge,pn
ljmp
out
cwtl
inc
mov
xor
xor
ljmp
inc
dec
cmp
or
cmp
insl
and
jno
xlat
je
sub
xchg
int3
mov
push
fcomps
xchg
xchg
fstps
pop
xchg
testb
cmp
test
in
jmp
add
cltd
mov
popa
fldenv
inc
xor
icebp
xchg
test
add
arpl
insl
in
mov
icebp
adc
xchg
mov
lock
and
popf
cmp
jmp
das
inc
loopne
andl
add
inc
push
fldl
ficoms
ja
dec
lret
cli
xor
xchg
xchg
ret
cmp
jle
les
push
imul
das
pop
test
mov
push
xor
mov
xchg
pop
mov
inc
fldcw
daa
mov
cmp
mov
aam
jo
arpl
rcr
enter
and
add
cli
cmp
push
ror
cmc
in
add
and
clc
sub
jg
sbb
pop
scas
or
jg
call
loope
fwait
mov
addr16
sub
cmp
and
mov
cmpsb
leave
test
and
and
add
out
testl
icebp
jecxz
pop
nop
push
shlb
lock
scas
lock
repnz
dec
cmpsl
arpl
mov
shll
mov
js
std
insb
xor
lahf
inc
sahf
scas
jne
in
ror
mov
out
sub
cmpsl
sahf
repnz
popf
popf
sub
jle
xchg
mov
jo
pop
arpl
lret
or
mov
in
mov
lahf
lods
mov
inc
lds
dec
testl
shll
inc
and
and
mov
fnsave
push
ret
add
or
outsb
mov
inc
or
dec
fwait
insb
scas
dec
push
pop
lea
out
test
xchg
inc
hlt
push
pop
cmp
jl
add
je
push
mov
pop
sbb
sahf
fistl
jns
push
or
adc
cmp
xchg
sub
mov
mov
stc
mov
cmpsl
enter
pop
stc
cmp
xor
sub
bound
movsb
movsl
dec
or
xchg
jg
mov
aaa
aaa
adc
sbb
xor
stos
mov
dec
add
pop
into
shll
inc
and
stos
cs
mov
sub
shrb
repnz
push
pop
mul
scas
clc
lcall
leave
lcall
bound
and
add
push
inc
outsl
out
pop
jge
add
mov
neg
mov
jae
mov
push
jle
clc
mov
les
mov
std
loopne
lods
icebp
mov
fwait
cli
sub
inc
ret
jl
push
mov
ds
sahf
imul
das
mov
sbb
xchg
xor
insl
bound
add
mov
int3
xorb
cld
out
push
jp
adc
hlt
cmc
outsl
adc
lods
push
push
xchg
inc
dec
sub
push
pop
fs
push
dec
pop
ds
mov
and
push
addl
movsb
ja
jnp
dec
mov
cmpsl
mov
shrb
sahf
inc
sbb
jmp
or
add
mov
scas
xchg
lock
jge
std
popa
stos
incl
push
fdivrp
or
and
stos
or
out
movsb
adc
xchg
std
pop
cmpsl
int
popf
mov
xchg
scas
andb
xor
fmuls
inc
dec
test
insb
js
sbb
rclb
cwtl
add
jb
xchg
aam
stos
repnz
jg
dec
cmp
xor
call
cmp
aam
xlat
call
or
addr16
jne
sbb
mov
aad
int3
arpl
pusha
dec
insl
sub
shll
in
sahf
pop
insb
ljmp
test
das
clc
ret
adc
xchg
jno
jnp
cmp
jecxz
or
mov
push
adc
aam
and
test
push
lret
sub
mov
dec
jg
jle
and
lods
mov
jge
out
setns
popa
inc
mov
mov
xor
inc
imul
inc
dec
stos
mov
jo
pop
add
scas
das
sbb
imul
shll
imul
push
insl
cmp
stos
mov
xchg
shlb
adc
loop
fimull
jecxz
push
insb
inc
sbb
ret
mov
lret
adc
jae
jecxz
xor
push
imul
or
sarl
mov
adc
jb
inc
pop
add
add
mov
popf
sti
xchg
add
sub
repz
push
xchg
jg
loope
add
fsubl
mov
mov
rolb
inc
and
jge
sahf
data16
out
cmp
stos
mov
dec
jge
mov
pop
shll
enter
pop
xor
cmpsb
sbb
test
hlt
iret
and
popf
in
or
xchg
daa
fimuls
push
loop
pop
enter
xlat
push
inc
add
xchg
cmp
cwtl
lods
adc
mov
adc
ss
mov
int
mov
or
add
or
mov
jbe
sbb
repz
out
mov
aam
inc
jbe
inc
test
lods
dec
mov
inc
inc
xchg
std
daa
pop
lret
mov
inc
mov
xchg
mov
mov
mov
dec
jae
lods
pop
leave
push
popa
loopne
out
insb
aas
push
pop
in
sub
lcall
dec
xor
bnd
add
jnp
loope
jge
fsqrt
dec
push
test
pop
xchg
adcb
outsl
adc
jp
inc
push
push
push
xor
stos
mov
jno
jge
fwait
mov
rolb
adc
push
add
sub
dec
pop
loope
dec
xchg
scas
add
aam
gs
sub
cmp
mov
leave
ret
dec
xor
xor
les
sub
pushf
fildl
rorl
pop
jmp
cmpsl
pop
push
rol
pop
adc
xor
add
sub
test
icebp
jb
mov
repz
bound
mov
shll
jns
or
imul
shrl
mov
movsl
push
call
jne
xchg
repz
ljmp
leave
mov
jae
clc
lds
inc
movsb
dec
ret
sbb
xchg
test
cwtl
cs
loop
dec
mov
imul
mov
in
push
or
add
dec
sbb
or
and
pushf
test
dec
and
sarb
aam
add
mov
cmpsb
mov
addl
cmp
data16
jbe
mov
adc
sub
and
sbb
xlat
push
sub
mov
movsb
int3
dec
sub
clc
dec
and
xchg
jne
push
cmpl
mov
cmp
jp
sbb
xor
cs
test
into
mov
dec
mov
dec
test
imul
inc
jecxz
in
pop
fld
test
add
hlt
fidivs
add
adc
and
test
adc
xchg
call
xchg
sbb
mov
call
jne
es
sub
xchg
cltd
fiadds
test
std
dec
add
fcoms
loop
in
adc
ljmp
pop
fadd
fnsave
jp
add
sbb
add
cmp
pop
xchg
stos
dec
andb
rcll
cmp
subl
sbb
and
mov
stc
jp
aad
mov
lea
js
add
shll
pushf
and
repz
fdivrl
adc
adc
bound
and
sti
loopne
sub
cmc
push
push
iret
mov
arpl
sti
sbb
or
data16
sbb
and
sbb
pop
mov
push
inc
push
xchg
push
fists
and
add
outsb
pop
jne
sbb
in
cwtl
popf
adc
cmp
js
out
mov
mov
cmp
or
sbb
xchg
mov
call
and
xchg
lods
add
inc
sub
aaa
es
rorl
jo,pn
lods
inc
sub
fildl
addr16
adc
fs
aam
jbe
pmulhuw
jmp
xor
adc
fdivrp
jge
lahf
cmpsb
orl
das
sbb
and
mov
notl
aad
out
imul
or
push
xchg
vmovaps
pop
in
and
gs
jge
xor
add
js
int3
sbb
lret
push
push
push
push
cmpsl
rolb
xchg
cltd
and
and
mov
idiv
sub
lret
test
andl
sbb
cmp
loop
ret
dec
push
sbb
mov
call
sbb
or
push
cmpl
out
fnstsw
dec
xor
mov
hlt
and
ja
or
movq
and
test
cs
sbb
hlt
push
dec
imul
pop
movl
arpl
inc
in
push
mov
inc
pushw
in
jnp
lods
and
into
in
test
and
repz
test
pop
inc
in
fwait
pushf
jl
adc
out
xor
std
imul
lods
stos
cs
lods
ljmp
imul
in
sub
inc
mov
repz
pop
add
leave
fldcw
out
xchg
jge
xor
mov
mov
xor
pop
data16
out
cmp
ds
xchg
test
push
mov
mov
pop
xchg
out
pop
inc
pop
aad
inc
in
jo
cwtl
sub
adc
inc
cmp
add
cmc
push
xchg
sub
pop
dec
mov
pop
fdivrl
ret
inc
das
clc
sbb
lock
mov
in
or
pop
fisttps
test
adc
outsl
mov
push
iret
jb
loop
sbb
cwtl
int3
sub
mov
cmp
mov
lock
dec
mov
push
inc
add
sub
pop
out
inc
movsbl
and
and
into
xor
shrl
popa
xor
pop
lds
push
mov
hlt
dec
cli
sbb
jns
pop
notl
xlat
test
and
or
mov
xchg
jo
or
imul
dec
cs
dec
jnp
pop
test
lret
sub
xor
addr16
inc
push
mov
push
addl
and
cmp
fldl
xor
mov
adc
and
mov
sub
add
sub
ljmp
or
xchg
loop
lods
data16
jno
pop
or
mov
cltd
mov
pop
dec
jne
ficoms
mov
in
notl
dec
je
push
sahf
add
add
aas
sbb
fiaddl
mov
hlt
adcl
mov
std
xchg
cli
rolb
mov
add
dec
ja
data16
ljmp
adc
mov
sti
bound
in
jo
adc
sbb
adc
adc
in
inc
into
cwtl
andb
movsl
mov
lahf
lret
ljmp
enter
ficomps
cli
js
mov
xchg
sahf
push
add
jg
cmp
std
out
call
mov
pop
iret
pop
lret
mov
sub
mov
sbb
jmp
inc
aam
mov
movsl
push
rcrl
pop
jp
xor
shrl
gs
sbb
mov
inc
jns
lea
inc
xchg
xchg
mov
and
fadds
cltd
jle
mov
imul
jae
sbb
jae
lcall
roll
bound
ror
cli
lret
lods
jne
push
sbb
mov
stc
mov
mov
fistl
loopne
mov
sarl
fdivrl
fsubl
cs
xchg
loopne
aaa
xorl
xchg
xchg
jp
arpl
jne
aad
pop
cmpsb
inc
insb
jl
movsl
imul
adc
xchg
and
cwtl
mov
fcompl
in
ja
dec
jae
mov
sarl
pop
enter
sub
and
cli
loop
mov
lods
shrl
in
imul
dec
sbb
lret
int3
fwait
ss
cltd
dec
and
sub
cmp
lret
add
out
jle
jbe
sbb
mov
mov
cmc
xor
jbe
loope
pop
and
pop
dec
mov
sub
addr16
adc
inc
and
add
ss
pop
cwtl
test
xor
bound
adc
test
mov
or
xor
fwait
and
cld
lods
cmpsl
pop
loop
aas
fisttpll
add
add
xchg
dec
leave
scas
or
insl
lret
sti
loop
fildl
cli
int3
stos
out
pusha
cwtl
sar
insb
int
in
cltd
sub
ficoml
sbb
stc
pop
in
mov
fwait
aad
inc
mov
cmp
or
addb
lds
pop
ret
add
dec
mov
adc
push
test
fldenv
push
xchg
pusha
scas
push
mov
cli
leave
in
cltd
stos
inc
lret
adc
pop
in
inc
ret
dec
shll
dec
xorl
popa
cwtl
mov
popa
push
jnp
loope
loopne
xor
mov
push
push
sbb
push
push
leave
int
mov
subb
pushf
cmp
std
add
sbb
lahf
mov
jbe
lcall
addb
outsb
dec
call
popa
hlt
mov
in
les
pop
pop
push
dec
and
bound
fmuls
popf
push
test
lods
rol
out
dec
adc
jo
jns
lea
ja
inc
mov
xlat
push
test
jecxz
sarb
pop
add
mov
gs
pushf
fists
pop
ds
pushl
orl
inc
mov
jg
mov
pop
cmp
and
cmp
jmp
sbb
sub
orl
push
mov
push
sar
test
push
sub
icebp
leave
outsl
loope
sub
inc
xor
cld
xchg
call
fsubr
xchg
in
add
aad
and
mov
dec
add
xchg
mov
adc
enter
jbe
movsb
loop
inc
movq
rclb
pusha
cmp
mov
sahf
jae
cmp
lcall
mov
inc
imul
xchg
pop
push
icebp
or
shlb
cltd
and
push
subb
mov
dec
mov
and
pop
enter
out
or
xor
adc
mov
mov
sbb
dec
movsb
fucomi
and
jae
movl
loop
mov
mov
das
lds
dec
cs
xchg
add
ljmp
push
push
popf
jbe
nop
divl
fyl2xp1
lcall
cmp
mov
fld
dec
and
or
scas
add
push
push
imul
pop
nop
xor
mov
mov
add
mov
imul
inc
and
jne
les
adc
in
inc
and
xor
and
and
and
aas
repz
add
into
pop
xchg
test
js
fwait
xor
adc
mov
lea
loopne
pusha
inc
pop
push
adc
and
ror
ret
pushf
push
pop
and
push
pop
sub
pop
shll
xchg
nop
ret
jle
loop
xchg
iret
xor
jge
in
mov
add
cld
xor
and
jns
or
out
xchg
movsl
pushf
dec
xor
dec
loopne
into
xor
pop
ss
rclb
xor
push
jno
adc
add
xor
mov
icebp
cmp
xsavec
xchg
sub
fstps
mov
and
or
and
stos
lods
xor
test
subl
add
testb
mov
das
pop
out
nop
adc
lret
mov
sub
cmp
gs
add
shrl
mov
dec
mov
jmp
bound
scas
cmp
adc
je
mov
mov
test
stc
pusha
or
test
xchg
pop
sub
jne
inc
loop,pn
gs
or
mov
or
stos
mov
je
push
mov
xor
xor
fprem1
repz
xor
dec
xchg
lods
push
jmp
popf
insb
imul
call
stos
push
sbb
jo
cld
into
adc
into
test
mov
sbb
cmp
jnp
ret
imul
mov
mov
inc
mov
ds
dec
fstpt
jge
roll
ret
xor
inc
int
aam
fadds
lods
inc
mov
sub
mov
loopne
mov
aam
lret
dec
sub
adcl
and
cmp
outsl
dec
or
into
push
movsl
jge
mov
pop
pop
mov
mov
cmc
insl
lahf
adc
lea
dec
push
loop
mov
loop
jg
nop
in
push
add
lret
adc
lahf
imul
rep
mov
movsb
je
jmp
insb
cmp
jnp
and
int
stc
out
imul
andl
test
cld
jnp
jge
xor
subb
push
push
bound
sti
cs
cli
addb
iret
push
sub
pop
ss
and
iret
iret
and
ret
pop
dec
cmc
adc
mov
int
mov
pushf
nop
je
mov
sbb
clc
mov
pop
cltd
and
test
fsubrp
xor
adc
cmc
or
ja
xor
les
jp
test
rcr
add
adc
out
loopne
dec
imul
stc
lahf
xchg
ret
stos
xor
and
jge
pop
ja
adcw
or
push
mov
jbe
jo
xchg
mov
mov
pusha
cmp
lahf
loopne
mov
jo
sub
cmc
aam
test
or
pop
into
in
xchg
sub
jmp
pushf
cmc
dec
and
add
inc
sub
out
sbb
pop
mov
insb
jno
aaa
xchg
vcvttsd2si
push
movsl
push
js
pop
repz
push
push
jb
insb
sbb
pop
cmp
push
dec
fs
and
std
xchg
sysret
lds
pop
int
test
jb
cwtl
mov
aad
ret
jmp
and
ret
outsl
and
mov
int3
inc
inc
loope
add
es
into
mov
lods
cwtl
push
xor
jmp
pop
inc
inc
popl
lcall
jns
in
cmp
mov
mov
mov
jb
sub
inc
mov
mov
sahf
cmpsb
inc
pop
sub
cmp
dec
cwtl
cmpsb
push
push
aam
insl
adc
stos
loop
std
inc
mov
ret
jae
adc
into
js
addl
adc
sti
cmpsb
in
adc
loop
jg
test
mov
test
cmp
mov
iret
rorl
adc
lret
xor
fs
jae
pop
stc
jne
lret
fcomp
loop
cs
dec
das
in
add
add
pop
pop
push
add
sub
and
stos
shll
pop
mov
push
sub
adc
push
jne
xchg
mov
sbbb
mov
shl
lea
cs
xlat
mov
test
fwait
decl
sbb
roll
ja
pop
pop
jge
mov
cs
inc
dec
cwtl
rcll
repz
sbb
mov
mov
jbe
popa
gs
cmp
jg
mov
lret
loope
out
popa
les
out
bound
lret
std
pop
mov
push
push
sub
mov
mov
cs
mov
js
fcomi
negb
sub
mov
sbb
sarb
shll
sti
negl
pop
cmp
scas
insl
dec
fcoms
cmp
mov
and
mov
icebp
push
mov
adc
out
sbb
cmpsb
cmp
cld
nop
add
pushf
dec
leave
aas
push
es
out
loopne
mov
andb
or
lcall
add
test
gs
inc
pop
aad
push
mov
or
fs
mov
mov
or
adc
scas
xor
pop
jmp
pop
xchg
xchg
xchg
inc
mov
lds
dec
mov
jbe
lret
call
mov
push
cs
pop
sti
mov
icebp
lock
das
in
sbb
insb
mov
aad
repnz
cmp
jge
out
and
fsqrt
adc
ret
cltd
in
dec
dec
in
pop
inc
div
stos
add
cmpsl
imul
movsl
addl
cmc
rcrl
xchg
shrb
mov
es
outsb
sbb
into
xchg
mov
outsb
pop
fcompl
sbbl
fs
pushf
arpl
adc
dec
and
push
loope
jg
int
cmpsl
test
ret
push
test
or
push
enter
sbb
clc
into
in
mov
xchg
rorl
pushf
xchg
nop
in
add
jno
push
or
scas
or
test
cld
sbb
fstp
outsb
sarb
ja
fwait
xor
addl
mov
andb
movsl
mov
and
testb
popa
scas
fiaddl
mov
pop
insb
lahf
jp
rol
roll
fisttpl
rcrb
repnz
adcb
pushf
aaa
gs
negl
cli
mov
add
inc
push
nop
add
lea
mov
sub
cwtl
shrb
mov
jae
dec
inc
push
mov
imul
cmovs
pop
mov
mov
movsl
push
push
jo
pop
inc
add
aaa
pop
into
cld
xchg
addb
or
popa
lea
lcall
pop
loopne
add
fistpl
xchg
in
repz
xchg
adc
cmp
jno
and
aaa
xlat
cmp
imulb
and
cmp
cmp
xchg
rclb
xor
popf
and
mov
cmp
jb
xchg
insl
xor
sti
imul
cmp
add
xchg
pop
inc
imul
cs
mov
int
aaa
push
mov
fcompl
sub
imul
mov
mov
loop
sbb
push
gs
mov
in
xor
mov
inc
push
or
sbb
push
inc
loopne
out
data16
ficompl
lea
test
jle
arpl
negl
lret
fistps
sub
bound
push
jecxz
xchg
mov
int3
cmp
adc
fcomps
in
ja
mov
mov
add
lock
mov
fwait
sbb
fimull
or
xor
push
and
adc
mov
lds
adc
cmpsl
mov
sbb
xchg
in
clc
or
pop
xchg
mov
jnp
xor
std
push
sub
pop
and
in
xchg
in
jge
in
inc
je
insb
pop
lods
fldcw
shrl
mov
sbb
loope
int
shlb
outsl
dec
ljmp
rclb
push
jno
gs
and
fdivrl
dec
imulb
cli
mov
popl
push
fimull
mov
movsl
adc
inc
and
idiv
xchg
dec
cwtl
pop
and
fdivrs
int
or
mov
inc
cmp
dec
rcrb
mov
test
out
dec
mov
lods
inc
push
mov
sahf
ret
sti
or
pop
push
inc
in
mov
lock
imul
sbb
xor
mov
clc
fucomi
cmpsl
xor
jl
std
pusha
addr16
std
push
adc
lock
or
sahf
pop
mov
in
mov
leave
ja
sub
test
jp
xchg
shll
into
add
mov
daa
loope
subl
call
fsub
mov
movsb
insl
fists
sub
mov
inc
daa
mov
mov
in
out
enter
out
imul
jg
mov
xchg
cli
xor
lock
push
outsl
das
push
cmpb
fcomps
repnz
or
fldl
dec
jl
xor
mov
sbb
xchg
loope
dec
push
filds
loop
addr16
out
inc
xchg
push
mov
rolb
lret
std
fs
fisttpl
push
dec
lds
mov
loop
je
arpl
cwtl
and
stos
jo
push
inc
and
rcrl
movsl
lea
add
inc
push
dec
test
fs
sbb
sbb
mov
xchg
cltd
loopne
inc
and
mov
inc
mov
stos
xchg
lds
ret
lahf
loopne
add
fadds
or
push
jp
sub
push
sub
sarb
mov
test
mov
mov
or
xchg
or
and
sbb
xchg
loop
rcl
test
mov
push
leave
pop
repz
rcl
outsb
inc
lcall
push
popa
dec
or
inc
sbb
mov
mov
xor
xchg
xchg
pop
pop
mov
pop
shr
mov
mov
jmp
clc
xchg
fsubs
xchg
rolb
out
aas
in
adc
jo
hlt
movsl
std
aaa
fs
or
push
fldcw
cmp
cmpsl
and
pop
sbb
rcl
test
das
sbb
mov
andb
shl
sub
fisubrs
cmp
icebp
or
mov
push
in
adcb
in
push
orb
pusha
ljmp
in
mov
mov
insb
int
jne
lret
xor
out
jg
out
jae
mov
adc
add
movsb
jne
xchg
fmul
hlt
mov
jbe
dec
sbb
mov
fcmove
mov
pop
data16
pop
mov
push
lret
imul
outsl
mov
push
adc
mov
inc
push
aad
inc
iret
movsb
push
test
into
cmpsl
pusha
int
aad
iret
dec
add
cli
push
mov
lret
loope
or
sub
les
mov
xor
mov
mov
ret
loopne
push
sbb
push
inc
push
and
xchg
out
inc
cmp
or
dec
js
popa
cmp
push
imul
mov
rcr
repnz
lcall
xor
push
or
popa
pop
out
inc
jmp
int
scas
sbb
pop
test
ret
push
aad
mov
sub
aaa
mov
js
pushl
pop
xchg
fwait
ror
mov
loope
dec
xchg
xor
out
xor
lret
rcl
enter
stos
fsubrl
cmp
clc
sbb
enter
xchg
dec
sbb
jmp
loop
or
int
dec
mov
push
pop
test
xchg
dec
in
in
das
test
sbb
pop
call
mov
sti
cltd
fcom
sub
imul
jecxz
lds
bound
jecxz
iret
xchg
dec
fidivrs
rcll
cmp
in
in
loopne
shrl
push
or
inc
les
nop
nop
aad
mov
cmc
cmpsb
sbb
ss
jg
pop
pop
call
jo
call
gs
ret
xchg
mov
inc
test
stc
and
fcomip
pop
loopne
jl
in
add
gs
sub
lods
jns
cltd
mov
and
mov
lahf
or
jo
sub
cltd
mov
fcompl
nop
scas
adc
outsb
loop
xor
lret
test
push
xchg
or
jnp
outsb
ss
dec
mov
fmuls
jb
and
hlt
xor
imul
nop
add
ds
stos
push
sti
jp
pop
mov
into
jns
mov
sbb
pop
leave
xor
pop
xor
emms
sub
push
fistpl
bound
stos
aad
aas
jo
jae
or
inc
and
inc
mov
out
or
shlb
and
add
or
dec
xor
out
pop
mov
cmpsb
xorl
stos
dec
fsubrs
pop
mov
and
ja
sub
adc
outsl
fbld
or
inc
add
xor
mov
add
push
xor
or
loope
xchg
adc
or
adc
jnp
pop
addl
popf
or
sahf
pop
push
xchg
das
cmpb
aad
test
daa
sahf
add
movsl
out
fnsave
pop
pop
mov
cmpsl
aad
fildll
pop
flds
mov
lcall
aam
mov
test
sarl
addb
sbb
jbe
clc
lret
ja
jbe
fsts
aaa
push
pop
mov
xchg
xchg
pop
adc
xchg
icebp
aaa
pusha
fwait
jae
ja
pusha
mov
jnp
ret
out
enter
cmpl
std
repz
rorb
out
stc
loop
inc
test
hlt
add
lds
xchg
or
sahf
sbb
mov
xchg
fiadds
pop
jecxz
enter
sub
cmpsb
xor
jmp
int3
lret
mov
rorl
sti
xchg
ljmp
test
aam
push
dec
mov
pop
mov
aaa
adc
cmp
push
pop
repnz
xlat
mov
lods
inc
push
bound
inc
cmp
test
es
cmp
and
jne
fsub
jbe
mov
dec
sbb
jle
pop
or
mov
inc
ljmp
shl
in
data16
xchg
inc
xor
push
push
sub
jl
xchg
test
xor
imul
mov
daa
movsl
xchg
jo
test
ret
xor
jno
jle
and
test
jae
daa
icebp
add
loope
cmp
cld
xor
add
xor
inc
xchg
ds
mov
es
xchg
jmp
idiv
push
dec
pushf
pop
imul
in
fisttpll
or
stc
adc
sbb
aad
mov
pop
pop
dec
xor
jle
adc
fadds
push
mov
sub
push
push
ss
outsb
lahf
imull
and
mov
cmp
imul
sahf
cs
std
shlb
pop
cli
cmp
pop
stos
fldenv
sbb
push
inc
mov
xor
cmp
fwait
xchg
inc
rclb
jbe
ficoms
mov
xor
push
insl
add
mov
fisttpl
pop
xchg
jp
push
loope
cmp
jno
pop
inc
mov
add
mov
and
sti
fistpll
test
sbb
xor
jmp
fsts
dec
lcall
lods
mov
aas
fs
fs
fdivl
movsl
push
roll
or
cmpsb
sub
fstps
enter
mov
sbbl
cmpsb
lcall
dec
sbb
cmc
sub
mov
dec
shrl
cwtl
dec
dec
cmp
daa
lcall
or
es
fwait
or
adc
xchg
int3
pushf
dec
test
pop
push
jno
push
xor
inc
mov
sub
mov
mov
in
mov
mov
faddp
iret
popa
popa
addr16
mov
fs
jno
dec
cmpsl
fcoms
jl
mov
mov
mov
pop
inc
pop
or
inc
popa
stos
mov
jae
dec
adc
mov
outsb
xchg
lock
sub
sub
jmp
int3
mov
pop
jb
test
lahf
addr16
sub
in
ret
rclb
xchg
adc
in
pop
repz
xchg
scas
lock
dec
scas
pushf
test
scas
sub
push
aam
mov
scas
push
ljmp
add
push
in
push
pop
jmp
or
cltd
mov
lret
mov
frstor
mov
cmp
out
cmp
jp
push
lds
cmp
inc
jmp
and
xor
cmp
test
outsl
out
lret
adc
mov
push
pop
xchg
fldt
push
fisubl
mov
xor
outsb
rcrl
fsubrp
loop
in
in
mov
lret
rclb
cld
cmp
repz
mov
jmp
mov
adc
lods
lock
push
inc
mov
cmp
jl
or
ret
jnp
adc
push
rcll
js
repnz
push
cmpsb
or
imul
mov
dec
xor
fmuls
movsl
sub
hlt
mov
add
inc
pop
imul
sbb
int
sbb
addr16
stos
popa
dec
jl
sub
ja
mov
imul
inc
les
aas
cmc
push
push
sbb
test
aad
or
mov
mov
pop
test
nop
jecxz
jb
xor
dec
dec
dec
into
rcll
arpl
pop
testb
les
stc
inc
pop
ljmp
roll
subb
mov
jne
xor
inc
orb
sub
lds
sub
jbe
lea
out
fwait
mov
jmp
leave
popf
je
add
xchg
push
jbe
adc
xchg
arpl
stos
sub
out
fnstsw
cmp
call
lods
icebp
mov
cmp
sbb
adc
aad
ljmp
leave
lock
mov
cmp
test
roll
add
push
pop
push
mov
insb
sbb
aaa
mov
push
int3
iret
xor
jg
out
insl
push
pushf
cld
and
sub
mov
push
mov
and
add
sub
fxch
jmp
xchg
ljmp
cmpsl
pusha
cli
test
mov
fwait
pop
lods
gs
jae
xlat
jl
mov
cli
xchg
icebp
and
push
loop
cs
dec
scas
or
pop
ror
ret
hlt
repnz
cmpl
add
jae
push
xor
movsl
mov
lock
pop
test
xor
fwait
mov
jnp
dec
in
cltd
adc
push
cs
movsb
sub
stc
or
add
xchg
sbb
addr16
movsl
cmc
dec
pop
inc
sbb
lock
jmp
jo
fmulp
bound
and
insl
cmpsl
into
and
mov
cli
sbb
sti
popf
or
push
xchg
orb
in
outsb
int
std
push
cli
movsb
imul
inc
pop
push
ds
lcall
lret
mov
loop
cmp
push
jns
xor
push
sahf
into
repz
xchg
loope
fidivrs
jae
aaa
cltd
add
out
lahf
aam
adc
xchg
mov
cmpsb
mov
mov
or
stos
sbb
imul
imul
xor
pop
gs
mov
ss
mov
stos
daa
push
add
mov
in
cmp
or
sbb
aas
ret
jmp
add
sti
inc
xor
jg
cmp
and
mov
rolb
pop
xchg
addr16
mov
enter
mov
adc
mov
xor
fs
sti
lea
insb
popf
popf
pop
or
xchg
xchg
add
dec
mov
and
aad
jle
test
aas
lret
stos
loopne
in
insl
fs
repz
mov
fcoms
jb
inc
mov
xchg
jmp
pop
mov
cltd
iret
movsb
push
repnz
xor
mov
ja
and
loope
hlt
sub
pushf
jb
sbb
gs
inc
mov
ss
xchg
sub
pop
js
pop
notb
jge
jp
sub
cmp
outsl
or
mov
push
jle
jl
roll
lahf
pop
mov
outsb
or
rolb
lahf
into
sbb
sub
idivb
cwtl
js
jbe
lods
in
arpl
push
sbb
mov
movsl
hlt
arpl
or
shll
subl
ljmp
ficoml
scas
pushf
jne
lahf
call
fwait
xor
xor
push
test
sbb
in
or
dec
mov
std
push
inc
leave
rcrb
xchg
adc
test
lcall
xchg
xchg
leave
out
in
mov
pop
cmpsb
in
mov
std
sti
or
push
hlt
sub
xor
mov
imul
or
mov
aam
add
sub
arpl
push
shr
dec
push
out
mov
rcll
push
cld
mov
addl
push
push
adc
mov
frstor
pop
xchg
int3
sbb
jnp
push
sahf
inc
dec
rolb
pop
ja
and
cmc
push
jnp
push
pop
stc
mov
out
in
add
lcall
adc
and
xor
pop
mov
sarl
arpl
add
sub
test
das
repz
mov
push
clc
aaa
cmp
and
out
pop
xchg
test
or
dec
test
shlb
imul
mov
sti
jl
mov
aam
in
aaa
sub
jl
jp
mov
dec
push
test
xchg
std
push
or
and
repz
push
pusha
lds
sbb
mov
fcompl
gs
insl
int
jmp
xor
dec
insb
mov
sub
loope
imul
dec
cs
mov
adc
sub
out
lods
pushf
nop
push
test
mov
movsb
inc
mov
xchg
pop
sbb
pop
mov
sub
in
jne
xor
xlat
mov
sbb
inc
push
mov
cli
lds
loope
push
xchg
inc
dec
mov
lret
and
pop
push
cld
lcall
lock
adc
lret
jb
dec
sbb
mov
xor
outsb
jecxz
out
std
inc
lahf
imul
or
push
and
dec
movsb
out
mov
leave
sarb
inc
sbb
xchg
add
xchg
cmovl
cltd
xchg
jns
or
fisubs
sbb
ljmp
dec
int
inc
adc
lods
sbb
das
shll
lock
mov
jmp
or
mov
call
je
push
mov
sbb
jb
aam
push
jmp
addb
add
nop
adc
cmpsl
daa
inc
pusha
iret
stos
xchg
movsl
sub
pop
out
jb
mov
adc
pop
push
test
inc
mov
popf
jo
into
inc
pop
arpl
aas
cmp
shrl
into
and
cmpsl
insl
push
mov
mov
pushf
pop
pop
loop
jo
pop
mov
mov
in
and
roll
xor
jl
clc
xchg
cmp
into
mov
push
pop
iret
test
adc
outsb
incl
std
leave
out
imul
mov
xor
mov
push
jg
imul
xchg
cld
rcl
jne
enter
leave
mov
adc
sbb
inc
sbb
inc
jae
cmp
sub
and
sub
pop
jb
push
fiadds
or
push
fs
repnz
ffreep
add
lahf
std
repz
cmc
jno
and
bound
xor
add
js
fildl
arpl
push
push
jbe
sbb
dec
pop
pop
xchg
xchg
adc
inc
sbb
mov
cltd
adc
mov
sbb
jno
cmp
in
mov
inc
add
sub
aad
stc
push
inc
and
roll
movsb
sub
out
int3
dec
mov
dec
repz
jg
inc
add
scas
inc
iret
hlt
add
jl
mov
das
and
adcl
stos
shlb
add
faddl
insl
jbe
out
sahf
push
stos
mov
mov
ret
mov
out
ja
xchg
add
outsl
inc
popa
push
ficomps
insb
add
je
xor
xchg
scas
mov
dec
mov
repz
inc
xlat
addr16
out
add
inc
sbb
leave
rcrl
cmp
dec
fildl
jne
and
adc
fadd
lock
mov
fistps
push
sub
outsl
scas
push
dec
movb
cmp
mov
popf
repnz
inc
mov
mov
aam
mov
push
in
jge
xchg
sbbl
xor
add
mov
xchg
adc
jno
inc
filds
mov
cmpsl
out
js
pop
out
mov
ficoml
jle
cld
or
adc
fmull
mov
inc
fstps
insb
xchg
xor
nop
mov
inc
jno
mov
std
fs
test
aaa
movsb
shl
data16
fistpl
pop
out
dec
das
jg
pop
faddl
mulb
adcl
sbb
lret
xchg
or
cmp
xor
mov
push
int3
test
sbb
dec
ficoml
xchg
fildll
mov
imull
and
pop
cwtl
icebp
repz
int3
add
addb
nop
jmp
test
dec
ljmp
cmc
xor
pop
jae
mov
mov
sti
in
xlat
loop
inc
push
outsb
fwait
daa
int
jmp
jbe
sbb
add
test
mov
inc
inc
mull
cmp
and
jmp
xchg
rolb
dec
mov
cmpsl
mov
jno
jmp
sbb
rcrl
fdivrl
or
xlat
push
mov
xor
pop
mov
lods
ja
sub
add
sbb
inc
push
jmp
subl
xchg
fmul
mov
rcrb
xchg
ror
mov
inc
xchg
lret
cmpb
mov
cli
out
mov
push
cltd
dec
add
push
xchg
mov
pop
mov
xor
out
xchg
cmp
xchg
ret
outsl
es
fists
sub
push
xchg
test
and
push
sub
and
mov
add
das
cltd
rcr
push
inc
xor
imul
outsb
cmp
mov
sarb
scas
mov
test
mov
or
neg
push
sarb
movsl
mov
mov
or
fsubrs
movsb
push
push
andl
xor
add
ret
sub
sti
add
ret
jae,pt
cwtl
push
stc
repnz
sahf
test
scas
cmp
mov
sub
arpl
mov
mov
ja
iret
in
sbbb
add
mov
xchg
sbb
es
inc
loop
jecxz
test
and
repnz
adc
fidivl
popf
sbb
int3
jo
daa
mov
xchg
add
pushf
pop
sub
cmp
cltd
adc
cltd
pop
or
mov
add
hlt
xorb
pop
test
and
add
test
or
lcall
push
in
lds
and
mov
dec
dec
sbb
movsl
mov
jnp
cmc
sub
cmp
js
add
leave
jle
and
in
mov
pushf
lahf
dec
ds
mov
fistl
movl
popa
outsb
iret
pusha
xor
sahf
ret
jp
out
scas
mov
mov
or
out
pop
adc
insl
gs
js,pt
out
cmp
test
pop
sbb
call
jns
add
pop
mov
pop
and
mov
aaa
xchg
jbe
push
insb
jbe
jo
sbb
push
sbb
mov
sbb
stc
ja
lea
or
and
dec
sahf
push
into
insb
or
fnstcw
push
dec
aaa
xlat
push
roll
jge
jecxz
mov
jl
jno
movb
lods
pop
pop
or
mov
sahf
mov
data16
pop
xlat
push
push
sub
push
sbb
std
dec
nop
inc
and
test
popa
mov
adc
outsb
adc
lea
xchg
imul
les
loop
push
push
insb
adc
and
mov
lods
jmp
sbb
fs
hlt
imul
pop
and
xchg
add
and
sub
mov
jle
imul
inc
mov
ljmp
mov
jb
xlat
dec
out
and
insb
lds
fcomps
sbb
xchg
xchg
je
add
jns
mov
mov
outsb
filds
cs
push
push
lret
or
push
push
pop
xor
jno
dec
arpl
cmp
nop
cmpsl
lahf
jnp
sti
movsb
in
ss
or
add
sbb
icebp
sub
sbb
pop
lock
sub
dec
orb
sub
jnp
testl
hlt
fcomps
cmpsl
cmpsb
dec
aam
cmpsl
insl
adc
xor
repnz
push
mov
andl
sbb
test
mov
xlat
cld
cmpsb
and
ljmp
sub
lret
inc
lods
jne
test
or
fadd
fdiv
lcall
repz
ret
loope
sti
cmp
add
pop
andl
les
imul
or
mov
or
sbb
push
mov
cld
hlt
in
cs
pop
cmc
mov
aam
fwait
dec
es
xorl
idivb
add
cmp
lahf
sbb
insl
fs
mov
xlat
je
out
inc
lahf
in
mov
mov
js
adc
xchg
imul
jge
int3
cwtl
fsts
or
loopne
push
int
loop
pop
stos
mov
mov
lcall
pop
addr16
mov
mov
mov
push
sar
gs
adc
sahf
add
push
shrb
icebp
push
xchg
loope
xchg
jne
bound
xor
test
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
call
int
scas
xchg
pop
xchg
mov
xlat
arpl
loop
pop
lods
xchg
pop
xchg
mov
xlat
and
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
dec
je
arpl
add
mov
jne
scas
out
dec
jbe
cmc
mov
jne
push
mov
out
jle
xor
ret
out
not
push
movsl
push
mov
call
sbb
push
mov
mov
xlat
fs
loope
push
jle
cltd
inc
insb
and
fwait
pop
pop
inc
cmp
mov
iret
mov
idivb
sahf
push
rclb
xor
sub
adc
push
lods
cltd
pop
insb
and
fwait
pop
pop
movsb
adc
sub
adc
cmp
icebp
les
pusha
mov
fildll
in
push
fmulp
pushf
or
xor
ds
pop
xchg
mov
xlat
arpl
sbb
filds
xchg
mov
pop
or
lods
xchg
pop
xchg
push
je
lds
pop
xchg
pop
xchg
or
sbb
xchg
pop
test
sbb
xchg
pop
xchg
mov
aad
into
sbb
pop
xchg
arpl
sbb
lahf
pop
xchg
mov
xlat
bound
sbb
pop
xchg
xlat
jae
sbb
xchg
pop
xchg
mov
xlat
arpl
or
xchg
pop
xchg
mov
xlat
arpl
and
pop
out
scas
xchg
pop
xchg
inc
jg
sub
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
jmp
xchg
mov
xlat
add
push
dec
xchg
shll
dec
pop
push
mov
faddl
xchg
mov
xlat
arpl
sbb
loopne
divl
sbb
xchg
pop
into
mov
xlat
mov
xchg
xlat
arpl
cmp
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
xlat
arpl
sbb
xchg
pop
xchg
mov
mov
pop
xchg
cmpsb
add
inc
movsl
out
xchg
inc
or
jecxz
xor
daa
outsb
leave
sbb
rcrl
lahf
jo
outsl
mov
mov
into
xor
fcoms
sar
leave
and
dec
inc
cld
pop
xor
mov
mov
scas
mov
mov
int3
cmp
cmpsl
pop
loope
test
sub
inc
sbb
shll
cmp
cmp
push
scas
out
iret
subl
lahf
add
arpl
dec
js
cmpsb
daa
stos
cmp
incb
jbe
in
mov
mov
test
inc
mov
and
cmpsl
xchg
fldcw
inc
push
inc
mov
aam
dec
xchg
cmp
ds
outsl
mov
pop
dec
out
shrl
mull
je
xor
aaa
sbb
xchg
push
cwtl
negl
jno
sbb
jg
pusha
stc
fdivrl
or
mov
sub
xchg
outsb
iret
test
dec
ficompl
sbb
adc
add
out
in
jg
or
or
lret
or
addr16
ds
xchg
divb
arpl
sbb
fisubrl
cmp
push
imulb
ss
inc
shl
testl
push
push
arpl
or
and
rcr
inc
push
xchg
lahf
pop
push
jmp
loop
mov
roll
and
movsb
iret
mov
fisubl
fstl
lods
sbb
push
and
jns
std
inc
pop
pop
int
lods
outsb
adc
idiv
adc
sbb
dec
addr16
aaa
outsb
imul
hlt
adcl
sub
ret
dec
sub
repz
inc
jl
cmp
scas
xor
scas
stc
repz
movsl
testl
mov
mov
push
pop
lds
ret
and
inc
incb
mov
add
cmp
mov
daa
jmp
fists
popf
out
xchg
push
dec
mov
js
pusha
lds
mov
aaa
mov
insl
push
xchg
sub
jb
jp
rcll
ja
data16
xor
jns
jmp
movsb
popf
sbb
in
mov
mov
dec
adc
imul
arpl
cmp
stos
cld
aad
cmc
xor
jb
fidivrl
aad
sti
dec
dec
pop
mov
cmpsl
cmp
in
into
inc
dec
ror
xchg
push
sub
cmc
pop
xor
movl
arpl
cmp
imul
test
imul
bnd
push
sub
testb
mov
jecxz
pushf
filds
shr
rclb
inc
mov
scas
arpl
pop
xchg
dec
xchg
mov
mov
sbb
dec
loop
mov
add
xor
shrl
xchg
mov
data16
arpl
outsl
daa
xlat
out
rol
arpl
pushl
push
mov
jl
jl
aad
adc
sbb
mov
aaa
test
mov
cmpsl
mov
sbb
xchg
dec
pushf
mov
pop
fsubp
aaa
fstl
out
lea
mov
es
sub
inc
out
mov
push
outsb
es
nop
ja
jmp
xchg
lss
mov
decb
or
divb
clc
sbb
xchg
inc
jp
stc
ret
and
mov
std
pusha
sbb
rclb
movsb
mov
push
cmp
add
adc
xor
cmpsb
insl
lock
arpl
fbld
ret
test
mov
out
sbb
out
mov
cmp
test
adcl
movsl
repnz
pop
pop
jge
inc
mov
sbb
dec
push
jbe
add
xorb
mov
shrl
mov
int
loope
in
faddl
cmp
aas
and
je
out
add
mov
loopne
rcll
aad
adc
xlat
or
outsb
outsw
mov
ja
jb
or
ret
lock
adc
xor
clc
stc
or
pop
mov
sar
sub
pop
pop
ret
sub
and
call
add
sahf
jno
cmp
aad
out
mov
cld
adc
lock
fidivrs
and
pop
sub
insl
mov
pop
repnz
int3
xor
mov
stc
adc
enter
aad
notl
bound
popa
jb
dec
inc
adc
ds
sahf
in
lret
jbe
push
xor
lret
out
nop
sub
sub
push
push
pusha
rcrl
push
push
and
inc
mov
faddl
xor
inc
push
sub
xor
mov
adc
mov
xchg
and
mov
dec
lods
jno
jnp
andb
mov
mov
dec
dec
test
mov
movsl
in
mov
add
int
stc
aam
xchg
or
enter
pop
jp,pn
mov
adc
sub
test
push
cmp
fdivrl
sbb
dec
ja
out
mov
insb
xorb
gs
bound
loope
das
rclb
xor
adc
push
mov
not
in
ss
loope
loop
mov
in
mov
mov
jg
jb
pop
das
out
mov
pop
sub
or
subl
pop
dec
pop
or
cld
adc
ljmp
pop
mov
pop
sub
and
and
cltd
loope
mov
daa
mov
lret
or
insb
cs
adc
push
push
push
adc
sti
rclb
mov
xor
sbb
inc
sbb
sub
lcall
orb
shld
pop
mov
sarl
jns
pop
test
cli
push
xchg
pop
test
mov
sbb
sbb
add
stc
out
jp
in
clc
into
into
outsb
jp
lods
push
out
out
repnz
lods
push
jae
add
enter
stos
mov
push
test
sbbb
leave
sub
lods
xchg
or
add
cmp
dec
shrb
or
das
fdivs
xlat
sarb
cmp
cmp
jmp
pusha
es
pop
mov
xchg
aas
or
insb
mov
js
push
notl
cmp
mov
divb
xchg
sbb
and
out
cs
stos
std
sbb
mov
mov
sbb
inc
xor
mulb
mov
sub
push
inc
pusha
xlat
sbb
xlat
nop
test
cmp
dec
repnz
lea
insl
aad
sbb
mov
push
pop
rolb
mov
bound
lea
subb
gs
mov
sub
out
mov
loopne
or
xor
mov
in
out
xchg
push
pop
mov
shlb
leave
mov
sbb
pop
in
pop
mull
popa
stos
jl
je
je
loope
xor
and
jg
and
xchg
stos
das
push
push
dec
sbb
or
xor
adc
mov
mov
sub
enter
nop
cld
push
cs
jne
mov
lahf
xor
xor
jne
mov
dec
mov
pop
sbb
sarl
fcmovne
pop
dec
xchg
in
pop
mov
mov
cmp
in
outsb
and
cli
ljmp
pop
aaa
push
mov
mov
adc
insb
rclb
add
add
jne
cwtl
dec
insb
jmp
mov
insb
lea
xor
js
xchg
inc
fisttpl
bound
cmp
shll
pop
icebp
jle
das
or
mov
mov
aad
jp
mov
es
jg
jne
jae
add
inc
ds
cmc
clc
push
push
add
mov
jne
lods
pminsw
fsubrs
xchg
or
adc
lret
push
inc
xchg
lock
shrb
mov
test
shlb
popa
imul
test
pop
xor
outsb
xor
dec
jns
mov
and
mov
shlb
inc
sbb
push
and
cs
sub
and
adc
push
fistps
fiaddl
add
add
lret
xchg
std
roll
test
jno
mov
sbb
insb
pop
lret
jle
addr16
clc
mov
adc
mov
popa
and
into
rcll
dec
sub
repnz
push
cmp
inc
push
bound
test
hlt
sbb
lret
insb
movsl
adc
fimull
clc
outsl
std
sbb
lock
jge
sub
mov
out
test
add
pushf
add
push
jl
pusha
pop
fsubl
pop
sbb
pop
mov
insl
jne
mov
mov
add
pop
idiv
imull
lods
add
and
add
mov
out
lea
cmp
inc
negb
adc
pop
mov
cmp
mov
leave
stc
inc
aad
imul
addr16
call
out
rcl
xchg
sbb
int
popf
cmpsl
pop
rcl
in
add
pop
shlb
adc
mov
cmp
xor
aaa
dec
push
shlb
fcomps
xchg
insb
stos
std
dec
loopne
jno
fmuls
dec
inc
inc
cmp
loope
inc
push
hlt
int
sti
repnz
icebp
loopne
or
cmp
mov
or
cmc
pop
add
pop
and
push
in
mov
dec
lcall
shlb
imul
push
add
mov
jecxz
test
mov
stc
shlb
sub
jns
ja
pop
or
jo
adc
mov
xchg
mov
outsl
xchg
stc
int
mov
fnstenv
push
stos
mov
jnp
test
sbb
es
lret
push
out
std
addl
mov
lods
iret
test
inc
fs
les
movsl
sub
jecxz
mov
inc
dec
or
or
sub
imul
jmp
xchg
dec
cld
jge
mov
insl
and
int3
jo
js
int
pop
dec
cli
adc
popa
pop
je
xor
jbe
test
fstpt
in
or
in
sub
out
mov
cld
icebp
push
cmp
pop
mov
data16
inc
sub
xor
aas
scas
add
adc
sub
out
mov
movsl
das
in
jle
in
mov
cmpsl
test
jl
xor
add
cmp
and
mov
cs
push
outsl
outsl
ror
jno
rorb
jns
mov
ljmp
movl
test
xchg
jno
adc
jne
cmp
dec
add
add
incl
push
sub
and
sbb
fcompl
adc
adc
lret
dec
sub
lds
pushf
stc
cwtl
or
pop
or
cltd
imul
std
aaa
imul
pop
or
aas
dec
cmp
jp
insb
mov
xchg
lret
insb
xchg
adc
ljmp
cmpsl
into
dec
sahf
lret
or
imul
ss
cmp
rcrb
sbb
inc
xchg
xlat
sub
out
iret
sbb
push
in
jns
jne
loopne
xlat
or
mov
arpl
push
or
sbb
lock
xchg
adc
out
shrb
dec
daa
xchg
fiaddl
out
lods
out
or
pop
add
mov
test
aam
outsl
jmp
xor
xor
daa
mov
xchg
outsl
push
pop
mov
popa
xchg
fcmove
ja
mov
mov
and
mov
stc
lret
pop
inc
jbe
sbb
dec
push
xchg
les
test
inc
pop
test
add
sbb
xor
repnz
or
dec
pop
nop
pop
xor
jns
xorb
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
