push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
dec
xor
adc
lret
lods
fists
ret
or
mov
cld
out
mov
add
lret
scas
push
adc
jmp
and
rcrb
pop
cltd
pop
add
xchg
inc
or
data16
add
pusha
outsb
inc
cmp
loope
sub
jg
repnz
aad
pop
lods
or
jo
jg
pusha
and
repz
push
sbb
xchg
addr16
xchg
push
loop
mov
adc
dec
jne
repnz
dec
push
icebp
adc
leave
cmpl
ret
aam
imul
test
cmpsl
xor
stos
sti
and
xchg
or
enter
cwtl
int3
hlt
mov
js
jno
out
mov
mov
mov
mov
and
jns
cmp
mov
dec
jecxz
ds
cwtl
mov
or
test
ret
outsb
jnp
adc
jo
test
xchg
add
leave
dec
movsl
lahf
loope
ret
and
shll
jmp
xor
aaa
rolb
mov
or
popa
or
add
xchg
mov
dec
or
push
leave
dec
aad
mov
sbb
dec
lea
dec
jns
in
dec
push
pop
or
lahf
sbb
cmp
mov
jo
scas
cli
mov
inc
dec
mov
xchg
mov
adc
lock
xlat
pop
daa
fmuls
faddl
cmp
pop
mov
int
rclb
in
iret
cmp
dec
cmp
lret
scas
nop
jo
std
sub
sub
mov
and
mov
adc
popa
push
idivl
adc
mov
fdivrl
sbb
imul
out
lcall
les
and
xlat
in
cs
pop
push
test
xor
mov
popa
orl
jbe
mov
cmc
daa
cmp
mov
cld
add
into
shl
test
dec
aad
std
xchg
mov
jecxz
mov
fwait
adc
fwait
xor
cmp
mov
sbb
fistpl
mov
xchg
push
idivb
pusha
jo
loop
cwtl
mov
fisubl
jb
mov
inc
in
outsl
js
iret
adc
inc
in
lret
dec
or
int
mov
sbb
mov
mov
fcmovne
cmp
jg
das
in
cmc
mov
es
ret
adc
jge
dec
pop
pop
inc
xchg
xchg
ljmp
stos
gs
mov
cmp
cwtl
fstpl
cli
pop
in
out
or
jmp
les
or
sti
push
lret
xchg
jnp
pop
inc
movsl
fidivl
inc
dec
test
iret
fcmovu
jo
dec
cmp
lds
mov
out
mul
fsubl
cld
into
inc
out
adc
imul
out
sbb
mov
sahf
outsl
lock
shrl
sbb
pop
dec
push
dec
popa
pop
outsl
mov
xor
loope
jecxz
push
fwait
stos
fdivrs
mov
add
fistl
xor
movsb
cmp
sub
jo
test
mov
mov
push
fnsave
pop
cmp
mov
enter
cld
hlt
out
outsb
cmc
cltd
hlt
adc
mov
dec
shlb
inc
sub
xor
cld
adc
pop
aam
data16
stos
aas
fs
test
adc
cld
fcomi
lods
imul
js
mov
pushw
mov
mov
dec
jo
fs
lods
je
pop
in
sbb
xchg
mov
and
push
sbb
xor
mov
lds
or
cmp
hlt
test
add
int
aam
and
repz
int3
popa
cs
add
out
out
adc
cmp
out
push
pop
fnstsw
xchg
dec
fisubs
ss
jle
rcrb
sti
cmp
mov
mov
jecxz
xchg
cwtl
add
xchg
and
xorb
or
insl
mov
lds
pop
scas
inc
orb
movsl
loop
fisubs
xchg
mov
jns
dec
pop
out
xlat
outsb
cmp
sti
push
push
stos
addr16
cmc
movsl
and
jno
mov
sub
push
insb
pop
inc
lods
push
mov
clc
jbe
insl
and
push
xchg
cli
mov
fs
in
sahf
inc
in
inc
aaa
icebp
sub
ja
push
and
lods
loopne
mov
mov
movsl
xor
popf
adcb
pop
imul
pop
test
ret
ss
xlat
xlat
xchg
imul
mov
and
imul
out
add
xchg
and
cmpsl
arpl
mov
xchg
sub
add
push
lods
jnp
sbb
in
into
les
sbbl
int
push
dec
lahf
loope
inc
dec
iret
pop
lcall
pushf
mov
cmp
xchg
adc
test
js
repz
out
inc
int
stc
cs
or
add
xlat
xor
adc
lret
pop
mov
inc
movsb
inc
loope
xor
push
cmpsb
out
mov
test
adc
and
movsl
xchg
insl
push
ret
cmp
mov
dec
fs
jno
jp
sbb
and
cmp
or
imul
adc
lahf
hlt
xchg
sbb
lea
push
icebp
inc
sbb
inc
testb
outsb
fldt
push
pop
inc
jl
mov
cmp
add
xorb
add
fwait
xchg
dec
fisttpll
int3
scas
aas
cli
in
cltd
es
xor
icebp
test
and
scas
cmpsb
mov
call
and
sbb
mov
xchg
adc
lret
fldenv
mov
into
popl
leave
loop
cmp
rorb
mov
xchg
and
mov
jb
gs
jg
mov
xor
je
inc
sub
lods
xor
lcall
f2xm1
mov
xchg
insl
stos
push
push
hlt
jae
mov
icebp
jbe
mov
js
andl
xchg
aas
push
adc
dec
icebp
cmpsb
loopne
pop
sahf
and
and
loopne
sbb
scas
orb
sub
pop
lods
bound
mov
add
cmpsl
test
xor
incb
push
jne
pop
fcomps
mov
cwtl
pop
jp
fisubl
arpl
out
je
ja
popa
out
push
and
shlb
push
and
mov
inc
cld
mov
sub
or
mov
jae
sti
pop
dec
daa
enter
push
rep
out
inc
jg
mov
loopne
js
addr16
arpl
push
jge
insl
mov
pop
fcomps
adc
xchg
mov
int3
nop
lea
into
mov
mov
jo
movsb
xor
jo
shlb
sub
push
jo
jo
mov
fwait
mov
repz
icebp
mov
xor
sbb
push
jg
subb
and
scas
sub
or
lock
out
cmp
gs
pop
outsl
sbb
sbbb
aad
pop
inc
xor
xor
frstor
and
addr16
sbb
adc
adc
gs
fnstenv
xor
push
hlt
fstpl
jl
cmpsl
mov
mov
mov
cmp
jg
aas
popa
pop
je
aaa
adc
dec
stos
out
cmp
xchg
movsl
inc
repnz
lcall
bound
leave
clc
mov
sahf
stos
push
mov
xchg
mov
pop
pop
sub
dec
mov
fwait
push
stos
sahf
inc
fisubrs
push
loop
aad
jle
ljmp
sub
push
push
adc
or
mov
dec
arpl
pusha
fisubl
mov
imull
aam
dec
xchg
enter
jnp
xorb
stos
outsb
mov
gs
ss
ja
jl
ja
imul
mov
outsl
into
jecxz
dec
stos
add
mov
in
mov
test
mov
push
and
dec
lods
stos
ret
lahf
or
sbb
int3
je
ss
inc
push
rcll
pop
dec
mov
or
orl
jmp
mov
aad
jecxz
mov
inc
sahf
inc
insl
xchg
jp
bound
dec
mov
rcrl
icebp
int3
mov
mov
xor
cmpsb
cld
or
mov
test
int
and
mov
mov
hlt
shll
outsb
stc
sbb
lock
out
dec
fcmovne
popf
mov
imul
pop
fstpl
into
inc
cmpb
dec
add
mov
bound
inc
add
fs
out
lds
mov
les
adc
insl
aad
mov
psrlq
xchg
mov
push
scas
sbb
test
lods
call
jecxz
ret
add
out
jne
push
jp
jnp
cmpsb
ja
inc
daa
rclb
mov
inc
fistps
test
dec
mov
jo
mov
cld
out
dec
inc
pop
icebp
xchg
jo
adc
mov
insl
cmp
inc
int3
add
and
or
pop
dec
test
insb
loope
cmp
fmull
in
into
shrl
and
inc
xchg
push
xchg
push
pop
pop
push
mov
jge
or
mov
ljmp
js
imul
add
adcl
out
mov
jo
sahf
or
jle
mov
xrelease
mov
xor
jle
mov
pop
dec
fidivl
jge
rcll
xor
jp
rcrl
ret
mov
mov
mov
lahf
sti
leave
mov
sti
mov
dec
test
mov
adc
hlt
pop
mov
xor
jmp
sbbb
cmp
and
add
push
out
out
xor
lcall
out
and
mov
mov
dec
xchg
push
icebp
je
cmp
mov
sbb
cmp
out
mov
es
ds
adc
xchg
test
fildll
xor
adc
mov
ret
hlt
jo
out
cmp
and
jnp
adc
mov
jg
jmp
pusha
push
stc
cmp
cli
ret
dec
roll
mov
es
xchg
lods
and
pusha
fs
mov
repnz
daa
and
or
xor
inc
pop
jle
out
jle
rcrb
sahf
test
fdivl
jge
out
and
enter
out
mov
adc
pop
push
fldl
mov
daa
adc
push
lret
or
cmc
movsl
in
dec
sbb
add
adc
push
sbb
outsb
push
js
jp
pop
in
dec
ja
ja
mov
sti
js
inc
mov
mov
les
pop
cmp
pop
jl
stc
imul
andl
imul
push
or
xchg
cwtl
jle
xchg
push
stos
push
in
imul
jecxz
push
mov
repz
adc
xchg
xlat
sti
test
sahf
outsl
mov
adc
xchg
jns
bound
jns
xchg
out
inc
rorl
xchg
pop
test
shr
daa
push
cmp
fsincos
sub
and
cmp
adc
in
sahf
cltd
push
xchg
fisttpll
xor
add
sub
or
out
out
sub
pop
mov
test
mov
lds
fimuls
cmp
stc
clc
addr16
xlat
in
pop
or
fidivrs
dec
mov
adc
int3
icebp
mov
std
adc
jae
mov
dec
or
stos
cmpsb
rcrl
push
xor
loopne
xchg
aaa
popa
and
and
loope
data16
cmp
sub
insb
notl
addr16
iret
rol
pop
sub
mov
or
lock
imul
shl
call
inc
xchg
xor
push
xchg
into
mov
pop
mov
push
stos
es
lret
popf
mov
je
clc
test
xchg
mov
insb
jns
imul
ret
ja
ljmp
in
mov
insl
imul
jbe
mov
pop
cmc
or
fdivrs
in
or
test
rol
inc
xchg
ss
dec
hlt
dec
fcmovnbe
addr16
enter
cmpsl
je
sahf
test
daa
in
dec
push
repz
jo
je
inc
adc
xor
loope
rol
jl
and
dec
test
or
inc
nop
pop
jb
inc
jne
cmp
in
mov
xchg
aas
ljmp
mov
fiaddl
mov
or
fcompl
jmp
xor
inc
sbb
orl
sub
xchg
dec
test
add
jge
outsl
roll
dec
xchg
xor
push
push
cmp
pop
ds
push
std
rcrb
pop
jae
hlt
inc
mov
push
cld
pusha
nop
cmp
out
enter
in
dec
mov
pop
imul
ljmp
shlb
inc
cmp
pop
ja
pop
movsl
and
aad
sub
fs
jg
hlt
ret
lret
xor
push
in
lret
popf
lods
sahf
lcall
stc
push
cmp
mov
aam
and
in
jmp
js,pt
in
inc
test
inc
dec
mov
inc
xchg
and
imul
mov
ret
orb
jl
sahf
xchg
testb
mov
inc
cli
push
bnd
pop
loop
jmp
mov
js
sub
gs
jne
pop
in
push
aam
test
popa
sti
push
pop
xchg
movsl
xchg
loope
pop
push
and
out
push
adc
rcrl
cs
jp
sbb
mov
dec
sub
mov
in
stc
call
scas
xor
test
add
rcr
faddp
jl
fisttpl
lret
cmc
fwait
and
adc
push
cmp
pop
inc
push
ja
aam
jno
sti
fldl
movl
and
mov
int
xor
inc
push
divl
mov
imul
add
pop
adc
enter
or
mov
mov
inc
adc
sahf
inc
aam
out
call
aad
push
das
cmp
into
mov
sbb
lret
inc
or
aaa
xchg
mov
inc
lock
jge
call
pop
xor
add
sub
imul
add
fmull
adc
mov
dec
xor
mov
cmp
or
add
imul
cmp
movsb
imul
cwtl
inc
xor
jle
jbe
push
pushf
lods
fistpl
mov
pushf
test
popf
cmp
pop
fnstcw
mov
jnp
and
dec
imul
sbb
jp
and
dec
pop
cmpsb
out
jnp
ds
mov
daa
hlt
insb
mov
mov
push
jno
dec
dec
and
ds
and
xchg
push
xlat
sub
stos
movsb
dec
rorl
xor
xchg
cmp
add
inc
dec
js
subw
jns
or
xor
pop
jbe
rcrl
pusha
jle
xor
cmp
inc
out
popf
mov
sbb
push
xor
lods
dec
dec
push
push
jle
daa
jne
test
and
and
dec
lds
je
inc
scas
adc
ss
int
lret
jne
lahf
enter
and
and
mov
xchg
fmuls
in
lret
enter
xor
inc
push
enter
insb
setae
movl
dec
cmp
test
lods
rcrb
pop
sbb
popf
into
jnp
jecxz
pop
lret
cld
nop
mov
xchg
sbb
fwait
rcl
dec
mov
aaa
outsl
pop
mov
adc
movsb
fwait
inc
mov
sbb
pushf
mov
sub
movl
int
sub
inc
mov
ret
mov
mov
mov
and
jmp
pop
mov
aaa
and
pop
sti
push
jge
sub
inc
les
sub
mov
sbb
ja
mov
fimull
xchg
imul
push
sbb
stc
movsl
es
add
mov
enter
adc
mov
call
push
sti
ret
mov
push
aad
dec
out
cli
inc
dec
mov
mov
mov
mov
xor
push
rcll
jae
pop
cmpsb
mov
xchg
push
sbb
mov
enter
cltd
pop
xor
adc
mov
test
enter
into
cwtl
clc
jo
xchg
cmp
inc
inc
push
loop
or
cmpsl
adc
pusha
inc
cmp
cmp
jne
xor
movsb
adc
inc
repz
mov
insl
sti
sub
push
mov
lret
sbb
pop
inc
call
xlat
adc
mov
mov
sbb
outsb
addl
add
mov
js
addr16
mov
mov
test
imulb
dec
inc
data16
sahf
pop
push
add
mov
jnp
enter
movsb
std
fisubs
lret
push
adc
out
popf
add
cmp
dec
mov
mov
incl
in
cmpsb
cmp
or
xchg
loopne
stos
out
and
jle
and
push
aad
push
inc
jnp
inc
test
sub
push
rclb
scas
in
inc
pop
and
loope
cmp
add
pop
push
or
shll
sub
cmpsb
pop
lods
subl
xchg
add
and
aas
dec
nop
pop
hlt
cwtl
inc
fsubrl
cmc
out
ficompl
push
adc
sbb
xchg
fnstenv
dec
xchg
mov
mov
iret
push
cmc
in
dec
lret
jp
or
mov
shl
xchg
jae
repz
jne
popl
or
add
and
inc
pusha
mov
test
jge
rcrb
outsl
pushf
mov
add
scas
adc
mov
call
pop
xchg
push
xor
cwtl
jo
jns
subb
xor
cmpb
push
sahf
push
insl
push
and
cmp
add
icebp
js
jg
int3
jne
adc
mov
orb
cwtl
roll
test
inc
fwait
mov
add
fdivrs
pusha
push
or
pushf
adc
loopne
sahf
gs
mov
jg
imul
mov
jg
je
lret
pusha
or
push
push
cwtl
cmpsb
je
insb
xor
and
sbb
lret
jno
cmpsb
jno
inc
and
xchg
jp
lahf
fldcw
shll
jg
sub
adc
jne
hlt
iret
stc
cmovns
in
incb
loope
mov
sub
push
lods
push
sbb
sub
inc
xchg
jns
jecxz
mov
pushf
mov
or
adc
or
mov
dec
loope
cs
push
push
fdivrp
push
inc
leave
jne
cmp
pushf
inc
test
mov
xor
adc
sub
hlt
lret
mov
sub
int
arpl
es
mov
mov
out
jnp
pop
cmc
sbb
fwait
xchg
cmp
aam
enter
pop
jmp
push
or
repnz
xchg
push
xchg
push
sti
add
scas
sbb
pusha
lcall
call
add
sbb
adc
cmp
mov
arpl
iret
pop
popa
cmp
sbb
mov
rcr
push
add
xor
cwtl
inc
clc
fidivrl
out
push
cmc
jo
and
xor
cwtl
fnstsw
or
or
ja
clc
dec
ret
stos
lcall
push
test
xchg
pop
fnsave
lret
jae
sahf
xchg
dec
shr
lock
push
xchg
out
mov
cmp
data16
pop
cmpb
mov
xchg
cld
adc
xor
jno
sub
loop
mov
cmp
push
mov
or
ljmp
mov
imul
lods
or
dec
xchg
xor
fdivl
insl
mov
and
std
mov
shll
test
adc
sbb
lahf
sub
pop
ds
inc
push
das
jno
jb
xor
repnz
clc
js
rcrl
or
pop
xchg
xor
fbld
dec
pop
leave
mov
lods
dec
dec
adcl
mov
js
cwtl
dec
adc
rolb
jmp
pop
add
adcl
and
add
pop
xchg
xor
and
mov
adc
stc
push
dec
or
and
shrl
les
inc
int
out
ljmp
outsl
pop
xchg
xchg
sub
push
clc
mov
jp
xchg
pop
dec
dec
inc
movsb
sub
mov
rolb
or
mov
mov
dec
js
je
and
dec
push
dec
jo
fimull
adc
jne
push
mov
repz
mov
or
push
mov
mov
sbb
dec
int
ficomps
cmp
popf
or
mov
ss
iret
add
dec
jg
push
sbb
jnp
pop
push
ret
push
and
int3
jp
mov
xor
and
cmp
gs
cmc
cld
xchg
mov
mov
sbb
repnz
ret
divps
xor
int3
push
dec
xlat
sbb
xor
iret
popa
cltd
nop
and
rorl
cmpsl
outsb
popf
test
hlt
dec
popl
int3
or
sbb
push
adc
inc
xchg
cmpb
imul
xchg
jnp
pushf
daa
jmp
cld
loop
into
mov
aad
and
cmp
adc
shlb
pusha
xor
mov
fimuls
cwtl
enter
pop
xor
outsl
jno
xor
stc
lods
shll
call
xchg
pop
push
push
and
aad
daa
loope
adc
popf
add
dec
out
enter
mov
movl
in
pop
xlat
jno
cmp
push
xchg
popa
inc
lods
iret
bsf
dec
mov
lock
stos
mov
inc
mov
mov
jle
scas
add
andl
andl
cs
lcall
add
dec
jecxz
or
orl
movl
psrad
mov
inc
test
mov
sar
testl
push
jo
mov
jns
stc
cmpsl
jmp
lret
aas
xor
inc
test
sub
xor
jo
aam
mov
or
push
and
jge
pop
mov
jbe
out
mov
imul
stos
adc
push
js
xor
fcoms
imul
ss
pop
adc
adcl
mov
mov
rcll
xor
cmpsb
inc
jmp
stc
pop
mov
mov
xchg
xor
mov
fimull
fcmovnb
or
lds
inc
jmp
aaa
out
xor
into
jmp
mov
adc
add
mov
push
push
cld
mov
inc
mov
shll
aas
outsl
xchg
mov
inc
xor
int3
daa
xchg
mov
andb
hlt
and
lahf
adc
roll
pop
test
roll
pusha
popl
pop
lods
sub
insl
in
lea
mov
loopne
xlat
jne
push
cmpl
jp
xchg
cmp
adc
jmp
sub
imul
push
xchg
adc
xchg
adc
loopne
and
mov
cmpsb
xchg
jecxz
xchg
mov
shll
iret
add
mov
ret
xchg
repnz
daa
cmpsl
push
icebp
sub
and
aas
aas
add
and
test
adc
hlt
mov
dec
cmpsb
push
mov
inc
addr16
jne
inc
and
sub
out
add
std
add
dec
cmpl
ljmp
add
mov
int3
adc
add
and
mov
mov
adc
or
sbb
lret
cld
push
cltd
insb
iret
mov
rol
dec
add
int3
add
push
cmpsl
dec
jno
or
sub
xor
xchg
mov
cmp
je
xchg
out
ret
cmp
mov
ret
push
js
in
push
xchg
imul
pop
mov
subb
sahf
lret
out
cld
xlat
scas
push
adc
and
pushf
je
shl
and
lret
xchg
data16
les
xor
mov
clc
aad
cmp
dec
adc
inc
icebp
jle
xchg
ss
or
adc
xor
xor
add
movlps
sub
mov
sbb
push
sub
shll
cmp
es
out
mov
gs
out
push
add
add
js
cmp
dec
stc
push
fsubs
adc
jnp
test
or
fstpl
jae
in
lods
in
faddl
shl
insl
test
mov
sub
lods
xchg
pop
lock
xchg
xchg
int3
into
mov
xor
cmp
repz
stc
sbb
cwtl
sahf
stos
lods
xchg
xchg
dec
sahf
dec
cmpsb
nop
sub
into
xchg
pop
jb
jns
cmp
clc
inc
icebp
shlb
cmc
sub
mov
xor
mov
hlt
cmp
out
hlt
xchg
fnstsw
movsl
mov
ljmpw
into
ljmp
or
dec
cmp
mov
shlb
jmp
outsb
jns
push
jp
pop
fidivs
jbe
movsb
sub
dec
gs
lea
ss
aad
popf
arpl
jnp
or
pop
xor
fidivrs
inc
and
sbb
imul
or
push
cmc
adc
cld
push
mov
sub
arpl
jo
std
pop
js
mov
push
xlat
in
or
or
or
xchg
lcall
in
pop
arpl
int3
cmpsl
addr16
xchg
jbe
cmp
jg
pop
int3
cld
add
gs
sub
push
sbb
mov
adc
fs
cmp
fucompp
fisubrl
fdivrl
mov
add
daa
push
xchg
scas
cmpsb
lock
cmp
fdivrl
sbb
adc
push
clc
mov
push
icebp
mov
incl
out
sbb
movl
mov
and
mov
jae
push
fs
sub
xchg
fsubs
sarl
lods
mov
sbb
fwait
int3
outsl
sbb
sub
movsl
jne
insl
imul
lahf
enter
popa
insl
sbb
inc
sbb
xor
popf
ret
cld
enter
mov
fnstenv
cs
jl
insl
in
push
test
inc
push
out
push
scas
outsb
pop
push
pop
jae
inc
mov
stos
add
test
imul
pop
mov
daa
iret
xchg
sti
sub
and
jge
rcll
xchg
out
pop
into
lcall
stos
cwtl
addr16
repz
pop
jnp
xor
outsb
and
xlat
das
sbb
cmp
cmp
aam
js
sub
mov
fidivrs
lods
cmp
sub
inc
jne
jne
mov
cmc
aam
and
add
sub
ds
sub
mov
mov
call
dec
adc
xor
push
sub
push
rorb
jnp
push
outsl
test
inc
xchg
lds
pop
pop
fcom
loope
orl
mov
mov
xchg
add
call
outsb
testl
mov
and
fprem
jno
inc
nop
lock
std
xor
mov
add
lods
fsubp
or
ret
push
mov
mov
ret
inc
and
mov
adc
lret
jle
hlt
mov
rcrl
int
icebp
cmpsb
cli
mov
xchg
shlb
out
lea
push
addr16
add
test
clc
pop
xchg
rcrl
mov
mov
dec
jp
insb
adc
in
push
sub
repz
jmp
out
shrb
adc
mov
push
mov
and
dec
xor
jg
add
pop
or
inc
mov
or
jmp
xor
pushf
or
push
scas
aam
cs
mov
mov
test
out
jge
ljmp
mov
jl
pop
je
inc
decb
out
imul
test
cs
out
loop
and
loopne
lret
pop
mov
mov
sub
cmp
mov
add
fstps
push
ret
xorb
cltd
jae
xor
loopne
xchg
js
cmpsb
inc
mov
bsf
adc
mov
inc
cmp
jmp
in
sbb
ror
mov
sub
ret
push
ss
imulb
jl
or
and
mov
rcrb
repnz
sbb
pop
dec
cmp
mov
sahf
push
pop
jp
mov
xchg
scas
push
inc
mov
jae
jg
jo
mov
inc
das
inc
insl
jle
cmpsb
pop
pop
ret
xor
lods
jnp
xor
test
dec
cli
pop
scas
aas
push
lods
andb
dec
mov
mov
sbb
iret
js
xchg
mov
sbb
mov
imul
dec
enter
dec
and
pop
sub
jecxz
pop
pop
xchg
xor
es
roll
cld
xchg
in
push
lods
fdivs
xchg
pop
mov
and
mov
adc
add
lahf
test
adc
sbbl
sbb
mov
insl
clc
cmpsl
jp
je
stc
mov
sbbl
frstor
fadds
pop
xchg
pop
or
mov
mov
xor
xlat
loope
lods
mov
lods
xchg
jns
out
outsb
ja
sbb
cli
sub
and
and
cmp
sub
mov
into
test
sarl
or
ljmp
jnp
xlat
addr16
stc
int
icebp
xor
mov
pop
shrl
call
ret
test
inc
jb
aam
mov
sarb
sbb
pop
sub
loope
xor
pop
add
push
in
bound
mov
pushf
add
jecxz
arpl
mov
sbb
push
gs
fcomps
ljmp
sbbb
and
xchg
shlb
sbbl
xlat
or
fstps
lods
mov
pop
xchg
mov
mov
sbb
adc
mov
and
shr
outsl
shl
or
divl
xor
ret
test
dec
dec
clc
daa
mov
mov
inc
and
out
dec
pop
fiaddl
jae
xchg
mov
mov
and
imul
jnp
and
and
xor
dec
lods
lret
sbb
inc
mov
push
imul
into
dec
sub
rorb
pop
filds
dec
rclb
inc
sbb
outsb
xchg
push
inc
idivl
add
pop
dec
inc
scas
xchg
lock
xchg
adc
xchg
sub
mov
fidivrl
mov
jmp
mov
sbb
fwait
adc
sub
mov
jmp
das
dec
insl
cmp
les
push
mov
dec
xor
addb
jae
xchg
xor
pop
in
jmp
mov
mov
mov
loop
pop
and
jl
xchg
xor
lods
std
xor
mov
mov
movl
mov
jmp
or
pop
cli
jecxz
mov
loop
fisubrl
cwtl
xor
adc
cli
cld
cmp
or
jb
enter
pop
mov
std
push
pusha
cmp
jmp
aas
sub
fnstcw
sub
cld
adc
lcall
js
xchg
mov
lahf
or
lret
jae
add
sub
pop
xor
xor
pop
mov
shll
push
dec
push
pop
sti
scas
fwait
xorb
inc
adc
or
data16
lods
sub
jns
daa
push
in
fsubs
scas
pop
test
mov
fwait
insb
pop
lods
pop
pop
xor
inc
scas
lods
add
aas
cmp
test
xor
daa
mov
cs
repnz
and
mov
xor
jbe,pt
xor
sarl
mov
adc
or
xor
movups
repz
popf
nop
lock
and
das
cwtl
sbb
fstl
les
xor
pop
jp
nop
ret
cmp
cli
mov
leave
xor
push
mov
out
arpl
mov
sahf
test
mov
push
mov
sub
and
cmpb
inc
jmp
lcall
lods
push
loopne
inc
lahf
or
jb
xchg
stos
popf
fcom
enter
push
and
mov
cmpsl
sar
test
bound
add
mov
xchg
mov
xchg
dec
cmc
mov
adcl
mov
dec
inc
pushf
mov
push
ds
leave
enter
inc
out
outsl
fadd
and
mov
lock
and
cmp
cmp
jmp
aaa
mov
pop
xor
sbb
fcmovu
add
mov
lret
adc
mov
dec
ja
pop
push
iretw
scas
jb
add
mov
ret
cmp
or
jle
jns
pop
pop
push
add
mov
or
adc
sbb
cmc
xor
test
and
or
popf
mov
addr16
xchg
nop
pop
mov
dec
jmp
nop
jo
popa
jns
in
rcrl
ds
dec
or
test
mov
in
xlat
cmp
push
repz
or
adc
clc
xor
mov
xor
push
fstpl
add
incl
cltd
test
in
adc
into
push
fildl
ljmp
int3
ret
stos
loop
xor
pop
stc
cmp
add
xor
sbb
pop
xchg
pop
mov
lea
sub
jb
xchg
stos
das
ja
lods
xchg
pop
popa
je
fistpll
sahf
lahf
loopne
xor
push
xor
or
addr16
add
mov
fiaddl
sub
addr16
arpl
ja
fcmove
dec
cmp
jg
and
mov
sti
jle
jmp
insb
movsb
ret
fldenv
ljmp
jbe
and
pop
pop
add
adc
rorb
insb
mov
mov
repz
cmpsl
aas
push
jle
inc
incb
inc
iret
dec
clc
icebp
lods
sbb
lcall
mov
outsb
jp
out
dec
cmpsl
lea
cmp
push
adc
cwtl
subb
pop
incb
mov
pop
inc
ja
dec
mov
ljmp
loop
out
in
mov
out
std
add
xchg
jp
fldenv
fcmovne
test
lods
pop
mulb
xor
pop
std
inc
icebp
sbb
clc
mov
in
ljmp
lcall
divl
iret
mov
jge
movsl
fnstenv
shl
out
out
xor
push
push
mov
movsl
cmpsl
pop
jg
outsl
xor
cmp
call
dec
and
xchg
mov
and
xor
xchg
add
clc
lret
mov
test
inc
inc
adc
mov
out
lret
repnz
and
je
and
and
outsb
out
shlb
jb
out
jnp
ret
sub
std
sub
test
inc
and
rcrl
xlat
push
mov
dec
lret
inc
xchg
ret
in
std
pushf
ss
les
popa
hlt
xchg
push
sub
xchg
stc
pop
mov
cmp
jae
cmpsb
sarb
into
sahf
adc
aaa
fwait
test
push
push
pop
pop
jbe
dec
nop
pushf
push
cmpl
es
into
ror
xchg
lods
and
jl
or
jne
mov
xor
mov
lds
pop
xchg
or
adc
cltd
std
test
pop
push
mov
fbstp
outsl
dec
or
or
push
mov
lods
sub
popf
mov
lret
pop
add
mov
and
sbb
push
mov
fldt
popa
xor
icebp
in
outsl
mov
cltd
out
jp
mov
std
inc
xchg
sbb
dec
pop
pop
outsl
adc
data16
inc
scas
aad
int
mov
test
pop
jle
or
jecxz
rcll
xchg
mov
mov
mov
xchg
mov
insl
int3
les
sbb
insb
cli
cli
fidivs
ror
sub
push
push
lods
stos
add
pusha
or
cwtl
data16
jmp
inc
jno
addr16
or
dec
push
pop
mov
lahf
shl
les
out
out
cwtl
jns
js
das
jge
shlb
aaa
sbb
js
iret
jno
out
cmp
push
cld
daa
outsl
jp
ljmp
jb
sarl
jecxz
mov
sbb
notb
mov
add
test
pusha
jle
out
and
cwtl
scas
jp
lds
dec
out
ds
jae
out
and
test
push
pop
inc
dec
sub
insb
xchg
cltd
aaa
pop
pop
stos
push
int3
shlb
xchg
mov
mov
mov
stos
adc
out
in
ja
pushf
jns
dec
sbb
mov
movsl
xor
mov
mov
jbe
xor
mov
enter
andb
push
xor
mov
test
test
enter
repz
cmc
xchg
decl
mov
fistpl
sub
int
sub
jmp
fnstcw
sbb
xchg
imul
test
shlb
or
mov
and
cwtl
repz
push
sbb
fstpt
xor
sahf
dec
and
sahf
xchg
jnp
xchg
andb
iret
dec
sub
dec
jg
sub
or
inc
add
shlb
pop
inc
inc
xchg
inc
mov
dec
mov
outsl
stc
add
mov
push
push
push
push
xchg
mov
mov
sbb
or
movsb
ljmp
or
out
fstpt
sub
sub
sub
or
aam
stos
enter
leave
mov
rcr
add
movsl
testl
inc
dec
out
fistpll
lcall
je
rcl
and
sbb
data16
mov
outsl
gs
mov
xor
add
sub
add
in
in
loop
mov
cmpsb
sbb
je
add
pop
in
arpl
or
cld
push
sahf
cltd
aas
ficoml
in
call
shl
push
pop
lahf
stos
cmp
mov
mov
adc
inc
aaa
ljmp
xchg
sbb
test
shrb
add
jmp
adc
push
xchg
lcall
in
xchg
lock
or
pop
test
mov
bound
nop
cli
arpl
sub
divl
arpl
jno
gs
out
push
test
fistpl
jmp
sbb
jg
sarb
mov
push
adc
jne
repnz
popa
outsb
sbb
cmp
data16
ret
fs
adc
imul
mov
xchg
pushf
loop
pop
fsub
cli
xor
xor
outsl
loop
enter
dec
repz
xor
lcall
add
pushl
mov
jbe
sti
xchg
pop
mov
mov
cmp
xor
adc
xchg
dec
into
jp
adc
pop
movsb
cmp
cmp
push
fwait
ds
out
cld
loopne
clc
popf
addb
or
or
cltd
cmp
push
arpl
and
ja
push
pop
shl
fildll
jb
xchg
dec
inc
inc
outsb
dec
loop
cs
dec
mov
and
cmpsb
push
lahf
shrl
xor
push
mov
xchg
aam
int3
xchg
stos
cli
loope
push
nop
lahf
cmpsb
xor
data16
push
scas
sub
mov
ficompl
push
in
lret
insl
sahf
cld
shll
mov
push
jae
jo
mov
push
xor
mov
out
movsb
popa
xor
xor
sbb
mov
xchg
icebp
ljmp
int3
inc
cmp
mov
mov
sbb
fnsave
ret
mov
rol
sbb
mov
lods
add
shlb
ret
mov
and
stc
loope
fcmovnb
ja
xchg
mov
push
or
jle
push
mov
cmp
rcrb
test
mov
adc
in
popf
jnp
lahf
not
inc
test
aas
xlat
ret
adc
push
xorb
mov
stc
cmp
add
jno
inc
or
pop
jg
jle
mov
lret
adc
andb
mov
in
shl
jno
test
das
pop
jmp
in
cli
mov
jno
movl
js
pop
scas
lcall
shrl
or
and
push
testl
nop
je
and
mov
test
loopne
test
movsl
sub
es
sub
clc
push
insl
sub
test
js
leave
shrb
out
lds
inc
cwtl
outsl
shrb
div
sub
stos
fstpl
aas
lock
fists
loopne,pt
in
or
xchg
pop
mov
jle
mov
adc
push
fs
arpl
mov
loope
jno
sbb
push
adc
dec
aad
insb
cmp
leave
mov
cli
xchg
jnp
lahf
shll
dec
leave
rcrl
push
icebp
ret
cmp
out
mov
test
sub
mov
adc
sub
adc
mov
mov
in
addl
sti
out
jle
std
xor
push
xlat
fstpl
adc
inc
xchg
pop
dec
call
cmc
xlat
sbb
pop
scas
aas
mov
sbb
arpl
xor
push
or
hlt
mov
repz
shlb
adc
movsl
pop
or
push
jns
js
sbb
mov
cmp
sbb
jg
inc
in
test
xchg
mov
movsl
mov
dec
gs
cmp
std
mov
and
pop
sbbb
stos
sub
pop
xor
pop
pop
sbb
push
std
ror
rclb
fwait
enter
cs
dec
push
cli
rorl
cld
lret
cmpb
mov
mov
icebp
test
lock
mov
or
or
cmp
stc
adc
dec
lret
fs
cmpsb
inc
and
aad
mov
movsl
jl
inc
ss
ljmp
lret
pop
daa
inc
lods
inc
or
stc
lret
dec
jo
jno,pn
push
mov
jno
test
mov
lods
std
pop
ja
ljmp
lret
outsb
fwait
mov
ret
mov
jbe
xchg
je
dec
inc
push
outsl
cmp
jbe
pop
mov
cld
rclb
or
loop
fdivs
adc
dec
mov
push
and
xchg
mov
ret
gs
pushf
ror
scas
je
lods
inc
mov
roll
cmpsl
mov
hlt
cmp
push
mov
test
movsl
in
jl
push
xchg
pop
imul
jle
das
outsb
mov
mov
enter
or
std
sbb
inc
mov
mov
pop
faddl
je,pn
rorb
inc
jb
cmp
sub
mov
mov
jl
push
pop
pop
les
adc
and
xor
out
ret
ret
mov
loopne
adc
sub
fnstsw
xor
xor
movsb
pop
popw
rep
push
int
push
out
insb
lret
sbb
jb
pop
mov
je
pushf
shlb
stos
mov
les
int3
adc
pushf
adcb
aam
cmp
sub
mov
dec
popf
fsts
js
subl
mov
scas
in
push
faddl
xchg
and
shlb
push
rclb
dec
xchg
out
es
and
add
sbb
repnz
add
mov
adc
jnp
test
out
dec
cmp
push
stc
xorb
pusha
adc
push
xchg
sbb
lock
int
data16
xchg
fmull
push
push
lcall
je
mov
adc
add
xchg
mov
xor
sbb
nop
lahf
sub
push
movsl
clc
les
push
push
jg
imul
js
sub
mov
sub
xchg
mov
push
sbb
aas
pop
ffreep
out
jbe
cmp
mov
nop
pop
mov
jns
and
subb
mov
fwait
or
xor
cltd
sbb
sub
fwait
fwait
mov
shl
dec
mov
jns
or
jnp
sbb
push
std
mov
in
sbb
into
cmp
pusha
hlt
mov
loop
inc
inc
sbb
shll
sbbl
pusha
push
mov
test
fsubl
pop
adc
fs
and
pop
inc
adc
xorb
ret
add
insl
clc
push
ja
add
sub
aam
xchg
mov
pusha
enter
push
jp
subl
add
sub
adc
mov
jmp
cmp
loop
mov
xor
add
or
xchg
out
outsl
call
enter
cld
adc
push
jp
mov
stos
lods
aaa
negb
pop
jne
ja
dec
jl
lcall
lret
mov
mov
in
fmuls
adc
fiaddl
add
imull
gs
and
test
cmpsl
and
inc
mov
sub
fwait
add
lcall
or
subl
dec
or
scas
mov
pop
mov
movsb
jae
icebp
xchg
mov
fbld
pop
pop
bnd
mov
mov
cli
call
pop
mov
sbb
add
xchg
cmp
mov
pop
cmpl
cwtl
adc
aas
fwait
dec
decb
pusha
sub
adcl
lods
add
and
dec
enter
mov
push
sub
pop
stos
imul
movsb
xor
add
dec
int
daa
mov
inc
adc
xor
or
xor
mov
mov
es
pop
repnz
push
push
pop
lcall
add
pushf
mov
out
scas
push
pop
ss
or
xchg
mov
stos
add
mov
cwtl
adc
shrb
push
out
jmp
call
jns
xchg
outsb
mov
lods
loope
ret
in
les
inc
dec
add
cltd
add
test
jb
dec
neg
scas
jp
aas
into
lock
add
adc
push
jp
cmp
pushf
dec
adcb
mov
jp
pushf
daa
pop
pop
into
test
jnp
aas
jno
push
leave
dec
insl
pop
sbb
rolb
movsb
and
fwait
add
jg
daa
es
iret
ljmp
jb
or
cmp
and
mov
cli
cwtl
and
jne
and
inc
shl
je
in
lret
adc
stc
std
sub
xor
fwait
mov
mov
mov
sbb
sub
fadds
or
or
addr16
or
push
or
pop
pop
jb
mov
adc
push
dec
sub
ljmp
xorl
pop
cmp
outsb
movsb
dec
mov
pushf
insb
pop
fcompl
add
in
cwtl
stc
inc
mov
sahf
push
movsb
cmp
gs
loop
nop
inc
cmpl
fidivl
jl
pusha
fldcw
xor
or
sbb
cli
fstps
popf
mov
popf
int
mov
push
sub
dec
stos
jnp
add
fisubrs
aam
cmp
push
cmp
lods
outsb
call
ficoms
cmpsl
pop
mov
std
cmp
jbe
xchg
pop
and
dec
scas
pusha
xchg
jg
pop
pop
sbb
push
imul
pop
mov
add
out
jge
andl
pop
es
push
leave
pop
mov
pop
pop
ret
mov
push
pop
inc
inc
cltd
mov
dec
std
inc
add
in
and
idiv
inc
mov
imul
jae
adc
jmp
cmp
sbb
in
loop
sub
test
in
adc
inc
inc
xor
sti
jecxz
ret
fs
ja
or
stos
jecxz
xor
dec
and
sub
sub
pop
fiadds
stos
fistps
xchg
push
fimull
rcl
mov
clc
out
inc
dec
out
sub
mov
cmp
icebp
popa
aas
out
mov
pop
xor
std
jb
sahf
fnsave
out
dec
cmp
icebp
je
in
lods
hlt
addb
aad
lock
clc
pop
aam
or
dec
fwait
xchg
mov
mov
fs
fcompl
ret
pop
mov
iret
push
cmp
rcll
je
push
add
dec
jmp
mov
jg
outsl
sub
cmp
repnz
mov
mov
jb
mov
frstor
in
mov
sub
sbb
and
in
dec
push
jecxz
cmpsb
xchg
and
aad
jb
psrld
out
jbe
es
xchg
inc
test
and
mov
add
aam
mov
orb
jnp
jae
cld
sti
and
jbe
std
push
sub
sbb
ja
and
jg
std
in
jge
sbb
outsb
sti
cmp
fcomi
mull
mov
imul
outsl
jae
xor
ja
movsl
sub
es
lock
dec
xchg
cwtl
xchg
scas
inc
inc
lcall
sahf
pandn
aas
adc
sahf
loopne
incl
mov
push
mov
aas
jle
mov
xlat
adc
xor
jg
inc
sbb
dec
mov
or
loopne
lret
orl
out
xchg
imul
and
mov
test
ja
sarl
push
in
xor
or
cld
cmp
push
rcrl
sub
ds
lock
push
push
cltd
and
mov
dec
push
pop
fsubp
inc
iret
push
sub
aad
mov
pusha
outsl
ret
in
sbb
icebp
out
mov
push
iret
test
fldln2
mov
fcoms
imul
fs
test
scas
flds
ss
xchg
les
popf
mov
psllw
mov
out
sbb
inc
in
inc
add
xlat
outsb
mov
add
xorb
xorl
adc
pop
ja
outsl
rcr
jae
shrl
loop
push
shlb
test
sub
and
adc
xor
lods
push
mov
sub
stc
popf
decb
mov
lock
add
add
mov
push
dec
and
xchg
and
jns
xor
jmp
lods
jg
mov
aaa
xor
mov
sbb
stc
mov
cmp
mov
inc
data16
shll
in
xchg
sub
stos
insl
mulb
test
aaa
orl
jp
lret
or
ja
nop
inc
clc
or
adc
cld
sti
rol
movsl
mov
aas
pop
mov
in
mov
inc
das
cmp
inc
sbb
imull
inc
mov
lret
push
jno
jg
scas
cmp
jecxz
inc
mov
loopne
and
test
mov
add
je
imulb
cmp
pop
jge
jg
xchg
lret
cmpsl
push
imul
xor
pop
sahf
adc
xor
out
int
adc
inc
cmp
in
add
popl
or
hlt
mov
in
cltd
add
ss
lods
sbb
das
ljmp
mov
mov
pop
inc
in
out
pop
loop
cmp
pop
leave
push
cmp
je
sti
scas
test
in
push
sahf
dec
push
mov
xchg
mov
ret
rcrl
jp
and
shrb
pop
ret
out
xchg
fstps
mov
adc
jmp
mov
push
adc
rclb
fwait
js
pop
mov
push
jmp
insl
push
or
hlt
les
das
enter
sub
push
jno
push
xor
scas
mov
push
sbb
lret
cmp
mov
jbe
push
cli
xchg
sub
ficoms
push
cs
push
dec
icebp
loopne
dec
fs
mov
pop
jns
dec
jo
cmp
sub
dec
out
imul
shlb
mov
enter
imul
repnz
imul
inc
inc
jle
lds
popf
or
fstpt
cmp
pop
daa
rcr
adc
dec
cld
pop
scas
or
shll
sahf
push
push
lds
mov
movsb
out
or
push
fstl
adc
mov
lcall
lds
adc
gs
test
test
inc
fimuls
adc
mov
xchg
mov
and
test
ja
inc
mov
mov
imul
mov
stos
aad
mov
rcl
adcb
or
mov
mov
cltd
fcomi
in
icebp
aaa
in
aad
or
aam
xchg
insl
movsl
aam
jbe
mov
subl
mov
sti
inc
rcrb
adc
or
dec
daa
adc
fisubrs
lcall
xchg
push
jecxz
addr16
jmp
iret
and
outsb
push
mov
fcmovnb
mov
data16
es
shll
sub
fs
outsl
push
aaa
hlt
sub
fistps
jmp
fwait
and
js
jnp
dec
popf
fstp
jle
addr16
leave
rclb
xor
adc
leave
loope
ret
in
add
xlat
xchg
sub
mov
stos
inc
mov
xor
lret
fucomip
jge
into
jno
ret
sbb
fsubl
adc
jb
fs
adc
loope
xorl
and
dec
sbb
mov
orb
cli
mov
push
add
int3
jmp
daa
dec
in
rclb
jo
mov
stos
loop
cmp
mov
xor
idivl
xchg
pop
outsb
push
pop
add
mov
fwait
jmp
outsl
fidivrs
icebp
out
mov
shrb
push
leave
sub
jbe
int3
mov
inc
jg
daa
in
xchg
push
mulb
gs
rcrl
or
push
cwtl
dec
add
sbb
shlb
adc
push
leave
jno
jmp
push
pop
test
fimull
pop
sub
lea
das
aad
cli
cltd
xchg
mov
xchg
jl
fisttpll
mov
mov
fdivp
push
in
add
cmp
xor
xchg
adc
insb
push
cld
jae
mov
test
xor
movl
test
push
or
lret
xchg
ja
jno
mov
jl,pt
xchg
push
xchg
jno
iret
iret
lds
and
pop
fldenv
mov
jmp
push
mov
imul
add
lret
das
pop
and
imul
out
pop
jbe
and
sarl
jmp
or
in
sbb
pop
dec
lret
xchg
inc
and
je
rorl
xor
ljmp
jecxz
repnz
xlat
add
je
dec
decb
cld
mov
fstps
imul
test
test
cmpsl
mov
pop
shll
das
lret
rolb
and
jmp
pop
mov
push
xchg
dec
shr
xchg
out
int
or
add
adc
loope
pop
push
ja
mov
xlat
mov
nop
out
or
in
push
or
shr
dec
test
sbb
xor
sub
aad
scas
adc
and
push
aas
lea
push
push
or
inc
mov
push
incl
dec
test
mov
mov
jns
inc
popa
gs
mov
mov
adc
rorb
test
lds
sbb
lret
repnz
adc
call
mov
shlb
jnp
imul
xchg
and
add
lret
rcr
mov
mov
daa
xchg
js
aas
mov
dec
mov
lock
fsub
sub
and
insb
pop
rolb
fxam
aas
loopne
push
lahf
xchg
inc
ss
xchg
outsl
rorb
daa
jo
mulb
shll
outsl
jnp
mov
push
sbb
jb
test
mov
sub
push
mov
icebp
xor
jae
mov
adc
int3
xchg
insb
ds
lret
sub
pusha
mov
sti
mov
mov
movsb
mov
add
test
repnz
in
xor
mov
xor
inc
mov
jp
clc
pop
sub
rorl
ja
or
adcl
jmp
push
sbb
inc
pop
lea
lret
inc
adc
dec
pushf
or
subb
dec
mov
test
scas
add
jnp
add
sub
in
lock
jb
adc
add
fnsave
adc
xchg
lods
mov
jle
mov
out
sbb
and
lea
push
mov
iret
imul
rolb
pop
in
mov
outsb
lds
int3
sub
pop
push
or
and
sarl
sbb
xorl
cmp
mov
movsb
in
leave
mov
cmp
cmp
loop
sbb
inc
subl
adc
xchg
adc
push
pop
shrb
mov
mov
xchg
std
push
icebp
fistpll
xchg
xlat
pop
adc
je
mov
cli
imul
sub
pusha
and
fwait
out
pop
ss
out
mov
imul
and
cmc
ret
jmp
sub
fucom
mov
scas
les
je
cmp
xchg
shrl
sahf
xor
addr16
jo
hlt
int3
lcall
scas
jnp
dec
push
jle
mov
lahf
pop
xor
movsl
cmp
inc
loope
sarb
imul
fidivrs
mov
sbb
or
pop
mov
mov
inc
cmp
addb
inc
mov
mov
es
pop
repnz
adc
mov
push
addr16
cmp
insb
lods
out
repnz
sahf
xchg
hlt
inc
ljmp
icebp
xor
call
loopne
outsb
rclb
fcoms
insl
out
push
sbb
mov
add
pop
add
pop
dec
inc
push
mov
inc
push
push
jecxz
xchg
lods
xchg
and
mov
popf
mov
mov
aam
addr16
leave
adcl
rcl
and
andb
mov
push
imul
push
ja
in
shrl
ljmp
mov
dec
xor
enter
enter
addr16
or
popf
lret
push
test
or
or
stc
ss
fistpll
sub
decb
in
in
loop
xor
rcrb
jne
lret
sub
sub
mov
rcl
mov
sub
ret
es
mov
movb
inc
cmp
sbb
adc
lds
outsb
int3
cmp
aaa
push
sbb
inc
fcompl
and
push
cmp
mov
jmp
inc
movsb
add
jo
mov
mov
dec
loop
dec
jp
shrl
loop
mov
test
aam
stos
subl
adc
add
aaa
loopne
sarl
or
dec
in
test
adc
inc
fwait
popf
cmpsl
mov
pop
jno
or
add
andl
movntps
daa
ret
test
cwtl
push
lods
rorl
imul
push
loop
dec
add
test
incl
loopne
test
addr16
lea
push
in
repnz
mov
mov
insl
mov
inc
sbb
cmpl
into
push
lock
mov
imul
repnz
inc
in
add
pop
sub
rolb
in
arpl
cmc
pushf
mov
push
addr16
push
mov
lods
cwtl
icebp
pop
push
pop
mov
xchg
xchg
and
inc
jb
jge
dec
push
jae
test
push
or
adc
xor
aas
xor
lahf
rclb
mov
sar
jmp
sbb
mov
pop
outsb
jnp
mov
fisubrl
mov
dec
push
jae
jl
and
js
cmp
or
iret
hlt
jns
jns
sub
les
sbb
xchg
fbstp
stos
lcall
outsb
sbb
add
movsl
popa
fsubrs
cmp
addr16
and
shlb
out
mov
add
nop
scas
lock
clc
les
stos
fisubrl
adc
push
push
insb
enter
add
push
jae
sbb
mov
call
xchg
int3
push
inc
js
sti
les
cmp
dec
push
jecxz
xchg
mov
inc
shlb
loope
inc
std
in
add
sahf
std
mov
xor
cmc
xchg
mov
and
mov
pop
push
lret
fsubr
jno
or
pop
mov
fwait
cli
lds
dec
jnp
aad
imul
js
adc
stc
lret
and
lcall
hlt
ret
push
inc
mov
outsl
sbb
push
xor
sbb
and
out
and
jb
or
mov
pusha
pusha
push
jbe
mov
repz
pop
loop
popf
jne
imul
adc
xlat
sbb
or
jl
push
int3
add
imul
call
shr
dec
push
repnz
and
cmp
mov
sbb
add
jg
mov
pop
or
jns
dec
movsl
stos
push
push
aam
xchg
or
ret
dec
sbb
mov
fcompp
pop
add
rol
lret
push
pop
adcl
sub
mov
mov
lcall
out
sbbl
out
push
cmpb
test
sbb
sbb
enter
movsl
pop
add
outsb
test
in
sbb
add
outsl
sub
in
ret
inc
imul
test
inc
addl
mov
mov
push
std
cmp
xchg
dec
or
lock
call
push
mov
dec
or
lock
pop
popa
into
popf
adc
leave
xchg
int3
dec
adc
fs
outsb
test
adc
and
xchg
add
loop
jns
jg
pop
test
aas
mov
lahf
xchg
outsl
xchg
or
iret
loopne
insb
and
dec
push
mull
mov
repz
loopne
lcall
shrl
sbb
cmpl
or
imul
sub
lock
data16
mov
andl
mov
and
and
imulb
jge
outsb
mov
incb
ffree
add
adc
mov
xor
lcall
jmp
inc
and
mov
sbb
inc
jge
cli
xchg
cwtl
call
sbb
rcll
into
fs
mov
movsl
ret
cs
xchg
mov
jle
imul
aaa
lcall
faddp
aam
aam
mov
add
in
pop
and
stos
xchg
dec
xchg
dec
or
adcb
in
lidtl
cmpsl
sub
int
orl
or
out
jnp
mov
pop
or
dec
int
sbb
out
sbb
or
dec
add
das
das
jnp
push
lds
xchg
pop
mov
jmp
lcall
sti
dec
mov
sub
repz
std
ja
adc
addr16
or
dec
sti
push
xor
stos
add
cmpsl
xchg
arpl
lret
mov
xchg
pop
mov
sub
pop
stc
pop
iret
adc
sub
jnp
cltd
xchg
or
int
popa
lret
mov
cmp
addb
int3
sub
or
into
popf
iret
repz
mov
cmp
dec
cmc
dec
fmull
add
sahf
pop
sub
pop
xor
in
dec
and
aaa
xor
enter
mov
push
cmpsl
pop
cmpsb
ds
mov
xchg
jb
ret
or
or
sub
sbb
cmp
outsb
sarl
inc
jg
or
imul
add
fwait
mov
xchg
adc
pop
cmp
xlat
adc
cmp
mov
test
arpl
mov
mov
dec
fildl
pop
popf
lods
les
cld
adcl
push
push
inc
imul
shlb
xchg
mov
lods
ficoms
pop
push
enter
imul
sti
lret
ja
inc
jl
aam
stc
test
shll
call
fst
xchg
cmp
push
lods
daa
jae
xchg
jne
fists
pop
pushf
sub
push
pop
ret
insl
sub
pop
dec
enter
pop
movsl
jnp
mov
and
fisubrs
cmp
mov
fsubr
bound
scas
inc
add
xchg
das
sub
mov
lea
jmp
mov
arpl
lret
push
imul
adc
ljmp
pop
adc
xlat
popf
cmp
sub
xchg
push
xchg
and
jge
xchg
mov
sbb
mov
cli
mov
out
cmp
xchg
or
mov
xor
jno
ds
ror
mov
sub
fwait
mov
push
fldt
lock
lods
aad
fcoml
int
movsb
in
rcll
jb
loopne
aad
push
push
out
adc
das
stos
cmp
rep
scas
shll
or
mov
jnp
cs
notb
fcoms
or
fdivl
testb
addr16
push
jg
xlat
push
mov
lret
outsb
adc
push
gs
lds
out
faddp
and
into
clc
into
rol
sub
push
xchg
mov
in
cmp
xor
out
sub
add
mov
mov
sbb
cmc
clc
lret
push
loop
movsb
mov
adc
jnp
mov
push
cltd
jecxz
lods
mov
mov
mov
add
rcl
xor
pusha
cli
lods
and
test
lcall
mov
jl
outsb
add
daa
push
clc
mov
mov
shll
cmpsb
mov
pusha
add
mov
and
jns
mov
loopne
jg
hlt
pop
mov
push
dec
fldenv
jg
pop
in
into
mov
subl
js
std
pushf
dec
xlat
adc
cmp
dec
addr16
lahf
std
das
sti
fsts
and
jecxz
lcall
addr16
in
cs
mov
push
jmp
loopne
and
mov
daa
push
stc
xchg
mov
pushf
into
jmp
cli
out
sub
inc
popa
xor
imul
pop
aas
jl
mov
push
push
movsl
xor
iret
gs
dec
pop
mov
into
push
xor
test
inc
sahf
cmc
lcall
int3
push
test
jl
das
sahf
in
es
loope
stos
lcall
mov
lods
add
pop
je
xor
call
jne
cmpsb
int3
mov
leave
sbb
insb
imul
add
pop
and
cmp
pop
cwtl
jp
iret
ficoml
xchg
popf
pop
inc
jg
sbb
cmpsb
dec
mov
jle
push
jns
sub
dec
pop
push
lods
inc
loop
push
leave
xchg
push
stos
push
scas
mov
cmc
in
and
lods
rcr
ret
dec
inc
mov
and
dec
jns
and
pop
and
sub
sub
inc
pop
rol
sbb
mov
mov
cmp
ds
jnp
sub
inc
mov
jge
fistps
int
mov
in
shr
pop
adc
push
mov
test
push
mov
imul
in
mov
idivb
lds
push
sbb
hlt
shl
arpl
cmp
dec
ret
xchg
sbbb
and
push
ret
or
add
pop
xchg
jmp
push
mov
roll
stos
xor
or
jns
mov
mov
addr16
lds
and
test
int3
fdivs
gs
shlb
dec
icebp
cmpsl
sbb
lods
xor
movsb
mov
insb
outsb
cmpsl
shll
adc
mov
mov
addr16
fldt
inc
dec
adc
mov
cmpsb
mov
int3
push
out
add
ja
jg
adc
repz
lds
dec
arpl
cli
cmpsb
or
mov
sbb
stc
jne
push
mov
mov
push
mov
pop
negb
inc
pusha
movsb
pop
or
outsl
loop
fmul
ljmp
cmp
daa
dec
cltd
dec
sbb
jae
repz
inc
cmpsl
pop
xor
xchg
cmpsb
and
movsl
pushf
sbb
dec
add
xchg
fdivr
dec
jge
in
or
std
add
jl
imul
notb
fdivl
test
inc
lock
std
stc
jb
int3
inc
inc
pusha
sub
or
icebp
test
insl
pop
push
sub
inc
mov
mov
and
inc
inc
mov
add
fwait
call
jae
add
popl
mov
ja
sub
fs
scas
clc
inc
push
cmp
add
arpl
jmp
dec
inc
shrl
mov
jl
xor
clc
cmc
enter
subl
dec
orl
xor
xchg
jbe
clc
icebp
notl
fstl
cwtl
arpl
mov
push
add
test
dec
push
or
stos
mov
imull
das
xor
push
out
mov
shrl
jl
sub
ror
lea
int
lahf
jmp
popa
int3
stos
inc
test
les
sub
jle
mov
mov
mov
sar
repnz
or
xchg
pcmpeqd
loopne
xchg
sub
add
jp
movsl
sub
lock
popf
mov
ja
lock
das
imul
and
scas
call
xchg
push
cmp
test
mov
dec
in
jge
cmp
repnz
push
jle
push
adc
jle
sbb
scas
dec
cmp
and
xor
xor
xchg
arpl
test
inc
add
inc
stos
aas
pop
je
pop
inc
sbb
bound
ficoms
jnp
xorl
dec
adc
mov
aaa
dec
push
scas
dec
xor
mov
out
repz
fsubl
loopne
pop
scas
add
sbb
jmp
int3
js
hlt
add
hlt
jo
push
sbb
mov
das
push
dec
push
ret
fdivrl
dec
pop
es
jmp
adc
in
jb
std
popa
cs
cmc
add
or
xchg
xchg
imul
inc
imul
xchg
or
scas
adc
test
clc
adc
fst
mov
sub
mov
add
mov
daa
mov
fdivrl
push
shrb
test
jle
cmp
adc
cmp
mov
push
in
jns
and
pop
popf
insb
loop
call
mov
aad
jmp
mov
xchg
cmpsl
adc
out
clc
repz
mov
cs
hlt
fdiv
and
xor
in
pop
pusha
test
adc
lret
loope
les
push
int3
bound
insb
std
dec
or
add
repnz
mov
or
cmc
mov
cmp
aas
fstpl
mov
dec
jae
adc
outsl
mov
push
mov
shlb
sahf
inc
popa
popa
aas
test
sbb
jnp
lods
mov
rorb
hlt
arpl
pop
in
in
fwait
hlt
hlt
mov
addr16
addr16
lods
jno
mov
add
sbb
xchg
jp
outsl
and
mov
pop
loopne
std
pusha
int
push
jne
dec
clc
nop
ret
xchg
pop
adc
in
mov
inc
std
adcb
test
dec
std
mov
movsb
imul
dec
out
lahf
jae
fsubrs
xor
mov
aaa
xor
sub
shl
xor
repz
push
popa
jo
stc
cs
into
out
mov
outsb
pop
out
inc
inc
xchg
mov
push
out
test
inc
aas
xchg
pushf
out
lods
fsub
add
xor
pop
dec
and
mull
add
fnstenv
cwtl
sub
dec
jge
cli
jl
out
sub
lea
in
jns
sub
mov
sarb
lcall
gs
adc
mov
or
sub
xchg
loope
pop
mov
lea
loopne
cwtl
sbb
sub
flds
xlat
mov
ficoml
in
add
cmp
jp
push
jge
xchg
jle
cltd
inc
vunpcklpd
mov
fisttps
and
ret
divb
dec
insb
mov
push
or
xchg
repz
dec
and
mov
jge
arpl
pusha
ljmp
fldt
sbb
sub
pop
jne
cwtl
shl
popa
hlt
in
sahf
sub
clc
adc
jo
add
daa
lcall
push
lret
rolb
lahf
cmpsb
in
mov
mov
stos
or
inc
movsl
mov
xchg
mov
filds
cmp
movsl
cmp
cmp
ss
jle
sbb
xchg
dec
adc
xor
loope
jae
out
pop
cmp
inc
adc
subl
mov
push
stc
cmp
and
mov
lret
xor
mov
je
xorb
repz
dec
in
push
sbb
ds
in
scas
setns
or
push
enter
or
movsb
sahf
or
hlt
fistl
pop
gs
stos
pop
aam
arpl
call
sbb
xor
xchg
neg
insl
lret
sahf
mov
inc
insb
in
popf
into
ljmp
mov
pop
cld
lahf
out
outsl
pop
fdivrl
dec
cmpsl
sbb
cmpb
ja
jmp
add
xchg
out
pop
or
push
pushf
adcb
pop
adc
mov
sbb
sbb
lods
clc
les
cld
pushf
cltd
movsb
int3
icebp
test
cmc
push
inc
lcall
rcrl
and
arpl
loope
stos
inc
lods
testl
jge
lds
nop
add
pushf
fstp
data16
gs
int3
inc
jmp
lcall
jge
addr16
lds
and
rolb
rcl
std
add
cmp
xor
pop
lret
add
rorl
pop
mov
inc
jno
mov
xchg
xchg
ret
push
cmp
fwait
enter
inc
cmc
cmp
out
cli
andb
aad
test
sub
cmp
mov
mov
cwtl
out
xchg
mov
mov
sub
mov
pushf
cmpsb
popa
pop
push
out
fwait
lock
in
inc
adc
stos
xchg
sbb
lret
mov
int
ja
or
mov
iret
mov
xor
mov
hlt
data16
and
or
mov
lea
push
sbb
and
mov
sbb
gs
jo
dec
mov
dec
shl
arpl
mov
mov
cmpsb
in
pop
pop
dec
xor
dec
aas
and
push
andl
cld
stc
xchg
mov
jb
not
or
push
aam
jno
pop
mov
clc
iret
outsb
les
ds
mov
insl
adc
pop
loopne
push
dec
fwait
rolb
push
lds
jmp
mov
popf
push
movsb
mov
inc
sub
cwtl
push
dec
jmp
dec
sub
hlt
inc
mov
scas
mov
jnp
or
push
add
add
nop
out
adc
pop
mov
jl
adcb
test
rorl
mov
pushf
loope
test
ss
mov
sbb
bnd
pop
push
cli
inc
mov
jl
stos
or
jl
mov
shrb
xchg
shl
xchg
lret
jmp
jmp
into
into
jmp
ss
movsb
pop
jg
aas
jbe
or
rolb
mov
xchg
negl
dec
cmp
inc
and
jns
testl
adc
add
cs
pop
adc
lock
jp
and
mov
jb
cmpb
jo
mov
lds
push
lods
adc
cmp
shll
lock
adc
fidivrl
xor
add
adc
push
pop
daa
mov
js
mov
jmp
pop
xcrypt-ctr
cmpsl
sbb
cld
test
push
shl
jle
mov
out
out
sbb
ss
sti
jle
addr16
dec
ss
push
fldl
jmp
stos
xor
jg
ret
xor
loopne
sub
inc
rcrb
xor
mov
mov
lret
inc
enter
ficompl
jecxz
loop
loopne
cmc
mov
mov
inc
jne
adc
xor
insl
popa
bound
daa
mov
bnd
daa
or
test
test
cmc
xlat
jnp
or
cmp
mov
vmread
mov
lds
repnz
fadds
ret
sbb
xchg
adc
fisttpll
scas
movsb
sub
loopne
lods
andb
pop
cmp
insb
xchg
test
pop
push
lods
test
pop
jg
inc
inc
or
fsubrl
fs
pop
sub
insl
jmp
and
dec
mov
xchg
mov
mov
cs
xor
cmp
mov
cwtl
daa
mov
ret
xor
lcall
or
jecxz
in
es
pop
stos
push
div
arpl
loope
mov
hlt
sbb
pop
cmp
pop
dec
or
mov
inc
lret
adc
pop
pop
movsl
lea
lahf
fs
xor
out
dec
push
fdivr
pop
adc
hlt
jb
mov
pop
lcall
icebp
pop
mov
mov
test
dec
lods
add
or
jle
in
jg
jns
dec
lret
cmp
imul
imul
adc
inc
loopne
mov
or
lret
mov
fidivrs
pusha
lods
hlt
xchg
ljmp
jmp
inc
rclb
xor
jle
inc
shl
adc
jl
in
mov
cmp
pop
fcomp
jl
scas
out
pop
push
xchg
or
stc
sbb
xor
push
in
and
inc
les
pop
inc
jmp
nop
lret
push
fadds
dec
icebp
mov
dec
pop
bound
iret
ds
movsl
add
repz
loopne
adc
xor
test
push
sahf
mov
ds
stos
pushf
addr16
add
mov
adc
cld
xor
mov
dec
push
fiaddl
rsqrtps
push
or
push
sub
in
popa
pusha
popa
add
movsb
cmp
cmp
pusha
pop
jb
iret
mov
lahf
je
movsl
mov
inc
sahf
mov
mov
cmpsb
test
jp
xchg
inc
in
gs
insb
fisttpll
push
or
imul
xor
inc
inc
mov
rolb
xor
jmp
mov
cmc
mov
in
insl
cmp
repz
jg
sub
movb
or
cwtl
subb
imul
or
dec
sbb
jno
fucomp
cmp
add
inc
shl
sub
stc
bound
int
sti
inc
cltd
jecxz
rcrl
adc
imul
jmp
inc
push
mov
stc
sbb
cmp
add
faddl
ds
adc
inc
shr
jno
lods
and
mov
stc
mov
or
aam
dec
push
lcall
in
in
sbb
jmp
addr16
popa
lea
push
aad
cmp
insb
xor
add
inc
cld
add
mov
movsb
and
addr16
adc
enter
jno
push
popf
ss
cld
or
xchg
pop
and
movsl
mov
sti
movsl
xchg
xlat
jns
stos
xor
xor
daa
call
add
mulb
aam
arpl
test
mov
lock
ret
daa
cmp
aaa
lret
xorl
jmp
xor
or
pushl
movsl
push
daa
jg
sbb
outsl
pop
mov
data16
xchg
cli
mov
stc
mov
add
mov
fnstenv
sbb
int
pop
xor
cmp
ret
jnp
mov
or
dec
mov
mov
mov
ret
out
pop
mov
mov
pop
sub
jmp
adc
sahf
ret
fnstcw
and
pop
hlt
push
pop
xchg
rolb
clc
push
pop
sub
add
mov
lret
or
xchg
int3
in
bts
std
frstor
dec
xor
std
add
xchg
and
in
pop
mov
mov
ja
lcall
js
jecxz
pop
bound
and
repnz
push
xchg
imul
fbstp
xchg
fsubs
lcall
pop
dec
push
push
cmpsb
inc
ret
mov
ja
mov
js
add
lds
jl
push
les
lock
movsb
and
jae
loop
jp
ljmp
fimuls
push
push
mov
dec
fdiv
insl
lahf
sbb
cmpsl
xor
dec
lds
repnz
in
fisttps
popf
je
lret
pop
mov
jo
xchg
push
aaa
aas
dec
scas
mov
xchg
leave
mov
nop
inc
inc
sbb
jg
in
out
xor
inc
repnz
mov
push
mov
xorb
jno
clc
pop
cmc
lret
mov
xor
insl
jl
add
int
insl
and
and
xorl
inc
cmp
or
sbb
mov
add
data16
sub
xor
fildll
popf
adc
std
mov
orl
adc
ljmp
add
lahf
or
jge
aas
stos
jnp
mov
imul
mov
arpl
or
sahf
jle
cs
dec
push
inc
daa
add
nop
inc
imul
stos
mov
cwtl
or
cmp
mov
sti
ss
imul
scas
jb
iret
lret
xchg
addb
outsl
pop
mov
cmp
stos
in
hlt
fadds
fnstcw
hlt
lock
or
sub
adc
cmc
or
cmpsb
in
sbb
mov
fistpl
lahf
loopne
mov
xchg
mov
jp
subl
pop
sub
pop
js
dec
jl
insl
push
xlat
insl
decb
lds
sti
lods
xor
lahf
outsl
je
outsl
repz
out
or
mov
in
adc
lahf
push
repz
test
jns
popa
ja
cmp
pushf
mov
xchg
jb
push
in
lock
fldenv
jg
nop
mov
ljmp
cwtl
inc
xor
mov
jg
daa
mov
std
mov
add
lret
mov
call
lsl
push
imul
inc
inc
jp
lods
loop
xchg
cld
ja
sbb
mov
outsb
dec
xchg
jg
inc
dec
add
inc
lret
sub
enter
or
xchg
loopne
mov
test
popa
push
stos
cwtl
mov
inc
push
xchg
mov
mov
jp
adc
movsl
popa
sub
fstps
lret
sub
fcom
fistl
insl
repz
js
adc
sub
fld
cld
loop
pop
inc
add
sbb
mov
add
insl
call
sarl
addr16
dec
hlt
jecxz
shl
sbb
notl
movsl
dec
popf
push
ret
mov
pop
mov
lods
xchg
add
push
fsub
in
inc
jns
shrb
test
mov
cmp
xchg
cmpsb
cmp
xor
push
push
pop
jmp
testl
inc
bound
lret
scas
ror
fists
fdivs
dec
data16
dec
adc
sbb
xor
adc
mov
mov
dec
adc
inc
fdivr
repz
mov
divb
mov
dec
and
arpl
lds
out
xor
les
push
add
jnp
stc
inc
daa
sbb
shl
mov
repnz
push
stc
mov
mov
sub
pusha
jl
subl
jo
gs
cltd
outsl
mov
jo
mov
int3
push
sbb
ret
icebp
rcr
or
inc
and
jne
mov
inc
mov
pop
scas
xor
mov
mov
dec
mov
push
adc
dec
inc
in
notl
fwait
sbb
push
into
fcmovne
test
or
mov
pop
jno
movsb
int3
repnz
int
cmpsl
rorl
adc
mov
mov
popf
mov
and
pop
sahf
icebp
cmp
jmp
jg
cs
push
out
shl
outsb
pop
add
stos
scas
add
jb
mov
lret
cld
pop
jecxz
dec
adc
sbb
mov
les
or
test
jno
cmp
mov
pop
mov
sahf
add
ret
push
loope
inc
testl
test
dec
mov
mov
cmp
cmc
das
lret
pop
ss
insb
cmp
push
xchg
lret
aaa
cld
push
push
mov
in
loop
sbb
call
lea
outsl
mov
mov
repz
addr16
inc
and
dec
stc
xor
cwtl
xchg
push
mov
test
sbb
mov
mov
sti
loopne
shlb
int3
sub
dec
push
mov
add
mov
push
push
in
mov
inc
stos
jle
into
or
mov
sbb
lea
xchg
xor
sarb
mov
imul
or
jae
cmp
or
mov
xor
push
lahf
call
xchg
addr16
ss
insl
sub
mov
test
inc
jo
nop
xor
aas
dec
jl
insl
out
sub
aam
push
icebp
stos
xor
mov
icebp
mov
sbb
ds
pop
mov
orb
dec
enter
push
pop
adc
jge
test
nop
loop
leave
push
sub
rclb
in
push
insb
sbb
testb
dec
inc
inc
jecxz
add
push
stos
cs
push
mov
sub
sti
and
dec
loope
js
and
call
outsl
into
arpl
mov
inc
inc
sti
xchg
mov
scas
jmp
cld
adc
mov
push
out
mov
dec
push
xlat
lods
das
mov
leave
cmp
sti
subb
sub
or
cs
stos
adc
mov
add
mov
dec
inc
jae
in
stos
dec
fiaddl
inc
sbb
dec
cwtl
movsl
xor
scas
int3
loopne
sarb
add
adc
or
xchg
mov
pop
ss
mov
mov
cld
push
std
ja
loopne
mov
and
mov
cs
add
repnz
adc
inc
rclb
xchg
scas
jae
insb
divb
xor
jmp
and
mov
jno
pushf
popl
fadd
and
add
and
sbb
add
loop
mov
sub
test
jl
outsl
and
sbb
xor
push
jns
push
dec
clc
fldl
mov
lea
loopne
sub
mov
ljmp
mov
lahf
lods
mov
test
aas
cmp
cmp
out
loop
in
cwtl
xor
rorb
loop
cld
std
fsub
shr
or
add
dec
mov
inc
inc
mov
js
jl
pop
popf
xlat
mov
mov
cli
nopl
testl
sub
or
pop
xor
lock
cmp
jbe
ss
mov
push
xchg
mov
sbb
cltd
pop
xchg
setle
shrl
ja
loop
sub
mov
mov
xchg
loopne
rclb
inc
sub
pop
addb
jl
xchg
hlt
shl
pusha
jp
mov
xor
mov
add
ret
push
les
ret
enter
gs
pop
sahf
movsb
leave
imul
scas
lret
out
xchg
xchg
aam
pop
cld
clc
movsl
cmc
orl
divb
out
test
ja
mov
cwtl
cmp
adc
xrelease
arpl
je
jbe
jecxz
mov
or
lahf
adc
xchg
cmpl
popa
fldenv
enter
jns
xor
das
scas
push
test
jno
nop
das
arpl
sub
stos
cmp
xchg
test
xchg
je
add
push
or
push
lds
popa
outsb
das
jb
pop
adc
jne
inc
jno
enter
xor
jnp
ss
jb
lret
mov
iret
xlat
loope
jnp
test
daa
lret
fidivrl
or
scas
dec
imul
les
js
or
outsb
insl
dec
mov
mov
sub
dec
in
pop
cmp
push
jge
out
push
xchg
icebp
cmpsl
and
pop
mov
outsb
repnz
mov
adc
scas
xchg
push
add
xchg
mov
icebp
in
les
pop
cld
in
pop
push
sbb
aad
jbe
sbb
stos
inc
mov
push
aaa
out
fiadds
popf
add
and
fstpl
outsl
mov
test
lret
ficoms
lcall
inc
popf
jne
out
xor
sti
stos
int3
mov
jp
mov
sti
dec
pop
sbb
stc
jmp
loop
inc
adc
loopne
aaa
cmp
fwait
rolb
loop
inc
ljmp
push
inc
and
lcall
aam
movsb
sar
push
and
mov
xchg
mov
jecxz
push
aam
je
insb
sbb
sub
sub
fadds
dec
cmc
loope
adc
sub
idivb
mov
push
or
push
movsl
cwtl
xsavec
psadbw
shll
pop
mov
cmpb
jge
xchg
pop
aaa
add
aaa
xchg
sub
mov
fcom
pop
mov
xchg
stos
xor
scas
pop
fsubs
dec
andl
lahf
push
aam
lods
mov
sub
lcall
xlat
dec
dec
std
mov
or
push
xchg
mov
icebp
mov
js
adc
push
mov
clc
dec
inc
imul
enter
adc
test
jbe
movsb
mov
dec
mov
out
scas
inc
pop
cmpsl
inc
in
pop
cwtl
push
jb
jnp
jge
sbbl
out
jae
les
mov
stos
push
jo
dec
enter
ret
dec
dec
mov
jl
aad
sub
iret
adc
es
mov
ss
lret
mov
ss
repnz
add
das
add
movsb
andb
iret
rcll
mov
mov
pop
icebp
mov
out
xorl
inc
aas
fsubrs
movsl
pop
outsl
add
pop
fdivp
dec
push
mov
inc
in
pushf
dec
mov
mov
cmc
adc
mov
xor
out
mov
mov
sub
mov
stos
push
lahf
mov
dec
cmp
jae
aad
adc
rclb
jnp
mov
cmc
outsl
int3
inc
adc
dec
insl
mov
les
pop
cmp
pop
shl
ds
imul
push
fdiv
xchg
sbb
cwtl
imul
cmpsl
out
inc
fisttpll
aad
pop
push
dec
push
cmpb
xchg
pusha
mov
push
pop
adc
fsubp
adc
mov
lcall
shl
in
xchg
ss
fists
aas
mov
pop
xchg
mov
jmp
icebp
sub
pop
fists
adc
nop
add
pop
add
andl
jp
je
ret
or
jbe
cltd
stc
or
sbb
dec
icebp
insb
lcall
call
or
sub
lods
xor
dec
inc
xor
push
lret
shl
int
mov
push
cmp
push
aad
lods
iret
add
and
popl
jne
adc
into
cwtl
repz
mov
fists
adc
notl
iret
iret
add
in
add
jns
stos
add
mov
fstps
add
out
sbb
lret
roll
fistpll
push
and
cs
jle
outsb
push
aas
outsl
pop
push
jno
out
pop
frstor
test
rcr
rcr
mov
xchg
xor
xchg
and
cli
sub
xchg
in
fimull
sbb
fisttpl
test
mul
cwtl
xchg
stos
or
fstpt
jecxz
push
pop
xchg
mov
pop
pop
out
stos
ret
xchg
jnp
les
daa
cmp
jns
sbb
or
std
and
push
stos
jns
fs
xchg
dec
pop
xchg
jg
push
mov
mov
add
mov
xchg
add
push
or
in
popf
ret
xor
mov
mov
mov
jmp
jnp
outsl
lret
aaa
pop
pop
jo
popf
cmp
sbb
add
nop
mov
lea
fbstp
loope
mov
jnp
fnstenv
pop
in
js
test
nop
ss
push
xor
push
pusha
cmc
out
int
hlt
xchg
pop
mov
aad
inc
dec
mov
jbe
shrb
xchg
and
and
add
int
jmp
sub
jmp
lods
movsl
dec
add
aaa
cmc
push
sbb
jmp
sub
sbb
scas
adc
adc
loope
aad
pop
cwtl
mov
nop
xchg
and
iret
mov
mov
hlt
xlat
bound
test
test
test
mov
orl
ja
jnp
sub
xor
insl
shll
dec
and
pop
aam
mov
addr16
mov
xor
cmc
fs
leave
cld
mov
xchg
push
xorl
icebp
out
pop
and
shrl
inc
xchg
push
sbb
mov
out
mov
xor
cltd
dec
mov
xchg
jl
jb
xchg
cld
imul
rcrb
rorb
or
pop
xchg
adc
mov
scas
sub
ljmp
repz
push
or
shll
test
xchg
cmp
sbb
dec
cmpsb
into
mov
shl
fucomi
add
into
out
cmp
scas
lds
fwait
and
xor
mov
test
jp
mov
ret
mov
add
dec
nop
stos
mov
push
dec
lahf
mov
repnz
les
imul
jns
xor
jge
mov
ljmp
fbstp
xchg
test
xchg
and
subl
jb
mov
gs
inc
repnz
inc
leave
jmp
dec
sbb
lahf
sub
mov
push
mov
cwtl
in
ljmp
fcoml
xor
imul
jbe
xchg
mov
sti
das
out
xchg
adc
lds
fidivrs
adc
sub
das
mov
addr16
inc
cmp
movsl
lock
sub
test
ss
sub
mov
dec
xor
test
cmpsb
mov
aam
sub
add
add
daa
pop
lret
aad
enter
pop
leave
xor
mul
daa
jge
fwait
mov
imul
sarb
push
push
pop
jae
nop
mov
adc
inc
mov
cld
pop
daa
mov
jg
xor
mov
xlat
cwtl
add
andl
sbb
mov
jne
test
jne
add
shlb
es
sub
outsl
sbb
les
and
sub
stos
imul
in
fldl
mov
xchg
pushf
jne
mov
outsb
movsb
and
es
xchg
pop
lock
int
iret
mov
lds
sub
and
fldl
add
sub
xchg
subl
mov
inc
aad
fwait
pop
jb
xchg
les
or
sub
sbb
out
inc
cmp
dec
ret
iret
in
fistl
and
ja
pop
repnz
out
and
cmp
jle
sub
clc
fisttps
gs
mov
shr
cwtl
shlb
cmpb
pop
adc
inc
clc
push
sub
push
and
mov
data16
bound
jg
add
outsl
adc
or
jmp
ret
xchg
fcmovnb
mov
jae
xchg
popf
cmp
stc
hlt
sub
out
xchg
test
neg
xor
jb
push
in
cmp
pop
cmpsb
and
cwtl
ja
mov
imul
lret
ror
or
out
mov
cmp
popa
out
sbb
mov
pop
mov
adc
aad
lret
bound
adcb
neg
dec
adc
cmp
loop
cmpsl
push
sahf
mov
add
inc
sub
inc
aad
jno
nop
mov
nop
pop
loop
jg
xchg
cmp
imul
adcb
xchg
js
rol
jno
pop
push
insl
cmpsb
scas
mov
cmpsb
lcall
and
mov
and
ret
jecxz
mov
inc
add
adc
lret
test
push
cli
mov
hlt
sbb
fisubrs
dec
adc
xor
aaa
pushf
lds
movsb
ret
imul
sbb
fs
lea
fidivs
mov
out
or
jg
fs
xchg
addl
ljmp
rcrb
out
data16
sub
cmpsb
inc
iret
fimull
xchg
lret
mov
daa
rcr
ss
inc
int
push
repz
add
aaa
xchg
jmp
mov
and
pop
mov
and
clc
mov
imul
mov
jmp
bound
lret
mov
jbe
pushf
popl
test
adc
movsl
mov
and
pushf
pop
rorb
insl
add
or
lret
in
sbb
xor
inc
fs
ret
inc
xchg
outsl
sbb
jge
stos
imul
add
pop
std
push
out
outsb
test
push
fildll
mov
repz
addr16
ds
mov
and
sub
xor
scas
xor
cmp
rcl
adc
pusha
popa
iret
mov
adc
dec
xchg
xchg
lret
mov
sub
sub
pop
fidivrs
push
lret
orl
dec
test
in
xchg
inc
dec
test
dec
inc
arpl
shl
adc
loope
pop
mov
mov
out
mov
and
push
scas
ret
shlb
lods
xchg
xor
rolb
cmpsl
sar
out
sub
and
inc
mov
cmp
pop
gs
mov
mov
stc
sub
insl
shlb
add
inc
cmp
mov
xorl
out
xchg
test
and
cmp
pop
sarl
jg
cld
pop
xor
jl
pop
jmp
dec
lods
jno
pop
jmp
xor
push
lcall
adc
or
lock
lahf
push
push
push
faddp
cmp
xor
xchg
jmp
dec
insl
jne
inc
inc
inc
jns
fcoms
loope
mov
lret
xor
rcr
push
and
push
lea
pop
pop
jmp
aas
mov
push
adc
stc
xchg
pop
mov
mov
sahf
add
cwtd
pop
notl
in
pop
in
or
mov
mov
outsl
mov
adc
imul
inc
and
push
xchg
faddl
mov
jp
pop
shll
loop
out
data16
das
fistpl
les
out
mov
jl
mov
pusha
ja
mov
xchg
inc
int3
inc
imul
mov
xor
adc
in
adc
sahf
mov
mov
add
iret
mov
or
pop
add
sub
adc
je
fdivrl
out
xchg
jg
les
adc
xchg
fistps
aaa
inc
mov
xchg
xchg
ficoml
mov
sti
inc
or
or
cld
cli
aad
pop
frstor
scas
and
pop
mov
repnz
xlat
decb
icebp
pop
stc
divb
cs
xor
shrb
pop
sub
rorb
and
mov
shl
pop
sbb
in
jnp
and
and
cmp
cmp
sub
mov
cmpsb
pop
iret
gs
adc
lds
jge
stc
into
lods
jnp
lcall
scas
jmp
enter
dec
push
or
mov
and
adc
sub
shr
cmpsl
lcall
ljmp
jae
adc
repz
clc
scas
cmp
sub
add
inc
cmc
mov
sbb
mov
pop
mov
xchg
ja
sub
adc
inc
sub
int
and
stc
or
cwtl
rcrb
stos
cmc
sub
pop
dec
stc
shll
das
push
lods
xlat
aaa
mov
mov
or
sbb
pop
mov
into
addb
out
add
ret
cmc
mov
lahf
or
jns
rclb
dec
icebp
enter
jmp
cmpsb
cs
or
popa
outsl
push
mov
outsl
xchg
jno
push
pop
dec
fistpl
xchg
xchg
jo
jno
and
sbb
mov
out
std
mov
sbbl
adc
pop
jg
mov
xor
sbbl
cli
xchg
repnz
je
jae
fmuls
jnp
lods
add
jle
repnz
loop
cld
insb
mov
adc
sahf
stc
sbb
insl
scas
jbe
add
loopne
jno
aam
sbb
test
popa
dec
dec
and
sbb
add
testb
mov
dec
add
xor
pop
push
pop
lock
fs
sbb
pop
ja
mov
jnp
sarb
divl
or
pop
div
mov
push
daa
jg
mov
incb
and
lret
mov
pop
dec
je
jmp
ss
jmp
das
sbb
xor
xor
xchg
lods
ljmp
scas
popa
mov
mulb
add
lds
in
mov
fiadds
fstpl
rorb
and
es
jb
dec
jp
xor
sub
xchg
pop
sti
xchg
jl
pop
jb
or
ja
out
popa
notl
cli
orl
mov
jg
inc
mov
das
hlt
mov
repz
add
cli
scas
aaa
jne
adc
rcll
mov
and
int
push
ja
adc
lret
and
roll
xchg
push
fstps
sti
into
add
xchg
xor
push
cmpsl
fucom
mov
insb
pop
push
std
mov
scas
xchg
fcoms
cmp
test
loopne
jp
adc
pop
and
dec
inc
loop
or
jae
sarl
mov
out
sub
mov
mov
lock
sub
mov
xor
loopne
sbb
mov
repz
dec
cltd
popa
enter
push
in
push
mov
or
dec
mov
lods
out
xor
test
scas
cmp
cli
lods
test
sbb
jle
js
mov
pop
lds
mov
outsl
iret
out
movsl
movaps
dec
jo
dec
ds
pusha
sub
sti
fldt
movsl
or
xchg
cmpsl
in
sub
hlt
xchg
loope
lahf
cmc
sbb
out
lahf
push
mov
mov
fsts
mov
stos
xchg
mov
pop
add
push
push
cmc
js
xlat
int3
cli
leave
pushf
dec
jb
mov
pop
in
cltd
sub
leave
mov
ret
lret
mov
pop
test
xchg
jno
add
clc
iret
pop
arpl
sbb
pusha
inc
xchg
mov
loope
call
xor
inc
imul
stos
mov
or
loopne
fnstcw
mov
or
pop
test
or
push
mov
in
fldt
in
clc
in
sbb
stos
or
pop
xlat
loope
mov
outsl
push
pop
sbb
adc
out
push
aam
filds
scas
jnp
test
sub
inc
mov
inc
xchg
cld
pop
pop
push
idivl
fsubrs
sub
and
inc
imul
sahf
lahf
test
arpl
mov
xor
cmpsb
aam
arpl
pop
aam
int3
loop
mov
push
push
push
jno
xchg
insl
lret
ljmp
sub
push
add
or
stos
xchg
pop
mov
outsb
and
mov
adc
fld
pop
test
push
les
aad
cmp
jmp
sbb
dec
or
hlt
pushf
lock
sarb
lods
and
xchg
arpl
cs
fsubrl
xchg
jmp
sub
sbb
out
mov
sub
dec
loope
adc
sub
pop
sub
jmp
push
xchg
mov
jns
inc
mov
aad
clc
mov
jmp
icebp
shll
and
sbb
jae
dec
and
dec
xor
movsb
in
in
adc
pop
cmp
pop
out
or
jecxz
sub
lods
mov
cwtl
or
sub
fs
iret
sub
stos
add
fldl
adc
jg
insb
fs
mov
inc
mov
xchg
leave
xor
stos
popa
scas
sub
leave
jno
in
dec
inc
test
fnstsw
cli
or
mov
rcrb
inc
je
gs
in
loopne
popf
jmp
mov
test
mov
xchg
lods
mov
xor
jo
dec
inc
mov
mov
push
cli
xor
in
outsl
xchg
ret
cmp
lds
in
pop
push
adc
aas
hlt
jne
je
sbb
xor
pop
mov
es
inc
lret
xchg
mov
pop
jnp
fcompl
insl
pop
xor
mov
sbb
mov
add
cwtl
mov
and
cmp
dec
inc
sub
sub
pushf
nop
cmp
or
clc
or
xchg
nop
iret
fidivs
sub
mov
mov
pop
sub
lods
shrb
sbb
stc
lock
xchg
mov
fsubrs
mov
test
pop
mov
jo
es
inc
insl
push
pusha
xchg
inc
mov
or
fistps
filds
mov
imul
out
and
pop
mov
pop
sbb
push
scas
repz
in
imul
cltd
inc
xchg
in
test
inc
pop
push
enter
test
or
jbe
add
pop
lret
std
jo
shl
xchg
sub
jnp
xor
mov
imul
pop
fidivs
add
cmp
sahf
cld
cmp
lret
les
ljmp
in
jle
mov
add
dec
or
mov
dec
mov
int
aas
xor
xor
mov
inc
hlt
ror
fidivrs
xlat
adc
add
into
lret
xor
cmp
cwtl
or
add
sbb
jns
and
rcrl
and
lcall
insl
shll
or
or
leave
lds
add
inc
jle
fwait
push
imul
cld
inc
jl
cmpsb
sub
cmp
jo
mov
inc
mov
xor
gs
pushf
push
mov
xchg
les
pop
push
loop
pop
pusha
jmp
inc
mov
shrl
sub
jo
inc
daa
dec
jae
adc
test
pop
loop
iret
or
xor
cmp
jle
cs
sbb
fcompl
xlat
mov
or
cmpsl
in
fcomps
lea
movsb
xchg
jg
loopne
test
cltd
cld
out
mov
mov
adc
or
jl
and
dec
or
adc
add
call
dec
ss
jle
push
and
in
sbb
or
imul
xchg
test
es
bound
cmc
repnz
jge
sub
add
call
popf
cld
fistps
stos
loopne
mov
jg
mov
or
jge
jmp
cmp
dec
sbb
mov
mov
je
push
es
sbb
movsb
xor
int
cmp
cs
xor
sub
mov
pop
loopne
xor
sysenter
xchg
lcall
addr16
jae
lcall
sub
jno
imul
sub
fisubrs
cmp
mov
div
xchg
aaa
fwait
mov
mov
imul
add
adc
adc
jecxz
mov
or
jecxz
out
jne
mov
test
fidivs
mov
xor
and
loope
pop
inc
nop
out
jns
cmp
enter
xor
imul
jecxz
jg
xchg
test
xorl
and
jle
in
ss
pop
mov
sbb
cli
insl
cmp
addr16
test
mov
lret
mov
lret
lret
add
pop
add
mov
shrb
lret
fwait
pop
enter
scas
mov
pop
out
push
push
push
jne
inc
push
out
pop
ljmp
inc
sbb
pop
xchg
and
data16
js
xchg
repz
pop
addr16
shlb
xor
outsb
stos
daa
int
inc
push
jns
jmp
jo
addl
in
sbbb
addb
jno
mov
sub
mov
lcall
not
rcrb
inc
pop
arpl
cmp
das
jg
dec
jmp
fwait
mov
sub
mov
jbe
fwait
loop
push
bound
and
sbb
pop
test
out
scas
bnd
mov
push
lcall
cwtl
das
mov
lock
jb
and
cmp
cs
add
cmp
popa
xor
sbb
stos
add
test
inc
mov
add
jb
dec
xlat
add
leave
xchg
add
daa
adcb
mov
mov
stos
addl
jge
clc
hlt
movsb
jge
dec
and
jl
add
mov
popa
aad
dec
jne
mov
test
insb
dec
int3
fwait
mov
jge
imul
in
jl
adc
scas
cmp
ja
lret
les
push
into
repz
jle
push
mov
sub
or
cltd
mov
cmp
dec
mov
xchg
adc
jl
pop
xchg
mov
mov
add
mov
icebp
ljmp
inc
ss
jbe
lea
inc
jmp
or
and
ss
out
push
loopne
sbb
xchg
sub
inc
or
jbe
cmp
aam
cltd
xchg
and
dec
insl
in
mov
xchg
xchg
xor
and
je
dec
mov
sub
out
mov
lods
pushf
xor
xor
adc
inc
fstpt
fnstcw
jmp
xchg
dec
push
push
sub
movsl
jns
stos
push
jl
aad
das
pop
rol
test
mov
in
ret
mov
gs
hlt
sub
sub
test
inc
repz
adc
cmc
gs
incl
icebp
xchg
rcrb
in
inc
jo
mov
mov
imul
fiaddl
repz
fisubrs
inc
xchg
sbb
pop
add
into
and
cli
mov
lret
jae
inc
and
pop
daa
mov
or
int
inc
inc
pop
test
out
lret
scas
test
pop
jl
jg
xor
or
shl
adc
pop
sub
inc
arpl
mov
pop
ret
arpl
fcomi
iret
cmp
lcall
mov
pushf
loope
addr16
movsb
push
int3
jns
mov
xchg
stc
cmp
arpl
cmp
adc
adc
rcll
mov
sti
pop
lahf
dec
dec
gs
add
bnd
sub
pop
pop
inc
xchg
sbb
pop
push
xchg
loopne
add
dec
cli
push
popf
into
inc
add
xor
mov
adc
sbb
jge
js
out
loopne
pop
add
lds
or
pop
in
adc
imul
xchg
cmpsl
push
dec
dec
mov
nop
pop
sbb
fidivs
stos
inc
add
insb
repz
clc
addb
fldenv
and
or
add
subb
xchg
mov
dec
push
les
sub
int3
mov
fmuls
sbb
push
dec
or
xor
mull
pusha
jl
push
gs
sub
rcr
jge
mov
scas
mov
jge
xor
iret
adc
cmp
fucom
shrb
add
sbb
and
jns
adc
int3
mov
dec
repnz
lret
ret
sub
pushf
mov
inc
inc
subb
and
movsl
mov
mov
sub
shl
int3
sub
xor
mov
aad
mov
jno
mov
mov
int
push
jecxz
fdivrl
addr16
cmpsl
xchg
repz
dec
lret
xchg
mov
arpl
ds
cli
dec
or
mov
hlt
mov
jl
lock
rcr
sbb
sahf
jle
cltd
xchg
sub
and
dec
faddl
or
or
rcl
imul
dec
sbb
and
cmpsl
xchg
sbb
lea
in
or
inc
popf
dec
jo
cmp
repz
cmc
sub
inc
mov
rclb
gs
sub
movsb
pop
cmp
ljmp
mov
xor
cmpsb
dec
pop
sub
fistps
test
fstpt
xor
popf
push
xchg
scas
sub
stos
jnp
and
mov
inc
lret
sarb
mov
sahf
xlat
lcall
je
scas
dec
xchg
insl
dec
fwait
push
into
gs
ljmp
mov
repnz
mov
aad
mov
aad
xchg
test
or
inc
xchg
cmp
scas
adc
add
ret
cmp
lods
dec
call
inc
add
fs
cmp
lock
push
dec
ljmp
sub
hlt
test
out
insb
mov
xor
insl
inc
imul
out
pop
dec
pushf
inc
mov
ds
inc
leave
inc
test
fdiv
shlb
or
lret
insb
jg
and
and
shl
scas
mov
les
mov
negl
imul
xchg
sbb
add
int3
xchg
roll
add
jmp
pop
fstpl
inc
mov
pop
jl
mov
aas
inc
ja
add
pop
jmp
jmp
jp
iret
jg
hlt
push
test
push
mov
sbb
xchg
sbb
mov
jge
adc
imul
sub
inc
add
cli
mov
dec
cmp
mov
fcomi
out
dec
dec
int
sbb
cmpsb
adc
mov
outsb
repz
mov
mov
add
mov
pop
roll
cmpsb
sbb
pushw
xor
cmp
clc
inc
push
push
cli
rcr
inc
mov
mov
in
pop
and
test
das
lods
subl
sub
cmpsl
fwait
add
arpl
out
popf
adc
cmp
enter
pop
pusha
mov
mov
xor
subl
xor
xor
or
pop
mov
into
roll
sbb
fsts
shl
movsl
mov
inc
inc
rclb
in
inc
adc
adc
leave
movd
lret
aad
test
lahf
arpl
cmc
daa
imul
pop
test
cmp
lret
dec
mov
and
sarl
push
and
or
mov
xor
ja
ret
xchg
jns
xchg
sbb
mov
mov
incl
push
push
mov
xchg
xchg
xor
out
cmp
adc
xor
cmc
inc
cmp
stos
inc
or
or
xchg
rorl
xchg
bound
sbb
je
dec
pop
pop
and
shlb
stos
aas
push
fwait
and
ds
nop
xor
outsb
in
pop
mov
xchg
in
aas
adc
push
cwtl
mov
scas
cmp
or
andb
sbb
mov
popf
and
movsl
rcrb
jge
dec
test
clc
mov
pop
sub
add
dec
sbb
loopne
rcrb
pop
aas
lock
pop
and
pop
jbe
cmp
sahf
push
xchg
es
jae
xlat
jmp
pop
lahf
shll
xor
dec
int3
sarb
mov
mov
xor
loop
sbb
mull
inc
push
outsl
testb
fmul
jmp
xchg
pusha
inc
test
in
negl
jbe
ja
popf
adc
aas
daa
xor
movsl
sar
add
mov
mov
xor
dec
jns
enter
sub
pushw
mov
leave
or
pop
adc
adc
out
dec
sti
sbb
sti
or
std
pop
adc
dec
xor
add
mov
filds
inc
hlt
dec
or
sub
insl
push
adc
nop
mov
add
movsb
movsl
mov
mov
fcmove
pop
inc
adc
dec
pop
push
divl
popf
int3
sub
lret
push
test
mov
push
outsb
pushf
cmp
fisttpll
dec
lret
and
dec
or
push
dec
mov
mov
decl
out
fldenv
dec
mov
jle
ss
pop
or
out
xchg
aad
xchg
push
stos
movsb
leave
lds
sub
jg
shr
pop
out
out
repnz
or
out
cmpb
xchg
cmpsl
shl
sub
shl
sbb
sbb
add
mov
sti
xor
mov
test
pop
popa
ficomps
pop
mov
or
sbb
js
bswap
mov
xchg
hlt
and
inc
xchg
pop
adc
stc
sbb
mov
hlt
divb
dec
insl
cmc
lcall
push
add
sti
xor
movsl
push
dec
arpl
je
loop
push
sub
sti
inc
jnp
movsb
call
ret
adc
mov
xor
pop
inc
sahf
inc
movsb
movsl
faddl
mov
push
cwtl
or
dec
inc
movsb
cltd
pop
addb
jmp
in
icebp
sbb
cmp
push
push
cmp
add
sti
fisttpl
xrelease
es
andb
pop
sbb
or
mov
sbb
and
xor
movsb
sub
dec
pop
adc
mov
cmp
lcall
xchg
add
ja
and
cwtl
rcrb
daa
and
out
adc
sub
sbb
scas
sbb
popa
aaa
push
fstpt
and
or
imul
ljmp
and
scas
xchg
mov
stos
jmp
pop
outsl
push
xchg
js
jmp
mov
jmp
sub
push
hlt
cld
lock
nop
add
xor
imul
push
out
add
popf
aaa
pusha
inc
movsb
sub
loope
fcomi
subb
ja
les
cmp
mov
xor
cmp
sar
ret
and
sbb
pop
inc
scas
sbb
iret
adc
push
pusha
popa
xor
and
movsl
imul
xor
mov
test
dec
cmp
ja
jge
int3
sbb
inc
inc
mov
dec
cmpsl
push
adc
push
das
rcll
xor
pop
aam
cmp
jae
mov
insb
lods
mov
and
xchg
shll
and
adc
jl
les
dec
dec
or
sub
mov
xor
fldenv
mov
inc
push
aad
mov
test
adc
fldl
add
mov
lret
ss
inc
sub
sub
add
fisttps
jbe
dec
mov
mov
iret
arpl
pusha
jp
adc
test
outsb
jmp
xchg
mov
jbe
pop
pop
mov
notb
or
pop
dec
jo
mov
lret
mov
xor
orb
dec
adc
mov
add
xchg
inc
or
cmc
push
adc
jne
inc
cmp
pop
ljmp
es
inc
jle
and
push
sub
dec
xchg
inc
pop
pop
pop
mov
rorl
iret
arpl
pop
mov
push
jl
hlt
pop
lods
loopne
rcrb
cld
mov
xchg
sbb
push
cmpsb
inc
fsubrl
and
adc
negb
sub
push
sti
inc
sbb
stc
testl
mov
push
decl
cmp
fistps
lock
testb
mov
mov
or
add
sub
jmp
pop
sti
mov
lock
stos
inc
dec
enter
fstl
movsb
loop
push
outsl
cmp
mov
test
xor
add
mov
dec
cmc
mov
pop
inc
lahf
sahf
jbe
fiaddl
pop
inc
jle
inc
rorl
pop
inc
mov
push
mov
aas
xchg
sub
mov
lret
jb
push
push
arpl
inc
roll
out
imul
outsb
lods
fwait
pop
cs
fnstsw
jno
aas
xor
cmp
push
cmpsb
mov
and
dec
inc
cmp
cli
mov
jne
les
cmp
rcrb
sub
xor
jg
nop
pushf
jns
lcall
mov
pop
mov
push
clc
outsl
cltd
outsb
notb
mov
out
pop
add
aad
cmpsb
dec
stos
dec
fsub
lods
push
push
sbb
sbb
or
xlat
adc
sub
sti
inc
call
clc
sub
fwait
shrd
cs
fcom
call
stc
mov
out
cmp
dec
stc
gs
testl
adc
cli
push
jno
aaa
add
inc
js
xor
aad
lcall
and
push
hlt
sarb
popa
xlat
inc
push
enter
lret
xor
xchg
add
xchg
jmp
test
popa
icebp
pop
mov
sbb
sbb
outsl
push
scas
not
fsub
int3
jno
insb
mov
clc
ja
and
xchg
add
popf
decl
pop
inc
and
push
push
das
popa
inc
cmp
xchg
cmp
test
pop
push
test
cs
xchg
std
dec
inc
sbb
out
sub
rorb
push
push
test
mov
out
mov
add
gs
and
mov
out
and
sbb
movsb
mov
bound
call
inc
jge
mov
out
imul
pushf
aam
cmp
das
xchg
and
lea
add
repnz
inc
jno
xor
loope
addl
cmp
inc
mov
fwait
pop
mov
leave
cs
mov
pushl
pop
orb
jecxz
test
mov
lods
sbb
mov
sub
push
fnstcw
stc
imul
mov
nopl
addl
dec
dec
push
cmp
dec
das
icebp
inc
and
imul
xor
mov
fcoms
jnp
mov
push
pop
lret
mov
into
adc
movsl
cli
jno
jle
das
dec
push
jns
inc
add
cli
mov
adc
sbb
negl
inc
fistl
push
mov
adc
mov
jl
loope
jge
in
and
cltd
test
mov
add
sti
mov
jl
add
adc
add
pop
xor
cmp
adc
lea
lcall
cltd
stc
xor
or
push
sub
daa
outsl
lcall
mov
test
shrb
push
jmp
push
fistps
cmp
popf
sbb
lea
xor
cmp
mov
sbb
mull
popf
mov
inc
inc
outsl
shll
dec
mov
iret
daa
xchg
aas
rcr
mov
pop
cli
mov
pop
cmp
outsb
and
adc
xor
pop
mov
fldcw
or
xor
fwait
insl
sbb
adc
mov
jmp
ret
and
call
dec
xchg
push
das
push
mov
loope
push
fstp
sub
nop
je
gs
sbb
stc
jo
leave
rorl
rorl
cld
sub
repz
test
rcrb
cmpsb
mov
sub
inc
hlt
inc
adc
lcall
adc
inc
mull
jo
xchg
add
sbb
xchg
jle
sbb
aad
inc
mov
imul
mov
sti
mov
lret
idiv
adc
and
ja
sub
mov
xor
sub
mov
lds
int
lcall
imul
jo
ss
mov
add
sub
push
mov
mov
gs
ljmp
and
mov
sub
inc
mov
jle
mov
ja
ja
out
dec
xchg
inc
in
and
push
dec
in
nop
or
loopne
or
pop
mov
jge
sbb
cld
dec
xlat
iret
aaa
sbbb
push
adc
push
sub
adc
pop
cwtl
mov
outsb
sub
dec
adc
push
sub
aaa
add
rcrl
repz
mov
mov
stos
fcmovu
jp
mov
cltd
mov
in
loopne
push
mov
call
cmp
shr
sbb
cmpsl
test
adc
rcr
das
mov
mov
mov
std
adc
push
pop
nop
or
xor
sub
mov
stc
lods
add
sti
dec
daa
push
scas
data16
movsb
add
pusha
adc
cmp
mov
push
nop
dec
and
push
push
lock
push
orb
jge
loope
dec
fadds
lea
hlt
ja
xchg
dec
xchg
mov
cwtl
pop
sbb
fxch
inc
lock
mov
inc
lret
xchg
inc
cli
fidivs
loope
xor
jno
jne
std
xchg
ret
jo
call
lcall
stos
push
push
stos
jecxz
popf
xchg
ja
adc
xchg
xchg
jno
icebp
pop
fcomip
mov
dec
mov
mov
hlt
mov
orl
fidivrs
or
aam
xchg
sbb
jle
cmc
addr16
iret
cld
cwtl
lods
mov
dec
xor
jp
test
mov
xchg
jbe
data16
movsb
mov
rol
or
js
mov
mov
stos
sub
xor
sub
into
aad
sbb
mov
inc
mov
repz
cmp
mov
dec
or
lds
sbb
mov
jmp
xchg
adc
xlat
xor
sbb
xchg
pusha
pop
mov
add
or
ret
adc
and
ljmp
out
dec
fnstenv
sarb
add
pop
arpl
faddl
mov
shr
mov
sub
rolb
mov
iret
xor
sub
sarb
jne
and
mov
lahf
xor
xor
jae
fidivrl
cld
shrb
mov
add
xorl
xchg
gs
lcall
fnstsw
sub
xchg
subl
xorl
mov
mov
pop
out
lds
loope
pop
ljmp
outsl
je
cmp
sub
stos
dec
ret
mov
outsb
or
movsb
cmpl
push
add
int
cld
push
and
sbb
inc
in
jg
dec
sub
ljmp
ds
mov
pop
and
out
gs
imul
pusha
cwtl
sbb
dec
lods
pop
lcall
xchg
mov
mov
add
movb
cs
jne
repz
cmp
or
dec
push
jno
in
or
push
pop
or
data16
jmp
mov
enter
jge
clc
cmpsl
cmc
out
mov
push
iret
stos
sub
adc
xor
lods
mov
push
cmp
in
push
or
loop
mov
js
shrl
js
leave
stos
pushf
addb
in
mov
mov
jmp
cmpsb
fidivrl
mov
sub
xchg
sub
mov
or
xchg
mov
pop
inc
icebp
or
cltd
ss
adc
push
mov
mov
icebp
pop
sbb
mov
out
das
test
xchg
shr
aaa
es
movsb
cmp
push
push
loop
adc
dec
mov
dec
call
imul
push
test
mov
dec
xchg
jae
arpl
xchg
adc
or
addl
mov
mov
xchg
xor
xor
ret
test
dec
fiadds
popfw
add
lcall
fcmovnb
movsb
cmp
mov
mov
popa
jno
cmpsl
push
inc
push
int3
xor
in
pop
adc
inc
inc
cmp
pop
xlat
scas
mov
dec
sarl
movsb
addr16
jecxz
enter
dec
or
stos
aad
xchg
popf
or
scas
push
outsb
movsb
jne
add
leave
into
pop
pop
inc
lods
cld
and
mov
mov
out
int
mov
rclb
fimuls
xor
test
or
hlt
mov
mov
lods
mov
add
push
push
lock
xchg
mov
push
pop
outsb
lcall
out
aas
and
xchg
and
xor
or
out
xchg
call
dec
cmp
adc
aas
popf
xor
jmp
push
jmp
sahf
out
ss
test
adc
in
loop
jno
test
cli
add
mov
mov
scas
incl
ljmp
sbb
loopne
push
mov
adc
mov
outsb
mov
loop
mov
inc
inc
and
jb
lods
dec
jg
add
cli
inc
gs
in
sub
xor
mov
inc
je
sarl
xor
enter
lcall
icebp
sti
daa
mov
lods
mov
mov
lcall
dec
pop
adc
ret
inc
inc
xchg
adc
jle
fstpt
pop
mov
sub
jl
or
inc
int3
aaa
mov
loope
jg
pop
xchg
int3
loop
in
scas
mov
nop
cmp
jmp
xchg
push
mov
dec
mov
movsl
or
filds
jp
scas
lcall
sbb
xor
fldenv
jo
and
mov
push
scas
loopne
in
push
jno
or
add
push
lea
vmread
jbe
jmp
js
dec
out
or
sbb
in
lods
std
mov
rorl
push
mov
push
dec
xchg
mov
fnstcw
jnp
ja
cmp
sub
bound
nop
and
std
pop
add
mov
test
das
jl
add
sbb
nop
ds
fisubrs
lea
lods
add
scas
mov
cmp
rcrl
pop
stc
shrb
ja
subb
aam
jo
rclb
lret
into
bound
sbb
hlt
stc
notb
dec
aaa
push
mov
adc
add
mov
call
das
lds
js
xor
popf
insb
push
inc
inc
mov
sub
push
push
mov
and
jg
adc
and
data16
sub
or
jbe
lahf
movsl
repz
cmpsb
xchg
scas
addr16
sahf
fistpl
add
push
mov
mov
or
int3
ja
aas
cld
sbb
arpl
or
mov
pmaxsw
jo
and
pop
faddl
sarb
ret
sbb
and
jecxz
mov
dec
sarl
out
mov
inc
repnz
push
inc
ret
in
repz
mov
ja
xor
loope
jne
and
movsb
popf
in
outsl
sahf
fsincos
jno
push
mov
push
imul
movsb
push
xchg
pop
clc
sbb
scas
adc
ret
xchg
pop
sub
shr
adc
hlt
add
jns
or
scas
mov
or
xor
shrb
or
movsb
divb
sahf
cmp
jbe
sbb
call
mov
xchg
and
ficomps
adc
xchg
xor
sbb
pop
repnz
cli
imul
push
out
mov
cltd
ficoml
mov
inc
mov
pop
inc
leave
jmp
lahf
jno
sub
sbb
bound
fs
test
jb
ror
popa
into
xchg
and
stos
lahf
or
pop
ljmp
loop
xchg
inc
mov
sbb
pop
cmp
mov
push
jle
jns
dec
inc
dec
mov
je
adc
jg
add
nop
adc
into
dec
lods
outsl
pop
mov
insb
aas
mov
mov
sbb
jb
mov
outsb
aam
fstl
sbb
lods
repnz
lock
dec
pop
or
lods
sub
rclb
sub
cld
incb
inc
mov
pop
clc
cmp
shll
jbe
push
jmp
ficomps
dec
mov
inc
in
mov
jp
shl
outsb
popa
test
and
js
bound
inc
inc
xchg
mov
stos
inc
outsl
stos
push
mov
and
loope
sbb
cmc
mov
xor
loopne
cli
push
mov
leave
mov
push
testl
gs
and
in
movsb
fdiv
insl
and
stos
fildl
shrl
cmpsb
and
mov
cmpsb
test
sub
gs
out
dec
fsts
mul
imul
loopne
enter
nop
cmp
fdivrp
repz
aam
movsb
dec
fld
ret
ds
repnz
adc
mov
xor
jno
scas
push
jg
sub
int
push
push
push
test
adc
in
nop
outsl
into
dec
rorb
jecxz
and
scas
and
not
ret
add
adc
js
in
dec
loope
dec
jle
xchg
xor
bound
shl
jge
adc
faddl
pop
xchg
neg
test
push
ret
out
lods
aad
fstl
push
dec
scas
push
fisubrs
inc
xor
push
stc
cmc
dec
lds
lds
insl
fadds
pop
sarl
outsl
sbb
movsb
in
sbb
bswap
lea
in
sbb
mov
sub
mov
add
xchg
pop
jg
imul
pop
lret
aad
in
xor
dec
lock
sbb
addr16
mov
mov
ljmp
adc
sbb
jae
adc
lcall
imul
shll
rol
sub
clc
sub
pop
jge
mov
mov
repnz
or
dec
mov
gs
mov
push
arpl
outsb
jecxz
and
repz
dec
imul
cmp
jne
shlb
push
iret
jge
xor
and
incl
addr16
loopne
xchg
push
add
sbb
insb
cltd
xor
cmp
test
ds
js
mov
push
mov
leave
pushf
sti
mov
jle
les
hlt
and
pushl
cmp
les
xchg
cmpsl
lods
out
mov
xchg
loopne
jl
sbb
sbb
loope,pt
fmuls
cmp
cs
lret
je
push
lret
addl
mov
movsb
cmpsl
sarb
icebp
cmp
call
test
rcrl
xchg
in
jmp
push
push
ret
inc
int3
pop
fbld
std
sbb
mov
push
int
ljmp
data16
pop
and
inc
push
add
and
adc
xor
dec
lods
or
outsb
push
negb
test
pop
mov
xchg
addr16
out
out
cmp
lcall
pop
nop
lods
sub
inc
sbb
xor
xor
ja
pop
leave
sub
mov
xchg
pop
aas
push
mov
insl
or
xor
mov
pmuludq
in
rolb
repnz
push
mov
stos
lods
cwtl
and
push
jl
fwait
lcall
push
sarb
mov
mov
sbb
adc
daa
ret
adc
cmpb
sub
clc
movsl
pop
mov
ds
cwtl
aaa
mov
push
es
icebp
decl
jo
mov
out
xchg
int
cli
jo
addr16
idivl
push
ds
scas
gs
jp
jbe
loope
push
mov
xchg
imul
mov
xchg
xor
xchg
in
lahf
mov
loope
enter
cmp
inc
outsb
xor
fldenv
add
sbb
jmp
out
mov
lods
push
mov
daa
icebp
push
aad
adc
repz
push
xchg
xchg
bound
test
xor
inc
mov
or
xchg
testb
jg
push
adc
int3
and
push
pop
repz
arpl
ret
mov
dec
fsubrs
out
ja
inc
mul
rcrb
sar
add
push
iret
sub
mov
stos
std
mov
add
fsubl
mov
stc
mov
lods
sub
out
nop
lods
imull
add
jmp
arpl
xlat
lea
xchg
jbe
push
or
xor
pop
mov
inc
sbb
or
sub
lahf
daa
insb
lods
sub
push
xor
into
sub
add
mov
xor
lock
push
mov
fstl
push
xchg
sti
xchg
roll
ljmp
push
and
inc
jbe
leave
enter
out
popf
das
rcpps
outsb
mov
loop
push
push
stc
xchg
or
xchg
mov
data16
icebp
and
leave
sbb
mov
dec
lds
loop
fwait
cli
enter
xor
sbb
sbb
pop
xorl
and
mov
outsl
add
fadd
aaa
imul
addb
cmp
mov
push
flds
inc
dec
and
call
inc
inc
push
outsb
pushl
or
sbb
aam
sahf
jle,pt
rol
into
pusha
idivl
ljmp
les
dec
call
sahf
jae
movsl
inc
scas
incb
pop
icebp
mov
sub
loop
orl
iret
add
std
mov
jo
lret
sbb
inc
cmp
movsl
cmc
mov
shll
xchg
mov
add
and
and
add
sub
or
xor
jbe
mov
cmc
push
xchg
lods
mov
stos
pop
sbb
cmp
pop
out
jns
or
call
and
jge
pusha
mov
in
mov
add
in
outsb
xor
dec
add
mov
jp
mov
mov
dec
push
push
div
int3
xchg
mov
push
aaa
dec
mov
out
shrb
rcl
shlb
jle
dec
dec
imul
jg
loopne
into
cmp
xchg
shrl
int3
add
lret
and
rclb
add
test
or
cmp
push
mov
loop
cmp
add
adc
movsb
sbb
stos
mov
in
xor
jl
in
fs
adc
pop
or
inc
ficoms
lret
lahf
imul
rolb
mov
pop
mov
loope
icebp
xchg
dec
xchg
sahf
inc
mov
push
les
fucomi
mov
xchg
jno
lods
push
or
fidivs
testl
nop
adc
cmpsb
test
cmpsl
fnstsw
popa
sub
cmp
inc
sub
push
lahf
icebp
sub
mov
push
pushf
sbb
mov
cmp
lods
jle
fsub
add
jno
lds
shll
pop
ja
xchg
sahf
scas
sub
cmp
in
scas
in
das
sub
cmp
adc
in
lret
nop
adc
xchg
push
lret
jb
insb
mov
mov
rorb
test
int3
or
add
mov
mov
aam
fcoml
sbb
push
cmp
xchg
inc
push
lret
mov
add
stos
mov
pop
loope
rorl
cmpsl
fdivrl
fiadds
aas
loope
movsl
fists
stc
mov
mov
sub
push
inc
sbb
rcll
outsb
es
in
inc
inc
add
sub
movsl
addl
scas
push
pop
adc
or
pusha
mov
in
dec
decl
sti
sahf
mov
or
scas
test
cwtl
bound
test
rdpmc
sahf
nop
out
int
pop
fstpl
cs
je
cmpsl
iret
mov
sub
inc
pop
scas
xchg
lods
loopne
jb
inc
sbb
sarb
pop
cmc
scas
popa
xor
sbb
inc
nop
dec
mov
jbe
loope
lock
test
inc
sub
or
pop
push
and
setae
inc
xchg
mov
dec
sub
xchg
xchg
push
jmp
shlb
push
sbb
and
cltd
ljmp
mov
sar
dec
inc
sbb
and
mov
push
stc
hlt
into
add
enter
cmpb
outsb
or
sub
testl
sub
int3
ja
and
dec
jp
orl
pop
adc
jnp
clc
dec
xchg
div
cld
mov
jecxz
add
shrl
ljmp
inc
rcrl
xor
daa
pop
cwtl
adc
psubsw
mov
lahf
cli
cltd
js
push
add
lock
inc
pop
sbb
pop
call
mov
and
and
xlat
insb
movsl
jg
fisubrs
je
sbbl
gs
jno
lret
mov
xor
pop
push
imul
sub
cmc
das
loop
inc
daa
push
sarb
dec
xchg
mov
xchg
loop
pop
jne
je
xor
jnp
adc
inc
mov
into
or
lahf
and
shl
mov
cmp
test
pop
jbe
out
lods
lahf
js
mov
clc
ds
sti
mov
mov
adc
out
xchg
pushf
cmp
cld
jmp
push
jle
mov
jbe
pop
pop
ret
cli
add
test
in
sbb
xlat
stos
dec
and
ret
mov
andl
int
lret
and
dec
jg
and
sbb
inc
fnstenv
popf
ror
jle
lret
pop
mov
jo
pop
mov
fistpll
inc
inc
cmpsl
data16
out
mov
stos
jg
xor
test
movhps
pop
sbb
push
mov
movsl
cmp
gs
das
lods
pop
cmp
sbb
fadds
or
or
add
inc
sbb
cmc
mov
xchg
hlt
sti
aaa
stos
fucomi
jmp
mov
fldl
jmp
mov
mov
test
sub
sub
adc
popf
inc
clc
in
cld
pusha
ljmp
mov
arpl
repz
xchg
arpl
andl
into
xor
add
sbb
mov
addr16
mov
pop
fcom
adc
sbb
sbb
stc
xchg
pop
fistpll
leave
jmp
cmp
pop
cmp
sbb
push
lcall
scas
pop
outsl
push
add
mov
jmp
lods
stos
js
sbb
or
in
mov
in
insb
add
mov
jmp
mov
jae
orl
sbb
adc
cmp
jge
pop
sbb
ficompl
in
shll
andl
pusha
pop
mov
repz
fs
dec
cli
xor
add
cli
or
mov
stos
cmc
xchg
js
sarl
xchg
call
test
jo
incb
ficoms
push
adc
mov
adcl
dec
xor
int
leave
mov
add
in
cmp
and
rcl
cli
jnp
shl
dec
xchg
dec
inc
in
mov
jecxz
insb
out
adc
add
sub
cmp
aam
inc
add
dec
outsb
movsb
xchg
adc
mov
xor
mov
push
jmp
jge
movsl
xor
out
test
add
sahf
in
xchg
unpcklps
xchg
sub
test
cmpsb
pop
push
stc
pop
cmpsb
push
and
sbb
out
xchg
cwtl
daa
lahf
ror
loop
data16
xor
loopne
jp
out
sbb
adc
sahf
fdivrs
je
hlt
xchg
ror
pop
sbb
mov
ja
pusha
insb
jecxz
pop
lea
enter
bnd
jnp
or
and
and
ljmp
xchg
mov
scas
cli
pop
cld
mov
stc
movsb
inc
adc
sbb
push
icebp
test
sbb
ss
pop
dec
incb
scas
rol
fldenv
fisubs
loopne
push
sbb
adc
testb
xchg
pop
out
add
rcrb
outsb
inc
aaa
aas
add
inc
insb
adc
cwtl
adc
push
loop
xor
mov
sbb
out
out
cmp
addr16
into
addr16
sub
or
dec
pop
outsl
push
push
inc
pop
std
sbb
and
sub
add
mov
adc
scas
pop
xlat
xlat
jnp
and
jg
into
mov
adc
sub
popf
jae
mov
adc
sti
dec
pop
imul
clc
out
push
andb
test
adc
mov
loop
mov
js
dec
stos
ret
jb
mov
sbbl
push
movsb
outsl
cmp
xchg
xor
stos
je
pop
mov
push
sub
and
outsb
jns
in
loopne
sbb
inc
or
pop
shlb
inc
and
dec
cmpb
adc
dec
xchg
sbb
in
cmpl
cmpsb
into
into
stos
or
orl
inc
pop
ret
jmp
loop
mov
stos
add
push
dec
lahf
out
scas
push
or
push
pop
inc
push
negl
sub
aaa
outsb
mov
push
add
test
outsl
jns
adc
sarb
scas
inc
das
cmp
inc
xor
dec
cmp
das
sbb
push
cmp
pop
pop
daa
mov
jnp
cltd
or
or
lret
dec
fs
mov
loopne
or
jge
mov
shl
sub
fnstsw
xchg
push
ret
jb
adc
outsb
jne
lock
sbb
mov
ss
imul
clc
dec
cltd
loopne
stos
cmp
addr16
xchg
lock
loop
lods
mov
sbb
scas
or
lds
jno
jecxz
cmp
add
hlt
pop
test
test
cmpb
rorl
gs
pop
mov
sbb
lods
clc
mov
pop
fs
mov
pop
dec
sub
lea
cmc
push
cwtl
enter
dec
mov
jecxz
les
inc
fwait
mov
pop
mov
iret
std
inc
xor
pushf
out
mov
cwtl
rclb
in
mov
pop
pop
jno
sbb
mov
enter
aad
arpl
or
std
push
data16
add
je
push
jnp
xor
dec
xchg
xchg
pop
sub
in
jb
jo
popf
or
test
enter
adc
mov
push
sub
adc
xchg
push
inc
add
sub
scas
bound
jb
addr16
jo
dec
ret
daa
mov
push
jo
push
jge
in
sub
jl
inc
sbb
bound
add
mov
cmp
repnz
fidivs
pop
ror
xchg
mov
sbb
imul
mov
fsubrs
and
push
repz
call
fcoms
fisubl
xchg
jmp
xor
dec
sub
push
imul
mov
mov
pushw
mov
mov
stc
dec
iret
push
std
lds
scas
cmp
jno
mov
pop
mov
mov
xchg
call
out
test
mov
add
lahf
and
pop
jge
dec
cld
and
mov
daa
ds
rcr
int3
jb
pop
push
and
in
sub
ss
and
fldenv
adc
jge
jne
pop
adc
ror
lods
test
sbb
pop
mov
out
and
push
xchg
inc
adc
out
fsubs
popf
aad
or
push
ds
out
xchg
add
mov
sbb
ljmp
js
dec
loop
jbe
jmp
int3
test
cltd
mov
sbb
push
pop
adc
test
and
sbb
or
cmp
sbb
cli
mov
jecxz
ficoml
in
out
xchg
mov
enter
lret
insl
push
sbb
ret
icebp
loopne
and
mov
pushf
xchg
cmp
xchg
xchg
mov
test
push
shll
je
rcr
dec
sbb
xchg
pop
ss
pop
cmp
cmp
popa
cld
fdiv
ret
sub
mov
negb
push
jo
rcrl
inc
test
leave
std
addr16
push
fnsave
push
xchg
cmc
mov
aas
mov
sahf
push
pand
rorl
test
sub
sub
lods
dec
cld
push
pop
lods
ss
add
fyl2xp1
adc
insb
sbb
jnp
std
lcall
xor
add
aas
mov
test
out
or
sub
pop
xor
jl
inc
insl
into
lahf
nop
inc
inc
imul
rorb
loopne
imul
dec
jmp
add
movsl
inc
adc
adc
dec
push
pop
shrl
repz
xchg
push
cmp
scas
scas
mov
fwait
repnz
push
scas
clc
sub
stos
addl
cmovle
sub
jae
xchg
or
inc
and
mov
xchg
xor
add
inc
mov
add
les
fisttpl
cmpsb
lcall
push
repz
and
push
pop
nop
dec
inc
push
imul
add
pop
pop
lods
cmp
fcomps
xor
mov
sti
jmp
fisttpll
loopne
mov
xor
stos
cmpsb
sarl
cmp
outsb
add
jbe
mov
xchg
sub
push
lock
sbb
dec
shrl
roll
or
fldt
das
pop
sub
ja
jmp
mov
jb
jb
push
push
push
aad
adcl
movl
inc
mov
push
sbb
test
gs
dec
pop
cmpsb
mov
sub
int
jbe
jbe
xchg
push
sbb
jmp
dec
push
imul
pop
cmp
cmp
inc
js
test
fiadds
cmp
roll
pop
nop
xchg
xchg
andl
loope
jmp
and
aaa
ficompl
mov
stos
jge
cwtl
insb
insb
ffreep
jmp
les
leave
xchg
xchg
xor
int3
jns
pushf
jge
lds
pop
cltd
pminub
pop
add
popa
pop
out
cmc
dec
pop
sbb
jbe
pop
lret
roll
push
cmp
inc
jg
inc
dec
or
and
lret
add
imul
arpl
dec
xor
scas
int
pop
xor
arpl
idivl
filds
enter
test
sub
fistpl
sub
adc
jb
xor
cltd
lret
pop
cwtl
ficomps
mov
decb
and
aaa
sbb
cld
test
sbb
xchg
ljmp
xchg
mov
sub
pop
or
inc
sti
imul
or
mov
dec
pushf
cmp
mov
mov
jno
fmul
enter
das
push
jg
insl
or
dec
stos
add
scas
push
leave
aam
arpl
inc
fadds
jne
sub
arpl
jl
adc
roll
push
stos
mov
mov
xor
sahf
jo
je
inc
push
sub
mov
dec
ss
aam
jp
inc
jmp
dec
out
test
or
xchg
add
ds
in
sub
or
pop
test
mov
enter
lea
repz
push
xchg
mov
jle
dec
adc
xor
push
sub
push
jg
mov
pop
jl
filds
sahf
rorl
xor
shlb
lret
xorl
outsl
das
fadd
jge
fdivs
jp
jnp
daa
inc
pusha
mov
rolb
adc
in
sub
pop
pop
pop
dec
jmp
cs
popa
es
in
in
adc
sbb
das
fucom
sahf
ret
std
dec
sar
lods
sbb
shlb
push
addr16
mov
add
jp
xlat
data16
in
xchg
jns
sarl
fwait
xor
pop
aam
test
mov
arpl
stos
repz
xchg
push
and
insb
or
nop
dec
aaa
mov
loopne
and
fstl
mov
repz
or
jbe
or
mov
arpl
push
lret
jmp
sub
add
lods
std
hlt
mov
popa
clc
repnz
cmpsl
jo
jne
cmc
fsubl
push
jg
aas
mov
sub
ficoms
mov
adc
push
outsb
jmp
sbb
adc
imul
daa
and
adc
and
sub
clc
push
xor
sahf
cld
test
test
jb
sti
ret
lock
xrstor
mov
cld
fldenv
aam
and
in
addr16
add
adcb
mov
insl
pop
stos
or
mov
mov
cmpsb
jp
pop
test
mov
lret
add
stos
ljmp
pushf
jne
xor
cmpsl
int
push
shll
pop
out
xchg
in
test
mov
jno
add
mov
mov
mov
fdivrl
aaa
inc
mov
add
inc
loopne
cmp
mov
into
or
ret
jno
inc
cmpsl
add
inc
mov
pushf
xor
ja
daa
jb
incb
rcrb
mov
push
in
cltd
pop
ja
pop
stos
sub
xchg
pop
and
fstpt
mov
icebp
and
cwtl
mov
push
clc
imul
xor
push
inc
lret
mov
jge
adcl
cmp
or
test
clc
mov
mov
cmp
mov
movsb
jae
inc
movsl
shl
in
repz
jbe
push
mov
std
call
mov
push
je
xor
test
sub
rorl
outsb
outsb
cli
lret
sub
mov
imul
rorl
aas
dec
fdiv
mov
mov
sub
lcall
test
dec
inc
sbb
and
rclb
lock
mov
lods
aas
in
mov
xor
sub
movsl
jo
sub
test
push
and
xchg
hlt
fwait
loope
test
fisttpll
popa
jge
dec
mov
xor
cmpsb
mov
test
or
daa
in
xor
in
dec
mov
cmp
push
push
out
insw
jne
mov
mov
arpl
fwait
push
cmp
dec
and
aaa
jne
jo
mov
decb
cmpsl
xchg
xchg
jl
hlt
adc
addb
or
fwait
push
jno
jecxz
push
mov
xchg
sub
sbb
loope
rcrl
push
in
fdivl
mov
fdiv
push
add
pop
lahf
mov
inc
lods
and
cmp
or
stos
push
pop
out
loope
sub
jg
adc
mov
bound
leave
push
mov
ss
xlat
cmp
shrb
imul
stos
xlat
sbbl
in
jmp
mov
dec
mov
and
jle
xchg
popf
xchg
sub
ret
flds
outsl
fcmovnu
cwtl
in
xor
addl
or
sbb
or
dec
out
sbb
inc
cmp
sub
ja
and
pop
fnstenv
mov
lahf
push
movsl
dec
daa
in
fbld
cmp
lahf
mov
lock
add
push
jmp
add
add
fidivl
imulb
mov
xor
decb
mov
imul
scas
in
int
and
dec
fs
mov
nop
outsl
sahf
inc
and
or
or
jl
lds
xchg
add
dec
loop
jbe
outsb
add
in
cli
jge
mov
cwtl
dec
imul
mov
xlat
ljmp
addr16
lock
mov
sti
add
cmpb
mov
in
loope
sub
negl
pop
push
mov
xchg
cwtl
xchg
cmp
dec
imul
push
cmp
repnz
pop
mov
sbb
mov
ror
mov
js
clc
aam
mov
ret
ret
shll
sbb
mov
fcmove
mov
or
fidivrs
jbe
dec
xor
add
sbb
inc
popa
sub
inc
aaa
mov
push
dec
xor
popf
hlt
add
xchg
das
scas
idivb
xchg
mov
mov
and
scas
and
pop
mov
and
push
leave
inc
jbe
xchg
lret
lret
xor
std
rcrb
divb
sub
pushf
adc
or
and
outsb
jmp
lock
xchg
push
int
xchg
sub
sbb
xor
popf
ret
and
mov
or
push
sub
dec
cmp
cmp
jl
ljmp
xchg
ja
mov
cmc
xchg
int3
inc
push
push
adc
mov
jle
xchg
imul
lods
test
inc
adc
cld
aad
test
mov
ret
iret
movsb
jno
inc
push
enter
sbb
xor
jg
mov
sarl
popf
mov
or
clc
out
repz
adc
add
lret
lock
iret
out
pop
mov
and
fmulp
lahf
mov
sbb
inc
test
stos
rorb
movsl
mov
jle
jmp
mov
mov
pop
stos
ror
jnp
das
inc
dec
mov
dec
mov
jns
dec
lock
call
jns
inc
pop
ljmp
je
mov
sub
test
push
xor
xlat
mov
jmp
insb
daa
pop
adc
jae
mov
adc
roll
push
inc
ljmp
aaa
pop
aam
pusha
push
test
std
adc
mov
adc
lcall
iret
test
imul
into
sbb
outsl
dec
loopne
cmp
mov
cwtl
fwait
lods
sbb
lcall
mov
fxch
mov
rolb
icebp
addr16
lahf
loop
into
cmp
clc
cmpsb
jb
popl
inc
std
lock
outsb
sub
jmp
in
add
enter
xchg
xchg
adc
dec
and
scas
sbb
aaa
es
pushf
aam
push
stc
fistps
out
iret
pushf
loopne
sub
shlb
iret
mov
mov
cwtl
push
fildl
jge
loopne
dec
cmpsb
xchg
aad
aam
push
subb
inc
add
rolb
fwait
push
aam
jo
cmp
jbe
mov
das
push
loope
adc
out
adc
pushf
ljmp
mov
xor
popa
sbb
out
jae
cmp
js
mov
test
sbb
jge
pop
je
adcb
mov
lea
outsb
in
cwtl
inc
incl
sbb
arpl
pop
adc
cli
pop
loope
movsb
xlat
ret
stc
les
cltd
pop
es
push
cmp
repz
mov
mov
imul
lods
xchg
ret
and
xchg
orl
cmp
dec
xor
test
and
fwait
mov
nop
mov
jns
jo
push
add
insl
outsl
ret
sub
nop
xor
jb
cmp
out
es
lret
sbb
push
cltd
stos
xor
ret
negb
cmp
cmp
jmp
repnz
xor
mov
fdivp
jae
cmp
dec
mov
int
push
push
test
sub
loope
int3
ss
hlt
jnp
movl
cwtl
mov
lds
bound
fs
push
push
inc
push
push
xchg
lahf
stos
jae
xchg
and
clc
shll
sub
pop
and
and
push
adc
jle
mov
jge
xchg
out
arpl
jae
inc
pop
jns
aaa
icebp
sbb
ret
stos
jl
inc
aas
mov
lods
stc
fcomps
mov
into
pop
and
outsl
jge
mov
mov
js
mov
mov
push
dec
fucomip
js
loopne
cmp
lods
pop
lods
ret
pop
sub
cmpsl
mov
dec
jnp
xor
xchg
jle
bound
mov
xchg
leave
mov
xlat
pop
jp
in
push
aam
decl
flds
xchg
lock
shll
push
dec
inc
stos
mov
js
fdiv
mov
pop
aam
insl
mov
mov
inc
mov
sub
adc
xchg
adc
adc
inc
pop
sbbl
xchg
dec
xor
add
mov
add
push
bound
loop
or
enter
push
cmp
sub
jp
lret
mov
sbb
cmp
dec
lds
popa
sub
outsb
lods
daa
xchg
cmpsb
or
loopne
sub
xchg
or
cld
cmp
rcrl
push
test
insl
mov
sbb
xchg
pop
cld
ret
cmp
mov
mov
mov
mov
mov
sbb
mov
cmpsl
ficoms
pop
sub
lods
les
ljmp
ljmp
mov
loop
movsb
scas
pop
xor
mov
sbb
xor
out
das
sbb
push
xchg
adc
repnz
sti
adc
jecxz
mov
inc
xor
loope
aad
mov
repz
mov
jg
sbb
ret
or
pop
mov
pop
push
mov
fwait
mov
inc
sub
xchg
jno
cmp
aaa
mov
int
iret
cmp
leave
nop
dec
jae
mov
push
decl
dec
push
popa
sbb
dec
pop
mov
imul
clc
sbb
cmpb
jne
lock
loopne
hlt
sahf
loopne
add
fcomps
ret
fnsave
xchg
cmp
aas
sbbl
inc
push
ja
fs
adc
jnp
nop
hlt
mov
jg
out
cld
mov
dec
add
lds
mov
xor
ss
addr16
adc
ljmp
lods
mov
jns
mov
mov
cmp
js
sub
iret
and
add
jne
ret
movsb
pushf
add
test
scas
aad
ret
jbe
pop
jp
push
call
push
sbbl
xor
jns
aam
mov
dec
stc
add
repz
fisubs
loop
and
rorl
sub
sti
stc
lsl
adc
push
xchg
fcoml
xor
sbb
mov
insb
jae
mov
arpl
popf
jns
nop
lcall
aaa
aaa
xchg
es
pop
add
and
mov
mov
sbb
mov
es
int3
cmp
pop
sbb
mov
fidivl
sub
mov
ret
push
pop
repz
mov
push
xorb
in
mov
push
xchg
jl
scas
adc
inc
lods
xor
jne
es
dec
in
andb
cmpsl
pop
push
xor
mov
testb
in
mov
stos
aad
mov
xchg
jp
insl
nop
dec
pusha
cwtl
out
aas
jmp
adc
jmp
xchg
bound
jne
or
outsl
push
shll
mov
jmp
sti
push
adc
dec
jl
adc
mov
shll
xlat
call
ds
mov
in
nop
sahf
xchg
dec
fwait
jb
or
inc
into
and
inc
mov
inc
jge
das
int
lods
fwait
push
jno
cmp
pop
cmp
cmpsb
pop
jge
dec
mov
mov
or
fcompl
loop
lahf
jo
push
and
add
cmc
lahf
inc
lcall
pop
jmp
inc
shl
or
mov
repz
mov
push
xchg
insl
out
sub
pop
add
mov
add
movsl
icebp
sub
in
cmp
outsl
jle
out
outsb
outsb
scas
addr16
sub
popl
mov
pop
rolb
xlat
cld
pop
sbb
mov
xchg
pop
add
cmp
shlb
data16
movsl
ja
enter
lcall
je
pop
xor
jl
mov
sbb
push
mov
sbb
sub
daa
cltd
out
mov
push
jge
sub
mov
pop
call
cld
mov
pop
js
stos
adc
in
shlb
sub
pop
xchg
mov
les
lds
mov
pop
test
shrl
add
jle
fptan
jno
mov
sbb
or
inc
mov
pop
cmp
push
mov
insl
imul
sub
rorl
ret
imul
sbb
dec
add
mov
and
ror
sub
fsts
les
ret
push
mov
push
mov
mov
arpl
adc
scas
ret
lret
aad
dec
leave
xor
out
sbb
pop
sbbl
xchg
lods
sub
fisttps
pop
dec
inc
cmp
adc
lcall
jnp
scas
icebp
sbb
lea
jl
loopne
decb
pop
pop
mov
mov
pop
stc
mov
test
subl
les
aas
push
sub
jp
push
sub
cmp
cmp
xor
push
pop
or
or
mov
xchg
xor
aaa
add
cmp
orl
pop
shl
shl
lods
and
cmpl
cmp
test
mov
inc
xchg
lcall
ljmp
aad
jnp,pt
sbb
cltd
xor
push
imul
push
xchg
mov
sub
and
push
rcrl
addr16
jae
mov
leave
hlt
mov
movsb
cmp
lea
pop
daa
jle
lret
orb
shll
sub
stos
jo
jb
add
repnz
and
pop
adc
push
jmp
adc
out
jno
xchg
cmpsb
loope
movsb
ret
inc
bound
cld
nop
leave
daa
mov
movl
data16
cltd
mov
dec
mov
pop
ljmp
out
xor
cmp
mov
lds
mov
lock
mov
cmpsl
cs
push
inc
lcall
xor
test
mov
inc
imul
mov
sub
iret
out
push
dec
jno,pt
sbbl
cli
mov
test
cmp
xchg
stos
pop
xchg
and
mov
ret
mov
fxch
es
inc
repnz
sbb
push
neg
push
mov
lods
mov
loope
push
add
cmpsl
sbb
icebp
inc
popf
jp
xchg
jmp
pop
es
movsb
or
dec
add
inc
xchg
mov
xor
xor
pop
outsl
int3
mull
outsl
popa
push
loopne
nop
sbb
out
pop
and
sbb
dec
pop
xor
pop
imul
insl
sub
sub
mov
jmp
jp
aas
cli
xlat
xor
ror
testb
mov
xorb
xor
js
push
xlat
std
popa
adc
mov
sub
mov
fbld
mov
clc
aam
add
aas
ret
dec
out
add
sti
fs
divb
out
scas
les
in
cmp
push
bound
std
jns
sub
in
test
or
inc
cld
push
cld
stos
cli
xor
scas
test
sti
pop
jle
sub
mov
imulb
fistl
sub
fiadds
mov
js
jp
inc
leave
jne
jmp
xor
mov
fisubrs
addr16
call
call
insl
out
fsubp
lea
push
xorb
xor
leave
push
cwtl
push
sub
rcl
iret
mov
adc
rclb
in
cmp
mov
mov
imul
add
mov
push
arpl
int
or
xor
adc
xchg
push
sbb
mov
jb
mov
sub
stc
mov
into
mov
cld
sbb
mov
sbb
xchg
cltd
outsb
aad
scas
add
sbb
mov
push
nop
push
xchg
out
push
or
fwait
inc
das
icebp
pop
fwait
push
add
arpl
ret
ret
and
cltd
sub
pop
in
jns
lods
mov
call
inc
std
xchg
mov
xor
or
sub
inc
sti
dec
inc
mov
jnp
inc
mov
mov
add
fdivl
and
dec
out
sar
adc
dec
addl
loope
push
insl
sbb
dec
rolb
arpl
xlat
and
inc
jno
sbb
cld
mov
xchg
push
lods
xchg
jbe,pt
sub
sbb
xor
jmp
stos
fwait
cmp
push
xchg
lods
loope
cld
dec
jmp
imul
pop
jg
lods
cmpsl
insb
outsl
leave
mov
push
sbb
popf
inc
mov
lcall
xor
jnp
sahf
adc
test
dec
mov
jecxz
pop
cwtl
lock
shll
xchg
mov
push
xor
in
pop
fisubl
xchg
mov
idiv
jmp
mov
cmp
ds
es
leave
into
inc
dec
pop
cs
xchg
mov
es
xchg
push
sub
and
in
inc
call
stos
jne
or
fs
nop
push
mov
jno
nop
aas
outsb
js
jl
xor
xchg
pusha
jno
and
hlt
cmpxchg
inc
xchg
mov
popa
gs
ljmp
push
inc
dec
test
stc
jge
movsb
or
repz
xchg
fsts
lahf
inc
mov
sarl
cltd
xchg
addb
mov
rorl
jmp
iret
jbe
or
jnp
xchg
dec
inc
cltd
push
clc
jl
mov
fiaddl
std
fwait
push
mov
jle
jb
sti
xor
testb
dec
xchg
repnz
dec
flds
out
test
cli
xchg
out
pop
xchg
fdivr
jo
aas
mov
test
mov
pop
or
jnp
outsl
jae
les
jne
testb
mov
fwait
add
or
xor
shlb
add
jge
cmpsl
in
xor
sbb
jns
out
push
loope
jo
test
push
iret
sub
sbb
cwtl
leave
mov
addr16
sub
mov
sti
test
cmp
dec
add
sub
add
inc
shll
sub
pop
in
shrl
jne
xorl
in
sbb
xchg
out
imul
xchg
scas
fistps
mov
inc
shlb
enter
jno
stos
fistpl
test
andl
rorl
mov
repnz
dec
stos
inc
loope
xor
sbb
sbb
push
sub
loopne
push
cmp
ret
fisubl
adc
add
jle
test
mov
repz
iret
inc
stos
divl
cmp
pop
dec
imul
cmp
lea
or
jb
outsb
sahf
lods
mov
test
jmp
xor
testb
pop
xchg
xor
divb
or
sub
into
mov
jmp
repz
xor
out
mov
fistps
jno
cmpsb
cmc
jmp
mov
and
fsub
mov
mov
insl
push
repnz
repz
adc
psubb
push
xchg
cltd
fbstp
pop
lcall
pushf
push
imul
incl
cmp
cltd
daa
std
xor
out
sub
mov
jp
push
lret
jle
cmp
aad
or
mov
push
jne
test
addl
sub
ja,pn
push
mov
ljmp
loope
fmul
inc
xchg
or
repz
mov
dec
int
mov
and
sbb
pop
push
jmp
cli
and
xchg
aam
lds
xchg
jo
add
xchg
jecxz
cld
add
cmp
inc
mov
cmc
mov
out
inc
gs
mov
arpl
das
scas
aam
cmp
mov
enter
dec
push
es
pop
and
mov
lods
jns
xor
xor
nop
inc
mov
xchg
xlat
fsubrl
jae
jnp
xor
divl
bound
push
inc
into
or
adc
cmpsl
push
clc
pop
cld
adc
xor
mov
in
lods
out
and
hlt
rolb
mov
cld
stc
shll
js
inc
lcall
idivl
xchg
sub
popaw
lret
cmp
gs
cmp
mov
or
data16
push
push
mov
inc
adc
dec
mov
or
push
divl
jp
iret
sub
cmp
gs
jp
adc
adc
shll
cmp
into
pop
xchg
or
sub
xor
xchg
sub
in
push
mov
mov
mov
int
and
cmp
cmpsb
dec
cltd
cmp
popf
and
sbb
push
imull
cmp
xor
cmc
rcrb
fmuls
pop
stc
shl
test
popf
hlt
mov
sub
add
ss
push
jge
ja
sbb
mov
cmc
loop
nop
ljmp
jecxz
out
test
jb
rcrl
lcall
cmp
vpavgb
imull
inc
test
mov
dec
adc
dec
fcomp
je
call
sub
sbb
addr16
sahf
or
cltd
js
jmp
lcall
je
bound
fstps
dec
insl
jbe
test
jl
jle
mov
pop
mov
rorb
mov
pop
fidivrl
lea
cltd
jno
stos
test
fwait
push
and
cmc
xor
xor
shrl
sarl
xchg
fimull
jno
or
andb
xchg
imulb
les
mov
jnp
aad
pop
mov
adc
ja
jo
push
cmp
ljmp
cmp
mov
mov
mov
sub
ret
imul
jno
inc
inc
rolb
cmp
mov
stos
xor
push
out
push
mov
and
fistps
and
test
and
inc
xlat
iret
je
mov
xlat
inc
pushl
aad
shlb
xorb
in
cmp
xchg
fcomps
mov
pop
sub
fucomi
int3
or
dec
mov
int3
mov
or
jmp
mov
fdivrl
inc
cmpsl
imul
mov
push
cli
lods
cmpsl
fstl
and
push
movsb
mov
mov
lods
adc
mov
xchg
mov
repnz
mov
sbb
je
ret
subb
xchg
inc
dec
jns
popf
push
adc
out
loope
jae
repz
push
adc
movsl
and
push
mov
orb
addr16
adc
sbb
jno
stos
sub
dec
dec
cmp
xlat
jp
push
repz
lret
mov
mov
stos
mov
push
arpl
push
repnz
mov
dec
sarb
addr16
add
movsl
sbb
push
fdivr
rorl
cmpsb
add
mov
xchg
loopne
lcall
stos
pop
jnp
data16
je
test
es
mov
inc
fs
stos
in
loope
push
jbe
add
loop
pop
push
sub
mov
stos
fwait
aas
andb
mov
push
addr16
cmp
xchg
sub
mov
lods
subb
insb
dec
aad
dec
add
dec
xor
sub
lock
lret
mov
icebp
bound
xchg
out
gs
add
xor
test
pusha
lretw
fimuls
shlb
inc
inc
ret
inc
adc
mov
xor
sahf
cwtl
mov
lahf
or
aaa
ds
call
flds
jecxz
dec
mov
xlat
addr16
jp
mov
xchg
in
or
in
out
pushf
ja
and
test
push
jmp
cmp
mov
jp
pop
aad
sbb
add
cmc
int3
cmp
jb
mov
rcrb
loope
sbb
xor
in
dec
mov
test
imul
cmpsb
sub
sbb
push
adc
pusha
daa
rcr
pop
scas
push
push
arpl
cld
jno
cmp
in
rcrb
mov
push
or
inc
push
xor
insb
mov
xchg
mov
shll
popf
pop
ret
in
in
mov
mov
inc
pop
lcall
and
test
loopne
fs
dec
push
lock
xlat
rol
cmpsb
das
mov
movsb
jne
into
int
add
cwtl
ret
iret
inc
sbb
or
sbb
sarl
or
mov
cmpsb
mov
sbb
push
into
es
sbb
cwtl
out
xchg
stos
ret
sbb
into
pushf
dec
mov
inc
mov
outsl
out
mov
lcall
test
fwait
out
pop
mov
pusha
int
movsl
or
nop
add
push
stos
pop
pop
out
idivl
stos
fsubrs
lods
or
in
nop
fcmovb
jle
and
lods
pop
mov
jb
mov
inc
faddl
insl
and
mov
or
mov
or
imul
xchg
sbb
cmpsb
dec
dec
lds
mov
aas
nop
pushf
addl
cmp
push
pop
dec
jne
mov
shll
adc
adcl
jge
mov
sbb
or
and
mov
out
popa
push
dec
mov
inc
mov
scas
into
lods
ret
push
rorl
nop
mov
in
test
arpl
xchg
dec
cld
ss
xor
stos
cmp
add
cs
pop
xorl
int
stos
pusha
mov
imul
scas
ret
movsb
lret
sbb
repnz
cmp
mov
int
inc
mov
push
orl
dec
jp
in
fucom
out
push
lea
lcall
pop
mov
cs
loopne
pop
mov
cld
inc
xchg
mov
aad
test
xchg
fadds
cmp
stc
shlb
or
xchg
sbb
scas
mov
lahf
xor
and
sub
sub
rorl
cmovnp
jp
dec
pop
pop
xor
je
lds
arpl
pop
xchg
sbb
iret
cmp
js
sub
or
inc
fdivrp
mov
out
repz
dec
and
ljmp
cltd
xchg
mov
xor
mov
in
into
popa
xor
xchg
out
push
push
jg
dec
mov
imul
mov
sub
mov
push
pop
sub
mov
mov
loope
in
adc
mov
test
icebp
mov
xchg
loope
mov
inc
insb
ljmp
xor
or
push
xor
dec
ret
xor
call
rcr
lods
inc
ss
ss
mov
adc
int
add
and
jb
shl
mov
fcoms
mov
ljmp
jl
inc
aas
lds
push
cmp
aam
mov
nop
testl
cmpsb
and
nop
jns
gs
pop
mov
leave
andl
sbb
pushl
sahf
xor
es
ret
scas
add
mov
jne
sub
pop
aam
dec
pop
add
mov
inc
jge
lds
ret
cs
or
stos
scas
and
mov
mov
mov
xor
ret
push
mov
in
mov
clc
mov
pushf
mov
or
add
mov
mov
pop
insl
sbb
adc
and
xchg
push
aas
sub
and
adc
out
hlt
jbe
xor
add
popf
bound
ja
aas
les
es
lock
sub
mov
mov
popa
mov
aaa
or
mov
icebp
dec
mov
in
pop
enter
hlt
mov
lret
inc
enter
outsl
sbb
jmp
mov
pop
add
cmp
lcall
sarb
stos
xchg
jae
pop
mov
stc
pop
add
xchg
jno
sub
sub
pushf
mov
xlat
push
push
or
adc
add
insl
and
out
and
fdivs
add
test
imul
in
sbb
ret
mov
call
or
es
jno
mov
outsb
fs
sti
pop
adc
pop
xor
pop
stos
and
mov
ja
cmp
popa
inc
jns
mov
lret
aad
jno
data16
mov
push
pushf
lret
filds
cmp
cmp
aad
es
dec
pusha
nop
lods
xor
popa
and
or
enter
lahf
loope
xchg
cmp
xor
jp
xchg
stos
movsb
push
daa
testl
mov
jno
stc
mov
mov
inc
pop
sahf
mov
xchg
lods
popa
fwait
outsb
sbb
faddl
movsb
pushl
xlat
jmp
cmp
inc
gs
xchg
mov
or
js
and
cs
in
xor
ja
movsl
pop
and
daa
adc
dec
addr16
push
jne
add
dec
pop
aaa
xchg
mov
inc
arpl
add
xor
std
fisubl
cmp
aaa
sub
mov
jbe
push
adc
fadd
xor
mov
lds
mov
adc
dec
xchg
mov
dec
clc
jmp
xchg
jl
push
add
jnp
jno
test
push
fsts
aas
jmp
pop
mov
push
cmp
mov
xor
ljmp
jae
outsl
jbe
shrb
movsl
mov
cmpb
and
lret
outsb
bound
sar
aaa
mov
repz
daa
popf
dec
frstor
cld
aas
jge
ljmp
pushf
jl
add
pushf
xchg
cmpsl
test
jge
mov
adc
ds
add
fsubrs
into
shl
shlb
cmp
sbb
cmp
aad
adc
cmpsb
pop
cmc
call
aad
fcmovnbe
lock
lret
jmp
data16
dec
aad
repnz
imul
and
outsl
cltd
xchg
mov
lea
xchg
aaa
or
rorb
out
into
out
sbb
xchg
push
mov
cltd
inc
shrl
xchg
iret
sub
jb
and
sahf
inc
lds
ljmp
fst
sub
fistl
adc
xchg
mov
jmp
dec
inc
xchg
lea
add
cli
cmc
imul
adcl
in
pop
pop
mov
nop
js
test
add
aad
fldt
dec
xchg
inc
ficoml
xorb
cltd
jnp
nop
ja
and
jg
jge
push
mov
xchg
mov
pop
cmpsb
jecxz
push
add
mov
mov
imul
mov
inc
sub
ror
mov
cs
andb
pop
mov
sbb
das
mov
in
sub
mov
popf
sbb
mov
xchg
lahf
inc
mov
inc
mov
imul
pushl
in
and
xchg
xchg
test
scas
sbb
push
cs
adc
dec
inc
pop
mov
fisttpl
add
mov
mov
movsb
xor
or
mov
and
xchg
sar
sahf
cmp
or
sub
inc
push
in
inc
sub
roll
xchg
clc
scas
fisttps
fcoms
cmp
daa
das
or
pop
ljmp
adc
mov
ret
test
jecxz
jle
or
cmpsl
xor
call
xchg
sub
cmpsb
sbb
dec
sub
pop
and
repz
sub
push
mov
ffreep
pop
jb
outsl
mov
std
pop
fwait
adc
jne
aad
lods
stos
sbb
movsl
add
loop
add
movsb
pop
stos
cli
xchg
push
xor
outsl
xor
and
scas
and
adc
ja
scas
mov
add
push
test
je
sarb
adc
mov
push
cmc
jnp
adc
ret
dec
jo
es
mov
and
xchg
mov
loopne
add
push
test
inc
xor
lods
cmpsb
pop
mov
out
int
es
pop
loope
faddl
and
xor
jg
mov
popf
repz
jnp
mov
add
jne
mov
addr16
scas
iret
data16
lock
sbb
or
lcall
sbb
sub
mov
push
and
lods
push
loope
mov
inc
in
shl
andb
fsubrs
xor
xchg
stos
imul
xchg
faddp
xor
xchg
xchg
adc
mov
jo
jp
push
and
dec
stc
addb
ljmp
je
and
sub
jecxz
and
inc
dec
inc
jp
pop
std
fnsetpm(287
rclb
adc
pop
mov
repnz
xchg
cmp
imul
arpl
and
pop
jne
xor
out
imul
xchg
xchg
ja
inc
shl
dec
push
push
dec
movsl
mov
inc
lret
out
adc
inc
iret
pop
movsl
cmp
das
cmp
xchg
in
es
jmp
sub
push
daa
fucomip
call
insb
xor
push
push
mov
sub
mov
xchg
pop
cmp
imul
div
push
stos
adc
int3
mov
and
lcall
adc
lods
pop
in
adc
fistpl
mov
push
or
lock
icebp
fisubs
mov
daa
xchg
in
jl
in
cwtl
jo
aam
mov
and
add
or
xchg
or
xchg
fmulp
call
das
arpl
out
sti
jg
mov
or
mov
mov
push
js
fnstcw
or
es
fnstenv
jbe
lock
pop
sub
jbe
mov
adc
scas
push
push
pusha
and
lret
xchg
dec
lret
rol
mov
sbb
iret
adcb
jb
inc
test
push
add
aaa
ss
xchg
jle
mov
adcb
bound
mov
imul
rorl
lahf
pop
daa
mov
pusha
jp
xor
adc
dec
mov
cwtl
test
bound
scas
push
push
adcl
inc
imul
loopne
jl
jmp
xchg
leave
lcall
mov
incl
mov
mov
je
inc
pop
popa
or
shll
mov
into
xchg
subl
stc
je
adc
pusha
bound
iret
scas
jbe
nop
cli
lahf
andb
mov
add
mov
fs
pop
mov
adc
push
mov
jno
cld
push
mov
and
cli
js
aam
mov
push
repz
add
hlt
xor
arpl
rorb
aaa
in
daa
dec
lahf
jo
pop
push
ja
pop
pop
xchg
xor
icebp
std
test
mov
and
pop
xchg
aas
pop
or
adc
xchg
and
cs
xchg
test
fwait
or
scas
sub
and
or
mov
ret
jo
lods
push
test
imul
call
xor
mov
bound
add
mov
cld
cmp
bound
pop
or
mov
in
mov
jmp
push
bound
sbb
dec
insl
jmp
stos
mov
in
add
adc
call
fsubs
jecxz
outsb
js
and
xchg
cwtl
mov
xchg
fwait
pop
dec
add
shl
xor
in
dec
mov
sbb
test
outsb
fimull
or
pop
test
cwtl
push
dec
push
popf
les
pop
loope
jmp
fidivl
sarb
icebp
movsb
adc
cmpl
pop
adc
sahf
mov
or
mov
fsts
and
push
dec
das
jne
ret
pop
dec
sub
push
sub
cs
adc
lret
xchg
fimuls
in
mov
jae
pop
cmpsb
push
sub
ja
imul
pop
in
pushf
jb
cmpsl
cli
jge
xor
mov
in
lds
test
stos
shll
pop
fimull
mov
das
inc
cmp
popf
mov
xchg
dec
and
roll
mov
outsl
stc
out
dec
loopne
fimuls
add
je
sub
out
sub
sbb
mov
stc
out
inc
pusha
add
aas
cli
jb
mov
sub
ljmp
xchg
fildll
sbbl
cld
or
push
xchg
xchg
jecxz
daa
jo
pop
sub
pusha
mov
inc
dec
push
mov
mov
js
or
adc
push
mov
adc
fstps
inc
cwtl
data16
mul
jo
stos
lcall
mov
sbb
push
shl
adc
jle
arpl
fimuls
xor
push
sub
xchg
cmp
cli
fs
mov
data16
test
xchg
mov
aas
jl
pop
fistpll
ja
test
mov
call
or
push
sub
mov
jo
lret
dec
xor
js
push
gs
push
ds
mov
std
inc
push
xchg
pop
mov
push
pop
xchg
xlat
mov
negb
sub
pusha
xor
jg
pop
jb
insb
add
test
dec
sbbl
loop
xchg
sbb
stos
xchg
adc
sub
jo
add
xchg
imul
imul
pop
xor
clc
pusha
inc
push
pop
push
cmp
add
cli
push
scas
cmpsb
dec
popf
rcrl
imul
daa
mov
jmp
fiadds
fcoml
pop
sbb
stc
add
mov
inc
sbb
stos
test
jle
add
aam
call
stos
inc
jnp
cmpb
in
std
clc
cmp
jecxz
cmp
lahf
insb
int3
cmc
sub
popf
dec
dec
and
sub
xchg
or
push
jle
sbbl
sarl
sbb
pop
push
stc
jne
fcoml
pop
pusha
movsl
icebp
pop
mov
sahf
popa
xor
test
push
fbstp
aaa
push
insl
inc
shrl
lea
out
std
movl
mov
sahf
cs
je
xchg
pop
mov
shll
and
mov
pushf
and
dec
fcoms
push
ret
lret
scas
scas
test
ss
stc
push
jnp
add
mov
into
loop
pop
pop
or
pop
pop
std
jns
or
inc
dec
inc
ficomps
loop
lods
repnz
repz
ss
add
xlat
xorl
inc
adc
adc
addr16
jge
sbb
insl
pop
insl
sti
xchg
mov
jnp
pop
pop
pusha
pop
pop
mov
push
inc
andl
mov
movsl
inc
jne
das
scas
xorl
test
dec
jbe
call
int
xor
cmp
xor
mov
mov
pop
or
call
ss
cmp
sbb
out
scas
push
cmp
popf
outsl
mov
aad
push
in
shrb
jmp
and
aas
std
repz
lcall
insb
sbb
gs
mov
or
test
sahf
add
imul
inc
xor
sub
dec
push
sti
and
sub
sti
outsb
mov
in
ja
fwait
sub
inc
pop
andb
adc
mov
in
roll
bound
xchg
shl
mov
inc
lods
mov
xor
pusha
std
loop
mov
int
ja
repz
mov
call
imul
adc
enter
push
mov
fmulp
lock
jb
adc
pop
adc
mov
cmp
add
leave
mov
mov
test
into
lods
lcall
mov
repz
es
fstpl
lods
jne
fsubrs
jo
iret
ljmp
add
and
loop
push
inc
mov
or
or
in
stos
mov
sbb
faddl
pop
jecxz
sbb
addr16
adcl
mov
loope
movsl
movsl
movsb
ja
or
mov
adcb
xlat
ret
xor
insl
bound
xchg
ficoml
mov
mov
repz
cmc
or
stos
leave
sahf
jbe
cli
jne
aad
and
mov
push
push
adc
out
xchg
add
nop
mov
popf
add
int
scas
subb
pop
imul
les
mov
mov
sbb
adcl
pushf
pop
aas
add
pop
and
int
scas
xchg
loop
push
fwait
jns
popf
pop
push
addl
lods
out
cmp
add
push
adc
xor
int3
pusha
gs
std
sbb
or
outsl
cs
aas
dec
sub
cmp
lcallw
outsl
pop
and
xchg
arpl
jno
adc
cmc
stos
fdivrl
and
sbb
or
fsubrs
sub
ds
aaa
rolb
dec
mov
inc
mov
add
popa
outsb
ja
rcr
mov
int
fs
prefetch
or
jbe
cmc
popf
movsb
sbb
ret
imul
jg
adc
mov
mov
in
jmp
test
jge
lret
add
in
inc
inc
inc
fidivs
imul
mov
or
sbb
mov
add
stc
pop
xchg
call
pop
push
sub
mov
inc
loop
testl
out
fnstenv
dec
cmpsl
sbb
push
cmc
cli
outsb
outsl
jmp
mov
inc
aam
cmc
lret
ljmp
bound
dec
rorl
adc
outsb
mov
stos
in
push
bound
and
imul
mov
inc
sub
stos
cmp
adc
pop
add
inc
shll
mov
push
les
lcall
rcrl
jbe
sbbb
xchg
sub
aas
movb
jge
lods
mov
sbb
sbb
cwtl
pop
inc
out
jg
sub
leave
add
push
cwtl
out
sub
pop
rorl
fdivrl
pop
insl
cmp
jmp
jg
xor
loop
out
ffreep
jg
cmp
in
sub
jp
push
mov
orl
fldl
push
mov
pmaxsw
inc
addl
data16
xchg
mov
push
mov
mov
fidivs
cli
movb
stos
jecxz
xor
in
insl
in
push
test
inc
andb
xchg
dec
lahf
jp
ljmp
mov
adc
xor
push
sub
mov
lock
and
xchg
arpl
por
gs
pop
pop
je
es
or
in
fs
inc
mov
add
sub
pop
xor
repnz
sub
outsb
lock
lcall
loopne
inc
xchg
aam
lods
out
mov
cmp
mov
inc
out
pop
cmp
push
daa
in
ret
mov
lcall
fcomps
jecxz
in
add
cmp
cmc
add
lcall
pop
lock
fidivrs
js
test
sti
repnz
arpl
mov
dec
dec
xor
sub
fdivrs
xchg
popf
lret
ja
call
dec
outsl
inc
adc
push
mov
dec
loopne
rep
movsb
hlt
pop
lds
mov
scas
pop
test
xor
add
inc
cld
push
push
mov
shll
negl
mov
cmp
mov
sub
jmp
mov
sub
les
test
mov
jo
sbb
jnp
lds
mov
jae
insl
push
dec
or
xchg
ljmp
mov
ja
clc
sti
sbb
push
jbe
scas
xchg
push
jb
dec
insl
mov
cmp
lods
and
rol
out
adc
in
xor
lret
jns
repz
cmc
adc
inc
cmpsl
push
hlt
fs
lods
pop
lds
sbbl
jns
cmp
push
aas
cltd
loop
daa
jne
int
pop
mov
cmp
xor
std
or
mov
add
sub
jns
icebp
popf
push
outsl
mov
fbld
imul
or
lea
sbb
and
in
shlb
sbb
call
outsl
aad
nop
mov
cmp
jae
ljmp
jg
lds
mov
ds
test
sbb
aam
push
repnz
ljmp
xor
sbb
int
jge
xchg
inc
loopne
pop
sub
adc
test
ljmp
sub
std
lcall
sbb
dec
stc
dec
ficomps
push
ds
dec
xchg
in
test
xchg
es
adcb
jae
nop
sub
push
jmp
push
das
cwtl
jae
arpl
test
adcb
cmp
jae
movsb
shr
xchg
jae
mov
sar
inc
into
addr16
cs
mov
and
sbb
jae
fstpl
or
dec
scas
in
add
repnz
or
and
jg
int3
dec
push
and
enter
pop
subl
cmp
jne
outsl
int3
sub
popa
ja
jmp
sbb
xchg
aam
jbe
enter
imul
rolb
mov
leave
lock
jle
rcrl
sarb
repnz
lahf
aaa
in
movsb
sub
mov
push
fdivr
xchg
sub
xchg
test
outsb
dec
lret
les
fs
rcr
sahf
in
cmp
lods
test
out
xor
cmp
xor
ficomps
mov
mov
in
inc
sub
insl
push
int3
outsl
rcrl
mov
mov
push
pop
lods
push
sub
dec
inc
and
ja
cmp
jb
lahf
ror
icebp
push
pop
cmp
shl
or
inc
hlt
mov
bound
pushf
aam
mov
std
xchg
sbb
std
mov
aas
inc
ja
stc
es
js
andl
pushf
sbb
lret
jl
enter
orl
daa
jmp
test
movsb
add
xlat
push
mov
sbb
stc
in
mov
or
adc
jp
fiaddl
lea
xor
mov
dec
repz
popf
sar
pop
push
pop
pop
xlat
subl
in
sbb
shr
inc
jo
fucomp
repnz
out
or
repnz
pop
dec
mov
insl
fwait
or
add
push
fyl2xp1
iret
and
scas
bnd
push
xor
push
mov
lahf
xchg
lods
push
std
fwait
fwait
loopne
mov
push
or
enter
pop
add
ljmp
xor
xor
adc
xchg
lds
dec
push
mov
mov
fnsave
jl
imul
jp
jg
push
rcl
les
nop
sbb
cs
inc
jle
dec
push
shll
mov
dec
ja
dec
int3
iret
out
cmp
mov
mov
dec
je
xchg
mov
sub
push
cmc
mov
push
mov
outsb
or
loop
dec
and
lret
jns
in
test
clc
shlb
add
jp
aas
aas
mov
movsl
xor
test
test
insl
pop
shrb
push
lods
pop
out
insl
movsl
mov
mov
aas
pushf
imul
in
pushf
cmp
pushl
inc
and
mov
pop
add
fistl
lds
xor
jecxz
hlt
mov
jg
lea
pop
dec
and
rcrb
and
in
push
mov
das
loop
xchg
int
lea
fistpll
negb
lds
mov
mov
test
jne
imul
repz
popa
test
cmp
inc
mov
mov
cmp
imull
int3
iret
stos
sub
notb
loope
and
mov
inc
adc
sub
in
int3
adc
int3
js
adc
dec
xchg
sub
sub
mov
xor
mov
sub
dec
mov
popa
sub
cli
insl
pop
push
jg
inc
jnp
adc
movsl
lcall
push
test
xchg
call
inc
or
cld
dec
jo
mov
adc
add
pop
out
push
jne
inc
mov
dec
stos
and
lret
mov
push
data16
jne
js
or
or
ds
leave
lcall
lds
mov
xchg
aas
nop
das
fdiv
adc
insl
pop
mov
lahf
jbe
stc
xor
push
in
pop
aaa
rcrl
cmpsl
xacquire
mov
in
add
jecxz
xchg
std
mov
pop
jmp
out
fdivrl
out
xchg
repz
add
ss
adc
out
push
xor
lods
iret
dec
imul
mov
test
cmp
ficoms
fsubl
scas
les
jg
movsb
cmp
cmp
cmp
jmp
aas
mov
ja
daa
cmpsl
data16
lds
int3
sbb
push
push
mov
pop
cmpsl
mov
sub
mov
aad
sub
mov
sahf
mov
jnp
in
cmp
and
adc
jb
push
sub
cwtl
xor
xlat
xor
mov
test
cltd
in
out
idivb
sbbl
pop
add
lods
jns
or
repz
jbe
cmp
incb
mov
dec
lcall
stos
test
add
sahf
jge
call
lret
ja
pop
push
lahf
xor
iret
stos
push
xchg
ret
jb
repz
xor
mov
jbe
movsl
je
fstpt
mov
jg
stc
push
pop
mov
push
rorl
lea
xchg
and
xor
jb
ljmp
cwtl
ds
sbb
cmp
loope
aas
jle
aad
push
rcll
jecxz
jnp
xchg
dec
ljmp
ds
fnstsw
or
cwtl
cmp
rcrl
mov
mov
xor
sbb
nop
mov
nop
sbb
sti
fs
adc
lds
and
icebp
aam
movsb
pop
dec
lcall
dec
andl
pop
loop
and
inc
dec
fidivs
jb
dec
mov
inc
jge
fs
out
sub
inc
sbb
bound
sbb
stc
imul
jle
inc
test
xor
jb
dec
dec
push
push
jmp
fldl
mov
leave
xor
cwtl
mov
inc
jl
pop
add
dec
push
je
sbb
enter
or
stos
imul
cmpl
add
stos
out
or
jmp
cld
ss
loope
or
mov
adc
bound
loope
faddl
xor
dec
pop
and
adc
inc
dec
mov
inc
cmp
push
sub
xor
mov
sahf
and
xor
xchg
sbbb
fsts
xchg
sub
roll
ds
mov
lock
cmp
xlat
push
dec
inc
cmp
mov
imul
nop
and
sbb
les
cmp
out
ret
jl
mov
xchg
movsb
hlt
rol
jns
inc
sub
les
push
sbb
mov
aas
pop
fsqrt
cld
or
pop
cs
mov
mov
pop
xchg
cmp
je
outsb
pop
cs
sahf
mov
sub
out
cmp
rcl
or
loop
in
jmp
arpl
mov
ds
rolb
fmul
xor
sbb
mov
and
popa
aad
pop
fdecstp
aam
cmc
out
inc
notb
cltd
cli
int3
sub
mov
jge
popf
in
lahf
aad
shl
idiv
loopne
add
inc
push
out
loop
pop
cmp
push
hlt
popf
orl
dec
sahf
sahf
sub
mov
rcr
jl
xor
jmp
lea
shrl
push
mov
sub
bound
call
sbbb
mov
js
arpl
mov
xor
adc
sbb
mov
pop
inc
shrd
adc
pop
mov
scas
mov
mov
bound
lret
jge
subb
aas
pop
je
sub
xchg
fwait
addr16
aas
movsb
gs
int
out
cli
pop
out
lcall
out
pop
in
jmp
aad
jne
mov
and
sahf
push
push
flds
mov
push
iret
sub
bound
es
scas
jnp
jne
mov
sbb
cmc
inc
add
cmp
push
paddb
inc
pop
pusha
mov
cmp
cmp
int3
es
cmp
lcall
scas
dec
ficoml
fistps
pop
stos
push
in
insb
mov
push
imul
mov
shlb
loopew
xor
lahf
pushf
pop
jmp
imul
cmpsb
addl
sbb
and
ljmp
cmp
mov
or
and
je
ljmp
jo
sti
pop
add
aas
mov
aas
mov
mov
xor
mov
lret
cmp
push
das
jnp
cli
enter
mov
and
xor
outsb
mov
push
divb
and
in
popl
xchg
adc
mov
mov
jle
jl
xchg
hlt
daa
dec
mov
inc
add
mov
dec
insb
stc
lods
pop
cmc
pop
xor
movsb
sub
pop
ret
cltd
mov
in
mov
add
fwait
dec
adc
pop
xor
sub
mov
fmul
push
mov
test
push
mov
mov
les
fsubs
sbb
aad
cmpsb
and
xor
and
lret
add
test
insl
add
push
cmpsl
popa
fwait
cmp
hlt
movsb
pop
test
sahf
or
mov
add
push
popa
fstpl
daa
int
dec
inc
loopne
out
test
lcall
loopne
lret
lea
out
es
xor
ret
jo
je
les
xchg
je
and
andl
pop
mov
repz
mov
es
sub
std
dec
jb
bnd
push
sub
sub
aam
aad
push
xlat
cltd
sahf
xor
sub
jno
cmp
mov
pop
push
sti
inc
mov
mov
ljmp
jb
mov
sub
arpl
mov
lret
imull
and
in
pop
daa
adc
movsl
test
inc
repnz
int3
movsl
mulb
cld
shl
ffree
and
out
mov
fptan
xor
shl
repz
add
fwait
popa
inc
outsb
ret
cmp
sub
sbb
lahf
pop
sub
arpl
out
cli
push
jecxz
mov
ficompl
dec
sbb
mov
test
nop
ss
jmp
sub
test
shlb
lcall
cmp
sub
push
cmc
mov
or
imul
in
lret
cmp
sub
sbb
mov
xor
mov
jbe
mov
mov
push
lods
nop
and
push
cmp
daa
cmp
sbb
mov
cmp
sub
call
imul
jecxz
out
xchg
mov
cmp
cmp
fstl
scas
mov
imul
sbb
gs
ss
jg
dec
mov
sbb
es
xchg
push
jb
out
scas
push
test
pop
enter
mov
fnstcw
jns
lods
icebp
mov
out
sub
sahf
je
mov
adc
call
fcomps
test
and
imul
fidivs
adc
adcb
push
jno
pop
lods
mov
inc
addr16
test
xlat
mov
jmp
jecxz
jge
or
pop
jle
aas
idivb
xor
mov
lret
pop
or
jg
push
sahf
lret
and
push
jae
js
dec
add
inc
les
mov
pop
popf
cmp
jl
xor
pushf
pop
or
push
inc
xor
dec
lock
lock
in
and
xor
fiaddl
repnz
sbb
dec
shll
je
into
lock
xor
sub
dec
sub
mov
dec
or
add
mov
push
js
dec
and
sub
dec
outsb
pop
gs
jge
pop
sub
dec
ret
stc
movl
lret
loope
jbe
mov
fwait
in
mov
dec
icebp
ret
outsb
popf
lret
ret
test
mov
mov
lcall
out
sbb
data16
iret
pop
test
or
pop
loop
jbe
push
out
push
lret
inc
insl
cmp
pop
jo
inc
cli
fnsave
in
xor
mov
test
push
dec
add
add
cmp
lahf
fs
add
mov
mov
leave
out
popa
jbe
inc
fsubrl
xchg
in
mov
cltd
insb
hlt
xchg
push
scas
xchg
or
sub
xchg
mov
loopne
mov
xchg
inc
add
mov
cmc
or
in
leave
ds
loopne
test
cmc
aam
in
stos
push
sbb
arpl
outsl
pop
push
pop
inc
out
add
dec
mov
std
fucomip
add
adc
inc
cwtl
or
bnd
cltd
push
lret
add
lea
jbe
and
add
jp
cli
addr16
lods
or
lods
repnz
xchg
mov
adc
push
inc
repz
mov
push
rolb
inc
dec
pop
andl
and
sti
aam
pop
in
popf
adcb
gs
fs
pushfw
xchg
aas
add
xor
lods
add
cwtl
addb
arpl
loope
xor
or
rclb
pusha
mov
mov
sub
testl
mov
scas
es
gs
lods
movsl
fimull
int3
movsl
cmpl
lea
dec
outsl
ljmp
in
or
into
into
pop
mov
sub
add
lea
jecxz
push
arpl
dec
jns,pn
xor
add
das
rorb
xchg
cmp
xchg
cmp
jnp
jecxz
enter
mov
or
in
xor
pushf
dec
testb
xor
enter
xor
cmp
pop
pop
mov
or
in
push
jmp
and
mov
sub
test
std
test
ja
mov
shlb
cmp
xor
loopne
add
mov
jns
dec
pop
aaa
pop
leave
ljmp
pop
cmpsl
jmp
or
sub
mul
popa
xor
jnp
aas
adcb
cmp
out
ret
dec
into
sbb
adc
js
mov
cmpsb
mov
or
and
enter
jmp
push
imulb
stos
shrb
sub
sbb
xor
movsl
arpl
mov
int3
jbe
sar
xchg
sub
dec
jb
adc
cmp
pop
cwtl
cwtl
ja
les
jg
aam
out
shl
push
lret
mov
ja
jne
lods
jns
push
xchg
mov
jg
or
push
jmp
mov
clc
inc
fcmovnu
mov
and
scas
int3
push
rcll
push
jmp
test
cmpsl
jno
dec
add
pushf
mov
sub
aam
dec
movsl
movsb
sub
je
je
mov
ss
mov
repnz
stos
hlt
add
dec
cmpsl
repnz
mov
fidivl
dec
dec
aas
out
xchg
push
notb
and
in
jo
cld
mov
sub
fimull
sub
fisttpl
cli
mov
int3
xchg
adc
pop
xchg
adc
push
shll
aas
imul
dec
fdivp
inc
adc
mov
adc
cs
mov
cmp
cmp
test
xchg
mov
cwtl
pop
insb
sbb
jb
and
push
push
bound
mov
ja
mov
add
imul
daa
fs
scas
fldcw
mov
cs
xor
mov
out
insb
mov
lock
cmp
jo
mov
mov
mov
fcmovne
pop
lret
movsb
cmp
jl
rorb
mov
xchg
lret
xchg
or
xchg
jo
sub
sbb
decl
andl
pop
cli
pminub
jbe
dec
sbb
in
mov
mov
dec
lds
js
out
xor
lcall
sbb
xchg
or
iret
cmp
xchg
inc
push
and
or
ljmp
mov
jp
pop
pusha
in
jmp
je
inc
mov
fildl
push
data16
inc
mov
shll
ljmp
lea
fildl
push
jmp
and
sub
fidivs
pusha
xor
sbb
insl
push
add
sub
sti
ficoms
push
pop
lods
and
inc
dec
and
loop
cmp
leave
iret
push
popf
sahf
mov
cmp
lret
mov
and
mov
mov
fwait
int
lea
cwtl
sub
iret
mov
movsl
int
xlat
das
mov
or
inc
sub
mov
imul
ds
cmc
mov
fidivs
into
imull
adc
rcrb
mov
loop
fwait
jp
cli
cld
in
ss
push
bswap
test
jmp
adc
adcb
cmp
cmp
sbb
mov
repnz
cltd
mov
incb
pop
int
out
inc
loopne
mov
xchg
xchg
out
pop
cmpsb
xchg
mov
push
jb
inc
negb
clc
add
lds
cmp
lret
xchg
mov
mov
jmp
push
leave
in
adc
push
shl
jne
push
pushf
shrl
inc
shlb
xor
int3
mov
mov
ljmp
cmpsb
mov
mov
mov
lcall
jae
adc
add
dec
pop
xor
enter
scas
push
mov
push
fwait
jb
sub
sub
xchg
ss
add
fdivrl
mov
push
xchg
aas
aaa
daa
in
mov
aad
add
mov
scas
arpl
fdivp
loop
push
fcoml
das
or
pop
std
ljmp
push
sub
dec
push
fimull
nop
cwtl
inc
addr16
loop
lret
mov
jecxz
xor
jp
xchg
test
adc
mulb
insb
dec
loopne
cmp
cmc
cmp
orl
outsl
roll
fmuls
repz
mov
rclb
pop
sub
jo
add
mov
mov
clc
mov
sbb
bound
sbb
push
ja
or
push
pop
cmp
les
lea
lcall
sbb
inc
cmpsl
pop
pop
addr16
rcll
jmp
enter
lods
dec
nopl
jl
mov
ret
xchg
and
in
cmc
popa
nop
cmpsl
lea
inc
mov
cmp
ja
push
sbb
lcall
pushl
adc
dec
xlat
addl
or
jae
roll
out
outsl
xchg
daa
scas
cmp
lods
scas
outsl
and
push
inc
pop
fbld
adc
ret
mov
mov
pushf
and
call
or
out
fnstcw
sub
mov
adc
repz
subl
iret
and
mov
fldcw
jp
pop
mov
cltd
mov
xlat
fwait
fsubrs
enter
ficoml
pop
shrl
mov
xchg
cltd
lahf
into
rol
inc
cmpsb
sub
inc
xlat
shll
rcll
out
and
add
fcoml
cmp
and
jno
in
adc
fs
dec
mov
or
das
imul
dec
xorl
push
sbb
push
adc
inc
stos
mov
lock
jg
cmpsb
inc
enter
pop
inc
fucomi
loopne
repnz
xchg
les
or
push
nop
pop
ja
mov
push
push
inc
lahf
cwtl
lcall
cmpsl
fstpl
imul
andl
mov
sbb
cmp
fucomi
imul
seto
adc
nop
push
pusha
adc
push
insl
mov
mov
test
daa
dec
adcl
ds
sub
jnp
or
dec
nop
psadbw
dec
pop
and
xchg
fcmovne
ljmp
xchg
jo
ds
mov
aam
aaa
jns
out
xor
sbb
push
loope
dec
mov
jg
leave
js
jmp
bound
lahf
data16
pop
push
and
lret
and
mov
xchg
mov
pop
xchg
jno
ja
lods
mov
stos
and
fildll
mov
or
mov
test
pushf
rolb
movb
xchg
push
rclb
sub
mull
sub
outsb
pop
dec
pop
xor
lcall
inc
mov
das
lcall
xchg
in
mov
mov
int
sub
jo
xchg
mov
lret
pop
xchg
frstor
sti
ja
xor
xor
loop
enter
fs
in
loope
mov
mov
and
mov
mov
xor
aaa
fldenv
xor
pop
pop
sbbb
add
jnp
add
inc
jmp
rorb
lcall
jns
test
mov
mov
xor
outsl
fwait
imull
dec
pop
xor
out
pop
imul
leave
insl
mov
icebp
dec
bound
das
gs
or
jo
mov
and
sarl
sbb
add
je
jo
mov
cld
out
or
addr16
mov
movsl
xor
sbb
movsb
sbb
and
ret
pop
mov
aad
outsb
scas
cmpb
in
sub
mov
or
push
test
inc
adcl
push
dec
lock
or
lock
adc
icebp
add
mov
fcomps
test
push
jo
jg
call
mov
adc
mov
xor
je
inc
and
mov
mov
hlt
lods
pusha
mov
aaa
mov
add
sbb
mov
pusha
mov
mov
movsl
mov
fs
test
xlat
mov
xchg
xlat
mov
fst
xchg
fcoms
cmp
repz
add
push
popa
sbb
fstpt
sbb
mov
adc
add
sub
arpl
or
fcomps
hlt
mov
es
inc
mov
and
jbe
jb
mov
jg
mov
push
xor
std
mov
mov
dec
shl
pop
aas
mov
pop
std
and
cli
mull
es
sbb
cmp
sub
test
into
stc
inc
sub
xor
inc
sub
sub
jmp
and
fdivs
adc
dec
jmp
call
pop
imulb
insb
mov
pop
cmp
arpl
repnz
lods
add
inc
jmp
movsl
popa
adc
cmp
sti
sub
scas
cmc
test
pop
push
arpl
shrl
hlt
jne
lahf
pop
rep
pop
fmull
fcompl
mov
add
insl
pop
leave
dec
push
pop
jp
adc
mov
aad
push
icebp
sahf
shrb
jl
jb
dec
decb
fwait
and
dec
aaa
int
jp
aad
jo
jno
decb
test
clc
hlt
adc
loopne
and
aad
mov
mov
adc
jmp
or
mov
and
xchg
popf
mov
dec
mov
jp
pusha
call
and
xchg
sub
int
pop
popf
and
outsl
imul
cmp
jmp
push
je
sbb
cwtl
jno
decl
pusha
adc
fnstcw
add
xchg
mov
cmp
inc
adc
rorb
frstor
ret
or
and
inc
push
xchg
adc
mov
fwait
test
orb
xlat
ret
mov
loopne
and
insl
push
mov
stc
sbb
scas
ljmp
xchg
insb
mov
push
rol
out
pop
cli
fldenv
mov
into
push
or
lods
add
cwtl
jmp
jle
lds
cwtl
out
insl
add
out
dec
ds
cmp
jp
hlt
shl
or
ja
adc
add
es
or
jne
and
sti
mov
rol
mov
or
sub
inc
jge
in
mov
or
in
or
adc
sbb
inc
or
cwtl
addr16
or
jbe
mov
enter
punpckhwd
adcl
add
push
or
je
rcrl
jp
or
mov
push
mov
mov
mov
pop
insl
out
mov
pop
in
inc
and
mov
sti
hlt
shrb
in
test
shll
hlt
add
adc
jo
imul
push
push
dec
frstor
aam
icebp
jbe
xchg
adc
stc
push
fcomip
mov
jb
test
and
mov
int3
adc
mov
jg
mov
adc
xchg
and
cmp
dec
cs
mov
xchg
aas
in
xchg
shll
mov
sub
dec
repnz
push
and
mov
imul
pop
fnstsw
movsl
sub
xchg
xchg
test
jnp
cltd
or
repz
rclb
in
enter
je
call
mov
sub
push
subl
sub
ficoml
rcrl
fcmovnb
popa
jmp
xchg
sub
dec
jae
cltd
adc
lahf
cmp
in
mov
stc
bound
sbb
or
mov
mov
cmp
lahf
or
pop
rorl
add
lret
dec
lds
fmull
mov
fwait
rcll
pusha
iret
jmp
adc
aad
inc
sti
out
lret
xchg
push
pop
sbbb
std
call
insl
sbb
add
sub
ljmp
sbbb
sub
adc
mov
stc
pop
xchg
mov
or
insb
mov
ret
rol
jl
and
xchg
sar
and
mov
fucomp
jae
fmul
imul
push
mov
fs
frstor
sub
ss
or
adc
mov
mov
sub
jae
jbe
sbb
ret
das
sbb
lcall
xor
mov
lret
jmp
mov
pop
sbb
jns
adc
ret
mov
aas
xor
add
push
mov
mov
cltd
mov
cmpsb
pop
jae
mov
sbb
iret
cmp
mov
ljmp
xor
mov
pop
sub
in
repz
lcall
adc
mov
test
xor
cmc
sahf
sub
cmpsl
add
xor
inc
pop
repz
push
leave
insl
pop
daa
sbb
ss
cmp
lods
jle
xor
and
arpl
mov
push
xchg
iret
subl
add
in
xchg
cltd
aaa
jl
cld
rcrb
pushl
mov
pop
enter
arpl
sbbb
mov
out
lret
xor
sub
xchg
pushf
cs
repz
jnp
jae
jge
outsl
lea
out
xchg
cs
mov
sub
or
inc
adc
call
push
or
repnz
pop
out
xor
lret
andl
pop
fisubrl
jno
std
out
jg
outsb
aas
pop
dec
xor
ret
sub
lock
in
fstps
and
mov
xchg
dec
pop
fldcw
in
inc
dec
jmp
les
sub
iret
xchg
push
mov
outsl
push
ss
jmp
mov
add
mov
pop
test
sbb
in
dec
mov
rcpps
stc
sub
mov
cli
sbb
mov
fcmovu
push
lret
fcoml
pop
pop
cmpsb
adcl
cmpsl
adc
fsts
add
idivb
cmp
ret
sbb
adc
push
xchg
push
jno
stos
or
pop
data16
pop
sahf
test
out
arpl
adc
fldenv
xor
sub
fstpt
xor
rcll
xchg
icebp
dec
or
ja
hlt
pop
dec
ja
int3
push
sub
int3
hlt
and
mov
aad
add
push
add
aad
push
imul
jge
into
out
ret
mov
dec
dec
pop
aas
in
int3
mov
lock
adc
loope
xor
jge
fdivrp
nop
mov
jecxz
mov
decl
sub
mov
xor
mov
dec
outsl
push
addl
jmp
aam
mov
aam
cmp
insl
int
push
jo
add
mov
cmp
lds
pop
call
xchg
repz
mov
mov
jbe
pop
out
orb
ds
and
ljmp
push
mov
cmpsl
inc
loop
jmp
jne
inc
adc
lods
lods
adc
shr
mov
iret
pop
sti
cltd
xor
or
and
jae
adc
push
jo
insb
sbb
inc
out
out
sub
mov
push
sti
or
cmp
fildll
fists
push
pop
gs
stc
ljmp
aam
call
mov
mov
out
sbb
in
mov
push
xchg
xchg
cwtl
cli
push
rclb
int3
ljmp
sahf
inc
mov
xchg
lods
xchg
or
inc
xchg
push
sub
jae
dec
out
add
jl
sbb
adcb
out
push
xchg
adc
jl
shl
inc
je
lret
mov
push
mov
sub
ror
stos
push
popf
mov
or
data16
push
sbb
xchg
int
dec
add
dec
test
mov
leave
xlat
push
sub
les
sbb
sub
jp
dec
loop
std
xor
cs
repnz
fcompl
test
jo
test
stos
or
inc
push
or
inc
je
inc
iret
mov
incb
mov
ljmp
inc
in
fmull
sbb
and
insl
dec
jns
jne
jb
push
jb
pop
push
ss
sub
shr
jg
adc
subl
inc
xchg
aad
je
gs
leave
repz
nop
push
stc
sub
sbb
imull
in
pop
outsb
xchg
push
cmp
xor
call
push
lcall
jg
flds
cs
jb
mov
jb
iret
jnp
and
mov
call
and
cmp
lods
mov
adc
cltd
dec
pop
scas
push
xchg
shrl
scas
pop
scas
or
pop
shrb
dec
push
enter
fdivrs
jl
outsb
lret
negl
and
cmpsl
pop
xchg
jle
mov
or
push
xchg
mov
ds
lcall
pop
cmp
xor
cmp
add
das
mov
and
in
cmp
and
sbbb
cs
retw
out
fs
sbb
mov
fcmovnbe
mov
in
add
jns
jae
inc
or
mov
push
add
mov
mov
push
add
add
jg
fstpt
or
pop
sbb
pop
sub
cmp
dec
jle
or
push
add
cli
shll
mov
pop
adc
rorl
xor
dec
jno
jecxz
sub
dec
loopne
mov
ja
pop
out
lret
pop
xor
sub
push
test
shlb
out
mov
hlt
lret
outsb
cmpsb
adc
cmp
add
xor
pushf
fldl
in
pop
mov
aad
lock
loopne
push
int3
mov
cmp
test
mov
in
sub
push
rorb
jns
mov
or
repnz
xchg
adc
push
xorl
adc
cmp
sub
push
cli
pop
xor
imul
addr16
hlt
dec
add
gs
jecxz
adcb
rolb
pop
jns
cli
jmp
pop
add
fdivs
nop
out
jo
out
je
testl
inc
xchg
xor
xor
int3
cmpb
loopne
hlt
mov
std
mov
fwait
daa
aas
jns
push
ss
or
stos
xlat
inc
and
das
push
ss
fbld
fidivrl
and
inc
mov
mov
add
jbe
jno
test
test
cmp
mov
andl
std
hlt
mov
in
jecxz
lods
loopne
xlat
mov
xchg
inc
shr
and
push
int3
jmp
inc
mov
add
loopne
test
cmp
inc
pop
dec
xchg
dec
into
in
out
mov
sub
xchg
xor
mov
pop
js
mov
mov
mov
pop
ret
outsb
inc
cvttps2pi
fiaddl
xor
fisttpll
mov
jg
es
push
fcoml
shrb
inc
daa
lods
jmp
cld
xchg
fdivrs
mov
add
sbb
jle
xchg
aaa
xchg
test
dec
sub
xchg
inc
mov
mov
mov
dec
cwtl
mov
or
lock
mov
mov
mov
sar
mov
sub
jg
and
in
xor
lret
enter
andb
push
addr16
dec
popa
loop
push
pusha
jmp
test
mov
clc
or
sarb
and
imul
lods
xor
lds
call
push
addr16
imul
scas
jns
push
ds
insl
mov
movlps
outsl
ret
lods
iret
int3
add
push
scas
outsb
and
push
jge
shrb
jp
pop
jmp
pushf
cli
icebp
push
cmpsb
mov
inc
lods
cli
push
mov
push
pop
iret
dec
push
adc
jbe
inc
jmp
sub
scas
push
push
xchg
mov
loopne
loope
pop
popa
xchg
mov
push
adc
sub
loopne
inc
imul
jg
mov
xor
std
inc
push
dec
pop
js
insl
arpl
stos
add
aas
or
pop
mov
adc
and
pop
mov
push
mov
or
xchg
cmc
adc
dec
rorb
fucomip
inc
jecxz
fs
insl
lock
fwait
or
pop
add
lods
imul
pop
out
divl
cmpl
ret
cli
in
push
and
jmp
sbb
mov
push
test
vcvtps2pd
jns
and
pusha
popf
pop
mov
inc
jbe
mov
mov
adc
sbb
decb
push
cmp
jecxz
cmpb
push
lods
sub
cmp
sbb
mov
aad
insb
dec
dec
or
aad
pop
test
xor
popf
lea
adc
shll
add
mov
sbbl
bound
dec
ficoml
xor
popa
inc
dec
icebp
ss
loop
movsb
dec
inc
call
inc
mov
xchg
add
or
mov
stos
lods
test
mov
sbb
adc
loopne
add
ja
sar
fcmovb
mov
mov
fndisi(8087
sub
jp
jmp
pusha
out
fcmovne
mov
ja
xlat
sbb
sbb
mov
sub
or
pop
push
xchg
sbb
xor
pop
cmp
xor
cwtl
scas
sbb
fldl
inc
pop
cs
mov
xchg
ljmp
fildll
cwtl
add
int
fldt
cmp
sbb
jbe
jecxz
or
sub
pop
ficomps
jo
rcll
int3
push
inc
push
into
call
jmp
in
pop
jmp
inc
mov
bound
xchg
adc
aam
lds
pop
repnz
xchg
sub
jmp
jae
push
flds
filds
gs
and
adc
mov
add
jmp
xor
sarl
int3
pushf
hlt
cmp
and
lea
out
dec
nop
rcrb
in
jge
icebp
push
fcoml
out
rcrl
cli
jge
add
gs
iret
sbb
mov
nop
outsl
mov
push
xchg
call
mov
andb
rcrl
mov
loop
lods
push
repnz
push
pushf
lods
shlb
jge
jg
adc
xor
orl
jne
mov
inc
cmp
mov
enter
dec
dec
push
pushf
jle
mov
in
sub
add
push
pushl
jmp
jle
mov
dec
add
adc
loop
fs
pushf
sbb
pop
cmp
iret
push
lds
dec
xor
pop
mov
popf
xor
repnz
xor
xchg
inc
movsl
cmpsb
adc
mov
js
sub
das
mov
jno
ljmp
iret
lods
pop
push
cli
mov
sub
notl
ds
fsubrp
jnp
dec
push
lods
mov
sbb
mov
add
daa
pushf
or
inc
hlt
cltd
dec
jecxz
scas
fsts
rclb
imul
push
sbb
or
popf
mov
lcall
pop
and
nop
lock
or
call
lret
repz
rcll
fcmovnb
sbb
push
stos
out
cmp
sahf
ja
ljmp
sbb
add
mov
sahf
sub
mov
and
push
push
pop
gs
shrb
insb
pop
dec
jo
and
lea
adc
adc
mov
pop
iret
xor
ljmp
fnsave
pop
mov
push
mov
or
and
shrl
mov
jne
mov
adc
lea
pop
add
sbb
mov
mov
mov
or
xor
pop
ret
stc
lret
lea
pop
cmp
dec
divl
sub
shlb
xor
sbb
cmp
lahf
dec
cmp
test
xlat
popf
push
jmp
xor
fldl
push
push
mov
push
or
lock
or
xchg
movb
out
icebp
mov
outsl
pop
xor
orl
je
out
sub
push
jecxz
jnp
sbb
test
and
inc
scas
xchg
test
adcb
nop
std
mov
imul
es
sub
push
inc
leave
jns
stos
dec
xchg
dec
fnstsw
push
cltd
xchg
lcall
mov
mov
std
repz
sbb
ja
out
dec
mov
test
cwtl
push
mov
lret
cmp
and
mov
and
aad
mov
cmp
jnp
pop
out
lock
cltd
out
sub
in
test
pusha
xchg
jg
jnp
sbb
inc
subb
sbb
ficomps
loope
xchg
lcall
add
adc
jbe
sub
inc
xor
outsl
xor
and
mov
adcl
adc
lahf
insb
jae
fadd
push
mov
xor
popf
push
add
test
lds
mov
les
push
test
icebp
test
clc
cmpsb
mov
add
fistl
push
cltd
push
push
popa
jmp
lock
repnz
add
shr
mov
mov
and
xchg
iret
sbb
adc
sub
ljmp
ds
and
mov
xchg
cs
sub
jno
mov
jg
jbe
jmp
arpl
cmp
das
push
push
pop
inc
cmpsl
add
ja
jo
ret
jno
jle
sti
pop
enter
jle
fwait
mov
or
iret
or
mov
imul
fldl
imulb
hlt
dec
pusha
add
sub
adc
rorl
ret
stos
repz
cmp
fdivl
stc
cld
inc
mov
das
pop
imul
test
dec
and
xchg
xor
shlb
jl
imul
daa
and
jmp
pop
repnz
outsb
mov
mov
xchg
loope
jns
lcall
das
jecxz,pn
inc
fmuls
adc
mov
call
ja
dec
push
sbb
adc
sub
xchg
enter
jne
adcb
hlt
scas
mov
xor
in
imul
in
popa
fdivr
std
and
es
test
push
push
call
fdivrl
shrl
movsb
pop
xchg
cltd
cs
and
insl
js
push
scas
cli
addr16
jp
repz
sahf
mov
mov
cs
mov
push
add
bound
inc
in
push
aad
push
in
mov
push
push
sub
adc
sub
mov
int
rorl
pop
out
jg
loop
fmull
mov
push
and
mov
pop
insl
sub
lcall
push
cltd
push
dec
pushf
aam
jp
sub
loop
push
push
pop
lds
mov
jne
into
mov
out
psrlq
out
mov
mov
inc
lds
cltd
mov
mov
fdiv
daa
push
fcmovnbe
mov
cmpsl
cmp
scas
lcall
aas
mov
xchg
in
lsl
xor
push
loopne
inc
push
or
push
mov
or
mov
mov
xchg
rorb
aam
movsb
push
xchg
or
xchg
xchg
imul
fbld
dec
jmp
ds
lcall
jp
sarb
mov
addr16
cmpsl
in
lock
repz
xchg
or
push
jecxz
jne
inc
je
mov
push
or
cld
das
dec
sub
pop
xchg
sbbl
push
mov
pusha
inc
jp
jns
scas
sahf
ficompl
add
ljmp
mov
repnz
mov
jmp
sbb
lods
scas
cmp
mov
cmpsb
repz
es
mov
test
jg
ja
pop
dec
mov
xchg
pop
fistpl
test
jl
jns
fldt
test
cmp
and
inc
es
xor
mov
test
or
fcoml
inc
std
hlt
dec
test
out
call
fsubrl
cmp
xor
out
sub
sahf
jb
mov
pushf
dec
or
mov
adc
xacquire
das
sub
ret
cmp
xchg
mov
icebp
out
sbb
lods
int
mov
out
outsb
je
inc
fcmovne
pusha
and
add
jb
and
pop
sub
sub
pop
mov
mov
ja
fprem
pop
add
frstor
cmp
leave
cmpsb
dec
jmp
bound
mov
pop
or
insl
loope,pn
fnclex
dec
mov
jl
mov
cmp
repnz
cmp
cmpsb
stos
dec
and
fcmovbe
nop
repnz
daa
int
mov
insb
clc
inc
push
stc
cmp
mov
scas
out
stos
xchg
xchg
adc
mov
int3
pop
sbb
mov
call
lods
dec
push
out
inc
jmp
in
gs
out
leave
mov
ljmp
jae
xchg
sub
mov
mov
sub
icebp
and
inc
outsb
gs
push
int3
out
stos
stc
mov
push
jmp
pop
pop
imul
lcall
int
aaa
cmp
mov
outsb
and
leave
jnp
add
jb
mov
lahf
or
xchg
daa
inc
popa
aas
ret
sbb
mov
loopne
cmp
fdivrl
jge
mov
out
push
pusha
loopne
pop
imul
rep
mov
mov
pop
sbb
in
out
mov
cs
fcmovnbe
push
mov
pushf
nop
pop
inc
data16
jp
sbb
cs
sub
pop
jae
aad
sub
pusha
stos
loop
ret
adcb
jbe
fisttpl
add
push
ss
mov
inc
or
adc
mov
adc
cmpsb
push
roll
inc
jb
hlt
in
jge
sahf
fnsave
pop
adc
clc
fmull
orl
adc
das
push
sbb
shll
bound
xchg
cmpb
or
movsb
loope
int
add
add
xor
push
push
fs
push
js
xor
push
mov
push
pop
adcl
add
add
pop
xor
icebp
mov
jo
pop
sub
sahf
les
orl
xor
cltd
sub
xchg
decb
call
fcmovb
jp
lcall
push
enter
cld
std
xchg
lea
push
aaa
xor
dec
sub
test
shll
push
cld
push
jbe
sarb
adc
popf
mov
insl
adcb
outsl
adc
mov
rcl
sbb
jb
sbb
adc
lret
xor
mov
xchg
loop
fcomi
icebp
test
addr16
pop
xor
mov
mov
add
std
daa
dec
ror
inc
in
jecxz
popa
or
cmc
or
cld
leave
or
sub
js
mov
jbe
push
or
insb
sbb
dec
and
cld
or
mov
out
mov
push
sbb
inc
or
xor
or
xor
push
pushf
cmc
dec
nop
mov
push
dec
xor
mov
jne
or
xlat
out
inc
sti
ss
add
mov
jbe
mov
scas
add
cmc
or
sbb
std
mov
push
subb
sub
in
mov
aas
sub
dec
adc
dec
and
out
cld
ret
out
test
push
add
xchg
loope
adc
jle
add
mov
clc
dec
xchg
cmp
mov
dec
data16
shlb
add
xorl
adc
popf
fimuls
insb
mov
xor
sub
mov
test
jno
mov
popa
inc
or
xchg
aam
add
ljmp
xchg
and
nop
mov
fwait
aam
stos
ret
jno
test
mov
addb
inc
mov
out
mov
push
aam
daa
mov
cmp
inc
xchg
es
mov
mov
fs
xor
mov
sub
jmp
pop
jecxz
mov
aas
insb
fwait
adc
lock
mov
sbb
imul
add
fptan
lock
popa
sarb
je
popa
push
pop
mov
xchg
add
push
sbb
aam
clc
nop
fwait
les
nop
popf
or
mov
jno
and
rolb
in
and
sub
and
lret
add
loopne
push
daa
inc
pop
fs
mov
cli
xchg
inc
mov
mov
jne
sub
mov
leave
cmc
mov
outsl
add
cmp
ja
sub
mov
or
test
xchg
inc
push
sbbb
inc
int
movsl
jp
and
enter
in
frstor
sbb
movsb
mov
pop
cmpsl
mov
loope
int
pop
cmc
xor
ds
sbb
push
and
add
and
pop
test
jle
fsubrs
int3
lea
add
hlt
add
and
popf
mov
idivl
fwait
mov
jge
in
push
data16
push
iret
pop
or
fidivl
pop
mov
fs
mov
adc
movsb
push
lcall
out
popw
mov
push
jle
cmp
pop
ljmp
add
sti
and
in
mov
mov
jle
adcl
sbbb
mov
mov
mov
mov
f2xm1
les
sub
jle
push
movsl
cli
in
push
xlat
mov
lods
insb
jo
jl
insb
push
inc
inc
in
mov
cli
pop
nop
lret
hlt
push
jmp
outsl
jecxz
fucomi
mov
and
out
mov
add
stc
imul
mov
cmp
das
loopne
dec
pop
mov
mov
inc
aam
mov
ret
pop
cmp
cmpl
int3
movb
leave
xchg
sub
dec
pop
call
jbe
aaa
cs
mov
inc
xor
lahf
mov
adc
enter
ret
rolb
mov
xchg
stos
or
inc
xchg
sbb
jne
mov
mov
mov
mov
sub
xchg
insl
in
mov
stc
std
push
jp
or
adc
pusha
fnstenv
add
in
and
cmpsb
push
xchg
jne
cs
cmpsb
jb,pt
xor
sbb
pop
push
xchg
or
cwtl
push
stos
out
xchg
add
lea
xchg
mov
dec
xorl
mov
mov
inc
je
push
std
fwait
cltd
add
cld
lods
out
inc
push
aam
jle
decb
jne
repnz
mov
jne
mov
jbe
adc
pushf
mov
lret
ret
and
mov
sbb
jl
mov
pop
lcall
scas
pushf
and
ret
cmpsl
add
call
push
lock
mov
scas
and
xchg
mov
cmp
cld
ss
inc
jnp
mov
mov
cmc
orb
cmp
push
fistps
sbb
bound
imul
mov
sti
popf
pop
filds
sbb
dec
jo
aad
adc
push
sbb
cmc
aam
in
inc
sti
push
pusha
dec
popf
aaa
cmp
repz
push
out
stos
adc
clc
nop
cmpsb
xor
push
aad
push
cmpsb
ljmp
jle
mov
and
pop
adc
and
sub
push
bound
imul
es
addl
stc
cmp
or
ficoml
add
sub
cmc
lea
sbb
jmp
mov
adc
inc
jle
cmp
lret
pop
ljmp
sbb
test
sets
pop
mov
shlb
adcl
sub
jp
adc
mov
aas
cmpsb
test
inc
shl
or
outsl
pushf
out
ja
mov
cltd
inc
push
fidivl
ljmp
mov
adc
pusha
xor
in
cwtl
mov
cli
in
push
sub
int
inc
divl
bound
cs
ja
daa
scas
imul
or
mov
and
lea
cmpsl
jb
in
in
outsb
loope
lahf
add
repnz
push
imul
jne
shll
fisttpll
in
mov
ret
jo
sbb
pop
adc
ljmp
cmp
insb
adc
sub
mov
and
adc
and
mov
shlb
pop
std
fsubs
orl
xor
dec
mov
sbb
inc
or
jb
push
push
cld
mov
jbe
loopne
mov
mov
lock
js
cmp
insb
and
push
out
daa
sub
ret
sub
or
lret
xchg
jmp
in
cmp
lcall
sbb
cmpsb
arpl
or
stos
sarl
lock
pusha
test
sbb
mov
mov
jns
jnp
inc
mov
jp
or
mov
push
lea
add
inc
aad
notl
mov
mov
push
fiaddl
aas
jo
adc
xor
ljmp
lods
mov
push
cmpsb
push
test
sbb
sub
ret
mov
outsb
ja
push
int3
inc
shll
jnp
push
js
punpckhdq
cmpsl
out
lods
ljmp
out
stc
jge
in
jmp
movsl
stc
sarl
sub
mov
mov
loopne
or
and
mov
xor
insl
push
or
mov
bound
pop
xor
test
pop
popf
jns
ja
js,pn
test
ret
cmp
sub
gs
insb
nop
popa
xchg
adc
mov
inc
imul
pop
and
push
mov
mov
push
scas
pop
iret
cs
and
mov
push
je
and
adc
stos
addr16
cmc
stos
xchg
daa
out
dec
lret
ret
jns
fsubrp
testl
dec
cld
dec
or
sbb
lret
sbb
push
dec
test
test
shlb
aad
ljmp
sti
fnstcw
adc
in
sub
scas
mov
data16
mov
lds
cmp
xor
je
ret
outsl
add
out
imul
xchg
test
andb
outsb
adc
sbb
xchg
out
pop
cmpsl
adc
push
jp
out
push
inc
dec
mov
push
inc
les
mov
xchg
pop
subb
sti
add
mov
xchg
jns
hlt
int
mov
and
pop
daa
sub
lods
sbb
xchg
ljmp
cmp
test
jo
adc
jg
sub
shrb
fcoms
rorb
rolb
cmp
inc
cld
leave
xlat
cmp
shlb
pop
dec
hlt
cmp
fadds
pop
jp
mov
xchg
gs
sahf
mov
lahf
filds
sub
movsl
and
out
mov
mov
test
mov
lods
fs
emms
adcl
xor
xchg
or
sub
sbb
test
loope
out
or
repz
sbb
andb
push
fwait
call
les
sbb
push
xor
rcr
ret
inc
data16
in
scas
xor
mov
push
jl
addr16
xchg
mov
jmp
mul
cld
mov
mov
sbb
dec
pop
inc
push
mov
xlat
xorb
jns
sahf
cmp
inc
xlat
fwait
mov
cmpsl
icebp
add
inc
adc
mov
aas
sahf
enter
insl
loopne
xchg
pop
mov
enter
push
sbb
sub
loop
inc
in
push
stc
push
jmp
cmp
fsin
mov
stos
out
or
push
ja
jns
test
stos
imul
pop
test
sbb
arpl
cld
mov
cld
cmp
pop
mov
test
in
mov
add
push
lds
lods
popf
aaa
int3
bound
out
in
icebp
xor
stos
push
lahf
inc
xchg
xor
inc
inc
mov
cmp
scas
in
push
push
inc
xor
xchg
fdiv
rcll
adc
testl
in
popa
mov
cmp
popa
and
cmp
in
fwait
jg
imul
bound
cmpsl
sbb
lret
fldenv
mov
hlt
lods
adcb
mov
sbb
outsb
jns
inc
lcall
push
sbb
push
xchg
lods
jle
mov
jno
adc
imul
xchg
jp
push
inc
pop
push
bound
pop
push
ret
out
pop
push
fstpt
cmc
das
sbb
push
pop
or
das
mov
add
add
and
xor
and
xchg
adc
xor
dec
shr
fcoms
lock
sbb
out
xchg
ljmp
imul
arpl
mov
mov
lods
and
int
stos
or
push
and
aas
mov
imul
pop
lock
out
and
fsubrl
push
mov
lcall
arpl
mov
jnp
or
loopne
inc
adc
out
out
or
mov
lods
xchg
and
cmpsb
test
cli
xchg
out
and
fs
cli
or
popa
notb
fsubrs
pusha
notl
pop
clc
pop
or
mov
adc
int
adc
sub
add
orb
ljmp
sbb
pop
adc
adc
fcomps
xchg
pushf
and
adc
mov
pop
inc
dec
mov
jmp
push
and
add
scas
fisttpl
and
pop
sub
cmc
in
jl
imulb
pop
xor
iret
call
mov
pop
addl
adc
add
sbb
xor
xchg
rcr
xor
and
jl
add
in
pop
sbbl
jmp
ret
test
dec
xor
push
cmp
ds
insl
jl
cmp
or
pop
daa
xor
and
lods
lock
sti
mov
je
lods
mov
lcall
adcb
dec
shll
fsubrl
bound
push
push
jmp
xor
jnp
sarl
xchg
scas
cmpsl
or
and
test
push
imul
sbb
imul
in
fdivr
dec
add
icebp
push
jno
mov
jbe
cmp
cmp
xor
outsl
popa
pop
mov
pop
push
inc
int3
or
pop
test
mov
mov
jbe
jo
push
out
test
or
add
icebp
ja
xor
jns
scas
mov
in
sub
pop
mov
mov
pop
jle
aaa
xchg
faddl
pop
sarb
imull
cmp
not
jbe
mov
data16
pop
adc
push
enter
adc
outsb
das
push
add
cmp
jge
xchg
add
mov
push
sahf
lret
call
cmp
enter
push
fistpll
aaa
sbb
push
xor
ja
push
push
mov
sub
lea
and
es
int3
out
mov
fistl
sti
xor
ds
adc
outsl
mov
rorb
ret
filds
ret
add
insb
lahf
push
fisubl
jb
pop
jle
push
push
mov
ret
jge
sbbb
das
in
cltd
ret
pusha
dec
mov
neg
mov
je
pop
into
inc
adc
repnz
xor
jg
mov
inc
pop
or
mov
ja
xchg
cmpsb
sti
std
popa
addb
nop
test
cmpsb
or
in
push
and
nop
fwait
or
arpl
hlt
in
sbbb
in
outsl
cmp
and
xlat
fs
addr16
fwait
test
pop
int
fwait
clc
add
inc
test
hlt
test
pop
add
jae
dec
sbb
aas
in
scas
nop
repnz
dec
cld
mov
xor
push
pushf
out
fidivrs
ret
dec
pop
stos
mov
push
leave
push
in
cmp
sbb
mov
fimull
xchg
out
or
or
cmp
dec
clc
mov
sbb
pop
in
lahf
mov
leave
lds
inc
in
cmp
lcall
jmp
push
xlat
cmpb
or
or
or
inc
adc
lods
xor
pop
pop
sub
mov
or
call
sahf
loopne
mov
xchg
lret
mov
aam
jo
imul
sub
test
pop
je
pop
pop
sbb
rcrb
xchg
fnstcw
in
rorb
mov
ds
iret
push
mov
daa
ds
mov
mov
movsl
insl
xlat
fsubr
out
out
mov
insb
inc
std
jmp
mov
and
imul
stc
push
add
add
xor
rcrl
movsb
xchg
in
pop
mov
icebp
aad
aam
ja
pop
int
cmpsb
jbe
outsb
mov
iret
cwtl
repz
stos
mov
add
jmp
xchg
xchg
cmp
xchg
cmc
cmp
enter
les
aam
outsl
lods
push
pop
leave
adc
push
sarl
adc
popf
xor
adc
lret
xchg
xor
psadbw
scas
push
or
iret
add
mov
mov
loop
scas
lcall
stos
mov
out
cmp
loope
lret
into
enter
popf
addr16
jp
dec
cmpsb
push
repz
mov
lods
add
ret
mov
mov
imul
lock
xchg
adc
test
mov
jns
shll
fiaddl
mov
int
mov
mov
ss
je
jnp
in
loop
mov
cmc
mov
cld
mov
cmpsl
inc
mov
or
add
fwait
repz
scas
hlt
es
ljmp
adc
dec
cltd
aaa
cmp
cmp
je
mov
sub
shll
mov
pop
mov
mov
jecxz
inc
cmpsl
add
xor
push
mov
das
mov
aam
aad
test
mov
aaa
xchg
xchg
xchg
mov
lret
sti
ret
add
push
clc
test
mov
mov
jne
pop
adc
rol
repnz
mov
mov
rcrb
jmp
mov
sub
adc
sbb
test
cmp
lods
movsl
xchg
insl
sub
jge
out
divb
ja
out
mov
cmp
shr
mov
adc
mov
xor
data16
xor
mov
sarl
xor
xchg
push
arpl
sar
addr16
add
das
sbb
mov
int3
push
out
dec
inc
in
and
dec
aam
aaa
bnd
sub
xchg
push
xor
or
mov
js
ret
jp
inc
xchg
pop
xchg
adc
lahf
dec
dec
ja
rcll
ret
cld
xchg
mov
jno
push
sub
loop
fyl2xp1
and
bnd
sti
mov
in
mov
fs
push
enter
mov
outsb
xchg
jb
divl
push
mov
pushf
shrl
arpl
pop
das
cmp
hlt
sub
ss
jbe
sub
stos
shl
inc
les
stc
xor
mov
sbb
sbb
sub
insb
xor
ljmp
test
test
mov
mov
pop
fdivl
pusha
xchg
pop
mov
add
and
jnp
aam
push
xchg
insl
mov
or
adc
cli
inc
incl
iret
xor
shrb
bnd
xor
mov
cld
sbb
jle
or
es
pop
punpckhbw
mov
adc
push
push
xchg
vpmulhw
lahf
xchg
lods
xor
push
decl
lds
or
cmpsb
add
jge
aad
inc
pop
xchg
xchg
popa
xchg
fisttpl
or
rorl
popf
xchg
xor
data16
mov
push
xchg
data16
lcall
lock
sbb
jns
ret
mov
repz
push
xor
mov
cltd
fidivl
fnstsw
int3
cmp
jmp
dec
lret
lods
adc
mov
loop
out
adc
add
stos
jnp
outsb
mov
push
jnp
jo
sbb
iret
xor
test
test
imul
pop
loope
mov
push
mov
mov
out
inc
stos
xor
inc
pop
adc
mov
push
into
and
orl
mov
push
mov
pushf
lods
mov
cmp
sub
mov
adc
inc
push
or
sub
adc
icebp
ret
decw
in
xorl
xlat
pop
xchg
pop
popa
push
pmullw
mov
aaa
in
or
push
and
leave
out
scas
scas
out
mov
cmp
sbb
rolb
cmp
cmc
mov
int
fldt
jne
add
or
jg
sbb
pushf
inc
testl
je
imulb
fnstenv
mov
cmc
push
cltd
fsts
jbe
and
lods
stc
inc
xchg
mov
sbb
fnstenv
jg
dec
cmpsl
outsl
adc
lods
and
jb
sbb
jle
arpl
fildl
mov
arpl
and
clc
and
insl
dec
mov
inc
idiv
mov
sti
cmp
xchg
loope
sub
scas
bound
data16
xchg
sub
notb
jb
mov
fdivs
pop
and
mov
jnp
das
enter
cli
add
cwtl
fmull
push
lock
dec
ss
xchg
shrb
adc
fnsave
into
and
jp
push
jp
popa
jle
mov
lods
idivl
js
cmp
and
xchg
adc
dec
adc
and
sbb
inc
popa
inc
into
sub
popa
jbe
mov
flds
insl
es
insb
mov
in
pushf
movsb
jp
inc
outsl
push
imul
dec
fdivl
out
xchg
or
js
and
inc
hlt
pop
xor
shl
gs
inc
add
xchg
xor
mov
and
fiaddl
and
bound
push
xor
lock
xchg
mov
loop
rorb
xor
sbb
rcr
mov
jae
ja
mov
adc
loop
into
mov
ficompl
in
push
inc
jge
mov
hlt
and
stos
mov
sub
jl
mov
flds
rcll
mov
inc
jo
cld
lcall
movl
xchg
gs
std
xor
fcomip
in
sbb
repz
mov
jb
xchg
xor
je
mov
call
jns
scas
rcl
scas
lods
sub
call
shll
and
pop
sbb
mov
mov
xchg
xchg
add
adc
aam
movsb
fcompl
and
dec
add
push
arpl
lret
push
aam
cld
and
ret
rorb
xor
mov
cs
mov
sarl
sahf
int
xor
xchg
jl
mov
mov
out
jo
arpl
aaa
int3
movsb
cmp
pop
fildl
and
inc
repnz
in
stos
movb
inc
daa
shrb
xorl
mov
cmp
mov
mov
pop
rol
out
mov
push
rcrb
stos
mov
int3
inc
mov
decl
stos
ret
sti
out
xchg
scas
sarl
hlt
cmp
enter
test
add
clc
arpl
sub
mov
cmp
popa
xchg
icebp
add
sbb
xchg
out
jmp
mov
fistpl
and
pushf
movsb
fisubl
int
and
mov
pop
mov
xchg
xchg
bound
mov
mov
in
test
mov
cwtl
add
push
aad
jnp
lock
or
pop
mov
out
mov
xchg
pop
pop
push
add
or
frstor
fs
pop
int
push
lcall
xor
stos
push
mov
mov
cmp
push
sbb
lret
push
lcall
inc
fdivrs
aas
test
xchg
add
jne
jae
inc
decl
mov
bound
imul
cmp
imul
mov
sbb
cmp
sub
dec
xchg
mov
loop
popa
repnz
pop
in
xchg
cmp
inc
mov
pusha
in
jmp
push
pop
mov
out
jp
sub
nop
les
out
arpl
mov
xchg
and
sub
inc
jge
repz
ret
jecxz
cs
stos
add
out
push
iret
mul
mov
dec
jg
xor
adc
mov
lods
out
xlat
fs
adc
jge
or
xor
fisubrs
mov
inc
in
and
mov
stc
inc
insb
fists
fwait
std
movsb
dec
sarb
mov
or
mov
fcmovnu
imul
ljmp
mov
mov
xchg
leave
mov
fidivrl
mov
outsl
and
mov
or
xor
jg
xchg
test
dec
mov
insb
mov
sbbl
adc
mov
in
jno
mov
jl
jae
cmp
ss
andl
push
subl
mov
inc
addl
addr16
jp
repnz
xlat
add
and
sarb
mov
xlat
dec
out
ret
push
fistpll
xlat
xor
imul
movsl
in
xlat
aaa
xchg
das
push
jmp
sbb
jmp
and
cmp
leave
insl
cs
shll
js
jecxz
sbb
xchg
fsubrs
in
cmp
insb
inc
jg
adc
nop
xor
xchg
dec
out
in
loopne
inc
push
mov
adc
jmp
cmp
xchg
enter
xchg
dec
and
leave
jmp
rcr
dec
mov
push
sub
or
es
pop
jne
jns
cmpsb
cmp
fwait
jbe
lods
mov
pop
mov
nop
bound
dec
pop
mov
cld
xor
push
mov
inc
sbb
pop
adc
std
insb
idiv
mov
popf
add
mov
testl
mov
mov
sarl
faddp
das
xor
ss
push
pop
add
push
mov
fsubl
xchg
jo
inc
mov
cltd
test
leave
imul
push
out
test
mov
jge
xchg
dec
enter
push
je
jno
pusha
repz
lods
add
dec
imul
pushf
shlb
in
incb
pop
jmp
out
and
stc
sbb
or
and
cmpsb
mov
mov
sbb
inc
mov
scas
cltd
scas
aad
push
imul
xchg
adc
cmp
hlt
inc
mov
push
pop
lods
jae
mov
mov
and
dec
or
adc
cmpl
add
add
jmp
aas
mov
icebp
popf
xchg
addl
fisttpl
shrb
test
loope
push
insb
mov
repnz
jbe
je
mov
sbb
mov
nop
aaa
push
add
dec
je
pop
imul
fidivl
shrb
cmp
in
lods
clc
cld
cmpsb
cmp
jmp
sbb
mov
pop
xchg
mov
lea
sub
adc
cmp
and
lcall
and
jb
lods
idivb
xchg
sub
in
sti
adc
jb
pop
ret
xor
mov
jno
sub
fistl
sbbb
or
xlat
push
jl
and
jmp
mov
push
adcl
pop
xchg
sahf
inc
cld
push
push
out
or
outsl
push
or
int
xorb
pop
inc
lcall
sti
cmc
cmc
test
or
fdivl
sub
pusha
inc
pop
addb
lcall
and
lock
inc
sbb
adc
out
or
imul
out
scas
pop
xor
popf
and
mov
inc
cmp
test
adc
fistps
xchg
sub
adc
pop
mov
repz
out
sbbl
sbb
add
cs
adc
nop
jo
ss
xchg
sarl
xchg
pop
shlb
sub
dec
adc
and
push
fs
pop
mov
test
inc
stc
sub
test
and
add
int3
jnp
imul
hlt
enter
dec
loope
adc
push
or
out
filds
in
stos
icebp
popf
and
leave
rcrb
add
cld
xchg
idivl
mov
dec
sbb
push
xchg
cmp
jo
lods
add
cwtl
fldl
insb
mov
movsl
and
popl
mov
ret
mov
mov
rclb
lea
and
pop
mov
mov
sbb
inc
movsl
mov
dec
sbb
icebp
push
xor
adc
or
mul
mov
pop
mov
ds
jle
std
jecxz
ljmp
cmpsl
loop
stos
push
orl
in
rolb
rcr
xlat
sub
or
mov
sub
xor
push
pop
sbb
push
negb
hlt
cli
int3
and
dec
cmp
mov
mov
rcrl
jg
cmp
cmpl
sahf
sbb
lsl
lret
shrl
cld
mov
and
andl
dec
cmp
int
mov
aaa
jnp
in
out
cmp
outsb
xchg
in
lea
cmp
in
ficomps
rcrb
dec
inc
shlb
jl
pusha
jnp
stc
xchg
mov
pop
and
xchg
jae
push
mov
jo
les
push
add
mov
jge
push
xchg
int3
insl
nop
int
call
xorl
mov
push
push
loop
aad
std
movb
inc
mov
insl
sbb
dec
pop
and
pushl
mov
test
ljmp
ds
sbb
xchg
int
add
push
ficomps
push
push
or
insl
and
and
sub
fadds
testl
in
sub
and
imul
mov
lock
std
int
test
add
adcb
sbb
fldenv
pop
sarb
imul
push
fs
mov
mov
ret
test
mov
gs
add
mov
sbb
mov
cmp
cltd
push
or
xchg
adc
adc
jns
aam
xor
push
testl
xchg
ret
jnp
push
ftst
jne
mov
clc
das
jnp
test
push
mov
inc
mov
sbb
push
daa
popa
push
add
mov
jnp
mov
sub
pop
xchg
lds
dec
clc
sbb
cmp
lock
mov
cmpsl
fnstsw
popa
enter
loopne
mov
test
repz
or
fcmovne
loop
mov
jae
adc
mov
cmp
jno
cld
ss
mov
inc
inc
insb
repz
leave
icebp
call
mov
es
rcr
adc
lods
push
mov
adc
fs
movsb
outsl
testb
push
xchg
stos
xchg
dec
xchg
mov
in
dec
mov
aam
xchg
pop
ret
es
out
jmp
mov
adc
push
xor
hlt
bound
sub
inc
xor
jmp
jmp
mov
xchg
in
inc
les
adc
cld
push
lcall
popf
cmp
shr
cmc
out
mov
push
jmp
adc
lea
shrb
dec
cmpsb
in
clc
and
ret
or
xor
push
rcrl
add
daa
mov
sar
sbb
iret
adc
jecxz
popf
mov
xchg
sbb
lahf
inc
adc
imul
test
lahf
pop
fldl
add
mov
loope
push
inc
in
ret
loope
push
mov
lods
add
pusha
test
mov
push
out
mull
sub
cs
mov
cs
sub
add
mov
jl
push
mov
inc
es
inc
mov
test
in
test
movsl
into
pop
xchg
dec
push
or
ss
movsl
mov
movsb
pusha
cmpsl
xor
test
xor
mov
dec
cmp
push
cmp
ljmp
pop
imulb
clc
rcr
push
xchg
push
jmp
outsb
sbb
pop
add
nop
mov
gs
fcomi
arpl
jmp
dec
aad
pushf
sbb
sub
xchg
test
out
or
rcr
insb
cmp
add
mov
rclb
fldenv
arpl
rcrl
out
sbb
adc
fs
or
xor
cltd
popf
mov
or
imul
jp
mov
jg
iret
negb
fiadds
shrl
das
push
loopne
or
sbb
cltd
cli
mov
icebp
push
es
pop
inc
mov
add
push
fistpl
pushf
clc
adc
aaa
in
std
cld
pop
or
cmp
aas
push
es
in
pop
outsb
pushf
das
sbb
out
es
push
push
frstor
jecxz
sub
xorl
cwtl
pshufw
das
iret
das
dec
loope
xor
insl
iret
mov
xor
js
andb
adc
or
scas
cli
aad
sub
pop
sti
lahf
add
rolb
xchg
cld
je
push
andb
cmp
cmpsl
es
push
call
xchg
cmc
lods
or
cld
sub
push
jge
addb
sub
ret
in
shl
xchg
pop
push
mov
outsl
sub
mov
aad
dec
adc
pop
inc
insl
jge
ja
inc
push
pop
add
push
test
scas
sbb
movsb
addr16
push
mov
xchg
rorb
out
xor
out
loop
cltd
sub
loopne
push
or
shrb
in
sub
cltd
xchg
adc
aaa
scas
jnp
cmp
xchg
push
xchg
int3
in
fadd
sub
nop
shrl
sub
dec
sbb
sub
jp
lock
lahf
outsb
loope
fdivrl
sbb
popa
je
fdivr
cld
insb
ds
mov
mov
cmp
mov
and
lea
push
shrb
icebp
das
lret
sbb
jg
je
aas
add
jnp
test
fnstsw
sbb
xchg
js
cwtl
cmpb
dec
push
push
filds
lahf
test
sbb
xlat
xchg
jge
mov
cmp
pop
or
repz
lahf
cltd
imul
push
adc
mov
adc
aaa
jp
lahf
aad
xor
scas
xchg
mov
out
addb
push
js
mov
xchg
or
jg
ret
ret
dec
adc
xor
out
mov
aaa
xchg
inc
fsubs
ss
outsb
adc
das
push
popf
adc
fs
call
xchg
sti
mov
push
add
add
aam
pop
in
cld
inc
push
mov
sub
sub
dec
adc
sub
cmp
or
pop
push
pop
mov
adc
mov
in
addl
into
jecxz
es
fbstp
rcr
je
mov
rcll
cmp
rclb
inc
inc
add
mov
test
bound
xchg
les
sbb
or
addr16
xchg
push
hlt
pushf
sub
outsl
ret
push
jns
fnsave
xchg
sbb
sbb
lcall
ficompl
shll
stc
outsl
xchg
and
ret
jle
cmp
push
add
test
iret
or
jns
push
jp
cmc
push
in
sub
aas
je
pop
mov
cmpsb
fwait
outsb
pop
shrb
pop
push
in
jecxz
cmpsl
mov
pop
xchg
enter
mov
adc
pop
push
jns
faddl
xchg
jae
jmp
andb
inc
pop
sbb
and
inc
add
mov
jb
lods
int3
sbbl
lcall
test
sti
xor
fs
scas
jns
mov
cld
sbb
nop
sbb
stos
pusha
adc
outsl
push
rorl
ret
push
sbb
mov
or
or
nop
jl
loop
cld
mov
mov
hlt
lret
movsb
rcrl
cmpsb
out
lcall
add
pop
sbb
jge
lds
sti
adc
dec
sub
dec
or
std
or
or
lods
test
arpl
push
popa
push
cmc
decb
xchg
xor
pop
scas
sub
cmp
inc
hlt
sbb
sbb
pop
ja
fisubrs
mov
js
adc
sub
mov
and
leave
idivb
xor
ss
sub
sub
in
ret
inc
add
pop
js
pop
outsb
aam
jo
and
sub
rolb
push
ficompl
scas
vmovntps
divl
je
sub
push
pop
dec
jecxz
fcompl
jge
dec
sbb
imull
scas
mov
sbb
jecxz
pop
pop
divl
mov
or
mov
cmc
arpl
inc
xchg
sahf
sbb
leave
pop
jp
test
cmp
xor
add
sub
lds
push
adc
test
mov
or
cmp
mov
pop
xchg
mov
adcb
xor
int
cltd
lret
jecxz
loopne
push
cld
test
mov
sbb
lahf
add
enter
sbb
inc
push
mov
out
jnp
icebp
ret
add
ret
mov
je
lds
push
pop
pusha
xlat
out
xchg
lods
and
iret
cmp
in
sub
loopne
icebp
and
imul
gs
or
and
les
rclb
in
mov
je
adc
lods
xchg
int3
sbb
xlat
add
and
xor
lea
jge
and
fmuls
mov
rcrl
sar
mov
mov
xchg
in
ja
scas
mov
je
int3
lods
imul
lahf
in
jns
jmp
inc
mov
cwtl
or
insl
mov
push
or
aas
jo
jecxz
stos
gs
or
call
pop
jmp
mov
movsb
daa
cli
sub
ret
pop
xchg
repz
in
stos
sahf
jnp
addr16
aas
jbe
jle
jl
pop
scas
jp
xchg
insl
mov
lods
xor
xor
scas
hlt
and
div
fsts
fidivl
ror
mov
outsl
inc
fisttpll
rorl
fldl
scas
lcall
icebp
push
inc
das
inc
adc
loopne
inc
xor
iret
lods
xor
inc
mov
daa
fwait
incb
push
jbe
push
je
push
fcoms
xchg
dec
movsl
arpl
pmovmskb
cmp
pop
rcr
adc
xchg
das
pushf
pop
clc
lock
sbb
xchg
popa
stos
cmp
jno
sub
cmc
cmp
xchg
inc
stc
aad
lods
jnp
inc
and
and
jmp
scas
mov
or
mov
ret
fnstenv
out
and
cltd
int3
shr
mov
js
xchg
adc
insl
fidivrs
cmp
addb
insb
iret
adc
or
adc
call
jb
or
bound
dec
cmp
xchg
cltd
sub
rorb
mov
cmpsl
lret
bound
xor
daa
push
into
ss
addr16
fstpl
fwait
movsb
inc
dec
test
es
js
lret
dec
aam
or
sub
rcrb
push
bound
scas
sbb
mov
xor
sti
pop
mov
fiaddl
mov
ljmp
pop
ja
stos
scas
mov
adcl
inc
xchg
pushf
inc
jo
incb
or
jbe
outsl
adc
pop
sub
fwait
ss
mov
adc
inc
ljmp
push
jg
mov
pop
adc
lret
adc
push
movsl
stc
cmc
or
or
notl
rcrb
push
sub
in
xchg
in
or
inc
dec
std
out
je
sub
lods
xchg
fadds
in
inc
fsub
call
push
push
mov
data16
sbb
stos
ror
jbe
test
pushf
in
mov
xorl
lds
cmp
adc
push
sub
xor
ds
stos
cld
mov
cmc
xchg
scas
int
fldl2e
setns
mov
das
addr16
jecxz
push
inc
mov
xor
xchg
aaa
jno
testl
mov
pusha
pop
int3
add
je
mov
stos
or
into
and
aaa
mov
mov
stos
push
adc
or
cwtl
fmull
test
nop
xor
out
or
mov
pop
dec
int
dec
fdivl
pop
xchg
pop
add
xlat
nop
cmp
or
in
mov
push
in
or
out
mov
aaa
into
cmpsb
aam
iret
pushf
enter
inc
push
call
and
xchg
shl
ss
fmuls
mov
lods
in
fs
aaa
pop
cmp
addr16
sub
data16
ret
lds
xor
int3
outsb
sahf
adc
ss
xor
jnp
leave
rcrl
push
push
ja
xor
xchg
les
aad
bound
fs
jae
push
sbb
or
sub
or
cmc
hlt
add
or
fldenv
cmpl
mov
xchg
ret
arpl
jle
ss
push
jb
lea
xchg
mov
xchg
shll
push
mov
mov
fisubl
jne
cmpsl
mov
test
call
aam
xchg
outsl
inc
aaa
inc
in
adc
xchg
leave
dec
xchg
adc
mov
jmp
outsb
les
daa
mov
cmp
sbb
aaa
dec
in
incl
test
scas
out
dec
cltd
sub
fdivrl
sbb
lret
aam
jnp
xchg
mov
push
mov
cld
lret
mov
sub
add
push
pop
test
xchg
movsb
leave
add
sub
out
aaa
dec
jp
cmp
or
jne
jl
cmp
xor
test
dec
xchg
jnp
jmp
xchg
lret
mov
leave
lds
aaa
add
push
mov
pop
loope
adc
mov
ds
shrb
add
push
call
bound
sub
sarl
sbbb
xchg
inc
pop
xor
fidivl
arpl
incl
aam
es
es
pop
add
push
jg
mov
cltd
sub
sbb
in
jnp
call
push
pop
fsubs
adc
aas
xchg
outsb
adc
enter
aam
mov
push
or
fdivp
sbbb
or
stc
cvtpi2ps
xchg
imul
loop
aas
test
ficoml
sub
inc
mov
ds
jl
dec
arpl
dec
add
pop
pusha
int3
loope
lea
push
inc
add
pop
inc
lcall
les
cmpsl
stos
xchg
test
fcoms
jl
mov
cwtl
pop
hlt
imul
add
ss
dec
xchg
pop
or
js
testb
mov
imul
out
cld
ret
int3
dec
xchg
push
ss
xor
loop
data16
jge
sbb
mov
push
je
cmp
mov
cmp
mov
mov
mov
ror
xchg
mov
xor
push
cwtl
pop
test
jne
jne
hlt
insb
mov
cli
in
cmp
dec
rclb
mov
pop
iret
lcall
je
fwait
jns
sub
mov
adc
outsb
dec
push
loop
cmp
cmp
add
ss
cmp
add
insb
scas
inc
jle
cmp
test
push
xlat
jne
cmp
out
stos
cmc
inc
xchg
in
popf
movsb
jne
outsb
cli
sahf
mov
lds
rcrl
stos
es
inc
or
inc
lock
xchg
ret
push
jae
out
xor
sbb
in
dec
rorb
adc
hlt
xchg
push
pop
mov
sarl
outsb
fmuls
loopne
mov
or
sub
cli
es
mov
in
ja
orb
add
push
sbbb
jo
loop
lcall
inc
push
enter
mov
cwtl
push
shll
icebp
sub
iret
and
stc
call
sub
test
fistl
lods
dec
xor
cmpxchg
lret
cmp
xchg
outsb
divl
xchg
sub
sbb
cmc
inc
sub
inc
test
pop
mov
imul
jg
sub
mov
xor
daa
mov
loope
pop
daa
push
or
bound
scas
andb
lahf
aaa
push
gs
jae
pusha
test
jnp
fwait
icebp
and
dec
sbb
sub
leave
test
adc
ret
jmp
dec
test
mov
pop
add
and
dec
lock
mov
ret
ror
add
xor
sub
jecxz
fbld
mov
popf
fbld
aad
stc
xchg
ljmp
ret
xor
jecxz
test
jns
pop
inc
rclb
jge
sbb
fidivrs
add
sbb
lods
or
xor
outsl
hlt
idivl
push
inc
lods
faddl
pop
or
xlat
jmp
dec
xor
ret
decb
cmp
lock
jo
int3
into
aas
mov
jecxz
not
ficomps
adc
leave
divb
rcll
sub
and
flds
daa
bound
dec
int
ljmp
out
je
cmc
add
sub
mov
es
fs
mov
insb
and
imul
adc
push
test
sub
in
inc
rcll
inc
jnp
hlt
shrb
enter
jg
dec
fsub
dec
pop
in
pushf
push
jp
fs
xchg
xchg
sbb
es
je
mov
sbb
iret
popf
data16
pop
and
push
mov
mov
or
aaa
fbstp
jo
clc
aam
lret
add
and
jbe
push
push
mov
bound
inc
pop
xchg
out
add
loopne
add
das
and
xlat
cld
mov
push
sbb
pop
test
adc
add
ja
inc
fadds
fnstcw
daa
sub
test
mov
cld
ds
push
jbe
jno
inc
pop
pop
enter
xor
dec
mov
mov
sub
mov
notl
jb
out
lods
ficoml
adc
icebp
and
mov
push
test
sub
jmp
imull
mov
les
add
xchg
imul
sbb
adc
jmp
adc
xor
mov
push
divl
pushl
sub
jbe
or
sti
jnp
inc
sbb
dec
mov
jae
test
push
insl
push
mov
dec
cmp
lret
shlb
xchg
test
mov
sub
pop
test
ljmp
test
int3
sbb
sbb
adc
stos
cmp
out
inc
aad
mov
cmpsl
aaa
push
andb
adc
in
adc
out
dec
call
in
ret
jb
mov
gs
test
push
cwtl
andl
cli
in
and
movl
adc
cltd
pop
enter
xchg
dec
hlt
sbb
fcomps
out
or
fwait
xor
add
in
les
push
scas
ret
jge
mov
dec
nop
and
sahf
les
icebp
clc
cli
arpl
test
add
jae
xor
andl
fcomi
jg
xor
clc
jns
push
push
push
movsl
cmc
adc
sub
mov
dec
sti
jg
jl
inc
fninit
and
lods
or
or
test
inc
std
push
mov
push
scas
pop
gs
outsl
pop
lods
test
imul
push
xor
sahf
jecxz
out
and
mov
aam
xor
int
add
inc
pop
pusha
rcrl
sbb
xor
repnz
sbb
pop
xor
aas
repz
std
fimull
lret
ljmp
mov
int3
xchg
sahf
sub
enter
pop
fwait
out
add
jmp
and
push
int
cltd
popa
xchg
mov
outsl
jae
test
lret
pop
cmp
divl
cmpsl
aas
xchg
add
xor
push
dec
mov
stc
lods
outsb
jle
or
sbbl
neg
arpl
in
imul
fadd
jl
mov
pushf
insl
mov
inc
jae
ljmp
testl
ja
pop
push
aaa
popf
add
push
mov
push
pop
xlat
in
pop
std
imul
inc
pop
inc
or
pop
icebp
and
pusha
out
add
xchg
scas
mov
dec
push
out
lret
lods
push
xchg
les
outsl
mov
pop
mov
or
xchg
sbb
sbb
pop
push
xchg
loope
pop
xor
mov
in
decl
jno
and
ffree
xchg
fidivl
xchg
aas
aam
mov
sub
out
xchg
leave
cmpsb
stc
xor
test
stc
subb
sub
das
jl
adc
mov
nop
je
gs
addb
xchg
add
mov
std
ljmp
das
jp
in
cmp
mov
fcomps
ljmp
in
mov
int
mov
loopne
div
cmp
xor
pop
fcmovne
call
sbb
and
out
sub
mov
icebp
lahf
dec
sub
mov
icebp
test
sbb
dec
mov
test
mov
stos
das
dec
arpl
test
fdecstp
cmpsb
daa
push
push
imul
imul
mov
insl
loop
adc
xchg
bound
packuswb
add
push
dec
stos
outsl
mov
stc
lods
in
js
shrb
mov
mov
add
shll
inc
xchg
popf
xchg
cli
lea
ja
sub
cmp
adc
leave
jg
mov
pop
cs
mov
arpl
into
sarb
loopne
cld
fistpl
out
sbb
js
jp
xchg
pop
inc
sub
mov
or
xor
sarb
pop
xor
fnstenv
das
ljmp
cwtl
jb
ss
dec
popf
and
mov
shl
test
or
or
mov
stc
cmp
or
mov
data16
decb
sub
mov
and
pop
or
adc
jns
addb
mov
jno
iret
xor
sub
inc
lcall
cmp
push
push
push
dec
test
daa
pop
mov
jnp
adc
mov
aas
fnstsw
subl
pop
andb
push
lea
aam
cmpsl
cmpsb
cmp
outsb
sbb
fistl
mov
mov
jl
movsl
push
inc
imul
or
cmp
outsl
jb
jns
sbb
je
outsb
add
pop
pop
mov
adcl
and
mov
repz
insb
mov
lahf
and
dec
pop
mov
sbb
push
pop
loopne
and
out
push
add
shll
mov
pop
popf
inc
push
pop
ljmp
out
sub
dec
inc
fsubrs
xchg
gs
js
or
jbe
decl
push
mov
xor
sti
mov
cli
inc
push
cmp
out
jns
dec
push
jae
xor
and
mov
aad
mov
std
xchg
fsubr
xchg
xchg
and
push
test
lret
push
lods
clc
fsubrs
xchg
out
inc
das
into
cltd
lds
dec
imul
lock
aam
inc
sbb
fcoms
pop
loopne
push
mov
rorb
imul
sbb
xchg
mov
lock
test
xchg
imul
pop
sbb
jmp
inc
push
and
and
popa
push
jg
dec
push
das
or
push
xchg
fstps
push
jg
fcomp
leave
pop
scas
loop
mov
mov
pop
cmp
jle
cmp
pop
daa
lock
adc
xor
aaa
add
imul
xchg
ret
sbb
push
sar
out
xor
test
jl
pusha
push
mov
push
rcl
pop
mov
jo
int3
arpl
ja
jecxz
adc
lret
push
pop
xchg
xchg
dec
jae
jb
cmpsb
mov
xorl
add
std
call
mov
or
ss
sti
mov
fwait
clc
pop
loope
or
xchg
and
mov
mov
push
pushf
inc
xchg
test
repz
flds
jge
sub
loopne
ret
inc
jp
sbb
mov
fisubrs
sbb
fcomps
shl
in
mov
jbe
and
lock
jmp
inc
sahf
loope
ret
inc
add
jne
in
lds
mov
out
hlt
sbb
enter
imul
std
and
xchg
fistps
out
mov
insb
imul
fmuls
xchg
push
sub
dec
pop
xchg
int3
or
adc
jb
cmp
or
shr
adc
pushf
sub
add
mov
push
nop
dec
mov
stos
mov
or
mov
mov
sbbb
jbe
add
inc
adc
jae
jecxz
es
repnz
jne
fsubl
lret
xchg
das
ret
decl
insb
jecxz
sub
jnp
js
dec
or
sub
rclb
mov
or
sahf
push
pop
dec
and
pop
vmwrite
addr16
push
fdivrs
inc
bnd
sub
sarb
or
xor
jp
lcall
test
in
loop
in
and
lds
arpl
fs
jne
out
sbb
or
popf
mov
js
pop
add
adc
fnsave
xchg
xor
mov
pop
shl
popa
sub
hlt
jno
hlt
dec
xchg
lods
imulb
test
pop
test
jae
pusha
dec
leave
jle
orl
xchg
dec
mov
leave
add
int
cmp
pop
jnp
pop
inc
add
xlat
push
mov
out
lret
jg
int
in
sahf
in
xchg
rcrb
push
inc
mov
jbe
and
add
cli
dec
and
cmpsl
in
roll
lret
pop
sbb
cmp
movsb
jmp
lahf
adc
call
cltd
nop
bound
mov
sti
aad
mov
popf
xchg
das
mov
shrb
or
cwtl
aas
lahf
ljmp
aad
jns
mov
adc
sub
adc
mov
push
fildl
mov
cltd
test
or
lock
addr16
loope
inc
mov
or
dec
push
jge
mov
mov
or
or
and
mov
fmul
loopne
cli
nop
xchg
jge
xchg
add
jno
out
and
cmp
daa
inc
addr16
ret
xchg
lods
jecxz
pop
loop
xchg
jl
push
pop
iret
daa
inc
push
stos
imul
and
call
push
cmp
call
mov
incl
jecxz
inc
xor
dec
daa
push
movsb
in
sub
add
hlt
shl
std
repnz
cmp
cmpsl
js
adc
dec
add
and
addr16
fdivs
lret
adc
cmc
in
aas
inc
cltd
sub
jae
ret
and
cmpsl
loope
mov
ficoms
inc
jbe
in
sub
sub
lods
mov
lea
fdivp
lods
aam
adc
dec
popf
xchg
cmpsb
mov
inc
adc
enter
xchg
mov
add
mov
fadds
mov
out
pop
andl
push
loope
sarb
movsb
sub
test
or
iret
and
test
das
cli
push
ljmp
xchg
pop
mov
xor
outsb
or
outsl
sub
jb
inc
imul
es
daa
mov
leave
in
lea
sub
jne
sbb
movsl
push
inc
xlat
outsb
sbb
jno
or
add
dec
in
addb
push
popa
mov
lods
aad
pop
xchg
imul
fwait
xor
cmp
addr16
adc
push
cmp
fnstenv
inc
imul
out
idivl
push
daa
xlat
into
out
mov
cmp
adcb
jp
or
inc
sub
mov
jecxz
inc
fsubrl
adc
leave
mov
mov
lahf
loopne
sub
es
pcmpgtb
ret
sbb
push
jl
or
out
leave
rcl
int
not
jnp
mov
and
and
dec
push
shll
sbb
push
inc
adc
dec
sub
and
loope
cmpsl
cltd
clc
inc
xor
sub
clc
cli
add
xor
xor
out
mov
sbb
ss
push
movsb
and
push
lret
fwait
jne
lds
add
leave
in
pop
arpl
jnp
test
faddl
insb
rorb
out
jmp
in
or
loopne
jmp
je
jle
fnstcw
push
or
xchg
cmc
pop
push
addr16
sbb
dec
pop
jnp
inc
test
jns
and
mov
shl
push
movsb
xrelease
mov
data16
mov
push
divl
call
ja
sub
xchg
aad
jl
sub
arpl
mov
mov
int3
hlt
fisttpl
ljmp
fmull
push
lret
xchg
add
jne
or
test
mov
push
insl
jle
shrl
mov
das
jns
inc
and
inc
stos
cli
jg
imul
adcl
mov
out
cltd
jbe
sbb
arpl
aad
test
mov
jg
lahf
shll
sahf
jge
jecxz
adc
sub
or
fdivr
int3
loopne
pop
fs
push
mov
mov
hlt
dec
inc
inc
mov
jp
sub
mov
cmp
push
sar
out
or
ds
xor
jo
mov
add
pop
lods
and
xor
cmp
xlat
test
xchg
lahf
add
popa
jno
push
mov
mov
inc
mov
push
std
fwait
divb
hlt
add
in
mov
cs
imull
pusha
jmp
div
xchg
sbb
push
sub
adc
idivl
iret
xchg
repnz
xchg
pusha
sub
mov
aad
addr16
dec
aas
imul
pop
add
popa
jl
enter
stc
add
jle
jge
jbe
push
dec
iretw
pop
movl
je
int
mov
outsl
inc
or
dec
leave
insb
sub
mov
push
inc
or
aaa
jb
insb
dec
jge
popf
add
add
js
fimull
and
xor
mov
icebp
dec
sbb
out
adc
pop
add
jno
jbe
in
daa
fisttps
xor
xor
jns
mov
or
ja
rcl
test
inc
sub
aam
pop
enter
not
cwtl
pop
pop
pushf
adc
cli
mov
sbb
mov
call
out
les
lret
sar
sub
push
sar
or
mov
xchg
test
jg
ret
sti
repnz
ljmp
loop
jns
movsl
adc
mov
stos
adc
scas
out
sbb
push
dec
sub
lods
stc
add
ret
daa
xor
xor
imul
mov
rorb
jp
clc
in
lret
and
inc
pop
cld
in
js
xor
sbb
popf
mov
sub
mov
imul
imul
push
push
into
enter
dec
adc
cmc
sub
pop
or
cld
idiv
adcb
jns
mov
or
mov
push
cmpsl
sbb
data16
jg
lea
jb
cmc
ds
hlt
dec
in
jp
insl
rclb
pop
imulb
fldenv
insl
std
fldcw
or
sbbb
aaa
jp
or
mov
dec
adc
bound
xchg
rorb
add
mov
mov
mov
repz
dec
fsub
jnp
repz
insb
push
arpl
in
addb
jg
int
xorl
mov
mov
mov
mov
adc
xor
sbb
stc
pop
adc
jl
xchg
mov
mov
xor
bound
mov
jno
stos
enter
movsl
aaa
incl
mov
das
pop
and
movsl
ret
cltd
movsl
outsb
leave
adc
push
pop
jmp
je
bound
es
inc
dec
mov
shrb
sub
icebp
insb
xchg
or
jle
jnp
imul
inc
push
xchg
jbe
es
popa
scas
mov
mov
sub
aam
push
sbbl
adc
mov
inc
bound
sub
test
icebp
mov
test
mov
cmp
push
or
push
aaa
mov
lds
in
jge
popf
fdivl
addb
fucomp
push
sbb
inc
outsl
mov
dec
lahf
jl
mov
jae
lods
cmc
inc
inc
arpl
jnp
xchg
aad
ss
fisttps
xor
cmp
cmp
call
cmp
sub
jg
inc
out
outsb
out
or
inc
inc
or
sbb
xor
lea
xor
adc
sarb
lret
das
jne
push
cld
mov
dec
sar
loop
push
in
cmp
xorb
insb
sbb
movsb
or
add
dec
add
xor
int3
push
out
sub
jg
aas
jns
pop
xor
lahf
addr16
ss
fwait
popf
in
jmp
stos
shrb
fstps
outsl
out
cmpsl
inc
in
cld
fs
cwtl
cmp
ljmp
pop
adc
das
push
push
push
cmp
sub
push
lods
stos
xchg
lret
jne
fucomp
in
push
ror
shlb
rolb
push
aas
fucomip
xorb
lock
dec
mov
and
out
xor
test
in
mov
fistpll
insb
stos
mov
jae
mov
mov
or
add
dec
fldenv
out
jle
aas
jb
jl
pop
jae
nop
mov
mov
push
aad
jae
or
inc
xor
dec
aad
jp
flds
and
into
mov
hlt
aad
test
or
in
aas
and
movl
loopne
adc
or
add
add
lock
lret
fidivs
into
xor
fnstcw
jno
pop
sbb
addr16
fisubl
push
ror
movsl
sub
cmpsl
je
mov
jp
adc
stc
gs
jae
jecxz
mov
cs
xchg
ss
dec
lods
out
jmp
sahf
test
aad
jne
loopne
lret
loope
mov
incl
and
stos
mov
in
add
ss
jns
out
in
iret
inc
pop
in
mov
adc
in
and
nop
sbb
nop
mov
push
cmp
aad
fwait
adc
pop
dec
inc
ds
cs
pop
mov
mulb
pop
mov
lret
mov
dec
mov
fidivrs
xchg
or
mov
lock
dec
mov
pusha
clc
sbb
jmp
stos
mov
hlt
lahf
pop
jns
jo
pushf
orl
inc
and
adc
mov
xor
pusha
mov
adc
shlb
ret
pushl
sti
imul
dec
js
cmp
pmovmskb
mov
xchg
mov
out
inc
fstpt
enter
sbb
and
xchg
push
out
decl
cmp
sbb
xchg
and
adc
call
aaa
add
btc
fucomi
stos
mov
aam
paddsw
ret
fdivr
outsl
xchg
aam
fxch
and
gs
push
cmp
add
mov
push
fadds
popa
cwtl
das
or
or
mov
mov
sbb
mov
sub
add
dec
or
std
jbe
filds
sbb
leave
cmpsb
imul
fdivs
mov
std
jnp
mov
call
mov
xor
test
adc
pop
or
imul
sub
int
nop
pop
push
dec
push
cmpsl
mov
jb
jg
mov
pop
xchg
cmp
inc
das
xchg
aam
mov
jno
mov
lcall
xchg
xchg
jbe
xchg
push
and
repz
add
pop
push
arpl
aad
sbb
sbb
fnstcw
dec
jnp
arpl
inc
call
adc
pop
and
jbe
or
and
mov
test
ror
inc
popa
dec
mov
ja
dec
inc
mov
insl
push
push
mov
pop
mov
xor
mov
shlb
xlat
push
loopne
in
out
jbe
push
fistpl
in
out
call
lcall
es
pop
or
pop
mov
push
mov
pop
dec
xchg
loope
int
mov
ret
imul
jo
ljmp
test
xor
les
xchg
xchg
jmp
dec
addr16
dec
pop
jp
adc
jbe
lock
jecxz
test
jo
push
nop
cmp
mov
pop
xchg
sbb
leave
mov
add
or
adc
in
dec
inc
call
int3
sub
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
sbb
loope
outsb
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fneni(8087
fisubl
jg
iret
cli
push
sub
dec
stos
jo
mov
and
shlb
repnz
addl
fildl
fucomi
dec
jl
push
cmp
nop
push
sahf
dec
mov
lods
mov
jae
cmp
cmovs
roll
std
jne
cmp
popl
jmp
and
add
dec
inc
add
push
daa
jne
push
sahf
dec
xlat
mov
fisubrs
xor
jb
cmpsb
unpcklps
push
int
inc
cmp
pop
ds
inc
mov
cld
dec
jl
push
add
call
push
xchg
jno
insl
fildl
fucomi
jno
cmp
fisubl
shrb
add
call
push
xchg
jp
fildl
cmp
jno
insl
cwtl
mov
out
push
xchg
je
insl
fildl
call
push
xchg
jno
insl
fiaddl
fucomi
jno
insl
fildl
jmp
insl
flds
fwait
imul
test
insl
fistl
fucomi
lret
mov
jno
insl
fildl
fucomi
jne
popa
fistpl
call
push
rorl
fildl
fucomi
jno
insl
fildl
fucomi
sti
lods
out
push
xchg
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
cmc
jbe
nop
scas
mov
jp
insl
lret
add
call
push
xchg
jno
sub
mov
push
shrb
sub
fwait
test
xchg
adc
insl
fcmovnb
shr
fcomi
out
push
jne
insl
fildl
fucomi
jno
insl
fnclex
cmc
lcall
jno
insl
fildl
sti
in
mov
int
insl
fildl
fucomi
jno
sub
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
jno
insl
fildl
fucomi
fisttpl
test
push
mov
add
dec
add
pop
loope
xchg
push
xor
dec
out
xchg
stc
pop
jb
xchg
jmp
cltd
sbb
cmp
dec
movsl
xchg
push
mov
pusha
cmp
jecxz
xlat
orl
pushf
js
jns
stos
ret
ret
sbb
or
nop
adc
dec
add
dec
mov
fildll
mov
das
jle
lock
mov
or
mov
inc
mov
mov
sti
aas
orl
and
jbe
xor
dec
repnz
xchg
enter
mov
inc
adc
loopne
iret
push
pop
sub
outsl
dec
imul
inc
push
mov
dec
cmp
or
or
fldt
lahf
not
push
pusha
mov
fmulp
mov
jl
pusha
imull
pop
inc
les
push
push
push
popf
jae
push
jl
dec
fs
scas
loop
inc
ja
inc
pop
or
outsl
sbb
out
jge
in
sbb
int
adc
sti
push
sub
adc
xchg
mov
push
sub
adc
and
push
xchg
mov
out
lahf
nop
lods
sbb
fldenv
jbe
mov
push
sahf
xchg
add
cmp
xchg
popf
xchg
insl
jp
xlat
xorl
scas
imul
cmp
and
je
sbb
mov
jns
push
fsub
sub
xchg
mov
stos
dec
iret
pop
insb
ret
add
fldenv
movsl
andl
cmpsl
dec
fcmovnbe
xor
jecxz
or
aas
ficompl
push
mov
in
scas
out
xor
in
push
push
outsl
insb
into
jne
add
xchg
push
les
add
sub
push
fs
pop
cmpb
and
add
pop
std
out
jmp
or
outsb
jae
stos
mov
leave
xor
cmp
push
mov
test
push
push
add
jl
ret
inc
and
adc
mov
pushf
jmp
mov
mov
aas
fsub
ficomps
loop
xchg
dec
push
pop
ret
daa
adcb
addr16
mov
loopne
int
adc
aad
lods
ret
dec
mov
or
xchg
mov
pop
jecxz,pn
push
or
or
cmp
mull
sub
outsb
and
push
ret
lret
xchg
adc
push
lahf
pop
xchg
pop
fcomps
insl
pop
fadd
xlat
scas
inc
cmp
aaa
andb
pop
jg
into
sbb
or
popl
fwait
hlt
lahf
rorb
mulb
and
push
jns
adc
dec
push
or
loope
mov
repnz
push
les
mov
lods
fdivrl
mov
in
sbb
clc
lods
fdivrl
xor
mov
jmp
out
and
xchg
fsub
mov
or
jecxz
push
pop
sbb
dec
fstl
movsl
andl
sbb
inc
lods
push
adc
push
aas
gs
xchg
inc
sti
fbld
and
lods
out
fs
dec
sub
sahf
hlt
mov
daa
leave
lock
out
sub
mov
adc
sbb
mov
ret
xor
les
test
and
shr
je
jg
sub
dec
repnz
sbb
shrb
pop
and
mov
andb
fwait
adc
xor
and
lcall
adc
sub
cmp
fildll
sar
je
ljmp
pop
sub
xor
loope
test
cltd
xchg
push
and
ret
aas
mov
mov
push
or
repnz
movsb
imul
add
and
or
mov
and
pushf
mov
cmc
cmp
int3
xchg
aaa
cmpsl
nop
outsl
jns
cmc
ror
arpl
out
dec
sub
ffree
lea
repz
sbb
les
mov
cmp
repz
lcall
add
push
rcrb
sub
fistl
ljmp
xchg
adc
popf
pop
pop
and
addl
enter
dec
in
jbe
mov
or
in
adc
and
scas
lock
add
pop
push
mov
sti
pop
mov
test
xor
cmp
mov
mov
les
pop
repz
mov
cmp
mov
icebp
lahf
ret
cmc
or
fwait
arpl
hlt
stos
jnp
fildll
es
nop
out
int3
xchg
imul
push
ds
jno
aad
into
lret
pop
sbb
xchg
mov
jno
aas
add
enter
jge
outsl
add
jecxz
in
lret
pop
addr16
xchg
sbb
fbld
sub
jne
stos
fcomps
adc
dec
pushf
or
sarb
pop
inc
pop
aam
push
lods
sbb
ds
mov
ror
pop
frstor
sti
test
xlat
sbb
btr
es
pop
adc
int3
mov
jmp
outsb
insb
or
sbb
hlt
mov
call
adc
pusha
xchg
ss
or
and
xchg
push
xor
and
adc
cs
or
push
cmp
jecxz
cltd
ds
mov
mov
hlt
push
dec
in
fcomps
cmp
cld
adc
cmp
or
rclb
ret
sahf
add
and
xor
dec
stos
clc
out
mov
inc
inc
or
lods
cmp
jnp
leave
push
repnz
xchg
adc
adc
mov
dec
jb
jmp
fcompl
xor
or
stc
or
mov
push
xchg
mov
sbbl
pop
add
jo
sbb
xchg
mov
mov
sbb
cmp
movsb
mov
or
mov
add
fld
call
pop
pop
rep
mov
scas
dec
out
push
dec
xorl
sub
jg
or
push
push
fsubrl
push
mov
dec
popf
adc
pop
in
adc
rcl
sub
jmp
lea
inc
scas
push
dec
loop
dec
cmp
fdivp
js
ja
mov
std
and
mov
mov
pushf
mull
js
out
std
sbbl
fmul
sub
stos
xor
loopne
in
pop
mov
std
arpl
sub
in
je
je
dec
jo
cmpsb
xchg
jg
pop
jg
jge
out
dec
push
sarl
pop
xchg
cmpsl
xor
stos
and
adc
cli
jge
leave
into
lea
arpl
mov
cwtl
sti
adc
xchg
push
es
test
sub
fwait
sbb
vpavgb
repz
andl
or
mov
imul
xor
fstpl
and
pop
nop
add
loopne
ret
ds
dec
push
jg
shrl
mov
mov
ss
jecxz
dec
adc
mov
cmp
push
hlt
inc
cmp
shl
sbb
insb
mov
add
scas
test
stc
icebp
mov
lds
xchg
fwait
pop
jle
loope
jbe
aam
inc
pusha
mov
cmp
push
aaa
xlat
jp
mov
aad
xchg
roll
das
push
loopne
and
hlt
aas
jnp
pop
into
hlt
repz
pop
pop
leave
in
leave
mov
sub
push
stc
sbb
sarl
adc
int
fidivl
sub
test
and
fsubrl
icebp
mov
ss
mov
sbb
pop
jp
lods
dec
call
fwait
push
xchg
push
xchg
mov
push
insl
je
imul
push
ret
cmp
cwtl
addl
sub
xor
sbb
cwtl
or
inc
adc
mov
ss
mov
cmpsb
xor
xchg
je
movsl
ret
or
insb
std
out
loope
xor
push
add
mov
sar
inc
cmpsb
add
add
sahf
out
mov
sbb
pop
pusha
fucomp
insl
jecxz
pop
mov
call
inc
mov
xorb
data16
addr16
ret
push
lcall
ss
enter
outsl
jl
mov
dec
jne
pop
add
sub
xor
sti
dec
setns
out
lods
outsb
sub
adc
repz
test
daa
cli
xchg
cmp
inc
or
imul
sarl
jnp
sarb
movsl
or
rcl
ja
add
jne
dec
and
push
in
js
leave
mov
scas
mov
cmpsb
into
xchg
sub
xlat
lret
and
mov
mov
push
jb
into
or
push
test
inc
push
fdivs
std
icebp
mov
ljmp
dec
movsb
mov
shrl
incb
iret
pop
xchg
cmpsb
sub
std
xchg
cmpl
push
xchg
sbb
out
repnz
loop
inc
xchg
popa
cmp
es
int
std
xchg
add
scas
scas
in
dec
mov
out
insb
jl
pop
or
sbb
mov
or
cwtl
imul
lret
test
int
sahf
enter
or
std
sub
xorl
dec
ss
call
or
jmp
insl
mov
pusha
repz
cmp
jno
mov
repz
or
push
scas
mov
jl
mov
testb
in
lds
lods
dec
dec
xor
jg
aam
pusha
adc
out
push
push
pcmpgtb
or
cmpxchg
mov
jle
mov
test
dec
xchg
daa
or
clc
adc
jns
sbb
cmc
mov
xor
rclb
push
stos
dec
mov
loope
adc
xor
rcl
xor
dec
js
outsl
and
leave
xchg
loop
aam
into
rcrb
adc
mov
push
jl
jo
inc
xor
roll
sub
mov
rcl
or
fmul
fisubrs
in
add
add
lcall
cwtl
rcr
cmovp
cmp
lods
dec
imulb
mov
out
aaa
out
push
or
pop
push
scas
out
pushf
dec
add
lods
test
lret
je
clc
xor
sub
iret
jmp
lods
push
pop
xchg
push
jb
in
jne
aad
rorb
mov
movsb
popa
xchg
pop
cmp
clc
or
cwtl
leave
bound
mov
cmp
insl
mov
das
mov
push
gs
push
fstps
mov
mov
test
and
imul
aam
jl
sbb
repnz
punpckhbw
dec
mov
cmp
dec
xchg
leave
sub
xor
lds
xor
fistl
cltd
inc
lds
out
popf
pushf
mov
lahf
pop
out
xlat
cmpsl
arpl
and
mov
xor
cs
lret
dec
push
mov
adc
clc
sbb
add
cmp
into
or
mov
ds
add
mov
das
shr
push
or
jnp
add
insb
les
popa
or
in
in
inc
hlt
outsb
dec
push
fildll
in
cmp
les
xor
dec
cmp
nop
xchg
addr16
and
inc
std
jle
imul
cli
les
jge
cli
xor
hlt
movsl
stos
gs
xchg
push
scas
or
movsl
fucompp
incw
or
mov
enter
xchg
insl
xor
add
mov
inc
and
mov
inc
inc
dec
jb
and
add
cmp
mov
pop
outsl
movsb
daa
and
es
fwait
xchg
pushf
pop
or
lahf
sbb
popa
int3
ficomps
jb
scas
aaa
push
dec
mov
and
dec
mov
adc
mov
mov
push
aaa
sbb
andl
shll
or
notl
add
dec
sbb
cmp
mov
fiaddl
imul
inc
lods
ja
jmp
xchg
adc
sbb
push
adc
push
clc
rcll
out
xchg
xor
adc
sbb
in
xchg
mov
add
mov
xchg
and
jo
gs
and
negl
sarb
rol
xlat
fsubs
cmp
lcall
adc
adc
into
out
bnd
sub
push
inc
jle
fs
cmp
sub
call
fmul
mov
sub
mov
loopne
outsb
mov
bound
lea
mov
pop
inc
jne
shrb
ret
jb
sti
mov
and
std
fsubs
rorl
inc
or
jmp
cwtl
push
cmp
sbb
or
clc
es
out
pusha
cmc
mov
outsb
and
or
imul
shlb
pushf
outsb
in
out
es
out
stos
mov
adc
adc
les
cmpsb
mov
mov
pop
sahf
repnz
lret
dec
push
add
push
mov
ret
outsb
sbb
imul
in
and
xor
outsl
lods
mov
inc
xchg
mov
mov
aam
dec
adc
xchg
mov
jns
out
testl
jle
fisubl
hlt
inc
mov
or
aad
push
jp
aas
mov
mov
lahf
add
je
push
sub
test
or
imul
lods
popa
cmp
scas
or
cmp
ds
pushf
sub
or
mov
rcr
hlt
orl
push
inc
fcmovne
mov
jns
mov
adc
outsb
jbe
push
jecxz
mov
jno
scas
lock
jle
pop
sahf
icebp
and
enter
push
ja
imul
cmp
mov
push
cwtl
dec
jp
mov
mov
std
push
dec
out
sub
mov
and
stc
cmp
push
sti
jp
add
out
or
out
pop
and
outsb
sbb
outsb
cwtl
inc
push
incb
mov
add
jo
sub
lods
sbb
bound
lods
das
aas
jae
mov
call
push
std
mov
jge
push
pop
mov
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
