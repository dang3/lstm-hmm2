push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
adcb
cmc
bound
rcll
adc
jae
stos
repnz
adc
jo
data16
push
mov
jo
mov
in
jmp
dec
dec
sub
lret
pop
mov
ds
fnsave
mov
adc
cld
ja
mov
lock
sbb
cmp
and
rorb
mov
xor
add
jp
lods
mov
ficompl
repz
sbb
arpl
out
dec
inc
ret
adc
in
std
sub
js
add
gs
data16
jbe
ja
mov
inc
push
xlat
mov
sbb
inc
add
movsl
mov
pop
adc
and
mov
push
push
mov
or
push
jle
pop
or
and
lock
test
push
movsb
push
adc
orl
xorl
push
pop
and
mov
daa
jmp
adc
or
xor
add
xor
sub
aam
les
fsubs
outsl
sarl
pop
xchg
push
stos
sbb
fadd
jecxz
pop
insb
ss
or
jl
push
loop
test
mov
jge
mov
xor
stos
aad
mov
and
mov
addl
stos
pop
cmpsb
xchg
sub
sub
push
mov
rcrb
test
xchg
rorl
pop
aas
in
push
add
push
out
sub
stos
hlt
xcrypt-cbc
cmpsl
push
sbb
or
and
lods
inc
lahf
jns
mov
push
and
fadds
push
mov
sbb
pop
fs
and
inc
push
pop
mov
shll
movsb
lock
mov
xchg
dec
jecxz
mov
mov
test
xchg
ret
sbb
out
cmp
pop
stc
mov
jp
arpl
imul
jp
xchg
mov
pop
xchg
insb
jbe
mov
pushf
push
push
das
fiadds
add
bound
jg
addr16
in
pop
stc
or
cmp
adc
in
or
xlat
cmp
test
jns
sub
mov
in
sbb
push
imul
mov
lret
cmp
xchg
sub
push
dec
jnp
ds
sub
cmove
jnp
cltd
das
pop
iret
js
int
sub
jl
hlt
loopne
push
push
lret
push
add
ja
lahf
pusha
popa
sti
rolb
or
popf
int3
xor
mov
imul
and
jne
shll
or
jl
or
sub
or
pop
incb
in
fists
lret
sbb
and
iret
fisttpl
push
call
xor
std
mov
xchg
divl
dec
cltd
sub
adc
js
pop
mov
mov
push
push
or
test
xchg
mov
imul
rorl
mov
movsb
dec
or
frstor
adc
aaa
int3
lret
jmp
add
stos
mov
and
xor
sbb
das
jl
adc
jne
adc
add
in
in
out
mov
inc
xor
mov
jmp
add
adc
sub
inc
dec
dec
mov
lea
fildl
outsb
pminub
orb
adc
fsubs
scas
outsl
cs
fimuls
fadds
xor
add
jp
or
inc
or
sub
iret
leave
push
mov
fcompl
jno
cli
jmp
test
adc
fmull
icebp
fs
shll
push
popa
nop
jge
adc
xor
xchg
popa
in
mov
mov
imul
sub
out
ret
filds
fisttps
call
cmpl
jbe
fistpll
phsubw
jmp
rcl
sub
int3
les
dec
gs
pop
cmp
imul
cmp
cmp
or
push
xchg
jp
loop
movsl
outsb
xchg
nop
gs
pop
in
cmpsl
push
mov
nop
in
lret
pop
sbbl
mov
jl
jne
out
jecxz
dec
test
sub
mov
aam
in
lods
jecxz
or
jg
jp
adc
int
xor
cld
rolb
jne
mov
add
push
cmp
cld
mov
out
mov
pop
pop
int
rorl
lahf
es
out
movsl
or
push
mov
pop
cmp
enter
int
xchg
inc
cs
jne
shlb
loope
out
xchg
cmp
pop
and
into
pop
test
call
popf
setne
pop
xchg
mov
mov
outsb
in
pop
idiv
adc
push
xorl
push
les
xor
add
xchg
jb
mov
dec
or
cmp
mov
fiaddl
adc
pop
aaa
mov
cmp
inc
lahf
or
sahf
shrl
dec
add
fimull
clc
test
pop
pop
cmp
dec
fs
roll
lret
ja
mov
push
sbb
imul
rorl
cmp
sbb
daa
fbstp
into
int
push
xor
adc
aas
movsl
push
arpl
ret
insl
cmc
xor
test
sub
xchg
and
xchg
lock
mov
xchg
sbbb
pop
repz
cmp
loopne
push
cmp
or
mov
push
jno
out
add
fmull
imul
xchg
iret
and
dec
cmpl
xchg
stc
andb
push
ret
sub
adc
pushl
and
rcl
in
mov
js
lcall
jb
js
in
lods
out
repnz
scas
imul
lahf
push
jb
imul
pop
pand
mov
shl
idiv
cltd
in
mov
in
lds
push
mov
mov
mov
push
inc
adc
xchg
popa
inc
push
pop
mov
jnp
pop
mov
loop
mov
sahf
divl
push
dec
jne
lods
adc
mov
aad
jno
jmp
movsl
aad
jns
into
shlb
xchg
std
sub
adc
gs
mov
bound
cmpsb
jle
add
das
push
dec
repnz
and
es
test
mov
mov
pushf
mov
or
jns
stos
xchg
fmulp
jecxz
ret
and
aad
push
dec
es
in
cs
jnp
fs
add
push
ret
icebp
add
cltd
sub
sub
dec
scas
lahf
push
into
test
mov
mov
mov
leave
aaa
hlt
sbb
add
xlat
leave
fldt
leave
fbstp
pop
popa
cld
mov
pop
dec
xchg
hlt
into
std
adc
cltd
sbb
std
xchg
loope
call
adc
or
jo
cmp
xchg
enter
mov
mov
dec
lods
outsb
and
icebp
fcomps
int
aaa
jmp
inc
or
jge
or
dec
push
aaa
test
enter
or
cwtl
pop
addr16
sbb
mov
popf
ror
adc
mov
lahf
ljmp
dec
scas
adc
mov
cltd
cmp
jge
adc
cld
in
push
jne
push
add
push
push
mull
and
mov
mov
movsb
or
xchg
pop
push
pop
inc
cmp
push
push
jp
push
aam
bound
push
add
loope
je
test
lret
or
popfw
and
or
stc
bound
fwait
mov
mov
cmp
out
pop
stos
pop
xorl
popa
add
pop
pop
jg
xchg
test
mov
outsb
repz
mov
xchg
mov
mov
in
fwait
mov
pop
incb
mov
fdivp
sti
idivl
cltd
jb
xor
imul
jecxz
fidivl
adc
call
xchg
lahf
les
jg
ja
sub
scas
icebp
dec
out
cmp
or
je
xchg
aad
rorb
mov
xor
mov
mov
dec
inc
xchg
sbbl
xchg
icebp
push
outsb
mov
and
mov
cld
jle
sbb
jp
iret
addr16
test
adc
in
push
movsb
mov
xor
sbb
jb
fmuls
hlt
rclb
sub
and
fsubl
movsb
pusha
mov
in
jmp
ror
xchg
out
xchg
sbb
mov
movsb
and
dec
inc
inc
or
add
gs
or
jne
dec
pusha
call
mov
sbb
jae
jg
or
fsubr
cmc
insb
stos
mov
mov
les
and
ss
jmp
mov
xor
rorl
cmp
arpl
rcrb
pop
popf
lcall
lods
cmp
mov
call
push
jecxz
fbstp
ss
in
mov
push
cmpsb
pusha
mov
addb
orl
pop
mov
xor
nop
push
xor
loop
jo
outsb
cli
sbb
dec
xchg
repnz
test
mov
addr16
pushf
aas
mov
or
daa
inc
sbbb
sti
pushf
pop
movb
xor
lcall
subl
aaa
mov
sub
mov
stos
adc
inc
decl
mov
movsb
mov
notl
shl
nop
xchg
add
mov
sti
scas
out
clc
jg
dec
xchg
mov
push
leave
in
push
insl
mull
fildll
pop
sub
add
push
dec
leave
jnp
sub
jmp
cmpsb
mov
pop
mov
sub
jle
cmp
push
cld
xchg
cwtl
incb
jns
call
rolb
add
cli
call
fisttpl
cld
xchg
and
push
push
jo
cmpsb
addl
sub
cmp
testb
cmp
pop
dec
push
mov
subb
popa
or
mov
cmp
lock
or
dec
push
push
aas
mov
add
add
cwtl
ss
icebp
mov
cwtl
rcl
add
lcall
popf
mov
jno
adc
mov
adcw
push
shlb
jmp
mov
jmp
xchg
repnz
add
sub
mov
xor
loopne
clc
mov
faddl
stc
fldt
xor
aam
sub
push
int3
or
mov
popa
cwtl
movsl
daa
mov
mov
xchg
ljmp
pop
lret
adc
and
pop
jecxz
test
sbb
fdivrl
sti
ds
lret
push
daa
jmp
shll
fs
mov
stos
ret
push
mov
mov
repz
jl
daa
fwait
xchg
xor
shrl
andl
sub
fimuls
popf
and
test
movsb
adc
mov
mov
add
push
movl
cmp
call
push
sarl
js
dec
cmp
pusha
fcoml
jbe
andl
or
lret
dec
imul
ljmp
aad
cltd
out
jae
cmp
adc
lock
sub
inc
push
leave
push
lahf
roll
out
cmp
mov
cmp
dec
fwait
dec
mov
lret
inc
jbe
into
shll
pop
sahf
cltd
mov
loop
sub
jbe
or
leave
stc
and
leave
mov
inc
mov
daa
lods
aad
rclb
pop
push
push
dec
in
sbb
stos
push
icebp
outsb
mov
daa
addr16
fucomp
ljmp
fs
adc
test
stos
aam
ljmp
call
mov
xor
jno
dec
inc
mov
fsubrs
sub
sbb
adc
arpl
cmp
or
mov
jle
adc
inc
ja
es
xlat
or
addr16
out
out
mov
js
je
ds
mov
inc
ds
sbb
cwtl
insb
or
sbbb
mov
repnz
das
pop
in
loop
addr16
int3
sbb
mov
minps
addr16
or
xchg
call
or
das
jmp
or
mov
push
xlat
dec
cld
xor
lods
cmpb
test
mov
mov
bound
repnz
and
inc
sub
inc
sbb
ljmp
jnp
ret
popf
inc
push
push
mov
sub
jecxz
jno
add
and
stos
inc
jno
test
int
jne
mov
popa
inc
fxch
jne
stos
or
lcall
push
mov
mov
inc
jg
dec
and
dec
push
enter
dec
fmull
sub
mov
out
jl
divb
adc
push
add
pop
lds
mov
push
xchg
mov
jle
jge
das
sbb
pop
icebp
in
xor
daa
jnp
adc
xchg
int
jae
mov
inc
fisttpl
cltd
sbb
dec
jo
imul
push
mov
leave
sarl
std
cmp
pop
in
or
fstp
gs
sbb
pop
stos
sbb
pop
data16
jmp
sbb
imul
mov
inc
sub
push
push
dec
xchg
sbb
mov
adc
jnp
mov
dec
test
jmp
mov
and
add
mov
push
mov
cmpsl
or
sbb
lret
jge
inc
xchg
das
leave
js
dec
jo
cmpsl
adc
sub
and
clc
fmull
sub
mov
lods
ss
shll
imul
jmp
push
pmuludq
popa
ss
jecxz
movsl
test
test
inc
pop
sub
xor
dec
xchg
xchg
inc
ds
jle
cmp
pop
jg
imul
xor
add
cmp
decl
push
push
jg
cmc
jp
pop
mov
imul
or
mov
sarl
pop
mov
push
test
cmpl
inc
mov
sub
mov
push
inc
mov
push
stc
fisubs
inc
loopne
cld
add
pushf
ljmp
mov
push
loopne
jnp
pop
jo
push
lods
sbb
mov
cltd
sub
aas
or
shlb
aam
adc
and
sub
jl
push
pop
ret
pop
cmp
jns
mull
pop
dec
sti
and
xor
mov
sbb
mov
insb
lret
frstor
push
imul
or
cmp
mov
mov
sub
pop
cmp
mov
mov
mov
mov
out
out
pop
jmp
push
and
lods
mov
sbb
push
pop
inc
adc
mov
jle
jp
call
cmpsb
call
xor
xchg
inc
or
out
push
adc
lods
xchg
iret
fcmovne
xor
mov
scas
loop
lcall
sahf
mov
mov
or
sti
push
lahf
mov
adc
or
inc
imul
or
test
dec
pop
cltd
je
stc
pop
cmp
mull
xchg
dec
vpunpcklwd
xor
rorl
sti
data16
sub
inc
jae
scas
mov
stc
incl
xchg
adc
gs
mov
out
lods
lods
add
mov
dec
stos
cltd
loop
add
bound
mov
jb
pop
pop
dec
cmp
sbb
sbb
mov
outsb
in
jbe
cmpsl
stc
cmp
adc
fs
pop
sbb
dec
mov
jle
pop
sbb
in
inc
add
or
mov
mov
cmpsb
xor
xor
out
out
in
mov
std
into
es
cmpsl
aam
mov
push
xor
test
bound
push
adc
aas
xor
sub
insb
fnstsw
fcomip
enter
xor
sub
add
xlat
rolb
push
lcall
sbb
pop
addr16
popf
out
or
pop
mov
idivl
lret
popa
mov
inc
sub
lock
add
mov
cli
lock
std
xchg
push
push
mov
repnz
pop
div
imul
mov
sarl
mov
push
xor
sub
aaa
fldenv
jo
sbb
ret
cmp
sub
and
inc
cli
cmp
pop
xchg
push
add
push
mov
mov
pop
setle
mov
in
push
enter
and
or
xor
repnz
lret
sub
xor
xchg
jne
lods
push
jge
pushf
insl
mov
ja
mov
xchg
in
adc
jle
adc
bound
ja
fisubrs
andb
push
int
out
mov
sub
add
sub
in
test
xchg
push
add
lds
fldt
fs
mov
rorb
out
mov
pop
sub
lods
inc
mov
mov
add
xchg
push
mov
and
daa
adc
cwtl
add
pop
iret
leave
cwtl
mov
ja
mov
jecxz
gs
lret
icebp
mov
stos
fdivrs
pushf
xchg
int
and
repz
cld
push
clc
push
ljmp
icebp
cmp
out
or
jb
test
out
lret
add
sbb
js
dec
cwtl
pop
mov
push
rolb
sub
cmp
fsubrp
out
add
inc
loopne
xor
jecxz
lock
loope
aas
cs
popa
pop
stc
sub
fcompl
sub
push
clc
push
push
jp
out
into
sti
stc
jle
adc
sub
add
adc
ja
insb
cmp
fsts
pop
cmp
dec
mov
push
decb
xchg
xchg
push
cmp
and
jne
mov
jne
mov
inc
orb
int
push
test
mov
xchg
sub
gs
cmp
nop
add
inc
jo
out
movsl
mov
icebp
mov
arpl
mov
test
dec
mov
mov
xor
jne
mov
pop
repz
xor
add
call
insb
cmpsb
xor
data16
mov
stos
dec
push
pusha
std
ffreep
or
mov
mov
in
sbb
adc
clc
sbb
jno
enter
leave
and
lods
scas
xchg
mov
and
btc
xchg
xor
imul
jp
push
or
jg
cmp
pusha
adc
sbb
std
jno
cli
into
daa
or
inc
rclb
pop
jbe
pop
mov
mov
repnz
and
push
movsl
mov
mov
mov
jp
call
and
push
sbb
in
sbb
mov
xor
mov
repz
in
outsb
fcoms
insb
into
mov
jbe
stos
cmp
dec
ljmp
dec
mov
scas
mov
imul
mov
push
in
push
xchg
xchg
push
push
mov
jl
adc
aam
push
aaa
cmp
xchg
inc
sbb
idivb
xchg
push
cmpsl
std
scas
out
in
cmp
imul
xchg
les
cs
ficoml
pop
imul
test
ret
inc
jg
push
pop
fnstenv
xchg
xor
es
mov
sbb
adc
rorb
js
in
push
in
sub
je
jp
xchg
test
inc
inc
dec
sub
fcomip
push
dec
leave
leave
add
sub
and
sub
je
cli
pop
jmp
dec
in
jl
cltd
mov
adcl
leave
aad
jmp
pop
clc
in
cmpsb
aas
std
xchg
mov
jae
out
xor
jb
push
inc
pop
cmpsb
movups
hlt
rcrl
xchg
dec
stos
mov
lret
add
lahf
fstps
sahf
dec
bnd
sbb
push
xchg
xchg
dec
outsl
das
je
mov
xor
mov
pop
cmp
jmp
test
sbb
adc
cld
arpl
cli
subl
sti
int
add
shll
cmc
loope
iret
loope
push
jne
xlat
jae
repnz
clc
fs
xchg
mov
in
mov
mov
or
jg
sarb
or
pop
imul
and
jns
in
in
fbld
lock
daa
insb
pop
outsl
or
lods
mov
xor
cwtl
dec
idivl
or
test
clc
lock
push
orb
and
push
xchg
sbb
repnz
adc
shll
and
cmp
jl
ja
xchg
pop
add
cs
mov
push
pop
lret
out
cmp
sahf
adc
out
cmp
es
and
inc
out
xchg
jnp
sub
cmpb
pop
roll
in
in
in
adc
adc
repnz
jmp
push
dec
mov
js
test
or
cli
sbb
mov
sub
insb
imul
in
loop
xchg
and
data16
stos
jecxz
out
adc
into
repnz
je
push
xchg
mov
add
cmp
xchg
fidivs
les
cmp
jne
lds
popf
cmp
fidivl
aas
sbb
or
loope
or
rcr
or
xor
mov
test
mov
inc
es
mov
fmull
push
mov
and
and
daa
inc
lret
pop
mov
insb
aam
insb
fldcw
dec
dec
fiadds
xchg
pop
int
enter
in
xchg
or
pushf
inc
movsb
jl
inc
push
out
ret
or
movsb
mov
fsubs
roll
cmp
cmp
test
mov
inc
mov
sub
movsb
xor
push
jl
cmp
dec
xchg
sbb
addl
imul
sub
iret
dec
popf
adc
dec
sub
rolb
add
or
das
pop
cmp
jb
inc
gs
das
les
add
inc
sbb
push
lods
rolb
out
pusha
sub
xchg
data16
lahf
imul
push
lea
mov
lods
and
pusha
outsb
push
in
inc
int3
popa
addl
push
mov
addb
cli
fwait
mov
and
push
dec
lods
mov
out
lea
cmp
in
mov
xor
das
mov
std
ficompl
jp
add
sub
mov
repz
in
sub
cmp
adc
xchg
xchg
loope
rcll
inc
push
pop
cmp
add
jmp
andb
mov
mov
out
push
jns
add
pop
xor
sbbb
cmp
jns
ja
jnp
jae
sub
pop
push
scas
add
mov
mov
cmp
adc
sub
pop
xor
xchg
inc
inc
dec
jmp
nop
jno
insb
stos
push
or
jo
mov
cli
ja
sti
ficoml
fsts
push
imull
das
pop
cs
mov
out
sbb
or
es
in
scas
inc
mov
movsl
xor
sub
jno
xchg
insb
divb
add
in
imul
popf
mov
push
int
and
cld
stos
xor
mov
push
sahf
mov
shr
outsl
scas
add
sbb
loope
and
adc
stos
stc
fistpl
stos
cmp
movsb
repnz
repz
xchg
dec
scas
and
sbb
or
mov
dec
ds
cmp
cmp
and
lods
outsl
je
idiv
pusha
adc
jbe
add
loope
inc
ss
xor
ljmp
cltd
pop
les
repnz
pop
jmp
stc
popa
dec
sahf
jle
fdivrl
sbb
test
idivl
in
not
jmp
imul
out
popf
mov
std
lcall
jmp
cmp
sbb
xchg
bound
insl
and
imul
sbb
adc
fs
int
sbb
add
out
movsl
jnp
inc
push
xchg
repz
cmovp
xchg
pop
mov
in
sbb
or
fisttps
popf
xlat
xor
xor
adc
pop
aad
sbb
andl
push
das
lahf
subb
stc
add
adcb
fsubr
dec
mov
add
shlb
push
adc
rcll
sub
stos
cmp
mov
xchg
add
add
pop
mov
fstps
jmp
mov
rorl
outsb
add
leave
out
adc
es
fst
fstps
addr16
loop
in
push
imul
imul
loope
pop
xorb
lret
xchg
cmpsl
xor
jo
dec
mov
enter
mov
loope
push
into
and
arpl
or
push
push
pop
pop
inc
in
and
push
and
shr
and
lds
mov
int
mov
mov
or
pop
push
adc
inc
cmpsb
and
sti
pushw
shll
mov
fiadds
pop
mov
je
pop
loopne
push
or
icebp
xor
or
xchg
sub
jecxz
pop
mov
lcall
xor
sub
sub
testl
fs
fcmovnbe
imul
cltd
jbe
and
mov
xlat
pop
add
js
jne
push
pop
out
adc
jg
jmp
mov
inc
inc
xor
jnp
into
jg
inc
mov
mov
cmp
movsb
test
dec
mov
popl
dec
jbe
test
sbb
loop
repnz
clc
shr
and
pop
push
orl
subb
shl
stos
pop
push
int3
xchg
out
jge
iret
dec
add
dec
imul
push
rcrl
sub
daa
mov
jcxz
adc
push
movsb
into
call
mov
lods
jge
rcl
lahf
in
fstpt
push
mov
and
mov
mov
inc
das
push
scas
bound
sub
imul
cwtl
pop
or
xor
fldt
aad
push
lods
inc
enter
adc
popf
mov
jb
and
clc
xor
mov
mov
pop
cmc
xor
lods
mov
sahf
pop
cmp
adc
popf
loop
cs
xchg
imul
add
mov
sub
cld
push
in
lcall
in
flds
dec
mov
mov
rolb
mov
inc
shr
add
xchg
mov
outsl
mov
insb
add
mov
inc
xchg
je
xor
repz
mov
sti
mov
sbb
jb
mov
inc
cmpl
push
or
outsb
mov
movsb
xor
inc
add
lods
movsl
push
out
in
ss
pusha
xchg
fidivrl
sar
sbb
lea
out
pop
push
ret
mov
xor
sbb
fnsave
sbb
mov
jl
or
sbb
cmp
loope
lea
mov
sub
jo
cmpsb
jno
add
add
mov
inc
dec
aad
sbb
outsb
nop
ret
lret
cmp
cpuid
jo
push
scas
decb
gs
lea
sub
adc
int3
sub
mov
in
lret
scas
add
in
pop
dec
sbb
push
test
int
jp
pop
mov
mov
shll
les
pop
adc
movsb
dec
mov
lahf
jmp
push
pushf
es
fadds
in
shl
fildll
jbe
fbstp
pop
add
cs
pop
test
outsb
fiaddl
xchg
xor
ljmp
arpl
xor
cli
sub
sahf
jne
sbb
movsb
jecxz
leave
pop
fdivs
jmp
cmpsb
data16
xchg
push
fisubl
pop
idivl
mov
fsubrs
out
loope
in
je
push
adc
mov
xchg
outsb
aaa
xchg
popf
scas
lea
movsl
push
xchg
push
sub
data16
cmpsl
ljmp
dec
stc
les
jb
adc
sub
jb
dec
add
sub
dec
faddl
dec
xchg
stos
sbb
arpl
hlt
subb
mov
xor
xor
dec
xor
outsb
inc
leave
cmp
pushf
sbb
cltd
sub
ss
cmp
fimull
jo
sub
push
fimuls
imul
mov
and
ret
push
add
and
push
lahf
push
mov
sub
sbb
lahf
or
sub
mov
cmp
inc
mov
mov
loope
es
xchg
sbb
push
add
xor
xor
movsb
movsb
popa
push
fnstcw
pop
or
inc
push
fwait
mov
cli
dec
adc
loopne
imulb
xchg
push
sub
mov
sub
hlt
push
sbb
mov
fnstsw
cmp
arpl
pop
cmp
in
lods
sbb
sahf
addr16
add
mov
cs
push
dec
dec
adc
cmp
xchg
outsb
jnp
out
test
lret
icebp
pushf
xchg
pop
fwait
aaa
and
inc
js
jecxz
int
pusha
jnp
xchg
adc
shlb
add
ja
subb
mov
test
adc
jl
or
addr16
adc
sarb
push
sub
xorb
mov
imul
sahf
in
adc
lods
inc
xchg
cmc
fs
mov
shlb
mov
test
fwait
xchg
adc
mov
std
aas
and
pop
adc
jo
dec
ljmp
andl
sbb
data16
mov
add
pop
mov
xor
add
xlat
repz
mov
rol
dec
out
add
sbb
cltd
sbb
pop
cmpsl
mov
movsb
dec
jbe
mov
mov
cmp
cmc
ja
xor
dec
jmp
sub
aad
and
stos
push
in
dec
cmp
inc
fwait
dec
repz
aad
cmp
cmp
xchg
pop
inc
mov
cmp
xor
testl
shrl
jge
mov
scas
movsl
mov
cmp
test
or
mov
sbb
inc
idivb
inc
sub
pop
inc
jnp
popa
std
fwait
arpl
dec
lods
fwait
xor
pop
call
mov
inc
xor
in
in
insb
push
arpl
xchg
xor
popa
mov
ja
push
push
cmpb
fbstp
xchg
cld
inc
xor
cli
push
inc
mov
clc
scas
movsl
fdivs
and
lods
call
mov
mov
xchg
add
mov
jp
mov
enter
sbbb
sbb
test
xchg
loopne
icebp
sahf
aad
jne
xchg
xchg
xor
mov
loope
mov
ret
mov
leave
jmp
dec
mov
sarb
icebp
fcmovnbe
jg
es
out
stos
jmp
das
sub
hlt
shrl
mov
cmp
jnp
test
dec
jbe
test
cli
or
xchg
fcmovbe
std
div
subl
add
jp
inc
mov
adc
xchg
cld
cmpsl
cmp
mov
mov
mov
imul
sub
and
outsb
stc
mov
push
pop
xchg
stc
cmp
add
sbb
jo
xor
xor
push
sub
loope
jge
leave
aam
dec
out
and
mov
jo
jp
out
out
inc
cmp
sbb
popa
fst
cmp
out
in
xchg
mov
sub
ljmp
adc
xchg
into
xchg
xor
insb
ljmp
cmp
xchg
mov
or
mov
dec
xchg
xorl
testb
dec
sarl
subb
nop
test
fstpt
jnp
xchg
fidivrs
rcrb
or
xchg
dec
jmp
jo
xchg
fs
fldenv
dec
insl
sar
outsb
xor
push
mov
fcoms
stos
inc
adc
or
add
popa
pushf
dec
push
ja
out
cwtl
fucomi
outsl
push
mov
mov
pop
pop
dec
dec
rolb
jo
and
mov
or
movsb
loop
ds
popa
stos
sub
notl
shrl
in
jle
and
adc
jb
adc
arpl
jecxz
sbb
stos
mov
pop
addr16
mov
das
sub
clc
and
jp
inc
ja
cld
loope
fidivs
lea
lea
fwait
fwait
mov
add
loopne
xor
mull
frstor
ret
add
ss
test
bound
mov
jle
dec
cmp
sub
jo
icebp
ret
inc
pop
mov
cmpsl
stos
loope
aad
mov
add
pushf
xor
pop
aam
imul
test
sti
aad
mov
add
mov
enter
pop
cmp
or
or
mov
fstpl
xchg
popf
repz
pop
out
fnstcw
std
sub
mov
imul
adc
lcall
or
mov
iret
xchg
nop
out
paddd
in
decb
aaa
jp
sti
fs
mov
inc
pop
xchg
mov
jp
xchg
jmp
jnp
repz
mov
call
adc
sbb
aam
and
ljmp
cmp
dec
imul
or
jo
push
lock
jmp
ja
jbe
jb
jmp
lds
adc
outsl
or
addr16
loope
aad
arpl
dec
jb
cmpsb
jmp
cli
das
mov
sarl
popf
bound
sbb
cli
in
data16
cmc
fbld
cmpsl
xor
test
ja
xchg
cmp
bound
fbld
repz
inc
fldcw
fcmovu
jnp
mov
sub
addr16
adc
aam
je
negl
fistpl
enter
mov
sbb
add
inc
mov
repz
cmpsb
in
jecxz
pop
or
cmp
lods
mov
scas
testl
inc
pushf
js
in
mov
insb
icebp
xchg
pop
or
xor
mov
sbb
sub
xchg
ss
push
and
jl
and
jmp
popa
je
mov
add
xchg
ficoml
lcall
shll
jb
jge
push
ret
mov
fwait
xor
jbe
mov
push
push
dec
mov
adc
push
sub
or
loopne
notl
jb
ret
sub
mov
mov
jg
jo
call
scas
das
pushf
addl
es
mov
dec
mov
adc
xchg
cmp
sbbl
andl
adc
xchg
or
popf
pop
cmp
inc
rcrb
popf
jle
rorl
xchg
sbb
loope
jns
adc
mov
push
cltd
lcall
and
inc
inc
lret
in
push
aas
pop
and
mov
idiv
int3
push
jno
jno
pop
sbbl
adc
lcall
test
loop
pop
sub
shrb
dec
cmp
popf
pop
or
in
dec
stos
dec
sbbb
xchg
mov
jo
xor
into
add
xchg
scas
ja
push
es
insb
clc
and
aad
adc
test
mov
jl
push
or
je
sub
insb
inc
cld
ret
cmc
pop
cltd
inc
out
mov
sahf
test
es
adc
sub
scas
or
icebp
adc
and
call
fxch
stc
inc
mov
jmp
sbb
ss
movl
ja
sbb
dec
mov
add
icebp
fistpll
sub
sub
lods
push
clc
insb
sub
xor
cmp
movsb
or
jmp
stos
or
push
insl
inc
and
push
adc
jp
popf
xchg
jecxz
lcall
cli
in
ret
addl
or
out
dec
stos
movsl
stc
lods
inc
cmp
js
jl
test
jecxz
lock
pop
push
popf
repnz
andb
sbb
pop
mov
shll
dec
pop
scas
clc
dec
mov
scas
popf
popf
mov
dec
es
pop
dec
les
mov
outsl
mov
mov
push
int3
mov
repz
loopne
movsb
pop
int3
dec
mov
add
aaa
pushf
jnp
mov
ffreep
mov
xor
cwtl
mov
fisttpl
push
movl
pop
mov
pop
jl
mov
dec
push
jno
shrl
push
call
push
addr16
jmp
lock
ljmp
ljmp
push
jno
popf
lods
inc
or
fimuls
push
jecxz
adc
mov
push
clc
push
mov
cmp
movsl
out
adc
or
mov
inc
mov
sti
loopne
adc
repnz
in
adc
movsb
push
sub
push
sub
movl
cmp
test
sahf
push
adc
push
rcrb
pop
cmc
and
mov
test
clc
dec
and
insl
add
adc
test
xchg
pop
dec
lock
pop
fiadds
dec
jmp
pop
das
movsb
push
sub
inc
push
dec
inc
je
pop
mov
inc
xchg
jp
adc
push
sub
cs
pop
pop
int
int3
dec
addr16
xor
inc
test
mov
mov
ss
imul
mov
jae
push
inc
pop
test
xor
popl
xchg
jmp
lods
loopne
adc
pop
adc
mov
push
xor
dec
fst
fidivs
push
adc
fwait
into
add
aaa
cmpsb
hlt
ds
xor
cs
or
sbb
and
push
imul
sbb
cmpsb
pop
test
fwait
cmpsl
push
lea
loope
fldt
lret
sbb
lret
ret
mov
lea
dec
test
cwtl
daa
and
dec
mov
aam
iret
mov
out
jne
mov
mov
ljmp
cwtl
iret
cmp
pop
sub
pop
push
stc
mov
je
dec
sbb
jne,pn
fisttps
sbb
pop
adc
and
jle
sarl
mov
test
xor
cmp
cmc
fmull
jge
push
xchg
xchg
or
rorl
enter
mov
sub
roll
jmp
sbb
xorl
sub
inc
jle
mov
cmp
fiadds
shr
and
or
clc
jbe
test
mov
pop
dec
stos
mov
and
addl
cld
mov
add
cs
loop
dec
jge
pop
inc
test
fstpt
mov
inc
push
into
popf
cli
scas
cmp
and
popaw
ror
inc
test
xchg
popa
and
repnz
aam
mov
loope
xor
push
aam
sbb
int3
mov
cmp
test
mov
repnz
sbb
push
test
pop
out
dec
mov
das
mov
and
mov
add
ret
sub
movsl
insl
cld
jns
cltd
cltd
jmp
ss
std
ja
aad
add
mov
es
jb
dec
lret
fwait
pop
push
lret
jecxz
imulb
popa
mov
add
sbb
test
stos
sub
mov
cld
push
jecxz
xor
jmp
int3
ret
fcompl
or
xchg
and
movsb
sub
adc
pop
fucomp
dec
aaa
mov
sbb
insl
out
push
rcrb
lods
jmp
mov
pop
pop
into
mov
call
cmp
adc
inc
stos
out
mov
inc
lahf
aas
cmc
loop
aam
inc
jg
add
xor
loopne
stos
jl
add
nop
adc
cmp
addl
inc
push
mov
call
lret
and
divb
adc
xor
shl
mov
mov
cmp
mov
cmp
cmpsb
mov
and
xor
mov
rorl
nop
and
lret
lods
jnp
icebp
aad
test
jb
jbe,pn
jmp
cmp
pop
jg
pop
rolb
lods
push
cld
push
cli
and
in
sub
rol
xchg
dec
xchg
scas
add
xchg
adc
jbe
add
pop
in
imul
idiv
jg
inc
push
mov
aam
mov
sub
jo
add
mov
jo
pushf
cmp
adc
mov
and
js
out
bound
xor
inc
ds
lret
cmp
push
lock
repnz
dec
adcb
adc
xchg
int
int
mov
and
nop
adc
rorb
adc
dec
fists
inc
sti
test
add
push
jg
adc
sbb
xchg
mov
mov
push
ret
xchg
push
rolb
aam
divl
sti
dec
stos
adc
and
loope
js
lahf
push
adc
xchg
push
leave
cwtl
mov
scas
aas
lcall
xchg
xchg
jg
mov
xchg
inc
imul
ljmp
xor
ficoms
xor
push
aas
pop
leave
sti
stos
xchg
push
hlt
in
push
in
mov
cmp
inc
adc
push
popa
or
popf
or
icebp
dec
loop
pop
sti
jle
mov
movsl
xorl
jge
test
or
jb
push
ret
xchg
mov
add
inc
add
out
cmp
cmp
lods
cli
cmc
mov
andl
mov
ljmp
lods
loopne
repz
lods
add
inc
dec
xchg
xor
filds
mov
in
jne
xor
mov
movsl
ja
popa
cld
ss
jae
jl
pop
cld
pop
or
jg
aaa
push
mov
imulb
and
or
gs
fwait
je
push
mov
push
and
xchg
mov
sahf
xchg
mov
dec
loop
mov
pop
or
arpl
mov
xchg
mov
dec
lods
stos
fisubs
rcr
fcompl
out
and
xchg
pop
cmpsb
rcll
inc
mov
jle
flds
shll
les
and
push
es
stos
imull
imul
lock
pop
xchg
loope
push
hlt
sahf
xchg
mov
cmc
lcall
pushf
mulb
nop
imul
jmp
dec
icebp
sub
jl
xchg
in
mov
cmpsb
mov
shrl
stc
dec
mov
dec
push
push
shl
and
fidivl
shlw
lods
jns
mov
inc
dec
jge
bnd
mov
aaa
mov
mov
les
jle
push
push
and
add
sub
in
push
xchg
outsl
dec
dec
ret
scas
xor
in
or
mov
mov
test
inc
movsl
push
pop
loope
sbbb
xor
pop
xor
dec
loop
dec
push
cs
xchg
enter
cmp
in
sub
ret
cmp
shr
push
lock
add
inc
mov
push
fstpt
and
mov
test
cld
mov
scas
into
movsl
sbb
inc
xchg
xchg
pop
mov
sbb
cld
ret
dec
add
aas
insl
mov
or
adc
sub
and
adc
pop
cmp
xchg
pop
fidivrl
stos
mov
repnz
mov
mov
fucomi
imul
aas
fdivrl
test
mov
js
mov
dec
fcomps
add
xchg
test
or
pop
hlt
xchg
gs
push
sbb
pop
mov
andl
sub
cmc
orb
test
lods
arpl
mov
mov
mov
pop
mov
add
into
mov
shrb
mov
cmp
or
xor
in
out
and
out
lcall
cld
iret
sahf
push
ja
stc
adc
xchg
clc
xlat
js
aam
push
aaa
fcoml
push
jge
sub
lock
mov
jbe
lds
pop
fldl
dec
mov
mov
xor
ficoms
jle
fiaddl
mov
mov
testl
jbe
and
mov
iret
cwtl
dec
js
lret
xor
xor
jg
sbb
cmp
addr16
xchg
xor
sub
mov
cmp
shl
jl
scas
ret
test
int3
inc
out
ja
ret
mov
sub
cmp
insb
ds
mov
and
lods
adc
fwait
cmp
pop
xchg
cmp
inc
adc
dec
cmp
lahf
in
xor
push
in
popl
test
lock
xchg
dec
call
dec
jo
sahf
leave
mov
xlat
sub
in
push
call
pop
leave
add
mov
add
jmp
cmc
xor
xchg
inc
xor
cwtl
dec
and
inc
fisubrs
ja
pop
push
mov
cmp
dec
cmp
jecxz
mov
pop
dec
mov
jle
and
inc
lcall
fildl
mov
pushf
push
xor
inc
add
enter
pop
ret
pop
fdivl
call
cwtl
int3
sbb
and
jne
cmp
ljmp
push
setne
mov
jbe
ret
pop
xchg
les
xchg
aas
aad
cmp
add
xchg
insb
mov
adc
mov
xor
in
push
mov
cli
dec
or
mov
and
mov
inc
inc
in
imul
cmp
xchg
bound
xchg
int
mov
movsl
jb
jae
and
xchg
clc
data16
enter
lahf
cmp
insb
mov
xchg
jae
lock
add
sbb
push
int3
inc
and
dec
xchg
iret
adc
and
ja
xchg
fdiv
xorb
mov
into
adc
lret
pop
xor
mov
jle
dec
mov
pop
jmp
loop
imul
xlat
sub
sub
imul
cld
filds
push
mov
clc
shll
pop
mov
xor
mov
jno
push
test
jecxz
jge
mov
mov
and
fistl
ja
fs
imul
hlt
mov
mov
jecxz
iret
clc
adc
xchg
shlb
pushf
call
push
loopne
das
dec
mov
stc
das
inc
cmc
pushf
orl
shll
or
out
dec
cmp
out
in
iret
push
iret
std
fdivrs
int
jbe
adcb
ss
dec
jmp
icebp
sbb
pushf
cli
loop
ljmp
adc
movsb
gs
cmc
rolb
jno
scas
push
fnstsw
mov
pop
adc
mov
clc
in
cmp
std
cld
mov
stos
or
aam
cmp
into
xlat
nop
push
call
inc
xchg
fsubs
xchg
jge
add
and
dec
or
inc
decl
dec
xchg
fsubl
push
rcl
and
cltd
out
into
dec
adc
cli
sbb
push
pop
or
stos
sub
lret
push
push
pop
ret
mov
inc
lds
fsubp
pop
out
sbb
mov
testb
test
push
dec
or
cmc
into
jnp
sub
fldenv
cmp
int3
test
push
pop
jne
or
sub
push
cmp
lds
xchg
lods
int3
adc
test
ss
dec
and
xchg
out
lret
or
cmpsl
stc
imull
cmpsl
dec
mov
daa
inc
dec
lock
ret
loopne
inc
cld
fnstcw
orl
mov
or
fadds
es
fdivr
jnp
pushl
pop
xchg
lea
and
movsl
mov
push
data16
std
sbb
add
lcall
pop
sub
jns
cwtl
xlat
pushf
pop
fildl
dec
mov
mov
leave
jb
pop
fcoml
fldl
arpl
lret
xchg
dec
dec
push
jns
aaa
lods
pushf
cmovae
fisubs
insb
xchg
into
sbb
or
pop
ficomps
jecxz
fwait
lret
clc
andl
push
lret
push
dec
push
pop
jmp
mov
fsubrs
adc
test
mov
jb
icebp
sbb
pushf
pop
inc
sub
xor
inc
jbe
lret
sbb
outsl
push
cmc
jne
lahf
cmp
rcrb
call
push
push
jl
add
out
or
xor
insb
aas
pop
les
sbb
scas
out
push
hlt
xor
inc
out
fnclex
cmp
int3
sbb
push
and
push
adc
adcl
pop
pop
in
mov
icebp
aas
cltd
mov
in
negl
mov
fcoms
push
add
call
cmpsb
xchg
out
jno
shlb
test
clc
push
push
push
add
or
mov
into
mov
pop
rclb
jb
xchg
mov
mov
adc
ss
das
leave
pop
or
xchg
mov
fsubs
jb
dec
test
scas
xchg
xchg
and
xchg
xchg
inc
aaa
add
fninit
mov
jae
clc
mov
pop
movsb
sti
mov
cld
fucomip
leave
daa
jnp
xor
dec
or
sub
xchg
mov
adc
loop
ss
adc
sbb
xor
test
lods
pop
cmp
sahf
xchg
test
shll
shl
fldt
xchg
in
xor
mov
sbb
or
lds
fistpll
xchg
xchg
dec
lcall
cmpsl
mov
pushf
js
outsl
pop
push
scas
out
add
insb
subb
and
movsb
incl
cmp
xlat
mov
filds
and
sti
in
ds
in
xor
mov
mov
xor
add
cld
sbb
pop
push
scas
nop
jl
pop
test
pusha
inc
pop
sub
push
mov
clc
cmpsl
rcll
cmp
testl
les
sub
lods
xor
sub
ret
ds
push
mov
jp
mov
mov
adc
adc
stos
arpl
jge
dec
imul
inc
mov
aas
pusha
cli
adc
cli
pop
addb
push
daa
adc
loope
xchg
loop
add
jae
xor
cmpsl
icebp
adc
push
mov
jle
jmp
in
mov
das
mov
call
cmp
mov
aas
in
popa
sbb
push
and
ret
addr16
mov
movsb
xchg
adc
pop
adc
int3
test
into
loop
mov
lods
enter
inc
jl
iret
movsl
iret
push
mov
mov
ror
test
xchg
insb
cmp
popa
ret
push
sub
mov
adc
sub
divl
ret
sbb
adc
call
inc
xchg
fnstsw
pop
adc
aam
ljmp
into
mov
sahf
aad
jp
data16
mov
inc
or
cli
mov
cmp
out
rcrl
cmp
xsaves
cmp
mov
jmp
pusha
xchg
push
pop
jo
mov
pop
adc
xlat
or
adc
lea
jg
mov
cmp
inc
dec
lods
mov
pop
mov
test
push
sti
pop
iret
insl
inc
mov
xor
push
add
sbb
sbbb
insl
ja
pop
sub
dec
mov
pop
xor
les
push
pop
sarb
mov
arpl
loopne
cs
gs
mul
pop
sbb
sub
int
cmp
jle
outsl
and
xchg
das
mov
dec
add
fs
xor
test
mov
sbb
add
test
pop
movsl
and
add
int
jle
lea
and
add
fistps
sbb
xchg
mov
mov
push
sbb
or
sbb
sub
cmp
fs
pop
and
add
cli
pop
pop
pop
imul
cmp
pop
jno
add
inc
xchg
jne
push
adc
es
jecxz
cmc
es
sbb
sbb
cmc
enter
shll
adc
mov
and
mov
dec
popf
mov
sbb
jp
lret
mov
mov
lahf
scas
ljmp
mov
cs
or
pushf
pop
movsb
cmp
call
stc
ss
stos
cmp
or
sbbb
lock
mov
mov
mov
lcall
ss
push
arpl
enter
sub
jp
add
rcrb
ja
mov
xor
fsub
pushf
pop
and
les
fcomps
lock
jle
das
stos
xchg
xchg
arpl
ficoml
ret
lahf
push
je
fists
lcall
inc
aas
lret
roll
add
mov
lcall
push
lret
sbb
adc
or
sub
dec
sub
xchg
pop
jmp
int
cmp
or
xor
cs
push
out
sbb
jb
pop
push
dec
hlt
sahf
ljmp
addr16
inc
adc
out
pop
stos
adc
lods
adc
dec
jne
xor
xchg
xchg
std
jge
adc
xor
int
mov
rorl
push
pop
lcall
shll
cmpsb
out
js
das
pop
sbb
les
jo
pop
add
jecxz
mov
sbb
mull
dec
scas
cmp
add
js
daa
iret
int3
sub
rol
or
xor
jp
aas
pop
inc
iret
inc
push
xchg
pop
adc
mov
or
les
ljmp
mov
add
mov
jl
inc
test
mov
in
das
and
frstor
xchg
mov
or
mov
jmp
ja
sbb
inc
cld
daa
jne
push
jne
adc
mov
lahf
testb
mov
pop
dec
cmp
pushf
ljmp
xor
inc
pop
fildll
subl
imul
call
dec
sub
cld
loope
jbe
or
int3
pop
pushf
adc
out
and
jp,pt
jl
mov
sti
inc
or
mov
cs
xlat
push
mov
sub
out
push
into
je
loope
movsl
or
mov
jns
andl
loop
jle
push
leave
jne
cmp
pop
jbe
mov
mov
adc
lods
fldl
lahf
push
push
js
jae
imulb
cmpsl
adc
cmp
cltd
ss
stos
mov
mov
enterw
mov
jne
je
xlat
push
loop
iret
push
pop
test
dec
loop
fwait
out
test
jg
lcall
fldt
mov
rcrl
imul
int
jb
lret
fucomip
mov
inc
jo
add
adc
ret
pushf
add
outsl
fdivrl
dec
push
ficompl
mov
shrl
addr16
loopne
add
xchg
xor
in
jno
repnz
scas
add
push
cmpsb
jge
sub
iret
sti
dec
mov
ss
addr16
xchg
ja
pop
jl
stc
xchg
loopne
pop
jmp
jecxz
inc
clc
les
ret
sub
pop
xor
aas
lds
pop
arpl
adc
sbbb
dec
push
pop
rorb
or
loope
sbb
daa
pop
push
cmp
and
movsl
xor
adc
mov
add
mov
ficoms
mov
ret
cmpsb
or
aam
jg
pop
jmp
stos
and
push
push
sub
cld
dec
cmc
mov
xor
inc
in
inc
mov
rclb
icebp
popf
mov
out
sub
mov
xor
lret
sub
out
lret
pop
mov
cmc
dec
push
stc
dec
mov
xor
cli
xor
inc
mov
jg
fistl
cmpl
ljmp
mov
loope
lods
adc
mov
xchg
fbstp
incb
aas
cmp
pusha
std
call
push
dec
inc
xchg
or
imul
movsl
mov
jae
and
imul
xlat
daa
push
iret
addr16
int3
xlat
dec
jg
clc
pop
sub
ss
jl
or
jmp
iret
push
lret
outsb
inc
js
sub
ret
sti
sti
rorl
mov
lret
dec
mov
lds
fwait
xchg
into
jp
in
xorl
cmp
int3
and
lock
and
scas
fs
and
xchg
mov
mov
xchg
mov
repnz
cmp
loopne
stos
mov
jge
jnp
and
jmp
cmp
xchg
bound
mov
and
jl
mov
mov
dec
xchg
jp
inc
xchg
push
push
sub
rcll
mov
xor
loopne
push
ret
dec
movsb
mov
xor
nop
inc
or
xchg
mov
pop
stos
xlat
pop
test
mov
sbb
fld
xchg
push
lods
or
inc
and
dec
inc
and
fidivl
mov
shl
or
mov
fsubrl
mov
sbb
mov
sbb
loope
leave
test
lock
mov
jnp
out
mov
pop
pop
addr16
dec
insl
and
repnz
pop
mov
cmp
scas
loope
and
fdivs
pop
rcr
jns
into
push
xchg
fwait
lcall
xor
outsb
shll
stos
xchg
xor
stos
mov
inc
push
loopne
jnp
add
scas
push
movsl
inc
ljmp
push
sub
imul
push
test
mov
xor
push
fs
sbb
call
jns
pushf
pop
insb
sarl
jle
sbb
and
push
push
xor
jnp
cmp
pop
sti
lea
pop
pop
rcll
arpl
shl
and
dec
mov
pop
mov
xor
or
add
std
add
repnz
insl
and
imul
rcr
lds
lret
lock
mov
shl
xchg
inc
dec
mov
xor
into
fsub
dec
fcomps
mov
jge
xchg
bound
inc
or
scas
cmpsl
mov
pop
stos
mov
ds
mov
mov
mov
arpl
push
aas
and
jmp
xchg
mov
adc
fsubl
sub
mov
inc
adc
bnd
mov
fstl
add
mov
inc
pop
mov
cld
cmp
jns
xlat
inc
dec
imul
lret
imul
popf
xchg
push
cmp
xorl
rorb
jmp
jns
mov
pop
loopne
push
repnz
iret
pusha
mov
fcmovnu
jb
in
daa
inc
xor
sbb
ret
dec
dec
push
jge
and
testb
mov
rorl
jmp
push
cld
les
cltd
repnz
or
sahf
js
out
push
cmp
mov
hlt
std
jge
mov
mov
fbstp
xchg
xchg
das
shll
lods
fsub
sbb
mov
ret
pop
pop
fbld
add
xor
int
jnp
fwait
or
ljmp
in
insb
push
loope
testl
je
mov
aad
and
fsubl
pushf
and
fdivp
gs
xchg
cmc
jb
and
mov
test
jno
cs
push
jle
sbb
and
jmp
aas
sub
add
ffree
fistpl
or
mov
xchg
sub
mov
xor
mulb
stc
arpl
cmp
pop
cmpsb
lret
cmp
or
cli
jno
or
mov
push
iret
test
jb
gs
mov
cmp
stos
loope
ja
fsubrl
lds
fbld
push
cltd
cmp
cmp
scas
adc
fwait
push
lahf
inc
pop
cli
aad
dec
stos
jbe
mov
fisttpl
push
cli
arpl
stos
push
push
adc
repnz
cmp
fs
loop
sub
lahf
mov
inc
mov
inc
ss
push
stos
ja
cmp
fldcw
pop
mov
xchg
test
sbb
fcoml
fisttpll
mov
xchg
loope
pop
int3
aas
fdivl
loop
mov
stos
in
inc
cmc
mov
repnz
lahf
test
lods
push
mov
orb
cwtl
stos
enter
leave
lahf
rol
stos
fiadds
inc
add
scas
jmp
jecxz,pt
pusha
or
les
or
add
add
mov
jmp
inc
inc
scas
jp
jae
hlt
jae
in
daa
fs
mov
les
int
mov
or
mov
add
call
push
cmp
out
xchg
neg
aam
cmc
cmp
inc
stos
imul
inc
inc
aaa
jp
jns
inc
adc
leave
pop
xor
adc
push
repnz
dec
notb
es
lahf
mov
jb
leave
or
sbb
negl
push
lcall
or
mov
loope
in
or
loop
rclb
push
pop
stc
mov
insl
in
xchg
mov
push
divb
sub
push
or
out
sub
inc
sbb
clc
pop
movsb
add
ret
leave
push
jp
xchg
and
push
xchg
mov
jb
in
pop
jl
cli
xchg
mov
es
sbb
dec
xor
ja
push
jne
jb
int3
arpl
xor
dec
sbb
imul
push
jno
and
jne
andb
jl
ss
test
sarb
cmp
mov
aas
pop
inc
int
mov
rorl
and
out
inc
sbb
xor
cwtl
aad
xchg
pushf
js
imulb
hlt
insb
cwtl
out
sarl
movsb
mov
jo
test
lods
or
adc
mov
ds
mov
loop
jle
sbb
xchg
cmp
fldl
mov
fs
test
aas
in
cmp
push
ss
aaa
call
or
mov
mov
jl
adc
rcl
outsb
add
fisttpl
sbb
mov
daa
lods
ja
cmpsb
and
pushw
inc
mov
out
jge
dec
xchg
mov
aam
mulb
adcb
rcll
mov
mov
mov
cmp
sub
sti
add
aam
mov
cmp
iret
inc
xor
ret
daa
inc
pop
punpcklwd
push
fbld
and
pop
js
popf
xchg
and
movsb
aam
insb
in
mov
push
mov
jbe
dec
popl
loop
cs
gs
and
inc
push
inc
mov
add
mov
lods
and
dec
mov
je
out
cltd
add
leave
sbb
int3
stc
cmp
jecxz
stos
jg
ret
sub
pop
jmp
xchg
xorl
jno
lea
in
stc
clc
aam
add
aam
and
leave
dec
push
jle
add
fistpl
mov
clc
test
jo
inc
enter
in
and
test
data16
sbb
testb
mov
scas
aad
das
push
scas
mov
aaa
sub
push
mov
fwait
addr16
fidivrl
push
rcll
pop
mov
scas
jb
lahf
cmpsb
int3
pop
fisttpl
jmp
shrl
push
xor
es
lret
mov
sub
out
cmp
fadds
rol
push
mov
dec
repnz
and
mov
jmp
ss
lods
int3
test
sbb
sbb
xlat
xor
or
test
add
repz
jbe
rol
dec
cwtl
mov
pop
push
out
cli
push
shrb
jo
fnstsw
sbb
cli
xor
and
movsb
pop
outsb
pushl
ljmp
push
repz
jg
repnz
outsl
js
daa
leave
mov
loope
dec
jg
hlt
pop
mov
dec
das
mov
in
push
adc
test
cmpsl
mov
scas
inc
icebp
test
out
mov
xchg
dec
jmpw
push
push
enter
push
icebp
pop
mov
rorb
pop
or
push
popa
in
dec
push
into
in
ds
int3
movl
pop
inc
ret
in
hlt
sbb
and
xchg
enter
jle
int
scas
into
inc
add
in
mov
or
mov
cmpsl
xor
mov
pusha
aas
add
lods
pop
std
mov
adc
mov
adc
popa
cmp
push
inc
add
mov
inc
ficompl
out
les
cmp
xchg
fcoms
aas
mov
and
pop
fistps
pop
pop
or
insl
std
xchg
sub
inc
pop
jecxz
or
loopne
clc
in
lea
repnz
repz
or
jg
pop
mov
cltd
mov
cmp
fcoml
decb
xchg
fstl
mov
repnz
xor
xor
das
fwait
outsb
push
in
mov
jb
rorl
lods
xlat
jecxz
jno
lock
push
dec
iret
push
arpl
iret
dec
sbb
mov
dec
mov
adc
sub
mov
scas
jmp
neg
jg
inc
mov
jb
cmc
movsl
outsb
cmpsl
mov
movsb
cmc
lea
dec
mov
testl
test
dec
or
pop
cmc
cs
sub
mov
jle
push
sahf
jne
int3
xor
out
rcll
cltd
out
clc
es
add
pop
dec
fstps
gs
ficomps
xchg
test
mov
lds
rcr
cmp
jp
jp
push
daa
xor
mov
and
mov
mov
or
imul
pop
jmp
and
xchg
adcb
fistpl
in
xchg
shlb
fistl
popf
lret
test
sub
or
sub
in
lahf
push
cmp
popl
out
pop
orb
adc
adc
sub
mov
mov
inc
ds
jnp
popa
cltd
es
sbb
and
push
sbb
push
sub
dec
jmp
cmp
sti
xchg
mov
in
pushf
addr16
xchg
mov
push
xor
aas
jne
push
add
xor
xchg
jg
adc
adc
ss
mov
stos
in
sti
rcrb
lret
and
cmp
mov
xchg
pop
push
cltd
int
enter
fstl
xchg
lahf
cmpsl
add
mov
xor
add
lret
pushf
mov
push
test
out
sbb
not
xlat
jns
mov
scas
leave
test
jae
cmp
sti
cmp
dec
xchg
je
cwtl
jno
sbb
pusha
fdiv
aaa
sub
jle
dec
fwait
xor
rol
lea
stos
stc
stos
mov
pop
push
jmp
in
push
push
adc
sbb
mov
sbb
dec
out
cmc
xchg
dec
cmc
fstps
add
dec
loopne
call
shr
push
and
push
fnstcw
mov
mov
pop
call
je
out
mov
push
dec
sbb
push
sbb
lret
cli
sub
mov
push
je
cmpl
testb
nop
and
mov
cmpsb
loop
shl
js
pop
mov
xchg
inc
mov
les
or
or
pop
mov
xchg
mov
bound
push
cltd
xor
sub
in
fdivl
cld
jns
roll
mov
lgs
mov
enter
addr16
inc
mov
xchg
mov
mov
shlb
dec
push
int
xor
outsl
add
leave
loop
subl
popf
in
add
test
dec
test
mov
shlb
mov
xlat
lret
call
mov
xchg
pop
outsb
pop
movsb
in
mov
dec
aam
das
mov
dec
scas
mov
repnz
mov
sub
divl
insl
and
mov
lods
jno
cmp
mov
sbb
rclb
inc
jne
jle
mov
xchg
call
push
movsl
movsb
or
mov
scas
add
inc
lock
dec
mov
mov
add
out
test
dec
inc
cmp
pop
cwtl
mov
or
or
mov
or
mov
cmpsb
pop
pop
mov
in
jns
cmp
aam
dec
jg
sbb
lock
xor
xchg
cmp
jb
cmp
mov
cmp
ds
cmp
cmp
fidivl
loope
jns
push
mov
dec
scas
mov
cmpsl
inc
mov
and
mov
xor
add
stos
cmovae
mov
push
loop
push
jns
push
jnp
nop
mov
adc
mov
or
out
adc
cmc
aaa
cmpl
sub
jae
adc
sub
mov
roll
idivl
imul
sbb
cli
and
dec
int3
hlt
mov
aad
dec
outsb
aam
enter
insl
pop
xlat
push
ja
push
mov
out
mov
add
in
js
into
cmpsb
sub
shll
and
stos
aam
lods
ja
xchg
push
pop
jmp
in
xor
inc
pop
sub
into
pop
shr
dec
loope
inc
adc
scas
pop
scas
sub
mov
int3
adc
cmpsb
stos
dec
cmp
and
dec
outsb
sub
dec
lret
shrb
xchg
pop
enter
cmp
cmp
mov
jno
stc
pop
xchg
fstpt
jb
into
mov
mov
stos
cmc
xor
imulb
xor
cmp
insb
testl
pop
sub
call
sti
dec
mov
fs
pop
cmpsb
add
sub
loopne
lds
cmp
xor
push
and
or
cmp
xor
jp
sbb
xchg
jmp
and
jmp
loop
sbb
jnp
data16
enter
lcall
insl
test
popa
push
and
test
dec
mov
lcall
and
nop
inc
dec
push
fistl
xlat
cmp
pop
jne
sub
movsl
mov
sbb
sbb
dec
push
enter
jo
das
loop
or
in
fisttps
clc
mov
sbb
into
adc
leave
movsl
movsl
push
rcrl
lcall
mov
loop
cmp
cmp
mov
test
pmaxsw
mov
pop
fisubrs
dec
and
sub
hlt
pop
std
sti
test
loope
xchg
ret
out
out
mov
and
into
add
in
lock
mov
jnp
pop
ret
lods
pop
xchg
pop
mov
inc
push
inc
imul
dec
pop
in
cwtl
leave
popf
xchg
mov
shl
in
xchg
loopne
lds
jns
mov
mov
mov
insb
mov
popa
daa
fidivs
ret
inc
jp
xchg
adc
fwait
arpl
out
int
xor
cltd
cwtl
pop
cltd
add
add
xor
xlat
inc
clc
xor
pop
adc
int
mov
in
int3
out
lret
xchg
stos
mov
shlb
mov
fmuls
outsl
jbe
in
repz
sub
call
rcrb
cmc
pop
pop
mov
aad
dec
ret
js
add
pusha
rol
xor
and
jb
or
or
lcall
aas
cmp
adc
mov
push
mov
mov
xor
jmp
inc
popf
xlat
mov
int3
dec
cmp
es
lret
movsb
jns
or
sub
flds
xchg
jmp
in
mov
cmpsb
mov
mov
js
or
pop
xchg
cmp
or
rcl
ja
push
jmp
or
jne
sbb
in
call
lds
or
mov
xchg
push
push
lret
repnz
sub
test
cmpsb
sub
enter
loop
adc
lahf
xchg
loopne
or
aam
sbb
jg
inc
push
or
divb
leave
jge
ds
mov
cltd
adc
mov
mov
repz
data16
jmp
mov
mov
iret
fmuls
or
add
mov
bound
pop
pop
sbb
xor
xlat
in
neg
and
xchg
jle
or
loope
shl
iret
xchg
sahf
dec
dec
js
cmp
mov
lret
int
sbb
push
aaa
jbe
call
sub
insb
inc
iret
insb
clc
mov
xor
mov
pop
test
and
sub
xlat
mov
jp
mov
sbb
arpl
dec
out
push
mov
pop
test
sub
cmc
shrb
repz
iret
bound
inc
arpl
sbb
imul
lods
mov
int3
mov
mov
or
repz
mov
mov
loop
insl
aam
jg
jecxz
sbb
add
cli
insl
inc
mov
jp
pop
orl
push
jno
aad
rcrl
cmp
and
std
and
and
stc
adc
sub
call
jnp
out
nop
jle,pn
mov
sbb
add
jnp
mov
fsubr
std
sub
jb
icebp
inc
push
adc
cmp
add
or
loope
leave
in
mov
insb
mov
or
lcall
imul
lcall
sbb
addl
int
pop
outsl
cwtl
ss
inc
shrl
imul
inc
mov
fs
xlat
cwtl
outsl
aaa
cmc
jnp
or
xor
jb
mov
sarl
dec
inc
dec
lahf
bound
std
and
sub
in
dec
sarl
or
lods
xchg
es
movb
mov
mov
fisttps
mov
jg
cmp
dec
aad
pop
cmp
les
int
pop
arpl
popa
xor
scas
test
mov
and
dec
mov
xchg
add
shrb
fucom
test
pop
lods
fsts
or
and
pop
xchg
pop
scas
stc
xchg
jmp
sahf
jno
sti
lds
addb
mov
setae
pop
inc
xor
jns
out
popf
add
subb
mov
and
xchg
ja
mov
mov
xchg
jns
push
or
push
filds
jne
xlat
inc
jg
pop
mov
nop
aad
push
cli
in
insb
push
fwait
adc
jnp
push
sub
jne
or
jecxz
inc
and
mov
movsb
imul
add
cmp
add
pushw
shlb
mov
out
dec
jecxz
xchg
jb
dec
mov
lock
add
mov
jb
das
xchg
xor
or
dec
add
xor
mov
es
pop
enter
loop
xor
rclb
fnstenv
xor
adc
sub
stc
xchg
fdivp
rcrb
inc
jl
jbe
jl
sbb
outsb
jge
sbb
inc
mov
scas
aam
dec
aas
imulb
lret
mov
push
pop
imull
mov
rorl
adc
adc
push
inc
jnp
lds
repnz
mov
sub
push
mov
aaa
jmp
ljmp
or
sti
pop
data16
loope
movsl
push
test
cld
mov
out
xor
scas
mov
push
sahf
push
lret
cltd
mov
fadds
into
xchg
xchg
fldl2e
mov
mov
cmp
ss
mov
jnp
sti
cmp
in
inc
es
stos
dec
sbb
sbb
pop
add
mov
jbe
insb
or
adc
sbb
xchg
push
jno
and
cmp
aas
lods
inc
pop
add
movsl
inc
aas
push
xchg
and
jae
cld
push
adc
ja
lock
into
aam
mov
inc
mov
mov
pop
lds
lret
or
xchg
pop
pusha
push
fwait
mov
jp
mov
push
les
adc
xchg
and
jno
mov
add
popf
pop
ja
shl
je
fbld
enter
jno
jne
inc
mov
add
addb
addr16
sti
lret
and
aad
mov
dec
inc
gs
out
aaa
lods
adc
xor
mov
mov
int3
scas
ds
int3
sbb
sub
mov
adc
fwait
int
jne
cwtl
adc
pop
xchg
dec
fisubl
cmpsb
fcompl
jecxz
dec
fcmovne
xchg
mov
jge
fwait
cmpsl
and
in
xor
push
negl
rcll
add
loope
nop
xchg
cmpsb
pushf
mov
aad
int3
add
bound
sahf
lahf
and
jp
xchg
scas
xchg
or
inc
xlat
xchg
dec
stos
pop
mov
inc
mov
data16
xchg
and
loope
test
jecxz
andb
adc
out
mov
mov
lret
addr16
sbb
sub
mov
std
adcb
cld
cmp
jo
and
jae
lret
sub
int
out
sub
into
sbb
mov
jb
dec
fucomp
loop
mov
gs
mov
mov
or
icebp
shlb
icebp
subb
mov
and
movsb
or
dec
adc
sarl
sub
push
mov
test
jno
cmc
xchg
aad
mov
testb
xchg
cmp
mov
mov
sub
cltd
cmp
mov
shrl
mov
movsl
popf
in
in
push
xor
cld
ss
xor
fdivrs
inc
add
ljmp
mov
js
xchg
std
mov
cwtl
jae
shl
repnz
in
das
adc
shlb
xchg
push
sbb
or
enter
lds
adc
stos
shll
popf
inc
mov
xchg
out
cmp
jbe
cmp
xor
lret
rcr
mov
sbb
xchg
cltd
jns
or
xor
cmp
insl
je
mov
push
cmp
loop
inc
cmp
cli
sti
test
faddp
fimuls
sbb
add
adc
pushf
mov
pop
xchg
jp
dec
aad
sub
lahf
cltd
in
dec
repnz
cmp
sahf
sub
mov
push
pop
add
ss
push
mov
mov
test
xlat
push
jno
dec
mov
hlt
movsl
mov
push
sbb
xor
cmp
pop
arpl
sbb
xor
add
adc
xor
es
imul
fdivl
mov
es
xchg
loop
mov
popl
jp
xchg
movsl
repz
gs
imull
pop
mov
nop
fwait
pop
shll
roll
pop
in
push
out
repnz
jbe
gs
sub
lods
push
gs
inc
xchg
les
or
rcrl
xlat
or
loope
dec
xchg
fsubp
jb
int
sub
add
ret
lret
push
inc
hlt
inc
cs
test
and
rclb
inc
fcmovu
icebp
add
dec
popf
lods
lcall
out
inc
add
mov
fistl
push
sub
or
dec
add
and
imul
sti
pop
mov
and
add
sub
jne
andb
jecxz
bound
push
add
and
mov
stc
test
push
out
mov
mov
popf
testb
je
idivl
pop
lea
pop
out
sbb
int3
cmp
hlt
add
xchg
adc
cmp
add
rclb
push
mov
in
es
cmpsb
aad
mov
xchg
lea
sbb
rorl
scas
jo
jo
xchg
cmpsl
test
add
cld
cs
and
adc
scas
repnz
insl
mov
jl
shlb
cld
xor
mov
in
xchg
or
idiv
stos
sub
aam
dec
stos
sub
mov
cli
fcomip
and
jno
xor
add
cltd
push
or
addr16
inc
fucomip
aad
xchg
cmp
stos
jb
imul
or
push
clc
cmc
test
sbb
ja
pop
jbe
sbb
rolb
xor
jmp
adc
jecxz
mov
cmp
or
push
mov
cld
lret
adc
mov
mov
xor
pop
cmp
ljmp
cmp
fisubl
imul
pop
cmpb
push
aaa
lock
int3
xor
inc
lcall
mov
lock
sbb
and
je
push
jo
ja
push
adc
pop
cmp
cli
inc
xchg
ret
or
push
sub
cs
mov
dec
pushf
notl
jmp
xchg
js
push
dec
movsb
jp
sub
mov
daa
cltd
mov
jle
fdivl
data16
sti
negl
jb
xchg
adc
mov
sti
test
dec
add
dec
jbe
mov
in
inc
cmc
sbb
mov
cs
dec
cs
insl
push
mov
or
push
cwtl
fsub
inc
cld
in
movsl
jl
adc
pop
dec
sbb
push
sub
pop
cmpsl
lock
es
scas
loop
mov
pop
inc
arpl
mov
xchg
mov
pop
jecxz
mov
jnp
lcall
cmpb
out
lcall
js
xchg
adc
mov
pop
mov
movsb
pop
or
dec
pop
cmp
sub
xchg
adc
mov
dec
les
mov
xor
cli
cld
mov
nop
adc
cmp
mov
iret
iret
cs
pushf
jnp
gs
lcall
dec
loope
js
sub
inc
mov
push
jnp
adc
dec
xchg
cld
mov
cwtl
mov
lcall
pusha
ret
mov
jae
orl
fiadds
push
cmp
andb
pushf
ds
leave
jmp
lret
cmp
rcl
jbe
outsb
lret
add
xorl
clc
inc
mov
push
rcl
ss
loope
cmp
xchg
sub
add
in
push
out
mov
or
mov
xor
orb
iret
fcoms
lds
rolb
daa
pop
mov
xlat
jne
imul
xchg
xchg
test
jecxz
add
jle
mov
data16
bound
jb
adc
pusha
jecxz
out
jnp
cmp
repz
xor
les
mov
arpl
sub
cmpsb
fwait
xchg
cmp
sbb
scas
jmp
xor
mov
jbe
jmp
cltd
fldcw
popf
and
sub
xchg
inc
mov
stos
fsubrl
mov
mov
and
dec
push
andb
dec
cld
mov
push
and
pop
shl
inc
adc
mov
jge
mov
ljmp
stos
testl
sub
insb
pop
xor
in
sub
xor
push
ficoms
sarl
adc
sub
ljmp
andps
clc
pop
insl
test
mov
xor
lds
scas
or
sbb
mov
fisttps
xchg
cltd
pop
sub
cltd
mov
rcrb
scas
cmpsl
popf
fidivrs
jno
out
bound
shl
inc
testb
mov
cs
sub
cli
in
mov
jmp
lock
addb
in
mov
pmulhuw
or
mov
sub
addr16
test
sub
ss
popf
pushf
jge
xchg
push
mov
ret
inc
xor
leave
and
adc
sub
push
xchg
nop
jns
mov
out
pop
pop
or
mov
and
vpbroadcastmw2d
xchg
mov
xor
iret
add
jbe
mov
add
mov
aas
pop
subl
sti
sub
mov
xor
jp
call
inc
pusha
inc
xor
testb
imul
jbe
inc
lahf
jle
xlat
sub
sbb
lds
aad
fldcw
adcl
popf
cltd
add
ret
fwait
lret
mov
jnp
sub
outsb
jmp
and
jle
imul
lcall
jle
rcll
push
lods
in
xor
prefetch
lods
xchg
out
test
or
jo
mov
jae
popw
add
je
fwait
call
scas
cmp
mov
and
sarl
ljmp
inc
ljmp
shll
cmp
out
mov
push
add
sub
into
lods
cmc
scas
and
insl
mov
cwtl
cmp
adc
pop
sub
test
mov
inc
call
mov
inc
jg
adc
fdivrl
popa
and
sub
dec
cmpsb
push
dec
mov
jns
jbe
movsb
mov
adc
rorb
mov
or
xchg
xchg
cs
xchg
flds
pop
adc
je
in
push
je
dec
mov
pusha
scas
pop
popf
fldenv
sub
bound
movsb
repnz
arpl
pop
push
lea
sbb
inc
pop
mov
inc
pop
jle
xchg
mov
push
shll
cmp
pushf
xor
cmp
js
je
sub
sub
adc
jge
push
inc
jnp
int3
pop
lea
mov
xor
sub
xchg
cmp
jo
dec
jne
in
shll
pusha
and
and
lds
popf
aad
or
push
inc
fidivl
sub
cltd
xorb
test
and
loop
lcall
sbb
cmc
push
dec
xlat
pop
aaa
cs
cmc
shll
scas
lcall
push
stos
mov
ljmp
add
fidivs
outsb
ret
mov
mov
xchg
jmp
addr16
ret
sar
sbb
movsl
call
sub
dec
pop
stos
jp
pop
adc
inc
fldcw
cmp
dec
xor
dec
push
pop
test
mov
iret
mov
xchg
sbb
popa
jmp
xchg
mov
xchg
xlat
cmp
inc
push
in
sub
push
xlat
mov
inc
shrb
scas
mov
dec
dec
mov
std
imul
in
clc
bound
sub
fdivs
mov
cli
nop
jbe
jnp
mov
cs
lods
imul
scas
lds
je
inc
addr16
xor
divl
push
sbb
pop
mov
and
xor
fisubl
scas
adc
push
idivb
sbb
imull
cmp
lahf
cld
push
dec
outsl
pop
add
xchg
or
jnp
push
notb
push
roll
fcmovne
mov
mov
pusha
ss
mov
jno
fcomps
jmp
dec
xor
sbb
pop
pushf
mov
outsl
decl
ret
inc
in
test
cmp
jb
jl
dec
mov
hlt
inc
adc
mov
or
ja
or
inc
stos
xchg
push
cmp
into
fstl
cmp
inc
arpl
mov
add
xchg
aas
xor
jp
fiaddl
loope
stos
imul
ss
jmp
xor
aas
lods
sbbb
pop
pop
pop
dec
sbb
lahf
mov
les
shlb
mov
adc
test
push
cld
shlb
ret
sbb
adc
cmp
mov
sbb
mov
pop
xor
scas
cld
test
jle
movsb
pusha
lea
popf
out
adc
rcr
daa
pop
out
test
out
notb
inc
shrb
sub
scas
addr16
push
or
mov
or
and
xor
sub
aad
pusha
test
das
fsubrs
adc
cli
mov
inc
inc
xchg
push
xchg
mov
xchg
pop
ret
mov
mov
inc
xlat
jecxz
fiaddl
mov
add
xchg
movsb
data16
pop
adc
adc
cmp
inc
jle
popa
and
inc
adc
pop
xor
fwait
rorl
push
or
add
xchg
jbe
nop
shrl
jg
mul
add
xor
xor
push
inc
inc
cmc
xor
mov
mov
std
mov
mov
add
or
ja
inc
lret
cld
jne
dec
call
sbb
sub
scas
cmc
or
js
mov
jle
mov
pop
mov
jns
cltd
dec
push
jg
mov
pop
pop
inc
inc
aad
leave
mov
negl
sub
and
mov
test
das
shll
pushl
js
ds
pop
xchg
xchg
xchg
sub
push
cmp
fmuls
insb
cmp
orb
out
lock
jmp
int3
or
stc
arpl
cmc
lret
pop
mov
jmp
mov
mov
and
adc
sbb
loopne
jg
xchg
shrb
scas
iret
push
gs
lcall
xchg
loopne
add
insb
mov
mov
rcrl
dec
sub
mov
ja
xchg
ret
add
sarb
jle
add
jbe
testl
aaa
outsl
push
mov
inc
int3
inc
adc
aam
sub
or
rcll
or
pop
fidivs
jle
ljmp
mov
bound
sarl
fwait
and
cs
jnp
cmp
push
lock
rorl
idivb
xchg
aam
mov
std
inc
dec
jge
or
push
into
out
out
pop
in
push
xchg
pop
js
sub
rcll
pushf
add
inc
cmp
das
in
push
pop
mov
push
xorb
inc
jp
lret
insb
jno
dec
ljmp
cmc
mov
mov
stos
bound
jl
arpl
add
jae
flds
lods
repnz
add
cmp
dec
lret
pushf
xor
inc
mov
imul
fdivp
mov
adc
ljmp
addr16
ret
jle
sbb
inc
lahf
lods
jp
loope
sub
sub
add
pop
mov
jb
inc
cmp
inc
out
xchg
sbb
pop
mov
mov
cmpsb
dec
iret
mov
sar
out
arpl
jno
pop
mov
dec
lods
add
sbb
xor
push
sarl
jnp
inc
mov
pop
cmp
icebp
sub
cmc
rclb
in
push
cmp
mov
xchg
bound
stos
xchg
inc
jle
inc
dec
xor
shrb
jno
mov
dec
fscale
add
xchg
mov
imul
testl
fbld
add
notl
fwait
aas
cmp
test
xchg
clc
push
repnz
or
test
mov
out
inc
sub
nop
jno
push
dec
cbtw
loope
subb
dec
jbe
stos
lret
pop
inc
mov
in
shlb
lcall
hlt
adc
mov
addb
xor
lea
dec
sub
push
push
and
or
dec
mov
dec
jecxz
xor
push
iret
xchg
xchg
xchg
inc
jge
int
jae
cmpsb
out
out
in
add
and
popa
popa
out
adc
je
xchg
cmp
leave
cmp
mov
dec
decl
or
xchg
and
sub
repz
xchg
div
inc
mov
mov
push
fisubrl
std
out
mov
mov
aaa
rclb
xor
and
data16
lret
push
iret
sub
mov
leave
sbb
mov
mov
popa
sub
lcall
mov
lcall
inc
and
in
pop
cmc
nop
je
sbb
outsl
orl
mov
out
lds
aam
mov
dec
jns
and
cmp
adc
xchg
xor
in
fwait
icebp
adc
iret
outsb
xchg
xor
adc
sub
out
repz
cmp
xchg
das
test
dec
aaa
or
push
das
cld
xchg
xchg
nop
and
loope
jg
out
aas
add
dec
lods
mov
cmp
and
adc
ja
scas
xchg
mov
and
cmp
mov
xchg
lcall
mov
xorb
sti
mov
scas
pop
xchg
mov
jmp
ror
mov
popf
cmp
mov
cli
xabort
inc
icebp
lods
in
mov
ja
scas
mov
mov
mov
mov
lea
adc
add
ror
call
add
add
lods
push
stos
dec
push
aam
and
mov
fbstp
jno
arpl
inc
or
aam
adc
mov
push
sbb
or
int3
dec
idivl
xchg
fldl2t
fsubrl
dec
aaa
test
xchg
sbb
dec
adc
test
jle
imul
loope
inc
out
ret
inc
clc
jnp
test
push
mov
mov
lcall
lods
adc
sahf
or
and
or
fnstsw
or
xor
cmp
cmp
fcomps
es
mov
push
inc
insl
adc
es
or
fs
sti
lahf
ret
jmp
cmpsl
push
loop
jno
dec
sahf
or
push
or
mov
cmp
sbb
pop
stc
das
pop
xorl
dec
push
stc
in
xor
addl
and
jns
into
sbb
stos
push
jecxz
xor
lret
and
ret
sahf
xor
pusha
sub
iret
cli
pop
in
mov
inc
jno
jmp
or
popf
shlb
negb
lret
xchg
jecxz
ret
in
sub
push
sbb
int
adc
cmpsb
mov
jecxz
pop
fsubl
jne
pop
inc
mov
test
mov
fiadds
fdivs
loope
mov
pop
xchg
pop
xchg
mov
scas
sbb
subb
dec
mov
gs
daa
pop
stc
lret
inc
pop
ds
fildll
xor
inc
mov
out
sbb
mov
mov
xchg
sub
cmc
cmpsb
lcall
insb
mov
add
out
jnp
ds
movsl
movb
jl
jns
aam
mov
pop
fisttps
xor
cmpsb
sub
scas
sub
xor
pop
xor
xchg
in
inc
add
lock
rcrb
or
pop
push
call
add
adc
sub
repnz
cli
inc
dec
mov
jmp
mov
ljmp
lock
jg
popf
sbbb
dec
arpl
xchg
push
aad
mov
fsubl
out
ljmp
dec
out
mov
test
mov
lods
repnz
repz
cmp
inc
cmc
or
pop
jecxz
mov
mov
aad
loop
xor
daa
sbb
rorl
xor
clc
ret
je
enter
mov
imul
dec
cmpsl
icebp
mov
xlat
aad
loop
mov
jno
mov
maskmovq
divl
repnz
aas
iret
cmp
and
jle
cwtl
aas
cwtl
cmpsl
jge
inc
mov
mov
shll
push
popa
cmp
lds
stos
mov
jae
adcl
mov
push
pop
pop
lcall
lcall
aas
fwait
xchg
loop
pop
add
sub
lcall
aam
mov
lret
adc
jb
mov
adc
fldcw
ret
push
cmp
or
ret
mov
repnz
ss
aaa
pop
jmp
mov
sarl
and
push
jp
leave
rcr
push
pop
mov
cli
cs
push
adc
fidivl
into
sbb
movsb
add
sub
mov
xchg
push
pushf
jp
arpl
xor
mov
fldl
adcl
add
imul
lret
jmp
in
cmpl
mov
cmp
inc
dec
jb
sbb
or
pop
xor
aam
adc
out
mov
not
out
nop
add
add
pop
imulb
jae
in
mov
pushf
or
adc
std
int
and
out
sbb
mov
mov
mov
daa
cltd
mov
lea
sub
jno
stc
sbb
or
mov
jae
push
test
jp
or
movsl
andl
insb
int3
mov
jns
adc
sub
bound
or
add
repnz
std
push
mov
mov
jne
inc
daa
popf
push
fdivr
push
adc
aad
ljmp
insb
or
fwait
nop
pop
outsl
clc
xchg
xchg
push
into
lock
jne
sbb
in
jmp
stos
lock
outsb
cwtl
mov
cmpsl
inc
mov
test
sub
xchg
inc
popw
mov
ljmp
lock
sub
hlt
pop
cmpsb
sarl
inc
clc
mov
mov
jno
xor
aaa
insb
lods
in
jp
and
outsl
fdecstp
xlat
aas
sarb
mov
dec
loop
adc
stc
mov
ljmp
and
fistps
rcrb
lods
neg
sbb
xchg
inc
xchg
mov
aaa
js
sub
xchg
cmc
leave
xchg
or
lcall
test
and
imul
sub
pushf
ret
dec
adc
inc
mov
mov
test
leave
std
repnz
adc
aaa
mov
push
push
inc
ds
test
sbb
mov
dec
xchg
aas
es
jno
pop
daa
mov
sti
enter
in
lret
jmp
and
and
outsb
cli
adc
stos
add
jnp
sub
aam
ds
xchg
mov
mov
call
dec
push
push
pop
mov
jge
push
jae
or
jae
cmp
aad
scas
shl
nop
loop
mov
into
adc
pushf
jae
andl
and
push
movsl
mov
pop
jne
sbbl
ja
imul
xchg
xor
cmp
les
or
mov
andb
jno
or
stos
je
hlt
outsb
mov
mov
les
fs
rcl
iret
mov
and
ljmp
lock
sbb
cmpsb
pop
adc
pop
pop
pop
fldenv
cmp
xor
je
dec
jg
popa
fdivrl
xchg
jmp
aad
adc
leave
adc
icebp
scas
add
test
push
or
inc
imul
nop
sub
cmpsb
jg
repnz
xor
and
lahf
aam
adc
fidivrl
jecxz
pop
je
xor
inc
jb
push
push
bound
push
pop
fwait
ret
sti
push
mov
pop
js
popf
add
in
cmp
mov
aas
push
les
leave
push
jmp
pop
pop
jne
repnz
xor
pop
arpl
icebp
aam
repz
es
int3
inc
pop
mov
add
dec
push
lods
mov
int3
and
jmp
icebp
or
stc
mov
push
pop
fildll
imul
push
daa
adc
add
in
cmp
pop
dec
dec
push
mov
mov
jg
rcrb
and
xorb
ja
push
inc
cmp
or
dec
jnp
push
xchg
mov
or
repnz
jne
cmp
pusha
pop
xlat
dec
ljmp
inc
cs
adc
shl
loopne
fnstenv
cmp
scas
cmp
mov
xchg
xchg
into
mov
xor
mov
fmull
jbe
into
inc
stos
sbb
push
and
mov
cmp
jge
sbb
xchg
pop
inc
dec
imul
mov
sbb
std
push
xchg
jl
push
lret
xorl
in
mov
xlat
dec
inc
adc
add
xor
scas
adc
cmp
xor
imul
rcll
dec
mov
cmc
mov
jp
pop
dec
inc
add
loopne
iret
test
in
movsb
ja
add
add
mov
add
pop
in
sahf
jmp
and
jno
clc
ret
dec
inc
jg
cld
aas
dec
outsb
arpl
insl
push
xor
mov
shr
push
xchg
adc
push
adc
push
cld
call
adc
add
pop
cld
add
push
inc
dec
pop
clc
xor
sub
in
adc
fmull
sbb
outsb
xor
sahf
push
vaddsubpd
mov
mov
imul
aam
lods
or
xor
pop
addl
or
push
push
aaa
dec
rcr
push
dec
push
mov
loop
mov
rcrl
les
nop
push
fidivrl
in
je
ds
lods
add
dec
xor
xor
mov
push
or
cmp
xchg
or
sbb
aam
out
dec
push
mov
mov
push
arpl
fstpt
pop
pop
iret
cmp
lock
es
imul
scas
mov
test
pusha
mov
add
inc
xchg
jecxz
lcall
aam
mov
jbe
adc
cs
xchg
fistl
inc
xchg
outsl
lds
call
mov
fsubrp
repnz
insb
push
shll
lods
mov
mov
in
adc
fadds
loopne
sub
cwtl
repnz
cs
in
cmp
into
shlb
add
iret
test
sub
and
or
mov
pop
sbb
inc
and
jle
push
ja
inc
test
cmpsl
jp
imul
jno
mov
mov
jb
mov
jecxz
cmpb
test
jne
addb
jle
lcall
enter
sub
add
shll
std
sub
fdivrs
push
add
pop
sbb
mov
pop
daa
in
in
in
fiadds
cltd
xchg
dec
pop
xor
addb
xchg
aaa
cmpb
cld
lret
arpl
mov
es
stc
divl
cmp
stc
jns
shrb
rcl
xchg
push
add
xor
mov
fwait
lcall
addr16
sbb
rorb
out
cld
add
pop
pop
clc
in
mov
in
xchg
nop
mov
xor
cltd
inc
out
ret
nop
add
pop
mov
addr16
stos
not
adc
push
jo
cmp
pusha
adc
pop
push
inc
fisubs
dec
pop
mov
xor
repz
int
mov
pop
xchg
popa
pusha
and
fcmovnb
sbb
sub
mov
sbb
mov
pop
and
outsb
ja
push
mov
xchg
ja
mov
mov
mov
arpl
pop
jmp
fcmovnbe
jmp
fsub
xor
js
out
jb
adc
or
outsl
ss
dec
dec
sub
push
pop
fs
sub
addb
and
dec
xchg
sbb
arpl
push
mov
pop
das
mov
repnz
stos
fmull
mov
int3
sbb
pusha
fs
daa
or
sub
in
mov
jb
mov
dec
dec
mov
sub
adc
xchg
xor
mov
rclb
jae
addr16
add
mov
or
or
mov
fs
mov
pop
or
lret
push
cwtl
out
pop
mov
inc
movl
mov
imul
jnp
mov
std
inc
shlb
lds
adc
xchg
xchg
faddl
das
mov
dec
mov
dec
mov
or
sti
lds
xor
xor
fimull
repz
ret
dec
scas
sbb
xor
dec
cmp
mov
jb
jno
adc
lea
insb
pop
ret
loopne
popf
jmp
or
add
aaa
jb
cmp
lret
and
xor
ljmp
adc
xchg
mov
mov
js
mov
sub
mov
dec
jge
push
sub
push
movsb
nop
iret
repnz
movsb
int3
or
js
xor
psubd
inc
lret
popf
jnp
ja
add
and
dec
lock
adc
ss
in
mov
xchg
mov
sbb
cmp
pop
mov
xor
sub
xchg
stos
stos
sub
cld
adc
jb
xor
sub
fwait
xchg
ret
js
stos
push
gs
div
pop
int
fxch
adc
jno
repz
add
xchg
cmp
hlt
mov
pop
lods
outsb
jp
cld
test
push
addr16
or
lds
or
cmc
inc
loope
cmpl
enter
cmpsb
inc
nop
mov
inc
add
pushf
aam
sbb
dec
push
sbb
rolb
xor
ss
fists
out
mov
rcl
adc
lret
push
inc
add
add
inc
dec
cmp
ljmp
sti
aas
mov
xor
sbb
stos
rclb
cltd
stos
ficompl
xchg
cltd
test
ret
mov
shlb
lahf
es
inc
mov
jg
mov
sbb
int3
or
dec
sbb
mov
std
mov
inc
xor
or
jno
enter
pop
dec
inc
cmp
jmp
lds
push
xorl
jle
inc
fdivrl
pusha
sbb
mov
push
sahf
sti
mull
add
or
cmp
pusha
pusha
jle
mov
adc
enter
popa
pop
ja
shrl
cld
ja
lahf
xor
sbb
xor
test
add
divb
xchg
jle
mov
andl
or
aaa
call
les
shr
inc
mov
jge
lret
movsb
pop
jge
jp
xchg
lods
lret
call
pop
insb
outsb
jle
lock
std
or
iret
mov
icebp
daa
inc
pop
popf
insb
xchg
xor
xchg
push
pop
pop
pop
add
adc
push
lahf
inc
inc
or
and
mov
mov
inc
mov
fwait
lcall
shrl
mov
out
push
outsb
cltd
mov
sub
repz
jne
out
aad
mov
mov
push
out
dec
pop
push
out
loop
lods
int3
mov
lret
pop
xchg
xor
mov
jmp
lcall
enter
outsb
push
sub
add
mov
fbstp
jp
lds
inc
out
sti
outsl
and
mov
xor
filds
je
adc
or
shlb
xchg
or
push
jmp
and
sbb
push
push
sub
std
xchg
jo
cmc
or
pusha
movb
or
imul
push
pop
pop
dec
lret
push
clc
add
sahf
dec
xchg
lods
pusha
and
jb
cmp
pop
add
jbe
lea
jnp
jecxz
add
movsl
ret
test
add
cmc
int3
mov
outsb
sbbl
fwait
inc
cmpl
and
mull
dec
pop
sbb
addl
jno
and
ds
lcall
sub
int3
out
xchg
loop
sbb
dec
mov
mov
imul
bound
mov
outsl
cmpl
xchg
loope
push
mov
fsubr
sbb
sbb
mov
movsl
dec
repz
pushf
sbb
roll
mov
inc
mov
lret
cltd
jge
mov
pop
roll
lcall
xor
sti
dec
lcall
sub
jge
sub
or
inc
cltd
rcll
inc
sbb
add
shlb
ss
mov
jnp
sbb
dec
mov
push
imul
fimull
xor
rol
mov
cld
in
inc
fmuls
sbb
or
push
sbb
mov
dec
mov
dec
loop
and
ja
shlb
mov
dec
mov
std
push
pop
out
mov
cmp
mov
or
or
in
push
and
or
mov
enter
addr16
ss
in
mov
rorl
call
jge
sub
mov
jo
jo
into
imul
lret
dec
lret
aam
call
sarb
les
mov
pop
dec
lfs
mov
pop
loopne
mov
push
push
addr16
lock
push
inc
in
shl
jl
and
test
repz
sub
mov
and
out
mov
adc
cmp
icebp
in
insb
cmc
inc
fucom
sahf
lret
pushw
xchg
cmp
ds
clc
ja
push
int3
inc
fnsave
sti
sahf
pop
push
xchg
sbbb
sub
shll
sbb
xchg
add
sti
mov
addb
add
ret
hlt
add
jg
clc
cli
arpl
mov
mov
dec
pop
fisttps
add
inc
fdivr
cmp
or
mov
or
scas
mov
in
xchg
bound
stc
lret
mov
jns
imul
cmpsl
pop
mov
add
mov
insl
std
push
xchg
dec
dec
pusha
or
adc
lahf
int3
pop
ds
subb
mov
sbb
fsubs
fs
mov
inc
in
mov
sbb
cmp
psrlq
push
inc
outsl
outsl
insb
aad
stos
inc
ja
pop
pop
loop
pop
inc
rorl
enter
jp
push
sub
roll
or
adc
ds
add
scas
inc
pop
arpl
out
adc
jecxz
and
gs
lahf
xor
dec
or
test
lods
adc
lcall
mov
stc
jne
mov
xchg
jecxz
cmp
shrl
sub
fst
or
dec
xchg
mov
cli
pop
lahf
bound
clc
or
mov
iret
shr
mov
subl
dec
into
jae
int
dec
jae
inc
ficompl
mov
sub
stos
and
mov
cltd
mov
icebp
jp
in
mov
sub
fstpl
mov
shrb
push
pop
xchg
cmpsl
es
jnp
sub
sbb
and
push
adc
inc
cmp
jge
jae
ffreep
xchg
mov
in
pop
icebp
mov
pop
andl
scas
lret
daa
mov
jnp
aad
push
into
sti
or
out
repnz
adc
xchg
xor
sti
jo
rol
fiadds
and
in
dec
fisubrl
mov
xor
sbb
divl
clc
dec
cmp
ret
daa
sub
ret
jbe
out
jmp
push
es
xlat
sbb
jmp
mov
fdivl
out
orb
incl
ljmp
je
push
jle
dec
xlat
clc
xchg
out
lods
je
mov
nop
mov
cmp
xchg
inc
sbb
jmp
daa
push
inc
sub
mov
cmpb
mov
daa
mov
leave
cmp
test
pop
jbe
or
mov
ret
push
sub
push
inc
mov
loope
cmp
cmpsb
pop
xor
add
pop
push
repnz
jnp
out
jmp
pop
nop
in
jl
int3
add
xchg
and
iret
lock
lds
jb
mov
cwtl
lahf
cmp
xor
fs
mov
mov
out
jns
mov
and
fdivl
jne
and
aas
test
test
fsubl
jmp
es
stos
push
inc
fdiv
stos
in
ljmp
adc
sbb
mulb
lock
repnz
mov
test
xor
mov
and
mov
cmp
subb
xchg
push
xchg
test
aas
pop
xor
pop
inc
shl
fdivp
int
jo
in
popa
mov
sub
pop
popa
mov
icebp
jge
pop
imulb
lahf
mov
and
jg
xchg
cmp
push
mov
cmpsl
pop
dec
shrl
mov
xor
or
cwtl
aad
inc
push
add
lret
cmpsb
push
icebp
push
lods
push
mov
call
fisubrl
xchg
subb
cmpsl
shll
adc
movsb
je
jae
push
adc
test
sbb
lret
jnp
push
rcll
mov
add
mov
in
pop
push
add
cs
jb
jge
mov
call
ljmp
push
push
mov
fxtract
mov
mov
imul
sbb
and
jp
mov
pop
inc
icebp
cmp
mov
pop
cmp
sub
xor
repnz
adc
fldcw
jo
sub
decb
int
mov
mov
mov
sti
fwait
add
mov
shl
jle
in
inc
sub
sub
xor
aas
pusha
adc
lock
inc
fnstcw
dec
jge
xor
adc
imul
add
xchg
adc
push
push
inc
divl
les
and
jmp
pop
icebp
jb
inc
sahf
inc
or
test
movsb
in
sahf
mov
ds
aam
pop
sbb
xchg
sbb
adc
cltd
mov
sub
mov
cmp
dec
clc
mov
xlat
iret
sbb
dec
inc
inc
push
loope
jecxz
sbb
hlt
push
sub
push
sbb
repnz
int
mov
pop
push
inc
int3
xchg
pop
jbe
or
inc
adc
pushf
ret
loope
dec
xchg
dec
lds
arpl
inc
jae
mov
mov
sbb
shll
jo
mov
xor
mov
scas
xlat
mov
jge
xorl
pop
arpl
scas
jne
cli
ret
or
sub
sub
in
jo
inc
xor
mov
push
mov
jno
adc
pop
adc
test
xchg
stos
loope
ljmp
xchg
into
loop
loope
dec
or
cmc
cmpsb
xchg
and
sub
add
dec
inc
xlat
jecxz
jo
mov
adcl
movsb
fiadds
pop
push
jmp
pop
cmp
scas
lahf
imul
xlat
flds
sti
dec
sub
or
jmp
pop
mov
adc
add
mov
dec
popa
cmp
aas
sub
pop
dec
das
insl
fisttpll
cld
ja
ja
or
lea
inc
lods
jno
jns
mov
pushf
hlt
or
jb
into
nop
movl
movsb
testl
xor
repz
mov
jns
inc
movsl
sbb
out
mov
aas
adc
add
inc
ds
or
or
mov
inc
and
andl
mov
pop
xorb
pop
fcoml
repz
inc
in
in
aam
test
dec
les
out
pop
ror
mov
repz
stos
and
xchg
pop
test
mov
popf
int3
or
dec
into
jae
push
jne
pop
lds
scas
dec
mov
sub
pushf
cld
insl
loop
xchg
subb
stos
cmc
ret
arpl
imul
les
mov
add
adc
pop
clc
dec
pusha
dec
lods
jl
or
add
and
in
and
xchg
mov
mov
shrl
fistl
jg
push
sub
push
inc
sbb
add
or
in
mov
xchg
repnz
xchg
fwait
roll
incl
mov
mov
add
push
dec
pop
inc
loop
cmpsl
hlt
mov
mov
sub
popl
sub
mov
add
ljmp
ret
test
scas
icebp
cmpsb
sub
enter
ret
xor
xor
iret
lcall
loop
mov
sub
or
out
mov
push
jns
insb
dec
enter
add
insl
loopne,pt
adc
lret
xlat
rcrl
xchg
adc
outsl
lcall
or
jp
cld
int
mov
rcl
cmpsb
arpl
cs
dec
jl
test
mov
stos
mov
mov
dec
xchg
push
or
sti
mov
stos
in
mov
or
fwait
cli
xor
add
cmc
mov
mov
add
cmp
jne
ret
iret
adc
pop
aas
mov
push
out
fs
mov
sbb
fdivrp
sbb
std
mov
and
ss
jnp
cmp
das
loopne
or
cmc
outsb
es
cmp
cmpb
pop
hlt
fistpl
mov
mov
aas
int3
inc
sbb
or
mov
push
cmp
and
inc
clc
stos
pop
js
or
das
mov
test
mov
add
pop
sub
lahf
jmp
lret
push
sbb
pop
shll
lods
rorl
aad
int3
aam
mov
sbbb
clc
clc
popf
iret
mov
dec
jle
rolb
push
inc
cmc
pop
shrl
mov
mov
ret
push
addl
add
xchg
mov
mov
lret
mov
bound
dec
sbb
in
scas
xor
push
add
jno
sahf
testb
mov
test
push
sti
cli
js
nop
dec
stc
or
std
pop
adc
ret
sub
sub
int
ljmp
xlat
or
push
fdivp
roll
cmp
aas
movsl
adc
mov
data16
inc
xlat
add
xchg
sub
mov
jmp
jl
fstl
pop
xlat
test
pop
jb
jns
pop
inc
dec
push
icebp
gs
mov
sbb
push
dec
or
and
ret
ret
mov
xor
je
sub
sbb
or
push
xlat
pop
cltd
or
add
dec
pop
out
cwtl
bound
ss
js
cld
xchg
rorb
xor
dec
xchg
dec
ss
in
pop
adc
xchg
pop
xor
add
cld
incl
fimuls
in
adc
pop
scas
orl
bound
aad
movsl
les
adc
xchg
xor
inc
push
inc
cmpsb
stos
outsl
xchg
xchg
inc
cwtl
daa
in
enter
into
pop
or
xchg
test
mov
out
fldt
adc
push
lret
out
inc
dec
xlat
dec
sahf
mov
push
jecxz
mov
xor
enter
or
pop
scas
sub
orl
xchg
mov
and
mov
out
mov
cmp
or
mov
sub
pop
ss
cltd
sub
pop
dec
jp
push
jno
cli
fiadds
push
mov
push
cld
rcrl
mov
pop
out
mov
dec
out
inc
mov
dec
cmp
insb
mov
int3
jl
in
push
inc
mov
mov
into
xchg
or
in
mov
lock
scas
movsb
sbb
cli
lcall
fcompl
jnp
fidivrs
test
xchg
add
les
sbb
jne
and
out
adc
pop
mov
ss
mov
movsl
dec
nop
xchg
cmc
fnstenv
fistpll
or
mov
in
pop
movsl
leave
and
adc
mov
cmp
into
sub
add
and
nop
inc
mov
ljmp
addb
cmpsl
adc
mov
xor
push
cld
sub
movsb
aad
pop
int3
in
push
jbe
int
pop
dec
jb
outsl
lret
mov
cmp
int3
jbe
push
test
js
mov
adc
sub
movsl
lret
loope
addl
add
jne
loop,pt
rol
aad
ret
ret
out
jnp
mov
pushf
sahf
stc
cmp
cld
push
mov
and
leave
adc
loope
ljmp
mov
inc
xor
lahf
mov
andb
dec
fldl
mov
dec
shrd
xchg
std
add
aad
pop
and
mov
aas
inc
cli
in
int3
sbb
pop
lcall
lcall
mov
push
fnstenv
icebp
xchg
fstl
xor
xchg
ljmp
sub
clc
push
cli
in
aaa
xchg
fidivl
and
mov
pop
mov
iret
out
loop
xchg
and
cmp
scas
mov
mov
xchg
mov
fmulp
dec
fucomip
mov
loop
inc
pop
xchg
loop
jg
mov
xchg
push
je
sbb
jns
cs
adc
pop
shlb
xchg
xchg
popf
popa
imul
sbb
and
scas
or
imul
es
out
mov
ja
lea
aaa
rcr
inc
scas
aaa
call
sarb
push
sbb
out
fiaddl
sub
enter
hlt
iret
mov
or
or
aaa
xchg
fs
jg
sub
lret
mov
dec
rcr
xchg
insb
push
or
test
sub
je
into
push
cmp
std
push
lahf
leave
cli
mov
mov
inc
push
xlat
push
int
push
push
sbb
mov
andl
sbb
fnsave
lcall
outsb
sahf
outsl
inc
movsl
jge
sahf
adc
lods
fstp
push
in
and
fstl
jns
xor
push
mov
cld
ret
fucom
inc
adc
shl
mov
pop
sbb
mov
jo
in
push
xor
mov
repnz
scas
lfs
dec
fldenv
popf
negl
iret
dec
pop
pop
or
sub
imul
sti
mov
xchg
jge
fisttpll
xor
inc
and
add
xor
testb
mov
cmpsb
xor
addr16
jbe
mov
ficoml
negl
mov
cmp
shlb
in
xor
sub
cmp
arpl
or
aas
cltd
cli
test
xor
jmp
xchg
icebp
aas
jns
cmp
jl
jle
mov
shr
adc
cmp
mov
fldl
mov
loopne
cltd
cltd
xchg
push
pushf
adc
push
inc
mov
popa
dec
xchg
or
test
mov
pop
and
sbb
pop
fstpl
fwait
dec
ss
int3
mov
dec
and
cwtl
push
imul
jl
les
in
adc
test
fcomps
sbb
loopne
das
nop
and
movsl
iret
sahf
jmp
mov
aaa
pop
mov
lock
lock
add
icebp
dec
inc
test
fwait
mov
ret
xchg
mov
das
sub
add
cltd
mov
sub
pusha
fildll
mov
test
out
inc
cmp
add
fdivrp
mov
add
cwtl
test
and
jae
js
or
insb
and
mov
sub
add
sub
jns
jne
jp
cwtl
repnz
lahf
sti
mov
bnd
sti
imul
lds
inc
sub
or
jl
movsb
xor
jnp
push
dec
dec
add
iret
pop
or
pop
outsl
lret
pop
in
loop
push
pop
loopne
sub
push
xor
movsb
scas
xor
lds
lock
adc
aam
jb
and
scas
and
mov
push
fsubrs
cmpl
and
in
cmp
or
movsl
jg
or
aad
xor
add
push
cltd
cwtl
loop
cmpsb
jne
xor
add
mov
mov
dec
jns
movsl
lock
jns
lret
xor
inc
and
test
repz
cmp
pop
or
or
daa
into
lret
mov
pop
lret
jmp
fiaddl
popa
adc
xchg
xor
or
mov
adcl
sbb
add
mov
and
mov
jg
negb
dec
in
push
push
subl
gs
inc
stos
push
in
inc
loope
fwait
push
roll
aad
loop
pop
sarl
rcr
sub
fwait
movsl
jb
enter
inc
leave
inc
add
les
adc
lret
sub
testl
lahf
outsb
popf
andl
aaa
mov
or
adc
jl
fcmovb
cmp
push
and
das
in
cmpsb
inc
xlat
in
nop
mov
and
push
mov
out
mov
sub
sub
arpl
xchg
pop
ss
sbb
mov
mov
aad
cmc
cmp
jp
mov
cmpsb
or
pop
mov
pop
test
subl
imul
cld
dec
scas
sbb
mov
lahf
outsl
shrl
out
gs
fwait
je
push
out
dec
pop
mov
stos
fxch
in
nop
dec
dec
and
mov
shlb
rcrl
pmuludq
fisubrl
push
mov
cmp
xchg
mov
push
std
fnsave
jp
outsl
out
iret
std
xchg
dec
sub
push
in
dec
push
fwait
add
mov
sub
out
and
in
add
orl
shlb
push
sbb
xchg
add
push
push
mov
mov
inc
mov
mov
mov
call
mov
xlat
clc
jmp
add
lahf
cmc
ret
mov
popl
mov
shlb
sbb
dec
in
pop
push
mov
adc
cmp
out
repnz
xchg
repnz
cmp
repz
sbb
cwtl
dec
cmpsb
nop
ss
sbb
mov
scas
jno
gs
test
int3
add
popa
add
aas
mov
inc
jbe
dec
jg
pop
pushf
adc
dec
xor
imull
aad
mov
pop
enter
mov
adc
in
test
das
push
lock
sbb
mov
ds
ljmp
out
sbb
pusha
cmp
xor
in
int
push
adc
insb
or
jae
and
pop
jo
enter
add
or
outsl
repz
sbb
rcrb
daa
dec
stc
mov
mov
dec
shrb
je
je
repz
push
push
xchg
jp
mov
jne
test
fwait
lret
imul
and
lret
xchg
lret
dec
jmp
mov
pop
xchg
js
roll
xor
stos
mov
push
or
sub
cld
out
xlat
arpl
xchg
test
sti
mov
pop
sahf
into
inc
dec
arpl
cmc
mov
repnz
sbb
leave
not
lret
push
out
sub
mov
cltd
in
sub
xor
sbbb
pop
or
aam
outsl
xlat
inc
subb
and
ret
ret
daa
mov
mov
push
into
jbe,pn
mov
test
and
dec
pop
cwtl
sarl
sub
outsl
cmp
jb
adcl
or
js
sub
int3
rcrb
je
inc
mov
imul
cmc
xchg
inc
jl
ss
js
mov
and
cmp
loopne
lahf
or
jecxz
gs
push
jge
std
in
jecxz
jnp
scas
and
adc
std
pop
cld
cmp
les
fs
das
out
movsb
fiaddl
mov
cwtl
mov
idivl
jnp
xchg
data16
push
imul
pop
pop
movsb
dec
call
movsb
sub
inc
ja
jo
pop
addr16
inc
xchg
jmp
or
sahf
dec
and
jbe
ret
pop
push
or
std
pop
jle
dec
outsb
cwtl
mov
and
cmpsl
enter
pop
push
xor
sub
mov
xchg
jecxz
into
mov
push
cmp
jg
call
pavgw
aaa
jl
sbb
cmc
or
mov
inc
in
jl
mov
push
fsts
out
fdivrl
adc
and
notb
leave
add
repnz
mov
dec
ret
test
mov
mov
mov
lds
inc
or
push
adc
imul
je
xchg
jmp
fcoms
nop
repnz
pop
sub
dec
inc
movsb
push
jae
or
out
and
pop
mov
sbb
jnp
dec
push
sub
outsb
lahf
scas
add
or
pop
xchg
adc
mov
and
mov
inc
dec
pop
lock
test
cmp
jp
int
pop
loope
popa
push
xor
push
lock
pop
sub
mov
push
sti
test
sbb
push
pop
jne
and
or
or
or
and
xor
lock
push
inc
sub
pop
pop
jge
in
sbb
gs
mov
fcmovne
lahf
movsl
ljmp
or
ret
and
ret
push
xchg
inc
sbb
or
shlb
jne
push
mov
mov
leave
push
addr16
lock
jbe
mov
mov
call
iret
cli
stos
arpl
leave
int3
fisttpl
test
mov
lea
sbb
mov
jg
test
cmp
mov
in
sbb
mov
mov
xchg
inc
mov
sub
ja
shrb
pop
add
movsb
jg
inc
mov
imul
lahf
out
xor
dec
data16
push
stos
repz
and
clc
mov
pop
push
rcrb
jmp
lock
stos
jae
push
popa
lret
add
insl
cmp
incb
sti
out
xchg
mov
aam
roll
push
pop
lods
dec
mov
sub
mov
adc
in
push
dec
jns
pusha
dec
xchg
das
add
cmp
sahf
adc
outsl
xchg
fcmovne
lock
fisubs
jg
push
cltd
pop
and
ljmp
mov
push
mov
inc
adc
dec
xchg
in
add
xchg
or
int
xor
or
adc
scas
lahf
call
lds
lods
pop
sarl
push
mov
cmpsb
jl
pop
mov
pop
push
mov
mov
fdivrs
push
movl
pop
push
adc
jg
lahf
mov
cmp
mov
add
cmp
fwait
ss
push
add
xor
mov
push
arpl
sub
mov
aaa
mov
movsb
add
les
cmp
and
xlat
jmp
aad
out
and
inc
jae
or
mov
sbb
lcall
xor
mov
sub
pop
ljmp
push
loope
insl
fcompl
in
lcall
xor
mov
stos
lahf
loope
jmp
lds
arpl
inc
div
in
jne
adc
cwtl
roll
mov
orb
addl
or
mov
jo
pushf
adc
inc
mov
es
lahf
sbb
pushf
jmp
mov
dec
xchg
cwtl
mov
sbb
sbb
ret
lea
fiadds
scas
or
mov
fimull
mov
push
js
rcrl
bnd
mov
or
xchg
xchg
cld
in
pop
cmp
leave
nop
push
repz
into
jp
cmp
xchg
insb
jge
icebp
mov
mov
mov
mov
popa
adcb
test
sub
or
mov
pop
mov
cwtl
stos
shrb
adc
sub
call
adc
clc
mov
test
out
xchg
mov
adc
xchg
cltd
adc
jo
mov
lret
push
mov
in
mov
jb
stos
jne
je
lock
int3
pushw
jg
push
into
fisttpll
and
call
insl
ret
sub
mov
mov
into
scas
mov
pop
push
xor
iret
push
jecxz
pusha
repz
loop
adc
ret
in
and
lret
je
xchg
ljmp
jge
mov
cs
jbe
sbb
mov
and
mov
push
pop
xchg
pop
jmp
into
scas
into
add
and
popf
cmpsl
shrl
xor
xor
push
popf
and
int3
and
sahf
push
xor
movnti
sub
ret
sahf
lahf
push
aam
and
dec
lock
add
pop
cltd
pop
xor
jnp
adc
sub
popa
loopne
pop
mov
cmp
lea
pop
out
je
shrl
popf
sub
in
sbb
mov
inc
das
in
mov
dec
ss
or
pop
jg
mulb
int
push
xor
nop
adc
test
subl
dec
or
sbb
push
mov
mov
incl
into
xchg
push
xor
pop
sub
jnp
les
decb
repnz
xchg
sub
popf
sbbl
or
leave
cmp
mov
lea
cmpb
adc
jnp
push
int
lock
inc
lods
mov
test
lret
fadd
push
inc
cmp
pop
mov
inc
in
add
leave
mov
loop
push
mov
xor
pop
cmp
mov
pop
inc
adcb
test
mov
loopne
mov
pushf
mov
adc
stos
rolb
cmp
fcomps
cli
mov
push
sub
mov
popf
pushf
lea
outsl
push
cltd
cmp
leave
data16
mov
scas
mov
xchg
adc
jb
and
enter
jl
or
xchg
out
push
mov
setno
jl
call
adc
mov
imul
and
and
mov
pop
adc
push
insl
jb
add
je
mov
pop
inc
mov
fdivs
test
loope
ficoms
insb
xchg
xchg
xor
xchg
or
in
push
mov
mov
cwtl
mov
push
jno
leave
inc
pop
xchg
mov
cmp
push
and
fldenv
mov
and
mov
in
loope
sbb
outsb
push
jo
and
adcl
pop
fisubrs
cmp
jno
outsb
orb
inc
adc
lret
pushf
sahf
scas
xchg
or
inc
jle
jge
lea
pop
mov
lret
jecxz
rcrl
adc
outsb
ja
lds
div
dec
sarl
xor
and
fs
icebp
fsubs
inc
lods
mov
bound
push
inc
cmp
test
mov
out
lahf
dec
or
fcom
into
loope
dec
xchg
fisubs
int
sub
out
add
out
ja
inc
pop
mov
push
adc
nop
mov
mov
movsl
push
in
dec
rcll
movsl
mov
cmpb
add
or
xor
test
enter
pushf
aas
ss
or
xchg
mulb
js
dec
push
in
jge
adc
sub
ret
int
mov
lret
gs
les
mov
sub
pop
adc
mov
mov
sbb
mov
ror
ja
jb
pop
mov
in
jge
push
cld
cmp
sbb
data16
shll
sbb
jg
fdivrs
jne
lcall
popa
adcl
mov
test
divb
insl
push
sub
dec
push
cmp
push
adc
xor
shl
int3
scas
sarl
xor
cmp
out
ror
fnstcw
cmp
add
cmp
sbb
icebp
decl
inc
pop
iret
jae
jmp
pop
xor
adc
mov
sarl
in
nop
aas
aaa
sarl
fsubr
imul
jge
int3
fisttps
jmp
shll
ficomps
xchg
and
pop
dec
fsubrs
xorb
adc
movsl
movsb
cltd
test
das
ret
dec
and
xlat
popf
lods
cmp
xor
cli
xchg
and
push
ja
loop
std
cmp
xchg
hlt
add
and
dec
mov
push
outsb
int3
jl
jno
fcomi
pop
notb
ret
das
sbb
repnz
push
aaa
pop
inc
aaa
adc
out
ror
pop
mov
sub
sub
negl
inc
out
int
sbb
inc
cmc
push
out
pop
xchg
scas
mov
shl
add
adc
jbe
es
loop
push
cltd
sbb
pop
xchg
sub
test
sub
pusha
push
adc
stos
leave
push
jl
lods
mov
ljmp
lahf
jp
les
cmc
inc
shrb
clc
arpl
xor
out
push
mov
lods
out
pop
in
fdivrp
out
push
sahf
scas
cmp
cmp
jo
rcl
dec
lea
sarb
js
add
dec
xchg
aaa
adc
pop
inc
leave
lahf
popa
push
push
je
jge
or
rsm
and
pop
insb
les
adc
subb
jecxz
dec
mov
lock
xor
stc
inc
add
push
sub
testb
fs
xchg
adc
lods
cmpsb
mov
add
dec
adc
jb
pop
mov
xchg
pop
lea
jno
sahf
ja
pushf
sbb
fidivs
cmp
or
mov
in
mov
insb
cltd
mov
jne
iret
xchg
es
gs
and
dec
jb
cmp
movsb
mov
stos
imul
lahf
cmp
imul
pop
push
jg
arpl
mov
pop
push
mov
jecxz
lea
mov
popf
or
outsb
sbb
jbe
stos
dec
xchg
inc
loope
fisubrs
or
xor
push
addr16
lock
and
into
add
out
call
orb
mov
sub
xchg
ret
movsb
jmp
enter
push
sarl
sub
lods
inc
ds
jnp
pushf
cmpsl
mov
sbb
xchg
sbb
sahf
mov
push
addr16
pop
cld
ss
loop
or
cmp
rcrb
stc
gs
fsub
xor
out
jl
cmc
lea
lret
dec
jecxz
gs
jge
mov
sub
mov
xor
fwait
das
pop
pop
ret
pushf
inc
jo
inc
jg
xor
cs
push
mov
or
jecxz
adcl
adc
sbb
ljmp
pop
je
jecxz
mov
dec
adc
push
inc
sti
adc
push
lret
into
xor
and
dec
mov
into
dec
lods
enter
xchg
mov
mov
idiv
jmp
sbb
clc
mov
mov
enter
jg
test
mov
mov
gs
xorl
orb
scas
sub
add
clc
cmp
add
mov
imul
push
ss
dec
adc
push
sahf
mov
shrl
cmp
cld
cltd
or
inc
cmp
outsb
xor
add
mov
inc
or
inc
xchg
cwtl
mov
push
leave
mov
mov
fdivrl
xchg
jge
inc
cmpsb
les
or
or
xor
out
adc
mull
cmc
sti
xchg
lea
lock
pop
int3
jmp
and
test
pop
push
into
cmp
js
sbb
adc
lahf
or
inc
dec
out
sbbb
dec
fadd
orl
sub
push
outsb
stc
sub
mov
repz
xor
addr16
mov
mov
mov
roll
ret
push
stos
dec
insl
xor
xor
lcall
dec
push
inc
lea
ljmp
es
mulb
sbb
cmc
or
pop
and
das
dec
in
mov
fs
inc
addr16
rcll
ja
addb
push
rcll
es
pop
dec
xchg
push
enter
jne
xor
mov
pop
or
push
add
cs
out
pop
imul
inc
or
and
mov
mov
dec
and
push
aas
mov
sarb
repnz
jmp
ffreep
xchg
lret
cmp
or
push
sti
sub
cmp
shl
popf
sbb
rcr
mov
cs
mov
stc
orb
rcll
or
xor
mov
dec
cmp
inc
inc
add
inc
xchg
out
pop
aas
sahf
cmp
push
sub
ljmp
lcall
jecxz
mov
aam
mov
std
dec
pop
fiadds
pushf
imul
mov
push
data16
push
inc
out
jno
xchg
add
scas
lret
sbb
rorl
call
pop
inc
mov
xor
lret
lahf
push
jb
out
addl
loope
xchg
lods
pop
aam
leave
fwait
mov
stos
ret
add
push
inc
inc
mov
jle
jg
ret
dec
enter
stos
movsb
les
mov
pop
sbb
mov
js
inc
jmp
cmp
out
jbe
push
or
es
lret
adc
repnz
push
inc
mov
scas
out
into
pop
int3
dec
loopne
push
int
ja
fs
test
or
xchg
dec
xchg
in
lds
mov
aaa
adc
mov
fmuls
adc
xchg
bound
jae
int
gs
hlt
fs
in
emms
jnp,pn
sub
lods
clc
test
arpl
xor
jg
mov
aaa
inc
mov
fadd
popf
in
clc
mov
mov
jnp
in
mov
xchg
mov
jno
sub
cmpsb
inc
adc
push
or
cwtl
mov
xchg
ret
add
ret
inc
cwtl
pop
sbb
scas
sbb
mov
sub
and
sub
pop
add
jge
js
add
outsb
out
rolb
stc
jle
loope
add
cmc
sub
fcmovu
sub
xchg
mov
in
and
data16
add
jecxz
inc
popf
outsb
rcrb
repnz
xchg
cli
sbb
lock
or
notb
jnp
daa
jg
ret
mov
dec
cltd
shlb
mov
push
xor
pop
icebp
xor
movsl
jp
ss
cmp
cld
sub
sbb
shl
mov
jno
inc
jge
loope
out
fildll
cmp
and
push
adc
mov
lds
dec
bound
loopne
add
dec
repnz
push
push
aam
lds
lcall
cmpsl
push
in
mov
jge
das
fmul
stos
and
pop
and
js
mov
addr16
jnp
icebp
outsl
sbb
jbe
inc
xchg
ss
rcrl
jmp
cli
sbb
lahf
in
xchg
cmpsb
leave
dec
fdiv
jg
das
xor
mov
add
push
xor
insl
ss
ficoms
xor
jne
ror
in
xlat
js
mov
int
cmp
dec
sub
dec
loopne
xchg
dec
xor
popf
mov
cmp
jmp
frstor
xor
sbb
add
jmp
hlt
cmpsl
push
popa
adc
pusha
clc
aas
xchg
mov
lret
mov
mov
push
movsl
das
push
loope
and
inc
inc
cmpsb
pop
aad
sub
lds
and
inc
outsl
lcall
xor
aaa
lea
gs
outsb
sbb
jbe
imul
rclb
outsb
jp
xchg
or
jo
das
and
dec
adc
clc
and
cmpsl
sub
mov
pop
push
jbe
sub
iret
mov
dec
fwait
sahf
xchg
lods
sbb
inc
in
fcompl
subb
aad
aad
sbb
push
pop
ljmp
mov
lret
mov
cli
or
inc
sbb
jb
outsb
push
push
push
sub
push
stc
pop
mov
add
cmp
add
loop
dec
ret
cmpsb
xlat
shll
ret
xchg
inc
stos
mov
sarb
out
inc
mov
mov
or
pop
cmp
mov
fwait
push
ror
push
rcrl
xor
dec
pop
xchg
mov
fidivs
xor
stc
push
push
mov
and
sub
xlat
mov
loopne
jnp
jo
or
jno
pop
std
push
ret
push
jbe
mov
lods
fisubs
add
cmp
pop
cwtl
xchg
decl
pop
addr16
add
jecxz
dec
mov
add
mov
clc
imul
out
pop
jge
adc
cmc
pop
and
push
cli
mov
cld
lahf
sub
pushf
cmp
sub
pop
inc
cwtl
int
xor
aas
and
cmpsb
dec
and
dec
xlat
nop
out
repnz
in
mov
imul
adcw
and
mov
mov
mov
xor
aas
and
stos
lcall
sbb
cmpsl
shl
bound
imul
xor
xchg
inc
fcomp
xor
or
lahf
dec
push
xchg
jg
cmp
mov
adc
mov
jle
or
sahf
pop
sbb
inc
lods
hlt
cmp
mov
cmpsb
insl
lcall
sar
lods
cmp
mov
lock
fcmovnu
dec
ret
loopne
inc
push
jo
dec
mov
js
xchg
lea
mov
cld
or
cld
sti
jae
xchg
out
iret
push
adc
mov
mov
xor
sub
and
pop
push
xor
xchg
in
mov
xchg
xor
push
xlat
adc
hlt
fstpl
iret
mov
inc
sbb
shll
in
fmul
add
ljmp
pop
cmc
das
xlat
fldcw
jo
lods
rcrl
sbb
cmc
mov
or
dec
add
mov
xchg
xor
jp
xor
mov
fwait
mov
movb
cli
outsl
pop
ljmp
fists
inc
sbb
insb
sbb
sbbb
or
inc
cmc
push
adc
add
inc
push
xchg
arpl
jo
xchg
int3
dec
arpl
sar
sub
jbe
or
jecxz
add
or
scas
and
sbb
jne
mov
arpl
notl
les
push
jns
cmpsb
cmp
adcb
ret
daa
and
fisttpl
out
cmpsb
adc
add
orb
add
lcall
ljmp
and
jl
jne
in
outsb
lock
stos
cmc
sub
and
das
sbbb
sti
push
jns
sbb
int
fcmovne
ljmp
jge
outsb
jno
jmp
hlt
lss
push
xlat
mov
fldt
std
mov
stc
sbbb
sbb
clts
fmul
xchg
pushf
hlt
push
les
loope
cmp
pop
jl
inc
lods
aas
clc
test
push
jb
mov
sub
and
iret
clc
iret
inc
mov
or
ljmp
add
int3
rorl
leave
pop
popa
push
jmp
testb
push
push
push
test
outsb
sar
jl
add
or
gs
filds
repnz
cmp
test
ja
sbb
in
int3
loopne
mov
cmp
jb
cmc
mov
mov
xlat
mov
sbb
data16
jg
or
xchg
sbb
mov
enter
scas
sahf
imul
stc
cmp
cmp
fstpt
std
insb
data16
jno
add
sti
pop
xchg
in
ss
sbb
gs
addr16
dec
jp
mov
mov
add
stc
in
jae
out
cmp
shrl
mov
ret
and
jno
and
aad
inc
cmpsl
inc
mov
loopne
cmpsl
sahf
test
push
add
pusha
xchg
jae
rorb
cmp
fldl
loope
out
test
add
mov
xchg
in
xor
popf
aas
mov
cld
clc
loop
jle
cmpsl
dec
sub
inc
shl
shrb
repnz
cmp
pop
pop
cmpb
cwtd
shrb
xchg
cmp
in
std
sarb
adc
mov
pop
pop
subl
jae
mov
out
jns
jb
jnp
leave
clc
push
test
mov
stc
sbb
cld
mov
leave
in
cmp
add
lcall
leave
xchg
sub
cltd
push
addr16
and
fists
mov
addr16
dec
inc
stos
add
mov
mov
mov
add
xor
jb
std
cli
dec
mov
cmc
movsl
pop
pop
dec
call
and
pop
mov
jmp
fists
pop
lock
mov
ret
ja
jl
fidivs
icebp
popf
pop
ror
mov
insl
fnstenv
lea
or
sub
mov
inc
push
xchg
push
pop
daa
das
adc
ljmp
xlat
xor
xor
pusha
xlat
aad
xor
mov
xor
mov
adc
les
icebp
jecxz
push
call
fsts
add
pop
adc
les
pop
add
int
xchg
insb
hlt
loope
into
push
shl
xchg
pushf
pop
pop
subl
clc
xchg
lret
pop
inc
or
popa
adc
insb
push
lods
fsubrs
jecxz
in
loopne
ficoml
mov
les
pop
sbb
dec
xlat
test
adc
mov
jmp
int
cmp
cmpsb
cld
add
mov
lods
icebp
shr
fs
mov
pop
adc
push
rclb
imul
movsl
inc
es
jb
pop
popa
dec
sbb
outsl
cmp
pop
and
shl
sub
das
jae
mov
add
lcall
jle
pop
or
pop
sti
push
adc
mov
ss
cmpsl
sub
insb
jg
ja
push
cli
sub
pop
lret
mov
inc
aas
call
add
push
orb
iret
or
ffreep
jbe
cli
fsubr
push
mov
ud1
aas
jno
movsb
imul
lret
repnz
xchg
cmp
out
test
jp
int3
testl
xor
pop
dec
jbe
pop
pop
xor
add
imul
loope
in
and
jle
jecxz
or
pushw
fdivrs
rcll
aas
test
lods
fldl
in
dec
push
xchg
in
mov
cwtl
mov
jo
mov
leave
mov
mov
cmp
iret
pop
in
xchg
arpl
inc
push
icebp
fwait
and
and
adc
pop
in
lcall
jo
and
addl
push
push
fdivs
aad
movsb
pop
cmp
shr
jns
mov
xchg
push
inc
ss
pushl
gs
loopne
push
mov
jo
insl
in
sbb
lods
mov
cmp
dec
mov
cmp
jp
int
cmc
std
leave
aas
testl
mov
xor
daa
test
jbe
mov
mov
lahf
int3
mov
outsb
mov
ljmp
aam
pop
cwtl
dec
xor
jmp
jecxz
jecxz
fdivrl
cmp
dec
fidivl
cld
shlb
ja
pop
dec
repz
mov
cmp
jne
out
adc
mov
lcall
dec
vsqrtsd
dec
dec
sbb
add
cmp
outsb
cmp
add
sbb
jnp
jge
inc
sbb
push
movsl
mov
divb
push
push
adc
dec
out
mov
fisubs
mov
cmp
sub
shll
add
lcall
fucomip
sub
cld
xlat
mov
cmp
dec
pop
bound
xor
adc
in
hlt
jo
sub
xchg
cmpsl
scas
xchg
icebp
std
jge
push
leave
shrl
jg
push
notl
cld
mov
xor
sbb
pop
jnp
mov
jl
lods
movsl
xchg
fs
sub
dec
stos
es
enter
les
lret
xchg
push
fadd
pop
jb
adc
stos
les
jp
ret
test
pop
push
or
jg
xor
jnp
pop
loop
out
mov
lods
adc
je
jl
sbb
inc
dec
cmp
psadbw
mov
fwait
push
inc
test
lret
xchg
adc
idiv
les
addr16
std
int
sub
hlt
scas
adc
mov
daa
cmp
sub
inc
inc
mov
jno
out
stc
cltd
xor
and
pop
add
adc
mulb
out
repz
repnz
or
mov
mov
mov
jno
movsb
sbb
insl
in
stos
jmp
fs
adc
test
adc
mov
out
adc
data16
test
bound
fdivrl
mov
cmp
xchg
lock
xchg
lcall
jmp
mov
push
push
cwtl
mov
sub
xorb
inc
add
repz
mov
pop
adc
fs
cli
jmp
loop
ja
or
into
ljmp
or
xlat
aas
pop
rcrl
out
push
lock
int3
popf
pop
inc
test
mov
push
add
fimull
je
stos
lret
cs
leave
xor
xchg
adc
outsb
int3
incl
mov
js
jns
mov
xchg
mov
arpl
inc
and
in
jg
push
xor
ds
mov
ret
inc
test
into
loop
fwait
push
jb
cltd
cmp
dec
mov
jae
push
xchg
add
xchg
aas
pop
or
mov
or
out
mov
inc
add
lret
sub
adc
in
test
test
ret
mov
xchg
sub
and
cmp
adc
dec
mov
dec
pop
sbb
sbb
mov
iret
add
push
aaa
inc
or
xchg
pop
add
scas
cmp
mov
sbbb
xchg
adc
sti
mov
jle
push
jbe
push
mov
or
sti
pop
pop
fisubl
mov
mov
test
add
std
push
ljmp
jae
push
aam
and
adc
add
jno
jo
cmc
mov
adc
mov
xor
fmul
iret
test
rcl
xchg
out
mov
icebp
ret
mov
add
inc
cmpl
mov
popf
jbe
sub
mov
stos
xchg
test
xchg
gs
arpl
inc
jle
pop
mov
jle
mov
or
inc
push
cmp
ljmp
mov
mov
imul
out
push
int
rorl
push
pop
shll
cli
sahf
jp
inc
add
mov
adc
pop
aam
and
fwait
imul
scas
pusha
js
lret
popa
outsl
push
xchg
testl
sbb
xor
sub
mov
fdivrl
pop
shll
mov
pop
dec
xchg
and
adc
inc
mov
mov
mov
add
pop
pop
adc
notl
jno
rcrl
mov
mov
xor
pushf
insb
icebp
int
in
add
ficoml
jns
cmc
xor
cmp
mov
mov
sbb
mov
loope
jae
add
cmp
pop
cmp
and
mov
sbb
and
lcall
arpl
xor
clc
cmp
daa
dec
testl
sub
int
out
sub
jp
pop
jle
sub
stc
shlb
inc
ljmp
test
push
mov
xchg
imul
mov
daa
sub
xchg
mov
out
jmp
cld
mov
gs
jmp
fstps
hlt
jecxz
sarb
mov
push
push
sbb
push
shlb
insb
jge
pop
mov
movsl
in
jae
cmp
mov
sub
outsb
vsubpd
jno
fdivl
fdivl
jmp
aad
jg
xor
lret
imul
lahf
xchg
xchg
int
pop
call
repnz
cmp
push
loopne
aas
push
sbb
mull
sbb
pop
mov
jae
sbb
not
and
push
pusha
lea
adc
pop
or
jge
pusha
aas
mov
in
dec
pop
andb
push
fisubl
push
pop
into
pop
jne
pop
std
std
call
adc
pop
pop
ss
testb
push
or
lret
aad
or
mov
js
int
push
loope
iret
sub
add
cmp
mov
js
cmc
cmp
mov
arpl
jbe
xchg
test
xchg
cmp
rep
int
scas
mov
das
dec
adc
pop
jmp
stos
into
bound
test
pop
pushf
mov
adc
mov
loop
sbb
int
in
add
testl
mov
popa
fstpt
jnp
in
fiaddl
test
outsb
sbbl
mov
add
or
lock
dec
sbb
jne
outsl
in
addr16
lcall
aam
mov
sub
sub
mov
push
xor
add
lods
sti
dec
popa
xchg
and
adc
outsl
adc
cs
mov
jp
cli
mov
js
cmpsl
or
rcrl
xor
xor
push
inc
mov
jmp
ret
rolb
mov
int
call
nop
pop
rcrl
inc
xlat
push
cmp
push
arpl
es
sub
push
fmull
fwait
mov
cmovle
jmp
inc
scas
mov
int3
aam
ret
dec
test
jmp
dec
jmp
pop
lcall
mov
mov
cmp
aam
mov
repnz
outsb
rcl
push
xchg
insb
cmpsl
rcll
flds
subb
loopne
stos
insb
mov
iret
popa
add
mov
cmp
enter
push
mov
or
lds
enter
in
loopne
add
jmp
push
mov
sub
icebp
cmp
ljmp
push
mov
jnp
bound
jmp
and
inc
xchg
into
mov
test
or
iret
jge
push
push
insb
out
adc
in
gs
retw
xlat
stos
or
insl
inc
stos
jmp
inc
ret
jecxz
lret
mov
mov
add
leave
adc
jnp
aaa
inc
push
cmpsl
mov
pop
inc
jge
sub
mov
sbb
add
andl
inc
cmc
clc
rorb
movsb
mov
push
push
rolb
push
dec
shll
leave
orl
pop
into
xor
stos
fdivrs
lret
mov
mov
insb
cmp
xchg
or
mov
icebp
es
mov
stc
and
sbb
jns
into
subb
or
xor
xor
jo
stc
xor
add
lds
jge
sbb
or
jg
adc
add
fidivrl
outsl
sub
lret
xlat
scas
mov
sub
xchg
test
das
lock
neg
dec
adc
jp
or
loop
push
ljmp
xor
xor
inc
test
and
fidivl
dec
pop
cmp
loop
icebp
mov
aam
cmpsb
stc
push
ds
adc
mov
jp
shlb
sub
push
or
xor
mov
daa
adc
xor
sbb
inc
enter
aas
sbb
push
sub
lea
xor
add
push
dec
popa
pop
aas
notl
shrl
and
inc
mov
xor
xchg
lahf
sahf
fbstp
cld
pop
out
push
jmp
shrb
and
xor
dec
and
dec
cmp
xor
nop
inc
jb
jnp
jge
push
ror
pusha
outsb
fcomps
sti
push
fwait
shll
lret
je
addr16
mulb
outsb
jbe
xor
or
xchg
mov
sti
leave
jge
in
mov
xor
je
clc
cld
clc
or
push
test
cmpsb
loop
ss
pop
dec
imul
pop
adc
popa
popa
add
fnsave
andb
push
ja
xor
in
inc
xlat
outsl
sub
mov
imul
xchg
je
mov
inc
or
dec
arpl
pop
xor
mov
or
push
std
and
ja
add
punpckhwd
mov
lcall
push
lahf
inc
and
push
or
fistpll
and
leave
pusha
pop
push
cs
dec
pop
sbb
int3
jo
adc
aaa
mul
dec
xchg
dec
lret
imul
pop
sub
push
scas
sub
ljmp
aad
int
movsl
push
sbb
push
mov
pop
scas
mov
mov
stos
pop
push
je
mov
xor
hlt
sbb
repz
std
adc
fstl
xchg
mov
adcb
push
xor
mov
test
stos
pop
add
xchg
or
dec
leave
mov
stos
loopne
adc
shrl
xor
imul
jae
fidivl
lock
xlat
loope
pop
mov
adc
jmp
int3
push
ljmp
push
jp
xchg
cmpsl
mov
cmp
push
cmpsb
inc
and
fisttps
xchg
fildl
xor
in
es
push
mov
pop
int3
or
jg
and
cmpsb
mov
outsl
xchg
js
movsl
cld
in
xchg
aas
rclb
scas
push
add
int
imul
imulb
stc
clc
js
pushf
int3
dec
pop
and
mov
pop
orl
dec
add
cmp
test
xchg
roll
sbbl
adc
fadds
ss
lds
lods
pushf
ffree
or
cmc
xchg
cltd
popf
push
lcall
or
test
cmpsb
pop
dec
out
lahf
sarl
mov
sbb
push
mov
mov
fcomp
jecxz
cmpsl
clc
mov
cmp
lret
sub
adc
and
jo
jp
js
xor
pushf
je
imul
jle
gs
mov
mov
aam
mov
adc
mov
ljmp
addr16
mov
stc
repz
push
or
decb
dec
push
es
push
mov
cs
jle
test
out
test
mov
push
sbb
mov
mov
lea
or
xor
pop
xchg
lahf
xor
inc
int3
dec
jmp
mov
lret
rcrb
adc
jp
pop
pop
add
cld
or
lahf
sbb
aam
mov
push
push
add
js
jmp
pop
sub
call
xorb
popf
aam
out
push
pusha
adc
sub
jns
aad
pop
mov
rorl
xchg
out
push
dec
jg
cmpsl
inc
test
stc
shrb
adc
pop
gs
pop
dec
xchg
pop
xchg
jnp
popf
fs
push
add
sub
fldenv
stc
lds
and
add
sahf
idivb
and
int
and
in
sub
enter
fiadds
jmp
inc
test
test
cwtl
out
mov
push
out
xchg
fisttpl
adc
call
lods
and
rolb
mov
sub
int
adc
xchg
adc
shll
sbb
loopne
test
lret
lret
mov
cmc
enter
aaa
inc
cmc
cmpsb
lret
scas
pop
dec
leave
jbe
inc
push
push
int
cmp
inc
fidivrl
ljmp
repz
ds
xor
xchg
xor
outsb
mov
outsl
mov
test
stos
cmp
repz
imul
add
inc
dec
add
ss
push
test
rcll
je
stos
cld
xchg
sahf
and
push
or
dec
jp
mov
adc
std
fwait
xchg
scas
popa
jl
xchg
cmpsl
add
dec
mov
data16
cmc
cmp
test
icebp
rcrb
push
push
add
dec
ss
and
and
cld
push
xor
jb
dec
cmp
mov
in
dec
dec
cmp
stos
test
cmp
push
cmpsb
imul
mov
jmp
cmp
inc
aaa
add
mov
jns
imul
jae
call
ljmp
decl
mov
xchg
and
int
xlat
sti
or
push
cmpsl
jmp
jge
pop
fsubl
jb
ja
inc
jne
sbb
xchg
xchg
shll
lds
mov
mov
push
scas
push
bound
adc
xor
in
lock
mov
push
sub
push
movsl
push
xchg
clc
mov
mov
insl
fsubrl
push
in
loop
inc
xchg
fiaddl
inc
mov
mov
adc
jno
add
mov
pusha
mul
es
sbb
imul
push
repz
je
mov
and
pop
mov
inc
jmp
ja
dec
dec
shl
stos
gs
jp
pop
stc
hlt
xor
jns
or
out
es
cmp
out
sub
pushf
xor
bound
mov
cwtl
scas
enter
js
into
aaa
or
cmp
cld
xor
cmp
gs
fadd
jae
lods
inc
and
add
mov
xor
jmp
fsubrl
cmpsb
insl
stos
xchg
shlb
fidivrs
push
test
push
ja
cltd
push
enter
fistl
test
dec
pop
out
fdivrs
hlt
or
push
out
lret
push
and
jae
adc
push
jmp
pop
mov
adc
xor
inc
imul
hlt
mov
adcb
scas
push
testl
cmp
push
inc
test
xor
sub
movl
adc
or
in
clc
cmpl
mov
sahf
out
int
push
es
dec
imul
lock
test
dec
jae
mov
int
jo
dec
fistpl
xor
imul
inc
push
and
into
mov
loop
testb
mov
or
test
sbb
or
pop
mov
jle
lret
in
frstor
xchg
or
xor
orl
inc
add
lods
push
adc
or
loop
dec
pop
movsl
xorl
loop
movsb
pop
pop
push
cmp
aam
pop
jp
push
stc
xor
std
scas
and
mov
cld
fldenv
sbb
adc
lds
repz
in
fists
into
cmp
dec
xlat
push
mov
cmp
inc
cmc
mov
lret
and
ret
fcoms
cmp
sub
nop
sbbl
pop
repz
jl
xor
rorb
ja
dec
sub
push
inc
popf
push
or
idivl
sbb
cmp
fisubrs
fidivrl
cmp
cld
inc
negb
cwtd
push
pop
dec
cmc
mov
cmpsl
jo
movsb
ljmp
daa
out
adc
in
sahf
fdivl
fistpll
mov
imul
dec
and
sbb
aaa
loop
sub
sub
aaa
pop
mov
data16
fwait
iret
fwait
xor
xchg
xchg
jecxz
ja
rclb
addb
pop
xor
add
push
pop
xchg
loopne
inc
inc
adc
push
and
lret
mov
sbb
sub
push
stc
adc
das
scas
cmc
mov
bound
int
in
xchg
mov
dec
add
push
jmp
outsb
cmpsl
xchg
xor
cmpsb
cmp
stos
pop
pop
pop
jbe
push
xor
cltd
out
aas
inc
sub
cs
cmp
and
insl
jl
xchg
adc
dec
loope
sbb
lods
fcoml
adc
jp
aaa
sbb
push
mov
dec
stc
ds
xchg
mov
sbb
filds
loopne
cmp
inc
mov
jle
jecxz
and
push
jl
sbb
std
mov
ja
jmp
sub
xchg
sbb
lds
dec
leave
mov
mov
dec
inc
cwtl
sub
dec
test
pop
shrl
sbb
pop
sub
in
aam
mul
int
jne
aad
pop
outsl
add
sub
in
out
lret
add
test
sahf
cmp
and
add
inc
les
iret
mov
movsl
jno
clc
ficomps
aam
mov
push
out
mov
push
stos
add
push
rcll
mov
sub
mov
xchg
adc
call
add
test
ss
mov
add
hlt
pop
dec
gs
mov
in
jbe
mov
nop
lods
xchg
adc
insb
pop
sub
insb
cmpsl
push
mov
cmpsl
roll
mov
stos
mov
cmpl
sub
add
into
pop
sub
sub
int
in
repz
or
leave
xchg
xchg
cli
sub
xor
arpl
dec
les
js
movsl
aas
fsub
mov
rorl
filds
jns
mov
fnstsw
testb
pusha
or
sbb
fistpll
mov
jb
inc
jle
ds
and
pop
int3
mov
incb
xchg
aaa
push
test
loope
lcall
push
mov
pop
jno
aad
mov
and
and
push
and
xchg
mov
popf
push
popf
sahf
mov
ficomps
ss
pop
fsts
repnz
jbe
les
xor
leave
inc
movsb
inc
push
and
inc
out
mov
push
xchg
mov
push
pop
jns
pop
je
cwtl
push
inc
imul
pushf
xchg
andb
mov
cmp
fwait
pop
nop
mov
jae
int
fiadds
dec
sti
popf
lret
loopne
sti
bound
repz
xchg
andl
pop
or
xchg
add
repz
movsl
xor
mov
pop
mov
dec
dec
pusha
jae
ret
aad
push
insb
pop
lds
fildll
add
int
lahf
call
jp
jo
in
mov
jmp
pop
adc
or
fnstcw
outsl
inc
mov
jb
sbb
jbe
out
inc
xchg
mov
push
sub
jg
aam
sbb
cli
ret
inc
xor
std
sub
data16
inc
mov
sub
push
decb
push
mov
push
xchg
jge
xchg
push
sub
adc
push
imul
fsub
lods
hlt
loop
xlat
fwait
repz
scas
jl
jnp
stc
jmp
sub
push
mov
loop
pop
subb
cmp
rcll
push
lea
cli
sbb
mov
je
dec
and
jno
lea
xchg
inc
adc
gs
inc
out
into
outsb
inc
push
repz
xchg
test
add
jb
leave
pop
dec
jnp
mov
int3
mov
cmp
lods
out
inc
mov
inc
testb
dec
icebp
mov
imul
test
add
jg
sbb
xor
xor
call
sbb
pop
mov
dec
icebp
mov
pop
outsl
fidivrl
js
mov
lcall
jp,pn
pusha
lods
jge
jmp
and
sub
ss
ret
sbb
popf
add
cwtl
sub
scas
in
or
adc
outsl
sub
inc
xor
adc
jo
dec
push
test
xor
sub
loopne
in
push
push
jne
dec
icebp
sbb
fisubs
stc
inc
push
imul
lods
sub
mov
mov
pop
push
jge
or
movsb
cmp
mov
sub
jo
mov
sbb
mov
mov
cmp
adc
mov
loope
notl
add
fidivs
inc
in
and
jb
lcall
add
popf
mov
mov
jecxz
movsl
and
xchg
push
fs
jp
dec
popf
push
dec
mov
inc
outsb
pop
xchg
push
idivb
lcall
pop
stos
sbb
mov
cwtl
pop
rolb
push
fwait
imul
mov
push
cmp
int3
pop
xchg
outsb
add
in
test
cmp
sub
test
pop
fimull
adc
rcrb
rol
push
xor
in
dec
jmp
fldl
xor
push
rorb
popf
mov
pop
jbe
sub
int3
popa
in
outsb
ret
adc
in
fucomip
sub
out
pop
dec
xchg
or
out
sub
xchg
fistps
add
mov
xor
inc
and
mov
mov
pop
mov
ja
cmp
daa
bsr
adc
add
icebp
mov
roll
mov
sub
push
push
adc
aaa
ds
and
test
pop
mov
rorb
mov
cld
bound
test
pop
xor
in
cmp
ljmp
jmp
pop
out
movsl
hlt
mov
fwait
je
push
jns
inc
rcrb
ret
scas
xchg
les
mov
aas
or
cwtl
insb
outsl
cmp
jle
nop
ret
les
js
dec
sbb
or
pop
pushf
cwtl
subl
jg
ret
and
fldenv
ret
ret
arpl
test
sahf
jecxz
sbb
cmpsb
push
inc
fs
xchg
or
xchg
sub
vhaddps
int
dec
inc
jae
jge
mov
jmp
fs
sub
clc
cmpsl
in
loope
jg
clc
push
xor
inc
mov
xor
lahf
mov
jecxz
les
add
pop
jp
add
cmpsb
mov
add
imul
or
fildll
lods
xchg
cmpsb
aas
mov
push
js
mov
cmp
dec
sahf
test
arpl
cmpsl
aam
jp
cmp
adc
cwtl
xchg
inc
rep
xchg
pop
cwtl
adc
push
add
inc
stc
sub
mov
pop
cwtl
sub
jo
aaa
ljmp
or
adc
jle
notl
mov
loop
mov
push
cwtl
cwtl
ss
dec
dec
into
lahf
or
dec
lret
inc
rcll
out
jecxz
or
dec
xchg
mov
div
enter
lods
enter
shl
xor
fisubl
out
sbb
lret
cs
gs
fs
push
in
sbb
cld
mov
data16
mov
jo
xor
dec
test
jns
arpl
pop
jge
sbb
out
les
push
mov
mov
shlb
mov
scas
adc
repz
add
cmpsb
sbb
and
imul
lret
lret
jnp
shll
ficoml
test
jp
gs
jno
icebp
xchg
fbld
rcr
hlt
adc
aam
push
movsb
stc
or
es
test
cld
scas
xchg
les
dec
mov
mov
push
and
sbb
pop
xchg
loop
lahf
jb
push
xchg
mov
je
add
mov
loope
lcall
mov
outsb
push
das
xor
inc
mov
clc
ljmp
sub
sbb
mov
push
andl
xor
xchg
push
cmp
imul
pop
dec
std
je
aam
fs
and
fistpl
mov
sbb
aad
das
jp
pop
aad
ljmp
jg
lock
dec
xchg
jo
and
test
pop
mov
cmp
xor
pop
xchg
imul
hlt
js
outsb
or
add
cmp
test
sbb
int3
mov
cmp
lods
in
sub
adc
or
mov
mov
sbb
jl
pusha
ss
mov
xrelease
xor
ljmp
imul
fnstenv
ffreep
mov
test
mov
imul
mov
decb
cmp
jl
mov
test
jns
and
mov
mov
push
lods
lods
andnps
sub
jo
mov
bound
fists
jnp
pop
testl
ficoms
bound
add
and
data16
pop
rcll
inc
sbb
lods
sahf
pop
mov
insb
lock
and
dec
mov
mov
stc
mov
xor
mov
pop
loopne
fwait
adc
loopne
pop
jno
xor
je
mov
stos
ret
or
cmp
mov
mov
mul
or
and
mov
pushf
mov
jbe
aad
push
dec
lods
pop
jns
jge
jo
mov
xchg
loop
pop
mov
test
sub
sub
sub
mov
dec
scas
outsl
mov
out
xchg
int3
aas
out
inc
std
loope
pop
or
and
xlat
dec
jne
dec
test
sbb
jp
dec
dec
mov
stos
cli
leave
ja
or
stos
sbb
out
push
nop
ror
js
pop
pusha
mov
sbb
jne
pop
repz
mov
nop
into
clc
cmp
inc
mov
jl
mov
and
decl
xchg
add
icebp
or
testb
lock
lods
add
icebp
mov
mov
push
and
xchg
lahf
add
sub
test
repnz
lret
sub
cmpsb
out
aam
lds
lds
es
cmpsb
cmp
sub
sbb
loope
adc
clc
sbb
mov
aam
mov
cmpsl
push
adc
loopne
sbb
popf
stos
dec
loope
mov
pushf
and
xchg
mov
lods
outsb
or
or
add
push
int3
sub
adc
call
xchg
jl
ficoml
stos
out
aas
out
mov
lcall
mov
inc
pop
mov
pop
jle
cmp
xor
add
flds
inc
mov
jne
sub
int3
loope
imul
and
or
fstpl
jl
stc
mov
jg
pop
push
mov
mov
lds
jle
pushf
ret
pop
xchg
arpl
or
jns
or
ret
test
dec
in
inc
and
nop
ss
or
lcall
adc
dec
insl
shrb
add
cmc
or
jge
sbb
call
pop
jnp
imul
mov
mov
in
inc
int3
adc
test
fists
sarb
out
das
aas
pop
pop
sahf
mov
add
cmp
jnp
cmp
daa
out
loopne
cmp
xor
mov
inc
jo
call
shr
lret
mov
add
notb
pop
mov
dec
inc
xchg
divb
mov
adc
insb
je
cmc
mov
cwtl
in
mov
push
jo
or
and
loope
lods
das
pop
jle
cmp
and
xor
jmp
bound
mov
imul
sar
xorb
pop
push
adc
andl
aad
neg
sub
xor
repz
sub
cmp
rcrl
sbb
mov
push
shl
sbb
sbb
lods
mov
fistpll
xlat
sahf
int
pop
sub
mov
shll
in
sub
adc
jb
push
dec
jne
cmp
sbb
ja
daa
loopne
decl
lds
popf
inc
testl
enter
push
pop
mov
mov
cwtl
dec
insl
jno
fwait
mov
fldl
je
or
scas
nop
pushf
xacquire
in
mov
lock
fisubrs
add
or
mov
or
loop
xor
sub
shlb
ret
ss
xchg
mov
xor
loopne
and
inc
pop
adcl
js
pop
loopnew
mov
mov
in
cwtl
xchg
out
leave
inc
roll
xor
and
dec
sub
pop
mov
push
dec
sub
mov
adc
push
xor
mov
repnz
out
inc
mov
orb
xchg
cmpsb
jb
push
add
jo
cmpsb
xorl
lds
and
inc
xor
loop
mov
mov
add
rcrb
dec
jae
fldt
stos
shl
setnp
das
popf
int3
stos
push
jecxz
pushf
lcall
int
add
adc
imul
sbb
fdivr
xor
pop
fidivs
adc
cli
aas
add
fimuls
dec
imul
sub
std
in
or
cltd
mov
iret
ficoms
gs
pop
mov
repz
leave
and
mov
iret
fiadds
aam
dec
in
dec
aas
jle
mov
pop
cmpsb
pop
and
int3
jnp
jmp
mov
test
sub
das
add
mov
rol
push
sbb
sub
ja
hlt
fbld
movsl
lods
xchg
int3
sub
jmp
mov
and
sub
pushf
pop
fdivl
inc
jmp
notl
inc
or
pop
std
enter
mov
jne
lahf
mov
mov
cwtl
test
push
mov
push
or
sub
xchg
cmp
cltd
mov
sbb
jg,pn
fistps
inc
jo
cwtl
mov
jge
mov
ss
fwait
cmpsb
inc
add
jecxz
cmp
int3
mov
lahf
or
xchg
xchg
int3
push
add
mov
fwait
test
sbb
sub
mov
ljmp
mov
xorl
mov
sub
shlb
call
stos
dec
mov
jnp
mov
fisubrs
into
orb
xor
sarb
sub
mov
add
outsl
push
xlat
stos
pop
aam
clc
inc
ss
aad
cld
push
test
lcall
lret
inc
jl
je
data16
shll
xor
sbb
mov
stos
xchg
lcall
ja
cld
shl
cli
aas
inc
aam
aam
sub
jo
pop
lcall
addr16
xor
pop
add
fcom
xchg
add
mov
add
cmpsl
jne
insb
call
mov
les
mov
adc
leave
or
inc
xor
cltd
gs
jmp
sbb
aaa
xor
sub
xor
lahf
dec
in
mov
push
fcmovnb
adc
aaa
out
add
mov
ret
in
lret
js
dec
iret
push
jnp
testl
sub
dec
jg
jae
cli
ret
int
addl
mov
cmp
cmp
or
inc
mov
data16
ljmp
jge
cmp
adc
fwait
push
xchg
xor
addb
push
scas
scas
js
incl
js
cmc
dec
lods
dec
jbe
adc
or
cmp
pop
icebp
or
ds
shlb
mov
dec
cmp
jp
jmp
jno
out
adc
test
jecxz
iret
cmp
mov
adc
pushf
mov
add
cmp
mov
sahf
out
sub
and
jecxz
xchg
inc
inc
mov
xor
fs
dec
mov
adc
lock
mov
aam
imul
insl
bound
repz
imulb
mov
repz
pop
cli
ds
test
pop
inc
and
stos
and
and
in
and
inc
mov
aad
push
xor
filds
push
mov
xor
dec
xchg
js
and
add
andl
jg
adc
fsubr
or
push
aad
addr16
in
push
mov
mov
je
addr16
add
scas
aas
lret
push
fnstenv
xor
push
xlat
xor
sarl
and
jb
movsl
jg
nop
cmp
xchg
test
inc
cli
ljmp
xchg
adcb
and
pop
hlt
ljmp
dec
jge
cmp
into
push
ja
out
out
push
jg
test
or
push
xor
pushf
xchg
lds
jo
in
rclb
inc
aad
mov
pop
movsl
scas
testl
lret
das
push
pop
add
fwait
dec
call
push
lods
sbb
inc
jge
jl
rcrb
pop
cmp
add
lret
adc
xchg
cli
sub
imul
iret
fwait
adc
xchg
jle
aad
rorl
fmuls
icebp
cld
dec
adc
sbb
sbb
mov
inc
test
xorb
add
loope
push
jbe
lret
stos
sub
icebp
fimuls
mov
enter
jle
insb
pushl
jmp
sub
fbld
mov
repnz
push
sbb
sub
js
mov
mov
push
pop
imul
add
call
push
jo
xchg
sbb
jecxz
rep
fldt
mov
ret
imul
int
and
cmpsb
cmp
cld
bound
int3
adc
xchg
les
mov
push
ds
xor
jb
movsb
aas
sub
fstpl
fs
push
xchg
shll
jnp
in
xor
inc
xor
lea
shll
and
jmp
cltd
mov
insb
out
inc
add
sahf
cmp
mov
xchg
fdivr
mov
mov
jp
push
mov
inc
repz
pusha
and
jl
pop
mov
lahf
mov
test
or
inc
cmp
push
lock
in
push
pop
pop
add
push
xchg
cli
fisubrs
mov
or
cmp
andb
popa
sub
lea
pop
pop
mov
dec
lods
xchg
jo
push
in
jge
rol
js
add
fistpll
jne
es
mov
sbb
shrl
orl
or
add
jo
mov
imul
mov
ret
xlat
int3
or
inc
mov
sbb
jl
xor
xchg
fwait
es
les
js
ficoms
adc
inc
icebp
mov
es
push
or
scas
xchg
and
dec
hlt
lods
mov
mov
loope
sbb
subl
mov
xor
xlat
jmp
push
lea
sub
arpl
movsl
shll
add
dec
movsl
add
nop
adc
in
and
jae
push
dec
add
mov
std
popf
mov
push
jp
pop
test
in
out
mov
pop
rclb
movsl
out
cmp
jne
cmc
mov
icebp
clc
mov
add
and
stos
addr16
sarb
sbb
shlb
negb
xchg
je
addr16
enter
lea
sub
mov
mov
rclb
mov
popa
test
mov
fucomi
mov
mov
lahf
cmpsl
or
popa
nop
jl
pushf
jp
fstpl
pop
outsb
xor
cmp
lock
pop
cmpsl
ljmp
sbb
sbb
adc
inc
int
lcall
imul
lock
push
jae
loop
push
xchg
mov
xor
xchg
fsubs
sbb
cmp
mov
mov
jmp
or
xlat
sub
inc
sbb
xor
cmp
mov
shll
je
sbb
or
mov
cli
ds
outsl
push
sub
push
cmp
cmp
rorl
push
icebp
outsl
xor
sahf
int
xchg
and
jle
mov
inc
lret
and
lcall
cli
push
jmp
ljmp
out
sti
out
pop
push
mov
inc
push
stos
pop
mov
push
negl
xchg
cmp
adc
insb
mov
push
pop
and
sti
sbb
es
push
jb
out
dec
xor
jmp
out
data16
movsb
imul
iret
pop
mov
arpl
icebp
and
dec
lock
inc
fwait
mov
mov
cmovl
in
mov
shrl
ja
repz
aaa
sbb
icebp
cli
aaa
push
adc
aad
adc
enter
xchg
jnp
push
or
mov
es
jg
mov
adc
push
pop
mov
cmp
xor
inc
dec
inc
xchg
imul
mov
jecxz
adc
jae
flds
cmp
adc
mov
and
insb
out
inc
pop
shlb
movsl
xorb
in
ja
js
dec
ds
adc
fs
dec
aad
jg
aas
jae
cmpl
out
xchg
rcrl
sub
jge
mov
adc
je
mov
ss
adc
lahf
and
and
popa
gs
pop
cmp
lea
sahf
xchg
test
stos
mov
sti
gs
xchg
cmp
mov
scas
mov
mov
in
jb
mov
xchg
push
pop
test
cmp
inc
add
xchg
mov
sbb
mov
adc
repz
add
lds
push
pop
jbe
aas
xchg
nop
dec
popa
cmpsb
lcall
cmc
mov
adc
andl
pusha
test
push
or
in
mov
repz
outsb
mov
xchg
sbbl
loop
xchg
add
add
into
mov
cwtl
sub
push
xor
mov
lret
popa
aas
sub
lahf
jmp
push
daa
ss
sbb
daa
push
hlt
mov
inc
push
out
es
sti
xor
mov
test
movsb
adc
or
and
fisttpll
pop
lcall
shl
int3
add
or
adc
sub
mov
fidivrs
jmp
jne
js
mov
loop
in
push
mov
add
xchg
inc
lock
add
es
mov
pop
mov
cmp
leave
inc
xchg
es
push
pop
jp
jle
sarl
sbb
iret
shll
pop
movsl
xor
into
push
ss
pop
push
dec
push
outsb
test
clc
mov
pusha
jge
mov
jnp
cltd
xor
testl
mov
add
daa
fdivrs
dec
lcall
sub
push
das
popf
push
dec
imul
push
mov
cli
arpl
or
mov
imul
inc
nop
fldt
pushf
scas
pusha
sbb
cmc
or
or
sub
cmp
and
cltd
addb
iret
hlt
repnz
adcl
or
ret
mov
adc
inc
mov
inc
rorl
mov
fisttps
outsl
inc
pop
fidivs
lcall
mov
movsl
adc
pop
jb
lcall
pop
idivb
icebp
in
cs
dec
mov
in
cmc
sbb
dec
nop
sbb
inc
das
popa
add
nop
data16
idivb
pop
shlb
adc
xchg
xchg
and
add
cmp
sbbl
aaa
sahf
jns,pt
cmp
dec
pop
add
cmp
dec
fcmovu
pop
imul
xchg
mov
lret
jmp
popa
or
imul
and
or
jae
add
add
xor
jl
ljmpw
push
scas
insb
push
sbb
cltd
idivb
sub
sbb
rcr
mov
jbe
negb
lretw
mov
loope
fbstp
fsubrs
inc
or
movsl
cmp
adc
lcall
or
lock
lods
shlb
cwtl
mov
int3
jne
xchg
es
outsl
mov
clc
cmp
notb
testl
stos
outsl
push
mov
mov
or
xchg
pop
xlat
loopne
push
mov
sbb
gs
and
arpl
inc
cld
repnz
jle
fsts
pusha
cmp
pushf
add
arpl
xchg
xor
add
aam
pop
mov
add
cmpsl
sub
or
adc
and
sti
cmpsl
lods
and
shl
mov
mov
inc
xlat
jae
xchg
int3
negl
fsub
insb
ljmp
cmp
insl
mov
sbb
xchg
cltd
xchg
loop
pop
mov
jg
lods
push
cmpb
push
xor
mov
pop
xchg
dec
mov
lret
insb
adc
sbb
pop
xchg
pop
fiaddl
out
or
push
fwait
pop
or
jge
in
pop
mov
test
dec
lea
jb
adc
xchg
scas
mov
mov
imul
loopne
insb
dec
mov
int
aas
mov
xchg
ds
mov
aam
cmp
mov
mov
adc
mov
stos
mull
mov
xchg
mov
popf
and
stos
or
jmp
movsb
push
adc
lods
xor
push
rclb
push
js
nop
sarb
shrl
pop
push
cmpsl
mov
fildl
push
pop
sbbb
repnz
cmp
or
aam
pushf
mov
push
push
pop
or
stos
scas
cmp
lahf
add
jmp
sbb
rcl
jge
insl
push
negl
mov
mov
adc
cmc
adc
scas
bound
fimuls
inc
adc
pop
addr16
jp
dec
jge
lahf
fstp
notb
pushf
mov
mov
arpl
hlt
repnz
lcall
or
out
rorl
add
rolb
cli
jae
add
pop
lahf
out
push
into
loope
outsl
insl
pusha
or
dec
fwait
xor
sbb
xlat
int3
outsl
ja
jb
add
repnz
mov
lret
jns
fisubs
and
std
push
cmp
mov
fwait
movsl
mov
push
and
pop
adc
loop
add
jge
imul
jg
cmpsl
popf
bound
imulb
pop
mov
mov
dec
xchg
push
rol
sbb
sbb
cmp
cmp
and
in
dec
dec
mov
or
nop
loop
pushf
jmp
pop
or
ss
stos
cs
jo
rcl
adc
rcr
out
lahf
mov
movsl
jns
cmpb
test
cltd
fsubs
rcrb
test
dec
mov
mov
sbbb
mov
pcmpgtb
fimuls
and
addl
jae
fadd
or
or
movsb
subb
xchg
inc
cmp
out
test
push
stos
into
aam
mov
stos
loopne
je
mov
push
and
pushf
sub
inc
jecxz
jno
pxor
mov
out
divb
adc
roll
rcr
jl
add
popa
push
leave
outsb
cmp
loopne
push
adcl
or
in
mov
jp
or
push
outsl
xchg
dec
imul
add
popf
fisttpll
or
movb
in
fistl
and
push
es
add
fdiv
test
stc
pop
cmp
mov
daa
jne
popa
pop
pop
xchg
clc
cmp
inc
cmpsb
shlb
iret
xchg
xchg
mov
pop
mov
push
mov
xor
adc
cs
inc
inc
rcrb
lock
repz
pop
mov
rorb
popa
icebp
xor
sbb
call
movsl
shrl
je
lods
lret
xor
push
inc
ret
aas
xor
mov
push
push
lcall
xor
sbb
inc
push
mov
lods
mov
stos
xchg
dec
mov
inc
pop
mov
nop
pop
mov
inc
iret
mov
ss
out
call
pushf
fstpt
mov
adc
mov
mov
lea
mov
jne
sbb
adc
and
jae
pushf
add
mov
xchg
dec
and
mov
push
adc
or
outsb
jge
cltd
lahf
and
sbb
rcrl
in
test
adc
dec
sub
sahf
lret
lahf
xchg
iret
stos
mov
pop
sbb
mov
ffree
inc
or
loopne
push
iret
xor
sub
test
sub
dec
shll
lea
outsl
in
mov
pop
jne
mov
sti
cmpsb
imulb
inc
xchg
push
mov
pop
sahf
mov
or
movsl
addr16
lahf
fs
in
out
roll
sti
cli
push
cld
sbb
cmp
ss
mov
mov
xor
dec
adc
fs
sbb
aas
push
in
cmp
pop
mov
jo
addb
sub
mov
cmp
jmp
jb
cmp
or
popa
ja
imull
or
lock
mov
aas
mov
jge
mov
xchg
and
pop
adc
jl
pop
cmp
mov
mov
outsb
jnp
outsl
push
mov
cmp
push
jbe
gs
xchg
sti
adc
mov
dec
daa
cmp
or
popa
pop
icebp
inc
jmp
mov
ljmp
or
xchg
ss
dec
mov
sbb
jge
movsl
into
push
xchg
test
fiaddl
das
push
add
jg
fstl
inc
notb
mov
movsb
or
gs
sahf
jne
mov
out
push
inc
sub
mov
jae
jo
sbb
scas
popa
inc
xchg
pop
pushf
out
insb
aam
jl
add
enter
mov
in
or
in
cmp
mov
add
xchg
dec
sti
int3
out
mov
test
ficoms
daa
sbb
mov
hlt
mov
inc
pop
inc
jl
out
push
mov
jae
adc
sarb
or
jecxz
pop
jp
out
lahf
aaa
xchg
jae
dec
jmp
insl
fcoml
std
and
loopne
dec
ret
jb
je
push
pop
sarb
sbb
and
push
mov
cmpl
push
pop
push
dec
xor
adc
call
cmc
ret
mov
dec
xor
inc
lock
pop
mov
add
push
test
adc
ret
push
insl
icebp
js
mov
lods
iret
xchg
jb
jbe
push
in
jo
fwait
movsl
add
jo
in
xor
shrb
rorl
ja
xor
cmp
lahf
repz
mov
xor
add
mov
add
dec
sub
lret
sbb
data16
in
sti
rcrb
adc
inc
mov
sar
push
xor
out
add
add
add
xor
cltd
mov
call
or
cmpsb
xor
divl
adc
mov
mov
sbb
hlt
sbb
jns
icebp
ret
jmp
add
stc
or
xchg
adc
scas
inc
pop
in
dec
xchg
xor
fisubrl
xor
mov
jmp
jnp
fisubl
leave
push
dec
mov
sbb
scas
stos
inc
std
mov
push
or
punpckhwd
scas
mov
fcomps
jae
sbb
shl
insb
push
je
xchg
mov
mov
nop
jge
jmp
cmpsl
outsl
and
xor
lds
pusha
jge
sti
inc
dec
les
and
int3
xchg
dec
cmp
inc
mov
leave
fidivl
gs
jg
sub
imul
das
pop
jns
mov
inc
mov
push
add
jb
fstpt
fdivr
xchg
sbb
gs
mov
lahf
fcmove
or
xor
push
outsl
xor
cld
sbb
or
push
lret
aas
ds
mov
fistps
fs
inc
shlb
test
jnp
cmp
popl
xor
xchg
xor
test
iret
mov
sub
adc
stos
int
cmc
dec
mov
mov
rol
test
mov
mov
mov
leave
xorb
in
dec
xor
in
sbb
mov
popf
and
fisubrl
fwait
xor
push
push
rcll
mov
pop
push
inc
dec
add
adc
push
xchg
mov
xlat
fidivl
mov
pop
xor
xlat
push
jno
xor
in
rcrl
xor
movsl
sub
sub
jecxz
xor
push
and
pop
jbe
push
sub
cmp
pushf
inc
scas
out
das
jae
xchg
jae
dec
call
mov
sbb
call
cmp
jne
cmp
cmpsb
xlat
jmp
cmc
sahf
subl
test
stos
sarl
lds
push
mov
movsl
divl
lock
fcomp
pop
jp
jae
gs
sub
mov
cmp
cmp
or
mov
adc
dec
cld
test
imul
shr
or
and
int3
nop
jmp
push
ret
add
add
push
cmc
lock
mov
out
jg
add
jo
push
mov
insl
pushf
leave
bound
fisubl
loope,pn
adc
in
lret
pop
arpl
xor
je
aas
mov
sub
push
sbb
aaa
push
push
andb
jecxz
sub
icebp
jnp
jle
in
int3
repnz
and
hlt
adc
mov
fs
test
testl
xchg
push
mov
fs
in
bound
imul
dec
lds
lods
and
ljmp
lods
push
out
add
aad
xor
xlat
lret
lcall
jne
mov
movsl
addr16
rcrl
inc
cwtl
push
inc
out
lcall
mov
mov
in
fwait
xor
lcall
pushf
data16
mov
mov
loopne
lock
hlt
mov
sbb
pop
aam
or
mov
cmp
inc
outsb
pop
jecxz
shlb
sbb
ret
xchg
cwtl
or
daa
xor
and
aas
dec
mov
push
mov
add
pop
xor
in
shlb
mov
lret
push
pushf
jno
pop
xchg
in
jp
pop
or
mov
push
testl
movsl
andl
shl
mov
ret
mov
and
imul
bound
push
mov
lods
jecxz
movsl
sub
aaa
mov
inc
out
adc
popf
sbb
sti
pop
les
fldenv
ffree
dec
rolb
pop
sbb
sahf
jg
repz
mov
cmpsb
into
decl
push
xor
sahf
loopne
loop
pop
inc
add
cmp
mov
jae
and
bound
rorb
inc
fisubs
mov
jl
in
jle
and
sub
cwtl
xchg
cmp
jecxz
daa
out
fldenv
jg
mulb
cmpsl
enter
in
iret
imul
add
fiaddl
jne
pop
fistps
aad
out
aaa
pop
mov
or
pop
enterw
mov
or
addr16
imul
fwait
sbb
mov
and
stc
mov
outsl
lret
or
je
jb
incl
pop
roll
insl
jmp
imul
call
stc
shl
stos
mov
jo
and
movsb
add
adc
iret
xchg
test
out
fstpt
jne
test
ret
scas
mov
sub
cmp
pop
nop
and
adcl
popf
push
cwtl
icebp
arpl
shll
bound
inc
and
gs
pop
and
jg
cmpsb
sbb
jmp
cs
loopne
loop
dec
push
mov
xchg
dec
mov
in
leave
int
lds
xchg
push
inc
je
sahf
fdivs
das
xchg
mov
mov
push
leave
dec
cmc
movsb
xchg
mov
je
or
jo
roll
aam
fs
xlat
insl
cli
sbb
pop
mov
call
into
mov
adc
adc
scas
insb
fwait
and
clc
jo
in
nop
mov
aam
fwait
adc
neg
sub
iret
insl
fs
cmp
pusha
xchg
lret
dec
xor
ss
addr16
pop
push
sub
hlt
lret
jl
out
fsubs
adc
jg
dec
jp
push
lds
jne
push
fdivrl
jmp
cmp
jns
cmc
cmc
xchg
mov
pop
push
ret
mov
into
cld
xor
push
sbb
mov
imul
call
mov
dec
out
out
aas
fs
in
sub
pop
out
imul
and
mov
inc
adc
lea
test
pop
faddl
cmp
out
ret
jmp
sub
mov
or
cwtl
repnz
cmp
imul
push
arpl
lods
adc
xlat
hlt
push
ds
mov
mov
mov
xchg
mov
imul
sub
pop
xor
push
pop
loopne
add
arpl
pop
push
jb
jns
push
cltd
inc
int3
stos
aam
push
movsb
cmp
pop
mov
call
ffree
jae
sub
sbb
lods
fmulp
mov
mov
sub
jbe
data16
sbb
sub
enter
jp
aad
mov
cmp
push
int3
push
jne
icebp
xrelease
repnz
sub
xor
and
pop
sbb
out
sbb
sub
cmpsl
pop
jg
and
or
cmp
push
push
jg
icebp
dec
adcl
fwait
inc
mov
fwait
das
incl
mov
xchg
cmp
mov
inc
xchg
inc
repnz
mov
out
out
dec
ret
mov
mov
lret
lcall
int3
pop
xchg
sub
mov
addb
dec
insb
test
fs
ja
inc
push
add
xchg
and
fs
adc
mulb
xor
dec
mov
aad
cld
enter
in
loope
push
test
sbb
repnz
jns
jbe
mov
movd
mov
xchg
loopne
ds
xor
dec
lds
rol
push
mov
push
lret
xchg
inc
and
cmpsl
mov
mov
lock
cmp
xor
jle
lods
icebp
mov
fimull
bound
mov
mov
jno
pop
mov
icebp
jl
push
ja
int3
pop
stc
fistps
hlt
pop
lea
in
push
addr16
jnp
push
jg
call
retw
jge
inc
push
aaa
jl
inc
pop
fistpll
sbb
lea
jl
cmp
in
scas
mov
mov
jne
insb
and
push
lods
push
mov
fldenv
ja
dec
hlt
inc
in
and
xchg
xor
add
xchg
xchg
xchg
es
mov
fisttpl
inc
fisubrl
mov
ficoml
xor
and
mov
mov
test
jge
mov
sub
cmp
sti
fnstenv
leave
cmpsb
dec
lret
jmp
mov
inc
and
push
out
fidivrs
in
mov
adc
and
jne
add
notb
stc
repnz
add
lret
xchg
ja
in
js
xchg
mov
xor
insl
adc
and
ret
sar
sbb
outsl
mov
xor
inc
mov
dec
mov
sub
xchg
sti
sahf
adc
jle
sar
dec
sub
fisubrs
lock
jbe
lea
cmp
sbb
ret
mov
xor
enter
mov
fs
sub
test
cltd
cltd
bound
orl
rcll
sarl
add
pop
aad
shrl
in
pop
dec
mov
ljmp
xor
dec
xchg
test
stos
mov
inc
pop
sbb
push
and
sbb
dec
xor
out
out
xor
cmp
rolb
mov
shlb
push
lods
loopne
pop
ja
rol
sub
icebp
push
inc
loope
xchg
xchg
and
adc
cmpsb
mov
jnp
icebp
mov
mov
cmp
test
jnp
fs
xchg
pop
or
ljmp
sbb
inc
imul
ja
dec
lods
pop
mov
call
fisubrs
mov
push
and
stc
mov
xchg
mov
cwtl
ds
fdivl
sub
aad
cmp
sbb
or
pop
gs
insl
jb
aam
push
addr16
push
and
add
test
stos
mov
imul
imul
in
fs
lret
lahf
jo
iret
pop
subl
jno
sub
and
popf
aad
xchg
test
mov
and
fs
cmp
inc
out
pop
or
aas
xchg
fs
or
dec
daa
mov
push
inc
ljmp
shlb
pop
outsl
xlat
in
aaa
lods
add
mov
test
add
and
repnz
cli
cs
addl
cmpsb
repz
cmc
lds
popf
mov
pop
pop
int
jle
adc
test
sbb
xlat
xor
call
mov
adc
mov
aaa
dec
mov
mov
sbb
imul
push
add
iret
sbb
jae
das
inc
push
push
sahf
testb
movsl
bts
adc
inc
and
sub
inc
dec
jge
clc
cmc
imul
xchg
in
jnp
adc
and
js
mov
movsl
mov
les
pop
stos
inc
or
rorl
stos
das
cmp
idivl
faddl
sbb
push
cmp
pop
leave
inc
cs
out
leave
push
xchg
cltd
push
cwtl
cmp
xchg
jns
inc
xchg
mov
xchg
fcompl
jge
mov
jg
push
repz
xor
lock
leave
cmpsb
loop
pusha
mov
rcrb
and
jmp
pop
pop
scas
sbb
mov
aas
lock
call
mov
sub
shr
mov
ret
cwtl
out
xchg
cmp
clc
jno
out
mov
sbb
call
jge
test
lahf
mov
call
inc
pop
lea
rol
jle
les
inc
cs
push
loopne
gs
adc
rcl
rclb
mov
mov
dec
lods
jecxz
jbe
in
xchg
sahf
in
out
stos
fnstcw
xlat
push
and
ljmp
aaa
in
xlat
mov
imul
cld
add
les
mov
mov
adc
push
ret
sbb
loope
mov
popa
mov
mov
mov
jnp
mov
xchg
sbb
nop
movups
lock
jp
mov
in
mov
sub
lock
push
shlb
or
cmpsb
or
jae
sbb
add
orl
pop
scas
jne
pop
das
or
mov
hlt
and
push
je
xor
mov
or
dec
lods
popa
loop
xchg
xchg
dec
cmp
std
lods
into
add
fdivrl
in
mov
mov
pop
jnp
adc
pushf
test
cmp
mov
stos
iret
cmp
cld
repz
adc
test
push
jns
xchg
adc
imul
sub
aas
mov
pop
das
in
out
cmp
into
mov
jno
push
mov
std
movb
out
outsb
cli
gs
dec
hlt
mov
sahf
sub
fsubrs
add
lahf
xchg
cld
mov
pop
push
dec
adc
mov
lods
lahf
mov
ljmp
std
mov
outsb
shrb
mov
sahf
add
lret
adc
sub
ror
inc
or
call
data16
mov
popf
mov
pusha
xor
inc
lahf
jns
inc
jmp
jmp
mov
pop
movsb
nop
popa
jmp
lods
ret
inc
mov
push
int3
arpl
int3
sub
sar
shl
aad
inc
mov
scas
dec
test
mov
mov
popa
std
pop
repnz
or
and
ret
and
lea
jnp
xchg
push
xor
loopne
inc
push
popa
adc
jb
icebp
into
lsl
fisttpl
jo
aaa
scas
ret
pop
flds
fisubrl
call
aas
adc
ret
inc
pop
xchg
incl
icebp
add
sbb
cmc
aad
add
insb
jbe
les
mov
stos
xchg
add
sbb
cli
enter
ja
repnz
mov
incb
add
pop
cmp
insl
dec
push
xabort
mov
data16
jl
addr16
inc
and
xor
orb
add
xchg
stc
xor
adc
outsb
insb
and
cmpsl
movsb
data16
mov
enter
jg
mov
je
leave
fcomip
cs
mov
jp,pt
push
mov
push
xor
repz
add
dec
insb
ss
cmp
ror
out
icebp
out
jmp
push
iret
icebp
dec
mov
cld
mov
int3
pushl
ret
call
push
xor
cmp
sarb
cltd
sbb
cmp
and
inc
adc
test
ret
aaa
js
aaa
jge
aas
cmp
imul
out
xchg
mov
pop
mov
dec
mov
lret
mov
sub
and
or
aam
outsb
faddl
xlat
cltd
xchg
sub
fchs
sub
and
loope
in
repz
test
ds
lcall
inc
jl
mov
imul
push
mov
push
lahf
add
mov
mov
pushl
nop
jecxz
jecxz
sbb
ret
pop
test
js
lret
cmp
xor
mov
cmp
shl
inc
icebp
dec
shrb
push
jle
jae
daa
push
lret
mov
test
ret
jp
lcall
dec
inc
or
sub
mov
bound
scas
cmpsb
stc
ljmp
scas
mov
cmp
jmp
es
lea
sbb
or
fisubrs
shlb
sbb
xchg
repz
dec
cmp
xchg
pop
lea
outsb
popf
imul
cmp
xor
and
mov
ds
aad
mov
xor
adc
xchg
pop
ds
in
cmc
inc
mov
xchg
fnstsw
aas
pushf
repnz
cmp
and
push
inc
or
and
pop
pop
push
add
fadd
test
mov
adc
out
sbb
aad
xchg
imul
or
mov
addr16
and
fwait
mul
in
in
pushf
adc
xor
daa
mov
pop
enter
xor
popa
sub
push
lcall
in
push
roll
and
or
adc
push
ds
fsub
pop
jl
adc
js
lock
xor
das
push
out
aam
fsubrs
hlt
or
push
test
popf
wbinvd
repnz
lret
and
ret
orb
add
pushf
ss
xchg
ficoml
les
loop
and
mov
mov
push
adc
sub
push
mov
fcmovb
jle
insl
add
cltd
test
gs
lods
pop
sarb
int3
add
and
scas
mov
or
push
and
and
fisttpll
sub
sbb
adc
xlat
ret
jnp
addr16
mov
and
mov
lahf
loope
in
add
xchg
imul
mov
int
push
icebp
idiv
inc
xchg
sub
pop
push
add
mov
pop
dec
lock
mov
lods
and
pop
mov
inc
cmp
xchg
out
xor
mov
mov
add
mov
mov
mov
inc
push
outsb
mov
mov
pop
cmp
mov
xchg
lret
or
ret
cli
add
sbb
das
enter
jnp
das
mov
insb
shll
xor
add
cmpsl
sbb
push
jae
scas
out
rep
sub
xchg
xchg
pop
cmc
sub
push
or
mov
jno
lds
inc
pop
inc
and
sbb
arpl
xchg
insb
xor
and
int3
push
test
push
lahf
mov
es
js
cmp
nop
inc
pop
cmp
arpl
push
fsubrs
add
ja
fnstenv
sbb
adc
out
and
add
int
add
outsb
fldenv
push
mov
cmp
push
xchg
cli
mov
sbb
xchg
inc
xor
pop
xchg
jo
orl
xlat
jo
stos
cmpsl
sbb
test
xor
dec
ret
and
mov
cmp
scas
jno
mov
test
out
or
add
ljmp
lea
cmp
out
pop
ja
inc
jbe
imul
jg
imul
cmp
cmp
mov
pusha
jmp
iret
adc
out
jl
je
mov
lret
je
lods
lods
popf
mov
dec
mov
ret
push
xchg
es
dec
push
mull
mov
or
cmpsb
jne
adc
aam
adc
mov
es
add
je
loop
sub
fs
or
shll
and
arpl
cltd
push
enter
push
sub
jne
popl
call
sbb
sub
and
adc
cmpsb
into
mov
pop
les
adc
mov
leave
pop
jp
mov
and
imul
pop
push
sahf
sbb
dec
xor
sub
xor
shll
scas
mov
aad
mov
jp
xor
xlat
stc
in
dec
jecxz
rclb
xchg
xlat
fxch
addb
or
xchg
pop
mov
aaa
lahf
add
mov
test
gs
fdivp
cmpl
bound
mov
cmp
push
cmp
lret
xchg
mov
jmp
stos
cmp
xchg
lea
aaa
adc
icebp
inc
aad
xlat
in
inc
pop
mov
cmpsb
lods
in
cmp
imul
push
icebp
gs
mov
ss
ja
sbb
cli
std
imulb
idivl
jae
push
pop
mov
cltd
pushf
sub
loope
xor
push
cmp
ja
ljmp
mov
add
arpl
sbb
test
jb
xor
lods
bound
cmp
mov
inc
lret
adc
icebp
push
sbb
add
jne
in
mov
jmp
scas
sub
mov
mov
shrb
mov
push
jle
mov
mov
mov
rorl
dec
xchg
cmp
in
xchg
adc
aam
mov
into
pop
fdivrp
jecxz
mov
push
jmp
push
mov
jg
jo
cmp
sbb
xchg
and
out
aas
test
or
sbb
mov
ljmp
and
test
cld
xchg
pushl
xor
push
push
lock
aaa
inc
fcmove
push
ss
cmpsb
inc
adc
lds
shll
sbb
test
push
mov
add
pop
dec
ds
stc
addl
outsb
pushf
xchg
outsb
sti
mov
fldt
pop
fs
pushf
test
cld
pop
push
mov
bound
push
mov
dec
mov
repnz
push
into
decl
pop
shlb
int
xlat
xor
enter
jb
push
add
inc
xchg
mov
mov
outsb
enter
ss
pushf
lret
jnp
out
add
movb
mov
xchg
cmc
mov
inc
in
sbb
fnstenv
and
shll
dec
add
push
jnp
push
adc
mov
xchg
je
jns
xor
loope
fs
cwtl
xchg
ss
loopne
dec
xchg
gs
idiv
mov
scas
mov
pop
inc
dec
adc
das
push
fmul
pusha
fucomp
sub
pop
jae
jnp
push
ljmp
arpl
jmp
sbb
cmc
jle
pop
jg
call
mov
adcb
dec
inc
popa
jp
inc
loope
jecxz
aad
push
pop
js
xchg
mov
jno
mov
enter
pop
inc
loop
mov
xchg
sbb
mov
and
jbe
lds
fs
imul
call
in
idiv
push
cmp
xor
stos
aam
inc
cwtl
push
adc
sub
cmp
jae
das
sbb
insb
iret
jg
call
add
add
ja
mov
push
test
mov
mov
out
adc
sti
mov
dec
adc
mov
cltd
xchg
xor
xor
jp
cmp
test
scas
or
icebp
mov
andl
sub
into
movsb
mov
ret
aam
push
xor
fldcw
dec
xorb
mov
out
inc
sarb
mov
sbb
stos
inc
jle
jbe
call
mov
mov
stos
mov
mov
cltd
and
inc
jge
negb
les
aaa
popf
scas
jnp
in
lds
sub
adc
xchg
adc
inc
fcmovu
lret
arpl
sti
iret
scas
sub
dec
lret
fstl
xchg
out
mov
shlb
mov
jbe
jns
bound
xchg
jge
inc
dec
scas
mov
in
pop
adc
insb
pop
iret
js
popf
push
sbb
loope
mov
jno
push
ret
out
enter
and
sbb
pop
insl
push
push
dec
adc
cmp
lret
xchg
jns
and
ret
out
adc
or
mov
jmp
pop
push
and
sbbl
add
or
sub
aam
mov
ss
in
mov
mov
lcall
mov
lock
sub
xorl
mov
cld
sub
insb
hlt
hlt
aam
xor
or
dec
push
mov
fucom
addr16
jmp
mov
mov
lods
mov
inc
sbb
daa
scas
adcb
sub
cmp
sti
cmp
popa
push
pusha
mov
into
jle
daa
adc
jge
cmpsl
jmp
jb
icebp
fucomip
test
or
or
hlt
es
fldcw
loopne
sub
pop
push
dec
xchg
sbb
gs
and
ficompl
cli
inc
stc
push
out
jl
or
pop
jb
sub
mov
mov
mov
lods
mov
cmpsb
out
xchg
lret
insb
insl
aas
mov
into
ficomps
icebp
mov
js
fwait
xchg
sti
dec
cmp
in
pcmpgtw
sub
cmpl
lea
sti
push
mov
or
jnp
mov
clc
xor
int3
sbb
rcll
lea
les
pop
popf
shlb
and
dec
cmpsl
lret
dec
mov
push
dec
punpckhwd
out
mov
in
jnp
lret
sahf
lcall
mov
xor
sti
in
out
in
mov
in
mov
jge
mov
out
nop
pushf
push
sub
jl
adc
cld
sti
and
lcall
and
sahf
rcrl
dec
xchg
inc
lret
psubusb
cmpsb
mov
cmc
and
pop
and
mov
push
repz
mov
hlt
ja
call
mov
arpl
and
xchg
fstps
sarb
clc
mov
int
cmp
push
jmp
jle
leave
and
mov
test
pop
dec
jo
fs
mov
mov
sti
xor
loopne
xchg
mov
xchg
and
xor
inc
inc
and
orb
insb
ljmp
sub
das
adc
mov
fisubs
imul
sbb
push
jbe
pop
push
fisubrs
ja
insl
push
addl
jle
and
jae
icebp
loop
cs
hlt
or
and
test
sbb
xlat
sub
pop
push
xor
sbb
outsb
xchg
adc
dec
or
cmpsb
std
push
fsubs
imul
pop
movsl
rolb
out
mov
xor
inc
notb
xor
pop
mov
or
imul
inc
push
xor
and
xchg
daa
adc
cli
sbb
scas
cmovae
mov
dec
mov
into
jbe
movsl
imul
scas
into
and
or
and
jns
and
jne
and
fistpll
lcall
jle
test
sbb
pop
dec
leave
in
jecxz
ss
mov
xor
repnz
inc
push
andl
sub
aaa
xor
push
jne
adc
rcll
pop
mov
fisubl
jo,pt
sub
test
shrb
sbb
push
jns
imul
or
bound
scas
lods
cmp
aad
loop
fimull
iret
fscale
pop
out
out
call
mov
aas
mov
ficoml
jle
pop
clc
int3
cwtl
shrl
in
in
in
mov
ljmp
and
outsb
dec
adc
incl
xchg
fwait
cmp
mov
jg
mov
jmp
mov
inc
rorl
repnz
and
rclb
in
push
inc
xor
or
lret
sbb
dec
pop
xchg
gs
jge
jecxz
mov
xor
inc
in
fistps
pop
inc
or
mov
mov
popf
and
sub
lods
jecxz
xlat
sarb
mov
dec
lret
pushf
lea
aas
pop
lret
js
add
xor
fsubl
lret
adc
and
mov
mov
arpl
jbe
mov
sub
sbb
fsubrl
cmp
or
iret
push
cmpsl
jecxz
pop
mov
jbe
leave
mov
mov
aaa
xor
jmp
es
fisubrs
cmp
fstps
movsl
mov
lahf
cmp
aaa
fs
mov
test
xor
dec
ret
es
adc
push
aaa
aad
cmpsl
inc
cmp
sbbl
lahf
int
add
out
inc
fdivrs
out
test
ret
adc
jp
pop
xchg
js
ss
mulb
sbbb
xchg
aad
andb
sub
je
push
loop
icebp
sbb
cwtd
test
std
push
sbb
lock
push
push
ja
inc
fidivs
insb
add
inc
mov
cmp
jmp
push
pushf
lock
loop
push
and
xor
mov
out
or
sahf
out
mov
jae
dec
fisubrl
sbb
fbld
jb
add
cmp
mov
dec
fdivs
pop
repz
inc
jae
pop
sub
sub
in
popa
in
mov
push
iret
xchg
add
in
adcb
pushf
push
shll
lods
lds
xor
repnz
push
shrb
js
jmp
sub
pop
xchg
in
cmpsl
movsb
sub
mov
jbe
in
dec
je
push
and
xchg
pop
pop
pop
out
loopne
hlt
and
mov
scas
add
fmull
or
mov
fs
test
test
popf
aaa
xor
jns
xchg
adc
rcl
lahf
jg
adc
pop
lock
dec
orl
rorl
sub
dec
add
andb
fwait
lods
int
mov
hlt
xchg
mov
mov
rcl
outsl
int3
mov
ss
rolb
push
loope
test
sbb
xor
dec
push
addr16
outsl
jle
test
fmull
dec
add
push
sbb
repnz
rcll
adc
std
cmp
fdivl
push
jae
test
inc
mov
mov
dec
dec
and
adc
dec
pop
pop
or
fstl
loop
pop
js
and
cli
or
push
mov
mov
jp
addr16
cmp
jl
xlat
int
mov
or
sub
mov
into
add
jl
aas
insb
icebp
xchg
iret
cmpsl
push
xor
in
imul
das
imul
jg
loop
cwtl
in
orl
sbb
rol
je
mov
bound
push
sub
jp
mov
sub
ljmp
adc
jns
mov
popf
daa
shll
sahf
jmp
lock
add
sub
jb
mov
lock
into
insb
or
sbb
out
fidivrs
mov
sbb
mov
jl
imul
out
push
xor
adc
decb
es
pop
std
mov
aaa
rcl
cmp
push
fiadds
rcrw
rclb
mov
int
fwait
push
push
mov
and
mov
mov
xlat
mov
pop
dec
rorb
cmp
fisubl
int3
dec
mov
adcb
push
pop
adc
cli
xchg
data16
jmp
lods
add
lret
add
je
lods
repz
adc
pop
jmp
jns
sub
adc
push
push
push
out
pop
or
loope
xchg
xor
mov
and
ljmp
push
jle
in
sub
inc
mov
sbb
or
xchg
adc
push
jno
push
dec
push
imul
popf
dec
data16
andb
push
popf
inc
insl
inc
aaa
cld
data16
addr16
or
aas
mov
add
push
mov
clc
push
out
lret
aas
push
sub
cwtl
scas
test
mov
cmp
sbb
addr16
sub
test
stos
lds
mov
jnp
les
fstpt
out
add
or
das
or
xchg
pop
enter
mov
xor
stos
dec
xchg
lock
imul
sub
and
enter
jb
jno
sub
mov
stos
mov
sbb
jmp
popa
push
je
cmpsb
inc
or
xor
mov
push
mov
inc
mov
pop
cmp
fildll
jns,pn
roll
push
aam
outsb
movsl
xor
lret
push
xchg
les
mov
addr16
jecxz
cmp
mov
fcmovu
scas
lret
sbb
ja
call
in
or
int3
mov
aad
xchg
mov
xchg
aas
pusha
and
pop
inc
cmp
push
push
xchg
ret
cmp
jnp
mov
mov
das
jns
sub
dec
push
pop
out
jl
sbb
mov
xchg
cmpsl
fwait
shrl
pop
and
sti
cwtl
xor
adc
inc
xor
dec
jb
fisttpl
add
mov
mov
sti
mov
stos
scas
jle
in
jns
std
add
das
insb
sub
aas
pop
dec
push
test
sbb
jne
push
std
mov
cmp
jnp
dec
clc
cltd
push
fdivrl
pop
or
mov
mov
loop
lods
lea
test
sub
and
pushf
arpl
in
shr
dec
rclb
clc
imull
add
jg
enter
jns
mov
or
add
sub
pushf
cmp
movsl
outsb
mov
jo
aaa
in
lret
inc
lret
adc
popf
adc
and
nop
xchg
cmp
and
mov
inc
lcall
push
lret
mov
mov
sti
in
sbb
decl
sub
pop
pusha
or
das
xor
fsubl
into
xor
sbbb
outsb
lret
push
pop
add
pop
insb
and
mov
ret
loopne
cmp
cmp
push
cld
jmp
ljmp
xor
in
push
imul
test
xchg
gs
fstl
dec
sbb
ficoml
mov
daa
je
in
pop
jmp
dec
dec
adc
lcall
ljmp
xchg
sbb
sbb
imul
es
pusha
int3
jns
adc
add
xor
or
scas
mov
pusha
aaa
stc
inc
ja
jo
xor
and
and
mov
popa
leave
icebp
xchg
pop
cmpsl
or
mov
je
ljmp
das
inc
pop
mul
ljmp
push
popf
mov
aas
add
movsl
add
cmp
mov
ret
mov
mov
je
ret
clc
addr16
loop
cmc
test
or
jae
test
dec
xor
mov
shll
pop
dec
push
js
mov
dec
cmp
negb
arpl
lods
std
mov
imul
daa
rcrl
pop
cmp
lods
pop
dec
std
in
call
aam
lret
xor
mov
mov
xchg
scas
in
fistps
push
das
xchg
addr16
sbb
fistpll
adc
sub
sbb
inc
jle
or
push
fdivrs
jp
jb
or
dec
lock
data16
test
mov
and
jb
hlt
xor
pushf
pusha
mov
rolb
ret
hlt
fs
mov
xor
mov
jno
push
insl
jp
jmp
pusha
pop
int3
cli
cmp
pop
push
lea
pushf
scas
scas
rcll
enter
and
push
push
inc
es
lock
das
repnz
xlat
push
fs
aad
das
es
bound
jbe
jle
mov
into
push
lods
shr
and
mov
arpl
gs
jnp
mov
scas
jo
leave
adcb
sbb
sub
push
add
sbb
fmul
or
mov
or
test
inc
cltd
push
fs
sbb
xor
cwtl
stos
mov
or
aaa
and
or
jo
ret
int3
repnz
leave
sti
inc
mov
dec
lods
fwait
jg
lcall
cmp
idivl
sub
sub
xchg
sub
pop
xchg
shrb
or
lahf
mov
lret
mov
mov
lock
mov
inc
cmp
jl
mov
cmpsl
mov
mov
aaa
push
push
xor
enter
pop
mov
jnp
jo
mov
dec
dec
test
jns
pushf
xchg
push
aad
fwait
subb
outsb
sbb
pop
out
clc
movsb
fbld
sbb
xchg
pop
mov
loope
daa
lods
mov
and
insl
lods
jecxz
mov
nop
pop
daa
mov
aas
lea
inc
sub
jmp
sbb
and
sub
test
jge
icebp
shl
mov
xchg
sbb
sub
add
in
mov
outsb
aaa
jae
add
inc
cmp
adc
test
or
add
mov
pusha
xchg
sub
loopne,pn
dec
mov
ret
mov
shll
in
js
jne
xchg
lret
add
jnp
out
sub
sub
rclb
add
rorl
mov
test
adc
add
push
outsl
and
add
jle
and
cmp
cmpsb
sub
push
sub
lret
clc
incb
mov
inc
aaa
cmp
jp,pt
pop
xchg
dec
stos
add
out
das
push
shrb
inc
cld
jmp
add
cltd
push
cmp
bsf
sbb
mov
jns
das
dec
es
sub
dec
mov
fnstenv
push
push
aad
adc
mov
push
imull
cmp
lods
psubsb
stos
cwtl
or
mov
dec
add
lahf
xlat
xor
cmc
sti
scas
jp
aas
xor
pop
xchg
orl
lcall
lcall
mov
shll
cmp
shll
jne
gs
insl
insb
mov
sub
sub
in
xchg
in
test
outsl
sub
imul
outsl
scas
aas
mov
push
movsl
popa
pop
lahf
jle
dec
popf
imulb
loope
jmp
jge
jns
pop
out
mov
xor
rolb
dec
jmp
jle
pop
fisttpll
mov
dec
imul
cmp
sbb
push
out
icebp
xlat
cmp
into
je
leave
outsl
pop
out
lods
and
or
stos
inc
xor
jecxz,pn
iret
sbb
and
jl
add
pop
test
pop
sti
sti
pop
cmp
xchg
sbb
sub
add
mov
mov
lahf
jo
inc
addb
out
out
xchg
cmp
sbb
inc
and
mov
mov
not
cmp
inc
xchg
mov
stos
xchg
daa
sbb
notl
test
movsl
pushl
sbb
cmp
dec
sbb
out
lahf
pushf
pusha
shrb
fs
fsubr
cmp
fs
test
inc
push
cmpsb
shr
add
add
popf
rclb
mov
lcall
fildl
cmpsb
lea
jbe
lods
pop
outsl
jno
xchg
xchg
add
aaa
aam
test
inc
iret
pop
inc
lea
sbb
ret
cmp
mov
lods
lock
dec
or
or
outsl
ficoml
push
inc
scas
pop
mov
and
out
jl
sbb
or
inc
movsb
cmpsl
mov
push
or
int
das
movsb
imul
sahf
inc
jl
out
xchg
jo
ljmp
dec
fimull
movb
rcrl
test
jae
in
lea
in
out
int
in
mov
popa
lods
jp
enter
push
sti
in
push
jge
subl
leave
dec
add
cwtl
dec
jle
mov
popf
pop
mov
mov
sti
int
pop
aad
inc
ljmp
push
lahf
mov
pop
inc
inc
out
cmpsb
pop
jg
jmp
ljmp
into
push
imul
scas
daa
xchg
mov
out
sub
dec
aas
sub
pop
push
jl
fwait
stos
loopne
imul
push
xchg
xor
ret
add
roll
aaa
mov
icebp
pop
inc
out
xchg
mov
pushl
data16
xchg
sbb
add
shrb
in
mov
lds
xchg
fisttpll
xor
aad
movsb
mov
lret
push
adc
lods
int3
in
cld
dec
and
xor
sbb
xchg
sub
int3
mov
and
sahf
push
loopne
movsb
je
mov
jl
rorb
cli
mov
sub
mov
pushf
push
movsb
in
in
lret
fisttpll
pop
lds
mov
jl
or
mov
push
leave
lahf
inc
inc
pop
cmpsb
imulb
jge
popl
pop
hlt
test
cmpsb
in
jns
shl
in
mov
push
ja
mov
fwait
out
test
inc
leave
inc
dec
mov
fcmove
xor
or
sub
sarb
lret
mov
or
addl
dec
add
cmp
xor
orb
inc
stos
pop
or
loope
adc
mov
cld
push
jecxz
cli
push
addr16
mov
aaa
stos
sbb
mov
ret
add
jecxz
pop
push
sbb
adc
mov
lods
scas
data16
iret
roll
cli
scas
pusha
out
push
outsl
lret
xchg
dec
cmpsb
or
inc
push
add
dec
inc
mov
ds
sub
or
sub
int
mov
push
cltd
cmp
mov
out
pop
lock
mov
test
xchg
fdivs
js
fnstsw
popa
stc
jbe
xchg
push
jne
insl
test
dec
add
sbb
add
xchg
js
jno
inc
fnstenv
mov
fsubr
insb
sbb
mov
jae
aad
adc
aam
fcoml
aas
popf
ljmp
mov
sarb
jno
lret
stc
add
or
xchg
ficoml
int
mov
mov
pop
pop
mov
out
or
jge
sbbl
lods
outsb
lods
jb
jle
lods
add
ret
jno
ror
mov
aaa
cmpsl
jl
dec
mov
test
hlt
mov
and
outsb
inc
clc
mov
or
arpl
jnp
rcrb
mov
push
cmp
repnz
ret
aam
push
mov
ret
int
rcl
scas
stos
jmp
push
adc
pop
dec
mov
into
mov
sbb
pop
mov
rep
xlat
movsl
pop
fmuls
or
push
enter
or
mov
rol
or
jbe
push
aaa
push
fdivrp
or
or
push
sub
inc
sub
fimuls
or
ljmp
daa
adc
ljmp
sbb
in
xor
pop
fildl
lahf
adc
sub
ljmp
pop
add
dec
push
rcl
jge
push
add
and
in
mov
push
mov
movsl
aas
and
in
cmp
sub
push
fst
lret
push
dec
push
lahf
mov
jl
push
xchg
mov
and
sbb
aaa
mov
adc
popa
pop
sarl
sbb
add
mov
inc
xor
out
imul
adc
xchg
fcmovu
jbe
cmp
fstpl
push
push
adc
movsl
mov
movsl
mov
push
push
mov
das
fbld
pop
xor
aas
sti
mov
popf
fidivl
nop
pop
loop
or
mov
hlt
push
xor
sub
popf
sahf
ffree
add
cmp
or
add
xchg
imul
xchg
xchg
jne
shll
pusha
fmuls
std
pop
sbb
pop
jb
adc
lock
push
lods
shlb
sbb
and
mov
mov
jno
popf
pushf
push
dec
lods
jno
jns
iret
push
pop
scas
jns
dec
xchg
inc
xchg
xchg
in
out
pop
mov
jecxz
mov
andb
cmpsl
iret
cli
lods
aad
shlb
cmp
mov
nop
mov
sub
add
mov
push
aam
div
js
push
icebp
xchg
bound
jbe
nop
int
aad
sahf
rcl
movsl
jae
push
xchg
or
push
inc
out
push
lret
add
icebp
jge
xchg
mov
xchg
push
sub
pop
dec
or
jmp
jle
and
xchg
cmp
jbe
jbe
popa
inc
cmpsb
aam
out
out
sbb
push
sbb
mov
or
daa
movsl
push
mov
jb
cmp
push
fcompl
aaa
pop
jmp
sbb
push
lret
in
cmp
ret
xchg
mov
lar
loop
shr
out
cmp
adcl
enter
hlt
xchg
in
xor
mov
sbb
test
fstl
jbe
adc
repnz
lret
daa
sub
xlat
add
sahf
fstps
es
inc
adc
jcxz
mov
ljmp
rcrl
dec
int3
pop
imul
mov
cld
js
jno
fs
in
inc
movsb
nop
outsb
mov
xchg
test
sbb
aas
iret
xchg
jge
xchg
or
pusha
jb
stc
aaa
flds
int
dec
xchg
daa
and
fnstenv
xchg
xlat
leavew
cltd
into
cmp
jg
and
ret
lret
sub
sbb
dec
cmpsb
adc
inc
in
dec
xchg
sbb
mov
rorb
jecxz
sbb
gs
mov
fidivrl
jg
inc
jg
xchg
xchg
fsubp
inc
bnd
imul
dec
mov
aaa
stc
add
pop
sub
dec
jno
and
jae
scas
fstpt
jb
sbb
sbb
rclb
cltd
mov
fcmovbe
sbb
sti
gs
mov
xor
fxch
mov
arpl
mov
repnz
jecxz
jb
adc
sbb
daa
add
jno
xlat
dec
les
lock
or
fcomps
rorl
ds
mov
jbe
andb
mov
or
in
bound
jecxz
and
test
and
xchg
movsl
les
dec
outsl
push
mov
and
stos
inc
js
or
xor
clc
rcll
pop
lret
fsts
sahf
sbb
pushl
xchg
jmp
xor
bound
pop
xor
gs
cmpsl
adc
push
dec
inc
ds
xchg
and
ljmp
xorb
mov
dec
xor
push
in
or
xchg
jo
clc
sbb
int
movsl
lcall
ret
adc
add
cmpb
xchg
jl
pop
xlat
pop
movsb
mov
loope
insb
pop
and
fldenv
push
jnp
stos
insb
jmp
lret
sub
in
pop
jne
adc
in
jecxz
mov
mov
mov
xchg
test
jbe
inc
outsl
popa
arpl
test
mov
xor
jmp
sahf
jne
xor
inc
lahf
aas
mov
imul
andl
or
aam
and
test
subb
decb
adc
sub
shll
rorb
cs
rcrl
imul
fists
or
aaa
adc
decb
pusha
in
adc
xor
filds
mov
mov
xchg
push
lds
xchg
pop
push
cwtl
cmp
ret
jecxz
les
jne
mov
sub
xor
dec
call
push
add
stc
jp
inc
cmp
mov
sbb
mov
inc
fcomip
inc
jp
outsb
cwtl
inc
jg
out
inc
movsb
out
mov
jne
imul
outsl
aas
and
or
mov
pop
mov
ljmp
jb
outsl
adc
dec
add
in
je
lods
mov
rol
fldt
sbb
popa
mov
xor
ljmp
jp
xchg
push
sub
mov
xchg
lds
stos
xchg
dec
push
mov
jne
jnp
es
gs
and
cli
cmp
sarb
out
mov
jns
add
jl
popa
mov
out
mov
pop
xchg
inc
and
js
movsb
xchg
movsb
out
fwait
inc
sar
xor
frstor
sbb
inc
stos
fisubrl
jno
clc
push
jge
lret
mov
gs
daa
mov
imul
in
pcmpeqw
mov
sub
popf
out
dec
xor
or
xchg
insb
mov
adc
repz
mov
imul
dec
xchg
jmp
mov
add
mov
jns
cmp
and
inc
or
jmp
enter
into
sar
and
js
scas
sub
cmp
jne
mov
dec
or
cmp
push
lods
scas
xor
imul
cmp
jo
sub
rcrb
xchg
decb
adc
mov
push
cmc
push
addr16
sub
add
mov
pop
cmpsl
dec
out
mov
jae
out
std
scas
scas
cmp
stos
in
jl
and
mov
jo
icebp
pop
pop
or
cmp
cltd
jbe
jns
pushf
je
rcrb
loopne
aam
cmpsl
mov
jb
and
repnz
insb
fcomps
insb
mov
fildl
pop
xchg
jmp
pop
push
xchg
fnsave
in
inc
add
test
push
mov
fstps
std
stc
jmp
iret
outsl
jb
movsb
loop
out
inc
push
fwait
cmp
push
xor
pop
jb
lods
adcb
pop
enter
ret
insb
push
xchg
mov
test
add
roll
loopne
popf
inc
pop
mov
iret
sbb
jg
stos
dec
adc
cmpsb
cmpsb
jle
idivb
pop
dec
lahf
bound
popf
push
xor
loopne
mov
stos
loop
mov
xor
leave
push
cmp
push
mov
aam
out
js
pop
fnstenv
fnstenv
lea
mov
shlb
stos
sbb
or
jl
or
xchg
sti
adc
mov
mov
sub
pop
inc
and
add
jl
xchg
add
cmp
xchg
test
clc
pop
scas
xchg
mov
lret
enter
lods
push
rorb
jmp
lds
push
push
scas
scas
sub
sbb
ja
pop
pop
and
jne
xchg
pusha
push
sub
scas
pop
aam
fs
sbb
dec
mulb
loope
daa
xchg
cli
mov
pop
movl
jb
ficoml
dec
mov
add
lcall
adc
push
jp
sahf
mov
enter
xor
push
shll
adc
outsl
sub
mov
xchg
subl
test
fsubs
dec
fwait
insl
jbe
daa
aam
fwait
mov
or
mov
or
jg
mov
mov
ret
xchg
adc
cwtl
mov
out
mov
cmpsb
sub
push
mov
and
aam
adc
aaa
sub
in
into
lods
icebp
pop
ret
sbb
repz
leave
pop
cld
out
adc
mov
call
sub
or
jne
testl
add
cmp
out
add
clc
gs
pop
push
ljmp
mov
mov
int
inc
js
mov
adc
and
ja
iret
adc
icebp
shl
pop
rolb
mov
lret
jecxz
int3
sub
xor
mov
lock
mov
std
mov
mov
pusha
cmpsl
jnp
insl
push
cld
rclb
ljmp
mov
and
and
jecxz
scas
ljmp
push
xchg
mov
xor
or
in
xor
mov
sahf
and
inc
bound
test
fcmovu
loope
mov
mov
leave
cmp
ljmp
icebp
jle
push
mov
cmpsb
push
cmp
cwtl
js
bound
sbb
clc
bound
push
enter
les
xchg
mov
lods
je
jl
fs
fistpll
decl
and
pop
mov
movsb
hlt
out
in
mov
jge
test
and
mov
icebp
in
push
dec
repnz
cs
lahf
ret
xchg
adc
inc
and
daa
fcomps
flds
push
inc
mov
adc
ljmp
xor
adc
jmp
pop
jne
jl
loop
int3
into
adc
push
xor
and
sub
or
decb
mov
insb
push
mov
dec
add
rclb
push
repnz
fcompl
adc
mov
xor
sub
lret
stos
aaa
sbbb
xlat
cmpsb
fadds
jo
mov
leave
ljmp
in
fwait
xchg
push
call
outsl
jle
inc
and
cmc
lret
les
jno
popf
xor
dec
cmc
rclb
xchg
inc
ss
js
jns
fstpl
inc
and
push
sub
stos
addr16
dec
xchg
clc
mov
test
or
je
dec
les
test
lcall
inc
jle
mov
xchg
frstor
xchg
mov
add
test
cwtl
out
mov
out
iret
std
repz
xor
dec
pusha
dec
inc
arpl
sbbb
adc
add
scas
outsl
inc
rorb
xchg
mov
into
xor
popf
lcall
lock
test
gs
jp
push
mov
and
in
cmp
sahf
pop
sub
subl
sub
sbb
hlt
lret
lea
testb
movsl
dec
jp
repnz
addb
movsb
shll
add
pop
sub
sti
mov
roll
imul
lods
push
cs
sub
and
xchg
add
jg
sbb
jmp
mov
or
inc
cmp
add
test
inc
out
mov
mov
int3
xchg
movsl
imul
ret
jp,pt
push
sub
pop
js
mov
push
jl
mov
sbbb
cmp
aaa
or
cmp
clc
imul
mov
outsb
cmp
push
push
clc
xlat
mov
mov
push
lods
in
sbb
ss
mov
rorl
outsl
sub
lahf
xor
or
aaa
mov
daa
xchg
lea
repz
and
mov
notl
inc
sbb
lret
or
lahf
mov
mov
inc
push
pop
dec
ja
and
jae
push
testl
jnp
ret
or
mov
mov
mov
and
mov
stc
jns
pop
xchg
xor
mov
inc
xchg
dec
cmp
fisubrl
mov
js
loopne
imul
xchg
cld
xchg
inc
ja
adc
inc
loopne
push
push
mov
jl
xor
shlb
outsl
jl
adc
mov
pop
cmpsb
jmp
outsb
pop
stos
push
aam
push
dec
out
rorb
bound
lret
xchg
mov
xor
cmp
mov
cld
xchg
mov
dec
xchg
cmp
jle
jmp
stc
fdivp
mov
imul
jg
lods
and
adc
and
mov
lcall
cld
addr16
in
push
jno
xchg
out
notl
lcall
cs
sub
flds
cmpsl
lret
or
scas
mov
insb
sahf
outsl
and
test
xor
scas
cmp
jle
xchg
sti
arpl
jno
xchg
repz
or
test
mov
xchg
add
mov
dec
pop
cwtl
pop
testb
lods
jge
repz
push
out
iret
fs
dec
imul
jnp,pn
sarb
adcb
push
pop
mov
flds
jb
sub
ret
cmp
and
adc
fucomi
lahf
repnz
jbe
lret
lret
mov
cmp
leave
lods
out
inc
add
jle
mov
test
stc
dec
js
adc
sub
push
and
fdivr
rclb
xchg
jnp
jnp
test
sbb
neg
fisubs
pop
pop
jmp
shll
out
push
test
dec
es
popa
pop
cmp
jl
push
push
ret
rcrb
jecxz
imul
or
mov
hlt
in
mov
cltd
fcmovu
test
data16
fs
adc
adc
shrl
adc
mov
cmpsb
push
jb
lods
and
nop
pop
sub
icebp
xor
inc
nop
sub
mov
stos
push
arpl
and
inc
nop
sub
out
mov
jne
call
xchg
outsb
xor
cld
lret
jp
mov
inc
cmp
pushf
or
std
xor
roll
jns
cmp
insl
popa
jno
call
mov
sbb
pop
imul
cli
aad
jp
les
inc
push
cmpsb
mov
mov
cmc
sub
std
add
aaa
pop
or
xchg
and
mov
xor
pushf
ret
in
mov
dec
dec
jmp
xor
mov
leave
lcall
mov
push
je
fnstsw
sahf
push
test
and
jo
int
and
in
pop
imul
lea
xchg
mov
pop
lds
jl
lcall
lret
mov
fcompl
inc
pusha
cs
add
and
int
push
loop
fs
ret
subb
loopne
and
mov
leave
sub
icebp
fmuls
cltd
movsb
jg
mov
mov
push
inc
fisttpl
add
out
popa
add
sar
sub
xlat
inc
mov
fildl
lret
add
test
xchg
ss
and
xchg
sbb
cmp
and
xchg
jb
jp
mov
iret
adc
aas
push
xchg
lods
lahf
dec
dec
ret
test
push
ds
popa
rol
aaa
mov
fs
add
lret
mov
jae
popf
adc
inc
int
xchg
js
data16
insl
mov
adc
jl
popl
and
ljmp
test
mov
push
sbb
pop
xchg
lods
shrl
xor
aaa
adc
imul
les
xor
mov
arpl
imulb
push
lea
popf
adc
push
adc
nop
or
sbb
xchg
adc
shlb
fwait
loope
mov
js
lds
add
push
add
enter
mov
ret
add
aaa
movl
jmp
inc
loopne
inc
enter
mov
imul
xor
xchg
movsb
loope
add
add
int3
xchg
cmpsl
and
xor
adc
mov
ja
hlt
dec
repnz
movl
aam
fs
xchg
testl
movsl
movsl
inc
arpl
cmpsb
fcmovbe
dec
xor
and
lea
add
mov
mov
movsl
fwait
outsl
ficoml
subl
push
or
cmpsb
cld
push
arpl
test
mov
sbb
ja
mov
and
jp
sub
push
subl
int3
pusha
jnp
adc
push
sbb
ja
cmp
pop
test
out
movsb
adc
in
faddl
sbbl
dec
xchg
popf
aaa
fistps
lods
loope
nop
xchg
and
cmc
jge
pop
sbb
mov
shll
mov
roll
mov
mov
movsl
xor
jbe
imul
jle
jns
mov
lock
mov
push
mov
out
pushf
inc
insb
repnz
push
xchg
lea
inc
les
push
jno
jge
cmpsb
fcompl
adc
sti
sbb
add
mov
pop
int
dec
rcll
or
mov
in
imul
call
aaa
es
daa
call
add
ljmp
pop
inc
push
fcomp
xor
inc
add
inc
mov
mov
xor
xor
add
adc
push
int
mov
stc
in
je
dec
into
pop
sub
ret
adcb
mov
mov
scas
movsl
push
ds
popa
adc
adc
in
or
mov
mov
and
ret
jo
adc
xchg
sub
inc
into
pushf
jg
mov
cmp
in
dec
sub
sbb
imulb
mov
dec
aad
mov
sti
lcall
mov
rcrb
sub
xchg
xor
jecxz
pop
push
mov
or
sub
sti
ss
dec
and
popf
shlb
leave
test
mov
lods
lahf
push
insl
aam
fmuls
sub
sub
cld
inc
into
out
outsl
mov
popf
fsts
and
xlat
push
mov
inc
mov
or
imul
outsl
ds
cmp
pop
xchg
mov
sti
scas
lods
pop
mov
fisttps
stos
jae
roll
shll
jae
jbe
inc
inc
ret
pop
int
popa
cmpl
pop
repnz
ja
jbe
je
das
push
mov
fmuls
lds
dec
bound
nop
fists
pop
lods
loope
out
push
xor
mov
ret
inc
out
jp
insl
cltd
inc
jnp
cmp
inc
lahf
fstpt
in
adc
test
lret
and
enter
mov
aaa
ret
or
ret
and
jmp
jle
jp
and
push
lds
gs
mov
inc
or
add
aam
xlat
enter
in
xchg
mov
fnsave
aas
lea
and
cmp
fmul
pop
inc
rcrb
lods
jo
loope
pop
sub
lret
roll
mov
add
loope
push
xor
jb
lret
rolb
adc
sbb
mov
xchg
jns
lods
or
daa
mov
popf
addb
sahf
arpl
ljmp
sub
jo
mov
enter
sub
xchg
pop
fldt
shr
xchg
push
filds
in
je
ss
cltd
dec
rol
push
test
xorb
sub
mov
pop
dec
aas
addr16
test
jo
adc
scas
and
push
shl
mov
rolb
das
mov
or
sub
adc
add
sbb
xor
sbb
out
or
lds
adc
xlat
cmp
adc
fcomps
jecxz
jp
in
ret
jecxz
mov
jmp
mov
or
sub
and
push
adc
aam
cmp
xlat
add
mov
fnstcw
add
daa
stc
andb
jle
loopne
mov
ret
clc
mov
in
and
inc
aas
cmp
insl
adc
cmpl
testb
xor
fadd
dec
scas
test
push
andl
clc
jns
mov
xor
test
pop
mov
aam
xchg
inc
xchg
out
xchg
scas
pop
std
inc
popf
cmp
fcomp
repz
push
stos
bound
dec
xorl
jecxz
jmp
or
xchg
push
sbb
fnsave
push
stos
iret
pop
jle
call
repnz
sub
jg
dec
movl
movsl
outsb
or
sbbb
fnstsw
xor
test
jmp
mov
inc
inc
push
setno
mov
jle
inc
mov
outsb
sbb
daa
inc
gs
aas
mov
dec
in
pop
or
mov
push
cmp
mov
cli
das
ret
cmp
mov
pop
cli
mov
in
fsubrl
addr16
jecxz
pop
adc
mov
add
adc
push
arpl
push
sub
sbb
push
js
fcoml
lahf
jno
xchg
fcomps
arpl
dec
daa
xchg
cld
mov
cmp
int3
pop
sbb
xchg
adc
dec
sub
pushw
add
push
cmp
cmp
or
fadds
in
jge
mov
insb
clc
pop
fsubrs
aam
dec
xor
xchg
movsb
mov
and
xchg
jmp
inc
imul
xchg
in
pop
lcall
mov
push
hlt
fimuls
popa
aaa
mov
sbb
test
mov
xchg
dec
dec
pop
sbb
xchg
lea
ja
out
mov
rcll
outsb
dec
je
xchg
repnz
movb
mov
repz
pusha
or
pop
pop
inc
adc
outsb
mov
push
mov
adc
hlt
scas
pusha
out
mov
cmpsl
xchg
into
sub
nop
or
sub
fldenv
mov
xchg
pop
fbld
icebp
iret
jno
les
cmpl
sbb
insl
xchg
test
sub
cmpsl
lret
jp
out
add
cmp
bound
xor
nop
or
inc
dec
mov
pop
in
dec
daa
sti
jno
frstpm(287
xchg
and
fsts
pushl
loope
jnp
mov
mov
movsl
and
dec
cmp
adc
mov
sbb
outsb
mov
inc
fmul
fwait
cmpb
arpl
jno
lock
pop
xchg
jle
xorl
jge
xor
mov
cmpsb
adc
adc
sub
cltd
cli
cmpb
mov
xor
mov
int
sbb
mov
cli
pusha
lock
adc
cmpsl
imul
and
push
sbb
mov
mov
and
dec
pop
and
aam
adc
repnz
in
adc
test
or
sbb
mov
sbb
mov
adcl
inc
in
repz
jl
gs
cmp
mov
sub
loope
out
add
gs
add
xor
xor
push
adc
cmpb
enter
data16
addr16
xor
cmp
pop
daa
mov
imul
jo
iret
enter
jecxz
pop
xchg
or
or
es
nop
lahf
sub
pop
dec
inc
fistps
adc
cmp
call
cmpsb
sub
in
popa
outsb
cs
cmpsl
movsb
adc
adc
push
mov
pop
pop
stos
add
cld
jecxz
call
add
jl
rcrl
lahf
int
sub
push
fbstp
pop
jmp
lret
call
push
jne
repnz
pop
out
pop
in
jne
mov
mov
xchg
std
mov
cwtl
mov
inc
jge
cmc
add
test
push
or
add
or
mov
push
dec
jp
adcb
movsb
xor
pop
lock
push
sub
fildl
cmp
mov
fs
sarl
fwait
jg
pop
call
xchg
and
lds
mov
cs
adc
sub
mov
jl
outsl
cmc
or
das
out
pop
xchg
xor
stc
xlat
popf
insl
cmp
xor
ja
cli
adc
out
or
xor
ljmp
cmpsl
out
into
repnz
shlb
nop
ljmp
dec
add
adc
popa
pop
fucomp
cltd
test
xchg
pop
xchg
ror
jg
clc
ret
dec
iret
ficoml
cmp
mov
jge
jnp
xor
push
jne
hlt
add
add
push
adc
inc
int
sbbl
push
ret
insl
fwait
adc
mov
jns
shl
and
arpl
mov
dec
aaa
cmp
hlt
scas
sarb
jno
or
cmp
adc
mov
pop
jle
jmp
shufps
js
rcll
inc
jg
ss
push
in
adc
pusha
or
sub
js
sub
inc
movsb
or
lea
jmp
out
mov
mov
inc
fidivs
or
xor
adc
cmp
or
out
jl
jne
out
lea
cmpsl
loopne
or
push
cmp
out
cmp
and
or
push
dec
loopne
popa
jbe
stos
sahf
jl
jmp
jg
outsb
clc
lock
cmp
jae
fnsave
pop
mull
xchg
ret
mov
repnz
add
pop
inc
or
lock
test
pusha
inc
jo
jecxz
xor
int
jle
or
add
sbb
pop
add
push
aaa
xor
sbb
test
push
mull
mov
xchg
test
inc
sti
and
jbe
ror
mov
aaa
dec
enter
aas
ljmpw
push
mov
test
test
or
enter
mov
dec
aaa
xchg
subb
cmp
fnstsw
outsl
xlat
push
lcall
inc
push
je
lahf
xor
iret
push
dec
mov
xorb
out
cmpsl
jo
mov
cmc
bound
add
sbb
dec
fildl
sbbl
dec
adc
mov
dec
test
aam
inc
pushf
int3
mov
cmp
push
frstor
cmpsl
push
mov
rorb
aad
jb
movsb
call
hlt
stc
cmp
fdivrs
add
add
sub
cmp
sub
call
and
ss
out
jl
fcmovb
addr16
cld
sahf
cmpsb
stos
aad
mov
rcrl
jbe
in
or
jmp
fdivrs
mov
sub
dec
inc
and
or
pop
scas
sbb
sbb
and
pop
cltd
push
idivb
push
test
ret
out
clc
pop
or
xchg
and
faddl
notl
adc
mov
das
insl
and
add
sbb
pop
or
inc
mov
fs
test
lea
in
xor
loope
push
adc
jl
ffree
xchg
sub
cmp
enter
add
aad
xchg
aad
jns
int3
imul
jae
jl
inc
pop
jnp
mov
and
lahf
daa
and
sub
xchg
mov
inc
xchg
subl
lods
insb
or
mov
insl
jmp
sub
pusha
ljmp
lea
mov
jae
dec
xchg
loopne
test
xor
std
std
and
jecxz
shr
icebp
iret
imul
xchg
mov
push
ss
arpl
call
lcall
dec
pusha
lret
out
pushf
shlb
fld
orb
arpl
mov
xchg
mov
inc
pusha
xchg
test
in
xchg
pop
int
gs
fxch
jb
stos
out
es
jmp
mov
sbb
sbb
js
jbe
push
movsl
lods
push
flds
leave
dec
push
aam
xor
jge
pop
fnstsw
adc
xchg
shr
scas
dec
jno
inc
es
inc
inc
jb
fmull
pusha
in
mov
mov
call
jmp
xchg
lret
xchg
add
stos
call
mov
mov
xorl
arpl
aad
push
xchg
xchg
xchg
pop
mov
mov
sub
lcall
js
addr16
fistl
inc
iret
std
test
lahf
cmp
jno
inc
sub
aas
int3
js
mov
test
fisubrs
mov
jne
loop
scas
in
mov
add
scas
icebp
add
lock
pop
cmpsl
xchg
adc
cltd
inc
sub
sahf
dec
lret
lds
dec
add
in
arpl
xlat
xlat
mov
cmp
int
jle
dec
outsl
sahf
test
test
ret
lcall
lock
cmp
inc
xchg
fnsave
or
inc
pusha
dec
fwait
jg
iret
xchg
popa
xchg
mov
xor
sbb
frstor
xlat
xchg
lods
mov
fisttpll
mov
lret
add
pop
movsb
rclb
andl
mov
mov
insl
dec
lret
add
mov
inc
inc
push
add
enter
mov
scas
fwait
test
test
jecxz
stc
pop
xorb
jge
xchg
xlat
sub
stc
icebp
lods
loope
addr16
and
push
push
lahf
rcrb
test
cmc
sub
sar
je
jo
scas
je
shll
inc
push
test
adc
mov
stos
gs
mov
pop
add
push
pop
sbb
daa
push
movsb
ljmp
xchg
push
shll
push
jo
cmp
add
cmc
push
fwait
popa
mov
or
sbb
jbe
imul
out
xchg
sbb
shll
fdivs
pop
pop
rcl
ret
sub
pop
cmpsl
push
cmp
call
xchg
fnstsw
test
dec
xchg
int
popl
xor
movsl
push
sub
out
stc
jns
sarb
sub
inc
mov
and
jmp
mov
iret
jmp
mov
add
add
sbb
sub
imul
loopne
dec
pop
mov
jl
div
pop
sbbb
pop
jg
inc
test
in
dec
out
movaps
icebp
push
mov
or
scas
adc
lods
mov
es
das
mov
mov
pop
fwait
add
push
scas
mov
repz
or
and
pop
insl
pop
xchg
xchg
adc
pop
dec
adc
xor
outsl
daa
enter
adc
in
sbb
out
jae
leave
rcrl
pop
push
fiaddl
mov
shll
push
std
jp
or
push
ret
bound
jle
mov
imul
pop
cmpsl
mov
mov
out
fmuls
movsl
or
xchg
mul
jnp
jae
push
popa
popa
in
cmp
mov
es
pop
out
xor
sub
and
lods
and
xor
and
xchg
stos
shlb
imul
mov
enter
mov
or
jecxz
mov
lds
jae
mov
rcrl
pusha
xchg
inc
icebp
rorl
repz
in
jg
cmp
add
out
or
lock
test
test
icebp
mov
ret
subl
dec
cmc
ret
and
dec
pop
out
xor
add
and
mov
les
cs
scas
cwtl
ds
loop
rcrb
mov
add
and
fistps
std
aaa
and
ljmp
pushf
jecxz
rolb
sarb
sbb
cmp
adc
stc
lods
lods
pop
int
pushf
rcll
cltd
sahf
rorb
ljmp
insl
mov
call
jb
xor
pop
out
jno
adc
inc
dec
dec
cmp
pop
and
mov
cmp
pop
push
add
stos
ds
test
scas
jno
mov
xlat
mov
dec
lret
xor
pop
mov
and
sbb
in
outsb
ljmp
xor
sub
testl
dec
ds
lcall
dec
push
cld
lock
adc
add
cmpsl
orb
cmp
or
rol
fimuls
es
mov
adc
jge
stos
sbb
insb
dec
icebp
mov
addl
in
inc
add
cmpsl
inc
sbb
pop
push
xchg
push
xor
xor
inc
jecxz
pop
pop
rolb
xchg
call
jge
fs
dec
and
clc
sub
mov
or
sbb
pushf
sbb
dec
xchg
stos
add
repz
leave
test
or
gs
mov
sub
lcall
jnp
jo
add
adc
loope
ja
adc
dec
rolb
fnstenv
jb
fcmovnb
mov
les
jns
adc
inc
pop
cmpsb
dec
xchg
out
adc
jle
or
xor
jmp
int3
or
jbe
orb
stos
cmp
dec
mov
sti
pop
and
jecxz
aaa
int3
push
repnz
sti
mov
cmp
scas
cmc
js
icebp
mov
jno
ja
dec
xor
mov
jmp
mov
ficomps
push
sbb
mov
sbb
mov
mov
mov
mov
and
adc
push
push
xchg
xlat
fisubs
loop
stos
iret
add
jp
pop
repz
jl
aam
pop
into
inc
mov
scas
mov
arpl
jl
xchg
xchg
mov
cmc
sbb
lea
int
scas
leave
inc
popf
sub
in
mov
aas
jne
add
jmp
xchg
or
add
int3
jne
pop
and
xor
ja
or
push
xor
mov
xchg
dec
push
das
lea
daa
push
popf
cmpsl
in
mov
xlat
mov
xchg
loopne
sub
ret
outsb
jne
or
jnp
loope
mov
add
dec
mov
scas
ret
in
xor
and
repnz
lret
rclb
dec
test
aad
sahf
add
sbb
and
and
or
lods
rcrl
push
mov
xchg
aad
adcb
cmp
sbb
pop
cmpsl
pop
in
lods
dec
jecxz
aaa
aam
mov
push
cmp
mov
lock
pop
into
sbb
dec
mov
sbb
and
or
movsl
enter
cmpsb
xor
nop
xchg
add
add
add
or
movsl
push
mov
jb
inc
jmp
jbe
sti
mov
nop
out
out
xchg
inc
cmp
mov
pusha
xor
pop
aam
aam
out
jle
cli
aas
movsb
xchg
pushf
lret
stc
inc
cmpsb
ljmp
loope
roll
adc
ss
push
cmp
or
out
into
jmp
cmp
jo
jge
loope
mov
stos
push
arpl
insl
sbbb
repz
pop
shll
sub
cs
add
jecxz
lahf
or
xlat
xchg
lret
dec
push
inc
push
rclb
sub
dec
es
inc
out
mov
cmp
pop
lcall
repnz
hlt
lret
xchg
int3
cmc
out
push
das
sub
push
jb
jb
pop
inc
fdivs
add
outsb
mov
leave
inc
push
cld
mov
adc
out
cmc
push
cmpsb
push
add
or
sbb
jecxz
xlat
xchg
dec
jp
outsl
sahf
xor
inc
fisubrs
jp
sbb
in
movsb
pop
mov
shlb
les
in
dec
rcll
and
fisubrs
fisubs
mov
mov
dec
jl
jbe
shrl
mov
pop
test
das
mov
leave
push
cli
push
leave
movsb
outsb
dec
insb
sbb
out
pusha
test
cltd
enter
push
xor
and
xor
cwtl
adc
int3
inc
adc
in
add
add
sbbb
in
enter
flds
sbb
dec
into
push
js
stos
jge
jnp
pop
dec
dec
push
dec
jmp
jno
arpl
push
or
jae
test
cwtl
arpl
mov
or
aam
repz
and
dec
mov
scas
inc
loop
xchg
test
mov
fisubrs
push
testl
scas
sbb
xor
jmp
sub
or
pop
xorl
addr16
mov
out
leave
stc
push
xchg
in
out
xchg
fstps
push
fadd
sbb
and
out
cmc
ja
mov
jge
imul
aad
pop
lcall
nop
daa
icebp
fbld
pop
dec
repnz
dec
int
lods
dec
dec
lods
mov
orb
daa
xor
imul
push
dec
jb
mov
jmp
jbe
loop
es
pushf
lret
lea
add
cmp
xchg
ret
mov
mov
push
or
pop
or
js
aas
int3
ss
out
mov
lods
andl
mov
adc
cmpsl
push
lea
cmp
int
cli
jae
jne
ret
jg
add
add
push
in
gs
mov
repz
lock
mov
add
or
test
ret
icebp
inc
xor
lret
je
nop
rcrb
xor
arpl
lea
pop
pop
fwait
sub
lock
iret
sbb
and
fiaddl
push
pop
xchg
sub
icebp
mov
inc
shlb
iret
outsl
idiv
inc
scas
es
and
bound
inc
inc
dec
xchg
in
ds
test
xor
fimuls
mov
stc
cld
movsb
pop
shl
push
push
arpl
dec
push
sbbb
cmpsl
mov
sub
sti
iret
cmpsl
leave
stc
pop
ret
sub
loope
push
pop
je
mov
jp
cmp
dec
cmp
dec
mov
push
sub
iret
mov
gs
mov
mov
mov
xchg
int
pop
sub
jb
popf
and
mov
popf
add
cmp
fwait
inc
popf
out
sbb
cmp
or
dec
push
mov
mov
adc
xlat
in
subl
push
mov
and
push
push
jg
hlt
test
or
push
imul
sub
inc
add
notl
adcb
gs
pop
out
hlt
roll
mov
in
jmp
test
mov
roll
movsb
mov
pusha
sbb
cmp
jo
or
iret
jne
in
xchg
jmp
sub
pop
push
scas
xor
jmp
pop
adc
sub
cmp
test
jb
testb
lds
inc
lcall
push
add
insl
sub
das
mov
pop
dec
cmp
sub
lcall
mov
rcl
cmp
aaa
xchg
inc
outsl
clc
in
popf
pop
xchg
xchg
sahf
ja
popa
dec
and
inc
mov
inc
pop
lcall
dec
pop
scas
movsl
fsub
push
cwtl
sub
test
cmpsw
fisttpll
and
shll
rcrb
push
aad
ret
lret
les
call
dec
daa
aam
xchg
aas
cmp
pop
jne
or
or
shlb
push
mov
int3
push
idivl
fmulp
scas
mov
sbb
jne
and
test
stos
clc
dec
push
ds
insl
out
movsl
movsb
push
and
addl
cmpb
adc
jb
jb
push
push
ret
jo
movsb
add
lods
notl
jp
sub
adcl
fdivr
ret
mov
jb
sub
repnz
xor
arpl
mov
dec
addb
dec
xorb
sbb
adc
and
pop
xbegin
cmp
sub
xor
push
scas
ja
sahf
stos
add
pop
adc
stos
add
aas
cmp
dec
jmp
pop
mov
fs
fisubrl
dec
imul
jae
jno
ljmp
sarb
nop
mov
mov
shrb
jnp
movsb
mov
add
mov
mov
mov
icebp
inc
pop
rcll
or
into
test
sbb
sub
cld
push
or
test
sub
xchg
jo
pop
arpl
stos
push
imul
dec
jl
mov
mov
cmp
scas
sub
inc
ret
mov
cmp
lods
lods
mov
test
mov
xor
pop
flds
repnz
mov
loopne
cmp
add
mov
dec
fimuls
leave
movsb
push
jle
popa
xchg
adc
or
jmp
insb
mov
sti
sbb
icebp
sti
stos
push
sub
je
insb
cmpsb
repz
mov
inc
ljmp
adc
lahf
fcomp
cmp
xchg
jle
aas
lods
lds
imul
inc
rcrb
xchg
jbe
inc
lds
arpl
repnz
aad
movsb
ret
jb
jns
repnz
mov
aaa
js
fcompl
jb
scas
imul
stos
jmp
rcll
or
xchg
imul
shlb
fcomps
inc
or
in
jb
addr16
ret
in
xchg
sti
daa
jo
imul
jge
dec
dec
fistpl
dec
or
test
lahf
pop
arpl
dec
mov
mov
mov
and
inc
stc
sub
enter
cmc
add
inc
popf
andb
or
mov
dec
test
mov
rcl
lahf
sbbb
xchg
mov
sahf
and
xor
stos
mov
sahf
mov
in
cmp
pop
xchg
push
fidivrl
xor
adc
imul
sbb
roll
inc
inc
sub
stos
push
xchg
out
mov
shrl
daa
out
pop
and
adc
xor
out
jmp
fisttps
inc
in
push
cld
jno
inc
int
push
jnp
jb
stc
repnz
pop
and
decb
lahf
inc
mov
inc
andb
out
hlt
mov
pop
and
incl
sahf
pop
iret
jbe
inc
ljmp
in
jnp
cmp
dec
mov
and
jmp
sub
scas
mov
xchg
dec
sar
in
mov
fs
les
fnstenv
add
cltd
or
cwtl
xchg
mov
out
cmp
jne
in
dec
xchg
dec
repz
xchg
shlb
mov
dec
dec
hlt
push
stc
clc
scas
mov
inc
mov
pop
push
mov
fs
and
jne
xchg
fmul
add
xorl
jmp
adc
dec
sbb
xor
orl
add
fisubl
mov
or
jmp
mov
lahf
icebp
push
cli
out
xchg
adc
shrl
sub
pushf
std
pop
inc
or
into
sub
mov
mov
cmp
xorl
sbb
push
push
in
or
pop
iret
and
cs
ljmp
test
int
inc
popa
aaa
popa
stos
mov
jp
dec
aas
xchg
or
pop
mov
jno
and
push
psrlw
and
in
mov
lock
jo
ffreep
pop
jmp
or
push
montmul
cmpsb
xchg
pop
sbbl
ret
scas
dec
rcrl
mov
pop
xchg
xchg
lret
call
rcr
jge
or
mov
in
cmp
in
push
inc
pop
inc
faddp
lea
mov
aad
clc
std
and
lcall
adc
adc
dec
loop
out
mov
mov
lods
icebp
inc
imul
dec
mov
adc
cmp
lods
sub
sbb
icebp
cmp
mov
enter
add
add
add
lret
cmp
loop
repz
mov
hlt
fldenv
sbb
push
xchg
into
and
pop
push
dec
lea
mov
bnd
mov
int
push
sbb
xchg
sbb
in
out
adc
pop
mov
lahf
xchg
mov
push
inc
out
sahf
movsb
popf
cmp
mov
orl
rcr
aaa
loope
aas
adc
mov
aam
aas
pop
sbb
test
xsha1
cmpsb
dec
push
jmp
inc
in
pop
icebp
dec
mov
jno
push
add
jno
push
jge
or
mov
stos
fadds
cmp
mov
mov
push
xchg
jmp
cltd
rorb
mov
lcall
frstor
ret
cmp
or
mov
mov
add
and
lcall
dec
cltd
or
or
int
mov
sub
shll
fisttpl
rorb
jmp
iret
loop
and
jmp
mov
in
pushl
inc
mov
add
mov
mov
arpl
dec
jb,pt
and
cmpps
sbb
lea
or
fnsave
and
jnp
mov
jge
push
inc
into
aaa
mov
jbe
orl
inc
incl
loopne
ss
xor
mov
cmp
rorl
pop
sub
ja
push
xor
dec
or
mov
jl
inc
cmp
push
or
cmp
test
out
xchg
add
dec
xchg
mov
jnp
mov
or
pop
rorb
inc
out
add
testl
fwait
or
leave
pop
inc
mov
or
das
in
pop
sbb
adc
pop
push
xchg
mov
mov
mov
push
pop
jge
jne
mov
mov
cmc
sub
dec
in
dec
jl
jo
xchg
xchg
hlt
jg
test
test
mov
stos
rcrb
mov
in
mov
stos
out
jnp
cld
mov
lods
push
jmp
sbb
and
mov
icebp
inc
cmp
movsb
fistps
sub
mov
mov
das
outsl
fisttpll
lcall
cwtl
and
out
js
lods
enter
pop
xchg
dec
pusha
adc
sbb
push
int3
mov
mov
inc
push
mov
pop
andb
sti
xchg
cmp
push
or
iret
inc
sub
popa
repz
jl
ds
or
sti
pushf
xchg
loope
popa
adc
cld
jns
dec
mov
shld
ds
icebp
mov
cmp
ljmp
inc
in
addl
addr16
adc
mov
pop
aas
nopl
jecxz
ret
push
push
dec
mov
push
add
and
adc
pop
or
cwtl
test
cmp
mov
pop
xor
int
daa
aaa
addr16
or
es
sbb
inc
rorl
in
insb
pop
inc
lods
dec
mov
shll
push
and
and
repnz
and
std
test
mov
or
mov
mov
or
mov
pop
jl
sbb
cmc
xchg
inc
adc
popa
xchg
cs
scas
push
in
xor
test
les
test
in
sbb
aaa
sbb
xor
sahf
adc
mov
mov
stos
xchg
call
add
jbe
mov
std
xchg
inc
int
out
lea
into
inc
ljmp
xchg
or
shll
cli
mov
sbb
out
int3
xchg
adc
push
gs
loope
into
xchg
jo
pop
pusha
ds
jg
pushf
mov
aas
sbb
or
jo
add
gs
cld
arpl
mov
adc
insl
xor
xchg
loop
pop
test
or
in
and
jp
fsts
jle
mov
repnz
ret
add
pusha
add
mov
mov
pop
cmp
mov
rcl
pushf
jg
loope
bound
sarl
xchg
jp
std
fsubrs
push
jl
cmc
int
out
push
arpl
push
jne
test
sbb
or
add
jle
cld
int3
pop
lcall
xor
fstps
fcomip
cmp
jecxz
inc
pop
adc
mov
cmp
in
negb
cs
int
cli
lahf
pop
ljmp
add
fsub
inc
stos
popa
pop
xlat
icebp
mov
enter
and
adc
jb
xor
aaa
add
mov
repz
dec
xlat
cmp
inc
out
mov
xchg
dec
xlat
insl
loop
pop
mov
daa
data16
cs
fwait
push
jo
mov
popf
das
jo
test
xchg
adc
fwait
xor
push
sub
mov
pop
in
mov
and
pop
and
pop
jns
stos
dec
je
leave
outsb
ja
das
lea
push
pop
loopne
sar
test
test
out
xchg
mov
jae
sbb
popa
fwait
call
out
hlt
and
xchg
lahf
jb
jns
imul
xor
and
lahf
push
pop
push
outsl
cmp
inc
sub
ret
aas
pop
test
sbb
mov
lods
xor
mov
lods
int3
cmp
aas
nop
not
bound
and
add
xor
add
std
fidivrs
adc
jne
outsb
repnz
push
std
nop
sbb
push
lock
push
pop
cld
add
insl
mov
mov
mov
and
xor
fstps
mov
jle
outsl
out
mov
push
nop
stos
push
aas
mov
lahf
stos
jmp
push
dec
lret
test
push
mov
inc
orb
rep
cld
enter
sub
ret
xchg
mov
je
sbb
fmul
mov
mov
sbb
lods
lods
fcoml
mov
inc
iret
sub
js
test
rclb
icebp
outsl
dec
ret
dec
mov
cmp
es
lea
dec
lods
jp
fisttps
imul
adc
jle
cmp
and
pop
sub
mov
cltd
loop
out
add
xor
dec
icebp
cmp
aas
cmpsl
mov
fdivrs
mov
popf
jg
mov
xchg
lcall
mov
cmp
inc
mov
test
adcb
cmp
ja
cmp
jge
xchg
js
mov
xchg
xchg
mov
sbb
xchg
daa
mov
lret
cmp
iret
scas
add
sbb
lret
std
push
ret
push
test
pop
pop
mov
dec
jbe
pop
mov
sti
mov
clc
and
sti
dec
inc
fidivrs
xchg
push
inc
pusha
inc
xchg
jge
cmp
mov
arpl
and
loope
adc
add
mov
movsb
aad
es
rclb
xor
arpl
or
std
pop
or
enter
aas
cmpsl
inc
dec
add
and
push
ret
fmul
mov
pop
push
jb
push
mov
mov
icebp
mov
xchg
jge
sbb
lcall
push
or
fisubrl
xchg
xor
pop
out
mov
fiadds
jecxz
fs
lods
lods
push
lret
ss
aad
sub
dec
scas
clc
jnp
sbb
add
mov
xchg
dec
dec
cmp
jmp
sub
fldl
call
dec
add
jp
inc
mov
stc
jecxz
loope
and
sbb
fimull
ss
out
ja
call
pop
gs
mov
dec
sbb
mov
loop
xor
push
ret
notl
fdiv
xchg
mov
cltd
mov
mov
sti
mul
iret
jmp
ds
testl
sub
add
adc
les
push
xchg
sbb
cmc
jl
xchg
push
in
sub
push
aam
lcall
cmc
mov
inc
int3
cmp
and
fmull
adc
add
mov
lea
pop
dec
in
test
mov
mov
decl
insb
push
and
outsl
xor
sub
push
int3
push
jnp
pop
push
pushf
or
xor
pop
movsl
adc
pop
cmpsl
scas
aam
mov
pop
popa
adc
cmp
mov
shll
xor
fs
pop
out
cmc
movsl
enter
dec
adc
cmp
dec
ja
out
jle
and
andl
scas
mov
inc
pop
xchg
add
inc
xor
dec
fsts
pop
mov
fidivl
mov
jl
pushf
xor
cli
or
adc
or
sbb
and
iret
adc
in
cli
jge
sbb
sbb
pop
inc
pop
push
xlat
jnp
and
mov
push
out
jmp
test
pop
sti
cmp
add
les
pop
jns
xlat
mov
jo
sub
lahf
xor
xor
jle
repz
adc
push
ret
add
clc
scas
jmp
sub
in
jnp
call
cld
adc
inc
lds
cs
test
sub
cwtl
out
rclb
js
dec
push
push
add
pusha
inc
sbb
jb
sub
out
lcall
aad
shll
sub
ds
xor
xchg
ljmp
leave
or
lock
fcoml
insl
push
adc
mov
push
inc
pop
hlt
lcall
jge
inc
sbb
or
fildll
out
pop
jae
das
into
jg
sarb
xchg
pop
pop
or
loope
mov
mov
adc
popf
push
xor
out
push
push
pop
flds
out
lods
outsl
push
or
popf
arpl
enter
push
pop
sbb
push
push
imul
sti
in
jne
aaa
aad
mov
nop
aad
outsl
pusha
cwtl
push
rcrl
or
add
dec
fxch
sbb
dec
lret
sbb
sbb
mov
sub
adc
or
daa
out
lods
sbb
sub
xor
sar
das
dec
popa
test
shrl
fcoml
adc
mov
popf
push
rcr
adc
fs
cmp
insl
jno
xor
mov
rorl
in
pop
adc
ds
lwpval
icebp
jns
xor
adc
clc
pusha
pop
insb
fsubl
mov
testl
mov
in
pop
push
add
xor
pop
or
push
repz
adc
push
xchg
in
push
mov
lods
repnz
popa
cmp
and
repz
push
shll
je
cmc
add
arpl
sbb
push
cli
test
in
push
bound
mov
aaa
ret
pop
lea
stc
lret
jl
aad
in
subl
outsl
daa
sti
jne
popl
mov
and
out
push
sti
cmp
out
adc
jmp
sahf
popa
stos
xor
pop
cmc
loope
lcall
pop
pop
jmp
and
iret
pushf
jge
popf
jg
xchg
inc
and
xchg
shlb
cld
loop
pop
add
sub
jp
insl
pop
mov
and
ljmp
jns
scas
push
cmpsl
lock
and
sub
mov
jecxz
rclb
inc
gs
ja
rol
ja
jl
adc
imul
fdivrp
sti
sub
lock
dec
stos
movsb
repz
lcall
jns
inc
or
add
xor
test
out
pop
dec
mov
out
inc
cmp
ret
in
pop
xchg
jo
xor
sbb
pop
cld
int
sbb
jmp
mov
outsl
push
dec
test
cmpsl
popf
movswl
xchg
lret
inc
pop
addr16
xchg
int
aaa
fsub
aad
inc
xchg
inc
dec
lods
shrl
enter
enter
mov
xchg
adc
xchg
dec
out
sub
inc
jne
fs
mov
outsb
jae
outsb
jecxz
add
pop
cmc
dec
mov
push
pushf
rorb
inc
push
andb
sbb
cmpsb
fldt
jae
jge
pop
fmull
loop
clc
pop
jge
test
adc
add
inc
aas
movsb
sub
fsubrl
std
bound
add
or
add
pop
cmp
iret
sti
rcll
loop
mov
mov
std
xor
cmp
inc
jl
clc
ret
sbb
push
pop
test
xorb
lods
xorl
imul
cmp
push
dec
mov
clc
sahf
add
sub
gs
cmp
les
fdivl
cs
pusha
push
pop
clc
add
repnz
lcall
ljmp
lea
imull
cli
stos
and
lea
stos
leave
test
sub
mov
mov
mov
pusha
inc
dec
fcomi
or
and
push
int
fimuls
mov
je
int
mov
push
insl
cmp
loope
sub
orl
sti
jl
sub
and
je
out
pop
xchg
aas
sbb
jns
dec
shll
cmp
or
sbb
xor
push
sbbb
out
movsl
mov
icebp
jno
add
movsb
cs
or
xchg
lds
dec
jl
cmp
cs
rolb
xchg
push
mov
in
xor
or
fstl
loopne
pusha
inc
loope
xlat
jle
out
in
leave
ljmp
inc
push
cs
push
lret
dec
lock
lahf
insl
xor
lret
hlt
jo
icebp
jno
jp
inc
xorb
cmp
cs
sub
inc
fbld
or
fsts
mov
xor
pop
out
roll
mov
cmpsb
mov
popa
subb
add
push
and
div
lods
cmp
xchg
es
lret
shlb
add
sub
or
cs
inc
pop
mov
sti
and
mov
sbb
sub
xchg
fdivp
jl
dec
aad
cltd
loop
bound
imul
ljmp
fimull
lock
add
inc
jae
mov
data16
addr16
jecxz
cmp
fbld
and
add
jge
ret
shlb
pushf
cmp
cs
add
sub
push
adc
and
dec
or
insb
inc
jno
lret
jl
rol
mov
xchg
rcll
sahf
stos
or
daa
ljmp
es
mov
jp
jecxz
test
pop
popf
std
lock
rolb
roll
push
mov
inc
sbb
mov
mov
jbe
add
add
pushf
ret
popf
sarl
imul
jge
lock
and
jg
pop
int3
lds
jmp
or
xchg
pop
imul
mov
fchs
jp
ds
enter
mov
lea
lret
push
push
test
mov
cwtl
mov
stc
pop
test
ret
lock
fwait
in
mov
and
mull
xchg
push
hlt
mov
jb
fiaddl
mov
cmpsb
sub
and
movb
adc
mov
pushf
out
xor
adc
cwtl
gs
mov
les
js
inc
jb
adc
lods
mov
icebp
ret
shlb
xor
lods
in
js
call
rolb
push
mov
mov
insl
sbb
jo
mov
xor
lods
dec
push
xor
mov
iret
jb
cltd
sub
pop
pop
nopl
ss
inc
in
sti
ror
pop
into
aad
mov
sti
aas
gs
dec
stos
in
movsl
inc
pusha
and
fchs
mov
inc
pop
fwait
popf
add
mov
jmp
push
lcall
loopne
push
pop
xchg
push
add
xor
ds
js
mov
add
push
cmpsb
mov
inc
push
nop
icebp
sbb
aad
test
std
push
xchg
push
jl
inc
pop
les
push
and
xchg
test
inc
shll
inc
jno
ret
rcrb
mov
test
sub
andl
into
out
es
pop
pusha
xchg
push
push
sub
xor
jb
mov
mov
jbe
mov
in
and
add
inc
push
cli
mov
mov
add
xor
cmp
dec
mov
negl
jae
pop
addr16
pusha
xor
or
ja
fimuls
adc
sbbb
adc
fiaddl
pop
jecxz
test
ret
les
inc
mov
mov
cli
push
shufps
mov
adc
jae
hlt
cli
clc
arpl
dec
ja
scas
jmp
mov
imul
fldl
pop
iret
mov
insl
xor
sub
push
sub
sti
addb
inc
push
add
icebp
jno
lret
lret
xchg
fisubrs
pop
adc
addr16
mov
lret
xchg
filds
add
out
jns
shl
fsubs
push
pusha
inc
jo
add
fmulp
lcall
mov
dec
cmp
xor
data16
mov
mov
add
addb
adc
pop
ret
jle
adc
jle
movsb
xchg
movsl
test
fcmovnb
sbb
into
mov
xchg
fbld
negl
pushf
jecxz
xlat
sbb
cmp
cmp
mov
hlt
push
push
add
mov
cmpl
push
xchg
dec
sub
popf
ret
jp
push
adc
mov
test
dec
fcoml
fdivrs
out
mov
loope
mov
out
jmp
dec
loopne
inc
mov
lahf
inc
mov
pause
movsl
adc
popa
pop
mov
lret
jbe
outsl
call
push
cmc
adc
add
add
adc
push
int
dec
fs
adc
jl
outsb
mov
xchg
push
mov
sbb
pop
or
jle
aam
mov
les
out
jo
mov
in
roll
cwtl
lahf
aaa
inc
mov
subb
push
mov
jb
popa
cs
jmp
sub
cltd
inc
mov
scas
test
lahf
dec
mov
or
dec
test
rolb
adc
push
pop
out
cld
lahf
stos
in
iret
cmp
mov
mov
cmp
bound
jg
mov
sahf
mov
mov
cmp
daa
push
mov
data16
jmp
adc
mov
hlt
fnsave
and
jb
sti
mov
dec
xchg
repz
jnp
jle
inc
sub
loopne
xor
das
insb
pop
inc
inc
mov
jb
fistpll
mov
mov
rclb
mov
ss
addr16
scas
icebp
sub
jg
stos
inc
mov
not
pop
cmp
out
lcall
mov
ja
les
hlt
sbb
aam
xchg
jge
popa
in
jle
popf
or
add
jg
sti
fdivp
sub
push
stos
imul
sbb
xchg
xchg
rorb
xor
loope
xchg
inc
sub
gs
mov
mov
xchg
dec
scas
test
ficoms
cs
fs
jecxz
push
and
dec
in
pop
mov
mov
mov
add
jecxz
nop
push
iret
adc
repnz
stc
sti
rcll
insb
pushl
dec
add
sbb
outsl
dec
cmpsb
mov
fwait
test
stos
lahf
or
xchg
mov
es
in
push
enter
inc
jmp
xor
jecxz
cmp
pop
aad
inc
cmp
push
lods
fistl
jge
lea
dec
inc
or
jg
aad
test
imul
fistpl
and
add
jmp
mov
push
aad
sti
les
rcl
jbe
cmp
mov
mov
data16
addr16
mov
pop
jnp
jg
nop
sbb
mov
push
push
inc
stos
inc
rolb
mov
test
movsb
adc
out
popf
iret
mov
and
sbb
sbb
lods
sbb
out
fisubl
push
jne
ret
stos
or
fstl
lahf
xor
sbb
cmp
xor
xor
outsb
ret
cli
jl
imul
addl
aam
pop
loope
fwait
rcr
shlb
xor
and
jl
repz
sbb
or
out
jecxz
mov
fidivl
xchg
loope
call
into
pop
bound
pop
jae
cmp
ret
sbb
push
dec
repnz
mov
cmp
sbb
test
lods
xor
fwait
mov
mov
sahf
push
shr
cmp
popa
lods
xchg
ja
adc
mov
sub
inc
dec
in
jae
rorb
in
mov
loopne
sub
cmc
stos
test
in
dec
call
stos
jmp
cli
in
out
dec
cwtl
ret
push
inc
mov
xor
test
sbb
shr
cmp
adc
pushw
dec
loop
lahf
cmp
mov
xor
and
cmp
andb
jl
testl
sub
int
jg
push
mov
add
pop
ss
mov
ret
sub
inc
mov
mov
fcompp
cmp
lock
frstor
ss
sbb
ret
mov
xlat
neg
jns
add
into
shlb
push
inc
or
sbb
add
icebp
mov
add
and
adc
test
inc
aam
cld
mov
into
lcall
xchg
mov
xor
cmp
and
adc
or
jae
jns
adc
xor
enter
enter
add
aaa
mov
xchg
call
pop
mov
shrl
fdivrs
enter
and
rorb
mov
xlat
dec
fwait
push
lahf
call
dec
xlat
stc
push
inc
sbb
jecxz
mov
cmc
pop
cmp
mov
clc
jbe
jbe
xor
and
dec
stc
fwait
in
popa
mov
imulb
ja
out
test
push
and
sub
sbb
xor
jl
es
cwtl
addr16
mov
mov
push
jmp
sbb
cwtl
fsubs
xor
jecxz
mov
and
aad
pop
pop
cmp
xor
push
mov
cmp
std
inc
sahf
xlat
mov
lods
mov
inc
and
fidivl
xchg
sbb
ret
repnz
out
dec
jnp
or
lcall
mov
sub
imul
and
popf
mov
or
loope
mov
cmp
mov
mov
dec
aas
jge
pusha
xchg
mov
jp
inc
pop
xor
mov
addb
inc
aam
mov
aam
cmp
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
lds
jecxz
and
sub
ja
rcrb
and
imul
pop
shl
jp
mov
cmpxchg
aas
mov
jecxz
and
sub
mov
jecxz
and
sub
xchg
in
jecxz
sub
mov
and
push
fdivl
mov
lret
or
pop
jmp
mov
push
pop
pop
push
test
mov
test
or
test
jp
mov
cmpxchg
lock
shr
dec
add
mov
ja
push
test
jnp
add
rclb
test
pop
adc
pop
adc
or
xchg
sbb
lock
xchg
xchg
or
push
test
pop
jg
cmpsl
loope
iret
rolb
insl
pop
add
testb
es
lcall
ss
dec
add
mov
cmpxchg
aas
mov
jecxz
and
sub
mov
jecxz
data16
inc
mov
sub
adc
movsl
cmpxchg
aas
mov
loop
and
scas
cmp
pusha
or
aas
mov
jecxz
and
movsl
pop
insl
sub
mov
out
and
cs
mov
jecxz
and
das
aas
mov
jp
mov
mov
dec
shl
jp
cmpsl
movsl
pop
insl
sub
mov
repz
mov
cmpxchg
aas
mov
jecxz
and
cmpsb
cmpxchg
xor
or
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
or
insl
sub
mov
fninit
jp
mov
imul
mov
pusha
test
inc
mov
sub
mov
jecxz
ret
cltd
xlat
jl
push
sub
mov
jecxz
and
cmpxchg
sub
mov
jecxz
and
sub
mov
ret
jp
push
mov
add
pop
shl
jp
mov
add
pop
insb
out
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
sub
mov
jecxz
and
gs
jno
jecxz
and
xchg
jo
dec
sti
fadds
add
or
xor
jecxz
dec
xchg
fcoms
jae
fs
addl
ficoms
sub
cmpsl
inc
divb
arpl
jecxz
mov
cwtl
shll
inc
mov
out
repz
xor
jno
mov
andb
mov
xlat
lret
hlt
pop
test
jp
jno
mov
cli
punpckhdq
cmc
and
inc
xchg
repz
xor
push
ret
loopne
fwait
mov
pop
add
mov
movsl
jg
decb
aam
adc
inc
out
or
add
mov
cld
lods
push
inc
xlat
dec
pop
enter
rol
loope
mov
addr16
inc
mov
aam
cmp
pop
imul
inc
gs
imul
jae
shrl
sub
rorl
js
adc
int
int
cmc
mov
push
push
inc
xchg
xchg
sbbl
dec
sub
jno
inc
lcall
loope
insl
mov
imull
xchg
ja
push
das
sahf
roll
pop
lcall
test
mov
out
mov
push
dec
mov
lds
cmpb
inc
jbe
mov
adcb
mov
mov
sahf
jl
out
in
popa
div
sub
faddp
push
fildl
cmp
test
int3
jno
mov
loope
pop
pop
adc
mov
and
in
scas
js
mov
xor
aad
mov
mov
pop
jbe
dec
cmp
stos
mov
fdivs
inc
mov
repz
xchg
mov
js
jns
mov
pop
in
leave
mov
and
into
xor
xor
jb
in
add
out
push
fldt
xlat
pop
fldcw
xchg
insb
xor
pop
addl
mov
mov
inc
dec
push
dec
neg
sbb
ja
push
add
test
mov
mov
mov
clc
arpl
mov
aad
dec
insl
mov
xchg
sub
sarl
scas
push
pop
jae
push
xchg
repz
cmp
mov
adc
xor
ljmp
adc
push
popf
sub
lock
scas
fnstsw
movsl
aaa
mov
in
push
add
popf
lds
repz
sbb
imul
pop
cmp
xchg
adc
sub
mulb
sbb
push
iret
pop
cmc
jmp
aas
stos
sbb
in
and
mov
jecxz
addr16
or
outsl
sub
repnz
out
or
push
push
scas
mov
mov
dec
aam
call
pop
sub
sahf
sub
inc
popa
adc
loope
or
js
cmp
lock
or
ljmp
sti
fistps
add
sub
mov
jb
mov
mov
xchg
push
jns
insl
dec
ret
lcall
dec
sbb
add
rclb
es
push
int3
sub
psubusb
ljmp
aad
mov
aas
clc
push
inc
hlt
cmp
fiaddl
lods
adc
sbb
lods
imul
xchg
sbb
cmp
push
dec
jg
inc
test
dec
inc
cwtl
xchg
mov
insl
cld
adcl
cmpsb
mov
int3
std
jmp
push
xchg
sahf
movsb
aaa
jl
into
pushl
fs
or
in
out
jle
dec
or
xchg
in
mov
daa
or
dec
mov
testl
pop
pushf
addr16
xor
cmp
mov
lret
cli
jmp
ret
cmc
sbb
lret
aaa
ljmp
lods
lret
push
insl
mov
iret
adc
mov
cwtl
cmp
test
xchg
repnz
adc
sbb
adcl
stos
popf
xor
pop
into
ret
out
inc
add
push
inc
out
and
and
adc
ljmp
mov
fs
test
mov
add
mov
stc
cmp
stc
inc
test
xor
sbb
je
lock
repnz
mov
add
leave
das
xor
push
inc
jecxz,pn
xchg
cmpsl
cmp
pushf
pop
outsl
lods
or
popa
movsb
lahf
out
jg
dec
inc
adc
fisttpl
jle
xchg
add
add
jno
inc
cmp
int
mov
adc
mov
push
fwait
cwtl
adc
dec
pop
loop
mov
fstpt
pop
push
scas
repz
cwtl
hlt
lret
sub
lahf
loopne
or
add
xor
popa
mov
stos
shrb
std
jns
popa
pop
out
xor
mov
lret
mov
add
scas
and
fstps
repnz
jae
lea
fnstcw
push
stos
leave
lds
cmp
or
adc
insb
push
loop
sub
ds
mov
mov
bound
out
jb
cmpsl
inc
ret
ret
inc
in
scas
ss
jns
aas
xchg
test
int
in
in
mov
cmp
jecxz
jne
sahf
xor
lods
push
mov
mov
mov
in
jmp
xorb
sarl
call
and
inc
sbb
popf
mov
sbb
out
xor
jno
leave
sbb
jmp
inc
fistps
pushf
lret
xor
not
pushf
mov
sub
mov
paddusb
sbbb
aad
stos
cmp
and
dec
pop
mov
sbb
in
ficoms
aas
addr16
pop
xchg
adc
and
and
loope
mov
mov
ljmp
push
dec
lret
out
push
in
dec
aam
test
fs
das
in
ljmp
sbb
loope
fnstsw
into
daa
notb
loope
lds
dec
data16
fdivrl
jo
insb
mov
stc
fmul
push
xchg
lods
mov
arpl
mov
dec
cltd
das
cwtl
xchg
les
mov
jge
inc
jno
pop
nop
cmp
test
or
mov
js
mov
xor
xor
mov
xchg
sub
jg
push
hlt
dec
in
adc
jmp
mov
inc
jmp
jmp
mov
test
loopw
dec
mov
push
xor
and
fidivs
pusha
xchg
outsl
xor
mov
loopne
out
xor
aas
loopne
mov
inc
push
or
xchg
addb
mov
pop
xor
test
repnz
popf
jge
add
in
mov
fwait
xor
xchg
lea
clc
clc
jne
or
push
scas
jb
cmpsl
insl
test
dec
insb
pop
sti
lahf
jmp
pop
push
fwait
rcll
cmpl
push
ss
sub
je
mov
cwtl
popf
lcall
mov
test
insb
or
sbbl
and
dec
jnp
lods
andl
sahf
and
repz
pop
add
or
sub
and
ja
cs
mov
inc
adc
out
lret
loope
jbe
push
jb
imul
movsl
xchg
mov
sarb
mov
test
ljmp
pop
je
insb
fnsave
rolb
iret
bound
aad
lea
pop
daa
cmpsl
cld
enterw
test
jb
mov
or
cli
ficomps
mov
mov
jg
cltd
stos
dec
addr16
push
sbb
test
and
sub
sub
jecxz
arpl
sti
xor
dec
dec
mov
push
mov
xchg
enter
imul
xchg
insl
mov
cmp
lock
cs
add
sbb
push
aaa
movsb
mov
inc
cmp
lahf
fcmovu
jl
mov
sub
mov
lret
jns
es
out
loop
push
test
and
mov
das
sti
sub
jg
cli
inc
and
xchg
stos
cmp
repz
mov
fcomip
xor
push
or
pop
lcall
out
sub
xor
sbb
sub
jecxz
xor
or
es
cmp
xchg
repnz
jmp
outsl
cwtl
jge
mov
add
stos
sbb
add
pop
push
add
dec
lea
jle
movsl
cmpb
cmp
divl
fst
push
xor
mov
mov
push
fsubr
add
ljmp
repnz
pop
jno
leave
mov
scas
int3
nop
movb
add
mov
inc
movsl
jns
cmp
repz
mov
mov
imul
cmpsl
popa
cmp
sub
push
imul
repnz
cmp
jg
pop
dec
daa
jo
pop
cmpsb
xchg
test
scas
dec
sub
cmpsl
rcr
mov
mov
jmp
fwait
dec
call
xor
or
mov
test
push
stos
loopne
pop
mov
loope,pn
jp
pusha
pop
imul
and
dec
pop
dec
fstp
dec
or
mov
clc
xor
mov
inc
popa
add
in
add
repz
js
sbb
int3
aam
jno
jmp
ficoml
flds
int3
xor
fwait
push
sub
pop
dec
push
jle
add
jae
inc
pop
xor
arpl
lods
or
js
jns
add
xor
cmp
or
dec
mov
mov
adc
aaa
adc
or
fidivrs
icebp
sub
cwtl
push
add
sbbb
mov
jg
jp,pn
addr16
xor
int
in
cltd
and
pusha
ficoml
sub
push
div
negl
push
rcr
dec
pop
sbb
loope
gs
scas
addb
divl
outsl
adc
mov
outsb
push
xlat
sbb
test
dec
inc
lods
leave
pop
jp
inc
call
loop
sbb
lret
xchg
cltd
mov
mov
fcoml
push
lahf
outsl
cs
pop
jmp
mov
xchg
xchg
mov
inc
movb
jg
cmpsl
pop
push
mov
add
sub
and
xchg
cmc
and
add
icebp
cs
xor
mov
ficoml
rcll
cld
pusha
data16
call
out
jb
cmpl
cmp
xlat
std
scas
mov
sub
xchg
xchg
dec
out
data16
lods
scas
imul
xor
movsb
or
ja
aas
jmp
xchg
sti
fistl
fsubl
pusha
add
arpl
jp
jnp
xor
sub
ss
push
add
dec
mov
scas
inc
jmp
push
push
idivb
mov
dec
jns
andb
adc
lea
jecxz
adc
inc
and
fs
adc
ficomps
out
jle
push
in
inc
push
ret
mov
fldl
idivb
es
rcr
fcmovnbe
daa
outsl
or
subb
lods
or
sub
stos
notl
jbe
sbb
rcrb
dec
rcll
popa
and
mov
push
and
out
mov
int3
out
repnz
shll
jno
push
repnz
sbb
jbe
daa
filds
pop
in
rolb
add
jnp
shrl
je
dec
sbb
cld
mov
leave
ja
xor
lea
pop
jmp
fstl
pop
testb
pusha
cmp
adc
movsb
insl
dec
push
xchg
pop
lcall
mov
jecxz
pop
sbb
mov
stos
data16
pop
and
mov
adc
jb
fmuls
xor
aam
bound
mov
add
dec
mov
insl
dec
mov
popa
lahf
sti
loop
ffreep
aaa
cmp
loop
jg
adc
in
outsb
out
sbb
arpl
loop
pushaw
push
mov
stc
das
loop
xor
out
cmpsb
ret
andb
pop
pop
dec
mov
stos
xchg
imul
pop
insl
in
dec
inc
mov
or
fmuls
shlb
mov
cld
ret
mov
mov
inc
jae
mov
inc
out
in
ja
fmull
mov
mov
inc
cmp
jmp
mov
js
add
test
in
aad
mov
and
cltd
add
out
ljmp
xchg
sbb
js
loope
xchg
insb
xchg
ljmp
mov
pop
jecxz
into
pushf
dec
jmp
inc
std
popf
clc
pop
outsl
hlt
pop
and
loope
mov
mov
inc
sbb
inc
inc
cmp
dec
dec
sub
jmp
shr
mov
add
mov
cmp
rclb
popa
mov
jmp
jge
scas
mov
lods
pop
inc
push
daa
stos
in
arpl
pop
loope
sahf
addr16
mov
fsub
jne
sbb
push
ljmp
jmp
das
idivl
jbe
fcomp
jne
aas
dec
hlt
stos
outsl
sbb
cmpsl
jl
jmp
xchg
sub
nop
pusha
loopne
mov
push
xchg
loope
out
fisubs
and
sub
xor
test
adc
sub
jne
inc
fcoml
je
sub
push
mov
stos
loope
das
fld
lods
add
jo
gs
inc
sbb
or
movsb
movsl
pop
shrl
sub
pusha
cmpsb
mov
lods
add
jb
mov
jp
push
outsl
paddq
stos
adc
mov
outsb
stos
aam
dec
bound
sbb
ds
cmp
movsb
aaa
push
imul
clc
mov
cmpsb
roll
loopne
xor
sahf
loopne
mov
add
ss
movsb
fcmovnu
shr
mov
in
stos
iret
add
jmp
jne
jge
idivl
loope
cmpsb
test
icebp
sbb
jge
jae
insb
pop
jmp
inc
loopne
lods
lock
inc
data16
push
sahf
rolb
push
or
push
int
imulb
sub
test
adc
movsb
mov
push
add
pop
mov
mov
scas
push
cmp
xchg
mov
mov
sbb
out
scas
push
push
rcl
js
leave
popa
mov
iret
rcrb
rclb
mov
popf
test
add
inc
aam
arpl
cwtl
cmp
pop
cmpb
orb
lock
aaa
xchg
mov
sbb
cwtl
arpl
stos
dec
add
outsl
fld
fnsave
es
int3
and
jno
leave
mov
adc
lret
xor
iret
jno
orl
mov
jo
xor
pop
popf
push
adc
and
cmp
cwtl
inc
pop
mov
call
mov
leave
pop
sub
mov
int
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
