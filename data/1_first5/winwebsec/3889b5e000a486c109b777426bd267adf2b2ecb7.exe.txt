sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
push
jmp
cwtl
or
jl
lret
xor
sub
xor
jb
sub
mov
pop
ss
adc
dec
mov
xor
int3
inc
repnz
cmp
lds
inc
lods
push
jge
int
jae
hlt
out
or
adc
add
mov
sbb
sub
mov
orb
gs
jno
xor
rol
and
sbb
xor
pop
add
daa
mov
outsb
ret
add
arpl
sbb
inc
icebp
cmp
push
push
fisubs
insl
and
ja
mov
out
icebp
sbb
nop
clc
call
sarb
dec
or
add
pop
outsb
in
cli
add
rorb
fdivl
imul
rcrb
sub
and
sub
add
adc
and
scas
push
imul
iret
xor
loop
cmp
cmpsl
iret
sti
sub
sbb
ret
mov
mov
clc
and
jmp
lcall
jae
mov
lret
or
ss
arpl
mov
push
xor
adc
push
xchg
inc
data16
cmp
add
jnp
in
lds
mov
cld
add
inc
loope
fs
jmp
mov
xchg
sub
clc
mov
or
sbb
dec
push
sub
or
mov
adc
out
fnstsw
xchg
pop
xor
push
es
pop
scas
fnstenv
test
inc
cmpsb
sbb
std
xchg
scas
popa
mov
ror
cli
and
daa
cmp
scas
stos
inc
or
pop
inc
repnz
cmpl
dec
lea
popa
cld
push
cmp
mov
lcall
mov
inc
push
xor
mov
loope
orl
fldcw
or
dec
mov
mulb
cmp
cmp
or
fisttpll
subl
aam
mov
iret
cmpsb
daa
jg
mov
stos
sub
mov
mov
adc
out
xchg
and
les
cmp
std
xor
sub
cs
pop
pop
push
mov
call
push
es
dec
mov
sub
inc
in
push
sub
aad
scas
jns
push
fisttps
sti
inc
ret
call
popa
out
test
pop
arpl
pop
jg
addl
cs
cmc
loope
sbb
xor
repz
jne
rcrl
jno
fstps
mov
ja
add
fwait
ss
jp
test
fisttps
aad
add
sub
and
xor
incl
loopne
out
mov
arpl
shlb
andb
xor
std
push
mov
sub
divl
lahf
cmp
mov
jp
fcmovbe
sahf
sbb
test
push
mov
in
cmc
int3
je
les
push
in
dec
ja
xchg
fildl
mov
ret
rclb
add
cmp
iret
stos
scas
jmp
clc
negl
adc
cmc
and
push
sahf
ficompl
movsb
mov
shrl
dec
mov
subl
popa
xlat
xchg
invd
add
negl
cmc
cmc
pushf
pop
stc
cmp
data16
fcoml
pop
add
pop
mov
insb
sti
enter
bound
and
jmp
scas
sbb
lea
push
scas
test
pop
in
loop
xor
mov
jne
sbb
jp
outsb
mov
rcr
jbe
mov
rcl
lds
sub
push
sbb
push
out
cmp
xor
andl
call
cmp
fs
out
push
and
push
push
subb
adc
adc
cli
push
push
sti
cmp
lret
movsb
push
adc
push
adc
hlt
outsl
jbe
iret
cld
jmp
xchg
sub
test
cmpsb
rcl
jmp
adc
pop
fbstp
jno
ljmp
dec
cmp
xchg
mov
sbb
jns
inc
inc
inc
lock
push
subl
shll
pop
pop
adc
loope
rcr
lods
and
and
rorl
pop
xchg
jnp
enter
out
dec
adc
xchg
xor
or
fistps
shrl
and
insl
cld
loopne
jp
inc
jae
insb
mov
dec
aad
pusha
add
jl
mov
mov
faddl
jmp
test
pop
and
icebp
sub
pop
xchg
dec
in
ror
add
popa
and
ss
divb
sbbl
or
jl
jle
jnp
pop
dec
lods
mov
add
push
outsb
xchg
pop
sti
dec
aad
imull
and
ret
in
enter
leave
outsl
test
pop
sbb
pop
cmpl
or
xor
lods
add
sbb
mov
clc
jle
mov
inc
test
test
mov
push
xchg
in
sbb
cmpsl
imul
xor
jno
aam
outsb
mov
rcrl
sub
inc
aaa
jp
mov
aas
mov
inc
and
fs
loope
stc
inc
mov
rclb
inc
xor
lods
pop
call
fsts
xor
xchg
lret
mov
rorb
adc
stc
mov
push
sbbb
pop
dec
mov
inc
mov
xchg
push
mov
out
dec
ds
push
xchg
daa
pop
push
mov
insb
mov
jno
jmp
in
sbb
shrb
adc
cmpsb
jecxz
jl
mov
and
jne
nop
je
inc
jbe
pop
xor
in
setns
mov
xor
loop
les
dec
push
roll
inc
loope
jle
mov
psubw
pop
fidivl
or
xchg
jbe
pop
and
and
aam
adc
pushl
xchg
pop
xchg
outsb
push
por
and
outsl
mov
cmp
shll
mov
in
push
cmp
push
mov
ret
aad
cltd
shll
les
shlb
or
xchg
and
mov
mov
sbb
or
jno
and
loope
arpl
fidivrl
pop
or
sti
sbb
or
std
push
push
adc
jmp
out
popf
in
fs
and
in
and
lret
nopl
inc
lods
sbb
fwait
das
xor
push
jo
fisttpll
xor
add
popf
sbb
jmp
inc
imul
sbb
push
in
cmpsb
cwtl
xchg
rcr
or
add
ljmp
pop
add
push
jecxz
xchg
mov
xor
ffreep
fwait
pop
jnp
sub
mov
insl
movsb
stos
sub
inc
out
pop
cmp
fsin
int
jmp
pusha
add
mov
fimuls
jg
dec
jg
jmp
push
xchg
hlt
mov
lret
shr
mov
xor
xchg
pop
xor
xchg
loopne
inc
fidivl
cmovle
int
jl
pop
call
xor
lret
pushf
dec
aaa
jae
push
cmp
push
inc
mov
add
xor
jl
cmp
adc
sub
jb
loope
in
les
jae
repnz
xchg
lds
add
icebp
call
insl
jae
jno
jo
and
int3
jb
push
mov
inc
stc
std
mov
fs
xchg
sub
nop
movl
push
mov
jp
enter
jl
dec
cmpsb
add
xchg
jne
imul
cmp
cs
gs
mov
pop
fisubrs
inc
cmp
pop
cmp
jo
push
icebp
imul
sbb
inc
loopne
cmp
pop
push
push
jecxz
outsl
lock
xor
out
jecxz
shlb
xchg
xchg
cmc
jg
mov
lret
push
lcall
inc
cmp
xor
popf
and
xchg
fwait
mov
or
lods
sbb
mov
xor
sub
xor
inc
sbb
shll
daa
rcl
cmpxchg
pop
lahf
jecxz,pt
add
pushw
jmp
lret
mov
xchg
sub
in
aas
inc
push
or
and
xor
pop
arpl
and
daa
call
dec
pop
adc
in
mov
sub
dec
outsl
add
es
fisttpll
cmp
hlt
jle
xchg
mulb
sbb
arpl
repnz
ja
jo
and
lods
inc
sbb
jecxz
adc
rorb
jne
fadds
pop
sub
add
jae
push
pop
ret
cmp
mov
mov
call
loop
stc
repnz
push
test
xchg
mov
je
addr16
adc
aad
movsb
xchg
fcmove
pop
pop
lcall
and
fnstsw
aas
dec
jbe
add
arpl
imul
sbb
ffree
xchg
lea
bound
movsl
xchg
pop
ss
je
subl
clc
pop
pop
sub
push
ret
and
inc
imul
and
lds
lahf
std
ja
inc
leave
sbb
adc
push
divl
stos
jp
mov
popa
ror
inc
out
mov
cmp
lret
fidivrs
sbb
dec
xchg
shr
outsb
paddsb
jno
or
jbe
and
inc
push
out
movsb
dec
push
into
jne
js
test
mov
outsb
ljmp
insl
out
into
xchg
jb
jg
push
inc
inc
adc
je
inc
pop
mov
cmovge
sub
jmp
jo
pop
stc
arpl
xchg
lret
fcmovnbe
xchg
cld
cli
lock
xchg
jae
mov
ror
adc
sbb
repnz
and
add
negl
sbb
mov
push
sub
adc
push
cmp
push
clc
jbe
mov
xlat
add
andb
iret
and
pop
idivl
rolb
push
mov
xor
dec
leave
imul
add
loope
push
and
push
sub
cmp
xor
mov
lds
push
mov
inc
jge
in
les
jmp
sarb
imul
shr
loope
ret
in
xchg
pop
or
test
ror
loope
add
out
push
shlb
popa
dec
fwait
pop
mov
mov
idivb
pop
arpl
outsb
add
dec
and
pop
aad
ss
push
push
jg
cmpb
pop
aad
jp
sbb
bound
subl
pop
mov
xlat
inc
dec
inc
sub
into
jae
inc
mov
jge
sbb
cmpsl
insb
cltd
fucom
cmp
push
push
rorl
mov
stc
inc
scas
inc
add
push
mov
ss
fcoms
add
push
fisubrs
mov
sub
cmp
xor
sbb
cmpsb
dec
sub
sbb
push
jnp
jl
int3
xor
xchg
jnp
enter
stos
aam
int3
cli
jecxz
in
inc
pop
std
push
and
sbb
hlt
and
call
add
pop
mov
push
push
js
xorb
scas
lods
push
adc
lcall
testb
hlt
mov
cwtl
jb
xlat
inc
aad
nop
mov
inc
out
inc
jg
xchg
or
cs
xchg
jb
js
inc
lods
add
fldenv
out
mulb
rol
fmul
push
push
dec
out
sbb
test
push
xchg
shrl
push
fwait
daa
xchg
lret
jl
pop
dec
inc
das
pop
popf
push
xchg
js
call
and
popa
mov
xor
das
ljmp
lcall
add
js
aaa
out
ficompl
and
shrb
stc
add
jge
push
ljmp
in
lahf
xrelease
js
leave
adc
popa
aad
jbe,pn
push
insl
les
push
mov
outsl
xor
mov
add
inc
fs
jnp
cmp
loopne
cmc
les
cmp
pop
cmp
or
sub
leave
ljmp
out
inc
pop
repnz
jb
xchg
cmpsl
clc
aad
rclb
jp
mov
nop
lds
lds
aam
lds
adc
je
sub
push
pop
cwtl
or
mov
lods
repz
dec
stos
push
scas
lcall
or
jb
out
pop
fdiv
xlat
movsl
mov
int
lret
cltd
pop
dec
hlt
dec
orl
xchg
jbe
cli
and
cmp
fdivr
loope
xchg
out
inc
rclb
sub
and
jmp
adc
call
or
jae
fsubr
pop
iret
mov
add
pop
in
mov
pop
pop
rolb
adc
js
push
stos
sbb
jno
shll
paddsb
imul
fs
int3
push
cmp
mov
jle
mov
xchg
rcrb
in
sub
pop
dec
add
sub
int3
and
les
jmp
movsl
addr16
and
cmp
es
call
ja
sarb
add
lret
and
mov
das
cmp
ret
rcrl
lds
fstpl
sbb
mov
sar
inc
out
lods
pop
or
sub
dec
fbstp
call
test
lds
mov
js
adc
or
xor
ret
jp
repz
cmp
je
sbb
sbb
lret
iret
cmpsl
cltd
std
data16
lock
dec
dec
int3
in
das
xchg
jp
adc
enter
lods
dec
ds
cmpb
clc
and
xor
aas
mov
adc
aam
rcr
pop
outsb
jnp
inc
ljmp
mov
xor
loope
xor
ja
std
hlt
cltd
in
mov
or
adc
adc
popa
xor
lret
mov
or
int
lea
clc
inc
das
into
push
in
xor
mov
adc
arpl
lret
dec
idivb
and
popw
std
mov
fs
pop
lahf
mov
sbb
push
cmp
xlat
and
hlt
sbb
ja
inc
add
addr16
cmp
inc
cmc
xchg
add
push
mov
xchg
popa
jge
or
xorb
daa
mov
jmp
addr16
and
imul
push
jb
xchg
ss
push
jp
xchg
into
jmp
pushf
adc
outsl
add
js
jge
mov
roll
xor
rcrl
das
fsubrl
pushf
testb
jne
nop
out
in
jp
sub
enter
push
mov
push
inc
xchg
roll
inc
daa
ficoms
es
adc
adc
fldt
xor
gs
xchg
lahf
jle
jg
notb
scas
int3
sub
js
xchg
dec
push
dec
into
or
into
jne
lret
jmp
clc
xchg
daa
lods
inc
dec
jge
xor
test
or
jns
push
mov
adcb
lcall
add
lods
clc
mov
push
loopne
iret
lret
add
stc
jg
fbstp
ss
out
pop
pop
sub
jl
seto
xor
lret
add
rcrl
or
fldt
daa
aam
test
out
scas
push
mov
inc
inc
and
jge
dec
dec
sub
inc
adc
sub
jae
jp
hlt
add
adc
xchg
mov
adc
sub
mov
push
mov
sub
fdivl
or
xor
sub
and
sub
cld
mov
sub
rol
js
mov
mov
inc
ja
pop
movsb
bound
push
cmp
subl
pop
fbstp
stos
mov
rorl
stc
add
out
fsubl
test
subl
jl
jp
test
mov
push
subb
adc
push
inc
sbb
ja
fsubrl
sub
pushf
mov
pop
in
addr16
push
in
pop
lods
mov
lods
jmp
pop
and
lock
ficomps
test
add
jb
icebp
cmp
mov
loope
int
inc
push
xchg
pop
xchg
jecxz,pt
lea
mov
cs
xor
dec
xor
or
test
rolb
nop
mov
pop
sahf
xor
jo
hlt
pop
pop
stc
sub
jno
adc
dec
fs
call
sub
or
sti
xchg
scas
and
test
insl
gs
pop
leave
in
pop
aam
inc
aam
mov
fsubr
or
dec
mov
inc
sub
xor
insl
push
lahf
jmp
add
lcall
and
jmp
cld
mov
mov
mov
push
push
inc
call
push
dec
loopne
popa
std
xor
mov
dec
leave
xchg
fisubs
mov
jo
add
or
and
cwtl
mov
repnz
popf
cwtl
jle
sbb
cmp
jmp
cmp
rcll
pop
fstpt
daa
xchg
fsub
mov
ret
mov
ja
stc
xchg
xchg
push
xchg
fiadds
sarb
mov
xor
mov
gs
test
aam
add
mov
xchg
xchg
xchg
movsb
ret
sarb
push
iret
subb
mov
shlb
xlat
add
push
cmpsl
mov
pop
movsl
loope
into
mov
mov
push
ret
repnz
leave
je
cmpsb
mov
dec
inc
or
adc
jl
loope
cmpsl
jl
xor
loopne
xor
lret
adcb
sub
add
ljmp
mov
mov
cmp
or
add
push
mov
mov
call
cmpsb
ret
into
mov
mov
cmp
push
jbe
idivl
add
arpl
mov
shlb
add
lods
mov
orb
adc
inc
xchg
adc
mov
cltd
roll
movsb
test
movsl
inc
mov
mov
jae
loopne
sahf
push
add
es
mov
addr16
mov
lcall
sbb
pusha
scas
cmp
out
push
xlat
imul
ret
push
loopne
adc
inc
test
jnp
lea
test
pop
pop
repz
add
daa
add
push
jge
push
test
cmp
pusha
std
jmp
outsl
dec
sbb
push
jb
sub
into
adc
pop
dec
cmc
in
or
or
xchg
xchg
sbb
mov
gs
adc
mov
sub
js
push
xchg
jnp
jae
insb
shlb
iret
adc
subl
add
out
mov
mov
dec
pop
push
dec
or
pop
inc
subb
stos
jl
jl
bnd
inc
jns
mov
add
mov
nop
dec
das
adc
sub
xchg
mov
pop
dec
in
call
fsubr
stos
rclb
cld
or
lds
xor
pop
lods
ret
mov
add
mov
fnstsw
jae
adc
add
aad
sbb
lds
pop
cmp
test
mov
into
push
and
int
and
sti
mov
push
cmpsl
jns
jl
fisubrs
stos
xchg
jno
hlt
jg
pop
xor
insb
inc
divl
adc
scas
xlat
repnz
test
adcb
push
in
xor
shl
mov
pop
mov
aam
outsl
add
xchg
cmp
in
loop
cwtl
jns
daa
sahf
and
mul
fnstcw
push
stos
scas
scas
loop
jne
fsubs
shlb
sbb
or
adc
stos
jl
andl
push
pop
ficoms
push
sbb
fwait
mov
movsl
cmpsl
push
xor
pop
jnp
sub
push
or
adc
mov
push
and
sarb
test
and
nop
inc
and
roll
jae
dec
arpl
mov
mov
inc
pop
xor
mov
daa
xchg
xor
fs
mov
xor
xor
fbld
sbb
aam
jecxz
jae
adc
test
in
insb
lds
cmp
dec
sub
jg
out
rclb
mov
sbb
popf
stc
and
fnstenv
dec
fwait
arpl
sahf
pop
iret
dec
push
and
dec
lcall
adcl
popf
lahf
inc
push
push
mov
hlt
data16
pop
popf
shl
lods
add
out
ret
cmpsb
mov
add
ja
data16
jb
scas
test
movsb
bound
ret
mulb
negb
movsl
sbb
cld
jg
lea
aam
mov
scas
jo
das
or
fdivl
push
inc
test
das
mov
inc
push
imul
mov
mov
faddl
pop
clc
pop
xlat
sbb
sbb
mov
dec
sub
subb
adc
xchg
pop
in
xlat
je
in
or
push
mov
out
ret
movsl
cs
jne
pop
leave
cwtl
xor
push
dec
rcrl
push
popa
add
cmc
lahf
fsubl
fst
jmp
repz
xchg
mov
pushl
and
jl
dec
fcomps
pushf
ret
xchg
outsb
adc
int
hlt
mov
pop
and
out
sbb
sahf
loop
out
loope
push
in
jge
nop
pop
dec
int
push
sbb
repz
mov
mov
popf
stos
push
jbe
adc
imul
push
adc
sub
sub
jp
pop
xchg
arpl
cmpsb
mov
shrb
std
push
insl
pop
outsl
xchg
leave
lds
hlt
scas
aas
add
adc
mov
xor
shrb
sbb
clc
mov
adc
xor
xchg
cmpsl
lcall
scas
push
dec
xchg
fistps
test
jmp
mov
jmp
idiv
sub
imul
push
lods
nop
mov
pop
lea
mov
ljmp
xchg
add
lret
add
movsb
sahf
xor
insl
jp
dec
or
adc
dec
stc
sbb
mov
dec
test
cs
adc
xchg
adc
or
cmc
imul
cmpsb
enter
scas
pushf
gs
lock
in
or
stos
out
dec
movsl
mov
dec
mov
mov
adc
dec
inc
cmpsb
ret
shrb
int3
scas
dec
inc
stos
inc
dec
mov
jg
popa
sub
sub
cmpsb
nop
xchg
gs
out
jg
push
xor
jnp
shrl
cld
in
add
pop
hlt
dec
lahf
orl
push
in
and
xchg
loop
js
sub
jae
push
test
notb
popf
pop
rcrb
sub
addr16
mov
push
or
mov
and
mov
sahf
sub
out
popa
sub
out
pop
jnp
and
add
inc
sub
cmpsb
outsb
jmp
push
mov
call
dec
sub
jge
lret
xchg
mov
pop
add
and
in
std
into
mov
jmp
aam
cltd
add
mov
es
push
js
mov
outsl
inc
inc
cmc
and
jne
push
dec
aas
mov
idiv
xchg
ss
movsb
lret
je
lods
daa
or
push
xchg
daa
sar
cli
lahf
cmpsl
mov
lcall
sbb
iret
push
mov
push
sub
pop
adc
daa
dec
leave
sti
xchg
rolb
inc
xchg
into
pop
dec
adc
stos
and
fidivs
out
test
and
ret
fcomps
adc
inc
ds
add
and
aaa
pop
cltd
pop
jecxz
inc
movsb
mov
iret
fisttpll
repz
scas
test
imul
psubq
jne
sti
or
popf
push
or
lea
xchg
je
mov
push
mov
dec
pusha
adc
cmc
test
fwait
push
lods
adc
push
mov
push
sbb
pop
inc
adc
aam
inc
xchg
add
mov
js
jbe
iret
repz
add
call
mov
lret
jns
lds
das
push
cmp
cmc
pushf
std
hlt
arpl
xorb
movsb
add
jo
cmpl
sub
imul
dec
repnz
add
push
dec
add
mov
cmp
lret
pop
cwtl
cmp
ficomps
cmp
inc
loope
inc
push
mov
or
shll
std
adc
ret
push
and
adc
dec
cmp
subl
sahf
popa
bound
mov
data16
sar
xchg
push
jecxz
pop
mov
or
jl
cmc
or
xchg
repz
sbb
lds
fstl
enter
andl
in
repnz
or
jnp
cmp
xor
or
pop
leave
data16
mov
sbb
cs
xchg
jno
mov
filds
cwtl
pushf
or
mov
dec
add
jle
cli
gs
pop
jecxz
clc
mov
pop
loopne
or
out
mov
push
mov
adc
outsl
cwtl
fucom
push
jno
hlt
pop
loopnew
and
sbb
push
mov
sbb
mov
cltd
sbb
or
adc
jecxz
cmp
ss
jno
xor
in
adc
inc
xor
mov
dec
frstor
out
bound
lea
into
mov
dec
pop
mov
dec
add
ja
dec
std
into
fisttpll
mov
and
adc
jp
dec
mov
mov
aaa
les
push
out
movsb
jae
das
aad
xchg
jnp
jo
add
pushf
mov
bound
and
aad
jle
stos
movl
dec
das
xor
clc
xchg
cmc
jnp
outsb
xchg
mov
in
test
adc
xchg
cmp
dec
imul
ror
jbe
inc
mov
sub
jl
stos
gs
pop
scas
push
sub
cvtps2pi
lea
lds
bound
leave
insl
je
add
lds
inc
inc
sub
data16
cwtl
xchg
jne
adc
aam
ss
int3
or
or
add
stos
nop
cmp
mov
out
or
js
mov
add
jle
inc
sbb
push
jns
inc
adc
adc
push
pop
out
xlat
mov
sub
loop
mov
xor
or
arpl
pop
leave
xchg
add
in
fistps
iret
xchg
ljmp
popa
adc
addr16
popa
pop
push
dec
repz
lods
push
cmp
xchg
pop
shr
mov
gs
imul
mov
ret
test
pusha
pop
aaa
mov
cmpsl
sbb
jl
push
test
mov
jae
fs
sub
or
cmp
cwtl
jbe
add
dec
rolb
sub
or
jl
es
ja
push
jb
xor
ret
xor
adc
adc
or
mov
sub
xchg
or
rcrl
imul
cli
inc
mov
call
mov
insb
into
inc
ret
mov
jl
sbb
xchg
pushf
pop
add
out
jno
inc
sti
push
or
fs
fwait
adc
jb
inc
les
cmp
and
and
fiaddl
pop
adc
aaa
dec
aaa
sbb
ds
dec
dec
jecxz
inc
imulb
sti
xchg
jle
or
adc
mov
jnp
arpl
ja
jle
xchg
xchg
push
mov
inc
and
mov
mov
lock
xchg
test
leave
inc
into
cmp
inc
int
dec
pop
mov
mov
mov
pop
fstps
in
mov
into
scas
clc
cmpsb
mov
iret
add
popf
daa
sub
or
cli
sub
push
repz
push
sub
xor
sti
bound
jmp
cmp
jle
mov
rcrb
in
xor
cmp
movsb
add
mov
mov
in
jns
xchg
adc
stos
scas
fisubrl
xchg
adc
outsl
push
popf
xchg
add
sub
inc
dec
pop
sbb
leave
incb
mov
pop
inc
inc
push
xchg
mov
push
cmpl
jbe
jmp
adc
and
dec
pop
out
gs
call
push
mov
gs
adc
into
sti
cmpsb
pop
inc
arpl
jb
cltd
fdivrl
dec
inc
push
cmp
push
cmp
outsb
sub
std
add
cs
in
add
outsl
push
std
dec
into
fstpt
mov
or
cmp
mov
cs
aam
sbb
sarb
xor
add
or
sub
lret
mov
cwtl
and
test
adc
xchg
ja
fbld
icebp
leave
or
xchg
jns
cmp
fdiv
push
push
popa
lock
fwait
nop
in
xchg
out
and
inc
int3
and
fcoml
mov
repz
xchg
adc
cmpsb
jl
mov
jbe
in
mov
adc
pushf
inc
sbb
xor
cmpsb
roll
cmp
icebp
mov
leave
mov
and
jbe
popf
aam
in
ljmp
add
lahf
mov
mov
pusha
inc
decb
sahf
pop
cmpsl
fwait
xchg
bsf
je
daa
mov
int3
mov
js
xor
xchg
jg
or
push
insl
psubusw
ljmp
or
fdiv
sbb
or
nop
mov
xchg
or
outsb
pop
inc
aad
xor
inc
fdivr
dec
dec
inc
shlb
ret
mov
dec
pushf
pop
add
in
pop
lods
es
inc
pop
mov
pop
cmp
ffreep
stos
fldl
inc
in
adc
je
add
inc
stos
add
xlat
or
mov
arpl
jno
outsl
xchg
cmp
jne
xchg
jne
enter
mov
dec
mov
lret
mov
xchg
cld
jmp
or
adc
insb
ss
xor
cmp
push
test
cmp
xor
adc
mov
mov
imul
pop
xchg
setne
adc
xlat
sbb
cmp
jp
dec
sub
add
or
movsl
push
mov
loop
push
jl
pop
pop
mov
mov
lahf
test
div
mov
imul
loopne
and
ret
mov
or
addr16
sarl
pop
inc
cmpsl
repnz
xchg
sbb
inc
push
xor
jecxz
cli
cwtd
lods
dec
adc
cs
cltd
ja
cltd
nop
lahf
les
jmp
mov
fcomip
movsl
inc
aam
rorl
dec
hlt
outsb
jbe
daa
cmpsb
jne
jl
lcall
out
sub
fsubrl
fwait
inc
adc
add
jg
call
sbb
incb
mov
ficoms
or
pop
sbb
daa
mov
insl
mov
add
das
sbb
push
inc
dec
mov
sti
xor
pop
lods
dec
sub
inc
pop
mov
lds
fcoml
pop
pusha
arpl
fldl
scas
lea
in
or
dec
loope
jg
jecxz
in
inc
or
cmp
mov
jo
jbe
or
adc
aaa
and
popa
jbe
push
jg
cmc
sub
mov
mov
repnz
xchg
adc
mov
popl
jl
repz
pop
ds
xchg
cmp
cmp
fisttpll
xchg
lahf
repnz
pop
das
push
sbb
lcall
leave
movsl
jmp
adc
mov
gs
pushf
cmp
add
push
lods
xor
repnz
mov
stos
cmpsb
ljmp
mov
push
cs
in
idivl
adc
pop
sbb
stc
adc
xchg
push
xchg
insb
stos
and
lahf
add
mov
cmpsb
mov
lret
inc
scas
mov
xchg
mov
outsl
nop
mov
xchg
ret
adc
sti
jns
iret
jo
pop
push
movsb
addb
rol
fdivl
ret
bound
movsl
push
shll
les
pop
cli
lds
dec
subl
push
dec
jo
cmp
popf
pop
jmp
adc
jg
cwtl
mov
jp
adc
ret
roll
imul
rclb
push
lock
call
push
add
lods
dec
pusha
test
mov
dec
push
fadds
mov
aad
jno
ror
mov
cmpsb
pop
jbe
jne
gs
push
daa
inc
adcl
repz
mov
cli
sti
std
cmc
divl
repz
out
and
adc
push
cmp
stc
scas
rolb
scas
pop
fabs
xlat
sub
jecxz
cmpsb
adcl
and
out
and
push
lea
dec
jnp
xchg
inc
stos
cld
orb
je
loopne
shrl
jo
mov
or
out
fsubl
dec
mov
scas
in
pop
arpl
sbb
loop
jge
inc
int3
jne
pop
jp
pop
inc
out
xchg
sbb
push
je
push
ljmp
test
addr16
cmp
xchg
and
loopne
pusha
nop
add
movsb
inc
fists
loop
push
inc
pop
stc
add
dec
xchg
inc
add
jp
xor
sbb
fldl
or
ja
inc
xor
sahf
push
rcrb
enter
test
or
push
lret
inc
fildl
mov
mov
insl
dec
mov
jp
stc
nop
je
inc
dec
mov
pop
jge
add
add
mov
mov
les
dec
ret
jg
or
lods
nop
pop
fucom
pop
enter
cmp
or
inc
int
xor
xchg
in
sbb
out
int
sbbb
dec
sub
inc
test
push
bnd
dec
push
mov
dec
pop
fstp
sahf
xchg
mov
loopne
jo
outsb
cli
test
repz
fiaddl
lret
mov
pop
mov
xchg
cmp
popf
scas
xor
scas
fists
lds
mov
out
stos
jge
out
js
out
ret
mov
add
inc
push
pop
ror
mov
jmp
add
aaa
jmp
lods
lea
popa
mov
es
ret
jecxz
sbb
jmp
jp
idivb
test
adc
cmp
mov
jge
sarl
sbb
push
inc
aad
cmp
or
jo
idiv
jp
mov
sub
pop
cli
and
das
cmpsb
adc
ss
in
inc
in
jmp
fnstsw
in
mull
and
add
insl
sub
jo
outsb
rorl
xorl
movsb
jmp
loope
ljmp
sub
das
mov
jae
leave
sub
xor
int3
into
stc
aaa
and
mov
stos
xchg
aad
cmp
out
or
into
mov
mov
sub
mov
sti
fisubs
xor
xchg
lahf
addl
adc
add
jp
xor
outsl
xchg
loope
sbb
xor
rcll
orl
sub
inc
pop
int
jp
jb
adc
ret
jp
repz
stos
lcall
jb
out
mov
push
lret
push
scas
js
outsb
ret
imul
in
sbb
fwait
mov
sbb
test
leave
mov
jbe
lods
das
adc
jg
mov
and
xor
shlb
popf
cmp
add
add
xor
sahf
fcoms
scas
icebp
pop
repz
fidivl
mov
fs
lahf
mov
insl
xorb
cmp
scas
xchg
shrl
inc
out
movsl
adc
and
cld
jl
icebp
shl
test
xlat
xor
push
into
pop
and
jo
ds
and
push
bound
icebp
jecxz
loope
mov
cli
and
xor
stos
sub
dec
popa
andb
enter
popa
fdivrl
aas
inc
jecxz
push
sbb
push
in
gs
imul
push
mov
lcall
add
push
hlt
dec
cmpl
mov
sub
in
xor
out
and
sarb
jb
mov
push
aam
cld
xchg
add
jbe
test
cld
add
mov
mov
add
xor
into
repz
popa
dec
and
and
sub
je
inc
xor
push
pusha
inc
fcomp
jnp
ret
mov
pop
ja
insb
jns
sbb
mulb
pop
or
cli
jns
and
mov
sub
and
mov
mov
mov
or
cmp
movsb
jle
push
jmp
cmovge
out
mov
jl
test
ja
push
xchg
cwtl
pop
sub
push
mov
xor
mov
mov
push
jb
insl
and
sti
hlt
in
jl
push
fs
push
push
sub
jbe
les
mov
mov
pusha
xor
mov
shrl
xor
lds
mov
and
mov
pop
ret
aam
push
pop
pop
mov
lods
fsts
dec
enter
sti
test
mov
loop
outsb
pop
cmp
mov
clc
sahf
movsb
jp
push
jae
js
xchg
sbbl
add
stos
fwait
pop
add
popf
cmp
push
jp
xchg
test
push
ds
mov
dec
scas
jb
arpl
mov
xchg
and
xchg
jo
or
or
sub
jle
push
in
int3
jne
mov
aas
lea
xchg
scas
call
cli
push
lahf
into
push
and
jle
dec
stc
sbb
mov
cmp
inc
xchg
insl
hlt
inc
push
mov
jne
inc
mov
mov
cmp
sub
cmp
mov
loope
xchg
enter
add
mov
ljmp
aad
adcb
aam
sti
sbb
or
dec
mov
jge
test
sbb
out
pop
jne
mov
adc
sbb
xor
cmp
popf
inc
add
fistpll
std
xchg
das
je
xor
jmp
or
sbb
test
adc
inc
and
lahf
lds
inc
mov
lods
cmp
sbb
movsb
imul
sbb
les
jne
add
ds
aad
add
push
mov
xor
inc
dec
xor
ficomps
mov
cmp
push
lods
xor
xor
std
inc
and
or
add
movsl
push
push
rcrl
push
pushf
call
stos
ja
adc
repnz
inc
shrl
fcmovne
cmp
xor
mov
fwait
push
pop
insl
inc
add
mov
dec
sbb
mov
and
dec
adc
rclb
jg
or
adc
movsb
leave
mov
andl
cmc
add
cmp
pop
sbb
mov
in
mov
lea
repnz
xchg
cmpsl
pop
jmp
iret
sbb
subb
icebp
or
sub
xchg
xchg
sti
lea
flds
dec
les
clc
inc
sub
xchg
stos
xchg
adc
mov
scas
xchg
xchg
pop
mov
fs
mov
push
jmp
mov
mov
cwtl
inc
fldenv
cmc
test
dec
lret
lock
push
shll
nop
lcall
jnp
mov
jg
jns
rolb
lock
xchg
das
push
push
jnp
lds
adc
xor
int3
and
cmpsl
jle
shl
lcall
dec
loop
xchg
stc
je
sub
bound
pop
and
push
sbb
add
inc
aad
clc
adc
jecxz
dec
lret
xchg
cmp
pop
outsl
jno
cmpsl
mov
sbb
mov
insb
fcomip
call
ret
aaa
or
or
add
or
imul
inc
lahf
xchg
push
xchg
rol
ret
pushf
pop
jbe
mov
mov
add
or
enter
adc
dec
lret
or
jge
mov
mov
xor
outsb
hlt
fcoml
es
inc
sbb
jbe
dec
inc
xor
js
inc
shrb
xchg
dec
ret
dec
mov
fucomp
inc
adc
pop
jb
dec
repz
push
clc
inc
loop
inc
mov
jl
mov
ror
call
stos
xor
scas
push
add
negl
leave
push
push
adc
lds
mov
pusha
mov
mov
xor
iret
sub
pop
cmc
lret
int
fcomi
clc
mov
mov
fmul
inc
jl
push
add
push
jecxz
popa
xchg
xor
pusha
push
or
jne
or
mov
cmp
orb
pushf
test
or
mov
iret
inc
push
or
int3
test
push
loope
arpl
in
in
and
leave
or
ret
addr16
push
icebp
sahf
cmc
mov
ret
movsb
out
scas
fbld
scas
mov
subb
aas
adc
push
fimull
testl
int3
in
mov
outsb
adc
cwtl
mov
push
scas
loope
repnz
das
xchg
js
or
stc
jl
xchg
jb
pop
popa
aaa
pop
push
push
push
fs
push
dec
lods
sub
jmp
ds
xor
pop
jae
push
push
or
or
ret
mov
sbb
and
mov
sahf
scas
lret
dec
pop
mov
je
cmp
insb
testl
in
out
mov
inc
push
dec
rcrb
sbb
ret
ja
rcrb
xchg
mov
xchg
sbb
bound
mov
cmp
out
cmp
adc
or
enter
mov
inc
aad
movsb
js
xchg
mov
push
rcrl
je
js
sarl
pop
arpl
jbe
dec
push
inc
fistpll
mov
aaa
pop
ficoml
pop
ret
or
or
ret
mov
xchg
cmp
jo
sti
testb
adc
repz
push
sarl
jb
xchg
lcall
pop
xchg
push
sti
xor
push
test
iret
mov
out
xor
push
adc
hlt
aam
inc
test
icebp
shll
hlt
inc
int
mov
int3
adc
cmp
in
and
outsl
jno
mov
sub
dec
scas
push
jnp
dec
or
lods
push
in
add
mov
xor
pop
push
mov
lret
in
incb
mov
popa
cli
and
cmp
in
incl
insb
jno
loop
jmp
push
int3
pop
shl
call
dec
inc
jmp
cmpsb
jns
aas
adc
cmp
rclb
xor
subl
lcall
stos
aas
cmpsl
mov
jge
mov
mov
mov
mov
cmc
fs
adc
or
emms
movsb
push
sbb
mov
bound
adc
movsb
movsl
ret
dec
loop
cwtl
orw
fnstcw
xor
xor
jmp
icebp
mov
xchg
iret
xchg
mov
lret
imul
mov
ss
add
mov
adc
xchg
xor
nop
cmp
inc
lret
and
lahf
inc
dec
shrl
push
pushf
dec
hlt
lock
daa
push
and
cmc
lods
xor
scas
jae
loop
jl
jl
fidivl
icebp
push
add
xchg
rorb
adc
mov
mov
mov
fcmovne
mov
mov
push
daa
fnstenv
mov
out
pop
das
jo
outsl
insl
mov
push
pop
in
push
push
bswap
shlb
pop
pop
xchg
ljmp
in
cmpsb
push
leave
mov
or
pop
popa
sub
fxch
adc
push
addr16
int3
inc
xlat
add
imul
sub
cmc
ss
push
lods
scas
pop
pusha
sahf
ficoml
push
icebp
sarl
nop
xor
add
sub
rorb
mov
xchg
mov
scas
lds
in
jae
ret
sbb
dec
add
inc
mov
movb
xchg
mov
in
das
sbb
imul
cmp
scas
pusha
sub
dec
nopl
pop
push
test
xchg
fs
mov
int
scas
jnp
cmp
imul
adc
fwait
stc
dec
ljmp
mov
xlat
fdivrl
xorb
bound
and
jle
rcr
out
mov
mov
data16
testb
enter
sbb
mov
mov
ficoml
mov
dec
xchg
jmp
sti
lahf
subl
iret
call
jmp
imul
jge
imul
push
and
imul
dec
cwtl
iret
add
dec
adc
cmp
addl
inc
jno
movsb
fucomi
mov
ret
sbbb
insl
add
add
ljmp
mov
mov
lock
and
mov
sub
lea
cmp
sub
adc
insb
ljmp
popa
cmp
or
xchg
int
add
movsb
repz
add
inc
out
push
repnz
popa
jecxz
xchg
push
ja
daa
in
roll
int3
int3
lea
push
cli
lock
or
iret
loope
ror
aas
js
pop
jnp
mov
xchg
pop
push
inc
xor
dec
or
enter
jle
and
test
cwtl
mov
repz
gs
inc
jbe
je
and
and
testl
emms
out
cmpsl
mov
sub
mov
lahf
sub
orl
dec
cltd
jmp
push
or
xchg
lret
rcl
add
mov
ljmp
and
add
pop
jmp
and
xor
push
add
push
pop
and
and
pop
cmp
cltd
mov
sbb
cltd
sub
mov
mov
sti
jno
jb
or
dec
push
int3
jno
ja
dec
dec
lds
popl
out
pop
push
jbe
jl
xchg
cmpsl
stos
jge
sbb
subb
test
dec
jge
std
sbb
sahf
lret
inc
xor
ss
xchg
popf
dec
push
xchg
and
rclb
mov
fisubs
cmp
cli
sub
in
out
les
in
sbb
loop
mov
lret
and
ja
aas
jp
jno
fs
les
jbe
loopne
dec
dec
jg
mov
mov
xchg
aaa
les
sub
mov
pop
dec
or
out
xchg
js
inc
add
lods
xor
inc
add
repnz
mov
xchg
adc
inc
mov
fs
mov
lods
push
clc
sahf
push
xabort
mov
mov
jno
sbb
fisubl
arpl
push
nop
cmp
fcompl
lock
push
cmp
popf
test
xchg
inc
cltd
gs
sbb
leave
sbb
pop
aaa
pop
mov
iret
sbb
cmp
cli
add
cmp
call
cli
add
cwtl
xchg
dec
and
xchg
jbe
mov
ss
fildl
sbb
pop
xlat
pop
jae,pt
je
pushf
fwait
and
inc
cmpsl
aas
mov
pop
or
xor
lret
ret
push
fdivs
mov
mov
xchg
nop
jecxz
mov
cmp
test
sar
ds
dec
xchg
xchg
cmpsl
out
sbb
lcall
mov
mov
inc
push
rolb
sbb
xor
sub
jne
cltd
push
fwait
mov
mov
lret
jno
arpl
je
ret
dec
ret
outsb
ss
nop
xor
fmuls
pop
in
lahf
lret
push
mov
pop
sbb
mov
push
inc
xchg
arpl
sbb
add
jbe
sub
dec
loopne
dec
sarl
js
shrl
push
and
ret
test
jo
out
sbb
dec
pop
dec
dec
add
ss
add
and
fdivr
mov
ss
dec
cld
sbb
js
mov
addr16
xchg
enter
mov
jnp
xor
fldcw
stos
gs
hlt
and
aam
jge
lds
ljmp
push
fs
fnstcw
lods
out
jg
or
les
dec
push
inc
out
shrl
sti
nop
pop
std
fidivrs
jg
je
loopne
xchg
and
lea
bound
xchg
mov
out
pop
das
lcall
xchg
das
jne
dec
negb
out
out
cmp
jge
sbb
ror
mov
aaa
mov
sub
imul
jnp
sbb
inc
pushf
imul
jae
lods
jo
mov
scas
or
cmpsb
fst
popf
dec
out
dec
cmpsl
call
adcb
push
test
je
push
lea
loopne
cmp
sarl
fwait
push
jbe
adc
mov
in
nop
xlat
jo
adc
mov
jmp
shl
xchg
ja
xchg
inc
or
call
fcomps
hlt
and
fwait
jge
cmpsb
cli
add
scas
pop
push
scas
pop
les
xor
inc
pop
sub
dec
imul
jecxz
or
jp
adc
fwait
aad
cmc
repnz
dec
ret
popa
xor
loope
fadd
out
dec
int
ljmp
dec
push
shll
ret
loop
xlat
xor
pop
aas
jne
aam
insb
xor
ret
sbb
push
mov
sbb
imul
fiaddl
cmpsl
dec
lcall
inc
out
lret
loop
lahf
aam
in
jns
mov
sub
push
dec
ret
adc
cmp
in
mov
xchg
push
leave
mov
dec
in
adc
xor
aad
push
dec
movsb
jne
mov
subl
cmp
mov
jl
gs
mov
xor
out
sub
pop
clc
mov
dec
or
shl
inc
adc
scas
jecxz
jmp
popa
sti
lea
loop
outsb
fstl
movsl
lea
stos
pusha
cmp
gs
fs
jb
and
dec
or
or
and
lods
outsb
ss
and
xor
rcll
dec
cmpb
rcrl
or
in
nop
mov
sub
mov
mov
sub
movsb
jnp
outsl
cmp
stos
xor
mov
popa
push
dec
fcmovb
push
gs
jbe
popa
popf
hlt
mov
imul
ljmp
mov
std
clc
and
dec
cli
shlb
jl
xor
cmp
sbb
jge
out
aaa
ljmp
fsubl
jp
and
pop
jno
cmp
inc
iret
out
sub
mov
lods
adc
mov
cwtl
add
dec
sub
dec
jne
imul
or
or
int3
gs
mov
scas
loop
dec
sub
pop
sbb
pop
pop
dec
or
sahf
push
into
lahf
and
lock
clc
pop
gs
add
mov
sti
sub
jecxz
sub
frstor
js
jb
fidivrs
loopne
cmc
into
lret
ror
inc
jns
mov
and
cwtl
ljmp
push
mov
push
sahf
mov
inc
dec
xor
test
aas
cmp
jo
outsl
xor
adc
ret
aas
mov
sub
fistps
aas
ljmp
or
sahf
inc
sub
dec
push
cmp
pop
mov
mov
clc
inc
clc
xchg
cmp
mov
mov
and
push
sti
add
div
sub
clc
ds
push
ret
fildl
ret
loop
inc
dec
mov
inc
add
sub
loop
ljmp
mov
out
push
dec
in
pop
dec
adc
shlb
stos
jge
stc
outsl
jp
mulb
jecxz
mov
mov
xor
ss
or
outsb
jo
add
inc
inc
je
sub
or
jl
call
cmp
mul
xor
jp
fwait
inc
das
insb
and
aad
mov
push
xor
in
jno
addb
push
fstpt
pop
aad
dec
push
loop
stos
mov
out
cmp
into
and
lock
in
mov
jg
loope
mov
add
xchg
sub
das
mov
lahf
push
shl
mov
repz
mov
loope
xlat
dec
dec
data16
clc
bound
int
cli
cmp
lret
jns
push
jl
pop
push
add
and
movsb
enter
xchg
or
dec
std
sbb
pop
mov
xchg
fadd
mov
xchg
stc
jb
nop
cmp
enter
pushl
mov
pop
lods
jne
xor
inc
les
in
pop
mov
push
mov
xor
outsb
test
imul
and
adc
repnz
outsl
sub
lods
jp
inc
mov
inc
adc
cmpsl
mov
xchg
jmp
cmpsb
imul
sbb
subl
dec
push
repnz
fstpl
pop
sbb
out
out
mov
inc
ret
inc
adc
clc
jo
ror
sbb
dec
into
mov
out
or
addr16
push
xchg
sub
and
sbb
inc
pop
push
xchg
movsl
mov
aad
pop
lcall
cltd
loop
neg
lds
dec
fsts
movsb
adc
test
and
leave
mov
not
in
push
xchg
aam
fildl
andl
sbb
pushf
pop
test
js
fcomip
mov
fstl
sbbl
pop
popa
mov
xchg
jg
rorl
mov
mov
jns
adc
dec
jb
push
adc
xchg
dec
out
inc
aam
xchg
in
lcall
mov
mov
popa
adc
enter
sbb
data16
cmp
adc
icebp
xchg
push
lods
jbe
in
cs
push
leave
xor
jmp
icebp
xchg
jmp
repz
pop
inc
jne
mov
mov
in
adc
adc
xchg
mov
and
cld
leave
xchg
sub
jge
xor
enter
insb
xchg
call
pop
fildl
push
fcomps
mov
dec
sbb
jo
dec
test
and
mov
xor
xlat
aaa
add
pop
jle
repz
shrl
cmp
adc
and
fidivl
jb
mov
out
cwtl
jl
icebp
adc
icebp
cmp
xlat
pop
fs
add
add
cmc
or
insb
dec
xchg
or
lds
rorb
cli
lods
dec
outsl
mov
inc
pushf
ja
mov
xchg
hlt
push
xchg
lods
jmp
in
inc
xlat
icebp
cmpsb
push
sahf
adc
jecxz
fisttpll
lea
icebp
enter
adc
in
out
imul
mov
or
mov
xchg
xchg
or
dec
or
ret
xor
js
push
or
push
movsl
in
sti
pop
int
outsl
div
jmp
in
mov
and
mov
adc
sub
sbb
stc
aad
and
push
inc
addl
add
fucomip
clc
idivb
xor
xor
iret
gs
xchg
and
mov
in
dec
fstpt
fmuls
dec
push
fwait
inc
push
shlb
pop
jne
out
divb
push
pop
fisubrs
insb
mov
add
aas
lds
call
lret
mov
sbb
aas
mov
inc
insl
mov
mov
iret
adc
jne
push
roll
push
add
add
adc
outsb
sub
adc
mov
cli
mov
jae
xchg
ret
push
add
cmpb
mov
push
popa
movsl
add
mov
addl
cli
inc
mov
push
sbb
clc
dec
adc
push
push
jns
and
cmp
sarl
and
push
int3
pushf
hlt
or
mov
push
sub
stc
add
xchg
jle
andl
xlat
sub
mov
movsb
jge
adcb
and
pop
lods
jnp
rcrl
pop
mov
cmp
dec
cwtl
jne
leave
xchg
dec
rcrl
xor
inc
or
xor
mov
add
imul
movb
arpl
inc
mov
xlat
fwait
jmp
sarb
repnz
mov
sub
push
pop
jns
mov
xor
jp
pop
icebp
and
jmp
mov
out
sbbb
cmp
mov
arpl
adc
mov
insb
inc
jbe
enter
iret
xchg
xchg
aaa
ss
int3
pop
out
dec
mov
popw
fcomps
jne
int3
adc
mov
movb
jmp
cmp
push
and
mov
add
gs
dec
popa
fsub
xorl
mov
adc
xchg
and
fdivrl
stc
xor
add
sub
xor
xor
repz
pusha
mov
aad
movsb
nop
jne
enter
dec
arpl
data16
push
push
outsl
add
jl
jne
inc
push
das
pop
add
test
and
jno
loopne,pn
sti
lds
rcll
sub
out
add
mov
mov
fstpl
xchg
loop
jns
add
mov
jg
xlat
test
jnp
or
sub
ret
or
out
out
loop
dec
and
mov
js
and
pop
cmp
call
mov
xor
in
in
and
loop
sub
test
inc
lea
mov
sbb
jo
sub
aad
sbb
cltd
mov
rorl
mov
icebp
ds
filds
jl
aas
sti
rcr
jns
jl
xor
daa
fnstsw
add
jbe
mov
jp
dec
sub
and
mov
mov
pop
xchg
bound
ljmp
add
or
cmc
aas
inc
inc
enter
inc
ret
lahf
xor
mov
cmpsl
int
add
lods
fldt
or
adc
sbb
and
test
add
xchg
cmpb
mov
aad
and
pop
pop
inc
mov
pusha
pop
jbe
das
xor
mov
jl
push
lods
and
mov
in
pop
nop
jge
and
mov
in
out
pop
insb
ficoml
ljmp
adc
jns
cmp
mov
dec
adc
imul
and
jnp
and
jno
ss
paddsb
mov
pop
sub
pop
jecxz
test
jnp
test
and
mov
int3
fucomip
and
out
sub
dec
push
xchg
pop
repz
out
shl
push
arpl
jne
shlb
int
sub
mov
imulb
dec
cltd
sub
mov
inc
icebp
cltd
xchg
sbb
push
lea
inc
insl
mov
popf
test
adc
jbe
rol
andl
out
mov
pop
fdivrl
sar
pop
or
cmp
jmp
inc
or
clc
dec
sbb
pop
push
mov
and
dec
mov
mov
ret
xor
mov
inc
push
sbb
push
scas
sti
ror
push
stos
inc
inc
dec
xor
stos
adc
mov
fs
cld
push
jne
in
test
lahf
or
sbb
int3
pop
xor
gs
xchg
xchg
sar
mov
sub
xchg
cs
sub
rcll
dec
cmpsl
and
enter
push
enter
je
test
shrb
adc
pop
pop
out
into
adc
cmp
in
pop
in
pop
or
stos
jge
mov
inc
sub
subl
fsts
dec
fstps
inc
stc
mov
sub
inc
pop
popf
jg
shl
mov
mov
jge
loope
lods
cmp
call
leave
mov
adc
hlt
inc
xor
adc
jnp
xlat
mov
xchg
pop
mov
imul
and
sub
jmp
mov
push
lds
cwtl
lods
or
push
xchg
pop
adc
mov
scas
jb
cld
call
enter
or
jle
mov
or
icebp
les
sbb
gs
push
jns
call
push
dec
add
sbb
pop
inc
or
jg
cmp
or
mov
push
idivb
daa
enter
loop
test
inc
lds
stc
adc
shl
jl
cmpsb
addr16
xor
cmpsl
dec
xor
daa
xor
dec
ja
sub
mov
add
insb
xor
inc
inc
pop
insb
sub
lret
sahf
shll
pop
fisttps
cmp
pop
sub
pop
mov
fistps
data16
shll
out
iret
scas
lds
cwtl
jp
in
wbinvd
and
loopne
pop
dec
jge
inc
leave
cmp
push
adc
cmp
sahf
gs
push
sbb
orl
jae
sub
xor
pop
iret
mov
shrl
nop
xor
cmp
sahf
insb
push
cs
add
mov
cltd
ss
push
lahf
mov
sbb
push
cltd
mov
orl
xchg
jg
divb
dec
es
loop
es
pop
cs
insb
cmp
pusha
add
stc
adc
sti
lcall
frstor
xlat
fwait
push
mov
jle
sbb
mov
cmpsb
xchg
lret
push
push
adc
xlat
push
out
repz
push
mov
push
adc
jmp
loope
xchg
adc
mov
repnz
cs
int3
sti
enter
jl
mov
js
test
xchg
mov
fiaddl
mov
pop
lock
pop
lds
dec
scas
pop
shlb
pushf
inc
cmpsb
or
jnp
stc
or
add
icebp
das
mov
std
and
cltd
sbb
incb
fistps
test
clc
add
subl
cmp
rep
out
rcrb
mov
ds
stc
jle
mov
pop
je
push
push
xchg
mov
mov
iret
push
daa
jbe
add
leave
je
scas
inc
lahf
sahf
mov
arpl
mov
pop
xchg
sahf
cmpb
iret
push
cmp
and
stc
leave
ret
mov
ror
aam
sbb
arpl
mov
in
sub
pop
sub
pop
test
insb
out
and
sbb
adc
dec
push
mov
and
shll
mov
or
cmp
ret
out
sti
and
aaa
fstpt
cmp
cli
movlps
xor
incb
sbb
and
icebp
and
decb
daa
mov
pop
cmp
das
pop
loopne
sahf
mov
and
pop
sub
xchg
call
sbb
cmpsb
or
jmp
dec
inc
mov
adc
add
jle
fdivp
and
pop
cmp
js
pushl
icebp
mov
push
push
push
movsl
xchg
cwtl
gs
jle
les
int
push
addr16
aaa
or
mov
je
bound
icebp
ret
xchg
test
add
testb
mov
and
mov
aam
cs
cwtl
dec
shll
inc
mov
cld
aam
or
aas
add
ret
push
jecxz
mov
add
scas
div
sbb
call
inc
insb
xor
mov
and
inc
xchg
popf
push
push
mov
insl
pop
lock
sbb
pushl
dec
xchg
pop
jbe
mov
xor
cmpsl
aas
cmp
pop
pop
cmp
sbb
int3
test
and
loope
in
addr16
xor
leave
add
jns
jl
in
lea
mov
std
mov
fsubs
addr16
lock
test
mov
lds
inc
push
xlat
lcall
lods
cmpsb
iret
push
enter
pop
sbbl
out
mov
shrb
adc
addr16
mov
je
push
dec
pop
test
les
out
mov
dec
xor
lret
lds
dec
mov
sub
pop
hlt
test
das
testl
negb
sub
rep
sahf
xchg
pusha
andl
aam
into
scas
mov
xor
xchg
cld
pop
push
cmc
int
adcl
fdivl
pop
xlat
mov
cmp
xor
adc
roll
pop
ljmp
clc
mov
fwait
pop
dec
push
out
inc
mov
add
scas
or
cmp
insl
into
mov
shll
es
or
in
add
cmp
int3
xchg
lcall
sti
imul
cmp
dec
insb
dec
imul
loop
repnz
daa
push
xchg
dec
push
dec
mull
jb
xchg
movl
in
ficoms
js
fcom
add
mov
sarb
icebp
repnz
push
fisubl
jno
mov
dec
jno
push
sbb
add
ror
int
dec
int3
fstpt
sub
mov
push
in
mov
shr
xchg
loop
ja
ss
xchg
mov
lret
pop
cli
cmc
fmul
add
add
cmp
test
push
jmp
lahf
iret
inc
testb
push
aad
call
sti
leave
push
sub
adc
mov
js
jecxz
aad
sub
mov
cs
dec
mov
js
dec
lods
fidivl
dec
outsl
fldl
sub
mov
scas
inc
arpl
cmpsb
cwtl
inc
ljmp
aad
test
leave
jno
lock
test
les
loope
enter
push
push
fwait
push
push
push
mov
dec
mov
sub
jo
in
xchg
cmc
jbe
shlb
cmp
or
lcall
stc
push
dec
mov
pop
aam
lahf
push
jbe
fadds
mov
mov
mov
push
push
shrl
out
push
pop
cltd
scas
repz
add
cli
and
pushf
jg
fisttpll
sub
xchg
mov
fwait
cwtl
call
and
cmpl
pop
pop
xchg
das
js
pop
cwtl
or
pop
movsb
orl
jno
in
cmp
out
push
aad
add
adc
xchg
sbb
jp
ljmp
pop
xchg
jmp
mov
or
fnsave
ljmp
xchg
adc
mov
cli
rcr
fdivrs
cld
testl
dec
sub
jle
inc
lahf
mov
stc
jp
notl
jmp
adc
cmp
mov
idivl
xchg
or
sbb
push
lock
aam
cmp
xor
dec
push
sbb
lock
sub
mov
jbe
push
scas
repz
push
fiadds
movsl
jne
xchg
in
pop
scas
mov
in
mov
cwtl
dec
xor
dec
push
mov
and
adc
stc
cltd
inc
push
dec
mov
push
movsl
dec
add
inc
cmp
xor
dec
fcompp
jno
clc
sub
fsubl
xchg
push
cld
je
xchg
flds
jns
push
push
ss
or
sbb
xchg
inc
push
movsl
mov
jns
push
test
idivl
jmp
fwait
cld
jge
popf
outsl
fsubl
mov
lock
jns
add
cs
mov
in
push
jl
mov
xorb
mov
lock
mov
fmull
cmpsb
sub
inc
das
das
test
cltd
pop
cmp
xchg
add
dec
popf
jbe
pop
sub
test
xor
lods
mov
adc
sub
dec
mov
push
test
push
jb
mov
mov
das
clc
inc
out
loop
xor
mov
xor
and
cmp
mov
scas
or
ss
jns
mov
fdivrs
and
mov
fiaddl
or
dec
cmp
mov
andl
xor
add
adc
push
mov
mov
push
jno
pushf
dec
push
xchg
sbb
mov
add
pop
das
inc
lret
pop
adc
xchg
inc
or
xchg
kmovw
add
mov
rorl
shrl
xor
push
mov
xlat
add
jge
daa
fwait
cli
fcom
cli
aam
mov
pop
arpl
dec
push
mov
data16
movsb
dec
testb
jne
je
andl
fwait
xchg
pusha
jle
mov
cmp
int
cmpsb
lcall
loope
jg
movsb
mov
sub
xorb
stc
stos
mov
inc
cmp
xchg
icebp
popa
xchg
lret
add
xor
inc
xor
shrb
ret
mov
jae
jecxz
push
xchg
xchg
mov
ds
out
sub
jo
fidivs
jg
dec
mov
mov
sti
sub
sub
ror
add
clc
add
shrl
jne
xchg
jge
out
enter
jge
shll
cmpsb
fcom
in
das
daa
jecxz
cmp
inc
popa
shlb
maskmovq
divl
sbb
sub
mov
incl
test
jne
clc
or
inc
adc
dec
xlat
fwait
test
fwait
and
jo
dec
popa
push
iret
in
pop
mov
leave
sahf
iret
pop
pop
enter
fdivl
cld
adc
mov
xchg
lcallw
rorb
mov
pusha
cltd
mov
mov
in
lods
mov
xchg
pop
push
cmp
stos
push
or
jbe
and
pop
daa
jnp
sub
mov
pop
insb
pop
dec
clc
mov
xor
loop
pop
push
iret
sub
adc
mov
dec
sbb
mov
test
fbld
mov
cltd
out
pusha
sbb
and
sub
cli
shlb
push
xchg
jp
rorl
adc
stos
sbb
sbb
clc
mov
push
frstor
nop
aas
sbb
xchg
insl
test
mov
jmp
push
and
lods
ss
sub
fstl
or
or
push
test
out
dec
scas
ss
fdivl
adc
lods
cmp
pop
lods
or
adc
sbb
inc
dec
pop
push
push
mov
inc
out
clc
mov
lods
dec
cld
cs
dec
mov
dec
nop
popa
push
pop
cmp
dec
mov
mov
sub
pop
add
jae
or
or
add
sbb
stos
push
dec
mov
popa
test
cli
das
mov
mov
pop
ret
pop
push
cmp
mulb
mov
xchg
ficompl
pop
addr16
gs
pop
jns
fwait
cmp
push
fisttpl
sbb
inc
pop
push
dec
dec
push
pop
pop
fcoml
test
mov
jmp
mov
adc
mov
cwtl
div
test
data16
pop
dec
imul
dec
fimull
fimull
mov
xor
inc
pop
fwait
es
enter
cmc
mov
jo
push
stc
out
js
push
out
test
xchg
add
pop
imul
jbe
movsb
mov
lret
gs
sbb
and
sub
movsl
icebp
dec
cs
aam
stc
cmpsl
mov
out
cmp
ja
pop
mov
xchg
std
dec
or
pop
rcrl
sbb
jnp
leave
andl
mov
icebp
inc
negl
repz
inc
xchg
ret
subb
sbbb
aaa
and
push
xchg
test
pop
mov
add
add
jbe
fnsave
out
pop
test
xlat
cli
and
pop
pop
fstl
arpl
loope
loope
aaa
push
push
cmp
fucomi
sub
dec
xor
fdivr
fistps
sub
sbb
xchg
dec
cmp
scas
fbstp
cmp
je
leave
pop
xchg
and
lds
test
shlb
outsl
rorb
or
mov
std
push
out
out
les
imul
test
push
repnz
dec
out
sub
dec
jge
repnz
arpl
lret
lcall
and
jo
push
mov
cs
push
lock
pop
inc
inc
sbb
leave
inc
mov
dec
dec
lea
pop
fwait
lock
fsubrs
adc
or
fidivrl
xor
aam
popa
adc
cltd
out
cmp
divps
gs
rorl
and
iret
inc
insb
sub
sub
xchg
pop
jle
xor
lsl
jbe
arpl
fs
sub
mov
js
xorb
push
ljmp
xor
dec
shlb
adc
lods
aas
jo
enter
mov
mov
adc
fs
mov
sbb
push
inc
fidivs
stos
and
mov
mov
jl
xor
call
stos
das
mov
lcall
cmpsb
shll
fadd
dec
jbe
fidivl
mov
dec
dec
cld
das
push
xchg
cmpsb
lret
inc
leave
clc
mov
daa
jno
dec
repnz
lahf
add
into
mov
mov
arpl
xchg
mov
xor
cmp
pop
dec
push
es
in
jnp
fcmovnbe
dec
mov
add
je
movsl
cmp
stos
into
push
xor
hlt
test
test
addr16
jne
mov
adc
repz
xchg
jo
dec
add
rcll
sbb
andb
aaa
arpl
sbb
std
clc
inc
mov
jmp
insl
pop
fld
or
std
enter
mov
das
fstpt
sbb
jmp
dec
fxch
cmp
mov
sub
jae
xchg
into
push
mov
mov
and
push
xchg
shrb
push
dec
sub
sub
or
pop
adc
cmp
or
or
mov
lods
cs
or
xchg
adc
sbb
mov
das
adc
incl
dec
inc
aas
ret
in
inc
cli
mov
dec
in
test
jns
sub
pop
movsl
dec
mov
xchg
jge
xchg
stos
aam
into
in
sub
sbb
sub
dec
push
inc
xor
out
mov
notb
or
dec
icebp
pop
pop
mov
repz
xlat
sub
iret
xlat
mov
mov
adc
cmpsl
xchg
mov
subb
test
jecxz
cmp
xchg
gs
nop
aaa
dec
ficoml
mov
andl
pusha
jb
pop
and
pop
jno
pop
repnz
aas
sti
and
loope
imul
shll
inc
int3
mov
or
mov
aad
sbb
mov
adc
ficoml
xor
stc
dec
xchg
push
lcall
insl
push
arpl
adc
leave
jbe
mov
fwait
in
andb
jae
cld
pop
sub
inc
jns
mov
xchg
cmp
hlt
xor
xor
mov
xchg
ret
push
or
add
daa
inc
mov
lret
inc
and
dec
rorb
push
jbe
clc
or
fs
lcall
mov
inc
jecxz
mov
dec
or
test
iret
mov
popf
mov
mov
cmp
rcl
jge
hlt
iret
inc
adc
sbb
std
cmp
mov
movsb
fmul
pop
cwtl
dec
nop
rcrl
mov
xlat
xorb
inc
push
add
push
int3
dec
out
mov
stos
sub
mov
scas
movsb
movsb
add
push
dec
jbe
sub
mov
xorb
mov
or
test
inc
jmp
mov
mov
mov
mov
push
jnp
ss
out
pusha
out
rcr
and
stos
mov
pop
and
daa
cld
cli
jnp
inc
cmp
out
ficoml
inc
dec
inc
inc
dec
fdivrl
imulb
icebp
pop
push
cmp
outsb
xor
pop
inc
jae
push
in
jbe
nop
xchg
mov
das
cmc
and
cld
rcrl
inc
test
test
mov
arpl
push
sub
and
cld
popa
cmp
test
xchg
inc
or
fsts
cmp
mov
and
xor
push
sbb
out
pop
jnp
ret
popa
popl
push
jmp
cs
push
push
and
in
arpl
push
std
fwait
push
inc
lock
icebp
mov
mov
jecxz
sub
stc
and
into
andb
mov
insb
sub
imulb
sahf
insb
cmp
cltd
add
icebp
xor
pop
cmp
outsl
std
pop
push
scas
scas
ds
int3
mov
push
out
sarb
jmp
pop
push
mov
pop
cmp
sub
scas
lret
iret
fs
pop
dec
sbbl
out
sti
loope
pop
fbstp
push
icebp
mov
ja
dec
lea
sub
pop
dec
inc
mov
cmp
icebp
shrb
mov
insl
xchg
pop
xor
jp
mov
icebp
daa
inc
or
add
loop
insb
out
mov
les
arpl
fbld
mov
outsl
push
mov
popl
mov
in
clc
add
imull
pop
mov
subl
fstps
mov
xchg
jl
lahf
inc
fcmovnbe
aas
jge
pop
adc
cmpsl
pop
xor
inc
sahf
sub
fidivrl
xchg
mov
jae
cmp
lds
decl
dec
daa
pushf
movsl
shll
xor
loope
cmp
ljmp
jne
jg
stc
mov
into
in
jg
adc
ret
ds
test
mov
cmpsb
js
lcall
lds
add
dec
je
jmp
xchg
xchg
icebp
dec
add
out
shll
mov
jb
imul
ret
jno
sub
xchg
pop
mov
addr16
int
imul
addr16
dec
jg
in
dec
inc
stos
jecxz
sar
jl
xchg
inc
and
lcall
sbb
mov
gs
gs
imul
cmp
ficomps
lret
pushf
gs
ret
dec
in
or
add
pop
mov
add
repnz
add
sub
jne
test
dec
mov
jae
push
add
ja
aas
jmp
jne
iret
out
add
cmpsl
lret
out
jle
daa
mov
xchg
loope
adc
lret
mov
pop
push
stos
sub
shll
jge
dec
or
xor
xor
dec
imull
jp
sub
push
insb
pop
cmp
fs
and
popa
inc
or
int3
inc
mov
mov
rorl
inc
mov
dec
mov
mov
cli
or
jle
pop
mov
pop
jnp
cmc
sbb
xchg
jns
mov
les
stc
xor
pop
sbb
clc
add
jle
test
and
adc
call
mov
hlt
in
stos
stos
cmp
cmpsb
aas
sahf
dec
dec
lcall
xchg
out
out
fcoml
fcmove
subb
cmc
or
je
dec
push
pop
repz
xor
cltd
jp
push
pop
dec
mov
push
cmp
jl
insl
scas
aaa
adc
stos
mull
outsl
in
lret
and
mov
or
arpl
mov
cmpl
pop
test
cmpl
mov
xchg
fildl
mov
pop
imul
sub
paddusb
fwait
into
inc
call
orl
lods
shlb
jge
in
add
inc
loop
mov
sbb
je
push
sub
mov
or
aam
int
sbb
inc
in
fdivs
fs
xchg
call
hlt
xor
pop
cld
daa
adc
lods
rcrl
xchg
fbstp
insl
test
push
xchg
cmp
xchg
out
and
movsb
stos
call
mov
jg
in
mov
idivl
mov
in
dec
mov
dec
mov
xchg
lcall
stos
js
mov
mov
mov
or
fdivs
and
comiss
shrl
adc
loop
out
loop
mulb
fs
push
mov
ret
scas
test
aam
and
inc
nop
jns
int3
test
mov
sbb
push
lods
pop
and
push
cmp
test
test
dec
sub
movsl
dec
xor
mov
imul
mov
test
jo
or
addl
test
mov
and
inc
or
sub
sbb
bound
mov
push
out
dec
imul
xlat
lods
imul
test
mov
repz
into
cmpsl
ja
mov
loop
lcall
or
sub
clc
push
push
ret
and
pushf
js
sub
jbe
push
testl
adc
inc
mov
inc
cmp
test
in
aam
test
xchg
xor
sub
adc
clc
sub
rcll
xor
xor
xchg
add
inc
imul
jp
sbb
stc
xchg
lcall
xlat
pop
or
std
adc
inc
inc
subb
daa
cmp
addr16
push
movsl
xor
aaa
adc
pop
sbb
lret
sbb
dec
jmp
in
sbb
in
pop
cmpl
mov
mov
ret
sub
mov
add
jns
jmp
shr
dec
out
out
xchg
jmp
mov
push
outsb
mov
jnp
aam
push
jno
imul
outsl
jb
xchg
adcb
lcall
mov
imul
imul
mov
cld
add
or
add
mov
fwait
cltd
cmp
push
jo
les
and
adc
call
push
cmpb
out
push
loop
fcoml
adc
pop
mov
sbb
adc
mov
fisttps
pop
cmc
sub
inc
inc
loopne
nop
fwait
lcall
pop
decb
fimull
jns
loope
push
jb
lahf
jg
insb
into
or
into
loop
xor
insb
rclb
pop
enter
stos
ret
data16
mov
mov
sub
dec
and
add
add
pushf
jle
sbb
jecxz
movb
xor
pop
push
and
leave
lret
loopne
rolb
dec
leave
mov
push
cmp
out
mov
pop
les
cs
or
fistpll
add
cwtl
fisubrs
jle
fistpl
or
or
inc
les
push
pushf
jp
xor
test
jne
jl
pop
addr16
out
outsl
cld
push
dec
xchg
pop
push
mov
jns
andl
addb
leave
cmovae
aaa
or
out
and
mov
cs
pop
shrb
dec
mov
cld
or
icebp
subl
into
pop
sub
imul
cmp
and
hlt
sbb
popf
sub
and
in
lahf
nop
cmp
add
fwait
je
js
or
aam
imul
loop
push
pop
shlb
pop
xchg
pop
ds
ljmp
mov
cwtl
imul
sub
jecxz
mov
shll
jns
push
sarl
out
leave
inc
scas
mov
aaa
add
fucomi
cltd
mov
pop
pop
add
mov
fistpll
push
adc
mov
and
adc
cmp
bound
sub
es
cmp
adc
cmp
xor
mov
sti
int
out
es
sbb
fnstsw
ja
cmc
scas
mov
inc
mov
loope
jmp
scas
insl
enter
call
dec
call
bound
dec
into
push
mov
fwait
inc
ds
push
dec
lcall
scas
jl
pop
sub
jle
xor
popa
add
ret
xor
in
insb
and
and
dec
mov
jge
movsb
arpl
pop
mov
inc
add
mov
sbb
and
xchg
mov
test
sarb
inc
outsl
inc
xor
fwait
loopne
adc
mov
and
test
mov
mov
ja
add
sub
jb
out
dec
xchg
fs
cli
stos
mov
hlt
pop
add
jge
imul
out
out
pop
inc
adc
mov
cmp
xchg
jb
jg
xchg
fucomp
movsb
imul
shll
mov
adc
lods
mov
nop
sub
test
mov
sahf
jae
or
in
bound
pop
push
adc
and
sbb
pop
fadds
icebp
test
jno
ja
nop
add
ret
or
cltd
popa
test
in
icebp
xchg
pop
dec
and
clc
test
dec
jg
fsubrp
mov
shlb
xor
sahf
xor
stos
ljmp
push
jg
inc
scas
je,pn
dec
std
add
scas
cmp
pop
push
jecxz
filds
xor
push
jle
bound
inc
sbb
mov
adc
and
js
adc
lcall
mov
out
loopne
stc
jne
movsb
xchg
mov
mov
xchg
jecxz
fnsave
adc
cmpsl
stc
lcall
mov
add
adc
pop
imul
test
mull
cmc
rolb
add
cmp
adc
sbb
movsl
je
out
ja
mov
in
aas
sub
dec
insl
mov
cmc
ffreep
andb
lret
std
idivl
push
pop
push
add
mov
loope
enter
adc
mov
mov
je
stos
xchg
inc
mov
add
dec
push
ficoml
add
ror
dec
xchg
push
mov
jg
pop
leave
pop
mov
stos
sub
out
sub
dec
add
inc
add
sbb
filds
push
loopne
dec
jmp
sub
rcrl
sti
jbe
mov
rol
out
movsl
fwait
xor
out
cmpsb
aam
jno
sub
cmp
test
out
push
cwtl
cli
xchg
js
push
and
pop
push
mov
jns
pop
jg
mov
xchg
adc
out
cwtl
xchg
mov
inc
dec
imul
scas
call
shlb
sarb
inc
dec
push
clc
push
lahf
or
insl
dec
pop
push
mov
push
lret
inc
loopne
mov
xchg
out
xor
push
mov
movsb
inc
adc
xor
inc
ja
sbb
nop
jo
push
outsb
mov
mov
xor
repnz
add
push
dec
and
pushf
lods
xchg
jnp
push
jns
push
dec
mov
add
cwtl
mov
cmpsb
ss
and
jno
das
es
stos
repz
repz
mov
dec
ljmp
test
sub
and
lcall
ja
mov
inc
xor
inc
dec
aam
pop
pop
mov
push
mov
or
ret
ret
scas
leave
mov
popa
cmp
bound
clc
dec
clc
pusha
int3
mov
inc
add
insb
mov
push
xchg
mov
xchg
mov
push
dec
into
rcr
mov
dec
add
hlt
fistps
mov
insb
pop
sbb
jle
stos
out
sbb
mov
ljmp
jmp
add
ljmp
mov
insl
out
stc
xor
subb
pop
repnz
sbb
fadds
pop
arpl
imul
pop
rclb
mov
shlb
rorl
fisttpl
xlat
fstp
leave
add
sbb
lahf
mov
in
pop
xchg
mulb
pop
jmp
xor
inc
outsb
and
push
test
mov
mov
and
xchg
mov
cld
jno
push
mov
jge
hlt
push
insb
les
push
push
pop
jle
mov
pop
jae
test
fidivrl
xchg
in
lret
movsl
iret
movsl
in
xchg
in
pop
fsts
je
lahf
outsb
pusha
push
icebp
call
repz
ret
int
dec
mov
jno
dec
je
adc
popf
aam
cmp
xor
test
and
std
call
rcrl
addb
in
lahf
repnz
mov
mov
ja
add
sbb
mov
mov
es
xchg
sahf
das
pop
pop
push
mov
push
push
push
mov
aaa
je
std
and
push
and
popa
adc
ljmp
jno
sbb
dec
xchg
mov
sbb
jl
test
jge
fstpt
fwait
cltd
andb
jl
ror
lock
scas
jle
mov
sub
lock
mov
jnp
push
push
lds
cld
movsb
aam
jo
or
ds
jnp
mov
cltd
mov
xor
jge
mov
in
jns
outsb
popf
mov
pop
sbb
fnstenv
jecxz
scas
movsl
mov
fisttpl
mov
jmp
loope
test
mov
sbb
jnp
movsl
sahf
or
mov
mov
shl
jns
jae
int3
jge
adc
negl
cmp
out
fisubrs
xchg
jae
aaa
js
ss
daa
ss
out
movsl
jp
and
aaa
fsubl
loop
xchg
sbb
ja
dec
int3
fimull
inc
addl
sbb
daa
and
jecxz
cmp
dec
fwait
mov
mov
aad
insl
mov
lds
les
mov
les
faddp
push
or
push
out
push
ja
lcall
add
jmp
gs
xor
jp
add
inc
cmpxchg
cmp
gs
adc
or
shll
je
xor
pop
dec
hlt
dec
pusha
daa
push
cmp
push
aam
or
pushf
cmp
dec
stos
xchg
negb
jno
sti
sub
test
insl
pop
mov
call
aad
rcrb
movsb
jo
push
fisubrs
bound
pop
std
shlb
and
std
shlb
addr16
and
pop
pop
fld
repz
pop
loopne
stos
out
xor
roll
cmp
shll
out
mov
enter
add
jne
add
fisttps
insb
fwait
es
cmp
jle
mov
pop
jnp
mov
adc
out
push
xor
xorl
enter
mov
push
add
cmp
jge
sub
xor
cs
mov
loop
sub
in
cmp
icebp
in
and
sbb
jecxz
mov
test
inc
je
loope
inc
xchg
repnz
cld
loopne
dec
xlat
add
sbb
add
and
lcall
dec
inc
mov
sbb
mov
lock
xchg
xor
sub
and
ret
pop
cmp
aas
mov
out
jae
test
stos
xchg
lahf
jae
push
jmp
sub
scas
xchg
repnz
mov
mov
sbb
fs
data16
mov
fisttpl
sub
push
lahf
in
loop
cwtl
cmpsb
or
jae
add
or
iret
and
dec
xchg
adc
lcall
pop
and
addb
ret
push
outsb
mov
mov
xor
pushf
jae
testl
add
pop
mov
int3
mov
ds
scas
pop
or
add
mov
das
and
ret
rorl
mov
fistpll
mov
cld
icebp
mov
out
cmpsl
ret
subl
adc
cmc
cmp
pop
jns
cltd
pop
iret
out
and
xchg
add
jp
jle
xchg
lahf
out
push
mov
fadds
data16
xor
ljmp
mov
std
push
lods
cmp
andb
inc
in
add
mov
cld
orl
sbb
xchg
loop
mov
pop
push
mov
and
jo
dec
test
shl
sbb
insl
cwtl
dec
aad
push
cmp
jmp
in
push
adc
push
js
push
bound
dec
aaa
add
add
xor
pop
daa
pop
enter
sbb
stos
fdivrs
pusha
rorb
mov
decl
push
pop
out
lahf
jo
inc
adc
mov
add
push
shl
pop
inc
sarl
lea
in
test
pop
sti
leave
pop
in
xor
mov
sbb
ljmp
int
test
in
or
pusha
or
stos
add
mov
xchg
das
dec
cltd
in
ss
mov
or
jg
mov
in
sbb
jp
xchg
xchg
rorl
ret
test
in
cwtl
insb
cltd
dec
mov
mov
mov
insb
mov
scas
dec
call
loope
xor
jne
bound
push
dec
add
lcall
and
mov
mov
mov
movsl
dec
or
adc
psrlw
mov
or
sub
adc
insb
lods
incb
mov
pushf
ss
stc
add
insl
scas
aad
insb
or
push
mov
das
cvtdq2ps
subb
push
mov
leave
mov
add
jns
push
pop
inc
xchg
dec
ret
ret
inc
jno
sbb
jno
mov
add
negl
cld
cwtl
mov
shr
xor
das
leave
mov
or
sbbb
mov
mov
lea
push
and
sub
mov
sbb
mov
lea
in
hlt
stc
pop
sub
mov
mov
repnz
out
jno
sbb
insl
stos
aam
in
add
cmp
cld
in
mov
pop
nop
cmp
jne
dec
sti
sarb
and
inc
dec
mov
add
cmp
xor
rcrl
mov
lcall
mov
mov
push
jge
ja
and
out
fcomps
mov
mov
gs
pop
dec
negl
and
xor
jns
or
dec
out
inc
stos
das
inc
push
sub
sub
mov
sbb
mov
fstl
fbstp
mov
add
ret
aam
inc
mov
adc
and
lock
mov
adc
jle
sti
shrl
and
in
jmp
push
xor
int3
mov
or
lea
inc
movsl
roll
add
mov
lods
push
les
or
addl
das
or
loop
push
stos
popf
pop
fisttpl
mov
iret
sbb
cmp
dec
es
or
addl
xor
mov
push
sub
fadds
cli
stc
roll
sub
rolb
jae
sahf
data16
xchg
pop
adc
sarl
cmpsl
repnz
or
push
lea
lock
std
xlat
push
movsl
or
inc
mov
lds
rcll
sbb
sbb
inc
out
xchg
push
mov
add
pop
mov
push
pop
lods
pop
subl
ljmp
xor
popf
push
xor
test
jmp
inc
imul
mov
jno
es
es
popa
cmp
fadd
lds
negb
mov
imul
pop
jne
or
shl
rcll
lcall
and
xor
gs
jp
imul
push
push
dec
pop
mov
fldl
imul
daa
test
mov
imul
loope
in
lds
and
imul
je
lods
decb
add
or
lahf
and
rorb
aam
icebp
lcall
les
xchg
push
jb
push
push
fnstcw
daa
insl
mov
mov
jmp
pusha
loop
aad
or
sub
or
inc
xchg
inc
das
jmp
out
enter
and
movsb
xor
jb
addr16
popa
loop
xor
lea
fisubrl
mov
movsb
insl
cmp
xchg
into
adc
lock
lods
into
mov
dec
shll
push
lcall
repnz
movsb
mov
jmp
inc
test
loopne
inc
into
popf
xchg
pop
pop
mov
xchg
stc
std
xchg
inc
in
fcmovbe
add
mov
movsl
loopne
dec
aam
test
fdivrs
ucomiss
cmp
mov
mov
imul
cmp
add
xchg
inc
push
or
fsubs
clc
cmpsb
int3
adc
aaa
mov
xchg
push
and
ss
xchg
cmp
xchg
xchg
stos
sub
add
mov
cs
adcb
aaa
fnstenv
cld
cltd
pop
testl
loop
orl
jge
rcll
jle
adc
dec
add
fildll
fldcw
leave
cmc
xor
jns
movsb
imul
adc
aaa
fucom
int3
and
mov
js
data16
mov
rclb
rcll
call
movb
or
pop
and
or
cmp
adc
outsl
push
enter
mov
repnz
sbb
push
into
cmc
and
xchg
lahf
xchg
or
mov
and
xor
insl
mov
pop
dec
cmp
andb
and
lcall
or
and
adc
inc
rorb
shl
push
xor
or
leave
cmp
fucomi
mov
icebp
addr16
shll
push
setns
jns
and
jbe
xor
pop
and
add
test
cmp
outsl
test
push
rol
insb
stos
repz
or
mov
lea
in
fidivs
mov
mov
cmpsb
mov
cmp
insb
lods
add
xchg
lods
cmpl
sbb
arpl
out
leave
add
gs
jmp
adc
sub
imul
pop
lea
and
out
je
inc
adc
into
ss
insb
hlt
add
mov
xlat
or
lea
loop
mov
ret
cmp
mov
daa
xchg
inc
and
cli
call
push
bound
repz
sub
jle
push
xchg
sbb
jp
mov
mov
pop
hlt
outsb
in
mov
push
jns
adc
or
stc
mov
cld
mov
push
popf
cs
out
imul
insb
orb
jnp
add
fsts
xor
ja
outsb
in
int
adc
push
arpl
in
sti
jle
jp
pop
mov
sub
xchg
int3
push
pusha
les
pushf
loop
movsb
push
cwtl
inc
push
xchg
mov
xchg
adc
pop
dec
push
push
cs
sbb
adc
test
pop
outsl
mov
inc
movsb
scas
sub
shll
xor
imul
cltd
int
mov
xchg
sub
jle
jp
cmp
ret
stc
in
dec
pop
add
addr16
and
jge
pop
mov
insl
push
ffree
push
inc
adc
lahf
sbb
je
cltd
jge
mov
add
mov
xchg
or
jae
pop
sub
out
cwtl
or
popa
lds
sbb
daa
test
pop
jae
or
pop
and
psrad
pop
mov
ds
mov
int
push
bswap
shrb
fstps
subl
sti
xlat
cmp
push
pusha
xchg
push
incl
ficomps
shrb
inc
aaa
cltd
ret
aas
or
lods
addl
or
cmp
test
iret
or
popf
cmp
pop
cmpsb
mov
dec
mov
cli
out
push
dec
das
out
mov
movsl
cli
into
add
mov
sti
inc
xchg
pushf
pop
aad
fucom
cmp
mov
jno
mov
xchg
cmpsb
dec
test
lahf
cli
insb
cwtl
icebp
pushf
cmp
ret
std
mov
mov
xchg
and
insb
popf
cli
enter
or
jg
dec
bnd
inc
inc
mov
sbb
push
in
and
int
cmpsl
popa
cmpsl
iret
jb
push
aas
cmp
xchg
inc
gs
lods
ret
in
daa
call
movb
repz
jp
fisubs
mov
scas
les
inc
out
pop
call
cmp
call
clc
out
in
dec
repz
ror
or
adc
mov
push
pop
test
push
cmp
and
ja
test
popa
sbb
scas
les
jnp
test
or
insl
cwtl
xor
movsb
dec
mov
or
dec
cmp
shl
jns
loope
pop
test
mov
lahf
xlat
cmp
push
or
push
inc
jmp
pop
pop
or
loope
pop
sub
and
int
mov
cmc
push
inc
inc
rcl
jo
lret
mov
pop
pop
sbb
repnz
xor
dec
inc
mov
adc
inc
mov
int3
sub
cwtl
sub
out
pop
stos
into
aaa
nop
inc
and
pop
lods
repnz
cs
leave
jno
iret
cli
push
mov
inc
sbb
adc
dec
imul
je
mov
push
mulb
in
lahf
fmull
cmp
push
loop
push
push
cwtl
adc
rcrb
mov
and
fsubrs
and
pushf
repnz
in
imull
bound
push
add
pop
outsl
xchg
inc
mov
cwtl
pop
mov
dec
sbbl
adc
sub
cmp
cmp
popa
mov
fisttps
out
sbb
mov
pop
lret
push
jge
mov
jno
xchg
mov
mov
lods
testl
or
shrl
fs
rorb
adc
cmpsl
std
js
push
sbb
mov
lock
cmc
aas
aam
cld
and
pushf
xor
loop
or
inc
ja
fnsave
xchg
loop
cmpsl
inc
pop
leave
add
xchg
mov
lds
test
push
jg
mov
out
or
jp
scas
mov
repnz
lahf
sub
inc
xor
fisttpll
std
or
lcall
mov
pop
sbb
daa
testb
inc
push
gs
stos
pop
imul
xor
lcall
add
push
iret
mov
rcrl
ss
dec
mov
jecxz
sbb
xor
pop
adc
shr
and
jnp
push
pop
mov
test
ja
push
faddp
mov
test
or
aas
and
test
push
xor
inc
in
mov
jns
jmp
or
stc
filds
shll
sbb
call
sbb
out
pop
jge
in
sbb
sub
into
insb
xor
push
mov
pop
mov
dec
adc
loopne
daa
imul
dec
jp
adc
pop
add
enter
xlat
dec
mov
lea
mov
mov
jnp
dec
outsb
cmpsb
pop
ds
push
ss
push
dec
insl
mov
mov
out
add
sbb
mov
jnp
push
cmp
stos
or
sbb
push
fdivl
call
jbe
cmp
rolb
mov
out
push
stos
cmp
movsl
mov
push
dec
out
add
xchg
xor
dec
pop
in
pop
mov
xor
lahf
cmovg
shll
popa
pop
incl
scas
rolb
push
pop
iret
push
xlat
mov
jecxz
push
mov
orb
pop
ss
sahf
add
leave
pushf
nop
stos
inc
data16
jns
jbe
jecxz
in
push
leave
cmp
inc
mov
xchg
ficoml
xor
fisubl
inc
outsb
sbb
ret
insl
adc
mov
or
sbb
daa
inc
jnp
jmp
mov
lahf
cmc
fnstcw
push
mov
push
psubusb
aaa
fsubr
jmp
xor
inc
push
and
ss
enter
imul
ss
adc
outsl
sbb
mov
loopne
je
sub
or
sbb
xor
dec
mov
sub
cmp
cmp
lret
enter
mov
in
push
or
xchg
stos
push
and
inc
pop
mov
dec
sbb
cld
scas
or
mov
jno
ret
rcr
push
stos
outsb
xchg
cmp
mov
pop
push
cs
push
mov
loopne
pop
sbb
rcrl
pop
test
sbb
and
or
adc
mov
adcb
cwtl
adc
in
mov
push
insl
shrl
mov
inc
jae
cmc
xor
bound
jle
sbb
xchg
inc
nop
cmp
testl
dec
xchg
call
xor
xchg
aas
cmp
inc
stos
fwait
es
add
sbb
test
aaa
repnz
popf
lods
push
mov
mov
dec
sub
sbb
dec
xchg
or
push
mov
xchg
and
adc
push
and
push
xchg
mov
push
repz
adc
sub
push
data16
fidivs
mov
push
mov
outsb
adc
ss
clc
out
subb
or
les
add
xor
xchg
sub
mov
push
sar
push
push
adc
ja
push
cltd
xchg
out
jo
or
and
adc
and
dec
add
push
pushf
mov
xchg
and
lahf
out
data16
and
shlb
cmp
int
mov
lods
mov
fimuls
or
xchg
rclb
adc
scas
xchg
xchg
cmpsl
inc
mov
daa
ja
sub
into
stc
mov
add
xor
or
add
call
mov
cmp
jl
adc
loop
cmp
decb
mov
scas
je
lea
out
in
push
inc
enter
lods
roll
xor
out
dec
cli
test
aam
jp
jb
sbb
or
push
fisubl
mov
or
adc
jns
imul
push
xor
stos
pop
add
fwait
lret
mov
ljmp
ja
cmpsl
cmp
sub
xchg
sbb
mov
orb
mov
pop
call
orb
je
xor
jge
and
jo
das
lods
cmpl
add
push
lcall
sbb
jmp
pop
xchg
sbb
movsb
or
mov
es
jmp
pushf
ss
push
dec
sbb
movsl
jno
push
xor
cli
ljmp
push
ss
jmp
movsb
pop
add
jle
je
lods
fldenv
cwtl
ret
int3
leave
std
dec
aaa
sbb
popa
scas
loope
push
inc
lret
add
aam
bound
or
jbe
fidivs
dec
dec
stc
cmp
or
add
and
in
shll
sahf
movsl
popa
jmp
mov
jecxz
outsb
fldl
pop
mov
jno
mov
shlb
mov
mov
and
cmpsl
out
sbbb
xchg
and
fistps
add
cli
popf
gs
lock
mov
push
add
sub
aas
das
fsubs
lods
mov
pop
cmp
adc
cmp
out
add
sub
insb
outsl
gs
addr16
add
ficoml
sbb
push
xor
shld
fildll
mov
jecxz
testb
add
ljmp
xchg
xchg
pop
loopne
xchg
sbb
out
add
jno
xchg
fcompl
iret
cmp
mov
push
test
mov
pop
sbb
jns
mov
mov
jecxz
hlt
sbb
adc
out
add
aam
pop
decb
inc
mov
or
roll
test
pcmpgtb
fcmovu
jecxz
mov
mov
inc
cltd
test
cwtl
fstp
imul
fwait
jnp
lcall
enter
adc
or
push
mov
xchg
ds
jno
xor
mov
ret
add
rorb
xchg
loope
mov
pop
into
and
bound
aas
les
testb
rcrl
ss
pushf
or
xor
sar
cltd
stos
imul
cmp
scas
loop
leave
cmc
lock
jle
push
orl
jno
inc
jnp
sbb
outsl
jge
movsl
flds
add
inc
xchg
cmc
mov
jbe
and
add
or
add
fld
aad
jle
aam
xlat
iret
jbe
mov
pop
stos
aaa
cld
insl
push
add
arpl
dec
pop
repnz
lahf
cmp
adc
movsl
divl
xchg
test
and
xlat
mov
push
aaa
shrb
xchg
mul
adc
lcall
inc
sbb
pop
iret
jl
pop
insl
adc
pop
pop
or
mov
mov
insl
pop
mov
ret
jmp
jl
push
cld
cli
test
out
cwtl
dec
mov
xchg
leave
shl
jno
repnz
lds
push
add
adc
push
dec
jecxz
test
in
pop
add
push
scas
xor
xchg
aaa
jge
movsb
pop
jmp
push
fcoml
dec
push
push
push
shlb
mov
push
dec
jno
lea
movsb
ret
and
xor
fnstsw
out
repnz
xor
mov
lret
and
and
cltd
dec
sub
or
je
data16
inc
into
movsb
cli
push
xchg
fstpt
pop
xchg
mov
jns
test
mov
lret
stc
fidivl
sub
icebp
push
jne
dec
gs
xchg
subb
fmul
int
mov
imul
sub
push
inc
in
scas
xor
inc
ja
sbb
pop
cmpsl
enter
pusha
fistl
mov
sbb
sbb
mov
mov
js,pt
and
int
push
inc
pop
ss
xor
jae
icebp
in
sub
sub
fwait
add
and
mov
push
sbb
or
sub
bound
std
mov
stos
int3
push
movsl
lahf
dec
cmp
mov
popf
jle
ret
jl
xchg
adc
mov
repnz
mov
push
xchg
insb
imul
add
or
jmp
xchg
sub
dec
mov
lea
aas
sbb
mov
insw
int3
shrl
and
sbb
sbb
cwtl
shll
dec
sub
add
aaa
sub
lahf
insb
dec
xchg
xchg
ljmp
enter
jnp
insb
mov
adc
push
dec
push
fidivl
sub
cmp
cmp
mov
jns
adc
cmp
or
mov
enter
ljmp
mov
aaa
mov
aam
mov
cmc
pop
sbb
add
mulb
rolb
test
fisttpll
mov
inc
sub
push
stc
cmp
adc
cmp
xor
orl
mov
mov
fdivl
and
sbb
cmp
lock
xor
lea
iret
sbb
xchg
test
inc
lahf
or
ds
addr16
pop
mov
ret
sahf
fbstp
dec
adc
pop
add
jo
incl
stos
fldenv
and
sbb
ja
mov
cli
adc
cwtl
push
adc
mov
idiv
cmp
fyl2xp1
lods
dec
rorb
popf
pop
in
insl
xor
dec
icebp
cltd
aas
mov
lods
xorl
or
xorb
mov
mov
mov
dec
push
rcl
sbb
push
mov
or
fsubrp
enter
jns
add
faddl
mov
mov
mov
lds
dec
push
cmp
das
push
cmp
pop
and
addr16
cmpsb
sbb
iret
sbb
scas
jne
jp
add
in
mov
ds
pop
sub
jl
sahf
rclb
subb
jmp
call
dec
mov
lahf
fmul
out
sub
adc
add
fdivs
dec
cmc
cmpsl
xchg
or
add
lcall
leave
mov
outsb
insb
or
adc
mov
add
outsb
push
cld
testb
or
dec
cwtl
lods
out
pop
jae
sub
movsl
fisubl
jle
nop
lcall
xchg
aaa
scas
test
mov
xor
mov
sub
arpl
negb
xchg
mov
jp
jle
imul
sbb
mov
dec
stos
jge
push
mov
ret
inc
nop
xchg
insl
ret
dec
cmp
push
jl
pop
mov
dec
push
out
int3
sbb
push
cmpsb
clc
jnp
scas
cmpsl
jmp
cmp
pusha
fists
cmp
cltd
mov
ret
mov
out
subb
aas
cmpb
cmp
or
in
lds
or
dec
pop
mov
mov
jl
ror
pop
cmp
mov
mov
test
add
dec
in
inc
dec
ret
cmc
in
pop
inc
mov
into
jecxz
push
fldenv
inc
and
sub
xorl
sbb
pop
inc
push
outsb
add
lds
testb
adc
sub
lahf
mov
dec
xchg
mov
and
cwtl
flds
and
dec
stos
arpl
xchg
insl
loope
push
jb
inc
jp
push
fldenv
xor
or
xchg
sbb
add
gs
xor
mov
fs
cmpb
jp
push
sbb
les
and
mov
roll
pop
cmp
lods
call
mov
jg
pushf
stc
out
movsl
mov
mov
imul
icebp
mov
stc
mov
mov
mov
jne
jae
sub
sbb
sub
mov
daa
dec
jecxz
fwait
cld
out
loopne
mov
push
mov
sahf
push
dec
shl
aaa
push
daa
sbb
xor
out
or
imulb
fistl
call
xlat
xor
pop
jg
lahf
inc
cmp
sbb
in
mov
jmp
sbb
pushf
inc
ret
jae
pop
shr
loope
mov
adc
sti
pop
imul
in
scas
orl
cmp
jnp
adc
repz
cmp
adc
sbbl
das
jbe
jge
dec
mov
repnz
lock
insb
cmp
outsb
fistps
mov
fiadds
movaps
jge
mov
daa
mov
inc
sbb
ja
dec
add
cmpl
loope
cltd
adc
insb
cmp
add
test
cld
sbb
cmp
pop
mov
cltd
fstl
pop
das
add
rorl
push
sbb
jmp
loope
les
xor
sub
fiaddl
repz
mov
mov
movsl
mov
sbb
pushf
xchg
push
mov
mov
mov
subl
fs
or
fucomi
sub
fsub
push
mov
sbb
jecxz
adc
outsl
ss
cmp
mov
insl
dec
nop
shrl
push
push
aas
jae
xchg
lcall
xchg
daa
in
pop
jne
xchg
cmp
rcr
loope
jmp
sbb
popa
push
xor
jmp
sti
inc
or
pop
push
in
push
fmul
push
test
lea
cld
xlat
fidivl
mov
cmc
adc
cmpsl
fwait
out
or
adc
inc
test
jo
or
lods
addl
push
iret
gs
popf
add
addl
pop
xchg
in
and
and
sub
loop
inc
or
jecxz
or
pop
test
popf
cmpb
test
xor
lock
icebp
addr16
cmpsb
xor
push
push
outsl
sbb
adc
adc
push
mov
cli
ficoml
in
test
lods
xchg
outsl
mov
test
mov
cmp
dec
jb
jnp
xchg
sub
mov
outsb
push
push
xchg
push
daa
cwtl
or
xlat
aaa
sub
dec
call
pop
sub
loopne
jo
scas
bound
loop
mov
cmp
xchg
popf
mov
popf
cli
or
out
arpl
fcom
add
mull
je
push
imul
sbb
jns
pop
imul
sbb
xor
xchg
jmp
push
inc
push
andb
xor
aad
add
mov
loope
sub
call
js
xchg
sub
inc
loop
fidivl
repnz
data16
mov
xchg
jnp
xchg
repnz
dec
pop
xchg
gs
mov
mov
stos
gs
testb
inc
inc
testl
jg
test
dec
movsl
xor
sub
loope
jp
insl
aas
jecxz
stos
add
outsb
mov
idivl
and
mov
push
adc
sbb
dec
mov
popa
xchg
outsl
mov
xor
idiv
int
mov
dec
js
int3
daa
or
adc
sbb
shll
out
or
rcrb
scas
jnp
push
clc
int3
add
sti
mov
inc
sub
push
mov
push
inc
mov
pop
mov
lea
leave
mov
addr16
or
mov
int
mov
sbb
lahf
in
xor
pop
mov
repnz
je
jno
push
jl
jo
mov
lods
sbb
data16
jle
jmp
addr16
sbb
not
std
movsl
dec
inc
or
enter
or
imul
popa
ds
cli
mov
dec
clc
and
cmpsb
sti
cmp
out
aas
out
xchg
add
or
mov
jnp
shlb
bound
setnp
xor
pushf
dec
mov
cmpsb
clc
cmp
sbb
stos
cli
jmp
adc
add
mov
mov
std
lcall
test
loop
clc
push
arpl
sub
mov
popa
enter
cltd
jne
repz
xchg
es
adc
add
adc
movsl
pop
mov
imul
shlb
or
lods
fmuls
imul
lea
sbb
lahf
or
rcr
mov
std
push
call
test
out
daa
shl
dec
imul
cmpsl
mov
jb
out
mov
pop
rcrl
sub
aam
iret
xor
or
jle
arpl
sbb
jo
stc
cmp
sub
and
xor
cmpsb
push
mov
or
or
mov
dec
add
jbe
nop
mov
jnp
mov
add
ljmp
je
xor
push
mov
stos
cmp
lock
mov
xchg
push
jbe
push
scas
mov
loopne
adc
cmpsl
ss
or
adc
mov
adc
pop
subl
outsl
pop
dec
or
inc
insl
sub
inc
shrd
stos
ficomps
xor
jl
lahf
xchg
std
push
repz
pop
inc
xor
pop
and
xchg
arpl
es
mov
sub
fcomps
iret
lea
shll
movsb
dec
inc
pop
add
and
xor
cwtl
jecxz
ja
mov
aas
std
adc
pop
cltd
repnz
ret
clc
aad
in
mov
xchg
movsl
inc
stos
inc
or
js
insl
sbbb
dec
cmp
mov
pop
pop
xchg
inc
jo
sbb
mov
sbb
mov
daa
mov
sahf
out
jecxz
push
and
mov
xorb
mov
adcb
pop
sbb
idivl
xchg
jb
sbb
and
dec
into
rol
pop
call
xchg
stos
sti
inc
push
adc
inc
outsb
leave
iret
outsb
int
dec
and
adc
into
insl
sarl
cmp
mov
xchg
push
mov
out
das
ss
push
clc
push
leave
rcrl
repnz
fistl
cld
xchg
jl
push
fiadds
dec
mov
mov
mov
jno
cmp
test
xor
mov
push
add
out
jecxz
push
int3
enter
push
or
rcrl
push
sub
enter
or
lret
jbe
test
insl
mov
xor
lds
mov
aad
dec
xchg
les
leave
add
int
pop
pop
jno
movb
lock
cmp
cmp
adc
and
xorl
leave
sub
or
arpl
das
pop
js
jge
push
mov
stc
add
outsb
lock
mov
std
cmp
adc
das
jle
sub
fistps
lods
and
js
jl
sub
loopne
jne
hlt
mov
push
adc
jg
jl
push
cltd
cmp
ficoms
flds
js
iret
in
rcrb
dec
or
and
push
add
sbb
arpl
fwait
mov
aaa
dec
stc
adc
adc
aad
dec
jg
leave
fst
pop
loopne
imul
in
pop
adc
push
bound
mov
mov
xchg
lret
out
bound
iret
add
xchg
cs
jno
ss
mov
jp
into
xchg
pop
mov
adc
sbb
xchg
xor
outsl
inc
dec
repz
stos
add
xchg
jns
sub
into
and
imul
jle
or
mov
mov
push
mov
arpl
mov
mov
mov
leave
cs
iret
or
imul
xor
lret
mov
inc
mov
dec
sarl
or
or
faddl
dec
or
cmp
ficomps
mov
lds
and
cmp
and
sbb
sbb
mov
mov
and
and
mov
or
dec
jbe
clc
xor
inc
fldt
or
sar
jb
xchg
clc
lahf
mov
cmp
sbb
mov
mov
shll
mov
cmp
sbb
push
mov
or
push
mov
out
int3
rcr
stos
inc
mov
mov
adc
imul
xchg
mov
into
mov
cmc
adc
test
inc
pop
fadd
or
das
shrl
jle
or
inc
out
pop
in
inc
clc
stc
xchg
dec
mov
stos
ret
subl
pop
stos
mov
daa
fsubrs
fistpl
or
xlat
cli
pop
push
mov
xchg
pusha
jno
sub
and
cltd
jbe
adc
jb
mov
inc
ret
adc
les
cmpsb
xchg
ljmp
xorl
sbbl
enter
inc
repz
mov
dec
mov
mov
jp
mov
rolb
sbb
push
mov
xchg
out
pop
fdivrl
xor
add
adc
loop
jmp
xorl
and
xchg
sbb
dec
mov
js
je
call
jg
xor
mov
sti
xchg
cmp
or
sub
fmull
pop
and
add
cltd
rol
push
or
pusha
icebp
jne
cwtl
pop
sub
dec
aaa
loopne
iret
stos
insb
inc
mov
lret
xchg
in
xor
cwtl
inc
pop
dec
inc
cmp
lcall
mov
inc
push
push
pop
xor
imul
push
cmp
cmp
out
fwait
insl
mov
pop
push
loop
push
popf
jb
pop
cmc
sar
es
mov
repnz
fs
test
hlt
loop
jmp
movsb
pop
mov
out
inc
push
enter
rcrb
das
push
sbb
and
inc
mov
lret
cs
mov
adc
and
push
mov
add
stos
mov
push
iret
iret
fnstcw
push
in
scas
lods
lods
shrb
mov
lcall
mov
imul
pop
ljmp
dec
xor
subb
push
sub
jbe
hlt
repnz
mov
ja
pop
pop
inc
dec
dec
pushf
nop
sub
in
lds
loopne
inc
pop
and
mulb
mov
shll
push
mov
dec
testl
in
cmp
movsl
out
outsb
inc
shll
fisttps
or
xchg
xlat
pop
xchg
push
adc
je
sub
or
push
shlb
push
sub
and
jecxz
ja
lret
mov
icebp
dec
xor
adc
cs
shlb
xchg
sahf
cli
dec
loope
sub
stc
test
sar
shrb
inc
fwait
jno
push
push
mov
test
rol
cs
xabort
xchg
mov
hlt
outsl
mov
push
pop
push
gs
movsl
sub
inc
mov
adc
loope
xchg
xchg
pop
cmp
push
loope
rolb
add
lret
loope
shl
arpl
jmp
mov
out
data16
mov
fcmovnu
push
dec
sbb
mov
adc
daa
gs
mov
mov
dec
fbld
jnp
and
outsl
int3
jg
aas
jmp
mov
sub
out
inc
gs
out
add
cs
push
mov
shlb
mov
pop
loopne
mov
pop
push
bound
stos
fcoms
jo
xlat
jl
inc
test
pop
push
and
mov
inc
inc
adc
cmp
cmp
pusha
inc
jo
inc
das
sti
inc
iret
mulb
xor
ds
not
popa
fisttps
popa
push
sbb
and
add
jmp
mov
loopne
mov
xchg
pop
sub
and
jbe
dec
add
daa
xor
xchg
dec
roll
adc
aaa
adc
xchg
sbb
push
sbb
imul
cmpsb
mov
call
imul
scas
ret
and
lcall
pop
push
mov
dec
bound
jle
dec
mov
mov
pop
out
mov
lods
test
subl
imul
fnstcw
mov
lahf
pop
add
enter
jns
outsb
xchg
cmp
bound
mov
lods
mov
outsl
mov
push
pop
scas
jno
push
adc
lock
rcll
sub
scas
call
xor
adc
loopne
cwtl
cltd
ret
dec
out
dec
pop
xor
hlt
loope
daa
sbb
push
adc
mov
mov
pop
mov
mov
pop
push
or
or
or
add
negl
test
dec
or
fs
mulb
rcr
ret
sar
sub
lock
dec
aaa
xorl
out
bound
adc
mov
mov
enter
sbb
notb
fistps
and
adc
jne
jp
and
and
mov
pushw
js
sub
ljmp
mov
add
fnstenv
add
lret
sbb
cmpsb
in
pop
jle
cmp
paddd
adc
mov
mov
pop
xchg
mov
insl
out
stos
int3
mov
ds
enter
iret
sub
je
lds
adc
xor
jmp
push
popf
and
sub
pushf
mov
sub
pop
in
adc
movsl
sahf
inc
mov
data16
push
xlat
adc
push
movsb
aad
sub
mov
adc
cmp
sub
pop
adc
fucomip
xor
mov
push
mov
mov
in
negl
mov
pop
inc
roll
dec
xchg
pop
dec
cld
sbb
push
shll
or
cmp
jb
sti
data16
add
enter
jno,pn
cmpsb
push
add
pop
test
jmp
cmpb
mov
jl
mov
repnz
sbb
sbb
pop
movsb
sub
mov
and
dec
adc
int3
inc
adc
mov
sahf
repz
rorl
div
pop
std
sbb
negl
dec
es
js
pop
out
das
pop
mov
mov
cwtl
xchg
aaa
sbb
pop
mov
test
es
push
and
inc
sub
add
movsb
jmp
or
cmc
arpl
adc
aad
nop
lock
setns
jo
out
cmp
addr16
pop
out
pushl
push
push
lahf
push
cmp
movsb
sbb
fidivrl
add
sbb
pop
hlt
cmpl
pop
push
sub
hlt
cmp
test
and
push
lock
bound
int
sbb
icebp
mov
lds
adc
cmp
pop
mov
xor
fcmovnu
leave
cmpsl
neg
push
or
pop
pop
inc
mov
loope
dec
stos
xor
sbb
daa
movsl
sar
and
addl
movsb
jmp
push
mov
mov
je
cmpsl
dec
dec
add
lea
aaa
js
adc
and
cmp
xlat
and
es
repnz
fldenv
ljmp
lock
sbb
fwait
or
mov
scas
sbb
dec
xchg
dec
lret
cwtl
pop
cld
mov
xchg
mov
sub
mov
cld
imul
pop
inc
jo
mov
rorl
push
pop
inc
adc
loop
fld1
mov
in
jnp
add
sub
daa
mov
pusha
mov
adc
stos
jp
or
repnz
cmpsb
push
xchg
and
xor
push
dec
cmp
inc
push
dec
outsl
sbb
rclb
test
fmulp
add
sub
push
repnz
jne
test
fsub
or
xchg
hlt
xchg
imul
mov
adc
sub
sub
loopne
pop
mov
pop
sub
sub
and
fmul
int
xor
xchg
lret
xchg
jmp
xor
test
fs
and
pop
jno
ljmp
adc
add
xchg
pop
outsl
lcall
xchg
mov
adc
xchg
pop
adc
cmc
rcrb
add
fiaddl
sbb
xor
ljmp
pop
sbb
outsb
jmp
bound
mov
sbb
fidivs
repnz
ret
or
mov
lock
push
imul
insl
arpl
jl
not
in
mov
ljmp
insb
cmp
mov
imul
movl
xchg
rorl
mov
shr
jl
adc
cmp
sub
les
push
ljmp
dec
ljmp
push
sub
adc
jp
cmpsb
xchg
push
xchg
pop
lea
movl
call
scas
pop
movsb
or
daa
push
jecxz
into
adc
sarb
das
lcall
sub
fsubrs
lahf
dec
xor
jecxz
add
outsb
lods
into
sbb
movsl
jmp
cmp
inc
add
stos
mov
es
les
push
mov
cmp
lret
dec
sbb
or
pop
fstl
lock
dec
mov
cwtl
ja
pushf
shrl
cmpl
es
outsl
sahf
xchg
jecxz
rcrl
push
loopne
xlat
pusha
inc
sub
pop
daa
sti
or
insl
or
mov
andl
add
pop
jb
push
jbe
mov
stos
jmp
or
lcall
add
out
or
int
dec
js
int3
es
fsubr
jg
and
out
in
std
mov
mov
push
xchg
dec
mov
in
nop
sub
shrb
sarl
pop
mov
aad
xchg
ds
stos
pop
mov
pop
mov
mov
pop
repz
ljmp
xchg
adc
mov
jmp
bnd
mov
insl
shrl
in
jns
sbb
jno
aas
test
sbb
push
fcmovne
add
call
pushf
dec
lcall
pushl
xchg
cmp
lahf
xchg
cltd
adc
xor
xchg
xchg
push
jno
das
loop
clc
or
push
jae
jo
cmp
jns
cmp
imull
negl
sbb
mov
inc
xchg
mov
pusha
mov
jge
push
mov
out
mov
push
jno
lock
jecxz
sbb
clc
dec
inc
xchg
aas
fidivs
mov
out
stc
inc
cltd
les
xchg
inc
hlt
mov
adc
adc
jmp
or
pop
jnp
roll
jno
xor
jae
push
push
ret
cmp
xlat
jge
mov
std
mov
mov
int
and
sarl
dec
inc
push
das
push
in
pusha
scas
roll
test
aam
arpl
bound
call
cmc
bound
cs
fcoml
aas
mov
cmp
rcll
orb
les
loope
mov
stos
xchg
mov
cmp
cmp
out
xor
imul
jl
ret
sbb
scas
loop
push
xchg
pusha
sbb
sbb
fdiv
leave
nop
sbb
inc
push
or
xor
cli
nop
ja
nop
xor
dec
mov
aam
jae
pop
jno
mov
shrb
fbstp
pushf
shlb
dec
mov
pop
adcb
jmp
ljmp
cmp
xor
std
jae
loope
call
call
add
sub
jo
bound
stos
xchg
in
dec
push
lock
out
mov
aaa
dec
shll
in
mov
sbb
xor
pop
aad
outsl
dec
and
jae
hlt
cmc
loope
adc
cwtl
popf
pop
jl
pop
lret
pushf
pop
std
jle
and
and
hlt
in
insb
out
fisubrs
mov
xchg
and
repz
inc
lods
imul
lss
es
xchg
adc
push
jl
xchg
mulb
xor
aas
inc
int
cmp
rcll
push
aaa
lods
mov
mov
mov
shrl
push
jle
ss
out
sbb
fstps
lea
daa
bound
sarl
mov
add
jmp
sbb
adc
sub
lock
jecxz
jge
std
arpl
mov
mov
scas
pop
push
fnsave
cmpsb
lods
xchg
and
je
sarb
testl
loope
fmul
inc
fidivs
xor
xor
and
sbb
hlt
sbb
xor
jecxz
scas
imul
and
sbb
cld
xchg
pop
cmc
sbb
sbb
pop
into
in
pop
push
arpl
fidivs
imul
mov
roll
cmpsl
fsubs
aaa
ss
push
ss
imul
testb
xchg
hlt
mov
sbb
scas
test
ds
jle
or
inc
bound
jmp
and
push
enter
in
mov
bnd
mov
fildll
scas
out
and
adc
in
and
nop
mov
fidivrl
dec
into
push
jno
sbb
jns
jge
frstor
mov
inc
cmp
jmp
faddl
add
stos
jp
clc
sbb
adc
push
insl
jnp
imul
scas
lods
cmp
pop
pop
mov
stos
inc
call
sbb
stos
inc
push
dec
rcr
or
push
xor
pop
fstl
rol
mov
sahf
sbb
mov
bound
mov
in
cmc
push
insb
xchg
ja
mul
lock
dec
rorl
cld
lret
in
clc
jle
repnz
andb
jb
push
dec
mov
mov
and
lods
repnz
lods
dec
lods
test
mov
nop
sub
sbb
cmp
les
lea
aaa
xor
xchg
lret
loope
mov
ds
xor
ret
jp
xor
mov
cmpl
pop
das
pop
inc
mov
mov
add
pushf
ficompl
ja
daa
pusha
push
fisubrl
test
andb
mov
pop
into
stos
mov
and
int
or
sti
leave
ds
push
cld
imul
imul
pop
loopne
jp
out
mov
popa
jns
pusha
adc
andb
cmp
mov
stos
inc
out
sub
push
dec
adc
adc
xchg
daa
or
dec
fadds
mov
test
add
push
xchg
outsb
and
mov
xchg
inc
in
cmpsl
orl
test
dec
cmp
push
mov
dec
jmp
pusha
out
pop
jge
push
push
ds
add
cmp
enter
shlb
push
xchg
adc
mov
mov
fstpl
jmp
inc
shr
aad
addr16
adc
cmpsl
add
lds
mov
adc
jge
pop
sub
popa
pop
addr16
mov
jecxz
fucomip
or
loope
xchg
push
push
cmp
pop
fidivs
or
fcmovb
mov
cmpsb
and
cli
call
sbb
into
push
insb
mov
fidivrs
mov
stc
loop
xchg
stc
imul
out
das
lret
imull
push
scas
push
adc
push
or
movsb
rcl
int3
lret
repz
mov
pop
xchg
lcall
push
pushf
sbb
ret
popf
xlat
xor
push
lods
sti
and
push
aad
mov
and
push
mov
out
xor
adc
xchg
stc
arpl
pop
shr
cli
inc
inc
or
xchg
or
sbb
fdivr
dec
inc
rcll
mov
xchg
jbe
xor
leave
mov
cli
lock
adc
cmpsl
pop
dec
push
out
fsubrl
imul
sahf
xor
mov
decb
out
sbb
sbb
mov
jnp
xchg
enter
xor
insl
lahf
in
push
pop
dec
push
daa
adc
hlt
or
or
jecxz
push
push
sub
in
jg
ret
out
and
mov
push
or
xchg
inc
mov
ret
mov
fs
mov
or
mov
jne
imul
pxor
add
cmpsb
jp
enter
lock
pop
mov
adc
xchg
push
and
and
fs
pop
mov
jnp
scas
sbb
arpl
sarb
xor
mov
cmp
sub
dec
xchg
fwait
andb
push
jne
js
or
sti
xchg
or
cwtl
dec
jecxz
mov
add
dec
adc
sub
fwait
and
push
cmp
movsl
xor
ljmp
fcmovnu
shl
ljmp
push
mov
push
mov
sbbl
pop
aas
cmpb
mov
test
mov
out
stos
arpl
lock
mov
cld
xor
ret
ja
sbb
call
mov
pop
xchg
jnp
mov
sti
pop
jp
jge
cmp
sbb
aam
je
in
or
sbb
fisttpll
rclb
or
sbb
ljmp
add
inc
sbb
mov
sbb
cmc
fstpl
xchg
sbb
sbb
clc
sub
insb
std
xchg
dec
xlat
xchg
sub
js
in
aas
mov
fld
jae
pop
stos
push
mov
das
dec
in
andl
push
lods
hlt
lret
call
pop
shrl
xchg
or
ficomps
lret
mov
jecxz
out
mov
int
into
pushf
dec
fcmovu
xor
cmpsb
lcall
imul
je
aas
sub
push
mov
daa
dec
out
add
in
mov
adc
jbe
jae
sbb
and
push
dec
js
xor
sar
idiv
mov
les
dec
pop
mov
lods
push
hlt
pop
mov
iret
cmpl
mov
call
or
pusha
aad
jo
popf
test
sub
adc
ret
sbb
push
aaa
and
andl
pop
add
notl
sbbl
add
sub
mov
cli
push
loopne
sub
adc
popa
mov
je
jp
dec
lcall
cmp
call
xor
fisttpll
stc
in
dec
fnsave
mov
test
push
pop
xchg
hlt
aad
mov
loopne
fnstcw
movsb
data16
in
outsl
ss
mov
dec
mov
or
inc
gs
sarl
sub
test
and
adc
cmp
mov
pop
or
inc
sub
out
sub
jb
cmpsb
int3
andb
jnp
or
xor
in
pop
xchg
mov
xlat
push
iret
adc
adc
ret
pop
pop
push
sti
test
test
lds
cmp
ffreep
xor
ret
xor
jae
loop
inc
rol
and
aaa
jg
sub
adc
mov
push
inc
repnz
stc
out
popf
stc
xor
jl
pop
mov
je
dec
inc
imul
shl
mov
xlat
inc
dec
fisubrl
dec
and
mov
mov
mov
ret
pop
jle
insb
hlt
and
cmpsb
imul
mov
xchg
sti
idivb
adc
ja
dec
sbb
xchg
jmp
push
dec
pushf
sahf
adc
bound
subb
mov
push
jmp
shll
inc
inc
pop
shrb
fisttpll
pop
lahf
xor
add
xor
fwait
jns
ss
pushl
bound
lcall
in
ret
dec
ljmp
sub
fs
cmp
mov
aaa
mov
nop
dec
fidivl
shl
xchg
push
lcall
push
daa
mov
pusha
add
xor
cmp
mov
xchg
fidivrs
xchg
bound
es
pop
jns
add
fisubrl
pop
lea
sbb
mov
test
shll
stos
int3
mov
aaa
sub
imulb
in
addr16
pop
fwait
push
mov
out
out
int
jae,pn
scas
insb
sbb
mov
data16
dec
xor
lods
in
mov
mov
jnp
lret
addr16
dec
js
adc
xchg
jl
push
ds
pusha
mov
xor
mov
jbe
push
cmp
cmp
adc
mov
das
aaa
imul
lds
ja
imul
mull
iret
mov
xchg
orb
push
and
aad
sub
inc
mov
fimuls
call
dec
je
inc
mov
inc
cmp
or
xchg
adc
mov
adc
inc
repz
mov
das
add
cmp
mov
std
scas
fistpl
cmp
xchg
daa
cmp
sahf
andb
loop
and
sbbb
and
into
fsubr
sub
mov
cmp
fwait
adc
add
outsl
and
adc
cli
mov
ret
lea
icebp
bound
out
pop
stos
lock
enter
test
cmc
add
lds
pushf
cli
push
les
sbb
xchg
paddw
and
lock
mov
subl
xchg
sub
push
jp
rdtsc
int3
int3
mov
outsb
add
xor
cmp
push
cli
stos
adc
xchg
arpl
mov
pop
fidivrs
inc
nop
cltd
add
and
aas
dec
lret
jge
xor
push
popa
sbb
in
sbb
int3
push
int
int
scas
ret
pusha
mov
cli
sti
fistl
xchg
push
adc
cmpl
push
dec
loop
pop
push
mov
mov
shll
sub
outsb
gs
jns
push
into
and
lds
adc
sbb
enter
test
adc
xchg
inc
pop
and
inc
add
mov
rcrb
sahf
inc
in
sar
lret
cmc
imul
pusha
repnz
jb
jmp
lods
fcoml
jge
fidivrs
mov
dec
aam
call
pop
mov
fadd
ficoml
mov
push
stc
inc
jns
push
std
mov
call
pushf
dec
sbb
jne
xchg
or
fisttpll
jnp
out
dec
jb
in
and
mov
ret
test
out
rcll
add
add
cld
int
outsb
nop
push
rcrl
ljmp
mov
aad
test
push
in
push
shl
pushf
mov
ret
and
dec
and
adc
sub
fsubrs
hlt
lcall
xchg
inc
sahf
mov
xchg
mov
jmp
mov
or
out
lret
ret
xchg
lods
jns
cmpl
add
lahf
mov
std
jg
sub
ljmp
pop
hlt
adc
add
mov
iret
imul
push
jae
or
decl
xchg
mov
cmp
pop
clc
testb
mov
push
cltd
repnz
inc
sbb
bound
mov
or
push
sub
cltd
sbb
mov
pop
int3
or
mov
fisubrs
jg
cmp
out
jne
stc
test
xchg
dec
clc
rolb
leave
and
push
cs
mov
fmul
scas
cmpsl
inc
xor
adc
mov
xor
enter
sub
mov
je
jo
sbb
pop
std
out
push
movsl
add
scas
inc
sbb
movsl
jecxz
movl
in
xor
stc
sbb
push
push
pop
xchg
push
push
mov
jl
xor
repz
dec
mov
std
loop
push
gs
int
jmp
out
xorl
gs
jnp
and
push
out
mov
leave
rcl
jo
inc
out
dec
mov
inc
mov
and
shll
cmc
xor
into
jae
int3
xor
or
roll
scas
test
mov
int3
fwait
xchg
js
push
dec
push
test
jno
cltd
cli
pop
push
mov
clc
jns
cmc
arpl
mov
out
into
add
notl
outsb
add
repz
push
in
or
pop
push
lcall
jecxz
aad
cmp
imul
sbb
insb
sbb
dec
test
inc
loopne
sub
jns
inc
jge
pop
cmp
sbb
js
jbe
rcrb
mov
jae
dec
add
fwait
out
pop
sbb
adc
leave
mov
mov
popl
jo
arpl
ficomps
je
or
test
stos
pop
jmp
faddl
je
push
inc
mov
cmpsb
cmp
fisttpl
xchg
lods
cmpsb
push
out
loope
sub
fsts
mov
sbb
cmpsl
stc
cmpsl
pop
jno
loope
mov
xchg
dec
xor
push
xor
cwtl
cmpsb
aam
iret
cltd
pop
mov
or
pusha
push
xor
je
cmp
movsl
call
lds
jne
mov
mov
add
adc
imul
push
mov
mov
mov
fwait
sbb
cmp
mov
inc
ja
inc
jnp
shll
mov
mov
mov
and
mov
cmp
mov
jne
dec
lret
pop
or
loop
xchg
sub
or
xchg
and
inc
cmp
ja
fistps
ljmp
cltd
push
js
jns
lods
mov
mov
fidivrl
out
not
pushf
addr16
cmp
dec
push
repz
in
test
jo
and
dec
and
sbb
jl
dec
fistpl
aas
mov
or
notl
enter
mov
xchg
mov
cmpsl
cmp
pop
cld
dec
and
shr
push
push
popa
mov
int
mov
jecxz
xor
clc
xor
cli
sbb
sub
mov
push
inc
sub
insl
cmp
out
inc
pusha
xor
mov
xor
cmc
mov
stos
sbb
add
push
lds
mov
sti
xchg
movsl
dec
cmpxchg
xchg
addr16
les
dec
jecxz
stos
sub
jge
clc
loopne
sub
add
repnz
loope
xor
adc
lahf
add
je
outsl
test
sahf
jns
add
pop
xor
push
popa
ficompl
popf
ss
add
xor
pusha
jecxz
push
sbb
inc
sbb
xor
adc
fistl
jecxz
out
push
xchg
jecxz
dec
lods
or
stc
out
cmp
and
xor
fcompl
aam
lds
mov
test
mov
enter
push
sub
repnz
imull
mov
jge
sub
mov
jne
xchg
fwait
and
mov
shlb
jnp
mov
xor
imul
dec
add
mov
cltd
jl
lock
push
fistps
loope
lods
pusha
sub
mov
ljmp
lahf
stc
sbb
cld
cmp
in
or
popa
push
mov
xchg
lea
icebp
pop
push
stos
lgs
push
addl
repz
jmp
mov
sbb
sbb
jbe
out
sbb
stc
ds
add
fcoml
add
sub
or
dec
inc
push
rcl
add
xchg
dec
lret
sub
push
stos
xchg
mov
mov
add
cmp
jge
jle
push
stos
rorl
idivb
jno
dec
shrl
aas
shr
lods
pusha
lods
xlat
and
call
mov
dec
sbb
add
mov
ror
cmp
aaa
pop
cmp
jns
jmp
sub
ret
mov
pop
ss
adc
push
into
sbb
or
sub
ret
bound
xor
pop
pop
push
and
outsb
jle
out
xchg
jp
or
ljmp
call
push
ss
gs
pusha
sbb
mov
mov
sti
test
out
dec
outsl
xor
ja
inc
sbb
addr16
je
sahf
loope
pop
cmpsl
fildll
sbb
shl
repnz
cmp
js
jmp
pop
jae
push
ret
lods
push
xor
bound
fists
hlt
hlt
xchg
fnstsw
mov
xchg
fmuls
push
rcrl
outsl
int3
xchg
push
sbb
mov
dec
stos
sub
xor
fwait
in
js
rolb
rorb
adcl
in
stos
cmp
mov
into
mov
fldl
cmp
mov
rorl
mov
pop
adc
or
mov
cmpsl
sub
jne
sub
inc
repz
or
push
push
negl
fdivs
fs
gs
aad
add
scas
dec
insb
hlt
mov
in
lea
sub
outsb
nop
lret
idivb
mov
mov
mov
clc
fucomi
jl
mov
xor
jne
mov
sub
inc
mov
push
sbb
rcrl
nop
push
ja
push
out
adc
mov
jbe
or
fistl
shlb
stc
std
and
and
mov
mov
and
and
jecxz
scas
imul
pop
std
leave
jle
scas
push
jns
push
pop
xchg
xchg
movsb
fidivs
pop
or
add
int3
mov
mov
pop
sub
lods
cmp
fdivl
in
mov
cmpsl
aaa
pop
fisubl
push
test
sub
cli
cmp
out
add
jne
push
jl
adc
outsb
adc
imull
jle
shr
xchg
clts
into
iret
mov
mov
sub
dec
lahf
gs
das
out
fistpl
mov
xchg
or
test
pop
fwait
ret
aad
outsl
incl
fistpll
inc
xchg
adc
xchg
inc
cmp
outsl
int3
push
ds
call
mov
stos
scas
test
push
add
loopne
xlat
inc
dec
pusha
mov
mulb
and
scas
cmp
and
push
xchg
sub
inc
out
repz
and
jno
gs
cmp
dec
or
notl
xchg
fnsave
xor
adc
cmpb
scas
mov
or
cmp
rclb
mov
lret
push
cmp
push
push
aad
dec
into
adc
lock
cmp
dec
sub
movsb
mov
pusha
xor
push
jne
dec
xchg
js
test
mov
cmp
or
mov
sub
mov
fwait
pop
fldenv
cmp
rclb
sbb
rolb
in
ror
rclb
lcall
dec
test
push
xchg
lret
mov
xchg
into
or
cli
into
idivl
inc
ljmp
cmp
popa
jae
gs
mov
out
cltd
push
pop
cmpsb
dec
pop
enter
iret
and
sub
mov
shll
add
enter
cmp
jp
or
ret
mov
rorl
sbb
shr
jnp
cmp
movsl
and
mov
cmp
push
mov
es
rolb
mov
mov
in
cli
push
mov
cmp
xchg
lea
mov
cmp
fwait
jecxz
movsb
lods
stos
xchg
and
cli
inc
outsl
divb
mov
cmp
pop
cmpsb
in
popa
xor
inc
call
sub
daa
out
dec
jge
and
mov
jbe
mov
lds
incb
aam
pop
jno
iret
hlt
sub
push
inc
lahf
lahf
inc
mov
dec
ret
pusha
shrb
xchg
call
lahf
jg
leave
dec
ficompl
sub
fmull
xor
stos
adc
xor
jecxz
test
cltd
jb
test
pop
in
jns
or
stos
or
push
mov
jge
mov
sar
xchg
xor
xor
pop
sbb
xor
mov
mov
add
test
pop
bswap
mov
rcl
pop
rcrb
xorb
inc
or
adc
sti
inc
cs
pushf
or
stos
dec
push
iret
dec
jno
fldl
xchg
repnz
jae
pop
ja
iret
insl
sub
lea
push
xor
jae
jecxz
rcrl
in
add
int
mov
cmp
popa
lock
subl
imulb
ljmp
std
mov
push
iret
add
push
stos
dec
pushf
test
div
aaa
mov
inc
jb
sub
cld
xchg
or
mov
gs
push
cmpb
sbb
les
mov
push
inc
lcall
xchg
aas
xor
movd
lahf
call
mov
popa
xchg
push
adcb
lods
out
daa
out
and
repz
fisubrl
push
mov
imul
ja
xchg
sub
add
or
iret
sub
adc
jmp
shrl
iret
lods
daa
cs
jmp
aam
enter
jl
xor
insb
xlat
sti
sbb
clc
mov
xchg
inc
or
jns
push
out
pop
imul
mov
sub
mov
je
test
aaa
dec
in
out
or
fs
mov
stc
xchg
loope
lret
xchg
push
int3
dec
sub
pop
push
pop
lods
jb
push
rcrb
nop
pop
sar
pop
addb
aad
and
dec
es
hlt
iret
sub
movsb
jl
pop
xchg
and
int
js
out
fwait
sbb
aad
mov
in
push
jne
lea
and
add
es
addr16
jecxz
jns
test
mov
sbb
push
movsl
lahf
or
sbb
mov
dec
test
mov
push
xchg
ja
xor
and
sub
mov
sub
lock
lods
aad
dec
mov
roll
adcb
dec
movsl
cltd
push
dec
or
push
add
dec
push
das
pop
lret
shrb
mov
add
ja
sub
push
jne
and
je
addr16
cmpsl
fs
cmpsl
dec
push
xchg
dec
mov
mov
fstps
call
les
mov
out
sub
lcall
sub
inc
movsb
and
cmp
xor
or
ja
cmpsl
out
fdivrs
mov
iret
in
cld
loope
mov
bound
pop
adc
jne
out
dec
loopne
lret
jl
pop
xor
pop
ss
lock
push
or
js
cmpsl
jmp
stos
fldl
dec
movsb
xorb
cltd
sbb
std
dec
xlat
sbb
adc
sub
push
push
push
sahf
cmpsl
enter
sub
pop
adc
add
call
aas
nop
push
xchg
dec
or
imul
cmp
cwtl
or
in
scas
xchg
inc
xchg
ret
rcl
xchg
lock
jmp
mov
enter
inc
movsb
push
movsb
sahf
push
xchg
in
pop
sahf
sbb
jb
aas
mov
addr16
repnz
mov
sub
push
mov
adc
enter
out
arpl
dec
jb
sbb
aas
mov
test
pop
cmc
int3
cmp
or
cmpsb
imul
add
leave
addr16
dec
inc
test
cmp
cmpsb
mov
outsl
adc
mov
in
jo
dec
pop
adc
xlat
sub
arpl
outsb
pusha
mov
pop
gs
sarl
jl
fs
shlb
enter
dec
dec
inc
mov
int
daa
xchg
addr16
ds
xor
dec
add
into
inc
adc
push
dec
sbb
xor
mov
mov
sahf
dec
push
fistl
lcall
repz
std
roll
pusha
sub
jnp
mov
je
les
and
mov
cmp
dec
out
or
jle
pop
movsl
or
gs
or
jp
insb
and
test
jbe
push
cmp
dec
into
iret
repz
lods
xlat
les
mov
fnstenv
push
sub
negb
mov
aas
xlat
pop
push
mov
lods
cmp
push
addb
cmp
pusha
dec
cmp
jg
es
push
scas
movsl
daa
jbe
ret
imul
outsl
mov
jge
ljmp
and
xchg
jnp
cmp
enter
add
cmp
iret
aaa
hlt
and
outsb
dec
and
fbld
rcrb
call
dec
dec
xlat
sarb
mov
imul
or
daa
fsubr
cmp
imul
mov
fildl
popf
xor
mov
daa
and
pop
test
pop
or
test
shll
jo
cltd
cmpb
into
mov
push
mov
jno
orb
out
call
fcmovne
mov
mov
push
push
clc
dec
into
pushf
aad
cmp
in
sbb
fdivs
mov
sub
push
and
ret
inc
inc
hlt
sbb
xor
in
outsl
mov
fidivs
iret
fsubr
lods
mov
cmp
push
cmp
xor
mov
adc
imul
test
cmp
add
ficompl
jae
test
cmp
mov
imul
add
xor
sahf
pop
shrl
ror
mov
test
fs
fdivr
test
xchg
aaa
pop
mov
or
jns
dec
out
inc
fsub
stos
adc
repnz
pusha
stos
xor
xchg
fsub
jmp
out
shll
push
add
dec
insb
out
or
mov
shll
xor
push
lret
fidivrs
pop
push
inc
push
push
lock
cmp
xchg
sbb
inc
push
mov
mov
test
iret
pop
in
adc
push
cmp
sbb
fisubrl
js
cmc
icebp
sub
adc
inc
popa
dec
add
inc
out
push
ret
aas
sbb
mov
fbstp
fdivl
dec
jno
int3
add
push
mov
unpcklps
imul
popa
xor
test
cmp
sti
add
loope
out
ljmp
add
lock
mov
outsb
sti
inc
lods
sub
adc
pop
jnp
fldenv
mov
pop
jecxz
xchg
jnp
scas
xchg
dec
push
jnp
fdivrp
inc
mov
mov
and
mov
jp
clc
jl
inc
or
fcompl
imul
sbb
or
inc
dec
test
push
testl
ds
out
fistpll
mov
es
in
ret
fsubl
jns
mov
xchg
push
addr16
jno
xchg
lret
mov
data16
imull
xchg
jecxz
ret
fcmovu
in
mov
add
mov
dec
sbb
pop
std
inc
pusha
in
mov
mov
or
dec
jle
es
scas
xor
into
fisttps
in
fidivrl
gs
in
jne
inc
js
js
outsl
stc
and
in
popf
rcrb
cmc
cmp
shll
sub
adc
aas
sub
sahf
mov
cmp
sub
fbld
xchg
add
push
sbb
jp
mov
or
cmp
mov
mov
mov
push
je
enter
mov
fisubrs
fwait
std
xchg
inc
in
mov
insl
jo
push
pop
mov
in
pop
stos
sbb
mov
mov
pop
cmp
cmp
aaa
pushf
gs
or
roll
sub
lods
jbe
sub
and
pop
lods
jo
clc
lahf
cmpb
xchg
test
push
xchg
shl
push
push
loopne
cmpsb
jb
push
js
nop
loop
push
ja
cmp
xchg
adc
dec
subl
cmp
add
mov
iret
adc
cli
mov
mov
fcomps
jmp
lcall
push
cmp
jb
or
cmp
adc
outsl
out
xchg
movsb
cmpsb
add
sub
test
mov
clc
shlb
push
dec
adc
aam
ret
dec
fistl
adc
in
and
inc
and
sti
and
add
inc
mov
ds
outsl
add
fwait
cmp
cmpsl
adc
fsubrs
or
xor
icebp
mov
add
movb
iret
adc
pop
add
fnstenv
xchg
outsl
or
add
xorl
leave
or
leave
sub
pop
rcll
or
cmp
in
scas
add
leave
dec
sub
out
fwait
addr16
inc
cli
xor
std
inc
jo
fidivs
sub
lret
adc
pop
push
das
sub
jo
shl
mov
and
dec
insl
jge
dec
scas
xchg
icebp
push
lcall
inc
hlt
rcr
xor
dec
xor
imul
adc
push
and
sbb
adc
xchg
pop
jb
addl
subl
mov
sbb
aad
pop
dec
inc
or
nop
jge
mov
inc
inc
adc
sbb
mov
ficompl
sahf
xchg
pop
cmc
movsb
addr16
insb
es
mov
int
movsb
sub
clc
enter
rorb
mov
sti
dec
cmpsb
lcall
iret
dec
lret
push
cld
in
push
mov
jp
add
ds
sub
jne
mov
iret
inc
dec
popf
push
pop
jp
dec
sahf
inc
imul
xchg
insb
leave
cmp
cmp
stos
roll
xchg
lock
popa
fs
jns
add
dec
repnz
fldcw
add
lcall
jb
cmpsl
fs
jae
add
nop
xor
daa
mov
lock
xchg
inc
jno
pop
pusha
in
jle
scas
sub
dec
movsb
add
mov
fstps
push
jl
mov
and
add
mov
insl
mov
xchg
ljmp
outsl
test
fisttps
push
pusha
in
pop
jns
stos
lods
push
imul
pushf
int
imul
je
inc
inc
mov
mov
cmp
jl
fnstenv
repnz
mov
pop
mov
xlat
xor
mov
add
inc
ret
sbbl
add
mov
inc
dec
out
out
mov
jbe
adc
insl
xchg
push
or
xor
inc
pop
test
cmp
popf
xchg
stc
and
mov
imul
or
dec
cwtl
sti
and
cmp
or
jnp
pop
pushf
sub
ret
int3
test
fdecstp
add
xlat
sahf
movsb
scas
push
cld
adc
xchg
inc
push
jg
cmp
shrl
ss
aas
idivl
pop
sahf
or
jo
jle
inc
adc
subl
add
ljmp
add
js
pusha
mov
in
mov
js
rcl
js
xchg
mov
push
in
out
mov
jb
test
and
pop
cmc
out
sti
imul
fiaddl
bnd
cmp
sub
fcmovnu
lret
packuswb
sbb
push
push
fidivrs
dec
xor
shlb
pushf
ljmp
and
push
int3
pop
or
pop
fcomip
sti
testb
mov
lea
aas
andb
hlt
dec
push
in
mov
add
inc
xor
loopne
sti
or
leave
in
loope
push
jg
push
shlb
inc
rcrb
xlat
out
sub
mov
aas
int
inc
ljmp
sub
push
sbb
adc
popf
add
popa
or
dec
mov
push
pop
insl
cmp
lret
ss
repnz
xchg
inc
imul
dec
push
insb
rcrl
sub
pop
stc
xor
movsb
and
mov
adc
dec
jp
mov
mov
ret
addr16
mov
xor
fiaddl
add
sbb
and
xor
inc
pop
scas
bnd
xor
ss
cmpsb
in
or
push
mov
inc
jp
stos
rcll
xchg
xchg
ret
adc
sbb
popa
pushl
sarl
pop
add
xor
les
mov
xor
rcl
inc
outsl
and
movsl
popa
or
lods
mov
mov
and
stos
aaa
dec
sahf
fcoms
jne
aad
mov
daa
xlat
arpl
repnz
insl
outsb
lock
jnp
cmp
or
bound
call
movsl
sub
cltd
xchg
push
fwait
test
mov
aam
push
jg
adc
mov
fistps
int
hlt
orl
jmp
or
mov
mov
mov
inc
pop
mov
loopne
roll
mov
xchg
pop
pop
pop
ljmp
inc
dec
sub
mov
mov
jnp
ret
cmc
push
push
xor
insb
cmpb
inc
or
lret
add
fwait
cltd
pop
jle
dec
dec
mov
sbb
movsb
in
add
repnz
or
inc
sti
and
xchg
imul
lret
aas
push
mov
ja
xor
stc
clc
add
rcr
fcomip
xor
movsb
add
lahf
nop
pop
mov
ss
jne
ret
sub
std
pusha
aam
mov
rorb
rcll
lods
xor
rolb
cmp
rolb
cmp
add
std
inc
js
out
sti
mov
std
lock
lahf
and
fwait
in
stos
loope
xor
mov
dec
shlb
xor
pop
jnp
jmp
pop
jne
cltd
fmull
pop
jp
pop
mov
in
xchg
aaa
divb
fwait
add
adc
fs
xor
mov
pop
mov
xchg
mov
fs
mov
sub
outsb
and
sahf
push
mov
dec
pushf
mov
rcll
xor
push
inc
cmp
or
jecxz
outsl
or
xchg
sub
cld
cmc
negb
das
mov
or
jb
inc
or
mov
movsl
imul
sti
sub
push
jg
stos
cmpsb
es
icebp
mov
jg
adc
jle
xadd
mov
adc
and
or
lret
loop
sub
inc
add
jmp
pop
shr
fs
stos
mov
sub
push
ljmp
out
loopne
jno
int
mov
push
and
iret
cmc
inc
lahf
out
rolb
xor
cli
popa
or
imul
mov
mov
sbb
pop
xor
in
or
add
push
dec
fwait
pop
loopne
lods
outsl
dec
hlt
pop
daa
and
in
add
mov
pop
xchg
mov
xchg
push
cmp
or
adc
pop
mov
in
cli
test
or
and
bound
fwait
icebp
popl
xchg
outsb
ret
xchg
in
stos
fldcw
leave
xlat
cmp
stos
dec
rclb
sti
lret
push
icebp
int
add
mov
jnp
js
test
es
cs
jnp
aam
jbe
repz
add
ss
int3
aam
dec
fimuls
mov
int
in
lods
cs
adc
jg
and
hlt
and
subb
cmpsl
ficompl
repnz
loopne
xchg
iret
lea
dec
andl
lret
inc
push
lret
push
std
mov
lea
and
and
scas
mov
xchg
imul
out
dec
sub
and
add
jno
js
rcll
popf
pop
lods
fldl
inc
filds
jb
sub
gs
dec
xchg
mov
gs
mov
sub
sbb
push
add
jne
cmpb
sbb
xor
mov
and
cmpsl
stos
xchg
xchg
in
addr16
iret
pop
popf
data16
sbb
jge
and
adc
xor
fldcw
xchg
jae
in
fmul
sarl
adc
shll
out
mov
cmpsl
inc
test
test
pusha
call
clc
add
idivl
adc
jne
faddl
jl
test
mov
pop
cmp
push
je
add
push
andl
mov
pop
leave
lock
cmp
andl
test
jbe
pop
cmp
test
fwait
inc
push
jp
sbb
pop
mov
stos
mov
or
cmp
decl
and
dec
bound
stc
aas
arpl
out
outsb
data16
mov
mov
inc
inc
int3
fnstsw
sarb
popf
push
insl
mov
mov
add
sub
xchg
les
ret
pop
scas
xor
addl
insb
stos
sbb
in
push
addr16
pop
leave
add
and
dec
scas
mov
std
lock
pop
inc
mov
cld
pop
inc
dec
mov
xor
jnp
leave
ss
and
adc
jno
mov
xor
cmp
fdiv
setl
push
es
push
inc
jnp
mov
xor
jo
sub
xchg
ret
lahf
jl
pop
ret
mov
imul
push
das
ss
int
adc
xor
sbb
jns
jne
pop
and
ret
xchg
or
nop
mov
in
ret
mov
push
sti
dec
inc
dec
lds
lds
cs
movsb
popf
sub
xchg
mov
std
cld
mov
adc
mov
arpl
xchg
and
les
sbb
call
sub
push
push
pop
inc
dec
pop
mov
rorb
pusha
imul
or
fs
add
mov
add
daa
enter
push
mov
mov
je
lock
fdivp
xor
mov
shl
jg
cmpsb
or
inc
xchg
rorb
call
inc
scas
mov
inc
call
popw
rcr
out
dec
dec
out
inc
stc
pop
xchg
es
shlb
fisubl
dec
pop
cmp
xchg
dec
cld
pop
repz
sub
xlat
cwtl
cltd
or
xchg
aas
and
fstpt
pop
aas
repnz
inc
sbb
stos
rcrb
cltd
cld
mov
jne
xor
shr
push
fnsave
xchg
popa
jle
hlt
xchg
mov
mov
cmp
jp
movsl
add
adc
jl
jno
or
cmp
xchg
rclb
stos
ja
inc
out
sarl
shr
adc
xor
jno
iret
bound
call
lds
dec
dec
jo
adc
mov
mov
push
jmp
pop
pusha
cmp
add
xchg
sbb
inc
xchg
push
cmp
xor
jb
pushf
clc
sbbl
clc
sbb
add
lds
jg
jmp
adc
subl
adc
cmpsb
lret
adc
daa
cmpsb
pop
adc
into
fnstenv
cmpsb
mov
dec
test
jp
ret
or
xlat
lahf
adc
outsl
push
cmp
negb
std
fxch
fisttps
mov
loop
sub
subb
push
fisubl
addr16
xchg
and
ja
mov
pop
lcall
arpl
das
popa
push
sub
jno
mov
jae
inc
sbb
push
push
jl
repz
xor
xchg
push
sbb
inc
fs
mov
ja
add
dec
lods
repz
xor
xchg
mov
xchg
in
jge
fs
add
push
dec
fdivrs
hlt
ret
idivl
ret
pushf
outsb
aaa
or
loope
mov
std
mov
idiv
cmp
push
jnp
adc
xchg
add
lds
pop
es
lahf
add
mov
jg
pop
jae
int
idivb
fs
popf
dec
sub
js
add
sub
jmp
inc
dec
aaa
movsb
dec
fcoms
inc
cmp
jmp
jecxz
push
aaa
pop
or
sub
test
mov
rcrl
xchg
cmp
adc
out
lret
in
imull
dec
ja
or
scas
add
pop
xor
movsb
hlt
cmp
mov
insb
aad
push
push
adc
adc
xor
enter
push
idiv
test
dec
in
sbb
jecxz
ja
jmp
inc
mov
jbe
xlat
adc
push
xchg
jge
loop
or
int3
sbbl
clc
xor
push
nop
push
mov
or
into
movsb
xchg
dec
repz
scas
bound
xchg
inc
imul
lods
push
les
xchg
sarb
cmp
or
jae
andl
push
xlat
stos
out
incl
in
lahf
jae
lcall
add
inc
jo
xchg
fdivrl
fisubrl
je
jge
cmp
loope
stos
adc
data16
cmp
inc
stc
fstpt
mov
sbb
das
mov
in
setns
cmp
cmp
repnz
ljmp
cmp
mov
mov
jge
add
outsl
mov
les
mov
jl
mov
dec
xor
or
fisubl
movsl
in
fldenv
cmpsl
popf
jae
imul
sbb
and
inc
roll
sbb
xorb
mov
sub
lahf
rolb
fsubrl
dec
xlat
nop
aaa
xor
pop
sub
xor
cmp
ljmp
cmp
or
in
mull
int
dec
cltd
add
std
and
mov
cs
mov
popf
xchg
pusha
fidivrs
in
pushl
jge
dec
dec
sub
lret
int3
inc
add
pop
rol
xor
mov
mov
fsubr
jo
xchg
je
idivl
lds
sub
pop
sbb
fwait
mov
adc
fcoms
imulb
ss
shlb
inc
loopne
lahf
cmp
movsb
push
sti
movsl
stos
sbb
lahf
add
adc
sub
icebp
dec
sub
xchg
sbb
fmull
nop
les
or
jmp
sbb
push
jl
jp
add
pop
sub
popf
outsb
sub
jae
mov
std
jae
push
sbb
ret
in
ret
shlb
push
leave
fnstcw
sar
les
hlt
lods
ljmp
xlat
pop
cmp
cli
sub
loope
cmc
aad
mov
push
jecxz
arpl
lret
sub
push
pop
mov
add
mov
mov
adc
lret
loopne
bound
in
adc
cmp
jae
aad
push
in
or
test
call
mov
mov
xor
adc
push
aas
subb
push
sub
fidivs
mov
inc
insl
dec
push
dec
hlt
push
mov
adc
call
sub
ljmp
outsb
pop
inc
pop
jp
jns
rorl
sub
cwtl
xor
lret
dec
lahf
mov
cld
cwtl
xchg
sub
iret
pop
stos
scas
mov
or
mov
and
xchg
test
test
dec
out
jne
add
or
stos
ret
mov
push
sub
dec
mov
je
push
xor
mov
cmp
popa
shrb
js
xor
scas
dec
cli
mov
adc
test
stos
mov
xor
lea
lods
out
out
jo
mov
popf
push
es
nop
imul
in
ret
iret
mov
mov
imul
leave
jmp
gs
movb
mov
out
fnsave
scas
cltd
push
fwait
movsb
jmp
ds
inc
jl
ja
loopne
cmpsl
fsub
out
pop
in
xlat
iret
fbstp
jp
mov
inc
into
xor
push
movsl
repnz
adcb
lret
arpl
pop
or
xchg
sub
xor
adcl
xchg
jnp
jae
out
loopne
ljmp
pop
add
jno
ljmp
xchg
outsb
js
and
pop
ds
jmp
push
and
int
and
pop
lds
xchg
mov
mov
cs
test
notb
sub
mov
repz
daa
mul
inc
jecxz
add
xchg
ficompl
push
test
inc
popf
lods
sbb
aam
push
aaa
data16
mov
dec
sbb
es
roll
add
or
mov
hlt
sbb
mov
fistps
push
add
popa
mov
or
out
mov
jno
mov
and
xor
add
mov
jmp
loope
lea
adc
dec
push
add
mov
pop
add
repz
push
in
add
adc
jp
imul
pop
std
mov
loop
pop
das
sbbl
add
cmp
stc
jp
inc
xchg
add
shl
pushf
es
iret
test
inc
fcoml
push
pop
inc
lea
inc
and
outsl
adc
push
jmp
dec
cmp
fwait
xor
shrb
fs
xchg
inc
sbb
cli
push
fucomip
incb
fisttpll
push
xchg
fwait
outsl
inc
in
xchg
sahf
ja
fldt
cmp
xchg
std
lea
in
imul
jp
add
mov
cs
xlat
pop
loopne
cmc
inc
bound
push
adc
pop
and
mov
loope
and
add
gs
div
movsb
push
test
pop
roll
or
mov
scas
insb
and
and
or
or
jp
jae
xor
jecxz
push
jno
sbb
add
inc
movsb
lea
add
popa
dec
jb
push
xchg
fiaddl
imul
out
sbb
mov
out
mov
mov
nop
cmc
cmp
pop
arpl
mov
jge
cmc
jo
rcll
stc
std
and
push
stc
mov
imul
mov
pop
stos
rcrl
aaa
sti
outsl
jg
xor
fwait
sub
fsubrl
jnp
adc
xorl
mov
mov
push
xchg
xchg
insl
cmp
ljmp
in
push
es
js
dec
mov
movsl
inc
mov
cmp
inc
loopne
pop
test
or
out
cmp
mov
dec
nop
sub
nop
sub
push
inc
sbb
fwait
rcrb
dec
shrb
inc
add
lods
addr16
dec
iret
imul
jne
rcll
dec
mov
nop
cmp
xchg
mov
lret
mov
fstps
add
imul
mov
push
test
and
ljmp
pushf
popa
and
mov
adc
movsl
dec
inc
scas
dec
fsubl
lret
fbstp
jnp
rorb
out
mov
add
ja
sub
pusha
mov
or
sub
inc
mov
bound
jne
and
jno
jge
pop
xor
inc
xchg
mov
cmp
out
xor
insl
push
lods
rorb
popa
ret
lcall
cmpb
in
or
push
jae
es
icebp
dec
test
cmp
or
fdivrs
jbe
pop
xchg
pop
int
jge
xchg
fiadds
sub
outsl
cltd
and
das
xchg
pop
push
cmp
fs
enter
sbb
mov
sub
jge
xchg
add
sbb
pop
mov
push
scas
pop
leave
ret
or
inc
filds
movl
les
add
sub
aaa
das
sti
xor
mov
test
test
cmpl
xor
outsl
jbe
shld
idivb
ret
fsubl
sbb
sbb
std
aaa
inc
icebp
mov
lods
stc
fwait
jnp
lock
adc
jbe
std
mov
loope
mov
fsubrs
and
sahf
arpl
loop
shl
jns
and
adc
sub
mov
into
movsb
leave
hlt
shrb
ud0
int3
push
imul
and
mov
cmpsl
xor
nop
lock
add
and
call
rclb
push
pop
test
fidivrs
or
xchg
pop
xchg
insb
mov
sbb
pop
js
mov
push
dec
and
mov
dec
xchg
mov
hlt
dec
xchg
movsl
fisubrs
push
out
lods
jp
jne
push
rolb
outsl
xor
lret
lock
or
testl
mov
xchg
push
cwtl
nop
mov
addl
sti
pop
hlt
inc
push
sbb
and
lret
into
sbb
imul
iret
sbb
test
hlt
jmp
sbb
arpl
lods
std
cld
mov
xchg
and
daa
sbb
inc
hlt
stc
sarl
add
sbbl
mov
mov
pop
outsb
push
and
add
sbb
mov
push
jl
cmpsb
aad
mov
je
xor
fsubl
cmpsb
jle
add
pop
cmp
aad
loopne
adc
cmp
inc
loop
out
and
mov
xor
mov
bound
sti
pop
inc
cmp
js
cmpsb
clc
data16
insl
nop
mov
mov
std
and
xchg
enter
cltd
lahf
and
push
test
mov
mov
fnstenv
or
jmp
test
xchg
or
jp
js
adc
jns
les
gs
repnz
repz
or
pop
dec
push
pop
xchg
mov
cld
push
icebp
loopne
inc
test
pushf
and
cmp
sub
mov
jle
scas
js
jmp
hlt
aas
in
mov
ds
daa
mulb
pop
aaa
mov
ljmp
adc
dec
das
xchg
xlat
repnz
repnz
push
xor
sub
add
mov
and
and
xchg
sub
lds
test
fisttps
enter
dec
jg
mov
and
jge
shll
aad
cmpsb
call
jne
das
les
into
and
or
daa
sub
xchg
ret
hlt
test
jecxz
adc
stc
push
cmc
lock
pop
xchg
int3
lds
scas
mov
jbe
dec
sbb
ljmp
rclb
add
xchg
jg
addr16
jns
movsl
inc
ss
loope
jp
pop
movsb
rcr
negl
rcll
or
sbb
pop
pop
pop
add
fmul
lahf
ret
push
xchg
cmpsb
jae
icebp
out
sahf
pop
dec
fbld
movsl
jns
stc
lcall
insl
jb
push
add
cs
decb
orb
push
aad
imul
pop
push
enter
push
mov
in
movsb
dec
lods
int
stos
cmp
xchg
iret
adc
sbb
lds
arpl
hlt
and
and
or
pop
arpl
mov
jmp
jo
lret
test
into
out
div
pop
fcoms
gs
adc
xor
or
leave
add
stos
lock
jp
fdivrs
jmp
inc
aad
ror
cmp
cli
jno
xor
loop
and
mov
xor
xor
es
push
fdivr
jb
repnz
bound
mov
stc
add
arpl
cli
fidivs
inc
cmc
push
ss
movsl
sbb
dec
cmpsb
jmp
in
xchg
cld
xlat
cltd
stos
dec
stos
lock
adc
test
cmpsl
push
push
insb
je
arpl
repz
or
mov
mov
push
push
dec
push
jo
jp
xor
js
mov
inc
mull
mov
dec
cmpsb
aam
or
mov
cmpsl
ja
pop
jl
mov
push
movsb
int
inc
dec
pop
add
sub
adc
daa
cli
pop
insb
ss
inc
addl
sub
aam
ror
test
js
sahf
cmp
mov
xor
rorl
bound
popf
sbb
sub
push
aad
mov
fs
xor
inc
in
mov
xor
cmp
adc
out
bound
lock
mov
xor
in
aam
and
sub
pop
jbe
xor
fisubrl
imul
scas
xchg
shll
shlb
sbb
into
xchg
iret
adc
mov
cmp
add
cmpl
nop
fwait
shrb
mov
sub
add
xor
mov
pop
mov
imul
sub
popf
ret
cmp
pop
push
xchg
inc
or
sbbb
mov
aam
push
dec
into
shll
mov
sub
or
js
es
push
xchg
js
psrld
xchg
jle
rcrb
pop
into
pop
mov
or
mov
sub
mov
bound
dec
jecxz,pt
pop
sbb
sbb
and
and
push
jns
out
dec
dec
push
in
or
hlt
mov
push
aam
aad
insl
mov
fmull
insb
stos
pop
sbb
cs
aad
pop
jmp
jb
fsubrs
test
xor
jno
mov
inc
orb
jle
inc
push
and
push
lret
adc
cmc
jo
fmull
scas
test
sbb
mov
clc
dec
xor
and
inc
data16
data16
mov
pop
lret
and
adc
inc
cmp
mov
cmp
outsl
or
inc
mov
pop
lcall
test
mov
add
sub
dec
outsl
lahf
mov
add
rol
ror
lods
outsb
push
mov
push
loope
lahf
inc
ss
pop
ret
in
fmul
jge
push
xchg
cmp
dec
int
cwtl
push
xchg
fisttpll
jge
dec
inc
in
into
nop
dec
imul
popf
inc
sub
pop
les
xor
lock
hlt
cld
ss
sbb
add
cmp
js
stc
aad
popl
bound
cmpb
inc
and
sub
inc
pop
std
mov
push
negl
pop
repz
bound
cltd
and
stc
test
popf
test
jmp
xor
mov
hlt
jmp
js
mov
cld
popa
movsl
fstpt
sub
fmull
fistpl
int
adcl
into
pop
xor
pushf
out
ret
pop
add
push
jae
loop
into
daa
les
sbb
xor
in
sub
fists
pop
cli
out
pushl
or
mov
pop
loopne
and
fnstsw
sub
pop
xchg
ds
adc
in
adc
add
jmp
rorl
mov
int3
or
xor
divb
pop
pusha
std
sub
fsubs
lret
xor
fcoms
and
jecxz
and
repnz
push
sub
inc
jbe
pop
cmp
sub
imul
dec
jmp
js
in
add
scas
add
fldenv
mov
fs
scas
lahf
and
and
into
imul
lahf
xor
dec
xor
mov
std
decb
xor
fisttps
in
pop
push
aas
push
ss
je
pop
push
mov
les
adc
or
lds
sbb
fcoms
movsl
lea
lahf
imul
add
cld
mov
push
ret
addb
pop
push
stos
cmp
in
or
push
mov
imul
lock
jl
inc
cmpsl
xor
dec
mov
call
mov
bts
scas
icebp
mov
xchg
adc
xor
sub
push
clc
scas
jno
sub
test
fmull
lock
loopne
push
repnz
mov
and
sahf
xor
sub
out
dec
jle
jns
push
pop
mov
push
ss
pop
sbb
mov
or
pop
mov
push
fidivrl
in
pop
mov
enter
cwtl
testb
ss
insl
bound
sbb
test
mov
movsl
push
scas
inc
sub
mov
jns
push
loopne
mov
xor
rorl
cmp
repnz
inc
inc
outsl
xchg
xor
loop
mov
popa
call
sub
nop
aaa
lret
sub
cmpsb
mov
roll
ret
sbb
push
sbb
cmpsb
inc
cmp
mov
aam
cmp
or
pop
jge
pushf
lahf
rcrb
out
sub
pusha
add
mov
and
ja
and
dec
mov
lods
clc
jbe
lret
jge
jl
test
cmp
and
out
sar
cmpsl
sub
shrl
sub
icebp
rorb
xor
das
sbb
lret
and
loopne
jo
jmp
adcb
mov
push
pusha
out
imul
xchg
icebp
or
loope
push
ds
ljmp
mov
inc
cmc
mov
mov
pop
push
clc
fidivs
in
test
pop
out
inc
jns
sbb
sbb
and
daa
inc
les
out
add
add
add
imul
pop
mov
adc
push
mov
pop
sub
cld
loope
ss
inc
in
out
pop
test
call
jecxz
test
cmp
cmp
pop
rcrl
insb
lds
xlat
xor
daa
xchg
jmp
push
mov
out
imul
test
xor
data16
inc
retw
and
add
xorl
mov
xor
mov
jecxz
test
stc
test
xlat
dec
outsb
mov
inc
nop
stos
xchg
adc
pop
pop
mov
repnz
pusha
push
cmp
call
push
mov
mov
mov
out
addb
pop
les
fdivs
xlat
and
aas
cmp
inc
loopne
dec
movsb
add
sbb
and
les
push
ss
orl
lods
add
jb
or
or
arpl
out
gs
movsb
roll
and
fnstenv
pusha
loope
es
mov
sbb
leave
shlb
popf
aam
cmpsl
arpl
sub
lods
push
jns
inc
jb
xor
xchg
sahf
mov
add
pop
or
inc
pop
pop
enter
adc
insl
hlt
arpl
fcmove
leave
mov
repnz
xor
lahf
das
cmp
adc
pop
mov
loop
jp
shrl
sub
mov
jns
cmp
ja
dec
in
xor
sbb
jno
jnp
ja
cli
andl
inc
cwtl
fwait
jge
xchg
mov
ds
mov
push
loopne
insl
inc
ret
mov
fmuls
inc
mov
pop
pop
xchg
movsl
mov
fcmovnu
sub
xor
mov
dec
dec
add
pusha
aam
sti
xor
jmp
lds
test
orb
daa
pop
mov
jne
les
and
rolb
xlat
and
test
lahf
nop
stos
cwtl
push
repz
or
popa
fs
push
rcrb
loope
testb
addr16
fcomps
ret
cmp
stos
adc
movsl
jge
jecxz
pop
add
loop
test
dec
cmp
movsl
movsl
fwait
cmp
push
inc
pop
mov
pop
insl
lahf
add
push
push
cmp
sar
pop
dec
lods
cld
in
les
inc
mov
popaw
jbe
std
inc
xchg
push
dec
mov
push
push
push
sub
fstps
arpl
sub
int
daa
enter
mov
jmp
mov
fwait
outsb
sub
sub
repz
cmp
or
inc
dec
mov
sbb
sub
mov
imul
popf
mov
cmp
lea
sbb
pop
jg
mov
sub
shl
loop
in
movsl
cli
sbb
fiaddl
das
push
xchg
dec
fisubrl
dec
jbe
add
xchg
pop
xchg
lods
jg
test
add
mov
clc
push
mov
outsb
les
jne
pop
lods
in
pop
ja
vucomiss
sbbb
mov
mov
cmc
push
mov
adc
in
xchg
jnp
mov
adc
push
adc
popa
lret
clc
cmpsb
cld
inc
adc
inc
pop
cmpsb
test
add
or
mov
nop
jp
in
mov
icebp
and
iret
out
mov
mov
sub
xchg
xchg
inc
outsl
dec
ret
mov
add
add
mov
in
sbb
fcompl
lcall
lret
lahf
sub
xchg
mov
sub
addr16
imul
stos
and
ret
push
int3
dec
sub
hlt
int3
aas
cmpsb
fistpll
rorb
or
or
sbb
test
mov
add
aas
pop
shll
mov
sti
pop
repnz
mov
filds
ja
cmp
js
subb
gs
mov
stc
cmp
mov
fsubrs
sti
add
xchg
not
or
mov
pop
mov
ret
repz
add
mov
pop
sub
mov
sbb
aaa
in
or
adc
pop
sbb
adc
mov
fs
or
mov
or
pop
mov
daa
scas
clc
pop
outsl
pushf
sahf
ss
sbb
or
jmp
test
jecxz
lcall
dec
mov
addb
aaa
insl
push
push
testl
sahf
or
mov
adc
pop
xor
fmuls
stos
mov
sub
popf
test
inc
sahf
cmp
loope
xor
and
adc
xor
xchg
clc
xchg
pop
add
test
push
daa
repnz
shrl
pop
add
mov
xor
or
popf
in
mov
mov
popf
inc
repnz
imul
push
cmpsl
popa
loop
xchg
repz
clc
out
roll
inc
and
addr16
xchg
sbb
xor
cld
scas
sahf
push
mov
sbb
xchg
or
pop
dec
repz
sub
push
adc
sahf
or
ret
stc
in
sbb
and
fimull
xor
ret
lea
stos
shll
clc
scas
adc
lahf
pop
js
lds
mov
pop
cltd
push
or
das
sub
push
mov
mov
push
or
or
arpl
mov
shlb
lock
mov
lds
xchg
mov
in
leave
inc
jns
dec
mov
out
and
sub
sub
and
ret
mov
mov
add
addr16
jnp
cltd
mov
rclb
pop
sahf
adc
repz
stos
xor
shlb
shll
sbb
mov
cmp
add
repz
insl
pop
xor
push
or
xchg
into
rcrl
or
sarl
bound
jle
adc
xchg
es
fisubrl
aaa
in
bound
cmc
add
jp
jg
jg
mov
mov
jmp
xchg
push
pusha
mov
sbb
pop
xor
dec
sbb
and
push
and
mov
jno
push
out
inc
inc
sub
int
jo
mov
mov
pop
jle
mov
push
or
in
mov
mov
dec
cltd
xchg
mov
test
adc
shll
in
mov
push
cmp
lds
pop
cmc
ss
xor
lret
repnz
xor
mov
sbb
js
push
xor
jae
inc
dec
dec
jae
fistps
lods
popa
add
fistl
mov
ljmp
lds
mov
call
and
leave
push
dec
xchg
adc
sub
lahf
std
imul
and
repnz
cmp
in
xchg
jns
fdivrs
sub
jbe
lock
jg
cltd
bound
dec
jae
int
test
add
shlb
pusha
mov
inc
loope
repnz
in
adc
mov
ss
jg
push
xchg
xchg
cs
jl
ss
data16
dec
insl
pop
xor
mov
test
cmc
pop
les
jns
dec
dec
fnstcw
push
incl
add
shrl
jge
inc
jb
pop
aas
jns
xchg
push
mov
pop
pop
pop
fsts
icebp
xlat
rorb
pushf
or
push
dec
hlt
sbb
pop
lahf
add
mov
decb
stos
jle
jecxz
mov
pushl
sub
push
dec
mov
xrelease
test
enter
aad
cltd
fstpl
mov
push
js
and
jno
xor
test
and
popa
sbb
imulb
lcall
sbb
lock
lock
lret
push
inc
xchg
cli
faddl
xor
add
jmp
dec
testb
cmc
or
lahf
jnp
jl
shlb
mov
push
and
inc
or
andl
xor
jg
test
add
sub
dec
mov
push
imul
pop
inc
inc
cmp
mov
jbe
push
mov
repnz
xchg
dec
out
xor
shlb
je
loopne
lretw
icebp
setns
loopne
std
loop
adc
jnp
xchg
mov
out
xor
jnp
push
fisttpl
pop
into
test
xchg
dec
mov
push
shrd
mov
jnp
out
pop
add
jo
out
shl
into
jno
pop
mov
sub
stos
std
adc
mov
xchg
rcr
arpl
sub
jno
mov
mov
push
sti
mov
js
mov
or
arpl
mov
and
add
mov
push
ja
push
mov
xor
hlt
das
mov
adc
in
aad
lods
inc
inc
imul
fwait
in
cmpsl
inc
movsb
test
jg
insb
pop
push
sub
adc
xchg
xor
xor
dec
inc
loope
sub
xchg
cmp
push
pop
xchg
and
mov
inc
fs
jo
mov
jmp
sub
jnp
call
lds
shl
inc
lds
add
pop
dec
test
mov
inc
xorl
sbb
mov
dec
xor
loop
jbe
mov
pop
rcl
xchg
test
std
adc
sub
pop
lock
jbe
imul
pop
push
pop
aad
pusha
jmp
sarb
xor
cmp
insl
sarl
shlb
xor
fwait
insl
sub
dec
stc
mov
mov
sbb
xor
jle
cmp
test
jl
and
imul
stos
movsl
xchg
push
pusha
push
xor
repnz
inc
ljmp
call
sbb
cli
sbb
sbb
into
test
jb
aas
into
sub
pop
repz
and
mov
adc
jle
imul
imul
mov
loope
xor
int3
xchg
repz
or
and
add
mov
cmc
mov
ljmp
pop
jo
cmpsb
fcomps
shll
sub
jns
ss
mov
lret
cmc
jmp
outsl
int
notb
xchg
push
inc
popa
popl
dec
shl
and
std
push
mov
xor
repnz
addb
dec
push
add
shrl
mov
lret
fists
test
insl
cmp
xchg
je
push
sub
adc
pusha
ss
icebp
jge
shlb
pop
mov
rclb
arpl
jp
fistps
in
jle
mov
cmpsb
mov
pushf
mov
in
dec
imul
adc
sbb
push
pop
push
iret
push
movsl
dec
sahf
jecxz
stos
jae
mov
mov
mov
pop
xchg
jno
shlb
jecxz
int
mov
es
enter
mov
pushl
stos
stc
mov
dec
cs
push
daa
cmp
lea
and
sbb
sbb
insb
jns
les
rorb
movsl
cmp
inc
sahf
rcrb
insl
scas
adc
xor
test
adc
cwtl
jmp
data16
insl
sub
rorl
jb
mov
lret
cmp
fsubrl
add
lcall
sbb
inc
insl
or
fwait
xor
or
jl
lret
push
xchg
scas
adc
negl
mov
pop
test
jmp
xchg
jb
fnstenv
pop
push
outsl
push
dec
fstpl
lahf
xlat
cmp
sbb
inc
cli
xorb
std
das
shl
fimull
mov
xor
push
adc
mov
xchg
xchg
sbb
cmp
insb
mov
scas
xchg
push
dec
out
cmp
inc
add
xchg
lret
lods
mov
mov
std
adc
jp
insb
sbb
adc
jb
push
pop
xchg
sub
push
imul
push
insb
aam
push
icebp
ljmp
pop
xor
repnz
loop
mov
pop
xchg
cltd
push
lds
inc
push
add
sub
mov
pop
mov
xchg
movsl
mov
mov
inc
xor
int
mov
inc
sub
sarl
mov
nop
ror
int
jno
push
pop
pop
inc
mov
add
push
xchg
ja
cwtl
lret
mov
inc
test
mov
es
scas
sbb
xchg
ret
loopne
xor
add
push
pop
popl
sbb
inc
add
faddp
pop
ret
fisubrl
ret
push
cmc
xor
sbb
sub
lods
aad
pop
out
cmp
cli
add
mul
loop
cmc
fisubrs
jo
pop
push
rorb
cmp
cmp
mov
jge
fcoml
xor
add
clc
jle
sub
push
mov
mov
jecxz
in
push
xchg
or
in
mov
sub
mov
bound
adcl
xor
jge
popf
sbb
nop
aam
jmp
je
and
xor
push
cs
shll
mov
repz
pushf
xchg
pop
cli
jb
mov
arpl
fcomi
dec
fs
adc
rcrl
push
mov
jecxz
roll
ljmp
int
mov
daa
jo
and
rcrl
in
or
outsb
mov
je
mov
lods
adc
inc
shlb
mov
iret
push
dec
adcb
pushf
daa
sbb
in
jns
push
mov
popf
cmp
inc
xor
inc
test
push
mov
cmp
loope
mov
cmp
std
pop
pop
imull
mov
rolb
popf
cmp
rcr
aaa
out
sbb
and
iret
xlat
or
test
dec
mov
sbb
scas
movsb
pop
pushf
or
les
or
or
inc
mov
jge
hlt
mov
push
aas
push
iret
les
sbb
jb
sub
mov
sbb
rolb
fldl
fidivrs
sub
and
das
es
add
js
lods
push
lods
jp
popa
sub
std
add
hlt
push
fnsaves
roll
mov
jle
test
mov
xchg
lahf
dec
add
jecxz
push
pop
movsb
fsts
fcom
popa
mov
int
sti
mov
sbb
fmuls
inc
mov
lock
inc
xorb
adc
into
lods
cmp
in
imull
mov
je
lret
push
sbb
stos
mov
stc
insl
fbld
lods
xchg
shll
outsb
fisubl
test
mov
lahf
pop
cmpsb
mov
test
mov
jnp
cmp
mov
mov
dec
stc
mov
mov
lahf
test
repz
in
or
and
xor
loope
mov
jg
jae
sbb
cmp
test
mov
add
mov
push
dec
mov
xchg
dec
xchg
stos
negl
or
cmp
add
dec
pop
inc
adc
sub
popa
test
adc
push
mov
adc
es
dec
or
jg
les
insl
cmp
enter
shr
pushf
mov
imul
mov
out
test
mov
je
inc
cmpl
orb
je
cmp
call
lods
mov
iret
in
std
xor
idivb
dec
fwait
cmp
or
push
mov
push
jge
push
xor
faddp
adc
push
lahf
loopne
dec
inc
jnp
jb
imul
jecxz
mov
cmp
inc
dec
sbb
clc
lods
mov
test
xor
pushf
pop
repnz
adc
xchg
mov
ret
rorl
loopne
gs
sbb
int3
sub
or
mov
mov
stc
adc
xor
mov
jg
jns
and
inc
mov
push
cmp
insl
mov
pop
and
dec
stos
sbb
int
xor
pop
nop
mov
inc
insl
imul
inc
sub
mov
loope
out
sbb
pop
test
pop
je
loopne
stos
push
in
scas
push
xchg
jbe
adc
pop
adc
lea
xor
int
sub
xchg
push
nopl
or
mov
inc
ljmp
leave
dec
mov
bswap
cmp
gs
adc
sub
insb
bound
loopne
jo
add
ficoms
sub
sbbb
jl
fisubl
push
subl
gs
sbb
bound
adc
ss
cld
into
pop
pop
inc
scas
xor
or
pushf
add
xchg
mov
push
push
insl
mov
int3
lahf
push
rolb
jl
pop
push
adc
and
cmp
mov
lret
in
adc
insb
adc
sub
das
movsl
cmpb
pop
push
test
cmc
ret
lahf
cmp
test
inc
in
hlt
push
adc
mov
scas
fidivs
sbb
loop
pminsw
inc
adc
and
add
es
push
push
add
outsl
mov
add
cmp
test
arpl
imul
jle
jns
xor
or
es
xchg
mov
fnstenv
mov
js
inc
mov
test
sar
inc
mov
das
push
and
mov
repnz
mov
or
imul
push
or
out
jecxz
mov
repnz
subb
outsb
es
outsl
icebp
js
mov
mov
rolb
dec
xor
pop
dec
push
mov
inc
jl
int
push
cmp
sbb
and
jns
xlat
outsb
iret
pop
mov
push
xor
sbb
xor
push
and
mov
and
shl
adc
leave
push
mov
in
add
pushf
out
adc
cmp
bound
dec
rorl
leave
fsubrs
loope
sahf
xchg
movsb
or
lret
repz
shrl
arpl
inc
lods
mov
and
clc
dec
scas
aaa
fcompl
pushf
sbb
and
xchg
adc
mov
adc
pop
add
jnp
and
sbb
incl
xor
mov
rclb
sub
lea
jbe
rcrb
xor
std
shrl
dec
repnz
cmpsb
stos
imul
push
mov
jo
lahf
adc
mov
stos
mov
push
mov
jge
out
jnp
jmp
pop
pop
ja
inc
rorb
shrl
mov
or
xchg
adc
mov
sti
adc
xchg
inc
mov
dec
mov
roll
push
sahf
dec
sbb
lods
xor
popf
jge
insl
lods
lret
xchg
je
jg
push
mov
aas
inc
sbb
pop
shrl
adc
add
xor
fs
mov
fcoml
mov
popf
adc
sbb
jo
or
add
loopne
subl
adc
jle
push
adc
test
clc
mov
filds
xchg
gs
push
cmp
loope
or
jae
push
and
icebp
out
mov
enter
add
je
xchg
lret
rorb
inc
sbb
cmc
ljmp
lods
out
dec
mov
lahf
xchg
adc
jge
push
mov
sarl
enter
mov
loope
mov
pop
jl
mov
jge
xor
push
ror
fldl2e
mov
mov
out
lea
push
pop
cmp
orl
or
dec
sub
push
popf
add
lret
pushf
push
cmp
push
xchg
add
mov
stos
cmp
ret
xor
and
cltd
cmp
pop
cs
inc
pop
lods
inc
push
inc
sub
ljmp
and
cmp
out
mov
iret
mov
movsl
ljmp
mov
aam
mov
sub
arpl
sbb
and
insb
jno
jmp
in
mov
pop
mov
pop
dec
popf
mov
out
xchg
rorb
dec
sub
out
cmpsb
sbb
cld
xchg
mov
add
or
mov
push
inc
cmp
xchg
push
mov
andnps
fdivl
sar
das
cli
sub
xchg
mov
jecxz
arpl
stos
aad
loopne
imul
test
in
call
cmovg
cmp
lods
mul
in
jnp
or
and
mov
push
pop
icebp
cmpsb
ja
shrl
ds
or
jecxz
mov
inc
out
shrl
ret
fwait
repz
fidivrl
std
mov
mov
xchg
or
add
adc
adc
inc
mov
in
inc
cmp
cli
inc
out
sbb
dec
jae
iret
sbb
or
clc
sbb
ret
incl
jbe
fwait
js
les
xchg
outsb
sbb
gs
in
stos
sbb
clc
add
sbb
fnstsw
push
mov
adc
inc
sbb
xchg
push
rcr
int
add
sub
adc
cld
bound
xchg
adc
xor
lret
adc
and
in
call
sbb
mov
xchg
jle
mov
pop
dec
jnp
test
pushf
jae
mov
mov
sub
aam
jmp
mov
jno
jmp
jp
mov
dec
xchg
xchg
pop
fistps
jg
lock
imul
in
dec
leave
fimuls
sbb
push
movsb
popa
ret
das
lret
popf
mov
mov
jnp
jecxz
stos
xchg
add
adc
push
xor
xchg
jmp
add
jp
fsubs
mov
mov
iret
test
jecxz
lea
jmp
inc
jl
rorb
mov
xchg
data16
shll
push
mov
ss
dec
and
or
ss
jnp
mov
or
jmp
divb
cmp
pop
nop
std
fists
aas
sbb
mov
sbb
mov
dec
sbb
cmp
dec
jecxz
mov
or
rcrb
xor
push
test
add
jp
sbbl
push
xor
leave
mov
movsl
mov
clc
nop
rclb
call
push
xchg
push
mov
inc
daa
and
fdecstp
jbe
fisubl
jb
jecxz
dec
in
addb
xchg
sbb
adcb
out
sbb
mov
in
mov
xlat
rcrl
test
adc
dec
into
cs
sbb
xchg
inc
mov
mov
and
dec
movsl
lret
imul
sbb
aaa
xchg
imul
xor
call
mov
xor
sbb
sub
push
je
in
jecxz
inc
mov
shrb
out
push
jb
gs
scas
push
push
ret
in
fnsave
add
stos
xlat
push
pop
lcall
adc
out
dec
dec
imul
add
jb
mov
pop
xorb
xlat
in
inc
pop
sub
mov
push
ficomps
push
pop
xchg
push
out
add
mov
in
inc
jo
lods
fwait
iret
and
mov
inc
mov
fs
inc
jg
inc
in
jge
lds
jne
add
int3
adc
and
push
push
jle
daa
insb
mov
xor
mov
mov
mov
push
push
sbb
call
nop
fcomi
iret
jne
mov
lods
sub
fcoms
pop
paddusw
jecxz
mov
testl
test
daa
xchg
mov
adc
pop
loop
out
mov
jp
add
loope
jns
mov
movsb
or
shll
or
add
pop
pop
mov
jmp
gs
into
lcall
daa
jne
xor
sub
ds
pop
sbb
xor
setne
gs
das
dec
loope
jns
fcmovu
movsb
jg
fistpll
lahf
clc
mov
jns
popf
mov
push
repnz
fadds
push
fdivp
ret
jo
ljmp
fimuls
push
loopne
and
inc
enter
jmp
testl
jo
sarl
shrb
jb
xor
adc
aas
ja
sahf
dec
jae
jl
sub
push
push
push
mov
or
jb
lock
cmp
inc
dec
dec
mov
cmp
pop
outsl
xchg
out
pusha
enter
scas
icebp
jp
mov
or
inc
cld
sub
mov
in
push
mov
arpl
pop
rorl
out
fadds
hlt
push
pop
cmp
add
js
das
loope
js
adc
xor
cmc
inc
int
adc
push
outsb
jg
cmp
in
fcom
sub
sbb
xchg
nop
sub
cmpsb
mov
notb
jne
push
mov
test
ja
push
add
adc
xor
scas
push
sub
dec
leave
aam
push
cmc
inc
sub
add
cmp
aas
das
pop
adc
sbb
mov
mov
or
pusha
sub
in
shlb
iret
cmpsl
clc
mov
sub
cmpsl
add
into
movsb
fstps
push
fsubrl
dec
cli
mov
icebp
sti
rclb
movsb
jmp
adc
das
stos
pusha
lret
mov
dec
stos
fmulp
adc
sub
cmpsl
adc
movsl
fmul
in
popa
pop
mov
cmp
jle
data16
test
adc
sahf
aas
inc
test
addl
xlat
adc
cwtl
mov
push
fwait
pop
shr
ja
lcall
leave
imul
xor
sub
stos
and
test
mov
push
aaa
xchg
daa
lock
jns
lret
je
dec
insb
shll
mov
mov
sbb
fs
in
mov
sub
xor
jp
jmp
push
pop
sbb
cltd
or
dec
xorl
stos
das
adc
sbb
in
test
ljmp
sbb
inc
mov
leave
sub
cltd
push
lods
into
roll
jge
cmpsb
push
mov
mov
gs
pusha
sub
imul
mov
fsubl
xor
push
xchg
ljmp
lret
mov
adc
jg
out
push
push
push
aad
add
jo
xlat
push
jbe
adc
stos
hlt
ret
insl
sbb
addr16
mov
scas
mov
xchg
out
mov
clc
mov
or
ss
pop
ljmp
dec
jmp
mov
std
popa
cwtl
stos
stos
das
adc
int
ljmp
inc
inc
mov
mov
ljmp
sub
addr16
xchg
fs
or
enter
rcl
out
dec
adc
or
imul
mov
bound
dec
movsl
and
cmp
pusha
add
mov
clc
loope
jp
xorl
daa
mov
aas
out
ljmp
xchg
push
pop
cmp
mov
push
sarb
or
and
das
int3
mov
lods
xor
ds
sub
aam
pop
and
cli
cwtl
push
loopne
in
in
mov
pushl
jbe
sub
pop
push
es
mov
push
arpl
pop
xchg
push
arpl
dec
xor
nop
aaa
inc
out
scas
daa
xor
jg
sub
lret
rclb
mov
mov
xor
int3
pop
pop
pop
dec
shrb
dec
test
stos
or
jae
cmp
sub
or
sbb
mov
fidivl
loop
ds
fisubrs
cmpsb
pop
test
xchg
arpl
jle
dec
xchg
cmpsb
push
aad
pop
sub
mov
mov
stc
int
mov
test
lahf
inc
stc
jecxz
dec
stos
xchg
push
mov
push
push
lret
adc
xor
fistl
insl
in
sahf
pop
test
je
cmp
nop
sar
mulb
sub
add
jbe
xor
inc
dec
lret
sarl
mov
fisubrl
sbb
dec
pop
insb
es
test
mov
fdivs
or
loopne
mov
sbb
pop
sub
cwtl
jb
cwtl
pop
inc
loope
daa
stc
out
push
add
in
movsb
mov
ljmp
arpl
frstor
dec
movsl
cmp
test
rclb
push
hlt
jecxz
inc
jb
jbe
aad
and
aad
mov
mov
fidivl
jge
push
out
lock
cs
out
test
movsl
lods
std
fmull
sbb
xor
lret
adc
popa
mov
out
xchg
lcall
outsb
mov
scas
mov
fists
pop
sub
loopne
push
and
ret
push
inc
cmovb
fwait
fwait
mov
lds
icebp
loop
mov
loop
loope
push
stc
cmp
test
movsl
jmp
aam
ficompl
ret
pusha
xchg
inc
jbe
xor
add
xor
test
pop
or
adc
clc
jne
jb
push
fisubl
std
push
mov
jo
pop
data16
sbbl
std
lods
lea
cld
mov
lahf
sbb
lahf
cmpsb
jns
movsb
out
or
xchg
sub
mov
push
into
stos
mov
jae
mov
jae
sbb
add
repz
mov
stos
lahf
sub
pop
shlb
pop
push
aas
sahf
and
movsl
fdivl
add
inc
or
or
mov
sti
lea
cmp
cmp
sub
idivb
les
movups
or
jp
inc
jg
mov
and
fisttps
cmp
cmpl
xor
cld
mov
and
mov
sbb
sub
movsb
aaa
ss
mov
push
shlb
faddl
daa
sbb
pop
adc
or
out
int3
or
mov
mov
cmp
push
dec
add
and
ret
xchg
mov
cmp
mov
ffree
jbe
sahf
sub
jnp
xchg
push
ret
or
call
inc
add
xor
mov
pop
addr16
mov
imul
dec
in
stos
jno
lds
or
fld
pop
mov
pinsrw
mov
rorl
test
data16
xlat
add
or
outsl
sub
sub
cs
fdivs
call
outsb
jmp
or
mov
dec
dec
stc
cmp
jo
daa
mov
adc
push
cmp
fldt
mov
fucomi
inc
fadds
xchg
movsl
mov
imul
sbb
repz
scas
pop
push
mov
mov
sbb
mov
not
xchg
lahf
dec
cmp
adc
or
sub
push
sbb
stos
dec
jbe
sbb
push
cs
rorb
dec
add
sub
dec
push
lock
xchg
fstpt
js
int3
and
add
pop
add
outsb
mov
or
fstpt
jp
pusha
or
add
dec
test
mov
cmc
cmp
movsb
xchg
hlt
bound
out
adcl
push
sti
sub
into
clc
adc
inc
stc
pand
mov
xchg
push
xor
dec
lods
lahf
and
out
dec
mov
xchg
lret
and
std
jp
stos
cmp
lods
arpl
or
outsl
mov
stos
cmp
loop
and
scas
pushf
pop
mov
int3
data16
xchg
insl
push
call
sbb
push
flds
or
mov
add
adc
cmp
movl
dec
repz
jnp
js
push
fnstcw
dec
push
mov
imul
insb
mov
lahf
cwtl
push
fsubrl
mov
sub
rol
out
out
aad
and
xchg
pop
and
inc
xchg
pop
jg
mov
push
dec
or
fwait
jecxz
outsb
inc
inc
and
jo
notl
inc
sub
sub
jmp
div
lods
jno
jb
repnz
mov
dec
inc
lds
ljmp
cmpsl
ds
int3
dec
arpl
loop
fidivrl
mov
imul
nop
mov
jle
test
cmc
xchg
in
cmc
cwtl
xchg
push
inc
loope
push
pop
push
and
cld
icebp
roll
push
cs
fwait
or
sub
jo
dec
push
xchg
ficompl
ljmp
push
andb
ror
dec
inc
scas
fs
jbe
popf
jp
jo
je
aaa
jne
dec
adc
hlt
dec
sbb
ret
inc
jae
or
xor
adc
fisubs
sub
mov
loopne
jp
repnz
int3
aaa
imul
sbb
jns
fs
adc
repz
cld
in
adc
pop
into
clc
test
mov
sub
sbb
stc
xchg
jl
shrl
sbb
test
ljmp
test
sbb
xor
xchg
mov
add
xchg
int3
or
aaa
jl
cmpsb
mull
dec
les
or
xchg
lods
les
cmc
add
xacquire
sahf
push
in
fcoml
push
xor
lcallw
mov
mov
pushf
not
jl
insl
or
mov
mov
arpl
scas
or
sub
pop
add
out
push
out
jns
jns
xchg
add
test
xchg
jg
jo
roll
lock
mov
gs
or
xor
inc
out
xchg
mov
sub
incl
jge
xchg
xor
sbb
jle
dec
xor
sarb
ja
scas
xchg
outsl
push
sbb
fdivr
imul
lods
fldt
sti
mov
lret
sbb
ret
mov
mov
mov
mov
mov
out
scas
and
jno
pop
mov
in
subl
loopne
mov
sbb
fsubrp
movsl
jp
out
or
cmp
test
cmp
push
fwait
mov
push
mov
inc
popf
rolb
fcomps
cltd
sub
mov
call
cwtl
loop
and
jge
pop
leave
mov
fsubrl
jl
mov
xorl
movsl
cwtl
insl
scas
adc
add
aad
jne
sti
loopne
outsl
mov
mov
pop
cmpsb
dec
ss
pop
add
sbb
repz
shrb
jg
add
pusha
out
mov
js
mov
jl
mov
popa
push
jg
cmovns
inc
insl
jge
rorl
ret
push
incb
and
out
jno
out
test
push
addb
sbb
lods
mov
push
scas
add
push
jp
push
push
jp
lret
adc
jl
adcl
mov
adc
xchg
lds
lods
or
push
jns
xchg
insl
das
push
cli
idivl
xchg
insl
sti
adc
add
sarl
out
or
sbb
fdivs
nop
inc
xor
cmpsl
jae
lret
xor
lahf
pushf
lods
adc
push
gs
jg
idivl
js
dec
add
pushf
mov
mov
sbb
lods
jle
and
popf
dec
jl
mov
in
and
xchg
and
movsb
das
notl
subb
pop
in
stos
lea
shrb
insl
push
inc
outsb
pop
in
inc
repz
adcb
dec
push
shrb
xor
lods
ret
mov
ljmp
mov
pop
std
iret
test
jbe
dec
cmpsl
es
aad
push
adc
imul
bound
sbb
jmp
outsb
add
xlat
dec
xlat
std
mov
or
jns
notb
inc
inc
dec
adc
jecxz
or
push
sbb
dec
ljmp
daa
push
pop
and
mov
adc
xor
or
out
addr16
in
jl
mov
cld
xchg
push
inc
shlb
xchg
xchg
cmc
xchg
push
repnz
call
xor
push
inc
xor
and
dec
aaa
aas
xor
imul
jmp
pop
pushl
mov
scas
test
pusha
fisubrl
sub
add
stos
movsb
std
and
fsubrs
rcrl
cmp
mov
mov
out
adc
or
adc
jecxz
mov
and
cli
push
movsb
jl
cmp
jmp
add
aas
mov
iret
insb
mov
dec
pop
popf
gs
ret
je
in
mov
je
in
mov
pop
pop
cwtl
movsl
aaa
out
out
imul
xorl
xchg
mov
mov
jge
xor
lcall
mov
daa
pushf
int
ret
imull
in
xlat
cmpsl
cld
fcom
movsl
out
mov
xchg
popf
mov
dec
pop
daa
xchg
std
call
push
test
and
pop
xchg
or
xchg
call
mov
repnz
andb
aas
jae
mov
mov
mov
inc
jae
out
mov
stos
aad
cmp
dec
jle
sbb
enter
daa
call
jl
ljmp
adc
js
mov
mov
in
out
sub
fiadds
push
xchg
jb
push
mov
sbb
fwait
jecxz
mov
dec
sub
mov
fs
jnp
outsl
fimull
fldpi
mov
sarl
jbe
and
sub
inc
imul
push
xchg
sbb
push
cmp
sti
test
lock
lods
pop
sub
pop
movsl
dec
stc
mov
or
adc
ljmp
nop
add
mov
dec
xchg
hlt
or
xor
cmc
mov
inc
push
mov
enter
nop
sbb
dec
xchg
mov
cmpsl
mov
xor
mov
nop
ja
sub
leave
mov
or
mov
push
ljmp
pop
push
inc
jns
in
push
lock
adc
lcall
fimuls
and
add
sbb
sbb
imul
iret
jmp
test
and
mov
rcrb
and
dec
sub
orb
sub
outsl
repnz
out
jp
dec
pusha
in
xor
faddp
add
jnp
pop
or
push
test
lahf
sarl
jbe
and
add
push
mov
jae
ss
fisttps
xlat
mov
js
sub
je
adc
xchg
inc
push
cli
pop
enter
es
and
loopne
adc
gs
mov
shr
xchg
les
mov
xchg
and
mov
mov
lock
mov
ret
dec
mov
xlat
pop
into
sub
fdivp
jg
ja
sub
idivb
jge
inc
mov
xor
adc
sbb
ljmp
popa
subb
push
xchg
mov
pop
xor
mov
loop
mov
in
inc
aad
std
xlat
dec
inc
and
add
movsb
div
ss
jo
int3
jbe
and
divb
clc
repz
cmp
fimull
repnz
mov
mov
popa
mov
and
mov
cld
dec
sarl
dec
and
sub
pusha
and
call
mov
or
push
je
out
mov
daa
xchg
idivb
push
push
das
xor
xor
dec
popa
jl
jmp
sbb
mulb
add
pushl
fadds
lcall
mov
cmpsb
ss
and
lret
push
ss
or
fbstp
and
mov
mov
dec
rolb
xchg
imul
pop
inc
fisttps
sub
jb
sub
or
dec
ret
sub
and
fists
outsb
sub
imul
cli
sbb
adc
inc
cmpb
mov
add
dec
in
idiv
outsb
std
aas
or
enter
mov
lret
in
loop
mov
mov
ss
dec
out
push
scas
inc
cltd
sbb
cld
outsl
cmp
popf
mov
div
mov
xor
xor
mov
push
push
jmp
add
pushf
fwait
das
jno
pop
fdivl
cld
dec
test
xchg
mov
es
xor
sub
xchg
fsub
in
cmp
jno
popa
aaa
dec
cmc
sbb
and
int3
fcmovnbe
cmp
cmp
lock
xor
mov
xchg
out
cld
mov
popa
pop
das
jo
mov
fistpll
sbb
jb
or
cmpsb
jg
jp
cmp
add
lcall
mov
int
sub
pop
pusha
js
andb
push
stos
xor
xor
leave
shl
xchg
jmp
lea
push
idiv
repnz
adc
xor
shlb
movsl
daa
mov
pushf
incl
jo
mov
lahf
jns
fsubs
aad
or
push
das
stos
mov
cmp
xchg
test
cwtl
stc
mov
adc
in
sbb
jb
outsl
inc
fdivp
xchg
add
aam
in
mull
pop
movsb
push
outsb
cmc
call
ss
add
cmpsb
into
sub
rclb
push
cmp
in
mov
in
sub
lret
out
in
mov
cmpsb
nop
rcr
and
ror
dec
jno
pushf
bnd
inc
and
sahf
jb
in
jp
pop
sbb
push
popf
xor
adc
addr16
movsb
dec
mov
or
gs
popf
gs
movsl
std
xor
xchg
inc
loopne,pt
mov
aas
inc
loop
xor
push
into
data16
test
mov
in
orb
fs
popa
sbb
call
out
add
test
pop
in
push
and
and
movsl
xor
sub
mov
dec
std
or
test
mov
andl
hlt
or
push
in
pop
ds
mov
ss
test
fcomp
or
fistps
repz
push
add
mov
dec
mov
push
push
lods
gs
adc
rcr
jle
daa
andb
sub
pusha
mov
fs
pop
dec
mov
lahf
outsl
add
cmp
pop
sahf
shlb
hlt
xor
xchg
ds
push
enter
out
push
mov
fsubrs
inc
or
xchg
mov
mov
pop
repz
xor
push
mov
loope
cmp
fists
or
cmp
push
aaa
jnp
sub
pop
xchg
add
xor
jb
xchg
ret
dec
hlt
dec
xor
mov
adc
mov
fimull
jns
pop
sar
inc
sti
lret
mov
fs
dec
cs
bound
sub
lods
roll
push
bound
pop
flds
fucomp
movsl
aam
jae
fnstcw
mov
cmpsl
dec
ds
std
aad
mov
mov
arpl
lods
cltd
push
notl
sbb
insl
jmp
maxps
vrcpps
adc
mov
bound
sar
pop
and
pop
sbb
jg
in
inc
cltd
sub
or
xchg
pop
jb
ret
fldt
daa
jne
pop
push
push
outsb
inc
leave
mov
out
pusha
pushf
lea
dec
inc
xchg
test
lret
xchg
mov
inc
push
jg
inc
int
mov
lret
stos
nop
jnp
dec
cmpsb
loope
push
fisubl
sub
stos
sub
aam
std
mov
mov
jmp
ret
insb
fsubrs
dec
test
mov
std
loope
out
sbb
sbb
stc
test
lcall
cmp
test
pop
loop
cmp
std
xchg
push
pmullw
xor
incl
push
and
aam
pop
and
orb
push
pop
aad
pop
xchg
mov
inc
push
jmp
repnz
cltd
sub
add
mov
out
aaa
adc
daa
dec
cmpb
fisubl
loopne
inc
div
pop
out
or
lods
xchg
mull
push
aad
negl
lods
insb
stos
mov
mov
imul
jbe
ret
push
gs
gs
das
sarb
movsl
fidivrl
mov
mov
lret
daa
push
cmp
xchg
and
sub
sub
dec
cltd
in
cli
xor
and
call
fs
sbb
jle
je
lahf
dec
adcb
sbb
out
xor
mov
or
and
mov
xchg
sbb
jno
mov
in
mov
or
shll
mov
daa
insl
add
cmc
xlat
out
je
xor
jecxz
inc
clc
data16
xor
ds
inc
ret
push
xchg
mov
ljmp
movsb
sub
mov
in
mov
shrl
xor
sbb
xor
cmp
inc
pop
ljmp
sub
jmp
jb
and
jge
adc
xlat
mov
shll
mov
das
lds
inc
int3
mov
dec
xchg
cmc
sahf
and
popf
mov
repz
push
or
jle
jmp
push
push
das
sub
bound
xchg
subb
jp
mov
inc
sarb
or
pop
stos
scas
insl
in
enter
ds
pop
cmp
std
push
cmp
adc
mov
pop
daa
add
pop
inc
lahf
adc
or
push
test
sub
ss
ficomps
push
sahf
pop
in
les
dec
fbstp
insb
add
xchg
test
dec
mov
lcall
data16
cmp
aam
mov
sub
in
pop
fadds
outsb
sub
xor
loop
cltd
movsb
xor
inc
daa
scas
jbe
push
sbb
mov
icebp
inc
jno
add
sbb
pop
mov
sbb
addl
inc
and
pop
hlt
add
pop
lcall
pop
push
dec
outsb
jp
push
push
rorb
ret
in
imull
cs
popf
repz
lret
cs
cmpsl
mov
push
jmp
cs
int3
gs
push
push
push
push
dec
mov
stc
mov
lahf
adc
add
cld
into
mov
sti
ret
sti
add
ja
ror
rcll
jl
ret
sub
fistpll
xchg
xor
aam
and
adc
pop
push
nop
jmp
mov
xchg
je
ljmp
aaa
xchg
dec
and
les
mov
adc
jb
not
mov
mov
jp
shlb
andb
pop
mov
pop
iret
add
test
shll
add
jns
xor
sub
stos
jo
adcb
aaa
jnp
sub
shll
mov
pop
cmpsb
inc
or
insb
and
cwtl
out
mov
xchg
pop
push
or
lret
pop
mov
es
out
mov
in
inc
or
lret
mov
jecxz
jp
test
outsb
push
dec
shrl
xor
hlt
pusha
int
lds
and
jne
cmp
cmp
sbb
mov
inc
sub
pop
cmp
adc
lds
loope
push
pop
test
and
in
sbb
add
fwait
aaa
fwait
cmp
roll
add
dec
inc
jbe
mov
or
xchg
loop
dec
fnstcw
ret
add
dec
nop
mov
mov
sub
push
in
dec
sbb
cmp
push
dec
lea
dec
add
bound
fiadds
in
mov
into
mov
mov
push
sub
stos
jnp
push
adc
testl
enter
pusha
ret
imul
sbbl
pop
adc
arpl
test
mov
jl
addr16
nop
pusha
add
das
negb
push
sbb
sub
or
stc
xor
cmpsl
cs
and
adc
add
mov
popf
sub
jbe
fistpll
add
push
stc
movb
mov
btc
xchg
idivb
not
and
fmull
mul
mov
dec
jo
enter
idiv
pop
mov
jae
and
dec
addr16
imul
frstor
xchg
mov
lahf
sbb
test
cld
push
xchg
xchg
pop
addb
jge
dec
popa
sub
scas
cmp
inc
adcl
or
fdivrl
test
sub
je
outsl
push
mov
and
lret
pop
dec
jp
lret
jnp
jb
adc
add
sbb
mov
cmp
sbb
push
ret
loope
push
icebp
js
cmp
cltd
inc
pop
mov
aaa
push
xlat
lds
lret
sahf
mov
inc
sbb
adc
in
jbe
dec
lcall
jecxz
pop
stos
xchg
mov
mov
testb
inc
popa
add
jns
aam
inc
push
aam
jne
push
dec
shlb
insb
das
mov
push
decb
aas
push
imul
ss
lcall
mov
inc
aam
cmpsl
das
nop
xor
out
push
data16
sti
xor
fnstsw
negb
cmp
xchg
and
negl
dec
loopne
jp
sub
inc
lcall
mov
inc
adc
sub
shlb
arpl
jge
into
and
pop
popf
sub
adc
mov
idivb
mov
pop
cmpsb
ret
push
mov
mov
movsl
fsubrs
jp
sub
aam
push
into
adc
xor
mov
xor
insl
out
xchg
ljmp
xchg
mov
cs
rorl
fcmovnb
addr16
mov
mov
pop
and
iret
lea
inc
xor
fsubr
fidivs
scas
loopne
pushf
or
pop
hlt
imul
inc
fdivrs
divb
pop
cld
mov
ja
ja
push
push
fistl
lahf
cs
es
test
lds
jns
syscall
cmp
cmp
and
jge
mov
cmp
fsubr
ret
lret
inc
sub
mov
ljmp
and
loopne
mov
pusha
mov
fistpll
sub
cltd
inc
movsl
and
jno
mov
scas
push
das
mov
and
add
fs
lcall
jnp
sub
insl
shrb
jb
xchg
cli
push
in
sbb
imul
out
outsb
push
aam
mov
mov
fs
imul
cmp
jmp
aam
mov
mov
xchg
sahf
outsl
push
and
lds
adc
sbb
add
int3
insb
jno
addl
adc
call
shlb
sub
les
repz
popa
xor
adc
nop
mov
sti
insb
leave
std
dec
pop
or
mov
lods
ljmp
sahf
push
mov
xchg
fisubs
jge
ret
xchg
lahf
adc
pop
int
dec
ret
mov
push
mov
push
addr16
or
adc
push
inc
out
aad
iret
ret
push
data16
outsl
pushf
dec
imul
filds
sub
cmpsb
mov
jle
dec
mov
gs
in
jno
inc
add
gs
pop
loope
mov
test
mov
movsb
daa
iret
pop
or
rorl
mov
popf
or
mov
int3
fcmovnb
fldenv
es
add
popf
fs
jns
pop
fwait
add
add
pushf
xor
rcrb
xor
and
jne
mov
sbb
stc
popa
cwtl
insl
aad
loopne
adc
add
call
cmc
mov
out
sbb
ffreep
cmpsb
sub
dec
pop
add
mov
dec
invd
leave
and
cmp
hlt
pop
jecxz
sbbb
lahf
mov
mov
es
lcall
xor
pop
icebp
pop
push
sub
push
rcr
into
cwtl
cmp
and
scas
lcall
hlt
rorb
int
rcrb
fsubr
or
or
imul
fsubrs
stos
xchg
ja
cltd
cmp
mov
gs
push
int3
mov
inc
shr
push
call
scas
stc
and
pop
rcrl
enter
fsubs
push
scas
add
jno
mov
fs
nop
xchg
lcall
jge
mov
dec
ret
dec
mov
pop
repnz
std
mov
push
push
mov
addr16
mov
lods
or
rorb
fwait
cmp
out
push
clc
mov
push
je
adc
pusha
rolb
bound
mov
cmp
pop
sbb
push
sarb
daa
daa
call
pop
cld
add
test
aaa
aaa
iret
std
lods
mov
sbb
sbb
mov
in
aam
pop
or
scas
add
dec
push
sub
add
mov
mov
mov
negl
test
stc
mov
leave
outsl
loop
sub
adc
addl
mov
out
mov
and
rcll
shrl
repnz
insl
sahf
stos
loopne
mov
iret
insl
mov
dec
mov
inc
xlat
int
loopne
into
imul
idivl
mov
je
pop
push
in
dec
cwtl
stos
flds
mov
mov
pop
add
lock
lcall
sbb
push
xchg
movsl
and
orb
jns
jb
pop
stc
jecxz
in
sbb
sbb
xchg
and
dec
adc
addr16
loop
xchg
sahf
pop
idivl
mov
sbb
cmp
push
mov
cmp
jbe
lods
iret
jle
fdivl
adc
dec
fmuls
fcmovne
test
flds
and
mov
sbb
ss
jmp
jo
andb
insl
nop
imul
push
mov
sub
jbe
mov
bound
cmp
lds
ficomps
sti
xor
arpl
and
inc
xchg
es
nop
cmc
or
repnz
dec
ret
mov
std
lea
lock
call
push
in
insl
push
xchg
test
xchg
mov
cmp
cmp
popf
stc
daa
xchg
sbb
jns
jno
movb
sub
and
rcll
call
fwait
pop
xlat
sbb
inc
push
pop
inc
mov
xor
fisubrl
jb
xchg
ret
int3
mov
sub
add
ret
mov
pop
lcall
xchg
add
aaa
mov
lret
xchg
mov
cmpsl
push
jbe
pop
sbb
imul
cmc
and
jl
into
mov
insl
push
add
xor
xor
pop
popa
shrb
sub
xchg
sbb
lahf
aas
mov
push
jg
stos
sahf
loop
mov
xchg
mov
fmuls
mov
cltd
fdivl
icebp
lea
lods
sbb
xchg
lcall
mov
xor
and
movsb
sub
ljmp
mov
lret
sub
push
cmp
mov
or
cmp
lret
scas
adc
push
shlb
outsl
mov
aaa
lret
popf
jne
push
lock
fld
imul
scas
leave
or
push
std
lea
stos
jl
xchg
cmp
push
hlt
popf
xor
in
das
test
inc
orl
je
stos
jbe
or
xchg
cmp
aaa
add
adc
mov
stos
loopne
imul
sub
pushf
mov
adc
lahf
adc
push
and
push
lods
imul
daa
lret
cmpl
mov
jb
inc
js
mov
daa
test
ds
add
cmp
pusha
xor
inc
cltd
and
inc
imul
and
jge
xchg
loop
pop
loope
movsl
sbb
cmp
xor
scas
sub
lods
xor
shrl
pop
outsb
ret
mov
vmovd
mov
inc
mov
mov
jo
sbb
push
stc
mov
cmp
cmp
lcall
lods
xchg
nop
mov
add
sbb
inc
adc
nop
lcall
frstor
adc
inc
xor
sbb
aaa
rcrl
jl
pusha
aas
xchg
das
lret
and
xchg
jae
pusha
pop
push
jp
idivl
cli
je
or
repz
sub
aaa
pop
cmp
mov
aam
lock
repz
mov
dec
xchg
xchg
int
cmp
xchg
pop
mov
outsl
mov
test
cmp
cs
pop
mov
cvtpi2ps
lret
in
xchg
xchg
xor
movsb
inc
cmpb
and
movsb
lods
inc
mov
push
dec
popa
or
test
xchg
data16
sub
ds
add
mov
mov
dec
rcr
jno
out
lods
jns
xor
adc
jb
mov
mov
push
int3
int3
push
mov
addb
jp
pop
pop
dec
int
inc
jl
idivl
sub
xchg
divl
mov
ss
jecxz
lahf
mov
lret
fsubrs
fwait
or
jbe
imul
or
add
fcoml
loop
xor
ds
xchg
ja
jne
pop
mov
stos
aad
cmp
loop
es
inc
push
popa
push
cmpsl
pop
fcmove
sub
sbbb
jg
fdivrl
cmpsl
and
push
pop
or
aad
xor
pop
in
mov
icebp
xchg
enter
dec
cmp
out
js
add
in
inc
lahf
flds
and
cmp
add
pop
lea
rolb
push
xor
cmp
loop
insb
xor
rorl
out
dec
dec
call
and
loopne
std
xchg
int3
imul
lret
hlt
add
and
es
lcall
aaa
push
arpl
mov
pop
std
add
pop
shrb
aad
adc
lahf
xchg
xchg
mov
ljmp
inc
jno
inc
ret
aas
jo
in
pop
int
ds
mov
cld
xchg
shl
pop
aam
outsb
adc
inc
pop
imul
cli
insb
dec
dec
repz
mov
test
test
add
iret
mov
mov
test
pop
and
pusha
shl
mov
push
int3
aaa
frstor
or
cli
mov
mov
cmp
or
sahf
fadds
sub
adc
sarl
mov
mov
pusha
pop
cmp
adc
pop
cmp
adc
in
sti
or
test
jo
pushf
push
ja
add
movsl
lea
cltd
loope
lods
mov
mov
dec
push
cld
push
adcb
iret
lret
xchg
or
cmpsb
pop
add
cltd
sbb
int
push
xor
mov
add
daa
adc
sbb
xchg
test
ret
mov
sub
dec
test
and
fdivl
test
mov
sbb
jg
idivb
xlat
fnclex
pop
mov
in
push
inc
into
mov
mov
mov
in
jo
and
lret
mov
out
imul
std
into
inc
and
popf
cmp
loop
xchg
test
les
adc
out
cmp
leave
icebp
icebp
js
stos
xor
xchg
jne
repz
lret
cwtl
aam
sub
insb
ficoms
enter
sti
cmpsl
mov
mov
or
and
rcrl
dec
ljmp
jne
es
cmp
out
cmc
dec
lret
mov
xchg
xor
lock
push
clc
jg
xchg
xchg
pop
sbb
in
push
jo
cmp
bnd
mov
sub
push
push
popf
sbb
lods
ja
sbb
cmp
in
jno
hlt
insb
adc
xor
pop
sub
leave
aaa
mov
sub
pop
test
lds
jns
sbb
or
push
scas
insb
stos
mov
push
sub
icebp
ret
clc
adc
fdivl
sub
lods
xchg
into
popl
mov
hlt
sub
sub
imul
pusha
insl
pop
imul
mov
xor
cwtl
inc
lahf
cwtl
movntps
ja
mov
add
push
lock
gs
xchg
add
subl
xor
stc
pop
nop
fs
pop
outsb
pop
add
xchg
mov
in
push
mov
cmp
or
inc
cmp
inc
lods
jne
or
and
adc
add
decl
inc
cmp
jp
add
push
pop
mov
lahf
dec
mov
add
push
pusha
cli
stos
imul
push
ss
pop
and
addl
xorl
sub
mov
sub
mov
mov
jl
stos
aas
dec
xchg
loopne
orb
push
jl
pop
dec
jno
lods
or
sbb
in
out
enter
sub
push
sbb
aam
repz
addl
in
jne
dec
mov
int
xchg
push
add
inc
mov
and
test
or
mov
lcall
mov
adc
shlb
pop
clc
outsb
adc
xlat
jecxz
add
jb
dec
mov
pop
gs
sub
addr16
push
in
ss
lahf
hlt
jae
mov
das
in
sarb
and
xor
mov
mov
mov
push
aaa
in
add
dec
mov
clc
shll
sbb
lret
xor
push
testl
jnp
scas
xchg
dec
mov
jmp
fldcw
jne
es
pusha
mov
inc
push
push
inc
sbb
daa
ljmp
xchg
jo
jo
sbb
sti
in
fnsave
cs
jg
out
cmc
dec
adc
sbb
pop
pop
loop
xchg
aas
lahf
mov
mov
push
test
push
sub
push
xchg
pop
cmc
aam
sbb
jae
pop
loop
mov
lods
shlb
and
stos
out
xchg
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
ljmp
pop
mov
scas
or
mov
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
push
or
push
incl
pop
pusha
inc
push
js
adc
push
int3
jle
aam
adc
sub
or
sbb
push
fwait
das
xchg
mov
sub
je
rcl
inc
mov
out
addr16
mov
inc
hlt
pop
mov
stos
or
sbb
adc
cmp
sbb
int
in
insb
incb
cmp
inc
shrl
mov
ret
lock
test
or
mov
dec
cmpsl
jb
sbb
cmc
push
in
push
cmp
sbb
int3
ljmp
outsb
mov
mov
mov
push
or
xchg
push
mov
push
ss
cwtl
push
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
in
pop
adc
mov
mov
dec
or
push
loope
push
pusha
sbb
out
scas
push
pop
add
mov
mov
stos
or
pop
loopne
push
and
pop
movsl
out
stos
or
pop
in
push
pusha
hlt
pop
mov
scas
or
pop
loopne
push
pusha
je
mov
scas
or
outsb
in
push
pusha
hlt
adc
mov
movsl
out
stos
or
pop
lock
mov
stos
or
fisttpl
pop
mov
fwait
add
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
jge
xchg
and
out
stos
or
push
loopne
inc
pusha
hlt
pop
pop
add
stc
adc
adc
out
stos
or
jg
mov
lea
loopne
push
push
lcall
mov
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
sarb
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
pop
loopne
push
pusha
hlt
pop
mov
stos
or
push
pusha
in
mov
or
sub
int
aam
sbb
std
pop
popf
cmp
fstpt
ss
fs
je
iret
filds
xchg
out
mov
adc
add
mov
mov
jb
push
insb
jno
jns
repz
mov
inc
mov
aaa
daa
mov
mov
mov
or
push
pop
movsb
pop
jecxz,pt
push
stos
pushl
insl
jae
cli
add
andb
xchg
jmp
cmp
xchg
idivb
inc
or
jle
mov
lret
in
movd
popa
dec
inc
lods
pop
adc
test
jle
lock
pusha
lahf
test
and
inc
movsb
jge
mov
pop
lea
addr16
jecxz
fwait
call
and
lret
addr16
scas
enter
mov
out
xor
xor
xor
cmp
and
xor
cmp
outsl
fmul
dec
adc
movsl
loope
lds
push
sbb
and
imul
test
nop
inc
or
push
dec
or
add
dec
subb
dec
push
scas
negl
xor
cmpsl
xor
inc
insertq
test
nop
or
push
jge
negb
clc
inc
fmuls
loop
xlat
bswap
mov
jmp
stos
xchg
rcrb
mov
cmc
xchg
or
pop
stc
sub
lcall
xor
insb
mov
stos
addr16
dec
int3
std
xchg
add
in
or
sub
jae
sub
or
jmp
js
das
inc
dec
loopne
cmp
xchg
and
push
lods
cld
dec
mov
sahf
dec
psrld
rcrl
mov
jecxz
dec
imul
adc
push
push
xchg
cmp
testl
xor
cmp
xor
jecxz
nop
inc
dec
mov
ss
mov
push
xlat
dec
ss
in
push
push
enter
sub
push
aaa
jge
mull
out
loop
pop
adc
xchg
cmp
xchg
xchg
insl
jmp
sub
leave
push
ret
testb
lods
or
push
inc
out
xchg
xchg
jo
xor
int3
rorb
loop
jmp
stc
mov
xor
lea
mov
push
xor
stc
jp
dec
push
adc
cmp
inc
in
int3
in
push
cmp
into
or
scas
inc
mov
loop
xor
cmp
push
mov
out
shlb
stc
inc
loope
gs
clc
cld
sbb
pop
xchg
add
bound
or
mov
xchg
fsubrl
dec
gs
sti
repnz
push
sbb
ret
push
in
cmp
jns
dec
popa
add
aaa
sbb
mov
movsl
cmpsl
test
or
push
inc
inc
adc
js
lret
fsubr
lods
push
call
in
adc
xchg
lods
jge
std
lcall
xchg
xor
lods
divb
mov
push
jle
inc
jp
in
mov
test
inc
jbe
jae
xor
mov
jno
cmp
fnstcw
xlat
in
pusha
cmpsl
adcl
call
ljmp
je
movsb
cmpsl
push
push
fcomip
mov
push
or
push
stos
in
decl
sarb
insb
fwait
sbb
popa
add
add
sub
adc
inc
sahf
sub
in
cmc
or
aas
movsb
xchg
pop
bound
mov
cs
mov
movsb
out
es
test
jne
add
add
sahf
mov
mov
mov
sbb
adcl
int3
xor
adcl
push
mov
ret
gs
shll
aam
cmpsl
mov
addr16
lods
and
cli
jno
lret
jl
mov
nop
jno
mov
pop
xchg
leave
mov
or
pusha
jmp
mov
movl
loopne
inc
bound
cmpsl
sub
or
sbb
repnz
adc
fisttpll
xchg
dec
adc
push
or
iret
adc
and
push
mov
je
shr
outsl
sbb
enter
push
cltd
sbb
repz
imul
stc
lcall
cld
sbb
dec
cltd
mov
sti
dec
mov
push
lret
rcr
insl
and
fld
mov
inc
or
iret
mov
movsb
dec
xchg
mov
mov
pop
xchg
test
outsb
cmp
push
loop
push
xchg
mov
aad
push
push
or
in
mov
or
arpl
cli
sti
outsl
add
jnp
pop
pop
push
dec
pushf
push
or
inc
stos
and
jl
psrlw
jnp
ss
cld
adc
xor
push
cmp
sub
lds
add
jae
dec
leave
adc
sahf
sbb
clc
mov
outsl
add
ss
sub
add
jnp
sahf
add
mov
test
push
jecxz
lock
xchg
mov
imul
icebp
add
leave
and
sbb
insb
jp
popa
ds
inc
cmp
dec
and
pop
imul
aas
mov
jo
push
mov
call
dec
cld
aaa
cmp
adc
push
push
fstps
loop
jno
call
aam
add
add
pop
js
lds
mov
fwait
stc
jp
lret
test
sub
cmp
xorl
aad
ret
outsb
gs
scas
hlt
cmp
or
outsl
cwtl
push
imul
push
idiv
inc
sbb
ja
sti
jmp
mul
jae
aas
repz
mov
icebp
sbb
mov
xchg
dec
mov
shlb
int
scas
dec
nop
inc
mov
cwtl
push
and
mov
rcr
inc
repnz
pop
out
dec
cs
jle
cmc
in
xlat
dec
sbb
sbb
xchg
jmp
je
bound
add
std
dec
pop
mov
mov
xchg
xchg
out
jecxz
int
or
in
pop
jo
push
xor
adc
xadd
adc
mov
mov
inc
arpl
cli
fcomps
data16
not
mov
jl
cmp
cltd
popa
loope
push
scas
fdivl
jb
add
inc
xor
pop
push
das
dec
and
repz
in
sub
fisttpll
cmp
sbb
arpl
ljmp
cltd
imull
lock
rcrb
mov
cmp
jmp
pop
ljmp
mov
mov
repz
mov
insb
aas
jae
sbb
adc
aaa
inc
mov
popa
xor
fwait
pop
adc
gs
ror
fisttps
stos
sti
test
fisttps
sbb
cli
xor
mov
cwtl
push
pop
fcompl
fldl
xchg
adc
pop
push
in
testb
roll
lret
rcl
je
testl
fisubs
inc
push
das
pop
fwait
jecxz
stos
lods
gs
movsl
in
mov
xchg
pushaw
test
add
adc
xchg
inc
cmp
push
rclb
dec
mov
ja
dec
xchg
mov
lret
rcr
mov
xchg
mov
push
daa
ret
mov
loop
lret
fdivrs
xor
xchg
sbb
scas
insb
loopne
adc
das
fdivp
add
sarb
mov
outsb
add
mov
jne
sbb
sbb
pushf
int3
or
shl
cmp
rcrb
stos
movsb
sub
pop
lret
outsb
jl
testb
in
lods
push
sti
pop
lahf
add
out
xchg
push
shrl
or
dec
lea
arpl
test
dec
daa
xchg
push
push
adc
jne
jmp
scas
imul
adc
inc
mov
dec
stc
aad
mov
pusha
icebp
dec
lock
cmp
and
bound
xchg
or
jle
in
pushf
out
popf
xor
sbb
iret
or
lock
lcall
stc
ret
icebp
fsts
dec
daa
or
fdivl
cmp
mov
popf
fldl
jmp
and
daa
scas
cld
xchg
mov
js
or
lock
adc
push
jle
vpsrld
inc
mov
adc
push
push
ds
test
test
cld
ja
inc
and
push
add
rorb
xor
lock
push
pop
lcall
stos
and
mov
imull
pop
dec
insl
adc
repnz
jp
push
cmpsl
imul
or
pushf
or
fcmovu
and
ficoml
push
and
dec
orl
add
jp
inc
xchg
cmp
arpl
push
shrb
mov
movsb
inc
outsb
lods
rorb
lds
jo
mov
xor
fdivl
andl
pop
test
or
or
xchg
lds
mov
dec
addb
mov
jge
jne
add
into
out
clc
pop
mov
push
stos
and
pop
sub
xor
iret
in
cmp
cmp
enter
xchg
pop
push
outsb
cmp
mov
fistpll
mov
mov
loop
das
dec
mov
add
pushf
mulb
mov
stos
pusha
iret
jb
pop
fsubp
xchg
out
lea
add
push
prefetcht0
mov
fsubrl
cld
mov
jne
int
push
popf
addb
ss
cmp
popf
sti
add
mov
rclb
or
scas
xor
idivl
push
dec
popa
fstpl
push
and
xchg
inc
jbe
vandnps
les
pop
or
add
call
sar
add
insl
fsts
cmpsl
std
lret
arpl
outsl
adc
and
jp
dec
sub
fisubs
in
orl
jp
fisttpll
inc
xchg
mov
xor
stos
sbbl
insb
dec
inc
mov
dec
xlat
cmp
fbstp
sub
jl
dec
sbb
dec
scas
pushf
push
jns
shrb
push
orb
mov
sti
pop
push
xchg
jbe,pt
mov
jb
cmpsl
call
mov
xchg
mov
icebp
mov
dec
into
xor
jle
dec
rol
jp
jl
mov
and
in
ljmp
push
imul
xor
call
shrb
call
filds
jg
pop
nop
pop
sub
div
push
inc
loopne
add
rcr
shll
dec
roll
loopne
cwtl
adc
std
lods
jb
sbb
mov
stos
pop
pushf
push
adc
movsb
pop
sbb
sub
sub
mov
stos
sub
pop
push
dec
mov
sbb
lret
cmc
movsl
mov
push
adc
rcll
lods
jne
rclb
add
sbb
xor
mov
data16
test
inc
dec
les
sbb
inc
test
push
and
enter
ficompl
mov
push
inc
outsl
jne
pop
insb
and
das
push
scas
lret
inc
mov
enter
shll
lods
lret
hlt
arpl
loopne
popf
test
cs
popa
dec
mov
mov
in
repnz
scas
shrl
rcl
dec
xlat
mov
loopne
movsl
cmc
mov
in
imul
add
push
xchg
jmp
add
mov
jg
mov
cmc
insl
push
je
outsb
in
pop
std
jmp
lds
pop
pop
pop
outsl
enter
mov
xor
psubsb
cwtl
fnstsw
movl
jne
and
fisubrs
das
pop
dec
pop
jmp
pusha
mov
daa
sub
cld
dec
cli
jb
xor
enter
aas
pop
sbb
xor
push
or
cmp
add
cmp
inc
dec
push
and
test
mov
iret
xchg
pop
insb
cmpsb
adc
dec
lods
fbld
push
loope
enter
movsl
cmp
bound
or
cld
jg
popa
xor
jmp
xor
gs
push
cmp
dec
out
cltd
fnstenv
das
stos
les
push
sub
mov
icebp
rcrl
in
mov
les
call
jne
addl
or
stos
dec
xchg
jl
xor
adc
outsb
scas
push
sbb
jo
inc
loope
sub
sub
stc
mov
adc
or
int3
ds
push
clc
es
cmpsl
dec
adc
pop
pop
adc
add
mov
xor
mov
xchg
xor
cmc
push
dec
jbe
outsb
xor
fs
xchg
aas
dec
mov
xchg
push
imul
pusha
jg
xchg
icebp
jns
cmp
fcomp
sqrtps
dec
clc
fsubrs
sub
lcall
not
pop
pop
adc
dec
mov
push
das
inc
das
ja
fnstsw
int
fwait
push
loope
adc
push
aam
pop
es
sub
out
sub
aad
or
inc
jg
aas
jle
insb
idivl
pop
pcmpeqd
stos
and
es
into
ret
dec
mov
add
iret
fwait
and
adc
sub
imul
jge
push
pop
adc
repnz
jl
popa
test
lcall
lret
std
xchg
pop
inc
jae
popa
aam
sub
loop
inc
or
arpl
xchg
daa
and
je
fs
sbb
and
pop
push
pop
ja
ja
loop
sbb
dec
cli
cmp
lcall
movsb
xchg
jecxz
inc
mov
frstor
push
or
or
mov
jmp
jge
out
sbb
repz
cmpsb
mov
sbb
movsb
inc
mov
shl
fsubrp
enter
push
mov
mov
adc
xchg
pop
or
into
fnsave
pop
jecxz
cmpsl
aas
test
arpl
sarl
xorb
sbb
mov
xchg
push
cmp
sub
sbb
into
xor
add
inc
test
loope
stos
mov
jle
or
inc
jbe
xchg
cmpsb
in
mov
jo
mov
ss
push
xchg
jle
adc
imul
dec
add
in
je
sub
fcmovnb
add
jns
mov
stos
dec
iret
in
js
xchg
aas
mov
mov
cmp
jno
sbb
cli
push
mov
cwtl
movsl
xchg
cmpsl
stos
ljmp
insb
mov
xor
push
jp
pop
sub
add
or
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
