sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
dec
add
sbb
shl
mov
add
sbb
xchg
cld
ds
mov
sti
andl
pop
ret
push
lahf
lahf
fwait
jp
adc
push
mov
add
jb
inc
lods
or
test
mov
adc
leave
adc
add
push
lret
mov
pop
mov
fstl
inc
xor
jbe
adc
add
out
push
jecxz
imul
pop
mov
xchg
jl
aam
push
divl
mov
sbb
cmp
mov
mov
aam
xchg
sbb
fcmovu
and
out
xlat
cmc
xor
push
imul
popa
cs
into
ret
movb
movsl
out
mov
xor
ja
shrb
call
and
jnp
xor
mov
decb
test
xchg
sub
xchg
sbb
popa
mov
loop
mov
jmp
or
rolb
sub
sub
aaa
stos
push
pop
fwait
aaa
mov
int3
add
punpcklbw
sbb
sbb
shl
out
rcl
in
mov
sbb
jne
std
rcrb
in
gs
cmp
mov
mov
pop
inc
dec
shlb
dec
mov
aam
cmp
lds
dec
cmpsl
test
jmp
mov
fstpt
sbb
mov
shrb
lds
stos
in
adc
mov
rorl
pushfw
fwait
shlb
lret
jns,pn
adc
pop
fxam
jnp
mov
pop
xchg
pop
mov
imul
out
out
outsl
sahf
cltd
mov
arpl
xchg
mov
fmuls
cmc
add
pop
mov
xchg
pop
mov
sub
lea
call
scas
push
std
leave
push
rclb
pop
cmpsl
fidivrs
xchg
xchg
pop
repnz
and
loope
pop
sbb
jle
and
cs
mov
cmp
jbe
dec
aam
adc
imul
enter
jge
aad
xor
mov
sbb
dec
mov
jle
or
jbe
sar
gs
inc
jno
mov
sbb
xchg
jb
rolb
stos
and
fwait
push
loope
push
pop
cld
es
sti
aam
arpl
std
add
ret
xor
or
lods
shlb
or
repz
stos
fidivl
fidivl
sti
mov
aaa
dec
push
icebp
sub
inc
inc
jl
mov
dec
repnz
pop
pop
xchg
hlt
outsb
fwait
scas
mov
lds
push
mov
fisttps
adc
mov
int3
call
sti
test
sub
lea
mov
xchg
add
call
xchg
test
rcrb
mov
dec
mov
cs
push
jge
ss
jp
stc
bnd
pop
into
inc
pop
ficoms
lret
cwtl
mov
lahf
cli
adc
adc
cmp
jae
jmp
and
jl
aad
mov
inc
lock
fldl
paddsb
aas
out
mov
stos
movsl
pop
das
popa
loope
add
hlt
icebp
js
dec
repnz
pop
fninit
and
push
or
adc
fildl
mov
xor
cmp
paddusw
movsl
add
xor
scas
loope
rorl
mov
arpl
dec
cmp
jge
dec
mov
das
pop
adc
or
clc
sub
mov
jns
out
mov
or
xor
sub
sbb
sbb
sbb
add
adc
xchg
jl,pt
inc
arpl
cltd
out
into
sbb
mov
pop
sub
xor
mov
sbb
mov
and
rcrl
inc
cld
das
repnz
pop
loope
rcrl
mov
lea
jecxz
sub
mov
xor
lret
sbb
das
emms
or
sub
rorl
loopne
pusha
mov
pop
and
dec
ret
xchg
loope
rcrl
mov
cmp
movsl
mov
repz
mov
sti
daa
sub
mov
cmp
inc
popa
dec
mov
fwait
aaa
sbb
cmpsw
test
int3
push
inc
call
popa
arpl
mov
xlat
push
filds
xor
jmp
imul
cmp
sbb
cmp
or
mov
enter
xchg
push
scas
sbb
daa
dec
bound
xor
sbb
mov
sub
stos
dec
das
jno
lret
sbb
popa
mov
adc
and
cmp
sub
inc
loop
loopne
aas
or
lret
loopne
xchg
rol
push
push
cmpsb
int3
lods
push
lahf
cmp
les
push
push
fsubrs
sub
test
fisttps
add
nop
mov
mov
aad
mov
cwtl
jb
inc
dec
pop
out
out
pop
les
dec
in
lahf
jl
mov
adc
add
ret
cmp
mov
inc
xchg
popf
or
xor
or
das
out
iret
jg
push
in
inc
mov
dec
test
push
cmp
mov
outsb
or
mov
mov
inc
idivl
mov
pop
and
mov
pop
push
jnp
pop
insb
adc
xchg
aas
js
pop
repz
dec
xchg
hlt
xchg
sti
in
mov
fiaddl
es
inc
call
xchg
jp
xchg
xchg
stos
mov
xor
ljmp
lcall
cmp
iret
loop
pop
int3
lea
push
ds
test
lock
orb
divl
mov
and
popa
and
pop
int
sar
mov
dec
mov
mov
scas
and
xchg
stos
sti
loop
cmpsl
push
add
sbb
ss
lods
loop
pushf
bound
jge
push
xlat
cmp
adc
mov
leave
pop
sub
cs
mov
fmul
push
add
xchg
shll
shl
cwtl
aam
push
int3
sahf
sub
push
pusha
inc
call
xchg
test
imul
jecxz
inc
ja
imul
mov
dec
lods
xor
xlat
inc
cld
stc
jmp
mov
xchg
les
adc
test
xchg
mov
jmp
inc
mov
mov
sahf
loop
add
iret
push
stos
dec
or
and
fcomp
iret
mov
shll
les
cs
dec
int
mov
repz
or
xlat
and
sahf
mov
into
mov
jmp
push
pop
jbe
loop
in
inc
mov
sbb
pop
ds
mov
mov
mov
cmpsb
pop
fsubl
jae
mov
push
cmp
mov
add
fbld
ja
insb
jmp
cltd
pusha
aad
xchg
xchg
out
jp
out
incl
stc
dec
jg
push
dec
jl
mov
xchg
int
dec
ficomps
ja
rcr
lock
inc
les
out
mov
lret
imul
popa
inc
mov
xchg
insl
cmp
inc
in
push
push
cmpsb
cmp
and
nop
xchg
aad
xchg
push
push
aaa
inc
loop
push
fsubrs
inc
sbb
mov
mov
ss
pop
adc
mov
inc
jno
addr16
stos
xchg
fstps
adc
or
sbb
jae
sub
loope
sub
inc
shll
lods
arpl
insb
mov
sub
and
hlt
and
popa
adc
aas
and
pop
pop
mov
testb
in
pop
daa
je
loope
fadd
xor
rol
lods
cld
cmp
loopne
mov
jge
int3
dec
xchg
daa
addr16
call
inc
xlat
insl
pusha
jne
add
and
les
mov
inc
sar
lods
addr16
mov
aad
aaa
es
pop
xchg
pop
jg
pop
iret
aaa
loope
leave
ljmp
lods
xor
lret
and
in
mov
gs
push
mov
pop
inc
add
sarl
mov
mov
cmp
xor
sub
into
dec
in
std
cmpsl
mov
in
mov
in
ficoml
xor
imul
adc
lea
fdivrl
cli
in
jns
lds
pusha
clc
cmpsb
xor
xor
repnz
ret
in
lods
jo
xor
or
adcl
mov
mov
mov
jns
jmp
addl
out
je
inc
js
sbbl
subl
push
aam
mov
push
push
dec
add
push
xor
mov
loopne
mov
jno
pop
jmp
mov
xchg
xchg
mov
shll
pop
shll
in
sbb
fimull
in
sbb
lcall
xchg
test
stc
imul
in
data16
movsl
clc
adc
jecxz
inc
xchg
lcall
push
es
mov
mov
and
stos
adc
jne
pop
jle
xor
pop
and
loope
sar
mov
rcr
ds
mov
sbbl
sub
pop
lcall
mov
adc
sbb
mov
in
sbbl
adc
sub
mov
adc
nop
scas
add
test
cmp
xchg
scas
into
idiv
xchg
xor
shl
inc
shll
out
ret
or
jge
sbb
pop
pop
das
add
cmpsl
jmp
imul
addr16
gs
mov
inc
sub
imull
adc
xchg
xor
sqrtps
mov
sub
sub
dec
pop
sbb
jae
lds
push
mov
adc
ljmp
and
pop
mov
mov
xchg
negb
push
jns
add
in
sub
xor
cld
xchg
add
in
xchg
mov
add
xlat
push
inc
pop
pop
mov
out
pop
ja
pop
flds
jo
xor
insb
mov
std
fdivs
aad
sub
or
push
cld
idiv
ss
jnp
mov
pop
mov
jb
bound
sbb
xchg
adc
mov
aad
ror
imul
sbb
sbb
mov
std
push
jmp
lret
jg
fcomps
iret
jb
jmp
lret
and
inc
bound
cmp
gs
mov
dec
in
inc
or
xor
clc
dec
mov
scas
or
in
loop
sti
call
or
jo
inc
add
add
adc
pop
jl
clc
lcall
add
js
cli
xchg
mov
cmp
and
leave
pushf
mov
push
mov
cs
sahf
xchg
xchg
and
and
call
mov
fsub
test
les
pop
rcr
mov
cmp
aam
mov
push
pop
jns
aam
cmpsb
cmp
lea
pop
dec
mov
jno
ficomps
mov
sub
ficoms
decb
mov
cs
cmp
cmp
mulps
rcll
ja
and
mov
aad
into
push
jb
outsl
dec
pop
sub
jg
push
or
daa
clc
test
and
scas
addr16
jnp
test
cmp
sahf
xchg
mov
arpl
pop
scas
sub
fiadds
or
mov
mov
lods
add
aaa
adc
push
xorb
push
lock
inc
cmp
dec
ds
pusha
jmp
ret
cs
mov
push
push
subb
inc
out
pmulhw
jmp
std
jo
aas
lahf
push
das
enter
mov
mov
mov
push
repnz
mov
sub
and
or
adc
adc
mov
xchg
jae
stc
les
and
pop
pop
addr16
test
lahf
cmp
pop
pop
outsl
mov
pushf
cmc
leave
aaa
xchg
push
sbb
and
cltd
lock
push
out
repz
mov
lods
enter
fldl
xchg
pop
xlat
xchg
jp
xor
pop
or
outsl
and
sbbb
or
push
mov
clc
push
pop
test
sti
imul
out
fs
repnz
xor
xor
pop
jnp
pop
idivl
or
stos
ret
pop
mov
mov
mov
stos
insl
xor
stos
and
pop
and
or
lock
fs
cmp
std
idivb
pop
inc
cmpsb
mov
inc
cmpsb
pusha
sbbl
lret
sbb
dec
pop
dec
push
dec
in
dec
out
xor
ret
int3
mov
dec
adc
push
scas
das
popf
xchg
mov
adc
test
rcl
cld
dec
or
fmul
pop
sub
xlat
mov
and
test
cltd
cmpsb
in
jbe
enter
mov
shlb
push
rorl
jp
adcb
repnz
mov
push
les
xor
in
int
sbb
out
mov
push
pop
mov
pusha
adc
cli
sbb
popa
test
pop
mov
insl
mul
ret
insl
lahf
in
iret
xchg
mov
mov
popf
rcl
jns
lahf
jecxz
ds
mov
cli
mov
int3
inc
pusha
dec
sbb
sahf
aam
push
std
fwait
jp
je
imul
mov
cld
inc
mov
dec
jl
shll
stos
mov
sub
cwtl
push
pop
aad
jle
fdivrl
arpl
ja
adc
dec
dec
adc
xor
iret
fisubs
cwtl
loope
sbb
sarl
in
xchg
cmpsl
jbe
in
imul
inc
lds
xchg
pop
xchg
mov
xlat
pop
das
or
call
shr
es
pop
xor
mov
in
aam
sbb
mov
ss
iret
mov
out
sub
les
mov
and
jnp
inc
repz
push
fbstp
mov
mov
clc
inc
or
rcrl
sbb
mull
xchg
inc
les
pusha
std
cwtl
ror
fadd
aad
xor
jl
lret
dec
ror
enter
lret
jns
mov
and
scas
pop
xchg
and
xor
ljmp
xor
cltd
in
jp
movsb
fidivs
push
insb
lret
jl
out
mov
pop
jp
in
add
inc
iret
mov
int
push
ja
in
inc
xchg
ret
jno
add
push
in
std
cmp
loopne
test
icebp
xchg
sub
dec
dec
idivl
pop
bound
push
int3
mov
in
and
pop
sti
fbstp
and
mov
test
sub
leave
jo
iret
sahf
xchg
movl
cmp
repz
pop
ret
enter
inc
jno
jmp
xor
pop
sahf
imul
mov
xchg
dec
xor
mov
orl
xor
mov
pop
inc
sbb
dec
cmpsl
push
int
sbb
aaa
xchg
das
popf
in
into
and
xor
movsl
popl
fs
pushf
push
and
sbb
jecxz
jp
bound
and
stos
sub
inc
pushl
push
aas
in
inc
repz
and
test
jecxz
test
testl
repnz
cmpsl
xor
push
testb
into
jge
add
incb
sub
negl
ljmp
add
and
lods
repnz
xchg
inc
jge
adcl
push
adc
stos
and
fcompl
sub
xlat
test
mov
aad
jp
fistl
adc
xchg
push
and
jns
xor
shl
into
in
lahf
mov
imul
imul
push
mov
loope
sub
into
mov
ret
inc
jle
test
icebp
push
loope
dec
fwait
mov
pmaxsw
enter
mov
pusha
push
pop
add
pop
fucom
pop
mov
lods
mov
adc
js
pop
or
pop
test
cs
cmc
mov
sti
iret
push
js
mov
or
arpl
neg
jg
in
aaa
pop
jmp
xchg
ljmp
cmp
mov
xchg
lcall
bound
xchg
cmp
rcll
sub
loope
incl
data16
dec
jae
hlt
into
dec
push
aad
addr16
lahf
sub
dec
inc
scas
enter
sbb
push
pop
mov
xchg
dec
pop
dec
push
cmp
mov
push
xchg
cmc
push
repz
test
push
fists
sub
es
dec
or
sahf
sub
movsl
outsb
aam
sub
xchg
ss
jmp
adc
adc
sahf
dec
lods
sub
mov
loop
xchg
jae
jae
xor
add
ja
or
sbb
pusha
pusha
xchg
sub
enter
mov
lds
inc
in
lret
int
cmp
dec
nop
sub
pop
sub
in
mov
xchg
outsb
xchg
shl
in
xchg
cmp
in
jecxz
imul
ljmp
enter
mov
or
and
dec
mov
out
test
rolb
popf
xor
adc
mov
sub
or
loope
or
add
mov
and
out
pop
dec
stos
xorb
and
mov
sahf
inc
push
push
push
xchg
iret
in
inc
or
movsl
cmpsb
sbb
lret
in
and
push
mov
imul
ret
jmp
jo
out
jo
xchg
xchg
xor
movsb
adc
repz
test
sahf
rol
sbb
rcr
adc
mov
sbb
js
mov
fnstsw
xchg
ja
sbb
or
in
and
mov
pop
jge
ret
out
mov
xor
mov
adc
cld
data16
enter
pop
jbe
pop
les
dec
daa
add
movsb
mov
out
aaa
shlb
adc
aaa
push
push
push
movsb
xchg
push
jp
inc
cmc
cltd
push
scas
scas
les
call
aam
push
sbb
mov
xor
jb
dec
in
jb
mov
stc
jbe
xchg
leave
fs
inc
mulb
movsl
hlt
pushf
outsb
sbb
test
aaa
push
loope
popa
data16
sub
push
pop
xchg
adc
in
fidivrl
pop
aaa
push
stc
inc
es
enter
xor
cmp
push
pop
mov
pop
mov
sub
aad
jb
loope
fcmovnbe
or
adc
mov
xor
xchg
mov
sub
aad
xor
jne
sbb
stc
pop
test
jo
sub
jp
js
push
inc
mov
movsl
iret
inc
shl
ret
fstpt
addr16
stos
minps
loop
mov
fidivs
cmpsl
icebp
dec
fsubrl
xchg
arpl
inc
mov
out
jne
fs
jb
pop
aad
cmpsl
mov
cmp
test
repnz
jmp
stos
cwtl
mov
and
notb
jns
inc
dec
in
push
push
ret
scas
add
icebp
xor
popa
sub
cmp
mull
lea
jge
push
fcoms
enter
pusha
out
lock
mov
scas
stos
mov
shll
mov
jmp
lret
add
cmpsl
xor
cli
sub
sbb
dec
push
jae
popa
add
mov
mov
jne
pop
or
in
adc
mov
adc
pop
sub
add
fnstsw
sub
mov
repnz
test
inc
dec
inc
push
jnp
stos
outsb
xor
add
push
sbb
fs
xor
adc
xchg
xchg
loope
mov
lock
out
aaa
cli
jge
into
out
in
jl
or
jo
and
sbb
add
loop
outsb
imul
scas
sub
daa
aaa
xchg
stos
inc
inc
adc
jl
loope
jge
and
mov
stos
jb
int
imul
inc
popf
cld
mov
int3
das
ss
mov
xchg
fwait
add
test
shr
hlt
aad
pusha
out
outsb
sbb
filds
leave
inc
insb
test
cmp
sub
enter
cmp
pusha
sub
cmp
stos
cmp
orl
sbbl
in
loopne
jge
icebp
mov
sahf
sbb
movsl
out
or
in
inc
lret
xor
mov
ret
pop
cmp
leave
sbb
pop
xchg
shlb
mov
ds
inc
cmc
cwtl
leave
jg
ds
lock
jo
int3
sub
imul
inc
dec
inc
push
push
xchg
dec
daa
dec
push
lea
ret
jb
or
jne
or
jnp
test
inc
outsl
add
cmp
rclb
in
xlat
lret
xchg
jle
lret
rcr
and
push
cli
and
or
adc
scas
inc
sub
xchg
int
rcl
mov
stc
lea
nop
dec
test
sbbl
test
popa
jno
popf
imul
sarb
lret
push
xor
cwtl
enter
add
gs
clc
jne
jecxz
push
cmp
cmpb
sbb
les
sub
das
jns
add
js
pop
add
lods
mov
push
std
sub
jmp
cmpsb
js
push
mov
ljmp
sbb
mov
pop
ds
js
int3
ret
jg
popa
xchg
cld
test
mov
mov
adc
dec
leave
dec
push
mov
subl
sub
into
mov
ja
js
fcmovne
jbe
push
sub
xor
add
xor
lret
and
lods
rcl
inc
test
pushl
out
das
xchg
cld
jl
push
push
cwtl
mov
dec
fs
push
add
leave
subl
cmp
adc
push
ja
rcll
gs
xchg
cmp
jg
repnz
das
dec
sub
lret
imul
lea
repz
idivl
push
inc
sub
jg
fsubp
enter
xor
icebp
js
lock
jnp
jno
mov
inc
jecxz
icebp
and
cs
adc
shl
adc
sbb
jo
mov
mov
rclb
mov
xchg
arpl
cmp
mov
pop
lcall
dec
pop
pop
insb
fdivrs
cmp
or
dec
test
push
loopne
mov
js
mov
pop
or
or
and
cwtl
mov
mov
push
dec
and
xchg
fwait
outsl
add
push
jmp
dec
addr16
and
xchg
aaa
test
jae
jmp
outsb
cvtdq2ps
jo
pop
fildll
inc
repnz
addr16
rcll
fdivrs
lcall
std
sub
dec
mov
xor
les
and
leave
flds
jno
xchg
loope
addl
mov
adc
sbb
and
cmp
sub
outsb
cmpsb
out
and
sbb
nop
inc
out
cli
mov
mov
add
pop
jno
sub
or
mov
jo
mov
and
lcall
sarb
scas
xchg
scas
mov
xor
and
cmp
sbb
mov
or
mov
pusha
xor
repz
popf
pop
push
lods
into
sub
into
xchg
test
repz
pop
mov
pop
inc
sahf
in
outsl
int3
xchg
mov
xor
test
leave
or
data16
mov
mov
imul
push
sbb
jle
mov
jecxz
leave
idivl
add
add
cmp
ds
xor
xor
mov
push
jns
push
push
mov
jge
sub
or
jge
mov
sub
pop
test
out
mov
sub
mov
sub
stos
pop
push
xchg
enter
xchg
jle
mov
orl
sub
cmp
or
mov
andl
jl
cs
test
xchg
cmpxchg
lcall
jmp
repnz
add
mov
adc
xchg
inc
xor
push
xlat
mov
scas
add
jne
nop
repz
movsb
or
jns
pop
loop
jl
lahf
sbb
xor
add
mov
adc
jmp
inc
mov
les
inc
mull
sub
push
sti
popa
push
incl
dec
push
imul
xchg
daa
popf
fisubl
cmp
push
fcompl
push
pop
sbb
mov
lock
or
in
xchg
ret
xorb
push
aaa
orl
dec
mov
repnz
xchg
pop
cmp
dec
repnz
daa
es
mov
cmpsl
clc
mov
xchg
mov
mov
jle
adc
inc
inc
cmp
lcall
loope
and
inc
push
int3
jb
push
sbb
push
fwait
sti
adc
shlb
mov
lret
push
mov
popa
xchg
repnz
fisubl
mov
sbb
call
iret
push
mov
iret
jno
mulb
jbe
jl
mov
fdivl
ja
mov
and
lea
pop
add
sub
jl
and
mov
xor
sbb
sub
lret
sub
mov
lret
push
mov
aad
test
subb
int
notl
mov
test
mov
jo
pop
cmp
sahf
adc
pop
out
dec
ljmp
pop
fsub
enter
or
mov
andb
jne
sarl
insl
popf
imul
cmp
popf
dec
movsb
fmuls
imul
repz
inc
cld
in
fadd
fcom
mov
sti
xchg
xchg
in
xor
pop
adc
sbb
and
and
add
xor
add
sbb
imul
mov
and
aaa
cmc
add
xchg
sub
inc
orl
or
push
testl
lods
cmpsw
sub
cld
mov
outsb
xchg
sub
iret
jmp
push
mov
push
add
jno
push
or
repz
stos
and
sti
in
pop
insl
jbe
mov
adc
xor
stos
cmp
lret
aas
sahf
adc
ss
add
mov
dec
mov
and
fisttps
cmp
dec
sbb
outsb
lea
fisttps
and
adc
hlt
xor
shll
out
xchg
mov
inc
jb
cs
stos
and
aam
push
filds
repnz
int3
cmp
fistl
xor
int3
icebp
sti
rcrl
insl
push
loopne
fidivs
bound
movsb
mov
aad
sub
pop
fnstsw
lea
lds
inc
call
out
cwtl
fistpl
fstpt
incb
pop
ljmp
adcb
push
jnp
sbb
pop
shll
cli
jmp
sarb
aad
aas
out
push
movsb
push
inc
loope
mov
mov
xor
mov
mov
pop
add
mov
or
out
scas
mov
outsb
sub
adc
and
or
divl
adc
je
mov
loop
xchg
dec
in
sub
jne
in
push
adc
js
cmp
js
pushf
mov
das
cli
pop
cmpsl
sub
mov
dec
cmp
test
or
push
cmpsb
ss
outsb
faddl
lods
xchg
dec
cmp
std
mov
xchg
inc
push
loop
sahf
add
push
hlt
push
jmp
or
push
adc
inc
int3
push
sbb
dec
jbe
shlb
and
pop
dec
inc
pop
das
cmp
xchg
and
cmp
mov
test
dec
push
inc
es
jnp
loope
lods
in
rolb
pop
out
jmp
mov
jecxz
add
popl
addb
cltd
frstor
xor
jbe
ja
popa
aaa
jl
cmp
pop
das
pop
cwtl
and
sbb
imul
pop
dec
add
das
mov
sbb
sub
sarb
test
jns
mov
rcr
movsb
mov
fbstp
popa
test
je
xchg
leave
dec
sbb
cmp
inc
and
daa
push
shll
test
imul
push
mov
dec
nop
mov
xchg
mov
mov
fisubl
ljmp
lods
out
ds
cmpsb
shrb
pop
add
mov
jne
testb
mov
cmp
imul
pop
pop
xchg
cmp
xor
stos
jl
pop
add
push
popf
ja
mov
int
nop
inc
inc
mov
mov
cld
cwtl
inc
cmp
adc
mov
lret
adc
out
pop
in
movsb
movsb
and
rol
addb
in
mov
cmpb
shll
sbb
je
xchg
cmp
sbb
pop
mov
jle
movb
mov
icebp
stc
fwait
add
call
insb
sbb
shrb
mov
cli
enter
imul
repnz
repz
xor
mov
push
gs
sbb
pop
icebp
sub
jl
inc
mov
ljmp
out
dec
testl
push
pop
push
sub
mov
xor
aad
dec
jmp
insl
hlt
mov
pushf
in
cltd
sbb
adc
mov
jbe
sbb
and
dec
jno
cwtl
jp
jle
push
adc
fdivrl
inc
jle
es
mov
sub
in
es
imul
push
dec
clc
loop
hlt
and
push
adc
inc
xor
fiaddl
inc
mov
stos
push
pop
xchg
js
and
ds
lahf
mov
cwtl
repnz
gs
imul
stc
and
mov
movsl
and
and
inc
outsb
fmull
mov
jb
sbb
lock
test
push
sti
insb
fiadds
sbb
arpl
loop
mov
in
cwtl
jmp
inc
pop
aaa
inc
adc
mov
sub
mov
adc
cmpl
xchg
jp
rcrb
pop
push
mov
pop
inc
jno
mov
mov
pop
mov
inc
es
adc
cmp
sysenter
movsb
fsubs
outsb
aam
jbe
dec
imul
stc
lcall
arpl
pushl
out
cwtl
ja
icebp
or
rolb
dec
mov
push
cmc
fisttpll
clc
in
sti
nop
fists
add
les
jb
bound
mov
iret
ss
out
out
mov
dec
add
imul
or
nop
sub
cld
lods
jae
inc
adc
sbb
out
mov
iret
push
pop
dec
sbb
bound
lcall
loope
ss
push
push
sbb
sbb
fidivrl
scas
cwtl
sub
sbb
fnstenv
jno
add
js
decl
out
cli
into
pop
mov
ret
mov
imul
adc
stc
rorl
out
inc
sbb
lods
mov
jle
aad
or
or
or
inc
movsb
cwtl
mov
leave
lcall
dec
push
lahf
lods
rcll
adc
ljmp
sub
mov
mov
ret
xchg
cmp
in
jns
shll
loope
lret
jno
mov
mov
lds
test
mov
test
add
inc
inc
out
pushf
jge
jbe
imul
sbb
push
push
add
mov
adc
cmpl
int
pop
or
mov
cmp
cmpsb
fidivrl
mov
aad
dec
ret
cs
push
fnsave
loopne
inc
mov
cli
dec
cmpsl
add
vpaddusw
out
and
outsl
clc
pop
rol
jp
loope
sub
xor
xor
and
add
andb
out
sub
aad
xlat
mov
loopne
mov
fnstsw
js
daa
adc
jbe
and
sub
les
adc
clc
mov
fimuls
adc
jno
mull
repnz
jle
mov
test
push
and
mov
es
cld
aas
bound
jns
mov
jl
aaa
out
and
jg
pusha
into
pusha
roll
or
xchg
xchg
sti
xchg
jmp
movsl
sbb
scas
testb
shrb
bnd
xchg
aam
cmpsb
adc
js
cmp
scas
imul
loope
and
sti
xchg
dec
xor
push
mov
sar
dec
xchg
jno
shlb
repz
xchg
dec
mov
sbbb
into
mov
sarl
xchg
and
adc
ja
imul
jno
mov
pop
sbb
in
sub
lds
push
aad
stc
mov
mov
and
xlat
fistpll
xchg
cltd
inc
inc
or
ss
add
mov
cmp
test
fistpll
sbbb
or
test
loop
jg
adc
or
inc
and
shr
lret
inc
sub
cld
cs
shll
shrl
xchg
adc
lahf
test
fcoms
pop
add
imul
and
aas
in
es
xchg
pop
cmp
repnz
pop
arpl
jl
inc
cmp
push
mov
mov
loopne
int3
ljmp
imul
jp
jge
js
inc
out
mov
add
popa
clc
aad
xor
sbb
sub
push
nop
sti
xor
push
mov
lret
push
mov
ljmp
dec
mov
dec
lods
aaa
sub
loope
inc
add
inc
inc
sub
popf
xchg
cld
rclb
cs
imul
sti
mov
out
mov
lret
pusha
sahf
mov
int
outsl
xchg
jmp
dec
push
not
jg
movsb
std
and
imul
pop
add
jmp
xorl
jmp
cmp
adc
push
xor
mov
push
cmp
dec
xlat
push
int
addr16
jns
cmpsl
add
inc
mov
fstl
jne
sar
sub
cs
sbb
outsb
sahf
sarl
arpl
add
pop
add
clc
scas
jbe
and
insl
dec
and
add
push
aaa
sbb
xor
lock
cmp
dec
add
mov
subb
pusha
mov
mov
xchg
jne
pop
stos
stc
adcl
leave
add
cmp
sub
push
adc
cltd
jge
fucomi
mov
loopne
and
xchg
adc
push
and
test
ljmp
lods
aaa
cli
add
rclb
pop
push
jno
mov
jne
aad
xchg
xor
lret
mov
mov
fldt
xchg
pop
std
xorl
mov
mov
push
sbb
cmp
mov
adc
add
sub
maskmovq
xchg
jmp
cmp
xchg
add
loop
push
cs
scas
inc
cli
mov
mov
mov
movsb
cmp
sub
les
pusha
mov
mov
test
fldcw
jae
jmp
fiaddl
xor
mulb
incb
xor
add
or
mov
xchg
push
pusha
aam
ja
lods
fmuls
push
testl
lock
adc
adc
dec
adc
jae
adcb
add
cmp
mov
or
shr
js
xchg
mov
inc
mov
sub
sub
ja
insb
aad
cmp
orb
cmp
and
test
lock
pop
xchg
cwtl
mov
lcall
dec
movsl
shrb
shlb
xor
lods
lods
push
sub
jg
pop
push
loop
push
pop
xor
shll
push
pop
aas
mov
js
icebp
adc
mov
mov
add
push
push
pop
pop
adc
fsubr
aad
insl
push
mov
xchg
test
jnp
mov
outsb
test
dec
pop
mov
fiaddl
ljmp
xchg
push
addl
fdivr
out
sub
cmp
mov
sub
nop
jb
sar
inc
add
insl
sbb
outsb
mov
pop
push
dec
push
adc
inc
jno
jp
repz
lods
xchg
loop
lret
pop
movsb
mov
jle
push
mov
sar
fcompp
in
rcll
test
sarb
mov
cmp
adc
ss
xchg
sbb
daa
arpl
rorb
cmc
ja
sub
aaa
insl
in
stos
stos
cltd
movsl
test
jno
adc
xchg
mov
mov
mov
lds
movsl
xor
loopne
pop
xchg
pop
jno
add
not
xchg
dec
andl
subl
mov
push
fs
sub
in
adc
rcrl
xchg
mov
lds
xor
jmp
sbb
add
pop
mov
mov
pop
push
lods
in
xor
mov
push
jle
scas
xor
pop
and
jge
test
jp
xlat
movsb
ret
jo
xor
rol
daa
shll
xor
fldcw
ljmp
xor
adc
pop
sub
cmpsb
lods
sub
icebp
loop
push
pop
repnz
data16
gs
popa
pop
ljmp
aaa
inc
pop
sub
lods
mov
mov
or
cli
add
mov
dec
mov
or
scas
mov
pop
imul
enter
and
xor
mull
divb
stos
jnp
adc
out
cld
xor
mov
gs
popa
insl
mov
mov
enter
and
push
mov
outsl
push
and
lret
add
xchg
jo
jae
cmpsb
pop
cmp
jl
dec
sub
xlat
jp
das
lods
sub
filds
sub
fsubs
push
dec
repnz
mov
dec
push
lock
or
cmp
imul
push
test
and
ret
xchg
les
pop
ret
push
sbb
leave
dec
pop
nop
adc
mov
sbb
ret
xchg
pop
ficomps
lock
dec
repnz
mov
iret
sahf
pop
cmc
sub
scas
xor
jnp
sbb
xchg
push
ss
fwait
inc
dec
add
lods
es
sbb
push
sub
mov
fistps
mov
pop
add
lret
pop
dec
fs
sub
push
mov
or
sub
arpl
cld
mov
into
in
sbb
clc
outsb
movsl
cmp
les
out
jmp
out
out
cmp
enter
loope
lret
cmp
insb
lcall
jle
lret
lock
repz
mov
pop
push
sub
scas
in
mov
or
cmp
int
sbb
or
loop
ja
sbb
adc
mov
inc
add
or
xchg
pop
xor
xchg
and
jnp
push
dec
nop
jmp
pop
js
mov
xchg
pop
ret
les
outsl
loope
push
cli
xchg
pushf
js
dec
inc
enter
jnp
xor
adcl
pusha
bound
in
sbb
cmpsl
scas
js
sub
popf
inc
fstpl
popf
loopne
and
daa
popl
pop
mov
ret
rcrl
xor
jae
and
cwtl
inc
or
inc
xchg
daa
lret
lds
sarb
and
jne
adc
stos
jo
das
or
aaa
jne
pop
cmp
cli
enter
idivl
mov
daa
jns
adc
into
adc
aaa
mov
jl
aas
sub
add
cmpl
jae
inc
mov
jns
sbb
les
mov
cld
adc
add
imul
add
or
sti
pop
div
popf
adc
inc
das
cmpb
aaa
sbb
pushf
repnz
cmc
inc
les
nop
rcll
mov
push
mov
out
insb
mov
push
pop
mov
ja
sub
or
jno
sub
sbb
aas
mov
mov
ret
sbb
and
loopne
movl
push
in
add
addl
push
jns
push
sub
mov
test
xor
call
xchg
or
or
add
ret
jne
lret
fmuls
repz
mov
arpl
jmp
fmul
mov
dec
mov
jecxz
iret
adc
mov
xlat
bound
pop
les
or
jle
nop
fwait
dec
lds
dec
sbb
int3
loop
jae
lock
and
xlat
sbb
aaa
push
jne
icebp
jle
ret
cmpsl
and
mov
mov
cltd
jns
or
adc
add
push
clc
xchg
sti
or
test
scas
xchg
enter
cmpsl
scas
rcr
adcl
icebp
je
icebp
pop
enter
aas
xchg
dec
inc
out
jl
xchg
cmpl
jmp
movsb
icebp
iret
xor
scas
mov
mov
dec
popl
xor
iret
test
pop
adc
jl
mov
or
pop
cmpsl
push
and
add
stos
es
fidivl
jb
adc
adc
ja
inc
xchg
aam
mov
jo
or
mov
lods
mov
jbe
ds
adc
mov
les
call
mov
mov
shrb
dec
pop
xor
mov
int
mov
jmp
jecxz
adc
adc
test
mov
wbinvd
test
fistps
xor
dec
jmp
sub
lcall
jnp
int
jnp
sub
lock
and
pop
sub
ss
out
pop
mov
fsubrp
pop
movsb
jo
push
add
mov
xchg
call
outsl
sahf
fdivp
das
in
adc
cwtl
add
aad
mov
and
es
andl
mov
push
dec
mov
pusha
pop
xchg
push
add
repnz
pop
ljmp
adc
cmpsb
sub
outsb
incb
lret
cmp
inc
mov
ja
fidivl
push
xlat
fwait
jge
faddl
adc
dec
xchg
mov
cmp
push
das
pop
add
popa
fisubrl
addr16
cmp
sti
add
mov
popa
pop
push
mov
fcomip
imul
sbb
xchg
insl
nop
cld
clc
rcrb
sub
hlt
mov
lret
mov
pop
jmp
in
in
mov
or
mov
ja
and
pop
xor
dec
in
cmp
mov
inc
jle
in
mov
jbe
inc
jne
dec
dec
sub
push
cmp
inc
dec
out
mov
clc
sbb
cmc
out
xor
aam
lcall
xchg
je
je
fcmovnbe
arpl
mov
or
jns
ljmp
outsl
xor
push
xchg
mov
sub
pop
xlat
mov
xor
mov
lret
in
out
cwtl
cmpsl
xor
jmp
rolb
daa
jno
call
in
pop
xor
inc
and
iret
cld
in
xor
pop
xor
stos
rcl
lea
shll
push
mov
jl
dec
into
mov
mov
sarl
out
repnz
fisubl
popf
jb
mov
fidivs
je
das
out
in
dec
mov
cmp
mov
pop
jge
push
test
in
push
lret
daa
pop
sbb
mov
cmp
nop
xchg
outsl
jl
aam
mov
lods
pop
mov
xchg
xchg
inc
sbb
xor
addr16
aas
dec
push
popf
cltd
inc
out
jo
xchg
or
imul
mov
cmp
stos
outsl
mov
in
sbb
or
popf
xchg
cmp
les
call
fcomp
pop
jle
add
fcomps
loopne
pop
mov
push
test
js
sub
ret
xchg
loop
ret
stos
pop
shll
fisubs
test
and
mov
orl
shr
mov
mov
pushf
stos
pop
or
and
test
xchg
stc
aad
daa
push
mov
inc
sbb
fldcw
movsb
push
outsl
in
or
int3
inc
sti
push
aas
inc
cltd
int
cmp
sahf
pop
pusha
xor
mov
adc
shll
addr16
sbb
les
out
sbb
lahf
stc
roll
pop
pop
fnstenv
aas
in
fstps
popa
push
inc
dec
mulb
stc
out
mov
in
add
dec
pop
or
out
inc
pushf
ret
or
aad
js
hlt
pop
pop
ficompl
lret
pop
xchg
cmp
mov
or
sahf
inc
push
sbbb
loopne
mov
mov
push
iret
xchg
lret
add
icebp
xor
dec
xchg
adc
testl
mov
add
jge
cmp
mov
xchg
mov
or
cmp
into
lcall
in
decl
orl
push
aas
sbb
subl
cmp
out
add
es
jge
clc
in
cmpsl
gs
popa
cmp
aaa
out
fwait
xchg
loope
push
out
mov
dec
out
js
and
fistl
leave
std
cmpsb
and
xor
sbb
pop
push
out
xchg
movsl
push
mov
popf
fsts
shl
pop
push
cmp
test
fucomi
repz
inc
inc
subl
xchg
in
fsubs
jb
into
mov
lret
shlb
insb
jle
in
xor
popa
cmpsb
rorb
aaa
loop
push
mov
cmpsb
xchg
testb
loope
pop
fcomps
inc
xchg
rcrl
mov
cs
ret
icebp
and
pop
or
mov
xchg
adc
dec
pusha
pop
shrb
in
movsl
sbb
sahf
scas
or
iret
int
xchg
out
sbb
fstps
dec
enter
push
pop
jo
das
je
cmp
lcall
and
stos
jp
mov
popa
xchg
fmuls
lcall
repnz
xchg
testl
and
sub
lret
iret
inc
pop
loope
je
andb
or
push
mov
lret
scas
mov
push
enter
fwait
in
mov
jle
enter
xchg
mov
aas
cmpsb
cmc
js
in
jle
out
or
cmp
jnp
fwait
dec
jecxz
jmp
pop
fidivs
ljmp
add
pop
cwtl
add
mov
wbinvd
inc
inc
dec
out
jl
data16
std
std
popa
inc
sbb
shrb
sub
mov
mov
test
call
loop
jle
lret
pop
sbb
adc
xchg
into
inc
push
cmc
popf
push
in
or
ds
pop
push
pop
lea
push
jge
adc
jg
cld
outsl
movsb
dec
shlb
pop
repz
ror
test
pop
pop
pop
mov
jns
cltd
mov
in
inc
mov
adc
outsb
and
into
cmpsl
imul
ljmp
xchg
xchg
and
cmp
add
rcrl
sete
in
xor
cmpsl
xlat
jns
test
out
mov
xchg
rcll
les
push
notb
dec
dec
lcall
loope
jae
mov
iret
pop
and
pop
es
adc
jno
and
jae
adc
mov
lods
aas
ds
movsl
jge
sbb
mov
add
jecxz
mov
roll
lahf
cmp
sub
fcomi
leave
rcrb
mov
jno
push
cmc
or
idivl
dec
or
ss
inc
mov
xlat
and
sbb
ss
fisubl
xchg
loop
fiadds
sbb
mov
insl
push
loopne
popa
mov
shll
sbb
ficomps
or
xor
testb
roll
pop
push
repz
and
adc
repnz
cmpsl
cmp
hlt
mov
loopne
inc
lret
repz
mov
roll
sbb
out
cmp
insb
jbe
jno
or
mov
in
xchg
lods
out
clc
xlat
sbb
in
pop
and
or
xor
or
insb
and
or
pop
xchg
cmc
and
je
fwait
and
sbb
enter
or
mov
fistl
xchg
push
push
stc
jnp
sbb
add
les
mov
pop
mov
sbb
pop
fs
lea
pop
inc
push
lods
decl
call
sti
cld
hlt
leave
jno
orb
dec
clc
add
test
push
dec
xchg
outsb
xchg
lds
movsb
stc
jge
loop
negb
mov
test
popa
out
scas
push
push
fdivr
mov
lods
fs
mov
pop
daa
jae
inc
cltd
jl
push
lcall
jae
movsl
loopne
mov
push
out
lret
fcomps
mov
mov
in
out
or
ret
or
outsb
jl
int3
inc
pop
movsl
pushf
cs
cmp
sar
adc
test
mov
test
fstps
js
in
inc
inc
fwait
lcall
lcall
push
pop
push
aaa
shrl
and
push
sub
push
aaa
fst
xchg
popf
inc
insb
mov
cmp
shll
push
aas
bound
lock
bound
pop
jg
mov
pop
movsb
and
inc
dec
sub
loopne
pop
push
in
test
sbb
test
xor
xlat
jecxz
das
sbb
and
data16
and
mov
leave
icebp
subl
hlt
sahf
dec
mov
xchg
sar
cld
xor
test
scas
mov
and
int
add
xor
out
dec
xchg
hlt
add
push
xchg
fsts
outsb
push
mov
outsl
xchg
mov
xor
js
adc
mov
jecxz
insl
sbb
jns
clc
loop
mov
mov
jnp
fwait
cld
xor
cmp
pop
adc
and
sahf
fwait
in
cmpsl
shlb
addr16
outsb
dec
adc
add
adc
cmp
je
cli
lahf
xor
pop
sub
inc
leave
lock
dec
int
jle
incb
bound
test
lods
push
ja
mov
pop
mov
sbbl
jmp
push
sbb
push
jecxz
adc
pop
lods
leave
in
mov
imul
imul
jge
stos
xor
jb
cltd
lods
jl
lock
mov
xchg
dec
addl
movsb
scas
ljmp
fisttps
ret
and
dec
das
dec
mov
inc
mov
clc
jecxz
or
or
jl
in
pop
add
mov
add
and
leave
inc
xchg
pusha
pop
mov
ljmp
xchg
adc
xchg
inc
jg
aam
jge
jns
test
lahf
repnz
into
pop
bound
cmp
push
push
add
adc
add
xchg
cwtl
ret
andl
rolb
adc
jo,pt
shrl
xor
imul
xchg
repnz
addr16
outsb
shlb
ss
jnp
out
and
out
xlat
decl
inc
js
cmp
popa
mov
jg
aam
test
jbe
jmp
mov
sarl
sbb
sbb
popf
pop
pop
mov
lea
popf
inc
in
lods
xor
cwtl
ficoms
jmp
shlb
xchg
decl
jno
popa
jnp
mov
insb
mov
jmp
pop
scas
add
popa
pop
mov
pop
lret
push
inc
sbb
or
xchg
push
or
addl
push
push
mov
sbb
mov
jb
pushf
adc
fwait
xchg
in
ds
cwtl
pushf
cmpsb
shrl
push
xchg
ds
leave
inc
in
loopne
lret
xor
cli
data16
mov
mov
dec
jb
int3
and
sbb
jbe
sbb
inc
push
and
outsl
outsl
mov
je
fstpt
std
das
mov
push
jno
bound
gs
ret
stos
ret
xor
fnstcw
inc
cwtl
lds
fnstsw
sbbl
mov
lea
pop
sub
dec
inc
mov
xor
cmp
and
xchg
ret
xchg
aas
sbb
fsubrs
ja
les
mov
lock
ljmp
xchg
lret
push
loopne
jbe
test
push
int
stos
xchg
ljmp
mov
lods
inc
push
cld
clc
inc
test
in
gs
or
negb
fstpl
shll
stos
enter
xchg
push
cmp
xchg
cmpsb
popf
scas
leave
fadds
push
lds
xlat
insl
inc
icebp
mov
jecxz
jne
sbb
or
and
pop
jo
push
into
mov
xchg
push
xchg
push
push
test
mov
pop
mov
in
cmc
das
jno
das
pop
mov
mov
ljmp
mov
jecxz
addr16
insl
jb
mov
dec
xor
fstp
jno
cwtl
ficoml
lock
jg
inc
inc
adc
adc
pop
outsl
jo
es
push
xchg
jmp
mov
push
xchg
mov
lcall
in
ljmp
in
dec
adc
sub
addr16
test
imul
mov
aas
add
ljmp
fwait
pop
cli
hlt
cli
lods
lret
cmc
rcr
mov
push
or
into
mov
loopne
test
xchg
inc
mov
shll
popa
js
xor
xchg
mull
sub
cmp
fnstsw
mov
icebp
dec
mov
fistpll
mov
std
mov
mov
push
mov
inc
xchg
dec
pop
and
mov
mov
mov
mov
and
cmpb
cmp
inc
imul
rcrl
notl
and
pop
push
test
pop
jnp
es
and
je
aaa
inc
sar
cld
negb
cmp
ja
outsl
test
mov
and
jne
xor
icebp
cwtl
inc
scas
or
xchg
cwtl
hlt
and
ret
push
xor
or
or
fadds
or
mov
fnstcw
fisubrl
scas
mov
add
sbb
pop
and
stos
pop
xchg
mov
fcomp
mov
dec
lock
cmp
push
xchg
ret
dec
cmc
or
fwait
dec
sbbb
iret
mov
enter
push
adc
sub
and
stc
data16
fisttps
out
inc
mov
jecxz
insl
inc
push
and
sbb
repnz
cmp
add
sar
fdivr
and
rcll
arpl
pop
jne
out
push
mull
cmp
and
dec
loop
outsb
addl
inc
frstor
or
cmp
xchg
movsb
fidivrs
cmp
sbb
dec
jg
ja
mov
mov
jb
xor
iret
and
dec
mov
inc
sub
mov
push
movb
lret
xchg
mov
dec
xchg
ljmp
dec
loope
insl
or
insl
jb
lahf
sarl
addr16
outsl
sub
enter
jle
or
mull
xchg
sbb
out
adcw
mov
cmpsb
mov
enter
jb
pop
xor
cmp
lret
and
dec
scas
leave
cld
imul
mov
ljmp
jge
cmpsl
fists
jle
xchg
jg
pop
rcrl
xor
push
inc
out
out
xchg
jo
jno
int3
mov
bound
js
fiadds
adc
mov
dec
lret
rcrb
ss
mov
lods
movsl
or
pop
ja
mov
jns
xchg
sbb
mov
xchg
ss
sub
mov
cltd
push
subl
dec
lods
mov
mov
inc
cltd
mov
das
sub
add
call
scas
lret
xchg
ret
inc
mov
fistpl
mov
xchg
or
stc
jge
inc
arpl
cmp
shl
pusha
in
sub
jb
sub
fisttpl
lds
int
push
cmc
dec
mov
enter
adc
cmpsl
xchg
jmp
inc
int
cmp
subb
and
mov
fstl
aas
out
std
xchg
jne
int3
movsl
push
add
xor
inc
and
ljmp
adc
or
xor
xor
insb
pop
sbb
jbe
dec
loop
pop
shll
addr16
mov
mov
adcb
int3
ret
idivl
ljmp
push
call
lods
jbe
push
iret
fstl
jp
push
jae
out
pop
int
call
shl
mov
mov
popa
bound
dec
es
lcall
into
movsb
xchg
je
repz
decb
int3
lock
stos
js
ret
pop
and
pop
testb
cmp
mov
movsb
or
mov
jb
arpl
fsubrs
mov
inc
aaa
lcall
push
and
xchg
inc
mov
jecxz
xchg
icebp
pushl
mov
mov
pop
sub
mov
test
hlt
adc
mov
or
adc
paddusb
add
leave
pop
out
cld
inc
mov
push
sub
lods
push
cmpsb
cld
mov
mov
es
mov
mov
sbb
ds
xlat
pop
add
mov
inc
mov
pop
xor
mov
and
popa
clc
and
pop
fs
push
sti
mov
jns
pop
lahf
loop
push
ret
adc
cmp
adc
fidivl
std
cmp
insl
jg
pop
mov
xor
mov
int
xchg
inc
int
push
xchg
out
sub
repz
jg
jae
movsl
rclb
les
ss
das
pop
jnp
mov
xor
sub
repz
add
sub
je
enter
and
push
push
pop
loope
xcrypt-cbc
cmpsl
shll
add
jae
inc
notb
es
scas
rcll
pop
or
scas
sarb
jg
addb
xchg
or
cmp
call
in
inc
imul
mov
pop
push
fadds
lock
js
mov
xor
stc
xor
popw
loopne
adc
ja
sub
loop
sub
rorl
xchg
subl
mov
xchg
les
outsl
test
and
adc
pop
popf
testl
xor
mov
cltd
or
fcomi
or
or
pop
addr16
pop
xchg
adcl
or
xchg
out
xchg
icebp
push
fucomi
daa
cmpsb
leave
lock
xor
aas
fdivrl
ret
xor
test
test
push
add
ret
cmpsb
outsl
stos
inc
je
mov
jo
jbe
lods
fimull
xchg
push
sub
xor
pop
add
notb
insb
mov
push
mov
and
pop
push
mov
pop
mov
cli
dec
fists
rcrl
and
dec
sbb
popa
and
or
arpl
int
notl
dec
push
inc
data16
int3
sub
mov
mov
and
dec
pusha
xchg
jmp
sbb
pop
push
mov
fldenv
divl
mov
jge
add
je
or
inc
fdivs
xor
pop
fscale
adc
sub
lahf
lcall
fistpl
lea
les
mov
cmp
adc
setl
sbb
loope
mov
jle
imul
mov
mov
jns
or
jp
fwait
jnp
adc
cmc
xchg
fs
sarb
mov
cmp
jl
cmp
pop
mov
jo
scas
add
jno
mov
and
jecxz
in
rcrb
repz
roll
push
out
inc
pop
test
shl
xchg
add
and
mov
and
mov
scas
jne
sub
outsl
jecxz
in
fadd
outsb
lea
je
les
dec
ss
lds
aam
and
fsubrl
add
xchg
and
inc
call
popa
jl
imul
orl
or
fdivrs
dec
cmpsl
mov
movsb
ss
loope
pop
loopne
xchg
ds
and
dec
loope
stc
sub
xchg
mov
inc
pop
hlt
jl
dec
xchg
sub
sahf
into
mov
js
or
imulb
sbb
loopne
push
rorb
inc
mov
sti
jg
inc
test
inc
add
mov
mov
test
shll
in
aad
mov
sub
inc
enter
jo
push
fildll
or
inc
stos
inc
add
mov
xorb
pop
and
andb
and
pop
cmp
push
enter
pop
leave
int3
daa
es
pop
hlt
cs
adc
push
jae,pt
fwait
push
jne
lcall
lret
push
imul
add
adc
sub
dec
push
lcall
xchg
aad
lret
fcmovnu
mov
fbld
lahf
cmpsl
push
push
jnp
mov
sbb
dec
fsub
push
rorb
outsb
cmp
xchg
or
mov
stos
adc
lret
sbb
aaa
push
cld
jp
push
fldt
daa
lods
clc
lcall
xchg
repnz
xchg
in
add
sbb
in
jns
outsl
push
sbb
jmp
popf
mov
les
sub
insl
stos
nop
pop
call
mov
jg
dec
jle
imul
adc
add
push
jecxz
push
orb
or
pop
std
push
fidivrl
nop
mov
inc
sbbb
cmp
xorl
lret
xchg
ficoms
inc
mov
out
or
enter
pop
loopne
call
fsubrl
in
pop
mov
js
out
dec
jo
scas
int
ffreep
int
pop
push
loope
mov
and
cmpsl
inc
daa
lret
enter
cmc
xacquire
rcrl
out
outsl
imul
stc
xor
xchg
jb
dec
adc
inc
lret
cmpsb
push
in
jle
cld
push
ds
jecxz
mov
dec
icebp
fistpll
mov
adc
jp
fsubl
jne
xchg
xor
scas
sbb
repz
add
inc
aad
mov
mov
push
andb
xchg
fsubl
xchg
xchg
push
jge
add
lcall
inc
pop
stos
pop
cli
cmp
mov
popa
add
test
test
scas
cmp
push
lds
xchg
mov
push
jp
inc
and
jno
loop
enter
inc
xchg
xor
mov
das
mov
loope
jb
stos
lea
ror
jae
adc
ds
addr16
fstl
roll
cmp
lahf
and
mov
mov
in
push
and
hlt
mov
adc
xlat
sub
and
inc
mov
icebp
adc
mov
andb
xor
stc
dec
sbb
add
mov
sarb
adc
ljmp
pop
test
add
imul
in
insl
push
clc
adc
adc
and
lods
ds
mov
mov
out
or
or
shrl
or
mov
mov
jnp
dec
jae
enter
xor
dec
sbb
fimull
jle
jge
mov
or
mov
mov
mov
ret
sbb
adc
push
rorb
jae
jo
jno
xchg
imul
add
in
jge
je
dec
lret
or
add
xchg
jmp
test
cmp
jbe
mov
les
or
enter
mov
mov
inc
pop
dec
ss
sbb
out
outsl
jne
mov
insb
ja
clc
popa
imull
or
out
or
push
dec
data16
sbb
cs
mov
cmpsb
popf
repz
lods
repz
fnstcw
adc
and
pop
mov
sub
sub
jbe
add
add
fidivrs
in
shlb
inc
dec
push
mov
cmp
repnz
pop
adc
int3
mov
out
jg
ja
jne
xchg
jae
mov
sbb
xor
xchg
cmp
cmp
dec
xor
imul
and
adc
xor
adc
imul
cld
subl
stc
loop
cmp
cmpsb
mov
push
nop
xor
cltd
sbb
adc
out
cmp
loop
aad
push
pop
xchg
stos
scas
scas
test
push
roll
add
dec
aas
ja
shrl
and
out
outsb
or
stos
rorl
das
or
pop
xchg
and
jns
inc
outsl
stos
mull
or
insl
pusha
and
lods
rcrb
loope
stos
add
cli
jbe
ds
fadds
mov
jle
xchg
mov
mov
movsl
inc
mull
mov
fcmovb
repz
sbb
mov
push
mov
rol
xor
mov
xchg
clc
bound
push
adc
xchg
addr16
data16
hlt
cmpl
inc
fsubrs
add
inc
insb
add
movsl
mov
inc
cs
imul
aam
jge
mov
mov
or
push
inc
push
push
lret
push
pop
out
es
out
lret
pop
cwtl
ret
push
fdivrp
mov
test
pop
hlt
outsb
or
dec
xlat
movsb
mov
and
scas
test
xor
xchg
das
cmp
add
xchg
push
sbb
xchg
cltd
xchg
inc
xchg
jbe
leave
xor
icebp
pop
adc
out
mov
outsl
xor
pop
jge
sub
jns
shll
lods
fs
and
shll
jne
mov
xor
adc
into
xor
push
mov
add
cmpsl
es
jnp
xlat
fs
inc
pop
scas
fnstcw
js
mov
popf
pop
and
xchg
lahf
inc
jo
xchg
je
mov
es
sbb
ljmp
jb
jp
mov
je
daa
imul
jmp
dec
fldcw
lret
and
int3
mov
adc
leave
and
lods
pop
test
mov
push
shll
pop
pop
mov
and
jp
sbb
add
leave
nop
pop
mov
test
cmp
out
and
fdiv
or
xor
sahf
out
xchg
cmp
dec
stc
push
fidivl
xchg
mov
sbb
rorb
mov
mov
in
sti
push
push
xchg
dec
shlb
fists
stc
jb
jl
cltd
gs
fisubl
dec
mov
ret
ja
inc
roll
aam
cmp
push
xchg
xor
cld
dec
inc
js
shrb
lea
xchg
pop
and
repz
iret
jno
mov
fsts
inc
sub
in
pop
int3
cmp
std
mov
sub
shrb
push
stos
lods
push
je
test
fistps
sub
cltd
sbb
push
jle
fucom
cmp
jnp
leave
sbb
jae
iret
insb
jae
iret
push
scas
pop
orl
mov
fsubl
jge
stc
push
or
lods
mov
jbe
inc
add
fwait
xlat
inc
cmp
sbb
xor
mov
cltd
negb
in
mov
jo
mov
sbb
or
stos
jae
bound
dec
aaa
mov
xor
fstps
jmp
mov
test
push
adc
call
jmp
imul
sbb
lret
dec
or
sarb
fisttpl
sbb
jo
aad
pop
insb
lret
pop
inc
push
push
out
outsl
mov
sub
andl
mov
pop
push
push
adc
mov
cmp
add
push
jge
inc
xchg
cmc
dec
pop
faddl
aad
pop
cld
xchg
xchg
xor
jne
and
test
mov
pop
incb
or
xor
xchg
int
aad
sbb
adc
or
jmp
rol
ja
test
xor
push
test
mov
stc
cmpl
or
in
adc
mov
pop
xchg
push
divb
out
push
push
mov
adc
jle
push
mov
div
jne
fldcw
cmp
movsl
sahf
sub
shlb
mov
les
pop
lret
aaa
arpl
cltd
je
xor
test
pusha
adc
xlat
xchg
stos
pop
data16
in
add
shll
jecxz
nop
les
dec
add
in
sub
sbb
sub
neg
jo
cmp
pop
sti
call
negl
sahf
fisubs
lret
inc
xor
inc
dec
fstpt
xchg
inc
out
push
pushf
adc
sub
xchg
cwtl
stc
out
push
bound
mov
aas
mov
add
inc
jl
out
lods
sbb
mov
inc
loop
sarl
pop
repnz
aam
pop
mov
push
js
rcl
dec
fistps
mov
sub
mov
pop
inc
mov
pop
inc
leave
data16
pop
hlt
fs
adc
iret
xor
pop
fisttpl
push
dec
mov
xor
mov
cmp
lods
iret
mov
dec
clc
cmpsb
jbe
mov
das
mov
fdivrl
mov
gs
test
aam
imul
outsb
inc
mov
cmpsl
insl
subb
outsb
adc
lret
jle
aaa
sub
add
in
iret
mov
cltd
out
jne
aas
sbb
mov
fists
add
out
decl
cwtl
cltd
sbb
in
cmpb
popf
jno
mov
iret
pop
test
push
mulb
pop
je
sbb
xchg
inc
jmp
shlb
fidivrl
fdivs
das
andb
shlb
loope
jno
and
ret
pop
sbb
pop
adc
mov
cmp
cmpb
or
cli
insl
fstl
push
test
movsb
in
imul
rorl
cmpb
aam
sbb
popa
and
xchg
fdivr
jbe
dec
push
int3
xor
push
outsb
inc
in
ret
xorl
cli
cltd
loopne
push
cmc
xor
mov
lahf
lret
aas
ret
mov
inc
xor
cmp
inc
lret
mov
push
in
hlt
xchg
cmpsl
mov
mov
push
cmpl
mov
outsl
out
test
xchg
mov
and
mov
icebp
pusha
xor
cmp
cmpsb
ljmp
test
test
jmp
cmpsb
outsb
jecxz
sti
leave
add
lea
mov
mov
cmp
fdivrl
popa
popa
pop
ficomps
incl
jl
test
scas
cld
pop
testl
jl
mov
jo
into
gs
cmp
or
gs
mov
jne
adc
jo
mov
jae
dec
loope
mov
xchg
xchg
data16
xchg
scas
jne
aas
in
mov
out
sub
testb
movsb
cmp
subb
or
sbb
cwtl
and
shlb
jecxz
xchg
mov
jne
int3
outsl
mov
jmp
fucom
push
inc
pop
or
test
or
adc
lock
push
arpl
outsl
imulb
lds
call
nop
mov
cmp
adc
scas
insl
xchg
cmpsb
loop
lret
mov
imul
std
dec
jae
dec
push
adc
daa
mov
mov
mov
push
adc
mov
dec
inc
int3
arpl
out
cltd
xor
xor
mov
int
sarl
lds
push
cmp
loope
fnstcw
ret
cmc
clc
lcall
leave
repnz
loopne
xchg
dec
rcrl
ds
jmp
test
inc
aad
pop
add
and
lock
and
jbe
mov
ljmp
lock
rcrl
fbld
sbb
in
adc
jge
rcr
call
loop
cmp
jle
add
sbb
inc
cltd
pop
aas
movsb
sub
imul
repnz
fs
or
lea
xchg
pop
stc
js
push
int
scas
sub
xorl
mov
clc
bound
sbb
mov
ret
push
enter
pop
cmc
push
jecxz
mov
dec
mov
outsb
or
cmp
mov
jbe
mov
and
pop
test
notb
lods
inc
xchg
or
es
mov
mov
pop
lods
mov
sub
pusha
xchg
mov
fidivrs
dec
mov
std
sahf
cli
rcr
push
stc
pop
add
ds
mov
repnz
sub
fimuls
ds
push
mov
shll
mov
mov
xchg
push
fisubrs
clc
dec
lods
maskmovq
testl
icebp
mov
lcall
std
or
ja
dec
ret
pop
test
sub
repz
adc
add
xchg
dec
xor
and
pop
pop
or
xchg
push
mov
mov
lock
or
add
lock
cmpsb
pop
mov
lahf
xchg
arpl
lret
gs
mov
jge
xchg
inc
in
jbe
and
mov
or
add
inc
xchg
xchg
pop
bound
jbe
test
lahf
and
adcb
and
push
icebp
adc
dec
ja
sbb
nop
xchg
cmp
fdivrl
mov
nop
ja
je
test
pop
or
int
int3
ljmp
sbbb
test
xchg
or
movb
pop
mov
adc
jecxz
out
cmovle
inc
cli
push
aas
shrl
sarb
xchg
pop
cmpb
xlat
mov
fldl
nop
cmp
clc
fcmovnb
out
jmp
nop
test
mov
sub
cmp
jmp
popf
ret
pop
mov
nop
sub
push
jle
test
sub
and
lods
stos
mov
sti
je
out
vpcomq
out
or
leave
sub
negl
fidivl
push
ja
sbb
data16
outsb
add
std
test
sti
xchg
cld
or
push
iret
pop
adc
push
sbb
push
pop
push
gs
outsl
inc
loope
pop
dec
adc
loopne
mov
push
inc
popf
pop
fcomps
pop
xor
mov
dec
out
pop
rorb
inc
orb
xor
sub
ss
add
andl
or
ljmp
ret
sub
sbb
xor
jg
or
fimull
les
jmp
cltd
leave
fbstp
icebp
adc
mov
sbb
mov
popa
mov
pusha
test
pop
cmp
and
sbb
jg
lcall
adc
mov
inc
push
xchg
and
push
xchg
or
jno
or
adc
add
ja
mov
dec
push
sbb
mov
push
hlt
jne
cltd
fidivl
testb
push
sbb
fisttps
and
push
ds
pop
repz
or
jb
cli
les
mov
jl
test
out
inc
jbe
repnz
cmp
pop
push
sbb
dec
adcl
cmp
iret
lahf
push
hlt
add
lock
push
xor
daa
fstpl
pop
jbe
addr16
adcb
loope
sbb
inc
fwait
push
ja
mov
jl
cwtl
loopne
fsubrs
out
mov
or
cmp
dec
fucomi
xor
cmpsb
mov
sub
mov
push
or
nop
pusha
lea
jae
mov
sub
mov
pop
mov
mov
popf
xor
mov
mov
movsb
push
inc
push
xor
pusha
inc
push
jle
push
sbb
les
pop
mov
xchg
pop
lods
mov
pushf
dec
xor
imul
out
nop
addr16
scas
inc
and
pop
adc
push
repz
idivl
je
lods
cli
mov
dec
je
insl
xchg
xchg
and
lock
push
sahf
scas
jbe
arpl
fidivs
and
cmp
sbb
push
mov
rorb
mov
and
stos
pop
jp
pop
aaa
and
mov
enter
push
repz
dec
cmpsb
cmc
scas
aad
jo
ja
jmp
shlb
push
outsl
pusha
and
jo
jecxz
mov
imul
cwtl
push
xchg
loope
push
mov
xor
call
cld
sub
jae
popf
sahf
xchg
mov
fnstenv
rcrb
mov
or
add
fcmovbe
jl
xchg
push
es
cmp
daa
aas
sarl
inc
xor
hlt
add
push
call
jp
mov
xchg
pop
push
jmp
sahf
add
andl
push
iret
sbb
push
das
sub
xor
cmp
rol
in
inc
xchg
pop
prefetcht1
or
or
mov
pop
fdivs
or
in
push
mov
adc
add
movsb
pop
mov
inc
cltd
test
mov
insb
and
sub
push
dec
test
imul
fstps
out
inc
and
xchg
loope
cmp
xor
cmp
lret
mov
xor
jb
js
xchg
lea
das
std
mov
add
xchg
ljmp
subb
test
ficoms
push
mov
push
xor
test
cwtl
mov
clts
pop
jecxz
dec
push
mov
push
or
rorb
sahf
pop
mov
popf
arpl
clc
pop
movsb
fs
gs
ljmp
or
cmp
sub
jecxz
cmpl
out
fistpll
repz
in
adc
sub
cmp
pop
je
enter
pushf
xchg
mov
inc
hlt
out
mov
les
and
lahf
push
ds
aas
mov
hlt
adc
and
cmp
mov
sbb
mov
ljmp
pop
pop
pop
pop
cmp
jmp
mov
jae
cli
int
insl
fildl
push
stos
sbb
rolb
adc
cmp
pusha
push
hlt
cli
lods
mov
push
inc
pop
inc
shlb
inc
mov
sbb
xchg
and
adc
ja
sbb
or
addr16
sahf
or
inc
or
xchg
movsl
movsl
fxch
scas
mov
das
push
adc
or
jae
dec
inc
push
jle
jae
in
push
mov
add
mov
xchg
cwtl
pop
mov
push
mov
or
repnz
sub
mov
mov
mov
arpl
ljmp
pop
ds
sbb
push
add
jl
cmp
mov
negb
xchg
mov
xchg
sarl
sub
xchg
mov
mov
subb
imul
ret
ret
inc
or
sub
cmpsb
push
sbb
push
mov
insl
mov
cmp
pop
mov
dec
orb
lock
jne
xlat
outsb
push
sahf
loopne
loop
shlb
loope
push
inc
stos
lahf
pushl
js
daa
insb
mov
movsl
ds
js
stos
jb
cmp
test
mov
cmpsl
fidivrl
fildl
aas
imul
movsb
sti
enter
push
int
add
lahf
into
jge
popf
aam
xchg
push
sbb
and
dec
xor
shll
push
fnstenv
adc
jnp
adc
inc
shrb
jmp
dec
inc
ss
pop
xorb
dec
cld
xorl
fsub
out
mov
lahf
adc
and
divb
lods
and
pusha
sub
imul
clc
or
push
add
sub
incl
adc
xor
ljmp
fwait
mov
hlt
or
mov
imull
repnz
dec
ljmp
fisttpl
gs
push
fnsave
jg
js
outsb
test
sbb
and
cli
add
imul
push
push
mov
cmp
lods
aas
outsb
ljmp
pop
jae
sti
mov
mov
dec
addr16
into
mov
popa
in
sbb
push
das
xchg
mov
add
ret
xor
xchg
insl
or
inc
addr16
mov
rol
fstpl
movsl
and
xchg
mov
xchg
rcr
dec
cmp
daa
hlt
mov
mov
sub
mov
jo
mov
xchg
loop
icebp
fstps
shlb
in
jg
push
xchg
add
lods
lods
adc
jmp
push
push
jp
fnstcw
clc
test
dec
cmpsb
xchg
mov
jge
ljmp
mov
push
std
jne
int3
arpl
xchg
mov
inc
lods
in
pusha
mov
daa
add
mov
jns
cs
adc
mov
fs
js
mov
dec
insb
mov
jge
and
xor
xor
mov
lret
cltd
aaa
cmp
call
push
add
xchg
xchg
loopne
cmp
repnz
stos
mov
mov
loop
dec
adc
iret
sbbb
lea
negb
lods
jb
push
repnz
inc
lret
pop
in
cmp
fdivrl
mov
sub
pop
sarl
imull
std
scas
arpl
arpl
je
xchg
fmul
sub
adc
incl
gs
les
stos
mov
loop
mov
call
dec
push
dec
and
in
mov
xor
int
xchg
in
inc
xchg
push
sub
icebp
shrb
mov
mov
and
jbe
lea
dec
pushf
adc
out
ljmp
cmp
xchg
aad
ds
push
leave
mov
mov
pusha
mov
hlt
jns
sub
jg
fwait
lret
rcl
popf
dec
pop
xor
or
nop
push
fcompl
jl
repnz
inc
leave
ret
movsb
adc
lds
xchg
and
mov
sbb
int
push
pop
pop
out
jge
mov
cwtl
loope
aas
sbb
shll
and
pop
test
mov
mov
dec
clc
jnp
and
mov
hlt
xor
loope
cmp
addr16
lcall
adc
mov
cmp
pop
inc
out
mov
xchg
popa
into
and
das
sub
adc
and
jbe
mov
sbb
inc
mov
mov
add
fwait
mov
sub
cmp
loopne
mov
push
mov
popa
jae
imul
icebp
int
mov
out
cmp
or
cmp
xor
cltd
mov
xchg
je
adc
push
fiaddl
cmp
adc
repz
mov
andb
repz
cli
stc
inc
jne
cmc
push
ret
icebp
add
xor
scas
jne
das
push
into
adcl
icebp
sbb
clc
out
pop
insb
jp
or
jl
jmp
unpcklps
dec
fbstp
jbe
cmp
andb
add
pop
push
push
lcall
loopne
mov
or
stc
push
push
sub
fnstcw
ja
loope
ja
mov
andl
mov
fcmovnu
fidivrs
push
push
cld
js
sub
sub
sbb
xchg
push
push
stos
add
daa
adc
add
cmp
popf
lock
sbb
pop
fs
cmp
cmp
in
pop
add
cmpb
sti
bound
xchg
ror
sub
sub
lock
pop
xor
push
shl
add
jle
outsb
pop
push
sar
xchg
or
in
xchg
lds
lcall
lret
iret
push
mov
inc
jns
xchg
das
cld
test
mov
aam
mov
push
sbb
and
hlt
ret
adc
insl
mov
outsl
sub
cmp
imul
cmp
aam
jl
lret
cmc
push
mov
jno
cs
or
or
cmpl
cmpsb
out
inc
jbe
test
popa
add
cmp
sbb
cmpsl
mov
add
loope
and
ss
xchg
stos
mov
dec
lods
adc
sub
cld
dec
xor
xlat
pop
mov
mov
and
and
rol
fnsave
mov
inc
hlt
out
dec
scas
pop
add
add
mov
mov
sbb
call
jp
jo
pusha
push
pop
dec
adc
les
int3
or
xor
in
fcomip
int3
mov
aaa
ret
fwait
in
int
xchg
bound
fildll
cmpsl
js
rolb
sbb
loopne
jne
out
scas
ret
ret
enter
adc
aaa
pop
and
or
aas
xchg
js
or
adc
dec
and
add
jge
cmp
xlat
inc
loopne
test
cltd
xchg
stc
push
pop
cmp
out
or
jae
mov
sub
pop
xchg
mov
rcrl
jle
dec
rclb
imul
jo
stc
or
and
mov
and
out
addl
out
inc
pushf
sub
mov
mov
jne
scas
roll
mov
in
inc
add
jne,pn
lods
dec
std
jae
xchg
inc
in
sub
cld
scas
add
add
cmpsl
test
das
lcall
int
rolb
push
mov
mov
ficoms
push
lock
add
pop
lcall
fists
dec
or
daa
mov
stc
sub
mov
jnp
cmp
mov
ret
imul
ret
cmpsb
push
xlat
xor
je
cmc
xor
push
leave
mov
lds
xlat
xchg
fisubrl
das
test
sbb
pusha
movsl
sbb
pop
shlb
jnp
das
pop
lahf
bound
fidivs
cmp
mov
sub
or
mov
inc
ret
jae
mov
jns
je
ret
jle
jbe
add
movb
mov
add
mov
pop
mov
bound
fdivrp
daa
js
cmp
and
andb
dec
cmp
mov
inc
stc
xchg
setge
shlb
fwait
push
pop
or
daa
add
movsb
out
outsb
in
xchg
test
js
xchg
jg
mov
pop
mov
shr
test
out
addr16
aaa
ss
jg
inc
into
sbb
jle
xor
jle
cmp
add
aad
push
fwait
dec
js
fisubrs
sbb
sub
xlat
scas
adc
mov
or
adc
jecxz
dec
jmp
adc
mov
jb
and
xor
lods
add
pop
pop
jns
push
push
dec
and
mov
rep
test
inc
cmp
arpl
jno
jge
int3
int
adc
pop
xchg
mov
sahf
jecxz
jbe
pop
xor
jnp
testb
clc
orl
fsubrl
jbe
lods
cmpsl
imull
stos
mov
addr16
mov
loope
cld
lea
insl
inc
test
ja
and
mov
testl
cmp
mov
dec
mov
jl
sub
andl
jge
shlb
pop
dec
pushf
jb
push
es
lret
es
jmp
std
cmp
mov
stos
enter
rorl
bound
mov
div
in
jle
jns
xor
ja
outsb
adc
mov
add
lahf
cmp
addr16
movsl
mov
mov
ds
xrelease
or
xor
sub
int3
inc
lcall
jo
sub
ljmp
inc
ljmp
lahf
jle
inc
sub
dec
add
sub
stos
xor
push
pop
xor
xor
arpl
cltd
into
mov
lret
mov
test
je
ficompl
in
xchg
sub
into
push
add
inc
out
dec
jmp
or
and
xor
cmp
or
lret
lahf
xchg
je
push
xor
out
or
cwtl
out
lahf
addl
shrl
or
sub
cmp
mov
xchg
lods
pop
sub
mov
andb
mov
push
xor
jge
adc
pop
dec
stc
xchg
xchg
mulb
dec
stos
aas
sbb
xchg
cli
dec
stos
test
mov
test
push
inc
in
insl
or
push
lret
and
pusha
or
nop
lcall
sub
lds
fwait
addr16
xchg
dec
or
je
shr
stos
lret
js
pop
in
cli
push
scas
inc
fwait
shr
jl
popf
scas
push
cwtl
push
mov
testl
repz
pop
dec
jne
cmp
std
adc
and
clc
rorb
cli
or
movsb
ret
es
mov
movl
movsb
xor
test
inc
mov
idiv
pop
mov
out
shl
jl
loope
jns
jb
sbb
pop
cmpsb
cs
cltd
xor
and
clc
test
xor
sahf
data16
loopne
fwait
xor
ficompl
jno
ja
je
pop
std
daa
mov
mov
cmp
mov
push
ss
leave
cmc
scas
mov
add
jmp
push
lcall
fcomps
lods
mov
clc
and
xor
inc
xchg
sub
addr16
popf
pop
loop
pop
stos
adc
sti
mov
fwait
push
xchg
fisubl
cmp
adc
insb
js
xchg
cwtl
inc
cmp
loope
mov
insl
add
mov
fildl
out
faddl
xchg
add
icebp
cmpsb
mov
add
rolb
notb
jae
jle
pop
int3
rcll
and
sbb
insl
ljmp
adc
call
movsb
arpl
xchg
pop
lahf
orb
repnz
adc
ds
testb
sub
add
jp
pushf
je
mov
mov
mov
push
mov
mov
dec
pop
push
sub
dec
cmpsb
in
pop
push
add
mov
sub
jl
leave
adc
mulb
repnz
cmp
xor
sub
and
stos
insb
ljmp
push
adc
loope
pop
ljmp
lds
xchg
or
xchg
lods
dec
ss
test
and
xor
fcmovnbe
lret
lcall
test
adc
test
hlt
nop
xchg
xor
adc
cmp
ljmp
sbb
pop
and
js
cs
in
call
jmp
or
mov
subb
pusha
or
lret
loope
in
inc
sbb
mov
push
cmp
adc
incl
xchg
stos
dec
stos
clc
mov
cld
or
popf
xchg
iret
xchg
cmpsb
xor
fisttpll
roll
cltd
xchg
ficoml
roll
sahf
mov
int
adc
in
ret
loope
adc
rcll
jmp
in
jns
inc
sub
outsl
xchg
cmp
pop
and
leave
xchg
mov
out
ja
call
and
je
in
ja
jmp
or
pusha
lods
xlat
pusha
imul
pop
lcall
shrb
ja
insb
cmp
sub
ret
push
cwtl
mov
shll
push
aaa
pop
xchg
jne
or
mov
mov
mov
ds
xor
shrl
shll
or
dec
or
or
add
inc
jno
xchg
bound
cmp
fcoml
vandpd
test
sub
insl
pop
and
sub
iret
out
pop
xchg
iret
stc
mov
rcl
inc
cmp
decb
sub
cmpb
fiadds
jae
or
lret
cwtl
xchg
cmpsl
sub
push
rorl
cmpsb
xor
insl
scas
lods
fisubrs
xorl
subl
dec
inc
pusha
cltd
outsl
inc
icebp
mov
jle
ret
lcall
movsl
lds
aam
test
xchg
test
push
jae
xor
sti
mov
xchg
mov
pop
jmp
xor
dec
jl
push
lds
data16
out
adc
lahf
in
ret
in
mov
pop
xchg
lcall
adc
mov
dec
sub
xchg
dec
or
push
mov
rclb
mov
mov
jns
inc
mov
dec
ljmp
enter
cmpb
insb
or
cs
out
outsl
pop
pop
pop
sbb
lods
cmc
mov
sarl
test
and
fstp
pushf
pop
sub
add
movsb
sub
mov
xor
xor
js
nop
js
lea
mov
push
fstl
shrl
flds
int
mov
adc
fdivrs
push
push
scas
xchg
movsb
imul
int3
add
push
orb
adc
adc
push
inc
std
xor
pop
inc
mov
das
inc
inc
test
pop
push
xor
mov
in
ja
mov
test
xlat
sbbl
or
test
shlb
cmpl
lcall
xor
push
add
je
and
sbb
lahf
xor
push
aam
popf
mov
sti
jo
sbb
loopne
mov
push
jb
xor
cld
mov
push
scas
xor
scas
mov
or
repnz
lds
mov
add
xchg
jp
sbb
mov
cmc
jg
movsl
cld
mov
lret
cmp
cli
leave
lea
into
lods
movsl
mov
addl
testl
into
jo
xchg
clc
gs
pop
inc
fsubrl
mov
push
mov
je
xor
xor
cmpsb
jge
pop
and
mov
lret
dec
sub
cmpsl
repnz
inc
ret
push
out
sbb
push
lds
sbb
icebp
fildl
ret
xchg
int
xor
mov
aaa
mov
js
xchg
inc
pushf
xchg
lea
sbb
arpl
mov
fwait
jle
and
pop
cmp
mov
xchg
stc
mov
and
inc
pop
das
jl
fwait
lods
pop
in
lcall
in
movsl
dec
repz
aaa
jmp
ficoms
das
jo
nop
mov
xchg
lcall
pop
dec
addb
mov
fsts
dec
jle
mov
dec
mov
call
mov
dec
and
cmp
sub
orb
xor
mov
sub
cld
cmp
xchg
mov
push
das
insb
sbb
mov
sub
cmpsb
push
sahf
add
add
xchg
cmp
sub
cltd
xor
jnp
inc
sbb
lret
popf
xor
movsl
dec
pop
call
in
push
jmp
and
mov
sub
xchg
inc
adc
push
insb
outsb
pusha
jl
cmpsb
xchg
sbbl
lods
aad
in
pxor
in
xchg
xor
hlt
mov
jns
dec
call
out
cmp
adc
test
jl
stc
cmp
cmp
mov
add
aas
leave
push
lahf
or
into
sbb
lock
ret
ds
mov
jle
mov
imul
js
dec
in
dec
lds
xchg
jg
mov
sub
push
inc
xchg
ror
rcrb
ljmp
pop
inc
and
es
mov
sbb
xlat
arpl
bswap
fs
sti
in
rorl
cmp
push
lret
pop
dec
je
push
cwtl
push
ds
xchg
popa
mov
lret
mov
sti
shlb
cmp
enter
sub
mov
aad
fxch
push
pop
mov
mov
pushf
mov
jecxz
inc
in
xlat
push
es
scas
push
sbb
push
sub
sbb
rorl
dec
jb
mulb
push
xchg
lods
aas
xor
fcomps
es
xchg
dec
push
sub
mov
inc
push
xchg
les
cmp
adc
add
fmuls
jns
cmovs
outsb
cmp
cwtl
icebp
fwait
xlat
mov
push
movsl
leave
mov
sbb
je
push
or
mov
dec
inc
shufps
add
inc
adcl
inc
jne
push
mov
bound
cmp
cwtl
test
pushf
jmp
or
adc
test
repnz
sub
jnp
and
clc
mov
sbb
inc
mov
fistpl
lds
xor
ja
cld
icebp
mov
and
mov
jae
jle
sub
iret
lods
pop
mov
test
shrb
lret
aad
sub
mov
pop
jmp
sbb
inc
push
pop
mov
adc
and
adc
add
test
jne
loopne
and
imul
adc
mov
enter
daa
mov
out
mov
jle
int
gs
xchg
outsb
sub
pop
xchg
aas
sbb
out
mov
sub
mov
hlt
and
sbb
clc
xor
scas
add
push
mov
lods
movsb
mov
pop
mov
jecxz
repz
push
push
es
mov
stos
mov
loop
mov
or
ja
sahf
xchg
hlt
les
ss
mov
cld
jo
mov
sub
in
lods
dec
inc
das
xchg
notl
pop
imul
and
and
loop
cmpb
sbb
ja
sbb
xchg
adc
mov
shrl
push
mov
mov
sti
inc
fwait
adc
pop
add
mov
das
inc
ret
data16
rorl
cli
outsl
mov
stos
or
rcr
push
xorl
push
leave
sub
jb
jmp
insl
adc
mov
fdivr
testb
lods
push
and
mov
add
std
imul
pop
xor
mov
xchg
bound
push
stc
cmpsb
shll
mov
test
fwait
insb
xor
jno
jp
fs
iret
jae
xchg
add
mov
jne
subb
ja
cs
adcb
int3
mov
mov
sbb
cmp
ret
scas
les
shlb
or
and
mov
lock
or
in
iret
divb
push
lods
adc
xlat
mov
adc
pop
jns
repz
jle
mov
jnp
jae
outsb
stc
push
mov
push
push
push
sbb
jae
shr
notb
mov
and
lret
push
shrb
lcall
in
adc
and
lahf
cltd
lret
sbb
je
inc
jmp
xchg
cmp
addr16
dec
cmp
addr16
mov
fmuls
popl
mov
lods
dec
xor
push
mov
std
xchg
and
repnz
jns
lahf
and
imul
jp
movsl
lret
stc
test
test
mov
leave
xchg
inc
rcrb
je
sub
mov
pop
inc
cli
add
push
inc
xor
addr16
xchg
loopne
shrb
out
mov
ficoms
or
shlb
and
fstpl
sbb
repz
mov
add
and
sub
jnp
out
add
cwtl
inc
sbb
mov
dec
mov
int
jl
jl
fidivs
adc
push
ret
mov
or
add
lret
xchg
mov
dec
sbb
dec
fnstcw
in
push
bound
mov
xor
dec
stc
roll
dec
nop
stc
out
dec
shrb
sahf
mov
rorl
lret
cmp
mov
sti
movb
into
stos
lahf
mov
hlt
mov
cmpsl
rcrb
hlt
scas
in
call
inc
sub
cmp
pop
jne
inc
and
push
mov
cmpsl
mov
in
in
sub
push
fwait
mov
xchg
xchg
sbb
dec
mov
mov
sarl
xchg
cmp
cmpsl
test
mov
leavew
iret
jge
lods
jne
add
les
out
fcmovne
decl
sbb
popf
pop
pop
fimuls
and
mov
pop
add
test
jne
daa
pushl
cmp
dec
aam
push
test
enter
lea
xorb
cmpl
pop
pop
loop
mov
push
out
and
mov
push
sti
aad
repz
lcall
stos
sub
xchg
cmp
or
mov
add
bound
dec
or
nop
push
mov
jge
test
push
icebp
pop
push
xchg
adc
cmpsb
sbb
fsubs
sbb
jp
loopne
cltd
sti
scas
jns
ret
shl
cmc
or
mov
jo
pop
test
lret
xchg
in
pop
mov
mov
insb
push
add
pushf
or
out
loope
fidivrl
inc
in
pop
or
imul
jg
pop
xchg
and
call
xlat
int
mov
cmc
sbb
cmp
lahf
adc
pop
addr16
sbb
add
adc
dec
out
add
push
cmc
or
mov
sahf
mov
mov
jae
inc
outsb
lods
es
mov
fmuls
das
mov
inc
dec
mov
fidivs
ljmp
ret
cli
stos
enter
cmp
lock
enter
data16
shrl
dec
call
hlt
shll
das
push
mov
lret
ret
mov
shll
ja
push
xchg
inc
and
hlt
scas
push
arpl
rorl
inc
hlt
mov
test
mov
pusha
and
aas
out
fildll
mov
dec
mov
or
xchg
nop
mov
addr16
lcall
pop
pop
mov
ds
rcrl
mov
fisubs
mov
nop
out
hlt
push
add
rcrb
movsl
xchg
xor
addb
sub
loopne
data16
cmc
call
jg
ficoms
adc
test
fildl
loop
lods
mov
in
pop
jbe
inc
jg
mov
rcrb
or
insb
mov
inc
lret
jl
iret
mov
int
mov
iret
repz
iret
adc
jl
jg
cmp
ljmp
dec
jg
xor
loopne
jp
cmpb
push
cmp
int3
test
sarl
sbbl
xchg
push
xor
sub
pop
sub
sbb
sti
jp
loop
test
mov
mov
mov
mov
aam
inc
mov
loop
mov
mov
popa
or
popa
loop
cmpsl
cmp
js
mov
pop
jecxz
pop
cs
mov
add
push
insb
rcll
inc
loopne
cwtl
xchg
aas
mov
rcrl
in
pop
sbbl
jnp
adc
mov
icebp
lahf
mov
mov
popa
sub
push
or
push
dec
xchg
mov
imul
insb
add
imul
popl
cwtl
jns
lods
daa
cmp
ss
jnp
movsb
out
xchg
inc
xchg
leave
or
mov
rcr
push
movsb
add
ja
loope
push
mov
pop
push
addr16
pop
jne
and
es
and
pop
movsl
sahf
mov
stos
cmp
loop
jo
addr16
rorl
jae
or
test
push
and
repz
jecxz
and
push
addl
popf
mov
dec
lock
mov
push
add
bound
stos
les
inc
int3
push
lcall
and
sti
mov
push
sub
or
movsb
enter
push
jne
mov
xchg
adc
mov
insl
aad
cmp
pop
mov
std
fimuls
insl
pusha
int
sub
pop
packuswb
mov
test
daa
or
pop
cld
in
sbb
mov
pop
mov
shrl
fisubrs
or
lahf
jbe,pt
cmp
movsb
sub
push
ja
add
popf
adc
mov
adc
xor
mov
cs
test
aaa
imul
and
sarb
outsb
push
fwait
or
test
lahf
mov
xor
and
aas
mov
test
movsb
in
push
jmp
mov
ja
or
dec
jp
sbb
and
aam
mov
adc
jo
ret
or
outsb
scas
call
sub
cmpsl
enter
cltd
in
and
ljmp
sbb
xor
ja
cwtl
and
inc
and
mov
ret
mov
sub
cmpw
and
addr16
mov
sbb
stos
xchg
outsb
jp
mov
shlb
leave
dec
sbb
jecxz
arpl
xor
sub
mov
leave
cld
mov
add
ret
mov
or
fldcw
in
cwtl
cmp
cmpsl
add
ds
dec
fisttpl
sbb
push
dec
test
inc
into
or
std
setb
call
or
xor
push
adc
xchg
in
jl
jge
das
addl
add
imulb
and
js
xor
fs
loope
cltd
lods
lods
jge
out
push
loope
in
test
pop
mov
and
ljmp
mov
je
sbb
cs
cli
hlt
stos
repnz
mov
out
out
xchg
outsl
sub
xchg
add
mov
dec
mov
insb
cwtl
jb
push
dec
pushf
movsl
stc
cltd
ljmp
int3
xor
dec
loop
push
in
in
pop
lock
adc
xchg
addr16
stc
mov
mov
cmp
mov
roll
and
pop
mov
lds
sbb
sub
mov
leave
cld
arpl
sub
mov
ds
sbb
mov
popf
popf
sbb
push
add
lea
cli
xor
stos
push
cmc
pop
push
adcl
xchg
roll
push
jmp
out
mov
push
mov
sbb
mov
fwait
daa
daa
lret
fldcw
rcrl
xor
jae
imul
nop
orl
or
bound
call
dec
je
aam
loope
leave
sub
pop
dec
mov
loopne
lods
add
pop
dec
or
rorl
push
lods
push
lods
outsl
jp
pusha
leave
lods
imul
adc
js
sub
pop
xlat
jg
cwtl
add
or
sub
pop
xor
aad
mov
in
and
push
mov
mov
mov
pushf
scas
xor
sti
inc
js
mov
insl
rorl
mov
outsl
and
insb
push
hlt
inc
rcl
cmp
mov
fimuls
sbb
rcll
shlb
and
push
sub
das
lds
daa
jns
push
test
ror
inc
cli
cmp
into
call
cmp
std
aas
mov
cli
cmp
mov
mov
sub
pop
stos
sbb
sub
inc
bswap
mov
mov
daa
add
out
into
jne
xor
cmpsl
or
and
push
pop
push
repz
cmp
inc
cmp
nop
jg
hlt
lret
stc
scas
push
add
mov
ret
movsl
sbb
cmp
std
test
int
mov
jnp
cwtl
imul
sub
int
push
divb
dec
aas
out
test
add
and
mov
mov
pop
into
pop
pop
les
push
out
xlat
pop
lea
test
pop
cmp
inc
xchg
aaa
mov
dec
and
jne
add
aas
cmp
mov
popf
mov
add
mov
lret
inc
pop
ds
gs
lods
aad
xchg
inc
addr16
xor
clc
test
int
xchg
in
lods
call
cltd
add
mov
fstps
mov
add
sub
jb
mov
arpl
pop
addr16
enter
mov
pop
lods
and
mov
push
icebp
in
mov
push
xlat
push
aaa
xor
push
xchg
jge
and
xor
aam
push
scas
call
fists
pushl
push
loopne
loopne
test
lcall
jmp
mov
pop
adc
popf
test
push
sbbl
dec
sahf
movl
insb
dec
out
or
xor
int3
out
add
nop
inc
add
pop
dec
xor
xchg
inc
inc
mov
and
mov
mov
cmpsb
dec
push
add
sbb
arpl
jl
adc
sbb
xor
jp
adc
into
cs
jo
aaa
and
push
stc
push
test
mov
aam
and
jp
mov
rcl
pop
mov
sub
and
leave
cmpb
pop
inc
movsl
daa
inc
or
shll
xor
xor
repz
shlb
stc
jmp
movsl
mov
mov
or
je
xchg
jbe
adc
mov
push
sbb
mov
in
divb
and
aas
fists
add
out
and
jg
push
or
pop
jbe
fisubrs
call
sar
adc
mov
in
jp
jg
pusha
out
sub
dec
xchg
xor
mov
daa
sarb
arpl
and
es
in
sti
cmp
sub
jb
dec
add
adcl
lods
xor
fbstp
inc
jp
stos
pop
mov
push
mov
cltd
push
ljmp
xchg
mov
es
lcall
scas
call
sub
fldenv
xchg
mov
adc
pop
xor
mov
and
addb
inc
mov
iret
sub
andl
test
adc
roll
pop
movsl
shll
cmp
shr
xchg
push
xlat
push
scas
stos
mov
pop
pop
bound
and
xchg
mov
scas
ret
mov
or
sbb
inc
popa
aad
insb
icebp
push
lods
imul
jecxz
in
loopne
inc
mov
xchg
scas
inc
leave
stos
test
mov
mov
mov
fimuls
lahf
ret
out
lcall
cs
cltd
repz
cmp
int
sub
xchg
gs
lcall
sub
mov
ss
loopne
nop
sti
cmp
jl
sbb
in
or
imul
fcomp
cli
ror
std
xor
push
insl
rcr
lods
sub
inc
pop
or
push
dec
sub
xchg
iret
inc
ljmp
leave
mov
mov
es
push
ret
mov
insl
mov
int
in
pop
loop
int3
dec
repnz
ljmp
movsl
addl
out
scas
ss
or
aaa
xchg
sbb
in
out
icebp
mov
ret
dec
push
sub
nop
loopne
leave
mov
ret
mov
push
testb
imul
imul
into
das
sbb
icebp
stos
iret
arpl
test
sbb
mov
lcall
popa
push
inc
push
jne
sbb
ja
dec
mov
je
lahf
xor
mov
int3
imul
and
sub
xchg
sbbb
loopne
push
xchg
fidivrl
fbstp
push
mov
aam
cwtl
inc
inc
push
incl
xchg
pop
fidivs
out
or
icebp
xor
dec
inc
cltd
mov
aas
test
pop
adc
repnz
cmp
jo
sbb
mov
fnstenv
imul
sbb
rclb
sbb
cmp
lcall
pop
cmc
jl
dec
sbb
repz
sub
repz
xchg
lock
jns
inc
loope
les
pop
xchg
test
aam
push
add
cwtl
jae
sub
out
mov
in
push
jae
push
int3
mov
fcomip
xlat
and
jle
rcrl
lret
mov
and
ret
mov
ds
mov
pop
inc
xor
add
call
push
dec
push
xor
adc
repnz
xchg
stc
xchg
sti
mov
dec
lcall
push
movsb
jl
lods
mov
int
out
aaa
mov
pop
add
daa
jo
pop
adc
es
cltd
test
jmp
sub
push
jp
aas
bound
add
mov
cwtl
sub
mov
adc
es
dec
push
inc
cltd
cmp
or
push
imul
stc
imul
and
inc
and
inc
push
loopne
lret
test
stos
testb
into
fisttpl
lock
xchg
pusha
xchg
pushf
sub
scas
add
gs
cwtl
jo
and
shrb
mov
and
in
cwtl
les
mov
out
jecxz
js
fldcw
adc
lods
pop
mov
insl
fldenv
popf
mov
in
dec
cwtl
xchg
xchg
scas
pop
cmp
adc
mov
pop
mov
addr16
jmp
mov
jnp
and
lods
sub
jmp
mov
push
cmp
xchg
lds
xor
or
mov
fsubr
lret
popf
popa
jecxz
mov
repz
jnp
adc
pop
fwait
movsb
and
movsb
jp
add
jb
sub
cmc
test
pop
mov
and
mov
int3
jo
jl
mov
adc
test
jl
sbb
xchg
call
and
push
pusha
lcall
xchg
frstor
add
add
out
push
mov
sub
aam
ja
scas
call
pop
sti
adc
or
orl
lods
mov
js
std
dec
push
sub
cmp
mov
dec
dec
push
stos
je
jnp
lcall
mov
sub
sub
dec
movsl
fisttpll
lahf
pop
sub
push
into
fs
adc
dec
cmp
cs
loop
xlat
push
or
rcl
sub
clc
pop
popa
movsl
sbb
mov
cmpsb
pushf
fsubs
cld
out
adc
sbb
mov
xchg
leave
sbb
pop
jno
cmp
add
imul
cmpsl
jbe
lods
ret
dec
and
call
outsb
pop
cmp
add
jae
ret
pop
ljmp
xlat
mov
icebp
scas
add
in
enter
cmp
dec
imul
pop
aad
push
push
inc
pushf
je
out
test
mov
lret
push
mov
ret
push
cmp
jae
inc
subb
sub
xor
inc
js
adc
mov
dec
jb
ja
imul
pop
je
lea
shrl
adc
int
or
lret
push
cmp
imul
outsb
ja
psubusw
jge
xor
mov
mov
mov
mov
mov
loope
pop
inc
mov
fisttpll
daa
aaa
pop
lods
scas
addr16
repnz
cmpsl
and
inc
and
jns
pusha
sub
xor
mov
adc
fstpt
sub
jb
dec
mov
push
inc
movsb
add
add
pop
lret
pushf
or
sub
repz
mov
jnp
std
mov
fstl
or
in
mov
push
fistpll
xchg
mov
xchg
cltd
pop
mov
inc
rcrl
fs
filds
cmp
inc
push
sub
ret
ja
mov
movsl
xchg
test
pop
into
mov
leave
test
fs
cmpsb
mov
jle
stc
nop
sahf
xchg
xor
dec
mov
or
and
pop
aad
jp
pop
add
and
add
loop
out
push
cmp
sub
rcr
add
jmp
leave
push
test
xchg
jecxz
mov
xchg
bnd
lret
out
das
int3
outsb
xchg
xchg
pop
mov
and
mov
jp
pop
mov
aaa
sti
js
stos
adc
mov
inc
daa
aam
nop
ljmp
lods
mov
test
xchg
jno
sub
jle
add
ret
lahf
jnp
je
sub
test
add
dec
rorb
xorl
xlat
mul
jne
sbbl
lds
jns
ret
xchg
rcll
cmp
add
mov
mov
or
add
dec
sub
dec
pop
outsb
scas
lods
orl
mov
push
and
mov
push
add
add
sub
jae
adc
pop
cld
lea
mov
sub
shll
inc
imul
call
sbb
dec
aad
xlat
lcall
aam
mov
std
nop
daa
std
ja
aad
orb
mov
mov
das
jl
sbb
xchg
sbb
mov
rol
adc
adc
jge
cli
xor
sti
cli
cmp
fwait
adc
pushl
ja
sti
mov
add
sub
add
outsl
xor
dec
mov
pop
insb
push
push
jg
bound
mov
cmp
mov
stos
lods
mov
imul
mov
mov
jecxz
sbb
cmp
cmp
mov
xchg
jge
xor
mov
mov
cmpb
inc
clc
sub
ljmp
adc
xor
sub
lret
mov
cmp
pop
inc
cmpb
xor
loope
jmp
es
xor
les
xchg
jl
shrl
jg
sarl
pop
mov
stos
inc
push
xor
push
stc
xor
shlb
lock
sbb
cmp
sbb
adc
shlb
push
fs
mov
xor
xchg
adc
cmp
aad
rorl
pop
scas
dec
sub
lods
lds
sbb
dec
ror
cli
jge
adc
divb
sub
sub
jp
jb
mov
mov
push
ret
loope
daa
sbb
adc
dec
sub
ds
or
mov
jae
std
test
pusha
adcl
push
shl
test
sahf
movsb
xchg
mov
mov
mov
ja
imul
sbb
push
xchg
sub
inc
adc
inc
xlat
subb
sub
xchg
add
fmulp
js
ljmp
repnz
mov
pusha
sub
jp
aad
fcomps
cwtl
jge
pop
add
lds
or
or
es
mov
popa
inc
xchg
mov
jns
pop
cmpsb
andb
dec
adc
mov
into
pusha
mov
movsb
xchg
ss
je
dec
repnz
fldcw
es
mov
push
or
outsl
out
mov
dec
mov
pop
fnstenv
ret
jns
std
sti
xor
mov
fstpt
adc
adc
inc
sub
ja
push
xchg
into
push
inc
push
pop
xor
mov
adc
jl
xchg
jge
notl
imul
or
je
xchg
scas
mul
sbb
cmpsl
cmp
jp
add
test
cmp
mov
arpl
xor
lds
test
xchg
lea
ret
daa
xchg
push
rcll
in
jb
dec
jns
xor
leave
into
cwtl
lret
xor
mov
pop
jae
jo
push
dec
jne
ficoms
push
cmp
push
mov
sub
pop
ds
test
sbb
fcom
and
into
test
lahf
sub
decb
jecxz
adc
cmc
lret
dec
mov
sbb
mov
mov
pop
pusha
cmp
jl
out
sub
in
inc
and
cmc
in
shl
adc
push
cmp
xchg
adc
xchg
sub
lock
lock
inc
jbe
scas
xchg
inc
mov
and
cwtl
dec
fistps
das
sbbb
scas
mov
or
or
jmp
jne
xor
adc
pop
jmp
sti
test
fdivrp
xor
clc
mov
mov
or
mov
push
iret
hlt
xlat
outsb
dec
or
ret
xchg
push
cwtl
or
pushf
popf
daa
or
hlt
lcall
adc
pusha
adc
in
sbb
mov
das
fs
inc
mov
rorb
pusha
push
lea
or
imul
into
and
xchg
cmp
mov
push
pop
loop
ret
add
or
lods
fs
push
mov
lods
scas
pushl
rorb
dec
inc
aad
push
ss
mov
outsb
cmpsb
loop
jg
cmpsb
mov
xorl
mov
mov
jmp
fdivrl
data16
rclb
clc
sub
nop
jb
push
push
mov
push
cltd
movsl
and
mov
out
jno
xor
push
popf
push
ficoml
or
cwtl
xchg
fs
pop
les
sub
push
or
cmp
mov
push
add
sub
cmp
jecxz
xchg
cmp
add
test
or
lcall
scas
lret
cmpsb
fsubrs
rcl
and
addr16
inc
pop
sbb
and
and
pusha
xor
mov
sbb
mov
lods
cmp
clc
test
loop
and
push
arpl
dec
pop
movsb
clc
pop
leave
lahf
sti
mov
dec
imul
ss
insb
test
cs
push
js
cwtl
or
les
sahf
pushl
in
mov
dec
lcall
pop
xor
cmp
imul
and
test
lods
xchg
add
cld
inc
iret
imul
xor
add
sub
sbb
jmp
test
inc
aam
ret
sti
or
jbe
sub
fists
xchg
adc
and
out
xchg
mov
sub
lods
rorb
les
xor
cld
daa
outsl
mov
and
cmp
add
jns
mov
cs
insl
ret
sbb
in
mov
and
jnp
gs
mov
xchg
iret
mov
test
rcrl
ss
and
nop
mov
add
push
adc
jb
push
push
in
mov
imul
gs
mov
add
xchg
mov
movsl
cld
pop
xor
adc
daa
or
xor
mov
jle
cmp
movsl
inc
add
jmp
jno
nop
inc
icebp
adc
xchg
ss
adcl
add
push
add
jl
and
ja
popf
faddl
cld
cli
xchg
into
test
push
xchg
or
loopne
gs
xor
loop
ljmp
or
pop
out
movsb
orl
push
pop
lods
aam
mov
or
stc
dec
mov
mov
lea
mov
mov
movsb
adc
mov
inc
add
test
mulb
outsb
out
pop
scas
jl
pop
ljmp
pop
daa
repz
and
mov
dec
xchg
sahf
nop
adc
imul
popa
in
test
push
nop
dec
xor
lods
jne
or
nop
pusha
out
mov
fldl
sbbb
mov
lods
fimuls
push
pop
xor
pop
movsb
dec
pop
mov
push
mov
jno
loop
sbb
push
jmp
call
xor
mov
insl
sub
into
push
lahf
imul
outsb
push
lahf
out
into
testl
out
js
les
push
fs
cmpsl
ret
outsb
mov
ds
cmp
cld
jg
negb
cli
jl
cmpsb
es
cmp
test
pushf
cmpsb
aas
inc
pop
pop
pop
sbb
pop
rcrl
xor
push
cmp
fdivrs
pop
popf
ret
mov
outsb
andl
andb
add
daa
pop
pop
call
jns
cltd
sahf
data16
mov
out
push
outsl
xchg
jecxz
loope
popf
faddl
mov
or
enter
test
pop
mov
fldt
cs
rcr
add
xchg
jae
dec
sbb
repz
sbb
mov
dec
pop
adc
xchg
loope
fsubrs
nop
scas
cmp
ret
popa
repz
mul
fdivs
mov
inc
sbb
lock
mov
ficoms
push
xchg
xchg
mov
inc
movb
mov
movsl
adc
xor
and
enter
mov
xchg
ret
jnp
ret
imul
js
lahf
test
push
sbb
test
mov
push
leave
fnstsw
fwait
in
push
rcrb
dec
mov
stos
or
bound
cmpsb
add
fists
mov
mov
jge
pop
je
sarb
cmpsb
jbe
sbbb
xchg
inc
stos
lods
pop
mov
inc
pop
jmp
pop
test
mov
xchg
pop
adc
fadd
jge
dec
movsl
das
movsb
sub
dec
add
out
popa
insl
scas
cmpl
or
push
push
popf
nop
fs
sbb
rorb
push
xchg
or
cmp
bound
inc
inc
shll
mov
xchg
test
les
or
xchg
pop
adc
ja
out
jmp
cwtl
mov
or
movsl
arpl
in
inc
jb
cmp
sub
loopne
movsb
loop
in
stc
mov
lret
pusha
mov
adc
xchg
inc
fwait
mov
mov
and
sbb
xchg
mov
popf
ret
mov
adc
insl
sub
xchg
popa
cld
divb
aas
mov
push
xlat
inc
sbb
sarl
lret
xlat
xor
fcomps
jb
mov
es
inc
jnp
jl
xchg
into
push
xchg
addl
out
adc
ljmp
negl
int3
dec
push
dec
loop
stos
or
xchg
ss
jns
jo
fldenv
fcom
lock
inc
pop
int
loop
pop
xchg
sti
in
test
mov
clc
das
inc
fldenv
cwtl
imul
fdivl
xchg
ret
xchg
daa
adc
xchg
movsb
ficomps
int3
jns
stos
jmp
or
aam
arpl
sbb
lret
out
jbe
stos
nop
inc
das
and
mov
mov
sbb
imul
inc
push
leave
mov
idivb
lret
mov
inc
or
cli
lea
mov
popa
ss
sahf
and
movsb
test
in
cltd
scas
jmp
cs
shrl
cmpb
divb
mov
cli
jl
popa
mov
inc
jb
aam
push
es
cmpsl
xchg
xor
jp
fdiv
js
mov
cmp
lds
push
sbb
sbb
and
mov
mov
daa
push
mov
jl
js
push
pop
test
loopne
lods
sbb
xchg
mov
sahf
jns
push
cmp
jns
daa
dec
jmp
xchg
shlb
xchg
ljmp
jae
jge
or
int
mov
adc
popf
jae
mov
add
push
test
ljmp
add
cwtl
fisubrl
aam
xchg
xchg
aad
in
fisttpl
shll
xchg
and
lds
jo
pop
pop
sub
push
mov
mov
lcall
iret
mov
inc
sbb
xor
adc
push
rorl
in
jecxz
jae
mov
mov
das
imul
mov
lret
xor
int3
dec
aam
aad
adc
jp
out
add
sbb
lock
mov
nop
cmp
mov
xchg
incb
mov
imul
gs
inc
mov
and
stc
fnstsw
pop
adc
mov
lods
loopne,pt
sbb
lahf
les
jns
jns
loopne
cld
xor
into
mov
xor
sbb
inc
sub
or
jns
repnz
fdivs
ret
sbb
cmp
or
loopne
js
loopne
imul
clc
jmp
mov
lods
mov
push
in
je
rcrb
pop
pop
or
mov
mov
dec
bnd
fdivl
popa
outsl
daa
xchg
mov
call
je
out
scas
daa
xor
sahf
sbb
aad
aam
adc
or
insb
jg
or
es
mov
leave
mov
mov
mov
and
out
das
inc
aaa
dec
divl
mov
outsb
lretw
jns
shrl
mov
push
pop
and
sub
inc
xchg
xor
push
push
mov
jb
stos
mov
aad
push
dec
xor
push
jbe
insb
jmp
out
andb
add
insb
int3
ja
imul
push
xchg
inc
jne
push
adc
jle
loop
inc
rcrl
orb
sub
cltd
shll
add
inc
cs
push
cmp
mov
sbb
adc
xchg
xchg
pop
and
sbb
mov
ljmp
aam
gs
cwtl
stc
sub
push
mov
mov
sub
out
push
add
negb
xchg
roll
loop
pop
ja
movsl
add
mov
adc
loopne
out
inc
inc
cmpb
aaa
pop
cmpsb
pop
imul
adc
out
xchg
rol
inc
loopne
jnp
cmp
mov
stos
dec
cwtl
sbb
push
mov
insb
iret
loope
adc
or
das
aad
inc
rorl
dec
pop
push
sub
popa
xor
imul
jle
aas
xor
scas
fistpl
mov
mov
roll
aaa
test
mov
ds
adc
fnsave
adc
int
mov
loope
cmp
inc
das
loop
push
iret
and
dec
das
aam
out
ljmp
mov
lahf
or
xor
adc
dec
adc
leave
or
xchg
sbb
add
stos
xor
cwtl
aam
outsb
addb
jns
cmp
mov
dec
xor
shll
inc
fmul
sbb
jecxz
lret
imul
mov
sub
adc
lret
pop
inc
shlb
repz
adc
call
mov
lods
sub
subl
jp
pushf
jecxz
xchg
dec
rcr
push
out
jmp
jge
pop
jns
nop
test
add
out
scas
mov
fstps
lds
call
add
add
xchg
js
add
rcrl
mov
out
pop
out
cs
add
cwtl
fmull
pushf
xor
lret
arpl
jg
sub
stc
int3
js
dec
pop
mov
repnz
dec
hlt
add
test
dec
adc
std
fstps
cmpsb
xor
imul
ret
lahf
mov
jmp
xor
dec
pop
push
inc
outsl
sarb
dec
pop
aad
stos
mov
xchg
js
scas
jl
sbb
and
flds
mov
mov
sbb
xchg
int
orl
in
cmpsl
cmp
sub
loopne
cmp
lock
movsl
dec
dec
pop
std
sub
fbld
imul
push
sub
loopne
push
out
dec
stos
pop
out
inc
jmp
fidivl
jmp
pop
outsl
jnp
pop
inc
dec
xlat
dec
and
dec
cmova
fdivrl
pop
ja
mov
dec
xchg
xchg
and
out
pop
push
add
ret
or
mov
mov
jmp
jle
push
cmp
lret
cwtl
adc
push
testl
cmpb
mov
adc
and
xlat
ljmp
jmp
shll
out
jmp
adc
or
mov
push
loope
nop
jecxz
inc
subl
push
xchg
adc
test
or
adc
sti
mov
gs
or
mov
mov
and
pop
jge
imul
rol
or
xchg
mov
test
push
lds
inc
add
lret
addr16
jnp
in
sarl
std
das
out
lods
xchg
or
es
xchg
in
int
call
push
fisubs
lahf
cs
in
in
cmpb
jnp
inc
clc
mov
push
hlt
outsl
push
dec
shrb
in
out
imul
mov
jbe
loop
aas
test
mov
or
add
outsl
pop
jne
testb
ret
ffree
rclb
insl
or
int
pop
popf
xchg
into
pop
push
push
lods
push
sti
cld
lds
and
sti
bnd
pop
cmpsl
mov
xlat
push
leave
movsb
push
and
fs
push
out
sub
inc
push
xor
xchg
jle
xor
pushf
mov
push
jbe
lret
sub
lret
jecxz
add
push
adc
enter
aad
in
gs
mov
sbb
sub
in
int
test
clc
into
add
mov
out
negl
fistpll
rclb
pop
mov
inc
sub
rolb
les
mov
inc
rcl
xlat
and
shll
fstp
inc
arpl
icebp
test
aaa
mov
adc
cmpsb
dec
pop
add
and
sub
xchg
jge
sbb
xchg
sbb
push
stos
andl
dec
test
pop
dec
mov
add
mov
fldt
stos
and
repnz
xrelease
push
hlt
sahf
xchg
mov
adc
jle
adcl
jae
je
stos
push
ss
inc
or
jg
scas
xchg
arpl
xorl
pop
loope
cpuid
int
into
cld
inc
push
inc
out
add
test
pusha
or
lods
pop
test
fdivs
mov
lcall
in
dec
pop
pop
cmp
mov
inc
aaa
cld
ret
shl
stc
out
mov
stos
mov
cmpb
push
je
lods
pusha
sbb
cmp
in
sub
lahf
jo
lahf
jmp
aam
mov
sbb
adc
or
sti
lret
adc
push
outsl
dec
lods
aas
xor
cs
sub
shl
xor
scas
divl
aad
sub
ds
ret
out
sar
add
imul
movsb
andb
in
arpl
test
push
and
sbb
xchg
out
loope
inc
sub
fwait
mov
inc
cli
fucomp
ss
adcl
jns
rorb
jl
shrb
idivb
jg
ficoms
mov
repnz
aad
and
push
test
mov
daa
out
xor
in
cmp
mov
push
stc
mov
rolb
and
dec
repnz
push
or
outsb
imul
pop
xor
mov
xor
hlt
cpuid
sbb
cmp
jmp
cmp
or
pop
cld
cmp
popa
mov
or
fidivl
push
outsl
dec
cmpsb
dec
fs
mov
in
or
ffree
fadds
xchg
xchg
mov
ficoms
xor
xlat
dec
dec
sub
rcrl
inc
cmp
repnz
mov
jbe
sub
sbb
clc
mov
adc
test
leave
out
push
enter
jns
mov
test
dec
cmc
je
lret
sub
jo
mov
mov
mov
popa
outsl
jmp
or
cli
push
pop
xchg
xchg
aaa
mov
jno
shrb
jno
out
sub
filds
or
mov
loop
loop
mov
lret
aam
xlat
push
cmp
and
jns
repnz
leave
idiv
jle
inc
lret
add
push
cs
test
fnsave
lret
es
or
adc
mov
sub
rcll
pop
or
pop
js
fwait
ret
cmp
insb
sbb
jecxz
dec
fdivl
xor
repnz
setge
jl
mov
jb
xchg
loope
jnp
inc
mov
mov
popa
inc
cmp
xchg
cmpw
xor
mov
les
pop
jae
pushf
sbbl
push
aam
mov
das
or
mov
movsl
aas
xchg
icebp
pusha
pop
jbe
jmp
mov
hlt
inc
in
cmp
xchg
push
xor
xor
push
int3
enter
outsb
outsl
mov
xor
shrb
cmc
sar
or
gs
mov
xchg
test
out
jl
cmp
out
sub
cld
pop
in
scas
mov
leave
sbb
xchg
jae
ljmp
and
jmp
rorb
jno
pop
pushl
sbb
leave
push
or
lcall
shll
imul
inc
jg
fnstenv
or
aad
or
or
mov
mov
xchg
aas
adc
mov
hlt
jp
test
adc
and
jo
jecxz
sahf
jp
popf
or
dec
pusha
mov
jnp
xchg
rorb
movl
int3
cmp
cmp
xchg
sub
movsl
or
sub
arpl
sub
insl
andb
negb
js
mov
lock
pop
push
push
dec
xor
mov
cmpsb
into
orl
ja
loop
ja
and
lds
sbb
mov
call
mov
fnstenv
shlb
jle
sub
or
adc
adc
sub
sbb
jg
sti
movsl
sarl
xchg
adc
sbb
inc
mov
aas
jmp
out
and
ret
addr16
ds
lods
push
jg
gs
movsb
test
add
imul
push
or
and
inc
or
loope
inc
cli
jne
mov
sub
cs
jb
mov
and
dec
mov
cmpsl
cmpsl
daa
lret
mov
add
sub
sbb
pop
sub
mov
jp
sbb
jae
sub
inc
stos
mov
cmc
in
dec
cmpsl
push
jge
xchg
add
xor
mov
call
mov
js
mov
lret
jns
dec
gs
fmuls
les
lods
dec
or
mov
out
xor
inc
jmp
jnp
jle
or
xor
xchg
mov
push
and
dec
fs
xchg
lods
insb
and
or
push
pusha
adc
add
push
popf
cmp
shrb
or
addb
lea
daa
mov
sub
es
jecxz
addr16
cmp
outsb
jbe
pop
repz
f2xm1
cmp
addr16
add
lea
or
shll
jb
dec
mov
xor
enter
cmp
out
sub
repnz
sub
imul
cmp
enter
adc
cmp
sbb
in
mov
add
pop
lock
sbb
pop
mov
adc
adc
sub
inc
push
dec
jg
mov
jp
or
xor
jmp
mov
mov
popf
add
movsb
cmp
in
sbb
xchg
jecxz
mov
or
push
and
fisttpl
std
test
sub
jnp
push
lock
dec
fsub
cmp
xchg
sub
sub
xchg
or
pushf
dec
test
jne
mov
stos
cmpsb
jno,pn
pinsrw
xchg
data16
push
and
jl
sbb
lahf
cmpsb
xlat
stos
aad
adc
dec
xchg
test
pop
add
out
jmp
mov
cmpsl
std
push
setl
popf
loopne
inc
test
subl
mov
and
daa
std
xchg
push
sbb
sub
aaa
inc
pop
inc
or
xrelease
ret
mov
mov
mov
arpl
push
mov
and
fucomip
pusha
mov
dec
jecxz
js
lret
cs
mov
outsl
push
shll
sbb
cmp
add
test
loopne
pop
loopne
xchg
gs
clc
xor
mov
or
inc
lret
call
decl
pop
cmp
sbb
xlat
insl
sahf
mov
push
rorl
adc
inc
movsb
push
outsl
jbe
mov
mov
cmp
sbb
mov
decl
test
and
popf
jne
xchg
iret
xor
cwtl
xor
leave
shll
mov
xchg
inc
mov
fiadds
adc
mov
and
andb
xchg
or
shll
add
push
shl
les
mov
mov
shl
jp
cmc
jle
cs
cmp
or
xor
mov
lret
or
pushf
mov
ja
outsb
in
xor
mov
cmc
hlt
push
sahf
int
cmp
ja
push
cmc
pop
outsl
test
mov
fdivrs
insb
xchg
insb
xchg
cmpsb
adc
dec
push
cmpsl
arpl
mov
add
dec
dec
sbb
dec
mov
cmpsb
aas
aam
scas
push
decl
aas
in
cmp
fs
sub
test
push
test
jae
cmpsb
jecxz
ret
push
xchg
in
test
mov
dec
pop
inc
inc
sbb
scas
sub
cmp
test
sbb
pop
test
inc
ljmp
pop
add
cld
sbb
ficompl
cmpsb
outsb
sub
lahf
jecxz
xchg
push
pushf
in
cmp
xchg
xorb
push
popa
dec
repnz
aam
imul
lret
outsl
nop
push
sbb
ficoms
dec
out
mov
insl
add
rcr
ret
orl
hlt
ret
inc
jo
inc
mov
test
lahf
cli
pop
cmp
in
xor
fmuls
jne
push
jns
int3
cmp
imul
xlat
cmpsl
addr16
jp
repz
xor
pop
clc
sbb
loop
mov
push
cmp
insb
mov
js
mov
or
or
cmp
fucomp
cmp
dec
jnp
jp
jno
enter
pusha
mov
repz
test
jle
test
pop
shll
stos
mov
cli
int3
mov
sbb
mov
in
or
mov
push
pop
xchg
dec
in
adc
and
lret
mov
loopne,pn
cmp
repnz
adc
sbb
dec
js
ljmp
pushw
and
xchg
popf
insl
push
xor
lds
iret
mov
out
scas
inc
fs
std
out
jl
pop
add
fwait
inc
xor
out
xor
or
cmp
lret
inc
rcrb
sub
ljmp
inc
js
jle
add
mov
push
mov
adc
jnp
mov
cmpsl
pop
mov
pop
and
cmp
jb
in
xchg
dec
cmp
movsl
fisubrl
lcall
pop
imul
pushf
xor
outsb
cmpl
mov
inc
cmp
adc
fdivs
adc
push
outsl
imul
xlat
dec
in
scas
cmpsl
dec
fldcw
jle
loopne
mov
mov
hlt
sub
mov
xchg
sub
push
stc
or
sbb
out
or
insb
call
dec
ljmp
out
int3
jmp
aam
icebp
and
and
xlat
push
cltd
jbe
arpl
jge
ss
pop
int3
gs
jb
stc
inc
rcrl
stos
loop
xor
dec
mov
or
sub
leave
js
rclb
cmp
or
js
adcb
or
xchg
orb
inc
xchg
rorl
mov
daa
gs
and
add
int
dec
push
mov
adc
add
adc
mov
jae
int
insl
xor
data16
adc
cmp
jo
loope
mov
ljmp
outsb
sub
add
test
xor
xor
push
fisttpl
xlat
sahf
adc
add
in
add
sbb
fs
mov
aad
aas
mov
sub
lret
mov
leave
out
push
repz
lea
shl
clc
popl
and
fnstsw
fdivs
out
subb
sti
jg
cmpsl
fwait
and
sbb
and
push
mov
addr16
lods
lret
insb
pop
mov
and
lahf
and
gs
lods
leave
or
mov
daa
mov
mov
cmp
out
or
scas
pushl
mov
mov
mov
pop
xlat
jl
mov
inc
mov
adc
cmp
inc
and
and
inc
ds
cld
and
xchg
scas
into
inc
leave
cmpsl
and
pop
dec
cmp
cmp
push
sbb
sub
cmc
push
xchg
sarl
repz
shl
sub
mov
add
push
imul
mov
inc
fnstcw
mov
or
push
mov
rcrb
dec
mov
pop
imul
inc
fdivrs
insl
cld
jg
daa
dec
lahf
testl
repz
shll
pop
out
notl
int
push
das
cs
cmp
inc
ljmp
imulb
xchg
ret
mov
pop
inc
xchg
scas
push
sub
out
mov
push
fs
jb
mov
mov
mov
ds
inc
daa
adc
int
js
mov
enter
int
adc
iret
repz
xor
inc
int
int
dec
fstl
add
or
inc
inc
pop
outsl
mov
fildl
jbe
scas
or
and
mov
or
mov
and
push
sbb
test
scas
mov
negb
mov
inc
sbb
jae
fwait
ljmp
cmp
jb
repnz
and
imul
mov
inc
into
sbb
pop
outsb
jl
mov
je
sub
mov
cmpsl
imul
push
mov
xor
imul
push
rcr
leave
int3
mov
jno
xor
mov
test
mov
jbe
imul
fsubr
sub
sub
lahf
aam
aas
fidivrl
testb
mov
mov
fiadds
popf
sbb
aaa
pop
xchg
ret
sbb
jnp
stos
cmp
loope
fisubl
mov
popf
mov
imul
cs
pop
ljmp
jae
pop
dec
push
shrl
jmp
pushf
cmp
aad
cli
nop
out
push
cmp
jle
push
in
xorl
mov
pop
js
jp
jns
dec
icebp
pop
lds
push
push
flds
pop
aaa
jp
dec
push
mov
xchg
xlat
insl
addr16
bound
pop
jg
cmpsb
pop
daa
jp
and
xchg
or
int3
xchg
imulb
add
sbb
sub
imul
pop
sbb
sub
xchg
jae
or
inc
mov
das
or
fldcw
dec
int
popa
inc
xor
mov
mov
jnp
pop
or
test
mov
out
nop
jne
xlat
pop
int
dec
aas
popa
mov
add
lcall
fldlg2
jns
adc
aas
cmp
jge
or
shlb
push
pop
cmp
lret
adc
sub
jecxz
and
in
les
mov
pop
ffreep
lcall
sub
jae
out
int
dec
inc
stc
xchg
jo,pn
es
cwtl
add
jge
mov
and
je
dec
pop
mov
daa
mov
jo
jl
dec
jne
mov
test
cmp
rcl
xchg
xlat
push
push
sub
xorb
das
sub
in
sahf
adc
dec
mov
flds
mov
inc
adc
shlb
dec
and
mov
sarb
xchg
es
scas
mov
ss
push
repz
fldenv
ficompl
mov
bound
pop
aam
shlb
sub
add
test
dec
pop
fucomp
add
push
adc
adc
xor
push
inc
and
out
or
ja
jb,pn
out
fimull
sub
sbb
aam
mov
es
sbb
mov
ret
mov
rcrl
nop
sbb
mov
dec
test
inc
ffreep
mov
cld
and
aas
pop
xchg
xor
push
and
or
pusha
sbb
xor
mov
gs
and
mov
sbb
pop
sbb
mov
add
int3
test
lds
pop
call
leave
dec
lcall
xor
push
pop
push
push
jno
push
push
cwtl
stos
cmp
movsb
test
inc
push
pop
jbe
mov
in
cmc
xchg
inc
add
pop
pop
add
rcll
jmpw
sub
in
nop
add
loop
inc
test
ds
add
stos
pop
and
jmp
pop
cld
sub
jmp
loope
movsb
sub
negb
pop
or
mov
pop
shrl
adc
mov
cld
adc
mov
jl
mov
push
popa
add
and
lds
cltd
add
lret
mov
xlat
lret
fldenv
cmpsl
lods
push
cmp
cmp
call
jge
push
sar
popf
popa
xchg
mov
pop
lret
popf
mov
dec
add
lahf
mov
jae
bound
dec
aaa
insb
or
rcrb
leave
inc
jmp
push
dec
in
pop
or
clc
mov
push
sub
push
es
scas
in
inc
add
fldcw
jbe
stc
push
ja
sbb
and
ds
cld
call
push
fcompl
inc
mov
jbe
jmp
loop
cmp
in
sti
fs
fmulp
mov
pop
lret
notl
and
je
stos
out
mov
icebp
adc
adc
xchg
adc
fcoms
inc
loope
mov
divb
inc
scas
lock
mov
add
cmp
push
rcrl
addb
aam
xorl
sub
daa
nop
mov
pop
or
push
mov
jbe
pop
push
inc
cmp
dec
adcl
jo
add
lcall
fldcw
mov
inc
in
jl
fucomp
push
pop
sub
xor
mov
jbe
mov
inc
push
and
xor
and
sbb
hlt
jge
daa
mov
add
aaa
cli
mov
pop
cmp
jl
lret
movsb
in
dec
std
jns
jae
or
add
shlb
push
pop
les
test
inc
cli
dec
decl
inc
scas
daa
test
test
pop
pop
xchg
lods
mov
sti
test
jge
addb
sub
mov
lods
out
or
stos
sbbl
aaa
lahf
pop
mov
push
inc
call
aaa
mov
mov
adc
inc
jle
push
stos
inc
add
aad
mov
adc
imul
ds
mov
movsb
sub
sub
inc
in
or
dec
divl
sub
xor
adc
sahf
jl
xchg
lods
iret
cs
sbb
ss
jecxz
fucom
dec
sbb
popa
dec
mov
pop
mov
dec
in
inc
insb
xchg
mov
dec
pop
rolb
lcall
jb
xchg
int
jae
mov
rorl
fldlg2
sbb
and
outsl
or
jbe
sub
jns
xor
iret
insl
repz
mov
mov
pop
inc
pop
mov
loopne
imul
lahf
jmp
ret
je
jno
les
cli
dec
pop
fcmovu
and
jno
adc
push
in
fwait
mov
xor
inc
mov
popf
add
add
andl
imul
push
data16
sbb
insb
push
dec
mov
dec
shl
out
imul
lds
ja
jl
inc
fcomps
adc
and
cld
mov
leave
xchg
and
jne
addr16
movsl
popa
popf
push
sub
lock
movb
mov
shlb
fistps
popf
aad
inc
add
fistl
ss
jnp
mov
stos
movsl
js
hlt
inc
dec
mov
andnps
movsl
adc
inc
test
inc
ljmp
sbb
test
mov
sbb
int
xor
mov
jno
adc
enter
loope
cmpsl
adc
add
mov
call
sub
jbe
cmpsb
ffree
mov
mov
addr16
popf
mov
mov
dec
dec
jp
push
jmp
ds
cli
lock
cmp
lds
pop
call
xor
in
pusha
push
pop
fistpll
ljmp
pop
adc
flds
cmp
xchg
bound
not
imul
xchg
leave
xchg
adc
adc
jo
movsb
jbe
xor
mov
jno
sarl
or
inc
rclb
lahf
jne
or
pop
or
flds
sbb
dec
pusha
repz
add
sbb
shl
inc
inc
and
xchg
xchg
stos
call
or
pushf
cli
add
pop
popa
ror
int
mov
aaa
sbb
cmp
pop
add
sub
les
shl
stc
jbe
cld
pop
or
and
sub
push
pop
sahf
push
and
arpl
xchg
push
sbb
in
fdivs
ds
pop
popl
js
xlat
cwtl
pop
adc
ds
ret
out
xchg
inc
add
aam
mov
cmpsb
ljmp
dec
mov
outsl
and
inc
movsb
lahf
addr16
mov
xchg
fstl
or
push
fldt
sub
sub
jge
jp
inc
in
decb
or
rol
cld
xor
insb
jge
fldl
clc
repnz
gs
or
xor
pop
loop
sti
add
rol
negb
xchg
cwtl
ja
mov
jp
push
popa
mov
mov
mov
push
sete
out
mov
pop
jno
sbb
adc
std
ss
dec
das
jnp
stos
mov
ret
incl
push
push
fdivl
sub
push
jecxz
lret
cmp
jge
pushf
dec
lret
jge
dec
sbb
in
pop
jae
fimuls
ds
mov
jae
xlat
movsl
cmp
insb
adc
cmpsl
cmp
pop
push
add
cmpsb
adc
or
les
rorb
flds
aad
inc
adc
mov
xchg
scas
sub
lods
xchg
jle
mov
push
adc
cmc
mov
jmp
imul
into
adc
dec
stos
call
mov
mov
add
and
lcall
icebp
mov
sahf
ret
add
jo
adc
mov
shl
mov
pop
dec
mov
mov
push
or
pop
in
jmp
mov
fldenv
test
popf
stc
fisubl
loopne
jo
insl
fcomps
adc
stos
mov
pop
cli
xor
and
fbld
dec
js
or
and
out
fcompl
out
xor
fdivp
mov
push
das
shll
cmpl
mov
add
flds
mov
enter
cmpb
fisttps
sbb
pop
push
sbb
jae
cmc
nop
leave
out
mov
pushf
sub
mov
stos
aaa
mov
lret
add
fcoml
cmp
ret
and
not
lcall
mov
inc
imul
or
pop
into
mov
call
mov
adc
mov
imul
ret
xor
fwait
pop
in
adc
mov
jecxz
pusha
sahf
mov
fnstsw
pop
in
decb
rorl
xor
mov
arpl
mov
inc
pushf
and
cmp
out
sbb
inc
xchg
shlb
xor
jge
pop
mov
in
push
mov
testl
lock
ds
inc
cli
jbe
ds
pop
iret
int3
inc
repz
fcompl
fwait
ret
xor
lret
loope
mov
cmp
dec
jns
or
adc
call
pop
testb
mov
and
scas
inc
jo
push
dec
mov
push
dec
adc
cltd
sub
or
pop
in
repz
pop
mov
dec
add
sub
loope
adc
mov
sahf
rcll
cs
inc
jo
sbb
sbbl
push
adc
add
int3
mov
add
in
lds
out
mov
push
icebp
mov
add
mov
out
rcr
cs
and
repz
jno
cmp
mov
fcoms
pop
jge
push
sub
add
mov
and
or
xchg
and
xchg
and
push
dec
xor
mov
mov
pop
rclb
jl
imul
or
pushf
sti
xor
lret
int3
pop
into
cmp
out
movsl
test
ss
or
incb
test
mov
ret
shrb
jo
jno
lret
addr16
jns
loope
fistpl
inc
test
mov
or
imul
xchg
iret
lcall
jb
push
mov
call
shrb
pop
pop
adc
loopne
jg
lcall
sbb
sbb
cmpl
xchg
mov
rcrb
jge
sbb
jle
je
sub
push
dec
call
xor
je
dec
es
lret
jbe
pop
jnp
mov
inc
ds
fiadds
addl
loopne
adcb
adc
shlb
pop
lahf
sub
and
sbb
dec
daa
push
pop
stc
mov
xlat
cmp
lock
hlt
leave
std
sbb
cmp
sub
out
mov
imul
cwtl
test
paddw
cld
js
xor
ret
iret
mov
bound
sub
push
call
cld
mov
aaa
pop
xor
in
push
scas
rcrb
addb
mov
gs
and
add
out
int3
loopne
out
push
jae
into
cmpsl
bound
lret
pushf
fcmove
or
mov
jge
mov
in
xor
adc
in
repnz
sti
popf
in
cwtl
out
aas
aas
in
icebp
xor
push
aam
or
pop
push
add
mov
por
shrl
orb
int
icebp
pop
and
in
and
or
mov
inc
insb
or
push
jae
mov
fisubs
clc
data16
sub
test
xchg
sub
push
pop
xchg
dec
rorl
es
or
loop
xchg
xchg
ret
sbb
cmp
mov
cmp
loope
push
mov
xor
mov
stc
insl
test
xor
jb
cmc
inc
sbb
imul
hlt
dec
jne
stc
push
std
test
mov
int
es
jns
push
xchg
rcl
mov
mov
mov
dec
push
hlt
dec
jo
data16
mov
or
lret
fstpt
popa
push
mov
imul
mov
adc
insb
adc
int
inc
adc
aad
daa
icebp
outsl
fimull
loope
scas
repz
vxorps
pop
sbb
insb
inc
icebp
cmp
gs
hlt
inc
xor
fcomps
aad
out
mov
fisubrs
and
xor
sub
pop
jbe
dec
or
mov
fstps
pop
pop
mov
push
ljmp
cmp
hlt
add
push
sbb
bound
adc
shll
jmp
xchg
xor
jnp
pop
pushf
es
fwait
inc
cmp
cmpsb
aad
cmp
aad
push
inc
xchg
sbb
pushl
push
sbb
mov
jno
fsts
in
mov
dec
pop
mov
mov
sub
ret
js
mov
call
aam
jge
inc
mov
jbe
cli
mov
xchg
pop
out
fnstsw
pop
in
xchg
cmp
out
into
inc
xor
cmp
gs
jge
notb
sub
inc
and
mov
cmp
jmp
into
lock
xchg
roll
mov
arpl
lock
push
cltd
mov
jmp
test
mov
lret
outsl
cmp
in
in
xor
inc
sbb
cmc
mov
in
mov
or
dec
test
and
pusha
or
das
addb
xor
mov
jl
lahf
sub
xchg
lds
xor
or
rclb
xchg
mov
jns
or
in
sbb
dec
cmc
sbb
pop
repnz
xor
mov
scas
jbe
and
std
iret
pop
movsl
lret
adcb
xchg
lods
pop
fiaddl
fstpt
jp
inc
sarl
sbb
cmp
inc
adc
mov
fsubrl
and
fwait
add
leave
jbe
adc
popf
cltd
jae
test
es
mov
mov
adc
push
mov
inc
sbb
sbb
sub
jl
adc
cwtl
dec
push
pop
push
xchg
push
insl
push
into
andb
adc
jecxz
test
cld
cs
xor
scas
ljmp
pshufw
mov
inc
mov
fnsave
dec
and
mov
inc
cmpl
jno
jb
scas
test
sarb
sarb
add
mov
dec
notb
adc
out
and
inc
inc
or
ret
addr16
dec
push
xor
shll
sbb
or
ljmp
mov
aas
cwtl
scas
int3
lock
add
jmp
cmpsl
pop
push
insl
cwtl
pop
test
orb
shlb
sbb
imul
mov
jmp
add
xor
jecxz
or
cmovs
adc
cmpsb
in
jae
sbb
push
adcb
mov
pop
invd
lret
jecxz
pop
or
inc
mov
int3
subb
popa
fisubrs
inc
cmp
jnp
sub
int
push
lahf
add
jnp
push
pop
arpl
mov
xchg
negl
andl
ret
into
loopne
cmp
addr16
sbb
cmpsl
aaa
jnp
adc
add
scas
push
out
mov
mov
add
inc
dec
cmc
dec
cmp
fadds
mov
pop
jle
fildl
gs
nop
and
call
lods
shrl
sbb
out
loopne
out
adc
ret
inc
cmp
inc
push
xchg
cs
es
stc
xor
pop
wrmsr
mov
mov
fcmove
pop
popa
xchg
pop
mov
fs
jmp
push
jne
and
mov
inc
fldl
stc
leave
das
testb
jb
add
loopne
inc
popa
pop
lods
push
or
das
mov
mov
mov
pop
test
sub
pop
out
adc
sub
fmul
outsb
mov
cmpsl
movl
mov
rclb
mov
xchg
mov
enter
dec
ret
mov
mov
out
pop
inc
dec
cmpsl
pop
arpl
cli
fistpl
lret
mov
mov
cltd
movsl
inc
shlb
jmp
xchg
rorl
aas
inc
aad
pop
in
movsb
dec
outsb
fiadds
inc
adc
mov
popf
outsb
sahf
pop
sbb
mov
xor
xchg
fistpl
js
inc
xchg
mov
jae
movsl
mov
scas
dec
ffreep
sub
push
cmpsl
jbe
xor
and
add
btr
dec
dec
jmp
inc
ret
hlt
adc
push
lahf
movsb
imul
pop
push
pop
inc
and
jmp
movsl
sbb
mov
pop
cmpb
out
jecxz
mov
push
push
iret
inc
test
xor
nop
sysenter
call
xor
sub
and
and
cmpsb
inc
xor
ja
fcompl
mov
xchg
add
scas
xor
fmuls
test
das
movsl
int
jbe
fsubl
mov
add
lcall
pop
jle
pop
daa
mov
fidivrs
adc
and
cmpsb
test
xor
mov
or
xor
jmp
out
stc
sub
int3
loopne
jo
aad
jecxz
out
lahf
clc
aaa
std
repz
adc
loop
testb
adc
mov
arpl
cwtl
pop
js
mov
lret
jo
inc
cld
out
mov
pmaxub
les
dec
pop
pusha
mov
push
sub
mov
rcl
mov
xchg
pop
repz
ss
je
mov
iret
out
or
call
pop
popf
push
sbb
test
insb
sbb
test
dec
xchg
gs
push
frstor
lds
pop
lcall
xchg
add
popf
cmp
data16
fdivp
insb
cmp
ss
sbb
je
mov
xor
pop
xor
ja
sbb
out
add
xchg
ret
lock
mov
jno
aad
ret
mov
cs
add
push
sbb
or
pop
pop
mov
push
mov
cwtl
dec
push
xchg
adc
sbb
fcomps
mov
stc
and
jne
add
and
outsb
out
adc
testl
push
sub
subb
push
xor
orl
into
mov
add
cs
loop
xchg
je
fdiv
cmp
mov
js
push
test
sbb
negl
loopne
movsl
mov
fcmovu
sub
je
js
mov
popa
mov
in
adc
cmp
es
jbe
push
repz
arpl
fisubrl
xor
cwtl
clc
out
adc
jmp
arpl
rol
in
dec
sahf
mov
insl
mov
push
jp
pop
jmp
sbb
jno
repnz
into
test
inc
int
std
aam
lock
adc
jge
ss
sub
adc
xchg
subb
adc
pop
adcl
xor
add
xor
xchg
mov
xor
fs
hlt
dec
xor
inc
inc
fs
jnp
je
xor
es
push
rolb
aaa
add
mov
adc
mov
xchg
loop
lods
xchg
xchg
dec
xchg
in
dec
in
push
mov
aad
cmp
inc
jb
mov
hlt
lcall
scas
outsb
xor
scas
xchg
push
mov
dec
dec
movsb
js
add
cmp
movsb
cmp
xor
xchg
or
cmpb
in
aam
push
adc
subb
int3
in
pop
adc
cltd
inc
dec
mov
in
insl
adc
pop
xchg
pop
aad
or
sub
sbb
mov
xor
push
sbb
dec
lods
push
add
icebp
addl
mov
inc
pop
int
lds
cmp
dec
or
mov
repz
mov
data16
insb
push
adc
mov
das
ficomps
dec
dec
pop
addb
mov
and
inc
mov
mov
adc
xor
ds
test
push
jb
mov
ret
sub
push
rep
pop
jno
cmp
in
inc
test
icebp
xchg
dec
pop
adc
mov
insb
xchg
sbb
jl
gs
aad
sarl
addl
mov
jo
movsb
clc
cltd
pop
rorb
movsb
xchg
mov
mov
inc
call
fstpl
jo
add
out
push
jae
icebp
mov
mov
mov
popa
int
jbe
or
popa
test
cmp
insl
jne
aas
lahf
jp
stos
xlat
pop
fcompl
mov
sub
fucom
jae
and
mov
xor
imul
push
add
cmp
cmpsl
imul
pop
out
sub
repnz
popf
cmpsb
cmp
lds
xor
fstl
int3
jne
loope
mov
xchg
push
pop
mov
cmp
or
loopne
subl
lds
movsl
and
imul
cmp
cmp
mov
pop
xor
out
mov
xchg
dec
int3
out
stos
loope
pop
mov
lea
popa
push
sbb
pop
add
fldcw
pop
sub
test
add
push
dec
outsb
fldenv
lcall
bound
out
ljmp
push
mov
xlat
aaa
mov
out
push
cmp
cmp
jb
jae
and
and
inc
dec
dec
stos
outsb
sbb
jnp
dec
pop
cld
insb
int
ffreep
fcompl
inc
inc
xor
jnp
cmp
mov
lret
add
cmp
jno
rorl
enter
pop
inc
gs
push
and
adc
add
cwtl
inc
push
scas
int
icebp
scas
push
lahf
in
lahf
outsb
cmpsb
sbb
lea
or
adc
cwtl
lahf
lods
pop
arpl
sarb
out
shl
ret
xor
cmpsb
inc
inc
inc
ljmp
jne
inc
nop
cld
inc
and
aad
enter
push
lods
enter
lcall
push
in
sbb
add
jl
jns
mov
cmp
or
mov
jbe
lcall
outsl
scas
vfrczsd
testb
sub
mov
jecxz
pop
scas
imul
mov
adc
aam
push
cmp
outsb
jmp
out
dec
and
push
push
xor
sub
push
push
stos
push
subl
dec
xchg
lret
nop
xchg
xchg
orl
adc
leave
mov
je
aas
jnp
fadds
dec
fsub
pushf
jecxz
icebp
in
out
loope
inc
fsubs
push
inc
in
xchg
shlb
aaa
mov
jae
jl
icebp
mov
ffreep
loop
sub
in
in
xor
sub
cs
push
cmp
scas
sbb
cltd
andb
nop
dec
adc
inc
mov
cmp
add
lock
popa
idivb
iret
push
inc
cmp
roll
lahf
icebp
push
inc
mov
out
cmp
cmpsl
int3
adc
in
inc
aaa
pop
push
adc
cmpl
jo
orl
addb
add
jnp
sahf
hlt
aas
jecxz
mov
jecxz
mov
rolb
out
lcall
or
repz
shr
dec
pop
popa
push
mov
jecxz
add
loopne
aad
mov
pushl
js
ror
in
push
imul
sub
pop
adc
mov
ljmp
scas
xchg
shr
push
cmp
push
lcall
cld
adc
xor
add
add
je
inc
mov
jl
mov
pop
insb
ds
lcall
aad
bound
cmc
and
xor
jmp
mov
adc
push
lret
bound
pop
push
sti
lahf
je
fadds
xchg
cmp
jmp
nop
mov
or
cmpsb
push
mov
insl
cmp
test
cmp
sub
cmp
mov
inc
lahf
outsb
and
out
pop
aas
mov
mov
imul
sti
sarb
movsl
add
ds
mov
cmc
daa
lds
xor
bound
or
das
sub
gs
movsl
jle
xor
push
cmp
push
mov
cwtl
aam
sub
mov
or
insl
dec
mov
data16
call
add
test
into
pop
subb
test
jge
stc
int3
test
mov
pop
inc
add
add
pop
test
ljmp
xor
mov
lea
bound
mov
xor
and
jg
add
clc
xor
mov
cwtl
shll
test
xchg
adc
test
sbb
jbe
popa
mov
repnz
xchg
je
iret
aam
xor
pop
int
and
out
jnp
mov
pushf
fcomp
test
mov
stc
inc
sahf
xchg
cltd
jae
xor
add
xchg
sbb
cmp
mov
iret
push
leave
mov
mov
pop
pop
mov
xor
pop
adc
pushf
imul
xchg
mov
push
adc
adc
xor
push
in
push
add
xchg
imul
dec
or
inc
icebp
pop
ret
xor
cmp
add
icebp
insl
pop
jno
test
pushf
cmpsb
push
push
ljmp
rclb
call
pop
movsb
pop
or
mov
push
mov
push
push
test
cld
cli
aam
mov
aaa
in
mov
arpl
int
repz
insl
mov
or
imul
sbb
outsb
push
add
mov
sub
shl
pop
pop
mov
pop
add
push
stos
jmp
in
rcl
rcll
sbb
push
sbb
ljmp
fisttpll
xchg
shlb
jmp
jmp
out
inc
rcrl
sub
out
lods
xor
lods
push
loop
cld
pop
dec
loopne,pn
mov
push
xorl
xchg
leave
lods
in
cs
xor
xchg
mov
shlb
mov
lcall
xchg
sbb
loopne
mov
lods
jle
sbb
push
ja
sub
inc
jecxz
stc
pop
xchg
test
data16
xchg
dec
jge
imul
inc
mov
cmp
stos
in
cltd
icebp
pop
mov
xchg
sahf
inc
or
fcompl
sub
jecxz
std
sti
mov
repnz
sbb
insl
fiaddl
jbe
push
and
enter
aad
fldenv
das
and
add
sub
jns
movsl
fnsave
add
xchg
cmpsl
aas
inc
xor
divb
fisubrl
xchg
and
gs
lcall
mov
sbb
int3
scas
jl
or
test
cli
arpl
jmp
aas
dec
sub
and
movsb
fstpt
push
dec
jo
cmp
cmpsl
add
add
jae
test
adc
cmp
leave
adc
scas
hlt
add
aas
lcall
dec
shlb
mov
andb
pop
mov
sbb
sarb
dec
ret
push
test
cli
insl
mov
cmc
ret
mov
aas
mov
mov
test
sbb
das
inc
rorl
push
dec
addr16
xchg
bound
out
popa
mov
jns
mov
adc
popa
inc
popf
out
adc
addr16
test
add
push
hlt
lahf
xchg
mov
cmpsl
push
xor
orl
add
push
cli
and
jecxz
adc
data16
mov
jo
dec
fdivr
xchg
in
in
into
lds
filds
lds
push
and
fs
pop
in
inc
pop
shl
pop
in
test
sbb
adc
xchg
es
test
sbb
stos
pushf
mov
xchg
dec
test
inc
push
cmp
nop
adcl
mov
dec
cmp
or
loope
enter
jo
dec
loope
dec
or
dec
adcl
out
mov
pushf
jge
mov
scas
addr16
sub
daa
rorb
cmc
hlt
sub
mov
outsl
and
icebp
and
xchg
imul
out
lods
mov
adc
add
sbb
mov
pushf
lods
jecxz
int
sbb
shl
jecxz
int
push
out
push
icebp
fdivs
cld
cmp
cmp
dec
aaa
lds
xchg
lock
xor
daa
add
jg
cli
pop
push
jle
rorb
sub
gs
push
in
or
mov
sahf
mov
pusha
jo
jecxz
pop
lret
add
arpl
stos
jge
loopne
nop
out
fadds
or
xchg
test
in
dec
outsl
xchg
fdivl
push
push
add
std
lahf
test
jg
mov
ds
mull
call
shl
xor
xlat
push
dec
mov
jl
sbb
xor
mov
leave
xchg
mov
imul
pop
add
inc
push
ds
popa
sahf
and
dec
jmp
cld
mov
sub
and
in
pop
and
sub
jo
ss
jmp
jo
mov
inc
push
hlt
xchg
dec
js
loop
xchg
int
addr16
pop
fwait
pusha
lds
jo
cmpsl
jno
sbb
cmp
jo
push
lods
jb
outsl
cmp
rorl
jle
imul
xchg
xchg
por
xchg
lock
ret
jge
in
sub
cmpl
in
daa
inc
push
sbb
ret
ret
push
jmp
shr
iret
xchg
pop
xchg
call
je
lret
inc
fidivrs
sbb
sub
ja
xchg
xchg
inc
mov
ss
push
outsl
adc
jge
cld
inc
std
in
push
enter
inc
iret
repz
movsb
inc
jle
jnp
add
test
dec
out
dec
xchg
shll
sahf
or
and
mov
jne
popf
mov
out
pop
cmp
test
pop
mov
in
lea
push
fildll
dec
cmp
lcall
add
je
movsl
in
xor
jp
subl
adc
pop
inc
outsl
jl
mov
fwait
das
outsl
inc
dec
mov
inc
shlb
cwtl
rorb
mov
lcall
sub
hlt
lahf
add
adc
test
adc
mov
mov
outsl
or
mov
push
shll
loop
pop
mov
xchg
dec
dec
test
loope
and
rcrb
dec
cmc
fidivl
xorb
jle
and
divb
incb
stos
popa
or
es
jge
enter
scas
fimuls
mov
inc
cmp
push
ret
and
xchg
subb
mov
fstp
adc
sbb
mov
imul
call
adc
mov
inc
inc
arpl
lret
sahf
mov
inc
test
pushf
jae
jne
dec
fmul
jnp
fcoml
outsl
fs
push
mov
mov
lret
shrl
pop
leave
rcrl
gs
adc
dec
cmp
dec
mov
dec
clc
int3
push
sbb
scas
adcb
cmp
jae
repnz
loop
insl
sub
sbbb
inc
mov
jo
ret
shll
ss
xchg
test
cld
pop
mov
ds
cmp
loope
ljmp
mov
mov
repz
mov
arpl
ja
xchg
inc
cltd
stc
aas
jb
xchg
aaa
jne
in
dec
mov
jmp
int
das
mov
and
repz
lcall
add
lds
mov
stc
out
fcmove
or
inc
lods
add
jmp
inc
mov
push
inc
adc
pushf
popf
pop
mov
andl
push
xor
pop
int
mov
cmp
jo
push
dec
adc
xchg
or
xor
in
and
and
and
insb
call
mov
mov
pop
rolb
in
push
lcall
mov
inc
bound
nop
or
xchg
and
sahf
cmc
ja
scas
sbb
or
mov
or
jmp
out
into
aam
mov
mov
dec
or
mov
movsb
stos
mov
loopne
dec
adc
xchg
push
les
mov
push
fwait
imul
jae
jno
mov
lea
pop
xor
movsb
xchg
fstl
movsl
pushl
sti
inc
xchg
pop
add
add
lcall
stos
inc
in
xchg
xor
push
pop
mov
test
lods
loopne
fnstsw
xchg
out
mov
adc
sbb
shll
cmp
mov
cltd
dec
movsl
loop
add
lret
icebp
mov
dec
clc
insl
lret
mov
ja
js
sub
sarl
cld
subb
fwait
bound
or
dec
or
shrl
or
jo
mov
sub
cmp
fcompl
rsm
xor
mov
pop
cld
add
mov
incb
aad
xchg
decl
in
pop
mov
cmc
je
fdivr
and
adc
lahf
in
mov
fidivrl
mov
pop
enter
mov
jp
loop
lock
mov
cltd
add
stos
adc
ret
in
sub
pop
in
xor
mov
inc
call
ret
lret
push
sbb
mov
pop
scas
push
ds
js
movsl
les
add
pop
and
xor
popa
push
mov
dec
nop
in
jmp
mov
nop
cld
ret
in
jnp
fcoms
test
xor
pusha
mov
sub
incl
inc
stc
jge
mov
mov
inc
dec
mov
bound
lods
sub
mulb
cs
in
outsb
in
stos
push
add
das
and
pop
shl
adc
xchg
fs
cs
dec
pop
sub
push
mov
mov
subb
in
pop
bound
int
cmp
mov
sub
push
int3
fmull
add
outsb
cld
push
lea
rcrl
jb
xchg
inc
mov
pop
lahf
sbb
mov
pusha
pop
xchg
shl
std
jg
daa
in
in
cmp
outsb
pusha
inc
movsl
inc
adc
mov
push
test
sahf
in
stos
je
mov
inc
xchg
pop
insl
out
movsb
xchg
sub
cmp
xchg
pop
out
adc
pop
sub
jp
cltd
push
pushf
mov
popf
xor
inc
and
xchg
mov
adcb
add
mov
out
outsl
fcom
daa
pop
pop
jl
jno
push
inc
add
mulps
adc
imul
jge
movsl
mov
dec
sbb
mov
pop
and
mov
mov
les
fwait
dec
push
or
pop
fwait
push
cwtl
scas
mov
adc
lret
xor
add
movsb
vcvttpd2dq
std
hlt
dec
lock
jns
repz
orl
bound
xchg
outsl
pop
xor
mov
sub
sbb
pop
sbb
cmp
adc
lock
dec
stos
ja
orb
xchg
stos
mov
mov
inc
shrl
or
lock
xor
cs
in
sub
mov
cmpsl
dec
aad
and
mov
mov
lods
jecxz
pop
lahf
das
inc
mov
mov
jo
enter
in
inc
dec
xor
cmpxchg
cld
push
rorl
ja
mov
aam
test
les
js
ret
mov
or
das
push
loopne
std
movsb
shlb
and
daa
shrl
mov
out
mov
ficompl
jg
cmp
mov
sub
in
insb
loopne
fs
les
sahf
xor
sti
xchg
and
inc
push
mov
sbb
jmp
loopne
std
or
add
push
nop
adc
in
je
pop
and
add
push
test
push
ret
mov
fwait
jbe
lock
cmc
lcall
mov
adc
xor
iret
mov
push
repnz
xor
imul
lahf
sub
sahf
sbb
clc
in
lea
repz
pop
icebp
stos
mov
adc
mov
and
mov
fadds
or
jmp
sub
sahf
lods
adc
stos
adc
mov
out
adc
sub
call
mov
ss
xchg
sbb
outsl
pop
lcall
add
xchg
sbb
mov
cli
mov
jl
jb
lock
in
sbb
mov
inc
in
mov
jnp
pop
fsubrl
xlat
dec
jp
test
dec
mov
ffreep
dec
jp
and
xchg
xlat
movsl
mov
sub
and
sar
aaa
mov
cmpsb
pop
pusha
test
xor
xchg
rcr
mov
loope
cmp
inc
pop
popf
pushf
mov
push
xchg
push
outsb
adc
lds
mov
int
mov
jecxz
sbb
adc
xchg
hlt
ja
cmp
xor
inc
das
cld
nopl
aaa
iret
and
add
or
int
test
xor
inc
and
mov
fsubl
mov
shl
fstps
sub
mov
sti
imul
xchg
lret
mov
lahf
lret
popl
shl
sub
pop
push
mov
lock
stos
pop
and
out
ss
lcall
lea
mov
dec
sbbl
push
std
daa
test
outsl
push
mov
ja
stos
inc
sub
adc
xchg
mov
stos
jno
lcall
sbb
lret
stos
out
mov
stos
scas
lahf
and
cmp
inc
sub
jmp
outsl
inc
gs
jae
inc
sub
cmp
sbb
jmp
fisubrl
jge
or
fwait
jg
sbb
test
hlt
call
jne
insl
pushf
jbe
add
andb
mov
add
mov
adc
inc
fistpll
movsl
pop
add
xchg
in
sbb
cmp
outsl
mov
mov
push
mov
dec
add
jg
and
inc
insl
sbb
int3
jmp
jne
mov
mov
xchg
sbb
jmp
aaa
repz
cld
adc
aam
mov
fmuls
xor
out
cld
xor
in
sbb
mov
add
dec
pop
ret
cs
stc
add
and
adc
movsl
popa
test
imul
or
cmc
mov
push
jecxz
xchg
mov
push
cmp
pop
xor
js
inc
push
test
je
scas
ret
fs
in
cmp
gs
test
push
jns
call
sub
testl
adc
test
cmp
adc
iret
mov
mov
cmp
adc
scas
or
push
inc
cmpsb
jecxz
cmpsl
mov
xor
mov
mov
stos
shlb
fwait
cmp
mov
scas
test
lcall
xchg
xchg
pop
inc
and
inc
cmpsl
xor
pop
pop
xchg
popf
adc
mov
in
loopne
jge
movsl
xor
cltd
addr16
jae
lret
dec
ljmp
popa
xor
movsb
scas
in
jg
xchg
loop
mov
xor
push
or
icebp
das
adc
and
lcall
and
xor
ret
pop
xchg
stos
movsb
sbb
lock
test
mov
xor
or
lahf
mov
jnp
push
mov
imul
sahf
ljmp
push
ljmp
and
cmp
xchg
inc
call
into
or
pop
pop
xor
mov
mov
ja
call
outsb
pop
mov
data16
xchg
adc
xor
adc
inc
stos
in
das
int3
jmp
icebp
dec
cmp
mov
cwtl
insl
dec
pop
testl
push
cli
sti
sub
pop
and
into
daa
pop
in
sub
loope
frstor
cmp
lods
scas
jecxz
or
mov
clc
cwtl
sbb
mov
lock
xchg
dec
in
mov
mov
or
fiadds
push
out
xchg
xchg
enter
sub
jecxz
mov
clc
cld
pop
xchg
pop
inc
in
jb
push
add
mov
call
hlt
cmp
sbb
jns
sub
push
roll
push
ficompl
ja
cmp
cmc
push
pusha
sub
ret
sarl
mulb
adc
push
add
subb
popf
pop
scas
fimuls
rcl
dec
pop
jbe
insl
imul
mov
je
dec
loope
lds
mov
movsbl
xchg
add
push
adcl
movsb
int3
leave
das
cwtl
mov
and
inc
jb
push
mov
jmp
pop
push
inc
fcmove
dec
jno
outsb
mov
mov
ljmp
out
inc
jns
ljmp
sbb
rcr
and
xchg
or
dec
fmul
fs
xor
pop
addr16
insb
lahf
adc
cmp
inc
cmp
test
inc
lods
xchg
mov
pusha
sbb
fldl
dec
sbb
jmp
inc
les
in
jge
sub
dec
in
in
adc
adc
out
je
test
cmp
push
ds
orl
subl
sbb
push
mov
cmp
outsb
dec
imul
lahf
xchg
rcrb
push
fmuls
or
pushl
jae
pop
push
repnz
stos
scas
call
in
or
test
sub
rcr
in
adc
jnp
lahf
xor
ljmp
clc
push
scas
jne
push
call
inc
pop
mov
fdivrl
sbb
loopne
outsl
loop
aam
mov
dec
jo
lret
loope
dec
mov
mov
fisttpll
jns
out
pushf
adc
jns
scas
out
cmp
div
add
xchg
and
xlat
and
pop
insb
xchg
push
dec
or
in
ror
iret
imul
ret
sarl
and
cld
and
push
pop
dec
xor
icebp
mov
jno
add
pop
xor
test
mov
pusha
ss
inc
inc
out
mov
fisubrl
mov
dec
mov
ret
inc
jmp
xor
repz
mov
adc
ljmp
or
mov
mov
push
xchg
cli
movsb
pop
lret
nop
aad
aas
sub
popa
pop
inc
stc
or
test
aas
sbb
fdiv
and
mov
or
push
add
or
cmpsl
adc
mov
inc
pop
cmp
inc
lock
and
mov
sub
and
aas
cmpb
mov
sbb
jle
xor
in
decl
ficomps
out
repnz
push
pushf
inc
dec
cmp
outsb
orb
jp
out
cltd
xlat
xor
mov
sub
sub
lds
ret
in
int
fwait
push
test
sbb
ss
pop
ret
sub
cmp
ds
sbb
xor
inc
ret
push
daa
dec
jmp
in
lret
int
jecxz
loope
aas
xchg
mov
add
movsb
push
xchg
and
or
loope
mov
scas
jns
shlb
dec
ret
jge
xor
sbb
push
push
xor
lods
out
out
cwtl
dec
fs
mov
sub
mov
cmp
mov
cltd
enter
enter
cmpsb
push
test
nop
mov
sbb
test
mov
pop
popf
mov
fwait
lock
out
cmc
movsb
and
cltd
testb
jae
in
mov
rorl
lahf
bound
sbb
out
jno
loopne
cmp
in
lcall
aam
mov
rcr
movsl
add
xchg
daa
fistpll
inc
push
lock
pop
jle
mov
mov
add
sub
test
jo
adc
adc
sbb
xor
andl
cmpsb
mov
pop
jge
or
adc
mov
enter
lret
adc
ss
imul
cmp
adc
jbe
aam
jbe
jmp
xchg
sbb
inc
push
jmp
inc
bound
repz
inc
rcl
adc
xchg
lock
inc
mov
mov
int
pop
adc
ss
lcall
mov
cmp
stos
pop
xor
in
in
add
cmc
cmp
mov
cmp
sarl
xchg
sbb
sub
mov
jecxz
xchg
outsl
out
lret
adc
imul
sub
pop
xor
shlb
mov
add
cmp
lock
xchg
mov
xlat
gs
mov
jle
push
sub
int
cmp
fiadds
pusha
jno
in
les
aaa
mov
ret
lret
in
pop
inc
xor
in
cmpl
mov
outsl
pop
or
jmp
scas
mov
les
repnz
ret
mov
js
push
jne
adc
mov
push
xchg
bnd
inc
std
jns
pusha
ljmp
call
cmp
push
jle
repnz
int
mov
xchg
mov
inc
mov
add
lock
movsb
ja
xor
cmpsl
outsl
shll
mov
pop
ljmp
loop
and
and
sub
jb
xor
cmp
jae
mov
cld
jl
test
jle
inc
sbb
cmp
jo
push
cltd
add
or
sbb
mov
scas
xchg
and
xchg
ret
mov
loopne
imul
mov
xchg
test
outsb
iret
aam
mov
xchg
inc
arpl
mov
mov
and
sbb
add
cwtl
int
jne
or
xor
aad
adc
mov
mov
lods
pop
pop
fucomp
mov
cmp
sbb
das
mov
sub
add
mov
loope
cmp
push
test
not
ja
aas
out
or
inc
mov
fiadds
jno
stos
xchg
jb
lea
mov
shlb
int
xor
and
fsubr
les
outsl
js
adc
sahf
jg
mov
sbb
jmp
or
pop
mov
mov
pushf
xor
ret
movsl
in
pop
xchg
test
int
shl
orl
xchg
imul
xchg
mov
or
scas
push
loope
popa
rcr
je
ret
lret
mov
dec
mov
jns
fs
popf
jge
or
insb
fstpl
and
jle
pusha
fmull
dec
pop
aaa
mov
and
loope
or
push
cmpsb
mov
fdivrl
cs
mov
push
pusha
leave
stc
mov
arpl
mov
adcb
shl
lods
ret
mov
inc
subb
test
lds
mov
add
mov
push
and
enter
fcmovb
lods
push
mov
xor
mov
or
movsb
int3
cmp
xchg
or
push
pop
dec
aam
mov
shr
in
add
scas
js
aam
cs
pop
in
loopne
add
mov
shrl
cmp
cmp
addb
sub
rorl
into
into
mov
or
push
sub
pushaw
cmp
and
dec
sbb
lods
outsb
shll
in
jge
mov
xlat
xor
mov
push
adc
and
sub
addr16
outsl
jp
jle
rcrb
fsts
pusha
sub
in
sbb
xor
mov
out
mov
cmp
dec
in
jp
ret
insb
outsl
mov
push
mov
in
xchg
mov
push
inc
sarb
scas
lret
push
fstl
inc
inc
and
add
or
fistps
or
fisubrl
jae
push
sbb
add
jo
adc
dec
or
cmp
bound
mov
pusha
or
imul
pop
aaa
or
int3
out
cmp
scas
mov
mov
ror
adc
movsl
pop
add
dec
rcrl
dec
stc
or
sbb
mov
dec
shll
adc
cmp
in
aad
lcall
imul
mov
sbb
dec
or
pop
mov
inc
jp
mov
mov
cmp
mov
bound
add
cmp
cmp
out
inc
push
or
and
scas
and
xchg
dec
lock
adc
inc
imul
add
subl
je
ja
inc
xor
shr
push
jae
cmp
mov
outsl
loope
sub
or
shl
add
xchg
pop
in
cmp
sub
inc
daa
inc
mov
jmp
outsl
pushf
and
cmp
dec
add
xchg
outsb
and
iret
mov
mov
jecxz
js
mov
icebp
pop
pop
into
fisubrs
pop
es
mov
push
mov
popa
out
xchg
bound
test
jle
push
movsb
inc
repnz
arpl
adc
aam
pop
jecxz
popf
pusha
jne
inc
xor
cwtl
sub
in
cmpsb
cmpsl
lret
insb
pop
es
neg
sbb
movsl
and
cmp
and
rcr
fcoms
cmpsb
cmp
xor
lods
fistpll
in
ret
xchg
add
mov
movsl
dec
push
mov
loop
pop
pop
mov
cmp
leave
xor
movsb
xchg
outsb
xor
aam
aas
outsb
jmp
cmpsb
sbbl
dec
sub
ss
incl
cmp
inc
enter
movsl
loope
fiadds
fst
lcall
jmp
dec
sti
std
pop
mov
xor
shrl
mov
lock
pop
push
fdivl
dec
aam
data16
aaa
int3
cmp
cmp
out
xor
negl
push
fisttps
pop
cmp
push
addr16
sbb
inc
mov
jb
xchg
jo
and
inc
scas
lea
and
jno
je
adc
hlt
add
fdivp
ret
aaa
scas
sbb
pop
xor
xchg
mov
mov
push
or
sub
adc
shlb
mov
dec
sub
dec
dec
fisttpll
pop
jne
popa
mov
inc
incl
icebp
imul
rcrl
adc
sub
pop
stos
dec
and
iret
movb
dec
repz
int
add
fwait
les
cmpsl
test
hlt
mov
dec
lahf
scas
aad
mov
inc
cmpsl
cmp
sbb
cmp
xchg
cmp
jle
dec
ret
or
cmc
push
fsubrs
cmp
sahf
and
cmp
add
pslld
dec
or
lcall
cmpsb
inc
nop
add
xchg
addl
xor
mov
bound
cmp
mov
ss
scas
jl
lcall
lock
lods
fs
push
mov
cmp
test
mov
out
push
hlt
add
hlt
fcompl
stos
inc
inc
ffree
nop
mov
fildl
ss
cld
cmp
fisttpll
rcll
hlt
out
jo
pop
mov
inc
lret
jne
testl
sbb
push
inc
jl
lods
push
dec
iret
cmp
in
pop
ss
pop
jne
mull
scas
lcall
pop
movsb
ja
or
jl
xor
in
dec
call
ja
in
inc
mov
pop
scas
or
inc
add
cwtl
mov
hlt
cmp
and
pop
imulb
iret
fwait
ja
mov
fmull
mov
adc
gs
push
mov
and
pop
push
enter
lea
imul
or
jns
flds
int3
out
pushf
icebp
mov
xchg
cmp
and
dec
mov
inc
mov
lret
int3
jmp
pop
clc
and
test
fsub
inc
jbe
sarb
push
sbb
cli
push
cltd
cmc
not
sbb
sub
popf
jmp
add
fidivs
xor
mov
clc
je
mov
subl
mov
mov
jl
or
jbe
test
ret
out
mov
adcl
dec
push
mov
push
gs
js
out
call
xor
lahf
mov
cld
and
inc
mov
outsl
adc
call
inc
lods
in
sub
shrl
cwtl
loop
out
movaps
shrl
mov
addl
and
dec
inc
dec
sbbl
cmc
hlt
inc
lahf
into
gs
mov
pop
mov
sub
les
push
add
sbb
stos
mov
mov
sbb
mov
imulb
cwtl
mov
jnp
cmp
andl
jl
inc
jo
push
pop
movsl
xchg
or
or
inc
dec
or
scas
lds
xor
mov
mov
rorl
fcomi
xor
sbb
and
push
and
addl
sbb
mov
roll
gs
popl
or
rcrl
insb
jns
inc
out
out
pop
movsl
data16
cmp
imul
shl
sub
xor
or
aam
out
mov
imul
mov
and
xor
mulb
outsb
dec
jl
xlat
cmp
add
cld
pop
rolb
cmp
cmp
xor
lods
in
enter
pushf
cwtl
mov
mov
jp
aad
and
inc
mull
mov
inc
cmp
in
nop
adcl
push
das
xchg
aaa
sub
or
cwtl
popf
jb
pop
pop
xor
dec
and
movsl
or
clc
and
adc
and
out
call
hlt
cli
scas
pushf
in
scas
pop
sub
pop
mov
out
aad
dec
stos
fld
js
cmpsb
jg
mov
stos
jmp
das
dec
insl
lods
addr16
mov
stc
or
push
sbb
mov
mov
into
call
push
int3
adc
shrb
cmpsb
push
mov
fsub
jns
push
popa
inc
dec
out
mov
ja
fwait
jle
icebp
inc
cmpb
fdivrs
push
mov
sbb
test
mov
loop
testl
mov
pop
test
sbb
cmp
sarl
out
jb
insl
cltd
imul
adc
mov
push
imul
out
xchg
dec
jmp
aas
lds
add
jo
cmp
push
xor
jnp
sub
jo
leave
add
loop
popf
xorb
adc
and
shrl
and
push
aam
push
fmul
jl
xchg
xor
repnz
sub
jmp
movsl
popa
gs
imul
jp
movsl
sarl
les
cli
xchg
pop
mov
popa
sbb
enter
cmp
pop
pop
xchg
push
mov
in
adc
or
mov
cmpsb
outsb
outsl
cmp
mov
push
sbb
rcl
push
lds
sarb
mov
gs
clc
or
sahf
roll
inc
stos
or
aam
std
xlat
outsl
lcall
xor
add
push
out
inc
roll
mov
cmp
mov
sbb
lds
cmp
jae
cwtl
add
jo
pusha
sub
and
int
dec
sarl
mov
adc
filds
cltd
hlt
add
addl
test
mov
or
jmp
add
pop
cli
cs
sti
xchg
wrmsr
mov
cltd
inc
jp
xor
aam
movsl
aam
shlb
sbb
push
mov
aas
add
push
iret
lcall
or
cs
adc
repz
hlt
in
inc
mov
mov
jg
xchg
mov
sub
fwait
inc
pop
imul
popf
pop
cmp
dec
adc
cli
pop
push
push
add
rcrb
divb
or
sbb
sar
xchg
gs
jb
outsb
dec
push
push
mov
mull
mov
push
addr16
sbb
fs
mov
lahf
jmp
lods
in
ror
stos
out
add
xor
fildl
sbbb
popa
mov
dec
repnz
jg
cmc
fs
jb
dec
jbe
cmpb
leave
shlb
jecxz
dec
dec
sub
movsl
and
adc
lock
dec
adc
jg
int
insl
fists
mov
jl
test
xchg
sbb
jle
bnd
xchg
es
popa
pop
sbb
mov
jnp
cld
fldenv
iret
test
mov
pop
daa
lds
in
push
sbb
call
xchg
ror
jns
mov
or
pop
js
cmpsb
push
mov
add
lret
clc
neg
fistl
movsl
mov
ret
sub
clc
push
mov
ret
and
or
cmpsb
xchg
lods
sbb
push
and
ret
add
sahf
pop
lds
add
test
ljmp
jbe
or
and
jne
imul
ret
in
and
fimuls
add
ss
xchg
push
mov
cmp
dec
mov
xchg
and
dec
sbb
jbe
mov
ds
aas
sbb
out
push
inc
sti
adc
test
icebp
das
les
popa
mov
rcl
gs
lds
loop
xchg
in
into
dec
int3
pop
mov
pop
xor
mov
xor
pop
sbb
pop
repz
cwtl
out
aam
in
outsb
repz
jl
ja
sti
cmp
inc
cmp
lahf
test
je
lock
sub
sub
dec
ret
in
mov
jecxz
inc
insb
push
fsubl
lahf
ret
adc
add
es
adc
icebp
imul
xlat
in
imul
loopne
or
mov
cli
je
cli
lret
push
call
jae
mov
xchg
out
pusha
push
inc
cs
in
add
sti
mov
ds
ds
int3
negl
mov
jl
jp
arpl
dec
mov
sub
and
icebp
adc
and
fsubs
xchg
mov
or
std
add
inc
cld
fsub
xorl
mov
or
cmp
mov
iret
aam
popl
cmp
imul
fistps
rcl
cs
arpl
out
jle
adcb
in
int3
inc
in
pop
mov
push
mov
add
xor
xor
cmp
std
mov
iret
shr
push
xor
pop
nop
push
cmp
mov
mov
push
xor
loope
mov
push
adc
xor
sbb
xchg
fdivs
mov
int
cltd
adc
jne
mov
icebp
jbe
sbb
mov
sub
xlat
cmp
mull
sub
or
mull
and
nop
jns
push
jne
jo
push
lock
scas
xchg
arpl
cs
and
mov
push
push
dec
xlat
jne
dec
sbb
cmp
and
es
testb
jmp
xchg
call
shrl
scas
popf
cmp
testl
pop
adc
adc
nop
cli
jns
in
sarb
mov
inc
jno
insl
shl
inc
inc
dec
push
rolb
clc
movsl
movsb
mov
cmc
daa
push
lods
sub
pushf
xchg
test
mov
xchg
mov
shll
orl
inc
fisubrl
enter
adc
sub
push
pushl
adc
mov
fisttpl
jns
jl
insb
nop
add
xor
insb
mov
cmp
leave
mov
xchg
mov
cmpsl
jne
out
jmp
lret
out
jecxz
lahf
mov
fcompp
fldt
jbe
in
popa
inc
stos
xlat
xchg
les
push
movsb
call
push
inc
adc
xchg
jmp
sahf
clc
jno
mov
andb
xchg
scas
in
and
clc
inc
addr16
imul
je
sbb
dec
or
adc
mov
mov
gs
mov
fmull
cmp
push
sbb
dec
scas
mov
call
jbe
pop
push
mov
repnz
cwtl
jae
inc
jecxz
or
jge
cmpsb
mov
push
test
xor
ror
lods
iret
add
xchg
xchg
or
sbb
push
jge
inc
aad
fs
cltd
ret
xchg
jae
sarb
jnp
dec
adc
inc
xchg
mov
dec
stc
int
pop
xor
fidivl
testl
fisttpl
lahf
idiv
arpl
add
icebp
mov
cltd
xchg
jb
es
xor
mov
cmc
int3
mov
cmp
mov
aam
pop
pop
sbb
rorl
cli
loop
mov
lock
arpl
data16
test
fnstenv
adc
aad
mov
jp
jl
cmp
add
mov
jmp
out
mov
add
popf
cld
pop
ret
mov
lret
cwtl
rol
xchg
pop
xor
xor
leave
sbb
icebp
inc
fsubrs
lea
stc
xor
das
sahf
movsb
stos
les
subb
pusha
ficoml
in
adc
push
sub
daa
out
mov
dec
scas
add
pop
add
mov
stos
xor
lcall
lea
mov
les
or
popa
imul
dec
pushf
mov
mov
rorb
mov
jl
lock
in
movsb
out
xchg
push
and
mov
fisubrs
cwtl
inc
mov
data16
mov
jle
adc
push
sub
dec
sbb
push
leave
movb
mov
insl
imul
mov
mov
ss
mov
in
add
jl
mov
stos
cmpsb
and
or
std
dec
add
inc
cli
mov
das
jmp
arpl
sbb
nop
adc
aam
mov
or
cmp
sahf
orl
shrl
push
jl
sbb
pushf
push
pusha
mov
cwtl
inc
shl
cmp
pop
xchg
ds
sti
cmp
cmp
lcall
test
jl
jb
icebp
or
push
cld
test
movsl
fidivrl
cmp
insl
fwait
jp
sbb
lcall
mov
test
mov
scas
push
sti
aaa
scas
xchg
push
std
arpl
and
or
xor
aad
int
push
data16
fcomps
negl
and
lock
insb
xor
xchg
fdivs
stos
mov
pop
pop
repz
inc
cmpb
out
sub
cmc
push
mov
and
dec
test
mov
sbb
jne
xor
cmp
lea
fwait
insb
jo
dec
push
mov
int
stc
or
clc
leave
pushf
loopne
dec
inc
imul
inc
es
popa
mov
and
mov
dec
xchg
inc
mov
xchg
andl
jp
xchg
push
sbb
xor
pushl
ljmp
add
movsb
std
or
jno
and
pusha
and
fsub
cmp
sti
adc
sbb
inc
dec
fstpl
jge
lret
rcll
add
or
mov
pop
popf
ja
pop
lahf
xor
dec
aas
adc
adc
or
mov
and
or
fmuls
cmpsb
push
xchg
inc
xor
inc
xchg
ss
jno
add
mov
sub
push
fdivrs
scas
enter
jp
shlb
jecxz
sbb
mulb
or
dec
in
mov
add
lods
ja
ljmp
fsts
mov
push
sub
pop
into
loop
arpl
push
imulb
pop
dec
enter
dec
lock
dec
mulb
cmpsl
fcomps
fistpl
xor
outsb
xor
sub
jmp
cmp
cmp
xchg
fstpt
movsb
daa
push
pop
outsb
sbb
inc
sbb
push
push
sahf
mov
popf
pop
xchg
push
lods
or
je
jbe
adc
sub
call
add
inc
invd
les
jae
and
adc
jl
fucomi
dec
icebp
mov
xor
idivb
push
subb
idivl
and
ja
int3
add
jns
xchg
mov
xchg
or
mov
rclb
iret
sti
cmp
pop
jns
mov
repz
jns
test
dec
jae
js
icebp
sahf
pop
dec
jmp
ret
lahf
cld
das
outsb
pop
ds
hlt
dec
push
repnz
adc
jg
jno
inc
inc
add
cmp
pusha
es
mov
stos
xor
dec
sub
aad
cmp
test
imul
mov
pop
mov
test
mov
lahf
mov
adc
frstor
cwtl
ficomps
lret
cmpps
push
xor
mov
sbb
xor
shlb
mov
loopne
or
cmp
pushl
addr16
dec
sbb
xchg
xchg
mov
cmpsb
shlb
pushf
in
pop
inc
movsb
adc
cltd
sbb
push
int3
or
mov
inc
sub
popa
bound
push
push
inc
lods
inc
jecxz
pop
adc
cmp
roll
nop
pop
loopne
cs
pop
lds
dec
loopne
out
cs
aam
jne
outsb
push
xchg
in
xchg
std
mov
cld
xor
popa
mov
or
fs
inc
adc
rclb
pop
mov
jae
inc
push
mov
mov
xchg
jl
rcl
sahf
jl
arpl
push
xor
sbb
or
xchg
or
adc
in
push
push
adc
push
cmpl
xlat
in
and
push
arpl
or
bound
mov
pop
mov
mov
add
mov
mov
pop
dec
xor
inc
shl
daa
insb
scas
cld
imul
shlb
mov
imul
iret
sub
or
in
mov
leave
mov
cli
imul
dec
clc
rclb
sarb
dec
xchg
cmp
jecxz
dec
clc
arpl
mov
sbb
push
cmpsb
das
cmpb
jge
mov
dec
pushf
test
mull
jbe
or
repz
leave
adc
insb
jle
lret
pop
loopne
out
je
sbb
cmp
bound
loope
lods
push
sub
pop
add
dec
xchg
leave
push
adc
sbb
mov
pop
aas
adc
mov
sub
test
jne
scas
bound
mov
stos
fwait
jecxz
cmpl
jl
hlt
push
dec
lea
adc
frstor
sbb
mov
xchg
jo
sub
jge
fcoml
ja
setbe
mov
jmp
shl
dec
pop
pop
pusha
aaa
pop
loope
lret
fwait
push
out
lods
lret
cmc
push
push
neg
es
sbb
dec
popf
jbe
pop
xchg
sub
lahf
outsb
lahf
aam
jl
js
into
sti
adc
ret
mov
dec
adc
jo
xchg
sbb
mov
test
stos
jno
fs
call
ja
mov
int3
add
cld
sahf
mov
xchg
or
xchg
pop
mov
sub
rcll
scas
call
cmpsb
pop
inc
bound
mov
adc
js
add
cmpsl
push
mov
xchg
jmp
mov
or
test
es
inc
iret
fadds
jecxz
lock
fldl
xor
dec
fstpt
ficompl
lcall
and
fadd
std
sahf
les
insb
pushw
int
mov
ficoml
mov
fidivs
fcmovne
pop
or
mov
jnp
mov
xor
fimull
pop
outsl
add
mov
mov
mov
cmp
out
lea
inc
aas
cld
xor
negl
cmc
insb
dec
in
xchg
inc
xchg
pop
pop
inc
or
inc
inc
daa
mov
fwait
sbb
push
add
or
pop
add
xchg
jns
sub
and
mov
sbb
adc
add
inc
pop
ljmp
addl
imul
or
lds
add
fisttpll
and
mov
sub
mov
popf
cmc
cmp
pop
and
pop
imul
fidivrs
jbe
std
sti
ss
fildll
adc
inc
sbb
roll
adc
or
jae
nop
ficoms
cld
mov
push
leave
pop
shrl
or
push
call
jno
xlat
movsb
xchg
scas
gs
inc
push
cwtl
int3
lds
cltd
add
int3
inc
scas
scas
xchg
icebp
stos
call
int
testb
cs
imul
mov
sub
cmp
cmp
outsl
out
xor
rclb
jne
push
jnp
and
mov
dec
mov
xchg
popf
dec
cmp
popf
lcall
rcrl
cmc
push
mov
icebp
lods
push
insl
adcb
push
subl
mov
jb
fsubrs
xchg
push
inc
cwtl
xchg
fldenv
cmp
popa
jo
aaa
and
addr16
insb
hlt
cli
jg
mov
dec
imul
ret
mov
mov
int3
mull
mov
xchg
push
stos
dec
xor
and
jb
jecxz
sti
mov
inc
mov
lock
pop
mov
das
jecxz
pusha
enter
pop
jl
fsubrl
pop
cmp
mov
jae
push
inc
and
ret
lock
cmp
inc
ret
sub
pop
jne
pop
dec
into
xor
mov
sub
sarb
cmp
lods
notl
push
rorb
push
xlat
dec
pop
lahf
push
lret
aam
xor
sbb
jecxz
cmp
jmp
pop
push
imul
pop
xchg
hlt
xchg
es
pop
sub
fisttpl
inc
test
mov
insb
leave
xor
aas
mov
sub
xor
stos
sahf
sub
orb
pop
dec
add
insl
sub
xchg
adc
int3
addb
bound
add
inc
add
das
aad
pop
lret
int3
rcrl
lods
pushf
jno
loop
add
xor
clc
xor
xor
idivl
mov
push
into
gs
arpl
pushf
cmp
cmc
and
movsb
fwait
sub
mov
icebp
inc
sbb
rclb
nop
leave
jmp
sarb
cld
push
mov
stos
sarl
stos
shl
add
xor
xchg
ja
cmp
jbe
jno
gs
movsl
fcmovbe
jg
cli
add
gs
jg
xor
jbe
xchg
dec
jbe
mulb
xor
sub
inc
sub
out
xchg
push
jb
fcmove
mov
mov
mov
addr16
xor
leave
push
cmp
mov
push
xor
insb
in
jmp
adc
subb
lcall
inc
xor
lock
cld
popf
xorb
call
leave
add
repz
and
popa
pop
or
or
stos
test
in
shrb
iret
mov
cli
mov
aas
movsl
mulb
lahf
mov
and
iret
or
daa
mov
repz
cmp
lcall
pop
xor
cwtl
mov
test
rol
inc
ja
into
cmp
int
add
jle
jno
sub
adc
repnz
xchg
gs
and
repnz
mov
hlt
jbe
insl
jne
jne
or
repnz
xlat
mov
cmp
sub
mov
cs
movsb
or
fcoml
ret
mov
cmc
cld
data16
xchg
loopne
mov
hlt
sub
stos
jmp
cld
scas
jg
jne
sub
inc
push
inc
lods
mov
cmpsl
aas
pop
das
xor
add
cltd
arpl
stos
sahf
lock
sbb
hlt
push
loop
arpl
push
jl
loope
jbe
fadds
cmp
push
fsub
rclb
mov
rclb
lds
add
add
ja
int
sbb
and
jnp
jns
pop
push
popf
sbb
add
pushf
fwait
sbb
lods
mov
mov
aad
cmpsb
stos
pop
lock
and
mov
pop
mov
rolb
dec
aas
les
jle
popf
lock
adc
jge
ljmp
jnp
jbe
mov
sub
cmp
cmc
push
loop
into
fs
jno
fsubr
mov
fimull
jle
cmpsl
cwtl
xchg
or
sub
dec
add
aad
adc
sbb
popa
in
stc
aaa
jge
rcll
inc
jb
mov
add
test
lret
out
pop
lods
lcall
les
xchg
sahf
cmp
popa
aas
push
in
sub
jae
test
sub
mov
cmp
mov
jl
jbe
dec
xor
jno
sub
bound
push
pop
jge
rorb
in
scas
into
int3
lahf
rcrl
stc
mov
shll
in
dec
pop
mov
iret
dec
outsl
lcall
test
xchg
in
mov
imul
mov
lret
popa
loop
inc
and
scas
out
or
lods
mov
pop
fidivs
and
lods
cltd
insb
dec
repz
fstpl
movsb
add
dec
in
les
cld
cmp
sbb
js
sub
pop
jl
popa
iret
mov
cltd
add
pop
xor
jnp
out
mov
pop
mov
fidivl
inc
adc
xchg
in
lds
aam
add
movsl
mov
pop
xlat
rol
aaa
jge
aas
and
cli
cmpsb
stos
aam
imul
inc
jne
sahf
adc
mov
sub
jae
scas
cltd
fstpt
mov
scas
insb
fdivs
jns
push
pop
xor
add
push
mov
mov
clc
xchg
fistps
push
or
xchg
or
in
mov
loope
or
mov
out
jg
rcrb
addr16
nop
dec
gs
aam
push
and
aam
xor
cli
mov
jmp
arpl
jno
push
cmpsb
mov
scas
cmp
nop
inc
stc
push
ss
xchg
xor
xchg
xor
jae
cmpsb
mov
mov
leave
push
cs
cmp
dec
test
add
out
inc
cwtl
mov
notrack
sbb
ret
lds
push
jno
pop
cmpl
xchg
test
sahf
dec
push
loop
fistpl
fidivs
inc
push
ds
add
stos
mov
testb
pop
rol
jae
jl
sbbl
addr16
jge
jae
add
sbb
cld
or
or
aaa
add
mov
jnp
hlt
sahf
ljmp
xor
pushf
pop
cmp
cltd
mov
push
sub
out
inc
mov
and
pushf
dec
and
jp
lock
out
adc
adc
and
mov
or
inc
pop
fdivrp
insl
popf
inc
cli
fwait
inc
nop
imul
mov
dec
sarl
pop
jle
jo
in
call
sti
and
dec
xchg
adc
adc
sub
ja
mov
adc
dec
xor
and
inc
mov
xchg
test
adc
mov
sbb
insb
stos
jge
shl
outsb
ds
jb
or
test
xor
xchg
popl
inc
repnz
push
ffreep
xor
mov
adc
dec
cmp
jo
push
inc
stc
inc
lret
es
cmp
outsb
xorb
insl
sbb
cltd
lods
insb
iret
cli
xor
push
lods
jnp
repnz
scas
pop
rcr
mov
lea
sub
mov
mov
jno
xchg
push
push
cmc
icebp
repnz
inc
bnd
fsubrl
mov
cmpb
sbb
mov
rcll
inc
and
xorl
push
pop
test
cwtl
subb
jle
aas
jmp
add
or
adc
stc
push
add
popa
or
lcall
sub
or
xchg
jle
mov
push
inc
sub
fsubr
fistpl
pop
test
pop
ja
mov
push
lock
cltd
lea
cli
adcb
popa
pushf
mov
out
xchg
xchg
add
out
or
xor
mov
jb
stos
fsts
mov
dec
xchg
fsubs
mov
xchg
divb
aaa
fwait
js
cmp
push
mov
out
mov
stc
lahf
mov
pop
xor
jg
xor
ret
mov
dec
int3
push
push
add
push
pop
fsubrs
adc
adc
jmp
sti
loop
lods
loope
add
std
rcl
sub
jmp
sub
jae
lock
iret
mov
and
fs
add
pusha
add
sub
push
fsts
mov
push
or
fs
mov
xlat
addr16
adc
pusha
insb
ficomps
and
mov
xor
mov
jl
shll
xchg
mov
jno
mov
test
in
add
fidivrl
test
das
repnz
pop
pop
mov
ljmp
sbb
outsb
mov
and
call
movsb
repnz
jbe
mov
dec
daa
ljmp
outsb
mov
inc
dec
mov
cltd
pop
cmpsl
rolb
lcall
xchg
addb
push
and
daa
lock
insb
test
jo
call
data16
xor
daa
leave
sub
cwtl
adc
test
iret
lcall
in
sub
repnz
lock
push
bound
sbb
addr16
push
jl
jg
and
cmp
mov
out
hlt
mov
jnp
push
and
push
les
cmp
dec
js
push
lahf
jmp
cmp
push
ja
cmp
jp
loop
test
aad
out
pop
fimuls
int3
fsubrl
pop
mov
sub
push
xorl
mov
jbe
es
mov
rolb
cmp
mov
leave
push
mov
push
sub
xor
insb
jbe
or
mov
and
loopne
cli
repz
jb
test
adc
addl
cmpb
xchg
cwtl
movb
cmp
jbe
lods
mov
inc
out
out
xchg
push
aad
pop
aad
xchg
push
jmp
lods
push
test
adc
in
data16
pop
cmp
mov
xchg
mov
mov
out
outsb
leave
in
les
scas
inc
jg
or
sbbl
push
pop
or
imul
jo
push
mov
xorl
test
fnstsw
shl
rdtsc
and
fadds
imul
sarl
bnd
lcall
inc
lret
out
pusha
adc
sbb
inc
push
jl
mov
and
cs
popa
js
nop
pop
insb
aas
daa
adc
jb
push
enter
adc
xchg
inc
loop
fdivl
push
push
lock
cltd
leave
pop
jg
lods
cmc
mov
sub
and
daa
xchg
jl
dec
in
out
sub
in
rcrl
jp
mov
lcall
subl
mov
adcb
push
mov
sbb
cmp
mov
push
mov
xor
in
and
test
and
aam
es
inc
pop
mov
jle
dec
aam
out
orb
push
inc
aam
arpl
cmpsl
inc
cltd
jmp
jp
loop
in
and
inc
fistpl
mov
rol
ljmp
aas
mov
sub
inc
repnz
push
push
inc
jb
inc
fwait
inc
jbe
pusha
jmp
cwtl
mov
cmp
in
nop
popa
je
stos
ja
inc
icebp
xlat
mov
add
loopne
leave
and
xchg
insl
mov
xor
inc
outsl
addr16
fcompl
mov
mov
jno
gs
out
push
or
push
cwtl
cmpsb
jo
xchg
data16
sub
ds
iret
je
negl
mov
cltd
pop
push
bound
push
mov
inc
mov
adcl
nop
scas
cld
xchg
mov
nop
add
xchg
negb
mov
in
rcrl
lods
lods
cltd
repz
and
cltd
clc
jb
adc
out
sahf
or
stos
out
testb
dec
mov
cli
test
leave
push
fcmovb
popf
xchg
ss
test
ja
inc
push
out
dec
ljmp
test
movsb
adc
mov
ljmp
lds
or
mov
imul
mov
mov
cli
push
adc
mov
mov
mov
and
mov
nop
pushf
or
pop
das
sub
lods
cmpsb
inc
ret
xchg
adc
xchg
ja
test
das
inc
sub
pop
xchg
scas
mov
call
sti
add
pop
pcmpeqb
jecxz
dec
es
dec
test
sbb
push
and
pop
das
fistl
lods
jg
stos
imull
fidivrl
mov
pop
in
int
jnp
ret
data16
fadds
xchg
adc
xor
loop
popf
pop
xor
pop
adc
imull
lret
repnz
or
inc
gs
xchg
add
push
xchg
nop
gs
jge
mov
pusha
jmp
repz
pushf
xor
loop
lds
int
adc
je
pop
into
dec
mov
test
loopne
jmp
mov
jge
loope
or
ss
mov
xchg
mov
cltd
push
dec
in
rcr
mov
repnz
dec
in
mov
push
repnz
or
mov
and
mov
cmc
ljmp
test
xchg
cld
inc
mov
pop
lock
test
test
loop
aaa
out
fldcw
movsl
and
xor
mov
loopne
fldenv
dec
and
xchg
mov
hlt
sub
stos
sbb
dec
lea
push
pop
xor
mov
clc
cmp
pushf
and
shl
aas
in
call
sub
scas
inc
mov
or
adc
dec
mov
cmc
inc
hlt
mov
aaa
test
sub
sub
enter
mov
mov
mov
orl
test
in
dec
in
pop
or
outsb
jmp
lahf
ja
lds
cmp
nop/reserved
adc
lret
jl
iret
cmpsl
and
lods
adc
inc
cmpsl
mov
push
popf
cmpl
std
pop
pusha
or
cld
roll
dec
je
dec
inc
jge
add
mov
hlt
aam
loop
add
mov
lea
pop
xlat
mov
lea
cs
inc
mov
cmp
lret
out
sti
mov
lods
push
out
sbb
sub
mov
mov
fiaddl
adcl
lods
push
push
xor
cwtl
adc
in
stos
jmp
movsb
fldln2
add
xorb
push
in
jb
mov
lret
nop
loopne
repz
cmp
sbb
xchg
loope
pop
cli
aaa
xchg
xchg
dec
daa
loopne
ljmp
sbb
push
push
xor
in
push
das
jnp
fucomp
test
adc
pop
stos
push
leave
jbe
dec
mov
mov
pushf
mov
movsb
loop
mov
mov
jp
and
hlt
sbb
lods
jnp
sub
mov
js
shl
cmp
inc
out
xor
test
ret
scas
sbb
dec
pusha
cmp
inc
sbb
cmp
inc
fiadds
ror
pop
add
aam
nop
adc
ja
shll
jmp
jge
clc
mov
jae
or
add
insl
cmp
outsb
dec
add
dec
cmp
out
xchg
sbb
ficomps
and
jae
stos
ljmp
outsl
xchg
adc
xor
mov
ror
imul
data16
mov
and
cmp
jecxz
pop
mov
or
xchg
shl
add
cs
in
addr16
and
test
pop
sbb
jbe
enter
or
xlat
hlt
add
pop
test
jl
mov
aad
popl
cmovno
jb
imul
and
addr16
mov
jl
sub
jns
movsb
jbe
addl
adc
int
sarl
cmp
test
dec
sahf
sbb
push
leave
mov
imul
mov
jnp
nop
mov
mov
xchg
sub
out
into
mull
addr16
fs
cmp
movsb
sbb
ficoms
mov
shll
or
add
clc
dec
int
ss
sub
loopne
scas
adc
aam
dec
lahf
mov
mov
sahf
test
mov
dec
mov
aaa
insb
adc
testb
inc
pop
addr16
mov
je
dec
lods
je
orl
inc
mov
jbe
and
pop
sti
xchg
sbb
push
xchg
cld
popf
jnp
xor
movsb
cmp
subb
xchg
dec
jnp
cmp
push
mov
push
add
xchg
mov
dec
inc
lods
lret
test
xchg
rorl
push
mov
popf
mov
or
sub
and
andl
aaa
xchg
or
ror
push
mov
lret
pusha
andl
adc
cmc
sub
mov
push
and
lds
sub
dec
repnz
mul
xor
lret
add
mov
and
clc
jecxz
cmp
inc
push
xchg
mov
push
mov
inc
test
ljmp
adc
leave
fstp
mov
adc
add
lahf
in
in
dec
fnstsw
je
xor
jno
jae
ss
les
addr16
lahf
push
mov
mov
jo
xor
pop
adc
mov
jp
jne
je
jl
or
aas
in
push
outsl
cmp
dec
mov
jecxz
xor
clc
lahf
jge
lods
sbb
pop
or
ljmp
mov
pop
sahf
inc
add
scas
adc
xchg
hlt
das
dec
cmp
xchg
in
add
inc
lahf
cltd
or
sahf
cld
or
inc
cmpsl
fidivl
fnstsw
sti
ret
xor
pop
lods
jnp
jmp
cmp
shll
push
daa
cmpsl
mov
data16
push
xlat
imul
sbb
inc
mov
dec
cmp
xor
rcl
or
sahf
sub
xor
adc
jp
add
mull
push
scas
and
jp
sbb
fisubl
adcl
jae
repz
mov
fidivs
loop
das
lcall
loopne
xlat
daa
sbb
lods
cld
and
mov
es
std
adcl
adc
mov
testb
lds
hlt
jne
add
push
out
idiv
dec
adc
insb
rol
add
cmp
dec
add
jmp
xchg
loopne
and
stos
add
sahf
mov
push
bound
fnstenvs
pop
ss
fiadds
mov
inc
nop
xchg
xor
cmp
cmpsb
shrl
sarb
cmp
fnstcw
push
mov
pop
clc
xor
in
push
mov
mov
jg
je
ss
cld
dec
cmp
cmp
cld
ja
loope
sbb
out
sarl
js
lds
mov
std
mov
pop
cli
aad
ja
stos
jle
fisttpl
jns
or
mov
ret
nop
fwait
ja
adc
fistps
add
mov
push
xor
and
loopne
jno
lret
popa
fstpl
push
idiv
daa
or
mov
dec
rcll
jb
or
add
jbe
mov
add
fsubrs
lret
push
pop
flds
dec
xor
mov
jmp
jl
push
fstpl
vucomisd
xchg
cmpsb
xor
xorl
dec
mov
fidivrs
jne
sti
int
sub
adc
andl
sbb
lock
ret
sar
or
jle
arpl
cmp
test
mov
cmp
aam
sub
sub
sub
incb
cli
push
add
inc
fldenv
push
mov
and
lcall
nop
mov
ret
dec
imul
jo
mov
or
out
iret
add
xor
mulb
xor
stos
mov
pusha
sub
jecxz
lcall
mov
cmp
sub
add
les
dec
push
shll
pop
jge
loopne
mov
sar
das
pop
sbb
xchg
pop
push
pusha
sbb
mov
rorl
mov
mov
xchg
and
inc
or
mov
fidivrs
or
mov
mov
xlat
arpl
xor
and
mov
insl
je
gs
rcl
jae
imul
in
sbb
dec
repnz
in
sbb
loop
inc
mov
dec
jp
iret
pop
mov
fwait
ret
jae
adc
out
aaa
jnp
pop
jmp
and
cwtl
call
push
xchg
lock
mov
aaa
sub
loopne
adc
lcall
jbe
adc
icebp
loopne
inc
cli
loop
clc
icebp
int
pushf
cmp
das
pushf
xchg
fmuls
xor
jns
mov
mov
mov
movups
enter
loop
shrb
mov
lods
rclb
and
push
ss
mov
lret
sbb
int
jl
subb
inc
inc
out
js
fidivrs
sahf
movsb
fwait
aam
outsl
pop
mov
mov
cld
iret
xor
adc
fstps
mov
iret
test
aas
mov
ljmp
jb
inc
aam
adc
and
inc
mov
iret
xchg
add
hlt
xlat
sub
push
push
xchg
fimuls
mov
add
imul
sub
and
test
pop
adc
ja
mov
mov
insl
mov
pusha
andb
sbb
pushf
add
jbe
xchg
pop
mov
inc
sbb
cld
cmp
hlt
jae
inc
jne
stos
loop
push
cli
adc
in
insl
or
xor
fisubl
xchg
pop
pop
or
mov
out
insb
jmp
mov
sbb
movsl
jmp
lods
aas
push
mov
ljmp
out
jp
shlb
inc
sub
xchg
fldl
hlt
mov
ror
into
xchg
push
repz
adc
iret
call
and
int3
int3
jmp
jnp
in
xor
stc
push
lea
rcr
xor
and
or
push
cmpsb
dec
jg
aaa
jno
jnp
mull
jp
cmp
dec
jmp
mov
jp
add
int3
pop
addr16
mov
rolb
sub
mov
fcoms
mov
dec
shl
mov
and
mov
fiadds
push
das
mov
fwait
sub
insl
add
push
jns
jnp
dec
aad
add
cwtl
push
aaa
arpl
rcl
or
xchg
and
sbb
dec
insl
jae
rcll
popa
rol
mov
loopne
mov
add
repnz
add
sti
mov
movsb
add
adc
jmp
das
cmp
add
xor
aaa
inc
xchg
lahf
stc
scas
add
mov
jbe
pop
jp,pt
mov
xchg
lods
push
inc
dec
inc
testl
cmp
mov
nop
sub
inc
dec
and
add
and
pop
xchg
pop
ja
int3
jno
jge,pn
loopne
int
pop
int
insb
or
das
mov
int
icebp
inc
or
mov
add
push
loope
data16
jno
iret
push
out
lret
mov
test
imul
repnz
adcl
out
fs
es
insl
jecxz
dec
outsb
dec
cs
imul
inc
fsub
in
mov
jge
mov
sub
inc
dec
cmc
push
ja
in
shr
das
dec
sar
cmp
pop
mov
outsl
jbe
inc
push
cmp
mov
rcrb
add
mov
xor
cmovp
imul
inc
iret
lods
in
leave
sbbl
outsb
into
mov
subl
in
dec
scas
repz
loopne
outsb
xor
add
fstpl
shlb
inc
inc
adc
out
mov
cmc
mov
inc
cmpsl
bnd
jns
js
push
xor
mov
imul
test
cmp
mov
lret
xor
sub
jge
imul
xchg
imul
mov
adc
stos
dec
std
mov
push
lds
mov
fnstenv
cmp
out
or
push
test
mov
aam
les
cmp
jne
jl
inc
push
dec
insl
lods
xor
repz
push
jne
lahf
xchg
pusha
movb
rorb
jecxz
inc
xor
popa
data16
mov
fisubrl
xchg
xorb
sub
pop
sbb
push
adc
movsb
fldl
xchg
pop
dec
adc
or
lds
push
sub
mov
dec
mov
push
mov
out
shlb
dec
cld
ret
xchg
aad
mov
das
out
xlat
add
sub
daa
pop
lahf
sti
dec
sub
and
popf
sbb
mov
push
rcrl
xchg
sbb
mov
xor
sub
daa
adc
dec
sahf
out
sbb
jae
inc
mov
jne
lock
sub
cmp
jp
sbb
xor
jl
sub
push
sti
std
mov
neg
or
push
xor
aaa
in
idiv
dec
insb
mov
push
outsb
addb
scas
pusha
jbe
mov
adcb
bound
add
pop
lock
out
rcr
sbb
lea
jns
xor
das
cmpsl
in
lods
inc
adc
push
xchg
cmpsb
aad
lahf
sub
iret
daa
js
movb
aas
dec
adc
test
rclb
pop
stos
fildll
ja
test
cmp
add
mov
shrb
jp
bound
xor
xor
inc
lret
daa
out
mov
adc
fdivrl
les
xor
jne
ss
lret
stos
jp
inc
sbb
jae
in
andb
mov
or
popf
out
mov
inc
addb
inc
and
fcompl
div
inc
sbb
mov
sub
push
push
mov
mov
in
mov
lret
lock
adc
mov
mov
xchg
les
cld
sbb
dec
sub
mov
mov
push
xor
fisttps
push
push
add
add
movsb
inc
out
shll
int3
int3
and
jmp
adc
jns
aam
sbb
inc
fwait
or
incb
in
cmp
cmp
and
mov
mov
imull
dec
xchg
mov
daa
sub
cmovl
xchg
leave
aas
es
push
lods
les
and
adc
and
daa
inc
out
push
dec
sub
arpl
outsl
std
das
jg
daa
pop
addr16
sbb
cwtl
mov
gs
mov
mov
lahf
jg
xor
shll
pop
lret
and
scas
rcll
xchg
sbb
stos
in
xor
push
loop
cwtl
sahf
scas
sbb
insl
imul
add
add
cmc
lods
rorb
addr16
sub
adc
stos
sbb
test
push
add
sbb
adc
and
mov
fimuls
mov
or
icebp
cltd
adc
push
and
sub
sub
lret
cld
stos
xchg
mov
aaa
inc
jae
jg
enter
ja
je
fnstcw
aaa
and
xchg
lahf
pop
or
mov
inc
cmpsb
push
cmp
pop
xchg
icebp
jle
xchg
sbb
dec
ret
daa
cs
call
cmpsl
xor
shl
scas
add
cmpsb
xor
dec
rcrb
adc
imul
andb
jb
push
sub
jg
dec
cmc
mov
shlb
inc
lock
inc
fsubs
jns
and
mov
inc
bound
jae
das
aam
gs
mov
mov
rcll
mov
scas
push
mov
int3
cmc
iret
mov
lea
aaa
mov
pop
mov
pop
mov
mov
inc
xor
push
outsl
jle
mov
cwtl
mov
jge
inc
lahf
test
jno
mov
push
mov
add
jne
sub
sbbl
shl
ljmp
pop
mov
xor
jo
ljmp
jae
clc
popf
sbb
inc
out
outsb
cs
dec
cmp
lods
in
insb
stos
and
data16
pusha
in
int
xchg
ret
sub
aad
rcll
sahf
push
sbb
mov
xorb
push
jmp
pop
fcompl
inc
fcomps
mov
mov
insl
or
pushf
fsubrl
imul
push
adc
loopne
pop
clc
and
inc
std
pop
add
jb
test
mov
aam
xor
or
call
inc
inc
push
fs
and
ret
lds
xor
mov
subl
testb
fidivrl
mov
dec
imulb
testb
pop
or
sti
scas
test
es
mov
sub
cmpsl
mov
in
aas
ss
loop
aaa
jge
or
cmp
insb
pop
scas
pop
aam
pop
push
mov
pop
push
mov
push
push
adc
test
into
mov
shr
push
out
adc
rolb
push
mov
into
aam
cltd
addr16
js
push
icebp
add
outsb
out
test
mov
stos
clc
cmp
das
js
push
ljmp
out
mov
pop
repz
lods
or
fwait
aam
popa
or
lret
sbb
ret
push
adc
cmpxchg
jp
test
into
cmp
das
stos
clc
push
push
push
jge
sbb
inc
pop
adc
int
xor
movsl
dec
test
das
inc
dec
fnstenv
popl
dec
push
jp
and
in
sbb
xchg
xchg
dec
lock
add
cmp
mov
insl
push
loop
dec
cmpb
dec
jle
jmp
and
jl
sbb
imul
out
add
mov
sub
flds
cmp
aas
sbb
push
mov
pop
cmc
mov
sahf
pop
mov
pop
test
iret
xchg
jno
movsb
and
adc
subl
ret
mov
mov
jb
xchg
aam
push
out
fstps
cmpsb
inc
hlt
pop
not
xchg
jp
pop
inc
cltd
cmpsb
fiaddl
cs
adc
xchg
dec
stc
mov
iret
jbe
out
mov
in
sub
jp
xchg
adc
inc
cmpsb
jl
cmp
pop
mov
dec
fistps
lahf
jo
jecxz
loopne
jno
add
into
fs
cltd
in
push
sbbl
mov
cld
push
sbb
bound
sahf
jmp
mov
shrl
push
inc
fldcw
dec
adc
lock
test
clc
mov
fcmovne
test
mul
push
fldl
xchg
cmc
inc
xor
mov
out
sbb
nop
push
push
out
lds
xor
pop
popa
push
arpl
enter
aad
popl
shlb
aam
insl
push
xchg
cli
xor
xor
ja
xor
popf
cltd
cmpsb
loope
adc
mov
pushf
dec
and
divl
stc
ljmp
adc
in
cld
sbbl
mov
pop
jns
dec
test
aas
xchg
pop
jns
hlt
mov
sub
sub
addr16
cld
filds
pop
sub
cmp
icebp
mov
jecxz
cmpsb
dec
cld
sbb
mov
sbb
fisttps
push
pop
inc
int3
pushf
lea
and
pop
mov
push
xor
adc
sbb
hlt
int3
sbb
aam
adc
fists
sbbl
xchg
xlat
pop
push
ret
inc
call
cltd
mov
fisttps
inc
inc
sbb
sub
mov
pusha
inc
add
addr16
aaa
addr16
adc
sbb
pop
pop
lea
inc
ljmp
fidivrl
ucomiss
adc
add
pushf
mov
repz
or
mov
mov
mov
fcoml
iret
mov
dec
cs
mov
mov
pop
aaa
test
imul
push
xorb
mov
insl
ret
or
stos
fnsave
pusha
das
xchg
push
cmpsl
jmp
fidivl
popa
pop
adc
adc
nop
lret
loope
setg
adc
inc
nop
dec
test
sub
clc
stos
add
iret
lods
negl
or
aam
pop
cld
pop
adcb
add
clc
and
fisubs
js
aad
jl
mov
sub
pop
in
inc
xchg
push
add
jo
mov
mov
sbb
js
out
xor
and
ja
mov
or
xchg
bound
xor
outsl
fimull
pushf
adc
sarb
sbb
add
rolb
outsb
ljmp
stos
test
pop
loopne
sbb
test
pop
mov
cmpsb
loop
mov
in
sub
daa
xchg
leave
xor
cmp
pop
jo
std
in
push
cmp
dec
es
pushf
jecxz
add
mov
test
daa
lret
xchg
shrl
xchg
mov
xor
xchg
pop
insl
mov
push
lods
and
xchg
push
mov
and
sub
cmpsb
in
mov
leave
enter
cmpsl
push
push
fxam
jle
pop
sub
adc
inc
orl
xchg
lea
fldl
das
inc
out
hlt
ja
jge
int
xchg
xchg
pop
int3
ljmp
or
mov
pop
jae
in
dec
cmc
adc
lock
or
jle
rcrl
push
mov
scas
inc
stos
sub
push
mov
loop
push
pop
cli
insb
xchg
aam
enter
push
sub
xchg
cli
push
notl
and
pop
xor
inc
dec
int
jbe
jl
sbb
lahf
in
and
mov
ljmp
lods
dec
mov
mov
in
imul
sub
in
cmp
clc
shl
or
push
imul
mov
data16
cmp
sub
add
pusha
adcb
mov
and
inc
iret
std
and
pop
mov
iret
pop
pop
cwtl
stos
ljmp
cltd
negl
push
fcmovnb
mov
push
jne
dec
in
arpl
mov
into
in
cmc
and
sbb
je
add
enter
xor
pusha
ja
repz
ljmp
sub
stc
iret
sbb
outsl
sub
repnz
aaa
inc
jnp
call
rcll
aad
xor
popa
jmp
stc
sub
jmp
push
jb
cmp
call
mov
out
push
out
enter
into
in
pop
add
scas
insl
dec
icebp
pop
popf
sarb
lcall
pop
sbb
lahf
faddl
addb
shlb
push
jo
lods
popf
stos
pop
inc
and
mov
push
cs
xchg
xchg
jge
fwait
and
push
stc
jae
repnz
aas
lea
push
scas
or
int
cmp
cmc
xchg
mov
push
sarb
repz
mov
ss
xchg
jle
repnz
in
std
or
out
clc
lret
out
mov
cmpsl
push
push
repnz
clc
mov
cmc
cld
in
mov
icebp
mov
inc
addr16
xor
cltd
arpl
add
push
test
jp
lahf
and
mov
push
addb
cmp
push
dec
xlat
pop
and
push
or
mov
xchg
and
movsb
push
js
ss
addr16
flds
xchg
rclb
ljmp
or
imul
push
pop
cmp
mov
xor
pushf
jecxz
adc
jecxz
fiaddl
sub
clc
fcoms
xchg
mov
fidivs
sar
mov
test
fiaddl
mov
adc
push
cwtl
cmp
clc
out
mov
add
movsl
int
add
adc
addr16
fstpt
lock
lods
popf
mov
mov
enter
inc
cmp
in
dec
jno
xchg
dec
jns
push
out
push
xor
jne
sahf
sbb
rorb
stc
ret
fcompl
cwtl
das
sbb
pop
sbb
jge
sub
pop
popl
mov
or
xchg
ja
and
shrl
lds
sub
xorb
ret
sti
adc
adc
dec
mov
fidivl
mov
es
jl
jbe
mov
add
pusha
sbb
mov
xchg
call
add
pop
mov
ror
jg
pop
cmc
jnp
fs
xor
inc
xchg
pop
push
cmp
adc
or
jbe
addr16
fsubs
in
sahf
push
or
sub
pop
add
sahf
pop
dec
and
enter
xchg
dec
pop
push
and
js
mov
cmp
js
enter
sarb
xchg
push
pop
adc
jo
mov
push
lcall
in
sub
cs
xchg
imul
xor
jbe
movl
rcl
aad
daa
leave
dec
and
mov
xchg
mov
les
push
inc
and
xor
sub
and
xlat
fisubl
cmp
add
or
mov
lock
add
jne
mov
stos
xchg
or
sub
adc
cld
fstpl
mov
pushf
stc
test
cld
movsb
inc
mov
test
inc
mov
push
rorb
shr
pop
nop
xor
lock
stc
add
pop
mov
mov
sub
jge
aam
mov
fisttpl
mov
rclb
mov
fdivr
inc
cmp
inc
call
jb
fwait
adc
mov
mov
adc
shlb
fsts
rolb
mov
fnstsw
cmp
mov
add
xorl
lret
and
popl
js
cmp
cmp
cmp
dec
push
dec
pop
sub
rcrl
xor
mov
jge
stc
cwtl
rclb
xchg
sub
xor
lret
dec
insl
cmpsl
aad
scas
push
adc
stos
cmp
stos
add
dec
or
sahf
in
stc
and
cmpsl
xor
sub
shl
push
negl
xor
movsb
push
dec
mov
mov
or
sub
add
xchg
rcr
inc
inc
xor
scas
mov
jns
jp
push
daa
mov
daa
adc
jmp
nop
and
push
dec
insb
jnp
mov
jle
mov
lods
insb
sub
inc
addr16
xor
xchg
scas
adc
jns
hlt
js
stc
insb
mov
lds
jp
add
pop
in
sub
sbb
inc
xchg
loopne
add
subl
mov
xchg
xor
dec
dec
dec
lret
popa
pop
arpl
adc
add
int3
and
sahf
fwait
and
add
cmpsb
jmp
popa
cltd
in
mul
mov
and
stc
or
push
push
xchg
jbe
rcll
aad
jecxz
cld
shrb
mov
sti
sub
xchg
sub
fdivs
sbb
sbb
jge
sbb
mov
mov
pop
sbb
arpl
aad
stc
cmpsl
mov
out
cmp
xor
jo
fwait
sub
movb
imul
inc
test
cmp
stos
cmpsb
xchg
push
push
adc
iret
pop
sbb
cmpsl
lods
movsl
sbb
cmp
mov
je
dec
mov
arpl
add
in
mov
push
add
nop
enter
cmp
notl
out
add
clc
sub
push
cmc
movsb
lcall
rcr
mov
pop
in
dec
in
mov
enter
pop
mov
inc
mov
mov
scas
cmc
pop
fwait
dec
pop
fisubrl
pop
mov
pop
sbb
mov
and
cltd
or
mov
dec
jne
sti
mov
cli
out
add
inc
sub
xor
mov
daa
lea
mov
lds
stc
cmp
mov
adc
fs
pushf
fsubs
lock
in
pop
jb
dec
sbbb
outsb
push
push
fildll
xchg
jecxz
sub
in
push
cwtl
pop
orb
mov
loope
out
adc
scas
jae
push
xchg
or
mov
decb
out
xlat
mov
push
rcll
xchg
mov
push
add
and
mov
sub
jl
test
nop
jae
sbb
xchg
aas
leave
dec
sahf
gs
sub
push
sub
or
int3
imul
jo
jg
scas
daa
lret
adc
sub
xchg
xor
rcrb
sub
jle
stc
ret
adc
sub
mov
add
mov
pop
sbb
pop
cmp
or
scas
push
int
mov
pop
and
lods
arpl
cmp
mov
fwait
in
repnz
repnz
jge
mov
jp
cmpsl
fistpl
and
out
sub
rol
inc
jecxz
mov
les
push
push
in
mov
in
repnz
movsl
dec
imul
into
cld
nop
sub
pop
jno
int
xchg
cmp
pusha
repnz
cmpsb
rcrb
pop
lret
adc
xchg
es
insb
push
and
add
ret
push
fsts
xchg
cs
sub
push
js
adc
adc
icebp
lahf
loopne
and
xchg
orb
add
and
mov
add
jae
jae
inc
ret
loopne
dec
xor
ljmp
imul
xor
lahf
lcall
sbb
std
and
xorl
add
push
sti
inc
mov
imul
add
xchg
data16
dec
ss
or
pop
cwtl
xlat
lcall
test
sbb
mov
adc
fwait
push
mov
or
xchg
mov
loop
jmp
add
xchg
push
cmpsb
mov
mov
push
mov
leave
rorl
mov
fistps
xchg
adc
cwtl
mov
mov
pop
jb
mov
nop
lcall
test
mov
xor
cmp
mov
jo
mov
jae
cmp
dec
or
pop
rcrb
xchg
push
push
inc
push
fdivrl
inc
ja
ss
icebp
test
cmc
fbld
xchg
lods
pop
fistl
stos
cmp
add
push
jl
cmpsb
dec
cmp
push
rcl
aas
lret
push
cmp
sbb
icebp
ret
push
cmp
pusha
push
mov
out
jno
outsb
sbb
rcll
test
mov
out
pushf
or
daa
addl
pop
stos
jno
in
add
cmp
jl
sub
enter
mov
inc
fsubrs
push
imul
dec
or
jb
mov
cmp
test
bound
sahf
xor
sbb
xchg
divl
mov
xchg
inc
xor
loope
notb
and
mov
ljmp
sbb
sub
dec
inc
popf
bound
sbb
mov
pop
mov
push
repz
int3
push
ficoms
xlat
dec
out
and
fdivrl
ja
inc
insb
sub
push
int
shrb
mov
cmpsl
popa
addr16
in
and
mov
jns
jne
jl
sub
in
cli
mov
inc
sahf
out
notb
mov
sbb
int3
ds
fsub
loopne
cmp
push
ja
imul
mov
inc
cmp
dec
je
cmpsb
dec
jl
cltd
into
dec
xor
dec
stc
jl
les
call
ret
cmp
and
imul
xor
jmp
shr
mov
adc
dec
cmpsb
pop
inc
in
iret
fcomps
jg
pop
daa
test
cmc
push
inc
mov
adc
fimull
push
daa
add
pop
mov
mov
add
cli
mov
add
adc
dec
dec
mov
sarl
pop
shll
sub
dec
ja
dec
ljmp
addl
out
insb
sub
and
fcmove
psubusw
dec
mov
ret
sbb
mov
fs
dec
pop
cmp
adc
sbb
cmpb
sbb
dec
in
pop
lods
cmp
and
push
dec
mov
and
rcll
dec
test
and
lock
xchg
or
push
arpl
popf
nop
insl
push
lret
stc
mov
sbb
nop
js
xor
mov
maxps
dec
lahf
mov
jns
je
cld
dec
xchg
cltd
mov
fldt
xor
mov
cmpsl
mov
jb
shll
sarb
and
mov
and
loop
test
pop
xor
iret
dec
das
ret
inc
sub
subl
cmp
inc
aam
mov
add
gs
mov
mov
ret
push
das
notl
push
jb
popa
fcompl
cld
cmp
shl
push
iret
fdivs
xor
inc
mov
cltd
jle
mov
or
inc
call
lods
in
sbb
cld
out
dec
mov
dec
das
sub
xorb
daa
adc
mov
jno
push
jb
data16
jle
daa
mov
push
divb
into
repz
mov
daa
cmpsb
xchg
push
stos
add
roll
popa
in
pusha
sub
adc
shll
lret
outsl
pop
mov
aas
inc
mov
adc
fbstp
iret
ret
xchg
pop
push
shlb
dec
test
dec
lret
push
int3
mov
mov
gs
mov
jo
je
rol
shll
xchg
test
daa
add
lret
push
xchg
andb
inc
pop
in
cmp
or
movsb
dec
call
fs
lea
and
mov
scas
cmpsl
sbb
fbstp
and
movsb
dec
and
aad
in
cwtl
int
lret
movsb
jns
push
arpl
add
insl
and
adc
repnz
dec
xchg
push
pop
ret
cltd
and
adc
or
loope
into
xor
push
mov
xor
jp
int
outsl
call
test
xchg
sbb
mov
repz
mov
out
push
je
ljmp
and
cltd
insl
shll
xchg
sub
jbe
xor
inc
nop
mov
sarb
inc
jg
pop
aam
pop
imul
ret
aad
dec
pushf
fcomps
data16
cmp
sahf
je
jbe
sub
roll
mov
daa
and
scas
fdivrs
sbb
xchg
adc
jne
mov
insl
sbb
push
insl
ret
jne
sarl
out
aas
cmc
iret
lea
test
rcrl
sti
or
or
adc
inc
push
or
and
jnp
push
or
clc
lods
outsl
pop
lahf
sub
fimull
pop
xchg
mov
movsl
hlt
enter
insl
push
ret
dec
orb
xlat
orb
out
ds
mov
cli
mov
mov
xor
fstl
xchg
ljmp
jg
scas
lods
loope
jno
in
jmp
std
aaa
clc
call
cmc
or
jmp
scas
jmp
aad
mov
ljmp
sub
int
xchg
jmp
aam
cmp
sti
cltd
push
scas
push
in
lock
cmp
arpl
iret
jno
ret
jns
sahf
or
mov
dec
out
ds
mov
fsts
sub
bnd
mov
mov
push
test
or
stos
gs
push
sbb
enter
sti
lods
stc
outsb
je
xchg
arpl
sti
cs
add
adc
push
out
jl
mov
push
and
stos
mov
pop
icebp
inc
fs
lods
loope
mov
bound
rcl
test
loop
xor
mov
cmpl
sti
pushf
pop
mov
dec
fcoml
add
test
jb
jle
loop
sahf
in
cmp
and
dec
test
mov
sbb
or
sub
insl
movb
jo
lret
dec
xrelease
out
repnz
add
mov
xor
jle
inc
or
xlat
jbe
cmc
cld
push
fwait
in
inc
in
adc
ja
imul
mov
add
test
jno
mov
dec
sub
aas
orb
out
lahf
inc
lcall
and
cli
mov
mov
xor
iret
xchg
jmp
xchg
insl
idivb
outsl
scas
jge
xor
or
sahf
xchg
sti
xor
in
inc
add
cmp
das
jge
in
mov
in
pusha
in
mov
adc
sbb
push
or
pop
shr
push
mov
and
pop
movb
xchg
adc
sub
fs
bound
dec
and
mov
lea
nop
mov
sub
inc
cmp
aas
sbb
push
imul
js
mov
lahf
xchg
fsub
cmp
sbb
les
sbb
into
inc
sub
fs
das
std
js
fnstcw
aaa
adcl
mov
jge
pop
adc
mov
mov
mov
pop
and
mov
lcall
xchg
jg
sub
pop
ds
mov
push
add
outsl
inc
imul
cs
mov
sub
cmp
or
cmp
lds
je
jge
jns
cmp
push
add
out
rcl
pop
out
push
sbb
push
inc
sbb
in
xchg
pushf
cmp
mov
mov
insl
enter
mov
jl
sbb
inc
fisubl
fists
ret
push
in
sbb
out
loopne
sti
adc
nop
mov
shrb
outsl
fwait
aam
or
add
and
stos
sbbl
pop
popl
sbb
jecxz
and
mov
pop
sbb
lret
js
rcrl
mov
enter
pop
push
xchg
gs
mov
pusha
fwait
cmp
pop
mov
jmp
add
or
shrb
cwtl
dec
jb
in
sub
jmp
popf
mov
xchg
push
outsl
jmp
mov
or
sarl
mov
cmp
mov
out
dec
sub
and
aas
pop
dec
inc
aaa
je
mov
out
loopne
mov
fsubrl
and
lret
aas
push
jae
lock
jne
movsl
sub
xchg
jns
inc
add
jb
push
mov
jecxz
les
inc
cltd
in
sbb
fstps
cmp
and
push
or
jne
jnp
dec
dec
and
in
push
lret
rcrl
cmp
sub
ja
cmpsb
mov
mov
xchg
dec
dec
inc
pop
inc
and
push
shll
xor
xor
insl
pop
enter
sub
int3
ja
fwait
add
mov
fisttpll
mov
adcl
sub
sbb
mov
or
lock
pop
pop
negl
loopne
icebp
aam
gs
inc
add
stos
pop
and
mov
repnz
push
mov
test
dec
outsb
fcmovne
xor
test
mov
test
call
xchg
mov
fsubs
stos
daa
fiadds
popf
cmpsl
arpl
insb
mov
lahf
icebp
pop
dec
stc
cli
inc
and
mov
dec
out
js
bound
adc
adc
push
test
mov
adcl
mov
xchg
jg
push
adc
pop
jl
sbb
add
xchg
mov
xchg
push
scas
jne
ljmp
pushf
xchg
inc
test
inc
jge
movsl
or
ds
mov
mov
ljmp
dec
and
sahf
xor
mov
jno
sub
mov
sbb
fsub
mov
icebp
adc
roll
push
into
aaa
mov
mov
popa
ja
in
jne
pop
xchg
jae
xor
dec
pop
ficoms
sub
call
pop
jge
lret
mov
loop
es
pop
jo
add
pop
daa
lock
and
cmp
push
pop
in
nop
gs
push
les
out
adc
or
addr16
sti
mov
test
outsb
loopne
out
pop
ja
loopne
rorl
jae
iret
cmpsb
or
adc
cmp
jne
push
mov
outsl
leave
dec
nop
mov
add
cmpl
push
mov
aaa
cld
shrl
jae
dec
cmp
xor
sub
jno
ja
adc
leave
pop
bound
flds
xchg
cmp
stos
pusha
pop
stc
jo
loop
sub
mov
push
push
jo
je
cli
xchg
mov
mov
test
shll
adc
nop
rorl
leave
xor
xchg
inc
mov
push
imul
dec
push
lret
ss
stc
les
pop
test
or
lods
ror
call
addr16
mov
sub
and
adc
gs
mov
cmp
fcompl
adc
sub
mov
ljmp
addr16
nop
mov
xrelease
scas
mov
addr16
xor
decw
jmp
adc
adc
xchg
inc
pop
mov
cmpsb
addr16
push
aas
loopne
sbb
movb
lods
insl
xor
or
loopne
sbb
cmp
xchg
sahf
mov
insb
sub
pop
test
push
jne
lods
outsb
mov
push
incl
xor
repz
jbe
cmc
stos
rcl
push
mov
aad
push
or
push
arpl
mov
pop
jecxz
xor
jecxz
add
mov
mov
out
insb
repnz
fists
loope
mov
push
push
cmp
xor
push
mov
sar
scas
aas
call
test
add
add
mov
pop
ret
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
jp
add
push
js
fstps
and
jl
jl
lcall
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
test
fldcw
and
mov
les
mov
inc
arpl
cld
add
sahf
mov
push
sti
jns
test
lea
xchg
das
je
dec
fwait
mov
xor
fnstsw
and
fdivrp
lret
out
mov
aas
lods
out
sub
sbb
addb
cmc
addr16
sbb
adc
insl
rorl
cmpsb
lahf
push
fimull
push
cld
xor
xchg
sahf
movsl
xchg
fists
out
sub
test
bound
insb
outsl
cli
test
sub
not
and
or
jbe
test
not
out
mov
jl
jl
fldenv
iret
rclb
and
sbb
sub
lahf
xchg
pop
and
jl
pushf
and
fsubrs
xchg
xchg
pop
into
fnstcw
es
fldenv
lahf
xchg
stos
and
jl
jl
fldenv
lahf
xchg
push
and
insb
push
jl
std
fldenv
lahf
xchg
pop
and
jl
jns
fldenv
lahf
xchg
pop
mov
and
fs
xor
jl
insb
and
leave
data16
lahf
xchg
pop
and
insb
push
jl
fldenv
lahf
xchg
pop
and
jl
jl
pop
xchg
xchg
jle
fnstsw
sub
push
pop
aaa
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
mov
push
jl
stc
insl
aaa
lahf
test
and
inc
push
jl
sti
fldenv
fcmovbe
and
jl
flds
lahf
jne
push
scas
push
aaa
jl
fnstenv
aaa
lahf
xchg
daa
sub
jl
jl
jmp
bound
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
mull
fnstsw
and
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
fldenv
lahf
xchg
pop
and
jl
jl
mov
xchg
pop
xor
jl
fdivrp
mov
inc
iret
jmp
inc
enter
loop
mov
xor
cwtl
fdivrp
out
mov
pop
xchg
lret
pop
xchg
aaa
pop
cmpsl
sub
leave
int
insb
jnp
enter
stc
lock
icebp
mov
test
fisubs
dec
add
push
push
push
lcall
sub
mov
aas
mov
cmc
lret
or
pop
fisttpll
cmc
scas
pop
push
push
repz
clc
add
stos
inc
mov
and
add
imul
jecxz
pop
ss
sub
push
lods
insl
idivl
adc
mov
sbb
notl
fcomip
lods
hlt
loope
inc
in
inc
dec
sub
out
nop
aaa
int3
dec
out
cmp
lret
inc
inc
mov
in
insl
cs
adc
jns
mov
add
xor
testb
sbb
mov
adc
data16
jle
mov
inc
push
aad
and
jp
mov
outsl
jmp
sti
push
dec
ja
inc
lds
pop
rclb
or
movsl
loope
aad
mov
ljmp
imul
inc
cs
test
or
rolb
pop
sub
sti
sub
pop
loopne
push
dec
stc
mov
add
ret
roll
inc
loopne
dec
xorl
bound
mov
lahf
dec
xor
aam
jp
fsubl
sub
cld
mov
cwtl
cmc
retw
jge
outsl
mov
push
xchg
imul
in
jae
cwtl
push
stos
jecxz
jl
inc
pop
sub
sub
cmp
push
movsl
push
aad
push
xor
mov
dec
adc
outsb
cltd
int3
or
orb
dec
inc
lds
mov
sti
sarl
xchg
jl
stos
cmpl
bound
push
hlt
addr16
movsb
das
popa
aad
mov
cmp
adc
xor
mov
and
int3
and
leave
pop
sbb
gs
repnz
sub
dec
cmp
lret
xchg
sbb
sbb
inc
imul
push
inc
mov
out
push
cld
ror
xchg
push
lret
imul
push
push
ljmp
ror
lods
jmp
aaa
jle
pop
dec
mov
lret
int
xchg
sub
cltd
push
out
neg
xchg
mov
xor
lret
mov
and
out
xchg
xlat
fistps
inc
pushf
jmp
sbb
push
cmp
pop
repz
jecxz
rolb
adc
cmp
or
in
dec
sub
or
repz
mov
cmp
dec
adc
pushf
dec
cmpsb
jp
mov
mov
sbb
pusha
xchg
jo
xchg
jnp
rorl
lcall
sub
sub
xor
sbb
jp
fwait
inc
dec
push
xor
adc
pop
push
inc
sub
dec
cmpsl
fildl
lret
lret
mov
mov
xor
test
xchg
cmc
imul
and
pop
mov
add
pop
mov
pop
lcall
and
add
pop
and
enter
jo
adc
jns
mov
jl
pop
xchg
pushf
pop
sahf
inc
pop
in
movsl
and
ffreep
fstpt
and
leave
inc
cli
gs
pop
sub
int
sub
add
and
mov
jo
xchg
xor
or
addl
sti
repz
push
aam
out
jmp
xor
andl
mull
lret
shll
fmuls
repnz
addr16
mov
fucomip
leave
adc
xchg
push
xchg
sub
mov
clc
test
mov
in
push
rcl
ret
pop
mov
lret
into
cltd
or
push
and
mov
rorl
xchg
out
adc
daa
test
jns
mov
outsb
xchg
jle
cmpsl
pop
loopne
ds
or
cmp
mov
add
pop
data16
mov
popf
mov
ret
jp
imulb
scas
fwait
push
inc
jo
inc
pop
mov
ficoml
mov
inc
shlb
and
and
pop
shrl
outsb
lret
push
or
inc
xchg
push
lods
mov
mov
add
pop
sbb
testb
jnp
ds
sbb
stos
mov
cmp
mov
lds
add
and
pop
pop
sbb
pop
fisttpll
xor
jl
aad
insl
push
mov
cmp
les
bound
lahf
xchg
testl
mov
fdivr
pop
mov
fs
mov
mov
mov
ljmp
js
and
data16
adc
adc
adc
sti
inc
imul
and
inc
add
in
shll
push
fldl
sbb
jbe
fnsave
enter
xchg
mov
mov
pop
aaa
ja
sbb
sahf
clc
xor
and
dec
xchg
xchg
scas
adc
mov
push
jae
sub
dec
mov
jnp
cmp
push
cwtl
dec
fstpl
jo
adc
shufps
pop
out
jl
and
sbb
jbe
cld
cwtl
ficoml
daa
and
scas
les
insb
rorb
mov
test
mov
scas
xor
es
sbb
and
dec
les
mov
add
push
ja
ljmp
aad
es
lods
sub
iret
imul
pop
cmp
rolb
aad
add
mov
or
stos
repnz
dec
int3
out
xchg
cmp
inc
pop
cmp
cltd
lahf
cwtl
push
sbb
adc
push
fcomps
outsl
mov
popf
shrl
pop
push
stc
add
or
cmp
je
xchg
pop
xor
mov
repz
lret
mov
std
dec
cmp
mov
fwait
les
popa
ds
mov
xlat
or
mov
xor
mov
dec
adcb
or
inc
jp
divb
inc
lret
jnp
outsb
xchg
ss
jbe
inc
lock
repnz
inc
pcmpeqd
jns
jae
mov
push
test
or
aaa
mov
int
xchg
and
out
repz
out
add
pusha
push
negb
rcr
in
adc
mov
or
dec
fidivrs
xchg
int
rcl
mov
jnp
dec
jge
adc
movsl
dec
push
inc
in
ljmp
fsubr
xchg
mov
adc
ret
sub
push
mov
les
cmp
fucomi
iret
shlb
sarb
sbb
mov
rcrb
ja
out
mov
mov
in
mov
sub
or
aaa
xor
sbb
jae
daa
rcrl
int3
xchg
mov
test
fxch
aam
repz
dec
pop
add
adc
mov
nop
test
mov
mov
pop
clc
inc
fidivrl
mov
mov
adc
cmp
mov
movsl
mov
mov
test
sbb
inc
xchg
mov
xchg
test
subb
xchg
outsb
sahf
sbb
sbb
push
cmp
mov
adc
add
jbe
jg
or
push
int
lcall
outsb
in
xor
out
js
es
ret
outsb
icebp
call
cmp
cmpsl
add
cld
push
ja
or
jmp
das
mov
insl
rorb
mov
fisubs
cld
fists
jbe
add
out
sub
imul
notb
call
gs
leave
fcom
call
fyl2xp1
pop
neg
insl
dec
pop
ret
adc
orb
xor
push
js
jge
sub
mov
mov
mov
jmp
ljmp
xor
movsb
icebp
mov
and
in
cmp
das
fimuls
push
lds
sub
xchg
sbb
add
push
lock
scas
in
sbb
dec
mov
cltd
fidivs
mov
fcoml
scas
aam
call
jmp
xor
sti
jg
cli
mov
test
cmpb
lods
mov
cli
sub
jg
hlt
inc
pop
mov
repz
sub
push
test
in
fisubs
mov
dec
hlt
movsb
mov
pop
sub
idivb
cmpsl
das
xchg
mov
push
test
and
loop
adcl
imull
lods
or
sub
sbb
jge
mov
sarl
aas
jl
sbb
call
fistps
call
pop
jl
adc
mov
es
sub
stos
out
scas
push
push
jp
xlat
fs
jle
int
ret
and
ficoms
jne
cmpb
jmp
stos
mov
filds
test
push
mulb
cltd
insl
cli
repnz
stc
push
xchg
jp
movsl
push
pop
scas
negl
push
or
xor
into
mov
jns
negl
pop
daa
sbb
bound
pop
jns
out
callw
mov
pop
sbb
push
sti
iret
call
jne
fsubrs
in
iret
out
mov
bound
dec
jl
dec
or
imul
jmp
cmovge
adc
cmp
xchg
mov
inc
mov
mov
jg
mov
and
or
sbb
scas
push
xchg
in
cs
push
push
jg
aaa
cltd
inc
sbb
dec
stos
push
leave
or
xor
mov
mov
out
jbe
mov
stc
pop
cmpsl
push
jns
or
or
push
push
xor
sbb
lret
cmpsb
mov
cmp
dec
lahf
popf
dec
push
sarb
je
hlt
cltd
sub
rol
sub
fcmovnu
and
or
sbb
mov
out
movsl
lock
mov
jno
mov
pop
mov
movsb
sub
sbb
cmc
push
lods
inc
incl
lret
pop
xchg
mov
add
lea
insl
xlat
mov
inc
sbb
out
inc
mov
nop
sarb
mov
in
sbb
pop
sub
and
mov
js
dec
gs
xor
cmpsl
pop
mov
int
xor
pop
andb
mov
dec
inc
sbb
mov
ret
cld
inc
xchg
aaa
xor
dec
icebp
fdivl
out
xchg
enter
movsb
repnz
mov
in
das
sbb
ret
sub
dec
xchg
mov
sub
xchg
pop
mov
push
out
jl
int
outsb
pop
add
jns
cwtl
mov
cmp
negb
test
dec
cmp
or
or
xchg
push
jge
mov
addr16
push
pop
inc
sbb
icebp
xchg
or
into
xor
adc
cltd
jbe
fcmovu
mov
popf
inc
inc
inc
mov
cmpsl
cli
xchg
and
or
jecxz
lahf
lea
or
adcb
adc
aad
jno
mov
and
gs
xor
jb
ret
aam
push
pop
out
mov
push
in
push
jnp
stos
mov
pop
mov
mov
lret
push
or
enter
pusha
fildll
sbb
cmp
loope
inc
pusha
test
jg
cmp
mov
inc
or
push
hlt
gs
adc
mov
jmp
sbb
fsts
lock
push
inc
mov
daa
dec
and
mov
mov
pusha
inc
cmp
in
mov
fidivl
arpl
xorb
repnz
std
cmp
call
xchg
es
sub
xor
or
js
movsb
push
cli
stc
push
pop
sbb
xor
sarb
jae
add
xor
out
adcb
stos
cmpsl
cwtl
sub
fcompp
add
cmp
jae
stc
fdivr
and
xor
xor
mov
shlb
dec
push
in
jp
mov
sbbl
push
arpl
outsb
lods
mov
mov
lret
mov
clc
jae
xlat
push
icebp
dec
leave
popf
aas
mov
mov
imul
adc
inc
leave
dec
mov
aas
cmp
push
lret
enter
mov
dec
imul
push
pop
mov
add
pop
jg
and
cmp
mov
xor
stos
fistpl
cmp
das
add
inc
shll
mov
arpl
push
leave
sub
jg
js
cwtl
adc
mov
ss
mov
dec
xchg
or
mov
addl
lods
mov
out
mov
adcb
pop
test
push
xchg
inc
mov
or
cs
addr16
negb
lock
pop
mov
or
and
incl
pop
sahf
test
lods
clc
imul
sub
or
or
enter
mov
ds
insb
pop
sub
sub
test
icebp
jl
and
or
incb
mov
or
or
lock
hlt
or
enter
fisubrl
mov
inc
testb
sub
sub
add
aaa
loopne
cmp
test
les
test
out
sub
inc
mov
setb
and
xor
cmc
xchg
and
push
in
jmp
cmpsl
fisubs
jae
pop
xor
ror
daa
fs
loop
cmp
int3
xorb
xchg
cmp
push
test
and
xor
jbe
lods
inc
fs
dec
and
mov
cmp
scas
sti
inc
push
pop
int3
je
mov
or
in
pop
mov
loop
out
shr
pop
in
sbb
xor
dec
aas
inc
adc
dec
cmp
nop
cmp
jle
push
insl
pop
call
lcall
in
ret
das
fisttpl
xchg
gs
mov
std
js
setns
mov
mov
xor
push
bound
mov
push
mov
shrl
xor
rorl
adc
or
int3
mov
in
imul
orl
mov
ds
les
outsl
pop
leave
movsl
popa
imul
and
mov
loop
inc
int3
jno
lea
popf
cmp
insl
popf
call
dec
leave
mov
mov
xchg
shlb
adc
loopne
cli
lds
repz
push
or
xor
add
ret
nop
nop
nop
nop
jmp
