xor
andb
adc
and
and
adc
les
and
arpl
push
or
push
add
add
rol
or
add
push
test
adc
loopne
mov
adc
add
and
xor
or
push
enter
inc
add
inc
orb
add
or
mov
xor
add
dec
or
mov
xor
sub
addb
mov
add
add
rorb
shlb
add
add
pusha
push
or
adcb
test
add
add
cmp
add
and
sbb
ret
mov
push
inc
add
inc
inc
add
add
adc
add
or
pop
xchg
add
inc
jo
add
add
rolb
xor
pop
cwtl
add
add
and
add
or
add
add
inc
ret
or
add
and
or
push
jle
or
inc
or
or
add
add
in
test
add
or
add
add
and
inc
addl
test
push
and
sbb
inc
orl
add
dec
adc
adc
or
add
inc
js
pushf
xchg
mov
mov
add
add
test
rorb
orl
mov
sbb
or
add
addb
ljmp
nop
add
sbb
jo
add
add
sbb
sub
addl
addb
add
addb
and
adcb
inc
adc
add
inc
add
add
inc
or
or
xor
add
test
dec
les
add
mov
inc
push
lock
add
or
nop
nop
inc
add
add
sbb
and
add
and
or
or
add
mov
inc
add
sub
push
xorl
or
stos
inc
mov
adc
and
inc
shll
add
xor
push
add
or
inc
fiaddl
add
adc
or
or
and
inc
push
and
inc
sbb
or
add
inc
dec
fwait
xchg
sub
nop
add
mov
addb
lock
inc
add
add
sbb
or
add
addb
fadds
addb
and
pop
sub
mov
inc
or
outsb
addb
or
shlb
and
sbb
add
rol
add
or
adc
addb
add
xor
add
or
add
roll
pusha
or
addl
add
and
test
addb
add
add
add
add
or
add
mov
or
add
inc
or
or
addb
add
add
sbb
inc
or
push
add
or
add
push
enter
inc
adc
dec
or
add
or
xchg
xchg
mov
inc
add
inc
mov
add
add
fs
loop
adc
test
add
dec
test
and
or
pusha
lret
add
push
or
add
test
add
adc
inc
enter
adcl
jns
adc
adcl
and
sbbb
add
pop
or
and
inc
imul
add
add
add
or
mov
adcb
add
pop
push
add
les
inc
adc
sub
inc
sbb
add
and
add
sbb
add
add
add
adc
cmp
add
add
adc
add
sbb
mov
add
mov
or
and
xchg
mov
or
add
adc
and
add
or
inc
or
add
or
adc
inc
inc
or
popa
test
nop
push
imul
cmpsb
mov
and
and
add
dec
adc
ret
adcb
add
or
or
adc
inc
xchg
add
and
xor
adc
add
shl
sub
and
add
adc
add
push
jge
shll
add
add
rclb
inc
cmp
add
add
adc
cmp
and
and
add
jmp
inc
push
inc
orl
or
dec
add
add
mov
dec
adc
add
xchg
bound
and
adc
test
sbb
shrb
mov
or
add
or
add
inc
stos
adc
xchg
ljmp
and
and
and
adc
inc
add
and
add
push
push
add
popa
adc
add
add
and
andl
adc
cmp
or
xorb
or
cmp
and
test
add
adc
add
and
or
add
adc
or
test
add
add
add
push
add
addb
movb
and
add
inc
adc
add
add
adc
and
or
ret
mov
addb
pop
adc
add
add
test
add
orl
add
les
and
dec
and
or
or
dec
adc
adc
and
adc
or
and
add
rolb
or
add
or
test
cwtl
add
inc
push
push
inc
add
add
xor
test
adc
test
xor
fmuls
mov
adc
mov
add
addl
pusha
add
add
adc
nop
and
out
ret
arpl
inc
add
adc
add
addl
mov
add
or
adc
inc
add
sub
push
add
add
sbb
inc
addb
rolb
mov
inc
push
mov
inc
adc
bound
mov
xor
lcall
and
mov
mov
or
mov
add
addb
mov
add
rolb
adc
mov
inc
or
adc
cmp
stos
add
test
or
and
inc
roll
mov
inc
and
inc
add
add
movsl
sub
add
and
and
or
add
int
add
add
push
add
mov
sbb
or
add
test
cmpb
shlb
add
xor
push
add
test
inc
and
fmull
inc
add
add
adc
xor
add
inc
mov
ret
inc
and
mov
push
add
mov
add
add
popa
and
ret
cmp
mov
inc
add
pusha
inc
or
add
add
lcall
and
xor
adc
add
add
add
adc
enter
orb
and
nop
inc
gs
xor
and
inc
mov
xor
add
add
inc
addb
add
mov
les
orb
xorb
inc
mov
inc
mov
and
inc
add
or
add
orb
add
mov
push
test
add
pusha
and
add
aam
or
mov
add
addb
adc
add
das
add
add
or
add
add
les
adc
inc
add
add
inc
mov
and
adc
adc
pop
mov
push
inc
add
inc
andb
rorb
or
add
adc
add
inc
dec
adc
push
push
sub
add
inc
add
add
sbb
add
addb
and
mov
mov
push
or
sbb
add
cmp
in
or
nop
inc
pop
sbb
add
mov
leave
js
add
adc
add
sub
sub
mov
and
inc
and
add
push
and
or
subb
sahf
inc
add
or
or
and
pop
add
add
inc
add
inc
inc
imul
cltd
orl
ror
rorb
and
adc
inc
dec
mov
and
push
add
bound
push
add
inc
sub
jbe
sub
inc
gs
and
test
dec
pusha
push
adc
rolb
adc
dec
and
mov
add
leave
and
add
add
or
adc
add
ret
rolb
and
cmpl
inc
cmp
inc
add
add
ret
add
adc
inc
push
inc
and
pop
and
add
add
sub
push
inc
shll
push
andb
inc
popa
and
andb
test
add
andb
inc
adcl
jo
or
and
xchg
mov
add
loopne
pop
add
adcb
add
push
xor
andb
mov
or
and
sbb
xor
inc
adc
mov
inc
and
rclb
inc
inc
test
add
add
push
push
ret
or
add
dec
roll
mov
pusha
push
push
data16
inc
add
bound
js
inc
insb
adcb
andb
add
rcll
xchg
add
add
add
and
lods
add
mov
or
add
loope
sub
rolb
and
movsb
add
add
sbb
inc
test
rolb
add
add
adc
loope
pusha
or
sub
rolb
pusha
xor
call
and
and
add
dec
cmpl
add
add
and
dec
ret
fmull
add
roll
js
inc
adc
mov
xchg
add
inc
or
mov
mov
inc
add
add
inc
or
addl
add
add
orb
and
add
or
mov
sub
inc
push
add
add
add
or
ret
add
and
addb
xor
add
addb
or
inc
add
nop
add
movsb
test
and
add
or
add
and
test
add
or
int3
or
push
jo
cltd
rcrb
adc
or
add
add
or
rol
add
sub
adc
sub
mov
rolb
push
and
add
bound
mov
xor
adc
and
xchg
add
and
push
and
inc
xchg
adc
mov
add
add
pop
sub
add
and
or
add
inc
adc
adc
adc
add
mov
and
mov
add
or
add
and
es
dec
add
sub
cmp
xchg
movsb
add
sbb
add
add
adcl
add
add
xor
adc
rorl
xchg
fwait
leave
sbb
push
or
inc
xor
add
add
or
add
xor
mov
or
and
xor
ret
push
inc
mov
test
inc
and
push
ret
add
addb
adc
or
out
insb
rolb
and
add
add
or
bound
and
adc
inc
sbbb
sub
inc
mov
inc
add
sub
or
and
inc
or
add
and
and
jo
or
nop
push
adc
or
add
inc
rcll
pusha
adcb
push
add
hlt
add
daa
and
inc
add
add
sarb
add
cmp
sub
pop
add
addb
test
add
xchg
add
addl
add
add
sbb
test
add
test
inc
adc
push
adc
xor
add
add
nop
test
add
and
and
sub
or
cltd
adc
adc
test
or
or
shrl
sbb
add
adc
add
roll
inc
cwtl
dec
adc
sub
pop
or
dec
add
cmpsb
add
add
add
nop
mov
movl
inc
or
push
inc
lcall
adc
add
andl
adc
adc
and
and
cmp
add
add
mov
inc
es
sbb
adc
add
add
addb
sub
test
dec
adc
je
adc
sbb
xchg
add
sbb
inc
add
add
push
inc
add
sub
add
adc
add
and
inc
adc
addb
mov
add
sbb
movsb
add
pusha
inc
and
add
add
and
dec
adc
adc
inc
or
jae
add
adc
lods
add
add
xor
add
inc
cwtl
cmp
add
inc
adc
inc
add
dec
or
xchg
mov
adc
rolb
inc
add
add
xchg
inc
and
sub
add
add
xchg
andb
adc
and
add
add
add
adc
add
arpl
push
cltd
sbb
sub
add
add
xor
and
adc
add
adc
add
nop
mov
dec
xor
adc
add
adc
rorb
adc
lock
insb
and
sbb
andb
orb
add
add
adc
nop
pop
dec
add
adc
dec
adc
adc
inc
add
ror
xchg
inc
inc
es
add
add
mov
add
add
adc
adc
push
and
and
loopne
adc
or
add
and
adc
mov
lds
add
add
adc
or
add
cwtl
add
popf
push
and
add
mov
or
and
and
adc
add
xor
or
inc
xchg
adc
add
inc
mov
adc
xchg
push
inc
mov
add
mov
mov
inc
add
or
inc
sbb
push
dec
push
add
or
inc
add
add
sbb
or
and
add
adc
cwtl
pusha
sub
add
add
adc
xor
pop
or
xchg
push
fisubl
add
movsb
mov
push
inc
cmp
xchg
xor
and
or
xor
add
data16
add
dec
mov
rorb
add
add
test
addb
add
and
adc
jb
dec
or
or
adcl
add
inc
sub
add
cmpl
push
add
or
inc
or
mov
cmp
add
or
add
add
inc
subl
addl
adc
dec
adc
inc
fs
inc
inc
test
sbb
add
pusha
inc
or
add
xor
adc
add
es
test
add
inc
sbb
inc
sbb
and
add
pop
jl
cmp
int3
xor
and
inc
orb
add
enter
andb
add
inc
ljmp
fsubs
or
and
inc
inc
jae
addb
adc
add
or
add
inc
add
addl
add
addl
or
add
mov
xchg
dec
js
pusha
add
add
inc
addb
push
inc
add
add
orb
and
push
add
adc
adc
xor
and
add
inc
add
add
add
add
andb
and
add
add
mov
inc
mov
and
test
or
add
dec
and
dec
lret
add
call
inc
and
push
jp
add
add
rorb
sbb
inc
sbb
sbb
test
add
addb
and
rorb
outsb
or
adc
add
or
or
aam
pop
add
mov
adc
orb
mov
addb
xchg
and
push
or
add
or
and
add
adc
or
jo
pop
add
cwtl
test
adc
inc
add
adc
adcb
call
push
or
adc
and
addb
xor
or
adc
add
or
aaa
add
xor
adc
shlb
add
add
inc
sub
mov
enter
and
jno
cmp
adc
or
inc
rclb
addl
or
or
mov
inc
inc
add
mov
mov
add
popf
inc
andb
adc
sbb
inc
push
mov
push
or
repnz
inc
add
test
and
or
or
add
add
xchg
and
inc
add
mov
dec
and
pop
add
nop
add
popa
sbb
add
add
mov
add
add
and
add
xor
adc
sub
xchg
add
or
adc
add
add
push
and
or
add
add
add
rcrb
sbb
adc
pusha
or
add
mov
imul
add
sub
adc
or
sbb
add
and
or
adc
push
or
cmp
inc
rolb
add
dec
adc
add
or
add
stos
add
inc
adc
sbb
inc
addb
xchg
orb
adc
adc
add
add
pop
addl
add
ret
add
and
adc
and
and
mov
lds
dec
adc
adc
test
add
and
cmp
inc
sahf
push
dec
add
add
add
inc
test
bound
push
inc
add
xor
addb
xchg
or
mov
rolb
add
sbb
adc
adcb
inc
and
adc
and
lsl
adc
or
andb
add
xorb
orl
adcb
sub
sahf
lock
movsl
rolb
shlb
dec
add
xor
xorb
sub
dec
xor
add
les
adc
adc
andl
and
inc
add
add
and
push
enter
rolb
fs
add
adc
and
adc
add
enter
mov
push
or
push
add
int3
add
inc
rorb
add
sbb
or
xchg
add
adc
pop
mov
pop
add
add
and
addb
mov
and
or
xor
add
push
test
add
add
adc
test
add
rolb
sub
push
and
sub
adc
adc
lret
pop
adc
pop
popa
adc
and
inc
add
dec
rolb
xor
test
xor
add
add
add
int
faddl
adc
adc
push
inc
sbbl
add
add
xchg
xor
movsb
inc
orb
add
or
inc
add
add
add
or
dec
adc
sbb
xchg
loopne
mov
add
add
and
xor
and
adc
inc
test
mov
push
cmp
and
add
int
cmpsb
add
inc
sub
addl
sbb
and
sbb
adc
loope
or
add
mov
and
adc
dec
add
and
and
adc
pop
or
lock
add
push
or
add
and
addb
sbb
and
les
mov
and
cmpl
add
and
les
shll
add
add
test
and
add
rolb
sub
xor
sub
pop
inc
leave
addl
adc
push
push
or
and
add
test
inc
mov
and
inc
mov
adc
mov
or
add
and
add
orb
adc
pop
sbb
or
add
add
adc
adc
add
pushf
add
xor
add
mov
pusha
test
es
rcrl
or
add
movl
adc
setl
add
pop
add
add
test
xor
xchg
add
test
loopne
sbb
adc
mov
and
xchg
xchg
adc
add
inc
bound
xor
mov
push
nop
and
inc
sub
add
inc
add
push
cltd
or
add
inc
add
add
inc
adc
or
xchg
add
adc
add
sub
sub
rolb
add
addb
test
roll
data16
sub
adc
push
push
add
addb
inc
inc
mov
add
inc
test
xor
xor
je
inc
push
adc
add
inc
inc
enter
push
andb
lds
and
add
es
addl
adc
movsb
cmp
adc
adc
add
addb
enter
popa
lea
or
inc
xchg
adc
add
and
and
mov
inc
adc
sbb
adc
sbb
mov
adcl
add
add
mov
and
add
add
adc
push
loop
sbb
pusha
mov
and
or
or
addl
add
adc
andb
add
xchg
inc
adc
addb
add
adcl
adc
dec
mov
add
sub
xor
inc
sub
or
lds
adc
add
movsb
dec
dec
and
add
adcl
add
and
add
add
xchg
mov
inc
cmp
add
add
and
push
dec
movb
test
leave
add
or
adc
or
or
push
or
adc
rorl
mov
and
or
adc
addl
or
and
push
xorl
inc
rolb
add
add
adcl
and
les
mov
orb
adc
int
sbb
inc
add
int3
and
loopne
ret
and
nop
xor
cmp
or
mov
subl
add
lods
and
sub
xor
sub
shlb
xor
test
add
nop
pop
mov
or
sbb
add
sbb
inc
adc
sbb
sbb
mov
mov
sbb
xchg
sbb
xchg
push
mov
xchg
inc
pop
add
add
add
inc
inc
adc
add
cmpb
add
add
and
add
inc
and
test
adc
or
add
bound
leave
push
mov
fs
and
jb
pop
leave
add
adc
add
adc
add
add
and
inc
mov
or
add
add
add
subb
mov
and
call
push
add
mov
addb
mov
push
pusha
add
inc
xchg
orb
inc
add
push
sub
fsts
push
add
mov
add
push
add
test
sub
add
add
bound
add
mov
or
andb
push
nop
adc
xor
add
sbb
and
cmp
add
adc
and
add
adc
jecxz
xor
add
adc
xchg
push
cmp
adcb
and
add
inc
add
addb
inc
enter
mov
adc
add
sub
sub
add
add
test
mov
xchg
pop
push
or
inc
adc
jo
inc
adcl
xchg
add
inc
lock
or
add
add
add
push
push
sbb
adc
adc
bound
and
jo
pop
xchg
add
add
add
or
dec
cmp
and
add
or
test
addb
inc
add
xor
sbb
mov
inc
pop
add
inc
popf
inc
pop
lea
inc
adc
push
or
pop
addl
or
dec
add
add
enter
add
mov
bound
inc
or
rolb
rolb
add
and
bound
mov
add
leave
inc
or
in
or
mov
addl
adc
test
add
add
add
add
add
and
adc
add
movsb
sub
push
add
rolb
add
and
fcoms
inc
xor
cltd
nop
add
addb
and
addb
shlb
add
mov
add
add
inc
pop
add
add
or
or
inc
and
xorb
adc
or
adc
xchg
and
inc
adc
addl
dec
adc
adc
enter
and
inc
adc
mov
add
and
rolb
nop
inc
and
adc
add
adc
addl
xor
inc
add
push
sub
add
adc
inc
xchg
inc
rclb
pusha
enter
push
adc
xchg
inc
les
add
dec
add
add
inc
imul
or
mov
nop
push
add
add
push
or
dec
and
addb
rolb
add
and
add
inc
xchg
adc
cwtl
inc
add
add
push
add
es
and
adc
and
add
lret
addb
and
add
pusha
or
add
and
add
and
adc
add
add
or
sbb
add
test
inc
sbb
addl
adc
jae
add
xor
movsb
inc
or
add
add
add
mov
add
inc
test
addb
add
leave
add
push
adc
sbb
add
add
add
pop
sbb
mov
sub
and
pop
shl
xor
or
and
add
add
sub
and
pop
dec
and
orl
add
add
test
js
inc
or
add
add
add
add
push
sbb
push
push
xor
add
leave
add
sub
xor
pusha
pusha
push
or
or
enter
push
and
add
add
add
jno
xor
dec
lds
and
pushf
push
nop
and
or
inc
push
add
add
sub
add
xchg
inc
pusha
jno
and
lret
and
add
sub
and
inc
bound
js
add
sub
add
add
rolb
dec
and
push
and
inc
dec
add
push
inc
inc
cwtl
add
add
xchg
push
inc
add
add
movsb
add
add
or
add
dec
add
adc
insb
orb
push
subb
xor
inc
inc
push
inc
add
add
addb
add
call
add
addl
add
add
xchg
adc
add
adc
or
outsb
dec
sbb
push
sbb
add
mov
dec
or
andl
mov
loopne
xor
mov
addb
sub
dec
add
add
add
adc
nop
adc
adcb
adc
cs
and
xorb
add
inc
add
orb
inc
and
addb
roll
and
dec
clc
loopne
les
add
aam
sbb
xor
add
add
popa
inc
add
or
add
and
dec
add
push
push
add
add
lock
pop
rolb
xor
or
add
daa
xor
adc
inc
xor
pushf
aam
addb
and
lea
push
and
sub
sub
sub
add
or
add
or
addb
test
add
nop
add
jo
add
dec
push
inc
test
jo
push
inc
add
add
and
adcb
and
addl
mov
push
les
mov
add
inc
inc
push
pop
addb
mov
xor
rclb
add
xchg
test
or
pop
and
add
dec
inc
adc
add
adcb
and
mov
push
andl
xor
xor
and
test
mov
add
and
push
xchg
add
test
add
inc
inc
push
add
test
nop
sub
xor
sub
inc
inc
xor
add
and
mov
test
test
or
cltd
rcl
sub
adc
inc
push
and
push
dec
push
and
adc
add
add
sbb
inc
push
add
sub
and
and
add
and
inc
jo
and
or
add
push
add
add
add
adc
loop
mov
add
push
or
dec
add
and
addb
addb
or
test
sbb
add
popf
add
adc
sub
push
movsl
mov
adcl
adc
add
rorl
dec
push
or
dec
rolb
and
adc
xor
addb
sbb
addb
pusha
inc
add
dec
dec
and
inc
inc
inc
adc
add
inc
add
add
inc
addb
and
test
add
add
js
cmp
enter
add
or
and
js
shlb
fwait
jo
inc
adc
nop
inc
mov
sbb
sub
or
add
xor
mov
or
xchg
adc
add
or
and
adc
cmp
add
push
add
add
push
and
and
add
data16
add
rol
lea
and
add
inc
adc
adc
adc
or
add
sbb
addb
and
inc
adc
fs
cwtl
and
jno
add
addb
sbb
add
and
adc
cwtl
shlb
adc
adc
dec
test
or
and
les
inc
add
mov
and
cmp
add
dec
or
pusha
mov
add
sbb
enter
xchg
or
or
adc
rcrb
add
adc
and
inc
adc
sub
and
and
or
add
rorb
nop
add
add
add
dec
adc
add
and
adc
push
add
cli
or
hlt
adc
pusha
inc
xor
nop
mov
mov
and
mov
adc
xchg
add
push
pusha
add
push
andl
add
and
andb
rorl
and
daa
add
movsb
adc
sub
sub
inc
add
push
add
sub
adc
gs
push
add
add
and
or
ret
add
mov
and
push
popa
test
loop
test
add
add
cwtl
dec
sbb
add
adc
inc
adc
or
addb
add
add
inc
ret
adc
add
adc
sbb
rclb
and
adc
test
add
and
mov
add
or
add
adc
add
add
inc
mov
dec
xchg
cmp
roll
addb
mov
add
test
add
adc
dec
add
dec
add
ret
stos
inc
mov
inc
adc
adc
and
xchg
or
adc
adc
and
add
xor
add
add
and
add
mov
add
add
sbb
inc
or
and
add
add
push
jp
mov
je
adc
loopne
or
addb
add
or
push
and
add
mov
inc
add
add
andl
adc
add
push
movsb
and
inc
ret
mov
popa
xchg
inc
adc
inc
pusha
stos
add
add
add
js
add
cmpb
adc
or
push
daa
adc
mov
add
nop
add
and
push
add
orl
push
add
and
pusha
dec
addl
adc
adc
inc
cwtl
push
inc
rclb
fs
mov
ret
adc
add
pusha
add
add
rolb
and
adc
inc
push
or
out
xor
and
adc
addl
nop
or
add
lea
add
mov
xor
mov
xorl
add
call
add
addl
add
add
mov
add
push
add
adc
adc
adc
roll
dec
mov
adc
push
or
rorl
mov
xchg
js
inc
lcall
xorl
adc
das
or
add
dec
add
or
and
sbb
and
orb
test
xchg
and
add
and
sbb
inc
inc
and
add
xchg
rorl
adc
enter
sub
add
adc
add
pusha
fs
dec
inc
add
cmp
push
or
and
adc
xor
je
nop
sub
mov
add
sbb
and
adc
add
and
sbb
inc
sub
add
add
or
cmp
sbb
sub
cwtl
add
push
ret
xor
push
nop
inc
les
push
add
add
inc
add
inc
add
add
inc
inc
push
pusha
add
adc
or
inc
or
icebp
ret
push
andb
pusha
or
orb
jne
or
inc
sub
pop
add
mov
and
test
add
dec
sarb
andb
mov
add
inc
sub
xchg
add
add
mov
pushf
adc
pusha
pusha
xor
adc
xchg
addb
sbbl
sbb
test
addl
inc
adc
add
jmp
add
add
jbe
add
push
or
mov
and
add
or
adc
rclb
mov
add
rolb
and
les
xchg
les
ret
push
adc
add
pop
loop
inc
rorl
dec
dec
subb
inc
add
push
add
pop
push
inc
push
push
movsb
inc
add
or
mov
xchg
add
xor
cmp
test
or
and
inc
add
push
bound
dec
or
pop
push
mov
inc
mov
sub
add
cwtl
dec
inc
dec
bound
inc
xor
push
xchg
xor
test
inc
inc
adc
add
lock
xor
add
add
int3
adc
inc
or
inc
and
or
sub
add
add
and
add
dec
sub
add
add
cmp
adc
adcb
or
add
loop
addb
adc
andb
inc
and
and
add
or
add
inc
sbb
mov
push
sbb
adc
xchg
les
inc
add
add
or
and
test
inc
enter
and
adc
or
dec
and
test
or
sub
adc
jmp
shlb
push
and
stos
add
or
push
or
dec
mov
add
data16
jae
fiaddl
adc
inc
and
cs
inc
add
add
and
add
or
add
or
mov
sub
mov
xchg
and
adcb
and
sbb
pushf
add
add
and
mov
and
adc
mov
xchg
and
cmp
xchg
add
enter
test
dec
or
inc
test
add
or
adc
and
and
sub
add
mov
adcb
adc
or
add
add
pop
sbb
je
push
xor
add
or
add
test
inc
cmp
add
add
add
dec
adc
xchg
ret
lea
add
add
cmp
adc
adc
adc
xchg
xor
push
or
push
and
inc
adc
inc
adc
ret
inc
add
and
test
adc
add
addb
and
add
adc
inc
inc
adcl
call
add
mov
leave
add
addl
add
xchg
add
add
and
adc
lret
and
or
adcl
andl
or
and
cmpsb
inc
mov
addb
and
addb
or
or
inc
inc
adc
add
and
pusha
add
xor
mov
test
and
adc
push
or
das
pop
add
fadds
add
cwtl
and
and
inc
sbbb
sbb
add
sub
call
add
mov
inc
sbb
pop
sub
test
add
add
add
enter
push
adc
adc
add
xor
add
testl
mov
pusha
add
arpl
shlb
and
pop
mov
xorb
mov
adc
add
and
add
enter
add
mov
sbb
rolb
dec
inc
xor
andb
or
and
sbb
or
sub
adc
add
xor
dec
and
add
mov
ret
add
or
cmp
adc
test
or
insb
mov
inc
and
mov
inc
inc
add
adc
and
inc
pop
add
adc
inc
and
inc
cmp
add
add
inc
add
mov
add
andl
push
or
pop
adc
or
roll
test
pusha
inc
nop
pop
add
mov
or
add
aaa
cmpsb
mov
inc
add
inc
add
mov
xchg
add
adc
and
mov
adc
or
add
inc
xor
shlb
push
andb
add
push
xor
add
rolb
or
add
add
enter
jo
add
or
add
push
add
add
mov
add
sbb
xor
add
inc
add
sub
add
test
add
jae
addl
inc
or
sub
sub
inc
add
orb
addl
add
nop
xor
add
orb
adc
push
xchg
mov
stos
adc
add
add
adc
push
or
push
add
test
rcrb
xor
add
test
add
or
addl
push
rorb
add
and
in
add
mov
push
add
nop
dec
sbb
adcl
add
inc
adc
enter
push
addb
add
or
nop
or
and
subl
inc
xor
adc
add
or
and
mov
inc
add
addb
mov
inc
push
adc
and
stc
adc
lcall
orb
add
sbb
xor
movsb
adc
or
or
mov
add
push
add
or
adc
add
add
mov
test
adc
add
adc
add
and
xor
and
inc
add
push
or
inc
ret
or
add
mov
inc
adcb
adc
inc
sbb
and
out
and
add
mov
sbb
pop
lods
pusha
test
pop
sub
adc
add
or
or
inc
enter
add
push
or
add
in
cwtl
add
or
jo
aam
add
inc
inc
and
mov
sbb
test
pusha
adc
add
xor
add
push
or
adc
push
data16
or
and
add
and
add
add
add
mov
adc
js
xor
adc
mov
add
inc
and
andb
inc
push
xchg
push
add
adc
dec
inc
mov
add
push
mov
add
inc
add
addl
inc
or
hlt
add
push
add
addb
mov
adcb
pusha
daa
add
orb
ret
test
add
or
and
push
pusha
dec
or
push
inc
addb
and
xor
test
xor
and
pop
adc
inc
sub
inc
add
xor
push
loopne
mov
adcb
and
add
test
sbb
call
sub
add
and
add
add
push
inc
or
add
adc
and
adc
add
addb
pop
add
pop
mov
and
add
push
adc
mov
or
add
adc
or
add
and
dec
in
inc
add
pusha
aad
adc
or
or
pusha
nop
add
add
add
cwtl
mov
and
lds
add
add
adc
rol
inc
sbb
sbb
mov
xor
xor
add
inc
or
bound
mulb
jo
dec
inc
inc
add
addb
add
push
pusha
add
add
add
xor
add
addb
add
xor
sub
movsl
or
add
inc
inc
sub
xor
add
add
or
add
add
mov
inc
orb
inc
xor
xor
stc
movsl
add
cmp
add
add
pusha
push
sub
inc
les
xor
add
cmp
call
cmp
test
mov
add
sub
jb
add
inc
add
sbb
addb
add
push
sbb
sbbl
or
andl
lret
mov
inc
or
or
adc
add
add
enter
add
inc
add
inc
nop
mov
nop
or
push
adc
or
inc
add
test
add
push
and
addl
mov
inc
inc
bound
add
add
add
addb
mov
add
sbb
add
and
adc
adc
sub
inc
add
add
mov
addr16
inc
test
xchg
movsb
add
and
or
add
and
orb
mov
adc
add
add
leave
inc
sub
roll
adc
add
and
popa
js
add
add
mov
or
adc
pusha
adcb
test
push
test
add
nop
inc
or
or
add
xchg
mov
xor
enter
sub
and
mov
add
sub
add
xchg
sub
pop
inc
movsb
ss
dec
mov
add
andb
pop
add
dec
leave
add
add
andl
inc
add
sub
add
add
mov
and
icebp
and
andb
add
add
fsubl
push
lcall
nop
push
pop
push
push
inc
add
addl
inc
scas
add
or
dec
add
push
add
xorl
add
adc
daa
and
push
add
inc
pusha
mov
add
xor
inc
mov
inc
xor
add
or
and
inc
clc
nop
push
add
and
add
xor
loopne
add
sarl
addl
mov
mov
shlb
add
orb
add
adc
add
xor
shlb
adc
dec
and
add
inc
pop
add
mov
adc
and
dec
lock
push
add
aam
sub
and
add
roll
xchg
roll
movsb
adc
pusha
addb
and
add
cmpsl
and
or
or
inc
xor
addb
adc
addb
adc
xor
sahf
add
or
pusha
xchg
icebp
or
add
or
inc
adc
jo
adc
aam
add
sub
or
mov
xor
lods
inc
adc
add
or
add
add
adc
inc
xor
inc
add
add
push
and
inc
or
dec
inc
and
addb
popf
add
test
adc
test
add
xor
adc
and
mov
mov
add
icebp
or
ret
or
push
orl
sub
mov
inc
nop
addb
mov
add
add
add
and
mov
add
sbb
dec
and
add
and
popa
push
and
adc
and
add
adc
xor
add
or
subb
and
add
or
test
add
add
pusha
cwtl
add
sub
push
pop
movsb
dec
add
add
push
addl
add
shlb
pop
add
xchg
add
add
addl
push
or
call
xchg
inc
jo
cmp
mov
dec
xor
movsb
add
mov
dec
add
push
dec
pop
and
nop
popa
jno
ret
and
and
sbb
push
and
add
add
dec
add
xor
call
data16
pop
mov
adc
add
test
xchg
xchg
add
adc
test
push
addb
add
and
pusha
add
cmp
add
add
inc
rolb
mov
enter
test
test
xchg
inc
sub
add
add
and
adc
inc
add
inc
mov
xchg
add
add
addl
and
pusha
and
add
and
rolb
mov
pusha
add
or
push
inc
lea
adc
add
inc
sbb
inc
mov
push
xorb
test
test
add
add
nop
push
test
inc
nop
push
mov
xor
add
and
inc
adc
add
pushf
inc
adc
add
or
je
or
add
or
adc
test
sub
add
add
adc
and
mov
fcmove
adc
leave
es
inc
add
dec
ret
add
adc
adc
or
addb
xchg
mov
adc
nop
adc
sbb
add
add
add
add
or
or
sbb
or
pushf
addb
int
add
inc
add
pusha
nop
cmp
and
or
and
add
inc
dec
inc
add
addb
add
and
mov
repnz
add
orb
sub
sub
add
or
add
dec
add
add
mov
sbb
addl
cmp
adc
dec
and
or
add
inc
add
add
addl
inc
enter
call
rorb
test
rolb
and
dec
or
add
test
and
xor
insb
inc
add
xchg
sub
addb
sub
or
add
inc
mov
add
and
dec
push
xchg
add
nop
data16
pop
or
add
jbe
popa
addb
inc
sub
push
and
add
add
mov
inc
add
adc
inc
addl
inc
sub
roll
and
add
nop
ljmp
add
or
add
add
add
adc
adc
or
or
dec
and
or
add
inc
shlb
inc
add
add
sub
add
inc
andb
add
add
xor
add
and
sbb
sbb
inc
adc
push
or
sbb
inc
inc
adc
add
add
popa
add
adc
nop
loop
inc
add
and
and
and
rolb
or
add
add
add
inc
add
inc
and
inc
rorl
inc
or
add
adc
and
add
inc
xor
add
and
adc
add
inc
xor
add
inc
adcb
sub
add
xchg
or
add
popa
and
andb
or
cltd
push
add
add
pusha
push
dec
addb
inc
xchg
addb
add
or
add
add
add
orl
pop
les
adc
addb
push
inc
add
and
hlt
add
adcb
test
add
mov
es
add
adc
dec
add
orb
or
add
add
mov
sbb
and
add
adc
add
dec
loopne
add
add
or
add
add
enter
inc
add
addb
push
or
sbbb
add
and
add
add
add
add
add
adc
add
mov
inc
adc
push
or
add
add
add
add
and
add
pushf
les
adc
add
add
and
inc
inc
addb
andb
xchg
add
sub
and
add
add
add
add
add
add
add
adc
push
call
add
add
addb
sbb
inc
add
or
push
or
add
adc
jl
push
or
add
pusha
xchg
adc
add
add
mov
or
add
add
sbb
add
add
and
adc
pusha
add
inc
add
lock
and
or
adc
sub
xchg
add
and
rolb
add
or
add
xor
roll
addb
add
ret
add
and
add
add
push
add
add
test
adc
or
and
addb
and
add
add
add
inc
addb
inc
add
add
push
mov
or
adc
add
adc
inc
enter
add
add
add
and
inc
add
inc
or
add
orb
inc
add
or
inc
pop
popa
or
inc
add
and
add
add
inc
sub
and
adcb
add
sub
in
dec
addb
or
add
addb
mov
add
xchg
and
and
add
or
sbb
dec
orb
add
inc
or
add
add
sub
dec
add
xchg
add
inc
movsl
add
mov
inc
inc
add
adcb
mov
inc
add
or
inc
pusha
inc
and
or
add
mov
add
and
and
or
addb
add
push
add
add
inc
push
add
adc
add
adc
add
add
or
add
inc
push
or
push
adc
add
adc
add
mov
adc
or
or
add
outsl
add
add
ja
add
mov
and
loope
les
add
dec
add
and
add
add
add
and
imul
les
adc
add
bound
adc
adc
add
add
adc
add
roll
pusha
push
mov
and
inc
add
add
or
or
add
add
add
push
mov
add
add
mov
push
adc
push
andb
add
inc
or
add
add
inc
add
and
and
inc
add
or
mov
test
adc
add
xor
dec
and
and
add
add
add
adc
inc
add
add
inc
xor
add
inc
daa
add
add
or
add
mov
sub
add
or
aaa
adc
adc
or
les
or
or
add
dec
mov
int
cmpb
inc
adc
mov
add
and
add
add
adc
add
or
xor
rolb
inc
add
add
adc
mov
sbb
add
add
add
addb
add
jo
addb
add
inc
inc
adcb
and
inc
faddl
add
adc
and
add
adc
addr16
inc
addl
or
sbb
add
addb
add
add
push
insb
or
sub
add
inc
add
mov
or
add
add
add
addb
inc
adc
inc
cmp
inc
and
add
xchg
cmp
add
add
dec
adc
add
add
loop
dec
add
add
add
add
orb
add
push
andl
pusha
add
dec
inc
adc
loopne
mov
add
addb
adc
inc
inc
or
push
inc
pusha
mov
sbbb
add
inc
add
add
add
add
insb
je
add
add
push
and
add
add
rolb
add
sbb
test
xor
add
add
inc
add
or
xchg
sub
rol
adc
adc
and
addb
inc
inc
adc
ret
add
inc
add
inc
aam
push
adc
inc
and
pop
push
dec
push
adc
jo
add
or
add
add
inc
addb
push
inc
add
adc
and
add
add
add
add
add
adc
add
add
inc
or
inc
adc
add
or
leave
test
add
add
push
add
add
add
addb
dec
push
push
add
loop
dec
outsl
dec
and
lea
add
and
mov
adc
add
sub
add
add
add
inc
add
add
mov
mov
add
shlb
add
popa
add
mov
add
and
rorb
nop
add
and
adc
int3
add
xor
add
add
adc
add
add
add
loopne
add
rclb
add
add
add
push
sub
inc
and
add
add
push
add
adc
add
add
sub
or
incb
add
add
add
ret
add
cmp
icebp
popa
add
and
xor
add
es
inc
sub
add
addl
jo
pop
add
add
inc
inc
xor
add
adc
je
inc
adc
add
add
add
testb
add
inc
and
add
inc
mov
add
or
andb
add
add
add
xor
add
addb
or
add
add
addb
or
lea
inc
add
inc
add
pusha
add
add
add
orb
add
add
inc
push
add
add
xor
add
test
mov
and
add
push
adc
adc
xor
inc
addb
add
or
push
test
addl
popa
add
add
inc
adcb
add
and
roll
add
loope
inc
adc
add
and
push
xor
push
and
addb
push
inc
add
adc
adc
push
add
adc
loopne
orl
add
test
inc
add
inc
add
jp
xchg
mov
add
adc
add
push
in
add
addb
add
sbb
adc
mov
xorb
add
add
or
xor
sub
enter
add
and
sub
add
mov
add
addb
and
pusha
inc
add
inc
adc
add
loopne
je
nop
adc
add
addb
and
add
add
rorl
inc
add
or
add
dec
add
add
add
and
and
add
pop
mov
add
add
andb
add
inc
add
adc
or
add
mov
orb
add
and
cwtl
inc
adc
and
add
dec
push
add
and
push
addl
add
add
add
sub
add
or
add
leave
pop
nop
sbb
mov
inc
nop
add
add
add
sbb
add
orl
add
and
addl
es
and
add
and
push
nop
adc
add
inc
inc
add
addb
and
addb
add
inc
js
add
nop
and
addb
add
pop
add
test
and
xchg
inc
xor
pop
or
add
add
add
add
loope
push
movsb
add
add
inc
add
and
addb
leave
andb
dec
add
mov
xor
or
mov
push
push
inc
add
mov
add
loopne
xor
adc
inc
pusha
add
mov
or
add
add
add
add
add
xchg
and
inc
inc
popa
xor
adc
add
inc
and
add
add
adc
sbb
inc
and
pusha
or
xorb
add
pusha
add
addb
or
add
add
or
adc
xchg
adc
add
or
push
addl
je
adc
inc
addb
add
add
and
mov
add
or
add
adc
add
add
add
in
test
dec
add
adc
add
add
inc
add
and
adc
sbb
adc
je
pop
inc
add
mov
and
addl
mov
inc
add
mov
inc
add
xor
push
add
dec
inc
add
or
shl
and
add
add
add
add
shll
add
add
andb
pusha
mov
adc
add
add
es
sub
add
add
or
add
mov
rolb
inc
xorb
add
or
inc
adcb
adc
add
add
adcb
add
or
or
add
pusha
inc
xchg
sub
add
and
add
add
test
mov
sarl
pop
add
inc
add
add
or
or
lock
addb
and
mov
add
add
mov
adc
and
addb
xchg
fsubs
and
or
inc
sub
push
add
push
add
add
add
mov
adc
add
xor
out
mov
imul
add
xor
popf
add
je
add
test
xor
inc
int3
mov
and
cltd
dec
adcb
push
add
jo
adc
dec
or
or
adc
addl
mov
xchg
or
sbb
mov
add
xchg
adc
bound
and
or
add
add
orl
mov
add
add
dec
test
add
jmp
adc
das
xchg
and
or
adc
add
addb
inc
sub
andb
call
cmpsb
add
add
pop
adc
xor
add
and
and
add
and
mov
adc
add
add
fadd
addb
add
inc
pusha
and
shlb
xor
add
or
mov
sub
or
inc
mov
add
inc
andb
add
add
adc
dec
add
and
add
add
add
adc
add
addb
add
addb
lds
test
add
add
pusha
test
and
or
nop
rolb
inc
add
and
adc
add
sbbl
add
add
addl
movsb
nop
sub
adc
adc
push
arpl
inc
or
add
inc
add
add
add
add
pop
add
inc
sub
inc
mov
add
test
push
add
rclb
add
xchg
or
loop
add
adc
sbb
inc
add
push
addl
dec
add
and
inc
addb
popa
xor
add
add
add
add
addb
inc
popa
add
addl
add
sbb
orb
andb
push
cmpsl
or
or
adc
or
add
add
lret
or
and
add
add
sub
add
add
data16
add
or
add
xor
adcl
and
add
add
and
and
inc
and
andl
add
add
add
enter
sub
add
or
adc
xorl
mov
addb
addb
add
add
add
inc
adc
addb
add
add
adc
adc
and
xor
inc
or
inc
test
add
or
add
sub
xchg
addb
pop
add
add
shrb
add
inc
or
inc
and
push
adc
and
add
adc
add
rolb
add
add
sbb
or
inc
and
push
add
add
add
adcl
add
inc
and
ret
add
orb
add
add
lock
and
add
inc
add
add
andb
or
and
add
add
inc
add
adc
addb
add
sbb
add
inc
adc
sub
add
pusha
mov
add
add
add
add
inc
lods
add
add
xchg
and
fcoml
cmovo
add
add
add
add
addl
inc
add
add
add
and
sbb
and
mov
add
add
mov
add
pop
nop
add
add
add
inc
add
add
dec
sub
movsb
add
adc
or
mov
pusha
bound
xchg
and
add
and
cwtl
addb
add
add
push
inc
add
and
or
jns
add
add
add
add
add
push
andb
push
or
adc
add
and
test
or
add
or
orb
add
dec
inc
add
add
and
and
add
adc
sbbb
add
and
sub
add
add
add
mov
mov
addb
add
add
or
and
add
and
add
lds
push
popa
push
addl
adc
and
add
xor
or
add
inc
popa
add
add
xor
add
inc
add
adc
inc
push
push
pop
add
add
add
push
add
and
addb
test
add
or
adc
or
ret
dec
add
and
add
addl
sbb
addb
add
add
xor
and
or
adc
mov
add
inc
xor
add
inc
add
add
add
push
cmp
adcb
add
inc
mov
cmp
add
and
xchg
add
sub
dec
add
rol
andb
adc
xor
inc
and
adc
add
add
and
add
add
add
add
ret
add
andl
add
add
sbb
jle
cmpsl
cmpsb
mov
mov
push
xchg
mov
jl
insb
in
std
mov
jecxz
inc
and
cmp
movsl
out
ret
xor
adc
cmpsb
xor
or
in
popl
adc
jo
jno,pn
incl
pusha
mov
fwait
mov
push
inc
pop
ret
test
pop
mov
outsl
pop
movsb
sarl
mov
movsl
test
das
ss
sub
iret
call
sbb
sbb
hlt
arpl
xor
dec
repz
mov
movsb
cmpsb
mov
mov
push
xor
inc
and
fsubl
xor
inc
add
ss
in
mov
inc
fs
lds
dec
mov
fsubl
xor
loope
xor
inc
scas
loope
mov
fwait
sbb
sbb
pusha
or
sbb
sbb
out
or
inc
or
xor
rcrl
mov
pop
addr16
dec
cmp
imul
jae
jmp
nop
mov
cmpsb
xor
pusha
jmp
andb
xor
leave
repnz
xor
sbb
sbb
or
inc
repz
imul
frstor
jo
je
sti
inc
adc
pushf
out
push
xorl
and
jecxz
cmpsb
xor
les
and
xor
jnp
mov
inc
and
cmp
xorl
and
shl
out
dec
and
mov
cmpsb
xor
sbbb
in
mov
mov
xor
das
mov
clc
outsb
add
popf
adc
inc
jnp
jo
mov
or
or
mov
inc
and
jno
std
es
xor
inc
and
loopne
dec
test
jle
jg
movsl
test
sbb
or
jle
andl
sub
add
pusha
mov
cmpsl
mov
iret
adcb
inc
and
hlt
sub
sti
inc
out
stos
mov
push
jle
lock
and
bswap
and
cwtl
pop
push
mov
lods
sub
les
test
pop
in
std
pop
sbb
inc
imul
or
inc
jnp
ss
arpl
shl
inc
mov
popa
cmc
shl
mov
cmc
outsl
or
dec
jne
and
outsl
xor
sub
xor
ds
aaa
mov
cmpsb
mov
mov
sahf
inc
push
dec
cmpsb
xor
or
sarl
inc
scas
adc
and
adc
fwait
shlb
cmp
push
sar
pop
xchg
in
mov
xor
lds
cld
inc
movsl
stos
jne
popa
add
pop
vpavgb
xor
sub
push
stos
pop
xor
sub
popf
dec
in
rcll
cmpsb
xor
rcrb
cmpsb
mov
mov
adc
pop
xchg
sbb
sbb
repz
outsl
and
xchg
xor
test
pusha
or
mov
mov
cmpl
cmpsb
sub
add
mov
mov
mov
es
subb
dec
mov
scas
fdivs
mov
loope
dec
and
mov
mov
mov
pushf
cs
cmpsb
xor
insb
sbbb
sbb
mov
jl
mov
mov
orl
es
sbbb
dec
js
xchg
test
jecxz
lds
es
mov
xchg
inc
imul
xor
data16
lds
jp
or
cmpsb
xor
cmpsb
loope
repz
and
sub
ja
xchg
test
jecxz
lds
es
mov
mov
sub
and
mov
daa
add
loope
cmp
jg
fisttpll
xchg
inc
jns
xor
push
lahf
push
or
mov
fs
dec
inc
test
sub
add
and
add
pop
sti
ss
mov
xchg
and
fs
push
inc
sbb
ret
mov
mov
and
mov
pop
sbb
or
testl
inc
and
popa
cmpsb
cli
dec
mov
cmpsb
cli
int
inc
aaa
inc
das
loopne
andl
out
in
cmpsb
mov
mov
mov
sti
shl
js
js
das
mov
push
cmpsb
fsubrl
shll
inc
jnp
popf
mov
fwait
inc
sbb
add
addr16
and
mov
dec
cmp
and
xchg
inc
jnp
push
xchg
rcrl
xor
int
shlb
mov
frstor
mov
je
or
add
je
inc
movb
call
push
in
xchg
add
cmpsb
xor
xchg
push
inc
pop
xor
outsl
scas
repz
dec
adc
ds
es
add
cmpsb
xor
lds
sbb
shrl
cmpsb
xor
mov
xor
dec
lahf
xorl
xor
sbbb
and
jle
mov
sbb
dec
jg
jo
lods
and
inc
jb
shlb
adc
cmp
cmpsb
movsl
or
cmpsb
xor
mov
mov
jno
adc
imul
loopne
or
movsb
add
and
and
jge
xchg
stos
xor
inc
xchg
fmuls
int3
mov
mov
mov
and
adc
jle
out
cmpb
in
rcll
add
jae
jbe
add
std
xchg
and
scas
xorl
jmp
jl
jp
sbb
mov
xchg
test
xchg
test
and
inc
mov
xor
aad
test
jne
inc
jle
cmpsl
cld
mov
xchg
xor
fwait
jb
xchg
jno
lea
inc
add
push
mov
gs
mov
lods
mov
sub
mov
adc
aas
popf
mov
jne
dec
subl
or
mov
repz
test
or
mov
lds
jnp
sub
inc
mov
adc
add
jl
push
mov
das
das
xchg
insb
inc
adc
adc
jae
and
daa
xchg
add
mov
cmpb
stos
xchg
in
arpl
mov
push
icebp
popf
mov
ljmp
dec
stos
inc
xor
pushf
sahf
add
loop
and
jle
clc
push
xchg
push
or
ds
adc
mov
lahf
bound
cmpsb
or
pop
out
dec
stc
xchg
loope
fidivrl
and
es
adc
adcb
mov
das
nop
pop
popa
adc
in
and
add
push
inc
out
mov
inc
roll
movsb
in
or
cmp
and
sbb
rclb
popa
movsb
xor
sbb
mov
notl
repnz
shll
int
into
or
fmulp
cwtl
sub
mov
addr16
sbb
pop
and
cmpsl
cmp
inc
mov
push
and
adc
daa
mov
es
dec
pop
clc
sbb
ficomps
jbe
in
pop
push
es
and
jmp
or
inc
js
sub
mov
and
negb
cmpsb
xchg
outsb
mov
mov
and
stos
je
lahf
mov
cmp
jne
add
inc
xor
adc
es
iret
xchg
orl
xor
lods
and
cmp
adc
dec
and
pop
into
sbb
inc
shll
jb
inc
mov
sub
aam
mov
ret
push
mov
push
inc
pop
xor
mov
aad
xlat
rcr
inc
and
pop
or
pusha
ds
daa
in
fcom
inc
jbe
jl
or
mov
cmpsb
mov
aam
inc
mov
ret
sub
cmpb
jp
mov
mov
xchg
xor
pop
test
std
inc
xchg
lods
pop
repnz
dec
and
cmp
lock
and
pop
sub
cmpsl
dec
mov
xchg
out
pop
xchg
sub
inc
dec
lahf
stos
bound
cmp
cmpsl
inc
mov
cmpsb
push
adc
and
pop
xchg
or
jp
dec
daa
out
es
mov
cmp
shll
movzbl
mov
mov
cmp
inc
loopne
aad
sub
jbe
cltd
add
and
movsb
call
jae
inc
hlt
pop
pop
push
mov
gs
in
dec
xor
inc
cld
aas
stos
mov
xor
sbb
push
movsl
xchg
imul
mov
out
inc
mov
rcrl
push
icebp
add
ss
xor
mov
shll
mov
out
rorl
notb
fwait
push
stc
xchg
pushf
jl
mov
test
mov
stos
inc
test
insl
mov
adc
rcll
out
push
and
dec
cmp
cmpsb
stos
adc
sub
out
rcr
mov
sbb
jp
mov
cmpsb
icebp
push
lods
add
cmpsb
xlat
shrl
xchg
lock
and
pop
add
fistps
mov
shrb
leave
fldt
lret
lahf
push
mov
jae
aaa
and
lods
xorb
ficoml
mov
in
shrb
jno
imul
cmpsb
subb
mov
add
js
mov
mov
dec
mov
mov
sub
fs
dec
in
push
xchg
lahf
adc
stc
mov
mov
test
adc
test
popa
jp
push
aaa
sbb
das
and
push
pushf
inc
or
mov
mov
dec
fwait
cltd
pop
ljmp
scas
lahf
pop
pop
fldl
dec
mov
out
out
xlat
pop
test
in
xchg
xor
in
xor
jb
loop
loop
xor
push
sarb
push
inc
mov
out
lods
movsb
test
out
mov
push
mov
push
leave
mov
lret
ret
inc
pop
jge
xor
sbb
or
xchg
jmp
fistpll
cld
dec
adc
sub
dec
xlat
movsl
mov
mov
mov
fwait
adc
cmpsb
push
lock
insb
adc
mov
sub
mov
push
inc
adc
sub
ja
lcall
or
mov
hlt
mov
mov
in
iret
pop
shrb
add
ret
rcrb
and
out
lds
xor
push
pop
xor
test
sbb
pop
xchg
ss
popa
imul
es
xchg
sub
cltd
inc
adc
add
push
aad
test
pop
test
mov
sbb
push
fdivs
test
dec
call
lcall
cwtl
pop
es
mov
daa
xlat
xorl
mov
cmpsb
sub
pop
inc
mov
adc
mov
aam
inc
aam
pop
add
scas
sbb
xchg
pop
lcall
sti
inc
dec
in
inc
hlt
add
insl
mov
movsb
ficompl
or
inc
imul
push
adcl
in
and
jns
es
jnp
mov
sub
in
insb
mov
cmp
push
lock
jge
adc
stc
loop
inc
fcompl
std
and
lret
and
or
jmp
xor
jne
gs
es
dec
mov
scas
inc
mov
xor
idivb
add
xor
push
js
cmp
cmp
sahf
jmp
adc
dec
pop
into
loop
push
dec
sbb
fwait
xor
pop
jge
xlat
or
es
fs
cmpsb
pop
mov
cs
xor
adc
dec
or
jecxz
adc
out
out
and
loopne
fnstsw
push
add
cmpl
pop
enter
lods
mov
cmp
sbb
clc
inc
mov
cwtl
les
mov
pop
adc
jb
and
inc
lods
ss
pop
gs
mov
adc
ret
call
adc
daa
sub
repnz
mov
cwtl
jmp
and
mov
popf
push
push
sub
ja
aad
hlt
cmpsb
mov
imull
xor
movsl
pop
jae
ds
or
mov
lahf
int3
xor
xchg
test
es
fmuls
sbb
in
lods
fbld
cmpsb
loopne
outsb
or
adc
out
cmc
bound
dec
sbb
es
sub
mov
inc
mov
cmpsl
movsb
dec
fadd
adcb
mov
es
or
or
push
in
scas
in
adc
test
leave
dec
lret
sarl
roll
pop
insl
mov
dec
cwtl
lret
mov
jle
inc
push
cmc
and
xchg
sahf
push
and
or
and
aas
movsb
dec
add
or
and
sbb
push
ret
push
push
sub
aad
imul
inc
jg
cmpsl
push
pop
test
or
or
call
and
xchg
and
sbb
mov
repz
and
popf
pop
das
es
sbb
xor
jl
popa
jecxz
or
jp
and
xchg
push
mov
sahf
in
inc
jne
inc
pop
pop
xchg
xchg
jmp
aaa
fldenv
jo
jmp
decb
dec
cmpsl
mov
sbb
loop
pop
fistl
dec
test
push
in
xchg
or
jae
push
mov
insb
xchg
daa
sub
adc
dec
pop
bound
mov
frstor
ljmp
arpl
arpl
sub
mulb
adc
es
pop
inc
mov
cltd
jle
mov
lock
sbb
xchg
jne
mov
jecxz
repz
cmpsb
inc
cmp
push
mov
mov
mov
push
dec
test
push
xor
xor
dec
lods
mov
int
cmpsb
repnz
in
and
fwait
push
cmpsb
aas
icebp
pushf
xor
xchg
adc
cmp
xchg
mov
sub
and
push
loop
pop
dec
xor
imul
push
push
mov
xchg
jno
cmp
movl
andl
xorb
pop
sbb
int
jae
or
mov
in
mov
mov
adc
add
and
dec
ja
dec
xchg
add
sbb
sbb
sbb
push
jp
les
movsb
adc
or
mov
dec
xchg
and
repz
mov
xor
adc
cli
lds
dec
and
cltd
mov
mov
lcall
mulb
popa
mov
cmpsb
xor
mov
cmpsb
cmc
call
movsb
pop
xor
imull
sub
mov
add
repz
movsl
mov
pop
fwait
jb
and
fnsave
out
mov
fisubrl
and
add
dec
fcmove
fistps
push
lock
sbb
ret
sbb
popf
xor
lods
movsl
xor
mov
and
push
dec
aas
inc
mov
push
mov
xor
push
rol
inc
cmp
js
test
mov
mov
push
cltd
dec
or
mov
stos
xor
cmpsb
fsub
xchg
or
dec
testl
popa
add
orb
xchg
stos
mov
pop
pusha
xor
pop
or
jg
pop
mov
mov
sub
cmc
or
pop
testb
mov
mov
bound
jo
ss
lods
mov
jb
call
jg
leave
push
inc
jge
icebp
int
pop
pop
repnz
cmp
mov
nop
loopne
sahf
cmpsb
mov
rcr
xchg
pop
xor
mov
ret
repnz
int
sub
cmpsb
mov
cmpsb
dec
fwait
cmp
or
sbb
xchg
sub
and
xor
enter
rcrb
and
in
mov
daa
lret
xchg
mov
nop
mov
icebp
mov
xor
es
pop
lds
enter
or
jne
pop
into
push
mov
jge
mov
and
xor
loope
lret
or
pop
aam
and
sub
jne
cmp
mov
lea
mov
mov
mov
outsb
push
test
push
adc
cltd
iret
test
fmulp
ss
mov
stc
cmp
popa
xor
data16
sub
notb
into
sbbl
mov
in
pop
in
cs
jp
mov
es
outsb
jecxz,pn
sbb
lods
push
mov
mov
dec
rolb
push
int3
push
call
arpl
jnp
fstpt
add
loop
cmp
sbb
cli
data16
xchg
sbb
mov
add
push
dec
mov
xor
fisubl
mov
and
and
js
and
into
or
fistps
or
mov
sbb
outsl
data16
push
pop
ljmp
daa
lods
data16
dec
cwtl
mov
lds
push
push
movsl
mov
mov
mov
cmpsb
cmp
xlat
mov
das
cli
sub
mov
mov
enter
mov
in
jmp
dec
cli
sub
popa
and
negl
dec
jns
push
gs
rorl
lea
inc
xrelease
add
fs
and
mov
push
cwtl
nop
jb
sub
dec
jno
pop
adc
inc
repnz
sti
lds
movsb
cli
and
adc
inc
dec
pop
lcall
movsb
xor
dec
dec
push
adc
bnd
popf
push
roll
xchg
jg
pusha
or
mov
movsl
mov
stc
flds
nop
inc
sub
xchg
pop
pop
fcomps
pop
jp
and
cmp
call
adc
dec
hlt
movsb
fisubrs
loopne
inc
clc
fadds
jo
loope
cli
loop
es
lret
dec
push
pop
adc
repnz
inc
mov
adc
mov
and
out
xor
js
pop
and
push
mov
stos
mov
in
mov
or
fmull
xchg
es
imul
xor
outsl
outsl
insb
jle
mov
mov
mov
int3
fbld
ffreep
inc
sahf
dec
lods
mov
adc
sbb
mov
imul
push
and
mov
xor
aas
and
jp
push
pop
mov
xor
adc
test
xor
pop
sub
mov
inc
arpl
add
cltd
js
movsl
lcall
les
test
xor
ja
xor
inc
dec
test
jmp
aam
and
mov
mov
icebp
nop
push
push
shlb
inc
and
jbe
inc
xchg
scas
ljmp
jae
xor
mov
xor
ret
mov
outsb
and
adc
jmp
xchg
inc
mov
or
sub
dec
aaa
loop
bound
add
or
mov
xor
push
xorl
leave
mov
lds
jge
mov
dec
or
clc
sbb
jb
addr16
cmpps
arpl
sub
mov
adc
jne
cs
inc
movsb
fwait
fwait
mov
push
xchg
mov
xlat
aas
dec
push
push
add
and
inc
mov
sbb
icebp
es
shll
pusha
mov
aad
decl
pop
cmp
xchg
leave
lds
stos
movsl
cmpsb
xor
hlt
add
push
sub
aad
sub
pop
jnp
in
sbb
xlat
cmp
roll
and
mov
inc
jbe
push
out
insl
mov
or
es
jp
jo
inc
inc
xor
add
mov
mov
or
out
and
popa
mov
out
out
jns
lahf
in
popl
push
outsl
sbb
push
leave
and
jle
pusha
jae
inc
sub
push
test
pop
scas
les
leave
jne
xor
arpl
not
push
fistpll
jmp
cmp
or
lds
mov
and
pop
xchg
xchg
or
lock
dec
xchg
inc
or
xchg
mulb
ret
sub
outsb
mov
jae
fldenv
sub
test
loopne
adc
adc
mov
js
inc
fwait
jle
int3
repz
push
or
push
cli
jnp
les
xor
js
and
out
lret
lret
mov
arpl
sub
xor
loopne
jg
cmpsb
inc
stc
adc
push
or
fldt
mov
aam
fdivs
inc
and
cmp
mov
data16
fdivl
gs
and
and
aas
mov
loope
inc
outsl
push
xor
sub
gs
fcmovu
cmp
jne
cmpsb
inc
mov
cltd
out
adc
xorb
xor
and
pop
rorw
and
into
xchg
push
cmp
test
jne
cltd
popa
xchg
dec
push
mov
xor
inc
cmp
insb
add
lea
pop
clc
and
insl
movsl
xchg
scas
cmp
aaa
cmp
adc
jns
jns
pop
aaa
ficoms
add
sbb
inc
pop
insl
mov
mov
mov
push
dec
inc
push
mov
das
jae
push
nop
jl
inc
push
and
inc
mov
std
vhaddps
jmp
cld
pop
add
sahf
and
cmp
in
test
mov
pushf
pop
cmp
sbb
xor
ret
out
ss
mov
add
jmp
or
cmp
sahf
es
or
into
dec
xchg
xor
cmp
xor
push
sub
fadds
arpl
cs
push
pusha
orb
sub
lahf
inc
out
int3
adc
push
xor
ja
stos
and
dec
test
and
sub
inc
mov
cmpsb
adc
push
lahf
mov
xchg
mov
mov
js
lahf
mov
xchg
adc
xchg
jge
and
repz
es
in
mov
lock
mov
sbb
addr16
dec
mov
js
aad
testl
mov
cmpl
mov
out
inc
es
add
cmp
sbb
mov
dec
loop
xchg
xchg
push
sub
out
call
fcmovnbe
sub
enter
cmp
mov
mov
pop
loope
jno
and
jmp
add
or
ds
pop
mov
pop
mov
xchg
ljmp
jnp
out
iret
les
mov
movsl
mov
mov
add
call
lods
pop
cld
mov
stos
loope
and
dec
pop
imul
stos
ja
mov
jae
xor
test
callw
mov
sub
cli
inc
push
iret
jb
mov
pop
dec
xchg
cwtl
inc
mov
jo
stos
dec
test
daa
xor
mov
xor
cmc
mov
negl
popa
dec
mov
rorb
pop
and
out
fwait
cmp
or
pop
mov
stos
icebp
popf
or
imul
fwait
dec
data16
mov
cwtl
mov
xor
jmp
mov
aam
mov
jecxz
jg
cli
or
loope
mov
call
lea
jg
fucomi
mov
and
insl
sbb
aas
movsb
in
xchg
xor
cli
icebp
or
or
scas
or
mov
leave
fwait
push
out
rolb
popl
push
push
test
fstpt
cmp
and
ret
xor
int3
outsb
xlat
movsl
cmp
adc
stos
jle
and
pop
pop
dec
cmpsb
push
adc
lea
adc
addb
je
std
pushf
int
pop
pusha
xor
lret
shrb
ja
sub
pop
cmpsb
mov
cmp
lcall
add
jae
jle
inc
inc
push
cwtl
jmp
loope
outsb
cmp
jp
add
xlat
pop
test
inc
fwait
andb
sahf
cmpsb
into
in
mov
les
cmp
inc
pop
inc
mov
test
push
pop
mov
xchg
insl
adc
pop
lret
mov
cmpsb
or
mov
sub
inc
jp
push
push
daa
arpl
in
cmp
cmc
loope
and
adc
movsl
mov
or
xor
insl
stos
outsb
jbe
mov
fstpl
sub
icebp
xlat
insb
call
xor
sub
mull
fwait
add
mov
xlat
movsl
pop
or
stos
std
inc
std
mov
cmp
rolb
push
into
sub
bound
fisubl
std
mov
add
repnz
daa
out
mov
pop
ret
push
lret
imul
cmp
adcl
sub
mov
movsl
loopne
sub
xor
es
dec
ret
lds
mov
add
and
nop
sarl
jl
fs
cltd
lret
mov
and
lods
mov
xor
cmp
enter
xor
iret
or
mov
mov
lods
push
in
xor
jp
es
dec
subb
inc
cmpsb
push
fwait
jmp
mov
outsl
cmp
xor
push
or
loope
fsubrl
jle
sbb
xchg
dec
cwtl
jge
push
xor
cmpl
movb
push
mov
and
loopne
hlt
imul
mov
add
pushw
jmp
jmp
push
xor
inc
xchg
rcpps
repnz
inc
inc
jae
or
mov
cmpsb
pop
ds
cmp
pusha
dec
cwtl
std
mov
pop
les
dec
and
pop
dec
in
sub
outsb
and
lret
test
cmpsb
sub
fsubs
clc
xchg
clc
sbb
push
adc
jmp
popf
inc
push
insb
loop
testl
ret
mov
test
dec
fsubs
xchg
iret
nop
and
sub
and
dec
in
dec
adc
push
mov
lret
xchg
add
jnp
adc
pop
push
nop
popf
in
scas
and
jb
xlat
and
xchg
add
or
mov
cmpsb
adc
aas
mov
xor
pop
mov
mov
testb
test
fstpl
fildl
loop
inc
or
pop
push
iret
adc
arpl
ja
mov
add
ret
dec
fisubs
push
cs
push
repnz
fs
jne
mov
cmpsb
rorb
test
or
xor
fiaddl
jno
push
lods
mov
and
xchg
lock
dec
pop
jae
lock
andb
fiadds
jmp
fstps
and
push
call
jnp
dec
mov
lock
lahf
cmp
out
jo
pop
scas
mov
sbb
fnstsw
sbb
movsb
lods
cmpsb
imul
mov
xor
popl
jecxz
lods
ds
popl
jnp
mov
cmp
push
insl
repnz
es
fbld
je
jns
jl
das
rorl
mov
xchg
adc
mov
aad
push
xor
outsb
mov
pop
loopne
lret
std
outsb
pop
movsl
xchg
cld
sub
cs
mov
push
sarb
lahf
rol
negl
xlat
enter
test
mov
push
pop
and
push
push
pop
pushaw
clc
int3
and
mov
mov
xor
inc
cmpsl
mov
inc
call
pop
les
mov
sub
cmpsb
out
and
into
pushl
jo
in
int3
loope
aas
push
shlb
mov
sbb
xor
mov
ljmp
push
cmp
leave
and
xchg
shll
jmp
cltd
push
mov
push
icebp
out
mov
outsb
js
xchg
sub
adc
add
mov
pop
jp
dec
cmp
push
subl
in
es
es
cmp
inc
cmc
sub
pop
xor
dec
jmp
inc
or
sub
pop
sub
lods
aaa
ljmp
mov
xchg
sahf
xor
icebp
sti
fidivrl
fistpl
and
mov
icebp
imul
mov
mov
xchg
movsl
sbb
push
js
xchg
stc
cmp
xorl
jnp
fidivrs
flds
and
insb
cmp
add
or
sub
stos
pushf
push
pop
shll
jbe
jmp
and
inc
mov
cs
inc
fstpl
in
jp
sbb
lea
and
or
xor
mov
dec
popf
popf
dec
sub
pop
and
lock
xlat
and
jne
xor
mov
xor
fwait
mov
sub
inc
xor
mov
sub
mov
inc
push
cmp
ret
stc
adc
mov
and
mov
push
ja
mov
xor
mov
pushf
dec
addr16
outsl
jnp
rcrb
jb
test
push
mov
cmpsb
incl
mov
sbb
fisttps
jno
imul
dec
test
imull
inc
add
movswl
mov
test
xchg
cli
sub
shlb
sub
inc
jge
dec
inc
pop
mov
sub
in
xchg
enter
lcall
xorb
mov
in
inc
filds
mov
inc
or
and
je
push
add
lret
in
fs
or
or
pop
add
shll
inc
rolb
push
mov
les
rcr
std
inc
adc
push
and
push
adc
pop
mov
mov
divb
inc
insb
pop
pop
jb
sahf
test
pop
cs
xor
push
aam
pop
daa
xchg
ja
mov
neg
xor
shl
push
sub
mov
shrl
je
jne
push
aad
ss
jge
sbb
cmp
dec
inc
pop
dec
mov
or
pop
cmp
cmpsb
ret
xchg
xchg
fs
mov
dec
scas
sar
cmc
movsl
sbb
ja
and
cmpsl
pop
jno
cmp
out
mov
push
fidivrl
adc
adc
frstor
push
add
mov
scas
repnz
dec
in
addr16
xor
mov
ljmp
jns
jno
pop
and
stos
or
xchg
add
repz
aad
mov
jns
loop
cmpsb
push
movsb
repnz
inc
and
test
or
and
jnp,pt
mov
pop
lds
xchg
inc
and
popa
dec
inc
neg
push
aam
inc
cmpl
mov
icebp
xchg
hlt
dec
mov
mov
cmp
inc
sub
push
fs
movsb
sar
mov
ljmp
xor
pop
cli
movsb
div
loope
pop
cmp
mov
push
stos
sahf
insb
movsb
lahf
xor
mov
sbb
mov
daa
push
cmp
ljmp
out
call
adc
cmc
pop
notl
adc
addl
inc
out
push
cmpsb
push
bound
int
xchg
sbbl
cld
xchg
fcmovu
lds
test
ds
loop
inc
dec
ljmp
and
jg
jbe
cmp
lds
inc
add
push
push
clc
add
xor
rorl
inc
cmpsb
fs
popl
frstor
mov
sub
leave
xchg
xlat
cmpsb
mov
mov
or
push
or
test
sub
mov
pop
ds
dec
fwait
jmp
cwtl
int3
xchg
imul
insb
iret
sbb
xchg
neg
xor
enter
fimuls
mov
mov
push
add
xchg
jg
dec
loope
daa
mov
popl
push
mov
mov
add
mov
mov
mov
cmpsb
jl
orb
test
mov
test
inc
xor
cli
lcall
add
inc
inc
push
pop
inc
jnp
push
ret
and
dec
jecxz
push
jmp
fwait
sbb
daa
int
mov
jns
cli
outsl
xchg
jle
inc
lock
jno
decb
insl
mov
add
es
adc
add
lahf
push
xchg
or
sahf
mov
pop
mov
inc
mov
add
andb
mov
pop
mulb
cmpsb
pusha
cltd
mov
pop
jmp
push
lret
and
movsb
xchg
pop
mov
cmpsb
jl
popf
inc
cmp
leave
jnp
push
xor
and
dec
pop
ljmp
shll
stc
loopne
lods
adc
jns
ret
inc
add
mov
iret
push
and
or
lds
xor
in
xlat
mov
test
test
testl
movsb
cmpsb
add
fwait
push
xorb
cld
xor
cs
sub
mov
movsb
cmp
aaa
jns
and
leave
rcll
mov
cltd
cmp
cld
repnz
punpckhdq
std
scas
cmpsl
adc
jns
cmpsb
push
into
pusha
add
push
add
test
andb
pusha
mov
mov
adc
inc
mov
cli
xchg
in
adc
pop
xor
push
mov
es
les
lock
daa
push
cwtl
or
test
sbb
pop
out
bound
jno
cmc
mov
push
and
loop
push
fcmovu
lds
cmp
mov
cmpsl
and
cmpsb
jge
insl
out
and
outsb
and
fcoms
clc
imul
cmpsb
lret
mov
sbb
inc
ja
sbb
and
mov
fldcw
repz
pop
xchg
mov
stc
jo
mov
pop
and
pop
fcoml
shll
aas
outsl
lock
adc
cli
xor
movl
stc
or
movsb
and
dec
sbb
inc
dec
sbb
test
shll
nop
mov
jb
or
data16
fs
enter
leave
inc
pop
mov
lods
fucomi
sub
in
loopne
popa
lds
test
imul
xchg
sub
push
cmp
jecxz
add
scas
and
or
xor
or
es
xor
mov
or
mov
movb
inc
data16
in
fcomi
and
jae
jp
mov
pop
loope
fnstsw
decb
add
and
cmp
fstps
iret
daa
or
inc
inc
cmp
inc
rolb
pop
addr16
fidivl
pusha
inc
dec
popf
aaa
iret
lods
dec
mov
xchg
shr
jno
push
mov
xor
mov
cmpsl
ret
shrl
dec
mov
cli
sbb
pop
gs
xor
iret
dec
inc
leave
push
das
pusha
xor
mov
sbb
cwtl
lods
lret
cmp
cmp
xchg
in
stos
xchg
inc
dec
dec
jns
cli
in
daa
mov
insl
push
aam
popf
mov
xorl
out
lcall
push
movsb
cmpsb
icebp
jmp
and
mov
scas
and
push
int3
in
xor
inc
es
pop
imul
cmpsb
icebp
pop
out
xchg
and
mov
pushf
cmp
push
pop
push
xchg
adc
or
fldl
testl
notl
add
movb
lds
lahf
fimull
flds
and
lahf
mov
scas
pop
repz
cli
lea
and
cmpsb
adc
jbe
inc
pop
xchg
enter
into
dec
cmp
jbe
stos
and
pop
pop
in
jb
roll
push
inc
sti
and
xor
jle
pop
push
cs
cmpsb
xlat
insb
fisubs
sarl
sbb
inc
ret
daa
hlt
inc
mov
inc
daa
popa
and
lret
adcb
lds
mov
rorl
mov
sub
cmp
xor
inc
rcll
sahf
mov
or
es
mov
lds
ss
cltd
int
in
dec
cmpsb
cmp
xchg
xlat
xchg
sub
mov
push
ret
mov
pop
dec
sar
bound
jp
mov
movsl
cmpsb
xchg
adc
pop
mov
pop
xor
xchg
mov
test
cwtl
mov
sub
test
dec
or
in
mov
stc
jnp
pop
repz
mov
divb
dec
fidivl
fldl
in
iret
loopne
mov
add
shll
icebp
pop
in
or
fs
aaa
ja
int
aas
enter
fwait
cwtl
pop
jle
jmp
sti
mov
and
inc
and
scas
lret
dec
mov
data16
fnsave
or
pop
pop
xor
fs
mov
mov
addb
scas
sahf
xchg
jns
ret
sti
fstpt
packuswb
inc
xchg
fcomip
rorb
sub
add
xor
push
inc
gs
sarl
add
and
movsl
jbe
push
mov
imul
dec
lcall
fcomi
inc
movsl
pop
xor
xchg
push
aaa
es
pop
mov
ror
scas
aaa
movsb
daa
mov
mov
in
pushf
in
popf
xor
test
repnz
adc
repnz
cld
mov
xor
vorps
hlt
aam
aas
stos
pop
mov
insl
or
sub
mov
push
push
push
aaa
test
sbb
mov
and
dec
xor
out
gs
push
push
mov
xor
xchg
add
cmc
sarl
ret
push
and
mov
lahf
pusha
and
cwtl
jnp
and
cmc
sbb
push
imul
adc
xor
notl
jo
clc
xlat
in
and
inc
scas
xchg
sub
mov
jmp
mov
and
mov
jmp
inc
xchg
mov
mov
mov
jno
mov
dec
inc
movsl
or
xchg
xor
mov
xchg
das
inc
sub
dec
inc
in
test
xor
dec
mov
push
jge
add
xorb
cltd
mov
and
jg
xchg
fimuls
xchg
clc
cmp
gs
cli
and
int
sub
std
dec
and
scas
ret
and
stc
out
popf
cwtl
push
loopne
das
stos
sbb
xchg
ds
sub
sub
vpaddusb
mov
and
xchg
push
cmp
inc
and
xchg
hlt
xchg
push
or
mov
popf
push
nopl
adcb
aam
inc
loopne
jl
and
dec
and
imul
inc
in
imul
scas
fwait
xchg
jmp
fmull
xchg
jg
cmc
dec
hlt
mov
cmc
adc
jmp
jg
pushf
call
xchg
cltd
sub
xchg
popf
std
mov
pushf
es
mov
es
dec
ds
sub
pop
mov
loopne
clc
icebp
in
jmp
outsb
rcrl
je
cmp
xchg
inc
mov
jbe
xor
jge
shll
and
out
fwait
out
and
ret
xor
sub
cli
jae
pop
push
fs
fcoml
fucomip
pop
ds
xor
sbb
push
fucomi
ja
movsb
mov
and
leave
es
andb
cmpsb
push
mov
xor
sbb
stc
or
cmp
inc
imul
inc
push
ret
mov
movsl
xchg
adc
mov
nop
cmp
test
jecxz
xchg
cmp
adc
inc
adc
ss
adc
test
or
jb
stos
and
inc
sarb
or
aam
xchg
mov
jnp
inc
das
out
push
mov
xchg
dec
ja
mov
and
hlt
sti
mov
sub
ljmp
pop
fwait
scas
data16
lahf
scas
xchg
sahf
add
call
or
pop
insb
dec
jecxz
scas
addr16
test
inc
push
and
xchg
push
cwtl
pop
add
push
mov
popw
sbb
xchg
cmp
es
gs
push
clc
pop
xor
sub
aas
xchg
sti
xor
pop
subb
loope
pop
and
adc
mov
hlt
push
mov
pop
sub
inc
int
jle
jmp
das
repz
movsl
mov
add
xor
and
lds
enter
push
les
lcall
xor
imul
mov
jl
dec
and
cld
or
movsl
popa
nop
fidivs
test
jae
rorl
ret
mov
popf
out
xlat
int
xchg
ljmp
imul
and
mov
add
out
cmpsl
pop
cld
lahf
test
and
fidivrl
or
adc
jecxz,pt
push
lods
mov
and
es
fcmovnb
mov
scas
sub
push
les
adc
cmpsb
pop
xchg
sbb
push
sbb
inc
xor
push
insb
jge
roll
mov
das
pop
mov
mov
fwait
push
fbld
movsb
jle
in
lret
sub
xchg
fsubs
xabort
fnstsw
loop
mov
push
cs
dec
adcb
add
sbb
sbb
movsl
sti
je
stc
mov
insb
push
in
xchg
fcmovb
pop
scas
rolb
clc
outsb
ror
call
movsl
mov
divl
rcrb
imul
and
in
push
in
mov
pusha
xchg
sub
rorb
mov
sub
dec
pop
adc
pusha
push
movq
dec
adc
sub
cli
sbb
jnp
rolb
sbb
iret
mov
movsl
cld
fisubl
insl
sub
daa
cmc
and
inc
ljmp
pusha
syscall
mov
repz
mov
pop
loop
inc
iret
jnp
into
leave
push
sbb
xor
xchg
jmp
push
mov
cwtl
jne
and
cmc
es
add
mov
or
xchg
pop
clc
jno
mov
or
mov
jne
xlat
movsb
cmpsb
pop
popa
jb
repz
xor
lcall
xchg
cmp
mov
mov
cmp
mov
inc
popa
add
xchg
inc
push
inc
lock
or
lret
in
xchg
bnd
cltd
js
insb
cmp
lret
xor
xor
cmpsl
inc
in
pop
pop
mov
mov
es
cmp
xorb
mov
mov
adc
add
xchg
mov
test
sub
xor
loopne
push
mov
lds
add
xchg
icebp
je
inc
rorb
push
jnp
aaa
mov
mov
sub
xor
mov
lods
mov
mov
pop
mov
and
jb
shrl
add
cmpsb
and
pushf
lods
mov
in
dec
xchg
repz
js
push
addr16
pushf
faddp
stos
test
ret
adc
push
aam
test
cmp
push
loope
das
pop
xchg
push
xor
mov
repz
insb
movsb
cwtl
stc
cmp
js
sbb
cwtl
std
lds
test
inc
cmpl
fbld
es
cmpsb
pop
cmp
cmc
lret
xchg
and
sbb
cmp
mov
mov
sbb
inc
aaa
outsb
sub
cmpl
mov
or
pop
jo
int3
and
aam
out
addl
inc
xor
repz
jae
sbb
sbb
pop
sub
jne
lea
mov
sub
hlt
jge
ljmp
fcmovnb
call
out
push
aad
cmpsl
arpl
lcall
in
push
pop
mov
arpl
cmc
out
mov
inc
xchg
test
jb
shlb
mov
and
xchg
add
pop
data16
cmpsb
xchg
ret
push
inc
sbb
pop
fcoms
mov
add
add
dec
and
adc
test
xor
roll
dec
lcall
stos
in
mov
mov
sub
test
push
jbe
mov
es
stos
dec
adc
fdivrp
xor
jp
dec
mov
lahf
push
pop
push
mov
test
scas
dec
lds
sub
out
inc
pop
xchg
mov
mov
jo
push
dec
addr16
inc
sub
aaa
fwait
jns
ds
xchg
frstor
es
dec
sti
adc
ss
addps
mov
pop
std
push
out
aad
xor
mov
ds
jmp
sarb
test
pop
or
aad
adc
jo
fidivrs
into
fidivs
or
xlat
pop
and
dec
dec
scas
adc
pop
in
sub
adc
jbe
xor
test
pusha
fiaddl
xchg
or
adc
xchg
insb
push
lods
pop
xchg
mov
cwtl
cmc
mov
cmp
inc
xchg
aad
js
stos
jne
or
push
mov
cmc
inc
add
adc
pushl
in
xor
popa
jmp
mov
mov
sbb
xchg
mov
imul
pop
and
push
or
movsb
pop
mov
cmpsb
mov
pop
mov
aad
iret
ret
mov
aaa
test
jl
jbe
cli
push
and
into
dec
push
and
rcr
sti
cmpsb
out
adc
jp
std
xor
sbb
stc
pop
mov
adc
xor
scas
adc
cltd
ja
inc
mov
sub
movsl
sbb
or
mov
stos
pop
daa
and
mov
es
mov
and
sbb
and
inc
shr
inc
and
mov
in
jnp
add
lret
aam
adc
scas
loope
mov
dec
xor
call
cmp
fildll
je
xor
add
cmpl
pop
addl
lahf
pop
cmpsb
cld
mov
lods
adc
jbe
xor
cmpsl
pop
hlt
lds
push
mov
cmp
pop
repz
mov
add
data16
int
cld
adc
mov
ljmp
sub
add
and
xchg
out
cmpsb
jb
ds
idivl
sub
jmp
sbb
inc
xchg
mov
addr16
out
push
pop
jge
sbbb
push
sbb
or
mov
adc
sbb
push
sub
mov
push
lods
iret
mov
mov
jb
push
push
sub
or
adc
dec
jne
mov
or
dec
cmp
pop
xor
pushf
outsl
mov
push
int3
add
cmp
ret
les
imul
add
mov
jb
mov
adc
or
lods
test
scas
js
pop
push
inc
fiaddl
and
rorb
xchg
into
xor
xor
mov
popa
int3
decb
push
test
inc
xor
nop
ret
dec
jge
dec
sub
cmpsb
adc
js
movsl
imulb
xchg
xchg
mov
push
repz
mov
sti
scas
icebp
xor
push
mov
and
jnp
xor
shll
arpl
fsubr
out
repz
pop
xor
sub
lret
cmp
stos
xchg
pushf
sti
xor
mov
jecxz
inc
or
sbb
xor
xor
push
push
sti
mov
out
cmpsb
push
rclb
push
stos
jnp
xor
mov
iret
es
sbb
cmp
fs
jl
lods
add
mov
mov
pop
push
test
lahf
pop
lahf
outsb
xchg
test
mov
int3
fcomps
xchg
cmp
into
cs
xchg
inc
jbe
ret
push
and
jmp
dec
shlb
sub
ljmp
into
mov
call
hlt
jnp
pop
xor
and
stos
mov
push
mov
ja
or
cmpsb
test
xchg
popa
fidivl
dec
loopne
adc
clc
adc
add
cmc
mov
and
in
stc
clc
jle
lock
clc
push
inc
pop
sbb
es
movsl
cmp
mov
movsl
rcr
jae
inc
mov
dec
sub
repnz
mov
mov
inc
push
fisttps
adc
fisubl
mov
jg
into
xorl
push
sahf
mov
jno
adc
adc
mov
cmp
arpl
push
mov
nop
or
sub
jbe
jnp
out
cmpsb
push
cwtl
xchg
mov
cmp
and
cmp
filds
int3
xchg
inc
cmc
inc
clc
insl
push
jle
jne
out
or
jne
jmp
mov
pop
in
xor
into
pop
mov
leave
imul
stos
and
rolb
orl
mov
cmp
and
lcall
push
xor
mov
sahf
mov
or
enter
mov
in
jl
cmp
mov
sbb
clc
lea
inc
mov
mov
adc
inc
adc
into
jmp
xor
addb
jecxz
in
fidivrs
rorb
mov
jmp
push
es
out
xor
leave
shl
cwtl
and
mov
cmpsb
cmp
jbe
xchg
jmp
sub
movsl
push
pushf
xor
xor
adc
loopne
shrb
dec
cmpsb
xor
gs
sub
jo
mov
int3
sbb
hlt
push
arpl
dec
xor
rcrl
cmp
add
xchg
inc
add
and
mov
mulb
lds
dec
les
in
imul
fcoms
fs
pop
sti
sbb
and
push
rcrb
or
pop
push
and
adc
fnsave
push
push
xchg
adc
dec
adc
in
xor
or
pop
pop
fbstp
or
push
mov
leave
lds
mov
nop
cltd
mov
adc
mov
pop
stc
mov
jns
push
mov
arpl
pop
faddp
repnz
filds
dec
sub
pop
mov
xchg
enter
cmp
mov
pop
sbb
loop
aas
ret
out
push
xor
xchg
mov
shlb
or
xor
stc
xchg
jle
ret
mov
cmp
cmc
cmp
stc
mov
rcl
inc
xchg
jo
fwait
fwait
lret
js
popa
stos
mov
sbb
jno
push
dec
leave
jbe
lahf
daa
mov
outsb
scas
dec
xor
inc
mov
shrb
cmp
in
dec
and
rolb
lahf
push
and
fldenv
insl
lcall
mov
and
jl
sub
add
mov
sbb
in
cli
jb
lods
out
lret
pop
xorl
shlb
es
mov
push
jbe
adc
std
aaa
ljmp
inc
arpl
rorl
adc
inc
mov
cmpsb
pusha
imul
mov
inc
jmp
and
in
or
jb
pop
das
push
call
in
shr
lods
and
pop
lcall
stos
popa
nop
cmp
mov
imul
cmc
mov
cmc
jns
dec
add
add
fs
add
sbb
or
addr16
and
sub
stos
or
mov
cli
mov
jno
cmp
mov
movsb
ja
stc
int3
xchg
and
icebp
call
add
lahf
lods
fstps
xor
mov
les
fs
xor
ss
fsubl
in
in
xchg
mov
hlt
cmp
push
aam
out
lret
loopne
pop
sbb
inc
adc
sub
shlb
adc
inc
ds
mov
int3
mov
mov
xor
xor
add
movsl
je
sub
and
test
xchg
xchg
dec
mov
adc
sbbb
lea
fisttpl
inc
mov
cwtl
test
lahf
adc
nop
repnz
fsubs
and
addl
sbb
cltd
aad
and
shrd
xor
nop
ret
int
iret
jbe
sub
imul
ret
movsl
leave
cmpb
aam
add
inc
lock
xor
xchg
add
popa
adc
pop
in
mov
popf
inc
dec
lods
dec
or
jne
fistpl
stos
push
mov
jmp
ds
jnp
setle
xor
jno
inc
in
idiv
mov
mov
mov
pushf
and
fldenv
mov
mov
or
mov
movsb
rorl
and
shrb
push
push
cmp
xor
inc
pop
xor
mov
sub
inc
adc
add
iret
pushf
imul
mov
push
cld
push
cmp
jp
and
ds
push
or
ffree
test
stos
pop
add
shll
lret
adc
and
push
into
fisttpll
andb
jg
pop
push
out
lock
adc
cltd
sub
xor
and
call
mov
pop
sub
inc
out
mov
push
jle
jle
mov
cmpsb
mov
push
ja
xor
mov
hlt
js
mov
into
mov
scas
jne
xor
and
or
imul
xor
dec
or
and
fimull
es
dec
cmp
xchg
lahf
sbb
shlb
inc
and
cmpsb
int
mov
xor
mov
loope
inc
push
movsb
pushl
jge
adc
mov
cmpsb
xlat
push
subb
pop
inc
nop
mov
imul
icebp
lret
or
rcll
cmc
xor
or
ucomiss
or
rorl
in
fildll
mov
sub
xlat
sbbl
loope
push
sti
xor
movsb
cmp
bound
call
lds
dec
test
inc
adc
aas
and
mov
es
fwait
nop
mov
jmp
rcll
addb
xchg
cld
fwait
dec
dec
out
aad
cwtl
inc
int3
in
adc
es
xlat
nop
jmp
xor
test
or
lds
dec
dec
inc
sbb
and
and
test
fcmovnbe
fisttpll
mov
gs
aam
jmp
add
scas
mov
fstl
lahf
xchg
cs
test
jne
sub
es
inc
adc
xor
jno
pop
aam
shlb
std
pop
and
add
lret
jbe
jo
push
mov
mov
and
sbb
js
in
je
test
sbb
adc
inc
orl
xor
in
xor
mulb
bound
push
and
fstpl
data16
inc
aam
fsubl
cmp
mov
in
call
insb
push
mov
pop
or
jb
movsl
mov
jmp
or
add
pop
cmpsl
add
mov
push
mov
inc
inc
adc
imul
dec
and
jecxz
and
push
dec
mov
rcrl
out
out
inc
jmp
lods
movsl
enter
daa
mov
repz
sbbb
or
sub
mov
scas
popl
cmp
fcmovnu
das
cmp
test
je
pop
cli
mov
lods
das
xor
das
push
movsb
loop
and
dec
add
pop
in
push
gs
xor
xchg
fadds
out
or
mov
es
or
push
dec
and
lcall
pop
xorl
xchg
stos
inc
orl
mov
bound
pop
mov
clc
fistps
adcb
add
push
sub
cmpsb
mov
dec
push
push
jmp
push
daa
push
and
imul
and
and
push
pop
mov
sbb
or
add
dec
xchg
ret
push
mov
cmpsb
sub
jl,pt
add
popf
jl
scas
jno
xor
popl
or
jno
test
push
push
loop,pt
pop
mov
movsl
cmp
inc
aas
aaa
hlt
cmp
and
adc
xor
cmp
jmp
aaa
sti
lods
and
fisttpll
adc
mov
adc
es
enter
add
dec
test
ror
mov
fildll
fidivrs
mov
bound
or
and
mov
dec
xchg
mov
mov
mov
xor
fbld
fisubs
out
imul
add
orb
and
aad
enter
push
mov
daa
jns
repnz
movsl
push
lea
xor
dec
inc
jl
dec
pop
in
lcall
jmp
enter
pop
push
adc
sti
xchg
ret
dec
insb
insl
pop
into
les
adc
test
xor
push
sbb
inc
pop
cmpsb
test
xorb
inc
daa
adc
pop
cmpsb
mov
push
je
lea
jns
loope
sbbb
fldl
pusha
stos
clc
cmp
lcall
jecxz
movsl
add
push
xor
and
mov
cmpsb
cmp
mov
enter
mov
pop
jne
ja
fidivrs
pop
sbb
pop
pushf
inc
push
rcrb
movb
lds
subl
sahf
cmpsb
std
jbe
add
dec
cmp
pop
pop
ret
or
test
pop
sbb
xchg
sub
xor
sti
fistpll
lcall
mov
add
imul
int
jge
inc
gs
adc
dec
push
mov
lds
lea
into
iret
shlb
pushf
and
scas
lds
imul
sbb
mov
xor
or
xor
in
add
dec
inc
or
xchg
ds
and
sub
push
in
stos
xor
fldl2e
imul
nop
inc
cmc
add
mov
into
push
sbb
ret
mov
push
mov
mov
mov
sbb
sub
mov
xor
pop
dec
mov
inc
repz
fwait
xor
inc
mov
jg
clc
jbe
es
repz
rorl
add
adc
inc
pop
lea
arpl
cmp
or
cmc
jne
mov
es
out
push
nop
cmp
adc
fimuls
shll
sahf
test
paddd
int
push
inc
push
push
scas
in
pop
subb
rol
adc
xor
jecxz
xor
mov
cmpsb
scas
inc
pop
les
xchg
xchg
xor
loopne
sub
mov
pusha
stos
aaa
je
dec
mov
lods
push
mov
mov
mov
sub
inc
xchg
and
test
dec
add
lahf
stos
and
pop
ja
mov
jp
mov
add
jae
mov
cmp
cs
and
pushf
xor
jp
daa
sub
push
test
inc
loop
int3
jmp
in
cmp
or
lahf
sub
aas
mov
jge
cmpl
dec
adc
pop
nop
pop
ljmp
mov
scas
cmp
or
mov
jbe
in
iret
and
call
xor
pusha
mov
or
lcall
inc
xor
cwtl
pop
test
mov
ret
push
dec
and
pop
mov
mov
arpl
cld
bnd
leave
lahf
mov
out
xlat
xchg
lahf
nop
push
cwtl
sarb
cltd
dec
mov
pop
das
int3
imul
scas
dec
test
cld
dec
inc
ds
add
push
enter
test
insl
outsb
jg
inc
in
pop
xor
ja
sub
test
dec
sub
sbb
cmpl
ljmp
inc
xorb
push
xor
scas
sub
push
sub
xor
xlat
stc
sub
pop
pop
out
pop
les
fsubrp
std
jnp
lock
push
xlat
stos
in
push
add
es
dec
pop
imul
add
imul
jae
mov
ds
lret
and
cld
push
xorl
enter
pop
or
pop
sbb
fldenv
cli
flds
mov
lret
mov
les
mov
pop
add
fsubrs
mov
arpl
enter
daa
test
call
jl
mull
mov
mov
or
xor
pop
jg
cmp
icebp
pop
and
shlb
pop
mov
push
jl
insb
pop
adc
das
mov
por
cmp
mov
mov
pop
xorb
and
mov
and
mov
es
data16
stos
mov
sarl
adc
test
sub
xor
sbb
mov
inc
mov
push
cltd
rclb
and
daa
ss
jne
and
cmp
inc
outsl
int3
ret
mov
inc
ja
cmp
lcall
outsb
out
mov
sub
mov
lea
and
imul
mov
cmpsb
arpl
inc
jmp
pop
jb
jbe
sub
inc
fldl
lods
shll
jp
daa
shrl
or
stos
pop
pop
lds
mov
fnstenv
or
in
adc
cmpsb
mov
in
dec
std
mov
outsb
xchg
dec
shr
xchg
mov
mov
jmp
xchg
test
fisubl
push
mov
dec
es
bound
data16
cmpsl
rdmsr
aad
xor
sub
sbb
jl
jge
cmp
cmp
pop
andb
mov
sbb
cs
cmp
loop
mov
icebp
movsl
push
sub
push
scas
push
stos
jno
adc
pop
imul
leave
mov
ds
mov
dec
push
mov
or
lock
test
pushf
das
sti
mov
pop
pop
fcoml
lds
sbb
out
cmp
pop
out
sbb
es
in
popf
cmp
xor
push
xorb
pop
adc
fstpt
add
inc
pop
pop
cmp
jmp
jne
pop
mov
mov
cmpsb
dec
push
mov
mov
sti
mov
add
jmp
sbb
adc
out
lds
and
lds
insl
shrb
inc
cmp
scas
je
xlat
and
sahf
mov
das
cld
inc
inc
test
dec
jg
lea
rcll
inc
and
inc
sub
or
idiv
test
cmp
out
sub
sti
xor
jl
jge
cltd
fldenv
add
dec
dec
add
ds
xchg
mov
mov
push
int
mov
cmc
fcomps
cs
into
les
xchg
iret
ljmp
dec
jge
fs
jns
inc
inc
xchg
fisttps
stos
shrb
cmp
lcall
and
pop
dec
or
fldenv
xchg
dec
insb
add
add
ret
and
lret
jbe
nop
xor
cld
cmc
and
or
inc
jg
enter
cld
xor
aam
and
fildll
in
test
outsb
outsl
sarb
fdivl
sub
rclb
aad
add
dec
lock
or
inc
popa
movsb
jmp
outsl
cmp
mov
lahf
cld
daa
xchg
leave
lock
es
cmp
xor
cmp
and
cmp
mov
xchg
xor
mov
imul
imul
and
jmp
fs
cmpsb
les
call
sub
jg
clc
sub
push
mov
jecxz
push
pop
cwtl
pop
xchg
xchg
cld
push
add
and
mov
cld
jnp
mov
or
xchg
notl
popf
pop
dec
cmpsb
jo
inc
fs
xor
mov
jmp
xlat
out
in
mov
xlat
les
sbb
mov
jg
andb
leave
pop
and
jno
sbb
mov
or
sbb
jbe
cmpsb
loopne
jns
mov
or
pop
xor
fs
enter
mov
inc
cmpsb
cmp
loope
movb
fdiv
cs
sarb
and
pop
cmp
jmp
int3
outsb
mov
lea
sub
and
or
add
or
dec
mov
cmp
pop
jg
in
out
lds
pop
xor
xlat
sbb
and
in
adcl
sub
imul
xchg
pop
xchg
out
mov
scas
xor
out
pop
cmpsb
pop
mov
xor
cmp
pop
arpl
lds
into
negb
xchg
xchg
jb
shll
es
push
test
mov
test
ficoml
scas
imulb
jno
inc
imul
call
mov
pop
mov
inc
sub
sbb
mov
call
rcrl
repnz
jmp
fnstenv
sbb
int
mov
inc
leave
mov
dec
push
push
mov
push
stos
das
push
and
loopne
dec
es
aaa
je
mov
filds
das
shll
fdivl
mov
cmpsl
xor
jmp
jp
sub
in
mov
jb
sub
mov
scas
mov
cmpsb
scas
fstl
mov
push
pop
addr16
pop
jbe
rcll
jle
sbb
flds
mov
adc
cmpsb
dec
inc
jb
repnz
and
jge
repz
lret
aad
stos
push
mov
cmpsb
in
sub
jl
ret
movsl
fisubl
int
xchg
push
inc
sub
scas
ja
std
lret
and
fbstp
lds
xor
stc
ds
fs
ret
jo
adc
iret
clc
movsl
fs
or
dec
pushf
jbe
or
xchg
or
repnz
mov
jp
imull
mov
leave
add
in
mov
cmpsb
rorl
inc
jne
aaa
xor
or
in
rclb
movb
in
and
push
in
mov
es
mov
mov
jnp
loopne
or
adc
loope
and
ss
push
in
pop
inc
and
test
sahf
ja
mov
xor
out
loop
sub
adc
sub
mov
jmp
push
outsl
popa
in
xchg
jns
pop
sbb
pop
xchg
lds
cmp
xchg
outsl
mov
int
sub
cli
rolb
rcll
or
insb
sub
mov
mov
js
cmp
or
mov
std
mov
inc
aad
sbbl
jl
pop
repz
in
pop
shll
pop
outsb
fisttpl
cmp
sarb
loope
mov
pushf
xor
popa
jmp
jne
mov
aam
mov
mov
bound
fcmovbe
lret
sbb
stos
cli
mov
iret
adc
cmp
bound
aas
lcall
pop
insl
mov
cmpsl
sub
mov
and
or
push
dec
js
imulb
xlat
lods
andb
cli
mov
lcall
lahf
xor
aam
flds
int3
enter
inc
aad
add
stc
ficompl
and
sarb
notl
aad
out
in
and
cmp
call
mov
shll
pop
aas
cltd
push
inc
je
and
gs
cmpsb
xchg
ss
pop
push
cs
or
fwait
jne
push
xlat
xchg
sbb
fwait
xor
jmp
xor
mov
bound
jbe
push
addr16
je
push
push
pop
stc
inc
adc
fcomi
mov
cmpsb
mov
pop
inc
inc
inc
lret
stos
xor
xor
inc
inc
mov
into
popa
cmp
adc
mov
xor
lock
fldz
mov
or
cmpsb
lret
add
addr16
pop
popa
and
in
pop
fcmovne
add
and
xchg
adc
xchg
pop
push
dec
out
push
sbb
lock
xor
shll
jl
pop
cli
pop
iret
inc
repnz
mov
out
das
lahf
cmp
and
mov
enter
es
jmp
daa
mov
ljmp
xor
jae
stos
sub
inc
inc
dec
mov
adc
into
arpl
xor
ficoms
mov
sbb
je
es
mov
cmp
mov
in
fs
pop
ror
xor
imul
xlat
push
inc
das
xchg
je
divb
std
pop
repz
stos
mov
xor
dec
or
push
add
adc
mov
sahf
inc
jbe
arpl
idivb
and
adc
pop
xchg
jg
sbb
push
sar
adc
lea
test
es
xor
jns
sbb
push
ret
iret
xor
out
lods
sub
push
fildll
jne
push
inc
rorb
hlt
movsl
adc
lahf
dec
pop
ljmp
dec
and
sarb
arpl
pop
es
in
loopne
pop
imul
xlat
arpl
popa
fsubl
bound
cmpsb
fwait
sub
jl
es
inc
cmpsb
add
cli
iret
fmuls
loopne
in
pop
mov
cmp
and
push
jle
mov
xchg
xchg
or
loop
push
mov
push
insl
xor
sub
xchg
fs
adc
mov
sub
pop
mov
scas
push
adc
adc
rcll
insl
mov
fists
addr16
xor
mov
add
jmp
xchg
aaa
mov
mov
and
shlb
sub
dec
inc
jae,pt
or
out
jae
movb
push
add
adc
jbe
dec
add
jne
in
or
pushf
mov
adc
dec
es
insl
addr16
dec
jo
xor
scas
enter
into
out
pop
mov
mov
in
mov
js
and
paddsw
inc
add
adc
pop
rcll
dec
xchg
lods
mov
lock
jge
and
sub
int
cld
les
ds
mov
test
xor
push
inc
jecxz
std
je
popf
xor
and
and
jb
loop
jecxz
push
and
add
aaa
inc
dec
ret
jl
xchg
cmc
jb
push
cmp
int3
scas
lds
loopne
push
cltd
fisttpll
ret
cltd
xor
sarl
dec
imul
or
leave
std
inc
sub
jbe
adc
or
cmpsl
mov
es
outsb
adc
pop
adc
sub
mov
mov
mov
inc
stos
jb
ljmp
mov
call
jne
out
pop
fnsave
jecxz
arpl
and
inc
mov
sbb
js
sub
addr16
mov
inc
cmpsb
mov
sahf
jnp
mov
fs
xlat
mov
mov
sub
cs
pop
jns
inc
gs
loope
inc
lock
mov
mov
scas
mov
sbb
cmpsb
cmp
call
gs
adc
pop
dec
test
sahf
push
cmp
and
add
lahf
subb
int3
xor
test
xrelease
lea
inc
push
jns
ds
adc
mov
cmc
ja
iret
mov
xchg
addr16
fstl
inc
stos
adc
push
jbe
add
lret
push
mov
cmpsb
mov
mov
bound
lret
push
outsl
adc
insb
mov
fldcw
inc
insb
mov
mov
sti
pop
xor
in
mov
cmp
enter
loope
mov
or
mov
stos
in
pop
mov
xchg
call
push
outsb
and
rolb
mov
mov
add
clc
mov
es
fdivs
ficoml
jecxz
std
pop
xchg
xchg
xchg
insb
push
sbb
and
xchg
int3
mov
sub
mov
inc
push
add
imull
push
mov
inc
inc
add
stos
or
fdivs
mov
and
in
pop
into
mov
cltd
inc
mov
push
adc
cmpb
pop
cli
sbb
adc
out
and
sbb
sbb
and
xor
imul
or
mov
ja
repnz
jge
cmc
dec
mov
sbb
arpl
mov
lret
ja
mov
cs
cmp
rclb
fsts
pop
mov
jecxz
jecxz
inc
mov
imul
es
xchg
xor
into
sbb
mov
inc
daa
sbb
in
cli
jmp
jmp
iret
inc
push
or
sbb
cmpsb
sub
push
or
aaa
mov
data16
mov
dec
out
inc
add
xor
inc
popa
mov
pop
les
cmp
jae
cli
xchg
gs
test
pop
adc
pop
or
xchg
pop
gs
xchg
lcall
negb
mov
stos
fidivrs
cmpsb
dec
mov
ds
sub
fsts
pusha
cmp
pusha
inc
addr16
and
scas
sbb
sub
xor
push
xchg
and
add
insl
ja
or
and
shl
jecxz
mov
mov
cmpsb
out
cmp
ret
dec
cmpsb
xchg
cmp
mov
cmpsl
es
fdivrl
add
mov
out
loopne
fstpt
repz
in
dec
mov
outsl
data16
sub
scas
mov
or
ja
sbb
lods
push
pop
test
clc
push
mov
inc
rol
in
xor
mov
lods
lahf
out
repnz
aaa
aad
push
rol
xchg
stos
jmp
pop
movsl
mov
cmp
loope
pop
shll
xchg
xorl
add
js
dec
mov
or
ficoml
cmpsb
rorl
cmc
sub
lock
in
int
rol
repz
or
xchg
push
in
xchg
push
cmp
cmpsb
aas
mulb
inc
or
pop
xchg
adc
fbld
imul
dec
xor
mov
js
mov
push
daa
out
push
and
or
adc
pop
cmc
bound
sub
lea
pop
das
push
push
mov
idiv
movaps
lock
pop
sbb
mov
add
pop
sub
test
and
dec
xchg
cmp
cmp
ret
mov
xor
mov
es
mov
imul
out
and
pop
xor
xchg
into
jbe
mov
xlat
and
and
out
adc
rcrl
movsl
adc
pop
mov
sub
pop
push
push
mov
les
and
xchg
inc
scas
cmpsb
add
mov
lcall
in
inc
sub
lock
es
xchg
xor
pusha
mov
inc
xchg
inc
inc
jl
cmp
pop
jno
je
mov
call
ljmp
mov
sahf
mov
ret
jb
pop
xlat
mov
mov
es
dec
loop
mov
rol
and
xor
scas
sbb
rolb
ret
sub
mov
and
push
into
xchg
jo
inc
mov
inc
clc
and
cli
dec
or
pop
pop
jmp
add
repz
jmp
xchg
push
adc
out
xchg
mov
xor
fsubrp
inc
cmpsb
dec
jecxz
and
cs
into
aas
xor
aad
test
loop
add
pop
pop
cmp
and
push
xor
jp
je
inc
cmp
and
pushf
in
lahf
inc
lods
cmc
ja
push
ja
loope
jns
ds
ret
dec
add
movsb
dec
xchg
in
imul
or
push
mov
es
pop
fsubp
and
fs
mov
out
push
xchg
fdivrl
and
or
mov
aas
in
sub
cmpsb
sarl
xchg
and
mov
aad
xlat
inc
sub
and
inc
inc
push
std
cmpsb
pop
and
or
sahf
mov
or
scas
add
xor
mov
nopl
add
pushf
je
dec
test
mov
or
lods
test
or
faddp
fwait
cli
aad
add
mov
push
mull
stos
push
fcmovu
mov
inc
inc
push
and
flds
or
mov
xor
shrl
inc
and
dec
call
insb
sub
cmp
rcr
mov
lds
xchg
test
leave
inc
dec
movsb
ljmp
adc
mov
es
loop
adc
and
es
xorl
movsl
cmp
xchg
xchg
pop
sbb
sub
mov
mov
iret
mov
js
jbe
and
sahf
xor
push
inc
gs
shlb
adc
addl
pop
mov
jnp
cmp
pushl
inc
shll
jae
in
subb
popf
leave
cli
rol
adc
adc
jl
add
aas
sbb
dec
adc
lahf
push
dec
ret
movsb
dec
push
sub
push
movsl
hlt
imul
and
rorb
sti
push
jne
mov
movsl
arpl
and
jno
dec
xor
call
sub
test
decb
cmpsb
inc
pop
sbb
push
imul
insb
sub
jb
clc
jle
sub
es
rcll
ret
jb
add
push
mov
inc
add
push
and
add
push
push
aaa
in
fs
inc
mov
pop
mov
jbe
xchg
and
movsl
lcall
rol
inc
mov
daa
addl
mov
lahf
or
push
jecxz
ja
inc
ss
sbb
jns
and
clc
sbb
push
dec
pop
movsl
xorb
fsubl
or
and
inc
pop
add
mov
sahf
xchg
fmuls
fst
pop
adc
imul
mov
jge
ret
mov
pop
sbb
outsl
mov
sbb
pop
test
scas
movsb
int3
imul
inc
es
pop
mov
orb
add
les
and
push
jmp
xor
mov
mov
es
jbe
mov
inc
fcomi
push
or
add
inc
aad
je
sub
std
dec
mov
inc
jnp
fisttpll
push
push
jmp
xor
sub
dec
pop
adc
dec
aam
xor
xchg
pop
lret
int
cmp
xor
push
ljmp
es
stos
mov
inc
jo
xor
sarb
xor
inc
fidivrs
es
xchg
mov
test
cwtl
lea
mov
insb
in
enter
aas
dec
sub
mov
fnstenv
test
adc
adc
dec
xor
mov
push
mov
dec
gs
loop
xor
test
push
mov
movsl
jg
sub
test
inc
sahf
mov
xchg
or
cli
addr16
fiadds
and
push
imul
adc
sub
dec
out
cmpsb
jmp
cwtl
mov
xchg
aaa
jg
movl
cli
loop
mov
sub
xor
add
je
shrb
inc
faddl
loop
aad
add
xchg
and
xor
xlat
ljmp
in
cmp
mov
movsb
mov
mov
rol
mov
jne
shlb
and
sbb
ret
xor
pop
jle
cmc
sub
je
sahf
movsb
fsubs
movsb
pop
movsl
mov
and
dec
inc
add
sahf
and
jns
popf
out
cmpsb
cmp
ds
dec
pop
add
lret
xrelease
repz
fcomip
xorl
mov
jns
imul
pop
adc
push
pop
jnp
je
mov
jae
mov
pop
sbbl
jmp
xchg
mov
lahf
cmc
push
pop
pop
push
mov
cmpsb
jnp
jns
mov
stos
sub
lods
jg
cltd
cmp
inc
fnstenv
in
adc
cmp
repnz
dec
cmp
mov
xchg
jo
es
cld
xchg
insl
inc
out
mov
faddl
rol
lods
stos
insb
mov
popf
or
movsl
cmpsb
data16
fld
mov
push
and
pop
lret
outsl
clc
add
xor
or
mov
pop
xor
and
xor
rorl
inc
dec
cmpsl
sbb
and
dec
inc
adc
mov
leave
push
and
and
aas
sbb
test
sub
sbb
es
pop
arpl
stos
std
xchg
xor
int3
enter
cmp
outsl
inc
cmpsb
xor
jno
dec
dec
lods
inc
adc
and
xlat
mov
hlt
mov
je
xchg
cmp
cld
xchg
adc
inc
push
xchg
dec
mov
rol
cmc
aaa
mov
rcr
xchg
dec
sbb
sub
popf
jno
xor
sbb
mov
lds
fs
fdivs
mov
stos
ret
ror
rolb
adc
outsl
xor
outsl
or
mov
cmpsb
add
mov
outsl
mov
stos
sahf
jmp
daa
push
xor
loop
xorl
inc
addb
inc
pop
xchg
sbb
mov
xchg
aaa
xor
jl
adc
mov
cmc
pop
adc
push
mov
xchg
ljmp
filds
adc
lret
ljmp
mov
mov
jb
das
xor
push
sub
cltd
and
pop
leave
lds
neg
pop
nop
idivl
and
xchg
cli
cmpsb
inc
adc
enter
xor
fldl
sub
int
roll
fwait
stos
cmp
xchg
mov
and
jae
inc
mov
pop
add
add
push
jecxz
and
ficoml
inc
pop
push
es
dec
stos
das
in
add
sub
es
and
jno
in
in
mov
test
scas
testb
cs
jl
mov
stos
add
lret
subb
pop
adc
inc
sbb
js
and
sbb
cltd
mov
repnz
mov
fcoml
inc
movb
leave
insl
leave
bound
or
mov
into
mov
xor
repz
cmp
shlb
call
fadd
and
mov
add
jbe
pop
mov
cmpsb
scas
lcall
lea
push
mov
push
out
mov
in
loopne
cs
insb
mov
jb
mov
push
popa
xor
jl
mov
sbb
clc
xor
add
sbbl
xor
dec
jbe
dec
cwtl
ljmp
mov
loop
out
in
xor
xchg
mov
xchg
fisubl
popa
add
jae
insl
repnz
dec
mov
pop
sub
hlt
sbb
jbe
bound
sub
jo
push
aaa
cmp
jle
arpl
push
out
push
cltd
xor
sbb
dec
mov
push
jbe
pop
mov
pop
inc
sub
dec
lahf
scas
mov
in
adc
test
dec
aaa
mov
and
jno
popf
call
push
lea
stc
pop
mov
push
loope
mov
shlb
inc
add
repz
xchg
fdivp
shrl
jge
mov
mov
xor
fstps
stos
dec
mov
rorb
xor
sbb
pop
xchg
icebp
and
xchg
subb
lahf
xchg
lret
xchg
jo
xor
std
repnz
inc
fistl
scas
cmc
xchg
mov
das
movsb
fs
mov
in
lcall
push
out
jns
insb
sbb
int
push
sub
or
ss
cwtl
sbb
xor
adc
mov
and
loopne
xchg
mov
nop
xchg
dec
iret
cmp
pop
test
out
jnp
stc
movsb
mov
das
fadds
stos
xorl
movsl
in
sub
rolb
jbe
or
jmp
out
push
or
mov
mov
scas
add
inc
adc
lret
inc
sti
sub
gs
cmp
in
cwtl
xor
sbb
ds
cmp
out
or
stos
imul
cmp
mov
loopne
sub
cmp
sbb
push
fisubrl
mov
sbb
ret
xchg
lods
imul
xchg
in
call
repnz
cmp
push
pop
das
stc
lds
or
divl
sub
and
mov
inc
por
and
enter
cmp
jge
pushf
aaa
xor
outsb
fnstcw
dec
mov
pop
and
cmp
push
xor
push
sbb
shr
test
jle
call
pop
lea
or
or
inc
pop
notb
ds
lods
cmc
mov
cmpsb
daa
pop
addr16
arpl
mov
insl
shl
daa
push
or
jbe
push
mov
dec
not
inc
xor
fsubrp
sbb
inc
sbb
or
or
test
cld
sub
push
push
inc
jns
cmpsb
fs
mov
xlat
inc
insl
or
cmpsb
clc
cmp
pop
mov
push
mov
fwait
or
in
orb
movl
and
inc
and
cwtl
std
je
sbb
adc
jo
sbb
jo
mov
cld
std
popa
jmp
lcall
and
dec
stos
cmp
cld
add
les
sbb
lods
dec
mov
es
push
lds
movsl
insl
scas
cld
push
in
push
inc
scas
mov
push
test
cmp
mov
movsb
into
mov
in
mov
adc
adc
call
repz
sub
or
sub
cmc
jbe
or
mov
xchg
das
cmpsb
subl
adc
outsl
and
or
fsubr
mov
xor
mov
inc
push
mov
sbb
add
mov
es
inc
pusha
fdivrp
outsb
inc
mov
sub
inc
stc
mov
sahf
pop
push
lods
jns
xchg
push
pop
or
fidivs
ljmp
xor
jg
outsb
or
and
rcrb
cmpsb
pop
jne
into
cmpsb
imul
sub
mov
cmp
dec
test
inc
das
inc
shlb
xchg
js
xor
xchg
in
and
dec
cmp
fs
jne
leave
inc
jge
lcall
jns
jbe
and
out
sub
sahf
es
pop
mov
jb
xor
mov
or
mov
pop
inc
fadd
call
xor
xchg
sub
xchg
les
into
fdivp
mov
mov
mov
faddl
inc
sub
push
ss
outsb
sub
mov
mov
mov
scas
add
lahf
xor
lds
add
sub
subl
or
nop
add
adc
adc
lret
les
aaa
and
hlt
mov
and
in
fsubl
push
aam
mov
cmpsl
mov
in
out
loop
xchg
std
mov
pop
clc
add
lea
movsb
repnz
add
es
cmp
push
sub
test
push
lock
xor
insb
into
mov
mov
rcrl
mov
ja
jl
jb
pusha
cltd
push
cmc
insl
lea
fcomps
adc
out
sub
or
and
je
or
sub
and
cs
mov
aaa
or
fnstsw
mov
and
mov
jle
clc
adc
cmp
and
icebp
gs
repz
mov
push
mov
sbb
cmc
pusha
repnz
push
jnp
das
std
mov
cmpsb
add
outsl
inc
xor
popf
sbb
mov
or
mov
mul
and
sbb
cmpsb
lcall
sbbl
and
popf
popf
and
sub
jne
mov
and
add
rorb
cmp
sbb
cmp
roll
hlt
fwait
inc
sbb
or
push
lods
pop
add
mov
jmp
inc
mov
mov
xor
scas
lods
cltd
xor
fsubs
shr
add
int3
aaa
es
mov
sub
push
mov
mov
xor
push
iret
insb
dec
and
cmp
pop
leave
inc
push
mov
daa
scas
call
add
aas
mov
adc
inc
test
add
cwtl
fst
xchg
dec
leave
ret
aad
in
mov
cmp
push
push
jno
and
repz
cmp
inc
mov
iret
cmc
es
mov
cwtl
gs
cmpsb
push
stc
cmp
mov
shl
fcoms
inc
add
mov
out
ss
sahf
mov
mov
sub
addr16
dec
and
jb
les
push
and
lods
movsl
push
mov
mov
es
sub
xor
inc
mov
es
insl
jmp
xor
call
into
decb
xor
add
push
lret
fisubs
pop
shrl
stos
mov
bound
adc
sbb
pop
ljmp
stos
aaa
mov
or
mov
cmp
xchg
push
or
and
cmp
andl
mov
push
and
iret
mov
push
jno
imul
in
pop
sbb
dec
jle
dec
inc
ljmp
add
inc
das
mov
and
popf
mov
test
insb
cmp
and
push
fisubrl
out
adc
add
and
jnp
sbb
inc
ds
enter
push
bound
in
dec
inc
add
xchg
call
je
ficomps
inc
aas
fucom
fsubs
xchg
inc
cmpsl
insb
shll
xchg
or
lret
inc
mov
jnp
xor
mov
incl
lret
rol
sbb
jnp
inc
xor
cld
mov
mov
jl
mov
mov
loopne
xchg
pop
loope
inc
or
dec
incb
mov
mov
cs
add
xor
test
inc
test
push
inc
mov
es
fs
enter
out
lods
sub
xchg
dec
hlt
push
mov
scas
testb
adc
shrl
pop
cmp
fdivp
mov
mov
adc
mov
ret
cmp
sbbb
sarb
int
mov
cmpsb
into
jo
pop
pop
adc
mov
mov
or
xor
cmpsb
fmul
adc
mov
test
sub
cmp
pop
sub
xor
dec
dec
shlb
ds
or
push
and
sbb
leave
push
bnd
cmpsb
pop
inc
pop
outsl
adc
in
aaa
and
sahf
scas
daa
jge
push
xorl
mov
sbb
adc
out
dec
aam
lods
dec
xchg
adc
mov
pop
ffree
mov
das
es
mov
lahf
addr16
js
test
hlt
pop
cmpsb
mov
ret
pop
sub
pusha
sub
into
adc
or
cld
es
mov
inc
aam
and
and
fnsave
mov
pop
jae
adc
jns
jbe
and
jns
lock
mov
fisttpl
adc
xor
xor
dec
cmp
mov
movb
adc
mov
movsl
lea
aam
setae
xchg
push
mov
test
cmp
mov
lcall
add
pop
jg
inc
sbb
jecxz
pop
idivl
jnp
popf
addr16
cmp
inc
jmp
dec
cs
loop
push
lods
mov
dec
mov
mov
mov
inc
push
test
adc
push
mov
test
mov
dec
and
inc
jo
mov
push
inc
or
inc
push
inc
xchg
call
or
pop
int3
movsl
dec
dec
ds
jmp
cmovle
dec
mov
mov
push
xor
add
cmp
outsb
dec
fiaddl
add
inc
xor
inc
dec
adcb
mov
cmp
mov
kaddb
mov
arpl
pop
fdivr
pop
lock
mov
pminub
aas
fwait
ljmp
sbb
fcmovnb
pop
sahf
inc
and
push
mov
dec
mov
movsl
fiadds
dec
pop
nop
mov
mov
add
push
inc
das
enter
je
pushl
push
jns
scas
imul
loope
pop
lods
jmp
cmp
int3
scas
adc
add
arpl
jecxz
andb
sbb
out
jbe
mov
movsl
ljmp
mov
aam
cld
xor
xor
cmpsb
xchg
fwait
xor
mov
mov
addr16
mov
divl
sahf
mov
ret
loope
imul
ljmp
insl
dec
int3
in
and
movsb
push
and
add
imul
lea
repnz
jmp
push
lods
idivb
outsl
lock
jno
xor
xchg
push
outsb
sbb
scas
jno
dec
push
pop
mov
in
sub
lods
push
pop
or
push
mov
mov
movsl
mov
inc
push
cmp
add
dec
and
stc
adc
jo
pushf
adc
and
mov
push
cmp
js
mov
sub
cmp
les
loope
into
mov
dec
push
inc
jne
test
inc
std
lock
out
lret
arpl
fadds
lea
cmp
test
cwtl
je
pop
mov
les
in
sub
mov
mov
mov
les
lahf
sbb
mov
rcrl
cmp
dec
jecxz
jo
test
mov
xchg
jmp
clc
test
test
aas
and
xchg
mov
incl
or
mov
in
pop
adc
sbb
outsl
cmpsb
lahf
jmp
pop
xor
movsl
push
jne
dec
sti
mov
mov
insl
in
test
mov
xor
mov
and
mov
testl
dec
fstps
mov
pop
sbb
jecxz
es
test
jecxz
outsb
mov
pop
loop
dec
pop
sub
data16
sub
and
fldl2e
pop
test
lret
test
sarl
adc
notl
xor
in
mov
mov
cmp
cmpsb
cmc
in
cld
addb
ja
aad
shl
movsl
arpl
mov
out
mov
mov
and
popa
icebp
pop
xlat
inc
daa
insl
in
adcl
push
cwtl
test
iret
xchg
cmpsb
xchg
xchg
cmp
daa
es
inc
nop
and
gs
clc
xor
dec
repnz
cmp
fldenv
stc
fs
push
inc
cmp
test
inc
xor
push
adc
mov
jne
mov
sti
mov
movsb
mov
xchg
jg
pop
or
call
popf
mov
lahf
mov
nop
ret
pusha
aad
push
mov
addl
sbb
ret
push
push
jp
mov
bound
imul
jmp
mov
es
fidivrs
adc
loope
out
icebp
push
std
fistl
cmpsb
pop
adc
std
mov
js
dec
pushf
imul
test
inc
mov
sub
sub
jg
sbb
xor
adc
subb
jmp
scas
movsb
mov
fisttps
adc
mov
ret
and
jge
adc
dec
and
xchg
mov
outsl
repz
es
cmp
mov
inc
cwtl
mov
repnz
sbb
test
movl
les
dec
xor
cmp
mov
mov
sbb
push
arpl
xor
inc
sti
xor
dec
cmp
popf
stc
inc
xor
in
lret
mov
sub
cmpsl
popa
add
adc
sbb
inc
mov
mov
mulw
ljmp
cmpsb
sti
cmpb
add
es
std
cmp
ds
scas
xchg
das
imul
decl
testl
cmp
push
movsb
call
std
lcall
and
lods
jne
ja
je
dec
pop
ret
je
cwtl
xor
imul
cmp
int3
fs
push
mov
xchg
ss
call
ret
sbb
and
lahf
fwait
inc
dec
test
lods
xor
cmp
out
xacquire
inc
jg
adc
mov
dec
inc
xchg
and
shrb
pop
es
xor
int
fadds
lds
push
adc
mov
stos
inc
mov
fsubrl
cmp
mov
xchg
xor
add
inc
popa
and
mov
movsl
sub
inc
cmp
in
jne
stc
jbe
mov
scas
out
in
jbe
pop
push
in
imul
xor
mov
test
add
and
jle
lods
cmp
cmpsl
psrad
fs
aam
cli
je
aas
mov
lret
jnp
out
dec
fisubl
cmpsb
pop
fwait
xchg
leave
leave
push
xor
mov
das
mov
inc
jo
arpl
lea
in
jge
jl
cmpsb
add
sub
insb
inc
inc
mov
pop
dec
clc
dec
jne
and
fst
push
ret
bound
test
fs
lret
lds
xor
cwtl
ud0
inc
or
lds
scas
push
fsubrs
and
dec
jp
jmp
cwtl
rorl
clc
aas
inc
inc
insl
int
popa
cmp
jae
or
clc
inc
mov
push
outsb
add
mov
cld
pusha
fildl
hlt
adc
scas
add
xchg
mov
jo
push
push
mov
mov
pop
inc
mov
push
out
or
cmc
insl
xor
movsl
or
push
push
mov
mov
mov
xchg
jle
cmpsb
lds
inc
pop
mov
and
fdivs
and
jg
addr16
cmp
mov
jne
push
add
cmpsb
lea
pop
ret
loop
outsb
mov
leave
gs
mov
scas
faddp
and
jo
sahf
xchg
addr16
lds
jp
inc
inc
and
test
in
push
and
mov
lahf
pop
push
aad
inc
cmp
iret
popa
cwtl
out
sbb
cmp
sbb
dec
je
jns
in
or
mov
and
inc
adc
add
stos
outsb
sub
xchg
aas
adc
and
mov
and
sub
dec
cs
out
xchg
push
inc
pavgb
arpl
or
mov
and
pop
inc
push
insl
mov
and
adc
aaa
es
dec
dec
mov
push
or
mov
nop
out
jle
cmp
subb
outsb
das
jae
and
movsb
and
and
lods
test
shll
or
arpl
popf
push
mov
push
mov
pop
lds
or
lds
sbb
pop
cli
dec
loop
mov
and
jl
pushf
xchg
adc
imul
mov
sub
js
push
cs
addr16
push
adc
lret
lds
mov
std
push
pop
sbb
sbbl
xchg
dec
into
lods
loopne
sub
cmp
pop
lods
adc
loopne
sbb
into
push
mov
imul
pop
lret
jns
gs
es
fstpl
inc
cmpl
mov
mov
adc
mov
jo
ret
xor
fs
adc
cmp
pop
and
imul
lock
loopne
ds
add
push
cmc
pop
test
xchg
sub
jle
sbb
ss
scas
push
inc
aad
adc
dec
repz
xchg
inc
dec
fldcw
jecxz
fwait
inc
pop
ret
clc
lret
idiv
jnp
jno
mov
sub
je
fidivl
dec
push
imul
cmp
in
mov
movsl
aas
rcrl
int
repz
sbbb
push
cld
cmp
js
sbb
in
cmpsb
dec
xor
or
into
dec
adc
fistps
mov
cmp
dec
jmp
dec
mov
ret
xor
xchg
sbb
lea
xchg
cld
dec
call
cmc
jmp
mov
cmp
xchg
lods
stc
xor
add
cmpsb
stos
sbb
and
pushf
mov
repnz
imul
push
mov
adc
sbb
adc
mov
pop
jne
or
sahf
js
mov
pusha
cmc
lods
push
pushf
adc
or
in
popa
adc
push
les
lret
in
mov
and
jbe
xor
dec
mov
jmp
sbb
pop
inc
ffree
mov
xchg
movsl
add
xor
mov
inc
add
mov
arpl
mov
daa
mov
or
jns
inc
mov
jmp
add
leave
mov
fldcw
les
pop
js
inc
add
sub
mov
jmp
sub
das
clc
shll
inc
mov
pop
mov
mov
scas
xor
mov
cmc
fdivp
add
rcll
or
ror
push
inc
nop
aad
cmpsl
ss
jge
test
enter
pop
xor
addl
cmc
and
inc
xor
iret
jmp
ss
jg
mov
arpl
push
push
cmp
pushf
adc
iret
sbb
mov
xchg
loope
lds
push
add
jo
mov
mov
pushf
rol
xor
sbb
in
mov
repnz
iret
and
imul
lret
sub
repz
add
xor
sbb
cli
push
stos
mov
outsl
imull
pop
pusha
cmp
es
push
push
pushf
mov
scas
sub
call
mov
pop
stos
das
stos
jb
or
in
sahf
jb
shlb
inc
outsb
cmp
sbb
cmpsl
es
cmpsb
sbb
pop
inc
mov
in
in
push
or
pushl
movb
xor
sti
scas
sub
mov
daa
mov
sbb
push
jbe
int3
repz
sbb
insb
xor
xor
sbb
fs
je
push
mov
pop
ds
inc
cld
in
lock
add
push
out
add
add
and
rcr
inc
inc
push
ds
and
sbb
dec
mov
sbb
mov
les
mov
sub
xor
fildll
pop
mov
jo
loope
pop
add
es
out
push
pop
xlat
sub
pop
dec
sarb
jne
vpmullw
or
jmp
push
sbb
roll
xor
sub
fisubrs
popa
loope
jmp
leave
out
inc
inc
push
arpl
jbe
mov
push
push
sbb
cmp
cmpsb
mov
xchg
xor
cwtl
xchg
xchg
stos
mov
arpl
imul
push
inc
ret
push
je
jmp
nop
mov
jp
inc
inc
insl
or
xor
sbb
and
xchg
pop
test
cli
lock
repnz
mov
insb
nop
ret
mov
jl
add
push
xor
sar
xor
sbb
scas
sbb
pop
adc
mov
popw
and
loope
in
lods
pop
aad
iret
pop
stc
push
lds
clc
inc
int3
lods
inc
xchg
aaa
mov
xchg
mov
fisubrl
inc
and
into
int
and
gs
push
cltd
dec
mov
outsb
ffreep
mov
sarl
popa
sbb
push
or
xchg
mov
andl
ja
mov
push
fmull
dec
push
addl
sub
pop
fnstenv
dec
fsubp
xchg
add
cmpsb
push
mull
in
xchg
loop
mov
ds
test
sub
pop
sub
arpl
sbbl
pop
mov
pop
mov
dec
es
hlt
cmp
dec
pminub
js
push
mov
jg
imul
push
jg
faddp
mov
jg
mov
jbe
jne
leave
push
pop
dec
sti
or
ret
push
addl
cmpsb
lahf
bound
das
mov
mov
mov
js
stc
les
fistps
adc
stos
mov
mov
push
loopne
sbb
mul
outsl
push
cmpsb
add
andl
mov
in
stos
mov
daa
mov
xchg
mov
lahf
jb
movsl
mov
out
lds
xor
cmp
mov
mov
cmpsb
jge
inc
push
pop
adc
lahf
sub
popa
and
stos
mov
push
jne
fs
mov
lahf
fisubs
push
mulb
mov
jp
adc
inc
dec
mov
cmp
mov
test
shlb
push
adc
or
cs
and
inc
xchg
popf
mov
xor
mov
or
dec
je
cli
lcall
in
push
insl
imul
dec
inc
mov
outsl
push
and
cld
bound
jmp
cs
xor
pop
xchg
ja
push
pop
in
dec
cli
xchg
int3
ja
cmp
xor
stc
push
cmpsb
sbb
xor
dec
adc
xor
das
pop
es
fs
mov
pop
sbb
push
sbb
clc
xlat
and
leave
dec
popa
es
inc
xlat
mov
and
aad
fnsave
in
and
xor
sub
adc
push
es
inc
loop
xor
or
andl
xchg
int
dec
adc
or
mov
es
xchg
fwait
add
test
sahf
cmp
xchg
repz
xor
fisttps
sbb
pop
out
add
gs
clc
daa
outsb
xor
movsl
icebp
jae
or
jl
lds
pop
lods
lcall
adc
pop
or
dec
xchg
dec
sub
repnz
sbb
adc
test
mov
mov
test
inc
xchg
bound
inc
ds
addr16
fwait
and
inc
les
sbb
rcrb
or
cld
sbbl
pop
jbe
clc
mov
pop
rcrb
xchg
icebp
adc
loop
adcl
xchg
cwtl
xorb
nop
push
aam
jne
dec
lds
xchg
pop
fmull
mov
arpl
inc
jnp
lahf
imulb
mov
inc
pop
daa
and
push
push
mov
xchg
inc
inc
mov
loop
push
jns
sub
sbb
cmp
test
addr16
aas
pushf
mov
enter
gs
jne
and
and
add
sub
pop
mov
lods
cmp
push
mov
daa
aaa
es
xchg
xchg
ret
or
dec
je
sbb
jmp
dec
mov
ss
cli
test
inc
roll
je
xchg
loopne
lods
popa
pushf
mov
cmp
adc
sub
add
in
and
cmp
imul
mov
in
pop
xchg
add
cmc
lods
sub
sti
mov
xor
mov
and
dec
lods
jns
mov
sbb
inc
xor
jecxz
popa
cmp
fnstenv
lcall
sub
xor
addb
push
push
xor
xchg
cwtl
mov
ds
adc
fisubrl
push
jmp
filds
std
cltd
xchg
and
mov
lret
sbb
inc
in
mov
adc
add
and
or
cmpsb
sahf
lods
jg
mov
xchg
pop
and
js
rol
mov
mov
stc
mov
cmpsb
jbe
nop
adc
xor
add
sahf
aaa
movsb
push
inc
cmpsb
arpl
inc
xchg
outsl
rcrw
mov
xor
mov
orb
jle
sub
les
xchg
inc
jns
int
fstpl
in
addr16
in
lds
call
js
mov
push
rolb
push
fwait
sbb
xor
jns
out
mov
movsb
sbb
push
test
jno
into
cmp
xchg
shrl
xchg
out
xor
rorb
outsb
sub
lret
icebp
sub
xchg
test
lcall
ljmp
add
adc
xor
adc
push
push
arpl
movb
or
xchg
in
into
sbb
inc
js
and
fistl
stos
inc
xchg
mov
sti
repnz
int3
nop
jbe
push
cmp
add
hlt
cli
les
and
or
fidivrs
insb
shll
cld
inc
sub
and
pop
adc
sub
movsl
or
and
mov
dec
add
pop
pop
fcomps
xchg
mov
mov
in
shrl
daa
int3
and
xchg
sbb
movb
int
test
addr16
fdivs
jp
cmc
dec
add
stos
shll
mov
adc
mov
pop
ss
pop
popa
orb
imul
jno
repz
inc
mov
jno
push
mov
mov
sub
es
cmp
xor
in
mov
pop
mov
lret
out
sbb
dec
fisubl
mov
xchg
mov
cmp
in
movsl
lahf
sbb
shlb
loope
pop
dec
pop
and
pop
fsubs
sub
mov
or
push
sbb
ret
add
and
mov
mov
mov
lds
lods
push
jecxz
xchg
mov
mov
es
push
test
das
int
fisubrs
inc
cmpl
add
adcl
orb
enter
in
sbb
push
xlat
mov
pop
xchg
mov
ret
das
daa
sahf
jne
sahf
es
xor
repnz
mov
stc
js
jbe
es
gs
jo
mov
push
or
or
int3
sarb
mov
int3
mov
loopne
es
dec
inc
sbb
rorb
lret
jge
fwait
pop
sub
or
mov
xchg
push
and
movsl
cmp
lods
mov
out
mull
xor
fnsave
and
dec
inc
hlt
add
sub
cmp
stos
sbb
es
jl
fprem1
enter
dec
xchg
adc
fdivrl
lea
das
std
dec
inc
hlt
and
int
or
sub
outsb
xor
lcall
cmpsl
add
sahf
cld
add
hlt
outsb
xor
cmp
ret
shrl
test
add
mov
add
mulb
sbb
pop
shrl
mov
popa
xor
dec
ret
sub
int3
xchg
pop
xor
mov
repz
adc
cmc
adc
mov
inc
test
clc
and
mov
movsl
mov
xor
add
xchg
test
xor
or
sub
sti
xor
ret
into
push
lock
in
test
push
pop
mov
cmpsb
ljmp
push
mov
sbb
lds
jae
je
adc
adc
sbb
mov
fistps
and
inc
mov
jno
data16
jle
inc
imul
or
gs
and
cmp
pop
out
sahf
push
push
mov
lds
sti
sbb
les
mov
fsubr
cmp
sbb
lds
bnd
xchg
std
scas
icebp
or
lds
xchg
inc
sub
jmp
sbb
xchg
pop
mov
leave
jne
and
movsl
sub
xchg
inc
cmpsb
adc
mov
aas
sbbb
xchg
cs
popf
mov
ret
xchg
and
mov
dec
test
ret
mov
jl
xchg
ret
inc
mov
scas
mov
lods
xchg
mov
and
cli
or
inc
adc
mov
bts
loop
fisubl
sti
je
jno
into
mov
popf
jae
mov
divb
fs
and
and
pop
jae
cmp
pop
icebp
mov
cmp
sahf
lret
push
leave
clc
mov
das
shll
mov
test
iret
xor
and
pop
sbb
pop
into
aaa
xchg
in
or
rcrl
jae
inc
cmpsb
fcmovbe
inc
leave
nop
mov
xor
jmp
into
pop
shll
adc
adc
lods
dec
xchg
ss
mov
sbb
in
cmp
push
icebp
lahf
pop
mov
leave
movsl
loop
ret
adc
mov
gs
cwtl
mov
inc
ja
pop
inc
jecxz
jbe
mov
inc
aad
fistpl
dec
es
in
hlt
add
ds
shlb
push
inc
popl
rorb
es
add
add
pop
pop
lds
movsl
popf
push
push
mov
and
ljmp
xor
pop
gs
stos
sti
or
es
sbb
xor
inc
pop
xchg
mov
mov
rcrb
popf
mov
mov
icebp
jnp
pop
mov
fcmovnbe
inc
ja
jno
inc
and
xor
sub
orb
jae
daa
and
jle
and
lcall
push
cmp
aaa
js
xor
pop
cmc
lea
or
daa
lock
ss
mov
inc
imul
xorb
xor
cmp
and
push
out
push
imul
add
dec
fistps
pop
xor
sbb
aad
mov
mov
add
in
mov
and
add
enter
mov
xchg
aas
and
xor
pop
arpl
ds
popl
popa
sub
and
push
inc
lods
cmpsb
orb
pop
sbb
es
pop
mov
and
xorl
adc
in
iret
mov
xchg
pushf
jns
fsubs
hlt
dec
iret
inc
xchg
jmp
lret
es
pop
push
mov
cmp
popf
lahf
leave
fadds
dec
xchg
mov
movsl
inc
fwait
push
dec
movsb
sub
xor
in
leave
or
push
lods
push
cmpsb
mov
cmp
inc
adc
xchg
xor
bnd
fildl
pop
aaa
movsl
and
jnp
scas
ds
jne
fadds
aaa
jmp
xchg
inc
pop
in
adc
inc
xchg
ljmp
pop
nop
inc
dec
sub
mov
int
ret
and
push
xchg
mov
mov
lods
scas
cmpsb
sub
pop
sbb
iret
aaa
mov
fists
mov
enter
jbe
dec
lret
decb
jbe
xor
cmp
out
xor
popf
mov
jp
int
dec
stos
out
xchg
cmpsb
fiaddl
nop
scas
fs
jnp
xchg
lcall
jnp
nop
cmpsb
ret
cmp
cmp
js
pop
clc
fbld
cmpsl
sbb
sbb
add
mov
jne
daa
cmpsb
jp
xchg
out
sub
xchg
adc
test
repz
jle
mov
inc
dec
repnz
repnz
lds
inc
sahf
pop
mov
int3
stc
sbb
push
and
daa
stos
xchg
es
aas
out
xorl
fnsave
pop
cmp
cmp
cmpsb
cmpl
das
icebp
xor
xchg
and
push
in
inc
mov
xchg
clc
or
cli
mov
out
inc
testl
psrld
xor
or
mov
inc
sub
aam
loopne
xor
std
test
xor
les
cmp
test
lock
mov
loope
mov
sub
and
sub
or
xor
cli
mov
fwait
data16
push
xchg
lds
in
mov
push
test
fsubl
lahf
into
loope
adc
pop
xchg
arpl
cmp
sbb
inc
dec
push
fnstcw
test
clc
xchg
or
ljmp
mov
adc
pop
xor
outsb
cmp
sub
nop
mov
xchg
xor
sti
mov
or
xor
pop
stos
int
push
mov
in
pop
movsb
out
sub
test
fcom
inc
enter
mov
out
insb
add
xchg
mov
icebp
push
jne
das
cmpsb
xchg
out
sbb
loop
cmp
sbb
jge
addr16
lgs
push
xchg
movl
sub
mov
and
mov
das
es
sbb
mov
dec
adc
inc
adc
mov
or
icebp
sbb
gs
mov
inc
leave
adc
push
scas
xor
xor
and
mov
lods
cmpsb
xchg
mov
xchg
mov
mov
and
les
inc
jg
pop
shll
daa
sub
pop
jmp
in
adc
stos
mov
mov
xor
sub
xchg
fs
test
or
jnp
mov
rcl
das
clc
adc
push
xchg
gs
insl
bswap
bound
shrl
stos
inc
xchg
cltd
xchg
stos
sbb
out
lock
cld
inc
lds
fadd
mov
dec
xor
cli
adc
push
inc
loopne
dec
inc
bound
dec
dec
cmpsb
scas
and
lds
cmp
js
push
lods
test
inc
ja
pop
pop
xchg
inc
aam
scas
pop
aas
adc
adc
rorb
in
jns
sahf
adc
adc
cwtl
add
in
mov
mov
mov
push
mov
jne
out
ret
cs
jnp
cmpsb
loop
popf
shrb
jmp
call
adcl
cmpsb
mov
sub
lods
xorl
sub
in
outsb
adc
xor
test
ss
push
mov
mov
xchg
mov
sub
xorb
cmp
mov
push
mov
ret
aas
jg
in
adc
pop
mov
imul
incl
fdivrl
and
incb
mov
cmpsb
shrl
and
addr16
xchg
out
es
out
add
ja
sbb
and
cmc
popa
sub
inc
jnp
movsl
xor
stc
mov
lea
inc
inc
mov
inc
pushf
adc
xchg
jg
xor
fstps
movsl
inc
test
sti
xchg
sub
mov
stos
fwait
rcll
in
mov
mov
push
sub
in
xchg
les
out
xor
mov
insb
sti
jg
add
or
adc
mov
leave
push
test
loope
mov
stc
iret
add
inc
dec
loope
mov
and
in
test
cmc
or
mov
adc
in
fwait
ja
jne
and
aas
xor
mov
cmp
inc
call
inc
jmp
sbb
subb
es
ss
shrb
xchg
clc
mov
shll
sub
es
das
dec
mov
xor
xchg
jl
push
mov
movsl
adc
lcall
loope
fwait
jbe
call
and
popa
push
pusha
jle
sub
out
pusha
popf
cmpsb
cmpsb
jns
arpl
les
out
call
jo
ret
clc
pop
fwait
xchg
mov
fmull
add
mov
inc
mov
mov
and
nop
cmp
sahf
sbb
jp
test
inc
and
ljmp
out
mov
shlb
out
dec
loope
aam
pop
mov
mov
push
pop
sbb
mov
xchg
xchg
jl
cmpsb
es
sub
pop
imul
clc
mov
shll
adc
and
clc
push
mov
es
cmpsb
insb
push
and
xchg
xor
sti
insl
fcmovnbe
add
lcall
xchg
or
decl
jo
add
sti
inc
sub
popf
ja
aas
push
jl
fsubl
fcomps
lea
lock
push
dec
loop
test
jmp
mov
mov
es
xadd
jp
xchg
shrb
lahf
ret
add
inc
xchg
aas
inc
shrl
and
lea
sbb
jo
daa
lahf
aad
fwait
or
and
sub
xor
mov
jl
mov
cmpsb
cld
jmp
int3
dec
xor
push
adc
mov
or
push
jecxz
and
xor
push
xchg
cmp
out
rol
mov
in
sub
lods
mov
arpl
sub
pop
js
js
push
mov
sbb
scas
mov
cmpsb
adc
divb
repz
sarb
lahf
into
mov
mul
je
mov
lea
in
inc
sub
pushf
sahf
imul
mov
jecxz
orb
addl
ljmp
inc
pushf
pop
or
imul
mov
and
inc
cli
ss
pop
popa
xor
mov
test
add
testl
push
and
rol
mov
testl
mov
mov
std
mov
movsb
jb
sbb
fsubs
imul
fbld
xchg
inc
inc
add
inc
mov
and
sbb
test
sub
sbb
pushf
lods
cmpsb
aas
xlat
adc
fimull
lock
pop
ret
pop
popf
xor
xor
outsb
sub
cmp
js
xor
jns
and
inc
addl
fcmove
dec
dec
add
and
or
sub
mov
xchg
test
inc
adc
movsl
cmpsb
das
xor
daa
sbb
lds
mov
ss
es
jbe
out
push
jo
mov
ficoms
xor
sub
sbb
xor
leave
fimull
fcoms
mov
pop
inc
adc
ret
xchg
test
mov
call
xorl
xchg
xor
out
pop
lret
cmpsb
push
insb
push
lea
dec
push
push
pop
cs
mov
push
xchg
hlt
jb
adc
fsubl
mov
inc
pop
mov
shll
scas
sbb
add
test
les
fnstsw
xor
out
cmp
mov
stc
ret
adcb
and
mov
pop
cltd
xchg
mov
xor
mov
sbb
pop
pop
test
cmp
daa
hlt
fwait
js
pushf
out
ret
xchg
lahf
cmpsb
aas
in
push
xchg
cli
mov
rcr
adc
subl
xor
jns
pop
cmp
and
xor
xor
int3
and
xchg
je
es
dec
adc
fists
xor
je,pn
xor
jle
push
in
rcl
ret
push
lock
add
adc
adc
mov
out
movsl
xor
mov
xchg
ds
popf
imul
mov
movsl
add
or
test
pop
add
and
sbb
dec
scas
aaa
movsl
add
and
lret
dec
lds
xor
xor
jae
sbb
sub
loope
push
lret
sub
add
test
jnp
sti
mov
xor
imull
aad
mov
dec
lret
imul
xor
or
mov
jns
pop
mov
es
xchg
bound
test
and
aaa
orl
sbbl
push
dec
inc
aas
xorl
sti
inc
add
lret
lods
frstor
daa
xor
adc
repz
aad
insl
outsl
mov
arpl
mov
adc
jp
cmp
xor
pop
rcrb
dec
dec
and
mov
in
rcr
orb
push
pop
dec
mov
and
mov
pop
lods
pushf
mov
les
add
sub
xchg
push
arpl
fcomps
int3
out
and
leave
adc
outsb
inc
movl
inc
movsb
xor
daa
mov
sarl
jbe
out
mov
mov
clc
pop
xor
mov
pop
clc
lods
xor
stos
repnz
int
stos
inc
jno
repnz
iret
stc
dec
inc
mov
dec
les
and
adc
xor
addl
sub
add
out
xchg
add
xchg
es
jno
mov
mov
adc
nop
mov
mov
mulb
cmp
lds
loope
pop
out
in
adc
and
repz
push
mov
inc
iret
or
dec
fiaddl
inc
lods
mov
xchg
testl
xchg
aas
rcrl
imul
in
jg
inc
mov
sub
inc
pushaw
fnstenv
push
and
xor
jge
mov
js
test
lahf
int
xchg
jne
insl
ret
dec
cmp
les
mov
push
pop
mov
xor
pop
scas
repz
or
mov
stos
push
mov
adc
aam
dec
in
inc
add
negb
and
mov
loop
test
mov
jbe
les
dec
bound
xchg
call
lahf
jp
dec
in
or
iret
xchg
mov
and
push
push
xor
enter
cmp
pop
pop
fisttps
rclb
repnz
mov
xor
dec
and
int
cltd
aam
imul
mov
xchg
or
cmpsl
dec
and
mov
and
outsb
stos
jae
ret
xchg
mov
inc
mov
jecxz,pt
push
test
add
or
push
shll
dec
sbb
dec
inc
outsb
inc
push
xchg
sbb
repz
lods
inc
sbb
dec
or
fbld
loope
inc
rcrl
shll
dec
jbe
movsb
xchg
mov
mov
lods
mov
mov
gs
cmc
mov
jl
pop
jecxz
scas
insl
movsb
das
and
test
mov
xchg
test
xchg
ljmp
dec
mov
mov
data16
orl
arpl
inc
push
dec
mul
test
xchg
stc
test
mov
sub
and
repnz
mov
pop
mov
pushf
std
inc
iret
mov
xor
jae
sbb
test
add
mov
lar
xchg
xchg
jecxz
ret
mov
sub
dec
xor
insl
inc
ds
xchg
pop
xor
xor
js
xor
mov
popa
jbe
push
js
cmp
jge
mov
jmp
xor
lds
lcall
mov
pop
lods
jnp
adc
mov
fs
jmp
movsl
xor
lret
scas
ja
movsb
sub
cmp
mov
xchg
pop
adc
cmp
inc
lret
shl
mov
outsb
movsl
in
inc
jbe
lahf
addl
ljmp
popa
and
cmp
sbb
and
lret
lret
and
mov
fnsave
xor
dec
inc
call
and
scas
aaa
mov
das
stos
push
arpl
repnz
out
inc
out
xor
cmpsb
mov
mov
xor
fistpl
rolb
loope
jb
jo
add
push
sub
mov
rol
jno
jle
inc
pop
or
mov
je
fldl
popa
push
subb
xchg
mov
sti
mov
shr
test
pop
and
mov
mov
jmp
lahf
dec
inc
and
mov
push
insb
jp
xor
lds
sbb
pop
aas
lea
sahf
sub
test
jbe
or
jb
mov
push
inc
lahf
xor
mov
fwait
pusha
movsl
cmc
mov
inc
ljmp
out
inc
mov
lea
dec
rolb
fsubl
xor
sub
mov
fldenv
pop
push
xchg
ds
insl
xor
rcl
mov
or
xor
dec
cmpsb
data16
mov
or
cmpsb
xchg
sarl
and
and
mov
idiv
stc
jge
aad
mov
aas
je
add
dec
adc
and
xchg
dec
lcall
sti
xor
cli
daa
lea
dec
adc
popf
bound
out
test
cmp
and
pop
pusha
test
ret
movsl
push
and
pop
push
iret
sub
arpl
sub
ss
es
dec
push
mov
xor
test
inc
sub
stos
sbb
mov
pop
xor
inc
imull
call
addr16
test
add
and
xchg
int
ss
push
mov
mov
xor
xlat
sbb
or
mov
clc
fdivr
jecxz
pop
mov
fisttps
out
test
aaa
and
or
es
xor
mov
sbb
loope
mov
push
cmp
ja
gs
cmp
into
pop
mov
sub
movsl
leave
and
push
xor
or
push
jecxz
mov
shlb
inc
loope
fldl2e
loop
cmpsb
iret
out
hlt
je
sbb
xchg
jnp
xor
in
cmpsb
pop
dec
xlat
mov
ja
out
std
dec
and
popa
cmp
shlb
test
inc
mov
dec
dec
aam
dec
mov
lea
mov
int3
mov
aad
fidivl
popf
es
and
clc
push
or
and
stc
ret
and
push
pop
enter
lock
mov
movsb
arpl
sbb
insb
mov
shr
and
loop
cmp
test
pop
shl
adc
mov
mov
xchg
int
xor
dec
iret
mov
push
inc
pop
popf
ljmp
dec
mov
dec
pop
xor
out
cmpsl
stc
add
xor
js
cmovne
repz
inc
xor
cmp
jle
mov
ss
adc
xchg
scas
mov
call
and
xor
ret
pop
leave
lods
stos
fwait
adc
and
outsl
aaa
jae
inc
ret
push
sbb
inc
or
wbinvd
and
test
xor
lds
outsl
lea
jecxz,pt
and
push
xchg
inc
loop
lock
jmp
mov
jp
cld
pop
and
cmp
loope
xchg
inc
adc
and
mov
xchg
sarl
push
cmp
rcr
bound
push
andb
sub
ret
cmp
adc
popa
xor
push
rorl
xor
xor
inc
mov
cmp
mov
movsb
pop
xor
mov
jb
filds
push
out
sbb
das
data16
add
daa
xor
pop
mov
sbb
lret
data16
movsl
pop
enter
movsl
xor
adc
add
addb
inc
mov
xor
inc
xchg
outsl
lds
cmpsb
das
pop
or
mov
enter
fcomps
add
cli
out
xor
cmp
leave
xchg
jle
imul
movb
xor
pop
pop
cmp
mov
sub
lock
mov
or
sahf
add
loop
addb
lock
shlb
inc
frstor
out
or
push
repz
inc
aas
imul
sbb
mov
out
pushw
adc
loop
movsb
push
pop
jnp
cmc
mov
inc
jbe
stos
cli
mov
mov
lahf
test
mov
outsb
stc
pop
mov
cmpsb
dec
rorl
jne
rcrb
xchg
popf
test
xchg
addr16
mov
mov
mov
mov
dec
pop
mov
scas
addl
pusha
jle
shlb
aas
bound
mov
outsl
push
out
mov
hlt
mov
in
test
mov
push
jbe
or
jg
stos
addl
inc
inc
ret
cmp
add
and
xchg
dec
cmpsl
into
fs
sub
inc
or
jbe
push
xor
pusha
mov
arpl
cmp
cs
mov
out
adcb
mov
mov
jne
pushl
adc
cltd
sbb
sbb
lock
mov
lock
shlb
rol
adc
mov
mov
mov
ss
stos
xchg
repnz
mov
and
add
mov
jnp
xor
hlt
repnz
lds
sarb
adc
xchg
aad
dec
sub
ficompl
xchg
mov
mov
mov
es
shll
test
fcmovb
xchg
xor
dec
jmp
mov
lret
aam
imul
jae
sub
inc
dec
adc
les
sub
xchg
adc
inc
adc
cwtl
iret
fmul
xor
imul
adcb
xchg
loop
outsb
xor
xor
popa
ret
xor
sbb
or
cmpb
mov
dec
loope
xchg
pop
fisubl
shlb
mov
jl
dec
in
lret
pop
mov
cmpsb
jo
and
btc
in
mov
leavew
push
and
fistpl
lret
push
lods
fptan
mov
inc
mov
jl
shll
and
sub
mov
xchg
movsl
cmp
leave
mov
es
jne
fistl
hlt
clc
in
aas
xor
push
lods
push
cld
inc
movsb
movsl
xor
jmp
imul
out
jo
cmpsb
loope
mov
jno
subb
cmc
test
xor
push
in
out
arpl
inc
sbb
jns
lds
inc
lds
movsb
inc
xlat
cmpsb
outsl
jle
or
push
push
in
pop
push
dec
mull
scas
and
xor
pop
cmpsb
gs
cmpsl
push
les
iret
push
stos
pop
pop
add
in
orl
mov
div
mov
bound
jl
popf
ds
xchg
push
mov
xchg
neg
mov
pop
mov
jno
decb
push
and
push
mov
mov
clc
aad
push
jl
sub
mov
in
movsl
add
out
sbb
mov
mov
xor
cmp
pop
movsb
test
es
lods
pop
test
call
mov
jmp
cmc
lds
or
xchg
adc
sub
adc
popf
xor
sub
sbb
dec
in
and
loope
mov
aas
aaa
xor
outsl
cmp
dec
ljmp
mov
es
insb
jl
sbb
bound
xor
pop
xchg
mov
jge
dec
adc
stos
lret
jne
rolb
imul
test
add
ds
jb
movswl
inc
mov
aaa
cmc
sbb
shll
push
adc
out
iret
mov
push
icebp
mov
adc
stc
dec
cmpsb
pop
jb
jno
dec
sbb
sub
dec
push
es
push
pusha
inc
xadd
popa
mov
in
out
inc
xchg
push
mulb
sbb
repz
icebp
pop
out
inc
ret
or
ret
pop
mov
aam
xchg
jp
dec
inc
fdivr
inc
adc
cmpsl
inc
pop
push
and
cmc
and
mov
scas
cmp
pushf
xor
sub
ljmp
fisttpl
jno
sbb
cmp
mov
faddl
sbb
adc
call
xor
lods
mov
pcmpeqb
out
fimuls
pop
cs
adc
cwtl
xchg
outsb
loopne
aaa
pop
cwtl
les
add
xchg
mov
insb
and
pop
enter
adc
mov
pop
stos
cmpsb
adcl
or
mov
test
sbb
adc
or
pop
out
or
aad
scas
testl
inc
leave
mov
inc
scas
dec
repz
xchg
lds
notb
pusha
xchg
push
xor
loope
inc
or
adc
pop
insb
inc
xchg
xchg
idivb
cmp
cmp
js
je
movsb
sub
mov
clc
outsb
mov
push
jb
out
and
dec
stc
std
imul
xchg
xchg
imul
std
push
out
cmp
add
push
out
fidivrl
inc
data16
frstor
mov
fst
aaa
ljmp
push
stos
lret
pop
scas
rcrl
inc
xchg
dec
inc
sub
jno
pop
or
push
mov
xchg
int3
mov
outsl
inc
repnz
xchg
hlt
bound
std
adc
and
and
dec
loop
jmp
xor
leave
add
push
ja
and
jmp
cltd
in
pop
mov
or
xchg
adc
pop
sbb
push
adc
movsb
xchg
divb
mov
sub
mov
and
mov
mov
and
sbb
push
jnp
data16
mov
aam
add
sbb
jae
fldenv
or
sbbb
fstps
mov
jnp
jno
int3
cmp
mov
repnz
pop
or
cmp
mov
mov
sub
sbb
dec
lds
cmp
inc
je
and
add
loope
pop
loopne
dec
in
cmp
dec
jbe
daa
xchg
test
das
xchg
dec
mov
rcl
lock
pop
dec
cmp
dec
push
loopne
aam
adc
lds
push
ja
bswap
xorl
ret
pop
fdivrs
cmpsb
mov
cmc
or
popa
sub
fwait
mov
dec
out
jo
mov
xchg
lahf
cmpsb
xor
int
adc
fisubrs
leave
sub
sbb
popf
lods
push
loopne
scas
rcr
mov
pop
lret
or
pop
lahf
cmp
inc
mov
loopne
fs
push
mov
daa
aaa
mov
or
add
dec
mov
push
mov
and
mov
rcrl
hlt
bound
xor
push
cltd
enter
sahf
xchg
jbe
pop
xor
mov
outsb
pusha
aad
stos
cmpsb
jnp
jne
xor
sub
and
or
popf
xor
bound
inc
jecxz
mov
outsl
cmp
mov
lahf
xor
mov
addl
add
fsts
jge
sti
and
icebp
cli
mov
cmp
add
mov
shrl
mov
push
in
cmpsb
lret
inc
dec
insl
jbe
adc
repz
inc
xchg
imul
mov
push
daa
mov
and
repz
ss
mov
dec
out
jmp
add
clc
ret
in
xchg
out
push
in
cmp
dec
aaa
xchg
out
pop
cmp
dec
subl
xabort
fs
mov
aaa
sbb
jnp
jns
int3
push
je
bound
and
xor
cmpsb
adc
bound
xlat
dec
clc
aaa
xchg
std
cmpsb
pop
mov
lods
sti
xor
subl
pop
jp
repz
mov
sbb
imul
in
sub
es
mov
pop
add
fisttpll
xchg
add
inc
sbb
xchg
mov
fdivr
jae
cmp
outsl
mulb
inc
insl
and
ja
mov
sbb
xchg
adc
sub
sar
mov
or
and
jge
aaa
xor
testb
dec
scas
addl
cmp
and
outsb
aas
cmp
es
mov
es
mov
push
mov
outsb
xor
mov
mov
cmpsl
and
aam
ficomps
in
push
inc
mov
add
les
pop
mov
cmpsb
jb
push
mov
stos
lret
insb
xor
dec
jno
lret
shll
aaa
outsb
push
xchg
insl
adc
push
inc
jnp
mov
call
int
popf
roll
call
mov
call
sbb
cmp
mov
xchg
data16
push
inc
orl
dec
fdivl
or
pop
out
jmp
inc
add
lods
pop
pop
aam
inc
mov
mov
lds
es
sub
mov
lret
mov
mov
jns
sub
push
rep
cmpsl
jg
ss
mov
add
mov
cli
sub
fistpll
jle
mov
cwtl
sahf
in
mov
call
jge
daa
push
cmpsb
stos
and
or
xchg
xchg
inc
scas
push
cmpsb
jns
inc
test
fdivl
ss
and
jbe
and
cmp
lahf
clc
or
mov
insb
arpl
add
add
test
iret
stc
ret
jmp
mov
xchg
inc
fisubl
sbbb
jns
mov
push
insl
les
sbb
popa
push
and
lods
mov
push
mov
data16
inc
ss
mov
and
data16
dec
cmpsb
popa
mov
or
mov
hlt
es
roll
xor
pop
push
js
mov
clc
jo
in
arpl
sub
adc
pop
xor
and
and
sbb
jo
int
in
daa
xchg
xor
sbb
out
in
dec
xor
cmc
ss
cli
xchg
outsb
or
push
sti
inc
mov
sub
test
xor
adc
push
sub
mov
mov
sbb
nop
adcl
push
aaa
jnp
push
pop
out
ljmp
fldenv
xchg
scas
sub
dec
inc
les
cltd
je
pop
pushf
fsubl
fs
sbb
dec
iret
xor
push
xor
mov
hlt
inc
and
movsl
sbb
push
mov
es
inc
mov
cmp
das
and
insb
and
jmp
jp
ficoms
jmp
repz
out
jle
loope
sahf
push
jp
dec
clc
jbe
movsb
push
cs
or
adcb
jo
daa
push
or
cmp
mov
adc
sub
fstl
xor
mov
xor
inc
js
data16
xchg
sti
in
mov
data16
xchg
cmpsb
inc
inc
cmp
sub
out
aad
jl
push
aaa
dec
pop
mov
flds
push
or
mov
dec
sub
push
and
sbb
movsl
xor
jb
add
jnp
call
jae
dec
jecxz
mov
sahf
adc
bswap
cli
fcomps
lcall
cld
xor
push
jmp
fidivl
and
aad
push
xchg
push
and
cld
sub
cli
pop
dec
ret
mov
es
ss
pop
orb
bound
pop
xor
lds
arpl
pop
mov
xchg
std
xchg
es
mov
xor
dec
outsb
mov
out
repnz
fcmovnbe
adc
in
insl
jge
loop
xor
movsb
jbe
je
sbb
mov
adc
fcoml
push
dec
pop
dec
ret
ret
xor
in
in
dec
stc
shlb
insb
xchg
xchg
test
and
xor
repnz
es
add
bound
leave
int3
out
and
adcb
lods
aaa
or
push
mov
add
push
ljmp
mov
shr
jb
sub
xor
mov
test
dec
mov
ret
add
repz
pop
dec
leave
jbe
sub
dec
and
sbb
in
pusha
mov
jbe
mov
sub
es
dec
lds
gs
cmp
jb
sbb
pop
add
stos
mov
stos
push
xchg
mov
mov
push
daa
lret
jp
pop
into
clc
cmc
dec
pop
mov
pop
out
sbb
imul
mov
mov
lock
push
xor
mov
xor
inc
or
cmp
popf
sub
scas
jp
add
cmpl
push
inc
adc
adc
insb
lea
xor
mov
xchg
mov
ljmp
cmp
dec
add
xor
adc
inc
es
pop
ret
js
adc
xor
mov
movsl
int
scas
mov
push
pop
xor
inc
cmp
xlat
mov
out
out
orb
jl,pn
stos
mov
xchg
adc
push
pop
push
xchg
and
jb
and
push
push
lret
inc
sub
hlt
repz
mov
inc
mov
cmpsb
push
mov
jo
lret
cmp
imul
xchg
or
xchg
xchg
sub
xchg
sbb
mov
int3
sarl
stos
sbb
stos
add
push
ss
out
cmc
popa
std
lret
mov
dec
cli
and
cmpb
lods
jmp
mov
pop
jecxz
mov
cmpsb
movsb
imul
jle
dec
cmpsl
sub
jmp
push
dec
scas
adc
cmp
xchg
or
and
addl
mov
mov
ficoml
add
mov
jne
clc
or
cs
ret
push
test
add
cmpsb
stos
gs
in
js,pt
xor
and
dec
mov
sbb
js
push
and
es
mov
mov
imul
outsb
lahf
fcmovbe
inc
xor
and
push
adc
loop
aad
lret
inc
and
mov
cmp
movsl
mov
jbe
mov
dec
mov
xchg
stos
mov
dec
push
and
les
sub
lahf
mov
jg
cmp
mov
push
pop
das
test
inc
jno
adc
xor
push
dec
repz
mov
xchg
outsl
dec
mov
xor
cmpsb
les
bound
mov
sbb
movsl
aaa
dec
in
dec
sbb
push
pop
outsl
cmc
cmp
jb
add
fwait
and
fiadds
jmp
cmc
or
fwait
movl
inc
sbb
xchg
rclw
and
mov
pop
inc
cwtl
mov
insl
dec
mov
in
xchg
cmp
fnsave
movsb
mov
sub
js
xchg
movsl
sub
mov
dec
mov
xchg
and
jmp
sub
jle
rsm
jns
lock
sub
jmp
mov
pop
arpl
sub
fbld
ds
sub
inc
sub
sti
jmp
int3
jge
pop
push
pop
sbb
xor
sub
sbb
lds
loope
insb
out
mov
xor
mov
es
sbbl
push
lock
scas
ljmp
into
addb
mov
cmp
mov
mov
das
call
mov
pop
hlt
ror
jmp
js
adc
sub
inc
lret
jp
int
xor
ljmp
adc
sbb
gs
int
xchg
add
push
jle
cmpsb
pop
std
cmp
sbb
clc
xchg
xor
ljmp
mov
addb
int
add
pop
adc
call
jns
mov
mov
cmpsl
xchg
and
adc
pop
fadds
adc
in
and
mov
popl
mov
daa
aas
push
mov
dec
into
push
shlb
push
xchg
mov
scas
fidivl
arpl
cmp
push
push
xlat
imulb
scas
and
sbb
cld
sbb
fistpl
xor
dec
sbb
mov
push
and
lock
inc
or
cmp
lds
lock
mov
pop
add
jge
stc
shlb
in
adc
xor
pop
jbe
lods
bnd
repnz
loopne
jbe
lahf
add
xchg
jge
fistps
lock
cmpsl
popf
mov
and
loopne
outsb
test
insb
mov
add
xor
call
mov
pop
in
aaa
mov
leave
frstor
inc
dec
shrb
cmp
pop
leave
int3
inc
sahf
mov
push
mull
xchg
movsb
jp
inc
jno
mov
adc
and
cmp
dec
jp
mov
insb
mov
pop
mov
sub
fisubs
mov
mov
xorb
xor
fwait
stos
out
lret
push
pop
outsl
and
outsb
aad
mov
and
outsl
push
or
and
lret
and
sub
pop
sub
dec
imul
or
xor
hlt
orl
ffreep
inc
daa
jne
loopne
pop
sbb
ljmp
inc
xchg
gs
push
cmp
insl
xchg
test
pusha
out
add
mov
fiaddl
das
xchg
and
jne
mulb
inc
fwait
mov
and
xorb
mov
inc
add
cmpb
sahf
and
les
pushf
inc
and
movsb
xor
pop
int3
cmp
pop
icebp
in
inc
lods
mov
test
mov
push
pop
jns
push
fimull
inc
push
test
inc
xchg
insl
leave
call
mov
sbb
push
and
adc
fwait
mov
stc
pop
xchg
and
push
sbb
movsb
mov
popa
sbb
inc
sbb
adc
lahf
cmp
inc
push
sub
adc
shlb
mov
cld
or
mov
push
xor
popa
arpl
jns
inc
inc
pop
into
std
daa
push
and
js
jg
mov
jae
mov
es
and
scas
adc
cmpsb
or
jmp
mov
adc
push
mov
xchg
mov
mov
add
xor
or
es
xor
in
pop
pop
pop
and
jnp
movsb
ja
mov
leave
and
rorb
sub
in
mov
mov
and
inc
jle
mov
sub
sub
out
mov
les
xor
and
cmp
cmp
mov
es
in
sub
lea
sbb
sub
les
mov
push
mov
es
sub
inc
in
lahf
xor
loopne
ds
negb
jecxz
loope
and
jne
int3
ljmp
and
lock
sbb
xchg
fldt
push
and
mov
adc
pop
ret
sbb
mull
mov
lret
sub
jle
and
pop
xchg
or
imul
xor
hlt
cmpsb
nop
std
dec
int3
push
sahf
in
xor
jns
jmp
imul
push
icebp
adc
mov
sub
push
mov
sbb
lcall
sbb
out
lret
push
mov
cmpsb
test
shrb
pop
inc
cmpsl
out
sbb
out
lock
lcall
mov
mov
sbb
xor
pop
call
ljmp
jecxz
movsl
push
inc
lret
clc
mov
subb
add
cmpsb
jb
shll
int
xor
xchg
xchg
stc
cmp
fsubr
push
fildl
pop
push
sbb
cmpsb
push
sub
push
loop
sbb
jbe
push
xchg
movsl
mov
cmpsb
xchg
jg
fnsave
lcall
inc
scas
jb
mov
push
out
pop
dec
mov
sbb
outsb
and
sbb
into
and
cmp
pop
inc
jns
hlt
inc
daa
out
xor
mov
jnp
adc
mov
and
xchg
pop
mov
rclb
lcall
es
aam
mov
outsl
movsl
xor
add
pop
js
cmp
push
push
cmp
jmp
sti
outsl
push
mov
xchg
call
mov
inc
out
mov
mov
in
push
jbe
shl
jns
mov
pusha
mov
push
inc
mov
les
ror
add
dec
dec
hlt
push
mov
es
or
cs
dec
repz
shr
inc
inc
push
test
push
mov
xor
cli
es
lahf
mov
and
out
xchg
movsb
pop
mov
push
lods
sti
loope
sahf
mov
data16
popf
sbb
lds
push
or
fwait
mov
push
and
lock
in
ficompl
jg
jl
bound
inc
addr16
jp
leave
arpl
adc
inc
lcall
lods
imul
ss
ja
mov
sbb
xchg
cld
cld
and
aaa
mov
pop
mov
mov
clc
dec
add
shrb
add
test
je
insl
inc
add
out
inc
pushf
arpl
jmp
mov
push
jg
xchg
mov
cmpsb
ja
popa
cmc
fwait
in
push
jl
test
sub
cltd
lds
stos
jne
inc
adc
subb
sbb
out
xor
pushf
ljmp
mov
test
fs
loopne
ja
dec
push
push
or
push
das
cmpsb
cmp
mov
cmp
xor
inc
jo
iret
inc
push
pop
int
sub
outsb
jns
push
ficomps
pushw
andb
lock
jle
sbb
mov
leave
in
loop
out
jge
ja
ss
xor
jge
loope
dec
adc
pushf
popa
cld
mov
gs
add
mov
fs
ret
xchg
movsl
inc
fwait
ds
xchg
imul
stc
jg
cmp
fimull
iret
popf
sub
dec
cmp
icebp
inc
push
and
cmp
mov
push
push
in
nop
cmp
or
je
test
dec
mov
aaa
aam
push
fcmovb
and
stos
cmp
xor
cmc
cltd
pop
pextrw
add
inc
fwait
add
inc
xor
lcall
inc
arpl
cmp
ret
pop
mov
sbb
dec
push
add
and
mov
cwtl
aaa
and
sbb
inc
adc
outsb
mov
jae
adc
call
jge
ja
push
xor
sbb
dec
inc
pop
and
jmp
lods
adc
push
xchg
inc
adc
mov
cmp
xor
movsb
imul
sti
pop
jecxz
sbb
cli
aad
xor
push
addr16
repz
add
jne
ja
mov
gs
jnp
ret
push
jbe
outsb
cli
inc
pop
imul
in
dec
mov
inc
sahf
aam
orl
in
mov
enter
push
mov
mov
or
into
and
push
jl
sbb
mov
mov
repnz
arpl
push
xor
jg
scas
fdivs
fs
out
xchg
adc
sbb
add
jle
cmpsb
dec
cmpsb
xchg
xor
adc
pop
add
mov
ljmp
push
or
pop
xchg
jge
andl
pop
mov
es
inc
jne
stc
pusha
cmpsl
ja
mov
mov
and
mov
jne
jmp
sarb
pop
mov
fxch
insl
cmpsb
shr
inc
in
mov
lahf
stos
mov
xchg
inc
add
ljmp
and
and
std
xchg
inc
movb
or
pusha
movsb
loope
gs
rcrb
jno
xchg
mov
mov
or
mov
jge
lock
or
dec
rcrl
cld
jb
int
ljmp
cmpsb
ss
pop
sub
xchg
out
pop
and
mov
in
es
cmp
sub
test
cmp
ds
out
pop
mov
mov
xchg
pop
and
or
cmc
and
jg
pop
fnstenv
es
mov
stos
sbb
mov
push
bnd
add
dec
ret
jo
pop
movsl
jmp
sub
mov
negb
stos
mov
fwait
mov
aas
pop
or
sbb
mov
sti
and
movsl
adc
mov
in
adc
stos
leave
ret
outsb
cmp
lret
scas
into
jmp
ss
lea
lcall
or
es
mov
pop
xor
mov
pusha
jo
jmp
movsb
add
inc
jns
cmpl
movsl
fldenv
in
or
cmpsl
insl
or
outsb
push
mov
xchg
nop
ret
shlb
aas
mov
clc
adc
xor
cmp
push
inc
sarb
dec
loop
mov
and
jle
dec
and
ret
fisubrl
sbb
push
cmpsb
imulb
mov
scas
call
into
xchg
xchg
cmpsb
jns
push
mov
mov
fsub
sbb
sub
jo
das
jmp
sbb
pop
pop
popa
in
lods
vmptrld
xchg
cmpsb
pushf
out
outsl
or
daa
mov
mov
cmpsb
push
test
bound
or
mov
inc
mov
xor
out
in
and
dec
ds
in
test
enter
mov
repz
sbb
sub
sbb
sbb
dec
inc
mov
enter
and
mov
fcmovne
and
into
xor
jns
jo
xor
mov
out
nop
stos
std
sub
push
insb
mov
xor
cmp
lea
xchg
aas
mov
pop
dec
pop
fwait
pcmpgtw
sub
outsl
add
imul
outsb
in
enter
mov
xchg
cmp
popa
add
push
and
push
cmp
push
out
jp
sbb
and
mov
cmp
stos
adc
movsb
xor
jns
xchg
inc
push
jbe
cmpsb
pop
jge
pop
push
out
test
adc
lret
mov
adc
ss
and
stos
mov
xor
mov
lahf
sub
das
mov
mov
push
inc
xchg
std
repz
scas
push
or
add
ret
jecxz
sub
mov
movsb
xchg
jp
out
adc
push
fstpt
mov
xchg
ss
jecxz
fnstcw
in
testl
and
and
cmpsl
je
lret
das
cld
jo
hlt
push
mov
pop
pop
jmp
mulb
dec
mov
sbb
pop
cmp
movsl
cmp
sbb
ds
pusha
sub
addr16
and
jno
xor
xchg
mov
lock
ds
cld
push
mov
call
fldcw
je
jne
push
fistpl
sub
cmpsb
test
jg
mov
dec
pop
jg
popf
test
mov
int
stc
mov
pop
mov
cmpl
sbb
jle
mov
scas
enter
cmc
and
ja
sbbb
jne
adc
dec
aas
sbb
out
xor
adc
jecxz
ret
loop
daa
shrb
mov
xor
aad
xor
test
cmc
and
pushf
and
jne
cwtl
xor
lea
mov
mov
movb
push
es
test
dec
sub
and
mov
lds
flds
push
stc
mov
inc
jnp
rclb
mov
jnp
in
movsl
dec
mov
loope
repz
cmpsb
mov
popf
mov
xor
nop
mov
mov
cmp
test
rorl
jmp
movsl
jmp
or
aad
inc
jge
and
cmpsb
and
mov
or
nop
sbb
hlt
out
inc
js
out
add
mov
push
repz
push
push
rcll
enter
pop
cmp
push
das
pushw
ret
mov
mov
pop
lods
or
and
gs
test
xchg
cmp
insb
adcb
out
dec
mov
std
jmp
adc
fadds
mov
inc
ds
jmp
and
xchg
mov
std
mov
icebp
pusha
xor
xchg
mov
addl
dec
hlt
push
inc
into
xor
jmp
fucomp
push
xor
xchg
pop
cmp
dec
bound
in
sahf
and
jnp
xchg
mov
sbb
and
xor
xchg
fnstcw
fstpl
mov
scas
add
jne
in
aam
int
popa
dec
xor
bt
mov
repz
push
int3
mov
dec
scas
sub
adcl
mov
and
xchg
mov
xor
cmpsl
shrb
inc
cmc
and
fldenv
daa
lods
or
jae
mov
test
fimull
fistl
xor
xchg
add
inc
mov
data16
jae
pop
add
mov
sbb
and
lret
inc
pop
pop
pop
iret
call
call
jl
add
mov
mov
dec
outsl
daa
add
or
add
push
pop
sti
sub
sub
je
aam
loop
mov
mov
and
mov
xchg
stos
stc
adc
mov
push
lock
ret
push
and
lcall
je
cmp
inc
outsl
push
and
pop
lahf
int
das
stos
orb
ljmp
je
cmpsb
lcall
mov
sbb
aad
cmpsl
jns
lds
add
and
mov
out
mov
inc
sub
or
mov
dec
int
repnz
xor
and
daa
clc
mov
sti
xchg
aad
fstl
out
icebp
je
jno
dec
pop
cld
js
mov
sbb
xchg
mov
pop
flds
js
addl
xchg
mov
ret
movsl
gs
xor
push
cs
mov
jle
mulb
push
push
dec
scas
mov
jnp
fidivrl
into
xor
dec
or
mov
and
enter
loop
faddl
sbb
leave
push
outsb
xchg
aaa
sbb
pop
mov
aam
push
and
pop
xor
sbb
or
inc
das
push
gs
es
fcmovnbe
leave
adc
sbb
sbb
fisttps
jecxz
cmp
imul
dec
aad
test
mov
ret
pop
pop
arpl
inc
mov
xchg
scas
sahf
roll
pop
inc
dec
add
cwtl
and
jno
push
push
lret
pop
lock
mov
or
rcl
or
xor
jl
add
mov
mov
adc
sub
xor
and
mov
xchg
shrb
inc
mov
push
xchg
sti
sub
cmp
cmp
xlat
jg
adc
loope
pop
jmp
xlat
push
out
xchg
test
mov
mov
and
push
sti
cld
xlat
and
enter
iret
fmull
cmpsb
cmpb
inc
andl
dec
iret
call
sub
out
je
or
jnp
insb
pop
leave
and
insb
data16
sbb
hlt
fisubs
mov
sahf
push
fstpl
insl
movsl
xor
test
mov
fs
mulb
cmp
push
sub
aas
cmpsl
loope
fwait
mov
in
ffree
xor
mov
ret
in
fisubs
cmpsb
mov
dec
stc
push
mov
pop
push
aas
cltd
dec
adc
lds
cli
insl
cmpsl
std
rep
cmc
mov
mov
mov
jne
test
xor
cltd
jo
sub
inc
cwtl
xor
movsb
push
mov
das
test
int3
xor
cmp
idiv
adc
mov
fnsave
pop
mov
outsb
or
daa
xor
int3
lds
das
divl
fxch
adc
xchg
inc
mov
dec
ljmp
push
ficomps
das
das
push
lcall
aaa
ror
add
fisubl
pop
adc
lahf
test
jns
movsl
lret
cmc
mov
mov
negb
scas
push
cmp
sub
cmp
dec
dec
shrb
cmpsb
fwait
jbe
stos
mov
sbb
mov
cmpsb
adcb
loope
ret
sub
inc
mov
mov
mov
sahf
push
insl
lea
ljmp
roll
and
xor
push
mov
push
push
rorb
or
and
lret
cmpsb
cmp
jl
mov
and
mov
movsl
inc
dec
xchg
mov
outsl
lahf
pop
push
cwtl
jge
push
ret
xor
outsb
leave
pop
cmp
jg
inc
sbb
lock
out
xor
out
pop
test
inc
notl
imul
pop
and
cli
xlat
adc
add
mov
push
jmp
cmp
push
stos
and
pop
jns
mov
rcr
sub
inc
push
fsubrl
leave
push
push
iret
andl
or
pop
adc
cmpsl
cltd
movsl
fs
sub
or
mov
xor
mov
adc
jp
ficoms
movsl
add
push
sbb
aaa
cltd
in
push
pop
inc
add
je
mov
xchg
mov
fnstsw
sub
push
jno
fiadds
and
bound
xchg
cli
outsl
dec
inc
xor
cmp
aas
loope
insl
out
cmpsl
hlt
ljmp
shll
inc
je
ret
sbb
popa
clc
fwait
aaa
notl
cltd
out
sahf
and
lock
dec
add
sbb
in
incl
mov
idivl
in
cmp
jmp
xor
lds
cmpl
xor
gs
add
add
pusha
xchg
inc
imul
cli
pop
rep
inc
sbb
mov
stos
in
sub
pusha
movsb
xchg
jo
xor
and
push
stos
js
adc
adc
nop
xor
daa
xor
in
add
insb
outsb
mov
pop
sbb
lds
es
jmp
push
sub
mov
ss
xchg
jle
jne
sbb
lret
into
mov
in
inc
mov
iret
mov
pop
shlb
mov
and
hlt
loope
cmpsb
dec
ds
xor
dec
movsb
push
out
push
adc
push
mov
repz
dec
inc
into
lods
mov
gs
or
arpl
inc
inc
jmp
sbb
imul
shl
inc
ja
js
mov
add
jp
dec
mov
lock
loopne
test
out
lods
or
pop
and
cld
cmp
in
pop
es
insb
sbb
fs
loope
aad
dec
xor
data16
inc
sub
sub
or
xlat
mov
inc
jb
add
lcall
leave
cmp
repz
jp
mov
jge
imul
mov
fpatan
imul
daa
pop
ss
clc
sti
les
jle
pop
sbb
or
jmp
lods
dec
cwtl
loope
and
out
popf
mov
mov
xchg
ja
cmp
adc
aam
mov
push
lods
mov
outsb
push
lds
leave
lds
pop
and
movl
cmpsb
lods
scas
jo
cwtl
xchg
lcall
pushf
hlt
push
mov
dec
xchg
frstor
movsb
pop
repz
sub
push
lahf
jmp
fcompl
fcompl
cmp
mov
icebp
arpl
fcmovu
and
in
adc
int3
jne
dec
push
add
push
aad
push
js
inc
pop
sub
lret
mov
mov
jmp
sub
xchg
stos
sub
sbb
push
push
lock
loop
mov
dec
and
in
sbb
push
add
adc
dec
or
inc
in
mov
cmpsb
and
xor
add
sbb
bound
es
popf
xchg
jmp
xchg
push
mov
and
es
jae
mov
fdivp
xchg
mov
arpl
mov
aam
and
icebp
pusha
fwait
inc
cmpsb
pop
pop
xchg
jp
dec
aad
scas
or
clc
push
push
ret
cmp
loop
jge
push
std
stc
mov
movsb
sbb
mov
xlat
sarl
sbb
adc
mov
pop
mov
movsl
cmpsl
fldenv
into
cmpb
sub
push
push
lds
pop
out
lret
in
repz
inc
and
mov
sub
xor
xchg
push
xor
push
ljmp
jl
mov
cmp
and
sbb
mov
adcl
add
js
sub
dec
in
xor
pop
fprem1
adc
aad
push
int3
daa
pop
imul
fwait
push
mov
sbb
stc
pop
cmp
add
mov
cmpsb
mov
sbb
je
pop
inc
rorl
inc
xchg
mov
mov
xchg
notl
push
es
imul
out
roll
rcrl
mov
jg
fsubrs
pop
pushf
or
in
outsb
cmp
cwtl
popa
adcl
fldt
leave
cmp
jle
mov
es
jnp
mov
mov
xor
aaa
loope
loopne
mov
xlat
insl
jle
push
and
xchg
stos
push
mov
sahf
add
pop
or
and
or
jno
gs
fidivs
or
mov
aas
inc
mov
push
and
or
sbb
xchg
pop
xchg
shrb
xor
jne
insb
xchg
mov
dec
xor
xchg
pop
push
cmp
scas
push
pop
in
cltd
outsl
xor
scas
mov
lds
icebp
and
push
mov
xor
pop
cli
or
xorb
divl
cmp
push
and
dec
mov
jg
pop
mov
popf
mov
ljmp
pushf
in
cmp
dec
js
inc
mov
adc
lea
pop
testl
mov
es
popf
jle
mov
aas
xor
pop
jns
sbb
out
dec
sbb
pop
adc
cwtl
dec
xchg
int3
jns
ret
lods
adc
push
jne
jo
fisubl
cs
lds
dec
mov
arpl
cmpl
or
mov
pop
and
mov
repz
pop
lods
inc
mov
add
in
adc
data16
push
cmpsb
mov
cmp
cmp
adc
jnp
pop
push
push
add
aad
es
and
inc
inc
lahf
int
nop
dec
xor
pushf
repnz
mov
pop
push
aas
bound
xor
mov
add
addl
adcb
in
mov
cmp
andl
cmc
rcl
cmc
shlb
es
pop
mov
loopne
bound
mov
and
cmpsb
cmp
xchg
ss
cmpsl
jecxz
push
mov
cmpsb
lock
cs
outsl
xor
cmpsb
dec
mov
dec
inc
mov
mov
ret
fcom
cltd
inc
xorb
adc
sbb
ret
addr16
test
sub
addr16
insl
mov
cs
daa
xor
js
enter
lcall
and
popa
les
pop
and
dec
jne
mov
fcmovne
and
adc
xchg
repz
bound
imul
jae
pop
out
push
cmovb
mov
es
cmp
clc
pop
stos
dec
cwtl
mov
dec
push
cmp
or
and
es
mov
arpl
icebp
sub
out
js
mov
cmp
push
xor
lret
mov
mov
xchg
lods
ret
push
and
jne
jnp
aam
and
subb
mov
cmpsb
pushf
notb
in
mov
nop
nop
std
sub
adc
les
push
test
scas
and
xchg
jae
and
lds
mov
roll
xchg
shlb
sbb
mov
sub
fcomp
lds
jge
repz
xchg
std
mov
pop
pop
aaa
dec
sbb
pop
mov
sbb
mov
pop
aad
and
mov
inc
push
adcl
push
and
mov
sub
rolb
cmp
cs
or
shll
push
jb
imul
stc
xchg
mov
cs
xchg
fadds
imul
cmpsl
jp
insb
xor
not
test
aaa
cmp
enter
mov
es
dec
dec
push
push
daa
mov
daa
lea
loop
test
xor
enter
mov
dec
rcl
fsubp
arpl
pop
mov
xchg
inc
jecxz
pusha
cmpsb
out
rorb
sub
fiadds
xchg
mov
out
sbb
add
sar
add
stos
ret
jmp
leave
adc
stc
call
mov
mov
lods
push
mov
in
xor
aam
dec
pop
jl
push
jl
pop
sbb
movsl
cmp
imul
mov
dec
jne
imulb
add
lahf
lea
or
sbb
xlat
pushl
test
movsl
cli
jge
cld
cltd
enter
mov
dec
pop
sub
outsb
aaa
iret
test
mov
jl
mov
out
lret
cmpsb
xor
jecxz
ss
and
loop
test
jbe
movb
jnp
pop
pop
and
mov
fninit
bound
int3
clc
mov
mov
jmp
cmp
out
scas
adc
xchg
mov
mov
mov
int
mov
jae
aam
xor
ret
pop
and
adc
mov
push
fnsave
movsl
xor
xlat
leave
inc
and
pop
sbb
sbb
add
fsts
out
or
fldcw
sbbb
popf
push
add
mov
dec
popa
mov
outsl
fbld
fisubs
mov
adc
cmpsl
xor
mov
xorb
push
push
daa
mov
fisttpl
and
or
sbb
sub
push
mov
fcmovbe
xor
dec
lret
lahf
xlat
test
int
adcl
js
jne
lds
js
cwtl
fsts
dec
adc
out
mov
fisttpll
sub
data16
bound
ffree
add
fwait
aam
and
sub
sub
push
call
xchg
and
imul
mov
inc
cmp
add
ret
frstor
es
xchg
pop
push
aaa
push
xor
adc
rorl
mov
add
or
or
gs
out
sbb
push
mov
cld
fsubl
test
and
scas
xor
fisttpll
repnz
psraw
cmpsb
shrb
jne
mov
test
in
and
add
push
xchg
sarl
imul
dec
in
loop
lods
ljmp
xorb
out
sub
mov
fsubs
cmp
jns
pop
sbb
scas
jle
test
lods
pop
mov
mov
into
lea
and
jae
add
sarl
cmp
cmp
push
fcmove
cmpsb
jns
inc
flds
cmp
xor
movsl
test
iret
bound
pop
shlb
sub
xchg
mov
cmc
cmc
sub
rolb
lret
pop
mov
ja
lea
fldenv
stos
or
dec
xchg
ret
jmp
fisubrs
sti
or
mov
fistpl
out
addr16
jae
and
adc
and
test
cmp
jnp
das
pmaddwd
and
pushf
rcrl
mov
test
add
test
mov
sbb
lcall
sub
std
mov
cltd
xchg
addr16
aaa
inc
jne
out
mulb
lock
daa
pushf
fwait
lds
out
cmp
xor
arpl
leave
cmp
stos
and
mov
add
xlat
add
adcl
dec
jmp
in
rolb
call
lahf
mov
add
out
push
xchg
imul
vmovaps
fwait
sbbb
sbb
mov
and
adc
mov
pop
popa
sub
adc
pop
wbinvd
jne
xchg
adc
and
mov
addb
add
adc
xchg
push
mov
fnsave
push
jg
out
popa
mov
mov
bound
or
sbb
mov
mov
and
xchg
std
sbb
or
mov
pop
int3
in
mov
daa
pusha
jne
xor
cmpsb
sbb
icebp
scas
lock
mov
jle
add
add
jmp
mov
imul
stos
fcompl
inc
or
and
mov
jle
jb
jo
in
mov
es
inc
jne
xchg
sbb
cmp
fistl
mov
mov
mov
cwtl
adc
or
xchg
stos
aad
mov
xlat
sub
mov
out
jo
ljmp
and
pop
sbb
xlat
adcb
test
bound
mov
test
out
jmp
jecxz
cmp
or
push
mov
in
pop
and
add
mov
in
xor
and
pop
add
jno
fstps
jne
xchg
pop
repz
daa
cwtl
cmp
or
push
add
mov
sbb
imul
or
jecxz
cmp
jge
and
bswap
xchg
xchg
cmpsb
sbb
jae
imul
imull
outsb
lret
mov
push
dec
stos
or
cmc
arpl
xor
mov
fwait
movsl
jno
xchg
sub
dec
dec
push
and
mov
cmp
xchg
call
mov
int3
or
jecxz
and
mov
push
movsb
cmc
mov
jmp
push
in
outsl
mov
xchg
and
popf
loope
scas
sarb
xchg
aaa
mov
es
pop
inc
pop
mov
jns
sub
hlt
lds
push
lock
push
nop
insb
adc
scas
jae
inc
add
add
shr
adc
push
mov
imul
mov
mov
cmp
push
jno
inc
lcall
int
mov
fucomi
xchg
and
cmc
out
inc
jne
adc
ret
es
mov
xchg
mov
dec
mov
inc
xchg
in
ja
fistpl
and
or
rep
add
sub
je
mov
add
rclb
shl
fldcw
xor
out
ret
sbb
shl
dec
mov
arpl
mov
inc
imul
enter
popf
cmp
push
jno
pop
pop
and
mov
int3
cmpsb
cli
mov
loopne
mov
sbb
jno
add
sub
push
testb
scas
xchg
pop
and
jl
clc
sub
loop
and
pushaw
aas
aam
pop
xor
pushf
bound
adc
das
mov
push
ja
ja
mov
inc
sbb
orps
push
in
push
rorb
pop
test
cwtl
sub
mov
shrl
jl
cmp
ds
inc
scas
in
adc
mov
aas
dec
daa
xlat
ja
stos
dec
ret
pop
mov
cmp
mov
dec
adc
sbb
mov
lds
or
arpl
inc
ds
comiss
inc
jge
repnz
ficompl
push
out
mov
and
or
imul
mov
dec
gs
aas
xor
stos
aam
pop
les
sbb
xchg
jle
and
pushf
call
xor
lcall
cmp
and
push
scas
cmpsb
xor
mov
rcrb
es
sub
push
call
arpl
xor
mov
cmp
insb
cmp
push
jne
or
pop
pop
shlb
jge
cmp
dec
and
sbb
test
dec
dec
jbe
cmp
jnp
mov
lret
sbb
mov
dec
jbe
xlat
pop
pop
or
cwtl
jno
aas
movsl
inc
pusha
icebp
xor
shl
sub
or
out
test
fcoml
mov
movsl
xchg
std
sbb
pusha
test
popa
or
mov
mov
into
enter
lock
movsl
rorl
mov
mov
fcmovnb
push
mov
fstl
inc
add
movb
mov
aam
jbe
jge
and
lcall
or
lock
imul
jp
ds
xor
sub
stc
ret
fs
inc
mov
movsl
aam
lock
or
xchg
sbb
mov
cmpsb
xchg
outsb
sub
or
loope
pop
rcrl
pop
aad
mov
lea
and
pop
push
cmp
sub
xchg
ja
sub
xor
aad
inc
popa
cmp
mov
push
pop
loop
arpl
test
jae
xor
movsl
lods
cld
and
sub
pop
mov
pop
sbb
mov
enter
adc
cmp
mov
in
repz
lods
mov
push
lea
push
es
outsb
or
clc
mov
cmpsb
cmpsl
xchg
xor
or
mov
mov
jno
rcr
mov
jb
push
add
ja
push
adc
cmp
fs
push
test
sub
mov
dec
mov
subl
fwait
mov
outsl
fs
repnz
iret
cmc
push
mov
lods
loope
sub
testl
popa
sbb
inc
jno
jno
xor
orb
leave
mov
sahf
cld
bound
cmpsl
or
enter
iret
mov
xchg
andl
pusha
mov
mov
push
fwait
or
xchg
and
mov
pop
dec
es
aad
ficoms
das
inc
push
addr16
cltd
lds
sti
fmull
xor
fstpl
out
ss
dec
adc
test
lea
pop
fidivs
mov
pushf
jae
xchg
rcl
xor
inc
xor
lea
imul
loopne
scas
sub
add
add
xor
gs
inc
test
fwait
pushf
clc
shrb
push
and
mov
pop
ja
loopne
loop
push
mov
cmpsb
int3
aaa
inc
adc
ror
dec
test
push
xor
dec
les
aas
inc
pusha
mov
lods
cmp
adc
sti
jne
ss
sbb
ret
loopne
mov
mov
pop
mov
inc
outsl
test
loope
add
xor
adc
inc
xor
dec
mov
adcl
push
divb
mov
fs
xlat
and
lods
pop
add
push
sub
pop
adc
faddl
and
and
test
popa
int
push
imul
fwait
lea
popa
adc
lods
xchg
mov
adc
jno
les
addb
xor
cltd
and
jmp
or
mov
lods
addr16
es
lret
jae
push
daa
loop
ret
lea
sub
cmp
outsb
daa
and
mov
cmpsb
cmpsl
into
jl
mov
sbb
mov
es
inc
xchg
sub
mov
mov
mov
aas
out
aad
inc
inc
int
inc
push
aad
cmp
adc
inc
test
jge
out
dec
sub
xchg
adc
lds
mov
out
iret
imul
and
jl
imul
aas
mov
pop
pop
test
push
insb
leave
sub
cmc
lcall
mov
test
lds
jno
pop
sbb
call
ja
sub
jge
xor
jb
mov
mov
sahf
cmp
pop
xor
pusha
nop
inc
pop
adc
ds
mov
fistl
leave
ret
aad
sbb
jg
or
ret
cmp
sub
xchg
scas
sahf
in
je
out
push
fisubs
mov
add
pop
out
bound
inc
js
jne
notb
mov
cmp
lods
adc
movsl
cs
out
scas
out
mov
movsb
pop
mov
xchg
and
xor
cmp
cmp
fwait
nop
cmpsl
xor
movsb
mov
jge
mov
andl
sub
sbb
adc
cmp
or
lea
fisubrl
push
clc
xor
lods
jb
jae
sub
aaa
bound
imul
xlat
es
and
std
roll
and
test
jle
dec
mov
mov
shlb
inc
mov
inc
xor
cmp
inc
sbb
out
mov
adc
sub
cs
fmull
jb
popa
lahf
mov
inc
iret
push
inc
mov
or
dec
mov
cmp
inc
aad
pusha
popa
inc
jge
or
loop
inc
xchg
cmp
lahf
cmp
mov
xchg
std
lds
repnz
lock
pop
int3
test
mov
mov
push
pushf
jp
sahf
nop
les
pop
int3
lds
cwtl
aam
jbe
sbb
inc
fbstp
stc
mov
inc
inc
sbb
inc
xor
mov
arpl
lds
mov
inc
push
pop
rcrl
clc
and
add
inc
cmp
out
insl
mov
mov
insb
dec
inc
mov
loopne
arpl
sarl
adc
and
int3
imul
xchg
mov
sub
setge
icebp
xor
imull
movsl
fwait
out
pop
movsb
adc
ljmp
sub
xchg
leave
cmp
fucomi
inc
mov
mov
int3
movsl
push
xchg
sub
in
inc
fmull
out
les
pop
rcrb
push
mov
pop
or
jno
jne
mov
gs
fiaddl
push
nop
xor
sbb
push
add
rorb
fwait
xor
xorl
shl
hlt
movsb
or
jne
jge
mov
ljmp
and
mov
mov
push
dec
xor
lea
inc
push
in
inc
data16
cld
scas
pop
in
xor
daa
dec
mov
pop
repz
push
xchg
mov
lods
ret
adcl
push
faddl
clc
data16
enter
push
sub
call
push
ss
test
push
jae
imul
dec
in
es
and
cmp
sub
hlt
push
insb
xchg
mov
add
cmp
les
repnz
leave
xlat
pop
add
and
mov
push
lds
add
scas
mov
call
jp
mov
pop
jecxz
loope
xor
dec
dec
sub
xor
jno
jl
lahf
xchg
jno
inc
or
lds
sub
inc
jbe
cs
jge
stc
pop
and
out
inc
cmpb
adc
and
xor
push
les
repnz
shrb
mov
fiadds
mov
sub
jno
iret
xchg
push
pop
mov
movsb
sub
sub
fdivrs
xor
js
mov
mulb
in
outsb
ret
cltd
ja
jae
and
popf
cmpsl
mov
popf
add
lds
mov
jge
mov
cltd
and
iret
sub
mov
lds
jb
clc
push
stc
movsl
xchg
daa
shlb
dec
mov
mov
add
std
dec
insb
mov
adc
test
cmp
xchg
mov
dec
push
cmpsl
fsub
pop
and
and
lds
push
sbb
mov
aam
lock
mov
lahf
mov
popa
sub
xor
fcompl
fadd
xchg
fldcw
fstps
jne
mov
adc
aad
inc
adc
into
sti
mov
pop
insl
loop
or
sbb
sbb
inc
scas
stos
lahf
incl
mov
adc
leave
push
test
inc
push
inc
pop
ds
mov
arpl
imul
test
popa
movsb
xor
and
es
cmp
faddl
sti
dec
cmp
sarb
adc
adc
movsl
lds
in
leave
pop
fisubrs
mov
jne
lahf
popa
dec
adc
rcll
in
add
sar
jmp
daa
mov
ljmp
inc
mov
mov
xchg
mov
adc
cmpsb
jl
inc
iret
xchg
xchg
pop
and
dec
test
sbb
adc
adc
xor
out
jns
mov
mov
jge
lret
or
sub
inc
repnz
mov
push
mov
inc
cmp
push
pop
vaddsubpd
push
in
xor
cmpsl
jb
sbb
enter
cmpsl
push
dec
insb
push
jae
add
in
sub
push
push
push
push
call
add
push
push
call
add
push
mov
push
call
add
push
mov
push
push
push
call
add
push
push
push
call
add
mov
mov
sub
and
sub
or
add
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
or
push
push
push
push
call
add
push
push
push
call
add
mov
push
push
push
push
call
add
xor
sub
push
push
call
add
mov
push
push
push
call
add
push
call
add
cmp
je
push
push
push
call
add
add
call
push
call
add
push
push
push
push
push
call
add
xor
sub
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
call
xor
call
push
push
call
add
add
call
call
mov
sub
cmp
jne
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
push
push
call
add
add
push
push
push
push
call
add
push
push
push
push
call
add
add
push
call
add
push
push
call
add
mov
push
push
call
add
mov
push
call
add
add
call
sub
add
xor
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
add
push
call
add
call
push
push
push
push
call
add
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
call
add
cmp
jne
cmp
jne
sub
push
call
add
mov
add
cmp
je
call
push
call
add
push
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
call
add
mov
mov
call
and
or
push
call
add
push
push
push
push
push
call
add
or
push
push
push
call
add
test
je
call
xor
push
push
push
call
add
push
push
push
push
call
add
mov
and
cmp
jne
cmp
je
add
push
push
push
push
call
add
mov
call
call
mov
add
sub
push
call
add
push
call
add
push
push
call
add
push
push
push
push
call
add
push
call
add
call
push
push
call
add
push
call
add
push
push
push
call
add
push
push
call
add
push
push
call
add
sub
cmp
jne
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
call
add
add
add
push
push
push
call
add
cmp
je
cmp
je
mov
push
push
push
call
add
call
push
call
add
mov
push
push
push
call
add
push
call
add
call
call
push
push
call
sub
cmp
jne
push
push
call
add
mov
push
push
push
push
push
call
add
add
mov
cmp
jne
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
mov
push
push
push
call
add
push
call
add
mov
push
push
push
call
add
call
cmp
je
or
add
or
mov
push
push
call
add
call
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
mov
mov
add
and
mov
cmp
jne
mov
mov
sub
cmp
je
add
or
add
sub
sub
or
sub
and
mov
and
sub
mov
sub
and
and
or
cmp
jne
sub
xor
mov
add
mov
sub
add
sub
test
jne
mov
and
mov
cmp
je
test
je
cmp
je
add
mov
xor
mov
cmp
je
mov
test
jne
mov
mov
cmp
jne
mov
sub
and
and
sub
sub
cmp
jne
cmp
jne
and
and
or
add
mov
mov
add
test
je
mov
and
sub
cmp
je
mov
cmp
je
mov
and
xor
sub
xor
xor
and
sub
cmp
jne
mov
add
cmp
jne
mov
mov
xor
add
sub
sub
mov
add
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
and
add
add
add
sub
sub
and
cmp
je
cmp
jne
cmp
jne
mov
mov
xor
cmp
je
add
cmp
je
mov
add
or
mov
add
sub
sub
and
sub
and
add
sub
add
sub
mov
mov
sub
cmp
jne
sub
add
mov
cmp
je
sub
or
mov
mov
cmp
jne
mov
or
mov
cmp
je
sub
mov
sub
sub
sub
and
mov
cmp
je
mov
mov
add
add
add
sub
cmp
jne
mov
mov
or
sub
mov
add
add
add
add
sub
mov
mov
mov
and
cmp
je
mov
add
mov
sub
cmp
je
cmp
jne
add
test
je
cmp
jne
mov
cmp
jne
cmp
jne
add
add
cmp
je
add
add
mov
mov
add
add
add
sub
sub
sub
cmp
jne
or
mov
mov
mov
sub
cmp
jne
or
xor
sub
and
add
mov
xor
add
sub
add
mov
and
mov
and
test
je
mov
cmp
je
cmp
je
cmp
je
mov
mov
sub
sub
sub
cmp
je
mov
or
mov
sub
add
sub
sub
add
sub
sub
mov
mov
add
call
push
call
add
call
mov
mov
sub
add
add
sub
test
jne
call
mov
cmp
jne
mov
xor
add
sub
cmp
je
mov
add
mov
add
sub
cmp
je
mov
mov
sub
add
mov
add
sub
cmp
je
sub
and
mov
xor
mov
test
je
add
and
sub
sub
add
add
add
mov
cmp
jne
cmp
jne
cmp
jne
and
sub
mov
add
mov
add
add
sub
add
or
mov
sub
cmp
je
add
mov
sub
mov
add
or
add
add
sub
sub
add
xor
cmp
je
xor
and
sub
add
sub
sub
sub
mov
push
call
add
cmp
jne
push
call
add
push
push
push
push
push
call
add
sub
mov
mov
push
push
call
add
push
push
call
add
mov
push
push
push
call
add
push
call
push
push
push
push
call
add
call
mov
mov
add
sub
sub
add
or
and
sub
cmp
jne
cmp
je
mov
test
jne
add
mov
mov
sub
add
add
sub
mov
cmp
jne
add
cmp
jne
sub
mov
mov
xor
mov
mov
add
add
and
add
sub
cmp
je
add
mov
mov
and
add
add
and
mov
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
call
call
add
push
push
push
push
push
call
add
cmp
je
cmp
jne
push
push
push
call
add
cmp
jne
cmp
jne
add
push
push
push
push
call
add
push
call
add
cmp
je
push
push
push
push
call
add
call
sub
push
push
call
add
push
push
push
push
call
add
push
call
add
call
push
push
push
call
add
push
push
push
push
call
add
mov
push
call
add
push
push
push
call
add
cmp
jne
push
push
push
call
add
cmp
je
push
call
add
call
push
push
call
add
push
push
push
call
add
push
push
push
call
add
or
sub
add
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
mov
sub
push
call
add
mov
test
jne
cmp
je
mov
cmp
jne
mov
push
push
push
push
push
call
add
mov
cmp
jne
mov
push
push
push
call
add
sub
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
mov
cmp
je
cmp
je
or
or
cmp
jne
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
call
push
call
add
push
push
push
push
push
call
add
mov
call
add
sub
add
push
call
add
sub
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
call
xor
sub
or
add
push
push
call
add
push
push
push
push
push
call
add
add
push
push
push
call
add
add
mov
mov
push
push
push
call
add
push
push
call
add
add
push
push
push
push
call
add
call
add
sub
lea
mov
add
xor
sub
cmp
jne
mov
sub
mov
add
and
add
sub
add
sub
push
cmp
je
push
push
push
call
add
call
push
add
mov
push
push
push
push
call
add
call
and
mov
cmp
je
push
push
push
call
add
push
push
push
push
call
add
cmp
jne
xor
push
push
push
push
push
call
add
test
je
mov
mov
push
call
add
push
push
call
add
push
call
add
push
call
add
push
push
call
add
push
push
push
push
push
call
add
add
and
and
push
push
call
add
mov
add
shr
cmp
jne
sub
mov
cmp
je
mov
xor
add
cmp
jne
sub
mov
mov
cmp
jne
add
and
sub
test
je
add
mov
mov
add
add
sub
mov
add
add
cmp
jne
sub
cmp
je
add
cmp
jne
push
push
push
push
push
call
add
mov
test
je
sub
sub
mov
test
je
sub
mov
add
sub
mov
cmp
jne
mov
mov
sub
cmp
jne
xor
mov
sub
add
mov
or
mov
cmp
je
cmp
jne
sub
mov
add
or
mov
sub
sub
add
add
sub
call
mov
test
je
test
je
sub
xor
mov
add
add
sub
cmp
jne
mov
and
cmp
je
cmp
je
mov
sub
mov
cmp
jne
mov
and
add
xor
cmp
jne
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
add
sub
sub
add
sub
cmp
je
add
sub
mov
sub
mov
add
sub
sub
cmp
jne
cmp
jne
sub
add
mov
mov
or
cmp
jne
cmp
je
test
jne
cmp
jne
add
mov
xor
add
and
add
add
add
add
mov
mov
and
push
push
call
add
mov
add
sub
add
mov
and
mov
cmp
je
cmp
jne
add
mov
mov
sub
and
sub
add
and
add
sub
sub
mov
cmp
jne
mov
or
cmp
jne
add
mov
sub
xor
sub
add
and
cmp
je
mov
sub
sub
pushl
push
pushl
call
push
push
call
add
addl
cmp
je
cmp
jne
call
push
push
call
add
mov
mov
sub
mov
and
test
jne
mov
and
cmp
je
mov
sub
mov
cmp
je
add
add
mov
mov
sub
cmp
jne
sub
mov
sub
mov
cmp
je
sub
add
add
cmp
je
cmp
jne
mov
add
mov
add
and
add
add
test
jne
sub
mov
mov
xor
sub
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
sub
add
and
add
cmp
jne
mov
add
sub
sub
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
mov
xor
push
push
push
push
call
add
add
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
pop
call
pop
push
call
add
push
call
add
pop
push
push
push
push
call
add
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
push
call
add
push
push
push
push
push
call
add
push
mov
mov
call
movl
mov
cmp
jne
add
push
call
add
call
add
mov
mov
push
call
add
xor
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
call
add
cmp
je
mov
push
call
add
call
mov
push
push
call
add
call
mov
mov
sub
sub
mov
push
push
push
call
add
call
mov
sub
mov
push
push
call
add
mov
add
cmp
je
add
sub
cmp
jne
test
je
sub
cmp
jne
add
xor
mov
mov
mov
xor
sub
mov
or
cmp
jne
xor
mov
cmp
je
add
mov
mov
mov
cmp
je
sub
sub
add
add
add
add
cmp
je
and
cmp
je
mov
cmp
je
cmp
jne
cmp
je
add
sub
mov
or
sub
add
cmp
je
mov
mov
or
add
add
or
or
add
add
sub
sub
cmp
je
mov
sub
xor
add
add
or
sub
and
sub
sub
xor
xor
test
je
sub
mov
sub
sub
cmp
je
xor
mov
add
and
push
call
add
mov
push
push
push
call
add
push
call
add
add
push
push
push
call
add
push
call
mov
and
mov
test
je
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
jne
add
mov
sub
cmp
je
mov
add
add
mov
sub
cmp
je
mov
cmp
jne
or
mov
cmp
jne
mov
add
mov
and
sub
sub
sub
xor
cmp
je
mov
cmp
jne
mov
mov
sub
sub
and
sub
add
or
je
mov
mov
addl
sub
add
lea
mov
mov
add
sub
cmp
je
or
mov
sub
add
add
mov
add
cmp
jne
add
add
or
add
mov
xor
add
add
and
cmp
je
sub
xor
xor
sub
mov
mov
or
cmp
je
mov
mov
sub
cmp
je
or
add
add
test
je
mov
add
inc
sub
mov
add
mov
cmp
jne
cmp
je
add
cmp
jne
sub
cmp
jne
and
mov
and
cmp
jne
mov
cmp
je
sub
cmp
jne
cmp
jne
test
jne
sub
cmp
jne
mov
xor
cmp
jne
sub
mov
add
add
or
sub
add
add
sub
and
or
sub
cmp
jne
mov
mov
test
jne
sub
mov
add
sub
mov
sub
xor
sub
sub
test
jne
sub
mov
mov
sub
sub
mov
add
cmp
jne
cmp
jne
sub
cmp
jne
add
add
cmp
jne
sub
cmp
je
sub
mov
mov
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
call
add
push
push
push
push
push
call
add
push
call
add
mov
mov
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
or
call
push
push
call
add
push
call
add
push
call
add
sub
sub
cmp
je
test
jne
push
call
add
mov
mov
call
sub
push
push
call
add
add
add
add
push
push
push
push
push
call
add
push
push
push
push
call
add
add
push
push
push
push
push
call
add
call
push
call
add
push
call
add
push
call
add
push
push
call
add
cmp
jne
sub
mov
cmp
jne
mov
push
push
push
call
add
call
cmp
je
and
push
push
push
push
push
call
add
push
push
call
add
call
push
call
add
mov
add
cmp
je
push
call
add
push
push
push
push
push
call
add
add
mov
mov
test
je
xor
sub
mov
sub
cmp
jne
sub
mov
mov
add
cmp
je
mov
add
mov
add
add
cmp
jne
cmp
je
sub
add
cmp
jne
cmp
jne
cmp
jne
mov
mov
cmp
je
sub
mov
add
mov
add
cmp
jne
add
and
and
sub
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
add
mov
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
je
add
cmp
je
mov
cmp
jne
sub
sub
and
sub
cmp
jne
test
jne
mov
or
test
jne
mov
cmp
jne
xor
mov
test
je
cmp
jne
add
mov
test
jne
or
cmp
je
sub
cmp
je
add
mov
sub
cmp
jne
cmp
jne
add
mov
add
mov
add
sub
cmp
je
add
add
add
add
mov
push
call
add
or
pop
cmp
je
sub
pop
call
push
call
add
pop
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
call
push
push
push
call
add
rdtsc
add
mov
mov
mov
sub
sub
add
add
sub
add
sub
or
sub
or
and
sub
sub
mov
mov
add
cmp
je
mov
or
mov
and
add
xor
or
xor
cmp
je
mov
mov
sub
mov
cmp
jne
mov
sub
test
jne
and
mov
and
add
add
mov
or
sub
xor
cmp
jne
mov
mov
cmp
jne
sub
add
mov
add
add
pop
sub
pop
xor
pop
cmp
je
cmp
jne
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
mov
push
push
call
add
push
mov
mov
push
push
push
call
add
call
push
sub
push
call
add
mov
mov
xor
cmp
jne
and
mov
mov
cmp
je
sub
cmp
je
mov
test
je
cmp
je
sub
mov
mov
sub
cmp
jne
mov
sub
add
mov
add
add
add
add
mov
mov
cmp
je
and
decl
cmp
jne
cmp
jne
and
cmp
je
mov
add
sub
test
jne
test
jne
add
add
negl
mov
add
roll
test
jne
sub
addl
add
cmp
je
add
add
mov
test
je
and
or
sub
jmp
xor
push
push
call
add
push
push
call
add
pop
push
push
call
add
pop
mov
push
push
push
push
call
add
pop
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
push
call
add
push
call
add
push
cmp
jne
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
test
je
push
push
push
push
call
add
mov
mov
push
push
push
call
add
sub
push
push
push
push
push
call
add
call
push
test
je
xor
push
push
call
add
mov
push
call
add
add
mov
call
sub
push
call
add
push
push
call
add
and
push
push
push
call
add
push
push
push
push
call
add
cmp
je
push
push
push
call
add
sub
push
push
call
add
mov
push
call
add
and
add
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
call
push
push
push
call
add
push
push
push
push
push
push
call
add
mov
cmp
jne
push
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
mov
sub
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
cmp
je
add
sub
push
push
call
add
call
mov
sub
xor
add
sub
test
je
add
sub
xor
and
mov
cmp
je
mov
mov
add
mov
add
sub
xor
mov
call
mov
xor
add
mov
add
test
jne
cmp
jne
mov
cmp
je
and
cmp
jne
cmp
je
add
add
sub
add
mov
push
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
push
call
add
push
push
push
push
call
add
add
push
push
push
call
add
call
mov
call
cmp
jne
push
push
push
call
add
add
push
push
push
call
add
mov
mov
add
add
add
test
jne
and
mov
mov
sub
mov
sub
cmp
je
cmp
je
cmp
jne
sub
and
mov
and
sub
add
mov
add
mov
or
je
mov
and
mov
add
add
and
xor
repnz
mov
cmp
jne
mov
push
call
add
call
push
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
mov
push
push
push
call
add
sub
push
push
push
call
add
addl
push
push
call
add
jmp
push
call
add
call
mov
mov
mov
sub
sub
add
cmp
jne
add
or
mov
mov
sub
add
cmp
je
cmp
jne
mov
test
jne
mov
mov
add
add
and
sub
cmp
je
add
or
mov
mov
or
cmp
jne
or
add
mov
xor
add
sub
and
sub
sub
add
and
add
mov
pop
mov
mov
sub
or
cmp
je
add
mov
cmp
je
mov
test
je
cmp
jne
mov
and
add
sub
add
add
pop
add
pop
test
jne
mov
mov
sub
add
cmp
je
cmp
jne
sub
cmp
je
and
add
cmp
je
or
and
or
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
push
call
add
push
push
push
push
push
call
add
push
cmp
je
test
je
mov
mov
push
push
push
call
add
push
push
call
add
call
push
mov
call
mov
mov
call
call
push
push
push
call
add
sub
push
push
push
call
add
and
push
push
push
push
call
add
cmp
je
push
push
push
call
add
sub
push
call
add
call
cmp
jne
sub
mov
push
push
push
push
call
add
mov
push
push
call
add
push
push
push
call
add
push
push
push
call
add
add
call
cmp
je
push
push
push
push
push
call
add
mov
call
cmp
je
cmp
je
push
push
push
push
call
add
cmp
je
add
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
call
xor
push
push
push
call
add
sub
add
and
call
sub
push
push
push
push
push
call
add
sub
push
push
push
call
add
xor
call
push
push
call
add
push
push
call
add
cmp
je
call
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
pop
mov
push
push
call
add
push
push
call
add
sub
add
sub
pop
push
push
push
push
push
call
add
push
push
push
call
add
pop
push
push
call
add
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
test
je
push
push
call
add
call
push
push
call
add
push
call
push
call
add
test
je
push
push
push
call
add
push
push
call
add
mov
call
call
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
pop
push
push
push
push
push
call
add
push
push
push
call
add
pop
push
push
call
add
pop
add
sub
sub
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
and
add
add
or
add
mov
push
mov
add
push
mov
cmp
jne
sub
push
add
sub
mov
mov
add
test
jne
cmp
jne
cmp
je
mov
mov
or
xor
add
and
test
je
sub
mov
sub
sub
and
mov
and
test
jne
mov
mov
and
cmp
jne
mov
mov
or
sub
sub
or
add
sub
cmp
je
mov
mov
sub
sub
sub
sub
cmp
jne
add
or
add
mov
add
xor
test
jne
mov
mov
sub
add
sub
cmp
jne
mov
mov
xor
and
cmp
je
cmp
je
add
cmp
je
and
mov
mov
cmp
jne
sub
mov
add
and
and
mov
sub
and
sub
add
add
xor
mov
mov
add
sub
mov
sub
cmp
je
add
cmp
je
cmp
je
sub
mov
cmp
je
mov
add
mov
or
cmp
jne
cmp
je
add
mov
mov
mov
xor
mov
add
sub
and
add
or
sub
xor
mov
or
xor
sub
add
sub
test
je
sub
mov
mov
cmp
je
mov
add
add
mov
add
sub
add
add
cmp
jne
cmp
je
mov
mov
sub
add
cmp
je
mov
mov
sub
or
sub
sub
cmp
je
mov
add
mov
add
add
sub
add
add
cmp
jne
cmp
je
and
sub
cmp
jne
mov
mov
cmp
je
mov
add
mov
sub
cmp
jne
add
sub
sub
add
and
xor
cmp
je
mov
add
and
add
xor
mov
sub
add
sub
test
je
test
je
mov
sub
add
add
cmp
je
mov
xor
add
sub
add
add
cmp
jne
and
add
sub
test
je
mov
mov
add
cmp
je
and
mov
mov
add
test
jne
sub
mov
and
add
mov
cmp
jne
mov
mov
or
sub
sub
xor
cmp
je
add
pop
sub
mov
sub
mov
xor
add
sub
xor
sub
and
and
sub
pop
mov
mov
sub
add
add
cmp
je
cmp
je
cmp
je
cmp
jne
xor
pop
xor
sub
or
add
and
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
add
add
and
and
mov
push
mov
push
add
add
add
mov
push
mov
mov
add
add
and
sub
add
mov
mov
sub
xor
pop
mov
pop
mov
mov
sub
sub
cmp
jne
cmp
je
mov
cmp
jne
cmp
je
add
mov
cmp
je
or
mov
cmp
jne
add
mov
cmp
je
add
add
cmp
jne
cmp
jne
and
sub
add
sub
or
pop
cmp
je
sub
mov
add
mov
sub
sub
cmp
jne
sub
mov
mov
and
sub
add
add
or
and
or
cmp
jne
add
test
jne
test
jne
mov
mov
cmp
je
sub
sub
cmp
je
add
cmp
je
cmp
jne
cmp
je
sub
mov
sub
mov
add
sub
cmp
jne
add
cmp
je
mov
or
cmp
jne
cmp
jne
cmp
jne
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
add
add
sub
and
sub
add
sub
sub
add
push
add
mov
mov
add
add
cmp
je
sub
push
mov
sub
add
mov
cmp
je
cmp
jne
mov
add
add
push
sub
mov
sub
add
mov
test
je
or
sub
and
xor
xor
mov
add
test
je
mov
mov
xor
add
cmp
jne
mov
sub
cmp
jne
add
mov
mov
add
add
add
sub
and
add
sub
or
sub
and
test
je
cmp
jne
mov
cmp
je
add
add
mov
mov
sub
cmp
je
mov
mov
sub
cmp
jne
test
jne
test
je
mov
mov
cmp
je
cmp
jne
cmp
je
add
mov
cmp
je
cmp
jne
and
mov
mov
sub
add
add
add
sub
add
add
pop
sub
pop
cmp
je
and
pop
sub
xor
mov
test
jne
test
je
or
and
cmp
je
and
or
mov
and
test
jne
mov
test
jne
mov
add
add
sub
cmp
jne
add
add
cmp
je
sub
cmp
je
sub
sub
mov
and
add
mov
add
sub
or
and
cmp
je
mov
cmp
jne
cmp
je
sub
cmp
jne
or
add
sub
leave
ret
