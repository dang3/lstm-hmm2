cwtl
mov
add
push
add
adc
push
adc
inc
sbb
mov
inc
mov
add
and
add
sub
inc
sub
cmpsb
inc
add
cmpb
and
pop
add
bound
pop
sbb
popa
sbb
mov
shll
add
int
adc
add
add
inc
or
pop
lds
inc
add
or
pop
loope
add
sbb
addb
add
arpl
push
adc
flds
add
adc
and
and
sub
add
or
push
orb
cmp
add
add
enter
orl
add
or
add
xor
ret
enter
inc
inc
andb
add
jnp
xchg
add
dec
lea
adc
dec
dec
add
add
and
xor
add
and
add
adcb
dec
inc
and
and
push
sub
add
add
aaa
add
or
and
or
shll
add
subb
add
push
add
dec
xchg
add
sub
or
gs
es
or
addb
orb
push
push
or
or
add
mov
inc
add
jo
add
pop
pushf
mov
sub
xorb
pop
add
sub
dec
mov
adc
aam
push
add
add
and
add
add
mov
push
or
bound
mov
add
dec
popf
and
xor
adc
add
nop
add
sbb
stos
addb
andb
sbb
lea
mov
add
jl
mov
add
dec
addb
lahf
mov
addb
shlb
mov
inc
movsl
and
loopne
adc
adc
sbb
sub
sub
inc
and
mov
xor
and
inc
add
nop
xor
add
xor
pusha
addb
clc
rcrb
mov
dec
add
roll
xchg
dec
adc
addb
mov
add
inc
nop
and
add
and
es
adc
aad
loop
xchg
add
add
or
enter
add
inc
or
or
rcrb
nop
inc
and
and
or
adc
and
inc
inc
orb
push
adcl
and
and
enter
adc
adc
push
inc
add
or
add
in
inc
adc
add
dec
inc
or
add
stos
add
push
ret
add
mov
and
add
shlb
adc
add
xor
add
mov
and
mov
roll
adc
and
or
add
adc
loopne
dec
add
inc
dec
add
add
xchg
add
or
push
dec
sbbl
and
add
mov
or
cmp
xchg
mov
or
mov
add
pop
std
or
test
or
add
inc
daa
inc
or
add
addb
dec
andb
adc
dec
xchg
add
add
adc
add
add
inc
sbb
xor
adc
mov
push
inc
test
bound
add
test
adc
add
addb
or
add
adc
or
add
fs
adc
cwtl
jo
push
mov
test
and
add
mov
adc
shlb
add
addb
add
or
xor
adc
inc
mov
mov
and
loopne
and
inc
or
adc
bound
xchg
mov
mov
sub
addb
mov
add
adc
adc
rolb
or
add
ja
ret
bound
mov
andb
push
addb
xor
andb
test
add
sbb
and
cmp
add
adcb
mov
add
or
sbb
add
and
add
and
mov
push
addb
pusha
and
add
js
fs
add
mov
and
xor
add
push
push
or
and
add
or
add
sbb
pusha
bound
loopne
addb
inc
adc
adc
adc
adc
add
mov
and
add
addb
or
push
xor
inc
testb
cmp
inc
add
subb
or
adc
adc
add
add
gs
orb
add
add
pop
inc
add
adc
fs
pusha
xor
push
popf
add
rorb
dec
fcoml
push
add
shrb
or
push
add
add
add
add
add
adc
movsl
rclb
js
mov
andb
rolb
or
or
push
jb
nop
mov
or
push
shll
add
nop
or
adc
test
test
adc
aam
add
or
push
and
push
mov
add
sub
adc
sub
add
add
nop
sbb
add
xor
add
push
sbb
mov
sbb
sub
or
sbbb
or
pusha
inc
or
daa
jmp
add
xor
or
inc
add
inc
andl
nop
xchg
xor
adc
daa
add
add
adc
adc
loopne
add
test
sbb
or
inc
add
dec
add
sbb
add
in
sbb
inc
adc
mov
inc
inc
or
mov
xchg
adc
ret
cmp
cmp
rorb
add
xchg
xchg
inc
adc
roll
ret
dec
adcl
adc
add
adc
adc
pusha
sbbb
adc
sbb
mov
xor
test
imul
into
adc
ret
inc
add
add
or
inc
adc
inc
andb
inc
xor
add
cmp
xor
inc
mov
xorb
inc
inc
add
test
add
inc
inc
adc
test
shrb
add
adc
adcb
add
sub
add
pusha
add
push
xchg
cmp
daa
sbb
push
xor
inc
lea
add
xor
add
bound
adc
adc
add
or
inc
addb
adc
addb
test
xchg
pusha
or
dec
inc
and
add
add
or
or
test
add
addb
add
inc
inc
and
push
adc
add
and
add
add
xchg
add
add
adc
sbb
xor
inc
sub
addb
dec
and
and
add
popa
cmp
inc
subb
dec
and
adc
and
inc
cmp
adcb
xchg
add
add
rclb
adc
cmp
add
insb
push
add
add
test
pop
and
add
sub
add
add
sub
add
add
add
cmpl
insb
push
push
and
or
pop
sub
mov
andb
pop
loopne
and
adc
add
and
mov
add
and
dec
and
add
sub
add
nop
inc
es
add
inc
push
and
adc
inc
add
push
adc
adc
and
dec
cmp
or
pusha
lods
dec
rclb
or
add
movsb
mov
and
or
inc
xchg
js
gs
mov
inc
inc
push
add
or
inc
or
or
dec
push
push
or
addl
rol
js
and
xchg
and
add
add
jo
inc
xor
adc
add
fmull
add
inc
add
add
add
add
add
add
adc
inc
add
push
popa
orb
adc
and
add
enter
cmp
inc
push
or
and
add
add
addb
inc
add
inc
or
add
and
add
adc
add
push
xchg
and
add
inc
add
push
test
dec
roll
addb
mov
and
imul
shrb
xor
arpl
xor
and
or
andb
popa
inc
or
movl
add
inc
inc
and
cmp
or
or
orb
add
xor
mov
add
add
test
or
mov
mov
add
xor
add
inc
ret
or
xor
add
or
adc
mov
nop
inc
xchg
inc
test
js
push
or
push
add
andb
rolb
es
push
adc
xorb
add
inc
inc
cmp
test
test
rolb
loop
dec
or
inc
inc
jae
sbb
add
or
and
add
add
es
add
addl
sub
pusha
add
xchg
adcb
pop
adc
inc
add
mov
inc
push
push
nop
add
push
and
andb
adc
add
addl
adc
mov
add
add
sbbb
push
mov
and
add
movsb
addb
orb
inc
add
add
add
push
add
add
adc
add
add
sub
add
and
add
adc
dec
inc
mov
or
add
add
adc
add
and
pop
inc
adc
and
and
add
add
add
and
add
addb
add
add
rolb
andl
addl
add
add
sbb
dec
inc
sbb
add
adc
add
add
inc
adc
or
add
add
rolb
push
inc
xor
add
add
mov
and
push
mov
and
inc
addb
sbb
add
and
mov
test
adc
add
or
test
inc
lret
mov
or
or
and
pop
andb
or
add
fiaddl
push
and
mov
add
and
add
sbb
or
pop
and
xor
push
xor
add
add
add
add
adc
cmpsl
adcb
sbb
add
add
push
sbbb
andb
or
or
and
movsb
sub
push
add
addb
fs
adc
dec
adc
xor
nop
les
add
inc
and
add
inc
inc
inc
in
jae
inc
addl
sbbl
add
add
push
pushf
sbb
add
add
and
and
rolb
movsl
add
add
test
imul
pop
and
sub
xchg
inc
add
add
mov
adc
or
push
mov
xorb
nop
adc
into
xor
add
es
add
add
inc
lea
pusha
or
add
xor
cmpsb
addb
inc
nop
inc
adcb
add
add
add
adc
add
andb
stos
add
test
mov
mov
push
adcb
or
mov
add
mov
mov
addl
add
push
xor
adc
and
or
sbbb
add
add
inc
dec
add
addb
inc
add
daa
push
nop
aam
add
add
inc
xor
inc
mov
adc
or
popa
and
or
or
rolb
mov
add
or
adc
add
and
subb
inc
add
add
enter
add
add
push
add
add
and
xor
add
and
fs
add
push
xor
add
sbb
or
or
inc
dec
les
add
orb
sbb
xchg
and
adc
orb
mov
and
or
xor
and
push
pusha
adc
or
add
inc
rclb
or
mov
sub
add
and
add
add
or
subb
or
push
inc
loop
add
add
rolb
adc
mov
loop
les
sbb
add
inc
add
dec
xchg
or
adc
add
add
add
add
add
adc
inc
xor
push
push
inc
and
push
movsb
or
inc
add
add
add
xchg
and
adc
inc
sbb
sub
dec
mov
adc
mov
dec
add
add
inc
pusha
adc
addb
sbb
and
add
out
adc
test
and
pusha
add
add
adc
insb
or
sub
and
dec
add
adc
inc
dec
push
or
or
and
cmp
xorb
inc
adc
or
sbb
addb
adc
add
subl
repnz
inc
dec
mov
adcl
add
adc
inc
add
bound
cmpsb
test
inc
and
adc
and
nop
sbb
inc
or
add
pop
and
adc
or
mov
and
xor
popa
dec
adc
push
dec
and
or
push
addb
fistl
pop
and
push
add
adcb
and
loope
add
add
mov
add
mov
or
sbb
and
adc
mov
popa
add
xor
sub
and
and
dec
addb
push
sub
adc
inc
add
add
adc
add
add
pop
xor
xchg
add
and
or
xor
and
xor
mov
or
les
mov
dec
sbb
or
or
push
push
inc
add
ret
or
add
adc
add
insb
cmp
loop
add
addb
and
pusha
or
loopne
cmpsl
xchg
add
adc
or
mov
nop
add
add
stos
push
and
add
add
add
pusha
and
inc
sub
inc
add
sti
bound
add
xchg
daa
push
adc
or
mov
push
mov
or
addl
test
inc
push
call
pusha
cwtl
bound
add
adc
adc
or
sbb
test
andl
add
or
xor
dec
add
adc
and
icebp
xor
add
movsb
or
add
roll
cmp
addl
adc
orb
sub
mov
sub
add
xor
add
and
add
add
adcb
mov
adcb
add
xchg
je
add
adc
add
add
mov
add
ljmp
and
add
cmp
rol
sbb
inc
or
shlb
and
and
add
sub
adc
mov
dec
inc
pusha
push
adcb
test
dec
addl
add
add
inc
mov
bound
inc
xor
and
inc
add
inc
add
dec
push
and
addl
add
mov
add
call
dec
and
adc
inc
add
push
pop
mov
add
andb
add
or
or
inc
and
add
and
add
push
les
push
inc
add
push
inc
or
add
mov
add
or
add
enter
add
adc
les
dec
or
xchg
push
or
les
push
inc
mov
mov
fs
adc
mov
or
imul
add
scas
bound
sbb
pusha
inc
in
sbb
pop
xchg
add
sub
inc
sub
rolb
popa
add
adcb
xor
add
add
push
inc
or
inc
push
and
add
mov
andb
or
xchg
bound
add
adc
adcb
and
push
add
mov
mov
popa
push
xchg
or
nop
add
push
add
rcll
cmp
add
inc
adc
cmpsl
mov
pusha
or
xorb
adc
or
pop
add
add
or
add
xchg
add
mov
mov
add
add
addb
cmp
lock
add
xor
add
push
call
sub
push
nop
sub
adc
adc
add
and
rolb
adc
and
add
and
inc
mov
add
inc
and
cmpsb
push
add
add
inc
or
mov
test
xor
nop
xor
inc
dec
add
inc
add
and
and
add
lock
add
mov
mov
shlb
dec
add
lods
add
adc
pushf
popa
add
inc
pusha
pop
add
pusha
xchg
sbbb
sub
mov
add
add
add
andb
pop
dec
add
xor
rolb
and
add
jo
dec
and
or
or
xor
dec
add
add
enter
xor
add
adc
xor
add
push
add
test
ret
xor
add
inc
aam
add
es
mov
adc
inc
add
add
or
subb
orb
add
test
add
and
sub
lds
sbb
jecxz
pop
sbb
inc
add
add
movsb
or
or
add
inc
sub
mov
add
cmp
push
or
adc
andl
sbb
xor
adc
push
add
or
add
test
orl
adc
dec
add
movsb
add
add
rorb
pop
and
adc
add
push
or
adc
push
pop
push
add
add
clc
add
and
adc
add
inc
adc
add
xor
add
test
add
add
enter
xchg
xor
jns
shlb
xchg
inc
inc
dec
orb
or
adc
xchg
add
push
add
imul
test
pop
andb
mov
dec
and
sbb
add
subl
data16
add
sub
add
inc
add
inc
or
and
pop
add
adc
andb
or
and
add
inc
or
and
inc
and
orb
adc
push
addl
pop
insl
xor
add
inc
bound
add
and
pop
adc
pop
or
test
or
dec
movsl
and
movsl
adc
or
insb
mov
addr16
cmpsb
push
dec
add
add
sbb
adc
add
into
sbb
and
add
sub
mov
adc
add
adc
mov
and
mov
add
mov
mov
add
and
addl
adc
movsb
sub
bswap
mov
adc
loopne
andb
and
sbb
nop
add
dec
add
push
lods
add
mov
inc
or
or
push
add
add
mov
add
xor
and
movsb
sbb
dec
xor
addl
and
and
sub
adc
xor
adc
sub
add
addb
add
add
inc
mov
or
movsb
or
cmpsb
adc
add
sub
or
or
inc
roll
inc
add
inc
adc
or
lcall
cs
rol
sbb
adc
adc
jo
dec
add
popa
xchg
and
and
sbb
enter
pop
inc
subb
inc
add
stos
test
sarb
addl
mov
sub
pop
test
add
pusha
and
sbb
inc
sub
sbb
adc
add
add
data16
add
bound
inc
mov
ljmp
es
xchg
dec
adc
inc
addb
and
add
les
add
and
sbb
and
dec
inc
add
dec
sbb
adc
test
sub
add
mov
jno
xchg
orb
xor
or
test
and
adc
and
inc
and
addb
push
dec
xchg
add
add
xchg
add
sbb
dec
orb
xor
sbb
and
add
or
pop
cmpsl
adcb
nop
xor
add
mov
insb
and
and
push
inc
add
add
xor
add
add
sbbl
xor
and
add
gs
enter
add
or
and
push
adc
add
and
add
add
adc
add
addl
and
sbb
shlb
add
adcb
add
or
sbb
or
in
add
or
add
cmp
daa
andb
mov
xor
test
sub
movsb
sbb
dec
addb
xorb
add
add
faddl
add
jp
andb
or
add
and
add
add
fadds
add
add
mov
nop
in
mov
ret
adc
add
push
adc
addb
or
rolb
sbb
or
add
inc
and
addl
mov
or
mov
inc
add
add
or
addb
pusha
adc
jb
xchg
sub
sbb
or
shlb
or
dec
adc
addl
inc
inc
or
add
xorl
or
add
addb
daa
add
add
pop
and
inc
inc
or
sbb
mov
add
and
inc
popa
and
pusha
adc
inc
or
add
lock
add
add
addb
add
add
sbb
inc
addb
add
adc
and
shll
add
add
shlb
xor
xchg
xchg
and
adc
cmp
add
add
sub
adc
add
add
or
xor
and
or
adc
inc
or
and
xor
pop
fsubs
mov
add
xor
inc
or
inc
push
mov
add
adc
in
add
add
and
add
push
add
adc
adc
add
add
and
loop
push
add
xchg
rcl
push
sub
xor
test
rolb
add
popa
or
add
or
add
add
sbb
add
and
add
and
xchg
mov
add
and
sbb
inc
add
sbb
lret
addb
xor
add
inc
xchg
or
add
lahf
add
add
popf
enter
add
mov
push
add
xchg
rolb
pop
xchg
add
sub
pusha
inc
orl
or
and
xchg
add
pusha
add
add
xor
addl
add
sub
andb
adc
add
xor
or
sub
int3
shlb
and
test
dec
add
mov
add
xor
inc
sub
ret
jo
add
dec
push
clc
test
adc
adc
add
mov
mov
js
add
addb
dec
inc
add
repz
adc
and
dec
add
or
sub
inc
bound
cmpsb
push
jl
adc
and
adc
inc
or
addb
add
or
adc
add
inc
and
and
les
or
ret
orb
adc
adc
sbb
add
sbb
and
loopne
xchg
sub
pop
daa
add
adc
ljmp
add
or
loopne
adc
test
and
inc
add
addb
mov
push
add
add
shlb
pop
add
mov
push
add
pusha
xor
mov
mov
add
add
xor
pusha
rolb
mov
adc
sub
xor
addb
and
or
or
xor
add
adc
dec
and
shlb
push
add
sbb
and
add
add
pop
add
add
add
add
sbb
add
inc
addb
or
mov
sbb
push
adcl
add
add
jp
and
add
xor
add
ljmp
adc
andb
and
inc
in
or
or
add
add
add
or
movsb
add
add
sub
rclb
add
add
add
inc
andb
jo
mov
inc
push
add
addb
sbb
and
add
jb
mov
mov
es
roll
pusha
push
add
adc
adc
mov
loop
orb
lret
inc
add
sub
push
addb
and
nop
inc
loop
xchg
pushf
adc
inc
gs
add
fs
inc
and
inc
add
subb
dec
pop
xor
adc
add
or
add
test
add
and
add
addb
push
and
or
or
and
pusha
adc
add
add
rolb
add
add
adc
pusha
adc
leave
inc
inc
addl
arpl
add
add
add
add
and
mov
sub
and
add
add
mov
push
sbbb
or
shlb
add
adc
inc
xor
add
add
inc
mov
addb
add
adc
push
and
adcb
addb
dec
add
and
andb
or
xchg
mov
addl
add
in
adcb
push
inc
sbb
mov
ret
mov
add
loopne
or
xchg
add
pusha
movsb
loopne
pop
add
nop
mov
or
addb
or
add
add
and
cmpl
xor
adc
inc
rolb
add
mov
cltd
mov
adc
add
add
add
movsb
and
mov
xchg
add
push
and
dec
or
add
add
test
and
xchg
add
push
adc
add
add
dec
sbb
inc
jo
mov
inc
push
add
push
push
pusha
int3
addb
add
add
inc
adc
mov
adc
mov
js
add
loop
aad
add
inc
and
add
orb
add
int
bound
add
and
addb
cmpsb
add
jp
arpl
addb
addb
add
and
dec
pusha
adc
in
or
adc
shlb
adc
or
add
adc
or
test
xor
push
add
dec
addb
mov
pop
add
and
sbb
loopne
xor
or
mov
inc
test
pop
adc
or
inc
or
sub
inc
or
lret
or
or
sbb
push
subb
sub
mov
add
adc
inc
add
add
push
dec
sub
add
dec
add
cltd
and
subb
xor
or
sub
push
add
andb
test
add
andl
mov
jo
call
or
or
pop
push
mov
inc
add
stos
xor
test
and
movsb
insl
or
add
dec
or
or
adcb
rorb
add
pop
andb
sbb
inc
pop
loopne
fwait
and
stos
add
add
add
add
adc
adc
inc
add
pop
adc
mov
jnp
dec
add
add
adc
popa
sbb
fisubs
in
dec
inc
dec
and
and
or
add
mov
add
or
or
or
push
addb
xchg
adc
add
add
or
rclb
push
add
nop
dec
or
rorl
inc
add
add
daa
sbb
xor
inc
and
push
add
dec
adc
inc
rcll
adc
movsb
sbb
add
adcl
and
add
dec
or
inc
inc
or
test
xchg
or
adc
add
dec
mov
addb
or
add
clc
loopne
add
stos
mov
addb
or
mov
inc
and
add
rolb
mov
or
addl
and
add
dec
enter
mov
add
push
add
add
lods
cmp
adc
add
and
inc
add
push
rclb
mov
test
pop
xor
cwtl
addb
dec
add
mov
add
adc
add
movsb
push
inc
push
add
and
loopne
nop
push
or
nop
lds
and
roll
addb
add
add
xor
sbbb
pop
addb
or
shlb
daa
inc
cltd
dec
adcb
orb
adc
addr16
and
cwtl
and
and
add
inc
add
add
and
add
lds
inc
mov
xchg
or
xchg
or
adc
adc
rolb
add
add
add
or
adcb
add
pusha
push
andb
jns
orb
add
xor
inc
cmp
and
inc
adc
inc
add
insb
and
pusha
xorb
dec
add
or
or
inc
push
add
adc
bound
inc
inc
add
or
mov
xor
adc
or
add
movsb
push
and
add
pusha
add
add
add
inc
add
add
push
add
xor
add
mov
bound
inc
and
adc
shlb
add
add
add
or
add
nop
sub
and
cmp
add
adc
sub
push
test
xor
push
nop
adc
add
add
adc
add
jbe
add
dec
popa
mov
cmp
and
test
xor
push
xor
adc
add
lds
cmp
adc
add
add
add
out
subb
or
dec
or
and
adc
aam
insb
lds
add
or
add
sbb
bound
adcb
sbb
dec
sub
subb
call
pusha
push
adc
push
and
add
sbb
mov
push
add
mov
add
push
or
add
fldenv
movsb
xchg
nop
or
inc
add
add
adc
sbb
fs
andb
nop
sub
add
inc
dec
leave
push
or
sub
inc
adc
inc
and
mov
add
add
sbb
xorb
push
dec
pusha
add
xor
mov
mov
pusha
add
inc
or
sbbb
mov
or
add
addb
test
inc
add
add
pusha
pop
adcb
inc
xchg
sbb
mov
sub
or
add
adc
pop
push
inc
sbb
or
and
add
rolb
jo
or
inc
add
add
add
andb
sbb
pusha
adc
sbb
or
push
add
add
add
test
and
sub
add
or
add
add
arpl
add
xor
sub
nop
or
sbb
xchg
bound
push
add
add
xchg
xor
mov
push
andb
mov
jo
test
add
add
rolb
movsl
dec
adcb
xor
push
xor
cs
mov
adc
sbb
das
mov
subl
push
add
mov
sub
xchg
and
add
and
inc
add
xchg
loope
and
xchg
orb
xchg
and
ret
mov
dec
lds
test
push
adc
sub
xorb
in
or
add
mov
dec
addr16
xor
add
ret
add
subb
inc
or
sbb
add
js
add
add
push
push
add
adc
and
adc
xor
test
je
mov
mov
or
push
push
and
dec
add
adc
cmp
inc
add
add
adc
add
xchg
ret
xchg
les
mov
push
andl
xchg
jo
or
add
adcb
mov
add
add
and
bound
sbb
add
inc
push
nop
and
push
ret
and
adc
inc
adc
adc
add
xor
xor
add
dec
push
or
xchg
or
test
addl
mov
cmp
xor
or
sub
or
and
or
cltd
cwtl
add
sub
inc
add
inc
add
add
es
sub
adc
add
dec
add
add
add
and
push
add
nop
test
sbb
and
push
push
push
and
xchg
add
add
test
add
add
add
adc
loopne
dec
adc
add
mov
addb
dec
sbb
inc
nop
orb
adc
add
call
bound
push
add
and
add
inc
add
add
adcb
adc
shlb
jge
rclb
add
sbb
test
and
or
inc
or
add
xchg
or
push
mov
sbb
addl
test
sub
add
push
sbb
orb
add
xchg
add
or
add
xor
xor
and
je
or
adc
xchg
clc
push
adc
dec
adc
shlb
enter
add
mov
test
add
add
xchg
and
inc
shlb
adc
add
or
addb
add
mov
pop
stos
add
addl
gs
push
jno
sub
dec
sbb
mov
and
and
push
pop
add
pop
adc
mov
inc
and
add
adc
sub
mov
mov
push
rorb
inc
adcb
or
inc
add
test
inc
xchg
sbb
orl
and
push
add
and
addb
fs
mov
push
or
and
addb
adc
push
or
inc
add
add
and
push
xor
and
or
mov
or
add
or
rol
loopne
add
add
mov
sub
mov
or
or
les
add
movsl
push
and
adc
stos
inc
orb
or
loopne
orb
inc
adc
inc
or
or
pusha
adc
sub
addl
add
jo
adc
push
sub
test
push
nop
add
dec
sbb
lahf
pusha
push
in
daa
lods
andb
hlt
mov
add
or
nop
inc
push
enter
add
in
add
and
shll
addb
adcb
and
sbb
inc
xchg
adc
add
rolb
dec
and
rcll
add
inc
and
daa
mov
add
in
inc
ret
add
sbbl
mov
inc
pop
push
push
inc
add
adc
and
push
inc
inc
stos
add
and
or
sub
add
push
inc
add
dec
add
add
dec
push
and
stos
add
add
test
add
cltd
add
adc
test
addl
xchg
adc
test
add
sbb
adcb
sbb
add
push
addl
pop
adc
inc
or
add
pop
mov
xchg
outsl
sub
ss
xor
add
scas
rolb
addb
and
add
add
cmpsb
fldl
inc
sbb
lcall
dec
add
nop
mov
add
sbb
or
xor
add
add
inc
rorl
cltd
bound
add
sub
inc
sub
add
inc
pop
inc
sbb
adc
test
add
jo
add
dec
inc
add
orl
inc
cwtl
shlb
mov
add
inc
inc
cmp
add
add
scas
test
or
xchg
add
add
inc
sbb
sbb
add
inc
add
orb
push
add
sub
xor
inc
push
or
add
push
mov
xor
xor
adc
add
inc
pop
nop
or
cmp
sbb
shlb
adc
cwtl
push
dec
rorb
pop
add
pusha
add
dec
sbb
jns
test
andb
sub
add
outsl
or
and
and
adc
sbb
aam
cmp
enter
adc
add
add
adc
add
add
push
add
xor
andb
inc
push
adc
and
dec
test
inc
inc
add
add
call
addb
mov
or
add
sub
loopne
or
inc
jns
addb
or
or
add
andb
or
dec
or
add
and
inc
add
add
add
xor
add
add
sub
or
inc
add
dec
inc
addb
inc
push
cwtl
add
add
lods
add
or
xorb
inc
mov
push
adc
add
orb
inc
mov
shll
add
add
or
xor
cmp
pop
add
inc
inc
push
add
pop
push
or
add
xchg
inc
and
add
adc
or
adc
dec
add
addb
add
add
and
roll
sbb
or
and
addb
push
rolb
dec
movsb
inc
or
push
sbb
sub
push
orb
add
add
add
add
or
and
lock
or
call
lods
sbb
inc
sub
pusha
mov
cmp
add
inc
add
pop
and
add
orb
add
lods
mov
mov
push
pusha
outsb
subb
inc
inc
add
adc
add
adc
inc
add
mov
sub
add
addb
add
and
and
adc
or
shlb
inc
add
and
add
test
or
adc
orb
movsb
add
or
or
add
fwait
nop
add
mov
sbb
mov
add
add
and
inc
adc
adc
add
or
addb
orb
add
and
add
and
jbe
test
movb
popf
add
rorb
adc
loopne
inc
cmp
sub
inc
and
or
lcall
mov
add
inc
pop
add
add
or
add
adcl
inc
add
add
dec
xchg
test
pop
mov
mov
dec
xchg
add
add
add
adc
add
stos
adc
push
add
adc
push
and
xor
push
mov
sub
and
cwtl
rclb
or
and
adc
or
inc
or
and
adc
sub
add
adc
xchg
mov
mov
push
add
sbb
int3
out
mov
xor
add
adc
lret
sbb
add
nop
add
inc
addr16
adc
nop
rolb
mov
or
xchg
add
adc
pop
xorb
or
mov
or
out
add
mov
add
movsl
or
inc
shll
aad
sub
shll
and
adc
subb
push
inc
inc
add
lds
push
lds
orl
add
adc
xchg
test
add
or
add
add
adc
add
inc
add
and
push
roll
adc
add
addb
in
cs
or
adc
mov
mov
sbb
xor
jp
sub
inc
inc
dec
adc
xor
add
sbb
or
adc
add
dec
add
add
dec
inc
add
inc
add
or
orb
adc
andb
mov
or
add
adc
add
mov
or
sub
inc
add
push
and
mov
addb
add
adc
add
andl
add
xor
test
add
orb
mov
add
pop
inc
adc
inc
xchg
or
and
or
daa
addb
mov
add
add
test
sub
add
inc
pop
or
add
inc
add
in
sub
adc
push
addb
add
pusha
add
les
subl
cwtl
mov
test
add
sub
addl
addl
add
stos
orb
test
daa
jmp
add
inc
popf
addl
xchg
add
adc
adcb
adc
sbb
enter
add
cmpsl
sbb
add
and
add
inc
push
inc
add
or
add
or
add
push
mov
sbb
leave
adc
xor
ret
add
mov
inc
sub
or
lock
add
add
pusha
xchg
cmp
and
add
and
xchg
test
push
call
inc
inc
inc
or
or
xchg
add
or
inc
and
adc
rolb
test
and
xor
or
or
add
sbbl
lds
xor
or
enter
addb
adc
and
adc
xor
sub
xchg
dec
sbb
inc
add
inc
add
add
xor
add
dec
ret
adc
push
add
sub
test
adc
add
test
add
inc
pusha
add
add
mov
movsb
inc
test
arpl
sub
addb
add
add
and
or
adc
adc
dec
test
push
push
push
or
add
add
push
xor
adc
inc
add
cmp
mov
and
pop
xor
or
pop
adc
sbb
inc
add
add
add
add
inc
subb
cmp
add
mov
add
xor
pop
adc
and
adc
sbb
adc
or
add
inc
push
inc
push
adc
or
inc
aad
add
push
inc
or
adcl
add
pop
and
add
sbbb
movsb
add
or
enter
inc
orb
mov
insb
add
add
inc
movl
xchg
add
add
inc
xchg
mov
add
add
jb
addb
push
addb
add
enter
aaa
mov
add
adc
add
add
and
push
shlb
add
rolb
or
inc
and
dec
test
xor
add
rorb
sub
movsb
xor
sbb
es
xor
inc
sub
add
and
inc
xchg
mov
dec
inc
adc
inc
mov
add
add
inc
xor
sub
and
mov
dec
add
ljmp
and
add
ret
and
add
or
pusha
xchg
ret
test
adc
lret
dec
and
inc
bound
push
popa
adc
cmc
add
add
or
and
addb
mov
add
dec
ret
or
sub
adc
add
add
push
and
add
shll
add
adc
rcrl
mov
and
push
add
push
add
add
or
adc
sub
test
dec
mov
add
add
xorb
and
add
and
mov
add
and
jl
clc
enter
add
and
mov
inc
orb
add
add
roll
add
add
or
push
add
mov
sahf
mov
and
rclb
add
adc
dec
and
add
shlb
add
xor
rclb
lea
mov
xchg
push
or
add
nop
mov
push
add
adc
sub
rcll
xor
or
data16
xchg
mov
and
and
add
les
mov
xor
or
add
cwtl
or
inc
add
inc
xchg
sub
sarb
dec
push
mov
inc
or
dec
add
test
leave
inc
push
test
inc
adc
add
adc
ret
inc
and
adc
or
add
add
add
es
jbe
sbb
add
xchg
adc
pusha
mov
and
addl
adc
sbb
sub
adc
add
inc
add
add
adc
addb
add
mov
add
or
sbb
nop
inc
add
or
add
add
mov
pusha
push
push
xor
add
and
xchg
add
push
sub
add
mov
adc
es
or
addl
xor
movsb
adcb
add
addb
inc
add
sub
dec
rorb
adc
add
test
xor
sbbb
and
add
add
or
add
add
adc
and
sahf
sbbb
adc
addb
xchg
pop
or
and
dec
add
sbb
push
xchg
or
enter
add
int3
test
mov
add
test
adc
add
add
add
and
add
inc
push
rcrb
push
add
add
or
adc
sub
add
lcall
adcb
cld
xchg
push
add
pop
dec
add
or
push
orb
rolb
adc
add
push
inc
rorl
adcb
inc
mov
add
inc
inc
mov
xchg
mov
push
xor
mov
pop
or
xorb
add
push
adc
popa
push
and
movsb
sbbb
inc
or
and
add
andb
adc
dec
test
pop
or
xchg
dec
sbb
rolb
xchg
add
add
add
flds
or
inc
or
adc
or
sbbl
sbb
add
or
inc
or
mov
push
add
add
adc
or
addb
add
pop
add
jo
or
inc
or
daa
mov
test
or
orb
inc
add
test
add
adc
pop
jae
add
add
rorb
xlat
mov
adc
pusha
and
orb
xor
mov
in
dec
add
roll
add
or
add
add
adc
adc
mov
adcb
es
add
add
adc
cmpl
push
mov
or
addl
mov
xor
ja
pop
or
jno
push
int3
dec
test
inc
add
add
and
pop
push
and
lods
mov
or
movsb
add
inc
add
lea
add
and
or
add
add
push
nop
add
add
inc
test
addl
inc
sub
add
ret
cwtl
inc
movsb
push
add
add
inc
cmp
push
add
adc
push
add
push
orl
add
sub
sbb
or
test
adc
adc
xor
and
pusha
bound
push
icebp
adc
nop
or
xor
jmp
add
inc
add
add
cmpsl
add
mov
add
or
adc
add
inc
cmp
push
or
push
or
test
cltd
pop
addb
add
push
inc
add
push
and
add
add
add
addb
adc
add
insl
orl
xchg
xor
add
push
mov
inc
inc
or
and
mov
add
or
andb
add
call
and
test
loop
xor
inc
add
add
and
shll
adcb
dec
mov
adc
adc
add
xor
in
or
lret
sbb
addb
lods
adc
xchg
test
mov
add
sbb
adc
mov
sub
pop
fadds
adc
add
and
lock
push
or
jo
add
imul
pusha
adcb
dec
add
adc
movsb
xor
add
add
add
add
sub
add
or
add
add
sub
inc
or
adc
test
sbbl
add
lock
or
mov
loope
add
add
add
addl
add
pusha
add
adc
inc
mov
add
add
or
push
push
and
add
incb
adcb
orb
addb
loopne
or
inc
add
or
add
or
add
xor
xor
push
push
add
mov
ret
add
sub
out
mov
add
add
nop
addl
add
and
and
add
andb
add
inc
and
pop
or
xor
or
adcl
inc
add
or
sbb
add
dec
or
addl
rorl
adc
cmp
add
or
es
andl
add
vpmacsswd
sub
sub
dec
add
cltd
dec
sub
xor
push
inc
or
add
and
push
add
and
add
inc
bound
popa
adc
dec
mov
arpl
and
addb
xor
add
bound
and
or
fsubl
add
push
inc
sub
icebp
addl
or
add
push
push
add
lret
add
add
adc
add
imul
or
loopne
pop
mov
ret
push
and
add
andl
jno
sub
or
and
movsb
add
xchg
push
add
nop
test
mov
adc
or
test
addb
or
and
and
addb
add
or
and
add
lock
or
and
add
inc
add
adc
add
test
andl
add
inc
add
push
and
xor
and
push
inc
and
dec
or
or
add
loopne
sub
test
adc
push
push
add
add
lock
or
inc
inc
pop
push
mov
inc
or
add
cs
inc
add
push
or
push
or
sub
add
push
or
sbb
movsb
inc
adc
test
and
jo
xchg
add
add
inc
sbb
add
or
or
or
addb
cmp
ljmp
adc
orb
and
add
and
or
add
and
add
cmp
add
inc
rolb
rolb
addb
addb
adc
jo
add
addb
jecxz
mov
jo
pusha
xchg
push
add
xchg
and
add
add
and
test
sbb
test
add
inc
add
dec
mov
or
andb
shrb
adc
and
add
add
add
andb
add
adc
add
add
inc
and
mov
and
add
add
sub
inc
xchg
add
add
or
add
mov
mov
inc
sub
add
add
add
add
rolb
sub
add
movsb
xchg
nop
mov
outsb
xchg
dec
addl
pusha
and
add
xorl
add
adc
and
add
mov
and
test
xchg
add
mov
add
add
add
add
and
orb
add
adc
adc
mov
add
rolb
arpl
pusha
sbb
nop
add
sbb
mov
mov
add
and
add
or
push
add
xor
add
add
xor
and
add
or
add
addb
push
pusha
addb
add
cmpsb
push
cmpsl
add
push
addb
andb
and
add
and
shlb
inc
sbb
add
and
sbb
add
or
lcall
mov
pop
inc
and
es
add
inc
addb
adc
and
add
sbb
sub
or
and
sbb
mov
mov
or
add
add
add
popf
jbe
adc
xchg
add
add
add
push
or
inc
mov
add
pop
push
add
or
nop
add
orb
addl
adc
shlb
push
or
movsb
sahf
add
sub
inc
add
andb
and
lea
nop
nop
movb
or
push
dec
cmp
addb
add
mov
in
adc
or
xor
xor
cmp
add
add
add
adc
pop
inc
inc
popa
addb
es
or
dec
add
add
and
adc
dec
repnz
add
loopne
mov
push
and
rcl
sbb
adc
lds
adcb
add
add
mov
and
add
icebp
xorb
sub
add
and
and
add
add
add
add
adcb
and
dec
add
popa
xorl
add
subb
inc
addl
xorb
bound
subb
add
adc
and
pusha
and
shlb
dec
and
orb
and
addb
add
mov
add
add
inc
or
and
add
sub
sub
addb
adc
rcrb
dec
inc
push
adc
add
add
add
add
sub
shlb
adc
add
add
adc
push
add
roll
data16
add
or
inc
add
add
or
or
push
xor
add
xor
andl
push
adc
adc
dec
and
adcb
nop
add
shlb
or
xchg
mov
adc
adc
add
or
add
adc
add
add
push
rolb
sub
and
add
adc
adc
xor
push
push
addb
sbb
and
mov
add
push
mov
adc
add
pusha
inc
add
xchg
add
andb
sub
add
pop
adc
adc
xor
xchg
add
and
adc
cmp
add
xorl
xchg
addl
addb
push
pusha
and
xor
add
and
add
rclb
add
inc
orb
js
inc
adcb
or
xor
or
rolb
inc
add
pusha
or
and
add
adcb
popa
mov
movups
and
shlb
mov
and
add
adc
and
add
push
mov
sbb
mov
or
xchg
and
adc
adc
add
addb
adc
or
xchg
push
adc
or
cmpb
inc
sbb
add
ret
subb
inc
add
call
push
dec
add
and
or
adc
inc
add
pusha
or
jo
add
test
add
mov
andb
jl
orb
add
mov
adc
add
inc
add
add
mov
and
push
adc
sbb
or
or
sbb
inc
es
rclb
andb
inc
inc
add
push
add
adc
add
mov
or
or
add
inc
rcrb
add
or
pop
add
inc
mov
cltd
or
add
and
adc
add
or
orb
rclb
ficoms
pop
and
and
and
or
add
bound
jle
stos
or
xchg
dec
add
adcl
push
and
inc
add
rolb
xchg
mov
sub
addb
add
dec
and
push
cltd
inc
xor
and
and
add
pop
add
inc
add
adc
pop
add
add
sbb
ja
movsb
add
in
push
add
add
mov
cmp
add
or
dec
test
shlb
ljmp
add
mov
sbb
sbb
jbe
add
add
arpl
add
fs
or
sbb
add
sbb
add
adc
mov
add
addb
mov
adc
inc
dec
inc
test
inc
push
add
addb
addl
add
and
or
xchg
adc
sbb
or
in
xor
and
cs
mov
adc
inc
add
loopne
enter
inc
add
add
adc
add
add
or
roll
adc
orl
mov
push
movsb
push
adc
enter
add
js
pop
add
nop
or
and
es
add
push
push
addl
push
enter
pusha
pop
add
and
inc
cltd
ret
xchg
add
adc
or
bound
or
add
add
add
adc
and
inc
or
add
mov
lret
add
add
xor
xchg
add
add
lea
or
test
dec
addl
andl
or
ret
add
cmpsb
or
add
mov
mov
sbb
inc
add
add
int3
add
push
add
push
dec
add
inc
adc
add
or
or
or
or
add
inc
adc
sbb
add
sbb
adc
add
or
add
mov
adc
push
and
and
inc
inc
sub
dec
adc
bound
or
add
add
mov
push
push
test
lea
dec
xchg
nop
inc
add
mov
add
pop
push
add
add
nop
adc
inc
add
add
xor
popa
add
adc
mov
inc
sbb
add
add
xchg
add
cmp
sub
add
mov
or
cmp
pushf
add
and
sbb
add
addl
add
sbb
mov
xor
mov
dec
add
and
mov
or
mov
nop
sub
addl
inc
fmuls
adc
and
add
add
push
inc
cmp
mov
cmp
push
and
dec
add
jnp
sub
bound
add
sub
push
push
or
and
push
jo
adc
adc
clc
add
inc
add
push
mov
or
dec
or
inc
andl
mov
and
add
add
push
pusha
inc
test
add
and
adc
add
and
add
add
pusha
inc
add
mov
inc
add
addb
lock
xchg
add
test
ret
adc
pop
pop
mov
loopne
adc
inc
push
call
shlb
arpl
andb
dec
mov
xchg
or
andl
or
or
outsb
inc
sub
and
sbb
popa
adc
jo
mov
xorl
adc
mov
sbb
dec
es
pop
or
adc
sub
add
test
inc
and
dec
add
add
test
addb
sub
add
inc
nop
adc
test
or
cwtl
addl
add
add
jbe
or
and
inc
add
mov
or
inc
sub
inc
orl
add
inc
push
add
add
arpl
adc
add
add
and
adc
add
sbb
xchg
add
dec
push
add
add
add
inc
loope
or
xchg
add
rolb
adc
xor
add
inc
add
les
mov
push
pusha
shlb
add
cmp
cwtl
push
adc
mov
addb
sbb
or
mov
or
mov
add
addb
orl
inc
or
pusha
sbb
rorl
mov
and
and
enter
add
adc
or
lcall
andb
and
sbb
mov
adc
add
andl
add
lcall
or
sub
and
mov
inc
and
add
or
mov
nop
add
sbb
or
addb
es
push
or
inc
adcl
adc
add
adcb
add
add
adc
popa
andl
or
cltd
inc
mov
mov
add
addb
addb
sbb
or
add
jns
popa
inc
popa
xor
add
orb
dec
adc
and
add
sbb
add
add
add
add
and
and
push
rorl
or
add
and
add
add
and
loop
push
xchg
test
inc
dec
add
dec
and
dec
jl
push
leave
adc
or
and
add
add
add
add
mov
add
test
sbb
pop
push
inc
addb
andb
add
adc
xchg
inc
dec
add
sub
add
add
rolb
adc
or
mov
lds
imul
jne
rolb
add
add
add
add
add
or
and
adc
inc
add
test
adc
add
adc
addb
and
add
add
dec
inc
add
add
add
rolb
nop
addb
add
addl
or
add
add
add
add
add
xor
or
or
inc
or
roll
inc
and
add
and
mov
add
addb
add
or
and
pusha
mov
add
add
or
movb
xor
add
add
add
add
or
inc
add
add
add
add
and
and
lds
adc
add
add
xchg
addl
loope
into
addb
addb
mov
xchg
inc
add
add
add
pop
adc
add
inc
adc
adc
push
bound
nop
add
movsl
and
and
add
add
push
sub
inc
enter
inc
adc
test
adcb
inc
add
or
add
test
inc
xor
stos
add
and
and
add
push
add
or
dec
or
pusha
or
inc
inc
or
dec
add
addb
add
bound
add
and
add
and
bound
loope
sbbb
add
add
shll
and
sbb
adcb
add
adcb
or
add
dec
xchg
add
rolb
and
push
stos
add
mov
add
add
push
add
push
push
add
sbb
add
push
inc
or
add
add
add
and
adc
or
cmp
or
and
or
add
add
add
movsb
add
add
mov
and
add
add
or
inc
add
rcrb
inc
add
adc
add
adc
sbbb
add
add
add
dec
add
add
add
add
pusha
cmpb
add
xor
sbb
add
add
or
push
xorb
push
add
cmp
sbb
adc
adc
add
mov
add
adcl
add
add
rolb
shlb
add
add
add
add
add
adc
add
pop
test
adc
adc
or
inc
and
xchg
and
add
ljmp
lret
add
mov
adc
add
roll
inc
add
addb
roll
or
and
addb
add
adc
add
push
add
push
addb
add
xor
add
add
and
bound
add
add
or
inc
add
mov
add
add
out
adc
add
push
add
add
es
lcall
cwtl
test
pusha
mov
pop
adc
add
add
addb
push
push
push
inc
add
add
and
mov
add
add
inc
push
mov
enter
dec
add
add
add
or
add
inc
popa
inc
inc
dec
inc
and
add
and
add
inc
add
sub
add
and
or
inc
xor
leave
sbb
inc
push
add
dec
add
mov
mov
push
inc
and
addb
add
inc
and
add
and
loopne
cmpb
add
ret
adc
adc
addb
add
adc
add
and
add
inc
or
add
mov
adc
xor
pusha
add
add
add
add
or
inc
add
or
rolb
push
add
adcb
add
inc
push
and
add
adc
insb
add
add
adcb
dec
and
or
sub
add
add
add
rolb
push
loopne
add
and
add
test
inc
push
add
push
add
push
push
es
mov
add
sub
add
add
addb
add
and
addb
xor
adcb
or
add
or
jb
or
add
xchg
loopne
mov
popl
add
add
adc
adc
or
or
add
add
add
add
add
adc
and
test
and
jo
add
or
add
mov
add
add
add
add
add
addl
add
adc
add
inc
and
add
adc
add
or
or
adcb
add
xchg
add
dec
test
or
or
or
inc
pusha
add
push
push
lcall
sbb
add
andl
add
inc
in
or
test
sbb
inc
addb
inc
and
add
pop
addl
add
pusha
and
adcb
and
addb
and
xor
inc
add
adc
or
add
add
sub
and
and
nop
and
sub
add
add
addb
adc
add
and
add
add
add
or
and
add
add
add
add
add
push
add
add
inc
inc
test
or
push
add
inc
adc
adc
add
add
sbb
add
add
add
orb
nop
dec
add
mov
add
add
adc
je
add
add
sub
sub
xchg
insl
inc
and
add
or
add
add
add
add
add
and
inc
inc
inc
add
mov
inc
add
and
add
adc
addb
popa
pop
or
dec
mov
inc
add
pusha
add
lea
add
adcw
or
adc
add
add
sub
add
add
or
add
inc
add
sub
and
add
adcb
orb
add
or
and
inc
adcb
xchg
daa
add
sbb
addb
shlb
adc
xchg
add
add
inc
or
dec
or
and
push
add
or
test
push
inc
add
sub
push
gs
and
ret
mov
addb
add
and
add
adc
add
dec
and
inc
addb
add
push
bound
add
inc
adc
add
add
inc
xor
add
orb
or
add
or
add
and
add
add
sub
add
addl
mov
addb
sub
add
sub
inc
xor
xchg
mov
jmp
add
inc
movb
push
inc
adc
add
outsb
or
mov
add
cmp
sbb
adcb
sub
test
add
and
push
cmp
inc
and
add
adcb
inc
or
rol
inc
clc
or
add
add
add
add
or
add
add
sbb
add
add
inc
adc
push
bound
sbb
test
adc
add
or
add
add
popa
inc
add
push
add
add
inc
add
add
add
pop
adc
add
and
push
addb
es
add
adc
add
inc
mov
and
add
adc
add
mov
movsl
add
inc
pop
inc
push
mov
add
add
inc
add
add
add
lret
addl
rolb
add
inc
or
add
add
and
add
add
and
add
nop
add
add
fs
or
add
xor
add
orb
inc
or
and
or
popf
adc
sbb
add
add
adc
push
addl
add
add
adc
pusha
mov
addb
addb
inc
add
add
add
push
or
xor
adc
cwtl
lret
inc
inc
add
inc
les
cmp
or
loope
add
adcb
add
addb
add
xchg
and
inc
inc
inc
add
add
or
daa
add
mov
or
xorl
inc
add
add
add
dec
add
add
add
add
add
dec
popf
adc
inc
add
inc
push
int3
add
inc
and
add
or
add
mov
add
adc
and
and
or
orb
adc
addb
add
add
add
adc
inc
push
or
push
add
popa
add
or
inc
push
mov
add
mov
mov
add
or
and
mov
sub
add
xor
add
orb
push
loopne
add
or
xchg
xchg
add
dec
sbb
add
add
and
add
nop
or
mov
in
add
mov
inc
adc
add
and
or
and
clc
or
mov
push
add
push
xor
add
add
sub
add
inc
push
add
or
adc
or
addb
push
add
and
push
xorl
add
ret
mov
add
add
sub
inc
and
add
addb
add
test
pop
push
or
rolb
add
add
add
adc
and
and
add
inc
add
inc
ret
add
add
and
and
adc
inc
and
and
shrl
and
add
and
adc
or
lds
add
mov
or
add
adc
or
add
add
popa
inc
nop
add
push
test
addl
and
add
add
inc
add
adc
or
add
inc
push
mov
dec
and
add
add
mov
and
add
push
push
add
mov
and
inc
adc
and
adc
add
add
add
or
add
inc
add
add
movb
add
add
push
or
rolb
inc
test
add
sub
jno
cwtl
and
push
add
or
xchg
adc
rclb
nop
addb
sub
ret
adc
or
adc
sbbb
add
test
sub
push
dec
add
sub
and
add
test
add
sbb
dec
add
add
nop
orb
xor
push
sub
inc
cmpb
add
add
and
add
ljmp
add
or
xor
add
inc
mov
dec
inc
push
inc
inc
enter
push
or
and
loopne
adc
add
subb
pusha
dec
mov
inc
adc
or
mov
push
adc
pusha
mov
inc
nop
adc
xor
and
or
pushaw
add
add
add
movsl
add
daa
pop
rolb
sub
add
les
xor
or
add
and
add
mov
pop
xor
addb
and
and
add
add
add
inc
addb
or
adc
add
cmp
or
adc
adc
add
inc
add
and
and
or
arpl
add
add
inc
adc
adc
add
inc
addb
add
add
inc
add
add
add
add
xchg
adcb
adc
and
add
and
loopne
add
dec
inc
add
andb
test
or
orl
lds
inc
adc
js
and
and
add
add
add
and
adc
mov
or
or
dec
popa
dec
add
adc
inc
or
add
add
dec
add
inc
add
test
or
add
test
add
mov
add
add
add
addb
add
and
add
xor
addb
adc
add
inc
pusha
addb
add
or
add
add
addb
pushf
add
add
add
add
or
sbb
and
or
inc
xchg
or
adc
add
aam
mov
add
rolb
add
inc
add
add
sub
push
add
cmp
and
add
add
add
add
adc
cmp
and
inc
adc
movb
add
add
adc
test
stos
and
or
adc
add
add
xchg
add
add
out
adc
dec
xor
mov
xorb
add
adc
sub
add
add
add
andb
or
mov
inc
adc
inc
adc
add
add
inc
and
inc
add
nop
addb
xor
and
enter
and
or
add
add
add
push
inc
inc
dec
adc
andb
add
rolb
add
loop
add
add
and
and
xchg
addb
and
add
add
adc
and
and
or
adc
add
add
push
orb
and
mov
mov
inc
and
add
add
add
loopne
xchg
add
adc
add
add
or
mov
add
adcb
adc
test
add
add
add
adc
add
nop
push
inc
mov
or
push
roll
enter
push
inc
inc
sbb
inc
adc
sbb
sbb
add
add
add
mov
add
jo
add
addl
adc
or
add
and
jns
addb
add
add
add
add
and
addb
test
inc
inc
add
inc
add
add
rolb
shlb
add
add
nop
sbb
inc
inc
les
pop
and
add
nop
pop
adc
add
and
and
push
test
nop
adc
xor
or
adc
add
adc
adc
push
adc
and
add
add
enter
adc
dec
test
push
add
add
add
inc
sahf
push
test
int
dec
rorb
push
test
or
cmpsl
jns
in
bound
inc
jmp
mov
icebp
pop
xor
cmp
xor
mov
cmpsb
aas
mov
int3
jns
jno
das
inc
push
pop
lods
mov
jb
jns
dec
fsubrs
add
push
mov
mov
sub
mov
jmp
push
mov
mov
jp
jb
loop
cli
sub
scas
pusha
repz
and
sbb
pop
jle
lcall
into
xor
pop
or
movsl
jns
jp
jns
shl
mov
push
aas
or
movsl
jns
mov
lcall
mov
xor
mov
cmpsb
stc
or
movsl
jns
repz
jecxz
scas
mov
lcall
imul
shlb
stc
mov
sub
add
add
jno
and
cmp
inc
mov
es
lods
stos
hlt
sub
shrb
test
jp
jb
jle
mov
sbb
cmp
jns
mov
cmpsb
xor
inc
cmpsb
movsb
mov
movsl
jns
mov
movsl
xor
jnp
add
into
mov
aas
mov
pop
jl
cwtl
jmp
scas
cmp
push
push
loopnew
mov
mov
aam
lds
sti
sub
mov
xor
sbb
jns
mov
inc
outsl
mov
xchg
sti
xadd
movsb
jmp
add
lods
inc
daa
sti
paddd
pushf
lods
cmp
sti
popf
ljmp
cs
mov
loopne
mov
jmp
mov
cs
mov
lret
dec
cmpsb
stc
xchg
pop
mov
daa
stos
cmp
insl
push
mov
adc
push
scas
mov
jno
xor
and
push
aas
sub
cmpsl
cltd
adc
jle
jp
arpl
pushl
std
cmpsl
mov
xor
jg
cld
xchg
push
jmp
xchg
scas
enter
add
int3
push
lret
sub
cmp
add
lret
mov
xor
shlb
orps
int3
aad
push
roll
out
rcl
loopne
add
sahf
cwtl
cmp
and
sbb
or
sbb
stc
push
jae
sub
cmp
aas
dec
push
and
in
adc
lcall
mov
cmpsb
stc
jg
mov
jns
fnstenv
sarl
incb
xchg
xor
mov
lcall
cmp
stc
pushl
loop
scas
dec
add
sbb
loope
push
jle
cmp
nop
js
mov
cmp
sub
daa
sbb
imul
aas
frstor
repz
pusha
jl
sbb
subb
jns
lods
das
fimuls
repnz
jns
jbe
pop
shlb
or
or
jle
lcall
mov
sub
jae
mov
mov
out
les
stc
test
cmp
pushf
xchg
mov
outsl
mov
cmpsb
jns
inc
mov
stc
xchg
fsubs
pushl
cmpsb
mov
call
cmp
push
mov
popa
mov
jns
mov
loopne
mov
movsb
jns
xchg
enter
xchg
or
mov
mov
jg
insb
rorl
mov
shr
sub
movsl
jns
mov
sub
stc
stos
mov
fistpl
decl
movsb
jns
cwtl
enter
lods
cmp
xor
stc
jg
push
movsl
mov
jns
fsubs
into
das
add
mov
in
sub
movsl
jns
mov
sub
stc
lret
aas
mov
es
add
paddd
or
push
inc
jnp
inc
pop
mov
test
lret
cmp
scas
mov
fisubs
and
sub
and
push
outsb
aaa
movsl
stc
push
repz
jb
mov
pop
pop
jle
repz
aam
addr16
inc
add
sub
lds
shlb
and
mul
std
mov
sub
cmpsl
fsubrl
pop
mov
mov
imul
xchg
mov
jnp
adc
jmp
or
cmp
sti
mov
test
mov
outsb
pop
enter
jns
cmp
cli
movsl
aas
or
cmpsb
jns
clc
pop
aas
or
cmpsb
jns
repnz
push
jae
jg
mov
shrl
cwtl
movsl
jns
in
loopne
insb
fsubrs
lods
movsl
mov
mov
stos
fsts
jmp
and
jle
mov
mov
daa
mov
or
or
pop
cld
stos
popa
stos
cltd
aas
cmp
mov
jmp
loopne
or
jns
cli
jnp
add
imul
inc
inc
loopne
xchg
cmp
sbb
sub
xor
loopne
mov
idivb
imul
sbb
mov
lcall
repnz
jns
inc
sub
inc
cmpsb
stc
cmpb
or
enter
idivb
mov
cmpsb
stc
push
jle
pop
mov
or
repz
decb
mov
jns
jmp
rcrb
mov
xor
xchg
bnd
aad
mov
push
ficomps
sti
sbb
ljmp
cmp
jp
pop
cmpsb
sub
jae
jns
shrb
mov
cmpsb
jns
or
mov
cmpsb
scas
adc
lds
lods
movsl
mov
mov
int3
xchg
mov
cmp
insb
and
cltd
mov
stos
add
fs
mov
mov
dec
pop
cs
jo
xchg
pop
popa
shrb
stos
inc
and
mov
in
pusha
fnstenv
bound
xor
aas
pop
lods
popf
add
jle
cmp
ss
cmpxchg
jecxz
call
and
mov
jbe
fsts
loope
sbb
jl
gs
mov
in
cs
jge
jne
lea
xchg
shrb
fisubl
or
xchg
enter
sbb
lds
popa
outsb
insb
mov
inc
scas
xchg
pop
dec
pushf
nop
jmp
jp
fs
and
cmp
cli
cld
pop
stos
orb
xor
xchg
lret
out
mov
mov
aad
lods
fisubrl
mov
in
mov
mov
out
sarb
xchg
pop
rolb
pop
jnp
cltd
fisttpl
jp
je
sub
mov
push
ret
test
movsb
loop
mov
repnz
nop
pop
aas
cwtl
sub
push
cmpsb
sarb
sbbb
fsubrs
xchg
xchg
repnz
mov
sub
mov
scas
xor
sahf
sti
popf
or
xchg
clc
jb
lret
es
sub
pmulhw
sub
sub
roll
movsl
leave
cmp
cltd
jmp
xor
cli
cmc
pop
push
jmp
push
fiaddl
mov
mov
rorl
xchg
mov
add
mov
inc
frstor
cmc
jno
pop
inc
push
add
push
cmpsb
mov
lahf
loope
inc
mov
sarb
and
add
ret
into
test
sub
mov
repz
clc
xor
mov
inc
mov
hlt
mov
jp
movsb
sarb
and
inc
repz
push
es
dec
mov
or
push
or
cmpsl
insl
into
xor
mov
sbb
mov
ds
mov
sbb
cli
mov
ud2
popf
xchg
mov
cmp
push
fstpt
mov
ret
mov
or
sub
ljmp
jnp
in
stos
pop
cmpsb
addr16
popf
fistpl
in
sub
arpl
popf
adc
mov
xchg
lret
popf
sbb
or
fbstp
out
jnp
push
add
inc
or
mulb
push
fidivrl
cmp
sbb
stc
add
mov
xor
mov
sbb
in
or
mov
loope
out
insb
jecxz
inc
inc
dec
add
enter
xchg
es
cmp
jae
mov
decb
pop
xchg
mov
aas
cmp
dec
xor
sbb
mov
sub
pop
daa
pop
jb
scas
cmpsb
add
aaa
pop
push
add
push
ds
add
and
cli
je
or
adc
pusha
mov
js
repnz
jp
jnp
addr16
int3
inc
jae
and
lcall
cli
jp
aam
or
test
add
ret
mov
adc
xchg
cmp
xchg
mov
mov
mov
mov
mov
ret
mov
adc
aad
mov
stos
in
or
les
call
and
push
mov
add
cmc
std
xor
data16
lods
imul
out
pop
fldt
inc
jecxz
cmp
cli
cmpsl
mov
mov
pop
cmp
in
mov
push
ret
xchg
jno
inc
sub
jae
loope
popf
cmp
dec
loopne
jle
mov
sub
mov
adc
lahf
cmp
andl
pushf
cmp
fwait
cmpsl
inc
mov
shll
aaa
push
mov
push
add
mov
rorb
cmp
or
jmp
shll
sbb
cmpsl
lds
icebp
inc
mov
add
xchg
ret
sti
fidivs
cmp
pop
ret
outsb
push
and
shrb
lea
inc
jae
test
mov
shl
xor
es
popf
outsl
push
addr16
mov
push
or
lea
shrb
inc
lods
inc
jp
mov
jo
mov
mov
ret
cld
lock
mov
adc
pop
dec
mov
pop
add
cmp
mov
loopne
xor
adc
xchg
icebp
cmpsl
and
cmp
push
dec
and
fnstcw
cltd
fstp
mov
sbb
stos
jb
and
jo
test
mov
imul
outsb
mov
ja
push
ret
cmp
xor
mov
es
push
mov
pushl
jmp
adc
int3
adc
adc
push
aaa
rorb
or
mov
or
and
lcall
stc
ljmp
inc
and
push
out
icebp
lahf
xor
xchg
and
lds
jecxz
dec
loopne
call
loop
jae
pop
lea
mov
stc
jmp
mov
outsl
and
mov
enter
add
int3
jno
sub
nop
or
sbb
sub
js
or
jbe
sbb
cmpsb
cmp
mov
adc
fcmovnb
mov
dec
or
pop
outsl
sbb
sarb
mov
mov
sub
and
aaa
push
and
addr16
sti
jns
pop
repnz
inc
xor
cld
scas
aad
call
push
subb
repz
cld
inc
loopne
sub
pop
mov
pop
addr16
call
mov
repz
pop
sub
jle
in
or
jge
jp
js
and
mov
ret
cmpsl
cmp
icebp
push
mov
cld
inc
fmuls
xor
adc
ljmp
loopne
or
inc
insb
repz
jmp
dec
imul
inc
adc
test
cs
inc
sti
jns
mov
or
fwait
add
jg
fprem
aam
add
jle
pop
mov
shrb
fiaddl
dec
imull
in
sti
or
mov
loop
lods
lods
fdivrs
icebp
insl
xchg
jnp
pop
cli
nop
xchg
mulb
xchg
lea
pop
cmp
cwtl
xor
pop
test
inc
lret
xor
or
jo
cmp
in
adc
imul
gs
cld
fldt
xor
add
lret
js
and
mov
stc
and
mov
pop
mov
jmp
mov
movl
ja
inc
push
mov
cmp
cwtl
inc
out
cmpsb
ret
add
xchg
pop
sub
loope
loope
push
jae
pop
or
dec
fs
loopne
lds
mov
sarl
or
sbb
icebp
pop
mov
test
xchg
jge
clc
xchg
xor
mov
sub
rcrl
faddl
aam
fdivl
insb
jmp
xchg
mov
sti
mov
out
mov
and
xor
in
fwait
or
mov
adc
fsubl
pop
jns
inc
sbb
mov
mov
adc
pushf
dec
mov
in
or
jae
jle
out
push
cmp
outsb
jecxz
mov
js
push
jns
mov
std
ss
mov
aam
xchg
rol
dec
jnp
aad
jle
mov
xchg
out
or
mov
jp
into
adcl
cmpsb
mov
je
shll
push
test
push
outsb
pop
add
cmpsb
xchg
dec
push
sti
adc
cmpsb
sub
xchg
mov
fwait
cmp
sub
inc
and
mov
xchg
stos
mov
xchg
push
sbb
cmpsl
mov
or
xchg
inc
movsb
out
cmp
mov
cmpsb
aas
mov
mov
or
mov
push
test
nop
jne
popf
repz
stc
cmpsl
out
xchg
pop
imul
lcall
stos
xchg
cwtl
repz
jns
cmp
cs
sbb
adc
mov
loope
dec
cmpsb
pop
jne
out
ret
imul
test
insl
adc
xchg
test
cwtl
mov
pop
int
sbb
pusha
push
cmp
test
push
jge
out
and
fnstsw
loopne
andl
inc
xor
es
mov
adc
sub
dec
out
fisttps
sub
xchg
fidivl
stc
mov
and
sub
cs
lcall
ds
sbb
lret
repnz
loop
dec
aaa
pop
fs
sbb
mov
outsb
xlat
push
mov
add
sahf
or
mov
icebp
daa
mov
jne
push
call
lods
aam
inc
shll
or
xchg
insb
sub
out
dec
xchg
cmpsl
fstpt
pop
add
adc
cmpsb
inc
out
sbb
and
pop
loop
or
mov
sbb
jle
push
and
loope
enter
jae
mov
sbb
push
mov
push
outsb
jmp
jns
inc
jnp
stc
xor
pop
mov
pop
or
fmull
fwait
mov
scas
icebp
psubsb
fucomp
nop
dec
or
stos
int3
pop
pop
gs
cmp
fcomps
sbb
xor
sbb
int3
fs
sbb
mov
add
pop
adc
and
xchg
cwtl
mov
sbb
jmp
xchg
dec
imul
fdivrs
mov
out
ret
leave
xor
mov
cmp
mov
mov
call
addr16
and
xchg
test
aas
dec
xchg
ljmp
lock
sarl
subb
sub
pop
imul
cmc
push
pop
mov
test
or
nop
sahf
orb
mov
xor
jl
lret
mov
cmp
in
faddl
fisubrl
cmp
or
push
pop
repnz
cmc
xchg
lahf
dec
jbe
inc
jae
xchg
int
cmpsb
xchg
push
ljmp
pop
cli
lds
cmp
sahf
imul
cmpl
lret
dec
aad
in
nop
cmp
imull
gs
test
movsb
cwtl
fwait
scas
comiss
dec
popf
pop
into
add
sbb
cmpsl
jge
add
call
cmp
mov
cmp
lock
pop
pop
imul
aad
mov
lea
into
ret
stos
test
cltd
add
add
mov
lods
jmp
repnz
test
push
dec
addr16
lcall
push
fwait
xor
push
hlt
xor
cmp
mov
pop
lds
mov
popa
aas
out
sti
jbe
out
sub
repz
mov
mov
out
imul
addr16
mov
inc
or
dec
iret
cmp
es
pop
cmc
xchg
outsl
inc
cmpsb
jg
data16
neg
xor
stc
imul
out
shrl
xchg
xchg
mov
inc
lods
test
cmpsb
roll
fidivrl
test
push
sbb
or
popa
imul
jae
push
int3
mov
pop
out
xor
dec
add
mov
pop
sub
jp
sbb
xchg
jl
stos
out
jg
or
mov
aaa
add
mov
jns
mov
inc
or
xchg
pusha
faddl
cmp
sbb
stc
or
push
mov
fs
adc
cmp
lret
jnp
dec
loop
or
xorl
pusha
xchg
loope
cmp
pop
stos
out
dec
test
fsts
cmpsb
inc
cmp
shrl
fdivs
jmp
call
sbb
inc
xor
scas
jbe
xchg
dec
sti
repz
cmp
push
add
out
fs
outsb
lods
aad
sti
sbb
les
bound
push
fcom
mov
daa
or
stos
jmp
jne
push
dec
push
mov
bound
pop
pop
or
mov
je
rorl
sub
faddl
jbe
ret
add
or
jno
idivl
in
outsb
lret
mov
notb
mov
jl
push
xchg
jno
mov
xchg
mov
cmp
lcall
insl
cld
mov
popa
clc
push
int3
push
inc
cld
cmp
lret
cli
repnz
andl
cmpl
jne
xchg
ja
outsb
adc
es
negb
stc
dec
fidivrl
jp
int3
outsb
sub
xor
pop
icebp
mov
sahf
jg
lods
jp
cld
mov
std
adc
sbbb
pop
push
fildll
in
call
sub
jnp
jb
mov
cs
dec
add
mov
xlat
loope
mov
lds
pop
xor
shl
and
dec
lret
daa
push
lods
jne
or
dec
imul
sub
mov
ret
dec
divb
inc
mov
mov
rclb
pop
push
in
xor
and
insl
scas
jns
jb
push
push
in
sbb
adc
stc
cmpsb
jbe
cli
xor
lret
testl
mov
pop
mov
rcll
lods
mov
mov
repnz
jbe
es
push
and
cmp
push
insl
add
cmp
cmp
cmp
bndstx
adc
inc
pop
mov
fld
add
jb
out
cmpsl
mov
lea
add
clc
mov
test
or
in
in
add
xchg
repz
cmp
lds
sub
lea
mov
dec
mov
lock
mov
sbb
lds
pop
mov
pop
or
imul
adc
mov
call
jns
push
cmp
mov
shll
xchg
cmp
mov
and
insl
add
dec
cmpsb
or
sbb
fs
xchg
cmp
test
fistpll
test
lahf
push
jb
stc
sub
imul
in
shll
adc
insl
es
cmp
testb
sub
sarl
pop
inc
pop
repz
sub
mov
arpl
inc
mov
roll
outsl
cmp
in
aam
dec
inc
stos
cmp
xchg
fs
sbb
or
pop
sub
jecxz
nop
dec
test
adc
pushf
jne
filds
add
adc
mov
and
call
test
rcrl
cmp
jge
stc
cmp
or
mov
fstpl
inc
ret
lds
cmp
or
popf
inc
arpl
sub
lds
out
fs
mov
push
inc
cmpsb
ss
lret
lahf
or
mov
adc
lods
nop
mov
repz
mov
cmpsl
xchg
mov
in
out
xchg
mov
jmp
sub
stos
js
xchg
mov
mov
stc
leave
xor
decb
fstps
xchg
pop
cmpsb
cmp
in
mov
jp
xor
lods
xlat
lret
dec
fbstp
cmp
faddl
jp
add
fdivr
loop
mov
jp
xchg
mov
shll
lock
sahf
sbb
stc
aas
adc
sahf
scas
inc
stc
enter
xchg
hlt
and
scas
iret
stc
nop
mov
sub
cmp
bound
mov
jae
sbb
lret
cmpsb
mov
xchg
jmp
mov
xchg
sbb
mov
addb
shrl
mov
push
jecxz
xchg
loope
les
in
cmpsb
inc
fmul
stos
loopne
loopne
jp
insl
lret
or
mov
dec
adc
dec
fdivrl
xchg
jge
cmp
incb
inc
mov
jl
lret
mov
out
inc
mov
into
or
call
or
jb
jno
jne
insl
xlat
inc
addb
mov
ret
jbe
jge
jle
sub
add
or
push
mov
mov
lahf
shrb
aas
mov
scas
pop
in
lret
cs
mov
cmpl
push
xlat
stc
sbb
or
inc
xor
lods
fisubrs
cwtl
call
pop
subl
lds
sbb
into
sub
test
sti
jns
xor
jns
jne
dec
lea
inc
psrld
push
xchg
lcall
mov
push
icebp
in
mov
or
shr
inc
daa
hlt
daa
loope
mov
lods
jmp
iret
add
adc
cwtl
cmp
jb
mov
mov
jns
or
xchg
or
mov
cmpl
inc
jne
mov
scas
cmp
xchg
movsb
mov
push
add
xlat
jge
cli
pushf
dec
es
pushf
lea
or
or
sub
cmp
mov
loope
adc
ficomps
push
sub
lea
sbb
popf
mov
jbe
pop
dec
inc
jo
dec
movsl
scas
icebp
js
mov
sbb
negb
xchg
pop
clc
pop
in
push
mov
adc
js
mov
lock
jg
icebp
lods
jne
cmpsb
pop
fiadds
das
push
pushf
add
pop
add
lret
enter
ja
inc
shl
cmpsl
pop
mov
mov
or
push
lods
mov
jbe
data16
jl
xlat
mov
cmp
mov
xor
shrl
inc
add
imul
cmp
fisubrs
xor
xchg
sub
push
in
clc
sub
sti
xchg
addr16
ljmp
outsl
aaa
aam
or
push
sub
cwtl
movsl
aad
mov
xchg
pusha
pop
cmpsb
enter
enter
lret
pop
jns
sbb
nop
sbb
add
mov
fiaddl
mov
stc
jb
sub
inc
push
aad
and
cmpsb
mov
insb
xchg
add
leave
push
pusha
pop
or
pop
mov
mov
mov
or
and
dec
adc
mov
lods
lods
adc
jmp
xchg
add
xchg
jnp
stos
add
ret
add
mov
shl
mov
mov
add
push
inc
fldenv
or
xor
sub
iret
imul
mov
out
testb
clc
or
into
iret
add
bound
mov
insl
add
out
mov
sahf
jg
xor
jns
movsb
dec
or
cmpb
push
or
pop
dec
mov
mov
mov
icebp
dec
xor
jns
lods
push
pop
mov
mov
enter
jne
and
dec
aam
outsl
mov
arpl
adc
inc
movsb
je
stc
sbbb
or
or
roll
pushf
dec
enter
xor
cmp
sub
cmpsb
sub
sub
cmc
adc
cmc
push
test
xchg
mov
out
pop
inc
inc
out
iret
fldcw
cmp
adc
arpl
sbb
pop
push
test
cmpsb
test
xchg
and
nop
add
mov
loopne
stc
push
push
mov
or
mov
rcl
mov
idiv
out
jne
mov
sub
insb
lds
inc
inc
jl
mov
xlat
dec
jmp
jge
adc
pop
das
popa
ret
jmp
or
jle
mov
cmpsb
test
xor
push
adc
cwtl
int
mov
jp
pop
mov
adc
adc
les
cltd
into
mov
xchg
and
popf
pop
ja
lds
xchg
cwtl
sub
das
dec
movsb
in
cltd
mov
stos
movsb
inc
mov
cmp
fidivs
dec
push
xchg
icebp
test
or
stc
cmp
lret
inc
mov
test
mov
inc
xor
stc
inc
mov
mov
ret
or
dec
pop
or
xlat
mov
jmp
lahf
dec
jecxz
mov
test
into
or
mov
out
mov
add
mov
test
aaa
rcll
sbb
fists
js
stc
cmp
lcall
xchg
xchg
sub
les
push
jmp
adc
xor
xchg
mov
insl
mov
nop
cmpsb
mov
pop
xor
cmp
pop
cmpsb
cmp
cmp
adc
jle
add
mov
xchg
mov
scas
std
push
pop
jns
adc
popf
mov
fdivr
stc
jge
mov
stc
cmp
pop
mov
xor
ds
pop
mov
mov
and
ret
cmpsb
add
push
repnz
cmp
cli
lods
xor
or
mov
ljmp
jae
push
jmp
cmp
movsl
dec
cmpsb
insl
sarb
inc
scas
inc
movsl
fbstp
inc
add
stc
inc
xlat
jmp
dec
fcompl
pop
lods
adc
adc
jbe
nop
mov
aad
cmp
mov
add
shl
inc
adc
incb
or
data16
or
inc
lods
lret
dec
mov
or
push
fstps
mov
mov
pop
inc
dec
push
arpl
jge
iret
add
xchg
cmp
sbb
cmpsl
das
jp
sbb
adc
es
or
popa
das
jle
push
jp
xor
fisttpll
outsl
pop
shl
mov
pushf
insb
ds
mov
jecxz
mov
lcall
xchg
push
fdiv
sti
ret
jecxz
addr16
push
push
gs
fs
test
shlb
inc
inc
xchg
fdivs
jmp
cmp
sarb
dec
cmp
dec
cmp
push
sub
and
jge
mov
repnz
jns
cmpsb
ret
invd
jb
mov
ds
stc
pop
sbb
pavgw
in
movsl
pop
mov
call
push
in
jnp
aas
dec
jecxz
outsb
pushf
andl
xor
in
testb
dec
aaa
and
out
mov
filds
and
scas
jns
pop
mov
test
fistps
leave
xor
jno
shll
shl
stos
cmp
dec
repz
test
mov
pop
sub
mov
jp
pop
cmp
fisubl
add
shr
sub
test
es
adc
aas
and
in
jns
push
loop
mov
pop
in
mov
insl
addr16
imul
push
cvttps2pi
movsl
fdivrl
dec
imul
jg
sbb
ljmp
push
dec
decb
push
xor
es
ja
out
scas
sbb
mov
jnp
push
sbb
test
pop
out
mov
loopne
add
mov
lods
mov
repnz
jp
aas
mov
mov
cli
jbe
cli
lea
mov
ds
inc
jo
sbb
mov
sbb
inc
out
stc
and
or
lods
mov
out
stc
mov
sub
in
jp
pop
ss
cmpsb
test
mov
mov
lods
cld
push
test
cmp
cmpsb
insl
fnstcw
adc
stos
jns
stos
jmp
std
sbb
cmp
rolb
out
stos
pop
into
repnz
mov
mov
adc
scas
mov
outsl
or
push
mov
inc
sbb
pop
gs
sbb
aam
out
or
sbb
les
mov
or
pop
inc
push
cmpsl
cld
or
jle
imul
mov
mov
ds
and
call
sub
mov
cltd
mov
mov
stos
stc
jo
arpl
xlat
bound
cmpsb
mov
mov
pop
push
hlt
sbb
cmpsb
jmp
icebp
ret
dec
mov
mov
movsb
lcall
mov
jmp
insl
in
xor
outsl
push
xchg
sbb
pop
cmp
jg
popa
add
sahf
mov
push
mov
push
push
rorb
stos
sub
into
and
iret
leave
addb
and
mov
aad
cmpl
sub
xchg
lcall
jns
add
sub
sahf
mov
cmp
dec
or
scas
repz
cmc
jns
mov
fxch
call
mov
add
pop
jl
xchg
xor
lods
push
mov
std
int
xchg
dec
aaa
xchg
std
or
sti
mov
xor
sahf
add
lret
jmp
fcmovb
paddusb
mov
xchg
mov
xor
xchg
inc
pop
add
fstps
mov
test
xchg
jge
out
andl
cmp
movsb
dec
dec
jae
mov
jecxz
sbb
mov
test
and
mov
and
fnsave
pop
jecxz
dec
jmp
stos
mov
lods
mov
int
xchg
cmpsb
dec
push
mov
sqrtps
xor
mov
ret
jno,pn
cmp
xor
jge
call
loop
pop
push
out
rcl
mov
inc
outsb
cltd
enter
les
sbb
repnz
xlat
and
dec
sbb
or
add
push
lret
test
sub
imul
cltd
mov
cmpsl
mov
clc
loopne
and
xor
test
sbb
xor
and
xor
pop
add
pop
xor
ljmp
in
icebp
fs
cmp
push
mov
loope
mov
jae
mov
jp
adc
hlt
repz
pusha
fbstp
xor
cmpsb
cs
xchg
mov
inc
test
repz
adc
lea
jmp
jno
mov
add
jecxz
mov
addr16
mov
push
sbb
dec
cmp
mov
out
sub
add
xchg
mov
pop
cmp
inc
adc
outsl
fldenv
vgetmantpd
xchg
mov
sub
jns
shrb
dec
sbb
cmp
push
push
mov
fs
xor
fimuls
ljmp
adc
test
je
add
lret
into
pop
ret
xor
inc
out
push
push
jp
lds
or
fsubl
jg
dec
cmpsb
mov
adc
add
push
cmpsl
outsl
cwtl
sbb
push
popf
mov
inc
fildll
and
or
cmpb
imul
dec
lahf
bound
popa
movsl
xchg
sub
adc
add
std
cld
or
std
nop
xor
xor
inc
jnp
sub
or
das
cmc
or
xor
sbb
add
fists
ret
xchg
leave
scas
adc
push
mov
sbb
mov
test
xchg
mov
loope
xchg
push
xchg
jmp
pushf
das
loopne
add
ret
xor
repz
and
xor
dec
stc
rcrl
xor
mov
faddp
sbb
mov
dec
xor
add
inc
adc
xor
push
xchg
mov
pop
cmp
xchg
popf
and
mov
or
mov
inc
mov
bound
sarb
leave
jecxz
sbb
shl
sbb
sub
adc
mov
test
add
cmp
inc
xchg
mov
pop
int3
imul
aad
jmp
sarl
cmp
lahf
push
sub
sub
cmp
or
jno
mov
xor
repnz
sbb
imul
cmp
push
xchg
sbb
cwtl
jmp
das
xor
dec
mov
adc
loope
sub
stos
or
imul
pushf
cmp
push
aad
adc
std
or
jmp
cmp
mov
cltd
push
push
pop
jb
mov
out
lds
cmp
or
lds
pop
leave
sbb
aaa
push
add
stc
icebp
lret
mov
call
insb
mov
aad
out
das
xchg
rdpmc
incb
mov
in
icebp
loope
iret
cmp
dec
push
push
sub
or
pop
lods
mov
and
lods
stc
xor
outsb
repnz
arpl
push
push
stos
adc
cmpsb
loope
push
sbb
sbb
add
sub
enter
push
mov
mov
outsl
jp
cmp
jo
pop
shll
sub
fidivrs
xchg
jecxz
pop
mov
push
push
inc
xchg
andl
stc
leave
jp
sbb
xlat
mov
cltd
jnp
pop
arpl
sub
dec
cli
lods
xchg
jno
daa
xor
out
stos
mov
nop
and
jno
mov
pusha
pop
ffree
push
lret
push
sub
jge
and
mov
adc
mov
mov
mov
jne
cmp
pop
fsubp
jns
imul
or
cltd
push
and
sbb
stc
jno
call
mov
test
pop
scas
cmp
mov
or
pop
lret
jmp
jmp
jnp
inc
ljmp
aam
int3
scas
repnz
cmpsb
xor
cmc
lods
xchg
imul
sbb
outsl
push
jno
or
pop
pop
cmpsb
mov
mov
jns
repnz
inc
or
sbb
js
cmpsb
ds
int3
inc
push
rorb
lods
imul
xchg
orl
cmc
movsl
rcrl
sbb
rorl
js
cld
mov
push
fnstenv
test
lret
mov
sub
dec
imul
shrb
and
cmp
add
mov
out
mov
cmc
ljmp
mov
lahf
mov
xchg
xor
stos
stc
mov
dec
out
add
adc
rorb
outsb
out
jns
les
dec
bound
mov
push
jecxz
es
mov
or
lret
ficomps
xor
mov
pop
xor
bound
movsl
inc
test
cwtl
adc
fldl
xchg
sub
mov
xchg
xor
xor
and
mov
jno
icebp
je
jns
mov
push
out
lds
shrb
mov
push
and
inc
sahf
add
insl
dec
xchg
nop
jne
inc
aam
enter
pop
bound
and
adc
sbb
push
ret
mov
rcll
cmp
aad
leave
mov
cmp
ss
in
and
mov
add
push
adc
inc
cmpsb
les
jl
mov
icebp
adc
sbb
mov
das
push
lock
lds
arpl
sbb
cmpsb
sar
aas
xor
push
adc
lcall
mov
movsl
jg
cmp
mov
jg
std
push
push
std
loopne
jp
test
mov
aaa
int
out
push
es
mov
scas
or
adc
push
dec
push
push
shll
sub
es
fldt
jae
imul
daa
xchg
lods
cmp
in
push
sub
mov
add
pop
jecxz
or
and
sub
cmc
cld
ds
push
cmpsb
aas
xor
mov
push
mov
stc
negl
dec
lcall
jg
pop
stos
jne
pop
daa
sti
out
jp
into
adc
sub
lods
popf
btc
pop
pusha
and
cmp
int3
inc
jmp
sahf
sub
xor
cmp
dec
push
and
sub
push
cmp
aas
cld
jae
aad
adcb
mov
cmp
sbb
stos
out
in
mov
enter
movsb
mov
je
pusha
test
jbe
cmpsb
inc
add
jo
xor
sarb
imul
sbb
popf
mov
aam
scas
je
jbe
cmpsb
clc
cmpsb
inc
jmp
add
mov
and
sbb
ret
dec
dec
mov
push
pop
jnp
pusha
mov
lock
mov
shlb
cmpsb
aaa
inc
add
cmp
lcall
scas
dec
jg
std
cmpsl
or
pusha
mov
testb
call
cmp
stos
mov
in
mov
popa
punpckldq
aad
mov
xor
aad
push
repnz
fnstenv
stos
loopne
ret
and
sub
sahf
mov
mov
jb
loope
lret
cmpsb
sub
mov
adc
in
dec
pushf
mov
inc
lock
or
cvtdq2ps
push
and
jl
jne
popf
call
sahf
mov
xchg
imul
xchg
add
and
cmp
bnd
lcall
jmp
mov
jecxz
outsb
sub
xor
bound
inc
into
cmpsb
cli
add
push
icebp
jne
nop
cltd
mov
adc
mov
pop
mov
push
repnz
sub
movsl
cmc
popf
push
mov
cltd
mov
popa
iret
lods
stc
insb
cmp
ret
out
fsubrl
faddl
cwtl
in
mov
mov
mov
mov
cmpsl
and
movsb
cmp
xchg
stc
push
xchg
scas
push
xlat
ret
xor
inc
xor
xchg
fwait
int
jno
sbb
std
test
daa
sub
adc
jecxz
stc
adcb
mov
and
mov
mov
add
xorl
or
or
out
je
das
out
jns
fwait
mov
ja
xor
sbb
mov
mov
mov
cmp
and
jecxz
sahf
fsubs
push
add
dec
fcompp
and
cmp
xchg
sti
cwtl
nop
hlt
lea
sbbl
daa
xor
inc
cmp
or
stos
xchg
xchg
xor
aad
sahf
clc
jb
pop
stc
cmc
pop
jno
cli
sbb
sbbl
jbe
jmp
cmc
sbb
decb
idivb
scas
add
cmpsb
sbb
sarb
cmp
sub
xor
sbb
add
jp
cli
fiadds
cmpsb
rcll
gs
je
lods
jns
dec
jmp
mov
sbb
jp
push
push
shlb
fyl2xp1
add
jno
xor
or
dec
jne
lock
mov
cmpsb
sar
out
or
mov
pop
mov
ja
xchg
dec
xchg
mov
inc
and
repz
or
rolb
cmp
mov
mov
mov
iret
sarb
xchg
jne
mov
adc
mov
inc
adc
mov
fisttpll
jge
scas
icebp
mov
and
cwtl
loop
jbe
test
cmp
push
add
sub
dec
fisttpl
and
adc
add
ss
outsb
es
mov
test
fs
cmp
push
int
ret
or
or
mov
gs
cmpb
out
data16
les
inc
mov
xchg
cmp
sub
scas
imul
adc
sbb
nop
mov
xchg
outsl
fdivrs
sbb
sbb
jo
ja
cli
xlat
or
mov
inc
cltd
jecxz
cmp
xchg
sub
lock
jg
xchg
loopne
es
out
mov
in
lcall
sbb
mov
xchg
hlt
mov
add
jo
xchg
aad
jnp
mov
dec
add
jnp
rorl
stc
stos
pop
jecxz
or
pushf
cs
cmp
lret
push
cmp
xchg
sub
jbe
jge
pop
addr16
xchg
cli
mov
adc
aad
and
int
cmpsb
mov
cmpsb
sub
movsl
jnp
es
cmpb
add
cmpsb
outsb
adc
or
int
and
dec
or
fdivl
in
mov
xor
jl
sbb
xlat
dec
stos
push
int3
jnp
sub
cwtl
aas
push
add
ljmp
push
lods
or
mov
sub
cmpsb
cmc
mov
push
cmpsl
loop
jge
cmp
movsl
jle
scas
inc
inc
adc
bound
mov
or
or
add
xchg
gs
fisubs
es
into
js
addr16
push
std
pushf
jo
fsubrl
js
lods
adc
or
push
icebp
mull
insb
push
out
mov
xor
sub
sub
cmp
inc
push
inc
dec
ret
add
push
jp
pop
pop
xchg
mov
pop
jnp
stc
test
xor
add
xor
shll
fistpl
cmpsb
aas
out
in
adc
or
cmp
push
es
aam
adcl
fs
push
out
mov
mov
lea
add
stc
stos
and
jae
pop
mov
xchg
scas
or
clc
out
ljmp
stc
mov
int
stc
and
mov
sub
mov
jmp
mov
es
iret
inc
mov
xor
mov
mov
es
sub
cli
xor
je
or
cmp
in
and
cli
loopnew
ret
xor
rcrl
jne
add
idivb
fdivl
push
addl
aad
pop
xchg
pop
es
pop
sub
adc
jmp
stc
jne
stos
enter
leave
in
sbbl
mov
mov
imul
cmp
mov
sub
movsl
cmpsb
popf
mov
rolb
dec
cli
adc
cwtl
ret
popa
in
inc
adc
add
sbb
push
insl
jmp
jmp
test
or
or
mov
test
das
sub
into
mov
pop
daa
dec
mov
cmp
add
pop
int
cltd
sub
mov
test
sub
sbb
movsl
lret
decl
bound
jns
cmpsb
push
sub
shrl
sbb
lea
mov
mov
ja
sub
mov
dec
popl
sbb
xor
xchg
popa
sub
cmp
push
sbb
popf
inc
into
cmpl
daa
or
mov
test
xchg
xor
test
sbb
sbb
cld
in
sbb
mov
es
mov
movsb
mov
lods
jecxz
mov
jnp
mov
push
add
pop
or
xchg
push
dec
aad
adc
aad
ret
in
mov
in
sbb
mov
lea
or
mov
inc
jp
es
or
jp
mov
in
or
test
push
push
aaa
in
and
movsl
cmp
pop
inc
inc
cmpsb
insb
mov
jle
test
in
imul
and
adc
and
ja
sti
push
cmp
pushf
mov
stos
mov
cld
fidivrl
push
stos
sub
leave
ss
cmpsb
frstor
fmuls
stc
pusha
popf
out
mov
mov
cmp
das
les
mov
shl
outsb
jne
outsl
cmpsb
adc
cmpsb
jle
cmp
and
sub
jmp
jbe
dec
or
repz
pop
mov
loop
lret
mov
mov
ss
push
push
adc
dec
aad
test
lds
cmpsb
into
jns
lock
or
mov
adcb
lea
es
das
leave
pusha
hlt
mov
lock
or
das
xor
and
push
sub
cmp
and
sbb
adc
imul
adc
lcall
leavew
or
jle
xor
imul
push
mov
mov
xor
ss
pop
jo
lods
stc
loopne
xsha1
cmpsb
or
lret
mov
sahf
mov
dec
mov
jne
in
cli
cmp
push
lret
ds
push
jmp
cmp
in
mov
cli
test
aaa
mov
test
cmp
push
cmp
movsl
sbb
fldenv
xlat
inc
xchg
aad
adc
rcr
jg
subb
idivb
fdivs
call
fucomp
mov
adc
mov
xchg
or
int3
mov
loope
cmpsl
ds
jge
jle
cmc
shl
jb
push
jmp
fsubr
sarb
mov
inc
jne
loop
cmp
test
std
in
imul
pop
scas
cmp
xor
cmp
sbb
ss
in
nop
iret
xchg
jo
cmpsb
mov
xlat
or
xor
stos
stc
nop
cmpsb
jno
xchg
mov
xchg
in
pop
sbb
nop
lock
or
cwtl
int3
inc
add
in
mov
pop
add
lods
jg
xchg
outsb
or
movsb
mov
jnp
cli
mov
addb
mov
inc
pop
and
sti
jp
fdivl
adc
cmp
out
arpl
mov
xor
push
cld
lret
adc
dec
imul
dec
divb
loope
js
scas
dec
jle
or
inc
and
or
testb
jge
jbe
cwtl
adc
and
jns
bound
jg
sub
test
int
test
jb
pop
pop
or
mov
stc
imul
es
loope
in
xor
mov
pop
dec
fs
out
imul
dec
cli
sbb
stc
xchg
sbb
mov
sub
mov
xor
mov
jns
ror
xor
repz
pop
mov
das
in
xchg
js
cmc
or
repnz
add
cmpsb
lcall
test
popf
daa
pop
add
mov
call
stos
jo
sub
sbb
mov
jbe
dec
jne
jge
outsl
xor
cmp
mov
jmp
arpl
mov
cmpsb
sub
sub
arpl
cmpsl
xor
pushf
imul
push
mov
aam
ret
test
cmpsb
pop
popfw
nop
mov
aaa
mov
ret
in
cmpsb
jno
enter
jmp
repz
dec
fsubrl
mov
inc
add
cmpl
sub
int3
nop
scas
or
dec
cmc
adc
jnp
aad
cmp
loop
and
sbb
inc
push
loopne
push
push
ret
je
stc
and
enter
les
sbb
lret
xchg
imul
mov
xchg
scas
cmc
adc
push
xchg
sbb
cmpsb
add
xor
mov
cmpsl
out
add
outsl
ja
or
pop
pop
dec
mov
shlb
push
aad
cli
sbb
movsb
mov
ljmp
int
push
fs
jmp
roll
cmp
xchg
outsb
loope
pop
dec
mov
outsb
sub
out
pushf
xor
out
fnstcw
pop
mov
mov
xor
lea
in
addr16
adc
imull
mov
jp
popf
push
sahf
xchg
mov
cli
mov
lret
cli
cmp
stc
imul
xchg
loop
cmp
mov
mov
and
fcmovb
or
jno
jle
jbe
pusha
sub
cmc
stc
or
ret
rcr
mov
mov
mov
nop
mov
iret
sbb
fcompl
or
mov
adc
mov
in
cwtl
scas
outsl
es
mov
jle
cmp
out
icebp
sbb
es
xchg
jne
mov
jb
stc
popa
mov
add
adc
stos
popf
mov
test
in
int3
lret
mov
xchg
movsb
lret
js
cmpb
pop
xchg
and
mov
rcr
or
call
mov
lret
pop
sbb
push
out
dec
or
cltd
xor
mov
faddl
push
and
jo
rol
jns
mov
scas
fcomp
pusha
ja
std
mov
das
aad
jns
inc
sub
push
shl
insl
loopne
inc
ljmp
in
sti
icebp
adc
ret
loop
xchg
mov
fdivrl
push
pop
xchg
dec
dec
ljmp
icebp
cmp
dec
mov
std
daa
sub
jmp
ja
icebp
jns
sbb
or
mov
push
mov
dec
data16
stc
lock
arpl
mov
pop
repnz
fisubrs
test
jp
xor
and
je
imul
mov
jne
test
ljmp
stc
push
and
xchg
cmpsb
insl
divl
clc
cmpl
jo
ljmp
or
rcl
in
jns
lahf
cmp
dec
int
into
lcall
pusha
out
jecxz
in
lcall
pop
mov
lock
lea
add
movsb
loop
push
scas
xor
pop
cmpsb
popf
dec
mov
ss
mov
lods
out
nop
cld
xlat
sti
push
iret
dec
cmp
loopne
out
pop
xchg
cwtl
mov
inc
outsb
jge
in
mov
jo
jle
fisubrs
lods
push
in
stos
test
and
push
fdivrs
sub
imul
dec
mov
push
pusha
roll
cmpsl
push
popa
lea
dec
mov
or
pop
xchg
pushf
daa
lods
jns
pusha
fiadds
arpl
sti
pop
jecxz
inc
shll
fsubs
adc
push
mov
les
push
movsl
lahf
jno
stos
fcmovbe
add
mov
cld
pusha
or
fsubs
shrb
das
xor
add
sar
jp
jl
int
stos
sub
mov
or
sbb
mov
inc
invd
loope
add
mov
cmc
cmp
jnp
insb
data16
sarb
jb
scas
dec
pop
mov
push
inc
clc
lret
mov
xor
adc
adc
call
mov
xchg
or
adc
lock
dec
xchg
sub
xchg
mov
inc
push
cmp
jne
stc
pop
mov
lods
mov
dec
into
jnp
in
clc
mov
adc
add
es
hlt
stc
and
add
adc
enter
jns
loope
and
sub
stc
cmp
js
lcall
xchg
adc
test
iret
or
cmp
fidivs
jp
or
popa
jo
and
shll
pop
movsl
das
cld
jbe
add
fisubrl
stc
vpshufhw
scas
bound
ret
mov
xlat
xlat
loopne
out
out
lock
xor
data16
inc
aas
and
sti
pop
bound
pushf
data16
dec
jmp
sub
sahf
xchg
dec
inc
mov
xor
aam
repnz
int3
pop
ja
cmp
cltd
bound
test
jnp
adc
jecxz
mov
mov
mov
xchg
add
out
xor
mov
or
xchg
fs
mov
sbb
jge
outsl
es
ds
pop
jle
and
testl
fmuls
sub
sub
sbb
ret
dec
popf
fs
adc
test
jmp
inc
int3
adc
scas
mov
leave
sahf
cmp
out
sbb
push
cmpsb
mov
cltd
pop
std
jo
lds
jle
and
ret
jae
pop
cmp
add
fnstenv
mov
fists
xchg
mov
or
mov
sub
mov
mov
cmp
lcall
lret
xor
mov
push
add
cmp
rol
mov
in
sub
inc
cmp
sbb
mov
movsb
cwtl
cli
jns
loopne
fisttpl
iret
les
sti
cs
and
dec
scas
sbb
fs
loope
xchg
dec
cmc
bound
adc
mov
push
aas
in
cmc
mov
mov
xor
jge
add
pop
xchg
inc
jg
es
sub
divl
xchg
clc
and
movsb
xchg
pop
testl
movsb
loopne
test
jb
mov
into
daa
push
inc
lcall
bound
iret
xor
xor
cwtl
lods
stc
jno
cmp
mov
add
sub
aas
push
daa
lock
xchg
sub
and
xlat
loope
ljmp
or
sbb
sub
inc
mov
pop
or
lods
bound
add
inc
add
stc
xchg
aam
sub
stos
push
mov
and
std
mov
cmp
xchg
ss
xlat
es
xor
inc
lds
jns
cli
fwait
scas
or
or
pop
mov
fs
and
mov
jmp
fisttps
mov
jmp
sbb
push
outsl
jnp
xor
ret
leave
mov
bound
adc
pusha
sub
imul
scas
push
add
into
loop
hlt
jbe
jnp
adc
cmp
and
es
pop
mov
cli
xchg
cld
pop
sub
shlb
cmp
lret
dec
popa
loop
lea
cwtl
cltd
cmpsl
push
jmp
stos
in
dec
lock
lods
dec
hlt
pusha
jb
pop
out
shr
fcmovnb
ja
icebp
loope
cmp
cmp
xor
cwtd
cmpsb
cmc
leave
pushf
xchg
mov
jmp
push
addr16
sbb
inc
xchg
out
loope
jb
or
xor
clc
mov
mov
fldl
push
mov
mov
arpl
testl
out
mov
mov
inc
adc
fsubrs
mov
xchg
push
imul
sub
or
mov
fwait
xlat
pop
pop
sub
cmpb
gs
sbb
sub
pop
mov
jns
mov
cmp
jae
pop
fs
in
insb
pop
cmp
mov
inc
mov
test
cli
cmp
push
loope
or
dec
push
cmpsl
out
sahf
mov
xor
out
out
pop
andb
movsl
jp
jmp
xchg
mov
loopne
testb
xor
ljmp
popa
pop
add
push
in
dec
call
sbb
pop
shl
xchg
shr
fnsave
and
inc
cwtl
mov
mov
daa
or
out
bound
or
pop
xlat
shrl
xor
xor
stc
mov
aaa
pushf
fucom
adc
aaa
xlat
and
iret
cltd
cmp
nop
jle
adc
cmpsb
mov
xchg
fs
xor
stc
repz
xchg
mov
cld
das
cmpsb
mov
pushf
dec
dec
mov
jbe
push
mov
xchg
es
mov
repnz
mov
inc
cli
pusha
jle
cmpsl
mov
xor
mov
aas
jb
je
mov
insb
inc
adc
jecxz
mov
push
int3
cmp
orb
ja
pop
dec
imul
or
nop
dec
push
xchg
add
dec
jge
mov
push
jge
push
es
sub
sbb
fcmovu
sbb
mov
adc
push
in
stos
popf
in
sbb
cmp
sbb
dec
sub
mov
jne
adc
ret
cld
inc
jge
int3
mov
push
pusha
aam
cmpsb
xor
cli
or
test
push
fcompl
xchg
xchg
cmp
jne
push
and
jo
push
shl
cmc
cltd
loope
mov
nop
aaa
mov
mov
jcxz
xor
cmpsl
shrb
sub
mov
jecxz
arpl
cmpsl
jns
into
lods
push
or
scas
int3
xchg
dec
lea
dec
int
dec
lods
out
mov
test
leave
aas
sbb
mov
cli
loopne
mov
mov
lods
ja
outsl
jbe
mov
rolb
mov
mov
and
ds
xchg
out
leave
adc
mov
and
jns
pop
pop
rcrb
int3
pop
xchg
xor
lea
add
cmpsb
adc
mov
push
pop
xor
pop
aam
fsubr
mov
iret
cli
dec
fucomip
daa
filds
test
sbb
mov
mov
test
mov
not
repnz
mov
stos
fdivrp
push
sbb
daa
mov
adc
pop
adc
pop
jp
jae
imul
and
xchg
scas
mov
pop
leave
mov
mov
push
rorl
aaa
cmp
xlat
adcl
outsl
adc
or
xchg
insb
sbb
jno
mov
mov
pop
sbb
sbb
push
subb
dec
aad
push
mov
addr16
int
es
fadds
fadds
fs
jp
cmp
xor
into
lret
icebp
cmp
shrb
les
or
mov
adc
cmp
hlt
xor
loop
or
mov
rolb
jmp
mov
and
dec
ror
aaa
data16
pop
cmp
pusha
pop
mov
push
dec
mov
rol
xchg
push
test
push
cwtl
out
sub
nop
push
xor
stos
mov
sbb
cmp
adc
or
pusha
cs
mov
mov
mov
out
outsl
cmpsb
xchg
lods
add
test
jp
xchg
das
cmp
push
cmp
pusha
fldl
cmpsb
iret
nopl
push
popa
gs
inc
adc
jecxz
shr
insl
xchg
clc
lds
int
cmp
sahf
sub
aam
mov
or
cs
imul
push
mov
pushf
xchg
jnp
add
js
in
adc
and
push
enter
mov
fstps
mov
jmp
mov
cmp
cmp
inc
es
dec
pop
pop
pop
stos
ret
jecxz
mov
mov
fstps
jp
or
pop
adc
xchg
xchg
test
pop
pop
mov
idivl
aas
or
mov
or
mov
gs
enter
fldcw
popa
es
or
test
je
xor
aas
adc
xchg
subl
adc
push
jge
xor
mov
cmp
fistl
or
std
push
es
loop
adc
sahf
imul
sub
icebp
sub
iret
sbb
fucomp
stc
and
lock
mov
lahf
iret
xchg
xchg
in
cmp
xorb
data16
and
cmpsl
mov
popa
mov
pop
sbb
divb
mulb
and
mov
fs
movsl
sbb
loope
inc
loope
jp
out
bound
mov
decl
inc
jl
fsubl
cwtl
ss
sbb
dec
pushf
insl
adc
pop
sbb
or
pop
push
xlat
divb
xchg
lea
inc
sub
xor
add
xor
xchg
fnstcw
fiaddl
sub
pop
cmp
mov
xor
cmp
mov
sub
cli
push
icebp
js
rol
out
movb
shll
es
mov
and
pop
scas
aaa
repnz
pop
subb
and
mov
adc
in
inc
add
xchg
jl
xchg
cwtl
xor
mov
mov
jns
daa
sbb
xchg
hlt
dec
sub
movsb
sub
inc
subb
or
mov
add
std
lock
push
push
fsubs
loopne
in
add
mov
mov
cwtl
mov
pop
ds
mov
push
loopne
fcoms
bnd
cmpsb
lods
jbe
shrl
cmp
jge
rol
dec
mov
data16
mov
mov
mov
or
add
jbe
ljmp
sbb
xor
cmpsb
aam
adcl
jno
icebp
push
mov
pushf
out
movsl
daa
rclb
enter
xchg
mov
ja
mov
pop
cld
lock
mov
movsb
inc
ja
inc
mov
mov
push
and
push
lods
sub
jp
mov
and
inc
mov
cmpsl
push
cmp
lds
sti
mov
cmp
xchg
adc
dec
fwait
cmp
pop
sub
pop
jno
or
jl
cmpsb
mov
clc
mov
test
dec
sbb
sahf
cld
stos
inc
sub
sti
stc
pop
pop
adc
test
mov
cmp
jmp
lock
sub
loopne
adc
inc
or
mov
add
xchg
clc
xchg
xor
fdivr
mov
call
rolb
jg
mov
iret
sti
xor
mov
add
xor
jne
stos
leave
xchg
insl
repnz
or
xor
fucomi
idivb
movsb
fcmovu
mov
int
sub
aam
cmp
mov
sahf
push
pop
jmp
sub
mov
in
push
cmp
aad
mov
inc
divb
cmp
stos
pop
out
sarl
mov
in
inc
test
dec
cmp
shlb
push
adc
ficomps
or
mov
mov
jns
pop
mov
mov
ja
dec
add
cli
xchg
pop
sub
push
es
mov
xchg
iret
adc
dec
movsl
pop
inc
cmp
xor
push
or
test
cltd
nop
mov
cld
cwtl
aam
fcoms
daa
push
fadd
data16
mov
xor
cld
adcl
push
repz
add
cltd
xor
dec
push
insl
dec
push
out
iret
sbb
imul
ds
push
test
test
dec
xchg
loopne
sbb
mov
out
jno
jge
mov
cmpl
fwait
ret
pop
or
mov
testb
mov
xchg
push
adc
out
cmp
in
cmp
cli
push
popf
jmp
push
pop
sub
test
jbe
out
pop
xlat
cmc
stc
leave
les
xchg
xchg
ret
or
clc
fcom
xorl
jns
pushf
jge
nop
arpl
std
fistpll
cmc
test
lahf
pop
xor
jl
cmpsb
xor
es
fstpl
out
jns
cmpsb
add
push
add
outsl
mov
push
call
test
outsl
call
cli
mov
fs
cltd
lea
jmp
pusha
inc
dec
sahf
cli
or
push
sub
push
mov
mov
add
negl
and
test
sbb
dec
dec
cmpsl
and
jnp
or
pop
out
int
xor
sbb
daa
outsl
sub
pop
mov
in
lahf
pop
add
and
pop
xchg
sbb
lcall
add
and
mov
imul
pop
mov
mov
stos
lahf
push
es
push
or
adc
or
xchg
push
mov
mov
ja
scas
xor
jge
sbb
inc
pop
xchg
mov
or
push
inc
mov
mov
rclb
or
ret
jle
out
movb
adc
loopne
mov
pop
scas
loopne
leave
sti
jmp
cltd
lds
pop
ss
int3
or
mov
adc
clc
lds
adc
xchg
test
stos
outsl
test
addps
js
and
cmp
fcomip
movsb
imul
les
repz
push
xor
jae
aaa
outsl
out
add
xor
mov
js
mov
mov
repnz
mov
aas
rolb
dec
dec
lret
ss
push
sahf
or
or
insb
sbb
mov
sub
cwtl
mov
adc
lcall
cmp
das
jge
jecxz
sbb
iret
test
lods
out
pop
cld
scas
push
cmc
pop
aam
xor
jo
adc
sub
sub
mov
in
and
cmpsl
inc
imulb
popf
push
pusha
mov
scas
mov
enter
xor
mov
xlat
iret
ss
std
dec
out
mov
sahf
mov
fmuls
es
inc
sub
sbb
sbb
loopne
pop
or
arpl
sbb
sti
shlb
sbb
sbb
clc
push
jnp
lahf
daa
insb
outsl
rcrb
push
pop
repz
push
xchg
mov
mov
test
ficoml
nop
adc
lods
cmc
sbb
les
mov
push
lahf
aad
add
js
bound
push
inc
and
jne
push
int
xchg
add
xor
stc
stos
faddl
or
aad
and
cmc
ss
adc
jp
cmp
loope
adc
jmp
push
enter
cwtl
inc
jl
pop
cmpsl
movsb
push
sbb
add
sbb
jge,pt
xor
xchg
std
lea
test
hlt
jmp
stos
ficompl
ljmp
mov
int
in
push
cmpsb
arpl
mov
add
jns
mov
mov
pop
cmp
lods
pop
mov
sub
mov
sbbb
daa
pop
dec
fimuls
inc
mov
sub
push
and
cmp
adc
xchg
sub
cmp
jno
nop
mov
xor
push
xlat
repz
and
mov
leave
mov
es
push
add
sub
rcrb
les
xchg
imul
setle
adc
lods
sub
sarl
pop
add
push
dec
xchg
sub
cmp
mov
and
test
test
in
jae
dec
dec
fsubs
pusha
popl
fcomp
enter
test
add
xchg
sub
cmp
dec
lahf
ds
dec
xchg
or
mov
shlb
xchg
out
push
scas
push
dec
aam
int
pop
pop
es
test
sbb
cmpsl
test
mov
loope
add
mov
hlt
test
mov
call
sub
jnp
hlt
cmp
aad
jno
inc
notl
sub
adc
push
mov
cmp
mov
pushf
adc
jnp
or
mov
clc
loopne
lcall
imul
in
daa
mov
pop
or
nop
dec
clc
xlat
out
xchg
mov
sahf
sbb
andb
lahf
pop
inc
inc
lock
movsl
fwait
push
xor
sbb
movsl
aam
icebp
mov
mov
xchg
scas
xor
lea
dec
xchg
xorl
and
call
and
cmp
lret
cwtl
adc
stos
jae
aaa
test
roll
ljmp
clc
push
sbb
or
cmp
les
loop
dec
push
dec
add
inc
cmpsb
adc
lds
dec
scas
stc
in
data16
loopne
xor
push
and
call
subb
dec
and
mov
idivl
push
aas
cmpsb
or
in
cli
pop
adc
or
inc
jmp
push
or
cmc
aas
cli
mov
xor
adc
outsb
insb
sahf
dec
cmpsb
xor
insl
xchg
in
sbb
mov
add
dec
divl
sbb
push
jecxz
clc
lods
int
jb
cmp
adc
insb
inc
aaa
mov
inc
ja
cld
shr
imul
jle
xchg
dec
and
das
je
or
in
rol
xchg
mov
jnp
mov
scas
add
sub
cmpsb
mov
adc
stc
add
in
enter
cmp
test
jns
xor
outsl
mov
out
xchg
add
add
lds
pop
pop
adc
repnz
out
pop
sub
mov
stc
stos
mov
addl
lock
je
dec
add
lret
cmpsb
in
push
aad
mov
pop
fdivrp
fs
test
sub
cltd
mov
les
jp
mov
rol
and
fldt
jns
arpl
mov
sbb
jno
sub
sub
cmc
pop
int
jns
mov
and
pop
mov
xchg
jmp
mov
in
xor
push
dec
xchg
lea
das
mov
mov
mov
imul
out
or
aaa
hlt
stc
cmp
arpl
mov
sbb
mov
add
popf
jge
jo
call
movsb
dec
hlt
lret
addr16
test
in
push
arpl
push
lcall
mov
xor
push
insl
mov
sub
or
rol
jmp
stos
mov
cmc
andb
or
inc
mov
cmc
adc
xlat
aaa
jmp
cli
rclb
inc
outsb
sbb
andl
movsb
jl
outsl
mov
rol
mov
mov
push
mov
int3
mov
sbb
lahf
xchg
addr16
dec
xchg
lret
mov
mov
mov
fwait
pop
or
inc
cwtl
into
sub
cmp
pop
cmpsb
cmp
pop
cmpsl
xchg
out
sbb
xchg
aas
aad
push
notb
mov
sarl
cmpsb
lcall
lock
sub
hlt
mov
into
in
push
out
mov
es
test
rcl
incl
jp
xor
mov
addr16
popa
ja
andl
mov
xor
clc
inc
daa
jo
rcrl
mov
mov
js
mov
sbb
fidivs
outsb
cli
jns
in
pop
stos
or
dec
push
sti
les
jecxz
jb
mov
mov
xor
cmpsb
sub
lret
popf
daa
mov
imul
mov
in
jmp
out
jo
scas
mov
mov
scas
movsb
push
gs
cmpsb
dec
pop
xchg
fnstcw
rorb
lret
iret
cmp
xchg
mov
repz
ret
out
add
push
xchg
pop
adc
xchg
ret
frstpm(287
fimull
cli
cmpsl
xor
mov
out
cmp
pusha
inc
bound
outsl
pop
xchg
push
bound
and
jbe
jno
mov
les
xchg
sti
cltd
cmp
jns
int3
and
mov
inc
mov
fldl
dec
adc
outsb
dec
cmpb
aam
std
aam
das
xor
add
pop
jecxz
adc
mov
or
insb
out
fs
cmpsb
mov
xchg
push
addr16
stc
in
call
lea
add
mov
subb
insb
es
js
je
mov
ss
inc
arpl
shrd
sub
pop
dec
jno
mov
cltd
pop
hlt
dec
popf
or
out
mov
mov
xchg
xchg
lret
cmp
lds
pop
aad
pop
cs
cmpsb
push
mov
push
rorl
mov
shrb
push
lock
ret
xchg
push
lods
sti
dec
filds
pop
xor
mov
or
xor
cmp
insb
pop
jge
jae
test
or
vpinsrd
das
lods
pushf
sti
mull
jp
or
ret
mov
leave
lods
add
mov
pushf
pop
rcpps
or
mov
cmp
xchg
leave
or
pop
jp
inc
shlb
jno
aaa
sub
cmp
es
fidivrl
add
lds
dec
inc
mov
xor
or
pushw
pop
mov
cwtl
xlat
push
imul
pop
sub
mov
mov
lcall
stos
enter
xorb
pop
or
push
push
mov
xchg
and
or
push
mov
ret
add
add
lret
bound
pop
pop
jmp
call
xor
mov
jno
push
das
mov
fsubs
sbb
cld
mov
or
mov
cmpsl
xlat
lods
sbb
icebp
jl
sub
pop
jnp
gs
push
lahf
dec
push
shlb
xor
xchg
sub
pop
aad
imul
pop
jp
add
in
outsl
sbb
lcall
and
xor
inc
cmp
lcall
inc
and
adc
sub
lds
ja
push
inc
sbb
popf
js
leave
jns
imul
inc
cmpsb
sbb
inc
and
push
addr16
jp
mov
cmp
cmp
mov
out
push
xlat
mov
pop
cmp
cmpb
mov
xor
stc
mov
int
mov
into
out
nop
mov
shrl
mov
setnp
push
inc
or
jbe
mov
fisttps
shrb
aaa
gs
xchg
cwtl
cmp
or
inc
adc
xchg
andb
mov
push
mov
movsb
mov
ret
aad
cmp
aad
jo
pop
adc
fstpt
adc
cmpsb
out
cmc
jno
into
pop
mov
ja
or
daa
mov
jno
mov
mov
xchg
iret
add
incl
mov
cmpsl
mov
arpl
push
ret
push
iret
mov
inc
cmp
iret
stc
mov
mov
fwait
aas
fidivrs
enter
mov
xor
cs
loope
mov
pop
stos
mov
mov
mov
inc
ret
idivl
xchg
stc
addr16
mov
cltd
mov
int
sub
cmp
lahf
adc
and
cmpsb
dec
jnp
mov
stc
stos
cmp
mov
jmp
mov
rcl
sbb
int3
xchg
xor
fucomip
jns
repz
mov
inc
addr16
imul
rcll
pop
sub
sarb
jo
jbe
mov
cmp
cmp
imul
outsl
fisttpl
and
mov
inc
cmpsb
sbb
jns
stc
das
fdivs
add
add
jmp
clc
inc
popf
jns
cwtl
cld
sub
jle
sub
push
inc
mov
fistpll
adc
in
and
aam
cld
pop
pop
or
xor
je
ljmp
mov
dec
in
and
bound
in
mov
fisubrs
and
sarb
cmp
orb
jb
scas
xor
mov
subl
mov
dec
xchg
hlt
pop
int3
push
mov
and
and
sub
pop
ficoml
push
imul
cs
stos
add
stc
subb
stc
rcrl
lahf
cmp
ja
sbb
stos
dec
push
in
mov
outsl
es
add
sub
mov
lea
jmp
nop
add
add
out
sbb
push
and
jg
bound
test
sub
add
and
insl
mov
sbb
or
jns
xchg
jb
and
mov
adc
stos
mov
mov
frstpm(287
xchg
adc
pop
ja
add
adc
inc
dec
push
mov
push
or
jns
dec
sub
jne
mov
dec
mov
cmpl
test
mov
xchg
and
popf
push
xchg
in
jbe
mov
cmp
cli
add
xor
inc
jns
aad
cmp
cli
jns
xlat
jmp
or
sub
ret
sbb
cmp
inc
dec
inc
pop
stos
sti
cltd
lock
mov
out
aad
popf
or
call
inc
lcall
dec
dec
push
sub
adc
cmp
outsl
add
pop
test
xor
sti
or
mov
loopne
outsb
pop
push
jbe
lods
stos
xor
xor
pop
and
xlat
sbb
jo
jecxz
jns
sahf
xor
out
mov
out
add
sarb
mov
jge
cmpsb
pop
mov
push
jecxz
sbb
jns
mov
and
subb
outsb
pop
jnp
loope
cli
jo
lret
cmp
and
ret
adc
mov
push
ret
xchg
mov
cmp
mull
add
dec
jae
pop
jno
xor
mov
loope
lods
repnz
nop
inc
popa
mov
imul
jns
lea
or
mov
cmpsl
push
dec
dec
lock
stc
out
cmp
ss
lret
push
outsb
neg
jnp
lcall
or
addr16
data16
cmp
int
push
lods
sub
mov
std
dec
test
inc
imul
sub
pop
aaa
lock
mov
pop
stos
xor
adc
push
dec
pop
sti
xchg
dec
insb
jmp
movsl
push
imul
mov
jne
stos
inc
cld
sbb
fmull
popa
test
repnz
or
add
jbe
cwtl
lret
mov
rcrl
mov
jmp
mov
xor
data16
mov
gs
xchg
jbe
xchg
imul
mov
pusha
stc
or
fsubl
xlat
add
out
jecxz
jg
push
inc
inc
pop
std
sub
jp
mov
add
roll
pop
add
ljmp
les
in
pop
and
push
es
sub
out
stc
ds
jl
xchg
out
cwtl
imul
lock
or
jp
add
jae
subb
push
push
or
popf
stos
stos
dec
pusha
mov
xor
or
cli
addl
jecxz
inc
mov
daa
div
sarb
lahf
imul
dec
es
pop
push
into
stc
imul
xchg
out
shlb
dec
push
add
cmpsl
mov
in
xchg
xchg
cmp
or
mov
mov
sbbl
jmp
dec
mov
mov
fisubrl
sti
and
xchg
xchg
mov
add
enter
jo
daa
sbb
stc
adc
sbbl
jp
sahf
repnz
sbb
imul
xor
lods
jp
aas
jne
out
jnp
inc
mov
cmpsb
ror
push
pop
jmp
orb
daa
add
in
sarl
jle
notl
sbb
fiaddl
cmpsl
mov
lock
dec
cmp
lea
or
ror
ja
add
mov
shll
inc
push
push
mov
mov
pop
inc
rorb
mov
inc
imul
lret
cmpsb
pop
test
stc
sub
std
sub
loope
xchg
xchg
or
out
hlt
mov
mov
insb
fs
fisubs
sbb
mov
add
xor
es
cwtl
ljmp
aam
loope
in
jns
mov
push
mov
jmp
or
cs
mov
inc
xchg
pop
mov
cmc
sub
inc
lock
lods
out
testl
pop
or
aad
std
lret
aam
pop
and
insb
sub
add
adc
inc
add
mov
or
aas
lret
scas
pushf
leave
mov
push
rolb
out
adc
mov
or
pop
arpl
jne
cmp
mov
stc
cmpsl
mov
das
out
mov
out
loop
fstps
int
fistpll
js
or
mov
jmp
pushf
clc
repz
cmp
stos
fistps
cmp
xlat
lahf
jne
rolb
stos
cmpsl
nop
add
cmpsb
nop
fnstcw
and
pushf
pop
cmpsb
and
lret
stos
inc
sbb
push
xchg
pushf
xchg
fsubrl
ss
cmp
mov
inc
sar
into
stos
mov
or
mov
sbb
mov
sbb
mov
in
or
inc
into
add
dec
fadds
jae
sti
sbb
mov
insb
sbb
xchg
push
shl
mov
pop
insl
sub
sbb
cld
xchg
cmp
out
iret
and
mov
addr16
popf
cmp
test
test
cmp
test
jl
insl
mov
ficomps
int3
push
add
mov
outsb
test
add
cmc
adc
jne
gs
adc
mov
xchg
adc
inc
loop
push
mov
push
xchg
ret
in
adc
insl
icebp
mov
ret
std
jl
sbb
cltd
fdivs
pop
clc
loope
or
shlb
test
dec
cli
lret
dec
rcr
adc
xor
dec
mov
cmp
or
push
lods
movsb
add
xchg
int3
add
sti
mov
adc
mov
mov
pop
or
outsl
mov
sub
ret
adc
jg
and
test
jge
mov
fs
pop
lcall
ds
mov
shlb
sbb
mov
sbb
mov
mov
or
mov
xor
stos
lods
or
jns
sti
or
lret
aad
and
cmp
popa
inc
test
ds
jo
and
aad
clc
ret
cmp
xor
jo
inc
jne
arpl
es
pusha
xor
xor
pop
es
idiv
arpl
dec
xor
mov
cmp
lods
jecxz
mov
pop
dec
cmpsb
mov
fldt
es
adc
pushf
or
es
sbb
and
lods
insl
scas
repz
add
icebp
inc
cmpsb
rorl
fdivrs
gs
mov
or
in
ret
inc
lcall
in
sub
stos
mov
sbb
cmp
jnp
cltd
and
xchg
gs
xchg
mov
jg
ljmp
cli
jmp
test
lcall
sbb
jns
mov
push
mov
jmp
repnz
nop
popa
sub
sbb
loopne
xor
cltd
and
xchg
jmp
das
dec
not
lret
mov
mov
adc
daa
xchg
clc
add
push
cmc
jmp
push
repz
mov
mov
loope
xchg
test
add
inc
dec
cs
cmp
mov
jp
add
pop
in
and
jp
or
mov
add
add
pop
and
push
mov
xor
scas
stos
scas
popf
fadd
pop
mov
cmp
cli
xchg
pop
sub
mulb
pop
sbb
test
andl
in
sbbl
cmpsb
xchg
lods
popa
mov
inc
sbb
push
mov
decl
dec
dec
lock
test
mov
cs
mov
mov
in
mov
insb
xor
cmp
cmpsb
push
pop
add
xchg
data16
cmp
aam
ds
pop
std
mov
into
jmp
or
dec
fxch
sub
sti
in
inc
cmp
test
jp
push
in
jb
cmp
push
sbb
fwait
xor
fbstp
push
add
popf
sbb
inc
dec
sub
add
mov
jo
xchg
cmc
inc
jbe
insb
push
and
jle
imul
fnsave
cmpw
sarb
jmp
inc
sar
outsb
test
ss
arpl
lret
in
imul
nop
push
mov
adc
sbb
inc
jae
lds
loop
mov
ds
in
stos
add
int
xorb
pop
outsb
sbb
sahf
outsl
cmp
xor
jns
mov
cmpsb
scas
loopne
aaa
mov
jmp
mov
pop
and
push
mov
mov
or
cmpsb
int
loope
arpl
dec
push
sahf
push
in
cwtl
js
das
xchg
not
or
stc
mov
negb
or
int
rcr
push
cmp
mov
inc
xchg
dec
fsubp
add
aam
out
cmp
and
and
and
movsb
int3
hlt
sti
daa
es
rcrl
mov
and
cmpl
inc
inc
test
stc
or
out
js
pop
sbb
dec
call
mov
mov
add
mov
cmp
mov
push
sbb
rorb
add
sbb
es
xchg
fs
ret
cli
or
jo
aam
test
bound
ret
cmp
pop
or
insl
xchg
sbb
pop
loopne
cmp
and
cli
cmpsl
dec
rorb
and
es
cmpsl
push
xchg
cmpsb
in
fs
into
adc
push
jo
add
jno
es
mov
fsubr
cmpsl
mov
sbb
clc
icebp
inc
xchg
movsb
and
or
xchg
gs
sarl
and
lret
pop
pop
jge
mov
mov
out
lods
mov
add
cltd
out
lods
aad
vmovsd
jge
jp
test
movsl
or
xchg
test
cmp
xor
and
test
mov
mov
cmp
adc
pop
test
jge
ficoms
xor
cmpsl
pusha
mov
cmp
lods
inc
cmpsl
out
aam
ja
ret
sub
sub
hlt
or
jae
sti
mov
jmp
xchg
mov
stc
je
in
cmp
cmp
inc
rolb
or
xchg
aad
lods
adc
aam
jmp
pop
inc
sub
mov
stc
dec
or
mov
insl
jne
sub
sbb
push
jp
fucom
inc
repz
ljmp
ret
mov
mov
or
xorb
cmp
out
push
jns
jp
xor
sbb
add
iret
cmp
add
sbb
jne
adc
push
mov
mov
jno
leave
ret
cmp
call
adc
cmpsb
inc
icebp
sbb
sti
push
dec
jnp
fdivrl
pop
add
xchg
pop
sub
loopne
sub
cmpsb
xchg
mov
sbb
ss
sbb
aad
lods
fistpl
sbb
mov
into
les
push
dec
pop
mov
cmc
jns
or
xchg
or
stos
xor
add
outsb
mov
aad
adc
aam
or
repnz
stos
aaa
push
data16
mov
dec
gs
sbb
sbb
call
enter
stc
pop
into
jge
or
xor
push
test
jmp
xchg
cwtl
lar
idivb
nop
dec
scas
cmpsl
cltd
or
jmp
cmp
push
pop
loope
push
jne
cmpsb
cmpl
stc
mov
jmp
es
pop
cli
idiv
mov
cli
ret
adc
or
inc
in
imul
fimuls
mov
dec
or
mov
js
add
xchg
popf
int3
in
mov
cmp
pop
push
dec
mov
cs
ja
je
mov
adc
and
mov
ret
int
aad
negb
xor
mov
jns
sti
pop
mov
mov
pushw
cmp
negb
adc
loop
or
or
nop
cmpsb
stos
scas
push
shrl
cmp
icebp
jmp
test
mov
test
dec
cmpl
std
stos
out
sub
aad
cmp
js
fidivl
push
and
call
cwtl
jb
fwait
mov
pop
sub
mov
push
dec
xorl
ja
mov
stos
int
push
call
lock
xchg
xchg
mov
lods
or
addr16
rcrb
cmc
xor
xchg
xchg
dec
hlt
pop
call
dec
xor
ret
inc
orl
inc
sub
cmp
movups
cwtl
jge
add
lds
test
xor
mov
adc
aaa
repnz
in
or
inc
out
stos
mov
mov
lahf
sbb
sub
push
es
xor
lahf
cli
stc
and
dec
jmp
fsts
sahf
and
fbld
jp
lahf
notb
call
loope
cmp
jg
fiadds
mov
or
aam
cmp
xchg
cltd
dec
xchg
in
push
sahf
jle
imul
sub
mov
xchg
dec
cmp
mov
fwait
jae
sub
pop
push
xor
dec
jge
inc
pop
cli
mov
cmpsb
pop
mov
jne
loope
or
lret
jge
cld
xchg
sub
cmpsb
imul
pop
pop
repnz
jns
rcl
cs
popf
and
cli
mov
cmp
push
pop
jo
sub
in
inc
clc
jp
inc
fcoml
jl
andb
dec
es
pop
jge
pusha
cmp
mov
mov
pop
insl
lds
dec
or
dec
stc
icebp
xchg
out
stc
inc
addr16
fldcw
dec
sub
and
mov
call
lods
adc
adc
mov
add
xchg
loope
push
cld
cmpsb
xchg
repnz
xchg
les
and
aad
test
inc
inc
fdiv
cmc
xor
jnp
pushf
mov
sbb
add
or
movsb
jne
mov
leave
scas
mov
pop
mov
hlt
jmp
div
cli
or
aas
daa
mov
sbb
mov
iret
jne
xchg
inc
cmpsl
jns
mov
mov
add
mov
push
cmp
clc
jmp
aaa
sbb
mov
push
jns
cli
jp
mov
nop
and
test
insl
push
xchg
scas
cwtl
add
mov
test
scas
adc
lahf
out
aaa
jno
insb
cmp
mov
lahf
imul
stos
out
dec
adc
and
in
sbb
inc
xchg
xchg
pop
aaa
cmpsb
out
cmpb
jmp
loopne
or
cmpsb
push
mov
ja
fldt
push
add
adc
fnstenv
cmpsb
ds
les
push
ljmp
cmp
dec
pusha
addr16
rorb
mov
and
cmc
punpckhdq
setns
mov
jae
je
sub
divl
dec
or
lock
addb
repnz
pop
in
ret
cmp
inc
das
das
gs
sbb
mov
inc
aas
or
push
xchg
mov
mul
les
add
cmpsb
lock
mov
or
xor
cmpsb
shrb
pop
pop
ljmp
mov
fsubrs
mov
pcmpgtw
sarl
mov
dec
jne
dec
adc
or
stos
dec
sub
push
mov
fldt
jl
xorl
mov
js
jns
in
or
ret
fwait
pop
sub
cwtl
or
hlt
mov
ret
aam
call
adc
outsl
dec
popf
std
mov
fidivrl
lahf
xchg
iret
mov
scas
cmp
inc
sub
pop
push
icebp
sub
mov
mov
inc
or
jne
cwtl
sbb
outsb
ret
outsb
stos
pusha
aaa
mov
or
jp
sub
dec
gs
cmp
push
xor
sti
mov
mov
shrb
stos
rcl
or
sbb
push
jg
inc
movsb
jp
scas
sbb
loopne
jge
cmp
dec
aaa
loopne
jnp
xor
icebp
ficoml
add
lret
lret
in
test
ljmp
scas
stc
xor
and
mov
lahf
mov
js
pop
cld
add
sub
xchg
in
scas
movsb
std
mov
and
sub
fisttpl
cmp
arpl
jmp
stos
sub
leave
jno
mov
scas
mov
fsubrs
loope
and
movsl
test
lret
adc
sbb
xchg
cmp
jmp
shrl
inc
jo
dec
xchg
in
and
cmp
cmpsb
imulb
push
stc
adc
push
aaa
mov
push
hlt
fisttpl
lret
jnp
fistpll
xor
cli
xchg
nop
cmp
cmpsb
cmp
idivb
pushf
jmp
dec
sub
jno
and
cmp
cltd
out
aad
mov
dec
es
mov
jnp
arpl
mov
repnz
jo
es
jmp
lret
sarl
test
ds
lahf
or
cli
jmp
fwait
mov
dec
cs
ret
scas
inc
pop
negb
loop
cltd
xchg
mov
push
jp
lds
and
into
outsl
inc
inc
cmpsb
popa
push
test
loop
mov
sahf
cmp
sbb
pop
scas
jae
dec
cmpsb
imull
pusha
in
fisttpl
and
pop
mov
arpl
dec
in
jo
shll
mov
test
cmpl
push
iret
or
leave
cmp
sub
into
inc
xchg
lahf
in
fsubrl
cmpsb
ja
pusha
xchg
inc
inc
in
cmp
jmp
and
mov
nop
pop
push
fisubl
stos
inc
mov
pop
aam
cmp
fcompl
repnz
hlt
cwtl
cmp
cli
and
mov
and
pushw
mov
inc
fst
sbb
mov
mov
leave
mov
out
mov
or
cmp
cltd
enter
fldt
adc
jns
aas
jl
mov
pop
xchg
outsl
jge
or
mov
mov
and
outsb
dec
sbb
mov
out
cmp
shll
js
xlat
jbe
cmp
jmp
pop
cmp
dec
add
cltd
dec
mov
push
cld
pop
mov
sub
mov
insl
mov
mov
dec
in
fstpt
jle
adc
xor
cmp
xor
out
and
mov
or
dec
pusha
cmc
xchg
fisubl
xchg
mov
mov
pop
mov
xor
mov
lret
mov
dec
js
in
ss
aam
inc
fwait
jecxz
fidivs
ljmp
pop
ss
sub
lret
ret
sahf
jbe
add
pop
or
xor
sub
call
test
dec
mov
ret
cmp
leave
mov
inc
cmp
cmpsb
push
loopne
pop
sub
jmp
jo
dec
lahf
or
mov
xor
pop
fistpl
jbe
fldl
shrl
mov
add
in
pop
mov
xchg
es
mov
jp
loope
out
cmpsb
jecxz
mov
sub
scas
push
cmp
mov
repnz
pop
mov
negl
addb
js
lret
add
cli
cmp
pop
lds
nop
daa
xchg
ljmp
je
cli
mov
es
mov
cltd
inc
cld
jns
mulb
add
stc
jo
int
out
fstpt
dec
or
or
push
xchg
andl
jne
jecxz
sbb
lods
mov
lods
cltd
or
inc
mov
cmp
dec
call
jl
popl
jae
arpl
pop
push
push
jp
pop
mov
or
movsl
sti
iret
xchg
pop
jae
sahf
add
pop
adc
cmp
jo
mov
xor
jp
ds
orl
das
mov
cmp
shl
mov
push
std
test
pushf
or
ljmp
repnz
xchg
mov
data16
inc
xor
mov
xchg
iret
lret
lcall
jae
jp
jmp
add
pop
stos
push
pop
jb
or
ss
emms
daa
jl
js
stc
jnp
dec
push
mov
xchg
fisttps
jp
adc
popa
scas
xor
push
fnstcw
add
rclb
pop
int3
inc
dec
push
insl
mov
push
insl
mov
loop
mov
or
mov
les
iret
icebp
out
add
push
insb
ficoml
ss
in
mov
xor
inc
shl
sarl
mov
lods
loope
mov
enter
lods
lahf
ja
sti
lret
call
stc
mov
sub
or
sahf
fisubl
or
add
mov
test
sahf
iret
cmp
inc
xor
pusha
sub
xor
fsubs
jge
cli
stc
nop
mov
icebp
or
call
inc
pop
cmovge
stc
mov
push
bound
arpl
bound
stos
jns
mov
pop
aam
pop
push
or
and
push
inc
test
sub
xchg
shrb
fdivrs
pop
dec
push
or
inc
pop
in
sub
cmpsl
rcll
sub
mov
jns
xchg
lahf
mov
sub
fiaddl
stos
addr16
push
push
movsl
push
and
adc
cmp
xor
adc
sbb
pop
cmpsb
int3
jecxz
insl
pusha
mov
inc
dec
mov
mov
fwait
xchg
adc
das
gs
movsb
arpl
leave
sbb
sub
sub
xchg
mov
dec
adc
fildll
inc
mov
dec
movsl
outsb
adc
or
es
sub
or
push
xchg
orl
pop
test
xor
test
mov
test
fs
lock
fisttpl
repz
vcvtpd2psx
sub
or
inc
outsb
out
push
mov
enter
mov
jg
xchg
call
int3
sbb
or
repnz
mov
sub
fcoml
inc
scas
push
shll
xlat
test
in
lods
jns
aaa
pop
adc
xchg
push
es
ficoms
enter
pop
or
cmpsb
cmp
shlb
jp
pusha
sti
or
repnz
stc
popl
xlat
cmpb
dec
dec
nop
mov
insl
mov
fiaddl
mov
or
fwait
lods
lret
sub
sbb
fnstcw
notb
and
repz
inc
mov
or
or
xchg
sarl
ret
lea
push
dec
jmp
movsl
cwtl
sbb
pop
and
cmpsb
mov
fwait
sbb
stc
add
and
add
push
xlat
dec
cmp
sahf
push
fwait
lcall
subb
jp
pop
aam
mov
cmp
push
ja
int3
std
imul
movsb
popa
jo
cltd
jg
jno
cmpsb
out
mov
and
aas
daa
vpaddw
lea
sub
rclb
int
sbb
imul
addr16
jns
push
adc
or
cwtl
js
cmp
daa
pop
lods
pop
xchg
push
pop
icebp
jmp
fcoml
mov
mov
inc
gs
mov
mov
movsb
fldl
sub
or
push
int
pop
mov
adc
or
cli
arpl
lods
jge
xor
inc
dec
dec
repnz
xchg
nopl
inc
jnp
lret
enter
stc
fnstenv
imul
aaa
cmp
nop
gs
mov
rorl
cmpsb
cmc
adc
jge
es
push
jg
pusha
add
test
lds
cmpsb
sub
fimuls
lods
xchg
outsl
and
test
clc
ss
sbb
or
rorb
pusha
mov
fwait
lds
push
cli
pop
pop
orl
and
sub
pop
xchg
lock
aas
mov
subl
cmp
aam
jp
lock
scas
lahf
test
mov
scas
xchg
jmp
push
mov
mov
stos
insl
in
call
hlt
mov
aas
ljmp
fidivrl
aam
int
xchg
push
mov
mov
sub
aas
ss
movsb
shlb
or
ss
mov
lcall
cmp
scas
cmp
fisttpll
jl
dec
lds
jno
adc
sbb
movsb
daa
rclb
das
call
add
pop
lret
lea
inc
fs
mov
push
loope
jp
xor
faddp
pop
or
jb
push
lods
add
sbb
or
cmpsl
push
neg
jmp
je
xor
pop
lret
lcall
jmp
lahf
mov
fsubp
xchg
pop
inc
mov
adc
out
out
add
sbb
stc
inc
ja
sub
pop
cmc
in
std
rcrb
pop
mov
mov
cld
repnz
lcall
popf
fldcw
add
xlat
lea
inc
sbb
ret
inc
sub
jp
adc
xchg
sub
push
mov
xlat
loope
push
repz
subps
jecxz
ret
je
adc
test
in
inc
push
inc
add
jns
cmpsb
clts
sbb
xor
or
xorb
sub
inc
pop
es
pop
faddp
mov
jb
or
cmp
jbe
mov
mov
ja
or
in
mov
and
jbe
outsl
mov
cmp
cmpsb
sbb
icebp
in
or
adc
mov
xchg
enter
push
aaa
cmp
pop
cli
xlat
push
sbb
add
pop
jo
cmp
mov
fs
xchg
lcall
pop
fldenv
loopne
jo
push
cmp
imul
int
icebp
jae
and
aad
rep
inc
or
std
push
imul
stc
or
jecxz
das
jmp
sub
dec
mov
and
xchg
cld
xor
cmp
pop
cmpsb
fcoml
loop
icebp
xor
sti
push
xchg
mov
inc
add
aaa
cmpsb
dec
push
test
roll
lock
mov
popl
add
pop
adc
js
popf
adc
sbb
mov
lret
pop
xchg
add
jle
test
adc
cmp
add
leave
cld
jns
nop
sbb
nop
sub
into
gs
mov
push
rcr
mov
and
inc
cmpsb
push
pop
and
imul
mov
ljmp
sub
cmp
lds
mov
or
jl
out
adc
dec
icebp
mov
imul
arpl
or
ljmp
out
cmc
mov
adc
mov
cmpsb
sbb
add
xchg
mov
mov
std
push
and
repnz
pop
mov
dec
mov
cmp
and
clc
lds
mov
aad
das
das
dec
fstpl
jp
loop
xchg
or
mov
inc
or
in
mov
icebp
int3
repnz
xor
mov
inc
cmp
jp
lret
out
cli
mov
dec
mov
mov
adc
cmp
jno
fs
mov
push
sbb
push
jmp
cld
hlt
jns
lret
movb
fsubrs
shll
std
cmpsb
jae
sti
fistpl
mov
cli
add
imul
mov
or
push
popf
jge
xor
test
pop
mov
stc
test
pushf
pop
cltd
pop
in
lods
dec
add
ljmp
int
add
jmp
cmp
lret
out
xchg
jg
xlat
test
adc
fs
jnp
xor
fbstp
inc
mov
mov
cmpsl
pop
inc
and
es
into
sbb
jnp
jnp
fsts
das
in
cmc
cltd
jl
stos
jp
scas
mov
inc
inc
es
fnstsw
mov
mov
cmpsb
xor
and
pusha
push
mov
jge
data16
mov
mov
xor
mov
mov
sub
cmp
xchg
jns
insb
in
mov
idivl
lret
repz
sub
es
cmpsl
int3
mov
ss
iret
stos
adc
imul
jl
test
les
mov
sarl
xlat
idivl
and
mov
xor
cmp
mov
shrd
mov
push
xor
clc
and
cmpsb
in
cmc
mov
mov
dec
push
ds
adc
dec
push
imul
jbe
mov
in
loopne
mov
push
cmc
add
cmp
pop
adc
pushf
adc
push
es
in
scas
je
or
add
stc
ficoml
pop
push
andb
push
iret
inc
ficomps
cli
push
push
lahf
pop
nop
int3
stc
xchg
shrb
inc
repz
pop
add
cmp
jne
testl
xchg
mov
loopne
pushl
pop
cmpsb
adc
push
cltd
xchg
cmpb
or
mov
out
lcall
ss
pop
pop
stc
incb
imul
movsb
fsubl
dec
aad
nop
and
data16
ret
ret
sbb
pop
ss
es
sbb
mov
cwtl
loopne
repnz
int
in
clc
mov
int3
js
fwait
sub
jnp
testl
loopne
adc
in
push
dec
mov
out
insb
loopne
cli
pusha
xor
popf
cmp
notl
mov
sbb
ds
adc
jns
mov
push
sbb
xchg
insl
mov
push
imul
es
lock
mov
ss
xchg
mov
ret
mov
sbb
addr16
rcrl
out
and
pushf
adc
pop
cmpsb
xchg
add
push
loop
dec
push
push
stos
xor
es
jbe
mov
mov
push
std
jae
xor
pop
cmpsl
mov
jns
push
cmp
lds
mov
imul
fwait
dec
call
push
dec
jno
test
cmp
fnsave
or
rcll
xchg
mov
lcall
hlt
les
loopne
jge
xor
and
jp
and
fwait
pop
or
xor
movsl
inc
push
gs
sub
out
movsb
fistpll
lea
lea
popa
inc
sbb
sti
and
arpl
xchg
xlat
and
pop
mov
stos
cmp
popa
xchg
xchg
fnstcw
sbb
add
nop
test
cmp
dec
std
fcoms
push
sbb
popa
fxch
lcall
jnp
jmp
leave
add
xchg
lret
orb
push
cmp
in
pop
cmp
in
adc
popf
mov
sub
dec
stos
fsubs
xchg
andl
ds
in
sub
lret
push
lods
dec
or
sbb
out
xchg
into
add
or
ret
dec
xchg
es
ficoml
das
cld
sbbb
insl
adc
hlt
sub
pop
mov
fadd
mov
mov
imul
jge
in
xchg
fyl2xp1
data16
jl
adc
ficoml
out
fistpl
cwtl
or
push
pop
jmp
sub
subb
dec
mov
test
dec
pop
xchg
cmpsb
aas
mov
sbb
adc
andb
aam
cltd
into
inc
jl
mov
add
sub
sti
add
fsubrl
and
cmp
fisttps
pop
out
sbb
jns
cmp
scas
mov
call
lret
xchg
int
pusha
xor
rorb
inc
iret
cmp
test
sub
mov
fdivl
inc
sub
push
scas
cmp
dec
fcmovb
pop
mov
popa
sbb
pop
cmp
or
mov
fsub
and
push
je
test
ficompl
fadd
dec
push
jbe
pop
jl
lock
fists
jae
or
cmpsb
mov
movsl
xor
mov
jb
mov
negb
mov
lea
jp
mov
xorb
and
test
jmp
popl
cmp
int3
push
cs
mov
mov
cmpsl
cmp
aaa
cmp
jb
ds
mov
xchg
fistpll
push
lcall
es
ds
out
orl
test
movsl
test
das
jbe
xor
loope
add
sbbb
push
or
sarb
cs
loopne
adcl
push
cli
push
shl
pop
out
pop
imul
gs
and
jp
jmp
or
cmpsb
testl
stos
imul
add
mov
movsb
mov
xlat
sahf
aam
sub
aas
es
jae
adc
push
fsubrl
mov
rol
in
xchg
adc
enter
incl
test
in
mov
dec
adcb
adc
or
adc
xor
sbb
psubd
sahf
xchg
pusha
mov
jge
ja
add
jb
cli
stos
cmp
incl
jns
or
scas
out
outsl
jae
iret
sub
loopne
shrl
jecxz
inc
xor
jp
mov
in
adc
dec
sbb
mov
push
fbld
loope
std
mov
es
push
in
stos
ret
jp
adc
or
cmpsl
clc
mov
xor
popa
in
lea
in
mov
idivl
mov
inc
pop
aam
mov
les
or
pop
mov
leave
mov
cmc
sbb
adc
rol
loopne
mov
push
inc
es
pop
jge
mov
and
sub
stc
daa
test
test
cmp
push
jno
mov
out
mov
fsts
jae
call
sub
movsl
stos
movsl
sub
and
gs
cmpsl
mov
movsl
test
cmpsl
pop
movb
xor
stc
mov
ss
das
jg
pop
mov
sub
sbb
jecxz
bound
or
pop
fstpt
xchg
push
cmpsb
cs
pop
cmpsb
adc
daa
sti
sub
jne
cmpsb
jecxz
mov
mov
pusha
sub
gs
mov
shll
or
loop
push
insb
ljmp
push
dec
mov
leave
push
xor
jl
mov
sub
mov
adc
mov
ret
mov
xchg
and
mov
fistps
or
enterw
xchg
mov
cmp
xlat
movsb
dec
adc
mov
cmp
add
cmp
lock
xor
cmc
mov
loopne
or
enter
push
cmp
mov
add
ret
lea
adc
lods
pop
adc
dec
cmp
popa
or
mov
test
sub
pop
jg
sbb
add
add
rcrb
jns
flds
shrl
subb
adc
lcall
js
push
fsub
jns
inc
pop
pop
or
lahf
cmp
aam
sbb
fistl
lret
mov
int
data16
aas
xchg
mov
nop
adc
stos
les
int
cmpsl
mov
out
enter
jg
jns
cmpsl
andb
shl
stc
jns
lret
mov
inc
and
ss
cmp
mov
jnp
xor
sarb
pop
or
nop
or
push
leave
cmp
lea
add
pop
cltd
daa
cmpsb
les
push
fwait
arpl
and
jae
int
out
loopne
cmp
mov
push
and
cwtl
stos
mov
fdiv
femms
fs
jb
jmp
inc
adc
jnp
cmpsl
mov
fmul
jle
cmp
dec
push
shrl
mov
sub
add
add
sbb
xchg
jo
adc
xor
fistps
out
and
rorl
xlat
stc
cmp
jg
push
cwtl
sub
pushf
lods
mov
lds
mov
jo
je
cmp
or
push
int3
std
cmp
pop
add
mov
sti
mov
or
out
jmp
mov
inc
sbb
or
test
mov
lret
mov
mov
std
xor
stc
jae
xchg
int3
stc
or
int
adc
xchg
jge
bound
dec
lea
negb
dec
mov
push
mov
xlat
popa
sahf
std
inc
imulb
nop
jecxz
and
adc
jmp
sub
sbb
jg
inc
sbb
dec
mov
es
out
imul
jp
pop
addb
dec
cmp
or
imul
xchg
shrl
fstl
jp
lret
test
mov
jge
lret
cmp
les
data16
or
es
cmp
out
push
sub
sbb
mov
js
xor
rcrb
xor
push
insl
cltd
adc
les
mov
mov
jae
adc
mov
xchg
sbb
jae
lret
je
mov
cli
into
loopne
adc
mov
clc
and
cmpsl
xchg
cmp
nop
sbb
mov
int3
cmp
outsb
ja
rol
sub
es
xor
sub
fwait
cmpl
lcall
sarl
mov
adc
fwait
cmp
or
or
scas
mov
out
dec
adc
mov
mov
mov
cwtl
dec
or
sti
ret
mov
lcall
add
test
mov
adc
jg
mov
sbb
push
lret
out
cltd
nop
mov
cwtl
jb
jne
imul
lds
cmp
inc
lahf
fcmove
in
mov
gs
inc
xor
lret
xchg
push
in
inc
dec
dec
sub
or
jnp
popf
inc
cmp
pop
mov
sahf
jb
jo
cmp
mov
das
test
sbb
cmp
sub
sub
mov
sbb
dec
push
jl
mov
xchg
mov
fisubs
mov
add
test
sub
andl
add
sti
push
jge
data16
cmpsb
mov
int3
jno
or
pushf
std
mov
pop
mov
pop
mov
decb
fists
sub
int3
push
dec
jg
xor
cmp
call
adc
out
fnstcw
jae
jnp
mov
inc
push
ss
lcall
aam
sti
add
push
mov
mov
adc
mov
decl
jns
arpl
adcb
adc
into
or
mov
mov
js
les
cmp
xchg
call
fstl
fimull
push
xchg
loopne
div
iret
outsb
mov
aas
or
sbb
adcl
pop
icebp
sbb
xor
rcrb
mov
jb
adc
jae
test
ds
xchg
mov
lods
pop
sub
fst
xor
inc
in
cmpsl
mulb
jmp
or
mov
xlat
push
dec
push
es
out
lcall
xchg
pop
or
jmp
or
outsl
les
rorb
lock
in
xchg
sub
popa
dec
pop
jge
std
xchg
sti
stos
and
lahf
xor
fnstcw
jb
cmc
cmpsb
stc
lret
xchg
in
pop
add
sti
popa
out
in
aam
jnp
into
rorl
sub
mov
scas
cmp
out
cmp
rorb
xlat
outsl
les
stc
cmp
out
adc
clc
or
push
cmp
sbb
inc
pop
push
ss
ret
outsl
iret
or
or
jg
rol
popa
push
loop
call
fidivrl
std
loopne
pop
xor
int3
sub
enter
xor
imul
jg
in
cmc
add
jns
xchg
rcll
fldpi
jnp
stc
loope
das
sub
jp
sbb
xlat
daa
mov
stc
ror
pop
int3
adc
pop
scas
mov
std
arpl
movsl
mov
adc
jae
sub
mov
adc
cs
or
inc
out
inc
or
loope
shl
sbb
repnz
dec
mov
movhps
pop
add
cmp
cmpsb
cwtl
jo
sub
or
mov
lods
jge
mov
jno
rorl
sub
cmp
movsbl
pusha
data16
stc
in
xchg
orb
cmp
out
jle
leave
scas
sub
xor
mov
stos
jmp
stc
add
data16
fistl
stos
mov
pop
cli
aas
and
jbe
gs
sarl
test
fbstp
add
fisttpll
mov
mov
lock
ret
aaa
cmpsb
in
xchg
cld
les
fwait
jnp
cmp
mov
fidivrl
pop
or
adc
dec
pop
ud2
dec
push
jmp
cmpl
mov
sub
movsl
pop
cmp
mov
jnp
lock
inc
xorps
cmpsb
outsl
xlat
out
jle
mov
ret
inc
push
and
iret
popf
int3
mov
stc
hlt
arpl
lods
out
addl
nop
mov
hlt
stc
sbb
mov
movsb
add
pop
lods
jge
sub
cmpsb
mov
cmp
cmp
xchg
lret
je
imulb
and
int3
cli
xor
cmp
rep
mov
lcall
into
push
sub
ret
or
scas
fucomi
sbb
mov
lret
sub
lods
sarl
cmp
cmp
loop
mov
insl
xchg
lret
add
stos
aas
fisubrl
in
pop
xchg
sub
push
add
cld
sub
mov
xor
stc
cld
mov
adc
hlt
cmp
dec
aad
add
mov
adc
inc
mov
mov
mov
xchg
mov
xor
popa
movsb
jp
lahf
addr16
ljmp
jle
arpl
repz
std
or
cmpsb
cmc
repz
aad
or
lahf
incb
es
nopl
cmpsb
hlt
ljmp
stc
ja
aas
cmpsb
lcall
fwait
pop
mov
loop
adc
cmp
in
sti
sbb
cwtl
stc
jae
popl
push
xchg
sub
rcll
inc
cmpsb
lock
imul
js
xor
faddl
nop
pusha
or
orb
or
fcompl
mov
jo
ret
mov
jge
daa
jge
test
jp
int
cmpb
lds
xor
dec
out
add
pop
cmpsb
test
clc
ja
cmp
mov
ret
lcall
or
lods
mov
adc
xchg
pusha
pop
mov
fpatan
mov
sbb
cmp
dec
or
cmc
adc
daa
es
or
ss
lock
add
push
xchg
daa
xchg
dec
idiv
cmp
aaa
in
xor
insb
cmpsb
pop
cmpsb
cmpsl
rolb
adc
jp
movsl
fcomp
sbb
sub
mov
int3
sbb
sbb
and
adc
inc
or
imul
push
rcr
sbb
mov
cmp
out
call
push
adc
push
fwait
add
enter
xchg
pushfw
cmp
dec
out
xchg
cld
lds
imul
test
sub
jns
shrb
rorb
cmp
cltd
into
dec
dec
or
inc
scas
dec
jmp
test
jbe
cmp
aaa
jmp
movsb
or
test
mov
nop
insb
adcl
loop
gs
xchg
jne
add
ds
sarl
test
push
or
stos
stos
mov
jne
in
shll
lret
or
and
incl
aaa
adc
sbbl
pop
or
icebp
xchg
out
inc
jnp
dec
test
dec
mov
daa
push
mov
sub
sub
mov
dec
stos
das
fadd
test
addr16
scas
mov
les
inc
fbld
push
out
sbbl
inc
pop
pop
xchg
ja
fisubl
jp
cmp
xchg
daa
add
stos
cmp
dec
sbb
and
stos
outsl
arpl
mov
popf
mov
fnstenv
das
push
test
or
cmpsl
pop
cli
clc
jne
xor
shrb
mov
cmp
mov
insb
dec
xor
mov
pop
daa
sub
push
or
bound
and
les
fnstcw
push
stos
cmpsl
push
loop
fdivs
shl
xor
jno
mov
push
adc
push
fmull
xchg
jae
xchg
push
cmpl
enter
test
aad
es
sub
lcall
cmp
test
sub
inc
in
ficomps
mov
adc
and
clc
adc
outsb
ficoml
out
or
fisubl
dec
cmc
jno
adc
xlat
test
add
sbb
add
int
sbb
js
loopne
inc
int3
xchg
mov
mov
or
pop
int3
mov
add
loopne
icebp
cmp
nop
mov
mov
jae
bound
xor
jnp
jae
lahf
xchg
aaa
adc
js
dec
nop
dec
ret
movsl
out
and
call
mov
sub
add
gs
stc
lock
cltd
adc
xor
cli
sbb
adc
mov
sub
xchg
push
jno
push
les
addr16
js
adc
mov
imul
push
sbb
lret
ret
push
and
lret
andl
pusha
in
or
out
xor
and
add
push
cwtl
pop
lret
iret
in
mov
out
or
adc
aaa
pushf
jbe
add
mov
popa
lods
pop
or
mov
cmpsb
stos
mov
ret
mov
mul
mov
lods
mov
mov
hlt
mov
mov
push
stos
gs
lea
sub
lds
mov
cli
push
pop
xchg
cli
in
cmp
shrb
adc
or
cmpsb
repnz
xlat
out
jns
and
popa
xchg
in
iret
mov
cmp
mov
aam
es
mov
leave
add
aas
std
or
sahf
or
mov
or
cmpsb
sarb
cmpsl
xchg
xchg
add
push
push
mov
or
dec
jns
test
xor
out
roll
push
lret
sti
cmp
ljmp
mov
pop
cmpsb
mov
shl
adc
jmp
fisttps
xor
rorb
push
hlt
out
jns
mov
or
sbb
xor
push
and
daa
cmpsb
fisubs
lods
mov
ret
inc
xchg
mov
aaa
add
cmp
jbe
xlat
jl
cmpsb
mov
js
sar
mov
test
stos
mov
sbb
xchg
push
or
call
shlb
sub
sbb
mov
cmp
add
fwait
xchg
call
std
stc
popf
jb
fisubrs
mov
imul
sub
daa
pop
add
les
test
push
out
aam
ljmp
cmpsb
xchg
jle
and
jge
jg
out
lret
pop
sbb
cmpsl
daa
int
cmp
mov
outsl
sbb
mov
daa
test
lods
mov
jp
pop
sahf
and
iret
fidivrl
mov
mov
hlt
mov
in
inc
mov
inc
iret
inc
nop
pop
sbb
movsb
jo
fyl2xp1
xchg
add
or
nop
insb
push
cs
data16
cli
push
test
xor
push
xchg
mov
hlt
or
mov
cmpsl
push
or
in
jp
ss
stc
fnstenv
jb
mov
or
jp
imul
fisttps
jecxz
or
cmp
cmc
pusha
call
xor
jge
xchg
loope
jns
stos
pop
rcrb
les
js
das
sbbb
sub
inc
cli
stc
pushf
or
mov
iret
cmpsl
lea
test
cmp
fldt
xchg
int
mov
lods
xchg
mov
push
cmpsb
cmpsb
test
jp
popa
outsb
pop
xor
jbe
adc
cmpsb
push
pop
testb
cmp
jb
jnp
jne
lock
mov
mov
mov
lds
or
cs
rorb
xor
xchg
sbb
mov
push
sub
adc
rolb
pop
mov
add
jg
pop
dec
xor
test
sbb
push
push
out
int3
mov
flds
xor
xor
les
fists
arpl
mov
fs
mov
pop
enter
sub
push
in
cmp
mov
jns
xchg
mov
arpl
movsl
adc
ljmp
jbe
int3
fidivs
mov
inc
cltd
in
mov
inc
orb
iret
dec
cmpsb
mov
xchg
sub
xor
lock
mov
cmpsl
lds
dec
pop
cmp
add
stos
add
push
sbb
pop
cmp
bswap
mov
xchg
add
lahf
add
sbbl
push
push
xchg
or
mov
std
pop
cmpsl
adc
cmp
mov
vmovaps
sub
mov
mov
mov
mov
xchg
mov
aaa
add
jl
push
cs
dec
push
jns
xor
or
faddp
sbb
push
jge
add
sbb
test
inc
enter
inc
sbb
dec
repnz
push
pop
dec
cmp
aam
mov
jp
push
xchg
jle
push
cmp
mov
push
pushf
and
push
rol
jae
mov
arpl
int
xchg
cmp
sbb
testb
xchg
cmp
movsb
push
push
pop
inc
repnz
cmpsb
dec
add
sub
ret
and
fmulp
push
shrl
dec
mov
push
mov
xor
cwtl
jmp
mov
push
inc
shlb
sarl
jo
push
and
push
or
mov
lds
iret
jb
lds
stos
outsl
les
jmp
in
stc
test
or
test
push
addl
fwait
ss
sti
push
cmp
mov
dec
xchg
fidivrl
push
out
outsb
add
mov
test
jmp
push
mov
xor
dec
rclb
mov
mov
aaa
fadds
cmpsb
imull
mov
fstpl
es
das
sbb
push
xor
adc
push
sarb
xchg
enter
mov
adc
mov
cmp
pop
std
cmpsb
js
or
imul
mov
mov
leave
stos
add
outsb
stos
sti
jl
jmp
push
out
mov
lret
mov
cli
jae
mov
sbb
or
inc
aas
adc
sub
pop
or
roll
fs
mov
idivl
in
lret
les
sub
lds
daa
fnstenv
sti
dec
ror
push
xchg
push
or
int
inc
push
cld
fwait
mov
pop
sub
test
xor
cmp
ficompl
dec
dec
dec
cmp
and
das
cmpsb
pop
and
shll
adc
cmpsl
cmp
or
fdivl
mov
pusha
sbb
mov
or
loop
int
sub
cmp
cmp
rcrl
jb
cmp
test
xchg
mov
jmp
leave
push
testl
mov
fucomi
pop
xor
mov
jno
mov
jl
xor
or
mov
bound
sub
in
jns
ds
mov
fnstsw
out
dec
idivb
hlt
adc
dec
xor
cmp
xchg
stos
mov
push
and
sbb
fidivs
push
lock
sub
dec
cmp
mov
jmp
and
flds
pop
movsb
jge
imul
movsb
scas
mov
xchg
inc
jae
mov
fwait
pop
sub
pop
daa
mov
jae
jmp
cmp
clc
stos
iret
mov
xor
mov
pop
sti
jns
jl
pop
lret
inc
stos
cmp
cmp
fcoms
mov
insb
jp
insb
lcall
pop
jbe
in
addl
jge
inc
jbe
int3
cmp
cli
xor
fidivl
icebp
cmp
fisttps
imul
sarb
stc
aad
sbb
cmp
enter
mov
mov
cmpsb
sarl
lahf
cltd
sbb
aam
mov
gs
shl
mov
push
lcall
cmp
cmpsb
popa
jle
xor
jb
leave
jns
sbb
mov
jae
enter
mov
arpl
sub
and
push
adcb
mov
je
sub
cs
into
xchg
jbe
rcr
jns
test
mov
adc
xor
inc
jno,pn
sti
mov
sub
dec
cmp
xchg
cmp
pop
in
scas
repz
mov
repnz
test
mov
cmp
mov
cs
mov
enter
xchg
fdiv
add
sbb
mov
mov
xchg
push
pusha
sahf
into
lods
in
call
inc
and
mov
xadd
test
mov
mov
or
mov
pop
inc
pop
xchg
test
xor
in
loope
jae
add
cmp
in
xlat
adc
mov
mov
aad
loope
inc
xor
mov
sub
mov
lret
mov
mov
cmp
mov
jp
xchg
jg
xchg
lock
mov
add
cmpb
push
pushf
insb
dec
xor
testb
lea
nop
lods
pop
outsb
cmp
cmpsb
mov
add
stc
jns
and
or
mov
out
add
add
aas
es
and
and
lret
out
mov
dec
xchg
xlat
testl
stc
push
jecxz
jl
pop
pop
xchg
fdivr
jecxz
test
stos
stc
mov
jns
xchg
daa
inc
push
xchg
xor
loope,pn
mov
mov
in
add
aad
push
psubd
adc
and
cmp
inc
cmc
out
aam
push
mov
mov
mov
data16
push
push
stc
lahf
sbb
mov
pop
mov
jmp
mov
cltd
outsb
or
and
jl
push
cmp
bound
loopne
jecxz
cmpsb
test
mov
jp
icebp
outsb
cmpsb
cli
data16
outsl
adc
aas
and
dec
add
lret
mov
cmpsb
pop
aaa
mov
test
rorl
xchg
sbb
cmp
popf
cmp
nop
cmpsl
sbb
popf
mov
dec
and
daa
pop
stos
mov
arpl
add
stos
sbbl
insb
cmpsb
andl
push
mov
in
repz
xor
movl
cmp
in
sbb
enter
popf
inc
inc
jnp
lea
jge,pt
rcll
xlat
repnz
pop
push
dec
dec
popf
in
jns
mov
daa
adc
mov
cli
push
fisttpll
mov
and
xchg
mov
hlt
clc
adc
cmc
xor
int
or
cmp
mov
pop
mov
daa
pop
push
aad
sarb
jmp
shl
cmp
in
movb
add
dec
scas
fists
les
sbb
cli
cmp
lock
pop
sbb
test
jmp
fbld
or
test
jecxz
ret
int
jp
imull
mov
mov
sti
lods
mov
lret
repnz
scas
cmp
lods
sub
movsb
mov
je
ss
shll
cmp
mov
jle
stos
in
xchg
or
xchg
xchg
xchg
xchg
test
cmc
stc
fidivs
mov
cli
mov
aas
cmp
lahf
sbb
mov
shlb
mov
sbb
push
inc
lahf
xchg
fistps
mov
popa
jb
enter
popa
or
or
push
fdivr
stc
cmpl
ret
xchg
sub
pop
testb
je
lahf
cwtl
and
mov
jecxz
and
mov
shlb
adcb
xor
jne
popa
sub
fiaddl
lret
popf
andl
dec
cmpsb
inc
gs
movsb
dec
pop
ja
push
hlt
into
daa
sbb
stc
push
lods
or
push
loop
sub
adc
lock
fstps
mov
test
jnp
and
dec
imul
stos
ljmp
sarl
mov
insl
leave
xchg
jmp
loope
std
jge
xchg
loopne
cmpsb
push
inc
cli
popf
pushf
cmpsb
cmp
les
repnz
or
push
adc
cmpsl
sub
mov
insb
push
mov
inc
sbb
push
pushf
lahf
jae
or
mov
cwtl
stos
jns
add
fcmovb
js
cltd
sub
xchg
andl
cmpsb
nop
mov
mov
sub
imul
std
sub
push
cmpsb
inc
insb
xchg
lret
enter
dec
mov
into
jbe
aad
movb
scas
arpl
iret
add
data16
cld
stc
scas
sahf
and
mov
sub
inc
dec
and
rcl
dec
xor
gs
add
push
jnp
lahf
pushf
jp
or
mov
cmpsl
cmpsb
fidivrs
stc
mov
jns
inc
dec
mov
push
push
xchg
subb
fs
rol
dec
ja
repz
dec
push
pop
mov
rcr
cmpsl
xor
sahf
aam
dec
imul
and
addr16
push
sbb
rcr
mov
cmc
pushf
pop
jp
jns
loopne
jae
sub
xor
cmpsb
fs
xor
mov
pop
mov
xor
daa
into
jb
xchg
adc
push
or
jnp
push
or
ficoms
pop
es
mov
adc
or
aad
imull
sti
js
out
ja
sub
iret
in
jns
insl
jnp
lds
insl
and
mov
clc
push
dec
into
out
loope
push
aam
pop
push
mov
push
pop
les
inc
orl
scas
mov
inc
es
stos
inc
push
ret
cmp
push
sbb
shll
in
xchg
test
mov
fildll
dec
add
test
dec
jns
mov
push
mov
pshufw
sbb
unpckhps
testb
hlt
dec
ljmp
sub
and
lods
jns
roll
mov
insb
lcall
dec
inc
iret
out
clc
lret
shlb
mov
jo
movb
fcmovu
or
jecxz
cmp
push
push
cmp
sub
addr16
jle
add
mov
clc
aam
lahf
dec
sub
repnz
cmpsl
pop
fucomp
or
sarl
scas
loop
jo
sub
cmpsb
xor
es
jp
or
sub
fldcw
lcall
movsl
mov
xchg
cmp
sbb
xchg
scas
aaa
add
fstps
and
int
test
test
rolb
sarl
nop
lds
add
stos
xlat
sbb
dec
fwait
adc
mov
mov
std
fstps
es
std
xor
dec
dec
pop
out
lcall
xor
dec
pop
or
dec
or
cmpb
mov
push
daa
mov
es
shll
scas
cmp
mov
jbe
cmpsb
sub
sbb
mov
pop
mov
xchg
lret
stos
push
mov
inc
pop
push
sbb
xor
je
clc
stc
movsl
dec
cmp
lcall
test
inc
mov
dec
inc
shll
add
dec
in
adc
xor
inc
es
mov
ljmp
daa
es
mov
in
icebp
in
popf
loopne
es
pop
mov
push
fidivl
lea
std
mov
fisttpll
jb
fidivrs
mov
jae
inc
das
push
push
stc
xor
or
ret
imul
nop
push
mov
jp
sub
loope
lret
in
sti
cmc
jo
gs
out
stos
scas
jns
mov
push
sbb
aam
ljmp
std
mov
stc
in
sub
pop
push
scas
jmp
andb
cmp
pop
lret
and
addb
push
inc
mov
inc
push
imul
lods
lea
or
dec
movb
mov
les
daa
rorl
push
mov
repnz
mov
jle
or
pop
mov
dec
mov
jns
adc
xchg
push
sub
aas
inc
mov
int3
jns
cs
mov
ffree
mov
sbb
mov
push
lcall
pop
test
push
test
pop
iret
jnp
mov
test
jae
jg
daa
ds
cmp
or
adc
lods
repz
push
add
jp
icebp
popa
enter
or
ljmp
clc
aad
and
mov
out
sbb
cli
testb
mov
sbb
fidivrs
clc
stos
scas
mov
int3
mov
cs
xor
inc
sbb
cmp
jns
dec
jl
adc
push
or
ss
jns
jmp
dec
cltd
pop
push
cmpsb
or
xchg
rorb
lcall
sub
cli
cld
std
mov
stc
das
sub
out
or
loope
sub
push
pop
mov
cmp
push
sub
es
test
mov
stos
adc
push
outsb
shrl
cmp
lret
pop
aaa
add
cmp
loop
stos
movsb
mov
in
repnz
les
xor
xchg
test
nop
aad
pop
rcrb
cmp
dec
outsb
jno
sub
cmpsb
mov
stos
fldt
jmp
lahf
repnz
and
xchg
aas
xchg
or
loope
xor
add
dec
or
mov
or
sarl
enter
cmp
imull
mov
aad
mov
mov
mov
loop
mov
xchg
std
mov
les
or
inc
push
cmp
cltd
mov
mov
mov
sbb
insl
cmp
in
out
int
xchg
in
push
jle
sub
les
stc
mov
add
jae
movsb
mov
aaa
imul
dec
shlb
xchg
mov
add
insl
mov
adc
cmpsb
popa
outsb
push
stc
pop
and
jecxz
sub
stc
test
int3
pop
sbb
cmp
pop
sub
xor
cmpsb
and
xor
pop
loop
jnp
ljmp
dec
movsb
sub
cmp
cmp
jle
pop
sbb
in
or
fisttps
or
push
dec
xchg
rep
cmpsl
adc
cmp
push
sbb
iret
mov
data16
out
in
stc
mov
sarb
add
data16
dec
cmpsb
cmp
je
mov
xor
dec
xchg
stos
mov
rolb
popf
and
lret
push
aas
mov
push
cli
testb
mov
fnstenv
cmp
add
loopne
mov
hlt
mov
flds
pop
pusha
pop
mov
into
mov
fwait
adc
mov
insl
jmp
sbb
inc
xor
sub
gs
icebp
add
jp
sub
lods
pop
inc
mov
leave
fs
test
mov
and
shlb
cmp
xor
out
cmp
mov
movsl
xor
add
out
ja
stc
les
xchg
jmp
push
pop
push
mov
es
dec
imul
lret
push
add
cltd
cmc
in
stc
and
and
fcoms
xor
pop
enter
xchg
int
push
testb
and
mov
mov
repnz
arpl
mov
jp
bound
into
fildll
jns
shll
sbb
mov
orl
cwtl
test
cmc
shlb
addr16
je
mov
sub
xorb
sub
int
in
mov
cmpsl
push
xchg
arpl
push
jbe
outsl
cmpsb
sub
jge
or
nopl
or
sahf
xchg
sub
lcall
data16
stos
cmp
in
pop
scas
mov
stos
cwtl
add
test
cmpsl
jp
test
mov
cltd
pop
bound
cmp
dec
pop
jge,pn
fwait
mov
and
inc
out
push
repz
push
push
andl
xchg
mov
fcmovne
mov
mov
stc
shrb
adc
push
push
pop
adc
out
int
stos
bnd
cltd
aam
rcl
fstps
pop
cmp
xchg
dec
in
icebp
mov
xchg
dec
jecxz,pt
push
and
out
out
add
and
lods
ja
mov
pop
rcr
shlb
cmpsb
add
pushf
sub
stc
inc
jmp
push
cmpsb
int3
lahf
inc
call
das
movsl
cmc
sbbb
nop
fisttps
cltd
mov
pop
cmp
int
es
pusha
pop
or
sub
sub
sbb
fsubs
xchg
bound
jge
mov
mov
es
mov
xchg
and
lds
xchg
or
xor
out
sahf
pop
inc
ja
stc
sbb
cmpsl
mov
mov
xchg
lahf
push
fstps
jp
clc
insl
scas
orl
adc
popa
dec
mov
pop
add
movsb
leave
dec
or
jo
loope
xor
js
cld
enter
cmpsl
jl
stc
adc
call
sbb
mov
dec
inc
add
pop
test
cmp
add
out
test
sbb
es
mov
or
test
pop
mov
dec
cmp
xchg
arpl
cmp
cmp
test
ret
cmpsb
jmp
ljmp
xor
outsl
fcomps
nop
icebp
imul
sti
push
pushf
lods
mov
mov
std
clc
lret
mov
sub
mov
cs
cmpsb
in
mov
cmc
jns
stos
add
or
scas
aad
mov
push
dec
pop
out
cmpsb
inc
push
or
mov
inc
add
iret
daa
mov
inc
lahf
add
arpl
jg
mov
mov
addr16
test
sbb
out
add
arpl
mov
fistps
push
cmpsb
or
jg
push
sti
outsb
es
inc
or
es
jp
push
adc
or
jl
scas
mov
jo
add
out
mov
mov
jmp
nop
mov
and
xchg
iret
ret
mov
insb
jns
cmp
push
mov
and
repz
testb
repz
sub
xchg
in
mov
or
aad
dec
pop
cmp
shll
jns
mov
gs
fs
mov
fadds
lret
out
xchg
pop
add
pop
dec
sarl
div
mov
call
fidivs
xchg
push
lahf
sarb
mov
cmp
sbb
repz
jne
lods
sub
aam
in
mov
inc
data16
sbb
dec
push
stos
cs
cmp
push
ret
or
cmp
or
jecxz
test
mov
inc
dec
cmpsb
lret
pop
aam
ljmp
fnstcw
mov
popf
frstor
xchg
cli
push
into
aas
mov
mov
insl
repz
mov
pop
aaa
mov
xor
jae
or
pop
jae
and
adcb
lods
add
mov
xor
mov
sbb
adcl
and
icebp
scas
stc
enter
or
dec
out
xchg
xlat
ja
cmp
shll
test
inc
mov
cmp
jecxz
jmp
push
das
es
jmp
pop
xchg
mov
cwtl
outsb
or
sahf
push
out
mov
mov
inc
std
and
mov
fsubs
cli
arpl
add
mov
jmp
and
push
or
xchg
or
jle
in
fcomip
jno
sub
aad
std
mov
call
cmpsb
das
test
dec
pop
jnp
data16
push
sarl
sbb
ret
ja
test
bound
jbe
xor
cmp
cmp
addb
fs
loope
inc
es
add
inc
xor
pop
andl
cmpsb
js
inc
fs
push
jl
enter
or
mov
jp
sub
cmp
pop
mov
rcrl
inc
add
jno
jae
inc
out
adc
xchg
cmp
shll
lcall
pop
mov
push
out
mov
cli
cmp
cmpsb
ffreep
mov
push
into
imul
bound
pop
rcll
popa
sbb
pop
and
cmpsb
dec
xchg
mov
xor
jp
sbb
or
mov
test
push
pop
fdivs
or
cltd
ret
jge
or
out
repnz
pop
xchg
ret
sub
push
mov
push
cmpsb
or
cmp
ror
stc
mov
iret
test
sub
mov
std
jp
out
rcrl
and
sbbb
lea
test
push
in
in
pop
cmpsb
lret
fdivrp
push
daa
popf
mov
daa
push
sub
adc
inc
jns
sub
pop
jne
popf
cmp
cmp
pop
popa
fmuls
mov
lock
sub
stc
aad
dec
sub
lret
push
push
mov
pop
inc
mov
sbb
stc
mov
roll
ffree
bound
inc
test
lret
inc
js
push
es
lds
popf
inc
mov
pop
loope
xchg
and
enter
mov
lds
ljmp
dec
int3
inc
outsb
arpl
lcall
xor
rorl
mov
and
mov
inc
hlt
mov
mov
and
outsl
cmp
push
mov
push
ja
and
test
adc
lock
clc
xchg
cmp
mov
push
or
fs
pop
cmp
jo
mov
sbb
outsl
mov
movl
repz
mov
sahf
cmp
sbb
test
lds
aaa
fadds
cmc
add
inc
stos
mov
fistpll
leave
sub
nop
sub
lds
mov
clc
lds
ja
movsb
cmp
ja
jle
xor
imulb
sub
push
jl,pt
scas
cmp
push
sbb
mov
cwtl
mov
addb
scas
das
adc
sub
aaa
lretw
ret
xchg
iret
cwtl
adc
or
test
cmpsb
outsl
mov
nop
mov
mov
cmp
subb
jbe
or
enter
imul
movsl
pop
rorl
enter
adc
push
push
loop
addr16
sti
cltd
xor
cmpsb
aam
cmp
out
stc
lods
mov
add
add
lds
cmp
jns
cmp
dec
cmc
push
fbstp
inc
xchg
fiadds
fdivl
jns
nop
jb
scas
ljmp
push
sbb
jns
inc
mov
jle
or
jno
pop
popf
push
pop
adc
lock
lock
push
push
mov
mov
cmp
sbb
adc
jae
in
out
jns
movsl
adcb
outsl
mov
fsub
scas
icebp
jnp
and
push
dec
fs
out
xchg
sub
pop
or
in
ror
mov
mov
popf
outsl
add
imul
ljmp
fcmovnbe
movb
mov
push
pop
aaa
popf
jns
dec
out
push
cli
fdivs
or
dec
pop
jno
cmove
repnz
jp
push
pop
inc
mov
push
lcall
outsb
xor
fisttpll
lea
outsb
jns
and
dec
test
inc
sti
inc
add
mov
adc
mov
push
fisubl
xchg
or
jne
or
mov
aad
jge
lods
out
add
adc
mov
out
jle
dec
cmp
in
iret
mov
gs
mov
xor
std
cmp
mov
daa
lahf
cmpsb
sub
or
inc
xchg
fisttpl
sti
jecxz
jge
mov
sub
sahf
repnz
jns
push
aad
or
cmp
or
jno
subb
push
outsb
mov
rcr
jne
pop
fmul
ljmp
pop
setge
push
sub
cli
loopne
push
or
push
mov
cmp
add
out
mov
sti
enter
cltd
aam
adc
cmp
cmpsl
les
push
imul
ret
mov
push
loopne
mov
or
adc
cmpsb
stos
or
jns
sub
pop
mov
jmp
decl
out
aaa
enter
mov
xlat
mov
mov
sbb
iret
mov
stos
int
xchg
xorb
mov
sbb
cmp
dec
xor
sub
lcall
mov
mov
jns
gs
arpl
mov
jno
or
lret
mov
xchg
xchg
or
sbb
aam
stc
xchg
sti
movsl
cmp
imul
jmpw
es
dec
enter
jmp
pop
adc
popf
sub
cwtl
inc
sub
or
xchg
imul
insl
push
jg
pop
int
hlt
sahf
ffree
out
jns
push
fucom
or
mov
mov
push
and
inc
test
pop
cmpsb
xchg
and
pop
imul
mov
movsl
pop
dec
outsb
push
insl
test
sbb
lea
sub
rcrl
scas
mov
dec
sbb
clc
aas
mov
xor
mulb
cli
mov
inc
inc
mov
mov
cmp
lea
in
add
ljmp
sub
push
aad
dec
xor
jno
sbb
sub
into
repnz
jge
out
mov
mov
fistpll
into
mov
mov
scas
or
repnz
dec
pushf
sbb
push
cmp
mov
or
jmp
inc
loop
test
outsl
stos
sub
stos
jge
add
adc
cmpsl
sbb
addr16
and
test
mov
jmp
sub
ret
cmp
inc
xchg
fldenv
xchg
test
mov
into
loope
sub
and
mov
sub
int3
pop
daa
scas
cmc
sbb
cmp
lods
mov
or
inc
dec
in
or
outsb
mov
xor
mov
mov
or
lret
inc
mov
mov
sarb
pop
jmp
or
cmpsb
sub
rcll
out
jns
jge
loope
inc
test
lret
sarb
lahf
mov
cltd
pop
mov
pushf
jne
in
movsb
inc
fisubs
jns
jns
mov
stos
mov
sbb
jno
mov
fistps
out
fcoms
mov
mov
out
cmp
pop
std
dec
mov
cmpsb
jle
xchg
cwtl
pop
into
out
jl
cli
push
lret
add
popa
sarb
mov
or
mov
xchg
test
loope
sbb
cli
or
dec
fwait
mov
mov
in
push
jnp
js
mov
scas
adc
or
xchg
fucomp
mov
test
push
mov
pop
dec
fmuls
incl
call
pop
adc
sub
mov
sahf
push
mov
jp
sub
pop
sub
popa
push
sahf
push
cld
inc
mov
mov
fldt
loope
xchg
cmc
inc
or
dec
and
push
pinsrw
jp
push
shr
sahf
adc
lea
hlt
dec
test
add
out
jns
les
mov
orb
xchg
aam
sbb
fmull
movl
cmp
mov
or
cmp
lcall
mov
dec
mov
loop
sarl
outsb
ret
cmc
add
loop
sub
enter
imul
pop
inc
outsb
cmpsb
and
jb
pushf
pushf
cmp
xchg
mov
mov
xchg
mov
aas
mov
mov
cli
jmp
stos
lock
add
data16
test
test
jge
fcompl
lods
iret
or
sub
mov
scas
jp
fistpl
jp
int3
cmpsl
outsl
jle
dec
test
inc
cmpsb
and
jp
sbb
js
jl
es
push
sahf
pop
cmp
xchg
push
xchg
jb
in
push
push
mov
dec
cmpsb
daa
popf
jge
cmp
jb
mov
sbb
jge
adc
enter
daa
mov
dec
pop
popa
mov
es
dec
xchg
imul
ja
or
test
rcl
in
and
popa
and
push
rcll
push
cmpsb
fnstsw
sbb
cmc
and
mov
fnstsw
mov
cmp
addr16
daa
es
push
insb
rcl
sub
test
adc
in
mov
flds
nop
mov
clc
lods
mov
sub
mov
push
mov
and
push
push
pop
mov
sub
jecxz
push
es
or
jecxz
mov
and
mov
cs
fidivrl
xchg
sub
lea
cmc
push
cmp
insl
or
jns
sub
movsb
mov
cmp
popa
mov
and
aad
pushf
cmp
mov
cwtl
imul
push
sbb
addb
lret
pop
lods
xchg
mov
cli
jmp
xchg
xchg
arpl
xor
sub
push
mov
push
and
inc
mov
push
cmpsl
sbb
jns
xor
push
jecxz
pop
fsts
jo
daa
or
imul
jmp
int3
cmp
xchg
cmp
cmp
pop
cmpsl
jg
mov
out
out
sahf
adc
stos
mov
xchg
repz
outsb
clc
nop
insb
into
sbb
mov
cltd
xor
aam
and
cmp
fwait
aas
cmc
inc
cld
sub
fimull
cltd
mov
lret
clc
test
lahf
sub
adc
mov
cmpsb
jle
mov
jae
inc
cmpsb
mov
or
stc
jno
fcompl
add
xchg
aam
cmpsb
jo
inc
dec
cmpsl
cmp
jge
insl
mov
sub
sbb
lahf
dec
lret
mov
test
fwait
cmp
xchg
fadds
pop
negl
lock
hlt
cmp
je
adc
mov
mov
ret
cmpsb
xor
mov
jns
shrl
test
cmp
add
sbb
lahf
jo
test
mov
lock
jp
inc
cmp
pop
rorb
repnz
mov
loope
mov
js
inc
mov
inc
mov
mov
imul
and
movsl
add
scas
jns
adc
jno
xor
push
pop
add
in
add
xabort
fwait
mov
jnp
fsubrl
loopne
dec
or
js
pushf
out
or
subb
cmp
lahf
rcll
scas
inc
inc
arpl
mov
and
pextrw
dec
test
inc
mov
mov
add
pop
nop
pop
jge
stos
lret
push
lahf
lret
add
add
xchg
dec
clc
jb
scas
pop
and
stc
push
cmp
orb
push
or
es
inc
or
repnz
jl
das
xchg
cmpsb
mov
mov
xchg
push
adcl
mov
adc
aas
sub
pop
xchg
xchg
cmpsb
test
repz
jns
inc
dec
repz
and
push
inc
je
pop
cmp
imul
cmp
mov
leave
cmpsl
push
dec
push
daa
lds
je
in
adc
cmc
cmpsb
mov
movsl
lahf
sub
ljmp
test
inc
lret
cmp
cmp
addr16
test
inc
push
sbb
dec
in
insb
push
dec
aaa
or
fs
mov
jg
stc
jns
dec
movsb
adc
icebp
push
hlt
std
ds
cmp
outsb
dec
jp
push
cmpsb
or
xchg
xchg
mov
mov
adc
add
mov
cld
test
push
xor
ss
mov
sbb
push
adc
stc
jb
add
mov
outsl
sub
or
stc
addl
mov
cmpsl
lret
lret
sub
push
movsl
lahf
ds
jnp
jbe
dec
loopne
stc
mov
jnp
mov
idivl
push
rclb
mov
cwtl
das
imul
jecxz
lret
jno
call
in
jns
daa
jnp
mov
cli
nop
daa
and
lock
pop
mov
sub
jo
movsl
mov
mov
jns
mov
add
mov
cmp
push
pop
gs
fmul
ret
mov
inc
aad
jne
fnstenv
xor
test
inc
cmpsb
xchg
mov
mov
jns
mov
or
pop
mov
cmp
lods
cmp
rolb
cmpsb
mov
xor
or
popa
xor
cmc
add
cltd
adc
sub
lcall
pop
enter
jns
mov
mov
adc
fdivrs
mov
dec
push
sbb
les
fwait
rcll
ljmp
xchg
dec
je
adc
pusha
adc
call
pop
or
cmc
pop
std
leave
jo
push
push
cs
jae
es
test
jg
mov
cmpsb
outsb
js
push
out
cmp
sub
les
cli
xlat
fucomi
in
or
xor
sarl
into
adc
push
push
jmp
mov
and
outsb
lret
lock
sahf
call
leave
or
dec
push
and
cmp
push
je
sub
cmp
mov
je
jge
fldcw
sbb
loopne
sub
push
aad
or
aad
mov
mov
imulb
or
fidivrl
mov
sbb
inc
mov
inc
icebp
push
lahf
mov
xchg
xchg
dec
or
dec
dec
pop
sub
cmpsb
stos
cmp
repz
mov
xor
or
inc
mov
push
mov
adc
mov
jecxz
rclb
sbb
loop
lret
push
inc
in
out
cmpb
mov
jmp
int
fdivs
je
jne
dec
and
or
dec
cmp
sarb
lret
sbb
leave
cmc
scas
hlt
inc
sbb
mov
call
or
daa
lcall
pop
pop
daa
shl
and
inc
es
mov
loope
adc
orl
mov
fwait
ds
hlt
mov
pop
lea
mull
in
xor
inc
push
and
pop
push
lds
push
mov
xchg
jbe
mov
and
es
or
fiadds
andb
inc
xlat
or
and
ficoml
mov
test
sbb
sti
add
push
test
ret
scas
les
pop
or
jecxz
pusha
shlb
rclb
out
push
mov
or
and
mul
jns
cmp
aas
dec
xor
aas
dec
outsl
imul
lods
add
gs
shll
or
dec
mov
ja
dec
mov
push
xor
iret
adc
ret
les
sarl
cs
mov
cmp
xor
test
stc
lock
push
pop
or
repz
aad
cld
push
jle
adc
pop
cmp
mov
xchg
xor
mov
test
stos
pusha
test
pop
shll
dec
mov
push
cli
sub
cmpsl
sub
dec
cli
mov
push
lcall
sbb
push
or
rclb
es
mov
cmp
pop
nop
shlb
inc
shll
repz
fisubrs
mov
push
mov
adc
adc
sahf
jo
sub
and
xlat
test
mov
push
cmp
pop
xor
fsts
jmp
les
mov
shrb
cmc
in
mov
fsts
sub
cmp
pop
cmpsl
in
or
adc
sub
and
dec
cmpsb
mov
jnp
sub
cmpsb
cli
jns
sub
bound
mov
cmp
and
std
cmp
cld
imul
cmp
sub
sbb
in
sub
push
cmpsb
sbb
sbb
out
gs
mov
jmp
fistps
or
scas
mov
ss
std
mov
cmp
adc
sub
ficompl
es
mov
negb
lds
ljmp
cmp
lods
mov
mov
popf
add
aad
rorl
cltd
cmp
mov
add
pop
sti
jb
and
adc
lock
mov
das
inc
and
dec
faddl
es
pop
push
cmpsl
mov
imul
outsl
or
int3
lret
sbb
xchg
mov
mov
jns
popl
outsl
sub
mov
je
hlt
sub
inc
and
xchg
jge
jg
xchg
inc
dec
aas
jp
inc
jo
cwtl
sub
jmp
xchg
xchg
out
sub
mov
xlat
fsub
jb
sbb
cmpsb
jno
fistpl
addl
mov
ffreep
mov
cmpsb
sbb
xchg
adc
inc
inc
enter
pop
scas
jbe
lret
or
dec
repz
mov
push
lock
mov
cmp
addb
fwait
dec
inc
testl
dec
pop
push
testl
dec
stos
push
rorl
es
icebp
scas
push
lcall
test
dec
jecxz
mov
ljmp
xchg
int
lcall
mov
xor
fidivl
mov
test
sbb
jns
cmpsb
mov
movsb
mov
dec
hlt
jns
and
adc
scas
jl
loope
clc
sarb
sub
dec
in
push
out
mov
sbb
inc
xchg
std
cmp
xchg
ror
add
testb
imul
mov
dec
jg
cmpsb
lds
cmp
mov
xor
cwtl
js
and
es
subl
jnp
nop
sbb
int3
inc
and
cmp
jo
add
cmp
or
jle
mov
mov
fwait
sbb
xchg
add
mov
repz
out
out
pop
add
enter
ds
jo
cmc
add
add
pop
dec
fdivrs
enter
loop
mov
adc
insb
pop
push
std
mov
arpl
cwtl
pusha
jne
mov
xor
out
stc
out
dec
test
loope
les
and
inc
ret
mov
mov
cmp
cmpsb
in
push
pop
subps
adc
xor
clc
fadds
adc
divl
and
fxch
cld
mov
mov
mov
imul
push
sbb
test
adc
call
jns
sbb
loopne
jne
xchg
push
xchg
addr16
mov
mov
roll
cmp
leave
push
lret
fnstenv
std
inc
fists
adc
xchg
adc
ficoml
push
mov
icebp
xchg
daa
aaa
cmp
jns
movb
pop
aad
or
mov
out
xor
imul
dec
adc
mov
fstl
daa
es
push
addr16
stc
sahf
add
mov
shll
sub
add
sti
cmp
repz
js
jns
lret
mov
jecxz
data16
in
cmp
jae
xchg
mov
sbb
sahf
mov
and
data16
sub
fsubrp
mov
push
lahf
cmpsb
cltd
mov
pop
mov
xchg
lahf
mov
cmpsb
out
jg
mov
inc
ja
jp
xchg
idivb
xor
ficoms
jle
fisubrl
lock
mov
push
mov
movsb
cld
sahf
xchg
sbb
push
sbb
xchg
arpl
pop
sbb
aam
adc
inc
push
sbb
mov
mov
xor
les
cmp
ror
aam
mov
mov
mov
dec
jg
sub
test
aaa
stos
jbe
sub
and
and
mov
inc
xor
sub
mov
movsb
or
sbbl
cmpsb
add
sahf
and
int3
movsl
mov
icebp
jns
jmp
inc
cmp
jmp
jbe
and
sbb
add
xchg
pop
aas
insb
push
imull
jp
aaa
xchg
cmp
clc
push
push
std
mov
push
sbb
push
cmpsb
xchg
xchg
xchg
js
pop
shlb
sti
lcall
sub
sub
xchg
xchg
mov
out
sub
out
sub
fmuls
fwait
pop
jp
cmp
inc
dec
leave
xchg
add
iret
in
bound
mov
cmp
das
mov
xchg
cmpsb
push
jl
data16
aam
aas
jg
push
mov
xchg
out
and
repz
int
push
and
loopne
mov
dec
cmp
test
xchg
sarb
fists
mov
and
mov
and
dec
repz
mov
cmp
pop
call
ds
dec
pop
aam
and
mov
sbb
add
cmp
pop
sarb
iret
sti
dec
jecxz
xorl
push
fidivrs
rep
lods
or
je
mov
daa
or
nop
sbb
test
or
bound
pusha
iret
mov
das
sarb
or
pop
aas
fs
jb
mov
js
into
sub
rorl
pop
enter
mov
stc
subl
mov
sbb
mov
mov
movsb
aas
pop
je
jne
push
xchg
pop
jp
xchg
jmp
ss
mov
jl
dec
adc
xchg
shll
xchg
mov
les
les
mov
rcll
dec
fmulp
mov
test
lcall
add
outsb
test
add
inc
xchg
xor
fcoml
fcompl
or
adc
push
mov
insl
scas
mov
push
or
cwtl
mov
pop
dec
pop
jo
mov
lret
sub
enter
js
icebp
hlt
pop
and
sbb
jo
daa
mov
mov
push
scas
or
dec
sbb
mov
out
cmpsl
sub
in
fs
pushf
lds
dec
hlt
std
inc
lock
stos
jge
stos
outsl
mov
sub
push
mov
sbb
in
xchg
inc
xchg
adc
ljmp
xchg
popa
std
dec
pop
mov
cmp
or
xchg
mov
mov
dec
xor
cmpsb
xchg
sub
outsb
jo
inc
repnz
movsb
mov
sub
fs
cmp
push
and
push
loope
adc
jnp
mov
and
pop
es
push
fistpl
fadd
jns
xor
mov
sub
dec
sarb
xlat
or
aam
in
push
popa
leave
or
pop
cmpsb
cmp
sub
test
cmpsb
jmp
mov
sar
ss
aam
fs
jno
xor
jge
enter
fdivs
test
mov
cld
pusha
out
xlat
jns
push
imul
sub
aad
je
xchg
mov
bound
inc
add
push
lret
lds
cmp
push
jg
imul
dec
cltd
mov
mov
lods
or
push
mov
mov
int
or
andb
xchg
mov
sbb
add
notl
cmp
stc
xor
out
adc
jns
dec
cmp
lret
repz
hlt
ffreep
mov
mov
sbb
adc
inc
mov
es
rclb
jge
mov
jae
scas
jnp
mov
icebp
icebp
jno
push
sbb
mov
rorl
jbe
int3
ja
sub
test
dec
dec
mov
inc
test
cmp
inc
and
adc
add
jmp
rolb
jl
push
push
lahf
mov
pop
add
out
mov
movsl
adc
cli
jne
adc
mov
jmp
orl
add
sub
lock
inc
dec
sti
mov
mov
ds
es
jge
daa
pop
in
mov
das
add
add
and
mov
fs
mov
pop
cmp
cli
test
xor
sub
xor
mov
xor
and
or
rol
inc
mov
xchg
imul
out
push
pop
mov
lds
push
cmp
lea
or
mov
repz
std
xlat
pop
roll
pop
push
mov
or
mov
mov
xchg
mov
clc
pop
and
mov
inc
dec
mov
popa
jmp
pop
inc
fisubs
iret
test
std
jecxz
and
mov
cmpsb
roll
push
lahf
add
imul
dec
aas
pop
mov
cbtw
cwtl
cmp
cmp
pop
pop
push
popf
mov
js
sbb
sbb
movsb
shrb
or
xchg
xor
movsl
cmpsb
hlt
mov
lret
push
bound
shll
mov
cmp
jo
and
sub
gs
sarl
cmp
scas
stc
ja
xor
fstpt
push
outsl
cmp
cmp
mov
cs
aaa
icebp
inc
fs
and
test
and
mov
stc
ds
sti
dec
fwait
xlat
lock
jmp
fistps
insb
sti
aad
enter
dec
mov
stos
pop
in
mov
addr16
out
mov
xor
jg
mov
or
shlb
sbb
es
data16
movsb
pop
mov
push
xor
xchg
mov
sti
dec
stos
push
push
push
xchg
stos
fistpll
fistpl
sti
movsl
mov
mov
outsb
in
sub
stos
jbe
iret
fiadds
fcoml
push
popf
sbb
sbb
pop
dec
pop
cld
cmc
cmp
mov
data16
add
push
shl
mov
shll
mov
bound
shr
mov
xor
mov
pop
mov
jae
sbb
ljmp
aas
fs
add
mov
inc
adc
inc
sbb
or
test
push
jp
cmp
lds
icebp
and
popa
cmp
or
dec
push
mov
int
and
dec
lods
inc
dec
cmpsb
mov
jle
mov
fildll
nop
and
xor
mov
rorl
pop
and
pop
dec
insb
push
es
fsubr
cmpsb
imul
pop
or
pop
je
mov
ret
outsb
bound
in
cmpsb
roll
lret
cmpsl
imul
cli
adc
out
dec
imul
fimull
sub
ja
dec
arpl
in
mov
fs
jle
stc
dec
mov
mov
pop
xchg
shr
cmpsb
pop
jns
movsb
cmp
clc
stc
mov
mov
push
lods
jo
or
add
lret
data16
ja
test
cltd
mov
faddl
or
cmp
pop
inc
popf
sub
sbb
lret
adc
mov
inc
ja
mov
stc
or
jl
mov
push
out
repnz
and
cltd
mov
aad
jmp
cmp
iret
cmp
jge
fdivs
push
inc
mov
lcall
or
cmp
mov
loope
mov
lods
xchg
jae
ja
lret
cmp
iret
cmp
test
movsl
lahf
call
cmp
adc
mov
iret
sub
or
push
icebp
sarb
and
test
insl
and
vpmacsswd
sar
cmp
or
test
shr
aas
dec
jbe
aam
jp
inc
cwtl
cmp
lret
lret
pop
clc
cld
pop
lret
inc
out
stc
cmpsl
in
cwtl
vpinsrw
xor
push
cpuid
aad
leave
cli
punpckhdq
das
jns
es
jg
pop
ja
ret
or
out
sahf
or
cmp
sub
loop
jo
cmpsb
sub
pop
jge
das
lahf
jge
or
sbb
popa
es
in
mull
outsb
rorb
enter
cmp
jns
and
sbb
add
mov
push
mov
lock
into
dec
mov
fisubs
lcall
ror
arpl
or
xor
mov
cmp
test
fnstsw
insb
pop
sbbb
jnp
push
mov
lock
or
xchg
pop
mov
add
adc
movsb
inc
es
daa
push
xor
aas
or
scas
lcall
fst
inc
pop
add
mov
jp
test
ret
stos
or
jns
or
sbb
cmp
popa
into
test
mov
push
es
mov
mov
ficomps
jge
mov
lods
call
cmp
iret
mov
lods
mov
notb
mov
lahf
mov
sub
dec
cmpsb
cmp
mov
mov
xchg
or
invd
insb
pushf
xchg
jo
cmpsb
mov
and
test
ds
es
push
fcmovne
stc
mov
dec
cld
or
sub
popa
push
xor
jne
or
test
or
mov
dec
xor
rorl
lcall
mov
nop
mov
pusha
out
ja
sbb
sbb
sbb
xchg
xchg
lds
mov
into
jns
into
sub
rorb
cmp
orb
lcall
mov
je
jg
ss
jmp
sub
fcompl
cmp
clc
outsl
aam
inc
push
and
out
mov
mov
mov
xchg
out
add
dec
mov
rclb
fdivrp
callw
or
sbb
mov
sti
test
jns
or
in
xchg
xor
dec
or
jecxz
xchg
ss
mov
enter
shl
inc
jge
out
cmp
lods
mov
lods
or
xchg
lea
inc
fildl
adc
mov
jl
or
xlat
sub
mov
xchg
dec
mov
lds
cmp
sub
mov
cwtl
mov
ds
or
sub
jns
loope
sub
arpl
jae
cmpsb
imul
fistl
or
lock
xor
nop
ja
and
mov
or
add
subl
into
mov
movsl
or
fistps
mov
cwtl
sarl
pop
in
or
jle
jmp
into
idiv
lods
xchg
mov
nop
cs
mov
or
xor
sbb
jae
sti
insb
and
inc
mov
cmpsb
cmp
les
ror
mov
fisubl
cmp
ljmp
es
std
lret
rorb
jp
gs
pop
or
cld
add
push
cmp
xchg
mov
mov
stc
cmp
addr16
cli
xor
xor
mov
cmp
inc
pop
jp
dec
int3
mov
gs
cmc
sahf
cmc
dec
idivl
mov
sub
cltd
pop
das
xchg
icebp
mov
jp
push
scas
sub
push
mov
pop
jne
and
rorb
outsl
std
mov
push
ret
mov
std
les
pop
idivl
lods
lret
dec
cmpl
pop
shll
icebp
mov
mov
rcrb
dec
cmp
js
mov
sub
adc
adc
fisubrl
icebp
sbb
cmp
jbe
orps
inc
mov
cmp
repz
and
test
cli
or
popa
mov
sbb
add
lret
loop
mov
sbb
loop
sbb
jmp
push
push
movsb
cmp
enter
mov
cmp
orb
int
sti
add
cmpsl
jns
push
mov
ss
repz
push
cmp
jmp
mov
aas
fistpll
or
pop
sbb
stc
pop
sahf
push
cmpsl
mov
fcmovnb
rorb
mov
push
xchg
test
das
cmpl
insb
xchg
lods
xchg
js
mov
pop
pop
lods
js
pop
cmc
cmp
or
push
out
cltd
orb
jae
mov
lcall
cmp
insb
cmp
scas
jge
sahf
jl
cmp
fdivrs
aad
cmp
popf
push
imul
jp
xchg
xor
aam
mov
cmp
and
xchg
jg
pop
ud1
test
mov
mov
xchg
in
testb
or
pop
cmp
mov
mov
imul
xchg
mov
hlt
sti
mov
mov
sar
into
pop
dec
sarb
outsb
mov
pop
inc
push
inc
es
cwtl
pop
and
cmpb
shll
or
mov
and
mov
add
subb
cmp
pop
jb
push
adc
xor
cmpsb
testb
mov
lahf
sub
fnstenv
push
sbb
arpl
fisubrs
add
loop
lods
test
test
xor
xchg
inc
adc
sub
xchg
xchg
sub
sbb
in
cli
xor
sti
into
iret
inc
sub
sbb
les
adc
fwait
xchg
lahf
js
xchg
add
pop
repnz
lds
sbb
outsb
or
loope
add
mov
adc
cmpsb
aaa
mov
add
or
jns
jbe
dec
or
xchg
jne
cmpsl
cmp
aaa
xor
mov
test
inc
cmp
in
pop
mov
pop
cmc
out
or
jb
xchg
add
dec
mov
jno
xlat
xchg
mov
mov
pop
mov
ret
cmpsl
sbb
in
mov
mov
movsl
scas
stc
pop
mov
aad
loopne
mov
inc
pop
jns
lret
daa
push
movsl
js
or
pop
add
inc
outsl
sbb
cmp
or
xchg
stc
xor
dec
and
mov
enter
stos
push
add
out
jecxz
pop
pop
push
out
cmc
jnp
es
push
cmp
jns
cmp
js
push
fidivl
xlat
sub
mov
ja
jmp
inc
es
dec
pop
daa
jno
mov
pop
insb
ret
fwait
adc
or
mov
pop
pop
or
jge
pop
shrl
aaa
xchg
pushf
push
test
movsb
pop
outsb
mov
sbb
dec
adc
cmp
or
enter
shl
xchg
fnstsw
cmpsl
sbb
test
pop
ret
mov
das
mov
adc
push
cmp
out
nop
hlt
int3
sbb
out
cmpb
cwtl
imul
test
int3
shll
inc
js
mov
cmp
inc
mov
mov
decb
cmpsb
adc
in
cld
ret
out
adc
in
pop
mov
clc
test
or
mov
cld
sub
sub
pop
lret
imul
lods
rolb
xorl
sbb
mov
mov
jns
adc
xchg
rorl
pop
fdivrs
xlat
test
jns
mov
ret
test
mov
mov
pusha
mov
sbb
pop
es
aaa
cs
das
mov
xchg
pop
insl
sbb
adcl
pushf
inc
lret
add
mov
pusha
dec
outsb
sub
and
fcomi
pusha
fbstp
gs
hlt
mov
loopne
adc
cmc
stos
imul
adc
rcl
test
cmpsl
or
xchg
mov
or
stc
cwtl
pop
imul
push
test
jg
repnz
divl
test
mov
retw
cmp
add
adc
push
sbb
sub
mov
dec
je
adc
add
and
jl
jne
test
jne
popf
pop
mulb
or
bound
aam
imul
aad
mov
fsts
lea
fwait
dec
sahf
mov
out
push
xchg
lcall
xor
call
xchg
mov
sahf
sub
into
arpl
adcl
hlt
mov
aad
mov
sub
push
cmp
int3
jne
mov
cmpsl
fs
cmp
fldcw
pop
sub
orl
adc
add
loop
ljmp
mov
cmp
jbe
fscale
mov
clc
mov
cld
fistpl
fistpll
xor
lods
enter
pop
cmpsb
push
scas
or
test
adc
cmp
sub
and
std
fwait
loope
push
sti
shrb
fisttpll
cmpsb
out
shl
adc
leave
jg
mov
es
push
loop
xchg
aas
add
lahf
or
clc
in
pop
xor
pop
jg,pt
imul
mov
mov
sub
fistpll
cli
shr
in
mov
data16
mov
sub
mov
cs
pop
and
pop
jnp
sbb
cmpsl
pop
or
mov
fldt
stc
outsb
cld
jg
mov
andb
adc
lret
cmp
icebp
mov
mov
mov
mov
fcoms
jl
rep
iret
xchg
out
mov
flds
ret
jle
stc
shl
push
hlt
xchg
mov
aas
or
jmp
mov
hlt
adc
pop
aaa
lods
cmp
and
imul
jno
xchg
jae
in
in
inc
and
ret
adc
sub
xchg
pushf
jae
cwtl
xchg
nop
leave
jmp
jmp
jge
jecxz
dec
jg
mov
cmpsl
jp
fisttps
es
adc
cli
cmp
fisubs
out
in
or
sub
mov
aad
mov
mov
out
sub
push
adc
fs
or
fstp
mov
ret
dec
out
cmpsl
mov
cmp
cmp
into
mov
push
sbb
js
cmp
dec
inc
xchg
jo
jle
add
imul
popa
xchg
push
loopne
or
in
inc
xor
lret
push
stos
cmp
loop
daa
cli
adc
inc
cmpsb
movsbl
out
dec
jp
jns
aad
hlt
fucomip
aad
push
xchg
jnp
add
push
xchg
mov
push
mov
mov
leave
idivl
and
pop
mov
cltd
jp
mov
xlat
mov
loop
hlt
stos
lock
idiv
push
push
test
fwait
add
lds
js
mov
xchg
icebp
add
jbe
cmpsb
sti
xchg
xchg
xchg
ss
pusha
repnz
out
fidivrl
es
cmpsb
sahf
ret
sub
daa
xchg
dec
outsb
jns
or
icebp
jae
sbb
push
repnz
jmp
daa
insl
cld
inc
lret
push
sbb
inc
ffreep
test
hlt
add
wbinvd
cli
ds
popf
or
adc
mov
cmp
or
xchg
loopne
mov
mov
mov
mov
nop
push
mov
push
cmp
dec
aam
cmp
mov
mov
cmp
cmpl
lea
inc
repnz
jns
jecxz
xor
mov
idivb
lahf
int3
into
inc
xchg
ret
aam
sub
push
jecxz
js
sub
test
inc
push
cmpsb
push
mov
lcall
pusha
mov
loope
in
mov
sub
mov
jle
test
into
push
out
jns
mov
lea
mov
mov
mov
in
lret
mov
push
cld
xor
int
cltd
sbb
mov
push
es
or
mov
cwtl
mov
or
int
adc
jno
xchg
repz
jns
xchg
and
mov
adc
adcl
ja
push
pusha
xchg
pop
clc
call
das
push
cmp
mov
cmc
aam
xor
inc
cwtl
or
cmpsb
lret
add
mov
es
jae
sub
icebp
stc
push
mul
pop
or
inc
stc
inc
sub
in
inc
add
jns
pop
mov
or
and
jb
xor
stc
add
fistl
adc
call
cmp
stc
dec
in
xlat
icebp
lret
arpl
push
jo
mov
test
mov
rorl
or
mov
mov
scas
or
fisttpll
cmp
xlat
mov
cli
test
outsl
sbbl
movsb
call
int3
push
mov
ljmp
call
or
movsl
adc
sarb
dec
adc
jns
or
pop
mov
lret
cltd
mov
pop
cwtl
sti
mov
sbb
enter
outsl
cmpsl
data16
dec
insl
stc
jmp
cmpsb
rclb
pop
cmp
repnz
lock
bound
jg
pop
jp
jp
inc
or
cmpsl
xchg
inc
fs
push
push
cmp
js
rolb
or
aaa
dec
leave
lret
fs
pop
lds
dec
aaa
ffreep
jmp
insb
xlat
sbb
iret
std
cwtl
call
cli
mov
add
or
jno
int
leave
cmp
roll
daa
pop
lods
add
ficoml
cmp
loopne
jo
ret
leave
xchg
mov
add
push
mov
add
or
cs
push
into
arpl
cmp
or
cwtl
inc
aad
sbb
or
call
pop
or
pushf
pushf
std
mov
sub
push
lods
mov
outsl
and
xor
xchg
dec
sbb
pop
sti
stos
sub
pushf
mov
dec
add
mov
lds
push
lods
lds
imul
mov
daa
test
xlat
cmp
or
and
sbb
lea
xor
sbb
sbb
out
adc
push
adcl
inc
shlb
icebp
popa
negb
mov
es
sbb
inc
or
testl
adc
shl
push
and
sbb
mov
jno
andb
mov
sahf
ficompl
push
inc
in
pop
es
dec
push
jle
into
shll
hlt
xchg
mov
jl
sbb
sahf
rclb
test
mov
dec
mov
jne
mov
sbb
mov
mov
mov
test
sbb
cmpsl
add
add
jns
adc
adc
test
inc
cmp
mov
sbb
sub
movsl
mov
push
inc
aas
inc
aaa
sbb
testb
ss
inc
push
popf
push
mov
push
nop
xlat
dec
fimuls
sub
cli
jp
mov
jecxz
repz
xor
and
es
lods
xchg
dec
stos
adc
out
pop
mov
mov
cmp
mov
cld
test
ror
fwait
jae
cmp
out
dec
iret
enter
enter
cmpsl
mov
lahf
cmp
jge
and
lock
out
add
pop
jno
sub
cmp
roll
jne
mov
jp
fcmovb
pop
stos
mov
inc
jp
xor
fiadds
add
std
in
nop
adc
or
mov
out
sbb
xchg
jg
sub
int
mov
sub
jmp
pop
xor
cld
xchg
sbb
mov
mov
push
xchg
nop
xchg
mulb
sbb
mov
mov
and
data16
adc
mov
inc
outsl
mov
xchg
dec
and
push
mov
pop
incl
jb
jns
ret
add
ret
jns
inc
dec
xlat
pusha
aaa
dec
call
movswl
imul
lret
stos
and
add
xlat
jns
icebp
xor
jge
xchg
xor
push
jmp
cmp
cmp
movsl
xchg
fsubr
ficompl
mov
test
bnd
mov
or
in
pop
xchg
sarl
bound
push
pop
leave
out
cwtl
stos
adc
jmp
popa
sti
push
test
sbb
push
push
mov
mov
mov
xchg
push
or
xchg
clc
lcall
inc
jl
push
sahf
sbb
sbb
mov
sti
xchg
insl
or
cwtl
mov
sahf
cli
loope
hlt
les
sub
dec
mov
lds
scas
jge
fidivrs
mov
mov
jmp
dec
push
in
mov
es
fdiv
es
out
loop
jge
or
out
dec
sbb
mov
mov
mov
loopne
stos
cmp
cmpsb
lds
ret
fdivr
iret
inc
push
push
aas
data16
mov
out
mov
cld
jns
or
mov
popf
pushf
inc
mov
negl
sub
aad
popf
test
xor
mov
mov
xchg
cli
cmpsb
movsl
int
aaa
mov
test
scas
add
icebp
mov
push
and
scas
data16
rcrl
jmp
stc
int3
cltd
rcl
dec
cmpsl
jns
imul
jae
inc
sub
lcall
dec
mov
mov
cmpl
add
ja
test
add
fisubl
fidivrs
inc
cmpsb
jp
xchg
ja
sahf
ret
adc
daa
mov
and
int
inc
lds
cmp
fsubrl
sbb
out
pop
push
adc
mov
out
stos
xor
nop
lods
js
push
cmp
rol
mov
imul
mov
xor
inc
cmp
xchg
in
orl
inc
xchg
xchg
or
cmpsb
push
cli
xor
lret
leave
mov
inc
cmp
or
ret
jmp
mov
push
sub
int3
xchg
add
es
jle
dec
push
jae
xor
inc
push
or
sub
mov
sub
das
sbb
cwtl
aaa
mov
fdivrp
mov
out
dec
lret
mov
push
lods
jb
cmp
bound
add
int
iret
inc
es
sub
dec
sub
stc
xchg
sbb
inc
push
push
das
fisubrs
into
stc
mov
repz
push
lock
cli
daa
imul
jbe
call
daa
add
in
mov
mov
popa
jmp
or
pop
popf
pushf
cmp
pop
sub
mov
andl
gs
movsbl
inc
jl
jae
push
push
push
lds
mov
leave
xchg
fstpt
in
lds
mov
aam
xor
fldcw
test
add
cmp
insb
push
or
loope
mov
push
xchg
or
xchg
ja
lahf
movsl
push
je
rcll
cmpsb
cmp
hlt
testb
xchg
test
add
arpl
data16
lret
stc
inc
mov
out
insb
cmpsb
js
in
nop
mov
xor
mov
mov
jbe
aad
es
mov
cmc
jns
orl
pop
les
adc
stos
jns
cwtl
or
mov
imul
mov
xor
push
test
mov
aas
aad
and
pop
adc
jns
std
mov
mov
jns
mov
mov
les
cs
cmpsl
stc
mov
ficoml
adc
xor
psllq
fcompl
push
push
dec
mov
shr
cmpsb
sub
mov
pop
fnstsw
cmp
fcmovnu
lret
enter
cmp
int3
adcb
sub
cmpsb
pop
and
cmp
in
orl
loopne
pop
cmpsb
sbb
sbb
scas
xor
xchg
lret
or
scas
enter
sbb
cmp
imul
out
or
pushf
cvttps2pi
leave
sbb
adcl
jnp
stc
mov
and
enter
and
fisttpll
mov
or
mov
cmp
fwait
mov
mov
fiaddl
cmp
addr16
mov
icebp
jmp
bound
sbb
lods
stos
jbe
je
imul
pop
ljmp
cmp
and
sbb
pop
push
cmp
lock
sbb
xchg
inc
xchg
add
add
adc
adc
mov
jbe
rolb
push
stos
pushf
adc
sub
out
into
cmp
xor
jnp
dec
inc
and
sti
inc
adc
xchg
mov
cmp
push
enter
and
test
mov
loope
outsl
cmpsl
sbb
bound
cmpsb
or
aam
jb
pop
cltd
mov
test
popf
or
into
push
mov
test
adc
pop
mov
out
xchg
adc
js
nop
xorb
dec
cmp
cwtl
jle
cmc
mov
fcompl
jae
adc
push
fcmove
jns
xor
mov
push
lds
test
sub
and
and
es
aaa
pop
fbld
js
cli
outsb
cmp
mov
negb
fisubrl
dec
jp
repnz
jle
jecxz
add
popa
pop
clc
cmc
or
dec
xchg
adc
shlb
xchg
and
sbb
add
mov
shr
pop
outsb
mov
into
fisubrs
cmp
js
stc
fcomps
sub
adc
cmovg
jp
cmp
es
inc
xchg
mov
js
lds
push
mov
ficomps
or
or
cmc
jb
mov
adc
pop
push
arpl
lock
and
mov
in
out
aaa
pop
les
out
stos
xchg
pushf
inc
sub
lds
pop
mov
divl
cld
lods
push
sub
or
fbld
icebp
or
rcl
fisubs
dec
leave
xchg
dec
sbb
fwait
icebp
add
out
int3
pop
mov
ss
mov
icebp
mov
mov
inc
es
push
jno
insb
jbe
out
ljmp
sbb
pushf
sub
shl
pusha
mov
lsl
movsl
ss
imul
xchg
cmp
lods
fnstsw
dec
mov
add
jnp
daa
inc
ret
mov
adc
pop
sbb
xchg
sub
sbb
mov
sub
xchg
jnp
xchg
fdiv
hlt
adc
mov
enter
lock
in
pop
cmpsb
rcrl
jp
cmp
sub
mov
stc
and
lods
das
cmp
mov
sbb
cltd
push
call
lea
cmpsl
push
out
test
cmpsb
cmp
pop
cmp
lods
mov
out
aaa
and
jp
xlat
cmpsb
mov
dec
jno
test
out
testl
inc
shr
adc
mov
adc
pushf
pop
scas
stos
jno
cmpsb
fidivl
xchg
lahf
xchg
or
jmp
ljmp
fsubrl
mov
icebp
arpl
enter
aam
sbb
cmp
and
loopne
and
int3
sub
dec
scas
fcom
cld
cmp
jb
cmp
pop
cmpsl
lock
inc
enter
jecxz
movsl
jbe
imul
aam
shrl
mov
mov
push
lcall
aad
stc
shll
sub
or
add
daa
inc
xchg
adc
jns
bound
pop
and
fs
pop
fstl
xor
or
mov
pop
xchg
lea
sub
stos
mov
lea
or
add
jo
mov
and
xor
mov
and
out
pop
jne
mov
xor
imul
fdivl
iret
imul
icebp
aaa
gs
sub
outsb
jp
cli
test
mov
adc
insb
lods
cmp
push
inc
jno
and
push
es
stos
cmp
mov
push
mov
pop
pop
jl
pop
mov
xchg
inc
push
pop
pushf
dec
push
cli
pop
int
sbb
lds
sub
inc
adc
or
mov
mov
gs
and
or
cltd
mov
cld
or
xchg
jmp
psubd
jg
mov
push
dec
cmp
lods
jl
fisubrl
pop
aas
xchg
sbb
mov
rolb
jb
mov
jno
int
rorb
scas
sbb
add
js
mov
inc
dec
inc
add
test
mov
cmpsb
or
aad
mov
mov
mov
aas
or
sbb
pop
or
pop
into
mov
fs
cmp
das
inc
ja
cmpsb
mov
or
lret
mov
mov
das
mov
or
fs
bts
xlat
stc
xchg
cmpsl
cli
popa
mov
data16
xor
test
divb
sbb
dec
push
jns
arpl
stc
imul
xchg
jg
xchg
sub
cwtl
stos
jae
scas
jl
orb
mov
inc
ljmp
lss
mov
mov
push
add
push
xor
fs
lock
mov
adc
test
push
mov
pop
xor
mov
xchg
xor
leave
pop
es
fsub
jmp
lret
jmp
or
jae
cltd
notb
cmp
cld
mov
pop
cli
mov
xor
xchg
sub
adc
push
in
mov
and
mov
cmp
dec
adc
cs
push
je
cmp
imul
leave
insl
call
ljmp
mov
lret
lret
or
out
xlat
and
jae
stos
fnstsw
cmp
mov
or
add
cmpsb
mov
add
cltd
mov
or
lret
scas
aad
xor
fmull
xadd
cli
or
pop
lds
repnz
push
adc
test
dec
ret
mov
pop
push
dec
jno
cmp
and
sub
ret
in
inc
es
je
cmp
out
jnp
sbb
js
mulb
cli
inc
das
icebp
mov
xor
pop
cwtl
cmc
aas
in
push
xlat
cmpsb
xor
and
inc
mov
stc
dec
inc
cmp
cmpsb
je
mov
cld
cmp
mov
push
in
sbb
mov
pop
cld
daa
inc
ret
jl
mov
aas
pop
jns
sbb
push
fidivrs
push
or
fists
pop
jmp
movsl
test
fst
dec
adc
jp
push
sub
push
aaa
ljmp
pop
mov
dec
clc
dec
and
es
dec
subl
cmp
out
xor
lea
ljmp
mov
xchg
int
int
decb
inc
lods
test
insb
xor
push
mov
popa
cli
jns
ja
pushf
mov
dec
enter
pop
push
and
mov
push
cmpsb
cwtl
clc
ret
mov
rcrb
out
pop
fidivrl
sub
repz
pop
inc
sbb
push
jl
cmovnp
pop
or
cmp
mov
cmp
pusha
pushf
arpl
jg
js
in
lods
mov
push
cmc
cmovnp
mov
leave
cmp
jmp
jmp
dec
inc
sbb
enter
lahf
adc
clc
and
es
inc
adc
xchg
jo
fcomps
ret
lods
fsub
push
push
fidivrl
or
or
jbe
xchg
xor
imull
sti
xor
push
test
pop
loopne
enter
dec
pop
sahf
jae
push
ret
push
rol
sub
pop
inc
push
arpl
cmpl
clc
cs
loope
mov
hlt
je
ss
mov
xchg
stc
lods
aam
sarl
or
and
mov
clc
mov
negl
cs
mov
es
aas
jp
add
ljmp
movsb
cmp
jecxz
or
cmp
mov
ficompl
dec
mov
pusha
pop
es
xchg
fstl
sbb
cli
ret
repz
iret
xchg
gs
push
andl
mov
push
xchg
or
movsl
int3
jae
jne
push
cmp
push
cmp
mov
fistpll
mov
pushl
in
nop
mov
into
js
test
add
pushf
xor
lret
lods
jp
out
fs
andb
mov
sub
mov
inc
insl
and
movsl
lret
lods
lcall
cmpsb
xor
sbb
repz
sbb
data16
scas
add
sti
or
mov
sub
mov
pusha
push
int3
mov
addr16
xchg
mov
push
push
cmp
dec
sub
test
jp
daa
jb
inc
ja
push
jb
es
sub
ret
stc
lock
jno
add
xchg
xor
in
mov
scas
or
je
cmp
adc
ds
pop
out
stos
mov
scas
stc
lcall
stos
out
ja
clc
pop
enter
sbb
lcall
ljmp
scas
stc
mov
sbb
in
mull
outsl
outsb
inc
sbb
jecxz
mov
aam
inc
int
je
aas
adc
jnp
das
inc
lea
mov
les
mov
mov
pushf
and
setbe
dec
sbb
pop
fcmovnu
mov
mov
sub
mov
xor
daa
shr
mov
adc
cmp
mov
rcl
mov
lods
xchg
inc
out
stos
icebp
mov
imul
or
daa
pop
fld
stc
jns
das
in
mov
lock
mov
cmp
icebp
ret
sbb
mov
inc
cmpsb
outsl
sarb
mov
xor
or
inc
cmpsb
stc
pop
inc
mov
cmp
push
cmp
out
es
cli
loopne
pop
cmp
or
sarb
push
push
xchg
and
into
movsb
xor
mov
cmpsb
aas
jo
push
jne
pop
inc
fs
xor
lret
movsb
or
fidivrs
jge
mov
mov
jmp
cs
mov
pop
cmpsb
cmpb
lock
out
testb
subl
xchg
outsb
ja
sub
inc
adc
and
out
xchg
inc
es
lods
es
mov
je
xor
jnp
or
stc
dec
fimull
mov
pop
dec
cld
out
add
mov
and
cs
or
addb
xor
ficoml
js
imul
dec
test
fdivrl
xchg
out
pop
out
fistpll
push
mov
xchg
adc
or
stos
lods
and
test
pop
mov
jae
stos
inc
cmp
adc
loop
mov
pop
dec
pop
mov
adc
addr16
mov
jecxz
xor
shl
inc
sub
ljmp
cmp
int
repnz
adc
aaa
jbe
push
mov
mov
jns
cmp
sbb
sub
sub
aas
push
lds
mov
cmpsb
js
cmc
shlb
es
xor
cli
cli
push
sbb
mov
xchg
imul
and
out
or
inc
cmp
rorb
stc
or
sub
rorb
ja
dec
in
inc
pop
cld
int3
clc
enter
mov
xchg
and
push
lret
sbb
ja
rclb
loop
or
es
adc
shrl
clc
imul
mov
lock
ss
push
sub
jne
lock
ror
dec
je
push
push
faddl
jns
or
push
repz
cmp
fadds
lods
fidivs
sbb
pop
lahf
arpl
lret
mov
xor
xchg
or
jg
clc
inc
xchg
xchg
cltd
inc
lret
jns
lods
sarb
push
lds
or
mov
shlb
push
mov
out
mov
mov
mov
stc
and
dec
outsb
xchg
mov
daa
in
cmp
pushf
sbb
inc
fs
in
in
sub
jns
and
mov
push
subl
ljmp
push
lock
into
cmpsl
inc
sarl
ljmp
into
clc
popa
xchg
sub
lea
jg
inc
mov
in
lret
out
subb
mov
xchg
insb
cmpsb
int
insl
pushf
cmpsb
fdivs
mov
xchg
ret
cmp
mov
dec
pop
mov
adc
sbb
fcmovb
sub
scas
dec
cmpsl
inc
inc
lret
ja
jns
mov
mov
mov
mov
add
lahf
dec
fisubrl
ret
dec
jg
mov
imul
xchg
hlt
call
and
fsubrl
or
mov
add
into
inc
pop
inc
fildl
xchg
addr16
sub
icebp
imul
push
mov
fcomps
lahf
xor
adc
and
aaa
stos
and
fcoms
or
leave
bound
push
cli
inc
add
adc
or
add
sarl
icebp
in
push
scas
mov
faddl
lcall
jbe
mov
and
lea
icebp
imul
movsl
out
mov
and
push
pop
dec
mov
xchg
and
es
test
sub
pop
fidivrl
xlat
jmp
cmc
stc
dec
loopne
xor
pop
lods
cs
xchg
jp
psubd
xchg
inc
mov
and
hlt
ret
lea
outsb
xor
scas
xchg
xor
sub
mov
xchg
xchg
fsub
int3
jns
mov
sti
shr
push
ds
mov
mov
push
or
test
lret
popf
movsb
shrb
sti
mov
mov
pop
mov
jae
cmp
lcall
lds
or
mov
xchg
mov
int3
movsb
cmp
xlat
lea
sub
cmp
jmp
inc
jmp
repnz
iret
add
mov
lahf
mov
mov
pop
ja
popf
incb
sub
in
and
dec
imul
mov
out
mull
inc
xchg
jbe
push
sbb
stos
ror
lea
outsb
dec
mov
leave
jo
jecxz
in
sarl
ror
mov
push
push
pop
push
sub
fistpll
out
aas
outsb
adc
nop
push
dec
sbb
orl
popa
cmpsb
es
fdivl
rcrl
icebp
addr16
lods
xchg
daa
mov
divl
fwait
jo
cmp
mov
loop
and
out
mov
stos
mov
cmp
rorl
ljmp
xchg
mulb
stc
pop
dec
cmp
mov
add
shlb
sub
push
adc
push
ds
mov
adc
mov
or
dec
insb
mov
jecxz
mov
mov
in
popf
test
cwtl
adc
jae
jae
push
xor
stos
mov
push
std
adc
notb
sbb
sbb
adc
push
loopne
mov
aas
lock
cmpsb
in
gs
adc
test
imul
lds
sbb
jb
jns
jb
push
xor
jnp
add
sub
imul
mov
clc
mov
or
lods
test
test
and
stc
iret
jnp,pn
in
jl
aaa
loopne
ss
iret
dec
jmp
lcall
or
std
pop
add
sub
iret
jle
push
mov
scas
xchg
test
inc
cmp
cmp
pop
shll
fstl
dec
sub
mov
sbb
gs
adcb
incl
xchg
rorb
test
out
fwait
jp
fdivrl
imul
pop
cmc
jns
mov
xchg
test
int
push
push
clc
xchg
xchg
dec
pop
cmpsb
xchg
repz
lea
jmp
stos
sbb
cmp
stos
sbb
push
add
add
cmp
pop
pop
push
inc
out
hlt
push
mov
movsl
push
xchg
outsb
mov
push
push
cmp
lods
test
pop
jns
sbb
leave
jae
xchg
icebp
loopne
lods
test
xchg
sub
decb
sbb
sbb
movsl
mov
sbb
push
push
push
and
jae
and
les
adc
lea
rcl
inc
sub
sbb
inc
hlt
aad
outsl
ss
inc
jg
mov
sub
mov
xor
or
mov
lea
fdivs
adc
call
or
or
jns
inc
push
lock
and
adc
pop
lods
dec
test
out
shrb
push
lods
and
xchg
mov
push
dec
ljmp
ljmp
or
decl
push
mov
cmc
fwait
adc
testl
sub
movsb
add
add
mov
sub
popa
cli
sub
dec
mov
inc
sub
andb
and
div
or
xchg
mov
xchg
sbb
jns
addr16
inc
mov
or
fucom
cmpsl
and
in
add
lret
loopne
dec
out
or
pop
test
xchg
add
pusha
xchg
add
adcb
add
xchg
add
mov
nop
add
jbe
add
pop
xchg
add
ss
add
inc
xchg
add
adc
add
stos
xchg
add
mov
xchg
add
add
add
ljmp
add
add
ficoms
add
xor
add
mov
add
push
xchg
add
dec
xchg
add
lret
add
xchg
add
and
add
sbb
add
ret
add
xchg
add
adc
add
cs
add
movsb
nop
add
in
add
ljmp
add
xchg
add
add
add
mov
xchg
add
cmp
add
jb
add
lock
add
push
add
aam
add
add
add
rclb
add
xchg
add
add
add
dec
xchg
add
notb
add
xchg
add
rclb
add
xchg
add
cmp
add
adc
add
jle
add
stos
xchg
add
stos
xchg
add
adcb
add
xchg
add
jl
add
pop
xchg
add
cwtl
xchg
add
and
add
add
add
stos
xchg
add
mov
xchg
add
xor
add
jp
add
push
xchg
add
rclb
add
ret
add
xchg
add
sbb
add
and
add
pop
cltd
add
push
cltd
add
dec
cwtl
add
adc
add
outsb
xchg
add
loop
add
xchg
xchg
add
mov
xchg
add
mov
add
ds
add
and
add
inc
xchg
add
cwtl
add
cli
xchg
add
bound
add
jle
add
xor
add
mov
add
add
add
pop
fwait
add
jo
add
into
fwait
add
in
cltd
add
rcrb
add
adc
add
in
pushf
add
inc
popf
add
sub
add
push
lcall
mov
add
add
pushf
add
mov
add
enter
inc
lcall
jbe
add
inc
pushf
add
lcall
add
pushf
add
mov
add
and
add
xchg
fwait
add
or
add
and
add
clc
lcall
push
sahf
add
adc
add
xchg
sahf
add
mov
popf
add
cli
sahf
add
mov
popf
add
rcrb
add
add
cli
popf
add
push
add
inc
lahf
add
jle
add
stos
sahf
add
loopne
add
sub
add
in
add
push
mov
add
cmpsb
lahf
add
add
add
push
mov
add
push
mov
add
mov
add
mov
add
shlb
add
cmp
add
movsb
add
test
add
andb
add
add
sahf
mov
add
jp
add
push
mov
add
sbb
add
push
mov
sub
mov
mov
mov
push
mov
and
cmp
jne
mov
mov
add
cmp
je
cmp
je
add
xor
mov
add
add
xor
add
and
push
add
push
sub
mov
mov
sub
add
sub
cmp
jne
mov
mov
add
add
add
sub
sub
add
or
mov
cmp
jne
mov
or
add
sub
add
mov
cmp
je
mov
mov
add
sub
cmp
je
mov
mov
cmp
jne
xor
xor
sub
mov
or
sub
and
cmp
je
add
mov
sub
add
and
test
je
mov
sub
sub
cmp
jne
mov
test
jne
xor
sub
add
sub
and
mov
cmp
je
mov
mov
sub
cmp
je
mov
cmp
jne
or
mov
xor
mov
cmp
jne
add
add
xor
sub
mov
sub
add
cmp
jne
cmp
jne
mov
add
add
cmp
je
add
xor
add
sub
mov
mov
or
sub
add
and
sub
mov
cmp
je
cmp
jne
xor
cmp
je
mov
mov
add
add
add
sub
cmp
jne
sub
mov
mov
test
jne
mov
mov
add
cmp
jne
add
sub
sub
mov
test
jne
cmp
jne
sub
xor
add
add
mov
sub
sub
mov
add
add
or
mov
test
je
add
xor
mov
sub
cmp
je
add
mov
sub
mov
add
add
sub
sub
sub
add
add
add
add
xor
add
sub
mov
add
add
sub
mov
test
jne
mov
test
jne
sub
add
sub
mov
add
sub
add
or
and
mov
sub
mov
test
je
mov
sub
xor
add
test
je
mov
mov
add
add
sub
add
cmp
je
cmp
jne
mov
mov
add
cmp
je
mov
test
je
mov
cmp
je
cmp
je
or
mov
sub
add
and
cmp
jne
test
je
xor
xor
mov
cmp
je
mov
add
cmp
je
mov
mov
cmp
jne
add
add
cmp
je
cmp
jne
sub
add
test
je
mov
mov
cmp
jne
cmp
jne
add
add
add
add
and
test
je
mov
mov
cmp
je
or
mov
and
cmp
jne
or
sub
mov
mov
cmp
je
xor
xor
sub
add
sub
sub
add
sub
mov
mov
cmp
je
mov
test
jne
mov
sub
and
cmp
je
cmp
jne
add
and
cmp
jne
sub
sub
add
cmp
jne
and
xor
mov
add
and
sub
sub
cmp
je
sub
and
add
cmp
je
mov
xor
mov
sub
add
add
and
cmp
jne
mov
mov
sub
and
or
test
jne
add
cmp
jne
mov
mov
sub
sub
sub
sub
sub
add
mov
add
mov
sub
and
sub
add
cmp
je
cmp
je
cmp
jne
sub
add
mov
add
mov
add
sub
cmp
je
add
sub
cmp
jne
xor
sub
mov
cmp
jne
mov
sub
mov
cmp
jne
mov
mov
add
sub
or
or
or
sub
cmp
je
mov
mov
cmp
jne
add
mov
and
mov
or
cmp
je
mov
test
jne
mov
sub
mov
sub
add
and
sub
cmp
jne
sub
mov
cmp
jne
cmp
je
test
jne
mov
mov
sub
sub
cmp
jne
xor
sub
sub
xor
or
sub
add
call
sub
or
test
je
or
add
mov
add
cmp
jne
and
cmp
jne
mov
mov
add
add
cmp
je
add
xor
add
mov
mov
cmp
jne
sub
mov
mov
sub
sub
cmp
jne
add
or
mov
mov
add
mov
cmp
jne
cmp
jne
sub
or
mov
mov
mov
sub
or
mov
mov
cmp
je
mov
and
mov
add
cmp
je
sub
test
je
or
or
sub
mov
mov
or
cmp
jne
xor
add
mov
cmp
je
or
add
add
cmp
je
mov
or
xor
call
mov
add
mov
add
mov
xor
sub
mov
add
call
and
mov
cmp
jne
cmp
je
and
and
mov
add
cmp
je
cmp
je
add
cmp
jne
cmp
je
and
mov
and
add
and
add
sub
add
sub
mov
cmp
jne
mov
add
push
push
push
call
xor
mov
add
or
add
add
cmp
jne
mov
cmp
je
add
cmp
jne
mov
xor
cmp
jne
mov
add
sub
sub
mov
cmp
je
sub
sub
mov
sub
and
add
mov
add
cmp
je
cmp
jne
mov
sub
mov
sub
or
add
add
cmp
jne
or
add
mov
add
and
mov
cmp
jne
mov
cmp
jne
add
sub
mov
mov
cmp
jne
and
xor
mov
mov
cmp
je
sub
cmp
je
xor
mov
add
and
cmp
jne
mov
add
mov
xor
add
sub
xor
test
jne
cmp
jne
mov
mov
add
add
and
test
jne
test
je
mov
add
mov
mov
or
add
test
jne
cmp
je
test
je
mov
cmp
je
xor
and
test
jne
and
mov
mov
mov
and
and
xor
cmp
je
sub
add
mov
add
mov
sub
sub
sub
cmp
je
mov
add
cmp
je
cmp
je
mov
test
je
mov
mov
add
cmp
je
mov
add
mov
sub
add
and
or
mov
mov
sub
mov
mov
mov
cmp
je
xor
mov
sub
sub
add
sub
add
test
je
mov
xor
sub
sub
cmp
je
add
cmp
je
add
mov
sub
sub
mov
or
xor
mov
add
cmp
je
mov
add
cmp
je
sub
sub
add
mov
xor
cmp
jne
mov
sub
mov
sub
add
cmp
jne
sub
mov
add
cmp
jne
sub
add
mov
and
sub
sub
sub
or
add
cmp
je
xor
mov
add
and
sub
add
cmp
jne
and
mov
xor
sub
cmp
jne
mov
cmp
jne
add
mov
add
mov
cmp
jne
mov
sub
add
add
cmp
je
sub
xor
mov
cmp
jne
mov
add
mov
cmp
jne
add
add
cmp
jne
and
add
mov
mov
and
add
and
sub
sub
add
mov
mov
add
sub
add
add
sub
sub
sub
sub
mov
mov
add
sub
sub
mov
mov
add
cmp
je
mov
mov
add
cmp
jne
add
mov
mov
xor
sub
add
add
add
mov
sub
xor
and
mov
sub
mov
sub
add
add
mov
xor
and
cmp
jne
mov
and
mov
cmp
je
add
mov
add
mov
cmp
je
or
mov
and
sub
mov
sub
xor
sub
sub
sub
mov
mov
cmp
jne
mov
cmp
je
sub
mov
xor
sub
cmp
je
add
mov
cmp
jne
add
and
add
mov
mov
sub
add
add
add
xor
sub
add
cmp
je
cmp
je
sub
mov
add
add
mov
add
cmp
jne
cmp
je
mov
mov
cmp
je
mov
add
or
test
je
sub
mov
cmp
je
add
add
mov
cmp
jne
mov
add
mov
add
or
cmp
je
add
add
add
mov
mov
mov
and
add
or
cmp
je
mov
cmp
je
mov
or
mov
add
sub
cmp
jne
add
sub
and
sub
xor
add
xor
mov
sub
cmp
je
mov
cmp
je
mov
mov
sub
sub
or
or
cmp
je
sub
and
mov
add
sub
mov
mov
test
jne
and
mov
mov
mov
add
or
mov
cmp
je
mov
mov
sub
or
add
test
jne
add
or
mov
sub
add
mov
add
sub
mov
sub
cmp
je
add
cmp
jne
or
cmp
je
sub
sub
cmp
je
xor
mov
add
cmp
je
mov
mov
and
sub
and
mov
cmp
je
add
mov
mov
mov
and
test
je
xor
mov
cmp
jne
and
mov
or
mov
add
cmp
je
xor
mov
mov
sub
add
sub
cmp
jne
cmp
je
add
xor
sub
mov
mov
cmp
jne
mov
add
cmp
jne
sub
cmp
je
mov
mov
add
cmp
jne
mov
add
sub
cmp
je
mov
cmp
je
mov
sub
test
jne
mov
test
je
mov
mov
mov
add
cmp
jne
add
sub
mov
mov
cmp
jne
or
mov
cmp
jne
sub
mov
sub
and
mov
add
or
sub
or
mov
lea
add
mov
add
or
sub
mov
add
cmp
jne
xor
test
jne
mov
mov
add
add
and
mov
cmp
je
mov
and
add
cmp
je
cmp
jne
mov
mov
sub
cmp
je
add
sub
add
sub
cmp
jne
mov
add
mov
test
je
add
mov
mov
sub
sub
sub
cmp
jne
sub
xor
mov
add
add
mov
and
mov
push
and
push
mov
mov
mov
add
add
sub
sub
call
or
mov
mov
mov
cmp
je
add
mov
sub
mov
sub
add
test
je
add
mov
and
mov
cmp
jne
cmp
jne
mov
mov
cmp
je
sub
mov
sub
mov
sub
sub
cmp
jne
mov
mov
and
or
sub
sub
cmp
jne
cmp
je
mov
xor
add
and
sub
mov
sub
add
sub
add
shr
cmp
jne
mov
cmp
jne
sub
mov
mov
xor
cmp
jne
mov
cmp
jne
add
sub
mov
xor
xor
sub
add
mov
cmp
jne
mov
sub
sub
sub
add
mov
add
sub
add
add
call
add
cmp
jne
mov
mov
sub
and
add
and
and
sub
cmp
jne
sub
cmp
je
xor
sub
mov
sub
cmp
jne
mov
mov
add
xor
mov
mov
mov
test
jne
xor
mov
mov
sub
cmp
je
mov
mov
sub
add
cmp
jne
mov
mov
sub
sub
mov
and
add
or
sub
mov
mov
mov
and
xor
add
mov
pushl
push
pushl
call
mov
cmp
jne
mov
sub
test
jne
sub
cmp
jne
sub
sub
mov
mov
xor
cmp
jne
mov
or
mov
sub
sub
cmp
je
or
mov
xor
cmp
jne
cmp
jne
sub
and
add
xor
mov
sub
sub
and
cmp
je
sub
addl
mov
sub
mov
cmp
je
mov
cmp
je
mov
mov
add
cmp
jne
mov
mov
sub
xor
add
cmp
jne
cmp
jne
mov
cmp
je
add
cmp
jne
cmp
je
or
cmp
jne
add
add
mov
sub
mov
sub
sub
test
je
cmp
je
and
mov
xor
mov
cmp
jne
and
sub
and
mov
add
mov
cmp
jne
mov
and
sub
mov
sub
test
je
mov
sub
mov
cmp
je
or
sub
add
mov
sub
call
sub
add
mov
add
sub
sub
sub
mov
add
cmp
jne
add
add
mov
add
mov
or
sub
mov
sub
mov
mov
sub
sub
add
cmp
jne
mov
add
mov
cmp
je
sub
sub
xor
sub
sub
mov
mov
and
cmp
jne
cmp
je
mov
cmp
jne
xor
or
mov
cmp
jne
test
je
sub
mov
mov
sub
add
add
xor
and
and
and
cmp
je
mov
xor
add
sub
sub
cmp
jne
mov
add
or
cmp
jne
mov
sub
mov
sub
add
cmp
jne
mov
cmp
jne
mov
mov
or
sub
add
or
sub
sub
cmp
jne
cmp
jne
cmp
je
mov
cmp
jne
mov
cmp
jne
test
je
mov
sub
mov
add
sub
or
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
mov
cmp
jne
sub
and
sub
add
mov
mov
add
sub
or
mov
sub
pop
sub
mov
mov
add
sub
sub
pop
or
cmp
jne
sub
test
je
mov
mov
cmp
je
sub
sub
add
mov
pop
add
cmp
jne
cmp
jne
or
sub
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
add
push
mov
and
mov
sub
sub
push
mov
mov
add
sub
and
or
and
sub
or
or
mov
add
cmp
je
add
sub
push
add
mov
add
mov
add
add
sub
add
mov
add
movl
mov
add
call
sub
add
cmp
jne
sub
mov
cmp
je
sub
mov
mov
and
and
sub
cmp
je
xor
mov
sub
and
cmp
jne
mov
sub
mov
add
sub
add
sub
call
add
mov
mov
mov
cmp
jne
mov
mov
sub
add
xor
add
add
test
je
mov
sub
xor
or
sub
sub
call
mov
mov
add
add
sub
test
je
mov
and
mov
add
add
mov
mov
or
mov
add
add
test
jne
cmp
je
mov
or
sub
xor
add
cmp
jne
sub
add
sub
sub
mov
mov
mov
sub
add
cmp
je
mov
add
xor
cmp
jne
cmp
je
add
add
mov
mov
add
add
sub
cmp
je
and
mov
sub
or
cmp
jne
sub
sub
xor
cmp
je
cmp
jne
cmp
jne
sub
add
add
mov
mov
sub
mov
sub
xor
cmp
je
cmp
jne
xor
or
push
call
cmp
jne
mov
mov
add
cmp
jne
xor
mov
sub
xor
test
jne
or
cmp
je
mov
mov
cmp
jne
xor
test
jne
mov
and
add
mov
add
add
cmp
je
add
mov
cmp
je
sub
cmp
jne
mov
add
xor
test
je
or
and
xor
mov
sub
xor
cmp
je
add
mov
and
add
or
je
mov
or
and
cmp
je
mov
add
and
mov
sub
mov
addl
mov
sub
lea
cmp
jne
mov
cmp
je
sub
cmp
je
test
je
add
xor
sub
mov
sub
add
sub
add
add
inc
cmp
jne
add
mov
cmp
je
cmp
jne
add
sub
mov
mov
add
mov
sub
xor
mov
mov
and
and
add
sub
cmp
jne
cmp
je
or
or
add
sub
sub
sub
cmp
jne
and
or
sub
cmp
jne
mov
add
cmp
je
sub
mov
mov
add
mov
sub
mov
sub
xor
and
sub
sub
cmp
jne
add
test
jne
mov
mov
add
sub
sub
mov
sub
sub
mov
add
cmp
jne
sub
mov
test
je
cmp
je
sub
mov
mov
add
sub
sub
or
add
and
or
sub
sub
cmp
je
and
mov
cmp
jne
mov
cmp
je
mov
or
mov
cmp
je
test
jne
add
add
xor
mov
cmp
jne
mov
mov
and
add
or
add
cmp
jne
cmp
jne
sub
mov
and
add
test
je
cmp
je
add
sub
mov
xor
mov
cmp
je
sub
mov
xor
test
jne
add
xor
add
mov
cmp
jne
or
mov
mov
cmp
je
add
mov
and
add
sub
mov
sub
cmp
je
mov
add
xor
xor
add
add
or
sub
add
mov
and
add
cmp
je
mov
mov
mov
sub
sub
add
cmp
jne
mov
mov
and
add
mov
cmp
je
cmp
jne
cmp
je
sub
cmp
jne
cmp
je
mov
xor
add
add
test
je
sub
mov
add
mov
cmp
jne
sub
mov
mov
cmp
jne
mov
mov
and
cmp
je
mov
sub
cmp
jne
mov
or
mov
add
cmp
je
or
xor
cmp
jne
add
add
mov
test
je
mov
sub
add
cmp
jne
cmp
jne
sub
mov
mov
sub
and
add
add
cmp
jne
or
or
mov
add
sub
mov
and
add
cmp
je
and
sub
cmp
je
or
xor
cmp
je
cmp
je
add
pop
sub
pop
mov
mov
add
add
cmp
jne
mov
add
mov
add
sub
sub
test
je
mov
sub
mov
or
add
or
pop
mov
mov
add
or
test
jne
add
mov
mov
and
or
mov
cmp
jne
mov
mov
sub
sub
sub
add
sub
cmp
je
cmp
jne
add
sub
cmp
jne
mov
mov
or
and
add
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
push
mov
sub
push
mov
add
mov
sub
add
add
or
add
sub
or
push
mov
xor
cmp
jne
mov
sub
sub
cmp
jne
mov
and
cmp
je
mov
mov
add
sub
cmp
jne
xor
add
mov
add
sub
or
add
mov
and
mov
sub
sub
cmp
je
cmp
je
or
add
test
je
mov
sub
sub
add
rdtsc
add
add
mov
or
mov
add
sub
sub
mov
mov
add
cmp
jne
xor
and
add
sub
mov
and
cmp
jne
mov
add
sub
mov
sub
add
add
cmp
jne
add
sub
mov
mov
sub
add
mov
and
sub
add
sub
pop
sub
pop
mov
add
cmp
je
mov
mov
add
and
add
sub
sub
add
or
add
add
cmp
jne
sub
pop
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
mov
add
and
add
add
sub
and
and
add
push
xor
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
add
push
sub
test
je
add
cmp
je
sub
test
jne
xor
add
sub
mov
add
sub
and
add
and
cmp
je
cmp
jne
sub
mov
xor
sub
sub
cmp
jne
cmp
jne
and
or
cmp
je
or
push
sub
mov
mov
and
cmp
je
mov
mov
add
add
and
xor
sub
cmp
jne
mov
add
mov
sub
or
add
mov
cmp
jne
mov
xor
or
test
je
mov
or
sub
sub
mov
sub
sub
add
or
add
sub
add
add
sub
sub
mov
mov
mov
or
cmp
jne
mov
sub
sub
cmp
je
cmp
je
mov
add
mov
cmp
jne
sub
cmp
jne
add
decl
mov
or
add
mov
cmp
je
sub
cmp
je
test
jne
cmp
je
test
jne
add
mov
cmp
je
test
je
add
or
mov
add
mov
mov
add
add
sub
rorl
mov
mov
add
sub
cmp
je
mov
sub
test
jne
cmp
jne
add
mov
cmp
jne
add
mov
add
cmp
jne
mov
sub
xor
mov
mov
or
add
add
cmp
je
cmp
jne
sub
xor
sub
or
cmp
je
mov
mov
and
sub
add
sub
cmp
jne
add
add
and
sub
add
sub
sub
rorl
mov
add
add
mov
mov
sub
sub
mov
add
add
jmp
mov
or
add
mov
mov
add
and
or
test
jne
add
mov
mov
and
and
add
sub
mov
add
add
pop
mov
and
mov
sub
add
pop
cmp
je
add
sub
sub
cmp
jne
add
mov
mov
sub
sub
sub
cmp
jne
mov
add
mov
and
or
cmp
jne
mov
sub
sub
pop
mov
and
mov
cmp
jne
mov
or
sub
add
mov
cmp
je
add
add
mov
and
cmp
jne
mov
cmp
jne
cmp
je
add
mov
cmp
je
cmp
je
sub
add
cmp
jne
sub
cmp
jne
or
test
je
add
mov
cmp
jne
cmp
je
sub
mov
mov
add
sub
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
sub
sub
push
mov
mov
mov
sub
add
sub
sub
sub
and
and
or
push
mov
add
add
and
mov
add
sub
add
mov
mov
add
and
add
and
sub
add
sub
add
add
cmp
je
mov
mov
cmp
je
sub
add
mov
mov
add
cmp
jne
xor
cmp
je
mov
add
add
and
xor
add
or
add
sub
add
and
cmp
je
add
push
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
add
mov
mov
add
add
add
push
mov
add
mov
or
xor
push
sub
push
mov
sub
mov
or
sub
add
cmp
je
and
mov
mov
add
add
xor
mov
xor
sub
add
sub
xor
add
add
call
cmp
jne
test
je
mov
add
mov
mov
or
cmp
je
sub
mov
sub
add
and
add
mov
add
mov
or
add
mov
and
mov
add
add
sub
xor
cmp
je
cmp
je
sub
cmp
jne
test
je
cmp
je
sub
cmp
jne
test
jne
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
or
add
add
add
add
mov
sub
mov
mov
add
mov
add
sub
cmp
jne
mov
sub
sub
mov
and
cmp
je
xor
and
mov
mov
sub
mov
add
and
add
mov
mov
add
add
add
cmp
jne
mov
or
mov
sub
cmp
je
mov
sub
mov
xor
sub
test
je
sub
add
or
cmp
je
cmp
je
or
and
test
je
add
and
sub
add
and
cmp
jne
mov
sub
and
mov
cmp
jne
mov
cmp
jne
add
mov
add
add
mov
mov
cmp
je
sub
mov
mov
add
cmp
je
cmp
jne
and
cmp
jne
cmp
jne
sub
add
or
cmp
je
test
jne
cmp
jne
sub
cmp
jne
cmp
jne
sub
sub
mov
sub
add
or
je
mov
add
add
sub
repnz
or
xor
add
add
add
add
mov
or
or
and
addl
cmp
jne
mov
mov
and
cmp
jne
test
je
and
cmp
je
and
jmp
cmp
jne
add
mov
cmp
je
cmp
je
cmp
jne
mov
sub
sub
mov
cmp
je
test
jne
add
cmp
je
or
add
mov
mov
cmp
jne
and
mov
sub
sub
sub
pop
sub
add
mov
cmp
jne
cmp
jne
mov
mov
cmp
jne
add
add
and
cmp
je
cmp
jne
sub
xor
or
add
or
sub
add
add
add
or
sub
or
and
pop
mov
mov
and
add
sub
cmp
jne
or
mov
mov
add
add
add
add
pop
mov
leave
ret
