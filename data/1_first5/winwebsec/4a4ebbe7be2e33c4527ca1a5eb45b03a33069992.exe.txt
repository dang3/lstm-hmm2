push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
call
lods
jmp
loop
jge
iret
cmc
lock
pushf
xchg
aaa
push
pop
pop
inc
jae
outsb
testl
scas
pop
repz
add
das
mov
mov
jg
nop
and
sbb
sti
xor
dec
aaa
das
mov
lahf
cli
lret
cmp
imul
call
outsl
in
iret
int
cmp
aad
je
add
xor
test
sub
add
or
lret
mov
test
or
ljmp
or
out
outsl
inc
inc
xor
hlt
xchg
mov
xchg
ja,pn
enter
jb
mov
push
cwtl
or
sub
mov
scas
adc
pop
lret
mov
mov
cs
pop
adc
cmp
jb
push
mov
pushf
jo
addr16
scas
stc
lods
cmp
sbb
mov
xchg
and
rcr
hlt
ret
shrl
pop
ret
icebp
adc
ret
lods
jne
subl
fs
aas
mov
aam
stos
sub
rcrl
popa
xchg
lahf
fmull
mov
in
mov
cmc
movsl
xor
js
sti
gs
into
sub
pusha
insw
loopne
andl
add
pop
adc
mov
cs
pop
push
shrl
mov
or
jl
xchg
mulb
jle
pop
push
sub
cmp
cmpsl
pop
xor
dec
movsb
jo
mov
mov
adc
les
sub
hlt
adc
loopne
push
xchg
jge
and
lods
mov
xor
and
in
movsl
push
stc
fildl
cmp
pop
push
rcl
mov
nop
jl
lods
cmp
ret
xor
push
dec
mov
stc
dec
and
aam
and
insl
or
fidivrs
std
sar
xor
jbe
ja
imul
add
enter
lea
lret
shl
loope
ss
xchg
xchg
push
mov
movsb
pop
xor
sub
xor
jp
scas
ret
mov
scas
loop
and
daa
sbb
sub
sub
jbe
inc
js
jne,pt
or
sbb
into
mov
ret
aam
pop
dec
stos
jbe
lock
je
sbb
aad
inc
int3
mov
xor
insl
sub
xor
push
adc
inc
fbld
adc
shl
mov
mov
jo
push
pop
sub
mov
jb
inc
cld
enter
stos
out
in
cmp
sti
and
ljmp
aas
lret
imulb
or
daa
inc
and
ficompl
jns
js
in
push
cli
or
imull
ror
daa
in
loope
add
test
sar
les
jae
dec
movsb
pop
pop
mov
sbb
sbb
scas
inc
mov
add
xchg
sub
ret
dec
cld
push
pop
mov
sbb
mov
or
in
arpl
push
clc
xchg
mov
jmp
xchg
addr16
scas
xor
ss
nop
rcrb
xchg
sub
lret
bound
dec
xor
lret
ss
jns
add
ljmp
and
mov
jge
add
jbe
push
mov
inc
in
loop
mov
mov
sbb
sub
cmp
cmp
sarl
mov
adc
sbb
push
add
ret
xor
scas
mov
shll
add
rorl
mov
in
xchg
xchg
and
mov
add
sub
fnstenv
jns
xor
push
in
imul
aas
ror
outsb
lea
rorb
cli
adc
jle
push
ror
mov
adc
call
cmc
push
jne
push
das
bound
sti
lahf
int3
jnp
xchg
out
aad
push
push
sbb
out
jecxz
pop
mov
cmp
test
repnz
cmp
sahf
cmpsl
cmp
and
hlt
push
xchg
mov
in
mov
push
ficompl
mov
fwait
notl
mov
sarb
xchg
push
xorl
sub
mov
xor
mov
or
dec
andl
enter
and
mov
cmpsb
xor
mov
sub
dec
lds
dec
pop
loope
inc
mov
push
mov
and
pop
mov
push
jae
xor
jmp
scas
lock
test
ror
fs
jg
xchg
test
mov
popf
push
fstpl
fildl
jmp
in
inc
mov
fsts
mov
add
jl
inc
cmp
sub
sahf
jp
in
dec
adc
mov
or
cltd
subl
stc
loopne
repnz
pop
or
adc
inc
leave
fisubrl
imul
rorl
add
ds
xchg
out
mov
bound
icebp
bound
dec
test
out
dec
test
jge
cmp
pop
push
daa
mov
cld
out
mov
xchg
cmp
sub
subb
push
popa
repnz
push
inc
das
xor
jb
xchg
rorb
cwtl
sbb
pushf
stos
inc
test
pop
inc
pop
pop
adc
adc
icebp
add
cmp
add
das
jne
fstps
repz
int3
int
leave
out
nop
adc
clc
pop
cmp
push
push
dec
add
jae
inc
lods
jo
mov
cmpsb
dec
sbb
pop
je
xor
aas
arpl
arpl
pop
shll
in
stos
inc
shr
push
jecxz
orl
mov
add
leave
mov
sub
add
clc
mov
and
sbb
dec
inc
jno
push
pop
push
xchg
dec
jle
mov
mov
xchg
push
sbb
push
push
mov
sbb
adc
fcoms
inc
loope
mov
cmpsb
push
enter
adc
or
lods
jbe
push
add
stos
cmpsb
add
xchg
in
xor
mov
rcrb
mov
addb
mov
out
out
dec
pop
and
cmp
add
xchg
or
stc
mov
out
scas
xchg
sub
lret
imul
imulb
scas
add
xchg
sahf
call
sub
push
adc
adc
out
sub
jg
lods
fistpl
inc
int
fwait
cs
mov
outsl
std
pop
jb
or
inc
repnz
aad
jmp
add
icebp
repnz
adc
in
add
hlt
fs
and
jae
dec
xchg
nop
pop
sbb
lods
or
mov
fsubs
add
sbb
xchg
inc
mov
nop
jge
mov
testl
add
cli
xor
fs
push
inc
loope
jg
jmp
add
sbb
push
rcrb
scas
loop
mov
in
loopne
or
jno
sbb
sbb
xor
test
js
insb
and
push
into
dec
cld
insl
popa
mov
stc
inc
out
inc
popf
cmpsb
mov
or
cmp
cmp
lea
push
sbb
data16
or
repz
loop
jns
sub
push
addr16
iret
mov
dec
mov
xchg
xchg
sbb
xor
dec
in
pop
nop
cwtl
test
popf
and
mov
iret
cmc
call
pop
xor
push
stos
das
movsl
fmull
sbb
cmp
cmp
ds
mov
xor
mov
jmp
notl
xchg
pusha
pop
cli
faddl
mov
outsl
es
daa
push
jle
out
sbb
hlt
pop
xchg
xor
jno
in
sub
mov
pop
mov
pop
pop
mov
orb
pop
pusha
xchg
jecxz
mov
gs
stc
stc
sub
push
dec
push
xchg
mov
and
gs
test
mov
or
dec
or
out
adc
mov
in
fdivrl
dec
inc
mov
pop
mov
xor
aaa
inc
nop
scas
ljmp
dec
pop
xchg
sub
or
xor
jecxz
cmp
je
xchg
loope
inc
outsb
hlt
jg
js
mov
sub
int
out
and
add
out
lods
or
mov
add
pushf
shl
adc
ror
or
imull
aam
mov
sub
pop
push
aaa
stc
lds
call
inc
fistpll
jl
loop
dec
aas
and
int3
sbb
lahf
mov
pop
sub
and
push
cli
jbe
mov
adc
orb
test
cltd
shlb
ret
idivb
pop
pop
dec
icebp
adc
mov
jge
jl
fucomi
mov
das
sbb
leave
lods
cmpl
jne
xlat
mov
mov
sub
imul
cmp
cmpsl
aaa
mov
int3
jnp
aaa
repnz
shll
ret
loopne
fwait
cltd
fstpt
cmpsl
adc
ja
shll
aad
push
push
sahf
mov
sahf
inc
inc
fidivl
pop
lods
in
dec
or
testb
xchg
cwtl
insb
sbb
test
aad
loope
mov
lods
ljmp
cs
cmc
adc
add
inc
push
leave
sbb
pop
mov
cmp
out
jnp
jnp
push
rcr
decb
cli
ljmp
push
loop
mov
mov
xchg
scas
sbb
rorb
mov
movsl
loopne
mov
sub
sahf
ret
aaa
or
xor
mov
ljmp
movsl
push
iret
sub
sub
sbb
xchg
mov
mov
mov
mov
test
notl
jg
xor
or
jbe
pop
je
in
lahf
data16
push
mov
dec
sbb
adcl
push
imulb
jbe
popf
lret
mov
sbb
pop
adc
dec
jge
or
in
enter
lds
dec
cmpsl
sahf
cltd
stc
push
dec
or
jmp
pop
repz
js
flds
fbld
test
lret
stc
push
inc
insb
sub
add
pop
mov
xor
push
mov
out
test
loop
sub
jnp
mov
insl
and
add
and
les
imul
je
rorl
pop
sbb
and
in
lds
dec
inc
pop
sub
in
xchg
add
aas
outsb
out
movsb
inc
stc
repnz
scas
push
push
push
sub
repnz
call
mov
xorb
and
inc
outsb
inc
cmc
movsl
mov
and
sub
ret
mov
enter
inc
test
inc
insb
jnp,pt
lret
lds
nop
mov
icebp
lahf
mov
and
adc
stc
lret
lahf
test
ss
add
jmp
std
push
pop
cs
inc
push
call
or
icebp
scas
inc
xchg
inc
xchg
cmc
movsl
or
js
loop
std
xor
inc
pop
push
test
xchg
dec
int
adc
sbb
ds
sbb
add
lock
repz
or
jge
ljmp
push
stos
push
loop
inc
stos
lahf
stc
out
cli
pop
xor
call
cmpsb
dec
mov
enter
cmp
std
fstps
div
mov
or
aaa
dec
out
inc
jbe
push
sbb
rcr
int
cld
movsl
clc
cmp
bound
les
fbld
xchg
pop
popf
push
xchg
push
and
in
aas
scas
in
push
jb
mov
btc
mov
cmpsl
sub
and
lea
and
xor
test
outsl
push
in
out
push
pop
inc
mov
sub
add
popa
mov
mov
cmpsb
daa
scas
movb
inc
mov
xchg
test
cmp
jp
mov
push
js
insl
xor
movsl
gs
inc
fdiv
cmp
inc
sti
mov
aam
cmp
pop
test
or
dec
loop
pop
cmp
outsb
fisubs
mov
mov
fsub
sbb
es
xor
jnp
and
lcall
dec
sbb
imul
into
inc
enter
ds
and
push
shlb
push
cmc
adc
dec
iret
aaa
in
mul
jo
xchg
push
shr
arpl
and
and
cmpsl
mov
fidivrs
adc
jl
push
test
xlat
mov
and
mov
dec
or
outsb
push
inc
clc
aam
subl
mov
push
xor
dec
push
adc
loop
repnz
mov
sub
sbb
push
pop
mov
fimull
pushf
mov
ja
xor
popa
shl
push
mov
pop
sbb
ds
mov
mov
stos
ret
adc
pop
xor
arpl
loop
repnz
lods
jg
subl
xchg
in
xor
in
shrl
in
or
lods
mov
sbb
nop
pop
js
movsb
scas
cmpsl
xor
fwait
arpl
jbe
scas
sar
in
sub
stc
push
insl
and
adcb
inc
xchg
notl
jns
push
sbb
lds
lcall
jmp
push
pop
jnp
imul
add
arpl
jg
mov
dec
mov
pop
mov
iret
mov
pop
jns
sar
loop
mov
dec
fists
dec
arpl
daa
mov
lods
gs
or
les
push
and
shlb
les
lea
pop
dec
or
inc
jp
inc
sbbl
dec
cwtd
lods
adc
ja
test
and
adc
or
mov
add
mov
loop,pn
jne
insl
lods
insb
mov
pop
iret
mov
dec
mov
popa
sbb
jge
jnp
mov
lds
gs
pop
in
idivb
out
mov
orb
call
adc
pop
sub
fnstsw
lock
mov
pushf
xchg
jp
pop
cmpsb
addb
inc
loope
mov
aaa
add
shll
aas
mov
mov
push
cwtl
out
xchg
push
pop
xorb
xor
push
iret
mov
cmp
dec
cmp
xor
push
mov
jne
ss
out
xchg
pop
cmp
sbb
imul
push
decb
je
jb
inc
lahf
cmp
orb
jnp
rorl
mov
pop
push
xchg
xchg
or
jno
mov
jmp
fsin
push
mov
xchg
out
jle
sbb
ja
xchg
xor
mov
adc
jmp
ret
xchg
cmp
repnz
orb
cld
imul
push
lods
push
fs
dec
xor
xchg
push
push
inc
lcall
dec
gs
xor
in
jae
cmpsl
clc
pusha
jne
jnp
jbe
inc
mov
lret
inc
mov
dec
idiv
push
xor
jle
and
xchg
das
cmpb
sarb
mov
cmp
mov
subl
push
jae
repz
pop
inc
xor
xor
sbb
jno
ljmp
mov
dec
push
loop
cmpb
jge,pt
pop
imul
add
shrl
mov
pop
out
enter
ret
jl
xchg
sbb
xchg
sahf
push
lock
cwtl
mov
inc
mov
cmp
imul
jle
das
int3
inc
call
pop
pop
std
xchg
fmull
jecxz
push
jge
mov
fistps
andl
fcomps
jge
or
sbb
sbb
stc
cmpsl
mov
insl
xchg
push
sbb
lahf
dec
lds
cmp
out
ficoms
and
ds
pop
shrb
popa
ret
inc
stos
xchg
mov
dec
jne
cli
mov
xchg
leave
push
fildll
dec
jo
xchg
jno
inc
lret
add
xor
loope
andb
sti
sub
loopne
add
jbe
xor
fistps
lret
stos
and
jge
mov
mov
push
sti
test
es
psubusw
shrl
cmp
cltd
jmp
mov
or
inc
push
lock
or
dec
mov
popf
add
xchg
into
sub
into
push
enter
out
ljmp
sbb
gs
out
push
jae
aas
daa
out
adc
nop
jecxz
inc
inc
xchg
loop
negb
xchg
dec
xchg
adc
lea
push
lds
fnstenv
xorb
xchg
vsubps
mov
pop
out
pop
fdivrs
add
paddw
cmp
mov
jge
sahf
sub
jecxz
pusha
ja
fstps
test
inc
out
pop
add
dec
inc
mov
loope
or
lock
in
cmp
jns,pn
ficoml
or
or
push
hlt
inc
loop
shrl
push
jmp
push
imul
sti
shrb
fisttpll
stos
sti
cmc
mov
mov
jg
rclb
out
adc
loope
dec
push
dec
mov
inc
mov
dec
mov
xchg
mov
push
cli
pop
mov
fstpl
sbb
mov
lea
bound
popa
push
cmpsl
xor
sub
fildll
jecxz
and
sub
test
push
enter
mov
lea
and
test
arpl
scas
pop
jo
pop
gs
nop
or
inc
mov
or
lods
mov
in
adc
or
rorl
jb
sub
fcompl
ret
stc
xchg
mov
pop
mov
jns
das
adc
fmull
jecxz
fidivrs
and
cld
pop
test
bswap
pusha
sub
fdivrs
stos
add
lcall
ds
sbb
xchg
push
push
mov
jg
call
loopne
shll
les
rcll
sbb
fstl
data16
mulb
mov
push
testb
xor
call
inc
inc
push
f2xm1
add
jmp
adc
push
ret
jno
push
sbbl
leave
ret
les
pop
xchg
lods
call
mov
test
pop
sbb
pusha
out
es
out
or
hlt
aaa
mov
cwtl
xor
mov
mov
insb
mov
cmpsb
xor
loope
ss
cld
sbb
in
xor
push
lea
hlt
inc
add
les
xchg
cli
xchg
xchg
insb
sub
push
sahf
jbe
out
pop
scas
cs
inc
in
sbb
ds
int
sub
xor
cmpsb
add
je
push
xor
inc
cmc
rcll
cmp
loop
jp
pushf
inc
ret
int
dec
loop
mov
fsub
shlb
jmp
filds
push
jge
adc
repz
xchg
jg
std
ficompl
add
and
or
pop
lods
inc
in
and
push
and
mov
cltd
cltd
push
in
insl
adc
xor
pushf
call
cmc
ljmp
mov
out
ds
xor
rorb
vunpcklps
jbe
pop
lock
nop
cmp
jo
ja
les
sbb
lods
adc
pop
mov
incl
dec
dec
lods
enter
ret
outsl
dec
ss
mov
outsb
fstl
add
inc
pop
mov
aad
mov
stos
jge
cmpsb
loop
aam
sbb
je
daa
cmpl
sbb
mov
xor
jmp
xchg
repz
lods
adc
scas
pop
sub
add
mov
fcom
notl
cmp
adc
int3
scas
pop
xchg
lea
dec
cmpsl
add
shlb
adcl
sbb
dec
fildl
jne
mov
cli
gs
ja
leave
mov
inc
out
cmpsl
pop
repnz
addr16
insl
mov
gs
lcall
mov
mov
jns
adc
fsts
js
ljmp
add
imul
xchg
sbb
mov
and
mov
lret
jmp
jns
pop
cmp
mov
jne
outsb
push
inc
rclb
jne
add
adc
outsb
mov
jnp
hlt
fldenv
ja
and
push
xlat
jge
stos
pusha
and
inc
xlat
xchg
int3
shll
shlb
sahf
xlat
repnz
mov
lods
addr16
mov
scas
das
xchg
mov
in
cltd
push
jecxz
push
xlat
fwait
or
out
or
push
popf
mov
push
movsl
xlat
lods
push
add
rcll
cltd
jg
imul
pop
inc
inc
data16
fiaddl
fs
add
jae
sbb
mov
push
sbb
jl
adc
ja
outsb
cmp
testb
into
sbb
cmp
jo
sti
jb
clc
call
addr16
mov
jnp
mov
outsb
xor
into
inc
inc
pop
aas
push
xchg
xchg
insb
cmp
ljmp
or
sub
jecxz
test
out
dec
add
mov
cmp
in
push
leave
adc
sbb
repnz
pop
call
cmpsb
addl
fmul
push
loop
jae
mov
popa
fisubrs
cwtl
addr16
mov
jle
fldenv
ret
pop
les
xchg
sub
mov
push
test
mov
stos
xchg
cmp
mov
add
sub
cwtl
aas
push
comiss
sbb
and
mov
test
lret
out
out
icebp
jl
sub
stc
fcmovnu
call
pop
int3
movsl
ja
cmp
mov
mov
xchg
cmpsb
mov
nop
adc
loop
test
adc
add
xor
push
adc
insb
loopne
repz
add
fs
jne
aaa
adc
xchg
ds
mov
and
shl
repnz
add
out
mov
pop
stos
mov
bound
inc
mov
jge
pop
sbb
push
gs
xchg
ljmp
cs
pop
push
cwtl
pop
popa
iret
xor
inc
mov
mov
repnz
cmp
mov
mov
lret
xchg
scas
ret
xchg
or
movsb
and
push
push
cmp
jmp
and
lahf
rolb
popa
mov
pop
sete
outsl
rcll
pop
ja
jmp
sbb
dec
cmpsl
jbe
ljmp
int3
mov
push
push
mov
mov
xchg
pop
addr16
mov
aas
push
cmp
mov
fimuls
pop
mov
sbb
les
jge
jmp
pop
pop
mov
int3
or
or
pushf
dec
popf
shrl
in
pop
enter
movsl
jo
ja
pop
mov
push
push
sbb
xor
add
test
sbb
iret
insl
sarl
nop
sbb
sti
aam
sub
fldcw
pop
cmp
mov
inc
fstp
repnz
enter
mov
repz
or
stc
mov
pop
or
push
fnclex
aad
jno
mov
test
jmp
pop
out
mov
rolb
int
sub
hlt
add
sbb
lods
xor
add
sbb
test
pushf
imul
repnz
cmpsb
in
push
call
icebp
leave
ret
xchg
sub
sbb
add
pop
mov
ficompl
jmp
movsb
add
repnz
sbb
mov
ja
lcall
pop
addr16
jnp
or
mov
adc
popa
mov
jbe
stc
mov
pop
int3
lret
push
ljmp
into
lahf
xor
mov
inc
clc
repnz
sub
cltd
mov
movsl
cmp
sbb
push
add
xor
mov
mov
sub
cmp
mov
dec
mov
iret
xor
in
out
push
mov
mov
push
popa
push
mov
test
aad
aaa
dec
sbb
shrb
lahf
aad
pop
orb
insb
mov
or
scas
dec
dec
xor
push
inc
jb
and
mov
dec
fs
mov
mov
out
orl
insb
mov
cmpb
ret
enter
jmp
std
les
mov
add
loope
adc
ss
cmp
ljmp
jg
or
sub
std
fcos
das
mov
stos
add
js
mov
jecxz
pop
lret
mov
add
push
dec
jge
pop
adc
xor
xchg
push
cld
movsb
push
sahf
pop
jge
fwait
hlt
mov
add
cmpl
fdivrl
mov
into
out
roll
lods
lcall
popa
sub
mov
mov
add
inc
hlt
subl
mov
popa
push
rorb
imul
rorb
scas
pop
repz
and
mov
lret
push
xchg
roll
and
add
inc
cmc
int
sub
jb
sbb
inc
enter
and
xchg
mov
xchg
mov
popf
xor
addl
xchg
test
nop
fwait
lods
inc
stos
js
mov
fimuls
push
fs
pop
fwait
push
leave
sub
testb
sub
and
jl
jmp
fwait
push
leave
ret
mov
int3
dec
push
adc
test
add
outsl
push
and
push
imul
xor
mov
leave
jp
addb
ljmp
enter
lds
mov
repnz
data16
andb
xor
scas
pop
ffree
mov
enter
lods
les
aam
and
ret
inc
add
adc
rcr
mov
popf
out
push
int
ret
dec
mov
dec
cmp
insl
loope
push
les
ja
pop
pop
bound
xchg
sbb
dec
xchg
jb
ljmp
ret
scas
lret
shrw
mov
mov
lret
aas
or
les
and
cmpsl
lret
icebp
sub
call
das
dec
add
dec
mov
mov
stc
mov
fadds
lret
mov
cs
cs
ficoms
adc
push
dec
mov
aad
mov
cmpsb
mov
sub
pop
aaa
cmc
or
add
out
cmp
inc
notl
mov
inc
push
sbb
lcall
out
in
mov
mov
gs
or
dec
jb
icebp
xchg
xor
insl
xchg
roll
je
jg
cwtl
in
or
jl
dec
push
add
sub
cmp
dec
push
and
sbb
icebp
cmpsl
pop
test
in
or
data16
enter
jmp
lret
fucomp
jnp,pn
test
inc
in
cmpsb
bound
xor
cmp
adc
lcall
cmp
mov
pop
cmpsb
push
xor
mov
jns
fcoms
cwtl
xchg
stc
into
sub
xorb
fldcw
fdivl
lods
vzeroupper
jmp
aaa
dec
sbb
stos
and
push
inc
aam
out
popf
ret
mov
jg
dec
stc
adc
in
ljmp
fsubl
mov
sub
ljmp
inc
mov
testl
xchg
and
mov
or
pop
aas
cmpsl
mov
in
mov
mov
push
aad
lods
xchg
xchg
cmp
mov
and
mov
jb
dec
cmpsl
mov
lret
sub
pop
ficomps
xor
xor
or
fsubr
out
movsb
push
imul
fists
addr16
and
std
add
cmpsl
pop
mov
jg
rol
std
shll
sbb
sub
lea
cwtl
pushf
xchg
push
call
fst
subb
pop
pop
xchg
add
mov
js
xor
movsl
cmp
cli
add
add
sub
xchg
sbb
xor
test
xor
scas
mov
insb
mov
leave
test
push
pop
fmull
nop
test
xchg
push
hlt
into
inc
out
dec
dec
outsl
in
mov
ja
push
je
std
jnp
push
inc
mov
and
cmpsl
stos
ret
shrb
retw
movsb
or
in
or
popf
movnti
mov
cmp
into
cmpsl
jmp
or
sub
or
bound
ljmp
mov
negl
call
and
mov
lret
xor
movsl
xchg
or
jge
arpl
fdivrs
loope
or
data16
jg
in
xchg
push
stc
push
popf
sti
cmp
jl
aaa
sbb
imul
cmpsb
sub
scas
push
in
ret
pop
mov
imul
cmp
mov
lea
add
and
jmp
jne
mov
lahf
push
and
dec
jb
jne
fidivs
mov
loopne
add
pop
pop
std
jmp
push
xchg
cli
outsl
xlat
sub
adc
sbb
cmp
sub
pop
divb
xchg
push
stc
adc
fdivs
push
test
xor
adc
loope
jg
fiadds
jge
andb
aad
clc
ja
dec
jne
aas
pop
popf
shlb
rcll
sbb
pop
shr
out
stc
sub
movsl
jge
push
sbb
cwtl
insl
loopne
pop
push
or
stc
cltd
hlt
call
sbb
and
outsl
fldt
xchg
fsts
in
cmp
pusha
les
testl
stos
push
stos
imul
adc
jo
test
push
push
das
cmpsb
xchg
xchg
inc
inc
pop
mov
pop
fmuls
adcl
sar
bndstx
push
mov
cmp
and
fucomp
add
iret
add
xor
repz
cmp
push
or
and
dec
sbb
pop
scas
insb
xchg
icebp
lock
sub
das
ss
fwait
test
loope
test
inc
loope
jae
xor
lcall
jge
and
sti
repnz
mov
push
fcompl
ficomps
loope
imul
push
rorb
iret
or
inc
and
sbb
and
clc
fwait
jp
push
jp
aad
jl
pop
inc
fistps
shrb
je
add
adc
stos
pop
add
sub
push
xchg
add
jne
sub
jmp
nop
scas
pop
repz
jnp
pop
in
sahf
popf
lret
aas
sahf
push
gs
ret
push
jecxz
push
fisttpll
fcmovb
and
test
mov
pop
dec
fildll
rcll
test
jne
loop
aas
notb
cmp
jne
push
sahf
lahf
in
setle
loopne
stc
aad
lds
sahf
icebp
sbb
sub
cltd
sub
orb
fildl
shrl
arpl
fildl
leave
dec
loopne
and
sbb
sar
jns
fistl
stos
repz
insb
push
sti
aas
data16
jmp
pop
fcomps
bound
mov
lret
dec
inc
imulb
xchg
into
mov
jne
or
jae
pop
mov
dec
fmuls
mov
test
jbe
or
adc
mov
jb
lods
movsb
mov
fistl
lock
lea
mov
lahf
mov
loope
fisubrs
sbb
fwait
gs
jecxz
or
mov
mov
inc
lcall
or
xor
imulb
sbb
iret
cs
mov
xchg
xorb
sub
dec
mov
adc
cmpsl
cmp
inc
pop
and
sbb
cmpsl
cld
sub
daa
push
xor
sub
cmc
add
notb
mov
mov
or
loopne
lea
popf
scas
cmp
dec
pop
jo
idivb
or
test
lods
ss
cld
addb
push
std
sub
or
dec
mov
iret
andl
in
inc
in
int
dec
mov
rcrl
pop
pop
pop
sbb
xlat
sub
cwtl
cmp
push
or
scas
push
outsb
inc
icebp
stos
addb
and
sub
sub
jl
and
push
xor
jmp
cmp
mov
outsb
xor
ljmp
adc
sti
sub
lods
or
mov
push
and
clc
sbb
sub
insl
shlb
filds
pop
test
pop
add
out
lret
and
aas
or
out
sbb
inc
ljmp
pop
xchg
jae
mulb
mov
push
cmpsl
xor
inc
loope
imul
add
jae
push
xchg
add
adc
out
lds
mov
xor
pop
pop
push
sub
sbb
inc
loope
into
mov
lods
jecxz
adc
cmp
inc
call
fidivrl
jle
cmp
mov
mulb
jns
or
push
dec
xor
outsb
stos
adc
stc
ret
rorb
dec
pop
xor
stc
jo
pop
icebp
insl
mov
ds
nop
cwtl
jp
gs
jecxz
xor
mov
test
cmpsb
sbb
mov
inc
dec
mov
test
mov
adc
push
and
sub
mov
aam
cmc
mov
scas
adc
pop
data16
mov
movsl
inc
pop
sbb
push
xchg
fwait
dec
jp
stos
rclb
test
lods
stos
movsb
adc
mov
daa
test
jmp
and
dec
sbb
into
inc
push
xchg
ja
and
mov
lahf
imul
cltd
add
or
mov
sbb
xchg
mov
xchg
das
jecxz
inc
pop
or
ja
pop
jb
adc
into
cmc
or
cltd
out
leave
sbb
mov
fucomp
lahf
in
fsubs
sub
scas
leave
dec
cli
cltd
push
mov
fcmovu
jp
lahf
mov
ret
popa
push
lcall
adc
cs
mov
nop
lds
sub
lds
push
pop
clc
out
sub
add
xchg
loopne
imul
mov
sbb
inc
call
cmpl
in
sti
leave
cmpsl
xchg
int
js
mov
dec
or
cmp
pop
call
rcrb
orb
cld
inc
cmpsl
icebp
xlat
arpl
dec
fdivr
pop
mov
test
sub
fs
xor
mov
sahf
clc
into
stos
jge
std
push
mov
xchg
add
xor
sub
mov
loope
pusha
pop
adc
pop
int
cmpsb
lods
pusha
push
cs
xchg
jle
sub
pop
pop
sbb
xor
xor
lods
mov
dec
cmc
mov
jnp
dec
xor
pop
popf
inc
or
nop
or
clc
das
xchg
dec
lahf
movsb
gs
test
inc
mov
outsl
cmpsb
xchg
clc
and
ss
pop
dec
mov
and
aas
mov
sbb
out
mov
xor
jg
ds
sbb
les
cmpsl
fcmovnbe
inc
xchg
push
sarb
mov
or
push
mov
sbb
bound
mov
sbb
movsb
and
jp
cmp
cmp
aam
out
into
nop
pop
lret
and
jns
faddl
imul
mov
dec
dec
xor
xor
mov
push
sub
das
lock
push
and
push
out
ja
dec
and
dec
dec
out
jns
jmp
mov
mov
mov
outsb
sub
rcrl
lret
cltd
push
loopne
pop
rol
lret
outsb
aaa
dec
push
sub
mov
cmp
mov
mov
test
ds
xor
movsl
clc
cmpsb
movl
cmpl
insl
repnz
add
push
mov
add
fdivs
test
movsl
lods
xor
dec
pop
nop
rorb
adc
mov
dec
mov
fnstsw
cld
add
push
mov
adc
xor
mov
xlat
in
fdivrs
push
stos
mov
jns
arpl
daa
mull
inc
add
cmpb
push
cmpw
jl
dec
out
adc
mov
movsb
and
add
cmp
jl
cmp
lret
jnp
sahf
push
xchg
jnp
add
xchg
or
hlt
mov
stos
mov
pop
es
loope
leave
es
out
inc
rcrl
iret
popa
scas
push
inc
mov
nop
stos
or
lcall
pop
pop
pushf
shll
aaa
mov
sarb
sbb
mov
push
pop
xchg
xchg
aam
std
stos
xchg
pop
mov
jo
decl
stos
adc
push
popa
cmp
in
mov
mov
ficoml
mov
or
cmp
les
insl
repz
mov
or
sbb
push
insl
dec
cmp
in
mov
mov
popa
cmpsl
mov
lea
mov
push
xchg
das
adc
pop
repnz
adc
cmpsl
fs
es
jle
out
jmp
sbb
mov
push
rorb
jno
das
ret
in
xor
popf
or
mov
popf
fstpt
out
gs
cltd
into
loop
insl
js
lds
test
push
std
addr16
xchg
pop
popf
imul
push
stc
mov
jnp
adc
popf
inc
push
aaa
pop
add
jno
mov
pusha
jb
shll
sbb
rcrl
push
int3
dec
outsl
movsl
inc
movsb
movsb
fdiv
mov
insl
aas
imul
test
jnp
test
mov
xor
in
add
std
sub
inc
xchg
jmp
adc
test
fwait
cmp
add
push
cld
add
subl
lds
sbb
in
inc
jns
out
stc
pop
pop
and
popa
cmpsb
sbb
lret
sahf
pop
push
jbe
cmpsb
push
push
mov
and
in
ja
push
lcall
mov
push
mov
call
lock
popl
movsb
xor
dec
push
test
xchg
jecxz
mov
pop
push
sbb
mov
insl
push
dec
pop
in
fwait
push
inc
clc
fcoms
insl
ret
mov
jbe
lahf
nop
or
adcb
aas
arpl
lods
lret
pop
inc
jne
sbb
xchg
addr16
xor
cmp
popf
testb
leavew
jp
aaa
mov
and
add
jg
in
es
adc
mov
sbb
mov
fnstsw
dec
addb
movsl
repnz
jbe
inc
test
enter
push
add
jo
push
push
inc
movsb
inc
mov
std
bound
inc
mov
push
sub
dec
and
sbb
scas
push
sub
mov
cs
and
dec
inc
dec
and
fldl
je
loope
jb
or
inc
lret
pop
insb
sub
push
inc
dec
in
xchg
movsb
mov
mov
sbb
dec
sbb
aas
into
test
jl
aaa
insb
jl
lret
push
lcall
rol
jb
decb
out
leave
popa
dec
leave
imul
push
jmp
out
and
sub
mov
or
xchg
cmp
popa
dec
jmp
jae
bound
movsb
xchg
mov
sbb
loop
add
mov
adc
test
cmp
fwait
mov
data16
jo
jmp
inc
mov
imul
jge
popf
mov
inc
insb
jo
pop
add
or
daa
ljmp
test
aas
pop
mov
arpl
lret
stos
mov
nop
mov
and
pop
mov
mov
std
pushf
imul
push
pop
test
fwait
adc
mov
adc
sbbb
sub
ret
mov
movb
add
ljmp
push
mov
daa
insl
jae
jge
stos
mov
inc
cmp
mov
movsl
int
ret
icebp
sbb
or
dec
int
sub
pop
cmpsb
dec
cmpsl
js
xor
popa
cmp
jnp
ds
mov
pop
lds
mov
icebp
test
sbb
movsb
xor
dec
push
adc
add
and
mov
in
loop
es
xor
mov
adc
xchg
stos
or
icebp
rorl
push
push
push
lds
xlat
xchg
sbb
fcompp
js
lock
lret
mov
xchg
xchg
dec
rolb
sub
inc
mov
in
xor
out
ds
jo
fs
jmp
mov
mov
jge
imul
aas
addr16
stos
mov
shl
xchg
out
shl
pop
insb
aas
cmp
cmpsb
cmp
sub
cmpsb
fs
dec
es
push
stc
fwait
mov
xor
dec
ltr
or
nop
shrl
shll
jb
jbe
repnz
inc
fmuls
xchg
xor
jno
mov
sub
jo
xchg
rolb
outsl
imul
fnstenv
int3
movsl
mov
mov
mov
dec
loopne
cmpsl
cmpsl
dec
in
or
sub
shll
stos
aam
add
mov
addr16
in
shrb
hlt
pop
psraw
nop
test
aaa
pminsw
andl
mov
xchg
pop
js
popf
ja
arpl
jb,pt
ja
call
mov
rorb
stos
mov
push
repnz
xchg
ret
fnsave
mov
jecxz
pop
pop
stos
pop
xor
mov
test
xlat
sti
mov
sbb
cmpl
gs
lods
jge
js
fidivs
sbb
adc
lret
inc
aas
xchg
insl
dec
xchg
xor
push
dec
mov
loopne
inc
test
adc
sub
mov
adc
and
in
mov
stos
jle
shl
pop
mov
out
cmc
repnz
or
mov
ret
push
mov
pop
pop
inc
push
jno
fstl
mov
imul
leave
sub
insl
ljmp
inc
push
add
mov
add
and
ja
jle
outsl
push
cmpsb
push
push
or
push
or
and
pop
frstor
mov
ds
sbb
push
cmp
hlt
or
adc
sahf
inc
popa
fnstsw
sub
dec
dec
shr
dec
nop
jp
outsb
push
mov
rol
or
xor
inc
or
fstl
mov
push
int3
mov
pushf
mov
cmp
pusha
popa
pop
or
mov
lds
loope
dec
add
lahf
in
or
fs
xchg
loope
pop
fwait
into
inc
or
addr16
xchg
add
pop
sub
inc
loopne
xchg
nop
pop
fbstp
scas
scas
test
xor
mov
dec
sbb
xchg
dec
xchg
mov
ljmp
lret
add
push
and
sbbb
jbe
cmpsl
jge
hlt
or
xor
xchg
pop
push
jb
rcl
lock
loope
lret
mov
inc
mov
mov
ja
jmp
dec
mov
js
add
fidivs
xor
xor
add
xchg
clc
xchg
pop
loope
xorb
pop
mov
xor
push
pop
mov
pop
outsb
loopne
in
pusha
mov
fldcw
xor
movsb
ds
das
pop
pop
shll
rclb
adc
popa
out
xor
or
call
dec
dec
inc
pop
dec
mov
xchg
push
fwait
outsl
inc
addr16
popf
inc
push
es
push
jmp
movsb
lcall
cltd
add
mov
jl
test
cmp
cmp
xor
sub
inc
xchg
or
cmp
arpl
mov
and
dec
jne
pushf
xlat
or
dec
lret
cltd
notb
push
pop
sub
mov
lcall
jo
push
cli
sbb
repz
std
test
add
data16
pop
pop
mov
and
add
outsb
jbe
inc
sub
pop
push
movsl
bound
cmp
ljmp
sahf
rcrb
adc
ror
and
xchg
inc
lea
test
push
out
in
test
xchg
push
mov
repnz
adc
rcrb
les
adc
mov
mov
loopne
inc
fyl2xp1
pop
ds
test
aam
push
cs
mov
movsb
mov
adc
cmc
call
pop
rorb
sbb
ficompl
pop
loopne
inc
es
sub
or
cwtl
insl
pusha
test
std
mov
and
inc
repz
adc
jp
mov
sbb
xlat
xor
dec
cmp
sbb
pop
cmpsb
and
mov
cmp
cmp
push
mov
inc
and
and
rcll
cmp
rorb
xorb
jne
out
dec
popa
fsts
sbb
fsts
cmpsb
push
adc
jns
stos
mov
inc
pop
cmp
jbe
mov
adc
pop
push
jne
push
dec
xor
jp
lds
mov
lods
jp
out
mov
jecxz
aad
cmp
dec
addr16
cltd
push
cmpsl
std
cmp
dec
insl
cmp
xchg
data16
pusha
mov
push
movsl
sti
cmp
mov
sar
arpl
adc
mov
pop
dec
aas
jnp
xor
jo
mov
sbb
lods
cmpsb
add
arpl
or
cmp
jg
sahf
pop
mov
idiv
pusha
lods
cmp
sahf
add
movsb
clc
stos
in
pushf
mul
jmp
jmp
lods
stos
cmpsl
in
stos
and
lcall
push
insl
in
pop
fwait
push
and
and
inc
nop
inc
push
jns
cmc
js
mov
mov
adc
jle
dec
push
mov
loopne
subb
pop
cmp
cmp
or
xor
push
and
and
or
movsb
cltd
stos
push
inc
xor
adc
add
in
cltd
decl
push
adc
and
jp
punpckhdq
aad
add
xor
lret
sub
push
jo
push
xchg
xchg
sarl
sub
in
mov
scas
fmulp
sub
pop
cmp
lds
xchg
push
push
mov
pcmpgtd
jnp
mov
inc
mov
xchg
jo
insl
xchg
mov
sub
test
mov
pop
sub
fwait
shrl
loop
mov
fbstp
iret
lahf
mov
cmp
jp
mov
push
fstl
or
push
shrl
aaa
fs
mov
inc
pop
cli
jo
sbb
sbb
int
cmp
cmpsl
sub
push
mov
cs
lret
xchg
mov
xor
pop
sti
loop
dec
js
mov
xchg
shll
pop
jo
in
ret
pop
xor
adc
loope
into
rolb
pop
fcmove
or
sbb
pop
pop
sub
roll
xchg
push
sbb
fsubr
fcomip
dec
xchg
mov
out
ret
add
leave
push
decb
push
scas
cltd
cmp
adc
fwait
mov
and
int
sub
mov
xchg
ret
pop
int3
popf
repz
jg
xlat
adc
movsb
hlt
shll
mov
push
roll
outsl
inc
enter
push
mov
jmp
rep
test
jmp
add
dec
rorb
sbb
cmpsb
stc
dec
mov
jns
push
sub
push
or
imulb
test
lret
in
sbb
jle
jnp
dec
lea
add
mov
pop
jae
les
out
shll
push
cwtl
mov
outsb
clc
xor
add
sub
je
insl
cmp
add
or
pop
add
pop
sbb
jnp
fiaddl
or
jmp
popl
inc
es
aam
in
testl
ffreep
mov
int3
or
popf
sub
in
push
popa
or
aad
mov
mov
xlat
cli
leave
mov
enter
and
movsl
fldpi
sahf
mov
or
jg
lahf
lret
insb
mov
sub
popf
fidivs
push
jg
sbb
inc
and
rclb
mov
inc
insl
adc
loope
push
lea
xor
loopne
aam
lcall
dec
data16
insb
loope
xor
lcall
arpl
xchg
add
or
mov
test
cmpl
inc
mov
pop
test
fdivl
shll
mov
and
cwtl
push
jge
push
jmp
insb
and
or
adc
lahf
dec
add
nop
ss
in
sar
out
sbbb
dec
and
mov
mov
pop
pop
out
mov
test
and
cmp
lret
push
adc
inc
repnz
daa
xchg
or
bound
jns
mov
cli
inc
jge
pusha
inc
aam
movsl
xor
and
loope
xor
sub
or
or
incl
loope
stc
jnp
addr16
in
lcall
dec
out
fsubrs
clc
fwait
movsb
cmpsb
lahf
mov
jbe
jecxz
fistps
lds
repnz
aaa
and
push
pop
sbb
or
iret
clc
dec
cmpsl
fcoms
outsl
push
popa
stos
in
xor
rorl
cvtps2pi
xor
inc
pop
cmp
xchg
adc
sahf
lods
push
inc
mov
cwtl
jnp
mov
popa
xor
mov
sar
pop
xor
jb
pop
pop
call
xor
cmp
or
scas
mov
jp
sbb
out
dec
andb
xchg
sub
add
fcom
sbb
gs
xlat
aas
dec
or
or
lret
mov
jmp
sub
cmp
or
mov
stc
inc
adc
nop
xor
jo
pop
decl
lea
sbb
dec
mov
mov
mov
xorb
sub
or
adc
sub
xchg
push
scas
mov
insb
ljmp
jl
jns
adc
popa
or
cld
adc
testl
pop
pop
and
es
jmp
popa
dec
jae
in
out
jle
movsb
xchg
loop
mov
xor
xchg
xor
lret
subb
or
ror
sbb
mov
pop
insl
adc
adc
push
test
xchg
insl
daa
cmp
add
test
orb
cmp
repz
ud2
mov
out
push
dec
xchg
and
loop
fildll
mov
loope
dec
xor
mov
xchg
inc
rolb
imul
mov
jle
js
push
fdivrs
decb
movsl
add
aas
or
sub
clc
cmp
lahf
fwait
outsb
adc
sbb
pop
xchg
pop
or
sbb
imul
jge
adc
cmp
enter
loope
cmp
roll
jmp
fbstp
sbb
popl
mov
cli
mov
pop
dec
or
sti
and
jp
test
movaps
xor
jb
mov
addr16
xchg
hlt
push
adc
push
jnp
cli
fstpl
sub
inc
test
cmp
cmp
imul
jo
or
fsubs
sub
xchg
sbb
pop
jecxz
add
jp
cmp
fcoms
in
adc
sub
cmpsl
xchg
nop
les
repz
mov
sbb
data16
inc
das
scas
lahf
xor
dec
cmpsl
cwtl
lods
into
pushf
cld
sub
sarb
int3
jo
daa
data16
cmp
dec
add
lods
add
pushf
adc
and
inc
jne
xchg
idivl
sbb
addr16
pop
decb
fdivp
and
dec
pop
push
sbb
insb
lcall
inc
pop
inc
or
daa
jae
fsubp
push
gs
xlat
je
repz
mul
pop
cli
add
jne
inc
shll
sub
dec
mov
or
xchg
xor
jns
es
push
pusha
outsl
imul
je
inc
cmp
jp
dec
or
shr
cmp
jnp
xorl
xlat
add
pop
add
addb
inc
dec
cltd
fildll
test
xchg
add
loopne
cmp
repnz
mov
dec
clc
fnstenv
divb
pop
push
bound
cmp
test
mov
pop
pop
mov
stos
pop
xor
sar
pop
sub
xor
lea
push
or
lcall
lret
mov
mov
nop
xor
mov
xchg
cld
aam
std
inc
mov
mov
and
dec
sub
inc
push
lahf
push
dec
adc
hlt
js
jge
call
mov
pop
adc
pop
jg
pop
nop
lcall
sub
dec
rcrl
xchg
mov
cli
fsubrs
mov
jp
push
add
adc
mov
dec
int3
hlt
lds
mov
sub
dec
cmp
fistl
insl
je
les
pop
imul
movsl
pop
xor
or
jg
test
fsubr
mov
mov
and
sub
mov
mov
cli
lret
imul
in
inc
dec
outsl
in
out
xchg
sbb
xchg
in
jge
inc
fiaddl
mov
shll
cmc
mov
mov
int3
adc
and
out
mov
cli
mov
mov
rcrl
pop
repnz
xchg
and
sti
lods
push
mov
cwtl
es
loopne
xchg
cmp
mov
add
inc
and
icebp
ja
loop
cmpsb
sahf
lea
pop
loopne
push
outsb
add
call
es
mov
add
and
inc
ds
lods
js
loope
push
add
popa
add
in
fbld
inc
dec
jb
sbb
fsubl
push
cli
mov
and
dec
das
xlat
mov
add
xor
cmp
cmp
add
loop
sbb
push
mov
jbe
jmp
repz
inc
pop
mov
int3
and
mov
dec
mov
inc
cmp
jo
mov
fidivl
xchg
mov
sbb
fistpll
loop
mov
and
sbb
adc
pop
or
sbb
xchg
pop
sub
aad
mov
mov
mov
iret
xchg
int
mov
add
in
sahf
inc
sbb
pushf
cli
sbb
mov
test
dec
mov
dec
sarb
fiaddl
fs
aam
nop
sbb
lods
out
cwtl
mov
or
jp
mov
insl
push
push
fptan
ja
push
mov
fistl
mov
into
cwtl
fwait
cli
sub
stos
rcrb
in
inc
pop
lret
in
xchg
xchg
pop
push
test
xchg
pushf
or
push
arpl
jb
aam
subb
jb
outsl
inc
movsb
push
push
push
lret
and
ja
hlt
std
insb
pop
filds
pop
cli
lods
push
lock
cmp
xlat
aas
xchg
push
mov
out
js
les
popa
int
test
les
push
mov
push
push
clc
sub
hlt
test
movsb
dec
pop
inc
test
lods
rorl
adc
and
mov
adc
ret
pushf
insl
sub
addr16
outsl
into
in
into
mov
adc
and
adc
int
arpl
xlat
in
sbb
push
sbb
dec
mov
sbb
push
idivl
jp
mov
jg
test
aaa
fdivrs
dec
mov
add
imul
jns
sbb
rorl
mov
ja
xchg
push
leave
push
or
mov
dec
inc
sub
or
testb
and
aad
jnp
daa
out
mov
es
push
loopne
aam
jbe
adc
sbb
jge
dec
mov
jb
pop
hlt
and
xor
aam
repz
sub
mov
cmp
jbe
inc
cwtl
ret
in
jno
lea
hlt
sbb
push
lcall
inc
mov
push
test
jno
into
sar
and
or
test
iret
push
mov
jnp
push
cmpsb
pop
pop
jmp
jg
adc
aam
idiv
push
mov
clc
jo
push
mov
mov
rcl
add
enter
add
or
jl
and
jle
out
ficoms
and
jb
jo
add
add
sbb
dec
xor
jo
jnp
xor
or
dec
pop
mov
mov
cli
dec
outsb
add
adc
mov
js
mov
dec
jp
cmp
sub
outsb
push
inc
push
dec
cwtl
jg
es
adc
cs
jl
xlat
jae
mov
imul
ss
out
inc
cli
mov
or
aam
repnz
pop
in
cmpsl
fsts
xchg
push
xchg
inc
or
and
mov
lods
sti
push
pop
cmp
or
je
popf
lock
xor
fnstcw
push
sti
dec
nop
jns
inc
adc
mov
rorb
push
and
test
mov
xlat
and
push
adc
mov
cmpsl
pushf
xor
stc
cmp
xchg
mov
fs
jl
loopne
adc
fdivl
mov
bt
jle
sarb
aad
mov
shrl
notl
push
xchg
stos
and
lahf
adc
mov
and
inc
movsb
mov
xchg
sbb
jl
flds
sub
inc
adc
mov
or
shll
cs
jle
xchg
xchg
cli
ds
xor
outsl
into
or
orb
xor
and
in
call
pusha
in
insb
or
jno
jb
enter
push
jmp
xor
mov
into
inc
jno
inc
and
scas
rorb
mov
inc
jle
dec
xor
bound
sbb
cmp
insb
sbb
pop
and
mov
sbb
mov
je
loop
xchg
sub
add
xchg
shrl
fs
fsubrp
cmc
hlt
mov
scas
imul
mov
insb
ja
mov
and
pop
jl
bound
mov
stc
mov
pop
cwtl
mov
nop
cwtl
xchg
arpl
mov
movsl
jle
jmp
cmpb
rolb
pushf
xchg
repnz
jns
mov
dec
pop
or
nop
call
and
loope
addr16
imull
lds
aaa
popa
arpl
and
jmp
mov
icebp
sbb
xchg
mov
mov
xlat
inc
ljmp
add
pusha
lock
pop
les
dec
lahf
leave
into
mov
or
push
movb
les
cmpsl
mov
bound
cmpsb
jp
mov
push
std
adc
pop
imul
ror
out
inc
mov
inc
test
jb
lcall
inc
stos
pop
and
aaa
addl
add
add
out
pop
in
mov
sbbl
fpatan
aad
mov
dec
movsl
sbb
pop
into
rcr
pop
mov
fdiv
cmp
xchg
shl
js
mov
mov
test
add
adcb
call
icebp
movsb
sub
pop
or
xor
mov
pushf
ret
push
repz
mov
shll
loopne
cmp
imul
add
test
cmp
push
mov
dec
fs
loop
mov
and
push
pop
mov
or
pop
pop
xchg
or
aas
faddl
push
js
cmpl
lahf
mov
push
subb
jl
insb
popa
cmp
enter
push
js
rcl
cmpl
mov
jmp
call
pushf
shrl
mov
mov
mov
mov
jecxz
rorb
das
xchg
loopne
pop
int
arpl
cmp
mov
test
cli
push
jmp
es
jl
sub
push
sbb
daa
mull
sbb
xchg
cld
popf
inc
fists
jmp
jnp
hlt
xchg
mov
mov
jns
dec
sbb
dec
cmp
mov
jg
lea
cmpsl
push
jl
stos
pusha
enter
mov
mov
jle
scas
jno
jno
xchg
lret
ss
jno
insl
ret
pop
shrb
adc
sub
xor
jl
int3
push
sub
push
lock
int
sub
fists
in
push
or
push
stos
mov
jno
je
ret
dec
add
mov
repz
dec
cltd
sbb
adc
in
addr16
pop
rolb
or
orl
and
dec
xchg
repnz
stos
mov
jmp
mov
bnd
aam
adc
adc
lret
mov
fcoml
in
in
and
sub
mov
pop
pop
push
aas
scas
shlb
xchg
jp
cld
mov
pop
popa
jle
cmpsb
adc
aad
clc
add
shll
jbe
and
inc
icebp
stc
xor
jo
jo
mov
mov
popf
stc
push
pushf
adc
lock
mov
and
jg
adcb
mov
jp
cmp
sbb
aad
sub
lahf
jp
mov
psrld
push
jp
push
jge
loope
addl
xlat
mov
lods
add
imul
stos
cmp
lods
lods
push
lea
add
out
sbb
xlat
xchg
data16
scas
fs
arpl
shl
or
adc
inc
mov
and
shlb
pop
dec
mov
stos
dec
pop
sbb
cld
in
jbe
xchg
xor
addr16
xchg
lret
in
sbb
add
ljmp
in
shlb
outsb
test
adc
mov
push
or
decl
xlat
rcr
aam
dec
jl
in
xchg
ret
inc
cmp
lret
lahf
dec
sub
test
xor
leave
pop
icebp
mov
xor
les
cmp
je
bound
dec
stos
mulb
mov
pop
iret
lods
int
jbe
mov
or
jno
clc
add
xchg
int3
cmp
dec
rcrl
jbe
cmp
loope
icebp
push
sub
jnp
sub
arpl
hlt
insb
xchg
inc
and
sti
imul
jg
imul
das
loopnew
and
mov
add
gs
dec
lahf
jp
xchg
pop
mov
jmp
arpl
ret
mov
xchg
lret
jl
xor
mov
testb
mov
orl
dec
addr16
dec
sub
mov
xchg
aas
adc
or
repz
push
mov
dec
push
xchg
pop
inc
lea
or
mov
jle
aad
add
push
jecxz
add
or
mov
mov
lret
loope
cmp
lret
and
dec
rclb
stos
in
lea
rclb
popa
or
clc
mov
sahf
aaa
aas
ss
sbb
jae
mov
push
and
lea
or
outsb
and
sbb
test
xor
jns
into
and
sahf
sti
aaa
lock
bound
aad
enter
xchg
xchg
push
jne
leave
mov
push
test
jmp
insb
call
jmp
out
dec
in
in
adc
negb
cmp
push
psubb
xchg
sbb
push
xor
jae
push
add
in
dec
jnp
insl
sbb
pop
jge
add
iret
stos
xor
movsb
cld
push
mov
scas
les
push
push
addl
in
loop
lret
and
in
add
adc
test
ret
nop
out
lea
sub
jmp
jae
testl
inc
and
pop
cmc
jne
cmpsl
mov
jge
into
int3
fnsave
rclb
push
xor
inc
insb
repz
jecxz,pn
jae
pushf
std
add
rcl
inc
shr
sub
sbb
push
push
lods
arpl
inc
jb
mov
cmp
xchg
nop
or
add
out
sti
push
push
adcb
jecxz
jge
jmp
popf
and
dec
inc
push
lea
mov
mov
dec
xchg
jmp
inc
ljmp
popa
sbbb
and
ja
aam
pushl
fldenv
xchg
and
xor
and
jmp
xchg
out
dec
jg
test
xor
mov
sti
imul
sub
imul
enter
insb
pop
and
movsl
mov
lcall
mov
inc
add
inc
push
xchg
push
jle
fidivs
sub
out
inc
xorb
pop
xor
add
inc
mov
cmp
xor
jp
lret
imul
rorb
data16
cmp
mov
loop
rol
inc
or
mov
cltd
adc
cmp
or
or
outsl
loopne
mov
sbb
sbb
stos
popa
mov
fcompl
lcall
dec
fildll
fcoms
popf
mov
and
adc
into
lds
shlb
push
sbb
mov
cmp
out
mov
dec
pop
jle
hlt
dec
and
sub
and
aas
or
bound
das
lcall
or
xchg
xchg
push
lcall
dec
xchg
je
dec
lahf
mov
imul
or
in
cmp
add
int
cmpsl
xchg
jns
mull
idivl
mov
push
mov
in
test
mov
mov
sub
jge
dec
pop
lock
adc
not
sti
push
mov
inc
dec
sbb
lret
iret
inc
cmc
ret
cli
daa
out
add
cmp
xchg
dec
cmc
int3
mov
push
jecxz
ljmp
loopne
lods
mov
or
lods
push
adc
sbb
pusha
pop
stc
adc
mov
rcrb
dec
int3
pop
pop
add
ret
loop
lret
mov
inc
ja
out
fstl
outsl
das
sbb
xor
movsl
cmc
pop
mov
xor
sub
cmp
js
mov
and
mov
outsl
push
iret
pusha
std
lods
stos
mov
fmull
xor
mov
icebp
repnz
sbb
cmp
mov
popf
mov
or
mov
test
stc
mov
pop
cwtl
test
ljmp
outsb
inc
rcr
inc
or
mov
popa
lcall
xor
xchg
mov
loope
je
pop
xchg
repnz
loopne
pop
mov
clc
mov
jl
mov
add
adc
push
sti
hlt
pop
das
mov
push
out
adc
int3
push
cmc
rclb
mov
add
ds
xchg
cld
lds
adc
es
mov
xchg
sub
nop
roll
shlb
jg
addl
inc
adc
jns
and
in
imul
aaa
pop
sahf
cmovp
push
lcall
imul
or
sub
pop
pusha
jmp
inc
or
cmp
lods
popf
cmc
cmp
cs
sbb
scas
jbe
js
sub
or
stc
out
das
sub
or
fdivr
outsb
pop
lahf
adc
mov
dec
hlt
cwtl
push
shlb
repz
lcall
jns
inc
xchg
or
cld
incb
xchg
sti
or
jne
mov
inc
pop
mov
mov
xchg
std
movsl
leave
xchg
dec
movsl
rol
xchg
repz
fidivs
mov
push
mov
aad
dec
cmp
jne
adc
lahf
insl
out
mov
push
cld
pop
stos
pushf
push
mov
shrl
push
lret
cli
add
mov
lods
sbb
mov
sbb
ja
cli
mov
cli
mov
or
xchg
sbb
mov
xchg
adc
add
and
lock
sbb
jecxz
jge
jmp
adc
hlt
dec
cmp
std
mov
ret
stos
repnz
jo
and
jbe
ljmp
enter
in
dec
int
jo
movsb
inc
mov
jns
push
out
notw
pusha
mov
repz
cmp
ss
pop
sbb
mov
rolb
pop
je
mov
mov
lret
mov
xchg
mov
rorl
lds
test
jae
push
add
inc
pop
inc
fsubrl
mov
push
mov
adcl
fldcw
sbb
icebp
fisubrl
mov
jle
adc
je
push
ja
add
lods
fnstcw
lea
repnz
mov
sti
mov
mov
pop
sbb
test
enter
pop
mov
sbb
jae
cld
mov
sbb
sbb
ds
mov
jp
pop
add
dec
mov
clc
fwait
inc
sbb
xchg
cli
andl
or
mov
dec
imul
xchg
mov
int3
sub
cs
je
push
out
lcall
adc
lcall
icebp
pusha
mov
mov
push
push
jbe
mov
dec
pop
fstps
sarb
sbb
rorb
jecxz
mov
pop
cmp
inc
and
jl
pop
call
add
ret
dec
roll
inc
mov
pop
dec
imul
insl
lods
mov
in
shrb
dec
sbbl
push
aad
test
jle
push
inc
pop
xchg
mov
adc
fwait
lods
rclb
stos
inc
stc
inc
sbb
and
sbb
ljmp
in
popa
push
lret
popa
jne
out
pusha
push
rorb
imul
jg
and
cli
sbb
cld
lret
clc
fdiv
push
into
fs
leave
cmp
es
ret
into
mov
sarb
mov
add
ss
mov
ret
adc
lret
sub
mov
mov
mov
pop
jg
xlat
bound
xchg
imul
imul
insl
xor
test
jno
mov
inc
pop
cmpsb
mov
daa
inc
inc
das
sub
lret
sub
scas
cmp
mov
test
popa
push
sub
mov
xchg
pop
push
jmp
jnp
sbb
pminub
les
int3
sbbb
push
and
inc
or
sub
add
mov
cli
gs
outsl
std
popf
sbb
icebp
pop
xchg
sbb
outsl
lahf
es
cltd
push
inc
shr
sbb
imul
mov
scas
inc
loop
fstpt
ljmp
mov
jg
jnp
stc
sbbl
lea
adc
xchg
int3
sub
fxch
mov
hlt
cmp
cmc
mov
xchg
jns
into
ret
push
jg
jge
mov
sti
popa
sbbb
lods
xchg
fisubl
and
add
push
pop
xor
mov
jg
cmp
push
fistpl
mov
adc
sbb
push
or
add
adc
rcrb
push
pushf
mov
mov
sbb
loope
inc
cs
ljmp
cmpsb
out
imul
movsl
and
outsb
cli
cmc
inc
cmp
jle
xor
push
ds
and
pop
test
xor
test
leave
mov
dec
scas
dec
jmp
or
roll
xchg
mov
jne
inc
dec
mov
outsb
pusha
pop
bound
in
aas
cltd
xchg
mov
movsb
mov
push
fistps
test
xor
mov
inc
xor
inc
mull
dec
pop
dec
out
sbb
lcall
mov
pop
fcoml
xchg
icebp
inc
mov
pop
and
push
mov
fdivr
movsl
test
mov
and
xchg
movsl
dec
cld
mov
stc
lcall
into
popa
xchg
loopne
sbb
mov
sti
cmp
lea
sub
jg
jns
cmp
inc
sbb
fs
fcomps
pop
icebp
out
adc
mov
mov
rcrl
xor
jge
fstps
push
dec
xchg
push
jno
rcr
mov
stos
mov
lret
lods
xor
aad
lds
adc
xchg
jns
push
mov
cmp
and
inc
push
cmp
push
and
adc
leave
daa
lcall
int3
jl
cmp
inc
add
es
std
mov
and
bound
dec
push
xchg
sub
dec
add
or
mov
ss
cltd
je
aas
aas
jne
mov
mov
or
fdivrs
cmp
push
sub
or
icebp
dec
mov
sbb
jge
xchg
xchg
mov
mov
in
jnp
and
lcall
repz
inc
sub
sarl
les
mov
mov
mov
cmpb
sbb
mov
pop
sbb
cmp
mov
or
mov
dec
clc
add
cmp
xchg
inc
in
jp
std
xchg
mov
xchg
mov
xor
dec
cmp
loop
inc
adc
mov
rclb
ljmp
adc
add
push
push
lret
or
dec
cmp
and
xchg
dec
fdivrs
int3
push
sbb
loop
push
aam
inc
push
sahf
jp
pop
ja
out
cld
fcmovnb
inc
sbb
mov
rcr
push
xchg
cmp
insb
popa
pop
add
imul
xchg
jns
mov
push
lods
lock
mov
adc
mov
lahf
mov
ficomps
ss
sub
mov
pop
jmp
xchg
shrl
popf
push
lods
sub
push
mov
lret
repnz
loop
pop
ds
mov
insl
les
clc
arpl
jns
dec
and
push
lods
arpl
and
pop
push
add
jle
inc
dec
mov
inc
jo
es
imulb
lods
iret
pusha
jnp
xchg
adc
aam
push
ret
jbe
stos
scas
loop
mov
adc
and
xchg
insb
inc
in
fwait
in
mov
xlat
jle
lds
std
adc
and
xor
ret
pop
xor
lock
push
xor
movsl
out
and
mov
dec
sub
cltd
imul
loop
lods
jnp
fwait
push
test
out
or
inc
js
lahf
pop
adc
push
push
push
in
ds
jle
mov
adc
ret
in
cli
clc
push
sub
dec
data16
fs
inc
xor
ret
cmc
je
mov
add
lock
jno
sahf
xor
fwait
mov
std
push
outsb
jae
cltd
lret
ret
xor
push
test
insb
pop
jp
out
push
mov
repz
xchg
pop
rcll
insl
movsl
pop
loopne
imul
shl
or
out
movsb
or
pop
xchg
sub
sub
and
dec
jns
sbb
fwait
pop
insb
xchg
lret
sub
push
inc
pop
fsubr
jp
out
xchg
rcr
icebp
cmp
ljmp
pop
in
cld
cmp
mov
in
mov
jg
imul
jp
adc
lds
adc
loope
xor
push
out
add
mov
std
pop
or
sub
mov
jno
jo
scas
aaa
xchg
push
fistpll
push
or
fxch
pop
push
pushf
pop
mov
jmp
xchg
fwait
in
aas
mov
mov
push
pop
in
sahf
out
lahf
dec
mov
xor
mov
xor
push
clc
xchg
bnd
test
add
xchg
stos
push
mov
sbb
mov
test
cli
ret
xor
shll
int
cli
adc
xor
mov
xchg
or
mov
rcl
fsubr
gs
pop
hlt
js
jne
inc
std
xor
xlat
sub
aam
push
test
or
pop
mov
jnp
in
mov
or
std
sbb
int
insb
sub
call
sbb
ds
pop
push
mov
dec
ss
dec
and
mov
lods
repz
sub
stos
adc
add
xorb
and
dec
js
xor
std
jge
mov
xor
dec
icebp
ffree
in
cwtl
sahf
pushf
adcb
icebp
call
sbb
loop
fstpt
sub
int
fdivrs
push
adc
mov
sub
out
mov
jecxz
enter
cmc
loope
js
jmp
ja
inc
jne
daa
insb
loope
jne
aaa
dec
divb
nop
gs
fbld
stos
sbb
imul
mov
or
test
pop
imul
and
inc
add
mov
daa
dec
pop
xor
dec
push
push
call
out
outsl
mov
and
in
xchg
mov
and
ret
mov
jle
mov
cld
cmpsl
mov
jb
pop
fisttps
adc
or
mov
loopne
cmp
mov
or
mov
sbb
lea
dec
sub
loopne
mov
adc
es
rcll
arpl
rorl
mov
int3
ret
push
ret
inc
push
pop
push
lret
xchg
mov
inc
loopne
in
sub
push
lret
mov
xor
lahf
int3
add
ficomps
xchg
and
mov
scas
add
hlt
add
imul
and
dec
aam
add
ljmp
stos
or
subl
mov
mov
pop
sahf
sti
hlt
push
popa
pop
daa
cmp
sahf
cmp
pushf
sub
cmp
mov
out
pop
xchg
les
pop
int3
js
and
enter
mov
dec
mov
mov
lahf
out
push
leave
fisubrl
cltd
or
push
dec
cltd
aad
stc
adc
or
es
std
lcall
lock
pushl
cmp
xor
push
pop
mov
mov
xchg
pop
adc
dec
push
aad
cmp
pop
mov
xlat
xor
push
add
stos
lea
xor
mov
sbb
aas
push
das
icebp
jbe
mov
pop
mov
mov
jp
push
inc
sbb
adc
and
mov
sub
add
mov
imull
xchg
and
jo
shrb
mov
mov
mov
outsb
imul
mov
test
hlt
mov
test
pop
pop
jl
cld
std
inc
mov
les
dec
mov
clc
adc
sub
pop
cmpsb
mov
fstps
fidivrs
xor
or
and
lds
sub
seto
mov
xor
lea
popa
adcl
jmp
stc
fisubl
in
aam
stos
pop
xor
cmpsl
clc
out
xchg
xchg
fnstsw
rol
notb
xchg
inc
mov
mov
call
into
push
in
shll
mov
out
jle
sub
mov
push
aad
xor
faddp
jecxz
cwtl
std
add
pop
leave
les
or
cld
xor
rep
mov
loope
outsl
sub
repnz
adc
addr16
arpl
jp
frstor
arpl
filds
xchg
ficoml
mov
pop
dec
fnstenv
stos
into
pop
adc
hlt
mov
add
out
sub
inc
jbe
adc
dec
inc
xchg
cmp
cmp
pop
fsubl
test
lock
xlat
jne
inc
cld
test
adc
mov
xchg
xor
mov
ret
loopne
insl
xchg
inc
into
adcb
xchg
xor
idivb
jae
cltd
std
pop
dec
mov
enter
xchg
cmp
jge
xchg
outsl
in
fldl
mov
cmp
mov
fs
shrb
out
bound
mov
cld
push
pop
aad
cmp
or
jg
xchg
jb
jno
scas
mov
adc
lahf
add
ret
pmulhuw
xor
cmpsl
stc
iret
mov
iret
orl
mov
ret
nop
bswap
jmp
mov
icebp
pop
mov
mov
cwtl
cmp
cmp
mov
mov
and
xor
in
and
jo
loop
mov
dec
jb
jns
cmp
movsl
cmp
repnz
xor
jl
add
movsl
mov
out
mov
xor
adcb
sbb
pop
lods
inc
mov
sbb
jge
aaa
shrl
pop
add
cmp
xor
lea
in
roll
adc
in
or
cwtl
enter
adc
in
mov
dec
stc
ss
in
dec
cmp
mov
mov
hlt
jmp
push
movsb
loopne
mov
imul
inc
pop
sbb
in
jecxz
incl
sarl
and
and
mov
mov
inc
mov
icebp
popf
mov
mov
pop
inc
mov
xor
mov
hlt
loopne
mov
lods
mov
jmp
popa
and
adc
addr16
push
or
cmp
inc
cmc
cmc
subl
fiadds
sbb
inc
icebp
jg
sti
sub
or
sti
nop
mov
loop
jno
stc
insl
sub
jg
xchg
jns
cltd
or
in
std
xchg
lret
fnstenv
cmc
into
fiaddl
and
xlat
inc
enter
inc
mov
lea
xchg
and
dec
arpl
push
mull
fdivr
dec
or
pop
push
cltd
mov
test
lcall
popa
cmp
sbb
and
mov
jg
pusha
dec
mov
lods
mov
sbb
ret
out
xchg
fisttps
jbe
popa
mov
mov
xor
adc
mov
add
fisubrl
testl
sub
test
add
and
dec
xlat
jnp
scas
fadd
mov
xchg
fs
pop
mov
stos
cmpsb
sub
nop
std
test
pusha
xchg
mov
fcmovu
push
xchg
addr16
loop
push
push
jbe
cmp
outsl
sub
cmp
in
sub
or
xchg
sahf
jl
ja
loope
mov
and
add
sbb
repnz
cmp
jle
data16
bound
adc
mov
sti
imul
jb
push
rcll
cmp
scas
push
popf
mov
stc
insl
dec
and
xor
fistl
dec
cmpsb
inc
xor
mov
lock
dec
jnp
int
inc
gs
dec
push
lock
mov
mov
es
in
sbb
add
shlb
adc
fstp
mov
xchg
mov
push
imul
fwait
mov
enter
sub
fisttpll
mov
push
jg
adc
mov
sub
outsb
int
dec
lahf
xchg
sahf
sbb
pop
lds
ja
dec
jecxz
lock
stos
lret
shr
adc
daa
xor
dec
add
push
stos
push
sbb
adc
xchg
ja
cld
mov
jle
mov
scas
jl
shlb
lds
push
jne
imul
shl
xchg
push
xor
in
push
insl
mov
jge
or
cwtl
and
pop
pop
inc
jbe
into
sub
addb
cltd
cltd
mov
js
sahf
and
cli
scas
insb
xchg
or
mov
shll
dec
mov
or
fistl
and
xor
pusha
or
mov
pop
addl
mov
es
and
cltd
repnz
insl
aas
push
sbb
imul
xor
arpl
popa
mov
nop
scas
dec
scas
xchg
xlat
aas
or
loope
test
mov
push
lret
aaa
lds
movsb
jae
adc
insb
cmp
mov
int3
sub
and
mov
leave
bound
hlt
dec
or
fcoms
cltd
push
mov
in
mov
sbb
aaa
and
scas
and
mov
icebp
dec
icebp
iret
test
scas
icebp
inc
sub
pop
loopne
adc
ret
adcb
es
pop
mov
insl
sbb
cmp
popl
xchg
loopne
es
loope
pop
push
and
xchg
xor
int
sahf
adc
push
sar
adc
and
pushf
add
stos
cmc
pop
jb
mov
cs
inc
mov
xchg
lock
out
mov
fwait
xor
xor
fisttps
or
xor
cwtl
mov
fwait
adc
fdivl
outsb
cmp
call
mov
aas
je
jb
cmp
in
sbb
and
mov
mov
cltd
adc
pop
cmp
xchg
adcb
daa
ljmp
mov
in
clc
jp
mov
addr16
imul
aam
std
sub
xchg
inc
pop
outsl
xchg
fisttps
jb
mov
pop
sbb
add
add
inc
xchg
xor
ljmp
add
cmp
xchg
push
pop
push
sub
add
hlt
rorb
pop
lock
jmp
xchg
faddl
sbb
shrl
out
mov
int3
xchg
cltd
push
sub
cmc
jnp
cmp
xor
and
movsb
in
jns
pop
sbb
outsl
mov
mov
repz
out
jne
addl
std
inc
repnz
add
and
xchg
je
cltd
insl
loopne
dec
data16
repnz
mov
jno
xchg
es
mov
sbb
jmp
lock
cmp
push
idivl
gs
xchg
xchg
mov
cltd
and
call
into
hlt
push
push
out
and
cmpsl
into
pop
mov
inc
testl
mov
repz
lret
clc
jns
sarb
cld
sbb
pop
lret
push
mov
mov
jnp
dec
sub
test
mov
pop
cmpsb
xchg
sar
jecxz
and
add
cmp
mov
bound
mov
aaa
sbb
adc
jge
jae
js
hlt
stos
jno
cmp
inc
mov
and
fmull
aaa
mov
shrd
cmpl
out
cmc
and
and
cmpsl
jno
leave
test
shll
out
lahf
ljmp
cmp
scas
sbb
cmp
in
jae
in
lahf
and
mov
jg
mov
cltd
cld
push
cltd
sub
pop
lock
fsubp
repz
xchg
mov
sub
inc
xchg
out
fs
xchg
iret
sub
and
jb
fstpt
cmp
add
jnp
roll
or
lret
sbbb
or
or
mov
jo
adc
push
xchg
addl
or
mov
xor
ror
call
fists
push
addr16
je
xor
pop
inc
dec
dec
fstpl
mov
xlat
out
loopne
sbb
pop
sub
jne
sub
ss
mov
pusha
es
dec
adc
iret
mov
lea
jbe
incb
or
mov
or
cwtl
xchg
pushf
sbb
adc
xchg
pop
sub
mov
outsl
jno
sti
in
fidivrl
ljmp
hlt
pmaxub
insb
push
sbb
adc
loopne
js
test
nop
push
popf
outsl
stos
push
pop
scas
xchg
jno
cltd
test
or
mov
push
popf
andl
insb
shrb
mov
push
push
ljmp
mov
pop
mov
sbb
pop
iret
in
jne
in
stos
andl
loopne
les
repz
movsl
int
mov
inc
out
push
mov
je
sub
pop
adc
mov
jl
repnz
push
fimuls
push
sub
lahf
test
xor
in
push
cmp
or
xchg
sub
jg
mov
lods
test
loopne
add
cs
int3
jecxz
push
cltd
xchg
mulb
xchg
jecxz
xchg
mov
sbb
jb
movsl
inc
les
sub
imul
or
pop
mov
add
out
xor
jns
cmp
hlt
cmp
or
mov
les
xchg
dec
movsl
jge
adc
in
icebp
and
push
cltd
pusha
cmp
jbe
aad
cmpsl
push
orb
arpl
xchg
pusha
enter
jnp
setbe
jmp
push
push
mov
js
aam
stc
cmp
mov
fdivp
push
cmpsl
mov
ds
mov
aam
jg
sti
xor
sub
cwtl
lea
fwait
xorb
int
jg
inc
imul
add
in
xor
ret
das
or
in
orb
shll
popa
mov
sub
pop
pushf
shl
fstl
push
pushl
insb
add
or
cld
pop
and
mov
mov
lods
pop
inc
mov
add
stos
mov
cmc
fpatan
clc
jle
das
inc
push
mov
fcomp
push
sbb
jg
ja
mov
mov
dec
dec
lahf
xchg
jo
repnz
dec
push
pop
xchg
sub
xchg
or
add
cmpsl
ds
pop
in
add
in
sub
in
adc
or
cld
and
sar
js
sbb
xchg
mov
or
call
stc
aaa
push
pop
cli
adc
inc
jge
mov
stos
ret
sub
sti
push
in
int3
imul
and
insl
dec
enter
adc
mov
xchg
dec
sbb
mov
scas
xchg
pop
call
andb
in
dec
xor
jmp
cmp
sbb
adc
dec
in
outsb
and
mov
imul
xchg
sahf
stos
push
cmp
mov
insb
iret
les
jnp
push
mov
lahf
insb
test
mov
repnz
adc
out
sbb
fistpl
adc
push
dec
rcl
xlat
pop
and
mov
aam
xchg
gs
jecxz
jp
jo
xchg
gs
aaa
arpl
aad
mov
jp
dec
fldl
and
jae
inc
add
dec
mov
mov
stos
dec
pushf
xchg
pop
jge
jo
push
jmp
sbb
inc
mov
je
cmp
jnp
pop
dec
daa
pushf
shll
push
jg
repnz
or
in
push
out
jle
xor
jns
addr16
fidivrl
inc
je
mov
add
fidivl
jns
sti
andnps
and
mov
jne
popf
sbb
ret
mov
ljmp
test
xchg
jae
pusha
cmp
mov
lret
dec
mov
std
ds
fnstsw
push
fbld
mov
popf
push
mov
dec
jp
inc
sbb
outsb
out
dec
mov
cmp
lcall
in
pop
bound
jns
mov
in
jmp
push
mov
cwtl
xchg
push
aas
adc
fsub
adc
insl
and
xchg
xchg
in
in
dec
clc
addl
inc
gs
bnd
pushf
mov
sbb
sbb
cld
into
daa
dec
xchg
shlb
jle
cmp
xor
mov
dec
rcl
cld
cmpsl
rcrb
or
mov
mov
test
andl
sub
dec
xchg
add
leave
mov
dec
sbb
sbb
ficoml
mov
or
lahf
into
push
inc
je
inc
or
sub
outsl
pop
enter
inc
cmp
ljmp
pop
mov
jne
push
mov
pop
sbb
out
xor
dec
or
mov
or
sarb
imul
in
pop
push
pusha
lcall
in
das
push
or
test
cmp
test
call
out
in
mov
loopne
sarl
stc
pop
in
outsb
sbb
lret
jecxz
mov
int3
adc
fists
dec
aam
lahf
negl
or
pop
xchg
enter
roll
adc
into
pop
jl
fs
lahf
sbbl
mov
daa
addr16
or
sub
nop
popw
sar
insl
jmp
sub
shrl
roll
dec
and
add
sub
movsl
movsl
loopne
lret
pop
pop
std
push
scas
scas
or
pop
cmpsl
lahf
sub
js
dec
shll
mov
xchg
xor
dec
movsb
push
incb
aam
in
scas
mov
into
sahf
mov
lods
mov
out
sarl
mov
or
popa
mov
in
add
fcmove
inc
dec
push
xor
mov
out
and
pop
call
mov
mov
outsb
push
mov
add
cmp
mov
jle
pop
iret
stc
xchg
shll
push
fnstsw
and
cmp
jle
jmp
insl
jnp
in
loope
push
xorb
jecxz
fmuls
fidivrl
in
xor
pop
dec
mov
cmp
or
out
out
push
movsb
sub
and
push
pop
lock
sahf
jo
push
inc
fldcw
jne
sbb
scas
mov
movsb
ret
push
neg
pop
adc
push
loop
insl
cld
bound
pop
icebp
or
outsl
leave
clc
sti
adc
pop
insl
cmp
pop
push
arpl
xor
imul
leave
dec
lahf
sti
cs
cli
fisttpll
mov
ja
lea
lret
out
fstpl
call
rorl
and
addl
or
pop
out
cld
jecxz
jmp
mov
mov
lcall
ret
dec
fadds
add
loopne
hlt
xchg
and
std
repz
jo
insb
mov
stos
stc
into
push
fwait
pop
and
sbbb
jnp
sahf
inc
and
loop
pop
into
jnp
mov
or
ss
cld
movsb
pop
repnz
jp
sti
sbb
jl
push
scas
adc
mov
pop
or
mov
lcall
pushf
xchg
push
movsb
jb
add
add
mov
jne
xor
pusha
in
jmp
push
xor
clc
sbb
lret
inc
mov
ljmp
jns
lmsw
faddp
mov
nop
and
sbbl
mov
testl
push
sub
mov
movsb
adc
xchg
lret
lds
xlat
xchg
aam
gs
and
add
mov
sub
adc
push
pop
pop
mov
dec
cwtl
dec
mov
mov
hlt
rcll
adc
mov
popa
pop
imul
pop
sub
jne
into
adc
loopne
rorb
inc
decl
dec
cmpl
add
cmovae
sbb
cmpsl
push
pop
mov
mov
mov
dec
std
xor
test
loopne
pushf
rorl
push
sub
inc
loope
push
inc
addl
inc
xor
xchg
xor
cmpsb
test
test
adc
and
xchg
dec
push
add
mov
mov
cltd
xchg
add
dec
in
int3
dec
sti
xor
dec
pop
mov
pop
jecxz
mov
jb
in
addl
jle
dec
adc
movsb
imul
arpl
xor
mov
dec
pop
aam
pop
fdivrs
js
lea
das
pop
sbb
scas
fwait
and
pop
xchg
sub
daa
popa
in
mov
shlb
jnp
loop
clc
outsb
es
cs
dec
pop
out
in
mov
push
inc
stos
in
dec
mov
jnp
and
pop
pop
int3
inc
cmpb
lahf
aaa
dec
xlat
adc
sbb
ss
int
xchg
fisubl
sbb
leave
sti
sub
sbb
incb
and
imull
lods
popl
cmp
int
scas
xchg
and
popf
insb
decl
sbb
jl
xor
xchg
mov
pop
imul
out
and
imul
int
std
mov
adc
and
mov
add
push
mov
pushf
in
adc
jl
cmp
loopne,pn
dec
mov
cltd
popf
jl
mov
dec
ror
gs
xor
mov
sbb
jb
xchg
xchg
popf
xor
roll
inc
push
pop
cmp
out
daa
int3
es
test
push
arpl
jb
pushf
mov
aaa
jb
ret
jecxz
xchg
into
push
loop
int3
cmp
int
mov
and
mov
sbbl
cmc
jecxz
push
xchg
sub
les
test
sub
mov
shlb
fsubrs
xlat
insb
test
sub
xor
xchg
cmp
ljmp
loop
cmp
lods
mov
mov
sbb
and
icebp
test
sahf
mov
and
xchg
jp
jns
jg
ljmp
adc
xor
pusha
fisttpl
imul
lea
pop
adc
mov
lahf
or
sub
int
fdivrp
notl
sbb
addb
pop
fisubs
xchg
sti
ret
mov
cmp
aas
negl
mov
mov
out
ret
xchg
leave
cmp
pop
out
push
adc
dec
push
clc
pop
jle
xor
xor
inc
and
mov
xchg
loopne
and
add
popf
pop
int
mov
jmp
test
mov
js
sbb
fnsave
test
int
fisttpll
lahf
bound
jb
mov
fwait
mov
cli
pop
xchg
jne
sub
push
push
xchg
loopne
or
insl
sub
jnp
in
loope
adc
adc
shrb
dec
mov
insl
push
divb
mov
mov
push
pop
push
or
cmp
mov
mov
lds
pop
outsl
ret
add
cltd
dec
bt
inc
pushf
pop
jecxz,pn
adc
xchg
sub
pop
cmp
fdivs
call
fs
cmp
in
sub
les
or
pop
mov
mov
bnd
pop
xchg
mov
cmp
jl
rorl
inc
iret
mov
mov
call
dec
mov
loope
sub
jae
push
jae
sarl
popf
in
dec
mov
loopne
out
icebp
push
ds
movsl
add
mov
sub
inc
push
jmp
dec
dec
call
jno
mov
dec
aas
lods
xorl
cmpsl
add
fnstenv
pop
fwait
cmpsb
xor
fwait
js
mov
push
cmp
inc
hlt
sti
adc
pop
int
aas
int
jae
lock
xor
jae
inc
mov
cmp
arpl
adc
repnz
inc
inc
fwait
pop
loop
ja
loope
fmul
inc
sub
mov
aas
jmp
cmp
dec
and
repz
lea
pop
out
hlt
loope
inc
stos
mov
pushf
and
or
in
add
adc
and
sbb
jp
mov
xor
int3
lcall
ret
loopne
jae
int
pop
mov
out
icebp
repnz
decl
rorl
js
test
xor
xor
loop
ja
xor
movsl
sub
leave
pusha
xchg
out
dec
push
adc
mov
fcomip
sbb
test
aaa
out
fdivr
out
loopne
push
in
scas
cmp
cmpsb
cmc
les
adc
loope
addl
in
data16
repnz
inc
sarl
and
mov
mov
xchg
jae
adc
addr16
imul
inc
adc
or
xor
outsb
aam
cmp
xchg
insb
add
cltd
and
movsl
out
insl
jb
into
loope
or
lret
add
push
popa
ss
mov
fildl
ret
push
movsl
inc
call
mov
adc
mov
rcll
jge
insl
dec
cmp
sub
xor
inc
popf
iret
iret
mov
sub
ret
sub
dec
out
bound
sub
add
mov
pusha
scas
xchg
in
push
xchg
cmpsl
lcall
mov
mov
adc
ds
pop
xor
cli
mov
outsl
inc
out
sub
pop
jnp
clc
addr16
fistpl
mov
test
pop
jg
ss
push
push
fcos
mov
mov
sahf
nop
je
mov
mov
fimull
dec
xor
fwait
pop
cmp
insb
xchg
jg
negl
dec
scas
mov
loop
push
jmp
loope
fnstsw
add
mov
out
test
imul
dec
ljmp
sub
dec
pop
aam
xchg
jle
adc
fldt
or
rcrb
fdivl
dec
and
jp
fdivr
mov
sbbl
mov
test
fistpll
jg
test
or
add
test
aad
mov
popa
and
mov
xor
xchg
push
mov
test
lcall
sbb
inc
fsub
rcr
or
or
fsubrl
mov
xorb
cmp
ret
sbb
jno
lds
sub
sbb
xchg
dec
outsb
fs
cmc
jmp
mov
fldenv
and
aad
movsl
xor
inc
inc
imul
xor
gs
sbb
sbb
cld
iret
lock
pop
mov
jbe,pt
adc
mov
sub
outsl
cmp
cltd
lock
lods
out
fnstcw
loopne
rorb
xchg
or
test
jp
je
sbb
mov
dec
xchg
inc
pop
sbb
mov
dec
aam
jne
push
xchg
notl
outsl
jb
aad
cmovns
mov
dec
push
lods
mov
mov
sub
and
sbb
rcl
std
cltd
adc
pop
sti
ficoml
mov
xor
shll
push
mov
cmpsb
push
stos
add
xor
ds
shrb
and
add
cwtl
orl
imulb
popf
mov
je
add
jmp
mov
into
xor
fdivr
lds
adc
add
iret
pop
clc
das
ss
sub
test
rcll
imull
sub
jne
ljmp
or
je
gs
add
dec
lret
pop
sbb
scas
ss
addb
cmp
push
add
daa
or
ret
mov
in
icebp
int
rcrl
stos
outsl
inc
adc
adc
mov
push
in
ljmp
mov
and
stos
mov
jb
xor
adc
test
xchg
sbbb
sbb
pop
outsb
xchg
bound
mov
mov
stc
push
mov
clc
xchg
dec
clc
fisubrl
stc
xor
hlt
in
int3
enter
and
and
out
sbb
int
lods
push
fcomi
pushf
mov
repz
sahf
ja
stos
pop
and
dec
filds
push
jle
mov
sub
nop
test
fidivl
jno
cmp
ds
lods
cmp
mov
imul
lods
cs
int
shlb
jns
push
push
mov
sub
in
pop
dec
xchg
xchg
jg
loope
jns
adc
push
push
dec
mov
inc
or
out
lea
adc
cs
ret
and
pop
adc
fstpl
bound
test
addr16
stc
scas
cmp
out
push
push
aaa
adc
rcll
or
inc
pushf
mov
hlt
cmp
popa
loop
nop
and
cmpb
les
fcmovnbe
jmp
push
stos
lret
sti
or
inc
aad
pop
fwait
adc
mov
xchg
mov
mov
jmp
test
cs
scas
adc
into
loop
das
push
cmp
outsl
das
lock
stos
repz
loop
mov
andb
in
xor
or
fmull
mov
cli
and
jle
xchg
dec
inc
dec
and
les
fsubrp
xchg
call
xor
mov
lcall
and
shrl
xchg
mov
push
push
in
xor
arpl
mov
push
test
jle
insb
ja
adc
sti
add
icebp
test
jnp
and
adc
stc
sub
pop
pushf
mov
loop
outsl
inc
cmp
jno
fs
inc
cmp
mov
ret
cltd
mov
inc
push
sbb
cmp
jl
sbb
xchg
repz
mov
lea
fidivrl
cltd
xor
ds
push
fcmovb
dec
push
add
mov
mov
sub
sti
cmc
cmp
aaa
cwtl
int3
outsb
adc
adc
fbld
dec
cmp
sub
cmpsb
ret
pop
or
mov
cmp
pop
push
pop
das
jo
rcll
in
mov
dec
sbb
push
cmpsl
scas
or
imul
push
pop
sub
iret
ss
xchg
mov
inc
xor
mov
enter
in
jle
out
push
mov
or
and
xchg
imul
add
fwait
cmpsl
xor
inc
or
dec
push
adc
idiv
fidivl
cmp
jne
clc
xor
aaa
sub
jne
std
out
dec
mov
pop
and
adc
cld
mov
les
inc
adc
js
jmp
mov
shrl
ljmp
in
fdivs
lret
inc
mov
movsl
mov
add
mov
sbb
or
scas
xchg
mov
in
ds
mov
sbb
fsubl
pop
rcl
xor
xchg
pop
xor
adc
mov
cmp
mov
cmp
fs
cmp
int
adc
aad
mov
jbe
push
insl
addr16
adc
loop
shr
aad
insb
stc
inc
push
test
lock
inc
sbb
mov
stos
inc
dec
jp
loop
and
mov
ljmp
ja
lret
adc
faddp
in
and
test
lret
sahf
push
pop
shlb
popf
adc
cmp
je
aas
testb
ret
jge
push
xchg
lret
xchg
cwtl
fdivs
loope
sub
popa
and
repnz
rolb
lea
lea
pop
test
add
popa
fdivrs
and
sub
aad
fistpll
ja
inc
xchg
mov
push
clc
call
xor
mov
stos
sub
inc
mov
jb
arpl
movsb
sti
jmp
lea
xchg
and
stos
sub
mov
cli
arpl
loop
mov
jp
inc
outsb
dec
xor
jmp
and
dec
rcrb
push
leave
xchg
mov
adc
push
jmp
in
cmp
pop
adc
mov
test
mov
pusha
inc
daa
outsb
cmpsl
mov
rorl
jns
hlt
mov
outsl
cltd
jp
enter
fsub
in
test
ljmp
dec
pusha
movsl
adc
leave
outsb
xor
xchg
xchg
call
xchg
and
lods
mov
inc
mov
sarl
jg
aas
in
pop
repnz
dec
or
test
pop
push
ret
ret
jl
lock
dec
xchg
or
or
mov
mov
jmp
cmpsl
movb
pop
test
lcall
aam
repz
push
jmp
inc
add
push
mov
lea
mov
ja
lret
fwait
jle
push
out
fidivl
fimuls
pop
les
faddp
sbb
loop
dec
sbb
pop
sbb
int
in
xchg
dec
jno
mov
mov
pop
pushf
adc
xchg
pushf
mov
jg
sbb
outsl
sbb
push
xchg
adc
push
sub
scas
ret
cmc
mulb
fsubrp
and
mov
mov
int
mov
add
insb
pop
cmp
push
jle
jge
sub
inc
out
mov
insb
decb
out
jno
cli
or
iret
rolb
inc
cs
sbb
loope
ret
inc
jbe
insb
cmc
pop
lcall
xchg
popa
scas
cmpsl
aas
xorl
ljmp
xor
sub
ds
pusha
sbb
lcall
or
push
in
push
mov
out
inc
repz
test
dec
push
cmp
jns
out
jo
or
xchg
ljmp
sub
movsb
inc
mov
fs
addb
xor
imul
aas
jle
int
in
sbb
fsts
std
movsb
loopne
ds
dec
lret
std
sub
jb
aam
test
dec
xchg
or
sub
xchg
adcl
stos
insb
or
rcr
mov
ss
mov
or
jl
adcl
sbb
adc
fs
jno
and
push
insb
cmp
aaa
jbe
aad
push
adc
inc
pop
aam
push
xlat
adc
sub
inc
ret
xchg
mov
adc
push
jecxz
fldcw
mov
inc
popa
jnp
jg
ljmp
mov
mov
push
mov
sub
dec
fadds
data16
pop
cmp
fcmovb
pop
dec
fs
mov
mov
loope
and
pushf
pop
xchg
adc
aam
sub
ds
loope
repz
mov
mov
outsl
cmp
jnp
push
inc
dec
jne
popf
adc
imul
push
mov
xchg
mov
lret
mov
cmp
hlt
push
loope
test
out
jae
arpl
stc
mov
push
adc
add
enter
adc
test
test
jmp
addl
lods
sti
or
mov
addr16
test
fcmovnbe
xchg
dec
ret
jmp
aas
lods
jp
mov
es
mov
insl
jns
or
dec
mov
pushl
lds
leave
mov
push
out
xchg
nop
jg
daa
je
mov
ljmp
pop
add
push
or
add
mov
mov
sbb
xchg
jno
fcomps
sarl
into
mov
movsl
and
dec
and
hlt
mov
and
popa
mov
loopne
sub
lock
sbb
fwait
std
pop
dec
aas
aaa
orb
dec
xor
sti
cmp
pusha
or
mov
movsl
out
xor
jecxz
lods
xchg
mov
sbbl
inc
dec
ljmp
jp
push
sbb
mov
sbb
or
and
add
xor
decl
jae
mov
pusha
loopne
test
fsts
add
xor
xor
mov
xchg
xchg
inc
xor
push
jno
xor
test
sbb
in
in
inc
push
aas
addr16
cs
out
imulb
push
icebp
notb
js
cmp
mov
sbbl
xor
add
inc
aas
mov
stos
out
lock
mov
shll
scas
int3
hlt
insb
jbe
mov
inc
dec
sbb
lret
jmp
inc
and
and
test
lds
cs
int3
sub
mov
cmpps
push
les
cld
test
sub
push
xchg
imul
mov
lret
push
stc
dec
iret
pop
sti
cmp
add
xor
test
popa
and
fsubs
test
mov
dec
fisttpll
lds
xor
sbb
mov
insb
aaa
repnz
dec
pusha
orl
jg
mov
scas
fisttpll
into
adcl
inc
pushf
jno
dec
cmp
cmp
mov
outsb
pop
movsl
scas
rep
arpl
mov
test
bnd
rolb
lock
push
xchg
push
xchg
cli
std
xor
fs
mov
repz
adc
inc
outsl
cmp
sub
into
popf
lds
add
lcall
cmp
cs
andb
add
or
dec
cmc
push
pop
or
xlat
popf
xchg
loopne
ss
xchg
dec
sbb
in
sub
push
cmp
add
jns
rol
insl
nop
mov
mov
xchg
mov
inc
movsl
pop
cmc
sar
mov
js
and
mov
frstor
mov
fstpl
enter
int3
jl
pop
xlat
cmp
cs
mov
dec
mov
sub
mov
ja
jl
jmp
clc
fwait
insl
cld
jmp
inc
add
sbb
aaa
lds
and
enter
xor
loope
cmpsb
add
adc
push
adc
inc
pop
test
ja
or
nop
or
sbb
xor
cmp
repz
sbb
push
decb
adc
jl
inc
daa
ficomps
inc
adc
adc
test
push
out
push
test
insb
stc
shr
pop
inc
aad
adc
jmp
clc
repz
gs
lret
push
subl
cmpsl
iret
arpl
fdivrl
ljmp
mov
js
pusha
pop
jp
xor
pop
adc
cmpsl
je
jno
divb
cwtl
pushf
cmp
xor
push
je
test
cmpsb
in
test
sbb
shl
daa
sub
adc
dec
jmp
outsb
scas
mulb
cmp
insb
ret
pop
lret
mov
addr16
or
std
inc
jl
sub
cmp
rolb
jg
pop
xor
loope
into
inc
pop
jnp
inc
adc
mov
lret
push
ficomps
aaa
pop
out
pushf
enter
icebp
jmp
std
mov
sbb
xor
dec
cli
mov
or
adc
dec
inc
loope
insb
mov
loop
test
int
sub
mov
push
bound
daa
mov
cmpsb
es
stos
jne
cltd
jns
mov
add
fidivs
lahf
lds
mov
movl
mov
outsl
movsb
movsl
jbe
cmp
sub
decb
arpl
sbb
pop
out
xor
iret
into
mov
lock
xchg
push
jle
mov
movsb
mov
inc
inc
lret
fstpl
sbb
sbb
lret
in
popf
aas
dec
push
clc
mov
adc
sbb
sub
xorb
loope
ljmp
xor
cmp
add
addr16
xchg
adc
jb
fwait
push
mov
pop
mov
out
push
xchg
pop
xor
mov
leave
arpl
xor
cmp
cld
call
lds
jnp
mov
mov
jb
or
sub
addr16
fdivp
lods
out
test
mov
lahf
imul
in
imul
dec
pop
pop
push
dec
dec
xchg
adc
and
xlat
mov
jp
sub
loop
lcall
lods
cvtpi2ps
enter
xchg
imul
aad
jl
inc
inc
roll
mov
test
ja
xor
pop
gs
outsb
adc
out
daa
shlb
or
icebp
mov
mov
arpl
adc
xor
xchg
jle
or
push
or
mov
jae
inc
sbb
xchg
sbb
orl
movsl
push
dec
scas
push
out
jecxz
push
push
xor
std
inc
mov
adc
push
sub
loope
mov
and
clc
pop
or
pop
arpl
int3
adc
mov
xor
test
mov
xchg
xchg
adc
add
decl
pop
aaa
stc
mov
shl
add
sub
les
xchg
movq
sub
pop
sarb
sub
lea
dec
rcr
sub
repnz
push
movsb
jmp
jle
mov
in
idivl
sar
pop
stos
dec
pop
xor
das
push
mov
mov
lcall
roll
jo
adc
pusha
cmp
std
ds
iret
and
mov
cmp
pop
test
add
int
fiadds
push
adc
iret
ror
ja
aaa
pop
and
mov
mov
mov
repz
xchg
pop
mov
add
inc
pop
cmp
xchg
inc
adc
cmpsl
mov
jbe
sbbl
mov
lea
mov
aas
cmp
push
testb
mov
sbb
test
nop
or
push
mov
inc
jmp
mov
fldcw
push
icebp
xchg
add
xchg
inc
and
ret
jp
imul
xor
xor
mov
rcl
push
lods
cli
lea
shl
add
jmp
or
push
pop
mov
negb
popf
xchg
mul
mov
stc
sbb
stc
lret
int
sbb
pushf
fidivrs
inc
pop
xor
xchg
fistpl
xchg
scas
xchg
push
bound
cs
lahf
mov
repz
mov
mov
dec
mov
into
inc
adc
mov
push
mov
movsb
popf
mov
jnp
aad
aam
movsl
repz
in
xchg
sub
dec
mov
shlb
cmp
lock
adc
lret
pop
fimull
lea
in
dec
sti
cmpsb
ds
outsb
jge
in
jo
repnz
das
insl
dec
imul
mov
pop
or
std
hlt
notl
jmp
clc
dec
cs
mov
cld
mov
inc
es
sbb
pop
rcll
into
pop
cli
mov
and
mov
fs
fwait
pushf
jo
inc
dec
xchg
cs
test
icebp
je
popa
popa
push
xlat
lock
adcb
cltd
aas
sahf
dec
popf
jnp
dec
inc
dec
repnz
out
mov
sub
in
ds
mov
pop
aam
scas
popf
add
adc
mov
icebp
fsubp
and
clc
gs
sub
hlt
dec
fwait
mov
fimull
mov
mov
orl
sti
les
enter
out
xchg
nop
xchg
sub
test
xor
mov
leave
popf
sub
rcrl
mov
subl
movb
das
push
sbb
shrb
push
rol
fdivrl
test
xchg
mov
js
movsb
popf
cmp
sar
jae
mov
cli
xchg
pop
sbb
ds
inc
insb
and
fldcw
and
stos
shrb
in
lret
repnz
outsl
xor
push
pushf
jbe
lcall
xorl
in
mov
push
pop
push
jp
sbb
sub
gs
leave
lahf
rdseed
jge
ficoml
and
push
pop
pop
stos
jecxz
mov
mov
push
ja
xchg
fisttpll
ret
inc
ja
xchg
insb
lcall
ja
pop
cs
mov
xorb
mov
mov
idivb
fs
insb
cmpsl
cmp
sarb
sbb
add
jecxz
les
pop
push
outsb
test
mov
sarb
outsb
mov
cld
stos
fldl
or
enter
pop
fimull
shrb
sbb
call
aam
dec
pop
sti
data16
mov
xchg
out
jl
ret
mov
sarl
push
insb
add
xor
dec
mov
roll
adc
xor
sub
mov
pop
sbb
push
add
sbb
lock
dec
sub
push
inc
xchg
dec
mov
les
sti
sub
sbb
or
mov
pop
jl
mov
mov
mov
jno
jnp
and
cmpsl
stos
ds
pop
dec
push
iret
bound
pop
test
movsl
pop
scas
nop
cmpsl
jecxz
adc
dec
dec
sub
int3
dec
inc
lret
ror
inc
adc
xchg
pop
push
mov
xor
mov
push
push
je
ds
jne
push
add
add
dec
push
mov
repz
and
cmp
mov
push
je
xor
insb
dec
cltd
inc
or
sub
aad
lahf
leave
adc
pop
xchg
cmpsl
and
sar
xor
scas
ja
incl
sbb
dec
cmp
jno
out
decl
in
dec
pop
jp
adc
push
dec
int
sbb
sub
and
push
mov
pop
xor
xchg
test
mov
outsb
fcomps
enter
stos
out
xor
mov
jg
lahf
out
std
mov
std
sbb
and
xor
neg
jmp
xchg
jmp
xor
loop
jo
das
jnp
xchg
fsin
mov
shl
es
jo
lock
pop
jp
lret
cmp
dec
ret
jge
sti
and
test
jns
jns
rcrb
cs
cmc
sbb
inc
pushf
mov
rorl
xchg
mov
sub
add
movsl
nop
pop
aam
adc
in
add
inc
popa
push
mov
xlat
jp
pusha
inc
movb
adc
int
stos
jbe
lret
bound
testl
out
xchg
mov
clc
lea
outsb
or
ret
inc
and
ljmp
pop
shl
push
sub
mov
das
inc
adc
push
and
rol
imulb
mov
jno
aam
fs
aaa
push
cmp
xor
mov
jmp
xchg
jle
cmpsb
and
push
pop
fwait
int
fimull
rol
out
dec
push
dec
in
idivb
dec
or
jbe
icebp
sub
adc
mov
data16
aas
mov
inc
int3
push
filds
xlat
frndint
jmp
dec
je
add
dec
fimull
imul
add
xchg
jl
into
or
rcrb
sbb
hlt
in
cmpsl
sbb
push
stc
mov
gs
jo
mov
test
sti
adc
jns
pop
pusha
inc
shll
imul
jae
push
jnp
mov
test
fcmovnu
mov
and
dec
jo
lea
imul
out
sbb
pop
jmp
shr
jecxz
outsl
aam
adc
pop
mov
bound
fwait
test
xor
inc
xchg
jg
inc
bnd
push
jne
cwtl
xor
aaa
push
inc
sub
and
mov
mov
ljmp
cwtl
stos
dec
int
dec
icebp
loope
adc
dec
shrl
fimull
sub
cmp
outsl
jb
inc
hlt
loopne
in
pop
enter
mov
dec
aam
dec
test
inc
faddl
das
jns
aam
sti
std
ljmp
les
sbb
xor
je
sub
sarl
xchg
loope
inc
lret
test
lret
int3
dec
insl
mov
pop
dec
mov
lock
mov
leave
das
roll
dec
int
decl
iret
and
sbb
bnd
inc
pop
sub
and
in
or
jne
sub
add
add
pop
push
mov
sbb
sahf
cmp
pop
arpl
xor
mov
cmp
fistpll
mov
imul
sub
lods
into
lods
mov
adc
xor
in
mov
sbb
lret
add
mov
or
or
sbb
addr16
cmp
or
mov
enter
test
fsts
pushf
mov
ds
sub
add
jnp
es
mov
adc
enter
mov
fs
loope
mov
mov
jg
fisubrs
mov
or
insb
stos
sub
xlat
mov
aam
aas
push
pop
cmp
mov
fcoml
mov
mov
lds
add
cmp
es
lods
sbb
sbbl
ds
aad
js
lahf
or
out
cs
jmp
cwtd
scas
lds
aam
or
in
xchg
arpl
jno
xchg
and
and
cmp
inc
insl
mov
in
lods
insl
adc
out
gs
mov
adc
jbe
sub
push
out
cld
adc
mov
xchg
jae
dec
inc
jne
sti
adc
xor
dec
mov
push
in
mul
imul
je
arpl
cmp
loop
inc
pusha
sub
mov
sbb
fsts
lret
add
out
imul
aas
mov
xchg
pushf
push
subl
jne
das
test
mov
push
and
aam
mov
ret
jns
and
pop
sbb
call
cmpsb
dec
or
test
pusha
test
push
pop
mov
lds
inc
cmpl
sbb
pushf
mov
jb
xchg
stos
in
xchg
fnstenv
and
mov
xchg
leave
jne
mov
inc
arpl
xchg
or
sahf
jle
test
shrb
ret
fcmovne
mov
jbe
mov
iret
lret
jbe
jnp
into
adc
ja
jo
dec
repnz
aam
inc
iret
or
in
pop
sub
sub
adc
cltd
imul
ja
shlb
pusha
lds
test
add
and
faddl
subl
popf
sbb
push
pop
add
enter
das
arpl
out
ret
cmc
lcall
cs
pop
gs
inc
cmc
repnz
in
call
pop
xor
ret
aas
inc
dec
mov
xchg
dec
leave
cmpsl
das
mov
mov
jo
mov
cmpsl
xor
xchg
pushf
lods
js
or
sbb
mov
or
mov
lret
xchg
xor
cmp
mov
mov
lods
mov
repz
mov
sbb
push
jmp
lds
ss
mov
icebp
jp
pop
jbe
hlt
incb
jmp
scas
sub
jge
and
xchg
out
and
jp
mov
add
xchg
ror
push
xchg
aaa
mov
mov
int
jmp
insb
sarl
pop
jl
cmp
or
aam
jp
into
aam
adc
adc
in
pop
pop
je
jo
call
xchg
jae
xor
les
mov
inc
fiadds
in
popa
inc
dec
pusha
push
inc
add
mov
es
out
call
push
mov
int
mull
and
test
lahf
add
push
dec
mov
cmp
xchg
sbb
cmc
lretw
sahf
sub
fdivs
push
cmp
push
fstl
call
les
movsb
leave
inc
push
es
test
dec
push
inc
xchg
sbb
dec
mov
mov
shl
enter
push
sub
pop
pop
frndint
mov
dec
fcom
and
push
test
sub
lret
fmull
dec
pop
add
xchg
lods
push
dec
lds
inc
mov
lahf
dec
push
je
sbb
mov
push
xchg
inc
inc
iret
push
cmp
xchg
and
arpl
sahf
and
fldenv
lea
cmpsl
int
dec
mov
stos
or
cs
sti
imul
decb
lahf
mov
shl
xchg
popf
inc
daa
mov
test
xchg
jae
xchg
mov
inc
mov
jno
cmp
cmp
aam
sub
inc
test
in
jecxz
leave
inc
arpl
lds
sahf
mov
mov
sub
scas
xchg
fdivrl
dec
xor
subl
push
loope
cmp
ljmp
pushf
dec
mov
mov
out
push
scas
int
push
or
imul
testb
lods
dec
xchg
loop
push
mov
cmp
xchg
jbe
in
jbe
outsb
sub
adc
insb
mulb
pop
mov
xchg
imul
lcall
push
ds
jo
add
mov
dec
sarb
fbld
mov
mov
dec
jmp
sub
dec
jl
lods
push
rcll
add
push
jb
loopne
ljmp
in
push
sbb
sbb
xor
inc
cwtl
or
adcl
xchg
shl
push
pop
shlb
xchg
push
loopne
dec
pop
push
cs
xor
mov
jg
pop
sahf
in
xor
loop
imul
das
push
jge
in
faddl
and
inc
cltd
movsl
sub
sbb
aaa
xchg
jmp
pslld
xchg
fsubrs
movsb
or
sbb
les
jo
fdivl
inc
mov
mov
push
int
dec
push
aam
jl
out
adc
insb
adc
lds
pop
ret
xchg
inc
or
into
sar
jmp
cwtl
sahf
jae
adc
rcrb
inc
add
mov
out
mov
popf
xlat
imul
fidivs
sub
roll
cmp
jge
sub
add
lret
pop
test
inc
loopne
sbb
xor
sub
std
enter
push
mov
mov
push
faddp
and
lock
vmread
jns
jecxz
clc
inc
pop
mov
rclb
in
popa
pop
dec
test
hlt
es
je
mov
sbb
nop
mov
sbb
jge
gs
out
fcos
in
inc
daa
jp
stc
and
sub
adc
mov
adc
fildll
push
mov
sub
inc
aas
add
cmp
inc
popa
jae
dec
mov
xor
and
jb
sbb
or
aam
pop
mov
test
push
and
in
loopne
int
mov
inc
sub
adc
inc
adc
adc
xchg
cmpsb
lahf
cmpsb
xchg
inc
sbb
xor
xchg
adc
and
fbstp
mov
into
mov
lcall
cmp
enter
int3
shlb
cmpsl
xor
call
mov
and
or
std
add
int3
push
cmp
jno
and
inc
sub
cli
xchg
xchg
rcll
xchg
in
cmp
ret
xchg
adc
sub
ficoms
xchg
nop
shlb
test
pop
fisubrl
xchg
pop
mov
mov
loope
jmp
xor
or
jae
sub
fdivs
lcall
cmp
dec
or
sub
jp
add
xchg
mov
inc
xor
jle
cmp
or
or
push
sahf
lcall
dec
loop
sub
push
fsubrl
lea
pop
mov
stc
xchg
stos
lahf
push
inc
pop
jmp
mov
aad
jl
mov
mov
shr
adc
and
add
lds
aas
outsl
or
mov
test
cmp
pop
movsl
js
xor
xor
lea
scas
mov
lds
cli
aad
pop
dec
popf
lahf
fidivrs
adc
repnz
jmp
sub
xchg
xchg
in
fists
xchg
stc
sub
repz
into
js
xor
cmp
xor
jo
std
mov
mov
dec
dec
clc
stos
jmp
push
test
rcrl
cmpb
insb
fistpll
and
sbb
loopne
or
inc
and
ljmp
xor
mov
lds
adc
insl
mov
jle
or
cmpsb
mov
hlt
lret
pop
add
pop
lcall
jl
sbb
jnp
test
jge
and
xchg
cltd
rcll
pop
push
jb
mov
pop
xor
je
lds
or
xchg
insb
push
adc
outsb
push
aad
ljmp
pop
lret
mov
mov
mov
int
adc
paddb
mov
pop
insb
fsubrp
cmp
enter
int3
mov
rolb
stc
outsl
es
push
sub
and
push
pop
sbb
nop
lret
cmpsb
mov
mov
cmp
addr16
mov
adc
lret
xchg
sbb
pop
xor
out
movsb
cmp
leave
cmpsl
xor
sbb
dec
dec
mov
std
mov
mov
push
xchg
movsl
iret
mov
fcmovne
jae
xlat
psrad
scas
cmp
mov
inc
movsl
test
mov
in
mov
out
sbb
push
xor
arpl
sahf
out
jno
mov
add
imul
bound
int
dec
inc
lock
in
sbb
adc
cld
insl
ss
ja
mov
cmp
cmpsb
pop
xor
pop
xchg
add
xor
rorl
bound
jl
cwtl
ljmp
push
push
ret
popa
add
mov
ret
bound
mov
test
xor
mov
dec
test
lcall
pop
pop
mov
xchg
incb
xchg
sti
addb
xchg
push
jmp
mov
out
aad
scas
sub
xlat
js
aas
sbb
add
mov
iret
repnz
dec
xchg
push
inc
push
lds
pop
adc
mov
pop
loop
jbe
mov
inc
pushf
test
pop
mov
push
adc
adc
and
add
adcb
aaa
cmpsb
outsl
mov
dec
or
jle
inc
scas
mov
cmp
push
xchg
xchg
in
add
sbb
repz
mov
leave
sub
lret
and
pop
add
mov
mov
jl
cld
lahf
rol
xor
adc
fistps
adc
hlt
bnd
jnp
xchg
push
out
mov
sbb
mov
ss
cld
movsb
cmp
pop
icebp
dec
add
xlat
mov
rclb
mov
fsubr
push
frstor
scas
call
jmp
jo
mov
loopne
std
adc
dec
cmpsb
dec
mov
cltd
sti
xor
lret
add
mov
inc
jne
pop
cmpsb
mov
cwtl
jbe
inc
inc
and
and
out
xchg
popf
push
aaa
push
enter
addr16
sbb
ret
popa
fists
bound
adc
loopne
popf
dec
sbb
sub
dec
out
sar
in
pop
jp
sub
call
jl
out
out
jne
and
inc
xchg
push
push
fwait
test
pop
shrl
in
dec
jne
xchg
mov
and
fists
xor
push
or
adc
sub
xchg
mov
cli
popa
lods
pop
stos
call
sbb
lret
add
pop
xor
in
sbb
mov
cli
imul
and
pop
adcl
loopne
mov
mov
jae
stos
jmp
mov
jmp
std
adc
mov
mov
sub
stos
mov
xchg
fidivrl
xchg
sub
cmp
in
ja
std
sbbb
mov
pop
mov
push
out
lock
xlat
and
test
mov
cltd
insb
into
dec
pop
push
sbb
das
mov
jge
adc
mov
jo
or
inc
cmp
dec
mov
inc
icebp
subl
dec
enter
out
data16
jmp
inc
or
jge
cmp
daa
imul
dec
cwtl
pop
inc
xor
test
mov
xor
mov
ret
jne
or
scas
xchg
mov
in
mov
jmp
lahf
cmp
fildl
push
testb
lods
add
mov
dec
mov
adc
add
mov
int3
cmp
pop
inc
js
decl
test
fmull
pusha
push
je
xor
inc
pushf
enter
push
jp
or
xchg
pop
es
inc
lahf
mov
sbb
jae
lods
mov
pop
sbb
cs
dec
popa
fisttps
into
jo
push
inc
push
xlat
add
cmp
int3
ds
xchg
out
out
pop
or
ret
mov
lret
out
mov
std
loop
imul
cli
add
add
inc
cmp
mov
leave
jo
mov
push
cwtl
and
xchg
mov
xor
or
xor
rorb
in
mov
nop
sub
loop
cmp
xchg
sub
add
dec
loop
jbe
sub
cwtl
out
add
movsl
ret
push
int3
add
mov
in
sub
cs
and
mov
mov
cmp
adc
jg
out
xchg
lock
test
sbb
jne
hlt
or
ss
filds
call
cs
sbb
cmpb
test
out
rcl
clc
xor
sub
dec
test
jge
lods
scas
subl
or
pop
jo
sar
add
inc
dec
hlt
inc
aad
or
cld
pop
inc
out
push
inc
nop
cmpb
ss
mov
inc
fistpll
mov
ret
adc
std
lods
cmpsb
idiv
cmp
fcoml
jno
push
sarb
add
xchg
jbe
shl
lods
aam
mov
dec
inc
ficoml
mov
scas
imul
mov
outsl
iret
jmp
mov
insl
inc
pop
inc
loope
ja
xchg
pop
jecxz
push
icebp
push
inc
mov
in
pop
dec
outsl
cmp
in
int
mov
jbe
test
sbb
sbb
cmpsl
in
fbstp
test
mov
sbb
xchg
jge
fwait
stc
rolb
stos
sub
inc
ss
mov
js
aad
and
test
mov
test
pop
cmpsl
pop
pop
push
push
loop
xlat
pop
push
sub
cmp
sahf
or
cmc
sbb
incb
lock
pop
loop
lods
or
sub
das
xchg
jg
pushf
mov
loopne
push
out
xor
pop
lds
pop
or
sbb
and
or
punpckhwd
or
and
xchg
xor
in
jno
mov
push
loope
lret
add
cs
sub
push
outsl
jp
add
inc
and
pop
push
cmpsl
push
aaa
inc
les
out
xor
psubq
push
pusha
dec
into
mov
mov
lods
dec
mov
cmp
jp
mov
nop
test
mov
jl
test
mulb
popaw
notl
les
jecxz
out
cmp
dec
inc
sbb
loope
mov
dec
fwait
cmp
insl
and
sbb
addb
mov
sbb
push
pop
inc
jnp
mov
sub
or
cltd
arpl
sbb
or
inc
decl
sub
inc
xchg
jge
leave
aas
push
addr16
int
incl
outsb
cmp
mov
pop
repnz
sti
sbbl
outsb
push
xor
fimull
cmp
cmp
addr16
incl
or
mov
imul
sub
cmpsl
cmpsb
std
ret
mov
stos
pop
scas
cmp
pop
adc
xor
js
repnz
lahf
outsb
hlt
insb
mov
loope
sub
ror
adc
jno
daa
lret
mov
incb
clc
mov
shlb
movsl
mov
sub
enter
adc
jo
xchg
jne
inc
inc
add
jne
adc
repz
xchg
mov
push
jg
int
leave
addr16
scas
iret
je
loopne
arpl
sub
pop
pop
test
and
mov
pop
jle
xor
jae
adc
dec
test
pop
jns
inc
mov
mov
jbe
lahf
xchg
cwtl
jns
pop
out
ljmp
subb
mov
cmp
lret
rolb
sub
sbb
push
aam
cld
adc
sarl
cltd
rorl
pop
dec
test
aad
ss
shll
clc
sub
jl,pt
inc
es
push
pop
xor
into
imul
adc
popf
out
jge
sarb
je
mov
leave
sbb
shr
ret
mov
dec
push
mov
cld
lret
pop
repz
inc
test
imul
andl
popf
inc
js
fisubrl
sub
leave
inc
mov
fists
add
loope
sbb
mov
pop
outsb
mov
inc
imul
push
test
into
lods
mov
lahf
lods
test
cmpsb
sti
daa
inc
add
mov
or
dec
add
sub
cmp
jmp
arpl
and
test
jae
cmp
mov
imul
lret
repz
loopne
sarb
repnz
mov
cmp
inc
mov
ja
add
dec
adc
and
jne
mov
xchg
and
xchg
sti
pop
adc
add
clc
ds
mov
push
movsb
inc
popf
mov
inc
ja
jb
outsb
mov
adc
push
push
jb
aaa
fdivs
xor
fisttps
nop
cmc
xchg
push
ss
lret
lahf
mov
hlt
dec
dec
lret
aaa
arpl
fists
aad
cli
push
cwtl
test
xorl
xchg
jns
enter
mov
jle
dec
aad
inc
lret
and
xor
and
lods
sub
ret
in
ljmp
push
fs
sub
dec
inc
push
xlat
popa
jne
imul
push
mov
xor
dec
jbe
mov
mov
pop
jge
in
enter
stos
cltd
dec
pop
sti
inc
jne
cmp
test
dec
test
xor
xor
mov
sarl
jae
adc
arpl
xchg
lds
ss
pop
sbb
inc
ret
sub
cmc
mov
mov
rcll
mov
xchg
dec
cmp
dec
fs
pop
inc
out
bound
or
push
movsb
fisubl
pop
or
scas
jg
pop
mov
and
cmpsb
push
jb
jl
sbbb
xchg
inc
lock
jecxz
test
sbb
mov
pop
and
sbb
fcmovb
dec
pushf
or
jmp
std
mov
rolb
dec
ljmp
mov
inc
jle
dec
add
sti
test
inc
pusha
je
lret
rorb
xor
mov
lods
dec
repz
inc
dec
jmp
nop
scas
je
out
fwait
push
xchg
and
and
icebp
jae
xchg
add
je
mov
dec
sbb
js
mov
xchg
jg
icebp
dec
xchg
pushf
pop
push
xor
add
xor
mov
jge
mov
push
mov
rcrb
bswap
inc
cmpsb
lcall
mov
popa
pop
push
cltd
add
adc
sub
jne
lock
int
test
rorl
in
mov
push
loopne
sub
imul
mov
xor
xor
inc
sbb
mov
cmp
or
dec
cwtl
fistps
stos
arpl
scas
and
int
pop
insb
mov
mov
xchg
lahf
pop
mov
push
mov
sarl
stos
icebp
adc
loope
mov
fwait
les
iret
nop
jp
loopne
int
popf
sub
sbb
jl
mov
pop
pushf
cwtl
pop
and
mov
out
testl
hlt
jecxz
repz
outsb
sbbb
adc
arpl
inc
adc
sbb
pop
pushf
rol
sbb
outsl
aas
icebp
data16
sbb
mov
fs
inc
outsb
push
aas
inc
push
jns
inc
nop
mov
rolb
pusha
xchg
dec
lcall
add
fcomi
scas
dec
addps
cmp
sub
xorb
mov
je
push
add
mov
ret
pop
or
push
or
or
ret
mov
push
mov
jo
mov
adc
rorl
and
jecxz
test
jne
push
push
xor
fnstenv
adc
pop
jne
repz
repz
mov
mov
sub
aaa
lcall
out
xchg
add
xor
sbb
stos
ret
push
std
imul
pop
movsl
xchg
and
xchg
xor
inc
cmp
sub
mov
jae
cli
dec
cmpsl
push
emms
call
rcrl
mov
jae
insb
fwait
mov
in
cld
sbb
imul
repz
hlt
sub
or
into
mov
sahf
pop
pop
cmpsb
out
mov
xor
dec
out
lahf
dec
add
fincstp
fstl
adc
xor
mov
sbb
sti
mov
jb
push
push
pop
imul
jne
xchg
scas
lea
rcrl
sub
fs
movsb
dec
aas
sub
iret
add
cli
and
mov
int
lret
xchg
mov
or
xor
adc
xchg
inc
bound
push
dec
ret
sarl
mov
scas
lods
push
push
jecxz
ret
mov
rcr
repz
fldenv
mov
sub
fidivrs
sbb
in
sbb
or
pusha
cmpsb
push
movsb
lcall
pushf
addr16
sbb
sub
and
xchg
daa
dec
and
inc
jl
cmpb
popa
sbb
mov
pop
mov
popf
stc
adc
imul
push
mov
in
push
rclb
loop
cmp
xchg
pop
pop
insl
adc
imul
movsl
add
outsl
lret
xor
test
xor
inc
jmp
ljmp
das
cmc
std
scas
pop
stos
loope
in
jmp
mov
xor
rcr
jmp
xchg
or
inc
cmp
lock
add
jbe
add
adc
pop
fsubl
xchg
call
sbb
jae
cmp
sub
ds
or
xchg
dec
bound
pop
cwtl
lcall
adc
inc
jb
test
sahf
shlb
out
imul
scas
inc
lret
xchg
push
fildl
or
pop
ret
push
and
mov
add
cmpsl
pop
in
xor
imul
mov
sub
ret
cwtl
fcomps
dec
mov
imulb
xor
les
sarb
repnz
fisttpll
sub
add
mov
shll
aam
sti
ss
out
loope
stos
movsl
mov
jo
pop
jl
lcall
rclb
fisubs
out
pop
add
jae
maskmovq
jl
mov
gs
xchg
push
pop
or
xlat
daa
inc
pop
xchg
addr16
hlt
xchg
outsb
test
out
in
pushf
cwtl
mov
adc
add
mov
lret
scas
adc
popf
das
push
lahf
insb
test
cmpsl
xchg
out
add
push
cmc
mov
mov
sub
xchg
into
xor
and
xor
orl
stos
mov
rcll
mov
mov
jne
jo
mov
pop
inc
mov
inc
and
mov
scas
pusha
xor
jmp
cmp
ret
mov
icebp
inc
popf
xchg
fcmovne
jmp
xrelease
mov
sbb
lret
fsubrs
cli
push
sub
repz
and
test
ficompl
popf
or
lock
shr
mov
dec
das
xor
repz
movsl
movsl
fsubl
dec
pop
stos
xchg
movsb
test
push
sbb
add
push
nop
mov
mov
sti
xchg
aam
loope
add
aaa
dec
mov
add
in
jmp
lret
das
push
ss
es
pusha
adc
sbb
int3
jnp
data16
bound
clc
sub
aam
jge
sahf
and
inc
in
push
hlt
fdivr
clc
fnstcw
imul
imul
pop
pop
cld
push
pop
cwtl
pop
jge
xor
outsb
jmp
leave
push
sbb
pop
cmc
xor
loopne
mov
mov
pop
ret
or
sti
adc
mov
addb
sbb
insl
pop
cmp
and
adc
xor
dec
insl
out
lcall
stos
sub
add
ds
iret
fwait
test
cmp
ljmp
lret
pop
mov
ljmp
xor
pop
fmul
adc
iret
stos
push
xchg
popa
xchg
inc
lods
jmp
inc
mov
mov
popf
mov
mov
or
repz
jno
adc
push
mov
sub
inc
shlb
jns
cmpsl
rcrl
mov
enter
ficompl
mov
adc
cmp
cs
mov
dec
enter
fisttpl
xor
cmpb
add
fstpt
sti
xor
dec
stos
fwait
rcr
and
fistps
sbb
xchg
je
movsb
rorb
and
lcall
sub
sbb
xor
subb
fwait
mov
or
or
aaa
cmp
pusha
clc
in
stos
sbb
shlb
ja
hlt
jmp
dec
xor
loopne
push
or
jno
mov
pop
das
ret
push
jb
bound
mov
inc
iret
or
sub
inc
mov
loope
push
dec
clc
sahf
adc
out
arpl
mov
cmp
dec
fmul
sub
mov
int
stos
seta
push
das
push
test
sbb
inc
stc
push
loope
xor
mov
in
jl
lock
subb
aas
aad
xchg
insl
sbb
loop
loopne
mov
out
cld
add
stc
stc
and
iret
repz
popf
ss
mov
scas
fsubr
and
fists
ret
dec
ja
and
inc
in
jae
dec
mov
ds
push
sub
clc
daa
je
push
inc
or
and
pop
dec
mov
sub
jo
adc
mov
cmc
dec
pusha
xchg
fucomip
rcl
es
inc
insl
mov
adc
outsb
jno,pt
push
push
mov
frstor
mov
test
aam
out
in
sub
sbb
sub
pop
push
mov
sbb
mov
dec
dec
jp
hlt
add
add
cld
cwtl
daa
or
xchg
sbb
lds
inc
es
rol
mov
scas
xchg
jg
lea
adc
stc
jns
pop
pop
imul
jle
or
xchg
or
andb
sbb
push
and
mov
lret
lods
push
repz
in
jmp
sahf
fsubr
and
sbb
jae
gs
pop
lds
and
iret
mov
test
mov
sarl
hlt
fwait
pop
mov
inc
or
cmc
jnp
or
jns
faddl
or
inc
jno
cmp
xor
inc
test
adc
mov
push
cmp
iret
xor
lea
inc
int3
imul
cld
xchg
xchg
punpckldq
lods
int3
sub
call
dec
lea
pusha
test
sbb
xchg
mov
sub
xchg
pop
adc
jle
or
es
aam
stc
in
sub
and
std
dec
mov
push
aad
lock
daa
fisubrl
cmp
fdivrp
jne
mov
mov
mov
pusha
pop
mov
cmp
mov
pop
or
gs
fdiv
aad
mov
or
scas
test
mov
in
adc
fs
xchg
bound
mov
push
enter
movsl
fimull
cmp
xor
inc
fnstenv
pop
into
dec
mov
out
or
out
or
pop
call
push
jne
stos
mov
div
and
adc
fildl
mov
jmp
pop
jmp
in
fisubrs
dec
sub
ljmp
dec
jae
mov
add
mov
lret
in
aaa
jle
push
push
push
or
lahf
mov
push
add
stos
clts
mov
adc
inc
aaa
pop
push
push
sub
and
and
mov
loopne
sub
xchg
sbb
jge
hlt
dec
mulb
push
sub
es
cmp
pop
lods
es
dec
out
xor
in
and
pop
add
pop
iret
sbb
int
push
xchg
push
call
cmovg
add
dec
push
mov
push
xchg
jmp
lret
jne
jg
xor
xor
mov
movsl
sbb
sbb
jge
and
mov
js
repnz
dec
xlat
mov
ljmp
test
mov
adc
aas
push
in
or
movsl
mov
mov
mov
in
popa
mov
aam
icebp
test
fildll
enter
fisubrl
xlat
int
sub
lahf
jp
repz
je
ficompl
lcall
push
jg
hlt
pop
adcl
jne
push
push
push
pop
jl
push
test
xlat
rcll
lock
jecxz
lds
push
jae
fdivp
pop
xchg
add
in
push
into
sbb
mov
cwtl
ja
cld
aam
ffreep
mov
mov
jne
push
xor
mov
mov
rcrl
mov
je
roll
and
mov
lret
fcmovnu
and
jbe
adc
orl
into
pop
pop
inc
sub
in
mov
shl
lea
jmp
sub
aad
lret
adc
push
cmp
dec
lcall
aad
fnstcw
loope
shr
jmp
push
dec
fxam
mov
sbb
mov
xchg
xchg
or
les
mov
std
xchg
sbb
jne
push
fwait
jge
mov
mov
push
subb
arpl
daa
dec
movsb
xchg
mov
lods
imul
fsubp
cmpsl
jae
cwtl
xorl
aas
mov
mov
jne
and
xchg
cmc
das
daa
sbb
and
subl
cs
dec
fidivl
jno
mov
jae
sti
jg
mov
pushf
data16
pop
xchg
push
cmpb
shrl
loopne
pop
mov
push
xor
cld
scas
xchg
mov
mov
aaa
pop
pop
repz
arpl
sbb
and
inc
lods
data16
iret
pop
mov
ret
jnp
loope
xor
or
cmp
mov
jl
inc
out
mov
jnp
ss
dec
mov
cli
push
sbb
jb
in
pop
mov
and
jnp
jmp
stos
mov
dec
and
movsl
pop
adc
xchg
aad
addl
pop
dec
mov
xor
fsub
cli
mul
outsl
and
aad
loop
bnd
popa
add
and
pop
ljmp
sub
in
rorl
sbb
xchg
test
push
popf
mov
mov
divl
xchg
xchg
xchg
jo
in
in
hlt
scas
inc
lret
cmp
repz
mov
imul
pop
loopne
sub
ljmp
test
call
out
jl
mov
test
pop
jae
xchg
leave
es
dec
test
sbb
jmp
sbbl
out
nop
mov
movsl
js
and
rclb
cmp
add
std
pop
enter
sbbl
sbb
push
cmpsl
inc
sub
insl
cmp
jmp
scas
scas
jmp
popf
push
push
movsb
push
fdivs
inc
ss
outsl
divl
fwait
mulb
mov
fs
test
cmpsb
mov
jmp
or
aaa
inc
clc
xchg
in
stos
test
mov
aam
xchg
call
hlt
aad
lret
aaa
xchg
movq
mov
dec
push
in
lret
ret
jnp
mov
cmp
cmp
hlt
test
popf
clc
popf
dec
sbb
or
or
pushf
mov
sub
and
in
mulb
ds
adc
pop
ja
mov
dec
mov
pop
bound
add
push
jno
sbb
add
mov
pop
sbb
jne
pop
cmpsb
push
xor
cmp
dec
fwait
leave
pop
test
es
mov
pop
icebp
fdivrl
xchg
dec
fwait
cmp
push
push
adcl
std
inc
or
ljmp
dec
in
and
andl
loopew
xchg
imul
imul
adc
in
stc
ja
cli
ss
scas
mov
inc
gs
out
add
lods
xchg
push
and
adc
xchg
jle
repz
lds
jle
xchg
xor
jle
incb
imul
in
pop
rcrl
pushf
enter
inc
push
mov
sub
cld
xchg
lock
push
aaa
stos
iret
movsb
mov
sbb
jg
cltd
jns
mov
dec
mov
mov
add
lret
lods
cmc
popf
push
ljmp
or
mov
jle
xchg
rclb
cmp
inc
sub
jp
ja
sbb
jno
xlat
int
hlt
sbb
xor
jb
inc
ret
lods
dec
pop
orb
sarl
fcomps
fdiv
mov
push
imul
mov
cmp
mov
sub
lahf
out
insl
dec
dec
test
out
mov
rol
subb
jo
mov
add
sbbb
inc
push
test
pop
lock
adc
sub
jns
fisttps
in
in
mov
scas
mov
and
sbb
and
mov
cltd
cmp
mov
lock
xor
aam
jns
mov
into
iret
pusha
ret
add
sub
mov
repz
sbb
roll
loop
data16
and
add
test
sub
stc
sub
popf
push
sub
mov
xchg
fdivs
inc
mov
or
pop
shll
inc
cmp
orl
movsb
cltd
inc
xchg
add
nop
xchg
mov
inc
nop
sub
int
outsb
cmp
mov
dec
xchg
adc
adc
nop
mov
or
mov
xor
jg
jmp
shrl
inc
setae
mov
rcrb
mov
into
int
jp
pop
in
pusha
mov
adc
jle
sbb
push
arpl
mov
xchg
cmc
lret
pop
pop
subl
lcall
pop
test
pop
aas
adc
js
aam
lds
das
es
cmp
shl
adc
mov
cmp
in
sub
jecxz
add
mov
add
dec
lret
dec
dec
jne
jl
dec
mov
and
iret
movsb
jns
les
cmp
pop
sbb
dec
daa
cmp
push
aaa
dec
arpl
mov
and
cs
fstpl
and
aas
mov
mov
inc
adc
int3
or
out
sub
cli
lock
pop
lods
dec
mov
movsl
push
icebp
dec
stos
dec
pop
loope
imulb
inc
and
in
loopne
clc
jge
inc
sub
inc
test
mov
mov
xchg
stos
adc
aaa
daa
cmp
les
test
scas
lock
sbb
sbb
scas
hlt
add
out
daa
pop
and
iret
mov
loop
fistpl
cmp
gs
aaa
call
xchg
cli
movsb
cmp
jge
lds
leave
sub
adc
mov
int3
sahf
fistps
rcl
cld
mov
negb
mov
add
lcall
lods
or
aaa
cmp
call
addr16
pop
sbb
mov
test
push
js
rcrb
jge
fimull
call
pop
es
add
sub
hlt
es
cmp
inc
fldl
pop
xor
sub
sub
fbstp
stc
xlat
cmp
mov
jae
lods
sub
jg
ret
or
mov
xor
push
stos
incl
mov
rcll
cmpsb
and
push
sarb
sbb
and
ficompl
xchg
jge
mov
mov
in
lea
push
push
jns
loope
push
sbb
jbe
call
add
jns
stc
sbb
aas
cmpsb
ss
popf
lret
mov
add
adc
dec
call
or
ss
jno,pn
sbb
mov
rcl
sbb
scas
mov
jmp
cmp
jp,pt
mov
sub
add
jns
dec
cmc
sub
cli
pop
loope
mov
push
push
sbb
cmp
jnp
in
jno
sub
std
sub
mov
in
rol
rolb
jae
iret
lahf
cwtl
outsl
movsb
rolb
xchg
ljmp
xlat
push
jno
mov
mov
in
out
out
inc
pop
or
or
int3
daa
dec
int3
inc
ljmp
jne
sbb
test
and
jns
lret
lret
pop
in
fstl
hlt
xchg
inc
fdiv
ss
fsubrl
push
lret
cmpsb
push
push
test
push
movsb
sub
shrl
lods
dec
and
xor
ret
inc
adc
rolb
xor
dec
xchg
jae
dec
in
push
cmp
cmp
cli
xchg
test
mov
out
cmp
lea
sti
xchg
aad
push
idivl
arpl
mov
icebp
js
xor
pop
push
pushf
xchg
cli
das
push
adc
jge
dec
lds
call
xlat
ja
dec
mulb
sub
pop
sti
pop
rcll
mov
add
cmpsl
fisubrl
fidivrs
mov
mov
xor
mov
sbb
out
dec
imull
and
ds
xchg
or
or
xchg
leave
pushf
aas
data16
hlt
push
push
sbb
lods
mov
pop
loope
adc
add
cltd
xchg
stos
cmpb
data16
inc
xchg
movsl
mov
imul
fs
adc
cmp
jmp
enter
ja
stos
loopne
mov
mov
sub
add
ret
testb
and
jmp
aaa
loopne
dec
outsl
or
lahf
rorb
repz
in
xchg
ds
popa
xchg
cli
mov
mov
sti
mov
cmpsb
fmul
sbb
jl
lahf
lock
fmul
mov
std
popf
inc
pop
sbbb
pop
ljmp
jp
mov
popa
jno
call
jl
mov
inc
ret
loope
bound
pop
cs
paddusb
inc
repnz
ja
jb
cwtl
je
mov
xor
pop
cmp
push
jb
pop
into
loopne
sub
ret
pop
jge
enter
jne
cli
aam
push
mov
les
and
pop
fsubs
adc
or
jl
movsl
fidivrl
or
add
pop
push
cmovbe
lret
dec
enter
mov
pop
mov
and
rolb
inc
lods
rcrb
mov
mov
mulb
jge
ds
mov
fsub
outsl
add
xor
or
call
loop
mov
lock
pusha
inc
inc
cld
js
popa
mov
ret
faddp
stos
fcomip
mov
enter
aas
js
repz
jnp
sti
and
insl
mov
sub
mov
je
xor
jge
push
loop
inc
mov
in
jns,pn
and
adc
xor
sbb
push
in
je
addl
mov
notl
mov
xchg
fucomp
gs
pop
test
aad
stos
xor
lcall
jl
jnp
mov
xchg
out
inc
mov
dec
shlb
nop
push
lods
jl
mov
aam
imul
fwait
sub
cmc
inc
fisttpl
xchg
in
into
imul
mov
mov
xchg
or
adc
sub
aam
sahf
out
in
lcall
mov
mov
xchg
cmp
jno
pop
je
lret
movsl
cmp
jg
orl
add
sub
inc
push
insl
les
dec
cmc
and
xor
xchg
aas
jl
jle
xchg
out
lcall
cmpsb
call
imul
push
sub
fildll
adc
shll
adc
inc
inc
hlt
insb
mov
sbb
sbb
lahf
or
adc
jmp
cli
mov
out
jns
dec
lret
sbb
iret
cmp
xchg
add
pop
mov
sarb
arpl
or
pop
xor
sub
mov
jle
xchg
in
push
and
lret
jge
ret
jle
mov
pop
and
pop
add
mov
xor
push
addl
jp
adc
adc
sbb
dec
mov
mov
sbb
pop
xlat
outsb
nop
neg
popa
lcall
pop
imul
stc
sub
inc
push
add
dec
jo
daa
jp
aaa
rcrb
xor
lock
dec
sub
sbb
lret
dec
cltd
in
push
add
lret
push
iret
mov
and
adc
adc
and
sbb
dec
adc
lods
pop
mov
movsb
mov
and
jbe
inc
sbb
dec
repz
fdivl
add
loope
push
jae
mov
and
push
or
testb
or
into
rcll
cmp
cwtl
pop
mov
aas
pushf
imul
je
jecxz
add
bound
incb
dec
jmp
xchg
sub
pop
mov
inc
movsb
pop
shll
xchg
int
push
mov
pop
xor
testl
aam
xchg
pop
addr16
xor
adc
xor
pop
cmc
addr16
mov
imul
cwtl
imul
pop
and
push
aad
push
mov
rol
in
xchg
mov
jp
fidivrl
adc
xchg
pop
pop
xchg
sbbb
mov
test
push
cld
mov
in
outsb
dec
mov
mov
jne
cmp
mov
and
xchg
icebp
inc
lret
inc
xchg
xchg
lret
mov
test
xchg
daa
lods
jno
arpl
jmp
stc
fdivrl
mov
sbb
mov
mov
mov
or
jp
bound
mov
xor
sarl
pop
jno
cmpsb
iret
pop
jmp
pop
mov
nop
push
lcall
sarl
int
inc
dec
adc
rcrl
call
in
xchg
or
jne
ret
pop
sub
inc
std
mov
inc
mov
in
dec
scas
jae
sub
dec
movsb
in
call
fwait
jno
roll
lds
dec
dec
jae
lea
xor
xchg
out
mov
mov
enter
outsl
dec
cmp
inc
in
js
cmp
sbb
out
push
mov
pop
lods
mov
je
xchg
mov
or
inc
mov
dec
enter
or
cld
mov
mov
push
pop
xchg
subb
dec
leave
ljmp
sub
add
nop
lods
pop
stos
and
pop
add
enter
push
loope
fs
pop
add
xorb
enter
test
subl
in
out
scas
fistps
movsl
movsb
mov
lods
mov
and
push
aad
test
aad
cmp
add
xchg
pop
xchg
fidivs
lods
test
cld
fwait
test
fstps
fists
in
mov
in
std
or
and
mov
cld
dec
push
shll
out
mov
cmp
jge
push
hlt
push
jnp
pop
sti
js
xor
fistpll
cli
or
das
push
out
cltd
inc
mov
jo
std
dec
mov
jb
decl
add
sbb
bound
xchg
in
popa
cmp
add
jg
in
repz
mov
mov
std
sub
jmp
shrb
jg
and
dec
icebp
scas
sub
ds
les
out
js
xchg
testl
cmp
sbb
inc
inc
push
adc
fidivrl
mov
xor
aad
or
mov
inc
test
insl
push
cltd
inc
ret
movsb
mov
adc
shrb
loope
test
dec
nop
and
out
inc
dec
lret
push
mov
inc
outsl
sahf
fucomip
add
out
out
and
call
inc
repnz
xchg
inc
xor
cs
inc
iret
mov
arpl
daa
add
imul
adc
scas
lret
lea
inc
inc
fs
sarb
adc
ss
push
pop
hlt
and
pop
push
pop
jo
push
jmp
mov
mov
sub
mov
leave
fcompl
adc
mov
push
test
movsl
fwait
mov
pop
leave
repz
scas
into
jmp
hlt
and
inc
fildl
cmpsl
add
xchg
mov
mov
addr16
ss
out
push
or
mov
aaa
jmp
scas
lods
and
lahf
shll
lret
cmp
inc
sub
or
cmp
stc
movsb
fwait
add
sub
push
imul
inc
out
sub
xor
mov
sbb
push
and
fisttpll
shl
pop
jo
std
sub
sbb
pop
inc
mov
aas
repnz
mov
fs
mov
push
dec
adc
call
test
add
popa
sbb
add
repnz
addr16
or
xor
add
mov
mov
pop
push
imul
clc
cmp
rolb
pop
mov
loope
test
in
stos
hlt
rol
into
xorb
rcrl
jp
inc
ss
mov
jne
cltd
insb
push
push
lods
test
call
in
and
scas
xor
mov
mov
jmp
cmc
adc
mov
cmpsb
iret
dec
pop
mov
pop
add
pop
imul
mov
imul
rcrl
fiadds
cltd
popa
adc
lods
rcll
mov
fsub
sub
jb
mov
pop
hlt
je
fisubrl
sbb
scas
push
aad
test
mov
cmpsl
roll
dec
ja
loop
loopne
stc
das
fnsave
loope
test
sub
sbb
mov
xchg
push
mov
lret
xor
in
mov
mov
repz
jle
adc
mov
stos
pop
and
addr16
sub
and
lods
aas
pusha
repz
out
repz
push
and
cwtl
insl
xchg
aas
jge
ret
adc
sub
rclb
inc
test
jns
dec
pusha
fs
lret
addr16
out
mov
mov
insb
arpl
popa
loope
sub
stos
cmc
je
xchg
or
add
push
and
daa
rorb
lret
loopne
xchg
inc
int3
addr16
out
sahf
sbb
push
lahf
icebp
jl
inc
lahf
add
sbb
mov
adc
inc
pop
pop
mov
mov
xchg
loope
mov
pop
hlt
lods
aas
push
cltd
xor
ss
or
mov
jle
imul
pushl
xlat
movsb
add
mov
in
add
xor
ss
inc
mov
mov
or
mov
or
sti
sahf
sub
outsb
ss
xchg
push
mov
mulb
mov
cmp
fistpl
mov
mov
inc
faddp
xor
mov
cmpsb
dec
ljmp
cmpsb
mull
add
push
arpl
loopne
popa
lret
ljmp
ror
addr16
popa
rcl
fcompl
rclb
mov
inc
in
lret
add
sbb
push
sbb
pop
negl
mov
or
scas
pop
jp
aad
aas
imul
xchg
mov
sarl
jge
outsl
cmp
push
shll
mov
shlb
ss
inc
loopne
sbb
dec
mov
cmp
mov
lds
sub
in
jbe
imul
ret
sbb
sub
into
stos
mov
cmp
cmpsl
jb
test
dec
jno
and
cmp
adc
dec
notl
mov
pop
cmp
popa
jle
push
add
sbb
bound
imul
jge
sub
cmc
idivb
add
mov
mov
fwait
out
push
cmpsl
pop
sbb
lock
inc
arpl
leave
inc
or
mov
dec
hlt
gs
rcrl
pushf
pop
cmc
mov
xor
mov
add
jnp
cmpxchg
sbb
jmp
jo
push
mov
jnp
mov
mov
jnp
loop
pop
adc
xor
cmp
fwait
push
xchg
xchg
xchg
scas
mov
ret
cmp
dec
test
inc
inc
sub
out
jnp
jge
imul
pushf
test
jmp
jns
lret
xchg
push
push
loop
push
add
cmp
enter
mov
jo
inc
rcr
ds
mov
add
lea
mov
pop
fbstp
pop
mov
sub
andl
rorb
insb
dec
test
in
dec
insl
test
inc
out
ja
xchg
xor
mov
or
es
mov
jg
repz
aad
testb
movsb
js
stc
jns
inc
pop
push
adc
push
into
sbb
fucomip
dec
inc
fsts
and
fmulp
mov
cmp
je
pop
pop
adc
ja
push
inc
jns
popa
daa
lods
mov
lret
push
movb
mov
add
imul
fnstsw
subb
mov
outsl
mov
shrl
mov
orl
movsb
je
pop
pop
xlat
sub
das
frstor
mov
das
fldenv
mov
call
mov
movsl
ljmp
inc
inc
cwtl
mov
xchg
mov
test
pop
mov
xchg
cwtl
out
mov
fildl
cmp
sbb
mov
pop
sub
xor
push
inc
test
out
inc
insl
fadd
or
cmp
jnp
push
aad
mov
jno
xchg
jmp
sbbb
push
or
mov
dec
loope
xchg
cmp
mov
dec
jbe
aaa
inc
cli
pop
sub
cmp
jne
dec
daa
mov
fmuls
lahf
push
sub
fcomps
leave
sbb
data16
popa
mov
sbb
mov
sub
and
xorb
lds
mov
push
cmpsb
adc
nop
adc
xor
adc
mov
pop
scas
cmp
cld
inc
jle
mov
push
cmp
mov
in
jmp
mov
or
add
hlt
inc
movsb
add
mov
dec
or
hlt
mov
imul
inc
sub
and
out
dec
cmp
mov
sahf
cmp
ficompl
sbb
sub
fwait
and
and
jnp
cmpsb
in
pop
in
iret
mov
mov
sbb
dec
popf
push
inc
xor
dec
and
dec
inc
daa
test
push
out
add
inc
push
cli
bound
push
das
das
xchg
movsb
mov
push
mov
push
in
les
push
pop
jnp
mov
aam
mov
cmp
mov
jecxz
out
in
and
push
xor
or
sub
jo
mov
add
xor
mov
and
icebp
jecxz
cmc
dec
cwtl
jmp
push
push
pop
inc
add
dec
out
sbb
mov
mov
rolb
or
out
and
js
or
mov
dec
or
js
enter
inc
dec
aam
mov
mov
xchg
jge
adc
pushf
push
pop
fistl
fwait
xchg
fildl
xor
bound
gs
das
outsb
mov
sub
arpl
clc
cld
cmp
fdivr
pop
add
and
pop
cmc
mov
aam
inc
or
pop
pop
jae
add
popf
mov
sbb
adc
lea
sub
or
lock
xor
in
decl
jecxz
sbb
push
iret
or
ret
sub
int3
add
ret
jae
ret
jmp
ret
rcr
movsb
sub
imulb
mov
xchg
sahf
stc
cmc
sahf
or
inc
enter
xor
shrl
sti
stos
sbb
bound
lahf
out
into
xor
sbbl
jo
dec
xor
call
lahf
lods
push
and
das
rolb
push
je
pop
mov
lahf
ljmp
popa
and
inc
push
sbb
scas
lret
push
in
lds
pop
jle
add
jl
or
pop
pop
xchg
push
ret
ds
nop
ss
cmpsl
jle
dec
sbb
nop
pop
popa
or
test
jle,pt
div
mov
ljmp
jno
jge
test
lret
mov
fs
inc
loope
test
lock
ss
pop
leave
ss
or
mov
es
push
cmpsl
out
or
movsw
mov
or
cmp
or
sub
iret
jmp
popa
jns
fcom
sbb
dec
ds
xor
imul
insb
inc
out
mov
cmp
jg
sbb
in
cmp
in
mov
adc
push
out
dec
cmp
sbb
fstl
push
push
add
cmp
rolb
xorl
ss
lods
imul
dec
mov
inc
sub
sti
sbb
adc
stc
clc
xor
pop
sub
pop
out
dec
dec
mov
jp
fistpll
push
push
dec
xchg
mov
fdivs
bound
out
out
adc
cmp
xchg
std
sarl
arpl
orl
xor
leave
and
push
ret
pop
sbbl
sbb
add
jno
loopne
cmp
lret
sarl
leave
xor
popf
out
loopne
mov
cmpsl
icebp
xor
inc
push
xor
movsl
push
repnz
test
pop
das
stc
test
outsl
bound
imul
push
xlat
pop
insl
xor
xor
ret
ss
insb
and
sbb
sti
lods
stos
mov
mov
add
daa
jecxz
mov
je
inc
inc
test
stc
inc
pop
dec
lret
jge
std
add
cmp
int3
out
xor
add
xchg
leave
ret
pop
xchg
adc
fbstp
aaa
in
dec
std
xchg
xor
mov
scas
stos
sub
out
daa
cmpsb
cwtl
jge
push
lahf
jle,pn
cmpsl
icebp
jns
and
mov
jecxz
add
jne
mov
mov
hlt
lret
cmp
test
mov
cld
sub
xor
or
and
add
fwait
push
adc
xor
das
call
xor
rcrb
xchg
xchg
aad
dec
test
out
mov
cmp
cmp
pop
adc
data16
push
and
pop
ja
fnstenv
xlat
scas
xor
xor
sbb
mov
add
test
subb
inc
clc
inc
enter
sub
mov
or
sbb
frstor
push
or
roll
incb
add
add
iret
adc
xor
jecxz
adc
cmp
pop
insb
das
pop
arpl
fwait
dec
lods
aas
mov
xor
adc
push
mov
mov
fs
dec
stc
push
mov
cmp
and
cld
pushf
clc
pushf
cmp
test
add
xchg
mov
xchg
jb
mov
jo
loope
pushl
cmp
sub
adcl
sbb
aam
push
cmpsl
das
push
jb
popf
sbb
loopne
decb
sbb
or
mov
and
sub
pop
test
cltd
xor
or
or
mov
faddl
fbstp
ret
fiadds
out
push
fwait
clc
inc
mov
mov
lea
sti
int3
pusha
fldl
dec
out
popa
jle
ljmp
sub
imul
jnp
aas
jl
xlat
lds
pop
and
dec
jnp
inc
popa
adc
push
cmpsl
data16
inc
arpl
xchg
sub
aad
pop
dec
inc
mov
pop
daa
mov
mov
stos
xchg
xchg
out
repz
mov
stos
rcrl
adc
mov
push
cmp
xor
sub
into
dec
mov
insl
in
scas
shl
or
imul
inc
leave
and
push
xor
ret
mov
jge
cmpb
xchg
cmc
movb
or
cmpb
sbb
frstor
add
jno
fs
jecxz
mov
jne
push
mov
hlt
sarb
inc
or
test
fimuls
jne
ljmp
xlat
dec
out
imul
dec
mov
add
ja
push
xchg
mov
cmpsb
and
leave
shr
jne
out
jne
jnp
jl
adc
push
stos
or
int3
cwtl
jle
add
xchg
into
cmpsb
and
sbb
cmp
std
ds
dec
out
nop
je
dec
shrb
nop
xchg
jo
ret
adc
mov
xchg
xor
sub
jle
push
push
mov
adc
subl
lea
push
jecxz
movb
imul
dec
xchg
stos
ret
mov
adc
pushf
or
push
pop
xchg
das
arpl
std
out
xchg
mov
or
xor
sub
jmp
jbe
je
sub
or
cmp
sahf
add
add
push
dec
cld
dec
push
pop
xor
sahf
mov
sahf
and
cmp
lds
popf
dec
mov
fwait
scas
out
int3
vaddsubpd
mov
xchg
dec
fs
repz
mov
clc
push
xchg
xchg
pop
sbb
xorl
lret
mov
xchg
ss
sub
and
gs
sti
sub
lcall
lret
fs
dec
cmp
or
xor
mov
push
jb
mov
mov
xor
and
sbb
mov
out
lds
sbb
in
add
inc
ljmp
add
loope
mov
cwtl
test
mov
sbb
in
clc
pop
dec
push
sbb
fwait
cli
xchg
pop
loopne
mov
mov
loope
shll
mov
imul
scas
into
cmp
jae,pn
add
lret
push
mov
scas
dec
push
aad
in
cmp
or
add
xchg
mov
hlt
adc
jns
mov
popf
xchg
add
mov
push
addb
mov
inc
jmp
loop
xor
push
mov
test
cld
shrl
insb
mov
jle
clc
cmc
dec
xorb
stos
stc
xchg
mov
clc
mov
ds
add
leave
add
insl
pop
test
sbb
dec
pusha
inc
inc
lods
adc
push
inc
inc
stc
jne
je
cmp
mov
mov
jmp
inc
mov
cmp
jecxz
pop
push
imul
mov
mov
inc
jno
in
lcall
sbb
pop
loope
push
sbb
lods
pop
add
test
mov
and
cmp
mov
mov
into
xor
push
lret
out
mov
push
lea
lea
sub
hlt
push
inc
push
mov
int3
lret
cmp
sbb
fstpt
les
jns
push
sbb
mov
nop
mov
inc
pop
push
push
scas
cwtl
rclb
and
jb
inc
imul
icebp
adcb
lods
push
std
stos
repz
mov
add
xchg
shlb
mov
mov
push
mov
hlt
lock
inc
rorb
xchg
cwtl
mov
pop
rcrl
fcomp
pop
inc
lret
fwait
scas
or
stos
mov
imul
loopne
nop
jbe
enter
pop
push
dec
jecxz
loop
jne
ret
xchg
mov
mov
mov
je
shrb
pushf
push
call
scas
sar
xchg
push
sub
and
jmp
inc
mov
out
adc
mov
ljmp
push
aaa
punpckhwd
push
and
pop
and
and
sbb
xchg
sub
xlat
mov
xchg
fcoml
out
shrb
ja
pop
add
loopne
jbe
fsubrp
ret
push
xor
es
ljmp
loope
shl
scas
addr16
lahf
popa
jae
sub
ror
bnd
pop
mov
ja
inc
jg
mov
cmp
adc
mov
sub
push
scas
lahf
mov
ljmp
add
mov
sub
sub
mov
push
clc
push
rolb
sub
js
rolb
int
mov
push
je
jmp
icebp
std
sbb
or
push
adc
pushf
push
mov
in
add
sub
lea
mov
test
and
and
aaa
repnz
mov
pop
pop
sarl
in
sbb
sbb
std
testb
mov
lahf
mov
aas
jg
test
pop
sbb
rclb
sub
cmpl
jmp
or
mov
stos
xor
push
fwait
loopne
addr16
mov
pop
lods
sub
hlt
rcr
nop
mov
dec
pop
cmp
nop
mov
aad
and
es
pop
pushf
pop
jge
push
jmp
addb
jge
movsl
mov
mov
adc
xorb
sub
mov
stc
mov
dec
scas
xlat
fs
fisubs
jl
jg
or
in
in
sarl
xor
push
rcrl
wbinvd
jns
data16
imul
mov
fisttpll
dec
sbb
cmp
int3
cltd
xchg
cmp
nop
push
push
cmpsl
in
jbe
rcl
hlt
aad
sbb
insb
xchg
push
popf
ss
es
jbe
push
in
xlat
negb
jp
xchg
pop
ja
icebp
sub
cmp
das
dec
mov
cmp
movsl
cmpsl
or
aad
mov
aad
adc
hlt
clc
dec
jns
mov
inc
xor
popa
into
in
jp
popf
aad
lods
sbb
test
or
mov
mov
and
sbb
cmp
shlb
insl
push
test
test
jle
idivl
xchg
inc
jecxz
sbb
push
into
aad
inc
not
adc
cld
push
lea
into
cs
mov
insl
in
movl
cs
in
cmpsl
pop
lods
inc
cmp
scas
push
add
shlb
aam
stos
inc
repnz
push
subl
data16
inc
imul
in
mov
cmc
and
sbb
in
je
mov
mov
repnz
clc
sbb
idivb
mov
fmull
sbb
dec
aaa
mov
sub
pop
js
mov
sub
std
leave
mov
and
insl
ret
out
lret
xorb
fidivl
aaa
shll
jno
pavgb
out
xchg
int
movsl
fisttps
or
std
movsl
hlt
xor
adc
dec
mov
lods
mov
and
inc
out
insl
push
pop
push
cwtl
mov
fstps
stc
jge
outsl
aam
pop
dec
cltd
scas
push
xchg
jne
dec
not
add
pop
aad
arpl
divl
push
sbb
mov
inc
fisubrs
dec
lea
std
frstor
mov
pop
push
jbe
cli
mov
sbb
xchg
xchg
jno
mov
popf
xchg
rorl
fwait
adc
fisubrl
push
mov
aad
je
stos
pop
shll
outsb
loopne
push
sub
pop
in
lea
push
mov
xchg
and
mov
lcall
mov
fnstcw
xor
repnz
add
loop
sti
lea
mov
jge
cmpsl
fisubl
inc
sub
cmp
mov
jnp
xchg
sbb
cmp
push
adc
lahf
pop
lock
xor
push
std
popa
cmp
je
sbbb
iret
arpl
cwtl
or
imul
or
adc
out
sbb
pop
outsb
mov
repz
mov
scas
xor
lods
scas
mov
mov
adc
out
push
fimull
aas
adcl
pop
jno
in
push
xchg
lds
ljmp
xchg
mov
sbb
icebp
lret
int3
out
pop
lods
call
push
lea
ja
test
sbb
pop
repnz
or
lods
int3
inc
in
clc
adc
and
sahf
movsb
xchg
or
xchg
and
mov
and
fs
in
in
aas
xchg
inc
insb
mov
pop
inc
iret
dec
inc
dec
lds
push
xchg
mov
mov
cltd
adc
push
sbb
adcl
cs
mov
enter
mov
or
outsb
dec
dec
std
and
jo
int3
and
fstl
cmpsl
push
ret
add
mov
pop
in
fldenv
sub
rcrb
lds
xchg
add
or
sbb
test
movsb
or
add
outsl
push
cli
sbb
or
insl
jp
mov
sbb
popf
mov
pop
xor
test
or
xor
subl
fnstsw
insl
fsubrs
xor
and
dec
xor
mov
jl
xor
addl
dec
std
jle
es
or
mov
xchg
jbe
mov
mov
mov
ja
rorb
hlt
xorb
lock
sti
pop
mov
ds
mov
js
lods
push
fmull
dec
cmp
das
imul
fmull
repz
test
enter
imul
pop
testb
push
mov
or
and
and
popf
lahf
test
xor
lcall
scas
inc
lahf
pop
mov
cmp
cmpsl
and
cmp
mov
pop
push
xchg
mov
leave
mov
jmp
test
push
push
test
outsb
push
sti
ja
pusha
nop
repz
jle
outsb
test
sub
push
jno
cmp
jmp
jne
fisubrs
add
or
insb
jp
add
or
negb
out
nop
inc
cli
outsb
ja
stos
add
jo
shrb
lods
je
add
xchg
clc
fwait
loope
inc
movsb
adc
popf
aam
mov
sbb
sbb
mov
jmp
adc
jbe
xor
sbb
push
add
pop
push
repnz
cmovge
jl
insb
cmp
adc
dec
pop
dec
scas
sub
popa
jl
xchg
adc
dec
cld
push
xor
jbe
cli
adc
ret
clc
mov
int
shrb
jmp
pop
int3
or
in
mov
js
rcl
les
jecxz
into
aad
cmp
jmp
lods
shlb
gs
xchg
out
js
les
lcall
shlb
mov
loop
fdivrl
sbb
or
xchg
andl
and
cmp
jecxz
gs
movsl
scas
xchg
lods
pop
mov
pop
mov
pop
pop
sub
jno
push
outsl
jmp
lods
insb
dec
ljmp
xchg
add
pop
stos
jge
adc
pusha
sub
mov
adc
arpl
mov
jns
and
add
movsb
rcr
push
jg
jle
mov
fwait
icebp
out
add
cmp
push
out
xchg
add
mov
aas
addr16
cmp
push
jne
adc
sub
inc
push
rcr
rolb
pop
loopne
push
into
sbb
ds
and
in
xchg
xorl
inc
lahf
sub
dec
xchg
or
sbb
mov
cld
jae
sti
add
dec
push
sbb
jp
push
adc
push
or
dec
sub
push
in
pop
dec
or
int3
sbb
shlb
ja
dec
call
aad
mov
adcb
js
or
movsb
das
cltd
ss
push
aad
testl
es
int
mov
mov
sti
xor
lock
inc
sbb
dec
inc
jb
adc
pop
fwait
pop
xchg
sub
xchg
add
inc
lretw
mov
adc
fwait
orl
orb
mov
cmp
dec
pop
adc
jg
jmp
lods
sbb
ja
jns
or
aam
xchg
sub
je
xchg
dec
out
xchg
cmpsb
or
pop
jge
sbb
adc
arpl
jnp
xor
inc
xor
enter
or
ret
int3
push
shll
leave
mov
mov
mov
xchg
dec
xorl
push
data16
sub
call
and
les
aaa
fiadds
mov
xchg
xchg
pop
in
jo
int
add
repz
cmp
je
xchg
xchg
dec
cmpsl
sti
jp
adc
fdivrp
or
dec
mov
cmp
xor
xchg
jl
mov
mov
dec
cld
fistps
push
mov
sbb
xor
stc
mov
cli
or
jno
test
push
into
xor
push
lds
mov
jae
push
mov
lds
dec
mov
imul
adc
fistpl
jno
add
mov
push
roll
push
xor
fisubrs
inc
inc
mov
stos
cmp
mov
hlt
sti
fcomip
add
stc
cltd
int3
call
addr16
pop
test
subb
addr16
es
jb
jns,pn
in
sarl
rclb
sub
xlat
mov
pop
out
and
adc
dec
pop
jno
sub
sbb
fwait
cmpsl
mov
xchg
fidivl
outsb
test
daa
pop
ret
in
out
ja
push
movsl
xor
mov
cmpsl
std
mov
sahf
es
ret
jge
and
sbb
sub
cmp
roll
aad
jl
testb
adc
xor
or
pop
es
jnp
add
pop
pop
add
lret
sti
jl
mov
dec
sbb
and
and
stc
movsb
jnp
pushf
fisubrs
repz
mov
fists
jns
jnp
cmp
xchg
mov
xchg
push
lods
mov
dec
xorb
sub
xlat
stos
les
jl
leave
mov
inc
repz
movsl
decb
test
jge
shrl
in
dec
mov
inc
lods
push
fists
adc
xor
sub
mov
cltd
arpl
jmp
add
inc
push
sub
xchg
aam
mov
push
imul
jb
sub
iret
aad
hlt
orb
fisubrs
and
filds
popf
cmc
repz
jns
movsb
nop
xor
rorb
sbb
add
dec
fs
clc
clc
test
xor
lods
adc
scas
lcall
dec
test
mov
xchg
and
xor
in
lahf
daa
xchg
xchg
mov
mov
sbb
add
js
fs
sbb
bound
mov
lea
aam
mov
xchg
jo
sarl
std
push
and
pop
scas
jp
test
jmp
cmp
xor
sub
mov
hlt
push
push
pop
mov
scas
push
push
arpl
ds
add
mov
aam
and
subl
xor
daa
mov
je
aad
sbb
lret
scas
testl
push
repz
out
ds
xchg
gs
pop
adcb
cmp
push
and
adc
add
jmp
and
shlb
xor
cmp
xor
ret
leave
dec
pop
push
aam
jle
outsl
outsb
inc
in
jne
stc
xor
fs
mov
mov
sahf
ss
xor
pop
xor
loop
cmp
imul
fadd
lds
ds
or
or
xor
loop
sub
or
imul
adc
dec
pop
push
xchg
mov
sbb
in
adcl
mov
xor
ljmpw
jl
lea
inc
xor
loope
cwtl
scas
iret
das
negb
and
jge
cmp
fnstenv
push
hlt
mov
jns
xor
dec
jg
mov
adc
push
test
mov
rcll
pop
mov
xor
fs
inc
mov
sbb
mov
mov
mov
cli
lret
mov
cli
stc
cmp
add
or
test
fcmovbe
dec
int3
sahf
xor
out
fdivr
push
data16
call
cmp
push
pusha
dec
cmp
sbb
loop
arpl
dec
push
out
leave
adc
mov
xchg
insb
push
xchg
insb
pop
xchg
scas
enter
mov
push
xlat
adc
test
or
push
pop
or
jns
inc
hlt
scas
popa
mov
xlat
cmp
jo
ret
lcall
jmp
lret
outsb
or
fcmovnb
imulb
aaa
push
jns
pop
xchg
pop
jns
push
mov
dec
sub
clc
enter
push
cmc
out
inc
sbb
add
sub
stos
lods
adc
mov
rcr
sub
enter
fcomps
lret
sbb
mov
bound
popa
jl
leave
or
push
test
mov
sbb
mov
rcll
mov
nop
cmpsl
pop
aad
jmp
dec
lret
mull
push
mov
adc
push
shlb
std
bound
in
cwtl
push
rcr
sbb
lods
adc
push
movb
das
jmp
jecxz
or
or
call
jns
xchg
mov
adc
lods
cmpsb
add
test
fwait
push
adc
aaa
mov
sti
pop
xchg
inc
mov
mov
lcall
in
out
ja
mov
add
loop
test
call
fs
pop
adcl
xchg
mov
ret
out
aas
fwait
fs
or
lea
mov
push
mov
into
rcrb
lods
add
cld
outsb
ljmp
mov
sub
lcall
xchg
aam
fmuls
into
testb
lea
xor
and
insb
scas
cltd
std
adc
mov
jns
mov
sbb
pushf
mov
lret
or
cmp
cmpsl
int
lods
or
cs
icebp
mov
fdivrp
test
jns
adc
sub
shl
adc
es
imulb
clc
shr
xor
and
xchg
mov
out
or
inc
mov
popf
xchg
xor
sub
lahf
push
lcall
and
mov
mov
adc
sbb
sti
push
lods
or
fdivl
adc
xlat
daa
jg
sub
cmpsb
dec
mov
adc
je
lahf
orb
jecxz
push
pushf
inc
inc
insl
jmp
sbb
and
mov
jp
sbb
ficomps
jg
pop
test
cld
test
loope
stc
sbb
fcmovnb
sbb
push
test
out
inc
jp
cmp
es
push
ss
sbb
sbb
pop
icebp
xchg
pop
xchg
call
mov
xor
add
icebp
jle
mov
cli
xchg
sahf
pop
mov
pushf
push
pusha
out
add
movsl
and
xchg
enter
push
pop
aam
ret
cmc
jl
and
adc
push
fcomp
jne
and
ss
insl
pop
xchg
jnp
cmc
scas
fldlg2
xchg
mov
subb
inc
mov
push
sbb
test
repnz
das
inc
rcrb
jno
fsubr
popf
sbb
jle
pushf
mov
xor
xbegin
dec
in
or
subl
pop
cmp
scas
xor
or
leave
jl
jnp
lods
mov
adc
add
xchg
les
call
sbb
mov
adc
mov
dec
mov
in
popa
lret
adcl
push
inc
cmpsb
cmp
and
push
push
push
ds
push
lock
cltd
js
fnstcw
repz
or
cmpsl
push
les
stc
lods
data16
xor
or
sub
and
push
sbb
sub
sub
bound
sbb
imul
inc
xor
nop
push
sub
les
cmc
cmp
decb
mov
push
leave
outsl
push
das
mulb
and
scas
lahf
and
rorl
arpl
popa
jle
jae
pop
mov
sub
aam
jle
sbb
jge
insb
push
test
jl
mov
pop
int
mov
jp
pop
dec
mov
mov
mov
test
call
enter
pop
lret
out
out
push
xor
fadd
scas
xlat
xlat
bound
jno
xor
pop
cmp
movsb
mov
mov
scas
mov
cmpsl
sub
imul
mov
std
addr16
outsb
notl
bswap
and
sbb
or
movsb
sbb
and
push
mov
loopne
sbb
insb
sbb
jle
sbb
fldt
pop
add
add
stc
jg
sub
inc
movsb
rclb
xor
pop
cmp
jo
mov
mov
mov
gs
push
lds
rolb
jo
lods
xchg
xor
add
jle
imulb
or
push
cwtl
popf
mov
gs
leave
xchg
xchg
enter
movb
push
mov
aad
das
shlb
pop
xor
dec
jge
lcall
cmp
adc
mov
testb
shrb
aaa
rorl
pop
mov
jg
inc
test
scas
add
outsb
pop
or
pusha
flds
bound
mov
movsb
xchg
pop
test
xchg
sub
sub
pop
rep
arpl
mov
int
add
pop
call
xchg
inc
pop
mov
jne
sbbl
repz
js
int3
mov
popf
jb
ret
lret
sahf
test
xchg
aas
outsl
scas
jb
xchg
sbb
in
mov
loopne
vpaddq
or
push
pop
jnp
repz
mov
and
inc
outsl
inc
pop
dec
ret
insb
lods
xor
adc
push
lock
adcb
add
jno
cmpsb
mov
fstpl
sbb
daa
xchg
push
xchg
shll
adc
and
je
test
popf
xchg
add
mov
in
popa
or
jo
test
arpl
roll
mov
jl
into
ss
mov
mov
mov
cmp
sbb
test
nop
pop
mov
lds
xchg
loop
cli
jmp
pop
repz
cwtl
aaa
outsl
mov
dec
xor
push
dec
push
dec
add
pusha
mov
jne
push
pop
jne
or
iret
or
xorl
jno
lods
test
sbb
pop
mov
cmpsb
mov
lock
pop
aas
cli
lahf
jle
data16
cmp
push
jl
jae
mov
in
fwait
popa
xchg
lea
mov
push
pop
jmp
mov
iret
test
dec
je
jp
pop
lret
or
pop
mov
pop
jl
outsl
jmp
xchg
xchg
cmp
test
and
and
mov
cli
and
pop
fs
call
int3
add
mov
cmp
ret
xchg
imul
rcr
or
mov
add
mov
push
mov
add
push
pop
ss
enter
jp
ss
shrb
sub
sbb
and
and
jg
mov
or
mov
test
insb
adc
sbb
sbb
popa
jbe
push
sub
fdivrl
aas
dec
jno
cmp
sub
imul
lret
lods
mov
push
or
lock
push
sub
loopne
sahf
pop
pusha
fsubr
sbb
inc
arpl
xor
std
push
test
imul
pop
ljmp
xchg
xacquire
aad
mov
dec
xchg
mov
enter
xor
sub
jmp
faddl
sbb
xor
dec
xor
and
das
out
cltd
loopne
push
nop
sub
cmpsl
out
xchg
cmp
mov
push
shll
cltd
add
out
subl
sbb
mov
call
js
add
paddd
rcrl
xor
out
add
add
test
inc
adc
int3
sti
popl
andl
sub
push
mov
and
or
or
cmp
jnp
jecxz
bswap
push
das
push
dec
imul
dec
sarb
push
rclb
psrlw
insl
inc
repnz
xchg
lds
scas
scas
shr
dec
jmp
stos
cmpsl
dec
leave
jns
jge
movsb
test
out
dec
and
jl
in
pop
mov
add
mov
mov
pop
cltd
test
daa
mov
out
jge
out
jb
mov
xor
testb
mov
stc
or
aas
jl
or
gs
lock
fcmovnu
mov
adc
ret
xor
imul
roll
push
lock
xchg
mov
insl
add
jg
jae
popl
dec
ret
cmp
out
pop
mov
adc
mov
mov
call
pop
fs
jge
add
lret
jp
inc
jbe
lret
cmc
pop
pop
test
jmp
das
xchg
jbe
jo
push
fdivrl
xor
cmp
xchg
scas
add
inc
inc
and
add
xchg
test
repnz
in
mov
mov
adc
push
sahf
or
imul
dec
das
push
icebp
adc
in
pop
inc
xor
cmp
out
mov
loope
fcmovne
faddl
cmp
subl
ljmp
push
divb
ds
out
inc
in
mov
mov
jp
stos
int
ficoms
mulb
int
jecxz
mov
lret
dec
mov
mov
jo
cmpb
test
aaa
or
imul
rclb
mov
jae
push
push
out
sbb
push
sbb
lret
inc
ds
leave
adc
jp
mov
sub
cli
fcomip
fs
lods
dec
movnti
dec
xor
addl
xor
out
jge
cld
dec
dec
cltd
dec
rorl
fiaddl
jbe
or
mov
mov
push
pusha
add
mov
xchg
cld
dec
and
aaa
lcall
push
sub
push
out
lods
mov
sub
add
pushl
xlat
adc
sub
cmp
ss
sub
pop
les
jg
mov
mov
push
icebp
pop
xchg
mov
in
into
gs
sbb
mov
loopne
mov
dec
inc
pop
cmp
cmp
outsb
loopne
xchg
xchg
rcll
push
mov
dec
imul
sbb
mov
adc
dec
nop
lds
jecxz
jge
ds
sub
jl
add
lock
test
cmpsb
push
jno
shlb
push
or
mulb
sub
add
lcall
xor
fcmovu
mov
push
jo
and
fistps
adc
popf
into
add
call
inc
aad
add
fcomip
pop
das
dec
icebp
push
sahf
jae
iret
push
cmp
adc
dec
adc
ja
xchg
mov
and
lcall
inc
xor
or
sbb
dec
mov
mov
jp
add
mov
insb
dec
movsl
xchg
ficoml
add
cltd
mov
jl
sub
fldpi
sbb
fs
dec
int3
lods
imull
mov
movsl
pop
push
shlb
xor
add
lcall
fistpll
pop
enter
aaa
shlb
cli
mov
mov
aam
rclb
addr16
push
in
xor
pop
cmp
push
pop
mov
lcall
sub
sbb
xchg
cmp
lea
push
rorl
notb
std
pop
in
mov
sarl
xor
push
and
jno
outsb
iret
mov
cmp
push
pop
aam
std
mov
out
sbb
inc
inc
sub
mov
fcoms
test
cmp
fwait
ror
negb
inc
cmpsl
xchg
not
xchg
loopne
enter
push
mov
repnz
out
mov
lock
add
push
test
and
mov
fs
sahf
test
mov
push
lret
adc
mov
popl
dec
pusha
jns
mov
pop
call
xchg
pop
xchg
test
cmp
adc
lods
pop
xchg
repz
jbe
push
shlb
loope
inc
loopne
fcompl
xchg
inc
sbb
test
jo
jno
mov
notl
test
adc
cmp
sbb
jbe
test
and
add
xor
lret
aam
test
jae
push
adc
pop
or
jno
leave
mov
shlb
mov
dec
push
es
xchg
and
cmp
jp
cmp
mov
enter
jmp
dec
scas
repnz
mov
stos
icebp
jmp
add
lret
pushf
fcoms
adc
dec
push
std
int3
cwtl
test
inc
inc
addr16
dec
inc
cmp
add
jne
mov
dec
push
mov
rcr
lret
scas
ja
je
and
push
lock
bnd
jns
test
aaa
out
add
pop
dec
sub
ljmp
xchg
xor
mov
and
pop
in
mov
mov
movsb
mov
repz
ljmp
mov
add
add
cmpsl
test
ret
in
cltd
and
std
dec
and
xor
stc
fistpll
pop
and
fnsave
mov
xchg
mov
test
les
adc
imul
xchg
pop
push
or
adc
sbb
in
sbb
pop
cmpsb
lds
ss
icebp
cmc
inc
int
stos
dec
mov
rcrl
dec
test
mov
xor
xor
push
sub
pop
xor
add
push
cmp
gs
xchg
adc
cwtl
imul
ret
jnp
stos
or
mov
stos
not
insb
jnp
sbb
or
cmpsl
or
mov
inc
and
pushl
test
jo
mov
sub
mov
lret
cltd
cmpsl
loopne
andl
xor
sbb
stos
sbb
sbb
cmp
sarl
add
jbe
es
and
stos
dec
subb
mov
fsts
test
in
xchg
mov
rcl
pop
inc
push
sub
jno
and
mov
mov
sbb
sub
imul
movsb
ljmp
sbb
pop
addr16
jno
or
and
sbb
xchg
cmp
dec
ret
mov
psraw
test
mov
imul
inc
push
lahf
xor
stos
jg
mov
loopne
jge
repnz
jb
inc
push
inc
sub
cmpsl
push
or
jp
rclb
jecxz
inc
daa
rcrl
rorl
les
jge
mov
addb
xor
outsl
cmp
mov
mov
fisttpl
inc
jnp
xchg
dec
movsl
sbb
lcall
push
test
pusha
iret
dec
mov
pop
imul
sbb
mov
or
mov
cmp
xor
mov
movsb
data16
pop
out
loope
ds
cmp
xor
pop
push
rolb
cmp
sub
push
mov
cmpsl
sbb
lcall
cmp
and
push
cmpsb
jae
out
sahf
xchg
sub
xor
scas
xor
xor
jle
cwtl
xor
dec
inc
lods
sbb
mov
add
lcall
sbb
int3
ret
mov
pop
xor
add
aam
into
out
or
push
std
mov
mov
aaa
lret
push
scas
xchg
shrl
mov
loopne
rorb
fcoms
inc
mov
xchg
std
add
lods
jecxz
imul
push
fistps
mov
xlat
cmp
mov
sub
pop
pmullw
cmp
mov
stos
cmp
fstp
andl
pop
ret
adc
pop
cmp
out
test
in
scas
and
pushf
jg
in
insl
lahf
daa
inc
iret
push
ja
fldenv
mov
xlat
jmp
ret
push
xor
data16
inc
test
fdivrp
in
sub
aad
sbb
jns
fisttps
mov
setp
mov
gs
hlt
cmp
adc
pop
outsb
push
dec
jle
stos
adc
dec
push
fidivl
xchg
hlt
popa
call
mov
and
sarl
out
into
clc
fstps
pop
push
imul
or
pop
and
fsubrs
mov
adc
inc
jnp
push
stos
xor
add
lahf
popf
push
jb
adc
mov
jg
jmp
mov
xor
or
fsubs
aaa
dec
inc
jae
insb
fwait
outsl
inc
mov
jle
jno
das
cltd
or
loope
jmp
xchg
adcb
mov
ret
pop
lret
out
pop
ljmp
xlat
xor
push
or
cli
sub
pop
fcmovbe
int
jmp
xchg
cltd
pop
lcall
add
add
jecxz
test
jbe
bound
ret
lcall
push
push
dec
fiaddl
jmp
out
inc
xchg
in
pop
popa
in
sub
sbb
jle
imul
add
cltd
lea
push
rcll
shll
pop
push
pop
iret
lds
mov
cmp
cwtl
xchg
stos
jle
mov
cmp
insl
outsl
loop
xor
jg
add
mov
or
cwtl
jp
fildll
lds
inc
or
inc
inc
mov
lods
push
shrb
shlb
test
cmc
lahf
daa
mov
push
scas
adc
hlt
adc
lock
mov
mov
sub
jno
xor
lds
aam
fiaddl
adc
push
movsl
jno
mov
lea
lds
mov
pop
lds
xchg
lcall
push
shrb
xor
jg
inc
std
arpl
adc
lcall
loope
sbb
push
dec
ljmp
cmp
ret
mov
insl
testl
lcall
jg
idivl
cmp
daa
int
push
sub
cmp
sti
out
cltd
loopne
frstor
push
jns
cmp
dec
fstl
push
lds
js
push
mov
push
push
xchg
fwait
arpl
lahf
pop
inc
mov
xchg
and
jge
rcl
mov
es
mov
repnz
js
mov
addr16
and
sub
movsl
sbb
inc
add
lret
cmp
sbb
push
test
sarl
rcrl
shlb
xchg
ss
and
mov
iret
xchg
popa
jg
sub
xlat
fdivr
xor
and
clc
repz
shrl
cmp
dec
call
mov
imul
fiaddl
int3
test
and
jns
data16
dec
jp
xlat
aas
jo
or
push
ljmp
sbb
mov
into
outsb
loop
iret
push
loope
or
mov
push
ja
mov
mov
repnz
ljmp
sahf
loopne
lds
add
scas
inc
jae
data16
xlat
repz
pop
test
leave
lahf
sbb
fidivs
repnz
mov
cmp
or
das
cmpsl
fildl
repnz
insl
xchg
shrl
xor
xor
sub
lds
cmp
jp
mov
cmp
xor
cmpsb
imul
or
outsl
stos
fsubp
cmp
sub
std
cld
fs
adc
jno
pop
dec
sbb
ss
xor
out
enter
lock
adcl
mov
sub
inc
pop
aad
cmp
rolb
icebp
cmp
fucomp
shll
lret
icebp
inc
inc
inc
xor
jl
ss
stos
mov
fsubs
daa
jl
inc
ret
push
lock
cmp
insl
mov
jecxz
add
punpckhwd
xor
jbe
sahf
cld
cmp
sbb
jb
pop
fsin
aaa
insb
inc
push
cmp
ret
mov
pop
out
fldcw
sbb
sbb
jno
and
stos
inc
mov
cmp
xor
xchg
or
adc
cmpsb
and
sbb
pop
fisubrl
sub
lock
arpl
incl
push
rcrb
movsl
push
pop
sti
xor
mov
pop
aad
xchg
xor
cmp
cld
mov
push
enter
push
insb
mov
cmp
xor
push
xchg
iret
mov
pop
xchg
data16
mov
inc
xor
pop
mov
xor
dec
mov
cltd
dec
aas
inc
xlat
or
out
push
xorb
mov
mov
leave
push
pop
adc
mov
adc
push
mov
cmp
xchg
jns
adc
lret
cli
in
nop
in
aad
ret
ds
test
xchg
imul
loop
xor
lods
ret
cmp
mov
aas
inc
dec
ds
sbb
dec
pop
push
pop
jge
adc
inc
fiadds
inc
jae
out
int3
dec
shlb
mov
imul
mov
mov
fdivrs
stos
jnp
frstor
and
cltd
subb
repnz
pop
xchg
push
add
gs
aad
add
int
push
mov
in
mov
fiaddl
mov
mov
loop
pop
sbb
jno
rcr
and
sub
xor
cmpsb
sub
dec
xchg
fldcw
jae
rcl
jnp
ss
xchg
enter
shll
xchg
push
sbb
adc
push
enter
pop
dec
fwait
cmpsl
in
cmp
in
add
fcmovnb
inc
pusha
sbb
pushf
or
add
fidivrl
xchg
in
xchg
pop
and
mov
jo
cmp
pop
lods
cmc
push
cs
repnz
xchg
push
fdivl
mov
in
cs
xlat
push
movsl
aas
inc
sub
mov
outsl
pop
scas
jmp
pop
jle
cld
xor
cwtl
mov
sti
jle
dec
pushf
pop
push
in
sbb
repnz
pop
cmp
outsl
push
ret
pusha
mov
leave
push
ljmp
cmp
fsubrs
divb
insb
rcl
out
les
or
push
push
dec
jae
cld
sbb
xchg
mov
pop
and
inc
mov
ret
sbb
jns
ror
xor
lock
sahf
mov
leave
dec
push
ljmp
je
fisubl
les
pop
adc
pop
push
das
movsb
popf
inc
mov
xchg
vmovaps
frstor
mov
lods
jne
das
inc
push
pop
fdivrl
add
sbb
or
sbb
nop
pop
sub
imul
inc
xchg
jnp
push
repz
es
lcall
cltd
pop
mov
cmc
and
nop
cli
and
in
ja
fwait
xchg
ficoms
aad
inc
sahf
shrb
aad
cmc
sbb
dec
push
cmp
mov
repz
mov
ret
in
dec
stc
out
sub
mov
ret
jno
dec
pslld
enter
push
mov
or
jp
arpl
fwait
subb
or
push
mov
loopne
adc
les
jge
lods
or
insb
leave
mov
add
or
add
inc
sbb
fistpll
jmp
xor
inc
scas
sub
sub
pop
mov
bswap
int
cmp
xchg
jmp
imul
enter
jmp
call
mov
sub
sbb
cli
push
dec
ljmp
ret
jg
call
dec
icebp
out
mov
out
mov
cmp
pop
gs
pop
fcoml
fwait
es
call
bound
pop
das
lock
sti
push
mov
std
or
test
sbb
bound
dec
add
arpl
in
or
xor
mov
push
mov
or
jno
insl
sub
xchg
hlt
orb
mov
orl
pop
rorb
push
lcall
ljmp
pop
mov
dec
add
pop
in
cmp
jo
push
sub
ret
pop
push
jmp
pusha
cmpsl
mov
rorb
cs
and
add
aas
fucomp
mov
push
sub
test
fnstenv
scas
push
int
xchg
push
fstpl
jne
jns
jnp
incb
movsb
sahf
divl
daa
out
inc
mov
dec
xor
sbb
test
test
lret
xor
rcrb
jae
push
xchg
je
popa
lret
adc
addr16
xor
daa
fnstenv
ds
pushf
popa
call
mov
leave
iret
mov
inc
jns
ljmp
or
mov
repz
outsl
sbb
fcomps
dec
adc
and
sahf
push
ja
loop
lods
pop
cs
pop
mov
mov
test
sub
cs
aad
ret
mov
dec
lcall
addr16
push
popf
cli
add
dec
jle
push
ret
xchg
test
sbb
sub
lea
imul
push
insl
out
mov
mov
push
and
push
ljmp
jnp
int3
lods
pop
insl
xlat
mov
insb
xchg
sahf
pop
and
or
test
stos
dec
leave
xchg
jo
push
insb
data16
shlb
ljmp
sti
pop
stos
insl
call
cmp
xchg
repnz
addr16
cmp
lcall
or
and
adc
movsb
sbb
gs
xchg
xchg
dec
add
jp
mov
adc
sub
cmp
lret
dec
and
xor
orb
mov
xchg
loop
mov
or
repnz
stc
fnstcw
fstpl
push
dec
js
jae
xchg
mov
inc
outsb
mov
leave
pop
mov
out
push
adc
xor
xchg
mov
lret
push
fadds
lods
sbb
into
lea
lahf
cld
mov
sbb
les
mov
rclb
aad
mov
mov
and
cmp
movsb
aaa
pop
mov
xor
repnz
pop
mov
imul
jecxz
add
mov
or
faddl
jge
or
pop
cmp
or
testb
pop
jns
into
xor
testb
cmp
fstl
push
jbe
outsb
sbbb
adcb
popl
out
dec
or
std
cmp
mov
dec
inc
xor
mov
outsb
mov
cmpsb
mov
dec
xor
inc
jmp
sti
lret
cmp
fdivp
xor
and
das
pop
cmp
lock
orl
mov
mov
add
js
dec
push
add
dec
xor
or
aaa
xchg
inc
add
mov
mov
out
jnp
add
adc
pop
movsl
pusha
sbb
pop
pop
push
push
adcl
dec
add
test
icebp
cltd
and
jge
push
aaa
xchg
dec
test
pop
jo
in
loop
fistpl
adc
mov
lret
cwtl
shrb
mov
mov
scas
push
sbb
push
loopne
mov
pop
jbe
sti
xchg
lcall
rclb
xchg
adc
cmc
cmp
mov
std
ja
les
mov
mov
mov
call
or
pusha
scas
push
inc
int
fwait
in
adc
lahf
sbb
fstps
pop
adc
push
jl
into
jne
mov
jp
pushf
xlat
jge
fs
inc
inc
and
dec
call
aam
push
filds
cmc
jb
fldcw
and
push
jne
decl
xchg
rcr
jecxz
mov
sbb
icebp
fmul
mov
push
imul
adc
xor
test
shlb
aas
std
adc
sub
xchg
lods
mov
imul
aas
xchg
addr16
sbb
shll
ret
shrl
xchg
mov
mov
mov
or
or
outsb
mov
adc
in
insb
fidivs
in
arpl
sti
adc
cmp
movsl
loopne
fs
push
pop
sub
es
jb
movsl
stc
shrl
inc
loope
rdpmc
pop
lea
cld
sti
pop
cmpb
test
push
xchg
or
jp
dec
or
add
pop
aam
xchg
xchg
and
sub
cmpsl
test
cmp
xchg
sub
and
dec
push
test
pop
jb
out
mov
pop
in
push
aam
nop
ss
push
add
outsl
or
movsb
xor
cmp
cmp
rcrl
insb
jne
lds
lcall
lods
dec
mov
xchg
cltd
cs
pop
adc
jns
mov
xchg
ja
lea
jg
jo
dec
mov
outsl
adc
xor
push
sbb
mov
aas
or
mov
push
sbb
jle
sub
dec
jl
sub
mov
shll
movsb
sahf
scas
lret
je
xchg
push
and
enter
in
fs
mov
jo
push
jns
sub
shlb
push
mov
push
push
cmp
lret
sbb
jns
adc
sbb
ss
mov
inc
ret
jp
icebp
xor
mov
mov
mov
popa
jl
aad
lds
int3
aas
push
mov
pop
fcmovu
iret
sbb
sbb
mov
jmp
adc
cs
inc
pop
int
mov
mov
in
mov
rclb
scas
cmp
in
xchg
jmp
mov
aam
or
sub
add
sarb
jnp
imul
push
stos
push
jge
sbb
rorb
or
sbb
jp
sahf
mov
or
dec
sbb
rclb
int3
in
lcall
cs
lods
jp
test
clc
xor
xchg
push
adc
punpcklwd
cmp
imul
mov
jno
movsl
mov
ja
mov
pop
mov
jne
mov
xchg
stos
neg
mov
inc
dec
rcr
test
mov
and
pushf
popa
enter
daa
insb
lods
push
fdivrp
pop
add
das
xchg
adc
xor
pop
ret
clc
ret
movsb
int
stc
or
xor
mov
iret
and
ljmp
lods
jnp
or
outsb
cmpsb
or
mov
cltd
insb
in
or
or
int3
imul
andb
subb
adc
ljmp
jmp
adc
xchg
int
xchg
sbb
test
xchg
test
sbb
cmp
arpl
enter
je
dec
jg
stc
ret
jbe
frstor
nop
fsubl
mov
bound
add
push
xor
loope
lret
mov
xchg
ret
mov
or
rep
xchg
das
sub
sub
fimull
mov
cli
je
fldl
xlat
mov
mov
add
push
push
movsl
repnz
nop
xchg
push
xor
jns
jge
xorb
push
idivb
dec
mov
dec
scas
outsl
mov
aaa
scas
outsb
test
add
loopne
shl
insl
jp
fwait
in
jmp
xor
cmp
jmp
jo
minps
xchg
test
leave
dec
insb
insb
pop
test
ret
sub
in
nop
dec
fstpt
and
test
xor
xchg
movsb
movsl
js
push
jg
pop
xchg
dec
dec
mov
push
repz
xchg
sub
data16
xchg
push
jb
popf
push
repnz
fwait
pop
popa
frstor
sbb
sbb
bound
adc
pop
nop
outsb
dec
clc
sub
jp
mov
in
adc
or
fsubrl
es
or
pushf
mov
out
dec
dec
cmp
mov
cwtl
mov
stos
movsb
jbe
pushf
or
pop
and
movsl
mov
and
mov
stc
mov
loopne
iret
pop
sbb
clc
xorb
imul
mov
dec
dec
rclb
push
mov
lods
jnp
xchg
mov
negl
arpl
sub
jle
add
pop
test
cmpsb
sti
ss
popa
sbb
mov
pop
stc
outsb
stos
jl
jle
push
mov
jp
cmpsb
inc
ljmp
popf
fidivs
sub
push
xchg
lahf
frstor
or
movsl
push
call
push
test
sarb
daa
and
cmpsl
lahf
repnz
loop
cs
fadds
mov
in
dec
add
cmpsl
inc
mov
stos
lea
jle
or
sub
stc
faddl
mov
jl
mov
inc
add
or
ror
movsl
aaa
inc
lock
xchg
cmc
cmpsb
xor
jae
push
hlt
inc
mov
popa
xor
test
push
lods
into
add
scas
add
cmc
mov
scas
movsl
mov
push
in
pop
add
add
mov
fidivs
sub
dec
jno
aaa
cltd
push
cwtl
push
popf
mov
pusha
pop
xorb
cwtl
repnz
dec
mov
or
lret
out
lds
loopne
mov
movsl
jb
mov
fcom
sub
jae
mov
fdivrl
and
add
data16
mov
or
pop
push
lcall
insb
sub
push
cmp
insl
pop
mov
push
je
push
in
sbb
iret
mov
out
fsubrl
daa
in
and
jmp
xor
mov
incb
xor
xchg
inc
dec
jne
sub
push
fcmovnbe
scas
loope
cs
push
in
inc
cld
push
xor
ss
mov
mov
sub
es
mov
sbb
mov
aaa
sahf
stos
popf
or
push
inc
pusha
sub
cli
test
fsubr
jl
mov
fiadds
sub
push
into
lds
push
pop
push
lea
aad
pop
dec
pushf
cmp
sbb
jo
cmp
push
jns
and
adc
in
sbb
xlat
jae
fisubrl
dec
adc
test
enter
jmp
fildl
sbb
dec
lods
dec
fwait
sub
dec
and
pop
sti
adcl
or
xor
out
jbe
mov
and
repz
xor
je
or
mov
ret
jne
cmpsl
cltd
push
mov
adc
insl
mov
xchg
jp
and
loope
les
add
push
cltd
outsl
xchg
pushl
mov
dec
xchg
ljmp
inc
push
pop
xchg
cmp
xor
outsb
cltd
add
addr16
sbb
rorb
and
mov
lods
push
push
outsb
imul
pop
sbb
mov
pop
cmc
cli
sbb
popf
in
cmpl
lret
jecxz
adc
in
mov
pop
fisubrl
pusha
leave
in
mov
fistpl
adc
jl,pt
pusha
clc
push
aas
idivl
ja
jmp
dec
lock
stos
add
mov
inc
mov
testl
cmc
mov
loopne
sbb
sbb
movsl
aam
jg
jecxz
push
mov
sbb
out
das
mov
xchg
jb
into
mov
inc
jecxz
int3
pushf
jle
out
inc
and
jo
sub
xchg
pop
aas
cmp
add
inc
mov
pop
imul
dec
xlat
push
jno
arpl
repz
xchg
pop
xlat
cld
mov
lcall
cltd
decb
test
leave
jg
mov
or
cmc
gs
mov
je
ret
pop
xor
les
lret
mov
imul
iret
xor
pop
mov
repnz
pusha
xor
mov
xor
shll
or
aam
pop
pusha
and
dec
clc
or
aam
call
dec
nop
jbe
insl
pop
fdivrs
add
inc
push
pop
mov
mov
jb
sub
cli
pop
dec
and
push
iret
push
std
test
mov
hlt
mov
imul
and
cmc
xchg
pushf
jns
arpl
mov
cmpsl
and
hlt
jle
sub
sbb
lcall
mov
loop
sub
dec
mov
insb
cmpsb
cmp
mov
ret
cmp
xchg
in
roll
pop
stos
mov
pushf
es
fidivs
fs
sbb
or
xchg
in
std
imul
sub
xchg
and
sbb
fldt
dec
sahf
jnp
mov
jae
fucom
int
lods
sahf
mov
xchg
lahf
dec
ja
pop
dec
mov
outsb
sti
nop
jno
call
pop
jmp
cmp
aad
add
or
cs
cs
push
ficompl
xor
mov
mov
int
insb
and
cwtl
daa
mov
dec
cmp
jmp
pop
addb
ja
lock
cmp
jle
pop
leave
jge
mov
push
popf
cmp
inc
stos
mov
lds
jns
cmp
fiadds
lcall
es
or
xchg
inc
int3
mov
mov
pushl
sbb
or
js
movsl
pop
aam
pushl
jecxz
pop
popf
ss
sbb
jmp
iret
and
into
in
push
lahf
movsb
or
pop
pop
icebp
inc
sub
push
add
arpl
int3
imul
cmp
xchg
daa
icebp
mov
dec
repz
and
ret
es
add
sbb
ret
insb
fdivrl
adc
lods
dec
cld
pop
mov
jno
cwtl
mov
xor
push
xor
mov
mov
out
das
lret
cmp
jnp
mov
dec
insl
jae
les
iret
cwtl
dec
cs
xlat
and
std
aaa
xor
xchg
mov
mov
mov
test
pop
pop
jbe
jbe
in
pop
push
cmp
push
mov
xchg
jmp
data16
mov
xchg
popa
and
pop
mov
mov
fidivl
sub
inc
push
insl
jb
sub
or
pop
ds
loop
or
dec
fisubrl
lcall
push
dec
add
pushf
repz
adc
sbb
fs
mov
or
in
cs
push
xchg
xchg
and
push
sub
hlt
fistpll
xchg
fimuls
sbb
lods
popf
or
fdivs
mov
cltd
mov
bnd
and
pop
pusha
xor
fs
jl
push
icebp
decb
cltd
mov
in
mov
cmp
insl
adc
fsubrs
dec
cli
in
popa
mov
movsb
stos
and
cltd
sub
outsl
mov
mov
and
jae
adc
lahf
arpl
push
outsb
call
inc
aam
inc
jg
stc
pop
stos
sbbb
mov
push
push
ja
adc
loop
add
adc
mov
test
jbe
mov
shlb
cwtl
sub
shl
movb
fwait
add
sub
mov
add
sub
mov
in
xor
xchg
popa
dec
popa
andl
testl
in
pop
xchg
lock
jno
xchg
mov
jbe
cmp
adc
inc
lea
mov
scas
lahf
scas
xchg
in
cmovg
xchg
les
mov
iret
jae
jne
mov
testl
ret
mov
clc
ret
xor
mov
and
gs
push
test
shl
lods
jno
out
dec
xchg
je
jbe
or
das
add
jns
inc
jmp
xchg
jne
pop
lret
jne
gs
daa
add
inc
loope
pushf
pop
dec
add
dec
sbb
or
xor
push
xchg
outsl
mov
pop
fistps
jns
ficoml
mov
push
and
pop
xchg
jo
jmp
jl
lods
iret
sub
dec
inc
cmp
add
movsb
lods
fstpl
mov
fidivrl
cs
xchg
enter
in
push
sbb
mov
xor
aad
mov
pusha
inc
and
cmp
xor
pushf
mov
mov
ja
sbb
lods
loopne
push
fistpll
push
inc
sbb
inc
pop
outsl
xor
jns
lahf
cmc
xchg
xor
mov
add
shlb
push
je
pop
rcrb
mov
jge
fxch
fcompl
mov
add
jg
aad
stos
add
out
testb
push
leave
pop
xchg
insb
sbb
xchg
sbb
pop
cmp
mov
and
xchg
sbb
cli
out
ja
sbb
clc
pusha
mov
inc
aaa
sbb
pop
rcll
sarb
or
or
mov
mov
push
jle
xchg
mov
bound
jle
loope
stos
sbb
mov
movsl
and
add
out
aas
adc
pop
stc
std
or
imul
shl
outsl
dec
stos
dec
mov
imul
pop
dec
fistl
push
clc
int
lcall
sub
mov
cmp
adc
mov
int
mov
pushf
xlat
mov
test
test
jno
dec
mov
mov
inc
int3
jmp
xchg
in
mov
enter
jle
cltd
lds
in
js
clc
fnstcw
jnp
xor
scas
addr16
jb
cwtl
insl
stc
ror
std
popa
cwtl
cmp
pusha
inc
inc
sub
mov
pop
movsb
fidivs
xchg
dec
add
les
push
pop
mov
xor
je
imul
out
dec
lock
sbb
jb
xlat
xlat
jle
xchg
les
outsl
out
data16
mov
inc
test
pushf
fnstenv
loop
ljmp
xor
ret
ljmp
pusha
les
xor
push
lods
je
shl
dec
out
sub
lahf
and
mov
push
cmc
and
in
js
add
jne
scas
movl
mov
in
mov
ds
mov
pop
lea
int3
fs
jae
cmpsl
pop
je
cmp
ljmp
or
and
xlat
iret
push
xor
mov
add
filds
mov
xchg
idivb
fsubp
sbb
mov
adc
cld
inc
dec
lea
fiaddl
or
xchg
mov
outsb
sub
or
lods
jg
xorl
loop
sbb
pushf
xchg
adc
fidivrl
xor
adc
adc
adc
addr16
and
push
push
cli
out
test
add
or
sub
dec
mov
jmp
aaa
xor
cmpsb
cmc
mov
call
fisubrs
andb
and
push
std
jne
decl
sarl
inc
adc
dec
mov
cmpsb
jmp
adc
and
sub
adc
add
adc
bound
dec
pop
daa
shl
test
jecxz
in
out
aas
dec
or
lret
cmp
and
inc
pop
pusha
sub
fistpl
adc
aam
or
lahf
testb
sarl
mov
mov
xor
xchg
ja
loop
push
jae
icebp
pop
aas
and
repz
out
in
aas
mov
loopne
ficoms
movsb
cs
std
sar
push
adc
sbb
mov
testb
xchg
shrb
cmp
push
mov
addr16
inc
sbb
inc
call
xor
inc
es
gs
push
mov
insl
ss
out
pop
iret
sbbb
les
hlt
pop
adc
xor
or
push
int3
test
rcll
mov
adc
xchg
xor
mov
out
daa
mov
pop
sti
xchg
adc
lcall
mov
loopne
aaa
adc
jl
fnsave
decb
and
or
mov
addb
sti
and
sub
les
into
mov
sub
mov
aaa
xchg
das
pop
xor
in
std
je
pop
lcall
idivb
mov
dec
loope
dec
cmp
sarb
xor
inc
dec
ficompl
cmc
inc
sub
xor
es
push
test
xchg
dec
sbb
xchg
mov
jge
mov
xor
cli
mov
ret
imul
xor
inc
xlat
pop
xor
push
push
dec
pop
inc
jp
test
lods
mov
mov
mov
mov
scas
lea
pop
adc
imul
jnp
mov
jb
and
pop
faddl
xchg
shl
in
inc
lret
cmpsl
fwait
pop
fisttps
icebp
push
outsb
rorl
mov
fldt
in
arpl
mov
push
jl
push
push
call
inc
imul
pop
cmp
data16
pop
insb
pop
jne
out
sub
mov
jne
lret
xor
jle
lahf
gs
jle
rep
mov
or
ret
gs
setp
pop
fcmovnbe
pop
loop
gs
ljmp
shll
sub
test
xchg
jge
sub
mov
out
sub
ja
test
inc
mov
mov
setp
sbb
mov
out
push
mov
push
push
out
stc
sbb
cli
mov
lock
jb
mov
aas
mov
xor
dec
sbb
xlat
lret
jp
aas
mov
sbb
push
pop
jnp
rolb
xchg
repz
popa
das
sbb
cmc
shl
jecxz
xchg
scas
je
dec
pusha
movsb
mov
push
or
push
jb
cmp
loop
inc
out
lock
sti
mov
addr16
popf
ss
mov
fidivl
and
xor
int
push
mov
inc
aas
js
mov
arpl
xchg
xchg
xor
fnstcw
push
in
jae
push
xor
inc
xor
pop
fdivl
sub
mov
cmp
bound
sub
daa
mov
ret
testb
sub
mov
addr16
lret
mov
and
adc
rorb
lret
sbb
xchg
mov
pop
inc
mov
pop
repnz
int3
fildl
mov
cli
mov
lock
inc
imul
out
mov
cmp
pop
testb
repnz
xchg
stos
pop
jae
cld
pop
test
sub
jl
subl
sbb
mov
jne
mov
jnp
dec
sbb
sbb
sub
push
and
pop
xchg
lea
es
decb
ljmp
mov
xor
lret
inc
jle
out
adc
fistpl
int3
push
and
lods
or
std
cmp
mov
mov
push
test
jge
stos
int
mov
in
pop
adc
std
imul
mov
mov
adc
stos
jns
flds
adcl
popfw
sub
addb
je
mov
cmpb
add
xor
jle
pop
mov
jbe
and
cli
pusha
out
inc
bound
mov
out
test
jo
jo
cmp
cmp
dec
fsubr
inc
pop
daa
rdtsc
push
scas
rcr
pop
inc
lret
cmp
push
mov
int
jns
pop
mov
repnz
mov
fiaddl
jg
mov
dec
shlb
xor
mov
push
aam
jecxz,pt
loopne
jle
mov
mov
ds
mov
shlb
nop
xor
mov
ja
mov
push
jge
add
sbbl
pop
sub
mov
scas
sbb
pop
enter
xor
pop
aas
mov
adc
or
mov
int
into
adc
adc
movsl
inc
ss
cmp
push
mov
fsubs
mov
adc
adc
mov
dec
xlat
mov
mov
jg
lock
add
pop
cld
mov
and
js
sub
std
mov
jl
adc
xor
push
or
leave
aam
jl
inc
sub
jne
mov
mov
or
lcall
ljmp
stc
mov
fs
push
notb
jbe
and
pop
jl
inc
inc
dec
cmp
in
mov
lock
push
mov
adc
mov
dec
mov
push
fisubrs
cli
dec
jecxz
outsb
fisubrs
xor
aam
push
test
pusha
pop
icebp
das
xchg
mov
popa
test
inc
mov
jb
clc
mov
xchg
iret
push
push
movsb
sbb
hlt
scas
jns
pushf
or
jp
push
push
xor
pop
rcrl
inc
jae
imull
loopne
outsl
sub
repz
std
lret
dec
mov
pushf
inc
jns
adc
mov
dec
xchg
stc
mov
cmp
cld
sbb
cmp
sub
cs
and
sbb
adc
push
push
into
mov
mov
scas
mov
jns
xchg
call
cld
cmc
fmuls
pop
into
mov
push
fistps
lock
mov
push
outsb
inc
xor
lcall
push
loop
pop
push
enter
mov
sub
stc
std
jp
inc
mov
cmpl
push
pop
jne
leave
popa
or
popf
aas
pop
pop
clc
inc
les
hlt
lods
add
ja
pop
dec
mov
cmp
pop
xor
es
mov
xchg
nop
sahf
sti
int3
sahf
lods
ds
or
arpl
aam
pop
push
loop
daa
lret
and
fwait
outsb
je
ss
fistpl
fldt
ljmp
inc
das
mov
imul
adc
xchg
cmpsl
movsl
clc
mov
fcompl
jmp
adc
lahf
inc
adc
push
xchg
aam
cltd
imul
icebp
mov
and
imul
sbb
hlt
dec
rcrb
enter
loopne
fisubs
xchg
in
add
mov
rorl
mov
nop
and
aam
cwtl
sbb
fucomi
dec
sub
push
add
mulb
test
popf
mov
icebp
push
xor
adc
in
inc
pop
xchg
push
rcl
fsubrs
jnp
jmp
outsb
inc
sbb
int
sbb
std
sbb
in
leave
lret
sbb
inc
adc
add
jae
pop
inc
dec
pminsw
imul
pushf
test
mov
in
xor
push
pop
push
dec
mov
sub
pop
iret
cld
out
fcmovnbe
xor
dec
leave
and
into
loope
adcl
xorb
popa
es
mov
cltd
pushf
xor
scas
pop
int3
into
dec
fisubrs
cld
nop
jbe
mov
jae
jno
test
cmpsb
imull
jg
or
out
jnp
mov
fucomip
out
popa
leave
fsubs
movsl
fcmove
adc
push
popf
cmpl
jge
mov
ss
decl
clc
test
pop
sbb
cmpl
jae
frstor
incb
and
and
int3
daa
in
and
fisubrl
adc
adc
or
shr
test
xchg
xchg
push
cmpsl
inc
cmp
push
xor
ljmp
adc
adc
push
cmpsb
jp
xor
int
dec
inc
leave
ds
imul
sar
bound
cmpsl
loopne
mov
shl
push
mov
in
jmp
rcll
insl
xor
lods
mov
bound
cmp
sub
iret
movsl
lods
out
bound
addb
mov
sbb
inc
lea
jp
mov
hlt
cld
jmp
jns
gs
testb
inc
mov
jno
jns
fyl2x
ret
pop
lds
ret
dec
cmp
mov
xlat
aad
xlat
aad
dec
xchg
int3
fsubp
xor
pop
add
mov
mov
mov
xchg
aas
adcl
sub
fwait
sti
push
test
mov
push
les
lea
sbb
test
cwtl
sub
je
mov
loopne
push
mov
pushf
add
dec
inc
mov
movsl
je
jnp
loop
std
adc
sbb
pop
xchg
divb
inc
daa
mov
cli
xor
outsl
pusha
inc
repz
popf
push
lods
mov
addr16
adc
lahf
inc
dec
dec
out
jns
lea
imul
inc
cwtl
outsb
jnp
xchg
add
rolb
sbb
fnstenv
push
dec
dec
test
cmp
fnstenv
loopne
dec
rcr
test
into
inc
mov
out
insb
es
daa
pusha
sti
rorl
fidivs
mov
arpl
xchg
scas
xchg
add
rcrb
xor
addb
fdivl
mov
mov
adcl
stos
mov
fldenv
sub
adc
push
dec
xchg
mov
mov
lock
mov
xchg
out
jno
mov
sbb
jne
pop
jns
out
xor
sub
fs
fldcw
mov
in
cmpsb
or
mov
popf
ds
mov
xchg
mov
cmp
les
fbstp
or
and
and
sub
in
mov
xor
pop
js
pop
shrb
je
mov
movntq
sub
std
inc
popf
leave
into
jge
popa
cmp
sbb
shll
or
mov
out
lcall
inc
in
xchg
sahf
leave
jl
movsb
ljmp
cmc
fisttps
cli
pop
pop
stos
xchg
xor
dec
movsb
loope
and
push
test
shl
push
outsl
sub
sti
aaa
dec
add
add
jns
cwtl
mov
data16
fs
mov
int3
out
xchg
leave
dec
pop
xchg
into
test
inc
sbb
jno
enter
inc
jmp
lds
lds
sub
and
pop
and
and
push
or
jno
repz
xchg
dec
stc
mov
pop
push
mov
enter
ffreep
ja
sbb
vpunpcklwd
lock
in
mov
and
xor
into
sti
ljmp
pop
pop
cmp
das
pop
movsb
xor
xchg
rcll
adc
sub
popa
adc
mov
fsubl
cmpsb
cmp
insl
les
daa
insl
adc
push
mov
push
pop
cmp
int
cmpsb
pop
insl
pop
mov
xor
in
stc
jne
sub
mov
xor
inc
addr16
lea
int
inc
pop
lds
xor
jne
outsl
jo
sti
jnp
pop
rcrl
jno
sub
out
mov
fdivs
inc
adc
sub
fwait
les
jns
scas
mov
mov
ja
bound
mov
ja
dec
and
add
call
in
loop
and
int3
lahf
add
test
push
cmc
dec
mov
pushf
pop
xlat
sbb
out
or
ss
inc
push
scas
mov
mov
std
scas
imul
add
xchg
stos
mov
andb
out
push
jge
fidivl
jbe
dec
add
xor
xor
xchg
jnp
or
sub
stos
add
es
ret
or
dec
pop
setp
pop
das
je
sar
push
in
bound
movsl
dec
int3
push
fidivrl
xchg
mov
std
jmp
jecxz
in
ljmp
hlt
pop
pop
mov
lods
jns
call
mov
xor
xlat
adc
or
mov
pop
sub
jne
push
dec
and
xchg
insl
mov
pop
mov
fcmovnb
and
mov
iret
or
adc
xchg
aaa
jmp
and
xchg
pop
push
inc
sahf
inc
aaa
nop
hlt
and
mov
and
les
fwait
jp
ss
scas
add
aad
cmp
push
dec
lcall
xlat
loope
out
movsb
mov
out
jns
mov
push
cltd
jns
js
add
addr16
adcl
popf
xchg
xchg
add
or
fstps
jb
mov
xchg
fs
jmp
popf
movsb
inc
stc
xor
xchg
jne
in
inc
dec
fmull
scas
xlat
rcr
les
cmp
sub
add
and
xchg
cmp
cmp
bound
lahf
fs
cmpb
dec
mov
stos
divb
jmp
iret
mov
xor
lcall
rolb
lods
popl
popf
icebp
mov
jmp
pop
dec
inc
sbb
jb
adc
ror
ret
jmp
cwtl
fistpll
sti
push
fdivrl
arpl
adc
xor
mov
aad
int3
fwait
add
movsb
pop
das
add
push
aaa
pop
push
shll
ficompl
cmp
ja
jg
fstl
cmp
mov
adc
mov
mov
add
cmp
into
dec
push
mov
or
es
cli
jo
push
into
rcrl
sub
dec
sahf
jmp
mov
add
pop
cmp
in
rcrb
mov
dec
xchg
mov
out
mov
and
mov
and
aaa
in
les
or
in
cmc
lods
dec
jge
jo
mov
dec
out
arpl
je
jmp
jecxz
inc
jae
fisubl
mov
mov
jns
jbe
aad
scas
call
jb
and
pop
mov
cmp
xchg
shlb
popf
hlt
inc
mov
push
or
mov
add
mov
repnz
xor
jecxz
call
mov
outsl
lret
adc
hlt
push
cmp
cld
stc
shrb
xor
xlat
xor
adc
imul
cmc
mov
or
imull
xchg
int
scas
xchg
rcrl
mov
xchg
mov
sbb
jnp
dec
and
xor
mov
jnp
pop
cmp
outsb
ret
mov
jae
nop
repz
sbb
mov
int3
push
je
fnstenv
into
mov
lahf
jg
repz
xchg
gs
dec
lret
add
arpl
xchg
aad
jg
dec
add
ficomps
xor
inc
jbe
dec
add
pop
stc
daa
test
inc
int3
loope
push
cs
mov
adc
inc
inc
xchg
sbb
in
pop
pop
fmuls
mov
popl
cmpsl
jbe
lahf
mov
add
loopne
sbb
and
add
fisubrs
mov
scas
test
fwait
stc
mov
fnsave
or
fisubrs
adc
sbb
mov
sbb
cmpsl
cwtl
sbb
mov
fs
sahf
and
pop
mov
hlt
pushf
into
icebp
sub
add
xor
push
jge
loopne
dec
mov
ds
cmp
jmp
mov
imul
lret
xchg
push
ss
inc
iret
dec
jno
pop
xchg
mov
add
into
xor
in
xor
push
daa
mov
and
inc
cmpsl
lcall
cmp
cwtl
pusha
xchg
jmp
popf
shrl
mov
dec
jl
in
aam
out
xchg
mov
sub
jl
inc
int
mov
adc
mov
xor
push
clc
popf
lret
ds
or
flds
js
jnp
xchg
je
fwait
inc
adc
lcall
out
sbb
dec
jle
mov
pop
shlb
and
das
insl
sub
dec
repz
loope
mov
cmp
dec
in
aad
les
or
rorb
jo
int3
lods
xchg
push
push
push
adc
test
std
adc
xchg
mull
and
jge
push
pushf
mov
xchg
jno
lahf
fistpll
push
xorb
jno
lock
scas
mov
insl
push
jmp
push
mov
das
dec
or
stos
bound
dec
ds
int3
push
addb
movsb
xchg
pushf
adc
ss
in
xchg
cltd
fucomp
cwtl
shl
push
adc
sub
sub
aad
inc
mov
lcall
arpl
stos
pushl
ret
sbb
rcll
xchg
and
mov
jbe
xor
fimull
mov
jno
jns
adc
cmp
xor
add
push
or
mov
xorb
pop
push
repz
cmpsb
rcr
adc
adc
xor
sbb
mov
mov
mov
into
pop
mov
jns
test
push
push
xor
mov
mov
in
add
pop
ret
xor
cwtl
dec
cmp
inc
inc
dec
out
mov
xor
enter
hlt
nopl
push
pop
lret
xchg
stc
aaa
loopne
cmp
pop
out
or
pusha
out
jp
subl
sub
mov
or
out
inc
push
mov
inc
pop
aaa
imul
je
sbb
pop
jp
ja
mov
std
xlat
out
add
jae
mov
mov
clc
or
lds
cs
fimuls
cmpsl
adc
adc
lds
leave
lahf
and
jne
jl
sub
fcmovb
dec
repz
adc
jp
sub
shlb
rol
pushf
addr16
mov
or
sbb
xchg
push
or
cwtl
loope
sub
adc
xor
movb
outsl
cmpsb
pop
iret
or
aaa
cmp
lds
cmpsb
testl
stos
adc
insl
test
loop
cmpsl
push
bound
push
aam
repnz
jg
nop
or
arpl
addr16
out
fdivl
in
or
push
xor
dec
mov
xchg
in
dec
fbld
das
in
xor
add
lcall
mov
outsb
mov
pop
adc
in
nop
push
or
nopl
cmpsl
cwtl
cwtl
or
dec
sahf
inc
fs
push
or
test
fisttps
add
cs
mov
xchg
js
mov
mov
mov
std
mov
add
shll
cmpsl
cmpsl
inc
rorl
xchg
push
cld
and
pushf
and
jne
out
hlt
xchg
ds
mov
xchg
and
pop
in
sbb
test
mov
and
sub
stos
mov
mov
pop
xor
jmp
xchg
xchg
or
out
subl
mov
mov
pop
js
xorb
lods
jb
icebp
mov
xchg
out
mov
push
outsb
rcrl
mov
stos
jp
out
jo
div
enter
adc
mov
sbb
xorb
or
xor
cs
mov
jecxz
inc
daa
mov
inc
pop
lods
sub
data16
mov
stos
sbb
and
idivl
adc
pusha
jne
push
das
scas
insb
mov
out
sub
flds
push
out
stos
shrl
std
xchg
add
decl
ljmp
mov
popf
aas
je
repz
fwait
adc
push
mov
jne
push
cmpsl
ds
and
add
adc
xor
popf
mov
sbb
arpl
inc
mov
mov
inc
mov
mov
cmp
jmp
insl
ret
mov
ljmp
test
jge
sub
push
addr16
xor
ljmp
imul
out
stos
popf
loopne
pop
xchg
in
xor
stos
mov
popf
imul
cwtl
stos
dec
jnp
vprotb
push
pop
mov
lds
push
or
testl
shlb
in
lret
outsb
push
das
pop
mov
pop
and
ja
sub
mov
add
aas
xchg
cmc
push
mov
and
mov
inc
jnp
jnp
cmp
shlb
sahf
xlat
mov
dec
fcoms
out
scas
lea
insl
fmul
dec
pop
dec
ret
sti
sub
cli
arpl
sbb
xchg
pop
popf
les
xor
lret
xchg
test
dec
pop
imul
adc
sar
stos
mov
repnz
mov
ljmp
xor
cs
xchg
jae
push
ret
lds
and
jnp
pop
outsl
stos
int
mov
dec
jo
xchg
mov
push
sub
mov
sbb
or
rol
lock
mov
pop
jne
inc
out
adc
or
sbb
mov
xor
mov
sub
mov
xchg
scas
dec
adc
cmp
repnz
push
push
dec
clc
add
jno
pop
inc
rcrl
fadd
dec
fidivrl
xchg
and
fcoms
or
popa
pop
int3
and
out
pop
movsl
add
into
movnti
mov
dec
fstpt
stos
pusha
lahf
es
xchg
inc
rorl
and
jmp
cmpsb
mov
aas
mov
sti
loope
loopne
aas
sub
sbb
inc
xchg
xchg
sarb
adc
xlat
push
mov
and
mov
int3
cmp
sbb
jb
cld
jbe
les
sub
xor
push
ds
pop
je
cld
orl
sbb
test
push
test
cmp
lret
jb
ds
fstps
movsl
add
push
ja
stos
and
test
push
mov
lods
pop
loop
cltd
mov
add
cmp
ds
and
sub
insl
xchg
aam
adc
in
std
or
in
mov
xorl
out
mov
cmp
imul
xor
loope
add
jg
jo
shll
shld
inc
push
jns
xchg
rorb
mov
push
cs
arpl
cmp
or
mov
int3
xchg
clc
pop
dec
inc
out
lods
cld
mov
ds
arpl
cmp
and
dec
and
outsb
aam
adc
sub
das
nop
dec
popf
mov
cmp
push
cli
pop
inc
inc
sub
sar
jecxz
sti
xchg
xor
int
scas
dec
test
fwait
repnz
sbb
fstl
mov
xor
mov
sub
sbb
jbe
test
sahf
xchg
or
push
pop
jae
cmpsl
xchg
out
je
push
adc
jnp
sub
lods
xchg
inc
loope
pop
in
dec
push
push
inc
ljmp
mov
sub
jbe
cld
sub
push
stos
jle
or
push
repnz
fbstp
xchg
push
push
cmpsl
sbb
jnp
inc
inc
mov
mov
jl
inc
mull
jne
pop
sbb
cwtl
cmp
popf
and
jp
sahf
sub
sub
mov
inc
or
mov
sbb
gs
sbb
add
icebp
call
xor
mov
dec
push
fmuls
stos
aam
aam
push
sti
sarl
jno
test
dec
sub
inc
pop
mov
push
je
or
push
push
nop
push
cmp
push
sarl
inc
or
jo
jl
stc
inc
mov
jl
pusha
mov
int
pop
outsl
adc
jp
add
push
jo
cmp
sti
cmp
jecxz
pop
sbb
pop
loop
adc
or
cmp
lods
cltd
mov
rclb
daa
mov
test
mov
xchg
enter
mov
jbe
mov
ret
dec
add
cmp
lods
inc
faddp
sub
stos
jmp
or
dec
push
sbb
leave
imul
or
xchg
ljmp
xor
and
or
jae
mov
mov
andb
jl
das
fnstenv
xchg
dec
insb
mov
fsubr
sbb
sbb
test
fiaddl
sahf
outsl
inc
in
adc
sub
pop
popf
push
jle
sub
fstps
popa
out
xchg
rcrb
push
loope
arpl
cmp
pusha
jb
cmc
fwait
pop
pushf
das
cmc
fwait
push
xchg
xor
fbld
enter
sbb
test
push
cmp
sbb
pop
cs
fsubrl
rorl
mov
mov
xchg
push
and
cmpsb
pop
push
inc
ljmp
inc
loop
pop
sti
mov
add
mov
xchg
or
fldcw
es
mov
arpl
mov
mov
inc
sub
pop
lds
adc
rorl
jecxz
je
adc
in
dec
cmc
lock
or
sahf
imul
cli
call
pop
mov
mov
ret
jge
sarb
mov
jo
fstpl
pop
push
push
pop
in
ret
cmp
dec
inc
pop
pop
add
push
in
cmp
les
cmp
sub
into
or
imul
xchg
and
cmp
mov
imul
mov
test
mov
cmp
dec
fldt
pop
enter
sub
push
cmc
into
xchg
out
inc
cmpsb
sub
aam
cmp
push
mov
pusha
movq
xor
scas
and
xor
mov
jmp
pop
ljmp
hlt
dec
ss
lahf
cmp
or
popf
push
xlat
mov
push
xchg
mov
mov
test
out
and
pop
cmp
mov
popf
push
mov
xor
lret
dec
dec
dec
or
mov
ss
jnp
inc
jle
rol
pop
or
int
ss
xlat
ss
cmp
fsubrs
test
out
mov
out
mov
sbb
adc
popa
pop
insb
mov
mov
add
fidivrs
xchg
jns
les
lods
test
sbb
popa
hlt
jg
popf
pop
dec
push
cmp
push
cmpsb
push
mov
and
sbb
pop
data16
ficomps
je
cmp
cmpsb
iret
loop
jg
outsb
cmp
sub
pushf
xor
mov
leave
test
adc
xor
and
jge
mov
dec
xchg
push
adc
movsl
or
pop
mov
mov
out
lret
inc
mov
std
xor
mov
mov
iret
in
pusha
pop
fsubp
popf
pop
dec
dec
repz
pop
roll
fld
je
sub
xor
rclb
push
cmp
cli
sub
pop
scas
or
repnz
lret
xor
xor
xchg
and
cmpsb
loop
sbb
fsubrs
jbe
jg
ret
xor
cmp
xor
outsb
bswap
movsl
das
push
xor
pop
sbb
outsl
mov
outsl
les
add
and
adc
mov
xchg
pop
sbb
mov
fidivrl
cmp
xor
fldenv
inc
mov
pop
and
gs
dec
icebp
jg
jmp
stc
push
aas
fiaddl
jg
test
int
rcll
cmc
sahf
pop
mov
stos
sub
or
jb
and
aaa
or
insb
mov
lock
dec
sbb
leave
mov
shll
jecxz
movsl
adc
test
psllq
in
popf
mov
repnz
cli
repz
xchg
cmc
xchg
fisubrl
stos
and
xlat
fsub
fstl
or
fisubl
fcoms
jo
xor
bt
ds
lods
out
jmp
sbb
xchg
sub
imul
mov
fwait
lods
dec
mov
sti
add
dec
pop
lods
sub
mov
xlat
in
mov
sub
push
ret
ljmp
dec
pop
imul
out
sahf
pop
bound
inc
jae
inc
pop
xchg
and
loopne
imul
cmp
fistpl
xchg
lds
inc
inc
cmc
loop
movsl
div
or
ficoms
dec
movsb
cmp
popf
sahf
fsts
cmp
ret
fisttpl
imul
pop
ljmp
fiaddl
inc
mov
mov
pop
mov
jge
fldl
sub
jecxz
aad
sub
iret
inc
in
xor
sbb
stos
icebp
loop
mov
scas
xchg
mov
shrl
aad
fisubl
or
dec
fcmovnbe
pop
in
pusha
dec
out
add
js
int3
aaa
nop
cmp
pop
jnp
aas
adc
pop
inc
loope
test
aaa
orb
test
ds
sub
out
sub
and
push
adc
cwtl
adc
and
mov
cld
cmpsb
daa
arpl
add
loope
clc
push
icebp
leave
lock
out
lods
xorb
dec
das
lods
adc
aam
sub
lea
das
loop
mov
add
push
jns
pop
clc
ds
inc
mov
mov
and
out
pusha
pop
shlb
popf
jns
dec
outsl
addr16
sub
test
dec
int
xor
mov
ficoml
mov
gs
pushf
mov
std
enter
into
or
loop
xor
adc
into
shlb
add
arpl
sti
jl
iret
hlt
lret
iret
fiaddl
mov
lock
sbb
aas
sub
and
in
lret
test
and
cmp
push
xchg
mov
sbb
jnp
movsb
cli
push
out
fistps
push
lods
push
insl
xchg
out
fdivrs
scas
test
mov
fwait
jns
icebp
lods
mov
mul
xchg
insb
imul
addl
loopne
or
loopne
daa
jnp
in
pop
ret
or
xor
movsb
outsl
sbb
mov
cmp
aaa
sbb
daa
pushfw
inc
data16
stos
dec
and
bound
imul
out
inc
cmp
and
xchg
sub
shrl
mov
jp
jecxz
pop
mov
es
fdivp
push
mov
or
int3
repz
and
cmp
inc
lcall
daa
and
loope
ja
das
arpl
inc
dec
push
mov
jge
loop
pop
sub
adc
and
xchg
xor
adc
jb
bound
sub
rcl
lock
xchg
mov
std
mov
adc
popa
mov
sarb
icebp
pop
rorl
xchg
fs
outsl
adc
addl
je
jae
popa
push
daa
iret
sahf
xrelease
jmp
std
jne
out
outsl
ljmp
test
loop
dec
aad
das
popa
add
pushf
sbb
inc
in
leave
xor
jp
mov
bound
pusha
xor
fsubr
pop
and
push
inc
test
imul
subb
ljmp
push
and
dec
cmp
adc
icebp
mov
imul
fsubrs
mov
test
cmp
es
jb
jae
subl
sub
mov
movsl
jmp
jo
movb
insb
repz
arpl
inc
push
mov
sahf
xlat
repnz
push
clc
outsl
sbb
add
inc
dec
bound
and
push
ret
lods
sti
pop
mull
wrmsr
or
adcl
cmpsl
sbb
jno
and
xchg
jle
arpl
dec
fisttpl
lea
icebp
shll
jg
mov
daa
push
out
pop
xor
push
lods
mov
pop
inc
cmp
shl
jns
int3
mov
jecxz
sub
bound
int3
fdivp
adcl
fs
das
stos
adcl
pusha
cltd
sub
clc
mov
mov
mov
jmp
adc
xchg
push
or
xor
cld
push
loope
cmp
push
xor
inc
insb
add
jno
push
jo
pop
cmpsb
xor
fidivs
and
adc
cmp
sub
jmp
jb
loopne
pop
push
mov
push
pop
lods
jg
repnz
test
or
notl
jb
popf
ljmp
mov
xchg
push
mov
repnz
fidivs
pusha
test
aad
jb
mov
fcmovbe
ret
stc
mov
pop
in
jns
mov
repz
out
sub
ret
xorb
imul
xlat
lret
pop
cli
adc
jb
dec
xor
inc
testl
int
adc
and
inc
hlt
xchg
jne
xchg
sub
movsl
std
inc
mov
jmp
pop
les
and
sub
pop
pop
mov
mov
jcxz
pop
dec
cs
jmp
into
jl
test
mov
jmp
in
mov
repz
cli
outsb
cmpl
pop
popf
iret
pop
shll
push
in
cmp
out
test
push
leave
sbb
pop
dec
insb
pop
enter
imulb
push
movsb
sub
xchg
pop
cld
loopne
cltd
rorb
push
jnp
fstl
add
and
cwtl
sbb
mov
das
xor
je
xchg
and
cltd
out
add
fmull
loopne
and
shr
mov
push
lods
push
adc
mov
mov
jge
loopne
cld
aaa
lods
inc
mov
outsl
sbb
cmpsb
data16
sub
addr16
adc
pop
pop
ficompl
sub
jmp
stc
sub
das
mov
inc
pop
cmpsb
cmc
xchg
mov
or
jae
rcll
jne
addr16
jne
sbb
je
push
rol
cmp
xchg
icebp
lahf
out
inc
add
push
cs
add
outsl
ss
jp
or
mov
mov
mov
in
pop
mov
sbb
jns
pop
ret
xor
fwait
jge
out
jecxz
sbb
nop
fsub
and
stc
adc
stos
fiadds
daa
stos
pop
xorl
cmp
hlt
xchg
cmp
and
lods
pop
clc
inc
inc
inc
sub
adc
ja
push
or
jl
rcll
mov
mov
lret
cmp
mov
movsl
cmpsl
popf
into
lcall
dec
mov
dec
sarb
sub
dec
fmuls
push
or
stc
pop
mov
fs
test
push
scas
adc
scas
ljmp
test
mov
push
xchg
insb
dec
aaa
jmp
lahf
scas
cmp
xor
insl
fwait
andb
mov
ss
out
adc
sbb
dec
popf
pop
orl
lret
mov
stc
push
nop
mov
jl
add
mov
mov
pop
divb
addr16
sub
es
ljmp
add
pop
mov
es
insb
iret
cld
pop
sahf
inc
enter
and
stos
arpl
out
imul
jp
jae
fisubl
enter
movsb
fistpll
ret
inc
sti
outsb
lds
sbb
out
mov
test
or
ljmp
sbb
inc
pop
clc
push
cs
cmp
les
mov
xchg
pop
xchg
imul
pop
cli
mov
aad
gs
push
daa
sti
cli
sub
lea
lods
pop
sbb
aas
sbb
adcl
fmull
jo
push
sbb
xor
lock
cmpsb
lds
pop
fildl
sbb
test
rcrb
sahf
dec
cltd
jae
xor
xor
and
std
xor
mov
add
pop
xchg
pop
dec
popf
fstpt
mov
dec
push
mov
bound
daa
adcl
ljmp
push
jg,pn
jae
dec
ror
inc
adc
xchg
jnp
push
pop
ret
pop
aad
adc
bound
mov
in
and
push
push
jnp
insb
sahf
sub
inc
sbb
cld
mov
iret
sbbb
mov
inc
jbe
lret
add
mov
aad
jns
in
xor
push
cmp
xorb
les
jne
mov
and
add
jae
pushf
xorl
pop
das
lea
and
notb
jecxz
push
shrl
inc
and
jg
clc
dec
andb
ds
gs
xor
add
sbb
add
pop
lahf
pop
lds
sub
xchg
jbe
inc
adc
mov
mov
xor
in
mov
lret
popa
sub
ret
mov
push
cs
lods
sahf
lock
fdivrs
lret
movsl
dec
arpl
cmpsl
xor
inc
cs
and
shl
loopne
lock
inc
aam
enter
pop
sti
xor
call
or
dec
and
insl
cmp
fwait
addr16
shll
cwtl
imul
dec
add
pushaw
cwtl
mov
xor
jl
fstps
and
jno
test
data16
and
imul
mov
in
aad
mov
cmp
test
xor
inc
push
cmp
mov
mov
and
lcall
ret
mov
das
mov
adc
cmp
rcl
shlb
enter
mov
cmpsb
in
std
lock
pop
cltd
pusha
std
add
lret
mov
jnp
mov
sub
test
addps
inc
dec
popa
xchg
iret
lock
cmc
dec
popf
cltd
mov
aam
add
repnz
jb
push
dec
int
pop
fimull
jle
insl
pop
enter
push
shll
call
push
push
stc
sub
cwtl
mov
arpl
xlat
and
sub
push
in
mov
push
out
shrb
cld
mov
pop
and
cmp
andb
orl
or
pop
test
mov
dec
cmp
mov
in
xchg
sbb
popf
inc
fucomp
movsb
mov
loope
clc
push
mov
pop
lret
lahf
inc
shll
dec
lret
leave
rcll
in
xchg
nop
mov
push
pop
js
sub
mov
call
xor
test
and
xor
push
jae
or
scas
sbb
mov
idivb
mov
lods
xchg
div
xchg
dec
xor
adc
outsb
pop
xchg
pop
mov
adc
int
xor
popa
pop
jle
inc
gs
enter
lock
shrl
fldl
pop
jo
push
lods
scas
or
jb
enter
cmp
fsubr
jmp
pop
xchg
sub
in
cmpsb
mov
fiadds
xor
or
rclb
jb
jns
adc
shl
adc
mov
repnz
hlt
cmp
sub
sti
orl
inc
in
int3
lret
lods
jecxz
dec
push
cld
aad
or
add
dec
mov
xchg
xor
sbbb
or
and
and
mov
mov
test
addr16
scas
lcall
and
int
mov
jb
and
push
mov
test
leave
sbb
add
rcrb
mov
add
out
cli
or
cmp
imul
es
xchg
add
mov
pop
xchg
dec
xor
rcrl
inc
jno
in
jae
mov
inc
xchg
xor
adc
out
fdivr
adc
mov
jae
dec
mov
fimull
icebp
pop
cmpl
inc
push
notl
ret
pop
xchg
sahf
test
dec
mov
stc
es
push
fistpll
cmc
push
dec
pop
aaa
dec
xchg
ss
xor
push
xor
fisttpll
fsub
inc
out
jae
loope
mov
ljmp
or
aam
hlt
in
push
sub
sti
std
pop
adc
lcall
jnp
scas
sub
fisttpll
insl
add
and
xor
lds
das
or
lock
ret
xchg
test
ds
or
data16
hlt
aas
insl
push
stos
jg
adc
sub
sub
push
inc
or
dec
pop
sbb
mov
jl
or
pusha
push
xor
pop
rcrl
add
andl
insl
and
nop
aam
jbe
pop
sbb
xor
jmp
mov
pop
roll
je
sbb
push
test
bound
add
cmp
pop
xchg
push
enter
xlat
aaa
cmpsb
jb
mov
xor
mov
ljmp
fildl
ljmp
lock
adc
jnp
push
fldl
mov
add
test
jle
xor
cmc
mov
push
inc
cld
leave
mov
mov
push
incb
clc
push
push
lret
insl
cmpl
out
xor
dec
leave
adc
jle
mov
mov
ss
or
inc
xchg
pop
and
test
lods
xchg
inc
hlt
sub
pop
out
cmc
jmp
rcl
sbb
push
pop
std
fisubs
push
or
lahf
lcall
arpl
jmp
fwait
dec
pop
push
push
mov
jp
int
loopne
sbb
jno
mov
or
les
jp
das
mov
lods
or
push
in
push
sahf
sub
adc
mov
adc
rcl
mov
test
jg
jp
ja
lock
icebp
in
clc
mov
adc
scas
testb
or
jg
mov
xchg
xor
xchg
or
jecxz
sbb
fdivs
mov
jp
mov
ret
xor
or
mov
cld
mov
rorl
mov
and
xor
popf
lret
jmp
fdivl
pop
mov
jg
and
mov
in
pop
xor
mov
jb
xor
inc
adc
push
enter
cmp
mov
ljmp
jnp
sub
clc
sbb
push
mov
cwtl
mov
push
dec
xor
cmpsw
cmpsl
cmpsl
icebp
inc
push
cmp
movsl
sub
and
or
xor
sub
cltd
xor
add
scas
and
enter
movsb
popf
mov
xchg
xor
xchg
imul
xlat
jne
test
add
jae
jb
adc
shrb
shrb
leave
mov
lcall
sub
stos
rorb
jge
pop
push
dec
daa
jp
lea
test
jb
int3
int
mov
mov
pop
les
cmp
lret
ljmp
or
mov
fsubl
mov
loopne
movntpd
in
ficoml
lea
nop
mov
mov
outsl
xchg
lods
ljmp
das
or
imul
call
sub
sbb
mov
adc
stos
or
rclb
mov
stc
cmp
rolb
push
inc
add
add
mov
sbb
pop
dec
ds
xor
pop
xor
jecxz
mov
adc
cwtl
outsl
and
mov
dec
int3
scas
scas
sbb
sbb
scas
push
lret
in
test
lock
mov
fisubrl
and
dec
sbb
xchg
or
mov
xchg
dec
add
leave
dec
daa
xchg
inc
jo
out
cli
pop
mov
mov
rclb
jg
jb
rolb
cmpl
pushl
cmp
add
fnsave
xchg
in
mov
aas
jmp
scas
add
mov
push
dec
int3
mov
aas
lret
jbe
lea
sahf
into
insb
cwtl
ja
clc
shrb
das
mov
jecxz
cld
or
xor
repnz
lock
add
cmpb
push
stos
sahf
stos
add
or
cmp
sbb
adc
push
mov
mov
es
push
loope
jbe
loop
cld
andb
bound
dec
pop
call
sbbl
iret
cld
sbb
mov
pusha
orl
hlt
and
fcoml
cli
aas
addr16
data16
lret
add
test
mov
mov
mov
es
movsl
push
push
lret
sbb
cmp
les
add
cltd
push
aas
mov
in
divl
stc
mov
shl
imul
adc
push
lods
das
int3
sub
mov
bound
mov
inc
popa
jb
imul
enter
lret
fildl
push
pop
es
test
test
in
push
int
sbb
in
add
inc
dec
daa
mov
push
dec
mov
jo
aad
push
mov
or
cli
xchg
lret
fwait
xor
movsb
inc
js
pushl
add
dec
sub
xchg
mov
mov
xchg
xor
push
cmp
arpl
repz
jle
cmp
mov
aad
mov
mov
cmp
ficomps
inc
in
add
cmp
jae
fisubs
inc
cmp
pop
push
ret
std
push
fmul
adc
xor
aaa
outsl
ja
cmp
mov
mov
aaa
pusha
sbb
pop
mov
dec
push
outsb
lret
ljmp
push
xchg
shlb
rclb
push
sub
add
lret
mov
icebp
sub
adc
mov
fwait
jge
or
push
jae
or
cmp
mov
arpl
in
cs
std
push
cmp
or
mov
dec
int
push
shrl
mov
xchg
inc
lods
dec
lahf
popa
xor
or
addr16
xchg
lcall
push
imul
push
mov
pop
hlt
xchg
ja
mov
repnz
leave
xchg
aad
push
adc
mov
mov
or
xor
mov
adc
or
daa
adc
cwtl
into
xchg
mov
jo
push
sub
stos
xchg
pop
movsl
and
cs
or
push
pop
fsubr
aad
stc
mov
rcrb
popa
and
jbe
lock
cmp
dec
mov
loope
push
jg
cmp
push
jnp
jmp
dec
fwait
or
sbb
ret
pop
inc
push
jp
outsl
aas
mov
iret
or
jle
add
jae
jb
pop
int3
cmpsb
pop
cmp
iret
mov
imul
and
aaa
mov
push
ja
sub
xchg
aad
dec
pop
dec
cmp
arpl
in
scas
add
mov
out
dec
out
dec
and
xor
repz
add
xor
test
pop
push
xor
dec
sub
mov
mov
lods
test
movsl
negb
adc
mov
cmp
loope
fldenv
mov
fcoml
outsl
cltd
jecxz
dec
xor
mov
cs
out
pop
dec
dec
sar
inc
cmp
push
jbe
movsl
xchg
mov
dec
lods
sub
adc
inc
cmc
mov
or
dec
jb
xchg
shlb
jns
aad
cvttps2pi
ljmp
push
mov
mov
mov
pushf
scas
jle
mov
jg
sbb
and
jnp
jne
rcrl
push
xor
adc
in
gs
pop
sub
jge
add
mov
dec
xchg
push
data16
mov
push
je
in
or
and
aad
jmp
enter
or
mov
fidivrs
xchg
and
fdivl
movsl
or
pop
jno
sub
adc
pusha
scas
cmc
std
and
mov
inc
dec
adc
loop
lock
mov
fldcw
mov
cmp
inc
xor
mov
incl
or
push
lock
jbe
inc
scas
push
retw
sub
cld
and
pop
and
hlt
adc
mov
dec
or
ds
repnz
mov
xor
popa
clc
lock
enter
stos
orb
xchg
dec
outsl
sbb
cmp
jecxz
idivb
or
push
insb
dec
in
sbb
daa
int3
add
xchg
jp
loopne
ss
hlt
sub
push
pop
lods
cmp
cmp
in
mov
jb
les
aaa
dec
xlat
push
pusha
in
fsubrl
mov
daa
inc
ds
mov
inc
jo
scas
fsubs
stc
in
popf
mov
imul
scas
mov
inc
xchg
mov
xor
jle
lods
lods
inc
jmp
cmp
icebp
dec
add
sbb
xorb
int
fs
fnstsw
je
insb
mov
fwait
addl
fimuls
push
cmpsb
cmp
fisttpll
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
in
insb
arpl
imul
xor
cmp
xor
cmp
popf
sub
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
les
pusha
stc
mov
jmp
pop
lcall
mov
push
popf
and
adc
pop
repnz
pop
movsb
sbbl
mov
in
cmp
push
imul
add
inc
mov
cs
bt
mov
adc
test
dec
lcall
push
cwtl
mov
sub
jns
jne,pn
adc
mov
sub
fs
les
inc
bt
mov
jg
ss
mov
adc
test
dec
pop
sbb
cmovle
imul
jmp
cmp
inc
mov
cmpb
popf
push
mov
imul
lret
repz
insb
sub
xorb
lods
out
jnp
dec
cmp
xor
cmp
popf
mov
mov
imul
int3
mov
sub
push
mov
imul
mov
push
popf
outsl
lret
repz
cmp
xor
xor
popf
outsb
lret
or
sarb
es
cmp
and
cmp
popf
push
mov
imul
lret
testl
rcrb
int3
dec
cmp
xor
cmp
popf
push
mov
imul
shlb
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
inc
inc
in
cmpsb
popf
push
mov
jns
cmpb
cltd
push
movsl
ss
jns
push
aam
rcrb
rorl
mov
repnz
mov
ss
dec
cmp
hlt
mov
ror
push
mov
imul
lret
rep
cmp
aam
dec
mov
add
dec
cmp
xor
xor
popf
push
dec
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
lret
repz
cmp
xor
cmp
popf
push
mov
imul
shll
xor
lcall
fdivs
xchg
fwait
push
adc
mov
and
push
pop
add
cmp
neg
arpl
and
outsb
add
xchg
inc
negb
enter
leave
xor
sub
push
les
mov
ss
js
mov
lret
sbb
lret
push
fdiv
push
sti
and
or
xor
adc
cmpsb
push
or
outsb
cmpsb
pop
sbb
shl
adc
push
mulb
jno
std
inc
xor
lods
pop
sub
jne
inc
fs
and
pushf
fstps
and
in
div
andb
lret
imul
test
mov
push
sub
aad
fmull
sbb
jne
add
inc
dec
xorb
add
sub
call
dec
arpl
movsb
ds
cmp
loopne
dec
and
sub
lock
jb
data16
pop
push
sub
sub
loope
bound
aam
mov
in
add
test
sbb
neg
pop
test
les
cli
mov
scas
mov
mov
imul
mov
mov
js
fisttps
mov
lods
dec
fsubs
hlt
fiaddl
push
mov
cmp
add
jae
inc
dec
lret
subb
xlat
ret
dec
push
adc
mov
lret
stc
pop
mov
cld
call
mov
rclb
xchg
insb
mov
imul
je
adc
mov
cmp
shll
pop
call
in
bound
xlat
into
ja,pt
push
mov
xchg
and
dec
inc
xorl
repnz
icebp
jb
popa
or
push
jg
or
dec
js
push
pop
cmp
loopne
js
sahf
push
cmpl
jnp
mov
cmp
jge
hlt
repz
mov
jo
lret
stos
mov
idivl
mov
adc
cmc
mov
fbstp
pop
dec
loopne
inc
stos
out
sbb
rcl
xchg
mov
add
jle
and
stos
out
cmpsl
cwtl
inc
pop
enter
fstpl
nop
test
dec
test
lret
jne
loope
test
imul
mov
xor
insb
movsl
icebp
jp
adc
cmpsl
cmp
aad
inc
mov
pop
adc
jno
faddl
pop
push
or
ljmp
lret
insb
push
sub
xlat
dec
xchg
mov
adc
add
sub
sbb
sbb
fsubrl
dec
jnp
dec
test
jbe
adc
mov
add
push
lret
lds
mov
loop
fnsave
fstps
push
imull
inc
and
sbb
inc
push
push
out
std
sub
out
int
pextrw
imull
fldt
add
sbb
sbb
sub
fisubrl
lahf
jge
push
addr16
insl
clc
or
ja
xchg
leave
aaa
mov
out
and
lods
out
sub
nop
std
cltd
ljmp
ds
xor
das
lods
xchg
jbe
repz
stc
mov
jae
call
sti
cmp
cmp
dec
in
setnp
orl
rcl
daa
adc
ds
insb
and
mov
int3
sbb
movsb
gs
ja
icebp
fwait
lret
das
jmp
adc
push
xchg
xlat
imul
xor
mov
push
dec
jmp
cmp
shrl
jmp
aaa
cmc
cmpsb
xchg
mov
pushl
data16
stos
jmp
cld
add
sbb
jo
jns
cmp
mov
sbb
loopne
jmp
dec
movsb
repnz
popf
inc
dec
sub
stos
testl
insb
jne
pop
xor
lret
jb
cwtl
cmp
mov
inc
push
mov
jne
push
popa
mov
add
push
or
mov
or
and
push
cmp
fldcw
sbb
das
mov
roll
mov
inc
out
inc
hlt
jns
ljmp
and
xchg
shrb
lds
xchg
faddl
cmp
jge
std
lahf
mov
out
and
lcall
ss
outsb
out
adc
and
mov
leave
push
test
adc
shl
adc
xor
add
mov
jmp
jecxz
iret
add
adc
lahf
jns
inc
mov
aam
repz
outsb
mov
xor
sbb
and
fnsave
sub
ljmp
add
scas
aad
lods
and
jecxz
dec
fisubs
xchg
or
cwtl
mov
cmovae
movsl
cmp
leave
arpl
fcmovbe
xor
leave
pop
aaa
adc
fyl2xp1
push
dec
pop
cmpl
sbb
or
cmp
xorb
aas
xor
test
or
pop
rolb
int3
out
xchg
stos
scas
pop
stos
jl
leave
xor
lret
je
jg
into
lds
xor
fcoms
icebp
pop
in
adc
mov
test
mov
cmp
push
daa
in
dec
push
pop
push
jne
out
push
test
test
mov
mov
fiadds
add
mov
cmpsl
ret
adc
xchg
imul
cmp
mov
jg
mov
jmp
push
dec
or
sbb
inc
jmp
stc
pop
cwtl
fidivrl
xor
es
outsb
mov
fstl
ret
push
and
inc
ljmp
push
loope
pop
lods
mov
je
fnstsw
sub
out
cwtl
fs
mov
inc
in
imul
jb
dec
dec
xchg
std
jecxz
inc
push
push
dec
enter
out
mov
fdivrs
sub
into
cmc
adc
imul
out
cwtl
cmp
icebp
or
movsl
jno
jmp
adcb
clc
lock
sbb
scas
divl
mov
cmp
vpmulhw
js
cmpsb
pop
fwait
add
shl
sub
or
jnp
xor
push
ja
shrb
jnp
dec
aad
pop
repz
int3
inc
hlt
pop
ss
push
fadds
daa
sub
mov
dec
sub
jbe
aad
mov
ret
xor
pop
push
mov
adc
cli
clc
xlat
mov
int
push
scas
cmp
ljmp
stos
push
mov
cmpsb
ss
adc
mov
data16
call
fst
iret
dec
sub
sub
dec
sub
cmp
cmpsb
dec
mov
and
mov
imul
es
movsl
sub
pop
outsb
loop
mov
popa
mov
add
sub
sti
movsb
mov
sub
pop
cmpl
fsub
rcrl
repnz
mov
fisubrs
das
in
ds
int3
cmp
push
js
into
hlt
jmp
push
push
gs
lret
inc
xchg
pushl
adc
dec
dec
addr16
jmp
dec
push
inc
stos
test
aam
dec
push
dec
idivl
pop
mov
cwtl
repz
fwait
mov
int3
rcr
add
nop
mov
in
call
ffree
inc
mov
icebp
and
and
push
or
inc
pop
sbb
iret
inc
sub
in
xor
dec
cmc
mov
or
jnp
xchg
into
and
dec
fiadds
sub
mov
pop
scas
push
in
out
int
dec
fwait
sbb
mov
movsb
push
inc
inc
enter
divl
popa
addr16
and
movb
in
xchg
out
repz
in
mov
and
daa
std
sbb
mov
nop
cltd
ret
flds
loopne
adc
dec
or
push
add
add
push
in
enter
mov
mov
ret
cwtl
add
cld
jno
mov
addb
jl
push
xchg
ret
in
jne
inc
test
imul
fnstsw
sbbb
mov
xchg
pusha
dec
icebp
cmp
jae
lods
sbb
sbb
hlt
or
mov
in
loopne
or
jo
mov
jl
lods
ss
ja
stc
cmp
sbb
adc
mov
enter
jne
dec
adc
sahf
addr16
inc
mov
cmc
or
out
cmp
xor
mov
daa
xchg
std
mov
test
notl
pop
bound
cli
push
cwtl
add
inc
icebp
fldt
cld
fwait
push
ds
mov
and
imul
xchg
es
lret
pop
and
xchg
jg
mov
fwait
js
push
cmp
test
icebp
enter
lcall
stc
add
fwait
movsl
cmpsb
or
add
sbb
push
nop
pop
enter
xor
shll
mov
sub
pop
dec
enter
pop
daa
sti
push
xor
mov
repz
ret
icebp
shlb
scas
add
clc
inc
push
mov
lds
or
add
sti
dec
fcomip
fmuls
stos
adc
shll
cmpsb
clc
int3
mov
xchg
adc
test
mov
xor
push
imul
xchg
cmp
add
sub
shlb
inc
icebp
sub
pop
lods
dec
mov
ja
shlb
scas
sarl
mov
data16
rcll
insl
hlt
pop
and
les
push
lea
inc
jecxz
push
fisttpll
and
repnz
js
or
or
in
sub
add
movsb
adc
mov
cli
dec
clc
shr
call
adc
sbb
sbb
out
stos
push
xchg
jl
in
fstl
xchg
lcall
sarl
and
ljmp
scas
movsl
popa
mov
fwait
or
mov
inc
dec
cmpb
inc
mov
arpl
mov
rorl
push
mov
cmp
cmp
inc
mov
sbb
jae
push
cmp
adc
cmp
mov
xchg
imul
and
mov
lea
dec
enter
mov
inc
in
je
and
stc
mov
movsl
sub
mull
dec
jecxz
adc
aas
cmp
ret
pop
shrb
mov
push
loopw
ret
call
xor
clc
xor
iret
xor
jle
cli
or
movsb
add
mov
inc
into
and
mov
fstps
mov
pop
movsl
cltd
mov
call
pop
loopne
lahf
dec
push
gs
ror
loop
enter
in
std
mov
cld
ret
stos
rcrb
in
and
mov
std
gs
sbb
ret
data16
call
movsl
and
adc
lea
ljmp
xchg
out
sahf
xor
js
and
push
jmp
in
addb
mov
mull
out
pusha
jp
insl
stc
movsl
push
sar
out
pop
roll
xchg
scas
push
js
push
or
sub
dec
mov
jb
mov
push
sbb
scas
andl
sbb
add
stos
jbe
js
mov
pop
push
movsb
sub
ds
sahf
push
xacquire
loopne
adc
lods
out
mov
sbbl
inc
shll
pop
imul
imul
pop
sub
test
int3
fnstenv
jl
add
xor
sbb
mov
mov
xchg
or
xor
ret
xor
stos
or
int3
xchg
xor
jmp
mov
and
xchg
sub
clc
xchg
lret
add
adc
lods
sbb
shll
add
inc
aad
lret
fistl
lret
sbb
je
and
and
mov
push
or
pop
push
xchg
fs
xor
neg
cld
lds
fdiv
in
leave
test
and
cltd
lea
es
xchg
pop
rorb
adc
push
popa
orl
xlat
jnp
pop
xchg
stos
pusha
xor
push
lahf
mov
add
fwait
lods
lods
push
sub
inc
xor
xchg
mov
enter
xor
push
fmull
mov
scas
daa
pop
sbb
cmp
int3
in
cmp
cmpsl
mov
jmp
and
pop
int
inc
jbe
stos
test
push
addr16
push
inc
jae
jne
aas
imul
lret
sbbl
loope
push
fistl
sahf
xchg
mulb
pop
inc
jno
or
arpl
sbb
cld
sub
xchg
jecxz
jno
jle
ret
xchg
and
arpl
arpl
adc
bnd
nop
push
push
lret
aaa
push
lcall
imulb
jno
mov
bound
jp
pop
mov
add
repz
push
xchg
push
shlb
loop
xchg
negb
test
and
andb
fwait
sub
loopne
pop
dec
xor
cltd
jo
loope
lods
fsubl
push
popa
inc
xchg
mov
add
mov
ret
push
and
outsl
sbb
loop
jns
jbe
inc
sbb
sbb
or
gs
cmpsb
clc
mov
test
sub
pop
fdivr
jl
scas
xchg
mov
flds
dec
hlt
loopne
and
test
or
loopne
adc
dec
mov
pop
or
mov
fistl
rsm
test
jnp
leave
jmp
add
push
pop
xor
inc
popa
adc
ficoml
cld
dec
xchg
pushf
jne
pop
mov
icebp
pop
les
aam
fisttpl
fcmovb
movsl
lret
mov
aam
div
push
or
cmp
cmpsl
jmp
cmp
leave
incb
inc
fstpt
stc
jne
insl
je
inc
xor
fcomip
jg
into
cmc
cmc
add
icebp
mov
and
sbb
jmp
outsb
call
pop
rcl
mov
mov
mov
pop
mov
and
sub
clc
xchg
or
add
test
cmp
out
dec
cs
test
fdiv
js
dec
pop
push
fcom
mov
popf
icebp
sub
or
ret
movsb
jnp
popa
icebp
xchg
sbb
jg
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
