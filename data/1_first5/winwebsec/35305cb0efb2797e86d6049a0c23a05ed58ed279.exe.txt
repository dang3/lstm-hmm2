inc
cltd
or
pop
add
loope
jl
int3
aas
add
jl
clc
xor
jle
dec
out
imul
cmp
fs
out
push
cmc
jl
lret
xchg
int3
js
cmp
movsb
mulb
cmpsl
lock
lahf
push
inc
mov
sti
mov
fidivl
and
cld
push
cmp
push
jl
jl
insb
movsb
mov
movl
add
movsl
push
or
mov
jae
sub
lret
adc
lods
push
mov
adc
test
push
mov
mov
gs
ljmp
cmp
dec
cmp
iret
aam
jecxz
loope
test
movsb
jg
and
cmp
pop
xchg
inc
xchg
sub
popf
dec
loop
scas
mov
mov
add
das
inc
lcall
divl
and
sub
pop
shlb
out
js
mov
nop
fnstcw
add
out
in
sbb
aad
cmp
or
outsb
stos
mov
jbe
xchg
sahf
jbe,pn
or
aas
sbb
sub
fdivrl
test
sub
incb
repz
and
xor
inc
mov
and
aad
cmp
jp
ss
cwtl
insb
cwtl
jge
and
dec
or
dec
or
cmpsb
pop
int3
icebp
push
ljmp
mov
fs
rcr
lods
jmp
xor
cmc
lock
adc
out
inc
dec
xlat
popa
or
rcrb
cld
repz
mov
scas
pop
push
cwtl
xchg
es
loopne
sbb
enter
add
push
dec
jno
inc
movsl
push
jmp
popa
jnp
mov
test
lods
pop
mov
ret
out
dec
xchg
div
jno
jg
xchg
rcrb
or
cltd
and
testb
inc
popf
stos
add
push
dec
mov
hlt
rcll
pop
adc
clc
inc
xor
mov
lcall
fists
mov
subl
arpl
dec
fstpl
inc
cmc
dec
xor
lods
cmp
hlt
cmc
pop
inc
nop
cmp
mov
cmp
push
icebp
aam
cmp
lret
push
cmp
cmp
jg
std
xchg
ss
inc
cmpsl
pushf
dec
stos
jns
loop
sub
add
fldcw
and
adc
mov
jle
inc
nop
add
aas
pop
xor
inc
fs
imul
inc
xor
add
js
outsl
sbb
sub
jo
xchg
int3
pop
lock
aam
xchg
fistpl
nop
sub
mov
xor
mov
push
jb
or
cmpl
xchg
push
xor
or
into
addl
mov
inc
pop
dec
lahf
add
add
or
push
sahf
dec
push
ljmp
fiaddl
cmpsb
pop
xor
xchg
jge
mov
sub
in
stc
xchg
mov
call
or
in
mov
leave
fwait
adc
inc
xchg
jecxz
add
outsl
popf
ret
nop
fisttpl
pop
lret
push
lods
rol
js
mov
push
fidivs
lahf
or
jp
adc
pop
stos
jne
xchg
lret
shll
int3
lret
and
mov
or
sub
inc
std
xchg
sahf
cmp
pop
add
rolb
pop
inc
xor
mov
push
lcall
rcll
pop
int
cmp
hlt
adc
mov
loop
push
inc
popa
jne
popf
lahf
mov
fistpll
adc
adc
xor
dec
xchg
call
xchg
inc
xor
cmp
jbe
xchg
mov
not
imul
pop
jp
pushf
loopne
pop
inc
cli
enter
ss
cs
sub
loopne
or
scas
push
jns
mov
lods
insb
stos
push
insl
jl
sti
outsl
dec
mov
popf
jecxz
les
mov
cltd
cmc
push
popf
ljmp
leave
pop
imul
sub
fistpll
mov
not
in
js
int3
pop
mov
cmp
xchg
gs
lds
int
mov
fdivl
push
add
mov
adc
sub
fld
mov
xchg
cmp
hlt
push
dec
cmp
cli
mov
push
fs
mov
mov
xchg
jo
pop
jecxz
mov
sub
mov
int
pop
sub
mov
sbb
dec
fs
lret
insl
cli
xchg
test
or
mov
das
dec
mov
cmpsb
sti
pop
jne
xchg
sbb
movsl
pop
xchg
jo
xchg
xchg
cmpsl
jbe
repnz
in
aas
dec
dec
cmp
test
xchg
mov
stos
repnz
cld
add
leave
lods
outsl
loop
jl
xor
es
push
divl
or
cld
pop
mov
setl
sbb
adc
xor
test
inc
xchg
lahf
adc
int
cmp
repz
popa
in
mov
xchg
fsubl
inc
addr16
sbb
sbb
movsb
repnz
push
out
mov
mov
or
lds
pop
add
lds
xchg
clc
push
fdivl
and
out
je
repnz
mov
cmp
pop
lar
inc
mov
jbe
addr16
sbb
jle
jne
fistps
adc
mov
sbb
sarb
test
inc
jg
push
je
inc
jb
mov
insb
or
ds
xchg
push
jle
sub
insb
xchg
adc
test
dec
hlt
mov
stos
and
dec
pop
inc
sbb
hlt
xlat
adc
ja
dec
loope
test
push
xlat
sbb
cmp
inc
nop
fdivrl
repz
jnp
mov
xor
out
add
adc
fildl
push
or
xor
jp
divb
dec
jae
pop
mov
mov
aad
jno
add
jmp
popf
stc
stos
dec
jmp
pushl
iret
nop
inc
pop
fistpll
mov
aam
into
lahf
push
loope
adc
xchg
mov
pop
jb
sub
fistpll
pop
push
pushl
or
call
xchg
mov
loopne
in
jg
mov
jg
push
cli
bswap
and
mov
into
cmp
repz
test
add
inc
imul
or
dec
das
popf
or
jb
cmpsl
imul
mov
push
sti
mov
push
push
push
mov
std
test
add
or
into
and
mov
xorb
test
ss
push
xor
pop
add
pop
dec
inc
scas
cmp
xchg
mov
cld
and
mov
stos
enter
out
mov
ds
ret
je
in
in
pusha
cli
pop
pop
pop
or
xchg
int3
dec
add
sbb
lahf
and
jne
pop
sub
cmpsb
cmp
into
shl
jno
or
sbb
dec
iret
ljmp
movsb
or
mov
mov
dec
call
jns
lahf
fstpl
inc
mov
pushf
and
sbbl
das
dec
mov
test
pop
pop
jo
fcoms
sbbb
jns
jg
out
mov
movsl
mov
pop
mov
jno
ss
out
out
dec
mov
mov
cli
dec
pop
jno
ss
lods
addl
jmp
rcrb
jmp
jmp
lcall
cmp
mov
ljmp
lods
mov
fwait
dec
stos
sub
and
clc
cmpsb
or
push
fcmovne
mov
sbb
insb
dec
sub
sbb
jnp
jp
add
sub
popf
loopne
enter
cmp
in
out
mov
scas
repnz
imul
adc
mov
shlb
xor
les
shlb
addr16
rol
dec
lret
dec
cmp
test
ds
jge
test
jo
aaa
sti
sbb
jae
xor
add
popa
mov
fwait
lcall
adc
fs
mov
push
jns
dec
ljmp
movsb
pop
jmp
add
push
pop
cld
mov
adc
fistps
lret
lods
jb
mov
fidivrl
popf
mov
sub
sub
inc
int3
sbb
test
sbbb
inc
mov
xchg
mov
fidivrs
and
out
ret
mov
mov
mov
int3
int3
jle
popf
adc
std
push
cmpb
jbe
lcall
jno,pt
xlat
mov
in
cld
inc
and
lock
push
jl
dec
jo
xchg
jmp
testl
push
push
add
aas
loop
packssdw
xchg
addr16
adc
sub
jp
mov
adc
jp
cmp
insl
ja
fistps
sub
or
xor
pop
aaa
pushf
mov
pop
mov
push
int3
xchg
lods
shll
mov
push
outsl
or
nop
pop
mov
clc
int3
in
push
or
out
hlt
push
adc
mov
push
outsb
cli
add
pop
mov
jns
repz
jp
clc
mov
mov
dec
cwtl
mov
loopne
push
adc
or
push
xchg
xchg
loop
sahf
enter
mov
int3
dec
sub
in
push
shlb
imul
insl
xchg
adc
mov
xchg
inc
mov
xchg
cmpsb
movsb
dec
xchg
push
xlat
pop
out
cmp
xor
ffree
call
dec
sbb
sub
nop
sub
stos
out
pusha
sbb
inc
insb
mov
out
jmp
mov
sbb
cmpsb
fwait
cmp
in
insl
sbb
cmp
sub
mov
cmp
xor
xor
jnp
push
in
ljmp
fwait
xchg
or
xchg
mov
shl
and
xchg
movb
cld
out
mov
loope
arpl
ficomps
cmp
push
lds
mov
cmp
cli
adc
pop
aad
shll
sub
sub
inc
and
scas
mov
inc
lcall
leave
mov
cmp
test
xor
and
adc
sbb
ret
and
je
cmp
outsl
mov
jmp
fbld
inc
adc
push
or
pusha
fcomp
pop
adc
jle
clc
leave
rorb
into
ljmp
ficoml
rol
je
cwtl
mov
pushf
aas
jl
xlat
jle
mov
inc
aam
push
dec
decl
popa
divb
ja
cli
in
dec
sbb
and
add
in
popf
adc
dec
jne
pop
push
sbb
cmp
das
ss
jle
mov
dec
pop
lret
mov
lock
adc
jns
les
push
inc
std
jns
cmp
xchg
add
push
dec
jge
cwtl
ljmp
mov
xor
pushf
out
add
add
std
iret
xlat
mov
push
in
add
repz
movsl
and
dec
mov
and
inc
jnp
mov
add
aaa
popa
cmpl
fnsave
ja
lods
cmpsl
in
into
pop
data16
fsubl
pop
push
push
mov
sub
lahf
sub
ja
imul
les
es
dec
fadds
incl
pushf
shll
andb
sbb
mov
js
xchg
lods
pop
scas
sarb
cld
mov
push
inc
shl
iret
aam
mov
jge
push
loopne
add
sbbl
inc
xor
jl
push
enter
pop
mov
mov
mov
fcomps
sub
inc
sbb
push
dec
mov
aad
loope
sbbl
jg
pop
and
arpl
jge
in
in
and
stos
lea
cli
andb
cmp
sahf
mov
orl
cld
pop
dec
lcall
jg
loope
mov
loope
fiadds
mov
sub
icebp
jne
hlt
lods
push
leave
addr16
sbb
imul
test
or
sbb
push
loop
inc
push
mov
or
pusha
aam
test
xor
shrb
sub
sub
mov
or
les
mov
jo
pop
adc
orl
jp
jmp
sbb
clc
loope
cmpsb
mov
in
mov
outsl
andb
sub
xlat
dec
arpl
sub
shlb
test
fs
outsb
sbb
ret
test
xchg
test
mov
stos
mov
out
aad
rorb
xchg
imul
cmp
mov
fisubs
adc
test
fsts
gs
clc
pop
mov
fstps
jne
out
sbb
inc
pop
inc
pop
icebp
sbb
dec
xor
xchg
cli
add
mov
cmp
mov
push
iret
cmc
mov
aaa
sub
aas
sbb
ljmp
in
shl
filds
adc
roll
mov
xlat
inc
adc
mov
js
sahf
mov
mov
xor
adc
dec
adc
int3
mov
in
push
es
idivb
adc
xchg
ds
mov
addr16
fucom
cltd
ficoms
fmuls
xchg
push
imul
push
icebp
jns
xchg
pop
into
xchg
jmp
cmp
lret
mov
repz
popf
std
sti
jno
imul
mov
enter
sub
scas
data16
loop
jmp
std
shl
cmp
imul
cmc
loope
push
add
mov
adc
pusha
mov
loopne
loope
inc
movsb
cs
or
mov
push
xchg
or
aad
or
xor
dec
enter
clc
test
inc
movsl
mov
clc
adc
pushf
and
cmpsl
call
cmp
or
cmp
iret
ret
xchg
mov
cmpsl
je
jecxz
loopne
imul
inc
jo
cmp
mov
cld
sub
pop
xchg
xchg
fwait
punpckldq
mov
mov
insb
out
jmp
inc
ljmp
fwait
xlat
out
and
lahf
daa
mov
mov
mov
jo
jg
or
ret
ss
mov
lahf
pop
repz
add
test
fstl
add
std
nop
sbb
scas
xchg
stos
aaa
roll
aaa
stc
enter
in
and
jmp
jae
fldcw
add
out
out
test
sbb
outsl
in
jbe
push
sbb
fdivrl
mov
lret
push
xchg
push
in
push
xchg
ds
mov
insl
movsl
mov
mov
cwtl
mov
loope
push
in
mov
inc
mov
pop
in
mov
lods
ss
pop
stos
mov
push
mov
xchg
inc
lret
out
mov
fiadds
push
fildll
lcall
fdivrl
mov
and
dec
xor
lcall
scas
jg
rcrb
bound
mov
bound
adc
mov
cmp
sahf
add
mov
cmp
push
jae
jecxz
es
add
jle
shll
jnp
stos
js
and
int
repnz
ffreep
dec
xor
test
jge
cmp
ljmp
mov
pop
cmp
sti
xor
push
jl
jg
insl
dec
push
loopne
jp
cld
mov
out
addr16
sahf
test
mov
xor
push
test
sub
mov
enter
add
xchg
inc
xchg
ret
cmc
jbe
pop
inc
enter
sub
xchg
out
jno
mov
sub
rol
in
mov
hlt
in
icebp
jbe
divl
xor
xor
push
stos
cmpsl
call
cwtl
sbbb
scas
adc
daa
push
lsl
mov
mov
outsl
dec
sub
fldt
dec
or
and
xor
jbe
jb
mov
dec
mov
ljmp
arpl
mov
xchg
mov
dec
inc
sbb
mov
in
sbb
jae
pushf
fadd
sub
sbb
es
scas
das
push
cli
aas
pop
pop
pop
mov
xor
and
ja
xchg
aad
sahf
mov
addr16
xor
out
push
mulb
add
rcrl
and
nop
push
xchg
jb
push
xchg
fdivp
pop
sub
std
mov
or
jg
add
push
mov
inc
cmc
movsb
lcall
dec
ds
xor
imul
push
je
loopne
pop
mov
popa
or
in
pusha
pushf
in
fisttpl
jge
icebp
sbb
pop
fimull
adc
mov
jae,pt
xchg
mov
jle
fmuls
and
mov
das
scas
cli
shrb
and
xchg
jecxz
shl
std
aam
push
lea
mov
or
jl
xor
push
pop
xor
xor
fstpl
pop
int
push
outsl
je
pop
pop
add
icebp
cmc
push
lock
jae
xchg
mov
xor
sbb
les
push
rorl
jae
scas
push
out
lahf
xchg
pop
mov
aas
mov
rcrb
sub
xor
dec
insl
push
or
stos
cmc
push
dec
dec
or
sbb
leave
jp
pop
test
fmull
mov
scas
xchg
out
les
push
mov
test
das
adc
sahf
add
lcall
push
sbb
leave
lret
mov
jne
es
mov
xchg
iret
stos
sarl
mov
ret
jnp
dec
pop
in
sbb
push
adc
mov
iret
into
sub
cmp
clc
data16
jge
popf
fsubl
add
fisttps
gs
jne
adc
movsl
sub
xchg
stos
aam
xor
mov
mov
mov
rorb
es
dec
xchg
cmp
hlt
cltd
cmpsl
roll
mov
dec
adc
fnstenv
repz
js
imul
and
mov
xchg
fs
dec
push
xchg
pusha
jle
fwait
incl
loop
fcoml
movsl
fsubrs
mov
push
xlat
sbb
cmp
ret
mov
aam
and
sub
cmp
fisttpll
movsl
or
adc
push
sti
fldcw
testl
mov
adc
sti
lea
and
iretw
out
clc
pop
call
fdivrs
sbb
mov
test
in
in
or
sub
or
inc
mov
aaa
rclb
movsb
inc
dec
jge
pop
pop
jae
and
cmp
mov
add
lds
jae
test
mov
mov
push
xchg
bound
ja
orl
cltd
loopne
outsb
sahf
push
arpl
sti
xchg
jns
arpl
xchg
les
loopne
cwtl
incl
sti
adc
xchg
xlat
je
test
movsb
or
int3
loopne
in
jb
jge
push
pop
shrl
into
test
xor
sbb
insb
in
adc
adc
jbe
jge
in
mov
jge
mov
add
pop
mov
lea
sub
leave
adc
bound
cmp
mov
or
pop
mov
bound
loopne
test
sti
add
out
popf
push
sbb
sbbb
loope
mov
mov
jg
push
pop
imul
and
mov
rcrb
cmp
jae
in
pop
es
arpl
imul
fistps
mov
mov
or
adc
lret
popf
inc
add
js
pop
xlat
pop
and
inc
push
imull
jmp
orl
aas
or
out
add
cmp
and
lods
lods
mov
pop
xor
in
cmc
test
popf
mov
ljmp
push
lods
fists
hlt
pop
addps
ret
jnp
adc
sub
mov
jp
repnz
mov
leave
mov
jle
xchg
aam
sub
insl
loop
dec
loop
and
dec
xchg
sbb
push
xchg
cmpsl
insb
insb
flds
mov
cmp
pop
pop
ret
iret
ds
paddb
fiadds
mov
cmc
adc
into
les
in
outsl
movsb
out
lret
mov
out
arpl
add
jmp
adc
leave
sbb
adc
outsb
push
and
mov
lods
out
mov
loope,pt
pop
xchg
xchg
push
shlb
xchg
pop
jo
cmp
and
mov
insl
enter
call
scas
and
cwtl
shlb
addr16
adc
notb
add
cld
fstps
lahf
stos
xchg
mov
imul
lea
pushf
sahf
mov
cmp
loope
pop
push
jno
push
xor
lods
cmp
mov
andl
push
out
adc
int
insl
out
std
cmp
mov
ja
dec
inc
lahf
call
pop
xor
mov
mov
pop
cmp
inc
arpl
pop
fs
mov
mov
cmp
repnz
jb
sbb
ljmp
and
in
jae
leave
imul
mov
fmul
or
cmp
mov
dec
aam
lahf
dec
test
lret
js
fdivrs
push
xchg
fiaddl
jo
cmp
cmp
pop
pushf
add
push
stc
insl
divl
imul
cltd
xor
push
pop
or
mov
sbb
enter
fld
imul
mov
lock
xchg
sub
adc
test
imul
jl
jb
and
lcall
fidivrl
cmpsb
arpl
and
fidivl
sahf
dec
xor
xorb
adc
sar
cmp
jecxz
mov
repnz
add
push
ja
loop
test
xchg
shlb
add
lret
inc
test
pop
mov
lds
jecxz
shrl
mov
mov
enter
mov
cmpsb
les
cs
or
mov
rolb
cwtl
gs
mov
xchg
popf
mov
add
or
adc
ljmp
inc
adc
imul
dec
outsb
jmp
mov
lret
mov
sti
mov
jg
cmc
out
icebp
int3
or
sahf
jl
sarl
shl
and
aam
fistpl
jb
inc
sbb
test
rorl
out
cmp
stc
sub
pop
cwtl
rcrb
daa
cmp
jg
sarl
lods
in
mov
fistpl
inc
rcrb
movsl
les
lcall
inc
in
jo
imul
push
test
mov
mov
adc
jae
jae
insl
ljmp
das
lahf
cmp
sub
mov
shl
ljmp
push
push
add
sahf
adc
jp
push
out
sbb
adc
stc
rolb
and
mov
push
bound
xor
stos
adc
fistps
mov
adc
lea
cmpl
cmp
adc
xchg
inc
sar
pop
or
scas
dec
sti
mov
cmp
add
xorl
addl
and
rcr
lea
mov
das
je
je
pushf
or
push
dec
mov
iret
test
fcompl
jg
mov
test
mov
inc
cld
push
mov
mov
out
xor
fstpt
jae
je
jb
add
lods
add
and
xchg
out
jnp
pop
lret
je
sahf
shrb
dec
jl
popf
sbb
adc
mov
stos
andl
shrb
add
mov
fmuls
fdivrl
mov
or
and
lods
mov
jb
int
xchg
mov
aaa
fwait
cmp
adc
and
mov
stc
and
add
clc
rorb
xor
xchg
add
jnp
imul
xchg
les
fmul
loop
xchg
add
and
pop
adc
cmp
sbbb
std
cmp
adc
lea
jbe
hlt
inc
jg
arpl
dec
aam
lods
call
fwait
sbb
mov
xchg
mov
mov
mov
out
int
fdivs
sub
rep
ja
xor
cmc
mov
inc
cmp
je
mov
fdivrl
jmp
repnz
adc
sbb
xchg
lds
adc
mov
cmc
jl
pop
data16
out
sbb
fisubrs
leave
mov
fs
jmp
push
test
mov
mov
mov
adcb
into
mov
add
outsb
jle
jg
imull
cmp
inc
pop
roll
repnz
aam
push
in
js
jo
cmp
enter
js
fdiv
out
sbb
lods
cmp
sub
or
mov
mov
adc
jb
addb
cmp
aas
inc
jb
aaa
clc
icebp
in
lea
mov
in
mov
hlt
mov
cmpsb
mov
xchg
mov
ljmp
push
dec
add
cmp
icebp
add
ret
mov
pop
or
dec
sahf
add
push
xchg
loop
test
gs
xchg
cmp
fs
shlb
cs
in
push
push
and
lock
lret
push
stos
out
push
frstor
mov
pop
ds
mov
pop
dec
cmp
fst
or
add
int
stos
jge
pushf
dec
mov
aad
bound
dec
inc
jbe
sub
popa
shll
sahf
repnz
jb
mov
rorb
ljmp
xchg
xor
repnz
xchg
les
mov
jp
bound
les
je
add
inc
cmp
pop
dec
or
and
cmp
xchg
xor
push
add
push
or
adc
xchg
adc
lret
jbe
lods
xor
cwtl
shrl
mov
int3
daa
repz
inc
xchg
sahf
pop
mov
mov
pop
cwtl
or
test
imul
xor
repnz
leave
test
insb
je
mov
fidivrs
insb
cwtl
jg
jne
loope
mov
inc
mov
sbb
cmp
addr16
mov
xor
loopne
idivb
adc
add
sbb
xchg
divb
scas
mov
cmp
dec
push
mov
inc
test
lock
mov
pop
jg
xchg
rcrl
pop
xor
stc
pushf
mov
xor
mov
mov
jno
mov
adc
sbb
fistl
pop
xchg
cmp
jg
mov
mov
mov
cwtl
cmp
sahf
inc
pop
xchg
fdivrs
or
inc
into
mov
fisubrs
and
clc
lret
push
mov
adc
ja
mov
hlt
imul
loop
cmp
cmp
lds
dec
repz
inc
sub
jecxz
stos
enter
mov
cmp
cmc
sbb
ja
mov
lret
dec
inc
in
xor
xchg
inc
dec
or
jecxz
js
hlt
pop
jge
push
je
or
iret
and
sub
hlt
movsl
or
mov
cmp
scas
punpckhbw
in
outsl
dec
insb
das
sbb
stos
sbb
pop
adc
int3
add
add
cwtl
mov
dec
sub
add
fwait
sbb
adc
and
je
or
iret
inc
sbb
sbb
inc
jmp
adc
out
cs
dec
addr16
pop
rol
dec
pushf
cmp
jne
xchg
fs
mov
jb
push
dec
andl
mulb
mov
aad
in
add
inc
gs
mov
and
mov
pop
push
cli
std
jl
push
in
jns
mov
lods
loope
in
fdivl
sbb
xor
rolb
cmp
aas
aas
ss
and
cs
sub
popf
dec
inc
jecxz
sar
in
xchg
xchg
andl
sub
lcall
bound
icebp
jle
push
sbb
xchg
loop
lock
sbb
call
pop
push
fwait
test
and
adc
or
cmp
insl
sahf
inc
gs
int
mov
push
int
jp
lcall
dec
dec
xchg
xchg
sub
or
jae
mov
shll
inc
div
addl
movsb
int
lret
and
lods
mov
jg
adc
testl
cmp
cmp
mov
sbb
push
and
mov
cld
int
stc
mov
inc
xor
push
mov
lock
loopne
mov
imul
mov
sub
mov
inc
pop
je
jb
mov
xchg
std
inc
cld
and
xchg
pusha
sbb
xor
jg
push
aas
xor
xchg
sbb
repnz
jns
mov
xchg
bound
mov
movnti
out
mov
test
mov
incl
lahf
lock
push
dec
outsl
sbb
mov
jle
pop
scas
stc
das
in
ret
das
outsl
xor
sar
sub
fimuls
icebp
ds
sub
test
fsub
adc
daa
dec
add
mov
cmp
lea
xor
cltd
jmp
mov
ss
pop
and
cmc
das
xor
movsl
clc
mov
rcll
xchg
sub
sub
jb
fcomps
xchg
and
and
or
xchg
push
push
jmp
aam
add
adc
rolb
sbb
hlt
fsubl
or
sub
int
dec
sub
sbb
mov
lret
fldl
mov
inc
or
or
iret
cwtl
mov
lock
push
xchg
mov
lcall
enter
mov
sub
pop
loopne
pop
fiadds
movsl
clc
jb
in
inc
inc
in
or
pushf
rcrb
orb
bound
pop
scas
dec
std
mov
arpl
mov
int
add
jle
in
add
push
or
xchg
sbb
add
jmp
dec
roll
pop
iret
in
adc
mov
ret
or
mov
leave
into
or
lock
ja
pop
mov
dec
mov
and
pop
cmpsl
push
fcmovb
pushf
test
shll
or
push
lds
or
and
lock
xchg
test
sbb
xchg
or
jmp
xor
sub
and
push
fcmovu
scas
inc
out
je
dec
sbbl
lahf
rclb
cmp
cmpsl
scas
push
xchg
in
pop
inc
xlat
repz
negl
std
stos
add
cld
les
or
adc
dec
outsl
mov
add
loope
adcl
pop
shll
dec
add
mov
jbe
push
movsb
rorb
clc
clc
xor
and
lods
dec
daa
mov
fstl
lea
pop
in
push
int
bound
mov
push
aam
mov
xchg
mov
and
insb
jecxz
rcrb
hlt
sahf
and
xlat
mov
idivb
xchg
add
std
mov
pop
fildl
push
cs
jmp
push
dec
repnz
jb
jg
dec
pop
xchg
leave
rcrl
out
aaa
es
js
or
dec
arpl
add
inc
fadds
js
xchg
xor
insb
dec
jne
xchg
jecxz
fstl
cmc
repz
popf
fistps
mov
movsb
add
sbb
mov
imul
leave
mov
ret
mov
aam
test
test
or
xchg
push
bound
fdivl
dec
movswl
dec
pop
cmp
mov
scas
push
or
push
push
out
lods
inc
fimull
std
fimuls
jg
hlt
das
sub
scas
aas
inc
jg
jmp
jae
inc
jecxz
movl
lea
popl
adc
les
gs
fisttps
mov
xor
stc
imul
insl
cmp
cwtl
or
dec
mov
or
movl
push
mov
xchg
cmpsl
mov
mov
movsb
adc
push
in
int
jnp
mov
mov
cmpsl
hlt
ja
insl
mov
in
arpl
aad
orl
loop
sub
inc
repnz
lods
ja
repnz
sbb
imul
or
outsl
sub
add
icebp
push
stos
and
insb
iret
popa
ljmp
in
xchg
pop
outsl
aad
mov
lods
jg
push
ds
pusha
mov
lret
out
xor
mov
inc
popf
ds
mov
sarb
sbb
jp
or
sarb
cmpsb
fstpl
daa
daa
cltd
xchg
xchg
pushf
or
jg
inc
dec
ret
mov
test
pop
mov
call
jns
xchg
mov
lcall
hlt
inc
mov
push
xchg
mov
sahf
inc
adc
pop
call
or
sahf
add
push
dec
push
in
inc
cli
lock
dec
aad
ficompl
mov
or
pop
in
aad
outsl
adcb
sti
lret
push
jno
xchg
cmp
lret
cmp
xchg
add
xor
pushf
stos
stos
shll
push
add
fisttps
movsl
lahf
pop
movsb
inc
and
cmp
pop
and
xchg
xor
mov
sahf
subl
sub
or
shr
xor
pushf
or
cmp
xor
mov
enter
test
mov
sub
jp
orb
lcall
mov
stc
gs
lahf
es
sub
daa
push
nop
dec
iret
ds
in
aam
push
push
pop
mov
pusha
cmpsb
jb
dec
cld
push
push
xchg
xchg
ss
pop
lret
in
arpl
es
inc
jl
mov
iret
jge
adc
push
cmp
roll
mov
int
mov
pminsw
sub
pop
icebp
lods
mov
pop
subb
mov
sub
push
shrb
jo
inc
xchg
mov
mov
fs
add
ss
int
mov
mov
movsb
daa
lahf
leave
push
mov
or
cmp
xor
mov
mov
push
adc
add
popl
fwait
mov
out
test
and
add
mov
adc
xchg
fmull
dec
sub
loop
mov
pop
daa
sbb
int3
and
push
cmp
shl
mov
fiadds
adc
mov
aam
adc
ss
fwait
subb
movsl
outsl
xor
ficomps
jae
outsb
fdivl
les
stc
mov
adc
cmc
pop
andl
pop
iret
mov
loope
mov
shl
cmpb
inc
pop
add
jnp
fsubl
sbb
mov
fisubs
stos
test
pop
sbb
int3
mov
dec
adc
repnz
pusha
fidivrl
fcmovnbe
sbb
outsl
hlt
push
and
fildll
cmp
jne
aaa
mull
xchg
dec
mov
iret
rclb
sar
dec
divb
mov
or
int
mov
mov
ret
mov
js
aaa
pop
xchg
add
call
jl
inc
rclb
test
mov
iret
es
pop
daa
out
pop
rolb
je
xchg
or
iret
cli
mov
int
mov
or
dec
dec
mov
dec
loop
loopne
out
bound
fldenv
movd
in
insl
inc
pop
out
out
scas
outsb
inc
scas
in
loop
stos
xchg
push
sbb
cltd
ljmp
jl
dec
sbb
stos
aaa
ffreep
mov
lds
adc
sahf
clc
jne
sub
dec
cmpsl
sub
shlb
mov
dec
pop
adc
insl
js
out
aas
jmp
xor
cmp
mov
sub
shl
popa
cmc
pop
mov
cmpl
push
lock
rcrb
mov
test
push
mov
inc
cltd
aas
pop
or
adc
lret
leave
out
xor
or
lods
ljmp
ficoml
out
xchg
push
dec
popf
ja
add
and
out
adc
shrl
negl
push
inc
mov
inc
js
xlat
mov
push
xchg
mov
loope
dec
inc
movsb
xchg
inc
out
int3
fimuls
bound
sbb
sti
lock
dec
and
bound
sbb
sar
int
ds
push
sub
shll
xchg
xor
rcr
clc
xchg
dec
adc
adc
shlb
and
adc
pop
xchg
push
sub
jmp
dec
and
out
movsb
popa
shrb
repz
shrl
sbb
mov
cmp
add
cmp
adc
and
jno
fwait
dec
stc
loope
or
cs
mov
cli
xchg
xchg
dec
pusha
jno
jmp
dec
call
mov
jge
adc
sbb
fwait
or
popf
lods
push
jne
xor
shr
out
jg
in
sbb
pop
xlat
out
imul
inc
hlt
xchg
movsb
add
push
call
popf
shlb
test
ficomps
xor
or
push
jnp
or
xor
sbb
mul
jecxz
xchg
adc
xlat
or
aad
test
pop
mov
jne
xor
jo
popf
aaa
pushf
xchg
push
or
push
pop
decb
pop
mov
cmc
inc
and
xor
ja
scas
clc
movsb
or
repnz
ret
fisttpl
test
icebp
pop
xor
mov
roll
sub
add
inc
xchg
nop
push
dec
test
adc
loope
int3
jmp
data16
lock
xchg
loope
or
xchg
cli
jmp
gs
rol
adc
fisubrs
jo
push
jge
push
mov
jecxz
mov
cli
notb
mov
lret
pop
cmpsl
dec
loop
test
enter
pop
jmp
pushf
xor
sbb
lahf
jecxz
ret
xchg
rcrl
push
xchg
and
xchg
test
outsb
jecxz
daa
stc
add
adc
lods
adc
lcall
leave
scas
aam
nop
ret
mov
sti
stc
rcl
ja
sbb
push
imul
aad
mov
inc
xchg
ss
data16
mov
gs
mov
fisubrl
xlat
inc
xor
in
push
cmp
addl
sti
xlat
cmpsb
daa
jae
sub
into
sub
pop
insl
cli
aas
out
enter
lret
jae
push
sbb
leave
or
std
jno
jmp
popf
repnz
sub
jp
cmp
inc
mov
lods
out
in
mov
mov
push
ret
into
or
fdivp
push
idivl
imul
scas
push
lods
adc
fwait
push
cltd
sti
sub
fbstp
cmp
sub
pushf
lret
lret
daa
aam
les
cmp
jbe
cmp
int3
nop
xor
fwait
stos
and
dec
cwtl
sub
and
push
fs
adc
inc
addr16
cmpsb
cmpsb
setp
shr
fnstenv
test
shll
jge
dec
pop
enter
clc
es
push
jmp
and
fdivrl
push
adc
xor
mov
test
push
outsb
sbb
lret
add
lret
jne
mov
xchg
pop
pop
clc
lods
pop
dec
pop
ljmp
dec
dec
mov
movl
mov
popa
jg
push
mov
push
pop
inc
pop
aam
loopne
pop
or
repnz
mov
sbb
inc
pop
pop
dec
bound
and
dec
lods
jp
ret
jne
stos
cmpsb
inc
mov
fst
cmpsb
pop
lock
sub
hlt
push
loope
add
jecxz
lcall
int3
mov
test
das
test
jae
popl
movsb
sbb
cmc
in
jle
into
cmp
pop
clc
mulb
jge
push
xchg
sbbb
test
cmp
lret
test
pop
sti
les
add
xor
adc
shrl
pop
sbb
hlt
cmp
lock
aaa
fnstenv
adc
test
xor
mov
ret
cmpsl
jb
lahf
dec
and
shl
repz
cmpsb
xchg
aad
orl
or
push
cmpsl
mov
inc
push
and
and
jp
dec
mov
push
xchg
mov
mov
or
stos
call
int
cmc
push
pop
inc
add
push
aam
xorb
inc
sub
mov
push
sub
aam
cmpsb
out
dec
push
or
ss
das
ds
btc
insb
out
cltd
cmp
add
adc
lret
cmp
pop
mov
movsb
push
mov
icebp
sub
rorl
lock
in
push
lea
in
ret
mov
popf
adc
fnstenv
xor
pop
out
mov
sub
sub
fbld
aam
push
mov
sbb
push
mov
test
outsb
flds
test
adc
hlt
mov
movsb
adc
lds
and
inc
xor
adc
cli
repz
jmp
or
mov
push
pop
rcl
cmp
or
fdivs
ljmp
ja
add
sub
mov
int
sub
pop
jge
arpl
imul
subl
lahf
in
or
clc
push
dec
xchg
sbb
out
out
es
or
xor
and
inc
jg
pop
in
or
dec
mov
xor
pop
ljmp
adcl
and
outsl
push
mov
loop
cmp
inc
push
jno
dec
cld
add
mov
fwait
test
push
add
lcall
lcall
sbb
adc
js
mov
mov
jne
lods
pop
dec
iret
mov
push
out
test
inc
or
mov
test
cmp
negb
pushf
adc
out
jmp
imul
lret
xchg
and
imul
in
xchg
clc
data16
push
dec
in
cmpsl
xchg
jecxz
sub
test
cmp
adc
js
push
dec
sbb
xor
jecxz
push
sub
ljmp
cmpsb
lods
sbb
ljmp
out
pushf
lret
jo
xor
lcall
push
xlat
and
gs
mov
inc
lcall
or
mov
stos
or
xchg
xlat
cmp
lcall
push
subl
lds
loop
aas
fdivrs
mov
aam
pop
mov
adc
insb
pop
xchg
inc
cmp
mov
push
and
add
repz
enter
test
push
adc
movsb
pop
push
sub
dec
jl
ja
cmp
pushf
repz
js
jb
jbe
and
mov
xchg
push
jg
lods
add
mov
xchg
out
daa
jecxz
add
sub
dec
enter
loopne
inc
push
push
addb
sbb
lock
add
jl
clc
jno
pop
mov
jecxz
sbb
sarb
cmp
mov
pop
jmp
test
punpcklbw
mov
jmp
jmp
sbb
mov
test
cs
mov
and
stc
or
dec
cmp
lea
sbb
or
lcall
add
mov
lcall
sbb
daa
mov
cmpsb
cmp
fimuls
inc
inc
out
ret
pop
in
sub
shrb
dec
fs
adc
lret
and
jo
call
mov
sti
daa
cmc
lods
sbb
inc
xchg
clc
fisubrl
push
dec
in
xchg
push
dec
test
cmc
cmpsl
sub
je
xor
xor
push
movsl
fwait
sti
dec
popl
mov
fsubs
jns
cmpb
adc
std
in
test
or
repz
sti
adc
fldt
mov
dec
addr16
aam
test
sti
pop
daa
out
pop
jns
inc
insl
flds
scas
mov
test
pop
aad
stos
lea
xchg
fbld
shrl
neg
xchg
fmul
nop
sbb
popf
lock
enter
aaa
rorl
or
mov
mov
push
popa
popa
and
jne
cmc
mov
cmp
dec
inc
jne
ljmp
shrl
lcall
out
jnp
ss
pusha
daa
add
repnz
or
scas
insl
or
jbe
add
and
add
push
subb
xor
test
push
ds
dec
gs
cmp
push
adc
sarl
dec
fisttpl
push
push
sub
inc
inc
testb
xor
mov
out
insl
mov
push
sarl
sub
mov
xor
sti
scas
cld
xor
ljmp
pop
fistl
jae
push
push
adc
ret
pop
mov
and
daa
aaa
shrb
pop
lock
xchg
repnz
loopne
ficoms
repnz
xor
cld
inc
gs
addr16
mov
xchg
pop
fimull
cmp
mov
mov
out
sub
sti
jge
mov
push
ss
js
pop
cmovl
outsb
inc
fs
and
lods
push
push
mov
enter
and
test
lods
in
lahf
pop
loope
out
ja
mov
dec
and
and
jne
mov
jae
mov
mov
xor
mov
repnz
mov
outsl
enter
mov
in
xor
dec
movsb
idivb
jecxz
xor
sti
push
sub
dec
loop
je
jle
lahf
scas
stos
inc
xchg
idivb
jecxz
lret
or
and
pushf
lods
xchg
mov
fsubrs
movd
push
popa
add
decb
xor
sbb
jnp
pop
sub
adc
mov
subl
pusha
mov
adc
nop
sub
jmp
push
fwait
iret
xlat
rcll
out
test
cmp
notb
push
mov
cmp
jno
pushf
sub
vcvtpd2ps
ds
and
xor
testl
imul
jmp
nop
popf
call
outsb
ret
adc
adc
lods
imul
mov
fs
lock
push
divl
sbb
dec
in
pop
lret
push
shrb
leave
or
mov
jnp
testb
jne
add
arpl
or
push
nop
push
fs
arpl
jp
cs
mov
into
xor
lret
in
mov
sbb
js
icebp
mov
pop
insb
out
mov
aad
sbb
jne
sub
or
xor
clc
outsb
push
mov
or
inc
ds
dec
or
mov
lahf
sysexit
xor
cwtl
or
sahf
dec
sbb
mov
data16
mov
repz
push
adc
repnz
jo
into
push
jns
ret
les
inc
and
not
pop
cltd
out
lret
push
outsb
add
std
arpl
pop
cmc
out
fcomi
shrl
mov
jge
adc
jns
xor
dec
fs
xchg
adc
mov
mov
sbb
jl
xor
pop
movb
mov
mov
dec
in
clc
stc
movsl
jl
pop
cmpsl
cmp
xchg
movsb
ret
push
pop
fnsave
sub
enter
sti
push
test
lcall
dec
sub
loop
lret
pop
add
mov
push
sbb
out
mov
es
cli
popf
icebp
test
sub
insl
in
sub
sbb
jns
cmp
mov
sub
hlt
mov
das
gs
cmpsb
cmp
fs
out
neg
cmp
in
mov
jg
xchg
fnstenv
mov
jecxz
sub
sbb
xchg
or
in
and
fistps
mov
popa
jbe
jb
sbb
jb
aaa
xchg
cmpl
in
jle
into
sub
xchg
dec
ret
push
dec
xor
sarl
pop
inc
push
popa
sub
sarb
fwait
jecxz
xor
ss
push
push
and
sti
adc
xchg
data16
xchg
and
mulb
shlb
xor
and
mov
outsb
lds
and
fistpll
push
push
xchg
or
sar
push
sbb
dec
in
sbb
add
pop
jmp
adc
icebp
shrl
lds
xchg
imul
fsubl
pop
int3
repnz
pop
fadd
icebp
subl
mov
push
push
push
les
fadds
outsb
or
sbb
dec
loop
mov
dec
inc
xchg
mov
sbb
dec
mov
xor
jo
in
xchg
adcb
jnp
or
call
jle
imul
ds
adc
lock
push
mov
fcompl
mov
loope
mov
test
push
push
punpckhdq
movsl
out
rorl
pop
mov
adcb
ret
rcrb
push
xchg
mov
aaa
adcl
push
es
sbb
cmp
imul
jnp
loope
in
add
jo
jnp
into
mov
fmul
and
sub
add
inc
fistl
cld
pop
loope
das
push
in
inc
enter
adc
push
aad
ror
mov
cmp
enter
imul
cmp
jo
ljmp
imul
inc
jne
je
sub
fistpll
popf
in
and
lods
std
push
xchg
adc
xor
mov
pusha
test
mov
ja
ret
dec
inc
lods
xchg
adc
lahf
mov
add
pop
mov
dec
xor
push
jne
int
aam
repnz
sbb
les
lds
dec
aad
fstpl
and
imul
push
push
in
inc
out
jo
add
jg
es
push
xor
rol
adc
mov
jb
sub
cmpsl
aad
pop
add
fidivrl
ljmp
mov
adc
into
cmp
jge
fwait
adc
xor
test
ret
adc
sbb
in
xlat
and
cs
sahf
xor
mov
sub
aad
test
mov
push
lods
jo
in
popf
addr16
jl
push
mov
dec
xchg
ds
imul
sahf
fnstsw
std
cld
sbb
aas
inc
jbe
mov
hlt
add
lea
jns
cld
mov
test
inc
cli
fsubrs
enter
adc
outsb
call
mov
jg
fmul
or
out
inc
lods
repz
mov
mov
or
dec
fstpt
adc
in
xchg
fincstp
incl
stos
inc
pushf
xor
fdivrl
outsb
pusha
inc
jecxz
dec
ret
lret
pop
iret
and
push
jne
inc
adc
jmp
daa
cmp
inc
inc
push
or
insl
ja
lds
mov
sub
nop
xor
es
mov
je
adc
cli
fdivs
jge
test
mov
repz
ljmp
sti
dec
pop
orb
or
cltd
jbe
sti
scas
ret
movsb
adc
bnd
mov
sub
test
test
jp
mov
pop
ljmp
sbb
mov
popa
sti
add
test
adc
fstps
pop
outsl
je
mov
addl
sub
les
fldpi
inc
in
or
std
jp
push
stc
pop
ret
cwtl
ds
int
popa
movsl
mov
xor
jl
jbe
jbe
xor
loope
jge
int3
cmpsl
out
sbb
daa
orl
shrl
xchg
mov
enter
push
das
sbbb
mov
pop
fmul
push
jg
clc
lret
sub
enter
mov
cli
loop
mov
cmpsl
or
fwait
pop
add
sub
cli
imul
or
mov
cs
or
test
rol
fcoms
pop
push
pushf
ret
xchg
stos
das
pop
mov
icebp
dec
outsb
mov
ja
stos
xor
pop
jno
mov
add
pop
lock
scas
leave
mov
inc
jge
dec
test
and
lods
xchg
mov
sahf
push
cmp
jnp
out
icebp
jp
push
cmp
lods
jns
fmul
rclb
push
loope,pt
push
xor
stc
in
pusha
push
ret
pop
pop
jae
pop
and
or
pop
insl
imull
jne
jg
enter
sub
and
shl
add
out
jmp
mov
fwait
mov
jp
lcall
jo
mov
jb
mov
lock
jns
cwtl
cmpsl
mov
stos
xor
inc
fwait
sbb
stc
jge
cmpsl
dec
aam
xchg
pop
loope
fwait
inc
xchg
mov
out
sbbl
jnp
pop
adc
pop
insb
in
xchg
repnz
inc
jnp
xchg
arpl
mov
jb
sbb
jmp
xor
imul
bound
pop
out
xor
mov
adc
adc
aam
scas
add
popf
stos
bound
movsl
adc
pushf
xor
in
dec
or
leave
jp
js
add
rcll
jl
or
adc
dec
fmull
lds
add
mov
into
popf
mov
fimull
mov
xlat
adc
xor
fistpl
mov
mov
jns
or
in
outsb
adc
pop
icebp
xchg
pop
or
stc
jne
iret
mov
outsl
imul
jle
xor
aaa
imul
adc
movsb
test
mov
lods
dec
repz
pop
and
mov
pop
mov
imul
std
xor
into
outsb
movsl
bound
call
aad
mov
pop
enter
out
push
out
fbstp
hlt
mov
popl
push
outsl
xadd
xchg
shr
adcb
add
pusha
ja
push
pop
cmp
fnsave
jecxz
pop
or
aas
imul
cli
mov
scas
jl
les
or
scas
fs
push
or
push
lds
mov
add
leave
lcall
xchg
lahf
xchg
aaa
xchg
add
int
sbb
test
pop
fldcw
or
mov
in
mov
mov
sbb
loop
mov
mov
repnz
xchg
cld
clc
aas
cltd
cwtl
loope
push
dec
jb
sub
mov
sti
rolb
shrl
jae
ret
adc
imul
cli
loopne
adc
cmp
cmc
mov
shlb
xor
mov
jp
add
cld
dec
cmpsb
mov
mov
fisttpl
mov
movsb
iret
clc
enter
fmuls
adc
cltd
iret
or
pop
out
bnd
mov
pop
mov
rcrl
jb
es
rolb
add
mov
jbe
les
lahf
xchg
and
lahf
lods
movsb
cld
cld
adc
add
push
stos
cmc
shr
adc
ret
adc
popa
xor
inc
xor
lods
jl
cld
pop
jae
xor
popa
dec
or
cmp
cmp
movsb
xlat
loop
jg
loope
imul
dec
ja
mov
cld
cwtl
lds
ja
sbb
mov
pusha
inc
and
jno
mov
dec
lds
xchg
and
xor
loop
jo
enter
xchg
pop
mov
arpl
call
dec
cltd
jbe
iret
pusha
cmp
and
sub
push
lds
add
xor
push
fistpl
scas
imul
xor
xlat
hlt
inc
int
outsb
cwtl
mov
lcall
test
jg
rorb
imul
xchg
mov
lods
repnz
ret
mov
cmpsl
pop
pop
js
jns
mov
or
sub
std
and
pop
ret
out
pusha
pop
sub
jl
sbb
mov
sub
fsubl
mov
mov
out
lret
mov
push
rol
xor
xchg
clc
xor
add
sub
mov
adc
hlt
cmpsl
mov
stc
in
cmpl
mov
gs
jl
stos
aad
adc
sbb
xchg
sub
inc
jmp
in
and
inc
cmp
mov
xchg
mov
cmp
out
jae
test
inc
sbb
cmpl
dec
and
in
inc
ficompl
mov
into
test
in
out
and
adc
test
add
sbb
lahf
aad
xchg
sub
repz
dec
jo
popa
out
fsubp
adc
stc
adc
push
pushf
ja
std
sub
sti
cmp
sbbl
in
sti
fisttps
test
hlt
lahf
ret
test
or
add
popa
and
sub
sub
test
fsts
xchg
or
jno
mov
pusha
or
ds
lds
test
test
gs
mov
sub
sbb
xor
jmp
daa
cmp
xchg
pop
push
imul
insb
cli
or
fmull
xlat
test
jnp
and
push
std
mov
inc
inc
push
pop
inc
dec
stc
mov
xchg
aaa
inc
adcb
cmp
mov
in
stos
scas
mov
jno
inc
jl
inc
xchg
mov
and
std
out
imul
flds
test
adc
mov
fdivrp
jge
mov
xchg
fimuls
sbb
fiadds
loope
imul
mov
push
movsl
cwtl
divb
lds
sub
fucomip
adc
or
cmpsl
or
sub
stos
sbb
or
and
pushf
xchg
cltd
lods
push
jle
xchg
jecxz
aaa
inc
les
mov
mov
dec
movsl
push
dec
adc
mov
or
sbb
pop
lock
call
clc
jb
jbe
push
inc
int
jnp
xchg
flds
outsb
pop
sub
bound
inc
out
push
cld
mul
addb
rcl
pop
push
nop
js
sarb
sub
inc
sahf
ret
push
or
test
stos
rcll
mov
iret
cltd
addr16
sahf
ljmp
sti
jbe
push
es
les
pop
loope
dec
mov
cmp
in
push
fucomip
jge
repnz
int3
dec
orb
cmpsb
fucomp
rcrl
jmp
call
pushf
mov
jb
sub
xchg
cwtl
in
push
add
jg
gs
clc
sahf
bound
mov
inc
stos
cs
or
dec
dec
adc
ret
into
repnz
packuswb
rclb
clc
std
push
add
div
sbb
popfw
pop
jge
mov
addr16
js
dec
cmp
inc
mov
inc
cmp
add
jmp
lea
or
dec
pop
mov
adc
cmc
inc
mov
cs
xchg
ja
outsb
mov
in
sub
cmp
push
cmc
push
in
pop
jo
jp
xor
dec
xorl
or
fcoml
mov
cld
sub
je
push
cmc
jecxz
mov
fmulp
andl
test
pop
andl
and
test
stos
xor
add
or
into
pop
adc
fs
aas
jge
mov
mov
jmp
dec
loope
push
fst
popa
sub
stos
mov
inc
mov
ret
and
push
imul
push
jnp
popa
xlat
sbb
lea
lcall
in
dec
outsl
call
cmpsb
cwtl
push
jbe
loop
shl
xor
cmc
pop
or
inc
pop
push
push
imul
xchg
sbb
loope
mov
jp
inc
cld
pop
lods
ss
and
jb
push
std
icebp
lock
jmp
pop
sbbl
insl
xchg
notb
cli
mov
fwait
adc
ret
mov
pop
adc
dec
mov
mov
fistpl
xchg
mov
daa
call
outsb
jp
mov
dec
adc
adc
dec
sub
addr16
out
loopne
adc
xchg
and
lods
mov
ror
lods
or
pusha
mov
fs
lcall
inc
sub
sub
sarl
movsb
daa
hlt
and
stos
push
or
push
xlat
xchg
cmp
jae
sub
hlt
fwait
mov
cli
xor
rclb
mov
and
sub
or
xlat
test
in
ret
ljmp
jns
mov
inc
dec
xor
mov
lea
lods
orl
incl
xchg
add
out
loop
je
mov
jg
dec
sbb
sub
add
or
insb
sub
jo
inc
mov
pop
mov
xor
shll
adc
jmp
mov
in
aas
xchg
popa
sbb
xchg
jmp
repz
dec
cmpl
imul
cmp
inc
adc
xlat
cmpsb
mov
out
aam
jo
cmp
cmp
push
inc
sub
scas
addr16
inc
flds
cwtl
xor
and
outsb
jle
loopne
xlat
mov
push
rclb
xchg
test
movsl
cmp
xchg
jns
rorl
mov
jns
inc
movsb
inc
xor
push
sahf
adc
push
adcb
and
inc
jmp
pop
fldl
mov
call
jle
loop
fldcw
imul
pop
mov
inc
dec
jg
adc
out
xorl
xchg
daa
vpunpckldq
movsl
mov
call
fimull
fldl
lahf
sub
mov
pusha
jb
xor
shrb
ja
lock
mov
jl
push
lods
pusha
insb
shrl
mov
sbb
mov
mov
mov
jle
sti
and
loope
ljmp
lcall
pushf
std
xor
jbe
cmp
mov
loope
add
mov
insb
or
call
call
addl
fstps
outsb
popa
mov
and
stos
mov
je
fwait
inc
mov
negb
sti
es
movsl
mov
loopne
cltd
call
mov
xor
movsl
jmp
adc
sub
stos
push
jns
nop
test
fldcw
lods
sbb
cli
mov
stos
adc
mov
mov
fbld
jne
add
scas
push
pop
mov
mov
jge
pop
pusha
fists
repz
or
adc
push
or
mov
cmp
dec
add
mov
js
call
adc
dec
xchg
lcall
pushf
ds
mov
ljmp
hlt
loopne
push
xchg
mov
xchg
mov
sub
pop
pop
and
incl
inc
jg
mov
ja
jns
lcall
xor
push
inc
cld
cli
pop
add
cmpsb
adc
mov
or
lcall
imul
mov
or
nop
adc
aas
or
dec
cmp
shrb
xchg
mov
sahf
cmpsl
jae
mov
jmp
sub
ljmp
jmp
mov
jns
xchg
pop
pop
lds
lds
jmp
movsl
mov
adc
sbb
popl
int3
push
loopne
pop
fistpl
xor
xchg
punpckldq
jge
xchg
push
pop
movsl
sahf
sbb
shll
movsb
or
test
push
xchg
push
out
daa
iret
out
cltd
mov
xchg
push
lea
jle
out
add
mov
push
scas
jne
shlb
xor
jp
jbe
data16
jmp
mov
sbb
dec
lods
xor
lock
push
pop
push
mov
jmp
and
repnz
sbb
test
add
and
mov
scas
push
test
lahf
mov
cmp
setno
mov
inc
sub
mov
add
sub
out
fdivs
cli
mov
je
xchg
jmpw
or
repnz
push
sbb
push
inc
jno
xor
fs
rclb
aam
dec
je
inc
ret
pop
aam
pop
add
inc
cld
ljmp
lret
mov
ja
push
push
jg
jne
or
leave
or
dec
mov
pop
rolb
jl
cmp
jle
and
lret
cs
inc
js
in
xor
pop
movsl
mov
cmp
pop
xchg
stc
mov
movsl
and
mov
and
dec
dec
sbb
adc
jle
shl
in
mov
adc
ja
mov
sub
sbb
xchg
xlat
adc
pusha
clflush
sub
mov
cwtl
lea
xor
jo
mov
in
and
jae
out
gs
arpl
add
xchg
sahf
xchg
cs
pop
xor
push
adc
push
andl
loope
jno
pop
les
clc
aas
cmp
mov
xchg
add
in
fistpll
jle
push
dec
sbb
jno
mov
push
or
lods
push
jbe
xor
and
sbb
inc
mov
in
js
mov
or
push
pop
gs
jl
arpl
or
jmp
add
jae
fistpl
dec
outsl
icebp
imul
lock
xorl
call
fs
jns
ret
xlat
lea
sbb
pop
mov
sub
loope
mov
arpl
pop
or
mov
add
std
sub
and
iret
cmp
xor
jae
dec
iret
imul
mov
mov
lret
jb
lea
pop
sub
xor
or
mov
testl
fs
fdivr
test
fwait
mov
cmpsb
push
subl
outsb
jb
cmp
je
xchg
movl
mov
sub
and
mov
and
or
dec
int3
add
mov
pop
fdivrl
mov
loop
std
sub
fists
xor
movsb
push
sub
push
dec
pusha
es
or
adc
xor
mov
jp
leavew
jns
cmp
or
data16
rcll
shrb
jno
xchg
mov
pop
fldt
ja
push
mov
movsb
cwtl
push
lcall
jmp
mov
mov
out
inc
lds
ljmp
mov
clc
ficomps
pop
or
insb
mov
loope
cs
pop
enter
rcll
or
pusha
and
mov
xchg
cli
imull
sub
das
psllw
int
cli
mov
lahf
mov
mov
fwait
or
cmp
sub
xchg
clc
jmp
jmp
mov
mov
jne
mov
into
push
and
dec
gs
outsl
filds
test
mov
repnz
xor
cmpsl
mulb
stc
fcmovnb
sbb
jne
inc
mov
pop
lods
ss
lcall
or
ret
jecxz
rcrb
seta
repnz
daa
mov
jns
mov
out
shrl
ds
rep
insb
add
xor
movsb
and
add
jp
movsl
xor
lahf
repz
cmpsb
loopne
ljmp
aad
ss
mov
iret
dec
or
jae
adc
inc
fstps
ljmp
je
test
shll
inc
push
push
xchg
or
sub
adcb
decb
aad
inc
popf
int3
mov
outsb
sbb
inc
jge
jecxz
es
pop
dec
inc
dec
and
lock
adc
js
mov
ja
dec
jno
fidivrl
xlat
test
ds
jp
adc
jo
outsl
or
inc
jmp
rorb
inc
addr16
and
jne
mov
xchg
mov
push
mov
imul
outsl
js
push
adc
in
pushf
outsl
cltd
push
outsb
int3
pop
movw
jno
xor
arpl
js
nop
ret
jnp
push
ficompl
aad
jecxz
lods
cwtl
and
test
scas
jae
repz
scas
bound
enter
clc
adc
aad
pushf
add
push
fsubs
fstl
pushf
sub
sub
and
pusha
sti
cmpsb
addr16
xchg
xor
inc
xchg
test
mov
cmp
xchg
dec
in
xchg
movsl
mov
jns
fmul
sbb
xor
in
xchg
xor
push
sub
mov
rcll
mov
insb
ret
iret
data16
mov
mov
in
add
pop
mov
push
outsb
mov
push
pop
fistpl
sahf
ss
add
sarl
adc
ja
test
jge
pop
ss
inc
or
fldl
xchg
loope
mov
inc
iret
lea
push
xchg
dec
lahf
mov
pop
andb
fidivrs
int3
mov
xchg
rolb
div
ljmp
out
sbbb
sbb
dec
stc
sub
pop
add
out
xchg
out
std
mov
movsl
ficoms
mov
ret
lods
movsl
push
mov
push
fdivr
lock
jg
mov
pop
mov
jae
andb
addr16
add
or
fidivs
dec
or
mov
pop
or
ljmp
dec
shrb
rcrl
leave
into
imul
mov
arpl
sahf
iret
inc
jmp
out
mov
add
movsb
dec
insl
xor
les
xor
ret
cmc
iret
pop
enter
js
mov
sti
pop
adc
addr16
jl
mov
int3
std
into
data16
jo
dec
xchg
cltd
into
or
shll
loope
dec
and
dec
mov
pop
arpl
incb
jl
inc
cmc
addr16
loopne
cltd
sbb
mov
mov
idivl
sbb
test
jg
inc
cmc
adc
neg
xor
or
pop
cmc
les
out
jecxz
ds
cmpsb
push
cmpsl
das
jne
pushf
add
aas
in
or
sub
stc
gs
jmp
lock
or
lahf
fwait
mov
ret
or
jbe
ficompl
std
push
cmpsl
mov
sbb
xchg
or
nop
mov
add
push
adc
pop
and
sbbb
dec
ret
popa
push
push
inc
dec
movsl
lcall
add
xlat
fwait
dec
add
fwait
jp
mov
jge
das
fninit
sti
imul
dec
inc
ja
daa
flds
aam
jg
xor
bound
stc
rcrb
bswap
or
push
out
pop
adc
lods
sub
adc
mov
clc
insl
xor
xor
gs
popf
in
xchg
or
andl
mov
flds
mov
adc
cmp
dec
inc
jbe
insl
subb
repnz
repnz
push
xchg
sub
cwtl
lods
sbb
pop
ss
xchg
cld
xor
jno
jne
cmp
sbbb
mov
jo
stc
stc
mov
loopne
sbb
dec
pop
test
push
cmp
cmp
out
ljmp
mov
mov
or
adcb
mov
shlb
int3
cld
bound
pop
out
fdivrl
stos
stc
je
adc
jp
mov
ds
fmull
rcrb
rcrl
lods
fs
mov
and
jne
lcall
jge
jae
inc
sbb
sbb
sti
loope
call
shrb
pop
pushl
lcall
mov
sbb
fwait
and
ja
movhps
sub
mov
out
fistpl
gs
push
push
out
scas
jb
mov
jp
sub
ljmp
stos
dec
mov
mov
test
loop
cmc
inc
ds
mov
dec
cltd
jb
loop
gs
adc
addb
fidivrl
xor
mov
int
dec
dec
pop
xchg
sbb
jno
lcall
roll
scas
xor
or
in
stos
sbb
mov
jo
cmc
mov
cltd
or
mov
mov
or
mov
inc
mov
jne
loop
fs
xor
sbb
adc
imul
or
ret
dec
bts
dec
add
inc
or
jmp
gs
adc
mov
ret
pop
jle
cmp
insb
sub
mov
push
gs
push
lret
mov
rcrl
imul
imul
gs
jg
or
push
xchg
inc
leave
addr16
cwtl
cmp
cmpsb
dec
pushf
add
dec
rol
popa
insl
frstor
mov
sahf
rolb
add
imul
outsl
mov
push
mov
int3
scas
jle
lods
movsb
rclb
orl
cmp
push
out
test
idivb
dec
int3
add
aam
je
mov
icebp
or
push
push
mov
shll
rcrb
adc
loopne
adc
lods
negb
mov
sbb
movsl
mov
arpl
mov
incl
xor
test
rolb
sahf
jg
mov
jecxz
push
or
or
pop
jcxz
shlb
or
sbb
add
gs
xchg
filds
cmp
sar
test
lahf
clc
xchg
sti
bound
fnstenv
sbb
cwtl
insb
fiadds
pop
jl
xor
cmpsl
loopne
cltd
inc
add
cltd
rol
addl
jbe
leave
adc
add
sbb
int
sbb
push
xor
rcll
add
subb
daa
icebp
mov
and
lds
and
mov
movsb
pop
shll
pop
cmc
lahf
sbb
stos
add
xchg
pop
lcall
fucom
loop,pt
jecxz
sbb
add
insb
lock
dec
clc
outsb
cmp
add
xor
popa
pop
call
sub
popf
sub
lahf
gs
lods
cmp
mov
mov
pop
jo
lods
jo
xchg
int3
jle
xor
aas
fwait
adc
js
add
pop
push
out
js
mov
bound
mov
call
mov
mov
adc
rorb
int
xor
mov
call
ds
ss
jae
out
jae
dec
dec
mov
int3
cmp
jl
push
pop
cmpsl
fwait
movsl
ja
lds
aaa
and
fs
in
mov
rsqrtps
add
js
loopne
dec
out
add
ret
insb
jae
push
mov
std
into
cmpl
mov
xor
gs
add
or
sub
dec
xchg
sahf
mov
sub
push
into
in
pop
jp
cli
mov
loop
jno
cmp
and
movd
inc
or
mov
ja
sub
mov
dec
mov
cmpsl
lahf
push
jb
loope
sti
sbb
mov
push
outsl
mov
cld
ds
or
dec
inc
enter
in
xchg
sbb
pop
jno
mov
in
fcmovnb
loop
cmp
jge
iret
inc
ja
pop
jg
fcmovbe
push
cmc
sbb
lods
lret
or
or
hlt
xor
and
sbb
cmc
enter
cli
shlb
and
lret
mov
mov
xchg
sti
mov
cmc
add
fdivr
daa
or
xor
mov
insl
add
push
hlt
fiaddl
out
adc
inc
rcrb
iret
and
inc
jmp
icebp
scas
lock
cmp
jecxz
hlt
scas
pop
xchg
test
dec
inc
xlat
aaa
sbb
insb
in
and
outsb
sahf
push
push
mov
dec
in
add
dec
sub
add
jle
pop
push
addr16
lret
shr
dec
hlt
lret
es
xchg
pop
pop
sti
mov
lret
mov
mov
rorl
icebp
pop
addl
pop
pop
lret
in
jp
jo
sarb
mov
fistpll
pop
mov
rorl
push
lods
outsl
dec
and
loop
xchg
out
jno
sbb
ja
or
mov
xchg
gs
xor
add
arpl
scas
mov
movsb
test
sti
data16
sub
lock
out
fbstp
lret
dec
aas
and
dec
aas
inc
fs
jl
std
pop
mov
push
inc
inc
test
push
into
mov
imul
mov
pusha
sbb
mov
adc
add
hlt
cmp
cmp
movsb
cmp
leave
pop
lods
mov
scas
cmp
insl
addb
repz
mov
mov
in
sbb
and
cmp
aad
ficompl
je
enter
pusha
lock
mov
int3
jmp
dec
scas
mov
loopne
sub
xor
cmp
std
fisubl
ds
lds
sub
mov
dec
repz
fldz
push
stos
add
mov
stos
stc
dec
les
or
mov
inc
les
sub
addr16
cmp
les
add
inc
test
mov
or
loope
scas
mov
cwtl
movsb
fiadds
std
ret
daa
loopne
mov
dec
ret
ret
sub
xchg
sub
shll
ret
shrl
xlat
fstpl
dec
mov
sbb
mov
int3
or
xchg
fdivrs
cltd
es
jnp
cli
ret
mov
ljmp
into
mov
mov
shlb
aam
mov
std
int3
rorl
movsb
xchg
testl
fsubrl
pop
inc
mov
push
sbb
call
pop
sub
movsl
je
adc
call
outsb
xchg
mov
xchg
dec
xor
xchg
outsb
je
negb
cmpsl
sub
fcompl
sub
out
ss
sub
fbstp
mov
sub
pop
ret
jle
leave
sub
lods
push
in
das
subb
pusha
xlat
repz
and
pop
ret
mov
scas
inc
dec
fmul
pop
cmp
mov
lea
mov
pop
into
add
std
dec
xchg
addl
out
pop
hlt
popa
imul
push
inc
mov
dec
lock
es
cmp
xchg
aaa
dec
aaa
stos
mov
xor
js
repz
dec
or
jg
movsl
sub
ja
test
lcall
adc
push
movsb
adc
push
lock
jno
push
loopne
xchg
pop
pop
jg
shll
dec
repz
in
cmp
sub
outsl
mov
movsb
mov
popl
shlb
in
mulb
jne
jmp
xor
dec
sbb
jg
jae
pusha
and
jns
out
icebp
repz
xor
push
push
ja
in
or
xchg
xchg
jp
cmp
mov
cmp
inc
mov
in
xor
sub
lea
inc
adc
sarb
push
pop
sbb
enter
mov
add
inc
cmpsl
dec
add
add
mov
pop
and
jg
lret
sbb
mov
inc
and
xchg
movl
push
add
cld
push
lret
pop
mov
hlt
adc
mov
fmuls
push
repnz
jns
xchg
pop
xchg
inc
lret
addr16
pmulhuw
sub
fdivrs
sbb
jge
xor
xor
loopne
push
push
scas
push
pop
pop
xchg
mov
push
adc
leave
imul
inc
sarb
sbb
fistl
mov
aad
mov
add
das
pop
push
cwtl
hlt
je
or
add
into
mov
cmp
cmp
adc
cld
mov
inc
mov
rcrb
cmp
repnz
jnp
stc
out
into
jmp
sahf
add
lods
in
jmp
sub
subl
pop
and
out
mov
aad
ror
or
sbb
mov
mov
push
cmp
push
pop
rolb
int3
std
data16
lahf
pop
test
mulb
dec
jp
and
push
dec
mov
movsl
dec
pcmpgtb
xchg
fstpt
sti
ja
leave
jg
mov
test
lret
fcompl
es
nop
pop
lea
and
bound
sbb
ljmp
and
push
out
adc
xor
push
and
adc
mov
jecxz
adc
mov
out
pusha
sbb
imul
lods
mov
test
cs
xlat
xor
notb
jne
xlat
fdivl
adc
pop
movsl
dec
adc
push
or
mov
testl
fsubrs
mov
xor
fisubl
aaa
addl
out
inc
mov
nop
aaa
dec
ds
jbe
xchg
push
scas
fmuls
fnstenv
in
icebp
cmp
cmpsl
xchg
inc
push
mov
aaa
xchg
sub
ds
and
push
hlt
cld
jge
popa
mov
pop
pop
fs
rcrl
loope
xlat
jno
jno
js
test
sbb
push
popf
push
adc
dec
imul
or
and
into
mov
sub
aaa
mov
mov
mov
cmpsb
fdivr
jno
pop
add
leave
lods
and
mov
mov
jnp
xchg
lea
cmpsb
and
sbb
lds
push
jns
aam
jne
aad
pop
fnstcw
int
sub
jbe
push
int
xchg
loope
hlt
mov
sti
push
dec
push
fldl
jmp
inc
dec
jnp
cmc
and
sub
jbe
test
hlt
bound
je
mov
lock
cs
pop
dec
jg
sahf
adcb
ljmp
dec
dec
cli
inc
loop
lcall
fstl
sub
jbe
aaa
mov
xchg
xchg
or
mov
mov
test
les
push
xor
jo
mov
sbb
pop
je
jg
xor
pop
push
mov
das
pop
push
cmpsb
imul
add
mov
xchg
push
idivl
add
lret
icebp
mull
xor
leave
ss
ljmp
pop
ret
mov
inc
mov
stc
push
mov
or
mov
aaa
scas
mov
jg
push
pop
into
dec
sub
pop
dec
push
and
sbbl
test
dec
std
mov
dec
test
cs
push
cld
stos
push
repz
and
jbe
dec
mov
out
imul
add
mov
xor
inc
test
mov
sbb
pop
add
movsl
mov
mov
sub
or
mov
push
pop
or
das
das
add
pop
bnd
int
mov
xchg
loopne
mov
jp
call
shrl
push
adcb
outsb
lret
ljmp
movhps
dec
push
sbb
into
jg
sub
roll
xor
push
pop
pop
clc
mov
xlat
jo
test
mov
adc
lahf
stos
ret
xchg
fsubl
lock
cmpsb
pop
adc
mov
mov
jmp
xchg
stos
and
mov
testl
cmp
out
and
adcb
or
in
shl
cmp
fwait
je
mov
idiv
popl
nop
cmpsl
jns
push
iret
xor
dec
nop
loopne
jo
ljmp
jge
sti
cmp
pop
xor
jno
out
daa
mov
and
lea
out
lret
arpl
sbb
adc
insb
arpl
push
out
sarl
push
popf
and
insb
jmp
stos
sbb
cmp
push
mov
arpl
jae
clc
xchg
mov
and
loopne
mov
fistps
leave
push
mov
pop
jbe
movsb
adcl
repz
pop
lea
movb
popf
cmp
test
xchg
pop
and
sbb
lds
pop
js
icebp
cmc
out
mov
inc
mov
in
jnp
fimull
sbb
popa
add
sbb
jne
adc
mov
inc
aas
arpl
mov
lock
fucompp
jecxz
push
sbb
scas
mov
sarb
lahf
fsubrs
in
inc
fsub
hlt
test
icebp
add
orl
inc
insl
clc
jle
popl
out
loop
lcall
icebp
adc
pop
jmp
push
push
mov
or
lret
fcomps
fisttpl
mov
pop
dec
cmp
lcall
or
dec
test
sbb
test
inc
mov
pop
enter
pop
cvtps2pd
or
xchg
pusha
jne
xor
stc
push
push
mov
rcll
jb
mov
int3
test
mov
ret
pop
cmpsl
add
lret
call
outsb
dec
xor
dec
inc
inc
mov
mov
cltd
cmp
push
mov
idiv
shll
stos
push
xchg
ds
insb
push
mov
xchg
inc
xchg
mov
inc
inc
jp
cmp
pushf
adc
dec
aad
mull
xor
xor
push
jg
dec
sbb
jo
mov
ljmp
stos
push
dec
mov
shll
xor
push
pop
ss
aad
repz
dec
or
mov
stos
popa
imul
xchg
andb
cwtl
dec
out
dec
stc
jne
dec
lcall
or
mov
sbb
je
cmp
inc
iret
or
fld1
inc
cmp
cmpsb
hlt
je
idivl
fwait
jae
rorl
xor
push
add
pop
mov
dec
nop
cli
ljmp
push
xor
stos
push
clc
dec
out
shlb
popl
gs
out
mov
repz
mov
ljmp
dec
mov
repnz
pop
lret
mov
inc
sub
mov
dec
dec
jp
jge
push
dec
mov
stos
mov
jno
aas
sbb
aas
nop
sbb
mov
loop
arpl
xchg
or
jne
movsl
sub
or
or
ljmp
mov
or
leave
ficoms
push
mov
sbb
cs
mov
push
fmull
sbb
mov
out
stos
cwtl
mov
aaa
fwait
cs
mov
mov
push
outsl
jmp
pop
inc
dec
or
and
sbb
xor
jne
sti
push
inc
imul
xchg
inc
inc
pop
sub
adc
dec
inc
rolb
ja
cli
xor
inc
out
rorb
jbe
inc
lock
sarl
outsl
push
push
dec
icebp
xchg
aaa
xchg
fs
mov
cmp
rclb
sbb
ret
cmpsb
sbb
jb
sbb
flds
les
adc
pop
xor
push
adc
movsl
xchg
push
pop
test
mov
imul
jecxz
jo
sbb
icebp
outsl
and
dec
mov
sbb
in
adc
loop
jmp
movsb
nop
push
dec
popa
push
sahf
iret
push
push
fstpt
cmpsl
lock
push
stos
imul
loopne
cmp
mov
jns
subl
push
jbe
pop
and
shr
pop
mov
movsb
or
sub
icebp
and
or
add
sbb
imul
repnz
xchg
outsb
dec
push
sahf
cltd
adc
sbb
rolb
adc
sbb
enter
pop
xor
and
ret
andb
push
cmc
sarb
sbbb
mov
and
in
fistpl
jnp
push
rcr
popa
dec
or
movb
int
popl
add
jl
xor
sbb
dec
or
push
push
xor
bound
pop
xlat
xor
outsl
outsb
jae
test
mov
shrb
pop
fists
and
mov
aas
inc
add
incb
push
test
push
jl
xchg
and
mov
cwtl
enter
sub
out
rolb
sbb
ljmp
fcomi
xor
pop
jecxz
dec
daa
les
pop
lock
cmpsb
lahf
dec
sti
push
dec
xor
xchg
lea
loopne
pop
fwait
out
cld
inc
push
inc
cmpsb
stos
mov
leave
push
xorl
xchg
dec
pop
cmp
icebp
cmp
xchg
andl
loop
inc
iret
add
cmp
aaa
cltd
test
inc
loope
or
movsb
lret
mov
mov
iret
outsb
and
push
jae
push
sub
xchg
add
cmp
pop
mov
inc
aaa
lods
filds
imul
sub
pop
int
je
mov
sarb
sbb
enter
sbb
pop
popa
add
aaa
xchg
push
ss
fcomip
mov
daa
ror
add
std
push
lret
mov
mov
sbb
cwtl
xor
jp
in
and
jle
push
fisttps
xchg
inc
mov
xchg
sbb
das
jg
repnz
stos
dec
or
mov
lock
ljmp
adc
inc
jl
xchg
inc
jecxz
insb
cmp
adc
cltd
out
mov
sub
sub
stos
out
in
xor
scas
inc
or
sbb
cmp
push
scas
imul
and
or
jbe
mov
push
sub
movsl
xor
inc
xor
int
sbb
ret
pop
or
sti
dec
jb
testl
fcomps
mov
push
add
jecxz
mov
pop
in
test
sbbb
jno
and
lods
aaa
xchg
xor
cli
pusha
das
and
adc
adc
in
xchg
fstpt
fsubl
jne
mov
xchg
imul
pop
cmc
mov
inc
pop
mov
jmp
ficoml
push
orb
dec
popf
sahf
push
and
mov
sub
aad
mov
xor
ja
mov
addb
stc
leave
rcl
addr16
hlt
sbb
push
jge
push
insb
loopne
ret
xor
xor
repz
fists
push
sti
jbe
xchg
sub
push
or
bound
lcall
and
sub
cld
xchg
pop
outsb
rorb
popa
and
daa
dec
sbb
test
cmc
cmc
pop
cmova
mov
push
cmp
lcall
cmc
and
jmp
pop
addr16
mov
xor
add
add
push
mov
mov
mov
rcr
or
ficoms
pop
lcall
ds
mov
pop
mov
es
cltd
call
xchg
or
jecxz
jbe
mov
lret
push
xchg
sbb
mov
mov
popf
dec
jmp
mov
sti
sbb
sbb
or
bound
mov
sti
cmp
in
movsl
pop
jp
xor
insl
mov
jns
mov
pop
sbb
cli
decb
jmp
adc
ret
aam
xchg
push
dec
arpl
sub
inc
dec
test
call
or
dec
test
aam
mov
and
test
shl
dec
cld
flds
std
imul
jne
and
es
js
gs
cltd
or
stc
fs
cmp
dec
popa
out
dec
mov
ret
xchg
cmovns
hlt
mov
jle
mov
xor
insl
int
int3
outsl
insb
loopne
out
push
pop
dec
frstor
xor
xchg
mov
gs
mov
lods
xchg
mov
out
mov
aas
stos
xchg
rcrl
pop
push
add
ds
mov
mov
sub
cwtl
lret
jl
xlat
mov
aaa
adc
push
dec
inc
aaa
cmp
mov
cmc
dec
sbb
ret
fprem
cmpsb
sub
leave
jl
cmpsl
xchg
je
adc
divb
cs
jge
mov
fnsave
push
add
dec
out
cmpsb
sub
xchg
mov
pop
out
push
mov
jnp
pop
fldl
jb
pushf
push
cmpsb
sub
push
test
mov
mov
repnz
fucomip
bound
addb
test
push
scas
enter
sub
pop
sub
sbb
jno
rcr
inc
sbb
test
test
sub
sub
inc
mov
or
dec
xchg
and
ds
dec
loop
ret
test
cmp
mov
fwait
mov
or
cwtl
sbb
out
adc
xor
push
popf
inc
int
mov
stc
test
push
mov
add
and
lds
jle
mov
xor
mov
jns
inc
fucomp
out
fisubrl
pop
andl
add
rcrl
ret
jmp
outsb
and
jo
lahf
sbb
test
sbb
dec
push
cmpsl
mov
add
loop
mov
xor
push
loopne
enter
adc
arpl
inc
xchg
push
loope
add
mov
ljmp
lret
movsl
js
sub
or
and
aas
jns
jne
push
rorb
inc
sbb
rcl
adc
and
jl
lahf
call
fstps
pop
pop
cmpl
movsb
push
jge
xchg
cwtl
push
repz
xor
inc
jns
stos
cmc
fwait
jmp
mov
adc
jg
jmp
out
int3
les
jmp
test
lret
jmp
ds
add
dec
dec
mov
cmpsl
sbb
sub
iret
push
or
jle
incb
adc
ret
mov
pop
in
hlt
dec
js
xchg
add
mov
inc
jno
test
inc
enter
ret
in
mov
dec
jge
imul
push
lcall
jo
es
sub
inc
dec
push
and
cmp
push
aam
out
mov
push
xchg
mov
arpl
add
push
xchg
es
jo
arpl
frstor
aaa
xor
push
pop
push
fistps
out
inc
mov
in
xor
sub
mov
in
dec
inc
adc
jmp
mov
adcl
mov
lret
mov
mov
dec
cld
scas
js
rcrl
test
mov
push
rorl
test
mov
xchg
pop
lock
sub
aam
inc
jl
out
dec
mov
xchg
mov
push
repnz
xchg
andb
mov
push
mov
xor
or
lea
push
mov
mov
inc
std
fdivl
xor
inc
inc
push
jmp
cltd
into
mov
aas
add
inc
pop
dec
jg
hlt
mov
cld
inc
sbb
xor
push
xor
pop
sbb
push
les
fisubrs
and
lret
sub
shlb
inc
rcrl
sbb
sahf
out
and
jae
bound
hlt
jmp
push
push
sarb
sub
notb
xchg
dec
push
dec
outsl
push
cmc
stc
pop
jmp
pop
fldt
or
rcrl
jmp
mov
lock
addr16
call
add
inc
or
or
and
std
xor
divl
into
test
and
push
push
ret
push
sar
insb
push
or
fsubs
or
imul
test
sbb
push
mov
adc
test
pop
sarb
push
rcrb
push
adc
fcomip
sub
enter
or
xchg
sbb
ret
jno
into
add
sti
push
shll
out
sbbb
cmp
mov
sti
push
repz
loop
xor
sbb
loopne
hlt
dec
mov
ret
in
cwtl
xlat
repnz
lock
mov
jecxz
jae
loopne
dec
sbb
lea
cmp
fptan
push
sub
imul
addr16
incb
cli
jle
dec
addr16
xchg
js
inc
enter
adc
ret
sbb
jg
xor
scas
jb
daa
scas
mov
xor
adc
and
inc
sbb
push
sbb
sub
or
loop
jno
or
mov
xor
xchg
cmpsb
mov
sub
adc
std
sbb
lods
jp
xchg
mov
test
dec
pop
and
mov
in
sub
fisubl
rcrl
xor
mov
shrl
scas
jecxz
jo
cltd
in
cmp
fwait
mov
dec
mov
arpl
mov
xchg
mov
push
jno
lds
mov
push
fdivr
adc
pop
cld
lds
sub
xchg
out
ficoml
hlt
mov
jg
movsb
push
test
sbb
adc
cmp
add
fldenv
dec
or
ja
das
into
arpl
push
std
insl
dec
inc
loop
cmpsl
dec
fs
ss
leave
xchg
rcrl
and
mov
sub
inc
and
push
cwtl
add
mov
outsb
dec
mov
ss
xchg
ret
sub
ljmp
xchg
ja
in
shr
adc
data16
mov
jnp
xchg
xor
movsb
loopne
mov
mov
push
and
stos
gs
pop
icebp
cmp
adc
add
mov
psraw
movsl
mov
mov
xchg
loopne
xchg
dec
lahf
aam
mov
je
outsl
scas
mov
fs
les
mov
cli
inc
jo
jmp
repnz
cmc
fnstcw
jecxz
xor
in
xor
pop
andl
adc
mov
jl
inc
pop
xchg
add
push
cmp
mov
add
inc
testb
adc
adc
mov
gs
dec
mov
and
lock
mov
push
test
jle
mov
xchg
and
xor
test
mov
int3
xchg
enter
sub
inc
and
pop
inc
mov
add
xchg
jnp
stos
jecxz
lcall
jp
mov
lods
mov
out
inc
cmpsl
sub
mov
push
test
push
sub
inc
or
push
mov
pslld
call
sbb
or
mov
loop
or
or
ret
mov
dec
push
dec
xlat
push
mov
pop
test
loop
or
repnz
pop
stos
imul
imul
enter
loope
cmpsl
fsubs
aaa
insb
cwtl
cmc
in
xor
in
cmp
pusha
scas
mov
mov
bound
das
and
or
fdivrl
rcrl
lret
push
pop
pop
iret
cmp
enter
insb
bound
cmp
dec
ret
outsl
outsb
jp
inc
cli
lret
aam
shrl
jmp
fsubs
stc
ljmp
daa
mov
push
jb
xor
mov
dec
fildll
cmpsl
testb
xchg
int3
cmp
fsubrl
loope
repnz
adc
cmp
sti
sub
cmpsb
sub
pop
inc
push
jg
jns
xor
xchg
pop
pusha
int
jb
fmuls
nop
xchg
xchg
je
sbb
test
inc
aad
lcall
aaa
movsb
mov
sbb
fwait
jae
es
pop
shll
mov
lcall
push
in
xlat
les
fdivrs
push
push
or
mov
mov
cmp
sbb
fnstsw
adc
lock
xor
jle
sub
aaa
movsb
movsl
and
aas
mov
lods
xchg
push
push
fwait
pusha
jns
pop
jle
lret
clc
lahf
pop
jmp
xor
jl
add
stos
add
xchg
mov
jno
jl
and
mov
xrelease
jecxz
aaa
mov
pop
hlt
repz
xor
loop
xor
fwait
mov
push
insb
stc
xchg
xchg
leave
xorb
lods
and
pop
sub
and
ss
lahf
std
testl
dec
add
loop
rcrb
lret
push
jg
loope
mov
cmp
push
cmp
jl
inc
xchg
adc
adc
inc
out
fisubl
sub
aam
imul
imul
ror
dec
add
ficomps
shlb
pop
dec
mov
push
jg
into
and
jp
jl
mov
mov
pusha
dec
pop
and
jle
repz
lds
mov
sub
sbb
or
insl
mov
shll
or
cwtl
addb
int3
cltd
popf
pop
cltd
inc
lret
push
pushf
in
xor
inc
jle
aad
mov
xchg
cmp
adc
or
pop
cmp
cmp
sbb
adc
out
daa
xor
imul
cmp
inc
jecxz
mov
inc
andl
fcoml
shl
bound
push
in
mov
jmp
out
jp
jne
cmp
lods
fcmovb
sti
cmp
adc
daa
mov
xchg
icebp
sub
test
jno
sub
pop
int3
jp
push
lcall
pushf
loopne
daa
fistpl
mov
popf
jae
daa
inc
jge
repz
xor
or
je
mov
test
loope
fwait
cmp
jl
arpl
dec
jecxz
ret
mov
inc
or
pop
xchg
mov
jge
push
sub
and
divl
xor
jno
andb
inc
push
mov
mov
jmp
push
mov
ds
lea
mov
sbb
pop
push
fs
mov
xlat
mov
fincstp
aas
repz
jae
sbbb
out
sbb
adc
jne
fninit
cmp
xor
in
mov
push
jmp
sbb
xor
loopne
out
adc
xlat
pop
pop
negb
icebp
push
dec
cld
clc
rorl
fidivrl
jae
mov
jno
rcll
cmp
aas
push
pop
xlat
pop
xor
ja
aaa
fistpll
mov
fwait
pop
push
and
shlb
js
xor
insb
fiadds
jnp
call
mov
mov
test
mov
mov
imul
mov
movb
pop
mov
into
iret
and
mov
fdivrl
and
out
sti
or
arpl
pop
or
in
adc
or
cmpsl
jp
jp
maxps
fistpll
xor
popf
addl
roll
cmpl
sub
xorb
push
jecxz
stos
enter
fwait
inc
outsl
lahf
xchg
push
scas
fwait
aaa
les
mov
sub
jle
sub
std
shlb
mov
mov
sti
orl
mov
test
addr16
aam
stc
jg
xor
dec
xchg
les
adc
push
popa
popa
notl
xchg
or
pop
je
and
lcall
inc
lea
sbb
in
sub
jmp
add
mov
cwtl
cmc
or
loope
sub
stos
clc
fdivs
shll
shlb
lods
lods
shr
push
in
cmpl
pop
fimull
pop
imul
dec
jns
mov
mov
dec
mov
xchg
popa
int3
divl
shr
lcall
andl
out
inc
jle
fnstcw
and
jmp
xchg
push
or
scas
jb
jae
pop
ds
movsb
mov
notl
cmpsb
jl
jo
loopne
shlb
mov
push
xor
mov
lods
adc
jb
push
sbb
adc
mov
pop
or
sub
dec
xchg
sar
xchg
mov
lcall
mov
adc
push
push
jo
fbld
lret
sub
sahf
lea
mov
jnp
pusha
outsb
mov
fwait
add
sbb
sub
or
and
xor
add
test
push
xor
cmpb
xor
pop
mov
mov
or
sbb
or
loop
cmp
ja
stos
rcrl
add
fcompl
stc
mov
or
sub
add
add
push
jb
xchg
aad
and
sbb
xchg
lock
addr16
pop
repnz
bound
clc
adc
lds
ret
push
jmp
xchg
out
mov
rcr
iret
xchg
mov
lret
cmc
jns
test
xlat
into
jno
inc
mov
cltd
and
iret
lea
push
andb
ds
int3
and
dec
das
in
xor
lods
xchg
inc
out
insl
xor
and
in
scas
xchg
call
dec
es
ret
jnp
or
dec
mov
add
push
inc
pop
cmp
pop
in
dec
push
adc
sahf
icebp
cmp
push
jb
jnp
inc
std
sub
pusha
mov
mov
fsubl
fisttps
jge
mov
js
aas
lret
test
pop
fisubl
mov
add
sbb
imull
jge
das
lods
lods
inc
shll
insw
xor
bound
sbb
sahf
jb
stc
std
or
arpl
xchg
addr16
orb
popf
add
add
movsb
push
cmp
in
loop
scas
pop
popa
push
mov
xchg
enter
push
insl
enter
sub
incb
inc
dec
xchg
lret
incl
or
pop
pushf
pop
divl
jbe
mov
sbb
push
mov
push
mov
xchg
inc
cmpsb
lea
fimuls
lds
rclb
out
mov
dec
mov
and
aaa
fsub
mov
xor
out
xchg
in
rorb
call
data16
jge
sub
add
das
fstpt
add
xchg
xchg
mov
mov
mov
rcrl
dec
dec
sbb
pushl
cli
int3
sahf
xchg
ja
shlb
stos
bound
fisttpll
inc
jecxz
or
movsl
push
shrb
cmp
test
xor
jg
mov
cmpsb
jmp
mov
ds
fidivs
sbb
jae
mov
lods
and
imul
inc
fcmovu
inc
pop
mov
mov
test
sbbb
jecxz
xchg
js
or
push
lahf
mov
popa
out
jge
lcall
mov
xor
into
in
cmc
jns
jecxz
ret
mov
repz
push
into
and
fs
aaa
subb
add
clc
cmc
mov
push
lds
or
inc
into
xchg
aas
in
fucomip
jbe
pop
push
les
loop
mov
mov
xlat
int
fstpl
int
test
pop
cmp
popf
cmp
push
add
mov
jns
or
scas
imul
mov
pop
push
cli
dec
ljmp
lock
into
mov
fnstcw
push
insb
mov
jmp
sbbl
lock
fldl
stc
stos
cmpb
cli
cmpsb
scas
adc
ret
dec
int
nop
jp
fsubrs
adc
push
pop
and
mov
shrl
into
cli
jle
out
stc
inc
insb
push
sub
ret
adc
lret
lods
cmp
jmp
adc
outsl
dec
push
mov
addr16
fmuls
and
mov
mov
or
adc
push
adc
dec
xchg
outsb
pusha
pop
out
xchg
push
gs
mov
lods
sub
mov
sub
js
test
popf
push
imulb
gs
jbe
std
pop
nop
pop
iret
pop
nop
sbb
mov
fisttps
mov
iret
loopne
sub
adc
pop
xchg
data16
push
jmp
clc
fstl
int
mov
ds
push
push
popa
hlt
out
and
jmp
mov
xor
push
jecxz
popf
mov
je
rcll
lods
aam
bound
inc
jno
or
mov
je
dec
gs
popf
in
dec
dec
mov
xchg
scas
sbb
and
shll
inc
fs
arpl
and
push
mov
pop
sub
xchg
push
mov
jne
and
mov
pop
hlt
sbb
add
ret
xchg
imul
mov
or
adc
and
dec
cmp
cmpsl
sub
clc
ret
mov
daa
xlat
jmp
fcomps
lea
divb
push
insl
ljmp
mov
xorb
hlt
shlb
clc
inc
jge
movsb
mov
and
test
movsl
loopne
or
mov
add
pop
jmp
adc
sub
mov
leave
in
cmpsb
dec
popf
outsl
xchg
or
xchg
arpl
test
ds
and
and
fbstp
mov
pop
cmp
mov
mov
shrl
clc
cmc
dec
add
push
popf
push
pop
into
dec
cmp
les
jle
gs
jne
clc
neg
sbb
cs
xchg
and
xchg
mov
mov
test
mov
jbe
idivl
aam
xchg
lock
call
jne
push
cmp
or
fs
lahf
and
pushf
scas
xchg
pop
add
cmp
xlat
pop
int3
adc
or
ljmp
xchg
aas
push
lret
pop
dec
adc
xlat
lret
out
add
repz
movsl
pop
in
out
mov
inc
fcmovnu
fadds
jne
mov
xchg
test
lcall
xchg
sahf
cwtl
imul
or
fists
sbb
into
in
pop
out
inc
movsb
xchg
mov
pop
inc
sub
inc
adc
push
ss
loope
xor
add
pop
lcall
and
sahf
mov
or
xor
je
adc
inc
js
popf
movsl
dec
call
xor
or
stc
daa
jnp
pop
outsb
cmp
aaa
into
mov
repz
or
ja
xor
sbb
dec
jmp
cmp
repnz
fwait
inc
cs
pop
fs
lahf
cmpsb
and
inc
es
inc
std
or
negb
dec
aad
inc
leave
mov
or
rcll
ret
mov
insl
bound
xchg
in
fninit
jns
mov
cmp
mov
iret
inc
xchg
xchg
sbb
aas
ret
and
ret
mov
mov
dec
lods
ret
jo
faddp
shlb
xor
mov
dec
clc
mov
outsb
stos
mov
pop
call
iret
and
sub
or
push
mov
stc
sub
pop
and
sbb
and
jae
stc
outsl
call
sub
cmp
mov
loope
jg
pop
mov
cli
lret
sub
or
movsl
sbb
das
leave
dec
mov
mov
push
sub
cwtl
and
scas
mov
sub
mov
iret
in
bound
mov
nop
mov
and
inc
test
sub
adc
loopne
sbb
push
push
inc
sub
push
cmp
in
mov
adc
pop
inc
adc
imull
stos
dec
mov
stos
in
jns
mov
movl
icebp
cmpsb
mov
ljmp
test
gs
fiadds
cmc
out
icebp
lret
pop
std
dec
outsl
nop
mov
pop
lods
xchg
adc
out
pop
mov
add
icebp
pop
cltd
outsl
gs
inc
fisttpl
imul
sub
mov
or
and
pop
cmpsb
out
cmpsb
lds
test
icebp
fildll
call
out
ret
add
andl
std
imul
pop
xor
sub
push
mov
orb
hlt
scas
outsl
cmp
rorb
xor
ljmp
xor
pop
loope
mov
xor
adc
pop
push
ret
std
add
rorl
sbb
mov
xor
clc
hlt
push
cmp
cmp
pop
std
cld
inc
arpl
repz
loope
pusha
scas
jbe
outsl
nop
and
sub
mov
outsb
lahf
add
pop
and
add
push
adc
xor
inc
mov
cmp
in
mov
test
and
and
sbb
mov
push
push
or
xor
adcb
cmp
add
mov
sahf
mov
mov
popa
pusha
add
daa
dec
sub
hlt
call
lock
cs
cmp
ss
jbe
push
cli
adc
mov
outsb
in
cwtl
scas
fldenv
idivb
lods
cmp
adcb
out
mov
inc
imulb
leave
cvtdq2ps
dec
dec
pop
jno
clc
sbb
mov
and
test
push
imul
jo
in
mov
xchg
pop
int3
push
fisubs
lcall
jge
jns
imul
jnp
je
loopne
adc
xchg
xor
fcmovb
and
popa
mov
pop
imul
sub
cmp
pop
mov
stc
dec
std
push
fildll
outsl
jb
or
lret
adc
iret
rcrb
imull
cld
push
fidivrs
aaa
or
loope
jg
cmpsb
xchg
loope
adc
out
xchg
insb
mov
fucom
lods
pop
insl
pop
repz
add
lcall
mov
mov
stc
jle
bound
cmc
inc
sub
mov
fsubr
mov
and
push
pop
mov
into
cmp
push
mov
adc
jnp
jb
sub
bound
mov
nop
stos
xchg
jbe
cmpsl
repnz
cli
push
in
add
or
or
adc
pushl
sbb
push
xchg
xchg
sbb
fst
out
dec
movsb
js
xchg
mov
cmc
std
or
je
int
sbb
lahf
arpl
sub
ss
test
int
add
ja
fidivrs
mov
data16
and
pop
daa
cmp
mov
cwtl
and
xchg
pop
and
lret
mov
fwait
lcall
shlb
cmp
adc
adc
cmp
sbbb
adc
ja
pop
mov
loope
mov
loope
xor
cltd
push
shrb
es
xor
std
mov
push
pop
or
cmpsl
mov
mov
xorb
aaa
or
cmp
movsb
and
lret
out
das
cltd
test
out
adc
sti
imul
jmp
outsb
int3
into
sbb
movsb
or
aam
das
mov
cmpsb
aad
xor
inc
fisubrl
subl
pop
enter
or
bound
adc
sbb
outsl
rcr
mov
xchg
pop
hlt
hlt
jns
sub
jmp
fsubl
jns
fs
mov
test
or
leave
test
scas
aaa
mov
xor
js
scas
or
jno
clc
aaa
hlt
int
xchg
int3
mov
pop
and
scas
movsl
push
add
sti
stos
dec
push
adc
pop
in
xchg
jge
repz
iret
push
jmp
xor
dec
xor
sub
insl
fildl
push
in
ss
inc
leave
or
test
mov
and
fmulp
lods
xchg
add
orb
stc
and
xchg
or
jmp
aaa
imul
cmp
or
dec
pushf
jmp
inc
xor
scas
bound
push
in
mov
xchg
mov
jno
imulb
mov
inc
lret
cli
fs
xchg
jl
mov
adc
xor
and
pop
jmp
sub
sub
xor
stos
mov
sbb
mov
lock
stos
xchg
pop
mov
lcall
sti
fildl
gs
ljmp
mov
les
daa
scas
stos
inc
push
or
pushf
cmp
pop
push
jo
in
sar
std
mov
push
or
shlb
call
mov
mov
testb
fists
leave
dec
daa
cld
sahf
call
lcall
cmp
mov
ja
pushf
dec
mov
or
mov
cltd
push
shlb
rcll
dec
add
mov
jnp
jo
mov
cmp
popf
or
or
orb
mull
iret
cmpsl
hlt
popf
cmc
push
loope
loopne
mov
into
mov
jnp
pop
es
loop
inc
cmp
jle
xchg
popf
mov
mov
mov
push
jbe
in
push
clc
adc
push
sbb
push
add
dec
adc
adc
jnp
dec
out
sub
out
rcll
test
stc
enter
or
jg
negl
testb
daa
hlt
les
push
scas
jne
rcrl
add
mov
adc
or
jg
call
imull
pop
push
fisubs
enter
sbb
jae
sbb
fdivrs
gs
jbe
mov
imul
test
adc
loope
lret
xor
hlt
int
nop
xlat
mov
pop
vcvttpd2dq
leave
add
stc
iret
in
inc
push
mov
incb
movsl
mov
mov
repz
rolb
fiaddl
aaa
sub
mov
rep
add
stc
xchg
ljmp
sub
inc
mov
or
test
imull
adc
xor
push
daa
mov
outsb
repz
gs
roll
inc
mov
movsl
mov
cmp
rcrb
xchg
and
fstpt
and
jnp
arpl
push
and
fisubs
pop
mov
out
dec
mov
adc
idivb
fdivrs
mov
push
jae
mov
or
push
sbb
movsl
cmp
clc
scas
inc
sub
pop
mov
pop
repz
inc
mov
imul
es
mov
aaa
ljmp
cmp
test
add
adc
xchg
jmp
pop
sbb
out
xchg
dec
sbb
sub
xlat
and
hlt
mov
and
push
mov
repz
dec
push
and
cmp
lcall
in
rol
aas
and
ds
push
jmp
popf
push
adc
test
arpl
pop
jl
mov
jo
es
pop
pop
roll
mov
xchg
add
or
xor
jge
xchg
or
sub
cli
mov
inc
lea
test
push
mov
add
inc
loope
inc
inc
enter
iret
xorl
scas
push
lcall
stos
inc
xor
fcoml
cmp
push
fdivrs
or
adcb
int
push
fwait
lock
xchg
or
cmp
sub
pop
xchg
inc
inc
mov
sti
cmp
outsb
cmpsl
scas
arpl
dec
fdivl
lahf
pop
push
cmpsb
sahf
aas
or
movsb
jg
fisubl
xchg
and
not
adc
sbb
lds
jmp
mov
js
sbb
sahf
loope
pop
adc
test
mov
outsb
and
push
inc
jb
rcrl
scas
stc
popa
rorl
lahf
and
loop
mov
aaa
sbb
nop
rcrb
lods
outsb
push
dec
dec
negl
adc
lock
xchg
and
test
mov
xchg
push
fsubs
adc
loop
sub
ja
fisttps
mov
dec
jg
push
shl
nop
dec
push
jno
add
cmp
stos
sub
rcr
lret
inc
mov
fwait
pop
fistps
jp
out
and
push
sub
icebp
aas
movsb
pusha
mov
jge
pop
jg
mov
fadds
out
xchg
std
push
out
fwait
adc
jge
sti
mulb
jecxz
xor
inc
outsl
outsl
popf
jmp
bound
fisubs
sub
adc
push
shll
call
mov
imull
adc
bound
cmp
mov
popf
push
mov
repz
dec
icebp
jns
pop
test
pop
xorl
lods
mov
xor
imul
pop
pusha
push
in
lods
mov
push
mov
push
inc
jae
or
dec
inc
xor
sub
repnz
data16
dec
push
jbe
adc
mov
mov
xchg
jle
adc
xor
lods
aas
hlt
shrb
insl
xchg
xchg
push
sti
jno
push
inc
dec
add
dec
add
jb
cmp
pop
adc
in
test
add
fidivrl
ss
popf
sub
sub
push
test
add
mov
in
shrl
adc
aaa
push
std
inc
pop
hlt
sahf
int3
mov
push
stos
and
arpl
into
mov
jp
lcall
shr
mov
fiadds
insl
inc
fs
leave
pop
xlat
scas
adc
add
es
dec
lock
mov
jo
mov
xor
pop
stos
pop
sbb
fsubr
push
fdivp
mov
inc
adcl
ss
jecxz
pushf
js
lds
sub
mov
bound
lret
mov
jno
jne
leave
testl
lds
call
mov
fisttpl
adc
das
in
in
ja
add
push
mov
pop
outsl
mov
bound
and
int3
and
dec
insl
testb
outsl
in
in
push
inc
arpl
fwait
pusha
nop
xchg
inc
mov
xchg
stc
repnz
scas
cmp
stos
imul
add
push
rolb
cmp
push
das
orl
push
shl
mov
adc
nop
push
sbb
pop
mov
cwtl
mov
insb
mov
push
add
insb
icebp
jb
mov
popa
cmp
dec
or
sub
fcomi
or
pop
mov
add
loopne
fstpl
jp
jg
xchg
jbe
jmp
pushf
push
aam
lret
repnz
arpl
jo
sar
xchg
add
push
cmpsl
shrb
push
sub
lods
lret
arpl
ljmp
or
iret
aas
stos
mov
or
mov
push
push
push
push
fwait
adc
adc
add
in
shlb
mov
jno
add
mov
push
push
fisubrl
ljmp
in
sbb
out
push
xchg
ret
push
repnz
sbb
scas
fwait
mov
loopne
cmpsb
cmc
lret
bound
add
sbb
jnp
mov
dec
imul
lock
xor
in
imul
push
mov
sub
call
test
fwait
shlb
stos
call
inc
xchg
out
cmc
lods
dec
arpl
popa
mov
imul
push
dec
ja
or
fimuls
aaa
test
fiaddl
lds
inc
fimuls
xchg
xor
sbb
add
pop
sub
push
es
mov
sub
lea
int3
cwtl
fcomi
jae
ret
stos
push
mov
loope
int3
adc
out
xlat
jecxz
jb
mov
mov
inc
jbe
icebp
add
inc
fs
iret
ja
inc
pop
fidivrs
gs
xor
sti
fwait
lock
jle
mov
push
movsb
cmp
sahf
loopne
pop
mov
push
jge
adc
arpl
fldt
je
push
cmp
adc
cld
std
into
lods
notrack
or
scas
imul
ljmp
jg
shll
mov
mov
mov
icebp
in
loope
add
mov
call
adc
jno
cmc
loopne
inc
cmp
cmp
shll
imul
fsubr
sti
ret
subl
test
mov
cwtl
pop
iret
cmp
aam
cmp
insb
mov
lods
cmp
pop
dec
jb
out
ljmp
add
sahf
sar
cmp
jmp
dec
jmp
adc
subb
xor
fisttpl
mov
sub
daa
das
hlt
inc
lods
repnz
add
lret
enter
inc
sub
jge
cmpsl
cmp
hlt
sbbl
cmp
sub
insb
clc
inc
add
pop
and
xor
and
js
mov
mov
mov
lock
pop
dec
mov
sar
pop
loope
in
adc
test
or
xor
in
push
dec
stc
loope
sub
aaa
mov
call
add
sbb
mov
push
nop
cmpb
mov
adc
push
repnz
xor
inc
sub
pusha
pop
and
mov
rcrl
pop
xchg
add
cltd
inc
mov
jp
notl
imul
outsb
dec
adc
mov
inc
pop
int3
inc
mov
jbe
pop
push
pushf
sbb
mov
mov
sbb
cld
and
aam
dec
rorl
cli
out
dec
stc
push
lcall
mov
popf
inc
push
aad
xchg
pop
and
inc
outsl
push
repz
cmp
cmpsl
dec
js
jge
lea
cmp
push
fdiv
jecxz
sbb
xor
divl
rcll
cmp
add
lds
in
out
pop
xchg
pop
testb
jle
xchg
aaa
pop
stos
ja
jecxz
mov
lret
lret
imul
gs
and
in
subb
pop
push
lcall
stos
aam
and
in
dec
or
aaa
xor
xor
fisubrs
xchg
dec
push
fimull
les
mov
in
popa
adc
outsb
dec
ret
stc
sbb
jle
dec
xchg
dec
jmp
adc
lcall
dec
inc
pop
test
cltd
and
dec
or
shrb
and
xor
fcmovu
pop
lds
dec
xchg
negb
cmp
movsb
xchg
js
imul
jae
and
jns
lcall
inc
hlt
addr16
push
xlat
jp
in
addr16
nop
xlat
in
loopne
loope
dec
iret
mov
adc
push
imul
call
sbb
add
add
jns
xor
das
jb
inc
pop
dec
push
sub
negl
mov
pop
popa
pop
pop
inc
lods
sub
push
pop
push
mov
popf
dec
jl
pop
push
cs
push
out
dec
push
jg
shll
dec
in
inc
repnz
js
mov
mov
out
sub
dec
outsb
and
cltd
movsl
push
adc
cmpsl
lods
mov
fdivs
clc
data16
mov
add
jmp
mov
inc
aaa
test
and
lds
movsb
nop
paddq
inc
popf
call
cs
fimuls
test
jl
stos
sbb
sbb
push
xor
mov
fisttpll
daa
add
adc
pushf
sbb
mov
dec
mov
nop
push
mov
inc
orb
sarl
outsl
mov
xchg
add
mov
inc
pop
loope
jnp
adc
in
pushf
xchg
loope
test
jmp
xlat
cwtl
mov
xor
iret
lret
cmpsb
in
mov
mov
dec
push
jns
jnp
or
push
add
or
lea
xchg
inc
sub
stos
call
adc
repnz
jns
cmpb
inc
movsl
inc
mov
mov
std
clc
adc
aaa
je
call
cmp
xchg
add
sbb
in
jge
lea
mov
das
dec
shlb
sub
push
out
ds
daa
xor
stos
sub
sbb
sbb
and
adc
adc
fbld
push
imul
aam
sub
jmp
les
ds
and
push
push
pop
addr16
scas
dec
out
mov
or
xchg
add
icebp
lods
arpl
lret
mov
fs
int3
mov
push
pushf
jmp
repz
aas
xchg
mov
inc
aas
xchg
xor
pop
jnp
repnz
scas
push
mov
ret
adc
call
enter
loopne
push
testl
je
add
lods
gs
push
jmp
push
sub
mov
addr16
pushaw
test
jne
xchg
cmpsl
ss
mov
leave
icebp
jo,pt
jecxz
lods
push
or
je
outsb
imul
ror
outsb
fcoms
fsubrs
in
pop
jge
pushl
cmovge
aam
add
js
inc
stos
aam
cmp
clc
sub
xor
sarb
fstpt
fiadds
fildll
fcmovnb
test
sub
lods
xchg
test
mov
cmpsb
fiaddl
test
fmull
jge
mov
gs
data16
push
xchg
adc
jl
add
mov
test
pop
mov
daa
mov
leave
ljmp
xor
mov
iret
nop
ja
and
hlt
mov
push
test
jp
push
inc
jae
mov
xchg
jecxz
lcall
add
or
scas
insl
in
mov
adc
iret
popa
cli
sbb
pop
into
fiadds
mov
inc
leave
lret
cmp
test
sub
gs
dec
enter
fstpt
in
adc
mov
scas
jnp
orb
das
pop
pushf
inc
je
or
xor
cmp
cwtl
fsubrp
out
ret
inc
add
mov
push
aaa
adc
fucom
xchg
lods
addr16
xor
xchg
xchg
imul
pop
fsubl
adc
icebp
xor
cwtl
data16
xchg
jbe
lret
or
lahf
xor
test
aaa
ss
xor
inc
or
imul
in
jg
lcall
pop
dec
insb
fwait
outsl
aas
in
sarl
pop
sub
idiv
outsl
sub
pop
ss
flds
sbb
out
lcall
inc
mov
cli
mov
cmp
pop
xchg
and
mov
xor
or
lds
or
dec
mov
enter
mov
stc
sbb
pop
scas
or
xchg
pop
in
fstl
sbb
scas
cs
inc
lods
das
xchg
int
dec
lods
cmp
divl
enter
dec
push
cmpsb
jbe
pop
sbbl
hlt
dec
jb
bound
clc
push
add
sub
mov
mov
add
push
hlt
cmp
mov
mov
mov
outsb
push
and
sarb
xor
jns
push
popf
aad
jbe
enter
inc
push
scas
int
mov
rep
shll
sbb
leave
and
lods
mov
jl
adc
or
dec
mov
mov
lahf
cmp
stos
push
mov
xor
sub
xor
cmp
sbb
adc
std
push
mov
inc
xchg
add
mov
aaa
mov
pop
idivl
out
sbb
je
mov
test
repz
data16
cwtl
sub
loop
or
lret
mov
push
cmp
out
and
daa
mov
lods
notl
int3
std
sbb
int3
mov
scas
inc
jae
lods
sub
fisubl
sbb
in
pop
repz
jge
fxch
ljmp
cwtl
cmpsl
dec
lods
or
sbb
lahf
jbe
lods
jp
gs
sbb
lods
sub
xchg
bound
rcll
pop
pop
out
xor
stos
sbb
jbe
cmp
daa
out
in
mov
stos
dec
adc
sbb
fcmovnu
jl
push
ds
cmpsl
xor
mov
prefetchwt1
aaa
pop
or
sub
mov
xchg
and
sub
and
inc
add
inc
sbbl
outsb
push
iret
mov
ljmp
leave
ja
std
xchg
lcall
lret
cmp
inc
push
or
hlt
test
inc
jmp
and
into
xor
mov
or
out
les
clc
cld
lret
or
test
xchg
stos
sti
sbb
add
xor
ret
mov
rorb
sbb
in
js
push
dec
aam
testb
dec
adc
pop
fcom
pop
sti
jge
pop
dec
jg
inc
aas
adc
or
push
aaa
and
mov
add
push
sub
adc
add
test
std
notb
outsb
fwait
sub
stc
mov
out
gs
aas
mov
sahf
add
jp
and
mov
push
mull
into
lea
imul
and
aam
addr16
jmp
lods
push
out
inc
push
cltd
mov
jmp
inc
pop
jmp
jge
push
lods
test
xor
outsl
xchg
gs
jl
mov
fs
jmp
and
popa
mov
lods
lcall
pop
ret
mov
fisubl
stos
xlat
vpsllw
inc
sub
call
loope
sarb
testl
dec
mov
fcoms
sahf
mov
adc
shrb
push
out
mov
jle
or
jle
int
push
sbbl
movsl
sbb
mov
mov
outsb
daa
test
iret
stc
andb
and
movsl
inc
sub
mov
xchg
jp
mov
push
sbb
add
add
out
imul
or
popf
xchg
aad
fnstsw
pop
cmpsb
add
movb
inc
iret
and
push
mov
cmpsl
sub
add
jg
sub
xor
popf
cmpsb
lea
sub
iret
ret
jg
pop
jmp
push
mov
jge
repz
sbbl
cwtl
or
mov
fwait
cmc
sub
mov
cmpsl
leave
fmuls
loopne
dec
out
mov
fstpl
xchg
cmpsl
arpl
xchg
enter
addr16
lret
add
xor
push
mov
mov
test
mov
aad
and
aam
xchg
inc
pushf
push
and
in
rclb
dec
faddl
push
mov
jle
push
add
push
and
cmpsb
inc
out
ja
jle
xchg
or
sbb
add
pop
lahf
jge
out
push
test
ret
inc
into
mov
cwtl
inc
dec
in
mov
sub
adcl
repnz
push
add
mov
cmpb
jbe
ret
leave
sub
mov
popf
cmp
adc
jmp
imul
cmc
lret
and
dec
pop
xor
dec
daa
pusha
mov
pop
dec
ficoml
dec
dec
xor
xchg
ds
out
loopne
mov
xchg
mov
push
sbb
out
mov
cmpsb
cmpsl
mov
jae
int
jmp
jmp
dec
shrb
pushf
or
pop
rolb
push
adcl
loopne
mov
das
adc
in
ljmp
adc
push
dec
icebp
dec
xchg
ljmp
jne
fildll
xorl
sub
scas
sub
lret
mov
mov
std
add
or
cli
hlt
mov
sub
into
xor
andb
jno
sbb
adc
jecxz
sarb
mov
sti
sub
xchg
imul
pop
cli
sti
add
xlat
mov
icebp
dec
je
cmp
dec
and
enter
int3
fcmovu
dec
xchg
fwait
lods
push
cmp
fadd
test
pop
js
out
mov
fstps
inc
xchg
iret
cmp
les
bound
sub
cwtl
jl
int3
adc
jae
hlt
cmpsb
cmp
pop
fst
adc
mov
sbb
and
adc
imul
call
dec
cli
repz
jmp
mov
data16
adcl
stos
push
push
sub
ljmp
sub
mov
inc
jne
es
das
insl
xchg
add
fcomp
jle
and
mov
fdivrs
xchg
leave
mov
rcrl
xchg
nop
lods
jnp
add
cltd
shll
fwait
imul
jne
scas
in
repnz
sbb
in
adc
jno
std
insb
mov
ljmp
push
cmp
cltd
jmp
xchg
in
inc
mov
nop
jne
andl
sbb
clc
into
push
notl
push
fdivs
cmpsb
mov
out
fucomi
arpl
mov
mov
andb
jns
or
mov
xchg
in
sbb
pusha
lret
add
push
jae
mov
ret
lock
sub
stc
lcall
mov
pop
mov
push
push
je
pop
add
js
popf
xor
dec
mov
and
xchg
mov
pop
jl
or
jge
fidivrs
dec
mov
into
push
xchg
push
sahf
int
jno
insb
add
fldcw
ret
lods
loopne
or
jb
pop
mov
hlt
imull
sbb
aas
sub
xchg
push
mov
addr16
jne
sub
xchg
adc
ds
nop
arpl
pop
lods
lods
jp
aam
or
shlb
imul
mov
xchg
fmuls
ss
scas
idivl
mov
stos
rcrl
repz
lret
push
aas
pop
cltd
and
xor
leave
loope
lret
sbb
int
mov
mov
shrl
inc
fs
popa
jecxz
add
loop
cmp
jae
outsb
cwtl
leave
gs
xchg
rorb
dec
cs
decl
and
sub
aam
testb
les
je
ja
ret
aad
cmpsb
je
sub
mov
mov
push
loopne
out
xchg
jb
mov
push
outsl
add
sub
add
mov
shl
insl
ss
cld
std
lretw
adc
inc
mov
adc
out
xor
enter
lret
lods
aad
cmc
mov
es
inc
test
cmc
xchg
mov
ret
jl
cltd
and
negb
sahf
dec
out
sbb
dec
ror
test
mov
repnz
inc
rorl
lret
enter
inc
loopne
mov
popw
xor
pushf
lret
shll
lock
ret
arpl
pop
sub
es
add
mov
test
jae
je
lcall
or
in
mov
sar
cs
imul
test
cmpsb
mov
jno
and
sub
scas
aam
and
imul
test
loopne
fisubs
je
movsl
or
das
sub
test
mov
dec
adcb
icebp
stos
lret
lock
jmp
pop
clc
and
pusha
xchg
insb
jns
or
dec
roll
stos
ja
ret
push
dec
clc
pop
fcmovne
inc
outsb
push
push
dec
gs
pop
mov
popf
jbe
adc
ljmp
stos
jmp
inc
fisttpll
cmpb
in
outsl
xor
push
je
xchg
mov
push
pop
pop
lcall
ffree
jle
xor
mov
push
push
jl
pop
and
sbb
jle
cmc
push
mov
jmp
add
repz
es
pop
jmp
icebp
fiaddl
pop
leave
cmc
lds
push
sbbl
lea
mov
xchg
aas
xchg
sbb
imul
mov
fbstp
insb
push
out
leave
lret
fists
sbb
ja
jo
push
mov
inc
pop
xchg
jecxz
and
push
mov
dec
call
int3
nop
mov
push
divb
or
les
shr
and
inc
icebp
call
sub
and
or
ljmp
dec
cmpsb
nop
sbb
xchg
mov
ja
sahf
jecxz
adc
repz
pop
push
jne
xchg
gs
cmp
sub
push
int
add
and
pushl
and
dec
push
push
cmp
and
inc
inc
add
fsub
inc
jbe
mov
insl
mov
inc
pop
cmp
mov
in
ret
shl
push
adc
les
push
bound
xor
adc
mov
cmp
xchg
repz
and
xor
ds
jecxz
dec
adc
inc
es
outsl
lret
in
stos
sbb
ja
push
popf
push
sub
loopne
sbb
sbb
add
incb
fnstsw
cli
orb
inc
sub
orb
and
leave
jle
xor
jecxz
dec
sbb
mov
testb
dec
popf
fninit
mulps
imul
notl
push
mov
cmp
js
fstl
insb
adc
push
test
shlb
fisubs
in
jbe
mov
dec
cmp
ds
xor
mov
hlt
insl
pop
mov
psrlw
xor
popa
or
pop
loop
dec
mov
shlb
and
cmp
pop
inc
nop
scas
in
or
mov
addr16
addb
cwtl
jle
loope
and
pop
push
and
pop
push
sub
das
xor
movsb
xor
daa
fcompl
push
pusha
incb
aas
adc
mov
mov
in
or
cmp
mov
sbb
dec
xchg
sbb
aad
pushf
aaa
fnsave
cmp
lret
sub
and
xchg
fcmovb
ret
jg
cmpsl
jg
in
pop
pop
mov
sub
pop
clc
pushf
jl
nop
inc
jecxz
lods
sahf
sub
push
fdivl
inc
or
popa
mov
hlt
or
outsb
lods
jns
int3
xlat
dec
cwtl
adc
mov
je
pop
add
dec
ret
pushf
add
cs
mov
pop
fwait
or
out
dec
sub
ja
add
popf
inc
or
arpl
mov
adc
and
lock
aam
fbld
mov
add
mov
sub
jmp
jecxz
add
sub
ret
xor
push
push
in
jnp
pop
mov
jmp
scas
xchg
sub
in
inc
or
push
cmpsb
inc
loop
fimull
fscale
loopne
mov
stos
jl
mov
add
push
push
mov
add
lea
dec
and
in
mov
xchg
cwtl
mov
sbb
out
push
dec
mov
jns
dec
dec
mov
lods
gs
xor
stos
mov
sbb
les
add
jns
fistl
repz
add
movd
push
and
mov
mov
jo
sbb
xchg
add
push
repz
add
xor
mov
mov
jb
cmp
inc
lret
dec
jno
lods
mov
push
lret
mov
out
pop
lds
xchg
push
movsl
sbb
in
sbbl
outsl
xchg
lods
ret
shll
sbbl
fidivrl
test
push
scas
dec
imul
jo
xor
gs
lock
jne
push
adc
mov
call
jge
jo
out
mov
or
add
repz
add
mov
sub
fwait
aas
insb
scas
add
jp
cli
or
dec
movsl
sahf
rorl
fsubl
psraw
scas
lahf
divb
xor
or
icebp
pop
jns
cmp
icebp
adc
sbb
ss
push
push
sbb
ljmp
cmp
mov
test
pop
jle
xor
jae
or
lahf
cmpsb
jecxz
push
dec
fldt
xchg
mov
insl
out
push
push
adc
pop
push
stc
les
mov
fcmovb
cmp
pushf
pusha
sub
pusha
xchg
ret
cmove
mov
cmp
dec
flds
mov
out
fildll
mov
lret
lahf
mov
cmpsb
xchg
cmp
in
sbb
jbe
lret
loopne
lds
imul
xor
mov
icebp
inc
ret
fwait
aam
dec
xchg
inc
leave
popa
aas
sub
sub
faddp
adc
imul
mov
mov
jmp
loope
push
lret
cmpsb
imul
push
dec
sti
insl
or
sbbl
dec
enter
cmpl
aad
and
push
addr16
repz
or
xor
repz
mov
sub
stos
dec
xor
jle
or
in
test
mov
xchg
stos
rorb
push
imul
jecxz
and
jp
xchg
fidivl
cwtl
mov
inc
jb
adc
test
mov
pop
sbb
aas
pop
fstps
out
cmc
es
icebp
inc
jle
xor
mov
hlt
test
sub
or
xlat
add
mov
test
popf
push
mov
cpuid
dec
stos
adc
mov
pop
or
ljmp
lret
pop
stc
push
fistps
adc
dec
imul
leave
or
adc
rcrl
adc
jmp
dec
in
cmp
pop
xchg
cmp
jae
test
push
call
inc
test
inc
insl
xor
sbb
icebp
mov
sub
dec
lcall
cld
xor
or
mov
iret
int
ret
popa
and
loopne
sahf
add
cmp
mov
icebp
pop
sub
lds
test
inc
push
xor
in
mov
daa
inc
cli
cmc
push
test
sti
xchg
movsl
ljmp
cwtl
int
pusha
mov
dec
xor
cli
push
movsb
addr16
xchg
test
inc
daa
scas
mov
test
sbb
mov
cli
and
or
test
mov
jb
leave
jno
mov
or
hlt
nop
inc
es
rcll
dec
into
out
xorb
and
mov
in
insl
mov
movsb
cli
mov
pop
and
sub
and
pop
cwtl
adc
add
jno
lahf
lret
fsubr
in
add
sub
dec
xchg
adc
push
fdivr
mov
out
fildl
jnp
inc
push
cmp
dec
mov
pushf
fs
xor
out
jmp
fiaddl
cltd
or
in
stc
push
ret
add
inc
mov
repnz
pop
mov
cmp
pop
loope
pop
insb
cld
das
mov
js
fsubp
fildl
jo
mov
adc
pop
daa
mov
adc
fnstcw
mov
out
jno
or
jo
pop
push
pop
pop
push
dec
sub
cwtl
lock
mov
push
jnp
mov
mov
jo
push
jnp
adc
push
cmpsb
imulb
fnsave
cmpsb
sar
in
sti
xchg
filds
xchg
mov
cmp
sbb
fsubrl
xchg
push
iret
cmp
sbb
lock
sub
icebp
mov
pop
stos
cwtl
mov
lock
les
mov
pop
int3
push
adc
jnp
js
inc
cwtl
insb
call
pop
addb
jmp
sub
mov
dec
and
je
les
add
push
jmp
mov
jno
push
mov
stc
cmp
sbb
fldenv
xchg
mov
sub
push
xchg
mov
adc
fdivs
mov
idivb
jecxz
or
mov
fwait
jp
push
dec
jne
or
fldcw
pop
mov
jp
fwait
loopne
cwtl
aas
adc
inc
adc
and
fucomi
es
fcomps
mov
pop
mov
inc
scas
insb
jnp
mov
mov
fcom
stos
lcall
xlat
pusha
push
shlb
cs
sarb
add
cmp
add
sbb
push
and
xor
arpl
out
adc
sbb
jp
inc
fnstsw
fimuls
addr16
enter
test
fstpt
ds
mov
add
add
push
movsl
adc
imul
es
mov
or
mov
xchg
cld
sub
pop
repnz
dec
nop
int
inc
pop
adc
aaa
sti
pop
jg
mov
xchg
cmc
add
add
cmpsb
imul
in
push
pop
sub
cld
inc
movsl
add
movsb
stos
iret
cltd
iret
mov
dec
jo
pusha
insl
cs
scas
rorb
pop
mov
das
sbb
cli
sahf
jle
lret
out
popa
cmp
mov
xor
inc
aam
ret
aas
call
sub
push
loop
cmp
xor
sbb
outsl
gs
xor
std
adc
aad
push
push
dec
push
inc
das
xor
das
jecxz
mov
test
xchg
setnp
insl
es
cmp
push
adc
jns
push
scas
pop
add
or
mov
dec
andl
add
xchg
arpl
mov
fstl
cld
mov
filds
add
sbbl
mov
je
xchg
les
call
test
jle
pop
test
xor
jbe
movsl
xchg
pop
pop
cmp
sub
shll
xor
fdivrp
subb
push
cld
loopne
add
aaa
mov
aas
push
or
jecxz
cmp
negb
test
in
lret
jmp
and
or
addr16
jns
cld
out
test
xchg
js
push
lods
mov
sbb
mov
jl
mov
ds
mov
cli
div
sbb
adc
sub
xlat
cmpl
sbb
jbe
inc
mov
je
inc
dec
insb
jle
test
jl
mov
jnp
hlt
push
lret
or
xor
cmp
push
cwtl
mov
loopne
int
sub
sbb
dec
negl
mov
xor
mov
inc
adc
test
pop
test
stos
js
jmp
mov
mov
fdiv
clc
outsl
sub
scas
lock
outsb
sbb
ja
adc
mov
stc
sar
fiadds
sbb
sub
cltd
es
mov
ret
cmp
xchg
clc
dec
sbb
sbb
shrl
cltd
mov
ja
imul
and
out
adc
xor
fcomip
daa
cltd
cwtl
shlb
or
ret
sbb
psubd
mov
add
fnsave
aas
push
lods
hlt
cltd
in
jg
mov
call
aas
je
dec
repz
jmp
jae
testl
fiaddl
inc
rorl
mov
and
xor
or
fists
jmp
inc
in
mov
dec
in
jo
repz
repz
js
jae
outsl
mov
mov
out
sbb
xchg
mov
rcrl
call
sbb
push
popf
fadds
jo,pn
arpl
mov
jge
mov
pushf
rcr
out
stc
add
rolb
cmp
sub
or
bound
daa
jge
ljmp
cmp
or
lret
call
jno
or
mov
pop
xor
sbb
add
int3
or
cs
int
imul
dec
inc
push
stos
fs
inc
imul
or
pop
lea
fldenv
mov
into
scas
int3
fdivrl
add
test
insl
add
mov
stc
fwait
pop
clc
loop
sti
dec
adc
and
inc
lret
jo
mov
scas
lcall
pop
jle
add
fwait
or
dec
cmp
adc
cmp
int
aas
stc
ss
aaa
andb
push
lock
pop
xor
das
stos
jle
mov
and
cmpsl
movsl
out
mov
ret
fs
ficoms
pop
mov
xchg
mov
subl
sub
sbb
ja
fsts
popa
push
sub
rol
shll
dec
movsl
sbb
pushf
cmp
jmp
or
imul
mov
mov
call
pop
cli
xlat
mov
repnz
add
loopne
mov
xor
leave
sbbb
dec
sbb
sbb
call
stos
jne
inc
xor
loopne
inc
cwtl
lods
aas
adc
arpl
aaa
xor
cmp
cltd
xchg
add
mov
jp
jg
aaa
pop
fildl
xchg
adc
add
cmp
jp
in
mov
movsl
xor
and
div
dec
add
push
sbb
test
sub
inc
mov
jb
xchg
xchg
sbb
andl
inc
push
sbb
xor
pop
pop
out
lock
ja
cld
jge
stos
popf
cmpsb
mov
inc
xor
and
popw
icebp
push
clc
das
scas
jbe
std
and
add
mov
bnd
and
popa
sub
jge
or
dec
ss
mov
dec
movsl
mov
outsl
iret
xlat
les
jge
test
jp
jmp
mov
ljmp
cmp
test
mov
rclb
or
push
shlb
add
xor
iret
mov
or
out
aaa
fsubrs
sarl
pop
ret
mov
clc
cmp
pusha
xchg
cmp
loope
push
pop
jnp
ja
mov
lret
push
push
scas
cld
pop
movsb
scas
xchg
dec
pop
adc
cmpsl
leave
add
add
mov
mov
dec
popa
in
incl
data16
outsb
loopne
mov
and
lea
sub
imull
inc
in
adc
negb
rcrl
jo
inc
mov
sbb
push
es
adc
mov
daa
mov
hlt
ja
clc
lret
in
xchg
jp
dec
sti
mov
gs
and
cltd
shrl
fcomps
lcall
outsl
xor
sub
fucomip
movsl
test
jb
int3
inc
cmp
xor
stc
jmp
xchg
sbb
inc
loopne
xor
in
push
mov
xor
sub
mov
cmpsb
xchg
xchg
push
inc
sbb
das
inc
imul
sbb
dec
lods
mov
cwtl
mov
ljmp
pop
inc
mov
xchg
aam
pop
insl
mov
inc
ret
das
mov
dec
mov
cmp
das
mov
fcmove
popf
inc
mov
add
out
jecxz
pop
pop
ret
imul
mov
jp
cmp
rcrb
dec
add
mov
sbbb
inc
fst
fbld
inc
sbb
icebp
lahf
loop
repz
add
lds
xor
mov
lods
scas
ljmp
stos
or
leave
shld
dec
call
repz
repnz
or
decb
xor
aaa
mov
inc
stc
lea
loopne
xchg
out
ret
fldl
inc
mov
mov
imul
daa
mov
xor
or
lds
in
js
mov
filds
cli
testl
mov
inc
and
mov
mov
mov
scas
in
andl
insb
pop
loope
mov
cmp
inc
iret
xor
mov
jmp
or
dec
imul
xor
je
arpl
divl
lcall
sbb
mov
sbb
and
pop
jb
and
sub
inc
fsubp
leave
sub
sub
repz
mov
hlt
push
push
out
test
repz
sub
addr16
xchg
sub
cmp
fldl
pop
movsl
popf
mov
sbb
sbb
outsl
ret
inc
xor
mov
sbb
ret
sbb
testl
fsubrl
insl
enter
jmp
int
or
add
mov
jmp
add
test
aaa
sub
mov
pop
dec
fldl
cltd
xchg
popf
insl
stc
xchg
inc
sub
jp
jmp
sarl
xlat
test
pop
sbb
mov
test
outsb
popa
push
mov
fisubs
test
inc
int3
stc
imul
fdivrl
xchg
clc
mov
stc
int3
pop
cld
mov
jno
add
inc
pop
jno
je
aas
sbb
setns
rclb
movsw
jae
sbb
sub
in
iret
and
mov
lcall
les
stos
push
xchg
mov
pop
and
jmp
in
icebp
fldcw
or
rcl
stos
les
lcall
cmp
pop
jl
lret
ljmp
sbb
or
call
mov
cmp
insl
mov
stos
icebp
loope
out
dec
xor
xor
test
dec
cli
sbb
or
or
icebp
add
fistpl
fwait
and
ret
fs
and
push
pushf
ljmp
jge
pop
jle
ss
aad
shll
or
xchg
jo
and
lret
pop
pop
out
data16
sti
je
and
xchg
add
and
or
mov
into
test
sub
jnp
pop
xchg
cmp
movsl
enter
dec
idivl
test
mov
lea
insb
jno
ds
push
and
shl
or
lods
ljmp
xor
cmp
mov
mov
pop
push
fwait
out
or
flds
xchg
mov
loope
jecxz
push
jns
fs
and
jecxz
cmp
mov
shrl
rcll
jmp
out
fisubl
xor
and
cmp
sbb
adc
cmp
int3
mov
and
xchg
daa
sub
icebp
cli
jecxz
ja
or
andb
jns
js
cmc
imul
fxtract
push
push
shlb
stos
mov
mov
jle
or
jmp
jno
xchg
and
xor
mov
in
loopne
loop
test
mov
ljmp
in
xor
adc
shrb
mov
call
dec
mov
pop
mov
jne
inc
clc
cmovo
mov
cmp
push
mov
sub
inc
jecxz
in
push
loopne
mov
sub
out
loope
lea
lods
jmp
and
dec
fmuls
ss
pushf
adc
add
jg
outsl
lock
cmpsb
add
lret
xchg
xchg
cmp
int
cmp
sub
xchg
jl
mov
aam
add
or
shrb
pop
jae
inc
lock
clc
orb
ret
xor
lret
sub
cwtl
add
rorl
popf
mov
sarb
enter
pusha
pop
xor
xorl
loopne
scas
idivl
ja
int
xchg
and
xchg
inc
rclb
repnz
jp
std
sub
rclb
loop
mov
arpl
mov
mov
faddl
jp
hlt
jo
ret
push
push
pop
cli
pop
aad
inc
je
daa
arpl
pop
movsb
jno,pt
inc
mov
push
add
mov
icebp
or
and
das
inc
popf
shl
add
into
mov
testl
and
jne
push
mov
inc
andl
outsb
fidivrs
mov
call
xchg
adc
leave
and
inc
in
push
pop
mov
jnp
arpl
pop
or
push
pop
js
ret
adc
mov
cmpsl
movsb
push
dec
mov
ret
inc
or
dec
pop
xlat
dec
push
fadd
dec
sub
fistps
xchg
push
push
scas
adc
fnsave
xorb
cli
lds
nop
push
rclb
repz
insb
and
dec
or
mov
movsb
outsb
push
shrb
dec
jge
inc
insl
dec
popf
adc
cmc
or
mov
pop
lds
sub
lds
dec
xor
jne
push
xlat
mov
dec
loope
mov
jl
in
ljmp
inc
push
popa
outsl
mov
jne
push
push
dec
and
jmp
jo
inc
faddl
shrb
adc
movsl
out
lock
popa
movsb
mov
mov
adc
out
cmp
movnti
jbe
fistpl
or
push
repnz
lret
pop
sub
push
repnz
dec
jge
mov
sub
lret
outsl
mov
inc
movsl
repnz
outsl
pop
mov
jle
xor
out
jmp
pop
mov
pusha
jne
jae
ljmp
std
lds
data16
lock
imul
cmp
clc
clc
dec
sbb
out
pushf
mov
icebp
pop
ja
lahf
loope
lret
add
inc
repnz
aad
adc
test
push
xchg
daa
adc
push
jo
push
sbb
loopne
mov
lock
and
mov
loop
imul
pop
inc
jns
clc
test
xor
mov
sub
aam
andb
push
ds
xor
dec
inc
push
xchg
outsl
inc
insl
cwtl
jp
lds
xchg
jp
rcr
cmpb
mov
push
mov
imul
test
dec
adc
in
lock
xor
xchg
mov
ret
add
fcomps
outsb
out
dec
imul
sbb
xchg
fbld
rclb
cmp
inc
fstpl
pop
inc
insb
mov
jge
out
cmp
add
xchg
push
push
or
aaa
cmp
out
mov
test
les
push
lock
shlb
adc
cli
mov
mov
fimull
dec
xor
outsb
jl
ja
jb
push
pop
cmp
and
or
iret
les
jbe
enter
test
dec
mov
fwait
adc
fsubr
jae
stc
sbb
sub
ds
mov
arpl
sub
insb
dec
lcall
repnz
jg
outsl
fidivl
test
or
in
dec
lock
mov
jb
mov
loopne
mov
jo
sub
in
adc
iret
or
repz
pop
mov
into
les
or
jb
outsl
popa
and
rcrb
imul
in
adc
and
adc
jecxz
pop
add
insb
bnd
xor
push
jns
aas
mov
dec
lahf
movsl
ja
pop
pop
clc
aas
scas
and
pop
inc
stos
and
xchg
jle
cmp
push
pop
cmp
push
adc
lds
repz
sub
fimuls
lcall
pop
sub
test
jae
mov
mov
pop
sub
fs
dec
jp
dec
or
sbb
in
xchg
inc
sbb
adc
scas
xorb
ljmp
dec
mov
lahf
loope
imul
lock
roll
jle
pop
popa
xchg
in
pop
mov
add
push
xchg
xchg
test
ret
sub
cli
xchg
mov
cmp
jge
call
mov
jne
lea
jl
scas
cld
inc
stos
cwtl
pop
lahf
xor
movsb
cmp
jge
aaa
mov
jo
mov
js
mov
gs
pop
or
aad
js
mov
jp
sbb
or
fnstcw
mov
sub
mov
pushf
insb
idivb
cs
mov
leave
jae
xor
inc
xchg
dec
mov
popf
adc
mov
jg
mov
rol
lret
lock
jnp
jo
pop
mov
dec
fld
jl
push
adc
test
sbb
fists
cltd
popa
add
repz
dec
jecxz
bound
push
push
test
ret
out
in
ja
dec
ret
pop
push
jae
mov
jo
or
mov
jmp
sub
punpckhdq
mov
sbb
dec
fidivrl
push
add
xor
sarb
sarl
fnstenv
sbb
lock
int
ja
data16
std
daa
jmp
rorb
adc
xchg
iret
mov
sub
scas
adc
cmc
or
pushf
inc
fbld
call
xor
sub
cmp
jecxz
xchg
mov
shlb
clc
xor
fwait
sub
mov
clc
cmp
cld
mov
mov
inc
jmp
insb
aaa
sbbl
adc
or
push
cli
pop
outsb
faddp
imul
rcll
mov
xor
pop
fmuls
jg
sbb
inc
jnp
pop
movsl
jmp
dec
lds
xorl
movsb
testl
xor
scas
dec
or
cmpsl
jo,pt
into
cmp
gs
fmuls
inc
out
inc
or
push
pop
push
js
cwtl
test
lea
std
movsl
mov
out
addr16
test
out
xor
dec
insl
push
icebp
push
iret
cltd
cli
rcl
popa
xchg
jns
sbb
dec
and
mov
jl
mov
mov
sbb
imul
push
rclb
mov
fsubrs
xlat
outsl
push
pop
sbb
enter
mov
add
aam
movsb
imul
in
popf
std
cmpl
in
jae
stos
sarl
or
mov
pop
adc
fadds
cmp
adc
lods
and
dec
popa
xchg
jns
loope,pn
sbb
rcl
mov
js
and
fisttps
dec
sbb
pop
cmp
aad
xchg
nop
adc
sahf
push
fcmovne
mov
jnp
xchg
imul
sub
cmc
mov
sub
in
lret
scas
je
iret
push
shlb
jle
leave
push
aad
xchg
sub
aad
lret
ja
scas
fsubrl
xor
xchg
xor
mov
dec
push
dec
jmp
out
test
fwait
dec
mov
sbb
sbb
outsl
sub
popa
das
outsl
repnz
dec
fdivs
xchg
cli
xchg
ficomps
mov
push
and
sbb
repz
cwtl
adc
divl
subl
mov
mov
xchg
inc
jb
push
bound
out
or
nop
bnd
and
or
mov
out
mov
lea
jae
push
dec
cmc
les
mov
mov
enter
stc
jp
pop
fsts
cmp
gs
xchg
pushf
nop
xchg
pop
lods
push
insl
and
fstpl
or
add
pop
pushf
push
mov
scas
push
in
push
push
stos
repz
ret
out
ret
aas
mov
pop
rcll
mov
jp
push
sub
loopne
dec
adc
and
out
add
add
int3
arpl
nop
pusha
xchg
les
cmpsb
and
inc
lods
pop
adcl
mov
jns
in
sbb
cmp
lret
xor
lret
in
inc
mov
fs
sarb
mov
cmpsl
dec
and
shrb
insl
xor
in
js
icebp
xchg
lret
mov
mov
mov
inc
scas
jp
xchg
lret
std
flds
add
jle
jno
or
nop
aaa
repnz
shlb
jno
xor
mov
inc
addb
xchg
idiv
sbb
cmpb
inc
lods
jns
lock
iret
push
xor
add
out
xchg
mov
mov
ja
pop
mov
stc
pop
scas
repz
mov
pop
mov
jne
adcl
test
jge
jbe
xchg
roll
mov
mov
xor
ds
push
enter
popf
cvttps2pi
mov
pushf
cmp
aad
cli
dec
insl
dec
sub
xorl
shl
push
stos
or
push
inc
ret
fwait
lret
out
push
inc
shll
clc
sbb
adc
lds
jge
negb
add
push
idiv
sub
loopne
inc
out
enter
push
gs
shlb
iret
inc
iret
ja
int
cmpl
xor
jbe
jle
imulb
shlb
mov
sbb
pop
xor
icebp
mov
xor
in
lea
aam
pop
or
js
pop
lea
or
mov
or
aas
lcall
mov
test
stos
cmp
cwtl
mov
xor
xor
push
jg
cmp
in
jns
gs
mov
pop
lahf
sub
push
repnz
aad
js
ret
cmp
ds
adc
sub
inc
push
ret
pushf
sarl
fstl
ret
jmp
cmp
loopne
cld
out
jp
or
lret
pop
pop
call
js
push
mov
xchg
ljmp
addb
lahf
shll
mov
jae
push
ljmp
push
mov
sarl
sbb
fisubrl
push
int
mov
adc
fpatan
mov
dec
lds
test
push
in
pop
pop
cli
push
or
insl
outsl
in
jns
push
fmul
lods
scas
pop
adc
cmp
jno
and
and
subb
and
jg
test
popa
cld
push
mov
and
mov
ss
shlb
mov
xor
ss
mov
add
lods
or
sub
icebp
je
inc
neg
call
cmp
inc
loope
ljmp
mov
mov
lret
and
test
cmpsb
mov
mov
ret
dec
mov
push
fistl
fst
xchg
sbb
lods
jb
popf
shlb
ret
and
mov
insl
or
ret
sub
or
mov
cmp
add
mov
into
add
and
mov
add
out
xchg
sbb
popa
push
lcall
insb
dec
xchg
push
xchg
sbb
jg
mov
mov
mov
dec
mov
minps
pop
push
dec
ljmp
insl
jb
lret
jno
je
jbe
bnd
scas
or
xchg
xchg
adc
int3
push
pop
sub
stc
ja
adc
push
clc
lea
pusha
test
test
and
ficomps
pusha
adc
negl
pusha
push
jecxz
aas
popa
jno
ficompl
mov
mov
or
cmc
rorb
lods
cmp
out
imul
push
xor
jmp
xchg
ja
adc
les
test
xchg
pop
scas
cmpsb
jecxz
push
lods
and
dec
insb
repz
xor
add
cwtl
test
or
mov
pop
andl
mov
jae
aam
xor
shl
outsl
pop
cmp
les
sti
sti
std
jae
pop
mov
jecxz
mov
and
mov
push
jge
enter
mov
jmp
cmp
pusha
add
test
sbb
pushf
sbb
xor
pop
push
add
cmp
inc
int3
dec
push
mov
mov
inc
scas
out
jmp
test
imulb
jb
int3
ljmp
pushw
adc
mov
inc
ret
aas
subb
lods
xlat
pop
mov
dec
out
outsl
testb
and
lods
lcall
cmc
jns
mov
push
pop
pop
insl
mov
mov
mov
out
inc
cmpsl
pop
rcr
hlt
rclb
mov
or
cmpsl
aad
mov
fidivl
push
icebp
arpl
adc
add
stos
mov
shl
mov
stos
jecxz,pn
ss
mov
push
into
ror
push
or
pop
sbb
adc
ficomps
pop
xlat
fdivrl
or
pusha
cmp
movsb
mov
rolb
sub
ds
xchg
aas
jle
lds
jp
int3
push
ret
push
mov
jb
dec
repnz
in
add
dec
sbb
jo
bound
pop
xor
pusha
out
in
aad
mov
sbb
push
mov
dec
add
pop
into
outsb
add
inc
repnz
push
cwtl
and
push
lods
addr16
add
pshufw
ss
sbb
aam
pop
idiv
cmp
ss
mov
inc
test
adc
cli
inc
xor
add
into
sbb
jbe
add
pop
ds
fldl
inc
sahf
loopne
cld
popf
pop
and
mov
sahf
jbe
sbb
popf
and
adc
jne
mov
lcall
cmc
aaa
imul
adc
and
test
repz
inc
lahf
sbb
sub
sub
data16
xchg
pop
outsb
xor
imull
push
sub
xchg
cmc
inc
int3
pop
mov
inc
imul
out
xchg
cmp
scas
mov
ret
gs
and
adc
pushf
pop
push
inc
out
sbb
cmp
fsubrs
mov
adc
nop
shrb
shr
fwait
cs
pop
fwait
jmp
and
lock
out
xlat
push
jne
ret
mov
pop
xchg
cmpsb
nop
xchg
rcrb
mov
inc
lret
cmp
mov
pop
scas
sbb
push
jge
nop
and
je
mull
push
xlat
push
les
xor
aad
in
adc
out
mov
jmp
and
xchg
lahf
xchg
or
and
push
adc
jecxz
mov
xor
mov
repz
mov
in
xchg
scas
mov
lret
cltd
and
add
cmp
imul
out
jge
sub
js
popa
mov
cmp
jp
arpl
ret
sbb
repnz
cmpsl
push
mov
lahf
add
mov
lret
add
sub
lret
mov
popa
test
jle
cmp
mov
dec
in
xor
xchg
and
jmp
enter
enter
push
xchg
pop
jecxz
je
dec
hlt
int3
mov
pop
aaa
popa
inc
aad
sub
out
scas
loope
dec
pop
pop
nop
nop
pop
or
test
sub
mov
mov
xchg
std
icebp
xor
mov
dec
push
test
and
imul
jmp
cmp
gs
jae
enter
mov
push
outsl
mov
je
ds
cmpsl
std
arpl
test
lcall
faddp
mov
dec
cs
loope
aam
sbb
and
cmpsb
jb
sub
shr
fisubrs
sub
xchg
mov
aad
testb
push
div
es
pop
mov
adc
outsl
mov
adc
cmp
mov
push
pop
popa
fnstcw
call
cld
out
dec
push
adc
dec
js,pt
and
and
pop
fs
pop
lcall
ret
jle
jo
stos
dec
push
stos
stos
and
repnz
in
out
or
sbb
push
jmp
fiaddl
add
in
mov
inc
mov
sub
inc
jnp
push
mov
lcall
cmp
test
popl
jbe
mov
pusha
fsubp
push
movsb
pop
outsb
pop
jb
inc
mov
sbb
dec
cmpsl
mov
pop
jle
xor
dec
xor
or
sti
jns
lahf
or
popa
mov
xor
sahf
in
pop
or
fcos
jno
jmp
gs
ds
sub
cmc
jge
mov
mov
pop
mov
out
xorb
jl
or
fisubl
or
cmpsb
mov
pop
xchg
sub
push
lret
movsb
ret
test
test
mov
ja
xor
cs
fistps
jmp
stos
movsl
mov
or
mov
dec
call
mov
mov
hlt
movl
push
xchg
sbb
add
push
xchg
popf
inc
mov
loope
ror
dec
fs
push
aam
or
jo
ffree
xor
sbb
packsswb
out
mov
addr16
mov
in
inc
dec
in
ljmp
iret
inc
popf
mov
push
pop
out
mov
pop
add
cmp
rcll
ret
ss
int3
jp
cmp
out
jnp
dec
dec
xor
aaa
mov
dec
and
int
aad
daa
fdivl
and
adc
jne
insb
push
in
jb
sub
adc
insl
lods
or
push
arpl
cmp
test
push
sbb
pusha
cld
or
xchg
stos
fucom
imul
xchg
adc
ja
or
mov
cmp
lahf
mov
lahf
and
dec
sub
push
jle
fwait
je
jnp
je
push
xor
add
sub
mov
ja
sub
xchg
sbb
xlat
pop
hlt
aam
leave
mov
and
repnz
jge
fisttps
cmpsb
call
jne
mov
mov
sbb
retw
lea
push
mov
mov
lds
sbb
dec
lahf
pop
mov
mov
rcrb
jmp
add
enter
popa
sub
insb
jl
xor
fcompl
out
mov
leave
sbbl
mov
xchg
addr16
rol
xchg
push
iret
xor
shll
dec
push
sbb
sti
dec
aad
dec
xchg
cmp
loopne
ds
test
fisubrs
mov
xorl
pop
scas
mov
loope
push
jae
lods
mov
fsubp
sub
mov
test
lret
nop
in
cmp
rcr
movl
adc
pop
mov
mov
dec
sub
and
clc
xlat
jo
mov
shlb
mov
fwait
or
lock
dec
sarl
mov
mov
jg
cmp
ret
ja
mov
pusha
daa
daa
jns
adc
mov
xor
pop
push
in
push
scas
mov
cmp
out
js
adc
repnz
jb
xor
dec
pusha
int
sub
in
dec
rorb
fstps
rolb
lods
xlat
fisubrl
and
and
xchg
pushf
dec
xor
adc
shll
repnz
popf
xchg
jl
mov
fsubs
enter
stos
or
ficompl
sbb
mov
mov
jns
leave
mov
cmp
sub
mov
scas
fwait
or
rcrl
push
sub
mov
inc
or
sbb
into
jnp
lods
xor
aas
ficompl
fsubr
out
in
push
mov
scas
xor
mov
stos
mov
mov
jp
sarb
adc
in
xchg
stos
jnp
ss
or
scas
scas
inc
jae
sub
inc
cmp
cmp
ss
mov
jmp
xchg
test
js
imul
xorl
sub
imul
cpuid
movsb
or
movsl
mov
xor
fmull
fs
mov
pop
mov
dec
mov
xor
add
mov
jbe
pop
dec
test
xchg
cltd
jb
sub
shrb
pusha
in
popa
xchg
push
add
and
shrb
test
hlt
push
movsl
pop
inc
push
adc
aas
inc
cwtl
inc
negb
cmp
adc
sbb
pop
movsl
test
mov
adc
add
dec
in
push
call
xchg
or
cwtl
mov
cmp
sub
cmovle
in
mov
mov
lahf
and
lods
cld
xor
pop
out
sbb
addr16
rolb
pop
push
and
jb
sbb
push
ds
outsl
mov
add
dec
repz
loopne
inc
in
cmp
dec
mov
pop
xlat
jne
xchg
jmp
jle
mov
fwait
orb
outsl
push
lcall
loope
pop
pop
sub
or
rcrb
fstpl
test
xchg
shrl
stc
jle
jae
ljmp
mov
pop
data16
ret
test
ljmp
rolb
bound
enter
mov
cld
push
test
sbb
add
xor
sti
je
push
mov
push
fwait
or
cmpsb
fwait
dec
push
lds
xchg
xchg
push
and
movsl
jmp
adc
mov
xlat
pop
jle
xchg
jle
fcoml
xchg
push
divl
pop
scas
sub
mov
cld
lret
daa
mov
mov
push
out
imul
test
cwtl
pop
movb
ljmp
and
adc
outsl
flds
fcoms
xchg
cmp
xchg
pushl
push
sbb
jnp
enter
adc
ljmp
sti
xchg
pop
mov
sbb
stos
jmp
xchg
mov
xor
dec
sub
jmp
push
xchg
outsl
push
in
or
clc
jns
ss
dec
fstpl
sub
imul
test
fisttpll
push
dec
out
mov
jecxz
fistl
hlt
pop
int3
adc
mov
xlat
cmpsl
cmpsl
jns
jo
in
imul
xchg
jl
mov
ljmp
mov
ffree
mov
xchg
xorl
push
inc
inc
mov
xchg
mov
sbb
or
jp
xchg
push
les
clc
cmpsb
loop
add
ret
adc
loopne
mov
leave
repnz
pop
pop
mov
inc
mov
sbb
xor
addb
out
cmp
fldcw
aas
lock
bound
outsb
jle
stos
test
repz
es
out
fadds
leave
int3
jecxz
sbb
idivb
rorl
ret
add
insb
adc
sub
add
jbe
and
stc
lret
or
insl
push
jecxz
xchg
mov
test
cmp
add
fildl
push
push
fs
add
hlt
imul
sahf
or
mov
les
xchg
cmp
mov
aas
cmp
mov
nop
cmp
jo
push
jmp
movsb
das
and
dec
stos
jl
dec
mov
popf
lock
inc
or
sbb
scas
sub
testb
loope
in
sbb
pop
out
cmpsb
adcl
loopne
rcrl
icebp
jle
cmp
adc
add
ret
jl
lods
sub
sbb
mov
push
xor
xor
or
adc
sbb
dec
mov
out
pushl
mov
sub
mov
pop
inc
repz
and
ret
jne
mov
jl
lea
sbb
or
ss
fxch
push
inc
lock
fmull
add
mov
scas
daa
lea
aaa
cs
xor
mov
icebp
dec
and
fdivl
scas
aad
loopne
xchg
sbb
sub
in
dec
mov
shrb
adc
adc
popf
lret
orl
in
push
stc
push
mov
cli
mov
mov
popa
jo
xchg
sub
popf
loop
sub
add
hlt
push
mov
and
lret
mov
cwtl
int3
push
fnstsw
enter
xor
testb
xchg
dec
int
mov
cmp
jno
dec
xor
stos
testl
daa
fisubrl
push
lcall
mov
xchg
sbb
stc
cmp
mov
in
jae
sub
xchg
add
in
popa
das
faddp
in
xchg
or
cli
lret
xor
inc
mov
mov
movsl
arpl
sbb
das
in
mov
mov
jno
mov
cmp
mov
add
mov
mov
cmp
sub
xchg
pop
pop
cli
cld
bound
ds
fcmovnbe
div
icebp
lea
bound
sub
cmpsl
aam
jae
inc
pop
add
push
sub
f2xm1
std
fdivr
mov
add
imul
lea
jecxz
xor
xor
mov
xor
mov
out
sarb
aaa
add
mov
movsb
jns
jb
mov
xchg
mov
cwtl
lret
mov
out
mov
in
push
vxorps
cli
insb
mov
andl
push
movl
xchg
dec
cmpsl
insb
jb
jno
xchg
adc
xchg
fmul
flds
mov
mov
cmpl
mov
mov
mov
sub
jg
in
push
cwtl
cmova
out
xor
stos
push
into
jecxz
cli
mov
in
push
cmp
out
xor
outsb
ficompl
hlt
idiv
das
out
out
popf
push
pop
lds
imul
mov
lods
loop
cmp
mov
cmpb
es
mov
jne
pusha
push
lods
jge
jo
sub
mov
mov
mov
xlat
xchg
xor
xchg
pop
sub
inc
cmpsb
fwait
jno
jns
adc
hlt
or
jecxz
sub
xor
jns
mov
cs
hlt
ret
leave
scas
nop
pop
out
ja
ficompl
sbb
dec
das
inc
cld
in
jne
fwait
lds
add
pop
popa
aaa
mov
call
insb
fidivrl
dec
sub
jge
adc
gs
push
fwait
addr16
out
xor
push
fcmovne
scas
cld
test
loopne
pushf
ret
sbb
shrd
inc
ja
lret
in
test
sahf
or
daa
sub
mov
ljmp
xchg
test
push
push
or
sbb
inc
lret
cmp
xchg
dec
in
sub
rolb
adc
xor
jno
in
add
mov
jno
adc
cmp
stos
lahf
mov
or
mov
fs
popa
sbb
divl
int3
hlt
dec
pushf
mov
push
push
movsb
push
addb
xchg
add
add
in
and
mov
push
sub
nop
cwtl
in
outsb
sbb
int
stos
mov
out
or
push
sti
push
add
xor
lods
stc
iret
mov
fldcw
out
and
or
pop
dec
dec
gs
cli
pop
xchg
div
xor
loopne
cmp
test
pop
fcmovnbe
daa
mov
fldl
and
imul
and
xchg
cmp
addb
xchg
sar
in
mov
pop
stos
int
pushf
sbb
cs
imul
mov
and
insb
add
lea
cmc
aas
mov
in
and
cld
fcmovu
inc
or
dec
sahf
dec
or
jno
pop
out
int
pop
hlt
scas
ja
inc
nop
add
xchg
sbb
cmp
je
mov
push
pop
mov
or
lret
cltd
push
push
sbb
or
mov
mov
out
out
xor
cli
cmp
sbb
xchg
fidivs
nop
mov
int3
push
inc
rcrl
movsl
sub
pop
sub
fwait
push
movsb
mov
mov
outsl
idivb
mov
dec
arpl
addb
push
out
bnd
popf
push
fldt
sub
in
adc
das
iret
inc
ret
cltd
stos
jo
adc
add
aam
dec
jge
data16
repz
insb
and
push
mov
xchg
cltd
inc
mov
sbb
adc
js
jg
add
and
test
xchg
aad
mov
mov
mov
xor
xchg
sbb
pop
sub
push
jb
outsl
cmp
leave
mov
mov
fdivs
mov
xor
flds
inc
jo
inc
and
mov
cs
and
call
add
add
cmpsl
mov
or
lock
and
addr16
push
or
clc
je
push
addr16
dec
dec
imul
xchg
arpl
aam
fisubrs
outsl
push
es
outsl
dec
sub
in
mov
mov
pop
xchg
mov
jg
push
imul
xor
mov
out
out
pushf
pop
fsts
and
xchg
mov
es
rcll
fiadds
adc
mov
lea
sub
aas
fucompp
mov
test
mov
inc
outsb
xchg
cwtl
sbbl
cwtl
and
sbb
jmp
fildl
and
lret
stos
stos
or
xor
stos
cmpb
push
cmp
xchg
out
fiaddl
or
cmp
xorl
mov
ret
in
lods
addb
repnz
xor
das
rorb
inc
fwait
je
xchg
xchg
ss
mov
push
js
sub
mov
sub
adc
out
push
jecxz
dec
or
inc
cltd
pop
sub
imul
xchg
jae
nop
iret
push
data16
mov
lock
inc
mov
ljmp
xor
xor
stos
and
and
aaa
mov
rorb
sbb
out
mov
mov
pop
jp
testl
mov
sub
inc
pop
jmp
inc
mov
adc
sahf
notl
ficoms
push
xor
shll
mov
jbe
testl
pop
sahf
sub
jns
sti
outsl
adcl
adc
cmpsb
sub
vmptrst
test
xor
jge
push
add
je
mov
jo
iret
pop
mov
sub
inc
out
shll
mov
or
ret
fldt
or
lds
mov
dec
mov
es
mov
pop
pcmpgtd
fabs
mov
into
call
lock
rorb
adc
cltd
icebp
and
lahf
stos
mov
stos
dec
or
xchg
xor
out
mov
les
imul
mov
in
ds
push
mov
push
jmp
shll
xor
adc
xchg
test
enter
test
push
aas
lret
jp
mov
and
fdivr
jns
ds
pop
jecxz
pop
jne
push
fnstcw
es
push
adc
sbbb
flds
push
fmull
mov
mov
inc
stos
mov
lahf
outsb
imul
pop
fidivrs
out
mov
xlat
popa
mov
enter
sbb
ljmp
cmpsb
ja
in
cld
add
mov
sbbb
or
dec
repnz
mov
or
mov
inc
mov
movsl
ret
mov
inc
rol
and
push
sahf
insb
inc
ret
das
mov
testb
mov
in
adc
adc
xchg
adc
xor
clc
jbe
in
mov
xchg
mov
or
pop
pop
into
mov
xchg
enter
fucomp
arpl
inc
mov
jne
xchg
or
and
and
dec
movsl
dec
hlt
sbb
mov
clc
and
inc
fcmovbe
lea
inc
ficoms
lcall
roll
popa
sub
das
stos
and
sub
cmp
inc
enter
jne
pusha
lret
adc
iret
rcll
inc
std
push
popf
adcl
dec
orb
mov
sbb
ja
fstl
dec
hlt
dec
push
cmp
mov
rcrb
addb
xchg
lret
sbbl
loop
xchg
pushf
fadds
sbbb
rclb
pop
adc
lcall
mov
lret
jnp
xor
test
fimuls
jb
push
and
add
dec
lds
lock
jo
shll
fistl
mov
pop
xchg
fs
and
insb
sbb
ja
sahf
stos
sub
jb
add
or
repz
outsl
mov
fs
push
or
ret
or
adc
clc
fimull
aam
sti
cmpsb
adc
cmpsl
lock
out
repz
repnz
push
and
cs
outsb
pop
flds
aas
das
sub
push
scas
jnp
mov
mov
sub
es
push
mov
and
insb
or
push
inc
pop
stc
outsl
mov
divl
je
dec
push
push
and
and
pop
pop
roll
arpl
fldlg2
or
jnp
mov
jecxz
fucom
pop
inc
mov
aas
jge
dec
pushf
mov
xchg
pop
push
push
int
stc
cli
cmp
sub
sbbl
adcb
and
inc
sbb
mov
lock
cwtl
pop
xchg
stos
scas
movsl
loope
sub
pop
inc
sub
push
inc
dec
xchg
lcall
cli
mov
pop
repz
fstpt
push
ljmp
mov
or
in
subb
add
pop
mov
int
fmuls
pushf
jle
ljmp
jne
lret
pusha
and
jnp
mov
mov
insb
clc
mov
inc
icebp
popf
je
iret
xchg
adc
pop
inc
les
cmp
pop
sub
push
enter
popa
sub
mov
add
ss
or
inc
aaa
rcrl
mov
aad
pop
push
jbe
aad
mov
dec
cmpsl
dec
scas
xchg
stos
cmpsl
imul
or
js
xor
stos
adcl
gs
mov
adc
lods
cmp
xor
fbld
dec
cwtl
or
jmp
std
dec
cli
sbbl
fisttpl
jnp
cmp
into
vpaddusw
jl
ja
xchg
pop
les
push
or
ljmp
aad
dec
xor
adc
cmc
sahf
mov
mov
xchg
mov
mov
jo
cmp
sti
cmp
xchg
mov
std
popf
push
out
push
cwtl
pop
mov
inc
adc
dec
pop
adc
sub
call
notl
xor
les
sbb
jecxz
sub
mov
daa
imul
mov
sbb
fisttps
insb
push
inc
lret
fs
lcall
aas
repnz
mov
pusha
mov
pop
push
loopne
in
rorb
push
fprem1
shrl
xchg
js
je
sbb
or
in
les
xchg
adc
jnp
pop
fsts
mov
pop
xor
cwtl
sub
lahf
stos
mov
adc
out
stos
je
jecxz
push
jmp
popa
mov
ljmp
xlat
mov
and
daa
and
push
out
cmpb
rcr
loop
ficomps
dec
mov
pop
scas
sub
out
rcrb
mov
ljmp
mov
repnz
inc
int
add
cmp
mov
mov
cmpl
loop
cltd
loop
push
dec
xchg
push
cltd
jge
inc
test
and
gs
ljmp
xchg
pop
es
daa
pop
mov
inc
repnz
mov
stos
dec
adc
xor
pop
jg
mov
lods
fldcw
cltd
lods
sahf
push
enter
mov
jno
dec
test
adc
sub
dec
adc
pop
push
jno
push
iret
push
orl
xchg
lret
gs
into
xor
and
and
cmpsb
shl
shl
test
outsl
xchg
pushf
mov
les
or
popf
je
xor
in
cmp
dec
or
inc
inc
fnstenv
pop
stos
enter
sahf
sbb
lret
adc
sbb
aas
cmp
insl
adc
adc
lahf
scas
mov
push
arpl
mov
xchg
aaa
lret
pop
inc
cwtl
pop
insb
and
rcrb
lcall
leave
out
and
ret
std
sbb
mov
shrl
or
xchg
scas
ds
or
xchg
add
rcll
xchg
pop
aam
xor
adc
aad
adc
out
scas
jns
mov
sub
mov
rcr
mov
or
and
shll
add
std
dec
test
add
mov
psubb
xor
lea
in
or
and
lret
xor
popa
outsb
test
push
orb
sbb
or
xchg
test
inc
mov
ja
sbbb
sub
addr16
jb
and
pop
sub
pusha
push
jp
and
daa
fwait
mov
dec
movsb
ljmp
add
cltd
insb
push
dec
test
and
inc
xor
adc
xor
pop
push
hlt
mov
ret
inc
jle
fstpl
fninit
mov
popf
xchg
subb
push
sub
mov
rcll
mov
jb
cmp
xchg
sbbb
out
fs
inc
outsb
jle
mov
cli
ja
cltd
dec
pop
dec
cmpsl
dec
lcall
pop
je
mov
inc
jns
xchg
pushf
add
test
mov
mov
pop
test
cmp
mov
adc
xor
xchg
aad
or
add
mov
cmpsb
xlat
mov
inc
into
dec
scas
fs
pusha
jmp
shll
add
inc
imul
nop
xor
mov
leave
jmp
int3
js
imul
jne
add
out
adc
adc
add
mov
jmp
std
leave
nop
cs
shll
arpl
push
imul
outsl
push
mov
dec
push
mov
subb
inc
pop
fstp
mov
sbb
movntq
data16
test
iret
les
aad
adc
mov
test
shlb
push
lahf
andb
inc
fldenv
shlb
xchg
push
jmp
fs
xchg
mov
sbb
jecxz
adc
cwtl
in
rcrb
jb
sbb
push
xchg
add
push
shlb
loopne
ret
decl
mov
daa
jl
jp
lret
xchg
stos
and
rcll
mov
mov
jo
out
je
fsubs
or
xor
xor
lret
mov
adcb
or
sbb
push
pop
push
mov
pop
mov
xor
xor
mov
int3
jnp
mov
pop
cltd
scas
fs
daa
rorb
mov
xchg
add
add
in
pop
nop
fs
mov
ror
xlat
sbb
lods
cmp
aaa
movsb
jp
mov
outsl
mov
in
mov
inc
dec
ss
mov
popa
or
dec
adc
daa
stc
ret
cmp
and
adc
lds
dec
and
cli
pushf
adc
hlt
fdiv
xchg
push
dec
and
jb
in
scas
jp
stc
out
aas
mov
and
fdiv
jp
jl
cmc
lret
xchg
nop
je
shll
xor
xchg
pop
push
hlt
inc
fnstcw
mov
adcl
xchg
das
push
push
cltd
push
js
dec
enter
fmul
xor
cmpsl
mov
cltd
shl
loope
push
daa
mov
pop
or
or
pop
ret
mov
inc
dec
in
push
icebp
loop
and
xchg
add
stos
cltd
fwait
mov
outsb
sub
sub
xor
jne
mov
jo
cmc
or
mov
mov
imul
cmp
jb
and
sbb
jp
xchg
fsubl
add
pop
xchg
xor
xor
mov
jle
hlt
cwtl
pop
adc
cmc
dec
cmp
test
push
std
daa
mov
mov
jle
scas
mov
or
mov
mov
cmp
lea
lret
rorb
rcr
addl
mov
inc
mov
je
not
add
sti
sbb
stc
or
ds
lock
je
jecxz
cli
test
mull
xchg
stos
mov
test
sbb
test
xchg
push
xchg
fidivrs
sub
inc
mov
outsl
out
mov
jg
jle
into
lods
aaa
out
lds
mov
pop
mov
pop
lds
sub
adc
inc
shlb
jmp
cli
xorb
stc
aas
inc
sbb
ret
leave
shll
xor
push
cmp
ja
mov
or
loop
aad
push
aad
in
cmpsb
mov
fs
sub
sbb
xor
movsl
les
pop
dec
push
dec
stc
inc
int
inc
cmpsl
push
shlb
fists
push
add
lret
pusha
nop
nop
jns
dec
cld
jns
das
mov
insb
loope
xor
std
insb
lahf
out
cli
add
gs
xchg
divb
addr16
notl
add
jb
cmp
xchg
mov
cwtl
adcb
push
out
xchg
cmp
bound
or
jmp
mov
jg
fsubr
stc
jmp
cmp
in
clc
movsb
stc
push
rol
inc
push
or
xchg
out
and
cmpsb
fwait
das
or
fists
adc
adc
popf
test
mov
rol
mov
cmp
hlt
std
push
sub
mov
ficomps
dec
add
jmp
icebp
movsl
pop
dec
aam
idivb
pop
in
pop
aam
push
cld
sub
pop
add
sbb
sbb
mov
cmpsb
mov
adc
xor
clc
in
xor
lret
es
lods
psubq
stc
in
jmp
push
fdivrl
test
setle
cld
adc
mov
shll
jle
and
mov
or
lods
xchg
test
jo
out
sub
out
aam
pop
mov
lock
and
push
add
lea
mov
jns
cmp
movsl
filds
ljmp
aas
lret
icebp
dec
cmp
xchg
adc
stos
mov
add
mov
sahf
cli
pusha
out
jbe
jnp
adcb
jle
dec
leave
mov
or
ficoml
mov
mov
clc
xor
jmp
stc
jnp
cmc
lret
jbe
inc
shlb
es
xchg
sarb
mov
mov
mov
cmp
adc
scas
jecxz
add
push
je
xor
cmpl
lahf
sbb
daa
inc
cmp
xchg
js
sti
mov
negl
mov
stos
push
filds
fstpl
mov
sbb
xchg
andl
mulb
jle
add
std
xchg
xor
outsl
aaa
loop
xchg
pop
jmp
arpl
repz
or
imul
sbb
inc
add
mov
stos
sub
cltd
es
sub
dec
js
test
gs
mov
call
sub
inc
xchg
cwtl
dec
lods
jmp
arpl
cmp
subb
pop
decb
negl
sub
mov
mov
ja
bound
mov
mov
push
mov
cmp
mov
mov
or
pop
inc
cmp
sti
test
lret
or
pop
sub
addr16
jl
or
push
jo
dec
inc
push
daa
add
sub
fstpl
pop
adc
orl
orb
fcoms
cmpsb
pop
or
scas
adc
mov
inc
sub
jge
push
jno
jae
push
pushf
inc
cmp
pop
mov
fs
push
fiadds
lret
loop
fiadds
insl
pop
jno
dec
or
jg
mov
insl
sub
nop
jp
xchg
inc
mov
pop
ret
push
cmp
xor
fiaddl
vpacksswb
mov
js
mov
sbb
rol
movsb
xchg
jmp
pop
sbb
stc
xchg
sbb
pop
jg
insb
aas
je
and
pop
push
add
add
xchg
add
inc
bound
pop
shl
mov
fidivrl
or
je
push
das
mov
pusha
adc
outsl
cmp
call
decl
insl
sti
xor
pop
or
sbb
and
iret
int
jae
sbb
cli
jbe
push
mov
divl
push
ja
mov
or
dec
fwait
xor
cld
pusha
mov
shl
clc
mov
out
pop
jle
fs
cli
sti
loop
cmp
pop
dec
or
movsl
mov
cmp
leave
shll
dec
adc
test
out
lret
sbb
cmp
inc
mov
xchg
mov
pusha
mov
xor
popa
into
shlb
push
in
cmc
push
sbb
dec
cmp
xor
roll
sbb
pop
fdivrs
ds
add
clc
js
jp
pop
pop
cmc
jmp
xlat
pop
aas
lock
pusha
xchg
mov
and
adc
sbb
lea
mov
mov
xchg
push
xchg
cld
pop
jo
das
aas
aaa
cmp
scas
dec
xor
push
mov
push
shlb
mov
movsl
shlb
repnz
and
pop
and
in
filds
icebp
or
jae
js
add
pop
in
dec
jo
repz
repz
lret
cli
out
and
push
lods
pusha
mov
clc
cs
sbb
das
out
test
adc
jno
mov
inc
movsl
and
in
jo
lcall
pop
xlat
pop
lahf
cld
shll
cmp
outsb
sub
add
pop
lea
imul
shlb
jo
sbb
and
dec
daa
out
or
out
pop
add
mov
mov
movsl
adc
add
pop
push
ss
icebp
icebp
mov
ljmp
push
sub
xchg
std
mov
enter
pop
movsb
cmp
adc
push
mov
stos
inc
int
popa
jnp
in
jle
int3
mov
imul
push
jmp
xchg
popa
lcall
lret
push
sti
fcompl
mov
ss
fimuls
mov
fsubr
pop
out
ss
add
add
dec
push
popf
pop
cmpsl
and
addr16
mov
xor
mov
sub
mov
xchg
insl
pop
popf
dec
cli
xchg
mov
cmpsl
cli
insl
leave
subl
vprotb
dec
inc
pop
test
xchg
lea
pop
mov
and
into
lret
dec
pushf
out
dec
lea
push
jle
dec
or
jae
cmc
jae
arpl
sbb
jb
enter
jl
push
xorb
jmp
inc
shlb
ss
mov
xlat
or
jge,pt
xchg
and
cli
cli
sub
inc
andb
in
dec
pop
insl
gs
fisubl
xor
int3
daa
pop
enter
test
sub
inc
add
int3
fs
cli
xlat
cmp
mov
xor
pop
hlt
cltd
popa
loop
cmpsb
rcll
mov
cmp
adc
gs
dec
mov
jae
bound
imul
jl
mov
mov
cmp
mov
add
and
or
sar
imul
mov
ja
lock
sbb
repz
adc
xchg
dec
adc
cltd
out
pop
mov
xchg
push
sbb
clc
or
inc
outsb
inc
popf
xchg
inc
mov
pop
dec
pop
jo
inc
adc
fstps
cmp
and
or
out
add
cli
or
fldenv
in
pop
jg
fs
out
cmpsl
rol
pop
in
aad
dec
mov
mov
fistl
pop
sub
push
ret
mov
mov
stc
mov
into
fisubl
push
scas
xchg
jbe
push
movl
dec
and
scas
mov
pop
dec
dec
cltd
js
cli
ret
out
fsubl
mov
cmpsl
fdivrs
mull
loope,pn
notl
xor
fdivrl
add
push
push
clc
xchg
inc
pop
mov
mov
adc
insb
lods
das
add
test
xor
sbb
leave
jae
clc
dec
sbb
xchg
push
cmp
or
test
cmp
lcall
and
je
push
sbb
xor
repnz
sub
or
push
or
sbb
or
cli
in
cs
daa
jae
aas
out
and
push
ljmp
mov
cltd
or
jo
sbb
mov
dec
and
dec
sbb
ljmp
jg
mov
icebp
sub
mov
inc
mov
sub
pop
imul
xchg
dec
fdivs
jno
mov
mov
xchg
insl
outsb
jno
mov
aam
fcomps
jp
mov
in
inc
cmpsb
testl
ret
push
cmp
out
hlt
pop
rcr
cmpl
sahf
ljmp
out
or
sbb
mov
lret
xor
inc
mov
icebp
sbb
in
inc
insb
xor
addr16
mov
add
repz
lahf
mov
jae
cmovs
cmp
decb
pop
cli
leave
les
ret
and
fcmovb
sahf
add
inc
lahf
dec
mov
mov
mov
sbb
aam
arpl
outsl
mov
add
sub
cwtl
bound
dec
rcrb
inc
adc
popf
push
adc
xor
push
push
mov
fcoms
xor
inc
inc
ljmp
in
mov
call
cltd
lret
cmpsb
xchg
sub
fnstsw
ds
out
fcoms
cli
cmp
loop
mov
orb
jmp
sub
test
scas
out
cmc
cld
or
pop
dec
scas
in
dec
adc
ss
pop
fisubrs
push
and
mov
lcall
mov
mov
popf
or
sub
fldcw
inc
mov
cmp
sub
dec
and
cmp
les
sub
sbb
ja
stc
push
int3
cmc
adc
daa
dec
cmp
fcmovnbe
dec
jo
scas
cld
aad
push
test
in
lret
push
push
js
or
jmp
aaa
cmp
stos
push
push
cmp
ljmp
cmp
std
dec
and
mov
pushf
aas
in
test
jns
inc
dec
adc
push
push
sbb
insb
pop
es
mov
inc
add
outsb
or
sbb
shrb
mov
test
ja
fnstcw
lock
push
push
scas
push
les
jge
loopne
ja
and
sub
xchg
inc
add
inc
mov
xchg
mov
cld
divb
jnp
fldt
mov
loope
xchg
cmp
xchg
sahf
stos
mov
popf
out
out
lret
mov
sub
sti
add
cltd
and
mov
mov
mov
mov
cmc
inc
pushf
out
shl
lahf
pop
pop
shll
lret
inc
adc
mov
out
xchg
fnstsw
xor
jge
popa
dec
out
jle
fsubs
jno
sub
into
xchg
loope
mov
aad
sbb
stos
js
xchg
lret
mov
xchg
adc
pusha
lock
loopne
xchg
es
inc
rcll
sub
inc
jnp
fsubl
push
sub
test
inc
arpl
xor
lcall
fucomip
cltd
adc
add
fdivr
aas
aaa
sub
push
decl
mov
scas
sbb
lock
shll
ja
ljmp
sbb
sahf
jmp
mov
lods
lret
xchg
dec
ss
mov
fwait
fwait
mov
or
xorb
lret
and
mov
sahf
je
insb
and
pop
fwait
adc
shr
insb
xlat
mov
add
or
lods
lock
xchg
or
push
inc
les
lret
adc
push
inc
mov
cmpsl
out
cmp
jae
adc
mov
mov
pop
jg
adc
push
lock
add
adc
stc
mov
push
inc
cwtl
daa
cmpsl
xor
out
sub
pop
lods
ljmp
mov
xchg
adc
fld
insl
loop
sub
and
in
xchg
mov
xchg
push
jae
xor
fisttpll
fidivrl
cltd
lods
xor
adc
dec
inc
outsl
daa
add
shlb
gs
jns
dec
shrl
hlt
hlt
push
cmc
fwait
scas
cmp
loop
push
sub
push
jmp
xchg
or
cs
in
daa
rorb
mov
fbld
sahf
dec
sbb
mov
sub
jnp
xor
les
sub
dec
sbb
mov
cmpsb
mov
and
ja
mov
rcrl
movl
rcll
stos
cltd
int3
jp
jge
data16
cmc
cmp
pushf
rcll
push
ret
ret
sub
repz
pop
adc
cld
jg
rorl
andl
rcrl
push
test
or
push
sbb
daa
jbe
push
sbb
jmp
mov
sub
cld
into
add
cmp
rcrb
xor
pop
mov
int
push
xor
and
mov
shrl
ja
pop
rorl
lds
rcrb
cmpsb
sub
xchg
popf
push
pusha
pop
test
xchg
aaa
jno
pop
add
das
mov
add
push
movsb
jbe
je
ss
lcall
pop
rcrb
rolb
popa
jge
mov
pop
mov
jg
mov
out
fs
cwtl
popa
stos
mov
dec
mov
pop
nop
movsl
pop
std
andl
into
pop
jne
ret
fisubrs
cltd
dec
loope
cmp
dec
mov
pop
out
adc
scas
fdivr
popa
xchg
or
push
push
sbb
imul
addr16
les
cmp
call
xchg
fsts
cmp
repnz
aam
pop
dec
jb
enter
inc
sub
mov
lods
jge
mov
out
pop
cmp
loopne
mov
ret
pop
lret
jg
xchg
imul
xchg
sub
mov
fnsave
insl
mov
pop
xchg
xlat
ss
mov
outsl
mov
sub
mov
leave
test
lods
loopne
xchg
xchg
aas
add
adc
insl
fisttpll
or
fisttpll
xor
loopne
cmp
pop
stc
adc
pop
pop
mov
push
lahf
stos
xor
shlb
loopne
dec
xchg
xchg
out
ljmp
jp
jle
jl
dec
pop
icebp
stc
and
subl
cwtl
lret
in
or
sub
cmp
outsb
in
fstps
pusha
push
add
or
dec
fnsave
hlt
rol
movsl
lea
dec
dec
int
sub
sahf
mov
adc
dec
inc
call
bound
lahf
js
dec
or
rorl
outsb
shll
sub
out
arpl
sub
fisubl
mov
dec
mov
add
test
insb
leave
pusha
sbb
sub
jne
fnsave
cli
xor
test
sub
insl
xor
and
gs
xlat
lahf
xchg
ss
lret
sub
imul
dec
std
imul
push
call
pop
dec
and
mov
rorl
mov
test
or
lods
scas
adc
push
bound
pop
cmpl
and
mov
test
daa
and
cmp
dec
jmp
cltd
out
add
mov
shl
inc
mov
or
scas
push
mov
in
xchg
pop
xchg
mov
or
rcrl
mov
xchg
jp
inc
or
and
into
mov
lret
rolb
bound
dec
sbb
pop
inc
out
jle
lmsw
pop
insl
sub
mov
test
call
lret
mov
paddb
xor
mov
sbb
in
test
mov
fucomi
out
xchg
jmp
mov
mov
lahf
test
outsb
je
imul
ret
add
scas
sbb
ja
mov
movsb
mov
sbb
sbb
and
call
xchg
test
sub
dec
xchg
mov
in
out
push
add
loop
dec
mov
mov
jno
repnz
jne
lret
jp
rcr
or
std
jmp
dec
shll
xchg
into
mov
push
jecxz
mov
sahf
orb
push
aad
push
icebp
jl
mov
mov
fists
into
faddl
jg
in
imul
outsb
jge
add
ds
and
sbb
xchg
adc
lret
fisttpl
jge
bnd
insl
cmc
fldl
insl
and
push
mov
sbb
push
jmp
mov
push
xchg
dec
push
incl
jl
lret
test
out
pushf
cmc
jp
into
cmp
movsl
test
cmp
sbb
push
xchg
pop
xor
cmp
cwtl
insb
mov
stos
insl
xchg
inc
ljmp
sbb
or
cmp
xor
or
cmp
data16
xchg
leave
push
ret
fimuls
ds
xchg
mov
mov
mov
or
lcall
push
mov
push
xor
sahf
sbb
stos
jp
lret
lahf
iret
push
mov
imul
or
packssdw
je
lods
sahf
xchg
inc
std
aaa
mov
fstp
or
lds
data16
inc
loope
inc
call
ljmp
xchg
and
mov
sub
std
and
sub
daa
mov
add
roll
sti
cld
push
or
lea
test
and
aas
stos
add
mov
dec
lods
sub
cmc
scas
es
jnp
mov
js
sbb
lret
in
movsl
inc
jno
mov
sti
mov
jecxz
mov
xor
inc
xchg
je
loop
daa
xchg
inc
cmpb
cmpsl
insb
dec
push
pop
add
xor
xor
cmp
scas
lret
xor
stc
faddl
and
cltd
and
push
mov
aad
jp
loop
fnstcw
mov
pop
ds
js
scas
lea
cmp
and
movsb
push
xchg
in
dec
mov
ljmp
iret
mov
fidivl
add
aad
pop
into
in
cmp
xor
js
xchg
fisttps
fdivrl
sub
dec
or
xchg
les
repnz
mov
xchg
pop
pop
dec
into
nop
aad
cmpl
push
mov
and
cmp
adc
enter
enter
fstpt
lods
and
imul
cmp
cmp
jne
lretw
dec
cmp
cmpsl
jno
jl
xor
xchg
scas
sbb
lret
filds
cmp
andl
jecxz
jmp
incb
lahf
xor
or
adc
mov
cmp
add
out
or
lock
cmp
in
xchg
repz
mov
cmpsb
sub
cld
pushf
jg
lods
repz
int
cmp
movsl
mov
test
mov
subl
push
rcll
mov
jle
inc
lods
mov
out
lret
mov
inc
sarb
dec
ljmp
inc
jecxz
out
and
nop
cmp
mov
inc
ss
out
sbb
push
cwtl
ret
xlat
jo
sub
or
jle
push
int3
lcall
jne
dec
sbb
jns
add
out
mov
fiaddl
test
xchg
lods
pushf
lcall
lret
dec
inc
pushf
sub
jno
pushf
repz
shrb
and
mov
or
enter
add
add
push
jl
or
dec
pop
push
test
ja
sbb
shrl
mov
and
ror
or
enter
mov
xor
mov
dec
xorl
insl
cmpsb
push
in
mov
pop
mov
lret
sbb
mov
popa
sub
push
dec
sbbl
aaa
sbb
dec
cmc
cmp
and
add
dec
sbb
loope
inc
test
add
lret
psllq
enter
nop
fcomps
xchg
push
and
rorb
fcomps
outsl
add
jae
or
xchg
xor
pop
sahf
jno
and
cmp
pop
outsb
adc
lcall
insl
in
in
sub
fisubs
jb
cmp
insl
pop
mov
movsl
jne
scas
inc
jmp
loopne
inc
jl
mov
aaa
xchg
inc
sub
pop
pusha
or
ds
xchg
bound
movsb
lret
jecxz
stos
out
shlb
punpckhwd
jle
lahf
pushl
les
jno
xchg
daa
add
mov
clc
in
movsl
xchg
lahf
cs
test
jle
xchg
jp
lcall
push
daa
and
leave
dec
dec
push
lods
mov
mov
pop
xorb
pop
pushf
imul
mov
decb
mov
fldt
ret
arpl
cmp
daa
jecxz
mov
imulb
jle
sub
xchg
sbb
pop
nop
mov
mov
mov
adcl
mov
mov
lods
pop
out
xlat
nop
push
mov
loopne
repnz
mov
push
cmp
xchg
push
jp
je
push
jne
sbb
aam
test
es
pop
jle
sbb
lret
mov
imul
adc
pop
outsb
lods
sbb
inc
push
mov
add
push
hlt
arpl
imul
push
push
dec
add
inc
sub
xlat
repz
lret
or
mov
movsb
jns
pop
mov
jle
les
out
out
jne
mov
cld
mov
sti
dec
adc
cmp
leave
xchg
jns
mov
lea
repnz
rcll
pop
mov
shr
fimull
and
pop
xchg
outsl
xchg
cmp
ss
stc
push
push
pop
pop
dec
xchg
push
jg
out
adc
bnd
outsl
imul
inc
mov
test
inc
cmp
pop
flds
idivb
or
adc
adc
dec
out
jp
cmp
pushf
into
jb
xchg
movsl
ss
dec
add
xor
dec
mov
or
cmpb
and
imul
inc
mov
iret
adc
adc
dec
push
push
fs
test
inc
subb
imul
add
cmp
js
js
dec
mov
psadbw
jp
push
rcrl
jge
jp
sub
xorb
push
ja
insl
or
aad
ret
sub
jle
inc
inc
daa
icebp
xor
dec
sbbb
mov
sbb
or
inc
sub
leave
xchg
add
dec
push
mov
mov
ss
mov
mov
push
push
dec
adc
or
jae
aaa
sti
mov
hlt
inc
adc
test
push
sbb
adc
push
mov
jns
jnp
pushf
loopne
mov
jmp
cmc
rorl
jne
mov
pop
mov
lahf
xor
outsl
js
jae
enter
mov
lcall
cmpsl
out
jg
scas
pop
fcmovne
out
fdivrs
shll
insb
sbb
divb
inc
xchg
add
jle
mov
loope
and
je
inc
xchg
je
cmpsl
jns
ljmp
jno
scas
out
and
inc
cmp
cmp
cltd
loop
mov
adc
push
rorl
inc
jbe
test
icebp
cmpsl
lds
cmp
imul
pop
in
js
testl
push
leave
push
fcomi
pop
mov
adcl
inc
xchg
sbb
not
adc
shl
mov
leave
push
sahf
adc
and
leave
mov
dec
mov
repz
fucomi
jle
push
imulb
int3
test
mov
and
mov
xchg
dec
add
add
sub
inc
inc
movsl
popa
jne
addr16
outsl
cs
jno
push
imul
inc
pushf
inc
mov
arpl
and
and
cltd
stos
cmp
pop
cmp
add
int
sbb
xor
and
inc
cmp
add
ret
pop
arpl
mov
cwtl
adc
cmpl
cltd
loop,pn
lods
jg
xor
pop
inc
xor
mov
pop
jl
aas
inc
mov
sub
mov
loop
in
lods
flds
pop
movsb
or
popf
loope
xchg
mov
ficomps
push
stos
dec
loop
mov
test
xchg
sbb
adc
mov
jmp
cld
push
lahf
lahf
inc
sub
cmp
xchg
sbb
xor
inc
hlt
push
mov
out
jle
cmp
sub
adcb
adc
cmp
push
mov
xor
aam
jge
sbb
jns
sti
sub
fistpl
test
ja
sub
pop
push
ds
jno
mov
push
out
cmp
jnp
mov
pop
or
dec
sbb
test
mov
inc
aam
sub
xchg
test
cmp
outsb
mov
lahf
aas
cld
jp
adc
popa
fbstp
neg
gs
cmc
lret
xor
mov
leave
mov
jmp
pop
sbb
xchg
xor
jns
fmull
test
jnp
scas
push
jns
and
in
xchg
cmp
in
call
add
outsb
outsb
jne
adc
and
in
jle
shrb
dec
xchg
add
cld
mov
pop
shrl
mov
daa
cmp
std
sbb
cmpsl
push
xor
mov
push
push
pop
push
xor
jg
repz
stos
out
mov
shlb
sub
jne
xor
mov
dec
int
mov
mov
lea
dec
cmpsb
mov
popa
pusha
mov
dec
fcom
sbb
mov
jnp
iret
lods
sub
xchg
icebp
jns
loope
add
pushf
push
in
sub
dec
addr16
lods
loopne
or
mov
subb
in
add
in
mov
popa
hlt
popf
aam
push
fidivrl
jns
mov
xor
clc
pop
ja
in
mov
stos
lea
jmp
test
sub
leave
fs
jmp
insl
mov
lods
sbb
mov
call
arpl
push
push
push
jl
pop
cmpsl
sbb
int3
aaa
pop
stos
mulb
fstpt
push
arpl
imul
imul
popf
cmpl
fcmovbe
push
add
pop
push
xchg
add
xlat
add
and
lea
or
scas
xor
stos
cmpsl
adc
inc
sub
scas
stos
cmpsb
push
push
mov
popf
fnstenv
or
xor
inc
gs
mov
gs
in
mov
mov
pusha
xchg
xchg
lds
jne
out
int3
sub
push
dec
fistpl
push
jbe
xorb
or
lcall
cmp
das
inc
add
cmp
and
mov
ljmp
subb
lcall
loopne
add
mov
push
mov
mov
nop
sbb
aas
imul
enter
add
pop
add
ret
aaa
mov
push
pusha
cltd
out
ljmp
inc
pushf
cmp
cmp
mov
jo
or
sub
mov
sbb
testb
hlt
xchg
adc
xchg
mov
xlat
sti
sbb
inc
sbb
cmc
add
fnstsw
pop
jmp
pop
fs
pop
sub
or
sub
scas
jp
sbb
adc
mov
mov
movb
je
decl
ret
xor
xor
xor
int3
std
fwait
adc
ror
ds
loop
int
andl
cld
dec
and
scas
push
aaa
jae
xchg
pop
or
in
add
pushl
inc
sub
int3
adc
iret
rcl
jp
popa
popf
leave
xor
push
xor
sbb
cmp
cmp
xor
xchg
jg
out
aaa
ror
mov
aad
imul
adc
ret
addr16
xchg
std
xchg
mov
xor
mov
cmp
pop
mov
rcrl
dec
jnp
stos
gs
pop
in
ljmp
mov
xchg
nop
shlb
xchg
add
inc
fwait
jge
sub
loope
sub
jle
xchg
add
xchg
adc
stos
int3
ficompl
and
sbb
movsb
mov
mov
mov
into
ja
fistpll
xchg
ss
xor
xchg
and
dec
shlb
fstpl
loopne
mov
jge
inc
fs
scas
inc
addr16
out
xchg
jne
dec
cltd
push
insl
cwtl
mov
js
orb
dec
jl
test
mov
mov
mov
imul
movsb
lods
xor
sbb
jle
pushf
pop
cld
inc
xor
inc
mov
cmpsb
pop
icebp
int
out
pushf
adc
dec
lret
cltd
shll
incl
mov
mov
mov
jp
pop
loopne
lods
js
ret
jg
xchg
and
pop
push
aam
mov
cmpsl
xchg
push
push
ljmp
js
xchg
jae
sub
int3
mov
stos
and
cltd
sbb
pop
cmpsl
pop
out
leave
add
arpl
jne
xchg
aam
sbb
stos
sub
pop
dec
dec
test
fcom
incb
or
imulb
add
cmpsb
cmp
jo
inc
shl
in
lcall
inc
orl
aas
adc
stc
fmull
fildl
enter
fisubl
aam
rcll
movsl
mov
repnz
push
icebp
jno
fmull
jle
rcr
ss
lea
aaa
fisttps
jb
outsl
cpuid
scas
add
int3
pop
imul
lcall
arpl
inc
xchg
mov
je
push
lea
pushf
jecxz
subl
dec
out
dec
call
mov
push
nop
push
xchg
jo
andb
insb
push
lods
sbb
fstl
xchg
filds
adc
cltd
xor
mull
mov
int3
iret
sbb
add
std
filds
sbb
or
aam
dec
xchg
lret
sbb
popa
dec
xor
mov
loop
adc
inc
ret
cmpb
mov
push
lods
push
sbb
sub
fstl
fisubrs
popf
cwtl
fcmovnb
sub
cmpsl
jb
push
adcl
nop
push
mov
cmp
jl
sub
add
cmp
ss
xlat
push
cmp
jb
push
xchg
imul
xchg
dec
flds
adc
mov
sub
mulb
push
daa
sub
test
adc
lea
lock
aad
fwait
sub
sahf
sub
es
mov
ror
out
mov
add
cmpsl
mov
jae
inc
adcl
stos
fnstenv
jns
movsb
insl
jg
cmp
out
scas
js
decl
lahf
adc
addr16
push
and
lret
mov
pop
adc
insl
push
sub
repnz
xor
enter
mov
xor
cwtl
xchg
pop
and
xchg
mov
xchg
xchg
and
lcall
in
ja
leave
xchg
add
cld
mov
push
ret
clc
push
sbb
dec
mov
adc
scas
cld
mov
mov
jbe
mov
mov
stc
xchg
popa
pop
add
andl
sub
mov
mov
xor
pop
test
cmp
hlt
nop
jecxz
scas
add
mov
add
test
jno
xor
sbb
addr16
lods
push
out
fwait
iret
ljmp
pop
popf
jne
add
or
loope
xchg
mov
dec
lret
adc
cli
aad
movsl
pop
aam
rcrb
push
or
mov
sbb
ret
xchg
mov
jmp
pop
ret
aad
stc
mov
subb
jb
cmp
arpl
jbe,pn
xchg
mov
adc
pop
push
js
std
repz
and
pusha
xchg
push
adc
sahf
xchg
sahf
dec
pusha
cmp
ljmp
mov
push
jb
hlt
stos
sub
imul
lret
repz
nop
je
loope
aaa
lcall
pusha
xor
jae
mov
les
stos
mov
cs
pop
lcall
jb
mov
lret
das
or
dec
push
hlt
es
ja
mov
nop
into
jb
cmpsl
lea
inc
xor
pop
dec
pop
xor
rclb
out
sbb
mov
aas
aam
adc
daa
jg
out
in
jp
je
shrl
pop
shlb
jnp
or
add
daa
mov
mov
xchg
sub
xor
imul
mov
stos
sbb
mov
mov
addr16
arpl
push
jmp
pop
or
inc
adc
add
imul
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
decl
jns
xor
jecxz
add
sub
jnp
outsb
ss
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
xchg
out
test
ret
in
cmpsl
xor
adc
inc
mov
popa
dec
xchg
mov
and
jecxz
and
test
lds
cmp
es
xor
jecxz
add
jb
cmp
psrad
iret
cmp
into
jno
pop
les
rcl
leave
push
std
xor
mov
jecxz
enter
inc
adc
and
nop
and
sbb
loop
xchg
add
push
cmp
out
arpl
dec
pop
clc
push
pop
dec
aam
cmp
test
jecxz
push
popa
cmp
cmp
popa
inc
stos
cmp
add
jnp
ret
xor
aaa
loope
movsl
jno
pop
add
jmp
jecxz
add
and
ret
fisubrs
jecxz
add
clc
jle
outsb
repz
sub
xorb
es
add
sub
ret
xor
jecxz
add
sub
ret
pusha
bound
jecxz
add
sub
ret
xor
ss
add
sub
shll
outsb
es
add
sub
ret
xor
jecxz
add
daa
jmp
jecxz
push
mov
jmp
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
mov
push
inc
jecxz
add
sub
ret
xor
out
add
outsb
stos
icebp
and
jecxz
add
sub
in
inc
sbb
mov
jmp
mov
adc
sub
ret
xor
jecxz
add
sub
and
outsb
ss
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
sub
ret
xor
jecxz
add
add
ret
and
leave
addr16
or
das
mov
xchg
fstpl
lock
sbb
es
imul
fimull
mov
sbb
in
jp
or
test
pop
shr
cmp
cmpsb
scas
fwait
mov
popa
sub
fdiv
xchg
pop
leave
out
ja
pop
pop
pop
in
shl
movsb
aas
lds
inc
jge
cli
movsl
mov
push
mov
hlt
xor
fstpl
insb
mov
daa
push
dec
cs
jo
pop
outsb
jmp
xor
out
sbb
sub
test
inc
mov
cmpsb
lahf
mov
insl
popa
imul
std
pop
int3
sbb
test
mov
push
insb
out
mov
jge
add
pop
int
lcall
pushf
add
xor
jl
icebp
and
dec
cmp
mov
rol
mov
ret
cmpsl
fnstcw
aad
call
imul
fnstsw
test
add
mov
xchg
cmp
jbe
popf
repz
in
pop
mov
xchg
js
sub
lret
in
data16
into
inc
ficompl
xchg
jg
out
icebp
aam
fdivs
mov
dec
hlt
mov
cwtl
sub
push
dec
pop
ds
push
dec
scas
fdivrs
or
pop
popa
imul
mov
rolb
cltd
or
rorb
xlat
mov
stos
dec
mov
push
cmc
inc
sbb
mov
push
xchg
fs
push
pop
push
jle
sub
adc
push
inc
loope
ja
fisubrs
jecxz
sarl
and
lods
movsb
fildl
push
push
jno
in
cmp
or
sahf
add
mov
add
xor
sub
sbb
sarl
jp
xchg
subl
adc
mov
inc
xor
pop
push
mov
fadds
shufps
dec
xchg
dec
jge
cmpsb
out
cmp
imul
or
xchg
lods
sub
mov
mov
jnp
dec
outsb
jno
fs
xlat
mov
inc
sub
pop
lret
cmc
jne
dec
push
std
dec
inc
pop
or
mov
imul
add
push
xor
mov
fdivs
pusha
aas
leave
pop
xor
addr16
enter
fisubs
in
mov
nop
data16
lret
iret
call
cmpsl
aaa
decl
sbb
jns
ja
test
adc
jmp
inc
cmp
test
lea
and
jae
lea
into
mov
rorl
in
call
jae
xchg
push
insb
daa
pop
mov
adc
mov
cltd
xor
rol
xchg
jnp
shlb
xchg
pop
pop
add
enter
popf
jl
mov
pop
out
jp
mov
ret
imull
cmpsb
in
test
pop
dec
dec
in
jne
in
ficoms
call
and
cmp
cmpsb
rclb
ds
scas
push
fisubrs
in
cmpsl
ljmp
dec
insl
mov
adc
or
cs
incl
xchg
test
dec
adc
or
fsub
or
loope
xchg
mov
jae
adc
pop
pop
push
add
aam
addr16
push
test
rolb
loop
std
cltd
adc
cmp
and
ds
push
shlb
pop
mov
fsts
lea
mov
inc
add
jmp
fidivl
loopne
mov
cmp
mov
stc
bound
mov
mov
and
adc
push
inc
xor
or
adc
mov
int
mov
int3
lcall
add
scas
test
xchg
lcall
lret
sbb
in
pop
pop
sub
int3
loopne
mov
add
cmp
mul
popa
cmp
pop
ret
and
or
cltd
scas
adc
add
mov
int3
xchg
aas
pop
lods
add
aam
jne
lret
jle
or
mov
xor
fsubrs
leave
sbb
fnstenv
pusha
jg
inc
pop
stos
lahf
jne
mov
push
std
push
cmp
jmp
btc
sub
xor
gs
cmp
push
or
inc
mov
mov
lret
adc
out
andl
and
mov
cli
lret
and
ljmp
movsb
xchg
out
xor
and
arpl
mov
push
push
rcrb
bound
jbe
rcrl
and
sti
jge
push
or
fbstp
shll
fs
adc
mov
adc
xchg
pop
and
jnp
arpl
mov
into
cmp
sbb
add
or
mov
data16
popa
adc
das
ficoml
dec
fstpt
mov
fsubrs
out
mov
push
inc
push
fisubl
inc
fdivs
mov
arpl
push
mov
fisttpll
push
cmp
js
sbb
sub
mov
aad
idivb
das
loope
mov
ja
movsl
jno
add
lea
dec
mov
mov
mov
hlt
gs
psrld
xchg
pop
aas
pop
pop
shrb
ss
insl
test
cmp
push
ret
scas
inc
sbb
inc
call
enter
sarb
jb
add
push
movsl
lods
xchg
sbb
push
dec
decl
sti
loope
jae
daa
arpl
insl
xacquire
xchg
or
add
test
rcrl
mov
pop
or
shlb
xchg
les
ret
mov
out
dec
addb
jle
cmpsb
nop
leave
mov
loope
or
cmp
cli
sarb
push
push
lea
xchg
jge
or
mov
pop
test
pushf
add
lret
fmul
mov
lock
lahf
lcall
fidivs
imul
dec
push
cmpsb
aas
shl
cmp
xchg
jg
push
xchg
pop
xor
mov
es
sub
hlt
mov
in
outsl
xorl
and
sbb
mov
stc
test
outsb
xchg
mov
or
dec
out
divl
out
cli
stos
ds
adc
lods
out
and
loope
and
and
andl
je
aad
and
or
movsl
mov
shll
nop
cmpsl
inc
mov
pop
and
mov
xor
sti
push
adc
or
jg
push
cld
insb
aam
testb
push
jge
sbb
imul
lret
fimull
sahf
fs
push
xchg
mov
in
movl
sti
dec
notl
mov
fwait
mov
shrb
cs
add
ss
push
fistps
inc
adc
popf
mov
cltd
jb
or
mov
jg
sbb
int3
subb
xchg
int3
sbb
stc
dec
hlt
mov
add
push
mov
out
psubsb
adc
xchg
and
mov
mov
arpl
leave
inc
pop
mov
or
adc
push
les
sti
jg
push
push
cmp
nop
movsb
mov
enter
jecxz
adc
xor
hlt
int3
push
jne
push
push
lods
jl
and
loop
je
movsb
into
pop
in
incl
cmpb
inc
and
pop
xor
pusha
rcrl
ljmp
call
iret
out
xchg
cmp
pusha
pusha
rorl
bound
sub
lods
mov
int
fwait
out
jo
subb
fists
sahf
xor
push
adc
repz
inc
cs
and
out
ss
test
pop
xchg
jecxz
cmc
jne
or
or
push
fistpl
jne
cmp
mov
mov
dec
mov
into
cmc
adc
or
jbe
shlb
mov
bound
mov
arpl
push
mov
and
stos
rol
inc
xor
jle
jnp
sbb
movsl
ss
mov
adc
jb
mov
sub
mov
aad
inc
fstpl
push
call
test
inc
les
or
mov
push
dec
lahf
xor
insb
cmpsb
and
and
pop
sbb
sub
add
fistl
stos
out
imul
cwtl
mov
jbe
dec
je
cwtl
aam
dec
test
inc
dec
cltd
add
mov
push
rcrl
aaa
xchg
pop
mov
fsubrs
out
cmpsb
push
xor
mov
sbb
push
push
rcl
faddl
enter
int3
or
pop
in
sub
outsb
and
push
jns
rcrl
push
incb
adc
leave
sbb
lret
insb
jmp
mov
mov
inc
sti
mov
ja
lahf
mov
cmpsb
call
mov
outsl
fs
pop
sub
leave
fnstenv
mov
jne
push
sub
ret
xor
insb
inc
lods
stos
push
movsb
lret
jnp
mov
cmp
or
mov
into
pop
inc
xorl
xchg
jae
adc
fildll
lcall
mov
movsb
imul
xchg
jge
out
test
adc
mov
add
sbb
jbe
shl
jbe
insl
rorl
cmp
sub
stc
push
jmp
mov
xchg
in
shr
xor
xor
idivl
jb
cmc
test
loope
pop
or
sub
or
enter
imul
jl
in
data16
cmpsl
jnp
es
dec
push
int3
jg
or
mov
xor
icebp
daa
and
pusha
ljmp
cmp
and
nop
dec
dec
pop
xor
cmpsl
cmp
into
sbb
mov
sub
inc
insl
ds
and
scas
add
inc
lea
pop
xchg
insl
outsb
lods
jo
or
outsb
xor
insb
or
cli
push
cli
mov
cmc
sub
xchg
xor
jp
std
dec
jl
mov
add
sub
je
push
into
dec
xchg
mov
imul
sti
dec
push
lock
jp
and
addb
cmc
cmpsl
mov
insb
and
xchg
push
mov
jns
ret
mov
addr16
mov
testl
mov
js
cmp
jge
comiss
cmp
sahf
mov
andb
loope
xorb
jge
fsubl
fsubr
and
fldt
ss
xor
pop
cwtl
mulps
mov
xor
xchg
or
inc
in
fisubl
int3
pop
cld
aam
push
mov
xchg
cmp
sbb
mov
add
ror
scas
das
mov
fildll
xorl
or
or
push
mov
stc
shll
mov
mov
sbb
and
adc
jge
in
and
bound
jo
hlt
cli
pop
push
and
mov
jmp
pop
out
pusha
push
xchg
pushf
mov
mov
jge
cmp
ret
icebp
sahf
dec
aas
dec
and
jae
cmp
aaa
or
in
sbb
cmc
mov
sti
sarb
push
lahf
loopne
mov
pop
subl
fs
loop
sub
scas
cmp
imul
xor
ret
sbb
cli
mov
dec
fmul
repz
jge
xchg
mov
jp
dec
ret
inc
mov
mov
bound
dec
out
btc
testl
stos
cwtl
pop
dec
jne
xor
or
push
pop
mov
mov
jge
and
cmp
sub
jp
sbb
das
cli
outsb
xor
push
lahf
push
mov
sarl
cmp
enter
sub
imul
mov
cld
repnz
mov
or
lds
mov
outsb
mov
and
adc
mov
outsb
out
push
mov
mov
mov
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
