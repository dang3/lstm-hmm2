adc
pop
inc
outsl
jno
gs
outsb
add
add
add
adc
insb
jae
pop
push
jb
lea
adc
add
push
add
add
add
adc
or
insb
insb
imul
incl
adc
or
dec
outsb
je
or
add
add
mov
jo
inc
add
add
jns
add
add
add
nop
adc
add
outsl
imul
add
adc
or
imul
add
incl
call
or
push
je
imul
or
push
imul
outsb
addr16
or
pop
push
popa
jb
popa
outsb
je
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
aaa
xor
cmp
inc
add
xor
xor
inc
add
inc
add
das
inc
add
push
dec
bound
arpl
inc
add
push
dec
bound
arpl
and
inc
add
add
add
jns
je
insl
add
push
adc
or
imul
outsb
add
add
add
add
add
rolb
inc
push
jle
jae
gs
add
push
adc
wbinvd
dec
inc
js
jo
je
push
add
add
add
add
add
push
jns
push
insl
add
lea
mov
jmp
addl
push
dec
dec
add
addl
jmp
int3
ror
test
adc
add
add
add
add
add
add
lret
add
add
add
add
adc
add
add
add
add
mov
sbb
aaa
xorb
add
add
xor
add
add
add
addb
add
add
adcb
add
adc
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
or
add
add
add
add
sub
or
nop
in
add
add
add
add
add
add
cwtl
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
wrmsr
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
mov
add
cmp
jo
sldt
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
or
add
add
in
add
ja
add
sldt
add
add
add
add
add
add
add
and
or
add
jle
test
add
incl
fwait
add
add
pushf
jge
popa
incl
pop
jmp
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jge
lcall
xchg
jge
xchg
call
pop
jge
xchg
pop
pop
jge
pop
jge
jge
call
xchg
xchg
call
pop
pop
jge
pop
pop
jb
lcall
mov
jl
xchg
incl
add
add
jp
push
jg
push
jo
jl
lcall
cmp
push
test
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
push
dec
ljmp
dec
dec
push
decl
cmp
push
cmp
cmp
incl
dec
dec
push
dec
push
push
incl
addb
fs
dec
ljmp
dec
inc
aas
aaa
incl
dec
lcall
jo
call
push
add
pop
add
inc
push
jbe
dec
incl
imul
inc
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
ljmp
imul
inc
inc
call
inc
inc
push
inc
incl
imul
push
imul
imul
ljmp
push
push
imul
push
inc
push
imul
imul
ljmp
decl
fs
cmp
inc
push
xor
add
cmp
jmp
pushl
jo
mov
inc
inc
cmp
cmp
pop
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
inc
cmp
cmp
push
push
cmp
call
push
cmp
cmp
incl
cmp
cmp
incl
call
call
inc
push
cmp
inc
cmp
cmp
push
dec
cmp
incl
incl
ss
incl
xor
inc
add
inc
lcall
imul
jns
xchg
incl
cmp
dec
xor
push
xor
ss
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
inc
xor
xor
pushl
xor
ss
xor
inc
pushl
inc
inc
incl
incl
xor
xor
das
inc
inc
dec
inc
cmp
cmp
lcall
incl
dec
push
js
dec
aaa
xor
incl
inc
call
data16
cmp
xor
cmp
xor
cmp
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
cmp
xor
cmp
xor
cmp
das
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
das
xor
ljmp
xor
pushl
cmp
decl
xor
inc
cmp
js
push
push
add
dec
call
jg
ds
inc
call
aaa
cs
cs
pushl
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cmp
xor
ljmp
cmp
lcall
push
lcall
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cs
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
xor
ljmp
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cmp
ljmp
cmp
cmp
sub
cmp
sub
cmp
cs
cs
cmp
cs
cmp
cmp
cmp
cs
ljmp
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
pushl
cs
sub
sub
ljmp
sub
xor
sub
xor
sub
sub
sub
xor
xor
xor
ljmp
sub
ljmp
sub
sub
sub
sub
xor
xor
sub
xor
sub
sub
sub
sub
pushl
cmp
cmp
sub
cs
ljmp
xor
cmp
aaa
cmp
aaa
aaa
cmp
sub
xor
cmp
sub
pushl
sub
ljmp
sub
sub
sub
sub
ss
ljmp
xor
ljmp
pushl
sub
sub
sub
sub
sub
xor
xor
xor
ljmp
sub
ljmp
sub
sub
sub
sub
xor
xor
sub
xor
sub
sub
sub
xor
xor
xor
ljmp
sub
ljmp
sub
sub
sub
sub
xor
xor
sub
xor
sub
sub
sub
xor
xor
xor
ljmp
sub
ljmp
sub
sub
sub
sub
xor
xor
sub
xor
sub
sub
sub
xor
xor
xor
ljmp
sub
ljmp
sub
sub
sub
sub
xor
xor
sub
xor
sub
sub
sub
xor
xor
xor
ljmp
sub
ljmp
sub
sub
sub
sub
xor
xor
sub
cmp
sub
xor
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
cmp
lcall
pop
call
dec
call
dec
push
dec
decl
pop
call
pop
lcall
push
lcall
push
push
pop
dec
dec
push
push
dec
push
pop
push
dec
lcall
dec
lcall
lcall
pop
call
dec
call
dec
dec
push
dec
decl
pusha
call
pop
lcall
push
lcall
push
push
popa
dec
dec
dec
push
xor
dec
xor
push
dec
cmp
call
lcall
push
ljmp
ljmp
ss
pushl
insl
pop
ljmp
pop
call
insl
lcall
insl
insb
pop
ss
popa
xor
push
dec
xor
decl
inc
decl
xor
inc
dec
inc
incl
pop
decl
push
lcall
push
lcall
push
push
pop
dec
dec
push
push
dec
push
pop
push
dec
lcall
dec
lcall
lcall
pop
call
dec
call
dec
dec
push
dec
decl
pop
call
pop
lcall
push
lcall
push
push
pop
dec
dec
push
push
dec
push
pop
push
dec
lcall
dec
lcall
lcall
pop
call
dec
call
dec
dec
push
dec
decl
pop
call
pop
lcall
push
lcall
push
push
pop
dec
dec
push
push
dec
push
pop
push
dec
lcall
dec
lcall
lcall
pop
call
dec
call
dec
dec
push
dec
decl
pop
call
pop
lcall
push
lcall
push
push
pop
dec
dec
push
push
dec
push
pop
push
dec
lcall
dec
lcall
lcall
pop
call
dec
call
dec
dec
push
dec
decl
pop
call
pop
lcall
push
lcall
push
push
pop
dec
dec
push
push
dec
push
pop
push
dec
lcall
dec
lcall
lcall
pop
call
dec
call
dec
dec
inc
cmp
call
pop
cmp
cs
cmp
sub
aaa
cs
inc
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
decl
insb
imul
jge
imul
imul
jge
mov
decl
imul
imul
imul
imul
mov
decl
mov
jge
outsb
jle
insb
push
jne
jmp
imul
lcall
je
pop
cmp
cmp
jae
aaa
jo
jb
lcall
cmp
lcall
lcall
pop
pushl
aaa
pushl
aaa
aaa
jo
pushl
jo
pushl
pop
lcall
jo
pop
aaa
jo
pop
aaa
aaa
jb
cmp
jae
lcall
cmp
lcall
cmp
jo
pushl
inc
push
outsb
pop
decl
js
ljmp
push
incl
imul
jle
jle
jle
decl
mov
jge
imul
jge
imul
imul
jge
mov
decl
imul
imul
imul
imul
mov
decl
mov
jge
imul
jge
imul
imul
jge
mov
decl
imul
imul
imul
imul
mov
decl
mov
jge
imul
jge
imul
imul
jge
mov
decl
imul
imul
imul
imul
mov
decl
mov
jge
imul
jge
imul
imul
jge
mov
decl
imul
imul
imul
imul
mov
decl
mov
subl
jge
outsl
sub
decl
cmp
call
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
js
jns
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
gs
js
incl
je
call
ljmp
cmp
outsl
jo
outsl
aaa
pushl
outsl
pop
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
xor
inc
gs
cmp
ljmp
jl
imul
insl
pop
push
je
addr16
ja
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
push
xor
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
js
adcl
pushw
outsl
xor
jmp
aas
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
pushl
xor
xor
outsl
pop
pop
pushl
ljmp
imul
js
jne
jge
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
sub
sub
test
js
test
js
addr16
test
incl
test
test
js
addr16
js
push
imul
test
lcall
outsl
call
outsl
outsl
push
xor
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
outsl
pop
pushl
pop
ljmp
pusha
jmp
fs
dec
inc
insb
ja
js
je
jns
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
ds
xor
sub
push
jns
pushl
incl
js
test
js
addr16
js
incl
push
ljmp
dec
pushl
xor
xor
outsl
pop
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
jo
pushl
pop
ljmp
pop
jmp
popaw
pop
inc
cmp
ja
js
jb
pushl
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
jns
pushl
addr16
jmp
test
js
test
incl
js
test
js
cmp
incl
push
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
outsb
xor
ljmp
pop
ljmp
pop
lcall
addr16
pop
inc
cmp
data16
jb
pushl
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
je
sub
cs
incl
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jne
jae
js
xchg
outsl
outsl
aaa
outsl
pop
outsl
aaa
call
xor
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
outsl
pushl
jo
ljmp
pop
jmp
pop
lcall
pop
push
inc
cmp
data16
jb
pushl
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
js
je
test
incl
js
addr16
js
addr16
outsl
ljmp
pop
js
xchg
lcall
outsl
lcall
outsl
outsl
pop
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
outsl
pushl
jo
ljmp
pop
ljmp
pop
lcall
pop
push
inc
cmp
data16
je
pushl
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
incl
fs
jns
addr16
js
incl
test
push
imul
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsb
pop
aaa
aaa
outsb
outsl
aaa
outsl
pop
outsb
lcall
ss
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
outsb
pushl
jno
ljmp
pop
ljmp
lcall
pusha
popa
push
inc
cmp
addr16
jne
jp
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
incl
je
subb
jne
outsl
xchg
incl
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
ljmp
aaa
ljmp
xor
xor
ljmp
push
call
push
push
xor
push
xor
imul
sub
dec
push
sub
call
lcall
push
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
ss
pushl
jno
pushl
pop
pushl
push
jmp
pop
push
dec
jb,pt
addr16
ja
jge
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
cmpb
jl
js
xchg
jbe
imul
outsl
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
push
push
pop
push
aaa
call
lcall
cs
decl
test
xchg
mov
lods
lcall
xchg
lods
mov
cmp
orb
pop
outsl
call
lcall
push
ljmp
xor
insl
push
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
bound
pushl
jo
pushl
pop
js
pop
ljmp
push
outsb
pop
push
inc
jne
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
incl
cs
xor
ljmp
cmp
jns
test
lcall
outsl
call
jno
bound
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
insb
call
outsl
push
jmp
fwait
pushl
push
push
push
out
cld
sti
sti
std
sti
push
cli
jmp
stc
jecxz
insl
jbe
ret
fimull
push
lcall
push
ljmp
xor
push
ss
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
ss
cmp
ss
pushl
pop
jle
pushl
push
jae
pop
dec
ja
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
ds
xchg
js
push
xor
aaa
call
pop
pushl
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
das
ja
pushl
push
push
pop
stc
push
sti
mov
push
stc
push
std
stc
idiv
clc
clc
clc
lock
lock
lock
push
stc
clc
clc
std
sti
cli
div
mov
sti
scas
hlt
pushl
lcall
push
ljmp
xor
push
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
ljmp
aaa
cmp
pushl
pop
push
ljmp
pop
incl
popaw
jbe
pusha
push
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
pop
lcall
jle
outsl
imul
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
pushl
pop
incl
outsl
push
cld
push
dec
sti
jmp
fdivr
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
cld
stc
cmc
clc
icebp
lock
test
mov
push
lcall
push
ljmp
xor
insb
push
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
pushl
ss
dec
pushl
dec
fs
jmp
push
incl
insb
js
fs
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
outsb
mov
incl
push
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
imul
lcall
aaa
pushl
clc
fucomp
push
cli
out
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
sti
clc
repz
clc
lock
mov
in
pushl
pop
lcall
push
ljmp
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
ljmp
aaa
pushl
xor
cmp
call
dec
incl
je
jg
arpl
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
xor
xor
aaa
outsl
pop
outsl
lcall
cmp
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
outsl
lcall
outsl
imul
jp
cli
loopne
aad
incl
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
cli
clc
hlt
clc
lock
xlat
incl
pop
lcall
push
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
decl
pop
call
ljmp
cmp
incl
jle
call
pop
incl
ja
andl
js
js
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
sub
sub
pop
ljmp
push
aaa
jbe
jne
push
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
mov
call
sub
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
idiv
clc
lock
insb
xor
test
push
hlt
call
pop
aaa
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
jo
outsl
aaa
lcall
aaa
lcall
call
pop
decl
call
inc
popa
ja
call
cmp
bound
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
aas
cs
xor
sub
dec
outsl
xor
gs
pushl
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
dec
cmc
out
xor
insl
push
clc
clc
lock
sti
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
cli
cli
clc
repz
outsl
pop
jb
inc
push
mov
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jo
jno
outsl
aaa
lcall
aaa
lcall
ljmp
dec
jmp
aas
decl
push
data16
jmp
test
pushl
jl
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
pop
xor
pushl
pusha
pushl
cmp
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
aaa
sub
outsw
mov
lock
sti
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
call
inc
cld
icebp
jns
aaa
outsl
push
push
inc
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jno
push
pop
jo
lcall
aaa
decl
jnp
dec
pushl
push
jmp
pusha
addr16
jmp
test
pushl
cmp
test
js
test
js
addr16
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
jno
sub
cs
pushl
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsb
imul
lcall
aaa
call
clc
mov
xor
dec
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
lcall
loopne
fdivrs
pushl
int
push
aaa
outsl
pop
outsl
aaa
call
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
xor
pop
jno
lcall
aaa
decl
incl
aas
pusha
pushl
data16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
outsl
outsb
outsl
push
incl
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
insl
lcall
cmp
push
xor
clc
lock
div
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
cld
push
clc
clc
call
push
push
xor
imul
mov
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
jo
aaa
aaa
jno
ds
dec
push
xor
pop
dec
ss
ljmp
incl
pushw
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
ljmp
xor
inc
dec
sub
jo
aaa
outsl
pop
outsl
aaa
call
xor
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
call
outsl
jno
xor
std
push
sar
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
mov
push
ljmp
lcall
outsb
lcall
bound
ss
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
outsl
jo
aaa
aaa
dec
bound
push
inc
aas
decl
xor
jge
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
lcall
jo
pop
aaa
insl
outsl
arpl
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
insl
xor
ljmp
pop
std
jmp
outsb
lcall
cmp
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
cli
lock
push
lock
repnz
sub
cmc
nop
dec
incl
ljmp
pop
aaa
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
incl
outsb
call
jno
pop
xor
js
gs
call
inc
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
pusha
aas
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
mov
ljmp
pop
clc
clc
lock
push
clc
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
fcomip
clc
dec
xor
cmp
ljmp
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
jno
pushl
outsl
pop
ljmp
pop
lcall
inc
incl
imul
addr16
jne
pushl
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
jmp
cmp
insb
cs
xor
pushl
outsl
pop
pushl
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
decl
jmp
aaa
ljmp
sub
lock
mov
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
xchg
decl
lcall
cmp
ljmp
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
popa
xor
aaa
jb
ljmp
pop
pushl
push
lcall
ds
inc
dec
xor
js
js
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
aas
pop
lcall
pusha
ljmp
pushl
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
sub
aaa
outsl
call
lock
clc
clc
stc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
push
loope
lock
clc
lock
fcoml
xor
ljmp
xor
imul
aaa
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
aaa
pushl
push
inc
pushl
pop
incl
pop
ja
pusha
push
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
imul
lcall
aaa
call
clc
fsub
cmp
jmp
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
cmc
stc
jl
incl
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
pushl
ss
cs
outsb
incl
incl
jae
jle
bound
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
inc
ljmp
xor
sub
outsl
pop
jo
jmp
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsb
mov
incl
lcall
ss
clc
clc
lock
cld
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
cld
clc
lock
xor
inc
push
and
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
cmp
aaa
xor
fs
pop
jbe
incl
cmp
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
lcall
outsb
ljmp
xor
dec
xor
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
decl
lcall
outsl
pusha
pop
aaa
aaa
push
icebp
in
pop
cld
inc
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
incl
call
sub
push
dec
mull
aaa
outsl
pop
outsl
aaa
call
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
jae
outsl
aaa
lcall
aaa
lcall
jmp
lcall
xor
addr16
jmp
test
ljmp
jnp
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
xor
ljmp
pop
ljmp
pop
aaa
jo
pop
aaa
xor
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
mov
push
and
clc
push
clc
cld
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
out
lock
out
sti
clc
lcall
pop
decl
pop
insl
dec
sub
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
insl
xor
lcall
aaa
cmp
jg
dec
pushl
jmp
fs
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
incl
cmp
xor
sub
cmp
call
pop
pushl
jae
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
ss
sub
ljmp
pop
call
dec
cli
push
incl
sub
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
cli
lock
push
lock
repnz
push
es
in
push
pop
hlt
lcall
outsl
lcall
insb
outsl
push
aaa
xor
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jae
xor
pop
xor
pop
cmp
cmp
pop
js
js
pushw
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
pop
xor
jno
pop
pushl
cmp
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
and
pushl
push
push
clc
lock
in
mul
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
ljmp
cli
pushl
lock
lcall
outsl
aaa
jmp
push
decl
cmp
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
outsl
outsb
pop
aaa
aaa
cmp
push
jae
inc
cmp
cmp
jg
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
jae
sub
cs
jg
lcall
ljmp
xor
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
jmp
ljmp
xor
repnz
jp
incl
xor
clc
clc
lock
cld
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
push
clc
lock
clc
cli
lock
clc
cmp
push
push
jmp
pop
decl
xor
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
cmp
push
decl
jae
pop
xor
push
ja
js
insl
pop
lcall
dec
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
outsl
xorb
outsb
xor
call
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
ljmp
aaa
lcall
pop
idiv
hlt
pushl
cld
decl
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
inc
clc
icebp
cli
arpl
pushl
pop
lcall
push
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
insl
pushl
jo
ljmp
pop
ljmp
decl
cmp
cmp
je
addr16
js
jg
fs
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
incl
gs
jbe
aaa
outsl
pop
outsl
aaa
jp
pop
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsb
aaa
push
pop
pop
aaa
call
subb
decl
push
ja
lock
clc
std
sti
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
cli
lock
clc
repnz
xor
push
push
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
sub
push
cmp
pushl
pop
incl
push
ja
pop
dec
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
jmp
js
addl
andb
outsl
aaa
outsl
pop
outsl
aaa
lcall
xor
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
xor
insl
aaa
lcall
aaa
incl
push
adc
push
sub
jbe
jmp
lock
stc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
push
cli
clc
clc
pushl
sbb
lock
aaa
outsl
pop
outsb
aaa
call
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
jmp
cmp
jno
xor
push
ljmp
dec
jo
pushl
push
xor
js
test
js
addr16
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
cmpb
lcall
outsl
call
jb
outsb
xor
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
insl
push
sub
push
fs
push
inc
ss
jmp
incl
call
sar
loopne
std
lock
lock
clc
clc
cli
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
arpl
clc
cli
lcall
call
inc
outsb
xor
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
incl
pop
cmp
sub
aas
jno
bound
decl
test
lcall
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
incl
cs
xor
ljmp
pop
jp
xchg
lcall
outsl
lcall
outsl
outsl
pop
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
outsl
lcall
outsl
insb
pop
aaa
aaa
xor
aas
inc
push
sub
push
es
pushl
test
stc
mov
push
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
cli
clc
lock
lock
lock
inc
push
ljmp
arpl
lcall
outsl
lcall
outsb
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jae
push
pop
outsl
aaa
lcall
aaa
incl
pushl
ljmp
inc
call
pop
addr16
jmp
test
pushl
cmp
test
js
test
js
addr16
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
ds
test
ja
push
xor
aaa
decl
pop
pushl
addr16
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
insb
call
outsl
fs
ss
push
sub
js
cmp
incl
sub
pushl
sti
fabs
ljmp
jmp
hlt
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
cli
arpl
xor
repnz
ljmp
sbb
xor
jmp
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jno
es
push
data16
pop
xor
decl
incl
pushl
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
jns
pop
imul
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
decl
callw
insl
pop
pop
xor
inc
cmp
lahf
push
sub
pushl
xor
lcall
repnz
call
hlt
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
sti
clc
clc
repz
lock
repnz
clc
clc
lock
jmp
lcall
xor
jmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
aaa
outsl
outsl
pop
aaa
aaa
cmp
inc
cmp
pushl
gs
jge
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
ja
jns
incl
adcl
dec
ljmp
xor
outsl
jo
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsb
aaa
pushl
outsl
pop
ljmp
pop
lcall
dec
daa
push
ss
cmp
sub
lcall
jmp
out
sti
lock
lock
clc
clc
sti
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
stc
lock
push
lock
icebp
std
hlt
jmp
cld
cld
push
out
hlt
scas
ljmp
sbb
clc
xor
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
pushl
incl
aas
sub
xor
cmp
js
insl
pop
lcall
dec
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
push
xor
pop
outsl
test
incl
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
imul
ljmp
pop
cmp
push
incl
arpl
sub
cmp
adcl
xor
jnp
mov
pushl
push
cli
cli
push
cld
idiv
std
hlt
cmc
sti
clc
push
out
ljmp
jmp
push
jmp
ss
incl
aas
jmp
clc
push
ljmp
lock
inc
outsb
aaa
outsl
push
gs
xor
pop
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
cmp
aaa
jae
ljmp
pop
pushl
call
imul
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
sub
sub
test
js
test
js
addr16
imul
test
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
ss
push
ljmp
pop
pushl
and
dec
sub
xor
cmovb
sbb
mov
xor
fdiv
in
leave
ljmp
dec
call
call
shl
fmulp
mov
pusha
cmp
push
or
inc
pop
adc
dec
sub
call
push
cmp
lock
ljmp
repnz
call
inc
pushl
sbb
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
ljmp
cmp
sub
xor
incl
gs
gs
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
ds
xor
sub
push
jns
pushl
jle
js
test
jae
push
outsl
pop
outsl
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
ss
aaa
insb
push
ljmp
pop
cmp
push
incl
pop
inc
dec
sub
cmp
sbb
sub
ljmp
sbb
call
and
and
sbb
sub
push
jmp
and
sbb
ljmp
es
decl
sbb
adc
and
sbb
adc
and
push
and
jmp
std
inc
push
call
stc
pop
cmc
push
inc
sbb
arpl
lcall
outsb
lcall
outsl
push
aaa
xor
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
ljmp
aaa
pop
ljmp
xor
push
jae
pushl
pusha
jg
aas
imul
incl
addr16
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
jns
pushl
addr16
jmp
test
js
test
lcall
jo
je
ja
test
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
ss
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
imul
outsb
push
pop
cmp
es
dec
dec
sub
inc
xor
cs
cmp
sub
jmp
lcall
adc
jmp
adc
adc
and
ljmp
and
pushl
pushl
ljmp
push
xor
sbb
inc
jno
stc
cmp
pushl
bound
push
clc
jmp
cld
ljmp
lock
call
outsb
aaa
lcall
inc
push
xor
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jo
insb
pop
outsl
aaa
lcall
aaa
call
jmp
xor
pop
ss
cmp
dec
addr16
jmp
test
pushl
jge
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
je
sub
cs
incl
test
js
addr16
js
addr16
jmp
cmp
js
test
lcall
outsl
call
outsl
outsl
push
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
imul
ljmp
pop
incl
pop
decl
pop
push
das
xor
and
ds
daa
incl
sub
cmp
cmp
cmp
dec
and
incl
and
push
sub
es
inc
decl
decl
decl
pop
popa
inc
das
sub
push
repz
ljmp
clc
xor
jmp
sbb
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
and
lcall
aaa
cmp
test
js
pusha
pushl
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
js
je
test
incl
js
addr16
js
bound
ljmp
pop
js
test
lcall
outsl
lcall
outsl
outsl
push
aaa
xor
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
insl
pushl
outsb
push
ljmp
pop
call
push
gs
xor
dec
bound
call
xor
decl
call
dec
jmp
xor
arpl
xor
imul
push
repz
stc
push
push
xor
imul
lock
cld
arpl
pushl
push
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
aaa
outsl
outsl
pop
aaa
aaa
cmp
outsb
cmp
sub
jp
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
incl
fs
jns
addr16
js
incl
test
ja
addr16
js
push
pop
outsb
pop
pushl
jbe
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsb
lcall
outsl
outsb
pop
aaa
aaa
outsb
outsb
aaa
outsl
pop
outsb
lcall
ss
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
outsl
ljmp
pop
clc
cld
lock
repz
ljmp
sbb
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
jo
pushl
outsl
pop
ljmp
pop
pushl
cmp
xor
and
js
insl
pop
lcall
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
incl
je
subb
js
js
js
incl
cmp
addr16
outsb
addr16
push
outsl
aaa
pushl
outsb
pop
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
ljmp
aaa
ljmp
xor
push
call
incl
xor
sbb
lock
aaa
outsl
pop
outsb
aaa
call
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
cmp
pushl
pop
js
push
lcall
xor
inc
sub
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
cmpb
incl
js
test
js
addr16
js
incl
push
ljmp
dec
ljmp
xor
aaa
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
push
xor
aaa
push
incl
push
push
arpl
clc
cld
lcall
call
inc
outsb
xor
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
pushl
aaa
sub
jmp
cmp
xor
js
test
js
addr16
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
incl
cs
xor
ljmp
test
jns
test
incl
js
test
js
addr16
js
incl
push
lcall
ljmp
xor
outsl
insl
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
push
sbbl
aaa
ljmp
clc
ljmp
stc
lock
inc
push
ljmp
arpl
lcall
outsl
lcall
outsb
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
jo
outsl
aaa
lcall
aaa
lcall
pushl
aaa
pop
pushl
aaa
and
pop
js
incl
test
call
pop
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
ds
test
js
push
addr16
jmp
test
js
test
incl
js
test
js
pusha
insb
xorl
test
jmp
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
push
ljmp
repz
cld
arpl
xor
hlt
push
ljmp
sbb
xor
jmp
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
cmp
aaa
lcall
aaa
pushl
aaa
ljmp
inc
call
pop
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
ja
inc
outsl
jns
pop
incl
pop
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
ljmp
push
push
push
outsl
sbbl
imul
hlt
push
clc
ljmp
sbb
xor
gs
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
jo
aaa
aaa
outsl
xor
push
xor
aaa
aaa
lcall
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
js
jns
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
data16
test
outsb
outsl
xor
pop
insb
aas
pushl
pop
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
push
pushl
outsl
push
ljmp
pop
cld
stc
push
hlt
cmp
inc
sbb
clc
xor
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
pushl
and
aaa
xor
js
push
inc
pushl
js
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
push
xor
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
jbe
sbbb
test
push
aaa
outsl
push
outsl
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
push
stc
ljmp
push
push
jmp
clc
push
ljmp
lock
inc
outsb
aaa
outsl
push
gs
xor
pop
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
jo
ljmp
pop
lcall
xor
aaa
inc
cmp
sub
test
js
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
sub
sub
test
js
test
js
addr16
test
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
jmp
insb
pushl
jbe
sbbb
outsl
aaa
outsl
pop
outsl
aaa
call
xor
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
ljmp
pop
incl
outsl
push
hlt
lock
ljmp
repz
call
inc
pushl
sbb
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
ljmp
aaa
and
cmp
ljmp
pop
incl
push
js
pop
inc
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
ds
xor
sub
push
jns
pushl
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
cmp
js
test
call
imul
jns
pop
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
ss
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
push
outsl
aaa
lcall
aaa
call
cld
push
outsl
pushl
ljmp
sbb
arpl
lcall
outsb
lcall
outsl
push
aaa
xor
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
pushl
aaa
aaa
ljmp
and
sub
pushl
pop
aaa
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
jns
pushl
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
insw
pop
jmp
jp
js
test
lcall
outsb
lcall
push
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
adcl
outsl
aaa
push
clc
jmp
cld
ljmp
lock
call
outsb
aaa
lcall
inc
push
xor
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jo
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
xor
pushl
cmp
js
lcall
test
ljmp
js
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
je
sub
cs
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
bound
jmp
push
pushl
cmp
pop
pushl
pop
aaa
insb
outsl
pop
xor
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
lcall
outsl
push
aaa
aaa
cmp
ljmp
clc
xor
jmp
sbb
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
and
lcall
aaa
pushl
js
test
js
pop
ljmp
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
js
je
test
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
andl
ja
addr16
js
addr16
push
jmp
pop
pushl
jle
lcall
outsl
lcall
jo
pop
aaa
xor
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
push
incl
stc
push
push
xor
imul
lock
cld
arpl
pushl
push
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
aaa
outsl
outsl
pop
aaa
aaa
cmp
insl
aaa
xor
pushl
js
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
incl
fs
jns
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
cmp
addr16
jae
addr16
js
fs
outsb
xor
ljmp
jae
lcall
outsl
lcall
jo
pop
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
outsl
ljmp
pop
clc
cld
lock
repz
ljmp
sbb
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
jo
pushl
outsl
pop
ljmp
pop
pushl
cmp
xor
and
js
insl
pop
lcall
inc
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
incl
je
subb
js
js
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
cmp
imul
jne
pop
cmp
decl
pop
jmp
gs
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
ljmp
aaa
ljmp
xor
push
call
incl
xor
sbb
lock
aaa
outsl
pop
outsb
aaa
call
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
cmp
pushl
pop
js
push
lcall
xor
inc
sub
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
cmpb
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
jl
insb
data16
addr16
ljmp
push
xor
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
push
xor
aaa
push
incl
push
push
arpl
clc
cld
lcall
call
inc
outsb
xor
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
pushl
aaa
sub
jmp
cmp
xor
js
test
js
addr16
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
incl
cs
xor
ljmp
test
jns
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
jae
bound
jmp
pop
jmp
inc
xor
jo
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
push
sbbl
aaa
ljmp
clc
ljmp
stc
lock
inc
push
ljmp
arpl
lcall
outsl
lcall
outsb
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
jo
outsl
aaa
lcall
aaa
lcall
pushl
aaa
pop
pushl
aaa
and
pop
js
incl
test
call
pop
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
ds
test
js
push
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
push
pop
pop
jns
gs
jmp
aas
outsl
aaa
pushl
outsb
pop
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
push
ljmp
repz
cld
arpl
xor
hlt
push
ljmp
sbb
xor
jmp
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
cmp
aaa
lcall
aaa
pushl
aaa
ljmp
inc
call
pop
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
data16
js
incl
arpl
pop
pop
jb
arpl
popa
data16
outsl
aaa
pushl
jo
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
ljmp
push
push
push
outsl
sbbl
imul
hlt
push
clc
ljmp
sbb
xor
gs
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
jo
aaa
aaa
outsl
xor
push
xor
aaa
aaa
lcall
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
js
jns
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
gs
test
incl
pop
lcall
insb
ljmp
inc
jmp
cmp
outsl
aaa
pushl
jo
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
push
pushl
outsl
push
ljmp
pop
cld
stc
push
hlt
cmp
inc
sbb
clc
xor
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
jo
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
pushl
and
aaa
xor
js
push
inc
pushl
js
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
push
xor
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
arpl
js
incl
pop
call
push
lcall
cmp
outsl
aaa
pushl
jno
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
push
stc
ljmp
push
push
jmp
clc
push
ljmp
lock
inc
outsb
aaa
outsl
push
gs
xor
pop
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jno
xor
jo
lcall
cmp
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
jo
ljmp
pop
lcall
xor
aaa
inc
cmp
sub
test
js
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
sub
sub
test
js
test
js
addr16
test
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
arpl
ja
incl
pop
call
jmp
inc
lcall
cmp
jo
pushl
jno
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
ljmp
pop
incl
outsl
push
hlt
lock
ljmp
repz
call
inc
pushl
sbb
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
cmp
insl
lcall
jae
pop
cmp
jo
outsl
pop
outsl
aaa
pushl
pop
es
lcall
lcall
pop
pushl
aaa
ljmp
aaa
and
cmp
ljmp
pop
incl
push
js
pop
inc
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
ds
xor
sub
push
jns
pushl
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
popa
data16
test
pushl
call
jmpw
inc
lcall
cmp
jno
pushl
jo
ljmp
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
push
outsl
aaa
lcall
aaa
call
cld
push
outsl
pushl
ljmp
sbb
arpl
lcall
outsb
lcall
outsl
push
aaa
xor
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
ljmp
cmp
xor
cmp
pushl
pop
lcall
inc
incl
jo
xor
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
pushl
aaa
aaa
ljmp
and
sub
pushl
pop
aaa
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
jns
pushl
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
popa
push
test
pushl
push
push
push
lcall
cmp
aaa
insl
pop
jmp
push
lcall
jo
pop
aaa
jno
pop
aaa
aaa
outsl
adcl
outsl
aaa
push
clc
jmp
cld
ljmp
lock
call
outsb
aaa
lcall
inc
push
xor
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
cmp
jno
lcall
aaa
lcall
ljmp
xor
aaa
daa
cmp
inc
ljmp
pop
pushl
dec
cmp
lcall
outsl
lcall
jo
pop
aaa
cmp
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
xor
pushl
cmp
js
lcall
test
ljmp
js
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
je
sub
cs
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
arpl
ja
incl
popa
call
insb
call
dec
lcall
inc
ss
ss
cmp
lcall
push
call
jb
pop
xor
pop
aaa
ss
repz
ljmp
clc
xor
jmp
sbb
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
ljmp
aaa
cmp
pushl
jo
pushl
pop
call
outsl
lcall
jae
pop
aaa
cmp
daa
xor
cmp
incl
sub
ljmp
dec
jmp
inc
call
push
aaa
outsl
aaa
call
pop
ljmp
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
and
lcall
aaa
pushl
js
test
js
pop
ljmp
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
js
je
test
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
outsl
xorl
test
push
call
push
lcall
cmp
inc
push
push
call
push
push
jle
insl
ljmp
insb
push
inc
clc
lock
cld
arpl
pushl
pop
lcall
push
pushl
aaa
pushl
aaa
aaa
jno
pushl
jno
pushl
pop
lcall
jb
pop
cmp
pop
cmp
jb
cmp
jae
lcall
cmp
lcall
call
pop
jmp
ljmp
xor
cmp
pushl
dec
cmp
lcall
dec
incl
xor
cmp
cmp
push
imul
call
ds
pushl
lcall
cmp
pop
pop
pushl
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
aaa
outsl
outsl
pop
aaa
aaa
cmp
insl
aaa
xor
pushl
js
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
incl
fs
jns
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
data16
js
incl
jb
push
arpl
outsb
push
ds
decl
imul
clc
cld
lock
repz
ljmp
sbb
pop
dec
push
call
call
push
jmp
xor
arpl
xor
pushl
arpl
jmp
push
decl
pop
decl
pop
push
dec
xor
dec
inc
sub
incl
das
cmp
cmp
pushl
aaa
xor
push
dec
cmp
incl
dec
js
pushl
pop
insl
addr16
push
jae
imul
xchg
js
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
jo
pushl
outsl
pop
ljmp
pop
pushl
cmp
xor
and
js
insl
pop
lcall
inc
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
incl
je
subb
js
js
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
jnp
jno
jg
gs
ljmp
push
jmp
hlt
ljmp
cld
jp
cmp
jmp
popa
and
sub
pop
lock
inc
cmp
inc
cmp
inc
dec
aaa
incl
incl
inc
incl
incl
ss
aaa
pushl
aas
inc
aas
inc
inc
decl
inc
decl
inc
inc
inc
cmp
dec
push
dec
pop
push
dec
inc
call
inc
jmp
pushl
ljmp
push
jmp
pop
bound
lcall
cmp
incl
js
andl
outsl
aaa
outsl
js
pop
incl
pop
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
cmp
pushl
pop
js
push
lcall
xor
inc
sub
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
cmpb
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
hlt
bound
stc
addr16
xchg
lock
push
insb
clc
cld
ljmp
pop
jmp
aas
popa
inc
dec
xor
push
addr16
jmp
ljmp
lcall
push
lcall
push
push
fs
call
outsl
jmp
push
pushl
imul
jno
pop
outsb
jb
jne
jo
jns
pop
incl
cmp
gs
js
addr16
jmp
test
js
test
js
js
xchg
jne
imul
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
pushl
aaa
sub
jmp
cmp
xor
js
test
js
addr16
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
incl
cs
xor
ljmp
test
jns
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
bound
test
sti
clc
jmp
jns
stc
lock
dec
jne
ljmp
jo
jle
je
jg
je
andb
jae
jae
jae
jle
arpl
jle
incl
arpl
je
fs
jmp
cmp
jne
cmp
test
js
test
js
addr16
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
xchg
js
test
lcall
outsl
lcall
jne
js
pop
outsl
outsl
aaa
jo
outsl
aaa
lcall
aaa
lcall
pushl
aaa
pop
pushl
aaa
and
pop
js
incl
test
call
pop
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
ds
test
js
push
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jae
jmp
nop
mov
xor
sti
jno
push
lock
decl
ljmp
aas
addr16
lcall
test
ljmp
js
incl
addr16
test
js
addr16
jns
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
outsl
aaa
ljmp
pop
js
xchg
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
cmp
aaa
lcall
aaa
pushl
aaa
ljmp
inc
call
pop
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
call
jns
mov
outsb
sti
push
push
clc
jmp
pushl
incl
pop
ljmp
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xchg
js
test
jne
imul
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
jo
aaa
aaa
outsl
xor
push
xor
aaa
aaa
lcall
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
js
jns
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
cmp
js
test
sti
stc
push
hlt
mov
nop
jmp
decb
insl
jno
fs
clc
push
lock
js
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
lcall
js
outsl
imul
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
pushl
and
aaa
xor
js
push
inc
pushl
js
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
push
xor
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
bound
nop
cmp
jno
clc
ljmp
lock
dec
js
js
insl
pop
call
aas
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
pop
outsl
xchg
incl
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
jo
ljmp
pop
lcall
xor
aaa
inc
cmp
sub
test
js
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
sub
sub
test
js
test
js
addr16
test
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
cmp
addr16
mov
pushl
jns
lock
jmp
clc
stc
sti
hlt
js
dec
call
outsb
insl
jno
fs
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
imul
outsl
aaa
outsl
pop
outsl
aaa
js
pop
lcall
lcall
pop
pushl
aaa
ljmp
aaa
and
cmp
ljmp
pop
incl
push
js
pop
inc
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
ds
xor
sub
push
jns
pushl
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
hlt
sti
jns
jmp
stc
mov
fs
aas
push
outsb
push
jno
incl
insl
js
addr16
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jne
js
js
xchg
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
pushl
aaa
aaa
ljmp
and
sub
pushl
pop
aaa
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
jns
pushl
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
jns
xorb
test
clc
pushl
sti
ljmp
lock
jmp
addr16
aas
insl
test
decl
push
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
js
test
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jo
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
xor
pushl
cmp
js
lcall
test
ljmp
js
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
je
sub
cs
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
bound
test
mov
hlt
hlt
stc
jmp
nop
sti
jns
clc
push
js
jno
insl
lock
decl
pop
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
xchg
js
addr16
js
imul
outsl
pop
pushl
js
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
and
lcall
aaa
pushl
js
test
js
pop
ljmp
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
js
je
test
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
push
decl
stc
cmpb
outsb
fs
clc
lock
sti
jno
call
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
ja
fs
jbe
incl
addl
pushl
popa
popa
jae
jmp
cmp
jb
jle
incl
arpl
andb
jbe
ja
jbe
incl
cmpl
push
pop
pushl
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
aaa
outsl
outsl
pop
aaa
aaa
cmp
insl
aaa
xor
pushl
js
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
incl
fs
jns
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
bound
addr16
js
test
clc
sti
lock
hlt
hlt
jmp
insl
pop
js
dec
aas
pushl
fs
incl
pushl
addr16
js
popaw
outsl
pop
jmp
jl
pushl
cmp
mov
jns
test
subb
cwtl
xchg
lahf
jne
jmp
test
mov
mov
decl
cltd
mov
decl
adcb
outsb
test
incl
jo
call
dec
ljmp
ljmp
xor
jo
pushl
insl
pop
push
pushl
cmp
xor
and
js
insl
pop
lcall
inc
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
incl
je
subb
js
js
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
andb
jae
addr16
js
jmp
hlt
jns
sti
decl
push
ljmp
jno
decb
fs
jbe
jo
ja
js
pop
jge
jmp
pop
jo
xorl
lret
pushl
hlt
push
push
jmp
stc
jmp
icebp
push
std
out
push
stc
out
cli
idiv
div
stc
std
repnz
std
out
jmp
jmp
in
stc
hlt
sti
hlt
idiv
fcos
out
in
hlt
fucomi
fsub
iret
stos
test
iret
fwait
sar
test
pop
dec
insb
ljmp
cmp
aaa
cmp
pushl
pop
js
push
lcall
xor
inc
sub
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
cmpb
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
nop
push
bound
decl
fs
jno
clc
sti
jle
imul
push
pop
aas
adc
lcall
in
out
clc
jmp
idiv
std
clc
repz
push
cli
sti
cld
stc
stc
icebp
cli
repnz
push
stc
push
stc
stc
icebp
stc
cli
cli
icebp
stc
push
repnz
push
repz
push
cld
cli
cli
stc
cld
div
clc
call
repnz
jmp
push
lcall
jb
outsl
aam
ljmp
sub
jmp
cmp
xor
js
test
js
addr16
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
incl
cs
xor
ljmp
test
jns
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
bound
test
sti
clc
jmp
jns
stc
lock
jmp
test
ljmp
cld
out
ljmp
push
cli
push
stc
idiv
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
cli
clc
repnz
clc
icebp
lock
repnz
cld
jbe
decl
pushl
ss
pushl
cs
pop
js
incl
test
call
pop
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
ds
test
js
push
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jae
jmp
nop
mov
xor
cld
jo
xchg
out
idiv
mov
ljmp
cmp
repz
sti
out
ljmp
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
push
stc
clc
clc
push
cld
out
cld
stc
hlt
icebp
ja
xor
inc
pop
sub
imul
js
aaa
ljmp
inc
call
pop
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
call
jp
mov
sar
push
push
repz
dec
cld
clc
repnz
inc
cmc
cld
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
push
clc
lock
clc
clc
lock
cli
push
std
push
stc
cld
idiv
idiv
cli
cmp
and
dec
testb
xor
push
xor
aaa
xor
lcall
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
js
jns
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
cmp
js
test
cli
clc
push
repnz
ljmp
push
clc
stc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
std
sti
stc
cmc
icebp
jmp
fadd
idiv
out
inc
mov
jp
movsl
jg
jg
lea
jmp
cmp
pushl
pushl
and
and
pop
push
inc
pushl
js
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
push
xor
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
ja
pushl
cmp
clc
clc
lock
cli
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
cld
lock
push
lock
hlt
imul
fdivrp
sti
jmp
call
incl
subb
and
cmp
xor
call
adc
sbb
adc
pop
push
or
sbb
or
addr16
sbb
pushl
inc
sub
lcall
xor
aaa
inc
cmp
sub
test
js
pop
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
sub
sub
test
js
test
js
addr16
test
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
cmp
addr16
js
pushl
imul
clc
push
cli
out
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
push
stc
push
clc
lock
pushl
pushl
scas
mov
adc
cmp
ds
pushl
jmp
sub
push
sub
pop
sbb
xor
sbb
xor
and
ljmp
decl
xor
pop
sbb
dec
cmp
pushl
aaa
ljmp
push
incl
push
js
pop
inc
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jge
sub
pop
push
dec
decl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
ds
xor
sub
push
jns
pushl
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
lock
cli
imul
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
push
stc
clc
icebp
filds
push
xchg
xchg
mov
fildl
jmp
and
ljmp
sbb
and
es
cmp
sub
xor
inc
decl
push
daa
dec
push
push
cmp
push
pop
sub
inc
push
sub
inc
inc
sub
decl
xor
das
ljmp
and
sub
pushl
pop
aaa
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
push
test
sub
xor
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
aas
cmp
cmp
jns
pushl
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
push
xorb
test
clc
repz
out
push
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
push
lock
lock
int3
push
call
lcall
xor
xor
jnp
jnp
jae
xor
and
and
sbb
incl
jmp
push
lcall
dec
call
dec
pop
imul
jmp
insl
call
call
imul
outsl
push
imul
lcall
lcall
xor
pushl
cmp
js
lcall
test
ljmp
js
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
mov
js
test
cmp
sub
xor
sub
cmp
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
xor
je
sub
cs
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
gs
test
jp
repz
lock
out
test
push
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
cld
fdivr
jnp
jl
aad
loope
jae
and
ljmp
das
decl
cmp
inc
cmp
inc
xor
sub
pop
insl
addr16
push
lcall
inc
js
incl
pop
pushl
aaa
outsl
aaa
lcall
pop
pushl
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
and
lcall
aaa
pushl
js
test
js
pop
ljmp
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jg
add
addr16
push
js
dec
aaa
xor
incl
aas
call
fs
cmp
cs
cmp
xor
js
je
test
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
push
jp
test
jbe
subb
lock
clc
lock
cli
clc
repz
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
cli
clc
repnz
clc
lock
call
pushl
daa
pushl
adc
pushl
xor
jmp
sub
dec
pushl
aas
push
inc
jge
insb
pushl
fs
pop
push
jbe
addr16
ja
incl
test
pop
imul
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
jo
pop
aaa
outsl
outsl
pop
aaa
aaa
cmp
insl
aaa
xor
pushl
js
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
mov
pop
addr16
push
addr16
js
cs
cs
ljmp
cmp
cmp
inc
inc
xor
xor
add
push
push
add
push
call
jg
cmp
addr16
cs
cs
pushl
cmp
incl
fs
jns
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
clc
cli
lock
lock
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
push
clc
clc
call
mov
dec
std
mov
sbb
sub
and
sbb
sbb
adc
pushl
push
jmp
dec
lcall
fs
jmp
cmp
outsl
cmpb
test
js
test
js
addr16
imul
xchg
js
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
jo
pushl
outsl
pop
ljmp
pop
pushl
cmp
xor
and
js
insl
pop
lcall
inc
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xor
ljmp
imul
sub
xor
cmp
xor
cs
call
pop
push
inc
push
dec
push
inc
add
push
xchg
js
incl
jg
incl
fs
cmp
dec
ljmp
inc
xor
xor
ljmp
sub
cmp
incl
je
subb
js
js
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
andb
jbe
addr16
js
gs
repz
cli
jp
test
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
stc
push
clc
push
icebp
sti
imul
and
jmp
jno
incl
sub
xor
sbb
push
es
dec
push
dec
call
inc
jl
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
aaa
outsl
js
pop
incl
pop
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
cmp
pushl
pop
js
push
lcall
xor
inc
sub
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
dec
sub
pop
addr16
pushl
cmp
xor
ljmp
xor
cmp
cmp
incl
xchg
incl
incl
push
push
js
add
cmp
inc
jg
dec
aas
cmp
cmp
cmp
sub
cs
xor
pushl
cmpb
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
lock
addr16
jp
out
lock
clc
clc
cli
clc
clc
lock
clc
lock
push
clc
lock
clc
std
lock
cmp
call
clc
xor
das
inc
cmp
and
dec
jmp
cmp
jnp
pushw
push
jo
push
dec
jbe
addr16
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
js
js
xchg
jne
imul
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
pushl
aaa
sub
jmp
cmp
xor
js
test
js
addr16
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
decl
imul
addr16
cs
cmp
cmp
xor
cmp
inc
push
add
call
add
call
pop
add
jmp
jg
js
xchg
dec
push
cmp
xor
decl
cmp
incl
cs
xor
ljmp
test
jns
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
gs
js
incl
cli
clc
out
push
push
lock
lock
clc
clc
clc
stc
stc
clc
lock
push
sbb
addb
jmp
inc
lcall
call
aaa
incl
inc
pop
je
call
jmp
insb
incl
js
andl
js
js
js
incl
test
test
js
addr16
js
addr16
jmp
xchg
js
test
lcall
outsl
lcall
jne
js
pop
outsl
outsl
aaa
jo
outsl
aaa
lcall
aaa
lcall
pushl
aaa
pop
pushl
aaa
and
pop
js
incl
test
call
pop
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
xor
cmp
cs
cmp
pop
lcall
dec
call
push
call
push
push
addr16
add
js
incl
xchg
add
aas
cmp
xor
cs
cs
cmp
cs
ds
test
js
push
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jbe
out
test
incl
cli
clc
clc
lock
repz
lock
sti
push
cli
clc
lcall
decl
dec
adc
push
int
es
inc
pop
cmp
ljmp
push
and
jmp
incl
dec
arpl
jae
data16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
outsl
aaa
ljmp
pop
js
xchg
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
cmp
aaa
lcall
aaa
pushl
aaa
ljmp
inc
call
pop
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
imul
addr16
js
test
cmp
cs
cmp
sub
xor
inc
push
inc
cmp
cmp
pop
add
xchg
push
pop
js
add
add
inc
cmp
dec
jmp
jg
cmp
cs
cmp
xor
aas
xor
xor
cmp
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
cmc
lock
cli
push
push
clc
out
clc
sti
push
clc
push
repz
stc
sub
adc
pushl
pop
aas
incl
cs
xor
daa
fs
js
jo
ljmp
push
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xchg
js
test
jne
imul
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
jo
aaa
aaa
outsl
xor
push
xor
aaa
aaa
lcall
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
decl
cmp
call
pop
incl
cmp
xor
inc
push
push
add
push
decl
inc
incl
jg
fs
xchg
call
dec
add
inc
xor
pushl
xor
cmp
ljmp
xor
sub
js
jns
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
cmp
js
test
cli
push
push
repz
test
push
push
sti
clc
lock
clc
std
lock
clc
pop
jmp
pop
lcall
sbb
inc
arpl
pushl
cmp
jg
push
je
pop
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
lcall
js
outsl
imul
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
pushl
and
aaa
xor
js
push
inc
pushl
js
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
pop
pushl
addr16
call
sub
xor
ljmp
cs
cmp
lcall
inc
decl
cmp
inc
cmp
push
add
add
pop
xchg
push
add
jg
aas
inc
pushl
dec
aaa
cmp
sub
ljmp
cmp
incl
imul
jns
push
incl
test
jns
push
push
jns
jns
test
incl
push
push
test
incl
test
jns
push
push
jns
jns
test
incl
push
push
test
incl
test
jns
push
push
jns
jns
test
incl
push
push
test
incl
test
jns
push
imul
jmp
repnz
pushl
cmp
sti
clc
std
repz
pop
adc
insb
insl
gs
sbb
ljmp
push
ljmp
jmp
inc
decl
push
data16
jmp
test
pushl
jnp
incl
push
push
test
incl
test
jns
push
push
jns
jns
test
incl
push
push
xchg
incl
pop
pop
lcall
pop
pushl
aaa
pushl
aaa
aaa
jo
pushl
jno
pushl
pop
lcall
pushl
dec
cmp
and
test
jns
pop
incl
test
jns
push
push
jns
jns
test
incl
push
push
test
incl
pusha
cmp
cmp
xor
ljmp
sub
cmp
xor
dec
pushl
inc
cmp
push
lcall
push
add
push
js
inc
cmp
xchg
fs
decl
cmp
aas
ljmp
aaa
ljmp
xor
xor
ljmp
sub
cmp
incl
fs
fs
je
incl
addb
je
pushl
fs
jmp
pushl
incl
fs
andb
fs
je
incl
addb
je
pushl
fs
jmp
pushl
incl
fs
andb
fs
je
incl
addb
je
pushl
fs
jmp
pushl
incl
fs
andb
fs
je
incl
cmpb
fs
fs
pushl
data16
out
fcomi
out
call
sbb
pop
lcall
push
loopne
xlat
sub
inc
bound
pushl
pop
es
ljmp
jg
js
je
arpl
jae
fs
jmp
pushl
incl
fs
andb
fs
je
incl
addb
je
pushl
fs
jmp
pushl
incl
data16
andb
imul
pushl
call
call
push
ljmp
ljmp
sub
cmp
push
jg
push
jne
push
jae
pop
dec
je
fs
je
incl
addb
je
pushl
fs
jmp
pushl
incl
fs
andb
sub
pop
push
dec
incl
cmp
cmp
xor
xor
cmp
push
incl
incl
jg
js
xchg
dec
add
push
add
xor
dec
cmp
inc
cmp
cmp
cmp
cs
cs
xor
xor
ds
pushl
ds
pushl
xor
xor
xor
xor
xor
xor
ds
ds
xor
pushl
xor
pushl
xor
xor
xor
xor
ds
pushl
ds
pushl
xor
xor
xor
xor
xor
xor
ds
ds
xor
pushl
xor
pushl
xor
xor
xor
xor
ds
pushl
ds
pushl
xor
xor
xor
xor
xor
xor
ds
ds
xor
pushl
xor
pushl
xor
xor
xor
xor
ds
pushl
ds
pushl
xor
xor
xor
xor
xor
xor
ds
ds
incl
ds
cmp
cmp
cmp
cmp
es
cmp
inc
inc
cmp
das
cmp
xor
das
sub
aas
xor
ds
xor
aas
ds
xor
pushl
xor
pushl
xor
xor
xor
xor
ds
pushl
ds
pushl
xor
xor
xor
xor
xor
xor
ds
ds
xor
pushl
xor
pushl
xor
xor
xor
xor
ds
pushl
ds
cmp
xor
cmp
xor
xor
das
xor
das
cmp
das
cmp
cmp
cmp
xor
das
pushl
xor
xor
xor
das
xor
ljmp
cmp
pushl
xor
xor
xor
xor
xor
xor
ds
ds
xor
pushl
xor
pushl
xor
xor
xor
xor
ds
pushl
ds
cmp
xor
xor
xor
xor
cs
cs
cmp
cs
cmp
inc
call
inc
incl
add
call
xchg
incl
push
add
decl
jmp
cmp
cs
cs
aas
cmp
cmp
cmp
cmp
sub
cs
sub
sub
cmp
sub
sub
sub
sub
cmp
cmp
sub
sub
sub
cmp
cmp
sub
sub
sub
sub
cmp
cmp
sub
sub
sub
cmp
cmp
sub
sub
sub
sub
cmp
cmp
sub
sub
sub
cmp
cmp
sub
sub
sub
sub
pushl
aaa
cmp
aaa
ljmp
sub
ljmp
sub
cs
cs
ljmp
cmp
cmp
sub
sub
sub
sub
cmp
cmp
sub
sub
sub
cmp
cmp
sub
sub
sub
sub
cmp
cmp
sub
sub
sub
cmp
cmp
sub
sub
sub
cs
cmp
cs
cmp
cmp
cmp
sub
cs
sub
cmp
cmp
sub
sub
sub
sub
cmp
cmp
sub
sub
sub
cmp
cmp
cs
cmp
cs
cs
inc
cmp
inc
cs
decl
incl
push
pop
incl
inc
push
call
add
inc
call
fs
js
xchg
cmp
xor
aas
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
xor
xor
cs
push
dec
inc
inc
incl
lcall
jle
add
addr16
push
js
dec
xor
incl
aas
call
fs
cmp
das
cmp
cs
cmp
cs
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
cmp
das
cmp
das
das
cmp
das
das
das
das
das
cmp
das
cmp
das
cmp
cmp
cmp
das
das
das
ljmp
das
das
das
das
das
ljmp
das
cmp
ljmp
cmp
call
cmp
inc
inc
xor
cmp
push
add
jbe
push
push
add
push
call
jge
cmp
decl
xor
das
xor
cmp
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
xor
cmp
cmp
xor
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
xor
cmp
cmp
xor
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
xor
cmp
cmp
xor
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
xor
cmp
cmp
xor
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
xor
cmp
cmp
xor
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
xor
cmp
cmp
xor
cmp
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
xor
xor
xor
xor
xor
pushl
xor
cmp
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
xor
cmp
cmp
xor
cmp
xor
xor
xor
cmp
cmp
cmp
pushl
xor
pushl
xor
xor
xor
inc
cmp
push
lcall
pop
push
push
inc
add
dec
mov
add
incl
pop
cmp
inc
xor
xor
aaa
xor
ss
pushl
inc
inc
incl
incl
ss
ss
ss
ss
incl
incl
inc
pushl
ss
ss
ss
pushl
inc
inc
incl
incl
ss
ss
ss
ss
incl
incl
inc
pushl
ss
ss
ss
pushl
inc
inc
incl
incl
ss
ss
ss
ss
incl
incl
inc
pushl
ss
ss
ss
pushl
inc
inc
incl
incl
ss
ss
ss
ss
incl
incl
inc
pushl
ss
ss
ss
pushl
inc
inc
incl
incl
ss
ss
ss
ss
incl
incl
inc
pushl
ss
ss
ss
pushl
inc
inc
incl
incl
ss
ss
ss
ss
incl
incl
inc
pushl
ss
ss
ss
pushl
inc
inc
incl
xor
xor
xor
xor
xor
incl
xor
incl
aas
pushl
xor
aaa
cmp
pushl
aaa
inc
pushl
inc
inc
incl
aaa
incl
cmp
inc
aaa
cmp
ss
ss
aaa
incl
incl
inc
pushl
ss
ss
ss
pushl
inc
inc
incl
incl
ss
ss
ss
ss
incl
incl
cmp
pushl
cmp
push
aas
dec
pop
aas
push
dec
incl
xchg
add
add
outsb
add
xor
xor
jo
inc
incl
incl
inc
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
aas
pushl
xor
xor
cmp
xor
aas
inc
xor
incl
decl
inc
aas
cmp
inc
ds
dec
incl
dec
incl
cmp
inc
cmp
cmp
cmp
inc
cmp
incl
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
call
dec
decl
inc
incl
dec
pop
add
lcall
add
lcall
popa
add
dec
call
gs
fs
dec
xor
cmp
inc
ss
cmp
das
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
cmp
cmp
cmp
cmp
xor
pushl
xor
pushl
aas
inc
cmp
das
cmp
cs
cmp
xor
ds
inc
cmp
aas
dec
xor
decl
call
push
decl
dec
decl
dec
inc
ds
dec
incl
push
incl
cmp
inc
cmp
inc
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
cmp
decl
ljmp
push
lcall
push
call
pop
inc
dec
cmp
incl
insb
add
incl
cs
cmp
xor
cmp
cmp
cmp
inc
inc
aaa
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
aaa
inc
cmp
incl
cmp
incl
cmp
aaa
xor
xor
pushl
cmp
pushl
dec
inc
incl
xor
inc
cmp
inc
xor
push
dec
dec
decl
lcall
call
decl
dec
decl
dec
cmp
cmp
inc
cmp
incl
dec
incl
cmp
inc
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
inc
inc
push
dec
ds
lcall
add
pop
incl
push
add
sbbb
addb
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
addb
add
add
add
add
add
addb
add
add
add
addb
add
add
addb
add
add
addb
add
addb
add
add
addb
add
add
add
add
add
addb
xor
add
sub
add
add
add
add
add
push
add
jge
add
add
ljmp
test
insl
test
insl
insl
push
insl
test
incl
test
ljmp
push
ljmp
push
push
insl
push
call
test
ljmp
test
incl
push
insl
insl
test
insl
insl
push
insl
test
incl
test
ljmp
push
ljmp
push
push
insl
push
call
test
ljmp
test
incl
push
insl
insl
test
insl
insl
push
insl
test
incl
test
ljmp
push
ljmp
push
push
insl
push
call
test
ljmp
test
incl
push
insl
insl
test
insl
popa
dec
add
ja
incl
push
decl
xchg
cmp
cmp
inc
outsb
xor
ss
dec
dec
decl
decl
cmp
cmp
decl
decl
dec
ss
cmp
cmp
pushl
cmp
dec
dec
decl
decl
cmp
cmp
decl
decl
dec
ss
cmp
cmp
pushl
cmp
dec
dec
decl
decl
cmp
cmp
decl
decl
dec
ss
cmp
cmp
pushl
cmp
dec
dec
incl
add
incl
cmp
dec
xor
sub
aaa
xor
cmpb
pushl
aaa
pushl
sub
ljmp
sub
ljmp
sub
sub
sub
aaa
ljmp
aaa
aaa
cmp
sub
aaa
sub
sub
sub
pushl
aaa
sub
pushl
sub
sub
sub
sub
sub
aaa
ljmp
aaa
aaa
pushl
ljmp
pushl
sub
sub
sub
sub
sub
aaa
sub
aaa
aaa
sub
pushl
aaa
pushl
sub
ljmp
sub
ljmp
sub
sub
sub
aaa
ljmp
aaa
aaa
pushl
ljmp
pushl
sub
sub
sub
sub
sub
aaa
sub
aaa
aaa
sub
pushl
cmp
cmp
ljmp
sub
add
cmp
cmp
aas
ljmp
cmp
cmp
inc
sub
aaa
ss
inc
ss
inc
inc
xor
incl
pushl
xor
pushl
ss
das
ds
pushl
ss
pushl
inc
incl
inc
das
inc
ds
xor
aaa
xor
xor
cmp
inc
inc
incl
inc
pushl
ss
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
ss
inc
ss
inc
inc
xor
incl
incl
inc
pushl
xor
pushl
ss
ss
xor
inc
pushl
inc
inc
incl
incl
ss
xor
aaa
sub
xor
inc
cmp
incl
add
cmp
dec
ljmp
xor
jp
ljmp
pop
xchg
ljmp
data16
incl
addr16
andb
jo
insl
ja
pop
incl
pop
pop
lcall
pop
pushl
aaa
pushl
aaa
aaa
outsb
aaa
pushl
jno
pushl
pop
jmp
imul
inc
insb
push
cmp
imul
js
pop
ljmp
push
incl
pushl
pushl
gs
jmp
cmp
jbe
cmp
cmp
incl
gs
gs
jbe
incl
addb
jbe
pushl
gs
jmp
xchg
pushl
cmp
dec
ljmp
pushl
sub
cmp
subb
add
incl
xor
incl
sub
jge
push
imul
jp
mov
lcall
jo
push
ss
pop
xor
jo
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
pushl
aaa
xor
jo
pushl
pop
pushl
imul
push
insl
insb
pop
inc
cmp
imul
xchg
incl
test
jns
push
push
jns
jns
test
incl
push
push
test
incl
test
decl
insb
jle
inc
add
ljmp
ds
ljmp
dec
xor
cmp
inc
sub
xorb
js
jne
jl
ljmp
push
pushl
lcall
pop
ljmp
xor
outsl
outsl
aaa
aaa
outsb
xor
ljmp
pop
lcall
insl
call
insb
outsb
push
xor
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
ss
insl
pop
pushl
push
incl
imul
js
js
js
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
inc
sub
pop
addr16
pushl
dec
ljmp
add
add
dec
sub
xor
push
inc
call
jne
jne
jge
mov
outsl
outsl
aaa
push
outsl
aaa
lcall
ss
call
arpl
js
cmp
jo
inc
xor
aas
insb
dec
pushl
pusha
lcall
outsl
lcall
imul
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
ljmp
xor
pop
jbe
incl
test
jmp
incl
jns
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
pushl
sub
mov
ds
add
dec
cmpb
incl
incl
xor
lcall
fs
aaa
cmp
ljmp
pop
ljmp
push
sbbb
ret
in
loopne
aad
mov
cmpsb
jmp
scas
js
aad
mov
fwait
mov
aaa
ljmp
push
ljmp
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jo
jo
outsl
aaa
lcall
aaa
lcall
jle
push
pushl
dec
jmp
arpl
ljmp
test
jp
xchg
incl
js
test
js
addr16
js
incl
test
mov
jge
addr16
js
imul
incl
dec
decl
pop
incl
push
cmp
dec
add
ja
outsb
push
push
pushl
sub
call
call
pop
ljmp
aaa
ljmp
cs
call
cld
sti
cmc
std
hlt
idiv
hlt
iret
std
sti
clc
inc
dec
lcall
jo
outsl
mov
jmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
inc
push
insb
xor
pop
pop
ss
pushl
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
imul
incl
lcall
incl
sub
sub
xor
sub
dec
cmp
add
push
pop
pushl
ss
outsl
arpl
outsl
je
in
push
insl
xor
pop
pop
aaa
jmp
clc
clc
cli
fucomi
push
lock
lock
clc
clc
clc
cli
cld
clc
repnz
outsl
sahf
ja
repz
in
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
outsl
call
jo
pop
xor
gs
js
jp
pushl
pop
incl
js
addr16
js
addr16
jmp
test
js
test
lcall
jge
mov
dec
test
sub
add
ds
xorb
pop
xor
lcall
sub
sub
inc
aaa
outsl
aaa
cmp
pushl
pop
call
call
cs
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
push
push
cld
clc
clc
decl
mov
gs
jge
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
xor
jo
pushl
pop
incl
gs
imul
js
incl
test
test
js
addr16
js
addr16
sub
ljmp
xor
mov
add
dec
ds
pop
cmp
sub
lcall
call
pop
jmp
aaa
ljmp
sub
je
clc
lcall
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
clc
cld
lock
push
lock
hlt
pop
imul
cli
jne
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
call
xor
imul
jmp
je
incl
js
test
js
addr16
js
incl
xor
imul
sub
dec
cmp
add
incl
addb
lcall
push
call
sub
cmp
pop
outsl
aaa
lcall
aaa
pushl
clc
repz
pop
icebp
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
call
pop
mov
das
jmp
ss
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
insb
xor
pop
jo
lcall
aaa
call
incl
push
addr16
jmp
test
js
test
decl
imul
addr16
ds
dec
inc
incl
inc
pushl
dec
cmp
add
cmp
aaa
outsl
aaa
cmp
lcall
push
call
outsl
lcall
outsl
pop
ss
lock
sti
call
clc
clc
clc
clc
lock
lock
lock
lock
clc
clc
clc
cli
clc
repnz
clc
lock
imul
addr16
push
push
out
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
jb
pop
xor
pop
aaa
aaa
push
js
js
js
lcall
inc
incl
js
addr16
js
imul
addr16
js
test
incl
add
decl
sub
xor
sub
incl
pop
pop
lcall
pop
ljmp
aaa
ljmp
aaa
sub
data16
pushl
pop
clc
sti
lock
stc
repz
lock
clc
lock
clc
clc
lock
clc
clc
clc
lock
lock
lock
stc
push
clc
clc
lcall
decl
xchg
sub
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
ss
xor
aaa
jb
ljmp
pop
incl
arpl
imul
js
incl
pop
pushl
addr16
decl
sub
push
cmp
add
jmp
sub
ss
cmp
sub
jae
aaa
outsl
pop
outsl
aaa
lcall
cmp
lcall
decl
aaa
lcall
jl
lock
std
clc
cld
clc
clc
lock
clc
lock
lock
clc
lock
clc
clc
lock
clc
jl
clc
incl
imul
aaa
ljmp
jo
jmp
dec
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
decl
jmp
aas
addr16
jmp
test
pushl
cmp
test
js
test
js
addr16
sub
pop
dec
inc
decl
dec
cmp
add
add
ds
ljmp
xor
jne
ljmp
pop
addr16
ljmp
imul
outsl
outsl
push
aaa
xor
pop
jo
lcall
aaa
incl
idiv
pushl
clc
lock
lock
clc
clc
clc
clc
clc
lock
clc
lock
clc
jp
decl
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
dec
xor
jno
lcall
aaa
pushl
incl
addr16
js
addr16
jmp
mov
js
test
decl
sub
xor
sub
cmp
subb
add
incl
xor
call
imul
sub
js
xor
outsl
aaa
pushl
outsl
pop
ljmp
pop
cmp
jo
pop
and
pop
aaa
aaa
gs
dec
into
enter
dec
stc
stc
repz
sti
icebp
push
cmc
sti
push
std
cli
decl
test
jns
lcall
imul
pop
outsl
aaa
lcall
cmp
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
pop
decl
jae
pop
das
cmp
addr16
js
incl
test
decl
imul
js
add
ljmp
ds
ljmp
dec
xor
cmp
inc
sub
xorb
outsl
outsl
xchg
imul
lcall
pop
ljmp
aaa
ljmp
aaa
cmp
pushl
jno
ljmp
pop
mov
mov
and
push
sti
std
push
jmp
out
push
fwait
call
repnz
lcall
cmp
insl
pop
pop
decl
pop
ljmp
pop
aaa
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
pushl
aaa
ljmp
cmp
jbe
pushl
inc
cmp
gs
push
incl
jns
test
js
inc
sub
pop
addr16
pushl
dec
ljmp
add
add
dec
sub
xor
push
inc
call
jae
jne
jge
mov
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
ljmp
cmp
jno
xor
inc
xor
and
cmp
incl
pop
call
pop
dec
push
dec
inc
xor
fimuls
sub
and
incl
dec
ljmp
cmp
jo
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jo
insb
pop
outsl
aaa
lcall
aaa
call
incl
xor
ljmp
push
addr16
js
test
pushl
sub
mov
ds
add
dec
cmpb
incl
decl
xor
lcall
dec
outsl
xor
imul
test
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jo
jno
outsl
aaa
lcall
aaa
lcall
incl
pop
call
jmp
and
pop
sub
and
decl
cmp
repnz
in
outsb
outsl
mov
cmp
aaa
outsl
pop
jo
decl
sub
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
outsl
lcall
outsl
outsb
pop
aaa
aaa
inc
jp
js
imul
test
jge
addr16
js
imul
incl
dec
decl
pop
incl
push
cmp
dec
add
jl
js
pop
push
pushl
sub
incl
cmp
outsb
jbe
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
jo
cmp
jno
lcall
aaa
lcall
lcall
pop
pushl
ljmp
cmp
pop
sub
loop
dec
push
jle
lcall
outsl
lcall
jo
pop
aaa
cmp
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
ss
sub
ljmp
pop
incl
push
js
imul
incl
lcall
incl
sub
sub
xor
sub
dec
cmp
ljmp
cmp
test
jl
mov
js
push
jns
cmp
je
incl
push
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
jb
repnz
insl
xor
in
dec
lcall
jle
jo
sub
pop
mov
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
pushl
ljmp
sub
addr16
ljmp
test
jp
xchg
lcall
jge
mov
dec
test
sub
add
ds
xorb
xor
lcall
ljmp
cmp
js
ljmp
test
jl
mov
lcall
jp
jns
xchg
outsl
outsl
aaa
outsl
pop
outsl
aaa
call
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
in
pushl
pop
loop
repnz
cmp
mov
outsl
dec
pop
sub
jle
outsb
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
push
sub
incl
test
js
addr16
js
addr16
sub
ljmp
xor
mov
add
dec
ds
pop
push
jl
sub
incl
xor
decl
test
js
addr16
js
addr16
insb
ljmp
pop
jns
xchg
lcall
outsl
lcall
outsl
outsl
push
aaa
xor
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
ljmp
aaa
ljmp
xor
cmp
jle
pushl
pop
lcall
jo
pop
aaa
pop
outsl
dec
cmp
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
pushl
outsl
pop
ljmp
pop
incl
imul
js
jge
js
incl
xor
imul
sub
dec
cmp
add
incl
addb
decl
push
jl
push
sub
addr16
js
incl
jle
arpl
ljmp
pushl
inc
outsl
aaa
pushl
pop
ljmp
push
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
insl
xor
lcall
aaa
lcall
decl
in
lcall
outsb
decl
aaa
cmp
pushl
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
aas
aaa
pop
incl
ljmp
sub
pop
jp
ljmp
je
decl
imul
addr16
ds
dec
inc
incl
inc
pushl
cmp
add
cmp
push
call
test
lcall
incl
js
test
js
imul
test
push
lcall
pop
ljmp
xor
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
insl
call
outsl
jb
xor
jo
mov
in
dec
loop
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
inc
sub
lcall
aaa
pushl
test
js
addr16
js
imul
addr16
js
test
incl
add
decl
sub
xor
sub
xor
xorb
ljmp
incl
addr16
js
addr16
jmp
test
js
test
incl
imul
insl
xor
pushl
pop
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
cmp
loop
xor
insl
pop
push
lcall
pop
decl
mov
sub
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
jno
pushl
pop
pushl
aas
pop
outsl
push
js
js
js
incl
test
xor
addr16
decl
sub
push
cmp
add
ljmp
sub
xor
cmp
xor
js
js
js
decl
test
js
addr16
js
addr16
jmp
xchg
js
test
lcall
ljmp
jae
adcl
pop
jo
call
xor
jle
pop
decl
jb
cmp
ljmp
jo
lcall
dec
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
je
pop
jo
lcall
aaa
call
lcall
push
ljmp
cmp
jno
ss
jp
ljmp
inc
je
incl
js
test
jge
sub
pop
dec
inc
decl
dec
cmp
add
add
ds
ljmp
xor
jl
ljmp
pop
mov
ljmp
push
js
test
js
addr16
addr16
js
incl
test
test
jns
addr16
js
push
imul
xchg
call
call
imul
jae
outsb
popa
in
repnz
pop
jle
decl
lcall
pop
pushl
aaa
pushl
aaa
aaa
jo
pushl
jb
pushl
pop
incl
push
incl
push
pop
outsl
ss
pop
jb
call
cmp
aas
xchg
test
js
imul
jge
jmp
mov
js
test
decl
sub
xor
sub
cmp
subb
add
incl
xor
incl
push
jl
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
xchg
subl
jns
gs
arpl
pop
pusha
pop
ljmp
je
incl
cmp
es
push
in
insl
loop
pop
xor
popa
xor
push
dec
xor
decl
decl
dec
decl
xor
pusha
jae
decl
imul
push
jp
aas
ljmp
pop
sub
xor
js
js
jp
pushl
incl
decl
imul
js
add
ljmp
ds
ljmp
dec
xor
cmp
inc
sub
xorb
js
js
jl
ljmp
push
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
push
incl
cmp
data16
repnz
pop
push
jp
push
xchg
ljmp
ljmp
pop
pusha
addr16
push
gs
jp
insb
pusha
pushl
pop
incl
mov
outsl
imul
push
je
ljmp
pop
incl
jp
xchg
js
inc
sub
pop
addr16
pushl
dec
ljmp
add
add
dec
sub
xor
push
inc
incl
jl
mov
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jbe
out
xchg
incl
vpmacssdql
jp
push
jnp
imul
xchg
jp
xchg
incl
jp
xchg
js
xor
imul
xchg
lcall
incl
ss
ljmp
imul
test
js
test
pushl
sub
mov
ds
add
dec
cmpb
incl
decl
xor
lcall
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
cmp
js
test
decl
cmpb
out
imul
pushl
pop
incl
js
addr16
js
addr16
jmp
xchg
js
test
lcall
outsl
call
jb
imul
jp
js
push
sub
decl
addr16
js
imul
incl
dec
decl
pop
incl
push
cmp
dec
add
jl
js
pop
push
pushl
sub
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
cmp
addr16
jp
pushl
push
imul
push
mov
incl
bound
test
jno
pop
jno
jo
jle
pusha
jle
jmp
jle
outsb
pusha
pushl
inc
ss
sub
ljmp
push
incl
push
js
imul
incl
lcall
incl
sub
sub
xor
sub
dec
cmp
ljmp
cmp
test
jl
mov
js
push
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
push
xorl
test
outsl
incl
out
jmp
bound
xchg
cmpsb
incl
stos
ljmp
mov
sbbl
movsl
jns
lcall
pushl
ljmp
sub
addr16
ljmp
test
jp
xchg
lcall
jge
mov
dec
test
sub
add
ds
xorb
xor
lcall
ljmp
cmp
js
ljmp
test
jl
mov
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
out
jp
xchg
jbe
subl
rol
icebp
xchg
popl
out
std
icebp
stc
jmp
idiv
std
div
push
push
std
jmp
cld
fcos
in
hlt
idivb
pop
jp
cmp
inc
incl
test
js
addr16
js
addr16
sub
ljmp
xor
mov
add
dec
ds
pop
push
jl
sub
incl
xor
decl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
andl
jbe
addr16
js
gs
xlat
ljmp
loopne
jp
test
sti
push
stc
clc
repnz
push
clc
lock
stc
clc
icebp
std
std
jmp
std
in
cmc
idiv
jmp
mov
cmp
lret
call
mov
ljmp
je
jp,pt
pop
sub
addr16
js
incl
xor
imul
sub
dec
cmp
add
incl
addb
decl
push
jl
push
sub
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
data16
js
incl
stc
ftst
jmp
jmp
icebp
lock
lock
clc
clc
clc
jmp
in
std
negb
pop
push
lcall
sub
and
call
imul
ljmp
je
decl
imul
addr16
ds
dec
inc
incl
inc
pushl
cmp
add
cmp
push
call
test
lcall
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
incl
addr16
test
out
lock
cld
push
jmp
clc
clc
jmp
repz
jmp
lock
fldt
xor
pushl
cmp
jl
jge
jmp
pushl
dec
push
pop
inc
imul
push
outsb
xor
pushl
test
js
addr16
js
imul
addr16
js
test
incl
add
decl
sub
xor
sub
xor
xorb
ljmp
incl
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
jmp
in
pushl
cmp
clc
stc
cld
lock
cld
xor
cwtl
cwtl
xchg
stc
cmp
aas
cmp
push
imul
pushw
imul
pop
jp
mov
pushl
aas
pop
outsl
push
js
js
js
incl
test
xor
addr16
decl
sub
push
cmp
add
ljmp
sub
xor
cmp
xor
js
js
js
decl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
addr16
js
incl
in
cld
addr16
data16
out
cmc
aam
push
std
ficompl
fcos
incl
sub
jnp
addr16
jns
incl
xchg
pop
dec
imul
push
ljmp
ss
jp
ljmp
inc
je
incl
js
test
jge
sub
pop
dec
inc
decl
dec
cmp
add
add
ds
ljmp
xor
subl
ljmp
imul
mov
jl
mov
jl
push
jl
push
mov
mov
mov
mov
jl
push
jl
push
jl
ljmp
mov
jl
mov
incl
imul
mov
xchg
push
pushl
cmp
ja
cmp
inc
cmp
jl
ljmp
mov
jg
mov
decl
outsb
jl
mov
jbe
ss
pop
jae
ljmp
dec
aas
mov
mov
jl
insl
jg
push
subb
jl
jl
mov
decl
sub
xor
sub
cmp
subb
add
incl
ss
inc
push
lcall
lcall
push
push
pop
push
call
push
push
pop
ljmp
pop
pop
push
push
pop
push
push
push
lcall
lcall
push
pop
push
call
push
push
xchg
call
sahf
aas
pop
push
pop
imul
ljmp
ljmp
push
lcall
push
pop
inc
call
pop
lcall
aas
call
dec
das
push
cmp
push
pop
push
pop
push
push
lcall
dec
ljmp
decl
push
lcall
cmp
sub
add
ljmp
dec
aaa
add
cmp
cmp
inc
sub
dec
sub
sub
xor
xor
xor
ljmp
sub
ljmp
sub
sub
sub
sub
xor
xor
sub
xor
sub
sub
sub
xor
xor
pushl
sub
jmp
sub
ljmp
sub
sub
jmp
cmp
pushl
sub
sub
sub
sub
sub
xor
xor
aaa
cmp
xor
ljmp
sub
sub
ljmp
sub
cmp
pushl
sub
sub
sub
xor
cmp
cmp
add
jmp
incl
ds
xor
pushl
xor
pushl
ds
incl
xor
inc
xor
xor
xor
xor
xor
inc
xor
incl
xor
incl
incl
inc
pushl
xor
xor
xor
xor
pushl
inc
pushl
inc
incl
xor
inc
xor
xor
xor
xor
xor
inc
xor
incl
xor
incl
incl
inc
pushl
xor
xor
xor
xor
pushl
inc
pushl
inc
incl
xor
inc
xor
xor
xor
xor
xor
ds
incl
incl
inc
pushl
xor
xor
xor
xor
pushl
inc
pushl
inc
aas
pushl
inc
xor
xor
xor
inc
push
inc
xor
add
decl
inc
add
aas
inc
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
xor
cmp
inc
cmp
decl
xor
inc
inc
xor
cmp
inc
call
dec
incl
incl
inc
cmp
cmp
cmp
cmp
inc
inc
cmp
push
cmp
add
add
add
add
add
add
addb
add
add
add
add
addb
add
add
add
addb
add
addb
add
add
addb
addb
add
addb
add
add
add
add
addb
add
add
add
addb
add
addb
add
add
addb
addb
add
addb
add
add
add
add
addb
add
add
add
addb
add
addb
add
add
addb
addb
add
addb
add
add
add
add
addb
add
add
add
subb
and
add
add
inc
add
addb
add
mov
add
add
bound
pusha
jne
dec
js
dec
pushl
pushl
jne
pusha
dec
dec
jmp
dec
dec
pusha
dec
decl
jne
jmp
jne
pushl
pusha
pushl
pusha
pusha
jne
dec
pusha
pusha
dec
pusha
jne
dec
pushl
dec
pushl
pushl
jne
pusha
dec
dec
jmp
dec
dec
pusha
dec
decl
jne
jmp
jne
pushl
pusha
pushl
pusha
pusha
jne
dec
pusha
pusha
dec
pusha
jne
dec
pushl
dec
pushl
mov
xor
dec
xor
xor
ljmp
xor
cmp
xor
cmp
das
das
xor
das
xor
cmp
cmp
pushl
das
das
pushl
xor
das
xor
ljmp
xor
cmp
xor
cmp
das
das
xor
das
xor
cmp
cmp
pushl
das
das
pushl
xor
das
xor
ljmp
xor
cmp
pop
pushl
inc
xor
inc
cmp
dec
push
dec
inc
incl
cmp
call
incl
push
decl
cmp
dec
dec
xor
dec
xor
xor
decl
dec
call
inc
decl
inc
inc
inc
cmp
dec
dec
inc
dec
push
dec
inc
call
inc
call
call
push
decl
inc
decl
inc
inc
dec
inc
incl
push
decl
push
call
dec
call
dec
dec
push
inc
inc
dec
cs
push
inc
inc
call
inc
call
lcall
je
push
dec
xor
xor
addr16
jmp
jns
js
test
lcall
outsl
lcall
jo
bound
inc
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
jmp
pop
ljmp
ljmp
inc
data16
lcall
test
ljmp
jne
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sub
cmp
pop
pushl
mov
je
dec
js
aaa
outsl
outsl
jae
incl
pop
lcall
pop
ljmp
aaa
ljmp
ss
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsb
insb
pop
ja
imul
incl
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
jo
dec
pop
cmp
popa
pushl
je
inc
pushl
mov
outsb
pushl
outsl
pop
ljmp
pop
inc
mov
lret
pop
mov
xchg
push
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
gs
pushl
insl
popa
ljmp
pop
incl
jno
jge
popa
js
addr16
js
incl
test
jl
test
jo
addr16
js
popa
dec
pop
dec
ljmp
sub
pop
call
pop
cmp
outsl
inc
dec
xor
js
pop
outsl
aaa
lcall
aaa
push
clc
clc
lock
out
lock
lock
jl
lcall
outsl
lcall
outsb
outsl
pop
aaa
outsl
outsl
ss
outsl
aaa
lcall
aaa
lcall
incl
pushw
addr16
jmp
test
js
test
jl
js
test
jo
addr16
dec
dec
mov
incl
lcall
push
ljmp
ljmp
aaa
lock
insl
in
clc
clc
lock
clc
lock
sti
out
popf
clc
lock
clc
cmc
lock
decl
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
incl
data16
pop
cmp
addr16
js
incl
jl
cmp
ljmp
js
dec
xor
decl
inc
mov
lcall
outsl
lcall
dec
outsl
dec
aaa
ss
lock
out
hlt
in
push
clc
ss
clc
clc
clc
lock
lock
lock
in
push
hlt
clc
clc
lcall
outsl
lcall
subb
push
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
incl
pop
ljmp
addr16
jmp
test
js
test
cmp
jo
jl
js
test
dec
xor
dec
je
dec
call
dec
mov
push
aaa
pop
ljmp
aaa
ljmp
xor
mov
clc
dec
clc
sar
clc
clc
lock
clc
lock
lock
clc
clc
lock
pushl
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
jg
pop
call
je
cmp
js
addr16
js
incl
cmp
push
popa
jl
dec
addr16
xor
mov
lcall
je
lcall
outsl
lcall
outsl
outsl
pop
aaa
ss
lock
out
hlt
out
gs
dec
clc
clc
clc
lock
lock
lock
push
sar
clc
clc
lcall
outsl
lcall
outsw
push
aaa
xor
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
incl
aaa
dec
lcall
data16
jmp
test
js
test
call
sub
dec
jl
popa
pop
push
dec
outsl
inc
xor
pushl
mov
aaa
pop
ljmp
aaa
ljmp
ss
lock
clc
js
insb
clc
clc
lock
clc
lock
fxch
popa
clc
lock
clc
shl
decl
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
jg
push
decl
outsl
jae
ss
js
addr16
js
incl
push
pushl
lcall
dec
decl
dec
dec
jno
pushl
push
imul
outsl
lcall
outsl
outsl
pop
aaa
aaa
imul
call
xor
clc
lock
lock
lock
popa
das
in
fmuls
clc
shl
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
incl
push
jmp
addr16
jmp
jl
js
test
pushl
call
sub
xor
outsl
pop
push
dec
incl
xor
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
sub
pushl
pop
dec
ljmp
pop
pushl
incl
jle
dec
popa
das
outsl
rcr
enter
aaa
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
incl
insb
js
inc
xor
test
incl
je
inc
dec
push
pushl
sub
xor
push
decl
jb
call
pop
lcall
outsl
lcall
outsb
outsl
pop
aaa
outsl
insl
ss
outsl
aaa
lcall
aaa
call
lcall
dec
ljmp
xor
fs
cmp
outsl
aaa
dec
popa
pop
fmuls
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
incl
data16
js
addr16
sub
cmp
js
test
mov
je
dec
xor
dec
push
ja
jo
js
lcall
dec
ljmp
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
jb
aaa
aaa
fsubrs
outsl
dec
popa
das
call
pop
enter
pop
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
incl
dec
js
addr16
jl
popa
incl
inc
lcall
je
push
dec
xor
xor
addr16
jmp
cmp
js
test
lcall
outsb
lcall
outsb
outsl
addr16
outsl
outsl
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
aaa
pop
fdivs
cmp
jb
enter
ljmp
outsl
pop
jmp
dec
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
outsl
aaa
dec
pop
outsl
aaa
lcall
aaa
decl
incl
addr16
js
addr16
sub
cmp
pop
pushl
mov
je
dec
js
addr16
js
incl
pop
lcall
insb
ljmp
aaa
ljmp
aaa
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
call
pushl
pop
enter
cmp
popa
outsl
aaa
outsl
pop
outsl
aaa
decl
das
lcall
lcall
pop
ljmp
aaa
ljmp
aaa
aaa
dec
cmp
ljmp
pop
incl
js
test
jo
dec
pop
cmp
popa
pushl
test
inc
js
dec
mov
js
jmp
test
js
test
lcall
pushl
ja
sbbl
outsl
aaa
outsl
pop
outsl
aaa
lcall
ss
lcall
decl
pop
jmp
enter
das
aaa
outsl
aaa
pushl
outsl
pop
ljmp
pop
lcall
outsl
lcall
outsl
outsl
pop
aaa
aaa
outsl
dec
cmp
lcall
aaa
incl
pushl
addr16
js
popa
dec
pop
dec
ljmp
sub
test
push
lcall
xor
dec
xor
addr16
js
incl
jg
push
addr16
je
dec
outsl
aaa
cmp
ljmp
pop
decl
fdivr
shrb
jb
pop
enter
aaa
outsl
pop
outsl
aaa
lcall
aaa
lcall
call
pop
ljmp
ljmp
cmp
dec
test
ljmp
pop
jl
js
test
jo
addr16
dec
dec
mov
incl
incl
addr16
js
addr16
jmp
test
js
test
incl
data16
test
jno
cmp
jl
pusha
lcall
pop
enter
cmp
jmp
aaa
ss
push
ljmp
pop
lcall
dec
decl
push
imul
js
js
dec
cmp
incl
ljmp
js
dec
xor
decl
inc
mov
incl
push
js
addr16
js
addr16
js
incl
test
test
js
addr16
js
outsl
pusha
jmp
jns
js
test
lcall
push
call
xlat
pop
roll
pop
pop
push
insl
popa
pop
dec
lcall
inc
js
lcall
cmp
pop
aas
pushl
aaa
addr16
cmp
dec
test
cmp
jo
jl
js
test
dec
xor
push
je
dec
call
dec
mov
test
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
push
test
incl
test
test
js
addr16
js
addr16
jmp
test
js
test
lcall
jo
pusha
aaa
js
test
addr16
js
js
js
decl
cmp
call
jl
dec
addr16
xor
mov
lcall
je
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
int3
jmp
js
test
incl
imul
addr16
js
incl
pop
decl
pusha
decl
aaa
ljmp
cmp
addr16
js
test
call
sub
dec
jl
popa
pop
push
dec
js
xor
pushl
mov
addr16
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
js
int3
imul
je
inc
sbbl
mov
movsl
pushl
ret
decl
js
arpl
js
js
jo
js
incl
push
pushl
lcall
dec
decl
dec
dec
js
pushl
push
test
incl
js
test
js
addr16
js
incl
test
test
js
addr16
js
addr16
sar
push
jp
test
clc
clc
lock
clc
lock
stc
in
loope
icebp
clc
hlt
lock
fisttpll
test
js
cmp
addr16
jmp
jl
js
test
pushl
call
sub
xor
js
push
dec
incl
xor
incl
js
addr16
js
addr16
jmp
test
js
test
incl
js
test
ja
lock
idiv
out
incl
clc
idiv
mov
clc
mov
scas
cmp
jmp
aaa
ljmp
imul
test
dec
decl
pop
js
cmp
sub
test
cmp
dec
push
pushl
sub
xor
decl
test
call
pop
incl
js
test
js
addr16
js
incl
test
andl
js
addr16
js
addr16
lock
out
clc
cld
clc
idiv
lcall
push
call
enter
mov
xorb
ja
pop
lcall
incl
addr16
js
addr16
sub
cmp
js
test
mov
jae
dec
xor
dec
push
js
js
js
lcall
dec
incl
js
addr16
js
addr16
jmp
test
js
test
incl
addr16
test
cld
test
hlt
stc
in
push
test
decl
incl
pushw
addr16
outsl
aaa
jmp
pop
js
test
incl
dec
js
addr16
jl
popa
incl
inc
call
jae
dec
dec
xor
xor
pop
gs
lcall
jno
jmp
jno
pushl
pushl
gs
pop
gs
gs
pop
pushl
pop
pushl
inc
pop
jno
pop
pop
jmp
mov
push
dec
jo
lcall
pushl
pushl
gs
pop
gs
xor
push
pusha
cmp
jb
pop
decl
pushl
jno
cmp
gs
cs
dec
call
lcall
imul
cmp
xor
jae
dec
cs
cs
cmp
cs
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
cs
cs
cmp
das
cmp
cmp
cmp
cs
cs
cs
ljmp
cmp
cmp
cs
cmp
cs
cs
dec
push
cmp
das
cmp
jmp
inc
xor
cmp
mov
cmp
cmp
inc
cmp
incl
incl
cmp
cmp
cmp
inc
cmp
incl
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
incl
cmp
inc
xor
xor
inc
inc
cmp
cmp
incl
incl
cmp
cmp
cmp
cmp
add
cmp
cmp
add
add
add
add
or
add
add
subb
and
add
test
add
add
xor
add
adc
and
test
and
add
add
push
push
add
add
add
add
inc
add
dec
pop
push
add
dec
dec
inc
dec
add
add
add
add
incb
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
add
data16
add
xor
add
add
add
movb
add
add
xor
add
cmp
add
inc
outsl
insl
jo
add
add
adc
add
add
add
add
popa
add
gs
add
push
add
popa
add
push
outsl
and
insb
outsb
outsl
imul
add
insb
add
jae
add
inc
inc
gs
insb
add
add
add
add
add
add
je
jo
outsl
push
gs
add
add
add
add
add
add
add
jae
add
push
je
outsl
add
add
outsl
add
outsb
insb
add
jae
gs
add
add
add
add
add
add
add
jb
add
add
aaa
add
xor
add
add
add
add
add
xor
add
xor
ja
outsb
add
sub
add
add
add
add
jb
add
aaa
insl
add
xor
sub
add
cmp
add
add
add
add
add
sub
xor
add
dec
add
add
add
add
add
popa
add
popa
jb
add
jae
add
jo
add
add
add
add
add
aaa
gs
add
js
popa
insb
inc
add
add
add
add
add
jns
add
imul
push
add
test
add
add
add
outsl
add
insb
jb
add
and
imul
add
add
add
add
add
inc
add
outsb
jb
je
add
add
add
add
add
add
add
insb
outsl
inc
add
outsb
insb
addr16
add
add
add
add
add
jb
add
jae
and
add
add
add
add
add
add
add
add
imul
insb
inc
imul
add
add
add
add
add
insl
add
add
gs
jae
add
add
add
add
add
add
add
and
dec
add
add
outsl
add
add
add
add
dec
popa
add
add
jae
data16
add
add
add
add
add
add
outsb
je
add
fs
and
ja
add
add
add
add
add
add
je
popa
outsb
jns
je
and
add
add
add
add
add
add
gs
add
insl
add
add
add
add
add
add
add
add
jae
jb
outsl
xor
add
add
add
add
add
add
add
xor
add
ss
inc
add
add
add
add
add
add
push
add
inc
add
popa
add
outsw
add
add
add
add
add
and
add
add
jb
popa
je
outsb
jae
add
popa
add
add
add
add
or
add
outsl
mov
bound
add
add
outsb
insb
insl
outsb
jb
and
jae
cmp
popa
arpl
arpl
outsl
insl
popa
insl
sub
cmp
imul
popa
jae
xor
push
and
and
outsb
xor
jb
jae
jne
outsb
cmp
je
or
cmp
insb
insl
outsb
jb
and
jae
cmp
popa
arpl
arpl
outsl
insl
popa
insl
sub
cmp
data16
jae
or
and
and
gs
jns
arpl
jne
jb
gs
gs
and
jne
push
gs
or
jbe
cmp
jne
and
jno
jb
and
arpl
fs
jae
je
outsb
gs
dec
jbe
insb
jbe
inc
insl
outsb
imul
gs
and
je
outsl
imul
popa
jae
cmp
insb
gs
jae
inc
jno
jne
cmp
das
gs
dec
jbe
imul
jne
and
and
and
cmp
and
jno
jbe
gs
imul
and
das
or
and
jae
or
imul
jns
cmp
outsl
or
das
data16
jb
outsb
arpl
jo
and
cmp
cmp
and
and
fs
bound
je
insb
fs
gs
and
and
and
cmp
and
outsb
imul
je
gs
and
and
outsb
jns
jo
imul
outsb
arpl
insl
outsl
outsl
jae
imul
fs
outsb
jb
sub
je
outsl
outsl
jae
cmp
and
outsb
and
jo,pn
xor
and
jb
and
jae
gs
inc
arpl
je
push
imul
jne
and
outsl
push
imul
cmp
arpl
xor
xor
popaw
and
addr16
insb
sub
jns
das
jae
and
jae
dec
or
imul
outsb
and
je
fs
and
das
inc
or
bound
and
jae
gs
arpl
gs
jns
outsb
fs
popa
jae
or
gs
add
add
add
add
add
add
push
add
std
add
add
inc
insl
add
popa
add
add
pop
add
arpl
add
add
jmp
add
add
add
add
add
add
mov
js
sldt
js
add
add
add
verw
str
add
add
add
add
add
jns
add
add
add
sldt
add
add
sldt
add
add
jns
xchg
add
add
je
sldt
add
mov
jns
add
jns
add
add
fdivr
jns
sldt
add
add
add
add
add
add
add
add
str
add
incl
incl
add
jbe
addb
cmove
sete
incl
add
incl
jbe
add
pcmpeqd
decl
add
add
setl
add
jbe
add
js
incl
decl
add
add
add
jbe
sldt
pushl
jbe
jns
mov
ud0
add
jns
incl
incl
add
add
mov
add
ud0
add
jbe
add
jbe
jns
add
push
add
sldt
add
int3
add
add
jbe
add
jbe
test
jns
dec
decl
call
ljmp
jbe
sldt
jns
add
pcmpeqd
add
ltr
aam
paddusb
call
jbe
add
jns
add
incl
add
jmp
pushl
paddsb
jbe
jns
sldt
add
jbe
in
add
add
incl
incl
add
add
add
hlt
add
sbb
jp
cmp
cld
incl
add
incl
jbe
add
add
add
sldt
add
add
imul
add
add
add
outsb
insb
add
xor
add
add
jns
popa
dec
jb
jb
imul
add
add
je
add
push
jae
add
add
imul
jb
je
jne
insb
jb
je
jne
add
popa
imul
dec
inc
add
add
dec
popa
add
add
insl
add
add
dec
push
pop
gs
dec
inc
add
add
dec
outsb
add
push
add
insb
insb
add
push
add
add
popa
push
insb
add
gs
add
dec
push
add
push
inc
inc
add
imul
inc
fs
inc
add
insl
inc
push
add
popa
push
insb
add
dec
add
dec
insb
dec
gs
outsb
gs
push
outsl
je
inc
imul
jp
outsb
add
outsl
push
insb
add
xor
add
dec
fs
inc
outsb
add
inc
popa
insb
add
gs
xor
add
push
cs
add
push
je
push
add
outsb
outsb
cs
add
xor
add
inc
add
gs
arpl
add
inc
inc
xor
dec
xor
dec
add
add
add
add
add
push
dec
insl
inc
imul
gs
cs
inc
push
push
add
inc
dec
inc
insb
gs
imul
add
je
inc
add
imul
je
insl
outsb
add
cs
inc
dec
dec
add
add
je
insb
dec
push
inc
insb
add
add
cs
outsl
add
xor
add
imul
outsb
add
je
add
gs
imul
insb
add
xor
add
push
fs
add
insb
add
xor
xor
jb
gs
je
insl
add
gs
dec
dec
push
add
add
inc
push
add
outsb
je
insb
add
imul
outsb
push
jae
jne
gs
out
cmc
xchg
sets
mov
pop
push
andb
push
add
mov
xchg
and
pop
orl
mov
add
or
push
mov
add
push
xor
push
js
push
jecxz
or
cmp
enter
mov
mov
sbb
fiadds
loopne
xor
sbb
jl
and
and
jecxz
mov
mov
nop
add
sti
sub
and
mov
or
dec
dec
xor
stos
maxps
sub
add
shl
orl
shl
add
xorl
pop
pop
les
push
xor
and
mov
rorl
ror
lea
sbb
xchg
les
inc
inc
push
or
loopne
mov
pop
cmpsl
repz
cmp
orl
scas
sub
jne
fldpi
lods
stc
out
add
add
mov
cmp
sbb
sbb
insl
roll
ret
jecxz
push
or
cmp
xor
sti
jo
or
imul
std
add
sbb
lea
sub
inc
jg
cmpsb
or
and
sub
ret
or
lea
jecxz
or
scas
cmp
sub
mov
cmp
mull
pop
push
aas
push
stc
mov
stos
clc
jae
notl
mov
adc
jge
subb
inc
test
cli
sbb
xchg
sbb
pop
dec
shld
sbb
icebp
xchg
mov
cmp
push
xchg
inc
xchg
mov
adc
iret
jmp
mov
adc
bound
add
mov
and
jl
and
and
jmp
xor
test
adc
movl
pop
mov
jmp
sbb
test
lahf
add
pusha
adc
adc
adc
ffree
repz
add
nop
ret
jmp
mov
xor
xchg
mov
enter
fs
lods
ljmp
xchg
xor
les
bnd
call
shlb
push
int3
pushf
cltd
xor
rol
xlat
shrd
mov
sub
sub
aas
lea
stos
push
dec
adc
xchg
xor
loop
add
lret
dec
adc
and
mov
repnz
sub
orb
adc
and
or
icebp
enter
add
push
push
push
mov
ror
xchg
pushf
sub
mov
adc
sar
or
and
and
sbb
in
dec
or
adc
adc
add
test
ret
mov
add
aad
inc
mov
sub
or
aad
dec
sbb
add
outsl
andl
cmp
std
or
pop
push
and
sub
dec
std
std
sub
roll
mov
pop
sbb
sahf
xor
and
xchg
sahf
inc
cmp
les
dec
mov
inc
repz
std
mov
stos
adc
cld
mov
sarl
push
inc
jmp
or
jp
in
orb
push
mov
inc
push
mov
adc
pop
dec
cltd
mov
lea
loopne
jecxz
or
jmp
orb
or
xor
xlat
adc
push
inc
mov
xor
sub
add
enter
pop
mov
ret
xor
or
negb
inc
fstl
and
aaa
or
nop
cltd
mov
adc
outsb
pop
cltd
pop
fnsave
add
jne
mov
rorl
fldl
or
sub
popf
inc
add
pop
out
sti
sbb
les
mov
aad
pushf
sahf
mov
lea
or
sub
movsb
scas
push
mov
jae
insl
stos
xlat
or
jb
mov
and
adc
push
jle
dec
popa
fsubr
fidivrl
inc
lret
pusha
in
add
int
push
stc
push
mov
rcll
aas
leave
mov
xor
jge
xchg
dec
cwtl
add
jmp
sbb
add
in
lock
or
fcmovnbe
jl
xchg
frstor
xor
or
addb
clc
xchg
loopne
push
lea
movsl
adcb
shll
push
pop
push
test
sub
clc
out
add
sbb
in
jmp
ja
cmp
ret
mov
add
mov
and
dec
jne
fildl
pop
xchg
sbb
jb
ficomps
call
or
adc
int3
dec
adc
add
js
xor
or
rclb
cwtl
sub
mov
in
dec
or
add
not
lret
push
push
leave
cmp
add
lret
jo
mov
push
cmpl
aam
les
mov
jmp
push
push
mov
cmpxchg8b
push
or
fisttpl
xor
fiaddl
mov
sahf
cltd
aaa
pop
rcll
lahf
ret
cmpsb
mov
movsb
cmp
in
roll
rcll
addb
or
ret
xor
rorb
inc
mov
ror
stos
test
pop
xor
loop
inc
test
pop
or
setno
test
dec
inc
mov
out
loop
or
mov
mov
clc
cmp
loope
adc
arpl
or
adc
cli
xor
ds
ficoml
add
rclb
or
xlat
lcall
into
cmpxchg
adc
sub
push
inc
fsubr
cmp
pop
in
adc
push
add
push
or
add
inc
or
mov
push
fwait
lret
or
sbb
nop
xorl
lods
sub
jnp
jno
pop
jae
dec
inc
je
xchg
popa
iret
jnp
inc
repnz
andl
add
out
add
pop
push
sbb
call
inc
mov
dec
sbb
sbb
inc
xchg
dec
sub
or
daa
test
push
mov
roll
movaps
sub
mov
sub
push
jmp
xor
dec
inc
or
add
cmp
addl
cwtl
jnp
sub
jbe
leave
mov
lea
cld
pusha
push
inc
cmpb
jmp
test
push
jg
push
xor
push
es
or
sbb
sub
aas
xchg
cmp
enter
ror
stos
test
push
adc
dec
aaa
inc
fiadds
inc
push
inc
or
jmp
insb
lcall
rclb
or
push
mov
sbb
mov
push
sub
pop
leave
rorb
mov
pop
mov
add
dec
call
pop
cld
cmp
int3
add
jmp
push
add
pop
inc
orl
xchg
test
mov
fnsave
pop
add
jbe
sti
ret
push
jne
and
test
xor
fnsave
jle
pop
lods
jne
sbb
and
data16
or
loope
push
jge
das
scas
pop
leave
inc
pop
ja
cmp
ret
cmp
hlt
xorb
pop
js
repz
push
mov
add
ljmp
andl
lods
pop
cmp
inc
in
sbbl
mov
jge
jg
adc
das
or
roll
and
pop
jne
sbb
xorb
jmp
mov
xchg
enter
pop
or
jmp
or
pop
and
call
push
jo
or
push
pop
pop
je
xchg
ds
pop
push
cmp
pusha
mov
push
xor
add
clc
sbb
out
jne
stos
inc
pop
in
cld
inc
lods
test
xor
insb
inc
pop
iret
xor
testb
repnz
cmp
pop
sub
je
rclb
inc
call
sub
and
mov
cmp
sbb
or
ret
pop
push
inc
enter
mov
or
sub
stos
je
xor
cmp
std
xchg
pop
popa
pop
jmp
js
push
in
data16
pop
ret
add
sub
cmpsl
call
push
nop
push
aas
in
mul
out
pop
adc
push
xchg
ficoms
adc
je
dec
clc
xchg
or
leave
jge
pushf
sub
movsl
sti
roll
rcrl
cli
push
iret
sbb
push
movsb
add
pusha
xor
adc
lret
xor
jne
dec
test
mov
aaa
add
push
pushf
push
lcall
adc
mov
push
mov
sub
mov
outsb
gs
add
pusha
shlb
sbb
xor
dec
daa
or
push
das
ror
xchg
std
push
inc
test
cmpl
test
adc
and
negb
pop
cmp
jmp
cli
fstl
fimull
jmp
push
inc
sbb
jne
push
fwait
out
movsl
das
imul
xor
pop
movsb
jb
fimull
movl
mov
lret
fwait
sub
or
mov
push
test
push
or
dec
hlt
inc
cmpsb
add
push
or
jmp
push
jle
adc
call
inc
and
outsb
jge
dec
add
inc
mov
lret
adc
jmp
lds
mov
mov
xchg
rorb
mov
je
lods
aas
dec
rclb
and
mov
sbb
adc
lret
mov
mulb
mov
test
repnz
lahf
dec
and
push
inc
movsb
push
mov
mov
addb
jmp
cmp
push
cmp
pop
xchg
xor
roll
cmp
out
jb
inc
pop
outsl
dec
push
push
inc
pop
mov
cld
lods
jne
stos
lods
pusha
icebp
imul
mov
dec
add
or
add
push
cmp
or
xchg
pop
xchg
movsl
sbb
or
inc
lea
sbb
jl
adc
adcl
ror
push
loope
roll
mov
jne
pop
jbe
push
sti
out
test
adc
js
mov
negb
test
jbe
sub
mov
xchg
adc
cwtl
xor
sarb
sub
jb
mov
pop
mov
adc
insl
fdivs
add
cmp
inc
outsb
arpl
and
pop
je
jno
jne
adc
in
mov
fdivrs
pop
addr16
cmp
adc
mov
and
bound
ss
in
push
cmc
fcomip
imul
xor
inc
fs
xchg
dec
jne
fiaddl
sub
addr16
ja
inc
out
popa
mov
ss
fwait
data16
test
imul
cwtl
push
je
fadds
js
imul
jle
dec
jp
loopne
sbb
dec
jp
addl
mov
push
cmp
mov
hlt
jb
je
and
leave
lret
inc
mov
cmp
pop
inc
adc
popf
cmp
mov
mov
xchg
sbb
pop
pop
lea
xor
cld
je
and
add
leave
insl
call
mov
add
rcrb
add
fs
call
mov
jae
and
mov
aam
add
jne
add
call
add
lods
call
add
add
xchg
rorl
adc
loopne
dec
je
dec
lods
jge
or
add
add
xorb
addl
inc
cld
add
movsb
jmp
push
negl
repz
add
add
rolb
inc
call
adc
call
jb
sbb
and
sub
and
mov
or
add
jp
sldt
daa
add
add
jbe
jbe
xchg
mov
str
sldt
jbe
add
jbe
add
lea
mov
inc
or
addl
jmp
push
ret
push
dec
mov
js
ret
sub
lret
les
add
add
lea
mov
push
push
push
sbb
add
push
call
mov
call
adc
shrb
add
mov
mov
inc
push
mov
add
or
ret
inc
push
push
add
push
repnz
lea
clc
mov
rcll
mov
push
mov
add
dec
cld
or
adc
mov
test
decl
jmp
add
adc
pop
push
pop
pop
mov
pop
add
pop
incl
add
add
add
loopne
add
or
add
lcall
shrl
add
fiaddl
stos
jns
fs
mov
lock
inc
cmpsb
pop
mov
mov
notb
xchg
stc
inc
imul
xchg
mov
mov
pop
pop
mov
xlat
inc
xchg
jnp
sub
sbb
and
push
out
jne
repz
or
mov
int
rcrb
or
mov
outsl
lret
into
xchg
add
enter
shl
xor
lock
loopne
les
sub
xchg
shrb
jmp
andl
lods
inc
push
pop
adc
test
or
test
mov
insl
mov
call
or
gs
push
lods
push
cmp
aaa
cwtl
dec
les
es
mov
cmc
xor
push
add
xor
xor
das
xchg
jnp
inc
daa
and
je
sbb
inc
cs
and
xor
mov
fnop
popa
cmpsb
fwait
add
hlt
push
push
rolb
or
pusha
push
aad
mov
jo
jmp
ljmp
inc
out
adc
test
shll
xor
pop
shl
stos
push
mov
shll
jg
imul
mov
push
clc
push
lods
movsb
xchg
shlb
jb
dec
xor
and
adc
mov
add
fsubl
iret
mov
in
push
fdivrs
jecxz
xchg
push
stos
icebp
imul
inc
into
pop
mov
xor
loop
cli
xchg
test
mov
mov
sub
push
jp
push
jae
xchg
loopne
dec
cli
sbb
jae
je
sti
xchg
ljmp
iret
xchg
enter
or
push
dec
test
or
imul
xor
mov
cli
dec
sti
pushf
pop
cmc
push
adcl
div
and
daa
dec
lods
push
call
mov
popf
icebp
xchg
jbe
lahf
sbb
mov
push
xor
jge
lock
ja
movsb
imul
fdiv
popf
add
in
cmp
jmp
cmpsl
mov
int3
sahf
or
mov
xor
addb
leave
mov
push
xlat
into
mov
mov
rcll
mov
enter
fs
push
and
inc
lcall
testb
mov
test
mov
scas
cmp
inc
lock
push
cmpsb
loope
scas
jne
sahf
int3
inc
repnz
inc
lahf
inc
mov
out
dec
ret
scas
xor
stos
lods
mov
mov
rorb
jmp
pop
xor
push
icebp
stos
pop
stos
into
add
shll
jecxz
aas
daa
pop
xchg
or
cmp
insl
jmp
test
xchg
sub
ja
adc
mov
inc
dec
cmpsb
pop
xor
adc
dec
popf
clc
hlt
insl
mov
and
dec
add
pop
out
insl
idivl
in
outsl
ficompl
xorl
shrb
jae
popf
sub
jge
mov
popf
pop
jo
sub
jne
jo
hlt
cltd
dec
cmpl
setp
imulb
mov
divl
test
das
loope
stc
sbbb
das
add
insb
clc
mov
loope
test
ja
ficomps
out
adc
pop
jno
dec
xorl
loope
add
mov
stos
into
add
adc
inc
mov
mov
jle
popf
mov
xchg
clc
jne
mov
or
mov
ret
pusha
cmp
cltd
add
sbb
add
or
adc
je
mov
scas
push
test
adc
addl
dec
mov
pop
stc
mov
es
insb
rorl
mov
mov
mov
jle
in
add
mov
pop
lret
or
mov
cltd
cmp
jmp
psubb
out
inc
jmp
mov
or
pop
in
mov
movsl
add
aad
add
mov
call
jge
lret
cmp
cld
cli
es
fdivrs
scas
mov
pop
fcompl
sbbl
fnsave
mov
xchg
add
sub
in
loopne
into
dec
mov
push
daa
leave
hlt
out
stc
dec
fisubs
fnstsw
push
mov
dec
xchg
pop
popa
push
inc
pop
and
or
mov
movsb
ljmp
mov
ss
cmp
sub
fnstenv
icebp
fnstcw
adcb
sub
xchg
mov
inc
inc
fdivs
mov
mov
lea
notb
inc
mov
inc
sbb
and
repnz
dec
mulb
sub
mov
cmpsl
lods
sub
in
or
imull
lret
cmp
jne
add
fildl
cli
lcall
int
xor
pop
push
sub
jnp
or
sbb
ds
fistpll
mov
pop
test
adc
ret
jle
cmp
scas
push
test
cld
popa
xor
imul
hlt
iret
and
push
stos
and
loope
jmp
pop
push
and
repnz
aad
inc
popf
mov
jmp
and
jnp
xor
mov
shrl
jle
mov
aam
mov
cmc
dec
cs
loopne
into
fsubs
pop
and
mov
xchg
pop
repnz
cli
sub
fsubrs
cmc
shrd
jle
ret
insb
je
out
pop
cld
inc
sti
pop
xchg
dec
in
jbe
mov
loope
mov
outsl
sbb
aaa
leave
pushf
push
mov
or
pop
xchg
mov
aaa
add
mov
jle
or
adc
fiaddl
aad
hlt
or
lods
popf
imul
xchg
xchg
push
leave
xlat
loop
icebp
sbb
dec
or
xlat
orl
fcmovnbe
out
ss
mov
and
xchg
test
dec
rol
inc
repz
icebp
add
sub
inc
sahf
stos
push
pop
xchg
daa
adc
pushf
mov
sub
nop
jl
sbb
adc
mov
out
jge
rcr
jo
or
xor
cltd
sub
out
sub
daa
iret
lret
movsl
add
pop
pop
xor
repz
cmp
loopne
dec
fildl
xor
ret
and
dec
jne
and
cs
sbb
into
cwtl
jae
leave
movsb
sub
xor
add
sub
push
add
test
pop
pop
sbb
std
div
cmp
ret
inc
loop
fsubrp
sbb
test
pop
lret
cmp
push
stos
or
repnz
mov
pop
in
xchg
imul
lea
aad
sbb
sub
sub
pop
mov
sbb
pop
or
push
lahf
rclb
add
insl
out
cmpsb
enter
mov
dec
mov
jbe
jns
inc
jle
out
adc
lods
add
popa
push
pop
movsb
lahf
dec
dec
inc
dec
mov
mov
shll
mov
aaa
add
xor
aam
push
test
loopne
push
fistpl
in
daa
pop
and
mov
dec
dec
repz
inc
pop
fadds
jnp
sbb
in
mov
shrl
push
mov
xchg
mov
jae
jecxz
aaa
or
jae
bound
push
mov
push
fs
ja
or
scas
mov
adc
jp
jg
and
jp
adc
and
scas
mov
rclb
cli
xchg
mov
ds
inc
xlat
dec
mov
pushf
push
push
add
lcall
fldt
jne
dec
es
sbb
jne
xchg
addr16
pop
jmp
mov
frstor
push
movsb
inc
dec
mov
push
inc
xor
rolb
repz
outsb
sub
das
xchg
jmp
mov
mov
adc
cmp
inc
mov
cwtl
negl
lahf
xor
mov
sbb
push
les
inc
mov
fcoml
inc
ret
cs
fdivrl
jp
adc
push
push
push
adc
or
xchg
push
pop
test
inc
jne
jne
sub
insb
push
jmp
or
loop
fldenv
out
push
sub
xchg
cmp
pushf
addl
jmp
imul
mov
call
pop
mov
mov
jle
or
and
shlb
dec
out
inc
ret
pop
loopne
sbb
or
shrd
bound
fdivp
cltd
mov
pop
cmp
inc
insl
iret
pop
sbb
fldl
sahf
mov
jg
pushf
add
jl
fwait
pop
insl
mov
pusha
add
adc
jmp
fdiv
sub
movsb
push
pop
pop
xchg
in
cmpl
adc
mov
icebp
mov
jle
jo
cmc
push
lret
mov
lock
call
xchg
and
pop
loopne
lods
sub
mov
test
push
loope
inc
loop
sub
mov
and
vmwrite
stos
or
mulb
cmp
movsb
repz
jae
push
loop
lcall
dec
and
sbb
jp
sbbb
push
divl
dec
and
ret
dec
fwait
jns
xor
adc
arpl
movsb
aad
int3
ja
cmpsb
push
in
xchg
ret
cmp
cmp
fistl
mov
in
sub
push
popa
push
lock
mov
mov
xchg
out
mov
icebp
adc
pop
loop
enter
pop
mov
or
pop
and
in
push
fisubs
cmp
sub
xor
fsubrl
adc
stc
lods
scas
data16
imul
push
in
icebp
and
cmpb
push
cmp
stos
aam
test
das
lcall
out
ret
sub
add
leave
jecxz
dec
inc
mov
and
push
fsts
cld
or
pop
pop
mov
out
rcrl
sub
imul
pop
repz
or
jg
push
pop
jge
lahf
xchg
cltd
aaa
call
lods
sbb
cmc
mov
rep
ret
add
adc
sub
repnz
cmp
xchg
xchg
or
rcrl
jp
sub
nop
sub
fwait
std
jae
and
ret
pop
pop
loope
pop
or
out
sahf
int
xor
ja
dec
scas
les
les
add
jmp
push
push
and
jno
dec
fsubrl
notb
imul
mov
dec
and
ljmp
inc
mov
or
int3
mov
cmc
or
sbb
sub
mov
inc
mov
fucomp
xor
inc
into
xchg
fdivr
jge
loop
sbb
push
push
hlt
cld
push
mov
jle
pop
inc
movsb
and
mov
shll
ffreep
cli
cmp
mov
lcall
xchg
call
and
push
or
or
popf
mov
es
test
je
insl
lahf
xor
mov
sub
xchg
shll
aaa
sub
enter
adc
cmp
shrb
pop
jmp
fwait
ret
mov
test
xlat
xchg
pop
adc
scas
lods
loop
mov
xchg
fsubr
xor
and
xchg
jae
and
pusha
ss
lcall
scas
call
and
mov
filds
mov
std
adc
cmp
add
inc
dec
les
cmp
je
pop
hlt
faddl
push
or
scas
mov
jno
sbb
push
jns
jmp
push
fldl2t
mov
jns
shrb
rcrl
pop
cmpsb
xor
xchg
out
lock
jl
push
fisttps
lret
movsb
dec
push
je
dec
jb
xchg
jecxz
mov
inc
movsb
mov
fisubrl
bound
mov
push
icebp
hlt
mov
cs
and
fwait
shlb
cmp
push
and
and
or
cvtpi2ps
lds
hlt
mov
je
xchg
test
scas
lea
dec
xchg
aaa
push
ftst
loopne
push
add
loop
dec
sbb
std
mov
in
pop
jle
dec
pop
or
out
and
dec
adc
and
sub
push
aaa
jecxz
jl
xor
pop
jno
gs
out
jg
test
fs
xchg
push
je
or
ljmp
lret
adc
idivl
movsb
rcrl
bound
add
lock
orl
cmpsl
inc
incl
std
loopne
mov
inc
mov
repnz
leave
and
xlat
cmpsb
jnp
into
sub
ret
adc
pop
add
mov
mov
xlat
leave
push
repz
inc
fcoml
test
aas
fldcw
or
out
sbb
mov
es
in
addl
jg
loope
sarl
rclb
cmpsl
sbb
sbb
xor
scas
fidivl
out
or
mov
sbb
ja
push
out
ds
mov
dec
call
iret
or
mov
add
add
cmp
cwtl
dec
cmpsb
enter
sub
into
aam
rcrl
icebp
jg
add
daa
mov
mov
xor
fcomps
loop
mov
imul
jmp
mov
jnp
cltd
cwtl
stos
sub
jb
movsl
sub
xchg
out
cli
inc
inc
push
ret
mov
sbb
aas
and
mov
arpl
xor
gs
mov
add
andb
pusha
fstps
mov
out
cmpsb
push
fldl
xor
lods
cmp
add
add
mov
pusha
cmp
enter
dec
divl
nop
jl
out
jb
mov
sahf
mov
shlb
js
inc
mov
adc
xlat
jmp
push
inc
pop
jecxz
lcall
push
lret
pop
cli
scas
repz
fstpl
fstpl
call
cli
jp
pop
cmp
sbb
cmc
mov
push
jb
lods
mov
cltd
add
ja
xchg
and
inc
dec
rcll
leave
filds
and
jp
into
xor
pop
enter
iret
clc
jg
in
mov
mov
pusha
adc
and
pop
rcrl
push
mov
mov
push
outsb
dec
rcr
adc
mov
ja
inc
test
idiv
jp
mov
fcomi
cmp
adc
sbb
addr16
jg
je
rclb
fstps
stos
arpl
pop
adc
ja
imul
mov
mov
jnp
push
mov
push
jmp
add
pop
ficompl
sahf
mov
or
subl
or
daa
repnz
xor
jbe
call
cs
adc
scas
mov
dec
ja
in
lock
jle
mov
lods
sub
loopne
and
add
push
popf
loop
shrl
cmp
rorl
scas
fcmovbe
jg
inc
pop
xor
cwtl
adc
stos
and
sbb
cmp
mov
pusha
arpl
leave
jle
testb
stos
add
or
dec
pop
ss
subb
dec
ja
jmp
inc
daa
test
test
xchg
fwait
mov
roll
sbb
mov
stos
fidivrl
sahf
mov
xchg
faddl
in
out
insb
rorl
push
data16
aas
and
pop
push
dec
iret
js
lret
fdiv
push
in
aad
lret
fidivrs
jo
mov
cwtl
inc
add
and
js
lea
cmp
fstpl
std
xchg
pop
push
sarb
add
pop
adc
xor
lahf
push
jg
push
ror
jmp
shrl
test
sbb
outsl
jns
frstor
stos
je
push
es
out
sub
rcrl
mov
pop
scas
pop
or
inc
mov
xchg
imul
mov
in
sub
push
insl
pop
xchg
mov
js
cmp
ror
cmpsb
adc
add
in
aam
mov
les
add
sti
in
pushf
or
sbb
cmpsl
sub
sub
inc
xor
mov
pop
clc
dec
scas
adc
iret
das
mov
mov
sbb
loop
ds
sub
outsl
vmovntpd
sub
or
cli
pop
bound
cmp
ss
adc
mull
movsb
cmpsl
adc
mov
das
or
imul
mov
mov
xchg
jb
cld
insl
push
nop
std
xchg
mov
cli
sti
mov
jae
jle
ss
or
fsubl
aam
mov
popa
sbb
sbb
das
fsubrl
addl
pop
out
lcall
mov
pop
inc
add
sbb
dec
xchg
insb
movsb
out
aad
ret
mov
mov
xor
shl
xchg
pop
and
mov
daa
ljmp
outsl
mov
dec
jnp
inc
fwait
or
or
fidivrs
popa
mov
push
out
movl
in
incl
hlt
lods
in
mov
cld
pop
xchg
sbb
cmp
add
ljmp
mov
push
std
adc
fwait
sbb
dec
adc
jecxz
xor
insl
les
lret
xchg
sub
jno
aad
int3
repnz
pop
and
cli
in
pop
xchg
mov
rcl
repz
out
xchg
sbb
jns
cmp
or
jl
js
enter
or
pop
cmpsl
add
inc
sub
test
or
in
lock
cmpsb
mov
dec
xchg
push
xor
adc
cmpsb
loopne
cs
xor
loopne
aaa
clc
jb
orl
jecxz
push
out
inc
push
out
cmpsl
pop
mov
daa
gs
in
scas
pop
pop
pop
insb
cmpsl
mov
and
nop
out
stc
cmp
sbbl
or
sub
push
ss
cpuid
mov
in
enter
cmc
js
adc
push
fmuls
out
mov
imul
lcall
clc
sbb
sub
data16
inc
mov
pop
push
push
dec
jmp
xchg
xor
and
mov
cmp
inc
xor
cmp
sbb
int3
cmp
insl
push
sti
mull
pushf
inc
push
fs
lcall
aas
jl
mov
outsl
add
jmp
movsb
inc
insb
sub
sbb
js
cmp
mov
ss
mov
xchg
je
dec
sub
push
mov
xor
hlt
insl
scas
push
repz
push
stos
je
adc
push
mov
inc
outsl
neg
rcr
mov
jae
jmp
lret
out
mov
pusha
movsl
pop
cltd
sar
js
sarb
jne
addr16
push
pop
mov
addr16
xor
sbb
das
out
dec
pop
dec
gs
mov
repnz
cltd
xchg
imul
addb
dec
cmp
or
sub
jnp
je
pop
aas
or
cltd
mov
and
stc
test
xorl
dec
fildll
movsl
stos
movsb
adc
ret
in
scas
mov
mov
sub
adc
add
icebp
adc
std
push
int
lods
jns
inc
lods
scas
and
cmpsl
mov
xchg
mov
lods
jp
cmc
loope
push
adc
in
fldenv
xor
rorb
mov
int3
mov
jae
add
outsl
sbb
mov
ret
pop
sbb
sbb
adc
xor
hlt
mov
lahf
lcall
mov
xchg
in
xchg
push
mov
stos
pop
cmp
push
stos
xchg
jecxz
dec
pusha
es
adc
in
int3
loope
push
xor
jle
jmp
mov
shl
loope
cmp
dec
push
inc
or
and
incb
das
sub
aad
testl
repz
push
cmp
rcl
aaa
sahf
fdivs
inc
dec
push
add
int3
leave
adc
mov
cmp
popf
insb
stos
icebp
fs
adc
inc
pop
sbb
ja
xchg
push
scas
out
mov
dec
sub
mov
decl
subb
inc
outsl
jecxz
pop
sub
xchg
cmp
subb
xchg
xor
jne
and
repz
adc
inc
outsb
sub
mov
cmp
shll
loope
or
mov
test
pushf
mov
imul
xchg
div
loopne
fbstp
es
dec
xor
dec
sbb
sbb
aaa
dec
repnz
adc
ret
jnp
push
dec
arpl
inc
dec
out
hlt
add
add
cmp
repnz
mov
adc
sbb
ss
cmpsl
out
or
sub
out
out
pop
fisubrs
data16
push
jle
jle
inc
mov
fidivs
sub
arpl
movsb
pop
dec
lds
xor
and
jmp
add
mov
adcb
clc
inc
insb
popf
les
push
push
xor
ret
pop
or
dec
outsl
ss
fildll
cli
and
das
mov
xchg
xchg
adc
fs
sbb
xchg
cs
shrb
mov
scas
rorl
jl
or
ljmp
cli
scas
int3
ret
in
xchg
mov
add
push
dec
add
and
movb
repnz
movsb
fld
jecxz
jge
push
nop
pop
popa
jl
add
mov
clc
and
and
iret
lods
jle
mov
int
sbb
jg
dec
cmp
inc
iret
dec
xlat
or
test
cld
jo
mov
mov
cltd
mov
fnstcw
test
imul
add
sbb
sti
jbe
cmc
pop
hlt
jne
mov
out
push
test
movsl
sub
leave
dec
cwtl
mov
loope
and
fs
mov
cs
jb
das
mov
pop
push
jp
dec
jg
jne
mov
fcompl
fwait
icebp
test
ljmp
jno
daa
sub
imul
mov
lahf
mov
cltd
cld
sti
out
pop
fs
mov
mov
movsl
adc
adc
stos
call
orl
sahf
push
jns
inc
lret
jae
mov
push
dec
dec
lods
inc
hlt
mov
nop
mov
jp
and
test
mov
sbb
jge
cli
pop
xor
or
iret
cmp
sbb
popa
dec
mov
stc
je
test
xor
ret
xor
shrb
add
rorl
in
es
shlb
and
fimull
pop
in
xchg
fs
int
and
inc
xor
or
jmp
mov
add
xchg
adc
mov
icebp
adc
or
dec
cmp
push
and
fdivr
sbb
popa
mov
mov
out
insl
repz
pushf
lahf
mov
jbe
push
or
jns
aam
pop
nop
sub
std
insl
inc
popf
sbb
sahf
mov
push
imul
je
das
sub
jnp
sahf
cwtl
pop
mov
inc
or
ja
push
xchg
jb
loopne
xchg
aad
cmp
mov
cltd
pextrw
fwait
les
dec
div
mov
lret
shll
js
add
pop
fwait
sub
xchg
adc
and
into
loope
imul
and
addl
pop
loope
nop
loop
jl
int
repz
sub
pop
mov
imul
push
and
data16
ja
in
loop
or
divl
arpl
imul
out
inc
mov
dec
add
fwait
cmc
loopne
mov
int
pusha
jle
rcl
push
mov
in
inc
outsl
or
rorl
cmp
cs
jmp
mov
cmp
xlat
lock
arpl
movsl
mov
stc
fnsave
cmc
ret
push
fidivs
push
ficomps
jnp
in
or
cltd
adc
ret
roll
push
push
ret
xor
adcb
ljmp
xchg
pop
cwtl
pop
pop
or
mov
inc
pop
mov
mov
mov
lea
fnstenv
pop
push
addr16
mov
mov
rol
xchg
mov
ja
push
sub
sub
cmp
in
add
stos
sahf
add
pop
dec
mov
stos
scas
inc
jb
dec
cwtl
pop
leave
fistl
cmc
inc
and
mov
cmp
lcall
ffree
movsb
xchg
out
dec
push
fs
rep
scas
lods
test
test
daa
ret
fnstcw
aaa
push
leave
xchg
cmp
xor
or
rorl
inc
dec
adc
pushl
or
popf
jp
mov
cmpsl
movsl
je
addb
inc
out
adc
dec
nop
xchg
inc
sbb
push
lea
iret
inc
xchg
mov
mov
push
rorb
sub
aad
and
imul
lahf
jae
es
fisubl
xor
fucomp
cmp
inc
push
xchg
rol
int3
sbb
add
sbb
or
mov
cld
jns
stos
fcomi
jmp
adc
add
mov
sub
sarl
and
and
lahf
jae
xchg
aas
aad
mov
pop
xorl
sbbb
xor
aad
pop
push
cld
sarb
sbb
or
jp
out
aaa
dec
sub
pop
inc
imul
sub
enter
cmp
sub
push
fstps
aad
mov
dec
fstl
mov
addr16
pop
sbb
in
or
loope
and
mov
ljmp
push
cld
mov
pop
sub
cmp
or
lea
ret
shll
inc
shrb
lret
test
loope
fisttpll
fiaddl
decl
adc
cmc
out
xchg
or
enter
aad
cmp
mov
mov
adcl
das
push
sbbb
aas
ds
xlat
popf
mov
sbb
mov
mov
ljmp
sub
mov
add
mov
data16
stc
pop
inc
sti
into
xor
insb
adc
inc
outsl
xor
hlt
pop
inc
shrb
les
stc
or
out
mov
jno
lods
cmp
test
add
shll
int
push
and
sti
ret
leave
mov
call
inc
push
scas
fcompl
and
adc
dec
int3
fs
sbb
xchg
popf
fcomps
out
sar
in
sub
in
shl
imul
pop
xchg
cmp
mov
outsl
aaa
add
mov
mov
jmp
or
or
ss
mov
jge
repnz
stc
out
cmc
in
xchg
insl
into
fldt
enter
outsb
cltd
shll
mov
cmc
sti
jo
jmp
fs
inc
push
shlb
fisubrl
xor
jne
lahf
frstor
in
or
ret
movsl
test
inc
cmp
and
cvttps2pi
pop
lock
dec
lcall
jne
push
rorl
pop
movsb
and
dec
jns
addr16
jbe
orl
repz
adc
aad
push
subb
lods
aam
push
test
jmp
and
fildl
mov
lods
push
daa
scas
test
fdivrs
fwait
xor
aas
mov
jns
mov
dec
jmp
push
mov
stos
lret
mov
mov
dec
push
or
das
cld
sbb
or
pop
jp
sbb
cmp
dec
mov
or
test
pop
sub
or
lahf
sbb
mov
lock
lahf
sub
test
fdivl
adc
xlat
push
ljmp
cmc
inc
rclb
sbb
add
icebp
adc
push
push
cli
lods
inc
in
sarl
inc
inc
jae
sbb
fstl
jle
cmp
sub
add
in
dec
dec
mov
aas
and
insl
xchg
call
xchg
jo
cs
cs
jecxz
ss
arpl
adc
xor
fildll
fistps
test
mov
insl
inc
dec
inc
icebp
jmp
or
repz
cmpsl
jo
adc
fisubs
fmull
notl
sarl
outsb
mov
mov
in
xor
rcrl
jo
inc
mov
dec
cmpsl
les
mov
ret
mov
je
cmpb
mov
xor
and
sub
push
stos
cmpsl
out
xchg
xor
lahf
add
dec
sbb
popf
ds
es
sbb
mov
xchg
xchg
adcl
rclb
xor
xchg
faddp
mov
imulb
dec
mov
fdivs
dec
ja
pop
and
or
rcll
push
or
movsl
movsl
dec
loop
or
jo
in
sbb
push
dec
ret
adc
loopne
pop
sub
call
jne
sbb
test
daa
in
mov
cs
pushf
jns
ja
jp
mov
repnz
push
pop
bound
dec
lods
mov
pop
fiadds
mov
repz
into
jmp
lods
cmp
enter
repz
mov
shl
gs
or
push
lock
lcall
mov
out
xor
jnp
mov
mull
dec
push
inc
sub
pop
adc
ficompl
jbe
inc
pop
cs
repnz
out
add
paddusb
mov
icebp
push
mov
data16
inc
sarb
cmp
test
pop
xor
dec
adc
neg
int
or
fs
paddusb
es
dec
pop
mov
mov
jno
je
pop
stos
and
dec
lock
pop
rcll
insl
cmc
negb
mov
test
inc
push
test
js
gs
int3
cld
inc
and
inc
imul
ds
aaa
rolb
inc
es
and
mov
cs
bound
lahf
jne
movsl
sbb
test
jg
cltd
outsl
push
ljmp
and
cmp
mov
bound
mov
loop
loope
cmp
leave
cmp
sbb
mov
scas
mov
popf
xor
add
test
shrb
xchg
loopne
inc
lcall
call
fildll
jnp
adc
and
ljmp
nop
push
rcll
out
adc
rcr
jno
loope
arpl
or
xchg
mov
pop
mov
loope
in
mov
js
out
add
push
sub
lahf
test
sbb
lea
push
outsb
xor
push
js
rolb
or
mov
xchg
insl
movsl
cs
inc
adc
cwtl
mov
cs
fadds
scas
push
in
fnsave
cs
jmp
das
or
xchg
mov
int
outsb
or
pop
mov
outsb
stos
in
inc
ds
cmpsl
fucom
lods
jmp
ret
pop
sbb
push
stc
jo
and
mov
push
addr16
push
sub
mov
enter
mov
xor
out
sub
or
outsb
jne
fdivs
and
loopne
jae
inc
adc
mov
fldcw
add
mov
cmp
sbb
lea
jns
xor
adc
xchg
test
xor
xchg
add
call
or
adc
arpl
cmc
clc
xor
insb
mov
sub
stos
arpl
or
call
cmp
scas
pop
loop
cwtl
pushf
pop
sbb
and
cmp
je
shr
xor
inc
xchg
cmp
lods
adc
jmp
ja
lea
fiadds
sub
push
mov
int3
and
dec
mov
adc
popa
pop
and
mov
or
dec
in
adc
test
sti
mov
add
pop
call
push
mov
sub
push
sub
stc
test
xchg
cmp
jb
das
insl
mov
xchg
xchg
mov
imul
mov
loop
and
push
xor
shl
and
jg
jae
loopne
cmpl
aas
sub
inc
add
out
movsl
mov
test
hlt
fwait
es
loope
mov
nop
movb
add
inc
aas
out
in
xor
or
pop
xor
sub
mov
enter
xchg
mov
test
lods
mov
mov
decb
repz
push
mov
sub
dec
rcll
push
mov
inc
cmpsl
daa
popa
xor
sbb
repnz
jmp
nop
in
push
cmp
sti
add
enter
xchg
loop
xchg
pop
xor
rcll
dec
movsb
jecxz
jb
fwait
or
jbe
mov
roll
inc
cltd
pop
mov
andb
fnstenv
in
sub
push
test
clc
lea
out
mov
add
cmp
enter
jns
test
lock
push
lods
jecxz
dec
repz
jnp
mov
jecxz
sbb
lock
jge
aas
mov
jbe
insb
pop
popl
mov
or
ljmp
adc
sar
addr16
inc
mov
adc
and
cmp
call
dec
ss
out
mov
jo
ljmp
test
mov
aad
xor
sub
inc
iret
push
fs
sbb
mov
aam
movsb
sub
imul
loop
ret
data16
jmp
mov
or
xor
mov
mov
mov
movsb
out
es
mov
movsb
stos
cmc
fmuls
xchg
mov
imul
mov
push
into
popl
jno
fdiv
mov
in
iret
mov
jecxz
int3
xor
iret
out
rcrb
push
jg
xor
mov
jg
sub
pop
sahf
xor
push
cli
mov
jg
aam
fstpl
dec
xchg
lods
dec
aaa
rorb
cmpxchg
iret
mulb
cld
add
jo
mov
sub
ret
data16
xchg
sbb
jb
fadds
jg
aam
jae
and
and
cmpsl
shrb
or
pop
dec
in
nop
inc
loopne
or
gs
loope
jmp
xchg
leave
cmp
push
or
jo
arpl
jne
dec
loop
call
mov
jp
loopne
add
cmpsl
inc
jne
ss
sarb
dec
fcomp
mov
mov
inc
icebp
mov
add
mov
nop
out
push
cmp
push
push
idivl
jp
pop
inc
shrl
in
sahf
xchg
fsts
ss
jns
push
push
enter
int
test
arpl
or
xchg
xor
lods
pop
or
cmp
pop
sub
xor
das
xor
inc
jae
inc
xor
imul
cmp
js
sti
rcr
cmovle
out
push
out
pop
repz
scas
sub
or
shlb
sub
sub
jbe
pop
outsl
ss
ljmp
mov
cltd
add
clc
mov
mov
jge
push
push
lock
dec
mov
mov
adc
pop
and
pop
cmpsb
push
shlw
mov
push
mov
pusha
addb
cmp
stos
ficompl
cmc
dec
movmskps
sarl
push
mov
bound
repnz
and
mov
fistpl
popa
stc
test
and
stc
adc
sbb
inc
and
cmc
scas
jnp
sbb
xorl
cmpsb
mov
jle,pn
test
das
pop
sub
mov
inc
cmp
add
dec
inc
daa
cmpsb
inc
lods
mov
and
sbb
sahf
sahf
mov
or
arpl
das
arpl
mov
test
sahf
sub
xchg
aad
xor
aaa
lcall
adc
adc
push
pop
stos
sbb
mov
movsb
pop
les
pushf
or
fadd
xchg
in
rol
sahf
dec
pop
cmp
adcl
cmp
cwtl
and
mov
movsl
imul
push
std
pop
out
mov
inc
mov
add
adc
xchg
add
adc
pop
jb
bound
xchg
bound
fs
sub
in
cs
insb
adcl
dec
ret
mov
ficoms
push
aad
nopl
shrl
inc
jl
aam
and
pop
test
add
ret
push
mov
idiv
mov
or
and
enter
inc
fstpl
outsl
rorl
lret
nop
cmc
inc
xor
shll
cltd
in
imul
ds
sub
push
das
adc
adc
fwait
testb
mov
mov
adc
mov
loop
dec
cmp
insl
adc
fdiv
cmp
adc
cmp
adc
stc
aaa
sbb
jp
aam
in
jl
fidivrs
push
dec
ret
pop
out
mov
mov
mov
mov
mov
out
adc
jmp
jmp
aas
and
sbb
divb
sbb
adc
ss
daa
sahf
lods
mov
sbb
jae
stos
mov
inc
sarl
gs
push
test
pushf
dec
xor
cltd
cmp
cli
fcoml
stos
push
shl
and
push
pop
mulb
out
xlat
pop
or
je
scas
sbb
scas
mov
inc
jmp
pushf
jl
mov
inc
mov
mov
pop
inc
mov
mov
sub
popf
push
loop
or
out
lea
fwait
add
jmp
push
xchg
mov
xor
push
aam
popf
dec
ljmp
dec
je
mov
push
je
repz
add
adc
shll
stos
xor
jge
fistpl
xchg
xor
push
sub
cld
add
lods
hlt
xor
dec
jge
and
jecxz
push
dec
lahf
and
inc
aad
xchg
jl
xor
mov
jno
sub
mov
je
fimull
or
xchg
cmc
dec
outsl
add
dec
sarb
sbb
add
push
test
test
ljmp
ja
out
pusha
jns
pop
push
adc
outsl
cmpsl
ljmp
xor
fdivs
lea
cmp
in
and
cmpsb
or
sub
adc
jecxz
xchg
arpl
ja
rolb
arpl
std
inc
out
mov
insl
xor
shr
add
sub
lock
cmp
pusha
dec
lret
push
and
jp
in
mov
ret
insl
xchg
xlat
shll
mov
gs
pop
mov
lcall
into
pushf
aad
xchg
shll
sbb
pop
fiadds
xchg
sub
js
inc
fsubrs
shrb
ret
es
out
iret
mov
cmpsb
lret
mov
cli
or
ret
scas
js
jno
mov
bound
and
jns
lret
dec
fsubrl
push
stc
ss
cwtl
jge
inc
or
inc
dec
push
dec
fcoml
fidivs
in
cltd
addr16
push
cmp
mov
pop
cmc
push
mov
cmp
stos
adc
test
sub
push
bound
loopne
mov
sub
add
aam
dec
xor
sub
ret
les
cmp
push
cmp
push
popa
aam
adc
clc
dec
adc
pop
addl
inc
or
xor
jmp
or
mov
inc
adc
mov
mov
shufps
testl
mov
jle
leave
incb
outsb
rcll
sub
sub
ss
mov
pop
and
mov
call
jg
bndldx
cmc
data16
push
push
scas
xor
jae
pop
dec
int3
sahf
out
push
pop
push
cmpsl
mov
dec
pop
jae
lock
mov
push
and
mov
xchg
jle
cmp
gs
pop
xchg
or
pop
nop
mov
add
enter
dec
xchg
pop
movsl
shlb
dec
loop
pop
push
adc
int
aas
pop
adc
lds
rcrl
and
mov
pop
xchg
or
or
pop
decb
inc
lods
jns
lahf
icebp
iret
xor
push
nop
push
stos
cmp
popa
pusha
push
sbb
xor
lcall
mov
push
outsl
mov
sub
popf
jno
xor
insl
push
xchg
sub
daa
xor
sbb
das
into
mov
ds
xchg
nop
incb
cmp
cwtl
test
mov
mov
jle
shll
xlat
mov
scas
xlat
xor
xlat
xchg
pop
mov
pop
cli
in
push
pushf
inc
push
mov
cli
popf
xor
or
cmp
inc
push
iret
in
fwait
insl
dec
dec
shrb
jae
mov
mov
push
inc
loope
lea
in
subl
fdivrs
out
pushf
stos
xor
dec
fistps
lock
adc
inc
adcb
aaa
in
cld
or
push
les
and
test
xchg
in
scas
mov
cmp
loopne
int
popa
stos
ret
cld
add
adc
push
jae
fcmovbe
cmp
subl
xchg
cmp
incb
cmpsl
lea
int3
dec
popf
xchg
loopne
out
loop
cld
shlb
ret
jne
rcr
jne
mov
lret
mov
lock
jnp
or
fs
fisttpl
scas
and
fs
aas
pop
push
ds
pop
or
cld
lds
enter
call
xor
add
sti
stos
lods
and
scas
push
negl
lret
testb
or
and
pop
cmpsb
sub
aaa
and
add
push
mov
mov
repnz
aam
or
repnz
push
inc
das
jnp
loope
xor
push
mov
jns
das
outsl
or
xchg
int
sub
cli
xchg
jnp
and
or
add
test
aas
leave
outsl
push
gs
pop
lahf
bound
ret
test
lret
and
jle
dec
cmp
test
lret
aaa
and
cltd
inc
aas
xor
sarl
sub
dec
sub
fldt
sub
mov
ljmp
nop
arpl
pop
cmp
add
sbb
test
jp
pop
mov
jp
jg
lods
in
out
jle
mull
call
pop
into
ljmp
into
repnz
mov
inc
jg
add
shrb
sbb
pop
mov
xchg
out
ljmp
pop
add
pop
pop
mov
mov
mov
xor
cwtl
cmpsb
pop
sub
fs
xorl
xchg
add
daa
mov
jae
jns
mov
jae
sub
push
mov
adc
pop
loopne
add
stos
add
scas
addb
and
mov
mov
insl
imul
repz
cmpsl
pop
mov
movsb
jge
outsb
out
fsubl
movsl
pop
jmp
loopne
jno
and
ret
inc
inc
mov
mov
into
imul
xorl
rorb
cld
mov
and
jnp
adc
push
popf
pop
add
adc
xor
or
mov
pusha
and
inc
fsubs
fiaddl
fwait
or
fcoms
negl
xchg
inc
mov
sub
add
push
add
clc
jb
lods
loopne
mov
leave
idivl
mov
push
jmp
fmulp
adc
out
into
push
mov
mov
scas
adc
lret
and
lahf
push
daa
push
jecxz
cmpsb
ret
pop
mov
pop
mov
xchg
lret
inc
stos
scas
jb
mov
cmc
clc
fcoml
cwtl
xor
add
js
out
xchg
xor
xchg
add
push
and
pop
in
xor
enter
cltd
dec
inc
cwtl
into
imul
imul
cmc
imul
clc
fsubrs
dec
ds
lea
push
aas
add
push
repz
add
fisttpll
xchg
push
adc
and
adc
mov
mov
inc
sub
push
or
xchg
push
dec
lods
pop
xor
cli
push
add
std
das
repnz
rclb
pop
inc
add
cmc
lds
rorb
rcrl
inc
sbb
int
cmc
and
sub
test
mov
fiadds
jge
lahf
mov
inc
iret
dec
sub
js
scas
ffreep
stos
lock
test
mov
pop
mov
jmp
rcll
add
fisubrs
scas
adc
add
cmp
outsl
pop
push
test
fwait
mov
adc
dec
js
rorb
sub
cmpsb
mov
iret
fs
nop
jns
mov
pop
push
shrb
and
leave
pop
jmp
incl
mov
sbb
mov
sbb
mov
mov
mov
rol
add
xor
inc
jo
inc
pop
cltd
mov
dec
fld
and
bound
sarl
fldcw
dec
inc
dec
aaa
out
std
hlt
ds
pop
or
scas
sub
pop
push
add
xor
arpl
ss
shl
mov
or
fisttpll
into
dec
xchg
sahf
jmp
addr16
jmp
mov
push
add
add
cmc
inc
adcl
jmp
adc
push
movsb
fcompl
outsl
xor
fiaddl
ja
test
push
test
xchg
cwtl
sti
fildll
pop
std
mov
loope
pop
mov
push
jnp
cmp
in
xsaves
adc
mov
nop
mov
aam
jne
xchg
push
mov
mov
jle
fst
dec
mov
and
mov
mov
cltd
push
xor
jle
test
and
mov
mov
jns
cwtl
cmc
ljmp
mov
push
jecxz,pn
jmp
or
jbe
mov
and
inc
push
das
add
xor
sub
sub
xor
sar
push
xchg
dec
stos
pop
outsb
push
mov
dec
test
lcall
shr
test
aad
in
push
push
mov
and
loopne
inc
insl
inc
mov
push
rcr
jo
mov
sahf
cmpsb
inc
jbe
xorb
xchg
mov
je
jmp
ss
cmpsl
adc
sub
mov
in
dec
rolb
fadd
mov
pop
out
pop
cmpsl
xchg
cmp
scas
jecxz
sub
mov
inc
in
clc
test
popf
dec
jne
mov
fiadds
ret
pop
rcrb
in
push
mov
outsb
push
sbb
icebp
sarl
pop
xchg
mov
imul
xchg
gs
ret
dec
pop
cmp
cmp
fldl
mov
mov
fistpl
jbe
push
xchg
ret
clc
ret
fs
mov
dec
fnstenv
sbb
jecxz
int3
adc
sub
int3
jae
sub
popf
xor
mov
pop
cmc
dec
push
movsl
xor
lods
and
mov
mov
pop
cmp
enter
mov
sar
mov
idivl
push
aam
fimuls
fs
mov
cs
xor
nop
push
test
movsb
inc
subl
dec
popa
sbbb
js
lcall
in
sub
dec
xorl
jmp
aam
pop
cmp
pop
mov
jo
adc
int
jo
jmp
mov
imul
fisttpl
mov
mov
mov
mov
xor
gs
dec
call
pop
mov
jo
repnz
sub
rorb
scas
jl
outsl
mov
add
dec
inc
imul
add
cltd
dec
xor
inc
cld
repnz
xor
in
xchg
mov
sti
shr
inc
incl
frstor
jg
sbb
adc
xchg
sbb
icebp
ret
mov
pop
fisubrs
jmp
scas
inc
mov
adc
lds
pusha
int
ja
mov
cltd
mov
jecxz
lret
jnp
jbe
xor
jmp
dec
movsb
bound
out
add
push
sbb
push
jecxz
subb
setne
jp
pop
mov
pop
cwtl
std
add
adc
nop
lods
cld
xor
sbb
xchg
inc
pop
adc
lods
mov
lds
xchg
or
inc
lock
or
mov
jae
xchg
and
mov
outsl
movsb
cld
xchg
push
cmpsl
or
imul
clc
jecxz
js
ret
daa
mov
xor
mov
lods
outsb
lea
std
arpl
cld
popf
mov
inc
decl
scas
push
test
mov
fs
jo
or
rcl
shr
sti
test
lret
movsl
pop
jge
add
lds
cmpsb
aas
lods
push
mov
mov
clc
inc
ss
nop
cmp
sbb
mov
push
loope
xor
cmp
or
out
mov
xor
xchg
cs
jmp
xor
aad
and
je
lods
adc
xchg
jns
in
push
scas
sub
outsb
sbb
stc
pusha
ret
ret
push
jecxz
popa
cmp
incb
push
inc
into
mov
test
or
mov
inc
lcall
xor
mov
sub
pusha
push
and
notl
xchg
push
pop
ret
push
ds
inc
sbb
pop
xor
rorb
jnp
dec
jae
arpl
pop
push
sub
rcr
cs
inc
insb
imul
xor
pop
in
push
std
test
jne
jo
daa
push
hlt
xchg
mov
jp
ja
aad
lea
hlt
lret
outsl
mov
xchg
add
xchg
adc
bound
outsl
in
inc
mov
popa
ss
gs
or
sub
icebp
jne
sub
loopne
je,pn
scas
sbb
shufps
int
nop
xchg
cltd
out
loope
jle
add
or
scas
gs
frstor
or
xor
pop
les
jecxz
mov
mov
push
jl
out
mov
in
xchg
fs
fbstp
fists
jbe
in
nop
aas
mov
test
loope
sub
fdivp
push
adc
add
daa
leave
ljmp
inc
pop
pop
pop
cmc
jmp
lea
imul
shrl
lret
aad
sub
mov
cltd
bnd
into
sbb
add
dec
push
jae
xchg
xchg
sahf
loope
mov
or
aad
js
lret
in
adc
jl
sub
or
stos
mov
add
xor
xchg
aam
push
test
xchg
loope
mov
in
ficomps
fisubs
and
pop
lcall
pop
adc
jns
lock
or
ss
in
push
or
or
add
mov
lds
mov
pusha
pop
nop
push
cmp
xchg
inc
sbb
lret
pop
inc
jecxz
mov
xor
mov
movsb
lret
stos
add
ficoms
mov
push
xor
mov
xlat
xchg
mov
jns
xor
xor
mov
or
sbb
mov
dec
xlat
and
mov
call
push
pop
add
mov
shll
sti
mov
dec
aaa
pushf
sbb
inc
mov
or
inc
fcompl
jl
pop
or
cld
cmp
xorb
or
dec
mov
xchg
shr
cmp
mov
adc
xor
inc
call
dec
or
push
inc
movl
popl
add
mov
pop
dec
jl
xchg
xor
movsb
movl
inc
ljmp
xchg
in
stos
pop
mov
jp
dec
je
add
pop
arpl
dec
in
or
lds
das
mov
mov
mov
bound
jecxz
in
push
mov
pop
ja
mov
fists
ficompl
nop
in
lret
pop
mov
lods
cmpsl
mov
jecxz
dec
sub
jge
das
mov
incl
addr16
test
out
icebp
aam
std
rcr
push
xchg
lahf
nop
adc
or
push
arpl
cmp
inc
push
push
pop
mov
rorb
mov
scas
mov
imul
mov
jg
int3
ja
in
inc
xor
pop
stos
popf
and
lahf
pop
pop
pop
out
inc
add
enter
mov
push
loopne
mov
and
out
in
push
cs
sar
mov
push
cmp
jl
jb
mov
xchg
lock
int3
pusha
mov
ss
cmp
aad
jb
pop
loopne
leave
jge
pop
insb
cld
pushf
jns
mov
rclb
inc
push
add
or
mov
idivl
fdivs
lahf
dec
repz
insl
and
loope
xor
jp
loop
ret
pusha
sub
and
mov
ja
loope
inc
popf
xchg
out
sbbb
aam
icebp
sbb
pop
pusha
mov
iret
dec
mov
shrl
jecxz
mov
fnsave
sbb
std
int
gs
in
cmp
sub
and
sub
arpl
add
cwtl
fmuls
xchg
push
jb
pop
xchg
cmp
sub
fists
and
pop
push
es
sar
pop
mov
push
xor
xchg
or
lret
insl
pop
jbe
cld
addr16
pop
push
inc
icebp
mov
scas
aam
jno
cmp
mov
test
jo
mov
out
xlat
incl
out
dec
mov
xchg
sbb
jecxz
rorl
movsb
cmpsl
inc
sbb
or
dec
xchg
sbb
push
jne
movsb
adc
or
lahf
test
inc
stos
scas
mov
mov
gs
ret
dec
rcrl
xchg
inc
ja
in
mov
dec
iret
cmpsl
jmp
scas
push
adc
ret
divl
arpl
lea
insb
in
inc
lcall
movsb
fstl
out
adc
out
inc
pop
mov
jl
fadds
adc
push
lea
aaa
mov
fimull
push
lret
push
mov
inc
int3
int3
add
mov
fsts
push
jne
mov
xlat
cmp
in
dec
imul
mov
pop
divb
outsb
lds
or
jl
pop
out
and
mov
mov
outsl
cmp
mov
test
stc
add
test
test
dec
pop
dec
inc
push
jbe
cmp
mov
jns
xlat
in
lret
xchg
cmp
rcl
inc
les
mov
mov
test
mov
dec
dec
in
add
mov
movsb
sahf
stos
arpl
push
cmp
mov
ja
and
xor
mov
inc
fldenv
sarl
push
in
mov
or
mov
mov
and
jno
push
cmp
call
int
push
inc
mov
ds
and
out
mov
sahf
and
cs
mov
xor
or
sub
in
dec
int
mov
mov
rorl
in
test
and
out
pop
mov
aad
cs
push
rcrb
lret
sub
cld
and
cmp
mov
lcall
leave
push
scas
or
jge
jmp
sub
dec
movsb
aad
pop
jg
gs
mov
jmp
andl
xor
out
and
subl
fisubrs
aad
push
add
pusha
mov
aas
fldcw
xlat
xor
lods
xor
pop
loopne
fists
or
mov
dec
pop
es
xchg
or
cmp
cmp
mov
mov
xchg
add
xchg
les
in
scas
sbb
push
lret
jl
cltd
xchg
jl
fmuls
dec
fldln2
mov
cwtl
daa
xchg
enter
and
xor
out
xrelease
js
xchg
cmpsl
es
fxtract
lahf
movsl
dec
jl
loop
xor
lret
popl
xor
xor
mov
in
aaa
pop
lods
add
inc
xchg
fcmovnbe
cld
pop
cmp
inc
out
add
jo
sti
lds
loopne
xchg
test
stc
out
fwait
inc
pop
bound
sub
imul
cli
shlb
lds
call
in
xorb
aam
enter
add
icebp
fisubrl
fsubl
incb
push
add
pop
or
addl
add
adc
pop
shll
xchg
sbb
adc
outsb
roll
jns
jmp
add
add
inc
mov
xor
mov
mov
ss
call
out
jo
push
cmp
mov
out
xchg
add
adc
mov
push
xor
pop
ret
lcall
je
pop
adc
or
test
fcoms
adc
fimuls
or
ljmp
push
in
push
xchg
mov
push
cmp
or
pop
fdivrs
cmc
push
movsb
sti
cwtl
insb
lret
pop
repnz
insl
ficomps
xchg
pop
ja
lret
in
test
out
and
aad
and
push
ja
lret
cltd
test
stos
adc
inc
or
xchg
movsl
add
mov
in
test
in
rcr
mov
or
mov
inc
push
jmp
enter
inc
xlat
rcr
pop
add
add
adc
stos
data16
in
ss
jnp
sub
ljmp
das
mov
lods
sbb
lods
add
scas
lret
sbb
push
pop
fcompl
jecxz
push
pop
cli
mov
and
cmp
inc
mov
repnz
dec
pop
push
push
or
rorb
pop
aam
add
out
into
push
add
push
mov
push
call
stos
dec
test
xchg
aaa
push
int
push
xchg
jp
mov
pop
mov
push
or
fimull
rcll
lods
mov
mov
pop
decb
aad
xor
mov
fwait
in
cmp
jnp
pop
add
js
xchg
fmulp
lds
add
xchg
mov
sub
outsl
rcll
div
xchg
popf
cmp
adc
rdpmc
mov
scas
or
xchg
inc
std
cmp
sbb
call
mov
subb
filds
pop
cmc
lcall
jl
lods
inc
mov
cwtl
ljmp
xchg
mulb
inc
push
push
dec
mov
mov
jnp
in
xor
push
stc
test
sub
lret
cld
push
xor
inc
sbb
cmp
cwtl
add
mov
xchg
lods
paddusw
or
mov
pop
mov
dec
movsb
jg
mov
ljmp
mov
xor
out
pop
jge
xor
jge
push
repnz
pop
fistpl
xchg
and
out
scas
neg
mov
ljmp
movsl
push
lock
mov
rclb
ss
or
sbbl
adc
aam
loop
fistpl
or
popf
iret
lret
out
and
sub
ds
and
mov
pop
out
pop
loope
in
dec
jnp
fisubrs
mov
sub
mov
jo
lods
adcb
cmp
xchg
adc
xor
or
push
sbb
inc
sbb
cmp
rcl
mov
sub
adc
sbb
push
scas
sbb
jge
sbb
aad
xchg
rcrl
imul
xchg
inc
aaa
lret
cmovle
arpl
mov
pop
adc
cwtl
xchg
jmp
mov
sbb
adc
ret
ss
pushf
inc
call
xchg
adc
hlt
sahf
push
pop
and
push
pop
push
arpl
add
push
dec
lret
pusha
mov
test
stos
or
sbb
aaa
push
sub
ss
fidivrs
add
je
jnp
cmp
cmp
inc
mov
cli
scas
and
jge
mov
stc
stc
mov
mov
sub
xchg
aas
or
add
cmp
andb
xchg
pop
jmp
pop
jae
stos
xor
in
inc
jae
es
out
shrb
dec
push
cmpsb
sahf
pop
and
popf
aam
lea
xchg
shl
mov
shrl
pop
sbb
imul
mov
xchg
je
ret
add
mov
push
cmc
jg
js
xchg
push
in
pop
stos
adc
sub
mov
or
xorb
mov
icebp
loop
inc
xor
xorl
adcl
adc
pusha
int
inc
inc
sub
test
pop
in
aaa
jge
inc
test
les
and
repnz
push
shlb
adc
cmpsb
insl
pop
add
or
xorl
sti
pop
xlat
cli
sbb
cmpsb
xchg
mov
stc
jg
push
sub
andb
add
out
clc
outsb
iret
arpl
pop
ficompl
or
imul
pop
mov
or
mov
adc
loop
rcl
mov
cmp
and
inc
mov
xor
loope
dec
cmp
ja
lret
mov
xchg
cmp
arpl
cli
pop
sub
decb
xor
pop
ja,pn
push
xor
push
std
lea
add
data16
adc
lahf
out
or
sahf
fwait
or
push
push
and
pop
in
lcall
jb
pusha
dec
mov
inc
mov
xchg
mov
cwtl
sti
jb
iret
push
sbbl
js
adc
sbb
xorb
and
fisttps
sub
cmp
jge
jecxz
inc
arpl
lret
shlb
movsl
out
movq
pop
jp
xchg
je
push
jle
cmp
outsl
out
cmp
mov
lds
cmp
mov
jmp
sub
xchg
fstps
push
in
lret
add
ljmp
cmc
push
negl
mov
dec
mov
sti
jbe
fcoms
icebp
std
xor
mov
out
cltd
outsl
jl
cmp
adc
inc
jne
cmc
add
stos
fdiv
add
stos
jae
lea
push
inc
xchg
insl
push
inc
push
subb
loopne
orl
divb
inc
cmpsb
mov
mov
dec
addr16
jle
sub
es
sub
dec
cwtl
rorb
adc
inc
cmpsl
ret
sbb
int
pop
pop
xchg
sub
and
cmpl
xor
cmp
fsubl
push
pop
in
adc
test
ficomps
cmpsb
repz
shrl
popf
rclb
imul
fisttpll
cld
jge
stos
cmp
add
adc
adc
cli
movb
pop
and
or
sub
dec
shrb
push
push
pop
dec
loopne
inc
mov
xchg
mov
pop
xorl
mov
add
push
cmp
adc
mov
out
pop
ret
pusha
in
insl
std
out
inc
enter
xor
cmpb
imul
ds
bound
lret
mov
sbb
adc
cmpsb
fcmovbe
stos
lds
movsl
test
icebp
lea
pop
push
sub
idivb
aad
pushf
or
mov
pop
adc
add
fldcw
mov
pop
cmp
push
lahf
and
xor
dec
and
push
jle
mov
or
js
inc
jne
and
stos
and
or
push
cmpsb
sub
stos
pop
push
dec
inc
lcall
add
ds
sub
xchg
cli
testl
pop
xchg
lcall
lahf
test
in
arpl
aad
adc
xchg
push
cs
popf
cli
mov
outsl
rcr
mov
push
dec
imul
outsb
or
jbe
iret
fsts
popa
lds
pop
and
arpl
aas
push
adc
sbb
jo
sub
or
cmp
lahf
dec
lea
es
xor
mov
and
data16
in
pop
in
in
hlt
pop
cmpsb
and
stos
dec
jnp
push
xlat
enter
sub
mov
xchg
enter
pop
dec
xor
scas
xchg
test
jo
or
xchg
gs
or
adcl
and
cmp
fs
call
adc
rcll
sbb
mov
mov
pop
sub
cmp
rorl
or
xchg
mov
or
repnz
or
xor
fistl
push
stos
mov
in
and
push
mov
subl
and
pop
push
or
outsl
and
adc
fdivrl
in
mov
insl
jp
sub
test
rep
push
sbb
adc
scas
rorl
mov
mov
incl
lods
adcl
push
mov
xor
add
xchg
mov
outsb
inc
add
lret
pop
jne
shrb
popf
inc
dec
xchg
xchg
or
data16
cltd
mov
mov
lret
pusha
leave
sbb
add
shrl
mov
dec
stc
sub
xor
int
jbe
xor
repz
cli
fisubl
in
jbe
leave
and
nop
loopne
test
jae
add
std
inc
sti
cmp
xchg
rcll
movsb
cli
xor
inc
cs
aas
mov
cmc
mov
jg
jnp
pop
clc
cmp
mov
xchg
scas
das
xchg
sbb
mull
enter
or
shlb
pop
addr16
in
leave
loope
jmp
aaa
jbe
adc
or
add
nop
pop
in
inc
xor
add
repz
mov
pop
inc
push
push
in
dec
jb
dec
sbb
cli
mov
popa
iret
popf
inc
mov
dec
in
push
jle
cmp
jb
xchg
sbb
fwait
ss
mov
or
xor
iret
pop
insl
lock
mov
out
insb
xchg
data16
arpl
mov
pop
outsb
or
cmp
push
adc
addb
fs
or
inc
dec
mov
sub
enter
dec
hlt
mov
or
mov
mov
mov
xchg
adc
icebp
insb
xor
jecxz
sbb
popa
adc
insl
xchg
adc
lock
pop
mov
mov
pop
shrl
pop
push
ss
cwtl
inc
sbb
add
test
xchg
xchg
aad
cmp
iret
cwtl
mov
test
or
movsb
in
inc
orb
jae
xor
or
mov
shrl
sbb
jo
mov
adc
in
pop
xchg
mov
mov
jae
test
cmp
sbb
repz
fnsave
mov
fimuls
xor
jo
mov
out
bound
mov
cmp
or
sub
and
rcrl
xorb
scas
add
xchg
fcomps
je
xor
imul
shrl
inc
arpl
mov
imul
leave
cwtl
leave
xorl
aam
jne
repnz
xor
rclb
adc
mov
js
out
loope
push
shll
ljmp
rcrb
sbb
movsl
adc
mov
cmp
dec
sbb
mov
push
filds
mov
and
movsb
ds
mov
jge
sub
mov
cmpb
cmp
iret
mov
lcall
pop
or
inc
fildl
andl
mov
pop
xlat
daa
fucomi
out
mov
pop
data16
xor
sub
daa
mov
pusha
adc
mov
into
push
mov
fistps
cmpsl
mov
lea
cmpps
rorl
repnz
jb
xchg
scas
xchg
mov
inc
mov
push
in
addb
in
dec
dec
cmpsb
push
pop
xor
adc
fwait
call
lea
pop
aas
adc
cmp
ljmp
out
push
data16
jp
mull
out
pushw
dec
mov
jg
stos
mov
dec
pushf
mov
sub
dec
mov
xor
mov
fwait
cmp
dec
leave
sub
pop
xchg
jo
mov
sbb
scas
cli
mov
call
popf
xchg
jle
ss
pusha
and
push
clc
shl
faddl
cmpb
in
cmp
mov
pop
pop
or
repz
sub
leave
mov
leave
sbb
mov
xchg
dec
ret
mov
lods
sbb
dec
inc
stos
mov
jecxz
xor
xchg
popa
xchg
pop
adc
aas
cmp
jge
mov
mov
dec
jg
or
lods
decb
mov
mov
aas
fisttpll
ja
imul
lret
enter
daa
icebp
fiaddl
sbb
sub
lret
sarl
mov
mov
sub
int3
push
xor
les
cld
bound
or
jmp
ja
inc
jno
leave
xchg
lea
ds
xchg
add
jbe
sub
aad
scas
ljmp
andb
push
or
mov
or
sti
in
cmpsb
mov
jbe
xor
fucom
or
mov
adc
scas
pop
and
lods
push
mov
xchg
in
fsubrp
data16
jmp
rclb
mov
aaa
push
roll
ret
sbb
aam
inc
dec
cmc
test
jl
movsb
xchg
inc
xor
or
pop
test
and
pusha
dec
jg
outsl
ljmp
and
pop
sbb
or
dec
push
shufps
mov
adc
arpl
jae
mov
call
mov
pop
aam
push
gs
int
push
rol
popf
test
test
mov
testl
scas
jg
add
xor
aad
setbe
xchg
in
rcr
insb
mov
xchg
jae
test
mov
sub
stos
out
aad
test
xor
inc
mov
sub
inc
popf
push
mov
add
stos
cmp
cmp
pop
outsl
mov
outsl
and
push
add
xchg
test
xchg
stos
rolb
into
mov
jo
lock
insb
scas
loope
lret
mov
out
sar
ja
cmp
outsb
sbb
push
or
sub
aas
fistpl
dec
xorl
les
enter
sub
jp
in
inc
mov
sub
imul
mov
mov
fs
and
cli
xorb
or
fldenv
pop
clc
cld
insb
mov
lods
daa
sbb
clc
adc
jmp
out
idivl
movsl
loopne
push
and
jmp
sub
imulb
adc
scas
xchg
les
shll
les
pop
lods
hlt
jns
ss
popf
lret
mov
jp
movsl
pop
push
jg
movsb
sbb
xlat
call
and
out
in
lock
je
ss
stos
xchg
push
cmp
js
in
add
cmpsb
ret
jnp
loop
aas
hlt
mov
jb
pushf
aam
xchg
or
push
ja
fs
mov
rcrl
push
imul
jmp
jl
xchg
shll
fldlg2
mov
cmp
lahf
cmpl
ja
scas
lea
xchg
cltd
aas
cmp
lcall
lahf
sbb
add
adc
pop
cmp
mov
sbb
pop
mov
repz
insb
daa
and
and
mov
idivl
and
mov
sarb
ljmp
xchg
mov
iret
clc
mov
mov
sbb
or
jg
adc
inc
sahf
mov
xor
pop
lods
xchg
insb
inc
jge
adc
mov
pop
in
push
stc
xchg
push
xchg
xor
sbb
rol
cmp
jge
outsb
or
jbe
mov
cltd
xchg
xor
pop
push
xchg
and
sub
inc
sbb
inc
add
pop
sub
mov
lods
imul
lret
push
and
mov
test
mov
test
xchg
std
hlt
mov
cli
jns
inc
insb
jne
push
lahf
mov
mov
ljmp
stos
inc
pop
push
push
out
sub
mov
push
or
subl
icebp
ret
arpl
sbb
mov
add
repnz
imul
inc
lds
mov
pushf
stos
xor
lods
iret
push
repnz
pop
jp
push
fnstenv
mov
roll
insl
xor
bound
push
jae
pop
push
mov
stc
outsl
lea
leave
aam
test
xor
shlb
stos
mov
mov
lret
insb
cwtl
sbb
xor
cmp
mov
js
mov
pusha
inc
imul
scas
out
pushf
add
inc
jecxz
aaa
push
int3
mov
test
adc
scas
jmp
or
cmp
jl
adc
cltd
and
sbb
roll
rcrl
out
pop
sbb
add
out
dec
cli
outsb
outsl
jl
in
mov
pusha
lock
pop
fidivl
jo
fwait
sbb
inc
sbb
ljmp
jne
cmp
test
jg
and
out
std
push
pop
jp
sub
pop
pop
movsb
sbb
jbe
xchg
inc
jb
xor
jbe
call
pop
mov
sbb
xchg
pop
push
in
xor
subl
aaa
cmp
or
scas
mov
cmp
jg
jp
jmp
fiaddl
clc
cltd
adc
arpl
jmp
loope
lcall
cld
int3
mov
jmpw
dec
mov
sub
je
lahf
addr16
hlt
adc
bound
sbb
inc
pusha
and
sti
iret
clc
adc
scas
mov
fisubrs
xor
xor
int
jmp
lds
push
jg
fnstenv
std
dec
icebp
movw
adc
inc
push
xor
sub
mov
jne
sbb
mov
jp
fs
adc
jle
stos
mov
pusha
ret
pushf
or
pushf
arpl
fisubs
aad
aas
sub
xor
mov
mov
cwtl
pop
xchg
test
out
push
into
adc
cmp
sbbl
andl
push
lods
cmp
les
mov
out
pop
inc
push
push
sub
in
sar
mov
fstps
std
movsl
jnp
movsl
in
shl
aas
fistl
out
fs
pop
ljmp
fstpt
mov
pop
addr16
dec
dec
dec
inc
rcrb
lret
add
pop
xchg
xchg
mulb
outsb
push
xor
mov
pop
lock
mov
dec
adc
push
cld
cwtl
cld
or
je
pushf
add
push
or
push
dec
xchg
sub
fldl
and
mov
test
cmpsl
push
xchg
mov
stos
mov
adc
movsb
mov
pusha
ljmp
fimuls
or
testl
ror
lds
pop
lret
cmpsb
cmp
mov
data16
dec
mov
jmp
lods
inc
jb
xor
movsl
mov
sarb
popf
cltd
mov
mov
lahf
mov
xor
cmp
nop
lret
test
jecxz
fimull
int
lret
jo
stos
es
jno
pusha
movsl
add
loop
lods
mov
aas
adc
clc
push
aaa
mov
cwtl
lock
stos
and
push
aas
jnp
mov
pop
jo
or
mov
inc
in
hlt
push
mov
loop
into
jp
out
and
add
sub
jmp
not
cli
test
pop
push
mov
mov
in
xchg
add
push
add
pop
pop
dec
cmp
das
loopne
cmp
adc
test
sub
loopne
aas
xchg
jo
add
add
jne
nop
jae
popf
lds
xchg
push
test
addr16
mov
mov
xchg
in
jp
nop
int
stos
xlat
scas
int3
pop
xor
lcall
inc
push
rolb
insb
shll
test
out
loope
ret
aaa
shrl
mov
xor
ret
jl
or
mov
mov
adc
push
sahf
xchg
xchg
or
mov
stc
ja
mov
ds
adc
mov
mov
mov
pop
cmc
sbb
cli
daa
das
or
mov
sbb
mov
imul
sarl
add
imul
pop
push
dec
dec
push
jae
dec
and
inc
repz
add
mov
mov
aas
bnd
cmp
sub
xchg
dec
das
test
clc
xor
icebp
in
sub
aam
andb
sub
jns
add
or
and
clc
adc
inc
sbb
and
scas
dec
pop
fnstcw
dec
push
in
and
dec
adc
push
push
popa
mov
pop
cmpsl
jns
xor
dec
xchg
repnz
push
movsb
cwtl
cltd
in
jne
cmp
pop
dec
iret
out
pop
call
scas
jns
mov
mov
push
dec
loope
outsb
sub
cld
fdivr
scas
push
ficomps
out
je
imul
mov
xor
mov
test
xorl
pop
jge
xlat
xor
sarb
aaa
data16
inc
dec
jecxz
in
mov
sbb
in
pushf
insl
sub
outsl
jb
xchg
sbb
scas
icebp
xor
push
xchg
inc
ret
sub
movsl
adc
pop
out
inc
fs
les
lds
icebp
dec
inc
into
jmp
push
xchg
adc
xchg
lret
mov
adc
adc
jmp
test
xchg
pushf
aas
adc
mov
xlat
out
out
pop
fsubrs
mov
mov
jno
xlat
call
mov
mov
or
mov
fldl
and
cmp
icebp
xor
pop
sahf
inc
cwtl
and
dec
jae
popf
cmp
notl
xchg
rcl
rolb
adc
cmp
sbb
rcr
add
jbe
aad
add
sub
test
in
mov
lret
rcrl
add
lret
pop
add
mov
sub
jbe
cmc
lahf
orb
popa
cmpsl
je
push
dec
aam
inc
dec
xchg
int3
inc
stc
sub
jbe
and
loop
cmpl
loope
sub
jns
xor
mov
add
cmpsl
dec
mov
mov
inc
outsl
fsubrs
xlat
mov
sub
and
xlat
enter
add
mov
push
in
or
cmp
loop
dec
and
outsl
sarb
out
jg
mulb
ja
test
pop
rolb
or
mov
push
out
ds
das
push
nop
addr16
aaa
mov
or
adc
fstpl
mov
adc
fdivr
or
out
out
add
xchg
or
stos
and
adc
sbb
sbb
pop
sbb
cmp
arpl
mov
enter
jns
scas
gs
cmp
mov
xor
jg,pt
sti
rorb
xor
loopne
test
jp
cmp
mov
pop
mov
pop
ds
cmp
mov
push
add
sub
leave
sub
cmpsl
push
std
ret
mov
mov
fcomi
shlb
push
dec
xor
loop
clc
adc
jnp
int3
fnstcw
xchg
test
shll
sti
aam
pop
xor
mov
loope
lock
sub
or
and
mov
adc
jnp
mov
pop
jmp
mov
aaa
mov
cwtl
pop
lahf
mov
dec
jecxz
pop
sti
repnz
daa
test
mov
dec
add
rcl
ret
movsb
jae
lcall
pop
sbb
cld
jns
sub
sti
dec
add
fsts
fsubrs
jnp
mov
xchg
cmp
xor
add
or
out
ss
in
ljmp
sti
ljmp
mov
int
xor
mov
xchg
and
dec
fbstp
movsl
xchg
mov
bound
cmp
xor
test
imul
mov
je
inc
xor
jp
jecxz
in
pop
pop
cmp
or
fwait
sub
fucomi
andb
icebp
lahf
or
rol
cmpsl
push
popa
fldenv
stos
insl
fstps
jge
lcall
inc
scas
and
or
into
out
inc
test
divl
mov
hlt
call
jne
mov
or
pop
sub
pop
scas
push
lods
jno
xchg
xchg
push
mov
lahf
dec
mov
hlt
insb
jbe
addr16
cmpl
mov
mov
or
insl
push
pop
push
adc
dec
xchg
adc
fwait
nop
mov
clc
pushf
nop
adc
cli
arpl
jge
cmp
std
mov
insb
in
mov
pushf
xchg
sbb
popa
jns
les
clc
fwait
lcall
in
fists
loop
outsl
fs
xchg
xchg
sarb
inc
push
sub
push
cmp
mov
test
xor
dec
push
fmuls
xchg
jne
lods
xchg
mov
xchg
jbe
into
ljmp
pop
adc
cmpsb
jmp
push
lds
xor
push
daa
sahf
sub
jmp
icebp
jecxz
or
cmpsb
add
xor
ucomiss
cmpb
call
imul
daa
inc
pop
incb
test
xor
lret
leave
pop
sub
mov
les
inc
lds
inc
aad
mov
mov
cmp
jb
xor
pushl
stos
fsubp
jmp
inc
mov
jbe
xchg
das
mov
test
add
push
mov
push
rolb
inc
push
mov
lock
jbe
test
icebp
pusha
xchg
jl
or
cmp
push
pop
sub
sbb
call
push
loope
fisttpl
pop
xor
and
mov
dec
outsb
push
xchg
cmp
or
cld
out
iret
fistps
push
jo
movsl
lock
jge
lods
or
shrb
arpl
and
imul
jb
imull
or
and
pop
cltd
mov
out
hlt
add
shll
jle
fwait
popf
cltd
mov
add
outsb
pop
mov
popf
xchg
nop
jp
jo
pushf
lahf
outsl
push
movswl
movups
push
popa
xchg
cltd
ret
jnp
adc
bound
push
lahf
mov
fxch
lods
outsl
shl
dec
xor
xor
movb
pop
push
scas
test
xchg
in
clc
xchg
inc
push
dec
dec
mov
popf
xchg
sbb
push
sbb
xor
addr16
test
mov
push
std
rolb
mov
mov
xor
fstpt
inc
test
sub
add
and
ja
and
fstps
jmp
test
mov
jbe
dec
mov
hlt
add
push
inc
fisttpll
mov
lahf
test
je
pusha
mov
pop
mov
cli
das
jmp
sub
pusha
pop
fildl
es
fs
push
cmp
das
clc
sti
mull
stos
push
ja
pop
roll
fwait
addr16
cld
dec
mov
mov
or
loope
fistps
movsl
daa
mov
scas
xchg
cmp
jle
test
xchg
add
stos
pop
cmp
or
add
setl
ljmp
mov
outsl
mov
adc
pop
dec
jge
repnz
cmpsb
lahf
mov
popa
cmpl
cs
add
cmc
xor
repnz
cmp
mov
sbb
sbb
lahf
mov
inc
add
sub
stc
imul
daa
pop
sbb
js
add
test
leave
cld
sti
adc
cmpsb
sbb
fsubs
inc
test
mov
out
sbb
mov
mov
lret
mov
dec
jecxz
jg
or
test
pop
xlat
cmp
adc
test
enter
lcall
rorl
xor
lahf
call
jb
inc
clc
fld
enter
fucom
mov
lods
xchg
sbb
rolb
jecxz
in
xlat
fistl
loope
pop
mov
sbb
repz
cltd
pop
sub
incb
or
insl
sub
rorb
jg
push
cmpsw
mov
xchg
lahf
mov
mov
lcall
fiaddl
dec
jno
jg
hlt
add
inc
hlt
imul
inc
pusha
ljmp
or
fidivrs
repz
fildll
dec
cmpsl
push
and
cld
lea
out
fwait
lods
test
in
int3
mov
and
lock
cmp
sbb
fidivl
pop
test
pop
add
faddl
jge
repz
mov
ret
mov
mov
in
shlb
in
inc
cmp
int
sub
fildll
iret
mov
mov
cmp
mov
testb
pop
je
jb
mov
or
xchg
xor
nop
fisubl
jmp
adc
sbb
lods
dec
jge
jg
in
pop
adc
int
cli
pop
sbb
das
rolb
call
jne
cmpl
stc
scas
cmpsb
jge
push
inc
mov
mov
fnstsw
scas
in
dec
bound
mov
push
popf
std
mov
movsl
xor
jecxz
or
sbb
xor
inc
idivl
xchg
rorb
push
bound
push
sub
int3
inc
xchg
jno
sbb
insb
sub
notb
add
push
xchg
sbb
popa
and
jo
or
in
idivb
js
jmp
and
insb
xor
cli
loopne
icebp
data16
adc
data16
cli
pop
clc
pop
push
xchg
jb
aas
sub
pop
lahf
aam
dec
jge
mov
pop
sbb
push
ljmp
rorb
push
mov
outsl
pop
inc
pop
pop
sbb
push
xchg
xchg
or
sti
mov
push
inc
cmp
mov
fists
jle
mov
enter
xchg
out
add
in
adc
jbe
std
movsb
es
in
inc
dec
jmp
mov
daa
and
les
pop
mov
add
ret
adc
cwtl
add
decb
fcoms
pop
jmp
cld
cmp
mov
pop
ss
movsb
lods
pop
imul
iret
arpl
insb
insl
mov
outsl
fs
loop
cmp
and
sbb
dec
inc
push
fdiv
outsb
jge
jno
popf
dec
leave
or
cmpl
xchg
pop
ljmp
and
add
push
mov
in
test
cld
shll
jnp
or
push
mov
ret
mov
orl
sub
cmp
inc
insb
dec
fmull
pop
hlt
and
inc
jge
mov
pop
sbb
fstpt
jecxz,pt
jae
lds
fisubrs
lods
out
daa
pop
idivb
add
outsl
sub
out
sub
mov
test
sub
rclb
fistl
adc
inc
idivb
fs
push
xor
jmp
jmp
xchg
pop
pop
fldz
notb
stos
dec
add
and
jmp
xlat
div
push
lahf
ret
push
cmp
inc
pop
xlat
enter
xor
inc
repz
test
or
sbb
scas
push
loop
and
mov
mov
or
xchg
stc
add
out
shll
pushf
aad
jbe
sbb
and
xchg
out
loope
insl
inc
iret
ret
adc
mov
loopne
ja
and
sub
popf
xor
cltd
lret
inc
or
push
lahf
push
imulb
sbb
dec
and
jne
insl
jmp
add
shlb
vmread
push
repnz
mov
xchg
ds
stos
mov
out
cmp
sub
jno
leave
loopne
mov
in
jb
dec
xor
movb
inc
dec
mov
fdivrl
mov
ss
push
or
pushf
mov
ret
lds
inc
push
mov
test
shll
jle
movsb
add
jne
sbb
adc
adc
fistl
fimuls
xchg
push
lds
in
mov
cmp
xchg
add
addr16
iret
jge
insb
dec
dec
std
mov
mov
cld
mov
add
sub
stos
pop
mov
add
mov
mov
cld
cli
cmpsl
pop
add
lahf
xorl
mov
shl
cs
es
mov
mov
dec
test
push
test
sbb
and
jmp
dec
daa
mov
or
fcomip
pop
cli
fcoms
sahf
or
ret
out
rol
out
repnz
pop
lret
mov
xchg
pop
shlb
fisttpl
cmp
leave
pop
test
out
in
mov
outsl
fmulp
xchg
jbe
ja
jbe
xchg
and
pusha
xchg
push
pop
dec
or
mov
addl
es
inc
cmc
fcmovnbe
incl
inc
fnstcw
aaa
jmp
aaa
adc
pop
xchg
outsl
popf
lods
inc
and
js
int3
fs
add
push
aaa
aaa
jge
inc
xor
fcom
jmp
jno
cmp
push
mov
mov
xchg
sbb
and
mov
mov
xor
mov
xor
mov
pop
nop
dec
sbb
sbb
mov
sti
mov
ret
fcmovu
lds
arpl
testb
dec
movsb
and
nop
repz
xchg
or
movsl
push
loope
int3
mov
fdivrl
cmpsl
sub
data16
je
nop
in
ljmp
comiss
cltd
xlat
sbb
notb
inc
adc
insb
aas
pop
pop
cmpsb
xchg
iret
roll
pop
jecxz
repz
fbld
jge
adc
das
sbb
mov
ror
cmpsl
xchg
mov
loopne
fs
adc
std
mov
testl
xchg
add
cmc
xor
orl
popf
sbb
push
adc
push
push
and
lret
cmp
cmpsl
stc
xor
ja
mov
mov
lods
push
movsl
das
das
inc
fidivrs
lcall
sbbl
push
sbb
adc
dec
enter
add
push
jl
cli
adc
lret
mov
in
imul
out
dec
jle
std
leave
push
push
pop
or
and
out
popa
mov
stc
xor
mov
das
mov
imul
dec
in
mov
cmpsb
inc
out
insb
xor
pop
mov
push
push
insl
jne
adc
cmp
push
test
xor
add
or
cmp
cwtl
stos
cmp
sub
stos
cmpsl
shlb
xchg
test
adc
sub
insb
lret
xchg
cli
cmp
push
or
sub
ret
pop
push
push
test
jno
call
iret
shl
fs
jne
jle
sahf
mov
cmpsl
sbb
orl
or
add
iret
int
notb
pop
and
jae
test
leave
add
test
push
inc
cmp
push
jp
insl
cmp
or
and
pop
mov
nop
popf
pop
cmp
pushf
pop
inc
or
sub
xor
lret
insl
jmp
in
push
insb
mov
test
clc
loop
lods
hlt
sbb
inc
push
xor
ljmp
push
cmp
in
arpl
jmp
sub
in
test
mov
fstps
aam
aad
mov
sbb
leave
sbb
jg
arpl
mov
fbld
test
cmp
loope
aaa
loope
dec
push
sar
inc
push
dec
xchg
mov
sub
repnz
es
arpl
decb
ds
cs
out
shl
ficoml
jnp
xchg
outsb
sarl
mov
and
xchg
mov
pop
pop
push
in
in
cmp
js
pushf
aad
in
sub
int
cwtl
push
xor
jae
scas
test
dec
shll
aam
or
pushf
jbe
push
fldt
cs
pop
push
fdivr
mov
das
stc
imul
or
jne
adc
sub
xor
xchg
enter
nop
jne
jne
test
es
outsl
sub
add
cmpsb
dec
pop
lcall
loopne
icebp
stos
setge
jnp
push
shrl
cmp
and
dec
andl
repnz
lret
je
fistpll
cmp
loope
lcall
or
div
or
pop
mov
cmp
or
hlt
sbb
push
pop
scas
leave
jecxz
inc
jae
cmpsl
jb
push
inc
xchg
enter
cmpsb
scas
stos
loope
add
pop
fstp
arpl
mov
pop
push
pop
leave
mov
inc
sti
lds
out
inc
out
cmpsl
test
xor
jl
lock
into
pop
cmp
jbe
jnp
push
enter
jnp
mov
xchg
cmp
jl
mov
mov
ja
shr
sbb
add
dec
cli
jbe
pusha
enter
dec
cmp
scas
cld
mov
hlt
es
sub
adc
inc
movsl
dec
sub
pushf
or
pop
push
mov
cltd
cmp
jb
jno
adc
adc
dec
insb
ds
or
stos
andb
mov
sbb
add
clc
out
inc
fsubr
xor
jmp
push
out
adc
mov
xor
xchg
jp
pop
xchg
hlt
sbb
lret
repnz
xchg
aas
adc
loopne
leave
ja
in
pushf
push
mov
sub
jne
cmc
fisttpl
mov
dec
aaa
cwtl
in
sar
xchg
pop
test
pop
dec
sti
idivb
pop
jl
sbb
cmpsb
mov
ja
xorb
loop
mov
std
test
ss
cld
inc
int3
mov
call
sbb
popa
adc
cmp
mov
ljmp
jno
test
mov
in
pop
pusha
movsb
out
rclb
repnz
test
je
sbb
cwtl
sub
test
mov
js
mov
fsubr
push
arpl
or
mov
out
push
call
jp
lret
mov
arpl
fimull
fidivrl
scas
jo
js
lock
das
aam
nop
and
pop
and
test
cmp
lret
or
fstp
adcb
loopne
mov
ds
or
ss
icebp
xlat
dec
aam
cmp
mov
push
ja
iret
add
inc
or
mov
in
lods
push
movsl
push
lods
xlat
ds
cmp
pop
inc
mov
out
ljmp
mov
nop
fstpl
cld
or
fs
loope
hlt
sub
xor
sbbb
in
lahf
cld
out
sub
movsb
adc
mov
addr16
in
jne
or
push
push
lods
push
pushf
idivb
push
sub
cli
fimuls
push
call
pop
mov
mov
cmpsl
xor
dec
arpl
and
cs
fcomps
notl
arpl
and
inc
in
je
rcrb
mov
fcoml
imul
lcall
pop
cld
addr16
xchg
xchg
add
mov
sbb
andl
xor
cmpsb
aaa
cli
repz
push
and
data16
les
fwait
pop
mov
ljmp
lods
jbe
xchg
xlat
subb
enter
cltd
loopne
std
in
and
sahf
cs
push
cmpsl
lock
lds
sbb
fidivrl
test
div
or
cmp
into
cli
cmp
xchg
stos
repnz
out
test
mov
mov
test
pop
aas
test
pusha
push
pop
cmp
xchg
outsl
sub
popf
aam
aad
mov
cmc
mov
jb
cmpsb
call
jp
aas
sbb
jne
popa
and
fnstsw
mov
inc
dec
aaa
sbb
test
int
clc
cmp
sub
es
addl
shr
std
jl
mov
incl
ret
mov
mov
popa
ret
xchg
cmc
sbb
sub
popa
lcall
adcl
adc
popa
or
aaa
jns
rorl
dec
mov
lock
scas
mov
shlb
bound
xchg
pushl
jnp
push
xor
or
clc
mov
outsb
sbbl
add
seta
add
and
or
and
jge
cwtl
call
mov
mov
push
add
inc
inc
fsubrl
lds
pop
roll
ret
mov
rclb
out
sub
in
and
dec
or
push
and
add
stos
jnp
rorl
pop
lret
aad
stos
outsb
andl
pusha
daa
lcall
sbb
pop
aad
jmp
push
dec
ds
rcll
sbb
xor
mov
add
jmp
jmp
iret
push
lock
cmp
hlt
jp
addr16
int
push
out
data16
repnz
push
jnp
sahf
sub
push
into
jle
add
add
loop
in
sahf
pop
adc
cmc
je
xorl
jae
jnp
push
xor
sbb
mov
cmpsl
push
or
jae
mov
inc
dec
xchg
loopne
pop
add
inc
xchg
shrl
add
jmp
sarb
inc
mov
xchg
dec
pop
cli
sub
dec
test
and
xor
xchg
repz
hlt
and
pop
js
stos
int3
sub
sub
pop
adcl
mov
jp
inc
roll
add
or
out
mov
clc
pushf
jns
fistpll
adc
test
jb
inc
test
push
mov
mov
and
and
push
push
jg
or
imul
pop
pop
cmp
mov
pop
jnp
adc
fidivs
leave
fcmovbe
int
arpl
add
add
push
and
mov
push
xlat
fisubs
jle
cwtl
cmc
xor
popf
cwtl
xchg
adc
jnp
mov
xchg
mov
mov
scas
insl
and
outsb
pop
pop
jo
dec
lahf
outsl
outsb
or
cltd
movsb
or
pushf
push
cmp
gs
cltd
mov
pop
adc
add
lea
imul
subb
pop
adc
subl
stc
ja
loope
jg
adc
stos
stos
cmp
das
addr16
insb
mov
mov
out
icebp
lods
test
pop
hlt
sbb
adc
xor
pushf
pop
xor
cli
push
gs
nop
adc
add
dec
comiss
dec
pop
stos
xor
xchg
sbb
sub
mov
or
pop
shll
mov
jne
push
scas
cmp
mov
pop
inc
cmp
call
call
mov
cmpsl
insb
int
es
fistpl
pop
lock
filds
jo
jne
inc
icebp
cmp
data16
daa
push
xor
jge
mov
mov
repnz
push
in
sbb
ret
ret
fcomp
aam
es
aam
insb
mov
sbb
push
jge
add
lcall
push
push
cmp
aam
add
arpl
sbb
sbb
cli
enter
and
add
mov
insl
movb
cmp
jmp
fmul
cmpsl
jo
add
cli
mulb
xchg
jecxz,pn
xchg
and
lods
push
adc
jnp
jnp
jne
orb
dec
or
inc
mov
es
mov
test
iret
push
pop
ja
pop
jbe
enter
jmp
xchg
pushf
shl
adc
xchg
and
sahf
movsl
loop
xchg
add
dec
mov
sub
ret
jbe
lret
js
push
mov
ljmp
cmc
pushf
sahf
mov
jne
incl
push
xor
push
es
outsb
test
rclb
add
cmp
push
pop
inc
jb
cs
xchg
push
out
pop
mov
sar
mov
push
stos
push
sbb
out
jg
shll
sub
iret
sub
pop
add
push
push
xchg
fdivs
add
mov
repnz
aaa
add
lods
aad
dec
jns
mov
mov
loop
mov
shlb
lods
inc
dec
aam
repz
loope
xchg
adc
aaa
insb
push
cld
jne
xchg
jmp
test
sbb
fs
push
ds
js
les
jge
lea
lret
mov
test
and
pop
add
push
add
xchg
sarb
add
xor
data16
orl
sub
shl
movsl
xlat
add
cli
hlt
adc
jle
cmp
je
xor
andl
or
leave
jb
pop
jecxz
lods
fwait
test
adc
in
or
jnp
mov
sub
popf
out
add
lods
pop
or
clc
xchg
xor
aas
xor
pop
pop
loop
out
adc
cmp
jae
mov
lret
sub
cmp
out
inc
lds
jecxz
call
lods
pop
xor
inc
pop
inc
mov
js
sbb
sub
jge
mov
jae
ds
fidivrs
pop
adc
std
add
dec
xor
inc
in
jae
pop
shlb
mov
loop
inc
call
loopne
icebp
mov
scas
ljmp
test
jne
dec
jbe
sbb
mov
ljmp
cmp
push
cmp
cmp
xchg
sub
cld
pop
ds
mov
add
mov
lret
xchg
add
jg
repnz
xchg
std
lret
cwtl
or
mov
mov
inc
sbb
ljmp
jne
xor
sbb
insb
ja
xchg
test
stos
mov
in
nop
imul
cmp
push
jmp
add
push
iret
lea
push
pop
ss
add
out
and
adc
aam
lret
lods
in
hlt
jle
push
fldt
inc
imul
mov
mov
adc
scas
or
pop
mov
insb
pop
sahf
test
and
pop
jmp
inc
in
fcomi
dec
cmp
jnp
shll
mov
pop
ss
and
loopne
xor
cmpb
enter
adc
sbb
insb
mov
adc
outsl
aaa
xchg
pop
data16
scas
xor
sbb
sti
pusha
test
int3
minps
cmp
or
imul
push
jg
cmpb
sub
mov
out
iret
push
xchg
pop
jg
sbb
lcall
pop
cmpsl
scas
jmp
addb
push
ds
icebp
inc
or
out
or
mov
fsts
jno
imul
add
jle
hlt
or
ljmp
outsb
adc
or
stos
repz
dec
je
repnz
test
lret
leave
inc
and
xor
imul
test
and
or
inc
inc
push
sbb
leave
xlat
clc
orb
adc
lcallw
xor
jmp
cld
add
test
cmp
or
hlt
sbb
imul
imul
gs
dec
pop
popf
cmp
jbe
flds
add
or
sbb
xchg
sarb
xor
test
xchg
cmp
adc
and
dec
sub
cmp
xor
into
cld
call
cmpsl
ja
call
fiaddl
or
lahf
loope
dec
pop
std
idiv
icebp
loopnew
jo
testb
adc
clc
sub
and
and
mov
fwait
dec
and
cwtl
push
fisubrl
push
lcall
ret
add
push
xchg
mov
dec
cltd
dec
xlat
addl
fldt
pop
mov
call
mov
inc
push
and
adc
and
je
add
xchg
xchg
xchg
je
jns
inc
lret
add
sub
push
lea
jle
lahf
lods
mov
xor
into
sbb
jb
lds
cmpsl
inc
clc
fwait
sbb
and
dec
addr16
negb
sub
mov
call
and
jmp
les
mov
dec
add
gs
lret
xor
ret
mov
idivl
xchg
cmp
nop
int3
fistl
mov
out
mov
mov
mov
push
sbb
add
jge
hlt
jle
out
repnz
xchg
out
mov
mov
rclb
mov
mov
push
jl
fs
rclb
mov
cmp
mov
fldcw
xor
push
scas
and
inc
es
adc
jo
add
xchg
aam
mov
sub
in
mov
and
jmp
dec
inc
pusha
add
push
jp
fdivrl
jb
or
in
ficompl
inc
inc
das
in
out
mov
adc
adc
clc
imul
inc
add
in
cmpsb
cmpsb
ficoml
fdivrs
mov
xor
jmp
adcl
stc
pop
push
push
push
adc
mov
mov
data16
fcomp
stc
pop
into
repz
cmpsb
pop
movsl
dec
arpl
ret
rolb
cli
sub
xlat
push
and
stos
stos
xor
xor
movsb
repnz
and
jae
or
jecxz
pop
dec
gs
rorl
shll
xchg
cmp
adc
into
leave
sbb
xor
push
nop
adc
in
gs
jns
mov
scas
mov
dec
stos
or
mov
or
addr16
nop
or
or
xchg
mov
jmp
pop
dec
push
jo
sbb
mov
outsl
call
xchg
mov
scas
cmp
sub
fs
push
push
insl
stos
mov
pop
cld
xor
fisubrs
rcll
add
xchg
push
jmp
movsl
aas
mov
shll
sbb
push
loop
cld
daa
inc
sub
adc
mov
popf
and
out
xchg
cli
mov
icebp
push
aam
inc
xchg
addr16
xorl
jns
mov
cmp
fnstenv
jecxz
lcall
dec
fistl
inc
fucomip
adc
jo
jle
mov
in
fdivl
imul
out
jmp
pop
jge
sub
mov
pop
das
sbb
dec
adc
xor
fsub
dec
jg
or
popf
aaa
cmpsb
ror
jl
xlat
cld
xchg
in
ds
xor
loopne
or
add
fidivrl
insl
popa
cmp
xlat
sbb
sbb
cmp
xor
and
inc
popf
dec
jge
aam
stos
pushf
inc
cmpsl
loopne
jge
cwtl
xor
push
mov
jb
sub
daa
pop
scas
cmp
int3
test
pop
clc
xor
mov
imull
cmpsb
cmp
cs
ss
push
cmp
aad
dec
in
outsl
stos
mov
cli
or
ret
test
push
push
pop
cmpsb
xchg
xchg
cvtpi2ps
stos
scas
or
xor
std
stc
inc
sbb
xor
shr
xchg
push
xchg
std
in
or
or
rolb
cmp
add
xor
daa
fcmovu
pop
cmpsb
dec
leave
hlt
xor
xchg
dec
jle
fisttpll
int
test
aad
and
dec
test
xor
fstpt
cld
sti
dec
loope
les
loope
add
es
test
outsb
jge
mov
pop
add
xlat
add
mov
rcrb
dec
pop
xlat
mov
loope
jbe
push
fiadds
fdiv
pop
push
je
rolb
jge
cmpsl
inc
dec
lods
fisttpll
cmpsl
or
or
enter
adc
test
lea
aad
aam
xor
addr16
push
and
test
insl
xor
pop
mov
data16
dec
aad
fwait
mov
int
cmp
ret
xor
adc
push
xlat
push
les
inc
inc
jb
jecxz
fmuls
cmp
out
cwtl
int
mov
insb
mov
sti
mov
rorb
ror
mov
mov
hlt
fst
dec
sub
ret
andb
roll
rorb
dec
test
and
daa
ljmp
imul
stc
adc
mov
jl
mov
ljmp
adc
cwtl
push
ret
pop
in
sub
mov
popa
sub
sbbb
stos
lods
incl
mov
cmp
xchg
push
leave
test
or
imul
inc
daa
add
xor
xchg
sar
icebp
insb
mov
mov
leave
jmp
pop
pop
test
clc
outsb
jg
add
xor
decb
loope
addr16
ret
je
sub
and
hlt
or
inc
pop
outsb
xchg
jae
add
sbb
push
jae
mov
xchg
cltd
mov
mov
test
sbb
in
insl
xor
daa
push
or
rolb
sub
sarb
sbb
pop
pop
aaa
dec
sub
dec
test
leave
mov
sti
ss
adcl
dec
bound
lcall
dec
jns
test
jge
xchg
mov
mov
pop
es
or
adc
dec
mov
jae
sbb
stc
jge
or
adcl
xlat
xorl
push
and
mov
pushf
adc
cld
scas
xchg
or
inc
jmp
lahf
adc
orl
and
inc
inc
imull
mov
mov
jmp
cmpsb
fists
jno
ljmp
idiv
xchg
aad
adc
insl
and
mov
dec
adc
adc
int3
inc
sbb
rorb
les
clc
cmp
cmp
jg
adc
sarb
leave
into
dec
iret
sahf
xor
mov
mov
leave
mov
in
pop
loop
ficomps
shrl
xor
test
sbb
pushf
sub
adc
jae
ja
mov
aas
xorb
rorl
or
mov
iret
push
mov
ret
leave
nop
or
add
xlat
sbb
movsb
insl
in
adc
pop
lea
sub
enter
mov
loope
popa
xchg
xor
cld
sub
push
ss
cmp
repnz
les
aas
mov
xchg
dec
push
bswap
test
clc
inc
loopne
roll
inc
adc
mov
cmpsb
andl
jnp
iret
xor
xchg
cld
nop
stos
or
cmpsl
bnd
loop
in
fadd
scas
gs
jg
adc
out
or
in
in
mov
fdivr
cld
into
mov
push
flds
sub
jo
lcall
mov
hlt
in
ror
jp
mov
aas
pushf
mov
xlat
insb
in
cmp
mov
cltd
in
jbe
or
mov
mov
inc
fstps
lea
aas
xor
ret
filds
ljmp
jo
sti
sbb
push
gs
sub
sbb
jmp
and
pushf
fdiv
adc
out
xchg
inc
test
movl
lea
xor
jae
adc
int
adc
mov
or
test
rcrl
test
imul
lds
cmp
jecxz
stos
and
mov
pop
mov
nop
xchg
out
xchg
or
mov
shll
or
jnp
lahf
inc
dec
ss
pop
xor
dec
repnz
xor
mov
push
jmp
ljmp
out
xlat
pop
pop
mov
push
lods
call
dec
mov
clc
lods
test
jmp
ret
icebp
fwait
stos
jge
cmp
shr
test
clc
cmp
lds
les
mov
addr16
mov
std
mov
cmp
fisubs
into
jnp
cmp
push
insl
stos
pop
rorb
push
in
sarl
mov
fdivs
mov
out
in
fcoml
mov
movsl
pop
iret
dec
jne
ja
fstpt
in
inc
jge
loop
inc
data16
hlt
stos
dec
hlt
test
ret
ljmp
enter
mov
rclb
call
popa
movsb
rorl
leave
pop
pop
sbb
leave
ret
mov
test
and
jo
inc
and
jp
or
test
mov
jbe
movsl
mov
stos
mov
inc
push
jae
mov
shrl
xchg
andl
cmp
sbb
bound
cmp
lret
inc
pop
dec
mov
data16
subl
jp
mov
out
in
xor
andb
xor
arpl
pop
mov
iret
andb
jge
stos
xchg
pop
sub
outsb
lret
and
sub
xchg
push
lret
jecxz
dec
int3
add
inc
cwtl
stos
mov
in
xchg
xor
mov
cli
jg
stc
add
push
xlat
mov
dec
aad
add
push
lahf
xchg
or
jo
inc
jecxz
dec
sub
xor
xor
push
sti
jge
aaa
jecxz
add
xor
add
out
mov
xor
imul
fstpl
stos
xor
stos
mov
scas
icebp
pop
or
out
add
xlat
inc
jns
lods
add
xor
stos
jbe
arpl
mov
mov
sbb
inc
testb
pushf
pop
cmp
push
iret
das
adc
cltd
add
xchg
repz
and
fisttps
mov
in
inc
push
mov
push
pop
andl
push
push
adc
arpl
loope
iret
pop
fnstsw
xchg
es
adc
push
js
imul
jecxz
sub
mov
aad
cmp
pop
loopne
daa
jl
sbb
and
xchg
mov
xchg
sub
sbb
inc
fcmovu
pop
adc
inc
mov
jle
pop
cli
aas
jo
lea
mov
movsl
in
sti
call
leave
xlat
cmp
cwtl
mov
jl
cli
or
xchg
out
push
pop
xorl
mov
push
pop
insl
adc
mov
hlt
addr16
push
xchg
ret
shl
cmp
shr
xchg
xchg
leave
dec
lcall
sbb
jo
xchg
cmpl
mov
jae
jns
loope
bswap
int
sub
int3
cmp
xor
push
fwait
out
fcmovnbe
enter
mov
out
ret
les
filds
push
and
xchg
into
gs
pop
adc
adc
cmp
in
movsb
loopne
add
pop
cli
arpl
push
push
push
xlat
push
dec
arpl
aam
sub
fwait
ds
or
xor
push
sahf
cmp
push
cltd
inc
inc
and
push
add
adc
mov
int3
mov
jge
xchg
pop
mov
fdivl
pop
test
cmpsb
jmp
xor
inc
add
lock
in
movsl
out
mov
fsubl
mov
mulb
fsts
jecxz
in
out
mov
out
shll
aas
fwait
sbb
mov
stos
out
push
push
je
lahf
lods
fisubs
scas
or
stos
cmpb
jne
fidivrs
jecxz
rorb
stos
mov
add
xor
pop
pop
cmp
ret
mov
bsf
stc
jo
cli
and
test
data16
arpl
lock
mov
sbb
orb
mov
js
bound
xchg
cmpsl
shr
lds
mov
stos
mov
icebp
adc
jns
jne
inc
cmpsb
sahf
or
and
das
arpl
mov
cmp
or
dec
sub
ds
pop
pop
or
negl
stos
dec
pop
fistpll
sar
shrl
aad
jnp
jmp
stos
ret
cwtl
mov
mov
sbb
xor
mov
ret
xchg
cmp
std
movsl
jnp
cwtl
and
std
test
mov
xor
jmp
inc
pop
ds
stc
jo
and
notb
jmp
adc
sbb
and
cltd
addb
shr
or
xchg
push
mov
or
or
nop
pushf
dec
mov
movsb
ss
push
mov
mov
xchg
leave
sub
pop
inc
jns
sub
jns
loope
test
sbbb
andl
adc
js
jg
test
xorb
jecxz
dec
mov
lods
int
sub
push
lcall
shl
mov
stos
in
cmp
dec
cmp
aam
sahf
dec
imul
pop
push
adc
jo
lds
fcmovnbe
test
or
push
inc
lcall
mov
in
subb
push
xchg
pop
jg
sbb
mov
out
push
mov
adc
loop
pop
jmp
scas
outsl
pusha
mov
subb
mov
mov
xchg
aas
mov
mov
lahf
pop
cmp
sar
pop
jecxz
cmp
addr16
push
xchg
mov
xchg
loopne
int
push
in
mov
mov
sub
arpl
pop
push
daa
lret
lret
add
stc
nop
xchg
in
inc
mov
lret
sti
andb
inc
xor
sbb
int
inc
sub
xchg
sbb
outsb
mov
in
test
mov
mov
shlb
xchg
in
idivb
adc
es
les
and
out
pop
lea
fcomp
ficoms
xor
pop
loope
fsubl
jns
xor
jle
mov
cmpsl
in
mov
je
mov
loope
out
jae
cmp
push
sarb
sahf
inc
sti
cmc
int3
jno
into
cld
scas
push
in
pusha
mov
add
repnz
insl
jns
jb
mov
fcmovbe
mov
loopne
inc
popa
pop
retw
mov
mov
fs
add
inc
sub
lcall
mov
nop
outsb
dec
and
test
pop
xchg
mov
and
mov
push
jo
mov
sub
repz
cmpsl
in
rcrb
push
push
sbb
mov
out
fcompl
jp
sub
int
stos
movb
push
sub
mov
mov
mov
xchg
sbb
jnp
sti
ret
sbb
mov
xchg
into
xchg
push
push
loope
out
stos
add
rorl
and
xchg
mov
out
in
mov
js
pop
dec
and
push
lds
pop
fwait
out
mov
xchg
xchg
sub
add
sub
xchg
mov
clc
sbb
leave
jmp
sahf
scas
sub
pop
insl
mov
mov
leave
mov
jns
fildll
sahf
jae
test
jns
cld
fwait
clc
sub
int
insl
sbb
loope
aas
add
sbb
fldcw
bound
xchg
arpl
inc
cmp
loope
mov
sbb
xor
pusha
or
loope
fwait
out
xchg
ja
sbb
jbe
sub
arpl
daa
jnp
push
int3
insl
xor
mov
test
lods
jp
adc
loopne
push
cwtl
lret
aad
shll
xor
stos
adc
pop
sub
adc
cmp
bound
xchg
adc
jle
mov
and
push
pop
pop
lods
sub
mul
dec
xor
jmp
xor
xor
add
ficoml
dec
pop
and
inc
push
pop
hlt
jmp
sbb
sub
mov
test
mov
lea
fisttpl
mov
or
pop
or
cld
and
adc
sbb
cmp
aaa
out
pusha
gs
and
mov
adc
mov
push
cmp
inc
ss
or
jns
js
leave
xchg
inc
mov
sub
sub
pop
or
std
loop
imul
inc
insl
dec
nop
pop
push
cmpsb
push
jns
lods
add
inc
cmp
and
lock
mov
mov
push
cwtl
inc
subl
pop
aad
add
pop
xchg
pop
mov
stc
out
loope
je
sbb
jne
pusha
ret
jae
lahf
or
movb
xchg
rcrb
inc
push
popa
add
jne
filds
cwtl
aaa
imul
ljmp
jno
arpl
nop
iret
loopne
or
adc
ret
inc
lret
jg
push
popa
mov
hlt
icebp
mov
mov
xchg
ja
dec
xchg
mov
jle
xchg
mov
jl
dec
jbe
jns
xchg
ret
jp
out
ljmp
outsb
add
sbb
and
inc
push
idivb
movsl
mov
mov
add
imul
popa
inc
fdiv
fwait
push
subb
mov
enter
jne
loopne
lods
xchg
mov
cs
cmp
push
into
dec
movsb
mov
mov
loope
aad
in
aas
adc
cmp
dec
dec
cmp
les
mov
sbb
jne
rorb
mov
push
std
dec
mov
sbb
data16
add
sahf
or
sbbb
loop
xchg
out
in
xchg
insl
rcll
mov
push
mov
fcmovnu
xchg
dec
cli
mov
ret
out
int
mov
mov
stos
adc
and
or
and
mov
out
inc
push
sub
push
sub
or
adc
stos
pop
popl
enter
shll
mov
pop
pop
mov
test
or
push
ret
lock
jae
jno
test
lods
xchg
push
ja
in
cmp
adc
stos
adc
int
mov
pop
mov
and
push
mov
pop
std
dec
mov
dec
cmpsl
sub
or
mov
pop
sarl
mov
and
jae
iret
repz
int3
cmp
stos
mov
xchg
push
xchg
mov
jbe
cmpl
decl
js
out
mov
mov
jge
cltd
data16
xchg
lock
imul
jp
mov
pop
adc
iret
sbb
dec
jle
push
das
lods
jecxz
add
dec
test
repnz
loop
jnp
ljmp
dec
negb
xchg
mov
inc
je
clc
jne
repnz
xchg
je
movsl
sub
les
and
out
jg
push
cltd
pop
push
push
cmpsl
sbb
push
movsb
jne
push
add
jp
xor
pusha
mov
outsl
jmp
sub
jmp
jne
push
jne
mov
xor
lcall
in
mov
xlat
addr16
mov
mov
fisttps
mov
dec
inc
fnstenv
and
in
pop
hlt
pop
sbb
mov
xchg
cmp
mov
js
clc
add
sahf
popa
dec
mov
out
scas
pop
pop
and
pop
not
dec
fs
pushf
mov
hlt
sub
cmp
jne
pop
dec
mov
inc
lock
mov
cmpsb
cmc
fs
pop
mov
jae
or
into
dec
jae
pop
rcrl
sub
dec
cmp
push
xchg
xor
in
aad
in
mov
popf
lods
mov
ret
lds
mov
popa
enter
inc
repz
ret
les
inc
fcmove
mov
ss
xchg
xchg
mov
ljmp
mov
arpl
pop
fidivrs
xlat
cmp
mov
dec
lock
push
aaa
push
mov
arpl
inc
push
in
int3
adc
es
out
test
lock
xchg
sbb
cmp
cmpsl
into
out
ret
mov
or
sbb
fistpl
jle
cltd
xchg
gs
aaa
jo
popf
mov
mov
mov
mov
push
int
hlt
sbbb
fwait
mov
xor
adc
inc
inc
insl
inc
imul
mov
inc
add
xor
inc
cltd
addr16
fstpl
push
jbe
call
mov
sbb
pusha
movsl
cmp
push
imul
mov
lret
inc
jb
stos
and
out
lock
xor
push
cli
lahf
or
rolb
xchg
aaa
loop
cmp
and
pop
mov
mov
jge
movsl
ret
lahf
add
cmp
clc
inc
scas
push
xchg
or
sub
cli
xor
dec
jo
mov
stos
mov
andl
arpl
stos
ret
push
mov
and
adc
push
scas
lock
into
sub
adc
push
jge
mov
mov
sahf
xlat
pop
inc
mov
aas
pop
pop
vmovapd
in
push
adc
xor
repz
jle
pushf
inc
stos
cltd
or
pop
cmp
sbb
mov
sub
fdivs
xor
or
sub
jmp
cmp
xchg
sbb
or
testl
mov
sbb
fsubr
inc
in
push
movsb
jg
hlt
pop
inc
adc
inc
add
inc
pop
popa
jmp
mov
je
sahf
mov
arpl
es
aaa
neg
mov
jae
jne
dec
mov
imul
inc
adc
push
mov
jbe
mov
aas
pushf
out
mulb
lods
cmp
push
push
cwtl
jns
sub
int3
lahf
push
push
pop
add
mov
test
mov
jae
test
data16
arpl
in
pushf
xchg
lret
in
mov
add
add
xor
bound
inc
pop
cltd
pop
mov
ret
and
dec
das
sub
icebp
sbb
popf
enter
dec
imul
cmc
out
dec
jb
pop
fisubrl
jg
loopne
ja
fcmovnb
sbb
out
jns
mov
cmpl
push
insb
dec
movsl
cmpl
push
pop
or
repnz
xor
adc
dec
dec
sub
sub
mov
cmc
push
std
jle
sub
sahf
out
movsl
jg
xchg
dec
rcrb
or
addr16
mov
push
sti
pop
jne
std
sub
xchg
out
lods
lock
push
fisttpll
and
push
rclb
stos
mov
pop
push
repnz
mov
cwtl
gs
test
push
sbb
hlt
dec
ds
scas
pusha
in
sub
out
insb
pop
xchg
stos
call
jb
push
cbtw
nop
movsb
stos
xchg
stos
and
jge
mov
inc
mov
es
pop
mov
insb
aaa
push
mov
rorb
cmc
inc
pushw
frstor
push
mov
inc
sbb
mov
cmp
mov
ds
jl
das
fdivr
jg
push
jns
fildll
pop
outsb
or
pop
pop
pop
icebp
jb
jmp
loopne
scas
sub
mov
lock
inc
mov
inc
in
movsb
jl
and
adc
adc
sub
adc
fisttpl
sub
or
jno
push
or
push
fldl
push
sub
push
xchg
xchg
out
sbb
pop
ret
pusha
arpl
fists
call
cli
lcall
add
and
mov
mov
pop
cmp
shlb
push
cmp
adc
push
add
test
cltd
decb
shrb
mov
mov
push
lock
sub
jge
mov
mov
lods
lea
ror
cltd
xor
scas
adc
pop
inc
test
adc
lahf
js
clc
pop
negl
js
scas
inc
jno
jns,pn
dec
push
leave
das
fs
xchg
push
add
mov
and
and
xor
mov
les
add
cmp
push
das
in
inc
ret
push
hlt
fwait
ret
cmpsl
in
lcall
or
int
sbb
jmp
neg
mov
inc
sub
aam
imul
mov
sub
lods
in
mov
sbb
mov
fwait
and
sti
mov
push
xor
adc
mov
cs
lret
mov
inc
call
and
add
into
sbb
test
adc
fnstsw
lret
fnop
adc
out
or
orb
xchg
icebp
movl
pop
fimuls
cmc
int
jno
call
subb
jnp
jg
in
dec
js
mov
je
xchg
sub
or
scas
repnz
mov
fstp
lret
or
cmp
xchg
inc
and
movsl
lock
rcl
frstor
gs
push
cmp
mov
push
int
repz
orl
inc
scas
iret
and
adc
dec
sub
arpl
jge
mov
xchg
les
add
pop
lret
mov
pop
dec
adc
rcl
cmp
lods
mov
or
and
nop
pop
sarl
mov
out
sub
push
xlat
fisttps
cli
out
and
add
scas
ss
outsl
cmpsb
daa
and
and
in
mov
jb
cmp
xchg
out
push
shlb
mov
outsb
xchg
mov
enter
mov
sub
jle
mov
adc
out
cmpsb
mov
adcl
pushf
ret
sub
mov
sbb
sub
test
stos
push
xchg
out
jmp
jl
cmp
jo
and
pop
es
or
shll
popf
mov
imul
and
das
fwait
jecxz
addl
movsl
mov
add
ftst
jne
subl
lret
arpl
into
mov
insl
jb
sbb
add
inc
pop
test
outsb
daa
mov
jmp
lock
pop
lods
mov
jle
jg
jl
movsb
xchg
icebp
iret
sahf
xor
pop
je
xor
lock
in
insl
add
mov
xchg
lcall
xor
ljmp
out
test
xchg
mov
pop
test
mov
jne
xlat
outsb
sahf
aam
jmp
adc
mov
imulb
fstps
idivl
pop
or
cmpsb
mov
ss
jae
pop
enter
push
push
push
hlt
xor
sbb
cmpsb
or
dec
notl
push
pop
mov
or
push
enter
xorb
in
jb
dec
cmp
or
sbb
out
mov
outsb
repnz
adc
lret
push
sub
push
xchg
clc
lds
inc
pop
lahf
out
mov
push
dec
dec
pusha
cmp
fs
pop
jmp
cmc
or
xor
shll
in
xor
jmp
ret
pop
xchg
loope
mov
loope
or
cmp
or
ljmp
lcall
mov
ss
test
mov
sub
fs
pop
lods
movsl
repz
jns
mov
xor
stos
xor
cmc
cmpsl
lcall
mov
aas
pop
rcll
aas
pop
jl
xchg
pop
sub
in
and
mov
fistps
lahf
jl
mov
dec
xlat
sub
insl
idivl
shlb
int3
dec
in
ljmp
out
lahf
fmuls
andb
add
jp
lock
in
in
mov
adc
stc
push
js
ds
loope
sbb
lock
sbb
mov
mov
ljmp
inc
mov
sbb
jl
aad
add
push
fdivrp
add
bound
xchg
push
aaa
xor
sub
nop
jp
fimuls
cmp
mov
pop
xchg
stc
jae
push
ljmp
lods
movsb
test
mov
jns
cmp
jl
push
loop
out
mov
insb
sbb
leave
xchg
xchg
and
lock
out
and
pop
daa
cwtl
clc
stos
xchg
xchg
push
repz
stc
and
cld
cmpl
pushf
ret
push
arpl
movsl
mov
je
js
enter
je
icebp
lret
test
in
dec
pop
addr16
outsb
sub
xchg
test
xor
aaa
out
jmp
sub
into
andl
andl
mov
add
pop
add
xor
pop
nop
popf
add
aaa
aad
sub
gs
mov
sub
pop
ljmp
sub
outsl
mov
dec
push
adc
cmp
or
test
mov
push
mov
mov
movsb
out
cltd
addr16
cld
mov
out
push
jno
jns
xor
popf
test
mov
leave
inc
cmp
push
lea
addr16
loope
icebp
mov
lea
jnp
mov
pop
sbbl
inc
cld
sbb
imul
mov
adc
push
push
sub
jb
pop
aad
xor
sub
rclb
imul
push
test
fstpt
xchg
nop
jge
addr16
imul
imul
dec
or
daa
xor
insb
ret
mov
jns
or
mov
xor
mov
out
movsl
subb
or
inc
lcall
cwtl
sub
mov
aad
aad
enter
shrl
xchg
vfmsubaddps
dec
mov
mov
cltd
sub
popa
xlat
push
insl
int
icebp
cmp
test
sub
aaa
dec
call
sub
jnp
push
mov
mov
dec
mov
inc
jecxz
inc
mov
lret
inc
dec
mov
inc
and
hlt
mov
bound
mov
sbb
mov
mov
bound
push
call
sbb
push
sahf
sub
or
jns
mov
shlb
loope
shl
scas
outsl
in
xor
mov
jnp
add
mov
cmpsb
or
aam
push
scas
add
mov
push
ds
and
inc
cmove
mov
fcoms
loop
push
mov
cmp
pop
mov
xor
adc
imul
mov
ljmp
cltd
inc
sub
mov
mov
gs
cltd
sar
fsubl
inc
adc
push
shll
stc
je
or
xor
sarl
movsbl
sub
mov
mov
jbe
xor
dec
xchg
inc
xor
push
int
call
mov
pop
mov
es
out
lret
call
xlat
pop
cmpsb
mov
mov
and
clc
repnz
mov
mov
add
sbb
mov
fs
incl
xchg
dec
xor
inc
add
xor
or
rolb
jns
test
shrl
jo
popa
fidivrs
or
cmpsb
stc
dec
sti
lock
adc
cmp
and
mov
iret
mov
xor
nop
jno
into
out
xor
repz
or
shlb
popf
div
dec
sbb
mov
paddq
aam
cwtl
xchg
js
icebp
ds
jb
repnz
clc
je
add
pop
lea
xlat
fidivs
fisttpl
call
cmpb
push
mov
and
and
arpl
cmp
mov
dec
inc
dec
push
adcb
xchg
popa
repz
jg
push
xchg
loop
dec
lret
adc
jnp
xchg
out
ret
repnz
mov
push
push
xchg
mov
inc
xor
addb
dec
aam
call
les
es
enter
fsub
push
xor
js
imul
jp
in
lret
push
jno
sub
movsl
cmc
sub
xor
mov
lcall
mov
pop
fs
add
loop
dec
xchg
decb
pop
cmc
psubb
and
and
fnsave
jp
std
out
mov
cwtl
sub
in
jns
dec
xchg
push
fisubrl
lret
pop
push
sub
dec
js
imul
push
xor
jecxz
pop
imul
xor
mov
add
pop
fstl
mov
int
out
subb
mov
in
data16
sahf
pop
negb
mov
cmp
cs
leave
mov
pop
aam
xchg
movsl
sub
movsb
jge
jno
out
pop
mov
mov
fsubrl
cmp
aaa
push
pop
jecxz
and
lock
outsl
in
add
jecxz
xorb
dec
gs
cltd
shlb
dec
fadds
or
jb
data16
fs
stos
das
loopne
notb
insl
stc
or
imul
es
lds
cwtl
inc
push
fadds
sub
xchg
jl
inc
cmp
inc
cltd
shrb
xor
repz
fists
adc
xchg
jno
dec
shlb
imul
bound
iret
rcl
xchg
jecxz
and
rcr
gs
pop
je
adc
add
add
add
mov
sahf
push
test
lcall
arpl
mov
or
test
ror
out
pop
and
cmp
ret
cmpsb
sub
cmpsb
cmp
aam
sti
mov
fstpl
sbb
fsub
pushf
test
push
sub
cmp
jp
inc
xchg
xor
pop
out
push
pop
dec
cmp
push
sahf
jl
decl
dec
sbb
xchg
enter
mov
fimull
mov
stos
mov
add
movsl
or
pusha
pop
call
mov
mov
mov
or
mov
or
sbb
pop
sarb
push
sbb
and
mov
int3
call
jb
sub
fimull
inc
or
popa
fistpl
lods
in
lods
sub
push
adc
fs
cmpsb
arpl
mov
arpl
mov
cmp
std
xor
cmp
fmuls
dec
lods
xchg
dec
mov
jp
add
pop
insb
insb
rorb
lds
mov
adc
push
nop
popa
cmc
iret
xlat
pop
ljmp
mov
adc
add
jno
lock
pop
sbb
enter
sbb
mov
push
or
push
push
cltd
add
lret
jmp
daa
or
sbb
addr16
or
ljmp
scas
je
test
jb
popa
lds
push
inc
inc
sbb
ds
in
loope
cmp
ret
cwtl
mov
cmp
into
cmp
loopne
xlat
xchg
jne
insl
mov
addb
test
inc
ljmp
sbb
cmp
jle
add
in
lahf
insl
inc
inc
jle
cmp
stos
mov
sbb
and
inc
adc
sub
mov
fldenv
addr16
daa
or
jb
adc
mov
pop
rorb
mov
divl
jg
mov
cmp
lods
shlb
mov
xor
test
stos
lea
leave
add
pop
sub
arpl
push
out
xor
or
adc
outsl
dec
lret
sbb
daa
test
inc
xor
lcall
inc
or
dec
popa
push
jne
mov
mov
rorb
fstpt
mul
jne
fistpll
adc
test
test
fcmovne
and
cld
aas
and
test
sahf
cld
mov
cwtl
aas
push
dec
aad
push
push
jge
call
int
popa
sub
dec
ljmp
test
ljmp
push
int
leave
jmp
xor
cltd
lods
fdivl
cmp
push
cwtl
mov
sub
jnp
sarb
sub
and
sbbl
and
xor
jmp
out
addl
int3
mov
add
aad
jbe
and
subl
lods
es
jbe
cmp
mov
rorb
iret
xor
xor
mov
popf
inc
mov
rorb
or
and
mov
sbb
imul
addr16
pop
lret
push
roll
movsl
arpl
inc
fimull
imul
out
xor
xor
subb
addb
shl
hlt
cmp
cmpsl
lods
daa
cli
pushl
mov
xchg
lods
decl
clc
jnp
aad
into
sbb
inc
enter
dec
sub
pusha
bound
clc
imul
dec
test
std
ror
fld1
pushf
out
add
in
lret
pusha
cmp
insl
xchg
fcoms
jae
fidivl
xchg
sti
cmpsl
or
adc
out
sbb
out
dec
je
add
popf
inc
test
sbb
dec
lret
outsb
testl
into
rolb
popf
add
dec
aam
divb
inc
mov
mov
pop
cli
push
sub
adc
or
outsl
push
pop
inc
or
dec
aas
xchg
xchg
call
mov
push
and
pop
mov
pop
add
mov
pusha
xorb
mov
call
mov
inc
stos
pop
cmp
inc
rolb
jle
test
frstor
mov
leave
pop
mov
inc
jle
or
adc
xchg
cmp
repz
add
imul
loope
pop
ret
in
cmpsb
popa
fdivrp
mov
mov
ret
jge
cltd
ja
adcb
leave
adc
test
stos
stc
idivb
cs
jge
aam
pop
jmp
mov
pusha
out
mov
or
lret
adc
mov
repnz
data16
in
adc
fdivrl
inc
mov
insl
fiadds
movsb
call
test
movsb
scas
movsb
inc
lock
xchg
int
xorl
mov
push
fsubp
cmp
js
sbb
xor
sti
add
lock
dec
ja
cmpsb
fsub
fwait
enter
jg
test
pusha
pushf
mov
jno
pop
sub
adc
mov
pslld
dec
andl
sbb
mov
jmp
je
mov
sbb
cmp
rcrb
add
sub
test
scas
mov
ss
js
add
xchg
dec
pop
push
lock
xchg
pop
dec
sub
je
or
add
dec
xchg
mov
lods
pop
sub
sarb
int3
enter
pop
mov
pop
pop
dec
outsb
nop
xor
pop
fiadds
outsb
sub
cmp
push
addl
xchg
sbb
sub
sub
mov
sbb
inc
jle
xor
test
iret
dec
mov
mov
pop
push
adc
into
out
inc
pop
push
lahf
inc
push
subb
cs
xchg
pcmpeqw
xor
clc
push
push
or
cmovbe
call
sbbl
dec
andl
iret
rcr
jns
arpl
ret
into
daa
dec
call
inc
pushf
nop
mov
ss
jle
add
jno
aaa
hlt
xchg
add
out
cli
rcll
mov
js
movsb
add
xor
push
mov
cmp
bound
push
in
aas
fwait
scas
in
daa
in
jg
and
inc
outsb
out
sbb
xchg
dec
jecxz
pushf
in
xchg
or
out
repnz
mov
cmp
jbe
arpl
jle
je
cltd
sbb
stc
rorb
add
leave
daa
jmp
add
popf
shl
cltd
je
or
es
stos
loope
mov
sqrtps
ret
push
sub
sub
mov
daa
ljmp
jecxz
repz
mov
push
jge
inc
dec
div
add
into
rorb
pop
add
adc
cmp
inc
aam
jmp
in
jge
clc
popl
cmp
pop
pop
cwtl
push
dec
fldt
add
test
nop
jnp
lea
fcomi
in
insl
outsb
mov
and
js
mov
sub
mov
repz
jne
sbb
aam
js
flds
mov
cli
loope
inc
leave
in
sbbl
inc
jp
xchg
clc
and
loop
dec
mov
cmp
andb
cli
pop
mov
pop
push
cli
cmp
cmp
jg
push
lret
cmc
fsubs
sti
rolb
repz
lahf
sub
mov
lea
mov
pop
jge
xchg
and
pop
lock
push
inc
push
adc
mov
mov
into
in
ss
inc
repnz
repnz
enter
xchg
or
xor
sbb
mov
dec
or
fimull
fnsave
pushf
xchg
fwait
sti
mov
cmpsl
jp
lahf
and
fadd
jbe
aad
out
mov
jbe
jnp
call
mov
out
mov
mov
addr16
es
cmp
pusha
fwait
stc
rcr
sti
outsl
inc
fisubrs
lods
or
and
dec
stc
lock
jg
xor
bound
nop
inc
sub
imul
fcompl
ja
leave
dec
fnsave
les
cltd
popa
pop
imul
mov
push
jno
cli
sbb
aaa
dec
pop
test
add
enter
cltd
mov
andb
test
sbb
nop
mov
daa
enter
add
jo
arpl
jg
andb
cmpb
adc
sbb
lret
inc
push
pop
adc
movsl
loopne
rorl
in
sahf
sbb
pop
subb
mov
cld
xchg
mov
push
and
lock
je
dec
test
jg
cmp
mov
lods
sahf
sub
push
push
cmp
sbb
push
lret
js
add
ret
sub
or
std
ss
push
not
pop
pop
pusha
or
flds
jno
clc
call
adc
fimull
icebp
subl
test
leave
or
in
rcr
rol
pop
mov
cltd
xchg
in
push
cld
mov
inc
icebp
cmp
mov
scas
pop
mov
jnp
out
add
adc
orb
sbb
inc
sub
in
pop
cmp
and
pushf
outsl
testb
mov
cli
mov
jo
test
test
cltd
fsts
psubd
mov
imul
xchg
sbb
idivl
dec
ja
or
push
js
and
aas
and
out
and
fldt
xchg
push
movsb
mov
xchg
insl
in
xchg
mov
movsl
arpl
aad
dec
dec
mov
jecxz
test
sbb
and
enter
loope
ret
fbstp
push
das
cmpsb
or
lods
pop
test
cmpsb
xchg
cs
out
sbb
ss
adc
sbb
in
fsubp
xchg
sbb
cmp
rorl
or
cs
mov
insl
jae
dec
mov
dec
add
out
mov
add
into
and
insb
add
mov
jge,pt
push
xor
lret
push
sbb
stos
dec
ret
mov
mov
pop
movsl
mov
pop
popa
repnz
inc
mov
pop
and
icebp
push
cs
mov
jmp
lods
insl
cld
rclb
sub
push
fst
mov
loopne
cmp
mov
js
fildll
out
adc
mov
cmp
aam
pop
daa
das
in
cmc
mov
pop
sub
pop
fstpl
es
nop
clc
add
adc
out
xor
addl
frstor
add
add
mov
mov
mul
or
into
fs
dec
loopne
lret
std
ret
clc
adc
aam
mov
mov
and
cmp
sbb
mov
jge
imul
add
jne
cs
sub
cmpb
mov
mov
xchg
mov
xor
int
mov
in
mov
jmp
push
mov
mov
push
push
in
rclb
pushf
mov
xchg
jbe
cltd
mov
cs
dec
sarl
ss
les
ds
sub
call
rcl
cwtl
or
push
mov
sbb
mov
fs
icebp
pop
dec
enter
xor
cmc
dec
int3
outsl
insb
imul
inc
std
lret
jp
lret
add
lock
sbb
xchg
nop
add
inc
popf
push
ret
shlb
ficoml
push
adc
aas
xlat
sbb
dec
movsl
cld
xor
mov
sbb
sbb
fbld
cld
subl
xchg
push
insb
scas
xor
scas
pop
adc
pop
dec
pop
loope
mov
movsb
cmc
xor
gs
sbb
cs
cs
imul
stc
imul
dec
fwait
aaa
mov
pop
mov
sbb
shlb
dec
push
pop
insb
jno
and
push
pop
push
xor
je
or
xchg
push
dec
mov
sbb
orl
adc
bound
out
rcrb
imul
inc
repnz
push
stc
rol
pop
addb
shr
jmp
std
pushf
push
repnz
fnstsw
dec
repnz
imul
push
adc
jb
repz
lret
push
cltd
cwtl
scas
test
daa
in
xor
bnd
aam
dec
mov
dec
popf
arpl
jo
js
inc
or
shlb
mov
mov
cmp
sub
loope
dec
xchg
sub
icebp
mov
sbbb
jp
jno
int3
stc
imul
out
sbb
dec
xchg
cmpsb
pushf
xor
enter
add
ret
mov
cmpl
mov
cs
in
imul
mov
idivl
sbb
mov
in
xor
add
jbe
sub
cs
cmp
cltd
inc
leave
pop
je
cmpsl
xchg
or
test
pop
xchg
cld
imul
fidivl
xor
sbb
in
test
repnz
insb
cli
mov
popa
pushl
stc
movb
cmp
sbb
jg
lcall
mov
adc
inc
in
mov
mov
cmp
subl
add
filds
pop
popf
les
pop
or
mov
add
enter
loopne
xor
xlat
je
jbe
lds
pusha
adc
push
jle
xor
sbb
out
jb
cmpsb
add
mov
pop
sub
cmpsl
jg
loop
cmp
xor
inc
mov
xchg
shrb
hlt
jmp
dec
test
ss
ds
adc
adc
enter
dec
adc
push
inc
xchg
lods
orb
in
cmpsb
cmc
loope
insb
cli
pop
daa
pop
xchg
and
cmp
dec
cmc
daa
stos
fcomps
cli
enter
mov
adc
inc
jnp
imulb
pop
mov
xchg
mov
js
mov
outsb
jnp
mov
sbb
aaa
adc
shll
pop
int
xor
movsb
ficoms
push
js
ljmp
ljmp
mov
ret
aam
inc
sti
mov
pop
inc
push
lahf
xchg
pop
xchg
adc
ret
adc
dec
movsl
popf
xor
cmpsl
shll
lods
and
pop
inc
ljmp
pushl
mov
mov
rorl
lret
lods
inc
inc
in
lds
inc
fs
imul
pop
pusha
hlt
push
cld
add
out
scas
mov
ret
adc
lds
aad
pop
push
clc
popa
pop
mov
adc
int
mov
in
and
and
out
dec
adc
jns
not
mov
sbb
jl
stos
add
ss
adc
add
push
or
scas
je
jnp
lcall
das
pop
sarb
rolb
mov
xchg
jp
jnp
cltd
sbb
popf
das
enter
je
shlb
mov
loope
xchg
xor
outsl
pop
adc
dec
sub
loope
pop
addl
jge
repz
scas
out
adc
rcl
sbb
loop
inc
mov
leave
mov
add
jp
jae
fyl2x
lcall
and
out
outsb
mov
lock
sbb
mov
addr16
fsubl
mov
xchg
or
je
add
stc
scas
push
clc
ret
hlt
mov
add
test
cmp
hlt
shl
and
mov
mov
pop
jp
fcmovnb
in
ljmp
mov
cli
loop
push
test
mov
dec
pop
mov
sbb
add
adc
or
add
pop
loop
push
rcl
jno
or
ss
loope
sub
sahf
pop
jbe
rcl
sbb
and
xor
flds
or
dec
aaa
xor
mov
and
test
aas
push
mov
bound
loopne
lret
aaa
movsb
pop
movsl
aad
cwtl
ret
or
cmp
mov
cmove
cmpsb
jmp
cmpsb
in
lea
cmp
stos
mov
arpl
cmp
lds
add
and
cmpsl
inc
das
jg
xor
or
sub
jg
movsb
icebp
jnp
xchg
lds
pop
sub
ret
in
cmp
xchg
ljmp
insl
insl
rclb
fmuls
mov
sbb
jl
aad
pop
mov
push
in
sub
cmpsb
mov
outsl
dec
cld
ror
cmp
std
push
div
aas
or
xchg
sub
aaa
dec
leave
addl
mov
cmp
sbb
jg
jbe
dec
add
or
dec
pop
enter
dec
testl
jo
sub
mov
pop
cmp
in
and
loop
dec
sti
sub
insl
or
jne
adc
mov
add
or
mov
stos
in
fnstcw
nop
mov
dec
dec
push
add
imul
and
in
ret
adc
in
fwait
loop
xchg
shrb
mov
aaa
push
xor
xchg
xor
jne
dec
pop
mov
xchg
jae
shrb
pop
mov
sub
mov
cmpsb
and
sbb
pop
imul
inc
sbb
ss
dec
fs
scas
push
lea
push
cmp
sbb
in
jo
inc
or
aam
and
mov
or
pop
iret
push
bound
test
adc
xchg
mov
push
or
repnz
jecxz
iret
nop
add
cmp
jp
jb
lea
and
stc
out
cmp
mov
imul
fdivl
pusha
in
dec
out
xchg
add
sub
cmp
movsb
pop
data16
cmp
mov
inc
mov
xorl
inc
xchg
xchg
imul
rorl
lret
cld
sub
inc
and
pop
mov
fdiv
repz
add
xlat
and
or
pop
repnz
js
inc
xchg
movl
adcl
cmp
add
inc
push
mov
loope
dec
mov
jae
sbb
xchg
enter
mov
pop
repnz
sbb
adc
pushl
stc
and
ss
in
and
popa
sbb
add
insl
and
add
dec
mov
xchg
push
mov
stc
or
add
les
scas
leave
push
mov
in
cmc
adcl
sub
inc
xchg
cmp
push
mov
push
mov
xchg
int
mov
jecxz
rcr
adc
mov
or
in
xor
outsl
fldl
inc
imul
adc
sbb
ret
in
arpl
push
js
lret
mov
loope
jns
inc
add
inc
bound
or
mov
inc
pop
in
pop
cmp
pop
fdivrl
add
loope
adc
enter
mov
mov
jge
mov
xor
pop
sbb
ljmp
pop
jmp
cltd
add
cmp
in
rcll
sub
mov
xchg
in
or
icebp
loop
addb
outsl
je
push
clc
repnz
test
or
jmp
test
ljmp
test
stc
cli
jecxz
lods
inc
stc
out
mov
insl
test
out
gs
pop
or
jns
jg
xor
je
jo
arpl
or
ffreep
mov
cld
jg
jno
les
add
pop
xchg
cmp
lret
fyl2x
cld
add
test
mov
std
push
xchg
test
or
sbb
mov
aam
mov
pushl
xor
cmp
mov
fisttps
test
xchg
js
push
jo
test
jmp
rorl
pop
pop
pop
ja
inc
add
adc
imul
lods
cld
adc
sahf
das
mov
jl
test
scas
ds
lret
mov
xchg
or
dec
in
jnp
mov
mov
into
pop
push
sahf
ljmp
push
nop
dec
cmc
pop
xchg
and
cmp
pop
sbb
imul
scas
adc
sbbl
jp
jns
adc
jno
cmc
iret
push
std
fsubrp
fdivrl
test
jmp
xor
dec
sub
stos
orl
movsl
cmc
push
sbb
xorb
push
popa
pop
inc
dec
les
lods
test
and
fwait
int
loopne
call
int
push
ret
pushf
outsl
clc
icebp
mov
nop
mov
cmc
or
adc
arpl
dec
pushl
mov
mov
adc
and
cltd
push
test
xchg
mov
insl
lret
mov
adc
sbb
push
pop
push
sub
add
add
dec
in
out
leave
inc
ja
push
mov
call
cs
test
and
jp
mov
mov
sbb
neg
pop
sub
outsb
loop
and
add
inc
lds
push
test
gs
xchg
jp
lods
fcoml
cmp
inc
scas
cmpsb
dec
sub
in
cld
int3
lods
inc
lea
sub
or
add
jns
mov
mov
cmp
adc
mov
inc
aas
pop
iret
cmp
push
jbe
jl
xchg
mov
mov
lock
addl
lcall
mov
int
loope
lods
pop
cmpsl
xor
faddp
lods
push
scas
mov
cmc
ret
dec
imul
fst
aaa
mov
jb
pop
dec
sbb
push
jb
aad
sbb
mov
xchg
scas
xchg
and
sub
dec
test
cmpsb
push
sbb
adc
push
mov
rorl
loopne
roll
mov
jbe
lahf
mov
scas
xor
push
inc
cmpb
andl
scas
push
ljmp
adc
mov
les
out
lods
neg
and
sbb
mov
jmp
sbb
repnz
and
lock
shll
pop
add
cwtl
jb
out
inc
insb
sbb
dec
call
mov
push
push
xor
inc
leave
fstps
add
cmp
jge
std
dec
mov
mov
sbb
dec
jnp
adc
popf
js
loopne
xor
add
push
adc
add
sahf
je
sbb
pop
mov
cmp
ret
cmp
repz
ss
gs
sti
aas
aam
fs
add
pusha
pop
std
fcoms
sbbb
lret
cmc
stos
pop
test
test
ljmp
lret
test
lret
sub
xchg
jl
fists
int3
mov
imul
out
lahf
fwait
ljmp
aaa
outsb
sbb
and
jb
mov
pop
add
rol
ret
push
push
daa
fsubrp
jmp
xor
lcall
leave
mov
pop
cmpb
mov
cwtl
pop
xor
and
and
cmp
testl
aad
add
sbb
dec
clc
pop
idivl
sub
dec
jg
lods
arpl
sbb
mov
jae
cmp
cmc
and
and
push
inc
out
mov
gs
jle
sbb
addl
sub
xor
xchg
xchg
pop
fstl
adc
mov
xchg
std
xchg
mov
aam
adc
idivb
mov
test
and
inc
dec
jo
test
inc
adc
sub
mov
loope
out
test
fidivrl
stc
mov
and
jge
cmpsl
mov
in
hlt
jns
lds
push
xor
nop
cwtl
add
dec
js
fisubs
scas
and
test
xlat
and
inc
mov
mov
push
and
enter
scas
fstp
jecxz
adc
movb
arpl
inc
add
mov
movsb
call
sbb
jo
and
lock
nop
sbb
cmp
aaa
adc
cmp
bound
shll
sub
je
in
xchg
lahf
jno
imul
push
lahf
cmp
rcrl
jmp
add
or
ror
repz
repz
lods
repnz
mov
inc
lahf
jle
stc
fmul
mov
ret
mov
jge
xor
or
test
xchg
shrl
xchg
sbb
lret
cwtl
adc
lret
push
jae
movsb
imul
ficompl
inc
test
and
js
rorl
jno
icebp
test
push
insl
or
jne
mov
flds
mov
add
ss
xor
iret
popa
jo,pt
pop
adc
add
ja
dec
xchg
lods
repz
or
test
fsubs
jo
int3
push
into
imul
xor
push
jle
adc
jo
push
push
mov
and
xchg
push
jo
mov
and
sbb
cmp
ds
cs
fcoms
std
js
adc
fdivp
pop
or
jl
pop
insb
jne
dec
data16
xchg
pop
outsb
xlat
inc
xorb
lock
inc
fsubrl
outsb
and
loop
push
out
mov
mov
aad
xchg
mov
adc
jle
jns
adc
popa
cmp
and
inc
lfs
sub
push
mov
js
mov
jl
pop
out
xor
push
imul
mov
jle
inc
aad
filds
sub
adc
out
pop
mov
dec
inc
int3
loop
mov
mov
inc
cmp
mov
addr16
fistps
es
loope
mov
xchg
sar
pop
adc
xlat
cmp
push
addr16
lods
xchg
enter
fst
lret
fwait
or
xor
repnz
mov
mov
arpl
push
push
ret
mov
ja
sbb
mov
mov
jbe
xorl
in
pushf
mov
cmpsl
push
jae
mov
xchg
xchg
mov
repz
and
js
mov
adc
int3
mov
call
and
sbbl
icebp
inc
add
in
leave
mov
dec
into
and
popa
mov
adc
ret
mov
lock
pop
imul
lds
sub
shlb
cld
jbe
cwtl
pop
movsl
pusha
data16
gs
dec
je
mov
js
aam
fidivrs
xchg
insl
mov
dec
or
in
mov
orl
xor
iret
ds
fcompl
fcmovnu
ss
sbb
and
orb
mov
xchg
dec
sub
adc
add
movsb
ss
lods
ljmp
gs
scas
shl
mov
cmpsl
cmpsb
sahf
testl
add
jne
pushf
inc
mov
mov
bound
frstor
cld
mov
sub
xchg
push
jae
lcall
mov
ret
xchg
int3
push
add
sarl
out
sbb
lea
fwait
ret
or
outsl
dec
jno
das
push
inc
insl
imul
mov
shlb
imul
js
das
inc
jle
fnstenv
fcoml
sbb
cmp
pop
or
push
pop
cmp
adc
arpl
clc
add
fnstenv
mov
cmp
mov
mov
jge
sub
push
adc
mov
pusha
xor
ret
inc
adc
xchg
stc
cmp
xchg
mov
lock
xor
arpl
aas
repnz
pop
xorb
ret
dec
jmp
notl
in
scas
rorl
push
pop
iret
or
pusha
scas
in
mov
out
test
and
and
or
cld
out
mov
pop
cmp
insl
sub
call
fisubrl
pop
add
out
add
lds
jne
mov
rorb
loopne
xchg
mov
jae
push
mov
xchg
adc
mov
jp
test
mov
xchg
mov
xor
mov
push
and
xchg
push
in
xor
sbb
sub
dec
mov
push
mov
nop
sbb
das
and
mov
jecxz
aam
xchg
push
add
push
or
inc
shr
mov
or
pop
in
rcr
mov
int
imul
xor
xlat
and
xchg
push
mov
scas
add
inc
xlat
lock
cmp
insb
mov
decl
push
or
sub
inc
add
pop
push
cltd
push
inc
pop
cmp
cmp
insl
push
lcall
rorb
cmp
popa
jl
cmc
mov
dec
pop
or
sub
mov
mov
lods
std
sub
dec
mov
mov
pop
cmp
out
cld
sub
je
push
test
je
not
sub
sub
icebp
pop
cli
push
dec
nop
ljmp
push
in
sahf
mov
ret
add
mov
push
clc
faddl
add
bound
dec
add
and
dec
daa
mov
xor
cmpsb
inc
mov
xor
out
cmp
aas
fldz
gs
std
gs
jmp
rcll
repnz
lahf
or
xor
mov
add
jge
sbb
ficoml
push
arpl
add
mov
cli
fsubs
in
cmc
pop
test
icebp
imul
inc
leave
push
andl
cli
dec
ljmp
or
fucomp
fsubrs
cmp
xor
cmc
fsts
push
enter
mov
popa
inc
arpl
aas
dec
dec
cmp
mov
push
je
jo
mov
fwait
add
mov
lods
jnp
out
movsb
or
jno
out
xchg
scas
xchg
jmp
nop
xor
cs
loope
inc
inc
cmp
test
call
push
mov
or
adc
mov
mov
sbb
xor
sahf
mov
cs
adc
push
popa
xor
ds
fisubs
adcl
xchg
jns
pop
cmpsl
mov
add
mov
lret
jg
and
roll
jne
xchg
hlt
mov
in
jmp
getsec
xchg
cs
mov
sub
fadd
mov
xchg
sub
ret
xchg
cmp
ret
sub
mov
ljmp
lahf
test
mov
stos
fistpl
fbld
inc
pop
fistpll
std
cltd
inc
js
cld
dec
sbb
add
and
adcb
adcb
cmp
mov
sti
lods
and
cld
gs
es
and
dec
test
pop
add
mov
das
sbbb
xchg
sbb
adcl
sbb
lret
pop
stc
xchg
mov
push
icebp
dec
inc
dec
repnz
pushw
cmc
inc
fiaddl
in
mov
add
jg
pusha
push
lret
das
jmp
imul
mov
dec
push
fstps
mov
imul
in
mov
inc
sbb
sbb
xchg
fsubrl
lods
testb
push
adc
push
mov
xchg
lods
and
call
mov
mov
sbbb
xchg
push
cld
in
cmp
push
adcl
and
add
mov
lods
mov
jno
xlat
int3
loopne
stc
sub
pop
ret
xor
lods
fstpt
xor
scas
shl
adc
ss
add
popa
adc
pop
aad
dec
in
sbb
enter
lret
add
cmc
cmp
movsb
mull
nop
jno
cmp
jb
stos
les
pop
imul
dec
shrb
adc
xchg
mov
mov
push
cmp
mov
test
js
call
daa
je
rol
aam
cmp
es
call
pop
in
arpl
xchg
fidivrs
mov
cmp
loopne
fisubl
or
dec
mov
jb
inc
leave
or
dec
std
clc
mov
sub
scas
mov
adc
adc
jmp
pop
cs
jp
adc
push
aaa
fidivrs
sbb
jns
fsubrp
ljmp
xor
sbb
and
xchg
mov
test
gs
loope
rclb
sub
inc
iret
cmp
sbb
sub
stos
or
das
mov
cmp
mov
cmp
inc
cmp
add
push
xor
fisttpll
or
sarb
mov
mov
bound
and
ss
loop
or
sarl
or
xchg
mov
test
insl
jo
adc
jle
fsubrl
lods
aas
fidivrs
mov
xchg
or
pop
sbb
inc
add
add
xor
test
xchg
test
push
loope
bound
pop
add
fs
pop
pop
jle
fs
hlt
sahf
inc
pop
mov
push
ss
pop
add
xchg
call
jmp
loope
and
and
xlat
mov
out
ja
shl
ss
add
fdivrl
shlb
addb
jno
ror
inc
leave
pushf
or
jns
push
cmp
mov
dec
push
repnz
jmp
into
xchg
push
xchg
mov
jns
sbb
test
add
mov
sbb
sbb
sarl
hlt
insb
jl
pop
add
jb
adcb
daa
mov
or
inc
inc
add
jl
fists
scas
sub
fwait
outsb
in
pusha
sbb
into
mov
pop
movsl
das
sti
adc
jge
xchg
gs
test
sti
mov
lahf
out
imul
lcall
ja
mov
arpl
sarb
cmpsb
mov
pop
out
dec
aas
test
mov
jb
xchg
adc
fwait
jno
cltd
pop
pop
out
lret
les
jne
insb
enter
pop
enter
jne
adc
inc
and
cmp
in
cmp
std
jg
adc
mov
enter
xchg
xor
push
and
dec
pop
cwtl
lahf
fsubrs
in
lods
jmp
nop
pop
jnp
xchg
addr16
sub
pop
dec
sbb
mov
push
fs
aam
loop
pop
xor
and
mov
and
scas
jmp
call
and
iret
fwait
clc
jae
out
fdivs
push
pop
gs
and
leave
and
jecxz
mov
push
les
mov
sub
fs
mov
cltd
icebp
out
loop
add
lcall
mov
out
mov
mov
push
cli
mov
mov
enter
mov
inc
xchg
das
pusha
add
int
mov
mov
jno
movsl
nop
cmp
cs
cmp
out
mov
stos
jns
out
push
jae
push
mov
sbb
test
and
xor
mov
dec
stos
mov
add
scas
mov
mov
and
shrb
jo
ret
or
aad
out
stos
xor
cmp
mov
inc
cwtl
loopne
push
jl
lahf
fsubl
fildl
xchg
lret
imul
loope
pop
xor
xor
dec
pop
or
js
sbb
jns
push
push
mov
ja
test
or
test
push
jnp
xchg
inc
jmp
nop
xlat
xlat
aas
ja
cmp
shlb
cmp
dec
test
xchg
push
ja
pop
out
stos
addr16
sbb
das
pusha
fildll
jle
mov
imul
sbb
xchg
jno
imul
and
arpl
icebp
aaa
fwait
dec
leave
add
jnp
push
xchg
xchg
inc
inc
mov
sub
jle
sahf
pop
stc
and
daa
fidivrl
and
hlt
addl
lock
cmpl
dec
dec
mov
mov
mov
mov
daa
push
push
pushf
pop
or
mov
lods
out
jl
sub
jae
inc
dec
sub
jmp
mov
sub
or
dec
mov
loope
sub
int
or
or
sbb
nop
pop
pop
xchg
sub
test
test
xchg
out
call
adc
pop
mov
pop
pusha
and
shll
xchg
xchg
loop
and
fisttps
jl
or
out
push
inc
lea
in
in
push
test
aaa
popa
repnz
pop
inc
or
mov
les
add
inc
push
shll
sub
test
pop
fisubl
lret
in
cmpsl
mov
inc
push
les
loop
and
xchg
into
mov
out
imul
jnp
xchg
mov
test
push
cmp
aaa
dec
das
test
mov
in
mov
and
insl
fistpl
xorl
shlb
in
cmp
aaa
dec
decb
add
or
or
lcall
addb
push
mov
ret
mov
popf
mov
lock
jbe
repz
test
xorl
inc
jle
mov
mov
mov
in
mov
je
popa
and
cmp
mov
push
xchg
sbb
fisttpll
cmpb
daa
insl
loop
fadds
rol
ljmp
fildl
cmp
jnp
loop
cld
push
adcl
xchg
repnz
push
das
popa
cmp
mov
cmc
adc
jbe
testb
je
ds
js
or
or
jne
imul
jno
icebp
mov
fists
xor
loope
int
and
outsl
fisubl
xchg
dec
mov
mov
ret
cwtl
in
jbe
cmp
jp
inc
xor
adc
imul
or
lret
xor
cmp
mov
sahf
lret
adc
enter
out
mov
lods
inc
xchg
jns
popf
enter
aaa
inc
push
out
and
dec
aam
jno
mov
iret
add
andl
leave
lods
mov
xchg
loope
fisubrl
or
mov
mov
imul
adc
mov
add
mulb
iret
cltd
ficomps
xchg
mov
aas
out
shll
jb
loopne
jno
shll
nop
cs
enter
enter
aam
jbe
push
cli
rol
jle
add
ret
je
inc
dec
dec
repz
out
xchg
add
scas
mov
movsb
dec
hlt
pop
cmp
cmp
addl
and
mov
jle
xchg
push
inc
movsb
cltd
inc
movsb
adc
mov
jo
pop
mov
jbe
sub
mov
xchg
cwtl
inc
mov
cld
cwtl
dec
mov
fists
pop
mov
icebp
xchg
call
js
test
jae
xchg
or
stc
and
out
ret
cwtl
fistpl
sub
scas
xor
push
es
or
ds
add
out
xor
leave
cmp
testb
aam
jb
icebp
rcll
roll
mov
testl
pop
mov
jecxz
fisubs
decb
pop
dec
adc
and
pop
sub
adc
aaa
cmp
call
xchg
sahf
fidivrs
inc
push
mov
lcall
inc
imulb
xor
mov
movb
test
dec
call
push
insb
adcb
add
lret
sbb
jp
daa
test
adc
popf
icebp
xchg
sbb
das
cmpsb
dec
jno
dec
jae
rol
xchg
decl
adcl
add
arpl
and
jle
xchg
add
dec
lock
or
pop
std
subl
pop
pop
dec
jo
pop
or
mov
fistpll
inc
push
cmpsb
xchg
dec
xor
inc
setbe
xor
mov
insb
mov
js
add
pushf
lock
scas
sbb
in
xchg
jp
and
pop
xor
test
xchg
add
int
mov
daa
sbb
mov
ds
int3
sub
sub
mov
mov
sub
push
stos
mov
xor
sbb
fnstsw
pop
je
addl
lds
leave
sbb
mov
xchg
adc
lahf
cmp
xchg
int
xchg
inc
xlat
add
nop
ficompl
mov
mov
mov
outsb
jmp
xchg
fsubrs
jg
xor
xchg
add
pop
or
outsl
arpl
push
mov
loope
pop
cmp
andl
adcb
andl
mov
mov
cmp
push
cmp
call
cmp
xlat
xor
dec
daa
inc
out
fs
gs
adc
call
data16
mov
pop
and
faddp
mov
mov
dec
lret
jne
sub
and
cmpsl
fcompl
data16
sub
push
push
jns
cwtl
mov
out
test
mov
pop
sarb
jne
bound
outsl
mov
pop
icebp
xor
mov
into
push
push
add
movsb
fwait
sbb
or
fcoms
inc
imull
xor
push
jbe
pop
fs
loopne
mov
cmp
repz
mov
int
xlat
lds
pop
xor
scas
test
cltd
les
clc
dec
gs
mov
in
lret
or
dec
loopne
jl
aaa
push
cmp
push
adc
jbe,pt
mov
sbb
push
jmp
sar
cmp
pushf
add
xchg
cmp
push
les
jno
mov
xlat
mov
cltd
int
das
sbb
imul
sahf
push
mov
das
pop
in
int3
mov
push
sarl
pop
sbbl
and
cmp
push
inc
ror
cmp
cmpsl
mov
mov
subb
pop
dec
lds
stc
aam
js
sub
insl
jl
movl
xlat
mov
test
sub
sub
xlat
add
push
lahf
div
cmpsb
aaa
fs
outsb
jnp
xchg
orb
ret
xchg
jb
push
jb
bound
pop
add
imul
fsubr
or
mov
lret
daa
mov
call
add
pushf
inc
mov
in
inc
jl
iret
enter
icebp
in
orl
mov
int3
test
lock
xchg
test
xlat
mov
mov
xor
xchg
mov
inc
mov
jns
push
dec
mov
inc
mov
pusha
incb
cmp
dec
mulb
repz
shrb
jge
daa
jl
pop
out
mov
push
aam
pop
loop
dec
mov
dec
inc
in
andb
enter
lahf
xchg
mov
in
mov
mov
and
mov
jne
push
sub
bound
cmpsl
jl
push
hlt
sub
movsl
jmp
jne
and
sub
push
mov
push
icebp
sahf
lret
sub
or
jns
or
stc
mov
mov
cld
jno
negl
sarb
out
and
arpl
lds
xor
nop
js
xchg
mov
jno
jnp
stc
and
sbb
inc
xlat
pop
loope
dec
xchg
sbb
jle
aas
and
or
lods
popa
cmp
push
imul
mov
sub
and
pushf
iret
dec
test
test
xor
pushf
sbb
inc
sub
pushf
push
pop
lcall
jmp
jp
mov
push
sbbb
daa
int
mov
inc
cmp
into
rol
ljmp
fbstp
cld
mov
roll
cmp
add
popf
cmp
loopne
daa
xchg
and
xchg
jo
mov
mov
cmpsl
idivl
imul
imul
xlat
mov
xchg
test
or
shrl
ljmp
and
sarl
enter
call
mov
pop
sub
repz
popl
xchg
rclb
ljmp
mov
or
in
dec
add
aad
mov
popa
xor
nop
mov
xchg
rclb
sub
sub
push
mov
mov
mov
push
lret
mov
add
lret
cmp
subb
sub
scas
push
dec
xchg
arpl
lds
lock
and
jmp
in
push
mov
add
adc
jecxz
enter
lret
xor
into
add
cld
test
data16
ret
sub
jmp
xor
cli
dec
andb
std
mov
xchg
xchg
mov
out
lds
gs
mov
rorb
pop
or
dec
pop
ret
in
popa
lods
subb
add
ffreep
sub
lea
mov
and
fwait
cltd
cmp
mov
test
repz
jmp
xchg
mov
insl
and
dec
fwait
das
leave
cmpsb
xor
lea
sbb
rolb
loopne
rcll
lea
pop
cwtl
lds
aad
out
xor
mov
push
fwait
inc
stc
xchg
pop
push
andb
or
cltd
jl
mov
aaa
push
and
adc
inc
xor
push
mov
movsl
popa
xchg
pop
in
test
movsl
cltd
aaa
push
jne
xchg
mov
lret
xchg
sbb
vpshab
add
sarl
sbb
out
inc
xchg
mov
jb
push
hlt
sarl
cli
adc
je
loopne
popa
ds
rorb
sahf
inc
push
hlt
mov
js
stc
into
insl
insl
inc
nop
jns
hlt
lret
mov
scas
mov
scas
out
test
or
mov
cmp
mov
cld
or
imul
pop
adc
jle
pop
xor
xchg
clc
xchg
sbb
jb
loopne
add
and
cmp
inc
mov
xchg
push
les
dec
rorb
mov
dec
call
pop
fstps
outsb
addl
icebp
and
test
mov
dec
xor
xchg
idivb
cmpsb
mov
push
mov
popf
xor
test
pop
mov
in
mov
mov
movsl
jmp
xchg
xchg
pop
pop
mov
jge
sbb
cmp
jae
inc
inc
seta
sbb
jge
mov
xchg
lods
mov
out
mov
add
adc
inc
aaa
lret
sti
stos
push
pop
notl
loop
repnz
cmp
mov
movsb
aam
repz
ja
inc
jb
xchg
in
pop
sub
scas
inc
shrb
in
sbb
ljmp
popa
lcall
scas
add
addl
adc
adc
cli
call
aas
sub
push
push
pause
int3
jae
or
pop
mov
lods
lods
sbb
inc
mov
or
mov
stc
mov
ds
xchg
iret
fiadds
sub
jmp
mov
orb
adc
mov
mov
pop
xchg
xchg
jno
ja
cmpsb
loop
inc
add
jmp
and
shll
and
roll
daa
cmp
sbb
sub
and
das
pusha
or
dec
in
dec
mov
mov
fwait
push
dec
adc
xor
addr16
mov
fisttpl
nop
dec
incl
imulb
repnz
sbb
ret
dec
out
jo
mov
mov
stos
popf
sbb
into
int
mov
add
cmp
nop
rep
out
jbe
pop
cmc
jb
popa
mov
and
fwait
jl
ja
test
iret
js
mov
fcoml
add
sbb
pop
or
sbb
pop
jno
rorb
shlb
aas
jmp
mov
push
inc
or
data16
imul
inc
stc
lods
jg
mov
adc
ja
ret
pop
ds
test
and
and
mov
fisubl
adc
nop
sbb
sub
dec
dec
mov
aas
outsl
pushf
in
inc
imul
fistps
inc
adc
or
jp
and
shrb
jmp
dec
gs
insb
loop
mov
push
xor
ss
add
shll
aaa
arpl
inc
xlat
mov
mov
lods
out
fucomi
xchg
jmp
cli
loope
dec
dec
lcall
fisubrl
dec
das
popf
std
xchg
xor
lea
jne
jnp
cs
sub
in
pop
adc
dec
inc
fcompl
fs
out
jge
inc
mov
mov
add
mov
xor
dec
hlt
push
mov
dec
sahf
adc
cs
adc
ret
pop
dec
lahf
xor
lret
sub
sarl
and
xor
push
loop
fsubl
and
psubb
or
outsb
flds
fsubrl
mov
popa
arpl
incl
mov
inc
in
out
jle
ss
shrb
xchg
add
pop
sbb
mov
jne
ljmp
jnp
xor
dec
test
push
xchg
sub
scas
loop
add
xor
scas
scas
loope
inc
movsb
fbstp
cld
pop
cmpsb
cwtl
arpl
pusha
push
and
loopne
dec
jae
dec
hlt
dec
push
mov
and
dec
sahf
inc
stos
inc
cmp
mov
dec
mov
mov
xor
cmp
xor
add
inc
les
adc
and
jno
mov
pop
inc
inc
bound
pop
inc
stos
mov
call
dec
sahf
stos
sbb
push
ss
movsl
repnz
dec
adc
movsl
das
mov
ljmp
int3
shll
mov
inc
scas
loopne
icebp
adc
shl
inc
js
in
repz
jnp
pop
shl
push
mov
lds
jge
and
sbb
pop
nop
imul
popl
push
popf
dec
pop
insb
mov
add
movsb
mov
inc
push
inc
dec
adc
adcb
xchg
add
outsl
push
aad
dec
dec
inc
movsb
pop
xor
adc
pop
pop
dec
fwait
insb
mov
jecxz
cmp
jg
dec
ss
push
popa
ret
outsb
jp
jns
cmp
adc
ja
sbb
scas
and
ljmp
mov
jl
pop
fisubl
adc
mov
xchg
out
and
ja
mov
sahf
cmc
sbb
enter
cmpsb
xchg
ss
lahf
cmp
pushf
pop
sarl
mul
add
add
loopne
std
in
lcall
adc
pop
loopne
dec
xor
mov
jo
xchg
adc
mov
mov
push
sbb
es
rolb
pop
dec
stos
inc
cltd
and
or
clc
mov
mov
pop
clc
arpl
das
outsl
jb
or
xor
data16
aad
test
mov
mov
stos
sahf
jb
lahf
rcrb
lret
jnp
ja
push
ljmp
sub
es
stos
jb
pop
test
sbb
xorl
inc
enter
mov
xchg
out
dec
outsl
cltd
sub
lahf
pop
gs
push
int3
in
jne
jge
inc
test
cmove
repz
and
push
leave
js
xchg
fldl
sbb
mov
pop
aas
mov
sub
xor
mov
jge
int3
sbb
and
jl
movsl
mov
sub
shl
repz
cmp
lcall
ss
adc
lret
add
insl
lods
ja
push
xchg
jg
pop
xchg
test
loope
and
xchg
cltd
sub
push
ja
rcrb
ljmp
rorb
pop
or
dec
jecxz
pop
je
mov
push
lock
mov
test
xor
loope
stos
xor
shr
mov
scas
xor
stc
xchg
adc
push
icebp
lods
lahf
ds
adc
lea
ds
cmp
push
mov
jne
pop
mov
out
fimull
mull
hlt
xchg
fldenv
fst
jno
dec
or
cmc
repz
inc
dec
aaa
or
das
pop
sub
xchg
les
bound
add
in
push
fnstenv
loop
push
mov
test
cmpps
and
pop
xchg
loop
sahf
in
xlat
push
and
test
add
cmp
cmpsl
scas
xchg
imul
call
movsb
pop
fists
mov
pusha
sarb
repnz
xor
or
cld
push
mov
lods
mov
fldt
lds
add
mov
pop
and
jae
icebp
push
dec
jle
mov
lcall
mov
push
xor
jp,pn
add
clc
pop
pop
inc
jp
out
cwtl
repz
mov
inc
dec
xchg
call
dec
fisubrl
xor
loopne
scas
cwtl
adc
pop
mov
dec
inc
loop
sar
shlb
mov
add
and
mov
mov
mov
lods
aad
ljmp
mov
mov
push
cmp
daa
pop
xor
jecxz
aad
jb
pop
xchg
mov
push
mov
xor
or
jp
aad
fsubrs
inc
mov
fstps
cli
dec
jnp
imul
pop
test
adc
cmp
xlat
inc
dec
les
enter
mov
cmpsl
cmp
push
jge
cld
add
jne
ret
test
mov
sbb
lret
lods
add
cmp
out
pushf
sbb
jl
pop
pop
jge
repz
jne
out
jl
lods
ret
das
adc
mov
addr16
jge
jmp
fs
stos
fs
and
fmull
stos
adc
daa
inc
mov
aam
cld
enter
xchg
in
lock
mov
test
jp
jno
cmp
in
iret
push
xor
inc
xchg
lret
in
scas
int
mov
cmp
outsb
add
adc
push
out
jecxz
and
push
inc
ret
sbb
inc
mov
push
push
or
dec
mov
and
sbb
cmpsb
inc
shrl
dec
scas
aas
imull
scas
xor
fisubrl
jns
xchg
mov
faddp
mov
mov
dec
adc
xchg
or
push
push
cmc
pop
lea
xlat
fisttps
pop
cli
mov
aam
push
pushf
int
clc
sahf
dec
mov
ja
idivb
fwait
sbb
mov
inc
jo
xor
or
xchg
xor
mov
cli
inc
cmp
pop
jbe
push
aam
jmp
ja
jg
xchg
or
ss
scas
ret
cltd
sarl
pushf
andl
cmp
sahf
enter
cmc
jp
or
mov
adc
pop
fistl
dec
movsl
sbb
push
jne
push
or
js
add
call
enter
mov
mov
push
inc
inc
or
ljmp
inc
mov
inc
shr
loope
jmp
in
xchg
sbb
and
jno
repz
xchg
fdivp
loopne
mov
dec
movsl
adc
dec
lret
pop
adc
int3
push
xlat
mov
pop
mov
shl
fcmovbe
and
push
dec
jne
dec
mov
add
ret
xchg
sub
incb
cmc
test
into
push
pop
int3
ret
cs
push
push
notl
inc
and
jns
jno
imul
and
pop
jo
ret
jno
xchg
xchg
jg
call
cmpsb
xchg
mov
loopne
and
jae
jb
cmpsl
adc
popf
cld
cmp
and
pop
jmp
xor
push
lods
jne
roll
shrb
inc
stos
mov
pushl
and
inc
pop
jl
push
add
mov
or
push
pop
push
push
lret
xor
les
xchg
test
sbb
push
js
mov
cmpsl
popf
adc
pop
nop
xchg
pop
les
outsb
sbb
jmp
and
pushf
pop
mov
jnp
popa
mov
inc
dec
test
mov
push
adc
gs
int3
or
insl
or
int
cwtl
sub
adc
push
pop
jecxz
mov
dec
sbb
out
mov
popf
or
adc
test
fcmovb
sub
cld
out
sub
imul
adc
or
xchg
outsl
sub
cli
es
outsb
imul
rol
cwtl
daa
mov
jle
mov
mov
and
mov
imul
test
sub
subb
outsl
arpl
sub
into
cmp
out
daa
jle
sub
in
dec
les
inc
adc
adc
sbb
sub
stc
sbb
ficoms
je
or
test
or
cmc
jo
push
ficoml
or
add
mov
clc
mov
aam
sub
cwtl
out
es
pop
and
push
test
test
add
xchg
jp
mov
imul
cmp
jmp
adcl
dec
insb
add
shrl
mov
inc
and
int3
mov
aam
jb
les
stos
aaa
jno
gs
push
subl
add
sbb
push
mov
inc
arpl
xchg
adc
push
sahf
daa
mov
scas
pop
mov
sbb
adc
push
jb
icebp
and
mov
jmp
imul
or
sahf
push
imul
outsb
mov
lods
dec
add
mov
dec
int3
ja
icebp
push
imull
imul
sbb
add
sbb
ja
jae
fistpl
std
addb
inc
js
jmp
sbb
xchg
fdivp
fistl
mov
aaa
test
in
cmc
test
aas
add
ja
cld
cwtl
fisttpll
std
bnd
lds
leave
fnstcw
xchg
or
ret
sub
out
ja
pusha
repnz
ds
cmp
jp
fcmovnbe
push
pop
das
int3
lcall
mov
cmpsl
mov
or
movsb
std
je
cltd
push
popa
lock
test
subb
mov
cli
jne
pop
jbe
lcall
aaa
xchg
add
stc
cwtl
imul
cmp
pop
mov
inc
arpl
imul
sbb
fstl
push
outsl
inc
mov
adc
gs
push
push
and
xchg
jle
adc
xor
sbb
mov
les
dec
push
inc
js
les
rolb
jmp
lods
mov
out
sbb
and
adc
jmp
push
insl
out
mov
fnstenv
inc
sub
lret
push
test
xor
jne
or
and
xchg
mov
pop
pop
xchg
pop
fildll
repz
and
or
ret
adc
dec
gs
sub
scas
push
push
lds
dec
js
fsincos
ficomps
dec
icebp
mov
lahf
cld
ret
dec
inc
pop
pop
pop
or
pop
std
fistl
or
nop
adc
pop
pop
ret
sub
adc
scas
pop
ds
dec
push
lock
data16
dec
mov
dec
js
ret
mov
dec
jl
and
daa
mov
mov
es
stos
popa
push
imul
mov
hlt
popf
nop
sub
ss
sub
shlb
das
xchg
sbb
push
mov
insl
es
lods
subl
loope
add
jne
mov
inc
fistps
out
dec
push
mov
fnsave
es
and
adc
push
mov
ja
sub
test
ds
es
sub
cmc
adc
loop
stc
pop
clc
cmp
nop
lock
lahf
sub
pop
pop
mov
mov
sub
imul
pop
insl
lretw
addr16
sub
jmp
scas
cmc
cmp
jp
lret
adc
out
xchg
push
jbe
mov
popf
jecxz
inc
fwait
add
xor
mov
daa
sbb
push
fmull
sbb
sarb
dec
mov
sbb
sbb
imul
jb
or
inc
rolb
repnz
enter
push
mov
scas
popf
mov
lock
orl
xchg
cmp
lcall
ret
dec
stos
push
push
gs
add
incb
into
mov
dec
nop
fsubrs
sbb
mov
out
adcl
sub
call
popf
and
daa
xor
push
and
mov
ret
and
mov
and
sahf
mov
mov
add
pushf
fcomps
je
imul
inc
subl
push
inc
xchg
mov
cmpsl
jbe
mov
mov
lret
leave
hlt
jnp
sbbb
jno
pop
cmpl
mov
stc
ret
inc
imul
mov
fs
sbb
or
mov
fcoml
mov
sbb
outsb
mov
test
orl
imul
dec
pusha
sub
adc
mov
push
cmpsl
xchg
dec
inc
fstpl
or
sbb
adc
mov
cld
mov
cs
mov
push
mov
test
push
cld
inc
insl
mov
fs
das
pop
pop
icebp
dec
int
or
popf
mov
dec
xor
orb
pop
int
mov
cmp
jp
xchg
mov
jae
popf
mov
lods
sub
imul
sahf
sub
shlb
jmp
jp
push
repnz
pop
popf
test
adcl
jno
aam
pop
imul
xchg
jmp
popl
adc
lret
test
call
pop
jae
mov
popa
push
add
push
add
and
push
xchg
sbb
in
fisttpll
stos
push
pop
and
into
jge
jbe
jp
add
xchg
test
rcl
popa
shrl
int3
add
add
or
jo
mov
add
jae
jmp
mov
add
mov
and
sbb
push
sbb
ss
mov
mov
inc
rorl
jbe
out
imul
push
pop
add
cltd
xor
inc
inc
jecxz
mov
ja
fisubrs
ja
popf
xlat
jns
xchg
iret
xchg
movsl
xor
sub
xchg
mov
maxps
mov
push
call
xchg
ret
aaa
pusha
cs
sub
sti
push
shll
wbinvd
daa
cwtl
cltd
popf
repz
arpl
sahf
sbb
lahf
movb
sub
adc
push
popa
and
je
fdivs
sarb
push
xor
jle
or
xadd
xchg
sbb
cmp
dec
test
inc
test
jns
addb
sub
adc
jle
add
test
sbb
popf
fs
loop
jge
into
pop
dec
xchg
js
lds
and
leave
xor
and
push
inc
jo
repz
cmpsl
nop
arpl
jne
sbb
or
fadds
je
cmp
test
lods
das
jbe
les
lods
and
pop
push
test
or
dec
and
xor
push
cmp
or
hlt
mov
in
adc
jnp
and
mov
and
add
inc
inc
lods
lock
outsb
ljmp
xchg
loopne
dec
lock
and
test
cmp
lret
pop
cltd
test
jecxz
pop
int
xor
xor
aam
pop
test
adc
out
mov
cmp
or
inc
lret
aam
lds
test
xchg
adc
insl
ds
inc
inc
sub
inc
mov
pop
sub
jnp
mov
mov
mov
jb
jo
dec
popf
dec
add
cmp
push
mov
fwait
dec
pop
mov
fwait
decl
xchg
cmp
shlb
xlat
shll
bswap
jns
mov
je
movsl
xlat
popf
arpl
lret
in
mov
ret
sub
aas
jnp
mov
aad
or
and
inc
aas
add
pop
sbb
xchg
pop
mov
jnp
out
icebp
dec
movsb
dec
mov
sarl
movsl
ljmp
jecxz
inc
xor
adc
or
sub
pop
dec
mov
mov
xchg
popa
mov
mov
dec
dec
xor
cld
mov
aas
aad
loope
adcb
jecxz
mov
ficompl
loopne
push
xchg
mov
jno
aam
inc
lret
out
mov
or
cmp
mov
stos
add
lds
mov
in
fldl
xor
sti
or
xchg
ljmp
cli
jg
test
and
call
lods
sbb
cmp
xor
cmpsb
xchg
inc
arpl
xlat
imul
mov
imul
jno
xchg
dec
mov
sti
cltd
sbb
mov
cld
repz
mov
mov
cmp
jmp
lahf
roll
in
in
call
cmpsb
cmc
sbb
fcmovb
test
mov
push
shll
dec
push
dec
loopne
jae
inc
jns
sbb
or
gs
inc
idiv
mov
or
aaa
mov
data16
cmp
lods
cmp
mov
std
and
sbb
pushf
pop
add
out
dec
jle
cltd
inc
sub
mov
loope
or
sub
fs
xchg
test
adc
sarb
fnsave
test
pop
les
cmc
inc
repnz
adc
mov
sub
inc
xchg
add
and
cmp
inc
rcl
or
fcmovnu
jl
icebp
dec
out
sub
bswap
out
inc
jnp
pop
outsb
movsb
je
mov
cmp
cli
cld
push
js
idiv
xor
fnstsw
sub
sub
popa
xchg
add
fdivrs
or
mov
inc
mov
int3
in
popf
arpl
mov
mov
sub
cmp
mov
sahf
mov
test
js
out
adc
add
cmp
jg
aaa
xor
push
nop
out
push
lods
xchg
xor
cs
sahf
jmp
sub
push
ljmp
test
jecxz
cmc
shrl
xorl
or
cld
les
mov
push
jl
pop
inc
std
mov
stos
gs
pop
movsl
insb
inc
xor
in
cmp
jb
les
aad
mov
insb
dec
lea
mov
xchg
mov
js
xchg
mov
hlt
push
test
mov
or
test
cltd
jbe
jmp
dec
and
lds
jg
dec
push
addl
shrl
aam
or
into
mov
cld
dec
pop
lock
add
push
sahf
lea
pop
daa
pop
xchg
jbe
rcll
cwtl
pop
xor
xchg
sti
subl
mov
dec
sbbl
fistpl
fs
push
loopne
xchg
enter
pop
insl
push
movsl
inc
pop
into
bound
jne
rcll
xchg
pop
out
loop
dec
xchg
or
pushf
mov
sbb
lock
icebp
jg
jg
fildl
push
xor
out
dec
pop
push
ljmp
push
add
je
xor
rep
ret
inc
push
orl
inc
ja
push
pop
les
jbe
loope
sub
xchg
add
jle
out
and
jle
jp
xchg
loop
test
xor
in
push
pop
sub
lock
push
dec
jnp
loope
test
adc
test
mov
xor
mov
decb
mov
outsl
sbb
stc
push
enter
dec
movsl
jle
or
and
cmpsb
fidivrl
insl
fnstcw
cmp
push
cli
push
repz
cmp
push
sahf
sub
xchg
je
dec
dec
jle
icebp
cmp
je
ret
cmc
adc
lea
rol
xor
jle
push
fldenv
into
and
mull
mov
clc
shrb
sub
insl
or
fistps
inc
fistpl
out
popf
push
sarb
adc
mov
es
mov
sub
icebp
lock
and
cwtl
cwtl
int3
es
xor
sbb
adc
leave
sub
clc
sbb
dec
mov
inc
sub
inc
in
aam
inc
and
shl
std
in
insl
cmpl
xchg
xchg
lea
jbe
pop
faddl
xchg
dec
cld
out
ja
ja
stos
cmc
ss
push
xor
fdivrl
pop
adc
push
cmp
or
icebp
jecxz
pop
arpl
cs
fbstp
scas
aas
push
sub
ror
out
cmp
ljmp
inc
insl
or
fisubrs
fwait
stos
int3
daa
or
jle
dec
lcall
push
sahf
push
push
jmp
lock
ja
insb
xor
sahf
jge
push
insb
sub
outsl
cmp
in
lods
and
cltd
or
loope
push
loop
arpl
push
pop
enter
push
out
pop
add
pop
jle
adc
int
pusha
xchg
daa
sub
shll
jae
or
neg
xchg
outsl
popa
jns
rolb
imul
xchg
pop
add
bound
scas
jge
pop
ret
scas
xchg
pop
xor
mov
addr16
adc
hlt
mov
mov
mov
xor
add
lahf
adc
sub
fs
cld
outsb
mov
cli
test
repnz
nop
adc
xchg
inc
push
push
cmpsb
icebp
sbb
adc
das
in
push
test
mov
mov
cli
out
aam
mov
mov
sub
adc
add
jae
loope
sbb
rolb
clc
frstor
push
sub
add
lds
int3
dec
pushl
jne
gs
mov
pop
rclb
xor
or
outsl
ja
adc
xlat
dec
jmp
ja
shr
call
xchg
fstl
mov
les
sub
mov
and
loopne
mov
call
addr16
lods
movsl
push
push
es
jnp
xchg
mov
repnz
xchg
dec
popa
xor
dec
mov
or
push
rcrl
test
jo
pushf
mov
xor
jbe
cltd
jo
xor
arpl
mov
mov
push
hlt
lds
jl
or
or
cmp
outsl
add
inc
test
and
popf
lea
cltd
in
add
jnp
daa
pop
pop
mov
fmul
push
and
pop
jmp
add
mov
mov
or
dec
outsl
mov
sbb
dec
ljmp
xlat
in
sbb
pop
lds
and
adc
fisubs
mov
stc
adc
jg
insb
mov
push
lds
or
xchg
adc
pusha
pop
testb
and
dec
das
pop
test
mov
push
es
fwait
dec
add
jg
jb
mov
outsl
adc
mov
or
mov
or
mov
add
in
adc
lea
aas
cmovle
test
jns
ljmp
add
loop
and
jg
repnz
mov
pop
iret
mov
shlb
in
jns
xchg
lock
shll
xchg
lock
popf
icebp
in
les
jnp
mov
mov
cld
bound
ret
add
xchg
mov
ret
push
sbb
aaa
cwtl
mov
add
xchg
leave
nop
test
xchg
pushf
inc
xlat
dec
ret
jb
stos
jle
and
adcb
sbb
mov
jecxz
in
push
out
add
sbb
bound
mov
add
mov
leave
mov
stc
sub
jne
addr16
mov
and
cs
fnstcw
jl
fs
jmp
jno
pop
mov
inc
xchg
clc
dec
sub
adc
out
int
jmp
out
dec
inc
movsl
pushf
xlat
xlat
ljmp
loope
pop
fiaddl
push
cmpsb
and
mov
icebp
outsb
pop
mov
ret
shlb
sbb
jle
push
insl
sbb
cmp
je
out
out
lcall
or
xchg
insb
out
lea
xchg
leave
in
or
mov
adc
push
fsub
jmp
test
cwtl
dec
mov
pop
fs
sub
cmp
bound
cmpsb
outsl
sub
jae
add
xchg
inc
adc
shlb
jo
adcb
xor
loope
and
xor
or
dec
pop
mov
mov
int3
loop
or
div
out
sbb
and
or
xchg
divb
sbb
sbb
movsb
mov
cmp
and
fnstcw
repnz
push
dec
mov
cmpsb
jle
jge
pop
ja
rolb
pop
rcrb
popa
in
imul
in
rorl
jbe
fsubrs
dec
pop
lahf
daa
xchg
sub
sbb
xor
lcall
and
aaa
and
sbb
sbb
bound
mov
sbbb
dec
subl
lahf
enter
push
je
subb
dec
add
push
and
jg
ror
dec
mov
and
cwtl
dec
aaa
gs
dec
addr16
adc
sbb
dec
imul
jle
pop
inc
shll
fwait
or
mov
adc
xchg
inc
mov
sahf
mov
outsl
ss
cmp
and
sub
xor
imul
xor
enter
cmp
cli
inc
jae
mov
lods
or
jge
sub
ret
inc
pop
push
fmuls
inc
xchg
inc
pushf
insl
gs
lahf
xlat
xor
add
out
jbe
lea
mov
xchg
mov
popa
fnsave
push
hlt
inc
shlb
fsubl
mov
sarb
jbe
fwait
push
pop
xor
dec
sbb
xchg
sub
insl
xchg
mov
imul
or
les
push
jp
mov
mov
mov
lds
aaa
xor
pop
xor
arpl
cltd
mov
xchg
dec
sbb
dec
movsl
invd
test
stos
push
mov
xor
mov
push
mov
dec
push
fldt
ret
scas
loop
adc
loop
xchg
push
ljmp
aam
xchg
fcomps
mov
or
fldt
pop
es
xor
clc
and
sahf
push
addr16
ret
sbb
in
cmp
shrb
sub
loop
stos
mov
daa
ds
adc
mov
int3
add
cmpl
mov
lcall
or
fildll
mov
push
pop
and
loope
sub
pop
pop
push
push
sbb
xor
add
lods
rclb
jecxz
add
inc
bound
mull
aam
movsb
dec
cmp
mov
insb
test
and
pop
pop
and
inc
scas
aas
call
xchg
lret
adc
xchg
push
cmp
test
jl
int3
and
stos
mov
mov
fcmovnu
inc
push
int
jmp
insl
jmp
hlt
push
ds
and
mov
or
clc
sti
dec
les
mov
fistpl
xor
loope
mov
sbb
jbe
push
jge
push
sbb
out
adc
lods
cmpsl
iret
push
cmpsb
and
aas
ljmp
ss
cmpsb
cltd
mov
int
push
and
lea
push
jge
jecxz
arpl
es
mov
loop
or
inc
mov
test
ja
mov
in
int3
xor
je
jle
inc
ss
stc
lret
imul
jno
mov
add
int
call
xchg
sub
jg
cli
adc
pop
mov
imul
lods
mov
aam
jl
adc
adc
cltd
repz
push
inc
hlt
xchg
pop
aas
in
sub
or
push
or
lds
xchg
stos
cmovge
lods
shll
test
mov
clc
addr16
icebp
push
mov
sbb
xchg
imul
fs
sub
or
add
jp
xor
adc
xchg
or
sub
jge
aad
adc
xchg
cld
jae
mov
xorb
adc
adc
cli
arpl
add
popa
xchg
sub
add
and
outsl
imul
inc
mov
loopne
lea
push
arpl
push
dec
add
fs
add
ljmp
std
mov
mov
and
or
mov
mov
test
repz
sbb
xchg
adc
mov
xor
outsb
dec
cmp
push
adc
push
aam
and
cmp
int3
push
push
cmp
ret
and
pop
fsts
jne
mov
ret
jns
les
cmpsl
mov
in
dec
rorl
adc
jbe
or
mov
sar
cmp
mov
pop
lahf
jge
push
in
add
xchg
cmp
in
cmp
mov
lret
cmp
dec
sbb
fstpl
orb
outsb
popf
push
jecxz
cmp
lret
fistpll
or
pushf
cmc
push
adc
add
pop
cmp
fldt
pushf
pop
adc
lods
loope
movsb
dec
data16
jne
mov
dec
daa
add
or
push
jno
jmp
xor
test
cs
inc
stc
or
dec
push
dec
pop
gs
sbb
dec
lcall
add
lret
mov
sbb
ret
aas
pop
movsl
jne
fidivrs
imull
cmp
pusha
out
sub
adc
sub
jp
dec
inc
insb
cmp
movsl
ds
and
nop
cmp
clc
cmp
dec
int3
ds
mov
mov
out
fstpl
int
mov
pop
dec
bts
mov
ss
pop
pop
cmp
push
sub
lods
cmpsl
lds
mov
mov
pushf
nop
mov
orb
es
mov
xchg
clc
pop
dec
js
mov
cmova
adc
leave
jecxz
add
loop
xor
jno
repnz
add
es
out
aaa
jb
inc
sub
outsl
jns
lods
in
pop
or
dec
cmp
sbb
fistl
xor
pop
xorl
sub
pusha
jp
sar
mull
and
fs
cld
rorb
imul
and
popa
sub
lods
mov
pop
ljmp
add
mov
jae
loop
xor
pusha
push
in
xchg
push
jns
sbb
movsl
lahf
movsl
lock
jle
shlb
das
sbb
es
jge
loop
imul
mov
in
and
outsl
lock
out
imul
inc
movsl
lods
aas
cmp
cmp
lcall
jbe
loop
push
adc
add
insb
in
pop
leave
loopne
push
ret
push
cmp
mov
pop
scas
mov
sub
add
mov
lds
pop
sbb
pop
mov
in
into
mov
sub
loopne
jmp
xchg
stc
and
clc
xchg
mov
ja
addb
mov
idiv
and
inc
inc
pop
xchg
je
ret
xchg
stos
ds
pop
or
pop
or
aam
mov
xor
test
jmp
test
insl
roll
adc
dec
popa
xor
stc
mov
into
xor
in
fwait
push
repz
and
pop
dec
dec
cmp
jg
test
or
and
inc
push
mov
xor
add
subl
rorb
xchg
lret
test
out
pop
dec
insl
xor
std
sub
sub
hlt
sbb
or
mov
lret
inc
stos
pop
stc
stos
jmp
cmp
sbb
punpckhdq
dec
jnp
jg
fists
cld
lret
sti
aaa
dec
mov
les
insl
cltd
fldcw
pop
pop
cmc
pop
xchg
jp
hlt
inc
test
mov
sub
mov
jmp
add
push
mov
mov
or
xchg
cmc
sub
jb
mov
test
call
inc
push
push
pop
imul
inc
rolb
add
cli
add
mov
mov
es
aad
dec
mov
cmpb
xlat
adc
add
xchg
fsubs
test
xor
jb
ret
push
inc
sub
jno
rcrl
mov
mov
loope
pop
test
scas
xchg
negb
add
aaa
cmpsb
adc
pop
fwait
adc
ss
and
inc
int
or
jl
test
ds
sbb
sub
leave
and
adc
cmp
sbb
jbe
loopne
jge
inc
rcll
add
loope
pop
shlb
adc
push
rcl
mov
out
int
pop
or
mov
jnp
adc
icebp
xor
xor
xchg
add
jmp
adc
outsb
push
scas
mov
int3
dec
mov
out
and
inc
xchg
mov
lahf
pop
push
ss
popf
cmp
sub
out
stos
mov
decl
lock
jb
cltd
loope
pusha
xor
mov
adc
lcall
inc
stc
sub
or
ljmp
aaa
and
adc
adc
sub
xchg
sub
add
push
dec
jae
cld
mov
sub
cmpsl
fldl
loop
bound
lret
dec
lods
mov
pushl
xchg
bound
in
aad
cltd
jmp
jl
and
pop
cmp
push
inc
pusha
pop
mov
shll
rclb
rcl
outsb
lds
pop
icebp
jno
mov
mov
out
jae
ret
scas
in
adc
jnp
mov
sbb
mov
ja
cmp
dec
xor
out
push
stos
out
adc
sbb
add
mov
outsl
mov
out
cmp
and
cli
inc
out
xchg
add
loop
leave
mov
iret
rorl
sbb
jl
out
test
push
int3
jns
stc
push
movb
mov
push
outsl
push
xchg
addr16
inc
jb
in
sbb
cs
leave
or
xor
mov
repz
mov
iret
clc
cmp
iret
mov
pop
mov
adc
repz
int3
mov
adc
mov
pminub
int
pop
cmpsl
loope
sbb
sbb
in
inc
sub
inc
clc
loope
call
push
pop
jne
lahf
ds
jl
jmp
xorb
dec
popa
lods
ja
jno
andb
sbb
cmc
add
ja
inc
pop
sub
cwtl
sbb
daa
cmp
lock
mov
scas
xchg
lds
jl
gs
lahf
sub
imul
push
xlat
and
push
mov
inc
jae
jbe
pop
pusha
enter
xchg
mov
jae
fdivrs
xor
repnz
scas
into
jecxz
push
nop
and
add
cmp
shll
push
das
pop
shl
sahf
in
inc
xchg
xchg
adc
in
mov
sbb
stos
xchg
xchg
fmull
popf
mov
pop
in
push
cmp
dec
andb
inc
jo
pushf
lret
aad
inc
push
jns
xchg
pusha
mov
jbe
jecxz
inc
sbb
loop
out
jo
jbe
xchg
jp
add
jnp
mov
hlt
sub
push
rcll
jmp
insl
aam
test
ljmp
jmp
pop
sbb
mov
sbb
bound
jne
ret
xchg
sbb
pop
inc
xor
mov
bound
and
leave
mov
out
leave
jae
dec
fimull
cltd
bound
or
push
lret
jne
mov
or
pusha
mov
test
xchg
jmp
vcvtsi2ssl
aaa
ja
dec
popf
ret
mov
push
iret
jg
jo
fstpt
lret
daa
into
jns
dec
push
lds
imul
mov
outsl
add
cmc
fldl
lahf
icebp
xor
lods
push
adc
pop
sub
dec
add
loop
adc
movsl
cwtl
scas
mov
lcall
lods
outsl
movsl
sbb
jp
cwtl
mov
dec
dec
mov
cmc
jl
add
test
jg
cmc
mov
lods
sarb
pop
mov
pop
mov
or
xchg
inc
pop
cltd
rep
sbb
xor
inc
dec
out
stc
pop
sar
xchg
xlat
jnp
lcall
cwtl
repnz
adc
adc
fistpll
sub
loope
dec
push
xlat
push
lock
dec
aam
fstpl
stos
jp
jecxz
and
cltd
dec
inc
jnp
into
xchg
scas
mov
lods
cmc
add
popa
lret
stos
in
add
outsl
sbb
cmpsb
stos
push
lods
mov
cs
jae
mov
lret
jmp
cmp
xorl
pop
lahf
or
push
sbb
mov
iret
negb
adc
js
leave
cli
fcmovbe
inc
nop
popl
ljmp
sti
jbe
cmp
jns
es
sti
sub
push
adc
out
cmp
aas
sub
add
jge
incb
out
jne
rorb
es
stos
jae
mov
fs
aam
adc
mov
lret
add
hlt
fdivrs
push
jb
xor
sbb
out
sbb
xor
bswap
cld
pop
add
in
stc
push
cmp
mov
loopne
or
lods
sub
ljmp
shll
sbb
dec
mov
ret
test
das
xlat
lahf
jecxz
sub
cs
add
repz
xchg
push
arpl
data16
pop
fwait
gs
enter
movsl
mov
add
movsl
popf
jb
cmp
pop
outsl
add
sbb
and
mov
xorl
jnp
in
mov
mov
loop
add
push
and
xchg
inc
int
xchg
push
leave
add
rorb
das
jmp
rol
sbb
sbb
adc
adc
lret
dec
cpuid
dec
inc
push
lods
cli
or
lret
imul
iret
xor
lods
out
adc
jl
dec
or
jbe
sbb
in
fdivrs
add
in
out
xchg
fwait
rorl
sbb
jbe
mov
cmpsb
fwait
xchg
pop
and
dec
sbb
popf
inc
inc
xor
stos
jmp
shll
filds
and
pop
aas
mov
mov
add
jo
sub
stos
adcb
jo
and
into
add
adc
and
outsl
rorl
data16
into
inc
in
enter
roll
pop
rorl
sub
inc
scas
imul
pop
push
ljmp
ffree
dec
pop
out
fwait
and
idiv
jmp
adc
dec
adc
pop
sarl
popf
xor
repnz
xor
aaa
test
xchg
mov
lahf
stos
aaa
dec
and
orb
push
xor
popf
test
cmp
jmp
jns
mov
pop
pop
mov
pop
cs
nop
sub
mov
jmp
jae
hlt
daa
in
sub
or
or
mov
loope
movsl
fwait
out
mov
add
mov
adc
xchg
ljmp
jmp
test
xchg
fistps
jle
js
scas
test
cli
jg
test
imul
mov
cmp
iret
xchg
mov
cmp
inc
xor
bound
into
lds
or
inc
sahf
inc
sub
call
push
ljmp
in
add
pop
cld
push
xchg
cmpsb
push
les
xchg
and
je
shr
lds
xchg
sbb
fs
les
jnp
and
aas
jo
andb
mov
mov
lods
jmp
sub
xor
push
imull
fdivr
jp
pop
loop
rcrb
and
js
arpl
aas
cmp
sub
daa
or
clc
pop
xchg
or
data16
inc
xchg
dec
mov
xlat
rorl
pop
in
mov
push
dec
mov
mov
cmp
das
push
push
ljmp
repz
pop
xor
pop
scas
lea
cli
ss
push
and
push
push
adc
pop
lods
mov
mov
jle
fsubs
inc
xchg
xor
aas
fwait
clc
inc
mov
aaa
and
bound
cmpsb
adc
cli
mov
xchg
adc
sub
ret
sbb
ljmp
in
pop
cmc
ja
imulb
push
and
ret
mov
dec
ja
inc
es
stc
sub
cmp
and
lock
arpl
lret
fwait
cli
mov
xchg
stos
and
push
mov
mov
xchg
outsb
push
insl
int
daa
pop
stos
testb
adc
add
stc
int3
stos
in
stos
pop
mov
inc
xchg
xchg
push
mov
insl
xor
fimull
scas
push
mov
mov
jne
lods
test
sbb
aas
jae
loope
pop
mov
xor
sub
lahf
mov
mov
push
push
nop
inc
sub
xor
fidivrl
or
push
sbb
cmp
aam
addr16
mov
ret
mov
stc
mov
pop
adc
inc
inc
dec
shll
inc
jecxz
cltd
mov
ret
add
pop
xchg
orb
loopne
cmp
or
out
sub
outsb
sti
or
sub
add
stc
repz
mov
dec
xchg
push
test
call
jecxz
outsl
iret
or
jno
popa
xchg
mov
cmpb
addr16
cmc
int3
cmpsb
jmp
ljmp
sbb
cmp
shll
lret
mov
jbe
leave
jae
gs
negb
push
ljmp
fisubrs
add
push
insb
clc
or
jge
xorl
lret
es
lds
sub
js
and
cmp
jg
push
fistpl
add
pop
xchg
jb
cmp
jl
lods
stc
ss
mov
jae
clc
enter
test
inc
fnstcw
ret
jmp
rclb
aaa
push
push
mov
dec
repz
inc
pop
xchg
aaa
mov
or
mov
insl
jae
push
ja
das
and
sub
and
arpl
jne
imul
pop
daa
add
out
enter
stos
jae
dec
add
adc
push
fadds
push
add
fldcw
icebp
xlat
scas
outsl
cmp
stos
dec
adc
add
push
ja
test
icebp
mov
into
mov
sub
mov
add
sbb
lods
test
movsl
flds
sbbb
inc
jge
xchg
and
xchg
test
mov
repz
iret
mov
ljmp
jl
into
lods
insb
sbb
testb
out
mov
add
inc
movsb
pop
cmp
mov
add
sbb
test
xchg
push
pop
cmpsb
or
push
fnstenv
mov
outsb
push
cmp
hlt
inc
push
call
jmp
adc
adc
inc
jp
push
cmpsl
add
xor
stos
add
rcr
cmp
adc
add
mov
jns
xchg
jbe
in
jmp
push
jb
add
rcrb
out
mov
cmovle
dec
add
loop
fwait
add
in
movsl
jno
sub
arpl
pop
push
cs
lods
sub
rolb
test
inc
or
push
in
xor
xorb
xor
or
pop
and
add
int3
aas
sbb
xor
jmp
jmp
repnz
movsb
jecxz
pushf
pxor
lods
dec
fwait
and
sbb
dec
ret
in
push
xchg
enter
inc
jb
and
inc
mov
gs
pop
push
pop
jle
xor
jp
jo
xor
or
mov
jae
and
cmp
mov
jg
testl
rorb
cmp
in
jnp
jl
cmpsl
mov
daa
pop
shll
call
jns
loop
packsswb
xor
or
aas
aam
xor
mov
dec
push
xchg
cmp
decb
adc
insb
and
add
adc
cmpsb
shrl
adc
shl
mov
aad
call
xor
add
mul
popf
jmp
pop
mov
mov
lahf
add
insb
dec
add
push
mov
xor
std
xor
leave
std
lods
pop
xchg
xchg
insl
sbb
in
stos
xor
cwtl
jge
dec
call
popf
lea
jae
mov
in
xlat
rcrb
or
sahf
outsl
dec
sub
rcrl
mov
push
mov
data16
adc
icebp
xchg
pop
fcompl
test
push
jae
ljmp
js
fisttps
and
imul
ja
loope
and
push
jno
jbe
imul
cmp
and
stos
pop
outsb
rorb
int3
cmp
cwtl
cmp
loope
mov
js
pop
mov
add
in
lock
inc
icebp
jo
add
and
insl
iret
mov
fstp
or
push
decl
pop
adc
add
push
push
mov
int3
jno
adc
inc
mov
or
dec
sbb
dec
pop
movsb
imul
scas
xchg
sub
fldcw
repnz
stos
test
xchg
pop
sub
out
add
inc
mov
push
mov
in
push
mov
out
push
sbb
ficomps
xchg
push
and
orl
cmp
mov
ja
sbb
daa
xchg
test
lret
add
mov
ljmp
rol
jp
xchg
fldpi
xor
mov
pop
fcmovnu
pop
push
scas
sub
lea
adcb
xchg
mov
inc
pusha
data16
push
xor
jl
cltd
sbb
xor
aaa
inc
mov
testb
or
dec
jmp
xchg
test
lock
push
clc
scas
push
mov
lods
jge
iret
int3
test
mov
outsb
push
fmull
cmp
sbb
or
cmp
cmc
fwait
lds
popf
adc
pop
push
int3
and
sub
mov
bswap
rcl
mov
aad
cmp
out
cmp
jle
std
test
lret
sub
jecxz
stc
in
adc
ret
jle
mov
mov
in
sti
pop
push
xor
leave
scas
movsl
lahf
mov
aad
inc
gs
xor
jl
jns
dec
iret
sub
mov
hlt
shll
ficompl
adc
test
cmp
sarb
cli
pop
xchg
add
dec
call
cmp
adc
shll
xlat
lcall
xchg
dec
ret
shrl
dec
dec
orl
xor
inc
fidivrl
adcb
cld
adc
ud2
mov
jg
sbb
je
ret
test
mov
bound
inc
rol
mov
jmp
mov
aad
mov
sub
pusha
add
loopne
mov
add
fnstenv
ja
xchg
ljmp
fisubs
testl
ljmp
push
int
rcl
fxch
imul
push
scas
lods
ds
cmpsl
xchg
mov
push
out
adc
insl
add
mov
push
ret
xchg
ss
xlat
inc
sbb
loope
mov
sub
jb
pop
and
jle
scas
icebp
cltd
in
fwait
or
pop
sub
nop
clc
aas
pusha
insb
cmp
imul
push
fcompl
cmc
mov
push
push
cwtl
xchg
jnp
enter
add
cmp
cli
xchg
and
lret
cmp
mov
add
das
fstps
outsl
rcll
sub
mov
out
out
mov
addr16
pop
sub
xorl
call
out
ret
lods
out
pop
call
jnp
jg
mov
daa
ljmp
in
mov
mov
es
adc
rcl
or
xor
jmp
lods
sbb
jmp
and
cmp
call
and
movsl
in
negb
dec
and
out
fcomip
and
enter
bnd
jne
inc
movsb
sahf
lret
inc
jbe
mov
and
arpl
outsl
push
push
inc
lods
mov
mov
and
sub
scas
fcoms
mov
fiadds
jmp
pop
pop
and
xchg
cli
out
or
add
jae
scas
mov
sbb
cmp
push
in
sub
fucompp
lahf
add
test
pop
xchg
in
push
je
pcmpeqw
mov
pop
push
mov
adc
cmp
jno
shl
lds
movsl
rorl
nop
pop
insb
sbb
in
andl
dec
sti
jge
sahf
mov
xchg
movsl
xchg
mov
ja
iret
pushf
repnz
add
cli
and
stos
pop
push
or
scas
push
push
leave
loope
cld
sbbb
xchg
sub
jb
xor
or
sti
lcall
repz
inc
mov
push
jg
adc
in
subl
sbb
ficoml
pop
lds
lret
cmp
jb
loop
lahf
cmpb
adc
push
ljmp
jno
inc
cltd
adc
sbb
mov
sbb
lea
and
or
out
mov
lret
adc
inc
int3
jo
outsl
nop
jmp
push
wrmsr
inc
or
stos
adc
sbb
sub
fnstenv
mov
push
inc
jo
scas
cmp
inc
mov
add
shl
loope
push
mov
pop
xchg
sub
push
jg
mov
btr
inc
insb
mov
jne
xchg
jecxz
in
mov
inc
test
jae
mov
jge
lods
adc
ret
out
cmp
mov
call
or
insl
mov
cld
push
mov
add
mov
inc
lret
pop
or
ja
inc
push
aas
cmpsb
pop
xchg
push
call
outsb
push
cmp
fsubl
pop
jp
fcomip
test
pop
push
add
fwait
cli
cld
enter
pop
sub
mov
es
nop
cmc
adc
sub
pop
adc
call
lods
sub
dec
sbb
lods
pop
out
sbbb
ds
loopne
lea
xchg
es
or
gs
xchg
std
adc
repnz
icebp
or
jle
push
sub
sti
mov
outsl
inc
incl
pushf
or
pop
pop
decb
out
pop
sub
fisttps
fcmovu
sub
or
or
ljmp
mov
cmp
je
xor
push
je
pop
je
dec
cli
add
std
jl
popa
jmp
inc
adc
push
sti
xchg
mov
mov
xchg
or
push
in
sbb
pushf
cmp
cwtl
lahf
test
and
inc
mov
inc
test
movsb
pop
sub
hlt
bnd
sub
fs
mov
es
xchg
push
sbb
jecxz
std
mov
shl
sub
and
out
xchg
jae
add
mov
hlt
lea
sbb
and
or
or
xchg
cmp
or
cmpsl
mov
lock
loopne
xchg
xchg
push
aam
or
jmp
dec
sub
xchg
fimuls
call
mov
mov
mov
loope
or
pop
dec
inc
dec
adc
nop
and
hlt
push
xchg
filds
push
cs
inc
ret
ret
ds
xchg
inc
fistpl
jnp
mov
in
push
jbe
push
sub
call
pop
jno
mull
mov
adc
xchg
js
mov
sarb
pop
or
rcll
or
cltd
cmpsb
sub
dec
mov
pop
push
mov
dec
xor
or
out
sub
js
mov
sbb
pop
dec
mov
mov
out
and
jge
jmp
scas
and
int3
imul
int
mov
mov
hlt
enter
jge
mov
inc
pop
int3
push
filds
int3
jl
sub
mov
int
movsb
jge
movsl
mov
cltd
and
jp
push
imul
gs
mov
lods
or
sub
mov
lock
testb
imul
dec
andb
push
inc
mov
sbbb
inc
add
push
adc
and
and
pop
aas
cmp
cmp
fincstp
sub
sbb
out
jbe
mov
mov
iret
stos
shrl
frstor
fwait
pop
cmpl
mov
inc
clc
rcrl
cmp
xor
add
lods
jno
cmp
vmovntps
scas
sub
fs
pop
testb
dec
pop
outsl
pop
gs
xor
xor
and
xchg
push
sbb
inc
or
sub
aad
iret
inc
shrl
mov
sub
mov
inc
adc
lret
fbld
in
add
sbb
jecxz
aas
add
mov
stos
jg
mov
dec
push
aaa
jo
jecxz
mov
sbb
scas
mov
iret
jl
decb
jge
lock
enter
mov
push
and
test
jl
adc
inc
mov
cmp
mov
fcoml
sahf
std
fisttps
es
jbe
outsl
lea
inc
inc
xor
inc
sarb
jl
push
imul
jle
and
stos
mov
xchg
sub
test
out
clc
xchg
inc
sti
mov
mov
dec
inc
leave
mov
outsl
pop
cltd
mov
push
enter
mov
mov
repnz
dec
jl
std
ss
cmpsl
push
add
fcmovnbe
dec
xor
sub
stos
dec
mov
lret
or
xlat
pop
in
add
mov
mov
mov
subl
sbb
fstps
mov
mov
out
ljmp
andb
in
jmp
jle
and
pop
push
jae
div
mov
xor
cmp
and
clc
popa
and
stos
push
sbb
sub
cmpsl
ss
cmp
mov
lret
xor
stos
sbbl
jle
and
clc
fmulp
jg
test
push
inc
sub
rclb
ljmp
push
aas
pop
dec
pop
fldl
sbb
mov
adc
pop
inc
int3
hlt
inc
mov
mov
shll
das
outsb
aas
pop
ss
outsl
jns
or
lret
addl
mov
cmp
test
xor
sub
cmp
sub
and
sti
add
or
test
fstpt
sbb
pop
fs
orb
fiadds
jnp
push
push
lahf
mov
sbb
call
rorl
xchg
xor
adc
adc
jno
sub
test
fdivs
push
loop
cli
add
ds
xchg
pop
mov
loope
orb
cmp
loop
sahf
lret
sbb
loopne
scas
adc
icebp
add
add
xchg
popa
pushf
loope
push
fmuls
and
sahf
cmp
push
mov
jg
das
jmp
ret
int3
jbe
pop
mov
inc
jl
dec
addb
into
mov
imul
ds
dec
into
nop
push
std
imul
in
js
addr16
and
rcl
jp
lock
test
pop
dec
popl
jg
xor
inc
push
push
outsl
pop
aas
sub
add
mov
fimull
cli
mov
cmp
mov
cmp
push
mov
or
mov
inc
mov
xor
mov
frndint
stos
sbb
fidivrl
xchg
sbb
adc
lahf
and
jnp
mov
outsb
fistps
call
popa
mov
dec
ret
inc
arpl
cmp
movsb
push
ljmp
hlt
mov
test
mov
test
fbstp
aas
add
inc
pop
movsb
mov
jae
mov
fbstp
cmp
dec
add
int
inc
sub
insb
out
daa
orb
mov
je
mov
and
xchg
fmull
xchg
aas
mov
test
repz
es
push
loop
sahf
lret
int3
aad
mov
push
pop
jnp
out
and
enter
mov
cmp
pushf
or
test
ret
push
jmp
push
mov
dec
fcompl
sub
mov
dec
sbb
cs
xchg
jb
mov
test
pop
test
insb
inc
iret
mov
jle
pop
dec
sbb
in
dec
pop
xchg
scas
xchg
push
stc
out
ss
xor
aam
mov
add
out
mov
adc
cmp
dec
push
sarb
gs
adc
xchg
cmp
cmpb
push
and
mov
fbld
int
jbe
into
mov
mov
fistpl
xchg
and
iret
xchg
imul
jge
je
dec
push
shl
inc
cmp
push
sub
adc
addr16
pop
repz
sbb
mov
jmp
mov
push
sarb
inc
mov
in
enter
pop
repz
arpl
aad
test
test
pop
scas
mov
cmpsl
pop
mov
orl
sbb
fadd
insl
sub
addr16
ja
flds
les
jle
mov
not
aaa
push
sahf
dec
shl
rcrl
lret
push
mov
lret
mov
test
push
loope
lods
dec
test
mov
nop
add
stc
mov
sbb
popf
add
adcb
sbb
adc
pop
js
stos
data16
mov
lcall
ret
xchg
jae
ds
movsl
test
xchg
jg
push
pushf
jle
ret
pop
pop
mov
fchs
or
inc
ljmp
cmp
clc
call
das
repz
xor
lds
fnstcw
jae
dec
push
mov
mov
mov
loopne
ret
addb
pop
addb
ja
add
dec
addr16
or
sahf
ds
mov
ret
xor
xlat
lret
xchg
or
cmpsl
mov
ljmp
mov
icebp
jg
jb
fidivrs
aas
jge
or
in
lods
push
push
lods
mov
xor
jmp
call
loop
lcall
add
daa
sbb
pop
add
pop
cmp
push
xchg
dec
in
cmp
jb
fidivs
cltd
xor
mov
lods
mov
pop
aas
jmp
and
and
inc
addr16
aad
ds
cs
lods
or
inc
je
inc
fstpl
xor
xchg
fisttps
lret
int
pushf
add
pop
ljmp
pop
ss
popf
inc
sub
js
aad
add
ss
or
sbb
clc
aad
fdivrs
int3
xor
rorb
cli
xchg
pop
mov
cs
sub
push
gs
aas
or
ja
sti
mov
daa
jp
push
adc
push
push
xor
sbb
aaa
pop
or
xchg
sbb
xchg
js
in
xchg
xchg
repnz
add
push
ror
inc
enter
pusha
popf
sub
out
iret
pop
mov
ja
lret
in
aas
out
xlat
mov
jg
push
dec
in
push
rorb
mov
lcall
bound
dec
sbb
pop
movsb
scas
out
mov
and
int3
loop
out
scas
ja
adcb
xchg
sub
xchg
cmp
mov
xchg
ret
cmp
or
cmpsb
pop
stos
fbld
lods
sbb
or
xor
inc
jmp
imul
js
dec
add
push
repz
mov
mov
lods
push
jno
scas
icebp
ja
mov
and
outsb
hlt
fwait
dec
in
xor
cs
xchg
jne
jmp
scas
lods
test
add
mov
mov
sbbb
mov
jno
xchg
stos
mov
sub
jb
inc
neg
in
fcoms
loopne
inc
or
jno
lahf
inc
jle
xchg
int
and
out
rolb
jb
imul
add
cli
mov
sbb
arpl
leave
sbb
icebp
add
xchg
cmp
fabs
dec
out
loope
xor
out
nop
adcl
clc
mov
sub
mov
lret
sbb
and
jmp
jmp
sbb
mov
xlat
jge
das
sub
pop
jecxz
xor
mov
scas
adc
pop
loope
loope
sbb
imul
xor
fists
fwait
jnp
insl
adc
xor
add
fbld
insb
and
cli
cmp
inc
lret
push
inc
jg
mov
arpl
lret
das
push
dec
add
pop
shr
push
lahf
fidivrl
pusha
mov
add
sub
xor
ljmp
fs
rol
or
pop
jae
jnp
int3
loope
mov
nop
and
movsb
sbb
mov
and
sub
aam
bnd
xor
int
jg
push
inc
and
xchg
jmp
push
mov
fs
lea
in
ds
mov
cmp
ss
push
push
or
sbb
repnz
movsl
mov
add
cmp
decl
stos
sti
cmp
test
cmp
lcall
xchg
jle
cmp
ss
inc
mov
jnp
enter
and
pop
add
inc
mov
mov
test
sub
lods
pop
jl
mov
xchg
dec
mov
shrb
and
cmc
stos
push
pop
repz
dec
pop
ds
aad
shll
cld
pop
imull
cld
testb
push
test
push
xchg
mulb
mov
sub
imul
jmp
push
dec
dec
sub
insb
cmc
push
push
aam
rol
xorb
xcrypt-ecb
cmpsl
int3
insl
and
popf
out
ljmp
sub
add
sti
mov
iret
pop
jno
fidivl
lret
lahf
aad
in
cmp
mov
jo
sahf
movb
insb
dec
popf
fwait
ja
test
ja
ja
repnz
mov
test
sub
jmp
shlb
xchg
cmp
pop
rcr
xchg
test
inc
dec
cmovb
push
mov
pop
add
insb
mul
push
adc
inc
inc
ds
xor
fisubs
pop
cs
pop
push
ret
cmp
aaa
fwait
pushf
dec
adc
pop
arpl
push
mov
mov
jge
push
scas
push
and
lea
ljmp
xor
sahf
nop
and
dec
scas
repnz
cmc
cmp
cmp
mov
jne
test
in
lea
mov
adc
dec
mov
or
outsl
lcall
dec
pop
loope
cmc
movsl
mov
sbb
cwtl
fisubs
cmp
xchg
inc
aaa
xchg
mov
aas
popw
sbb
push
addr16
xchg
out
icebp
xchg
sub
push
xor
mov
mov
push
jl
push
scas
int3
cmc
imul
popa
xor
inc
mov
adc
adc
sub
outsb
sbb
mov
fldenv
in
dec
fidivl
push
mov
inc
and
mov
in
mov
jns
mov
ret
stos
xorl
insl
rorb
addr16
fwait
leave
call
ja
nop
xor
mov
mov
and
mov
adc
add
notb
test
push
jmp
stos
mov
call
push
mov
jb
outsb
pushf
test
or
and
popa
mov
sbb
jg
cli
cwtl
xorb
mov
mov
or
cmp
mov
inc
dec
icebp
std
mov
pop
cmpsl
orb
cmp
mov
into
fstl
adc
pop
pop
xor
push
mov
pop
aaa
pusha
data16
push
nop
or
sub
jb
adc
les
icebp
lcall
shl
mov
hlt
jno
pusha
cmp
clc
es
mov
mov
sbb
push
or
add
and
sbb
adc
hlt
add
dec
push
loope
out
mov
sbb
data16
test
pop
out
mov
cmpsl
aad
or
bound
push
loop
loop
push
in
jl
lret
jbe
lods
push
daa
pop
js
adc
xchg
inc
stos
hlt
mov
sahf
adc
movsl
out
bound
repnz
jge
xor
xchg
cmp
test
pop
adc
mov
push
push
xchg
jae
iret
add
test
pop
push
lahf
out
mov
out
jge
sbb
adc
xchg
sub
lds
cmpl
addr16
in
daa
pusha
int3
push
or
push
sub
test
adc
lods
mov
sahf
out
or
mov
ret
outsl
jnp
aas
pop
dec
ljmp
adc
dec
icebp
cmpsl
or
adc
pop
cmp
std
in
sub
insb
fistl
clc
pop
int
outsl
xor
xchg
jge
mov
jae
adc
jb
push
lock
xchg
cmpsl
in
outsb
add
in
jb
enter
sbb
pop
lea
fldenv
into
out
incb
push
cltd
pop
push
mov
cwtl
push
xlat
inc
sbb
sub
insl
sub
lods
popa
hlt
std
xchg
add
dec
sub
xchg
lcall
inc
or
in
push
ljmp
sarb
pusha
cmpsb
aas
fistl
mov
les
test
mov
or
popa
insb
pop
lock
inc
adc
push
jmp
in
call
jle
out
dec
in
cli
dec
pop
dec
cltd
mov
jecxz
jle
lret
sbb
or
daa
test
imul
add
dec
jecxz
xor
xchg
loopne
stc
in
lea
and
sbb
lock
sub
inc
pop
xor
push
sub
sti
das
imul
cmp
pop
lret
out
xlat
pop
mov
pop
lock
push
dec
in
sub
stc
jae
adc
int
ret
sub
sbb
jp
pop
daa
popa
popfw
fildll
dec
stos
pop
mov
jecxz
push
ror
or
mov
dec
and
std
cmp
add
int3
sub
and
push
fbld
mov
popf
arpl
mov
mov
cmp
xchg
pcmpgtd
imul
mov
xor
nopl
das
lret
lods
pop
je
hlt
out
adc
adc
xlat
pop
leave
pop
xchg
add
cmpsb
aas
outsb
rorb
orl
test
cltd
test
jbe
lret
xor
jle
mov
lds
jp
outsb
cltd
sbb
in
inc
mov
adc
in
xor
pop
stos
aaa
arpl
xor
and
and
ljmp
push
sub
jns
xor
xorb
inc
cwtl
push
lahf
lcall
push
rcrb
add
ror
pusha
add
fidivrs
into
inc
imul
lret
and
pop
icebp
jmp
mov
int3
mov
jp
xchg
adc
repnz
lret
popa
addb
test
dec
and
lds
pop
imul
scas
xor
outsl
sbb
fstpl
jecxz
into
pop
jp
lret
or
xor
aad
cmc
jne
sbb
mov
sub
insl
dec
adc
in
lret
ja
adc
pop
scas
inc
xor
out
dec
movsl
orb
cs
push
jnp
movups
inc
ljmp
test
pop
iret
shr
adcl
test
mov
or
inc
dec
fcoms
or
fdivl
xchg
xchg
or
insl
jp,pt
shrb
sub
xchg
sbbb
cmp
icebp
scas
mov
and
push
xchg
sub
push
push
stos
sub
std
mov
add
jl
adc
pop
mov
cwtl
dec
mov
inc
fstl
das
jnp
xor
outsl
sarb
mov
sbbl
xchg
xor
xchg
dec
fnstenv
and
jae
pushl
sbb
dec
mov
aas
push
jnp
shrl
loopne
pusha
jns
outsb
shlb
sub
cmp
cmp
adcb
lret
jmp
dec
jmp
push
fdivl
icebp
stos
push
mov
pop
sub
call
cli
fs
loopne
mov
mov
dec
iret
sub
aam
mov
cs
addl
arpl
cmp
daa
lock
push
xchg
bound
mov
cwtl
pop
jmp
pop
scas
pop
cmp
sahf
dec
test
mov
mov
test
test
jns,pn
sbbb
bound
xor
xlat
mov
sub
dec
das
mov
roll
sub
inc
cmpb
or
out
shlb
add
imul
and
mov
fldl
mov
pop
jle
lea
dec
dec
mov
mov
js
lea
in
subb
std
push
aas
sub
adc
scas
imul
xchg
push
clc
mov
ja
jae
mov
outsl
mov
repz
mov
xchg
dec
test
fldcw
dec
inc
add
xchg
sbbb
dec
and
sub
xchg
inc
inc
mov
mov
jo
cmp
movsb
mov
jae
sahf
mulb
fldenv
jnp
outsl
sub
mov
in
push
and
jg
xchg
push
imul
ds
push
push
push
sbb
outsl
add
arpl
in
xor
pop
iret
pop
or
ljmp
rcl
push
es
movsb
inc
cs
pushf
or
sub
sub
mov
fwait
adc
sbb
push
xchg
sub
mov
push
cs
test
cmp
sti
adc
cmp
sub
push
mov
xor
push
add
dec
fildl
loop
jno
ds
add
in
popa
sbb
dec
iret
stos
adc
jno
xchg
test
or
lock
xchg
mov
jecxz
scas
mov
ss
rorl
pop
cmpsl
cmpsl
rcrb
jns
inc
or
xorb
stos
pusha
ljmp
js
shlb
dec
dec
sbb
or
xlat
cmp
clc
movsb
leave
cmp
xlat
jne
les
sbbl
cmp
cmp
in
stos
xchg
pop
lahf
mov
shrb
scas
arpl
hlt
scas
repnz
lret
pushf
loope
or
leave
xor
push
mov
repnz
jecxz
outsb
xchg
shrl
push
lret
repz
sub
mov
mov
int
lds
cmc
lahf
movsb
mov
lret
inc
cmc
push
add
mov
or
ret
sbb
xchg
scas
add
rolb
shll
cmp
addr16
or
pushf
and
add
popa
je
and
jno
addr16
cmp
mov
ja
or
lcall
and
cmp
imul
xchg
ret
shlb
aas
js
cmp
and
push
or
pop
aad
inc
test
fs
lahf
and
enter
sbb
or
rol
mov
jmp
pop
mov
mov
mov
xchg
adc
lcall
cmpsb
jns
inc
jp
lea
inc
pop
and
jmp
decb
pop
insl
xor
sub
mov
pop
out
jl
sbb
imul
or
xchg
lahf
mov
ds
test
cmp
mov
push
adc
mov
push
push
mov
cli
cmp
aas
or
mulb
cli
nop
pop
andb
push
cmpsl
mov
lea
das
dec
push
jmp
xchg
lea
repz
adc
out
dec
arpl
subb
cmc
out
test
mov
mov
lcall
inc
sub
es
lret
inc
xchg
mull
lret
sti
shll
or
int3
popf
std
ljmp
adc
lret
mov
or
mov
jp
cvtps2pi
movsl
rcrb
dec
pop
je
sbb
outsb
sub
mov
push
pop
in
gs
lret
inc
js
pop
in
fwait
or
cmp
test
adc
loop
adc
fwait
out
inc
mov
lret
test
sub
loop
inc
sbb
loope
add
loopw
sub
inc
les
lock
pop
xchg
mov
cmc
in
jg
pop
and
fimuls
sub
xchg
clc
test
fistps
jo
jno
jbe
test
mov
xchg
popf
daa
jmp
sub
iret
mov
movsb
je
push
dec
push
ret
insl
lahf
outsl
divb
cld
pop
ret
inc
push
into
cmpsb
scas
in
lods
add
mov
fs
cmp
cmp
cmp
pop
push
and
scas
cmpsb
mov
enter
push
test
mov
aaa
fwait
test
sti
push
push
xchg
notl
fyl2xp1
add
add
in
push
imul
sub
ja,pn
dec
lods
pop
data16
push
std
fucomp
jns
sti
ds
ds
subb
movl
mov
fsubrs
cwtl
inc
cmp
test
stos
ret
rclb
fwait
or
and
pop
mov
mov
cmp
dec
xchg
jbe
or
xchg
mov
and
and
mov
and
imul
adc
enter
pop
push
jl
jle
movsl
lods
cmp
add
es
add
repz
idivl
mov
xchg
mov
inc
xchg
movsl
testb
add
out
bound
cmpsb
pop
ds
daa
cli
xchg
out
es
bnd
cmpsb
clc
jnp
in
std
cltd
xchg
fstpl
insl
cmc
imul
shrb
in
cmp
pop
xor
lret
dec
sub
add
sub
popa
and
xchg
lds
cmpsb
xor
out
push
cs
shlb
mov
mov
mov
mov
jae
test
mov
rcll
adc
xor
rcrl
das
jmp
and
sbb
arpl
add
jne
in
or
cmpsl
call
mov
std
sti
push
adc
ds
inc
arpl
push
push
xchg
or
xor
out
movsl
adc
int
inc
sbb
iret
push
inc
push
push
mov
lahf
mov
and
lea
jp
lcall
iret
push
xchg
dec
sbbb
fdivp
cmp
pop
mov
mov
push
mov
inc
in
xchg
shrl
mov
dec
lea
fstpt
rol
sahf
cwtl
adc
adc
shlb
leave
imul
lock
push
pusha
inc
mov
arpl
pop
repz
xchg
mov
cmpsl
cmpsb
jge
insl
cmp
xor
or
jbe
xor
xor
cmpsl
in
jg
adc
push
mov
repnz
mov
popa
pop
sub
push
cli
sbb
imul
jg
std
js
xor
cltd
mov
out
dec
jb
or
int3
xor
std
adc
mov
fs
xor
or
ja
or
aad
ja
aaa
lea
mov
push
xchg
jle
and
or
outsb
push
mov
and
push
cli
pop
aas
out
inc
notl
dec
pushf
xor
xchg
sbb
out
fsts
xor
test
test
xlat
stc
mov
sbb
repnz
pop
and
andl
xchg
fsub
mov
fs
ss
out
shll
push
enter
inc
sarb
fstpt
inc
add
add
fwait
pop
push
adc
mov
mov
xchg
nop
xchg
xchg
repz
inc
test
xor
sbb
cmc
or
and
les
jmp
mov
and
xor
push
jno
mov
pusha
insl
mov
push
mov
fisubrl
scas
stos
jge
lods
frstor
mov
lods
iret
lret
out
add
std
mov
enter
sub
mov
adc
sahf
inc
push
insl
lods
jp
clc
cmp
mov
adc
mov
sbb
adc
jb
and
adc
dec
imul
inc
pop
push
repz
ss
lods
jl
or
push
cli
andb
add
sub
fsubl
popl
sub
das
push
fwait
dec
enter
fxtract
lcall
add
or
cli
jl
insl
das
shrl
aaa
popf
push
cli
dec
sar
js
push
lods
xor
je
mov
leave
cmp
cld
xchg
mov
add
xchg
lods
fldcw
arpl
iret
les
inc
jbe
daa
xchg
lds
mov
scas
fdivrl
out
and
fs
and
mov
and
jecxz
pushl
jnp
mov
loope
aaa
shrb
andl
lret
add
jmp
jae
fcoms
mov
lock
out
inc
push
jne
dec
js
mov
jne
xor
and
add
outsl
fxch
add
mov
imul
sahf
sbb
in
mov
or
imul
lods
cltd
sub
fbld
xchg
xchg
movl
cmp
fnstenv
cmpsl
dec
loop
or
icebp
xor
sub
repnz
mov
or
inc
mov
fnsave
data16
pusha
fwait
stc
inc
jg
rclb
cmpsb
sub
push
fnstsw
jge
ljmp
cmp
sub
and
xchg
xlat
xchg
sbbb
bound
sar
jmp
fnstsw
push
pop
jg
xchg
dec
inc
clc
dec
jmp
sub
dec
outsb
push
dec
jae
mov
or
mov
out
jecxz
sahf
sti
or
pusha
dec
fs
sub
loop
add
or
xchg
inc
lcall
mov
mov
movsl
xchg
stos
insl
adc
lods
leave
xchg
test
fstl
sub
sbb
and
add
and
aad
xchg
push
ljmp
dec
add
decl
lea
mov
dec
dec
or
rclb
int3
ficoml
mov
inc
inc
xchg
jecxz
push
popa
lea
aaa
add
cmovo
test
mov
arpl
ret
push
xchg
mov
in
sbb
mov
sarb
and
xlat
jl
outsb
push
imul
into
out
lea
addr16
jge
mov
dec
push
push
push
cld
sbb
and
test
ret
in
outsl
inc
push
xlat
movsb
jae
mov
add
popa
movsl
jl
cltd
or
andb
sub
push
cmpsl
inc
popf
dec
push
lea
dec
inc
inc
adc
mov
mov
insl
ljmp
rcl
cld
sarb
or
cld
and
inc
jle
call
xchg
loopne
out
repnz
lods
popf
cmp
repz
loopne
pop
shrl
jno
pusha
fs
je
cvtpi2ps
push
jge
jae
stos
adc
sub
inc
sbb
std
int3
mov
dec
lock
inc
xchg
mov
lret
or
scas
and
mov
mov
mov
mov
popa
pop
ds
popf
mov
push
das
cmpsl
and
cmp
ljmp
jg
mov
cmp
imul
lahf
mov
loop
push
mov
sbb
cli
mov
fstpt
push
add
daa
movsl
je
mov
cli
adc
fmulp
out
fdivs
test
push
jns
jns
mov
lea
mov
test
gs
mov
pop
pop
dec
jecxz
aas
sbb
mov
mov
and
stos
adc
inc
jae
push
mov
loop
iret
xor
lret
mov
and
fwait
sbb
dec
or
call
jg
sbb
repnz
xlat
clc
adc
imul
add
inc
adc
sbb
popa
mov
pop
ret
popf
jl
popa
mov
leave
jmp
leave
inc
mov
xchg
shrl
movsw
xor
inc
mov
repz
dec
push
ret
mov
mov
adc
lahf
xor
xor
loopne
sbb
xor
cmp
movsl
test
stos
add
add
negl
cmc
stos
pop
pop
dec
inc
push
jl
sbb
jnp
shl
cmpsb
out
aaa
adc
or
jle
gs
or
call
jecxz
arpl
dec
scas
jbe
movsl
scas
sub
aas
push
add
into
add
xor
inc
xor
pop
ss
xchg
les
lock
push
in
jnp
or
dec
inc
cmp
mov
mov
or
xchg
mov
xorb
or
insl
int3
mov
pop
orb
inc
push
in
mov
orb
ret
dec
out
sbb
jno
mov
dec
aad
inc
outsl
push
and
and
jo
enter
add
xchg
movsl
push
pop
lods
cmp
add
popf
jne
fs
out
faddl
jecxz
pop
mov
rcr
call
fsubl
inc
shlb
add
and
test
xlat
jmp
dec
or
movsb
add
insb
cwtl
fnstcw
into
mov
mov
cld
jae
mov
xchg
pop
aam
sbb
mov
out
shll
cli
fdiv
mov
push
xchg
loopne
mov
and
inc
adc
cmpb
cmc
adc
pop
pop
inc
rorb
out
int3
jnp
jecxz
out
xchg
mov
enter
fisubs
pop
inc
inc
xchg
mov
jb
dec
stos
inc
lret
mov
stos
ja
adc
xor
daa
lock
lret
push
out
fs
fnstsw
cmpsb
ljmp
mov
and
inc
push
in
jnp
cwtl
pop
xor
mov
xor
andl
pop
sbb
insl
testb
clc
insl
push
dec
mov
cmp
arpl
inc
gs
adc
jae
repz
mov
mov
test
cmpsl
out
dec
mov
xchg
in
sub
cltd
dec
jo
sbb
adc
inc
jge
out
xchg
loop
jmp
insl
rcrl
jg
add
aad
pop
push
add
cmpl
std
loope
jne
pop
lods
sub
xchg
push
in
je
js
ljmp
iret
outsb
stc
fisubs
xlat
bnd
xorl
dec
or
rcl
gs
addb
ljmp
jmp
movsl
and
rcrl
test
jno
mov
add
dec
fwait
xchg
leave
movsl
mov
add
fmull
in
mov
mov
xchg
adc
sti
repz
test
cld
push
mov
testb
iret
push
aas
pop
rorb
jbe
push
out
add
ret
mov
aad
xor
fiaddl
fcoms
cmpb
xchg
push
cltd
aaa
add
ljmp
jae
lea
mov
fsubrp
ljmp
lods
imul
enter
imulb
lahf
jge
fwait
movsb
sub
sahf
aam
or
mov
or
je
out
jnp
shr
push
outsl
pop
lret
mov
inc
xchg
cmpsb
and
xor
movsl
ja
pop
rorb
inc
pop
imul
loop
push
mov
pop
mov
aaa
or
mov
mov
sub
mov
cmpsb
jmp
pushf
das
mov
cmp
data16
add
sbb
mov
sbb
push
pop
ja
ret
xchg
pop
pop
popa
outsl
jne
stos
jle
lret
mov
je
jae
xor
dec
xor
xor
in
test
push
sub
jbe
xor
into
add
adc
in
in
push
cmp
xor
or
pop
lods
sub
mov
das
enter
ret
loopne
sahf
ficoml
sub
pop
insl
cmp
scas
push
sub
jbe
or
out
and
mov
les
cltd
mov
in
ljmp
sbb
pop
movsb
mov
call
cmp
scas
test
add
aas
out
subb
mov
lahf
xorb
xchg
das
lods
dec
push
jl
sbb
pop
add
outsb
in
adc
rcrl
in
pusha
popf
loop
jae
into
shrl
push
and
cltd
test
int3
out
push
push
pop
iret
pop
mov
mov
pop
loope
push
mov
cmp
scas
out
addb
lcall
clc
mov
lret
aad
test
adc
sarb
stos
push
xor
pop
cmp
clc
arpl
insb
cld
in
fsubrs
push
add
or
pop
inc
loopne
jecxz
xchg
xor
scas
rcrb
lret
rorb
jmp
dec
add
add
fdivr
jno
test
jp
fdivr
fcmovb
adc
aaa
out
in
pop
push
mov
push
mov
insl
shl
and
mov
addr16
dec
pop
into
es
sbb
out
inc
mov
add
pop
jnp
cmpsb
lcall
lods
push
xchg
jbe
dec
jmp
inc
sub
xchg
xor
in
in
testb
inc
neg
nop
aam
lret
sub
cld
inc
pop
inc
jne
leave
pop
clc
es
mov
imul
or
mov
lret
out
lock
xor
and
and
push
cmp
push
rcll
pop
leave
out
insl
jl
jns
out
mov
adc
lcall
cmp
cli
pop
in
push
outsb
mov
and
sub
or
fisttps
aad
cmc
cmc
out
sub
add
jp
cmp
roll
inc
daa
xor
xchg
push
adc
dec
or
xorb
icebp
icebp
or
add
sub
rdtsc
hlt
mov
xchg
fcmovnb
xor
das
xchg
dec
sbb
mull
mov
ljmp
dec
push
adc
mov
cmp
sub
xor
mov
xchg
lcall
sti
lock
movsl
std
pop
adc
mov
insl
and
insb
jne
mov
mov
rcrb
pop
mov
jmp
movsb
gs
lds
mov
mov
movsl
xor
lds
fists
dec
pop
sbb
xchg
sbb
stc
ja
or
scas
dec
mov
sbb
xchg
rcrl
pop
js
or
and
dec
sub
rol
mov
dec
ficoml
xor
loop
dec
shlb
das
jle
das
aaa
ret
ret
xchg
push
and
lods
dec
frstor
call
pop
out
adc
es
insl
xor
jg
inc
pop
stc
jle
sub
dec
jp
pop
sbb
xchg
fsubrs
stos
int
aaa
outsl
nop
imul
sub
leave
jmp
dec
mov
mov
popf
data16
mov
test
mov
xor
imul
sub
dec
pop
ds
cmpxchg8b
pop
mov
or
insl
dec
or
cmp
xor
adc
insl
xchg
sub
in
push
jnp
test
xlat
ljmp
stos
mulb
out
or
or
add
cli
pinsrw
add
mov
pop
sbb
mov
add
jl
sub
mov
andl
mov
mov
add
and
aam
lcall
cmc
xchg
jge
aaa
push
pushf
mov
pop
ljmp
inc
lahf
cld
jmp
xchg
xor
push
cmpsb
fistpl
mov
mov
pop
push
rcrb
and
mov
insb
sbb
pop
fstl
mov
fcomps
and
inc
xchg
adc
fwait
movsl
scas
kxorw
popf
dec
xchg
icebp
mov
mov
mov
dec
mov
xchg
movsb
fadds
xlat
dec
sbb
jl
mov
pop
jmp
stos
fdivrl
pop
mov
mov
dec
jmp
subb
out
rorb
inc
add
xchg
jg
roll
adc
js
cmp
movsl
xor
ds
xchg
or
add
std
movsb
shl
hlt
cld
test
mov
mov
gs
mov
scas
js
ss
fldl
imul
sbb
mov
lods
dec
gs
aas
out
push
pop
mov
enter
xchg
call
aaa
sbb
mov
sbb
jge
lcall
sub
nop
cmc
hlt
jl
ja
fwait
sbb
sar
lret
je
lea
imul
xor
ds
mov
or
in
call
ds
mov
lea
pop
insl
dec
mov
jg
mov
out
sbb
dec
jmp
mov
add
push
lods
daa
popa
lods
js
lods
sti
test
rcr
fbstp
mov
mov
push
rcll
pop
out
outsl
add
call
stos
aam
adc
inc
shrb
das
loopne
dec
mov
es
sbb
stos
push
insb
sbb
lds
cmp
frstor
add
adc
addr16
mov
rolb
in
sub
mov
jp
sub
push
out
and
xchg
cli
push
mov
cmp
addr16
push
aad
pusha
adc
jg
sub
aam
shlb
fbld
mov
imul
fisttps
xchg
jae
sbb
rcr
aam
pop
ffreep
lock
mov
and
mov
repz
repnz
test
sahf
push
pop
push
add
cld
or
dec
push
out
dec
mov
ljmp
shll
and
mov
pop
lret
adc
shll
push
sbb
lret
jae
dec
mov
push
movsl
mov
jge
pushf
fists
add
add
loope
xor
fwait
jecxz
inc
mov
push
loope
pop
icebp
cmpsb
icebp
in
add
push
pop
add
sahf
mov
cmp
jno
mov
jle
cmpsl
mov
jbe
aad
icebp
cmp
or
movsl
daa
stc
dec
xchg
xchg
mov
arpl
sbb
imul
push
push
mov
cmpl
xchg
js
sbb
push
jge
test
aad
and
push
es
push
in
test
mov
sti
insl
mov
cmpsb
add
cmpsl
mov
push
cmpsb
jg
popa
push
push
xor
mov
popa
xchg
lock
mov
fdivs
dec
dec
test
sub
sub
xchg
fucomp
mov
fcmovne
jle
jnp
outsb
cld
sub
lea
add
pusha
xchg
pusha
push
andl
xor
mov
mov
repnz
add
lds
daa
int
cltd
xchg
lret
cmpsb
sub
or
add
negl
repnz
mov
or
andl
scas
sub
push
test
push
mov
lret
or
movsb
ljmp
int3
mov
repnz
add
les
push
popa
nop
faddl
lock
mov
pop
jno
mov
mov
push
mov
sti
cmpsb
in
lock
je
push
cmp
leave
notl
lods
in
jbe
xor
sbb
mov
mov
jae
iret
dec
imul
add
push
xchg
cmp
cmp
repz
or
insl
hlt
ss
stos
push
cmp
mov
mov
jg
sub
cmp
cmpb
pop
test
add
jnp
scas
pop
flds
das
lds
lea
es
and
cs
sub
mov
aas
call
and
js,pn
xor
inc
jne
daa
aas
push
incl
stc
aad
lods
out
ja
push
aas
jnp
xchg
xor
dec
cwtl
pusha
mov
xor
xchg
jo
popf
movsb
jns
xchg
fs
xor
cld
ds
xlat
cmpsl
jg
imul
mov
out
mov
pop
cmp
cmp
add
jae
xchg
dec
mov
add
lcall
cmp
movsl
dec
stos
cmp
sub
rorl
pushw
push
lcall
fstp
pop
lods
mov
out
into
pop
popf
jae
es
ja
daa
sub
or
in
push
bound
ret
repnz
add
push
mov
daa
pop
mov
fistps
jecxz
into
out
mov
mov
and
gs
mov
pusha
push
ljmp
mov
jmp
out
mov
sbb
test
in
addr16
aam
cmpsl
shlb
fdivrs
out
popf
outsl
aam
sti
in
ss
lds
lret
or
test
sarb
outsl
dec
push
fsubl
pop
cwtl
imull
or
pop
test
loop
mov
jne
xor
sbb
add
fstps
call
rclb
lea
fs
dec
mov
pop
cmp
fwait
add
rorb
mov
stc
int3
adc
sub
lret
push
sbb
bound
adc
mov
jle
push
lea
ret
lds
sub
popa
mov
lea
pushf
addl
xchg
inc
jo
out
jb
push
dec
fsubrl
sub
setno
lods
ret
xor
mov
shrl
push
lahf
test
stos
sarb
mov
dec
adcl
not
dec
enter
fwait
pop
xorl
popf
insl
sub
sbb
into
xchg
cwtl
push
or
aam
notl
je
push
mulb
js
fnstcw
add
or
gs
subl
dec
adc
fwait
dec
cmpsl
ss
leave
aam
jb
mov
jl
mov
adcb
adc
add
xor
repz
or
std
xlat
loopne
stos
pop
pop
neg
popf
xchg
xchg
ret
mov
movsl
clc
pop
adc
into
jl
pop
sbb
ljmp
lock
xor
mov
or
rcll
rcl
push
mov
mov
sar
xor
or
mov
mov
xchg
add
jae
push
or
movsl
or
loop
loope
mov
xor
xor
dec
popa
lahf
sub
int
sbb
push
sbb
mov
cmpb
jns
xor
xchg
pop
rol
or
mov
mov
popf
and
jp
xlat
stos
in
dec
into
repz
and
lahf
pop
into
lods
sub
dec
insb
or
adc
rcl
dec
lds
and
sbb
mov
sub
imul
push
and
mov
fnsave
jne
xlat
dec
jae
adc
lret
dec
and
stos
jmp
sub
pop
cli
out
dec
in
xchg
mov
push
dec
roll
addr16
aad
sahf
insl
sbb
adc
xor
xor
xchg
mov
mov
test
add
cmp
mov
pop
jmp
sub
and
jno
or
mov
xchg
hlt
or
ficoml
jnp
imul
sarl
pop
pop
sar
mov
jg
mov
push
enter
mov
popa
xchg
cmp
push
add
adc
lock
repz
or
push
lea
in
test
push
xchg
aad
fnstsw
dec
mov
xchg
rcll
popa
js
scas
xchg
sarl
fs
xor
in
scas
jl
call
xchg
push
mov
inc
add
pop
xor
mov
xor
xchg
sub
std
adc
sub
cmp
jns
std
jg
dec
pop
cmp
inc
sub
jo
mov
aaa
popf
xlat
aad
xchg
outsl
jmp
jns
jl
fisttps
es
test
dec
pop
ficoms
shll
es
loope
jne
mov
loope
dec
or
add
jo
mov
aas
outsl
arpl
add
enter
dec
bound
and
jnp
popa
mov
mov
fldcw
sub
jo
sub
ss
sub
mov
dec
lods
mov
std
in
xor
push
ficompl
shl
ret
xchg
stos
mov
js
sub
mov
xor
jo
mull
loop
mov
mov
ja
pushf
jle
das
or
xor
cmc
outsb
cmp
xchg
fucomip
dec
lds
push
and
ret
call
xor
stc
leave
addr16
leave
jp
repz
mov
inc
mov
add
es
adc
push
xchg
lds
jle
std
arpl
mov
inc
pop
dec
jne
dec
adc
das
ljmp
mov
insl
out
mov
add
inc
clc
into
in
test
nop
in
mov
mov
shlb
iret
jne
jp
cmp
lahf
into
rcll
outsl
ss
sub
js
iret
mov
xchg
in
pop
lret
rorb
nop
ds
pusha
addr16
add
and
cltd
call
inc
sub
sub
dec
loop
mov
sbb
jp
sub
add
sub
cmpsl
xchg
sbb
ja
xor
test
enter
jmp
pop
sti
inc
stc
and
cmp
sub
pop
sub
arpl
jle
stos
movsb
jl
mov
inc
xchg
add
add
dec
sti
mov
cltd
or
xchg
popf
andl
mov
push
aam
mulb
data16
or
sbb
mov
sbb
cmpsb
xor
outsl
aas
lret
jle
mov
mov
jg
nop
jmp
inc
mov
in
pop
pop
sbb
jae
lahf
add
jb
shll
pop
js
das
in
int
sbb
jmp
inc
or
and
cwtl
decb
push
or
mov
in
mov
mov
dec
mov
mov
gs
sbbl
mov
push
jae
xor
psrlw
mov
pop
call
and
pop
mov
mov
test
and
insl
mov
sbb
mov
mov
jmp
push
pop
xor
cmp
and
repnz
mov
mov
lds
jg
or
vmptrld
adc
cwtl
sbb
mov
mov
in
jae
mov
call
pop
add
sbb
icebp
jno
aaa
clc
clc
notl
xchg
jl
sti
lods
sub
sub
or
ss
pop
jl
dec
stos
gs
daa
test
mov
adc
or
fimull
inc
jns
xor
add
dec
mov
mov
cmp
mov
decb
in
mov
sub
pop
add
sub
pop
jmp
pop
and
int3
aas
js
lret
lods
aas
outsb
jg
mov
jp
pop
inc
loope
mov
stc
add
inc
clc
ficomps
rorl
test
jmp
rol
or
sbb
jb
lock
cmp
mov
outsb
insb
aam
xor
outsb
shrl
out
out
in
repnz
adc
inc
addl
lods
test
mov
mov
pushf
imul
mov
nop
mov
push
add
daa
mov
jb
jmp
jo
pop
inc
loopne
and
lret
xor
outsb
push
add
pop
rorl
and
xor
or
pop
int3
mov
adc
fnstsw
mov
popf
sub
cmp
lds
sub
pop
xor
mov
pop
aaa
mov
lods
icebp
pop
jns
mov
jg
push
out
cmp
rcrb
pop
and
insb
cmp
jns
jne
stc
mov
mov
test
dec
in
xor
xchg
xchg
enter
dec
icebp
bound
mov
addl
push
scas
xor
rorb
pop
cmpsl
mov
add
pop
dec
pop
outsb
out
mov
mov
or
xor
jne
aam
imul
push
inc
les
loop
xchg
int
mov
push
addr16
adc
adc
mov
xchg
and
xchg
gs
sub
ljmp
dec
push
mov
mov
pop
rcrb
mov
arpl
das
shrl
pop
fdivr
push
ret
cltd
mov
xor
or
dec
xor
out
xchg
mov
out
les
mov
xchg
cmpl
jbe
pushf
inc
adc
pusha
insb
mov
int3
pusha
mov
pop
testl
mov
les
stos
movsb
cwtl
andl
out
fcomps
xacquire
ss
pmulhw
xor
aas
dec
dec
push
mov
sahf
scas
mov
rclb
lea
lods
and
daa
mov
lea
inc
lahf
mov
int
push
leave
xor
lret
sub
jmp
pop
mov
mov
pop
or
lods
es
out
jb
push
inc
je
mov
inc
ljmp
cld
pop
out
mov
jl
aam
fcoms
pop
xor
ret
dec
enter
mov
xchg
or
ret
fwait
push
jmpw
fimull
jnp
add
pop
stc
ds
inc
movb
mov
inc
push
cmp
imul
call
sahf
outsl
fwait
or
add
fisubl
clc
and
fisttps
xchg
std
fs
xchg
addr16
scas
sub
jnp
pop
and
add
push
or
pop
or
frstor
aaa
ret
or
stos
mov
testl
or
shll
lahf
imul
mov
je
in
mov
mov
pusha
fadds
sub
push
inc
sub
inc
pop
add
pop
and
sbb
fistl
stos
or
mov
jo
push
pop
or
sti
push
inc
cmc
insb
add
sbb
jns
mov
pop
cmp
add
stos
ret
xor
or
sarl
xchg
into
adc
dec
lods
mov
push
or
mov
xor
and
lcall
repz
ds
cmp
adc
std
lods
xchg
xchg
pusha
inc
or
stos
xchg
sub
xor
iret
mov
pop
fs
cli
loop
jge
pop
sbbb
std
and
dec
or
enter
inc
data16
loopne
mov
pop
out
xor
mov
mov
inc
loope
test
ja
mov
dec
cmp
shr
jl
xchg
and
sbb
lods
int3
jp
dec
jbe
mov
adc
fwait
dec
mov
shl
incl
mov
lods
std
stc
fiaddl
pop
pop
test
and
jg
dec
or
sbb
fstl
fisubrs
sbb
mov
inc
jle
popf
xlat
js
rolb
jp
sub
pushf
lcall
ficoml
mov
clc
xlat
xchg
pop
popl
mov
jne
int
dec
sub
stos
stos
pusha
sub
cltd
fstps
mov
mov
mov
mov
inc
bound
cmp
and
test
pop
mov
add
ja
aaa
push
mov
jmp
sub
std
ds
xor
scas
mov
leave
mov
jns
fisubs
jnp
xchg
fwait
pop
sub
jecxz
sbb
test
jp
dec
pop
rcrb
fucomi
sub
mov
lret
push
xchg
xchg
jge
sbb
cli
inc
xchg
icebp
or
aas
inc
sarl
js
add
pop
ret
add
adc
push
imul
mov
push
cmp
push
jmp
or
hlt
out
andb
or
xchg
or
mov
sbb
mov
aas
mov
rcl
inc
in
xchg
push
inc
jle
scas
xchg
mov
rol
mov
cmpsl
in
xor
cmp
lret
jns
push
jg
pop
jmp
mov
scas
insl
xchg
mov
xor
cmp
xor
jecxz
in
mov
sub
or
xchg
add
std
and
pop
and
scas
inc
xchg
roll
lret
dec
repnz
sarb
cltd
sub
cmp
push
pop
negl
sbb
adc
inc
mov
arpl
insl
cmpsb
into
daa
inc
xor
jecxz
loope
mov
decb
fucomip
cmp
inc
adc
cmp
aas
cmpsb
lret
add
daa
mov
dec
inc
popf
cs
iret
enter
pushf
icebp
pop
in
lods
mov
lret
shll
nop
jae
fucom
pushf
pushf
push
push
hlt
and
push
in
mov
lea
lds
push
jle
testb
adc
lds
rdtsc
mov
fcomps
iret
mov
sub
push
adc
mov
sub
std
adc
mov
push
js
and
sbb
sub
inc
leave
daa
mov
cmp
xlat
mov
ljmp
scas
inc
adc
cmp
pop
adc
fcoml
dec
mov
into
jg
test
mov
flds
hlt
mov
clc
pushl
lcall
fistps
popa
push
inc
inc
cmp
inc
out
fisttps
hlt
mov
dec
insb
int
push
mov
lods
mov
inc
push
mov
mov
mov
js
push
add
fisubrs
pop
jbe
mov
mov
push
jmp
pop
jbe
dec
filds
loopne
xchg
stc
lret
xchg
xchg
les
inc
mov
push
mov
jo
adc
and
stos
cmp
dec
sbb
mov
xor
lods
in
cmc
shlb
pop
or
push
icebp
xchg
inc
int
jne
or
movsl
mov
mov
dec
movsl
sub
imull
pop
and
outsl
les
lea
sub
mov
andl
pop
pop
daa
push
pushl
xor
inc
cmp
ret
jmp
cltd
shl
or
jns
cmpb
push
sbb
pushf
clc
add
paddsb
into
je
push
cs
cmpsb
jge
mov
in
mov
xchg
mov
mov
es
arpl
mov
inc
scas
call
jp
fwait
jb
lock
insl
dec
shll
xchg
orl
dec
sbb
and
mov
lods
jno
pop
rep
pop
fistps
or
and
into
insl
or
lret
stc
jo
add
xor
bound
pop
loope
hlt
mov
jl
andl
fwait
mov
pop
mov
xor
mov
add
pop
negb
mov
scas
cmpsl
inc
mov
cmp
ljmp
or
jb
cs
pushf
dec
notl
notl
cltd
bound
jg
int3
inc
pop
xchg
das
sbb
test
in
mov
jbe
add
std
iret
ret
jb
sbb
dec
xchg
push
pop
pop
sub
lret
sbb
sub
clc
fwait
lret
std
inc
xor
mov
pop
test
cs
xchg
add
fisubs
jg
jmp
loope
cmp
stc
in
adc
sbb
pop
ficompl
mov
lcall
jg
test
push
fwait
mov
xchg
xchg
inc
outsb
jbe
sahf
in
dec
ret
mov
mov
sub
leave
push
dec
ljmp
outsl
int
mov
mov
mov
sub
je
jns
jns
loopne
mov
xorl
int
lock
aam
repnz
pop
push
cmp
data16
dec
pop
mov
lock
xor
or
add
in
test
mov
pop
or
cmp
addr16
and
ret
movsl
mov
repnz
jg
xchg
sub
ficompl
fsubl
mov
sti
mov
inc
in
mov
ret
ja
sub
pop
cltd
or
dec
lret
ret
stc
mov
cwtl
lahf
pop
ljmp
cwtl
jne
outsl
inc
pop
sub
div
push
fs
int
jle
xor
adc
out
jb
pop
jl
ja
cs
inc
cld
add
stc
jbe
mov
lahf
jmp
mov
imul
jb
push
lret
add
lock
adc
aas
or
cmpsl
push
mov
ficompl
fistpll
shl
jmp
add
nop
xchg
faddl
mov
mov
ds
aaa
iret
mov
subb
out
xchg
dec
stos
sahf
data16
xchg
repz
jns
nop
or
and
mov
jnp
mov
int3
sbb
stc
jmp
adc
sahf
iret
and
scas
xchg
les
sahf
cmp
jbe
adc
jae
sub
aas
rorb
repnz
shrb
or
test
ss
or
cmp
cli
popa
das
or
mov
rorb
mov
f2xm1
push
lods
movsl
sub
mov
inc
repz
pusha
xchg
ljmp
mov
sbb
rcrl
fldenv
push
ja
pop
adc
xor
mov
pop
ja
ffreep
inc
adcb
ficompl
add
pop
dec
lock
push
and
and
sbb
or
stos
inc
dec
and
ds
ljmp
sar
outsb
mov
fnclex
syscall
or
aas
pop
outsb
mov
mov
lcall
imul
dec
daa
dec
sahf
mov
std
mov
data16
cmpsb
push
inc
mov
and
mov
inc
cmp
add
js
push
sahf
cld
sub
cld
or
mov
es
out
pop
shll
mov
test
lea
mov
xlat
fwait
lret
out
mov
push
cmp
jl
xchg
cmp
mov
ret
inc
add
sbb
mov
mov
test
sahf
in
mov
and
adc
inc
xchg
dec
jns
cmp
cmc
inc
xorl
inc
lea
aaa
int3
sub
cmpsl
fxch
jnp
rorl
ror
into
xor
inc
mov
popf
clc
je
sar
sbb
sbb
fdiv
add
add
sarl
fidivs
pop
movsb
stos
mov
sarl
xchg
test
bound
fs
fistl
cmpsb
test
insb
and
inc
negb
or
pop
inc
fs
push
in
mov
sub
mov
repz
lods
mov
push
ss
sub
add
cmp
js
lds
xlat
push
repnz
sahf
sub
loope
inc
dec
inc
xchg
or
dec
pusha
out
add
lock
and
sbb
cli
fmull
mov
add
dec
push
adc
shl
mov
mov
xchg
push
jne
mov
repz
shl
icebp
ret
cmpsl
dec
xchg
mov
movsb
pop
add
sbb
ds
cmpsb
sbb
ljmp
xchg
negb
int
or
out
push
mov
and
jns
int3
xchg
clc
scas
pusha
mull
xchg
out
xor
fcmovnb
sbb
cmp
cwtl
xchg
ds
cmpsl
sub
jne
stc
jno
or
sbb
cli
mov
addr16
test
fs
push
or
imul
mov
cwtl
jecxz
add
sub
push
sbb
mov
or
or
das
xor
shlb
fwait
clc
das
subb
rcrl
insb
int3
xlat
push
out
cld
repnz
mov
jbe
mov
and
mov
data16
dec
sub
jge
int
mov
in
pop
out
or
add
mov
jge
jecxz
push
mov
push
inc
fcmovb
int3
ffreep
cmp
adc
in
cmpsl
adc
mov
outsl
dec
adc
sub
lods
jle
vmread
inc
xchg
dec
sbb
adc
pop
popf
arpl
test
xor
dec
lahf
xchg
adc
jg
sahf
pop
fnstenv
sub
mov
vmovddup
sbb
add
out
add
adc
and
xchg
cltd
test
lss
out
or
mov
push
push
cltd
or
or
fadds
std
into
inc
push
into
xchg
pop
imul
push
mov
js
cmp
jl
fistpll
insb
xchg
cwtl
inc
loope
jmp
push
mov
xchg
adc
dec
stos
imul
andl
pop
dec
aas
int3
ja
jmp
gs
shrb
pop
xchg
cwtl
jbe
pop
inc
cmpsb
mov
std
and
nop
jns
mov
ja
stos
inc
loopne
or
gs
dec
xchg
adc
mov
in
imul
mov
xchg
xor
add
sbb
lret
jo
mull
fnstsw
mov
jle
mov
jno
addr16
lret
cmp
jg
push
or
inc
pop
pop
call
lcall
sbb
cmp
cmp
mov
stc
push
hlt
jmp
fcompl
cmp
xor
fists
call
add
scas
movsl
jmp
mov
cwtl
xchg
push
dec
xor
jno
add
data16
jne
cmp
jno
dec
rorl
sbb
xchg
lcall
adc
dec
adc
mov
subl
jge
into
out
xchg
mov
bound
inc
cmp
adc
repnz
pop
sub
in
cmpsb
add
test
fscale
negb
pop
sub
dec
cmpl
mov
sbb
cmpsl
repnz
dec
lret
dec
in
cs
dec
outsl
ficompl
xchg
xor
popa
pop
mov
fsubrl
sbb
mov
xchg
orl
es
sarl
mov
inc
cmc
mov
xchg
jb
adc
pop
jmp
aad
inc
pop
mov
sub
adc
mov
jg
fs
pop
cltd
cmp
iret
pop
lods
jno
push
sbb
inc
mov
lahf
push
call
aaa
shlb
dec
pop
push
jnp
dec
inc
int
pop
push
jl
push
std
push
setno
xlat
imul
cmp
fwait
ret
jecxz
cmpsl
int3
lcall
outsb
leave
es
jbe
mov
iret
movsb
jecxz
xchg
lea
add
mov
or
adc
ljmp
inc
js
jp
jmp
xor
push
fcoml
pop
adc
stos
std
mov
les
and
dec
jbe
adc
imul
jo
mov
leave
or
and
jns
mov
mov
sub
xchg
push
cmc
pop
lea
lret
lret
adc
jo
loope
decb
sub
mov
mov
nop
mov
push
lds
mov
sbb
lahf
lret
xchg
call
mov
mov
in
xor
imul
out
ret
add
inc
test
xchg
sbb
or
arpl
add
push
adc
adc
add
fwait
rcl
add
fsubrs
jge
cmp
adc
outsl
push
mov
and
movsb
into
push
fisubrl
cld
ja
cmp
stos
divb
mov
fistps
push
stc
aas
xchg
sbb
jnp
and
divb
rcr
cmp
insb
mul
scas
jb
iret
inc
iret
jae
insl
inc
sbb
xor
inc
negb
push
aas
jmp
mov
mov
mov
dec
xor
push
js
or
jle
cmpsb
jge
mov
cltd
adc
sti
js
lods
les
push
xor
mov
divb
cltd
out
pop
mov
rclb
mov
xorl
mov
lret
jle
pushf
add
int
aas
inc
sbbl
mov
stos
stos
mov
mov
sbb
dec
cmpsl
mov
pop
test
push
aaa
or
mov
icebp
lds
xor
xchg
mov
int3
fisubs
dec
cmc
inc
mov
prefetchw
or
jbe
popa
cmp
push
add
insl
insb
pop
adc
push
pop
cwtl
or
pop
and
sbbl
sub
lahf
xchg
mov
sub
push
adc
stc
xchg
mov
js
lahf
lods
aas
sbb
adc
cmp
sahf
or
pop
xlat
ret
push
andl
incl
cmpsl
mov
or
xlat
insl
movsl
rorb
jae
pop
add
sub
fcmovnb
repz
orl
sub
sarb
lret
in
shlb
leave
dec
or
add
iret
or
add
loope
adc
cmp
js
add
stc
stc
add
iret
loope
cmpsl
push
outsb
jp
test
rep
push
adc
ret
pop
mov
jg
add
jge
and
call
sub
ja
shr
jmp
lea
xorl
imul
sbbb
das
jl
inc
mov
pusha
flds
push
enter
push
inc
push
or
insl
mov
shr
cmp
cmp
pop
sahf
cmp
xorb
ret
in
into
imul
das
adc
lds
mov
popa
data16
dec
inc
sbb
mov
and
nop
or
mov
dec
clc
repz
loope
mov
xchg
insb
in
insb
adc
lods
jl
sub
in
xchg
inc
popa
roll
sub
cmp
test
lea
cmp
addr16
sbb
bound
and
lcall
cmpsl
mov
daa
sbb
mov
mov
jl
movsb
push
out
stos
jb
test
dec
inc
mov
rcl
fisubs
and
add
xchg
insb
repz
cmp
jg
dec
dec
add
sub
test
rolb
mov
cmp
push
test
cwtl
cwtl
std
cmpsl
xchg
mov
movsb
dec
ss
andb
push
in
ja
xchg
cmp
dec
mov
fs
js
sarl
xchg
inc
pushf
push
xor
mov
xchg
daa
pop
adcl
fwait
int3
pop
ret
jno
mov
inc
push
hlt
add
mov
mov
and
shll
xchg
xchg
mov
shl
jns
push
pop
in
jmp
mov
adc
rcrl
sbb
rclb
insb
sub
ret
ljmp
pushf
sbb
insb
pop
inc
je
test
rorb
aas
xchg
sbb
and
iret
pop
adc
and
cmp
and
lahf
aad
icebp
sub
dec
out
aad
ret
push
push
cmpsb
sub
sbb
jmp
adc
test
cmp
push
add
ficomps
loopne
lret
jne
xchg
outsl
ja
outsb
dec
ja
sbb
inc
hlt
sub
push
notb
xor
dec
cmc
xor
adc
int
ja
dec
mov
push
mov
sbb
mov
test
sar
xchg
shlb
loop
mov
loopne
sbb
ds
fucomip
sbb
scas
pop
mov
mov
pushf
shl
icebp
adc
lahf
add
sub
insb
jne
mov
call
pop
mov
les
push
xchg
mov
mov
arpl
jno
pop
lret
fidivs
xor
out
aam
fnsave
cmp
inc
mov
push
inc
jbe
into
fs
adc
mov
dec
out
ja
and
je
cld
jge
cmp
fdivl
push
int
lcall
fcom
mov
push
mov
ja
dec
xor
mov
outsl
lock
lock
and
inc
outsb
lds
es
sub
test
add
and
mov
lods
pop
cmp
bound
sahf
out
lock
aad
arpl
mov
shr
pop
and
leave
xor
stos
add
add
leave
pop
mov
jg
sub
mov
cmpsb
daa
lahf
aas
mov
fcoml
push
flds
pop
jecxz
sbb
jmp
aam
mov
jl
popf
cmc
sub
xor
jae
arpl
or
cmp
aam
mov
gs
mov
push
or
rcl
addr16
inc
push
cmc
push
jle
lock
les
push
insl
lcall
mov
jg
mov
add
lods
mov
test
mov
xchg
test
cli
fisttpll
fnsave
or
sub
daa
cltd
ljmp
out
xchg
cmp
push
icebp
adc
addr16
xchg
jae
push
push
add
es
daa
cmpl
shl
mov
mov
daa
pop
mov
ficoms
aad
insl
jecxz
xchg
mov
cwtl
mov
lcall
outsl
movsl
mov
test
dec
pop
lea
cmc
cltd
cmp
jp
nop
dec
cmc
aad
sub
insb
daa
pop
pop
jb
jecxz
or
adc
mov
inc
sbb
jl
xchg
sub
bound
ja
add
mov
int
mov
pop
popa
lods
int3
push
xor
xor
jp
xchg
add
je
lahf
push
cld
lea
popf
jno
mov
xor
cmp
mov
outsb
outsb
add
xlat
dec
jno
mov
rorl
push
outsb
xchg
loopne
stos
mov
pop
xor
inc
add
mov
inc
das
xor
pop
xchg
pop
mov
xor
sub
mov
adc
xchg
xchg
pop
outsl
pop
adc
aas
or
fcmove
mov
movsb
aas
jmp
test
icebp
mov
cli
in
mov
push
jbe
lret
pop
add
negl
es
loopne
in
aaa
pusha
cld
push
out
adc
fistpl
cmpsb
jmp
scas
jg
add
jno
out
cmp
mov
push
dec
xchg
lods
add
pop
mov
dec
fistps
push
lods
lock
cli
imul
inc
movsb
adc
shrl
fpatan
xchg
mov
mov
mov
xor
ret
add
out
mov
in
push
sahf
mov
mov
push
je
mov
push
lock
lret
pushf
inc
lahf
pop
cmp
jae
mov
inc
bound
sub
push
pushf
and
push
arpl
gs
push
repz
fildl
pop
rcll
mov
sub
mov
jne
scas
jp
cwtl
inc
mov
nop
dec
push
fsub
hlt
jbe
pop
mov
jmp
mov
inc
xchg
push
sbb
mov
addr16
sub
xor
lret
hlt
std
inc
xchg
movsl
or
push
outsl
popa
fnstcw
int
jmp
scas
lock
push
cld
mov
or
push
pop
mov
outsl
and
mov
push
in
daa
popf
cmc
and
inc
add
repnz
ret
sti
andps
pop
and
xchg
mov
mov
or
nop
inc
jbe
jl
icebp
test
ret
call
sub
xlat
test
das
mov
je
cli
insl
sbb
cmp
outsb
xlat
dec
mov
insb
add
leave
sbb
xor
adc
adc
aaa
xchg
sbb
push
add
xchg
dec
mov
lret
out
adc
test
cli
jg
popf
jns
push
lret
into
xchg
and
mov
mov
andnps
test
jno
sub
or
ss
sarb
mov
gs
inc
adc
jle
or
push
outsb
les
dec
and
dec
mov
lods
cmp
insl
fs
clc
inc
cmp
cmp
fdivrs
ss
cmpsl
dec
or
xchg
cmp
mov
mov
or
fsts
adc
pop
xor
shr
jns
push
pop
loopne
jae
cmp
adc
loopne
cmpsl
lds
movsb
dec
jle
xor
sahf
in
mov
ret
jnp
mov
imul
and
jmp
dec
xlat
fisubs
adc
lock
xchg
dec
push
cmp
ret
enter
mov
ret
rcrb
ret
repz
and
mov
mov
xor
into
es
dec
fldl
adc
or
mov
aad
test
sub
push
daa
pop
inc
loopne
dec
popa
mov
cmp
sub
cld
test
mov
jns
or
mov
loop
adc
mov
inc
jbe
scas
inc
out
add
add
mov
repnz
loopne
mov
jb
xchg
cmp
mov
or
dec
push
mov
mov
jmp
pop
movsbl
sbb
inc
pop
ffree
std
dec
xchg
push
scas
mov
xor
push
movsb
dec
cmpsb
movsl
outsb
sub
jg
testb
loop
mov
adc
lods
out
add
jae
in
sbb
adc
jae
adc
fwait
cmpsl
les
xor
lods
repz
mov
push
js
divl
pushf
ja
jge
push
pop
mov
sub
add
into
popl
xchg
mov
jecxz
lcall
cmp
es
orb
mov
addr16
imul
and
or
adc
addr16
lods
popf
data16
mov
insb
outsb
in
mov
push
loopne
xor
and
cmpsb
nop
gs
lcall
out
xlat
adc
subl
fsts
ljmp
or
mov
ja
mov
xor
adc
dec
mov
fildl
inc
stc
push
cmp
mov
xor
jno
fstpl
insl
xor
in
adc
adc
add
mov
xchg
xlat
xchg
mov
jbe
scas
mov
movsb
int
inc
test
add
pop
mov
fisubs
movsb
out
clc
mov
mov
xor
jecxz
jmp
les
stos
dec
mov
sbb
xchg
dec
cltd
and
xor
fcompl
lods
outsb
push
xorl
lahf
jb
xor
mov
clc
pushf
inc
std
das
imul
incb
movsb
cmp
or
xchg
xchg
test
jecxz
out
pop
mov
mov
add
divl
aam
ret
rorb
xlat
adc
push
mov
icebp
mov
dec
inc
push
xorb
out
or
das
int3
sub
pop
add
pop
mov
int
and
cmc
adc
sub
mov
insl
out
inc
cmp
icebp
inc
addl
lods
loopne
cmp
and
ljmp
lahf
mov
inc
imul
mov
inc
push
jg
daa
add
sti
popf
addr16
fistpll
xchg
mov
repnz
out
sbb
outsl
leave
movl
mov
shll
pusha
outsb
jae
push
jbe
jb
lcall
mov
decl
adc
stos
mov
push
xchg
sbb
jle
call
test
sub
push
pop
adc
or
pop
ja
add
inc
addr16
xchg
test
in
cmpsb
push
or
xchg
mov
sub
dec
dec
lahf
popa
pop
insb
push
dec
enter
fcmovnbe
add
shlb
jae
fldt
pop
xor
adc
pop
mov
jo
xchg
xchg
lock
jb
add
sti
mov
cmpsb
data16
inc
or
inc
inc
or
icebp
ss
cmpsl
adc
jns
in
repnz
sarl
dec
es
dec
mov
lea
int3
mov
fadds
push
jmp
mov
mov
or
sahf
cs
jo
pop
adcb
push
lods
lahf
mov
les
fists
mov
cmp
mov
push
nop
adc
inc
adc
jle
push
scas
sbb
mov
mov
xchg
loope
add
sahf
test
and
or
ja
mov
or
loope
pop
jecxz
movsl
mov
cwtl
stos
lods
pop
jne
pop
xchg
ret
fidivs
mov
cwtl
jb
ret
cmp
loopne
xchg
xchg
mov
jae
int3
mov
test
pop
jg
lock
inc
aad
dec
jbe
data16
push
push
cmp
xor
mov
mov
dec
cmp
push
aas
test
enter
jnp
popa
test
enter
mov
pop
and
sub
loopne
out
dec
lret
sbb
in
lret
gs
pusha
ss
jl
mov
arpl
pop
rolb
pop
add
push
jno
xor
mov
ja
inc
mov
cwtl
sbb
scas
cwtl
xchg
mov
push
pop
pop
mov
adc
enter
ret
ljmp
out
mov
pop
test
jo
cmp
pop
jmp
cmpsl
xchg
sar
xlat
cmpb
sbb
xchg
push
pop
push
jb
mov
test
mov
sbb
jl
daa
fs
sbb
aam
or
gs
pop
pop
mov
push
adc
ficomps
inc
ret
sahf
repnz
in
stos
popl
xlat
mov
sbb
jne
bound
sub
jle
cmp
inc
rorl
hlt
mov
xchg
int3
pop
je
jb
sti
or
add
mov
outsb
mov
pusha
add
sbb
cltd
add
enter
ja
inc
dec
mov
push
cmp
xchg
xchg
push
imul
out
sar
and
dec
out
jb
dec
mov
mov
repz
and
add
fisubrl
jne
aaa
and
dec
out
insl
xchg
inc
cmpsb
shl
cli
adc
mov
scas
sahf
lea
sub
icebp
and
cmp
aam
dec
in
sub
and
pop
push
aam
inc
repz
push
addb
outsl
clc
jbe
out
xor
sbb
mov
xor
adc
int
f2xm1
sbb
movsl
inc
mov
movsb
outsl
xor
movsl
jno
mov
lahf
shrb
popa
or
mov
xor
mov
sarl
gs
iret
pop
sahf
inc
lret
int3
addr16
mov
inc
and
ljmp
mov
repnz
inc
push
pop
adc
rorl
pop
inc
sahf
imul
shr
mov
stos
out
push
pop
outsl
pop
js
add
lds
inc
aam
sbbl
aaa
xor
push
sbb
mov
adc
repnz
dec
cmp
xor
sti
push
out
test
push
mov
add
dec
int3
cld
xchg
test
aaa
in
cmp
lods
push
sbb
aad
mov
mov
data16
push
icebp
sbb
and
ja
les
cmp
inc
sub
and
jl
andl
icebp
sbb
add
push
pop
and
jbe
mov
iret
fbstp
inc
mov
js
push
fadd
jne
jmp
or
jbe
dec
lret
cmpsl
das
or
and
imul
arpl
mov
mov
test
dec
lds
pop
orb
lds
in
and
insb
adc
pop
jb
cmp
mov
push
xchg
sbb
mov
repnz
lcall
aaa
cmp
pop
xchg
je
pop
cmp
pop
sub
rorl
out
out
fstpl
mov
add
outsb
mov
add
aad
mov
add
cmpl
and
lods
dec
bound
adc
pushf
inc
sub
out
jecxz
loope
icebp
jns
or
sahf
insb
inc
std
dec
dec
pop
mov
sub
mov
test
mov
pop
cli
cmp
ss
jge
movsb
pop
and
int
cmp
or
inc
mov
fwait
or
push
enter
or
xchg
jno
jnp
dec
lods
and
je
adc
jne
cld
rcrl
xchg
mov
sbb
inc
mov
sub
fwait
add
jbe
pop
sub
repnz
popf
jnp
mov
test
cmpl
int
push
scas
jae
mov
aas
mov
faddl
into
jb
mov
dec
scas
xchg
into
push
xor
mov
mov
mov
cs
dec
lcall
pushf
cs
dec
xchg
hlt
push
shl
and
mov
mov
pop
mov
leave
mov
divl
hlt
idiv
movsl
sahf
cmc
jb
dec
xchg
push
imul
cmp
adc
pop
jmp
jp
mov
imul
pop
fwait
lret
xor
fnstsw
push
inc
or
cltd
stc
mov
mov
out
lret
mov
mov
fs
leave
mov
jg
fcomps
and
test
js
adc
cs
adc
sub
jge
mov
in
mov
dec
fnsave
xor
aaa
cmp
cmpsb
insl
sahf
mov
iret
jmp
lock
insb
mov
or
jb
inc
lds
imul
or
stos
clc
in
sbb
cmp
neg
jecxz
imul
cmp
inc
scas
cmp
push
call
fneni(8087
arpl
loopne
add
sub
cmc
mov
fwait
or
popf
adc
insb
sbb
jp
xor
mov
enter
and
dec
and
fcomp
push
sub
inc
mov
sbb
adc
jne
in
call
sbb
lock
fistl
lods
mov
rcll
jns
gs
and
fdivl
push
sbb
xor
push
xchg
lahf
sub
pop
enter
xchg
mov
add
lods
subb
lods
sub
jnp
ss
mov
insl
sbb
mov
sub
and
jmp
fldenv
xchg
add
pop
xor
test
jno
leave
jbe
lods
in
das
test
shr
adc
das
ret
or
cmp
lcall
push
xor
or
mov
push
inc
cltd
mov
lea
mov
testl
add
out
in
movsw
add
jns
cli
neg
or
mov
mov
mov
mov
enter
jnp
sub
dec
in
mov
xor
imul
push
inc
xchg
mov
fmulp
out
and
pop
cmpb
into
push
push
test
mov
inc
fldenv
stc
dec
sbb
add
das
out
ds
or
push
xor
stos
jno
outsb
xor
sbb
push
xchg
clc
inc
out
mov
lahf
jle
push
scas
movsl
mov
out
sbb
mov
mov
push
fwait
add
adc
xchg
cwtl
mulb
pop
or
add
das
push
mov
sbb
lds
xchg
and
test
or
inc
fldenv
pusha
cmp
inc
xchg
mov
fisubl
pop
sti
ja
out
ja
pop
or
sbb
loope
int3
mov
xchg
mov
mull
in
xchg
xor
lods
aam
cmp
fistpl
mov
xor
js
dec
xlat
mov
inc
xchg
sbb
jecxz
movsl
pushf
cld
xchg
dec
inc
jecxz
fwait
pop
jmp
addr16
popa
inc
xor
cmp
push
push
mov
and
sti
mov
push
or
push
les
addl
lods
sub
stos
dec
loopne
and
fcomps
xchg
aas
add
mov
jecxz
or
scas
loop
aaa
rcrb
pop
pinsrw
int
cmpsb
lret
jp
pop
dec
and
push
div
push
jb
lret
sbb
fiaddl
call
ret
pop
inc
cs
mov
sbb
sahf
dec
inc
test
clc
mov
and
push
xchg
fnstenv
loopne
pop
dec
sbb
test
dec
and
je
popa
sbb
push
dec
mov
sub
out
ja
stos
cmp
lret
xchg
push
dec
hlt
cs
lcall
into
sbb
out
lret
les
mov
or
mov
lods
and
stos
testl
or
xor
sbb
jns
cs
mov
xchg
cmp
call
fbstp
sbb
lahf
dec
cmpsb
mov
ja
cmp
sbb
pop
test
mov
or
test
and
dec
jno
loopne
jno
xorl
add
mov
mov
aas
div
or
call
rorl
lods
lock
xchg
das
xchg
or
inc
push
inc
mov
call
mov
call
mov
pop
xor
pop
aad
faddl
out
xorl
jg
or
insl
or
das
inc
mov
shlb
jno
or
das
mov
call
in
loopne
ficompl
and
shl
lods
leave
repz
push
xchg
scas
lods
sub
jl
mov
lea
mov
data16
mov
sbb
sahf
outsb
outsl
mov
lahf
sar
jae
and
cmp
xor
pop
mov
aas
into
repnz
bound
fisttps
xchg
pop
push
in
push
jo
jae,pt
adc
adc
lret
ja
jne
int3
sarl
aam
repnz
jg
aad
cmp
mov
ss
fsubs
aam
add
sbb
aad
adc
das
loopne
push
sbb
jae
mov
push
test
mov
add
xchg
sti
pop
out
fsubr
sti
repnz
ljmp
stc
or
inc
cmpsb
pop
lods
adc
clc
orb
add
ret
aaa
rorl
xchg
fcomps
mov
into
arpl
lds
jnp
or
or
mov
popl
sti
fdivl
push
cmpsb
cmpsl
and
lcall
jmp
jecxz
inc
pushf
sub
xor
popa
lds
aas
mov
jmp
mov
add
adc
stc
xchg
jle
in
xchg
adc
pushf
shl
std
ror
mov
es
ss
enter
ret
xchg
sahf
pop
cmpsl
es
js
push
push
sub
jg
scas
add
mov
mov
add
cmp
jmp
inc
pop
xchg
addr16
cld
push
incl
cwtl
inc
icebp
mov
sahf
pop
pop
mov
ss
shr
insl
inc
jb
fcoms
mov
sub
and
loop
mov
jb
popf
or
popf
jle
std
xor
or
hlt
pop
add
mov
mov
rolb
adc
shrb
iret
sbb
mov
pop
push
xlat
and
jmp
scas
mov
aaa
rcl
cmpb
into
inc
push
out
push
stc
push
mov
or
popf
xchg
loope,pn
pop
insb
mov
sub
fstpl
loop
pop
lods
mov
push
filds
jmp
dec
bound
dec
mov
outsb
mov
adc
lret
cmpsl
lahf
popf
dec
or
lods
lea
xchg
jb
in
jp
mov
stos
mov
clc
ret
lock
sub
xchg
imul
daa
mov
or
cmc
out
inc
rcr
push
rcrl
mov
lods
mov
icebp
cmp
dec
inc
cmp
sub
lods
int
icebp
mov
lea
popf
call
adc
mov
mov
and
fldl
ljmp
push
rcl
imul
ds
push
ficomps
insb
inc
xor
cld
sahf
jo
out
xor
jno
in
adc
aam
nop
xchg
push
ret
mov
cmp
push
adc
or
mov
add
sbb
jno
fs
sahf
lods
stos
pop
xor
fildl
divl
popa
mov
ljmp
jmp
push
mov
cwtl
jl
call
sbb
inc
mov
mov
cld
and
mov
ja
inc
js
call
loopne
jl
or
xor
mov
pop
rcrl
xor
mov
xor
or
jae
mov
scas
and
arpl
xor
lods
or
fimull
sbb
inc
shlb
popa
or
jae
dec
jmp
mov
add
ret
xlat
aaa
dec
mov
sbb
in
test
or
movntps
in
push
pop
aam
cmp
pusha
jmp
pop
mov
test
pop
sub
adc
dec
cmc
adc
test
xchg
cltd
dec
test
dec
xor
jp
popf
dec
lods
out
aam
shl
leave
sub
test
fldl
imul
push
sbb
lcall
stos
pop
sbb
notb
xlat
jne
sbb
inc
cmpsl
aad
shlb
jmp
loop
cld
push
lods
je
jns
jge
jecxz
or
into
sbb
scas
fldl
js
daa
xchg
mov
ds
les
dec
nop
adc
out
dec
ret
testl
mov
jle
push
movsb
cli
mov
push
bound
inc
jb
dec
jbe
clc
in
dec
movsl
mov
int
fs
xchg
mov
or
jge
jb
xchg
dec
dec
add
stos
test
push
mov
jge
int
dec
ret
push
ret
pop
seta
arpl
sbb
aaa
cmpsl
sbb
fxch
ds
inc
mov
lcall
out
inc
popa
xchg
xor
ds
ret
outsb
sbb
or
or
mov
dec
push
jmp
mov
pop
jae
cld
sbb
dec
dec
adcl
fcmovnbe
xchg
arpl
imul
sbb
lods
lahf
clc
and
mov
push
loope
xchg
mov
push
fadd
jp
imul
dec
push
shrb
mov
lahf
shrb
lcall
jmp
es
pop
std
mov
dec
add
repz
popf
adc
div
mov
int
mov
push
adc
xor
call
xor
jmp
push
mov
fcmove
sbb
xor
push
dec
ror
ror
push
sub
test
daa
hlt
add
inc
or
jo
jne
push
jnp
xor
cwtl
jae
in
mov
jmp
mov
cmp
push
push
xchg
mov
mov
out
fisttpll
mulb
push
out
xchg
pavgw
and
mov
push
sub
test
testb
enter
add
push
mov
push
mov
stos
lds
arpl
sbbl
sub
aaa
ss
xchg
fidivs
ss
jb
pop
jns
test
stos
inc
pop
lea
xchg
leave
add
sbb
les
fwait
mov
inc
push
lock
lret
fmull
test
dec
addr16
push
stos
sbb
inc
jp
shrb
add
jno
jae
pop
jns
test
pop
xor
and
mov
or
mov
repnz
xchg
lock
mov
sarb
mov
dec
jnp
cltd
or
int3
addr16
mov
cmp
mov
xchg
rep
mov
nop
dec
cmp
das
mov
fld
mov
pop
in
jecxz
cltd
dec
xchg
stos
in
out
cmpsl
mov
jne
or
mov
int3
sarl
pop
jne
cmp
test
imull
jmp
scas
xor
cmp
dec
inc
addr16
inc
add
add
xor
push
cmp
das
add
movsl
xor
push
out
in
mov
inc
xchg
loope
adc
pushf
mov
aaa
mov
in
ret
daa
cmp
jge
push
popa
mov
scas
sub
loope
push
add
lahf
jle
pop
or
mov
xor
mov
jg
ds
lods
clc
mov
inc
xor
mov
mov
fisubrs
mov
rol
pop
popf
pop
outsb
ds
mov
jge
sbb
cltd
popa
inc
jg
loopew,pt
or
in
jno
std
add
dec
out
in
shlb
jmp
cmp
adc
cmp
into
and
mov
into
in
xor
fwait
dec
mov
and
jns
xor
xor
fdivrs
repz
xor
aas
pop
jge
fsubrl
xchg
mov
int3
sbb
call
lds
test
sbb
pop
out
daa
lahf
mov
add
lods
cltd
mov
lcall
ja
out
stos
mov
push
sub
cmc
idiv
shrl
sbbb
jle
popa
leave
mov
outsl
js
enter
add
mov
jne
inc
pop
je
insl
cs
in
repz
imul
cmp
into
xor
pop
cld
sbb
nop
pop
adc
pusha
cmp
jne
fldcw
jne
xchg
and
in
int
addl
pop
andb
xchg
shrb
mov
aam
sahf
or
dec
xor
call
mov
jle
cmp
add
aaa
xlat
dec
stc
jo
lock
clc
adc
sbb
pop
dec
lcall
cmc
or
xor
inc
adc
inc
leave
std
jae
cmp
push
and
shr
dec
call
aas
cld
mov
std
aam
jmp
xchg
sub
sbb
je
outsb
je
cld
or
sbb
test
inc
push
or
in
dec
jmp
mov
mov
lret
push
mov
loopne
sbb
addr16
jg
mov
or
and
testl
nop
into
or
lods
gs
mov
jg
andb
out
inc
outsb
mov
int
push
test
inc
jae
ss
mov
pop
cltd
pop
dec
es
clc
ror
mov
inc
add
lods
ret
out
inc
daa
mov
call
mov
sub
or
mov
cmpsb
dec
ror
inc
mov
mov
aas
or
mov
cmp
js
jle
movsb
hlt
stos
aam
jmp
mov
dec
mov
mov
rorl
dec
pop
pop
xor
outsl
icebp
jb
loope
sbb
sarb
inc
mov
ljmp
jbe
or
idivl
idivb
cmp
mov
mov
xor
dec
mov
jns
jo
ljmp
jns
mov
adc
negl
cmp
lcall
mov
dec
cmpsb
mov
jl
leave
pop
out
pop
sar
mov
call
add
dec
clc
jge
cmp
cmp
stos
jmp
ds
adc
clc
out
and
out
pop
and
push
sbb
pop
enter
pop
fdivs
push
mov
or
hlt
or
xchg
xchg
xchg
sbb
call
mov
loope
sub
shl
jecxz
iret
out
cwtl
inc
add
jb
test
nop
add
cld
pop
mov
cmp
loopne
push
es
jg
lods
inc
sbb
adc
add
adc
mov
lods
arpl
jg
popf
or
pop
aas
aas
cmp
push
cmp
shl
testb
or
cmp
and
cli
mov
xor
and
mov
cmpsb
or
rorb
push
loopne
jno
mov
sbb
mov
aas
add
fstpl
popf
xchg
lret
pusha
clc
popf
xchg
sub
xchg
ss
inc
jecxz
loop
enter
scas
roll
cld
xchg
outsl
cmpsl
add
mov
and
mov
fsincos
inc
int
jno
int3
sbb
out
shlb
das
stos
adc
adc
xchg
lret
add
xchg
mov
dec
inc
je
lods
lcall
ss
mov
scas
ret
add
arpl
inc
pop
ja
dec
mov
add
mov
xor
cli
jnp
push
sbb
mov
iret
ss
adc
adc
push
mov
sbb
icebp
subl
sbb
in
aaa
repnz
and
inc
or
inc
cmp
sub
inc
outsl
out
dec
mov
daa
cmp
negb
cmc
dec
dec
or
testb
fistl
add
aas
outsl
mov
clc
push
push
sti
mov
mov
pop
push
adc
insb
pop
ret
jb
aad
iret
fistpll
jp
or
outsl
mov
cmpsb
repz
xchg
shl
jnp
lahf
mov
lock
sub
in
xor
and
pop
dec
movsl
imul
dec
rcrl
push
mov
or
loopne
xor
push
ja
test
xchg
into
int
gs
inc
shrl
add
icebp
mov
int3
pop
popw
cwtl
mov
filds
aas
imul
cmp
push
push
test
pop
xor
push
xor
xchg
mov
movsb
dec
mov
mov
ds
loope
cli
testb
sbbb
push
pop
cmp
jns
jge
sbb
dec
jg
sbb
outsl
adc
scas
mov
cmp
pop
ss
adc
adc
xor
xlat
xor
mov
mov
stos
adc
mov
loop
loop
mov
jns
mov
pop
sub
cli
icebp
in
ss
pop
data16
pushf
std
push
adc
or
ja
inc
jp
adc
out
lea
mov
mov
jbe
push
in
adc
mulb
dec
test
ja
mov
cmp
clc
je
je
test
pop
cmp
jge
das
rep
cmp
cmp
in
mov
ja
lret
jp
push
cmpl
inc
xor
mov
cmp
test
xchg
add
fisttps
lea
movl
rcrb
adc
call
clc
inc
xor
or
sub
xor
inc
push
pop
aas
or
xor
stc
jns
out
test
fistl
adc
bnd
mov
xor
xchg
xchg
sbb
mov
repz
pop
sti
xor
ret
pop
sahf
outsb
js
insl
sbb
mov
aas
stos
lea
mov
out
ss
js
mov
imul
sahf
adc
xor
out
mov
test
jecxz
dec
sbb
xlat
retw
inc
iret
mov
lret
stc
mov
repz
gs
loopne
outsb
dec
outsl
inc
inc
testb
push
gs
adc
or
lds
fnstenv
sbb
jle,pt
loop
ljmp
push
aam
push
rcrl
test
mov
dec
mov
aam
cmpsl
sti
cmpsl
adc
sbb
movsb
cmp
add
call
inc
sbb
and
or
daa
std
mov
lods
mov
add
fstps
jmp
cmpsl
bound
and
cld
fwait
dec
adc
or
adcl
aam
xchg
sbbl
xchg
lcall
mov
pop
adc
mov
pop
in
aam
xchg
fwait
movsl
jecxz
adc
cli
sub
in
rorl
hlt
jb
inc
add
pop
stos
int3
mov
notb
adc
push
icebp
jmp
imul
cmpsb
insl
jo
xchg
cmc
lock
inc
cmp
xorb
cmp
cwtl
or
and
icebp
push
enter
popa
ja
xchg
sbb
sarb
nop
xchg
push
inc
mov
xchg
outsl
mov
jmp
xchg
jp
div
inc
cmp
repz
or
mov
cs
xor
out
push
push
xor
inc
sbb
cmp
sti
mov
mov
pop
in
loop
aam
xlat
rcll
lahf
pop
arpl
cmpsl
test
pusha
cmp
lcall
cmp
mov
ret
dec
jp
jmp
mov
cmp
outsb
rcrl
pop
adc
xor
arpl
les
sub
or
xchg
mov
inc
inc
fwait
and
sbb
mov
dec
mov
inc
or
in
mov
lret
cmc
data16
mov
jl
xlat
addr16
xchg
shrb
pop
jnp
lds
xchg
cmc
lret
push
pop
std
or
pop
sbb
lods
mov
out
sub
jl
add
sub
jg
xor
nop
push
dec
lcall
jl
test
add
mov
stc
outsb
push
dec
and
repnz
xor
jle
dec
xchg
inc
outsb
push
insb
jns
inc
lretw
mov
cli
push
mov
jge
imul
es
add
out
mov
dec
jnp
mov
adc
gs
sbb
bound
idivl
sbb
jo
pop
repz
leave
mov
sti
sub
sar
stos
aaa
pop
andb
adc
shll
xor
dec
sub
inc
push
into
pop
xchg
arpl
pop
sbb
mov
daa
call
sarb
cld
pop
out
enter
js
jnp
mov
cmc
mov
xchg
pop
movb
pusha
lods
sub
xchg
dec
cmp
leave
mov
addr16
movsl
frstor
adc
pop
pop
mov
jmp
push
sbbl
mov
stc
inc
dec
fbstp
dec
cmp
push
addl
lock
mov
adc
cmp
push
cltd
pop
lret
ja
push
lahf
xor
cld
aas
call
inc
imul
inc
mov
fidivs
inc
dec
and
push
and
sahf
cmc
subb
out
ffreep
int
dec
sbb
dec
inc
jnp
aas
pop
xchg
incb
inc
mov
sub
or
pop
ret
and
pop
push
insl
addr16
stos
push
inc
sbb
mov
xchg
or
ficoms
inc
repz
pop
fwait
sbbb
scas
or
sbb
dec
mov
jmp
mov
mov
outsl
pop
mov
js
mov
ja
iret
fbld
dec
jno
stc
sbb
cld
ja
jbe
jl
xor
insb
dec
cmp
test
cmpsl
cmp
sbbl
jg
outsl
imul
xchg
mov
jmp
lret
imul
cmp
push
add
stos
jns
popa
pushf
enter
mov
push
dec
xchg
jno,pt
xlat
push
mov
mov
imul
rcl
and
or
std
andb
xchg
imul
sbb
push
jp
jns
dec
aaa
and
xchg
aas
test
lcall
hlt
push
and
enter
addr16
shlb
inc
jg
iret
jmp
icebp
cmpsl
sub
fsts
cli
push
mov
stc
lods
cli
sahf
mov
cmp
push
sub
arpl
mov
mov
int
add
fsubl
and
xchg
out
icebp
cmc
test
jns
xor
int3
dec
dec
shlb
insl
outsl
mov
add
xlat
cmp
mov
sub
lock
or
sub
inc
mov
gs
cmc
repz
scas
repz
mov
sub
lods
dec
call
push
inc
lock
data16
pusha
inc
out
mov
or
roll
sti
adc
dec
cmp
arpl
imul
or
sbb
inc
or
arpl
imul
add
setp
into
xlat
enter
sub
jae
inc
aam
mov
rorb
outsl
adc
scas
adc
adc
sub
mov
inc
sub
and
ja
adc
mov
call
popa
loop
push
inc
addl
pop
lods
iret
divl
lods
sub
cmc
enter
and
dec
js
bound
in
loop
sub
daa
xchg
mov
int
loope
cmpsl
imul
loop
or
adc
sub
mov
sbbl
or
mov
push
mov
xchg
xor
push
xchg
cmpsl
sub
jecxz
test
mov
out
sbb
jo
icebp
cmp
xchg
jmp
ljmp
adc
sub
loop
es
mov
out
push
mov
lds
jns
sbb
add
inc
imul
push
sub
negl
call
out
shlb
bound
test
adc
mov
ds
mov
cmp
sub
cwtl
lock
push
stc
sub
sub
sbbb
into
mov
xor
pop
cmpsl
mov
enter
out
jl
pop
adc
js
lds
js
mov
jbe
test
movsb
les
mov
inc
data16
pop
xchg
ret
add
sbb
sub
mov
jmp
movsl
subl
aaa
cmp
lcall
and
mov
adc
inc
pop
mov
xchg
mov
push
out
xor
addl
scas
out
and
loope
mov
jge
jne
subb
addr16
push
jge
and
push
push
test
js
jle
loop
out
and
push
and
pushf
cmp
inc
cmp
out
xor
adc
xchg
aaa
cmpl
mov
stc
pop
mov
mov
or
dec
test
jns
imul
enter
sarb
movsl
loopne
js
mull
scas
dec
enter
in
stos
pusha
push
call
jo
push
in
and
insb
adc
dec
jmp
pushf
leave
xor
call
rol
xor
push
jne
sub
mov
or
cld
push
sub
in
dec
into
fwait
jg
fs
test
into
outsl
xchg
mov
jle
bound
jl
test
inc
jnp
xchg
stos
insb
dec
nop
jg
add
mov
dec
sub
dec
sub
mov
xor
mov
push
popf
pop
mov
or
jl
in
xor
lods
inc
hlt
mov
outsl
icebp
push
sahf
lea
push
hlt
hlt
negl
jmp
push
xor
pop
jmp
jle
xor
cs
out
gs
lea
sbb
push
popf
xor
fnstcw
stos
mov
cmpsb
cmp
leave
in
mov
and
loopne
mov
cmp
xchg
in
int3
pop
insb
pop
jp
pop
mov
xor
fildll
cmpsl
outsb
testb
andb
mov
popf
fs
out
aad
shrb
push
xorb
int3
enter
lret
lds
repnz
pop
mov
mov
or
mov
popw
and
test
decb
int
aam
push
jns
test
and
push
ds
lahf
mov
cmpb
xchg
inc
mov
roll
adc
jle
cmp
push
sahf
mov
int3
loope
imul
aaa
pop
add
or
xchg
in
xor
push
mov
outsl
data16
jb
mov
pop
ret
ret
xlat
pop
push
andb
fdivr
in
call
imul
push
les
int
cmp
or
outsb
or
xchg
aas
xchg
mov
mov
xchg
mull
and
xlat
push
mov
sub
mov
xchg
jbe
or
ror
leave
imul
cltd
jg
push
rep
cltd
out
xchg
inc
pop
aas
in
adc
lret
imul
fsubr
mov
popf
xchg
mov
jno
out
mov
mov
mov
hlt
push
xlat
ds
icebp
cwtl
xchg
lods
hlt
out
sar
jg
into
add
jo
mov
inc
dec
and
fcmovnbe
jae
repz
pop
popf
and
xchg
add
fs
inc
je
hlt
inc
into
loope
pop
dec
aam
lret
inc
ds
xor
iret
pop
icebp
shr
cmp
jmp
out
into
inc
xchg
mov
cs
and
or
dec
push
pop
aaa
xor
int
lea
int3
pushf
adc
jl
cmp
in
movsb
mov
jp
es
xor
add
sub
mov
aam
sbb
push
lods
imul
xchg
mov
pop
mov
push
out
cmpsb
inc
loop
aad
mov
fmuls
adc
or
cmp
jg
dec
xchg
in
sbbl
inc
sbb
fwait
add
dec
test
push
push
sbb
aad
jbe
mov
outsl
stc
cmpsb
pop
imul
mov
push
stc
clc
popa
mov
test
movl
mov
imul
ss
cmpsl
sbb
daa
inc
loopne
pop
into
mov
xlat
jg
outsl
fcmovne
and
fld
outsb
stc
sbb
aas
aaa
cmc
mov
in
add
lahf
inc
mov
pop
lret
add
iret
mov
dec
pop
mov
dec
cmp
xor
sub
aam
adc
add
jle
jg
inc
xchg
test
ds
imul
arpl
jecxz
cmp
aaa
push
cwtl
iret
pop
cld
jp
lock
pop
dec
and
stos
out
push
insb
not
je
addr16
into
pop
xchg
imul
dec
inc
pushf
mov
ds
sbb
cmp
adc
fisubrl
jno
lods
or
mov
aam
xor
mov
push
mov
mov
sbb
pop
and
pop
iret
or
data16
xlat
mov
out
xchg
das
repnz
pop
cmp
xor
or
popa
mov
outsl
dec
or
mov
sub
in
pop
jae
jae
add
mov
xor
inc
xchg
dec
loop
jg
push
push
nop
jnp
jge
dec
add
clc
pop
leave
insb
aad
push
xor
aam
iret
mov
cmpsb
arpl
and
adc
insl
jl
in
cmp
insb
mov
add
push
add
sbb
adc
loop
push
mov
jmp
mov
movl
jge
imul
pop
loopne
xchg
adc
shrl
fldt
mov
inc
jmp
mov
lcall
test
test
fisttps
js
aam
int3
dec
push
hlt
aad
repnz
out
push
pop
push
cltd
ret
test
int
ud1
or
jge
roll
sub
mov
jbe
fs
sbb
inc
xor
mov
stc
outsl
stc
insl
jge
mov
mov
mov
jnp
push
jp,pn
inc
negl
filds
mov
push
jnp
jecxz
xor
mov
mov
mov
or
shrb
push
into
popa
adc
popf
cli
xorb
mov
xor
pop
mov
mov
addr16
outsb
add
add
jno
cmp
or
jb
movsl
stos
imul
mov
add
push
push
lods
lret
jne
xchg
addr16
popf
je
in
arpl
push
lcall
mov
scas
pop
lret
fnstenv
pop
lods
inc
and
out
aaa
stos
leave
pop
mov
jb
ror
add
jne
dec
int
sbb
rcrl
test
cmp
je
lea
lods
je
arpl
pop
addr16
sti
jns
jle
inc
popa
enter
dec
dec
fsub
ret
cmp
add
xor
sbb
push
xlat
lods
adc
jg
jl
js
xchg
xchg
scas
negb
adc
inc
mov
push
sub
dec
inc
inc
into
xor
loopne
ficomps
mov
xchg
cmpsl
jg
or
add
or
dec
inc
pusha
mov
cltd
popf
dec
cmovp
xor
mov
icebp
push
outsb
inc
jno
sti
roll
push
shrl
mov
push
add
test
repnz
mov
sbb
decb
mov
mov
movsl
in
std
rcrl
std
out
jg
dec
lods
push
hlt
cld
inc
negb
adc
adc
scas
or
sti
xor
test
js
mov
imul
push
or
ds
addr16
jae
mov
sbb
inc
push
mov
add
dec
jp
mov
add
fisubrs
repnz
popf
mov
mov
icebp
ds
pop
pop
push
or
nop
xor
fistps
xchg
leave
jp
push
push
adc
jns
mov
pop
add
xlat
pop
lahf
add
sahf
dec
pop
into
pop
leave
fsubp
nop
push
leave
ret
cmc
xchg
adc
and
dec
fstl
rcrb
inc
dec
repnz
mov
fisubl
outsl
into
gs
adc
xchg
xor
pop
rorl
adc
subl
sahf
xchg
mov
insb
inc
pushf
stos
lcall
std
cs
sbb
add
in
es
fwait
dec
cmp
xor
int3
loop
and
loope
fiaddl
push
aam
jbe,pn
movl
pop
lea
sbb
xchg
scas
cltd
pop
adc
mov
std
inc
in
and
push
addb
mov
push
inc
adc
sahf
popf
xor
adc
sub
and
lret
bound
stos
fsub
mov
xchg
call
test
popf
mov
xor
dec
or
dec
cld
mov
push
iret
cwtl
lods
gs
dec
pop
jbe
cs
cli
xchg
out
push
sbb
mov
gs
insl
mov
add
fldpi
je
pop
jle
iret
scas
and
pop
fisttps
push
inc
push
mov
das
push
aam
adc
and
pop
daa
and
pop
jg
jo
inc
icebp
or
adcl
cs
sahf
pop
mov
xor
mov
sbb
mov
add
push
cmp
or
and
hlt
mov
imul
inc
popa
lcall
ds
sub
mov
iret
dec
sbb
je
nop
and
push
adc
or
adc
fildll
dec
xlat
lods
jno
pop
lea
sahf
xor
adc
sub
lea
aaa
jae
or
ret
push
imul
cmp
imul
stos
not
push
popf
subl
aaa
cmp
std
sbbl
mov
pop
testl
fidivrs
inc
or
mov
push
add
outsb
mov
mov
aad
mov
int3
insl
lret
pcmpeqw
call
in
push
inc
aam
outsl
mov
xchg
loop
add
cmp
sbb
cmp
in
xlat
shlb
ja
ds
subl
lea
out
push
test
pop
mov
mov
pop
repz
pop
int
mov
mov
dec
adc
out
pushf
je
xor
test
movsl
cmp
and
lret
add
rorl
test
popa
xor
fwait
je
iret
push
push
insb
push
dec
andl
test
add
cld
sbb
push
daa
xchg
push
push
push
inc
sub
lret
ljmp
push
jle
add
outsl
xor
mov
out
roll
pop
out
mov
add
outsb
int3
xor
pop
sbb
stos
sbb
push
out
insb
lods
test
out
sbb
lock
inc
in
push
bound
jmp
mov
adcb
or
mov
xor
shlb
jnp
enter
push
xlat
jl
call
dec
mov
dec
xor
inc
push
mov
xchg
aam
loopne
xor
and
fwait
xor
cmp
rolb
cmp
pop
into
dec
sub
lds
mov
test
push
repz
mov
mov
jae
mov
dec
inc
jae
out
push
addl
data16
sbb
cmp
cltd
repz
stos
test
fldl
pop
push
aam
mov
mov
fdivrp
fwait
xor
out
mov
mov
aas
push
add
cmc
or
mov
jge
stos
or
inc
mov
lret
gs
mov
xchg
out
push
loope
push
mov
cmc
pop
pop
pop
aas
popf
test
adc
cmp
push
sub
push
sbb
xchg
ror
sub
test
mov
and
fdivrl
insb
scas
clc
fcompp
fwait
push
ficoml
shr
cmp
notl
or
pop
cmp
and
cmp
mov
pop
in
subl
mov
push
jg
xchg
outsl
decl
inc
daa
mov
sub
leave
fisttpl
test
aad
mov
mov
fnstsw
stc
xchg
or
push
mov
ret
and
push
sbb
bound
push
int
push
mov
jle
cmp
enter
std
cld
xor
jo
mov
add
stos
in
jmp
mov
cltd
pusha
cltd
add
push
sbb
rorl
adc
pop
in
push
push
xchg
gs
or
lret
xchg
adc
jp
fs
xor
cltd
and
lahf
aam
or
lahf
enter
popa
insb
nop
test
arpl
ja
sub
ss
les
into
xchg
and
sub
xchg
stos
ljmp
mov
ret
out
adc
cmp
inc
mov
leave
shlb
hlt
push
insb
jp
cmp
and
mov
sahf
cmp
cmpsb
xchg
ret
jl
cltd
and
push
cltd
sarl
aaa
push
cltd
pop
and
add
ret
mov
jbe
daa
or
fstpt
push
inc
js
push
subl
std
cmpsb
mov
outsb
aaa
or
push
pop
pop
mov
xchg
lret
mov
fcoml
pop
pop
test
fcmovnu
and
jmp
loop
mov
rcr
push
mov
inc
lock
imul
sub
jne
outsb
ja
sbb
loopne
ret
fstps
mov
or
dec
xchg
adc
insl
pushf
adc
cmp
es
pop
fistps
xor
push
orb
mov
in
imul
into
push
jbe
xlat
xor
jge
mov
inc
mov
pop
int
sub
cli
sbb
shrb
out
dec
lods
cs
push
mov
mov
movb
cmp
mov
jecxz
mov
cltd
sti
movsl
int3
xchg
jne
xor
or
xchg
jbe
lahf
testb
ss
cmc
rcrl
sbb
inc
pop
or
and
cmp
mov
pop
jne
inc
cmp
add
sbb
cmpsl
loop
push
ret
pop
iret
adc
and
xchg
sub
mov
push
pushf
sahf
mov
jns
mov
xchg
adc
or
jl
push
sbb
jge
push
int
jmp
cmp
add
dec
bound
ss
pop
xchg
test
test
aam
loop
add
shlb
out
add
mov
sub
test
imul
cmp
cli
pop
dec
and
mov
cmp
inc
loop
or
mov
push
push
mov
popa
sahf
sbb
sub
inc
inc
mov
movsb
dec
jp
loope
mov
nop
adc
addb
jecxz
cmp
sbb
add
out
ret
mov
dec
xor
xchg
mov
mov
sahf
or
movsl
mov
add
jb
imul
mov
in
pop
sti
cwtl
cmp
push
sub
xchg
arpl
rorl
mov
xchg
or
cmpsl
cmp
and
loopne
cltd
or
sub
xor
mov
scas
mov
push
pop
cmp
push
or
adc
fsubp
push
push
xor
bound
in
mov
sbb
insl
std
dec
fsubl
jmp
pop
push
xor
and
push
mov
enter
cltd
push
dec
lret
scas
out
divl
inc
mov
stos
mov
neg
aam
jo
outsl
mov
outsl
repnz
mov
sub
imul
mov
sbbl
sbb
pop
mov
loopne
loope
daa
inc
pop
dec
ret
std
mov
scas
scas
xlat
xchg
mov
pop
iret
push
scas
add
in
inc
pop
jl
jno
je
jmp
mov
cmp
cs
or
jae
loopne
add
sbb
test
jmp
push
fiaddl
lret
mov
dec
out
test
and
xor
xchg
popa
ljmp
or
mov
dec
ds
and
mov
gs
pop
les
rolb
aam
mov
jns
jbe
std
cmp
add
or
push
fistl
jecxz
aas
sbb
mov
pop
test
mov
test
cmp
sbb
js
mov
mov
stos
cld
xchg
add
pop
sub
inc
into
pop
lret
sbb
icebp
clc
arpl
bound
mov
pop
and
imul
jno
xor
aam
xchg
bound
cmp
cmp
xchg
das
or
dec
jnp
xchg
jecxz
rcll
sbbl
mov
pop
aad
push
orl
shr
popa
add
mov
mov
jge
mov
and
jb
xor
std
mov
xchg
daa
leave
dec
xchg
into
xor
mulb
sbb
loopne
nop
jl
or
inc
push
and
sub
in
cmpsl
add
push
add
dec
scas
sbb
sbb
mov
push
ret
mov
cltd
popf
xor
mov
xchg
mov
out
sbb
out
sub
sahf
push
sbb
sub
sbb
xchg
xorb
scas
sbb
stos
int3
inc
jle
rcll
sub
hlt
pop
mov
rorl
inc
cmp
sbb
pusha
fdivs
xchg
sbb
imul
or
push
adc
fstps
fwait
pop
movsl
iret
lods
fs
and
ljmp
ret
mov
pop
dec
jmp
jb
add
stos
add
loope
push
or
dec
jno
push
ss
dec
fistpl
inc
push
nop
add
or
mov
mov
push
js
mov
es
xchg
int
scas
mov
or
add
adc
jp
js
lock
xchg
and
push
add
ljmp
outsb
xor
in
push
xchg
pop
jo
jnp
arpl
mov
or
adc
push
mov
jae,pt
fidivs
je
loop
xchg
pop
sbb
jmp
mov
repz
jnp
jo
pop
in
mov
orl
add
addr16
inc
jge
push
and
stos
inc
or
push
mov
jl
fisubs
mov
movsl
mov
rcrl
sbb
inc
mov
out
call
jl
stc
cmc
dec
je
fcomi
lods
icebp
imull
in
sbb
arpl
enter
pop
pop
lods
or
lret
push
arpl
mov
lcall
inc
jns
cs
jle
push
je
mov
xor
xchg
cmp
fs
jns
cmp
pop
and
int
pop
inc
xor
and
dec
incl
or
popa
jge
std
pop
into
lock
orb
pop
jns
lcall
push
aam
cmc
aas
dec
sbb
pop
in
mov
mov
and
shll
inc
inc
popf
leave
sub
push
in
pop
cmp
pushf
fldcw
xor
mov
sbb
sti
es
mov
jb
inc
cld
pop
aas
mov
dec
dec
test
das
addr16
dec
stos
xor
dec
inc
and
insl
fs
clc
stos
mov
loope,pn
into
sub
dec
les
sbbl
mov
mov
stos
pop
ds
test
sub
fnstcw
dec
leave
push
daa
rolb
xor
dec
sti
mov
jl
cs
mov
repz
push
js
pushf
xchg
xor
push
mov
aad
mov
orb
sti
lock
and
ja
ds
call
pop
lods
add
xor
xlat
sub
inc
push
cmp
dec
or
mov
inc
jno
rcl
sti
std
rcl
movsb
sub
and
mov
sbbb
clc
inc
xor
jbe
out
popf
fisttpl
shlb
add
mov
jge
and
imul
xchg
push
or
fwait
imul
lock
shlb
pop
sub
jns
iret
movsb
pop
push
fcomp
ljmp
into
inc
dec
jo
add
subb
cmp
push
rcrl
add
inc
in
setle
mov
popa
cmp
pop
sbb
adc
out
jl
in
ficoms
jbe
sti
dec
xchg
mov
xchg
pop
mov
iret
mov
es
cwtl
bound
push
cmpl
adc
imul
arpl
cmpsb
jecxz
icebp
xchg
aas
lods
adc
push
mov
sbb
data16
xchg
clc
cmp
jge
aaa
gs
mov
adc
sub
fs
pop
xor
xchg
inc
jmp
cmp
mov
mov
mov
xlat
clc
leave
mov
aad
inc
sbb
xlat
and
test
cmpsl
ret
push
mov
push
std
push
pop
lahf
pop
jo
lds
or
cli
sub
out
lea
or
stos
outsb
shr
jbe
test
mov
inc
pop
dec
mov
adcl
push
stos
mov
jmp
mov
mov
inc
ljmp
cmp
outsl
push
jecxz
push
xchg
pop
das
xor
cltd
mov
test
xchg
dec
aam
mov
cmpsl
imul
inc
jp
dec
arpl
cmp
pop
jae
gs
jno
dec
jne
jp
xchg
mov
push
and
lret
test
scas
je
push
aam
insb
push
push
fucomip
lds
popf
in
stos
pop
cmc
inc
test
repnz
dec
inc
stos
add
pop
adc
cltd
dec
pusha
mov
fld
dec
rol
ficompl
bound
repz
mov
and
lahf
int3
pop
mov
stc
jo
shlb
repz
lds
adc
mov
mov
jnp
fsubl
aam
jp
xor
pushf
pop
adc
aaa
xor
jecxz
ss
xor
in
jnp
mov
pop
inc
pop
mov
mov
adc
int
scas
aam
ficoml
mov
out
mov
mov
mov
daa
in
fwait
mov
imul
jmp
test
leave
data16
nop
mov
jno
imul
xchg
fs
std
jns
rep
cmpsb
movsb
sti
and
cld
adc
dec
fsubs
xor
sub
test
pusha
push
and
insl
jbe
mov
imul
xchg
inc
fstpl
dec
call
inc
jbe
inc
dec
or
xor
xor
jp
push
sub
popf
in
orb
pusha
mov
push
sbb
rcr
jmp
lcall
inc
push
sub
jae
ret
hlt
hlt
mov
adc
jmp
cmpsl
inc
icebp
pusha
aad
clc
mov
clc
mov
ret
in
dec
cmpsb
pop
pop
out
ds
sub
mov
movsl
xor
inc
outsb
cmpsl
rcrb
leave
mov
cmp
aaa
jo
or
sub
and
inc
lock
xor
cld
ljmp
adc
jl
pushf
mov
shlb
push
add
inc
pop
adc
inc
icebp
ss
daa
out
push
mov
arpl
inc
add
adc
out
inc
int
stos
and
lcall
mov
loopne
jle
push
push
ljmp
adcb
pop
lock
mov
add
aaa
inc
pushf
and
sbb
movsb
lds
and
push
shl
stos
jl
xchg
in
movl
pop
insl
jne
inc
bound
outsl
hlt
loopne
cld
pop
std
jb
cmp
cwtl
jl
cmp
jp
and
cltd
loopne
jge
mov
xor
roll
sub
push
sub
push
mov
das
add
adc
cmp
mov
mov
adc
mulb
xchg
sti
loope
pop
in
int3
inc
or
shrl
imull
xchg
xlat
mov
pushf
ljmp
cmp
fstpl
mov
xchg
sub
arpl
jg
mov
out
jno
cmc
clc
mov
pop
sbb
jo
or
mov
pop
and
xchg
shlb
or
inc
dec
gs
sti
xchg
leave
sub
leave
leave
ljmp
inc
mov
mov
es
jo
cmp
push
daa
out
add
xchg
popa
mov
loope
xor
xor
fildl
fmull
cwtl
test
xlat
ss
mov
lock
pop
shlb
lcall
js
lahf
mov
gs
sub
addr16
push
or
mov
dec
dec
inc
mov
sub
popa
lock
push
jbe
mov
xchg
call
xchg
xchg
mov
sbb
je
pop
jle
out
pushf
aam
push
xchg
lcall
fstps
int3
sarb
ret
in
sar
in
cli
insl
or
xor
outsl
fsubs
jae
mov
dec
or
out
ljmp
push
adc
scas
inc
out
push
into
cli
mov
dec
addl
mov
pop
pop
inc
test
dec
rcrb
hlt
jmp
mov
sbb
jg
das
or
sahf
les
dec
fimull
shll
lret
lock
or
push
fiaddl
filds
sahf
lds
xchg
and
mov
mov
outsl
jo
mov
fcompl
mov
push
pop
pop
in
cmp
loope
shlb
enter
dec
mov
mov
jg
sahf
xor
lock
pop
mov
iret
mov
lods
sub
or
leave
jae
cmp
hlt
imul
add
out
in
mov
stos
popa
sbb
inc
insb
out
and
sbb
hlt
jecxz
mov
mov
xorl
push
fcomps
lcall
sbb
push
mov
test
negl
mov
movsb
repnz
xchg
insb
mov
cmp
mov
js
jne
cli
add
sti
add
sarb
daa
andb
pop
clc
int
adc
cmp
test
inc
adc
rcll
add
jmp
fistpl
ss
loop
push
inc
rolb
jno
scas
pop
jb
jae
pop
das
jne
lahf
dec
add
cmpb
push
pop
sub
sbbl
cmp
xlat
enter
jge
ficoms
push
push
push
cli
aad
dec
xchg
sbb
pop
xor
push
test
xchg
push
aas
ret
cmp
mov
xchg
movsl
jne
adc
add
leave
dec
pop
push
mov
cmp
xchg
pop
mov
mov
cmp
ja
xor
sbb
fsub
add
lret
mov
cmc
scas
in
sahf
dec
and
rcr
fildl
addb
xor
in
gs
mov
insl
arpl
lods
xor
test
cmpsb
and
dec
adc
cmpsb
xlat
push
sti
inc
adc
push
or
out
xchg
addr16
jge
or
push
lods
jmp
add
push
loopne
test
ss
out
add
mov
push
jno
lds
inc
ds
out
in
push
mov
sub
xchg
xor
repnz
fsubrs
or
jecxz
xchg
and
push
call
sbb
xor
out
xchg
push
incb
bound
fdivl
pop
adc
arpl
movsb
cli
pminsw
ror
ljmp
and
jbe
pop
pop
pop
hlt
xlat
dec
outsb
out
xor
inc
jp
mulb
xchg
or
push
mov
jns
imul
lahf
mov
stc
jno
scas
mulb
out
xchg
sti
fildl
xchg
pop
scas
aas
test
push
dec
adc
adc
adc
mov
adc
jne
mov
push
fstpt
pop
rclb
lret
pop
mov
jmp
cs
scas
insl
js
xlat
cmp
and
enter
sbb
les
xor
ja
stos
dec
inc
jb
hlt
mov
or
cld
add
test
xor
lods
les
ss
pop
aas
popa
notb
enter
mov
gs
fucomp
test
rorb
out
in
dec
push
mov
jl
addb
sbb
push
inc
cmpsb
les
adc
and
or
mov
mov
jl,pt
fldt
mov
insb
add
scas
jb
jb
popa
xor
cltd
outsb
mov
call
push
lcall
dec
push
inc
xchg
jne
roll
fisttps
jae
cmpsb
push
push
jmp
and
jae
cmpsb
lea
imul
and
bound
imul
clc
mov
clc
and
mov
fcmove
stos
pop
xor
sarb
aaa
sbbl
or
xchg
add
adc
sub
jmp
sarl
mov
jecxz
pop
mov
jecxz
add
xchg
pop
inc
jae
mov
scas
and
or
sub
jl
mov
and
cmp
leave
call
imul
adc
loop
pop
mov
inc
inc
out
addl
ret
sarl
out
divb
jmp
cmp
xor
mov
inc
jo
mov
sahf
cmp
leave
scas
fisubrl
call
pushf
mov
xor
pusha
mov
test
jnp
or
add
test
xor
xor
inc
mov
sti
jecxz
add
mov
mov
sub
push
or
in
pop
arpl
and
mov
into
pop
mov
push
ret
and
lods
push
jb
sbb
fdivrl
sub
cmp
cmpsb
push
popa
jle
int3
xchg
fistpll
mov
xorb
push
xchg
addr16
xchg
cs
sub
shll
jnp
xor
pop
mov
out
xchg
pushf
mov
mov
pushf
data16
fcmovnb
or
fwait
lds
sbb
add
jae
into
mov
sti
dec
test
pop
fs
call
cmp
inc
xchg
xchg
mov
ret
leave
ret
sbb
jmp
out
dec
add
aas
mov
stos
loop
fs
test
les
insl
ret
fmulp
aaa
mov
mov
mov
stc
inc
lahf
mov
gs
mov
neg
imul
cmp
pusha
dec
sub
pop
inc
xchg
push
movsl
stc
outsb
push
int3
sbb
dec
rcrb
xchg
fwait
jb
sub
in
push
xor
add
dec
mov
mov
inc
in
xchg
insb
lcall
jno
ja
outsb
and
lcall
inc
outsl
dec
dec
adc
pop
mov
mov
xchg
mov
ja
jo
jae
jecxz
std
and
imul
jmp
daa
adc
lds
xchg
nop
sbb
xorl
ss
inc
pop
fstps
push
pusha
adc
add
dec
xchg
fiaddl
adc
les
push
dec
adc
jbe
mov
push
aad
mov
lea
pop
add
sbb
fildll
push
repz
cmp
arpl
loop
das
popf
rcr
adc
xor
int3
stos
cmp
jg
pushf
push
xchg
dec
xchg
cmpl
mov
mov
adc
xchg
lock
xchg
imul
popa
pop
adc
stos
mov
js
out
mov
movsl
lret
fdivl
mov
sub
xchg
add
movb
xchg
mov
jecxz
lods
fistpl
dec
inc
dec
aad
scas
lret
shll
push
lds
shl
jl
cmp
mov
sarl
popa
inc
push
or
fwait
push
sbb
or
in
add
or
xchg
into
add
insl
cltd
jge
adc
inc
sbb
adc
push
fstps
gs
mov
jbe
cmp
lcall
ja
and
mov
fs
push
mov
faddl
push
sub
pop
dec
roll
cmc
inc
rcll
leave
das
int3
pop
mov
dec
mov
mov
jmp
sbb
sarl
dec
mov
mov
jnp
pop
daa
mov
fwait
and
or
xchg
jno
jge
xchg
shr
lods
xor
imul
inc
daa
enter
out
iret
xchg
inc
shll
test
fstpl
mov
dec
outsb
jbe
ja
inc
orb
adc
adcb
cmp
rorl
fimull
std
jo
test
fwait
jecxz
movsl
xchg
das
int3
or
xchg
cmp
push
dec
stc
ret
pop
mov
and
scas
mov
sahf
fsts
pop
fimuls
or
inc
in
mov
jnp
clc
lcall
std
sub
into
dec
nop
cld
dec
pusha
jne
mov
test
inc
pop
dec
mov
hlt
adc
gs
ljmp
xchg
adc
lods
sub
inc
inc
cmc
jmp
xchg
mov
orl
pushw
pushf
and
mov
or
adc
sti
sub
ds
sarb
inc
cmpsl
adc
mov
cltd
sbb
jmp
in
jl
dec
dec
aaa
mov
cmc
bnd
jb
fdivl
cmpsl
inc
loopne
or
add
jb
xchg
jge
and
mov
aam
test
jl
adc
and
test
leave
std
sub
inc
dec
insb
std
orb
cmp
pop
ja
es
addr16
or
cmp
push
mov
stc
cmp
push
imull
jge
mov
scas
mov
enter
movsl
jo
into
out
js
add
xchg
adc
jle
imul
lods
jg
and
dec
jmp
sub
ret
sarb
cltd
daa
sub
inc
xchg
mov
out
orl
call
shll
add
sub
mov
outsb
ret
push
shrl
jns
xchg
mov
pop
pushf
mov
icebp
fiaddl
jne
hlt
enter
add
mov
fldz
sbb
outsb
dec
shr
add
inc
mov
fldl
in
fistl
dec
notl
mov
mov
loop
mov
pushf
cmp
gs
xor
repnz
xor
gs
pop
lcall
and
stos
mov
cs
sarl
cmpsb
cmp
xor
aad
and
sbb
sbb
push
ds
pop
lock
cmpsl
mov
push
xchg
dec
das
sbb
fisttps
adcb
stos
stos
mov
jbe
psubusb
pop
xor
jg
mov
fwait
add
cmp
imul
adc
lock
mov
mov
push
xor
scas
add
push
insl
mull
inc
sub
or
jmp
mov
bound
bound
inc
out
mov
movsl
push
mov
mov
daa
sub
adc
rol
pop
out
sbb
mov
mull
adc
loopne
cmp
out
jne
sub
ret
sub
push
movsb
push
mov
out
xor
xchg
ret
pop
dec
out
push
xlat
push
push
xchg
or
gs
test
ja
and
lock
sahf
mov
mov
scas
and
push
out
imul
adc
sti
sub
push
sti
stos
lds
test
sbb
je
in
out
push
pusha
dec
cltd
pop
jecxz
mov
mov
jl
pop
lods
aaa
or
add
xor
lock
or
test
andb
mov
mov
fnstenv
inc
ss
dec
sub
and
pop
xor
iret
adc
push
cmp
push
and
cmp
movsb
jp
or
lcall
pop
add
das
icebp
rolb
mov
sarb
idivb
rcrl
fldl
adc
arpl
jns
xchg
rolb
sahf
lret
mov
push
mov
cmp
xor
test
jge
mov
scas
test
mov
cmp
mov
sbb
lret
pop
cmp
loopne
out
movb
mov
inc
dec
xchg
into
in
addb
cmp
movsl
and
push
mov
jge
mov
mov
jno
addl
or
inc
cmp
mov
fs
pop
ja
ret
movsl
push
inc
and
in
adc
push
adc
pop
das
test
jecxz
inc
push
inc
repz
sbb
aaa
mov
mov
and
mov
lahf
sub
cmc
mov
out
pop
pop
arpl
mov
jbe
push
daa
jle
dec
mov
dec
arpl
movsb
mov
jb
sub
mov
cmp
mov
les
enter
les
pop
int3
adc
insb
cmp
cmpsb
mov
mov
cltd
and
lahf
lcall
fs
mov
mov
hlt
mov
subl
outsl
sbb
sub
dec
loopne
lods
sub
xlat
lods
jecxz
cmc
pop
addr16
nop
or
ljmp
stc
insb
sub
add
mov
mulb
shlb
dec
add
mov
ss
jae
fwait
repnz
fisubrl
pop
cli
dec
fsubrp
inc
in
mov
add
push
sub
mov
mov
inc
inc
adcl
lods
adc
inc
push
es
ret
push
rclb
mov
dec
scas
aam
mov
xchg
movq
imull
add
jbe
jecxz
mov
sbb
scas
sub
repz
sbb
outsl
xor
mov
bound
mov
gs
and
out
add
fistpl
fdivs
add
hlt
push
dec
mov
ret
inc
or
into
add
addr16
dec
paddsw
cld
inc
lcall
push
in
dec
enter
mov
out
js
sub
mov
in
pop
addr16
pop
test
mov
dec
adc
outsl
or
std
add
testb
xchg
shl
jp
add
sbb
pop
sub
popl
outsb
imul
cmp
jp
lret
xor
xchg
cmp
push
cmp
cwtl
in
jge
mov
or
subl
add
pop
test
popa
mov
sarb
out
ljmp
mov
sbb
pushf
jo
push
mov
push
repz
andb
int3
adc
cld
fcoml
popf
outsb
lds
sbb
xchg
pop
mov
or
imul
repnz
mov
dec
or
pushf
scas
mov
repz
push
xchg
mov
push
mov
mov
clc
pop
pop
or
xchg
push
xorl
aad
and
mov
push
xchg
inc
push
jae
pop
data16
mov
pushf
leave
test
mov
inc
cmp
push
pop
mov
sbb
xchg
and
and
lcall
nop
rolb
lock
adc
out
push
xchg
jecxz
and
dec
jno
lret
addl
mov
loope
shlb
shrl
pop
ss
test
cmpl
leave
cmp
dec
mov
push
jb
les
nop
cmpsb
icebp
in
jbe
pop
or
sub
dec
cmp
sahf
sbb
xor
xchg
sub
mov
stos
in
jg
jo
xchg
jmp
fs
fxch
ja
enter
in
rcrb
sbb
push
mov
pop
pop
pop
sub
lahf
les
loop
imulb
pop
mov
movsl
out
mov
jbe
xor
fsubs
dec
pop
adc
das
pop
xchg
call
xchg
pop
lcall
cmp
iret
or
or
loope
rorb
sbb
in
vpunpcklqdq
push
xchg
cmpsl
aad
add
shlb
loopne
aaa
rorl
ja
test
mov
in
loopne
sbb
jns
jg
outsl
cmc
mov
sahf
pop
sbb
push
sbb
jbe
xchg
add
push
cmc
add
mov
cli
clc
jnp
sbb
jae
mov
pop
push
fistps
or
push
push
movsl
xchg
mov
xchg
out
nop
test
jecxz
cld
mov
repnz
test
push
test
cld
loop
cmp
mov
ret
insb
std
outsb
les
out
sbb
outsb
lea
inc
je
divl
and
lea
push
dec
in
xor
bound
imul
dec
scas
negl
jbe
mov
pop
jge
sub
jne
es
dec
add
and
insl
into
dec
sub
push
push
notb
fnstcw
movsb
cmp
pop
add
push
in
inc
popa
xor
popf
push
push
add
jmp
push
int
and
sbb
fnsave
fists
pop
fbstp
adc
jp
mov
jle
xor
shlb
sbb
das
mov
dec
jmp
cmp
mov
in
mov
popa
cmp
inc
int3
inc
test
lock
dec
out
add
and
dec
xor
hlt
push
adc
pop
lret
and
stos
fstps
mov
add
pushf
mov
sub
mov
stos
scas
fisubs
cmp
and
rcl
dec
pop
fucomp
stos
das
sarl
test
out
mov
rorl
divl
or
inc
push
sarl
pop
loop
push
adc
cmpsb
mov
mov
mov
sbb
xchg
adc
xor
inc
std
pop
push
cmp
and
xchg
or
mov
test
adc
jbe
xchg
in
outsl
pop
or
pop
pusha
inc
xchg
scas
dec
arpl
test
xchg
jg
insl
xchg
add
cmc
repnz
loope
dec
cli
xor
sbb
mov
repz
cmc
and
sbb
cmpsb
ds
out
sbb
iret
loope
fisubs
mov
mov
and
mov
in
scas
cli
rcrb
inc
imul
mov
in
add
shll
lea
dec
dec
imul
aad
and
cltd
dec
lcall
mov
outsb
sbb
lock
pushf
imul
aad
ja
les
mov
jnp
cli
sbb
mov
xchg
add
xchg
stc
push
cltd
xor
inc
add
ret
mov
add
pop
lahf
or
xor
jg
adcl
push
jge
mov
scas
sbb
sbb
dec
mov
sbb
inc
jae
mov
sbbl
xchg
sbb
fdivs
push
add
jg
jnp
loope
sub
outsb
cmp
jecxz
jnp
in
and
sarl
in
sbb
adc
dec
jmp
jnp
enter
lea
xor
cmp
mov
mov
push
mov
jl
shll
cwtl
xor
and
adc
mov
or
dec
loope
jnp
into
das
xchg
push
xor
jae
and
aas
add
stc
inc
inc
loope
xor
pop
call
pushf
mov
sar
jmp
xor
sbb
push
mov
jle
or
arpl
sahf
out
insl
mov
jnp
pusha
or
push
mov
fidivrs
mov
push
cmp
pop
pop
lds
jno
xor
dec
pop
js
sub
jno
adc
pop
decl
or
jbe
sbb
jne
mov
sbb
xchg
xchg
sti
push
outsl
fistl
adcl
pop
push
xchg
sbb
ret
shlb
lret
push
loop
xor
jle
xor
daa
inc
xor
dec
mov
das
xor
fcoml
sbb
mov
jb
mov
jae
pop
arpl
mov
into
mov
jl
fdivrp
push
test
sub
sub
sbb
nop
jge
adc
jl
jns
lret
add
jecxz
and
mull
or
xlat
sub
mov
jne
pop
jl
pop
imul
push
outsl
fs
fidivs
add
leave
mov
js
out
out
fldcw
push
push
push
enter
insb
stos
dec
pop
jge
mov
bound
popf
stos
shl
imul
ficoms
rcr
or
xlat
daa
stc
cs
pop
add
cmpsl
mov
clc
push
or
mov
ret
test
std
mov
mov
inc
pushf
icebp
xchg
xchg
out
lahf
cmp
and
orl
lea
and
and
int3
sbb
rcrl
lods
push
jo
insl
inc
and
mov
and
and
test
aad
sahf
pop
mov
or
mov
push
jb
jo
cmp
mov
lea
push
dec
adc
rolb
leave
fcompl
popl
mov
insl
fwait
inc
addr16
adc
aas
mov
movsb
dec
clc
cmpsb
cmpsb
cmpsb
pusha
je
les
push
xchg
in
loope
std
lret
xor
mov
mov
repz
jmp
mov
ja
gs
mull
repz
stos
xlat
jne
out
mov
sti
fnstsw
and
mov
jne
lahf
repnz
shlb
ficoms
lcall
add
adc
test
out
mov
scas
mov
arpl
lods
push
enter
ljmp
adc
or
inc
cmp
xchg
loop
pop
fdivr
push
sub
mov
jl
in
ljmp
push
adc
mov
aad
dec
int3
pop
sbb
ds
push
test
outsl
stos
sbb
pop
adc
and
in
loop
addb
push
mov
das
add
add
fadd
test
xor
cli
dec
pop
int
sub
pop
stc
imul
xchg
dec
int3
mov
and
xorb
out
jmp
mov
lods
outsl
mov
shll
push
insl
pop
push
mov
add
in
popa
mov
inc
push
jno
adc
mov
mov
jl
loope
addb
jb
jle
or
stos
fists
mov
xchg
cld
ds
dec
in
jnp
mov
pushf
and
in
jb
mov
cwtl
mov
ljmp
inc
outsl
mov
cmp
xlat
rorb
test
lahf
loope
cmp
leave
and
pop
pushf
xchg
mov
sarl
pop
movsl
cmp
orl
shrb
ds
mov
mov
adcl
popf
loopne
jge
sub
pop
addr16
jg
cmp
lods
xor
mov
es
inc
loopne
nop
out
jl
pop
and
das
cmpsb
mov
out
movsl
jge
roll
enter
je
xor
jmp
loopne
ret
lret
pop
iret
adc
and
xchg
xor
ss
je
ljmp
rclb
adc
out
icebp
pop
xor
dec
iret
decl
dec
cmpsl
dec
jmp
mov
sar
test
or
cmp
xsave
popa
or
je
fnstenv
outsl
mov
sub
adc
push
int
pop
xchg
mov
mov
scas
mov
mov
dec
and
dec
into
mov
jl
sbb
sub
mov
enter
cmpl
cmc
xchg
or
ss
jnp
call
es
lds
into
lcall
ja
pop
loope
in
sbb
arpl
push
xor
inc
xor
stc
dec
push
xor
dec
stos
shrl
inc
jne
jno,pn
cli
mov
lods
dec
dec
push
or
fistl
in
lea
pop
ljmp
out
jg
cli
adc
cmp
dec
aaa
jp
mov
sbb
fsubrs
jp
xor
addr16
pop
gs
push
pop
lahf
xorb
out
cmp
imul
cld
inc
adc
inc
fs
mov
cmp
xor
arpl
inc
dec
mov
sbb
pop
outsb
mov
lock
xlat
sbb
pop
es
imull
inc
or
or
xor
push
jp
add
mov
pop
cs
jg
std
fwait
pop
fadds
sbb
ja
sub
aam
aas
xor
ds
jle
pop
mov
inc
shrd
leave
lods
push
cmc
lahf
test
in
pop
and
mov
in
jecxz
out
mov
rcrb
push
xchg
push
fildll
xor
push
rol
jo
push
sti
pop
add
pop
jle
mov
inc
pop
push
sbb
nop
mov
jno
hlt
mov
cmc
movsb
adc
mov
pop
rcrb
mov
insl
lret
mov
js
fstpl
adc
mov
shlb
rcr
rcr
mov
jno
inc
jp
aas
inc
cmc
mov
int
out
aas
add
mov
in
jae
lods
fs
mov
enter
xchg
mov
adc
stos
cs
mov
sub
mov
out
mov
mov
inc
loopne
push
inc
cmp
and
jnp
int
sub
dec
int
aam
jo
into
mov
cmovs
adc
aad
dec
or
sbb
addr16
fnstenv
cmp
push
frstor
jae
lahf
repz
lock
stc
push
cmp
test
dec
data16
js
fbstp
ss
shlb
pop
add
dec
cmpb
stos
xor
cmp
mov
xor
sbb
mov
push
mov
cmpsb
ja
cwtl
test
push
test
xchg
into
lock
adc
gs
call
sbb
in
push
jle
push
mov
fcoms
pop
push
push
imul
std
fisubl
cmovp
stos
xor
and
or
xor
or
push
sbb
or
lret
xchg
scas
ja,pn
push
test
sub
jne
aaa
sub
gs
and
dec
rcrb
mov
push
jp
std
insb
push
xchg
jge
enter
ficompl
stos
push
and
xlat
push
scas
and
movsl
and
cmc
jnp
cmp
sahf
push
push
in
and
jb
mov
pop
or
xchg
push
and
test
xor
scas
ret
adc
rcr
test
lock
cmc
pop
mov
xchg
int
add
cli
popl
mov
mov
add
sub
stc
js
push
shld
sub
movsl
cmp
dec
js
xchg
shrl
pop
in
mov
lahf
test
mov
call
ds
push
lcall
in
jmp
in
xchg
cltd
pop
xchg
mov
mov
mov
and
lods
cmp
xchg
sub
inc
xchg
fildll
push
pop
daa
out
dec
push
pop
pusha
jo
imul
add
test
mov
push
les
clc
addl
mov
stos
jnp
add
icebp
cmp
lret
cli
and
jno
xor
mov
pop
mov
fwait
imul
push
lock
push
test
pushw
movsb
sub
int3
inc
jl
sbb
sub
es
loope
lds
bound
cmp
mov
cmp
aas
pop
testl
jns
and
or
and
dec
frstor
lretw
push
inc
adc
in
fdivr
inc
mov
sbb
fbld
jnp
sbbb
jae
cmp
pop
jmp
mov
cmp
data16
xchg
pop
icebp
movsl
cmpsl
adc
ret
push
loopne
push
into
xchg
data16
cltd
push
in
fmuls
jmp
push
leave
and
in
mov
push
rolb
xchg
push
add
imul
sub
out
mov
rorb
mov
cld
cltd
xor
and
stos
fadd
inc
int
mov
cmp
dec
mov
loop
shl
outsb
js
dec
es
lret
mov
arpl
js
jle
inc
mov
push
filds
scas
jno
in
out
mov
sub
das
sub
fdiv
mov
outsb
cmp
out
cmp
dec
or
jae
inc
lret
repnz
icebp
scas
dec
shll
and
or
inc
rol
adc
rcrb
mov
mov
cmp
lahf
out
add
mov
ret
adc
inc
leave
clc
repnz
pop
push
aam
dec
jle
rcl
sub
adc
mov
add
mov
push
jl
mov
jo,pn
int
mov
lock
dec
xlat
test
test
and
mov
push
test
orb
or
fcmovbe
cmpsb
test
mov
sti
dec
je
inc
cmp
xchg
inc
ss
sbb
add
and
xor
outsl
or
dec
lcall
lock
push
jno
mov
pop
add
xchg
data16
jecxz
inc
hlt
lock
push
adc
fwait
sub
les
mov
xchg
mov
ret
mov
xor
fnstsw
rolb
mov
push
pop
loop
mov
or
inc
mov
popa
sub
call
loope
xchg
je
out
cmp
pop
popa
cmpsl
jb
add
ljmp
sub
sbb
in
add
mov
pushf
jae
dec
add
mov
dec
shl
add
fdivrs
mov
imul
fdiv
jno
adc
bound
xchg
fistps
push
cmp
out
mov
push
stos
pop
cmpb
push
cwtl
xchg
pop
fldl
gs
dec
xor
int
sbb
and
outsl
xchg
mov
test
js
push
jecxz
pop
sub
push
or
jp
repnz
or
popa
aaa
test
rclb
push
xchg
mov
mov
pop
data16
adc
jg
lods
insb
mov
push
jnp
je
lcall
sbb
fwait
xchg
push
icebp
mov
loopne
ds
adc
loop
dec
ffreep
adc
push
mov
fnstenv
movsl
cli
js
clc
out
loop
cltd
mov
jp
ret
xlat
sub
cmpsb
add
xor
icebp
popf
push
cli
lds
push
mov
xchg
pop
xchg
add
inc
wrmsr
fucom
cmp
pop
jns
sahf
dec
pop
inc
push
dec
cmp
mov
inc
sub
inc
sub
and
xchg
inc
scas
arpl
mov
xlat
out
ret
mov
ret
pop
pop
xlat
and
jg
movsl
out
fimull
push
adc
loop
or
arpl
daa
ss
mov
xor
lea
jae
lods
sub
int
push
fildl
jp
push
aad
jne
out
xchg
sub
jbe
test
call
mull
cld
icebp
out
jno
or
out
or
lret
inc
shl
lret
test
push
fs
jge
stc
out
out
loop
xor
mov
push
cli
jp
das
dec
push
push
mov
imul
and
mov
adc
sub
ret
xchg
js
negl
and
jne
mov
nop
arpl
or
icebp
sub
mov
jge
fsts
hlt
adc
andl
int
ret
das
mov
inc
mov
out
std
and
mov
outsl
sub
cmp
jae
shrb
and
pop
adc
or
test
sub
pop
fstps
xor
xchg
mov
flds
das
xlat
jmp
fisubrs
and
xor
pop
in
mov
pushf
mov
jl
lret
pop
iret
cmp
into
hlt
popf
dec
repz
adc
les
sarb
cmp
mov
incb
pop
lea
xor
xor
or
and
jge
movsl
ja
lock
ret
fimull
ret
lods
dec
mov
movsl
push
cli
lds
jmp
pop
xor
test
das
mov
aaa
es
cmpsb
hlt
dec
frstor
das
inc
lea
movsb
sub
cmc
stc
scas
jns
mov
popf
inc
in
dec
cmpb
inc
adc
sbb
mov
lret
in
pop
dec
or
aas
inc
add
pop
push
sahf
sahf
nop
movsb
mov
into
xchg
std
pop
jae
jge
repnz
aaa
mov
iret
xlat
stc
daa
push
popf
daa
int
cmpsb
and
sbb
insb
mov
inc
repz
inc
lods
pop
pushf
xchg
mov
dec
push
lret
imul
xchg
xor
out
mov
mov
std
and
mov
push
insl
cmp
scas
add
sahf
adc
jl
jbe
add
adcb
sub
mov
mov
dec
fnstenv
push
data16
push
jne
mov
pusha
xchg
mov
xchg
push
pop
cmp
push
mov
mov
sub
mov
mov
fidivs
add
push
sarl
xchg
cltd
int
dec
out
cmpsb
pop
pop
cld
jnp
mov
push
mov
out
ror
ja
insb
adc
loope
or
in
ja
inc
insb
js
out
sarl
dec
or
fwait
add
js
lods
pop
add
fcompl
xchg
sahf
aam
or
or
outsb
andb
jnp
push
fsubl
subl
pop
sbb
mov
inc
fwait
out
mov
mov
aas
popa
in
push
out
icebp
daa
jno
sub
fidivs
adc
xor
out
test
or
pop
inc
lret
ds
jbe
xor
not
and
dec
sarb
xor
pop
inc
jo
cmp
iret
cmp
jecxz
mov
test
adc
shlb
cmp
lahf
sbb
aaa
fnstcw
stos
aas
dec
inc
movsb
je
imul
cmpsb
into
nop
pop
imul
ds
cld
pusha
sub
cli
popa
push
dec
adc
scas
inc
lret
arpl
and
mov
mov
cmp
data16
mov
mov
scas
int3
jmp
sbb
roll
loope
sbb
dec
adcl
fldt
sub
cmc
mov
jle
rolb
fcmovnu
out
sub
mov
push
bound
inc
test
lods
outsl
sbb
bound
test
inc
jge
lcall
mov
push
loopne
aaa
enter
aam
fwait
mov
push
push
mov
cmp
dec
es
add
scas
push
ja
dec
roll
mov
mov
daa
mull
ja
fsubrl
adc
pop
xor
pop
aad
outsb
jg
js
push
rcrl
addb
dec
jmp
notb
sti
test
push
and
lock
scas
addr16
lea
mov
xor
das
dec
lea
mov
or
mov
insl
adc
xchg
cmp
push
ds
dec
ja
add
mov
mov
fisubrs
push
fcmove
dec
test
rcll
mov
dec
stc
out
pop
hlt
subb
xor
fwait
xor
lock
and
add
out
sbb
mov
je
add
or
jns
imul
inc
test
jbe
push
pop
cld
mov
test
test
mov
or
cmp
hlt
bound
sub
cmp
hlt
into
das
ss
mov
fcoml
mov
or
fisubs
add
movsb
outsl
xorl
xor
mov
adc
mov
sub
jne
cmpsb
pop
and
cmp
sub
not
icebp
pop
jno
push
sub
jno
fs
das
sub
cmp
mov
nop
loope
cmp
movsb
xchg
adc
stos
xor
outsl
popa
test
mov
xchg
mov
ss
xchg
mov
popa
pop
data16
cmp
frstor
or
mov
sub
add
xchg
loope
add
jmp
sar
in
sub
loopne
and
fdivr
daa
sahf
ret
ljmp
cmp
jge
jmp
mov
mov
push
popa
loop
imul
add
sarl
lea
jns
pop
fldl
addr16
xchg
cmpsl
stos
add
lret
scas
jo
push
nop
mov
lret
test
push
xchg
sbb
pop
pop
fmul
or
jp
and
sub
mov
and
adc
jl
adc
stc
cmp
scas
pop
jp
out
lods
fdivrs
lret
sbb
int3
pop
iret
pop
pop
mov
loope
mov
daa
idivl
lahf
fldt
loope
cwtl
cmp
loopne
xchg
jl
iret
scas
ficompl
add
test
and
shl
imul
nop
push
je
fwait
push
jb
push
sub
xor
into
mov
jp
adc
shrl
mov
pop
imul
xchg
dec
dec
sub
jo
xor
movsl
xchg
fmulp
and
lods
mov
cli
xor
clc
mov
push
fnstcw
ljmp
mov
movsb
xchg
push
mov
int
dec
jno
fsub
xchg
icebp
lret
xchg
es
jb
pop
ret
sbb
rcll
in
cmp
ljmp
test
int3
popf
or
pop
push
rcrl
daa
dec
cmpsl
mov
pusha
sbb
xor
lahf
adc
pop
push
mov
insl
mov
mov
jmp
ret
fnsave
pop
pusha
loopne
in
push
lea
jo
adc
add
and
inc
gs
mov
lds
out
shrb
fists
aam
mov
add
jmp
aas
inc
arpl
mov
ficoms
mov
sbbl
xor
popf
in
mov
dec
sbb
jmp
add
xor
pop
in
andl
and
movsb
and
xor
jp
popf
adc
jecxz
jb
adc
inc
inc
gs
outsl
inc
sbb
fcmovbe
jge
inc
loop
inc
cmpsb
mov
cmp
jle
ret
jb
add
ds
dec
int3
xchg
dec
cli
cmpsb
test
jp
sub
cltd
mov
push
mov
adc
test
cmpsb
mov
or
push
jno
gs
cmc
std
jne
inc
cmp
jo
bound
jmp
sbbb
je
sbb
rcrl
xchg
ja
adc
movb
sbb
mov
mov
ljmp
ficomps
lods
xor
out
add
roll
xchg
xlat
inc
push
push
mov
and
mov
insb
pushf
adc
jne
outsb
sbb
add
or
lock
push
xor
or
push
loop
shlb
adc
cmc
cmpl
jae
xchg
or
inc
loop
loope
cmp
aam
push
pop
inc
clc
lock
adc
js
xor
insl
mov
lock
xor
insl
popf
push
xor
dec
mov
lods
arpl
sahf
inc
adc
pop
or
ja
mul
jo
add
mov
std
call
pop
mov
dec
xchg
xchg
mov
xchg
jmp
das
mov
int3
and
mov
clc
test
fistpll
xchg
add
add
pop
inc
adc
sub
mov
sub
dec
cmp
scas
aam
repz
adc
lret
mov
aaa
cmc
mov
push
arpl
sbb
daa
das
adc
in
out
shl
jnp
mov
jp
mov
cmp
xor
mov
mov
cmpsl
adc
cmp
das
pop
repnz
fimuls
mov
adc
aam
decb
and
shlb
jne
jge
std
cmpsb
pop
daa
adc
adc
fistpll
mov
pop
cld
pop
pushf
xchg
maxps
and
je
out
test
fadd
mov
lcall
and
xor
push
std
pop
dec
scas
jno
xor
data16
pop
adc
jne
xor
mov
push
movsl
stos
jae
test
cmp
push
cmpsb
xchg
ds
push
xchg
mov
push
imul
and
imul
test
dec
jge
xchg
cmp
pop
or
jl
xchg
xor
inc
mov
push
push
out
aas
push
lods
lock
leave
test
sub
gs
lret
lds
das
mov
dec
and
ret
test
sbb
out
rcrb
cltd
in
pop
repz
sbbb
inc
cld
pop
adc
addr16
sub
loop
mov
in
cmp
or
or
xchg
test
mov
cmp
cmp
in
flds
cmpsb
or
fwait
rolb
mov
fnsave
scas
ficomps
sub
xchg
aad
jge
pop
adc
loopne
inc
mov
mov
dec
jg
mov
pop
cmp
sbb
cwtl
notl
dec
cmpsl
xor
mov
lods
mov
pop
jnp
stc
mov
xchg
sub
adc
aas
inc
lock
xchg
jge
push
std
fsubl
ret
sub
mov
in
mov
enter
test
sbb
in
mov
pop
popf
adc
adc
leave
push
sbb
shll
sub
ljmp
test
jecxz
and
xchg
hlt
dec
fisubrl
mov
xchg
cmpsl
stos
inc
andb
cld
scas
daa
jp
aas
subb
out
adc
cmp
push
pop
imul
movsb
xchg
inc
in
pop
cltd
mov
sahf
cmp
ret
xor
and
mov
pop
pusha
repz
out
inc
and
and
push
hlt
adc
addl
enter
sbb
test
fistpl
or
enter
cld
push
and
fiaddl
test
enter
sbb
or
aad
lds
push
out
arpl
xchg
movsb
xchg
fucompp
js
iret
mov
mov
adc
cltd
and
sbb
cs
dec
sub
fisubrl
jecxz
ss
add
jg
jg
lods
insl
xchg
sbb
into
mov
cmp
add
xchg
jle
pop
mov
test
lock
sub
pop
push
mov
daa
shll
movups
sarl
stos
lds
std
leave
lahf
or
cmp
inc
cmp
dec
ja
jns
mov
fwait
and
dec
pop
daa
jl
stc
push
push
lret
out
mov
sti
imul
in
mov
sub
dec
xor
mov
mov
adc
out
cmp
std
test
mov
out
adc
mov
sub
mov
xor
icebp
cmp
popf
outsb
lret
loop
insb
pop
pop
jbe
rcl
test
xchg
into
pop
lea
inc
xchg
shr
cld
mov
mov
xor
aam
stos
lea
pop
or
es
popf
data16
adc
gs
mov
push
push
adc
inc
mov
dec
add
or
push
test
pusha
sub
sbb
test
test
mov
jo
cmpsb
fisubrs
hlt
je
dec
mov
add
mov
leave
insb
jo
push
repnz
push
leave
push
xor
add
cmp
xchg
push
xor
call
js
pop
fs
in
pop
or
dec
fcomi
cmpsl
pop
scas
stc
mov
mov
ss
push
ror
push
andb
xchg
dec
dec
test
mov
and
adc
mov
xor
pop
jl
popa
xor
shl
in
aas
loopne
xchg
add
in
es
lods
je
jb
sbb
ret
add
mov
jp
outsb
jns
call
enter
cmp
out
or
mov
push
push
xchg
pusha
mov
cli
adc
mov
popfw
loopne
or
je
test
mulb
xchg
imul
push
cltd
mov
mov
sahf
and
xor
add
outsl
or
nop
lds
rorl
pop
call
pop
add
jmp
xlat
mov
cmp
and
push
movsl
lods
jl
das
or
add
push
aad
push
push
cmpsb
out
mov
inc
pop
xchg
rcrl
rol
outsl
cmp
inc
pop
pop
hlt
xchg
adc
jge
dec
cmp
add
adc
cmpsb
cmp
jmp
jp
push
outsl
jne
data16
mov
rdpmc
sub
in
sbb
inc
xchg
mov
addr16
and
gs
fwait
mov
in
mov
fucomi
dec
sahf
push
rorl
insl
sbb
mov
add
daa
xor
xchg
jl
pusha
xor
mov
mov
xor
and
push
xor
sub
mov
mov
pop
and
ret
mov
xchg
adcb
repz
scas
cmp
andb
jo
outsb
int3
ljmp
xor
adc
insb
int
xchg
fldl
loopne
or
addr16
lret
mov
or
mov
aas
adc
adc
push
jg
imul
pop
fwait
mov
aaa
fs
std
fnsave
mov
nop
pusha
int3
hlt
lahf
xor
stc
xchg
add
jns
lock
js
insl
jmp
scas
and
xor
mov
add
std
test
add
xor
fldcw
lds
mov
cmc
sbb
lea
dec
or
pop
data16
push
xchg
movsb
pop
push
imul
lret
xor
xchg
ja
stos
adc
cmp
outsl
fwait
je
bnd
push
lods
outsb
inc
fimull
imul
pop
dec
lods
lcall
pop
aas
or
pop
movsb
jno
es
shll
sbb
mov
pop
shll
xchg
leave
pushf
jg
pusha
pop
push
data16
inc
aam
mov
shll
dec
ret
addr16
cmp
or
dec
mov
push
in
inc
or
cmp
das
mov
arpl
sbb
fwait
aad
jl
scas
inc
pop
shll
xadd
jne
test
ds
add
xor
inc
mov
xor
xor
jecxz
daa
push
pop
lds
add
scas
dec
aad
jmp
out
pop
ret
xor
mov
out
fists
mov
lret
sbb
cmp
out
inc
das
mov
or
dec
push
mov
mov
mov
call
data16
mov
lds
leave
adc
aad
mov
xor
ja
xor
jne
adc
movsl
pusha
mov
inc
cmpsb
adc
insl
inc
xor
addl
and
movsl
and
cmc
lds
push
aad
adc
cld
int
cwtl
gs
sbb
aam
ljmp
mov
push
jnp
jne
loop
xchg
scas
call
fs
jb
cwtl
jo
mov
add
imul
enter
and
mov
cmp
jle
mov
pop
mov
popa
jbe
xchg
daa
sub
call
aam
scas
pusha
es
andl
push
fstps
mov
out
add
lret
ss
sub
sub
out
or
cltd
cli
mov
mov
pop
mov
popf
adc
sarl
or
std
or
int
jb
mov
jb
lret
lods
push
sub
pop
inc
outsl
loopne
jo
pop
incl
add
int
iret
pop
scas
cli
or
out
cmp
pop
xchg
fs
push
shlb
pop
jne
cld
mov
leave
movsb
mov
and
cmp
xchg
sub
pop
popf
out
icebp
iret
inc
lods
inc
nop
sub
imul
mov
into
loopne
fdivs
out
adc
aaa
push
push
mov
jae
dec
inc
xor
rcrl
sarl
fst
adc
scas
data16
es
loopne
xor
into
jg
mov
fwait
adc
test
pop
mov
rcll
gs
jg
pop
xorl
jecxz,pn
in
sti
movsb
jg
fimuls
or
int
into
mov
sbb
mov
addb
pop
movsl
add
mov
inc
dec
shr
mov
dec
sub
cmp
push
pop
mov
int3
enter
repnz
out
push
icebp
or
mov
popa
add
fcos
cli
and
leave
and
xlat
fnstcw
lods
push
sbb
pop
or
and
mov
stos
push
jnp
jne
ds
es
pop
andb
pop
outsb
cwtl
js
js
push
shr
push
jecxz
xor
xchg
xor
add
subl
push
or
mov
mov
daa
mov
jns
mov
xor
inc
mov
shrl
cmc
aad
or
mov
popa
jle
es
add
into
dec
in
addr16
inc
lds
pop
push
inc
push
jb
jbe
dec
pop
ss
mov
push
cltd
dec
lcall
mov
jae
bound
cwtl
dec
jae
adc
dec
outsb
push
or
stc
xchg
sti
sub
add
jb
push
xchg
xor
imul
std
in
pushf
pop
lahf
xchg
xlat
cli
or
lea
fidivrl
inc
mov
imul
xchg
fisubl
push
pop
fidivrs
push
xchg
sbb
adc
fcmovnb
xchg
xchg
xchg
mov
outsb
into
xchg
xchg
imul
inc
js
dec
lret
jg
pop
int
pop
and
inc
es
data16
cmp
pop
inc
pop
int3
jbe
jle
dec
mov
in
jecxz
in
fisubs
icebp
mov
xor
movsb
jnp
arpl
int3
cmp
test
aaa
outsb
xchg
push
out
pop
adc
je
mov
pop
and
pop
sahf
sub
push
test
data16
scas
mov
mov
pop
cmp
jg
loop
add
arpl
idivb
orps
cmp
bound
addr16
fsubr
add
cmp
shl
sbb
stc
into
into
in
outsb
jge
cli
pop
jne
sbb
loop
lods
dec
push
cvtdq2ps
jecxz
shr
pop
int3
enter
addl
sbb
pop
test
xor
jno
mov
cmp
lods
jns
fs
lods
inc
jp
jle
sub
xchg
or
or
mov
aam
popa
pcmpgtw
jne
nop
mov
shll
push
repnz
int3
mov
rol
ss
popl
in
hlt
push
movsb
fcmovnbe
popa
mov
push
popf
xchg
pop
or
mov
imul
mov
sahf
dec
pop
pop
push
das
negl
out
pop
je
add
mov
jl
int
in
adc
aam
ljmp
push
iret
and
addr16
stc
mov
pop
js
movsl
inc
inc
sahf
decl
test
dec
dec
test
outsb
nop
and
stos
imul
xchg
rol
pop
out
out
andl
rorl
int3
xchg
add
xor
imul
stc
fcompl
rorl
pop
mov
cmp
imul
aas
roll
mov
jb
pop
sbb
scas
push
lret
adc
sbb
icebp
add
xchg
adc
enter
cld
cmpsl
aad
cmpsb
add
imul
fwait
add
mov
mov
je
mov
mov
mov
fists
lods
and
mov
dec
add
test
mov
lea
cmp
jg
outsb
fiadds
out
inc
cmp
jae
inc
loope
das
jnp
push
add
lret
push
xchg
adc
incl
aas
push
add
dec
lods
push
data16
data16
pusha
sbb
cmc
and
jp
mov
push
jno
int
fsubs
pusha
call
inc
or
std
sub
in
loopne
xchg
repz
cmp
push
mov
cwtl
lret
push
dec
outsb
and
mov
aaa
dec
dec
and
repnz
sub
fstps
iret
adc
dec
xor
repnz
test
in
or
pop
je
enter
mov
mov
mov
shll
shrl
ss
mov
sub
mov
leave
pop
dec
loope
and
pop
test
loop
into
mov
ss
fmull
aad
xor
repz
adc
or
out
lea
leave
decb
aam
out
imul
into
jnp
cmpsb
cwtl
mov
call
repnz
jge
test
xor
rcl
dec
outsb
xchg
sbb
or
outsb
xlat
inc
jecxz
dec
repz
push
mov
ds
je
sti
sub
aam
clc
mov
or
cmp
xor
xor
fwait
cli
cld
push
dec
sub
into
pushl
inc
dec
data16
fisubl
rclb
xchg
xchg
cmp
es
rorb
test
pop
stc
jl
popl
dec
jle
movsb
mov
xchg
pop
mov
cmpb
repnz
test
mov
add
sti
pop
push
cmp
mov
inc
mov
inc
cli
dec
push
pop
sarb
mov
jg
mov
icebp
and
fdivrl
out
adc
push
mov
xorb
and
std
push
lahf
jecxz
negl
push
call
outsl
lock
mov
ja
inc
outsl
aam
nop
or
push
loopne
adc
popa
imul
in
add
int3
push
dec
jns
mov
notl
xchg
stos
pop
mov
dec
mov
rcll
adc
sub
lret
cltd
std
add
or
mov
leave
test
ficoms
or
add
mov
sub
stc
mulb
cmpl
xlat
lods
and
jns
mov
and
sub
loope
ret
xchg
pop
xchg
pop
lods
bound
loopne
jmp
add
adc
mov
mov
aam
mov
sahf
loopne
add
xchg
xchg
xor
decl
popa
mov
cmp
cmp
clc
cwtl
xchg
fmul
lcall
test
repnz
pop
lret
test
icebp
daa
sub
xchg
ficoml
dec
pop
leave
cld
jecxz
xchg
movsl
push
js
fstp
xor
lock
and
fwait
movsl
dec
or
pushf
xchg
mov
pop
aaa
lock
mov
jge,pn
mov
ja
loopne
dec
xchg
jp
stos
rsm
xchg
cs
or
adc
je
jecxz
dec
jb
fnsave
dec
test
inc
lods
mov
xor
xor
data16
notl
jl
jg
and
pushf
or
jne
sub
fisubs
mov
orb
pop
or
loopne
sbb
xchg
test
cltd
sub
imul
mov
mov
pop
jno
cmp
push
ja
xchg
aam
pop
cmp
sbb
inc
in
cmpsl
or
pop
negl
lret
fwait
mov
add
gs
scas
enter
es
push
and
inc
aam
xor
fwait
inc
das
testb
sbb
mov
test
fcomp
lods
xor
xchg
pop
xchg
sbbb
jae
rcrl
lahf
adc
sarb
aas
pop
xchg
stos
pop
adc
aam
sbbb
add
cs
push
push
cmp
sub
cs
or
mov
imul
xor
cmpsl
xor
xor
sub
jne
push
jg
imul
jns
mov
add
mov
mov
cs
add
insl
fs
pop
sahf
dec
xor
add
shrl
nop
out
mov
lahf
fwait
or
fsub
sub
imul
test
xor
cmp
mov
ljmp
xchg
stos
dec
std
inc
mov
sahf
cmp
out
mov
pop
mulb
or
stos
mov
negl
sub
jne
in
push
cwtl
mov
mov
push
push
int3
in
pop
mov
lahf
push
addr16
int
inc
int3
lahf
outsl
dec
std
lds
mov
shll
in
clc
cwtl
mov
ja
lods
cs
jg
pop
add
mov
pop
movsb
loopne
in
mov
scas
and
inc
pop
pop
test
cmp
jmp
nop
pop
out
mov
notb
cs
mov
push
int3
jmp
movb
push
push
in
divl
sbb
scas
je
loopne
xchg
test
rorl
andl
mov
scas
mov
cmp
out
mov
testb
sub
cmpsb
rolb
ja
pop
inc
and
cmc
mov
stc
xor
je
dec
addr16
neg
inc
mov
add
mov
add
icebp
fmul
inc
insl
and
sarl
jnp,pn
ds
lods
or
into
push
cmp
popa
sbb
pop
pusha
add
pop
push
xchg
sbb
rorl
enter
aad
aas
jno
test
mov
fdivr
ja
push
scas
jb
loop
xchg
sbb
adc
loope
jle
fadds
cli
sbb
sti
cmp
dec
lret
xor
test
loop
stc
cmpl
fldt
xchg
outsb
ret
jno
pop
dec
mov
dec
jmp
pop
jnp
push
iret
mov
out
pop
xchg
ret
xor
jmp
jne
mov
inc
jp
call
and
push
pop
jo
shll
and
insl
rcl
inc
mov
dec
mov
sahf
lds
push
out
repnz
shrb
aad
scas
lret
and
enter
lcall
inc
cmp
aaa
insb
mov
dec
dec
xchg
repnz
cmp
inc
add
mov
xchg
jl
dec
out
adc
popa
mov
loop
jecxz
call
roll
in
movhps
mov
inc
outsl
pusha
test
dec
dec
nop
sbb
jg
rcrl
mov
insl
out
shlb
adc
aaa
fs
cmp
call
in
sbb
icebp
movsl
test
xchg
dec
xor
push
into
lcall
sarl
popf
sbb
popl
xchg
mov
inc
lret
and
mov
adcl
arpl
jnp
adcb
pop
and
adc
inc
cmp
sbb
inc
mov
inc
xchg
adc
inc
cmp
aam
divl
mov
sub
or
stos
jno
dec
gs
mov
fwait
out
sbb
add
outsl
and
or
push
mov
testl
insb
jo
movsl
inc
pop
dec
ret
aad
sbb
sarl
inc
push
lret
je
repnz
lods
clc
sarb
mov
mov
pop
stc
int
push
je
fwait
gs
sub
inc
inc
cmpsl
lods
push
pop
fs
cmpl
int
push
imul
jns
or
aaa
pushf
testl
mov
xlat
pusha
push
xchg
jae
add
dec
loop
testb
inc
jge
or
and
popa
shll
mov
stos
sbb
inc
inc
fstl
bound
imul
mov
cmpsb
cmp
inc
pusha
push
pop
jnp
jns
jmp
fmull
mov
mov
ss
shl
leave
pop
or
nopl
leave
test
pop
push
iret
push
in
xchg
jmp
push
mov
scas
imul
rcll
outsb
cld
lret
ret
sbb
dec
lock
out
fstpt
push
jnp
mov
jb
jl
ffreep
cwtl
fistps
mov
or
movsb
mov
shl
fcompl
dec
hlt
lods
insl
fldenv
in
iret
jne
push
and
pop
mov
cmp
sbb
lret
lret
inc
cli
pop
fdivs
jns
ds
fdivrs
add
insb
jno
inc
mov
rcrl
inc
rorb
and
popa
pop
inc
fnstsw
mov
pop
shll
ja
iret
sub
iret
idivb
int
sbb
shlb
and
add
dec
add
jge
xchg
jmp
mov
out
fidivs
insl
incl
or
sbb
jg
push
aaa
sub
imul
xor
or
or
or
and
add
jle
leave
sbb
lds
ds
cmp
adc
adc
inc
xchg
inc
call
or
mov
in
xor
inc
mov
shlb
lock
pop
mov
ror
in
pop
add
jl
adc
int
mov
mov
call
jne
mov
or
arpl
in
sub
mov
mov
xor
adc
add
xor
lds
js
imul
lcall
add
lcall
mov
push
outsb
pop
mov
sub
out
subl
mov
sahf
xchg
iret
add
fidivrs
pushf
cmpsb
mov
ret
into
adc
mov
and
jmp
dec
adc
lcall
andb
cld
es
test
add
inc
sub
jmp
test
lods
rorb
jne
fdivs
aas
in
xor
jge
imul
push
jb
iret
push
mov
add
pop
jl
lock
lock
xor
fstpt
cmovb
ds
mov
push
repz
pop
lret
js
cmp
scas
imul
cltd
iret
enter
push
add
lock
int
dec
lret
inc
rcll
imul
mov
mov
ds
movsl
popf
cmp
adc
jl
and
sbb
xchg
test
sbb
mov
cld
scas
fdivrs
loop
mov
movsb
bnd
clc
hlt
fbld
rcrl
and
push
iret
xchg
sbb
lcall
adc
or
orb
scas
cli
push
cld
icebp
in
pop
cmp
mov
inc
mov
dec
jecxz
into
jl
push
jne,pn
and
repz
or
push
pop
sub
add
mov
in
jmp
fisubrl
addr16
aam
push
imul
pop
rorl
js
stos
leave
xor
push
lahf
jno
ret
stos
scas
js
and
insl
sbb
mov
mov
sarl
loope,pn
fwait
mov
gs
adc
outsb
ljmp
bound
in
pop
add
adc
sarl
mov
mov
subb
jns
mov
test
push
mov
mov
and
push
imul
and
mov
mov
movsb
cmp
popl
sbb
inc
mov
cld
jge
loopne
loope
aad
aaa
mov
negb
push
popf
fdivl
dec
mov
jecxz
movsb
fldl
scas
push
outsb
xchg
xchg
xchg
jb
lods
jno
clc
push
xchg
lods
int
jle
test
rclb
ss
add
int
or
xor
mov
sbb
es
jne
xorb
and
sbbb
js
fisubrl
jne
rcrb
dec
pop
rorb
fmuls
push
push
movsb
rcll
jmp
ss
jle
mov
add
movsl
sahf
outsl
sbb
jecxz
inc
xchg
stos
cmc
fstpt
je
dec
imul
iret
in
pop
push
jp
add
add
cmpsl
mov
push
cmp
ficoms
or
ud2
pop
push
insb
loopne
pop
imul
fidivrs
movsb
mov
arpl
cmp
jnp
sti
cwtl
cld
popf
xchg
mov
fisubrl
adc
imul
mov
addr16
int
jmp
inc
fldl
cmpsl
aaa
inc
movsb
inc
enter
lcall
test
mov
cld
sbb
inc
aad
les
and
or
inc
pop
mov
aas
or
nop
in
cmp
test
pop
scas
les
test
adc
jb
cmpsb
or
pop
xchg
mov
xor
pop
in
adc
sarl
ret
rcll
jb
jne
test
and
mov
dec
mov
dec
mov
push
push
sub
fldl
dec
negb
mov
lret
push
push
adc
jle
push
push
mov
lcall
dec
jnp
shll
sub
sbb
push
out
or
or
sub
fcompl
mov
mov
mov
sub
jecxz
jp
push
dec
mov
or
out
cmpsl
fdivl
ficomps
fbstp
enter
or
rclb
push
sbb
data16
aam
inc
vrcpss
popa
adc
or
add
imul
sbb
jmp
ret
push
fstp
lret
bnd
scas
mov
jnp
pop
sub
incl
adc
inc
imul
shll
iret
out
lea
fbstp
and
mov
pop
out
or
lahf
mov
lock
aas
rorb
ror
mov
mov
ret
cs
std
fsubl
sahf
negb
pop
clc
push
jne
nop
pop
jmp
cli
jnp
call
sbb
mov
adc
xchg
or
loopne
fnstcw
xchg
int3
paddsb
aas
push
sub
mov
jo
xor
neg
pop
loop
imul
into
fdivrl
dec
mov
and
jle
icebp
sbb
push
mov
mov
shll
cmp
pop
loop
cmp
mov
mov
fwait
insb
or
sub
mov
jl
or
cwtl
aas
daa
lea
lahf
test
roll
ja
add
ss
les
dec
aas
cltd
mov
sti
out
dec
mov
call
insb
addr16
testb
xchg
jl
dec
xchg
pop
mov
or
add
out
fldenv
int3
test
dec
add
xchg
loopne
arpl
gs
cld
les
add
cmp
xchg
xor
out
jecxz
ficomps
mov
test
jne
das
ja
sarl
inc
sub
mov
cltd
add
push
repnz
scas
push
icebp
lahf
sbb
sub
pop
sahf
ret
jno
jbe
out
inc
sub
cmp
notb
or
cmp
push
adc
ret
jo
int
mov
out
adc
pop
xchg
and
or
jae
cmp
dec
test
jl
data16
in
fdecstp
fcomps
pusha
in
mov
lods
add
pop
push
push
cmp
xor
adc
pushf
ljmp
mov
out
and
lock
adc
arpl
push
les
test
lret
out
sarb
ljmp
pop
pop
add
inc
jo
lcall
sahf
rcll
ret
out
insl
sub
cmp
mov
bound
adc
ja
sti
mov
pop
pop
sbb
out
xor
mov
pop
rolb
movsl
cmpsb
adc
movsb
cmp
xchg
jns
or
xor
pop
pop
or
push
cltd
pop
in
fists
adc
mov
roll
inc
repnz
std
adc
jl
cmpsl
sub
jmp
mov
mov
add
lcall
mov
mov
or
rolb
xor
sbbl
dec
and
jbe
xor
out
mov
dec
fwait
adc
add
sub
mov
inc
adc
mov
loopne
into
in
dec
mov
sub
lock
ss
pop
lahf
lods
pop
outsb
add
dec
xchg
je
ret
jmp
jmp
out
lret
pushf
xor
sbb
inc
cmpsb
jb
mov
js
fsubl
dec
lds
inc
lret
shlb
aad
push
inc
sub
mov
xor
ret
push
adc
cli
mov
imul
push
ss
out
sbbl
cli
or
add
mov
repz
mov
out
fs
push
dec
sbb
xchg
popf
loop
rol
xchg
cmp
mov
addr16
or
add
daa
aad
dec
pop
outsl
xor
pop
dec
and
cmp
cwtl
xchg
pop
jecxz
mov
push
pop
sbb
out
data16
cmpb
jmpw
sarb
sub
clc
cli
int
sub
int
popf
adc
div
add
push
scas
stos
jb
pop
std
mov
inc
inc
iret
mov
mov
test
fldl2t
out
out
outsb
xchg
push
popf
std
xor
and
push
movsb
jp
cmpsb
jp
push
rorl
inc
aad
sub
popa
add
fadds
jae
cs
mov
mov
ss
gs
adc
dec
into
inc
sbb
std
int
pop
push
jp
mov
xchg
gs
fmull
or
xor
repnz
dec
and
les
push
bound
xchg
ja
mov
xchg
fsubrl
stc
push
xor
cmpsl
out
xor
rcrb
adc
push
insb
je
dec
cwtl
rcrb
jns
add
in
cmp
aaa
ds
xor
cmp
sarb
and
inc
repz
cmpsl
lret
movsl
sub
out
pop
sub
pop
push
xor
xlat
xlat
scas
rcrl
adc
dec
inc
jae
add
stos
mov
sbb
scas
clc
lret
pminsw
ja
mov
mov
arpl
push
movsb
in
nop
push
mov
out
repz
jmp
mov
inc
and
ret
loop
or
mov
jle
jo
cli
outsb
je
lahf
dec
jmp
fstpt
mov
cmpsb
cmp
push
sub
data16
jle
int3
and
push
sbb
je
pop
adc
repz
push
sub
dec
xor
fimuls
cmpsl
rorl
dec
add
out
jecxz
cld
push
inc
es
popa
or
and
xor
push
pop
sbb
mov
inc
mov
pop
call
push
jg
stc
insb
icebp
jne
cwtl
in
inc
sub
mov
cmp
sbb
xchg
adc
pop
shll
cmp
push
push
jp
cmpb
xchg
test
sbb
xor
sbb
adc
ror
mov
outsl
lea
lahf
fstl
cmp
popa
lcall
pop
fs
in
inc
test
sub
sbb
sbb
test
sbb
pop
jne
adc
test
sub
int3
pop
imul
mov
cmp
fists
ljmp
les
and
shl
orl
jmp
icebp
imul
mov
cmp
cmp
lds
mov
sub
movsb
iret
cmpsb
inc
gs
fmuls
in
iret
lret
add
or
xor
push
jae
mov
pushf
fcomip
dec
or
test
mov
ret
and
mov
xchg
xor
adc
sub
jl
sti
mov
repnz
adc
push
dec
xor
pop
lahf
fidivl
mov
roll
add
mov
int
push
lods
mov
stos
sub
int3
imul
aas
pusha
push
inc
enter
inc
aas
mov
mov
rol
pop
cvtps2pi
dec
sarb
ja
incb
dec
lods
roll
push
sbb
mov
jbe
sarb
sbb
cld
and
dec
insl
rolb
xor
stos
xor
and
rcrl
cmp
mov
fwait
repz
jmp
lods
dec
sbbb
out
inc
xor
cmp
jb
jge
jne
aam
scas
push
addb
add
jecxz
imul
or
je
nop
fdivrl
mov
loope
aas
je
fsub
shrb
mov
xchg
call
insl
cltd
mov
iret
daa
add
int
idivl
stos
outsl
jno
cltd
test
cmp
mov
sbb
mov
adc
addr16
pusha
sub
stos
mov
lret
call
rclb
add
push
in
cmpsl
ficomps
arpl
sbb
jecxz
mov
imul
daa
aad
shlb
das
add
lret
mov
sbb
mov
dec
jbe
shll
and
cmp
mov
lods
cmpsb
dec
nop
imul
or
sar
pop
fimull
xchg
mov
lcall
dec
inc
adc
cmpsl
mov
mov
lds
cmpsl
push
cmp
fildll
test
xor
xor
jge
push
cmp
xchg
in
push
xchg
fsincos
lahf
sub
add
xor
in
and
je
adc
lock
jle
and
cs
lods
inc
push
in
pop
xor
std
xchg
lods
mov
or
and
xchg
add
inc
add
sbb
js
les
and
mov
in
leave
mov
testb
push
push
mov
shr
shlb
test
inc
dec
test
fcomps
mov
cmp
adc
test
aam
mov
push
sti
or
cmp
or
jg
leave
xchg
inc
pushf
cmp
mov
sti
push
push
and
add
push
repz
ja
ret
inc
int3
jmp
subb
mov
mov
xchg
out
mov
mov
fidivl
and
inc
sub
sbb
mov
aad
fsts
sbb
jg
into
fcmovne
pop
xlat
imul
lock
rorl
jmp
into
add
sbb
mov
xchg
mov
xchg
rolb
call
add
adc
cli
inc
jbe
push
pop
pop
les
adc
aad
or
out
loope
insb
push
xchg
out
mov
subl
adc
inc
sub
lods
pushf
adc
je
sbb
cmp
cs
testb
lret
not
and
pop
fs
push
lock
and
and
outsl
xchg
bswap
or
push
out
shll
cmp
loope
nop
dec
jno
ret
fstps
sahf
pop
stos
fisubs
jmp
mov
jae
cld
cld
leave
sub
insb
mov
jecxz
push
inc
inc
lds
loop
sbb
or
add
daa
push
je
test
sbb
loop
stos
and
int3
imul
mov
cmp
sub
insl
je
test
pop
js
lods
lcall
in
call
je
push
or
mov
jle
insb
divb
mov
xchg
jle
adc
stos
dec
hlt
jae
in
mull
inc
push
and
shrb
daa
sahf
push
rcr
and
jmp
push
pop
sahf
jns
cs
fldlg2
push
and
adc
push
dec
ss
test
inc
das
jmp
jmp
xchg
das
and
pusha
xchg
inc
jecxz
jg
popa
popf
jl
or
rclb
or
sbb
xor
mov
es
icebp
incb
test
pop
mov
xor
sahf
ficompl
push
aaa
std
scas
ret
in
add
mov
cmp
aam
pop
push
mov
fsts
sub
add
push
xchg
xor
or
mov
lcall
xlat
jb
pushf
bound
ss
daa
push
pop
sahf
mov
pop
test
push
pushf
je
stc
jecxz
xchg
sub
cwtl
lahf
mov
push
push
ret
pop
gs
push
cmpsb
inc
xor
shrl
out
cmp
xchg
je
xchg
sub
int3
pushf
xchg
in
rcll
mov
inc
cmp
dec
lds
or
jns
jg
cmp
stos
push
push
or
loop
popf
in
and
les
lea
sub
sarb
mov
lock
in
je
xchg
aas
xchg
and
dec
das
stos
jge
addr16
or
sahf
icebp
add
push
cltd
adc
add
lock
stc
pop
stos
adc
out
loope
clc
into
mov
mov
adc
push
aad
repnz
mov
out
lock
mov
arpl
dec
inc
pop
push
std
and
lahf
or
cmpsl
shrl
pop
scas
leave
test
stos
imul
cmpsl
mov
int
mov
out
or
push
inc
ss
arpl
add
ss
add
cld
cmp
scas
fldcw
mov
mov
dec
xchg
sbb
out
mov
shl
sub
or
mov
test
aas
sub
out
xor
popa
test
test
loop
push
push
cmpsb
icebp
inc
shll
mov
mov
cwtl
add
cld
xchg
cmp
inc
lods
pop
sbb
or
sbb
xor
outsb
add
jecxz
sub
mov
je
mov
inc
mov
and
adcb
notb
movsl
jo
bound
pop
mov
fistl
cmp
mov
mov
iret
es
xlat
rcl
imul
pop
test
mov
pop
jge
dec
aas
dec
cmp
rorl
push
inc
pop
jo
sbb
cwtl
xor
jno
aam
mov
test
shll
cmp
loopne
mov
mov
push
gs
out
dec
cld
adc
sub
enter
inc
fmuls
std
pop
jmp
sahf
jae
int3
adc
push
cmpl
pop
push
or
jp
or
mov
iret
adc
sbb
jle
daa
repz
rolb
pop
scas
stos
push
je
and
ja
cld
adc
lahf
int
push
leave
jecxz
inc
push
test
shlb
xchg
mov
lods
jne
outsb
jnp
popf
data16
cmp
js
or
lcall
cmp
in
sub
mov
aad
mov
cmp
dec
enter
sbb
cmp
pop
aad
cmp
sub
inc
cmp
lret
pop
xchg
xor
and
into
arpl
popf
loopne
cmp
cmp
jmp
adc
pop
sbb
sub
loop
test
pop
fdivl
mov
gs
sbb
out
icebp
inc
inc
test
loop
xchg
dec
xlat
push
pop
aam
inc
push
test
jae
aaa
and
or
jnp
push
jmp
xchg
jns
add
pop
insl
lcall
fsubl
cmpsb
rcrb
inc
xor
mov
jne
ficoml
iret
fcoml
bound
repnz
or
fdiv
sbbb
enter
add
mov
mov
add
ss
push
adc
and
insl
pop
and
add
pop
pop
jl
mov
sub
dec
loopne
mov
and
jns
outsl
outsl
sbb
mov
cld
pop
xchg
ja
cwtl
sbb
iret
es
sti
aaa
cmp
cmp
cld
enter
rcr
mov
pop
mov
cltd
xchg
cmc
jnp
mov
or
pop
mov
and
mov
and
mov
dec
cmpl
inc
jecxz
out
movsl
mov
in
data16
in
loopne
arpl
test
jae
sbb
inc
sbb
push
push
push
syscall
jbe
rcrl
jnp
xchg
xchg
xchg
ss
arpl
fwait
rclb
mov
int
mov
push
mov
sti
sahf
cmpsl
xor
lock
xchg
adc
daa
inc
icebp
dec
inc
data16
js
cld
insl
sbb
mov
push
and
add
sbb
jle
xor
fldt
jg
les
mov
dec
lods
xchg
sub
es
mov
xchg
xorb
adc
arpl
stos
ljmp
xlat
arpl
outsl
mov
sbb
dec
sub
or
sub
cld
jae
add
jbe
lret
fstps
sub
loop
or
pop
leave
inc
cmpsl
enter
arpl
and
jecxz
pop
cmc
dec
fcmovnb
adc
xchg
inc
out
mov
fcoms
push
aam
or
fisttps
adc
xlat
jae
into
arpl
ljmp
and
scas
cmp
dec
addr16
pop
push
addb
inc
insl
jg
iret
xor
testl
sub
popf
cmp
stc
or
add
cld
and
add
inc
insl
cmp
into
outsb
lret
subl
pusha
stos
cmc
dec
addl
mov
xchg
repz
push
movsl
stos
mov
adc
push
clc
aaa
and
sbb
es
or
ljmp
pusha
popa
out
fidivl
push
mov
pop
or
scas
aas
inc
mov
lock
xor
std
xchg
shll
aas
mov
adc
dec
lds
lods
inc
fs
mov
mov
xchg
sub
dec
call
push
sub
and
fidivrl
mov
enter
enter
push
jo
inc
sub
add
outsb
mov
cmp
push
or
cwtl
add
jae
or
xor
adcb
outsl
push
jnp
orb
pop
jns
in
dec
stos
movsb
shlb
sbb
mov
ja
je
adc
mov
mov
or
inc
xchg
mov
push
cs
dec
pop
jl
mov
dec
add
clc
push
ret
fmul
push
fldt
imul
push
loopne
jno
sbb
in
push
nop
jecxz
sub
arpl
mov
push
pop
insb
insl
dec
push
stos
xchg
adc
jmp
imul
loop
sar
js
data16
shll
and
mov
mov
lcall
and
jle
adc
xor
jmp
adc
icebp
pop
mov
mov
sbb
movsb
mov
jmp
outsb
xchg
popl
test
aas
push
dec
mov
push
xchg
hlt
cmp
and
test
in
pushf
imul
cltd
cwtl
fdivr
mov
pop
repz
jno
leave
cs
jge
iret
add
mov
mov
pop
ret
daa
call
cmp
aaa
jo
pop
les
pop
mov
cltd
push
adc
jb
sub
jge
popf
and
cli
inc
test
and
rorl
sub
adc
sub
fsubrs
aam
nop
js
push
leave
ret
jge
mov
sub
sbb
cmc
hlt
and
clc
dec
add
xorb
mov
outsb
or
scas
inc
pop
push
hlt
xchg
aas
imul
mov
pusha
insl
pop
cli
xchg
and
ds
sar
jge
fdivrs
repz
andl
jp
and
movsb
int3
lods
jg
or
push
lret
jg
int3
dec
ds
in
and
or
mov
imul
inc
cmp
sti
cwtl
gs
adc
push
sub
and
sbb
mov
ljmp
sbb
lds
mov
ljmp
faddl
inc
lcall
arpl
mov
xchg
sub
imul
lahf
pop
lods
adc
jbe
cltd
lret
nop
sbb
icebp
dec
rcl
mov
sets
ja
pop
push
out
cmp
data16
adc
adc
push
fstpt
stos
rcll
hlt
push
or
mov
ret
mov
lea
mov
dec
add
je
repnz
mov
movsb
loopne
lret
inc
pop
jmp
fists
call
jp
mov
push
or
pop
fimull
jl
sub
add
jae
push
adc
clc
fidivrs
ljmp
adc
pop
arpl
test
mov
in
inc
ret
adc
xlat
out
mov
gs
mov
mov
in
rclb
out
shrl
out
sub
jno
mov
movsl
sub
fdivrs
or
and
dec
xchg
ret
pop
scas
mov
add
inc
test
inc
sbb
in
popa
pop
ret
int3
dec
inc
inc
faddl
sub
filds
push
pop
sahf
std
pop
xchg
lret
in
loop
lds
outsl
jns
in
arpl
push
fadds
lret
scas
pop
ljmp
xor
xor
shr
fs
jb
xor
adc
inc
xchg
das
lret
outsl
aam
pop
clc
fsubrs
in
cmpb
addb
push
lds
insl
push
push
adc
sub
ja
mov
int3
icebp
cmp
aaa
in
je
inc
adc
stos
pop
push
dec
clc
xchg
xor
push
enter
scas
test
push
adc
dec
dec
js
scas
jno
stc
mov
cmp
ljmp
add
sahf
aam
scas
sbb
sub
ss
sbb
mov
mov
pop
movsb
cmc
adc
xchg
int3
lds
pop
mov
jno
xor
or
push
sbb
mov
mov
dec
lds
into
lcall
jecxz
push
push
test
popf
inc
pushf
leave
andb
or
sbb
or
adcb
call
hlt
test
dec
lret
xchg
sbb
mov
lods
pop
popf
stos
mov
das
sub
and
ds
push
imul
sbb
push
fcmovnu
sub
mov
es
jmp
call
push
notb
push
dec
popa
inc
and
mov
aad
in
dec
mov
sbb
and
jp
sahf
jmp
fwait
push
iret
leave
sbb
movsl
xchg
push
lds
mov
fwait
inc
sbb
sbb
and
rorl
inc
mov
test
ret
outsl
orl
inc
flds
mov
fisubs
orb
test
push
xor
sahf
and
xor
into
jle
ljmp
daa
in
xchg
xlat
popa
push
dec
jle
popf
out
xor
sbb
leave
addr16
sub
filds
fldcw
push
and
pop
sbbl
sub
mov
jo
inc
dec
adc
sub
fisttps
scas
cld
pop
mov
daa
xchg
pusha
xor
cmpsb
cwtl
aam
push
jmp
xchg
mov
xchg
push
insl
dec
sub
jno
in
mov
lods
mov
xor
lods
sbb
or
xorl
xchg
dec
or
sbb
mov
add
loope
and
jle
fidivrs
add
mov
mov
sub
dec
in
dec
xchg
ljmp
out
mov
xor
xor
or
cmpsb
sti
outsb
pop
cmpsl
xor
jno
in
mov
popa
sbb
push
rorb
sbb
cmp
sub
mov
dec
inc
in
jp
and
cmpsl
sbb
xchg
add
mov
ljmp
int3
bound
arpl
sti
push
push
inc
bound
roll
jb
lahf
mov
ljmp
test
cmp
push
mov
jge
lret
mov
enter
xchg
mov
stos
pushl
loope
xor
pop
sub
data16
sub
adc
outsl
xchg
addl
lds
mov
adc
cmp
fistl
push
jns
push
jno
or
in
adc
sub
scas
dec
pop
not
jb
inc
sti
mov
pusha
mov
pop
shr
cs
test
inc
sahf
pop
scas
push
lahf
fnsave
nop
jb
inc
and
rcr
je
fldl
sub
loop
xchg
lock
pop
lods
repz
das
fisttps
andl
push
in
push
rorb
fidivrl
sbbl
les
mov
lock
scas
cmp
rcll
fisttpl
xor
cmpsb
or
je
and
jge
push
mov
fwait
xor
repnz
sbb
shrl
sub
xchg
mov
into
inc
lahf
cmp
xor
dec
cmpsl
stos
jmp
pushf
in
xorb
cmp
insl
add
ja
pop
sbb
and
dec
sub
dec
xchg
loopne
lds
out
ss
shlb
ja
popf
frstor
insb
subl
mov
add
mov
insb
ret
mov
in
notl
xchg
fidivrl
jbe
xchg
inc
cmp
mov
mov
out
mov
jns
dec
inc
jp
xchg
xor
sahf
out
mov
sub
dec
xor
or
pop
daa
xchg
or
inc
stos
fwait
ret
adc
sub
ss
and
mov
cmp
imul
aas
push
sub
xor
rclb
sub
xor
js
and
push
bound
inc
scas
xor
dec
lea
clc
inc
sub
fdiv
roll
lds
cmp
cmpsb
lcall
pop
xchg
dec
ljmp
adc
mov
inc
std
and
jne
sub
cmp
dec
or
jmp
pushf
popa
jns
and
cmp
mov
test
out
cmpsb
push
stos
pop
lahf
lret
rdtsc
adc
sub
hlt
add
divl
into
sbb
cmpsl
fnstcw
movsb
mov
fsubs
dec
push
dec
lahf
flds
jb
xchg
mov
jge
mov
mov
jmp
mov
mov
jg
fmull
leave
lcall
push
adc
dec
mov
ret
fwait
sbb
xor
and
mov
xor
mov
rcrl
arpl
adc
mov
jnp
jg
popf
stc
jo
pop
out
sub
es
mov
dec
scas
adc
mov
fsts
cmc
pop
add
cld
mov
push
sti
cmpl
xchg
jo
mov
add
shl
jg
movsl
inc
les
jnp
es
mov
aam
sbb
mov
xor
cmpsl
divb
test
pop
inc
or
bound
test
mov
sub
bound
lcall
ret
cmp
aaa
es
movsl
sahf
inc
dec
pop
cwtl
fucomp
pop
nop
sub
dec
dec
iret
aaa
loope
ljmp
fs
sbb
or
inc
jmp
lock
cmp
and
insl
xor
sub
push
mov
sbb
mov
xchg
mov
sbb
mov
shl
mov
leave
cmpsb
mov
inc
loop
xchg
adc
xor
jecxz
jbe
ss
cs
fildl
jg
adc
out
sub
arpl
xchg
data16
inc
lods
jp
push
push
mov
adc
in
pop
cmp
or
out
rcr
pop
rcrb
dec
push
jo
sbb
cmp
imul
xor
mov
aaa
or
inc
pushf
mov
push
mov
lahf
lcall
and
and
cltd
dec
mov
mov
lret
in
outsl
jae
movsb
loop
inc
stos
popa
push
mov
fidivrs
lcall
not
push
enter
sbb
notb
sub
daa
pop
loop
test
pusha
mov
jo
cmpsb
xchg
mov
mov
daa
push
scas
jnp
sahf
adc
ror
fstpl
sbb
insl
insl
push
pop
or
push
jno
scas
hlt
testl
frstor
adc
and
or
cmc
test
mov
jb
jno
xor
lods
and
dec
lods
push
xlat
in
jmp
movb
rdmsr
iret
and
cli
jp
and
add
add
lods
jp
pop
out
add
shlb
inc
outsl
mov
lock
mov
outsl
mov
leave
es
jo
xchg
xor
in
or
mov
mov
ss
xor
push
push
and
sub
or
or
ret
sahf
inc
outsb
mov
inc
and
lods
int
push
fdivl
mov
fidivl
mov
sub
ljmp
iret
xor
jg
sub
and
mov
in
sub
sti
dec
faddl
sub
adc
dec
ret
and
inc
xor
outsl
mov
pushf
mov
sti
arpl
dec
xor
bound
sbb
cmp
sbb
mov
pop
dec
lea
fisubrl
inc
mov
pop
gs
adc
adc
pop
mov
popa
ret
adc
push
and
inc
repz
test
out
sub
arpl
add
sti
cld
cmp
dec
pusha
xchg
push
mov
and
cwtl
daa
mov
sbb
ljmp
mov
int
inc
notb
xchg
xchg
shlb
and
push
pop
inc
inc
stos
aad
cmp
adc
lcall
xor
xor
ficoml
ss
sbb
loope
lahf
xchg
cmp
or
mov
pop
mov
mov
push
mov
cmpl
lea
out
xor
sbb
ret
aas
dec
inc
or
cli
mov
js
xchg
sub
mov
or
out
lods
push
into
push
in
xor
dec
frstor
xchg
cmpsl
call
cmpsl
shll
adc
hlt
jb
andl
xor
xchg
jl
dec
xchg
lcall
imulb
sbb
clc
xor
loopne
cwtl
sarl
inc
dec
and
sbb
sti
jns
push
xor
lret
mov
jno
and
adc
aad
cmp
pop
repnz
pop
sahf
fucomi
dec
mov
add
xchg
lret
pushf
sub
and
in
sti
aad
push
dec
cli
or
sub
pop
jb
xor
dec
lock
lods
adc
jnp
xor
dec
pop
xlat
pop
cld
jle
pusha
add
popa
dec
aas
out
push
fwait
mov
daa
nop
cmp
aaa
cmp
out
jg
jp
call
sbb
pop
sarb
pop
jl
insb
lahf
xchg
pop
stos
mov
imul
jmp
testl
mov
cs
dec
outsb
and
stc
ret
dec
cmc
ljmp
push
lret
repz
xor
outsb
push
les
pop
notl
mov
arpl
cmp
fdiv
push
mov
sti
inc
xchg
aad
xchg
mov
mov
sbb
test
es
ljmp
jge
les
dec
mov
mov
test
fbstp
cmp
es
xchg
out
icebp
mov
xor
mov
add
hlt
or
mov
fadds
loop
iret
push
jp
lret
dec
push
cltd
sbb
mov
cli
aad
cmpsl
adc
lahf
adc
cld
into
ss
xchg
xchg
xchg
sub
ret
call
iret
insb
lock
cmp
add
jge
pop
int
daa
mov
and
jbe
jmp
out
push
add
outsb
inc
inc
rcll
and
push
jnp
pop
cmp
jae
cltd
jmp
xchg
push
xor
sbb
sub
std
inc
cltd
sti
xchg
push
scas
dec
mov
add
lahf
xchg
sub
sub
insb
fstps
pop
jns
in
dec
rclb
fdivl
mov
sbb
or
mov
cs
lds
adc
out
or
fcoms
mov
dec
dec
lahf
inc
push
pop
and
mov
loop
test
push
push
test
aaa
mov
rclb
je
mov
add
jae
loop
ficomps
jns
sub
pop
pop
je
and
imul
add
mov
xor
aad
shlb
out
dec
sti
xchg
cmp
cli
or
movl
or
aam
sahf
mov
sahf
xchg
push
sbb
push
jmp
orb
cmc
outsl
push
std
mov
imul
cmp
or
jns
and
psraw
jns
sti
popa
repnz
fldl
add
imul
mov
out
test
lcall
dec
or
std
mov
dec
stos
leave
ss
sbbb
mov
inc
mov
add
inc
test
cwtl
push
mov
nop
inc
dec
pop
addb
pop
push
xor
fidivs
sub
xchg
push
lods
push
sbb
xchg
add
es
jns
ficoms
out
xchg
cwtl
movsb
pop
push
cld
es
fisubrs
outsl
sbb
stc
dec
lock
jp
sbb
out
adc
xchg
or
leave
jle
or
cs
cmpl
cmpsb
add
lret
cmpsl
sub
add
jbe
loopne
push
out
mov
or
dec
mov
popf
cmp
sbb
idiv
scas
sbb
cwtl
repnz
insb
or
jge
hlt
cmp
fnstsw
loope
xor
push
repz
xchg
sub
fwait
or
jne
insb
bound
or
out
les
fisttps
sbb
leave
addr16
pushf
and
clc
xor
arpl
es
pop
cwtl
into
pop
mov
adc
gs
icebp
xor
jmp
xchg
loope
call
test
fdivrs
jno
mov
call
cmc
pop
mov
andb
mov
shlb
jle
ss
or
mov
fwait
and
xchg
mov
scas
out
je
dec
sti
mov
sbb
cmp
dec
dec
xor
push
and
mov
mov
push
fs
movsb
push
dec
loop
pop
add
aas
addr16
cmp
sbbb
cmp
push
pop
das
ss
adc
lods
add
mov
je
jae
js
clc
push
sub
frstor
mov
and
dec
hlt
dec
rcrb
icebp
out
and
jmp
adc
int3
add
dec
or
dec
cltd
stc
pop
xchg
adc
xchg
leave
rcl
mov
int3
das
loope
adc
cmp
mov
scas
dec
aam
test
push
out
leave
in
data16
push
pop
xor
dec
mov
xchg
adc
inc
rorl
sub
cltd
add
push
out
xchg
dec
xchg
int3
int
aad
pop
cmp
jno
pop
rcl
ret
lret
test
add
mov
popa
inc
fsubrp
imul
cmp
push
or
arpl
lret
out
ds
mov
xor
and
sub
pop
lret
xchg
cli
pop
out
or
xchg
lds
repnz
movsb
les
push
xchg
xor
imul
negl
push
aas
mov
aas
jmp
idivb
data16
cmc
pushf
push
pop
sbb
outsl
ret
sbb
lods
jo
jne
cmp
add
insl
sti
lcall
jb
and
sbb
pop
mov
mov
addr16
test
in
inc
cltd
push
mov
xor
imul
dec
loope
cld
in
popf
sub
lret
fsubrs
pop
jl
mulb
jb
movups
fidivrl
mov
mov
rcrb
shrb
call
insb
daa
jp
mov
mov
inc
fsubl
enter
mov
daa
xchg
fidivrs
ficompl
fs
push
stos
in
jg,pt
cmc
jno
je
dec
xchg
mov
negl
lret
sti
lock
cwtl
nop
mov
push
ljmp
sbb
adc
lods
dec
aas
sub
dec
adc
cwtl
fsubl
pop
inc
loopne
xor
mov
movb
jecxz
nop
aaa
fwait
mov
ss
and
pop
sbb
aad
jb
xor
jo
mov
xor
add
fbstp
or
sbb
scas
cmp
xchg
lea
popf
outsl
andb
or
lret
push
repnz
out
nop
push
xor
in
adc
lcall
pop
test
shl
push
movsl
stos
shrb
lret
arpl
add
mov
and
push
mov
cmc
xor
imul
ljmp
sbb
pop
sbb
adcb
pusha
push
out
andl
mov
sub
mov
or
inc
test
mov
fsub
repz
js
mov
mov
add
sahf
fcmove
pop
imul
pop
cmpsl
push
sub
sbb
cli
fdivr
add
inc
mov
push
jno
mov
lahf
pop
lcall
into
mov
xlat
pop
jecxz
in
add
inc
push
iret
and
and
jae
mov
xor
mov
pop
xchg
andl
sub
mov
jb
icebp
fstps
xchg
test
jo
in
push
mov
push
popl
sub
stos
stos
out
stos
pop
daa
jg
mov
icebp
test
push
les
fsubrl
mov
cmp
cmp
push
out
cld
or
aam
or
shl
sub
call
cmpsl
cmpsl
add
pop
sbb
inc
movsb
rcrl
jbe
scas
mov
or
rorl
mov
popf
dec
ljmp
push
push
cmp
test
orb
jae
stos
mov
pop
das
outsl
lods
stc
pop
adc
lahf
notb
sub
movsb
mov
pop
lcall
mov
mov
rcrl
inc
je
test
xchg
push
rcrb
sti
les
push
mov
addr16
je
into
mov
and
mov
or
dec
pop
movsb
xor
push
pop
cli
aad
mov
je
xlat
ficoml
aas
pop
cs
mov
sysenter
and
addr16
movsl
jle
es
push
stos
lea
push
or
sahf
pop
out
repz
test
and
data16
jae
mov
jnp,pt
pop
pop
addb
inc
movsl
mov
pop
fdivl
push
test
push
push
aas
sub
das
sahf
jns
add
xchg
xchg
pop
adc
adc
fisubrs
add
and
inc
es
or
dec
scas
rol
loope
lock
cli
pop
sub
lods
mov
clc
repz
loop
lahf
lock
jo
rolb
aad
enter
mov
js
ret
jns
mov
cltd
adcl
jle
cmp
jne
fsubr
lcall
cmp
push
jnp
mov
cmpl
mov
xchg
and
mov
ss
push
filds
mov
mov
cmp
subb
test
mov
mov
cmp
jo
clc
ljmp
ds
add
hlt
xor
mulb
int3
ja
push
mov
sub
popf
xchg
jecxz
outsb
and
aad
fstl
cld
adc
int
push
adc
out
dec
js
xor
mov
mov
ret
jo
movsb
add
mov
jmp
aad
aam
add
sub
nop
je
add
fidivs
or
adc
gs
mov
mov
inc
testb
add
stos
cltd
xchg
mov
or
aaa
nop
stc
fisttps
incl
orl
popf
xchg
mov
rcrb
dec
mov
push
ljmp
insb
sub
dec
scas
sub
mov
adc
jbe
lds
xchg
js
enter
xor
in
sar
adc
dec
or
adc
fsubrl
stc
sub
mov
xor
mov
mov
repz
daa
imul
aam
in
aas
iret
cmpsl
mov
stc
nop
xchg
sub
int3
pop
dec
movsl
jp
jge
frndint
sbb
sahf
out
into
je
add
mov
aaa
push
hlt
mov
push
xlat
push
shll
mov
iret
add
fsts
xchg
mov
sarl
adc
jle
push
mov
add
and
fcmovnbe
xchg
test
mov
mov
arpl
lds
push
imul
in
or
imul
push
incl
cmc
xchg
shl
rolb
dec
cmp
sbb
add
mov
daa
pop
jle
push
xchg
movsb
rcr
imulb
cmp
icebp
sbb
cld
jmp
cmpsl
xor
jnp
inc
xor
pop
stc
xor
push
les
movsl
fstpl
in
adc
test
cmpsl
fs
push
arpl
movsb
pop
jmp
or
xchg
ss
push
push
loope
pushf
push
xor
sbb
ret
arpl
jns
pop
movsl
daa
mov
lahf
into
xchg
pop
sbb
movsl
dec
dec
lods
pop
ja
mov
jo
adc
lods
ljmp
xor
dec
iret
test
outsl
lret
mov
repz
test
mov
jl
pop
pusha
inc
clc
dec
mov
adc
ds
jo
inc
sub
jg
push
test
dec
sbb
sub
gs
aaa
or
xor
fisttpll
mov
ds
add
or
in
loope
leave
pusha
xor
stos
xchg
pop
xor
mov
dec
add
or
pop
cmp
daa
inc
sti
ror
lods
test
ret
inc
out
push
movsl
lods
xor
jae
dec
inc
adc
imul
inc
mov
add
ret
nop
inc
xor
movb
sarl
add
movsb
xchg
cmpsb
fmull
cmp
pushf
sub
push
lcall
test
outsl
push
fildll
out
test
sti
sub
rcrb
enter
cmpsl
jns
dec
add
lret
scas
cmp
or
dec
inc
imul
sbb
cld
test
pop
and
js
sub
dec
mov
mov
test
cltd
or
inc
sub
and
jb
mov
sub
jmp
xchg
adc
inc
pushf
pop
data16
push
out
xor
lret
imul
hlt
pop
xorl
jge
bound
sub
xor
jmp
xor
jbe
int3
pop
pop
push
loopne
lods
fisubrl
fisubs
sub
inc
lds
inc
cmp
jo
xchg
dec
outsb
addr16
push
pop
xor
push
mov
mov
ljmp
js
push
xor
mov
hlt
sbb
push
cmp
xchg
aaa
outsb
push
insb
sbb
jle
adc
mov
mov
cmpsb
pop
int
icebp
ret
iret
xchg
dec
xor
clc
pop
mov
stos
cmp
clc
loopne
enter
ficoms
sbb
pop
cmc
xchg
push
loope
call
sub
cmpsb
cli
xchg
or
jg
inc
sarb
mov
pop
push
mov
out
xor
mov
cmp
mov
js
cwtl
mov
lea
test
ss
clc
aad
push
iret
inc
mov
jne
shll
dec
ret
outsb
add
mov
sti
mov
repnz
lods
jle
xor
mov
push
pop
inc
adc
jbe
fwait
insl
stos
sbb
mov
dec
ret
arpl
xor
cmpsb
pop
xchg
bound
cmp
jl
jbe
cmp
xchg
push
sub
sub
cmp
jg
mov
pop
sub
fmull
std
add
xchg
pushf
fnstenv
jnp
dec
or
add
ret
xchg
add
push
xchg
pop
pop
or
lds
jge
jne
adc
add
cmp
pushf
mov
fsts
lea
cwtl
xchg
dec
in
and
fwait
cltd
mov
andb
test
cmpsb
mov
fiadds
pop
mov
das
stos
sahf
into
loop
mov
push
sub
xor
lock
es
push
xor
xchg
and
push
pop
xor
out
push
pop
mov
mov
out
inc
jbe
stc
jg
repz
les
inc
dec
sbbb
xor
xchg
nop
sti
imul
bound
sub
cmp
jecxz
wbinvd
pop
das
cmpsl
pop
jl
cmpsl
cs
notl
fadds
scas
sub
sub
scas
adc
and
hlt
push
sub
cmpsb
add
data16
dec
cmpb
mov
push
xlat
adc
je
lcall
pushf
lcall
addr16
cmp
imul
xlat
addr16
adc
enter
int3
cwtl
dec
shll
mov
repnz
dec
out
xor
ds
or
sub
sbb
xchg
cs
mov
jecxz
lret
and
decl
out
jne
lds
inc
decb
mov
ljmp
ds
xchg
ljmp
test
adc
movl
jecxz
pushf
jmp
sub
mulb
adc
mov
fistpl
inc
add
or
lahf
int
dec
les
mov
xchg
repnz
ja
xor
fs
scas
sahf
add
les
xchg
insl
xor
bound
movsb
dec
pop
jno
mov
outsl
lods
push
push
or
sbb
pop
fidivrs
in
pop
inc
and
inc
lea
push
aaa
xor
loopne
dec
mov
cli
pop
xchg
xor
pop
xor
shll
enter
xchg
sbb
add
push
or
fnstenv
pop
jecxz
inc
mov
jg
push
cs
jp
pop
pop
lods
lea
jnp
scas
cmpsl
cmp
in
or
std
dec
in
add
cli
arpl
push
js
xor
mov
mov
jo
xlat
xor
loope
rorb
popf
adc
test
push
nop
rcll
xor
xchg
xchg
adc
and
pop
jne
scas
xchg
xchg
imul
std
push
mov
mov
add
dec
movsl
cmp
cmc
mov
int
or
xchg
adc
jle
sbb
bound
jmp
add
movsb
test
cli
ffree
roll
sbb
or
push
or
adc
jl
rcrb
mov
dec
xor
leave
sbb
or
mov
fdivs
out
xor
add
ret
cli
mov
movsb
jno
mov
in
mov
add
movsb
stos
or
mov
push
imul
popf
sbb
inc
inc
movsl
into
into
sarb
pop
mov
fadd
stos
jae
and
data16
imul
sahf
dec
mov
xchg
fwait
inc
dec
dec
xchg
fnsave
mov
rolb
cs
insl
cmc
pop
lahf
jns
test
insl
ret
xchg
cmp
xchg
add
add
stos
or
fwait
es
imul
loopne
cmp
lahf
sti
xchg
inc
and
lahf
pop
dec
pop
fcoml
stos
push
pop
std
adc
push
cli
adc
movsb
jge
pop
add
mov
jns
pop
imul
jmp
mov
in
aad
cmp
iret
aaa
dec
mov
mov
xchg
test
and
daa
test
jle
xchg
xlat
imul
pushf
sbb
mov
mov
leave
dec
mov
add
clc
jp
push
jmp
imull
sub
loop
imul
jae
push
insl
jb
jmp
mov
mov
daa
imul
callw
stos
daa
enter
shr
mul
mov
xor
xlat
shl
out
in
cli
out
jp
push
mov
mov
scas
xor
mov
popl
scas
loopne
cmp
push
loopne
pusha
leave
and
push
arpl
int
cli
jecxz
or
cltd
sbbl
add
ret
scas
adc
std
cmpsb
pop
cmp
stos
sbb
push
sbb
in
repnz
pop
out
mov
enter
xor
inc
xchg
or
test
xlat
repz
inc
and
inc
and
xchg
mov
jmp
and
loope
in
sbb
lds
sbb
mov
adc
cmc
pop
leave
mov
loope
push
fldl
xor
mov
shrl
js
mov
inc
sarb
in
fisttpl
outsb
leave
icebp
out
fsubs
mov
std
popf
orb
enter
mov
popf
xchg
arpl
jnp
xorl
jecxz
mov
scas
test
adcl
cmp
push
sti
popa
cmpl
mov
inc
std
test
fdivp
aam
mov
insl
std
ror
sbbb
xchg
es
mov
push
in
nop
lahf
inc
out
cli
sti
sti
mov
push
js
push
jg,pt
dec
call
cs
int
outsl
xchg
mov
scas
add
sub
test
je
adc
pop
sbb
pop
add
dec
ficoms
popa
push
cltd
mov
mov
lcall
jecxz
mov
xor
arpl
stc
mov
fs
popa
sub
push
call
jno
movsl
addr16
rcll
lods
hlt
dec
cmp
pop
les
data16
dec
push
dec
scas
pushf
or
inc
adc
addb
mov
sbb
out
mov
cld
outsl
rol
testb
mov
or
sbb
popa
test
mov
out
push
adc
mov
rclb
int
loop
sahf
mov
sbb
nop
out
jb
ret
push
jo
push
stc
cmp
fs
sahf
cmp
xchg
ret
lds
cmp
dec
xor
inc
sahf
cmpsl
ret
xorb
lods
pop
mov
lcall
pop
pop
repnz
bound
js
fcoms
sub
mov
mov
jo
das
daa
dec
fisttps
stos
cmpsb
pop
xchg
int3
push
sub
cs
xchg
cli
mov
sub
mov
lcall
or
or
outsl
xor
ret
inc
jmp
xlat
dec
cmpsb
xchg
mov
lock
sbb
xchg
add
mov
in
xchg
inc
xor
js
dec
stos
sub
pusha
das
dec
inc
test
xchg
leave
and
dec
into
mov
out
xchg
scas
mov
xor
adc
and
add
jb
push
scas
sbb
push
or
jbe
dec
sbb
call
or
mov
mov
pop
inc
dec
push
pop
sahf
bound
fdivrl
add
loope
xlat
sbb
ss
aas
je
cmpsb
adc
xchg
pop
adc
cwtl
scas
and
ficoml
sbb
divb
xchg
in
sub
cmp
lahf
sbb
cmpsb
sub
jns
mov
fbstp
dec
or
pop
adc
adc
fucomip
repz
push
adc
adc
mov
lods
xor
jnp
adc
jnp
popf
out
cmc
pop
jmp
or
repz
dec
rolb
push
mov
cwtl
mov
jg
aaa
sarl
push
out
sbb
cmp
out
outsb
and
cmp
add
inc
sub
clc
lret
lret
dec
repz
and
add
xchg
adc
fadds
into
and
xchg
repnz
and
adc
mov
push
rcl
stos
js
jecxz
sub
movsb
mov
jecxz
mov
jp
jle
insl
xchg
pop
sub
dec
mov
inc
xor
inc
adc
adc
jbe
adc
xchg
inc
inc
xor
sub
shr
sub
and
mov
mov
mov
call
ret
push
sbb
lcall
mov
cmp
push
dec
fdivrs
bound
dec
frstor
jecxz
out
add
sbb
idivl
inc
add
mov
dec
out
out
scas
int
dec
cltd
outsl
pushf
mov
xor
mov
push
and
lods
or
hlt
add
cmp
add
imul
mov
lock
sbb
sti
and
and
sub
add
and
js
push
push
daa
mov
cwtl
lods
pop
out
jge
pushf
fsubs
adc
pop
test
lea
outsl
ret
mov
xor
xchg
cld
push
jg
adc
popf
mov
fwait
dec
and
mov
dec
add
mov
xor
mov
dec
shll
jae
jge
nop
leave
xchg
mov
mov
mov
popa
dec
sub
test
inc
jb
dec
xor
add
xchg
rcr
cmpsl
push
mov
cmp
push
and
xor
pop
popf
ss
xchg
lea
add
outsl
mov
cmp
pop
push
cmp
sub
mov
lods
repnz
sbb
mov
pop
jo
cmp
push
cmp
push
jp
imul
cmc
ficoms
push
and
addr16
scas
pop
cmp
fnstsw
fs
insb
dec
fcoms
loope
scas
pop
fisttps
pusha
jnp
lret
sub
xchg
iret
movsb
and
cltd
jne
mov
inc
dec
lret
lods
push
mov
and
xchg
add
mov
fsubrs
jp
sti
cmp
push
and
pushf
rolb
fninit
movsl
cmpsl
outsb
push
xchg
icebp
jmp
pusha
sub
rcrb
das
out
loop
mov
test
cmc
push
add
sub
cli
sub
adc
mov
sbb
idivl
stos
cmp
cs
out
xor
push
or
dec
aaa
adc
dec
xor
popa
sub
addr16
in
shll
xor
cmpsl
les
lret
sahf
mov
inc
nop
cli
xchg
pop
pop
pop
ljmp
lds
dec
push
stc
xor
cmp
adc
jmp
sbb
clc
jnp
aaa
std
push
add
dec
push
pop
les
mov
inc
push
jg
cmpsb
mov
test
and
jmp
adc
adc
rcrl
or
jnp
inc
js
nop/reserved
daa
scas
decl
dec
sub
mov
add
jo
sub
test
jae
in
add
imul
cmpsb
adc
xor
mov
and
cld
sub
imul
sar
sbb
iret
enter
mov
fcomp
out
dec
test
xor
ret
mov
push
inc
cmp
add
cs
or
and
adc
mov
outsb
jns
int
adcl
cmpsb
ret
inc
std
imul
hlt
inc
mov
or
mov
and
dec
gs
mov
lahf
nop
xor
xchg
adc
add
imul
add
mov
imul
sti
push
pop
fidivrl
cmp
fiaddl
lahf
mov
xor
nop
mov
xlat
fnstcw
ljmp
mov
testb
push
mov
dec
in
mov
add
in
cmovns
int
sarb
jnp
mov
mov
cmp
sub
mov
mov
cld
push
mov
mov
popf
fimuls
cld
mov
rclb
mov
add
call
int
gs
std
ja
cmpsb
ja
dec
cltd
push
pop
adc
adc
int
push
std
pop
in
lret
mov
fstp
gs
mov
insl
cwtl
xor
push
xchg
daa
mov
dec
and
jae
aam
fdivrs
cmc
pop
mov
push
mov
jo
addr16
aaa
shll
mov
dec
int3
insb
lahf
ret
lret
movsb
in
sarb
mov
xchg
pop
out
dec
mov
mov
push
lret
pop
adc
or
movsl
ret
out
xchg
cld
daa
cmova
ds
sbb
xchg
imul
xchg
pusha
push
mov
sub
mov
mov
loop
cwtl
dec
gs
push
push
add
mov
jo
push
dec
adc
out
dec
mov
mov
cli
adc
loop
jne
pop
aaa
jg
bnd
out
outsl
push
aas
cltd
out
sub
jnp
outsl
push
fs
fbld
test
pusha
xchg
rcl
add
adc
lock
xchg
or
cs
orl
pop
pop
jne
xchg
dec
inc
das
and
add
push
jmp
inc
push
mov
pop
stc
cmp
dec
loopne
mov
test
mov
ja
jle
xor
inc
jg
ds
pop
sbb
stos
pushf
std
xchg
xor
inc
xor
sbbl
adcl
dec
inc
sbb
cmp
int
xor
cmp
icebp
pop
lea
sub
mov
rsm
sti
inc
adc
pop
push
mov
xor
stos
xchg
js
xor
mov
sbb
bnd
daa
data16
imul
dec
inc
aam
push
ja
aaa
cmc
jae
ja
les
cmp
jns
cmc
or
jns
fwait
sub
ljmp
lret
jle
push
jmp
test
inc
enter
out
mov
fisubl
push
js
jmp
xchg
les
das
loope
aad
push
ja
popf
xor
push
adc
int
sbb
bound
dec
rcll
adc
int3
mov
arpl
lods
repnz
sahf
shrl
dec
pop
scas
xchg
stos
gs
cmpsb
xchg
inc
inc
add
repnz
or
jg
mov
scas
aas
xchg
adc
xchg
lea
mov
jns
cmpl
fnstenv
mov
and
lods
orb
daa
in
je
mov
mov
les
push
shrb
cmp
aam
adc
or
sub
push
in
xchg
push
mov
push
add
ja
lds
out
push
ja
lret
sbb
out
pop
xchg
pushf
pop
inc
lea
scas
aad
sub
lret
out
mov
jns
cli
adc
mov
das
or
push
push
xchg
or
adc
mov
push
inc
push
pop
xchg
xor
jg
dec
jae
hlt
and
out
and
aas
add
insl
jge
popa
aas
loopne
outsb
pop
sahf
daa
loopne
repnz
add
iret
jbe
fwait
fs
rcrl
sub
test
andl
js
pop
gs
mov
lcall
popf
das
fs
stos
xchg
xor
jne
ljmp
push
xchg
and
cmp
jb
inc
inc
push
popf
cmp
adc
xor
sbb
push
pop
in
xor
jg
and
mov
rcrb
cmp
aaa
test
cmp
pop
push
pop
pop
pop
push
jle
out
testl
nop
js
cmp
cmp
mov
popf
or
cmp
popa
cld
aad
xchg
and
popf
inc
mov
loope
sub
adc
sbb
mov
out
pop
testl
test
push
addl
std
mov
jns
fsubl
gs
or
es
dec
stos
ficomps
mov
cmpsl
outsl
push
push
pop
xor
sbb
sbb
enter
scas
inc
xor
jecxz
insl
ret
adcl
daa
sbb
push
lahf
imul
mov
jge
adc
mov
mov
je
adc
pusha
mov
inc
pop
cmovns
mov
sub
loope
pop
jb
insb
jle
out
mov
pop
mov
push
mov
movb
mov
adc
push
lds
add
cmp
jl
sbb
xchg
stos
push
fadds
fs
cmpsl
sahf
jae
repnz
mov
or
iret
sbb
fnstenv
push
pop
cwtl
out
mov
repz
icebp
push
int
mov
sbb
fsubrl
loopne
cmpsl
stos
mov
add
std
sbb
aaa
test
andl
pushf
sbb
mov
pop
adc
and
test
push
lea
pop
xorb
divl
shr
mov
into
pop
movsb
addb
in
sub
pushf
dec
in
mov
hlt
mov
xor
into
mov
pop
std
test
movb
jle
mov
lods
jp
test
jl
jae
out
sub
add
movb
loop
add
inc
ja
fidivl
es
jnp
cltd
mov
mov
dec
cmc
inc
outsl
pusha
int3
xchg
std
add
aad
in
icebp
loopne
je
lea
pop
push
inc
lea
sbb
push
sbb
and
lods
stc
sub
jbe
repz
ss
mov
pop
call
jmp
pop
cmp
xchg
push
mov
mov
xchg
mov
divl
ret
jl
xchg
pop
lea
and
mov
mov
or
push
mov
iret
scas
sub
mov
add
mov
pop
movsb
test
cltd
xor
xchg
add
dec
xor
pop
pop
add
ret
sahf
imul
push
or
mov
lea
push
push
icebp
cmp
fldenv
push
stos
repnz
cmp
fcoml
adc
push
mov
fwait
mov
push
arpl
mov
cmp
leave
jno
xor
push
inc
in
inc
jo
data16
shll
cmp
mov
rcll
scas
cmc
jo
adc
adc
out
stc
daa
sti
ficoml
mov
in
iret
push
test
lret
and
jmp
pushf
sbb
jo
repz
daa
jg
inc
mov
loope
mov
sahf
andl
mov
sbb
cmc
adc
dec
ficomps
pop
fldl
xchg
ret
ss
outsb
insl
jecxz
and
xor
xchg
jbe
repnz
mov
shll
fidivs
cwtl
or
cmp
inc
xchg
add
scas
fcoml
mov
inc
add
pop
jmp
repnz
fdivs
leave
stc
cli
fwait
aaa
out
xchg
cmp
or
popf
in
pop
add
incb
test
dec
fistpl
xlat
mov
jmp
jl
xchg
add
pushf
daa
xor
xchg
shlb
test
mov
pop
testb
addr16
adc
imul
push
sbb
cwtl
mov
jno
aad
lods
mov
inc
inc
mov
div
xlat
mov
aaa
pop
fs
push
shrb
mov
jg
jbe
decb
xor
jp
xchg
push
jnp
sub
mov
adc
dec
ja
inc
shll
jecxz
and
fadds
mov
imul
sub
xchg
add
ds
fisubl
in
mov
sub
lds
clc
mov
sub
mov
and
cs
xchg
outsl
cmp
inc
mov
xchg
push
out
arpl
mov
cmp
sub
rcl
cmp
fwait
addr16
jne
sub
xor
aam
adc
aam
pop
pop
scas
mov
iret
and
push
shll
add
inc
mov
pop
les
sahf
cltd
cltd
pop
xchg
out
xlat
mov
call
sub
stos
xchg
testl
add
test
xchg
add
and
add
cld
jbe
in
in
mov
fnsave
imul
xor
icebp
jmp
out
inc
add
enter
add
mov
out
les
aaa
pop
leave
insb
sbb
jns
jb
arpl
scas
mov
jb
popa
xlat
fisttpl
jns
mov
sahf
ret
enter
negb
push
or
in
leave
mov
push
add
push
scas
pop
gs
insl
addr16
cs
mov
or
xor
iret
xlat
mov
xor
jl
mov
jecxz
movsb
mov
jb
add
sub
mov
push
cmp
adc
popf
xchg
xchg
in
sub
jg
mov
mov
popa
pop
dec
sbb
xchg
lock
cmpsl
jle
mov
imul
out
shr
fstl
pop
mov
outsb
add
dec
mov
pop
cs
add
lock
cld
push
adc
jo
and
xor
aad
fdivs
or
lods
pop
in
mov
or
dec
test
add
or
pop
data16
ds
ljmp
xor
xlat
and
adc
nop
pop
mov
adc
ret
js
sub
cmp
aaa
popf
sbb
mov
xlat
mov
inc
shrb
incb
add
iret
jne
test
outsb
mov
notl
int3
and
addr16
std
leave
aam
jg
scas
pop
cmp
pop
insb
out
stos
movsb
out
arpl
into
sbb
enter
sbb
loop
jae
sbb
add
icebp
and
cwtl
jg
int3
mov
adc
jnp,pn
les
cld
rorb
push
mov
cmp
imul
mov
mov
js
sub
adc
mov
add
sbb
pop
dec
into
mov
cmp
dec
mov
mov
xor
add
adc
xchg
cwtl
repnz
subl
aam
sub
xor
popa
or
lret
mov
test
mov
adc
push
sub
sbb
mov
and
and
std
popa
insb
sub
sbb
dec
stos
pop
add
loop
inc
jns
ljmp
cmpsb
data16
insl
loope
aad
or
pop
aas
cmp
rol
push
insl
xchg
push
add
pusha
lea
das
sub
add
out
and
je
mov
adc
int3
and
push
lea
lea
cs
and
mov
push
push
mov
fldenv
das
popa
mov
decb
xor
movsl
mov
push
sbb
mov
ja
imulb
sahf
outsl
inc
clc
inc
bnd
pusha
adcl
out
stc
bound
incl
cmpb
or
xchg
push
leave
inc
je
insb
lds
lods
sahf
cmc
or
mov
mov
in
aad
xchg
sbb
ja
test
mov
or
xchg
mov
dec
int3
xor
or
aaa
ret
dec
mov
sub
mov
xchg
hlt
mov
push
rclb
mov
loope
push
mov
and
ja
cmp
pop
aas
cld
rcll
or
in
movsl
fiaddl
sbb
mov
cmp
xor
pop
notb
mov
mov
xlat
ja
jl
loopne
fisttpll
push
pop
loop
mov
ljmp
movsl
mov
fcompl
sub
adc
pop
aas
lcall
enter
adc
data16
jp
mov
test
pop
test
dec
jl
int
inc
jle
or
mov
lds
arpl
ss
adc
jo
jge
add
loop
pop
data16
xchg
icebp
test
pop
and
mov
lds
in
sbb
adc
xchg
aam
and
out
hlt
out
adc
lods
mov
pop
push
into
inc
push
mov
lock
cmp
dec
jo
stos
and
dec
push
mov
lahf
cmpsb
xchg
push
and
stos
mov
mov
insl
jae
adc
xchg
cs
mov
or
rcrb
popf
xlat
or
push
dec
pushf
mov
mov
mov
or
adcb
mov
add
dec
mov
in
xchg
cmpsb
push
stc
shll
jg
lea
scas
mov
mov
aam
leave
test
or
jnp
or
xchg
dec
jae
xchg
lret
mov
test
call
adc
jl
mov
push
cmp
or
jo
mov
imull
sub
sub
movb
sub
pop
adc
clc
mov
pop
jnp
popa
sbb
or
push
mov
sbb
or
test
aas
test
mov
or
mov
lds
lret
div
cld
jmp
xlat
dec
pop
or
sbb
pop
popa
and
sbb
pop
pop
cli
lods
notl
movsb
into
lahf
out
mov
mov
cld
mov
test
sbb
roll
ja
or
in
xchg
mov
les
popf
sub
outsl
adc
or
add
mov
test
adc
jb
cmp
shlb
test
ret
push
xchg
daa
aas
jl
jb
mov
xchg
jmp
inc
jb
mov
mov
xchg
das
js
xor
or
mov
inc
mov
xchg
ja
mov
rolb
push
cmp
sub
cmpsb
sbb
and
cmp
fidivs
outsb
cwtl
stos
stos
adc
stos
enter
nop
mov
ja
sub
aam
pop
clc
jnp
cmpsb
lock
add
sub
xlat
sub
and
xor
dec
in
nop
cmpsl
dec
jnp
push
ret
xchg
mov
out
hlt
cmp
jne
mov
xchg
mov
mov
dec
sbb
movsb
daa
ficoml
fwait
xchg
or
adc
mov
cmp
pop
fldcw
shlb
or
inc
scas
faddp
cmp
xchg
adc
inc
xchg
jge
jp
daa
or
pop
mov
js
lret
xlat
lds
jno
es
mov
push
test
and
pop
stos
xchg
sub
push
xor
ds
lret
movsb
sub
test
adc
into
pop
repz
cmp
fimuls
xchg
sbb
dec
add
sub
sbb
leave
ds
ds
pop
lret
repnz
or
or
jg
dec
sbb
mov
sub
not
jno
push
mov
xor
idivl
lods
ljmp
mov
and
mov
incl
test
sbbl
sti
shll
push
out
rol
sbb
dec
movsl
decl
loop
xchg
xorl
and
push
and
clc
fwait
sbb
scas
repz
push
mov
shlb
dec
mov
scas
mov
xor
sbb
lahf
xchg
jl,pn
outsb
and
push
jp
ret
sbb
or
push
sub
adc
xchg
lahf
jo
shrl
repz
lods
orl
push
orl
jle
popf
lock
inc
fistl
bnd
daa
fdivr
jmp
add
inc
dec
and
cmp
push
xchg
aas
lret
cs
add
push
push
shlb
sub
or
lret
movsb
aaa
xor
mov
jge
ds
adcl
ja
into
pushf
pushf
push
nop
add
test
push
jg
enter
or
fsts
pop
out
push
xchg
hlt
mov
push
push
xor
movsb
mov
pop
std
sbb
push
and
fcoms
mov
hlt
pop
cltd
dec
insl
adc
and
test
jnp
and
mov
adc
les
clc
and
clc
mov
cltd
fucom
fbld
push
clc
ds
out
stos
rcrl
sbb
in
inc
arpl
cmp
jo
sub
inc
jp
mov
add
jp
in
call
mov
sbb
mov
dec
in
xchg
sub
adc
sub
mov
repz
into
test
jo
sbb
inc
inc
mov
mov
jae
ss
pop
test
jle
arpl
pop
and
adc
sub
mov
dec
sahf
dec
inc
fidivrs
stc
lcall
mov
jae
cmp
test
inc
mov
jnp
or
icebp
daa
jg
sub
hlt
aaa
out
inc
pavgw
adc
jo
stos
data16
inc
dec
push
push
cwtl
in
negl
fs
dec
ljmp
andl
ds
daa
pushf
jp
mov
mov
das
notl
les
mov
js
mov
mov
gs
enter
add
mov
les
aaa
shrl
mov
adc
jle
out
push
fdivr
test
cmpsb
cmp
fldcw
xor
inc
insb
stc
repz
sub
jbe
rcll
push
cld
sahf
imul
mov
test
cmp
stos
scas
call
mov
in
mov
sti
cmp
cmpb
mov
movsb
sub
data16
inc
mov
add
dec
repnz
nop
cmc
and
jne
mov
test
dec
aam
test
sub
adc
leave
inc
jb
push
mov
mov
xchg
dec
jp
es
cmpsl
cmpsb
ja
or
cvtdq2ps
jb
push
cmpsb
daa
test
jg
lahf
mov
or
xchg
leave
adc
sahf
sti
scas
fwait
sbb
lea
push
stos
movsb
pop
pop
leave
pop
add
add
popf
and
cmovae
pop
jns
inc
or
enter
xchg
test
daa
ret
cmp
repz
cltd
decl
xchg
inc
cmpsb
cmp
jg
push
pop
xor
roll
mov
fstp
adcl
jns
xor
lret
and
mov
xor
jg
mov
jb
daa
ljmp
mov
jb
xchg
mov
rolb
or
jmp
iret
jbe
ljmp
cmp
mov
outsb
xchg
adc
inc
cmp
mov
jae
in
adcb
mov
aam
xchg
xlat
sbb
adc
nop
and
ret
pop
push
nop
mov
push
push
xor
fs
repz
lret
lods
jmp
ret
popa
in
popa
je
stos
cmp
ret
mov
xor
inc
bound
int
aas
imul
and
daa
mov
in
inc
inc
in
mov
das
xchg
dec
adc
sub
scas
in
inc
pop
pop
cli
inc
inc
fisttpll
imul
mov
inc
test
cmc
dec
ret
push
clc
xor
mov
xor
loop
add
es
fmuls
popf
cmp
idiv
out
xchg
jae
repz
inc
ljmp
xchg
orb
insl
out
ret
out
push
push
mov
mov
pusha
imul
out
out
jnp
push
data16
stos
jbe
in
adc
out
pop
or
out
sub
adc
mov
lcall
movsl
jle
push
ljmp
sub
insb
ret
scas
mov
xor
mov
mov
stos
sbb
insb
bswap
pop
stos
inc
sbb
push
adcb
stos
mov
jb,pt
repz
xlat
nop
cs
das
mov
push
mov
mov
scas
sti
cld
pop
insl
or
into
loop
fs
cmp
add
mov
push
fistl
mov
push
loopne
ss
loope
add
xlat
sub
pop
or
push
and
dec
cs
pop
mov
mov
insb
hlt
lds
sarl
sbb
xor
push
push
inc
and
dec
in
ss
or
push
jl
outsb
pop
pop
lret
push
pop
test
rcr
lret
insl
adc
mov
xchg
test
add
popa
ror
ret
xchg
hlt
pop
fs
les
dec
mov
lret
insl
iret
jmp
push
subl
push
jne
jl
in
movsb
les
or
xor
push
ja
sbb
fcompl
push
jp
push
sub
cwtl
cmpsb
add
pop
sahf
inc
insb
xchg
pop
test
xchg
movsb
cmp
jne
negb
outsl
in
mov
push
xor
jnp
div
cmp
mov
adcb
test
rclb
adc
xchg
sbb
push
pop
sarl
jo
and
js
mov
mov
popf
icebp
xorl
push
or
ds
sbb
shlb
call
push
and
mov
xchg
pop
push
imul
scas
aad
sbb
dec
inc
pop
out
pop
dec
scas
add
xor
and
jb
mov
icebp
add
jbe
mov
hlt
cmp
repz
inc
sub
sub
inc
stc
sub
ret
call
adc
clc
jbe
mov
ljmp
lret
push
lods
stc
dec
sub
cmpsb
cmpsb
mov
shr
test
jb
push
mov
mov
or
or
out
jbe
xchg
inc
ss
or
mov
ret
and
sarb
shr
fnstenv
jg
cmpsl
add
dec
lock
leave
inc
sub
sbb
xor
lods
dec
pop
idivl
repnz
sub
push
sar
dec
push
in
mov
xor
rcrb
jnp
pushf
lret
fdivrs
stc
imul
div
push
xchg
push
dec
jnp
pushl
hlt
jge
aad
pop
out
fs
mov
es
jl
jnp
mov
cs
xor
mov
stc
cwtl
popa
test
mov
mov
sub
and
ja
stos
push
out
sub
adc
inc
subb
mov
lret
int3
cmpsb
cld
xor
daa
rorb
pop
mov
xlat
outsl
cwtl
xor
jo
loop
enter
or
sbb
je
xor
jb
fwait
cmp
pop
nop
add
jne
cmp
aaa
xor
xor
mov
lds
icebp
sbb
lea
add
mov
outsb
jne
jge
aas
pop
ja
ds
loop
mov
aaa
mov
jecxz
in
cld
mov
mov
jmp
sbb
push
adc
inc
or
faddl
xor
mull
adc
jbe
lcall
shl
int3
pop
fistpl
jle
nop
mov
addb
push
add
xchg
jb
xchg
cltd
pop
inc
mov
out
adc
dec
mov
push
btrl
mov
outsl
adc
lds
push
and
xchg
sbb
fbstp
jmp
mov
imul
push
enter
fnsave
push
std
add
sbb
add
inc
movsl
stos
pop
cli
lods
sub
lods
in
outsb
out
inc
mov
dec
add
and
jp
into
mov
xchg
pop
fwait
gs
inc
mov
adcb
pop
cmp
pop
inc
add
inc
adc
add
xchg
idivb
loope
mov
inc
lds
or
fimuls
pop
add
push
ret
add
mov
inc
test
lds
rcrb
xchg
fwait
and
xor
es
dec
jne
xchg
xlat
hlt
popa
int3
add
mov
mov
adc
mov
dec
jg
xchg
ja
pop
daa
aam
fdivrs
daa
add
mov
lods
lea
and
insb
jge
out
dec
int3
adc
je
and
cmp
xorl
notl
or
daa
cmp
mov
nop
jnp
mov
shrb
fldenv
add
les
pop
sub
mov
sub
movsl
dec
jle
push
jge,pn
das
inc
and
inc
push
fildl
sti
and
adc
mov
cmp
jae
adc
repz
push
negb
jp
inc
dec
shrb
imul
lods
lret
data16
add
dec
loop
loop
in
cwtl
jp
mov
push
mov
xchg
lret
xor
icebp
add
pop
adc
jge
jg
repz
aaa
icebp
out
ja
xchg
mov
out
mov
jns
imul
adc
in
jns
pop
sbb
decl
push
push
cmc
pushf
outsb
imul
fcmovne
pop
je
mov
icebp
push
mov
test
pop
inc
xor
ficoml
inc
popf
or
push
scas
or
xchg
dec
cmp
gs
pop
push
test
adc
fnstcw
add
movsb
xor
mov
popl
nop
daa
or
imul
push
cmpsl
addr16
jnp
mov
jae
push
pusha
and
mov
push
es
cmp
mov
call
ret
dec
int
lcall
sbb
lret
push
xchg
shrb
lcall
dec
insl
stos
scas
and
jb
rolb
shrl
xchg
mulb
or
adc
dec
jge
js
aaa
dec
add
stos
mov
aad
cmp
xor
jg
mov
pusha
jns
xchg
xchg
lcall
sbb
jo
adc
cmp
jne
xchg
mov
lods
fwait
inc
aaa
out
test
mov
dec
mov
xor
repnz
add
mov
mov
cmp
mov
inc
roll
je
dec
shr
test
sub
shl
test
sti
xor
push
xor
add
jne
test
rcrb
push
xor
dec
jmp
pop
lea
fiadds
add
add
mov
cmp
dec
ficomps
test
std
or
sub
pop
rcll
pop
pop
mov
dec
ljmp
lret
lock
mov
mov
dec
or
and
xchg
adc
out
add
add
push
sbb
jl
xor
out
adc
xchg
mov
repnz
adc
clc
cmc
scas
add
or
xor
xor
test
clc
push
enter
adcb
mov
seto
jle
in
daa
cmp
xchg
xchg
sub
pop
fstpt
jo
mov
outsl
cmc
clc
iret
jmp
test
pop
roll
test
or
adc
rol
jno
addr16
pop
out
out
xorb
cli
push
fsts
jl
jb
bound
int3
mov
mov
push
or
iret
pop
arpl
clc
nop
les
mov
mov
xchg
sub
fisubrs
pop
inc
xchg
imul
inc
jmp
js
mov
sub
scas
adc
mov
xlat
outsb
xchg
mov
lcall
mov
mov
push
mov
nop
cs
dec
dec
and
cld
test
ret
imul
add
inc
ljmp
stc
rclb
imul
fcompl
enter
mov
cmp
in
mov
pop
xor
data16
xor
lds
fistpll
aam
sti
movsl
repz
xlat
popa
insb
imul
hlt
pop
shld
std
mov
test
sbb
mov
pop
aad
scas
lret
sub
inc
push
ja
addb
repz
lea
and
sbb
aad
dec
push
fcmovnu
pop
das
in
ret
inc
mov
mov
xor
enter
aaa
push
xor
xchg
xchg
into
pop
js
out
ss
cmp
dec
cmp
ret
mov
mov
loopne
inc
fwait
pop
out
push
mov
cwtl
and
jp
lea
fisttpl
push
and
xchg
xor
ljmp
nop
xor
mov
xor
or
lret
mov
fs
scas
insl
adc
fsubrl
inc
scas
add
mov
fwait
sub
inc
std
adc
cmp
out
mov
xor
jb
cli
pop
cwtl
fdiv
sub
jmp
sbb
mov
pushaw
test
mov
leave
sti
mov
movsb
xchg
inc
adc
inc
lock
sbb
adc
add
punpcklbw
jmp
in
enter
dec
stos
mov
cli
scas
out
pushf
adc
cmpsb
orb
xchg
lods
mov
int
mov
nop
adc
iret
testb
jge
jno
add
enter
add
insl
mov
mov
popf
add
xchg
dec
daa
dec
loopne
push
test
xchg
imulb
or
imul
mov
jle
enter
std
xchg
sub
fmull
in
add
inc
push
mov
sub
sbb
mov
and
or
popa
mov
lcall
push
jne
mov
cmp
outsl
addr16
lock
movsb
int
lcall
mov
adc
or
or
push
les
xchg
cmpxchg
push
cmp
mov
sub
sbb
lods
mov
leave
add
xor
sahf
mov
addl
insb
pop
ss
pop
lcall
sti
bswap
and
mov
loopne
or
and
mov
outsl
std
xchg
or
cmc
subb
movsb
pop
mov
xor
ret
and
jle
adc
imul
adc
mov
cmp
js
scas
jecxz
mov
stc
sub
jg
repz
sbb
hlt
jnp
sbb
dec
pushf
inc
and
in
inc
fimuls
icebp
loop
pop
dec
lret
stos
icebp
push
and
xchg
outsb
lods
mov
int3
lcall
jmp
mov
xor
shll
jg
sub
cmp
mov
mov
xor
loopne
or
addb
mov
out
mov
fadd
adc
cmpsl
push
xor
sbbl
or
movsb
jne
gs
mov
loope
xlat
sbb
jbe
aaa
adcl
loopne
pop
inc
xchg
jo
xor
mov
adc
jbe
aam
adc
push
inc
mov
add
lods
jbe,pt
inc
js
mov
pop
dec
xor
lret
orb
xchg
gs
mov
out
pusha
lahf
repnz
mov
sub
cmpsb
mov
mov
fildll
outsl
cmpsl
imul
mov
stc
mov
inc
add
mov
mov
cld
adc
mov
or
ja
fs
subb
mov
xchg
rcll
sub
loopne
fdivrp
popa
cmp
mov
scas
and
popf
lahf
xchg
adc
mov
int3
cmpsl
in
adc
out
lods
lcall
popf
nop
out
insb
lods
jbe
not
jl
test
pop
sub
mov
jp
les
push
out
fcmovnb
imul
jns
mov
mov
cmp
jge
inc
mov
or
repz
fs
mov
adc
mov
jb
decb
mov
xorl
insl
or
push
out
imul
or
scas
cs
sub
orb
xor
lret
outsb
insl
ja
call
xchg
cwtl
lds
loop
pop
aas
daa
mov
cmpsl
cmp
adc
dec
add
stc
or
jmp
orb
repnz
push
sub
jo
lods
dec
dec
or
add
add
mov
xor
sbb
inc
bound
or
xor
sbb
push
add
cltd
cs
ficoml
push
adc
jbe
leave
imul
sub
out
in
addb
dec
fdivs
lret
add
ss
loop
hlt
or
cli
sti
bswap
pop
sbb
sbbb
in
xchg
cmpsb
xor
inc
adc
sub
push
jnp
and
xorb
lds
sbb
sbb
lds
inc
fwait
jbe
out
push
pop
xchg
jl
add
cmpsb
scas
test
ljmp
lock
ds
jecxz
movsb
add
in
movsb
int3
push
xchg
mulb
or
sub
fwait
mov
add
mov
push
mov
cmp
xchg
test
outsl
xchg
out
aad
pushf
mov
insb
das
aaa
push
fwait
push
mov
push
adc
mov
xor
mov
call
xor
push
sbb
push
xchg
test
popa
sbb
push
mov
int
es
lods
sbb
inc
or
insl
fs
mov
adc
xchg
xor
adc
sub
out
and
dec
pop
mov
xor
aas
in
mov
xchg
push
fs
adc
mov
and
les
sub
jnp
scas
xor
enter
fdivs
jno
dec
pop
inc
sub
sbb
pop
into
leave
jo
test
fs
mov
clc
in
mov
and
call
inc
ljmp
adcl
adc
aam
cltd
xlat
dec
mov
sahf
adc
mov
and
arpl
xchg
jmp
push
xor
jno
mov
stos
adc
stc
or
jmp
dec
xchg
dec
inc
int3
jb
or
mov
lret
aam
xchg
repz
xorb
xor
inc
popf
sub
mov
das
jp
pop
mov
and
jo
int3
push
adc
fisttps
repnz
mov
sti
mov
incb
push
je
sbb
loopne
adc
sub
fisttps
clc
lods
or
shl
fld1
rorb
mov
pop
in
mov
push
pop
hlt
inc
mov
sbb
daa
xor
jecxz
andl
test
pop
jo
jmp
popa
jns
adc
jecxz
xchg
lahf
daa
jbe
dec
movsl
loope
lea
nop
enter
shlb
dec
adc
pop
add
mov
or
bound
cmp
outsl
adc
mov
lret
jl
push
mov
adc
call
or
sub
out
popf
mov
jecxz
dec
push
or
pusha
icebp
inc
xor
mov
add
loope
fildll
push
sub
fstpl
rcr
ljmp
adc
xchg
ret
mov
xchg
call
sub
mov
into
mov
fs
aad
stos
mov
sub
fdivrp
pop
xor
xchg
add
inc
jae
dec
sub
loope
sbb
mov
call
and
pop
push
icebp
dec
cmp
pop
dec
sub
push
rclb
mov
daa
fs
add
lahf
inc
insl
call
jecxz
cmp
xchg
rol
and
push
push
or
adc
lods
inc
mov
sahf
xchg
sahf
adc
cltd
arpl
fnstsw
add
bound
js
sub
inc
pop
ret
cmp
sub
mov
pop
pushf
xor
mov
gs
xorb
inc
out
add
sahf
cmpsl
pusha
pop
hlt
sbb
cmpsl
adc
push
ret
sbb
sbb
sbb
adc
xchg
je
sbb
loope
dec
in
ss
jne
inc
jne
stos
mov
repz
xchg
mov
adc
xchg
fstpt
add
add
xchg
cmp
call
daa
push
aas
lcall
lea
cld
xor
gs
ds
gs
jmp
aaa
push
adc
inc
fcoms
cmp
into
out
or
pop
iret
mov
and
leave
pop
pop
lret
pop
loop
mov
cmp
ret
inc
jp
adcb
mov
or
ret
or
icebp
fsubp
cmp
sbb
xor
adc
pusha
mov
imulb
arpl
bound
mov
pop
les
jne
pop
mov
imul
sbb
mov
imul
fsubrs
mov
mov
dec
adc
sub
lds
mov
cmpsb
clc
ret
sbb
dec
sbb
outsl
adc
push
fidivs
push
jae
imul
inc
jmp
mov
cltd
add
ret
push
shll
dec
test
pop
pop
add
xor
out
sub
gs
js
subb
jle
or
jecxz
movsb
cmp
mov
gs
fwait
push
mov
fcompl
ljmp
mov
jne
in
inc
lock
jp
loope
mov
fwait
xchg
stos
lods
inc
dec
lret
sbb
notl
push
pop
scas
jns
ja
add
sub
cmp
in
lcall
mov
inc
stc
pop
push
dec
arpl
addr16
fscale
mov
into
jp
ficomps
xlat
cmp
mov
adc
inc
pop
add
pop
cmp
xor
jae
sub
xor
mov
cld
jge
push
enter
in
push
insl
inc
repnz
outsl
aaa
sar
test
test
jo
into
push
pop
cwtl
xchg
cltd
lea
mov
pop
dec
mov
pop
xchg
les
fnstsw
adc
movsb
sub
les
ds
push
in
daa
cli
scas
scas
adc
outsb
loop
test
fnsave
xor
aam
mov
sbb
xor
lret
adc
scas
pop
nop
mov
pop
outsl
xchg
in
fidivrs
addr16
das
jle,pt
popf
ficomps
mov
and
push
testl
and
cmp
mov
out
lock
pop
sti
pop
add
arpl
jmp
jge
scas
xor
les
push
adc
jmp
dec
mov
sbb
pop
push
loop
shr
mov
fldenv
add
jp
sbb
mov
es
leave
sti
call
or
xchg
xchg
out
xchg
cmp
ret
in
jne
fstpl
adc
cmp
push
call
mov
lock
add
lret
out
xor
fists
cmpsl
cmpsl
shrb
cmp
cmp
adc
jp
scas
xor
push
push
push
loop
ffree
insl
add
fs
cli
mov
pop
xor
sub
mov
push
jp
inc
cmp
es
or
dec
cmpsb
enter
fwait
cmp
cld
sti
xchg
int
sbb
mov
lcall
es
movsb
scas
pop
mov
ljmp
xchg
stos
xchg
pop
insb
enter
push
inc
lret
nop
test
clc
aaa
dec
lods
lods
outsl
add
pop
add
cld
fldlg2
pop
fstpl
iret
ja
outsb
popa
outsb
in
sub
push
inc
mov
and
dec
je
aas
cmp
xor
inc
dec
add
or
lret
mov
lods
mov
xor
ja
or
imul
out
mov
js
icebp
insl
repz
push
cmp
sbb
sub
outsb
mov
rcrb
pusha
dec
adc
ret
cltd
mov
lock
add
mov
jbe
in
jp
cmp
mov
add
bound
dec
inc
lds
dec
bound
xor
jbe
das
shll
push
iret
mov
stc
stos
xlat
scas
push
outsl
mov
dec
call
cmp
cmp
xchg
push
es
leave
adc
int
push
rcll
jo
loope
mov
mov
cmp
insb
xor
fmuls
mov
ret
ss
pop
popf
and
mov
adc
loope
movsb
inc
int
jge
movsl
xor
nopl
dec
rcrl
or
push
rsm
daa
and
push
loope
imul
sbb
lret
mov
rclb
or
fisubl
mov
mov
pop
mov
pop
rcl
fwait
bnd
mov
mov
xchg
ds
push
aad
push
jp
sbb
ffree
pusha
xor
ja
popf
pop
or
test
negl
aaa
stos
mov
aas
jp
or
inc
fsubr
dec
in
jae
xchg
fisubl
pop
mov
mov
faddl
stc
lds
inc
jne
lea
push
inc
test
scas
sub
js
test
icebp
testl
mov
fidivs
insl
sbb
mov
daa
in
push
jmp
cmp
lea
lcall
pushf
mov
adc
faddl
ret
sub
lods
ret
jb
sbb
int3
sbb
xor
ret
cltd
popa
mov
inc
dec
sarl
mov
adc
jne
jle
repnz
sbb
int
sub
xor
lret
cmc
mov
stos
cltd
test
sbb
and
imul
sbb
mov
in
lods
xchg
in
xchg
sbb
add
adc
mov
adc
sub
stos
jecxz
xchg
je
pushf
negb
fwait
xchg
mov
mov
pop
dec
sub
mov
orb
push
pusha
inc
stc
jne
subb
je
xorl
dec
cmpsb
mov
pop
bound
flds
xor
fs
or
scas
add
dec
mov
sbb
sub
inc
test
jnp
nop
in
pop
pop
jp
sbb
sub
imul
aad
sbb
adc
addr16
xlat
fldcw
pop
in
sbb
outsl
cli
loopne
cmp
andb
out
xor
aam
mov
mov
jp
js
cmp
mov
ss
xchg
ja
aas
scas
dec
cltd
movl
xchg
mov
mov
mul
push
int3
jnp
lcall
sbb
dec
lcall
test
out
aad
lcall
in
mov
push
pop
xor
pop
fimull
cmp
arpl
fdivl
pop
dec
dec
movsb
adc
mov
ja
and
popa
stos
push
jmp
in
or
mov
jp
sbb
cmp
xchg
ror
cmpsb
int3
scas
and
pop
ja
clc
cld
incb
pop
push
push
fstpt
std
dec
push
lea
data16
enter
ss
addb
test
sub
iret
xchg
rcll
mov
cmp
inc
sti
xor
pop
xlat
imul
iret
jecxz
pop
add
adc
mov
insb
and
jo
push
xchg
loop
mov
sbb
sahf
rcrl
xchg
fwait
in
lcall
es
cmp
mov
fldt
clc
mov
pop
cmp
pop
call
push
or
add
mov
into
jl
push
into
jno
clc
cs
fs
mov
loop
repz
cmc
lods
lock
add
adc
outsb
movsl
and
jge
lcall
cli
out
insb
mov
cmp
xchg
repz
jbe
imul
sub
inc
jne
fs
stc
mov
jb
insb
cwtl
fwait
adc
mov
push
arpl
pop
cmp
ret
cli
mov
push
jns
out
jecxz
movsb
cld
cmpsl
pop
mov
fildll
hlt
fimuls
cli
and
in
and
les
aas
sub
std
adc
dec
in
loope
mov
jb
mov
imul
inc
mov
ds
jb
mov
mov
mov
pop
cwtl
inc
xchg
stos
mov
mov
adc
jecxz
mov
xor
loop
scas
push
add
push
in
in
test
and
mov
je
push
cld
pop
out
shlb
ds
or
fyl2x
mov
mov
pop
fsubr
mov
mov
sbb
orb
out
pop
xchg
adc
pop
loope
lds
or
cs
adc
xchg
fisttpll
pop
in
add
jmp
and
outsl
mov
mov
or
sub
sub
leave
fimull
pop
mov
or
pusha
jl
loop
aam
add
shll
add
inc
inc
xchg
sub
call
push
and
pop
pop
rcrl
pop
xor
adc
xchg
mov
shr
mov
popf
aaa
rolb
or
fnstenv
mov
jecxz
xchg
xor
jle
popf
mov
out
push
fidivl
adc
jge
sbb
clc
mov
jp
sbb
sub
lock
inc
sbb
adc
leave
mov
mov
mov
mov
sbb
stc
xchg
sbbb
jns
mov
imul
or
cmpsb
jmp
mov
adc
xchg
outsb
push
mov
sbb
dec
add
and
rcrb
sub
out
push
lret
into
push
ss
push
imul
mov
aam
cli
mov
std
jnp
dec
outsb
push
int3
fwait
popf
mov
pop
outsl
jle
loopne
out
dec
je
sti
and
push
insl
aam
jle
pushf
jae
adc
sbb
mov
pop
pop
dec
enter
mov
jl
pop
mov
or
push
testb
mov
or
aad
sbb
mov
xorb
std
sub
cmpsb
aas
lock
orl
sti
mov
orb
scas
imul
fmull
add
insb
js
psubq
sbb
mov
test
mov
dec
jmp
mov
xchg
shlb
lret
dec
dec
les
ror
divl
clc
aas
push
mov
in
inc
xchg
int3
jae
repz
jmp
jle
pop
mov
movsl
cmpsl
xchg
xlat
xchg
lret
pop
sti
jecxz
mov
test
out
scas
out
pop
cmp
sbb
push
shrb
sbb
hlt
jmp
jnp
ret
adc
mov
out
dec
xchg
pop
adc
push
jb
mov
push
cmc
adc
cmp
push
inc
mov
std
test
inc
fdivrl
push
add
in
arpl
add
dec
or
lahf
lret
sbb
xchg
jne
mov
movsl
sbb
jmp
imul
mov
ficomps
jb
iret
arpl
les
xchg
outsl
mov
gs
jne
cmp
jo
fisubs
dec
arpl
in
fsubs
cmp
and
insl
add
adc
pop
xlat
lods
out
dec
repnz
fidivrl
xchg
add
std
cmpsb
xchg
stos
fnstcw
js
fs
push
xchg
fistpl
lret
mov
push
inc
out
pop
mov
push
lods
mov
mov
cmp
imul
mov
lods
imul
mov
fcom
div
lds
xchg
jno
pushf
xor
ja
pop
and
loop
xor
fisubl
rol
push
ret
sub
ljmp
mov
xchg
std
out
jge
dec
push
mov
push
or
jo
or
mov
scas
jbe
fcomps
xlat
xchg
sbb
dec
sbb
dec
imul
mov
xor
sbb
or
pop
jecxz
mov
lret
xor
mov
std
fldenv
push
je
stc
movq
adc
filds
jae
arpl
movsl
pop
xor
pop
cmpsb
mov
loope
inc
adc
cmp
pop
aam
fildl
jb
push
add
pop
xchg
es
adc
inc
int
movsl
mov
jno
jo
xchg
push
sar
push
cld
addl
stc
aas
cmp
push
aam
fcompl
subl
push
mov
mov
mov
test
jb
rolb
mov
cwtl
shlb
mov
popf
mov
fmuls
or
mov
pop
pop
dec
les
aaa
inc
sbb
mov
xchg
sbb
fcmovbe
xor
aad
sbb
push
xchg
jle
push
mov
pop
sbb
cmpsb
lods
loopne
or
dec
cmpsl
inc
int
and
mov
ds
cltd
adc
push
xchg
mov
add
movsl
jg
ret
rcll
pop
xchg
jo
outsb
fnstcw
pushf
loope
inc
jns
test
pop
pushf
rolb
jecxz
dec
fwait
scas
aas
jp
mov
rcrb
inc
jp
pop
or
mov
adc
xchg
das
movsl
jg
inc
mov
stc
cmpsb
pop
mov
pop
mov
push
ret
pop
dec
js
mov
loope
jno
lcall
pop
sub
cmc
sahf
cmp
ret
and
fisttps
push
dec
sbb
mov
xchg
stc
xchg
dec
lret
or
sbb
std
and
lahf
mov
lods
mov
cmc
loopne
lods
outsb
lcall
lcall
outsl
jl
pop
pusha
push
stos
mov
cld
pusha
mov
mov
stos
es
dec
andl
lahf
xchg
inc
push
pop
mov
jp
jmp
icebp
sbb
ja
in
mov
pop
out
and
popa
push
imul
jecxz
lret
mov
aad
mov
push
add
pop
hlt
testl
xchg
pop
jbe
sbb
repz
cmp
mov
int
cltd
mul
inc
test
sarl
imul
je
sbb
jns
dec
hlt
test
mov
xchg
test
xlat
jne
scas
cmp
mov
roll
int
push
call
les
push
nop
sahf
xchg
ljmp
sbb
sbb
js
dec
mov
test
int
inc
mov
adc
and
insl
idivb
cmp
testl
stos
pop
cmpsl
cmc
dec
movsl
popf
jle
lret
jno
test
imul
adc
and
mov
mov
inc
pop
inc
sbb
test
push
jne
mov
arpl
mov
mov
cld
sub
repnz
bnd
inc
cmp
sbb
sbb
scas
shrl
ret
aas
cmovl
mov
cmp
jecxz
fistl
pop
sbb
gs
jb
ds
or
or
push
test
std
rorl
xor
out
enter
or
aaa
jle
ret
inc
loopne
out
cli
aam
and
and
enter
add
and
inc
push
xchg
arpl
iret
in
xchg
jo
dec
push
ljmp
mov
fiaddl
adc
popa
push
andb
subl
in
lcall
call
push
mov
negl
mov
dec
jbe
fisttpl
push
in
mov
subb
in
out
adc
sub
ja
mov
mov
adc
cwtl
push
scas
leave
sahf
lret
cltd
out
fbld
mov
rep
adc
cs
in
sub
xchg
jmp
inc
or
mov
icebp
jne
dec
or
mov
es
cmp
call
stc
in
mov
jne
push
mov
call
sahf
push
mov
shlb
dec
shrb
rcrb
pop
addr16
adc
fwait
push
xor
addl
xchg
xchg
mov
call
xor
lahf
les
adc
in
jp
int3
movsb
xchg
cwtl
sbb
shlb
jl
cmovb
adc
mov
jecxz
decl
ret
cmp
jle
mov
push
jge
pushf
sub
stos
cmc
ds
nop
aad
adc
ret
pop
lods
dec
rorl
sub
mov
or
cli
sbb
in
xor
pop
add
inc
out
loop
fldenv
mov
test
inc
adc
xchg
dec
add
mov
out
daa
movsl
xor
mov
sub
jbe
test
cmp
mov
sbb
pop
mov
test
and
enter
adc
inc
mov
mov
inc
orl
xor
cli
and
mov
cmp
xchg
adc
addr16
push
mov
mov
cli
sbb
hlt
in
push
push
push
or
mov
rol
sbb
out
imul
hlt
dec
mov
pop
jmp
in
pop
jl
sbb
cmpl
iret
cmc
ss
mov
mov
ja
jno
into
out
dec
xchg
aaa
push
jmp
or
ljmp
jmp
mov
inc
lds
lret
dec
and
cmpsb
push
enter
mov
int3
stos
mov
test
mov
pop
add
sub
rcrl
leave
ja
divb
pop
leave
rcl
inc
jne
arpl
mov
sbb
das
mov
loope
mov
addr16
cmpsl
in
cmpsb
xor
std
push
bound
pop
push
xlat
in
sbb
mov
push
xor
stos
ss
xor
add
adc
adc
jmp
xlat
dec
rorb
fnstenv
mov
test
lods
inc
jae
sbb
adc
dec
lock
cli
mov
lret
int3
enter
adc
xchg
mov
stc
cmp
cwtl
dec
cwtl
fsubp
lret
test
in
mov
test
clc
das
scas
jmp
scas
jge
jno
test
mov
ljmp
fs
mov
jmp
sub
inc
loop
xchg
mov
jl
dec
cmpsb
dec
pop
mov
mov
add
stos
mov
dec
pop
push
iret
les
jnp
fisttpl
mov
add
jno
pop
insb
cmp
call
jle
push
movsl
movsl
or
jne
dec
repz
cmp
lods
push
ss
andb
jo
cmp
xor
loop
xchg
sbb
xor
mov
push
setge
stos
mov
pop
push
cmp
hlt
inc
sbb
test
orl
dec
add
fists
frstor
push
scas
shll
addr16
out
fcmovb
mov
cmp
push
out
push
icebp
jno
in
enter
xchg
je
push
out
and
insb
adc
addr16
mov
xchg
nop
sbb
ret
cld
mov
sbb
jo
or
jg
cmp
frstor
mov
inc
out
je
ror
and
pop
hlt
cmpb
xchg
sub
mov
lds
jmp
outsb
pop
mull
cmpb
cmpsb
xchg
adcb
adc
dec
arpl
xor
mov
inc
stc
push
daa
enter
movsl
rep
popa
mov
mov
pop
sbb
lock
aas
cmp
push
push
xchg
lret
pop
dec
stos
mov
xchg
test
rorl
pop
cmp
mov
in
roll
xlat
mov
add
icebp
mov
lret
push
cli
mov
mov
js
insb
scas
mov
mov
and
sbb
lds
push
stos
and
adc
ret
int3
stos
aas
ss
mov
add
xchg
int
nop
adc
jmp
nop
mov
std
ja
sar
pop
xor
xchg
jl
sub
daa
repz
xor
jmp
es
cwtl
sbb
pop
sub
push
push
pusha
sub
int3
test
int3
lods
out
add
xchg
sarb
cld
dec
lods
imul
popf
jl
loopne
mov
pop
sub
ss
adc
xchg
mov
mov
dec
xor
fwait
call
rorl
lret
mov
jmp
mov
xchg
inc
mov
dec
iret
mov
lahf
adc
adc
lods
pop
pop
jo
push
push
rcl
sub
lea
cmp
shlb
adc
xor
mov
mov
sti
dec
sbb
sbb
sbb
popa
sti
mov
push
je
sub
or
sub
and
pop
fdecstp
cli
scas
or
or
adc
daa
pop
pop
out
imul
and
icebp
outsl
push
pop
jg
add
pop
xchg
xor
je
popl
add
sarl
cmp
jno
add
add
xor
inc
dec
and
stos
aad
pop
js
xorl
push
mov
mov
or
cmp
mov
jp
popa
xchg
jno
push
mov
xor
nop
jp
jns
rcrl
dec
les
lods
in
in
cmp
loop
push
andb
or
sbb
mov
popa
mov
int3
test
adc
and
xchg
outsl
fnsave
xor
or
add
pop
aas
jmp
jb
jge
xor
repnz
outsl
jl
int3
lods
mov
std
call
ja
jae
xchg
and
leave
or
lds
xchg
dec
movsb
bound
mov
push
add
inc
xchg
sub
lret
sbb
mov
pop
xchg
push
mov
lcall
cmpsb
mov
add
fdivl
pop
sub
outsb
dec
fdivrl
xor
add
daa
jb
sub
xor
pop
repnz
insb
sti
test
rclb
movsl
insb
sbb
xchg
es
stos
pop
lahf
fcmovnu
loopne
or
or
std
stos
sub
push
ds
jp
jbe
and
cmp
push
orb
add
adc
add
cs
and
and
inc
mov
ret
jmp
sbb
pop
js
arpl
dec
and
movsl
out
pop
mov
outsb
mov
je
jne
inc
cmpsl
out
sahf
imul
mov
decl
pop
inc
jo
pop
and
out
fsubrp
scas
mov
je
xor
inc
cmp
dec
data16
or
push
ret
xor
out
clc
jecxz
movsl
push
xchg
fisttps
cmpsb
aas
jecxz
fidivs
nop
filds
jbe
outsb
and
xlat
cmpb
test
xor
xor
rcrl
sbb
sub
dec
xor
aas
mov
hlt
lahf
and
pop
fidivl
xor
jne
stc
jmp
mov
jmp
mov
push
push
incl
inc
aam
repz
sarl
jge
and
push
std
mov
add
or
out
pop
orl
cmp
call
dec
mov
cli
mov
sbb
dec
push
pop
into
and
lcall
adc
js
mov
sbb
sub
pop
in
outsl
jbe
pop
mov
gs
out
cwtl
and
lods
ret
scas
int3
std
sub
add
or
pop
mov
add
cmp
push
and
jp
and
jle
js
jae
sub
push
jbe
lods
sub
shll
fmull
adc
push
jmp
in
cmpb
mov
adc
loope
dec
ss
jnp
ret
jo
dec
pop
push
sub
cmpsb
test
jge
mov
insl
pusha
and
xchg
mov
lods
iret
js
int
cmp
les
ja
push
xchg
mov
cmp
arpl
ror
sbb
fcmovne
push
jne
mov
popf
xor
xchg
hlt
lcall
adc
xor
mov
push
mov
adc
sti
ret
adcl
ljmp
sub
ja
add
pop
and
sarl
push
or
mov
pushf
movsb
jno
lea
pop
fmuls
imul
repz
or
lods
dec
int3
jne
fdivrl
add
mov
fwait
loopne
nop
imul
sti
xor
frstor
inc
imul
lahf
sbb
push
in
jb
xor
divl
adc
rolb
in
sbb
inc
push
dec
cmp
cmp
in
sbb
cltd
inc
mov
scas
in
lahf
sub
mov
jle
adc
pop
sbb
mov
jl
add
shlb
xchg
xchg
cld
popa
pop
push
push
jg
cmp
xor
enter
mov
add
pop
adc
jo
bound
scas
push
shrl
mov
inc
adc
mov
pop
mov
out
mov
rcll
mov
pop
and
push
subl
jg
ja
rcr
xor
loope
sub
sub
cmpb
cmp
mov
xchg
cmpsb
inc
push
sub
ficomps
loop
out
dec
mov
scas
or
and
ret
push
insb
xor
cmc
jne
shll
adc
fsubl
push
xor
adc
pusha
outsl
out
push
js
sub
pushf
inc
fnstenv
push
sbb
pop
add
sub
jmp
test
xor
sub
sub
daa
cmp
outsb
scas
xor
sub
lcall
jns
je
iret
leave
xor
fcomip
cltd
dec
adcb
lahf
and
push
dec
adc
call
outsb
lahf
mov
stos
sbb
jb
push
xor
rorb
and
jns
fcoms
clc
fnsave
mov
popa
shrb
dec
xor
jno
xor
xor
loopne
out
dec
or
in
sub
push
int3
imul
xor
or
jne
ficoms
lret
jo
scas
js
rolb
test
pop
lock
adc
sbb
jno
and
imul
or
pop
scas
mov
in
adc
call
enter
pop
jne
mov
sbb
mov
andb
fadd
icebp
xor
pop
jo,pt
adc
ret
inc
shll
lods
sbb
addb
subl
popf
lds
dec
sub
movsb
mov
jmp
inc
mov
in
dec
xchg
pop
outsl
fidivl
lods
jmp
pop
xlat
mov
adc
cmp
nop
jno
ds
int
sub
pop
jge
mov
sub
popf
jo
cli
movsl
adc
dec
sub
inc
out
pop
push
jg
jae
shl
filds
jmp
lret
push
xor
ja
push
imul
mov
jae
out
pop
and
jp
jle
cs
mov
inc
or
pop
lret
sbb
outsb
out
shlb
dec
fwait
in
jp
and
adc
in
test
sbb
icebp
xchg
roll
icebp
and
pop
jg
pop
ret
jmp
outsb
jae
inc
push
jg
jle
and
les
lods
orl
mul
and
mov
xlat
mov
sbb
dec
sbbl
dec
sbb
ss
aam
pop
subl
in
inc
lcall
lcall
mov
out
stos
mov
aam
or
popf
pop
sahf
push
push
lds
jg
xchg
pusha
mov
jmp
lods
mov
test
insl
popa
and
stos
pop
mov
test
lahf
mov
hlt
add
push
inc
sbb
xor
push
outsb
jg
inc
cmpsb
push
outsb
ds
fildll
or
mov
enter
repnz
imul
mov
sbb
enter
loopne
outsl
mov
dec
sub
lahf
mov
aad
rcll
dec
add
into
push
out
mov
cld
std
daa
push
xchg
mov
sub
mov
rcrl
fs
cmp
xor
mov
into
dec
movsb
and
inc
add
lcall
imul
add
test
ja
in
push
lea
bound
test
lods
xor
adc
mov
adc
mov
gs
in
mov
sub
sub
mov
or
inc
cmp
dec
test
dec
pop
dec
jmp
sbb
cmp
cmc
mov
push
mov
mov
int
inc
mov
xor
fstp
push
sub
lret
pop
cmpsb
ret
or
out
cmpb
dec
sub
push
test
popa
xor
cmp
mov
dec
adc
xchg
push
aad
sub
idiv
jno
xchg
jnp
xchg
mov
cmpsl
popa
pop
insb
loope
insb
sub
test
mov
xchg
adcb
fdivl
mov
add
pop
lret
xor
pop
mul
leave
mov
fs
push
xor
xchg
sar
mov
mov
or
out
sti
pusha
jle
ljmp
pshufw
std
mov
pop
fwait
adc
mov
aas
cltd
mov
out
sub
cld
push
or
fdivp
imul
rolb
icebp
pop
push
push
mov
inc
mov
ficoms
das
adc
xchg
jae,pn
pop
insb
test
fsts
mov
pop
sub
jns
or
lahf
out
movsl
push
loope
mov
fistl
xor
fstpt
addb
stos
mov
inc
cs
pop
cmp
orb
rolb
or
ljmp
cmp
fwait
inc
or
mov
pop
mov
adc
adc
dec
arpl
out
jp
pop
cs
dec
cmp
insl
or
pop
dec
aam
mov
sub
es
stos
sub
push
and
pop
pop
xchg
imul
stos
aad
fbld
add
fcmovb
cmp
sbb
dec
pop
lahf
mov
push
push
lock
cmc
inc
testl
push
aam
imull
popl
pop
ljmp
arpl
sub
cmp
rorb
pusha
mov
sahf
xchg
xchg
xor
daa
push
sub
pushf
pop
in
sahf
enter
mov
or
es
push
in
outsb
fcmovbe
outsb
jmp
jno
mov
mov
inc
rcrl
int
adc
push
movsb
das
lret
insl
jae
aam
ds
pop
es
stos
push
lahf
movsb
stos
stc
into
dec
pop
mov
jp
mov
pop
insl
test
push
cmp
outsl
inc
or
push
jo
jp
lret
lea
les
negb
mov
jne
test
cld
dec
mov
imul
or
insb
scas
cmc
add
push
div
add
push
cmp
adc
xlat
xorb
lahf
sub
push
add
rcll
shrl
xlat
outsl
outsb
clc
mov
cltd
and
mov
pusha
flds
or
adc
or
mov
adc
filds
cmp
adc
notb
jne
femms
in
loope
loop
jns
in
cmp
mov
movsb
and
inc
push
ret
mov
jl
aaa
mov
mov
jl
aaa
push
fcoml
push
sbb
and
sub
call
cmc
ljmp
lret
fdivrl
mov
fsubrl
stos
sbb
adc
cmpsl
lahf
or
data16
ror
cmc
jne
dec
out
mov
in
push
xor
pop
orl
push
push
jmp
mov
or
inc
icebp
push
stos
subl
xlat
mov
mov
xchg
pop
stc
xchg
repnz
lret
mov
ret
sbb
xor
xor
pop
jecxz
pop
insl
popa
xchg
dec
jge
inc
or
sbb
mov
dec
sub
test
pop
icebp
in
push
clc
inc
jnp
or
mov
inc
inc
sbb
pop
rcl
push
imul
lods
jg
pop
in
xor
call
xchg
pop
aam
or
jl
test
inc
out
rcrl
add
popf
sbbl
mov
sahf
adc
test
leave
jbe
ret
jmp
sub
mov
adc
cwtl
movsl
test
lock
pop
in
or
insl
jl
ret
add
xlat
daa
mov
mov
pushf
loopnew
pop
scas
inc
jns
lcall
mov
add
jp
cmpsl
out
in
gs
push
push
mov
mov
push
push
cs
mov
pop
cmp
add
cmp
and
mov
mov
int3
call
cmp
mov
push
or
aam
movsb
cwtl
pop
mov
mov
mov
inc
pop
ds
fistl
aaa
daa
dec
pop
mov
xor
mov
bound
pop
pop
xchg
xor
dec
mov
xchg
sti
add
enter
arpl
sub
cltd
adc
mov
cmp
mov
adc
mov
mov
outsl
jl
fs
fcompl
and
pop
sub
jle
inc
stc
dec
or
jo
movb
loop
aad
subb
repnz
mov
adc
imul
push
dec
js
sbb
cmp
cmpsb
jle
push
pop
dec
notb
pushf
jno
jmp
mov
jb
ret
mov
dec
sahf
and
iret
lahf
add
jecxz
popf
and
dec
repz
sbb
and
push
dec
test
xlat
lahf
movsb
dec
icebp
sbb
in
push
lahf
lock
lods
jmp
les
xchg
jmp
sub
mov
outsl
push
xchg
adc
cmp
gs
mov
cmp
xchg
lods
sub
sub
dec
xor
xlat
iret
mov
xor
loope
ret
hlt
add
add
addr16
jp
inc
mov
lea
hlt
pop
push
ret
push
fcmovnb
fmull
pop
lret
adc
out
bound
aaa
add
or
iret
sub
shll
enter
push
pop
xchg
decb
outsb
cmp
xchg
cmpsl
rorb
add
mov
push
clc
aas
incl
call
cltd
mov
lea
test
sbb
push
daa
xchg
not
cmc
das
adc
xchg
push
mov
std
xor
addr16
inc
push
pop
adc
out
inc
push
mov
lret
aam
sbb
ljmp
lcall
shl
sub
aam
jbe
rorb
dec
in
and
lret
inc
and
push
insl
js
lahf
cwtl
jp
sarl
pop
jl
cmp
jmp
mov
lcall
mov
dec
add
xchg
sbb
nop
adcl
lcall
cmp
es
jnp
push
mov
jg
js
xchg
sbb
lahf
es
aad
imul
dec
mov
fcompl
pop
and
push
fsubrl
into
rcr
mov
inc
mov
movsb
mov
fildl
xchg
xchg
faddl
jle
push
in
mov
movsb
stos
cmp
sbb
inc
rcrb
mov
mov
inc
or
stos
ja
je
cmc
xchg
shll
pop
fdivs
mov
out
push
add
jno
mov
dec
and
movsb
enter
jnp
and
daa
inc
lcall
ljmp
push
pop
jae
aas
cmp
xor
dec
inc
xchg
dec
xor
xchg
adc
jl
xchg
and
push
xchg
in
sub
inc
xchg
xchg
mov
push
pop
cmp
pop
and
les
dec
mov
in
shlb
lret
gs
cmp
mov
or
dec
sahf
movsl
shrb
mov
adc
jnp
adc
and
mov
jo
push
fwait
arpl
pop
xor
cmp
push
loop
aam
movsl
dec
adc
ret
mov
pop
ror
and
push
shlb
lcall
out
sub
out
push
sub
lods
inc
mov
movsb
cmp
pushf
add
adcl
pop
je
rcll
scas
pop
fbld
and
xchg
aaa
sub
cmp
and
push
cld
adc
imul
leave
jle
sub
xor
inc
rolb
inc
rorl
int3
push
adc
insl
cmp
rorb
fdivs
sub
fstpl
xchg
pop
enter
mov
add
dec
test
js
sub
jno
fistpll
mov
add
and
cmpsl
clc
movsb
movsb
call
testb
lds
hlt
adc
xor
xchg
jne
adc
sbb
push
inc
movsb
xchg
mov
xchg
xchg
cmc
or
test
shll
and
lret
loopne
add
sub
icebp
sub
sbb
jmp
imul
cmpsb
pushf
mov
ljmp
ja
das
loop
ror
insl
test
xor
add
dec
adc
loope
gs
into
pop
or
or
mov
iret
or
dec
mov
test
sbb
mov
fcmovbe
or
popa
push
push
into
cmp
pop
out
test
adc
jle
adcb
inc
sbb
cmp
push
je
arpl
ss
sbb
repz
adc
pop
xorb
lret
pushf
add
xor
fimuls
test
shll
mov
cmp
ljmp
push
xchg
negb
test
or
cmpsl
out
aad
xor
fidivl
push
jecxz
jae
js
push
out
loopne
out
mov
jmp
insb
pop
rorb
enter
add
sbb
subb
mov
sub
mov
pop
fmull
jmp
fucomi
jl
mov
movsl
mov
mov
js
jg
data16
mov
hlt
sti
cltd
loop
cmp
je
adc
sbb
xor
xor
pusha
imul
aad
mov
mov
loopne
mov
push
sbb
mov
pop
test
sti
adc
lcall
je
dec
xor
out
or
jb
aaa
add
dec
inc
cmp
xor
cmpsl
lret
cwtl
int3
pop
and
dec
lea
imul
xchg
call
cmp
insb
push
mov
in
pop
in
adc
adc
in
outsb
test
test
pop
out
xorb
out
inc
in
out
fcompl
inc
lahf
add
push
pop
and
inc
jno
cmc
pop
pushf
cli
loop
pushf
cmc
push
mov
out
fs
ret
out
sub
or
popa
das
sub
aas
test
dec
sbb
sbb
push
mov
shll
jne
fisttps
xchg
jecxz
in
ljmp
loope
jbe
testl
mov
pop
sbb
mov
shlb
inc
pop
ja
adcl
ljmp
or
jnp
add
scas
sbb
je
repz
repz
loope
out
pop
xlat
data16
ret
cmpsb
pop
fldl
add
jnp
inc
pop
sti
dec
int3
adc
pop
or
in
push
rorb
aam
sbb
dec
dec
aad
das
dec
insb
push
cltd
pusha
cmc
mov
sub
lods
inc
aas
mov
add
pop
aas
sub
into
inc
les
jb
in
add
xor
and
testb
dec
nop
faddl
cs
imul
rcl
sbb
ficoml
sub
out
pop
and
data16
jbe
imul
ret
mov
repnz
scas
inc
xlat
movsb
ja
push
push
aam
popf
dec
add
add
shll
lods
or
cs
add
adc
jmp
inc
shrl
jge
push
pop
dec
loope
dec
dec
mov
mov
ja
add
test
cmp
shl
shrb
loope
dec
std
jmp
mov
add
jg
sti
mov
xchg
jmp
add
lock
pushf
inc
out
or
add
in
lahf
dec
and
xchg
in
scas
cs
xor
push
lret
jae
icebp
arpl
pop
push
xorl
xor
jb
inc
loopne
mov
or
daa
sub
sub
push
mov
adc
jno
inc
dec
insl
daa
outsl
rcr
hlt
pop
in
outsb
loop
das
adc
enter
cmc
add
cmp
sbb
sbb
lahf
inc
cmp
sub
mov
rolb
ljmp
mov
push
fstpl
in
data16
lret
sahf
dec
add
jbe
sub
call
or
jno
mov
stos
cld
cmp
out
aaa
test
pop
bound
sti
mov
xchg
nop
xor
push
out
clc
sub
xchg
sahf
out
lock
pop
fs
or
ljmp
mov
mov
adc
std
in
xchg
repz
and
pushf
in
inc
pop
jno
out
shlb
xor
or
popa
jb
xchg
sahf
mov
subl
rolb
mov
sub
xor
nop
loope
adcb
add
aas
in
jno
jp
scas
int3
clc
or
loopne
dec
aas
jge
in
clc
pop
xchg
test
xchg
xchg
fs
sbb
jns
push
test
movsb
sti
dec
inc
xchg
roll
call
test
loopne
jle
lahf
lods
dec
das
sub
gs
pop
xor
lret
jl
add
dec
dec
std
aaa
call
xchg
mov
scas
fimuls
cmp
js
push
or
scas
mov
fdivl
or
imul
nop
jl
inc
adc
in
nop
push
xchg
pop
xor
mov
lods
mov
orb
scas
js
push
sbb
test
or
push
adc
andl
icebp
cmc
xor
pop
loop
sub
pusha
sbbb
sarl
sub
xchg
pop
or
adc
pop
test
pushf
rcr
loopne
stos
mov
pushf
mov
popf
in
rcrl
aam
ja
int
fcompl
jecxz
dec
out
cmp
out
add
xlat
mov
stc
mov
pop
jmp
add
call
pop
cltd
adc
adc
jbe
insb
push
jmp
inc
mov
cwtl
rorl
leave
push
and
push
pop
mov
mov
leave
outsl
mov
inc
jg
push
aam
jecxz
add
mov
jp
jp
jle
mov
mov
push
adcl
xchg
or
int
cmp
stos
push
fisttps
dec
test
add
rclb
adcl
jno
xchg
xchg
lcall
aas
lock
cmc
inc
mov
mov
scas
sub
mov
popa
cmpsb
lret
sub
icebp
xchg
push
aad
mov
in
in
jae
add
sub
or
xchg
add
popa
jle
jp
jmp
push
je
xchg
and
jae
sub
cmpsb
xchg
and
mov
jb
aaa
xlat
mov
dec
pusha
sbb
jnp
lock
xor
add
inc
iret
push
lods
fnsave
imul
push
iret
sbb
inc
popa
cmpsb
push
mov
out
enter
push
jbe
jle
pop
pop
inc
outsl
jge
pop
pop
jns
inc
scas
shll
pop
mov
push
add
push
pop
repz
sbb
fdiv
adc
test
in
jbe
fstpt
popf
loope
jp
arpl
inc
pop
lods
sub
cmpsb
jo
rolb
mov
fistpll
call
imul
mov
jb
push
fsubrs
xor
fucomip
adc
inc
fidivl
mov
jae
sahf
in
out
lcall
or
decl
repz
daa
ss
in
rorb
cli
inc
or
into
das
sahf
add
rolb
sub
popa
jbe
test
or
jp
inc
xchg
pop
adc
lds
adc
add
xor
mov
insl
mov
fwait
imul
loopne
addb
cli
push
aam
mov
jae
adc
ret
data16
test
dec
lea
ss
ljmp
scas
call
pop
in
pop
out
jge
in
jle
push
dec
push
xchg
xchg
loop
dec
repnz
xchg
xchg
insb
mov
push
jbe
pop
xlat
push
mov
pop
shll
pop
cmp
pop
jle
fcomip
and
sarb
inc
mov
loopne
into
sbb
inc
jne
movsb
sub
push
sbb
mov
jmp
mov
addl
inc
fsubr
and
xchg
add
sti
ret
push
out
jp
dec
jg
icebp
ret
push
notb
je
push
fsubr
xor
or
rorl
mov
loopne
rcrb
lahf
jecxz
fwait
pop
push
scas
mov
stc
push
std
xchg
pop
push
jo
push
add
aas
inc
ja
movb
cmp
stc
dec
jb
aad
jns
ret
lea
andb
cmp
xchg
dec
stc
filds
repz
mov
inc
xchg
in
jno
sub
ret
xor
fs
pop
mov
ja
inc
minps
push
push
mov
shl
test
mov
in
sbb
sbb
mov
sbb
imul
sbb
enter
mov
push
mov
push
adc
jbe
push
cmp
xchg
add
popa
fs
xor
test
in
sub
pop
ret
stos
xor
jmp
aaa
xchg
les
aaa
mov
lret
adc
lret
xchg
es
dec
cs
or
cmp
lahf
das
or
cli
fs
lret
sub
jecxz
xchg
push
sub
and
or
arpl
mov
fsubl
xchg
sbb
cmpsb
in
in
orl
mov
sub
pop
mov
adc
mov
and
lds
mov
dec
stos
cmp
sbb
lret
mov
mov
test
roll
mov
mov
pop
decw
out
fisubs
mov
pushf
add
jmp
push
es
cmpw
subb
jo
adc
loopne
inc
mov
imul
xchg
and
pop
dec
jno
push
or
dec
xor
or
loop
cmp
lahf
adc
jmp
and
hlt
loop
mov
mov
stos
inc
aad
sub
pop
rclb
cmpsl
inc
and
xor
adc
popf
inc
movsb
xor
pusha
movsl
pushf
xchg
movsb
dec
pop
aad
addr16
mov
xor
out
outsb
dec
cmp
push
sbbb
pop
pop
and
push
hlt
mov
inc
dec
sub
fisubrs
sahf
xchg
sti
jp
push
mov
jns
icebp
movsb
imul
fldenv
rcll
test
daa
sub
lods
mov
jo
or
cmp
das
jnp
jg
push
inc
xchg
repnz
xchg
cmc
leave
sbb
faddl
or
enter
in
add
divb
lcall
inc
cld
popf
push
int
mov
jb
xor
lret
imul
cmp
sbb
inc
jmp
push
jno
mov
loop
aas
sbb
push
mov
insb
mov
dec
cmpb
js
mov
inc
push
stc
pop
cmp
cmpsb
jno
cmp
jns
jge
cld
lea
xor
fidivrl
das
fsub
mov
adc
push
xchg
imul
add
adc
rol
daa
mov
data16
mov
xchg
in
push
push
imul
loop
scas
js
push
jp
mov
cs
loop
outsl
sti
xor
mov
pushf
mov
outsb
and
sbb
sbbl
test
inc
fadd
ret
xchg
fiadds
dec
rcr
sub
cmp
sbb
xchg
mov
pop
test
ror
data16
fildl
inc
int
xor
test
xchg
xchg
lock
sbb
add
xchg
cmp
scas
xchg
xchg
call
lret
xchg
sub
stos
sbb
sub
or
xchg
cmp
xor
xor
xchg
pop
jno
mov
push
dec
inc
mov
add
xchg
sub
fisttps
and
popa
cmpsb
faddl
out
cmp
scas
inc
sbb
scas
std
and
cmp
mov
sahf
inc
pop
jno
adc
add
cltd
loop
lods
push
add
sahf
lcall
insb
sbbl
cmp
mov
inc
mov
pusha
inc
mov
and
std
push
dec
mov
sbb
and
movsl
mov
pop
aad
mov
fstpl
xchg
mov
imul
xchg
js
xchg
cs
shll
mov
or
inc
push
or
sub
adc
test
out
scas
ja
mov
jl
loope
pop
mov
arpl
adc
mov
and
inc
out
mov
aam
icebp
insl
fcomps
and
jb
dec
dec
int
mov
adc
in
jle
mov
push
add
mov
xchg
in
pop
add
and
mov
and
cmp
dec
jae
lock
xor
pop
inc
pop
sbb
aam
ljmp
sbb
pop
packuswb
je
jecxz
push
cmp
xor
rclb
aam
insl
mov
push
mov
jne
outsb
into
cmpsl
push
std
jecxz
scas
std
outsl
cld
cmc
orl
jecxz
std
ljmp
sti
xchg
sub
and
negb
aas
mov
cs
fidivrs
das
xchg
shrl
aam
jmp
lea
jmp
movsb
shl
sbbl
inc
mov
cmp
xchg
test
and
pop
push
dec
jbe
insl
xchg
fscale
fbld
cmp
push
inc
jle,pt
cmp
cwtl
jle
imul
insl
sub
cld
movsl
flds
into
dec
loopne
addr16
xchg
sub
xchg
jp
add
mov
or
cli
sbb
sbb
mov
dec
or
adc
sub
and
std
inc
jmp
test
mov
add
xchg
mov
add
sub
out
jp
stos
outsl
jno
repz
add
mov
cmp
inc
pop
dec
sahf
mov
fistpl
lahf
push
aad
test
jp
mov
ss
rol
sbb
test
mov
cmp
out
xchg
jb
or
pop
cld
test
mov
or
fmull
xchg
push
int
sbb
rcrl
fwait
lods
cmp
outsl
xsavec
test
xor
rcrb
test
inc
inc
leave
je
sti
and
push
mov
gs
pop
mov
out
insb
fidivrl
mov
dec
cmp
mov
scas
xchg
repnz
inc
and
cli
adcb
pop
sub
fcompl
push
pop
jae
insl
mov
ds
push
adc
jmp
cltd
cmp
pop
xchg
fisubrl
xor
std
push
jmp
or
pop
ss
in
sbb
movsl
mov
sub
push
faddl
push
xor
shll
adc
sahf
ss
and
xchg
bound
mov
pcmpeqb
sub
mov
dec
inc
jmp
cwtl
test
lods
jmp
and
or
cld
cmp
shr
testb
push
inc
rorb
mov
repz
mov
sub
push
add
mov
and
adc
mov
out
cmpsb
sbb
loopne
xchg
popf
aad
fdivrs
cmp
push
nop
daa
jne
mov
jno
lahf
pop
stc
push
repz
add
jge
outsb
xor
lods
sahf
mov
loope
lar
pop
lahf
sub
xor
push
xchg
and
push
insb
lea
hlt
sub
stc
add
add
cmp
aas
jecxz
pop
jg
and
xor
aam
cmpsl
imul
ficoml
adc
movsb
ljmp
arpl
rclb
jl
out
loopne
lcall
add
int
insl
or
cmp
jo
insb
test
add
inc
pop
push
adc
pop
hlt
clc
repz
push
out
add
cmpsl
push
xchg
nop
leave
xor
mov
mov
cs
rcll
xorl
leave
cmp
add
xor
sub
sbb
push
jns
mov
ss
pop
adc
adc
iret
dec
xor
dec
sbb
push
negb
mov
cmp
popf
xor
push
push
movsl
out
cmp
xchg
mov
test
xchg
lock
aad
mov
add
mov
sbb
xor
fnsave
jl
sbb
popa
jge
mov
lret
lea
dec
ret
add
insl
scas
cs
insb
mov
mov
push
mov
aam
mov
and
sub
dec
fs
fcomi
dec
mov
add
inc
insb
mov
xchg
and
push
xchg
mov
cmp
sbb
sbb
push
in
add
popf
inc
ret
out
xchg
cmovg
sub
or
xchg
and
jnp
or
or
xchg
enter
in
scas
aas
std
stos
test
cld
fstpt
notl
mov
cmp
pop
subl
stos
mov
lods
dec
or
mov
jl
pop
sbb
add
xchg
xor
sub
mov
fsubs
shrl
adc
mov
pop
pop
hlt
add
jp
imul
test
iret
jp
jae
pop
clc
fildl
xchg
mov
xlat
push
hlt
inc
xor
mov
leave
lods
lods
and
fs
addr16
add
dec
push
mov
pop
mov
dec
vdivpd
pop
rcrl
out
aaa
das
int
cld
repz
jl
cmpsb
adc
adc
test
cmp
sbb
fcomps
xor
scas
pop
insl
jge
and
ja
in
xor
push
lret
rcr
push
xor
cs
mov
mov
add
add
cmp
mov
push
clc
mov
inc
dec
popa
mov
inc
pop
outsl
clc
lcall
test
sbb
cwtl
fisubs
ja
insl
lret
xorb
in
in
pop
and
mov
xchg
flds
sub
jecxz
mov
daa
cltd
and
iret
aam
or
mov
adc
movsb
xchg
dec
jg
int3
rorl
push
mov
movsb
mov
cmp
mov
xor
test
test
jnp
xchg
mov
and
imul
add
jae
push
jae
mulps
fiadds
lahf
out
mov
mov
push
xor
xor
push
lds
sahf
and
in
mov
mov
push
push
push
add
rorl
notl
shl
inc
dec
dec
cmp
jno
pop
lds
fsubrl
push
add
add
sbb
cmp
stos
xor
or
add
xchg
jmp
push
test
dec
xor
xchg
dec
roll
sar
int
shll
fistl
popl
insl
pushf
sti
jg
or
out
fmuls
inc
popa
jge
stc
les
scas
cs
adcl
dec
push
ret
fnstsw
adc
pop
pop
sub
out
fsubp
in
jbe
jae
in
rcrl
out
daa
and
add
pop
mov
pop
int
inc
repz
mov
push
add
push
lock
cmpsl
out
xor
pop
sbb
das
push
jne
inc
push
lods
dec
jecxz
xchg
cld
push
das
adcl
sahf
int3
mov
dec
in
pop
or
mov
cmpsb
add
lret
aam
iret
shr
mov
dec
pop
aam
adc
push
cmp
xchg
cmpsb
sbb
cli
xor
xchg
inc
or
cmp
xchg
pop
in
mov
jp
subb
cli
vpcmpeqb
inc
call
fadds
in
jne
jp,pn
mov
in
cld
mov
or
aad
mov
cmpsl
lret
repnz
aam
cmpsb
pop
gs
mov
lock
hlt
leave
xchg
push
and
out
inc
cmpsl
fcomps
icebp
jbe
or
call
push
push
cmc
dec
pop
ja
into
mov
outsb
popa
aas
shrb
xchg
es
aaa
nop
fcoms
ja
cmp
jecxz
mov
popf
lock
cmpl
mov
inc
enter
jo
xor
sbb
push
pushf
sub
stc
adc
idivb
aad
fistpll
es
sbb
divl
enter
icebp
mov
pop
dec
stos
pop
std
mov
sub
xor
mov
mov
mov
shl
outsl
jne
rol
dec
cli
cmp
insb
aaa
ret
ljmp
or
add
sub
mov
push
push
in
pop
dec
add
aaa
jne
rcll
mov
xchg
and
fists
je
xor
testw
jg
rorl
add
fwait
xchg
push
sbb
test
sbb
test
aad
into
fcomps
adc
add
das
fstl
outsb
scas
mov
popf
mov
dec
jo
xor
pop
lea
pop
sub
inc
rorl
sbb
icebp
or
sub
lahf
daa
and
sub
dec
outsb
loopne
pop
movsb
outsb
mov
popa
lret
mov
cmc
mov
mov
fninit
addl
jmp
mov
pop
push
das
addr16
pop
test
cmp
ja
inc
lds
mov
inc
ret
jge
int
mov
loope
push
xor
push
xlat
fmull
and
xor
jnp
loope
mov
fcompl
hlt
hlt
adc
sub
jae
mov
out
xor
xor
mov
pop
sbb
xchg
dec
mov
mov
rol
stc
ja
mov
push
mov
fists
lods
scas
jno
loope
imul
sarl
and
and
nop
out
lret
add
xchg
ds
sarb
ja
push
mov
out
adc
insb
shll
push
inc
sbb
fisubrs
jmp
sbb
mov
xorl
add
test
add
mov
subb
mov
out
orl
dec
stc
in
mov
mov
sarl
and
dec
sub
adc
insb
push
je
mov
mov
jae
scas
fistps
cmpsl
cli
hlt
mov
loopne
pop
jbe
xchg
and
cmp
adc
jg
and
or
test
fbld
insb
loop
add
pop
jge
gs
fwait
mov
inc
xlat
push
popf
dec
push
jnp
cmpsl
jmp
add
adc
dec
jp
insl
pop
push
push
mov
mov
fidivrl
lods
jne
mov
iret
adc
in
cmp
or
mov
mov
hlt
std
pop
scas
jne
sbb
ljmp
jo
cli
jge,pt
inc
push
sbb
test
sbb
jp
or
aam
or
push
int3
xor
mov
xor
add
sub
adc
dec
in
mov
inc
ljmp
inc
xchg
inc
cmp
ret
rorb
pop
fs
push
std
cld
push
mov
add
mov
lcall
mov
sub
insl
mov
jnp
subb
iret
cmc
pop
inc
test
mov
cmp
inc
daa
inc
lods
js
inc
ret
out
add
mov
dec
xor
xchg
xor
xor
adc
hlt
push
add
int
scas
test
push
xchg
cmpsl
sub
xchg
fildl
and
or
mov
in
xor
mov
xchg
cmpl
sbb
sti
fldpi
add
mov
testl
xchg
test
or
popa
or
lret
sbb
jp
negl
aad
in
mov
scas
push
jno
sbb
cmpsl
dec
xchg
cmp
mov
and
xor
dec
lret
ret
test
mov
xor
call
or
jmp
fldt
cli
adc
enter
fucomip
and
sub
lcall
sub
xor
jns
push
adc
sarb
cwtl
mov
adcb
in
cmp
icebp
mov
lods
lods
mov
mov
push
push
scas
push
sub
add
sti
dec
mov
push
ror
fnstsw
bound
mov
or
xor
outsl
xor
and
push
loop
pop
adc
pusha
cmp
out
push
and
sbb
ret
lods
int3
inc
jns
rcrl
push
lea
jb
push
mov
mov
cwtl
es
in
cmp
xor
dec
xchg
test
hlt
idiv
dec
inc
out
lea
popa
mov
dec
or
push
outsb
mov
inc
mov
lds
or
shll
out
mov
mov
pop
nop
push
std
push
sub
mov
xor
andl
addl
jecxz
lods
pop
and
and
lcall
adc
push
out
adc
dec
xchg
mov
sub
xchg
scas
rcr
cmovs
mov
ret
and
pushf
sbb
shrb
xchg
gs
hlt
loope
cs
sbbl
sar
cmp
sub
fs
outsl
mov
inc
repz
or
jbe
out
int3
mov
xor
sub
or
fnstsw
cmp
and
gs
lods
jns
or
or
dec
inc
cmp
mov
and
and
inc
js
cwtl
xor
add
pushf
pop
fistpl
push
repz
in
cli
push
and
das
jp
pop
fwait
insb
nop
popf
push
mov
das
daa
lret
sti
es
or
lcall
mov
in
imul
iret
jg
outsl
sub
push
push
loop
mov
cmp
imulb
dec
test
add
ljmp
cmc
mov
push
pushf
mov
mov
jb
les
jne
std
stos
mov
push
jne
cltd
call
adc
jnp
out
lds
andb
outsl
lods
repnz
aam
js
stos
mov
jmp
sbb
mov
data16
pop
std
mov
daa
sbb
jno
popf
or
sbb
pusha
mov
movsl
xchg
or
pop
sarl
scas
adc
jge
rol
sub
loop
sub
popf
rolb
sbb
lods
inc
sub
cmp
push
and
pop
test
sbb
pop
add
frstor
sbb
pop
pop
lods
iret
jne
mov
push
js
inc
addr16
cmp
fnstsw
sub
fs
out
cltd
add
and
loopne
ja
inc
jbe
test
aaa
mov
std
scas
mov
dec
or
sbb
lock
push
jp
and
clc
shrl
sahf
pop
cmp
jb
or
arpl
pop
fs
xchg
lcall
popf
vshufps
out
ret
push
push
js
popf
jl
pushf
push
mov
xor
test
mov
sub
stos
push
mov
xor
sbb
cmp
push
lea
into
sbb
nop
jne
push
aaa
mov
pop
mov
pop
mov
movb
cld
clc
cmpsb
adc
std
add
sub
pop
sub
jmp
mov
ljmp
outsl
movsb
cmp
cwtl
ret
fwait
int
mov
push
push
mov
cs
jns
test
test
out
adc
cltd
lret
ret
push
fsubrl
inc
push
cli
notb
pop
or
shrl
xlat
mov
call
out
test
into
lock
repnz
stos
aad
xchg
les
mov
neg
sarl
loope
or
stos
dec
enter
loop
adc
dec
fildll
adc
in
call
cld
popf
sbb
and
and
pop
fs
cmp
sub
loopne
inc
fstps
add
push
mov
fwait
push
pop
add
fimull
sub
sbb
dec
sbb
das
insb
ds
inc
movsl
das
cs
and
jg
cld
lods
cmp
and
add
in
ja
cmc
adc
jmp
pop
sub
sub
sbb
add
loope
jmp
inc
loope
mov
mov
inc
mov
imul
lcall
mov
add
in
imul
jmp
add
mov
stc
lods
adc
mov
addr16
mov
dec
xor
popf
cmp
push
or
outsb
ret
stos
add
shlb
lcall
repz
cmp
addr16
pop
cmpsb
rorl
jp
sti
add
imul
aad
adc
xor
popa
push
sbb
out
es
pop
pextrw
sbb
adcl
loopne
xchg
or
or
je
loope
or
xor
jbe
or
sbbb
jno
aam
loope
lock
fisubrl
rcr
adc
pop
push
insl
pop
adc
mov
mov
cltd
imull
cwtl
sti
mov
imul
ficoml
push
not
push
out
push
jle
jo
je
mov
mov
push
pop
cmp
push
imul
xor
push
sub
mov
insl
dec
sbb
outsl
jbe
cwtl
mov
sub
sbb
jp
mov
pop
pop
or
push
add
xchg
xchg
and
cmp
sbb
daa
out
ljmp
push
int
in
leave
fnstcw
mov
cs
lods
stc
pop
sbb
sub
cvttps2pi
ja
jae
test
and
dec
scas
mov
scas
pusha
or
test
test
fwait
xor
in
shll
aam
jae
inc
pop
mov
push
xlat
fisttps
iret
mov
mov
inc
sti
push
stc
mov
and
and
mov
or
aam
dec
dec
setg
cmc
inc
sbb
test
fstpt
dec
clc
and
sbb
stc
lock
add
cwtl
or
out
mov
js
pop
insl
mov
xor
jmp
imul
stc
iret
xchg
xor
ret
mov
jo
sub
xchg
rol
insb
popf
les
xor
push
leave
das
cmpl
push
adc
mov
pop
push
pop
jno
inc
loop
jae
mov
cmp
dec
sbb
fisubrs
jne
cmc
pop
xchg
push
fmulp
mov
ds
or
imul
in
getsec
xlat
mov
jmp
sub
sbb
sub
mov
loopne
stc
call
push
xchg
xchg
stc
or
add
inc
mov
mov
fdivrs
xchg
ss
popf
and
and
inc
in
nop
in
inc
mov
fs
mov
dec
testb
cmpsl
into
xor
inc
icebp
mov
cwtl
in
cmp
push
testb
or
push
lret
cwtl
jle
push
lods
test
mov
pop
sti
xlat
jp
lds
pop
jg
outsl
imul
push
insl
int3
subl
push
mov
inc
mov
out
push
cmp
popa
and
in
ror
xor
loop
xchg
leave
dec
ffree
cltd
or
adc
jnp
nop
test
aas
call
jno
cmpsl
and
cmp
fdivrs
xlat
adc
stos
stos
jg
mov
out
adc
bound
xor
add
add
add
fdivrs
mov
jns
test
ret
out
sub
mov
jle
outsb
dec
pop
mov
outsl
jle
dec
je
hlt
cmpsb
cltd
mov
icebp
jl
add
movsl
ret
notb
mov
imul
lods
lcall
inc
push
out
cmp
xor
adc
aam
push
js
jg
jne
roll
std
dec
lahf
aaa
setno
add
pop
sub
leave
incb
lret
rorl
or
sbb
jno
mov
and
mov
popa
ljmp
addl
daa
push
adc
xchg
pushf
cmp
pop
fldenv
ljmp
xchg
imul
iret
add
rol
cmp
mov
filds
xor
mov
dec
sbb
out
xor
mov
jp
test
lahf
cmpsl
or
mov
mov
inc
les
jb
dec
and
hlt
daa
fcoms
fdivrs
fucom
lods
xor
leave
fwait
bound
ss
jg
cltd
xchg
inc
pop
mov
pop
sahf
or
orb
push
or
and
pushf
pop
and
in
xchg
xchg
cli
lds
std
lods
sbb
mov
add
stos
shlb
sub
out
jno
aas
ja
jle
push
and
sarb
or
movsl
enter
stos
adc
jne
sbb
pusha
cmpsb
cmpsl
gs
in
xchg
push
xchg
sbb
ret
fimull
loop
addr16
jns
bound
lock
shl
icebp
jbe
out
jns
mov
and
lcall
lret
mov
push
out
pop
inc
adc
push
test
mov
sub
nop
sbb
dec
cwtl
pop
jge
adc
mov
inc
idivb
inc
pop
addr16
push
fistpl
cmp
push
mov
lret
adc
je
pop
fs
sub
xchg
lods
inc
mov
mov
enter
jecxz
imul
xor
into
add
inc
shl
enter
adc
push
push
or
push
push
adc
mov
cld
cmpsb
push
jge
jp
lahf
out
dec
ficoml
cmpsb
xchg
lods
fidivs
sti
movsl
bound
push
and
ret
add
cmp
shl
mov
or
es
xchg
adc
xor
incb
orl
mov
lea
sbbl
cli
cltd
sbb
out
mov
rorl
add
je
cs
mov
iret
scas
pop
movsl
pop
cmp
call
imul
lea
dec
inc
mov
lds
jae
adc
jge
fmul
xor
jno
call
movsl
fsubl
int
push
lea
stos
shll
jp
out
lock
push
icebp
push
mov
push
movsb
xchg
ret
fwait
andb
xchg
mov
mov
mov
xchg
mov
iret
lret
adc
lods
pop
pop
and
fimull
iret
cltd
icebp
fcmovb
push
aad
popa
or
loop
mov
or
insl
je
mov
insl
push
cmpsl
lret
jnp
jge
push
cmpsb
jl
jns
mov
push
add
jno
pop
sbb
push
cmp
stos
adc
icebp
dec
mov
or
es
xor
sub
fdivr
adc
push
xchg
push
or
fdivrl
xchg
aad
in
push
mov
mov
aam
aas
aaa
popf
test
subb
cmpsl
repnz
mov
xchg
jle
add
std
lock
inc
shll
xor
xlat
mov
pusha
sar
lret
add
outsb
cmp
lods
sti
add
mov
rcll
or
fiadds
out
scas
in
and
loope,pt
lcall
mov
outsl
mov
xor
arpl
fcomps
pop
je
sbb
leave
xchg
sarb
fisubrl
mov
outsb
sub
mov
inc
mov
cmpsl
and
sbb
insl
ja
push
enter
lods
lds
push
imul
mov
sub
incb
cmpsl
mov
icebp
jae
fildl
pushf
push
xchg
mov
in
adc
out
fimuls
outsb
dec
dec
cs
jp
adc
loopne
push
or
sti
fimuls
js
and
in
test
repz
out
push
das
mov
aad
cmp
aas
int3
fdivrl
aaa
ficompl
add
or
push
fsubs
add
cmp
loopne
add
pusha
add
pop
js
clc
mov
je
push
fcoml
cmp
sbb
sub
scas
vpackssdw
inc
push
repz
mov
in
int3
mov
in
jns
stos
add
push
and
push
inc
in
xchg
add
aaa
xchg
inc
mov
arpl
pusha
xchg
outsl
insb
scas
ds
imul
push
mov
pop
and
push
xlat
lahf
dec
outsb
cld
lds
mov
imul
jge
aad
jb
test
add
sbb
add
xchg
ja
push
inc
fs
ss
mov
mov
mov
fldt
sarb
loopne
je
mov
mov
push
sbb
jnp
and
cmp
enter
pop
mov
push
into
fists
in
popa
mov
push
mov
and
inc
shr
xor
out
xchg
loopne
int3
dec
pop
sub
in
push
sbb
hlt
sub
sar
testl
cmp
pop
jp
jne
lods
test
mov
or
in
mov
pop
fs
das
inc
shlb
push
add
fs
pop
cld
xor
inc
xchg
pop
add
or
mov
scas
mov
fdivp
push
out
adc
and
rcrl
mov
jno
in
cli
adc
mov
repz
cmpl
xchg
rorb
insl
orl
movsl
or
loopne
push
add
stc
inc
cwtl
mov
in
out
and
in
aad
nop
cmp
das
jmp
ret
ss
hlt
sbb
daa
neg
movb
push
jb
mov
loope
pop
xchg
aam
rolb
mov
loop
aas
lock
or
push
outsl
roll
xchg
jmp
popf
je
jecxz
lret
les
inc
jb
add
out
outsl
add
inc
jmp
fcomp
sbb
hlt
and
test
and
add
inc
adc
nop
mov
pop
mov
and
test
mov
cltd
in
in
mov
mov
inc
sbb
fsubrs
xor
movsb
pop
and
insl
lret
xor
pushf
push
shrb
inc
lods
das
lods
dec
std
adc
mov
mov
xor
mov
fsubrl
push
jmp
jo
dec
xchg
movsb
push
inc
lret
imul
sbb
add
cmp
push
stos
sti
adc
jp
dec
addr16
les
mov
loopne
cmp
in
sarb
mov
mov
push
xchg
minps
xchg
test
idivb
xor
repz
decl
xor
outsb
iret
in
imul
mov
jg
pushf
fmul
add
inc
inc
mov
lods
push
les
cmp
mov
xchg
iret
cld
lcall
lcall
loop
mov
outsb
lcall
mov
inc
sarl
xchg
clc
repnz
stos
inc
or
mov
ret
mov
icebp
into
lcall
out
jae
cmpsb
xor
jbe
cwtl
mov
iret
testl
mov
icebp
and
addr16
cmp
aaa
pop
mov
mov
test
loopne
xchg
push
adc
fcompl
aam
cmp
push
addl
or
sbb
jnp
and
aam
rolb
add
in
je
sbb
loop
filds
out
xchg
insl
lahf
outsl
cmp
repnz
loop
inc
dec
jg
cwtl
jo
frstors
daa
idiv
cmp
test
sbb
xor
jns,pn
sbb
add
shlb
mov
cld
insl
mov
jge
cli
aaa
sbb
icebp
fildl
lcall
ret
push
add
out
cmp
clc
dec
push
mov
ret
enter
mov
cmp
ret
sbb
adc
lods
fsub
push
icebp
dec
push
das
sub
xor
pop
jl
jecxz
sbb
cltd
in
popf
push
inc
xchg
int3
add
sbb
dec
pop
sbb
and
cwtl
shl
cld
lea
cmpsl
mov
mov
inc
inc
xchg
jo
adc
or
pop
mov
push
mov
dec
data16
pushf
leave
pushf
and
or
xlat
mov
push
or
xor
ljmp
mov
mov
mov
add
jle
imull
pop
cmpl
lods
inc
enter
int3
or
or
or
jb
andl
scas
ljmp
fists
mov
movsl
mov
add
mov
mov
enter
mov
add
dec
loopne
xor
sbb
mov
mov
inc
xchg
cmp
repz
xchg
in
cmp
mov
fs
jg
xor
cmpsl
movsb
xor
jnp
lock
cmp
aaa
into
std
dec
dec
cmp
cmp
jne
outsb
lock
in
or
test
mov
add
scas
push
aam
inc
scas
cmp
inc
stos
es
jns
adc
sub
mov
mov
shrl
out
cld
dec
mov
or
jno
leave
repnz
ret
add
sbb
cld
add
cltd
roll
roll
mov
ja
push
in
mov
repnz
aam
les
nop
push
icebp
and
xor
insb
push
cmp
clc
repz
xchg
loop
push
test
or
push
push
movsl
cmp
stc
and
and
push
fadds
mov
mov
ret
popa
pop
loop
out
lods
ret
ljmp
jmp
lret
aam
rcll
insb
jne
inc
enter
fsubl
ret
imul
mov
imul
psubd
in
mov
sub
iret
fsubrs
or
shl
inc
mov
imul
xlat
lods
lcall
loop
xor
daa
or
fidivs
outsb
roll
cs
mov
jmp
jg
push
pop
ljmp
into
mov
and
pop
sahf
bound
and
repnz
sub
push
jae
xor
and
xor
cwtl
aaa
and
cwtl
outsb
xchg
in
dec
jnp
mov
aad
or
jecxz
addr16
lahf
insb
stos
rcll
pop
mov
pop
xchg
inc
out
push
ficompl
aad
add
popf
lods
das
push
push
in
pop
jae
imulb
dec
lret
xor
jle
mov
repnz
pop
push
dec
bound
xchg
outsb
popa
scas
sar
jnp
jno
push
mov
inc
mov
pop
cmpsl
xor
movsl
push
push
int
lret
daa
xor
cmpsl
add
lds
lea
push
notl
xchg
dec
jns
push
cwtl
sub
mov
pusha
into
ds
pmaddwd
vpsubb
test
into
xchg
xchg
dec
dec
sub
loopne
adc
mov
test
dec
out
repz
popa
cli
adcb
pop
in
mov
cmp
and
xor
mov
sbb
jmp
cmp
dec
dec
jae
pop
mov
out
outsl
movsl
dec
loop
imul
mov
jnp
popf
in
lcall
mov
jge
push
mov
adc
mull
and
push
push
pusha
jns
or
sbb
sub
rol
inc
data16
jle
and
mov
mov
or
pop
in
adc
lods
dec
inc
fisttps
jecxz
pop
sbb
aad
in
cmpsl
std
add
ret
aad
xchg
or
mov
movsl
jae
add
sti
mov
jo
test
ret
inc
shrl
cmc
or
lcall
arpl
mov
mov
push
jle
iret
push
sbb
pop
jae
lea
mov
push
add
mov
outsb
data16
adc
or
test
leave
sbb
sbb
arpl
aam
imul
incb
cli
stos
outsb
test
popa
lods
popa
int3
stc
adc
out
xchg
push
mov
fldt
xchg
dec
sbb
mov
shlb
nop
bound
loop
xor
lret
push
inc
dec
hlt
jb
xor
test
xor
orl
clc
imul
jge
inc
ret
outsb
icebp
shl
add
testb
test
push
in
cs
pop
mov
rcll
lods
leave
sti
idiv
imul
aas
dec
lahf
repz
shl
das
test
rorl
movsb
jle
jle
test
jmp
arpl
or
pop
sub
scas
add
or
sub
sahf
sub
in
pop
fidivs
jle
and
cld
push
mov
in
pop
lcall
fsubrs
insb
cmpsb
mov
dec
dec
mov
in
pop
icebp
test
dec
mov
sub
lods
aas
mov
jb
push
int
imul
cmpsb
push
loopne
inc
push
mov
cmp
scas
sbb
scas
lds
pop
mov
into
dec
sub
movl
jbe
xorb
out
cwtl
subl
sub
hlt
repnz
xchg
jae
jle
fimull
xchg
loop
out
and
imul
inc
mov
pop
add
cmp
mov
adc
jecxz
add
out
je
mov
test
clts
into
shll
dec
pop
or
lret
jp
or
outsl
inc
mov
repnz
sbb
sub
aas
mov
dec
jns
or
out
popa
movsl
or
mov
xchg
pop
cmp
pusha
bswap
test
jb
mov
jp
xchg
lret
mov
outsl
std
sahf
pop
mov
in
pop
xchg
insl
in
mov
test
mov
ss
test
mov
outsl
xchg
outsl
push
inc
ss
jae
aad
stos
cmp
jne
and
pop
sbb
stc
aam
inc
js
lds
push
fwait
inc
jecxz
ret
add
icebp
nop
mov
cli
sti
mov
jns
cmp
sbb
push
cmp
or
add
jg
addr16
fnstsw
aaa
leave
mov
cmpsl
pushw
rcrl
scas
leave
lock
xchg
scas
sbb
cltd
or
mov
or
push
and
cli
fistpll
enter
mov
adc
out
dec
mov
or
mov
add
imul
ret
das
xlat
pop
cmpsl
rclb
mov
in
cwtl
repz
cmovae
mov
negl
pop
jne
aad
ss
jns
pushf
mov
xchg
les
mov
mov
and
inc
xchg
data16
inc
sbb
push
push
lods
cmp
sub
mov
adc
sub
cmp
inc
push
stos
divb
cli
mov
or
mov
mov
xchg
push
or
pop
sub
movsb
xchg
dec
ds
cmc
mov
test
push
insl
lret
cmc
inc
cmp
pop
xor
testl
xor
or
jne
stc
aad
sahf
pop
inc
lods
outsb
push
or
daa
shll
es
xlat
inc
push
repnz
push
dec
jae
enter
mov
add
sub
or
sahf
cmp
fwait
fwait
jnp
jb
sub
pop
lods
inc
loopne
cltd
mov
test
aad
cli
adc
dec
mov
sub
jp
sbb
xchg
enter
push
sbb
inc
sbb
xor
bound
sub
or
shll
jb
add
inc
das
pop
jp
mov
adc
mov
xchg
sub
int3
pop
jge
std
mull
aad
clc
mov
add
xchg
fsubrs
stos
stos
xor
pop
sub
pushf
xor
jno
xchg
jle
push
fcoms
push
fwait
xchg
shl
divb
pop
xor
xor
shlb
push
push
cwtl
popa
je
or
mov
push
sub
xor
or
dec
leave
inc
sub
fidivrs
loop
pop
cmp
xor
jge
mov
pop
and
xor
adc
and
negl
cltd
adcb
rcl
xchg
clc
aad
stc
int3
jg
fimuls
xor
cmpsl
and
mov
push
ja
dec
xchg
and
mov
xchg
cmp
jae
ret
xchg
cmc
loopne
fnstenv
mov
out
insb
add
sub
xchg
push
movsl
pop
cmp
ret
xor
push
lahf
mov
cltd
jb
and
scas
rol
mov
push
mov
push
xchg
cmovnp
inc
and
xor
in
or
jo
ja
and
inc
arpl
ror
sub
cmc
sti
fisttps
mov
dec
stos
sbb
sahf
jmp
xchg
in
add
sub
fdivs
ret
xlat
lret
out
mov
roll
je
dec
mov
inc
fists
lock
aam
rclb
cmp
adc
cltd
mov
pop
shr
mov
int
test
inc
cmpsb
ret
repz
insb
jp
mov
fbld
ljmp
incb
loopne
movsb
fdivrl
das
jbe,pt
clc
cmp
ja
dec
add
push
xor
jae
or
add
int
or
inc
and
call
pop
popa
and
push
iret
ds
xor
je
cli
mov
push
inc
imul
sbb
pushf
jne
jae
add
call
inc
mov
xor
icebp
lods
cmp
scas
pop
mov
push
pop
cmp
faddl
addr16
cmp
std
sbb
dec
stc
sbb
ret
sub
or
sub
jb
xchg
ret
sub
xor
lret
cmp
clc
inc
mov
jg
std
mov
imul
sub
fdiv
mov
in
fcomps
xor
popf
jp
fmull
stos
mov
aam
loop
add
pop
inc
fidivl
cmc
pop
push
pop
ret
jmp
adc
lods
adc
cmp
into
xchg
sbb
sub
jno
fisubrs
xchg
inc
mov
or
pop
mov
mov
out
bound
sbb
shl
cmp
sti
cmp
in
popf
pop
or
int3
hlt
dec
cmp
xchg
fbstp
xchg
cmp
xor
test
cmp
or
roll
arpl
add
out
in
push
out
or
mov
imull
cmc
push
sub
cmp
out
mov
faddl
sbb
imul
sbb
repz
out
pop
or
lods
pop
add
ss
outsl
cld
adc
je
outsl
xchg
pop
jns
mov
out
fbstp
push
mov
jmp
cmp
pop
xlat
stos
int3
cs
jmp
jg
jne
cs
add
jg
pop
mov
cld
aaa
imul
mov
xchg
mov
ljmp
push
mov
stc
jne
mov
xchg
ret
cmp
and
cmpsl
mov
dec
mov
lahf
aam
ja
mov
ret
nop
mov
push
test
sbb
push
mov
stos
cmp
sbb
mov
jg
call
ja
xor
outsb
xor
inc
movsl
cmpsl
aad
inc
mov
in
aad
inc
leave
test
jne
fcomip
ss
sub
inc
jne
sbb
repnz
jp
sbb
ror
add
repnz
aas
push
mov
loop
and
test
cmp
xchg
iret
xchg
lock
sbbl
lock
xchg
lret
addr16
push
fbld
sub
test
pop
push
dec
shl
cmp
popa
or
pushf
cmp
das
and
movsb
fs
cmc
mov
data16
cli
aad
in
lret
fsubp
lahf
sbb
or
dec
fwait
psrlw
cmp
inc
data16
rcr
and
pop
dec
sub
mov
xchg
hlt
xchg
or
add
dec
stos
or
test
adcb
inc
dec
xchg
daa
ss
out
mov
sbb
and
subb
jno
mov
mov
inc
stos
pusha
xchg
out
xor
mov
sub
and
adc
lea
les
or
xor
pop
jno
sbb
push
ficompl
daa
jne
xor
into
fldcw
jmp
in
insb
add
movsl
mov
push
out
jb
insb
pop
pop
addr16
enter
sbb
push
into
sbb
and
jns
fsubp
fisttpl
xor
xor
push
xlat
repz
fimull
jno
mov
mov
push
hlt
out
int3
cld
loope
and
cmpsb
push
sbb
mov
inc
das
loope
or
cltd
out
popa
cmc
enter
not
mov
mov
in
sub
xorl
xor
mov
insl
out
mov
jp
out
adc
hlt
inc
lods
pop
xlat
pop
aad
arpl
push
sub
or
sbb
inc
push
push
push
and
into
in
psllq
scas
inc
jl
addr16
cs
fcomps
imul
cmp
mov
jp
loopne
jbe
in
mov
xor
push
jmp
dec
rol
add
adc
jo
xchg
or
ret
jo
mov
pop
scas
lahf
sub
bound
and
daa
aas
mov
cmpsl
xchg
scas
leave
cwtl
push
jl
mov
jecxz
icebp
call
dec
out
lcall
pushf
lds
outsl
mull
and
push
cmp
shrb
xchg
xchg
fcmovnbe
xor
lock
xor
dec
xchg
push
pop
dec
idiv
test
clc
xchg
dec
sti
jecxz
push
add
lods
imul
fcoml
jne
imul
cli
lret
fwait
test
loopne
outsb
or
rolb
mov
in
fsubr
push
jmp
dec
mov
pop
inc
cmpl
cmpsl
jecxz
movsl
push
xor
add
mov
js
pop
ret
pop
mov
cmp
mov
sti
dec
dec
mov
jo
mov
lock
and
fs
aaa
fmul
mov
fadd
js
jae
pushf
ret
fmull
adc
idivb
mov
sub
jne
and
mov
or
pminub
jbe
aam
ret
sub
cmc
push
rcr
jo
add
xchg
mov
xchg
pop
pushf
repz
leave
fidivrs
call
or
cli
xchg
mov
stos
mov
cmpsb
adc
jo
stos
addr16
cmp
in
orl
imul
shlb
icebp
sbb
push
inc
push
popa
je
or
loop
in
inc
stc
xchg
out
leave
shrb
mov
cmp
xor
mov
add
and
ror
mov
or
fstpt
out
les
clc
pushf
outsl
and
mov
leave
dec
inc
mov
nop
sub
cld
repnz
rcll
leave
fcmovbe
add
add
fwait
mov
test
xchg
stos
push
sub
cld
out
jge
xlat
loopne
cwtl
and
fcompl
pop
xchg
jbe
sbb
and
inc
xchg
ret
jp
push
test
add
aaa
dec
add
fs
daa
ret
testl
dec
les
jns
out
les
xor
es
leave
mov
int
mov
sub
mov
into
adc
mov
and
movsb
and
add
test
mov
gs
inc
pop
lods
sub
clc
outsb
ss
leave
sti
movsb
es
jne
mov
lock
pusha
sbb
jb
lods
les
add
stc
mov
imul
sbb
inc
and
repz
aas
mov
stos
fldl
pop
loope
jno
ret
lret
ffree
add
xor
rcr
fiadds
cwtl
inc
xchg
adc
rorl
push
lahf
cmp
in
lea
push
sub
and
xchg
inc
dec
xor
hlt
push
aam
cltd
jge,pn
cmc
into
sbb
dec
xchg
mov
push
jnp
sarl
mov
xchg
pop
aas
outsl
int
push
shl
dec
jb
scas
pop
cmp
dec
sti
xchg
in
push
js
mov
pusha
lret
push
sbb
ljmp
aad
nop
dec
jp
mov
xchg
cltd
mov
and
xor
push
in
pop
popf
jb
shll
dec
push
aaa
mov
xchg
cmpsb
or
xor
xchg
and
push
loopne
in
xchg
int3
aam
negl
cmp
bound
add
std
sbb
int3
cmc
or
stc
fadd
and
std
cltd
xchg
popf
pushf
pushf
lds
jmp
pop
or
cli
stc
xor
mov
lock
mov
xchg
orl
outsb
hlt
sahf
mov
adc
pop
js
loope
movsb
pop
enter
mov
add
xor
jge
sbb
jne
in
loope
pop
or
xchg
cmp
out
out
push
pop
add
outsl
repnz
sub
mov
ret
or
push
push
loopne
data16
int3
and
jl
jle
rolb
test
imul
and
jb
jmp
fisubrs
xorb
xchg
cmc
fnstsw
jns
xlat
arpl
mov
cmpsb
fsubrs
adc
jp
cmp
data16
and
pop
mull
and
repnz
inc
lcall
xchg
imul
adc
and
pushf
movsl
outsb
popa
xor
arpl
lock
lods
addr16
int3
pop
pop
pop
adc
mov
xor
pop
rorl
into
sub
fmull
xchg
and
fmull
out
or
arpl
mov
cmp
jae
shl
in
in
bound
lcall
sub
adc
inc
repnz
sbb
jnp
dec
jnp
xor
sbb
inc
stos
leave
pop
in
incl
jnp
sbb
mov
ds
out
pop
lea
add
or
cmp
sbb
pop
adcl
mov
fs
cmp
mov
sbb
xchg
adc
pop
add
outsb
enter
inc
out
dec
or
aam
cld
mov
mov
and
or
cmp
sbb
stos
insb
cmp
out
inc
sbb
out
scas
icebp
cmp
and
sub
loop
lret
sub
je
xor
mov
test
popf
pop
fisubrs
sub
ficomps
in
ds
pushf
fistpl
push
pop
mov
jae
enter
lret
cmpsb
andl
dec
jmp
clc
fmul
lret
mov
xchg
xchg
pushf
adc
push
mov
mov
lods
cmp
jp
repnz
and
add
push
jne
test
cmp
or
imul
pop
jns
fldenv
lods
fs
adc
inc
nop
cmp
cmp
push
fcomp
push
add
imull
inc
ljmp
dec
out
loopne
push
popf
mov
xor
in
clc
cld
sub
addb
xor
xor
sub
adc
push
mov
scas
sbb
dec
jmp
mov
das
pop
sahf
adc
loope
pop
call
jns
add
push
mov
cmp
gs
and
and
stos
inc
leave
xlat
push
cmpsl
je
pop
cmp
jnp
lahf
ss
cmp
jg
jmp
xorl
push
out
mov
inc
daa
fmul
pop
loope
js
mov
aam
adc
orl
test
sbb
dec
aam
arpl
popa
or
cmp
inc
cmpsb
das
mov
fs
pop
or
fimull
pop
add
mov
test
xor
dec
jle
add
mov
mov
shrl
or
or
xchg
mov
mov
lds
lds
pop
sarb
mov
xchg
sbb
adc
mov
outsl
cmp
sbb
sub
rolb
cmpsl
stos
adc
shlb
and
or
rcrl
mov
je
xor
and
sti
fistpll
mov
jnp
loop
inc
test
adc
push
scas
inc
mov
pushf
jns
jmp
adc
fmuls
mov
iret
mov
pop
stc
in
push
push
fdivrs
mov
xchg
shll
xchg
dec
sbb
push
cmpsb
out
cmpsl
popf
dec
pop
dec
setnp
aad
orb
cmp
rcrl
adc
ret
add
inc
xlat
insb
outsb
loope
in
jno
aaa
repz
xchg
dec
ret
pop
cmp
into
pop
mov
aam
cmc
iret
call
icebp
in
fiadds
addr16
fsubs
insl
and
sbb
push
ss
push
mov
cmc
inc
ds
push
or
mov
jg
xor
nop
in
pop
cli
jbe
pop
shl
xor
cwtl
push
pop
rorl
add
sub
mov
adc
xorl
stos
push
into
adc
mov
cli
dec
mov
adc
push
int
movsl
in
imul
popa
mov
scas
mov
push
mov
jmp
mov
xchg
xor
arpl
lret
ja
lods
adc
pop
push
cmp
mov
and
or
xorl
lds
inc
in
push
mov
pushf
dec
or
es
roll
jae
andl
popf
add
jbe
call
cmpsb
pop
aam
cmc
xchg
popa
lods
cwtl
fidivl
mov
mov
test
push
punpckhwd
dec
or
lret
push
mov
cmpsb
inc
mov
mov
pop
jne,pn
push
bound
mov
and
test
dec
mov
jg
mov
or
js
mov
and
dec
xor
arpl
cmpb
lret
cmp
cltd
in
xor
bound
add
xchg
push
sub
or
leave
seto
orps
cmp
or
cmpsb
jo
aas
xor
rol
add
test
or
xlat
loope
gs
aas
push
or
or
and
xchg
and
fstpt
or
inc
and
jge
jnp
xor
stos
pop
int
loope
cmp
push
aas
les
jle
fcom
jp
fsubs
rcr
pop
shrb
jbe
push
sub
mov
sarl
lods
pop
jne
frndint
pop
mov
adc
je
pop
adc
push
jecxz
ret
repz
into
pop
xor
fsubr
sbbl
ja
mov
push
xchg
andb
aas
leave
movsl
das
dec
into
ret
xor
xor
adc
arpl
shl
mov
jb
fidivs
sbb
jo
and
jns
xchg
inc
dec
outsl
inc
loop
scas
push
repz
push
scas
push
lret
rol
inc
lods
or
aas
pop
ficoml
xchg
test
dec
adc
pusha
jnp
pop
jecxz
loope
in
mov
fnsave
and
call
movsl
in
pop
je
bound
sbb
adc
test
push
jg
push
dec
mov
in
addb
aas
test
lahf
aam
scas
jecxz
add
mov
dec
iret
mov
adc
or
imul
adc
ret
test
jle
jle
mov
fwait
cmp
xchg
daa
xchg
pop
xchg
pop
sub
loop
pop
pop
in
iret
mov
mov
xchg
iret
cltd
jp
push
fst
push
loope
scas
inc
mov
mov
cmp
lahf
rorb
xor
xchg
idiv
repz
jmp
inc
dec
pop
mov
stos
mov
push
pop
and
adc
repnz
shrl
std
stos
cmpb
addr16
cltd
mov
adc
cli
nop
sub
xor
jnp
mov
pusha
movntq
cltd
sbb
es
pop
sub
int3
inc
rorb
inc
push
push
das
xchg
out
dec
gs
inc
mov
int3
daa
mov
mov
xchg
add
popf
inc
xor
leave
frstor
and
dec
clc
sub
ds
lret
push
jno
mov
push
sub
xchg
push
or
enter
jbe
das
pop
sarb
sbb
xlat
jecxz
and
dec
mov
sbb
test
pop
lods
rorl
jns
jmp
cmpsb
cwtl
movsb
mov
movsb
and
dec
mov
and
scas
fcmovb
xchg
pop
rcll
outsl
loop
add
mov
jge
or
mov
xchg
fwait
jecxz
fs
jb
hlt
adc
xor
nop
adc
and
test
or
ret
popl
jo
jbe
mov
pop
inc
fs
and
pop
arpl
mov
stc
jecxz
mov
cmp
scas
aam
addb
dec
ficoml
lock
jb
and
adc
movsl
push
enter
or
push
enter
dec
mov
fwait
and
fmuls
ja
xchg
imul
pop
pop
fs
cwtl
or
push
push
cmp
jne
sbb
rorl
inc
in
incb
les
sbb
add
int
lods
decb
popa
mov
and
push
out
addl
fwait
cmpl
sub
ds
loopne
jo
dec
insb
jne
outsb
insb
or
jb
pop
xchg
mov
dec
dec
adc
sti
push
fucompp
and
mov
mov
xchg
sahf
mov
int3
je
aas
addr16
or
cmp
adc
and
xchg
mov
stos
adcl
and
les
stc
mov
jbe
shlb
sub
out
lretw
sub
pop
fwait
pop
frstor
testb
negl
xor
push
inc
enter
hlt
repnz
xchg
repz
inc
lods
xchg
test
shlb
jnp
adc
mov
out
xchg
and
andl
xor
rclb
iret
aad
jbe
icebp
or
pop
insb
push
cmpsb
xabort
lea
nop
mov
xor
bound
cmp
ret
sti
xchg
jecxz
sahf
or
pop
shl
in
ja
lea
das
fidivs
jo
pushf
xchg
or
call
xchg
adc
adc
pop
imul
jne
nop
push
mov
sbb
cmpsl
sbb
repnz
arpl
xchg
icebp
sub
cmpl
in
bound
push
les
or
fldcw
dec
pop
xor
mov
mov
sbb
add
lcall
rolb
aaa
lret
pop
arpl
nop
xchg
lret
adc
cmc
cmp
repnz
aam
in
pushf
out
or
mov
lahf
mov
cmpsl
xchg
cmp
loopne
add
push
leave
fstl
jo
push
repnz
and
in
mov
jecxz
xchg
rol
aam
inc
pusha
mov
xchg
and
scas
mov
mov
fwait
cmc
mov
jo
xor
sbb
sahf
loopne
or
jne
cmpsl
les
subl
outsb
cltd
jmp
in
shr
lahf
imul
mov
xor
lcall
push
xchg
loopne
jle
jl
cmp
ret
insb
icebp
adc
xor
out
mov
mov
into
mov
pushf
push
mov
push
cs
mov
push
mov
popa
sbb
fsubrp
ds
enter
mov
in
lret
ljmp
push
lds
shr
out
sub
xlat
or
andl
mov
jns
arpl
mov
adc
bnd
rorl
scas
int3
adc
and
loopne
sarb
push
lahf
pop
push
push
add
mov
enter
arpl
lret
and
inc
fcmovne
cmp
push
imul
mov
stos
in
or
stos
fldcw
adc
in
xlat
mov
cmpsb
xor
dec
add
mov
xchg
pop
xor
arpl
test
push
cli
lock
mov
bound
pusha
imul
xchg
pushf
fidivl
mov
dec
jl
mov
sbb
cmp
paddb
arpl
xor
call
xor
sbb
stc
add
leave
or
push
ficompl
dec
push
out
xchg
mov
pop
cld
mov
js
stos
or
cmp
cmpsl
inc
mov
pop
dec
or
jecxz
xor
pop
push
stc
popf
jl
negb
add
cmp
addr16
jle
stos
mov
not
ja
stos
outsb
pop
lods
rcl
in
sub
mov
inc
mov
sub
es
imul
into
mov
fcompl
lret
and
mov
push
xor
jl
into
lea
leave
ret
mov
pop
mov
fsubrs
push
dec
rcll
lret
pop
dec
jecxz
mov
mov
xchg
test
das
add
and
or
mov
enter
jp
xor
pusha
sub
mov
jmp
lret
push
jbe
xchg
rolb
test
jl
gs
xlat
add
fnstenv
adc
inc
movsb
mov
addl
cmp
outsb
jp
lahf
aam
in
xor
jle
aaa
adcb
pop
pop
or
hlt
add
and
mov
stos
sub
xor
outsl
mov
xchg
out
cmp
je
in
movsb
push
rorl
cltd
frstor
inc
push
gs
inc
mov
inc
test
stc
jp
cltd
je
loop
dec
clc
outsl
loopne
dec
ljmp
xor
mov
les
lds
popa
xchg
movsl
incb
inc
and
adc
mov
mov
addr16
iret
fildll
ret
sbb
xor
and
icebp
scas
jno
lods
shll
ss
lahf
dec
insb
dec
subl
addr16
arpl
mov
jo
das
push
sbb
fistpll
or
gs
inc
fnstenv
out
shrl
dec
sbb
aad
out
inc
ljmp
xor
add
xor
inc
aas
daa
mov
push
ljmp
ss
out
mov
into
xor
mov
insb
or
movsl
jae
pop
add
xor
or
cmp
addr16
imul
mov
bound
and
filds
pop
sbb
in
sarb
out
fsubr
cmp
cmp
ja
js
loop
xchg
add
lods
ja
xor
cmpsl
sub
mov
xor
testl
xor
push
fwait
pop
fs
int
sub
sbb
aas
cwtl
insb
data16
icebp
lds
mov
lret
cli
xor
sahf
test
std
jne
mov
mov
push
xchg
mov
cmp
push
fnstenv
bnd
fs
dec
mov
loop
mov
cmp
sarb
movsl
aad
sbb
or
mov
loop
lock
scas
repz
popa
lock
div
push
mov
dec
out
push
inc
xor
hlt
fbstp
test
jl
scas
stos
ss
das
jns
jo
adc
push
jno
adc
xchg
adc
mov
nop
push
mov
sbb
pop
push
cmc
aad
das
sahf
movsb
lcall
mov
cmp
cmp
and
mov
cmp
loop
mov
data16
and
mov
sub
aad
out
test
int
cmp
and
dec
dec
pop
stos
fsubl
into
lds
hlt
and
mov
test
fisttps
nop
pop
sub
loop
adc
rcl
out
or
mov
lods
out
add
lea
mov
inc
xchg
sbb
sub
xor
shrl
cmp
in
rolb
cmpsb
mov
jge
pop
jecxz
testb
mov
adc
out
sbbb
push
xchg
adc
cltd
jb
pop
fcmovne
subl
pop
push
repnz
pop
jl
mov
loopne
jo
loop
loop
xchg
push
push
pusha
and
xchg
mov
daa
mov
out
mov
push
test
cld
xor
das
mov
notl
mov
mov
notl
mov
mov
call
sub
imul
inc
dec
jns
test
and
add
pop
or
fidivrs
pop
push
sahf
or
ja
adc
gs
in
scas
fnstsw
pop
mov
sarb
sbb
loop
jmp
xchg
mov
xchg
sub
aam
popa
nop
push
or
mov
rcrb
sbb
repnz
sub
sub
dec
mov
icebp
nop
pop
xchg
cmpsb
lods
out
mov
xchg
out
scas
std
into
movsl
and
aad
and
mov
imul
pusha
pop
ds
pop
aad
call
test
mov
jno
mov
jae
jbe
sub
test
dec
sub
lret
sbb
or
insb
stos
cmp
mov
sbb
cs
jle
dec
sub
ret
shlb
sub
pop
xchg
ja
out
pop
enter
std
icebp
shlb
scas
push
insb
and
mov
in
xor
dec
sub
jo
movsl
adc
test
xlat
jnp
vpunpckhdq
fisttpl
xchg
lds
das
pop
repnz
pop
fisttpll
adc
jp
sbb
xor
push
push
mov
jle
cmovp
insl
aas
mov
add
mov
dec
insl
dec
mov
shl
push
aad
inc
andb
cmp
insb
push
dec
xor
fcompl
cmp
xchg
mov
lods
leave
popa
pushl
ret
int
jbe
cmp
push
adc
inc
outsb
inc
cltd
sub
cmpb
std
and
adc
pop
imul
loope
push
fcompl
loop
adc
inc
stos
mov
lcall
push
push
pusha
imul
in
jge
mov
scas
and
lret
mov
movsl
es
loopne
lahf
arpl
cwtl
jecxz
add
pop
popl
mov
mov
sbb
sbbb
sti
xor
aaa
sbb
add
out
and
stos
or
inc
jle
out
movsb
inc
ss
js
adc
xchg
or
sqrtps
cmp
stos
mov
add
mov
sbb
pop
les
and
lcall
jmp
xor
pop
inc
js
jo
xor
and
dec
dec
push
inc
fsubs
and
adc
rcll
inc
inc
push
jecxz
xor
aam
jmp
popa
repz
bound
orb
das
into
xchg
sbb
fs
cs
dec
inc
add
dec
push
mov
and
push
sbb
cld
es
jnp
cld
test
outsb
jmp
je
mov
push
jne
dec
sbb
bound
jle
jg
mov
lea
pushf
mov
xchg
pop
and
push
fistpl
sahf
imul
xor
sub
mov
fcoml
cmp
cmp
clc
and
or
ret
mov
mov
int
xchg
mov
cld
ja
stc
bound
jecxz
pop
insl
cmpsl
xchg
jle
dec
fwait
push
push
out
mov
jecxz
gs
xor
jne
xorb
clc
test
call
in
sub
sub
jnp
cmpsb
fs
jp
lds
aad
push
inc
jmp
fwait
add
fsubrl
inc
inc
xchg
test
in
push
xor
lret
ljmp
dec
push
pop
jp
pop
clc
or
nop
lock
pop
xchg
mov
les
adc
pop
das
jo
push
mov
mov
sbb
mov
adc
cmpsl
or
mov
es
mov
ja
out
lods
dec
ja
push
or
ja
lret
or
rolb
pushf
inc
dec
inc
cmpsl
js
push
jno
inc
adc
fistpl
pop
sub
mov
push
jae
sahf
mov
lock
or
pop
dec
jb
xchg
inc
xchg
or
mov
dec
jnp
push
add
ljmp
and
xchg
dec
mov
loope
push
sub
or
pop
xor
movsl
out
in
xchg
imul
xchg
inc
jno
xchg
lods
xchg
lds
cltd
cmp
pop
jnp
push
lds
dec
sbb
ja
pop
sti
out
xor
push
jb
cmpl
pop
addr16
xchg
mov
jle
cmpsl
xchg
lods
mov
aam
mov
inc
scas
fs
cwtl
nop
mov
rolb
lds
sub
cmp
cmp
mov
cs
or
andl
gs
fldcw
adc
in
popf
clc
shrb
xor
out
es
aam
push
mov
popa
mov
incb
out
pop
icebp
inc
jo
aaa
dec
mov
ret
dec
aam
test
repnz
push
js
add
jle
add
icebp
sub
mov
and
dec
dec
xor
dec
jns
cmp
adc
mov
mov
xor
lock
dec
and
repnz
fidivrl
or
jmp
push
push
xor
dec
sbb
xchg
sub
xor
mov
adc
leave
cld
jns
ljmp
movb
pusha
or
sbb
out
mov
dec
out
clc
jnp
dec
fildll
dec
bswap
dec
add
sbb
cmp
imul
mov
pop
shrl
mov
jae
into
mov
sarb
and
popa
clc
or
push
dec
repnz
sar
dec
call
imul
push
add
aam
cmp
adc
pop
push
idivb
loopne
jbe
mov
sbb
mov
cmp
stc
sub
enter
add
or
loop
sbb
push
xchg
add
out
xchg
xchg
push
xchg
pop
enter
add
mov
adc
inc
ljmp
pop
mov
out
call
aam
fsts
sahf
ja
notl
js
mov
lahf
stc
xchg
jle
pop
cs
jns
push
xchg
cmpsl
dec
jle
xchg
in
into
icebp
cli
fldl
sbb
enter
into
mov
and
sbb
lret
jg
add
sub
int3
arpl
push
sti
mov
mov
movsl
mov
xchg
in
popa
inc
sub
popa
push
imul
js
add
dec
sbbl
bsf
mov
and
icebp
add
js
sub
sbb
push
cmp
add
and
and
xor
jp
push
sub
mov
int3
cmp
adc
rcrb
xchg
xchg
add
scas
xchg
test
jae
adc
sbb
pop
inc
xchg
nop
push
insb
adc
xor
mov
hlt
daa
mov
roll
dec
push
add
fwait
negb
mov
ret
clc
loope
leave
mov
arpl
xrelease
lds
scas
lods
lret
push
inc
pop
mov
push
outsl
std
mov
pusha
push
inc
cld
rcrl
jbe
mov
repz
daa
add
mov
cmc
mov
cmp
xorl
push
mov
lea
loope
or
and
xchg
js
or
jl
mov
add
rcl
adc
mov
imul
sbb
mov
and
stos
xchg
add
mov
pop
xor
sti
test
adc
add
or
adc
adc
lea
xor
mov
xchg
mov
jnp
frstor
mov
pop
push
int
sbb
std
repnz
das
sub
std
rcrl
jno
and
fs
inc
lahf
dec
pop
push
adc
leave
lahf
mov
fstps
pop
cmp
push
iret
int
xchg
imul
testb
addb
push
aam
rcl
jns
dec
and
pop
and
adc
shl
les
pop
jmp
jno
xchg
add
mov
dec
push
call
cmpb
inc
sub
xor
xchg
loop,pt
xor
shll
ret
add
pop
idiv
add
js
push
rcrl
and
pop
dec
adc
jl
pop
mul
fnstcw
or
js
imull
cmpsb
clc
jecxz
or
sbb
jns
rcrb
ret
jmp
mov
push
cmp
cmpsb
sub
dec
inc
lea
loopne
ret
out
dec
mov
ret
je
xor
or
roll
mov
mov
jg
arpl
fs
pop
and
pop
inc
inc
lret
inc
pop
lds
or
cmp
call
fcoml
adc
mov
xlat
orb
jnp
lahf
cmpl
or
ds
dec
sahf
das
fs
rorl
cmp
rorb
xlat
shrb
mov
fcoml
aas
int
pusha
jg
nop
orb
in
sub
and
mov
cmp
insb
shlb
pushf
and
xlat
daa
mov
xchg
xchg
aad
out
outsl
imul
pushf
sbb
stos
ret
xchg
int
dec
es
insl
test
out
outsb
xor
movsl
flds
inc
cwtl
test
add
dec
sbb
and
mov
pop
lock
or
mov
lcall
pop
mov
loop
fwait
daa
pop
les
popf
cwtl
mov
push
sub
lea
cmpsb
xlat
xchg
xchg
jecxz
xchg
sbb
mov
sbb
cmpsb
add
out
test
cmc
out
loopne
xchg
push
fldl
xor
push
nop
ja
adc
mov
lret
inc
push
ret
mov
xor
dec
mov
cmp
into
pusha
mov
or
aad
jnp
and
mov
shl
pop
fwait
add
push
adc
xchg
ljmp
xchg
loopne
or
xchg
cmpb
push
les
mov
lcall
push
sbb
lock
and
mov
pop
cmp
push
xchg
xor
adc
ffree
push
cltd
cli
xchg
ds
inc
scas
mov
scas
sbb
and
sbb
mov
leave
pop
xchg
sub
push
inc
fists
ret
xor
mov
andb
fistl
jne
loop
or
sub
aam
in
les
mull
ficomps
jae
sbb
lret
xor
mov
lods
jb
jecxz
clc
or
mov
js
into
rcl
lret
cs
pop
ret
or
das
sub
test
inc
or
pop
inc
shll
fisubs
adc
jno
pop
or
scas
test
sub
jecxz
ds
xor
mov
js
push
push
xchg
sbb
xor
inc
je
mov
push
pushf
pop
fucomip
mov
and
es
hlt
push
cmpsb
ljmp
xchg
rorb
clc
inc
push
iret
lcall
movsl
xchg
xlat
aas
in
stos
mov
roll
jl
push
lods
jno
jae
mov
and
cltd
cmp
imulb
push
mov
pop
mov
call
jbe
xchg
int
imul
pop
ret
notb
notb
inc
pop
mov
iret
aam
or
jo
xchg
xor
dec
pusha
sahf
addl
out
and
mov
adc
or
mov
std
xchg
stc
jns
jne
loopne
or
xchg
pop
push
push
out
pop
ljmp
repz
and
sub
push
aaa
cmp
pop
mov
jo
xchg
add
fs
add
mov
aam
pop
shrl
popa
cmp
int
insb
xchg
and
sbb
push
imul
fildl
mov
push
jmp
add
xor
xchg
add
test
dec
pop
or
lret
push
push
xchg
arpl
inc
jge
push
cltd
dec
pop
outsl
push
imulb
subb
push
xchg
or
xor
mov
adc
cmp
jle
lods
xchg
mov
hlt
mov
or
inc
xor
xlat
sbbl
in
test
push
fcomi
mov
les
pop
and
sahf
jp
je
pop
scas
pop
das
shlb
mov
cmp
enter
push
mov
int
adc
pushf
out
mov
in
arpl
lods
in
sbb
mov
sbb
and
cmp
subb
sarb
xchg
dec
dec
out
mov
pop
data16
stos
mov
and
daa
stos
ss
loopne
jmp
fisttpl
sub
ds
push
clc
iret
aad
sbb
sbb
fcompl
xchg
mov
add
loop
cmp
out
mov
sbb
call
mov
xor
adc
inc
jns
mov
sbb
imul
pushl
fldenv
shlb
stos
call
scas
xor
stc
xorb
pop
xchg
shrb
clc
cmp
jl
aaa
jae,pn
jnp
fucomip
ds
jg
jg
pop
dec
xchg
pop
repnz
mov
push
push
add
and
pop
pushl
mov
pop
aad
test
xchg
xor
jg
sbb
jae
xchg
sbb
pushf
test
arpl
loopne
insl
xchg
int
aas
pop
push
fdivrl
shld
mov
fwait
xchg
mov
and
insl
jb
adc
xchg
or
fs
cmc
sub
mov
mov
adc
test
push
pop
inc
mov
in
xor
jo
xchg
mov
xchg
mov
mov
aam
and
xor
mov
jo
fstpl
push
pushf
mov
add
clc
mov
xchg
ss
cmpsl
xchg
mov
mulb
xchg
push
jbe
fwait
push
mov
adc
dec
push
ja
add
inc
cmp
jb
fs
and
mov
pop
mov
cmc
dec
fisubrl
push
in
out
jbe
xchg
cli
push
push
xchg
das
sub
xchg
test
xor
ficoml
mov
lds
test
std
or
addb
icebp
xor
cmp
pop
mov
xor
and
pop
cmp
and
imul
lcall
mov
pop
push
jno
mov
dec
in
pushf
or
cmp
sub
add
push
xor
jb
inc
and
movsb
mov
decl
dec
test
mov
cli
or
pop
push
jo
xchg
xchg
sahf
fistps
adc
in
clc
into
addl
sbb
orl
insl
push
mov
cmp
and
sbb
jbe
sarb
out
xor
shll
push
mov
cwtl
aam
mov
mov
ret
call
mov
sub
dec
xchg
mov
inc
loope
jg
mov
das
aaa
movl
and
outsl
sub
lods
roll
xchg
arpl
icebp
adc
mov
inc
jp
inc
jns
cmp
stc
loop
xchg
cmc
adc
sub
scas
ret
mov
dec
sub
sbb
xor
or
mov
and
jns
test
inc
imul
stos
roll
sbb
xlat
mov
lds
lock
jnp
popf
outsl
dec
incl
icebp
sti
jno
add
cs
ss
mov
add
jb
addr16
sti
mov
dec
aas
daa
lcall
push
jl
add
add
adc
xor
aam
sahf
push
sti
inc
xchg
jns
fdivs
cwtl
push
js
jno
pop
adc
mov
xchg
sti
mov
aad
pusha
fidivl
cmc
mov
jge
cmpsl
in
pop
dec
mov
je
xor
push
and
and
inc
outsb
popf
jae
push
xchg
cs
inc
ss
rcrb
xchg
xor
pop
adc
arpl
aas
inc
mov
jnp
add
hlt
jb,pn
push
and
ss
mov
jge
loop
dec
push
push
mov
sahf
iret
lods
push
cmpsb
jae
adc
fldcw
dec
cmpsl
adc
add
inc
cmp
and
fwait
gs
push
xor
dec
ror
fnsave
xchg
sbb
jle
stc
xlat
repnz
or
roll
shlb
jg
xchg
or
cwtl
loopne
mov
sar
dec
xor
pop
cmpsl
sbbb
mov
push
mov
sbb
mov
mov
sbbb
add
mov
mov
rcll
push
test
inc
push
loope
dec
ds
dec
lock
out
bound
adc
outsl
cmp
shlb
divb
lods
mov
icebp
lods
js
ss
fldenv
mov
les
lods
mov
add
push
scas
mov
jns
in
daa
mov
fsubs
sub
arpl
bound
jnp
cli
gs
or
sbbb
cmpsl
fdivs
incl
outsb
cmp
movl
inc
or
sub
rcrb
pop
dec
mov
inc
addr16
rcr
mov
or
mov
push
rclb
cmp
jge
inc
push
sahf
mov
rcll
push
mov
push
icebp
sbb
loopne
push
ljmp
mov
sahf
xchg
loope
rol
fildl
add
mov
mov
mov
fldcw
int
cli
adc
push
mov
ret
lahf
test
or
cmp
dec
xor
cmc
cmp
lea
ret
mov
cmp
out
into
sbb
inc
mov
xchg
aad
roll
mov
sahf
rcrb
outsl
vpcomq
insb
pop
xchg
xchg
jmp
ss
sbb
sbb
insb
imul
aam
loope
rorl
imul
out
insb
adc
mov
cmp
sbb
test
adc
lock
jno
fwait
xchg
pop
inc
sbb
and
cltd
inc
sbb
xor
ss
add
in
fwait
enter
and
ss
and
bnd
shlb
jae
subb
ljmp
pusha
negb
inc
push
shlb
repnz
xor
jge
addr16
dec
test
xchg
rorb
jbe
inc
pop
adc
rolb
xchg
jl
jns
cmpsl
push
pop
pop
cmc
push
push
push
sub
sub
push
or
insl
sbb
fimuls
mov
pop
sbb
imul
fsts
push
cmp
repnz
pop
cmp
or
add
data16
jb
lds
mov
jl
pop
ds
gs
adc
jnp
lea
xor
xor
test
jae
stos
push
and
lret
lcall
mov
fwait
pop
pop
dec
das
les
mov
imul
jge
add
lret
jae
das
mov
jmp
stos
jbe
cmp
pop
movsl
jecxz,pt
jb
fimull
test
jbe
mov
mov
adc
sub
dec
insl
leave
fadd
inc
sbb
jge
scas
or
cwtl
push
jecxz
mov
mov
mov
sbbl
popa
dec
divl
cmp
adc
jbe
fmulp
jns
mov
int3
mov
icebp
les
mov
daa
pop
mov
mov
mov
je
xchg
and
xor
dec
jg
js
stos
scas
dec
sub
mov
sbb
shlb
jno
xor
js
mov
jne
pop
in
dec
sub
mov
jne
jmp
sbb
in
mov
and
or
sub
dec
dec
lcall
or
aas
xor
jb
adc
rorb
les
sahf
or
xor
push
icebp
mov
and
or
xchg
jae
jae
inc
xchg
hlt
mov
mov
xchg
pop
mov
inc
cld
pop
mov
lret
push
sub
mov
xchg
mov
mov
push
pop
repz
ret
jecxz
jbe
ret
or
mov
pop
in
sub
push
cld
aad
lahf
mov
jge
or
mov
pop
clc
sbb
sub
js
insl
xor
mov
xor
dec
cmp
leave
cmp
xlat
add
cld
mov
mov
add
pop
enter
mov
ds
push
test
div
cmp
inc
mov
addr16
testl
dec
inc
mov
inc
inc
imul
and
push
stc
dec
mov
cld
repz
pop
and
out
std
dec
es
cmp
les
pop
xchg
je
icebp
mov
icebp
inc
movsl
xchg
stos
mov
sub
ret
les
adc
icebp
pusha
xchg
inc
popa
sub
jne
push
leave
mov
clc
test
inc
dec
les
push
push
adc
fadd
xchg
and
mov
and
lea
push
dec
lcall
movsb
loope
jns
sahf
data16
dec
dec
jp
mov
pushf
jmp
das
imul
push
insl
icebp
xor
pop
lods
jbe
add
sbb
movsl
cmpsl
sub
cmp
push
mov
sub
cmpb
sbbb
insb
icebp
inc
mov
mov
mov
xchg
and
cltd
stos
push
push
int
jnp
mov
shrb
and
sbb
sbb
stc
jnp
push
sbb
andb
xchg
mov
inc
shrl
cld
addb
mov
ljmp
lea
cmp
js
xchg
stos
dec
xchg
mov
cmp
outsl
jle
push
dec
jb
mov
jle
dec
movsb
mov
sub
notl
into
sbb
jle
push
js
cmp
and
jmp
test
into
shlb
cmpsb
jge
pcmpgtd
jns
cmp
push
icebp
jno
add
dec
cld
cmpsl
test
add
jae
push
aad
cmp
mov
xchg
xchg
cmc
int
or
pop
or
movsb
nop
mov
ss
jmp
cmp
mov
decb
sbb
shlb
push
pusha
push
enter
sub
ja
push
add
mov
scas
scas
jbe
pop
lea
adc
push
or
fwait
in
roll
jp
sbb
rclb
push
rcl
test
mov
jg
push
sub
mov
rcr
xor
sub
insl
shlb
inc
jmp
sub
mov
xor
adc
pop
out
clc
in
sub
enter
pop
fnstcw
xchg
inc
sbb
aam
xchg
mov
leave
push
mov
aam
cli
mov
mov
test
popf
xor
sti
cld
dec
loopne
shll
enter
scas
int3
or
je
adc
jecxz
xor
lods
xchg
jle
das
xor
xchg
lret
pop
mov
push
into
aaa
and
mov
sbb
cs
fbstp
ds
sahf
fistpl
addr16
fsubr
lcall
mov
call
dec
imul
das
popf
xor
xlat
sbb
ret
push
xchg
xchg
ror
mov
jecxz
ret
jmp
jb
sub
test
popa
lret
adc
pop
push
cmp
les
adc
sahf
stos
cld
fwait
xor
cmp
in
adc
ds
les
mov
mov
stos
inc
or
jne
push
push
js
cli
addl
xor
je
fistpl
dec
nop
cwtl
mov
sahf
sbb
ss
popa
cmp
scas
add
std
mov
mov
inc
xchg
jnp
repnz
push
mov
mov
dec
negb
mov
int
xor
mov
cltd
call
cmpsl
sarl
clc
or
or
push
push
mov
jns
pop
notb
mov
cmp
imul
jl
sbb
les
sbb
inc
cld
scas
cmp
mov
into
cmc
rorb
out
add
mov
pop
adc
leave
imul
mov
insl
pop
pop
aad
pop
mov
xchg
pop
mov
int3
cltd
inc
fldcw
push
arpl
mov
pop
mov
jp
insl
dec
sub
jle
dec
dec
xor
loope
adc
jae
pop
sbbb
xchg
cld
pop
clc
lock
fucompp
fsts
aaa
pop
loope
dec
ja
flds
pop
xchg
sub
mov
push
loope
rcl
push
leave
xlat
mov
pop
push
xchg
in
lcall
and
inc
insb
scas
bound
fisubrs
or
std
sbb
mov
adc
cltd
pop
cmp
push
add
and
pop
add
push
sub
xor
test
mov
hlt
jge
data16
and
insl
jae
in
push
xchg
mulb
or
cltd
stos
jno
test
scas
jp
pop
hlt
or
cmp
add
rol
sub
xchg
hlt
inc
sarb
ljmp
fstpl
pop
add
mov
and
ja
jnp
stos
inc
stos
mov
pop
dec
lds
bound
aad
cwtl
aad
and
push
inc
mov
cs
jae
movb
hlt
sub
xor
add
push
pop
mov
shlb
mov
aas
adc
pushf
sbb
mov
or
loope
gs
push
add
cmpsl
jae
sbb
pop
fcomp
xchg
jns
dec
cld
inc
push
or
push
push
mov
imul
cmp
pop
fbld
pop
rorl
mov
popa
cmpsl
sub
mov
add
out
cmp
jo
and
icebp
mov
and
mov
in
mov
lods
sbb
push
xchg
sub
sbb
hlt
or
pop
cmc
mov
stos
std
cli
fisttpll
fnstsw
les
xor
add
mul
pop
jmp
pop
sahf
or
test
test
cmpl
mov
jecxz
aad
xchg
or
scas
add
jle
fs
cmp
aaa
or
push
cmpsl
das
ss
mov
fcomp
sbb
arpl
cs
push
or
popa
stos
gs
test
jbe
jne
sahf
sub
clc
push
fs
xchg
mov
cmp
sbb
xchg
testl
mov
inc
jp
xchg
sarb
aaa
ds
push
adc
lock
and
xchg
jg
out
imul
dec
cmp
pop
out
xchg
pop
out
add
push
push
pushf
xchg
jecxz
jg
ret
jecxz
je
pop
mov
jo
testb
pop
mov
bound
jmp
cs
test
xor
fs
pop
inc
sub
iret
push
je
out
jae
mov
movsl
jle
add
mov
cmpsb
test
daa
mov
addr16
add
sbbl
xchg
mov
aas
xlat
faddl
adc
sub
shll
test
inc
mov
and
adc
js
mov
rcrb
push
push
xor
push
ljmp
aas
imul
bound
push
addl
scas
imul
xor
mov
aaa
arpl
xchg
inc
push
ret
pop
mov
sbbb
sub
out
and
dec
ds
enter
xchg
cmp
out
jle
cmp
mov
mov
std
mov
pop
rcll
mov
and
ljmp
lcall
mulb
cld
or
mov
notb
mov
call
push
mov
jno
out
pop
cltd
sub
pop
xchg
aaa
sbb
jb
jl
lock
push
pop
or
jb
jae
xchg
lahf
loope
jns
fdivrs
je
pushf
push
ret
int3
int3
dec
sbb
lds
adc
ficoms
xchg
mov
mov
dec
inc
jb
and
outsl
in
inc
sbb
jecxz
fldenv
dec
jmp
call
mov
lods
xchg
aam
xor
aad
sbb
mov
push
dec
jb
inc
shlb
push
rolb
sbb
cmp
sbb
cmp
fwait
mov
xchg
fs
adc
inc
out
push
and
std
fwait
jno
jae
into
inc
in
imul
testl
xchg
fistl
lods
jecxz
in
mov
je
lret
or
and
push
add
and
pop
mov
loope
mov
repnz
mov
adc
out
xor
inc
clc
jmp
and
dec
icebp
sub
xor
fs
jnp
or
xchg
leave
jb
inc
addl
outsb
stos
pop
je
lods
mov
cmp
pop
aam
push
jp
mov
xchg
inc
lock
pop
aaa
xor
inc
leave
mov
fstpl
fisubl
movsl
xchg
ds
and
fwait
das
orb
gs
out
adc
int3
or
enter
in
pop
lds
xor
sbb
pop
mov
and
adc
imul
jmp
pop
jmp
mov
push
fdivs
mov
loopne,pt
add
nop
lds
leave
sub
or
out
ud2
xchg
sarl
xchg
mov
cmpsb
pop
xchg
add
push
dec
push
out
leave
dec
cmc
inc
jge
sbb
pop
cltd
fldenv
mov
jmp
or
lret
mov
or
xchg
mov
lods
xchg
cmpl
jns
ljmp
inc
mov
and
mov
roll
in
sub
sub
mov
addr16
aas
and
mov
idivb
adc
les
xor
pop
sbb
dec
mov
popa
lods
or
daa
mov
ret
sbb
lea
jnp
add
jno
mov
jno
insl
adc
shlb
jns
mov
mov
inc
pop
aaa
sbb
jecxz
sub
cmp
mov
adc
fcoml
mov
ret
adcb
and
rcl
jo
dec
pusha
mov
or
adc
enter
pop
sbb
mov
mov
stos
ret
xchg
jl
gs
int
fiadds
mov
test
enter
incl
add
in
jecxz
in
mov
repz
repnz
xchg
pop
adc
and
xchg
xor
gs
adcl
xor
or
shrl
divb
dec
cmp
jl
lahf
sub
cmp
jo
jbe
pop
xchg
in
aad
cwtl
mov
mov
inc
loope
pop
cwtl
or
movsl
popf
test
xchg
adc
shlb
filds
xchg
repz
gs
adc
xor
mov
out
fnstenv
sbb
scas
sbb
lcall
lret
out
pop
aad
xchg
mov
xor
rcrl
je
mov
out
sbb
scas
ret
xor
pop
or
sahf
mov
push
push
mov
pop
mov
mov
mov
push
cmp
mov
in
cmp
cmp
fs
orb
jl
je
and
aam
xor
cli
add
fdivr
jg
jnp
push
push
int3
xor
xchg
fwait
insb
pop
jecxz
xchg
ret
xor
xor
push
aad
insl
cmp
scas
in
das
pop
testl
enter
push
les
jnp
negb
sub
lds
fdivr
insl
ja
and
mov
add
hlt
adc
bound
mov
jl
mov
je
ss
jecxz
xchg
xchg
imulb
xchg
leave
push
xor
out
dec
pop
mov
xlat
push
scas
jb
lcall
inc
push
outsl
shrl
jecxz
clc
in
jae
pop
push
mov
lcall
cmp
or
add
mov
xchg
mov
imul
and
ret
and
add
aam
ss
dec
xlat
sti
rclb
cmp
add
or
loope
fdivrl
push
cmp
mov
lods
cmc
pop
ss
scas
lods
inc
mov
ljmp
inc
sub
mov
cmpsl
xchg
movsl
mov
add
inc
mov
out
mov
mov
aas
or
leave
xchg
push
lret
sub
pop
mov
push
aas
mov
in
scas
mov
sbb
jg
jb
or
test
mov
popl
dec
sub
sbb
lahf
les
or
bound
mov
out
les
or
movsl
inc
xor
pop
cmpsb
pop
add
loope
imul
jns
xor
mov
jg
sbbb
add
xchg
jmp
inc
lea
loopne
push
out
dec
js
adc
push
adc
mov
orl
mov
ljmp
adc
lahf
xor
adc
push
jnp
sbb
stos
mov
mov
pop
mov
add
inc
dec
das
mov
push
dec
push
mov
jle
arpl
sbb
mov
scas
xchg
cwtl
push
jmp
jno
ret
mov
fwait
jnp
jmp
test
mov
xchg
js
es
mov
lahf
pop
repnz
jle
dec
mov
mov
into
inc
xor
repnz
xchg
push
push
dec
int3
push
fsqrt
lods
mov
or
adc
clc
pusha
clc
scas
hlt
jb
xchg
orb
adc
mov
iret
je
shlb
shlb
mov
daa
or
sbb
inc
repnz
repnz
sub
dec
cwtl
cmp
dec
pusha
lock
daa
xchg
scas
test
aad
dec
arpl
subb
cmp
mov
sub
lcall
pushf
xor
mov
into
fs
js
leave
sbb
sub
cmp
add
test
mov
aad
lret
clc
add
mov
arpl
out
add
inc
pop
and
jmp
pop
rcl
sub
inc
add
or
les
push
dec
lds
cmp
stos
aam
dec
mov
sub
into
xchg
pop
xchg
jmp
mov
pop
rolb
push
push
cld
inc
shl
mov
test
dec
cmp
add
xor
mov
cmp
fdivrs
sub
jo
stos
add
inc
mov
rcl
inc
cmp
sbb
inc
cmp
rcr
call
inc
es
cmp
das
or
xchg
xor
mov
enter
mov
lret
lods
xchg
dec
pop
loope
jbe
add
fiaddl
push
movsl
stos
cmc
adc
lea
mov
and
lods
test
and
repnz
fsts
and
cmc
dec
repnz
sbb
jecxz
cmp
out
mulb
ss
outsb
insb
cld
outsl
push
pop
in
jle
sub
into
in
enter
mov
lock
sub
add
add
ja
mov
popf
stos
xor
push
dec
xchg
jp
nop
fdivrl
sbb
decl
mov
fisubl
add
xchg
pop
shrl
out
shufps
test
scas
decb
negb
cmc
ljmp
mov
cli
dec
mov
cmp
es
sbb
arpl
cld
cmp
push
adc
dec
cmpsb
mov
mov
data16
dec
xchg
cmp
xor
push
mov
stos
outsw
test
jo
je
xchg
fcmove
cmpl
es
outsb
adc
xchg
call
pop
negb
clc
std
gs
loopne
or
imul
adc
mov
pop
pop
dec
lea
mov
fisubs
decb
xchg
outsl
mov
inc
fstpt
test
pop
bnd
pop
dec
filds
and
ss
call
xor
xlat
lock
adc
insl
dec
pop
cmpsb
enter
cld
xchg
in
push
xor
mov
movsl
fbstp
clc
and
dec
mov
mov
xor
jl
fiaddl
add
mov
xchg
ja
lds
test
or
mov
mov
lea
out
cmp
lea
xchg
cmp
or
aaa
movsl
gs
idivb
fwait
clc
inc
jns
lods
ljmp
push
daa
mov
js
mov
mov
or
lcall
ss
lds
lret
and
pushl
push
test
xchg
sub
int3
push
mov
stc
in
es
mov
mov
out
aas
cmp
pop
xchg
loope
repnz
sbb
pop
xchg
ss
xor
stos
cmpsl
inc
xchg
insb
imulb
push
dec
xor
stc
into
mov
aad
gs
mov
ficompl
dec
cmpsb
fadd
lds
arpl
loopne
sbb
cmp
add
ffree
mov
jne
mov
sbbb
scas
ficoms
movsl
pop
add
xchg
mov
inc
push
aaa
les
add
out
aad
inc
push
test
aaa
stos
or
sti
pop
clc
mov
lcall
cmp
add
cs
jb,pn
ds
inc
pop
inc
ud0
arpl
push
test
je
push
shl
inc
cmp
sar
fnstenv
pushf
or
cmc
push
jae
cmp
clc
xchg
xchg
icebp
cmp
into
dec
xor
js
mov
inc
xchg
push
lret
adc
outsb
pop
hlt
push
addr16
fwait
sub
pusha
stos
or
mov
adc
add
loop
pop
out
lahf
xor
pop
mov
mov
movsb
dec
test
push
jge
filds
gs
popf
dec
pop
pop
mov
pop
out
and
mov
lds
movsl
jmp
and
add
addr16
ret
xor
add
and
mov
jns
jnp
lds
fadds
push
pusha
add
cmp
pop
push
das
pop
mov
dec
xchg
aad
mov
ror
pushf
aam
insw
push
mov
sbb
mov
push
lret
cli
mov
cmc
out
xor
fsubrl
mov
movsb
jge
cmpsb
cmc
lods
aam
jns
pop
fldcw
fisubrs
aad
xor
ret
lahf
or
pop
bound
mov
push
sbb
adcb
loop
and
std
aaa
mov
cmp
imul
jbe
pextrw
lcall
sbb
adc
pop
dec
pop
outsb
pop
jbe
dec
mov
repz
push
and
lds
or
xor
xchg
or
push
jl
test
adc
adc
rolb
mov
cltd
dec
adc
shlb
sbb
int3
out
imul
add
imulb
dec
lods
test
push
or
sbb
dec
loope
jbe
dec
pop
fidivrl
or
sub
lods
pop
xor
ja
jno
mov
jecxz
xlat
xor
repz
pop
les
mov
movsb
movsl
repnz
jmp
adc
out
sbb
cwtl
lahf
pop
mulb
mov
add
lock
or
add
xchg
rclb
jne
push
into
addr16
mov
push
mov
lahf
jp
mov
aam
in
adc
mov
aad
clc
jnp
subl
mov
sti
adc
fwait
in
dec
sarb
and
test
or
imul
sahf
subl
xor
xchg
push
jno
test
inc
das
xchg
push
xchg
cmpsl
jns
push
loopne
push
adc
add
xchg
stos
xor
adc
insl
xchg
xor
xor
xchg
push
in
adc
mov
data16
push
xchg
cmp
jnp
jae
jecxz
or
xlat
insl
mov
loop
shlb
dec
push
push
or
xchg
arpl
cmpsb
outsb
sbb
outsb
je
mov
pushl
loopne
ficoml
insb
mov
pop
jecxz
sbb
icebp
xor
sub
lret
xchg
daa
js
and
push
jmp
loope
sahf
inc
cmpsl
cmp
cs
pop
test
jno
push
stc
fwait
dec
lds
mov
mov
fs
inc
cmpsl
mov
fmulp
dec
mov
stc
sbb
sub
stos
sub
ret
lock
cmpsl
ret
mov
sbb
aas
jle
sub
sbb
mov
rol
imul
rclb
adcb
pop
mov
inc
outsl
and
enter
fwait
push
in
mov
in
xchg
out
pop
push
mov
outsl
push
lahf
and
or
dec
jno
push
xchg
xchg
shrl
orb
aaa
sarl
outsb
cmpsl
lahf
out
repz
jle
cld
stc
fsubr
cmp
js
stos
data16
and
test
inc
jb
mov
shl
inc
out
stos
call
mul
das
into
mov
imul
mov
cmpsb
loope
cli
sub
jg
das
repnz
jl
mov
cmpsb
aaa
aaa
xchg
in
fimull
shrl
mov
push
cmp
in
or
push
icebp
xchg
pop
push
mov
xor
or
push
ret
xchg
int3
cmp
mov
dec
xor
int3
js
jl
es
and
pop
xchg
jge
iret
shlb
xor
push
test
popa
sbb
mov
rorb
cld
test
and
xchg
loop
inc
mov
nop
loop
or
adc
daa
adc
sub
push
jmp
xchg
push
inc
lods
je
imul
mov
xlat
and
push
lret
xchg
in
push
mov
mov
lret
ficoms
cmp
es
sbb
sti
jl
loopne
daa
dec
movsl
mov
pop
outsb
push
inc
mov
arpl
push
ss
ja
mull
cld
jge
popa
xchg
mov
xchg
push
pop
push
mov
mov
nop
jo
mov
lods
into
in
add
sbb
mov
pop
nop
xor
fistps
pop
add
pop
cmc
mov
shlb
idivl
jb
pop
dec
fs
repnz
ljmp
push
push
imul
fucom
fcoml
mov
inc
mov
jle
pop
add
arpl
nop
into
push
adc
sub
lods
and
jb
movsb
ss
pop
popa
pop
add
and
std
jns
jecxz
xchg
fisttpl
js
mov
inc
in
fwait
stc
adc
es
inc
mov
xchg
jo
sbb
and
dec
mov
pop
subl
fisubs
xchg
xor
mov
ljmp
lock
mov
imul
mov
sub
or
pop
or
std
mov
stc
loop
subb
push
mov
push
pop
nop
pop
inc
in
cmp
xlat
jo
repnz
pop
movsb
pop
decb
test
mov
sbb
sub
leave
leave
jo
sti
mov
dec
cmpsb
repz
push
dec
cmpsl
jnp
int3
and
pushf
in
xor
dec
sbb
mov
mov
push
test
in
test
xchg
or
push
test
sbb
or
mov
shrl
xchg
loopne
jne
test
iret
mov
add
dec
lods
rcl
adc
sbb
add
lock
mov
dec
push
sbb
push
push
insb
test
cmpsb
dec
les
dec
add
roll
jmp
push
mov
mov
adc
add
mov
sbb
fidivrs
in
arpl
or
cld
sbb
das
fs
push
loope
mov
sbb
cmpsb
jae
lret
rcrb
sbb
and
movsl
sub
pop
rol
fsubs
jns
stos
insl
and
push
mov
ficompl
dec
cmp
jns
aad
fsubs
aam
xchg
jae
mov
std
mov
jbe
mov
loopne
arpl
test
test
pop
jne
das
push
shl
pop
fdivs
callw
daa
fimull
cmpl
xchg
xchg
sbb
ja
sub
xorl
ds
sti
inc
insl
es
mov
in
andl
or
or
pop
inc
mov
jg
sbbl
ror
jno
fisubrs
mov
push
mov
mov
or
xchg
sub
xchg
and
pop
mov
inc
dec
push
or
testb
outsl
sub
sub
xchg
push
imul
and
bsf
jp
bswap
aam
push
mov
je
imul
scas
xchg
es
add
jle
jb
xor
ss
xor
xor
adc
lods
sub
mov
mov
icebp
xchg
xchg
dec
int3
inc
rclb
cmp
cmp
scas
flds
cwtl
mov
into
je
pop
std
les
push
mov
inc
dec
mov
rclb
xor
adc
pop
lds
push
in
stos
mov
xchg
call
fisttpl
cmp
xchg
popa
push
cmpsb
push
mov
mov
push
test
xlat
std
cmp
jp
sub
jae
stc
int3
in
xchg
gs
cmp
add
adc
xchg
adc
push
mov
push
xchg
test
push
aad
inc
mov
ljmp
into
pusha
stos
or
std
imul
lds
addr16
mov
inc
jno
movsb
xorb
adc
cmc
int
lea
decl
fdivrl
jae
aad
sbb
ds
test
inc
dec
sbb
icebp
or
out
dec
mov
xor
xchg
dec
and
loope
rcrb
insl
push
insb
das
test
scas
mov
in
rorb
pop
aas
addr16
add
les
fiadds
data16
mov
pushf
imul
pop
xchg
cmp
data16
cmp
inc
xlat
jge
mov
add
pusha
sbb
push
cld
cld
cmpsl
inc
jno
jno
adc
inc
sbb
mov
loop
dec
ret
negl
mov
clc
in
outsl
hlt
inc
ret
jbe
sub
in
mov
pop
sahf
js
cmp
xchg
lods
inc
fs
xor
cmpsb
mov
mov
inc
je
xor
rcrb
fcomps
xchg
fists
rorb
insl
aad
push
adcl
mov
aam
xchg
test
or
push
rcr
inc
pop
imulb
fldcw
push
push
xor
mov
xchg
sbb
out
xchg
icebp
push
and
push
insl
xor
sub
test
in
jle
cmp
add
loopne
mov
mov
jl
pop
push
mulb
mov
cltd
bound
in
sub
push
pushf
ljmp
push
fildll
pop
dec
add
pushf
bound
and
out
add
mov
and
cltd
mov
inc
cs
scas
rol
into
cld
xor
out
jo
mov
das
int
aam
stc
xor
sub
out
in
js
es
fisubl
xchg
out
arpl
mov
pop
mov
xor
in
lds
sub
hlt
xchg
movsb
addb
mov
add
sub
xorl
shl
or
in
cli
xor
add
dec
sub
loope
and
and
aaa
and
push
mov
add
jp
xchg
mov
mov
add
mov
or
mov
cmp
pop
add
mov
bound
mov
push
popf
cmp
inc
cmc
es
mov
push
outsl
sbb
das
mov
mov
or
je
add
jecxz
adc
movsl
es
xchg
fdivr
rcrl
mov
adc
mov
in
cmp
add
shll
rorl
shl
ret
lcall
mov
movsl
add
lret
adc
xor
xchg
mov
sbb
dec
mov
aaa
push
xchg
inc
inc
xchg
pop
imulb
rorb
jns
test
sub
mov
out
lret
fmul
jmp
lods
cmp
test
mov
sbb
sub
sar
adc
loop
mov
mov
jae
cmp
pop
xchg
movaps
rcrl
adc
lahf
add
sub
mov
scas
fsubrp
stos
sbb
adc
inc
jl
outsl
clc
xor
leave
outsl
xchg
dec
pop
push
xor
lods
test
sub
push
paddsb
jns
adc
std
int3
sarb
icebp
mov
cltd
jmp
aaa
or
sbb
stos
loope
in
jbe
arpl
lahf
push
push
ret
mov
ret
mov
sbb
inc
enter
jg
dec
xchg
xlat
loope
pop
jge
les
sub
scas
mov
loopne
dec
and
popf
sbb
adc
aad
sbb
and
in
push
pusha
xchg
dec
std
push
scas
xlat
pop
pushf
in
dec
push
sbb
pop
sbb
sti
in
cs
inc
lahf
dec
adc
and
sbb
mov
test
mulb
and
in
dec
jle
sbb
and
pushf
jecxz
sbb
popf
jg
popf
sbb
sub
xor
mov
jecxz
aad
sub
inc
popa
mov
ds
xlat
mov
jecxz
dec
lods
cltd
push
inc
pop
inc
out
jnp
xor
psadbw
andl
enter
xchg
rcr
repnz
jne
test
push
faddl
cmp
adc
imull
push
lods
or
and
scas
ret
fimull
or
test
xchg
inc
cmp
int
adc
xor
shlb
dec
xor
cmpsl
ja
adc
pop
cmp
sbb
lret
jmp
push
fdivrs
sub
mov
cs
pop
push
adc
pop
in
aas
call
fcmovnu
mov
mov
ljmp
into
inc
popf
push
ja
data16
push
popa
test
pop
mov
push
test
cmpsb
sbb
lods
lods
adc
cmp
lahf
jbe
inc
hlt
pusha
aad
sub
jg
sub
into
imul
into
dec
xchg
test
pop
cs
shll
sub
sub
pop
xchg
ret
test
iret
mov
rolb
inc
add
ret
pop
sub
gs
shll
ss
mov
in
sar
imul
inc
cld
loopne
jecxz
imul
add
cmp
mov
xchg
or
sub
and
push
test
bound
mov
loope
sbb
inc
icebp
xchg
orl
repz
andb
xor
adc
loop
or
add
ror
push
pusha
cmp
or
push
ljmp
sbb
mov
adcb
out
sbb
xchg
cmpsb
fmuls
or
je
enter
add
dec
pushf
push
nop
imul
mov
ss
and
xchg
ret
iret
dec
adc
xor
inc
adc
clc
or
test
mov
test
xor
lods
jb
insb
imul
test
aaa
sbb
push
cltd
cmp
jge
xchg
mulb
jp
repz
push
aam
inc
xchg
enter
sub
je
push
xor
loope
and
inc
mov
fwait
xor
sbb
inc
jmp
lds
push
mov
ljmp
mov
jle
dec
lock
cmp
mov
push
inc
sub
sbb
inc
lock
cli
push
push
cmp
mov
push
adc
cmp
out
loopne
push
movsb
xor
popf
or
pop
sub
inc
push
dec
mov
nop
or
ss
mov
aad
add
and
ljmp
pop
dec
push
jmp
test
sbbb
dec
movsb
jecxz
gs
nop
decb
ss
adc
cli
add
es
dec
aas
ds
jns
movsl
sub
cwtl
push
loope
int
out
out
push
hlt
add
je
add
mov
mov
jl
mov
sub
cmp
lcall
sub
sbb
xchg
adc
ficoml
das
add
rcr
out
scas
xor
lds
cmp
dec
out
cwtl
pop
pop
in
xor
mov
push
mov
cmp
xchg
in
sbb
sub
insb
xor
mov
sbb
pusha
cmp
mov
cmp
xor
pusha
xor
rolb
sbb
jbe
and
aaa
mov
push
dec
lock
ja,pn
mov
repnz
mov
sub
adc
aas
xchg
js
andb
mov
lea
pop
jnp
fs
or
inc
lock
lea
insb
cli
mov
inc
jmp
mov
cmp
jge
push
push
cli
dec
push
cmpsb
sbb
ja
mov
add
sub
mov
test
jmp
xor
or
sub
inc
aaa
es
stc
ja
jg
sub
mulw
cmp
call
push
jo
sub
inc
mov
or
adc
scas
cltd
cmp
xchg
fwait
cmp
jp
test
inc
mov
test
adc
push
and
push
aaa
jmp
ret
aaa
filds
and
pop
inc
ds
push
into
mov
mov
mov
ret
stos
loop
sbb
mov
fsubr
xchg
mov
adc
mov
aam
dec
test
jne
mov
inc
xlat
pop
aam
loop
bound
hlt
or
idivb
testb
mov
mov
insl
fisubl
pop
lods
les
adc
push
stos
add
ret
insl
movl
inc
add
sarb
int3
push
lea
mov
lock
clc
je
cbtw
push
jmp
add
mov
xor
fwait
and
sti
scas
push
out
inc
cld
jge
lods
insb
fisttps
sub
fstpl
xor
mov
cmp
or
pop
push
lock
sahf
jnp
push
jecxz
mov
lret
xchg
push
and
pusha
or
dec
aaa
loop
cbtw
repnz
stos
push
in
dec
ficoml
ficoms
xlat
push
clc
or
dec
adc
jae
and
jg
jae
aad
mov
and
loopne
push
fisttps
pop
loop
or
ret
jl
push
stc
arpl
mov
mov
jo
cs
lcall
das
mov
cmp
outsb
pop
nop
pop
jns
insl
dec
outsl
leave
dec
test
das
lods
add
xor
movsb
xorl
leave
mov
loop
pop
stc
xor
push
std
cmp
mov
and
bound
dec
pop
mov
pop
xchg
test
jl
jge
xor
and
in
out
popf
leave
and
loope
mov
sbb
pop
out
xlat
popf
repnz
out
inc
cmp
cmp
clc
jb
shlb
pop
shl
jbe
xchg
jmp
xor
push
dec
clc
ja
neg
test
mov
das
fbld
xchg
jne
movsb
test
out
add
mov
mov
or
push
mov
push
dec
xor
adc
mov
sub
add
shr
xor
ret
sbb
mov
cli
mov
dec
stos
testb
cmc
xchg
sub
dec
ror
ja
lret
sub
or
mov
shlb
dec
and
mov
dec
pop
aas
imul
ja
adc
icebp
pop
leave
sbb
adc
push
mov
bswap
nop
dec
and
je
add
loop
in
mov
lahf
and
and
nop
inc
hlt
fidivrs
mov
jmp
xor
je
adc
mov
call
inc
jle
iret
loopne
xor
mov
mov
rolb
mov
ret
pop
or
icebp
in
add
cli
pop
xchg
inc
imul
mov
and
xlat
adc
xchg
lds
loop
push
pop
lcall
inc
adc
stc
mov
jmp
adc
pop
sbb
jl
les
sti
mov
or
scas
or
out
or
inc
add
xchg
stc
jle
ds
jle
shrl
xor
pop
push
leave
mov
fisttpl
push
or
fbstp
xchg
aaa
adc
mov
or
jl
add
daa
cli
int
clc
outsl
adc
data16
sbb
push
jge
adc
inc
jecxz
imul
cs
outsb
ror
cwtl
mov
pop
or
stos
into
scas
test
push
dec
jmp
mov
popf
pop
sub
inc
push
dec
mov
jmp
out
mov
repnz
and
push
addb
sysexit
call
cmp
iret
dec
and
je
fistps
xlat
sbb
pop
lods
mov
pop
sbb
adc
push
mov
ret
cltd
outsb
pushf
mov
insb
sbb
das
inc
stc
fsubrs
add
dec
into
scas
and
and
pop
xchg
testl
dec
and
and
shlb
loop
pcmpgtb
cmp
lret
sbb
movsl
shrb
negb
je
arpl
dec
mov
mov
sub
push
xchg
pop
in
ret
orl
xor
movsb
xor
sahf
cmp
lock
jne
xchg
mov
rcrb
rdtsc
or
mov
sbb
xchg
mov
pop
cmpsb
fstp
int3
mov
repnz
mov
fcompl
cmc
outsb
and
sub
out
lret
repz
jle
cld
insb
fdivrp
push
dec
xor
and
add
sahf
cwtl
scas
adc
xor
push
adc
pop
addl
loop
or
xor
mov
mov
movsb
pop
testb
enter
out
push
xor
fstpt
les
bound
pop
jge
loop
sarl
and
ds
fndisi(8087
dec
hlt
push
es
pusha
adc
int
js
test
hlt
push
std
pop
das
idivb
add
sub
fcmovne
xor
lock
lcall
push
cmc
jb
int
jbe
push
jo
sbb
mov
scas
jmp
and
xor
testl
shlb
sbb
ficomps
pop
fisubl
cmp
or
dec
nop
jo
sahf
xchg
xor
xor
popl
int3
out
push
icebp
pop
xor
roll
xor
test
movsb
dec
lahf
and
pcmpeqb
and
dec
testb
hlt
sbb
push
into
sbb
dec
lret
mov
js
lds
stc
inc
cmpb
movsb
mov
repnz
and
cltd
mov
cmpsb
outsb
adc
xchg
sub
cmp
lret
push
cltd
push
adc
dec
cmp
or
out
outsl
adc
notl
sub
cmp
into
xor
or
pop
and
outsb
sub
out
daa
xor
or
icebp
sub
fwait
or
movsl
out
dec
jmpw
cld
xchg
cs
mov
lret
cmp
aad
je
mov
cld
push
xor
sbb
and
push
aaa
aas
jnp
aad
xchg
fimull
insb
xchg
jecxz
jecxz,pt
lods
test
push
lcall
inc
mov
arpl
push
lea
mov
test
mov
enter
lret
scas
fnstsw
sub
bnd
xchg
jno
or
or
push
stos
sub
into
inc
fbstp
addr16
pop
bound
lock
incb
popa
xor
mov
fldl
ror
dec
int3
rdmsr
ds
cmp
hlt
sbb
inc
pop
hlt
lcall
iret
jecxz
pop
popf
shl
push
std
shl
adc
iret
imulb
jbe
push
adc
xchg
flds
cli
std
push
divb
fcmovbe
insb
fisubrs
jns
xor
sbb
push
and
mov
pop
sub
iret
cmpsl
psrlw
fadds
mov
test
lret
mov
pop
pop
fs
fcoml
shlb
subb
mov
xor
push
cmpsb
loop
push
sub
in
lahf
jecxz
into
mov
cwtl
push
arpl
movsl
bound
lea
xor
xor
pop
jae
enter
or
divl
mov
dec
aas
mov
or
dec
mov
test
sbb
lea
mov
pop
xchg
and
or
insb
call
jle
xchg
mov
jmp
lahf
dec
ss
sbb
test
cmp
pop
sarb
inc
popf
out
stos
xor
and
scas
outsl
inc
sbb
in
ffreep
xchg
sub
jb
add
push
add
xchg
xchg
fildl
add
inc
mov
push
sub
mov
add
out
out
fs
mov
fsubl
mov
push
push
or
inc
cmp
xchg
push
pop
xor
fbld
push
adc
mov
imulb
fsts
lret
sbb
mov
jb
imul
mov
popa
into
cmp
add
xor
lret
adc
inc
int
shll
dec
fs
mov
or
call
addr16
xor
mov
mov
mov
scas
fldenv
mov
sub
jae
sbb
movsl
dec
out
push
cli
outsb
mov
int3
test
loop
and
adc
mov
std
enter
or
sbb
mov
bound
pushf
add
outsl
cmpsb
sub
or
mov
lock
push
sbb
fst
test
jnp
fisttpll
cmp
push
insb
add
movsl
sbb
addl
pop
and
cmp
jle
sub
cmpsb
mov
pop
int3
bound
roll
add
pop
inc
mov
nop
xchg
adc
jge
sub
and
xorl
fidivs
leave
dec
pop
adc
add
sti
jns
lock
xchg
js
adc
pop
aam
icebp
loope
adc
add
les
xor
jg
xor
push
arpl
scas
push
dec
mov
jo
mov
xor
cld
sub
stos
xchg
lods
xor
aam
xor
mov
imul
sub
add
xchg
push
jnp
mov
leave
mov
jecxz
adc
out
inc
gs
push
fs
and
shl
xchg
mov
mov
rorb
jle
sub
filds
mov
rclb
outsb
mov
test
jp
into
inc
mov
sub
nop
add
aam
and
insb
inc
mov
pop
jo
inc
add
jmp
mov
and
mov
jecxz
cwtl
addr16
push
sbb
adc
mov
ficoml
push
or
inc
call
in
inc
lock
sbb
add
xchg
fldl
shrb
sbb
stos
and
add
fcoms
mov
dec
xchg
pop
sub
pop
pop
scas
ss
test
mov
js
mov
mov
aaa
add
ss
inc
inc
gs
inc
das
int
and
add
mov
cmpsb
test
mov
fsubs
rol
dec
sbb
aaa
cmp
loopne
pop
aam
push
push
out
les
mov
test
dec
mov
ljmp
add
mov
jl
cmp
xchg
sbb
pop
xor
enter
push
push
push
push
out
mov
jmp
adc
addr16
dec
ret
jl
fidivs
push
push
adcb
ds
cmpsb
aaa
add
jmp
in
mov
pop
std
out
add
dec
fcomps
into
stos
fsubs
jle
sub
test
je
lods
test
cmp
out
addr16
jnp
sub
ja
insb
pop
pop
pop
cltd
pop
push
pop
repnz
fsub
daa
sub
iret
xchg
movsb
hlt
xorb
inc
lret
pop
int
es
push
pusha
dec
sbb
and
js
cmp
jb
fs
stos
add
popf
push
dec
into
or
and
mov
imul
dec
cmpsl
cmp
imul
testl
jmp
ja
in
mov
add
shlb
jmp
iret
or
push
lret
push
leave
pushf
fisttpl
out
call
icebp
fcoms
fldt
arpl
xchg
dec
inc
int3
pop
std
sbb
push
jae
lods
jae
dec
roll
movsb
cli
lcall
inc
jne
or
mov
js
out
add
in
int3
add
push
outsb
push
pushf
frstor
lds
push
rolb
pop
mov
mov
nop
pop
ret
mov
nop
mov
imul
nop
stos
stc
mov
mov
xor
arpl
sbb
test
lahf
fistps
pop
into
imul
push
xor
jnp
push
es
ds
imul
scas
dec
pop
mov
icebp
in
call
jae
iret
or
inc
xor
inc
sub
mov
mov
cmc
jns
inc
pop
or
and
movsb
sbbl
lds
mov
cmpsb
dec
xor
sub
rcr
mov
sub
pop
adc
cli
iret
stc
cwtl
movsl
jmp
mov
add
ja
into
lods
push
mov
xchg
dec
push
push
sbb
jp
fs
sbb
mov
xor
lea
into
test
dec
sbb
push
movsb
test
shl
out
push
in
lods
pop
pop
mov
jg
xor
pop
out
jge
mov
hlt
or
pop
jp
loope
out
mov
xchg
pop
ljmp
and
in
sub
lret
mov
mov
push
add
add
xchg
lret
or
cmp
jecxz
pop
pop
addr16
push
jmp
mov
sbb
xor
ret
fimuls
cmp
sub
int
push
xchg
cwtl
nop
fldl
sbb
add
jecxz
inc
jne
js
sub
adc
je
jp
pop
stc
je
jecxz
add
add
js
int
lods
xchg
pop
test
movsb
in
mov
pop
stos
hlt
or
dec
rorb
sahf
jae
jg
out
xchg
add
adc
das
fcompl
pushf
sub
push
sbb
cmp
jae
loop
fcoms
xchg
hlt
inc
dec
cld
popa
fcoms
mov
fs
rcr
cmp
sub
xor
dec
in
andb
sbb
cmpsb
push
int3
aam
loop
mov
xchg
lret
lcall
fs
test
jmp
xchg
pop
xlat
or
cmp
jbe
inc
jbe
loopne
sub
inc
callw
imul
jns
das
ret
adc
movsl
mov
adc
adc
pop
dec
or
fnstcw
dec
lcall
push
and
aaa
pop
dec
movsb
mov
insl
daa
mov
insl
xorl
lds
imull
xor
das
in
movsb
jns
sub
iret
lahf
inc
fmuls
pop
push
mov
push
int3
lock
ds
frstor
mov
dec
sti
adcb
xor
jbe
lods
in
cmp
loopne
cltd
jne
add
das
pop
addr16
dec
pop
dec
out
fcomps
fst
pop
rcrb
sbb
icebp
sti
pop
std
jle
push
push
jmp
jno
cmp
mov
popa
jbe
lock
jb
dec
adc
aam
inc
jns
sbb
fbstp
jns
int
ljmp
adc
lds
adcb
fwait
testl
in
push
dec
lea
nop
test
xchg
mov
shrd
or
jge
mov
or
fldt
mov
fistpl
insl
sahf
mov
dec
xchg
pop
lret
push
lock
enter
mov
data16
add
lahf
out
sbb
rolb
lds
dec
rcr
xor
call
inc
into
cmc
andl
imul
mov
fwait
not
stc
or
pop
cmc
fs
fimuls
rorl
cmpsb
outsl
jg
inc
inc
movsl
out
into
insb
pop
sbb
mov
and
fidivrl
push
in
loopne
out
mov
mov
or
sti
arpl
orw
sbb
scas
addr16
push
filds
push
je
mov
mov
mov
add
lahf
bnd
sub
dec
push
nop
mov
xchg
jns
xor
jnp
cmpsl
pusha
in
sbb
outsl
xchg
pop
inc
lret
out
xchg
push
jl
movsl
xor
fsts
or
pop
into
imul
pop
mov
jl
cmp
cli
fstpt
icebp
or
jg
int3
test
call
mov
sub
movsb
jle
sbb
scas
push
test
push
loopne
les
fyl2xp1
lret
rcrl
movsb
enter
cmc
aas
test
adc
arpl
xor
in
inc
iret
dec
xchg
inc
mov
fnsave
insl
hlt
jp
les
inc
push
cmpsl
jecxz
imul
adc
fstl
aaa
mov
nop
xor
mov
dec
mov
das
leave
sbb
sahf
push
hlt
or
or
fidivrs
stos
stos
jge
mov
stc
push
adc
hlt
adc
sahf
jecxz
jmp
inc
divl
loopne
dec
out
ss
push
add
mov
mov
xchg
shrb
rcr
push
mov
mov
jnp
pop
push
sti
cmp
or
loop
test
xlat
in
or
xchg
inc
xchg
cmc
xchg
sbb
sub
shll
shrl
repnz
sub
pop
or
cmp
fidivl
es
icebp
lret
test
or
pushf
insl
dec
stos
sbb
or
nop
shrb
movsb
aad
mov
pop
test
out
pop
inc
jbe
leave
adc
adc
pushl
dec
jge
stc
ret
aam
ljmp
imul
mov
mov
mov
mov
nop
adc
push
mov
data16
cmp
cmpb
sbb
dec
pushf
mov
cmpsl
repnz
fstl
mov
add
dec
out
cs
or
mov
call
sti
add
ds
or
mov
jne
les
aaa
inc
mov
loop
popf
aaa
in
bound
test
pop
push
xchg
mov
les
push
pop
jmp
mov
lret
stos
push
aam
sarb
inc
xchg
fadds
sbb
call
jnp
fstps
jl
mov
add
jecxz
inc
mov
pop
adc
sahf
push
sub
push
pop
decb
or
cld
pop
into
sbb
and
xchg
push
or
cld
and
lcall
stos
scas
in
ljmp
push
dec
inc
xchg
ss
aam
loop
mov
xchg
mov
xchg
iret
insl
shrb
push
mov
push
pop
mov
arpl
lock
mov
push
scas
hlt
daa
lods
ds
xor
mov
add
jbe
jae
mov
in
nop
jge
in
inc
aaa
and
imul
rolb
sbb
into
pop
pop
imull
pop
xchg
or
jns
clc
jne
cli
jmp
sub
mov
out
jg
mov
inc
andb
popa
in
pop
data16
mov
dec
lods
adc
repnz
sbb
repnz
lretw
cltd
std
or
cmpb
popf
mov
xchg
xchg
mov
xor
xchg
push
pop
jge
mov
leave
jne
pop
push
shll
xchg
inc
adc
mov
shrb
lret
mov
add
js
push
mov
add
inc
fstps
fwait
addb
das
pusha
call
xchg
jo
xchg
nop
pop
xor
movsl
cli
nop
adc
out
enter
or
push
mov
lods
mov
into
test
mov
sub
sub
repnz
jae
or
or
push
adc
jb
push
mov
clc
push
call
xchg
pop
adc
dec
lods
cmpsl
jbe
adc
and
test
repnz
dec
repz
hlt
push
in
mov
stos
mov
lcall
cmpsb
das
outsb
and
pop
xor
rcrb
lock
xchg
mov
adc
add
mov
add
xchg
fcoms
add
stc
fiaddl
popf
or
inc
int
adc
xor
or
dec
inc
lret
int
fs
lods
mov
adc
cmp
add
xorl
inc
and
xchg
adc
push
xor
sbbl
ja
adc
cmpsb
pop
xor
popa
lret
xchg
push
dec
mov
clc
xchg
add
add
or
adc
mov
ret
inc
ja
inc
jg
pop
pop
daa
pop
popa
xor
adc
sbb
shr
xor
divb
mov
cltd
mov
and
jl
out
and
inc
ret
incl
in
stos
adc
test
into
pushf
cmc
lret
iret
pop
add
movb
sahf
loop
lods
inc
mov
nop
into
push
mov
sbb
jb
sar
repz
jmp
or
stos
dec
xlat
push
xchg
jmp
xchg
aas
or
imul
adc
negb
push
ja
cmp
adcl
das
sub
je
ss
andb
scas
jecxz
popa
hlt
outsb
jo
cmp
popa
loopne
ret
mov
fwait
lret
ja
adc
cmp
cwtl
jb
and
jbe
fistps
mov
push
mov
aam
enter
jnp
xorl
inc
loope
inc
adc
push
mov
mov
jmp
xchg
dec
fistl
fistl
std
cli
jnp
dec
mov
insb
mov
mov
jmp
mov
rorl
int
sub
cmp
repnz
leave
xchg
movsl
and
xorl
imul
hlt
sti
xor
mov
push
xor
push
fwait
jnp
aaa
shlb
jmp
mov
addl
rclb
loope
push
lret
lcall
lret
fmull
sahf
mov
cmpsb
push
cwtl
pop
je
xchg
stos
dec
jnp
icebp
mov
aam
stos
daa
imul
movsl
gs
lcall
aaa
fs
inc
ficomps
pop
sub
adc
sub
jnp
mov
lds
inc
jo
loope
arpl
psubw
mov
test
jecxz
dec
ret
push
fisubl
cmc
jae
roll
adc
mov
ret
enter
gs
xchg
testb
iret
jb
jecxz
xchg
shlb
test
outsl
dec
leave
jne
and
popf
iret
movsl
loop
sbb
xchg
inc
mov
inc
inc
pop
and
fcmovu
sub
sub
fcmove
imul
in
sub
mov
or
xchg
imul
arpl
enter
mov
inc
inc
pop
imul
mov
loopne
fildl
mov
inc
sub
sahf
in
sub
aam
popa
mov
test
cmpsb
push
aas
int3
inc
ret
mov
aad
dec
stos
adc
xlat
dec
or
or
jae
rolb
scas
jecxz
stos
fs
jmp
add
cli
sbb
xchg
push
mov
or
xchg
gs
cmp
mov
fisubrl
sub
dec
pop
out
ljmp
add
out
shrb
int
lret
psllq
cmp
lahf
xchg
stc
pop
je
data16
das
cmp
fbstp
jno
syscall
xchg
dec
pop
xor
dec
std
dec
adcl
repz
sti
int
sbbl
mov
popf
pause
test
leave
mov
mov
add
aaa
loop
sbbl
enter
fs
mov
adc
cltd
xchg
pushf
and
pcmpeqw
xor
dec
sub
stos
mov
cmpb
fsubrs
adc
jb
pop
mov
jle
push
lods
mov
gs
setbe
hlt
mov
jmp
pop
sbbl
adc
push
adc
adc
mov
out
mov
jmp
aad
sbb
dec
test
das
fnstcw
fdivr
fwait
sub
jbe
jge
call
ds
cmp
inc
push
sahf
dec
jp
lahf
test
mov
pop
jle
jl
addb
aaa
and
dec
andb
sbb
ret
pop
es
test
adc
cmp
fisttpl
jb
fists
ljmp
sti
lret
cwtl
xchg
daa
mov
sbb
lcall
mov
xchg
dec
je
lcall
sbb
jb
jmp
pop
mov
mov
enter
push
mov
adc
mov
xor
mov
inc
repz
std
add
adc
sbb
push
fsubr
je
cmc
out
iret
push
hlt
mov
mov
rol
mov
neg
mov
sub
push
mov
adc
pop
sarb
mov
mov
jp
mov
nop
cmp
inc
dec
xor
movsl
cmpsl
cmp
mov
mov
rolb
sub
ja
xchg
cmp
mov
shlb
jnp
adc
stos
gs
inc
pop
orb
in
mov
nop
cmp
pop
test
pop
loop
mov
xor
jmp
lcall
sub
cltd
arpl
add
fdivs
and
mov
repnz
inc
shr
sti
inc
lods
push
mov
imul
iret
pop
mov
inc
jmp
imull
or
add
fs
push
ds
aad
xlat
adc
in
and
cmp
xchg
and
pop
lea
inc
adcl
push
mov
loopne
mov
incl
add
mov
cmp
stc
cmp
loop
cmp
xchg
mov
jmp
lods
mov
xchg
std
push
clc
cld
pop
les
shl
adc
imulb
outsl
pop
inc
sahf
imul
les
cmp
inc
dec
test
jb
add
lock
lods
sbb
mov
in
test
fcmovnu
pop
scas
roll
aam
test
out
mov
insl
sbb
repz
xor
pop
cld
in
shrl
mov
out
iret
out
das
arpl
movsl
mov
xchg
arpl
andb
mov
jmp
ret
sub
push
fildll
clc
das
outsl
movsb
lods
pusha
scas
jmp
inc
bound
stos
sub
xchg
mov
cwtl
jo
out
cltd
test
mov
gs
or
or
xor
dec
cmp
or
mov
call
cltd
jns
xor
cmpxchg
push
jmp
cli
xchg
into
jle
mov
dec
xor
lret
sbb
adcl
pop
xchg
lds
fisttpl
jle
pop
push
pop
dec
hlt
lret
lret
movsb
daa
out
xchg
xchg
cmpsl
sub
pop
pop
lret
sub
mov
in
sbb
sbb
jmp
cli
adc
call
mov
push
scas
dec
loope
outsl
sub
imul
cwtl
in
fcoml
pop
movsb
cmp
push
cmp
sti
mov
test
stos
or
sub
pop
cmp
decl
push
xlat
stos
pop
pop
in
lods
aas
scas
das
call
pop
mov
gs
in
paddd
outsb
sbb
cli
mov
xchg
jge
outsl
pop
cld
idivl
daa
ljmp
movsl
das
in
inc
lahf
test
sub
test
mov
and
clc
or
lods
mov
lock
jmp
mov
add
movsl
cmpsl
test
mov
xchg
pushf
cmp
add
lods
xchg
sbb
js
mov
sbb
jae
in
cmp
dec
cld
sbb
enter
sbb
ljmp
mov
cmp
ljmp
sub
dec
test
das
and
or
add
pop
push
or
insb
scas
xchg
fwait
cmpsb
lcall
and
or
sbb
mov
sar
fldcw
push
adc
fiaddl
outsl
or
add
loop
xchg
enter
insb
imul
cld
or
xor
and
daa
das
js
mov
and
cmpsb
inc
push
sahf
jns
and
out
clc
jnp
idivl
insb
inc
xor
push
out
mov
filds
pusha
mov
mov
mov
ret
out
or
movsb
repnz
rcl
pop
paddsb
sub
pop
mov
sub
ret
push
gs
xor
int
dec
out
mov
sub
test
shr
fsubrl
in
rclb
mov
bound
aam
push
xchg
pop
mov
sti
push
shlb
lea
dec
sbb
lret
ja
pop
mov
adc
mov
adc
push
fwait
push
sahf
rclb
and
pop
subl
in
and
lods
insb
cmp
in
cld
push
clc
pop
cs
push
inc
xchg
insb
ljmp
pop
stos
leave
mov
inc
paddq
pushf
push
ja
xchg
incb
repz
push
nop
adc
mov
aaa
xor
das
fsqrt
je
or
push
inc
clc
leave
insb
fcomps
push
mov
or
idivl
testb
mov
fcoml
mul
test
repz
lret
out
mov
hlt
mov
cmpsb
pop
mov
cmp
ficomps
xchg
lret
pop
fisubrl
es
xlat
or
add
insl
movsb
push
mov
adc
and
cmp
fadd
sti
sar
mov
and
push
add
test
mov
mov
mov
or
pop
push
jae
push
xchg
cwtl
jmp
out
mov
in
pop
mov
add
ljmp
xor
jmp
push
leave
mov
hlt
popa
js
int3
sub
stos
rcl
add
xchg
push
data16
fidivs
mov
or
jge
pop
repz
jmp
repz
jmp
jbe
dec
icebp
sbb
inc
xchg
fs
movsb
sbb
jnp
inc
sub
mov
mov
dec
ret
sub
shrb
xlat
ds
pop
sti
or
shlb
mov
ds
call
jp
jp
jnp
fisubrl
call
fs
jp
jp
mov
mov
and
icebp
cltd
repz
imul
shrl
cld
add
add
fdivs
call
pop
ret
jo
addr16
cli
hlt
jae
xorb
data16
mov
ss
in
and
adc
jae
pop
xchg
cmp
in
mov
push
jae
adc
fbstp
mov
rol
push
push
inc
hlt
pushf
jge
jb
push
mov
insb
imul
test
test
mov
fisttpl
dec
loopne
or
jmp
lock
xor
cmpsb
jnp
pop
cmc
push
fdiv
or
outsl
dec
cwtl
mov
bound
jle
xchg
cmpl
adc
jecxz
into
test
lock
mov
sti
mov
sub
cmpsb
testb
fcomip
movb
jge
dec
jnp
sar
mov
jno
pop
adc
sub
sbb
dec
fnstsw
cmp
cmp
inc
mov
push
adc
rcrb
jp
jl
adc
mov
stc
mov
mov
test
or
fadd
add
inc
aad
xor
or
in
test
ljmp
cli
jbe
das
xlat
mov
shll
or
mull
and
add
and
and
fsts
sub
iret
mov
ljmp
push
adc
jecxz
stos
and
subl
jns
xchg
lea
xor
in
lahf
cs
rcrl
jmp
mov
sahf
ja
add
ficomps
xor
daa
shlb
jp
pop
outsb
mov
push
mov
sahf
nop
xchg
add
xor
xor
and
imul
aas
stc
xor
in
popf
cld
xorl
pop
into
orl
out
movsb
jg
jae
jae
leave
cmpsb
dec
std
stos
das
cmp
sbb
ljmp
pop
icebp
xorb
leave
adc
je
stc
push
adc
arpl
fmul
push
ja
xchg
test
lret
ds
cwtl
sub
jle
mov
or
xor
xchg
pop
into
shll
mov
sahf
cwtl
sbb
repnz
push
lahf
cs
jle
xchg
xor
ljmp
rclb
repz
iret
adc
fimuls
les
mul
lret
inc
lret
stos
mov
stos
or
mov
adc
aaa
gs
add
outsl
or
mov
notl
xchg
fsubl
mov
mov
push
xor
mov
sbb
sub
sbb
pop
inc
dec
sbb
jo
sbb
xchg
jb
outsb
dec
sbb
dec
push
out
test
xchg
out
mov
push
mov
mov
in
dec
shl
inc
pop
aas
hlt
adc
pop
lcall
ror
repz
mov
push
mov
mov
pop
lods
sbb
test
xchg
cs
mov
pushl
arpl
cli
in
call
jbe
hlt
ja
or
cwtl
inc
xor
inc
push
sbb
stos
xor
push
psubw
ret
sbb
icebp
cli
test
xchg
mov
mov
cmpsb
out
pushf
sub
push
xchg
ret
inc
roll
mov
inc
icebp
insl
push
pop
fwait
enter
add
ret
push
bnd
xor
sub
mov
test
mov
and
mov
pop
lcall
jecxz
xchg
gs
pop
test
lcall
cmp
popf
add
or
or
inc
sbb
cmp
adc
pop
cwtl
das
out
je
neg
jl
lods
jmp
and
lock
jno
addr16
push
add
in
mov
fchs
std
xchg
cmp
sub
cmp
pop
mov
imulb
push
xchg
mov
mov
popf
jle
push
pop
jmp
pop
mov
pop
inc
inc
std
jae
add
rorl
loopne
pushl
mov
data16
jp
fsub
testb
cmp
jo
pop
xor
push
jae
loopne
out
lea
fimuls
cmpsb
bound
and
int3
repnz
outsb
push
mov
sub
mov
push
insb
push
xlat
xor
sub
int3
jne
xor
dec
mov
xchg
sub
sub
and
jge
test
sub
cmpsl
inc
imul
int
or
push
cmovo
ret
cltd
movsl
jnp
bound
push
incl
jb
pop
mov
add
and
jo
fs
jmp
out
das
or
cmc
sub
imul
mov
outsl
mov
loop
xor
add
add
in
pop
inc
inc
sbb
mov
mov
mov
jno
sub
nop
sub
xor
dec
insb
sbb
sub
add
xchg
clc
pop
cmc
push
xor
repnz
lds
sub
aam
cs
push
loope
or
fdivrl
int3
jb
test
dec
fistpll
push
mov
adc
xchg
les
notl
and
call
pop
and
xorps
jmp
or
sub
mul
fisubrl
aas
fcompl
xor
mov
mov
mov
scas
ret
adc
movsl
stos
pop
xor
faddl
sbb
clc
iret
loopne
bound
je
pop
xor
xchg
ret
das
arpl
sbb
xchg
rcr
dec
notl
jb
stc
fwait
movsl
fs
insl
shlb
in
test
push
sub
and
jbe
add
jp
fld
jns
negb
dec
es
insl
into
sub
inc
popf
in
adc
push
add
lahf
mov
rorl
mov
insb
stos
pop
push
add
add
lock
cmp
lock
shrb
inc
popf
lcall
sub
fstpl
clc
inc
pop
divb
jns
repz
mov
jns
pusha
in
ljmp
js
mov
push
popf
out
fsubrp
push
sbb
scas
adcl
repnz
loop
insb
cmpsl
in
sub
ret
sbb
stos
adc
adc
fwait
repz
mov
ficomps
sub
or
ficomps
xor
je
mov
xchg
and
pop
lcall
cmpsb
fstps
push
xlat
shl
adc
lock
or
fwait
repz
rcl
push
lock
cmp
dec
notl
mov
ja
push
aas
sti
mov
imul
int3
sub
sbb
jbe
mov
or
and
cmc
clc
cmp
mov
push
dec
mov
mov
movl
pop
cmp
xor
rcrb
icebp
sbb
ds
lcall
icebp
xchg
sarb
inc
int
xor
rcrb
jge
pusha
int
jae
jb
in
test
adcl
mov
in
pop
mov
popa
jnp
in
inc
pop
xchg
pusha
mov
cmp
dec
mov
jb
cmc
sub
enter
dec
xor
sbb
add
imul
out
xchg
out
imul
sbb
push
inc
fisttpl
lret
push
fcoml
std
fcompl
xchg
test
movsb
imul
xchg
mov
push
jne
rep
push
ficoml
dec
jno
add
fidivrl
lret
orb
mov
mov
push
jnp
mov
sbb
imul
pushf
rcl
pushf
mov
mov
inc
or
mov
xchg
aad
pop
fsubrp
cmpsb
rcrl
daa
popf
lds
pop
test
inc
sbb
fisubs
pop
outsb
mov
lcall
lea
lods
loop
ficoml
mov
cmpsb
aas
addr16
mov
add
cs
int
cmp
inc
mov
icebp
clc
push
cmpl
movsb
mov
pop
push
or
jb
sub
or
nop
sbb
fstpt
xor
test
es
xchg
es
pop
ficoml
rcl
xor
sbb
cs
aad
mov
out
pop
aam
jp
fdivs
pop
pusha
loope
orb
mov
sbb
xchg
add
dec
mov
sbb
scas
mov
fldl
xor
lds
mov
push
dec
call
xor
mov
mov
lret
mov
push
xorl
xchg
jbe
pop
jge
mov
insb
dec
arpl
mov
push
inc
jno
repnz
cmp
movsb
insl
fdivr
mov
or
or
out
rol
adc
out
mov
inc
xor
enter
insl
cmp
cld
rclb
push
sub
dec
push
mov
dec
nop
outsb
jl
andl
dec
cltd
inc
pusha
aad
push
loope
outsb
or
cmp
add
push
hlt
sarl
sub
mov
js
aas
mov
addr16
aas
add
push
insb
push
outsl
push
scas
test
test
xorl
mov
cwtl
sbbl
sub
lods
lret
pop
mov
mov
test
xchg
jae
dec
shrb
loope
leave
addr16
xchg
sbb
sub
testb
stc
adc
jno
or
mov
pop
sub
rcl
imul
push
cmovle
insb
enter
mov
jb
fstpl
pop
or
mov
push
sbb
add
cld
and
and
adc
or
bt
sbb
sub
jns
and
or
enter
mov
inc
adc
dec
push
sti
adc
cltd
mov
push
sub
push
imul
aam
xchg
add
push
out
aam
jb
dec
sbb
pop
add
pop
test
mov
cwtl
loope
out
add
fisttps
cmp
mov
sbb
sub
addr16
xchg
outsl
push
xor
es
arpl
jnp
xchg
in
push
outsl
pop
xchg
dec
pop
lea
cltd
xor
icebp
movsl
pop
adc
push
sub
pop
xchg
adc
sbb
std
cmp
or
mov
popa
mov
sub
fbstp
pop
popf
pop
test
jne
std
fwait
cld
cmp
add
or
and
push
mov
orb
ret
add
pop
clc
scas
aad
push
pop
xchg
movsl
clc
lret
negb
std
push
fdivl
movsl
test
cmp
push
out
into
or
xchg
mov
cmpsl
mov
pop
xchg
cltd
jg
cmc
xchg
daa
pop
std
fsubl
xchg
push
xchg
push
jge
in
mov
push
outsb
cs
lock
stos
cli
mov
ja
push
and
cmpsl
rolb
mov
ss
and
aas
push
cli
sbb
push
mov
add
add
jne
inc
mov
xchg
iret
cmpsb
lods
push
hlt
jbe
and
jmp
jbe
cmp
xchg
popa
add
mov
mov
mov
stc
aas
mov
or
stc
clc
shl
addr16
pop
inc
addr16
and
push
xlat
push
mov
mov
cli
bswap
hlt
or
add
xchg
cmpb
jge
push
xor
lret
sahf
xchg
in
xchg
subl
jo
pop
mov
cmp
in
xchg
outsl
imul
cmpl
cmp
fbstp
mov
pop
and
push
xorl
pop
ja
arpl
cmc
adc
daa
sub
hlt
fwait
pop
in
dec
cmp
insb
push
imul
addr16
in
lock
fcmovb
fwait
push
pop
push
lahf
std
dec
mov
mov
jp
and
dec
repnz
mov
scas
aam
xchg
sbb
xchg
iret
xor
mov
ret
mov
pop
and
data16
nop
fiadds
mov
and
clc
test
cld
mov
stc
in
cld
push
sbb
mov
xchg
shll
int3
add
jae
out
lods
mov
leave
mov
or
jne
ror
and
jp
add
imul
and
adc
jg
jp
movsb
pop
enter
cmpb
xor
pop
roll
ja
enter
outsl
mov
xor
or
sbb
cltd
pushl
int
xorb
out
pop
inc
and
loopne
add
frstor
out
insl
arpl
mov
test
mov
fbld
mov
xlat
dec
push
insl
orb
push
mov
inc
scas
testl
outsl
xor
jae
mov
mov
ret
inc
aas
pushf
ja
dec
pop
mov
sahf
sub
test
fwait
jmp
adc
pop
inc
pop
fwait
mov
xor
enter
je
aaa
xlat
sub
mov
imul
nop
and
sar
ret
xlat
jl
dec
and
mov
jmp
ljmp
or
out
faddl
mov
mov
xchg
push
cmp
and
adc
fcomps
push
pop
movl
mov
mov
cli
addr16
and
ret
mov
fnstsw
insl
xchg
in
lret
dec
cmc
pop
sbb
xchg
in
mov
je
stc
ss
jnp
outsb
insl
dec
popa
sbb
stc
lret
dec
push
and
and
mov
pusha
jl
mov
rcr
mov
pop
mov
daa
push
lock
cltd
mov
loope
sti
fisttpll
dec
sbb
inc
mulb
fildll
cli
pop
pusha
pop
ds
and
dec
fistps
testb
xor
mov
cs
ss
movsb
icebp
cwtl
movsl
jb
or
insl
sarb
test
insb
out
leave
xchg
xor
outsb
sti
pushf
pushf
je
xchg
pop
pop
loopne
mov
jecxz
dec
outsl
outsb
xchg
notl
add
add
or
stos
loope
pop
pop
jb
dec
pop
sti
movsb
or
ficoml
rcr
clc
js
adc
push
mov
test
mov
cld
push
arpl
das
mov
aaa
sbb
sub
xchg
or
mov
add
mov
push
inc
clc
leave
push
lcall
mov
mov
loop
mov
out
push
add
cld
xchg
sbb
rcr
adc
ds
xlat
nop
inc
and
cmpsb
out
add
loope
push
mov
psubusb
or
and
std
mov
xchg
aas
xor
sti
lcall
pop
xchg
jg
gs
mov
and
scas
xchg
mov
pop
mov
jo
popl
jg
out
cmp
rcll
movsl
jecxz
shrl
in
sbb
inc
xchg
out
inc
cmpsl
rcrl
repnz
out
pop
adcb
loopne
push
imul
mov
es
in
lcall
sbb
fsubl
icebp
cs
and
pop
mov
add
inc
in
jp
jo
pop
mov
movsl
pushf
or
dec
mov
les
addr16
into
adcl
xlat
iret
mov
sbb
dec
xor
pop
ds
xchg
dec
in
pop
outsl
addr16
and
jle
adc
lods
jb
fcoml
sbb
lods
shl
cmp
xorb
pop
mov
mov
inc
out
out
movsb
cltd
subb
ret
mov
hlt
enter
mov
in
sub
cmp
shrb
mov
sub
mov
pop
jns
stos
dec
pop
jb
cmc
popa
or
lds
dec
jmp
cli
mov
sbb
sarb
in
xlat
ljmp
fsubl
mov
sub
lcall
int3
das
inc
lods
leave
mov
incb
mov
jae
cmp
inc
scas
ljmp
sub
cmp
dec
jge
imulb
popf
cmpsb
stc
jno
push
and
mov
mov
mov
push
mov
add
add
popf
test
movsb
fwait
in
mov
pushf
xor
inc
push
daa
adcl
es
inc
sub
mov
xchg
push
out
mov
mov
sti
xchg
pcmpeqw
lock
jne
mov
xor
xchg
into
cmp
mov
gs
xor
xor
gs
xchg
test
ds
test
add
inc
loop
xchg
sub
jmp
and
orl
xchg
pop
adc
mov
push
aas
les
out
insl
aad
add
mov
xchg
movsl
xchg
pushf
push
xchg
pop
mov
orb
adc
cmpsb
fisttpll
mov
out
jo
mov
jge
mov
dec
fisttpl
jno
pop
mov
mov
fisttpll
mov
inc
mov
add
jg
push
lret
inc
and
xchg
lret
or
push
daa
lcall
dec
jle
fwait
into
cmp
pop
scas
mov
ss
inc
mov
xchg
rcr
add
imul
hlt
jmp
dec
or
repnz
repnz
arpl
enter
xor
sub
dec
mov
xchg
ret
repz
mov
test
and
dec
std
jo
xchg
rcrb
rorl
push
bound
mov
loope
out
jo
push
cmpl
sub
movsb
sbb
mov
mov
js
dec
mov
mov
or
cmp
aad
xor
mov
dec
or
stos
push
jg
inc
xchg
xor
mov
push
and
add
mov
and
jne
xchg
jge
and
subl
push
mov
cmpl
bound
fbstp
gs
xor
push
loope
out
js
aas
mov
incl
mov
cmp
or
iret
cmp
mov
es
cmp
inc
inc
popa
mov
mov
push
lods
fistpl
insb
xchg
xchg
out
jge
pusha
aad
adc
lret
sbb
xchg
popl
mov
dec
ljmp
adc
mov
xchg
in
add
xor
mov
mov
in
mov
cmp
jmp
inc
rcrl
inc
xchg
jnp
jb
icebp
mov
or
ss
pop
ss
mov
mov
mov
push
push
push
aad
cmp
xor
jne
sbb
out
and
data16
mov
aas
add
das
xor
movsb
sub
cmp
mov
mov
btl
mov
stos
popa
sbb
sub
popa
jmp
or
ficompl
sbb
bswap
cmpsl
xchg
shrb
xlat
ljmp
in
sub
dec
int
das
test
mov
jo
push
mov
adc
arpl
sbb
ss
jle
hlt
add
add
dec
jp
lahf
sti
gs
xchg
cmp
mov
mov
jge
xchg
cli
ss
mov
pop
fwait
dec
jbe
xor
stc
fisubrs
repnz
subl
mov
outsb
cli
jo
lea
push
add
arpl
xchg
xor
jb
pop
cmp
mov
lret
xchg
ficoms
mov
xchg
and
jnp
pop
pushf
mov
fbld
or
or
repnz
or
xchg
push
jb
jg
clc
test
mov
adc
daa
lock
jo
push
cld
fstp
mov
mov
js
mov
xchg
pop
sub
test
jge
inc
ljmp
lret
popa
repnz
mov
fstps
pop
pop
inc
xor
je
and
jl
aad
test
or
jno
das
fildl
mov
pop
pop
xor
mov
ljmp
loopne
out
out
daa
imul
xchg
xchg
pop
js
mov
xor
rcll
mov
mov
test
mov
out
cmp
int3
and
into
push
dec
inc
sbb
cmp
sub
mov
push
ja
mov
int3
jp
inc
jno
mov
sub
out
add
cmp
out
pop
in
lods
js
push
aaa
mov
mov
and
aam
roll
mov
cmpsl
inc
jecxz
xorl
insb
cmp
and
mov
inc
rep
and
lods
cmc
rcr
inc
mov
dec
imul
or
dec
or
sub
in
sbb
in
loopne
lret
mov
sub
pop
or
sbbb
fsubs
cmpsl
call
lods
mov
sub
lret
je
out
mov
dec
inc
add
inc
fsubl
lods
iret
call
cmpsl
sbb
jo
out
jg
scas
ds
mov
clc
jg
dec
loopne
push
popf
or
popa
inc
out
pop
add
shrb
sarl
lahf
fcmovbe
sub
sbb
je
push
dec
jmp
sbb
dec
jge
jmp
xor
je
stos
and
pop
sahf
ss
dec
rclb
mov
cmp
sub
pop
rcrl
push
rol
push
sbbl
mov
mov
cmp
sbb
data16
push
or
jecxz
add
jns
cmp
add
cli
mov
pop
jmp
repnz
pop
outsl
daa
sub
in
jo
mov
scas
push
inc
mov
push
int3
pop
add
jp
out
mov
xchg
stos
push
cmp
fldenv
stc
sbb
mov
dec
daa
mov
scas
sub
mov
or
out
sti
out
pop
stos
dec
in
mov
jo
pop
sbb
jl
clc
cmp
adc
sti
push
ljmp
in
lods
ret
add
xchg
jecxz
arpl
addr16
mov
inc
sub
das
pushf
mov
add
and
xor
add
mov
cltd
aad
lods
leave
dec
outsl
cmc
mov
insl
jne
cmp
pop
sbb
cmp
and
inc
mov
popa
loope
popa
or
test
or
sbb
jbe
mov
scas
rclb
ja
neg
aas
push
jne
cmc
daa
shlb
les
dec
lods
test
add
push
push
sub
jge
jbe
popa
imul
jge
sti
push
inc
je
xchg
inc
outsl
insb
inc
adc
mov
das
mov
inc
out
jle
movb
mov
aaa
in
xchg
push
xchg
sub
adc
mov
imul
int3
adc
lret
xchg
adc
xchg
adc
push
xor
pop
jle
push
sbb
stos
mov
stc
mov
dec
pushf
sti
cmp
xor
loop
pop
adcl
add
mov
pop
mov
roll
mov
cmp
lret
xchg
movsb
inc
add
ljmp
and
inc
mov
lds
add
pusha
push
imul
and
into
pop
popf
xchg
cmp
push
add
andb
out
inc
xchg
fdivr
cmc
cld
adc
cmpsl
aas
gs
imull
outsb
mov
adc
ret
jecxz
mov
pop
daa
sub
push
cwtl
rcrb
fnstcw
rorb
mov
pop
test
sbb
hlt
jo
push
insb
mov
sbb
lds
mov
push
fisubs
mov
test
adc
cmp
pop
mov
mov
popf
data16
pop
data16
push
cmp
cmc
test
test
ljmp
rcrl
popa
in
adc
cmp
push
cmp
sbb
mov
rcrb
test
pop
repnz
fisubs
testb
iret
mov
sbb
xchg
ja
mov
fucomip
add
icebp
in
popa
pop
fisubrl
int
jae
cli
lahf
sub
xlat
cmp
sub
dec
and
int
adc
ja
sbb
push
lds
add
in
adc
jl
pop
add
mov
mov
ret
inc
jmp
inc
jle
ds
dec
or
mov
insb
inc
jnp
jge
je
xchg
popa
addps
mov
gs
push
lret
pop
pop
pop
fsubr
cmp
hlt
mov
mov
insl
xchg
and
int3
or
loopne
movsb
in
jl
mov
out
jle
in
fiadds
adcl
scas
gs
shll
adcl
jno
dec
bound
adc
test
nop
add
mov
jmp
insb
push
into
lahf
lods
int
loope
jmp
mov
outsb
and
dec
xorb
jecxz
dec
xchg
movsl
idivl
and
inc
stos
lcall
and
fiadds
sbb
adcb
add
test
cmp
pop
sub
gs
cmp
imul
xor
jns
test
sub
hlt
rcll
cmp
idivl
loope
test
std
sub
inc
cmp
pop
jns
add
mov
xchg
out
and
xchg
std
sti
ja
xor
dec
cmp
bound
xchg
mov
pop
cmp
bound
imul
adc
pop
rol
rolb
mov
daa
iret
add
addr16
inc
xchg
out
mov
add
jmp
repnz
idivl
insb
sbb
xchg
ret
leave
out
jg
cmp
and
add
sub
push
sbb
out
mov
aas
fldt
movsl
jle
fs
aaa
shrb
adc
and
mov
cmp
ljmp
bswap
outsl
addr16
mov
xor
cmp
int
pop
xchg
cmpsb
sarb
inc
jns
pop
test
mov
mov
ficomps
popf
aas
pusha
sbb
test
push
mov
dec
and
adc
ds
stc
pop
popl
xchg
repz
call
loop
aam
notb
cltd
push
xchg
in
pop
jg
inc
fs
mov
in
adcl
mov
jbe
jmp
push
pushf
pop
xor
pop
mov
or
mov
push
mov
cmp
mov
push
jecxz
push
push
lock
imulb
push
push
push
call
mov
bound
aaa
push
mov
stc
cmpsl
cwtl
shl
iret
jae
aam
loop
ja
ljmp
imul
pop
push
sbb
daa
add
push
mov
dec
repz
cmp
mov
xchg
or
mov
popf
push
jecxz
sub
in
cltd
addr16
imul
ret
sbb
sbb
leave
mov
inc
and
inc
dec
repnz
shrl
icebp
or
inc
je
cmc
lahf
push
rorl
enter
pusha
outsl
cmp
sbb
mov
xor
jle
hlt
jg
or
das
stc
xchg
jge
xchg
pop
xor
or
add
repnz
cmp
sbb
stos
mov
repnz
push
xor
adc
mov
out
xor
dec
xchg
jle
out
add
out
pop
or
enter
rcll
inc
shlb
cmc
cltd
add
sti
stos
push
mov
pop
lods
fld1
add
dec
inc
mov
test
mov
cmp
hlt
pop
enter
insb
jl
inc
insb
xchg
add
sub
mov
pop
sahf
repz
mov
ja
xor
cmp
add
stos
ret
call
xchg
jl
ret
pop
pusha
add
xchg
adc
jo
jbe
sti
adc
dec
push
into
sub
or
lret
pop
or
cmp
test
jle
lock
aaa
stos
xchg
test
adc
xor
data16
cmp
or
call
xchg
rcl
enter
xor
push
aaa
jae
xchg
das
push
ljmp
adc
pushf
xchg
mov
andb
gs
imul
shll
jbe
xchg
jbe
dec
mov
jno
or
mov
imul
aaa
sar
test
out
cmp
mov
pop
mov
insb
sti
or
pop
or
xchg
xor
pop
scas
add
sbb
inc
ret
popf
xor
fidivs
cmc
mov
mov
pop
cmpsl
inc
out
and
leave
rcrb
add
add
push
vdivpd
sub
leave
fidivl
inc
mov
lods
or
cmp
mov
cld
shlb
pop
inc
jbe
daa
repnz
jmp
js
jmp
in
scas
js
sub
orb
test
jo
push
sbb
mov
testb
xor
loope
rclb
loop
sub
fiadds
fwait
inc
mov
mov
push
mov
clc
xchg
repnz
fcmovne
fbstp
or
sar
divb
push
cs
jns
in
pushf
fdivrs
or
jno
fdivs
push
mov
mov
out
test
dec
add
outsl
fs
and
in
mov
negl
sub
xor
dec
sub
shl
mov
mov
push
pop
cli
mov
cmc
jg
mov
mov
xchg
cmpsl
jecxz
add
cmpsb
movsb
and
pop
shlb
cmpsb
pop
xchg
fidivs
xchg
ret
ljmp
testl
adc
popf
les
mov
xchg
bound
jbe
inc
sub
icebp
cwtl
add
inc
jl
aas
push
add
cmp
into
inc
jns
into
dec
ljmp
mov
dec
jo
pop
arpl
fsubrp
inc
xor
and
cwtl
loope
mov
rorl
and
mov
test
jne
cwtl
aad
jmp
and
add
fdivrp
cmp
stos
ret
push
mov
inc
pop
xor
cwtl
in
jnp
sub
add
push
inc
sub
sub
dec
or
jno
dec
xlat
xchg
xor
push
push
fdivrs
lretw
mov
cmp
jecxz
leave
imul
imull
cmp
subl
rcrb
loope
sub
mov
sbb
jmp
test
push
test
cmpsl
adc
mov
mov
imul
ds
dec
cmpsl
movsb
xchg
clc
push
pusha
add
ds
inc
fnstsw
pop
push
shlb
cmp
icebp
sbb
iret
mov
jno
out
popa
je
mov
sub
int
or
aad
addl
sbb
sub
out
push
and
lcall
outsl
lahf
xlat
dec
cmp
xchg
arpl
dec
ret
add
cli
mov
in
mov
out
jne
sbb
pop
mov
fwait
aaa
mov
cmp
and
pop
pminub
mov
add
lods
push
xor
imul
dec
fdivrl
mov
mov
and
ljmp
sub
stc
adc
repnz
pop
pop
lock
cmp
loop
clc
stos
or
int3
pop
stc
cmp
insl
aad
xlat
sbb
sub
push
popf
popa
mulb
pop
enter
mov
mov
or
mov
cmp
pop
jae
jg
xchg
pushf
pop
outsl
mov
and
push
hlt
sarb
std
lret
out
call
nop
test
jle
pop
movsl
and
push
push
iret
lock
ficompl
les
js
xor
mov
pusha
push
ret
mov
nop
pop
mov
movsb
sti
popa
fcoms
inc
cmp
lcall
loope
push
mov
test
stos
loopne
lock
cmp
or
sahf
jb
dec
push
jb
inc
adc
push
fidivl
in
outsb
inc
pusha
sub
jns
inc
mov
mov
or
fisubrs
push
jns
push
sub
cmpsl
popf
mov
and
loopne
mov
test
jbe
push
xchg
dec
in
popf
divb
hlt
sbb
xor
cmp
adc
aad
cmpb
pop
jle
bound
pcmpeqb
call
stos
nop
mov
and
push
cli
movsl
inc
xchg
sti
mov
add
in
test
sub
sbb
pushl
daa
cmpsl
xor
in
sub
inc
add
fistl
add
out
loop
xor
test
push
scas
ret
push
in
das
jne
sbb
push
cmpsl
sub
lds
pop
in
pop
sbbb
rcll
dec
nop
mov
ret
push
sub
das
adc
cltd
fld
push
sbb
xchg
mov
mov
mov
mov
xchg
jae
imul
fbld
cmp
cmpsb
hlt
sub
mov
popa
xchg
mov
cltd
leave
fcmovbe
outsb
aas
je
xchg
pop
das
xchg
xchg
add
icebp
fdivs
mov
sub
xor
incb
dec
and
sbb
mov
mov
lret
test
insb
mov
push
outsb
fildl
cmp
pop
xlat
mov
test
dec
xchg
cs
jo
xor
dec
cli
adc
bound
lods
fsubrs
pop
and
sbb
hlt
sub
je
inc
sub
in
fcmovu
xor
mov
aaa
sbb
loope
jbe
popl
orl
sub
xchg
pop
add
sbb
inc
pop
mov
xor
and
dec
mov
sti
je
jbe
mov
push
stos
outsl
mov
std
lods
xor
pop
and
or
sbb
mov
iret
sub
gs
arpl
push
ret
repz
scas
pop
gs
loopne
rcrl
mov
orb
pop
lret
and
out
ficoms
test
pushf
mov
cmp
xor
add
adc
push
test
fimuls
sarl
vmovss
adc
mov
mov
ss
sub
inc
cs
fsubrl
or
fldl
push
jg
rorl
pop
lea
add
divl
pop
scas
or
or
sbb
mov
sbb
pop
xchg
dec
sarb
sub
dec
mov
mov
xchg
mov
ret
int3
lcall
xor
fidivrs
mov
clc
dec
push
cwtl
lods
lods
mov
adc
inc
lea
stos
nop
mov
ss
mov
jl
mov
pop
xor
sbb
ret
test
inc
pop
into
lds
pushf
addr16
pop
add
sub
rcrl
and
loopne
add
cmp
sub
pop
mov
lods
cmc
lods
pop
push
add
js
adcl
ss
and
mov
pop
cli
pop
add
fldl
ds
add
cmp
loop
lahf
xor
add
test
jb
or
pop
mov
mov
jle
inc
insb
or
or
mov
jnp
jae
add
cs
xchg
sub
pusha
add
cld
mov
xchg
movsb
push
stc
inc
out
inc
mov
arpl
cmp
sbb
daa
jl
push
fcomps
lret
xor
pop
lahf
pop
sub
push
pop
sub
jo
das
jge
adc
cmpsb
add
cmp
cld
and
xchg
nop
pop
ret
in
xchg
addb
es
dec
mov
mov
sahf
in
push
negb
scas
ret
xchg
xor
xor
imulb
shll
inc
pop
xchg
sbb
adc
js
sub
pop
mov
pop
dec
out
addl
int3
stos
pop
test
jno
and
jp
hlt
inc
cli
test
test
sbb
dec
pop
aaa
lea
add
cmc
push
out
repz
xor
sub
cwtl
ret
push
xchg
jle
ret
mov
xchg
mov
inc
fstpt
fsub
ja
xchg
or
scas
jae
cmp
out
cmp
mov
cwtl
jne
lods
jnp
xor
mov
sbb
dec
push
jo
add
and
push
jmp
adc
out
bound
xchg
test
or
leave
xchg
les
xchg
cmpsb
jmp
sub
movsb
sbb
xlat
cltd
cmc
nop
push
rorl
mov
lea
mov
xchg
pop
mov
inc
adc
dec
cmpb
stos
dec
xchg
mov
insl
cmc
mov
icebp
mov
mov
out
iret
push
jp
arpl
lret
xchg
mov
out
in
push
pop
rcll
add
in
insb
pop
in
aam
sbb
pop
cmpsl
mov
leave
adc
xlat
aaa
fucomp
xchg
dec
pop
dec
outsl
inc
adc
push
xor
cltd
mov
call
sbb
dec
js
dec
gs
andl
imul
cs
mov
jmp
fdivrl
pusha
daa
pop
mov
adc
pop
mov
fcmovnb
jmp
xor
sub
into
push
outsl
testl
xchg
mov
adc
mov
jbe
mov
push
cmp
sbbb
jmp
arpl
mov
scas
sub
add
aas
stos
sub
lret
div
bound
pop
shrl
inc
scas
mov
sbb
xchg
inc
mov
inc
or
and
mov
lret
dec
out
out
and
dec
ljmp
stos
cmp
insb
pop
push
xor
fbld
add
jg
dec
pushf
sub
arpl
in
insl
add
movb
and
sub
aad
or
mov
sub
lcall
mov
rorb
lock
xrelease
iret
push
push
scas
addr16
cmc
xchg
or
clc
and
jl
push
mov
notb
xchg
mov
loope
cmpsb
add
mov
notb
cld
repz
mov
xchg
mov
jne
and
jge
mov
stc
sti
scas
arpl
jle
call
mov
iret
rcl
repnz
daa
arpl
mov
shll
scas
jbe
cmp
sbb
ds
xor
loop
bound
or
rolb
stos
test
or
mov
frstor
sbb
int
daa
cmpsl
movsb
jno
enter
sub
cmp
add
and
push
aas
jnp
xchg
jno
pop
and
jne
inc
add
aaa
jmp
mov
clc
cltd
lods
xor
jp
inc
cs
mov
decl
shrl
dec
inc
dec
pop
nop
and
jne
push
shlb
jle
sar
mov
mov
es
push
xor
and
add
sbb
mov
fwait
out
cmp
test
pop
or
mov
rorb
inc
and
dec
subl
iret
data16
jb
mov
popf
mov
pop
jmp
std
mov
xor
mov
ss
fbstp
sbb
shrl
fidivl
jp
inc
addr16
sbbl
jl
inc
int
or
sub
push
std
cmp
adc
inc
mov
popf
mov
cwtl
add
cmp
sub
cmp
or
sti
and
shlb
int3
dec
push
mov
cwtl
hlt
test
pop
imul
xorl
mov
and
inc
xchg
enter
jge
sbb
push
and
push
cmp
pmuludq
fnsave
pop
xchg
scas
adcl
lcall
out
loope
xchg
les
rcrb
dec
or
ret
push
mov
jmp
fadds
dec
insl
or
mov
ja
cmp
dec
out
cmc
push
xor
inc
sub
push
xchg
xchg
notb
jb
pop
test
mov
imul
mov
out
inc
mov
inc
outsb
xor
push
out
scas
cmc
jg
popf
rclb
clc
imull
sbb
add
int3
arpl
inc
out
jae
push
movsb
inc
xchg
push
test
jno
jnp
stos
jne
es
std
ret
ret
movsl
aas
bound
popa
pop
xchg
out
lds
or
pop
sahf
inc
fcom
xchg
das
faddl
leave
add
xchg
cmc
cmpb
gs
in
mov
mov
out
pop
in
pop
xor
jb
cmp
shr
dec
jno
test
shr
pop
cmp
sbb
sub
js
fmull
mov
xor
cmp
adc
pop
lcall
xchg
lcall
add
add
addr16
jbe
or
cmpsl
insb
fidivrl
mov
jmp
push
sarb
dec
outsl
push
aas
ss
lods
negb
sti
std
xchg
std
dec
pop
inc
loop
pushf
pop
mov
or
imul
divb
stos
push
mov
mov
or
in
dec
sbb
mov
frndint
repnz
lds
mov
jmp
or
push
mov
psubb
mov
xlat
mov
add
shll
xchg
test
andb
test
in
push
cld
ret
adc
jge
repnz
fstpt
repz
test
and
scas
in
lock
insl
or
and
das
and
bound
sbb
xorb
xchg
jle
mov
jnp
rcl
mov
push
add
ret
ss
subl
insl
cli
lock
mov
inc
pop
imul
xor
js
pop
movsb
adcl
sbb
inc
clc
ficompl
cs
addr16
out
or
cmp
bound
pop
sub
adc
in
sub
hlt
sub
adc
fsubrp
push
push
sbb
fwait
iret
push
mov
inc
sbb
pushl
ret
cltd
add
or
jle
hlt
mov
jb
insb
fldl2t
fwait
xchg
out
aam
test
das
sbb
push
dec
add
dec
pop
and
in
add
dec
clc
outsl
jbe
adc
lock
mov
loopne
sbb
mov
movsb
cli
push
xor
imull
push
in
mov
cmpsb
gs
push
fmulp
pop
addr16
insl
arpl
sbb
sti
insl
adc
in
push
pop
cmpsb
cmp
shl
and
xchg
push
pop
push
imul
pusha
call
xorb
imul
call
push
out
gs
int3
mov
mov
sub
push
icebp
lcall
add
lcall
in
cmp
mov
pop
sbb
out
add
test
pop
pop
mov
push
sub
xor
dec
popa
or
push
mulb
add
xchg
cmc
dec
in
pop
sbb
mov
dec
js
inc
sub
pop
or
push
jns
repnz
dec
int
jg,pn
insb
jecxz
adc
pop
mov
orl
mov
aam
xchg
mov
cmp
adc
test
xchg
lods
mov
adc
and
ss
sub
fwait
rorb
mov
cs
jl
xchg
add
in
movsl
fcompl
mov
dec
mov
adc
mov
lock
push
insl
and
imul
fbld
sar
cmpsl
xlat
lret
pop
and
or
push
imul
scas
jecxz
and
std
neg
xchg
repnz
out
ljmp
mov
jns
mov
and
cmpsb
xor
je
into
adc
cmp
mov
in
scas
stc
xchg
addb
sbb
test
ss
loopne
ficoml
fidivrs
lcall
xchg
loope
mov
mov
jg
cmp
imul
adc
xchg
je
fnstsw
inc
pop
test
inc
pop
cmp
xlat
add
imull
adc
loope
rcrl
xchg
nop
cs
xor
jbe
test
aam
hlt
pop
pusha
sub
sahf
mov
adc
cmp
jle
fwait
sub
inc
push
inc
pop
stc
jmp
pop
loopne
fwait
and
mov
inc
inc
mov
jecxz
pop
ja
push
cmp
bound
cld
repz
popa
mov
mov
testl
xchg
adc
pop
sahf
xor
out
stc
stos
jle
lods
out
outsb
dec
sbb
pop
mov
inc
int3
or
xor
out
mov
dec
stos
std
jmp
or
lods
dec
cmp
repz
pop
push
sahf
pop
cmp
in
pop
movsb
fwait
lds
xor
and
sbb
lock
adc
jbe
pushf
data16
lods
bound
mov
push
rclb
fmuls
adc
mov
sbb
int
pop
push
inc
nop
and
cmp
cmp
lods
imul
mov
sub
add
mov
add
jl
nop
xorb
negl
xorl
outsb
mov
push
insl
movsb
push
add
icebp
add
push
add
shlb
xchg
loop
mov
sub
cmp
loopne
mov
in
iret
push
xchg
sarl
fdivp
nop
out
popa
mov
mov
jno
lods
mov
mov
out
aam
adc
stc
xor
push
pop
aad
mov
cmp
sbb
ljmp
jg
orb
inc
xor
fsubl
pop
dec
int
dec
push
std
mov
repz
and
fcompl
mov
add
out
lahf
mov
cmc
pusha
jg,pn
sub
adc
popw
mov
dec
aas
inc
cwtl
aaa
stos
jns
adc
cmp
cmp
pop
dec
inc
hlt
icebp
adc
cmp
pop
lods
int
adc
ss
outsl
fnstcw
fs
sbb
xchg
lea
pop
sub
or
adc
shlb
sub
movsb
inc
bts
push
push
sub
push
dec
add
push
outsb
movsl
mov
xchg
mov
inc
sub
sbb
or
cld
xchg
or
pushf
jns
movsb
fildl
xor
cltd
xchg
sub
sti
daa
fldt
jbe
cli
stos
jge
shll
mov
jbe
mov
stos
lcall
lds
ficomps
push
loopne
cmp
roll
ljmp
hlt
add
data16
test
lret
and
or
testl
sub
mov
fdivrl
jae
dec
cmpsl
shr
push
dec
pop
aas
mov
push
mov
mov
scas
dec
sbb
pushf
cmp
nop
rclb
push
sbb
pop
fnstsw
pop
dec
sahf
popf
pop
xor
pop
shlb
shlb
sub
hlt
scas
jge
leave
push
int3
mov
inc
lods
sbb
bound
ljmp
adc
and
ja
adc
pop
jp
dec
jmp
rol
mov
aam
enter
sbb
es
jb
and
negl
cmpb
xchg
je
insl
ret
cmc
dec
mov
cmpsb
ret
cmp
aam
add
mov
lret
arpl
shr
lret
xor
jb
push
push
dec
aas
fisttpl
lahf
outsl
jns
jp
xor
or
inc
sbb
mov
iret
movsl
aaa
xchg
out
mov
out
cwtl
or
mov
pop
call
push
pop
outsb
inc
xorb
lcall
cld
loopne
loop
lds
cmpsb
dec
popa
pop
repnz
sbb
jnp
in
test
repnz
jnp
mov
addb
out
inc
in
ljmp
aad
dec
ds
sub
pop
or
push
das
sti
inc
cmp
inc
add
add
test
xchg
push
mov
jnp
test
clc
mov
xchg
cmp
lret
into
leave
sub
inc
push
ljmp
or
pop
insb
add
dec
aad
mov
lods
or
in
aaa
arpl
mov
ret
in
repnz
nop
dec
jg
jnp
movsl
mov
data16
pop
out
jecxz
and
and
mov
sub
lea
loope
jecxz
call
outsl
add
in
pop
sbb
aaa
push
inc
xor
jbe
mov
sbb
ds
ss
pop
cld
mov
loope
xchg
data16
add
pop
ret
inc
lret
inc
mov
movsb
orb
dec
popa
adc
jns
dec
in
lods
dec
or
dec
push
jne
lock
mov
jecxz
shlb
adc
arpl
mov
iret
inc
and
add
lcall
xchg
cwtl
or
jp
jae
jle
notb
imul
inc
out
pop
leave
loopne
dec
scas
pop
push
inc
mov
or
in
fidivrs
cmpsl
cmp
enter
dec
hlt
xor
mov
or
mov
stos
test
sti
sbb
mov
mov
adc
test
or
jl
in
push
loope
popa
addl
ds
push
adc
out
loopne
fcmovu
or
pusha
aas
scas
es
loopne
mov
mov
cmp
addl
and
ror
pusha
pushl
icebp
in
push
fsubrs
and
test
xor
rclb
cmpsb
inc
out
ffree
and
ljmp
jge
sbb
imul
shlb
mov
push
lds
fdivrs
and
lret
shlb
mov
lea
jns
packssdw
aad
xchg
or
loopne
pop
daa
add
or
pop
xchg
mov
dec
cmp
mov
cmpl
adc
cmp
je
cli
cmp
out
lcall
les
ljmp
icebp
leave
pop
add
scas
sbb
sbb
push
inc
sub
inc
pushl
sahf
and
shrl
test
cmpl
dec
pop
inc
mov
dec
out
out
les
push
cmp
ljmp
xchg
adc
cmpsb
jo
stos
inc
repnz
into
jno
sbb
pop
jmp
inc
lret
mov
lods
add
rcl
inc
popa
popl
icebp
cmpsb
shr
int3
sbb
popf
mov
mov
and
push
iret
mov
cmp
int3
andb
adc
idivl
hlt
test
mov
xor
jmp
nop
xlat
js
sbb
imul
call
jbe
out
ret
imul
jge
into
test
adc
jle
pop
inc
jle
int3
jo
and
or
add
dec
inc
xor
xor
mov
daa
lods
sbb
scas
in
xchg
stos
fistps
mov
icebp
and
xor
int
lret
mulb
rcr
sbb
roll
dec
loope
xchg
jmp
xor
dec
sbb
sbb
sbb
mov
repnz
jmp
nop
iret
gs
pop
fildll
outsl
or
mov
push
mov
fidivs
adc
mov
btc
sahf
pop
add
call
xor
cmp
pxor
jo
fs
repz
pop
movsl
mov
fimull
fsubs
cmp
or
mov
lock
add
sub
jo
jnp
aad
lret
and
push
add
push
insb
dec
dec
loop
add
push
aad
repnz
jp
push
gs
inc
out
xor
mov
mov
jo
mov
test
repnz
scas
mov
lcall
adc
daa
loope
ss
mov
add
cltd
mov
test
or
sub
mov
insb
mov
into
aad
cmp
inc
pop
pusha
mov
xchg
or
loope
fidivrs
jno
jns
push
jmp
ljmp
arpl
call
out
sbb
mov
jg
xor
push
shlb
call
leave
in
and
cmpsb
and
add
xchg
loopne
dec
js
out
cmp
mov
mov
sbb
rcr
out
add
jp
push
lea
sbb
xchg
jb
mov
fwait
push
pushf
xchg
xchg
mov
xchg
or
pop
int3
cs
pusha
push
inc
je
push
jno
jge
pop
mov
jbe
cmc
xchg
call
dec
sbb
sbb
add
mov
add
pop
or
adc
rorb
fistpl
out
pop
fiadds
xchg
aas
dec
popl
cmp
movsb
inc
add
jns
push
sbb
movsl
pusha
enter
dec
shl
mov
xchg
sub
sbb
mov
fimuls
mov
mov
leave
imul
nop
daa
jg
xchg
pop
xor
jne
pop
das
cmpsb
or
sub
fwait
cmp
imul
popa
loope
push
mov
lock
xor
dec
imul
mov
inc
mov
push
into
inc
js
hlt
lahf
dec
or
in
xchg
jmp
ljmp
out
daa
sarl
xor
adc
pop
ret
and
inc
xor
xlat
test
mov
stos
mov
or
jno
push
ja
fld
jp
push
int3
sbb
and
stos
or
scas
dec
paddusb
adc
fdivr
jg
std
lret
mov
repz
sahf
push
repz
mov
jo
mov
les
and
ds
daa
stos
popa
stos
shll
aam
rcll
mov
dec
jne
dec
mov
mov
aad
repz
mov
dec
dec
jle
fadd
out
push
outsl
daa
mov
cmc
icebp
sbb
lret
imul
xchg
movsb
dec
and
mov
rorl
arpl
iret
test
jg
mov
dec
add
dec
outsb
outsl
pop
das
nop
sub
movl
mov
pop
cmp
icebp
loop
enter
or
adcl
stos
mov
pop
cmp
int
mov
sahf
xchg
add
in
in
loope
enter
pop
fsubrp
inc
stos
mov
dec
shl
push
lahf
js
clc
sarl
arpl
jge
dec
add
jp
inc
pop
pop
mov
jb
rclb
sub
adc
inc
data16
and
sub
and
into
rcll
inc
arpl
ret
cli
lahf
push
adc
xchg
cli
inc
lods
mov
jnp
lret
stc
mov
pushf
gs
aam
test
mov
lea
mov
jmp
repz
scas
xchg
insb
lock
inc
jge
mov
adc
xor
xchg
hlt
lods
fsubrl
inc
sti
xor
sti
insb
popf
test
ret
mov
xor
dec
and
popa
jp
mov
insb
jg
daa
xchg
cmp
mov
pop
int
xchg
and
gs
push
adc
xor
lds
adc
imulb
jge
mov
test
jnp
cmp
notb
mov
ljmp
push
mov
aaa
leave
pop
mov
insb
jge
mov
mov
mov
xchg
add
xor
jb
pushf
cmp
mov
add
mov
pop
addr16
cmp
adc
xchg
xchg
cltd
xchg
sti
sbbb
push
inc
pop
dec
push
xor
mov
mov
inc
dec
ffree
and
or
ficoms
pop
test
jae
inc
movb
or
cltd
testb
pop
hlt
jle
adc
cli
push
mov
sub
xchg
xor
cs
adc
jne
ret
push
popa
dec
in
sub
sub
daa
out
imul
mov
test
mov
mov
and
push
mov
adc
xor
out
lods
cmp
imul
in
pop
icebp
jle
stos
imul
dec
mov
sbb
loope
fidivs
sbb
test
xchg
add
or
jnp
into
dec
push
fidivl
outsb
rorl
push
pop
or
inc
mov
inc
addl
inc
es
fidivs
dec
lahf
and
jge
mov
fnstcw
pop
sub
cmpsb
cmp
jmp
test
icebp
cmp
adc
outsb
idivb
pop
cmc
fbld
out
or
cmp
and
outsb
push
pop
lds
ja
nop
subb
cli
pop
jbe
add
lret
imul
sub
mov
mov
shr
out
adc
add
jne
sbb
dec
cs
loope
sbb
into
negb
mov
pop
mov
fwait
dec
leave
mov
fcmovb
cmp
mov
imul
and
inc
fwait
mov
jle
movsb
test
add
fcompl
ret
xchg
jmp
out
mov
icebp
sub
xor
subb
dec
xor
pop
dec
add
loope
idivb
iret
out
and
rorb
pop
in
sbb
or
and
mov
sbb
inc
inc
cltd
lahf
dec
mov
cwtl
icebp
cmp
fiadds
push
stos
mov
lods
xchg
js
loopne
mov
mov
cmp
cmp
pop
inc
adc
xchg
jp
lods
and
cmp
xor
xor
fistpl
movsl
nop
je
rep
inc
fiaddl
cmc
das
aaa
xchg
call
inc
xor
pop
or
mov
test
inc
aas
popa
xchg
fcomps
imul
dec
xchg
and
mov
sbb
nop
fcomps
or
loope
arpl
mov
scas
aam
jno
or
xor
sti
int3
push
fxch
mov
pop
imull
mov
test
push
cwtl
icebp
les
or
outsb
xchg
fimuls
mov
lret
repz
mov
push
sbb
pop
cmp
roll
outsl
xlat
repnz
cmp
test
pop
mov
push
cmp
inc
mov
jae
mov
repz
or
lods
scas
xor
aas
pushw
sar
or
adc
jo
lds
and
sub
rol
repz
fwait
pusha
dec
mov
aad
mov
jmp
or
pop
push
push
jnp
mov
xchg
bound
iret
and
xchg
mov
lret
sub
les
pop
jb
clc
mov
sahf
test
fwait
xlat
js
enter
ds
mov
xlat
mov
dec
xchg
das
int
loope
outsb
pop
std
out
fwait
sbb
inc
cmp
xor
clc
mov
sbb
lods
dec
frstor
mov
mov
cmpsl
fidivrs
cmc
fistpl
dec
jp
xor
and
fwait
movsb
int
jle
or
je
pop
sub
sarl
push
inc
xor
adc
cmpsb
rclb
dec
aaa
mov
jb
rcrb
inc
lods
push
xor
xchg
xorl
push
and
stc
push
out
mov
xchg
jecxz
mov
fstps
cmp
lcall
das
loope
popf
fstpl
sub
sbb
sbb
out
xchg
pop
jb
xlat
xchg
mov
xor
inc
dec
cmp
mov
into
push
mov
fimuls
data16
test
leave
scas
xor
ret
lods
in
sub
lret
cmp
iret
movsb
fs
aaa
fcoms
sub
sar
inc
mov
movsl
or
add
aam
aas
sub
adc
movsbl
fstps
out
int3
popa
mov
sahf
adc
mov
cmp
mov
in
ja
adc
popf
sub
pushf
pop
adc
movsb
mov
sti
ljmp
and
movsl
aas
or
cmpsb
data16
adcl
into
rcr
pop
inc
dec
clc
pop
pop
outsb
sbb
push
mov
sbb
dec
pop
test
rcrb
mov
scas
and
sub
mov
sbb
pop
mov
stos
jnp
cmp
loopne
adc
repnz
xor
lahf
pushf
add
mov
mov
mov
push
inc
les
mov
movsb
jp
or
insb
jge
cs
ret
das
mov
popf
mov
jl
sarb
inc
push
dec
dec
movsb
xchg
scas
sub
decl
adc
imul
dec
mov
addr16
out
sub
or
js
aam
loop
imul
mov
neg
call
mov
mov
mov
or
sahf
call
xchg
in
sbbb
stos
test
cmc
loop
xchg
inc
aaa
push
dec
stos
cmp
add
and
mov
scas
jp
test
and
cmp
pusha
insb
fmul
add
ss
xchg
push
jae
xchg
jmp
subb
test
pop
roll
int
ja
xor
fidivrs
inc
lods
add
pop
mov
in
jnp
inc
push
xor
mov
inc
adc
std
mov
mov
in
movsb
and
rcr
pop
mov
pop
notb
rolb
lcall
hlt
push
arpl
ds
outsb
jle
negl
mov
or
aaa
push
loope
adc
cltd
xchg
or
jge
jne
cmp
mov
sbb
adc
and
xorl
repz
add
jmp
jbe
sub
sub
jp
push
aam
js
and
inc
ss
xchg
repnz
negb
inc
jmp
imul
jecxz
cmp
popf
cmpsb
pop
and
inc
in
xchg
sub
dec
mov
fwait
cmpl
stos
adc
shll
sbb
xchg
adc
cmp
sub
push
mov
xor
and
and
mov
subb
xor
lods
add
xor
outsl
adc
mov
js
xchg
lods
pop
fisubs
fisubs
mov
sarl
adc
sbb
cmp
mov
orl
les
or
and
test
lret
mov
ljmp
ljmp
or
push
cli
sbb
test
call
xchg
xchg
rcrl
lahf
nop
inc
push
jl
mov
xchg
sbb
or
mov
insl
lea
dec
inc
pop
sub
out
xchg
mov
jnp
sub
mov
cli
dec
jmp
and
xchg
sahf
pop
scas
and
adc
adc
inc
jge
mov
jmp
lcall
adc
imul
mov
fs
ret
mov
jbe
xor
movsl
dec
pop
fldenv
add
int3
cmp
mov
or
adc
add
push
xchg
push
mov
mov
add
inc
pop
aad
outsl
jmp
mov
out
pusha
ret
out
mov
cmp
mov
adc
pop
inc
inc
in
jmp
insb
push
dec
ret
push
mov
dec
out
sub
sub
into
xchg
xchg
mov
mov
mov
cmp
xchg
push
xchg
ds
add
xchg
fldcw
cmpsb
add
adc
cmp
mov
mov
nop
xor
cmp
cmp
leave
pushf
stos
mov
rolb
xchg
inc
cmp
test
shl
ds
cmpsl
sub
xor
hlt
in
clc
lret
mov
insl
in
lods
cltd
js
xor
subl
pop
adc
dec
jl
lret
mov
add
adc
pop
mov
jno
cld
sbb
mov
movsl
inc
insb
jnp
lret
das
stc
popf
adc
xchg
repz
sti
int
jno
xchg
out
cwtl
ja
lea
or
mov
ficoms
jl
aas
fsubrs
mov
pop
popa
add
into
push
cmp
inc
add
jbe
pop
gs
mov
repz
add
not
dec
mov
iret
adc
pop
fsubr
sub
in
out
ljmp
fisttpll
xor
pop
xor
pop
sub
fnstsw
jae
mov
adc
push
jne
xorl
and
fs
fs
punpckhdq
xor
sub
popf
jbe
sbb
jns
or
into
and
inc
cmp
test
xchg
mov
sub
ja
shlb
sarb
outsb
cwtl
xchg
mov
mov
aaa
sub
dec
aaa
rclb
sbb
in
jb
mov
add
push
or
sbb
sub
out
mov
lds
sbb
mov
daa
inc
sahf
jbe
mov
icebp
inc
cmp
call
rcrb
sub
dec
xchg
stos
jl
cwtl
jae
stc
out
out
sti
repz
mov
mov
jg
sbb
mov
jle
sbb
int3
ds
xor
or
pop
xor
sbb
inc
or
inc
push
push
jle
mov
cltd
push
or
int3
hlt
pop
mov
lahf
cmp
scas
jae
sarb
je
je
jmp
lcall
insb
fbstp
clc
pop
bound
mov
cmp
shrb
movsl
jle
sbb
cmp
push
push
cmp
cwtl
pop
sbb
xchg
or
imul
repnz
mov
or
mov
pop
mulps
jge
lahf
lock
sub
cli
je
xchg
out
in
cmp
mov
or
jo
cmp
loop
lea
scas
outsb
mov
icebp
out
cmp
mov
inc
adc
and
out
add
movsb
pop
inc
mov
out
addl
mov
sub
jno
fidivs
inc
push
sbb
jo
xor
mov
fsubrs
test
pop
sbb
jmp
inc
insb
mov
mov
or
push
rorl
dec
jl
test
stos
pushf
jmp
push
mov
jle
dec
mov
jl
mov
sub
or
cmpsb
rcrl
xlat
adc
movsb
sbb
iret
lds
dec
mov
cwtl
fwait
mov
jp
pop
adc
stc
pop
inc
jne
nop
xchg
sub
test
lahf
lret
jg
inc
sub
sub
out
pop
cmp
lock
mov
cmpsl
cmp
je
mov
jne
xchg
sbb
sub
xor
jno
jne
lods
adc
arpl
mov
insl
into
clc
inc
lahf
jo
aam
cmp
in
ds
iret
xchg
mov
repz
sbb
push
ds
sub
fistpl
test
jmp
mov
arpl
jae
les
aad
lds
cld
xchg
sbb
punpckldq
ja
cmpsb
mov
xor
inc
loopne
lea
dec
add
jns
mov
xchg
mov
bound
rcl
fucom
ljmp
jae
pop
inc
adc
cmp
ret
aaa
sub
pop
jge
sub
insb
dec
inc
lret
xor
aaa
mov
cltd
fmuls
incb
add
icebp
cmp
popf
lret
lret
or
mov
sbb
mov
loop
arpl
mov
mov
in
pop
inc
pop
imul
or
pop
in
clc
xchg
jecxz
cmp
mov
divb
sbb
nop
xor
xchg
mov
sbb
inc
and
clc
sub
adcl
sbb
fwait
xchg
mov
and
or
aad
ja
fstl
rcl
dec
in
jne
pop
cmp
sub
andb
addb
iret
xchg
cmp
mov
leave
push
test
cli
dec
xchg
xchg
sbb
sbb
lock
insl
dec
lret
adc
dec
movsl
dec
mov
cmp
movsl
or
pop
lcall
mov
incl
iret
call
cmp
jmp
repnz
push
xchg
mov
and
flds
sbb
pop
test
xor
jnp
jbe
gs
inc
push
in
mov
and
das
sub
scas
in
adc
and
dec
in
jno
and
insl
adc
or
pop
dec
pop
sbb
mov
mov
ljmp
mov
cli
popf
es
adc
cmp
push
out
hlt
cs
insl
add
sbb
fcmovb
ljmp
ret
fiaddl
or
cmc
incb
fwait
add
push
mov
insl
fwait
push
ret
stos
es
movsb
push
sbb
xor
nop
push
dec
test
insl
push
sbb
mov
lcall
adc
cmp
sbb
mov
mov
jle
cmp
mov
gs
mov
loope
push
or
mov
jmp
es
pop
scas
push
fldt
loope
xor
das
pushw
cmp
push
das
jno
cwtl
xchg
pop
sti
icebp
incl
leave
gs
ja
mov
out
jmp
push
push
jo
sub
jle
in
leave
int3
adc
jmp
xchg
jmp
jae
mov
jl
jns
dec
cmc
lret
mov
ss
xlat
call
or
pop
inc
and
leave
pushf
xchg
sbb
insb
mov
aad
cli
mov
mov
lds
adc
push
sub
outsb
xchg
jle
cs
sarl
fwait
sbb
xor
repz
adc
addr16
ljmp
mov
stos
or
addr16
sbb
pop
test
pop
jecxz
push
jg
popf
inc
lock
sub
cmpsl
popf
fimuls
in
mov
sub
les
cmp
lock
jmp
out
pop
jae
out
xor
in
push
cmp
inc
jmp
mov
push
test
mov
or
repz
xor
xchg
mov
fwait
jl
cmp
pop
das
out
cmp
jg
sub
andb
repnz
popf
ss
and
and
sbb
fadds
cmp
lock
mov
xchg
mov
mov
add
shr
insb
pusha
mov
adc
lock
add
ljmp
call
dec
push
cmp
adc
adc
cli
or
and
cmp
mov
xchg
jl
dec
repnz
lds
xchg
hlt
test
jmp
gs
clc
xlat
aas
nop
or
insl
stos
inc
in
outsl
aam
ror
notl
xor
sub
cld
or
dec
or
cmp
pop
xchg
jg
fwait
lret
and
out
add
mov
mov
test
stc
movb
cmpsb
push
inc
imul
xchg
mov
dec
les
ja
sti
fcomps
jle
insb
cltd
sbb
sahf
lret
dec
ret
incb
xchg
mov
out
mov
and
out
fidivrl
push
lret
ret
andb
in
mov
jne
je
vcomisd
sub
xchg
fists
leave
pop
mov
mov
rclb
fstps
sbb
adcb
adc
out
inc
pop
and
shl
sub
decb
test
movsb
mov
push
or
fwait
sub
add
jg
pop
sahf
jle
addb
test
sbbb
xchg
mov
es
fstpl
clc
es
lods
into
icebp
vpunpcklbw
jg
xchg
cli
jmp
fcmovnu
mov
in
in
mov
mov
push
xor
adc
lods
js
or
jmp
rcll
push
fmull
lods
aad
cmc
jns
cld
ljmp
bnd
xchg
popa
push
xor
jae
orl
mov
mov
int
insb
push
dec
mov
push
repnz
inc
clc
test
lret
dec
sbb
test
out
and
mov
xchg
pop
rorb
ret
mov
xchg
push
dec
adcl
dec
cmpsb
mov
inc
dec
popa
mov
sub
ss
out
mov
push
lcall
xchg
adc
fwait
and
adc
lea
push
cmpsl
ljmp
jo
aad
pop
push
mov
inc
jecxz
mov
jmp
mov
dec
std
data16
ret
add
lcall
notb
gs
cld
outsb
cmpsb
loope
icebp
mov
mov
jmp
test
dec
sub
imull
xlat
sub
scas
dec
sub
test
clc
pop
dec
imul
sahf
popf
pop
popf
mov
enter
xchg
mov
and
inc
xchg
jno
es
cwtl
stos
push
mulb
stc
ja
sub
mov
ss
int3
and
or
dec
loope
enter
mov
cs
nop
adc
popf
iret
repz
cmp
mov
iret
adc
mov
leave
sbb
jne
in
jnp
add
mov
xchg
andl
inc
pushf
adc
popf
sti
or
pop
mov
xor
jae
push
xor
lds
stc
lds
nop
fildl
mov
enter
imul
arpl
aad
lret
lret
dec
push
adc
fistps
dec
jno
cmp
in
xchg
add
gs
xor
jns
or
out
ret
lods
mov
cmp
mov
in
pop
and
sbb
das
test
jg
ja
imul
test
gs
fildl
dec
add
cmp
dec
fimuls
les
jb
sti
xor
mov
cmp
test
iret
leave
imul
idivb
and
xlat
xorb
adc
xchg
sarl
push
add
jno
mov
int
lret
mov
test
js
test
inc
cmovle
sub
sahf
pop
push
call
pop
xchg
jns
imul
cmpsb
add
test
push
push
es
sahf
in
jns
pop
outsb
mov
cltd
arpl
mov
xor
int
sbb
add
mov
fnsave
in
js
inc
ss
and
test
push
test
rorb
dec
inc
mov
xchg
cmpxchg
hlt
fbstp
jmp
into
ret
stc
imul
mov
cmp
pop
insb
and
add
adc
cmp
inc
fucomi
mov
pop
test
in
cmp
xchg
pop
and
and
add
add
lret
jnp
icebp
adc
push
subl
mov
mov
dec
or
push
mov
sub
rcl
and
lea
and
pushf
int3
adc
mull
scas
fstpl
test
shll
shll
pop
mov
das
pop
or
fnclex
push
dec
dec
mov
pop
mov
shl
sub
inc
in
hlt
add
insb
decb
xchg
and
fsts
imul
pop
pusha
push
mov
mov
adc
test
sub
fcmovnbe
mov
cmp
mov
pop
mov
gs
int3
je
fcoms
xor
jg
lea
lret
in
lock
dec
outsl
jp
adc
dec
hlt
or
mov
aad
lods
es
dec
stos
mov
popf
xor
xchg
int
jo
int
popa
dec
sub
jle
jg
int3
or
fidivrl
inc
into
xor
or
pusha
pop
stc
xchg
int3
sub
imul
mov
mov
jge
mov
pusha
dec
fs
inc
out
inc
fldcw
aas
push
pop
loop
aad
mov
loopne
mov
dec
call
test
sbb
xor
mov
outsl
jecxz
mov
fwait
push
icebp
adc
and
jnp
lahf
mov
dec
shlb
ja
xchg
mov
fidivrl
xchg
pop
sub
mov
hlt
mov
inc
nop
add
inc
add
jne
sbb
and
push
aad
shll
dec
or
push
movsl
int3
div
lahf
lahf
xlat
fs
cmp
jbe
out
sub
jnp
in
or
add
rcrb
adc
sbb
lock
mov
stos
insl
adc
ljmp
cld
cwtl
ljmp
push
movsb
jbe
jne
mov
add
jbe
jae
test
jle
loope
xor
add
sbb
lea
sbb
imul
jbe
stos
or
cmp
lods
in
jnp
sub
dec
push
dec
shrb
ret
jp
xor
or
mov
jns
jne
shlb
mov
and
push
push
pop
test
aas
sbb
orb
enter
adc
test
xchg
pop
mov
lods
dec
sub
or
icebp
pop
les
sbb
dec
imul
outsb
scas
in
adc
adc
pushl
xor
mov
fidivs
js
dec
es
xchg
inc
int3
inc
mov
adc
les
stos
mov
lea
sub
jne
ljmp
mov
mov
or
jo
movsl
xchg
sbb
cmpsl
mov
xchg
imul
lds
mov
sub
imulb
mov
loope
mov
outsb
insl
pop
push
push
add
shl
adc
in
call
loopne
sub
jae
negl
mov
frstor
jno
les
dec
lds
dec
cmp
mov
adc
cwtl
xchg
cmp
fcoml
clc
mov
data16
lods
dec
sub
mov
sbb
pop
or
repnz
into
dec
jo
fisttps
push
or
cs
rol
cmp
push
es
pop
lahf
cmpsb
and
call
and
push
xor
icebp
dec
push
pushf
and
loop
icebp
dec
in
mov
adc
pop
popa
adc
xor
mov
push
dec
in
hlt
mov
xchg
xchg
insl
jmp
sahf
mov
popf
sub
lret
dec
call
lret
adc
cmpsl
mov
aas
incl
negb
jle
push
loop
adc
ljmp
addr16
jecxz
add
push
lret
fsts
xor
rorb
shr
rorl
xchg
mov
mov
imull
pop
aaa
adc
in
dec
dec
xchg
test
ret
shll
stos
and
stc
in
jno
pop
xchg
paddb
mov
les
dec
mov
lret
ficomps
inc
sbb
lods
int
xchg
stos
clc
repz
jp
jbe
push
and
loopne
xor
mov
mov
inc
out
mov
mov
scas
inc
mov
test
add
sub
jb
adc
sbb
xchg
add
dec
out
xlat
lahf
inc
fxch
xor
std
xchg
jge
push
mov
inc
add
dec
loope
clc
lods
mov
stos
dec
aam
push
arpl
add
ffree
mov
sahf
stos
or
mov
cmc
hlt
jmp
add
adc
and
cltd
mov
xchg
shlb
mov
jle
outsb
andl
mov
std
and
adc
mov
mov
push
out
nop
and
fcom
leave
sub
push
xor
bound
icebp
pop
push
cmp
sti
in
mov
sub
ds
push
add
pop
icebp
pop
lods
cmp
mov
into
mov
sbb
leave
or
dec
mov
jp
push
push
sub
idivb
dec
rcll
sub
mov
repnz
xor
mov
imul
inc
mov
inc
pusha
imul
pop
ss
or
mov
out
aad
insb
jp
mov
movsb
xorb
fwait
cli
dec
add
test
mov
push
xchg
mov
mov
out
ss
cmp
in
xchg
xor
pop
loope
clc
in
xchg
xor
sub
enter
int
or
sbb
lods
scas
popa
mov
push
lock
jne
es
sahf
or
les
arpl
mov
sar
pop
and
push
ret
data16
push
push
push
out
test
mov
mov
inc
ret
push
adc
mov
push
adc
add
gs
loop
jg
add
aam
jle
sbb
lea
sub
lcall
push
inc
lds
push
daa
leave
in
xchg
and
cmp
leave
jg
sub
mov
sub
xchg
jbe
bound
leave
pusha
mov
sub
repnz
push
or
cmpsb
dec
js
ret
addr16
iret
push
loop
ljmp
lret
jnp
sbb
aaa
pop
pop
cld
inc
sub
data16
out
xchg
cmpsl
int
sti
add
sbb
add
inc
jg
nop
int
ds
adc
shlb
cmovne
pop
std
popf
jge
dec
mov
mov
dec
mov
or
push
mov
cmp
xchg
jo
or
or
xchg
call
push
push
popf
mov
dec
push
scas
sub
in
mov
hlt
xchg
adc
lcall
pop
mov
fs
push
push
pusha
lods
pop
jmp
xchg
jo
xor
divb
rcl
jl
and
jle
ja
cmp
xor
clc
fiaddl
or
add
add
and
lds
jnp
sbb
fbstp
ret
in
mov
mov
sub
jp
mov
or
stos
push
jns
imul
int3
xlat
adc
add
mov
dec
adc
push
ret
cmp
xchg
inc
std
pop
adc
fwait
xchg
pop
ficoms
mov
lea
mov
call
add
das
mov
fsubs
into
sub
push
xchg
add
outsb
jecxz
das
jmp
hlt
mov
cwtl
sbb
xor
add
xchg
dec
push
imul
hlt
jne
dec
loope
ficoml
es
out
inc
push
mov
mov
inc
mov
ja
xchg
mov
cmp
inc
jne
xchg
fstpl
add
test
mov
mov
outsl
es
dec
jmp
jge
adc
and
shr
xor
mov
fwait
xchg
and
mov
rcl
xchg
test
movsb
and
nop
jns
jno
imul
and
push
jmp
insb
ja
dec
ja
scas
push
jo
inc
sahf
in
add
and
cmp
push
dec
jl
pop
lods
mov
add
mov
pop
test
and
sahf
xor
sahf
pop
jnp
clc
loopne
jbe
mov
mov
dec
stos
cltd
shufps
or
loop
and
xchg
inc
ljmp
test
xchg
fnstcw
inc
pushf
in
add
je
ret
outsl
lock
dec
out
inc
repz
jnp
add
cmp
repz
mov
decb
ds
rcll
insl
je
daa
dec
jmp
sub
bound
sub
pop
inc
add
and
data16
in
ss
dec
shlb
loop
sbb
dec
pop
jo
imul
sub
dec
jo
add
mov
call
divb
pop
mov
inc
call
rclb
dec
cli
cmp
dec
add
jbe
iret
mov
stc
jecxz
xor
repnz
adc
xchg
jae
call
cwtl
push
cmc
mov
pop
dec
xlat
fcmovne
jno
pop
enter
jecxz
inc
pop
js
aad
das
mov
push
fisttpl
popa
xchg
shl
and
stos
lret
rorb
shl
xchg
cld
call
imul
mov
jo
vmulsd
repnz
call
fs
mov
lret
sbb
ja
sbb
stc
or
clc
xor
pop
fwait
sub
cmp
sub
incl
dec
sahf
jmp
mov
sub
jg
lret
push
mov
jg
out
out
ss
stc
out
xchg
aaa
out
sub
jb
jb
dec
dec
lods
mov
fcmovne
sub
sub
mov
xor
pop
bnd
add
mov
mov
mov
into
xchg
mov
addr16
add
scas
test
push
jmp
enter
mov
rcl
xchg
jae
out
inc
ja
jmp
and
pop
lock
pop
pop
or
out
out
pop
sub
push
dec
mov
sahf
push
and
xor
xor
sbb
aad
loopne
pop
into
loop
adc
sub
andl
pushf
push
mov
pop
dec
xlat
inc
inc
imull
cmp
stos
fs
sbb
gs
jae
sbb
sub
dec
outsl
loop
dec
or
rorb
adc
jb
ljmp
cmpb
outsb
sub
mov
or
pop
jecxz
inc
mov
mov
and
sbb
out
mov
push
xchg
jg
sahf
mov
jle
je
cmp
sub
sbb
rcll
mov
shlb
jg
les
jne
inc
push
push
bound
sbb
pop
push
sbb
adc
test
sub
mov
sbb
lret
sbb
xchg
cmp
enter
fildl
and
subl
cwtl
or
and
pop
cltd
or
inc
lods
mov
mov
and
dec
dec
ljmp
sub
pop
fwait
test
in
adc
daa
push
jns
sub
shrb
lea
aas
neg
sub
mov
add
push
sbb
inc
adc
mov
mov
cmp
inc
test
and
add
std
push
fldpi
pop
mov
pop
js
test
push
leave
push
les
loopne
xchg
mov
push
push
mov
push
pop
fisttps
mov
mov
pop
lods
lea
test
pop
shll
incl
je
movsb
sahf
fwait
dec
shll
fsubl
xchg
rorl
sub
stos
sbb
int
jb
fisttpll
mov
shrb
sbb
scas
jns
adc
sbb
lock
test
push
jle
or
int
inc
mov
or
repnz
cld
mov
adc
popa
movsb
imul
flds
lock
inc
mov
mov
inc
adc
jmp
mov
or
or
rolb
pop
lea
sti
mov
stc
push
setns
xchg
outsl
int3
dec
std
sbb
and
stos
in
cwtl
in
rcr
jo
or
nop
gs
pop
jne
mov
test
pop
clc
fisttpl
mov
and
jecxz
mov
stc
testb
pop
xchg
sbb
xor
pop
pop
les
cmpsl
cld
jle
lahf
pushf
or
inc
rcr
rcr
push
mov
dec
push
orb
fsubl
or
std
xchg
insb
and
jno
add
mov
jmp
push
iret
imul
sbb
push
pop
data16
aas
xchg
test
or
and
add
sub
mov
loopne
mov
cmp
sub
mov
pop
or
mov
ds
in
adc
mov
mov
pop
mov
mov
adc
test
push
pop
push
imul
aam
jl
xor
push
cld
and
mov
leave
test
xchg
jp
mov
inc
out
dec
rcl
xchg
pop
xor
or
pop
jns
outsb
sbb
leave
cmpsb
repz
sbb
fsub
loope
sbb
push
sarb
pop
sbb
jp
shll
scas
xchg
lds
mov
out
aam
push
frstor
cmpsb
lock
and
inc
xor
jmp
loope
or
mov
mov
xchg
cld
jl
sub
jno
mov
sbb
dec
mov
push
xchg
fnsave
add
leave
shrl
lahf
or
push
scas
adc
add
jno
je
xchg
enterw
roll
stc
call
mov
mov
push
sub
cli
and
iret
cld
xchg
or
add
sarl
hlt
xchg
dec
popa
orl
sbb
and
pop
cmc
cwtl
dec
pop
or
mov
int3
jo
daa
test
pop
mov
in
jmp
lods
js
mov
push
inc
in
jbe
xchg
dec
imul
rclb
mov
jecxz
in
mov
nop
lret
enter
sti
dec
leave
pop
jbe
pop
dec
fsubrp
push
dec
sbb
lret
ror
dec
and
scas
and
and
jb
dec
add
sbb
test
pushf
sarl
xor
cmp
fmul
adc
mov
mov
shlb
mov
lret
cmp
int
dec
or
xchg
in
gs
inc
lods
mov
push
ljmp
or
sahf
divb
cmp
sbb
push
and
std
adc
mov
dec
xor
xchg
roll
and
int
pop
lea
sub
cmp
sbb
lds
sub
stos
or
aad
xchg
std
xor
lods
jnp
nop
movsl
inc
shlb
test
sub
and
daa
add
adc
push
adc
and
jnp
adc
add
jne
push
xor
ss
jne
shll
out
cli
imul
ljmp
aam
xchg
dec
mov
mov
bound
pop
adc
xchg
push
insb
mov
fistps
ret
mov
sbb
out
pop
in
cmp
js
pop
mov
js
jp
and
lcall
xchg
outsb
imul
sbb
fs
sahf
xchg
test
stos
pop
cmpsl
sbb
dec
lcall
in
bound
xor
and
shll
add
pop
or
dec
fimuls
and
mov
or
test
fwait
icebp
mov
jb
xor
cmp
pop
dec
push
les
inc
test
or
cmp
addr16
fistps
jbe
call
sbb
add
and
inc
push
lds
mov
popf
inc
xchg
lahf
mov
jae
test
shlb
outsl
sbb
add
fs
jne
xor
test
lret
aaa
xorb
cmpl
adc
mov
rolb
lret
inc
shr
mov
aad
cmp
mov
mov
test
das
mov
xor
mov
test
in
fidivl
mov
and
xchg
pop
pop
in
out
sub
mov
divb
dec
inc
aas
adc
sbb
scas
push
jns
insl
inc
bound
sbb
pop
lods
test
push
xchg
mov
test
stos
add
mov
push
sbb
xlat
ja
and
jne
ret
popf
sub
call
mov
loope
pop
outsb
mov
xchg
fs
ret
add
test
ds
pop
out
rorb
out
xchg
shlb
pop
pop
inc
scas
fucom
add
subl
enter
pop
aad
pop
xchg
and
dec
mov
iret
sub
push
hlt
or
sbb
jecxz
cmp
push
mov
imul
mov
mov
adc
lods
cmp
aam
push
addr16
fsubrs
xor
dec
std
mov
iret
mov
mov
out
fs
mov
test
lds
aaa
ret
sbb
adc
push
add
push
dec
out
mov
into
xor
fnsave
xorl
out
icebp
inc
aas
pop
mov
rorb
inc
or
and
outsl
mov
xchg
adc
mov
jmp
add
out
inc
or
and
int
out
mov
pop
inc
mov
cmp
outsb
cmpsb
test
mov
fcmovb
cltd
push
push
cwtl
mov
add
mov
inc
add
gs
lret
into
enter
push
int
sahf
das
xor
jnp
iret
and
dec
imul
adc
mov
lret
and
add
testb
dec
aam
movsl
fndisi(8087
and
xlat
rcr
inc
ja
out
ja
cmp
repnz
jo
xchg
fldenv
xchg
imul
mov
pop
mov
fcomip
filds
movsl
ss
xchg
pop
sahf
cli
mov
loope
jnp
jp
xchg
inc
jae
rcr
or
scas
add
rclb
ds
xchg
movsb
shlb
call
stos
cmp
out
jge
add
sarl
adc
xchg
cmpsb
arpl
neg
adc
push
mov
mov
int3
xor
mov
mov
mov
subl
aad
into
or
std
or
mov
outsb
inc
pop
or
and
jne
mov
push
fdivrl
push
inc
cmp
mov
mov
sarl
mov
pop
push
dec
gs
dec
incb
data16
jmp
js
pop
xchg
cmc
sbb
pop
icebp
cmp
and
hlt
out
sbb
xchg
out
mov
mov
cmpsl
shl
mov
cmp
stc
mov
pop
push
scas
insl
sbb
mov
cmpsl
cmc
cs
push
jne
in
pop
cmp
stos
mov
cmp
cmpsb
mull
pop
push
or
sbb
or
stos
loope
sbb
ss
sbb
loop
inc
mov
std
sbb
movsb
jg
ret
push
int
dec
sbb
rcrb
xor
cltd
fwait
stos
dec
inc
ret
mov
or
cmpsb
jecxz
add
sbb
sti
jge
shlb
sbb
mov
xchg
sbb
loope
pushl
pinsrw
sbbl
pop
lcall
ds
xchg
frstor
push
lret
pop
rorb
sbb
or
fbstp
ret
push
jae
loopne
clc
mov
mov
add
inc
nop
mov
inc
movsb
jmp
sbbl
jne
loope
sub
mov
lods
add
daa
dec
cmp
add
mov
jp
sub
or
cwtl
pop
xor
sbb
andl
or
imul
test
jae
jl
adc
add
mov
popa
mov
adc
incl
inc
mov
nop
xchg
mov
call
lock
adc
add
aam
repnz
lret
scas
mov
add
das
xor
mov
adc
sub
mov
stc
xlat
cmp
dec
pop
bound
popf
xchg
cmpsb
sub
jl
push
inc
mov
movsb
and
xor
test
stos
add
push
cmc
pop
fisubs
xchg
fisubrs
xchg
xchg
and
sub
xchg
mov
in
xchg
push
jns
sub
adc
lret
adc
stos
sbb
aam
mov
stos
cmp
add
rolb
dec
or
sbb
pop
std
sub
aaa
sar
pop
in
lods
jb
pop
xor
jns
rorb
push
cmovge
xor
inc
cmp
out
and
dec
or
enter
imul
or
fcmovnu
push
xor
add
pop
mov
outsb
add
xor
mov
mov
pop
loop
inc
out
adc
pop
pusha
inc
pop
call
inc
out
mov
sub
out
mov
pop
mov
aad
mov
fwait
inc
adc
dec
dec
rolb
repz
jo
push
arpl
pop
movsb
and
xchg
mov
adc
fsubl
insb
pop
gs
jae
add
mov
lea
or
add
shll
popf
in
mov
mov
icebp
stc
cmp
int
aam
jecxz
mov
test
js
aaa
pop
xchg
cld
aas
pop
jnp
sbb
aad
rcrl
in
jnp
dec
push
in
out
xor
or
repnz
out
out
adc
lret
and
mov
push
mov
add
sbb
xor
mov
cmp
add
dec
lahf
repnz
loopne
jmp
mov
and
pop
mov
inc
fs
jo
pop
mov
into
inc
ds
fisubs
stos
into
repz
stos
rcll
add
loop
mov
loop
fidivrs
mov
inc
mov
xchg
mov
push
jecxz
add
mov
lods
dec
cmp
cmp
mov
out
xchg
sub
add
mov
jno
mov
cwtl
jge
loop
lea
jecxz
jae
xchg
dec
xchg
ja
mov
out
insb
push
push
into
ss
push
jecxz
sti
push
lret
lcall
jmp
push
push
rcrb
mov
mov
dec
js
mov
push
inc
pop
jae
insb
aas
cmpsb
cmpsl
push
push
dec
aad
imul
and
mov
xchg
push
xchg
ss
cld
xchg
dec
fsubrs
push
and
mov
int
int
dec
test
and
dec
mov
fwait
scas
hlt
pop
adc
jecxz
and
cmp
lods
push
pop
mov
push
push
insl
push
or
pop
fnstsw
fscale
xor
mov
mov
mov
fbstp
out
lds
xchg
ss
scas
mov
stos
dec
rol
popa
and
ds
shll
movsl
inc
push
mov
xchg
pop
and
push
scas
add
inc
adc
mov
icebp
xor
mov
xor
stc
jp
jbe
push
int3
sbb
cmp
add
cmpsb
mov
mov
data16
push
mov
out
cltd
stos
jmp
push
push
mov
shlb
sub
dec
test
aaa
mov
jbe
adc
ficompl
rolb
mov
lret
jg
push
xchg
daa
push
pop
mov
pop
fcmovnb
shll
data16
push
sub
mov
fwait
ss
adc
inc
test
fcoms
or
push
ds
cltd
mov
movsl
leave
mov
mov
jnp
add
in
jle
les
cmpsb
adc
xchg
lds
es
pop
jns
pop
sahf
cmpsb
adc
in
ret
leave
sbb
adc
stc
adc
lret
mov
rolb
fistpll
mov
and
imul
add
sarb
cmp
popf
test
shlb
lea
mov
icebp
mov
lea
je
pop
pop
fldenv
add
lret
imull
dec
ds
data16
mov
fcmove
dec
cmpsl
adc
mov
sbb
push
add
movsl
xchg
mov
push
sbb
adc
adc
enter
ss
ficoml
cs
pushf
push
int
mov
xchg
jo
data16
iret
pop
sub
cmc
inc
in
pushf
addb
push
rcrb
sbbb
aad
loope
push
lahf
mov
push
js
insb
inc
or
mov
dec
lods
add
xor
push
push
lret
stos
stos
or
mov
and
pop
add
jle
test
cmp
stos
mov
repz
jnp
leave
xchg
test
popf
ret
or
cmp
pop
cmp
icebp
mov
pop
add
lret
sarl
push
shrb
jne
nop
xor
in
or
sub
or
push
lret
push
imul
mov
jno
mov
xor
or
js
mov
into
mov
inc
aaa
push
adc
jle
fidivl
push
sub
xchg
in
add
int
cmc
inc
push
jns
repz
push
sarb
dec
or
pop
rorb
sub
dec
jne
and
out
andb
ljmp
or
xchg
add
mov
push
into
stos
out
loopne
sar
shll
push
pop
dec
int3
dec
sub
repz
rcrb
sbb
push
call
mov
nop
loopne
ds
mov
mov
inc
repz
lock
stos
cmp
pop
cmp
push
lds
mov
push
cmp
adc
call
dec
ja
clc
cmp
ret
mov
shl
pop
and
into
ret
cmp
xor
outsb
mov
roll
mov
add
mov
sub
mov
lock
std
iret
nop
sbb
xchg
or
pop
or
data16
mov
rolb
ss
push
xor
inc
imul
aaa
xchg
out
fsubrs
out
in
or
cltd
aaa
enter
dec
pop
fwait
push
outsl
add
mov
inc
dec
fnstsw
xchg
movsb
test
jg
or
sub
orl
push
and
mov
xchg
push
insl
insl
mov
fadds
and
stos
push
shrl
jns
mov
je
adc
mov
xor
mov
sti
notl
sbb
adc
test
push
jle
adc
inc
iret
mov
mov
adc
sti
mov
mov
dec
sub
mov
jb
inc
cmp
and
sub
jl
sub
push
and
out
cmp
or
adc
lret
sbb
and
push
nop
lcall
lea
jp
cmp
mov
lds
mov
jg
icebp
inc
cli
jne
movswl
ja
bound
add
outsl
popa
lcall
push
flds
lods
mov
mov
addr16
shlb
lar
fisubl
fistpl
adc
adc
rcrb
adc
sub
xchg
and
mov
and
jne
dec
je
jmp
mov
popa
or
aad
mov
lds
fcmovb
cwtl
mov
jbe
repnz
insb
ud0
lahf
push
jbe
ljmp
ss
xchg
push
aam
mov
dec
in
or
clc
sub
jg
mov
or
icebp
xchg
mov
mov
in
pop
repz
lret
adc
enter
int
mov
sbb
xor
outsl
cld
adc
mov
sbb
mov
addl
sahf
jo
pop
jecxz
ja
sti
mov
fwait
and
adc
or
shrl
mov
notb
outsb
insb
lea
repnz
test
sahf
push
in
fdivrs
mov
mov
or
jp
imul
loopne
adc
js
add
loop
xchg
adc
jno
ljmp
xchg
fsubs
into
pop
inc
adc
daa
sbb
mov
popf
rclb
sub
jle
and
lods
sarl
cmp
in
cmpsb
pusha
pop
mov
jge
inc
push
sub
das
ja
faddl
sbb
ret
repnz
insb
out
pop
dec
and
push
push
aaa
cmc
mov
out
negl
imul
ret
sahf
repnz
cmp
mov
lods
rclb
test
push
lods
mov
xorl
mov
mov
cmp
sub
inc
movl
push
mov
xchg
sub
jmp
mulb
mov
dec
outsl
sbb
cmpl
xchg
xor
in
cmp
sbb
movsl
lcall
je
lock
sub
in
dec
adc
loope
or
or
xchg
xchg
mov
jge
mov
mov
push
xor
push
cmp
push
cmp
mov
dec
arpl
xlat
xor
fistl
sti
and
xchg
push
dec
aas
adc
and
pop
js
cld
popf
dec
into
cmpsb
sahf
rclb
loop
sbb
inc
jmp
mov
mov
sbbb
mov
and
cmpsb
out
mov
dec
lods
dec
xchg
push
stc
lcall
loope
push
xchg
popl
jecxz
js
mov
xor
mov
cmpsb
cli
icebp
xchg
jnp
aaa
sub
sahf
mov
andb
dec
shrb
ret
ds
test
roll
sub
std
in
cwtl
nop
cmpsl
adc
scas
push
std
loope
pop
leave
jae
cmp
inc
in
or
lcall
and
iret
out
mov
cld
xchg
pushf
sbb
mov
test
xor
cmp
scas
mov
stc
not
dec
in
loopne
cmc
std
bound
daa
inc
ja
enter
inc
inc
shr
sub
stos
or
pop
or
lods
nopl
sbb
and
mov
aam
sbb
iret
cmp
dec
stos
push
or
jnp
sub
cmpsb
adc
fwait
in
mov
sahf
daa
pop
jle
push
lock
test
rol
filds
mov
jp
xor
in
pop
fbstp
xchg
pop
sub
fs
or
pop
jbe
xor
and
loope
push
ljmp
add
add
in
sarb
pop
inc
xchg
mov
or
xor
cmc
dec
dec
subl
xchg
mulb
jns
cmpb
lahf
andb
test
lret
inc
push
dec
aam
xor
repz
xchg
je
add
jb
incb
les
and
jbe
mov
jnp
or
lock
out
adc
int3
jmp
int
mov
or
xchg
scas
cltd
mov
cmp
addl
jns
adc
cmp
xor
inc
adc
mull
adc
fwait
negb
leave
popa
outsb
mov
xchg
jmp
test
xor
mov
pop
in
sbb
inc
cmp
fsubrl
shrb
xchg
popf
ljmp
jmp
leave
cmc
mov
jnp
int
cmp
cld
stc
sbb
mov
icebp
or
out
pop
imul
stc
aaa
push
stos
cmp
lods
jno
adc
mov
dec
rcl
or
cmp
sub
das
std
enter
fwait
xor
into
rolb
jmp
aaa
movsl
mov
sub
jmp
add
xchg
iret
cltd
pop
add
mov
enter
push
cmp
ja
cmp
pop
insb
jno
dec
mov
loopne
cmpsb
pusha
add
push
jnp
inc
gs
add
push
adc
cmp
sbb
aaa
dec
aad
or
pop
xchg
dec
adc
jle
stc
mov
cmp
int
and
in
add
jnp
mov
decb
enter
pop
insb
imul
sub
and
sbb
out
sub
cmp
subl
adc
push
xchg
inc
sbbb
fbstp
and
popa
push
push
xchg
mov
test
sbb
cmp
cmp
js
cwtl
jb
mov
js
cld
jno
or
mov
movsl
mov
call
imul
xor
out
lods
xor
pop
aaa
jns
jl
mov
adc
pop
mov
mov
lahf
inc
xchg
dec
repz
lods
scas
and
iret
cmpsb
pop
sar
lea
adc
dec
jbe
rorl
jbe
ljmp
inc
stos
imulb
mov
nop
jnp
loopne
mov
enter
icebp
adc
into
adc
inc
rolb
sbb
dec
ret
test
gs
sbb
mov
dec
shrl
fstps
rcl
stc
adc
lds
movsl
les
or
jecxz
fucomi
cld
aaa
xor
pop
mov
push
fstp
push
ss
mov
iret
mov
hlt
loope
mov
dec
out
xlat
mov
test
push
fdivl
cmpl
stos
test
aas
push
negl
ret
and
mov
ds
cs
clc
jae
sbb
sti
xor
fwait
pusha
mov
jns
sub
dec
inc
mov
pusha
scas
pop
repz
jns
in
rcr
imul
fstl
mov
clc
add
out
xchg
cmc
enter
insb
das
push
dec
and
cmpl
xchg
pop
in
add
mov
mov
jnp
mov
mov
icebp
push
mov
bound
lahf
sahf
ja
lods
sbb
loopne
jp
enter
or
cmp
insl
fwait
fwait
scas
test
out
mov
leave
lret
mov
jle
leave
call
mov
or
mov
bound
push
call
lret
test
dec
sbb
int3
xchg
sub
add
inc
push
jecxz
popf
jns
mov
lock
gs
lret
xchg
add
in
and
push
push
mov
or
adc
cwtl
mov
add
mov
lret
sub
outsl
lock
insl
ljmp
imul
insb
mov
out
ljmp
and
orb
mov
fcompl
stos
mov
out
sbb
dec
roll
cmp
push
idivb
pop
xlat
outsb
or
fabs
mov
inc
lea
jmp
mov
jmp
daa
mov
repnz
mov
test
in
jecxz
pop
sub
in
popf
movsb
xchg
or
movsl
adc
vsubps
push
mov
sarb
dec
pop
pusha
ror
fistpl
mov
cld
das
pop
aas
pop
xchg
in
test
push
dec
mov
sub
test
lret
mov
xchg
dec
jge
cmc
mov
pop
test
jcxz,pt
xor
addr16
mov
js
inc
leave
push
cs
jle
repnz
pop
xchg
xchg
jg
mov
dec
cmpsl
ja
mov
mov
aaa
imull
inc
std
hlt
mov
pusha
aam
out
adc
enter
sahf
lahf
lods
fiaddl
imul
es
sti
cwtl
cmp
imul
cli
xchg
add
ret
jno
idivl
sbbb
push
repnz
jmp
xlat
jg
dec
mov
sbb
push
bound
aad
fildl
subb
daa
mov
xchg
mov
insl
xchg
bound
and
dec
mov
sbb
mov
lret
cmpsl
and
mov
fists
jae
aas
ljmp
or
fincstp
daa
popa
sub
dec
lahf
aaa
mov
je
jg
xor
mov
call
ja
mov
leave
in
mov
aad
xor
fbstp
xchg
jle
mov
in
adc
rcrb
stos
adc
xchg
sub
or
xor
mov
xchg
ds
pop
int
sbb
jbe
sti
cld
adc
mov
mov
sub
push
arpl
adc
call
jbe
xchg
int3
sbb
pop
and
sbb
stc
and
sti
icebp
sub
fst
out
incb
sbb
cld
jnp
or
out
mov
repz
xchg
mov
jl
dec
jo
fistps
add
repz
and
xchg
inc
rol
fdivrs
push
cltd
inc
lock
arpl
jl
push
sub
jb
sub
cmp
sub
inc
fwait
and
cwtl
mov
push
ret
lods
jge
mov
cltd
lret
fimuls
pop
rcrl
popa
icebp
or
leave
cmp
lock
ffreep
loop
mov
cwtl
dec
into
push
lds
popa
cmpsb
mov
jge
jle
jle
xor
or
mov
mov
iret
fmul
adc
push
mov
push
or
and
aad
sub
jae
xor
rcl
mov
adc
loop
fadd
cmpsl
push
or
pop
push
push
loop
inc
scas
cmp
loope,pt
mov
mov
mov
sbb
mov
mov
sub
idivl
lds
decb
lcall
jecxz
jno
jns
into
imul
test
pop
fistpll
daa
inc
in
das
es
mov
loopne
mov
ja
xchg
pop
xchg
and
cmpsl
sub
adc
dec
xorl
cmp
aaa
outsb
jbe
dec
push
xor
lods
inc
call
mov
ja
mov
mov
js
inc
fst
cli
movsl
fxch
outsb
cmp
xchg
sbb
jno
stc
fwait
pop
js
pusha
inc
int3
mov
jge
cwtl
int
iret
idivl
cwtl
stos
sbb
cmp
or
pushf
out
loopne
idiv
cmpsb
sahf
fwait
or
push
insb
xor
cltd
scas
and
aam
inc
dec
sub
rcrb
pop
sub
push
cld
inc
and
cmp
jmp
jp
push
std
jbe
je
pop
lods
in
mov
adc
les
push
in
outsb
stc
scas
sbb
fstps
jg
jp
rorl
jno
xchg
in
xchg
mov
ljmp
into
mov
push
stc
mov
dec
mov
inc
or
sbb
aad
orb
push
insb
lahf
shrb
jo
mov
in
and
roll
xor
dec
pop
repnz
cmc
jne
mov
mov
push
popa
xchg
mov
iret
dec
push
aas
shr
jl
mov
fdiv
mov
daa
pop
lcall
jp
mov
push
xchg
cwtl
push
fnstcw
sub
push
out
fmuls
xor
dec
icebp
bound
outsb
fidivrl
aad
insb
ss
xor
ljmp
aad
fistl
jb
nop
dec
inc
icebp
add
xchg
rorb
add
addr16
or
sti
add
pop
enter
pop
mov
inc
xchg
inc
jecxz
fyl2x
gs
loope
dec
sbb
andb
pop
mov
je
inc
cmp
push
cmc
popf
pop
outsl
add
and
nop
push
push
mov
cmp
leave
subl
pop
mov
dec
sub
ss
mov
insb
push
add
sbb
mov
cwtl
int
pop
add
adc
push
sti
fcomps
mov
mov
mov
lods
aam
jecxz
js
movsb
pop
cs
mov
shrb
repnz
jmp
hlt
imul
pop
mov
mov
cmc
push
rcrb
sub
pinsrw
loopne
jmp
rorb
push
adc
fucomp
repnz
cmp
aas
imul
pushf
ret
test
add
add
clc
in
repz
jge
and
repz
insl
cmp
pop
xchg
mov
sar
pop
lret
addr16
mov
mov
or
int
adc
fdivs
ficoml
jns
or
mov
test
das
lods
sti
mov
xor
inc
jbe
lock
mov
mov
xchg
shl
scas
add
addr16
xchg
push
imul
popf
popf
xchg
lock
test
iret
xor
and
in
or
fwait
mov
xchg
lahf
or
lds
dec
mov
or
sub
mov
out
jb
xchg
sar
dec
lea
xor
push
in
hlt
cmp
or
fstpt
add
jns
into
push
adc
mov
jo
nop
push
lods
movsb
pop
repnz
dec
mov
call
pop
xor
mov
xor
xchg
repz
and
lods
shlb
ret
mov
push
pop
fcmovnb
ret
lock
mov
dec
int3
ret
sbb
roll
stc
lea
mov
aas
cmp
out
xchg
fnstcw
push
popf
cmp
cltd
and
sub
mov
cmp
xor
stos
fmuls
fildll
push
loope
pop
inc
push
insb
push
mov
push
inc
adc
dec
jmp
lcall
sbb
mov
sbb
idivb
mov
sarb
mov
mov
push
and
jbe
test
mov
sbb
scas
dec
xlat
arpl
xor
xor
dec
push
mov
pop
sbb
pop
inc
sub
cmp
cmp
ret
jmp
xchg
sarb
movsl
inc
cltd
dec
mov
sub
leave
push
or
shl
cltd
push
jae
jecxz
xor
in
push
inc
mov
rorb
xlat
xor
fnstenv
lcall
mov
sbb
mov
rorl
mov
push
shl
jne
xor
pop
fcomi
sub
not
mov
lods
mov
insl
cmpsb
mov
mov
fs
xchg
push
xor
fsts
out
out
mov
test
dec
xchg
fnstsw
repz
xchg
addr16
ljmp
pop
lds
inc
xlat
jle
jne
cmpsb
xchg
cli
mov
in
xor
jno
cmpsl
lds
jmp
cmc
test
lahf
pop
dec
cwtl
test
addb
and
adc
pushf
repz
aaa
or
push
pop
mov
push
sahf
es
cli
jb
shrl
inc
or
xor
adc
xlat
pusha
sub
es
dec
pop
dec
mov
aam
cmc
and
jg
stos
pushf
outsl
jae
dec
repz
mov
xor
cs
mov
movsl
test
push
mov
or
push
cmpsb
dec
test
cmp
sahf
pop
lock
mov
adc
andb
xchg
dec
cs
sub
add
adc
arpl
xchg
pop
lds
xor
mov
pop
hlt
or
pop
xor
push
pop
jae
adc
adc
pop
adc
clc
mov
fcomp
push
out
adc
pop
mov
pushf
and
dec
jge
loope
mov
jmp
test
dec
in
mov
cmc
pop
cmp
js
arpl
cmp
sahf
ss
mov
loope
adc
aas
test
dec
iret
fdivr
dec
xchg
mov
fs
jnp
in
pushf
inc
jmp
push
jno
add
and
outsl
fwait
movl
pop
inc
aad
dec
mov
dec
iret
cmpb
gs
cs
and
lret
lds
sti
mov
pop
inc
not
stos
sub
fisttpll
mov
mov
jge
loope
insb
incb
push
add
dec
mov
and
ss
push
mov
xor
das
push
outsb
ficomps
nop
ja
mov
push
in
out
add
fucom
cmp
xchg
add
add
mov
xor
xchg
enter
nop
xor
fwait
push
movsb
lods
push
das
xchg
imul
out
adc
icebp
mov
cli
xlat
xchg
outsl
or
or
xor
int3
cmc
sub
inc
jnp
and
into
adc
pop
in
inc
pop
and
inc
sbb
xor
cld
into
xchg
call
mov
push
pop
imul
cmp
jo
aam
xor
mov
loop
leave
xchg
push
mov
adc
jnp
pop
jns
pop
mov
cwtl
jae
pop
adc
call
inc
inc
sarl
jle
idivb
jge
mov
sub
mov
out
jge
sub
in
and
sub
shll
popf
daa
cmp
cli
arpl
lods
pusha
aaa
jnp
xchg
out
mov
xchg
cmpsb
aas
jo
jnp
dec
xchg
dec
ret
sbb
in
dec
dec
xchg
push
sbbb
lds
fstps
cs
nop
ret
test
push
pusha
rcr
sub
sub
adc
cld
sbb
fidivrl
sti
cmp
ud1
push
ljmp
xchg
inc
mov
imul
andw
add
popf
fstps
js
adc
jle
outsl
push
and
inc
cmpsb
rcrw
or
sbb
test
std
and
inc
or
movsl
mov
das
inc
js
sbb
test
inc
jle
and
pop
xor
add
mov
bound
xchg
cmp
jecxz
outsl
out
inc
xchg
mov
hlt
notl
xchg
nop
cmp
push
mov
roll
dec
xchg
adc
cld
mov
test
dec
xlat
adc
es
mov
push
or
dec
lock
xchg
cld
fistps
lds
jge
out
fwait
stos
lock
push
fsts
sti
jno
dec
dec
jbe
xchg
mov
lret
pop
insl
sub
cld
or
popf
mov
addb
in
and
cwtl
pushf
cwtl
mov
or
scas
xchg
jbe
aad
sub
in
sub
popf
inc
adc
push
mov
adc
mov
jae
mov
inc
ror
cwtl
push
gs
in
push
fs
mov
jmp
fists
jo
sbb
cmp
push
xchg
jae
or
xchg
clc
fisubl
mov
sti
dec
mov
dec
int3
iret
sub
adc
push
fdivs
cmp
clc
pop
mov
fwait
mov
and
xor
dec
inc
scas
pusha
repz
xchg
jae
cmp
lds
addr16
insb
js
jno
add
xor
lock
mov
xlat
daa
cmpsl
sub
ljmp
int
xchg
pusha
rcr
movsb
ljmp
hlt
repz
mov
aaa
sub
add
mov
sarl
add
pushf
pusha
or
stos
jecxz
imul
sarb
cmp
dec
nop
or
inc
repz
pop
push
cli
pop
xchg
cwtl
repnz
enter
icebp
rcr
sbb
shll
rsqrtps
sbbl
push
mov
repnz
imul
pop
push
shrl
imul
pop
fwait
add
fcoms
sub
das
jge
aas
or
hlt
xchg
lds
adcb
fimull
stos
ret
das
insl
loope
stos
adc
adc
and
xchg
mov
bound
movsl
and
int3
mov
jnp
mov
sub
dec
pop
orl
aam
leave
cmp
dec
mov
mov
das
jle
dec
jp
fabs
push
test
aaa
and
hlt
in
int3
push
fstpl
outsl
jnp
jns
mov
ret
jle
leave
xor
or
js
fsubs
and
lahf
ja
loope
inc
ret
mov
sub
adc
cmp
xor
cmpsb
imul
outsb
lds
jnp
inc
lret
pop
cmp
jge
fucom
popa
pop
pop
out
pushf
sbb
jno
mov
lahf
movups
ds
jecxz
sbb
dec
mov
mov
add
ja
add
sbb
aas
test
jge
sub
outsb
icebp
sub
mov
ds
lret
mov
xchg
sbb
cmpsl
jl
mov
adc
in
jb
inc
pop
mov
lds
dec
outsl
fbld
push
sti
lcall
mov
lea
pop
std
out
sub
fmul
cmp
call
imul
icebp
pop
outsb
shr
push
leave
cmpsb
push
pushf
negl
std
jo
cltd
xor
mov
and
data16
sub
std
mov
dec
movsb
lds
in
fdivr
aaa
lock
mov
mov
rcr
mov
insb
sbbl
cmp
lcall
adc
sbb
cli
ret
mov
stc
out
daa
hlt
or
sbb
sub
dec
cmpsl
lcall
cmp
adc
add
xor
jne
jecxz
push
mov
xchg
cmp
lcall
inc
into
pop
out
cmpb
lods
pop
xchg
lcall
sbb
xchg
fcomip
shlb
mov
dec
jle
popa
test
add
adc
push
jbe
jge
mov
and
rclb
mov
push
mov
sbb
rolb
cmp
es
fsubrl
test
sub
jecxz
xor
scas
popf
adc
mov
xor
push
and
inc
sub
stos
fidivrs
jb
inc
pop
dec
test
js
sahf
fs
and
xchg
xor
jne
andl
aad
mov
xlat
cmpsl
adc
sbb
push
mov
mov
push
pop
inc
cwtl
out
fdiv
push
ficoml
ret
das
test
jecxz
or
fwait
cld
push
push
into
sbb
mov
shr
stos
pop
jl
aaa
push
pop
cmpsl
mov
pusha
add
ficompl
and
and
adc
and
jle
aaa
inc
addb
inc
jne
jno
add
dec
mov
xchg
mov
mov
sbb
or
test
call
int3
cmp
or
push
stos
shrl
sbb
add
sbb
ret
mov
jmp
sub
int
mov
push
sarb
scas
cs
lds
mov
xchg
stc
sub
jb
push
and
and
fistpll
push
inc
filds
cs
pop
fucom
xchg
pop
adc
and
insb
mov
xchg
jno
stos
repz
movsl
shrb
dec
adc
xchg
sub
lret
idivb
jno
lock
xor
roll
lret
ret
adc
mov
and
sti
pop
and
movsb
push
pusha
test
and
jo
data16
scas
lea
icebp
dec
mov
rcrl
jno
popf
aaa
cli
mov
arpl
adc
call
popf
insb
inc
sub
mov
idiv
mov
or
jnp
push
out
add
scas
sbb
repnz
negl
jb
es
repnz
daa
in
push
icebp
push
mov
out
scas
rolb
pop
inc
stc
xchg
pop
xchg
leave
cmp
inc
or
mov
cmp
repz
mov
in
and
mov
popa
cmp
jne
mov
test
or
mov
and
bound
jg
jbe
dec
cmpsb
js
pop
jl
dec
movsb
mov
mov
push
leave
loop
fisttpl
ds
dec
push
cli
movsb
xchg
iret
pop
pop
shl
or
stos
cmp
jl
push
scas
push
xor
pop
fwait
lret
shrl
or
notb
push
call
repnz
rcl
shl
les
dec
add
push
inc
dec
or
not
cmp
imul
fwait
mov
add
fistl
add
sbb
mov
sbb
arpl
pop
in
xchg
jns
xor
insb
sti
je
mov
jno
or
xorl
lds
mov
push
add
jns
jns
lock
mov
js
cmpb
jg
xor
ja
add
push
push
xor
pusha
loope
and
dec
popa
pusha
push
test
std
push
adc
out
aam
inc
scas
xor
stc
aam
rolb
push
pushl
xchg
and
test
iret
adc
jmp
pop
sub
push
scas
jl
pop
add
stos
scas
mov
inc
loope
mov
mov
int3
mov
je
or
jbe
insb
int3
jae
test
mov
sbb
out
ss
lret
cmc
daa
mov
lcall
dec
push
repz
fwait
jp
jmp
mov
lcall
imul
int3
in
ret
aaa
nop
movsb
ret
arpl
loope
aaa
fwait
jo
imul
aas
into
std
jbe
repz
fs
jbe
inc
mov
mov
pop
popf
mov
or
pop
outsl
push
add
fldl
or
sbb
sbbb
lret
jmp
lods
sub
pop
jns
lds
je
adc
in
call
adc
in
mov
test
adc
rcrl
sbb
cmp
adc
mov
sahf
decl
out
sbb
mov
fisttpll
xor
jl
mov
lods
aad
adc
daa
push
clc
jmp
call
dec
loope
arpl
add
mov
sub
xchg
stos
das
inc
push
dec
mov
shlb
push
xor
jge
movsb
es
mov
push
xlat
mov
sub
xchg
lahf
mov
pushf
cmp
xchg
jl
inc
loopne
enter
mov
cmp
in
inc
lods
push
mov
fwait
sub
movsl
test
hlt
or
pop
inc
push
xor
mov
inc
out
jl
add
xor
addr16
xchg
mov
push
and
lahf
fistpll
hlt
callw
push
jnp
loopne
or
lret
and
mov
fidivs
dec
fwait
sahf
lret
sub
inc
aad
xchg
mov
mov
jmp
push
adc
or
je
mov
in
test
fcmove
jmp
jnp
adc
jbe
xchg
in
xor
fwait
push
leave
pop
aam
mov
in
roll
or
push
stos
lds
dec
mov
mov
data16
sub
pop
xor
xor
cmp
mov
cli
popa
add
into
sub
lods
sahf
int
pop
notl
inc
shlb
pop
sbb
adc
inc
and
sub
xchg
jb
dec
popa
dec
xchg
daa
mov
mov
pop
js
ja,pn
add
cmc
mov
or
xchg
mov
or
pop
into
or
inc
loope
mov
pop
or
lahf
mov
xorl
lods
frstor
out
mov
loop
fs
mov
lods
test
push
insl
sbb
mov
lret
iret
xchg
call
fsubs
sbb
jle
fisttpll
push
jg
xor
popf
push
add
test
dec
fcmovnb
pop
add
ja
cmp
xchg
cltd
sbb
scas
and
rcl
fwait
dec
imul
lods
cmpb
mov
hlt
cmp
xchg
insb
push
jnp
data16
rorl
jbe
cltd
cwtl
movsb
inc
stc
or
ret
add
fistpl
push
push
shlb
mov
add
sub
sub
jle
mov
push
sbb
or
cmp
or
loopne
cmp
je
pop
cmp
push
mov
xchg
cwtl
xchg
pop
cmpsl
push
negl
fmull
xor
jmp
jmp
push
jge
cld
cmp
loope
rclb
test
mov
pop
adc
sti
fs
pop
mov
mov
jg
jecxz
mov
aad
pop
lods
xchg
jle
push
lret
jns
movsl
aas
into
sbb
movsl
loope
mov
push
mov
lahf
addr16
and
adc
outsb
icebp
push
xor
arpl
mov
aas
dec
bnd
imul
pop
in
and
push
xchg
sahf
daa
aam
rorl
mov
stos
pop
in
xor
pop
icebp
jne
mov
fstps
movsb
loop
decl
stos
data16
push
fdivrs
leave
cli
add
repnz
ljmp
negb
imul
and
mov
fiaddl
lahf
ret
xchg
out
mov
cli
xor
xor
push
cmp
cmc
sbb
inc
loop
sbb
shrl
mov
push
cwtl
out
xchg
das
mov
and
dec
xchg
scas
aad
std
sti
mov
cs
adc
mov
das
cmp
cmp
jp
push
cmp
cmp
jb
lods
ljmp
rcl
cmp
dec
out
or
ret
dec
sub
adc
stc
xor
scas
push
inc
hlt
dec
shr
stc
mov
mov
sbb
ljmp
arpl
rcll
cmp
cltd
push
xor
jp
add
lds
sub
cmpsl
mov
mov
int
and
xchg
push
movsl
cmp
rorl
adc
jmp
mov
in
mov
jno
lcall
pushf
push
dec
idivl
or
fistps
imul
inc
push
xor
lea
and
sub
sub
pop
in
jb
and
pop
std
int3
adc
cmpb
xchg
por
aad
pop
into
lods
lahf
popf
mov
xor
or
call
and
mov
xor
sub
cmpsb
in
push
cmp
push
scas
lcall
filds
pop
daa
out
jne
xchg
ret
fimuls
mov
xchg
enter
ret
iret
out
adc
cmpb
add
testb
pop
pop
and
repnz
jmp
mov
fisttpll
fnstcw
repnz
pop
pop
mov
dec
adc
arpl
jg
mov
push
addr16
pop
or
push
arpl
pop
sub
shrb
add
jnp
push
push
add
push
xor
xor
loope
and
out
xchg
dec
mov
add
aaa
pop
mov
in
pop
dec
repz
in
imul
cs
cmp
inc
dec
mov
stos
test
int3
sbb
lods
fwait
push
popf
mov
pushf
inc
inc
pop
inc
add
and
push
push
rolb
push
je
sbb
mov
inc
push
iret
and
frstor
inc
jo
jmp
and
imull
mov
cmp
clc
inc
dec
mov
mov
repnz
sbb
or
inc
frstor
add
fcomps
cwtl
pop
jle
cmc
pop
pop
repnz
pop
pop
std
pop
aas
fs
les
mov
sbb
test
ja
sub
mov
popf
pop
push
mov
push
mov
mov
repz
mov
daa
cwtl
dec
xor
outsl
repnz
in
mov
pop
test
dec
dec
mov
out
pop
add
xchg
out
imul
xchg
lea
mov
test
shlb
loope
jl
ret
out
push
mov
xchg
movsb
dec
pop
push
mov
lahf
pop
pop
outsb
jne,pn
test
mov
inc
scas
in
fwait
sbb
add
rolb
mov
push
mov
push
das
lock
dec
cmc
out
xchg
and
inc
xchg
cmp
xor
lods
xchg
loope
or
xchg
inc
int3
push
mov
inc
xchg
std
jbe
lods
rcll
insb
or
stc
cmp
sbb
inc
arpl
dec
ja
sbb
pusha
leave
pop
repz
ds
mov
jp
sbb
arpl
push
push
orl
sbb
jno
cmpsl
ja
test
outsb
rcr
cli
or
aas
and
aam
add
sbbb
rcl
fadds
lret
cmpsb
mov
arpl
jno
pop
adc
push
fs
inc
pop
cltd
xor
sbb
outsb
in
adc
cmp
push
pushf
lea
or
lcall
ss
pop
jo
mov
aaa
push
lock
pop
test
ja
pop
fs
stos
push
sub
iret
cmpl
adc
subb
es
sub
arpl
jno
jb
sub
inc
inc
divl
push
xor
sbb
pusha
mov
jle
pop
add
mov
movsb
mov
incl
outsb
ljmp
xor
cmp
xor
in
and
sahf
lds
shll
xchg
insl
daa
int
xchg
jecxz
adc
ljmp
fildl
outsb
ds
out
adc
aaa
adc
data16
push
xor
jmp
out
xchg
mov
cld
cld
stc
xchg
pop
cmp
push
xor
mov
cmc
mov
lret
pop
notl
outsl
xchg
pop
or
jnp
cmp
push
pop
pushf
enter
repz
dec
shrl
jl
and
adc
xor
fs
imul
aam
cmp
lcall
subb
incl
fistpll
adc
mov
fistl
xchg
pop
loop
mov
leave
ja
gs
push
jp
in
lcall
dec
adc
pushf
cld
sbbb
popa
inc
or
mov
fldl
mov
lcall
cli
pcmpgtw
jo
inc
les
jne
mov
mov
pusha
pop
jmp
add
pop
and
sbb
jg
mov
ret
decl
or
mov
mov
mov
mov
shrl
push
mov
mov
lret
out
jne
jnp
jmp
and
cmpsl
push
mov
lock
or
pop
gs
lock
pop
sbb
sbb
sbb
mov
mov
fidivs
dec
out
nop
aaa
fildll
or
pop
mov
aaa
test
jecxz
jl
jo
insb
mov
pop
inc
out
mov
pop
pop
xchg
iret
sbb
xchg
inc
add
loop
cwtl
fstl
add
mov
mov
pop
mov
imul
mov
inc
mov
dec
pop
cmpl
push
jmp
int
cmp
jl
xorb
test
sub
push
mov
jge
addl
push
pop
mov
repnz
xchg
rcrl
or
test
xchg
add
mov
test
sahf
pusha
xor
cltd
jae
pop
xchg
push
inc
sahf
xchg
adc
mov
xchg
jns
bound
sbb
xchg
aas
sbb
add
push
xchg
pop
fwait
lcall
xor
jae
dec
popf
inc
or
cmp
mov
dec
imul
mov
pop
ret
push
mov
fcompl
lret
push
loopne
cmpsb
sbb
mov
shr
pop
mov
dec
push
out
mov
xchg
fidivl
xchg
outsl
out
fs
movsb
in
sahf
pop
sub
mov
das
jge
jbe
aam
cmp
push
cltd
icebp
scas
ds
add
cmp
xchg
pop
addr16
ret
xor
mov
sub
pop
clc
ja
mov
adc
loop
jmp
push
flds
in
adc
xor
mov
and
push
in
mov
add
in
repnz
lds
sub
js
dec
mov
sub
xor
out
jbe
cmp
sub
xchg
les
jbe
adc
sub
fmuls
sbb
mov
dec
lock
xor
adc
fsubrl
mov
or
dec
fldt
scas
imul
cs
popa
mov
dec
dec
and
or
aam
push
out
cmc
lcall
push
xchg
insl
or
mov
mov
mov
int
enter
cmc
in
and
sbb
mov
nop
lock
and
sub
mov
xchg
mov
inc
jmp
xchg
push
jnp
xor
adc
leave
ljmp
and
ja
pop
test
ret
mov
mov
pop
dec
repnz
imul
lcall
pop
pop
inc
inc
mov
adc
push
xor
in
sbb
dec
pop
mov
dec
sub
mov
mov
stos
dec
cld
rclb
iret
sub
push
fisubrs
pop
mov
imul
mov
js
iret
cmp
adc
push
mov
and
sbb
and
adc
sbb
adc
inc
add
lahf
jge
inc
in
ret
aaa
push
lds
xor
sti
stos
inc
and
inc
daa
shll
sub
dec
out
xchg
lock
mov
push
sbb
xchg
repnz
and
mul
mov
sub
rcll
ss
adc
jp
sub
repnz
addb
cmpl
pop
dec
or
sub
jg
pop
cmp
dec
in
icebp
or
daa
sahf
sub
adc
sub
subb
test
stos
inc
pop
jge
movsb
add
lods
idivl
int
lret
pop
jne
pop
pop
and
js
push
gs
popa
fildl
ljmp
pop
sbb
stc
inc
rorl
in
stc
mov
loope
int3
sub
in
xchg
sub
clc
cltd
sti
xor
jmp
aad
jo
sub
push
lds
add
mov
sbb
cs
lret
xchg
cmp
mov
mov
jb
xchg
cmpsl
imul
push
xor
popa
ljmp
mov
iret
call
jo
sub
xor
dec
aaa
bnd
ljmp
mov
pop
pusha
push
das
sbb
scas
inc
adc
mov
enter
jae
xchg
xchg
inc
leave
pop
jbe
inc
and
dec
iret
mov
lock
icebp
adc
ds
pushf
and
aad
dec
cmp
cwtl
dec
adc
iret
pop
xor
xlat
sbb
hlt
ja
ds
sub
fldenv
mov
dec
or
sahf
pop
into
push
bnd
maxps
sub
mov
push
pop
mov
int
cmp
mov
jecxz
xchg
mov
clc
pop
outsb
lea
mov
shrb
sbb
inc
xor
mov
xchg
hlt
mov
xchg
mov
xchg
pushf
fstp
xor
test
cmp
mov
aam
setne
add
int
int
dec
jmp
cmp
fnstcw
stos
mov
adc
dec
lea
add
sub
sub
inc
cmpb
xchg
or
pop
mov
mov
sarl
std
jnp
mov
mov
notl
iret
xchg
pop
jl
mov
mov
jecxz
insb
pop
pop
push
sbb
xor
ret
inc
push
sti
xlat
xchg
and
aas
sbb
inc
loope
jmp
sarl
ja
out
inc
push
add
inc
lcall
push
loope
es
mov
stos
jbe
in
sub
in
aas
arpl
into
or
outsl
mov
cmp
inc
mov
push
sbb
shll
pop
and
loopne
or
xchg
xor
dec
push
aaa
push
and
mov
fstps
pop
mov
add
xor
jne
jne
adc
lret
loope
xchg
int3
add
jo
lds
cmpl
addb
jne
mov
fwait
arpl
adc
push
cmp
and
lret
enter
ds
dec
sub
fisubs
scas
or
jle
jnp
les
xor
push
testb
fs
in
sti
inc
push
lds
scas
mov
pushw
jb
mov
jle
aas
enter
ljmp
mov
push
mov
lods
or
mov
lcall
xorb
fcmovb
aad
pop
xor
cld
rclb
xor
aas
movsl
pop
adcl
add
mov
dec
or
mov
mov
pop
in
and
es
ficoms
sahf
daa
popf
sarb
jns
inc
les
lret
dec
add
xor
stc
cmpl
rcl
or
leave
mov
xor
test
clc
movsb
in
lret
inc
xchg
push
leave
mov
lcall
or
jge
sbb
xchg
sub
push
pop
push
sub
xlat
add
pop
inc
mov
pusha
or
jmp
arpl
aaa
pop
pop
pusha
test
xchg
dec
sub
out
mov
ret
adc
scas
test
int3
push
sbb
mov
jge
inc
dec
pop
imul
jne
inc
add
sbb
out
add
push
test
add
or
mov
or
notl
dec
test
rclb
clc
fucomp
xchg
inc
mov
notl
repz
lods
repz
dec
dec
or
push
push
sbb
mov
icebp
mov
mov
mov
out
repz
sbb
repnz
aaa
pop
test
dec
mov
pop
xchg
mov
nop
mov
mov
rol
add
sub
mov
notl
es
xor
cmpsb
push
cli
dec
push
outsb
ficoms
addl
inc
pop
leave
lods
ret
jp
dec
jnp
inc
out
stos
cli
test
je
nop
dec
shl
mov
int
sbb
mov
cmp
adcb
insl
addl
xlat
lock
out
les
xchg
test
and
ret
sahf
xchg
into
icebp
ja
dec
push
sbb
xchg
out
mov
shrb
pop
sbb
sub
adc
addr16
scas
jmp
call
shlb
jne
hlt
jl
mov
dec
popa
mov
pop
inc
fs
aas
jns
jo
jns
stos
leave
andb
fcoml
imul
mov
dec
mov
add
cmp
dec
cmpsb
adc
sbb
or
jle
jmp
mov
mov
lds
jle
and
incl
jle
sub
push
cli
mov
icebp
jecxz
adc
aaa
and
adc
xor
mov
cld
loopne
lea
cmp
sub
xor
push
lret
lods
or
cmp
ja
xchg
stos
xchg
hlt
dec
adc
push
mov
das
test
aam
fisubs
mov
mov
repnz
stos
add
lret
inc
jl
cmp
out
cmp
mov
and
mov
jmp
movsl
divl
imul
cmp
cmp
clc
es
mov
mov
mov
ds
xorl
fidivrs
cld
popa
mov
inc
ljmp
std
mov
in
shll
rolb
repz
lahf
pop
sub
sti
movsb
mov
pop
inc
or
xchg
xor
int3
mov
incl
add
gs
lods
adc
cmp
cld
addr16
push
jb
in
push
mov
ss
jle
adc
jmp
mov
sub
outsl
ror
xchg
push
inc
aam
fcom
pushf
sbb
dec
jae
dec
mov
jo
mov
mov
into
jg
lret
cmpsl
fimull
hlt
mov
jecxz
stos
std
add
gs
in
sub
inc
insb
pop
out
cs
pop
je
testl
or
imul
in
inc
push
jge
out
inc
stos
daa
ret
cli
into
les
sub
and
dec
imul
fwait
cs
mov
and
xor
js
jl
pusha
dec
xchg
outsl
xor
xor
cmpl
pop
adc
into
fwait
add
out
shlb
insb
test
jge
dec
fstpl
pop
fucom
sbb
ds
ficomps
sahf
cmpsl
out
mov
push
popf
repz
ficoml
div
jno
sbb
cmp
xor
lods
mov
jb
dec
pop
xchg
test
mov
push
mov
ja
push
sub
in
sbb
mov
repz
xchg
xor
xchg
jo
movsb
jecxz
ljmp
insb
mov
arpl
cmp
outsb
jp
pusha
and
out
or
lea
xor
gs
xlat
jnp
lret
xor
lahf
mov
js
out
pusha
jp
dec
mov
sbb
inc
inc
cmpsb
cli
dec
test
sbb
push
push
add
push
pop
gs
inc
pop
test
fcoml
cld
psubsw
lea
cmp
fs
lock
or
mov
je
sub
cltd
pop
mov
sahf
mov
shl
push
cwtl
loop
out
mov
incb
cmpsb
les
jge
cmp
mov
shl
test
ljmp
loope
mov
into
fst
mov
push
sub
xchg
decl
mov
test
sub
lcall
xchg
and
decb
int
jne
add
mov
and
mov
adc
lds
mov
pop
mov
mov
fidivl
mov
jns
mov
sub
lret
movsb
std
movsl
or
movsl
add
push
shlb
in
lret
xchg
jge
sbb
add
pop
adc
push
fmull
aam
bound
es
push
inc
cwtl
cli
mov
and
repz
push
popf
cli
and
rcll
imul
aas
cmp
fists
dec
int
jns
dec
xchg
pop
imul
ret
popl
ss
sarb
sbb
ljmp
jbe
mov
mov
inc
fmull
pop
xchg
jns
pusha
pop
xchg
mov
cmp
test
daa
dec
add
push
int3
test
push
xchg
dec
dec
pop
in
lret
idivl
inc
mov
out
dec
stc
push
sbb
xchg
or
insl
std
insl
sub
addr16
xchg
add
mov
aaa
or
stos
fwait
imul
pop
imul
jno
cmp
and
std
jge
out
rcrb
imul
das
inc
pop
lods
fiadds
rcrl
in
dec
push
imul
aam
pop
lds
jns
xchg
cmp
push
sub
pop
ror
les
xchg
sbb
insb
lahf
xchg
cmp
loope
xchg
jge
or
leave
fadd
mov
mov
std
xor
sbbb
and
addr16
xchg
rclb
idivl
leave
aas
mov
xlat
enter
mov
push
int
sub
push
cmp
dec
in
fdiv
adc
push
ss
movups
pop
lret
add
fbld
xchg
pusha
pop
dec
dec
je
stos
push
mov
aad
mov
notl
dec
xchg
xchg
aas
mov
lods
mov
jns
divl
jae
arpl
mov
jle
add
popf
mov
js
popa
clc
incl
pop
or
xor
cmp
pop
js
iret
loop
fiadds
adc
mov
jecxz
mov
adc
fdivp
hlt
ja
mov
add
aas
jg
push
adc
stos
out
fidivrl
and
kmovb
aas
pop
pop
pushf
lods
inc
push
xchg
pusha
add
adc
out
fs
xchg
inc
push
xor
int
in
out
in
iret
cmp
push
lea
mov
cwtl
ljmp
pop
aas
imulb
das
shll
stos
mov
inc
int
xchg
add
xchg
test
and
movsl
roll
loope
int3
scas
mov
push
mov
ja
sub
call
xchg
out
cmp
inc
movsl
mov
push
mov
cli
dec
test
ja
add
shl
inc
add
xlat
mov
pop
fidivrs
push
add
pop
sub
dec
unpcklps
lahf
stc
cmp
daa
test
xchg
sbb
add
mov
push
sub
test
xchg
mov
or
ret
and
xor
jecxz
or
inc
mov
add
add
mov
mov
popf
xchg
xchg
imul
cld
dec
andl
jle
pop
in
jno
inc
pop
in
push
cmp
loopne
inc
repnz
fcoms
mov
mov
orb
sti
aas
jno
sbb
test
push
jns
and
inc
addr16
adc
mov
mov
int3
mov
test
mov
or
xor
xor
repnz
lods
loope
movsb
repnz
jo
dec
push
iret
and
xchg
cmp
scas
jmp
not
sbb
mov
or
sbb
mov
and
pop
push
mov
sbb
pop
jb
aas
scas
stos
push
adc
in
pop
mov
cmpsl
mov
mov
push
dec
push
mov
cmp
out
test
dec
or
fmul
movsb
andl
add
push
mov
push
daa
sahf
dec
adc
mov
sarb
mov
nop
inc
mulb
sub
sub
and
sahf
or
jo
das
or
sbb
je
xor
rcr
bound
out
pop
dec
add
popf
xor
cld
insl
cmpsb
push
add
add
inc
xor
mov
testb
loopne
xchg
mov
cmp
dec
cli
stos
imul
repz
ds
iret
jno
shlb
aad
insl
add
negb
or
mov
aam
add
or
nop
repz
fcompl
mov
mov
outsl
push
insl
cbtw
dec
mov
fisttpl
aam
insl
negl
insb
dec
sarl
testl
mov
pop
sub
mov
xchg
sub
inc
dec
sub
ds
rorl
lods
or
add
jle
adc
pop
adc
idiv
and
subl
push
fisubs
mov
cmp
push
fidivrs
mov
push
mov
cmp
decl
sarl
push
fs
cmc
rorb
lret
cmpsl
cmpsl
ror
sub
stos
cmp
push
adc
rcl
mov
mov
bound
repnz
mov
jb
or
divl
fstpl
mov
movsb
cld
fnstcw
fisubs
aam
push
dec
inc
dec
pop
imul
cs
pop
frstor
shll
mov
loope
jb
or
inc
xchg
xor
xor
int3
xchg
fidivrs
je
aas
shrl
jns
sub
cmp
cs
push
pop
rcrb
loop
bound
fisttps
and
cmp
or
cmc
mov
daa
pop
pop
insb
out
imul
pop
cmp
lcall
cmp
scas
fmull
jecxz
mulb
js
mov
outsb
push
sub
or
add
fs
insl
leave
inc
scas
addr16
jg
ljmp
sbb
shrb
ret
ja
sbb
push
sahf
push
jo
push
jbe
stc
jle
repz
and
repnz
push
pop
popa
lea
es
lret
cmp
into
in
xchg
subl
and
pop
adc
pop
sub
add
xchg
jecxz
js
or
out
pop
dec
xchg
dec
ss
adc
adc
hlt
push
lods
sub
jno
aas
push
jae
mov
rcr
add
lock
insb
mov
jmp
std
adc
mov
sub
mov
xorl
outsl
in
mov
and
cs
inc
jmp
pop
adc
add
mov
dec
stos
xchg
cmpsl
xor
popa
push
into
scas
loope
push
imul
sub
sub
test
and
xchg
lods
pushf
jae
sub
lds
add
fwait
dec
fs
sbb
out
pop
out
popf
incb
push
fmulp
cmp
lret
cltd
mov
sbb
mov
jp
push
mov
jl
jge
shrb
test
sub
out
repz
or
ret
sub
scas
mov
or
cmpsl
cltd
icebp
addb
xlat
enter
les
bound
adc
xor
pop
subb
enter
fmuls
xchg
add
pop
sub
popf
scas
dec
and
sbbl
jb
rorl
xor
lahf
repnz
lods
in
loopne
iret
das
xchg
adc
loope
mov
dec
mov
insl
inc
inc
push
and
rorb
pop
movsb
mov
cmpsl
pop
xor
mov
test
inc
inc
mov
fldcw
aaa
dec
push
fsts
fsubs
jne
and
and
cltd
mov
in
call
daa
pop
fsubr
stos
cmpsl
ds
std
or
fadds
add
ljmp
lods
mov
push
cwtl
xor
movb
fisubrl
fs
out
push
shl
push
cltd
sub
xor
out
inc
hlt
inc
mov
pop
or
push
pop
sbb
clc
imul
outsl
inc
outsb
aaa
faddp
movsb
push
dec
adc
jo,pt
adc
jo
out
cmp
jle
push
sbb
shrl
mov
and
inc
adc
shrb
aad
insl
or
mov
sbbb
mov
aaa
out
insl
movsb
lret
mov
daa
push
fnsave
adc
movsl
test
aas
jae
push
sbb
mov
lret
jb
in
adc
iret
and
or
or
jbe
mov
pop
push
int
insb
mov
cmpsb
mov
mov
frstor
test
icebp
cld
out
iret
mov
cmpsl
rorb
dec
insb
daa
inc
dec
ret
pop
mov
ret
aas
ds
jecxz
insb
dec
repz
fstpl
mov
xchg
orl
inc
xchg
sahf
mov
int3
adc
cmp
mov
fdivrl
insl
dec
inc
lcall
int
icebp
and
std
xor
xor
xor
pop
adcl
jbe
int3
jb
mov
jp
addr16
sahf
data16
cs
cmp
inc
ret
hlt
pop
dec
sub
cmp
mov
mov
rclb
pop
icebp
and
pop
lret
popf
insl
loop
xchg
xchg
dec
sub
insb
outsb
add
mov
aam
adc
cmp
out
cltd
xchg
stc
xchg
sarb
pop
mov
dec
es
inc
add
push
mov
test
pop
shr
aaa
push
imul
or
scas
mov
int3
not
js
xchg
test
xchg
loop
sub
jp
cmp
dec
cmp
sbb
nop
test
lahf
insl
insl
dec
addb
mov
adc
bound
add
add
jecxz
imul
in
xor
xor
cs
lods
mov
jb
jnp
ds
pushf
daa
cli
lcall
fs
orb
inc
pop
inc
pop
jbe
cmc
in
add
xchg
and
cli
jecxz
sbb
mov
or
iret
leave
push
lahf
mov
mov
scas
adc
xchg
push
sbb
xchg
in
rorl
add
notb
insb
insl
test
orb
arpl
or
int3
sub
mov
jbe
and
loop
test
loopne
xchg
adc
pop
test
sbb
sti
lahf
cwtl
daa
adc
mov
pop
push
sub
andl
stos
jns
add
cmp
imul
cld
and
aad
jno
fsub
les
jle
jge
add
mov
mov
mov
les
pop
nop
mov
cmp
jns
daa
mov
jae
je
sub
mov
pop
icebp
dec
js
rclb
rcll
sti
inc
pop
mov
mov
and
jnp
test
sub
mov
imul
hlt
cmp
mov
xor
push
enter
popf
movl
adc
fildll
out
mov
jae
ds
in
inc
testb
push
loopne
test
leave
jnp
shrb
inc
and
rorl
das
cwtl
das
mov
pop
fildl
xchg
inc
ja
sti
push
adc
sbb
jb
mov
mov
ds
sbb
sub
test
iret
test
inc
jnp
and
movsb
call
mov
mov
cmpb
out
dec
mov
out
mov
cmp
cwtl
adc
das
pop
push
sahf
sub
mov
mov
mov
xchg
adc
inc
xor
addr16
jbe
pop
push
push
pushf
outsl
icebp
popl
lret
cmpsl
dec
icebp
imul
inc
scas
push
dec
xor
jno
jo
ret
fmuls
pop
inc
sahf
testl
movsb
stc
lret
sahf
pop
xor
aam
dec
ljmp
ret
lds
or
xor
rorb
rcrl
aas
jge
add
rorb
dec
dec
xchg
xchg
ret
fadds
and
fidivrl
mov
mov
shll
je
fmul
push
cmp
and
dec
test
inc
cmp
sahf
dec
stos
not
jp
fxch
loopne
out
repnz
pop
test
push
je
mov
mov
leave
or
test
scas
jne
inc
es
lcall
xchg
xor
mov
leave
sbb
mov
jae
fistpl
loop
mov
leave
ljmp
cmp
ret
pushf
testb
ja
inc
xor
adc
loopne
add
mov
mov
lahf
movsb
mov
cmp
lcall
push
ljmp
xchg
push
pop
jo
std
inc
data16
ds
mov
fiaddl
jl
push
jl
mov
int3
jge
and
faddl
mov
cmp
scas
ss
adc
test
insl
sbb
test
ret
jbe
and
dec
ja
jle
stc
into
jae
movups
xor
sbb
icebp
xchg
cltd
ljmp
pop
pop
cmc
cltd
fnstenv
or
mov
mov
add
mov
lock
or
pop
inc
mov
and
mov
inc
sahf
mov
int3
sub
dec
loope
ds
in
cmp
divb
or
pop
or
imul
push
mov
mov
rorb
sbb
pop
jae
add
jae
adc
adc
movsb
sub
lret
rcrb
push
xor
inc
pop
add
sbb
je
ds
jnp
sub
adc
add
mov
jbe
mov
incl
std
cli
cwtl
inc
mov
imul
cwtl
test
xchg
in
dec
and
dec
adc
ret
cmp
and
add
pop
call
and
xchg
xorb
loopne
pushf
or
xor
out
mov
jne
mov
je
pop
jo
int3
mov
jne
ljmp
adcb
mov
push
bound
stc
adc
mov
sub
je
push
pushf
xor
xor
mov
jns
fbstp
or
aam
cmc
test
pop
out
push
ss
pop
mov
mov
clc
in
and
imul
or
je
cld
lret
shlb
jb
adc
fwait
push
das
ss
push
daa
aas
cmp
ljmp
push
mov
cmp
dec
pop
pop
daa
sbb
mov
mov
lods
lcall
xor
jno
and
shll
mov
fcomip
sar
and
sbb
movsl
mov
fstpt
fstl
mov
bound
rcr
shrb
lret
or
imul
inc
lahf
fsts
cmp
push
fyl2xp1
sbb
add
int
mov
jmp
adc
mov
xor
int3
fwait
sahf
lret
cmp
cmp
cmc
xlat
xor
push
scas
sub
jl
cmpl
xor
lret
fcomps
jo
inc
in
je
push
mov
stos
insb
sbb
gs
sbb
pop
and
in
into
push
or
test
fwait
jo
cmpsl
jns
xor
arpl
inc
int
dec
outsb
fldt
loop
lods
jl
out
movsb
jo
jmp
mov
aad
dec
push
xor
sbb
fimull
cmc
lods
mov
fisttpll
mov
mull
push
std
imul
xor
mov
aam
jb
or
push
xor
xchg
fnstenv
inc
xchg
pop
mov
inc
sub
movsb
sub
inc
xor
nop
repnz
xchg
repnz
sbb
mov
xchg
mov
mov
sub
add
xor
pop
mov
adc
sbb
lret
mov
mov
cwtl
js
jp
push
cmp
adc
xchg
and
mov
std
out
imul
pop
mov
andl
sbb
pop
sub
mov
mov
dec
push
mov
jge
jae
loope
sub
inc
stos
fsubs
sbb
jne
out
adc
jbe
icebp
sahf
xchg
push
cmp
sub
fwait
lock
and
jne
out
push
lahf
aas
jb
out
outsl
mov
sub
andb
das
and
dec
iret
jb,pt
or
jae
mov
xchg
stos
xchg
jnp
sbb
adc
inc
jmp
adc
ficompl
add
stc
insb
sbb
sub
mov
add
es
ja
xchg
xor
inc
sub
sbb
mov
or
cli
imulb
sub
cmp
fstp
into
cmc
data16
es
out
imul
xor
cld
mov
push
fstpt
fsts
decl
sbb
sbb
push
or
dec
notb
cmp
aaa
lods
fs
leave
int3
or
dec
arpl
and
cmp
rcrb
nop
mov
icebp
mov
xchg
sbb
xchg
push
dec
inc
xorl
mov
arpl
mov
pop
popa
jmp
je
xchg
xchg
xchg
fstps
mov
movsb
mov
movsb
mov
jmp
mov
mov
ret
adc
mov
sti
xchg
xlat
sub
stos
sbb
int3
cmpsl
hlt
or
sub
dec
mov
mov
outsb
push
add
lret
icebp
lret
mov
or
push
mov
push
in
or
push
loopne
dec
mov
sub
dec
in
leave
aam
fwait
or
imul
in
notb
inc
add
roll
pop
cmp
push
ret
mov
aad
jle
inc
lock
jne
add
pop
inc
cmp
mov
mov
rolb
in
pop
jp
test
dec
nop
in
and
mov
ror
and
mov
and
and
adc
xchg
sub
dec
stos
push
jle
or
adc
dec
push
dec
dec
fiadds
mov
jl
data16
and
adc
jae
repnz
cmp
aaa
add
ljmp
cmc
jo
and
movsb
cmp
sub
rcrb
mov
jmp
xor
pushf
jle
outsb
stos
cs
imulb
add
pushf
push
xchg
lea
sbb
jne
test
pop
xor
scas
sub
fisttps
xchg
rorl
mov
out
stos
cltd
jb
fdivrs
push
nop
add
roll
in
adc
call
pop
movsl
and
pop
mov
push
sahf
sbb
cmp
push
scas
fsubrl
mov
mov
inc
pop
pushf
loope
je
inc
leave
ds
mov
imull
xor
gs
scas
mov
lods
or
lods
out
test
push
dec
jb
pop
stos
mov
mov
in
scas
and
and
and
xor
imul
sub
imul
inc
jmp
mov
mov
xchg
pop
xchg
mov
jecxz
dec
add
pop
in
mov
mov
rolb
aaa
pop
fstp
inc
lods
push
mov
mov
sbb
pop
mov
enter
leave
out
mov
negb
sti
cltd
in
fidivrl
out
mov
lret
sbb
arpl
mov
sbb
mov
sbb
lods
shr
lahf
scas
test
mov
sub
cmp
stc
inc
sarb
mov
sbb
mov
mov
pushf
xchg
loope
mov
add
adc
xor
push
adc
mov
and
inc
add
mov
jno
mov
inc
icebp
pop
inc
imul
xlat
mov
sarb
push
arpl
lahf
movsb
mov
push
inc
push
add
ja
sbb
and
mov
je
jns
mov
enter
jo
xchg
imul
hlt
enter
jne
jl
lcall
push
insb
jp
int
pop
sbbl
shrl
cld
nop
lcall
jmp
in
adc
loop
mov
leave
in
xchg
cmp
in
rcr
mov
add
lret
xchg
jb
test
inc
lret
jp
repz
popf
lcall
loopne
jns
jge
adcl
lahf
push
pop
sbb
mov
xor
mov
leave
testl
mov
cmp
push
ja
test
dec
test
insl
mov
pop
xchg
lret
mov
nop
xor
inc
inc
setns
push
and
sub
xor
cmc
ret
fstps
or
int
gs
test
les
leave
mov
or
or
sub
in
int
enter
xchg
jno
stos
pop
inc
sbb
cmpl
leave
inc
test
cmp
cmpsb
sbb
inc
xor
inc
push
lods
pmaxub
in
mov
add
fcomp
mov
ret
or
std
or
and
mov
mov
push
cmp
mov
test
dec
adc
in
push
aas
cmpb
js
outsb
fisubrl
xor
lock
aaa
xchg
movups
int
mov
repz
sbb
shl
ret
cmpsl
xchg
xor
push
cmpsb
xchg
into
jge
push
sahf
pop
mov
add
xchg
scas
inc
add
jno
subl
pop
inc
and
jne
lahf
push
dec
sub
es
cmp
xorl
jg
sahf
test
scas
loopne
cs
cmp
xchg
push
or
mov
es
ss
mov
es
jo
fistpl
and
xor
add
mov
aam
mov
dec
scas
mov
pop
xor
cmpsb
jg
xor
xchg
std
dec
aad
jmp
addr16
adc
xor
adc
jb
pop
jmp
pop
and
dec
push
dec
lds
mov
outsl
mov
gs
call
lret
popf
cmp
push
test
sbb
lret
icebp
loop
push
imul
jae
inc
jge
or
nop
popf
fs
and
in
add
inc
stos
das
movsb
ret
fwait
cmp
addl
and
xchg
adc
mov
rcrb
lods
in
into
pushf
sub
loope
adcl
es
jbe
icebp
hlt
lret
push
sbb
cmp
cmc
xchg
inc
iret
and
test
dec
lods
inc
xor
je
xor
sub
movsb
mov
icebp
loope
leave
cmp
int3
outsl
dec
and
shrb
xchg
push
jo
aam
shrb
scas
enter
imulb
outsb
xchg
sbb
iret
fmull
or
xor
inc
push
pop
stos
fadd
sub
inc
add
sub
jnp
sub
jge
insl
mov
cmp
sbb
loop
cmc
cmp
mov
add
adc
insb
mulb
rol
xor
push
pop
xchg
sub
mov
mov
ds
inc
shrb
cli
in
popa
pusha
xor
jb
scas
push
add
repnz
push
jbe
loope
imul
mov
mov
push
jne
cltd
leave
pop
fnstenv
xchg
cmp
or
out
lahf
call
jp
and
cli
mov
adc
stc
movsb
mov
faddl
adc
pop
push
test
push
jmp
push
mov
daa
xchg
adc
je
mov
shlb
push
nop
arpl
mov
xchg
imul
or
sub
dec
iret
repnz
lret
bound
shll
and
and
stos
sbb
adc
fldl
mov
pop
cld
sbb
leave
sti
or
push
es
mov
dec
inc
fstps
push
ret
push
pop
or
mov
test
stos
rorb
jns
mov
in
icebp
test
and
xlat
mov
enter
scas
dec
mov
test
xchg
xor
xor
es
rcrb
js
outsl
mov
les
push
stos
pop
ret
or
out
inc
dec
mov
aad
adc
lcall
scas
mov
arpl
int3
lcall
add
push
out
sub
adc
mov
loop
ljmpw
adc
mov
mov
jo
lahf
fsubl
mov
mov
jne
push
cmp
or
cwtl
cmp
or
outsl
jecxz
jo
or
sub
push
out
addb
in
mov
adc
insb
mov
nop
js
mov
movsl
dec
pop
fstl
sahf
and
dec
adcl
mov
dec
fstl
cmp
xchg
ja
sub
aas
lds
xorb
icebp
lahf
ret
adc
call
xchg
das
lds
mov
add
push
xor
idivl
jg
jecxz
xchg
inc
jge
ja
jmp
enter
lcall
push
add
push
test
and
out
lret
xchg
jae
js
insl
mov
mov
adc
lods
mov
xchg
sub
and
cmp
sbb
shll
daa
add
je
jmp
nop
jb
adc
and
andl
test
scas
in
popf
sub
mov
mov
gs
hlt
test
outsb
movsb
fldcw
jmp
repnz
mov
and
notb
test
mov
movsl
fcom
notb
cmp
pop
les
xor
cwtl
xor
xor
fs
xchg
xchg
inc
mov
inc
cmpsb
and
xchg
jno
lea
test
mov
inc
push
test
cld
push
stc
adc
ljmp
xchg
push
loope
xor
imul
jmp
popf
loop
loope
or
rcl
out
and
aad
repz
imul
add
pop
and
iret
jbe
lock
lods
pop
adcb
stos
sbb
std
in
stos
jne
add
pop
cmc
out
int3
sbb
mov
cmp
and
cmp
jl
lea
sub
pop
in
pop
aad
stc
push
test
and
push
jmp
mov
mov
hlt
adc
fnclex
dec
inc
adc
inc
pushf
dec
pop
imul
push
or
inc
stos
mov
ret
pop
clc
fistl
push
lret
aam
int
or
xor
add
mov
or
aas
das
lds
ret
push
cbtw
test
push
dec
cltd
ja
sbb
add
xor
sbb
sarb
dec
lcall
and
sub
cwtl
add
sbb
xor
int
lcall
cld
or
fildll
push
fcmovbe
cmp
out
iret
dec
lahf
js
and
add
aam
movsb
js
sbb
mov
mov
xchg
dec
or
stc
repz
movsb
xchg
xlat
mov
leave
inc
jge
pop
fcomi
int3
dec
mov
mov
aam
leave
and
jmp
mov
xor
enter
inc
xchg
nop
xor
mov
inc
mulb
insl
add
push
push
je
pop
push
inc
jbe
int
mov
cmpsl
into
ret
mov
lea
aaa
adc
sahf
out
or
movsl
arpl
mov
shlb
nop
mov
lret
test
push
xor
out
mov
sub
fdivrl
xor
sub
jae
adc
popf
pop
cmp
dec
into
mov
mov
fisubl
mov
adc
stos
fnop
mov
xchg
xor
stc
adc
pop
lret
sub
xchg
lock
and
xchg
push
inc
add
outsb
or
out
faddp
loope
mov
subb
cmc
push
jge
mov
xchg
adc
xchg
or
shl
inc
jmp
mov
int
mov
xorb
add
cmpsl
lahf
xchg
dec
test
dec
fiadds
andb
jge
aam
test
sub
std
mov
int
lret
jae
in
pop
movsl
jne
sub
movsb
push
pop
or
iret
push
enter
iret
into
jb
add
cli
bswap
sub
aad
pop
adc
cmp
mov
push
jno
ds
add
adcl
push
iret
les
stos
or
lds
fidivl
push
pop
mov
mov
push
orl
bound
orl
loopne
dec
add
xorb
sub
jge
cmp
dec
shl
pop
je
lret
cmpsl
inc
mov
adc
adc
cmp
icebp
xor
sub
fldl
inc
mov
add
ss
lahf
arpl
sbb
imul
inc
dec
sahf
sbb
adc
insl
jno
stos
test
mov
push
xor
add
das
repnz
xchg
jecxz
test
xchg
sahf
pop
jns
sbb
outsl
addr16
jge
cmp
dec
adcl
dec
mov
cmc
adc
popf
pop
pusha
pop
push
stos
jo
clc
jp
mov
lret
loopne
cmp
mov
cmpsb
pop
xlat
divb
sub
dec
push
jb
test
stc
mov
roll
leave
cs
add
push
mov
fisttps
jns
jg
jecxz
add
les
push
ds
pop
jmp
test
xchg
mov
repz
jo
adc
ja
popa
or
and
mov
push
sbb
jb
mov
xchg
xchg
test
jo
xchg
std
cmp
mov
cmc
cli
or
xchg
or
aaa
push
or
add
es
fmul
push
cmp
mulb
out
xor
inc
pushl
push
add
clc
mov
sbbb
xor
fdivr
inc
in
out
addr16
lock
clc
sub
lret
in
subb
es
rolb
jo
das
or
shl
loopne
outsl
cld
popa
cmpsb
cld
into
loopne
ret
jne
imul
std
outsb
popf
test
sbb
or
mov
cmpsb
cmpsb
push
insl
push
out
mov
repz
push
andl
inc
lahf
leave
push
sub
sbb
pop
data16
cli
jnp
outsl
xchg
fsubrl
xor
or
out
fsub
and
dec
or
push
pop
out
mov
mov
sub
and
lock
mov
outsb
push
inc
dec
mov
sbb
mov
jl
orl
add
xchg
xchg
mov
test
mov
cmpsl
cmc
mov
push
scas
push
lods
jne
addr16
sahf
pop
inc
movsb
mov
dec
movsl
arpl
mov
loopne
mov
outsl
cmp
int
xor
cmp
push
imul
adc
xor
sub
and
hlt
test
cmp
lds
pop
inc
in
mov
test
pop
stos
or
cmpsb
xchg
test
rcl
jns
ret
jns
or
mov
aad
xchg
mov
cmp
lret
adc
adc
xorb
push
fadds
mov
movsb
xor
int3
shlb
xchg
or
xchg
scas
lcall
sahf
push
mov
mov
pushf
test
stos
sbb
lds
dec
mov
out
mov
xlat
push
das
adc
and
add
add
cmp
shrl
out
addr16
movsb
aaa
adc
lret
inc
pop
push
jp
iret
mov
mov
lret
sub
loope
pop
dec
cmp
lods
push
fs
jo
push
movsb
lds
inc
shr
out
dec
lcall
popf
scas
ret
or
mov
filds
inc
mov
inc
jg
push
lods
xchg
testl
add
notb
jge
jmp
cmovp
push
add
adc
mov
pop
xor
adc
in
mov
mulb
mov
call
fs
mov
sbb
loopne
enter
int
jge
add
xchg
pop
imul
or
cmpsl
mov
lcall
xor
lcall
lds
xchg
test
fisubrl
imul
or
iret
jb
je
sarb
lods
adc
dec
popa
mov
xchg
aaa
cmpl
mov
adc
xor
add
aad
testb
int3
roll
pop
repz
sub
repz
out
jecxz
jne
or
mov
gs
xchg
xchg
out
insb
push
test
sahf
gs
xor
jmp
in
xchg
jb
jge
inc
push
clc
mov
xlat
fisubl
push
clc
add
push
cmc
cmpsl
cwtl
sbb
sbb
addr16
fcomp
arpl
in
adc
sub
mov
into
pop
xchg
leave
add
adc
cmp
jmp
lods
scas
popa
enter
xor
pushf
cmp
sub
int3
dec
int3
mov
rorl
gs
and
popf
sbb
les
jmp
jmp
jne
aas
mov
and
repnz
nop
lret
push
adcl
test
js
leave
test
mov
pusha
roll
inc
sub
popf
jne
pop
push
fdivr
inc
movsl
loopne
stos
push
loopne
arpl
xor
sahf
mov
pushf
xor
mov
repnz
push
inc
xchg
cli
mov
ret
imul
adc
dec
cmp
cwtl
mov
es
dec
stc
and
cmp
pop
push
pop
xchg
jae
aas
in
fimull
xor
int
dec
mov
adc
or
nop
movsb
push
mov
sbb
xchg
lods
or
popa
add
add
pop
dec
inc
test
ret
dec
sti
xor
jge
jl
sub
aam
mov
out
cmp
jge
pop
mov
leave
or
lahf
sti
sbb
mov
xor
sub
dec
push
mov
sti
test
inc
jbe
push
or
xlat
add
xor
out
test
xchg
and
in
lcall
and
mov
test
outsb
mov
cmp
cmpb
pop
or
dec
push
adc
out
sbb
fnstcw
dec
je
mov
and
and
out
iret
aad
xchg
mov
xchg
or
or
mov
lods
ja
out
into
xor
pop
out
lcall
add
push
add
pop
dec
and
subl
js
pop
mov
xor
insl
jl
adc
stos
fdivrs
cmp
add
loop
cli
sbb
dec
neg
pusha
shll
push
mov
call
inc
out
dec
jb
rol
lea
xchg
inc
inc
sub
lahf
je
inc
xor
imul
xor
divb
pop
sub
push
aam
sbbl
pusha
xor
jns
push
lea
jbe
push
dec
lds
je
hlt
fcompl
jb
jo
jne
mov
mov
aam
iret
jle
ds
stos
adc
sahf
jne
and
mov
inc
and
cmp
js
cmp
push
add
mov
pop
inc
xor
cmp
leave
in
outsb
std
lahf
lods
gs
mov
jmp
push
ds
mov
cmp
test
sarl
shll
xchg
mov
mov
int
xchg
scas
mov
fimull
mov
adc
xchg
fadds
jne
xchg
aam
xchg
jb
mov
cmp
in
mov
or
mov
add
dec
push
xchg
ja
adc
pop
mov
add
pop
push
in
jns
push
inc
xchg
ret
push
roll
lods
cmp
jnp
xor
lods
sti
sbb
les
push
pop
xchg
jns
cmp
or
jne
cltd
jne
sahf
int3
inc
inc
adc
xchg
dec
jg
jl
pop
jae
xor
mov
jmp
sub
cmpsl
fistps
rolb
xchg
cmpsl
shll
incb
shrl
pushf
cmc
sti
xchg
mov
hlt
jnp
xchg
pop
inc
xlat
or
ljmp
scas
jae
cmp
sbb
xchg
and
in
pop
xlat
sbb
iret
clc
testl
inc
jecxz
inc
push
aad
sbb
lret
rol
data16
sbb
push
leave
stos
mov
dec
cwtl
jns
rolb
lock
mov
dec
dec
or
cmpb
jecxz
jge
pusha
lcall
scas
loope
divl
lahf
adc
stc
mov
sub
popf
or
and
sbb
add
shl
jbe
jbe
idivl
add
mov
ret
fs
cmp
push
push
add
lock
adc
inc
mov
jle
pop
jl
ss
ret
fisttps
sbb
push
jp
repz
sub
movsb
mov
cmp
push
push
dec
and
es
xchg
mov
jmp
fsubl
and
test
lahf
rcrb
jbe
rcrb
rcrb
mov
unpckhps
out
jns
imul
out
aam
icebp
jmp
ss
bound
out
jmp
dec
pushfw
or
sbb
mov
or
rcrl
mov
mov
push
pop
sub
in
lock
or
jnp
sbb
inc
stc
rcr
or
and
or
mov
mov
or
sub
addr16
fimuls
mov
ficoms
pop
jb
das
imul
dec
cltd
jae
ljmp
dec
shlb
xchg
dec
dec
ret
pop
jp
inc
cmp
inc
es
outsb
arpl
push
in
fs
dec
mov
adc
lods
jle
pusha
int3
incb
pop
cmpsb
mov
fnstenv
pop
cmp
into
jp
push
jl
jle
sub
xor
push
inc
pop
cwtl
push
ror
mov
add
imul
cld
out
ror
fwait
adc
dec
arpl
xor
dec
dec
lahf
pop
cli
sbb
rolb
mov
mov
mov
push
sub
mov
adc
push
jae
out
cmovp
scas
scas
in
lods
mov
jecxz
adc
push
cli
mov
pop
xchg
pop
pop
push
or
in
test
loop
adc
rclb
aas
bound
mov
popa
pop
sbb
repnz
mov
mov
out
push
inc
dec
jbe
jb
call
in
std
add
outsl
js
push
fwait
into
dec
push
cld
cmp
in
sub
mov
test
fnstsw
loopne
push
push
jb
adc
push
mov
sub
jbe
fisubrs
xchg
sub
mov
xor
nop
mul
xchg
lret
xchg
adc
test
clc
sub
sbb
xchg
fldt
stc
cwtl
cmpsb
lds
cmp
mov
mov
mov
iret
rcll
mov
or
ljmp
popa
mov
aas
enter
jle
push
pop
adc
int
mov
pop
xchg
sar
push
sahf
xchg
sbb
jecxz
jnp
imul
push
pushf
dec
pop
fwait
leave
mov
mov
frstor
fwait
aaa
mov
lods
cmp
xor
test
test
mov
jnp
movsl
fisubrs
cmp
jnp
xlat
xor
arpl
rcrl
add
jae
scas
outsb
sahf
movsb
sarb
jns
lock
insl
jnp
pop
push
mov
mov
test
out
mov
dec
fwait
inc
je
mov
ja
pop
rcrl
xchg
jg
loop
sbb
aaa
sub
mov
sti
mov
sub
icebp
jge
adc
push
out
jo
push
jmp
pop
aam
cmpsl
hlt
mov
xchg
mov
scas
std
xor
mov
pushf
fs
imul
addr16
mov
outsl
fsubs
cs
inc
pop
out
sti
lcall
fs
sub
cmp
pop
sub
pushf
sbb
mov
sub
cmpsb
popf
fistpll
mov
xor
fisttpll
outsl
iret
xor
fucomip
fldcw
adc
pop
or
jge
and
out
mov
lret
imull
sarb
les
jns
je
adcl
out
fs
mov
daa
es
adc
lods
xor
jbe
or
xor
inc
sub
jb
xchg
rolb
pop
int3
add
mov
xor
outsb
sub
or
test
popf
push
shll
daa
fdivrl
iret
fwait
xchg
add
and
pop
pop
bound
sarb
arpl
into
ds
jg,pt
icebp
mov
sub
mov
out
shl
ret
sti
cltd
aam
adc
pop
cmc
push
enter
lret
jbe
pop
ret
push
mov
adc
sub
mov
push
arpl
jb
out
cmp
jne
xchg
les
and
add
lcall
push
popa
or
ficoms
dec
inc
or
inc
daa
lcall
mov
aas
sti
xor
lret
sub
out
ret
fistpll
jg
cmpsb
or
aam
pop
push
push
test
hlt
jmp
or
scas
dec
ds
sbb
lcall
js
xchg
subl
mov
mov
enter
inc
cmp
lock
cld
inc
dec
jae
ret
xchg
inc
dec
xchg
iret
and
ret
rcrl
push
add
in
shr
sahf
cli
lret
hlt
xchg
in
dec
test
fmuls
jle
adc
data16
stos
cmp
or
movsl
jne
icebp
cmpsl
ljmp
jecxz
mov
sbb
xchg
aas
jns
test
sub
add
stos
std
jecxz
cmpsl
mov
arpl
mov
stos
or
cmp
push
push
add
mov
stos
push
add
rcll
xchg
enter
mov
cmp
sbb
cli
sbb
fisubrl
fstps
jg
test
adc
arpl
inc
push
cmp
jns
jp
aaa
push
sub
insl
xchg
cmp
aaa
testl
push
mov
orl
jmp
call
fwait
adc
repz
in
imul
out
mov
push
push
pop
stc
xor
sbb
pop
rcr
xchg
pop
push
sbb
out
cli
lea
ja
cmc
js
out
dec
pop
test
fbld
lcall
ret
fimuls
dec
pop
pop
aaa
popa
adc
mov
xchg
pushl
xchg
cmpsl
rdpmc
outsb
aas
xor
mov
push
ds
or
int
sbb
pop
mov
pusha
fwait
arpl
cld
out
dec
jns
sub
xor
fcmovnu
addr16
mov
cwtl
or
inc
mov
out
testl
sbb
or
das
mov
into
xor
inc
or
push
aam
lods
leave
sub
sbb
lcall
jbe
mov
popf
addl
pop
in
pop
outsb
insb
mov
add
js
mov
xchg
rol
sbbl
lods
cmc
stos
sub
push
push
add
pushf
mov
add
mov
out
cs
and
cs
frstor
mov
orl
cmp
into
sub
mov
inc
andl
das
xchg
mov
roll
fs
imul
push
fcoml
pop
outsl
mov
sub
lret
loopne
dec
in
mov
pop
push
out
cs
sbb
lods
jae
lock
mov
sbb
fldl
xchg
mov
leave
jecxz
notl
adc
xchg
rcrb
mull
shll
mov
daa
sub
cltd
sub
out
ret
sahf
inc
ja
int
inc
cld
inc
push
jnp
loop
gs
in
fisubrl
stos
ljmp
xchg
enter
stc
andb
lcall
out
subb
xchg
push
ljmp
push
and
xchg
mov
jb
ss
cmpsb
push
cltd
jae,pt
sahf
or
push
test
adc
leave
lock
rorl
pop
in
ds
mov
lahf
ds
data16
xchg
push
jg
add
cs
sub
sqrtps
pop
inc
sbbl
call
fisubs
xchg
hlt
sbb
sbb
cmp
sbb
push
les
addl
sbb
xchg
xchg
cmc
mov
insl
call
mov
rolb
int3
push
and
xor
loope
or
mov
pushf
jecxz
mov
outsb
sti
clc
xchg
cmp
mov
sub
shl
and
pop
dec
xlat
cmp
adc
daa
inc
inc
jl
jb
xchg
jnp
popa
jp
dec
jp
and
jge
or
and
cmp
data16
xor
ja
fwait
ret
dec
and
dec
xchg
aad
pop
mov
out
sub
pop
and
stos
inc
out
mov
sub
and
arpl
sbbb
jns
mov
int
repz
dec
add
sti
and
js
outsb
pop
sub
adc
pop
std
je
inc
push
rorb
or
lcall
mov
daa
fldenv
jne
pop
and
xchg
xchg
pop
push
xchg
sub
cli
imul
sub
xorb
out
leave
and
mov
push
fildl
in
dec
gs
inc
testb
xchg
mov
fdivr
daa
aad
mov
mov
pop
cwtl
cmp
mov
icebp
xor
xchg
inc
sbb
loopne
push
xchg
or
push
pop
sub
or
mov
add
sub
in
dec
js
std
inc
push
nop
push
add
sbb
es
nop
cmp
jae
mov
cmp
repz
nop
scas
mov
xlat
and
rorb
scas
filds
mov
les
in
push
mov
lahf
out
xlat
and
ljmp
push
fs
pop
cmpb
push
into
xchg
jecxz
mov
ret
insb
adc
and
mov
mov
rorl
and
push
xchg
and
mov
inc
push
mov
mov
sahf
fisttpl
das
mov
mov
pop
addps
pop
shl
stos
lock
mov
adc
mov
lahf
jnp
outsb
xlat
cltd
shlb
inc
inc
inc
dec
jp
xlat
or
gs
pop
dec
test
arpl
ficompl
lret
push
sub
fcmovb
mov
stos
push
and
xor
clc
mov
and
cmp
sub
or
adc
jecxz
mov
cmp
jb
inc
xchg
cmp
int3
pop
mov
int
and
loop
aaa
lcall
mov
popa
dec
sarb
dec
xchg
mov
xor
or
cmpsl
dec
inc
cmpsl
xchg
out
xor
inc
aas
iret
rorl
xchg
sub
mov
lods
aam
jnp
out
mov
cmp
cmp
repz
dec
xlat
inc
lods
dec
fmul
clc
jge
adc
or
aad
ret
rcll
cmpl
push
pushf
pop
cmp
imul
adc
push
fwait
push
jp
xor
sub
sysret
push
cmp
push
outsl
lds
jle
call
test
sub
add
mov
stos
jmp
xor
cmp
and
popf
pusha
and
test
inc
scas
lret
add
mov
and
int
iret
fsubl
mov
std
lcall
aas
aas
cmp
pop
pusha
js
ret
cmc
es
xchg
mov
push
mov
repz
mov
mov
popf
jge
sahf
dec
icebp
mov
es
sahf
ficompl
cmpsb
out
sub
pop
fcoml
xchg
mov
add
or
jp
in
shl
add
or
iret
mov
dec
inc
mov
rcl
iret
lret
push
ds
gs
pop
ficoms
pop
mov
jo
cmp
xor
fsubl
inc
push
adc
jge
daa
fst
push
addr16
mov
push
incb
lds
push
pop
mov
mov
repz
adc
sbb
rcl
sbb
sahf
das
repnz
clc
and
xchg
add
cmp
mov
mov
popf
mov
jle
gs
pusha
lods
jge
loop
aas
sub
cltd
in
fldz
lock
mov
cmc
fnstsw
mov
js
inc
lds
outsb
mov
daa
add
xchg
mov
insl
push
dec
insb
cmp
mov
js
adc
push
push
sub
mov
scas
or
sbb
bound
mov
dec
pop
lods
test
fcomps
adc
cmp
xor
mov
test
cmp
cmp
hlt
stos
insl
and
sub
or
aaa
pop
adc
jns
xchg
aas
rcrl
fwait
cld
movsl
sbbb
or
jmp
jmp
gs
ljmp
cmp
mov
stc
mov
ud1
rcrl
lret
rclb
dec
popf
imul
scas
aad
xor
nop
dec
pop
cli
into
lret
sub
xor
repnz
in
sub
mov
out
ljmp
and
rorb
clc
add
sbb
fs
dec
adc
test
inc
enter
inc
inc
push
mov
daa
lock
cmp
or
enter
pusha
jmp
mov
roll
jo
das
pushf
sbb
mov
imulb
xchg
out
divl
push
inc
cs
test
es
dec
cmp
fstps
int
lahf
and
iret
push
in
rclb
xor
out
sub
in
dec
dec
stos
cli
dec
aam
push
adc
or
xor
fbld
loopne
pop
jne
fistl
dec
pop
pop
in
push
movsl
inc
mov
sub
insl
and
fistps
aas
enter
mov
mov
mov
cltd
adc
test
cld
push
movsb
aad
std
push
cli
inc
jecxz
push
lock
out
cs
push
xchg
cld
sub
mov
jg
and
nop
adc
incl
das
adc
pop
je
or
inc
icebp
ret
inc
sbbl
mov
ljmp
inc
sub
test
sub
mov
ret
in
or
ljmp
shrl
sahf
gs
imul
xchg
pop
and
shrb
in
addr16
roll
fbstp
mov
arpl
mov
mov
dec
movsb
inc
push
inc
xor
inc
mov
into
push
push
mov
adc
mov
mov
in
fcmovb
les
insb
imul
outsb
push
cmp
sarb
repz
lcall
dec
adc
stos
xor
int3
pop
add
inc
dec
lret
dec
xor
pop
imul
push
sub
mov
ds
and
push
add
test
lods
clc
xchg
mov
sub
push
add
cmp
xchg
dec
or
and
psubw
outsb
sbb
sub
sti
inc
loopne
push
dec
sub
stos
or
push
inc
popa
ret
pop
inc
xchg
cmp
or
arpl
sbb
mov
pop
mov
sti
xlat
mov
mov
inc
push
mov
dec
lcall
orl
dec
sbb
mov
stos
jne
out
int3
out
mov
or
xchg
dec
hlt
add
mov
and
cmc
push
and
shll
sbb
mov
lea
int3
mov
and
add
push
insb
sub
pop
xchg
and
mov
or
lret
cld
push
iret
aad
addr16
rorb
push
dec
lcall
mov
pop
dec
into
add
test
daa
push
addl
test
push
push
ret
mov
cli
enter
push
icebp
mov
and
call
or
add
mov
and
push
push
inc
enter
cmp
addl
shr
sbb
mul
jp
adc
jle
cmp
sti
sbb
sbb
into
or
das
add
push
cmp
inc
js
pop
xchg
cli
xchg
mov
jg
js
mov
rcr
popf
sahf
or
adc
xor
mov
loope
sarb
xlat
cltd
or
cmpsl
jnp
test
jl
ss
add
or
lahf
adc
and
insl
repnz
out
aaa
jmp
push
or
sbb
mov
mov
sbb
jbe
pop
xchg
push
jl
xor
dec
lcall
push
cmpsl
mov
adc
cmp
lock
movsl
ja
stos
pop
movsl
aaa
sub
js,pn
popa
daa
add
fadd
sub
add
adc
sbb
out
push
es
pop
dec
add
out
outsl
mov
inc
xchg
adc
ds
sub
dec
lods
inc
decl
xchg
outsb
lods
xor
out
lahf
scas
popa
or
jnp
jp
jmp
sbb
popa
aam
push
mov
addr16
inc
xlat
in
mov
or
fs
and
lds
enter
xchg
or
int
mov
ja
adc
push
pop
or
push
es
push
and
gs
jg
jle
and
movsb
popa
jle
push
lret
mov
sbb
sbb
jg
push
rcll
lret
or
ret
mov
mov
stos
in
ret
mov
push
pop
rcrl
movsl
or
sbb
ljmp
cs
adc
in
addr16
or
adc
in
stos
jnp
ja
pop
dec
xchg
movb
or
movsb
ja
jl
sub
dec
push
cmc
sahf
pushf
int3
fbld
cmp
xchg
cltd
subl
inc
int3
mov
xor
cwtl
mov
dec
xor
pushf
xchg
callw
imul
mov
xchg
mov
popf
imul
cltd
lods
lret
jae
ror
jnp
xchg
ja
stc
adc
es
or
jbe
cmp
nop
mov
mov
fimuls
pop
dec
push
sbb
sarl
jmp
in
pop
mov
jne
out
fcom
mov
arpl
xchg
lods
sub
cmc
mov
dec
jp
fmul
ss
xchg
jb
test
xchg
inc
xlat
sar
gs
xchg
mov
lods
pushf
or
fstpl
popa
mov
push
or
mov
icebp
mov
dec
xchg
shlb
sbb
pop
inc
adc
lcall
mov
jae
outsb
xchg
jl
inc
or
cmp
adc
mov
and
inc
stos
lret
xchg
fdivrl
loop
das
mov
pushf
enter
add
cs
shrl
jno
fsts
pop
sub
es
stos
jnp
outsb
fwait
pop
xor
in
repz
movb
cmp
mov
aam
jnp
int3
stos
jbe
outsl
jb
loope
adcl
test
xchg
arpl
pop
sbb
mov
dec
pop
and
mov
outsb
jp
orl
and
negb
mov
pop
and
jo
sbbl
inc
mov
jle
fldl
and
xor
test
lock
into
add
inc
rolb
cmp
adc
nop
ja
and
rorb
nop
xlat
adc
adc
sbb
pop
mov
pop
in
loope
inc
mov
stos
fwait
std
push
xchg
and
jbe
stc
sti
mov
ret
in
enter
jmp
cltd
test
iret
adc
clc
or
js
pop
cmp
negb
lds
sub
mov
jmp
or
jbe
stc
arpl
jnp
add
lods
sub
arpl
movsl
mov
push
mov
xlat
inc
loop
outsb
pushf
into
imul
jne
out
add
cmpsb
jmp
shll
and
adc
add
inc
xlat
mov
out
mov
in
lret
pop
mul
outsl
outsb
and
or
add
mov
test
cld
stc
bnd
out
cld
daa
stos
outsb
xor
fwait
dec
shrb
add
and
jg
testl
pop
mov
sub
add
stos
or
inc
sub
fwait
pop
fdivs
fcoml
and
cmpsl
mov
fisttpl
lahf
mov
sub
mov
adc
pop
and
out
mov
sar
fbld
orb
fwait
jnp
addr16
xor
insl
pop
cmpsl
sbb
call
cmp
sbb
adc
cmp
call
dec
jp
pop
xor
pop
cmp
cmc
jns
ret
pusha
insl
mov
push
out
cmp
adc
repnz
adc
sbb
or
popf
jle
mov
dec
es
add
in
cld
ret
jmp
jg
sub
int3
mov
loop
sub
dec
and
test
ret
lea
adc
or
xlat
push
lods
pusha
into
xor
dec
es
ja
xlat
jae
repnz
mov
add
sbb
fxrstor
or
push
int
and
cmp
loop
arpl
dec
and
mov
inc
sbb
mov
in
mov
in
sbb
icebp
out
jle
fsubrp
xor
mov
cmp
js
xchg
add
and
add
adc
cs
sbb
sti
repnz
pop
notb
pop
lock
paddd
jl
or
sarl
or
inc
sbb
scas
xchg
dec
pop
and
clc
cltd
pop
icebp
andl
pop
push
dec
aaa
jno
fs
movsl
shll
adc
and
loop
in
or
lds
sbb
arpl
shld
fsubrl
mov
push
mov
fdivrs
call
sub
inc
xchg
aas
test
hlt
movsb
mov
xor
xor
sbb
mov
aas
pop
dec
push
je
pop
insb
jmp
mov
mov
lds
mov
in
ja
inc
ss
insl
jno
lahf
nop
pop
cmp
mov
mov
or
jnp
cmpsl
imul
mov
mov
pusha
loopne
int3
and
int3
stos
inc
sti
xor
push
jge
sbb
xor
jg
sub
mov
pop
add
call
mov
fmull
or
aaa
mov
and
sbb
dec
movsb
push
push
pusha
cmpl
lcall
lods
xchg
rorl
xchg
jp
mov
add
dec
mov
and
sub
adc
cld
ja
aad
dec
jmp
push
sbb
pop
test
ds
add
or
pop
loopne
mov
inc
cmp
cld
mov
inc
mov
lds
movsl
pusha
cmc
nop
enter
sub
pop
and
sbbl
xchg
inc
push
jl
sahf
lahf
cmp
lret
sub
lahf
sarb
mov
cli
cmpsb
xor
or
push
stos
xchg
leave
repz
movsb
add
mov
inc
xor
dec
js
rorw
adcb
sbb
xchg
je
mov
outsl
repnz
pusha
mov
jge
aad
and
test
into
push
pop
jp
loopne
inc
dec
and
push
pushf
cmp
cs
xchg
icebp
inc
sub
mov
mov
cli
fldl
cld
pop
lcall
mov
push
out
std
or
inc
cmp
inc
popa
and
pop
aad
jo
negl
call
cs
int
mov
push
and
pop
xor
and
push
ror
daa
mov
push
mov
incb
jmp
enter
fwait
sti
les
mov
cmp
xor
push
cltd
mov
mov
test
sahf
or
xchg
int
sub
mov
mov
rcl
fdivrp
sbb
fadds
pop
ds
sub
fsub
cs
xor
out
sub
flds
das
fxch
push
movsl
sub
or
mov
ficomps
mov
in
leave
jmp
or
and
xchg
arpl
push
bnd
sub
cmp
jp
jbe
cmp
aad
rcll
leave
outsb
sahf
mov
mov
mov
push
add
adc
mov
in
sub
gs
adc
inc
lcall
fs
movsl
push
mov
mov
sbb
or
push
push
inc
pop
lods
fsubrl
or
or
mov
jge
jbe
mov
mov
pop
repnz
and
jns
push
mov
cmp
sbb
inc
jae
cli
push
xor
outsb
movntq
cld
push
push
cli
inc
repz
mov
ljmp
stos
imul
insl
iret
stc
xor
dec
sbb
jmp
adc
pop
push
add
aam
daa
sub
fisttps
inc
std
ret
int
in
shrl
imul
cmp
and
jae
ret
or
jp
lods
std
test
jmp
and
adc
lea
jl
lcall
insl
addb
dec
lcall
mov
jmp
and
mov
cltd
ret
ss
mov
loop
xor
inc
fsubr
mov
loopne
outsb
mov
dec
xor
fwait
movsb
out
pushf
sub
cmpsl
test
or
not
jb
adc
sub
stos
sbb
je
stos
xchg
inc
out
sbb
add
ljmp
push
stos
push
add
jle
fwait
lahf
mov
cmpb
cmc
ret
mov
cmp
fwait
dec
sub
mov
dec
xchg
xchg
mov
in
inc
or
or
and
pop
arpl
jns
add
lods
ror
fs
shrb
lahf
andb
dec
std
les
gs
repnz
aaa
cmp
sbb
repnz
insb
es
mov
and
ja
ss
andb
movsb
addb
add
imul
fidivrl
push
and
insb
push
dec
xlat
out
inc
pop
je
jo
lahf
xchg
addr16
es
mov
sub
xchg
pop
xchg
fldenv
mov
mov
mov
ror
jae
aas
aad
jmp
push
out
push
cmp
adc
sub
nop
pop
sub
call
daa
jl
xchg
pusha
daa
pop
sub
std
nop
lds
pop
in
jo
jmp
imul
jge
push
mov
pand
pop
or
mov
and
mov
cwtl
mov
fldcw
adc
enter
jbe
int
cmc
pop
or
movsl
into
mov
dec
mov
adc
fldl
mulb
call
dec
cwtl
daa
repz
enter
push
mov
pusha
sub
add
or
cmp
int3
test
adc
in
shll
xchg
test
mov
adcb
mull
jl
in
sbb
jmp
sahf
es
lods
push
insb
or
pop
test
fsubl
mov
mov
repnz
add
xchg
adc
aaa
jne
ja
xor
sbb
mov
shrl
cmp
jbe
jmp
loop
cmp
movsb
jle
cld
push
pop
filds
aaa
jle
cmpsb
cmp
fdiv
sub
add
in
add
sub
int
push
adc
cmpsb
mov
xor
sbb
lea
adc
stc
fimull
popf
dec
aas
or
xchg
cmpsb
xchg
nop
add
sbb
jg
pop
mov
mov
out
dec
imul
dec
inc
aam
lods
cwtl
or
mov
sbb
sbb
test
mov
repnz
bound
sub
xor
inc
sti
test
xchg
cltd
or
add
xor
pop
in
xor
pop
jl
or
xchg
mov
jmp
cltd
outsb
xor
or
es
cmp
xor
icebp
cmp
aad
lret
je
aaa
add
sub
and
jbe
mov
mov
lret
xchg
popa
icebp
adc
fwait
lods
frstor
fdivr
push
cmp
cmp
add
jle
cltd
sub
cmpsb
jg
and
lds
leave
test
outsl
stc
rclb
dec
mov
xlat
fidivl
popa
adc
repnz
pop
ss
sub
and
xchg
mov
add
xchg
movsl
fisttpl
insl
inc
push
test
test
icebp
jne
lods
and
push
outsb
cmp
rcr
inc
cmp
push
lods
push
int
aaa
dec
mov
mov
popf
popf
mov
mov
add
sub
mov
and
es
cli
es
sbb
pop
mov
mov
jno
jbe
movsl
lret
inc
or
mov
xor
fwait
in
cmp
cmpsl
sbb
xchg
in
mov
mov
xchg
addb
cmp
mov
mov
jae
dec
push
or
popl
mov
lcall
aas
adc
sbb
mov
scas
xchg
ds
ficomps
popa
stc
mov
push
testl
fs
clc
mov
xor
nop
gs
out
mov
sub
and
add
pop
inc
mov
rolb
xor
cli
icebp
mov
push
mov
or
in
cmpsb
mov
test
push
push
add
cmp
xchg
es
mov
jle
pop
lea
daa
ror
sub
fcmovbe
jmp
and
imul
shlb
or
mov
call
clc
rclb
xchg
jge
iret
pmuludq
repnz
das
idivl
sbb
adc
xchg
in
push
push
ja
popf
mov
icebp
or
les
std
in
lahf
push
popa
mov
push
push
scas
xor
xor
rcrb
add
inc
pop
nop
inc
mov
xlat
sbb
pop
mov
out
push
push
cmp
push
repnz
or
pop
cmp
into
mov
pop
adc
shrl
sub
cwtl
int3
mov
mov
mov
icebp
rclb
insb
in
mov
adc
jmp
pop
lcall
sti
push
adc
gs
dec
cwtl
shll
stos
enter
adc
xor
sbb
out
outsb
xor
dec
mov
inc
xchg
jb
push
push
inc
lock
fldenv
fs
out
fsubrp
gs
push
rcl
push
add
jle
ss
jl
and
or
stos
or
bound
push
pusha
in
pop
fisttpl
mov
cltd
daa
out
mov
mov
in
shrl
push
pop
inc
mov
pusha
dec
inc
adc
inc
sub
mov
aam
cmp
gs
jg
adc
mov
or
les
sbbb
xchg
aad
inc
jecxz
add
cmp
mov
sbb
sub
jns
cmp
int3
pop
dec
cmp
cmpsb
jecxz
mov
es
xchg
fmuls
mov
outsl
scas
daa
jnp
jns
adc
adc
xchg
mov
icebp
jae,pt
mov
and
js
das
xchg
mov
xchg
mov
dec
jmp
out
jl
pusha
bound
adc
addr16
je
gs
out
inc
jno
inc
in
cs
testb
push
mov
and
jae
lock
mov
pop
push
cmpsb
sbb
xchg
lcall
imul
or
int
jmp
push
inc
mov
sbb
adc
subb
push
push
pop
push
mov
adc
ret
out
sti
outsb
out
jge
xchg
and
cmpsb
cmp
jns
xchg
push
gs
adc
mov
mov
lds
mov
insl
stos
pop
test
int3
dec
add
pop
jmp
jge
inc
jecxz
aas
outsb
cmpsb
int3
sub
popa
xor
iret
aam
add
or
add
sbb
addl
xchg
pushf
out
fstl
cs
xchg
pop
fisubrl
daa
mov
lods
enter
push
outsb
sub
push
inc
movaps
xor
pop
sub
icebp
lret
xchg
scas
orb
ret
sub
ds
movaps
or
push
push
fbld
sbb
out
jbe
repz
xchg
imul
je
fwait
push
les
aaa
jmp
xchg
lcall
in
or
sub
pusha
xchg
mov
bound
xchg
mov
loop
dec
mov
jo
xchg
cmp
leave
hlt
lods
jae
insb
pusha
dec
ret
call
dec
and
fstpt
xchg
mov
imul
shll
fidivl
orps
and
xlat
add
bound
outsl
lahf
push
adcb
cli
fidivrs
std
shrl
dec
jl
cmp
cs
dec
xchg
mov
pop
xchg
pop
lds
fmuls
pop
repnz
ljmp
push
adc
int
mov
dec
xchg
divl
xchg
dec
mov
jne
hlt
pop
or
add
adc
jae,pn
arpl
pusha
cwtl
xchg
ljmp
dec
dec
jmp
sub
lret
dec
adc
pop
lcallw
mov
and
call
or
xor
jns
ss
loope
dec
push
jge
jno
orl
cmp
insl
mov
xor
mov
popa
add
fcmovb
arpl
rcll
cmc
mov
in
xchg
xchg
xor
jno
xchg
movsl
mov
and
in
sahf
mov
jae
and
dec
dec
mov
xchg
and
inc
dec
pop
adc
fists
pop
dec
cmp
jns
push
cwtl
ja
test
push
out
int
sbb
push
xlat
and
inc
jbe
pop
movsl
inc
divps
daa
sub
sbb
out
test
fisubrl
bound
dec
xchg
xchg
jbe
dec
xor
mov
xor
pop
in
add
push
cmovne
adc
and
pushf
or
ficomps
filds
sbb
int3
scas
dec
das
insb
rcr
out
clc
fnsave
cmpl
push
std
pop
mov
out
out
stos
add
pop
adc
cmpsb
bound
out
cmpsl
jb
mov
mov
mov
xor
lcall
mov
lret
repnz
les
ret
cld
loopne
out
or
out
cmpsl
lret
sub
or
mov
lret
xchg
mov
outsl
sub
jns
xchg
je
adcb
sub
xchg
push
jbe
mov
sub
nop
stos
jmp
int3
dec
lahf
xor
mov
int3
or
lcall
mov
xor
popa
sub
rcrl
pop
pop
pop
arpl
aas
or
movsb
add
xorb
dec
lods
in
mov
xor
addr16
call
insl
leave
das
test
cmpb
test
jl
shlb
cmp
xchg
mov
and
fstpt
cmp
fnstenv
lods
lds
faddl
inc
push
fstpt
pop
jbe
dec
sbb
jo
cmc
ds
vpshuflw
xor
mov
mov
ret
rolb
popf
mov
xchg
insb
enter
or
stc
std
test
mov
and
jmp
scas
cli
repnz
inc
insb
xchg
sbb
and
std
and
xor
out
mov
shr
addr16
xor
pop
inc
pop
aas
into
add
jecxz
xchg
adc
mov
jb
jmp
sbb
lcall
in
icebp
out
pop
push
dec
js
mov
xlat
inc
adc
mov
pop
fisttpl
test
aas
das
inc
fistpl
scas
popa
push
cmp
rcr
cmpsb
loopne
pop
xor
xor
push
xchg
lock
les
xlat
pop
push
test
dec
int
rcrl
stc
rorb
mov
mov
popf
cmpsb
xor
pop
lret
ss
flds
shlb
std
iret
or
pop
pop
push
lret
and
loope
jmp
insl
ficompl
push
cmpsb
sub
pop
pop
cmp
insb
mov
xchg
mov
cmpsl
pushf
mov
or
cmp
inc
sub
sbb
jbe
sub
pop
mov
scas
cmpsb
sbb
mov
fs
sbb
inc
sbb
and
mov
and
mov
cld
pop
fnsave
cld
test
sub
jo
jmp
nop
xor
jae
lcall
fstpt
dec
xchg
xor
sub
lret
lahf
inc
icebp
cld
or
sbb
test
cld
or
cli
jbe
push
or
or
jp
pop
mov
push
pop
mov
mov
cmp
jno
jo
mov
mov
xchg
jle
test
push
push
cmc
mov
aaa
xor
pop
pop
fcoml
pushf
inc
adc
test
push
ja
cmc
inc
adc
mov
js
cmp
out
inc
loopne
inc
sub
fisubrs
cmp
push
mov
cmp
adc
add
les
out
fmul
ljmp
sub
fisubrs
rcr
pop
jbe
sbb
adc
int3
cli
adc
in
mov
push
inc
daa
leave
or
fcomps
mov
test
fs
lods
in
stc
xchg
pop
dec
pusha
outsb
sahf
incb
pusha
shll
dec
inc
push
xchg
mov
dec
cmpb
jnp
push
insl
mov
xor
sti
mov
mov
push
cmp
lret
mov
mov
mov
ret
ret
movb
insb
add
pop
push
adc
jmp
aam
sti
ret
mov
xor
testb
pop
iret
test
cwtl
sti
xor
or
or
aad
jp
into
mov
fs
adc
rcrb
enter
test
mov
and
mov
pop
xor
test
lahf
mov
mov
jg
sbb
mov
sbbb
dec
add
aaa
pop
mov
movsb
lds
clc
xor
pushf
adc
push
push
cwtl
in
push
fcmove
bound
or
add
and
mov
or
sub
mov
jbe
sub
pop
outsl
and
sbb
pushf
in
pop
xchg
jae
loop
push
sahf
add
sti
scas
cmp
xor
test
dec
out
bound
lds
xlat
or
sbb
adc
popa
shll
jbe
leave
pop
xchg
fwait
or
xchg
dec
int
adc
cli
mov
lea
jmp
dec
push
lock
mov
cmc
mov
scas
aas
cltd
sub
pushf
sub
dec
xchg
xorb
cmp
shr
enter
repz
notl
jge
sbb
mov
sahf
xchg
inc
test
jg
dec
mov
xorl
sub
and
inc
pushf
jge
in
data16
jg
inc
bnd
jno
int3
sbb
inc
das
xchg
inc
adc
stos
xchg
push
cmp
mov
sbbl
pop
mov
cmp
insb
cwtl
jns
hlt
pop
dec
mov
jge
clc
fwait
shl
and
pushf
xor
fbstp
inc
shll
inc
sub
in
push
scas
call
mov
ds
cld
add
lods
pop
xor
or
pop
rorb
push
rclb
mov
rcrb
mov
mov
fcoml
add
lds
dec
imul
roll
clc
test
lds
jbe
in
and
popf
inc
inc
or
popa
jns
add
mov
adc
lcall
mov
mov
mov
jp
inc
insl
outsb
sbbb
loop
mov
mov
xchg
scas
imul
dec
test
imul
push
fcmovnb
shll
dec
add
fists
sbb
dec
ret
mov
dec
stc
clc
ja
imul
std
mov
aam
push
aam
inc
imull
add
add
inc
jle
inc
pop
cmpsl
inc
xor
call
push
xchg
filds
arpl
add
cmpsb
mov
popa
nop
mov
sub
iret
outsl
fisubrl
mov
call
or
push
mov
mov
ds
and
cmpsb
push
adc
repnz
cmp
scas
jno
sti
xor
in
or
pop
push
popf
add
cmp
test
stc
into
rcll
mov
mov
daa
inc
push
xchg
stos
rcrl
mov
adc
arpl
cmp
push
jge
and
pusha
int
insb
jecxz
in
enter
mov
sub
jp
xchg
in
pop
cmc
je
pop
nop
sub
cmp
fildl
jecxz
aad
sti
jnp
mov
pop
frstor
imul
cmp
adc
ret
pop
mov
fbstp
cmpl
mov
repnz
cld
pop
mov
mov
push
cmp
inc
inc
inc
cmc
int3
mov
orb
jp
dec
push
hlt
cld
adc
jb
sbb
nop
cli
jb
adc
loope
imul
je
push
ss
cmp
mov
cmp
add
int3
ja
out
mov
scas
lock
dec
adc
dec
mull
bound
pop
outsl
push
rclb
movsl
stos
pop
out
cmp
xor
jecxz
ds
dec
mov
iret
ja
jne
push
call
dec
sbb
fwait
repz
clc
push
js
lods
mov
xchg
mov
outsb
fiaddl
jecxz
int
xchg
popa
add
cmp
test
and
lcall
fldt
aam
ret
jecxz
dec
dec
mov
iret
call
adc
adc
push
or
dec
jbe
jg
test
mov
rcl
cld
stos
lods
adc
in
sub
mov
or
std
sbb
cmp
xchg
push
or
rolb
mov
lea
and
push
xor
sti
and
jge
push
xor
fisubrl
inc
sbb
clc
sub
adc
and
add
fs
jmp
sbb
jl
pop
cld
push
inc
popf
lock
push
pop
jg
sub
xchg
mov
pop
cmp
mov
out
inc
out
adc
xchg
jb
movsb
cmpsl
in
xchg
cld
sub
jo
aam
add
in
cmp
cmp
in
mov
call
mov
mov
add
cmp
mov
iret
add
cli
dec
cmp
sbb
or
shl
fnstcw
mov
addr16
test
sbb
out
jp
add
notl
fs
sarl
loope
sbb
js
call
push
mov
dec
jmp
dec
mov
adc
fwait
jl
xchg
pop
xchg
sbb
dec
enter
scas
push
adc
hlt
cmp
imul
aas
xorb
pop
cmp
cmp
cwtl
std
pop
inc
jo
sub
cmpl
lods
sbb
push
jae
sub
inc
cltd
cld
mov
aas
cmp
lods
push
lock
cvtdq2ps
hlt
jae
shr
jl
rcrb
not
mov
push
insb
push
aam
pop
cld
incb
lret
repz
push
add
mov
faddl
push
xor
and
pop
outsb
stc
mov
jge
dec
and
mov
icebp
in
aas
js
push
xor
push
ss
gs
cld
js
mov
or
insl
sti
xchg
dec
aas
lahf
inc
pushf
test
jae
mov
pop
and
mov
aad
jecxz
push
mov
data16
mov
sub
test
ficoms
xor
mov
sub
mov
lcall
pcmpgtw
push
fisubrl
sti
dec
mov
sbb
mov
adc
add
push
push
jecxz
adc
repz
and
pop
ret
in
cwtl
and
or
inc
adc
out
xchg
jns
mov
jae
mov
lret
cmp
jmp
nop
push
fldenv
cmc
add
dec
mov
lahf
divb
cmc
xchg
repnz
cmp
fucomip
and
rcr
popl
mov
mov
adc
adc
shl
mov
cmp
sub
lea
scas
insb
xchg
add
fimuls
jbe
mov
push
shlb
push
xchg
pop
sbb
jge
insb
xlat
xor
jae
sbb
pop
xor
mov
jmp
inc
fcoms
xchg
jg
out
roll
lret
mov
dec
cmp
cli
sbb
lock
in
mov
cmc
insb
dec
pop
ja
stos
scas
dec
xor
andl
mov
dec
scas
and
xor
rolb
lock
add
int3
push
cmpl
stos
addr16
push
mov
lds
pop
sbbb
push
xchg
push
fimuls
inc
or
jo
push
gs
xchg
mov
inc
cmpl
push
pop
add
shll
mov
insl
lcall
xchg
sbb
sbb
xchg
xor
insl
es
in
fsubrl
mov
int
icebp
ljmp
in
lods
jns
cmpsb
mov
push
sbb
sahf
inc
mov
lret
add
xor
jnp
mov
incb
aad
out
adc
xor
loop
pop
fstp
dec
mov
fwait
pop
into
add
aas
mov
xchg
scas
movsl
lds
pushl
dec
clc
sbb
cmp
addb
jecxz
sbb
pushf
daa
out
cmp
and
pop
sub
rcll
subl
lds
xchg
sbb
mov
pop
movsb
adc
pop
and
push
jae
fs
cmp
jo
cld
in
loopne
push
mov
xchg
shlb
repnz
pop
sub
imul
incb
mov
inc
popf
fildll
xlat
int3
leave
fidivrs
xor
cltd
sbb
mov
pop
mov
fisubl
and
ss
push
inc
cld
aas
or
aad
inc
add
cmp
outsb
lret
leave
push
push
jg
cmpsl
ss
cmpsl
or
mov
js
call
popa
call
mov
inc
mov
ds
cld
or
mov
rolb
adc
sbb
and
xchg
xlat
stos
and
in
jnp
mov
imul
push
mov
pop
iret
cltd
mov
xor
leave
mov
outsl
inc
je
pop
dec
add
jns
pop
ret
pop
push
sbb
push
inc
pop
push
lret
add
stos
push
frstor
cmp
pop
mov
xchg
mov
push
das
or
insb
les
test
add
sahf
mov
arpl
or
push
adc
cmp
jp
jge
adc
mov
in
push
pop
in
cli
cwtl
xchg
das
sbb
ja
lret
test
push
mov
minps
inc
in
shlb
stos
pusha
daa
sahf
cmp
mov
inc
out
stos
mov
sbb
out
cmp
xchg
push
xor
mov
cmpsl
xchg
fdivr
data16
cmpsl
hlt
dec
pusha
inc
stos
cmp
pop
cmp
nop
lea
and
push
add
jbe
pop
cld
mov
aas
jmp
fcompl
push
dec
jmp
pop
xchg
test
inc
cmp
std
mov
int3
aas
lea
jmp
mov
pop
jp
lret
pop
push
cmpb
cmpsl
ljmp
inc
mov
xor
jns
int3
pop
xchg
sti
ret
in
ljmp
test
lahf
ds
inc
lcall
cld
mov
push
loope
sbb
movsl
ljmp
pushf
jge
mov
jmp
pop
aas
outsl
pop
imul
and
cmpsl
mov
sbb
push
jecxz
mov
adcb
sbb
ja
push
xchg
sub
pop
dec
add
inc
loop
inc
adc
pop
mov
sub
push
adc
imul
sbb
outsl
cmp
inc
sub
sbb
lea
mov
std
icebp
int3
flds
leave
inc
adc
jge
sbb
add
es
je
fidivs
and
sub
mov
push
popf
mov
mov
stos
loopne
mov
shlb
pushf
movsl
dec
mov
mov
sti
inc
sarb
in
stos
shll
data16
add
pop
and
lea
or
sub
lcall
ss
mov
mov
xlat
addl
mov
mov
and
jecxz
loopne
aaa
pop
insl
outsl
sub
xchg
dec
rcrl
cs
jo
les
arpl
aas
jge
ret
push
or
pushl
sub
pop
jmp
jnp
imul
call
scas
call
xor
mov
or
xor
scas
lret
aam
cmp
xchg
jecxz
jg
ja
mov
mov
jmp
in
or
mov
inc
xor
nop
add
loop
sbb
cmp
jmp
fsubl
dec
sbb
cli
dec
popf
mov
push
imulb
jp
pop
or
pop
mov
push
xor
loop
lret
das
cld
imul
in
das
mov
inc
mov
lods
fcompl
in
cmpsl
ret
incb
inc
sub
and
dec
or
and
xchg
inc
pop
dec
cwtl
dec
imul
jo
sahf
xchg
push
fmull
pusha
fildl
pop
push
cwtl
test
cmp
cmp
lret
lret
lods
xor
sub
xchg
mov
clc
pop
push
cs
pusha
add
cmp
jne
dec
test
loopne
mov
dec
push
lret
push
test
lock
loope
repnz
in
inc
loop
fdivrl
mov
ds
jb
popf
daa
push
lret
movsl
add
test
bound
xchg
adcl
jno
test
int
jb
loopne
dec
push
adc
stc
pushf
clc
xchg
pop
out
inc
icebp
fs
xchg
mov
xchg
roll
dec
mov
leave
add
mov
das
arpl
out
and
cmpsb
pushf
lahf
xchg
sub
arpl
ret
mov
sub
jecxz
arpl
mov
fadds
push
jp
std
xor
push
pop
jl
dec
xchg
inc
sub
push
mov
scas
jne
adc
inc
mov
jmp
fcomip
int3
ret
or
cmp
fnsave
xor
mov
adc
clc
push
or
filds
and
sub
mov
in
adc
andl
mov
inc
pop
daa
xchg
cmp
adc
shrb
jp
xor
filds
xchg
inc
sbb
push
ficoms
testb
lods
in
out
add
cmpb
push
lods
ljmp
in
lods
lds
dec
mov
push
push
dec
xor
nop
push
fs
adc
xchg
andl
sbb
mov
outsl
out
fbstp
mov
mov
inc
icebp
mov
inc
subl
lods
push
mov
fimull
icebp
js
jno
shr
push
movl
je
movsb
or
cli
or
pop
ja
sbb
fwait
and
push
loop
imul
das
rclb
std
mov
mov
call
icebp
sub
ret
adc
push
add
xchg
mov
cli
cmp
add
xor
jl
inc
popf
sbb
loop
push
les
lahf
dec
fidivrl
mov
arpl
cmp
aad
push
or
jb
aam
push
nop
xor
enter
icebp
push
jo
add
pop
sub
xor
clc
jl
jae
sbb
in
in
add
out
ficomps
gs
cld
xor
aas
xchg
add
es
jbe
sub
imul
mov
pushf
and
aam
scas
test
mov
dec
xor
mov
xor
daa
pop
and
or
rcrl
inc
push
adc
shrl
push
push
mov
mov
xor
cmp
mov
popf
mov
popf
outsb
xlat
lods
int3
iret
xor
je
aas
dec
mov
arpl
nop
je
bound
adc
cwtl
jg
sub
push
pop
sbb
mov
jecxz
sahf
aad
out
push
stos
xchg
pop
sub
dec
aad
push
ret
mov
js
in
xor
pop
ficompl
jne
add
ds
xlat
jp
mov
jle
inc
jmp
ljmp
addr16
es
cmc
std
lods
mov
pop
lds
frstor
and
out
dec
sahf
test
popa
and
int3
fnstcw
js
outsl
cmp
daa
push
cltd
xor
gs
sbb
adc
popf
push
add
lahf
sub
mov
int3
jb
xlat
sub
outsb
stc
and
popf
out
sub
jge
ret
cmp
mov
clc
push
inc
test
mov
jle
cs
xor
xchg
fisubrs
icebp
out
cmpsl
inc
add
lds
xorl
subb
sub
pop
fwait
mov
xor
mov
ficoms
jmp
mov
imull
push
jns
inc
fsts
mov
xor
call
cmp
add
pop
adc
push
mov
adc
iret
xor
cmp
adc
push
in
sar
mov
test
mov
ja
adc
fwait
adc
outsb
push
sbb
fiadds
test
jne
cli
cli
push
fimuls
push
or
inc
mov
add
jl
jmp
and
jnp
jo
cmp
rcll
scas
fdivs
mov
or
hlt
adc
orl
fsubr
cmp
dec
and
xor
xchg
lock
call
push
daa
push
cmp
in
add
xor
fists
push
stos
xchg
les
cld
add
in
loop
sbb
imul
aaa
imul
movl
aas
push
sub
in
jbe
pop
outsl
push
xchg
mov
test
sbbb
in
out
lcall
xchg
jb
sarl
scas
lahf
pusha
das
sub
imul
arpl
pusha
dec
call
mov
xchg
sahf
pop
sbb
inc
bound
fnstenv
aad
loopne
mov
icebp
fidivs
pop
and
shrl
das
in
cmc
leave
stos
ffree
mov
aad
js
jmp
cmp
std
xchg
and
ret
movsb
repz
faddl
push
jge
ljmp
fs
lods
loope
mov
cmp
js
and
dec
in
lock
mov
sti
sub
mov
inc
mov
mov
cmpsb
sub
arpl
sub
into
lahf
sbb
dec
mov
nop
test
dec
outsb
pop
je
rolb
pop
mov
or
push
test
mov
add
out
repnz
bnd
cmpsb
cmpsb
mov
adcl
pop
repnz
and
mov
inc
pop
mov
movsl
sub
dec
imul
mov
aaa
inc
into
imul
call
sti
cmp
aaa
mov
xor
mov
ds
jmp
adc
sahf
jecxz
mull
jb
xchg
bound
xchg
outsb
loope
inc
xchg
jecxz
mov
sub
or
andl
dec
mov
add
dec
add
ljmp
push
pop
xchg
jne
push
lret
notl
and
sub
add
cs
mov
sarb
mov
jmp
mov
pop
jmp
or
movsl
mov
mov
and
jo
push
sbb
cs
mov
mov
pop
inc
outsb
frstor
xchg
aas
pop
cmp
fs
inc
ds
sub
es
or
adc
xchg
push
or
ficoml
and
sbb
pop
imul
insb
or
clc
or
lods
ret
pop
xchg
dec
rcrl
push
imul
ficompl
mov
cmpsl
sub
xor
jg
out
or
push
aam
ja
cltd
jmp
ss
les
mov
add
aaa
cmp
sub
and
xchg
iret
lods
cmp
jge
or
push
adc
pop
mov
jo
in
sbb
movsl
xor
jbe
jp
ss
gs
lock
fnstsw
imull
jge
sbb
dec
iret
cld
mov
mov
dec
add
push
jmp
jo
addb
sbb
test
movsl
cmp
lods
in
imul
jmp
ds
mov
popa
cmp
sub
dec
inc
outsl
fcomps
in
mov
cmp
sub
cmpsb
jle
stos
sbb
outsl
xor
pop
push
inc
cmp
data16
leave
negb
sbb
int3
mov
xor
jo
mov
cmp
iret
xchg
lds
cmp
push
xor
inc
jecxz
fildll
dec
xchg
or
xor
push
cmp
inc
sub
negw
loopne
xor
test
fisubrs
push
popa
negb
addr16
mov
lret
push
pop
jno
adc
mov
sarb
adc
add
mov
insb
push
and
or
push
sbb
jg
or
std
addr16
lea
xor
lea
xor
popa
leave
mov
push
push
xchg
jge
push
aas
xor
xchg
in
mov
mov
jb
addr16
xchg
jae
xchg
loop
inc
aas
and
fwait
test
ret
movsb
xchg
inc
pop
xchg
sbb
inc
insb
test
sahf
mov
out
pop
lods
cmp
or
xor
add
mov
pop
and
ret
jecxz
out
imul
cmc
pop
or
cmc
xchg
jmp
xchg
push
data16
dec
pop
js
loop
movsl
enter
dec
sti
fdivl
mov
mov
out
fcoml
xchg
jo
fiaddl
aaa
repnz
mov
xchg
loopne
fsubs
xchg
in
jb
hlt
mov
mov
cmc
cltd
inc
faddl
popf
adc
call
mov
mov
sbb
inc
lcall
sub
aaa
scas
mov
sbb
out
jae
jecxz
add
ss
add
push
xchg
fldcw
andb
ret
scas
into
mov
adc
dec
sub
sti
add
sub
xchg
les
mov
in
xor
insl
fisttpl
adc
loopne
sub
std
fdivr
push
pop
sub
xor
out
scas
xchg
es
js
outsb
and
dec
sub
dec
pop
test
xchg
pusha
and
mov
dec
and
fcmovnu
xchg
jl
gs
or
pushf
stc
cltd
mov
movsl
mov
jne
jp
mov
and
adc
imul
out
sti
pop
jno
filds
pop
pop
pop
mov
or
or
aam
mov
and
lea
mov
dec
push
add
ds
jo
rcr
lcall
jne
mov
test
lret
sbb
jle
arpl
jp
xlat
loop
adc
sarl
hlt
in
rcrb
fcoms
cld
xor
loope
shrb
xchg
lcall
into
mov
adc
push
loope
cmpl
roll
loopne
xchg
or
les
xchg
push
or
arpl
ja
dec
shlb
pushw
sti
sarb
test
sbb
mov
pop
adc
fdivp
ss
pop
in
pop
sbb
sbb
aam
lods
inc
enter
das
into
aaa
xor
out
mov
or
push
mov
inc
pushf
jmp
in
jns
repz
mov
cmp
fbstp
jae
cmp
add
adc
stos
out
daa
lds
into
inc
mov
jno
dec
add
cmp
setb
fisubs
loop
pop
out
icebp
addr16
lcall
imul
lea
xor
xchg
push
jecxz
and
mov
lret
rorb
push
push
in
adc
or
mov
out
fs
arpl
sub
test
dec
add
ret
lcall
js
shlb
mov
inc
cmpsl
in
inc
mov
ret
arpl
sbb
in
xchg
dec
test
cmp
lret
in
dec
cli
cld
sahf
pop
or
outsb
jcxz
inc
mov
xchg
in
in
mov
push
inc
pop
in
mov
add
js
fistl
xor
xor
insb
scas
jo
push
xchg
sti
divl
mov
adc
pusha
xchg
mov
push
jnp
cld
pusha
jge
rorl
or
insb
mov
jno
sub
push
sub
xchg
cmp
shrd
sub
inc
dec
jecxz
push
imul
popf
mov
xchg
jmp
sub
out
in
test
bound
xor
cmp
arpl
mov
jmp
cltd
hlt
inc
repnz
or
adc
xor
and
dec
mov
fists
idivb
lret
daa
push
cli
fucomp
dec
icebp
das
mov
shrb
sub
lds
add
idiv
fldcw
roll
nop
testb
aad
jmp
lock
std
mov
jne
push
dec
cli
out
pop
dec
pop
lret
outsl
adc
stos
push
jmp
je
adcl
xorl
mov
mov
imul
jmp
pop
je
sbb
and
lcall
cmp
shlb
adc
and
mov
adc
cmpsb
jp
sub
pushf
push
popa
test
or
in
sbb
int3
dec
pop
outsl
sbb
call
and
add
dec
lret
dec
jae
iret
jnp
push
movsl
pop
pop
gs
xor
sahf
xchg
inc
fsubs
cmc
es
or
mov
jne
cmpsl
js
mov
popf
insb
pushf
imul
sbb
xor
pop
add
fwait
xlat
cmpsl
sub
and
adc
pop
mov
mov
dec
and
es
xchg
cmp
and
call
mov
mov
jecxz
es
cmp
pslld
imul
mov
and
enter
adc
cmp
popf
cmc
and
das
insb
sbb
adc
mov
loop
iret
rclb
jmp
mulb
cmpsl
mov
out
xlat
pop
lea
cwtl
add
push
mov
sbb
jnp
jg
call
cwtl
orl
insb
dec
outsl
mov
loop
adc
pop
cld
loope
hlt
sub
loop
aaa
popf
push
in
adc
jle
and
adc
jb
lret
cs
cs
fs
inc
int3
xchg
and
mov
cltd
push
sub
movsl
and
push
movsb
movl
mov
hlt
mov
iret
push
inc
push
enter
lods
dec
mov
lahf
mov
fwait
pop
testb
out
enter
rorl
jecxz
aad
ret
pop
or
nop
loopne
add
repz
sbb
jp
ret
movlps
je
clc
dec
out
in
arpl
push
jnp
out
ss
es
adcb
in
cmp
ds
cli
outsb
cmp
pushf
sbb
push
out
mov
sbb
loope
loope
shlb
adc
sub
mov
jno
ljmp
jecxz
movsl
lahf
aaa
fmull
pop
aaa
add
xchg
xorl
mov
mov
push
adc
push
jns
aaa
add
sbb
and
imull
jge
sbb
mov
loope
pop
sti
adc
jl
neg
icebp
int
xchg
loop
adc
stc
out
jle
jnp
pop
push
xchg
lret
and
imul
sbb
mov
movsl
adc
inc
pop
pop
fadd
pusha
cld
arpl
stos
dec
fdivr
or
mov
cld
adc
sbbb
dec
fldl
sbb
jb
mov
push
jp
out
push
int
leave
xor
fwait
mov
les
in
in
push
out
or
lret
sbb
repnz
loop
icebp
sub
mov
ud0
cmc
sbb
pop
stos
dec
xchg
jg
push
in
stos
jmp
es
rcrl
and
xor
xor
jns
notl
xchg
inc
rcl
mov
or
in
xchg
jo
push
push
dec
hlt
xor
mov
xor
mov
lcall
movb
ss
fmul
lock
push
sub
push
and
xchg
lahf
out
insb
adc
xchg
mov
lock
imul
insl
lret
test
jnp
in
mov
jo
sub
test
mov
cmp
lahf
in
or
or
lea
rorl
jle
cld
out
imul
ret
pushf
mov
enter
subl
lods
sbb
ja
in
xlat
pop
notb
test
pop
scas
adc
fstpl
addr16
test
loop
sti
lock
xlat
adc
push
out
inc
addb
cmp
nop
gs
addb
cmc
inc
imulb
leave
pop
out
imul
mov
push
cld
pop
mov
mov
outsb
lods
popa
clc
jns
adcl
jae
fimull
in
xchg
scas
cwtl
repz
xor
pop
mov
stos
bound
shrb
ja
movsl
les
fsubl
aad
jecxz
adc
lods
lock
loope
aaa
aas
adc
cmp
clc
and
movsb
jl
leave
push
in
neg
xorl
cwtl
push
dec
stc
jmp
xchg
and
cmpsb
rclb
jge
or
daa
pusha
mov
mov
cmp
or
jbe
popl
mov
inc
xchg
and
or
push
gs
lcall
cli
clc
push
add
shlb
pop
pop
sub
add
repnz
cltd
and
enter
sub
xchg
icebp
xchg
fcoms
jbe
jp
or
adc
push
mov
les
das
cmc
pop
jp
sub
jne
mov
jle
mov
jmp
lea
mov
jmp
add
js
pop
fucomp
push
aas
pop
pop
inc
inc
adcb
xor
lea
add
aas
xchg
pop
ja
sub
sub
sbb
test
push
xor
clc
xor
push
ds
mov
mov
and
cmp
rorl
adc
push
fwait
shrb
xchg
mov
test
stos
add
pop
in
and
mov
call
sbb
mov
ja
adc
mov
icebp
in
fdivs
and
push
loop,pt
add
pop
sbb
sahf
pop
fstl
loop
mov
cmp
fsubl
inc
lock
jp
sub
syscall
popa
inc
fnstenv
scas
addl
xchg
and
je
sub
sub
cltd
or
ljmp
xor
add
or
add
popa
fiadds
test
or
jmp
xorl
in
push
repz
cld
add
or
mov
mov
inc
out
lret
ret
std
imul
push
clc
sbb
cltd
addl
cvtdq2ps
jns
shrl
inc
xlat
sbb
fldl
xchg
sub
scas
sub
pop
inc
outsb
dec
sbb
imul
das
cmpsb
es
adc
mov
adc
subb
lcall
add
ss
ficompl
lds
mov
jae
xchg
adc
ss
mov
pop
clc
dec
jmp
inc
adc
iret
mov
and
jno
shll
xchg
cmpsl
mov
sub
iret
push
hlt
fcomi
sub
addl
jl
btc
test
sub
xchg
lret
pop
cmp
test
mov
andb
pushf
sub
xchg
fnstenv
fcompl
call
lret
lea
divb
aaa
xor
inc
or
inc
xchg
incl
imul
mov
lcall
or
fsubrp
mov
sbb
mov
hlt
incb
rep
ret
popa
lret
sub
jle
sar
push
xor
testl
or
inc
xor
pop
mov
out
icebp
inc
out
pop
and
sub
imul
outsl
call
gs
mov
sub
cmp
daa
push
out
mov
sbb
outsl
xchg
dec
jp
movsl
or
out
mov
les
and
add
ss
mov
enter
dec
dec
adc
mov
xor
xor
or
sbb
loop
mov
xchg
mov
inc
or
sub
scas
repnz
xor
or
and
xchg
negl
into
xor
test
sahf
icebp
lret
mov
loope
les
sarw
xor
mov
sbb
lea
xchg
addr16
xchg
ds
pop
mov
add
pop
cmpb
fildl
fs
inc
jmp
jb
fsts
aaa
mov
jl
out
dec
or
lcall
sub
or
cmpb
mov
cmp
stos
mov
pop
pop
sbb
fildl
test
hlt
push
mov
hlt
shlb
inc
pop
lods
push
ficoml
arpl
mov
jmp
xchg
mov
je
xlat
mov
movsl
das
lods
je
repnz
inc
gs
or
pop
mov
push
loope
loope
lahf
int3
into
cmp
imul
sbb
arpl
movsb
mov
test
pusha
leave
jb
stos
push
xchg
sub
pop
cli
test
cmc
mov
pop
pop
or
dec
int
push
and
iret
int3
mov
dec
in
mov
cmp
out
lahf
and
push
stc
push
push
pop
lods
push
dec
bound
xor
and
xchg
mov
xchg
popa
rolb
mov
cmp
stc
rorl
lret
into
mov
shl
stos
cmc
push
leave
les
pop
ss
lods
or
push
cmp
pop
xor
imul
pushf
sbb
and
mov
mov
int3
nop
and
cmc
jb
dec
ljmp
inc
bndldx
scas
rcll
mov
call
and
bnd
xchg
xchg
lds
cld
scas
mov
xor
mov
cmp
cmp
mov
ljmp
push
insl
out
mov
test
dec
mov
sub
jecxz
mov
arpl
sbb
out
push
jb
aam
lds
aad
test
add
lret
sbb
shll
cltd
jge
adcl
filds
push
inc
out
add
leave
imul
ds
jbe
push
mov
cmc
jge
fbld
mov
pushw
std
sbb
xchg
xchg
stos
add
xor
xor
jbe
les
pop
imul
push
mov
jecxz
lods
mov
push
xlat
pop
test
inc
mov
pop
mov
into
outsl
dec
sub
mov
sub
and
pop
icebp
les
gs
sbb
leave
push
cltd
enter
jb
test
inc
or
ja
fwait
jl
les
mov
inc
pmulhw
sub
mov
ret
sub
add
repnz
cli
or
mov
icebp
loop
push
inc
cs
fcmovne
sub
daa
js
mov
or
lret
lods
sub
nop
rorl
add
sbb
mov
aas
dec
push
sbb
push
cmpsl
pop
jge
inc
xchg
les
add
int
inc
inc
dec
leave
cld
lods
fldl
jmp
mov
mov
cs
sbb
aad
cmp
push
mov
aaa
sub
je
cli
mov
jbe
pop
or
mov
fildl
cmc
sbb
iret
in
incl
mov
leave
dec
sub
mov
mov
or
icebp
sbb
mov
cmpsb
push
push
loope
and
jge
sahf
cmpsl
cmc
mov
and
jmp
adc
subl
into
mov
push
add
dec
mov
stc
lds
xchg
pop
xor
test
or
adc
js
arpl
inc
and
test
outsl
xchg
movsb
dec
sti
aaa
or
imul
lea
mov
or
mov
jle
and
std
sbb
mov
iret
aad
lods
mov
rclb
cmp
je
das
int3
xchg
pop
das
sbb
lods
jecxz
jno
movsb
addr16
imul
rcrb
xor
push
int
inc
add
aam
and
fistpl
cltd
or
std
push
imul
cmp
sbb
jno
and
mov
cmp
mov
nop
pop
or
int
add
in
lods
shrl
mov
std
or
mov
iret
movsl
inc
aam
fidivrl
iret
add
cltd
and
push
push
jecxz
lret
mov
insl
mov
push
adc
das
aaa
pop
scas
icebp
and
inc
data16
jmp
jns
cwtl
mov
outsb
lret
andb
jbe
jecxz
push
or
in
je
stos
push
dec
mov
test
pop
sub
adc
or
das
xor
dec
dec
jmp
ficomps
mov
add
jp
roll
fnstenv
jne
sub
add
test
dec
inc
cld
inc
in
lods
and
gs
push
push
scas
inc
popf
or
pushf
shrl
xchg
shlb
push
cwtl
jle
pop
addb
add
xor
shlb
ret
xchg
enter
lods
push
push
jmp
or
lods
repz
push
in
shrb
lods
push
clc
xlat
sbb
leave
mov
mov
jbe
add
lahf
sub
dec
lret
xchg
pop
push
lahf
xchg
mov
cmp
je
push
mov
add
push
in
push
pop
xchg
sbb
mov
jp
mov
xor
add
push
sarl
dec
test
imul
and
dec
hlt
sbb
notl
out
mov
imul
sti
jecxz
push
jnp
je
cs
push
jmp
xchg
jecxz
dec
iret
stos
add
jl
push
cmp
jecxz
jmp
cs
lds
cmp
sub
hlt
cmpsb
dec
lahf
out
and
les
xchg
movsb
mov
mov
cmp
add
sub
in
cmp
hlt
push
les
pop
rolb
popa
or
mov
lds
add
mov
push
sti
add
mov
cli
push
lcall
ret
xchg
xor
and
adcb
fistps
sbb
or
jg
pop
adc
lods
dec
outsl
push
clc
jmp
insb
add
push
mov
pop
std
adc
loop
sbb
ds
outsl
mov
jle
outsl
inc
xor
ss
ret
int3
push
jno
pop
or
das
icebp
call
sub
or
movsl
jmp
cmpsb
nop
mov
icebp
inc
andb
movsl
fsubl
xchg
mov
pop
jmp
dec
hlt
stos
and
or
mov
add
fimuls
and
clc
jno
pop
fistpll
mov
dec
mov
add
xchg
iret
adc
push
arpl
fsubs
mov
ficoml
arpl
je
shlb
cmp
push
pop
pop
sbbb
jle
or
test
mov
jnp
outsl
jb
cli
pop
push
enter
or
and
cltd
jns
mov
inc
dec
les
insb
lock
add
jmp
or
xor
scas
data16
mov
fstpl
jae
sbb
xchg
ja
or
mov
hlt
xchg
fsts
mov
lea
fdivr
in
sbb
test
lods
pop
xchg
scas
es
xor
int
notb
in
scas
cld
add
repz
xor
jmp
clc
mov
sub
adc
jge
jg
mov
call
cmp
jae
mov
rorb
stc
in
add
movsl
mov
subb
out
xchg
sbb
or
sarl
push
jns
lret
jmp
mov
jns
cmp
inc
push
cwtl
mov
cmp
cmp
adc
jbe
into
neg
imul
scas
inc
pop
frstor
test
loope
rcr
pop
sti
mov
shll
ret
test
ficomps
cs
cmpsb
dec
imul
into
aaa
fmull
xor
loopne
jne
pushf
mov
nop
xor
call
mov
int3
insb
or
add
test
push
jle
test
dec
or
pop
mov
outsl
movsb
mov
loopne
sub
js
test
rcll
pop
pop
shrb
mov
push
popa
rorb
imul
dec
cmp
jo
cmp
sub
pop
push
rorb
in
inc
xor
sbb
in
jb
cld
dec
shrb
add
or
inc
leave
in
cli
lret
inc
sti
iret
dec
or
xor
std
cmp
in
xor
lcall
mov
xchg
pusha
lds
sbb
ret
mov
addr16
fcomp
mov
stos
adc
lcall
clc
inc
sbb
jno
fdiv
push
dec
push
jp
pusha
jle
popf
pusha
cmc
dec
jg
nop
stos
push
mov
and
jg
cmc
or
std
rclb
pop
and
sbb
shl
fwait
xor
adc
push
xor
jl
mov
pushf
pushf
adc
ffree
adc
lahf
and
les
dec
mov
addr16
jl
lods
mov
or
bound
sbb
jp
stos
cs
and
cmp
dec
push
js
fnsave
pop
jns
fdivrs
lret
lods
je
pushf
shr
cwtl
repz
pop
pop
or
cmp
dec
push
add
cmp
lahf
add
mov
pusha
mov
jno
jnp
push
or
lahf
sbb
dec
mov
mov
mov
push
inc
arpl
inc
or
mov
or
adc
sub
cmp
add
fisubs
loopne
mov
int
xchg
mov
paddb
inc
mov
jae
adc
inc
movsl
push
cltd
mov
adc
jb
xchg
lret
inc
dec
mov
or
push
mov
pop
call
xchg
les
cmp
out
jnp
cmp
loope
vcvttpd2dqy
nop
dec
adc
xchg
pop
push
lea
icebp
ficoms
xchg
dec
jecxz
lret
es
arpl
mov
dec
stc
out
in
inc
push
ljmp
insl
dec
cmovge
addl
cltd
pop
loop
shlb
popf
jg
cli
sub
push
mov
xchg
cld
and
lahf
cmc
inc
sahf
add
adc
and
shr
insb
and
mov
pop
mov
popa
xor
mov
sbbb
out
std
shl
sti
test
dec
scas
inc
dec
std
in
cli
sbb
pop
jmp
push
subb
pop
pop
dec
aas
stos
dec
xchg
test
or
std
clc
orl
in
js
mov
and
mov
pop
adc
rcll
inc
mov
pop
gs
sti
xor
popa
arpl
pop
in
cmc
sub
jbe
subb
lods
cmp
inc
mov
or
repnz
test
fmull
and
pusha
mov
sbb
fists
xchg
pop
daa
pop
adcb
push
sub
jge
add
movsb
int
mov
mov
call
dec
xor
jno
adc
stc
cmpsl
mov
clc
dec
icebp
out
gs
inc
cmp
aam
loope
jmp
dec
jbe
jmp
aam
js
sbb
es
xchg
into
out
inc
ljmp
jno
enter
add
sahf
pop
sbb
dec
ljmp
sti
and
mov
jnp
push
mov
sub
mov
add
and
sbb
jmp
leave
and
out
sbb
pop
cmpsb
xchg
movb
inc
dec
les
inc
or
stos
sub
jb
inc
mov
rcrb
iret
imul
xchg
dec
orb
and
ss
fwait
mov
arpl
sub
outsl
mov
out
xchg
imul
sub
sbb
dec
jge
fbld
fwait
sub
add
mov
mov
aad
pop
mov
pop
jge
mov
push
add
les
lcall
sub
mov
imul
jb
sub
loope
push
jl
push
cltd
pop
out
incl
test
xchg
jb
fucomp
and
xor
mov
jo
int3
loope
adc
push
lret
mov
mov
hlt
mov
cvttps2pi
mov
hlt
mov
push
jno
jp
cmp
lea
mov
je
rcl
lahf
sbb
outsb
fsubrs
pop
out
cmpsb
lea
jl
mov
iret
cmp
add
mov
pop
jecxz
imul
jge
mov
int3
sub
adc
fucomp
pop
or
in
cltd
test
dec
and
xchg
jns
nop
add
enter
fcomps
jmp
lea
adc
leave
mov
out
popa
sahf
mov
cld
cmp
iret
jae
xchg
les
xchg
sbb
pop
push
shr
pop
inc
pop
mov
hlt
dec
inc
lcall
pop
stc
push
push
mov
add
adc
sub
stos
les
jp
xor
es
push
stc
cmp
jge
mov
cmpsb
es
in
add
popl
cmc
aaa
dec
cwtl
sti
and
add
mov
add
pop
in
jno
cmpl
mov
mov
add
rcl
push
inc
decb
int
and
ljmp
mov
add
pop
call
mov
ss
pop
adc
leave
sbb
fisubrl
sbb
ret
aam
test
pop
fcom
dec
cmp
movl
shrb
imul
push
cli
loop
and
add
xchg
sub
test
or
in
dec
pusha
xchg
cwtl
or
jno
push
and
decb
cmp
dec
les
gs
inc
pusha
rcll
shrb
cltd
add
pop
pop
hlt
outsl
mov
xor
fistpll
outsl
jbe,pt
stos
out
lret
pop
jp
mov
and
test
cwtl
sub
xor
mov
push
dec
sbb
out
clc
dec
xor
das
cmpsl
xchg
cltd
push
mull
dec
rcl
mov
stos
jl
hlt
scas
cmpl
xchg
stos
and
les
lret
sub
cs
push
jl
cli
sbb
bnd
mov
push
mov
cmpsb
jge
inc
aaa
pop
les
sub
and
into
nop
cmp
mov
sbb
out
loop
or
mov
mov
test
cmp
in
decl
pushf
ffreep
xchg
pop
shll
cmpsb
orl
sbb
push
cmp
adc
mov
int
xor
push
inc
inc
cmpsb
clc
xchg
and
dec
pop
ljmp
out
and
mov
or
inc
fldcw
push
rorl
stos
xchg
std
aaa
cmp
int
cld
pop
gs
pop
and
imul
push
jg
jne
aad
adc
data16
cmp
popf
xor
scas
fimull
roll
test
shlb
js
add
or
push
pop
add
mov
aad
bound
cld
jbe
dec
mulb
add
sti
test
movaps
pop
roll
xor
push
inc
pop
das
xchg
popa
pop
push
jo
sbbb
mov
lods
mov
scas
imull
fistpll
adc
out
popf
cmp
pop
mov
pusha
lcall
xchg
cmp
pop
add
js
movsl
jmp
jl
les
ja
cmp
mov
int3
add
or
pop
dec
mov
mov
fnstenv
xchg
aam
fists
imul
jg
add
jecxz
pusha
sarl
movsb
pop
jg
or
and
in
sub
jg
movsb
movsl
fistpl
jle
jmp
or
jns
repnz
pop
inc
iret
aaa
xchg
push
inc
sub
inc
mov
and
fwait
aaa
lret
push
mov
repnz
in
lret
mov
pop
rcrb
jecxz
push
jge
fstpt
popa
ret
pop
loopne
popf
xchg
jns
rcrb
fwait
mov
fisttps
pusha
fs
add
arpl
mov
mov
dec
pop
arpl
adc
in
sbb
xorl
jnp
loopne
xchg
inc
push
pop
xchg
fists
out
pop
xchg
popa
test
lcall
gs
sub
ffree
jmp
inc
scas
mov
xor
jns
sahf
dec
jns
inc
sbb
mov
call
inc
in
pop
jp
xor
inc
add
cli
adc
pop
mov
adc
xor
add
dec
or
jp
jle
xor
lret
and
div
fbstp
and
std
sub
rcrb
xor
addb
mov
inc
pop
subb
icebp
idiv
pop
ljmp
stos
pop
cli
insb
or
scas
or
jp
add
push
pop
fucom
sub
adc
pushf
mov
ss
test
adc
inc
jns
loope,pn
push
adc
aas
aam
inc
addl
add
sub
jle
cwtl
and
mov
movsl
jp
nop
sbb
sub
mov
loopne
pop
push
mov
push
push
js
inc
push
mulb
nop
xor
sahf
jns
test
cli
adc
dec
cmp
fs
sbb
push
mov
adc
pop
jmp
xchg
mov
sub
imul
sbb
pop
or
mov
mov
and
dec
xor
mov
xchg
mov
insb
test
cmpsb
mov
jns
les
inc
sbb
mov
data16
out
daa
and
cmpsb
pop
xchg
inc
jecxz
popa
xlat
dec
mov
int3
pop
jnp
or
sti
xchg
add
xchg
in
xchg
xor
into
xchg
push
dec
addl
jg
lods
mov
lock
std
mov
test
mov
xor
out
idivl
and
lahf
aad
subb
mov
mov
repz
fsts
rcrb
loopne
pop
inc
sub
in
adc
push
mov
adc
or
fstpt
lahf
cmp
cmp
jne
sti
sub
ds
loope
push
add
sbb
fcomip
in
and
fisttps
mov
mov
out
movsl
adc
pop
dec
loope
cmp
rorl
mov
imul
push
inc
pop
or
and
dec
dec
popl
adcb
ljmp
ret
push
lods
push
andl
out
sahf
xor
enter
cmp
mov
into
in
inc
add
imul
stos
pop
add
mov
scas
add
xor
mov
lock
insb
mov
inc
xchg
adc
pop
cwtl
cmp
push
dec
cmp
mov
sub
rorl
add
push
loop
cmp
jp
mov
xlat
in
cmp
sub
adc
out
inc
xor
and
in
mov
lea
sbb
inc
loop
mov
sub
out
mov
add
dec
scas
xchg
mov
cmp
lock
jbe
jp
jbe
jb
shlb
push
bnd
dec
jne
pop
cli
pop
pop
cmp
je
jnp
xor
or
dec
test
mov
faddl
xorl
mov
into
lret
jl
mov
adc
cwtl
mov
shlb
stos
sbb
sahf
cmp
into
cmp
pop
lcall
jb
sub
cltd
xchg
lods
and
outsb
or
pop
cmp
inc
sbb
stc
cli
cs
mov
xor
jns
iret
ret
xchg
xchg
arpl
cmp
jge
arpl
sub
sbb
sbb
cmp
or
sti
enter
ret
movsb
sub
imulb
mov
inc
sbb
faddl
enter
gs
xor
cmp
loopne
ss
hlt
sub
repnz
adc
inc
or
push
add
test
stos
sbb
in
ja
into
push
mov
fs
arpl
jmp
pop
js
call
ja
out
std
movsl
scas
pop
icebp
ja
popa
shlb
subl
nop
jmp
inc
xchg
pop
push
or
jno
push
js
sbb
mov
or
mov
imul
test
xchg
pop
mov
in
mov
mov
stos
cli
hlt
or
pop
jecxz
mov
enter
cmpsb
cmpsb
jge
fs
xchg
adc
stc
mov
push
int
push
leave
in
pushf
and
sbb
jmp
jae
pop
add
add
in
pop
adc
dec
jo
or
fs
test
stc
or
mov
push
ficoms
cmp
mov
mov
ror
sbb
push
sub
xchg
jnp
repz
add
pop
cs
pop
and
repnz
in
fs
push
stos
adc
sub
mov
and
jle
xor
mov
jle
les
iret
push
xor
scas
andb
addr16
mov
xor
jae
sahf
lods
test
and
adcl
mov
inc
xchg
inc
popa
idivl
mov
mov
jecxz
shlb
mov
inc
out
dec
inc
outsb
idivb
mov
rcl
xor
loope
in
sub
ffree
aas
data16
adc
push
es
test
stos
lret
sub
popf
fdivs
mov
jns
push
nop
mov
mov
mov
jge
and
dec
pop
jae
das
dec
inc
lcall
pop
int
push
sub
mov
jge
lods
jecxz
or
pop
cld
out
pop
mov
aas
dec
popa
mov
fbld
scas
out
xlat
lods
mov
pcmpgtb
mov
out
aad
shlb
push
jg
hlt
jbe
dec
sub
in
inc
scas
negl
mov
into
bound
sub
popl
xor
jl
push
dec
mov
inc
cmc
mov
scas
push
push
inc
push
mov
or
arpl
cmp
je
aaa
push
fwait
imul
and
mov
adc
je
xchg
inc
jle
mov
jbe
jb
mov
lods
sbb
in
cmp
lds
pop
xchg
mov
repz
and
enter
jns
ss
xlat
cmp
pushf
insl
sub
ja
arpl
adcl
lret
xchg
loop
and
mov
jg
loopne
fwait
stos
xor
and
pop
push
gs
loope
mov
lcall
pop
xlat
dec
ds
jg
mov
inc
push
jg
jl
push
gs
mov
std
push
push
loope
push
fucom
inc
push
sub
lods
shlb
push
and
cwtl
pop
xchg
xchg
scas
push
and
or
push
jbe
push
dec
dec
mov
into
mov
popa
das
bound
add
mov
sbb
cld
sbb
push
or
push
pop
outsl
push
dec
movsb
inc
sbb
cs
hlt
jb
jge
je
and
setae
pop
popa
sub
jmp
cli
out
inc
inc
pop
imul
push
or
push
mov
dec
mov
sub
inc
push
pop
cmp
stos
mov
mov
push
xchg
imul
or
dec
das
addr16
sbb
mov
lea
mov
pop
mov
out
xor
daa
xchg
mov
insl
sti
leave
popf
divb
lock
xor
mov
push
pushf
sbb
fsubrl
dec
int
out
pop
dec
outsl
je
leave
sbb
or
or
dec
mov
pushf
mov
call
xor
cmpsb
xor
popa
int3
cmp
negl
inc
mov
fwait
negl
xchg
insb
les
pop
psrlq
testl
inc
int
inc
dec
hlt
std
lods
lcall
inc
push
nop
pop
movsb
mov
loop
and
sbb
scas
fs
dec
into
imul
mov
cmp
push
pop
add
lret
xchg
orb
lea
scas
arpl
std
rolb
fiadds
pop
int3
push
cmpsl
fidivrs
mov
cmp
addr16
dec
mov
test
xchg
inc
adc
out
inc
pop
adc
xor
lods
pop
repz
fs
cmp
mov
scas
mov
mov
int
lea
mov
mov
movsb
pusha
inc
dec
and
adc
pop
ljmp
fdivrp
dec
imul
push
add
sbb
mov
mov
std
incb
pusha
mov
jp
frstor
dec
sub
xchg
fldenv
js
xor
mov
getsec
sub
sbb
jmp
adc
jne
js
out
dec
test
push
aad
push
out
mov
test
loop
sahf
addr16
push
sub
mov
push
test
and
cmpsb
xor
mov
dec
dec
jmp
add
xchg
mov
mov
ret
cli
mov
lea
test
mov
inc
inc
xchg
into
imul
dec
mov
pop
test
shll
divl
in
shl
in
mov
sub
jmp
cmc
cmp
jle
jl
outsb
xchg
and
cmp
mov
lock
or
shrb
stos
fwait
imul
xchg
popa
sti
xor
push
pop
adc
movsb
shl
rcrl
push
mov
mov
sbb
stos
mov
xlat
cmpsl
rclb
sub
pop
push
inc
insb
cmp
faddp
mov
aad
daa
pop
movsl
pop
xchg
dec
xor
xor
push
sti
or
lahf
pop
lods
add
insl
xor
add
xchg
mov
inc
fisttps
ja
jae
jl
or
xchg
mov
or
outsb
sub
jnp
mov
fadd
and
sbbb
aad
stos
enter
lds
dec
or
and
and
sub
xchg
das
in
mov
mov
lea
jmp
mov
addl
pop
fs
ret
lahf
mov
adc
stos
cli
loope
nop
xchg
lods
sub
cli
in
jmp
addb
xor
xchg
mov
jmp
lds
pop
inc
inc
and
andb
ret
dec
iret
mov
jge
jo
ret
call
mov
pop
dec
bound
cmpsl
cmpsb
adc
inc
cmp
rcl
xor
push
das
lret
mov
push
sahf
sbb
nop
rdtsc
jge
je
cmp
add
out
jbe
xorb
rcrl
jno
adcl
insb
insb
mov
push
ljmp
xchg
cmpsb
lods
mov
sbb
loopne
jno
inc
sub
jge
pop
jmp
push
stc
jnp
xchg
shll
repnz
cmc
adc
jecxz
mov
test
xchg
inc
repnz
sub
lods
cmp
mov
mov
loope
aad
jnp
pusha
insb
mov
inc
jmpw
nop
push
fnstcw
cltd
mov
iret
test
nop
or
imull
into
mov
andl
pop
subl
sbb
xchg
dec
aam
pushf
faddl
popf
push
ficompl
mov
test
cmp
mov
mov
adc
xor
xor
repnz
mov
push
jmp
dec
inc
jle
imul
pop
fcmovb
daa
leave
jno
xchg
adc
mov
mov
aaa
cmpl
jo
xor
daa
pop
xchg
leave
fldl
dec
jecxz
cmc
notb
in
mov
mov
and
pop
inc
jl
stos
xor
jmp
aad
or
idivl
jb
sbb
aaa
pop
frstor
test
sbb
repnz
adc
inc
pop
cs
aad
addr16
dec
sbb
push
dec
xchg
comiss
fmuls
jge
iret
push
cmp
cs
dec
and
imul
jecxz
push
mov
dec
dec
cmp
and
jmp
pusha
sbb
popf
aad
orl
cmp
rcll
jp
imul
mov
xchg
vdivss
test
shlb
dec
ljmp
jle
test
mov
pop
and
scas
push
fmul
int3
inc
jecxz
cli
inc
cmp
add
push
sub
pushf
cmpsl
fwait
pop
sbb
lock
scas
jmp
frstor
iret
cs
dec
aad
aas
call
mov
cwtl
aad
btcl
in
dec
add
sub
inc
push
dec
mov
xorb
mov
mov
inc
dec
movsl
aaa
insb
dec
lret
or
mov
adc
cwtl
aam
jg
ljmp
sub
imul
mov
cltd
mov
mov
icebp
adc
mov
in
les
stc
xchg
push
cmp
pop
mov
subl
and
cmpsb
add
dec
fadd
fcoms
bsf
jo
jo
enter
jno
push
rclb
je
ds
aaa
fcomi
stc
pop
test
sarb
pop
jns
push
repnz
adc
out
sbb
push
and
fmuls
mov
push
or
loopne
test
sbb
mov
hlt
fdivr
loop
jbe
pop
arpl
push
mov
or
pop
adc
js
sbb
cmp
clc
mov
jns
mov
iret
jae
movsb
adc
insb
mov
and
add
in
dec
push
jae
xor
pop
mov
jo
push
movsb
or
jnp
pop
test
out
leave
or
adc
call
sub
adc
cwtl
jmp
icebp
imul
mulb
clc
xchg
mov
jo
lcall
cmp
out
sbb
stos
je
lds
mov
addr16
xchg
and
and
sbbb
push
dec
sub
or
ret
aad
jg
icebp
lods
sahf
or
mov
sbb
aad
mov
cmpsb
mov
insl
mov
sbb
and
pop
js
ljmp
sbbl
xor
into
test
jae
add
mov
cmp
push
leave
push
test
mov
call
imul
mov
cmp
xchg
mov
lahf
push
add
sub
sbb
mov
push
cmc
idiv
jp
push
jnp
pop
sub
lods
std
mov
ljmp
jne
insb
mov
pop
mov
mov
mov
dec
sbb
scas
in
repnz
lahf
icebp
lods
sbb
push
inc
aad
xchg
shrl
inc
int3
out
dec
loopne
jmp
inc
sbb
cltd
je
pop
and
jnp
and
enter
xchg
jb
xlat
std
dec
aam
adc
aaa
cmpsl
mov
out
cmp
sub
push
es
and
inc
not
mov
int3
push
int3
mov
mov
xchg
adc
pop
inc
test
or
mov
and
and
xchg
jle
cmp
stc
fnstenv
xor
sti
mov
ror
fbstp
pop
in
aam
bound
pop
push
sbb
cmp
push
outsb
dec
movsl
stc
and
or
movb
outsl
popa
sbb
push
or
aaa
push
pop
sbb
repz
mov
pop
fwait
out
test
push
arpl
lcall
sbb
mov
xchg
cwtl
nop
mov
cmp
adc
jb
dec
mov
ss
idivb
addr16
sarb
std
pop
inc
lret
fstp
nop
pop
rcll
shrb
or
add
mov
ss
inc
cld
and
jmp
or
js
filds
and
int3
cmp
pop
jbe
out
jmp
adc
mov
pop
insl
in
xchg
mov
scas
push
pop
mov
dec
inc
pop
cli
inc
push
call
insb
adc
testl
mov
ja
xchg
sbb
jb
ret
int
outsb
stos
test
lcall
mov
mov
or
and
dec
dec
daa
and
sub
sahf
out
es
sub
lcall
adc
int
push
inc
mov
jo
pop
dec
sub
fwait
ljmp
rorb
pop
enter
mov
add
pop
lods
shrl
jecxz
push
mov
out
mov
mov
das
stos
or
jle
lds
cltd
insl
cltd
xor
test
decl
adc
jle
inc
leave
cltd
mov
leave
fdivrl
mov
test
pop
pop
outsl
in
in
xchg
xchg
stos
call
inc
arpl
out
gs
push
adc
push
pop
aam
cmp
es
sbb
pop
mov
jl
loop
push
loopne
jmp
aam
js
ret
adc
mov
xor
and
int
loop
lds
xchg
insl
loopne
imul
imul
adc
jo
inc
xchg
inc
or
pusha
rolb
dec
xlat
mov
cltd
cmpl
test
outsb
popa
ja
push
xchg
arpl
adc
xchg
outsl
sti
push
or
sbbb
popf
fisubl
mov
xchg
or
jnp
jl
outsb
int
cmp
jns
stc
push
mov
aad
inc
mov
gs
pop
inc
xchg
enter
lret
push
and
andb
cmp
xchg
and
movsl
int
cmp
push
xlat
loope
sarl
xor
ffree
js
cwtl
inc
add
cmp
pop
push
jle
loop
pop
sbb
lret
adcl
pop
test
arpl
xor
or
push
cmp
dec
push
stos
dec
pop
jl
into
xor
lods
xor
jl
add
pop
mov
lcall
hlt
in
cltd
mov
adc
or
push
and
and
fs
mov
xchg
and
inc
lock
mov
pushf
fcmovnb
js
fdivl
sub
mov
iret
xor
sbb
test
xor
ucomiss
jmp
popa
mov
sbb
aas
adc
hlt
pop
dec
inc
fists
xor
cmp
orb
xlat
jns
loope
loop
fwait
xchg
repnz
mov
mov
or
jl
push
fld
fdiv
lret
stc
hlt
insl
pop
inc
cs
pusha
and
lods
jbe
ljmp
iret
into
lds
lea
cmp
add
cltd
dec
in
dec
and
xchg
adc
push
subl
pop
insb
jge
push
pop
pop
pop
sub
inc
cmp
jae
mov
push
sahf
lods
outsl
rclb
sub
and
xchg
or
cmp
leave
fisubl
leave
lds
xor
lret
cmp
lahf
mov
mov
loopne
nop
and
adc
fcmovu
scas
aaa
adc
add
std
enter
into
xchg
in
loopne
xor
and
mov
mov
xchg
nop
decb
push
dec
dec
mov
nop
in
xor
pop
dec
loope
cs
add
in
mov
push
xlat
and
push
add
sub
pop
shr
mov
fwait
sub
les
mov
arpl
popf
mov
inc
sbb
dec
push
ja
jbe
scas
add
xor
inc
aam
jae
jo
add
mov
shlb
icebp
lcall
idivb
or
sub
in
outsl
outsl
or
xchg
test
icebp
inc
or
mov
aad
xor
adc
aam
dec
insb
mov
push
testl
mov
lea
pop
or
mov
mov
push
cmp
fistl
jle
imul
loope
xor
in
pop
mov
sarl
fsubrs
fsubl
inc
sar
dec
leave
jle
push
fdiv
enter
cmp
xlat
xchg
popa
cmp
shl
fstpl
pop
mov
mov
mov
adc
adc
or
dec
xchg
sub
adc
mov
clc
adc
cld
pop
mov
mov
lods
pop
mov
repnz
sub
clc
mov
pusha
jo
movsl
pop
pop
or
lock
test
popa
add
addb
push
push
sub
xorb
and
mov
scas
adc
fwait
mov
fs
repz
jns
aam
cmp
int
adc
mov
add
lea
outsl
and
scas
sbb
lahf
xchg
and
fs
iret
arpl
stos
mov
out
or
mov
and
inc
dec
jge
dec
inc
jle
hlt
hlt
cmp
out
xchg
lods
and
push
mov
xchg
push
sbb
mov
adc
stos
jge
mov
repnz
mov
push
iret
and
cmc
sbb
mov
out
mov
rolb
icebp
mov
mov
inc
xchg
mov
loope
push
aad
in
push
cmp
dec
leave
mov
mov
push
or
sub
arpl
add
insb
lock
rcrb
insl
push
push
cmp
inc
pop
dec
jge
cmc
cs
xchg
sbb
dec
int
push
cmp
pop
into
mov
insl
dec
push
push
fst
mov
ja
popa
dec
fidivrs
nop
jne
sbbb
mov
xchg
jnp
xchg
and
jo
jp
movhps
out
pop
jns
mov
out
in
cmp
mov
stc
lea
xchg
out
mov
mov
dec
into
rclb
in
pop
push
sbb
jb
lock
mov
jecxz
mov
in
xorb
adc
mov
sbb
enter
mov
jp
mov
xlat
and
sbb
sbb
push
into
xchg
dec
in
jl
push
clc
out
das
stos
sbb
jmp
push
movsb
das
fcomps
xlat
xor
mov
or
push
movsb
clc
dec
insl
cmpsb
test
jno
add
sti
cli
xor
out
cmpsl
sbb
xchg
std
xor
sahf
cmp
lret
and
les
in
pop
dec
lahf
dec
movsl
jl
sar
dec
sub
es
cmp
jle
in
pop
or
xchg
and
pop
jl
mov
lea
into
mov
ljmp
movsl
lds
xchg
outsb
mov
xchg
and
int
pop
dec
lcall
imul
scas
fwait
arpl
out
imul
cli
and
mov
jle
pop
pop
pop
scas
jnp
clc
or
jecxz
cmp
in
fstps
out
jns
mov
push
cmpsb
jmp
imul
subb
insb
or
sarl
aas
and
mov
inc
jnp
add
jae
daa
mov
nop
daa
jp
mov
dec
in
and
adc
lcall
jbe
sti
or
imul
mov
mov
adcb
lea
jp
add
mov
data16
data16
dec
aas
add
mov
inc
sarb
sbbl
xchg
pop
data16
iret
mov
jecxz,pn
inc
lahf
es
xchg
fisubrl
mov
adc
test
cmp
or
shrl
pusha
and
scas
sbb
jl
jnp
out
es
fstl
fisubrl
repz
cltd
pop
int
mov
test
pop
jne
nop
in
jge
je
je
jae
movsb
les
clc
insb
sub
hlt
into
mov
shll
xchg
and
jbe
mov
inc
fcmovb
adc
test
adc
aam
cmp
mov
pop
jno
adcb
imul
and
icebp
repnz
enter
pop
push
shll
or
aam
aaa
adcb
mov
push
xchg
jge
jns
in
test
outsl
push
pushf
mov
lds
or
popf
pop
hlt
sub
jecxz
cmpsl
mov
and
sar
mov
nop
adc
es
fs
stc
sub
add
dec
ror
mov
mov
sti
bound
rcrl
outsl
repnz
gs
adc
jmp
dec
fdivrs
mov
scas
das
jb
mov
xchg
divb
or
repz
lret
scas
dec
push
inc
insl
loope
pusha
lods
add
adc
xor
je
and
loopne
fisttpl
xchg
aad
push
dec
stos
hlt
jnp
lods
aam
int3
test
mov
pop
add
ret
add
sub
mov
and
stos
shll
and
outsb
xchg
movsl
bound
cmp
stos
out
fsubrp
push
xchg
jne
jle
adc
int
imul
pushf
scas
xchg
inc
pop
les
mov
dec
sahf
test
sbb
pop
imul
xlat
test
insb
lret
push
xor
loop
lods
jecxz
stos
fwait
in
int
in
lock
pusha
pop
sub
out
dec
pop
test
ffree
sbb
lcall
cmpb
aam
fiadds
ja
lret
loop
xor
nop
pop
push
add
pop
xchg
notb
mov
jmp
mov
lret
xchg
popf
sub
movsl
inc
adc
mov
add
xchg
pop
aad
mov
negl
mov
in
test
test
aam
loop
rcrl
dec
push
pop
lods
ficomps
cmpsl
subb
in
dec
pop
push
into
repz
stos
mov
push
xchg
cmp
in
push
lods
xchg
mov
test
loopne
rol
ret
scas
shl
mov
sub
mov
icebp
sub
mov
test
xor
test
sbbb
in
scas
or
jge
fcompl
shll
mov
mov
sbb
shr
and
lret
jp
outsb
lds
mov
push
cmp
es
mov
fwait
loop
movsl
xchg
shll
aam
push
inc
in
pop
push
and
jmp
adc
add
insl
adc
lea
sbb
cmc
push
dec
cltd
cltd
xchg
lea
inc
xchg
sbb
imul
xor
cmp
jmp
cmp
xchg
stos
pop
mov
mov
push
rorl
push
fstl
cmp
ljmp
test
mov
scas
subb
lahf
and
lea
jge
xor
lea
pop
push
sbb
sub
sbb
insl
test
arpl
push
es
mov
faddl
arpl
subb
dec
sbb
mov
cmp
add
shll
lea
adc
out
fmull
stc
ds
movups
lods
test
or
repz
mov
cltd
xor
add
fistpll
cld
mov
clc
dec
jb
cmpsl
or
push
jle
shlb
stc
jle
push
or
mov
mov
pop
lock
cli
enter
mov
cmp
in
adc
jecxz
sub
rcr
adc
mov
or
hlt
inc
clc
pop
les
and
xor
and
in
out
aaa
jmp
mov
cmpsb
pop
hlt
cmc
and
mov
xchg
fsubp
xchg
ret
mov
add
rclb
out
sbb
fisubrs
movsl
lods
cmc
sbb
mov
popa
cmp
inc
dec
out
xlat
pop
add
push
mov
popf
mov
push
add
in
popa
dec
mov
pop
xchg
mov
sti
push
and
mov
inc
rcl
mov
inc
xlat
sarb
xchg
mov
mov
fsubrl
mov
mov
sbb
mov
mov
cmp
adc
je
mov
shl
xchg
sub
cmpsl
or
inc
aas
and
push
stos
loop
mov
xchg
std
mov
nop
xchg
ds
mov
ljmp
xor
jno
sub
cmpsb
dec
js
pop
mov
sub
mov
loopne
xchg
inc
push
out
mov
rorb
or
loope
mov
lahf
pushf
jbe
pushf
sub
push
popa
or
leave
or
pop
mov
movsl
or
jb
xchg
and
lret
fcomps
clc
aaa
insl
fbstp
sub
sub
dec
mov
bound
fptan
dec
inc
push
push
bound
inc
xchg
pop
mov
sub
aam
or
out
add
adc
mov
pusha
mov
repz
scas
jns
in
ja
inc
pop
jl
push
dec
out
mov
pop
mov
dec
adc
call
mov
mov
sub
popf
xchg
out
gs
pop
mov
movsl
add
sbb
mov
ss
aas
imulb
pop
cld
pushf
sub
push
push
lods
cmpsb
push
pop
scas
les
xchg
add
aaa
mov
add
insb
push
lea
xchg
in
popa
mov
icebp
ljmp
mov
iret
fisttpl
fsubrs
push
fidivrs
pusha
and
rcll
lea
loop
add
cmp
xchg
push
int
jnp
ja
pusha
fisubrl
ds
xchg
lods
sbb
mov
les
cmp
cmp
stos
and
push
into
inc
cld
jp
bound
xor
ja
cmp
les
add
mov
fnsave
pop
push
inc
push
dec
xchg
lds
ret
inc
sar
test
sti
dec
sbb
mov
mov
mov
lahf
xchg
pop
sbb
hlt
ss
das
sbb
push
mov
inc
popa
xor
inc
and
sbb
jg
cltd
mov
inc
imul
inc
lcall
fs
dec
popf
mov
jecxz
xchg
cmp
cli
xchg
hlt
jbe
loopne,pt
hlt
inc
sbb
jl
adc
es
pop
js
ret
push
xlat
jecxz
cmp
dec
bound
add
divb
mov
pusha
in
sahf
lahf
add
xchg
mov
std
insb
mov
or
neg
jo
aaa
ret
out
mov
inc
inc
ljmp
jp
leave
enter
adc
mov
lods
xor
and
xchg
mov
fstpl
out
mov
mov
insl
jl
inc
cmp
mov
dec
leave
inc
outsl
lret
sbb
sti
imul
xchg
pop
mov
fsts
sbb
hlt
les
sub
inc
mov
daa
test
fmulp
jns
mov
test
call
sbb
shlb
ret
cmp
xlat
scas
int3
cmc
frstor
sbb
inc
imul
xchg
aaa
and
mov
fs
xchg
in
add
arpl
fwait
stc
iret
paddusw
and
push
or
pop
add
mov
jecxz
mov
stc
push
xor
nop
sub
or
in
das
addl
nop
pop
sub
int3
cmpsl
inc
push
into
add
rorl
adc
cmpsl
das
mov
imul
int
push
pop
xor
sbb
push
sub
mov
test
cmpsl
mov
mov
inc
out
arpl
add
imul
int
iret
lret
push
pop
xchg
mov
lret
enter
or
and
sahf
sbb
cli
iret
mov
mov
daa
adc
inc
repnz
insb
fidivrs
dec
add
addl
popf
adc
adc
pop
mov
outsl
scas
xor
sbb
outsl
je
xor
push
push
es
xor
jmp
fdivp
add
adc
jle
add
ja
sahf
jns
icebp
mov
shll
xor
add
outsl
sub
push
jae
or
xchg
ss
les
inc
jne
cmp
movl
ja
mov
xor
fistpll
mov
in
das
mov
aam
je
cld
mov
hlt
cmp
shrl
mov
test
mov
xchg
xchg
ja
loope
jno
cmp
mov
sub
push
mov
nop
aaa
mov
mov
outsl
in
pop
fdivs
pop
cmp
mov
arpl
dec
fdivs
in
sub
insl
dec
and
push
jmp
adc
inc
push
dec
xchg
mov
cltd
out
and
or
les
jecxz
pop
les
call
pop
jecxz
mov
cmp
push
test
insl
fisubrs
adc
fs
out
sbb
add
pop
rol
jae
loop
xor
gs
pusha
dec
jae
lock
test
mov
lahf
lds
sub
mov
add
xor
jb
dec
repnz
or
fisubrl
cmpsb
mov
sbb
fidivs
icebp
mov
pop
cmpl
sbb
sbb
cmp
add
and
pop
add
jle
add
mov
bnd
add
sbb
shrb
xor
adc
push
clc
pop
int3
dec
cli
mov
call
jecxz
int3
in
sub
adc
int3
pop
inc
in
xchg
xchg
out
call
testb
jp
mov
pop
pushf
out
xor
sbb
push
es
or
pop
scas
inc
or
fstps
push
aaa
enter
lret
xorl
cmpsl
sti
outsb
mov
decb
adcl
loope
movsl
add
dec
sbb
mov
test
pop
mov
sub
rolb
xchg
mov
cmp
in
addr16
mov
jmp
sbb
stos
add
scas
push
jo
mov
mov
into
jne
xlat
inc
test
push
cmp
xchg
sub
or
mov
paddw
cmpsl
ret
pushf
sub
xchg
push
lahf
jle
das
push
std
lahf
mov
ja
jg
mov
xchg
mov
cmc
fists
dec
xor
fsubr
xor
test
dec
xchg
inc
xchg
xchg
leave
test
mov
dec
push
cmpsb
add
adc
or
repnz
call
out
mov
popa
test
jno
loop
daa
and
sub
imul
xchg
sbb
test
dec
out
xor
dec
std
add
xor
outsb
das
in
pop
fstp
addr16
in
movsb
scas
jne
mov
xchg
jns
rorb
mov
in
fiaddl
jp
fwait
das
dec
pop
push
out
cs
or
mov
cmc
mov
cltd
fwait
ss
xor
pop
movsl
xchg
xor
mov
ljmp
aam
push
cmpsb
xor
repnz
jne
jbe
arpl
and
int
xor
xchg
jbe
cmp
inc
push
xor
jmp
push
ds
outsb
orb
jb
and
gs
shll
pushf
fs
add
in
add
cmpsb
nop
data16
sbb
inc
stc
add
inc
shl
test
cmp
js
and
or
mov
sbb
and
pusha
mov
imul
pop
repnz
loopne
mov
sub
sbb
push
or
loop
lods
cmc
xor
or
divb
adc
lods
dec
inc
mov
sbb
mov
mov
mov
cmc
cwtl
xlat
add
mov
sub
push
insb
and
and
jge
and
dec
fadds
andb
fsubrs
xchg
cltd
fprem1
or
incb
int3
ljmp
mov
popf
ret
push
ret
test
jne
xchg
mov
sbb
mov
call
xchg
int3
adc
sub
int
aam
call
jae
jae
push
cmp
lcall
out
stc
jecxz
cltd
insl
xor
orl
mov
add
les
dec
add
mov
pop
outsl
imul
movsl
fmul
fmulp
dec
adc
subb
push
xchg
mov
std
pop
rclb
andb
shlb
cli
dec
xor
and
rorl
fisubl
fs
sub
inc
fadds
pop
repnz
push
movsl
adc
sbb
jecxz
std
div
cmp
inc
loopew
mov
pop
push
paddusw
lret
inc
testl
xchg
aam
jnp
lea
jnp
nop
cmp
sub
xor
adc
sub
sbb
adc
neg
ret
div
xor
sbb
mov
fimuls
outsb
mov
xchg
pop
roll
add
mov
jb
es
inc
fwait
or
insl
das
je
ja
dec
outsl
fidivrl
lcall
fimuls
out
roll
sarl
adc
test
mov
test
ljmp
repnz
sub
cld
out
rclb
adc
gs
mov
fdivrl
in
mov
and
rcl
dec
add
dec
push
into
jnp
or
mov
jae
repnz
fsubrs
or
xchg
sbb
repz
inc
dec
hlt
fwait
mov
sahf
int
lds
add
add
sti
sbb
or
xchg
xchg
xor
mov
inc
in
xchg
or
daa
mov
inc
adcb
jb
jae
cmp
cli
imul
or
int
pop
adc
xchg
push
out
pop
inc
jns
add
jp
add
iret
les
xlat
lcall
aas
xor
push
andb
fucom
dec
xchg
xor
xchg
aas
call
rclb
ret
in
cld
mov
mov
jmp
and
ret
fwait
adc
xor
aas
sub
imull
mov
cmp
adc
out
lret
ja
push
cmpsl
cli
or
mov
pop
xchg
jmp
adc
jl
mov
cmp
add
jmp
pop
insl
movsl
icebp
jmp
aam
in
mov
add
mov
sarl
sti
popa
pushf
lret
and
and
cmp
pop
lss
jns
lods
imul
mov
insb
xor
xchg
leave
iret
push
mov
stc
adc
mov
in
pop
sub
push
xchg
sub
jno
and
dec
sbb
xchg
rorb
xchg
push
mov
adc
inc
mov
xchg
mov
subb
mov
in
lds
outsb
stos
fimull
imul
lcall
pop
in
cmpsb
ret
jl
dec
sti
aad
ficoml
mov
xchg
xchg
add
or
add
int
jne
mov
pop
aaa
adc
ja
ss
fbstp
dec
repz
sbb
sahf
mov
dec
loope
xchg
enter
dec
cli
sbb
add
popa
pop
mov
ret
jae
fists
jl
mov
sbb
push
pop
movsb
call
dec
pushf
push
int3
push
sub
xor
push
repz
sub
xchg
aam
inc
imul
or
mov
mov
in
mov
pop
movsl
cmp
movsb
xor
ret
jo
fimull
dec
cmp
xchg
cmp
in
push
xor
in
inc
cmc
shrl
sbb
divl
dec
lock
add
inc
mov
mov
fsubp
push
xchg
movsl
mov
mov
adc
add
and
repnz
xor
push
xor
enter
push
xchg
mov
dec
mov
stos
xor
cmp
mov
out
xor
adc
cmp
mov
and
inc
jp
pushf
mov
iret
mov
inc
mov
and
inc
iret
jl
add
xor
add
mov
aas
push
mov
inc
bound
xor
inc
xor
or
push
push
mov
mov
jns
lods
cmp
inc
jne
or
fwait
pop
ret
scas
loop
mov
jne
jb
dec
rcrl
dec
inc
aam
ss
mov
sahf
mov
lock
inc
les
out
jbe
sub
sub
dec
and
icebp
adc
je
pop
cs
xchg
cmp
sub
mov
add
mov
push
mov
sub
mov
arpl
mov
nop
cs
add
pop
shl
push
pop
push
lret
jmp
add
jae
sbb
xchg
stc
ss
inc
jnp
fcom
sbb
jbe
leave
sbb
push
xor
mov
xchg
and
and
xchg
mov
inc
cmpsb
bound
repz
push
xchg
bound
loopne
mov
negl
cmp
sub
mov
inc
pop
or
in
and
popl
add
add
cmp
fisubl
lods
rcl
sbb
push
push
or
cmpb
aas
pop
dec
jno
loope
fldt
pop
mov
rcrl
or
jo
fstpt
mov
sub
inc
mov
nop
icebp
lods
or
mov
test
fisubrs
push
pop
jne
inc
out
popa
jns
dec
mov
rcrl
xor
data16
iret
dec
jp
mov
mov
mov
out
jno
mov
add
lret
jbe
push
icebp
sub
sbb
jl
fidivrl
fistl
sbb
sarb
stos
mov
shlb
inc
das
arpl
mov
push
mul
loope
mov
jns
fsts
jne
cmpsl
cmp
mov
int3
fldt
jmp
xor
idivl
sub
mov
mov
jge
jns
inc
xorl
lret
test
iret
cmp
mov
cmp
int
les
add
dec
aaa
jp
jge
cmc
inc
movsl
sub
inc
dec
add
mov
jl
test
or
mov
aaa
iret
jno
pop
xchg
push
les
rcrb
xor
cmp
adc
mov
pop
cmp
push
mov
mull
rorb
sbbl
dec
clc
push
mov
jo
mov
sbb
adc
and
xor
ret
push
pop
fnstenv
push
outsb
dec
lret
shrl
push
sub
pminub
sub
inc
int3
icebp
xchg
aaa
aas
mov
jno
in
jno
mov
xchg
cmpb
sbb
popa
xchg
adc
sbb
xorb
rcrl
pmulhuw
ds
fmul
imul
xor
add
jmp
daa
daa
ret
rol
hlt
icebp
enter
add
cmpsl
cmp
sbb
adc
lods
lods
mov
les
jle
cmpsl
pusha
popf
cmp
inc
pop
es
call
pop
push
jno
das
and
popf
sbb
mov
sarl
jae
shrl
daa
mov
cmp
sbb
sub
pop
enter
in
push
adcl
sbb
pusha
les
sahf
cmp
aam
mov
cwtl
repnz
lock
push
mov
pop
pop
push
mov
pop
jnp
cmpsl
push
xchg
test
rcrl
dec
push
add
add
adc
loopne
lret
in
pop
push
add
cmp
inc
cmpsl
movsb
pushf
inc
xor
add
cmpsb
popf
arpl
test
and
ljmp
sarb
mov
push
dec
orb
inc
roll
shll
or
xchg
dec
xchg
mov
notb
sti
mov
xchg
adc
xchg
movsb
lods
sbb
sbb
sahf
mov
imul
adc
dec
mov
mov
sbb
xlat
insl
lcall
push
nop
adc
scas
test
cmpsb
cmp
xchg
inc
cld
pop
push
rcr
rolb
in
and
or
add
lea
out
fsubrl
or
test
ret
mov
outsl
xchg
sbb
xchg
mov
repz
inc
enter
push
xchg
cmp
lock
adc
insl
lcall
std
int3
in
pop
mov
sub
mov
aam
jnp
or
or
jb
adcb
push
fstpt
mov
adc
cmp
and
mov
sub
arpl
pop
mov
jbe
cmpsb
cltd
dec
adc
mov
scas
jge
pop
mov
pushl
add
pop
fs
ljmp
insb
push
pop
xlat
sub
push
int
in
test
pop
rcrl
pop
repz
punpckhwd
lods
dec
cmc
loope
outsl
lea
and
mov
fcoml
or
jne
xlat
or
mov
inc
ljmp
sbb
push
dec
scas
cltd
xchg
imul
rorb
mov
inc
jmp
movsb
out
adc
mov
loope
cli
adc
adc
data16
cwtl
cmpsb
cwtl
inc
in
icebp
pop
sub
scas
mov
mov
mov
decb
std
je
inc
mov
mov
divl
lret
lcall
adc
pushf
or
xchg
aas
in
cwtl
das
enter
cmpsl
sti
and
out
popf
arpl
adc
mov
mov
and
push
xor
imul
xor
mov
mov
mul
xchg
adc
jge
lret
inc
addr16
push
and
mov
or
mov
mov
sub
xchg
push
dec
stc
cltd
ja
out
push
adc
sub
imul
mov
fs
cli
dec
dec
dec
hlt
mov
es
nop
dec
lock
fsubrl
dec
ffreep
sub
add
jo
and
out
mov
pop
cmp
popa
mov
pop
lret
push
add
jno
test
insb
cmp
mov
jmp
aaa
int
xchg
or
push
jmp
xor
fwait
push
inc
pop
cmp
jo
in
inc
fisubrs
pop
add
lock
pop
std
or
mov
sub
lock
lds
rolb
jno
push
cld
lret
test
outsl
sub
dec
hlt
ficoml
push
sbb
outsb
push
shlb
lods
test
data16
xor
jle
xlat
pop
jo
mov
xchg
inc
or
clc
sbb
stc
loope
arpl
push
in
push
ss
lret
in
packssdw
arpl
sbb
push
sub
into
and
push
xor
pop
cmp
pop
xchg
mov
add
daa
xor
iret
sarb
fwait
add
mov
pop
cmpsb
jp
xchg
cmp
fstpl
outsl
sti
ffree
inc
pop
popf
mov
testl
xchg
sbb
jmp
xor
xchg
icebp
pop
sbb
mov
jae
mov
and
pop
jecxz
dec
dec
mov
jbe
and
add
scas
pop
lcall
pop
popf
push
add
sahf
jg
data16
sub
dec
adc
sbb
and
adc
popa
jg
negb
sarl
mov
cmp
xor
xchg
adc
loopne
iret
stos
inc
and
in
inc
dec
inc
xor
xor
pushf
iret
lret
lahf
stos
sbb
ret
sbb
lds
dec
cmp
insl
dec
fdivrs
xor
pop
sub
ljmp
cmp
jg
popa
or
imul
jb
fcom
sti
sbb
xchg
or
jmp
movsl
lods
pop
lret
add
push
ja
xor
jae
jmp
mov
pop
jo
stc
mov
cli
lods
shlb
or
insb
and
iret
inc
popl
cs
cld
dec
mov
add
mov
popf
or
xchg
nop
jmp
out
negl
leave
sti
lock
mov
fldl
and
fwait
pop
inc
pop
xor
push
rcrb
dec
insb
adc
stos
pop
jae
cs
testl
jl
and
xor
pushf
lock
mov
cmp
add
adcb
lods
gs
pop
jb
jecxz
cld
push
leave
dec
testb
test
pushf
shlb
mov
fwait
in
std
xchg
adc
jbe
sub
aaa
ja
lahf
mov
jge
das
sbbb
mov
out
cmpl
dec
enter
js
jne
pop
insl
add
cmpsl
mov
sub
repz
adc
cmpsb
mov
mov
add
xchg
adc
sbb
and
call
insl
popa
pusha
push
inc
jg
pop
or
xlat
in
inc
ss
imul
jo
repz
cmp
aad
mov
push
test
mov
test
jle
stos
scas
bound
mov
lods
fcompl
in
testb
je
mov
push
mov
adc
pop
dec
mov
cmp
sbb
aam
xor
stos
aam
test
ficomps
je
out
push
in
iret
xchg
movsb
in
xor
add
faddl
and
out
xchg
adc
cmp
stos
outsl
movsl
push
out
fs
mov
das
aad
push
add
cld
ds
outsb
xor
pop
mov
loop
jo
pop
movsl
lret
xchg
ss
ja
cmpb
pop
push
jnp
fs
adc
int
pop
sub
xor
iret
pop
and
mov
sub
int3
ret
aad
stc
inc
jo,pn
inc
jp
stos
movsl
cmp
jmp
idivb
loope
jle
and
shrb
imul
jo
dec
add
add
arpl
out
movsb
cltd
sub
dec
iret
sbb
xor
fistl
xchg
and
sub
hlt
arpl
les
cmp
lods
adc
adc
out
cld
inc
add
cmc
insl
les
xor
push
bswap
fisubl
popf
mov
jecxz
xchg
mov
adc
out
or
sub
shll
jnp
mov
add
sub
mov
sbb
or
pop
out
xchg
mov
jb
cmpsl
dec
rcl
rorl
jmp
std
lcall
bound
bnd
inc
les
xor
insl
adc
addr16
cmpsl
fdivrp
add
add
sbb
loopne
inc
cmp
je
fsubrp
cmp
cmp
scas
loopne
mov
sti
mov
outsb
cli
int
push
les
pop
sub
repz
outsl
dec
dec
js
push
scas
mov
pop
pop
pop
add
cmp
fisubs
mov
mov
es
imul
and
fsub
adc
mov
or
inc
data16
mov
push
and
xor
mov
pop
pop
inc
pop
cmp
sarb
popa
lahf
sbb
add
bound
add
outsl
jbe
inc
lret
pop
xchg
adc
test
ljmp
mov
shll
ficoms
mov
adc
xor
inc
adc
imul
ljmp
rcr
test
loop
xchg
mov
and
nop
add
add
cs
cli
xor
sub
jne
mov
or
pop
mov
mov
outsb
xor
movsb
push
jae
pop
mov
vmovntps
or
rolb
imul
jae
pop
or
test
ret
into
pusha
cmp
andl
and
lcall
scas
fstl
and
jns
mov
fsub
in
sahf
ja
aam
icebp
stos
mov
mov
xor
bound
ds
xchg
sub
xchg
inc
sti
jmp
sbb
ret
mov
addb
adc
incb
mov
into
and
cmc
fadd
adcl
cs
stc
in
push
dec
pushf
jle
gs
xorb
inc
leave
ret
jmp
push
push
sub
inc
and
aad
cld
aaa
cmpsl
leave
sub
mov
repnz
jmp
imul
jnp
rcr
std
fsubrl
lds
mov
or
push
mov
pop
cmpsb
sub
jmp
sub
in
xchg
shlb
outsb
push
fsts
lea
push
out
mov
jg
je
les
inc
or
daa
push
sbb
xchg
sti
and
jmp
das
dec
pop
xchg
test
in
push
shrb
icebp
inc
cmp
push
and
roll
mov
mov
mov
mov
or
jle
dec
dec
clc
pusha
and
mov
in
inc
ret
rclb
stc
cmp
stc
or
bnd
adc
addr16
in
dec
fadds
pusha
int
inc
sbb
mov
sbb
hlt
gs
ljmp
xlat
in
push
push
fwait
adc
sar
insl
scas
xor
addl
sub
and
dec
ss
adc
jo
scas
out
pop
sub
cmpl
addr16
and
push
jecxz
xor
iret
mov
cmpsb
lea
dec
dec
sbb
mov
dec
pop
mov
loope
lds
sub
xchg
imul
push
popf
sub
pop
cmp
shll
xchg
jp
frstor
sti
or
pop
mov
ret
or
mov
iret
stc
adc
js
stos
jne
lods
fwait
mov
mov
sti
faddp
jmp
xchg
jb
add
or
jle
insl
cmp
jns
imul
fdivrl
das
filds
leave
out
jns
push
mov
repz
frstor
and
std
sbb
ret
or
addl
shl
jg
add
mov
addr16
xchg
fs
xchg
jae
leave
fidivrs
out
jmp
xorb
popa
das
call
stos
mov
jb
pop
fidivl
dec
inc
jmp
stos
jne
outsl
inc
dec
daa
das
fidivl
or
push
out
and
mov
pop
aas
add
fldcw
mov
pop
subb
out
popf
pop
dec
out
sbb
mov
add
test
and
es
push
mov
repz
add
cmpsl
jo
sahf
and
leave
in
lds
filds
fldcw
xlat
shlb
stos
and
pop
ret
xor
dec
aaa
mov
pop
jge
inc
sub
jp
movsb
mov
test
inc
add
loope
icebp
push
call
fnsave
jmp
fxch
pop
in
pop
add
push
mov
into
jbe
repnz
out
scas
movsb
pop
gs
mov
push
imull
mov
shr
push
add
push
movsb
push
jae
insb
lods
iret
push
sahf
mov
mov
mov
out
shlb
xchg
ja
push
mov
dec
sub
and
out
outsb
fistpll
jbe
xor
dec
out
lods
test
div
das
sub
stos
adc
fildll
leave
push
mov
ffreep
push
xchg
mov
jmp
jns
lds
cmp
cmp
fstl
add
movsl
pop
je
lret
xor
stc
pusha
ljmp
add
sahf
push
inc
push
or
push
test
std
lahf
dec
jg
add
mov
xorl
bound
jbe
ja
out
jecxz
shrl
xor
push
je
mov
push
sbb
loopne
and
jns
popf
lods
jl
or
aaa
lret
stos
ret
mov
ficompl
repnz
cmp
cmp
pushf
inc
adc
adc
fldcw
sub
add
jo
mov
jmp
pop
mov
test
stos
jmp
movl
aam
mull
shlb
and
pop
cltd
mov
popf
adc
lods
pop
and
sub
sbb
arpl
mov
cmc
push
sbb
scas
cmp
xor
mov
add
dec
pop
jno
lret
mov
xor
jle
bound
gs
pop
jae
cli
pop
jb
ret
sbb
adc
push
xor
mov
inc
test
push
xchg
adc
mov
cmp
push
cld
xor
sub
in
mov
mov
shr
push
add
xor
std
jbe
push
insb
mov
es
xor
mov
pushf
jb
mov
int3
and
mov
pusha
test
mov
lds
mov
out
ss
movsl
adc
inc
or
popf
adc
mov
imul
sahf
aam
sbb
aas
in
cld
shrb
out
sahf
mov
test
addr16
jmp
fdivl
xor
dec
xchg
or
mov
or
mov
fistps
dec
jg
repz
sbbb
lds
in
mov
or
add
fldcw
xchg
frstor
dec
rolb
sub
imul
sbb
jl
inc
repz
lahf
add
mov
and
lods
sbb
and
add
data16
jg
and
push
popf
lahf
insb
cmp
enter
scas
insl
dec
cmp
nop
add
lods
incl
xchg
sarb
mov
icebp
cmc
in
jno
dec
inc
pop
sahf
iret
fcompl
mov
add
popa
test
mov
lods
jnp
lods
or
dec
adc
fbstp
mov
sub
nop
or
or
xchg
rcrl
ret
aad
pop
sbb
pop
xchg
ret
cmpsb
mov
in
cmp
mov
cmp
stc
adc
hlt
lcall
loope
xor
pop
mov
sub
mov
mov
jge
cmpsb
sbb
fld
in
or
clc
push
das
adc
sahf
loope
enter
mov
test
imul
mov
adc
inc
imul
enter
lcall
into
ret
rcr
in
ja
mov
popf
sbb
cmp
pop
subl
mov
leave
aas
inc
sub
pop
js
cmp
sti
adc
lock
sti
je
sub
addl
and
insb
nop
lret
push
jmp
mov
or
mov
add
mov
mov
adc
or
cmpsb
mov
cs
lea
mov
push
cmpl
push
in
fiaddl
cmp
sub
jb
xor
les
xchg
mov
lods
aas
test
insb
or
movsl
dec
es
lret
ficoms
adc
hlt
pop
mov
xlat
push
cmp
enter
or
push
in
repz
ja
push
pop
clc
mov
je
sbb
scas
or
shlb
dec
jno
out
shlb
jecxz
mov
add
lret
pop
push
addl
je
js
out
or
pop
mov
jmp
shlb
or
dec
jno
sbb
cmpsb
mov
into
jmp
and
or
pop
jl
and
jne
mov
xchg
jns
pop
xchg
ret
or
mov
aas
and
shr
push
subb
mov
mov
cmp
xchg
mov
movsb
jle
orb
es
inc
xchg
rol
lahf
lcall
js
mov
jns
shll
popa
in
lret
sub
sub
xchg
push
decb
fimuls
inc
inc
bound
inc
inc
dec
add
fsubr
push
push
rcl
xchg
dec
xor
mov
test
jb
pop
fsubrs
push
jb
scas
dec
jb
pop
inc
stc
loopne
ss
lea
push
icebp
adc
sahf
loop
sbbl
vunpcklpd
std
mov
roll
sbb
xchg
sarb
jbe
sahf
fcomp
loopne
inc
sub
or
fs
std
cwtl
imul
out
add
scas
push
adc
stos
dec
mov
imul
dec
repz
fcoms
sbb
cmp
fsts
xchg
aam
aad
jns
jl
jns
roll
mov
pop
xor
lahf
inc
adc
xor
imul
outsl
ret
in
xor
mov
aaa
jmp
leave
mov
fmulp
aad
inc
fs
in
mov
in
jns
pop
out
cwtl
fs
cmpsl
call
js
scas
jmp
push
shlb
dec
or
shrb
fxam
insl
mov
xchg
test
add
dec
adc
xor
sti
push
push
inc
gs
iret
fsubs
xchg
fmull
or
inc
cmp
xchg
sub
and
jno
and
dec
or
mov
jl
insl
xor
jecxz
push
mov
iret
adc
ds
mov
push
movsl
insl
sub
jmp
add
sbb
pop
incl
push
mov
pop
fs
and
mov
jp
push
sar
and
inc
shlb
jns
stc
xor
add
adc
sbb
gs
dec
cmp
and
push
mov
push
outsb
ds
mov
jle
jns
shlb
pop
insb
inc
test
dec
ss
fdivrs
pop
cmp
inc
xor
popa
pop
shlb
inc
mov
xor
mov
pop
jae
aam
xchg
push
or
daa
pop
cmp
push
aam
push
lahf
pop
dec
mov
data16
sbb
jge
xchg
inc
cs
cmp
jb
mov
mov
jmp
mov
ja
or
add
movsl
ja
sub
add
mov
xor
mov
insb
popf
mov
dec
test
xor
jp
nop
imul
fnstenv
dec
mov
cmc
push
mov
inc
lret
or
int
hlt
pusha
mov
repnz
outsl
mov
outsl
xor
loopne
xchg
rcr
popl
cld
mov
int3
fwait
or
and
push
call
mov
pop
push
push
pop
shlb
mov
andb
cmpsb
mov
push
pop
mov
xchg
or
mov
xchg
push
or
cmp
subw
jg
xchg
pop
inc
pusha
movsl
pop
pop
mov
push
jne
cltd
je
mov
push
repz
sub
les
in
cmp
sbb
repz
add
movsl
pop
rolb
int3
pop
ds
orb
addb
mov
idiv
push
sbb
inc
inc
int
xchg
ljmp
call
inc
mov
sub
lret
xor
loope
mov
sti
mov
pop
mov
gs
insl
or
arpl
stc
jl
icebp
adc
jns
setb
sbb
std
mov
add
shrb
dec
dec
rorb
or
jnp
aaa
mov
pop
arpl
dec
jmp
inc
push
mov
fsubp
clc
add
popf
mov
add
pop
jae
ljmp
cmc
cs
cli
inc
cmp
loopne
xchg
sub
out
push
add
sar
iret
push
movsl
movsl
fsubl
and
ss
mov
sarb
daa
cltd
ds
lcall
push
sub
jo
shrb
sbb
stos
and
dec
cmpsl
mov
sbb
popf
add
cld
add
or
enter
push
pop
pop
fisttpl
roll
pop
and
scas
or
out
jp
jmp
push
push
pop
cld
leave
cmp
fnstenv
lds
pop
ficoml
pushf
cs
mov
imul
jo
andl
subb
jb
repnz
pop
out
movsb
lock
xor
inc
sbb
jne
hlt
jb
mov
or
imulb
xchg
mull
jmp
dec
mov
sbb
es
out
loopne
xor
rorb
or
int3
mov
mov
mov
test
cmp
pop
mov
push
imul
aaa
lea
push
sub
pop
mov
dec
pop
leave
mov
loop
cltd
cmp
pop
int3
lock
insb
in
mov
nop
jecxz
mov
xchg
xlat
pusha
leave
fstpt
out
xchg
test
lds
inc
adc
enter
inc
adc
arpl
dec
rolb
gs
test
out
mov
push
jo
sti
outsb
push
cmp
dec
cs
cltd
cmpsb
out
xor
dec
in
inc
cmp
pop
lds
test
nop
pushf
int3
lea
xor
jbe
rorb
dec
mov
mov
inc
test
popf
or
cmp
fistps
adc
repz
xchg
push
lods
dec
loope
cmp
dec
dec
js
movsb
setns
mov
adc
test
xchg
push
cltd
fmuls
mov
outsb
lods
movsl
or
ljmp
inc
sarb
sbb
mov
push
pop
dec
imul
stc
ljmp
and
scas
stos
in
fidivs
cld
cli
mov
jbe
add
cmpsb
rclb
jmp
mov
les
loope
xor
dec
pop
mov
add
fs
lods
divl
ja
test
adc
popf
pusha
fisubs
xlat
add
out
inc
outsl
mov
enter
mov
dec
push
xor
je
adc
popf
mov
leave
iret
lcall
jb
jo
out
or
xchg
in
popf
sbb
jge
add
stc
push
xchg
sub
add
adcl
and
push
push
cltd
push
push
cld
testl
stos
stos
jb
xor
sbb
and
ljmp
add
xchg
scas
inc
xchg
pop
mov
cs
add
fcmovnb
leave
jo
jbe
inc
add
movsb
es
daa
dec
or
add
popa
dec
mov
jmp
lret
test
jbe
and
stc
add
outsb
inc
inc
adc
push
pop
push
mov
pop
push
loop
cltd
dec
mov
ret
sub
loop
int
arpl
pop
int3
adc
loop
inc
jae
movlps
push
out
push
insb
mov
ss
mov
cmp
divb
rclb
dec
clc
bound
add
incb
shrl
jns
add
or
fcmovbe
mov
fnstcw
push
daa
and
fdivrs
xor
cmc
loop
addb
aam
sub
push
add
and
push
cmp
iret
xchg
mov
mov
jmp
adc
xchg
sub
sbb
xchg
xor
icebp
add
out
shll
outsb
mov
fdivr
or
and
xor
jmp
mov
mov
scas
rcrl
test
dec
popa
insb
push
pusha
mov
xchg
hlt
jmp
dec
cmc
out
xchg
inc
xor
mov
pop
mov
mov
fwait
mov
sbb
mov
dec
sahf
icebp
ret
mov
pop
rclb
dec
movsl
popf
and
pop
pop
js
add
mov
xor
pop
mov
shlb
or
mov
mov
mov
mov
into
sahf
mov
addl
sahf
sub
inc
adc
adc
jno
xchg
xor
popa
cmp
repnz
sub
pop
imul
mov
clc
xchg
repz
xchg
loope
nop
and
dec
adc
mov
push
into
push
dec
pusha
es
pop
popa
addr16
and
lods
hlt
pushf
das
and
mov
aad
movsb
pop
sarl
pop
add
ljmp
push
dec
shll
nop
jno
scas
xor
cld
pop
loopne
jbe
adc
cli
jl
enter
pop
mov
add
mov
scas
out
pop
fdivs
inc
xor
test
jmp
addr16
cli
pop
je
lcall
xchg
adc
popf
aaa
sub
mov
xchg
divl
mov
xor
cmpb
enter
stos
fcoms
inc
imul
adc
arpl
fldcw
dec
dec
and
fsubs
sub
scas
cmp
arpl
call
fldt
fsts
push
and
jo
push
mov
xchg
jge
fs
or
in
pop
test
xlat
in
dec
clc
enter
inc
inc
mov
lods
sbbl
jns
adc
jo
out
pop
or
push
sbb
ljmp
iret
xor
pop
mov
subb
in
leave
xor
fs
stc
xchg
lret
imul
inc
rcll
test
adc
inc
cmpsl
adc
dec
dec
pop
ljmp
cmp
xchg
dec
inc
test
out
es
les
push
aad
roll
mov
bound
nop
sub
mov
scas
sub
mov
cld
ja
popa
xchg
adc
fldt
cmp
xor
sbb
pop
nop
inc
in
cmp
pop
fsubs
xchg
in
jmp
es
jae
out
xor
sbb
add
movsb
push
sbb
push
pop
rcrl
mov
lods
dec
imul
cmpsl
cmc
cmpsb
mov
pop
jle
jg
insb
or
clc
jnp
jl,pt
scas
stos
in
test
sbb
add
jne
sbb
or
inc
or
pop
jb
lret
incl
fnstenv
jo
mov
inc
mov
inc
fcmovu
pop
or
mov
cmpsl
xchg
sub
mov
mov
out
dec
lret
ret
sub
sbb
adc
rcr
mov
lahf
mov
repz
dec
and
fwait
orl
cmp
mov
xchg
or
mov
popa
fidivrs
arpl
push
int3
loop
clc
nop
push
popf
movsb
adc
xchg
or
movsl
push
xlat
mov
pop
out
mov
cwtl
call
dec
push
cltd
push
sbbl
jl
out
repz
dec
aad
imul
cs
push
cmp
cmp
pop
pop
inc
adc
mov
fstpl
or
pushf
out
es
pop
sbb
xchg
pop
add
mov
jmp
mov
arpl
incl
es
jb
sahf
fistps
mov
sbb
clc
mov
popf
sahf
sub
pusha
jae
movb
add
iret
sub
aas
loopne
cmp
adc
jle
sub
jo
fistpl
ss
sub
pop
sbb
out
adc
and
mov
push
test
test
mov
and
mov
sti
sti
jg
mov
scas
inc
mov
daa
shll
jp
sub
and
adc
jno
clc
cld
stos
xchg
add
rolb
scas
add
aad
shlb
sub
mov
js
sub
jmp
outsb
inc
xor
pop
lret
adc
cmpl
stos
lock
lods
loop
xchg
bound
push
cmpsl
cmpsb
cmp
test
in
push
cmpsb
jg
and
mov
pop
push
pop
pop
push
mov
out
test
sub
adc
and
ljmp
mov
pop
dec
fs
xor
stos
jl
xor
sbb
out
inc
aad
daa
test
mov
xchg
aam
cmc
inc
mov
pop
shrl
js
loopne
cltd
ds
into
dec
fnstsw
sub
mov
mov
int3
pop
out
jmp
adc
jge
lcall
mov
jbe
gs
sub
or
lods
xchg
insb
jmp
repnz
jne
std
leave
imul
fildl
imul
ret
rdmsr
outsl
mov
xor
out
inc
imul
ret
sub
loopne
mov
pop
push
out
stc
push
scas
out
cs
imul
xchg
lods
sarb
or
cmpb
icebp
mov
decl
repz
mov
ret
imul
pop
out
or
xlat
aam
sbb
ja
mov
cs
mov
adc
leave
popa
cmpsl
xchg
cwtl
and
cmpsl
clc
shr
imul
bound
mov
cmp
mov
cmp
xor
jnp
stos
xchg
std
fsincos
mov
cli
out
pop
dec
lods
cmp
ds
adc
mov
cmp
jg
scas
inc
sti
pop
xchg
decb
stos
push
loopne
mov
or
movsb
fadds
ljmp
or
add
xchg
inc
aad
loopne
out
aaa
imul
xor
mov
mov
jno
add
mov
jl
xchg
pusha
je
xchg
push
cltd
cmp
aam
cmp
iret
push
icebp
adc
mov
xor
cld
movsb
jl
mov
add
ds
push
les
or
dec
in
adc
mov
add
daa
sub
lods
and
rorl
and
xchg
pushl
mov
and
push
mov
aas
rcrb
filds
dec
mov
mov
test
rcll
mov
in
cltd
orb
pushf
fs
aad
inc
ljmp
pop
cld
mov
mov
scas
fisubl
pop
push
xchg
shll
ljmp
stos
lods
jg
movsl
sub
pop
das
jecxz
mov
dec
icebp
pop
jno
sbb
push
mov
push
cld
sub
jns
rcr
dec
pusha
jae
test
adc
pop
xchg
xlat
or
scas
das
out
daa
roll
aad
push
sbb
rep
mov
xor
cld
pop
pop
fstl
bound
and
push
mov
add
sbb
pop
xor
adc
pop
test
inc
adc
cmp
lret
call
xchg
movsl
fisubs
inc
sbb
clc
or
xchg
pop
out
or
add
xchg
test
mov
push
inc
pop
xor
mov
icebp
and
jl
mov
mov
cs
scas
scas
stos
xor
add
iret
push
in
cli
cli
pop
cmp
stc
pusha
mov
andl
and
adc
sbb
push
or
test
push
orl
push
into
hlt
enter
stos
jmp
dec
cs
push
push
mov
and
cltd
and
in
mov
lahf
xor
or
mov
in
movsl
ja
in
jg
pop
push
cmp
movaps
mov
popf
arpl
mov
and
or
push
popf
cmpsb
xchg
inc
ljmp
aad
iret
sbb
in
mov
jae
bnd
xchg
imul
push
sub
fwait
sub
pop
call
mov
sbb
mov
adc
inc
lods
sbb
cs
aad
inc
sbb
in
sub
into
mov
cmc
test
int3
pop
xchg
pop
mov
pusha
popf
mov
jmp
pop
shl
xor
pop
mov
xlat
inc
shr
ficoms
orb
sbb
lds
ror
pop
prefetch
or
jnp
inc
mov
xor
cmp
loopne
jg
pop
loope
inc
addr16
mov
scas
loopne
cltd
sub
subl
jmp
inc
arpl
data16
sbb
movsb
scas
movsb
shrb
dec
xchg
outsl
xor
inc
pop
pop
push
jnp
sti
sub
test
pop
mov
outsl
cwtl
cmpsl
sub
pop
fcom
clc
jns
into
xor
div
jp
cwtl
adc
jne
jne
mov
xchg
lds
loop
outsl
and
jnp
call
jnp
cs
push
mov
fmul
lea
sbb
shll
xchg
sbb
addl
sbb
cltd
mov
aas
js
sbb
cld
mov
xchg
arpl
ror
jg
insb
aad
mov
push
sti
stos
adc
sbb
pop
test
popf
shll
mov
inc
lock
pop
and
inc
inc
repnz
xchg
aam
mov
push
jbe
popf
cmp
adc
add
dec
cmp
xchg
mov
pop
popf
loop
inc
mov
nop
ss
push
push
jnp
jo
in
sub
add
dec
and
pop
in
imul
adc
aad
xchg
mov
xchg
lret
out
sub
xor
dec
pop
cmp
jo
icebp
dec
add
das
repnz
divb
insb
ret
int
inc
mov
bound
movsb
dec
lcall
pop
mov
sub
aam
nop
pop
lods
mov
pop
jo
in
cld
lea
fstps
ljmp
ret
cwtl
cwtl
cwtd
add
sbb
ret
jns
stos
mov
inc
jmp
mov
and
test
adc
out
icebp
or
sub
dec
cmp
cli
mov
js
gs
mov
and
fldcw
sti
pop
lret
enter
cld
xchg
shlb
mov
adc
pop
out
xlat
push
dec
into
jp
adc
sbb
mov
pushf
pop
call
xor
jecxz
icebp
xchg
cld
add
data16
or
pusha
loopne
pusha
xchg
cmpsl
dec
roll
xchg
xchg
jl
xor
pop
lcall
fsubrl
pop
sbb
imul
push
pushf
xor
cmc
mov
sbb
mov
sbb
arpl
pushf
add
pop
sbb
cwtl
inc
int
pop
cwtl
add
dec
adc
push
scas
out
cltd
sbb
lahf
gs
out
lods
shll
pop
xchg
pop
out
pop
add
inc
or
lret
sub
jecxz
and
sarl
jmp
arpl
mov
test
sbb
xchg
scas
sbb
mov
enter
xchg
mov
or
or
mov
push
jnp
or
push
adc
mov
sub
pop
sub
sbb
sub
cmpsl
push
call
fists
sbb
sbb
pushf
repz
in
lret
movsb
aas
pop
jno
mov
shll
push
int3
inc
push
je
in
xchg
jae,pn
test
addr16
jbe
add
outsl
cmp
frstor
pop
lock
test
or
popf
jno
mov
xor
push
popa
inc
sub
jecxz
pop
addr16
cli
cmpsl
rclb
pop
push
pop
out
rcl
adc
sahf
gs
push
jnp
push
add
out
std
test
scas
adc
mov
ljmp
and
in
sti
and
aaa
sub
fsubs
sahf
test
ret
in
sbb
inc
or
subb
and
jg
out
xor
dec
or
jbe
jno
xor
sbb
jmp
ret
in
aas
or
enter
jp
mov
push
in
mov
divb
out
mov
sbb
dec
sahf
pop
fsub
adc
out
out
push
and
xchg
dec
jle
pusha
aas
xchg
lods
ret
adc
roll
add
test
jge
lcall
pop
mov
or
ljmp
cmp
stos
sub
mov
pop
xchg
fstpt
or
jno
pinsrw
pop
mov
mov
repnz
xchg
in
add
mov
push
shlb
adc
and
cmp
lock
dec
push
lods
das
push
int
sti
jb
add
sbb
addr16
popa
xchg
inc
mov
fiaddl
sub
ficoml
push
xchg
mov
sub
pop
adc
aaa
shr
lods
imul
mov
out
ja
jge
orl
aam
mov
cli
shlb
imul
mov
lret
push
arpl
sub
dec
leave
out
cmpsl
xchg
sub
sbb
jae
and
scas
test
sub
pop
jecxz
ret
out
leave
mov
int
or
push
scas
mov
ss
shll
stos
mov
pop
dec
sbb
jns
push
and
jp
push
setle
stc
dec
push
push
push
aaa
jae
outsb
shlb
xchg
test
jns
outsl
not
xchg
in
popf
adc
cltd
cmc
inc
ja
test
out
cmpsb
mov
dec
push
pop
fsts
push
imul
mov
jae
aam
push
add
push
and
xchg
lret
lea
mov
and
adc
push
or
push
or
sti
pop
jecxz
dec
bound
js
push
xor
inc
dec
pushf
push
pusha
imul
jo
add
mov
test
adc
xor
enter
repnz
sbb
dec
lods
fstpl
js
stc
mov
bound
sti
adc
sbb
xchg
pop
imul
mov
arpl
adc
popa
jno
bound
fdivs
test
mov
xor
inc
inc
and
cmc
mov
ret
sub
popa
and
push
add
add
sbb
inc
push
push
addl
sarb
push
addr16
aas
mov
aam
lods
std
mov
xchg
insb
mov
fmul
xor
ficoml
mov
dec
bound
xor
and
popf
push
xchg
in
cld
cld
add
cld
scas
addr16
mov
ret
sbb
lds
pop
addr16
lods
jl
movsl
repz
push
test
stc
imul
push
jb
adc
daa
es
aaa
enter
lods
inc
sbb
sti
hlt
outsl
push
pop
into
mov
aad
lea
push
leave
xchg
mov
cltd
lcall
sbb
lcall
ss
arpl
jp
movsb
push
sbb
mov
sbbb
jmp
lds
add
sbb
mov
in
sahf
lea
push
jb
mov
push
and
or
pusha
dec
scas
lock
out
mov
cmpsb
stos
arpl
insb
sub
cmp
dec
fsubrs
ret
or
push
pop
enter
cmp
pop
insl
xlat
lea
xchg
sub
lock
cmp
ror
xchg
stos
aad
or
push
ficoml
dec
jmp
out
dec
les
dec
jp
hlt
call
shll
imul
ficoml
xor
inc
push
pop
sbb
cmp
loopne
mov
fstpl
jmp
insb
or
leave
loopne
mov
mov
add
sti
jecxz
mov
or
fmuls
xor
mov
mov
adc
add
lret
in
push
js
mov
push
test
inc
sub
xchg
or
lods
sbb
or
mov
stos
cltd
aaa
in
pop
cld
adc
mov
cmp
call
adc
pop
test
mov
fdivrs
dec
inc
xor
cld
mov
dec
mov
sub
jae
popf
lahf
loopne
adc
test
hlt
add
cwtl
jge
adc
add
inc
sub
mov
inc
iret
ss
xor
test
fnstcw
loop
repnz
push
test
xor
pop
insl
jns
mov
clc
inc
sub
div
sar
xchg
jns
rcrl
out
enter
pushl
and
aas
inc
jno
xor
push
and
pop
cwtl
cltd
shl
pop
push
sub
ret
pop
adc
or
ret
testb
decl
ret
dec
push
pop
dec
jne
pop
int
xor
sti
repnz
movb
and
sub
mov
mov
inc
jnp
loope
test
mov
mov
xchg
sub
std
push
push
test
popa
xor
outsl
push
mov
repnz
adc
push
shr
test
cs
mov
cmpsb
nop
inc
push
popa
sub
adc
inc
nop
arpl
inc
in
jmp
dec
xchg
out
dec
push
arpl
jle
pop
fnstenv
jle
or
mov
or
mov
cli
repnz
inc
es
inc
jg
mov
jb
jbe
cld
pop
xchg
mov
inc
sbb
xchg
sbb
fcoml
jl
fidivl
and
fs
dec
fistl
ja
arpl
sub
das
jp
xchg
pop
cs
jo
imul
dec
sbb
fnsave
push
notb
les
fcoms
fisttpl
mov
fildl
sbb
pusha
popa
mov
inc
pop
mov
cmpsb
mov
dec
gs
mov
cmp
shrl
repnz
sbb
movsl
test
dec
sbb
arpl
mov
ljmp
xor
inc
xchg
lahf
cmp
cwtl
stos
mov
dec
leave
pop
mov
lock
and
add
fcoml
cmc
arpl
jl
std
or
jg
test
push
mov
push
jecxz
sti
pop
nop
lds
xchg
or
data16
js
leave
inc
lcall
enter
lea
test
or
add
insb
mov
cmp
int3
test
repnz
repnz
mov
push
push
dec
push
mov
or
hlt
scas
scas
lods
push
lock
cli
cmpsb
scas
dec
and
lahf
adc
int
lret
lret
je
push
movsl
out
js
arpl
lahf
cmp
or
pop
jl
inc
dec
pop
je
xor
ret
xor
fildll
imul
aam
icebp
popf
cld
test
daa
sbb
fs
xor
js
bound
sub
mov
ljmp
cmp
mov
jl
mov
pusha
into
ja
insb
bt
xchg
and
arpl
add
push
aaa
mov
mov
cmpsl
jg
push
clc
inc
in
pop
sbbl
jbe
int
mov
inc
cwtl
mov
lea
sti
or
push
movsb
lahf
arpl
aam
mov
lcall
add
mov
dec
outsl
sub
jmp
or
pop
or
sbb
push
pushf
cmp
jmp
pop
negb
in
push
fsubr
rcll
dec
hlt
cli
add
lds
xchg
out
xor
xchg
je
ret
jp
xlat
xchg
adc
icebp
jne
mov
mov
faddp
std
or
adc
jp
js,pt
dec
or
inc
int3
cmp
add
lret
pusha
loope
mov
loope
cld
or
loopne
insb
les
cltd
lcall
pop
mov
or
cld
pop
test
xor
mov
pop
fnstsw
pop
test
dec
mov
nop
mov
imul
clc
and
jno
dec
xor
xor
push
mov
rcrl
rcrb
popf
not
dec
mov
ss
push
fidivl
test
mov
xchg
xchg
test
mov
push
dec
xor
cmpsb
xchg
add
jmp
sahf
mov
sub
jo
jnp
mov
int
mov
xor
mov
jnp
pop
push
jb
or
cmp
pop
loope
xor
sarl
stos
loopne
mov
adc
in
jnp
test
lods
int
mov
data16
ret
js
xlat
imul
outsl
pop
pop
xor
mov
mov
rol
jmp
pushf
cmpsb
xchg
ror
repnz
ja
lret
mov
mov
sbb
add
xchg
jno
fdivs
mov
into
sahf
popa
into
popf
daa
adc
repnz
push
arpl
dec
movsb
lock
push
or
nop
pushf
ret
in
enter
or
inc
flds
inc
push
movsl
cmpsb
and
mov
leave
jae
jge
jecxz
adc
inc
bound
mov
test
xchg
adc
pop
es
sub
repnz
jecxz
jp
and
pushf
xor
ljmp
push
dec
add
and
stos
cmpsb
cwtl
mov
inc
mov
jle
clc
or
push
ficoms
in
mov
loopne
imul
sbb
jno
cmp
push
or
mov
iret
cmpsb
mov
aam
scas
mov
jb
jns
loopne
icebp
jnp
leave
jns
pop
mov
xchg
stos
or
push
push
es
rcrl
pop
and
xlat
mov
imul
rcll
add
xor
push
out
aam
les
pop
dec
int
jmp
xchg
fisubrs
cmp
jmp
cli
repnz
das
mov
leave
sbb
pop
dec
into
dec
add
inc
sub
cwtl
daa
dec
adc
push
stos
cltd
mov
cmp
pop
and
xorb
in
cli
cmp
shrb
outsb
dec
out
adc
jo
daa
push
adc
add
mov
loopne
stos
and
test
and
mov
jae
out
cmpsb
xorl
andb
ja
into
mov
jb
and
mov
sbb
push
sub
sbb
dec
out
scas
out
orl
aam
push
sub
pop
nop
lds
in
imulb
cltd
stc
push
sub
lock
call
xchg
test
dec
lahf
cmpsb
mov
leave
test
js
pop
idivb
and
aam
push
or
jo
xor
fs
sbb
xchg
adc
lods
jne
call
push
cmp
movntq
out
push
mov
jb
xchg
push
sbb
in
aam
hlt
movsb
ds
push
mov
mov
nop
cmp
std
lret
cmc
mov
mov
jg
cmp
sbb
xor
or
mov
pop
push
lcall
fstps
dec
adc
jecxz
xchg
jge
xor
movsb
push
ss
jb
xor
leave
sarl
movb
adc
and
inc
xor
xchg
scas
xchg
nopl
insl
aas
icebp
and
rclb
mov
sbb
iret
loopne
or
push
pop
jo
cmpsb
add
pop
push
xorb
xchg
hlt
pop
testb
cmp
add
or
dec
adc
enter
cmpsl
mov
fs
pop
leave
inc
push
add
adc
dec
and
rcll
mov
aaa
push
inc
inc
es
mov
test
scas
jnp
hlt
mov
cs
adc
mov
mov
ret
jle
popa
sub
xor
stos
popa
xor
js
dec
scas
sub
add
jge
cmp
aas
sub
sbb
mov
les
fbld
push
xchg
dec
cmp
sti
push
cli
mov
mov
jg
sub
loopne
inc
push
loop
lods
cmpsl
dec
cld
inc
shlb
inc
cmp
jo
inc
lret
shl
in
push
loope
inc
xor
movsl
adc
test
xor
das
dec
add
dec
notl
xlat
mov
sbb
fnstenv
sarl
adc
xor
sbb
mov
cwtl
push
push
ret
mov
fs
dec
mov
jp
mov
and
sbb
loope
les
push
sub
hlt
mov
jb
or
push
lods
outsl
add
test
pop
lock
out
lea
mov
scas
test
cmp
das
pop
loopne
inc
gs
pop
jl
xor
rorl
jmp
dec
aas
repz
xor
xchg
lods
outsl
ljmp
in
sub
push
cmp
add
mov
inc
int
bnd
rorl
xlat
fisubrs
sub
cmp
sub
jg
pop
cmp
popa
mov
push
or
xor
out
mov
popf
ljmp
insb
sbb
lret
popl
and
adc
pop
add
sub
mov
mov
dec
xor
jnp
and
cmpsb
and
repnz
adc
adc
and
sbb
push
push
xchg
mov
mov
pop
leave
subl
xchg
in
cmpsl
cs
sub
cmp
jns
fists
sti
dec
lret
xchg
cmp
outsb
andl
test
outsl
xchg
mov
or
mov
mov
pop
mov
fwait
jge
sub
inc
fwait
in
fcompl
jne
mov
icebp
lock
cmp
hlt
inc
in
add
das
inc
mov
adc
mov
and
dec
rorl
nop
popf
sub
xchg
in
fmulp
das
mov
push
sub
loop
fstps
and
movsb
mov
pop
loop
in
inc
push
filds
sub
jle
outsb
push
gs
push
mov
push
add
testb
nop
xchg
pop
pop
or
cmc
stos
iret
mov
adc
sarl
xchg
insb
rclb
dec
repz
lods
aas
call
pop
subl
aas
fwait
mov
in
push
jg
imul
adc
icebp
cmp
jnp
pop
pop
imul
in
lahf
pop
cmpsl
push
pop
sub
xchg
loop
jbe
xlat
mov
mov
cs
in
mov
xor
mov
jg
cmp
mov
lcall
in
in
push
stos
imul
ret
mov
sbb
jae
inc
xchg
scas
in
sbb
rcr
nop
out
sbb
repz
in
sbb
and
jns
or
cltd
xchg
daa
sub
dec
mov
cmpsl
imul
out
mov
xor
sbb
adc
cmp
je
mov
add
popf
pop
out
mov
gs
lea
cmpsb
push
cmp
maxps
scas
adc
inc
test
outsb
int3
loope
mov
xor
push
mov
pop
hlt
sub
jecxz
jle
cmpsb
lahf
jge
es
mov
add
dec
lods
scas
mov
add
cwtl
rolb
push
push
add
pop
data16
pop
pop
adc
xchg
sbb
sbb
jle
xor
mov
cld
mov
mov
inc
leave
sahf
jp
ret
and
sub
fs
pop
lea
jnp
mov
out
es
adc
int3
sub
sub
rcrl
sarl
xor
mov
xchg
fldt
addl
rorb
out
movsl
cs
mov
pop
dec
pop
or
sub
pop
inc
cmp
fsubrl
jnp
aaa
push
jae
mov
pop
aam
push
aad
je
shll
iret
sbb
stos
ret
jno
std
je
push
jo
push
lock
jmp
cli
cmpsl
pop
lcall
cli
out
in
dec
pop
dec
aaa
xor
push
jno
pusha
sub
pusha
lock
xchg
les
in
jbe
int3
xchg
movsl
lret
fyl2xp1
pop
cmp
cs
and
push
jae
ljmp
rorb
gs
pop
cmp
xchg
jne
jbe
ret
scas
in
or
lahf
clc
push
rcrb
repz
ficoms
in
mov
or
or
jecxz
mov
xchg
stos
inc
loopne
pop
bound
fldl
or
push
jg
push
aaa
int
das
xchg
pop
arpl
movsb
lahf
leave
cmpsb
push
rolb
out
je
xchg
pop
sbb
lret
cmp
enter
fucom
fcomp
or
mov
rcr
push
mov
push
andl
jo
add
lds
jl
xorb
and
add
out
addl
fsubs
mov
repz
ficoms
push
push
aaa
dec
inc
adc
and
jl
xlat
cmp
inc
outsl
mov
call
push
cmp
into
out
xor
cmp
mov
popa
sub
aam
cmp
gs
mov
xor
add
jae
into
fimuls
movsl
cld
cltd
insb
jge
pop
cltd
repnz
push
jae
mov
scas
pushf
out
add
popf
mov
and
hlt
mov
test
sbb
or
je
xchg
xlat
jp
sbb
inc
or
jle
lea
lods
mov
mov
and
iret
mov
cmp
lret
int3
rorl
add
sbb
cmp
mov
je
mov
imul
movsl
imul
or
and
sbb
push
push
pop
mov
imul
out
and
pop
xor
jmp
push
xlat
pop
lcall
sbb
mov
sub
xchg
hlt
sbb
add
shll
ret
sbb
mov
sbb
or
hlt
testb
das
xlat
outsb
daa
add
aaa
cs
adcl
fdivl
or
testb
cmp
xchg
gs
add
movsl
xchg
fsubs
pop
xlat
mov
pop
pop
icebp
push
imul
out
enter
out
mov
in
lds
lret
loop
in
repz
adc
adc
je
andb
popa
or
adc
dec
pop
push
enter
add
xchg
vpunpckhwd
cmp
jge
mov
push
sbb
loope
fnstsw
dec
sub
xchg
pusha
sysret
xor
and
push
shl
xchg
addr16
leave
int3
xchg
stos
mov
arpl
and
cs
test
std
bound
jle
mov
mov
mov
xor
adc
mov
outsb
leave
mov
and
aam
dec
sahf
pushf
insb
ja
jne
movb
repz
dec
enter
cmp
cmpsb
sub
jl
xchg
and
ja
int3
lea
lcall
pop
js
mov
and
xlat
push
sub
inc
xchg
cmp
mov
push
sub
mov
mov
icebp
mov
inc
lods
lret
sbb
loop
loop
outsb
sbb
rcrb
lods
call
jbe
jo
out
dec
xor
mov
lret
xchg
sar
shr
rcrl
jle
xchg
sbb
jne
or
and
push
push
push
shrl
push
xorb
adc
push
pop
mov
inc
pop
ljmp
pop
mov
insb
mov
push
lods
mov
test
in
cmp
aaa
push
pop
pop
add
icebp
cmpsl
negl
aas
lock
cmpsb
lcall
int3
cmp
mov
jae
mov
jbe
mov
leave
ficompl
add
icebp
mov
push
add
stos
aam
inc
nop
xor
cmc
loope
shl
shll
or
stos
pop
xchg
rorb
pop
jo
pop
pop
fbstp
stos
add
sbb
xchg
cwtl
xchg
inc
push
int
aam
es
and
pusha
lahf
icebp
pushf
ss
push
jnp
or
lcall
fldt
jb
inc
jl
add
clc
jmp
sub
push
inc
lods
out
gs
add
mov
js
aad
mov
cmp
jg
or
popa
jmp
sub
adc
sub
dec
lock
mov
xchg
pop
lods
int
mov
lock
sbb
cmp
xchg
mov
xchg
push
js
nop
jg
cs
cmp
inc
jecxz
xor
push
data16
je
cmp
repnz
ret
outsb
not
jo
jo
nop
add
aad
adc
enter
pop
sbb
leave
cmp
xor
into
cmpsl
push
je
cmc
dec
jo
cltd
and
testl
stc
rclb
nop
jp
xchg
xchg
pop
pop
subb
dec
add
hlt
lret
jns
cmc
or
mov
inc
push
out
sub
rol
std
nop
or
push
push
jle
jge
cmpl
sub
push
shr
mov
jnp
arpl
shl
test
pop
aam
dec
dec
fistps
pusha
sbb
out
daa
inc
cs
xor
cld
mov
cwtl
cli
shlb
lods
out
cmpb
fidivrl
sub
inc
stc
dec
mov
addr16
jo
or
xchg
add
push
pop
incb
jae
enter
and
dec
and
xor
cmp
and
and
cwtl
cmp
and
cmp
pushf
dec
hlt
push
xchg
xchg
cltd
xor
mov
dec
xlat
mov
int
push
cs
jne
lcall
add
inc
sub
xchg
mov
mov
mov
mov
lret
lock
pop
daa
aaa
jae
or
add
inc
dec
sbb
lods
fucom
inc
iret
dec
out
lcall
insb
sarl
outsb
pushf
pop
push
repnz
xchg
cmp
pop
imul
cmpsb
mov
test
imul
push
jae
mov
aaa
fsubp
lret
inc
test
mov
loopne
mov
sub
pusha
ds
fwait
les
jne
jp
xor
or
xorb
dec
shrb
mov
in
aaa
xchg
push
push
adc
mov
nop
pop
js
push
push
cmc
sti
cmp
scas
or
ret
push
jno
sub
jle
sub
lds
cmp
fists
cli
pop
pop
cld
stos
push
jg
cmpsb
in
push
shlb
cmpsb
out
ds
sub
test
rcl
xchg
xor
aad
in
les
lfs
dec
cmpsl
ljmp
xchg
dec
mov
imul
outsb
stc
adc
inc
sub
cltd
xlat
lahf
rclb
rolb
outsl
movsb
xor
aas
jecxz
das
rep
mov
outsl
pop
jg
fs
sub
mov
jns
mov
lret
fisubrs
mov
ja
dec
int3
jae
sbb
mov
faddl
xor
rol
fisubs
leave
and
mov
lds
dec
popa
inc
mov
push
popl
les
sub
loope
fstps
add
push
aam
push
in
roll
jmp
cli
fs
ret
insl
into
mov
subl
cmp
fisttpl
into
and
je
repnz
mov
out
mov
sub
adc
mov
cs
xor
imul
xchg
xchg
insb
add
dec
mov
adc
es
cmp
fisubrl
idivl
mov
mov
push
push
imul
inc
xchg
sub
or
jno
mov
dec
iret
lods
or
shll
aad
dec
cld
pop
or
mov
mov
sub
jmp
sti
and
sbb
lret
insl
imul
add
lea
fldenv
mov
dec
jo
addr16
or
repz
aad
xor
or
jmp
mov
call
call
and
add
inc
pusha
jle
popa
shrl
dec
testl
adc
mov
xor
cltd
icebp
xchg
or
cmpsb
scas
mov
sub
nop
mov
cmp
jb
dec
push
adc
ret
paddsw
lahf
jae,pt
push
stc
aas
and
cs
iret
outsl
outsb
sub
jle
jbe
inc
jge
out
hlt
fwait
or
scas
push
mov
stos
in
repz
xchg
pop
pop
outsb
pop
and
ror
outsl
adc
idivl
pop
xor
mov
std
add
jp
sbb
dec
insb
inc
sbb
loopne
out
push
loop
xor
xchg
scas
pusha
jge
mov
inc
inc
jns
into
adc
or
mov
jecxz
mov
leave
call
ss
cli
add
bound
fdivl
cmc
mov
push
out
fiadds
decb
dec
and
xchg
jg
leave
jno
or
or
dec
xchg
jne
insl
adc
xor
xor
dec
cs
iret
adc
scas
or
pop
or
repz
sub
and
fwait
mov
or
push
fisttpl
ss
cmpb
adc
call
push
jle
pop
sub
loopne
push
add
adc
arpl
in
push
mov
loopne
jmp
iret
add
stc
test
xor
xchg
sbb
jle
leave
and
xchg
popf
repz
mov
mov
mov
pop
mov
and
dec
jecxz
mov
jae
xor
xor
dec
or
jne
mov
repz
data16
add
fwait
pop
fldcw
pop
in
test
cmp
and
push
inc
cmp
xor
cmp
or
bound
pop
and
mov
pushf
dec
jecxz
out
mov
rcrl
mov
cmp
loopne
pop
outsb
testb
xor
mov
cmpsl
out
add
sbb
popa
je
arpl
inc
pop
test
push
push
es
or
jnp
pop
bound
add
add
or
int3
mov
jg
mov
aad
add
dec
pop
pushf
test
cmc
xchg
mov
xchg
dec
xchg
adc
cltd
cmp
lock
mov
pop
orl
mov
pop
fisubs
mov
cmp
nop
mov
shll
and
loope
inc
sti
add
or
sub
jns
pop
inc
data16
mov
add
shr
add
cwtl
sbb
lcallw
xor
mov
je
mov
adc
sub
lahf
loop
test
insl
mov
pop
inc
sbb
cwtl
scas
xor
rorl
inc
into
dec
mov
cli
pop
int3
sbb
imul
adc
mov
insl
xor
lea
mov
popa
outsl
fdivrs
faddp
sub
pushf
pop
int
imul
or
jmp
ret
ss
repnz
cmp
scas
pushl
mov
mov
inc
pushf
cmp
xor
and
cld
lods
jae
jno
cmp
mov
lret
fistpl
in
xchg
inc
and
mov
in
jp
jle
pop
ret
punpckhdq
dec
xlat
sti
mov
outsb
pop
jnp,pn
xor
outsb
mov
enter
push
js
out
ret
aad
jl
cli
mov
sub
push
and
adc
or
shlb
xchg
pop
jle
js
shrl
pop
push
mov
xchg
mov
idivb
xor
stos
xor
inc
fcomp
dec
insl
inc
add
xchg
xchg
jecxz
xchg
cmp
fsubs
sub
int
sub
iret
dec
sbb
aam
sarb
dec
loop
pop
push
jae
dec
mov
rorb
mov
inc
fistpll
pop
adc
gs
scas
jge
jmp
xor
rcrl
cmp
and
sbb
pop
sub
xor
mov
xchg
sbb
mov
inc
push
add
xor
stc
or
add
jnp
pop
mov
mov
mov
ret
push
hlt
imul
dec
cmc
outsl
push
push
push
movsb
cmpsl
imul
je
push
outsl
imul
js
and
gs
stos
pusha
fdivrs
pop
mov
cmp
adc
sub
fistpl
sub
daa
dec
push
mov
push
int
push
daa
pop
mov
testl
pop
sub
dec
lods
xor
cmp
lret
dec
jmp
repnz
jmp
insb
xor
jle
xchg
aad
rol
push
aaa
in
aad
xor
jg
sbb
cli
fldl
xlat
fadds
out
push
fsubrs
jne
jl
dec
jmp
sbb
and
mov
jmp
cmp
sub
pop
ja
or
mov
cld
push
jle
scas
out
lret
xchg
in
mov
and
dec
scas
pop
adc
adc
inc
cmp
xchg
push
jns
aaa
xor
ret
out
call
inc
inc
xor
mov
cmpsb
fwait
jg
insl
jmp
jbe
std
out
dec
insl
sub
dec
mov
push
lock
inc
fldl
sub
mov
pop
or
xlat
add
or
xchg
push
cmovo
xchg
test
jecxz
sbbb
js
ljmp
jl
repz
mov
cmp
test
imul
sbb
xchg
hlt
push
decb
or
pusha
push
dec
sub
dec
sub
cltd
jno
sbbl
and
lds
bound
lea
pusha
adc
sub
movsl
and
test
or
push
sbb
lods
fstps
jp
dec
pop
insb
add
xor
lahf
inc
dec
adc
aas
adc
aad
and
stos
scas
xchg
std
and
je
or
test
mov
inc
push
push
xor
sub
loopne
jns
sub
les
aad
popa
in
pop
push
fiaddl
outsl
lahf
push
mov
lock
sbb
dec
and
jb
xor
popf
dec
sub
fmuls
sbb
jecxz
lods
stc
pop
daa
push
cmp
xchg
mov
push
into
std
sbb
xor
sub
cld
push
sbbb
mov
leave
push
mov
mov
mov
int3
lods
mov
std
add
adc
addr16
adc
rorl
cli
or
aaa
sub
lea
pop
fldt
in
sbb
fildll
cs
test
nop
push
lds
dec
fs
adc
shl
or
mov
cli
mov
ret
mov
adc
int3
inc
out
lret
es
ljmp
inc
test
les
out
das
inc
data16
cmpsl
xchg
and
test
js
hlt
pusha
mov
cmp
ss
dec
jnp
in
dec
sbb
jb
shrl
in
stc
bound
mov
lds
pop
ja
movsb
addr16
fwait
mov
hlt
push
stos
int
sbb
out
pop
std
add
and
pop
push
int
sbb
xor
push
sbb
fidivrl
sub
fiadds
cmp
shll
test
pop
sbb
sti
test
mov
int
in
mov
or
push
jnp
js
imul
stc
inc
add
imul
dec
stos
sbbl
in
mov
xor
shlb
dec
inc
sbb
xor
dec
mov
jbe
dec
push
push
cmp
out
pop
loop
mov
push
popa
mov
sub
fidivs
push
adc
test
call
js
jb
addr16
mov
add
out
xchg
mov
cs
scas
inc
pop
clc
ss
mov
mov
stos
bound
sbb
test
fisttpll
adc
pop
cmp
jmp
xchg
add
inc
jo
xlat
xchg
push
je
lar
sbb
movsb
loopne
sbbb
jmp
dec
fdivl
or
dec
sub
jl
cltd
jo
fimuls
into
sbb
mov
les
push
stc
mov
xchg
aaa
add
mov
out
lcall
push
stc
adc
ja
jg
ret
out
je
sbb
mov
enter
les
enter
ds
mov
aad
mov
xchg
test
sahf
scas
rcrl
into
scas
sarl
adc
dec
xchg
fldcw
lock
xor
mov
mov
xchg
jle
lods
inc
mov
cmp
ja
mov
adc
dec
dec
mov
iret
fists
ret
adc
inc
mov
jl
dec
stos
or
mov
lods
int3
mov
or
lods
loop
or
push
repnz
push
pop
cmp
jo
sub
sub
jae
or
adcl
or
or
adc
xor
push
popa
sbb
out
and
loop
jmp
adc
sub
mov
mov
xor
pop
popf
mov
pop
in
jge
jmp
enter
xchg
cmpsb
ret
push
mov
loopne
pop
psubusb
cmp
xchg
mov
xchg
sarb
pop
xchg
cmpsb
pop
jg
fdivl
sbb
out
popa
test
insl
push
std
shlb
shrb
pushf
outsl
jp
cmc
jae
push
lock
adc
xor
lret
jns
add
sub
int
fcoms
add
imul
adc
push
mov
aam
test
ss
and
inc
imul
addr16
pop
push
gs
sbb
aam
push
in
push
rolb
inc
mov
imul
lods
xchg
stc
inc
popf
add
push
push
flds
mov
pushf
jle
jnp
shl
fmull
jo
jb
jp
push
aaa
orb
mov
into
out
xor
jle
sub
out
es
mov
scas
or
icebp
inc
push
lret
ss
sub
dec
jbe
mov
sti
bound
out
sti
or
inc
hlt
shrd
lahf
out
fistpll
xor
push
adc
pushl
mov
sub
std
fistpl
lea
ljmp
jnp
enter
adc
dec
xchg
inc
jl
push
addr16
cmp
sub
ds
in
pop
xor
lret
xchg
jne,pn
push
lock
ja
insb
aaa
mov
jl
jne
psubsb
jge
sbb
arpl
inc
mov
inc
cli
push
roll
push
adc
mov
adc
cmp
dec
add
mov
ret
adc
aad
sub
mov
scas
mov
movsb
mov
ret
cmp
in
sbb
movsb
gs
mov
mov
int
ja
inc
fdivrs
mov
test
xor
mov
adc
leave
insl
mov
inc
test
pop
mov
xor
jmp
cmp
jns
sahf
lods
movsl
into
sti
aad
sbb
das
xchg
and
mov
cmp
mov
push
in
mov
dec
pop
fsubrl
and
jmp
fidivl
ret
fs
ja
or
xlat
scas
xlat
inc
xchg
imul
push
dec
out
lret
in
imul
cmpsl
clc
xchg
psubd
cli
mov
mov
pop
mov
shll
cld
in
xor
gs
mov
jg
lret
inc
int
cltd
ja
adcb
das
enter
icebp
xchg
sbb
mov
push
dec
push
add
movsl
cli
std
icebp
insb
ss
jo
out
or
jae
mov
mov
bound
test
push
out
cmpsl
push
mov
or
cmc
test
gs
js
or
lods
sbb
icebp
imul
dec
jp
push
pop
mov
xchg
pop
scas
stos
hlt
ja
mov
mov
pop
js
mov
push
mov
push
movsl
or
push
daa
dec
test
aaa
sahf
inc
in
cmp
cs
aam
cli
and
cmp
push
insl
push
shll
mov
adc
movsl
test
ret
fsubl
jne
lret
inc
dec
sbb
in
or
xchg
cld
xchg
mov
in
enter
sarb
push
seta
mul
icebp
jl
cmp
idiv
sbb
jmp
aad
mov
push
es
dec
cmpsb
int
cmp
pop
pushf
jge
bound
cld
es
mov
or
insl
ret
es
add
pop
cli
push
into
subb
insb
arpl
loope
adc
and
and
jbe
aam
xchg
nop
sub
push
iret
xchg
push
dec
adc
or
push
es
pushf
out
aad
sbb
mov
arpl
fdivrl
cmpl
pop
sbb
outsl
popa
ds
jo
xor
cmp
mov
lds
fimull
push
ret
lret
dec
sub
lret
test
mov
addr16
mov
aad
jne
dec
outsb
xor
int3
mov
adc
stos
pop
cmc
mov
add
fsin
repnz
rclw
sbb
pop
sub
test
lret
cmp
cmp
and
outsl
push
mov
mov
sbb
push
dec
cmpsb
scas
inc
mov
mov
sbb
leave
sarb
push
or
sbb
xchg
inc
dec
jo
push
imul
loopne
add
fwait
inc
fisubrl
sbb
adc
cltd
lods
imul
xlat
aam
inc
inc
pop
mov
sub
and
sbb
mov
in
ret
leave
and
or
jge
rclb
iret
jnp
hlt
test
shr
jle
push
je
repnz
and
and
rcll
js
shl
adc
loopne
dec
stos
sub
ss
in
inc
xchg
adc
negb
pushf
rclb
pop
adc
xchg
adc
aas
addr16
lods
mov
push
lahf
popa
jno
f2xm1
outsl
je
xchg
cmp
jbe
sub
mov
and
push
or
fmulp
les
pop
bound
jne
subl
les
xchg
mov
mov
loopne
and
cmp
out
das
insb
pop
bound
in
arpl
xlat
outsb
mov
pop
imul
cmp
inc
push
mov
repz
ljmp
cmpsl
cli
push
add
sub
je
mov
sub
addr16
mov
push
mov
icebp
cs
mov
in
movsb
icebp
cld
scas
mov
movsb
push
outsb
mov
sbb
loop
add
das
add
sbb
cmpsb
cmp
cmc
mov
or
ja
lahf
sbb
jmp
leave
mov
imul
std
push
sub
dec
or
jecxz
push
xor
insl
lret
cmp
sti
lock
adc
xchg
push
out
lret
lcall
adc
les
pop
push
adc
inc
or
inc
popa
xchg
jl
and
test
idivb
icebp
cwtl
mov
sbb
mov
aaa
cwtl
sbb
aad
int3
loope
sub
dec
sbb
ljmp
cwtl
shr
pop
inc
test
fcomps
imul
filds
repnz
or
pop
mov
test
shrl
add
fwait
mov
inc
adc
and
addr16
pushl
fcomp
lret
movsb
fs
sub
mov
inc
out
ds
and
mov
mov
and
dec
cmp
and
std
cmp
stos
clc
lods
sbb
sub
mov
sbb
dec
hlt
movsl
push
sub
mov
ja
lret
dec
pushf
ss
in
sub
push
dec
jecxz
dec
mov
cmp
mov
mov
scas
mov
or
and
mov
stc
mov
mov
mov
and
int3
adc
call
ficoms
or
mov
pop
inc
cs
xchg
adc
js
sub
ja
cmp
jb
add
filds
sbb
decb
inc
mov
ja
jmp
push
cmp
pop
mov
sbb
add
fcompl
stos
fsubr
std
dec
inc
leave
push
lret
xlat
pop
inc
xor
jle
enter
mov
mov
or
sbb
ret
xorb
or
jle
es
loope
sub
jbe
xchg
push
sub
mov
stos
ljmp
lret
or
cmp
lods
pushf
movsl
jle
rorb
mov
out
lods
adc
int
push
pushf
cmp
mov
ss
in
in
inc
addr16
push
test
mov
call
lcall
adc
sbb
sub
mov
jo
mov
mov
push
mov
iret
pop
jne
movsl
or
pop
mov
test
mov
dec
jb
in
xlat
sahf
les
les
add
mov
bound
leave
stos
into
sbb
fisttps
les
fsubrl
xchg
data16
movsb
shl
dec
push
lahf
jns
out
mov
push
stos
imul
out
push
jno
fwait
cs
out
test
adcw
sbb
into
dec
inc
pop
fldenv
mov
repz
mov
insl
repnz
frstor
fcmovu
sub
jmp
jl
cmc
dec
vorps
sbb
je
mov
lea
xlat
imul
mov
inc
stos
rcrl
outsb
lock
prefetch
or
je
out
mov
scas
mov
cmp
or
add
test
ficoml
mov
in
push
add
jnp
jb
pop
mov
push
mov
lcall
popa
inc
dec
addr16
xor
mov
xor
mov
loope
popa
push
lret
and
enter
mov
mov
xor
mov
push
movsb
addr16
mov
out
sbb
adcl
jae
stos
cmp
mov
insb
sbb
mov
jbe
aas
stos
out
pmaxub
jb
jno
sub
ret
ficoml
lods
aam
xchg
das
push
ret
xchg
popa
test
push
test
xchg
aas
fstpt
fcompl
xor
push
pop
cmc
dec
paddusb
std
aad
addr16
sub
push
negl
dec
aad
daa
cltd
push
xchg
pushf
sub
les
or
mov
loopne
and
hlt
cli
arpl
ljmp
sub
sub
pop
mov
hlt
scas
out
int3
add
inc
lret
sarb
sbb
int
cmp
lret
jne
lcall
sarl
push
call
adcb
aaa
js
mov
shrl
fisubl
stc
xchg
inc
iret
adc
out
cmp
shl
sub
sbb
cmp
adc
rorw
push
outsl
les
fsubl
repnz
sti
stos
sub
fnsave
pusha
stc
push
std
lahf
cmp
dec
push
js
je
push
stc
push
insb
jmp
repz
popf
fwait
mov
push
fidivrl
dec
xchg
xor
inc
frstor
fdivr
or
in
aam
jo
pop
pop
sarb
and
aam
out
push
loopne
push
outsl
les
add
test
xchg
cmp
test
and
rorb
enter
int3
jae
and
fildll
aaa
imul
in
cmc
lock
into
in
adc
lea
pop
add
mov
aad
xchg
xchg
imul
cmp
inc
xlat
dec
sbb
outsl
cwtl
xor
fisubs
cs
cmpb
mov
add
xchg
shl
je
push
mov
jmp
sub
ret
pop
bound
les
lds
cmp
xor
sub
fcmovnu
pop
jecxz
mov
movsl
dec
mov
dec
push
jge
cld
lcall
push
push
lret
incb
mov
and
xor
fildll
dec
mov
fiadds
xor
mov
icebp
aaa
cmp
js
adc
aam
dec
addr16
jae
xor
aad
mov
mov
mov
sbb
xlat
rclb
in
scas
dec
push
dec
and
lea
jl
push
test
jnp
xchg
cld
andb
int3
push
pop
int
cli
jb
cmpsb
xchg
and
add
ds
cmpb
xchg
and
jno
jg
pop
lea
or
and
fwait
aas
pushf
mov
or
mov
stos
fstps
push
push
in
bound
mov
inc
cmpsl
cld
sti
inc
rcl
mov
cmc
or
mov
test
ret
jbe
jp
jne,pt
mov
jb
out
inc
sub
es
adc
cmc
insb
mov
pop
dec
adc
or
mov
test
jl
nop
jle
lahf
sub
add
popf
sbb
sbb
sahf
xchg
push
adc
mov
cld
sub
jle
arpl
rorl
lcall
ret
add
int
mov
adc
mov
xor
mov
mov
dec
mov
xor
mov
pop
je
adc
orl
push
loop
ds
and
cld
adc
aas
xor
push
insb
and
cmpsb
mov
repnz
and
jecxz
cld
xchg
or
xchg
push
stos
movsl
sub
shl
add
gs
xchg
cld
ficoms
mov
xchg
enter
xchg
aaa
adc
cltd
jmp
mov
mov
inc
pushf
add
mov
jl
dec
xchg
lods
lock
sarl
clc
clc
jnp
or
stos
pushf
add
pop
sbb
sti
and
mov
ja
mov
mov
rol
dec
jge
lret
orl
in
dec
xor
out
mov
jge
sahf
lcall
ds
mov
mov
in
fsubp
out
outsb
add
cmpsl
mov
jl
pusha
sahf
pop
enter
enter
dec
ss
icebp
adc
mulb
adc
enter
jae
aad
in
xchg
pop
in
loop
xlat
shl
pop
adc
js
xchg
out
sub
test
jns
push
pop
xlat
call
data16
test
movsb
sub
daa
int3
flds
and
arpl
and
lret
dec
inc
cmpsl
mov
jnp
lahf
add
test
sbb
faddl
push
gs
arpl
lods
mov
decb
mov
mov
and
and
out
dec
mov
daa
add
xlat
or
dec
sub
frndint
cwtl
add
lods
sbb
push
fidivrl
icebp
js
mov
outsb
clc
sti
mov
sub
jge
rolb
xchg
cltd
std
push
push
jb
pusha
xor
cltd
pop
inc
fadds
xchg
or
loopne
scas
test
loop
sahf
push
push
jmp
or
int3
or
das
jmp
imul
loopne
popf
popf
mov
pushf
jnp
mov
aam
jno
addr16
ret
or
push
fs
mov
mov
aad
outsl
iret
jg
gs
add
xlat
dec
xchg
pop
xor
mov
lcall
into
mov
jnp
shl
jnp
sbb
cs
cmp
aam
jbe
and
leave
test
in
outsb
add
xor
xchg
movsl
pop
aaa
inc
pop
xchg
pop
das
pop
das
mov
xchg
je
bound
test
lret
and
ret
adc
push
adcl
add
push
xor
ss
sti
lahf
icebp
stos
std
enter
jae
push
xchg
lds
les
pop
aas
addb
dec
das
dec
imul
clc
xor
jnp
push
movsb
inc
lods
cmp
test
daa
sar
fcompl
add
push
mov
sub
xor
sub
sbb
push
mov
push
sub
lods
mov
inc
scas
js
jnp
sarl
add
sahf
add
inc
push
mov
call
lret
out
cmp
aad
pop
jns
inc
pop
aam
nop
and
inc
sti
test
pop
dec
cmp
push
fstl
lahf
imul
mov
leave
out
sbb
cld
xchg
jo
sub
enter
jg
in
out
xchg
mov
push
int
mov
sub
pop
movsb
or
pop
shl
inc
jne
sbb
jmp
or
decl
out
adc
push
ficompl
sahf
loope
jp
xchg
mov
pop
rolb
and
push
and
mov
or
push
cmp
inc
pop
cmp
xor
inc
sarl
fcomps
in
xor
pop
nop
icebp
iret
or
or
push
addr16
mov
hlt
cmpl
adc
xchg
ljmp
sbb
pop
jl
stc
cs
xchg
add
pop
aam
xchg
cld
pushf
in
add
ljmp
testb
imul
clc
call
pop
fs
in
enter
popf
std
sub
sub
repnz
sbb
out
mov
sbb
lods
iret
push
or
andl
incl
jo
ss
fimuls
cmc
push
mov
push
int
add
lods
gs
and
fldenv
mov
imul
js
aam
or
pop
adc
jl
in
mov
and
jl
xchg
mov
cwtl
cmpsl
xchg
inc
ss
jb
test
jo
xchg
xchg
lret
pop
xor
xchg
push
stos
add
mov
lret
sarb
pop
pop
xchg
push
pop
dec
sbb
movsl
xor
das
add
negl
sti
jge
jns
inc
sbb
jo
adc
std
xchg
repz
pop
idivb
jmp
fcoml
adc
adc
xchg
aam
add
shlb
dec
call
leave
andl
flds
xchg
dec
xchg
xor
mov
pop
fisubl
inc
pop
add
mov
adc
ds
frstor
decl
cmp
adc
and
in
adc
add
lret
movsb
out
aam
dec
jle
rorb
jle
adc
cmp
sbb
aaa
daa
xor
inc
ret
mov
push
daa
or
push
aas
test
add
dec
test
jl
add
sbb
pusha
mov
fldcw
ffreep
mov
adc
cmp
add
stos
pusha
int
jne
ret
rorb
xor
sbb
jnp
mov
add
jl
xor
in
imul
adc
repz
cmp
ficoml
iret
stos
push
add
inc
js
outsl
outsb
mov
inc
push
mov
sarb
pushf
shrb
in
call
pop
lret
mov
cmc
push
lds
subl
sub
mov
add
sbb
xchg
cs
push
jg
jbe
jnp
fisubrs
fisubs
movsl
in
call
cmp
adc
stos
or
push
int3
nop
in
add
add
mov
ror
sbb
pop
dec
shl
pop
pop
shr
mov
test
jl
inc
and
or
icebp
push
stos
xor
sbb
lock
scas
loop
mov
test
lock
lods
cld
and
jnp
arpl
or
shlb
negl
loope
ds
pushf
jl
mov
push
outsb
xchg
out
pop
sbb
xor
dec
mov
loop
dec
xchg
rorl
mov
or
push
arpl
or
decl
notl
lahf
int3
mov
fstpl
aaa
insb
rorb
adc
enter
add
sub
out
lds
adc
repz
dec
and
xchg
cmp
or
rclb
fisttpl
shll
lods
sub
push
scas
outsl
pop
add
pop
xchg
shl
inc
or
push
jmp
lret
mov
stos
fwait
adc
pop
jmp
fxch
pop
popf
adc
mull
aam
ljmp
scas
xchg
xor
cmp
lds
lret
das
dec
sub
jo
imulb
imul
lods
call
mov
dec
adc
add
dec
out
mov
pusha
stc
xchg
fadd
or
dec
pop
cmp
in
pop
in
pop
push
fbstp
inc
push
loopne
sti
xor
dec
int
decb
pop
cmp
mov
mov
rdmsr
push
stos
cmpb
xor
pushf
adc
fimull
xchg
das
dec
mov
ja
hlt
or
add
popa
mov
aad
mov
das
dec
and
cld
cmp
xor
sub
sub
stc
popa
movsb
daa
cmpsb
enter
repz
jae
lret
mov
cmp
cmp
mov
inc
mov
jmp
pop
int
lret
jmp
ret
shr
jne
rcrl
cmp
mov
aas
push
add
mov
push
inc
dec
out
in
andl
pop
mov
out
adc
xchg
sub
pop
push
inc
sub
mov
ret
pushf
gs
int
mov
repnz
mov
pop
inc
xchg
push
enter
fwait
fwait
mov
sti
or
cmp
enter
icebp
push
add
repz
push
scas
ss
rcll
imul
xor
jmp
ficomps
or
rorb
pushf
fwait
or
jae
insb
and
rcrb
cmc
cmp
insl
stos
xor
movsl
adc
sarl
scas
sbb
xchg
aam
xlat
loope
in
cmpsb
xor
fldl
xor
adc
xchg
fsubrl
popa
xor
mov
sbb
jbe
mov
pop
inc
fisttpll
or
mov
divl
sbb
imul
inc
repz
mov
push
sahf
push
lods
pop
jmp
ret
iret
mov
insl
push
pop
das
outsb
loopne
mov
es
xchg
adc
scas
pop
insl
pop
add
pop
shrl
jl
adc
bound
outsb
inc
xor
sbb
icebp
loop
dec
sub
roll
adc
pop
mov
incb
dec
inc
int
push
enter
icebp
add
lret
xchg
push
inc
fwait
mov
push
out
jecxz
fistpll
mov
xchg
mov
stc
xor
xchg
std
sbbl
dec
mov
aaa
pop
push
popf
push
or
pop
mov
mov
or
cmc
xor
sbb
xchg
mov
xor
dec
jle
push
dec
lret
sub
test
cmc
lahf
repnz
mov
pop
or
lods
sbbb
es
scas
cmc
ficompl
adc
leave
loop
insb
pop
ss
push
xchg
mov
mov
test
int3
xchg
mov
hlt
test
cmp
iret
sarb
fstl
xchg
add
mov
xor
xor
shlb
sti
cwtl
dec
xor
sub
ret
cs
aad
sti
lahf
fstpt
je
sbb
sbb
inc
std
sti
and
sbb
xchg
push
mov
jecxz
sarb
inc
lcall
sbb
lea
dec
mov
mov
xchg
jmp
aas
mov
mov
iret
cmc
mov
mov
mov
shll
add
popa
ss
in
inc
data16
mov
xchg
arpl
stos
sub
arpl
mov
dec
scas
mov
das
cmp
mov
push
jle
movsb
pop
push
popa
sbb
stc
cmp
aas
lods
js
dec
pop
test
mov
sub
scas
lock
or
pop
and
jmp
fnsave
imulb
rorb
repnz
data16
cwtl
dec
cli
cmp
xchg
mov
push
mov
cltd
push
or
mov
mov
xor
sbb
pop
cwtl
mov
ret
inc
imul
roll
push
push
or
push
inc
ss
pop
clc
jl
xchg
ret
js
jl
and
xor
mov
shll
mov
mov
cmc
and
cmpsb
adc
jnp
sub
or
fnclex
push
mov
and
push
in
inc
mov
inc
mov
adc
cmpsl
loop
call
add
dec
fisttpl
mov
enter
out
mov
test
int3
gs
das
mov
ffreep
adc
xor
cli
lock
shrl
dec
fnsave
sahf
adc
xor
imul
push
test
mov
pop
or
ja
daa
inc
dec
mov
lret
sbb
jmp
jo
fisubrs
xchg
call
xchg
pop
xchg
fmull
out
fsubl
icebp
mov
scas
push
mov
cmp
subb
inc
lcall
lods
mov
aam
add
int3
shl
test
cli
jne
xor
in
mov
out
iret
insb
loopne
push
push
inc
push
gs
aas
imulb
inc
pop
shr
mov
pop
dec
dec
push
sbbl
js
and
mull
inc
faddl
adc
js
test
fwait
mov
pop
jle
jmp
mov
pop
inc
cwtl
sbb
imul
aam
adc
icebp
stos
jo
jae,pn
xchg
popa
repz
cmp
lods
out
icebp
jle
mov
and
push
mov
jb
les
test
cmc
push
fsubs
adc
adc
imul
sub
adc
jl
inc
stos
xchg
push
and
jo
es
push
jnp
or
xor
test
sbb
data16
push
xchg
int3
dec
sbb
roll
adc
xor
adc
inc
mov
xchg
mov
mov
shrl
and
inc
cli
xor
mov
and
dec
ja
cmp
pop
fs
jnp
sahf
out
jae
add
jae
or
mov
mov
fistpl
mov
add
xlat
fdivrs
outsl
mov
nop
inc
push
jb
rorl
jl
out
leave
xchg
dec
jmp
into
jbe
pushf
or
movsl
pop
mov
lret
xchg
cmp
rclb
adc
mov
jg
jmp
and
jle
mov
cwtl
push
add
faddl
popf
jge
jecxz
loopne
sub
sub
sub
scas
fwait
mov
jbe
data16
xchg
repz
cltd
scas
dec
pop
jl
lret
inc
idivb
pusha
cmpl
push
jae
mov
popa
imul
sahf
in
xchg
xor
fsubl
popf
sub
add
mov
fdivrp
jecxz
pop
imul
bound
fmull
mov
lock
stos
mov
std
cli
aad
and
add
dec
jg
jecxz
or
sbb
xor
cwtl
dec
xor
mov
sbb
stos
das
shlb
jo
push
push
push
test
cld
leave
repz
mov
cmpsl
imul
xchg
shll
imul
xchg
mov
icebp
push
je
jno
mov
cmpb
cmp
mov
cld
insb
or
pushf
inc
int
add
xor
pushf
sbb
pop
adc
mov
pop
idivl
sahf
adc
xchg
fmuls
mov
inc
in
cli
scas
and
sub
push
in
mov
fldt
mov
test
mov
mov
adc
aaa
mov
repz
adc
dec
mov
push
inc
mov
int
inc
gs
fsubl
xchg
addl
into
es
xor
gs
push
dec
mov
pop
popa
xor
lock
or
xchg
or
add
sbb
inc
xchg
jg
lock
repnz
dec
adc
sbbb
std
shll
add
cmp
imul
xchg
and
jo
lods
jbe
add
inc
mov
pop
pop
push
add
test
pop
cmp
rcl
ret
push
test
mov
ret
cmpsb
adc
adc
pusha
sub
call
cmpsl
sub
outsl
jp
mov
mov
out
pop
adc
pop
xor
inc
inc
jp
in
inc
test
lcall
cmp
dec
scas
insl
test
lea
out
out
xlat
jb
xchg
xchg
xchg
movsb
mov
sbb
adc
cmp
xchg
push
jo
push
ret
aad
mov
mov
mov
test
movsl
cmpb
into
mov
mov
pop
adc
mov
std
mov
lods
pop
adcl
adc
sbb
jns
mov
push
fsubr
roll
outsb
lret
scas
in
stos
mov
test
mov
mov
cmpsb
pop
push
ds
call
popf
sarb
sbb
popa
ficoms
clc
fdivr
and
test
out
dec
fidivs
mov
inc
sbb
int3
idivb
sahf
outsb
or
jl
repnz
cmpsb
clc
jmp
xchg
lret
push
rcrb
fsubr
fs
inc
xor
jmp
mov
ficompl
mov
sar
push
inc
cmp
inc
or
cmpl
imul
lahf
nop
fdivrl
clc
mov
jmp
jg
test
test
push
leave
and
pop
fmull
std
dec
adc
jb
and
add
insb
pop
mov
push
sub
xchg
jae
cs
stos
mov
out
add
popf
fdivrp
adc
jge
pop
mov
xchg
rcl
or
mov
cmp
rorb
adc
stos
rcr
mov
adcl
dec
cmp
xor
or
sbb
add
adc
sbb
repnz
cmp
or
sahf
push
das
test
into
lcall
push
cmp
repnz
sbb
add
lods
pusha
jg
cmp
sbb
int3
aas
fcomp
mov
dec
mov
jp
je
jb
jle
sbb
pusha
cmp
mov
xchg
mov
xor
jnp
push
add
movsb
push
out
imul
pop
shrb
mov
adc
stc
or
xor
cmpsb
mov
or
dec
jl
in
test
adc
cmpsb
int
pushl
sub
or
cli
dec
dec
ret
fwait
mov
mov
pop
jecxz
fcmovnu
mov
rcl
divl
mov
test
sub
ds
sbbl
sub
sbb
inc
fidivrs
insb
ret
xchg
xor
icebp
arpl
xchg
mov
sub
cwtl
loop
jg
roll
div
push
jne
mull
xchg
sub
cld
push
pop
sub
mov
out
inc
sahf
sbb
test
nop
popa
cmpsl
or
aas
push
call
fldpi
das
jne
xchg
lock
hlt
pop
repnz
pusha
add
std
mov
repnz
mov
inc
popa
cli
and
cmp
sar
or
aam
jle
push
xor
push
pop
xchg
jecxz
out
test
adc
leave
jl
fwait
and
push
push
cmp
sub
mov
ja
je
lea
fs
inc
jp
gs
inc
jbe
add
add
mov
xor
lcall
add
shll
in
sbb
xchg
cmpb
pop
cmp
fisubrs
shlb
in
jl
mov
dec
int
xlat
xchg
sahf
inc
xor
push
clc
outsl
das
in
jne
inc
adc
push
out
repz
xor
dec
add
leave
divb
aaa
pushf
inc
dec
cltd
push
ljmp
lods
cmp
xchg
popa
cmp
and
out
into
repnz
fcomp
inc
lahf
xchg
and
in
dec
jne
jo
shrl
fcomip
ret
or
gs
xor
mov
rorb
mov
sbb
cmpb
and
adc
insb
inc
mov
outsb
fisttpl
add
aad
andb
mov
pop
bound
dec
test
or
jg
cmp
out
sbb
push
in
sbb
ret
imul
mov
ljmp
out
push
lock
mov
les
fwait
ljmp
add
imul
outsb
xor
sub
lcall
push
jmp
pusha
gs
mov
fcmovnu
mov
int3
daa
dec
into
iret
mov
mov
mov
into
xorb
addr16
xor
mov
and
dec
sbb
push
or
rol
dec
sbb
fs
pop
lods
test
xor
lock
inc
push
pusha
jbe
fwait
outsl
mov
inc
fnstsw
ljmp
cli
jb
mov
pop
clc
fwait
jb
adc
mov
xor
xchg
fmul
test
sbb
mov
adc
dec
jg
add
add
adc
dec
fmul
sub
push
sub
push
sbbb
xor
mov
je
mov
jbe
inc
push
fmull
das
sbb
and
aas
xor
in
push
imul
or
mov
and
and
outsl
roll
movaps
stc
xlat
cwtl
or
pop
pop
mov
out
and
jbe
push
jmp
shll
movsl
fs
jo
mov
cmp
ret
stc
lret
dec
inc
fisubl
jo
mov
clc
in
fimull
outsl
inc
dec
cld
xor
xchg
sbb
mov
push
xor
cld
cmp
ficoms
jle
cmp
mov
and
dec
adc
gs
aam
insl
push
leave
mov
and
jl
in
repz
or
mov
insb
xchg
xchg
push
inc
xchg
iret
call
jp
push
addb
adcb
cli
outsl
lret
lahf
xor
xchg
jg
imul
jnp
cmc
jmp
rcl
push
sarl
loopne
fisubrl
sub
repz
cltd
jno
sbb
inc
popf
sbb
pop
xchg
xor
or
xor
js
fcoml
iret
loope
xor
xchg
sahf
clc
popf
lcall
sub
fldcw
in
cwtl
jae
mov
pop
mov
mov
aad
outsb
mov
mov
dec
lahf
lds
int
icebp
es
pop
mov
fisttps
ret
jns
xchg
xor
popf
andl
pop
inc
push
js
cmc
mov
jecxz
mov
mov
sbb
popa
jno
movsb
xchg
enter
add
mov
cmp
cmp
mov
iret
adc
and
insb
jb
sbb
lods
aad
jp
sbb
mov
inc
popf
mov
mov
fdivs
cmpsl
jo
insb
sub
and
test
cmc
fcmovb
adc
test
popf
roll
in
mov
inc
xlat
in
idivl
loope
neg
cmc
cmpsl
pop
into
push
fstpt
add
sub
or
outsl
sarl
in
xchg
out
dec
rorl
mov
out
xchg
dec
das
int
mov
pop
js
mov
xor
jmp
push
pushf
cmp
adc
movsb
lcall
imul
cmpsl
mov
gs
cli
pop
push
jp
jne
test
loope
and
rclb
xchg
in
scas
fcoms
mov
ja
jecxz
and
push
add
in
mov
adc
sti
jge
dec
sub
xor
mov
mov
and
mov
movsb
mov
mov
int
pop
add
loope
jge
clc
sbb
push
jno
test
sti
sub
pop
out
dec
push
inc
fdivrl
fidivl
adc
jecxz
cs
scas
cwtl
jns
es
enter
pop
and
jno
pop
xchg
push
idivb
cmp
aad
cmp
shrb
mov
push
rol
test
or
dec
mov
inc
cmp
cmp
push
in
pop
pop
dec
or
or
js
cmpsl
adc
outsb
pop
push
ja
mov
test
out
call
loope
std
stc
lahf
cmp
jne
clc
std
lahf
push
jae
xchg
in
cmpsw
jb
inc
aam
std
cmc
adc
mov
jmp
aam
in
sar
mov
adc
adc
inc
sub
push
test
adc
gs
cmp
imul
inc
or
push
sbb
xchg
test
mov
jae
les
xor
ds
inc
cld
cltd
cmp
lea
or
push
mov
mov
nop
pop
add
jp
aas
lahf
inc
in
call
popl
leave
faddl
fdivl
ret
sarl
xor
pop
add
xlat
imul
addb
icebp
icebp
mov
arpl
inc
pop
lds
repz
outsl
or
sbb
movsb
cwtl
pop
aad
and
mov
sub
push
xchg
pop
adc
in
and
xor
cmp
lea
int
nop
add
leave
fists
pop
push
imul
imul
sub
aaa
fidivl
or
movsl
popf
pop
jecxz
insl
std
add
push
call
fs
xchg
xsavec
mov
ljmp
jecxz
and
into
and
sbb
pop
sbb
mov
xchg
and
pop
sbb
mov
pop
mov
fcmovu
xor
cwtl
mov
mov
dec
jmp
or
lock
test
std
mov
jne
xor
pop
pop
iret
dec
push
stc
jo
imul
lds
jbe
inc
gs
mov
mov
sahf
mov
mov
mov
filds
pushf
and
pop
sub
mov
mov
inc
test
mov
push
and
les
jg
push
cmp
mov
inc
dec
mov
stos
inc
jle
dec
jl
test
add
dec
rol
pop
xchg
cld
jns
fldcw
aad
into
push
xor
mull
ja
lds
fdivl
mov
call
in
jb
lods
adc
loope
push
dec
bnd
popa
jae
xchg
insl
jmp
mov
cmpsl
add
ds
ja
xchg
sbb
mov
mov
sahf
les
ret
mov
push
adc
sbb
pop
lea
xor
fcmovbe
cmp
add
out
daa
fsub
test
pusha
popf
cmc
cltd
rorb
imul
xor
mov
sbb
or
ret
inc
arpl
dec
pusha
es
mov
lods
sbb
inc
mov
mov
scas
popa
test
xor
push
adc
addr16
mov
cmpsb
lock
and
fsubs
ret
test
xchg
les
pop
mov
mov
xchg
test
in
adc
mov
dec
addr16
sub
mov
repnz
js
mov
jmp
xchg
pop
lods
xor
imul
add
dec
lret
jno
rolb
insl
dec
insl
dec
xor
insb
cld
mov
mov
ficoms
cmp
xchg
subb
pusha
mov
adc
popf
jge
sahf
scas
leave
aad
sub
stos
es
pop
pop
inc
xor
jb
adc
xchg
cmpsl
push
jmp
shl
fcoml
adc
push
xchg
dec
outsb
jp
inc
jge
inc
jg
push
push
in
std
mov
xchg
test
pop
dec
add
movsl
mov
mov
pop
jae
shll
mov
loop
mov
dec
lret
lahf
lock
in
push
lahf
pop
bound
add
shl
adc
adc
jbe
imul
pop
cmp
inc
cmp
adc
cltd
lret
mov
out
js
addr16
sbb
lods
mov
cmp
fcmovne
or
pushf
test
push
dec
pushf
sbb
sub
xor
or
roll
fisubrs
add
ja
mov
pop
push
push
pop
inc
outsb
push
mov
jp
icebp
lret
xor
pop
in
xor
rolb
inc
in
fcomps
lret
cli
mov
mov
in
out
xor
addr16
lcall
xchg
lahf
test
jp
out
loopne
ds
cmp
xchg
lcall
sub
rcll
fstp
mov
mov
outsb
iret
aad
push
dec
inc
fldenv
orb
cmp
fmul
movsl
std
inc
mulb
pop
out
mov
mov
mov
mov
xorl
lock
divl
mov
jb
mov
aaa
out
and
cmpsb
fnsave
inc
orl
jbe
enter
sub
adc
cwtl
insl
fsubs
mov
xchg
mov
dec
out
test
adc
mov
add
out
adc
add
pop
push
mov
mov
jno
inc
scas
loopne
push
jecxz
in
sub
cmp
sbb
stos
mov
mov
ret
inc
inc
insl
cmp
inc
cmp
xlat
sbb
push
mov
and
mov
add
lea
pop
pop
popf
fdivrs
jg
mov
into
cmp
movsl
mov
mov
popl
lods
mov
inc
and
pop
xchg
aas
scas
add
andb
sub
adc
jecxz
imul
and
xor
sbb
out
lods
mov
xchg
sub
adc
es
rcrl
shrb
imull
push
imul
mov
jns
or
jb
sub
sub
addr16
cmp
subb
lock
xor
imul
mov
mov
sub
scas
gs
pop
aad
mov
mov
aas
lret
mov
insl
jl
mov
dec
sahf
popf
mov
outsb
stos
sarl
sbb
mov
fiadds
call
cmp
and
std
mov
cwtl
sub
out
jno
in
push
rorb
mov
push
mov
adcl
daa
push
das
jle
mov
jbe
lds
jge
fisubrs
std
or
pop
mov
xchg
clc
aaa
lret
nop
dec
mov
repz
cmpsl
gs
inc
push
jo
xor
sbb
pop
addl
pop
xchg
mov
mov
mov
ljmp
test
and
mov
movl
push
sbb
mov
enter
push
fwait
insl
in
jle
std
mov
inc
cli
mov
aad
in
push
sti
push
es
mov
xlat
sbb
inc
aam
xlat
mov
sub
cmp
stos
lods
pop
pop
in
sub
push
test
adc
jp
pusha
call
sbb
mov
xchg
mov
push
add
sub
xor
out
sub
stc
jno
gs
cmp
and
sbb
stos
mov
push
hlt
inc
mov
adc
mov
sbb
adc
out
stos
mov
xchg
aam
or
push
sbb
xlat
shr
ljmp
cmpsl
mov
xchg
mov
movsl
mov
add
xchg
dec
fstp
rorl
and
shll
sbb
or
ja
stc
shlb
jne
mov
stc
addr16
cli
fwait
dec
mov
fisubrs
addr16
or
lcall
shrb
and
xchg
adc
int3
push
aaa
xchg
test
mov
jnp
xor
mov
dec
popf
fwait
test
aaa
pop
mov
sarl
jp
mov
sahf
test
insl
push
sbb
cmp
inc
add
nop
cmc
gs
push
iret
jne
mov
mov
or
and
dec
xchg
push
jae
lds
imul
ret
pop
mov
pop
insb
out
adc
lret
dec
push
pop
xor
out
negl
out
push
out
loopne
sub
or
xchg
xor
jle
cmp
push
rolb
sbb
cmp
cmp
xor
pop
out
sbb
insl
popa
adc
addl
fiaddl
push
or
mov
stos
rcr
insl
rcr
shl
add
pop
jge
jge
test
cwtl
add
mov
pop
pop
je
push
loop
leave
push
sub
pushf
fnstenv
cmc
aaa
aaa
loopne
inc
stos
xchg
dec
xor
xchg
imul
in
out
es
mov
xorl
sahf
call
or
or
pop
std
inc
mov
lods
popf
or
test
cmpsl
pop
jge
insl
pop
and
movb
push
addr16
subb
pop
xorb
popf
mov
pop
mov
rclb
mov
mov
push
and
jo
ss
fdivs
mov
push
xchg
inc
ficoml
xchg
mov
add
sbb
in
xchg
aad
ficompl
into
mov
gs
mov
adc
js
mov
pop
popa
lods
dec
or
fwait
pop
inc
jl
stc
dec
test
xorb
addr16
inc
call
add
push
mov
mov
lcall
add
sub
push
xor
mov
sub
inc
sbb
in
imul
lcall
inc
dec
inc
inc
xchg
pusha
and
aam
cmc
lock
and
lret
mov
push
push
iret
sub
mov
pop
push
mov
push
lcall
repz
dec
jb
cmpsl
cmc
pop
rcrl
xor
lds
cmpsb
hlt
cmp
mov
dec
add
aaa
or
sub
mov
loop
not
dec
add
call
js
lods
mov
dec
adc
inc
sti
mov
jecxz
push
mov
xor
fs
pop
push
lea
icebp
scas
fisubs
pop
rorl
and
or
rcl
push
stos
imul
ljmp
into
pop
jo
push
cmp
cmpsl
inc
add
rorb
cltd
fisttps
shrl
popa
lret
arpl
pop
pop
xor
lahf
loop
int3
imul
pop
lods
mov
fists
sub
xchg
jne
mov
mov
dec
xchg
inc
fmul
inc
xchg
es
jne
dec
add
pusha
aad
push
rcr
rcl
cpuid
pop
dec
insb
jg
arpl
mov
jmp
adc
icebp
out
mov
dec
xchg
lea
adc
lret
cmc
dec
clc
iret
popf
mov
dec
je
jecxz
dec
jb
fadds
xchg
xor
call
pusha
lea
mov
in
iret
into
ds
lea
hlt
int
hlt
bound
out
cli
loope
fdivrl
sub
push
lahf
pop
xor
mov
fcomps
shll
mov
push
jbe
shlb
push
jbe
add
out
fistpl
popa
sarl
jnp
ljmp
test
pushf
pop
in
adc
mov
test
pusha
ja
enter
pop
inc
xchg
jle
inc
enter
call
inc
xchg
pop
pop
in
lahf
mov
xor
pop
stc
sub
fucomi
popa
sub
adc
pop
ja
dec
jno
ror
repnz
sti
sbb
mov
loopne
pop
and
sub
popa
jge
and
inc
push
cmp
adc
adcl
sti
arpl
adc
lea
add
or
ret
pop
vsqrtsd
lods
xchg
dec
cli
add
jo
test
fs
sub
xorb
mov
ficomps
mov
cmc
cltd
pop
shlb
cld
dec
movsb
test
cltd
and
xchg
pop
mov
jle
iret
stc
jne
loopne
addr16
cmp
iret
and
outsl
adc
loop
into
insb
cmpsb
and
sbb
pop
add
shlb
in
out
mov
jb
mov
fidivrl
cmp
pushf
mov
sbb
int3
inc
cs
adc
mov
movsb
roll
not
and
cwtl
jl
ret
loope
mov
push
out
push
add
cld
pop
hlt
pop
lods
xor
sbb
mov
inc
lods
jo
cmp
push
insb
lahf
cmpsl
into
fcoml
enter
imul
push
push
imul
sub
dec
add
sub
nop
insb
and
inc
sbb
in
imul
mov
inc
adc
jno
ret
in
rolb
test
pop
fnstenv
ret
xor
fs
rorb
xor
cmpl
js
out
xchg
mov
or
cmp
cmc
divb
fwait
sbb
pusha
mov
sub
adc
jle
ss
ret
adc
pop
jo
sbb
push
dec
in
inc
jecxz
dec
cmp
aaa
fs
mov
in
inc
repz
push
shr
jecxz
jns
xchg
or
adc
int
adc
mov
js
sub
xor
sbb
lcall
pop
loop
adc
mov
aad
jecxz
xchg
insb
jp
mov
add
and
daa
mov
loop
xor
mov
movsl
mov
nop
lcall
in
push
call
or
sbb
jp
sub
aas
ficoms
aas
imull
lock
cmpsb
jns
movb
xor
mov
pop
incl
dec
addr16
add
fistpll
ret
dec
jnp
mov
das
sbb
adc
insl
into
shll
fiaddl
and
or
xor
pop
jle
jg
sbb
cmc
insb
jl
gs
test
mov
fisttpll
jo
popa
lods
outsl
and
xor
jecxz
xor
mov
ds
pop
cltd
cmp
sub
inc
sahf
stc
lock
mov
sbb
jne
push
pop
or
nop
outsl
data16
aaa
xor
pop
or
clc
dec
add
pop
and
mov
and
and
cmpsl
int
fdivl
outsb
iret
pop
xor
pop
in
push
das
arpl
adc
shlb
outsl
in
mov
sub
sub
addr16
jne
xor
cmp
ret
lea
icebp
daa
cmpsl
fisubrs
in
push
hlt
pop
push
pop
movzwl
and
lret
dec
ret
and
in
push
push
push
pop
add
inc
mov
mov
adc
pusha
jl
subl
dec
pop
repnz
adc
aam
lods
sbb
mov
imul
jmp
aaa
int
cmc
mov
mov
fiadds
fisttpl
pop
repnz
xor
call
in
xor
xor
dec
repz
aam
pop
cmp
out
sub
sbb
sarl
cmp
push
mov
xor
sbb
push
movsl
inc
mov
push
mov
jnp
and
xchg
cmp
add
dec
cmp
das
inc
aaa
xor
or
dec
aas
pop
sbb
jbe
sbb
adc
xor
cmpb
push
add
aad
and
xchg
in
xlat
scas
push
mov
xlat
mov
pop
push
pushf
push
ds
dec
push
lret
and
push
nop
xor
sub
adcl
lret
adc
imul
xchg
mov
loopne
cwtl
loope
and
dec
mov
int
rcrl
and
xchg
jl,pt
jo
dec
filds
lret
push
rorl
cmpsb
ret
cmpsl
arpl
aaa
and
mov
sbb
pop
pushf
and
cmp
push
sbb
push
add
nop
jle
imul
sub
fildl
jns
mov
push
leave
push
adc
rcl
cmp
dec
and
daa
pop
lea
pop
xchg
sbb
add
push
jb
mov
mov
sarl
sub
mov
and
adcb
icebp
dec
sbb
testb
scas
lds
pop
rcl
cmpsl
add
scas
ret
inc
add
fidivrl
inc
movsl
push
es
cmp
call
sbb
ja
movsl
loop
fisttpl
cmp
fwait
gs
mov
push
shr
mov
mov
jmp
push
dec
inc
sub
cli
add
inc
jne
mov
shll
sub
call
cltd
mov
or
cmp
xor
mov
pop
add
mov
or
out
and
jb
sbb
or
adc
aam
sub
pop
js
bound
inc
inc
mov
jo
jns
in
popf
pusha
xchg
jb
cmp
dec
mov
pop
icebp
push
shrl
pusha
ret
sysexit
fiaddl
jb
cwtl
mov
jae
push
call
fcoms
push
mov
ss
rcrl
cmp
sub
dec
dec
test
test
aad
add
int
in
lea
and
data16
inc
aaa
ljmp
stc
sahf
cmp
xchg
jp
mov
roll
aas
sub
in
xor
repz
lret
movl
jl
mov
dec
cmp
aad
cmp
pop
ljmp
xor
mov
outsl
jge
pop
push
xchg
leave
mov
popa
mov
int
loop
fiadds
cmp
dec
mov
xor
jp
in
dec
fcmovne
xchg
addr16
aad
jae
shll
fwait
stc
aad
int3
lret
rorl
jp
mov
fcmovu
mov
adc
scas
fs
and
dec
push
jge
mov
mov
mov
push
movsl
mov
mov
dec
int
push
adc
hlt
mov
fstp
dec
xchg
popa
mov
aam
push
daa
cmp
push
ffree
cmpsb
call
test
jb
lods
movsl
dec
lret
call
xor
jmp
add
sbb
lahf
pop
inc
adc
mov
sbb
add
xchg
mov
imul
cbtw
xchg
mov
aas
xlat
lods
mov
mov
pop
xor
js
insb
lahf
inc
lcall
cmp
sahf
sub
int
sub
mov
das
das
out
jnp
je
xchg
js
cmp
ss
sbb
fstps
cmp
dec
and
mov
aam
mov
rolb
and
sub
sahf
fildll
xor
sbb
add
add
subb
andb
mov
xor
cmpl
adc
xor
dec
xchg
jae
mov
stos
lret
sub
mov
std
cwtl
inc
push
sub
jbe
shlb
xchg
in
adc
pop
std
dec
sub
inc
mov
and
or
lret
std
stos
insl
jne
mov
mov
imul
lret
frstor
adc
scas
cmp
je
mov
fidivs
cmp
mov
xchg
testb
loop
loop
cltd
push
shll
data16
jnp
and
xchg
mov
int3
add
mov
push
push
and
dec
dec
mov
mov
xchg
sub
loop
mov
into
dec
push
mov
lahf
test
psrad
roll
mov
add
dec
leave
inc
add
repnz
divb
push
cmp
test
shl
xchg
pop
mov
xor
jb
xchg
out
sub
shlb
aam
icebp
jno
fld
test
xchg
loop
lea
inc
jl
loope
mov
les
popa
leave
dec
int3
push
clc
jl
jge
leave
mov
fisubs
int3
jne
ljmp
jp
jg
test
mov
dec
mov
ret
scas
dec
push
stc
popa
mov
xchg
lods
xchg
push
mov
sbb
adc
jp
jo
inc
testl
outsl
and
sub
stos
mov
into
sbb
dec
sub
stos
sub
xchg
pop
sahf
sub
mov
ljmp
xchg
cli
cmc
mov
das
stos
aad
daa
aam
sti
cmc
scas
xor
and
adc
mov
sbb
jns
js
stos
std
cltd
das
xchg
std
sub
cmp
or
xorb
ffreep
dec
fdivrl
imul
in
popa
call
jmp
fisubrs
insl
sbb
in
add
sbb
jns
out
add
pushf
add
dec
roll
push
fldt
hlt
dec
jne
or
lcall
imul
rcrb
fsubl
arpl
rorb
jle
dec
icebp
cmp
pop
lds
cmp
in
cmp
add
popf
jno
call
test
and
sbb
mov
loopne
ljmp
fcompl
adc
xor
into
clc
mull
enter
in
fldl
push
repnz
jb
outsl
add
aad
xchg
lret
adc
xchg
push
jge
stos
pushf
xchg
mov
cmp
pop
and
mov
clc
in
aam
mov
dec
cmp
or
add
mov
outsl
jno
xor
mov
mov
cmpsl
cmpsl
pop
push
ret
cmpsb
and
scas
or
sub
ja
cmp
xor
add
adc
repnz
pop
data16
cmc
out
mov
les
test
and
dec
es
hlt
les
gs
out
cmp
sarb
xchg
in
push
lds
adc
mov
pop
cmpsb
mov
enter
test
dec
xor
stc
enter
pop
cmp
insb
mov
mov
imul
adc
fistps
add
lock
scas
repz
lock
xor
daa
pop
rcr
cld
add
icebp
stos
repnz
pop
sar
adc
fistpl
cmpsb
psrlq
fmul
push
inc
insl
adc
push
arpl
lea
jae
push
xchg
stc
add
fdivr
adc
cltd
popf
and
xor
nop
rol
test
and
leave
or
iret
cmp
outsb
sbb
cmp
ljmp
cltd
rcll
lcall
push
fwait
ljmp
andb
outsb
add
pop
fisttpl
push
addr16
mov
xchg
dec
fistl
adc
test
xor
sbb
xchg
js
add
mov
jns
test
cmp
push
push
bound
sti
cmp
mul
adcb
and
aaa
ret
mov
test
xor
mov
test
je
add
jge
mov
arpl
pop
mov
ds
fidivl
jo
in
sti
mov
sub
daa
push
xor
fmul
sahf
sub
fsub
ja
sbbl
rcrl
push
pop
mov
sahf
aam
imul
ret
cmp
in
jnp
sub
mov
inc
mov
js
add
sub
dec
push
ror
repnz
test
jb
mov
sub
sbb
sbb
leave
push
sti
pop
int
add
icebp
or
sarb
gs
jo
xchg
push
enter
sub
xor
xchg
in
inc
es
push
into
clc
mov
cmp
in
jbe
lret
lock
jle
data16
outsl
inc
repnz
iret
add
call
cmp
inc
pop
jb
ret
das
out
lds
inc
in
push
push
mov
rcpps
imulb
rcll
sub
flds
jno
imul
mov
leave
and
jle
push
rcll
pop
test
fstps
imul
xchg
clc
add
push
cmp
popa
mov
add
lcall
push
call
jb
enter
dec
lock
testb
sub
adc
jne
mov
stos
inc
jbe
fsub
xor
add
or
push
jne
addl
mov
leave
lods
repz
inc
sub
sbbl
outsb
std
outsb
mov
scas
add
mov
xchg
enter
dec
cmp
cmp
das
push
xchg
fidivl
imul
xchg
nop
int3
hlt
je
mov
mov
leave
jbe
jno
pop
stc
lds
or
into
mov
mov
lods
adc
pop
jmp
mov
jnp,pt
out
sub
cmp
xlat
shrl
mov
fcoml
out
sub
xor
ficoms
cmp
addr16
test
sbb
adc
xorb
mov
sbb
xchg
xor
mov
jl
mov
ret
mov
and
pushf
arpl
pop
repz
adc
jecxz
mov
xchg
xlat
in
leave
mov
mov
jae
popf
idivb
cli
fimull
push
std
push
inc
sbb
sbb
arpl
cwtl
push
pop
sbb
pop
sbb
pop
aad
adc
sbb
jge
sub
mov
jo
xchg
repnz
popa
cs
aaa
dec
sti
js
imul
pop
rcll
in
mov
in
mov
fnstenv
call
sbb
inc
pop
push
jg
sbb
cmp
add
and
pop
adc
pop
jns
aas
cli
xchg
mov
mov
popf
push
xchg
rcrl
repz
inc
fisubrs
sbb
repnz
mov
aam
js
pop
sbb
in
pop
orb
and
mov
loope
fstps
fists
pop
cs
imulb
push
loop
mov
mov
mov
adc
mov
sub
dec
jp
orb
inc
inc
mov
int3
js
dec
lret
fiadds
aas
lds
dec
push
ss
cmpsl
sub
test
xchg
mov
mov
adc
or
aam
dec
ret
int
jo
cmp
sub
subl
lahf
test
jb
aaa
addl
mov
mov
out
push
jne
inc
in
scas
sbb
inc
pop
mov
dec
scas
jp
pop
adcl
adc
or
filds
out
bound
imulb
inc
cmpsb
loop
pop
lds
out
outsl
dec
sbb
mov
stc
add
popa
jge
xor
das
push
sarb
scas
stc
mov
call
daa
cmp
push
dec
push
mov
xchg
push
mov
cld
pusha
sahf
in
sub
jns,pn
pop
test
dec
pop
cltd
lcall
sbb
and
fildll
inc
int3
pop
decl
mov
fwait
push
mov
rcr
cltd
jl
sbb
ja
test
mov
dec
jae
addb
cmp
xchg
cmpsb
stos
pop
mov
jae
je
scas
ret
push
adc
mov
out
cmp
pop
sbb
adc
jge
push
adcb
pop
iret
push
jno
cmp
jb
cmp
inc
iret
sbb
fwait
ret
mov
call
xor
sbb
cltd
jae
push
aad
andb
or
xor
lea
inc
push
or
jbe
sti
cmpsb
jl
cmpsb
lahf
pop
inc
and
cli
xor
push
mov
mov
ljmp
js
jo
js
mov
loopne
test
loope
xorw
vdivps
cld
xlat
cmp
jb
ret
frstor
addr16
push
sbb
xor
dec
hlt
pusha
sub
push
popf
jmp
dec
in
or
xchg
lods
adc
mov
sub
ss
hlt
pushf
jae
cltd
inc
cltd
xchg
push
and
movsl
adc
inc
aad
jmp
jae
xor
pop
mov
pop
sbb
mov
int
jp
out
std
nop
inc
lock
into
mov
mov
ljmp
and
mov
push
lret
push
adc
push
xchg
xchg
mov
scas
jge
repnz
dec
xchg
adc
leave
dec
pop
gs
repnz
or
movsb
adcl
push
aas
xchg
cmp
outsl
inc
xchg
in
fsubrl
jmp
nop
adc
notb
mov
sub
and
push
popa
mov
adc
mov
xor
mov
push
mov
cmp
shl
in
dec
mov
ds
inc
in
out
mov
ljmp
fiadds
mov
push
outsl
loopne
jmp
or
nop
xor
in
sbb
xor
push
rcll
and
out
mov
in
mov
test
jne
das
imul
ret
push
xor
mov
nop
jno
adc
rcrb
jae
adc
pop
xchg
leave
push
enter
loopne
push
cmp
pop
test
repz
dec
stos
xchg
pop
pusha
ja
mov
pushl
imul
xor
out
addr16
outsl
xor
scas
ficoml
pop
das
cmp
mov
sub
inc
dec
insl
or
fwait
cmp
cmp
pushf
andl
lcall
out
or
mov
mov
xchg
lret
sub
fidivrl
push
jmp
pop
shrb
sbb
push
or
icebp
loop
es
lds
or
adc
mov
outsl
into
or
rcl
inc
lret
jo
adc
out
sub
push
cld
mov
sbb
sbb
cmpsb
fisubl
stos
call
xchg
push
push
jnp
lods
sub
cli
jo
fimuls
inc
scas
lods
jmp
insl
js
dec
or
fcomps
clc
sbb
sahf
or
dec
push
jne
mov
sbb
pop
scas
data16
lcall
xchg
cmp
test
les
and
inc
jns
mov
cwtl
movsb
imul
leave
adcb
xlat
fsubr
out
mov
ficompl
ret
or
std
sarl
pop
repz
inc
aas
test
fildll
ret
and
or
pop
or
bound
or
pop
push
js
adc
lods
insl
xchg
xchg
lock
ss
mov
and
mov
sub
sub
loope
call
addr16
in
push
mov
iret
dec
outsl
mov
iret
sbb
adc
jb
out
xchg
ret
loop
rcrb
jmp
sbb
cmpsl
or
adc
lahf
add
adc
push
push
icebp
in
adc
cmp
mov
sub
dec
push
test
mov
push
adc
ljmp
add
int3
mov
in
dec
pop
int
or
pop
xchg
pusha
dec
cmc
mov
xchg
and
enter
into
mov
rorb
or
push
daa
add
jno
rolb
xchg
add
or
les
jno
push
inc
mov
sarb
dec
orl
into
int3
push
inc
fwait
and
fildll
push
jne
push
adc
pop
fidivrs
or
iret
testb
xchg
sbb
inc
in
sahf
mov
ljmp
popf
mov
mov
fmuls
pushf
mov
mov
dec
dec
std
mov
and
sbb
lea
int
je
lret
movsb
push
xor
rcl
fcmovne
jmp
adc
add
cmp
aas
fucomip
xchg
std
ret
adc
mov
rcl
stos
xchg
mov
xor
dec
add
inc
in
add
das
push
and
and
mov
repnz
cli
jo
ja
dec
sub
or
loopne
imul
hlt
lea
xor
scas
adc
sub
jp
lret
push
fwait
dec
ljmp
xchg
adc
push
lock
les
mov
mov
mov
test
test
mov
outsl
add
fdivrs
pop
sub
push
mov
and
test
mov
push
test
inc
shll
out
dec
sub
push
pop
or
xor
cmpsl
xor
js
frstor
movaps
adc
pop
sgdtl
mov
mov
xor
jecxz
fwait
mov
mov
movsb
mov
or
bound
into
pop
adc
mov
inc
stos
das
js
div
out
push
pop
fsub
mov
fwait
pop
mov
cltd
add
aaa
mov
movsb
and
into
jmp
ss
pusha
pop
or
pop
jo
inc
cmp
test
loopne
jl
insb
xor
dec
adc
mov
mov
mov
dec
cmp
loop,pn
movsb
imul
sub
sbb
movsl
add
aam
sub
jnp
sub
aaa
pop
cmp
les
cmp
jne
sarl
add
xor
sub
jae
mov
dec
pusha
push
cmp
cmp
ret
mov
iret
decb
xor
clc
xchg
mov
leave
cmpsb
push
lcall
pop
push
ja
xchg
pop
sub
in
push
xchg
std
out
push
mov
repnz
int
es
aaa
in
movb
mov
mov
enter
jge
pushf
inc
jo
fsubs
mov
inc
pop
aam
sbb
inc
rorl
roll
pop
mov
rorb
fdivrp
sbb
fldl2e
xor
sub
ss
add
sbb
std
xchg
pop
mov
je
add
adc
insl
cmp
lret
hlt
jg
mov
mov
add
jae
lds
jge
jns
or
test
pop
fwait
and
call
adc
pop
scas
or
cmpsb
hlt
adc
loopne
ljmp
inc
outsl
inc
add
add
cmp
stc
repz
ja
hlt
dec
push
out
mov
hlt
repnz
sbb
stos
xchg
pop
sti
nop
dec
jae
ljmp
jae
mull
pusha
add
and
sahf
pop
xor
roll
test
pusha
mov
dec
xor
xchg
and
out
dec
fsubrl
sbb
or
movsl
int
icebp
mov
mov
mov
pop
insl
sbb
fcmovne
sub
mov
xchg
inc
sub
mov
add
add
jg
inc
test
inc
sahf
add
sbb
negl
sub
mov
and
mov
push
outsl
pop
mov
push
out
ljmp
sub
leave
xlat
cwtl
mov
sub
xor
incb
into
xor
cmp
xchg
adc
inc
sub
jg
inc
nop
cmpsb
push
pop
jae
rorb
xchg
sub
cmpsb
mov
je
push
push
inc
inc
xor
add
mov
sbb
pop
in
in
mov
int
shlb
lods
fldcw
cmc
out
sub
jp
xchg
cmpb
pop
add
mov
test
jae
sub
mov
xchg
or
and
shll
cwtl
inc
inc
insb
push
pushf
adc
lahf
std
movsb
xlat
jle
sgdtl
ret
dec
lods
int3
jae
mov
std
push
mov
inc
or
add
fs
fnstcw
xlat
cmp
inc
and
filds
mov
mov
movsb
cmc
push
mov
aas
push
dec
sub
popf
dec
cmp
repnz
mov
adc
jge
call
in
sbb
stos
mov
cmpl
xchg
outsl
and
bound
pusha
in
test
stc
fdivs
or
mov
dec
out
popa
out
dec
insb
out
fadds
insl
mov
mov
add
mov
psrlw
shlb
mov
aas
add
xor
pminsw
push
push
cwtl
lds
movsb
ret
imul
pop
cwtl
xor
int
sahf
stos
xor
pop
push
movsb
shrb
mov
xor
arpl
movsl
and
sbb
or
cmp
xor
dec
inc
xchg
into
pusha
in
pop
or
int
stos
fidivs
dec
ljmp
jo
hlt
inc
xchg
hlt
mov
cmp
dec
mov
daa
int
pop
sub
hlt
rorl
data16
jge
rolb
test
jp
pop
cmp
push
and
sahf
popa
fstpt
stos
rcrl
insb
jne
fs
adcb
xchg
adc
jb
or
test
adc
lods
das
movsb
cld
dec
sbb
pop
cmp
in
aad
or
insb
inc
ficoms
cmpsb
bound
add
xor
push
mov
xchg
push
fs
mov
pop
out
mov
int3
mov
adc
jb
inc
mov
mov
in
in
into
mov
inc
inc
shlb
xor
push
inc
mov
ss
mov
outsl
adc
bound
out
xchg
fwait
imul
aad
xor
dec
and
xor
sbb
cmpsl
xchg
stos
fcompl
insl
test
inc
aaa
jne
push
inc
and
lret
adc
test
mov
cmpsb
mov
mov
stc
push
mov
ja
clc
inc
decb
cmp
push
add
dec
cwtl
hlt
xor
inc
int3
mov
sbb
adc
pop
iret
pop
lcall
sub
pop
push
adc
and
scas
adc
pop
pop
pushl
mov
push
adc
push
call
lock
add
xlat
and
pop
mov
pop
push
sub
lock
mov
cmp
pushf
jl
in
aam
mov
inc
shlb
sub
lock
stos
pop
inc
inc
sub
inc
jmp
clc
dec
xchg
cmp
jo
jo
testl
jne
xor
dec
clc
sbb
sti
fnstsw
test
mov
mov
int3
xchg
add
in
fsubl
jmp
sub
negl
cwtl
sub
movsbl
xor
aas
movl
out
xchg
xlat
pop
mov
sbb
stos
sbbb
add
sub
cmp
das
add
push
arpl
jno
loopne
lcall
add
js
adcl
jle
sub
sbb
sti
mov
das
push
mov
cmp
or
jbe
sahf
xor
fistpl
shr
test
pop
les
dec
pop
mov
xchg
push
out
icebp
lea
sub
push
loop
imul
mov
jp
in
jne
leave
dec
mov
test
pop
pushf
mov
aam
sbb
test
fwait
jo
ret
cmovno
fnstcw
inc
repnz
jmp
cli
mov
clc
push
sahf
pushl
jbe
dec
cmp
int
test
stos
fs
push
movsl
dec
int3
sub
jmp
xor
push
mov
pop
repz
rcll
jno
dec
mov
and
lods
adc
mov
movsl
push
pop
sbb
daa
cltd
mov
in
fsubs
sahf
inc
lds
xchg
add
insb
addb
iret
lss
in
pop
sti
in
xor
pop
xchg
and
cmp
repz
addl
mov
pushf
gs
test
dec
adc
and
pop
dec
aas
stos
clc
add
popa
push
adc
repnz
ficoml
loop
dec
push
aad
lods
loope
jmp
jp
adc
pop
cmpsb
add
cli
xchg
out
fstpt
pop
mov
out
ret
xchg
cmp
pop
fisubrs
push
lea
pop
xlat
sub
mov
push
sahf
lahf
ss
push
out
pushf
lods
xor
add
add
pushf
and
xchg
cld
mov
pop
cmp
fwait
jmp
sbb
fmuls
lcall
xlat
pop
popf
push
pop
pusha
pop
sub
jnp
lods
sub
pop
cltd
or
or
stos
adc
cmp
adcl
insb
nop
lods
fdivrl
lahf
cmp
push
es
jge
adc
push
and
push
lock
sahf
sbbl
and
fisubrl
je
adc
mov
lds
push
insl
jle
lret
ja
inc
out
clc
xor
pop
test
in
scas
jge
or
lret
ds
out
notb
pop
out
dec
clc
hlt
les
mov
xor
pop
inc
negb
psrld
js
sbb
push
popf
jp
xchg
push
hlt
gs
movsbl
xchg
xchg
xor
mov
daa
fadd
sbb
sarl
add
ss
movsl
std
mov
fimuls
fiaddl
pop
jp
inc
push
jp
sbb
or
jle
and
rorb
ja
jo
sbb
sub
lret
push
daa
ret
rolb
out
cmp
mov
push
inc
or
sbb
xchg
push
inc
inc
mov
pop
cmc
pop
insb
mov
dec
leave
pusha
mov
and
sahf
mov
es
mov
cltd
in
or
dec
mov
fistpll
or
pop
outsl
icebp
idiv
in
fld
loope
inc
dec
movsl
adc
mov
mov
xchg
xor
jb
mov
jecxz
lret
icebp
mov
dec
lret
jbe
add
pop
andb
ds
mov
mov
movsl
lds
mov
insb
and
es
inc
pop
mov
jmp
pop
jg
mov
aam
mov
fucom
mov
mov
iret
cmc
xchg
addr16
push
jb
xchg
mov
mov
xor
js
push
ss
ss
in
lahf
imull
adc
out
xchg
sahf
jle
pusha
push
ljmp
cmp
es
xchg
imul
icebp
jmp
int3
call
out
or
test
clc
mov
mov
movsl
mov
rcl
fs
xchg
movsb
movsb
sbb
aas
out
cmp
aad
std
loop
mov
cwtl
movsb
icebp
stc
and
sahf
and
pop
mov
mov
in
or
test
lea
inc
mov
pop
xlat
les
dec
pushf
cmp
lret
xchg
das
jg
add
adc
insb
test
sbb
mov
add
gs
jns
dec
xchg
jge
xorb
incl
xchg
jmp
aam
xor
mov
adc
mov
in
hlt
call
cmpsl
pop
mov
lcall
ljmp
popf
arpl
popf
lcall
inc
sbb
fmuls
and
jp
shlb
loopne
aas
lret
shll
xchg
push
push
pop
jno
pop
sbb
aad
jmp
sub
sub
cmovg
in
repnz
shlb
lcall
ljmp
iret
sbb
lods
mov
aam
lahf
pop
outsb
imulb
push
idiv
fcomps
jbe
and
mov
call
or
xor
ja
lahf
enter
cli
mov
and
push
mov
and
insl
insl
ret
push
xchg
adc
adc
mov
pop
outsb
loope
pop
fcomps
shlb
add
fisttpll
and
fdivl
scas
push
xor
mov
in
xlat
test
inc
repz
outsb
bound
out
push
jle
add
jmp
add
jecxz
xor
xor
pop
ja
jb
mov
adc
jbe
sub
ret
bound
test
addl
loop
and
sbb
and
bnd
fldcw
mov
push
xor
and
in
pop
or
mov
cmp
jno
movsl
push
mov
popa
stos
sbb
push
scas
rorl
pop
pop
mov
jnp
sub
mov
mul
mov
repnz
imul
test
ret
inc
into
pop
cmpsl
ljmp
add
data16
fwait
or
dec
popf
testb
jne
fsubs
mov
call
loop
enter
and
inc
je
add
icebp
or
mov
je
inc
or
icebp
loopne
ds
and
sarb
cmp
cmp
push
dec
lahf
data16
bnd
fists
pop
add
add
js
mov
and
gs
push
test
push
sub
sbb
inc
push
test
mov
imul
sbb
jp
xchg
mov
xchg
pop
arpl
test
and
dec
push
cltd
jmp
sub
pop
cmc
adc
hlt
es
xchg
loopne
sbb
test
repz
sub
lahf
push
dec
and
jne
push
ljmp
push
test
cltd
jg
mov
push
mov
mov
jp
or
pop
dec
sub
loope
rclb
cmp
dec
movsl
ret
inc
add
add
aad
cwtl
sarl
sarl
cmp
int3
pop
inc
sbb
leave
popf
jbe
add
rcll
test
les
sbb
cmp
into
xchg
es
cmp
cmp
out
cmc
xchg
sahf
nop
cld
insb
jbe
pop
cmc
and
lcall
add
movsl
in
or
xor
push
and
or
ljmp
ds
xchg
add
pop
inc
mov
sbb
xchg
adcl
cmp
outsl
mov
jbe
imul
addb
push
test
sbb
inc
scas
mov
addr16
ljmp
inc
sub
mov
stc
mov
jge
add
stos
clc
arpl
js
imul
in
xchg
and
add
add
adc
add
add
add
ret
mov
push
push
push
mov
mov
call
inc
push
push
lret
call
mov
call
pop
pop
pop
ret
mov
pop
push
push
push
push
mov
mov
mov
call
mov
test
push
dec
mov
mov
xor
adc
lods
stc
call
inc
or
mov
call
mov
mov
mov
in
add
add
push
cmpb
jne
mov
call
sbb
stc
decl
lcall
sti
jmp
mov
call
bound
pop
pop
ret
mov
nop
mov
add
push
push
cmp
fisttpl
nop
mov
mov
xor
push
cmp
xor
or
inc
add
decl
nop
mov
push
push
push
int3
call
push
dec
inc
add
call
test
je
mov
dec
inc
clc
or
add
sbb
stc
decl
mov
call
call
xor
pop
pop
pop
mov
inc
add
lock
out
jmp
jmp
arpl
mov
pop
ret
lea
push
mov
xor
push
push
push
xor
mov
lock
mov
mov
vandnps
xchg
inc
add
xor
xor
dec
inc
cld
lea
push
push
dec
inc
cld
push
push
mov
cmp
scas
stc
call
inc
push
push
call
test
mov
movb
lea
push
push
pop
push
lock
push
mov
push
add
call
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
out
xchg
inc
add
stos
stc
inc
jmp
jmp
mov
arpl
mov
pop
ret
lea
incl
add
add
incl
add
add
mov
xor
push
fs
incl
jne
mov
mov
mov
call
xor
pop
pop
pop
fs
inc
add
push
jmp
pop
xchg
lea
subl
ret
cmp
jl
mov
jg
mov
in
xor
push
fs
incl
xor
pop
pop
pop
mov
inc
add
jmp
jmp
enter
subl
ret
push
mov
xor
push
fs
incl
xor
pop
pop
pop
mov
inc
add
jmp
jmp
enter
subl
jae
push
mov
mov
call
mov
add
add
call
push
mov
mov
push
call
mov
mov
mov
mov
call
ret
pop
pop
pop
dec
inc
dec
inc
inc
push
push
add
push
pop
pop
inc
inc
inc
inc
inc
push
push
add
nop
mov
xor
push
push
pushl
mov
add
xor
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
xor
add
nop
mov
add
push
mov
jge
add
add
and
je
mov
mov
call
mov
mov
call
dec
inc
in
inc
cld
mov
mov
or
mov
vandnps
xchg
inc
add
xor
mov
mov
push
lea
nop
mov
mov
mov
cld
mov
mov
inc
inc
xor
or
dec
inc
cld
mov
neg
dec
inc
lock
mov
neg
mov
mov
push
call
mov
call
cmpsl
xchg
add
mov
add
push
mov
push
mov
push
call
mov
mov
call
push
mov
cld
mov
call
push
push
push
mov
in
call
dec
inc
cld
mov
push
push
dec
in
adc
add
enter
xchg
cld
decl
mov
call
xor
pop
pop
imul
nop
mov
push
mov
in
call
ret
jmp
jmp
mov
dec
test
jl
inc
mov
movl
mov
inc
inc
and
push
clc
call
cmp
je
mov
mov
and
push
clc
call
test
je
mov
mov
pop
push
clc
call
sbb
call
test
je
mov
mov
mov
call
mov
mov
mov
push
lea
push
mov
fmull
fcoml
xor
inc
fmull
push
decl
inc
mov
push
call
test
test
add
add
inc
add
test
inc
fsubl
inc
inc
or
mov
mov
mov
push
call
mov
xor
push
sub
pushl
mov
push
call
mov
push
mov
mov
add
in
push
mov
mov
add
push
mov
in
call
mov
mov
push
mov
inc
inc
cmp
add
dec
inc
in
call
push
mov
mov
mov
call
xor
pop
pop
pop
mov
inc
add
call
push
jl
fdivr
decl
adc
imull
and
mov
mov
mov
incl
jmp
loopne
test
rcrb
mov
push
mov
pop
pop
and
mov
not
and
dec
inc
inc
ret
jmp
jmp
pop
mov
pop
ret
add
mov
add
push
push
push
mov
pop
push
cld
mov
push
call
mov
push
call
mov
push
adc
stc
decl
stc
decl
add
mov
nop
mov
push
call
mov
push
push
push
mov
push
mov
adc
call
dec
inc
lock
push
mov
ret
aad
mov
adc
inc
adc
push
call
mov
mov
nop
mov
push
call
mov
mov
nop
mov
push
call
mov
mov
pop
push
call
mov
fmuls
call
mov
xor
rorb
inc
shlb
dec
inc
mov
je
push
mov
push
push
push
dec
xlat
stc
decl
push
xlat
stc
ljmp
dec
inc
or
push
call
mov
push
call
push
mov
nop
mov
push
call
mov
mov
in
call
push
dec
inc
or
push
call
mov
push
call
push
call
push
mov
push
call
push
call
push
push
call
and
mov
nop
mov
push
mov
nop
mov
push
mov
outsl
push
push
push
call
mov
call
push
push
call
mov
push
push
push
push
mov
adc
push
push
mov
push
call
mov
push
in
call
push
push
push
mov
int3
push
mov
push
mov
adc
push
push
mov
rclb
cmp
stc
jmp
mov
nop
mov
push
push
mov
push
mov
push
push
add
aam
dec
movb
add
inc
adc
push
push
mov
push
mov
nop
mov
push
push
push
push
call
push
push
push
dec
inc
rclb
inc
adc
inc
adc
push
push
in
call
push
mov
push
mov
adc
push
push
push
dec
inc
and
mov
push
add
call
push
push
push
push
mov
push
dec
inc
sub
inc
clc
push
dec
inc
cld
push
push
call
cmpl
je
add
push
push
call
push
mov
push
mov
push
call
push
mov
pop
push
call
push
mov
push
push
call
mov
push
mov
rclb
insb
aad
in
call
mov
push
mov
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
push
call
mov
rclb
pushf
sar
decl
int3
push
call
push
call
pop
pusha
pop
mov
pop
ret
nop
mov
add
push
push
nop
mov
mov
mov
mov
mov
test
mov
push
push
sub
lock
jg
mov
mov
call
mov
cmpl
jle
cmpl
jg
xor
rorb
mov
call
mov
mov
mov
push
and
clc
call
test
adc
mov
mov
pop
sti
call
jmp
inc
clc
call
mov
mov
mov
mov
mov
clc
call
call
xor
push
push
pushl
fs
call
xor
mov
mov
lcall
inc
aas
mov
mov
nop
mov
push
mov
nop
mov
push
mov
nop
mov
call
call
push
push
nop
mov
push
mov
nop
mov
call
push
call
jmp
cmp
jne
mov
mov
call
dec
push
mov
call
xor
pop
call
mov
mov
in
imul
sarb
or
ret
call
mov
push
mov
call
call
nop
mov
push
mov
nop
mov
push
mov
nop
mov
mov
call
push
push
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
mov
mov
mov
mov
mov
clc
call
call
ret
jmp
jmp
pop
pop
pop
mov
ret
lea
nop
mov
add
push
push
jp
adc
add
movsl
pop
push
nop
mov
push
mov
nop
mov
push
mov
nop
mov
sub
push
mov
cld
sub
push
mov
push
dec
or
add
jmp
mov
pop
ret
nop
mov
push
xor
push
icebp
in
fwait
inc
add
mov
dec
add
dec
and
lea
mov
call
dec
inc
cld
mov
mov
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
add
add
push
add
mov
lea
mov
rep
mov
sub
add
pop
enter
push
push
add
mov
lea
mov
rep
mov
sub
add
arpl
nop
push
mov
mov
call
or
pop
ret
lea
pop
mov
mov
or
movzwl
xchg
call
ret
xor
ret
mov
nop
mov
cmpl
je
or
call
xor
lea
pop
push
mov
mov
mov
iret
lret
and
roll
repz
jne
mov
stos
cmpsb
jne
inc
pop
pop
ret
aad
mov
ret
lea
in
call
ret
nop
inc
cmp
add
add
dec
add
cmp
stc
pushl
shlb
nop
push
push
mov
fstp
mov
mov
call
pop
pop
ret
mov
nop
mov
xor
push
push
pushl
mov
add
jne
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
xor
add
mov
add
add
add
add
add
add
popf
inc
add
add
add
cld
inc
add
xor
cmp
inc
add
xor
xor
inc
add
inc
add
mov
inc
add
adc
cmpb
test
inc
add
jg
add
jle
add
addl
add
lock
push
push
js
imul
mov
or
push
imul
add
std
inc
add
add
js
imul
adc
and
add
sub
inc
add
add
addb
add
inc
outsb
popa
jno
gs
adc
add
mov
add
add
add
add
or
je
jb
popa
insb
add
add
add
add
add
add
add
or
outsb
arpl
jae
je
adc
ss
inc
add
add
add
add
push
popa
fs
add
lcall
add
add
add
add
add
add
push
push
outsb
imul
inc
inc
add
add
ljmp
add
add
add
add
outsb
push
imul
add
add
add
add
add
add
add
add
add
lahf
inc
add
cld
inc
add
xor
xor
inc
add
xor
cmp
inc
add
xor
xchg
das
inc
add
inc
add
jns
add
lahf
inc
add
push
imul
gs
lea
nop
mov
push
push
test
je
add
call
mov
mov
mov
push
dec
or
lret
call
xor
add
add
inc
push
add
cmovl
stc
jmp
add
les
arpl
pop
ret
nop
pop
push
push
mov
mov
lret
mov
add
xchg
stc
incl
sbb
add
lret
add
pop
sbb
add
into
mov
mov
call
jmp
mov
mov
mov
call
pop
pop
pop
ret
mov
nop
mov
mov
mov
cmpb
jne
mov
mov
cmpb
jne
mov
cmpl
je
xor
pop
ret
mov
pop
ret
nop
push
mov
push
pop
push
push
mov
push
call
pop
test
setnp
add
sub
call
test
jne
push
call
pop
test
jne
mov
mov
cmpb
outsb
imul
add
mov
mov
xchg
add
push
mov
call
jmp
xor
push
push
pushl
fs
and
pushl
xchg
stc
pushl
rcrb
mov
jmp
jmp
add
add
jle
inc
add
push
cld
mov
mov
call
call
mov
cmpb
je
arpl
pop
pop
ret
mov
pop
push
test
je
add
call
mov
cmc
lock
mov
call
movb
sub
movb
movb
movb
push
mov
mov
mov
call
mov
mov
test
psubsb
add
adcl
mov
pop
pop
ret
nop
pop
push
call
mov
call
movb
xor
dec
inc
sub
inc
aas
fdivr
decl
or
inc
in
call
mov
test
je
push
push
sbb
sar
decl
mov
decl
mov
call
test
jle
mov
call
pop
pop
ret
nop
nop
mov
push
push
push
push
mov
xor
add
xor
insl
push
ljmp
mov
mov
data16
lock
call
vcvtps2pd
mov
cmp
jmp
mov
mov
mov
call
call
jmp
mov
nop
mov
push
push
mov
mov
push
call
mov
pop
pop
pop
bound
nop
push
mov
push
push
push
push
mov
xor
push
fs
cmpb
je
mov
test
sbb
push
rolb
mov
call
xor
mov
mov
cmpb
jne
xor
xlat
cli
decl
and
jnp
add
test
jnp
add
test
cmpl
pop
pushf
add
add
aaa
call
or
decl
or
jg
inc
aaa
cmpb
jne
call
dec
inc
xor
test
mov
add
mov
jmp
push
push
call
mov
and
cmpb
je
cmpw
je
push
push
push
dec
inc
xor
jmp
stc
mov
push
clc
mov
mov
clc
lea
in
out
decl
mov
call
call
xor
pop
pop
pop
mov
and
mov
add
test
stc
inc
jmp
jmp
pop
pop
pop
pop
pop
xchg
lea
cmp
je
mov
call
ret
mov
cmp
je
mov
call
ret
mov
cmp
je
mov
call
ret
mov
cmp
je
mov
cmpb
or
inc
nop
mov
mov
test
sub
jp
add
jg
or
je
mov
call
jmp
pushl
pushl
mov
call
jmp
mov
call
pop
ret
nop
mov
cmpw
lcall
add
je
mov
mov
push
push
sub
call
or
push
or
or
push
sub
mov
push
cmpb
je
testb
jne
cmpw
je
fstp
mov
mov
ljmp
sub
push
mov
xor
push
fs
incl
xor
pop
pop
pop
mov
inc
add
jmp
jmp
enter
subl
ret
mov
call
xor
test
mov
mov
add
ret
xchg
lea
push
mov
cmp
push
mov
mov
nop
mov
shl
add
mov
mov
mov
lea
push
push
push
mov
push
call
test
je
xor
insl
push
ljmp
mov
mov
mov
xor
pop
pop
pop
mov
leave
movsb
inc
add
inc
hlt
push
push
dec
inc
clc
push
call
ret
jmp
jmp
mov
pop
mov
pop
xchg
lea
push
push
push
mov
inc
mov
lret
call
cmp
repnz
pop
pop
pop
xchg
lea
push
mov
xor
push
fs
incl
jne
call
xor
pop
pop
pop
fs
inc
add
cwtl
xchg
xchg
stc
jmp
pop
xchg
lea
subl
jae
xor
mov
ret
lea
stos
movsl
inc
add
add
add
add
add
add
add
cmpsb
inc
add
add
add
loope
add
xor
cmp
inc
add
xor
test
inc
add
inc
add
test
add
inc
add
inc
add
xor
inc
add
or
inc
add
jle
add
addl
add
inc
add
and
inc
add
es
add
add
adc
mov
or
hlt
or
cmp
inc
add
add
or
inc
add
push
inc
add
sbb
nop
sub
cmp
inc
add
inc
add
sbb
add
push
inc
add
sbb
add
xchg
xor
inc
add
add
add
push
push
js
insl
popa
addr16
outsl
outsb
ja
outsl
insb
cmp
push
push
js
insl
popa
push
inc
outsl
outsb
je
outsl
xchg
mov
inc
or
outsb
imul
lea
nop
mov
push
push
push
mov
mov
mov
adc
test
jne
mov
call
call
xor
insl
push
ljmp
mov
mov
mov
dec
inc
cld
call
vcvtps2pd
mov
ror
cmpsb
inc
add
call
test
jne
mov
call
call
ret
jmp
jmp
pop
pop
bound
nop
and
add
add
add
add
cmpsl
inc
add
add
add
cmpsl
inc
add
xchg
inc
add
xor
xor
inc
add
xor
cmp
inc
add
xor
xchg
das
inc
add
inc
add
incl
sbb
add
iret
inc
add
inc
add
add
sub
inc
add
rolb
enter
or
add
roll
cmp
inc
add
or
aam
inc
add
adc
pusha
rolb
sbb
inc
add
roll
add
inc
add
or
js
inc
add
sbb
or
add
adc
add
imul
or
imul
inc
add
pop
inc
outsb
imul
nop
cmpb
jne
mov
mov
call
mov
mov
mov
test
inc
add
add
lea
pop
push
test
je
add
call
mov
cmc
lock
mov
call
lea
push
call
mov
or
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
test
je
call
popl
add
lret
pop
pop
ret
add
add
push
call
mov
mov
lea
sbb
add
push
call
mov
and
lret
call
test
call
pop
pop
ret
lea
pop
sbb
add
push
call
ret
add
push
call
ret
nop
mov
add
push
mov
cld
mov
mov
mov
mov
mov
call
mov
call
push
lea
push
mov
call
mov
xlat
shlb
shr
push
cli
xchg
lea
mov
call
mov
mov
mov
mov
cld
movb
xor
push
push
pushl
mov
mov
cld
mov
call
xor
pop
pop
pop
fs
inc
add
sti
mov
ret
jmp
jmp
pop
mov
pop
ret
nop
mov
add
push
mov
inc
cld
sbbb
add
add
je
fcom
mov
call
jmp
orl
add
test
nop
mov
mov
call
xor
push
fs
mov
dec
inc
clc
push
call
mov
mov
test
cld
call
inc
in
call
push
mov
hlt
push
call
dec
inc
lock
push
push
call
push
aam
ret
mov
dec
inc
lock
mov
push
mov
stc
decl
push
push
add
xor
mov
movb
vandnps
stos
inc
add
xor
mov
mov
mov
mov
call
xor
dec
inc
add
rcrb
mov
inc
add
cld
movb
ret
jmp
repz
push
push
push
mov
push
mov
cld
call
push
dec
inc
cld
call
outsl
push
push
mov
in
call
xor
pop
pop
pop
mov
push
mov
push
mov
hlt
push
call
dec
inc
hlt
push
call
mov
push
call
ret
jmp
fcompp
xor
pop
pop
pop
fs
inc
add
adc
add
in
out
sti
inc
jmp
jmp
pop
mov
enter
push
push
mov
dec
inc
and
je
mov
mov
mov
call
mov
dec
inc
adc
cwtl
add
decl
cmp
inc
cmp
into
leave
xor
mov
call
pop
pop
ret
mov
nop
mov
add
push
mov
cld
call
mov
cmp
jne
mov
mov
call
jmp
mov
mov
call
push
call
mov
clc
xor
push
push
pushl
mov
pop
push
cld
mov
mov
bound
add
push
mov
cld
mov
mov
mov
cld
add
push
push
push
dec
inc
clc
push
call
mov
mov
mov
cld
mov
mov
aam
push
cld
ljmp
mov
clc
mov
mov
cld
call
xor
pop
pop
mov
push
mov
push
dec
inc
cld
mov
call
push
call
ret
jmp
jmp
pop
pop
pop
pop
ret
mov
pop
push
push
push
mov
movb
add
cmpl
je
testb
jne
test
je
test
add
mov
call
test
je
mov
call
mov
test
pop
push
cmpb
je
mov
call
test
je
cmpb
je
push
xor
mov
enter
jnp
jmp
push
push
push
mov
call
push
call
sub
movb
jmp
movb
mov
fs
pop
pop
ret
lea
pop
push
mov
testb
inc
inc
mov
mov
pusha
pop
test
incl
add
je
mov
inc
cmp
incl
sbb
add
add
or
xchg
add
mov
add
mov
mov
push
js
pop
ret
nop
nop
mov
xor
push
push
pushl
mov
add
xor
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
xor
add
nop
mov
push
push
xor
push
fs
lea
inc
cmp
dec
add
imulb
clc
lea
mov
out
decl
mov
call
call
xor
pop
pop
pop
mov
pop
lods
inc
add
add
add
dec
stc
inc
jmp
jmp
pop
pop
pop
ret
nop
test
jns
andl
clc
add
lea
dec
je
int
je
dec
je
pop
adc
ret
adc
ret
mov
ret
xor
ret
nop
pop
push
add
dec
test
pop
pop
mov
movl
mov
mov
mov
mov
dec
test
sub
mov
mov
mov
movzbl
cmp
movzbl
sub
mov
popa
pop
nop
add
test
jge
mov
mov
incl
decl
jne
add
pop
pop
xchg
lea
push
push
push
cmp
mov
mov
mov
jge
mov
call
jmp
or
sar
jns
addl
inc
and
movl
mov
incl
dec
inc
and
mov
mov
and
movzbl
xor
ret
out
dec
mov
mov
movzbl
xor
sbb
sub
test
jg
cmp
jle
mov
and
mov
mov
mov
mov
or
jmp
mov
cmpl
jle
add
or
pop
mov
mov
mov
call
mov
lea
ror
mov
call
jmp
mov
lea
xlat
call
mov
mov
mov
call
leave
les
pop
pop
ret
nop
nop
mov
add
push
push
mov
cld
mov
xor
mov
xor
dec
inc
call
add
into
decl
mov
mov
xor
xor
lea
adc
movzbl
div
jge
cmpl
jle
lea
lea
movzbl
mov
mov
inc
cmp
fcom
inc
decl
jne
jp
or
into
leave
add
add
mov
lea
pop
push
push
push
jmp
mov
mov
adc
cmp
jge
test
jne
mov
inc
cmp
mov
mov
call
call
sub
push
inc
mov
push
xchg
or
mov
inc
decl
cmc
lock
lea
pop
push
inc
push
mov
into
leave
mov
mov
mov
push
mov
mov
sar
jns
adc
jg
add
add
add
ja
add
dec
or
jns
jmp
mov
inc
add
add
dec
or
jns
add
jl
cmpl
push
or
or
loopne
dec
call
shl
mov
dec
dec
or
ds
loope
mov
dec
dec
or
inc
cmp
mov
xor
push
clc
mov
je
or
hlt
lea
sub
mov
sub
jp
clc
mov
lea
push
dec
jae
mov
push
hlt
lea
adc
mov
mov
mov
lea
lea
adc
mov
add
mov
mov
adc
lea
mov
inc
cmp
jne
dec
inc
clc
mov
lea
sbb
mov
mov
mov
mov
lea
lea
mov
add
xor
sub
mov
lea
mov
mov
clc
mov
or
lea
mov
mov
mov
mov
hlt
lea
lea
push
dec
call
push
pop
pop
sub
lea
mov
call
mov
incl
mov
mov
dec
inc
cld
jl
mov
pop
pop
nop
mov
pop
ret
nop
nop
mov
add
push
push
mov
clc
mov
cld
mov
mov
pop
push
cld
movzwl
imul
call
mov
mov
add
add
mov
mov
call
mov
push
push
pushl
mov
dec
inc
cld
mov
mov
imull
add
call
mov
push
push
pushl
mov
mov
mov
add
mov
loopne
ljmp
add
add
mov
ror
ljmp
fisttpl
mov
lret
shr
mov
pop
push
mov
lret
shr
out
js
mov
loope
mov
mov
leave
push
dec
addb
sti
add
mov
dec
inc
mov
inc
dec
dec
test
jl
inc
mov
xor
pop
push
cld
mov
dec
sub
scas
push
call
pop
ljmp
call
push
ljmp
jge
test
dec
test
jl
and
and
shl
mov
and
and
add
mov
xor
and
out
ljmp
jecxz
movzwl
lea
mov
incl
or
add
add
decl
mov
mov
pop
add
add
mov
loopne
jmp
mov
decl
punpcklbw
pushl
fisttpl
mov
inc
push
mov
xor
push
dec
inc
or
mov
xor
loopne
mov
lea
or
add
inc
movb
inc
stc
add
inc
cmp
jne
xor
or
mov
cmpl
jg
inc
cmp
jl
lea
mov
lea
lea
mov
lea
push
dec
mov
add
sti
add
add
adc
mov
add
jle
mov
lea
mov
lea
dec
inc
cmp
xor
mov
mov
mov
inc
inc
add
push
cld
imull
mov
mov
fstp
add
add
mov
add
mov
call
push
push
dec
fmuls
dec
inc
mov
decl
or
add
inc
fdivs
sub
inc
or
add
ret
jl
inc
dec
inc
mov
inc
or
xor
mov
call
orl
decl
jne
mov
fmuls
rorb
mov
add
inc
mov
xor
add
mov
push
test
xchg
mov
nop
mov
xor
mov
shlb
rorb
mov
test
je
pop
pop
add
rorb
xor
mov
add
int3
xor
mov
add
enter
test
jne
mov
mov
shl
or
cltd
idiv
mov
add
add
enter
stc
mov
mov
shl
adcl
idiv
mov
or
add
test
adc
mov
xor
or
add
call
inc
add
decl
jne
mov
cld
mov
add
mov
in
inc
cld
mov
in
add
cmp
decl
loopne
push
cld
mov
imul
mov
test
mov
cld
inc
inc
or
sarb
inc
mov
fisttpl
or
rorl
pop
push
in
inc
shr
add
decl
mov
push
loopne
inc
hlt
call
mov
mov
mov
dec
test
jl
inc
mov
movzwl
or
mov
mov
mov
mov
mov
call
mov
mov
mov
call
cmc
lock
jne
inc
decl
jne
xor
pop
pop
pop
mov
inc
add
shr
out
out
jmp
jmp
vcvtps2pd
mov
mov
mov
add
out
inc
jmp
jmp
mov
pop
push
fmuls
cmc
lock
pop
pop
pop
ljmp
rclb
push
push
div
mov
movb
mov
xor
mov
xlat
rorb
xor
sub
mov
test
xor
inc
std
add
mov
xor
dec
inc
pushl
rorb
xor
sub
cmp
cli
jae
mov
dec
inc
std
mov
incb
inc
dec
jne
mov
pop
pop
pop
pop
pop
ret
nop
pop
push
push
push
push
xor
mov
mov
mov
movl
mov
mov
mov
call
mov
enter
decb
add
push
decl
mov
mov
call
mov
mov
add
call
sbb
mov
inc
incl
inc
inc
inc
cmp
jne
pop
pop
pop
pop
enter
push
mov
xor
push
push
mov
mov
clc
mov
mov
inc
inc
add
adc
add
and
mov
mov
cld
imull
add
add
add
inc
in
jp
cld
mov
dec
test
fisttpl
in
mov
call
push
mov
cvtps2pd
mov
call
mov
mov
pop
call
inc
dec
jne
pop
pop
mov
pop
ret
lea
push
push
push
push
nop
mov
mov
mov
mov
call
xor
movb
mov
sub
push
mov
movb
mov
xor
mov
mov
add
leave
int
mov
mov
into
leave
mov
mov
mov
xor
mov
movb
inc
inc
decb
roll
dec
and
jne
inc
decb
jne
pop
fs
pop
pop
ret
lea
pop
push
push
push
push
mov
mov
jl
cmp
rorb
sub
mov
push
add
add
mov
call
mov
xor
dec
inc
add
lea
add
nop
mov
call
in
call
add
add
mov
call
mov
mov
add
lea
add
add
lea
add
mov
push
add
add
mov
call
mov
dec
jne
pop
pop
pop
pop
pop
ret
nop
or
inc
add
add
inc
lea
pop
push
push
push
push
mov
mov
add
call
vshufps
mov
movb
sub
dec
add
inc
and
add
adc
dec
add
pop
add
leave
mov
mov
popa
pop
popl
xor
mov
pop
sbb
mov
movb
inc
inc
push
dec
and
jne
inc
sub
jne
inc
decb
jne
pop
pop
pop
pop
pop
xchg
lea
push
push
push
push
nop
mov
mov
mov
dec
add
jl
inc
xor
mov
sub
dec
inc
and
mov
mov
call
in
call
add
add
add
add
decl
inc
add
mov
add
decl
loopne
add
roll
add
mov
push
add
add
mov
call
mov
dec
jne
pop
pop
pop
pop
pop
ret
nop
or
inc
add
add
inc
lea
pop
push
push
mov
mov
xor
add
and
fisttpl
lret
mov
mov
call
inc
lret
movb
jne
pop
pusha
pop
ret
nop
push
push
push
push
leave
in
dec
and
mov
and
mov
mov
mov
lea
orl
and
mov
mov
add
addl
mov
mov
mov
dec
test
btc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
bound
mov
lret
jns
decl
ret
imul
xlat
rorb
rolb
ret
pop
push
and
imul
add
shr
mov
mov
mov
call
mov
dec
jne
mov
and
mov
call
mov
pop
push
and
mov
sub
loop
decl
dec
and
jne
add
pop
pop
pusha
pop
ret
nop
push
mov
mov
xor
mov
clc
repz
pushl
rorb
shl
mov
add
mov
incb
add
inc
add
cmp
jne
pop
ret
pop
push
push
push
add
mov
and
mov
mov
and
add
mov
sbb
add
and
mov
mov
and
mov
mov
mov
mov
add
inc
inc
mov
movl
mov
mov
mov
mov
dec
test
setge
xor
or
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
call
mov
mov
lret
add
add
cltd
stc
sub
jb
je
dec
je
jmp
xor
dec
inc
and
shr
mov
jmp
xor
mov
shr
add
mov
adc
and
in
call
push
mov
mov
call
mov
inc
dec
pshufw
decl
inc
and
call
mov
mov
mov
call
mov
ljmp
and
decl
and
incl
pop
pop
ret
lea
pop
push
push
push
mov
mov
mov
mov
add
add
mov
and
div
cmp
rorb
mov
add
pop
pop
pop
pop
ret
pop
push
push
mov
mov
and
fdivrs
call
mov
lret
mov
mov
push
push
add
mov
push
xor
mov
lea
mov
mov
call
mov
pop
pop
pop
xchg
lea
push
mov
push
xor
mov
pop
push
or
sbb
mov
add
mov
mov
call
bound
add
lea
nop
mov
mov
call
xor
mov
pop
ret
pop
push
push
add
mov
sbb
mov
mov
inc
inc
add
add
mov
mov
mov
sub
mov
mov
add
inc
and
mov
mov
mov
dec
inc
and
mov
mov
mov
mov
mov
add
inc
inc
mov
mov
mov
dec
test
femms
or
add
inc
mov
mov
and
dec
inc
and
mov
mov
call
cmc
lock
and
dec
inc
and
mov
mov
call
cmc
lock
and
dec
inc
and
mov
mov
call
cmc
lock
mov
mov
call
mov
movzwl
nop
mov
inc
cmp
movzwl
cmp
jne
mov
cmp
and
jne
mov
cmp
je
inc
xchg
xor
jmp
cmp
jne
cmpl
jne
xor
jmp
mov
and
movl
mov
mov
and
mov
mov
and
mov
mov
ret
or
sub
mov
ret
push
and
cwtd
xchg
inc
cmovo
add
sub
jmp
movzwl
dec
inc
ret
or
dec
and
mov
mov
mov
call
mov
decl
sar
decl
add
arpl
ret
push
push
push
push
leave
fmull
sub
pushl
rorb
rorb
jae
rorb
or
leave
jl
inc
xlat
rorb
cmp
and
jle
mov
mov
inc
add
dec
jne
mov
aam
mov
mov
xor
mov
pop
push
and
mov
adc
mov
mov
mov
mov
mov
mov
mov
pop
push
mov
mov
cmp
jge
cmp
jl
addl
sub
mov
and
inc
mov
and
add
orb
add
inc
addl
fmuls
jl
inc
add
cmpl
je
movl
mov
dec
xlat
sarb
mov
xor
mov
xor
pop
pop
std
movzbl
sub
mov
mov
add
std
mov
movzbl
movzbl
sub
cmpl
mov
jl
sbb
scas
insb
and
add
lock
scas
jmp
std
cmp
and
jge
mov
mov
inc
add
decl
jne
mov
and
mov
add
dec
jne
leave
les
nop
mov
add
push
push
push
dec
clc
mov
mov
dec
inc
cld
mov
lea
mov
add
and
mov
sub
mov
mov
mov
add
and
mov
sub
inc
add
hlt
out
mov
mov
dec
inc
push
mov
mov
mov
dec
test
pmaddwd
add
add
inc
nop
mov
mov
dec
mov
mov
mov
mov
and
mov
mov
mov
call
mov
mov
clc
mov
and
mov
jmp
add
add
mov
clc
call
mov
clc
mov
mov
and
out
mov
mov
mov
call
mov
mov
pop
push
jmp
inc
in
call
movzwl
movzwl
cmovo
add
dec
in
jne
mov
ret
or
dec
jmp
or
ret
pop
cmp
je
inc
cmp
xor
jmp
mov
mov
mov
mov
mov
call
mov
jmp
loopne
test
lcall
hlt
mov
call
mov
mov
mov
call
mov
decl
nopl
lcall
mov
ret
lea
nop
mov
add
push
push
nop
mov
mov
mov
bound
mov
mov
mov
call
dec
inc
clc
xor
push
push
pushl
mov
clc
mov
jo
sti
incl
or
add
or
pop
or
loopne
jmp
shlb
mov
clc
mov
mov
call
int3
mov
mov
push
dec
adc
cld
decl
sbb
mov
mov
call
vcvtps2pd
mov
ror
roll
inc
clc
add
cli
inc
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
mov
in
out
sti
inc
mov
cld
imul
add
not
and
add
std
clc
add
push
push
push
xorl
xor
pop
push
and
push
push
push
int3
stos
stc
incl
loop
jmp
std
clc
inc
jl
cmpl
jb
push
mov
lea
and
mov
stos
movsl
pop
jmp
mov
xor
add
pop
stc
inc
push
sub
add
mov
dec
inc
and
mov
jns
paddd
je
jns
pop
sub
je
and
push
add
sub
movw
and
movw
sbb
movw
adc
mov
data16
and
mov
int3
movl
add
mov
push
dec
inc
add
and
add
xor
decl
cltd
xor
sub
bswap
enter
add
arpl
ret
push
mov
sbb
push
push
mov
mov
pop
push
fmuls
add
jmp
inc
out
std
clc
or
movl
testb
je
addl
jmp
mov
push
add
add
shl
roll
add
mov
mov
in
mov
pop
pop
mov
mov
in
cmp
push
push
push
mov
mov
mov
lret
call
mov
sub
mov
inc
clc
push
call
mov
xor
push
push
pushl
mov
test
sbb
push
mov
push
call
mov
clc
mov
push
call
push
push
mov
push
mov
push
push
nop
mov
push
call
test
setne
vcvtps2pd
mov
ror
ret
inc
add
punpckhdq
mov
nop
mov
push
call
mov
push
call
ret
jmp
jmp
mov
pop
pop
nop
mov
pop
ret
nop
nop
mov
add
push
push
lea
cld
mov
divb
or
jmp
sti
xchg
lea
lea
mov
call
mov
add
add
mov
fdivr
decl
hlt
xor
push
push
pushl
mov
hlt
xor
jo
push
hlt
mov
dec
mov
dec
lock
mov
mov
adcl
mov
add
push
pop
push
sti
push
mov
mov
pop
push
cld
call
vcvtps2pd
mov
sbb
jmp
stc
hlt
call
call
call
mov
pop
pop
pop
mov
ret
lea
nop
mov
add
push
push
lea
mov
lret
mov
call
test
add
dec
call
cmp
pusha
cmpb
je
mov
mov
add
push
decl
push
push
add
xor
mov
mov
mov
call
xlat
rorb
insb
add
xor
pop
pop
pop
fs
add
jmp
mov
call
call
call
jmp
mov
dec
sub
adc
sub
je
call
jmp
enter
add
sbbl
fcoml
nop
mov
call
push
mov
pusha
mov
in
call
mov
xor
push
push
pushl
mov
mov
mov
call
mov
xor
insl
push
ljmp
mov
mov
mov
fmull
decl
inc
clc
call
xor
pop
pop
imul
stc
decl
stc
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
cmc
lock
push
mov
adc
push
mov
adc
mov
pop
loopne
std
decl
push
push
add
xor
mov
add
cmpw
je
call
int3
movl
mov
call
push
dec
loopne
push
in
xchg
add
decl
mov
fsubr
fcmovnbe
decl
push
push
fs
xor
mov
dec
inc
aam
xor
aam
rorb
inc
nop
mov
add
mov
call
inc
hlt
lret
mov
call
mov
lock
call
xor
mov
cmp
ja
decl
add
add
add
movb
sub
add
add
inc
add
lea
nop
mov
push
mov
mov
in
mov
call
mov
mov
push
push
and
cwtl
add
add
call
dec
mov
mov
pusha
pop
repnz
decl
and
add
add
nop
mov
call
mov
mov
mov
call
mov
movl
pop
push
mov
call
mov
mov
mov
in
call
jmp
mov
push
mov
call
push
push
push
push
mov
mov
mov
adc
cmc
add
decl
pop
push
in
call
dec
inc
hlt
movw
pop
push
fmull
mov
or
inc
add
xor
stc
decl
insl
push
ljmp
mov
mov
mov
fmull
decl
mov
dec
inc
clc
mov
call
xlat
rorb
imul
pop
fs
insb
stc
nop
mov
call
call
call
xor
pop
pop
pop
mov
inc
add
aam
pusha
aam
out
jmp
jmp
vcvtps2pd
mov
cmp
inc
rorb
aam
inc
jmp
jmp
mov
arpl
mov
pop
ret
nop
cli
add
mov
jmp
cmp
jg
mov
adc
cmp
or
add
add
decb
sub
push
mov
xor
push
fs
incl
xor
pop
pop
pop
mov
inc
add
jmp
jmp
enter
subl
jae
call
ret
nop
clc
enter
add
add
add
add
leave
inc
add
add
add
leave
inc
add
repnz
add
xor
xor
inc
add
xor
cmp
inc
add
xor
xchg
das
inc
add
inc
add
inc
add
adc
add
int3
inc
add
iret
inc
add
leave
inc
add
int
add
inc
add
int
add
inc
add
into
inc
add
inc
add
rolb
cwtl
rolb
aad
inc
add
inc
add
rolb
inc
add
roll
in
inc
add
dec
arpl
dec
imul
inc
add
or
outsl
outsb
dec
js
je
enter
inc
inc
add
add
dec
arpl
imul
push
call
mov
mov
dec
inc
adc
sub
inc
add
jb
add
mov
and
mov
call
test
or
mov
call
pop
pop
ret
push
mov
orl
add
add
incl
pop
ret
nop
push
cmpl
jne
cmpw
mov
mov
mov
call
pop
ret
mov
dec
dec
or
cmp
shr
loopne
add
xchg
lea
push
mov
xor
push
push
push
mov
mov
cld
mov
call
xor
push
push
pushl
mov
dec
inc
cld
mov
call
push
add
call
mov
xor
push
fs
xor
lea
or
add
mov
mov
push
add
pop
hlt
dec
loopne
jl
xchg
lea
mov
mov
mov
call
cmpb
jle
mov
xor
inc
add
out
dec
add
mov
xor
push
aam
lret
pushl
mov
mov
mov
call
mov
push
push
add
dec
clc
mov
cmp
xor
mov
in
call
mov
in
mov
mov
call
mov
mov
cmp
add
add
rcrb
mov
jmp
jmp
mov
call
call
call
jmp
xlat
rorb
add
pusha
cmp
rcrb
mov
push
lret
inc
add
fs
inc
jmp
jmp
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
pop
pop
pop
mov
enter
push
mov
xor
push
push
push
mov
cmc
lock
mov
call
mov
xor
push
push
pushl
mov
mov
add
inc
or
clc
mov
dec
inc
cld
mov
call
dec
inc
add
inc
or
adc
mov
inc
lock
mov
sbb
push
decl
or
push
adc
rorl
push
adc
push
mov
mov
or
mov
or
mov
cmp
gs
decl
xor
mov
std
clc
mov
mov
cld
mov
call
cmp
add
mov
adc
gs
decl
mov
mov
cmp
inc
decl
jne
xor
pop
pop
pop
mov
inc
add
hlt
call
out
jmp
jmp
arpl
mov
pop
ret
nop
nop
mov
add
push
push
dec
inc
or
mov
cld
add
mov
mov
lcall
adc
fmuls
clc
mov
call
cmp
push
mov
mov
mov
call
test
inc
inc
xor
mov
mov
clc
mov
call
dec
inc
inc
mov
sti
testb
fcmovnbe
mov
call
mov
cld
mov
push
push
adc
fmuls
xchg
ret
loopne
jne
inc
decl
fstp
jmp
mov
mov
clc
mov
call
test
lahf
ret
mov
pop
pop
pop
pop
pop
ret
push
mov
cmp
push
mov
mov
mov
push
push
mov
push
push
push
call
pop
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
add
add
incl
arpl
jae
add
pop
push
mov
mov
mov
dec
inc
add
test
cli
lcall
adc
call
pop
pop
ret
mov
inc
inc
add
inc
or
nop
adc
ret
mov
nop
mov
push
push
push
mov
mov
mov
dec
inc
cld
pushl
rclb
int
add
mov
mov
push
push
adc
fdivs
xor
or
push
nop
mov
mov
mov
push
push
adc
cmpsb
mov
call
mov
mov
inc
inc
add
shr
push
inc
add
mov
mov
mov
push
adc
or
inc
add
int
nop
mov
mov
mov
push
push
adc
or
pop
pop
fs
inc
add
sti
inc
enter
jmp
pop
pop
pop
pop
ret
push
push
push
mov
mov
sbb
cmp
decl
or
dec
dec
int
add
push
or
pop
pop
enter
push
mov
push
pop
push
push
mov
mov
mov
mov
call
mov
xor
insl
push
ljmp
mov
mov
mov
mov
call
mov
mov
call
xchg
popl
orl
data16
nop
mov
call
call
call
pop
pop
pop
pop
pop
xchg
lea
push
mov
push
pop
push
push
mov
mov
mov
cwtl
inc
add
mov
inc
cld
xlat
rclb
in
inc
add
xor
push
push
int3
mov
mov
cld
call
mov
cld
mov
call
popl
leave
les
jmp
jmp
mov
call
call
call
pop
pop
pop
pop
enter
push
mov
cmp
push
push
mov
mov
test
jne
mov
adc
jmp
mov
mov
call
test
imul
pushl
rclb
dec
inc
add
mov
adc
push
nop
mov
mov
call
cmc
lock
test
jl
inc
dec
inc
clc
add
add
mov
clc
mov
mov
call
mov
mov
mov
push
push
sbb
inc
clc
dec
jne
xor
pop
pop
pop
mov
dec
inc
add
cli
inc
jmp
jmp
mov
sbb
call
test
je
mov
cld
call
xor
push
fs
mov
adc
mov
mov
cld
mov
call
xor
pop
pop
mov
push
mov
call
ret
jmp
jmp
mov
mov
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
cld
call
xor
push
push
pushl
fs
mov
pop
pop
or
sti
add
rorl
push
push
sub
sti
pushl
xor
pop
pop
pop
mov
pop
rolb
mov
call
ret
jmp
jmp
pop
pop
enter
push
push
mov
fstp
mov
mov
mov
push
push
adc
mov
or
fs
stc
decl
call
mov
adc
pop
pop
ret
nop
mov
mov
call
mov
mov
call
or
ret
mov
call
ret
lea
nop
mov
push
push
push
push
mov
mov
mov
call
mov
xor
push
push
pushl
fs
push
push
call
mov
mov
call
mov
mov
mov
call
mov
mov
movl
vcvtps2pd
mov
sbb
jmp
mov
cld
call
call
call
mov
mov
call
arpl
pop
pop
ret
nop
mov
push
push
push
push
mov
mov
mov
call
mov
xor
push
push
pushl
fs
inc
cld
mov
push
or
cld
mov
call
mov
mov
or
int
add
rcrb
mov
jmp
sbb
arpl
decl
pop
stc
call
call
mov
or
pop
pop
pop
pop
ret
push
mov
mov
add
jne
cli
decl
push
or
ret
xlat
shlb
mov
call
ret
mov
call
ret
mov
call
ret
mov
push
mov
xor
push
fs
incl
xor
pop
pop
pop
mov
inc
add
jmp
jmp
enter
subl
ret
push
mov
xor
push
fs
incl
xor
pop
pop
pop
mov
inc
add
jmp
jmp
enter
subl
jae
push
call
xchg
nop
sub
add
add
adc
mov
call
ret
add
add
insb
jo
imul
add
rolb
add
add
add
rolb
add
add
add
rolb
add
repnz
add
xor
xor
inc
add
xor
cmp
inc
add
xor
xchg
das
inc
add
inc
add
adc
add
adc
add
aad
add
push
dec
arpl
inc
jb
insl
gs
xlat
rolb
pop
or
outsl
outsb
inc
jb
insl
xlat
rolb
je
inc
add
imul
push
add
add
add
add
roll
add
add
add
roll
pop
add
add
repnz
add
xor
xor
inc
add
xor
cmp
inc
add
xor
xchg
das
inc
add
inc
add
inc
add
fadds
sbb
add
xlat
inc
add
add
jecxz
add
push
inc
outsb
imul
jne
jae
jb
insl
popa
lea
fcom
inc
add
adc
inc
outsb
imul
ja
jae
jb
insl
popa
push
push
repnz
inc
outsb
imul
mov
aad
and
or
inc
add
ret
mov
push
mov
push
nop
mov
test
je
test
call
mov
xor
push
sub
aam
add
mov
mov
or
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
cmc
lock
pop
pop
ret
mov
aad
dec
je
out
ljmp
jp
or
add
xor
ret
pop
push
mov
mov
mov
mov
xor
mov
add
sarl
mov
mov
call
std
clc
or
xchg
rcrb
add
add
add
add
push
mov
mov
mov
add
cmp
cmp
cltd
xchg
rolb
and
or
inc
pushw
add
mov
mov
call
or
setne
pop
pop
enter
push
mov
cmp
push
push
mov
mov
mov
mov
mov
clc
mov
cmp
jle
mov
mov
mov
mov
cld
mov
call
cmp
xchg
rolb
mov
call
sub
mov
pushw
add
mov
mov
sbb
inc
setne
pop
pop
pop
pop
ret
lea
push
push
mov
fstp
mov
call
mov
mov
enter
call
inc
lcall
rclb
test
or
call
mov
mov
mov
xlat
rorb
stc
mov
or
test
je
and
pop
stc
jmp
add
les
fs
pop
pop
pop
ret
pop
push
call
mov
add
rorb
call
mov
call
test
jle
mov
call
pop
pop
xchg
lea
push
push
push
mov
mov
call
push
cmpl
adc
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
lea
lea
or
call
mov
mov
adc
adc
inc
sbb
sbb
enter
cmp
lcall
pop
ret
nop
push
push
call
mov
mov
mov
call
mov
call
mov
and
mov
cmpb
incl
call
pusha
pop
ret
nop
call
ret
mov
push
push
push
mov
add
mov
jl
inc
add
mov
mov
call
call
inc
dec
jne
mov
mov
call
lea
add
add
call
lea
xor
mov
call
dec
inc
add
leave
mov
call
mov
add
arpl
ret
push
mov
push
push
xor
push
push
pushl
mov
int3
sbb
cmp
mov
lea
call
mov
mov
mov
call
sarb
pop
pop
pop
mov
push
lea
mov
call
ret
push
jmp
pop
bound
nop
mov
mov
ret
mov
pop
push
mov
mov
mov
mov
call
mov
pop
pop
xchg
lea
push
push
mov
fstp
mov
mov
call
pop
enter
push
mov
cmp
push
push
push
mov
mov
cld
test
jne
mov
call
jmp
mov
mov
call
test
inc
cld
call
vandnps
fadds
add
xor
mov
lea
mov
lea
mov
call
mov
push
subl
inc
add
mov
xchg
add
add
rep
pop
mov
mov
xchg
mov
mov
dec
jbe
mov
xor
or
push
add
call
mov
xor
push
fs
mov
mov
call
mov
mov
mov
push
or
sub
add
mov
nop
mov
cli
pushl
rcrb
mov
jmp
jmp
mov
call
call
call
inc
dec
xchg
xor
pop
pop
pop
fs
out
stc
nop
mov
call
call
call
jmp
mov
mov
cld
call
pop
pusha
pop
pop
pop
pop
ret
mov
nop
mov
push
push
push
push
mov
cld
mov
mov
mov
sub
inc
add
jb
add
test
je
mov
dec
inc
incl
rorb
add
mov
mov
mov
push
or
loope
add
xor
mov
mov
push
push
or
rolb
add
dec
inc
cld
mov
call
test
inc
inc
mov
call
test
jle
push
push
mov
mov
call
mov
call
mov
mov
mov
call
jmp
xor
mov
or
jmp
mov
mov
call
mov
mov
call
xor
insl
push
ljmp
mov
mov
mov
push
push
and
ret
call
mov
dec
test
jl
inc
xor
mov
mov
nop
mov
decl
mov
call
inc
jp
jmp
pop
mov
inc
add
cld
call
out
jmp
jmp
pop
push
cld
mov
call
pop
pop
pop
pop
pop
ret
nop
mov
add
push
push
nop
mov
mov
mov
inc
clc
mov
mov
call
mov
xor
push
push
pushl
fs
mov
adc
cli
decl
cmc
lock
xor
xor
call
mov
mov
mov
mov
mov
mov
mov
inc
inc
add
clc
add
add
clc
jp
push
movw
mov
mov
data16
add
jne
movzwl
shl
mov
mov
call
mov
xor
push
fs
mov
mov
call
mov
mov
dec
inc
lock
call
dec
inc
lock
movzwl
add
test
jl
inc
mov
in
call
mov
add
mov
lea
mov
mov
mov
stc
decl
push
push
pushl
mov
dec
inc
fmull
dec
inc
lock
call
dec
inc
fmull
nop
mov
mov
call
mov
mov
ror
clc
decl
xchg
sub
add
call
mov
xchg
lea
mov
movzwl
dec
inc
fmull
mov
add
sub
decl
aam
adc
add
rcrb
fs
inc
add
or
dec
stc
inc
jmp
jmp
incl
push
dec
loopne
test
rcrb
mov
icebp
fildl
mov
mov
call
ret
jmp
jmp
xor
mov
call
mov
mov
call
mov
clc
xor
push
push
pushl
mov
pop
push
lock
mov
push
push
push
mov
cmpb
je
mov
mov
push
push
and
clc
jns
addl
mov
push
push
sub
clc
jns
addl
call
mov
mov
mov
mov
mov
xor
pop
pop
pop
fs
jmp
jmp
dec
inc
clc
call
inc
clc
call
xor
pop
pop
pop
fs
inc
add
push
stc
inc
and
pop
stc
jmp
mov
clc
pop
pop
pop
mov
pop
or
mov
or
push
push
push
xor
mov
enter
mov
xor
push
fs
xor
mov
clc
xor
mov
xor
push
call
imul
je
lea
lea
mov
call
mov
mov
call
or
mov
call
lea
mov
mov
mov
call
cmp
jl
lea
lea
mov
call
mov
mov
call
je
mov
call
mov
call
jmp
dec
inc
enter
mov
call
dec
inc
enter
inc
add
jne
lea
add
push
call
sti
idiv
incl
add
mov
in
add
push
cmpl
jne
mov
call
mov
dec
test
mov
add
add
testb
push
add
call
mov
mov
in
subl
add
push
dec
sub
incl
jne
jmp
lea
lea
mov
call
mov
mov
call
jne
push
loope
lea
mov
mov
test
pop
movsb
add
add
add
cmpl
push
hlt
mov
mov
sub
fcoml
sbb
inc
hlt
jmp
lea
lea
mov
call
mov
mov
call
inc
ds
lea
in
call
pop
testb
rorb
inc
add
add
add
or
inc
lock
pop
push
lock
call
mov
mov
dec
inc
lock
dec
inc
enter
mov
call
dec
inc
enter
inc
add
popa
stc
decl
test
add
in
call
mov
lea
mov
mov
mov
call
cmp
jl
sub
loopne
inc
enter
or
add
call
mov
mov
call
vmwrite
add
mov
in
call
ss
add
test
je
subl
lea
lea
mov
call
mov
mov
call
jne
lea
push
lea
nop
mov
mov
mov
call
mov
cmpl
je
movb
mov
mov
mov
xor
fcmovnbe
mov
push
dec
sub
decl
clc
jne
mov
mov
call
mov
mov
fcmovnbe
mov
sub
sub
decl
or
nop
mov
mov
call
mov
mov
mov
mov
adc
sub
add
cli
decl
or
inc
xlat
dec
inc
dec
jne
cmpb
jne
mov
push
addl
add
call
mov
mov
mov
mov
add
inc
in
push
push
push
or
mov
in
mov
or
push
int3
push
push
adc
nop
mov
mov
call
std
clc
jmp
lea
mov
cld
call
mov
in
call
sub
loopne
jge
or
lea
jmp
lea
lea
mov
call
mov
mov
call
jne
cmpl
xchg
mov
add
add
cld
call
test
je
subl
lea
pop
push
call
add
fistpl
decl
loop
add
cs
add
jne
mov
cmp
in
jl
add
add
add
call
leave
add
incl
add
mov
call
sub
jmp
dec
inc
enter
mov
call
dec
inc
enter
inc
add
fistpl
pushl
mov
loopne
inc
in
jl
push
lea
lea
mov
jl
repz
incl
in
call
sub
jmp
lea
mov
call
test
je
mov
pop
push
repnz
ljmp
inc
loopne
jge
or
lea
add
jmp
mov
mov
in
lea
mov
xchg
repz
jmp
in
call
xor
incl
nop
mov
call
test
jne
mov
mov
add
mov
or
sub
incl
pop
mov
mov
call
sbb
dec
stc
decl
add
add
bound
add
dec
cmp
jne
