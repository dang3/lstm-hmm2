push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
mul
jbe
mov
scas
loop
or
jne
pusha
leave
into
sub
push
call
sti
jbe
cltd
insb
test
inc
mov
push
jl
xor
add
sbb
std
mov
testl
mov
in
jmp
or
nop
lcall
mov
inc
pop
mov
popa
outsl
notb
icebp
sub
xchg
mov
dec
negb
or
xor
push
jb
das
xor
aad
dec
aas
or
mov
je
lcall
pop
je
stc
mov
jne
rolb
add
xor
jecxz
sahf
aas
mov
xor
xchg
sbb
aaa
callw
inc
jmp
xor
mov
sub
pop
pop
pop
push
out
jp
in
addr16
push
jge
inc
stos
hlt
jle
mov
aad
add
push
adc
adc
push
jmp
ss
imul
jl
mov
std
mov
and
stos
ja
and
sub
loop
mov
sbb
add
push
pop
xor
xor
jle
ss
add
xlat
shl
pusha
insl
scas
arpl
movsl
ret
testl
jo
aad
cs
pop
push
scas
mov
es
insb
enter
xchg
movsb
ljmp
push
push
int3
cmp
fwait
cwtl
pop
cli
dec
loope
shll
mov
and
pop
loopne
je
xlat
push
clc
cmp
push
inc
addr16
dec
les
mov
mov
ds
outsl
insb
sbb
outsb
mov
pop
imul
fiadds
movb
outsl
pop
aaa
mov
dec
inc
lods
ret
xor
mov
shl
cli
enter
adc
mov
ret
stos
jb
ljmp
xor
lock
dec
cmpl
cld
dec
cltd
mov
sbb
jne
inc
ficompl
add
or
rcl
dec
scas
lret
loop
dec
fcmovb
rorb
aaa
call
repz
in
test
into
jp
stc
jmp
inc
ret
pop
xchg
sub
popa
jae
push
in
aam
mov
shlb
and
dec
movsb
pop
es
push
push
cli
sbb
test
jae
out
fisubs
pop
cmpl
lods
lcall
icebp
pop
loope
outsl
pusha
lods
sbb
int3
add
push
addl
and
mov
push
xor
push
lods
xchg
pop
pop
sbb
pop
mov
pop
xor
mov
xchg
mov
shlb
jle
cld
cwtl
jbe
and
mov
mov
cmc
insb
xchg
cltd
mov
lcall
stc
dec
xor
hlt
adc
movsl
lea
aas
add
sbb
decl
sub
inc
push
mov
pop
adcl
pop
and
fdivl
fists
pop
movsb
aam
or
icebp
cltd
stos
std
daa
pop
dec
jns
aas
add
fisttps
add
nop
test
mov
mov
xchg
filds
outsb
leave
add
cmp
loop
cld
pop
dec
xor
icebp
repnz
mov
mov
or
icebp
mov
das
ds
jbe
fwait
mov
inc
fsubr
cwtl
orl
cltd
xchg
iret
cltd
or
decl
cmp
mov
cmp
stc
imull
add
push
mov
sub
sub
sub
push
dec
filds
into
lds
lahf
leave
loopne
xchg
jne
cltd
int
adc
jo
adc
cmp
dec
adc
and
xchg
mov
sub
mov
rcl
pop
into
sub
setl
lret
gs
sbb
add
push
adc
ljmp
outsb
lcall
dec
test
adc
add
push
shll
adc
and
push
pop
fwait
outsl
push
adc
mov
mov
or
sbb
cld
ror
cmp
add
repnz
push
outsb
mov
or
mov
jmp
pop
out
mov
mov
jg
fisubrl
sbb
fnsave
fisubrs
inc
fdivp
cmp
add
loop
mov
insb
popfw
cmpsl
and
seto
xchg
dec
push
scas
add
je
add
enter
scas
push
mov
dec
popf
sbb
popf
fisubrs
or
or
int
dec
fwait
movsl
int3
mov
or
and
jmp
sub
sti
mov
dec
fwait
jecxz
cli
test
pop
mov
std
addr16
ja
adc
mov
adcl
popf
loopne
jnp
out
inc
lahf
add
cmp
mov
mov
sbb
mov
or
mov
jns
lods
inc
mov
mov
mov
mov
test
sub
jp
jmp
lea
test
sti
xor
lret
cmpsl
or
add
cmp
sub
inc
divb
mov
xchg
fwait
repz
and
out
ret
inc
inc
imul
sarl
jns
nop
neg
mov
imul
mov
daa
dec
jno,pt
das
push
popf
cmc
mov
jmp
adc
xchg
imul
das
push
icebp
stos
cmc
aas
ds
stos
push
jns
aad
jge
adc
and
ds
jo
jecxz
daa
add
mov
dec
pushl
mov
test
pushf
jmp
cltd
xor
testb
iret
ss
pop
test
fxch
pop
mov
xor
jmp
inc
mov
js
in
add
data16
shr
inc
cmpsb
rcl
lock
inc
out
dec
dec
test
push
xor
xor
data16
sub
adc
fbstp
pop
and
leave
jg
push
cwtl
into
pop
cld
lods
call
lods
inc
or
cld
call
push
mov
dec
sub
icebp
aad
insb
sbb
aas
rorl
cmpsb
xor
lahf
jle
scas
ss
stos
or
dec
dec
ret
push
mov
xor
inc
cmp
push
jmp
sti
jge
jb
rclb
mov
push
movsl
mov
insl
faddl
arpl
or
out
and
pushf
sbb
lahf
jg
daa
adc
push
lods
mov
jb
add
push
iret
in
add
jge
pop
test
popa
mov
test
add
xchg
mov
mov
mov
xor
xchg
xchg
in
pusha
xor
mov
out
mov
jne
push
out
mov
into
out
fiadds
lret
lods
and
pop
data16
lea
jns
in
insl
shll
cli
int3
in
mov
xchg
mov
dec
leave
rorb
fwait
adc
or
dec
pop
xchg
test
inc
pop
out
add
outsb
and
dec
jmp
push
ljmp
into
gs
rolb
aas
jp
fistpl
xor
lcall
sti
ljmp
mov
inc
cli
out
sub
cmp
testl
inc
ret
add
sbb
lods
sbb
icebp
xchg
aam
arpl
pusha
xchg
rol
add
movsl
testb
jl
pop
nop
shrb
repnz
dec
adc
clc
gs
sub
dec
sbb
test
sarl
mov
outsl
pop
sarb
add
insb
dec
sbb
adc
jns
cmp
mov
fprem
pushf
mov
insl
jnp
fwait
or
popf
iret
mov
rcll
imul
pop
fmuls
mov
and
rorb
ds
dec
adc
inc
mov
and
jno
fdiv
movb
push
mov
dec
cmp
adc
ret
andl
pop
xchg
sbb
into
jmp
lcall
sub
and
pop
jg
adc
bound
xchg
neg
inc
mov
sbb
xor
call
add
fstpt
sbb
in
add
xchg
in
dec
lds
loop
jbe
sbb
idivb
inc
and
ret
push
movsb
mov
sbb
add
and
ret
shrb
push
fdivrl
aaa
imul
pop
je
cmp
mov
sub
push
push
jmp
inc
mov
ljmp
imul
mov
and
push
cmp
fsubrs
fstpt
dec
nop
lock
sbb
hlt
mov
decl
stos
out
pop
jecxz
push
ficompl
cmp
mov
enter
sbb
imulb
jle
loop
jb
jne
mov
cwtl
and
xor
into
cld
mov
mov
out
pop
mov
ja
lods
xchg
pushl
test
pushf
xchg
aad
push
rcr
xchg
setne
mov
mov
icebp
push
xlat
out
jmp
dec
call
sub
mov
or
in
mov
lods
sti
rol
cmp
cwtl
repz
sbb
arpl
dec
push
roll
ds
cwtl
mov
mov
inc
daa
pop
xorl
mov
pop
rcrb
imul
xor
repnz
loopne
iret
bound
rorb
mov
leave
jns
jmp
sub
out
inc
out
adcl
xchg
pop
ret
sub
add
cmp
add
sbb
sub
fidivl
in
mov
or
inc
ret
cli
sub
rorl
into
jl
pop
dec
in
push
and
pop
wrmsr
push
addr16
insl
sub
lds
push
cmp
hlt
pop
fadds
mov
adc
push
js
mov
call
or
arpl
dec
jno
adc
xor
mov
loopne
shl
inc
ficomps
fadd
imul
rcll
push
add
dec
dec
sub
xchg
mov
fs
scas
xor
sti
pushf
and
sub
in
push
and
xchg
mov
mov
int
arpl
add
add
xor
popf
and
cmp
cli
into
lret
lods
adc
scas
pop
inc
and
js
sbb
or
daa
sbb
push
or
push
lea
pop
or
mov
fidivl
mov
xchg
dec
shlb
dec
inc
dec
push
mov
or
dec
sti
and
sub
xchg
pop
sti
test
pop
inc
jb
pop
and
hlt
pop
sub
cmp
dec
sub
loope
xchg
push
cmpsl
cmp
or
les
and
cmp
arpl
les
lret
cmp
outsb
int
lret
rol
inc
js
fists
flds
push
cmovo
mov
andb
test
pop
cmp
out
push
xlat
mov
adc
inc
rcl
jo
sbb
cmp
int
sbb
outsb
jge
cmc
enter
loop
pushf
shrb
ret
lds
ficomps
int
pop
test
inc
dec
push
cmp
test
into
adc
popa
cld
sar
call
sbb
xchg
and
push
or
ret
out
repnz
insb
iret
and
push
aaa
mov
sbb
or
mov
mov
cli
mov
mov
inc
cmp
hlt
ret
outsb
rcr
inc
pop
pop
add
je
mov
leave
cli
call
btc
cld
and
icebp
pop
jl
sti
xor
pusha
ds
push
xchg
sub
movsb
xlat
dec
jns
aad
lret
add
mov
dec
gs
mov
jle
add
xchg
aad
rclb
lods
loope
and
jo
imul
jmp
into
add
roll
jg
out
daa
push
xchg
push
pop
jbe
jp
or
mov
loope
add
jnp
jg
ret
pop
stos
mov
icebp
std
fidivrs
mov
push
mov
mov
call
adc
arpl
push
jne
jg
or
jno
mov
adc
push
cli
test
enter
sub
in
inc
and
movsb
hlt
pusha
inc
mov
inc
out
or
or
xchg
xchg
gs
mov
cmp
and
pop
xchg
test
dec
dec
add
mul
xor
mov
orl
repnz
nop
mov
cwtl
inc
pop
add
or
inc
or
xlat
int
clc
adc
clc
cmpsl
sti
sbb
rclb
inc
sbb
cmp
push
lret
or
mov
inc
pop
mov
sti
jecxz
inc
outsl
jle
sbb
sbb
sbb
or
mov
shrl
in
cmp
add
or
pop
into
or
pop
xor
mov
decl
and
movsb
and
imul
loope
add
adc
jmp
shlb
test
pop
mov
push
mov
lea
jae
pushf
sbb
outsb
cmc
fcoml
loope
add
hlt
jge
es
lea
or
popf
mov
add
jl
adc
loope
pop
and
and
cli
fwait
cli
xchg
fwait
push
ljmp
mov
es
pop
cmp
jl
movsb
rclb
or
mov
jg
mov
cli
pushl
sbb
push
test
push
inc
iret
sti
pop
call
and
jl
push
push
pop
inc
mov
sbb
cmp
jp
and
lahf
jle
pop
adc
add
cmp
fs
popf
ja
pusha
movsb
dec
out
jle
sbb
pop
inc
out
popf
adc
mov
imul
jp
into
fwait
push
roll
xor
out
mov
jns
incl
cmp
and
sbb
out
lock
jmp
dec
popa
sub
shrl
or
mov
dec
jbe
jo
lahf
inc
pop
push
xchg
jmp
pop
mov
add
inc
adc
lahf
mov
lcall
insb
repnz
arpl
jnp
or
jge
and
and
shl
sbbl
sub
inc
adc
in
sub
xchg
mov
or
call
fstps
pop
push
and
sub
push
add
xchg
imul
push
dec
fisttpll
mov
rol
das
dec
test
lods
inc
outsl
ja
rcrl
roll
pop
pop
jge
add
outsl
push
sbb
jp
lea
mov
adc
negb
iret
mov
int3
or
xchg
lcall
mov
scas
decb
add
xor
push
inc
sbbb
insl
pop
icebp
mov
arpl
inc
call
xbegin
outsl
adc
lods
dec
pop
jecxz
adc
je
push
adc
mov
js
popa
mov
sahf
popa
pop
inc
js
enter
push
jecxz
rorb
rol
fmuls
ljmp
mov
jne
xchg
dec
pop
xchg
cltd
arpl
mov
fisubrl
punpcklwd
adc
andl
mov
ds
add
dec
xchg
xor
leave
test
lahf
movsb
lods
cmp
mov
mov
and
jecxz
jbe
cmp
pop
sub
adc
and
sbb
push
int3
xor
cli
pop
or
lods
inc
stc
sbb
ret
xchg
mov
movsb
mov
fmull
or
mov
mov
in
mov
mov
xor
mov
scas
mov
xchg
jecxz
adc
xor
lahf
cmp
fistpll
jo
inc
je
hlt
das
xchg
sbb
mov
dec
fs
sbb
jo
incb
mov
repnz
aad
ss
dec
int3
jb
pop
aas
into
lods
test
fs
popf
mov
int3
imul
inc
call
sub
mov
cltd
xchg
movsl
lret
aad
mov
or
shrb
dec
shll
fucomip
stc
pop
ret
popa
out
les
dec
adc
jg
iret
or
push
into
cltd
dec
xor
inc
out
in
mov
dec
lods
cmpsb
subl
mov
orl
adc
sbb
fs
aam
ret
mov
adc
clc
mov
push
cmc
push
pushf
fnstenv
ja
aam
mov
nop
call
in
fmull
xchg
add
dec
mov
mov
sbb
andb
outsb
push
movsl
mov
test
lods
inc
out
cmp
mov
xor
mov
das
lods
xlat
mov
add
in
lock
mov
push
add
mov
lret
pop
ss
adcb
cmp
loopne
mov
xor
mov
jae
mov
lea
add
jp
in
pop
js
fdivrp
adc
int
cld
lock
push
enter
loopne
mov
adc
push
lahf
mov
add
ds
and
dec
frstor
push
fwait
adc
nop
xchg
push
add
in
ss
push
mov
bound
sub
call
pusha
call
gs
test
adc
and
das
sub
pusha
sub
mov
leave
lahf
xchg
mov
or
adc
jne
stc
out
push
ret
jl
pop
sbbb
adc
add
cli
sar
xor
jg
xchg
scas
sbb
pop
jnp
and
scas
sub
jbe
mov
fcompl
cld
push
orb
filds
shll
mov
xor
and
mov
bound
xchg
adc
into
xor
mov
xor
pop
xchg
mov
push
xchg
andb
inc
cmp
fistpl
stos
cmp
pusha
add
xor
cmc
jno
adc
push
stc
gs
popa
daa
xor
fidivrs
add
fsubs
push
rcrb
inc
jp
adc
jle
mov
dec
push
push
jne
flds
test
rcl
add
jnp
data16
adc
lret
idivl
cmc
pop
int
repnz
outsb
scas
dec
in
insl
cmpsb
out
cmp
mov
das
repnz
sbb
je,pt
push
sbb
xchg
push
cmp
inc
pop
addb
push
inc
pop
add
sbb
pop
lcall
daa
pop
lds
into
dec
pop
stos
les
push
test
pop
and
sti
shrl
push
push
xchg
call
jecxz
cmp
add
xchg
dec
lret
pop
iret
push
pop
sti
iret
cmc
jecxz
sahf
aad
test
and
into
adc
addr16
lods
lods
xchg
jae
aad
sub
cli
pushf
and
test
cmp
jo
je
ljmp
push
in
mov
cltd
or
pop
dec
aam
xor
pop
movsb
subps
jne
orl
adc
jae
mov
frstor
fwait
test
pop
cmp
ljmp
pop
jne
pop
add
sub
je
or
xor
orl
cltd
and
mov
mov
sbb
loop
out
popa
lea
loope
scas
ror
pop
mov
outsl
jns
sub
scas
sti
inc
notl
xor
cmp
pop
dec
mov
pop
iret
enter
push
lods
push
push
fcomip
ss
dec
cltd
stc
test
int3
jbe
inc
sahf
xor
fisubs
stc
fs
jp
push
jbe
cmp
jne
fincstp
jns
and
or
jno
out
lahf
inc
fldt
mov
in
adc
cli
test
clc
lret
sbb
cli
loop
popf
jmp
push
or
cmpsl
dec
mov
xchg
jno
inc
jmp
mov
rcl
push
add
lea
scas
jnp
je
imulb
or
lea
cli
stc
inc
xchg
mov
and
mov
add
in
pop
cltd
inc
sub
dec
insl
in
xor
pop
fidivl
mov
sub
jno
xchg
mov
sbb
mov
mov
xor
dec
shll
loope
push
test
mov
inc
repnz
je
aaa
fsubrs
cmp
xor
inc
xchg
sub
adc
lods
dec
nop
jecxz
addr16
imulb
mov
mov
stos
outsb
in
ret
lock
inc
rorl
cmp
stc
imul
inc
dec
aam
jp
push
push
repz
lret
inc
into
mov
stc
jl
or
lock
leave
and
mov
add
imul
aad
mov
xor
xchg
sbbb
fldt
movsb
xor
mov
rorb
sbb
ss
inc
cld
stos
mov
inc
fwait
imul
pop
xchg
js
in
push
enter
movsl
jno
pushf
out
mov
xchg
pusha
push
and
xchg
inc
insb
xchg
aad
test
scas
jle
cmp
stos
jl
pusha
mov
mov
es
add
mov
mov
loope
inc
stos
inc
mov
ljmp
in
mov
sub
pushf
popf
cmc
int
pop
fs
dec
jge
mov
push
test
fiadds
ss
inc
std
loopne
outsb
xchg
popf
arpl
mov
pushf
push
pop
jmp
push
and
dec
or
dec
xchg
fs
add
sub
and
aaa
mov
mov
mov
pop
aaa
ljmp
mov
push
loop
pop
jb
testb
popf
or
mov
cmp
mov
frstor
bound
in
jle
or
push
mov
les
rorl
pop
fldt
or
sbb
aas
fndisi(8087
mov
std
pop
mov
pushf
push
fucomip
data16
push
faddl
les
and
fs
push
in
repz
inc
inc
jl
cs
out
ja
inc
inc
and
leave
mov
lcall
das
popa
icebp
pop
push
or
xor
dec
push
call
pop
pop
mov
jo
xchg
dec
frstor
push
push
orl
adc
jbe
or
cmp
mov
push
shlb
fidivrl
aam
push
mov
mov
mov
int
test
sarb
sub
sub
fdivs
rep
inc
std
scas
in
fwait
subl
adc
push
mov
lret
and
cwtl
rolb
sbb
or
xchg
ret
mov
sub
sar
enter
addr16
push
pop
jle
scas
and
in
sub
or
jno
xchg
sbb
int
fildl
mov
adc
xchg
or
xor
imul
prefetch
or
xor
mov
cmp
cli
mov
stc
je
mov
jmp
bound
ja
scas
sub
in
xor
stc
pop
jns
data16
cltd
dec
push
mov
dec
add
in
jo
mov
sahf
loop
and
add
testb
enter
xor
adc
pop
inc
leave
add
aas
fidivrs
stos
mov
jmp
dec
xchg
jp
loope
icebp
stos
and
int3
inc
das
inc
ret
mov
mov
imul
stos
push
and
xor
xor
pop
inc
add
mov
lods
js,pt
push
mov
std
adc
and
mov
bound
jbe
icebp
aaa
lea
shlb
mov
fwait
subl
mov
fiadds
aam
mov
sub
inc
ret
ss
push
lds
int3
das
enter
roll
push
cmpb
cmp
sbb
jecxz
sub
mov
mov
icebp
int
xor
ret
adc
cs
in
outsl
cmc
mov
sbb
adc
sbb
nop
cli
cld
es
imul
pop
fcomps
adc
jnp
jp
inc
add
sub
stos
test
in
sti
mov
or
shll
loop
out
lods
shrb
imul
lahf
mov
andl
loopne
out
stc
push
loop
mov
movsb
xor
idivl
pop
aaa
sub
inc
mov
inc
sarl
imul
cmp
jl
jnp
xor
jge
push
lcall
mov
adc
lret
add
call
add
jmp
mov
jg
sbb
or
mov
xor
dec
repz
adc
jae
daa
or
shr
pop
dec
jp
movsl
cmp
addb
mov
das
bswap
sbb
out
mov
add
das
lret
xor
xchg
stos
daa
lret
movsl
mov
imul
sbb
mov
pop
xor
xchg
dec
mov
lea
xor
push
mov
dec
mov
daa
andl
sub
xchg
loop
sbbb
mov
jge
popf
sub
insb
ss
int
push
fwait
jp
jge
jle
and
cmc
jb
and
es
pop
fisttps
xchg
or
jo
xchg
mov
loopne
test
cwtl
mov
xlat
cmp
jbe
mov
lock
mov
xchg
lds
sbb
and
jg
mov
adc
xchg
mov
ja
outsl
mov
push
push
mull
xchg
dec
pusha
inc
or
cmpsb
mov
outsb
int
sbbb
lods
cmp
rcrb
mov
jne
jl
out
cmp
into
xor
mov
test
pop
lret
scas
cmp
outsl
movsl
push
sar
dec
stos
and
sub
sub
cli
inc
in
imul
add
loop
sub
pop
test
cmp
push
imul
fs
sbb
sub
or
pushf
outsb
lret
out
xor
cmpsl
lahf
pop
pop
out
mov
mov
mov
std
dec
push
shll
xchg
add
leave
outsb
enter
test
or
adc
add
dec
dec
int3
cmpsb
notl
dec
hlt
cltd
into
pop
insb
and
push
xchg
scas
mov
jns
sahf
cld
ret
aad
lret
xchg
sarb
test
in
xor
enter
and
loope
xlat
pop
xchg
lahf
mov
clc
rorl
xor
push
daa
fnstcw
pminub
adcl
or
inc
or
or
mov
pop
movsl
or
xchg
mov
xor
cmp
mov
and
sti
cmp
xchg
mov
mov
dec
or
in
in
mov
xor
push
mov
push
jae
xchg
jge
adc
xor
and
xchg
sub
and
andl
repz
pop
cmp
leave
add
jl
inc
enter
test
add
sbb
jmp
shl
mov
dec
mov
aas
mov
mov
bound
sbb
arpl
push
nop
repnz
sahf
mov
xor
sub
ds
sbb
les
test
imul
aaa
cmp
inc
dec
mov
loopne
and
pop
and
dec
xor
aam
lret
adc
fiadds
mov
ret
loopne
cmpsl
lahf
xor
push
xchg
add
or
cmp
mov
aas
cmp
andb
dec
out
cmp
movsl
pop
pop
in
cmc
inc
push
int3
in
and
mov
insb
xchg
shlb
popf
jo
xchg
icebp
sub
mov
push
pop
mov
or
loop
dec
stc
pushf
test
pop
sub
xor
les
int
or
lret
imul
mov
xchg
cmp
add
scas
xchg
mull
je
out
mov
jae
inc
push
xchg
or
sahf
mov
aad
add
je
xor
scas
mov
imul
jp
daa
and
ror
mov
lcall
mov
jbe
sub
push
inc
inc
or
sub
test
icebp
movsl
inc
jns
add
inc
shlb
sbb
fcmovbe
adc
or
dec
and
inc
fdiv
aad
xchg
ja
dec
xor
mov
or
xchg
push
hlt
cmpsb
sub
adc
mov
outsb
inc
inc
cs
test
dec
and
jg
out
jb
push
xchg
jne
imul
cs
sub
add
add
dec
pop
inc
dec
add
subl
int3
add
lds
add
cs
std
stos
cs
and
mov
jecxz
sbb
fwait
out
icebp
push
inc
jle
sbb
inc
aam
add
ja
cmpsb
xchg
pop
xchg
xchg
dec
bound
fwait
es
push
jae
mov
test
popa
jbe
lock
jno
out
test
mov
std
data16
mov
xchg
pusha
movsb
mov
add
clc
jnp
jle
cmp
push
dec
imul
cmpsw
pop
fstps
pop
dec
subb
lods
mov
imul
or
mov
push
jo
cli
loop
mov
lock
fs
inc
xchg
sbb
push
push
movsl
test
outsl
xchg
out
adc
addr16
inc
sub
icebp
mov
jmp
outsb
xorl
dec
push
scas
push
mov
push
xchg
dec
sub
dec
sti
rcrb
or
movsb
ds
ljmp
roll
sahf
push
push
adc
bound
aam
stos
cmpsb
fcompl
dec
test
push
and
cmpsb
push
sub
jns
pop
test
and
xchg
int
sub
sbb
adc
insb
mov
push
dec
xchg
loopne
add
gs
rol
mov
lahf
mov
push
add
scas
dec
mov
rol
xchg
sarl
and
mov
inc
pop
inc
shrl
scas
mov
lahf
mov
cmp
mov
gs
out
xchg
xorl
enter
adc
test
lock
or
jb
pop
incw
xor
ret
icebp
sbb
mov
pop
jmp
push
pushf
fwait
mov
mov
mov
ja
or
jbe
fwait
mov
aas
lods
insb
pusha
adc
add
scas
adc
jne
fmuls
int
mov
clc
aad
push
stc
xor
imul
int
push
repnz
lahf
lods
mov
jge
sub
xchg
stos
inc
jns
mov
arpl
mov
xor
jp
cltd
inc
lods
push
mov
mov
jecxz
sbb
adc
jnp
test
mov
pop
dec
mov
enter
test
push
aam
mov
mov
or
ds
lret
mov
lahf
in
fdivr
jecxz,pt
cmpb
fidivrs
push
and
stos
or
xchg
test
push
xor
addr16
jae
push
mov
in
push
fimuls
pop
adc
out
loopne
mov
sarb
push
aad
dec
fistpll
inc
cld
mov
iret
cmp
pushf
lahf
xchg
shr
xor
mov
mov
or
aam
mov
jo
lds
cmpsb
jge
pop
pop
loope
jns
and
dec
stc
scas
aaa
dec
inc
mov
dec
out
pop
dec
je
rol
and
cwtl
shl
mov
jge
les
or
push
ss
outsb
ret
xor
loop
cmp
add
pop
fadd
mov
jo
arpl
xchg
into
xor
test
cmc
fmuls
cmpsb
popa
addr16
pop
xlat
jno
and
in
rol
jns
fxch
mov
sbb
add
call
cmc
pop
dec
in
inc
add
and
mov
outsl
ficoml
loopne
jno
cmp
roll
stos
mov
ret
xchg
cld
fsubrs
pop
xchg
je
daa
jl
call
stos
mov
mov
lea
fnsave
daa
test
hlt
or
jns
xchg
clc
faddl
aad
aad
dec
out
outsl
mov
xchg
cld
bound
aas
into
lods
jb
or
jg
sub
mov
mov
xchg
sub
push
mov
sub
sbb
push
lds
pushf
jp
lods
dec
fsubrp
lret
imul
jmp
mov
frstor
loopne
or
mov
cmp
int3
jo
pop
in
xchg
add
sub
or
push
insl
or
push
bound
bnd
mov
fcmovnu
push
mov
mov
jo
cltd
or
jl
push
aam
notb
jb
pushf
cmpsb
fsubs
pop
mov
call
mov
scas
lcall
push
dec
into
adc
movsl
push
lds
xchg
nop
sub
jbe
adc
or
sub
sbb
stos
mov
stos
adc
and
pop
xor
jp
add
ss
cld
or
ljmp
arpl
movsl
cmpsb
outsb
cmc
shrl
insb
rorl
outsb
sahf
push
sbb
adc
and
add
je
jno
cmp
inc
mov
and
xor
pop
cmp
pop
jg
mov
adc
loope
pop
inc
loope
out
xchg
loopne
sahf
jle
jp
xchg
mov
mov
enterw
ss
or
cmpsb
add
cmp
inc
cld
pop
mov
and
pop
dec
out
cmc
adc
cld
in
sbb
push
leave
mov
dec
outsb
push
outsl
pop
pop
xor
stos
lahf
cmp
in
push
sub
data16
mov
lea
orb
lea
in
cmpl
sbb
addr16
fs
fdivrs
inc
and
dec
jbe
xor
xchg
push
mov
mov
enter
leave
mov
sub
pop
and
negl
inc
mov
add
mov
dec
push
imul
add
mov
in
mov
and
test
fldcw
pop
icebp
inc
jp
in
jns
pop
or
xchg
pop
mov
lret
and
sbb
xchg
dec
xor
fisttps
xor
fs
jbe
mov
mov
and
insl
mov
aaa
lahf
in
movsb
std
mov
mov
insl
sbb
sub
je
in
jne
push
xor
sub
push
mov
jno
or
jmp
subl
jno
repz
mov
push
sub
enter
rorb
not
inc
mov
mov
mov
inc
ds
xchg
push
movsb
and
std
enter
setl
mov
mov
jb
adc
push
das
ljmp
inc
push
popf
mov
pop
mov
dec
sbb
aad
int
jecxz
rep
dec
or
les
loopne
je
call
mov
imul
mov
shrb
gs
cmp
jbe
xchg
inc
xchg
mov
out
lret
pop
iret
leave
ja
inc
and
add
sti
lds
pop
adc
push
out
insl
sbb
xor
cmpsb
xchg
lret
inc
stos
dec
lahf
std
hlt
adc
les
jp
xor
hlt
inc
mov
addl
ficomps
popf
mov
jp
cmc
popa
jno
popf
inc
cmpsl
mov
in
stos
ljmp
dec
lahf
stos
je
fst
stos
clc
lods
ss
sub
insb
nop
and
pop
lahf
imul
add
addb
dec
or
and
jl
scas
rol
stos
leave
jmp
xchg
pop
and
pop
mov
shl
xchg
mov
cwtl
fnsave
pop
or
dec
popf
dec
or
ret
cmpsb
in
add
pop
or
xchg
scas
inc
adc
bound
iret
sahf
pop
pop
frstor
mov
and
adc
fs
jns
add
fcoms
pop
or
inc
ud0
fwait
shl
loop
mov
mov
mov
mov
xchg
cmp
hlt
push
int3
and
mov
stos
movsl
jle
insb
mov
cmp
call
sahf
lret
or
add
int
add
out
cmp
push
loope
adc
jle
mov
adc
orb
aad
jge
ja
movsb
fs
dec
push
jmp
jbe
fwait
jge
mov
daa
shrl
loope
sbb
mov
mov
and
push
nop
sbb
mov
out
aas
adc
lahf
push
mov
out
mov
rorb
mov
cmpl
mov
inc
or
mov
aad
lret
mov
js
iret
push
and
outsb
mov
jbe
lret
inc
xchg
mov
push
and
dec
xor
xor
aam
stos
fidivrl
push
mov
sbb
stos
das
sbb
xchg
push
lock
cmp
mov
or
outsl
fstl
bound
sbb
icebp
sbb
into
dec
inc
mov
js
sbb
andl
push
in
dec
adc
add
and
jns
jb
jge
cmp
xorl
push
lahf
dec
cli
fistpl
gs
xor
xchg
ret
es
enter
call
pusha
jo
clc
xor
mov
push
cmpsb
or
cmp
and
mov
and
rcrl
push
mov
aaa
bound
lcall
jae
int
loopne
adc
and
imulb
in
fstpt
faddl
addr16
rclb
insb
test
mov
jb
pop
sti
cmpsb
adc
iret
lock
mov
sbb
xchg
lock
xlat
or
mov
in
out
jg
adc
xchg
pop
mov
mov
pop
cmp
jns
push
or
jg
jge
outsb
cli
test
mov
mov
scas
push
cmp
push
in
inc
dec
jge
clc
insl
sub
mov
lret
xor
pop
incl
shlb
and
cmp
mov
cmc
arpl
outsl
cmpsl
mov
mov
lret
xchg
pop
xchg
jge
repnz
push
pop
lds
popf
nop
mov
arpl
es
or
inc
je
sahf
bound
lcall
push
sbb
mov
sub
insb
stos
jg
sbb
insl
mov
lods
dec
mov
mov
clc
jl
je
aam
jmp
push
xor
cmp
dec
les
add
jl
mov
push
sub
insb
add
jmp
icebp
pop
jl
mov
xor
dec
sub
pop
cmpsl
dec
push
sahf
fwait
xor
xchg
pop
imul
stos
dec
stc
fidivrs
sub
dec
sahf
jno
cmp
hlt
push
xlat
addps
dec
xor
enter
sbb
nop
ss
push
mov
xchg
sub
cmpsl
je
mov
std
nop
adc
and
push
shll
sti
mov
mov
push
leave
stos
in
jl
mov
sbb
adc
push
or
inc
jmp
mov
mov
dec
in
lods
cli
inc
faddl
add
mov
inc
adc
jae
imul
mov
xor
outsl
test
lahf
shl
mov
cmpsb
sbb
add
mov
and
cli
add
push
xchg
jmp
stos
sub
push
and
inc
in
push
in
jnp
testl
or
xlat
leave
pop
je
sbb
nop
mov
pop
loop
lahf
jo
sub
jle
pop
mov
fcmovnu
or
aad
imul
loop
dec
mov
decl
jge
aad
or
xchg
mov
lcall
outsb
add
in
pop
int3
mov
add
jmp
xchg
adcb
push
movsb
adc
repz
cmp
xor
or
cli
inc
divl
inc
gs
daa
and
push
negl
add
dec
shrl
cmp
inc
or
cmc
stc
push
mov
dec
and
sarb
les
pop
iret
xchg
push
push
jns
mov
jl
push
push
sub
xchg
out
cmp
hlt
pop
lret
loop
jns
lods
sbb
mov
jp
imul
clc
xor
mov
cmp
mov
cmp
pusha
push
jo
adc
pushf
or
cmpsb
cli
push
push
dec
pop
jo
repnz
and
jns
pcmpgtd
dec
roll
dec
dec
cmp
dec
int3
imulb
orl
in
out
inc
rep
pop
jno
and
insl
movsb
repz
fwait
add
xor
pushf
push
out
pop
xchg
sub
test
xchg
pop
push
xchg
jno
lret
loop
pop
dec
insb
xor
and
cli
mov
mov
cmp
stos
in
cs
jg
aam
xchg
int3
jae
and
out
xchg
cmp
aad
mov
fsubr
push
adc
fstps
ficomps
sub
jno
mov
movsl
inc
fimull
arpl
push
ret
dec
cwtl
xor
into
jp
xor
movsl
mov
xchg
pop
loopne
jne
xchg
mov
je
pop
repz
inc
cmp
sahf
outsl
ja
push
into
sbbl
adc
mov
cmp
sbb
stos
sahf
loop
or
mov
std
cmpsb
jl
insl
jne
movsb
fistpll
pop
mov
ret
push
adc
jge
dec
mov
cwtl
jbe
dec
mov
ret
xor
push
mov
xorb
mov
and
sbb
sti
pop
stos
inc
je
fs
mov
sbb
mov
pop
ret
aas
fldenv
and
push
outsb
test
mov
lcall
lea
pop
dec
ds
cwtl
cli
sub
xchg
jecxz
lret
loop
scas
cmp
imul
push
ftst
or
mov
cmp
inc
push
sub
loopne
cmp
mov
push
dec
jmp
adc
shl
cli
push
jmp
ja
testl
mov
popa
out
xor
or
xchg
and
clc
xchg
pop
xorl
xchg
stos
rcl
rolb
mov
stos
fildll
cmp
das
imul
xchg
jp
pop
mov
and
repz
sbbl
dec
pusha
movaps
andb
pop
adc
and
jne
or
ds
sub
pop
sbb
adc
andb
xorb
push
mov
add
adc
cmp
or
mov
mov
icebp
sub
daa
loopne
pop
mov
int3
push
push
hlt
int
aad
cmp
and
mov
mov
data16
and
insb
inc
fwait
mov
mov
out
push
enter
stos
and
aas
adc
pop
adc
add
stc
push
test
popa
mov
movsb
cmp
data16
add
fsubrp
mull
stos
in
inc
and
addr16
push
clc
test
push
je
imul
dec
stos
and
ja
dec
mov
lahf
into
test
sahf
push
sub
pop
std
das
dec
into
mov
mov
and
mov
jge
push
in
pop
movsl
and
mov
mov
mov
dec
mov
out
and
loope
pop
xchg
push
insb
mov
xchg
inc
stos
or
mov
mov
cmp
lahf
adc
aaa
fstpt
ljmp
js
inc
xor
sub
outsl
pop
aam
movsl
push
lods
adc
sub
adc
dec
dec
sbb
and
adc
xchg
out
inc
xchg
and
adc
add
sbb
pop
in
leave
je
dec
outsb
imul
jo
div
mov
scas
jns
fdivp
mov
das
cltd
xchg
movsb
out
in
cld
mov
or
les
loop
push
scas
rolb
xor
test
arpl
aas
push
inc
jb
inc
popa
insl
xchg
push
push
dec
sti
inc
pop
or
or
int
cli
pop
call
stos
popa
jecxz
faddl
cld
fwait
dec
jb
mov
ss
inc
lret
dec
push
adc
pop
test
pop
inc
testb
sub
insl
adc
xor
mov
out
lret
rolb
and
mov
mov
sbb
into
cmp
mov
xlat
les
and
dec
mov
jl
arpl
sbb
in
cmp
cmp
sub
xor
cltd
stc
mov
cltd
push
push
mov
or
mov
cmpsb
mov
or
inc
dec
or
lcall
call
nop
inc
xchg
dec
movzwl
mov
adc
push
and
arpl
shll
add
out
inc
xchg
cmp
push
jne
xor
push
je
dec
sbb
sbb
sub
mov
aaa
test
xchg
outsl
push
jge
mov
xchg
jl
push
inc
sbb
loop
inc
adc
call
mov
arpl
xor
mov
xchg
dec
xchg
sbb
pushf
adc
ffreep
pop
push
xor
pop
dec
push
loopne
inc
insb
daa
insl
pop
adc
sti
pushf
out
mov
cli
mov
inc
dec
mov
insl
push
outsb
cmp
add
outsb
mov
pusha
insl
mov
push
mov
jne
icebp
test
repz
mov
in
push
sub
insl
out
mov
inc
dec
push
pop
mov
or
mov
sub
andl
mov
push
or
adc
les
jne
or
or
ds
adc
stc
ret
lahf
sbb
shll
adc
rcll
jns
pushf
jb
mov
xor
lods
aas
sub
inc
pushf
faddl
push
adc
push
int
mov
mov
push
cli
movsb
mov
std
push
mov
iret
add
lods
fistps
stos
mov
pop
push
fldenv
fnstsw
mov
ret
cli
jno
jmp
cmc
fwait
je
test
int
andl
dec
pop
mov
icebp
daa
inc
mov
fs
ss
sub
inc
fdivrs
ja
aam
inc
mov
and
ret
popf
nop
movsb
mov
fldl
pop
cmp
gs
mov
xor
jle
mov
out
stos
jmp
pop
push
sarl
add
jl
std
jns
inc
push
test
fwait
mov
fldenv
mov
cmp
push
add
nop
dec
in
icebp
movsb
out
addl
adc
xor
mov
sti
std
arpl
cmpsl
mov
xchg
push
adc
pop
pop
popf
pminsw
push
sub
mov
dec
mov
jbe
loope
les
lret
inc
icebp
lods
dec
add
or
mov
add
jge
add
xor
cmp
cmp
add
test
loop
cltd
lret
or
imul
add
out
mov
sbb
jae
callw
xchg
shll
dec
test
inc
sub
mov
out
jne
or
mov
add
sub
xchg
sub
jae
xor
repz
sbb
pop
mov
or
sub
cmp
inc
int
ror
in
xchg
xchg
outsb
int3
mov
pop
mov
outsl
xchg
dec
bound
mov
repnz
bound
push
aam
push
lahf
xor
sbb
scas
add
test
dec
or
not
dec
or
pop
mov
xchg
dec
lret
iret
outsl
xchg
mov
pop
in
xchg
or
arpl
mov
inc
dec
repz
test
sbb
scas
fmul
enter
inc
cmpsl
mov
call
jp
ret
cmp
mov
sbb
or
jnp
test
sub
test
lahf
inc
aas
daa
lahf
dec
aas
xor
push
in
xor
cs
lret
sbb
inc
mov
insl
gs
xchg
xchg
rolb
add
into
fstl
inc
xor
pop
jno
int
xor
push
fadd
mov
add
pop
jl
je
mov
lds
inc
fmull
shlb
lods
fidivrl
mov
adc
pop
inc
push
and
icebp
sahf
repnz
int3
cmpb
jne
mov
addps
xlat
and
xcrypt-cfb
cmpsl
daa
adc
xchg
mov
ja
mov
jns
push
sub
fucomp
cmp
xchg
pushf
pop
or
or
push
sti
push
push
out
xchg
cmp
or
xlat
ja
jo
aad
mov
sbb
sbb
jp
nop
pop
out
cwtl
hlt
sub
popf
pop
xchg
xor
xchg
cld
sub
in
cli
adc
xlat
lods
cmpsb
ret
stc
sbb
lgs
test
sti
cmp
ss
xchg
stc
jecxz
adc
mov
cmp
cmp
mov
and
xchg
inc
push
mov
jg
mov
jae
or
pop
aaa
jmp
in
lds
or
cmpsb
int
lcall
mov
sub
mov
ljmp
fwait
or
add
xchg
xchg
or
mov
push
sahf
ds
pop
xor
xchg
dec
and
inc
sbb
lock
push
mov
mov
jg
cmp
jae
xor
mov
dec
movsb
jnp
movsb
add
adc
ja
test
push
jmp
sbb
lods
mov
mov
push
mov
movsl
bound
test
jge
mov
add
hlt
add
xchg
and
add
pusha
lret
pushf
add
scas
scas
aaa
sub
test
shl
iret
jmp
adc
add
add
mov
aad
gs
adc
xchg
jns
insb
xor
in
aas
xchg
and
ljmp
cmp
cmpsl
andb
or
inc
mov
push
pushf
xor
dec
add
and
movsb
sbb
ss
mov
arpl
nop
fs
mov
push
jbe
cmc
sbb
add
pop
inc
lahf
sbb
xchg
jo
test
pop
jbe
dec
push
mov
sbb
cld
push
icebp
cmp
cwtl
in
jge
into
out
adcl
scas
mov
outsl
cltd
sti
inc
xor
mov
xchg
fnstsw
inc
popa
xchg
stos
mov
nop
cli
sub
test
stos
sbb
xchg
or
jnp
and
flds
sub
pop
fsubs
notb
ret
and
inc
stc
mov
into
sub
inc
or
scas
pop
pushf
in
lret
mov
mov
loop
push
add
bound
jns
xchg
scas
ss
adc
test
push
gs
pop
add
aas
ja
int3
insl
jmp
cmc
sub
cmc
cmp
rolb
xchg
mov
fstps
int3
out
adc
aam
sub
or
stos
add
scas
and
cli
test
mov
jno
mov
mov
insb
mov
or
scas
mov
out
outsl
mov
lds
out
movsb
mov
mov
das
jle
in
sbb
lods
mov
mov
push
dec
movsl
jno
sub
add
mov
mov
stos
insl
sbb
out
ret
ja
repz
xchg
inc
fs
cwtl
dec
jp
adc
nop
shll
pop
dec
pushf
pop
mov
mov
je
and
fistps
and
xor
mov
sub
sahf
pop
hlt
xchg
and
sbb
add
in
rcll
int
in
sti
xor
adc
add
cmpsl
mov
mov
cmpsl
push
stos
icebp
or
pop
pusha
popa
sbb
or
int
xor
push
rol
outsb
cmpl
or
jno
sub
pushf
xlat
into
cmpsb
pop
sbb
ljmp
push
out
cmpsb
push
daa
push
jmp
add
xchg
sbbl
test
ss
jle
sbb
cmp
push
into
cs
icebp
cmp
in
sbb
lea
wbinvd
cwtl
out
push
push
pop
fcoms
cmpsb
sbb
mov
js
mov
scas
mov
pop
mov
rcll
and
jmp
out
fbld
inc
push
adc
pop
fildll
mov
xchg
sub
and
popa
pop
push
in
stos
adc
cmp
movsb
std
pop
add
das
inc
push
pop
xchg
das
xchg
and
pop
pop
mov
call
mov
iret
jmp
imul
fmul
push
inc
outsl
inc
dec
ret
mov
fwait
repz
je
fistpl
lds
xchg
sbb
push
popl
rol
and
jmp
punpcklwd
shrl
sbb
sahf
mov
ret
decl
rorb
ljmp
scas
out
push
iret
loope
push
mov
jecxz
push
adc
sub
cmpsb
jmp
adc
pop
repz
xchg
add
mov
or
jae
add
imul
data16
mov
mov
ret
inc
scas
adc
shll
popf
lcall
mov
scas
pop
fsubs
in
scas
adc
rcrb
jmp
xor
add
jae
out
inc
lock
xchg
or
mov
out
movsl
push
aaa
shlb
sbb
jns
sub
jae
testl
lret
and
push
es
add
addps
add
fdiv
adc
dec
out
js
iret
loop
ror
cmp
adc
mov
mov
or
push
xor
cmp
or
fs
cmp
imul
arpl
jne
insl
les
das
mov
or
mov
loopne
jbe
ret
movsb
sub
inc
add
cmpsb
jmp
mov
lret
inc
ret
bound
lods
inc
xor
pop
push
hlt
jl
popf
mov
cltd
shl
js
into
test
das
add
or
enter
mov
sbb
pop
repnz
pop
insl
sbb
scas
aas
mov
paddb
fiaddl
lret
shrl
pop
lahf
push
filds
in
jnp
push
insl
rcrb
xchg
enter
outsb
jne
xorl
mov
lahf
or
push
loope
sbb
dec
lods
shrb
mov
mov
jecxz
int
fcmovbe
fisubrs
jg
sub
mov
ds
push
ljmp
mov
adc
push
dec
out
xor
fs
adc
addb
jl
aad
repz
aaa
inc
sbb
bound
inc
mov
lods
cmc
inc
and
push
pusha
daa
out
sbb
inc
adc
stos
imul
cltd
dec
adc
xchg
push
xor
mov
loop
jle
pusha
inc
mov
jo
inc
jb
outsb
xrelease
pop
jnp
cmp
fldl
xchg
lock
cmpsl
and
lcall
push
dec
rcrl
movlps
jae
and
iret
sub
iret
jecxz
lea
dec
xor
jl
inc
cltd
mov
cmp
iret
push
adc
enter
div
jno
leave
sbb
and
pushf
xchg
repnz
lods
insb
inc
lds
les
add
rcr
or
adc
xchg
incl
lods
jmp
bound
mov
and
lods
in
jge
mov
mov
ficoms
xchg
scas
jmp
xor
cmpsb
adc
mov
or
rcrb
fwait
sbb
or
loope
fidivl
inc
pop
stos
call
shlb
jmp
lret
push
cmpsl
push
shlb
cmp
ja
ja
insb
js
pop
mov
enter
adc
xchg
mov
xchg
mov
sbb
sub
lock
popf
xchg
push
xchg
movsl
add
jnp
xchg
xor
hlt
stos
jnp
and
outsb
sub
aad
je
stos
into
fcoml
jnp
loopne
dec
pop
rcrl
xchg
mov
push
mov
fistl
sbb
sub
mov
mov
call
andl
and
out
data16
xor
xlat
cltd
pop
cmp
adc
mov
testl
imul
jns
inc
iret
les
mov
dec
in
cmc
fs
and
xchg
jo
stos
mov
lods
leave
rcll
jo
sarl
or
mov
sbb
mov
add
or
adc
mov
aam
movsb
push
shll
mov
js
idiv
push
out
out
xor
push
pop
push
outsb
in
int
dec
cmpsb
jmp
cmp
int3
pop
add
and
pusha
test
cli
fwait
dec
adc
out
jmp
xchg
mov
out
sbb
push
mov
mov
lcall
inc
sub
test
out
cmc
call
hlt
xor
iret
lret
stos
sub
fadds
insl
dec
sbb
or
sub
or
mov
std
das
js
js
std
dec
lock
mov
ss
scas
and
or
outsl
mov
sub
inc
or
push
sbb
arpl
push
push
xorl
ret
in
fmull
rolb
sub
aas
and
xlat
push
fisttpl
push
ja
jmp
mov
mov
out
or
pop
fs
and
int3
mov
fcomi
jecxz
fsub
shr
sbb
mov
adc
lret
inc
jge
stc
push
orb
inc
xchg
cmp
out
hlt
shlb
jp
xchg
dec
jne,pt
test
mov
pop
dec
sbb
mov
adc
or
add
or
jbe
xor
jecxz
pop
xchg
das
xor
js
mov
bound
sbb
xchg
into
mov
sbb
push
cmpsl
out
dec
jmp
xor
xchg
sbb
inc
adc
push
add
jle
rcr
test
fucom
push
mov
cmp
sbb
dec
mov
jl
or
xchg
test
jne
in
mov
or
daa
sahf
xor
sti
mov
or
fchs
mov
insl
ja
push
xor
cmp
cli
jns
cmp
jge
xor
jecxz
jp
mov
fldt
mov
mov
lahf
mov
jp
xchg
xchg
jl
fwait
push
xlat
aas
mov
divb
mov
and
xchg
xchg
sar
add
or
inc
mov
pop
popf
das
or
xchg
cwtl
xorb
mov
fistpll
adc
cld
push
jno
jo
jecxz
push
and
loope
sub
fisubs
sbb
push
add
mov
mov
xchg
sub
add
popa
sahf
scas
push
das
xchg
xchg
cmc
lcall
bound
ja
lods
adc
mov
and
xor
testb
addr16
bound
in
fs
mov
int3
mov
pop
cmp
fsubrl
jb
aam
cmp
shll
dec
mov
sbb
cmp
ljmp
insb
mov
test
daa
movsl
inc
gs
sub
mov
sub
popf
mov
das
add
mov
mov
sbb
je
scas
sbb
xor
inc
ret
cmp
fcmovne
pop
xchg
and
and
testl
jno
jge
mov
cmp
outsl
jecxz
rorl
mov
lods
arpl
sub
jae
jmp
and
and
lret
imul
add
add
mov
dec
icebp
jnp
inc
inc
in
adc
cmpsb
arpl
jae
xchg
stos
outsb
imul
sahf
cmp
mov
inc
jge
loopne
fsubrp
push
jbe
scas
sub
mov
pop
ss
jp
and
shlb
ja
pop
dec
pop
fwait
jmp
stos
outsl
mov
xchg
fsub
out
data16
sub
mov
xor
std
mov
pop
imul
ja
sub
pop
and
std
sahf
fwait
xchg
sub
inc
movsb
sti
jo
dec
sti
mov
loope
and
sub
clc
je
dec
insl
pop
xlat
push
out
std
jbe
adc
ljmp
adc
ret
xor
out
jg
icebp
mov
jp
fistpll
bound
insb
lret
add
pop
inc
prefetch
in
pop
aaa
mov
xchg
sahf
jl
insb
mov
mov
test
lcall
outsl
scas
mov
push
push
popf
lods
fsubl
enter
push
cld
pop
fsubrl
push
jb
aad
imulb
sub
jae
push
mov
dec
stos
adc
std
cmc
imul
clc
or
xor
in
cltd
adc
cli
sbb
mov
aas
jb
inc
ja
movsb
aas
fadds
push
push
fwait
int3
shl
lcall
inc
dec
cmp
js
orl
in
jns
mov
jns
push
xor
shrb
push
ret
add
xor
push
jl
or
mov
sub
shlb
pop
and
push
pop
xlat
xchg
xor
jmp
xor
sub
pop
imul
psllw
xor
xchg
lods
push
dec
ud2
mov
cmp
fistpl
fidivl
push
mov
ljmp
mov
or
bound
out
push
inc
in
or
push
lods
mov
in
adc
pushf
dec
fisubl
pop
push
cmp
mov
pop
sub
cli
pop
cmpsb
add
ja
les
or
jecxz
ret
adc
repnz
push
in
mov
mov
adc
add
push
mov
or
xchg
sub
xchg
jb
fbstp
aad
or
fsubrl
or
cmp
in
push
sti
mov
add
insl
push
push
sbb
call
jmp
insb
pushf
int
aaa
inc
cli
aad
ret
ret
mov
push
sub
aad
lea
mov
jmp
lret
fsubs
ds
inc
daa
imul
jbe
aam
add
test
and
push
mov
and
xchg
or
sub
fstl
fadds
xlat
push
loopne,pt
jle
dec
xchg
into
mov
imul
pop
test
jne
pop
pusha
push
sbb
shrb
out
outsb
push
mov
dec
les
imull
pop
or
adc
mov
xlat
pop
sbbl
lea
xor
mov
jp
or
adc
daa
add
decl
dec
ret
add
fsubs
cld
punpckhwd
fsubrs
and
popf
movb
fdivrp
jle
xchg
int3
cmp
out
iret
push
xchg
sub
xchg
adc
add
push
out
in
push
jmp
inc
dec
sub
test
pop
adc
jl
sbbl
cs
jbe
push
xchg
mov
iret
movsl
xchg
jb
cmpsb
inc
push
sbb
pop
daa
stos
mov
jno
jg
andl
aas
push
sahf
clc
sbb
and
inc
mov
stos
sbb
scas
xlat
andl
xchg
orl
aaa
jmp
mov
out
std
and
push
sub
xor
and
and
cmp
ficompl
dec
ds
fistpll
push
fnstenv
pusha
xchg
xlat
push
mov
ret
dec
jl
popa
lret
out
xor
or
push
js
ljmp
cmp
testl
aaa
inc
out
mov
jmp
xorb
inc
mov
movsl
test
gs
fisubl
fcomp
out
in
dec
ljmp
dec
and
inc
loope
test
lods
mov
pop
jg
mov
inc
fnsave
aas
jbe
sub
mov
add
sub
jmp
aad
shlb
rorb
jge
ljmp
loop
js
test
ss
shll
cmpsl
pop
sub
int
push
daa
outsl
lds
or
out
mov
mov
into
cmpsb
test
insb
xor
insb
das
enter
and
cmp
daa
sbb
cwtl
mov
fcoms
fisttpl
jl
or
inc
xor
cld
mov
dec
lret
sahf
call
push
movl
push
sub
mov
out
adc
enter
out
inc
mov
inc
push
in
jmp
pop
cmc
push
inc
clc
lock
push
mov
cmp
je
outsb
pop
mov
mov
inc
xchg
loop
icebp
xchg
dec
sub
jae
test
dec
scas
dec
jecxz
nop
imul
in
pop
loop
cli
enter
cmp
dec
fmull
mov
jns
jnp
xor
imull
or
pop
fisubl
je
inc
aas
xor
lret
mov
xlat
js
or
dec
ret
xchg
hlt
fisubrl
push
in
mov
cs
pop
adc
sbb
pop
in
add
sub
gs
outsb
mov
test
mov
lods
xor
cld
cmc
cwtl
sub
iret
dec
adc
mov
mov
int
mov
adc
stos
jecxz
xor
pushl
addr16
in
mov
ss
into
orb
repz
ja
push
mov
test
or
xchg
mov
cmc
add
add
xor
bound
push
dec
sbb
out
and
scas
out
outsl
into
inc
outsb
lods
and
ret
adc
test
push
loop
loopne
sub
xchg
jnp
mov
xlat
dec
ds
mov
scas
jecxz
in
lea
cmp
xor
or
xor
lahf
cld
xchg
mov
scas
daa
lahf
and
mov
sti
out
push
ret
std
ljmp
inc
outsb
jno
ljmp
addl
inc
inc
sbb
outsb
push
sbb
das
or
xor
adc
sub
add
add
test
ljmp
jmp
lret
ljmp
and
divb
jne
loop
fbstp
aaa
test
bound
subl
enter
cmp
repnz
pop
dec
iret
sub
jbe
insl
ret
lea
imul
add
outsl
or
fiadds
fcmovbe
inc
push
adc
mov
inc
push
xlat
xchg
or
lret
aam
jno
pop
fildl
fsubs
push
sbb
cltd
push
insb
pop
aaa
lret
mov
pusha
loop
ret
inc
fdivrs
pop
orb
sbb
cwtl
sub
fidivrl
fisubrl
stos
mov
mov
movsl
repz
out
shrb
leave
iret
pop
sarl
cmp
getsec
ss
add
ja
in
pop
mov
mov
sub
imul
repz
jecxz
inc
xor
add
in
movsl
cli
nop
leave
test
inc
loopne
push
mov
test
xor
leave
pushf
and
jg
sahf
vpand
inc
inc
push
and
xchg
int
xchg
loopne
dec
dec
xor
xchg
out
jmp
sbb
rclb
js
and
fbstp
and
jg
ss
adc
pushf
pop
dec
pop
push
push
mov
inc
sub
rolb
or
push
adc
hlt
ss
lahf
dec
mov
addb
cmp
imul
sbb
jp
inc
movsb
aad
pop
mov
cmp
in
flds
pusha
mov
cld
outsl
iret
mov
pop
in
add
adc
cmpsl
in
cli
jg
icebp
jg
adc
in
mov
jle
lcall
xchg
adc
sbb
dec
add
cmpsl
inc
add
stc
popl
cli
inc
adc
adc
cmpsb
and
and
icebp
xor
outsl
jnp
fnstsw
in
xor
pop
scas
cs
lcall
xchg
pop
imul
sbb
jne
inc
sbb
xchg
pop
cld
icebp
jle
cmpsl
popl
repnz
dec
lods
sub
push
jge
push
lret
aad
shll
clc
test
mov
mov
dec
std
lods
repnz
cs
loop
insl
push
stos
push
lcall
mov
xor
push
xchg
ss
adc
dec
call
fildll
push
nop
inc
stos
out
sti
not
xchg
or
jno
push
add
popf
iret
push
arpl
decb
push
cmp
es
in
cld
movsb
outsl
clc
xor
push
cli
fsts
or
dec
testl
inc
xchg
adc
iret
cld
and
and
adc
std
inc
pop
mov
test
or
into
rorl
out
xor
jns
pop
add
rorl
cmp
sar
ljmp
or
lcall
jbe
mov
loop
push
jmp
dec
sti
pop
aam
jo
adc
xchg
xor
lods
testl
inc
stc
fldt
xor
xlat
or
data16
hlt
or
js
enter
pusha
cmpsl
enter
pushf
lret
sbb
xchg
lods
lods
cmp
and
add
jl
mov
xchg
into
je
push
pushf
push
loop
adc
lret
jne
mov
shrb
popf
fbld
std
sub
pop
test
xchg
add
sub
lcall
jl
add
and
mov
pop
xor
inc
mov
test
pushf
cmp
xlat
mov
mov
icebp
jnp
clc
jecxz
mov
mov
inc
mov
je
adc
cmp
adc
arpl
enter
aaa
xchg
mov
inc
data16
ss
lods
inc
xchg
stos
pop
rcrl
xchg
dec
fisubl
mov
or
imul
testl
adcl
mov
popf
sbb
cltd
in
push
insl
pop
mov
mov
mov
popf
add
dec
pop
pusha
subl
movsl
call
jo
pop
cmc
sub
mov
push
mov
dec
sti
lock
sbb
push
hlt
rcrb
subl
mov
and
adc
xlat
pop
pop
xchg
shl
xor
adc
outsb
in
sbb
fwait
pop
scas
popa
inc
mov
pop
aas
xor
adc
cwtl
cmc
sti
jno
rorb
enter
and
out
cmp
clc
jb
pusha
and
mov
cmp
dec
leave
ja
mov
or
xor
mov
or
adc
adc
pmuludq
jae
cltd
fisubrl
push
das
pop
fimuls
in
dec
and
fdivr
push
jle
push
data16
xchg
or
sbb
fstpt
push
xchg
test
xchg
insb
fdivr
cmp
jnp
add
push
out
mov
jnp
fnsave
fbstp
pushf
addr16
mov
popa
arpl
xchg
sub
jg
hlt
stc
adc
mov
loop
in
jl
inc
lret
fs
test
fidivl
pop
dec
lods
push
sub
lret
mov
ret
adc
sahf
inc
lret
mov
xchg
mov
mov
cmpsl
flds
lahf
mov
cltd
hlt
pusha
jl
ja
mov
fwait
iret
cld
jmp
aas
sbb
fdivrl
jl
mov
or
pop
ljmp
dec
inc
inc
mov
fucomi
xchg
scas
or
dec
dec
loope
das
add
lock
push
sbb
sub
or
push
inc
in
or
jp
pop
xchg
push
mov
pop
dec
or
test
xchg
pushf
jle
or
xchg
push
mov
daa
jns,pt
lret
mov
jmp
or
mov
xchg
or
loop
movsb
shrl
push
stos
adc
hlt
shl
jns
out
cmp
push
dec
cli
rdtsc
dec
mov
sub
arpl
push
sbb
xrelease
and
aas
das
arpl
cwtl
xchg
mov
or
cmc
ja
add
call
xchg
dec
stos
fiaddl
mov
push
sbb
mov
push
xchg
stos
xchg
jecxz
ss
pop
mov
dec
xchg
cltd
fidivrl
leave
test
xor
js
jecxz
leave
gs
or
scas
pusha
fnstsw
jnp
sbb
mov
mov
adc
movsl
iret
sbb
inc
movsb
sbb
push
test
jns
xchg
dec
bound
inc
loopne
xchg
aad
cwtl
in
adc
adc
in
ret
push
adc
shll
fisubs
pop
lods
and
rep
dec
mov
xor
ljmp
dec
mov
lods
mov
cmp
adc
adc
in
or
dec
inc
sub
add
imul
jns
test
mov
mov
sti
or
insl
fdivl
ret
testl
pop
rol
dec
fcmovb
pop
loopne
sub
sbb
nop
int
jp
nop
daa
push
cmp
cmp
inc
fistps
iret
ror
sahf
test
jae
outsb
jge
mov
mov
fs
scas
push
push
lea
in
gs
imul
mov
fyl2x
rclb
in
scas
repnz
rclb
mov
out
adc
xor
int
mov
add
pop
cmp
mov
sub
jo
in
xchg
mov
mov
popa
daa
ds
mov
jp
and
or
or
lods
pop
leave
mov
and
jge
mov
daa
jp
sbb
faddp
mov
fimuls
pop
gs
sub
les
mov
jne
mov
mov
push
roll
dec
ljmp
ljmp
data16
mov
push
jmp
and
pop
xchg
mov
or
jne
dec
xor
loop
or
adc
mov
fcomi
outsb
mov
push
mov
push
adc
mov
int3
jp
push
jno
out
pop
jno
cmp
jb
jae
inc
xchg
cmp
and
mov
std
in
xor
mov
test
jnp
adc
cmp
cmp
jp
iret
cmpsl
mov
in
inc
aam
mov
hlt
ret
imul
out
push
mov
rcl
xchg
imulb
and
ret
fbld
push
shll
pusha
push
pop
dec
test
cmpsl
mov
push
sub
push
adc
ret
cmc
xor
insb
dec
jmp
cwtl
mov
xchg
out
int
adc
or
outsl
ffreep
and
les
mov
sti
subl
mov
ljmp
fcomi
pop
mov
cmp
stos
jp
les
jg
add
cmp
daa
sub
jg
stc
mov
mov
push
mov
inc
std
int3
rcll
xchg
int
js
aas
pop
repz
call
lods
xchg
jns
jmp
sub
mov
xchg
lea
push
lret
mov
fisttps
inc
test
pusha
jb
popf
mov
xchg
aas
push
push
in
test
adc
sbb
inc
mov
shrl
pop
lcall
mov
sub
push
sbb
cmc
jno
cld
add
add
xor
add
shrb
mov
mov
pushf
leave
xor
jmp
cmp
into
or
mov
rcrb
add
neg
ss
mov
stc
mov
sub
repz
adc
mov
jp
popf
and
or
repz
outsl
outsl
sub
dec
out
or
test
ds
cmpsb
add
cmp
sbb
inc
cmp
jbe
lds
jp
add
xchg
dec
xchg
ror
jmp
cltd
lods
mov
imul
lock
pop
es
test
popa
mov
lahf
xchg
pusha
sarl
pop
sbb
xchg
fs
push
aas
dec
lods
dec
mov
xchg
xchg
mov
xchg
lret
xor
sbb
pop
mov
jmp
in
dec
jl
mov
in
mov
ds
push
icebp
mov
jbe
ja
andl
add
push
push
lret
cltd
sbb
sub
dec
adc
test
sub
mov
fidivs
add
jp
dec
lea
xchg
lret
ret
adc
pop
mov
cmp
leave
add
mov
int3
and
mov
pushf
in
int3
int3
cmpl
add
fstpl
adc
mov
clc
xchg
test
or
sub
outsb
xchg
inc
lcall
ffreep
fwait
mov
push
jnp
pop
mov
iret
imul
pop
cmpb
mov
push
aad
add
mov
stos
dec
xor
jns
mov
mov
adc
pop
and
fwait
mov
mov
cwtl
add
jbe
aad
adc
das
jno
push
inc
inc
push
cmpsl
adc
dec
cli
pop
cmc
shlb
clc
cmp
mov
jns
sub
mov
and
lret
pop
mov
insl
xlat
push
iret
jnp
xor
cmp
xor
xchg
icebp
sbb
es
mov
rcrl
in
jp
cmc
fdivrl
icebp
dec
std
push
xchg
dec
stc
fistl
pushf
ret
xchg
push
mov
cmpsb
scas
xchg
xchg
add
imul
add
in
jmp
cmp
lods
mov
jo
add
or
insl
and
dec
cmc
ret
push
cmp
lret
aad
mov
cld
jge
or
ror
mov
push
or
xlat
int3
icebp
jg
jge
dec
decb
out
push
add
fcom
xor
cmp
add
movsl
mov
add
roll
ret
mov
adc
icebp
jns
jne
xchg
xchg
data16
xchg
add
mov
add
cmpsb
push
jmp
clc
out
or
mov
jno
lods
inc
dec
mov
dec
imull
loope
es
addr16
movb
xor
lret
rolb
aas
jle
push
sbb
xchg
sub
push
in
xchg
test
ljmp
sub
adc
in
dec
jns
inc
and
sahf
add
sahf
mov
shlb
pop
and
mov
enter
adc
movsl
fwait
dec
scas
iret
idivb
gs
inc
iret
imul
mov
imul
xchg
insb
stos
sub
pop
cmp
dec
std
call
int
push
into
movsb
mov
fstpt
shll
add
push
xor
jb
pop
inc
jle
push
iret
aam
sbb
push
mov
adc
or
cmp
stos
jg
inc
mov
jmp
and
inc
sahf
outsb
cld
movsb
mov
pop
mov
inc
xor
adc
add
mov
adc
mov
imul
or
cmp
push
push
jg
test
shll
sbb
jle
pop
and
pop
test
cmp
sub
cs
sub
lods
push
push
mov
fsubl
inc
cmp
and
push
pop
fs
cmp
xchg
jp
fnstcw
mov
mov
fmuls
out
pop
dec
imul
xchg
repnz
ficoml
popf
xchg
out
xor
cs
leave
jns
and
cli
adc
insl
fwait
xchg
mov
xlat
clc
mov
or
movsb
loop
inc
and
shl
add
fldcw
and
inc
movsl
mov
shl
pop
clc
call
das
in
test
out
jg
nop
rorb
in
and
sbb
lcall
mov
outsl
test
cmp
sbb
mov
push
jecxz
in
mov
repnz
and
testl
outsl
repz
ficoml
mov
leave
mov
mov
jmp
dec
add
std
into
stc
pop
mov
stos
dec
lcall
push
lds
and
inc
ss
mov
push
cmpsl
sbb
into
and
daa
fwait
adc
xor
or
mov
movsl
sbb
popf
mov
in
test
out
inc
fiaddl
pop
int3
sti
push
popf
popa
lea
mov
sbb
sarb
fldenv
mov
jmp
frstor
push
pop
dec
outsl
dec
push
push
or
add
insl
xorl
cmp
pop
aad
mov
test
mov
jae
mov
ljmp
mov
xchg
ret
mov
ds
jle
jg
inc
mov
adc
pop
xchg
jmp
jae
outsb
mov
pop
decl
and
pop
cmp
push
in
push
and
cmp
xor
subb
mov
dec
shlb
adc
cltd
jecxz
and
mov
mov
ss
xchg
or
mov
jg
push
xchg
sbb
inc
jo
pop
insl
insl
pop
daa
andb
and
jmp
ja
pop
imul
lock
jge
pop
rcrl
xchg
mov
and
fildl
out
xor
fists
cmp
or
dec
lock
stos
xor
nop
out
stc
mov
jae
mov
out
rorl
lea
in
mov
arpl
popf
ds
lods
shl
imul
mov
mov
inc
or
int3
jnp
or
and
daa
mov
nop
pop
mov
cmc
mov
aaa
shrl
and
sbb
xor
repnz
loopne
mov
push
mov
movsb
jecxz
daa
jns
or
fbld
add
add
jne
inc
pop
jae
rol
jno
cmp
out
repnz
fisubrl
mov
lds
pop
sub
pop
pop
mov
cmpsl
sbb
xor
arpl
push
cmp
lahf
pop
mov
movsb
notl
rolb
pop
mov
mov
mov
stc
out
jne
aam
jb
aaa
and
jle
mov
xorl
outsl
fidivl
mov
push
jg
xchg
fsubrl
lock
mov
mov
sarb
fwait
loop
popf
das
sub
cmpsb
add
test
loop
pop
addb
sbb
push
je
xor
mov
mov
and
clc
lret
shlb
mov
dec
insb
pop
ss
jbe
das
mov
arpl
inc
mov
sbb
addl
inc
mov
movsl
or
popl
jns
jo
call
inc
inc
dec
cmp
cmp
pop
pop
aaa
mov
adc
push
ror
std
pop
xor
ja
lods
push
xchg
jecxz
mov
push
dec
mov
mov
lret
in
mov
stos
arpl
jno
or
or
das
xchg
fwait
loope
outsl
xor
pop
add
cli
xchg
add
sub
xchg
adc
mov
jne
out
dec
and
mov
sbbb
fisttpl
int
mov
scas
fadd
pop
pushf
xchg
push
and
dec
test
cmp
clc
sub
push
int
repnz
pusha
js
sub
jmp
test
adc
test
cli
es
mov
xchg
sub
mov
repnz
out
or
cwtl
mov
lods
mov
mov
sbb
push
aam
sub
stos
xchg
and
add
adc
bound
call
mov
sti
jge
mov
nop
pop
cmp
call
repnz
aas
xor
xchg
inc
insl
pusha
and
sbb
sahf
lret
mov
pop
jg
je
mov
pop
out
inc
in
jb
or
test
out
mov
pop
pop
mov
jb
into
pushl
outsl
pop
in
or
pop
push
pop
mov
dec
orl
add
cmp
push
push
pop
jmp
sub
das
xor
in
pop
insb
mov
aam
pop
xchg
aas
pop
insl
jl
mov
stc
leave
aaa
sub
aas
push
je
cmp
fistps
mov
pop
xchg
sti
cs
sub
mov
cltd
sub
fsts
cwtl
inc
mov
movsb
fwait
jo
aam
and
repnz
movsbl
fistpl
orb
test
in
and
pop
xchg
cmc
jp
test
movsb
xor
test
mov
gs
lods
outsb
je
rorl
jne
daa
xor
jae
out
loope
pop
repnz
loopne
iret
xorb
jno
cmp
dec
mov
push
imul
mov
lret
cmp
inc
mov
mov
sub
ja
cmp
cmpsl
add
pusha
jge
repnz
add
addr16
fsubrs
lcall
popf
jp,pt
add
inc
inc
pop
sbb
dec
cmpsb
mov
mov
out
sahf
incb
mov
imul
std
push
jl
xchg
fdivs
lcall
int
cmpsl
xchg
test
xchg
insl
testl
dec
aad
mov
pop
pop
lea
jge
xchg
sbb
ss
les
loop
dec
testl
xchg
jle
pop
fcoml
sub
push
sub
inc
sub
stos
mov
jae
mov
inc
or
xchg
fs
loope
jmp
mov
out
xchg
sbb
xchg
push
lods
push
mov
mov
mov
cltd
test
in
push
stos
cmp
rcl
mov
cmp
mov
and
aaa
leave
rcll
xchg
aad
shl
ss
int
movsb
mov
cmpsb
add
cmpsb
addr16
xor
add
fmuls
mov
mov
push
insl
cmp
pop
adc
popf
sub
push
movsl
mov
pushf
int3
inc
leave
popf
aam
jge
lods
dec
xor
pusha
mov
mov
jo
scas
sbb
mov
lahf
xor
mov
int
cld
cli
mov
push
out
sbb
fs
xchg
sahf
test
lock
jle
adc
test
pop
xor
sub
ljmp
fisttps
dec
mov
sarb
and
push
mov
enter
fwait
jg
jne
int
outsl
lods
test
mov
es
stos
in
clc
bound
mov
fistpl
jo
sbb
fsubrs
dec
xor
loopne
loopne
andb
xchg
sarb
push
sahf
imul
addb
pop
mov
mov
sbb
fwait
mov
rcrl
or
and
mov
cmp
mov
xchg
and
jae
test
pop
push
mov
dec
loop
adc
mov
ja
push
cmp
and
out
and
je
int3
inc
mov
push
aas
mov
dec
addr16
gs
adc
outsl
ja
into
and
ljmp
and
mov
mov
daa
xchg
inc
dec
adc
cmp
lods
mov
scas
cmpsl
andb
mov
repz
rorb
lods
jmp
push
int
inc
cwtl
push
sub
push
dec
adc
mov
pusha
dec
gs
sar
xor
xor
pop
xor
mov
cmpsl
adc
roll
outsl
pushf
xchg
int3
ret
fnsave
outsb
cmp
aad
mov
pusha
mov
fmull
inc
and
jecxz
jmp
roll
test
ja
push
dec
adc
inc
and
mov
lods
les
arpl
jle
fmuls
hlt
dec
fucomi
mov
push
sub
out
shl
xchg
gs
lock
dec
aas
daa
push
aad
inc
cmpsb
repnz
rorb
add
sbb
mov
addr16
clc
and
jb
outsb
xlat
aam
dec
mov
cltd
pop
cltd
add
enter
cld
sbb
cmp
leave
push
sub
push
xchg
out
pusha
pushl
movsl
xlat
je
test
cmp
cmpsb
ret
cmpsb
dec
lea
rorb
pop
leave
xlat
mov
stos
pop
dec
cmp
lcall
cmpsl
lods
cwtl
and
mov
sub
cmp
cli
rcll
mov
scas
push
arpl
out
loop
popf
outsb
and
les
or
test
sbb
mov
into
mov
push
cmp
xchg
mov
cmp
cmp
aaa
mov
push
jge
fistpl
inc
cmpsl
mov
shll
enter
lds
xchg
adc
xor
in
add
xor
pop
push
xchg
push
inc
dec
xor
inc
push
in
mov
lea
mov
push
push
mov
add
data16
push
mov
jl
mov
iret
xor
cmp
cmp
mov
mov
cmp
filds
cmp
xchg
imul
test
mov
dec
dec
pop
mov
inc
movsl
fnstcw
nop
mov
mov
xchg
sbb
inc
mov
loope
and
adc
add
aas
pop
scas
push
dec
fsubs
and
jns
aam
sub
mov
inc
cld
xchg
cmp
cmc
jp
or
out
outsl
outsb
mov
pop
cwtl
aad
enter
fstps
shr
adc
cwtl
jns
pushf
rcl
adc
out
push
or
in
mov
lods
add
mov
jbe
xor
lock
xchg
adc
popf
dec
inc
dec
pop
adc
bound
es
adc
add
pop
rcll
mov
rcll
xchg
xchg
jle
jno
pop
daa
dec
cs
mov
pop
hlt
fs
cmpsb
mov
cmc
pop
or
aas
xor
and
pushf
lock
insl
repnz
dec
dec
adc
mov
int3
xor
sub
jbe
push
sub
xchg
jle
lret
imul
loop
add
xchg
iret
pop
fwait
inc
lea
data16
repnz
mov
mov
jnp
cmpb
movsb
push
pop
sub
mov
xchg
int3
test
sti
outsl
mov
mov
xor
mov
jmp
add
mov
inc
mov
loope
std
xchg
lahf
mov
xor
repz
add
cmp
test
scas
cs
mov
jg
aad
stos
daa
inc
mov
scas
mov
lret
push
loop
xor
dec
pop
orl
dec
fstpl
jns
outsl
idivb
fstpl
mov
pop
or
mov
dec
sarl
sub
fstl
sub
test
je
push
dec
dec
fbld
xchg
fidivrl
ss
jno
inc
adc
stc
mov
add
adc
jecxz
adc
mov
aad
sbb
sbb
popa
lea
add
stos
fwait
inc
push
mov
or
inc
jge
rolb
inc
mov
sub
fwait
daa
ja
out
jo
cmpb
push
pop
sub
out
es
cwtl
jmp
push
xlat
lret
xor
call
mov
mov
cltd
mov
es
stos
sub
cmp
cli
cli
mov
cmp
jp
or
into
addl
out
or
sub
add
int3
jg
push
sbb
fcmovnu
jb
mov
cmp
xor
inc
ret
xchg
mov
into
lret
je
jne
cmp
adc
lret
pop
stos
or
mov
or
movsl
jne
push
inc
jae
jecxz
loopne
in
mov
mov
lods
je
and
fcmovu
mov
sar
idivl
lahf
pop
pop
arpl
bnd
rclb
xchg
aam
popf
into
int3
stos
sarl
lret
lods
xchg
sub
sti
repnz
adc
cmp
push
adc
gs
jno
push
mov
divl
sbb
clc
js
jbe
insl
out
mov
addr16
data16
cmc
mov
pop
or
sbb
jns
mov
lcall
add
jne
push
sbb
pop
xor
pop
aad
xchg
adc
das
addr16
mov
lock
clc
rolb
jg
mov
cli
jns
push
push
mov
lods
jb
jmp
and
jb
adc
cld
push
xlat
inc
mov
daa
pop
in
scas
jbe
mov
mov
bound
inc
add
mov
shl
adc
inc
push
jnp
cwtl
push
aad
loope
in
stos
inc
push
in
cmp
push
pushf
jae
mov
fcmovu
repz
cmp
push
scas
test
cmp
mov
jge
sbb
push
ret
sub
xchg
push
test
ret
xor
nop
sbb
lret
inc
dec
jnp
add
dec
mov
xchg
cmp
test
ljmp
push
cmpsb
jl
xchg
insb
adc
or
inc
imul
inc
das
fstps
xorl
insb
add
dec
mov
inc
fxch
sti
mov
xlat
push
loopne
mov
setns
repz
inc
xlat
add
gs
loop
in
xchg
xchg
mov
jns
notl
jmp
rcll
pop
lahf
frstor
ret
in
mulb
ret
jmp
sbb
into
or
popf
inc
data16
dec
loop
std
mov
jecxz
scas
in
pop
mov
mov
xor
mov
xor
xchg
jge
mov
les
fmuls
xor
frstor
inc
push
inc
cmp
dec
outsb
bound
cli
and
je
cmpl
xchg
inc
jecxz
addl
xchg
jmp
loope
inc
fisubl
dec
cltd
mov
test
mov
xchg
push
pop
jg
les
sub
mov
adc
lea
sub
inc
rcl
mov
jns
lds
pusha
fldcw
xchg
jns
mov
sub
xchg
or
fsubrp
std
mov
imul
dec
jb
adc
into
mov
sti
out
inc
mov
jmp
hlt
outsb
jno
cmp
xlat
inc
outsl
cmp
cmp
rorl
or
mov
sti
inc
adc
sti
fbstp
xor
divb
sbb
mull
sbb
or
push
jecxz
shll
movsb
adc
fwait
hlt
mov
cmp
xor
sbb
fcoml
push
adc
iret
in
je
leave
mov
and
daa
push
sub
nop
fwait
adc
pushf
in
enter
inc
loopne
sahf
ret
lahf
sub
pop
dec
adc
insl
cld
inc
lret
fdivrs
cmp
fdivs
or
lret
sbb
sets
ljmp
ftst
xchg
je
mov
lea
call
jns
cli
push
pop
sti
cmp
test
mov
adc
mov
enter
mov
sub
xor
lock
inc
fwait
mov
mov
jle
sbb
aaa
xor
adc
mov
pop
cli
inc
push
mov
andl
inc
ret
pusha
pop
mov
jl
popa
mov
push
mov
cmpsb
clc
stc
insb
xor
out
mov
std
jbe
int3
stos
loop
mov
data16
incl
add
imul
cmc
insl
ret
sbb
dec
call
outsb
jo
mov
mov
ficomps
or
xchg
xchg
call
xor
push
sub
or
push
adcb
mov
mov
loop
cmp
loop
dec
inc
push
out
out
mov
jp
test
idivb
jmp
adc
ja
push
mov
imul
dec
push
mov
into
jp
mov
stos
add
out
ds
testb
mov
pop
mov
in
sub
cli
insb
adc
addr16
xchg
das
mov
adc
lds
data16
aam
dec
jecxz
lahf
pop
lcall
jge
jnp
cli
add
movsl
daa
dec
dec
aas
push
roll
lods
sarl
and
ret
pop
inc
mov
sbb
fcomi
js
loop
clc
xchg
inc
insl
icebp
dec
dec
fldcw
adc
cli
daa
leave
gs
jle
mov
sbb
cmp
pop
gs
bound
mov
xorb
and
pop
jnp
mov
insl
jecxz
inc
fcmovbe
fistpll
test
add
push
xlat
aad
sbb
gs
xor
mov
dec
inc
push
ret
jmp
pop
je
add
lret
scas
xchg
xchg
cs
add
mov
test
adc
cmp
dec
jle
clc
dec
sub
sub
fstps
inc
pop
push
sbb
push
and
pop
jge
lret
pop
imul
ror
mov
fnsave
sub
xchg
and
in
roll
int
push
pop
xlat
clc
jb
or
and
repz
xchg
ret
not
mov
add
divb
mov
inc
cltd
xchg
jb
push
js
dec
fdivrp
sub
rcll
orl
adc
ds
in
popf
test
sbb
xchg
and
shlb
ds
pop
jecxz
movsl
pop
xchg
xchg
xchg
fistl
sub
add
mov
sbb
sbb
pop
mov
or
dec
add
mov
xor
fwait
adc
or
mov
pop
lret
mov
push
or
mov
dec
ss
fildll
adc
sub
xchg
pop
shlb
in
xchg
mov
dec
xchg
adc
jg
icebp
pop
jne
test
fsubl
dec
cmc
xchg
xchg
push
ret
fcmovbe
dec
or
cmp
jg
clc
lret
and
lret
imul
push
nop
xchg
mov
dec
pusha
xlat
int
scas
cmp
cmc
mov
movsl
fs
sbb
cs
jae
and
sbb
jae
pop
jno
mov
movsl
push
push
iret
jmp
mov
aam
add
inc
jmp
jbe
imul
jbe
sub
call
sti
jbe
dec
adc
daa
ret
jbe
sbb
nop
or
repz
mov
and
outsb
movsb
xorl
inc
cs
or
mov
push
arpl
shr
imul
cld
int
test
popf
pop
lods
or
add
jb
jmp
inc
dec
add
daa
idivb
std
mov
stc
fwait
scas
mov
pusha
repnz
xchg
xchg
les
nop
das
ror
addl
push
mov
js
add
aas
ret
jne
ss
movl
inc
push
pop
das
repnz
fcoml
shll
pop
scas
in
xchg
sti
shll
jl,pt
mov
arpl
dec
in
xchg
cltd
aas
stos
mov
jno
cld
or
into
and
fsubl
xor
cmp
cmovb
or
adc
mov
jmp
call
or
mov
mov
jns
jmp
ror
sbb
lock
iret
cs
sub
jbe
lret
les
xor
outsb
mov
popa
inc
out
jnp
dec
jmp
iret
lret
xchg
push
mov
lahf
insb
insb
imulb
into
fstpt
mov
push
enter
ja
sub
mov
cmc
dec
scas
inc
adc
lcall
sbb
push
inc
sub
and
dec
imul
stos
push
out
mov
add
pop
inc
xor
push
mov
jmp
push
call
aaa
addl
mov
jmp
loop
stos
fisttpll
pop
sbb
rcrl
js
enter
fldl
sub
mov
adc
fadds
sbb
test
push
jno
cmc
inc
je
sti
adc
dec
movsb
inc
pushf
cmpsb
insl
sbb
or
sbbb
fdivrl
clc
mov
mull
adc
dec
xor
xchg
sbb
mov
cmp
lret
nop
negl
js
roll
ret
aam
push
dec
out
inc
push
xchg
sbb
ds
les
cld
xor
dec
dec
test
lock
add
inc
rol
xor
ds
mov
pop
dec
sbb
adc
dec
or
mov
lret
and
mov
daa
rcr
ss
mov
push
mov
mov
mov
ret
and
dec
jo
cmp
mov
negb
and
cmp
mov
push
and
sub
mov
sbb
xor
cwtl
cmp
xchg
pop
imul
and
xchg
cld
daa
cld
add
aam
or
push
fwait
es
test
sbb
jge
xchg
and
int
push
sbb
pop
ds
sbb
xchg
cmpsl
sub
adc
std
cwtl
in
inc
popa
xor
sub
pop
xor
popl
mov
ret
in
mov
cmp
aas
adc
xor
jp
out
pop
push
or
outsl
adc
mov
mov
inc
movsl
jl
rorb
popa
jge
sti
popf
out
xor
dec
cmc
iret
jae
push
cmp
lock
mov
daa
sbb
je
adc
add
inc
test
xor
inc
add
xor
cmp
cmp
int
mov
mov
xor
in
jno
in
mov
mov
or
jl
cmp
ja
dec
lret
mov
ljmp
pop
shll
orb
loop
jo
mul
cltd
sub
sub
ss
je
ss
mov
out
es
mov
xor
movsb
adc
mov
xchg
pop
out
fmull
cli
iret
dec
pop
dec
xchg
rcrb
mov
jmp
pop
inc
jl
push
sarb
cmc
je
mov
mov
or
aam
pusha
dec
loopne
pop
out
adc
dec
xorl
dec
fisubrs
mov
jmp
fists
cmp
aas
sahf
fsubr
rol
inc
mov
cli
mov
mov
lcall
lock
mov
mov
fsubrl
call
out
pop
cmp
sub
insb
dec
aas
addr16
mov
imul
icebp
adc
flds
lahf
into
push
js
cmp
mov
inc
adcl
push
pop
add
dec
sti
mov
cld
pop
loope
out
enter
add
aas
popf
fdivrs
jae
bnd
testl
xchg
inc
xchg
orl
pop
cmpsl
dec
insb
sbb
xchg
rolb
lcall
lahf
sahf
andb
sti
push
mov
add
jecxz
xor
repnz
mov
repnz
into
in
and
cli
add
cmp
gs
add
jp
lcall
std
imull
cmpb
shl
mov
pop
dec
and
mov
sbb
dec
dec
xchg
sbb
ret
push
cmpsl
pop
and
dec
inc
and
xchg
cmp
dec
repnz
mov
jge
jp
mov
adc
pop
jb
sub
push
int3
or
xor
mov
pushf
add
or
lods
call
iret
xor
xor
jb
loop
decl
fistpll
int
xorl
push
es
lcall
subl
loop
sbb
mov
ror
mov
jg
shl
push
lock
fidivrl
mov
mov
mov
xchg
in
ss
cmp
mov
push
push
sub
push
stos
add
and
shll
stos
lea
sbb
push
imul
int3
mov
movsl
adc
xchg
dec
insb
cli
pop
sub
push
cmp
xlat
mov
rcrb
inc
mov
outsl
iret
popa
dec
sub
shll
add
sti
or
push
lock
cmpl
push
out
jo
push
negl
sbb
in
xor
int3
lds
repz
mov
mov
xor
sub
std
fmull
adc
pop
adc
pusha
sbb
cmc
push
inc
inc
hlt
jbe
in
push
xchg
and
sbbl
jmp
negl
dec
cmp
daa
test
sub
mov
xor
les
cmp
rcrl
dec
aad
aas
shlb
insb
lcall
push
pop
mov
loop
pop
iret
aaa
jb
lret
hlt
subl
adc
push
dec
outsl
out
fs
cmp
cmpl
mov
xchg
xorb
mov
adc
adc
pushf
adc
outsb
stos
bound
adc
sbb
xor
movsb
jnp
fcompl
push
jmp
push
mov
mov
jno
pushf
lods
sub
cmp
icebp
test
xchg
add
jl
lods
cmp
push
in
sbbb
cmp
inc
jecxz
sbb
inc
in
and
fldt
sahf
lods
xor
ja
xchg
sbb
pop
out
insb
ss
out
sahf
mov
jnp
or
lret
and
lock
stos
and
pop
push
add
cltd
push
mov
sub
subb
push
dec
add
cmc
jmp
fadd
pop
sarl
xchg
inc
fdivp
mov
out
pop
cmp
sti
fisttpl
jmp
mov
jg
fidivrs
dec
cmpb
outsl
loope
add
addr16
cmp
push
lahf
scas
and
pop
mov
cmp
xchg
mov
jg
sub
scas
je
or
ss
jae
out
jns
iret
pop
cmp
xor
push
sahf
inc
push
out
enter
mov
les
jge
and
sub
mov
repz
or
adc
movsb
mov
sbb
pop
aam
dec
jge
ja
outsl
loop
outsb
xchg
add
jecxz
mov
in
out
sbb
jl
rolb
push
es
cmp
outsb
fimuls
xchg
mov
in
adc
sub
fwait
sub
test
or
fmull
repz
or
xor
xchg
sbb
clc
add
mov
addl
add
ja
outsl
into
mov
jne
stc
mov
mov
shrb
orb
pop
mov
lods
add
outsl
xchg
mov
loopne
mov
in
addr16
nop
inc
in
mov
fisttpll
popf
fwait
cltd
jge
adc
pop
sub
cmp
sbb
pop
pop
mov
inc
ret
jmp
pop
or
mov
fiadds
insb
xor
je
scas
pusha
pop
in
adc
add
ja
jne
jle
sbb
leave
mov
add
xor
jecxz
ja
xchg
push
and
adc
flds
and
lods
add
inc
xor
pushf
dec
out
stos
sbb
outsb
les
mov
add
push
pusha
and
mov
xchg
int3
pop
outsl
mov
in
dec
inc
scas
ret
lea
insl
repz
adc
xlat
test
testl
fwait
mov
and
adc
rcpps
xchg
loopne
pop
outsl
fs
xchg
cmp
fisttpl
mov
cmp
cmp
jnp
fwait
mov
sbbb
lock
pop
lods
test
ret
in
ljmp
in
lea
cltd
lds
mov
jp
sbb
arpl
jle
inc
mov
pop
fiaddl
fisubrs
mov
lea
pop
xchg
scas
push
lea
call
inc
enter
fiaddl
pop
push
imul
mov
sbb
sbbl
xchg
or
inc
mov
push
xchg
stos
out
xchg
and
je
shl
sti
jle
sbb
vpsubb
gs
add
xor
push
xor
add
sarb
jmp
mov
and
lahf
ret
jg
int3
sbb
imul
push
cmp
lock
cmp
xchg
in
push
dec
lahf
pop
push
push
mov
stc
pop
fldcw
or
dec
movsb
out
cmp
pushw
in
sub
in
jbe
mov
iret
xor
xchg
sub
iret
shlb
jle
inc
push
dec
in
push
arpl
jmp
std
cmpsl
jbe
dec
fs
aaa
loop
fbld
xor
lcall
outsl
jb
pop
inc
int
ds
clc
mov
xorb
jbe
enter
outsb
in
cld
mov
imul
out
jne
push
xchg
push
fdivrs
xor
push
dec
pushf
sub
je
ja
pop
insl
int
out
and
cmp
sub
inc
lahf
repz
dec
inc
mov
in
jno
sti
cwtl
das
cwtl
pop
das
cmc
mov
je
loope
mov
filds
fildl
gs
dec
rcrl
mov
mov
push
movsl
stos
and
cmc
pop
rolb
lret
dec
ret
ror
fwait
test
pop
mov
int3
ja
repnz
test
int
cmp
xchg
out
mov
mov
aas
xchg
and
negl
jmp
lret
shll
fwait
pop
dec
loope
sbb
jb
xor
sbb
pop
leave
and
test
cmpsb
mov
pop
int3
mov
fistpl
icebp
outsl
mov
cmp
hlt
cs
sbb
inc
mov
lods
add
mov
mov
pop
cmpsl
bound
das
dec
jmp
or
aas
sub
aam
pop
lcall
xor
sbb
cld
xor
or
fcmovnu
push
in
push
sbb
mov
add
test
aas
clc
jo
aas
aad
hlt
xor
push
or
xor
movsl
jns
pop
jg
cmpsb
or
push
movsb
int3
repz
jge
mov
mov
or
repz
mov
adc
fdivl
sub
sti
inc
lods
adc
lock
nop
int
lods
mov
push
loopne
sbb
sub
hlt
adc
push
mov
xor
icebp
lock
int3
test
aad
sub
jne
inc
std
ret
cmpsl
les
xor
scas
incb
mov
ret
jns
outsb
xorb
pop
mov
and
mov
test
xor
jne
rcrl
and
xor
aad
inc
add
imul
adc
ss
adc
es
push
repnz
inc
xchg
gs
or
dec
popa
adc
sub
jl
mov
into
test
mov
cmpl
iret
push
fs
pinsrw
push
pop
jle
push
popa
jno
add
bound
xor
in
jns
jg
inc
add
aam
cmp
jae
sub
jo
jle
push
insb
pop
js
inc
aas
mov
out
repnz
jno
jmp
xor
stos
stos
pop
ficoml
ret
shrl
pop
adc
or
jl
lea
xor
out
idivl
sarb
or
jmp
mov
and
ss
hlt
pop
sar
cwtl
and
cmp
sub
lahf
pop
in
ss
ret
adc
test
imul
insl
cmp
push
xor
dec
xchg
add
dec
iret
adcb
jge
push
mov
mov
gs
sbb
push
jmp
mov
dec
xchg
shr
xor
pop
inc
push
cmp
cwtl
mov
mov
jne
or
fimuls
lods
sbb
dec
jmp
hlt
gs
xor
js
sets
xor
outsl
data16
xchg
xchg
test
dec
es
rol
xor
xor
iret
mov
icebp
cmp
sbb
sbb
pop
or
xor
imul
xchg
sub
clc
dec
fistpll
adc
int
inc
dec
xchg
rcll
cmp
xor
adc
in
pusha
enter
push
movsb
inc
add
sbb
setne
inc
in
add
cmp
mov
es
mov
insb
lret
or
pop
add
fs
and
xor
sbb
repnz
into
xlat
sbb
pop
dec
call
cltd
aas
sub
fdivrs
loop
xchg
jne
xlat
adc
adc
sub
or
roll
aad
add
sub
cmp
mov
in
stc
test
into
fstpl
rep
sub
in
pop
lret
ds
adc
fdivrs
jmp
lcall
xchg
cmp
adc
rcll
inc
imul
lahf
nop
sbb
inc
push
cmp
sub
outsb
pop
adc
enter
cltd
sub
mov
in
inc
jne
xor
xlat
adc
scas
add
test
xor
mov
lret
sbb
jne
lcall
jecxz
and
fdivr
das
fdivr
shl
lods
mov
inc
inc
test
xchg
add
lea
push
stc
movsl
stc
jae
mov
inc
rcrl
loope
adc
dec
cmpsb
xchg
arpl
pusha
divb
ret
xchg
sub
sub
xor
int3
jge
jl
aaa
sub
or
mov
daa
push
iret
adc
sbb
pusha
subl
push
ja
fiadds
mov
scas
nop
push
and
adc
push
fdivrl
jb
lods
cmp
add
in
pop
xchg
dec
movsl
rcll
mov
icebp
lea
sub
mov
dec
push
mov
scas
mov
or
mov
or
jne
dec
or
ja
mov
push
pop
lret
or
dec
das
adc
mov
outsl
xchg
lds
addr16
sbb
pop
adc
adc
jae
xor
jge
enter
add
imul
imul
movsl
incb
and
sbb
cmp
decb
stos
les
cmovne
fisubs
arpl
cli
xorl
xor
cmpsb
cmpsb
mov
dec
popa
addr16
adc
xchg
lea
adc
mov
pop
inc
push
jne
inc
lret
scas
mov
popa
xor
cli
mov
dec
imul
sbb
loop
mov
movsb
pushf
push
cmc
sbb
clc
daa
fwait
dec
sbb
sub
lea
or
mov
sub
daa
cwtl
in
push
test
mov
dec
sti
fstl
je
mov
push
outsl
push
xchg
cmp
popf
fadds
mov
pop
dec
enter
into
es
insb
call
push
or
push
inc
mov
cmpb
iret
pop
add
cmp
mov
sub
aas
mov
aaa
jp
jns
ja
push
pop
and
rcll
and
shlb
fldt
jl
adc
cld
mov
call
mov
or
mov
jp
stc
pop
mov
les
sti
mov
push
data16
cmp
add
out
add
aaa
xchg
sub
mov
lods
mov
xor
rcrl
ja
ds
add
xor
inc
xlat
push
fdivrl
jp
inc
ret
rcrb
mov
lret
dec
cmp
dec
das
pop
out
sti
xor
lcall
and
iret
cmp
in
sub
sti
pop
lods
dec
mov
aaa
push
pop
dec
ss
repnz
ret
orb
xor
adc
sub
add
push
add
cmpl
xor
addr16
sub
sub
shrb
insl
mov
dec
and
shl
and
mov
aam
adc
pop
mov
dec
add
adc
and
jle
push
or
clc
xor
add
mov
jge
fdivrp
pusha
outsb
adc
xchg
mov
jecxz
xor
sbb
xor
filds
nop
dec
cmp
int
rcrb
inc
out
and
xorb
fsubl
sub
cmp
jg
subb
adc
or
in
imull
pop
in
int
xchg
sub
popa
in
jnp
push
push
mov
add
shlb
shrb
jle
loop
outsb
test
or
jmp
dec
pop
adc
dec
popa
mov
sbbb
xor
push
out
leave
movsb
mov
cld
aam
mov
push
outsl
sub
out
movl
imul
xor
rorl
outsb
sbb
arpl
push
xchg
stos
jbe
jo
xchg
cmc
lea
pop
ret
js
and
mov
xor
cmp
push
mov
out
mov
mov
adc
pop
xor
jns
or
aas
xor
enter
sbb
hlt
pushf
xchg
mov
xlat
or
lahf
adc
and
and
push
stos
ret
adc
out
bound
push
dec
cmp
std
cmp
or
leave
insl
sbb
lods
int3
sbb
mov
xor
jno
adc
and
es
cmp
xacquire
pop
insb
adc
test
int
js
aaa
adc
xchg
fildl
xchg
outsl
push
xor
mov
adc
pop
adc
in
jbe
mov
jmp
enter
int3
sbb
inc
arpl
pop
pusha
cmc
push
xor
dec
xchg
ret
movsb
push
popa
filds
aas
xchg
inc
pushf
lret
inc
xor
aas
insl
and
inc
mov
ja
filds
sbb
es
bnd
jle
imul
cmp
data16
mov
jo
or
ljmp
xor
xchg
out
cwtl
xor
inc
jae
dec
es
inc
mul
outsb
stos
pop
jecxz
jae
addb
or
sub
inc
add
jmp
sub
dec
aas
cmp
push
cmp
dec
fistpll
std
es
sub
jp
jbe
imul
sub
or
push
fnop
cs
add
add
xchg
jmp
lods
sbb
jmp
aas
ret
mov
mov
pop
mov
lea
cmpsl
jnp
scas
pop
cmp
jmp
fisubrl
mov
rclb
sub
mov
mov
jae
xchg
mov
adc
scas
sub
shll
xchg
jl
sbb
xchg
adc
js
cli
or
enter
js
mov
mov
add
xlat
xchg
fsubrl
out
aaa
iret
adc
lock
ret
mov
push
ja
repz
inc
aad
cmp
jo
and
jo
cmp
pop
fwait
popf
pop
push
movsb
notb
out
sahf
and
pop
rol
aas
push
cmp
jmp
cmp
out
and
inc
sahf
dec
lods
jb
pop
xor
stos
sbb
loopne
and
in
adc
loop
fcmove
and
inc
cmpsl
lea
sarl
cltd
ss
sbb
jb
pop
fidivrs
stos
in
jae
daa
and
jl
andb
mov
xchg
loopne
xor
addr16
dec
cli
push
inc
dec
jmp
adc
daa
xor
adc
movsl
cmpsl
pop
mov
popa
cmp
icebp
mov
jnp
or
xchg
mov
mov
mov
out
jnp
aas
insb
mov
or
call
fwait
cmp
subl
add
cmp
cmc
lcall
xor
inc
mov
push
xor
int3
xor
inc
jnp
aad
cmp
int
sbb
outsl
pushf
in
xorl
pop
ja
mov
cs
push
test
sbb
or
mov
inc
pop
sbb
mov
and
mov
mov
mov
std
scas
rol
stos
sbb
jle
xor
mov
rclb
mov
mov
push
lea
sub
imul
pop
sub
mov
stos
mov
aam
dec
std
mov
ljmp
jecxz
addl
inc
mov
push
mov
lcall
dec
ds
loope
pop
push
add
jo
fbld
frstor
pop
fidivrs
decb
inc
and
pop
int3
outsl
test
lock
lds
mov
aas
pop
and
push
push
xchg
jmp
shlb
push
push
mov
cltd
push
bound
xchg
inc
sahf
jno
fiaddl
gs
xor
jns
pop
jle
push
sahf
push
sub
int3
clc
dec
inc
or
lds
les
dec
xchg
nop
inc
mov
inc
mov
out
ss
pushf
xchg
mov
lock
lods
in
jnp
adc
and
test
daa
adc
adcb
in
dec
lods
push
leave
xchg
ret
inc
mov
out
pushf
inc
mov
push
insb
in
shlb
cs
scas
add
cwtl
xchg
movsb
jmp
divb
add
leave
sbb
cmp
stos
jmp
outsb
cli
mov
xor
sub
adc
sbb
sarb
lret
lds
and
lea
push
call
fwait
adc
scas
fiadds
mov
ret
inc
sub
orl
ds
xchg
cmp
insl
push
ret
js
popa
pop
jmp
punpckldq
mov
jl
pop
int
inc
out
les
or
fiadds
push
jl
fsubs
add
pop
mov
pop
mov
adc
xor
imul
les
out
int3
fstpt
jb
xchg
inc
imull
xorl
into
aas
incl
jmp
push
mov
lcall
mov
fwait
cmp
xchg
clc
xchg
ret
mov
push
ja
out
add
and
movsb
mov
mov
pop
sub
and
adc
cmp
lock
notl
stc
mov
andl
cmpl
mov
adc
je
cmpsb
cmp
jp
dec
push
scas
sbb
adc
shl
xchg
sub
sar
std
dec
jecxz
cld
dec
filds
popa
add
loopne
xchg
aam
inc
or
fisubrl
aas
and
push
dec
sub
in
in
jmp
jnp
std
jl
sbb
pushf
int3
dec
sub
push
shrb
xor
cwtl
lret
test
les
scas
or
adcb
sbb
xchg
call
or
push
imull
adc
mov
inc
pushf
and
adc
pop
jno
adc
and
xchg
mov
mov
out
roll
push
outsb
lret
cli
loop
xor
mov
mov
inc
cmp
icebp
sarb
and
mov
xchg
cmp
jo
inc
or
dec
jo
aam
xor
mov
sub
sbb
and
mov
mov
mov
pushf
out
inc
add
ss
outsb
xchg
cli
loop
pushf
xor
add
and
adc
sub
outsb
cmp
cmpsb
sub
xchg
movsb
push
pop
mov
push
int
fs
cmp
add
sub
into
insb
loopne
lods
fadds
in
pushf
iret
or
xchg
and
ljmp
push
sub
stc
or
sub
sbb
pop
je
cwtl
mov
xor
andl
mov
paddw
push
shrl
fimuls
dec
ret
fstl
cli
cltd
push
mov
xor
mov
movsl
rcrb
test
loopne
push
cmp
popf
ret
cld
out
xor
pop
repz
mov
ja
cmp
out
or
les
ret
xchg
adc
cli
inc
cmpsb
and
loopne
add
loopne
sub
sub
aam
leave
sub
sbb
pusha
test
lock
js
ret
insb
add
repz
sti
mov
mov
call
push
sarl
or
and
repnz
enter
adc
fs
push
fcomi
dec
or
xor
fnsave
js
loop
scas
leave
stos
stc
shll
scas
xor
cmp
enter
aas
or
decb
inc
das
xchg
or
iret
sbb
mov
mov
pop
addr16
cmp
cli
jl
inc
xchg
ja
mov
insb
fdivrs
mov
loopne
xchg
xor
mov
xor
jge
jl
arpl
cmp
xor
jne
sbb
sbb
aam
xor
mov
mov
out
in
add
add
mov
ds
rcrb
icebp
lcall
inc
lret
shlb
int
inc
sub
mov
push
xchg
test
and
pop
cmpsb
subb
cli
dec
fsubs
adc
ljmp
out
fmull
loop
in
inc
mov
mov
add
test
movsb
mov
repz
scas
fstpl
ja
or
jbe
sarl
push
add
sbb
push
ja
fists
jge
pop
test
stos
push
test
xor
mov
mov
repnz
stos
jl
les
sbb
mov
insl
stos
sub
cs
jmp
mull
stos
inc
push
repz
fs
dec
stos
jb
jne
mov
jbe
xor
icebp
fwait
pop
arpl
push
pop
sarb
aas
jecxz
shlb
jb
push
aad
shrb
or
movsb
jmp
jmp
xchg
jmp
sbb
insl
mov
cltd
in
int3
in
push
pop
psllw
jne
fdivl
push
imul
shlb
or
out
ss
xor
push
jo
insl
mov
in
push
outsl
cmp
in
jecxz
cli
push
mul
inc
mov
aas
cmp
lods
mov
fnsave
mov
shlb
ss
jge
inc
add
pushf
call
jmp
push
inc
mov
xchg
push
repz
subl
mov
dec
test
sbb
inc
mov
iret
mov
jbe
out
xor
mov
push
stos
push
xor
or
jnp
dec
loop
push
jb
or
dec
inc
shll
mov
fistl
cmp
sub
mov
clc
and
push
cmpsl
hlt
ljmp
and
and
inc
sbb
lret
test
aas
xor
arpl
in
add
ja
das
aas
and
mov
sbb
fisubl
or
mov
lahf
fs
shr
int3
jnp
les
inc
lock
fstpl
jae
imul
dec
cld
xor
lret
mov
adc
in
stos
lods
addr16
xor
xchg
jl
jp
push
sahf
xor
jnp
rorl
outsb
shll
sbb
mov
outsl
add
pop
xor
push
rcll
jb
inc
push
push
push
enter
push
jmp
loopne
sbb
sar
fld
cmc
jae
jl
mov
sbb
mov
jno
leave
push
mov
test
movsb
jecxz
hlt
sbb
pop
or
loop
push
mov
adc
and
mov
ficoml
inc
outsl
push
jp
or
lret
adc
sbb
data16
cs
mov
xchg
lret
xor
lret
xchg
popa
test
in
push
cmp
jmp
lea
jge
stc
out
xchg
push
ret
adc
jno
and
ret
scas
push
add
shr
mov
xchg
push
loope
jp
dec
scas
jl
inc
jb
sub
cli
les
inc
and
sarb
imul
mov
jp
sbb
je
jmp
pop
jg
sbb
pushf
fimuls
ss
add
mov
push
ds
xlat
jno
loopne
test
sahf
sti
in
inc
mov
andl
dec
inc
stos
mov
sbb
mov
mov
mov
bound
pusha
xchg
add
mov
jb
aad
push
repz
loope
inc
ffreep
mov
loop
jmp
jle
mov
loop
pop
ret
xchg
jge
out
push
mov
push
mov
add
cmpsb
fdivs
popf
push
arpl
xlat
inc
sub
daa
or
cmp
jecxz
cwtl
xchg
int3
cltd
xchg
fs
call
jge
aas
imulb
jg
mov
push
sar
inc
in
enter
and
sbb
fisubrl
int3
lahf
sbb
ss
clc
xor
mov
cltd
sbb
int
rolb
mov
or
sbb
push
loope
sahf
outsb
cld
mov
cli
lea
push
imul
test
lret
jne
cmp
inc
leave
mov
push
mov
dec
xchg
pop
aaa
mov
into
daa
aas
int3
test
mov
cmp
xor
cltd
pop
push
hlt
in
cmp
xchg
ss
insb
repnz
push
jmp
ret
je
lret
lods
mov
mov
jmp
cli
jno
fs
sub
add
dec
nop
jmp
xor
pop
adc
pusha
cmc
std
pop
jae
push
inc
xchg
in
pop
xor
pop
scas
bound
dec
adc
mov
ja
cmp
push
cmp
dec
cmpsb
dec
cli
adc
and
adc
sub
push
mov
fwait
mov
pushf
rdmsr
inc
pop
imul
mov
mov
fsubl
inc
outsb
in
popf
cltd
push
and
cmc
mov
dec
xor
es
daa
movsb
xchg
lea
cld
mov
jae
popa
ficoms
jmp
insl
aam
data16
into
pop
out
push
ret
loope
aad
bound
or
mulb
stos
add
sub
adc
sbb
loope
xchg
out
test
pop
les
push
in
cmp
pop
push
lods
out
inc
jmp
jne
inc
pop
loopne
out
add
xchg
mov
stc
pop
mov
addb
les
sbb
out
push
rorb
dec
repz
xor
ret
dec
cmp
jnp
push
cmp
cwtl
jg
xor
ja
lret
inc
push
loop
mov
cwtl
inc
add
inc
jae
fdivrs
stos
jbe
fnstcw
sti
adc
or
sahf
jbe
push
ret
mov
push
jmp
push
mov
fcompl
mov
leave
mov
cmc
mov
test
mov
sbb
not
cmp
lods
mov
jmp
in
jg
add
jle
aad
inc
out
cli
lret
cmp
adc
push
cmp
push
mov
enter
push
notl
les
inc
in
cs
les
pop
push
jge
and
fimuls
xor
cmpsl
and
push
push
int
les
mov
sub
xor
jl
sbb
rcpps
fstps
cmp
repz
ds
jbe
stc
hlt
rcll
decb
aam
cs
push
jbe
pusha
cmpsb
into
inc
or
or
dec
aad
int3
dec
inc
push
sub
data16
push
mov
fdivs
mov
sbb
gs
pop
jmp
fiadds
jbe
cmp
mov
xor
mulb
pop
ret
xor
in
subl
mov
sub
inc
aad
fwait
ret
inc
sub
dec
xchg
test
push
inc
test
test
or
sbb
mov
ret
pushf
stos
jmp
xchg
push
lock
cmove
in
fcmovnbe
push
lcall
jns
pop
pop
enter
out
call
or
mov
xor
xchg
pop
jo
dec
xor
and
sar
les
dec
cmp
sub
xor
fwait
in
mov
jp
pop
add
fs
push
inc
inc
mov
adc
int3
push
inc
add
xchg
rcll
jl
in
lahf
call
and
sub
dec
jmp
cltd
mov
adc
fwait
rclb
xchg
adc
lock
outsb
scas
fildl
rcrb
ds
inc
rcl
xchg
cmpsb
pop
push
push
dec
dec
cmp
mov
mov
dec
jp
sub
push
pop
add
xchg
mov
xchg
aad
mov
stos
sub
mov
cmp
add
pop
aas
pop
pop
cs
shrl
and
js
pop
aam
xchg
or
inc
scas
das
push
cmp
lret
int3
xchg
push
popa
add
pusha
subb
mov
pushf
and
dec
fbld
or
dec
ret
xor
xchg
pusha
push
shrb
iret
outsb
fsubp
sbbb
cmc
mov
cs
or
or
mov
clc
cmp
roll
jns,pt
mov
pop
sbb
repnz
dec
outsl
pushf
xchg
iret
test
movsb
in
ret
icebp
ja
test
out
xor
lea
push
std
xchg
or
pop
stos
mov
cmp
stos
mov
mov
pusha
arpl
xor
test
xor
lret
xor
dec
mov
imul
jb
sub
pop
and
lods
repz
in
add
sub
ljmp
cli
mov
sub
aas
adc
pop
xchg
mov
cwtl
shlb
pushf
jp
das
aaa
mov
xchg
rcr
inc
xchg
mov
xchg
sbb
movsl
test
ljmp
mov
mov
push
inc
adc
push
add
popa
arpl
xchg
mov
fists
cwtl
xor
rcrl
lea
mov
push
test
xor
neg
jne
jns
fsubr
xor
stos
out
enter
or
sub
jl
cs
mov
xchg
hlt
jg
inc
mov
pop
repz
xor
fadd
pop
rorl
cs
sub
dec
ret
dec
pop
add
mov
cmpb
pushw
fstpt
cmp
and
call
out
lret
or
mov
inc
or
lock
cmp
aas
jmp
push
mov
outsl
js
mov
mov
xor
add
rcll
push
or
std
pop
daa
add
les
or
xchg
mov
enter
js
outsb
shr
out
scas
xchg
in
sahf
sub
mov
loope
icebp
mov
lahf
sub
or
push
and
jne
xor
cmp
jp
in
enter
jne
punpcklwd
xchg
in
sti
sbb
test
mov
xchg
jle
xchg
pop
jbe
xchg
sbb
jg
xlat
adc
mov
in
and
xor
mov
dec
pop
js
aaa
push
pop
mov
xor
push
sub
inc
fwait
mov
imul
and
and
add
xchg
dec
gs
clc
sarl
adc
pop
xchg
sbb
cltd
enter
or
mov
ret
jecxz
jo
sbb
in
cmc
lods
outsl
push
fimull
aad
ret
xchg
push
lea
cs
mov
adc
xchg
mov
fcoms
leave
adc
mov
jnp
or
jg
mov
cli
leave
mov
data16
mov
inc
lock
fldlg2
xchg
sub
js
xchg
mov
arpl
or
adc
stc
int
rcrb
push
or
dec
xor
aam
loopne
jne
aam
mov
xchg
loopne
and
pop
movsb
in
mov
push
mov
sbb
add
mov
xor
lods
jp
adc
call
xchg
xchg
test
mov
mov
int
icebp
xchg
addr16
js
sub
sbb
add
andl
xlat
xchg
loop
rcrb
add
mov
mov
fldcw
mov
inc
prefetcht2
sarl
sbb
xchg
rorb
es
sub
xor
lods
bound
cmp
pop
lods
or
aaa
mov
mov
jo
mov
or
jge
shlb
orb
xchg
jb
call
out
mov
nop
test
lahf
les
xchg
ret
leave
cmpsb
inc
add
mov
stos
mov
mov
out
jnp
out
test
mov
inc
pop
pop
or
popf
jecxz
test
adc
ja
call
cld
test
xchg
sub
add
ret
ss
jge
shlb
xchg
sarb
repz
das
mov
lods
lea
xchg
stc
pop
push
cmp
jmp
mov
and
adc
and
or
test
or
imul
ror
neg
or
cmpsl
mov
mov
lea
aam
stos
lcall
add
insl
decl
aas
movsb
inc
bound
or
stc
xchg
inc
jbe
rolb
out
cmc
lret
jmp
das
mov
adc
sar
int
scas
jnp
repnz
ljmp
stos
imull
mov
sbb
push
arpl
sub
add
dec
cltd
in
inc
adc
jecxz
hlt
dec
pop
repz
popf
sub
cs
clc
cmpsl
xor
sbb
insb
adc
push
das
push
mov
push
pop
insb
sbb
adc
pop
loope
mov
sbb
inc
movsb
xor
mov
xor
testl
add
decb
mov
push
jmp
aaa
lods
mov
mov
mov
or
insb
jne
sub
data16
int3
out
call
leave
pop
lcall
inc
and
nop
cmpsb
xchg
pop
lcall
data16
and
dec
push
out
ds
adc
sub
mov
sbb
cmpsb
bound
nop
popf
push
sub
shrl
out
inc
adc
pop
cmp
jmp
pop
incl
push
cmp
push
gs
mov
repz
sbb
xor
mov
cltd
inc
xchg
lock
dec
mov
lds
movups
in
ret
cmc
adc
jge
negl
jnp
pop
mov
in
lcall
cmpsb
dec
cltd
pushf
mov
addr16
cmp
push
push
movsl
jno
mov
sbb
mov
xchg
fidivs
popf
xor
pusha
or
or
adc
cmp
shrl
mov
aam
dec
out
shr
jg
movb
or
xchg
daa
imul
mov
ja
cld
jnp
pop
iret
out
nop
mov
mov
dec
sub
imul
jo
orb
add
out
fcoms
pop
adc
cmp
jl
iret
push
adc
mov
xchg
mov
insl
xchg
fildll
push
insl
fistpll
xchg
fwait
mov
gs
add
clc
fcomp
pop
incb
sahf
cmpsb
mov
jnp
shrb
add
jp
nop
mov
adc
ds
shr
sbb
ss
push
test
sti
sbb
movsb
adc
aas
dec
lret
sti
ret
cmp
insl
decl
pusha
sbb
aad
mov
jmp
lds
aas
lock
dec
push
rolb
mov
cltd
cmpl
fisubrs
and
xchg
stc
mov
or
mov
movd
popa
out
pop
sub
fs
clc
fsubrp
sub
mov
enter
int
push
xchg
adc
jge
inc
xlat
mov
pop
loope
jge
dec
icebp
push
sub
inc
sub
push
push
sub
mov
xchg
inc
cltd
sbb
aaa
test
mov
pop
call
lret
mov
cld
dec
xchg
insl
fnsave
int3
popa
mov
sahf
mov
mov
cmpsb
pop
cwtl
or
push
sub
pop
enter
lret
inc
das
xchg
repnz
stos
shlb
mov
scas
xor
je
mov
fldcw
xlat
lret
mov
add
pushf
sbb
lahf
out
movsb
popa
push
jmp
out
adc
adc
mov
lods
push
enter
mov
sar
dec
jbe
mov
push
push
push
pop
jl
int
loope
sbbl
repz
sub
ret
xchg
add
sbbl
lret
lret
fistpll
or
rolb
and
out
xchg
pop
mov
pop
rolb
mov
es
push
jnp
inc
add
cmp
inc
lods
ljmp
roll
xchg
daa
adc
leave
scas
lock
pop
call
insb
cld
mov
sbb
add
inc
lods
fbld
or
jae
mov
jle
fdivrs
xchg
or
pop
fiaddl
dec
xor
aad
ja
xor
ret
mov
out
pop
sti
and
out
insl
stos
mov
fildll
sub
insl
ss
into
out
in
fstpl
fldenv
xor
or
add
xchg
nop
fsubs
test
rorl
xor
cmpsl
pop
sbbb
dec
push
xchg
in
int
icebp
pusha
adc
or
into
jnp
shrb
addb
cmp
out
inc
fisubl
mov
push
push
mov
repz
xchg
and
leave
xchg
push
xor
sub
rolb
std
jp
add
hlt
fimuls
xor
cmp
enter
cmp
pop
mov
lds
test
out
bound
inc
jmp
cmp
outsl
ret
iret
sub
xor
fstps
mov
sahf
sti
adc
mov
pop
test
out
xchg
or
xor
jge
xor
insb
ret
ficompl
mov
ret
daa
rolb
or
xor
jp
inc
push
mov
cmpsb
adcb
aam
jmp
out
popf
cmp
add
icebp
clc
divl
push
cmc
ja
outsb
cmpsb
imul
inc
repnz
test
enter
test
popf
or
jp
xor
lods
sbb
sub
icebp
mov
sbb
push
aam
rclb
in
das
bound
inc
mov
cli
pop
inc
es
int3
adc
inc
ljmp
mov
out
mov
sub
cmp
rcr
arpl
insb
test
sbb
push
or
icebp
daa
ds
mov
push
testl
ret
mov
jmp
or
adc
or
lcall
push
mov
and
pop
jp
dec
fsubl
cmp
xor
test
adc
mov
repz
nop
clc
sbb
imulb
and
loopne
mov
shll
fistpll
fistpll
sbb
aam
shl
hlt
fwait
arpl
xchg
stos
xor
mov
mov
pop
push
loop
adc
pop
inc
xor
cs
divl
rol
out
add
pop
or
inc
js
lret
mov
pop
xor
cmp
mov
push
jo
mov
push
cmpsb
insb
or
mov
inc
aad
dec
inc
or
fptan
cmp
inc
jnp
jp
and
sahf
out
in
or
in
dec
xor
fidivrs
add
cltd
popa
loope
add
iret
jo
int3
pop
push
loopne
les
jns
mov
inc
repz
out
push
inc
cmp
fdivp
mov
std
fiaddl
mov
xchg
pop
sbb
xor
call
pushf
pop
cmp
and
lds
mov
repz
mov
xchg
lock
xor
into
and
add
pop
test
ss
pop
test
sub
inc
inc
sub
cmc
mul
je
cld
push
inc
lock
imul
inc
outsb
adc
mov
out
repnz
decb
cmc
shlb
adc
push
loopne
loop
or
sbb
jns
mov
pop
mov
nop
adc
ret
mov
sarb
popf
lods
jns
into
mov
fimuls
pusha
ss
and
notl
leave
push
imul
xorb
std
push
mov
fistpl
jbe
sbb
stc
or
rolb
scas
stc
scas
mov
testb
fcompl
stc
in
adc
loopne
or
stos
dec
inc
movsl
daa
and
into
mov
test
xor
decb
jbe
fidivrl
mov
addr16
sbb
mov
and
ret
xor
jns
adc
in
xchg
xor
adc
into
cmp
popa
sub
push
lock
mov
xor
out
jp
mov
ret
or
push
aam
mov
into
cmp
sbb
xchg
cltd
fnstsw
cld
test
insb
add
ljmp
stos
dec
sbb
jmp
xor
pop
xchg
insb
mov
or
cmp
push
dec
dec
je
lods
sarb
into
sbb
fcoms
adc
subl
loop
push
mov
or
inc
pusha
cli
gs
xchg
imul
test
inc
andl
mov
inc
sbb
inc
mov
and
lahf
jg
out
mov
test
pusha
jns
adc
add
pop
mov
pushf
pop
jle
pop
hlt
add
fsubrl
push
test
mov
add
addb
cmp
push
scas
aaa
int
pop
and
inc
lahf
loope
daa
sbb
add
xchg
adc
inc
movsl
stc
test
enter
mov
cmp
mov
ds
rclb
fimull
sub
dec
jbe
push
fcoms
rorb
ss
and
push
imul
xchg
inc
adcl
fcom
in
and
mov
add
sti
xlat
stos
push
jno
add
mov
mov
jns
fs
mov
cltd
in
inc
aam
inc
sub
pusha
leavew
mov
in
dec
std
mov
dec
jmp
xlat
mov
bound
pop
mov
gs
cmp
or
leave
mov
and
adc
jne
js
cmp
add
inc
mov
subb
aas
popf
sbb
xchg
lret
jge
aas
mov
and
clc
adc
jmp
push
in
stos
and
addl
mov
xchg
dec
jl
and
loope
repz
sti
cltd
sub
into
pop
lcall
out
add
les
inc
push
pushf
adc
mov
shll
rorl
test
sahf
sub
mov
repz
or
sahf
lds
lock
cmp
arpl
insb
sbb
xlat
add
add
inc
jp
mov
in
fbld
pop
mov
out
stos
add
xchg
mov
push
fidivrs
cwtl
ret
push
jbe
mul
jmp
mov
pushf
bound
sbb
mov
ds
jae
xchg
inc
in
fistpll
lods
lcall
xchg
xchg
insl
xor
or
int
sti
add
and
aaa
dec
fs
mov
dec
lods
insb
mov
pushf
dec
notb
mov
loope
in
dec
loop
mov
sub
les
adc
mov
int3
notl
pop
popa
fldenv
add
hlt
adc
adc
lea
pop
dec
cwtl
cltd
clc
jns
test
xchg
xchg
test
sub
lret
vpunpckhqdq
xor
adc
lds
repz
or
loopne
adc
test
add
mov
push
cmp
mov
stos
mov
xchg
or
sbbb
mov
repnz
test
sub
pop
push
out
lock
out
sub
stos
xor
mov
ret
mov
inc
mov
aas
psubusw
mov
mov
jge
repz
dec
cmp
add
cmp
mov
xlat
mov
xor
fdivs
cmp
and
cli
scas
pushf
mov
or
fnsave
inc
dec
cmc
sub
rcrb
dec
dec
jl
out
fidivs
test
xor
jmp
adc
xchg
scas
xor
fdivrs
mov
das
cltd
or
pop
jge
stc
cmp
pushf
mov
test
mov
in
xchg
test
mov
out
ja,pt
sbb
test
stos
jge
pop
into
mov
in
push
mov
mov
loopne
out
pop
push
inc
cltd
push
sub
push
das
in
xchg
popa
adc
imul
mov
icebp
mov
mov
imul
bts
xchg
rorb
jb
in
mov
dec
data16
sub
test
into
sub
pop
mov
mov
xchg
sub
or
fistl
jmp
dec
out
imull
dec
dec
cltd
xchg
xchg
inc
mov
push
jnp
inc
lods
fcmovnb
fcompl
jns
test
cmc
cmp
loop
cmp
ljmp
ret
fisttpll
dec
leave
nop
push
das
mov
addr16
and
out
sti
dec
jno
sbb
les
or
sbb
subl
rcrl
in
jle
mov
aas
dec
cmp
clc
mov
clc
jb
mov
in
clc
inc
loopne
or
sbb
jnp
test
pop
cwtl
push
mov
jns
insb
out
xlat
sbb
addl
jb
xchg
add
movsl
pop
push
scas
ret
mov
fwait
call
and
repnz
adc
jecxz
into
pop
sti
push
imul
and
xor
les
xor
lds
add
mov
cmp
jns
jb
lahf
das
and
cmp
movsb
mov
fs
add
and
ret
or
arpl
test
xor
pop
test
add
mov
or
push
jb
pop
dec
push
bound
outsb
lahf
sub
es
or
lea
nop
lahf
add
gs
mov
adc
bound
mov
jns
aam
xchg
xor
cmpb
jg
jae
aas
xor
xchg
movsl
test
loope
shlb
cmpsl
andl
aam
enter
add
pop
inc
pop
inc
add
cmp
sbb
sbb
aad
xchg
jmp
push
daa
aad
pop
ret
push
inc
dec
sub
out
cmp
lods
mov
inc
shll
inc
fidivrl
arpl
out
inc
cmp
jle
xor
addr16
jb
jg
mov
test
inc
jb
mov
in
sbb
jl
clc
jno,pt
cld
jnp
or
add
fstpt
jecxz
loope
mov
xlat
aad
ja
or
cli
test
dec
imul
ljmp
xchg
daa
pop
xor
ret
push
insl
add
loopne
andb
sbb
sub
outsl
push
jl
in
mov
xchg
lcall
and
push
mov
sub
dec
rorb
cwtl
repz
int
rcll
imul
xor
dec
xor
aaa
jg
add
repz
insb
and
pop
jb
ljmp
scas
adcb
cli
movsb
cmp
sub
dec
or
fnstenv
cmp
cmp
add
cltd
mov
sbb
ljmp
in
cmp
cmp
das
xor
sbb
and
ja
dec
mov
push
jne
nop
push
in
pop
inc
in
ljmp
jo
call
xor
add
into
jnp
push
push
inc
sbb
cmp
inc
sbb
cmp
pushf
add
pop
cmp
cmc
xor
mov
loopne
sub
fstl
out
sbb
loope
xchg
int3
mov
inc
ret
scas
jnp
jp
and
addl
mov
lds
divb
loope
les
add
adc
popa
cmpl
mov
jns
pop
and
insb
or
mov
xor
lods
and
nop
pop
push
ja
inc
add
inc
add
mov
in
push
xor
push
fiaddl
daa
rcrl
inc
mov
cli
fld
pop
push
push
aam
icebp
cmp
or
jo
dec
jno
and
xchg
aam
test
pop
jle
push
xchg
adc
cmc
scas
ret
and
dec
jecxz
sbb
mov
jecxz
or
cltd
lock
out
les
xlat
stos
ja
repz
sbb
shll
dec
push
enter
mov
mov
sbb
pushf
ror
cmp
or
pop
jmp
mov
ljmp
stc
ret
adc
mov
sbb
push
pop
insb
dec
popa
pushf
mull
add
jo
adc
es
mov
or
push
adc
pop
inc
xor
inc
in
jns
fiadds
xor
iret
xor
add
scas
dec
ss
aaa
lcall
mov
xlat
in
out
pop
mov
jo
popa
xchg
push
jmp
or
lret
call
leave
xorl
sahf
ja
jno
pop
pop
adc
mov
jb
xor
jle
repnz
pusha
lret
mov
fisubl
cmp
in
sub
mov
push
imul
mov
add
sub
adc
xor
sar
fdiv
sbb
fistpll
repnz
out
pop
shl
adc
int
mov
mov
mov
sub
xchg
pop
das
jnp
xor
and
lret
scas
push
inc
xorb
ljmp
std
mov
repnz
xchg
out
dec
scas
ficoml
xchg
daa
lcall
adc
pop
push
icebp
je
lds
cld
dec
aad
pop
fisubs
cmp
mov
mov
fwait
mov
fadd
dec
jbe
fidivl
dec
add
mov
outsl
je
push
fiadds
out
push
xor
pop
leave
xor
lods
jbe
xchg
pop
std
ja
and
adc
xor
dec
adc
dec
adc
cmp
or
sub
or
inc
rcrl
jns
fwait
mov
imulb
mov
xor
mov
mov
les
pop
cli
pop
jp
lods
xchg
in
outsb
loopne
push
push
dec
dec
ja
dec
rolb
insb
test
cltd
mov
mov
cli
cmp
lahf
jg
sub
xchg
inc
and
push
fcoms
les
js,pt
xor
pop
inc
imul
pop
dec
pop
mov
xacquire
adc
and
mov
out
out
jle
lcall
dec
pop
or
pop
out
test
jge
test
movsl
aad
shl
sbb
les
or
ds
lcall
and
mov
das
addr16
popf
and
cld
and
call
pusha
jmp
mov
fists
cmpsl
xchg
or
push
add
add
cmp
scas
je
pop
out
jmp
xchg
push
notl
and
testb
shrl
xor
jmp
xor
pop
test
lea
xchg
sbb
and
aad
mov
xor
es
and
icebp
cwtl
ds
add
cmp
sub
rorb
adc
lods
into
fcoml
out
sub
xchg
shlb
add
push
jnp
add
pop
mov
or
adc
cmp
in
xor
mov
inc
fistpll
leave
mov
sub
lds
pop
test
cmp
jg
and
pop
dec
mov
insb
je,pt
sub
sub
jnp
sub
test
orl
fdivr
mov
xor
inc
mov
ss
sub
ror
lcall
loope
xor
xor
rolb
mov
js
mov
mov
stos
pop
ud0
loope
out
xchg
xlat
adc
fcmovnu
out
imul
cmpsl
xor
pop
in
pushl
into
adc
sahf
adc
imul
mov
cmp
pop
mov
xchg
rcrl
popa
mov
pop
aas
or
mov
xlat
and
imul
loopne
clc
cwtl
dec
test
push
sub
adc
hlt
dec
loope
mov
shrl
push
cltd
test
lea
adcb
sbb
jg
cmp
sbb
xor
fisttpll
jnp
cmpsl
es
ret
and
shll
or
jecxz
xor
flds
push
jle
lds
pop
mov
lahf
cli
cli
jge
daa
or
pop
dec
sbb
inc
lret
mov
subb
test
mov
into
inc
sbb
mov
outsb
sti
fldenv
xchg
mov
test
movsl
sbb
adc
push
pop
inc
jl
push
sbb
ja
scas
decb
rorl
sbb
jae
sti
and
jp
mov
inc
js
adc
fisttpl
hlt
jo
mov
test
push
shll
stc
js
dec
imul
sbb
shll
push
flds
fildl
mov
and
xchg
ffree
sub
mov
ret
call
mov
xorb
sbb
mov
and
mov
or
mov
mov
call
adc
lea
int
inc
inc
and
xor
or
mov
outsl
mov
cli
out
minps
adc
dec
lcall
or
hlt
outsl
popa
pop
mov
adc
dec
test
jno
aaa
cmp
outsl
das
push
jmp
insb
pop
cmp
pextrw
sbb
shll
lods
push
sub
push
push
in
jae
cli
and
mov
adc
in
pop
jno
pop
sub
cmp
ljmp
mov
inc
cld
push
adc
jbe
dec
adc
into
pop
fcoml
xor
and
jecxz
inc
jo
cmp
fisubl
das
add
mov
adc
dec
ret
cmp
test
pop
icebp
pop
scas
xor
xchg
sub
cs
out
push
lret
clc
sub
rclb
rclb
jns
scas
mov
andb
movl
and
mov
pop
jns
out
adc
mov
into
sub
xor
je
dec
mov
cmc
cmp
xchg
lods
jp
push
cwtl
fstps
push
mov
in
stos
js
movsb
adc
enter
ja
pop
or
xorl
push
push
cli
leave
or
jbe
popa
and
pop
or
push
movsb
jnp
sub
rcrl
cmp
iret
imul
rcrl
fs
add
test
push
lahf
pop
xor
int3
inc
cmp
iret
mov
ret
adc
lds
sbb
ret
in
cli
xchg
sbb
testb
xchg
push
mov
sbb
xchg
xchg
lods
inc
cli
ljmp
rorl
and
xlat
fs
fs
or
insl
outsl
inc
fwait
inc
out
mov
sbb
push
loope
sub
in
outsb
pop
or
fnstsw
in
jb
inc
lods
sbb
inc
jae
cmpsb
adc
cwtl
cmp
pop
xchg
popa
dec
ret
sub
mov
fwait
mov
fyl2xp1
daa
mov
pop
inc
sub
mov
loopne
or
mov
and
dec
fdiv
xchg
pop
cmp
test
loopne
mov
das
mov
xchg
addb
cli
sbb
call
sti
xchg
mov
inc
cmpsb
xchg
icebp
push
gs
cmp
fidivl
sbbl
ja
jne
dec
adc
cmp
mov
insl
pop
and
popa
lret
test
mov
jg
mov
cli
jb
sbb
call
mov
cmp
xchg
xorl
push
das
aaa
jmp
mov
mov
jge
cli
adc
aaa
cmovge
inc
pop
daa
jle
insb
mulps
pusha
inc
movsl
mov
sub
jno
fidivs
push
dec
into
cmp
iret
negl
sub
pop
pop
or
xor
stos
mov
jecxz
mov
loopne
sub
dec
lahf
inc
iret
jp
dec
adc
jg
insl
mov
mov
test
sub
imul
adc
lock
sub
imul
pop
outsb
fs
push
jmp
mov
stc
daa
loope
sbb
stc
sub
mov
insl
int
adc
add
loope
flds
push
mov
mov
outsl
rorb
es
mov
or
movsl
popa
sbb
xor
sbb
xchg
adcl
sub
or
adc
pop
jo
decl
mov
sub
xchg
xchg
and
fists
pop
push
adc
adc
mov
push
iret
sub
pop
push
out
push
sbbl
je
and
int3
and
in
mov
xchg
sahf
btr
fneni(8087
or
mov
or
loop
pop
cld
pop
pop
inc
sqrtps
ds
cs
or
jnp
jl
jge
ja
inc
add
std
xlat
jb
lods
shll
cltd
ss
dec
jbe
out
mov
clc
mov
pop
std
fidivs
loop
sbb
lods
push
insb
pop
jb
loopne
dec
in
jbe
imul
stos
dec
cmp
das
push
xor
mov
jl
xchg
pop
iret
mov
add
inc
shlb
or
cltd
gs
addl
push
int
shll
xchg
je
jbe
andb
mov
mov
je
cmp
arpl
test
into
pmuludq
mov
fisubrl
cli
mov
sarl
imul
sbb
fimuls
dec
das
push
sub
int
pop
decb
pop
push
jg
xlat
loope
int3
jge
xor
push
jl,pn
xchg
jl,pn
int
adc
sub
inc
push
xchg
xchg
jle
mov
jno
jo
inc
mov
scas
jb
jp
ficoml
fcmovne
sbb
mov
ret
shl
push
std
push
pusha
push
adc
push
pushf
sbb
sbb
cmp
sbb
fistpl
scas
inc
push
add
hlt
xchg
cmpsb
jge
dec
mov
mov
mov
or
sub
xor
pop
jp
jmp
sbbb
cmc
sub
das
pop
xchg
ret
jne
insl
jo
jno
stos
xor
mov
and
cli
pop
dec
imul
jne
push
xor
dec
cmc
inc
mov
stos
add
outsl
add
out
negb
ljmp
popaw
sahf
cmc
pop
fidivl
int
inc
call
cmp
mov
dec
push
or
inc
adc
sbb
mov
or
outsl
icebp
xor
test
rorb
pop
sahf
push
adc
cmp
rcll
shll
fs
out
pusha
ljmp
sbb
mov
adc
fnsetpm(287
icebp
pop
in
mov
fnstcw
es
xchg
lret
or
das
push
push
fwait
bnd
mov
push
and
rcll
push
and
invd
mov
ss
xor
out
in
scas
xchg
data16
and
mov
lret
ss
adc
mov
pushf
adc
or
pusha
or
das
xchg
mov
mov
push
pop
pop
add
mov
mov
or
arpl
lea
inc
cwtl
sub
xor
sub
aas
mov
cmc
sbb
and
into
cmpsb
push
popa
daa
or
xchg
inc
xchg
jecxz
sbb
mov
lret
hlt
push
adc
call
jmp
mov
and
or
les
inc
je
jmp
lcall
movsl
test
invd
ds
mov
push
mov
enter
ja
scas
fildll
adc
mov
sbb
cmp
in
and
or
push
fisubrl
scas
or
sbb
ret
jne
cmp
cmpsl
pop
gs
das
cmp
add
ret
cmpsl
scas
inc
or
sub
dec
mov
adc
aam
xchg
int
inc
lods
xchg
imul
rcrb
das
hlt
aad
repz
push
popa
bound
cmp
cmp
push
neg
adc
inc
mov
fbstp
int3
xchg
inc
jno
jl
fistl
movsl
into
push
xchg
pop
stos
fs
sbb
ljmp
sbb
rolb
inc
arpl
outsb
mov
test
and
and
xchg
mov
stc
orb
jmp
mov
dec
dec
arpl
mov
andl
mov
cmpl
out
mov
leave
cli
outsb
sub
bound
daa
mov
movsb
mov
call
imul
movsb
imul
cwtl
xchg
repnz
xchg
cmp
dec
jno
adc
and
out
es
mov
pusha
jmp
imul
lock
out
dec
xchg
pop
out
nop
cmpsl
rorb
das
ja
fxtract
outsb
push
xchg
sub
sub
push
mov
pop
dec
sbbb
or
jne
icebp
es
int3
ss
arpl
cmp
dec
loop
and
push
add
ret
mov
push
rcrb
jecxz
push
out
lcall
push
rorl
add
add
filds
jno
inc
jp
sub
jbe
mov
stos
jge
sbb
addr16
or
lea
sti
push
sti
cmp
sbb
arpl
outsl
xor
inc
add
mov
shlb
fadd
sbb
cmp
xchg
pop
or
ficoms
jle
pop
out
jne
int3
rolb
xchg
std
stos
pop
adc
in
das
pop
inc
and
sub
or
sbb
sarl
pusha
dec
repnz
inc
add
cmpsl
add
in
pop
mov
mov
movsb
pop
test
jg
xlat
ret
add
push
or
mov
cmpsl
aas
ss
push
aad
call
xchg
mov
popa
inc
or
icebp
sbb
xor
cmp
outsl
mov
mov
es
out
addr16
jge
pop
sub
enter
xlat
insl
imul
rorl
fmuls
fisubrl
or
sub
outsl
fs
ljmp
in
or
pusha
push
gs
sti
jb
jae
xchg
add
repnz
daa
aaa
repnz
add
cmp
dec
stos
and
push
repnz
icebp
adc
repnz
sub
dec
mov
dec
sti
cmp
out
imul
std
cwtl
xor
mov
lea
adc
lods
cmp
push
mov
out
shll
fadd
leave
stc
xchg
arpl
dec
inc
sbb
and
adc
or
inc
arpl
mov
cwtl
pusha
push
and
fistpl
push
imul
adc
mov
pop
push
test
test
inc
lahf
mov
add
mov
jo
adc
icebp
sub
stos
adc
mov
mov
int3
mov
and
into
mov
fcmovnbe
add
adc
mov
es
aas
jmp
ss
loope
js
cmpsb
xchg
cmpsl
mov
mov
popf
adc
shr
xor
imul
lods
inc
scas
and
bnd
lret
mov
adc
outsb
pop
cli
jae
gs
cmp
adc
cmp
pop
mov
mov
popf
adc
dec
das
xchg
or
nop
testb
testl
mov
gs
jns
pop
mov
shrb
lahf
pop
out
cli
std
in
adc
jle
fildl
popf
sbb
scas
push
push
mov
lods
outsl
lock
sub
sbb
cmc
dec
sub
inc
out
hlt
aaa
pop
mov
fsubs
mov
pslld
pop
lock
dec
outsb
outsb
popa
fisttpl
mov
push
test
xlat
sbb
sbb
inc
push
adc
mov
pop
xchg
inc
pushf
daa
push
outsl
aaa
inc
les
mov
mov
fisubs
jmp
mov
clc
inc
mov
pop
sbb
sub
data16
in
xchg
inc
jecxz
inc
mov
cmp
imul
inc
mov
ret
punpcklwd
stos
sbb
sub
aas
popa
imul
cmp
imul
frstor
adc
dec
and
sub
mov
dec
gs
mov
mov
xchg
sbb
xor
lret
cmp
xor
and
shll
mov
loopne
stc
aas
cmp
outsl
mov
aam
push
jmp
jle
jns
or
std
loopne
cmc
fadds
imul
mov
stos
ret
pop
xor
lods
push
fstl
movsb
leave
lcall
jl
jp
sbb
enter
adc
gs
xor
mov
dec
jmp
mov
test
lock
ljmp
jge
pusha
dec
loopne
iret
inc
sbb
fwait
cmpsl
push
cmp
pop
lock
es
and
out
sub
sbbb
cmpsl
repnz
cmp
dec
aas
repnz
pusha
mov
int3
sub
es
add
pusha
and
cmpsb
adc
xchg
lea
cltd
mov
or
xchg
mov
sti
ds
outsb
xor
cwtl
mov
cmp
dec
jmp
enter
jmp
fnstcw
jo
cli
orl
or
mov
pop
fwait
in
daa
jbe
jmp
std
sbb
mov
or
divl
xchg
int3
js
and
mov
lds
or
daa
cltd
mov
jl
fsubr
cs
dec
jnp
cmpsb
hlt
push
push
jno
push
mov
adc
or
sub
scas
cmpsb
jp
jge
sbb
movsb
mov
mov
dec
arpl
xor
mov
scas
or
pop
or
inc
cmp
enter
cmc
rcr
clc
jns
pushf
lret
aaa
inc
jl
aam
sub
cmp
jns
mov
dec
adc
andl
iret
shll
dec
cld
mov
nop
decl
jmp
push
mov
arpl
ret
enter
pop
inc
cmpsb
aaa
lcall
adcl
sbb
mov
andl
pop
fildll
dec
cmpsb
scas
xchg
sub
lret
push
mov
adc
sub
popf
xchg
add
int3
sbb
bound
sub
movsl
jle
inc
lret
clc
push
insl
in
stos
arpl
sub
and
popa
cli
pop
mov
mov
dec
mov
jns
out
mov
int
out
in
enter
test
and
call
icebp
pushf
js
lock
cmp
fdivl
push
orb
cmp
cltd
pop
xor
cli
mov
loope
pop
insb
test
fwait
sub
mov
dec
mov
in
xlat
xor
scas
mov
ror
scas
sarb
hlt
jne
inc
scas
jae
mov
pop
mov
aas
aad
aaa
cli
cld
in
imul
aad
fstps
adc
fists
push
or
rcrl
sub
push
fldenv
lods
in
jbe
jmp
push
orl
jge
clc
in
push
mov
ss
lcall
pop
or
mov
pop
xchg
adc
ror
dec
mov
daa
fwait
lods
pop
xchg
xchg
and
cld
sbb
cmp
fdivs
sub
jmp
lret
lret
sbb
push
jl
xor
jae
mov
cmp
shr
jl
inc
daa
jge
cltd
outsl
cwtl
xchg
jp
cli
es
and
mov
add
pop
push
out
arpl
and
or
xor
mov
push
jnp
sub
movsl
rcrl
in
sub
ds
out
mov
sub
ret
sbb
xlat
addb
lret
jo
inc
inc
xchg
and
mov
cmp
out
xor
mov
add
and
dec
push
dec
pop
ret
notl
or
testb
cmpsb
out
daa
xchg
jg
cmp
into
sar
xor
xchg
and
paddsb
aad
sbb
jmp
sub
push
std
push
in
popa
xchg
dec
jg
lea
add
mov
xor
lea
push
adc
movsb
stos
adc
sbb
fmul
stos
les
int
cmp
and
cmp
fsubl
out
cs
mov
push
jne
lret
aad
je
leave
sbbl
sbb
stos
jae
popa
cld
cli
movb
or
and
ficomps
scas
push
mov
adc
add
loop
faddl
xchg
lahf
mov
dec
lahf
movsb
push
lahf
cmpsb
arpl
sti
mov
mov
sbb
gs
fstpl
arpl
cltd
jg
mov
data16
and
xchg
add
fstpt
outsb
or
mov
out
sub
imul
inc
xlat
gs
ss
push
or
xor
mov
aas
mov
loop
dec
push
xor
adc
or
or
pushf
push
sbb
outsb
sub
sahf
shl
mov
js
data16
or
push
imull
lret
out
push
xor
inc
dec
ja
push
pop
jp
inc
inc
ljmp
cmpsb
add
les
cmp
cmp
mov
mov
add
hlt
jbe
add
insl
mov
mov
mov
out
mov
add
add
out
fwait
ja
xlat
pop
add
xor
inc
dec
fistpll
mov
add
xor
jle
jns
ljmp
int
mov
xor
jecxz
inc
sti
jae
fwait
mov
pop
cmp
mov
xchg
fbld
out
inc
out
dec
mov
sti
mov
fimull
insb
notl
jno
xchg
loop
inc
push
or
mov
daa
out
insl
cli
sub
xchg
imul
outsl
mov
in
push
jg
shrb
push
lods
cmpsl
or
mov
mov
pop
test
sub
mov
mov
mov
mov
scas
add
mov
jnp,pn
test
cltd
add
aam
mov
add
outsl
fimuls
outsl
js
lea
js
rcrl
add
mov
push
gs
push
ljmp
clc
fisttps
outsb
lods
stos
push
adc
inc
xor
stos
add
scas
lods
fldenv
mov
mov
icebp
sbb
jle
es
add
xlat
xor
mov
sub
setp
cltd
push
pop
daa
stc
adc
scas
mov
mov
jp
mov
mov
loope
pop
adc
ljmp
add
lahf
xor
movsl
add
pop
int
out
mov
xor
jb
sub
push
ljmp
lods
shl
test
inc
dec
cld
outsb
mov
push
sti
inc
mov
mov
into
cmp
and
push
and
movsl
orb
shl
cmp
into
jge
pushf
sti
xor
bound
addr16
jns
add
sbb
ret
mov
mov
push
xchg
or
or
fidivs
subb
lahf
push
ljmp
outsb
dec
aaa
jno
add
sub
or
and
shll
sti
jg
xchg
outsb
push
inc
push
inc
jae
xchg
popf
dec
hlt
aaa
test
fdivrl
fwait
push
inc
arpl
fwait
ret
dec
xor
sub
ss
sti
mov
lret
mov
or
out
jmp
pop
sahf
cs
xchg
aam
scas
dec
insb
sbb
cmp
loop
sbb
ficompl
ss
jbe
pop
cltd
jne
bound
andb
es
out
rorl
xor
cmc
jae
jo
add
imull
push
aaa
mov
lock
mov
xchg
mov
dec
jl
ja
aas
inc
call
ds
xchg
or
adc
pop
and
shll
cmp
mov
incb
xchg
ret
out
xchg
inc
int3
push
clc
mov
mov
jno
rorb
xchg
fsub
lds
lds
xor
imul
aas
scas
sub
sub
and
arpl
jnp
push
push
in
dec
push
cld
arpl
push
or
pushl
xchg
test
jmp
cmp
jns
mov
xchg
cmpsl
stos
xchg
mov
int
test
adc
sub
xor
inc
test
ret
xchg
cmp
xchg
mov
ljmp
mov
lcall
imul
pop
int3
aaa
iret
sbb
or
sub
push
andl
mov
ret
adc
shll
xchg
fistpll
cmp
jns
sub
dec
test
orl
bound
xlat
adc
iret
jnp
or
into
movsl
in
jl
in
adc
and
mov
fucomip
dec
push
inc
lods
dec
push
and
add
xor
cmp
rcr
nop
cwtl
push
mov
mov
scas
pop
dec
mov
enter
sub
leave
pop
lock
xchg
idivb
xor
fwait
push
inc
mov
repz
xchg
dec
out
les
scas
ss
nop
imul
dec
mov
xchg
stos
push
pusha
mov
dec
ret
pop
addr16
iret
sbb
mov
sub
mov
mov
sbbl
es
das
scas
icebp
cmpsb
or
sti
leave
jecxz
pop
mov
aad
imul
cs
pop
gs
subb
fisubrl
jle
ret
mov
clc
cltd
jno
dec
sub
dec
xlat
sti
xor
jnp
sbb
aam
in
inc
lods
lret
test
movsl
stos
sti
mov
or
pop
xchg
inc
xchg
out
inc
nop
nop
mov
add
sub
adc
ljmp
gs
cwtl
arpl
pop
test
mov
ss
movhps
stos
in
xlat
cld
xor
fisubrs
jle
cmc
sub
adc
fdivs
popf
push
ret
fstpl
dec
lds
scas
push
js
shl
int
sub
inc
hlt
lret
imul
cmpb
push
jns,pt
ret
ret
imul
xor
seta
mov
jg
mov
jmp
sub
out
bswap
and
subl
stos
xchg
aad
push
in
std
fiaddl
mov
inc
sti
push
movsl
stos
xchg
cltd
inc
push
mov
xchg
test
test
jbe
outsl
int3
rcrb
nop
repz
int
lret
mov
cs
sbb
xchg
lret
les
movsl
inc
mov
ljmp
push
pop
shrb
sub
movsl
mov
fsubrs
xor
inc
ret
mov
push
aas
outsb
xchg
add
aaa
call
fwait
mov
aad
sub
mov
jo
stos
scas
test
in
ret
jno
lcall
in
sub
add
xor
push
mov
out
pop
mov
jecxz
push
int
xchg
push
mov
shr
pop
pop
jge
xlat
fstl
pop
push
push
test
xchg
les
lcall
sub
les
jno
cltd
adc
jmp
mov
cld
xlat
inc
jge
cmc
push
icebp
inc
clc
outsb
clc
scas
aad
and
jge
cmpsl
ljmp
sar
mov
pop
or
gs
jo
mov
int3
gs
xor
push
dec
cmp
in
mov
sub
sub
in
mov
or
cmpb
xor
jecxz
jnp
ficoml
lret
mov
ljmp
adc
aad
jne
popa
hlt
mov
lods
cmp
mov
dec
in
inc
push
xchg
inc
pop
divb
pop
fadds
clc
rclb
cltd
fimull
cs
inc
mov
loopne
cli
movsl
push
out
rol
cmp
rol
addr16
iret
jge
push
mov
cld
leave
adc
pop
psubw
into
stos
push
lods
cmp
xchg
jb
xlat
jb
push
inc
imul
cmp
jge
fcomps
movsb
mov
mov
xchg
push
aaa
in
push
mov
jle
mov
adc
jecxz
cmpsb
push
loop
bound
or
scas
xor
mov
cmp
sbb
insl
arpl
jg
sbb
push
push
inc
jne
inc
mov
iret
cwtl
pop
xor
mov
sub
jb
xchg
mov
ret
sub
or
movsb
and
fpatan
fimuls
and
dec
clc
stos
cmp
inc
loopne
mov
mov
and
test
test
idivb
sbb
loope
test
jecxz
jg
jmp
je
in
mov
jge
adc
cmpb
adcb
sbb
lret
pop
pusha
pushf
fisubrs
icebp
mov
sarb
mov
inc
or
jo
in
pusha
sbb
dec
rcrb
dec
out
xchg
add
xchg
xor
stos
mov
fwait
sbb
pushf
adc
sub
xchg
roll
pop
xchg
addr16
gs
in
inc
jp
outsb
xor
sub
ret
sbb
pop
dec
adc
sbb
mov
ds
xchg
mov
xchg
leave
ja
cltd
inc
pusha
out
popa
stos
lock
sbb
popf
dec
outsb
inc
jo
jns
testb
adc
leave
add
xchg
clc
sahf
stc
out
mov
jle
shufps
and
rol
adc
push
mov
pop
mov
fsubrl
mov
aaa
shll
inc
cmp
inc
je
dec
xchg
cmp
in
fildl
adc
mov
jo
and
adc
repnz
lret
insb
aam
outsb
dec
dec
mov
push
sub
jnp
mul
sbb
inc
loop
xor
or
scas
xchg
or
sbb
pop
sti
cmp
cli
ds
int
int3
enter
decl
cmpsl
cmpsb
jb
cmp
lahf
stos
jo
mov
push
fwait
cld
negb
nop
mov
cmp
fnsave
cli
pop
mov
iret
loopne
pop
xchg
fsts
xor
add
aad
lea
ret
mov
xchg
xchg
mov
imul
fimull
pop
jns
push
sub
sbb
mov
loop
push
jnp
mov
pusha
fists
mov
and
cwtl
repz
lods
arpl
push
dec
bound
or
leave
lahf
mov
inc
mov
clc
dec
push
les
sbb
xor
lods
jmp
dec
cmpsb
insb
sbb
stos
cmpsb
pop
push
ss
push
adc
stos
and
jae
fsubrl
mov
inc
jne
je
das
outsb
xchg
inc
aaa
adc
scas
pop
popf
push
jns
or
in
pop
rorl
and
das
pop
leave
arpl
insb
in
and
sub
mulb
mov
pop
in
sbb
loopne
divl
push
push
cmpsl
shl
sahf
sbb
mov
rcl
mov
mov
int
and
mov
mov
jecxz
dec
lock
in
repnz
int
pop
and
lret
insb
repnz
stc
pop
cmp
sub
xor
mov
pushf
addl
fwait
dec
mov
sub
in
out
push
jno
xor
int3
nop
cmpsl
int
pop
std
sti
xor
push
arpl
xor
lea
push
les
ljmp
sbb
sbb
sbb
mov
into
jno
push
mov
pop
inc
inc
pop
dec
jb
lea
lret
mov
stc
push
arpl
out
inc
xchg
dec
lahf
cmc
ljmp
das
sbb
push
fcmove
es
out
out
shr
sarb
mov
mov
mov
sar
rorb
sub
xchg
in
pop
dec
pop
out
add
jo
shrl
inc
aam
psrad
rclb
lcall
bound
bound
insl
mov
aas
and
jmp
lret
dec
stc
sbb
idivb
cmp
sbb
jp
pop
clc
push
mov
in
or
inc
in
ljmp
in
mov
sahf
mov
cmp
push
push
inc
cmp
xchg
jb
xchg
xor
sub
add
fwait
loopne
lods
nop
jg
lret
mov
js
add
dec
mov
sbb
dec
scas
gs
out
ss
xor
cmp
js
movl
mov
je
ljmp
push
xchg
scas
or
lods
push
pop
in
xorb
cmpsl
pop
icebp
mov
add
jge
out
mov
clc
outsb
xchg
insb
les
cmpsb
addr16
repz
icebp
or
gs
out
cmp
imul
aas
dec
inc
stos
xchg
ljmp
adc
out
jb
or
shll
fldenv
nop
lahf
mov
imul
pop
test
aas
out
jg
push
lret
cmc
vpmacsdql
cmc
xor
cwtl
cmp
es
insl
mov
push
hlt
std
shll
dec
rcrb
jmp
cmp
pop
notb
test
pop
fildl
addb
mov
push
or
inc
push
push
rcl
nop
mov
adc
cli
jp
dec
shlb
cli
xlat
push
mov
and
out
scas
les
pop
lret
cmc
sub
aad
les
fdivs
clts
js
dec
add
loop
push
sbb
cld
mov
push
add
xor
movsl
frstor
ja
test
mov
pop
and
push
jp
sbbl
mov
push
xor
stc
mov
pusha
addr16
enter
pusha
sbbl
pop
mul
cmp
mov
and
sti
push
movsb
orb
inc
pop
pushf
push
in
imul
outsb
cmp
repnz
inc
ret
and
cmp
jo
add
sbb
sub
mov
pop
jns
xchg
xchg
dec
gs
mov
das
in
gs
outsl
sub
ss
mov
fs
lods
mov
out
loop
stc
scas
sbb
das
sbb
cmp
leave
fbstp
ja
mov
out
in
inc
loope
in
cs
mov
lock
push
push
adc
je
jns
mov
ss
daa
push
mov
lods
ds
insl
test
sbb
jno
cmpsb
mov
inc
inc
or
ja
out
mov
jnp
xchg
fnstsw
ret
daa
negb
dec
daa
rorb
mov
aas
mov
mov
jo
ljmp
test
dec
mov
or
dec
icebp
mulb
cwtl
andb
fucomip
cmp
lret
in
lods
pop
cmp
dec
lods
and
mov
and
pop
sub
aaa
and
mov
push
cwtl
jmp
sub
daa
shlb
cmpsb
xor
nop
cmp
pop
negl
cmp
mov
nop
xor
mov
lahf
test
clc
iret
dec
mov
hlt
movl
into
lea
pop
mov
jge
add
enter
mov
sub
pusha
shll
mov
stc
in
cmp
icebp
xchg
mov
pop
incb
sub
pop
outsl
loopne
sbb
mov
jns
pop
js
aas
push
lock
cmp
clc
cs
aad
movsl
dec
jnp
inc
sub
lret
icebp
or
mov
push
cmpsl
mov
mov
mov
jecxz
xor
inc
shrb
push
jne
xchg
lds
out
mov
fmul
lea
mov
mov
dec
push
xchg
sbb
xchg
sbb
out
sub
fidivs
push
jmp
cmp
and
jle
jmp
mov
dec
xor
repnz
jns
mov
mov
or
inc
imul
push
int
sbb
pop
outsl
mov
loop
jp
leave
pusha
jno
test
xor
xchg
mov
repnz
loop
mov
into
sbb
lret
add
push
pop
jne
loop
and
das
cmp
jecxz
aam
jg
xchg
fdivs
fnstenv
int3
pop
sahf
lea
fmull
arpl
cmp
push
ret
cmp
cmp
push
popf
idivb
cmp
pop
xchg
int3
jns
ja
in
std
sub
arpl
add
xor
int3
cmpsl
ja
and
jecxz
adc
mov
fcomi
add
jnp
push
lods
cmpb
lcall
jns
or
ret
xchg
scas
movsb
aad
push
fcomps
inc
jmp
into
or
in
adc
je
jbe
gs
mov
das
das
adc
jbe
xchg
xchg
xor
in
dec
rorl
or
fucomp
and
bnd
or
cmovle
out
lock
lcall
jo
dec
shld
inc
lcall
inc
pushf
sbb
inc
adc
adc
pop
notb
push
sti
jl
mov
sub
push
mov
inc
out
cmp
jb
inc
js
sub
pop
and
push
mov
sub
les
popf
or
mov
xor
out
in
inc
pop
scas
rcr
mov
mov
push
fidivs
sub
jp
loopne
testl
dec
mov
loopne
sub
xor
loope
pop
dec
push
adc
dec
jo
scas
inc
data16
jb
in
sbb
mov
push
xor
mov
mov
outsl
and
xor
call
lods
pushf
adc
fimuls
addl
pop
or
and
imul
jae
lods
mov
aam
mov
sbb
push
pop
sti
aas
dec
mulb
in
mov
mov
or
jecxz
pop
cmp
cmc
icebp
jle
mov
xor
sub
in
mov
push
or
adc
dec
mov
imul
sbb
out
mov
rcrl
loopne
sarl
pmaddwd
push
std
dec
pop
cmpsl
out
notb
dec
mov
pop
popa
push
mov
xor
jp
aad
sub
fistps
jp
xchg
jle
das
fs
insl
cs
test
dec
loope
or
fldcw
jge
inc
and
incl
or
pop
out
mov
repnz
fwait
movsl
sbb
or
push
cld
xchg
lret
inc
outsl
imulb
popa
fimuls
and
pop
jge
cmp
popa
fidivs
push
mov
aam
nop
cmpsb
pop
pop
mov
xchg
pop
sbb
xorb
int3
or
push
pop
jge
mov
ret
mov
cmp
inc
in
lcall
mov
push
xor
mov
jne
je
ja
hlt
add
lcall
stc
lahf
jbe
sbb
mov
inc
clc
pop
and
cwtl
fnsave
decl
lret
adc
xor
int3
ss
outsl
push
mov
mov
mov
aaa
jnp
xchg
jae
mov
lret
popa
inc
cld
mov
imul
jl
rorb
sub
popf
pop
jns
dec
mov
push
push
fwait
cmpsb
push
test
enter
xor
mov
pop
mov
xchg
xor
sub
dec
adc
lock
mov
ret
je
cmpsl
aad
mov
push
pop
int
pop
pusha
jns,pt
sbb
pop
cwtl
test
xchg
push
adc
fwait
mov
mov
mov
push
test
loopew
mov
pusha
fldl
iret
insl
and
push
push
jmp
mov
shlb
data16
jecxz
loope
sbb
out
mov
rolb
aas
filds
out
sbb
sub
loope
push
and
cmpsb
adc
pusha
jge
shl
orl
sub
jp
xchg
or
xor
stos
imul
cwtl
sub
sub
sarl
add
jmp
cmp
lcall
repz
rcr
rcrl
daa
xor
jnp
fisubl
pop
aaa
jg
xchg
pop
loop
test
adc
mov
sub
lcall
add
aad
cmp
add
aas
cmp
andb
movb
pavgw
mov
bound
nop
inc
shrl
add
leave
insb
and
stos
adc
leave
inc
inc
outsb
jp
xor
sub
imul
lea
jmp
add
lock
cmc
xor
jns
das
mov
stc
sbb
add
xchg
out
cltd
xor
add
jbe
adc
imul
jo
repz
mov
into
mov
orb
pop
mov
and
jb
roll
add
jle
pop
jmp
adc
or
mov
push
notl
cmp
test
popa
dec
or
inc
and
call
daa
sbb
aad
testb
jle
push
push
adc
pusha
xchg
sub
lds
xlat
push
inc
jne
pop
pushf
aas
xchg
test
loop
jecxz
xor
lods
add
dec
insl
out
add
pusha
popf
push
add
subb
dec
mov
push
push
pop
or
mov
dec
test
xchg
stc
or
inc
sbb
or
xchg
jo
xchg
mov
faddl
jge
aaa
mov
imul
mov
inc
cmp
xor
jp
sbb
addr16
sbb
mov
daa
out
jmp
cmpsb
scas
jecxz
xchg
hlt
int
rclb
ss
inc
arpl
xchg
pusha
out
into
jbe
jp
notl
fdivrl
pmuludq
scas
xchg
lds
clc
mov
outsl
daa
stc
popf
pop
push
cmp
inc
stc
sbb
xchg
cmp
jno
sbb
aad
mov
je
std
cmp
jns
push
adc
and
cmpsb
pop
fs
sub
mov
cmp
mov
fdivrl
sbb
in
and
lahf
ljmp
and
dec
mov
push
adc
insl
lcall
aas
cld
rclb
adc
push
arpl
enter
fdiv
mov
insb
xchg
clc
xchg
lds
push
loope
stos
pop
mov
pusha
and
dec
enter
xchg
and
shlb
fadd
adc
inc
dec
sahf
jg
adc
js
js
sbb
xchg
ret
pop
mov
sbb
inc
fcmovb
fisubl
sub
cmc
fiaddl
in
dec
in
shl
pushf
push
push
adc
and
adc
jb
jnp
insl
push
dec
lahf
lahf
out
lret
sub
or
hlt
adc
sbb
jl
lret
lds
adc
shlb
shrb
ror
mov
jne
lods
out
ljmp
movsb
pop
ljmp
lds
loope
cmp
loopne
mov
in
leave
pop
das
outsl
jnp
ljmp
pushf
mov
fs
pushf
push
or
clc
adc
jae
push
dec
lret
fistl
mov
add
add
call
loope
sbb
mov
std
lea
jecxz
xchg
pop
push
arpl
out
lds
aad
mov
push
inc
ficoms
pop
dec
iret
inc
ret
dec
test
cwtl
ss
lock
loop
and
sarb
and
aaa
mov
testl
or
adc
pop
sbb
jmp
inc
and
jnp
fstpt
pop
hlt
adc
int
push
imul
sub
lahf
inc
or
push
mov
daa
mov
cmp
icebp
or
scas
inc
dec
or
sahf
ficomps
jl
std
mov
jle
push
inc
shll
les
xorl
mov
jl
jge
jmp
hlt
dec
mov
into
insl
or
filds
das
mov
mov
dec
aad
xor
aaa
mov
lcall
sarl
push
repz
adc
mov
sub
pop
test
cltd
in
sub
les
cmp
dec
in
cmpsl
jle
mov
cwtl
lock
in
aaa
rcrl
lea
aad
out
bound
cmpsl
xchg
ds
repz
vmovmskps
jge
adc
popf
cmp
pop
mov
js
jg
outsl
pushf
xchg
in
sub
add
push
out
out
pop
imul
test
pop
mov
and
add
and
pop
inc
inc
mov
push
xchg
idiv
lock
scas
ljmp
test
int3
dec
cli
cltd
adc
push
xor
mov
jg
xchg
push
out
fisubl
andb
xor
add
jmp
mov
inc
sti
xchg
mov
dec
jg
andb
into
scas
push
lock
addl
aaa
fs
adc
push
mov
iret
push
sub
add
xor
movsl
push
decl
inc
loopne
iret
mov
cmp
cmp
sub
or
lods
mov
push
cwtl
push
mov
jb
xchg
movsl
pop
les
popf
aam
jo
xchg
hlt
jbe
fiaddl
dec
call
sub
std
sub
xchg
jno
sarl
ds
and
cmp
cld
lret
adc
enter
mov
push
lods
imul
mov
push
in
push
cmpsb
fmuls
sub
es
mov
inc
shlb
movb
jge
hlt
dec
sar
imul
mov
or
pop
xor
cmp
in
scas
jb
xor
andb
das
or
jecxz
mov
gs
fs
clc
aad
insb
dec
cmp
sub
inc
or
shll
enter
jl
mov
lds
ret
adc
repnz
iret
inc
mov
pop
inc
mov
cmc
into
mov
aad
mov
mov
in
push
inc
cld
cmp
das
sarl
out
rolb
lcall
sbb
pop
andb
inc
lock
xorb
and
push
mov
ror
jo
dec
push
es
rorb
push
push
aaa
sub
sbb
sbb
hlt
cs
pop
push
pop
jae
sbb
push
stos
dec
mul
outsl
push
in
rcl
cmp
call
pop
aam
pop
cmp
and
cmpsl
out
mov
sub
mov
jno
push
mov
inc
cmp
int3
cli
lcall
stos
inc
add
daa
adcb
test
xchg
leave
lods
addr16
adc
pop
stos
fdivl
cltd
xlat
mov
lahf
shl
out
mov
das
fimull
inc
sub
add
mov
jle
addl
or
jae
scas
test
or
mov
add
mov
xor
mov
test
test
cmp
fistl
fadds
jbe
adc
jae
clc
out
sub
mov
inc
call
aas
adc
sbb
fistl
jo
mov
dec
stc
ja
ret
xchg
sbb
fnstsw
sbb
shrl
jmp
adc
fwait
adc
xchg
repz
leave
xor
mov
inc
jle
add
pop
sub
test
mov
sub
xor
fsubrs
and
sub
lock
mov
mov
test
pop
das
or
inc
jno
rolb
cmp
xchg
xchg
dec
dec
in
inc
mov
inc
sahf
jmp
outsl
mov
outsb
rcll
outsl
push
xchg
cmp
push
in
inc
pop
pusha
call
rorb
adc
das
xchg
add
push
mov
lea
lcall
lcall
rcrl
sbb
pop
xor
pop
cld
repz
pop
int
lahf
fidivs
ficomps
adc
not
and
jecxz
and
mov
pop
lock
lock
push
cmp
mov
lods
xchg
xor
push
pop
scas
sub
test
loope
push
js
and
or
loopne
and
pusha
and
imul
adc
adcb
cmp
bound
adc
cmp
cmpsb
adcb
mov
ret
dec
pop
jl
add
add
mov
popa
fs
adc
pop
push
adc
sbb
std
push
es
xor
mov
lods
dec
outsl
adc
xchg
and
lods
loop
mov
jmp
rcrl
aam
addb
lock
mov
sub
mov
fwait
cmp
and
sahf
adc
adc
neg
xchg
rolb
sti
and
mov
ret
mov
sub
xchg
loopne
jmp
repnz
cmp
mov
lock
jo
pop
push
inc
push
and
les
mov
cmc
mov
cmc
xchg
xor
cmp
mov
pop
ret
mov
cli
bound
add
mov
jne
ljmp
pop
inc
mov
andb
out
out
mov
hlt
movsl
push
mov
or
mov
ret
addr16
xchg
and
sbbb
pavgb
out
push
lds
test
dec
ss
testb
addr16
nop
inc
inc
pop
lret
fcoml
push
add
out
enter
std
cmpsb
das
jmp
sbb
cli
adc
jb
jbe
pop
fistpll
cmp
rcl
jns
ljmp
add
mov
out
push
orb
sar
xchg
jns
into
ljmp
imul
or
jp
and
inc
mov
imul
lret
mov
mov
add
in
jno
cli
add
sbbl
xchg
lea
in
aam
fldz
call
pop
xlat
mov
loopne
std
fs
xor
repnz
inc
xchg
dec
enter
loop
inc
gs
dec
sbb
jbe
xchg
xchg
mov
sub
jnp
dec
xchg
pop
xor
sub
repz
pop
adc
xor
sub
into
mulb
movsb
lock
xor
insl
jnp
es
pop
xlat
cli
lods
mov
mov
pop
push
xor
or
stos
pop
int3
lret
xlat
inc
out
sub
mov
rorl
loop
shrb
mov
dec
enter
cs
sub
jae
lods
cmp
add
ljmp
fadds
ljmp
or
dec
and
and
add
lds
pop
cmp
and
or
inc
sbb
int
xchg
mov
adc
ret
fnstsw
xchg
and
dec
dec
ret
mov
xlat
or
or
and
push
movsb
xchg
pusha
repnz
ljmp
sbb
sbb
jne
cwtl
pusha
mov
jne
inc
fwait
iret
mov
xlat
adc
mov
es
push
mov
in
jge
in
pop
cmp
pop
or
idivl
inc
test
ljmp
inc
push
pop
sahf
out
or
ret
mov
cmp
inc
aaa
loop
lahf
sub
pop
inc
leave
insl
mov
mov
push
or
ss
mov
inc
xor
jl
mov
dec
and
inc
mov
sbb
cmpsl
mov
fs
imul
jb
jmp
add
sbb
mov
lea
jb
mov
xchg
jnp
xchg
inc
add
mov
jge
sti
cs
jl
jg
adc
mov
ja
or
addw
lods
cld
sbb
std
lock
out
leave
repz
out
mov
in
jno
mov
aad
mull
and
jo
sbb
test
xchg
mov
out
dec
movsl
mov
lock
pop
ret
push
inc
fistps
pop
addr16
sbb
mov
fmull
or
inc
push
inc
ret
cli
fs
mov
pop
xchg
mov
jne
mov
int3
push
jecxz
insl
sahf
mov
xor
and
jle
push
mov
stc
je
jne
adc
or
add
xor
fcomi
xor
movsb
dec
mov
fdivl
xor
out
push
add
xor
xchg
xchg
jmp
daa
mov
dec
das
in
faddp
cmp
fimuls
xchg
sub
call
fs
jae
or
lea
or
test
pop
inc
push
dec
pop
mov
dec
xchg
sbb
iret
pop
push
pop
mov
jle
inc
add
adc
mov
or
dec
mov
out
mov
mov
insl
fsubp
sbb
popa
mov
inc
fisttpll
enter
movsl
fisttpl
movsl
push
mov
adc
adc
sahf
aaa
or
sbb
cmp
dec
testb
sbb
pop
hlt
jle
pop
xchg
mov
addr16
cmc
clc
sarb
inc
pop
fisubl
enter
sub
sbb
sbb
sub
mov
cld
mov
dec
aam
mov
loop
xchg
gs
push
fwait
add
mov
sbb
stos
popf
rsqrtps
into
imul
aam
add
js
sub
pop
cmpsl
ret
adc
mov
mov
rcrb
jno
pop
daa
lock
shl
xorb
hlt
fcoms
add
mov
and
adc
ljmp
repz
mov
mov
mov
xor
push
scas
std
jle
xor
pop
cltd
dec
push
xor
fmull
xlat
push
add
mov
out
pop
icebp
icebp
movsl
jbe
lods
mov
add
cmpsb
ss
lods
jmp
dec
daa
lods
jecxz
add
sbb
lods
outsl
repz
or
sbb
iret
shlb
mov
es
aam
xor
jbe
or
add
jecxz
mov
or
popf
mov
je
mov
and
sti
andl
sbb
pop
xor
nop
fstl
sub
mov
in
pop
adc
mov
xchg
shrb
or
lds
sbb
pop
pop
fldcw
add
jbe
mov
je
xchg
push
lea
push
cmp
inc
cli
fs
movsl
sbb
pop
add
ficomps
mov
xchg
bnd
aaa
cmp
hlt
lret
js
mov
aad
mov
loope
xor
aaa
fildl
jle
ja
loope
addb
push
rorl
cltd
repz
lahf
or
out
jmp
gs
rorb
pushf
push
mov
arpl
dec
out
xchg
pop
scas
gs
mov
ret
pop
push
loope
bound
jne
sbb
jo
sbbl
sub
sti
add
nop
xchg
lods
stos
xor
jge
hlt
cld
int
std
push
add
xor
inc
aam
mov
enter
inc
xchg
mov
mov
inc
in
or
daa
lret
rcrl
aad
mov
aas
jmp
and
add
push
adc
aam
dec
add
push
arpl
push
movsb
add
pop
popa
xchg
cld
mov
out
insb
push
into
lock
out
sub
repnz
dec
addr16
sar
jno
shll
sub
push
test
mov
shll
les
in
push
enter
mov
xchg
movsl
maskmovq
imull
cs
iret
inc
mov
mov
add
cmp
shl
lahf
pusha
push
cmp
dec
insl
daa
inc
and
cmp
push
push
ror
cmp
jecxz
xchg
and
int3
push
jno
sub
xchg
inc
lea
fbstp
pop
pop
lcall
int
cmp
iret
out
jmp
mov
add
or
sub
pusha
and
mov
insl
push
pop
loope
adc
lahf
fwait
jge,pn
in
or
dec
sbb
push
jl
sbb
call
outsl
ret
fwait
shr
mov
test
pop
call
mov
mov
jp
add
lock
loopne
inc
mov
cmp
lret
rcl
add
test
iret
rclb
pop
fldenv
sub
lret
sub
mov
into
imul
or
cmpsl
mov
fwait
sbb
push
mov
pop
cmc
fcoml
sbb
sub
jg
mov
pop
pop
negb
pop
daa
xor
bound
adcl
cltd
pop
sti
mov
cmpsl
push
mov
cmc
mov
insl
jbe
mov
push
jae
adcl
sub
pop
jo
daa
mov
jae
and
mov
cmp
or
or
imul
push
and
dec
push
pop
push
mov
dec
jne
loopne
cmpsl
scas
popf
repz
loop
cld
lea
push
lods
sub
add
dec
clc
ljmp
push
lahf
sbb
lds
mov
arpl
xor
dec
xchg
test
loop
sbb
xor
lock
addl
stc
add
insl
mov
into
aad
inc
jle
and
or
mov
xchg
jp
jecxz
mov
xchg
or
in
xor
mov
mov
mov
ret
cmp
xchg
or
bound
cmp
jb
xchg
mov
in
mov
ds
insb
inc
cmp
cmp
dec
jmp
rcrl
xchg
sti
adc
dec
push
sbb
into
sbb
popf
sbb
push
cmpsl
inc
fnstenv
push
outsb
add
pop
mull
inc
ljmp
nop
push
js
mov
xlat
push
sbb
ror
jns
adc
and
sub
and
int
aas
xor
mov
int
jnp
sbb
push
pop
mov
movsl
out
lahf
mov
bound
add
ljmp
jo
mov
outsb
adc
adc
cmp
aas
mov
orl
xlat
sbb
cwtl
int
push
inc
jle
and
or
push
push
push
cmpb
insl
test
outsb
mov
mov
aam
jbe
int
sbb
mov
cwtl
xchg
aaa
stc
push
out
stos
lock
cmp
xchg
in
add
pusha
sbb
mov
mov
push
cltd
cltd
jge
pop
xor
dec
iret
fadd
adc
pop
clc
sbb
popf
jp
xchg
pop
mov
xchg
mov
jb
daa
xor
pop
lret
inc
negl
mov
ss
adc
daa
lds
or
inc
inc
cmc
js
mov
jne,pn
movsl
adc
xchg
sbb
dec
sbb
mov
mov
in
gs
sbb
jns
ficomps
mov
icebp
rol
sti
add
insb
jb
ficoms
lcall
jle
es
add
ds
mov
ret
pop
mov
push
scas
fisubl
popf
popf
dec
xorb
std
fidivrl
jp
push
pop
nop
xchg
enter
test
in
sub
out
decl
cltd
adc
mov
adc
lret
and
xor
jne
adc
gs
add
jg
jb
sub
incl
repz
jb
cwtl
inc
and
add
les
xchg
ret
repnz
mov
ja
testb
xor
out
cld
dec
jecxz
jp
and
dec
sbb
xor
repz
xchg
adc
inc
pop
adc
mov
out
sub
arpl
dec
xor
movsl
pop
ss
arpl
push
xor
jmp
pop
mov
sbb
out
lods
xor
ja
xor
test
cmp
or
push
movsb
sarb
xlat
mov
rol
loop
rorl
test
stos
pop
xchg
add
pop
sub
ljmp
xchg
sub
cmp
pop
jp
in
lods
add
int3
sti
lret
dec
push
stos
xor
sub
pop
roll
fimuls
mov
jmp
add
call
pusha
jmp
testl
adc
sub
popa
enter
lock
stc
pop
ljmp
adc
repz
repz
stos
mov
mov
lods
lods
inc
notl
mov
mov
daa
ljmp
adc
mov
popf
push
lods
clc
adc
inc
add
lds
sbbb
out
cmp
dec
inc
adc
adc
and
lahf
dec
in
dec
or
repz
add
cmpb
das
sbb
jmp
push
dec
movsl
out
jge
lahf
sub
xchg
inc
lcall
mov
push
xor
and
mov
inc
xchg
push
mov
lock
in
dec
pop
pusha
mov
inc
in
xchg
popa
mov
jmp
out
add
leave
fsubrp
push
cmp
out
xchg
in
adc
jo
mov
movsl
jbe
push
dec
cmpsl
into
test
popa
dec
inc
in
push
and
add
cmc
add
pop
daa
lret
adc
mov
mov
ret
xlat
mov
ror
cmp
jmp
dec
and
scas
int3
mov
cmp
push
mov
dec
mov
sbb
movsb
and
lods
push
pop
sub
fistpll
nop
mov
push
loope
js
mov
sbb
int3
add
subb
scas
jbe
incl
into
faddl
inc
xchg
mov
pop
and
shlb
stos
mov
std
loopne
mov
hlt
cmp
out
push
mov
mov
bound
push
sub
outsb
adc
stos
sub
dec
jmp
cmp
sub
dec
stos
int3
in
mov
rcrb
pusha
out
bound
pop
mov
bound
xor
pop
push
cmpsl
pop
sbb
push
push
fistps
jg
or
outsl
movsb
test
mov
push
xor
inc
fimull
adc
jns
mov
inc
test
test
cmp
add
push
sub
ds
dec
fistl
push
or
insl
scas
lahf
imul
xchg
mov
test
sub
jns
aaa
add
push
ljmp
and
movsl
mov
mulb
mov
lods
popa
pop
pop
push
mov
and
cltd
mull
fistl
mov
clc
pop
mov
out
aam
pop
clc
test
lret
scas
roll
mov
and
leave
addb
movsl
rcl
cld
mov
sbb
mov
sub
faddl
dec
add
cwtl
loopne
pop
sub
jbe
cmp
sbb
jmp
mov
cld
in
fs
fbld
jno
cmp
xlat
sub
daa
lcall
jle
data16
addb
int
aad
xor
mov
cmp
sub
movsb
add
dec
inc
fwait
test
adc
or
into
iret
inc
push
xor
cs
lods
inc
pop
decl
popf
cmpsb
ret
and
jno
stos
sbb
out
popf
das
divl
fisttps
sub
nop
mov
imulb
add
push
push
es
inc
out
or
stos
ja
ds
xor
cs
jmp
mov
flds
pushf
push
sti
xchg
sub
dec
scas
cmpl
sub
mov
add
pop
fnstsw
iret
cs
and
and
mov
cmp
frstor
sahf
ds
xchg
cli
mov
cmp
stos
xor
dec
dec
sbb
cli
je
pop
jo
mov
mov
pop
xchg
xor
mov
mov
pop
pop
in
lods
xor
loopne
rolb
out
jl
lock
add
pop
mov
and
aam
imul
adc
arpl
jo
and
xor
imul
dec
mov
sub
push
add
xorb
push
jno
push
sbb
sbb
shr
cmpb
les
push
mov
lahf
or
movsb
xlat
mov
inc
arpl
sbb
inc
inc
mov
mov
jp
in
sub
int
roll
mov
orl
stos
xor
sbb
daa
xchg
sarb
jecxz
xchg
sbb
jnp
push
lret
out
xchg
subl
mov
sub
imull
jl
add
cmp
fdivrp
stos
dec
movsb
nop
and
mov
xlat
mov
bound
add
inc
inc
ret
inc
out
sti
and
icebp
jns
xor
outsb
mov
xor
call
pusha
xor
je
jecxz
jbe
lcall
mov
mov
lahf
xchg
dec
dec
sub
rol
dec
cmp
mov
push
insb
mov
divl
mov
inc
cmp
xchg
test
xchg
into
clc
push
and
cli
test
mov
xor
pop
cwtl
jmp
insl
fildl
inc
test
push
sahf
std
xor
ret
data16
leave
adc
sub
sub
into
adcb
in
int
adc
ds
test
jle
cmp
xor
adc
int3
jmp
push
enter
ds
mov
std
mov
ret
inc
xor
dec
xchg
sbb
cmp
xorb
arpl
xor
stos
call
clc
bound
lcall
addr16
mov
call
rolb
lods
mov
sub
fbld
iret
pop
and
ja
test
pop
jb
shlb
jo
jmp
pop
cmp
and
shrl
nop
mov
jbe
ja
stc
hlt
cmp
xor
mov
xchg
loope
shll
daa
cmp
orl
loopne
hlt
js
push
out
sbb
scas
lcall
test
dec
jb
sbb
insl
test
filds
jecxz
sub
push
inc
sub
int3
jle
inc
mov
call
pop
stos
rol
add
lcall
ja
cmpsb
pop
data16
in
test
push
call
xor
movsb
ljmp
add
mov
jecxz
adc
jge
fsubrs
jne
fadds
cltd
lea
imul
sbb
aaa
mov
inc
lock
push
sub
cmp
and
ljmp
sub
aas
sub
adc
mov
inc
or
sub
fwait
sbbl
xchg
or
frstor
lods
shlb
test
push
repnz
in
insb
cmc
pop
shr
xor
ljmp
mov
packssdw
cmp
movsb
imul
add
add
cmpsl
aad
pop
and
jmp
push
pop
jge
adc
xor
dec
sub
sub
xor
pop
stc
das
mov
sbb
in
sub
loope
add
aaa
nop
in
xchg
and
push
xor
push
mov
inc
dec
arpl
nop
incb
iret
test
fld
outsb
dec
pushf
fisubrs
inc
add
mov
or
sarl
and
xchg
or
int3
in
jmp
xchg
loopne
das
dec
mov
or
fistpl
xor
inc
jp
xchg
jb
adc
fistpl
lods
mov
mov
test
jae
popf
mov
je
int3
and
mov
mov
xchg
cmp
lea
mov
xlat
jmp
mov
or
lcall
std
test
or
dec
or
mov
lods
xchg
pop
rclb
cmp
mov
xor
mov
int3
into
cmp
mov
dec
cmp
sti
enter
icebp
test
pusha
jb
test
xchg
xchg
pop
and
hlt
popf
lea
mov
cld
mov
sbb
mov
les
hlt
jecxz
mov
scas
inc
add
dec
mov
cld
out
cli
ss
shlb
jl
xchg
dec
cmpl
and
je
jae
push
stc
or
add
and
push
mov
or
cmp
gs
or
stos
sub
cmp
fbld
xlat
scas
flds
pop
jne
in
cmp
pop
or
test
mov
push
cmp
adc
in
xchg
ds
mov
push
enter
mov
pushf
pop
stos
mov
ret
lahf
inc
test
pusha
jne
mov
leave
movsl
int3
inc
sub
popaw
push
das
push
dec
xchg
sub
push
inc
cltd
add
int3
ss
aaa
add
outsl
int
inc
fdivl
mov
push
and
push
or
push
xor
in
fwait
sbb
jg
push
and
pop
stc
pop
inc
loop
cs
mov
dec
gs
pop
xlat
movsb
inc
movq
push
pushf
xor
fimuls
dec
sub
xchg
mov
cs
rcll
fnstcw
push
pop
sbbl
ret
mov
cmp
push
cmp
test
nop
sbb
pop
inc
inc
jbe
and
cmp
scas
xchg
frstor
stos
cs
sarb
jg
mov
add
jno
mov
xlat
mov
sub
mov
inc
add
cmp
push
add
xor
and
push
mov
jae
dec
xor
add
pusha
movsb
decb
push
mov
and
mov
xchg
call
clc
sub
icebp
add
inc
aam
in
sbb
ret
scas
lods
leave
push
pop
lock
add
push
adc
and
xchg
and
sbb
sbb
mov
xchg
sbb
popf
mov
add
sub
je
xchg
pop
gs
imul
or
push
call
jp
sbb
std
inc
ret
test
iret
pop
cwtl
or
push
pop
push
mov
out
xchg
fimull
mov
push
int3
jl
cmpsb
xchg
insb
mov
fs
or
mov
sbb
inc
xor
pop
les
outsl
je
push
cmpsb
fadd
setge
je
dec
loopne
fdivrl
je
arpl
lods
adc
shlb
fiadds
aas
and
push
cmpsb
adc
nop
mov
xchg
into
mov
add
xor
and
lcall
pop
inc
mov
jg
xorl
roll
repnz
sbb
in
ja
and
mov
ss
mov
insb
lea
lea
pushf
test
cmc
xchg
xchg
pop
mov
pop
push
mov
rcrb
mov
in
sbb
gs
inc
rcrb
push
cmp
lret
icebp
xchg
and
inc
mov
or
pusha
or
xchg
imul
call
das
push
xor
cmp
push
dec
jae
outsl
mov
and
mov
jns
fistpll
push
scas
fsubr
push
or
jecxz
push
or
aam
enter
cltd
les
into
shll
dec
mov
ja
mov
dec
mov
adc
dec
sbb
lahf
cwtl
mov
xor
lea
lcall
arpl
fs
nop
mov
adc
js
inc
stos
in
mov
inc
mov
and
jbe
js
adc
sub
je
shrb
nop
bound
add
push
insl
push
and
nop
aad
cli
xchg
push
add
fwait
sub
ljmp
dec
fsubrs
xor
add
xor
ret
lods
adcb
in
pop
shrb
sub
sbb
dec
sbb
sbb
mov
das
adc
sub
jbe
cmp
mov
addr16
out
pop
push
pop
test
dec
arpl
les
int
outsl
clc
enter
xchg
inc
jo
loop
mov
lea
xchg
inc
sbb
cltd
in
sub
sbb
sub
cmc
outsl
gs
dec
loope
dec
out
test
cmp
jo
pop
repz
int
outsl
mov
push
cmpsb
mov
test
xor
aaa
mov
push
and
icebp
push
xor
in
cwtl
test
in
and
cmpb
mov
jae
xor
lcall
out
mov
out
or
scas
xchg
das
sahf
mov
loopne
fmull
sbb
push
fstpt
adc
shlb
dec
or
mov
popl
popa
test
xor
adc
sub
sub
xlat
fs
xor
ljmp
in
cmpl
jb
int
xor
mov
icebp
sub
out
xchg
sub
pop
lock
xor
and
repnz
call
out
sbb
xor
lock
xchg
enter
sbb
mov
cmp
push
es
mov
lret
jp
lret
inc
mov
pop
jp
test
lods
jne
push
lahf
test
push
mov
mov
xor
into
bound
test
aas
jne
popa
pushl
push
jnp
shl
pop
sbbl
cltd
adc
das
ja
aad
int
sub
test
mov
mov
xchg
push
addr16
jnp
fstps
mov
push
repnz
or
pusha
dec
hlt
outsl
dec
icebp
or
mov
outsb
enter
rep
push
and
call
test
push
push
jl
pop
insl
mov
mov
call
pop
or
cmp
or
mov
call
dec
stos
sbb
dec
xorb
inc
sbbb
popa
adcb
and
xor
mov
jno
repnz
in
subl
daa
ja
fildll
pop
cmp
out
add
pop
pop
aaa
rolb
nopl
iret
rol
xchg
push
repnz
xor
mov
cmpsb
ljmp
lea
push
movsb
ret
cld
cmp
mov
les
xchg
push
xchg
mov
es
sbb
add
fistps
jl
cmc
cwtl
imul
mov
pop
clc
jb
or
arpl
outsb
std
push
jle
lea
push
inc
sbb
fistpll
in
cmpsb
pop
mov
mov
xchg
jle
cmp
loope
aas
movsl
rcll
mov
sub
das
test
dec
out
fwait
icebp
hlt
ret
pushf
mov
mov
mov
xchg
pop
cmp
pop
clc
sub
roll
sub
pusha
xchg
fs
inc
ss
les
mov
add
sbb
cmp
daa
jecxz
mov
into
or
sbb
sub
or
dec
out
ljmp
push
scas
test
pop
sbb
cmp
sbb
cmpsb
inc
gs
cmp
aas
sbb
shrl
ret
rclb
adc
cwtl
out
or
shrl
mov
push
stos
in
mov
fiaddl
movsl
loop
ret
adc
jae
push
out
sub
inc
inc
rorl
sub
out
xchg
jp
and
and
aas
test
xor
pop
xchg
and
dec
fs
fcomi
add
xor
push
aas
movsl
mov
jmp
cmp
xchg
cmp
std
adc
in
cld
jbe
mov
jmp
popf
and
xor
fstl
aad
xorb
mov
jl
xlat
sub
jae
adc
into
repnz
xchg
sbb
lahf
cmpsl
add
mov
les
jmp
fisttpll
ds
cmpsb
shlb
in
xchg
adc
out
inc
fcom
mov
in
or
jno
movsl
out
push
rcrb
cmp
lea
jle
lret
stos
sahf
add
dec
icebp
subb
lcall
jecxz
sbb
and
push
mov
stos
or
sbb
jmp
jl
push
in
push
adc
fcomps
cmp
cmpb
pop
inc
test
call
fbld
in
gs
push
sbb
xchg
push
ret
jle
cmp
pop
imul
mov
pop
insb
das
dec
inc
movsl
popa
fsubrs
cmpsl
ljmp
aaa
push
movsl
xlat
ret
pop
push
sbb
sub
push
sub
push
and
mov
test
scas
arpl
pop
or
pop
ljmp
imul
cmp
aam
push
in
aaa
jge
and
dec
mov
mov
cmp
mov
xor
push
cli
dec
ss
add
fwait
xchg
pop
cmpl
call
addr16
xlat
lds
imul
fmuls
cmc
nop
or
mov
nop
fnstsw
add
mov
imul
imul
andl
cltd
mov
cmp
arpl
pop
pop
xchg
sub
sub
test
out
mov
jl
xor
xchg
call
mov
mov
xchg
test
ds
std
add
sti
ret
rcl
mov
mov
stos
adc
xor
jle
pop
dec
pop
jg
xchg
jle
int
cs
popf
scas
cltd
and
push
ljmp
ret
xchg
int3
cmp
push
add
mov
xor
xchg
pop
ljmp
xchg
cmp
mov
sub
das
push
fadds
push
shrl
mov
sbb
cmpb
push
jne
mov
fwait
jbe
and
js
cmp
aaa
jnp
enter
mov
mov
fcoms
cwtl
fistpl
mov
adc
cmp
add
mov
aaa
add
out
inc
js
xor
out
sti
aam
ljmp
ja
in
out
pop
cmp
iret
add
in
adc
inc
pop
orl
repnz
cmp
adc
loope
jg
pop
sahf
sub
stos
and
fsin
jbe
orl
bound
ss
in
les
scas
leave
mov
inc
jle
repnz
cld
ja
leave
adc
and
dec
xchg
cwtl
cwtl
xor
rolb
pop
xchg
js
inc
lods
stc
loop
mov
push
movsl
jmp
pop
mov
cmp
fdivp
push
les
ja
pop
adc
mov
shrb
mov
cwtl
dec
sbb
push
aaa
mov
fsubrl
mov
add
addr16
enter
fwait
and
jl
les
mov
add
mov
xor
movsb
pop
xchg
and
into
xchg
shrb
cmp
or
fs
lods
outsl
mov
sti
leave
fsubs
sti
jge
add
inc
cmpsb
mov
adc
cmp
in
sub
mov
pushf
or
pop
add
bound
xchg
mov
xchg
xor
inc
int3
shrl
cmp
rclb
cwtl
stos
ret
mov
mov
mov
xchg
mov
out
loopne
out
lock
rolb
and
enter
sbb
out
neg
in
xchg
xchg
lds
hlt
adc
call
mov
jl
iret
pop
mov
sbb
push
mov
pushl
adc
xchg
lock
add
sub
outsb
xchg
pushf
js
xchg
aas
dec
lods
ret
mov
fst
loope
int
ss
jno
and
cmp
pop
fcmovu
sbb
cmp
push
cmpsl
div
ret
mov
mov
push
cmp
add
loop
dec
das
cmp
mov
sbb
pop
xor
lcall
sbb
jns
out
dec
in
lods
sub
inc
push
adc
std
lahf
pop
fldt
mov
pop
loope
cmp
bound
andb
fadd
fld
dec
jecxz
dec
sbb
leave
jne
outsl
jbe
mov
inc
loopne
xchg
lods
incl
sub
cltd
cmp
mov
bnd
mov
or
cmc
dec
sbb
mov
xchg
push
pop
push
cmp
out
cmpsb
jecxz
jg
inc
adc
loopne
test
mov
sbb
push
and
stos
mov
and
xchg
push
xor
out
inc
or
test
aam
sub
fwait
pusha
outsl
orl
das
jbe
sbb
rorl
cwtl
sub
xlat
aad
mov
adc
rcll
lea
clc
in
std
mul
ret
pop
packsswb
jnp
pop
mov
xor
and
xchg
lods
lds
push
cmp
lds
js
jmp
jb
sbb
ljmp
je
dec
stc
inc
je
shl
sbb
pop
je
test
jle
dec
push
shll
leave
inc
sub
adc
and
and
push
incl
js
mov
out
rcrb
push
mov
ret
clc
cli
out
xor
pop
sub
ds
fiadds
cmpsb
aam
push
pop
cmp
sbb
add
mov
imul
inc
stos
inc
sbb
lret
xchg
mov
pusha
inc
or
add
test
leave
stos
ja
mov
push
or
scas
rcrl
sbb
adc
adc
jmp
xchg
push
add
xchg
dec
punpckldq
sahf
add
in
sbb
mov
aad
and
sub
mov
mov
dec
out
mov
mov
jge
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
lea
push
call
test
je
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
call
movl
jmp
movb
movb
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
push
call
movb
mov
add
mov
mov
pushl
pop
mov
movl
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
movl
call
mov
push
mov
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
push
push
call
lea
push
call
push
call
cmpw
mov
push
je
call
push
call
add
jmp
push
push
push
call
incl
addl
scas
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
mov
adc
jne
inc
dec
sahf
mov
xor
incl
push
in
test
cmc
mov
cld
add
sbb
rcll
cmc
sbb
in
inc
movsb
bound
xorb
je
mov
ss
int3
mov
lret
or
jno
rolb
mov
popa
or
cmp
push
in
cmp
mov
addl
movsb
add
gs
xchg
pop
shl
pop
mov
lret
or
jno
shl
aam
ds
mov
cmp
xchg
dec
push
jns
cmp
adc
sub
dec
movsb
push
cmp
jge
add
mov
mov
mov
inc
pop
int
xor
lret
inc
pop
addl
scas
inc
mov
xorb
jb
mov
fldt
and
lret
pop
pop
adcl
scas
inc
pop
addl
scas
inc
fimuls
ja
pop
iret
fldt
mov
imul
scas
push
pop
adcl
scas
inc
pop
addl
scas
das
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
xorb
stc
divb
cwtl
je
test
inc
pop
cmpl
in
je
into
xorb
je
mov
fisttpl
sub
lock
cwtl
je
mov
lret
jbe
addl
scas
inc
pop
addl
scas
cmpsb
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
pop
addl
scas
inc
dec
addl
sub
mov
push
sub
adc
out
nop
enter
in
mov
pop
jmp
cmc
loop
or
xchg
mov
fdivrl
cmpsl
jb
jnp
xchg
xor
das
push
cwtl
test
lods
inc
mov
cmpsb
push
pop
push
sti
or
add
lds
lret
ds
into
std
test
xor
pop
jnp
in
test
mov
mov
mov
leave
mov
pop
xlat
lea
mov
mov
test
nop
xchg
nop
pop
fisttpll
out
jbe
push
mov
adc
mov
or
push
mov
insl
into
popa
xchg
test
mov
pop
jnp
je
in
dec
pop
popf
ret
pop
pop
dec
mov
xchg
dec
mov
add
push
outsb
push
sub
imul
jp
iret
lods
adc
lret
inc
mov
add
fadd
push
xlat
leave
or
in
add
in
adc
push
leave
push
test
xchg
les
xor
cs
pop
fstpl
mov
test
or
fldcw
icebp
inc
inc
push
int
xchg
mov
mov
scas
or
cwtl
cmp
popa
xor
push
push
mov
fnstcw
cmpb
fsubr
adc
jmp
int3
and
jb
dec
ds
jle
js
lret
and
jge
iret
fninit
movsl
push
fnstsw
add
xchg
jno
pop
xchg
mov
out
dec
orl
cmp
cmp
les
lret
push
pop
mov
dec
xchg
push
lret
inc
repnz
rcr
insb
mov
fwait
push
movups
sub
xor
lods
push
aaa
sbb
loope
das
cmpsb
pushl
inc
push
sub
insb
jbe
xchg
xchg
imul
jne
cs
stos
or
cmp
xchg
leave
loope
dec
es
in
cmp
cmp
pushf
pop
inc
sub
dec
sbb
lret
lret
xchg
stos
fucom
mov
imulb
cmpsb
fiadds
push
sub
push
lds
in
cmp
or
xchg
andl
and
sub
icebp
int3
lret
cli
in
dec
mov
fidivrs
pop
or
jns
punpckhbw
rclb
mov
push
aaa
add
pop
mov
sub
push
sub
movsb
in
pop
mov
sub
xchg
mov
popa
push
lods
fisttps
lea
jae
pop
ljmp
cmp
gs
js
dec
outsl
inc
popf
or
adc
dec
adc
loopne
add
cli
daa
rolb
push
cli
sahf
pop
mov
insb
xchg
leave
sub
out
pop
add
cmp
sbb
enter
mov
fstl
aas
cld
cltd
into
cmpsl
testb
push
rcrl
loopne
imul
jecxz
pop
jae
dec
xchg
dec
mov
sbb
mov
xor
xor
fisttpll
pop
scas
xchg
push
nop
ss
inc
ja
xor
ror
jae
mov
cmpsl
and
ljmp
sub
lcall
pushf
dec
mov
clc
cltd
mov
push
jmp
lret
into
pop
xchg
out
jo
add
in
shr
xchg
stos
ja
jae
push
aaa
stc
xchg
sbb
cwtl
mov
test
push
cwtl
fsubr
fst
sub
xchg
rol
xchg
cli
fidivrl
cwtl
pop
inc
das
mov
cwtl
xchg
xchg
scas
mov
xchg
pop
push
jecxz
dec
pop
and
push
rcrl
mov
cmp
jecxz
push
xchg
jle
xchg
mov
or
repnz
icebp
jns
mov
shlb
xchg
mov
aad
adc
arpl
cmp
pushf
loop
and
jbe
jae
inc
mov
jo
jo
push
pop
xchg
pop
std
jl
jp
lcall
popf
cltd
mov
sti
xlat
adc
cld
jecxz
xchg
divb
push
call
add
sbb
xchg
call
in
lods
sub
adc
jecxz
add
xlat
push
xchg
xorb
shrb
loope
aas
push
in
ror
jg
dec
out
xor
je
or
fnstsw
sbb
xor
in
std
adc
add
jmp
cltd
out
int
pop
loope
adcl
push
jmp
xchg
lret
mov
or
dec
fisttpll
loope
lret
cmp
or
mov
aaa
into
inc
add
pop
cld
out
adc
cmp
lods
sub
flds
mov
mov
push
adc
popw
xchg
cmp
in
or
jp
and
sub
dec
popa
cmp
add
inc
stos
je
or
addr16
xchg
adcb
or
and
mov
cmp
repz
mov
sbb
ss
jb
cmp
dec
or
cmp
xor
or
loope
and
dec
push
jecxz
cmp
add
popa
inc
daa
out
stc
loopne
fstpt
add
jbe
inc
addr16
adc
adc
xor
cmc
mov
vcvtsi2ssl
js
std
sbb
in
stc
sbb
pop
jne
push
xor
arpl
inc
lds
gs
cmpsl
xor
dec
xor
inc
or
jl
push
dec
jge
push
rcrl
popa
mov
enter
inc
hlt
sub
or
arpl
jns
cwtl
bnd
mov
xchg
pusha
fnstenv
jecxz
sub
mov
ja
inc
inc
jge
add
movsl
jg
hlt
mov
pop
frstor
rclb
dec
fchs
roll
xchg
mov
pop
and
hlt
or
sbb
in
aaa
std
addl
popf
xchg
lret
sub
test
sub
int3
fimull
in
stos
outsl
mov
dec
jne
xchg
jl
mov
popf
push
adc
jmp
aas
fs
lds
sbb
lea
xchg
das
lahf
xor
add
inc
addr16
push
sub
leave
bound
inc
daa
add
mov
xor
int3
xlat
sahf
rcl
mov
clc
inc
jge
stc
pop
mov
mov
imul
mov
mov
pop
mov
jmp
or
stos
fdivl
jne
mov
shll
sub
dec
in
jb
mov
gs
stc
lcall
xchg
out
dec
cmp
cli
cmc
jg
adc
mov
in
xchg
in
insl
pop
jns
xlat
rolb
fdivrp
imull
loop
sub
xor
cmp
daa
scas
sub
fimull
faddl
cmc
lret
mov
pop
mov
int
test
mov
hlt
xchg
pop
or
in
stc
out
dec
jnp
xchg
mov
loope
mov
scas
and
adc
test
push
dec
inc
jmp
mov
out
xchg
loope
rcll
jmp
int3
cmp
add
movsb
addb
or
cmp
imul
fs
aaa
gs
push
lods
stos
in
mov
loope
push
xor
jnp
ret
inc
sbb
jmp
ret
inc
mov
cmpsl
sub
rclb
hlt
add
inc
pop
push
jo
xlat
inc
lock
and
lret
push
dec
into
xlat
hlt
cmc
add
fldl
clc
popf
movsl
insb
pop
push
ds
inc
lret
jecxz
movsl
rorl
inc
jle
lea
ds
loope
and
pop
les
push
jmp
push
stos
add
inc
adc
dec
das
cmc
lods
and
or
jae
nop
loop
or
popl
repz
pop
jecxz
push
orb
or
popf
arpl
and
test
push
sub
in
addb
outsb
cvttps2pi
pushf
jns
into
mov
cmp
les
jge
fs
xor
ljmp
lods
pop
or
and
jo
mov
xor
sbb
jbe
scas
filds
cmc
cwtl
and
iret
in
out
out
js
movsb
push
mov
rcl
inc
pop
xchg
ja
gs
nop
mov
pusha
out
jg
jbe
xor
add
mov
scas
dec
loop
enter
sti
inc
push
std
rorb
data16
inc
mov
call
push
pusha
xchg
rorl
fldl
loop
cwtl
and
push
nop
idivb
or
int3
jns
jp
movsb
add
enter
mov
fwait
data16
sbb
push
iret
shrb
adc
loopne
push
and
jp
add
push
aaa
add
adc
notl
or
insb
out
and
mov
mov
lahf
pop
xchg
hlt
or
mov
jne
sub
scas
add
mov
imul
pop
xlat
jb
sub
jl,pn
add
dec
scas
aaa
das
push
outsl
jno
pop
mov
loope
insb
lock
cltd
sub
lcall
out
jae
push
pop
push
mov
push
bound
mov
cli
lcall
xchg
loop
hlt
mov
cmp
sti
jbe
sbb
and
in
or
pop
jno
lret
push
out
mov
aad
aad
mov
jp
pushf
cld
jge
jb
insl
add
lods
sub
stc
clc
cmp
aam
in
das
sbb
push
ljmp
inc
pop
sbb
add
ficompl
dec
push
push
ss
iret
mov
arpl
jns
fwait
pusha
mov
hlt
movsb
jno
mov
ljmp
mov
jl
sbbb
jg
fisttpll
mov
out
mov
pop
add
movd
adc
out
lcall
les
pop
xor
clc
aaa
es
lcall
shlb
divl
mov
sub
mov
mov
push
ds
add
xlat
xchg
les
cmp
into
sub
cld
push
test
jle
repz
sahf
push
lahf
cs
movb
loope
test
xor
movsl
in
cld
cmpsl
and
addr16
imul
ret
jno
mov
lcall
and
dec
add
push
hlt
and
add
movsb
or
jle
sti
dec
ja
pop
lahf
pop
ret
push
xchg
bound
push
cmp
xchg
aad
jbe
cmp
out
mov
insl
xchg
inc
addr16
icebp
sbb
or
cmpsl
pushf
add
xor
add
sti
cmpsl
jmp
cltd
inc
bound
daa
fcompl
dec
cmp
xor
in
and
jnp
in
daa
mov
sbb
mov
pushf
cmp
cmc
fadd
jle
mov
dec
jg
adc
pop
fdivs
leave
dec
leave
into
rcrl
das
xor
fadds
lds
sub
xor
push
or
lock
mov
int3
aad
movsl
subb
mov
mov
dec
mov
lods
fsubrs
ss
or
inc
mov
lret
push
push
sub
push
push
xor
lret
adc
sbb
xchg
sbb
mov
lret
in
loope
mov
xchg
push
pop
mov
adc
into
adcb
faddl
data16
pop
or
rcrb
xor
and
test
std
fisubs
push
dec
insl
fwait
pop
adc
jmp
fildl
sbb
aaa
xchg
mov
stos
aas
inc
cli
cmc
sub
cmp
adc
cmc
inc
dec
cwtl
idivb
insb
cmc
pushf
push
sub
dec
pop
pusha
xor
clc
scas
xor
inc
int
mov
xor
rol
popl
pop
nop
ja
mov
dec
insb
test
notl
in
orl
jae
jne
negl
sub
push
adc
and
xchg
add
js
mov
cli
andl
sbb
xchg
int
out
dec
lock
test
mov
repnz
mov
jae
cmp
mov
xchg
xor
jle
inc
mov
cs
mov
rcrb
jbe
add
add
add
push
push
call
push
call
xor
pop
add
ret
nop
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
add
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
imul
test
inc
add
imul
mov
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubrl
add
imul
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
