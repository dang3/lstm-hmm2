push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
add
scas
fs
or
aas
mov
jno
push
inc
sbb
cmp
xorl
fcomi
jl
cmp
push
jmp
loope
adc
adc
inc
inc
xchg
add
jae
dec
sbb
sahf
andb
mov
cltd
mov
jmp
jge
push
or
pop
mov
mov
pop
je
hlt
popa
mov
ffree
mov
add
mov
xchg
inc
clc
shlb
iret
in
test
jne
jae
cmp
repz
push
ja
mov
mov
mov
cld
adc
push
or
bt
cwtl
mov
icebp
lahf
inc
sub
add
dec
cmp
or
mov
mov
dec
test
sarl
out
aaa
jb
and
test
mov
mov
inc
lcall
or
test
pop
mov
xchg
jne
mov
add
sub
sub
mov
cmp
sbb
cmpsl
rcrb
loopne
push
push
clc
ret
mov
xchg
adc
jg
push
movsb
cmp
push
in
push
or
shll
or
and
fstpt
pop
or
loop
out
xchg
rorb
add
mov
les
pushf
cmc
inc
mov
test
hlt
push
adc
xor
mov
movsb
movsl
popf
cmpsl
mov
nop
mov
mov
xlat
stc
push
mov
daa
add
cmpsl
adc
mov
data16
repz
fdivs
icebp
inc
and
dec
pop
mov
pop
mov
jecxz
add
hlt
xor
call
cmp
add
jae
inc
aam
into
cmpsl
shlb
data16
adc
std
mov
fnsave
mov
dec
xor
mov
loopne
mov
mov
test
les
mov
push
xor
sub
push
cmp
xchg
adc
pop
push
outsb
mov
dec
and
std
shl
lret
inc
popf
mov
sbb
lds
mov
aam
leave
bound
iret
and
lret
pop
inc
mov
jb
sub
enter
inc
pop
fcoml
fnsave
fidivrl
cmp
add
mov
xor
xchg
lea
xchg
and
adc
insl
fs
fnstsw
sub
movsl
data16
int3
xor
sub
ljmp
pop
popf
pop
outsb
push
add
pop
lea
ret
lds
neg
push
jge
movsb
pop
mov
xchg
inc
push
outsb
cmc
cmp
pop
mov
mov
hlt
enter
xchg
dec
push
loope
aas
push
mov
pusha
in
sbb
or
out
int3
xlat
mov
popf
add
sub
andl
iret
mov
push
sub
sub
cmp
das
jae
pushf
push
mov
imul
ficoms
adc
mov
sub
cwtl
adc
repnz
lret
inc
inc
lods
inc
ficoml
clc
shll
cmpb
sub
and
jo
xor
dec
xchg
movsb
in
data16
jb
jp
mov
sub
pop
fisttpll
jg
test
test
jne
xchg
add
add
jp
cmp
cltd
arpl
sbb
iret
inc
shl
ficoms
ror
pop
add
mov
mov
rcrl
bound
mov
rclb
shrl
mov
es
mov
jp
aas
aad
mov
and
mov
mov
mov
es
xchg
xchg
daa
icebp
push
xchg
mov
push
pop
sub
cmp
inc
jno
mov
sahf
push
loopne
jne
daa
jle
mov
xchg
fcmovnu
jne
pop
imul
adc
sub
jecxz
jge
pushf
test
xchg
mov
fbstp
nop
leave
xchg
popf
sahf
ljmp
adc
xchg
test
adc
lea
mov
add
mov
fistl
int
into
inc
push
les
mov
pop
inc
xchg
loope
jnp
addr16
aaa
inc
adcb
popa
inc
mov
repz
loope
gs
mov
inc
lret
fbld
leave
sbb
outsl
mov
jge
ret
and
mov
outsl
outsl
stc
rorb
cmpsl
add
aad
aad
imul
lds
jns
test
jmp
pop
mov
or
jno
ficoms
pop
into
add
pop
movsb
lret
dec
jecxz
push
jo
sub
mov
sti
pop
and
mov
notb
mov
xchg
pushl
push
sub
cmp
cmpsb
mov
stc
fistpl
or
aas
pop
sub
icebp
adc
out
pop
jg
xchg
mov
push
jle
sub
test
jmp
imul
mov
repnz
je
sbb
lret
addb
int3
ret
mov
mov
aam
inc
lahf
sbb
rcll
jge
mov
jg
xor
cmp
stos
inc
jp
fsubs
mov
ficoml
arpl
add
clc
les
xchg
or
insb
icebp
test
lret
xchg
out
xchg
push
or
mov
dec
cmp
mov
mov
cmp
test
jbe
pop
lods
push
aas
mov
jnp
and
nop
addr16
jns
mull
iret
ret
inc
icebp
bndldx
cmp
xchg
mov
add
cld
pop
das
out
rol
xchg
sbb
adc
inc
mov
mov
inc
outsb
leave
push
in
jae
and
cmp
aas
sub
and
leave
sub
clc
inc
add
shlb
push
or
mov
fs
mov
imul
push
je
testl
fistps
and
insb
inc
jmp
lret
xlat
mov
and
pop
fisttps
imul
push
out
and
pop
subb
fwait
stos
lock
and
adc
mov
jb
push
sub
outsl
scas
adc
and
push
mov
sub
push
push
dec
cmp
jns
nop
jb
je
jg
stos
add
daa
adc
fisubl
jl
cmpsl
push
pop
lcall
test
inc
repz
out
gs
das
sub
push
arpl
pop
pop
jnp
sub
push
inc
imul
or
push
and
sub
mov
andl
mov
stos
dec
insb
push
cld
inc
xor
inc
push
test
mov
or
addr16
mov
lcall
jnp
call
sub
cli
inc
cmpsb
int3
inc
pop
sbb
sbb
inc
fs
iret
cmp
repz
stc
test
outsb
out
test
movq
adc
insb
push
aaa
and
addr16
test
loop
or
daa
neg
fisubl
add
sbb
mov
les
fnsave
out
and
jl
and
jo
cmp
jge
push
pushf
les
scas
lret
mov
sub
arpl
mov
std
sbb
cmp
outsl
mov
push
add
inc
dec
pushf
fdivp
mov
es
aam
mov
aaa
sbb
stc
xor
or
mov
cmp
insb
or
xchg
pop
adc
repnz
mov
pop
dec
rcl
cltd
lock
and
jns
lds
mov
sub
iret
xchg
dec
icebp
inc
and
jge
addl
push
jp
pop
and
cmp
fnsave
jo
out
pop
dec
pop
cmpsl
mov
mov
xchg
mov
mov
fildl
lock
clc
cmp
aad
inc
xchg
sbb
adc
mov
push
adc
pop
mov
add
jns
mov
add
popa
aaa
outsl
push
jo,pt
lret
insl
xchg
jns
popf
inc
sbb
mov
out
inc
pop
cmp
std
xchg
xchg
aas
int3
data16
cmp
mov
mov
and
mov
pop
rcrb
cli
popf
mov
mov
lret
sbb
ror
mov
mov
rorb
inc
outsb
push
mov
inc
arpl
push
or
dec
cmp
jmp
and
push
inc
out
cmp
inc
jecxz
imul
push
mov
daa
sub
xchg
mov
push
cmp
push
test
cmpsb
sahf
sbb
xchg
adc
test
loopne
adc
ljmp
int
pop
daa
or
pop
aas
shrb
test
in
mov
mov
sub
mov
mov
pop
cmpsb
jns
sahf
in
dec
addr16
popa
inc
xlat
dec
insl
adc
lret
pop
loope
lea
xchg
icebp
push
lods
mov
pop
pop
or
shrl
xlat
call
lret
mov
sub
add
inc
fdivp
mov
or
shl
rclb
scas
ficoml
call
sub
or
les
pop
add
sub
lcall
pop
cli
push
and
inc
mov
push
adc
arpl
inc
js
icebp
inc
fidivl
sbb
je
sbb
pop
push
bound
jp
cwtl
mov
xchg
loop
push
cs
jae
push
cli
pop
cmc
inc
test
ss
push
push
adc
test
fistl
and
cmp
imulb
pop
mov
cmp
test
push
mov
push
mov
sarl
repnz
cli
sbb
fwait
lods
dec
push
xchg
adc
cli
imul
add
xor
mov
pop
stos
pushw
clc
ljmp
cmpsb
test
clc
pop
push
fs
sbb
dec
fwait
push
icebp
mov
xchg
incb
adc
pop
ret
lret
loope
sub
and
lahf
js
cwtl
repnz
push
pop
xor
pop
shrl
mov
outsb
pop
mull
aaa
sbb
in
and
mov
dec
shr
inc
cltd
fdivrs
lret
cmp
jb
pop
outsb
mov
inc
imul
aas
mov
mov
cmp
adc
popf
enter
loope
out
lods
and
inc
mov
into
push
dec
dec
iret
cwtl
jmp
xchg
and
pop
mov
mov
addl
dec
push
xor
popa
add
popf
or
jne
popa
xchg
pop
orl
fs
pushw
cmp
jae
loopne
enter
xchg
iret
pushf
jl
xchg
imul
mov
orl
outsb
add
cltd
xchg
or
jge
xchg
dec
jle
insb
in
mov
stc
enter
dec
stos
int3
jl
mov
fistps
pop
movsb
aaa
adc
insb
arpl
shr
sbb
pop
sub
xchg
and
cmp
outsl
insl
mov
jmp
and
pop
xchg
mov
cmpsl
jb
enter
insl
fs
lock
pop
mov
lcall
jnp
ljmp
into
test
int
mov
sub
jae
and
sbb
push
xchg
loop
push
xchg
mov
or
jo
mov
pop
test
popa
js
xor
lret
test
sbb
jg
in
ret
pushf
pop
outsl
lods
mov
and
fdivp
jmp
push
fcomi
es
cli
sbb
jmp
js
jmp
and
and
inc
fnstenv
shll
sub
push
cmpsb
cmp
push
testl
or
pop
std
stos
je
loop
inc
jg
jne
fbstp
js
mov
xor
mov
jbe
mov
movsl
pop
fildll
aad
js
js
call
cmp
pop
dec
inc
push
jo
sahf
push
inc
sahf
cmc
mov
jle
ja
fnstsw
sahf
repz
inc
neg
push
or
dec
lea
notb
mov
xchg
push
mov
movsl
mov
cmpsl
inc
popa
outsl
mov
fs
mov
sahf
shrb
inc
out
dec
dec
inc
inc
mov
cmp
aad
das
decb
xlat
in
rcr
pop
mov
mov
mov
call
sub
outsb
mov
mov
and
sub
notl
pop
fdiv
sti
rorl
in
shlb
push
fs
cmp
push
mov
aad
push
outsb
lods
lret
or
jns
outsl
push
or
mov
push
mov
ljmp
mov
xchg
adc
fistl
cmpsb
in
ljmp
stos
cmpl
cwtl
cs
lds
add
rcl
adc
int3
inc
lahf
pop
int3
ret
inc
dec
mov
ss
push
xchg
push
adc
call
sub
imul
popa
sbb
ficomps
hlt
insl
pmaxsw
out
add
jmp
pop
sub
mov
rcrb
popa
cmpsl
hlt
lods
mov
xchg
movsb
test
push
test
orb
fidivrl
add
out
push
in
jmp
lods
testl
cmp
aas
adc
mov
pop
shrb
dec
rcl
xchg
jmp
cmp
push
iret
loop
in
mov
es
int
dec
mulb
jmp
sbb
out
pop
pop
pop
push
mov
and
aad
or
xchg
rcrl
mov
lods
mov
jecxz
stc
lret
adc
jbe
fwait
sti
xchg
pop
mov
fstpl
into
out
add
subl
or
xor
jle
lods
mov
ret
jecxz
push
popa
in
xor
or
fisubl
shrb
mov
pushf
add
xlat
insl
testb
mov
dec
rcrl
pop
fidivs
or
loope
and
mov
or
mov
mov
insb
decb
jno
dec
fs
cwtl
hlt
fsubrl
mov
out
mov
aaa
nop
int
inc
out
push
cmp
sbb
xor
jecxz
mov
scas
jbe
out
ret
aad
insb
int
in
lahf
call
xor
lds
fmull
das
ret
fwait
jge
or
sbb
mov
in
pop
pop
mov
mov
repz
mov
adc
lods
insl
or
test
mov
jmp
sbb
add
bswap
ja
imul
mov
movsl
in
notl
sub
gs
cmc
and
push
dec
ja
mov
dec
lea
push
jmp
pop
jg
push
pop
sub
mov
mov
fists
loopne
mov
dec
dec
mov
jge
loopne
rcrl
in
cwtl
or
sub
pop
pop
pop
pop
lea
fisubrs
test
loop
xor
cli
cli
sbb
cmp
pop
xor
jnp
mov
mov
add
mov
cmp
jg
inc
mov
lods
jo
xor
nop
out
add
xor
push
incl
push
cmp
fdivs
mov
ja
cmpsb
inc
pop
jne
pop
call
pop
ljmp
add
lods
scas
mov
loop
or
mov
mov
je
icebp
adc
sub
cmp
in
std
mov
popa
dec
pusha
push
push
cli
cs
scas
test
or
mov
mov
and
pop
adc
dec
stos
jns
sub
rorb
dec
or
insl
sahf
aas
fistl
icebp
mov
fstps
pop
pop
xor
mov
mov
in
push
arpl
cmp
push
loop
insl
stc
imul
lret
paddusw
add
mov
jns
and
inc
push
imul
aas
add
mov
in
adc
xor
adc
roll
pop
or
jnp
push
movsl
std
jnp
jmp
icebp
or
mov
or
and
or
adc
shl
inc
xchg
sbb
std
jle
iret
in
push
imul
add
rsm
dec
cmpsl
rcll
mov
sarb
cs
mov
jno
fmull
mov
mov
jno
fptan
push
rcl
ret
or
nop
popa
mov
push
outsl
addr16
cmp
mov
dec
add
jp
lock
fs
enter
mov
nop
shr
and
cmp
rcrl
push
cmp
lret
lahf
loop
push
sbb
es
das
lcall
insl
ds
add
push
aam
clc
push
xor
push
int3
lock
push
cmp
addb
das
and
xchg
dec
test
ljmp
cmp
xchg
xorl
jne
cmp
shll
jbe
test
inc
das
das
or
enter
iret
mov
jle
fisttpl
fisubl
xchg
jo
stc
xchg
out
addr16
adc
in
cmc
pop
loope
xor
mov
test
mov
test
jae
xorb
shll
pusha
into
ljmp
jbe
add
or
adc
or
rol
and
sbb
stos
pop
xor
cmpl
outsl
sub
pusha
scas
inc
fidivl
aas
stos
sbb
call
pop
out
mov
mov
mov
iret
pusha
pusha
shrb
add
pop
xchg
fptan
lahf
imul
lret
sbb
aad
cwtl
push
xchg
inc
dec
outsb
inc
scas
jo
lret
mov
pusha
rorl
cli
insb
mov
dec
cmp
ss
ror
cld
aas
aam
and
loop
pusha
lods
and
ret
xor
call
ds
and
loop
xor
dec
cli
sub
cmc
xchg
popf
lods
stos
mov
dec
cltd
les
test
popa
fistps
repnz
mov
jecxz
aaa
rcrl
xchg
sbb
in
lock
mov
or
mov
pop
pop
add
daa
xchg
cmp
dec
inc
rcll
push
mov
popf
daa
mov
sub
mov
jae
add
lods
xchg
mov
hlt
rcr
pushf
pop
imul
push
cmc
xchg
pop
jae
orb
dec
adc
adcl
mov
jp
fnstsw
das
pop
push
enter
mov
std
dec
or
pusha
fprem
test
outsl
test
cmc
sbbl
inc
lea
sub
xor
lcall
or
push
outsl
or
lret
fiadds
ret
add
test
movb
mov
jecxz
loopne
insl
push
sbb
adc
mov
fdivrs
pop
and
and
pop
ss
cmp
sub
in
jno
scas
in
pop
add
push
push
pop
repnz
xor
inc
jmp
loope
cmp
in
out
add
pop
pop
inc
jp
adc
cwtl
cld
xchg
wrmsr
lret
xor
stos
sub
mov
stc
notl
outsb
and
sbb
test
cld
popf
cmp
scas
pop
scas
ret
xorb
adc
loopne
mov
mov
pop
loopne
sbb
inc
xchg
adc
lock
fimuls
dec
clc
dec
or
dec
xchg
std
jne
filds
stos
js
adc
add
std
push
ja
mov
leave
mov
fists
adcb
or
xchg
jg
data16
inc
inc
adc
sbb
adc
lods
add
push
cmp
sub
jo
jle
jne
subl
mov
jbe
sub
xchg
pop
test
mov
es
int3
lea
xchg
pop
in
mov
popf
nop
pop
je
mov
stos
sub
jecxz
xchg
imul
cmp
dec
xchg
inc
test
out
lcall
push
push
outsb
jae
inc
sbb
ret
lahf
add
js
xchg
and
jle
pusha
push
push
cmpsl
mov
fidivs
loope
jge
mov
int3
mov
inc
imul
orb
flds
push
outsb
mov
mov
popa
adc
aaa
in
mov
aaa
addr16
mov
add
lods
sahf
mov
lods
pusha
mov
dec
movsl
stos
es
push
xor
xchg
adc
fcmovnb
iret
sub
push
xchg
cwtl
decl
stc
add
and
jmp
or
push
rcll
and
call
movsb
xchg
and
or
mov
cmc
nop
sahf
mov
push
inc
pop
sbb
xorl
testl
scas
mov
jge
int
pop
mov
push
xor
or
mov
stos
es
adc
or
cmpsb
cmp
lods
add
jae
jno
or
cmp
outsb
shl
mov
jle
inc
stc
in
cwtl
cmc
lcall
push
mov
xchg
stos
adc
sets
adc
iret
aam
leave
jge
adc
in
mov
xchg
sbb
add
dec
repnz
sbb
cltd
int
fadds
test
and
mov
cltd
cltd
daa
push
push
sbb
cmp
cli
adc
daa
in
mov
sahf
lds
aas
inc
mov
mov
les
sub
dec
enter
push
fstps
fbstp
rclb
orl
xchg
cmp
sub
mov
pop
negb
ja
mov
incb
cmp
fst
jp
into
push
mov
clc
stos
pushf
cs
mov
aad
adc
jb
push
adc
mov
lock
popa
push
jg
xor
mov
mov
sub
aas
sub
mov
in
test
int
iretw
dec
pop
rorb
adc
fs
sbb
sub
fndisi(8087
int3
incl
lds
gs
xchg
mov
mov
data16
push
int
and
jae
arpl
repz
add
leave
push
and
push
hlt
in
mov
push
in
mov
inc
jns
popl
cmp
in
test
std
mov
xchg
iret
nop
in
mov
subps
add
lret
test
sahf
cmpsb
es
in
out
mov
pop
shl
jmp
adc
aas
rorb
mov
sbb
push
cmpsb
dec
cmpsb
mov
jo
and
test
cld
or
mov
in
add
fdiv
leave
inc
std
mov
push
repz
out
jge
mov
dec
push
shlb
xchg
dec
or
loopne
cltd
dec
lock
xor
mov
leave
arpl
ud1
out
sub
popa
or
xchg
and
fistpl
enter
mov
div
and
push
sub
sbb
cmpl
and
and
mov
rol
push
sbb
adc
xchg
and
lahf
mov
pop
call
push
pop
xor
mov
or
xchg
cmp
xchg
aad
popa
loope
push
xor
outsb
aam
inc
mov
xchg
mov
mov
ss
mov
nop
gs
jae
mov
ret
imul
mov
xor
cmpsl
or
push
jecxz
ficomps
popa
jo
cmpsl
inc
sbb
cmp
mov
inc
or
adc
or
int
bound
fdivrs
mov
mov
jae
je
popf
adc
lcall
int3
cld
lcall
nop
push
or
or
adc
imull
jae
fisttps
push
stos
fucomi
test
bound
out
filds
aaa
jae
xchg
sbb
outsb
fstp
neg
aas
push
pop
and
subl
fldcw
fadds
popa
in
loopne
dec
popa
jo
and
mov
xchg
lods
or
sub
cld
sbb
sbb
imul
mov
lahf
inc
inc
mov
cmpb
icebp
cmp
bnd
cwtl
jle
pushf
imul
jg
ret
pop
jne
cmp
and
mov
jne
ja
ja
cmpsl
sar
outsl
add
pop
lret
or
data16
stos
ficompl
jbe
adc
xchg
cli
jns
iret
scas
xchg
pop
mov
sub
mov
lea
inc
add
fucomip
movsb
mov
adc
pusha
cmp
and
fwait
push
aas
int3
mov
addr16
inc
iret
xor
dec
sti
insb
mov
cmp
data16
cmc
xor
cmp
mov
adc
and
push
loopne
es
fs
bound
fwait
repnz
sub
cmp
lea
fcomps
dec
sub
lods
xlat
sub
sbb
mov
arpl
mov
mov
cmp
mov
sub
dec
out
pop
xor
pop
mov
and
cmp
dec
jns
lock
xor
mov
jo
mov
adc
adc
sbb
xor
pusha
mov
loopne
push
and
int3
cmovl
push
std
mov
jle
inc
data16
movsb
out
add
jbe
enter
jg
jmp
push
xlat
xorl
jge
rorb
mov
jo
add
in
or
mov
shll
jmp
or
jmp
xchg
movsb
jmp
popf
ja
mov
out
mov
push
pushf
cs
push
or
orb
testl
ljmp
ljmp
or
sbb
cmp
sarb
cmp
xor
adc
cld
ret
imull
loopne
xlat
stos
adc
mov
out
and
xor
idivl
push
ss
int
pop
icebp
outsl
sahf
push
js
mov
test
lods
arpl
addb
popf
sub
rcrl
pop
cmc
movaps
xchg
or
cltd
push
adc
mov
aaa
enter
push
jo
sbb
sbb
loope
cmpsb
ds
push
insb
mov
mov
xchg
mov
imul
and
das
push
loope
jle
mov
mov
push
jbe
into
push
loopne
and
dec
outsl
cmp
adc
adc
inc
addl
pop
jmp
mov
cmp
jmp
mov
dec
test
idivb
mov
add
adc
mov
cmp
mov
dec
pusha
loop
je
cs
loopne
or
mov
mov
cmp
pop
jp
jmp
into
ret
frstor
scas
cld
stos
add
rorl
sub
loop
mov
les
repz
add
enter
jbe
enter
mov
xor
mov
jle
jo
pusha
xchg
push
adc
scas
dec
popf
push
addr16
adc
aam
jmp
jae
movsl
sub
mov
mov
cmc
orl
lahf
xor
mov
inc
and
fists
rclb
aam
cmp
ja
dec
mov
ret
cmp
inc
jbe
dec
loope
arpl
gs
pushf
push
dec
push
movsb
or
mov
sarb
mov
repz
mov
sub
adc
mov
or
mov
jg
test
dec
mov
js
outsb
nop
inc
xchg
cli
in
scas
cmc
xchg
sbb
filds
jle
mov
cltd
lret
pop
shll
or
int
cmp
xor
jne
std
lret
repnz
js
out
repnz
adc
stos
lds
popa
pop
dec
std
call
roll
mov
jns
enter
hlt
aam
add
jnp
jno
shrl
mov
pop
sub
pop
fsubl
cmp
or
push
popf
lcall
add
dec
hlt
mov
sbb
daa
imul
adc
insl
pop
sbb
int
sub
popf
xchg
std
or
pop
out
xchg
or
aad
inc
push
adc
inc
add
loop
mov
lahf
cmp
imul
sbb
or
test
fdiv
push
dec
iret
cmpl
les
bound
mov
fs
inc
loop
mov
nop
xchg
sti
push
pop
clc
jmp
jb
rcl
hlt
push
insb
inc
cmc
ror
loope
push
mov
pushf
loope
imul
pop
fs
les
iret
daa
ss
scas
dec
rcrl
lret
call
xlat
leave
xlat
js
and
addb
lods
sbb
and
add
push
sub
les
iret
xor
inc
rol
imul
hlt
mov
leave
pusha
mov
popa
dec
shlb
cmc
mov
test
jbe
and
push
ja
sbb
popa
mov
push
jecxz
mov
daa
mov
push
cmpsl
jno
cmp
add
mov
repz
aad
imul
in
cs
mov
in
shr
data16
push
movsl
testb
jl
xorl
inc
imul
fs
pop
xchg
out
fsubp
loop
into
sub
mov
jecxz
loop
sbb
shl
fdivs
sub
testb
shl
or
pop
inc
jmp
jne
cmpsl
pushf
cmp
mov
sbb
xchg
sub
outsb
inc
inc
pop
xor
inc
xchg
sub
inc
test
push
push
dec
xor
adc
xlat
data16
ds
inc
pop
pusha
or
mov
mov
xchg
int
pop
call
sbb
lods
push
in
jg
mov
rcr
cmp
icebp
or
mov
sbb
mov
xor
pop
pop
hlt
lret
imul
ret
loopne
push
inc
mov
xor
pop
mov
leave
jns
sbb
ret
cmp
arpl
mov
adc
in
popf
in
ljmp
lret
bound
sub
push
fdivrl
xchg
inc
jae
nop
cs
mov
cltd
push
inc
lock
in
enter
adc
icebp
fdivl
lods
mov
inc
arpl
pusha
mov
mov
les
fcomps
imul
mov
xorb
test
push
and
inc
arpl
aam
xchg
lock
xchg
nop
sbb
sub
mov
frstor
sub
out
push
pusha
add
loop
fstpl
sarb
scas
jo
or
inc
jp
arpl
xchg
mov
int3
repnz
nop
jle
sahf
push
insb
loop
jno
inc
movsl
xor
mov
push
dec
enter
dec
xor
ja
stos
inc
daa
push
jle
loop
sti
sbb
pop
notl
fldcw
or
jmp
xor
adc
mov
gs
adc
and
hlt
xchg
test
fwait
or
push
mov
arpl
dec
xchg
or
call
les
je
jo
cmp
xchg
push
sahf
lods
movsbl
fbld
inc
mov
jb
cmp
pop
sub
dec
jae
dec
cmp
jne
mov
and
xor
loop
ljmp
cmp
dec
cmp
or
cld
inc
movsb
popa
xchg
add
in
cs
xor
push
jg
mov
and
sbbl
fstpt
int3
stc
cmpsb
pop
inc
cmp
lods
cmpsl
or
in
sub
push
adc
mov
inc
and
in
xchg
cmp
inc
orb
loopne
iret
xchg
mov
pop
out
test
mov
test
adc
mov
mov
fcomps
jecxz
sbb
aad
mov
xor
dec
test
stos
addr16
jle
hlt
ffree
jg
adc
xor
test
cmpb
iret
testl
stos
ss
ja
shrl
push
jno
imul
or
insb
lcall
gs
mov
jge
mov
test
sub
clc
icebp
pop
mov
add
adc
cmp
dec
push
mov
sub
das
fistpll
push
push
or
add
loope
test
sti
jge
jle
ret
cwtl
xor
pushf
dec
test
les
cvtps2pi
push
das
in
jge
lret
push
sub
daa
daa
fsubl
mov
sub
inc
xchg
push
dec
out
outsb
cmp
pusha
aam
mov
dec
inc
stc
fimuls
and
cli
jne
mov
shll
mov
add
mov
ljmp
jns
cmpl
xchg
aad
iret
bound
xor
dec
faddl
and
fnstenv
lret
sub
loop
test
cld
loop
ror
filds
add
shrl
sub
fcoml
inc
fisttps
loope
popa
mov
imul
cmp
jae
sub
insl
bound
cltd
jmp
sub
lods
jnp
mov
ss
cmp
and
xor
stos
adc
add
cmc
push
cmpsb
out
test
fldenv
in
sub
in
pushf
stos
mov
outsl
sub
fimull
cs
pop
adc
stos
sarb
cmpsb
cmp
sbb
gs
jne
mov
push
push
xchg
stc
adc
dec
ja
inc
mov
lret
xor
sbb
int
adc
jno
and
sahf
out
enter
loope
clc
lds
or
mov
repnz
jbe
mov
lahf
inc
mov
into
jmp
mov
and
ljmp
test
mov
mov
jge
mov
mov
adc
andb
mov
cltd
dec
xor
and
cmp
inc
dec
nop
jmp
adc
imul
add
shll
dec
pop
jmp
mov
jmp
cmp
inc
cmp
lods
pop
push
subl
mov
and
stos
ficoms
push
and
js
outsb
pop
push
mulb
aad
pop
adc
ja
rcrb
add
sbb
gs
adc
filds
cmp
outsl
icebp
repz
imul
mov
test
inc
cmp
out
xchg
sbb
ja
js
pop
iret
dec
jge
sub
cltd
inc
cld
cmc
rclb
inc
mov
push
rcrb
fmul
mov
push
xchg
push
mov
sub
and
mov
pop
jbe
push
pop
int
int3
xlat
dec
ljmp
cmp
in
or
or
push
scas
mov
pop
and
out
jp
push
push
mov
lods
mov
rolb
adc
sub
or
repnz
jbe
mov
pop
pop
mov
cwtl
dec
or
test
jb
dec
pop
lods
add
in
dec
jmp
xchg
jle
inc
jnp
jo
inc
xchg
and
jmp
adc
mov
lods
js
loop
scas
push
imull
std
sbb
lea
xlat
filds
scas
or
cld
adc
cmp
pop
jne
dec
scas
adc
xchg
dec
mov
sbb
inc
iret
inc
dec
mov
lcall
mov
dec
pushf
mov
out
mov
sub
cpuid
leave
sbb
or
fimuls
push
sbb
sub
aas
xchg
into
in
mov
cwtl
inc
or
mov
jnp
mov
lock
mov
adc
jbe
lock
hlt
mov
mov
xchg
jb
xor
sahf
div
jmp
test
xchg
sub
mov
ds
idivb
popa
enter
ret
sbb
push
xchg
popa
xor
cwtl
mov
out
mov
ja
enter
das
mov
repz
lret
mov
xchg
fdivl
out
mov
xchg
scas
add
nop
sbb
adc
leave
mov
ljmp
jne
stc
xor
mov
inc
xchg
andb
out
adc
mov
cmp
in
out
inc
add
out
add
int3
or
dec
sub
enter
dec
pop
fstpl
xor
je
jbe
xchg
fldenv
shr
mov
outsb
rcrb
sub
inc
loop
lock
imul
dec
sbb
lods
add
pop
jnp
pop
cli
and
fs
mov
ljmp
hlt
cmp
repnz
fidivrs
idiv
outsb
xchg
in
in
sub
pusha
inc
mov
mov
lcall
cmpsb
leave
cmc
je,pt
mov
popa
roll
or
inc
mov
adc
in
push
xor
jg
rcrb
mov
aam
xor
and
out
scas
sub
out
push
mov
gs
jp
xchg
test
mov
test
jbe
jmp
xor
xchg
xlat
orl
jno
xor
cltd
jno
lds
or
iret
or
dec
mov
pushf
adc
enter
push
cmc
cld
cli
int3
iret
pop
and
loop
push
lods
nop
data16
mov
jmp
xchg
jle
and
mov
lods
jge
lret
mov
int3
jecxz
mov
cltd
push
nop
sahf
jbe
add
cwtl
sahf
les
mov
adc
mov
xor
int
test
add
mov
jecxz
out
insl
lahf
cli
jae
sahf
push
int3
sbb
mov
in
adc
xchg
stos
inc
pop
lds
lods
imul
outsb
add
mov
cmpsl
sarl
sbb
push
das
add
and
pusha
pop
push
insl
xchg
js
jne
push
fs
cmpsl
jmp
mov
adc
inc
test
loopne
mov
mov
jae
lock
jecxz
mov
stos
stos
js
sbb
rorb
cmp
sahf
mov
rcll
adc
xchg
stos
out
gs
pop
pop
xor
sti
cmc
cli
xchg
inc
sub
scas
stc
stc
sub
inc
fsubrs
into
push
push
lahf
mov
sbb
mov
push
loop
and
inc
mov
shrl
outsl
stos
and
ret
stc
fsubr
inc
ja
mov
mov
test
lret
ficomps
jo
iret
push
pop
repz
jecxz
in
gs
leave
sub
inc
call
lea
adc
pop
cmp
rolb
xlat
pushf
fwait
ror
cmpb
push
inc
dec
fstp
pushl
xchg
iret
push
enter
inc
cltd
scas
fldenv
scas
in
mov
or
xchg
adc
aas
xchg
lock
jmp
jl
jnp
call
jo
fiaddl
add
divb
lret
rcr
cmpsb
jbe
outsb
jmp
sbb
fiaddl
xor
repz
fbld
lock
dec
sbb
out
adc
xchg
xor
push
call
push
or
out
mov
sub
or
shl
pop
arpl
or
fildll
sti
lods
and
push
in
call
and
dec
sbb
mov
test
add
movsl
xchg
jecxz
ljmp
pop
mov
lock
std
por
ds
ret
add
ja
jne,pn
xorl
fwait
shrb
aaa
or
or
xor
cmpsl
ja
push
xchg
and
hlt
clc
test
sbb
stos
add
jecxz
push
inc
ds
int3
daa
movsl
mov
data16
leave
test
rol
loop
mov
or
scas
dec
jo
stc
in
jbe
daa
push
mov
dec
and
jp
or
cmpl
sbb
cltd
add
and
cmp
outsb
jo
jle
in
push
mov
lock
or
cmp
pop
xor
add
rol
mov
dec
cli
add
adc
and
mov
and
and
add
cwtl
xchg
mov
sub
jge
pop
stos
jp
stos
unpckhps
ja
bound
adc
xor
push
jnp
push
in
into
mov
test
cmp
jg
sbb
sub
adc
aaa
inc
pop
popf
test
int
mov
xchg
ljmp
xor
insb
loope
or
call
sti
dec
dec
loop
mov
pop
ljmp
xchg
outsl
daa
push
lahf
xor
sub
aaa
pop
sub
pop
dec
bound
in
popf
add
mov
movb
and
pop
fwait
in
test
dec
xchg
push
into
push
es
addl
pop
sub
xchg
in
adc
int3
push
rclb
xlat
cmc
in
sub
ret
mov
loopne
das
test
jp
js
xchg
loopne
cmp
adc
icebp
inc
mov
stc
pushf
pop
shufps
push
lods
mov
adc
outsb
aad
mov
sub
mov
leave
inc
out
mov
cmp
stos
xchg
test
cmp
pop
int
aam
fsubrl
fcom
cs
movsl
addb
dec
movsl
shl
aad
pop
loopne
stos
sub
movsb
and
xor
lcall
add
jl
pop
cwtl
iret
ds
sti
and
lret
test
mov
pushf
insb
add
mov
add
pop
jecxz
stos
mov
push
stos
mov
add
mov
testb
or
loope
mov
out
das
leave
mov
jnp
mov
mov
sub
cmp
movsb
mov
clc
loop
xchg
jmp
roll
cmp
jle
rcll
fstps
jl
mov
pop
dec
lea
push
addr16
enter
out
outsl
mov
sub
or
in
sbb
push
out
fstpl
mov
sub
and
ret
popf
cmp
mov
int3
cmpsl
sub
cmpl
data16
mov
mov
add
repnz
inc
push
movsl
and
mov
dec
lahf
popf
pop
ljmp
add
cld
aas
mov
pop
jb
ficoms
jge
shll
aaa
xor
nop
mov
and
xchg
push
shrl
xchg
movsl
cmp
sub
xchg
xor
cmpsb
insb
mov
cs
sbb
sbb
mov
sub
pop
mov
inc
fcmovb
xchg
push
pop
fnstcw
jecxz
testb
inc
sbb
mov
and
mov
scas
movsl
adc
push
mov
jo
sbb
sahf
out
inc
js
outsl
push
shrb
inc
jp
andb
fidivs
popl
jae
imul
daa
lods
pop
enter
insl
cltd
inc
push
or
xor
lods
in
pushf
leave
push
adc
lea
sbb
or
in
das
xor
or
fmulp
fldt
xchg
xor
movsl
mov
fidivrs
arpl
inc
pop
mull
sarl
inc
mov
and
mov
mov
neg
pop
push
pop
pusha
jnp
stos
test
out
orb
inc
stos
repz
js
jg
pop
in
movsb
mov
add
dec
mov
lods
adc
and
js
adc
arpl
call
pop
mov
lahf
lea
and
sub
mov
aad
hlt
xchg
push
inc
inc
insb
xor
adc
mov
mov
sbb
add
lahf
xor
mov
lods
lret
xor
pushf
mov
xchg
cli
xchg
dec
jecxz
and
push
xchg
insl
mov
fsubr
rdmsr
or
dec
sub
pusha
bound
call
push
shll
mov
mov
pop
aad
clc
pop
mov
inc
ret
xchg
pop
dec
mov
pop
push
enter
ret
jle
xchg
xlat
into
movsl
sub
sub
aam
fdivrp
mov
lea
scas
pop
inc
arpl
jb
ds
xchg
icebp
fisttps
jae
scas
sub
xchg
push
xchg
jb
int
ffreep
fnstsw
testb
dec
inc
push
ret
stc
pop
sbb
pop
push
cwtl
sbb
cmpsl
pop
dec
jno
sub
inc
dec
je
ja
jmp
arpl
loopne
mov
imul
jmp
pop
das
jno
xchg
daa
jbe
imul
mov
push
add
mov
movsl
adc
dec
cmpb
push
iret
xor
aam
jl
imul
mov
stc
js
push
dec
shrb
lods
adc
ror
test
or
rolb
outsb
call
and
dec
push
arpl
ret
xor
out
pushf
mov
sub
lock
cltd
mov
stc
ljmp
xchg
mov
enter
push
xor
xchg
add
lret
xlat
sti
sub
testl
shll
push
pop
dec
loope
mov
adc
xor
xchg
or
sbb
xor
pop
or
lods
movsl
shl
insb
inc
xor
int3
mov
cwtl
jne
js
mov
aad
test
xchg
mov
sub
push
push
cli
cmp
loop
push
push
jno
push
mov
push
xchg
cmp
add
pushf
mov
aaa
sbb
rcr
enter
xchg
sub
stos
fisttpll
jle
ret
jp
mov
in
add
jns
je
lret
adc
lods
fwait
movsl
fimull
sub
add
and
lret
and
fldenv
push
adc
cmp
cmp
inc
mov
ret
das
ljmp
sub
push
xor
jmp
xlat
xchg
xor
dec
adc
cmp
xchg
mov
enter
jns
inc
and
pop
pop
add
sub
mov
outsb
xlat
push
adc
scas
dec
inc
inc
or
push
lock
add
lret
dec
daa
jns
and
mov
xchg
std
sahf
jmp
lds
push
cmp
imul
inc
dec
or
les
mov
into
imul
lods
push
mov
les
negl
adc
pop
inc
mov
pop
inc
outsb
mov
jge
fisttps
movsl
xchg
ljmp
sti
mov
pop
push
mov
sub
aas
mov
jg
popa
out
jbe
add
dec
stos
xchg
cmpsl
sbb
pop
push
jns
jmp
pusha
jns
pop
out
insl
xchg
leave
jmp
and
outsb
xorl
jge
test
push
scas
daa
iret
mov
jb
clc
xchg
leave
mov
hlt
and
xchg
add
xchg
ja
add
int3
popf
addr16
decb
pop
out
pushf
and
dec
sbb
jle
in
mov
fs
jne,pn
sbb
sub
adc
mov
adc
cmp
lds
sbb
push
shrl
lret
xor
test
mov
dec
dec
xor
inc
cs
popa
fildl
mov
rol
lcall
dec
mov
mov
cmp
pop
adc
repz
scas
cmpsb
pop
jo
pop
setp
int3
sti
jns
fwait
push
das
mov
ss
scas
js
sbb
mov
in
out
cld
mov
enter
inc
cmp
shrl
push
loope
xchg
sti
xchg
test
mov
jne
pop
push
fsubrl
ret
shl
fsubs
add
push
les
pop
mov
das
arpl
dec
pusha
int
icebp
fwait
sub
jne
push
jae
pop
es
inc
cld
and
mov
rcrl
and
xor
cltd
rolb
cmp
jo
sbb
loopne
jg
cli
icebp
int
and
addr16
ret
sbbb
xchg
sbb
repz
out
push
pop
fnstcw
mov
inc
adc
pop
inc
sub
push
sbb
aad
cmpsl
nop
pop
xchg
mov
movsb
mov
inc
scas
push
enter
mov
dec
je
lcall
ret
sub
adc
dec
jmp
into
sub
pop
mov
mov
xor
mov
xchg
rcr
flds
xor
leave
jge
push
inc
fwait
loop
stc
push
sbbb
mov
or
repz
push
popa
fisubrl
pushf
std
sub
pop
dec
push
add
xor
mov
outsl
mov
jge
sbb
out
aad
mov
cltd
push
inc
lock
mov
sub
pop
jle
lret
stos
sub
mov
jo
mov
insb
ljmp
inc
add
mov
orl
cmp
mov
sub
push
adc
dec
std
out
arpl
xlat
mov
jb
sbb
inc
jge
jne
addr16
daa
dec
cmp
or
adc
mov
add
mov
mov
mov
mov
xchg
aam
aas
aad
mov
stc
test
adc
dec
cs
rolb
imul
cmc
test
mov
xchg
fucom
gs
cmp
dec
mov
mov
lcall
sub
push
call
ficoms
outsl
fcomps
add
pop
fsubs
inc
fcoms
lds
ljmp
jecxz,pn
add
mov
stos
jge
pop
loopne
les
outsl
xorb
insl
rcl
out
sub
add
adc
out
sub
data16
flds
fldcw
pop
xchg
inc
pop
dec
dec
gs
inc
ds
xor
mov
mov
fidivl
mov
mov
movsl
jge
fs
inc
push
xchg
jle
scas
mov
adc
shr
repz
mov
les
repz
add
gs
fcomip
mov
push
push
negb
sub
fldenv
sub
repz
jmp
rorb
leave
mov
cli
pop
stos
loop
outsb
icebp
push
push
movsb
stos
sub
or
cs
leave
sti
mov
imul
out
mov
fisttps
cmp
or
test
js
sti
das
popa
imul
ds
mov
mov
loop
mov
insb
xchg
cmp
out
adc
int
sbb
dec
int3
cmpl
fmull
cmp
dec
imul
sbb
mov
cwtl
enter
jb
scas
lods
cmp
in
aas
cmc
or
pushf
cltd
jg
xchg
insl
adc
inc
xchg
jl
jl
or
outsl
pop
sbb
xlat
dec
movsb
lea
jmp
fistps
cmp
fadds
adc
xorb
dec
mov
cwtl
mov
negb
or
aas
push
cltd
adc
cmp
ss
mov
fstl
leave
insl
loop
mov
data16
sub
dec
sub
or
or
mov
dec
xchg
gs
xor
mov
fwait
adc
jl
xchg
ss
mov
pushl
divl
or
lea
lods
loopne
jmp
mov
pop
dec
aaa
mov
adc
test
xor
icebp
lds
and
ret
lods
js
insb
pop
mov
ficompl
adc
test
pop
aaa
mov
in
inc
test
leave
int3
xor
push
repz
mov
leave
sub
vmread
mov
dec
mov
imul
lods
cmc
dec
inc
aas
xor
push
mov
adc
jae
pop
adc
pop
std
stc
mov
jae
sub
dec
jne
sub
mov
rorl
and
xchg
into
pushf
scas
stc
lahf
push
adc
dec
pushw
cmpsb
push
std
cmp
pop
pop
dec
sti
sub
mov
mov
sbb
cli
divb
cmp
mov
fisubl
jmp
stos
xor
movzbl
in
je
in
mov
jmp
mov
pop
xchg
nop
shlb
rclb
dec
mov
fldl
adc
jle
push
mov
dec
pop
xchg
xlat
addb
dec
movsb
fs
roll
jo
add
stos
ljmp
rorb
mov
pop
jge
aas
mov
cltd
icebp
aam
adc
jbe
and
sbb
mov
lock
lods
sti
cmc
cmp
ja
and
dec
sbb
out
pop
ror
mov
cli
pushf
inc
mov
adcb
dec
fisubs
pop
hlt
mov
and
sbb
xchg
xlat
mov
dec
sbb
icebp
pop
lea
sahf
sbb
imul
insb
mov
xchg
out
cmp
pusha
les
arpl
push
mov
jns
pop
scas
outsb
leave
test
enter
inc
mov
push
icebp
push
sub
cmp
aaa
mov
sbb
pop
mov
stos
pop
cs
jecxz
or
notb
sbb
and
dec
mov
mov
int3
jmp
push
cmp
jle
addr16
sub
aad
xchg
aad
xchg
call
cmpsb
mov
mov
add
pop
adc
lret
flds
xchg
ja
xchg
test
les
sti
inc
sar
add
pop
arpl
stos
sub
stos
clc
xor
dec
loope
and
mov
or
mov
mov
xchg
add
mov
mov
xor
fdivs
lds
xor
int
inc
dec
dec
scas
repz
sbb
loop
dec
in
adc
loopne
in
xor
xlat
dec
pop
or
fnstsw
out
fiadds
cwtl
das
test
stos
push
cmp
push
ja
sti
pop
pop
test
or
loop
fdivl
sub
lea
mov
lahf
xchg
and
pop
mov
sbbl
jmp
push
ds
mov
outsb
adc
xor
leave
push
xchg
mov
pop
cld
fldenv
test
in
loop
out
xor
aam
test
test
push
imul
xchg
decl
int3
js
adc
cmp
mov
ds
insb
adcb
loopne
and
inc
test
enter
mov
mov
cwtl
in
stos
push
iret
jbe
xchg
fcoml
pop
and
or
insb
sub
xchg
fldenv
shl
sub
lea
mov
sbb
jmp
or
sub
and
jo
push
jmp
mov
loop
icebp
add
arpl
in
cmpsl
push
sbb
add
and
lret
movsl
rolb
xor
dec
je
push
jecxz
test
add
push
add
pop
mov
sub
sbb
xor
cli
popf
sub
fs
dec
cmpsb
xchg
xor
cmp
add
addr16
addb
divb
aaa
add
pop
push
push
pop
sbb
cmp
add
aad
dec
sbb
sub
test
mov
mov
push
xor
xchg
mov
xchg
sbb
push
fmuls
loopne
and
faddl
adc
add
div
adc
mov
push
movsl
jne
loop
cmpsl
lea
push
out
sti
inc
dec
pop
jae
sbb
mov
ret
and
add
inc
fdivrl
jns
in
or
test
and
pusha
cltd
je
sbb
push
mov
and
cltd
ja
pop
repnz
mov
jmp
shll
push
push
lods
xlat
add
add
sarl
cwtl
sub
in
ficoml
mov
cmpsb
xor
xor
into
jmp
jnp
js
xor
jo
dec
js
les
negl
pop
mov
push
loop
push
xorb
mov
xor
lea
ja
jnp
mov
mov
fstpt
lds
sbb
rclb
jns
data16
mov
mov
loopne
pusha
push
push
dec
adc
stos
fidivrs
sub
lea
xchg
push
es
or
fisubrs
fistps
xor
and
jae,pn
add
out
ret
sbb
jno
jecxz
test
gs
pop
std
movsl
push
sbb
xchg
mov
add
divb
or
xor
pop
cltd
push
xor
mov
mov
outsl
fcmovu
mov
pushf
sbb
push
mov
in
leave
cwtl
roll
ret
imul
icebp
xchg
and
and
mov
cmp
fildl
push
push
faddl
push
repz
aad
scas
daa
xchg
add
lock
sbb
clc
push
pop
inc
sbb
jg
jmp
pop
dec
in
and
shrl
fdiv
inc
push
sbb
lock
sbbb
mov
ja
sub
jno
out
mov
jge
jo
push
lahf
mov
mov
addl
daa
imul
pushf
mov
jle
and
push
push
add
jne
dec
pop
add
int3
mov
ret
jmp
xchg
clc
cmp
push
add
dec
dec
clc
add
jg
jge
cmp
daa
mov
push
fisubs
and
sbb
js
push
add
or
push
jecxz
pop
pop
and
inc
push
int3
sbb
push
lret
mov
or
pop
cli
rorb
mov
sbb
int
dec
bound
inc
shll
xor
and
out
ljmp
dec
enter
or
adc
imul
xchg
mov
push
mov
movsl
pop
mov
out
or
xchg
dec
cmp
test
inc
cld
sub
stc
shr
ret
pop
es
mov
push
mov
lret
inc
or
test
int3
ljmp
or
xchg
pop
and
into
hlt
inc
ja
add
mov
xchg
pop
stos
pushf
mov
xorb
mov
repz
or
add
dec
add
push
dec
cmp
imul
mov
or
imul
jle
iret
adc
icebp
loop
repz
addr16
das
test
cmpsb
push
xor
pop
mov
xchg
fnstsw
mov
push
adc
inc
push
push
movsl
mov
sbb
push
cli
sub
popf
gs
cmc
adc
wbinvd
or
push
xchg
xor
mov
leave
xchg
repnz
jnp
xor
stos
inc
jnp
repz
sbb
out
mov
adc
adcb
adc
insl
ds
xchg
xchg
into
inc
xchg
or
and
clc
aad
or
frstor
inc
rcll
fistl
out
enter
scas
adc
adc
in
test
imul
sbb
test
pop
sub
inc
movsb
addr16
cmp
pop
bound
stos
pop
lret
sub
mov
jecxz
out
jl
pop
jle
dec
add
jae
cmp
in
sub
mov
xchg
sub
adc
jbe
xor
sbb
and
add
ds
lea
pop
sti
jecxz
cmp
add
lods
xchg
mov
loope
pusha
inc
sub
sub
xchg
mov
daa
adc
subl
in
cld
or
testb
rcl
pop
adc
xor
push
mov
sub
lretw
add
push
jo
inc
nop
adc
cmp
mov
bound
xlat
jb
fimull
push
mov
cmpsb
mov
ficoml
sbb
es
sbbl
orb
insl
jae
pushf
adc
and
bound
and
fiaddl
sub
add
jmp
data16
inc
test
icebp
aas
pop
sub
aaa
pusha
idivl
dec
pushf
jne
push
data16
movsb
pop
test
fcmovu
mov
push
inc
mov
fists
ljmp
and
test
add
inc
push
push
cmp
cwtl
insl
lret
add
inc
sub
fdivrl
idivb
jne
lahf
cmpsl
enter
out
jmp
mov
es
jmp
stos
int3
or
int
pop
dec
sbb
insl
out
addr16
and
mov
jns
push
or
pop
addr16
push
mov
lret
push
mov
pop
adc
or
push
insb
xchg
sub
push
cs
push
inc
mov
xchg
mov
xchg
rol
mov
xor
repnz
and
cwtl
repnz
icebp
int
or
dec
stc
mov
mov
movsl
lfs
inc
mov
add
fistpll
mov
pusha
jecxz
cmp
ja
xlat
les
xorl
xchg
sub
in
xchg
leave
jg
sti
adc
xor
jnp
pop
xlat
mov
insl
out
cld
out
test
negl
pop
sub
cmp
fsubrs
fbld
dec
mov
xchg
jno
add
mov
jne
out
lods
sbb
and
fnstenv
notl
daa
dec
hlt
pop
lret
jno
jp
push
dec
in
sub
push
bound
out
nop
add
popa
adc
adc
push
mov
jnp
imul
sbb
lds
fistpl
and
lods
or
lds
lahf
insb
cmp
loop
movsb
push
cs
lods
dec
jb
or
aas
fistl
insl
lods
xchg
cld
stos
int3
stos
mov
push
inc
mov
inc
mov
add
scas
jle
push
ror
mov
cmp
push
je
dec
lcall
mov
fwait
jecxz,pt
inc
sahf
pop
jecxz
xchg
dec
in
lahf
into
push
push
mov
cltd
call
sbb
ret
cltd
cld
fisttpll
inc
adc
shl
sub
sub
jmp
mov
cwtl
mov
and
add
or
dec
dec
in
push
clc
aam
lock
or
jl
and
sti
mov
inc
add
fstpl
dec
mov
mov
sar
push
mov
cmc
movsb
adc
das
push
fcomi
outsb
push
ja
es
fistl
push
add
in
jo
pop
cs
mov
sub
dec
adc
mov
adc
aam
rolb
lcall
or
cmp
add
or
mov
ljmp
adc
ret
imul
int
std
out
sub
pop
out
jecxz
stos
and
sbb
sbbl
test
mov
in
mov
sub
xlat
and
sub
mov
push
int3
subl
xlat
shll
inc
outsl
orl
popl
jp
divl
dec
rcrb
xchg
aam
mov
mov
test
js
into
pop
mov
mov
dec
mov
mov
cmc
or
jno
movsb
sbb
push
pop
cmpsl
sti
mov
pushf
shlb
adc
jne
pop
xchg
xchg
lods
clc
movups
jo
std
shrb
inc
movsl
stc
jns
push
mov
dec
xor
lahf
or
inc
jae
mov
arpl
mov
rcll
sbb
js
and
mov
movl
cmc
das
ljmp
or
pop
mov
hlt
cmp
xchg
popf
loope
mov
repz
je
lahf
fistps
dec
push
sbb
lcall
subl
add
divl
mov
out
sti
mov
sub
mov
enter
xor
mov
scas
aaa
xchg
and
cmp
js
pop
cmp
jns
or
cmp
pop
lock
cwtl
js
in
xchg
jnp
cmc
das
flds
and
mov
idivb
movsb
mov
xor
jne
pop
mov
sub
shll
cmp
sbb
ret
jmp
jp
jmp
lds
lcall
ret
out
sub
cltd
fisttpll
xchg
jle
dec
aam
hlt
rcrl
jo
add
add
mov
mov
sub
cmpsl
imul
push
lcall
add
push
out
test
int3
cmp
adc
inc
mov
out
lock
roll
cmpsb
sahf
movsb
jecxz
into
movsl
test
pushf
lods
ljmp
jbe
notl
test
pop
sub
push
jg
push
int3
lds
cmpb
pop
xor
insl
movsb
loopne
mov
pushf
mov
jge
iret
frstor
inc
mov
cwtl
or
std
jg
pop
sbb
pop
addb
jb
inc
daa
movsb
or
call
in
mov
push
sbb
mov
repnz
jmp
push
test
sbb
ljmp
or
hlt
inc
add
push
pop
xor
repz
cmc
lods
orl
loop
stos
adc
arpl
cltd
clc
sarl
jmp
mov
notb
push
sbbb
imul
jae
jl
cmp
scas
xchg
lahf
pop
loopne
fs
pop
inc
dec
adc
fildl
js
sti
dec
xor
aaa
ljmp
scas
xchg
clc
pushl
in
xorl
sbb
sarb
mov
dec
pop
mov
mov
scas
arpl
imul
out
gs
cli
push
je
repz
inc
push
std
fwait
adc
pushf
ret
outsl
cmp
add
mov
adc
daa
jnp
pop
pop
pop
dec
sahf
or
test
sbb
push
lods
ficomps
or
xchg
adc
jl
or
ja
enter
sbb
push
mov
add
mov
movl
test
test
pop
int
bound
sbb
inc
outsb
in
xchg
and
and
popf
loope
dec
loop
repz
test
jl
aas
mov
mov
outsl
add
pop
rcrl
inc
into
jp
inc
xor
sbb
mov
insb
mov
rorb
aam
out
in
or
ja
aaa
test
sub
pushf
aas
icebp
dec
repz
dec
imulb
out
fistl
add
jo
push
nop
push
imul
test
sbb
lock
fbld
pop
mov
xchg
movsb
xor
mov
jae
and
insl
mov
mov
jne
adc
and
mov
shlb
or
into
dec
and
xchg
sar
out
sbb
mov
push
sbb
popf
and
mov
pop
add
cli
stc
adc
stos
push
cmp
inc
scas
mov
call
int3
add
sbb
lea
pop
test
daa
jb
and
push
jb
out
dec
in
or
iret
or
outsb
pop
adc
loopne
dec
mov
repnz
mov
mov
sbb
rcl
xor
rcll
push
push
outsb
mov
aas
xor
arpl
pop
lret
aad
sbb
cmp
repnz
dec
pop
mov
mov
int3
sbb
cmpsb
das
shlb
loop
orl
stc
push
xchg
ss
mov
ds
add
outsl
dec
jb,pn
xor
xchg
sub
dec
out
addr16
mov
add
or
nop
mov
ljmp
mov
inc
repz
push
scas
xor
jl
daa
and
scas
fidivrl
xor
xchg
stos
cs
mov
jae
cld
fdivr
call
repz
popa
setnp
enter
push
cmc
pop
pushf
es
jmp
mov
pop
adc
repnz
test
adc
jecxz
lods
sbbl
cmp
pop
in
std
push
or
fsubs
jne
or
es
dec
mov
std
dec
xchg
xchg
push
mov
push
mov
dec
enter
mov
std
gs
lahf
sti
jp
inc
pop
loop
lea
test
mov
outsl
out
sub
cmp
in
and
or
in
pushw
mov
push
inc
jle
loope
mov
nop
mov
xor
push
adc
adc
int
xchg
test
mov
pushf
es
stc
decb
cwtl
adc
icebp
test
mov
icebp
sbb
pop
jnp
lds
stc
stc
lds
jecxz
shll
mov
leave
push
mov
fwait
xor
jmp
adc
sbb
xchg
imul
popa
push
cmp
cmp
test
mov
inc
fdivl
loop
jbe
pop
testl
out
cmp
leave
in
mov
cmp
out
pop
cmp
push
scas
add
cwtl
orb
imul
mov
aas
lds
dec
cs
pop
pop
lret
lret
subb
lret
and
inc
or
mov
mov
icebp
xor
mov
adc
jae
jmp
push
adc
lret
pop
and
add
cmpsl
jle
fidivs
dec
scas
mov
mov
sbb
inc
xchg
pop
inc
hlt
adc
lcall
jge
dec
cltd
repnz
cmpw
ds
fsubs
pushf
stos
in
ljmp
enter
jb
stos
xlat
nop
mov
cmp
inc
pop
int
fsubr
xchg
outsl
in
repnz
lock
jae
cmp
lods
test
gs
dec
adc
int
dec
aam
jnp
stos
aas
mov
dec
test
inc
mov
jg
lcall
mov
decb
xchg
dec
xchg
mov
sub
orl
mov
and
call
fidivrl
frstor
or
cmp
rorb
shl
and
sub
pop
pop
jns
std
adc
push
out
into
stc
dec
xor
add
cmp
pusha
movsl
adc
xchg
mov
leave
retw
into
outsl
arpl
mov
sbb
xor
movsb
jmp
xchg
in
pop
mov
fld
cmp
jmp
aas
dec
sub
ret
imull
adc
sub
xchg
mov
sbb
imul
lcall
out
lods
cmpsl
and
add
arpl
movsl
push
push
add
bound
into
gs
cmc
jnp
pop
mov
or
insl
mov
rcll
dec
insl
mov
jae
inc
inc
and
mov
cmpl
loope
xor
push
jne
in
je
jnp
nop
outsl
outsb
cli
ja
fldcw
cs
sub
pop
pusha
call
and
cmpsl
pop
inc
out
out
lahf
add
sbb
xchg
xor
add
xor
aad
xor
daa
movsl
stos
roll
sub
dec
repz
ret
push
cmpsb
outsl
mov
ficoms
cmp
nop
ds
pop
inc
or
inc
lret
and
pop
int3
repz
sbb
orl
test
aas
fucomp
fdivrp
out
hlt
hlt
fidivrl
adc
dec
sbb
cmpsl
mov
xor
vpmacsswd
test
cmp
lods
arpl
push
repz
add
outsb
add
xchg
mov
xchg
rcll
sub
mov
fsubrs
inc
sbbl
jnp
into
mov
ss
hlt
pop
and
and
mov
jns
sbb
into
and
sbb
or
stos
push
ficoml
mov
or
pop
stc
xchg
jmp
push
imul
pop
sar
jb
aam
mov
movsb
xchg
sbb
addr16
mov
mov
mov
adc
cmp
lock
ds
sbb
lcall
call
mov
xchg
fsubrl
popf
push
cli
fwait
xchg
mov
addr16
mov
add
or
test
mov
mov
notb
enter
mov
out
idivb
popa
stos
ret
sub
sbb
mov
hlt
aaa
clc
mov
repz
out
xlat
pop
jg,pn
dec
push
insl
jnp
xor
pop
and
aas
push
cmp
js
cmp
clc
lahf
orl
mov
cltd
sub
inc
les
aaa
repz
repnz
inc
loopne
sbb
testl
push
and
sbbb
jg
popa
xor
xchg
push
xchg
out
push
pop
push
jns
or
sub
inc
dec
lret
push
out
mov
push
jns
shlb
cltd
pop
repnz
push
mov
scas
mov
int
fs
inc
pop
popa
outsb
push
scas
add
pusha
or
xchg
stos
pop
sub
lcall
ficoms
outsb
mov
add
inc
jae
add
andb
xchg
in
pop
mov
aas
es
mov
cmp
and
test
mov
nop
and
pusha
add
incb
popa
xor
or
mov
mov
jge
psadbw
clc
lock
inc
aas
shll
mov
decl
or
inc
xchg
cltd
push
addl
push
cmp
sub
outsl
xlat
imul
push
inc
xchg
lods
sti
inc
dec
cli
xor
aam
push
add
ljmp
sub
or
push
inc
xchg
pushf
lcall
inc
loopne
and
pop
ror
hlt
out
ja
enter
lods
sbb
lret
dec
push
jmp
mov
inc
xchg
scas
and
in
pop
cmp
xchg
iret
and
mov
imul
mov
je
push
mov
into
xlat
xor
add
mov
jo
scas
pop
adc
addr16
cmp
mov
imul
sbb
not
push
dec
cs
sahf
jg
dec
mov
loope
jge
sbb
mov
dec
ss
js
pop
outsl
dec
inc
and
int3
jg,pn
lret
movsl
xchg
lahf
and
stos
dec
cs
call
mov
push
jae
pop
nop
movsl
outsb
insb
ja
sbb
and
fdivs
inc
xor
shlb
adc
ljmp
mov
cltd
cmp
test
pop
rol
push
xchg
das
mov
or
inc
add
sbb
mov
add
pop
xor
or
lds
cwtl
xchg
or
scas
xor
dec
rclb
es
pop
pop
and
pop
dec
sbb
popa
clc
iret
mov
push
mov
dec
fcmove
jnp
push
pop
pop
rorl
sbb
test
push
loope
cmp
shrb
clc
xor
mov
call
aad
xchg
xchg
iret
fbstp
mov
lock
aaa
lock
inc
das
cld
inc
dec
dec
mov
and
mov
xchg
icebp
add
adc
lods
mov
loopne
mov
or
or
je
sbb
adc
out
mov
je
xchg
add
fisttpll
ds
jle
xor
push
mov
call
jmp
cltd
ret
scas
jae
in
sbb
mov
pushl
rcrb
xor
or
cmp
and
out
pop
cmp
jmp
xor
mov
push
pop
push
popa
les
icebp
aad
xor
sub
push
sti
adc
adc
and
stc
jl
iret
das
xor
cmp
mov
enter
ss
push
es
sbb
fdivl
out
and
ror
repnz
sbb
mov
mov
shll
addb
cmp
lahf
imul
out
test
push
sub
add
push
mov
cmp
mov
lret
pop
push
shrb
push
pop
lock
mov
or
arpl
aad
sub
jge
dec
fidivl
cmc
dec
sub
or
mov
faddl
push
shll
cmp
popa
popf
scas
test
fcom
xor
sub
mov
adcb
mov
add
add
xor
jle
pop
test
lock
mov
js
pop
loope
int3
sub
mov
lcall
addr16
sbbb
shlb
ss
aaa
int
in
pop
cli
mov
fadds
jo
xchg
pop
call
jns
lods
push
push
mov
pop
xor
nop
cmp
fstpt
push
mov
sbb
pushf
call
sahf
add
repz
mov
jae
cmc
hlt
sub
inc
push
lret
push
arpl
mov
arpl
stos
add
cmp
sub
jle
sbb
les
adc
aad
jg
pop
das
cmpsl
adc
push
notl
push
sub
jb
lret
dec
imul
mov
ja
jb
test
pop
jmp
push
adc
imul
add
fadds
sarl
arpl
fsubrl
ss
jecxz
adc
loopne
mov
cmpsb
mov
lods
add
add
pop
idivl
xor
leave
lods
inc
scas
pop
jmp
lret
cmp
fmulp
fsts
adc
popf
clc
call
imul
xor
push
push
sub
aam
adc
jne
out
pop
jg
jecxz
bound
test
leave
ficompl
cmpsl
cwtl
lods
outsl
test
les
cmpsl
ja
mov
add
pop
lea
ss
add
sub
pusha
mov
mov
jle
xor
cld
pop
pop
push
cmpsb
imul
mov
pop
jae
jb
js
into
adc
sub
daa
dec
and
fwait
push
in
test
gs
pop
insl
push
adc
mov
or
mov
or
dec
mov
inc
adc
insb
pusha
dec
int
addr16
add
xchg
cmp
push
mov
jns
add
mov
cmp
aas
lds
popa
scas
les
push
sti
popf
xchg
jmp
sub
push
jnp
push
cmpsb
sbb
loop
sub
aaa
pop
in
dec
icebp
inc
xchg
insb
gs
out
insb
inc
cmpsl
xchg
jnp
pop
pop
sbbb
dec
jnp
xchg
mov
fsubrp
insb
das
movb
leave
mov
mov
xor
jo
test
inc
pop
addr16
push
lods
lret
cld
cmp
addb
sbb
orl
movsl
or
adc
cmp
faddl
lds
push
sub
bound
addr16
jae
outsl
dec
sahf
cmp
cmp
daa
cwtl
xchg
add
cli
stos
in
fwait
and
sbb
in
outsl
xchg
push
lret
cmp
pop
mov
add
mov
xchg
mov
in
add
adc
jnp
lcall
mov
pop
aad
es
xor
mov
dec
xor
icebp
inc
lods
mov
push
jmp
sub
roll
mov
add
cmp
push
mov
data16
fdiv
cmp
inc
out
mov
xchg
rcl
xor
cmp
jmp
cmp
sub
fidivs
jmp
cmp
repz
adc
mov
lea
sub
loop
fcomip
jbe
ret
xchg
push
adc
dec
lods
es
pop
ss
ficompl
cmpsb
and
mov
inc
or
jl
icebp
roll
mov
pop
jnp
or
mov
insl
dec
dec
in
adc
loop
dec
rcr
dec
ss
in
out
jbe
aad
cmpsl
xchg
outsb
xchg
fstpl
mov
cwtl
sbb
stos
cmpsl
pop
test
dec
mov
lret
mov
sub
aad
lahf
jl
push
stc
mov
jnp
aaa
fsub
xlat
inc
mov
mov
mov
loopne
pop
out
ret
ret
fwait
and
outsb
adc
pushf
xchg
adcb
fdivr
mov
imul
sbb
dec
push
jmp
inc
dec
xor
push
divl
push
in
jne
push
jmp
jmp
pop
scas
movsb
das
cld
add
subb
pop
jo
enter
dec
setae
aad
fildll
jmp
les
push
inc
and
aad
dec
or
cld
inc
pop
inc
xlat
and
inc
daa
mov
xchg
aas
out
add
in
loope
mov
ljmp
mov
fimull
push
iret
sbb
xor
add
or
adc
or
sbb
dec
insl
push
dec
push
xchg
test
test
mov
pushf
xor
inc
idiv
repz
xchg
in
push
imul
cmpl
xor
add
hlt
jno
arpl
sub
push
pop
nop
sbb
xor
dec
outsb
icebp
test
and
lahf
scas
mul
jl
cmc
pop
lret
gs
push
mov
mov
xor
imul
enter
mov
test
mov
mov
out
mov
std
cmp
mov
test
fbld
lahf
pop
call
add
les
xchg
pop
jae
setg
ds
inc
insb
call
jno
inc
aaa
lcall
add
dec
cmpsb
shl
test
push
bound
iret
iret
js
sbb
ss
or
sub
hlt
leave
jge
ljmp
fwait
push
xchg
cwtl
cmp
into
into
test
movsl
dec
mov
sub
ljmp
mov
cmp
inc
js
jnp
stos
push
add
or
arpl
jg
cli
clc
jecxz
imul
out
mul
pusha
cmpsl
adc
mov
mov
aaa
cmp
jae
ja
outsl
adc
inc
cmp
sbb
xchg
mov
mov
jo
or
out
cmp
inc
repz
das
push
cmpsb
or
or
dec
pop
ret
or
mov
push
jno
pop
jns
sub
push
fwait
lds
fdivs
cmc
mov
mov
inc
mov
stos
mov
movsb
xchg
call
push
and
push
xorb
mov
mov
js
in
inc
push
ja
pusha
imul
aam
addb
insl
inc
pop
addr16
popa
push
sub
stc
pop
jmp
mov
int
stos
div
push
into
push
sbb
pop
es
bound
fistps
mov
xchg
addb
loopne
adc
in
xor
repz
add
or
lock
rcrl
lods
jo
stos
sub
popa
or
adc
loope
mov
stc
push
les
pop
inc
into
jge
imul
aad
sbb
or
into
test
add
mov
loope
inc
gs
push
test
xor
jmp
inc
scas
adc
fnsave
icebp
mov
lock
mov
jecxz
lcall
mov
or
loope
inc
push
ja
sbb
push
mov
mov
jne
jns
push
outsb
or
sbb
add
mov
xchg
aas
dec
fdivp
sbb
rcl
mov
ljmp
inc
test
sub
inc
sub
gs
sub
loopne
pop
mov
push
dec
mov
mov
scas
sub
mov
loope
or
mov
mov
aaa
jp
sbb
das
insl
push
dec
test
lods
push
pop
adc
push
xchg
add
lret
repnz
xchg
hlt
jne
jnp
fisttps
mov
and
sbb
or
jae
cmp
adc
push
sub
mov
or
shrl
cltd
aad
pop
nop
jb
jmp
hlt
jbe
and
in
hlt
cmp
stos
cmp
lahf
scas
mov
mov
dec
push
imul
mov
fld
test
popf
stos
stc
and
fldt
sub
xor
mov
fisubs
sub
in
cmpb
and
push
mov
clc
mov
lcall
add
mov
or
ljmp
or
jp
icebp
fcoml
dec
mov
sub
dec
xor
push
sub
mul
cmc
sub
cmp
sarl
add
adc
sbb
or
jmp
fimuls
pop
add
aad
repnz
dec
ja
roll
inc
in
inc
mov
push
push
inc
rorb
aam
iret
adc
and
push
xchg
in
ja
enter
cwtl
and
xlat
out
mov
and
sub
pop
bound
fsubl
mov
mov
das
je
test
aas
mov
xor
cmp
pop
adc
sbb
das
and
stos
lea
xchg
insb
xlat
cmp
loope,pt
test
subb
cmp
lcall
inc
ja
dec
lds
and
jbe
jae
stos
leave
add
in
popa
jle
dec
pop
adc
js
or
cmpsl
sbb
aam
inc
and
repz
test
adc
sbb
adc
xlat
sahf
scas
cmp
fdivr
sub
iret
in
int3
add
lret
mov
aaa
mov
sarb
fisubs
jmp
jecxz
cmpsb
aaa
jnp
inc
movsl
xchg
pop
mov
outsl
and
imull
iret
negl
icebp
mov
adc
movsl
les
adc
in
in
xor
ljmp
loopne
lret
lods
not
jecxz
imul
xchg
pushf
loopne
in
dec
movsl
sub
sub
adc
or
popa
pop
mov
movsb
inc
je
mov
fs
mov
movsl
stos
and
ds
push
addr16
pop
and
sahf
test
add
xor
test
bound
jbe
imul
dec
add
sub
xchg
add
dec
cltd
ret
pop
pusha
out
adc
jg
pop
mov
insb
pop
out
data16
std
in
sub
ret
jmp
loop
or
ds
lock
inc
jmp
cmpsl
mov
cmp
jo
push
lods
dec
les
mov
mov
xchg
out
dec
and
mov
adc
cmpb
cltd
push
lods
sub
sti
mov
pop
xchg
or
roll
mov
mulb
adc
jne
inc
imul
daa
psrlw
sub
sub
fbld
repnz
jno
inc
dec
cmp
movb
jne
mov
mov
popf
out
movsb
lahf
xchg
add
daa
shl
mov
ja
repz
or
pop
add
pop
fiaddl
sub
rcrl
je
je
enter
push
stc
xchg
lock
lock
stos
sbb
shrl
cmc
cmp
arpl
or
shl
xchg
fs
mov
lret
push
es
je
pop
and
test
xchg
stos
xor
popl
mov
out
js
inc
test
mov
jo
mov
mov
subl
ja
fisubrl
cmp
js
ds
out
sub
scas
cmp
and
fildll
push
sarb
cmpsb
hlt
testb
xor
or
inc
aam
mov
xchg
dec
and
aaa
push
scas
pop
stc
add
inc
stos
add
add
daa
cmp
cmp
mov
inc
mov
lods
mov
mov
insl
fs
in
outsl
push
orb
jl
pop
add
rcrb
dec
pop
xchg
add
inc
add
xor
jmp
mov
pop
mov
test
je
mov
ljmp
jp
decl
arpl
adc
and
fisubrl
sub
adc
test
xchg
sbb
dec
call
jae
sub
lea
add
int
push
push
adc
xor
or
push
ficoml
mov
daa
or
mov
and
mov
mov
adc
aaa
je
andb
mov
nop
push
test
cmp
int
bound
mov
add
std
lods
repnz
das
mov
cltd
fdivrs
jecxz
ficomps
pop
cmp
xor
pop
mov
scas
jne
shll
repz
bound
sub
movsb
insl
push
push
out
jo
push
mov
dec
mov
adc
mov
dec
dec
jg
inc
out
xchg
xor
push
pop
inc
shll
lahf
jge
push
jbe
std
inc
stc
test
pop
fidivs
push
insl
bnd
mov
jg
xchg
fadd
or
out
inc
fsub
shll
mov
pmaddwd
jnp
outsl
addr16
mov
mov
push
rclb
daa
add
sbb
pop
aas
test
jno
jb
mov
in
jo
sub
jnp
testb
leave
mov
jbe
and
stos
lock
xor
test
push
mov
cmp
lret
push
cwtl
cs
movsl
mov
xor
fisubl
pop
cmc
test
xchg
ret
xchg
jo
xchg
bt
push
jb
daa
ljmp
lods
icebp
push
jp
mov
push
dec
cld
mov
das
push
je
pushf
jb
inc
popa
push
pop
cmp
jl
ja
lds
xor
and
fwait
rcl
scas
mov
fs
sahf
mov
mov
add
movl
aad
iret
sarl
arpl
sub
imul
fldcw
cmc
out
out
out
add
out
and
adc
shrl
xchg
out
repnz
pop
movsb
dec
pop
push
ret
xchg
popl
test
roll
fsubl
xor
or
lock
repz
cli
push
repz
pusha
push
xchg
aam
xchg
mov
cld
xlat
jae
loopne
in
addr16
mov
int3
inc
dec
sbb
imul
mov
fptan
movsw
xlat
in
inc
and
mov
cmp
and
cmpsb
sbb
movsb
cmpsl
cmp
jne
adc
fdivp
rorb
sbb
fst
cmc
xor
icebp
jge
dec
xor
xchg
mov
jnp
xchg
icebp
add
xlat
sbb
xor
ret
movsl
inc
bound
add
adc
jnp
loopne
sub
dec
cmpl
test
inc
int
fildl
nop
push
fmulp
repnz
sti
ds
into
add
add
xchg
inc
mov
mov
xchg
dec
icebp
jl
fcmovu
push
mov
and
in
gs
icebp
mov
mov
mov
insl
jb
dec
push
xchg
int
push
cmp
add
push
daa
in
addr16
inc
push
fisubrs
popa
dec
or
jge
movsb
jnp
mov
in
das
mov
cmpl
fsubrl
and
fistps
testb
test
lcall
lea
movsbl
adc
jae
ds
fdivl
mov
adc
cmpl
mov
outsb
fisubs
mov
xor
fdivrs
hlt
xchg
jge
push
std
sbb
adc
sahf
das
jno
mov
rclb
cld
add
ja
add
inc
cmp
add
les
pop
mov
inc
jbe
add
je
add
xchg
scas
or
ss
add
jl
lods
pop
sub
fadds
sbb
popa
idivl
int3
xor
sub
jo
test
in
icebp
ds
in
jge
lock
cli
out
repz
add
test
or
inc
inc
imul
xchg
and
or
filds
fcmovnu
push
jae
inc
mov
mov
push
lret
mov
lret
xchg
sub
sbb
push
sarl
mov
aam
shlb
daa
rep
adc
pop
or
mov
sub
add
cs
out
iret
fistpl
push
mov
ja
faddl
lods
dec
out
cltd
rcrl
or
cmp
cltd
adc
dec
sub
aas
sub
std
icebp
xchg
mov
fwait
xor
push
add
xchg
in
and
test
ss
inc
std
out
push
xor
fstpl
fcomi
fldcw
jbe
loope
into
push
cmpsb
adc
test
fdiv
int
sub
sub
ret
push
jmp
jns
or
inc
aaa
push
mov
stos
aas
aad
push
aaa
jae
scas
clc
and
push
cs
in
je
push
jnp
sub
imul
push
fdecstp
lahf
mov
adc
adc
dec
pusha
push
jmp
jne
adc
lock
sbb
popa
pop
and
scas
dec
ret
mov
ja
cli
xor
and
fidivs
rcll
out
stc
sahf
lcallw
mov
popa
mov
jbe
push
or
mov
cmp
movsl
pop
xor
sub
testb
sbb
dec
loop
rorb
jo
bound
ficompl
out
xchg
mov
addr16
sbb
mov
dec
pop
sahf
sbbl
stos
xlat
ja
adc
adc
int3
jno
ret
pop
inc
sahf
jns
push
sub
nop
call
pop
loopne
test
jns
jg
mov
pop
aad
jl
inc
mov
push
mov
pop
dec
nop
cmpsb
cld
xchg
jge
das
or
push
out
xchg
mov
add
pop
andb
js
enter
int
lret
cmc
adc
jnp
out
aam
cltd
xchg
push
scas
jle
shrb
mov
adc
dec
mov
xor
out
negb
cmp
dec
or
leave
add
aam
add
mov
cli
jg
xlat
shll
sub
dec
mov
in
sbbl
mov
jno
aam
jge
sbb
js
dec
xor
push
mov
mov
sub
pop
out
lret
or
mov
test
in
lods
dec
adc
iret
imul
sbb
mov
add
xor
and
aam
jle
add
jbe
push
mov
pop
push
imul
or
sub
cmp
mov
cmp
fbld
imul
out
repz
popa
sahf
add
xchg
data16
in
jns
test
xchg
adc
xchg
sbb
adc
cwtl
xor
incl
jmp
xchg
dec
js
fld
mov
cmp
mov
jmp
sbb
and
mov
cld
mov
fsubrp
dec
sub
in
dec
fisubs
mov
cltd
push
lret
popf
xor
insl
mov
movsb
inc
repnz
jns
enter
fldcw
cmovo
and
cli
jbe
xor
sub
sahf
xchg
es
dec
aam
cmpsb
add
sub
xor
xchg
inc
pop
dec
repz
test
and
stos
xchg
sub
push
adc
xor
rcrb
push
das
inc
push
dec
push
dec
xchg
push
inc
sbb
mov
lret
fistpl
cmpsb
or
mov
cmp
movsb
out
popa
push
cmp
punpckldq
adc
dec
dec
mov
or
mov
js
mov
mov
sbb
push
fnstenv
xchg
js
jne
fdivl
daa
xor
inc
ljmp
icebp
movsb
rcl
lret
jae
test
dec
pop
das
ret
sbb
mov
in
in
mov
xchg
inc
push
xor
xchg
pop
lahf
fisttps
mov
lcall
pop
test
adc
ret
push
sbb
pop
out
aam
adc
outsl
jnp
sub
test
mov
sti
popa
push
movsb
sahf
mov
xor
addr16
dec
jmp
cmp
and
sub
in
hlt
mov
push
pop
testl
pop
dec
mov
sub
sti
mov
and
sub
xrelease
cmp
xchg
xchg
cmp
ret
xor
mov
mov
nop
popa
inc
nop
outsb
int
mov
cltd
negl
inc
jecxz
fldl
jecxz
pop
bound
sbb
and
xchg
sub
les
stos
insb
lahf
push
cltd
push
enter
and
out
fldl
and
test
test
jmp
mov
sbb
xchg
pop
mov
push
dec
and
add
sub
call
lds
cmp
imul
mov
push
insb
test
stos
cmp
cltd
mov
pusha
ret
jmp
orl
dec
mov
jg
clc
xlat
roll
ds
stos
push
int3
xor
mov
pop
sahf
pop
outsl
inc
cs
dec
pusha
cltd
dec
popf
fldenv
loopne
loopne
js
addr16
out
pop
movsb
push
mov
lcall
ljmp
jns
sbb
sbb
pop
int3
mov
or
loop
mov
test
rcrb
dec
les
fistl
dec
imul
xlat
sbb
adc
into
xchg
imul
test
sub
add
mov
js
mov
sahf
or
cli
test
test
push
popa
out
mov
stc
inc
or
in
push
add
adc
hlt
xchg
outsb
pop
test
inc
fstpl
add
xor
in
and
movsb
dec
jg
pushl
cld
psubsb
push
sub
std
xor
adc
out
xchg
jp
int3
jmp
repnz
movsb
or
gs
ljmp
fs
pop
dec
push
aam
fs
sbb
inc
mov
pop
sbb
subb
popl
add
mov
cmp
out
loopne
pop
cmp
js
cwtl
jb
clc
mov
sbb
out
xor
cmp
into
xor
loopne
xchg
jbe
inc
jmp
in
inc
popf
je
add
sbb
loopne
nopl
inc
pop
aas
fists
es
push
cmp
andl
lods
jp
clc
pop
out
mov
js
sub
and
aam
add
and
cmp
lahf
push
clc
inc
and
sbb
nop
add
mov
and
sbb
dec
into
pop
mov
lds
cltd
jo
jnp
adc
in
sub
outsl
dec
dec
xchg
jle
out
sub
test
mov
sub
js
pushf
movsb
add
push
jnp
call
add
pop
imul
mov
ja
or
outsl
sti
test
test
scas
jns
loope
inc
mov
movsl
popa
push
clc
cmpsl
js
push
repz
mov
or
or
jge
je
lret
pop
pop
pushf
mov
dec
sarl
repz
cmpsb
or
call
or
add
push
lret
fnstenv
test
adc
add
fwait
daa
sbb
lea
mov
sarb
and
inc
xor
movsb
jecxz
add
xor
dec
aad
rorl
cwtl
fildl
sub
fildll
cmp
loopne
jmp
cmp
inc
push
sbb
sbb
fsubrl
jno
insl
insl
sbb
xor
lcall
rorb
mov
data16
pop
cld
xor
cmp
xchg
xchg
add
cmc
xchg
flds
lds
jae
xchg
cmp
mov
cld
push
mov
push
adc
arpl
push
fs
out
pop
je
cmp
call
xor
xor
je
repnz
scas
jae
int
mov
jmp
add
repz
rorl
ss
jne
add
add
xchg
jge
sub
mov
int
lahf
cmpsl
or
insl
and
in
jnp
pop
clc
xor
hlt
push
cwtl
dec
int
and
or
shl
divl
repz
dec
outsl
jnp
add
inc
xchg
out
inc
or
gs
jmp
pop
call
ret
push
pop
and
ljmp
inc
loopne
or
jae
sbb
les
fidivrl
add
sti
ss
push
repnz
push
sub
pop
fdivrl
aaa
mov
pop
pop
cld
and
aas
add
jnp
je
popa
fsubrl
in
pop
xor
dec
sbb
pushw
pop
fdivrl
mov
in
or
xchg
sbb
call
loope
push
mov
int3
jmp
mov
cmp
cld
mov
xor
mov
repnz
sub
cmp
iret
pop
xchg
mov
pushl
mov
bound
loope
adc
ja
jb
add
pop
dec
and
jbe
lret
sub
filds
loop
push
xor
adc
xchg
mov
pushf
sbb
loope
rcll
xchg
data16
stos
pop
call
jp
int3
xor
decb
fwait
sub
mov
mov
call
fwait
cmp
jnp
push
out
cld
imul
mov
lret
enter
lret
in
stos
ret
aaa
mov
sbb
lret
cmp
scas
cmp
xlat
sbb
lea
push
call
gs
sbb
or
adc
mov
testl
jo
out
insb
ret
inc
in
mov
ljmp
mov
adc
lods
xor
cmp
dec
arpl
push
pop
push
out
sbb
into
pop
jecxz
outsb
out
in
loope
jnp
insl
lea
mov
icebp
outsb
push
sub
mov
test
pop
or
jns
fmul
insb
rcr
fcomi
out
push
cli
lea
ja
gs
fwait
stos
insb
mov
and
out
mov
out
lds
test
mov
adc
aam
xchg
or
jbe
inc
fcom
jno
lret
jno
loop
test
sbb
mov
sbb
push
lret
je
mov
popf
push
jecxz
hlt
dec
xor
sub
imul
dec
cwtl
leave
dec
insb
cmp
scas
mov
cmp
push
jns
aam
sbb
js
cwtl
sbb
in
mov
jae
push
mov
ja
pop
insl
mov
jl
mov
adc
jg
bnd
add
stos
mov
push
clc
inc
lods
pushf
dec
in
repnz
test
sahf
fisubl
fistl
dec
loope
jle
mov
hlt
sub
push
stc
mov
push
mov
mov
lea
jae
mov
add
shl
mov
jecxz
cmpsl
and
nop
dec
frstor
mov
aad
js
xchg
loope
cmpsl
and
push
arpl
inc
aaa
je
sbb
je
dec
xchg
lcall
pop
popf
cmp
dec
fwait
jl
test
pop
mov
mov
imul
and
in
mov
call
std
inc
outsl
loop
das
push
jle
sub
cwtl
push
pushf
lock
lds
pushf
pop
mov
lds
out
es
imull
push
repz
imul
jl
sbb
or
fcomps
loope
pushf
pop
sub
mov
mov
in
scas
mov
mov
sub
arpl
xchg
push
inc
insl
loope
sbb
add
mov
jbe
fcmovbe
mov
sub
xor
inc
xchg
xor
pusha
les
cmp
xchg
push
dec
and
shll
or
outsb
or
in
in
int3
mov
or
clc
pop
fistpl
add
xchg
inc
mov
mov
mov
lds
ret
jge
xchg
mov
cmp
inc
cmp
xchg
imul
dec
cmp
stos
outsb
insb
xchg
test
sub
cmc
mov
jae
test
addr16
jnp
gs
sub
mov
rolb
xorl
bound
sub
push
call
xchg
jb
inc
xor
lcall
aam
scas
adc
out
add
xchg
lret
jmp
out
rcr
jge
push
into
repnz
dec
push
pop
mov
push
insb
ja
adcb
gs
add
pop
cmova
inc
jecxz
dec
decb
mov
clc
dec
jbe
mov
dec
loopne
mov
sbb
inc
loop
and
popf
adc
pop
push
insb
test
inc
fsubl
loop
or
jmp
mov
dec
jecxz
aaa
mov
cwtl
mov
cs
out
mov
fldl
test
cmpsb
pushf
js
daa
sub
mov
pop
in
add
shll
lock
push
es
and
fbstp
mov
jle
xchg
xor
psubd
push
cwtl
shrb
jne,pn
inc
jns
in
pop
cmp
mov
inc
loopne
and
icebp
dec
movsb
shlb
cmp
aad
fidivrs
bound
daa
add
fld
mov
icebp
outsl
pusha
adc
adc
cmp
fsubl
jp
mov
stos
mov
imul
and
scas
mov
dec
and
pop
add
rcr
ret
out
dec
addl
cmp
pop
andl
xchg
ds
cli
cmp
repnz
into
addr16
jne
jle
pop
sub
xor
stos
xor
adc
mov
dec
jae
syscall
pop
cmpsb
push
lea
dec
ss
cmpb
inc
das
sub
inc
mov
pop
fsubs
xlat
xchg
dec
and
xchg
dec
mov
fldenv
add
or
pop
cmpsb
push
cmp
loop
and
aam
inc
add
dec
mov
or
inc
sbb
dec
mov
jae
fistpl
push
test
call
jle,pt
or
jnp
xchg
mov
pop
iret
fcoml
lret
imul
xor
add
xchg
push
out
aas
push
aad
push
repz
push
clc
fs
cmp
cli
std
jp
adcl
sbb
push
cmp
jmp
push
ss
dec
xchg
fidivl
sub
mov
jle
xor
ja
mov
lods
add
stos
mov
int
icebp
sub
sbb
or
xchg
cld
or
and
je
or
loopne
add
jle
fwait
mov
mov
call
lret
and
mov
or
fbld
push
mov
xchg
pop
mov
call
cwtl
push
sbb
cmpsb
jnp
mov
mov
enter
xchg
mov
sub
dec
dec
mov
mov
push
int
int3
call
sub
ss
sub
add
loope
xlat
add
cmpsl
std
mov
cmp
mov
in
mov
lcall
aaa
pop
lret
xor
pushf
nop
xchg
jbe
aas
cwtl
fsubrs
dec
xor
mov
sub
dec
sub
cmp
stos
test
fistl
push
adc
outsl
push
jb
or
mov
inc
cmp
or
int3
rcll
ja
gs
or
mov
add
shrb
js
push
or
negb
xor
lock
or
scas
mov
mov
mov
jp
push
fmuls
and
shl
cld
outsl
xor
lret
pop
pop
adc
stc
xor
inc
arpl
repz
orl
and
mov
sbb
pop
jmp
stos
jmp
lods
adc
rolb
dec
push
lds
movsl
xchg
mov
les
mov
aaa
lea
sub
inc
or
inc
push
jns
test
jp
jmp
mov
fdivrp
adc
inc
lahf
inc
shlb
dec
cmp
test
test
jp
jmp
pop
jle
rcrl
std
lds
push
adc
sti
ss
mov
xadd
loope
xchg
test
aad
mov
mov
sub
lahf
movsl
mov
and
leave
push
cmpsb
inc
xchg
popa
in
fs
pop
in
push
add
jae
mov
test
xor
add
sbb
pushf
xchg
jbe
mov
rcr
dec
dec
xlat
loope
popa
hlt
fwait
pop
insl
movb
push
data16
and
into
mov
cmp
ficompl
int
xor
xchg
loope
hlt
lods
insl
ret
cbtw
add
mov
inc
xor
jnp
outsl
ljmp
push
loope
outsb
add
xlat
es
ljmp
and
repz
loop
dec
loop
sub
imul
fs
pop
clc
add
gs
loope
dec
mov
mov
aas
out
js
cs
push
test
nop
test
fstpt
enter
mov
pop
lret
cwtl
es
mov
pop
in
mov
repz
int
pop
repz
jecxz
out
stc
xorb
ja
sbb
test
mov
rcll
imull
inc
out
mov
xor
pop
xor
sbb
fs
fdivrl
fnstenv
bound
adc
test
mov
mov
mov
das
fbstp
xlat
fxch
shrb
inc
rcl
hlt
arpl
jecxz
xorl
fiadds
or
test
out
jbe
mov
jge
jae
stos
ret
fcoml
daa
mov
lahf
fcmovnbe
cmp
mov
mov
mov
gs
sub
leave
inc
xor
push
sbb
cmp
dec
cwtl
cmp
repnz
sarb
loope
das
rcl
mov
ljmp
push
add
sbb
xchg
ljmp
xchg
in
dec
popf
add
out
lods
lret
sub
std
mov
fidivrl
pop
xchg
and
cmp
jne
jns
mov
xlat
jne
mov
dec
repz
mov
sti
std
out
in
cwtl
insl
xlat
lods
and
mov
xchg
rclb
add
xor
iret
inc
mov
or
out
sbb
dec
movsb
xchg
adc
push
push
jnp
adc
stos
lds
xor
push
and
stc
sbb
ss
xor
sub
dec
mov
add
sahf
xor
in
imul
sbb
icebp
cmp
pop
aas
lock
push
or
inc
idivb
mov
dec
pop
xchg
fcoml
sub
ljmp
cld
inc
sbb
sub
loopne
inc
cmp
adc
lahf
add
adc
nop
loop
push
xor
stos
frstor
mov
imul
pop
push
popf
mov
imull
jae
push
mov
into
dec
add
mov
push
or
gs
nop
mov
inc
pushf
jg,pn
or
xlat
iret
out
in
test
rcr
leave
cmp
out
repz
negl
stc
aam
push
insb
push
insb
inc
mov
push
scas
sub
pop
ds
fnsave
xchg
mov
jo
mov
xor
pop
fsubl
xorl
or
jp
ror
xchg
inc
mov
dec
inc
jge
cmp
movb
jge
cmc
call
repnz
lods
lret
ljmp
push
pop
adc
decl
inc
repz
inc
sti
dec
popl
lods
or
or
movsb
cltd
and
push
jne
in
push
movsb
push
jl
mov
and
cmp
incb
xor
mov
es
xor
mov
push
cltd
sub
clc
mov
mov
jns,pn
mov
mov
and
in
out
mov
xchg
pushf
mov
rol
into
dec
testl
fsubrs
out
sub
nop
orl
push
pop
cmp
sub
jle
push
jp
mov
push
dec
aam
push
outsb
cmp
mov
dec
xchg
dec
pop
icebp
xor
out
mov
fwait
jno
pop
pop
pop
cs
adc
and
jo
add
loope
cmpsl
inc
xlat
popa
xor
es
out
fdivl
fwait
test
nop
jmp
dec
hlt
or
cmpsb
xchg
fstpt
rolb
dec
sbb
or
lea
in
lock
xorl
sub
frstor
adc
es
push
push
mov
inc
jb
and
mov
loopne
sbb
int3
mov
sbb
dec
fs
or
neg
cmp
ror
cs
pop
lods
or
pusha
jl
ss
inc
push
fs
cmp
jns
cmp
lock
cmp
sarl
jae
mov
or
pushf
insb
and
out
sbb
lds
mov
scas
jg
subb
cmp
fnstsw
cmp
and
sub
pop
and
and
mov
insl
jb
xor
jge
mov
hlt
mov
jne
cwtl
adc
mov
loop
xchg
loop
dec
stos
rorl
bswap
stc
leave
mov
jnp
cmpsl
cmp
push
movsl
mov
xchg
dec
mov
sbb
iret
mov
add
sbb
scas
and
xor
cmp
push
lea
gs
sti
push
dec
test
enter
cmc
xor
hlt
sub
mov
popf
jns
sub
out
jno
jge
daa
pusha
push
push
xor
or
ss
test
jo
push
inc
aad
jmp
cmpsl
pop
jns
mov
cmpb
cmp
add
popf
xor
cmp
pop
popf
ret
fisubrs
or
inc
push
sub
fdivrp
push
push
cmp
sti
jae
push
pop
inc
mov
shlb
sbb
pand
jg
or
mov
jp
pop
jo
push
jge
mov
jbe
js
push
lcall
pop
clc
fsubrl
push
xchg
and
xchg
cmp
mov
inc
dec
dec
push
lods
sub
int3
mov
jmp
movsb
inc
rcrb
mov
fsubrs
jnp
ljmp
stos
lret
adc
cmp
mov
out
mov
cltd
pop
push
add
shld
mov
mov
rclb
push
adc
ficompl
andb
xchg
hlt
into
test
mov
outsb
adc
lock
insb
and
mov
sahf
mov
cwtl
icebp
sbb
mull
lods
mov
insl
fcom
mov
imulb
mov
dec
int3
mov
jmp
cmp
cmp
jb
mov
aas
lret
es
mov
repz
cmpsl
mov
push
sub
rclb
mov
data16
mov
pop
sbb
rcrl
mov
mov
stos
xchg
cmpsl
pop
insl
lock
mov
fiadds
adcl
add
cmpsl
mov
pop
loop
cltd
mov
xchg
sub
cmp
pop
notb
mov
adc
sub
cs
xor
cli
fcmovbe
je
cmp
jmp
push
mov
sti
xor
sub
fnsave
lods
icebp
and
ljmp
jns
insb
push
jo
mov
enter
call
inc
xchg
stc
in
mov
or
xchg
pop
outsl
in
sarl
into
cmp
jp
sub
fistl
xlat
xchg
dec
mov
ret
jmp
inc
hlt
out
push
stos
cmpb
popa
jae
mov
xor
leave
push
in
jb
mov
add
jnp
ror
push
xchg
jg
cmp
or
jbe
shll
and
push
mov
sahf
into
sbb
or
mov
jle
stc
loop
jg
cmpb
mov
dec
cmp
mov
icebp
enter
push
fucomp
sub
stc
aad
ret
mov
cltd
mov
mov
test
adcl
and
sub
lahf
int
in
dec
pop
xlat
les
adc
mov
xchg
pusha
mov
mov
lock
and
mov
or
lods
leave
js
xor
mov
hlt
ss
bound
scas
cmpsb
jae
jle
sahf
je
push
ds
fimuls
loope
xor
pop
mulb
jp
xor
and
jae
ret
xor
test
fidivs
in
dec
dec
sub
xor
xchg
repnz
icebp
adc
mov
cli
scas
ss
adc
inc
push
mov
ret
clc
lock
jb
jns
aam
adc
ret
fxch
fidivl
lods
inc
outsl
jbe
add
xchg
xlat
fstps
pushf
cmp
add
data16
cmpsb
cli
cli
fildll
out
lea
mov
inc
icebp
rorl
aam
cmp
es
adc
lods
movsl
xchg
js
mov
leave
sbb
nop
and
decb
push
out
jle
mov
cmp
into
mov
push
lock
std
ss
fsubrl
mov
rolb
outsb
fldenv
dec
leave
jbe
sbb
jl
adc
in
jmp
xchg
jge
fidivrl
inc
cli
add
movsl
cwtl
jecxz
and
sbb
sub
aas
adc
repz
mov
scas
add
mov
fdivr
mov
and
push
add
daa
sbbb
lahf
dec
mov
xchg
out
call
test
mov
sub
inc
aaa
add
jne
rorb
jecxz
sar
dec
mov
mov
jl
mov
js
aam
lods
mov
pop
mov
sarl
adc
enter
fdiv
je
test
jp
frstor
or
push
data16
dec
sbb
icebp
cmpsb
and
dec
mov
pop
mov
test
jmp
pop
frstor
aas
lock
lret
pop
push
popa
or
daa
xchg
xchg
pop
push
push
jnp,pn
sbb
cmp
leave
clc
mov
dec
aad
inc
xor
movsb
orl
sub
fcomi
xor
sbb
movsb
mov
lret
mov
fstps
mov
jno
fsubs
out
enter
push
mov
arpl
andl
add
mov
jecxz
mov
call
int
cmpsb
cmp
adc
add
cmc
jg
and
xchg
pop
das
rcl
mov
jae
test
xor
add
icebp
mov
xchg
std
pop
xor
pop
and
and
loop
sub
icebp
xchg
jo
mov
pop
mov
xchg
rcrb
dec
mov
pop
pop
pop
bound
movsb
out
push
insb
sub
pop
int3
repnz
int
mov
int
inc
pushf
xchg
inc
outsl
pop
jge
lret
add
hlt
cmp
lods
mov
fldcw
push
lahf
mov
jns
jle
sub
imul
fsubrl
faddl
inc
jmp
es
popf
ljmp
scas
fdivl
icebp
cli
cwtl
jns
jns
sbb
push
or
push
punpckldq
popa
add
mov
mov
into
dec
imul
sbb
idiv
jo
jp
test
xchg
lods
cmp
dec
adc
cmp
mov
mov
dec
outsl
xchg
addl
jl
lods
cmp
in
fsubrl
cmp
xchg
cmp
icebp
lods
shld
dec
aas
jb
add
cmpsb
enter
cmp
add
xchg
call
inc
xor
test
rorl
fisttps
scas
push
or
push
mov
mov
ja
sub
push
push
and
stc
out
lahf
shr
jp
and
aas
lret
dec
add
aam
movsl
push
jge
dec
arpl
dec
push
inc
lds
sbb
stos
mulb
jle
or
sub
mov
sbb
mov
mov
mov
sub
xor
loopne
xchg
jp
in
arpl
jnp
rolb
rcrb
addb
xchg
inc
insb
push
iret
in
add
cld
jno
adc
icebp
xchg
mov
lcall
fcmovu
sub
mov
dec
std
sbb
xchg
jmp
push
aam
into
and
xor
movsl
jae
fsubrp
push
mov
outsb
xchg
shrb
pop
and
mov
fldlg2
or
je
sbb
sub
push
sbb
sub
fcomps
adc
movsb
xchg
jne
ja
aad
or
cmp
xchg
push
or
addb
pop
mov
ret
or
push
movsb
add
arpl
ds
mov
idivb
bound
adc
and
outsl
popa
jecxz
mov
inc
shlb
xchg
ljmp
cmp
push
rcrb
imul
insb
ljmp
test
popa
in
mov
jmp
jle
mov
icebp
fwait
pusha
adc
ds
push
cmc
or
iret
jle
cmp
lods
test
mov
sub
inc
lods
lea
xchg
xchg
or
jne
mov
cmp
in
sbb
aad
jle
jnp
and
push
push
in
jo
cmp
dec
mov
add
adc
hlt
aaa
fs
adc
jge
test
xor
arpl
repnz
jbe
xchg
mov
jo
and
idiv
fisubl
andb
cmc
xor
lret
push
adc
xorb
mov
jae
movsb
mov
cs
bound
xchg
in
test
dec
cld
inc
outsl
or
test
adc
movsb
cmp
jmp
mov
orl
dec
push
cmp
sub
pop
jnp
ficoms
dec
sub
dec
js
movsl
aad
mov
mulb
inc
adc
jg
and
insb
pop
xor
dec
pop
ja
mov
lods
mov
lret
sbb
hlt
mov
push
pop
sbb
xor
cli
push
dec
mov
or
sub
xchg
loopne
jo
sbb
or
pop
push
sbb
cmp
mov
xchg
xor
or
clc
fistpl
dec
mov
call
jp
mov
xlat
inc
sarl
shr
jg
sahf
js
call
jp
mov
in
inc
add
pop
call
enter
mov
add
push
sbb
xor
outsl
push
repz
ljmp
adc
leave
xor
movsl
in
outsl
repz
out
mov
jne
test
sbb
cltd
out
cltd
add
pop
scas
xchg
out
sahf
icebp
sbb
dec
sub
mov
out
fs
rcrb
mov
aam
mov
pop
lret
mov
int3
pop
sub
mov
mov
iret
sub
fwait
mov
mov
addl
dec
mov
enter
mov
and
out
cmp
fstl
cmp
jno
fsin
dec
mov
fmuls
fsubl
push
pop
call
mov
movsb
or
int3
daa
and
stos
stos
into
jbe
ljmp
mov
cmpsl
outsl
out
rcl
insb
fstl
jecxz
cmp
gs
outsl
sub
cmp
xchg
add
clc
stos
outsb
clc
xchg
cli
inc
mov
sbb
xchg
js
shll
sbb
jno
fcomp
or
bound
adcb
lods
pop
gs
test
xor
sub
mov
call
inc
xchg
sub
mov
jb
pop
in
lcall
pusha
cmp
stc
sahf
scas
sub
pop
or
ret
push
ret
pop
sbb
int
sub
mov
ret
into
xacquire
lcall
sub
inc
sub
test
loop
or
mov
das
sarb
push
repnz
mov
adc
mov
test
mov
iret
ss
rol
ret
mov
mov
pop
or
clc
mov
jp
leave
pop
pushf
sbb
push
sbb
cmpl
jmp
lret
inc
mov
stos
setle
hlt
cmpsb
shl
jmp
jp
cld
jmp
and
call
int
xchg
push
xchg
sub
xchg
add
addb
sahf
out
pop
lcall
mov
fstpt
gs
call
dec
mov
pop
js
data16
lock
shll
xchg
xor
fsubr
or
stos
jecxz
pop
cmp
push
addr16
lods
daa
int
dec
cwtl
andb
xchg
roll
sbb
nop
pop
mov
sbb
sub
rcrb
mov
mov
mov
fwait
les
jp
cltd
xchg
sub
xlat
lcall
rorl
sbb
addr16
push
xchg
xchg
xor
out
pop
mov
push
stc
test
int3
pop
push
xchg
dec
lds
roll
test
and
or
xchg
jle
loopne
mov
mov
or
push
lock
movsl
subl
sub
mov
dec
aam
rcrb
inc
push
rclb
adc
divl
xor
divl
sub
stos
lock
lock
leave
fbstp
call
insb
mov
push
pop
jnp
aam
mov
sub
test
jnp
adc
and
and
jecxz
outsl
push
loop
xlat
arpl
fidivs
pop
daa
aas
out
cmp
lret
xchg
fidivrl
insl
popa
jg
mov
push
outsl
pushw
mov
xchg
pop
push
jge
jne
in
test
repz
lods
xlat
stos
and
movsl
pop
bound
movsl
dec
xor
and
popf
mov
push
imul
test
mov
mov
xchg
cmp
pop
push
notb
jns
jle
incb
adc
cmp
mov
aad
and
inc
adc
sbb
push
mov
mov
inc
push
push
push
jnp
jne
in
sbb
idiv
addr16
pop
imul
test
sarb
mov
sub
out
pop
pusha
cmpsb
mov
lock
sub
mov
sub
jle
int
inc
outsb
mov
sti
std
pop
push
loope
js
leave
inc
pop
pop
in
dec
icebp
xchg
and
popf
sbb
push
fmuls
or
stos
jb
cmp
icebp
cmp
dec
popa
mov
stos
sar
ja
popf
cmp
and
xlat
arpl
out
imul
mov
pop
popf
push
rcrl
inc
div
sub
das
mov
loopne
inc
sub
pusha
or
dec
pop
stos
jnp
mov
xor
pop
dec
stc
iret
repnz
repnz
mov
sahf
arpl
dec
cmc
mov
xchg
xor
lret
leave
in
pop
cld
call
repz
cmpl
cmpsb
ss
movsb
or
orb
dec
fcoml
leave
loope
std
or
jg
or
pop
lret
arpl
sub
xchg
out
lret
sub
mov
stc
iret
test
mov
or
les
inc
xor
and
enter
mov
dec
es
sbbb
lcall
jmp
sub
mov
push
sbb
jle
cmp
cli
mov
jmp
lcall
xchg
push
popf
mov
out
dec
ficoms
pusha
mov
imul
dec
daa
or
jbe
and
mov
arpl
sub
or
icebp
inc
pop
stos
pop
aad
popa
cli
orb
jmp
lock
std
and
out
vpor
int3
and
pop
out
jl
mov
xor
or
pop
fmuls
dec
and
or
or
mov
popa
xor
inc
ss
add
lods
es
dec
and
xor
xor
xor
orl
xchg
test
lahf
jae
xlat
data16
sbb
pop
pop
fbld
sbb
sbb
jecxz
sti
cwtl
push
xor
bound
scas
mov
insl
jnp
jae
js
daa
lret
add
adcl
ljmp
fwait
and
mov
scas
pop
mov
jno
fildl
inc
inc
xchg
icebp
icebp
loop
std
in
outsl
stc
call
mov
icebp
mov
test
jmp
repz
orb
inc
ja
pop
repz
add
sub
mov
inc
shl
push
pushf
orl
out
pushf
int
add
sub
jle
dec
xor
sub
jp
add
or
rorb
mulb
in
inc
test
cld
lahf
adc
xchg
mov
lds
sbb
rolb
rcll
jg
xchg
in
mov
cmp
adc
outsb
cmc
fnstenv
cmp
sub
xchg
bound
outsl
mov
jae
cmp
lahf
lods
lods
icebp
sbb
cmpsl
mov
gs
and
cmp
out
or
adc
test
mov
scas
stos
xlat
push
mov
pop
popa
cmp
addl
and
xchg
adc
inc
scas
cmpsl
cld
jle
lcall
imul
xchg
adc
xor
and
adc
lret
mov
jo
mov
xchg
mov
push
inc
incl
stos
sbb
popf
je
addr16
icebp
cmp
xor
mov
aas
push
shr
pop
sub
shlb
add
movsl
aad
add
xor
ds
dec
ficomps
imul
into
jo
mov
cwtl
js
add
cmc
notl
mov
cmp
cmp
cwtl
cwtl
popf
lods
into
popf
popf
xorb
xchg
in
ljmp
jae
in
inc
add
stos
repnz
inc
std
adc
pop
and
xchg
scas
mov
lock
and
xor
int3
pop
movsb
sub
push
cli
repnz
stc
add
sub
jno
data16
fmuls
arpl
in
mov
xor
in
jl
add
in
rolb
lcall
adc
inc
insb
in
jg
mov
adc
add
or
sbb
fwait
hlt
in
mov
push
inc
xor
adc
outsl
cmc
xchg
or
dec
sub
mov
push
pop
hlt
inc
scas
pop
jb
gs
mov
es
sbb
cmc
in
jg
sbbb
jns
in
hlt
lahf
popf
or
xchg
frstor
repz
icebp
xchg
adc
rorb
movsb
aad
in
mov
arpl
lods
sti
adc
add
lahf
mov
and
inc
mov
mov
fwait
sub
daa
or
sbb
sub
mov
movsb
ret
xchg
fmul
mov
repz
inc
jns
adcb
jb
mov
pushl
rolb
cli
and
ret
xor
stos
mov
jb
testb
push
sbb
mov
popa
mov
and
sbb
mov
jle
dec
or
xchg
popf
or
cmp
hlt
xor
movsl
sti
pusha
and
hlt
sbb
push
adc
adc
les
icebp
adcb
popa
xor
sbb
adc
xor
mov
inc
rcll
push
xor
adc
jp
xor
sub
mov
dec
mov
test
mov
add
mov
jo
repz
loope
sub
add
stos
add
and
stos
dec
bound
shl
loop
call
add
xchg
push
stos
inc
jae
push
clc
and
lea
stc
cmp
or
xlat
imul
add
fnstsw
pop
outsl
cmp
xor
or
sub
jmp
push
ret
xor
adc
nop
xchg
xchg
sbb
add
add
mov
insb
add
lret
inc
scas
test
mov
xor
push
jl
and
mov
xor
daa
adc
xchg
mov
xchg
dec
js
mov
fisttpl
cmp
fdivs
mov
in
repnz
fadds
test
icebp
cmp
ja
cmp
pushf
inc
je
adc
adc
addr16
fstpl
in
inc
je
scas
sahf
adc
pop
cmp
mov
push
shlb
repnz
cmpsb
cmpsb
notl
fbld
js
test
jns
xchg
or
fldl
pop
pop
ljmp
ss
lcall
into
pop
ljmp
inc
sub
call
mov
shlb
or
into
mov
subb
inc
iret
jle
adc
jb
xor
or
jmp
fdivs
adc
jp
cwtl
mov
adc
les
in
mov
out
jecxz
aas
mov
scas
pushf
xor
mov
push
mov
mov
inc
outsb
loop
inc
test
mov
sbb
fisubrl
in
fnsave
jns
sahf
adc
xchg
addr16
push
pop
adc
push
jp
and
push
jbe
fs
ret
push
out
js
mov
jmp
dec
add
fldl
xchg
in
rcrl
in
sub
jg
aad
push
out
pop
xor
cmpl
arpl
xor
cmp
dec
outsl
push
mov
add
add
mov
mov
dec
mov
mov
jl
out
and
out
ja
add
mov
push
xchg
lret
cmp
or
and
mov
ja
push
xor
pop
mov
mov
jo
push
loopne
dec
mov
in
cmpps
mov
push
cmp
test
ficoml
xor
jmp
sahf
loopne
push
les
mov
mov
dec
add
divb
stos
mov
xlat
scas
mov
and
jg
int3
sbb
xlat
xor
jno
cmp
mov
in
mov
add
rcrl
out
push
jns
adc
std
popf
shrb
push
push
ret
ss
adc
mov
fsubs
jb
das
add
adcb
scas
in
repnz
adc
sbb
leave
and
push
lea
jg
sbb
sbb
aad
movb
sub
xor
gs
mov
iret
add
mov
fisubrs
imul
mov
movsb
sub
imul
add
adc
mov
jo
pop
pusha
cmp
cs
xchg
das
mov
test
mov
loop
test
xor
ret
addb
mov
push
into
mov
or
xchg
xchg
es
cld
cmpl
dec
or
or
out
imul
lock
fwait
inc
loope
mov
inc
mov
loop
pop
jae
out
inc
insb
cmp
movsb
paddw
or
cli
arpl
addr16
pop
mov
and
push
enter
xchg
cld
fdivl
fsubrp
push
in
mulb
jbe
pop
inc
push
push
mov
sahf
flds
js
aaa
lods
mov
das
xchg
jge
lret
mov
nop
daa
bound
repz
das
shrb
mov
icebp
pop
jbe
or
jno
xchg
dec
adc
mov
inc
dec
lret
addl
inc
adc
jb
jnp
pop
mov
cld
mov
inc
aaa
int
les
stos
xchg
scas
cmp
inc
mov
lret
mov
hlt
cmp
bound
stc
hlt
enter
xchg
js
pop
jb
xchg
mov
cld
outsl
xor
subl
push
arpl
fwait
mov
xlat
jne
enter
dec
lock
std
cmpsb
mov
call
testb
adc
ret
lods
and
iret
cmp
cmp
imul
adc
push
out
xor
mov
dec
pop
loopne
xchg
jns
pop
sbb
push
add
xchg
sbb
aas
scas
mov
jg
test
das
xchg
and
pop
cmpsb
mov
outsb
adc
mov
ja
mov
mov
jge
ljmp
cmp
into
lcall
dec
cmpb
mov
pop
fsubs
scas
out
or
mov
mov
es
dec
les
cmp
dec
mov
mov
jecxz
test
mov
jmp
std
stos
jg
sub
shrl
mov
push
mov
dec
push
fcoml
mov
arpl
bnd
or
and
loopne
sub
orl
loopne
cmp
adc
testb
xlat
ffree
fwait
cmp
push
xchg
movb
inc
dec
push
icebp
inc
cmp
lods
imulb
pop
xchg
or
sti
pop
outsl
movsl
aam
mov
enter
push
scas
gs
push
sub
pop
dec
jne
stos
in
or
and
sub
dec
int3
dec
push
mov
leave
jnp
cmp
rcrb
ljmp
adc
add
in
jns
push
dec
mov
mov
cmp
je
subb
rcl
push
add
enter
leave
jns
pop
mov
cld
dec
shll
and
mov
int3
neg
aam
sar
outsb
clc
test
cmp
xchg
adc
and
adc
in
mov
andl
push
cmp
sbb
mov
push
mov
jo
inc
lds
dec
xchg
push
shll
mov
mov
popf
dec
xchg
ljmp
fdivs
push
fs
jle
mov
sbbl
push
in
ret
sub
jno
movsb
gs
loop
fwait
loope
call
lahf
pop
pop
add
sbb
loop
ja
fcmovne
addr16
push
lds
xor
xchg
lahf
xchg
ret
mov
mov
cli
aam
in
fnsave
xchg
dec
outsl
mov
xor
ja
movsl
cwtl
xor
mov
orl
andb
out
das
dec
adc
mov
pop
pushf
cmc
fbstp
fs
lea
dec
inc
stos
lret
mov
cmpsl
test
xor
lahf
mov
ds
mov
aaa
mov
mov
dec
pop
xor
dec
inc
aaa
xchg
daa
or
stc
jl
push
xchg
add
subl
fs
pushf
rcrl
mov
ss
push
mov
jle
jmp
mov
jecxz
cli
mov
jecxz
pop
sbb
sbb
in
nop
jge
mov
loope
rorb
mov
or
fmulp
lcall
sahf
out
stos
repz
aaa
or
pop
xchg
imul
or
xchg
cltd
fdivs
mov
testl
scas
inc
push
imul
ljmp
les
out
roll
pop
adc
ja
stos
stos
inc
rol
fimull
lret
popf
adc
and
jp
cli
mov
rcrl
in
cld
cmp
xchg
sub
dec
mov
xor
push
xchg
jne
xchg
sbb
mov
cmp
xchg
xchg
les
inc
cli
repnz
enter
idivb
mov
imul
scas
les
movsl
test
inc
popa
cwtl
cmpsb
cmp
mov
xor
insb
rorl
inc
jne
stos
shrl
bound
mov
enter
in
and
jno
pop
dec
jg
dec
jl
ss
mov
fdiv
stos
mov
and
pusha
insl
mov
fsubl
adc
mov
rorl
sub
scas
out
jbe
imul
mov
shl
cmpsl
mov
add
xchg
xchg
push
jmp
movsl
out
mov
aad
leave
sbb
mov
add
frstor
pcmpgtw
pushl
shrl
test
cmp
cmp
cmp
loopne
lods
mov
dec
jmp
enter
add
sbbl
ficoms
rorb
adc
movsl
aaa
or
mov
xor
movaps
in
jno
inc
lret
pop
lods
xchg
mov
fnstenv
repnz
mov
dec
mov
insl
testb
mov
arpl
sbb
jle
aaa
push
jle
mov
sbb
adc
cmpsl
jbe
stos
je
mov
pop
inc
lret
xor
jecxz
sbb
fldcw
out
jge
gs
lahf
adc
jne
ja
mov
sbb
sub
mov
sbb
mov
add
je
pop
push
lea
xor
and
cmpl
xor
sbb
hlt
mov
insl
inc
xchg
in
fcompp
push
or
or
xor
je
or
shll
fwait
shl
dec
cmp
mov
mov
jle
fidivrs
inc
pop
sub
mov
jmp
pushf
leave
mov
int
mov
jns
cmp
inc
das
repz
sub
icebp
push
cli
inc
push
sbb
test
cmc
mul
cmovb
or
mull
addr16
sbb
or
dec
and
xor
dec
jns
into
adcb
bound
into
pop
pop
sbb
xlat
shl
jecxz
testb
mov
les
int
loope
adc
and
orl
movsl
pop
outsb
loope
stc
cmp
test
int3
fnstenv
rcrb
pop
xchg
xor
jns
cmp
imul
jae
dec
mov
xor
adc
leave
xor
inc
neg
xlat
in
cmp
sbb
or
cmpsb
xchg
mov
xor
test
imul
pop
mov
test
and
push
pushf
leave
outsl
ret
fadds
daa
shr
xchg
mov
mov
add
pop
jle
ja
out
test
scas
insb
imul
arpl
jne
insb
int3
sub
mov
lds
mov
hlt
mov
inc
jge
or
inc
lea
dec
js
mov
jno
lcall
fs
sub
add
fbstp
clc
arpl
and
leave
dec
mov
mov
lret
pop
mov
xor
out
int
add
fcomip
lods
xor
jecxz
pop
sahf
in
cmp
xor
aaa
cwtl
repnz
xor
cmc
loope
mov
push
clc
sbb
dec
mov
xlat
sub
mov
sbb
xchg
cmpsb
cmpsb
jnp
push
jnp
xchg
jmp
inc
xchg
out
clc
rolb
or
mov
outsb
pop
icebp
pop
mov
lods
pop
shll
sbb
aad
jmp
xchg
mov
test
rorb
inc
and
dec
mov
xor
xor
lret
insl
in
outsl
xor
jle
pop
xor
fsts
ss
inc
fs
adc
cltd
aas
ljmp
mov
not
sbb
repnz
in
cmp
push
push
adc
ja
jl
push
in
push
leave
cmp
testb
aad
ret
pop
adc
add
mov
xlat
mov
dec
repz
cmp
jmp
pop
call
test
push
loopne
imul
bound
jmp
jae
int
adcb
testb
rclb
out
jno
and
das
cltd
mov
sbb
mov
lret
cmp
inc
pop
push
sub
push
insl
dec
dec
clc
lret
mov
in
mov
sub
mov
mov
in
dec
mov
or
sub
xchg
leave
sbb
mov
xchg
dec
push
sub
adc
rsqrtps
dec
push
jge
pop
jl
sbb
xchg
jmp
jge
pop
and
sub
sbb
jl
and
sub
les
lods
cltd
inc
nop
sub
js
leave
cmp
mov
enter
push
sub
sub
imul
out
mov
stos
test
arpl
fnstsw
movsl
and
and
xchg
cmp
cltd
ja
xchg
in
and
ja
int
xchg
daa
lods
xor
popf
out
jp
fcoml
adc
enter
clc
push
xor
insl
pop
movsb
in
loopne
pop
xor
inc
hlt
mov
stos
cwtl
xchg
nop
cltd
lods
push
mov
std
jle
lahf
test
push
inc
stos
adc
das
or
cmp
xchg
jbe
inc
sub
mov
fadds
fisubs
movsl
test
movsb
jnp
pusha
les
in
fs
sub
stos
push
lret
mov
or
cmpsb
fnstcw
es
push
push
cmp
jnp
dec
mov
and
inc
inc
aad
push
jne
push
and
filds
cmp
cmpsl
pop
pusha
add
test
rcrb
push
shlb
xchg
out
pop
cmp
stc
inc
cli
xchg
imulb
insl
stc
repnz
or
sarb
mov
xchg
inc
push
pusha
pop
add
mov
jb
pop
fsubs
mov
and
out
stos
das
dec
addr16
pop
or
or
mov
mov
jnp
mov
addr16
fistps
jnp
xchg
mov
mov
jno
out
cwtl
aaa
xchg
add
fsts
mov
adcl
adc
in
inc
jne
pop
ret
outsl
xlat
jbe
adc
mov
daa
ljmp
jmp
test
gs
popa
repnz
jmp
jo
enter
cmpsl
xchg
dec
imul
insb
sbb
arpl
iret
scas
dec
jnp
es
cli
mov
xor
rep
ret
cmpsb
es
movsl
pop
iret
mov
gs
dec
pop
xchg
stc
xor
pop
push
ljmp
faddl
pop
cmpb
fsub
xor
pop
sub
xchg
lods
arpl
pop
lahf
cmp
fiadds
xchg
xchg
sbb
push
push
cmp
loopne
imul
add
xlat
test
fisttps
jge
mov
push
les
inc
or
adc
out
sub
aad
xlat
movsl
mov
dec
addr16
and
gs
inc
into
pop
or
dec
cmc
clc
mov
daa
pop
xchg
popl
xor
cmpsb
sbb
int
std
inc
jnp
inc
and
xor
bound
cmpsb
addr16
inc
push
stos
mov
mov
cs
or
xchg
std
xor
aaa
cmp
test
fisttpll
mov
xlat
sub
rcrb
sbb
nop
jae
in
call
jb
insl
test
xchg
xchg
fcompl
jl
jge
lods
mov
cmpsb
fs
lds
sar
cltd
out
push
mov
cmp
fstpt
mov
push
cld
adc
in
jnp
test
es
cld
sbb
jne
mov
sbb
test
cwtl
push
shlb
mov
shrb
inc
sbb
loope
dec
and
cmp
mov
test
out
rcrb
sbb
pusha
xchg
imul
leave
iret
pop
jnp
xor
sbb
stos
icebp
repnz
mov
jge
gs
mov
loope
mov
inc
add
pop
adc
add
pop
imul
adc
repnz
cmpb
jg
repz
sbb
sbb
outsb
pop
dec
repnz
pop
fldenv
jne
add
dec
faddp
pop
fsub
push
cmpsl
jge
ja
loope
or
sahf
nop
adc
jge
or
in
fisubs
inc
popa
add
jne
jb
mov
dec
cmp
xor
fnstsw
stos
mov
out
out
add
xchg
stc
insb
push
push
dec
mov
pusha
movsb
addr16
and
mov
int
jmp
das
cwtl
pop
adc
cmpsb
scas
out
sub
mov
adc
sub
lds
dec
fistpl
loopne
daa
ss
xchg
cmp
sbb
or
jo
mov
push
shrl
imul
popa
aam
pop
inc
test
out
jecxz
popa
mov
jp
sub
jle
icebp
pop
ret
cld
pop
sbb
inc
addb
push
stos
shr
dec
in
insb
adc
cmpsb
jmp
sub
xchg
mov
or
mov
sub
lods
add
lret
xor
xchg
mov
cmp
ret
lds
inc
call
jno
mulb
jnp
rcll
stos
dec
loop
xor
test
repz
movsl
in
ja
enter
in
xor
mov
and
or
loopne
lock
arpl
scas
int
je
inc
adc
cmpsl
fwait
dec
stc
nop
dec
adc
xor
jb
cmp
popa
jo
pop
push
add
pusha
dec
xchg
pusha
and
fsubp
mov
dec
adcb
mov
movsl
imul
js
inc
cmp
jecxz
cmpsb
pop
aaa
add
mov
in
loop
lcall
mov
sub
scas
xor
aam
adc
dec
push
mov
sbb
fsubl
into
loopne
mov
xchg
aaa
or
mov
pop
cld
fxch
mov
icebp
out
rcrl
hlt
xchg
lret
pop
pop
xchg
mov
sub
cmp
sbb
push
mov
and
mov
sbb
outsl
adcl
lods
cmp
mov
sti
jne
xchg
aad
sub
adc
push
inc
lods
jl
mov
mov
imull
and
jl
lret
dec
ja
add
push
pop
ret
js
loope
andb
add
sub
mov
into
scas
lock
aaa
sub
dec
cwtl
jne
or
mov
mov
shrl
popf
xor
stos
daa
dec
movsb
mov
add
jecxz,pt
push
mov
add
mov
inc
mul
jle
mov
aas
shl
cmp
sub
inc
mov
jmp
fwait
jg
and
jl
pop
push
fwait
jp
cmpsl
xor
and
lods
ja
pop
jl
stos
inc
inc
mov
in
les
sub
movsb
ja
mov
jmp
fldl
sbb
movsl
xor
push
popf
mov
pop
pusha
andnps
mov
lea
enter
sahf
cwtl
fsubl
add
cmp
xchg
lods
sbb
pop
dec
add
or
jae
add
xchg
or
and
cmp
dec
mov
cld
and
push
mov
lock
iret
xchg
mov
jp
jl
mov
inc
xor
popf
cmpsb
repz
test
test
fs
or
out
mov
xchg
and
adc
pop
vmovdqu
enter
cli
inc
test
iret
sbbb
cli
push
pop
add
and
xor
push
jne
sarl
lret
stc
sub
inc
mov
dec
cmp
dec
daa
pop
xlat
outsb
jo
cmp
les
cmp
mov
leave
mov
into
dec
push
xor
pusha
in
outsb
stc
sbb
mov
insl
ret
xchg
mov
push
cmc
push
daa
jb
sub
insl
jp
mov
ljmp
adc
fstpl
cs
loopne
imul
pop
xor
arpl
adc
add
dec
push
in
add
in
add
ljmp
mov
xor
pop
mov
gs
push
or
clc
or
nop
xchg
xor
jg
pusha
pop
lock
fsubrs
sti
pop
sub
icebp
popa
sub
mov
inc
pop
fidivrs
movsb
in
lret
cmc
scas
ss
mov
sub
gs
lret
sub
frstor
sub
mov
mov
pop
cmpsb
aam
sub
stc
pop
out
cmpl
icebp
hlt
xchg
sub
pop
fwait
jecxz
push
push
daa
cmpsl
rorl
mov
jo
jnp
mov
mov
cwtl
rcr
hlt
shlb
mov
xchg
push
cmp
dec
outsl
inc
fdivr
aad
out
and
cwtl
lret
mov
cs
js
clc
jmp
xchg
test
imul
add
stc
pop
add
dec
sbb
xor
in
xor
test
sahf
movsb
scas
mov
fidivl
ja
adc
je
outsl
insb
dec
jmp
lret
mov
xchg
push
daa
pop
xchg
outsl
orl
movlhps
adc
ds
adc
jge
adc
les
mov
cmp
in
cld
pusha
nop
jno
ss
jbe
inc
scas
sbb
cmp
adc
int
push
outsl
scas
jno
inc
inc
dec
mov
popa
out
in
movsb
mov
pop
inc
ds
sub
mov
lock
mov
mov
test
std
xor
out
jns
outsb
and
mov
out
cmp
push
cld
cwtl
cmc
cmpb
jg
and
sti
repz
pop
pusha
arpl
cmp
sbb
insb
push
adc
lret
pop
dec
dec
test
into
out
stc
inc
fistpll
imull
mov
aas
test
jmp
fdivl
mov
repz
shrb
mov
test
cld
mov
test
push
dec
jge
adc
xor
popa
adc
dec
mov
repnz
mov
inc
shl
push
stos
push
pop
fwait
sub
dec
push
in
call
inc
fsubr
jo
hlt
pop
cmp
jns
cmp
mov
or
jae
jge
jno
add
and
jo
jl
and
rcl
xchg
js
sub
lods
ret
roll
cmpsb
test
jg
jge
mov
inc
xchg
cli
sbb
pop
lods
das
sbb
xor
mov
sbb
inc
add
test
push
pop
fisubrs
push
mov
dec
push
and
test
and
ds
mov
mov
sahf
mov
stos
xor
les
xchg
outsb
leave
jns
sbb
sbb
into
xlat
mov
adc
mov
jg
jge
movsl
push
sbb
or
mov
mov
inc
rolb
sub
in
jg
nop
sbb
movsb
cmp
dec
push
pop
ret
xchg
idivb
mov
mov
andb
outsl
push
stc
push
movsl
adc
xlat
out
jno
push
in
aas
and
xchg
mov
sbb
dec
sti
xchg
lret
or
push
mov
push
pop
or
orb
ficoml
add
xchg
sbb
sbb
aas
fcoms
ss
push
push
jmp
test
mov
mov
fwait
movsl
dec
movsb
xorb
and
fs
xchg
sbb
push
dec
jmp
lea
hlt
loope
cmp
jp
sbb
arpl
mov
rcll
cmp
mov
cs
jg
inc
xchg
pop
testb
mov
mov
pop
dec
mov
pop
int3
jo
dec
sahf
imul
fildl
fists
out
jbe
shll
cmp
sub
xor
cmp
shll
dec
sub
movsl
cwtl
push
or
inc
and
sbbb
stos
out
lahf
fs
into
bnd
and
xchg
adc
out
jp
sbbb
add
add
or
mov
rcl
jge
lods
test
daa
mov
jg
addb
inc
add
xor
es
aas
xor
fstpt
js
cld
fiadds
sbb
mov
push
and
in
hlt
or
push
loope
adc
jae
jecxz
mov
push
xchg
xor
mov
push
mov
jp
push
add
call
inc
sbb
cmpsl
ja
lahf
rorl
xchg
cmpsb
incb
sub
cmp
xor
cmp
fsubrs
sub
movsb
sahf
jmp
out
xor
es
cmp
lret
cmp
call
fisttpll
int3
pop
fwait
scas
adcl
sbb
int
dec
ja
xor
inc
jno
jl
mov
test
pop
fisttpl
xchg
lods
cmpl
ja
mov
sti
push
xchg
cmpsb
mov
gs
inc
and
stos
lock
mov
adc
lahf
es
and
test
sub
add
popa
addr16
adc
push
out
lea
pop
sbb
push
or
mov
cmp
mov
xor
jmp
aad
rep
dec
and
push
inc
pop
lods
sub
mov
rcrl
mov
jp
ja
stos
ffree
dec
cli
dec
negl
xor
adc
sub
popa
push
dec
mov
jne
jp
movsb
movsl
fistpl
and
add
push
test
inc
ret
dec
xchg
xchg
mov
js
and
fwait
cmp
adc
sbb
inc
add
popf
dec
xor
jp
xchg
mov
dec
jb
jo
stos
pop
dec
gs
test
pop
fsubl
jecxz
int3
stc
ds
outsl
pop
mov
les
inc
xchg
nop
loope
cmp
and
mov
scas
xlat
lcall
dec
ret
inc
mov
mov
inc
popf
add
pusha
aas
or
insl
mov
push
repnz
xchg
mov
push
int
popf
xchg
mov
jle
xchg
gs
rcrb
in
jmp
dec
mov
ljmp
shl
and
cmc
lods
jmp
cltd
cmpb
loope
add
mov
push
into
add
push
shrb
icebp
lods
test
sbb
cmp
mov
xchg
push
adc
xchg
addb
call
inc
loop
add
test
int3
es
leave
pop
lock
shrl
xor
inc
fldl
pop
jnp
sbb
pop
stos
pushf
mov
test
cwtl
fmull
les
aad
ret
xchg
popf
mov
repz
dec
and
mov
pop
mov
cli
int
sahf
xorl
cmc
out
test
test
push
sbb
jnp
and
shll
mov
xor
push
sti
movsl
xchg
xchg
cli
adc
sbb
mov
fbld
xor
pusha
xchg
fsubrs
cli
push
aas
pop
push
fsubrl
sub
xor
icebp
fwait
mov
cmp
mov
popw
mov
mov
out
push
in
dec
jle
and
cmovl
negb
add
sbb
lds
and
jp
jbe
popa
push
clc
das
lods
test
and
pop
stos
fcoml
push
sbb
pop
movsb
push
mov
fdiv
std
cli
jo
sub
and
mov
jp
push
int3
gs
inc
adc
sub
add
jo
ds
sbb
xor
sub
iret
jecxz
push
dec
cmp
test
dec
pop
and
js
sbb
out
stos
lods
xchg
jae
or
adc
cmp
loope
or
mov
daa
sti
cmpsb
add
add
es
or
sbb
adc
xchg
movsb
daa
sbb
mov
pop
fnstenv
dec
in
push
lds
dec
insl
mov
jl
sub
mov
dec
jg
jb
jo
ss
jns
push
push
int
in
adc
mov
jmp
fwait
xchg
xchg
and
or
mov
in
cmp
cmp
sbbl
sbb
inc
cli
adcb
xlat
adc
or
mov
mov
cmp
xchg
inc
jns
sub
or
cli
add
xchg
je
mov
xor
jo
or
fwait
mov
ret
cli
movb
dec
sub
les
dec
repz
ds
movsb
or
cmp
ljmp
cmp
fwait
in
jmp
add
enter
mov
iret
in
pop
iret
es
outsl
divl
fdivs
stc
in
dec
jbe
aam
and
sub
jg
cmp
shrl
sub
pop
fmull
into
sub
dec
idiv
and
cmp
inc
cmpb
xor
fists
jmp
daa
dec
jg
dec
cmc
push
int3
fsubrs
fcompl
pop
mov
jo
imulb
divb
loope
in
loope
and
add
int3
std
jmp
out
or
and
in
pop
inc
mov
insb
mov
jmp
jae
enter
xor
lahf
jb
sub
jae
notl
push
push
inc
sbb
in
mov
mov
test
mov
subl
pop
and
divb
and
dec
add
notb
ja
testl
cmpsl
repnz
pop
in
std
ss
es
call
popf
mov
inc
ret
mov
jae
push
pop
push
aad
add
les
push
inc
push
mov
das
in
js
lock
mov
das
dec
ret
rclb
out
inc
loopne
mov
mov
and
arpl
jg
lea
sbb
xchg
les
std
push
lock
and
lods
repz
in
push
sahf
dec
js
jb
nop
sub
mov
xchg
xchg
or
dec
adc
xor
add
pop
and
or
pop
movsl
push
and
les
lcall
imul
in
push
cli
sbbb
fbld
dec
sbb
sbbl
dec
loopne
mov
mov
std
jg
mov
loope
pop
ret
jg
lret
jmp
in
insb
aad
dec
inc
push
and
inc
das
sub
and
in
add
dec
mov
mov
push
pop
rcr
dec
mov
sti
xchg
fcmovu
popa
push
leave
pop
or
in
xor
insl
adc
cwtl
lahf
or
mov
push
mov
xchg
jmp
pop
in
int3
push
cmpsl
dec
outsl
es
loop
push
pop
sbb
jne
divb
iret
enter
fsub
xchg
ss
pop
repz
jmp
jae
mov
lahf
push
mov
xchg
cli
test
xor
add
lret
lods
cmp
js
dec
test
lahf
int3
cmpsb
cld
icebp
inc
bound
inc
sub
sub
jae
cmpsl
inc
les
add
mov
mov
lods
call
add
mov
dec
jp
sbb
and
or
inc
repnz
mov
xlat
aam
std
loop
in
sbb
inc
loope
cmp
dec
cmp
jns
adc
mov
loopne
in
in
xchg
clc
cmp
daa
or
aas
dec
mov
movsb
mov
jp
hlt
insb
push
fists
in
sbbb
daa
les
out
sbb
pop
or
cmpsl
cltd
loopne
sbb
sub
imul
rolb
repz
loope
aam
leave
and
add
jnp
loop
add
push
in
pop
incl
int3
mov
outsb
cmp
pop
jg
imul
mov
stos
xchg
in
mov
sub
dec
sub
enter
mov
sarl
xor
xchg
sbb
inc
les
sub
push
or
xorb
scas
sbb
loop
ja
call
insb
sub
jl
jbe
sti
ret
leave
daa
hlt
add
adc
push
out
mov
sbb
sbb
inc
push
dec
popf
xor
add
mov
pusha
dec
jo
cmp
fsts
dec
jmp
pop
push
test
adc
repz
lahf
int3
rolb
scas
xchg
es
mov
repnz
lahf
pop
popa
movsl
cmp
popa
cld
mov
mov
cld
clc
mov
ret
or
loopne
je
jle
push
mov
push
cwtl
fcmovbe
sbb
loopne
jl
das
cmpsl
ficomps
add
mov
dec
cmp
repnz
movsl
test
push
mov
repnz
adc
cli
sbb
and
les
test
mov
in
mov
pusha
add
hlt
mov
sbb
hlt
mov
mov
mov
mov
push
in
xor
push
xchg
push
xchg
cld
cmp
roll
and
mov
sbb
cmc
jbe
je
cmp
push
out
aam
iret
sbb
mov
xchg
int3
sub
sbb
inc
mov
xchg
adc
jp
cmpsl
stos
pop
stos
or
mulb
imul
outsb
inc
rcpps
sub
pusha
lea
dec
push
mov
and
pushf
popa
mov
pop
sar
push
insl
call
mov
jmp
loopne
pop
scas
sub
sti
and
add
mov
into
int3
insb
mov
push
push
fs
pop
shlb
mov
imul
sti
and
cmpsl
daa
cmp
sub
mov
jns
mov
adc
mov
outsl
adc
fs
add
gs
cmp
xlat
jno
pop
in
ja
sar
inc
add
lret
popf
std
jmp
inc
mov
xor
mov
lds
cmp
out
mov
add
xchg
filds
insl
mov
and
mov
mov
rcr
mov
adc
jle
mov
stos
dec
sub
enter
fistl
inc
push
jns
stos
xchg
jp
addr16
or
xor
lahf
mov
bound
ss
inc
repz
in
sbb
imul
cmp
nop
imul
mov
xchg
out
pop
sbbl
pusha
int3
pop
pop
rol
sbb
pop
jns
shll
push
pop
mov
sbb
pop
inc
in
test
jmp
sbb
lret
add
lret
popa
inc
lret
inc
ret
call
mov
out
mov
lods
xor
mov
or
dec
mov
add
daa
cmp
jmp
jns
and
mov
cltd
nop
add
adc
nop
test
loopne
cmp
test
adc
mov
mov
sub
pop
and
xchg
push
adc
xor
mov
xchg
jge
mov
mov
imul
outsb
aas
xor
jg
mov
pop
iret
jnp
pop
inc
bound
std
mov
jnp
mov
repnz
insl
nop
mov
add
mov
out
int3
notl
faddl
inc
js
lods
push
fwait
push
pop
aas
add
add
or
inc
movb
lds
out
sbb
popf
aas
jns
ja
mov
fs
lds
nop
mov
out
dec
jne
xor
daa
fbld
mov
inc
xlat
mov
sahf
and
or
dec
push
les
fstps
hlt
and
das
cld
fwait
inc
mov
mov
dec
daa
rolb
pop
xchg
push
inc
dec
fwait
or
jmp
in
scas
cmp
adc
push
rcll
xchg
rcll
jne
adc
jp
dec
pushf
xlat
jge
pop
dec
sahf
aas
pop
push
lods
lahf
mov
xchg
sbb
xor
cmp
push
ret
sbb
test
xor
jne
aam
mov
repnz
aaa
int
cld
push
and
loope
jno
mov
mov
arpl
cs
roll
mov
jle
stos
jns
or
jp
cmp
jno
mov
jne
in
fisubs
int
mov
aas
inc
repnz
daa
ficompl
in
ljmp
dec
jo
pusha
lahf
out
imul
adc
in
pop
push
adc
mov
pop
xor
and
fimuls
sub
scas
add
adc
jns,pn
or
sbb
or
inc
int
je
leave
dec
cli
mov
pop
arpl
roll
dec
xchg
inc
popa
fs
ret
std
inc
cmp
in
mov
int3
stos
stos
dec
mov
out
mov
or
xlat
in
lds
xor
mov
mov
pop
sarl
insb
sub
xchg
push
xor
lods
leave
loope
xchg
cmp
cwtl
mov
addr16
aas
daa
daa
sbb
out
pop
jb
sub
mov
ljmp
fs
pop
test
push
lret
repnz
adc
cmpsl
jmp
xor
inc
and
ja
ja
xor
inc
xor
enter
pop
repz
out
push
mov
xor
adc
cmp
xchg
xchg
inc
cmp
inc
dec
cld
call
call
cwtl
in
shrb
call
mov
xor
adc
cli
pop
pop
orb
insb
mov
jl
xchg
jge
sti
jne
mov
call
cli
mov
in
cmpb
adc
push
xchg
jb
imul
jo
jb
adc
xlat
lds
rcrl
jle
xchg
lods
out
push
ds
push
jg
add
pop
pop
cmp
mov
imul
mov
cmp
mov
mov
sbb
xchg
xor
stos
cltd
jo
lock
and
sbbb
lcall
jle
cmp
sahf
test
cmpsb
inc
mov
jno
shl
xorb
mov
dec
test
inc
dec
jmp
sub
arpl
or
lods
ficompl
test
lret
and
imul
push
leave
pop
shlb
xor
xchg
loop
xchg
xor
mov
adc
cltd
inc
cmc
and
add
jae
jge
push
test
aas
mov
fisubs
jb
cmp
xchg
shll
ja
lret
dec
xchg
xchg
push
xor
cmpsb
mov
jno
mov
or
jae
push
add
outsl
stos
fwait
or
enter
or
mov
movsb
loope
cwtl
mov
sbb
dec
jb
xor
in
cmp
jbe
and
lret
push
into
cwtl
pusha
jne
adc
lahf
push
aam
lret
mov
mov
sbb
dec
movsl
cli
scas
xchg
fs
outsl
sbb
pop
fcmovnbe
rcrl
daa
and
rorb
out
sub
sub
cmp
xor
sub
push
test
mov
inc
dec
jecxz
out
icebp
add
jle
call
jns
mov
rolb
bound
lahf
out
lret
stc
inc
sti
lret
push
inc
mov
pop
mov
cmpsl
nop
sbb
mov
bound
mov
mov
andb
test
xchg
mov
mov
les
jnp
adc
pop
sti
ds
cmp
sub
fiadds
add
fcompl
push
jns
mov
mov
sbb
mov
add
aam
stos
mov
shl
mov
out
inc
jle
movsb
pop
cs
mov
int3
add
scas
aaa
add
mov
sub
dec
arpl
pop
jb
out
insl
mulb
movsb
push
inc
dec
push
mov
aas
fidivrs
aas
xlat
shrl
pop
sub
lcall
xor
sub
lahf
jnp
xchg
ror
pop
fs
notl
fildll
loopne
mov
fiaddl
mov
repnz
sub
fwait
rolb
pop
xor
nop
std
sub
imul
popf
jae
lahf
xor
mov
lret
mov
push
or
mov
or
and
hlt
mov
add
jecxz
xor
cmp
or
addr16
in
ja
out
stos
and
pusha
in
xlat
jns
ds
pop
repz
add
mov
ficompl
adc
lds
decb
pop
out
test
sub
mov
inc
fs
shll
push
add
and
pusha
adc
jno
cmp
ret
cmpsl
pop
div
out
outsb
push
push
xchg
adcl
clc
mov
lea
dec
lods
sub
in
sbb
sub
adc
mov
divb
lea
adc
push
and
xor
add
sub
sub
lret
mov
push
push
mov
dec
jb
insb
mov
sbb
sbb
xor
insl
int3
stos
pop
cmpsl
imul
jb
movsb
add
ss
mov
mov
lss
or
out
in
mov
push
sti
leave
movsl
fisubrs
mov
lea
pop
or
ret
cmp
sbb
mov
pusha
cld
ljmp
adc
add
cmpsl
lret
jg
js
xchg
mov
xchg
inc
sbb
jl
adc
dec
rcr
jecxz
adc
xchg
pop
push
xchg
xchg
push
test
pop
sub
ss
jo
hlt
jge
mov
dec
mov
pop
adc
sbb
inc
roll
pop
mov
dec
sub
mov
scas
lret
pop
in
pop
push
sub
outsb
shr
mov
movsb
movsb
adcb
xor
push
jle
push
cmpb
into
nop
cli
mov
inc
lcall
icebp
jb
jns
lods
xchg
inc
or
push
mov
out
sbb
testb
pushl
sbb
ficoml
clc
out
loope
jbe
add
sub
or
stc
mull
jg
divb
xchg
mov
sbb
mov
loope
cmp
sbb
or
inc
push
fists
cmp
out
test
adc
cmc
xchg
push
pop
push
sub
sub
daa
rolb
das
dec
push
dec
les
dec
add
dec
mov
out
outsb
xlat
popa
jns
mov
mov
mov
rol
push
xor
cmp
lret
push
push
test
xlat
cmpsb
xor
cmc
sub
cmc
push
and
mov
mov
cld
test
test
mov
fidivl
stc
sbb
adc
mov
ror
scas
xorl
cmp
jp
add
jl
inc
test
icebp
push
lea
push
mov
rcr
insb
into
out
shrb
cmp
adc
or
std
cmp
add
jnp
jne
and
xor
test
ja
xchg
or
int
dec
adc
insb
pop
mov
and
or
adc
mov
lods
inc
movsb
adc
rorl
jae
jmp
data16
pop
or
sub
inc
stos
jnp
push
dec
dec
xchg
rorb
outsl
int
lds
mov
jbe
dec
cmp
lcall
imul
daa
ficomps
jecxz
adc
jle
fidivl
int
repnz
or
icebp
andl
jg
fsubrs
leave
inc
xchg
rcrl
push
test
xlat
or
push
je
mov
jne
cli
pop
movsl
fiadds
lea
lods
es
icebp
jmp
rcr
pop
rcl
and
jmp
test
mov
jb
add
xor
cs
movsb
pop
mov
andl
test
mov
jbe
jge
cli
push
xchg
incb
mov
dec
fisubs
imul
inc
jae
dec
fdivr
add
pop
jge
popa
adc
insl
popf
xchg
inc
subb
iret
sbb
inc
or
hlt
cli
cmp
data16
xchg
dec
shrl
and
mov
lcall
mov
jp
push
sub
flds
add
sarb
or
dec
les
shl
aam
adcl
mov
lret
and
jecxz
arpl
adc
in
js
and
inc
fiadds
inc
sbb
or
xor
cmp
aad
int3
imul
jne
mov
imull
add
or
and
xchg
aas
nop
je
imul
mov
in
jne
fwait
or
imul
push
mov
cmp
mov
rcl
cmp
out
adc
or
jmp
push
jno
jo
test
popf
push
std
mov
jl
lahf
pop
lahf
sub
fcoms
scas
add
xchg
mov
out
popa
push
push
dec
push
pop
ret
jno
xor
fdivl
jmp
int3
fstl
popf
fcompl
aam
enter
cld
insl
outsb
and
mov
das
pop
pop
outsl
cmovno
out
test
mov
or
pop
cwtl
push
add
pop
mov
push
testl
scas
daa
cld
adc
jmp
call
std
insb
pop
jge
or
pop
js
cmp
and
mov
mov
push
cmpsl
push
test
shr
and
stos
xchg
inc
and
sub
xor
outsl
out
cli
popf
loop
int3
dec
addr16
sbb
pop
imul
jl
lods
inc
out
lret
out
js
mov
mov
cmp
jge
or
dec
aam
insl
out
ffree
test
dec
adc
imul
jnp
jmp
jo
vzeroupper
out
push
jp
xchg
mov
xchg
cmp
pusha
into
mov
mov
sbb
adc
xchg
or
cld
push
inc
sbb
int
stos
rorb
sub
and
stc
shll
out
inc
sti
pop
jbe
mov
cmp
out
sub
or
je
mov
jg
rcrl
sub
xchg
xor
or
mov
push
cwtl
or
xchg
movsl
ficomps
pop
in
inc
rorb
cltd
mov
jle
arpl
cmc
add
jo
loopne
fstps
out
adc
pusha
or
mov
adc
outsl
xchg
hlt
push
outsb
je
xchg
fistpll
mov
push
add
mov
sbb
sbb
xor
jl
out
inc
pop
fld
pop
cmc
lods
cmpps
cmp
dec
imul
xchg
xchg
fwait
lods
ds
mov
insl
lcall
push
inc
inc
add
jg
jno
push
in
sbb
in
test
sbb
movsl
rorl
xchg
or
xor
out
leave
inc
movsb
mov
insl
push
fstl
popf
out
and
cmpsb
pop
mov
inc
push
fmulp
mov
popa
or
lock
inc
cmp
adc
or
mov
mov
stos
jnp
movsb
add
push
cld
ror
add
sbb
and
xor
rol
sub
stos
js
jecxz
add
mov
mov
cmp
push
xchg
cmp
mov
or
sbb
fcmovne
test
add
xchg
cld
icebp
xor
inc
fs
jg
pop
dec
mov
int
inc
push
int
fcompl
push
push
daa
mov
inc
cmp
push
movsb
fwait
out
pushf
outsb
adc
inc
dec
pop
cmp
test
cmp
in
das
dec
sub
outsb
mov
push
mov
rcrl
mov
mov
sbb
mov
jmp
adc
jbe
cltd
scas
adc
addr16
add
test
cmp
aam
mov
addr16
out
push
lds
adc
xorl
jmp
cli
int3
cmpsl
fisubs
movsb
or
inc
fimuls
movsb
mov
sbb
mov
add
xchg
out
testb
shll
add
sbb
nop
jmp
stos
xor
rorb
sbb
jle
cmp
js
push
pop
mov
xchg
mov
push
mov
in
cmp
adc
ret
mov
mov
sbb
shr
lods
mov
mov
dec
imul
dec
and
pop
push
outsl
xor
outsb
shlb
std
arpl
les
cmp
mov
cmp
jl
dec
mov
sub
mov
xchg
loopne
gs
cltd
inc
dec
sbb
jle
pop
shl
andb
pop
pop
adc
lea
xor
and
shufps
in
pop
mov
stos
ljmp
xchg
sub
pushf
lods
fcomip
jge
cmc
mov
fwait
icebp
mov
lods
hlt
scas
sbb
js
mov
xchg
sahf
lret
ret
jp
mov
arpl
aaa
lea
pop
sbb
rcrl
xchg
loope
loope
sti
mov
je
cltd
sub
outsb
lret
shlb
jle
xchg
fsts
lret
mov
cmp
mov
mov
mov
inc
andl
loopne
out
pop
cltd
into
push
mov
test
clc
jae
adc
loope
pop
jmp
lods
inc
xchg
xor
daa
cld
out
adc
shrb
xor
push
cmc
xlat
xlat
shll
xchg
ficomps
adcl
outsb
and
and
mov
mov
mov
sbb
pop
ret
jmp
pushf
rolb
clc
push
hlt
popaw
inc
xor
in
fmul
mov
rorb
outsb
adc
add
cli
pop
mov
or
sub
test
cmc
inc
popf
fists
pop
popf
add
pop
lods
sub
mov
ret
lods
in
outsl
jl
sub
sub
into
aas
push
mov
rorl
aaa
push
xlat
push
add
sub
jle
pop
and
adc
fwait
sub
dec
mov
pop
add
es
jnp
lods
loopne
cmp
mov
and
int
mov
icebp
mov
sahf
movq
jmp
repz
push
divl
fdivrs
fcmovbe
sub
push
inc
push
mov
push
add
dec
mov
loopne
rorb
cwtl
sbb
mov
cs
aaa
cltd
and
and
nop
cmpsb
andb
test
and
aam
pop
mov
imul
push
cld
mov
aas
dec
movsb
mov
lods
mov
cmpsl
dec
ficomps
aas
mov
xchg
ljmp
movsl
jg
nop
push
push
pop
xlat
jae
imul
mov
std
jl
push
cmpsl
lds
lods
mov
into
cmpsl
in
cmp
mov
pushf
stc
dec
std
in
inc
sti
cmp
cwtl
daa
or
adc
xor
and
insl
push
lods
scas
lds
mov
fidivl
jg
push
lds
dec
cmp
cmpsl
xor
inc
ret
or
popa
nop
loopne
mov
xor
cmpsb
mov
fisubrs
cli
jns
fnstenv
jb
add
mov
cmpsb
pop
lea
push
push
out
mov
jecxz
xor
orl
sbbl
and
cwtl
jmp
xchg
dec
cmpsl
push
ficomps
pminsw
mov
sbb
add
push
ja
out
jns
ret
add
push
and
add
mov
fcomps
cmp
mov
push
icebp
sbb
jns
adc
ffree
test
sub
sub
nop
in
out
mov
cmp
sub
ljmp
mov
xchg
jg
pop
sub
push
xchg
jnp
sbb
xchg
loope
test
xchg
scas
loop
jmp
loope
or
push
xor
push
gs
ret
sbb
rolb
clc
dec
push
push
pop
pusha
sbb
rorb
clc
mov
jne
pop
test
jno
jno
mov
iret
push
imul
ja
jno
shrb
push
fmull
mov
mov
clc
jl
add
jns
clc
xor
cld
outsb
sub
outsb
sub
fs
repnz
clc
je
jmp
xchg
and
push
aam
mov
enter
aaa
mov
jne
testl
mov
scas
out
push
cmp
stos
arpl
je
dec
mov
add
fiadds
lods
pop
sbb
out
add
std
adc
xchg
imul
in
cltd
xchg
insb
mov
and
mov
les
fdivp
sti
add
and
lret
ljmp
add
pop
les
push
xchg
sbbl
sbb
mov
mov
dec
pop
mov
ds
pop
dec
notb
xchg
dec
push
mov
je
cld
stos
or
lods
arpl
mov
popf
mov
fisttps
jae
mov
and
aad
push
pop
mov
mov
test
pop
push
xor
jle
ss
out
jle
inc
push
adc
xor
mov
push
jg
sbb
imul
sub
call
ficompl
daa
pushf
sbb
mov
and
jne
dec
pop
pop
mov
pop
fadds
jl
lods
sbb
xchg
add
neg
lods
sbb
dec
sub
mov
adc
xchg
or
cld
push
and
push
movswl
cmp
jle
ja
xchg
cwtl
or
pop
mov
scas
push
and
push
sbb
ret
and
mov
movsb
fidivrl
sbb
sub
cwtl
movb
inc
scas
pop
pop
or
inc
or
movsl
dec
jns
pop
gs
mov
or
jg
sub
in
nop
test
mov
bnd
cli
add
push
popf
mov
pusha
add
adc
sub
push
fstpt
dec
and
mov
stos
pop
pop
das
unpckhps
mov
mov
dec
vmwrite
leave
fmuls
mov
test
dec
lods
shl
stc
xor
mov
decl
cmpsb
je
lcall
sub
rcrl
mov
shlb
outsl
mov
dec
push
mov
ucomiss
dec
sub
jo
ljmp
mov
jbe
inc
or
and
int3
or
cmp
int3
add
rorl
jae
or
in
sbb
push
imul
test
or
js
push
js
sub
and
jmp
sbb
xor
in
push
lods
sub
xchg
mov
out
mov
iret
dec
sub
add
sbb
mov
inc
add
cmp
filds
aaa
xchg
add
mov
cmc
ret
push
xor
out
stos
outsl
fistpll
dec
or
mov
inc
aam
sbb
out
xchg
je
push
shlb
add
pushf
pushf
sbbb
loope
popl
or
mov
pop
std
mov
sub
aad
movsl
pop
faddp
sub
and
cmpl
sbb
mov
or
add
sbb
xchg
lahf
cmp
jmp
mov
or
xchg
adc
inc
push
test
jecxz
movsb
xchg
add
mov
xchg
fbstp
in
in
aas
cmp
cmpl
or
xchg
outsl
sarb
mov
rorl
or
ret
mov
shlb
push
aas
inc
sbb
sbbb
jge
in
mov
sbb
popa
pop
jbe
ds
fcompl
loope
dec
outsl
test
in
mov
mov
scas
jp
jp
pop
lods
and
inc
orb
inc
cmpsb
ret
int3
pop
call
or
adc
hlt
mov
icebp
mov
in
or
std
ja
stos
int
pop
stos
xor
mov
push
lcall
in
pop
cmp
insl
xor
cmp
popa
and
mov
ljmp
dec
jle
lret
cs
cmc
iret
fsts
lods
ja
fisttpll
imul
and
popa
popf
cmp
push
out
mov
sub
movsb
adc
xor
jb
sahf
xlat
sub
push
adc
inc
rcr
mov
inc
sbb
cli
xchg
je
gs
mov
imul
push
outsb
mov
xchg
and
ja
xchg
mov
lahf
cltd
lods
mov
mov
sti
jecxz
aad
fnstcw
mov
xchg
aaa
hlt
inc
mov
sar
aaa
lret
jo
pop
mov
es
mov
nop
cwtl
clc
lret
outsb
daa
insl
stos
jae
popl
dec
test
or
push
ja
ds
rclb
dec
jns
mov
out
jle
sub
mov
mov
cmpsl
lea
out
xchg
icebp
in
jbe
rcll
cmp
cmp
add
ss
das
ds
mov
mov
arpl
pop
sub
push
out
push
cmp
out
add
lock
sbb
sbb
mov
mov
inc
pop
adc
mov
jne
rep
pop
aas
xchg
lret
dec
mov
std
repnz
rclb
es
mov
decl
push
xchg
test
insl
mov
adc
and
neg
loopne
mov
pop
out
jmp
fidivs
pop
repnz
repz
dec
add
cmp
movsb
loopne
stos
and
mov
xchg
dec
lea
and
push
cmpsl
lock
sbb
inc
pop
or
and
push
hlt
inc
adc
andb
popl
sbb
mov
icebp
jg
jecxz
mov
xchg
fnstcw
sub
nop
test
xchg
jbe
inc
out
div
lret
pop
flds
add
test
sub
or
mov
cmp
loop
or
inc
loop
pop
shr
xchg
mov
push
je
xor
mov
es
clc
out
and
mov
jl
in
cmp
iret
pop
jl
arpl
inc
or
mov
test
mov
popa
push
loopne
xor
sbb
sub
jb
sbb
xchg
and
jae
mov
cmp
and
push
dec
repz
jge
xchg
aad
add
in
scas
adc
mov
push
das
and
or
dec
push
mov
or
cltd
in
faddl
and
cltd
cmpsb
nop
fcmovnbe
movsb
clc
ds
out
je
int
pop
dec
dec
or
test
ja
outsb
xor
or
bt
sahf
push
insb
inc
inc
mov
icebp
mov
pop
xchg
inc
pop
lea
ds
das
or
sub
sub
mov
lods
rcr
adc
and
mov
out
jp
leave
addr16
mov
cltd
imul
cwtl
and
xor
aam
mov
imul
mov
jns
push
jecxz
push
fistpl
xor
sbb
imul
outsb
jle
pop
add
sub
iret
xchg
push
mov
es
jp
cmp
mov
inc
aas
sarb
mov
in
jp
sti
jg
fistpll
in
out
add
sbb
lods
and
mov
xor
adc
xor
aas
sbb
sahf
fnstsw
scas
jns
mov
ljmp
inc
xchg
push
cmp
ficoms
pop
test
divl
or
int3
int
mov
test
insl
push
int
ret
test
adc
ljmp
mov
push
jno
jne
cli
xchg
rcr
imul
cmpsl
sti
add
loope
aas
jp
hlt
fimull
xor
push
int3
jne
faddl
push
pop
mov
xchg
mov
imul
sti
test
mov
push
out
or
adc
mov
mov
mov
cmpsb
fnsave
scas
adc
or
stc
mov
adc
sbb
sbb
int
cli
xchg
or
rorb
jne
add
sub
iret
int3
sub
stc
dec
shll
mov
in
jmp
mov
imul
repz
aam
lret
ljmp
jg
mov
cld
and
xor
jne
mov
adc
xor
es
adc
mov
sbb
iret
outsb
imul
mov
sbb
jnp
adc
les
loope
jo
pop
ljmp
mov
sub
jp
push
pushf
dec
add
xchg
xchg
sar
xchg
or
jbe
inc
jg
lock
jns
ficoml
sub
and
sbb
clc
outsb
je
or
mov
pop
shrb
sub
xchg
add
sahf
mov
cld
cmp
lock
pop
icebp
scas
or
cmp
inc
mov
pop
into
mov
loope
pop
jb
lcall
pop
mov
mov
rclb
or
incl
mov
inc
pop
pushl
push
ret
pop
ror
sub
sbbb
add
sub
add
hlt
xor
shlb
inc
jge
pop
pop
push
xchg
mov
jecxz
nop
jg
jnp
pushw
repnz
xor
movsl
shll
dec
cmc
into
inc
sbb
ja
sbb
vpcmpeqd
cmp
xlat
xor
test
test
int3
xor
data16
jb
loope
jo
enter
dec
jle
add
sub
lods
mov
ja
mov
jns
jge
inc
lret
insl
adc
sub
lret
iret
fwait
movsb
pop
je
cwtl
enter
xchg
lea
push
loope
addr16
lahf
test
nop
push
mov
call
mov
sti
adcl
fistpll
add
cmp
mov
mov
fisttps
cmpsb
ret
dec
push
xor
sarl
push
cmp
add
mov
push
mov
punpckhbw
nop
sub
es
movsl
xor
repz
mov
jne
into
pop
cmpsl
cwtl
push
add
sub
and
xchg
scas
into
xchg
js
push
nop
push
sub
inc
lcall
xchg
iret
push
push
pusha
gs
fisubrs
enter
push
aas
cmp
pop
cwtl
adc
inc
fsubrs
imul
rclb
xchg
imul
xchg
cmc
fiadds
inc
jb
cmc
push
out
push
jo
shlb
cmp
scas
movsb
shll
call
add
mov
or
cmp
ss
adc
jge
push
in
jo
jp
in
pusha
xchg
lcall
test
add
mov
xchg
jp
fcmovne
push
es
inc
push
pop
fwait
cmpsb
imul
push
aad
je
cmp
fmull
cli
std
shll
mov
push
ret
sti
pusha
dec
sbbb
mov
lods
mov
addr16
enter
rcrb
mov
push
add
cmovne
lods
sbb
enter
addr16
pop
sahf
lods
out
xor
ret
push
push
sub
imul
pop
or
outsb
stc
test
aad
lock
cmc
in
xor
and
in
out
sahf
adc
push
add
lahf
ljmp
and
jp
imul
fsts
xor
jmp
mov
xchg
je
lods
pusha
movsl
inc
or
mov
ffreep
in
push
jae
xchg
inc
iret
lcall
imul
mov
es
rcr
xchg
sahf
add
mov
jo
std
int3
fldl
pop
lcall
mov
add
dec
jge
xchg
cmc
push
out
js
mov
sub
pop
add
jge
xchg
dec
movsb
js
cli
sbb
popa
gs
lds
movsb
inc
inc
scas
sbb
verw
xor
rorb
or
outsl
xchg
fdivl
cld
xchg
sbb
fldt
dec
test
outsl
insl
repz
lods
and
aad
xchg
movsb
mov
sbb
add
popa
cmp
outsl
jmp
jmp
shrl
scas
pop
rcll
div
cmp
dec
xchg
outsb
jg
pusha
pushf
mov
mov
inc
or
je
sub
push
fisubrl
cmc
andb
mov
adc
xor
mov
roll
or
clc
cmc
jb
int3
pop
xor
ljmp
shrb
or
xchg
sbb
shl
out
int3
data16
sbb
fcoms
mov
add
jns
stos
sti
add
jno
andb
cmpsl
sbb
scas
inc
lds
movsl
mov
in
inc
in
loopne
jo
cmp
add
jecxz
ja
inc
jne
mov
mov
xor
cmp
jo
lock
andb
fsubr
stos
xchg
roll
ss
sbb
cmp
rcll
in
mov
es
push
gs
out
mov
orb
sbb
cmpb
jg
aaa
sahf
mov
push
ja
fcmovnbe
or
inc
add
addl
jno
lahf
dec
mov
sbb
repnz
movsb
dec
fs
int
pop
je
rcr
outsb
xor
hlt
xchg
xor
nop
daa
aad
sti
jmp
inc
insb
dec
orl
fsubs
sbb
xor
mov
aad
mov
call
incb
cs
sahf
mov
push
mov
arpl
daa
mov
inc
fmulp
push
inc
inc
dec
cmp
scas
lret
popf
cmpsl
mov
mulb
ss
push
bound
addr16
mov
ljmp
push
pop
push
daa
fcomps
xchg
adc
pusha
jle
cld
push
les
enter
inc
push
mov
cld
aam
or
lods
jle
sbb
stos
cmp
test
in
in
in
ja
lcall
cmc
and
loope
jo
filds
in
lock
sbb
test
inc
push
or
jnp
cmp
add
xor
jne
cli
mov
and
push
push
xor
sahf
clc
mov
inc
popf
push
and
out
jmp
mov
jns
mov
dec
rcrl
push
mov
shld
scas
fwait
xchg
jns
push
xchg
or
das
loopne
jge
add
and
xchg
cli
gs
pop
cmp
or
push
loopne,pn
pop
fwait
push
into
mov
nop
imul
sbbl
adc
push
test
insb
mov
sub
cli
xchg
bound
xchg
adc
push
icebp
out
mov
loope
cltd
sub
add
mov
daa
push
push
inc
jg
lds
nop
shrb
adc
rol
into
pop
push
icebp
out
jg
rolb
jmp
mov
mov
pop
xchg
add
mov
push
hlt
pushf
pusha
inc
stos
call
decb
push
addr16
adc
sub
call
dec
sbb
sti
pushl
rol
or
das
aad
sub
icebp
mov
fisttpll
ret
pop
push
mov
ds
andl
inc
fs
jmp
cmp
lods
jo
sbb
jb
add
rcrb
test
cmp
cmp
mov
sahf
lock
mov
hlt
out
lcall
adc
inc
pop
int3
outsl
push
inc
out
cmp
adc
insb
nop
add
and
mov
mov
lds
push
mov
pop
subb
xchg
movsb
int
gs
lods
jb
jge
mov
adc
add
mulb
lahf
out
ja
inc
sbb
jg
stos
xor
aaa
je
cs
jno
mov
movsb
repnz
push
stos
xor
mulps
stos
incb
sarl
sub
loope
mov
or
mov
stc
aaa
or
ret
aaa
push
hlt
jo
pop
sarb
add
into
fsubrl
xor
pop
mov
sbb
dec
push
les
idivb
jb
popf
out
xchg
clc
push
sub
cmpsb
aam
inc
adc
xchg
and
enter
loopne
aad
push
xchg
in
test
jp
popa
fildl
insl
mov
dec
mov
ficomps
lods
jl
in
xor
or
sub
fwait
xor
cs
dec
cmp
imul
adc
push
jae
xchg
inc
cmp
cmpsl
mov
or
fwait
hlt
jg
mov
movsl
mov
add
outsl
repz
mov
push
loope
adc
lahf
mov
cwtl
jbe
inc
adc
test
outsb
aaa
and
jle
inc
xchg
sub
scas
xchg
xor
xor
cmp
enter
hlt
dec
lcall
mov
fiadds
add
sub
mov
or
cmc
sub
shl
out
xlat
pop
add
lods
cmp
dec
pop
mov
fsubrs
jg
xorl
bound
pop
sbb
sub
popf
jmp
lods
or
push
jle
sbb
scas
scas
push
idivb
xchg
xor
push
aas
jbe
sarl
or
cmp
lods
and
adc
mov
adcl
pop
loope
aaa
int3
sub
jbe
fsubs
fimuls
ja
rcr
adc
scas
jnp
mov
inc
bound
add
out
je
or
or
or
call
stos
push
mov
fcoms
in
in
mov
xchg
sub
andb
leave
ljmp
xchg
inc
xchg
mov
push
pop
jg
add
or
lods
mov
mov
shrl
fnstenv
cld
jge
push
icebp
xchg
xorb
pop
mov
mov
xchg
cmpsb
lds
pop
out
int3
xchg
js
jge
ja
dec
sbb
cmp
push
ficoms
into
mov
jmp
mov
ficomps
lods
repz
push
arpl
enter
outsb
lods
add
shlb
or
jl
gs
add
popf
cld
mov
je
js
cmp
push
mov
shrb
jb
pop
mov
xor
icebp
xor
stos
jg,pn
sbb
dec
add
fsubrp
inc
lret
out
aas
cs
jno
scas
leave
and
nop
fnstenv
movsl
push
das
bound
in
std
pop
stos
pusha
push
ja
sbb
loop
or
inc
mov
cltd
lcall
sarb
jecxz
ss
sub
ss
mov
sub
cmp
adc
movsb
pop
les
add
xchg
adc
and
xchg
sub
sbb
jnp
fcomi
aad
jmp
dec
xchg
mov
jp
ret
test
jp
add
mov
push
jg
mov
inc
sbb
cld
pop
or
sbb
xchg
sbb
sbb
jg
pop
lock
or
xchg
loop
inc
mov
sahf
rol
fcmovbe
mov
sub
sub
inc
mov
scas
mov
xor
inc
and
pop
xchg
popf
imul
add
push
cmp
inc
fistps
lea
cmp
movsb
lock
push
and
mov
dec
pop
lcall
or
and
bnd
push
fs
in
fcomps
push
lock
shrl
leave
adc
xor
push
mov
test
les
jnp
jl
xchg
jno
sbb
repz
iret
cs
inc
add
pop
popa
mov
add
dec
or
lahf
int3
dec
lock
leave
xor
mov
cmpsl
stos
sbb
push
out
cmp
ffreep
or
mov
or
pop
push
dec
testb
lret
pop
inc
inc
xchg
push
loopne
xor
sub
fldl
je
inc
mov
pop
xchg
sub
push
cwtl
jns
adc
lcall
cmp
push
push
sub
lcall
ss
xor
dec
fmul
in
das
push
push
lret
mov
ja
arpl
cld
outsb
sub
insb
popa
sub
stc
push
ds
cmpb
shlb
repnz
or
push
std
or
cmp
in
push
dec
call
fwait
les
push
js
dec
xor
adc
mov
call
sbb
fcmove
inc
push
sbb
mov
xchg
jno
aaa
add
mov
out
ja
in
dec
adc
test
mov
les
fidivl
test
pop
stos
cmp
mov
sti
ffreep
aad
push
test
push
push
imul
mov
scas
jg
or
std
fcoml
pop
sbb
adc
stos
mov
xchg
je
lods
mov
inc
sbb
push
cmp
adc
inc
pushf
jb
inc
pop
add
pusha
xlat
jge
xchg
popa
int3
repnz
sbb
inc
jo
xor
push
ss
xchg
xor
mov
gs
inc
xchg
arpl
sub
adc
loopne
aaa
lock
push
xchg
mov
nop
sahf
stos
push
xor
pop
push
lds
cmp
insb
popa
sti
cmc
pushf
pusha
cmp
mov
cvttps2pi
aam
fwait
imul
mov
jo
inc
xchg
cmpsl
jmp
ror
hlt
in
sti
jno
adc
lret
test
or
aam
arpl
mov
add
psubd
dec
push
pop
insb
jns
popf
aas
cmpsb
insl
ljmp
sub
lcall
ljmp
mov
jnp
scas
mov
mov
mov
ret
jne
ljmp
stos
out
stc
imul
in
out
out
je
in
jmp
mov
sub
into
stos
pop
and
cmp
sar
or
jnp
sub
jmp
test
cmc
hlt
sub
cmp
outsb
stos
out
scas
xor
mov
loopne
mov
iret
bound
arpl
jo
nop
js
repz
mov
jo
add
and
es
cld
jmp
les
fstpl
rorl
and
aad
pusha
add
or
ljmp
sub
sub
fsubr
or
inc
movsl
pop
and
jp
pop
mov
das
cli
and
dec
or
xchg
cld
mov
mov
insl
les
stc
inc
sub
ss
jg
lahf
mov
lret
cmc
mov
mov
fmuls
cmpl
cwtl
daa
cmovo
rol
pop
mov
fsubrl
aam
jle
clc
push
and
dec
fdivrs
fs
xor
push
push
fidivrl
sti
sub
orb
add
push
call
enter
dec
mov
mov
data16
pop
out
outsb
fs
ror
mov
cmovp
je
mov
jns
aad
test
scas
jecxz
mov
and
push
sahf
xchg
mov
mov
sbb
pop
int3
popf
jbe
pusha
fiaddl
inc
leave
adc
icebp
xlat
scas
or
xchg
sbb
les
negl
jae
and
jo
les
fadds
in
fistps
imul
icebp
cs
insl
je
loopne
mov
out
pop
or
cmp
mov
mov
rclb
es
and
sahf
mov
xchg
cltd
jns
add
cmpsb
loop
jns
push
testb
lea
xchg
pop
add
sbbb
xor
jp
fnsave
inc
inc
and
add
xorl
adc
stos
mov
xlat
bound
lret
cltd
mov
mov
push
mov
loopne
mov
insl
movsl
mov
mov
out
cmp
pop
or
les
adc
pusha
sahf
mov
sbbl
rolb
sbb
loope
divl
sub
sar
cmp
insl
leave
cmp
aas
mov
or
push
add
cmp
xchg
imul
and
movsl
mov
pop
push
lret
and
lods
sti
fwait
xor
es
pop
jb
icebp
xor
mov
adc
dec
jbe
mov
dec
adc
in
mov
les
mov
les
xorb
out
popf
jl
or
dec
sub
jecxz
test
inc
jnp
pop
cmp
andl
push
aaa
shrl
xchg
jg
dec
mov
fcoms
and
in
loopne
lret
adc
xor
mov
shll
lods
aaa
je
sti
stos
mov
leave
pop
decb
lods
mov
call
push
or
dec
fildl
and
insb
cmp
xor
sbb
mov
ja
jg
mov
int3
repz
andl
filds
sub
dec
stos
xchg
mov
fdivrp
mov
adc
mov
mov
fmuls
rol
and
mov
push
push
shll
std
inc
mov
cmp
ds
dec
dec
clc
fcoms
mul
dec
roll
popf
lods
jg
pop
mov
shrb
sub
mov
sahf
jnp
fcmovb
fs
call
sbb
inc
fsubr
mov
bound
ss
mov
mov
rorl
sbb
les
imul
divl
xlat
sahf
fs
cmc
mov
leave
lods
pop
push
mov
mov
add
out
fcoml
xor
inc
mov
imulb
shl
loop
push
in
sub
stos
ds
imull
orb
movsl
mov
xchg
push
or
imul
loopne
xchg
xchg
inc
les
pop
into
jg
pop
outsb
mov
mov
adc
incl
push
shrl
subb
lds
cmp
xchg
scas
imul
jbe
in
mov
inc
out
fsub
push
stc
cmpb
mov
inc
andl
and
popa
adc
dec
cli
inc
je
pop
sti
dec
cmp
imul
dec
adc
icebp
setg
sub
sbb
push
inc
imul
repz
imul
pop
jbe
inc
cmc
xchg
jp
scas
mov
movsb
stos
mov
lret
adc
subb
jbe
sbb
out
out
mov
inc
add
cld
push
dec
and
and
jae
mov
js
add
mov
outsl
mov
lcall
xchg
or
addr16
sti
push
and
insl
mov
pop
sti
mov
jae
enter
shrl
push
lods
dec
lret
xor
aam
addb
cwtl
jns
arpl
hlt
add
test
and
mov
sub
adc
lds
dec
cs
mov
adc
rcrb
lods
adc
lahf
fmuls
or
cmp
cmpsl
xlat
or
mov
and
mov
out
and
enter
and
ficoms
xchg
stos
xorb
incl
xchg
fdivrs
icebp
orl
add
imul
outsb
imul
int
clc
movsb
jl
jmp
push
push
inc
cwtl
pop
sbb
rcll
jmp
scas
jp
xor
fldl
or
jge
ret
jb
pop
pop
addl
sub
xchg
adc
cmp
ds
mov
sti
mov
lock
stc
out
hlt
pop
aad
adc
mov
aaa
inc
inc
mov
cmc
movzbl
mov
sti
mov
jne
dec
es
in
add
and
fdivs
jecxz
push
dec
lock
mov
mov
jnp
in
or
jno
dec
scas
sub
or
pop
cmpsl
mov
sub
adc
pop
ss
and
inc
cmp
dec
dec
les
mov
mov
sbb
daa
test
cmp
pop
push
loopne
outsb
movsb
out
inc
ror
add
rclb
mov
and
pop
ja
mov
loop
mov
push
mov
cmpsl
mov
dec
in
jge
mov
negb
test
int3
sub
in
jae
sbb
repnz
mov
in
and
jb
je
fcmovnbe
pop
in
sub
push
xor
decb
gs
ret
into
ror
inc
jae
inc
jno
in
xchg
in
adc
insl
loopne
ret
adc
std
rcrb
mov
jnp
push
add
push
in
fbstp
jl
jbe
loopne
nop
out
fimull
cs
mov
movb
ret
scas
xchg
pusha
xor
pop
pop
sbb
leave
inc
push
sub
sub
aas
adc
cld
jbe
cmp
std
add
or
cmp
sbb
call
mov
adc
in
je
or
pop
int
pushf
adc
or
and
stos
xlat
inc
dec
movl
xor
movsl
push
and
fstpt
mov
adc
xchg
aas
int3
xlat
mov
ss
subl
fs
cmp
sub
movsb
mov
subb
inc
dec
push
xchg
out
stos
enter
incb
in
adc
mov
int3
push
daa
fs
cmc
ljmp
pop
out
hlt
inc
cld
repnz
xor
pop
push
cmp
lcall
stos
jno
imul
test
sti
cmp
out
fidivl
leave
scas
lcall
jae
adc
scas
loop
scas
xchg
inc
call
push
cmp
pop
mov
roll
jle
and
cmp
shll
fists
push
pusha
sbb
push
jp
dec
pop
test
sub
and
cmp
stos
ret
push
pop
jl
jnp
mov
lds
mov
test
cmp
xchg
outsb
je
xchg
mov
cmp
lods
pop
test
ja
int
jge
jl
imul
sub
inc
push
cmc
repz
push
adc
ja
push
pop
pop
jmp
cmpsb
outsb
add
and
mov
pop
xor
push
push
mov
jge
int3
add
jnp
adc
ficoms
xor
into
jnp
aad
ja
fwait
ljmp
lcall
repnz
inc
inc
jmp
sub
pushf
dec
shlb
testb
hlt
lcall
jle
xor
in
dec
pop
push
jne
hlt
xor
dec
out
xchg
fsts
in
stc
cltd
push
fsubrl
insb
stos
xor
out
ret
repz
push
mov
pop
mov
add
or
jle
pushf
dec
add
aaa
jle
or
js
pop
or
lahf
dec
dec
jo
stos
sub
pop
xor
mov
add
cwtl
add
and
inc
lret
fadds
pop
mov
cmp
mov
add
pop
lds
jg
jnp
xchg
or
pop
mov
dec
pop
mov
aad
test
push
in
jae
sub
cmp
cmpsb
mov
out
xchg
sub
push
jmp
dec
dec
add
sbb
or
jb,pt
mov
in
xchg
cmpsb
mov
divb
mov
ja
sbb
shll
cmp
xchg
les
jge
xchg
xorl
push
mov
jns
inc
mov
sbb
mov
shrb
dec
shlb
jp
xor
lea
mov
mov
pop
sbb
es
mov
daa
sub
adc
xor
in
repz
stc
adc
xchg
jb
repnz
jnp
daa
repnz
adc
dec
sub
sbb
pusha
and
adc
movsb
call
sbb
daa
and
loopne
xchg
pop
or
test
pusha
sahf
cmp
sub
leave
cmp
fists
das
cmp
push
dec
in
inc
add
enterw
data16
insb
lds
mov
mov
sbb
push
dec
cli
jnp
xorl
aaa
cmp
push
mov
addr16
lock
lret
mov
sub
and
rcrl
int3
jnp
rorb
pop
dec
gs
push
xor
sub
sbb
aam
cmp
push
ljmp
leave
xchg
clc
fucom
sahf
push
repz
pop
sub
scas
adcl
rcrl
push
int3
jl
mov
mov
daa
push
fistps
or
push
stc
nop
dec
in
arpl
fisubrl
pop
inc
je
cmp
clc
and
pusha
and
dec
repz
push
push
imull
bound
sub
cmc
mov
test
push
add
cmp
mov
stos
xchg
in
jge
mov
movsb
shl
cmp
out
cld
enter
bound
cmp
adc
test
add
pop
push
bound
ret
stc
or
in
movsb
int
fdivs
lahf
mov
sbbl
push
in
or
mov
lods
daa
mov
data16
or
aas
jp
popf
stos
jmp
cltd
out
adc
inc
mov
cmp
xor
xchg
cmpl
repz
adcl
and
jl
xchg
imul
xor
or
mov
push
jle
and
xchg
mov
jl
push
or
shrb
mov
mov
insb
or
icebp
pop
push
test
xchg
ss
cmc
add
fildl
roll
mov
mov
out
dec
sbb
dec
and
insb
in
mov
mov
enter
ficompl
mov
pop
test
push
xor
lret
aam
cmpsb
stos
hlt
push
cmpl
cltd
mov
bndldx
mov
mov
test
stos
popf
mov
or
out
ror
je
xor
sub
fistpll
das
enter
cmpb
sub
cmpb
cmpsb
stos
xor
movsl
adc
out
imul
popa
or
inc
outsb
stc
movsl
inc
pusha
xor
dec
cwtl
jl
je
push
sub
lock
loop
xor
mov
adc
xchg
aaa
jecxz
push
mov
fs
mov
jns
cmp
out
insl
and
adc
pushf
gs
aas
push
xlat
fstpt
cld
stos
mov
xchg
stos
jnp
adc
movsb
xchg
mov
and
mov
xor
popf
in
pop
insl
dec
cli
cmp
inc
movsb
loope
cmpsb
and
mov
in
popa
aad
add
loopne
adc
push
into
inc
fadds
das
test
push
push
rolb
cmp
iret
jecxz
in
notl
inc
cmp
cmp
mov
inc
push
lock
inc
inc
adc
mov
pusha
nop
xorb
push
mov
shl
stc
push
cmpb
cmpsl
pop
lds
orb
ds
pop
or
dec
or
jp
lcall
jnp
xor
mov
mov
enter
or
les
aad
in
pop
stc
inc
test
mov
ss
jbe
sbb
insl
mov
je
fcmovne
cmp
shlb
in
sar
gs
inc
mov
push
icebp
jecxz
imul
std
xchg
les
xor
dec
cmc
push
xchg
daa
lock
adc
pop
push
mov
fwait
sub
out
sti
or
mov
enter
add
ja
jle
ret
scas
dec
shll
and
loopne
mov
mov
fwait
popf
sbb
jne
loope
add
xchg
scas
pop
stos
cmp
sahf
add
and
jp
in
cmc
mov
pop
fldl
test
cmp
hlt
pop
cwtl
div
out
jmp
xorl
aad
jge
lea
xor
icebp
xchg
in
cmp
mov
pusha
lret
pop
add
xchg
push
loop
xchg
dec
mov
mov
mov
dec
xchg
jns
jbe
pop
push
dec
push
gs
lock
cmpsb
in
in
sub
clc
lock
xchg
pop
das
mov
and
jle
out
jbe
add
xor
lea
in
push
subb
inc
out
mov
pop
push
loop
or
pop
push
in
loopne
push
mov
outsl
lret
imulb
sbb
mov
dec
out
leave
aad
out
or
fldenv
sub
rorl
fisubs
inc
pop
inc
clc
and
mov
pop
js
xchg
inc
pop
push
and
rolb
rorl
pop
in
mov
sbb
jg
sahf
in
in
lcall
addr16
icebp
fs
xor
test
mov
inc
sbb
mov
lods
pushf
or
dec
in
rolb
cmp
lds
jl
mov
push
int
pushf
dec
insb
xlat
dec
test
xlat
out
xchg
test
pop
mov
mov
xchg
mov
mov
jle
xchg
push
push
scas
mov
cltd
ja
divl
cwtl
pop
pop
fnstcw
xchg
adc
sub
jle
pop
inc
lds
jae
add
cmp
fistpll
inc
imul
xchg
push
lcall
inc
fadd
daa
push
testb
stc
loope
es
mov
lods
jg
inc
into
std
inc
repnz
mov
inc
and
cmp
outsb
xchg
leave
scas
ljmp
xor
xor
push
dec
push
arpl
mov
adc
inc
mov
push
jb
aam
cs
enter
jg
shr
mov
imul
jle
mov
push
adc
jmp
cmp
orl
pop
aas
repz
sub
or
add
gs
into
xchg
sbb
xor
pop
out
mov
jns
inc
pop
aam
fwait
add
stc
mov
sub
scas
lcall
pop
roll
lods
leave
shrb
dec
lods
ret
dec
call
and
cmp
popf
xchg
inc
lods
clc
push
stos
mov
call
xlat
shl
aas
dec
arpl
jg
and
jl
inc
lcall
out
xchg
pop
adc
push
or
cmp
sub
fsubs
push
mov
mov
daa
in
push
fidivrs
sbb
push
sub
or
mov
aas
or
and
orl
and
cs
outsl
sub
das
add
mov
ret
js
movsl
lods
sbb
adc
movsb
loopne
push
fwait
cmp
inc
int3
aam
repz
pop
mov
aad
ja
mov
adc
push
mov
sub
fs
push
sti
int
and
pop
lret
es
dec
ja
pop
cli
in
xor
dec
xor
loope
cwtl
mov
mov
xchg
jns,pn
dec
test
push
shll
leave
daa
inc
or
add
fwait
sub
icebp
cmp
sarb
std
inc
iret
xchg
lea
xchg
push
out
mov
fucompp
or
cli
outsl
add
out
add
out
xor
mov
push
cmpl
and
xlat
loopne
sub
adc
jmp
outsl
push
pop
hlt
pop
int3
adc
jae
stos
jb
xor
jo
mov
mov
adc
adc
push
mov
xchg
cmp
mov
adc
fwait
rorb
lea
mov
mov
adcb
mov
scas
mov
dec
std
bsf
cmpl
push
jns
sbb
sbb
test
jo
inc
sbb
fnsave
jecxz
pop
fimuls
jge
cli
dec
or
mov
je
mov
jmp
adc
or
shrl
sbb
pop
test
add
dec
sbb
jo
fs
in
and
arpl
and
mov
pop
les
mov
mov
pop
mov
in
or
fbld
cld
int3
jnp
fcoml
or
mov
dec
add
mov
rcll
adc
test
sbb
imul
cmp
inc
add
pushf
outsb
pusha
les
dec
mov
cwtl
pusha
dec
mov
sbb
insl
clc
mov
push
fists
pushf
xchg
es
shl
loope
mov
adc
mov
push
jg
gs
cs
rcrl
jnp
loopne
hlt
arpl
data16
xchg
or
xchg
jbe
pcmpeqd
aam
pop
jnp
in
or
adc
aad
addr16
lea
adc
nop
xor
cld
cmp
mov
or
xorb
paddusw
adc
icebp
and
sahf
pop
sarb
push
lock
stos
mov
pop
dec
gs
insb
and
decl
in
cmp
add
mov
cltd
clc
fists
call
mov
cmp
stos
aaa
add
fdivrs
incl
lcall
sub
mov
iret
xor
cmp
push
or
call
shll
mov
mov
mov
xchg
jecxz
pop
in
add
mov
jns
cmpsl
scas
and
sbb
mov
imul
cmc
add
fdivl
cmp
inc
out
pop
lret
add
xchg
dec
bound
fdivrs
loopne
jecxz
and
lret
mov
into
lods
jo
scas
and
jns
jp
fcompl
mov
popa
out
jno
sarb
lods
inc
fisubrl
and
aaa
pop
xlat
or
btc
mov
mov
loop
xor
ret
retw
mov
mov
mov
enter
sub
mov
int
cmc
and
icebp
inc
mov
push
mov
idivb
imul
fsubr
adc
push
add
xchg
jb
hlt
pop
clc
inc
sarl
scas
xchg
xchg
outsl
xchg
push
lret
or
cltd
cmp
jbe
mov
or
les
jnp
ficompl
lret
sub
enter
cmp
mov
ljmp
xchg
sub
cmpsb
push
test
aam
mov
fsts
or
mov
mov
pop
lahf
jecxz
mov
frstor
mov
cs
sarb
iret
stos
adc
cmp
int3
mov
mov
sbb
mov
and
enter
cmc
mov
mov
out
not
or
xlat
mov
or
or
xchg
adc
cmp
or
icebp
jmp
adc
je
adc
cld
pop
test
lods
sbb
jge
jae
in
mov
ja
rorl
out
jno
lods
sbb
jle
mov
movsl
pushf
xor
mov
pushf
mov
cmp
xor
add
mov
cli
push
es
mov
fs
fs
xor
ljmp
lahf
xor
dec
add
jno
out
mov
sti
sarb
pushf
sahf
test
mov
scas
sub
cmpl
xchg
lock
mov
lods
inc
or
push
jnp
std
jmp
and
push
ljmp
push
aaa
or
jns
and
add
xchg
cmp
push
ljmp
aam
add
xor
ja
xor
minps
or
lds
xor
pop
and
push
sbb
mov
std
aam
loope
add
rcrb
dec
cmp
jno
outsl
pop
cli
cwtl
movsl
pop
xor
aas
call
xor
xor
stc
rcl
mov
lock
cli
ja
or
xchg
push
inc
test
sub
es
test
imul
loopne
sbb
jo
imul
scas
sub
cmc
push
cmp
fiadds
inc
xchg
jb
arpl
mov
aad
mov
lret
mov
pop
hlt
jns,pn
xor
cmp
push
subb
push
xchg
jno
loopne
stos
pop
lods
outsl
leave
xchg
outsl
cli
sub
fadds
inc
rcrl
jae
arpl
dec
sti
cmpsb
jmp
cmc
rol
in
scas
xor
clc
push
pop
ss
loopne
in
xchg
xchg
pop
popf
inc
and
inc
cli
add
pop
fldcw
in
test
mov
and
rorl
xchg
or
lret
and
xchg
lock
xchg
pop
fistpll
mov
ret
sbb
andb
sbb
xchg
or
inc
mov
enter
ret
push
fmuls
push
lcall
cmpsb
cmp
lock
adc
fcom
dec
mov
jbe
popf
loop
imul
mov
ljmp
push
inc
stos
out
lods
or
xchg
out
sub
imul
jnp
fsubp
mov
jnp
cmp
roll
adc
lods
mov
mov
imul
clc
repnz
mov
lret
shlb
aaa
pop
fidivs
loope
pop
push
jg
cs
jnp
andb
push
push
test
jge
and
jp
jbe
rorl
dec
pop
int
dec
or
sbb
pop
xchg
neg
dec
mov
xor
stos
push
aas
daa
rcr
in
test
clc
inc
jo
cmpsl
sarl
mov
lock
in
push
and
jge,pn
fchs
adc
loopne
test
pop
movsb
enter
loopne
in
leave
aad
sbb
sub
inc
dec
pushf
out
or
mov
and
pusha
stos
hlt
and
push
sbb
xchg
shlb
mov
cmp
or
dec
dec
arpl
cmp
notl
sub
data16
in
outsl
push
add
daa
fadds
das
mov
push
shll
adc
jo
incl
sub
cs
sub
stos
mov
pop
or
inc
mov
push
test
sbbb
mov
fsubl
push
mov
cmp
dec
cmc
push
mov
mov
push
lds
outsb
mov
in
jmp
jae
jmp
push
loope
lret
xchg
mov
adc
stc
aad
jle
xchg
jmp
push
sahf
mov
xchg
lods
repnz
ficoms
jp
and
and
mov
inc
rorb
adc
ss
aam
lock
addr16
popa
fcmovbe
std
clc
dec
lds
test
xchg
add
or
jns
mov
mov
or
add
dec
pop
pop
enter
lock
cld
pop
fldl
xorl
push
enter
push
mov
push
mov
add
lods
sbb
outsb
xchg
jns
sbb
push
mov
bound
mov
pusha
push
pop
or
in
pushf
pushf
mov
mov
inc
in
in
sti
sti
push
push
pop
loope
and
ss
xchg
ljmp
fildll
lds
and
mov
movb
mov
imul
mov
pop
nop
popa
cltd
push
mov
push
cmp
cmpsb
or
ja
neg
js
outsl
dec
fimuls
add
xchg
lds
sbb
int3
fistpl
pop
nop
out
or
je
sub
adc
movsl
jg
sbb
cmp
cmp
adc
sbb
jne
or
aas
cwtl
sub
pop
lods
test
mov
insb
push
test
cmp
js
movsl
call
or
cli
mov
aad
int
stos
push
popf
loopne
inc
jae
mov
fiadds
dec
ss
sahf
sbb
decl
pop
idiv
stos
outsl
inc
lods
push
jns
pop
add
pop
jge
fistl
lods
pop
lret
lea
repz
pushf
or
nop
mov
lods
sarl
cmpsl
cmp
out
fisttpl
pop
dec
or
cld
cmp
leave
lea
sahf
fsubrl
xchg
add
or
outsl
scas
mov
insb
movsb
jbe
cmp
mov
xor
test
adc
jmp
mov
aad
push
or
push
jnp
vunpcklps
and
call
sbb
inc
shll
xor
mov
nop
dec
gs
fidivl
jmp
hlt
mov
push
xchg
xor
mov
pop
test
les
jl
xlat
jae
add
cs
mulb
pop
hlt
ficomps
rorb
lock
hlt
in
data16
xchg
push
es
inc
fldt
mov
adc
stos
es
lods
lock
mov
xchg
cmp
jl
imull
push
lea
aad
jnp
movsl
push
lods
cmp
aaa
insl
sub
push
pop
ud2
cmpsl
sbb
pop
pop
cld
pop
add
test
mov
repz
loope
jo,pn
xchg
inc
fcmovu
jmp
rcrl
enter
mov
not
mov
nop
xor
ja
outsb
jl
and
cwtl
and
in
dec
fldl
bound
sbb
jg
nop
stos
bound
dec
leave
mov
and
mov
mov
push
xchg
or
cmp
leave
outsl
and
pop
cmpsl
xchg
inc
icebp
out
inc
int
and
loop
and
test
data16
leave
dec
pop
jp
sub
outsb
scas
bound
jno
pushf
popf
outsl
mov
cmpsl
es
xor
and
fcomps
dec
mov
cmc
jnp
dec
arpl
mov
mov
pop
lret
sub
ja
lret
or
dec
popa
icebp
sbb
rclb
pop
aam
mov
or
push
sbb
xor
wbinvd
fldcw
stos
xchg
loopne
rcll
jns
mov
in
dec
rorl
addr16
inc
fcmovbe
out
das
xor
pusha
adc
adc
push
xor
pushf
or
negb
call
test
es
push
sub
sbb
icebp
inc
test
push
dec
and
aad
cmp
sbb
std
mov
mov
out
cs
xchg
xchg
or
sbbl
push
sub
roll
cmp
lock
out
lret
adc
outsl
fstpl
lods
dec
add
push
icebp
adc
in
sbb
lods
call
popf
pop
addl
iret
add
mov
push
pusha
mov
enter
add
adc
rcll
lcall
ret
lret
in
mov
popa
loop
loop
pop
add
loopne
rcll
stos
dec
stos
pop
xchg
mov
mov
jmp
add
mov
lock
aas
fbld
hlt
cmp
bswap
push
int
jae
xchg
xchg
mov
cmpsb
mov
stos
stc
pop
cmp
jp
lcall
add
test
call
jmp
adc
jnp
movsl
daa
push
rorl
aam
dec
jb
sbb
pop
js
mov
sbb
dec
mov
ss
mull
sbb
push
and
xchg
mov
std
adc
pop
subb
fiadds
adc
and
insb
les
cmc
jnp
add
or
jnp
mov
pop
mov
and
fldenv
push
pop
clc
cmp
cmp
out
sbb
cmp
imul
xor
jbe
adc
cmp
sbb
and
cltd
sbb
dec
shrl
imul
sub
pop
into
and
arpl
outsb
pop
aaa
jne
mov
add
cmc
xor
mov
jl
mov
push
adc
add
jmp
jnp
cld
add
test
and
dec
mov
inc
cwtl
stc
pop
xchg
add
xlat
sahf
cwtl
cmc
fs
push
je
in
bound
xor
out
pop
and
jmp
sarl
mov
and
push
dec
test
inc
outsb
xchg
xchg
incl
mov
adc
adc
cmp
dec
notl
out
jo
or
daa
mov
dec
mov
xchg
and
jo
inc
xchg
cmp
neg
bound
and
out
insl
jle
fadds
jns
mov
push
into
adc
cwtl
jp
je
out
out
lock
mov
orb
cmp
xor
loop
mov
test
and
and
mov
or
arpl
sbb
roll
scas
mov
sbb
insb
dec
sub
lcall
lea
and
mov
repnz
mov
stos
cmc
shll
subl
into
call
into
clc
mov
sub
cmp
dec
push
jne
mov
mov
jbe
lods
mov
dec
jmp
int3
mov
mov
sahf
das
mov
mul
out
mov
adc
mov
in
jbe
inc
xor
aam
fdivs
mov
stos
enter
add
popa
dec
lods
mulb
sub
fsubs
mov
dec
xor
or
jle
sub
popf
inc
mov
lcall
sti
imul
sbb
in
xchg
es
push
stc
mov
cmp
dec
imul
fbstp
add
mov
sbb
test
sahf
lock
lahf
sbb
daa
jb
sub
xchg
fdivs
std
add
push
mov
xchg
adc
in
lret
hlt
mov
pop
ja
xchg
add
jg
sub
sub
imul
js
lock
mov
fsts
cmpsl
jp
adc
cmp
stos
nop
and
lods
jae
sbb
lock
into
out
sub
lcall
loop
sbb
scas
mov
ds
mov
mov
shrb
sbb
out
loope
jle
call
js
sub
xchg
stos
leave
cmpsl
lret
clc
cmp
out
dec
pop
gs
mov
ret
or
jmp
fwait
xor
adc
xchg
mov
scas
je
clc
test
lcall
fimull
and
jp
pop
inc
xchg
inc
or
dec
in
pop
xor
mov
sbb
mov
gs
mov
mov
or
push
xchg
rcll
fs
leave
sub
xor
cmp
iret
cmp
sbb
dec
out
add
lcall
pop
sbb
mov
dec
mov
mov
sbb
lods
add
jmp
jo
mov
add
bound
jg
lods
and
mov
lahf
jge
jbe
mov
mov
out
gs
clc
xchg
sub
push
pop
mov
scas
rorl
mov
mov
jecxz
mov
dec
iret
jns
jmp
gs
addr16
test
enter
stc
fwait
lock
dec
dec
in
push
mov
xlat
mov
add
adc
rolb
repnz
mov
cli
dec
cli
dec
in
rcrb
push
popa
mov
adc
fwait
or
mov
rol
mov
push
mov
or
sbb
push
push
or
dec
aad
dec
mov
inc
aaa
shll
repz
mov
push
incb
sbb
loope
mov
inc
subl
inc
call
sbb
cmp
lock
cmp
push
push
jne
sbb
xchg
dec
scas
adc
fdivrp
mov
pop
pop
xchg
fsubl
mov
jl
fmul
pop
push
jne
fisttps
out
rorl
xchg
in
sub
arpl
jne
cmc
aam
and
cmpsb
insl
lahf
push
cmpsl
leave
sahf
out
inc
or
xchg
inc
pop
sahf
xchg
fisubrs
jbe
imul
hlt
fs
dec
shll
inc
pop
call
test
outsb
in
lret
cmpsl
sub
or
pop
movsb
cmp
imul
stos
and
and
pop
sbb
push
out
mov
in
cltd
testl
mov
cmpsl
imul
call
cs
mov
mov
js
inc
mov
imul
lret
into
pop
xchg
dec
adcb
mov
psadbw
adc
outsb
mov
push
adc
sub
dec
xor
or
xchg
pusha
cmpsl
push
mov
add
into
pop
fsubl
lret
mov
lahf
jne
in
mov
sub
dec
mov
insl
jg
mov
fwait
cmp
pop
add
push
rcr
pop
inc
mov
push
mov
adc
repz
cmc
adc
xor
lahf
dec
je
popa
in
jbe
nop
outsl
jge
add
xchg
push
mov
call
xchg
in
xor
outsl
xchg
fmul
or
sbb
push
movsb
cmp
lret
dec
out
movsb
push
repnz
adc
out
and
mov
repz
fdivl
aad
pop
jl
xchg
rcl
jl
mov
out
push
sub
lock
std
rorb
fbstp
lcall
out
pop
setge
call
aaa
jmp
inc
imul
ja
jnp
push
fs
imul
ficomps
cli
cltd
push
dec
ds
sub
push
mov
test
fldl
mov
or
adc
or
fs
cmp
outsl
outsl
cmp
cmc
es
in
icebp
test
mov
push
shll
mov
mov
xchg
hlt
sub
push
xchg
pop
sti
jnp
or
dec
lods
mov
fimuls
mov
xor
and
cmp
xlat
fs
jmp
adcl
mov
adc
push
mov
jno
inc
clc
arpl
std
iret
adc
aam
cltd
cmp
pop
out
xchg
xchg
pusha
and
dec
push
mov
and
test
insl
in
negl
add
cwtl
mov
mov
cltd
test
stos
lods
int
push
dec
dec
cmp
shrb
outsl
or
sbb
enter
lea
pop
cmc
imul
pop
test
inc
dec
into
insl
loopne
fdivl
iret
mov
scas
test
sti
pop
pushf
lods
xchg
xchg
cmp
and
andl
inc
cmp
xor
inc
lea
call
jb
in
inc
or
add
mov
sub
cmp
fwait
insl
cmp
cmpsb
lret
dec
sbb
and
fidivl
popa
sarb
add
movsl
adc
inc
pushf
add
sahf
rcl
jnp
xor
jae
add
inc
scas
popa
sub
mov
fstps
dec
jecxz
test
add
pusha
xchg
jne
push
jb
lcall
imul
aam
or
pop
std
add
in
sub
lock
and
nop
loopne
hlt
or
test
cld
push
les
sbb
mov
add
mov
inc
jns
pop
mov
lret
dec
pusha
leave
jne
cwtl
sbb
stc
push
shll
sub
rcrb
lahf
inc
lret
rolb
push
inc
cmp
iret
jmp
fcompl
mov
or
ja
loope
mov
mov
jo
xchg
push
mov
out
add
mov
stc
imul
add
jno
jo
aas
rolb
sbb
adc
test
adc
push
mov
pop
cwtl
lds
cltd
mov
icebp
xchg
repz
sahf
mov
pop
divb
inc
cmc
sti
xorl
or
mov
jl
push
jl
add
lods
and
inc
xchg
addr16
or
mov
lret
test
cwtl
movsb
xchg
mov
mov
jne
mov
into
dec
or
add
repnz
rorl
loope
in
adc
mov
fisttps
adcl
aad
aaa
adc
fwait
push
mov
jp
lcall
pop
mov
pop
push
pushf
inc
xchg
cmp
arpl
dec
push
jo
in
in
rcl
dec
fs
jnp
rorl
xor
xchg
sbb
filds
outsb
repz
sbb
inc
adcb
lds
pop
push
add
fs
jae
mov
pushf
jnp
add
xor
adc
add
mov
shlb
pop
cmc
fs
inc
mov
imul
mov
dec
ja
dec
shll
push
lcall
pop
fwait
xchg
mov
addl
xchg
fdivl
loope
pop
movsl
cmp
jecxz
mov
xchg
mov
pop
xor
sahf
sub
data16
xor
in
push
in
std
sbb
mov
daa
or
dec
stc
or
push
ljmp
nop
lds
mov
and
push
add
and
movsb
jle
test
mov
jae
test
cltd
imul
ss
aad
fnsave
add
cltd
jo
loope
ret
test
and
xchg
and
iret
push
das
pop
addr16
inc
repz
cmc
jle
dec
pusha
xchg
cltd
rorl
and
pop
test
adc
cld
cmp
pop
mov
movsb
pop
rorb
imul
and
int3
or
adc
clc
jecxz
insl
xor
test
out
or
push
ror
jae
hlt
mov
adc
mov
insb
push
out
ds
xor
fdivrs
nop
arpl
mov
push
jnp
insl
xchg
cmp
dec
inc
or
ret
out
xchg
jbe
sbb
push
mov
mov
mov
fnsetpm(287
xor
das
shll
daa
dec
lods
lods
jl
scas
enter
sbb
test
mov
stc
add
or
test
fstpt
mov
out
push
sbb
adc
inc
nop
cli
adc
push
xlat
call
fwait
fdivl
outsb
out
inc
mov
addl
sbbb
dec
sub
divb
pop
subb
xlat
std
push
fbld
adc
in
loope
xor
ds
dec
pop
out
fs
xchg
mov
iret
icebp
add
cs
inc
sbb
pusha
pop
adc
xor
jmp
ljmp
inc
mov
iret
xchg
repz
jp
imulb
or
fdivs
xor
test
jns
test
fistps
xor
sub
adc
test
jecxz
add
xchg
pop
and
shrb
lds
repz
js
cs
jbe
fdivp
lret
pushf
jp
fisttpll
mov
rclb
hlt
test
mov
and
fsts
sbb
dec
aas
les
stc
mov
pop
or
ljmp
rcrb
js
mov
push
add
stos
pop
mov
mov
mov
leave
lcall
stos
jge
fsubr
stos
cmp
jae
and
ret
push
rcrb
or
xchg
push
cmp
mov
aaa
add
hlt
popa
cmp
fucomip
enter
sti
inc
into
mov
pop
scas
mov
pop
inc
jae
adc
mov
jg
fidivs
jle
std
sbb
stos
xor
aam
xor
lock
fistps
sbb
andl
rclb
fcoms
iret
lcall
sbb
decl
push
ljmp
dec
int3
in
inc
mov
mov
add
ljmp
repz
ss
xchg
incb
call
hlt
in
adc
cmp
push
dec
jae
mov
push
xchg
jl
ret
ret
inc
fisubl
stos
les
adc
mov
fwait
out
fucomp
lods
xchg
sbb
lods
or
push
imul
xchg
jp
clc
sar
inc
rcrb
lods
sub
in
rcrb
xchg
ds
lret
adc
loopne
xor
xor
mov
daa
mov
fwait
jge
pop
jg
test
cmp
loopne
sub
mov
nop
cmpsb
xchg
in
cmpsl
or
mov
push
xchg
xchg
sbb
mov
arpl
cmp
cmp
int3
ss
rorl
xchg
dec
mov
add
dec
push
xor
adc
push
sbb
aas
lahf
mov
or
dec
adc
ret
fsubp
pop
and
iret
xchg
int3
cwtl
and
xchg
xchg
dec
lods
out
into
xchg
sbb
jns
sbb
adc
ficoml
lcall
dec
pusha
adc
mov
lock
pop
add
pushf
stc
pusha
inc
sub
mov
and
popa
std
fistps
lock
jne
cmpsl
popf
lock
push
mov
dec
in
lock
and
enter
cltd
test
and
int3
push
mov
sbb
adc
inc
out
imul
fwait
out
or
fiaddl
push
lods
add
lock
movsb
push
ss
insl
mov
rcrl
adcl
cmp
fldenv
sub
je
insb
fstpt
dec
mov
js
out
test
mov
stos
pop
cli
push
rcrb
cmpsl
xchg
fnsave
orb
fstpt
xchg
jp
imul
adc
mov
fwait
xorb
popa
dec
sti
inc
xchg
fdivs
stos
in
ja
fs
sti
insb
pop
pop
mov
mov
mov
outsl
rol
movsl
leave
scas
lahf
fwait
cmpsb
push
add
lret
cmp
pop
addl
jl
pop
xor
rolb
aad
xchg
shll
bound
or
adc
lret
pusha
pusha
inc
aas
dec
mov
ja
les
decb
sbb
aaa
inc
or
daa
outsl
int3
lcall
fucompp
lea
cmp
sub
fsubl
sub
mov
xchg
lcall
fisttpll
out
in
cltd
pusha
lea
pop
in
sbb
pop
add
dec
fwait
cmp
in
xchg
test
clc
or
movsl
cmp
sbb
filds
stos
xchg
sbb
xchg
mov
adc
jns
pusha
adc
int3
pushf
pop
jecxz
loopne
pop
add
stc
shlb
or
popa
inc
push
outsb
pop
icebp
adc
sub
inc
adc
hlt
outsb
cmp
loopne
movsl
push
lock
lock
mov
xchg
sbb
xlat
jno
mov
pop
movsl
icebp
pop
pop
adc
sub
cmpb
xor
mov
adc
xchg
les
sbb
out
loopne
call
out
scas
jge
sub
mul
icebp
sub
sbb
mov
dec
cmc
jae
mov
sbb
sti
cmp
or
outsl
pop
pop
arpl
sbb
inc
scas
jns
add
out
or
push
or
mov
std
or
fstps
cmp
adc
ds
arpl
fdivrl
push
mov
push
xor
xchg
ljmp
cmpsb
notb
sbb
push
xor
cmpsl
sbb
jl
cmc
aas
mov
or
push
lds
inc
jle
cmpsl
mov
imul
addr16
push
dec
mov
icebp
in
mov
jp
in
adc
flds
imul
sbb
aad
cltd
pop
or
cltd
jne
jg
jmp
pop
fdivl
inc
andl
push
push
jmp
dec
push
mov
gs
sbb
jns
fmuls
jmp
jb
icebp
sub
stos
and
aam
pop
mov
out
xor
fwait
and
fiaddl
sbb
mov
xchg
loop
fstpt
jp
mov
cmp
dec
sub
and
cltd
dec
mov
fwait
pop
mov
or
aam
xchg
adc
repnz
shrl
popf
dec
lock
mov
in
hlt
inc
jecxz
push
mov
mov
pop
push
push
ss
pop
add
popf
lds
xchg
imul
or
cltd
xlat
sub
aas
cmpsl
jmp
adc
rcrb
mov
fnstenv
dec
ficoms
gs
nop
test
daa
adc
xor
pushf
mov
xor
dec
idivb
mov
mov
lret
js
dec
aad
push
jge
cltd
xor
cli
jp
inc
cmp
fdivs
sti
add
insb
adc
dec
jnp
mov
jae
add
pop
sub
cmp
stos
pop
jae
popf
dec
scas
sub
xor
clc
in
mov
mov
enter
mov
jne
mov
dec
dec
adcb
pop
add
or
push
sub
enter
inc
pop
daa
movsl
mov
cmp
orl
fcmovnb
outsl
sahf
jge
or
inc
dec
xor
and
ret
cmpsb
sbbl
pop
or
in
test
movsb
lret
dec
out
cli
or
push
pushl
xor
mov
or
xchg
add
fwait
nop
fwait
jg
test
shll
aas
fcom
and
leave
sub
mov
pop
aad
dec
loop
inc
loopne
in
adc
or
notl
iret
xor
xchg
lret
mov
das
pop
loopne
and
or
daa
inc
rcrl
jecxz
ljmp
push
pop
pusha
call
cmp
cwtl
fisttps
cwtl
push
sbb
rcll
or
adcl
cmp
ds
add
pop
fwait
lret
cmp
mov
test
adc
push
push
inc
and
push
clc
dec
aaa
add
lcall
cmp
sbb
test
cmp
adc
jp
push
xchg
fwait
and
sbb
loop
add
clc
add
xchg
mov
insb
aam
stos
mov
jp
cmc
push
mov
mov
adc
mov
fucomi
fidivrl
push
ret
imul
push
dec
sbb
mov
repz
xor
ss
fs
sub
mov
sub
hlt
and
pop
ret
mov
xlat
and
sti
jg
xchg
xchg
add
mov
dec
and
push
lods
cli
sti
leave
mov
xchg
imul
clc
mov
inc
ja
in
and
rcrb
stos
sub
inc
fistps
cmc
push
scas
adc
fnstenv
jmp
lcall
scas
or
mov
shll
std
jnp
push
cmp
jb
sub
jb
fwait
stos
pop
outsb
aas
mov
aam
mov
adc
fdivr
dec
push
sub
sahf
add
andb
sbb
aaa
jbe
repnz
je
mov
mov
sbb
cmpl
movsb
mov
mov
mov
nop
or
stos
in
hlt
call
jg
jmp
ds
addr16
pop
pop
std
pop
shrb
shlb
std
xchg
shlb
jl
aaa
call
popa
cmp
push
xchg
sahf
adc
sbb
inc
xchg
pop
paddb
ja
xchg
outsb
push
pop
xchg
outsl
cwtl
fisubl
pop
push
pushf
sbb
sbb
in
sarb
repnz
scas
mov
xchg
ja
das
dec
sub
mov
aaa
push
nop
into
dec
fnstsw
jno
jmp
jbe
cmp
xchg
movl
ja
pop
mov
add
loope
shrl
cmp
push
repnz
and
mov
addr16
cltd
sub
cmp
lea
cli
fwait
scas
sbb
or
cltd
stos
inc
pop
test
jg
lahf
out
frstor
in
dec
rcrb
mov
scas
adc
push
pop
cmp
sbb
pop
out
fbld
repz
test
ds
jg
and
xchg
push
sbbb
mov
out
shlb
jnp
mov
out
adc
aas
jecxz
mov
sahf
adc
aaa
and
loopne
mov
lods
clc
les
outsb
cmp
into
les
outsl
xchg
add
add
mov
mov
hlt
or
xchg
and
sbb
sbb
fs
insl
dec
fnstsw
mov
ds
xchg
test
sbbl
xchg
pop
or
mov
add
insl
and
sub
pop
fs
xchg
add
mov
push
jbe
jb
ja
jne
mov
xchg
add
imul
neg
add
scas
ficoml
xor
fwait
mov
jae
adcb
or
adc
cmpsb
pushf
sbb
push
fisubrs
cwtl
xchg
adc
cld
fistpl
lods
sbb
xchg
sub
insl
int
aas
and
pop
jg
pop
fmuls
inc
mov
ljmp
dec
shll
addr16
aad
cmpsl
daa
scas
pop
stos
fadds
push
or
fisubl
test
add
push
push
fsubrs
jne
outsl
jae
sub
orb
jmp
sbb
lss
jge
insb
mov
ljmp
jo
xorl
adc
mov
ret
gs
les
and
push
mov
pop
and
fmull
jge
xor
sub
gs
mov
hlt
mov
stos
call
iret
mov
je
jbe
cmp
and
pop
lods
cmp
aad
std
hlt
push
ficompl
push
dec
ss
fisubrl
lret
sahf
insl
pop
push
leave
fldt
dec
push
inc
mov
dec
dec
lea
push
dec
push
and
jae
or
and
out
xchg
loopnew
mov
cmp
inc
inc
test
jp
clc
push
out
arpl
mov
stos
push
sub
insl
aaa
mov
in
gs
ss
fcoml
pop
jbe
fcmovu
ljmp
xchg
pop
xchg
pop
and
mov
test
divb
insl
lods
bound
pushf
dec
std
movl
movsb
dec
loopne
gs
cltd
xor
cmpsb
nop
lds
cltd
cli
jge
inc
aad
loop
mov
out
and
xchg
xor
js
repnz
mov
aad
cmpl
xor
movsb
jg
test
push
dec
ljmp
in
cmpsb
cmp
mov
sbbl
hlt
mov
rcrb
test
rclb
popf
push
xchg
jle
enter
call
inc
add
mov
xchg
push
or
jle
or
ret
push
movsb
js
in
fwait
cld
cmp
and
dec
jno
inc
into
subb
pop
mov
outsl
xchg
lds
addr16
ret
add
mov
pop
dec
fwait
cs
pop
adc
imul
xorb
movsl
push
pop
jns
mov
jne
aad
outsb
fcompl
inc
ss
sti
xor
mov
das
or
and
xchg
cmp
add
lret
adc
icebp
inc
cmp
faddp
movsl
mov
sub
negl
aaa
mov
inc
dec
clc
loop
mov
pop
mov
js
jne
in
cltd
adc
jno
repnz
ja
es
js
sahf
dec
xchg
inc
jb
pop
pop
imul
mov
cwtl
xchg
std
test
xchg
pop
dec
ucomiss
pop
cwtl
mov
ss
push
sbb
int3
imul
push
mov
add
cs
adc
imul
pop
and
int3
xchg
cmp
push
stc
mov
lods
cmp
xor
xchg
insl
loopne
aad
subb
mov
mov
adc
fiadds
cmpsb
jo
ja
lds
imul
and
test
dec
jbe
mov
sbb
ret
into
aam
insl
idiv
arpl
cs
push
repnz
cmc
shl
iret
andl
out
repz
pop
adc
pushf
or
xor
or
fdivrp
mov
pop
ss
faddl
pop
xor
lea
int3
mov
out
dec
sbb
inc
ljmp
js
cli
mov
test
jl
xchg
aam
sbb
pop
sahf
sub
addr16
scas
or
adc
enter
xorl
test
shlb
in
lret
mov
adc
or
aad
xlat
gs
and
mov
icebp
mov
and
lahf
aam
xchg
push
push
and
sbb
jg
inc
inc
stc
ret
fidivs
mov
iret
push
test
lods
mov
mov
jno
pop
inc
jno
dec
cmp
test
fstp
fisttpl
inc
iret
test
sbb
fwait
sub
scas
mov
insb
es
insl
cmp
sub
popf
xchg
mov
push
inc
mov
jno
mov
inc
sti
ljmp
push
scas
call
aam
mov
sub
lods
in
sbb
sub
es
xor
pushf
sbb
jae
out
int3
jae
movsl
cli
add
adc
iret
inc
mov
imul
iret
mov
sahf
fnstenv
jp
iret
sub
fs
mov
adc
inc
jmp
popf
sub
xor
cmp
out
inc
xor
push
shll
mov
add
pop
arpl
fidivrs
call
in
push
cmp
out
pop
mov
addr16
adc
jle
pop
out
shlb
jbe
mov
scas
xor
ja
icebp
pop
pop
add
rol
cmp
dec
mov
sub
into
pop
outsb
pop
out
mov
xchg
addr16
push
mov
xor
sub
out
or
xchg
mov
shlb
jbe
int
fidivs
popf
push
jne
cwtd
int3
orb
cmp
dec
cs
loop
daa
out
mov
hlt
sub
push
dec
into
cs
sbb
bnd
push
dec
popf
adc
cmp
sub
out
lods
push
mov
dec
int
fidivs
jns
fistpl
adc
arpl
in
cmp
pop
orb
gs
dec
movd
jae
inc
adc
cld
rorl
cmp
inc
xor
movsb
and
sahf
mov
jae
xlat
push
lea
sbb
mov
mov
pusha
xor
rcr
rorl
jb
js
test
mov
shl
cmp
jne
repnz
dec
pop
pop
sti
mov
jmp
into
fcmove
mov
out
je
into
or
mov
imul
xor
insb
xor
push
push
lods
cli
mov
adc
repz
jp
cmp
sahf
pop
adc
out
cmp
enter
and
cmp
ret
div
push
hlt
test
xorb
push
dec
test
mov
out
dec
dec
ja
xor
cmp
mov
enter
shr
inc
mov
sahf
insl
repnz
jecxz
scas
stc
adc
jp
fisttps
jbe
cmpsl
dec
pop
mov
sbb
les
cmp
stos
in
ret
adc
add
or
aad
cmp
mov
imul
push
icebp
sarl
loop
test
in
movsl
ljmp
cmp
mov
test
or
enter
mov
pop
test
cli
jb
mov
and
insl
pop
mov
insl
push
mov
outsb
xor
mov
mov
add
test
cwtl
push
adc
iret
push
int
decb
ficomps
test
jbe
sbb
pop
and
push
or
fs
mov
xor
adc
lea
loopne
adc
and
dec
push
mov
lret
prefetchw
xchg
je
mov
inc
jbe
dec
sbb
enter
jbe
insl
loope
dec
cmp
aaa
or
jmp
add
jge,pn
lods
or
or
push
inc
pop
lods
fnsave
mov
mov
jl
mov
rcll
and
icebp
adc
loop
xchg
jb
inc
or
pop
loopne
mov
and
imul
ja
xor
bound
cwtl
pop
fiaddl
arpl
mov
fbstp
or
adc
push
lea
or
daa
rcrb
pop
fildll
ljmp
jge
dec
adc
jecxz
push
adc
pop
daa
and
repnz
and
fidivs
into
add
in
lods
imul
fisubrl
mov
pop
pop
mov
pop
jne
fs
xchg
mov
sar
jne
fs
inc
mov
les
jno
lock
jne
addr16
rcrl
in
fstps
dec
stc
out
mov
mov
adc
bnd
idivl
dec
adc
aam
jns
dec
xchg
lock
mov
por
fucomip
cmpsl
clc
pop
test
leave
mov
mov
xchg
xor
adcb
push
mov
push
adc
xor
fwait
mov
cmpb
add
imul
xor
ret
adc
push
popf
in
or
adc
jmp
stc
jb
int
mov
xor
data16
xchg
inc
xchg
lret
push
repnz
les
jae
push
hlt
xchg
mov
popf
add
inc
inc
imul
dec
push
fldcw
repz
lock
mov
add
mov
icebp
add
lods
dec
mov
xchg
in
xchg
xor
fisubrl
inc
mov
jecxz
mov
cltd
daa
rorb
cs
or
add
fwait
clc
mov
mov
mov
das
sbb
xchg
incb
cmp
rol
popf
sbb
lock
frstor
jle
ret
shlb
adc
xor
pop
cmpsl
push
cld
push
or
fmuls
add
repz
sbb
negb
fnstsw
adc
pushl
jne
xchg
mov
shrb
in
orl
adc
or
rcrb
xorb
bound
test
leave
sti
mov
mov
pushf
mov
pusha
add
jg
ss
andb
cmc
jg
test
fistl
mov
test
sbb
ret
jae
cli
je
add
xchg
mov
add
pop
pop
lods
imul
and
pop
mov
sub
iret
mov
pop
std
pop
loop
cmpsl
push
mov
add
inc
or
fcmovb
cmp
imul
shll
adc
and
mov
adc
and
int3
xchg
cmp
mov
mov
push
jge
je
addr16
xadd
and
mov
ljmp
inc
arpl
adc
mov
jmp
out
mov
loopne
int
mov
insb
cmpsl
insb
lods
push
jb
data16
mull
xchg
aas
xor
dec
ret
popf
pop
imul
push
das
mov
ss
pusha
jl
sub
ss
push
mov
scas
push
cwtl
sbb
cmp
lea
xchg
or
and
arpl
xor
xor
ss
xor
pusha
or
xlat
int
mov
inc
aam
push
sbb
adc
out
jbe
dec
cmp
insl
mov
es
or
sub
lock
cmp
adc
hlt
inc
xchg
sbb
sbb
mov
out
mov
lock
ds
jb
xchg
lock
cmp
and
jae
or
cmp
jmp
or
fists
add
jo
mov
leave
cmp
daa
sarb
inc
ss
and
sbb
shl
or
sbb
add
and
push
aad
or
in
mov
sbb
repnz
pop
ja
ljmp
aad
arpl
sbb
mov
cmpsb
dec
in
ss
pop
repnz
cmp
mov
jo
and
cli
frstor
test
mov
adc
fsubl
std
inc
arpl
mov
roll
mov
inc
clc
xor
sbb
push
test
frstor
in
push
loopne
sar
dec
add
cmp
add
loopne
cmpsb
mov
sub
push
cli
sahf
cmpsb
out
sub
in
add
arpl
or
inc
pusha
mov
push
notl
push
dec
loop
movsb
xchg
adc
jg
imul
psraw
jno
movsb
add
fwait
jnp
flds
xor
fbstp
insb
fldt
push
fs
addb
rcr
cmc
les
xchg
loope
into
xchg
xor
and
sbb
ficomps
aas
sti
or
mov
dec
test
stc
xor
lock
dec
mov
pop
or
out
fsubrs
jg
pop
push
mov
cli
icebp
or
push
jae
pop
sbb
jg
inc
xlat
in
add
and
int3
lcall
push
aaa
xchg
cmp
fldenv
mov
mov
xor
and
andl
push
in
or
imul
leave
cmp
push
test
sahf
xor
je
push
mov
adc
scas
stc
mov
xchg
mov
xor
and
repnz
sbb
mov
mov
push
loopne,pn
add
fs
add
fistpll
fildl
pop
ficoml
out
add
push
xchg
aas
cltd
leave
bound
push
pop
or
outsb
inc
push
mov
add
rcl
inc
add
jno
push
push
lahf
jecxz
lods
pop
and
jge
insb
adc
leave
fsubs
inc
mov
xor
push
xor
addb
pop
loope
dec
add
orb
fwait
push
stos
cmpb
pop
insl
mov
or
inc
lcall
insb
add
add
add
stos
sbbl
lock
out
mov
and
xchg
push
xchg
xor
mov
pop
outsl
adc
ds
fisubl
cmpsb
inc
pop
mov
mov
push
sub
loope
sub
add
xchg
imul
mov
js
stc
movsb
sbb
mov
adc
sahf
dec
insl
repz
repz
addl
stos
in
push
jge
push
fcmovne
jnp
es
movsl
adc
mov
daa
xchg
and
adc
xorb
shlb
lock
push
xor
sahf
fs
mov
jecxz
pop
hlt
mov
fcoms
cmp
scas
lret
add
push
bnd
xchg
cmp
in
lcall
movsl
insl
push
jg
xchg
and
fistps
out
adc
inc
dec
mov
pop
jp
mov
addr16
out
dec
and
inc
aas
push
push
jp
sahf
data16
pop
or
fs
mov
push
lret
roll
xchg
and
mov
into
mov
fs
popa
fdivrl
dec
gs
sbb
cmp
sbb
pushf
pop
and
movsl
sahf
in
mov
jge,pn
xchg
mov
xor
leave
ljmp
popf
xor
mov
xchg
mov
enter
pop
mov
repnz
push
inc
sbb
push
outsl
jb
dec
cmp
int
fstps
sub
fisubrl
nop
icebp
add
enter
xor
lock
xchg
add
lret
pop
sub
lret
cmc
rcll
inc
add
stos
cmp
dec
fwait
fdivl
mov
lahf
mov
sub
push
shll
popa
ljmp
lods
sbb
mov
shr
lret
or
mov
mov
jp
xchg
jmp
pushl
psubsb
push
je,pn
jmp
out
inc
jns
repz
mov
lods
ljmp
inc
enter
cmp
lea
mov
fdivrs
and
dec
mov
pop
pop
leave
xor
jo
inc
mov
xor
stc
push
stc
cmp
and
fcompl
xlat
xchg
mov
mov
push
int3
mov
inc
push
in
scas
jmp
pusha
cli
add
call
adc
xor
jl
dec
out
ret
aaa
dec
cld
outsb
int3
loop
mov
mov
test
iret
sub
add
xor
in
pop
mov
mov
jp
sbb
and
xchg
push
jmp
and
sub
pop
inc
pushf
pop
mov
mov
cmpsb
mov
mov
mov
jnp
inc
sbb
clc
sbb
mov
adc
loope
jo
hlt
lret
pop
mov
sbb
pop
sub
dec
mov
stos
sub
lds
insb
and
jl
in
icebp
fisttpl
mov
jns
mov
test
sub
dec
es
das
hlt
andl
jge
imul
adc
cli
add
xchg
adc
xor
incl
scas
pop
cld
push
psllw
or
rol
icebp
push
mov
icebp
fwait
scas
cmc
mov
test
and
xchg
popl
rol
loope
sbb
fnstsw
subb
mov
iret
inc
movsb
repz
dec
lahf
or
enter
push
pop
insl
cmp
fsts
mov
notb
addl
dec
pop
pop
mov
mov
pop
aad
lods
jle
out
stos
sbb
sbb
aam
cpuid
pop
sub
js
pop
push
add
or
loopne
out
fists
arpl
fs
mov
pop
jl
das
cmp
leave
filds
mov
popf
mov
xor
sub
aam
mov
xlat
cmpsb
xor
cmpsb
in
fidivs
cmp
enter
mov
cmp
outsl
cmp
daa
cmp
subl
add
push
scas
push
or
sbb
orl
mov
jb
out
mov
addb
aas
cmp
add
movsl
jge
pop
mov
pop
cmc
xor
addr16
sub
adc
xor
ffreep
int3
xchg
cmp
sbb
ficoms
out
xchg
arpl
pusha
add
scas
andb
jns
dec
loope
mov
pop
and
add
jl
in
rcr
sub
or
ljmp
inc
adc
jne
rorb
jmp
mov
dec
xor
jns
scas
arpl
mov
cmpsl
dec
mulb
pop
or
pusha
test
xchg
jecxz
xchg
aad
pop
xlat
stc
add
cmp
pop
cwtl
imul
mov
add
jmp
push
rol
dec
loope
call
push
mov
mov
mov
cmp
push
popa
fsubl
fdivs
mov
lret
mov
dec
movsl
je
jo
sbb
xchg
mov
out
and
je
sbbb
mov
je
int3
sahf
popa
ljmp
jno
ja
shlb
loope
out
mov
mov
hlt
push
stos
and
jl
stos
and
inc
out
stos
out
sbb
repnz
sub
add
fwait
cmpsb
mov
repz
xorb
js
daa
ja
dec
or
out
ds
mov
push
cltd
adc
xor
fs
push
push
xor
xchg
mov
xor
pop
xchg
sub
xor
call
xor
inc
pop
aad
mov
daa
out
aad
or
jns
mov
push
adc
mov
mov
lods
sbb
es
fsubl
cmpsl
mov
xor
enter
adc
aam
dec
mov
sbb
xchg
or
aas
aas
ds
push
xchg
imul
sub
mov
pop
sbb
insl
mov
out
loop
add
push
add
mov
and
loop
into
pop
and
sti
imul
filds
sbb
mov
push
scas
adc
fadd
jae
jo
test
add
push
js
in
pop
mov
cltd
call
aaa
sbb
jmp
out
sub
ljmp
mov
ja
fisubs
int3
cwtl
fwait
das
inc
mov
mov
and
and
inc
pop
mov
fnstsw
cmp
lret
popl
push
cmpl
loope
jne
inc
and
cwtl
imul
adc
roll
xor
xchg
and
jo
arpl
sti
cld
cmp
xchg
lods
in
je
movsl
leave
dec
flds
fidivrl
mov
cmp
or
fldenv
cmp
testl
mov
lods
lahf
rcrb
fdiv
outsb
adc
scas
movsl
and
mov
cmc
pushf
mov
cwtl
xchg
fmuls
adc
je
xor
ss
xor
loope
jno
add
mov
outsb
cmpsb
jbe
mov
jl
mov
or
pop
mov
in
mov
rcll
dec
and
add
lahf
loop
pop
pop
movsb
xor
icebp
aaa
xchg
cmovge
sahf
push
dec
jne
xor
pop
adc
inc
loop
push
dec
mov
inc
in
xchg
mov
and
ljmp
cmp
popa
je
mov
stos
les
xchg
lret
jae
ljmp
cmp
data16
in
out
dec
inc
ljmp
fwait
adc
int
and
mov
cmp
add
fidivl
jb
clc
ficompl
mov
outsl
loopne
mov
jmp
sbb
pop
cmp
sub
jmp
leave
inc
in
hlt
inc
sbb
adc
dec
sbb
mov
outsl
and
push
inc
or
cmp
bound
loope
mov
in
dec
fdivs
lret
aas
mov
or
mov
lods
adc
adc
dec
xor
jbe
stos
xchg
adc
cmp
out
shrb
sub
dec
ret
xor
scas
cli
ss
or
mov
pop
outsl
add
and
cltd
fs
mov
push
jno
mov
js
mov
inc
imul
out
and
mov
mov
ret
rcr
bound
cmp
out
mov
enter
fwait
shlb
orl
pop
pop
jb
repnz
dec
jb
xor
or
orb
xchg
dec
push
cmpsl
pop
mov
sbb
pop
adc
mov
sbb
mov
syscall
xor
repnz
dec
mov
or
jecxz
push
and
cltd
adc
pop
and
aam
mov
int
sub
int
adc
divb
cmp
fiaddl
add
xchg
or
sbb
or
xor
ret
test
add
or
js
jns
imul
inc
js
mov
sahf
nop
inc
cmp
rcrl
or
cld
push
js
stos
mov
push
cmp
push
push
pop
rcll
test
mov
sub
sub
call
sahf
int3
dec
mov
div
inc
loop
idivl
outsl
mov
pop
ljmp
push
mov
jge
mov
dec
mov
sub
sti
xor
mov
sub
in
and
shll
mov
arpl
lret
push
test
les
paddw
daa
push
clc
sbb
aas
leave
sbbl
and
call
push
mov
out
add
popf
jnp
in
stos
mov
xor
test
insb
sbb
jmp
inc
iret
lret
mov
lcall
enter
out
xchg
cmp
inc
cmp
ret
sub
fdivp
xchg
aaa
sarb
lret
jae
cmp
or
jno
xor
xor
popa
sub
lret
cmp
xchg
lock
cmp
test
cwtl
pop
push
push
jmp
and
imul
lret
lret
pop
push
push
push
xrelease
xchg
in
cmp
pop
insl
jmp
sbbl
aad
cmpsb
dec
cmp
jle
cmp
repz
cld
jmp
mov
std
mov
ss
in
adc
cwtl
stos
or
or
fwait
mov
cmp
addr16
mov
cmp
cmpsb
mov
push
in
push
in
subl
and
das
scas
insb
sub
shll
and
test
and
mov
jne
xchg
imul
mov
stc
int3
xchg
icebp
adc
out
cmovae
mov
cli
shll
cs
jmp
mov
cld
adc
cld
sub
test
fcomi
dec
xor
add
stos
and
movsb
insb
sub
mov
xchg
xchg
jnp
dec
out
nop
lret
xor
ret
mov
dec
cmpsb
pop
in
mov
pop
mov
jae
push
add
sti
adc
jnp
lahf
add
pop
adc
mov
out
jl
insl
test
ds
lret
push
sbb
and
daa
subb
shrl
test
push
int3
ss
jne
push
lods
push
ret
jg
jecxz
fmull
icebp
incl
cld
jge
fistl
insb
push
scas
or
iret
popa
mov
or
cmp
int3
and
xor
les
cmp
mov
sbb
hlt
sbb
pop
sti
scas
pop
ljmp
outsb
pusha
or
and
sub
pop
inc
mov
mov
je
cmp
mov
ficoml
loopne
rcrl
popf
jne
mov
jbe
cltd
add
shrb
in
aad
xor
pop
lea
shll
push
lret
xchg
or
xor
dec
xchg
push
dec
or
push
xchg
dec
mov
stos
xchg
mov
pop
push
add
out
fsub
xchg
inc
cmp
jno
adc
xor
rorl
cmc
pop
pop
lret
mov
fmul
mov
test
add
mov
aas
push
mov
sti
cld
adc
lds
aam
push
cmp
jp
add
mov
aam
std
out
lea
cmp
movsl
lcall
ljmp
mov
lahf
movsl
cmp
pusha
not
popf
out
and
xor
mov
test
push
jmp
jle
sbb
adc
pop
xor
cs
mov
adc
popa
cmp
data16
mov
sbb
out
fimuls
cmpsb
lods
push
jg
into
testl
data16
cmp
clc
or
lea
arpl
imul
xchg
mov
std
xchg
and
dec
sub
jl
adc
jge
in
and
out
push
and
inc
xchg
dec
into
push
es
sbb
pushf
iret
mov
mov
insl
sbb
pop
scas
mov
add
lret
xchg
mov
fwait
jnp
ja
adc
sbb
sub
je
or
mov
int
je
ss
or
add
push
sar
adc
clc
fcompl
pop
jne
xchg
mov
inc
mov
cmp
inc
push
outsb
stos
or
add
sbb
enter
cltd
subl
scas
fnstcw
jge
enter
ret
aas
push
xor
push
mov
xor
pop
jo
pop
lahf
lea
add
pop
aad
into
jb
mov
outsl
xor
mov
scas
pushl
hlt
cwtl
shll
inc
mov
sbb
loop
push
add
sti
jg
cmpsl
mov
jne
add
push
js
cmpsl
aam
jo
pushf
call
push
mov
ror
dec
xchg
out
pusha
pushf
je
and
sbb
xchg
mov
dec
cmp
dec
cmc
hlt
ror
out
les
popf
add
aam
mov
test
lret
addb
sub
test
frstor
jmp
inc
mov
adc
cs
hlt
mov
dec
test
xor
cmp
cmp
test
lds
iret
test
cltd
mov
pop
cmp
push
pop
adc
inc
dec
aam
adc
out
mov
dec
adc
pop
jecxz
sub
push
pushf
adc
push
enter
adc
les
js
int
adcb
fisttpl
inc
ret
push
inc
lahf
inc
shrb
cmp
sub
push
sbb
test
repnz
fcomi
lds
pop
mov
lret
jo
stos
cli
test
into
jb
nop
mov
lods
loop
scas
insl
out
jbe
mov
mov
push
loop
pop
inc
in
sub
mov
sub
mov
mov
imul
xchg
xchg
fmuls
scas
sti
ds
arpl
cmp
stc
sbb
pushf
aam
adc
xchg
push
and
sub
rcrl
inc
adc
push
xor
stc
or
cmp
test
jl
mov
xor
lahf
sub
cmp
movsb
out
mov
icebp
inc
pop
ss
add
pop
sub
ljmp
in
loope
lret
add
out
mov
popf
stos
stos
sub
adc
jae
dec
cwtl
int3
xor
hlt
clc
ljmp
popa
orb
sbb
pop
test
mov
inc
dec
call
ss
lret
mov
push
cmp
or
pop
push
xor
into
bound
pop
adcb
out
dec
or
inc
dec
out
enter
sub
lcall
sbb
jle
inc
jecxz
aas
aas
bound
mov
pop
mov
out
dec
outsl
mov
xchg
sbb
xchg
jbe
or
movsb
inc
or
and
popf
daa
hlt
push
jae
lock
jl
lahf
pop
jl
pop
jge
adc
add
mov
ljmp
dec
rol
movsb
dec
mov
jnp
adc
mov
mov
inc
fxtract
jmp
in
lods
xorl
jb
cmc
push
xchg
xchg
push
xorl
cmpsl
jae
adcb
adc
dec
loop
mov
jb
xchg
popw
jo
arpl
mov
add
push
mov
sub
lahf
mov
add
jl
inc
jge
ja
repnz
movsb
ss
add
cld
mov
dec
dec
aaa
and
pop
push
inc
cmp
pop
sbb
pop
in
sti
adc
fsubs
lds
push
adc
mov
jne
dec
dec
lock
cmp
inc
cmp
decb
jb
pop
mov
cltd
or
mov
test
jmp
das
jecxz
lret
subl
cmp
fistpll
mov
cmc
sub
jmp
xor
les
test
or
pop
in
mov
push
loop
shll
test
loop
xlat
popa
xor
sbb
lret
cmc
xor
pop
xchg
ljmp
mov
mov
cli
or
fwait
mov
outsb
xor
sub
das
out
sbb
or
jae
ja
add
test
gs
pop
mov
daa
dec
sti
cmpsl
test
pushf
daa
and
mov
push
test
out
fwait
push
ret
push
push
out
dec
or
pop
movsl
dec
ds
cmc
sub
add
xlat
sbb
incl
or
test
xchg
mov
daa
bound
pop
fldt
inc
xchg
lock
push
popf
pop
inc
vmovmskps
sub
and
into
loop
loop
lret
inc
lret
sub
outsl
std
fsubrs
adc
xchg
pop
jg
lods
repnz
inc
xchg
fmuls
add
pop
push
xor
sbb
fwait
and
int3
jbe
jo
test
mov
frstor
xchg
int3
inc
repz
cwtl
mov
rcrl
mov
pop
pop
inc
add
repz
dec
add
cmp
fnsave
jge
fists
lcall
enter
pop
mov
cmpsl
movsb
mov
test
js
mov
jne
out
cmp
add
mov
cmp
cmpsb
push
adc
loopne
jp
sti
les
out
sti
jg
mov
lods
dec
dec
out
mov
rorb
xchg
cmp
imul
push
jge
jle
and
out
jb
add
test
data16
pop
rolb
sarl
ds
push
cmpsl
in
xchg
cli
xor
dec
pop
in
xchg
cltd
in
jae
cld
rorl
addr16
jne
arpl
jb
cmp
push
dec
popf
sbb
sub
ret
adc
test
mov
jno
push
popa
aaa
or
fucomip
jmp
std
cmp
cmpsb
mov
dec
adc
icebp
into
mov
lods
dec
xor
pop
addr16
mull
aam
out
pop
sub
ret
lcall
mov
hlt
mov
mov
mov
nop
les
sbb
adc
fdivrp
inc
dec
cmpsb
dec
outsb
imul
std
or
cmpsb
divb
push
call
in
cmpl
mov
inc
mov
jle
imul
xchg
popf
mov
mov
xchg
das
xchg
lods
mov
xor
jmp
push
fstpl
jge
mov
xor
xchg
aas
add
add
loope
add
notl
mov
shrl
lcall
rep
lea
inc
xor
pop
incl
mov
stc
xchg
pop
test
pop
arpl
stos
call
push
cmp
sti
and
push
xor
dec
test
mov
and
push
cmp
and
fsubrs
sub
lods
scas
in
in
loop
lret
dec
xchg
xchg
mov
cmp
cld
dec
or
jecxz
dec
adc
jnp
jb
sub
xchg
out
fdiv
mov
pusha
sahf
xor
or
fstl
sub
lock
testb
popf
sti
in
push
sub
lret
dec
lcall
xchg
xor
iret
mov
insl
mov
aaa
cli
add
sub
add
int
mov
inc
jmp
cmp
mov
insb
les
lahf
icebp
lods
inc
sbb
mov
jnp
mov
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
mov
mov
lock
loopne
cmp
inc
testb
test
add
mov
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
fimull
dec
sti
lea
dec
add
call
outsl
hlt
mov
jmp
and
xchg
lret
pop
xchg
cmpsl
in
sub
or
out
cltd
outsl
dec
test
enter
dec
test
lcall
pop
mov
mov
adc
mov
aad
test
cmpsb
sbb
sub
pop
cmp
loope
push
cmp
jne
cld
push
xlat
addr16
pop
nop
push
mov
adc
mov
mov
cmp
sub
test
xchg
ss
jne
xor
cmp
imul
pop
js
mov
cmpsb
cwtl
jl
aaa
pop
mov
hlt
add
loopne
dec
dec
test
loopne
dec
pop
shll
scas
mov
mov
hlt
add
add
icebp
dec
dec
inc
test
fs
dec
dec
or
leave
dec
dec
test
test
adc
loopne
lock
dec
dec
test
in
lock
dec
dec
test
in
dec
dec
xchg
lock
dec
dec
test
loopne
pop
dec
test
loopne
dec
inc
test
stos
hlt
add
and
lds
mov
hlt
add
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
stos
ror
je
loopne
lds
dec
dec
xchg
mov
hlt
data16
shl
push
or
xchg
mov
dec
dec
fiaddl
dec
dec
test
hlt
add
leave
lds
mov
hlt
add
loopne
outsb
dec
test
xchg
inc
dec
dec
test
loop
dec
dec
test
loopne
dec
je
sub
leave
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
loopne
dec
dec
test
scas
ret
inc
dec
pop
test
pop
xchg
loop
jne
imul
repnz
jae
adc
cmpsb
pop
ds
das
xchg
push
sub
push
adc
inc
out
outsb
jbe
imulb
push
mov
icebp
mov
add
aad
mov
jne
xor
or
sub
aad
subb
lea
clc
jo
stc
in
sbb
test
aam
fsubrl
jecxz
les
loop
push
mov
jge
aad
cltd
mov
roll
dec
jp
pop
into
xor
push
jb
sahf
add
daa
popa
and
sbb
or
gs
sub
fistpll
or
out
inc
lods
outsl
fidivrs
repnz
fwait
xsha1
cmpsb
or
fs
pop
stos
outsb
push
and
les
dec
cmpsl
inc
dec
add
fstpl
add
lcall
movsb
dec
inc
adc
ss
loopne
out
cmp
jo
int
add
push
xlat
fwait
das
test
rcrb
or
push
pop
cmp
adcl
ret
gs
mov
xchg
jge
imulb
ret
mov
mov
xchg
adc
fs
bound
jnp
or
leave
add
pop
cli
inc
scas
sub
push
fcoml
shlb
mov
add
gs
push
sbb
sub
mov
into
jl
add
mov
mov
js
jo
jbe
arpl
cli
ss
push
xorb
push
sbb
outsl
test
mov
jno
cmp
jecxz
pushf
adc
add
ss
test
sub
decb
aaa
and
push
pop
mov
dec
lcall
arpl
loop
dec
xor
pop
mov
out
xchg
addr16
jne
jo
pop
mov
and
lds
fildll
pop
lcall
mov
push
sbb
das
push
adc
mov
cmp
push
xor
fldt
outsl
or
outsl
fstps
fbstp
and
mov
push
icebp
hlt
sbb
adc
sbb
xor
int
mov
shll
inc
ret
mov
mov
cmp
test
in
popa
sub
and
push
stos
ja
nop
testl
push
mov
fbstp
lcall
fimull
fimull
pop
dec
dec
das
lea
inc
data16
adc
or
sbb
movsb
pop
lods
fs
jecxz
call
insl
inc
jo,pt
les
pop
test
test
mov
mov
decl
pusha
in
adc
xchg
push
enter
dec
lahf
pop
xor
movl
cmp
in
jno
inc
push
das
imul
sub
test
divl
mov
mov
push
leave
out
mov
add
jb
mov
xchg
jge
pop
cli
or
xchg
es
push
push
js
cmp
popa
pop
das
test
pop
xor
mov
inc
mov
or
jo
into
and
mov
xchg
mov
fnstsw
dec
lret
add
fdivr
js
cli
pop
mov
xchg
sub
sbb
mov
dec
cltd
cltd
int3
movsl
sbb
arpl
sahf
lods
out
popf
frstpm(287
cmp
leave
mov
call
aaa
out
js
fwait
mov
shrl
mov
cmp
cmp
xor
mov
test
repz
jns
data16
mov
icebp
call
and
pop
dec
sub
out
adc
lcall
mov
mull
add
movsb
sub
das
out
push
or
std
hlt
rorb
pop
mov
pop
jmp
ds
fwait
mov
data16
ret
cmp
mov
pop
xchg
lcall
int3
push
fcomip
mov
pop
add
jb
jmp
xchg
push
ret
ljmp
jae
push
sub
sub
clc
sbb
sti
cmp
lock
lea
xchg
test
mov
mov
call
and
decb
pop
clc
pushf
test
add
jo
add
pop
leave
sbb
jne
es
ja
sbb
mov
xchg
xchg
adc
xor
fstps
mov
and
xchg
aad
lret
enter
das
inc
nop
pop
hlt
stos
push
rorb
rcrb
out
inc
pop
pop
push
xor
rorb
push
mov
mov
pusha
xchg
subl
jmp
jae
mov
sub
sub
add
push
lods
and
lods
mov
movsl
rorl
mov
sbb
aad
pop
test
mov
push
push
cmc
mov
mov
insb
dec
xor
pop
sbb
enter
stos
add
add
cmp
hlt
pop
cmp
inc
push
aam
push
push
pusha
loopne
mov
fadd
xorl
fs
ss
sbb
xor
out
loope
in
mov
pop
repnz
test
mov
imul
jbe
mov
or
fwait
xor
out
pop
inc
insb
or
flds
xorl
sbb
je
xchg
fsubp
or
mov
and
inc
inc
sti
adc
or
and
mov
popa
dec
pushf
cmc
pop
shrb
or
das
mov
xor
mov
mov
xchg
outsl
mov
jmp
movnti
ljmp
ljmp
mov
push
push
jg
lds
push
mov
jle
xchg
pop
mov
test
aaa
cld
pop
std
mov
lods
repz
mov
pop
mov
adc
cld
test
subb
fists
inc
in
ret
mov
out
jne
loop
pop
or
dec
leave
gs
sbb
out
xchg
jg
dec
cmp
lret
xor
lods
and
popf
pop
aam
mov
lahf
mov
xchg
shl
imul
mov
mov
setne
cmp
push
and
sbbb
and
cmp
clc
icebp
out
mov
aas
push
imul
xor
insb
dec
fdivl
mov
inc
sub
or
xchg
inc
push
mov
adc
pop
addb
in
es
sbb
jne
gs
jmp
repnz
cmp
scas
pop
and
xchg
into
add
add
push
test
xchg
adc
xor
mov
ficoms
cmp
out
idivl
pop
sub
dec
popf
shl
push
data16
or
shlb
xchg
imul
into
adc
loope
mov
fidivs
dec
popa
in
fsubs
pop
pop
cld
or
pushf
mov
jnp
jle
rcl
jmp
or
rclb
es
dec
stos
sbb
repz
mov
pop
push
or
cmp
pop
int3
enter
push
and
and
rcrl
dec
mov
add
outsw
outsb
ret
inc
mov
push
imul
dec
out
mov
repnz
inc
fstpt
mov
inc
popf
scas
test
ds
nop
mov
arpl
es
xchg
adc
and
jb
dec
or
test
push
and
mov
pop
lds
lds
inc
fnsave
add
inc
addl
mov
mov
mov
clc
pop
inc
mov
or
push
in
mov
mov
push
jb
pop
dec
es
push
ss
test
filds
and
lds
data16
dec
fildl
test
fdiv
iret
lret
fmull
and
inc
testl
outsl
dec
repnz
jo
sub
push
or
ss
test
inc
add
stos
jge
jmp
push
inc
sahf
pop
addr16
pop
std
std
test
sahf
mov
push
push
fwait
incb
push
jno
xchg
notb
jo
gs
cmpsb
jno
cwtl
jo
push
sub
xlat
ret
daa
nop
std
loop
inc
je
out
adc
lds
inc
mov
cmc
insb
cmp
outsl
ficomps
cltd
aad
add
adc
in
shll
push
dec
xor
cwtl
fadd
in
adc
add
pop
loopne
loopne
jae
adc
jae
xchg
fs
adc
mov
mov
sub
cld
outsl
xchg
dec
ja
sub
adcb
mov
popf
add
fs
inc
sbb
sub
pop
cmp
stc
push
xlat
xchg
xchg
mov
fisttpll
push
jno
nop
mov
mov
nop
mov
insb
xchg
ja
dec
push
jmp
sub
scas
xchg
repnz
mov
movsb
cli
pusha
mov
sub
or
inc
rcl
xor
or
js
into
mov
adc
mov
call
jg
inc
lods
cmc
xor
and
inc
in
sub
aam
js
fwait
jmp
divl
aad
mov
push
cmpsb
mov
jae
xchg
push
test
xor
loope
mov
enter
adc
mov
getsec
test
movl
sahf
ja
mov
dec
push
add
mov
int
add
push
jp
orb
mov
mov
or
pop
stos
and
push
jecxz
fildll
jbe
movsb
lret
jns
mov
pop
popa
jmp
cli
aaa
cs
lea
aaa
pushf
daa
sub
jb
lahf
cmp
arpl
inc
push
xchg
call
jecxz
clc
mov
adc
sahf
jne
hlt
sub
aam
dec
out
fwait
xchg
cmp
jbe
nop
cli
lea
sub
fsubrp
and
ficompl
add
sub
in
in
rorl
xlat
lcall
or
mov
sub
mov
lods
pop
bound
mov
aad
pop
and
mov
xchg
scas
aad
push
repz
push
scas
cmp
jp
loop
jno
mov
push
fadd
das
sbb
hlt
dec
icebp
push
daa
jo
cltd
push
iret
mov
adc
popf
pushf
mov
fs
loope
faddl
pop
inc
pop
mov
je
add
enter
inc
lds
xor
mov
and
loope
stc
enter
mov
push
inc
jg
xchg
or
add
pop
hlt
push
xor
push
mov
rcrb
xor
adc
iret
add
fwait
loope
lods
lods
loop
jb
orb
daa
or
nop
fcmovnu
cmp
movb
jae
push
popf
mov
int3
jle
mov
adc
push
js
outsb
xchg
lea
icebp
cmp
xor
jbe
sub
sub
push
add
lret
insb
loopne
add
dec
ret
sub
push
inc
adc
xchg
mov
stc
xchg
int3
adc
sar
cs
adc
push
in
push
cltd
push
cmp
sub
pop
push
mov
xor
rcll
loopne
loopne
hlt
pop
ljmp
sub
out
pop
add
push
mov
sub
mov
xor
jnp
push
add
sbb
jmp
nop
add
inc
xchg
mov
cmp
loope
jmp
call
push
popa
pop
jo
push
shr
inc
cli
sbb
js
in
les
cmp
jle
out
mov
repnz
jg
imul
mov
push
jecxz
inc
pop
int3
addl
adc
sbb
inc
sub
stos
pop
loopne
and
jo
push
popa
fsubl
sbb
cld
stos
movsl
sbb
push
mov
inc
xlat
daa
cltd
jp
push
mov
ljmp
lret
add
insl
decb
add
test
pop
ffreep
imul
mov
fwait
hlt
mov
sub
ret
mov
xorl
pop
lcall
mov
mov
cld
cltd
mov
xchg
ds
movsb
mov
sarb
cmpsb
mov
out
pop
push
inc
inc
fisttpl
xchg
test
js
xor
and
mov
dec
mov
mov
mov
sbb
mov
movsl
adc
movsb
push
and
in
enter
xchg
inc
sbb
aaa
lods
xchg
cs
in
xchg
mov
jg
cmpsl
mov
mov
inc
dec
ret
sbb
sarl
dec
mov
sti
mov
lret
call
cmc
out
nop
pop
lahf
ljmp
add
dec
bound
push
lcall
in
pop
test
inc
sub
add
rcl
call
cltd
sbb
and
lret
lock
mov
inc
clc
imul
ja
dec
aas
pop
and
jmp
adc
fstpt
outsl
cld
movsl
loop
pop
xor
jae
fidivrl
addr16
mov
jmp
repnz
adc
sbb
negl
and
push
push
mov
mov
in
sub
bound
add
push
jb
sahf
inc
mov
sahf
cmp
mov
stc
pusha
outsl
mov
leave
sbb
or
sub
inc
or
sub
and
or
jo
or
test
lock
inc
loop
cmp
in
pusha
lcall
fildll
sub
and
out
outsb
dec
jnp
inc
flds
pop
jmp
aam
aad
xor
dec
shr
mov
lcall
xchg
out
sbb
aas
push
cmp
sbb
out
cmpl
xor
sbb
js
aad
fbld
ja
cmp
or
cmpsb
xor
cmp
dec
fxam
push
aad
mov
push
sti
push
cmpsl
stos
mov
xorb
enter
cmp
ja
add
adc
testb
mov
pushf
insb
in
jp
xor
hlt
push
cmp
add
cmc
or
xor
mov
bound
pop
imul
inc
in
lea
xor
and
clc
or
sahf
push
sub
xorl
push
aam
xchg
inc
sbb
mov
and
aas
inc
mov
mov
jb
cld
mov
mov
lock
sub
mov
loopne
mov
lods
jne
push
sarb
push
shll
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
