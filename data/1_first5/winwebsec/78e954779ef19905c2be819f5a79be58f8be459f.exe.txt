sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
push
push
call
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
movl
mov
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
mov
push
call
and
icebp
shl
lcall
mov
mov
inc
lea
push
and
fs
sbb
out
or
pop
sub
xor
push
out
out
fcoml
jns
pop
pop
faddp
cmpl
scas
cmp
in
into
popf
mov
push
aaa
iret
xor
cmp
cltd
ficompl
inc
and
pop
into
and
lods
je
pop
inc
jae
mov
push
push
add
pop
insb
or
js
movsl
int3
jg
loope
dec
int3
jb
es
mov
fcoml
dec
repnz
cltd
mov
pop
sub
push
push
or
fsubs
repz
jg
leave
inc
push
adc
mov
es
das
push
lods
and
jnp
pop
inc
sahf
xchg
adc
and
imull
inc
out
lods
inc
push
gs
shll
subl
sahf
orl
test
lret
subb
mov
loopne
insl
push
and
push
mov
and
fcompl
xor
mov
lock
and
sarb
push
pop
imul
push
adc
idivb
cs
or
scas
xchg
xor
adc
bound
mov
jl
movsl
sahf
mov
stc
add
dec
ja
loopne
pop
pop
dec
mov
add
adc
pop
lea
xor
mov
push
pop
jnp
jg
mov
imul
addr16
in
popf
mov
and
or
cmpsb
jp
outsb
sahf
mov
cmp
sbb
sub
jmp
xchg
sbb
sub
inc
call
mov
xorl
cmpsl
xchg
andl
idivb
xor
mov
xor
or
pop
pop
and
lret
add
add
in
xchg
imull
fwait
push
jb
add
sbb
jmp
ret
adc
outsb
mov
add
mov
adc
fwait
jl
movsl
jns
arpl
insl
adc
ror
or
movsl
ficoms
cmp
push
push
imul
xor
push
sahf
pop
icebp
or
nop
or
push
xchg
outsb
xchg
add
xchg
cmpb
or
and
mov
jo
in
out
jae
mov
jo
jg
test
jbe
mov
mov
inc
sub
shlb
mov
mov
scas
arpl
xchg
jmp
jle
cltd
push
mov
jne
xor
push
cld
mov
fisttpll
xchg
or
cld
shlb
icebp
jb
aas
xor
loopne
mov
outsl
push
jns
xor
mov
lret
mov
dec
shrl
pop
fs
into
pop
sub
shll
shlb
cmp
lret
test
cld
ret
xchg
fs
and
push
jbe
add
imul
mov
inc
sub
aas
ja
cwtl
mov
jmp
test
sarb
adc
xchg
push
inc
fnstenv
stos
add
insl
and
mov
dec
mov
adc
cmp
push
js
sti
into
outsb
add
fiadds
push
jp
or
push
dec
and
dec
and
push
xor
xchg
fdivrp
cli
repz
push
xchg
dec
sbb
fistpl
fisttpll
mov
adc
xlat
roll
andb
inc
aas
test
push
pop
lds
dec
int3
and
sub
dec
inc
jmp
notb
dec
xor
jbe
sti
ret
mov
fdivl
cmpl
xchg
push
fsubs
mov
mov
lret
add
add
in
lret
xor
pop
and
sbb
lock
clc
pop
adcl
sbb
cmp
es
adc
inc
push
aam
xchg
jge
or
rcrb
dec
out
mov
stos
jne
cwtl
inc
aam
jns
and
loope
cltd
xchg
inc
or
xor
xchg
nop
adc
adcb
add
dec
inc
aam
adc
push
inc
sub
xorb
jno
mov
add
leave
iret
adc
aaa
push
mov
gs
ds
cwtl
jge
push
cmp
movsl
mov
dec
xor
adc
aam
dec
adc
gs
sahf
ljmp
xchg
sbb
sarl
daa
pop
cmpsb
pop
loopne
mov
mov
cmpsl
outsb
rol
xor
roll
add
add
push
in
sub
out
mov
push
jb
sbb
lret
mov
pop
arpl
mov
fstl
mul
sub
addr16
pop
shrl
cmp
xor
into
sub
cmpb
adc
jb
push
ficoms
adcl
jbe
xor
sub
jmp
lret
sub
ljmp
jl
popa
or
or
inc
daa
sub
push
jecxz
xor
xor
pop
popf
leave
pusha
and
fsts
sbb
or
adc
fs
or
call
mov
test
enter
mov
sub
mov
xchg
les
xor
adc
out
dec
adcl
scas
adc
cmpsl
test
shll
mov
sti
cld
adc
sahf
jl
push
out
fstl
hlt
out
and
sti
mov
xchg
or
popf
lock
inc
testl
stos
rol
or
mov
push
outsl
das
jo
lods
adcl
data16
scas
xchg
in
aad
sbbl
mov
dec
je
outsl
aad
mov
call
hlt
nopl
cmc
fwait
xor
jmp
fwait
into
scas
aam
cmpsl
jae
rorl
dec
jl
inc
and
or
rcll
or
dec
hlt
rcll
incl
out
mov
leave
sbb
ds
adc
cmp
pushw
adc
enter
cmp
out
push
jmp
bswap
lret
dec
jae
xchg
add
mov
sbb
cltd
ret
add
add
xor
ja
nop
mov
or
adc
filds
shrb
jp
xor
fwait
lock
in
push
mov
stos
pop
sarl
cmp
in
mov
adc
addr16
or
inc
addr16
lahf
mov
loope
jb
ja
rcr
mov
xor
mov
and
jae
inc
mov
scas
mov
cs
adc
cli
out
sub
lock
addr16
mov
mov
sbb
test
mov
jbe
in
pop
mov
leave
in
int
arpl
push
xor
or
jb
mov
push
scas
es
lods
ja
dec
xchg
push
jmp
popf
adc
fxch
cmp
cmp
xchg
insl
pusha
arpl
lock
mov
nop
mov
xor
lods
lcall
push
gs
std
sub
pop
inc
mov
mov
cmpl
adc
movsb
dec
aad
mov
adc
shr
stos
clts
jg
sub
popf
dec
ficoms
mov
das
fistl
inc
jbe
ss
sub
xchg
mov
loopne
pop
jns
ret
add
jns
fsubr
add
jmp
repz
push
inc
jle
add
mov
mov
scas
inc
push
inc
fimull
test
lods
xor
mov
in
xor
loop
mov
or
pop
push
add
setae
fmull
fstps
aam
add
cmp
mov
push
lds
sub
scas
mov
lods
and
aam
and
mov
add
mov
jno
pop
aaa
sarl
repz
push
rdtsc
dec
or
cmpsl
movsl
adc
fwait
enter
pop
ds
out
jle
sub
push
push
test
test
dec
iret
addr16
shrb
mov
test
mov
push
imul
jbe
insb
inc
imul
mov
adc
xor
xchg
xchg
jl
xchg
inc
add
stos
loop
mov
xchg
fmul
stc
xchg
adc
sti
xchg
dec
sbb
les
addr16
cltd
orb
sbb
and
adc
data16
out
mov
and
stos
out
or
xchg
xor
dec
lods
push
faddl
xor
sub
cmpsl
mov
and
outsb
inc
orl
loope
jbe
xor
mov
adc
mov
daa
push
jnp
adc
jb
or
xchg
xchg
inc
stc
mov
xchg
test
js
and
pushl
jae
xor
push
scas
dec
mov
insb
xchg
dec
ret
enter
enter
mov
shl
arpl
pop
inc
test
dec
iret
ljmp
or
pop
lock
or
mov
jae
or
pop
xorl
xchg
mov
mov
mov
pop
cmp
outsl
popa
sub
or
and
mov
in
stos
cwtl
mov
shufps
out
sti
pop
cmp
cmp
lret
leave
repnz
push
xchg
adc
rcrb
imul
dec
sub
push
into
xlat
pop
adc
dec
push
adcb
sbb
stc
xchg
sti
das
xor
mov
jbe
ljmp
cli
mov
mov
cmp
fidivs
shll
iret
jnp
mov
or
jae
out
sbbl
sub
cmp
shll
rcr
mov
mov
mov
jne
mov
lahf
jns
or
rcrl
mov
lods
scas
jnp
testl
mov
mov
xchg
aad
adc
adc
mov
mov
fildll
push
incl
out
lea
add
add
outsl
adc
in
cmp
and
jae
rcl
jne
ljmp
dec
fsts
cmp
lods
xchg
or
cli
pop
pusha
push
movsb
adc
cli
clc
lcall
aad
mov
fisttps
lahf
sbb
xchg
mov
mov
in
aam
fdivs
xor
bound
in
imul
lahf
dec
dec
inc
orl
push
out
outsb
xchg
out
jmp
xor
inc
and
cwtl
insl
test
cltd
mov
les
lahf
rcrb
cwtl
sub
fists
icebp
and
and
fs
inc
dec
roll
rcr
inc
out
aad
cmp
test
pop
lahf
inc
jb
ds
in
push
int3
test
call
xor
xchg
jle
sbb
adc
pop
cmp
or
bound
mov
push
dec
mov
add
dec
add
ret
xchg
jle
push
fst
es
idivb
ljmp
out
addr16
or
lods
fstpl
nop
cmc
inc
lods
shll
jns
int
push
xchg
mov
push
push
sub
dec
xor
jl
out
mov
cli
sbb
pusha
mov
add
xorb
fidivrs
sahf
sbb
mull
xor
cltd
decl
push
dec
ja
push
adc
clc
pop
inc
icebp
mov
pop
in
push
jne
adc
mov
cmpb
dec
xchg
in
adc
xchg
mov
or
jae
aas
sbb
or
jnp
and
ret
pop
mov
movsb
out
in
lods
mov
jecxz
push
mov
pop
mov
lock
ror
insb
and
jnp
std
mov
xor
add
mov
out
daa
xor
sbb
ret
xchg
shrl
aas
pop
clc
orl
enter
jle
lcall
stos
jle
fwait
jg
and
outsb
adc
push
je
rclb
pop
mov
movsl
int
pusha
in
jle
sbb
xor
sti
pop
and
sbb
mov
push
jmp
mov
mov
hlt
pop
xor
push
cmp
jnp
mov
sub
pop
push
imul
mov
push
xchg
push
push
push
push
or
imul
les
dec
mov
jp
cmpsb
out
pop
jmp
test
sbb
pusha
mov
mov
xchg
xor
pusha
jnp
xchg
imul
fsubl
jle
fstl
jae
xchg
mov
out
fildl
inc
dec
push
pop
pop
scas
sbb
aaa
repz
popf
iret
in
mov
adc
xor
mov
adc
aad
test
ljmp
sbb
insb
add
ljmp
scas
test
test
or
outsb
dec
fisubrs
dec
icebp
call
adc
xchg
pop
in
ss
addr16
nop
loopne
addr16
fwait
call
js
inc
mov
mov
loopne
into
cmc
cmpsl
adc
sti
lods
cmp
lea
xor
fcoms
pop
and
icebp
mov
mov
es
mov
dec
xchg
mov
xor
dec
bound
shrl
sbbb
mov
adc
inc
mov
insb
push
push
mov
inc
scas
hlt
or
sbb
dec
xchg
popa
inc
or
push
out
pop
pop
push
ja
adc
test
or
jmp
pusha
sub
add
mov
push
sub
add
test
add
cmp
aad
push
loop
testl
xchg
cld
subl
sahf
push
inc
out
or
rcrl
leave
dec
cmc
mov
test
cwtl
mov
aad
xchg
pusha
mov
xchg
jbe
out
xor
jecxz
in
push
and
lret
or
out
pop
loop
movsl
mov
mov
out
push
lret
int3
orb
jecxz
push
aas
sub
push
std
inc
sbb
adcb
cltd
movsb
or
add
mov
inc
ret
scas
outsl
popa
inc
stc
js
in
and
mov
popa
mov
xorb
enter
je
mov
mov
shrb
pop
imul
cmp
xor
adc
das
pop
daa
sbb
lods
bound
lods
xchg
stc
mov
and
cmp
jecxz
scas
or
xchg
std
loop
sbb
mov
jae
lret
sti
bound
dec
mov
jb
inc
imulb
jmp
in
cmc
push
and
loope
add
mov
xor
les
xchg
imul
sti
adc
call
sbbl
aad
es
inc
mov
lods
fimull
outsb
test
lcall
in
or
xchg
cmp
push
mov
pop
pushf
mov
or
push
nop
xchg
mov
jecxz
lods
cmp
mov
int3
adc
adc
jb
mov
movsb
add
cmp
xchg
pop
in
stos
cmpsl
sti
rolb
pop
mov
insl
movl
lods
sub
mov
cmp
in
inc
sub
xor
fiadds
shr
xor
dec
pop
sbb
xchg
test
dec
subl
inc
jns
lahf
lcall
or
xor
imul
leave
pushaw
sub
add
icebp
fsts
aaa
testb
popw
xorl
outsb
push
and
or
popa
mov
or
and
je
pop
aad
aad
jo
je
jne
iret
nop
std
das
mov
imul
sarb
or
bswap
xchg
adc
xchg
ds
mov
loope
inc
loop
mov
cmp
push
jl
jp
fsubr
shr
ret
cmp
jbe
jne
dec
xchg
pop
in
sbb
xchg
rorl
pslld
fsts
mov
outsl
cld
pop
pusha
or
aaa
pop
into
adc
mov
scas
adc
cs
adc
sbb
mov
loop
push
sub
pushf
jo
xor
pop
pop
jecxz
dec
cmp
rcrl
les
mov
jle
mov
in
mov
aaa
adc
pop
movsb
int3
es
cmp
cmp
arpl
push
dec
daa
xchg
add
inc
and
dec
or
icebp
stc
push
and
ds
push
cmpsl
xorl
pop
ss
mov
and
pushf
aad
aas
mov
fstp
pop
scas
adc
hlt
jno
cmp
nop
div
jge
insb
leave
jg
cmp
pop
aam
jecxz
xor
lods
xor
ss
fcmovnu
cmpsl
mov
xchg
inc
shl
inc
jne
leave
mov
ss
loopne
pushf
xor
jb
push
xchg
pop
movsb
popa
out
test
orl
and
sub
xchg
dec
ja
xchg
pop
in
inc
xchg
jbe
movsb
inc
imul
in
xchg
call
cli
xlat
cmpb
enter
iret
mov
pop
xchg
test
add
inc
cmp
in
lods
sub
mov
fld
jns
mull
lods
sbb
xor
dec
jno
cmp
jo
inc
pusha
pop
lret
lret
mov
xor
pop
mov
pop
test
dec
out
mov
or
xor
mov
fcomi
divb
popf
cmp
mov
shl
lahf
inc
ret
dec
shll
mov
mov
ljmp
mov
out
test
adc
lret
push
cmp
jno
or
cwtl
fs
cld
fdivrs
sub
mov
and
mov
into
xor
ret
int3
or
push
movsl
fnstenv
inc
xchg
jecxz
out
jnp
or
lahf
push
insb
pop
aam
mov
dec
fwait
test
sub
push
pop
sub
add
divb
dec
push
fstp
fsubs
fcmovnbe
pusha
scas
lret
in
add
sbb
test
or
fistps
push
iret
ljmp
sti
notl
or
sub
lret
lret
push
lds
mov
dec
scas
ljmp
lahf
cmc
test
mov
sti
addr16
mov
lock
xor
mov
inc
lods
jl
xor
in
add
popf
shrb
popf
es
clc
lret
mov
mov
popa
mov
mov
sbb
fwait
leave
mov
push
out
add
das
sub
cmp
add
cs
cmp
scas
push
dec
add
mov
pop
mov
sub
sub
into
lcall
push
cmp
add
lods
mov
mov
pushf
push
push
sbb
sub
cmpsb
fwait
xchg
das
or
arpl
xchg
inc
dec
imul
aad
ret
jl
test
hlt
cmpsl
clc
pop
out
icebp
and
dec
sbb
pop
or
ljmp
mov
dec
mov
loopne
dec
xor
negb
movsl
popf
addb
push
push
xor
mov
lahf
xor
std
ficoml
addr16
mov
pop
arpl
sbb
popa
cmp
add
or
aas
add
fisttps
add
arpl
fdivrs
push
mov
pop
jae
ficompl
inc
rclb
push
push
jo
jno
dec
xor
ret
push
mov
pushf
push
gs
dec
dec
bound
in
cmp
xchg
sbb
xadd
sbb
fists
rorl
pop
and
mov
aaa
jb
lahf
push
das
rorb
pop
or
pop
xchg
fisubrl
flds
insl
jle
adc
dec
outsb
push
cli
cwtl
cli
xchg
pop
cmp
mov
adc
mov
pushf
sub
adc
add
dec
je
cltd
int3
pop
rolb
cmc
xchg
clc
sub
mov
inc
mov
xor
fiaddl
leave
xorb
mov
jmp
test
test
and
cwtl
iret
pop
adc
ljmp
movsl
or
mov
jnp
jae
out
sbb
adc
sahf
pop
pop
test
push
imul
mov
jecxz
out
aaa
adc
cmpb
jb
fwait
add
ja
ss
dec
aad
xchg
loop
int3
jge
cmp
inc
fstps
ficoms
cmp
fmull
loopne
and
js
test
test
or
or
adc
jns
imul
idivl
cmp
cltd
jecxz
sub
adc
ret
pop
imul
rolb
rolb
mov
ljmp
push
fs
ja
mov
aad
mov
imul
movsl
dec
add
pop
cmp
cmp
out
push
or
xchg
gs
mov
xchg
out
ja
scas
cli
cmpsl
and
mov
sbb
nop
imul
mov
lret
stos
inc
fcmovnbe
dec
mov
sbb
mov
or
and
cltd
push
int
fistpl
xchg
repz
xor
jmp
push
push
dec
mov
mov
inc
arpl
iret
adc
aad
sub
adc
ss
test
fst
js
lock
rcrb
adcb
addr16
push
insb
mov
fidivs
pop
rclb
mov
mov
sahf
paddusb
pushf
test
xchg
jae
jb
sub
pop
push
inc
mov
xchg
mov
aas
out
sbb
push
inc
ret
outsl
mov
rclb
inc
xchg
push
fistpll
enter
cmpsl
fdivrp
into
aad
fstps
stos
sbb
mov
ja
hlt
xor
pop
mov
call
jns
and
mov
repnz
xor
frstor
mov
mov
cmp
pusha
jl
mov
inc
fwait
out
lahf
pop
jb
cmc
mov
les
xchg
mov
and
pop
jecxz
fwait
sbb
adc
pop
push
add
mov
bswap
mov
scas
jl
test
push
or
sbb
in
mov
leave
push
pop
dec
andl
popa
insb
and
test
test
fsubl
movsb
push
pop
shlb
mov
call
add
ret
mulb
orb
mov
rolb
clts
mov
or
lret
mov
mov
hlt
jl
add
xchg
inc
gs
stos
sbb
and
ss
jle
inc
sub
and
xchg
or
negb
mov
outsb
cltd
pushf
xchg
mov
dec
xor
and
sti
and
inc
and
adc
dec
push
out
mov
inc
xchg
pop
mov
adc
add
in
mov
adcl
iret
dec
xchg
adc
add
cmpsb
pop
pop
xlat
fcomip
sbb
pop
dec
push
lret
dec
push
stc
sbb
mov
and
push
sbb
clc
pop
pusha
jl
lea
dec
adc
inc
cmp
push
xor
pop
fucom
mov
rorb
mov
jbe
or
repnz
push
mov
loope
jno
ret
push
fisubrs
sti
out
movsl
rcrb
xchg
xchg
push
jne
mov
pushf
sub
adc
push
xor
sub
cs
loop
stos
mov
cld
lcall
aas
aad
inc
clc
sti
test
pop
repz
push
cld
out
mov
xchg
mov
insb
jl
fistpll
mov
out
adc
movsl
dec
mov
push
lods
jle
dec
add
inc
sbb
sub
push
add
push
add
mov
sub
int
xchg
fldt
aad
dec
in
je
push
mov
or
icebp
mov
jbe
das
fwait
add
ret
dec
pop
cmpsb
ret
adc
mov
ljmp
cmc
push
lock
dec
arpl
sub
cmpps
xor
or
jns
and
jg
mov
lret
pop
in
pop
int
xchg
repnz
push
and
pop
filds
push
cmp
mulb
ret
lcall
hlt
mov
shl
jns
or
jmp
lds
pop
cltd
or
ret
push
in
test
neg
call
and
inc
aad
popa
adc
pusha
jo
arpl
xor
cs
xchg
shll
add
ja
mov
mov
pop
pop
sub
pop
jo
test
sub
fildll
aaa
ret
ljmp
mov
dec
xor
inc
xor
mov
or
mov
sub
addr16
push
push
rcrl
test
in
sar
jmp
dec
fwait
adc
rcll
jle
iret
xchg
sbb
in
mov
or
enter
cli
into
and
aaa
inc
addr16
xchg
fs
xchg
cmp
lret
nop
ret
scas
aas
cs
fstp
jl
stos
popa
out
loopne
xor
xchg
movsl
test
mov
cmp
xchg
pop
bound
mov
ja
mov
push
dec
movsb
cs
and
js
repz
cltd
cli
lods
leave
sbb
sahf
xchg
repnz
adc
filds
aam
repnz
jns
daa
xchg
dec
push
sbb
push
loope
mov
arpl
int3
xor
fs
fucom
dec
mov
cli
bound
sbb
mov
adc
test
add
insl
push
mov
sbb
lods
xor
loop
lret
mov
add
fnstcw
loopne
cmpsl
cmp
mov
inc
int3
popa
xchg
jg
adc
test
pop
loop
and
xchg
mov
fs
mov
xchg
mov
mov
ffreep
sbb
fdivrl
pop
cs
bound
sti
or
push
xor
mov
mov
jnp
insb
mov
stos
pop
jmp
or
sbb
push
jb
insb
and
sti
imul
fldenv
in
pop
aad
mov
xchg
mov
in
cmpsl
int
cwtl
dec
lds
push
repnz
test
repz
pushf
cmp
stos
add
mov
sbb
add
xlat
aaa
and
mov
shlb
arpl
out
testl
cltd
out
gs
leave
adc
cmp
arpl
inc
in
out
mov
repnz
lock
add
jne
cmp
ds
sub
js
pop
add
scas
dec
jnp
mov
cmpsb
dec
and
popa
mov
aam
push
int3
pushf
and
jb
ficoml
pop
femms
sahf
jl
or
ss
mov
push
js
sbb
iret
rclb
aas
js
mov
sahf
push
add
mov
mov
mov
sub
adc
fimuls
rcr
xchg
dec
mov
ret
push
cmpsb
out
repz
andl
stos
or
pop
pop
adc
scas
and
add
pop
add
add
cmp
int3
xchg
jge
jne
lcall
mov
outsb
mov
sub
adc
dec
stos
lret
je
jp
cmp
inc
push
mov
rolb
shl
add
cltd
or
pop
iret
cmpsl
lods
in
in
mov
syscall
movsl
sbb
lods
lods
mov
decl
or
jge
jno
push
or
icebp
nop
push
sbb
xchg
stos
and
or
and
sti
pop
repz
pop
push
shlb
lods
ret
jecxz
push
imul
jle
or
mov
xor
in
das
out
inc
outsl
mov
rcll
aas
and
fwait
sahf
sarb
dec
pop
out
xchg
jb
mov
mov
mov
ss
push
mov
loope
scas
cmpsl
adc
xchg
fdivs
cli
mov
scas
lahf
leave
stc
push
or
arpl
hlt
clc
cmp
mov
cmp
les
mov
out
dec
dec
and
call
and
aam
mov
jp
rolb
jecxz
into
xorl
add
add
sub
inc
xor
lds
ljmp
sbb
push
add
fs
mov
jp
lods
in
pop
das
into
lahf
or
mov
dec
mov
inc
popf
jo
mov
push
mov
sbb
cmpsl
adc
mov
cs
dec
jmp
jle
cmpsb
imul
test
int
jnp
xchg
cmpsb
arpl
inc
or
mov
xchg
mov
mov
icebp
adc
hlt
lcall
xchg
cld
insb
out
ret
xor
mov
inc
cwtl
cmpsl
mov
push
negl
push
jmp
in
xor
cmp
imul
mov
or
sti
mov
fs
jp
cmc
cmp
mov
lahf
push
cs
bound
mov
mov
jle
cmp
dec
inc
xlat
daa
push
xchg
jae
icebp
mov
jae
nop
jno
sbb
ljmp
pop
dec
push
outsb
sbbl
shrb
test
lcall
les
and
jb
dec
cmp
mov
push
lods
mov
xor
mov
push
xchg
icebp
aam
push
scas
cmp
push
movl
fidivs
out
dec
adc
xor
push
pop
inc
pop
sahf
cli
push
lret
stos
mov
lret
add
inc
scas
push
enter
inc
btc
push
int
sbb
loopne
push
fiadds
xor
std
mov
out
test
negb
sahf
mov
ljmp
std
mov
stos
mov
outsl
int3
mov
ficoml
pop
scas
test
ds
arpl
fimuls
sahf
adc
and
sti
fildll
xor
int
inc
pop
lods
push
test
mov
sbb
aas
and
adc
mov
es
ljmp
lcall
mov
push
rcrl
inc
mov
loop
cmp
sti
scas
push
std
ljmp
das
xchg
sub
sub
cmp
popa
shrl
mov
roll
inc
aad
or
cmp
cmpsb
mov
test
fs
ja
test
arpl
mov
and
das
mov
pop
and
cmp
scas
aad
push
jle
popa
icebp
sub
popf
mov
mov
add
xor
add
inc
xor
push
mov
fldl
mov
push
testl
dec
sub
xor
dec
dec
sbb
push
cmp
xor
test
push
in
fs
lods
mov
pop
pop
ljmp
or
es
push
mov
and
xchg
wbinvd
int3
mov
pop
xor
sar
loope
fnsave
or
xor
mov
adc
adc
scas
dec
rcrl
mov
pop
sbb
bound
or
inc
sub
jae
mov
mov
sti
out
rorl
cmp
sbb
mov
jg
pop
mov
mov
mov
pop
fistpll
dec
add
mov
lcall
pushf
mov
mov
stc
iret
jae
jmp
adc
ss
mov
in
out
daa
fsubrs
mov
jno
inc
pop
jnp
loop
aad
push
mov
inc
push
imul
sarl
test
pop
and
rolb
push
push
or
xchg
push
xor
mov
movsl
inc
jae
das
mov
mov
bound
cmp
iret
cmp
mov
mov
ficoml
and
cmp
xor
push
sbb
push
cmp
aam
adc
adc
mov
jecxz
rcrb
pop
arpl
jp
dec
into
sbb
outsl
dec
push
in
jno
int3
xchg
shl
cmpsb
hlt
mov
mov
push
fdivl
gs
aas
cmp
push
lret
xor
lods
or
out
fcompl
push
sub
jbe
jge
push
push
mov
add
xchg
cwtl
jnp
sbb
test
adc
cli
pop
cs
mov
mov
mov
or
mov
inc
movsl
aas
xor
adc
test
dec
push
sbb
into
in
inc
dec
push
jecxz
ja
push
std
cmp
js
loopne
ja
inc
xchg
pop
xchg
mov
sub
push
jne
jae
scas
in
adc
lret
lock
cmp
sub
pop
jmp
loopne
insl
dec
fldt
shl
in
jne
shll
icebp
insl
cmpsb
mov
jg
mov
rcl
adc
pop
jcxz
mulb
ret
xor
pop
hlt
push
inc
in
add
xlat
sub
test
pop
pop
dec
jle
test
sbb
xchg
cmp
les
loop
outsl
lcall
mov
es
add
bswap
fcmovb
xchg
mov
mov
inc
xor
shrb
jb
pop
hlt
imul
mov
test
outsb
add
lcall
imul
or
or
mov
dec
or
rcrb
mov
inc
xchg
adc
pop
mov
nop
fsubrs
inc
mov
mov
add
inc
mov
lcall
xor
out
popf
xor
pop
repnz
mov
dec
push
xor
stc
ss
out
push
in
xorb
fptan
fs
or
in
loop
mov
pop
hlt
ret
in
aas
sub
ljmp
push
jecxz
out
mov
xor
cmpb
mull
orl
test
pusha
pop
movb
repz
mov
bound
repnz
ficompl
xchg
cld
and
xchg
test
ret
or
imul
dec
jno
mov
dec
repz
loop
in
xorl
fnstenv
inc
fwait
xor
inc
add
jbe
cmpsl
lea
dec
and
cwtl
ds
mov
jb
sbb
in
ja
sbb
daa
filds
ljmp
test
mov
push
lods
pop
cmp
push
jge
das
jle
imul
jbe,pt
mov
pushf
lret
jo
xchg
mov
push
push
cli
out
mov
push
pop
mov
mov
roll
inc
adc
adc
sub
sbb
pop
lea
xor
aaa
adc
loopne
push
and
repnz
outsb
fdivl
out
test
sbb
jb
ss
mov
sarb
xchg
repz
ret
push
cmp
ss
add
jle
in
adc
adc
and
das
and
jne
sbb
dec
dec
lods
idivl
cwtl
imul
ficoms
push
cmp
add
outsl
sbb
iret
imul
daa
inc
and
mov
mov
out
and
mov
incl
inc
sbb
scas
mov
out
cmp
lods
dec
popa
jnp
aaa
or
es
lret
or
popf
push
dec
pop
mov
in
jmp
xchg
xchg
mov
and
inc
scas
aam
rol
mov
jae
mov
aaa
sti
sub
mov
xlat
or
inc
pop
fbstp
insl
mov
outsl
sahf
jp
jg
xchg
jg
cmp
jo
mov
ljmp
inc
pop
jmp
dec
xchg
dec
jns
fiadds
sti
iret
dec
les
xor
ja
mov
lds
dec
jnp
jae
xchg
dec
mov
repz
mov
pop
lret
xlat
and
mov
pop
sub
jb
call
cli
in
xor
sbb
fldt
cmp
mov
pop
and
add
sbb
mov
mov
cltd
fmuls
jl
insl
fcmovbe
shr
js
xor
pop
bnd
mov
call
mov
imul
jp
enter
pop
and
int3
scas
pushf
inc
or
or
sub
mov
mov
in
mov
scas
test
test
push
cmp
lea
cmpb
test
les
pushf
ret
jmp
outsb
mov
and
cmp
into
cs
iret
orb
mov
push
jnp
and
push
cmpsl
ss
leave
push
pop
add
inc
ret
decb
js
outsb
pop
aas
aam
jb
jecxz
jb
rolb
jae
lahf
andl
sub
pop
mov
decb
jb
push
aas
test
pop
sbb
ds
int
addr16
lods
lds
mov
mov
pop
cs
scas
pop
roll
inc
push
xchg
push
outsb
dec
negb
ja
ljmp
test
push
sar
adc
sar
jae
sti
popa
and
cmpb
jae
xor
gs
inc
inc
test
out
jmp
dec
pop
jg
popl
sahf
inc
inc
mov
xor
push
dec
mov
lock
cmp
repz
cmp
pop
inc
pop
and
mov
inc
xor
inc
or
pop
mov
mov
jl
pop
lret
cmpsl
push
imul
dec
dec
cli
lods
bound
leave
ret
sbb
mov
insl
repz
inc
jne
sahf
jl
insb
sub
and
iret
popa
in
adc
push
sbb
adc
ret
fidivrl
cs
popf
sbb
lahf
push
gs
jne
mov
stc
pop
push
or
cmc
pop
in
push
xor
aaa
fsubrl
push
call
jmp
testb
xor
fstpl
ret
inc
pop
pusha
jl
fsubs
repnz
mov
out
idivb
mov
mov
mov
mov
inc
idivl
cltd
das
push
adc
pop
sub
and
ror
leave
mov
sti
popa
jmp
mov
and
cwtl
daa
adc
add
cmp
shll
testb
lcall
adcb
popa
pop
outsl
fs
pop
stc
adc
lret
push
aad
inc
fcoml
mov
scas
sub
scas
xor
inc
sub
cs
push
xchg
ljmp
pop
jle
les
and
movsl
xor
push
push
imul
mov
sbb
js
stc
fwait
stos
test
inc
pop
add
rclb
mov
xor
cmc
dec
aaa
enter
mov
test
cld
lcall
fs
ss
mov
jp
adc
rcrl
aas
pusha
inc
adc
icebp
cmp
jns
dec
mov
call
mov
rcrl
mov
mov
xchg
sbb
call
push
aam
mov
shl
sub
test
out
cmp
jg
and
stc
xor
and
mov
sbb
xchg
es
in
sbb
push
cmp
jmp
outsl
arpl
sub
loope
loop
pop
jne
imull
iret
mov
jle
int
jae
in
xchg
orb
inc
out
pop
mov
leave
arpl
stos
or
sub
sub
push
popa
icebp
lcall
test
push
test
std
cmp
sub
lret
and
enter
fildl
cmp
xchg
mov
insl
dec
mov
fwait
dec
enter
stos
jecxz
popf
pushf
fcoml
cltd
dec
pop
stos
imul
mov
outsl
orb
ja
xor
cmp
push
dec
or
daa
inc
cmpsl
jge
fimuls
andb
cmp
leave
dec
pop
inc
or
inc
pop
sub
and
sub
in
mov
adc
cmp
mov
test
sbb
fsincos
cltd
inc
lret
sub
or
dec
stc
stos
jmp
scas
rol
add
pushf
pushf
movnti
push
mov
jecxz
jnp
inc
mov
ss
fs
lahf
and
and
push
cmp
pop
daa
ds
shll
xchg
adc
dec
int
sbb
in
jns
mov
jg
sahf
add
std
sarl
cmp
push
and
imul
adc
mov
dec
movsl
mov
cmpsl
pusha
out
insl
xor
xchg
push
sbb
imul
jne
mov
rcl
lahf
das
inc
xchg
addr16
jge
cmp
shlb
icebp
ret
daa
sbb
clc
repnz
enter
gs
test
xchg
or
rorb
and
or
jecxz
nop
cmpsl
or
loopne
xchg
mov
in
mov
inc
mov
call
cmp
addb
cmpsl
push
in
mov
cld
pop
sub
outsl
pop
inc
int3
sub
orb
push
insl
add
cmp
add
jmp
add
repz
test
pop
data16
cmpsl
ss
daa
bound
add
sbb
add
xor
pop
mov
jp
stos
roll
or
pop
push
test
inc
and
popf
fmuls
sbb
sub
add
int
or
push
cmp
movsl
xchg
pop
push
add
out
lock
xor
jno
mov
scas
mov
pop
icebp
roll
fldt
aas
ja
xchg
xchg
and
lds
jmp
pop
mov
shll
jg
pop
jmp
ret
int
mov
inc
dec
pop
cmp
add
mov
add
push
imul
jge
push
sbb
enter
adc
dec
mov
mov
icebp
fistps
insb
dec
insl
iret
push
push
fs
dec
mov
out
dec
mov
xchg
pop
pop
and
lret
gs
or
mov
push
jae
outsl
fwait
xchg
dec
es
push
inc
adc
adc
inc
loope
lret
inc
add
rcrb
mov
jae
stos
ja
or
mov
and
movb
test
dec
pop
add
cmp
adc
stos
outsb
push
cwtl
imul
in
jge
inc
rclb
es
fisubrs
xlat
das
xchg
xor
shll
xchg
sbb
jge
sahf
lahf
insb
movb
stc
cmpsl
mov
sti
int
mov
fistpl
in
hlt
rcrl
push
rcrl
inc
push
fidivl
cmp
pop
push
cmp
jle
scas
mov
sbb
mov
ja
and
out
lods
movsl
mov
pop
call
test
inc
ds
outsl
rcrb
imul
xchg
mov
mov
nop
cmc
scas
push
xor
add
subb
mov
notrack
orl
in
jle
stc
sub
loopne
inc
add
push
ret
xor
xchg
icebp
test
jl
mov
push
sahf
mov
and
xor
mov
jb
arpl
popa
in
lret
and
loopne
inc
into
nop
or
and
cmp
jle
or
lret
or
mov
das
mov
jl
stos
cmpsl
add
insl
dec
jp
sbb
mov
mov
mov
cmpsl
jecxz
repz
imull
mov
mov
inc
ja
push
jo
sub
pop
imul
sbb
cmp
lcall
mov
std
aas
loop,pn
mov
jle
or
xchg
popa
stc
ja
aas
bound
call
dec
mov
pop
pop
aad
ds
add
add
mov
fisubrl
rcll
hlt
fimull
jge
and
iret
pop
cltd
enter
insb
aas
jge
sbb
and
call
xchg
test
and
dec
outsl
jb
sbb
mov
inc
insl
add
lods
scas
xor
sub
xchg
inc
and
lock
testb
xchg
loope,pt
pop
mov
gs
sub
fldt
sti
dec
jp
pop
fists
push
subb
mov
adc
fstpl
jecxz
mov
and
push
dec
xor
movsb
orl
inc
pop
bound
mov
push
push
push
test
repnz
hlt
rclb
mov
pop
sub
mov
in
xlat
imul
test
imul
pushf
mov
mov
adc
aaa
ljmp
rcll
sub
int3
cmp
xchg
sbb
pop
stos
jmp
pop
mov
cmpsl
pop
and
push
shr
mov
or
sub
cmp
js
jb
in
pop
or
dec
outsb
in
sub
cmp
sub
jnp
and
sbb
das
cmp
mov
mov
cmp
inc
jg
fildll
xchg
and
jbe
and
in
lds
dec
int
inc
add
adc
mov
clc
sti
dec
lret
cltd
or
mov
into
lahf
out
ljmp
pop
adc
adc
xchg
mov
add
jl
cltd
mov
lcall
pop
adc
or
dec
push
cmpsl
inc
popa
xchg
inc
lods
stos
jp
sbb
adc
dec
aam
and
int
xor
inc
ss
mov
and
sub
mov
cmpsl
lea
out
add
inc
addl
mov
pop
jge
cmp
adc
cld
mov
aas
inc
addr16
or
cmc
lcall
rolb
push
in
jae
cmp
xchg
inc
lahf
call
scas
inc
in
fdivrs
xor
lcall
add
jecxz
ret
xor
and
mov
inc
inc
sub
aas
dec
stc
cwtl
decl
dec
gs
xchg
inc
sbb
cwtl
int
lahf
push
hlt
inc
dec
outsl
ret
pusha
js
push
movsb
fstp
lds
cmp
fildll
push
stos
mov
das
cltd
cs
inc
test
shrb
fcompl
dec
mov
fnstenv
inc
movsb
pop
call
cmp
pop
push
bndstx
xchg
cmp
ja
sub
cs
dec
orb
cmp
fucomi
push
mov
mov
gs
or
in
das
imul
jl
out
push
pop
dec
aad
or
adcl
pop
push
jle
add
nop
mov
fldt
jo
andb
cmpsb
stos
inc
ljmp
jae
gs
jl
push
leave
fldl
and
sbb
pusha
adc
dec
pushf
mov
pusha
jge
jns
sbb
mov
cmp
daa
cmp
lcall
aam
or
scas
jae
or
xor
jmp
imul
xor
cmc
test
xchg
mov
test
pop
push
pop
push
pop
push
adc
add
fimull
pop
in
adc
mov
jge
les
mov
in
jne
xlat
sub
dec
std
cmp
inc
bound
xchg
xor
xchg
ss
and
rcl
loope
jo
cmp
add
js
stos
mov
shl
push
fs
mov
int3
xchg
test
push
xor
lret
add
sub
cmp
dec
out
bnd
scas
call
cmp
jb
int3
cmp
jl
repz
pop
push
aaa
or
addb
and
imull
in
test
aas
sahf
out
subl
orb
sbb
mov
push
rorb
test
push
jbe
test
sub
cmp
lods
sbb
xlat
shrb
push
inc
mov
repz
push
loope
jg
iret
cmp
mov
or
cwtl
mov
aas
jmp
cmp
pusha
scas
fwait
dec
cmc
testl
lock
rcrl
push
js
test
je
adc
loopne
xlat
pop
sbb
pop
adc
xchg
shrb
test
and
rclb
dec
sub
jne
pop
sbb
xor
adc
sub
in
enter
adc
insl
out
dec
inc
adc
iret
mov
fmull
sahf
or
fidivrs
imull
pop
in
push
mov
out
jae
xor
pop
outsb
fisttpl
cmc
sbb
jecxz
mov
in
push
pop
sbb
cmp
loop
aam
push
repz
mov
xor
sbb
pop
mov
enter
pop
bound
pop
loop
outsb
jg
mov
sbb
sbb
xor
shlb
cwtl
loop
sbb
sahf
jmp
pop
and
inc
xor
or
mov
call
in
inc
xor
lea
repnz
lods
cmp
push
xchg
repnz
arpl
loopne
insb
mov
ss
push
lods
les
cmpsb
pop
and
aam
inc
inc
imul
loope
hlt
scas
in
xor
jge
aaa
mov
fucomp
into
inc
test
mov
xchg
jbe
in
enter
imul
jo
mov
iret
xorb
nop
lds
xchg
add
jle
pop
push
jo
sbb
cmp
pusha
sub
fdivs
push
mov
mov
and
jo
out
icebp
push
or
in
movsb
cli
xchg
push
aad
mov
pop
mov
xlat
xor
jo
out
es
pop
lock
pop
mov
jne
mov
add
pushf
pop
inc
movsl
or
xchg
test
or
pop
add
js
ret
xor
popa
pop
lahf
cmp
call
int
sub
cmpsl
xchg
test
aas
dec
mov
add
dec
sub
clc
int
inc
sti
stos
mov
xchg
mov
mov
jge
mov
jbe
addr16
add
lea
xchg
mov
mov
pop
and
xchg
jp
lahf
sbb
mov
ljmp
pushf
xchg
je
decl
outsl
xchg
lock
mov
adc
push
clc
dec
je
aaa
sub
out
pushf
scas
mov
test
pop
and
inc
ljmp
les
mov
mov
push
gs
or
sbb
dec
jl
add
jae
cs
mov
sub
inc
sub
mov
push
out
mov
add
jmp
push
addr16
repnz
mulb
leave
jb
orl
int3
mov
pop
pusha
fstpl
mov
insl
cmp
and
cmp
adc
bound
cmp
jecxz
cmp
pop
jb
inc
outsb
xor
inc
cli
loop
nop
cmp
fidivrs
or
mov
jmp
jl
aas
jns
jnp
movsl
lds
sub
mov
sub
in
sahf
sti
pushf
xlat
and
and
push
insl
inc
sub
mov
and
clc
jmp
jge
insb
mov
jl
je
jg
rorl
mov
push
js
pop
int
mov
and
cmp
jmp
or
cmpsb
mov
in
jno
mov
mov
push
fcoml
xor
jge
imul
shrl
sbb
into
cltd
xlat
into
ret
xor
test
pop
stc
jg
dec
pushf
iret
lea
ja
enter
cmp
hlt
pop
ret
pop
imul
subl
xchg
stos
les
push
scas
daa
call
aas
hlt
push
mov
dec
cmp
mov
add
push
bound
cmpl
xchg
repnz
jnp
push
sbb
adc
stos
ficompl
adc
in
push
xor
in
jne
xlat
mov
jg
imul
mov
xor
stos
in
nop
mov
fldl
jns
repnz
cmp
mov
cli
xchg
aam
imul
negb
unpcklps
dec
movsl
mov
repz
add
push
jne
ja
adc
dec
fwait
dec
sub
mov
scas
lcall
dec
aam
cs
insb
or
xchg
push
stos
cmp
out
xor
inc
scas
dec
xchg
and
int3
jle
call
mov
out
push
and
pop
jp
jecxz
rcll
decb
mov
and
imul
mov
sbb
ljmp
mov
xor
jmp
loop
push
in
out
lock
add
jecxz
and
lcall
xor
sbbl
and
fldenv
je
aas
jno
sbb
lods
in
adc
xchg
sbb
xchg
fstpt
test
out
mov
cmp
out
stos
dec
push
push
adc
push
inc
sbb
std
lret
cmp
mov
cmpsb
sub
fsubrp
inc
add
call
fs
push
mov
into
das
cmp
popf
daa
or
mov
or
test
mov
add
adc
shlb
ds
andl
push
mov
dec
into
mov
jmp
push
mov
adc
fs
xor
aam
sub
sti
mov
push
fmuls
mov
mov
lcall
mov
cmp
mov
stc
cltd
je
out
sub
push
and
rorb
pop
xchg
xchg
and
test
xor
or
shr
mov
orl
push
fsubs
and
mov
mov
fsubr
push
xchg
das
test
push
sub
jnp
push
insl
cmp
pop
imul
ret
pop
sub
mov
xchg
mov
add
or
ret
fndisi(8087
xchg
xchg
dec
inc
movsb
enter
adc
iret
and
xchg
mov
fstp
fisttpl
push
into
out
repnz
fs
add
in
jl
cli
inc
jg
pop
pop
lock
lcall
rcrl
push
cmp
incb
push
hlt
outsl
sar
push
outsl
fistl
mov
pop
je
mov
ja
call
sub
je
out
ficoml
mov
pop
daa
movsb
xchg
jp
push
sbb
xchg
das
mov
jp
push
aaa
dec
fwait
out
orb
scas
mov
sbb
xor
dec
mov
adc
mov
and
pop
scas
js
shll
xor
mov
push
xor
pop
xchg
scas
add
jle
pop
cltd
or
jo
pop
ss
or
fistl
jl
outsl
ds
divb
jo
cmpsl
sbb
addr16
adc
adc
sub
fwait
mov
fmul
aam
into
push
std
pop
cwtl
cmp
pop
cmpl
addb
or
ret
sub
adc
dec
mov
push
jb
jge
add
add
mov
aas
js
lahf
xchg
data16
mov
sbb
test
pcmpgtd
mov
sub
rolb
jge
jge
dec
notb
fdivs
pop
xor
mov
sub
adc
mov
test
clc
into
mov
jns
mov
mov
imul
and
push
mov
and
mov
out
mov
das
jg
test
outsb
decl
mov
add
pushf
lock
das
lock
mov
dec
add
mov
mov
sub
pop
pop
outsl
mov
mov
cmp
adc
cltd
loopne
sbb
jl
push
push
es
push
ret
lret
loopne
mov
jb
push
nop
cmp
pop
pop
add
jp
mov
mov
in
and
scas
rorb
add
lret
xor
or
or
popa
mov
pusha
push
cmc
dec
leave
inc
dec
das
xor
outsl
jnp
lods
mov
jle
in
mov
lds
mov
call
sub
inc
mov
ds
jg
mov
inc
xchg
test
es
pop
pushw
and
outsl
xchg
xchg
inc
into
xor
shrl
mov
sub
adc
mov
pop
std
or
add
sbb
test
mov
or
fisttpl
mov
fwait
xchg
and
std
mov
push
push
loopne
shrb
pop
dec
push
mov
lods
jge
scas
shlb
fiadds
icebp
lret
fmull
xor
and
mov
sbb
sahf
imul
jmp
stc
sub
int
sub
pop
pusha
leave
aam
inc
adc
push
inc
mov
shll
fdivrl
sbbl
js
repz
enter
loop
mov
dec
popa
sbb
add
sub
repz
lods
js
insl
jnp
jl
pop
jb
mov
push
add
fsts
sbb
push
pop
mov
insl
enter
xchg
cmp
cs
xor
jne
adc
es
mov
movsb
inc
enter
ret
mov
sbb
jp
movsl
mov
test
sbbl
xor
inc
aad
xor
mov
jbe
fdivs
int3
dec
aaa
stos
insl
pop
out
subl
stc
out
testb
mov
inc
pop
fists
in
mov
js
push
dec
mov
sarl
add
cs
inc
and
pusha
js
jno
mov
mov
popa
fcoml
daa
repnz
mov
dec
adc
mov
out
das
mov
repz
cmp
cmpsb
pop
insl
stc
in
rcl
test
fbstp
adc
out
shll
inc
push
xchg
mov
enter
outsl
mov
dec
mov
xorb
and
push
stc
cmpsb
out
fildll
push
xor
mov
out
inc
test
call
push
sbb
inc
dec
push
add
sub
movsb
cld
mov
popa
mov
sub
in
mov
in
leave
or
mov
arpl
pop
mov
inc
lods
push
inc
adc
xorb
icebp
add
push
scas
push
shll
jecxz
iret
pusha
punpckhbw
pop
mov
cmp
clc
mov
xchg
filds
shl
movsl
mov
add
cmp
add
mov
add
sbb
scas
loope
lret
mov
sbb
pop
add
pushf
clc
sbb
or
xchg
sub
int
pop
inc
outsl
xchg
nop
jmp
int3
orl
int
test
mov
or
xchg
adcb
push
jl
test
mov
fistps
jae
fbstp
repnz
mov
enter
icebp
lret
cmpsb
and
mov
repz
jmp
inc
and
push
into
and
lea
cmpsl
mov
mov
jbe
ljmp
loop
push
dec
mov
push
ss
push
xlat
mov
ficompl
shlb
jp
mov
mov
xchg
daa
push
mov
jno
dec
fists
fwait
add
stos
mov
ja
add
shll
insl
cmpsl
fisubrs
push
xor
dec
dec
lock
dec
add
adc
pusha
pop
mov
pop
dec
scas
out
mov
push
cmpsb
sbb
adc
xchg
icebp
jl
xor
xchg
rcrl
add
test
mov
std
dec
sbb
dec
rorl
inc
xor
mov
dec
mov
inc
outsb
and
sbb
or
jnp
lcall
das
addl
cld
shlb
sahf
inc
xor
sahf
xchg
enter
popa
inc
negl
inc
jl
jo
push
xchg
cli
shrb
pop
loopne
jle
leave
aad
and
push
nop
push
arpl
test
data16
sar
push
stos
mov
jmp
pop
clc
or
pop
sub
xchg
icebp
lret
sbb
xlat
aam
adc
dec
adc
push
jne
sbb
ja
fisttpll
xchg
lods
test
dec
aas
aaa
das
ficoms
ljmp
pop
mov
adc
mov
mov
fadds
jbe
mov
push
lahf
scas
jo
mov
mov
rolb
mov
mov
jg
out
add
push
daa
dec
xor
mov
or
xchg
inc
sbb
jmp
call
popa
mov
cltd
pushf
int3
mov
lds
push
cmc
jns
pop
in
xchg
in
cli
jbe
sbb
xor
std
pop
fdivr
pop
out
mov
jnp
out
mov
xor
adc
sbb
mov
or
daa
movsb
mov
jne
mov
mov
nop
and
mov
jnp
dec
xchg
imul
icebp
icebp
mov
sub
or
cld
push
insb
imul
setge
add
out
inc
cmp
pop
cltd
jae
push
jnp
dec
inc
mov
cmc
pop
mov
push
inc
aas
ljmp
mov
sbb
mov
mov
sub
inc
mov
lcall
push
scas
pop
mov
jp
jo
jp
jnp
jmp
mov
jmp
xlat
xchg
pop
shrl
push
fildll
lds
push
insb
in
lods
fwait
addr16
in
push
mov
dec
jmp
imul
mull
aam
pushw
mov
jae
or
adc
jmp
lods
sbb
add
or
jle
adc
test
pop
dec
xchg
cmpb
xor
hlt
dec
mov
push
rorb
and
aas
addr16
xor
jp
pop
clc
stos
push
mov
mov
xchg
movsb
jl
out
push
ss
sbb
xor
icebp
dec
xchg
push
fimull
repz
ljmp
pop
add
icebp
push
das
jno
pop
pop
std
cmp
sub
iret
jbe
push
clc
cmp
std
inc
sarl
insb
test
adc
stos
pop
outsb
xchg
cmp
and
loop
mov
push
or
test
cmp
in
cmp
fdivl
fs
rcrl
xchg
sbb
and
popa
mov
pop
aam
lcall
mov
fs
fwait
aaa
mov
stc
xchg
mov
mov
add
jecxz
adc
sbb
adc
stc
pushf
push
mov
into
in
test
idiv
in
or
mov
fisubrs
mov
jge
outsb
pop
inc
cld
mov
push
push
mov
mov
scas
sbb
insl
lret
lods
and
dec
aad
jns
gs
jns
je
mov
xor
data16
xor
outsb
jae
sbb
pop
fcoml
inc
adc
ret
stos
dec
movsl
push
lods
gs
jo,pt
dec
pop
push
or
pop
dec
push
and
inc
dec
adc
pop
xor
jne
arpl
jno
popa
cmc
push
push
add
cmp
adc
or
mov
arpl
pop
mov
xchg
iret
pop
sub
out
fwait
push
pop
jne
out
adc
push
dec
or
or
call
loopne
mov
cmpsb
pop
inc
dec
fwait
pop
jo
mov
pop
adcb
jp
sbbb
adc
imul
push
or
jae
je
cld
pop
adc
gs
movsb
pop
pop
cmc
xchg
mov
adc
sbb
sub
pusha
aaa
fwait
js
hlt
in
popa
push
in
fs
pop
test
adc
adc
sbb
aad
jg
sarl
push
dec
lods
fwait
imul
xchg
and
frstor
aas
imul
sbb
cmpsl
cld
lret
imul
enter
arpl
jl
popf
clc
lock
into
into
push
fwait
xchg
push
lret
and
xchg
iret
inc
add
sti
test
or
sbb
pusha
xlat
cmp
mov
sbb
xchg
imul
inc
and
das
add
enter
mov
incb
sub
xlat
je
mov
les
mov
addr16
lahf
sub
adc
sub
sbb
rep
es
push
inc
jecxz
sti
roll
int
mov
mov
in
mov
jbe
call
cmp
pusha
add
je
les
add
les
and
cmpsl
fisubl
xlat
add
cltd
adc
push
stos
dec
roll
pop
mov
pop
fldt
inc
ljmp
push
je
sbbl
push
jno
loop
sbb
imul
lds
cmp
xchg
in
xchg
into
sbb
dec
jbe
lret
xor
lret
sub
test
repnz
add
leave
dec
xor
cmpb
inc
repz
cwtl
loope
inc
inc
pop
setp
jb
mov
out
add
ja
bound
pusha
pop
iret
cmp
daa
add
jne
add
out
scas
fistl
rcl
push
mov
inc
push
test
or
jns
sbbb
rol
subb
jno
jns
ljmp
push
adc
lods
outsl
ficoml
fs
mul
movsb
sub
stc
mov
push
fadds
mov
push
shr
and
fxch
fwait
sbb
aam
inc
std
scas
stos
add
sbb
mov
adc
jmp
scas
int3
and
mov
mov
mov
iret
pop
push
in
adc
cld
pushl
mov
push
gs
fstps
or
add
mov
rcll
mov
push
je
mov
xchg
pop
sub
test
xchg
cmp
xor
bound
xor
adc
stc
cwtl
inc
mov
inc
xor
push
call
lcall
mov
mov
and
cmp
sbb
lahf
cwtl
mov
fsubrp
loopne
sti
lods
mov
call
push
xchg
add
inc
xor
adc
outsb
xchg
mov
ja
jne
andl
sub
xor
scas
or
repz
add
cmc
xor
pusha
add
mov
fdivs
sub
push
in
nop
push
loopne
lods
fsubrp
je
out
out
sbb
in
fwait
ja
sahf
aad
insb
mov
imul
inc
mov
fiadds
adcb
mov
sub
or
mov
lret
negl
jmp
pop
xor
xchg
icebp
mov
into
fistpl
in
or
mov
mov
sar
hlt
es
les
and
psraw
cmp
mov
lea
add
and
mov
jnp
icebp
loope
das
jecxz
sarl
mov
jno
sub
mov
testl
js
call
sbbb
jmp
push
into
ja
and
pop
adc
jmp
xor
mov
dec
cld
testl
lret
xor
mov
sarb
decb
sahf
jl
pop
xor
pcmpeqd
insb
adc
dec
pop
iret
mov
pop
pop
sti
hlt
mov
insl
fstl
jmp
lea
adc
test
xor
inc
jge
inc
pushl
xchg
xor
push
cvtps2pi
jb
loopne
xchg
cld
mov
popf
mov
mov
pop
in
out
shll
lods
push
cmp
sbb
cmpsb
lret
inc
pop
inc
pop
xchg
add
leave
sbb
ret
and
jne
push
sbb
roll
mov
in
pusha
and
mov
sbb
lods
jo
mov
jnp
push
sbb
cmp
icebp
jbe
push
xor
adc
out
fabs
sahf
add
ret
or
jnp
in
mov
mov
mov
or
cmp
pop
daa
add
ds
repz
sbb
sbb
loop
mov
cmp
hlt
movsb
lock
mov
std
push
push
mov
push
out
hlt
fs
and
xchg
roll
add
dec
mov
nop
mov
xorl
dec
fisttps
jno
push
in
gs
pop
es
inc
pop
notb
push
sbb
shr
cmp
outsb
repz
mov
mov
pop
das
sub
inc
xchg
xchg
mov
cmp
jmp
xor
aad
push
ljmp
std
mov
sub
cmp
call
repnz
push
xor
sub
movsl
inc
loop
xor
sbb
cmp
sahf
inc
adc
out
push
fdivs
adc
lret
mov
data16
stos
or
int3
call
add
dec
ds
lea
sbb
dec
fistpll
push
inc
ljmp
push
movl
xchg
xchg
stc
pop
int
imul
movsb
out
mov
pop
lcall
notl
lds
hlt
mov
stos
out
enter
add
sahf
inc
push
sub
loopne
xor
cmp
loope
nop
fistps
and
sub
cld
test
out
pop
cmp
dec
lret
loopne
test
hlt
das
fdivrs
inc
mov
imul
xchg
jns
fcomps
lds
sbb
test
mov
les
adc
sbb
and
cwtl
add
xchg
les
push
shll
sub
sbb
nop
loope
mov
lea
shlb
jmp
mov
jg
or
fldenv
pop
hlt
loop
inc
lret
ret
xchg
jge
cmp
nop
or
dec
dec
mov
jo
mov
cmpsb
mov
cmc
test
popa
int
imul
pop
lret
xchg
dec
lock
jo
in
shr
lea
add
roll
sub
mov
shl
insl
mov
dec
adc
mov
dec
movsl
add
sahf
cwtl
mov
dec
lods
ja
sbb
shlb
int
pop
cltd
add
into
add
popf
xchg
or
mov
jb
pop
add
scas
sahf
jmp
jecxz
mov
aam
insb
ss
stos
cmp
daa
gs
outsl
cmpsl
jne
scas
cmovae
sahf
pop
and
idivb
add
inc
dec
cmpsb
rcrl
loop
dec
popf
adc
gs
sbb
and
sub
ds
loop
inc
dec
dec
mov
les
xor
in
dec
mov
sub
out
mov
push
mov
iret
es
mov
mov
outsb
mov
xchg
lcall
fsts
in
imul
fnsave
add
aaa
sbb
mov
sub
loope
jg
mov
jno
stc
call
addb
pop
neg
out
shll
stos
cmc
enterw
leave
jecxz
stos
pop
es
sub
aas
push
xchg
imul
repz
out
adc
and
dec
push
lcall
dec
lods
dec
or
pop
in
push
push
pop
mov
fldcw
lock
je
mov
cmc
test
xchg
jne
push
xchg
je
mov
in
fwait
rcl
xchg
adc
lret
pop
adc
mov
icebp
push
jle
dec
pushf
and
mov
aad
xor
mull
sbb
insl
and
outsl
in
ds
cmp
fdivr
xor
sbb
jl
mov
and
jne
lret
pusha
mov
sahf
inc
xchg
mov
cwtl
mov
xchg
cmp
adc
sbb
sub
lret
scas
mov
and
lret
inc
cmp
loopne
push
adcb
movsb
mov
add
stc
push
and
cltd
mov
sbb
aam
cmp
bound
pop
push
xor
lea
mov
aas
xchg
jne
popf
pop
mov
pushf
into
or
mov
call
enter
mov
out
nop
fstpl
fucom
popf
mov
outsb
or
push
ds
xchg
xchg
cmpb
add
popw
lock
or
pop
sbb
pop
cmp
xchg
xchg
xchg
test
lea
in
insb
movsl
mov
jbe
int
je
mov
cbtw
sub
in
or
xor
das
jb
iret
sahf
jo
mov
fs
add
cmp
pushl
mov
xchg
or
das
mov
add
or
and
push
jmp
mov
cld
adc
ret
lea
add
inc
mov
add
cld
stos
push
out
lods
dec
lock
mov
loopne
movsb
inc
sub
or
jmp
jge
push
mov
icebp
pop
repz
je
inc
sarb
add
mov
inc
lcall
lods
xchg
sbb
adc
sbb
nop
xlat
cmpsb
pop
push
rorl
fldenv
jp
in
lock
loopne
lret
push
in
push
in
xchg
jge
loop
rorl
jmp
sub
mov
enter
mov
rorl
stos
add
loope
popa
out
mov
jmp
pop
jno
adc
enter
addb
mov
fwait
mov
lea
push
mov
lock
inc
ds
rclb
mov
dec
mov
sbb
mov
loop
cli
dec
loop
fistps
cltd
jg
jmp
imul
je
dec
push
fcoml
or
call
scas
imul
jmp
cmp
add
xor
mov
xchg
sub
mov
repz
testl
loop
mov
mov
aad
test
jns
in
loopne
or
cld
cltd
mov
aad
stc
outsb
cmpsl
inc
test
pop
dec
or
inc
jecxz
sbb
insb
cltd
push
pop
jno
loop
and
iret
or
lods
and
push
mov
cwtl
xchg
pop
inc
int
adc
pop
aam
scas
in
push
movsb
lods
sahf
es
ds
mov
icebp
ljmp
inc
lret
sbb
jge
scas
fistpll
jbe
cmp
ja
ret
in
adc
sbb
test
movsl
pop
push
pusha
push
call
fwait
pusha
mov
out
xlat
push
add
enter
loope
mov
bound
lock
pop
dec
mov
in
xlat
jns
and
xor
mov
jp
and
pop
pop
filds
test
out
daa
in
hlt
fwait
pop
fstp
sti
sub
pop
mov
add
test
push
fs
repnz
fwait
jge
aad
add
aam
ret
loop
aaa
and
bound
cmpsl
push
sti
mov
xor
test
or
mov
pop
pop
repz
and
push
pushf
mov
sub
xchg
sub
fadd
hlt
aas
fwait
iret
nop
jnp
fstp
lods
je
xchg
rol
sbb
sbb
cmp
cmp
add
jne
xor
xor
mov
cld
das
loope
fwait
shll
pusha
xor
outsl
scas
ret
insb
jae
mov
arpl
push
les
in
out
cmpsb
lock
jae
mov
xchg
add
sbb
inc
cmc
das
lret
sbb
icebp
shlb
mov
icebp
add
xlat
into
jns
insb
pop
or
add
call
pop
push
mov
mov
les
dec
in
adc
je
lds
repnz
sti
sbb
std
std
add
shrl
lcall
out
inc
cmp
dec
jg
int3
mov
imul
jl
cli
sti
cmp
nop
mov
push
xor
sti
jle
loopne
or
pop
ss
jecxz
ret
dec
xchg
mov
outsl
imul
stos
not
xchg
stos
mov
mov
in
pop
xor
out
in
mov
cmp
outsl
push
dec
jmp
sbb
sub
flds
mov
pop
pop
xchg
and
inc
adc
roll
push
pop
loope
filds
shufps
frstor
test
jecxz
push
jle
sbb
dec
lret
mov
rol
jbe
stos
xlat
xchg
cwtl
popf
add
cmp
xor
test
jb
fstpl
mov
jns
cwtl
hlt
out
idivl
fmuls
lret
cli
subb
mov
cli
jnp
and
ja
out
sub
incl
icebp
cmpsb
jno
inc
push
pop
xchg
mov
or
loope
insb
xchg
jne
dec
inc
cli
test
mov
and
addr16
test
mov
xor
adc
lea
fld
lods
and
cmpsl
call
jmp
inc
cwtl
sub
mov
insl
xchg
pusha
sub
enter
jno
subl
ljmp
xchg
dec
shrl
sbb
cmc
xchg
hlt
cmp
jae
cwtl
hlt
arpl
sbb
xchg
xor
notl
mov
sti
cs
xchg
adc
insb
daa
inc
clc
push
dec
mov
mov
pop
ss
mov
inc
sub
xor
je
inc
lds
testl
ss
add
push
repnz
jno
push
mov
cs
xor
dec
mov
test
sub
pop
repnz
add
or
jbe
mov
sbb
jecxz
adc
popf
shlb
cmc
lds
loope
mov
dec
lds
add
xchg
xor
outsl
ljmp
adc
clc
xor
or
cli
cmp
inc
arpl
ds
notb
inc
scas
mov
and
imul
sub
jecxz
sbb
stos
add
fucomp
xchg
jl
fnstcw
cmp
adc
and
jmp
neg
jge
push
xchg
aaa
lds
inc
je
in
test
xchg
std
in
ret
push
lret
push
ss
sbb
jns
imul
mov
mov
enter
jae
outsl
scas
push
pop
imull
rorb
sbb
lods
add
arpl
ljmp
iret
or
cmpsl
jnp
mov
adc
test
push
fisubs
loop
js
jge
enter
scas
sub
pop
jp
data16
xchg
les
imul
xlat
lods
xlat
dec
andb
imul
test
pop
into
dec
in
iret
insb
or
and
and
xor
inc
fs
push
incl
sti
aas
daa
ja
rcr
dec
lods
test
cmpl
fmuls
movsl
xchg
aaa
fimuls
scas
sarb
cltd
sbb
arpl
mov
jo
push
aam
mov
jbe
ret
mov
or
lret
jecxz
jge
adc
fidivl
cli
sbb
stos
imul
jae
push
in
sub
jecxz
pusha
cmp
lds
lock
addr16
xchg
aam
sahf
mov
cmp
repz
xlat
mov
jbe
cwtl
mov
stos
aas
push
push
clc
jge
push
test
sub
cli
insb
je
pop
lods
push
mov
rcrb
out
cmpsb
shr
xchg
fdivs
cmp
pop
xor
leave
rcl
lock
adc
pop
fnstenv
adc
mov
push
mov
xchg
in
push
mov
push
hlt
pop
or
mov
out
pop
cmc
mov
add
clc
jp
loopne
xor
xchg
outsb
repnz
fidivrs
xor
xchg
fsub
hlt
leave
sbb
and
jno
dec
xchg
mov
ljmp
mov
out
mov
mov
cs
rcll
or
sbb
jns
inc
in
push
rorb
xor
rcll
xchg
test
daa
lock
pop
cmpsl
dec
movsb
dec
push
lods
cmpsl
popa
adc
xor
dec
call
mov
pop
cwtl
pop
adc
jmp
pop
or
jno
mov
xchg
test
sbb
sub
mov
std
jle
push
cmpsb
clc
repnz
inc
pop
mov
sub
ret
dec
mov
jbe
lock
mov
inc
loope
repnz
sti
add
cmp
test
out
jne
cmc
or
or
xor
test
jbe
inc
mov
leave
ficoml
inc
repz
mov
xchg
mov
and
xchg
or
in
hlt
and
xor
imul
outsl
sub
fs
jae
loopne
and
ljmp
xor
lods
mov
push
loop
in
mov
xchg
mov
mov
fidivrl
dec
roll
orl
push
arpl
dec
gs
pusha
pop
sub
jecxz
dec
ljmp
cs
pop
into
cmc
mov
int
insl
mov
pusha
std
pop
jne
mov
loop
sbb
mov
jmp
es
push
test
data16
in
mov
cs
out
dec
mov
test
das
push
mov
dec
mov
push
daa
ret
pusha
aas
mov
add
and
sub
adc
arpl
dec
cmpb
fnstcw
mov
xor
jns
fwait
xor
inc
in
dec
xor
and
int3
cmp
sarb
mov
inc
lret
pop
mov
sbb
and
mov
jb
shr
mov
push
dec
dec
or
cmp
clc
ret
ds
fldl
add
xor
leave
out
adc
and
mov
mov
push
inc
xchg
jo
roll
test
cmp
adc
xchg
push
push
fistps
pushf
cmpl
lods
or
leave
lods
into
push
or
pop
jmp
lods
aas
xor
sbb
adcl
mov
cwtl
mov
or
xor
and
dec
sbb
xor
scas
adc
movsb
popa
push
dec
and
insl
add
fisubl
push
movsl
aam
push
and
inc
sub
or
mov
jg
fcompl
sbb
ss
pop
jmp
adcb
jo
cld
loopne
sub
push
lods
dec
inc
adc
or
dec
in
arpl
xor
mov
add
ds
mov
in
std
scas
mov
rolb
sbb
inc
cwtl
test
or
add
xchg
xchg
dec
inc
scas
scas
dec
xchg
hlt
mov
sbb
test
neg
cmc
cmp
xchg
lret
dec
out
test
jo
stos
cwtl
leave
push
insl
imul
add
iret
adc
in
push
sub
pusha
in
out
movsb
or
test
xchg
subl
xor
pop
clc
and
sbb
sub
popf
jmp
les
cmpl
arpl
gs
sub
std
dec
bound
jp
mov
inc
xchg
or
or
adc
or
in
inc
hlt
adcb
dec
dec
inc
xor
push
je
push
dec
out
mov
push
rcrl
jmp
add
inc
push
adc
imul
lds
cmovae
jb
xor
lea
test
mov
loopne
cld
and
dec
cmp
jns
cmp
call
xor
mov
bound
and
jmp
mov
fwait
xorl
lret
mov
push
push
fldenv
push
test
stos
sub
xchg
loope
repnz
scas
cli
jecxz
xor
sub
and
int3
xor
cmpsb
mov
adc
dec
cmp
xor
ret
mov
sahf
sahf
jbe
cmp
daa
and
sbb
jnp
out
add
jne
lea
cmp
dec
cmc
and
sti
push
pop
fwait
sahf
xchg
xchg
cltd
adc
jae
enter
mov
add
xchg
xor
add
push
and
sti
jl
loopne
jg
adc
sbb
daa
shll
cmp
std
push
push
cmp
or
sub
call
outsl
dec
lds
xchg
push
popa
jb
dec
sbb
in
add
sub
xchg
pop
sub
xor
mov
sub
sub
fcmovnbe
push
mov
int
mov
sbb
sub
push
into
shrl
jp
cmc
ja
cmp
daa
jp
cltd
add
pop
jbe
push
fidivl
sbb
hlt
scas
dec
adc
lret
mov
rsm
jg
xchg
fstps
movsb
mov
push
push
jp
movzwl
mov
sub
pop
fcmovnbe
or
mov
scas
lcall
or
xchg
icebp
sbb
loop
imul
outsl
daa
sbb
movntq
pop
or
jb
hlt
decl
xchg
sbb
incl
aam
popf
push
loopne
sbb
fldcw
stos
or
cmpsb
test
dec
cmp
xchg
fcmovb
mov
in
fucom
jmp
lods
lea
pop
cmc
test
lcall
orl
dec
test
push
bound
xchg
inc
mov
mov
dec
jns
ja
idiv
cmp
les
std
mov
aaa
xor
sub
loope
rcrl
add
mov
sub
pop
test
fmull
mov
lcall
popf
lds
jge
sbb
sub
mov
dec
dec
or
mov
loopne
das
rorb
mov
adc
das
push
push
pop
rcrl
in
xor
test
rcrb
jns
subb
out
add
int3
arpl
shrb
jp
xorb
jmp
lret
xchg
adc
fcoml
mov
and
loope
pop
push
data16
lcall
sub
ficomps
xor
cmp
inc
dec
sub
jo
je
dec
stos
iret
mov
mov
mov
ss
repz
jb
ret
jno
fisttpll
in
mov
popl
ficompl
inc
jecxz
jmp
or
jg
insl
or
leave
fwait
adc
pop
sub
pop
enter
scas
pusha
adc
pop
jmp
out
or
insb
lea
lret
sbb
push
dec
mov
adc
sbb
das
sarb
adc
xlat
pop
mov
inc
das
fcmovne
push
mov
mov
fcmovnbe
or
or
hlt
sti
loope
sahf
sbb
dec
pop
hlt
stos
aad
jle
pop
sti
jle,pn
cmp
data16
or
xchg
mov
xchg
std
insl
imul
pop
js
jae
pop
sub
imul
addr16
mov
cwtl
pop
pop
and
mov
inc
enter
or
sbb
rcrl
push
jecxz
shlb
into
std
or
aam
imul
push
nop
jmp
dec
mov
and
xor
pop
push
dec
xor
sar
repz
sub
cwtl
push
movsb
inc
je
add
xlat
stos
inc
faddl
adc
pop
sahf
push
aaa
fs
fs
push
cltd
and
out
or
pop
add
dec
aam
jmp
out
repz
jno
push
push
cmp
ljmp
enter
cs
cmpsb
call
add
adc
xor
fists
inc
pop
mov
xor
dec
lret
out
ljmp
test
rep
mov
add
test
inc
push
sub
mov
ret
outsl
xor
and
and
jae
aas
pop
in
jle
mov
sub
flds
adc
sbb
adc
xchg
push
ljmp
cmc
mov
clc
cmp
cs
aad
cld
ljmp
jmp
pop
xchg
xchg
daa
cmp
inc
ret
outsb
sub
mov
and
push
aam
rcll
mov
addr16
imul
mov
mov
movsl
xchg
ja
inc
and
loop
loopne
into
pushf
dec
mov
adc
sbb
xchg
inc
jge
inc
or
and
push
shlb
fadds
ja
cmc
mov
fists
scas
xor
sub
lcall
loop
subps
sub
add
mov
xor
shrl
call
popf
ss
std
out
cmp
pushf
jp
out
std
jmp
xchg
in
inc
gs
out
movsl
loope
int
cmp
or
cmp
outsl
pop
es
pop
movsl
mov
notb
or
mulb
mov
pop
into
aad
xor
adc
mov
push
adc
or
out
sbb
inc
fsubrl
loop
jl
jg
ds
dec
popa
pop
imul
repz
rorl
outsw
in
sar
jp
stos
or
das
lcall
inc
fsubs
outsb
imul
and
ds
xor
add
pop
pop
ds
out
mov
sbb
lret
je
fstpt
adc
js
pop
lret
outsb
fs
mov
jmp
test
mov
jl
and
pop
cmp
mov
hlt
pop
pushaw
xor
xor
ljmp
jmp
scas
mov
mov
ret
pop
test
xor
inc
ljmp
or
aam
mov
dec
sub
in
cmc
das
sbb
pop
sub
or
outsl
stc
mov
push
push
pop
xchg
or
inc
pop
cmc
ds
das
ljmp
pop
cmpsb
cmp
fsub
pop
xor
jg
stc
xor
scas
cmpsl
xchg
push
pop
movsb
sub
cmp
push
adc
stos
test
xor
push
jp
jge
jge
addr16
das
fcmovb
push
testb
xor
dec
or
xchg
xchg
inc
out
stos
jl
push
lds
xlat
sbb
sti
insl
xchg
insb
repnz
addr16
push
lock
leave
cmp
lcall
push
fstl
lret
shll
rcl
mov
jb
push
bound
ret
xorb
cwtl
cmp
or
mov
loope
pop
fiaddl
xchg
lock
popa
inc
jo
or
dec
mov
fcomps
ret
leave
int
fcompl
ljmp
cmp
sbb
cld
in
or
out
repz
or
sbb
mov
mov
jne
xor
test
pop
adc
testb
repz
jne
movsl
cmpsl
xchg
sub
cwtl
jbe
test
jno
add
outsl
aad
and
pop
mov
jmp
mov
fnstsw
and
pop
stc
aam
movsb
inc
insl
cmpsb
in
inc
add
aam
fwait
in
shlb
out
ja
inc
or
lds
dec
dec
cmc
in
icebp
aam
adc
mov
jae
dec
mov
mov
push
fidivl
mov
dec
rcrl
push
dec
sub
adc
out
es
out
mov
inc
inc
loopne
fldt
sbbl
test
mov
push
xor
jo
pop
cld
sub
push
call
test
and
inc
fucomi
cmp
xchg
mov
mov
xchg
cmpsb
fldcw
xlat
cmp
mov
or
ffree
popa
dec
jl
sbb
mov
jmp
test
xchg
cltd
ficoml
and
loopne
loop
sti
fsubl
mov
xor
loope
mov
jg
inc
enter
mov
fstpt
fdivrp
inc
jns
xchg
xlat
inc
arpl
sbb
clc
mov
fsubp
aad
stos
out
mov
fcmovne
jecxz
xchg
mov
xchg
sub
adc
mov
loope
xor
sub
xchg
shrb
lods
or
ds
scas
sub
xchg
push
push
js
mov
bound
lret
inc
fists
and
iret
mov
cmovne
daa
lds
cmpsl
mov
lds
gs
fcoml
addr16
addl
jb
jne
sbb
shll
mov
push
xchg
shlb
inc
lds
mov
aas
imul
aas
mov
sbb
fcoml
shl
jne
add
mov
enter
mov
insb
in
mov
mov
mov
push
mov
add
mov
mov
rclb
xchg
outsl
cmp
fistpl
mov
xor
int
mov
pop
inc
inc
jp
sub
pop
test
xchg
andb
ss
cmp
je
adc
xchg
xchg
leave
xchg
add
mov
xlat
or
daa
mov
inc
enter
pcmpeqb
fsts
sub
movsl
and
xchg
dec
xorb
les
out
xor
gs
pop
sub
in
bextr
test
jo
mov
iret
flds
imul
cld
jle
aam
push
cmp
mov
mov
dec
sbb
push
sub
adc
xchg
cmp
in
outsl
incb
or
pop
faddl
es
inc
dec
jp
pop
sub
pop
sub
dec
loope
or
mov
sbb
mov
gs
fwait
cmc
fdivrl
pop
in
jno
inc
repz
cmpsl
or
sub
jmp
jne
mov
pop
sbb
pop
imul
push
ret
inc
fsts
mov
imul
push
add
dec
leave
std
pop
addr16
arpl
ret
fbld
cmp
cmc
in
inc
or
sub
cli
cld
ret
adc
mov
inc
std
push
mov
cwtl
adc
cmp
xor
xchg
sbb
hlt
sbb
mov
jo,pn
xchg
xchg
fstpl
pop
xchg
into
push
jmp
hlt
inc
xor
mov
call
sbb
pop
jecxz
outsl
shr
sar
shrl
call
mov
and
xchg
mov
in
ror
in
jg
ror
jmp
out
or
inc
push
pop
je
js
mov
push
ja
ds
fistpl
add
mov
adc
das
nop
sbb
and
dec
call
cld
ret
ficomps
pop
push
mov
sahf
popf
std
dec
outsw
inc
and
incl
jns
or
jle
scas
in
adc
leave
scas
sub
negl
ljmp
nop
lock
notb
das
out
lods
push
dec
pop
add
fwait
jmp
mov
cmp
hlt
daa
sbb
std
and
cmpsl
push
ss
addr16
out
dec
icebp
fldl
ljmp
jecxz
mov
sbb
int
jl
neg
mov
bound
fwait
cltd
push
loop
cmp
dec
jb
jg
stos
inc
mov
pop
pop
or
stc
sbb
repz
jge
or
fadds
cli
scas
bound
sub
xchg
fstpt
fsts
pop
incl
pop
repnz
es
in
les
mov
cwtl
fnstsw
psubd
and
mov
mov
xlat
add
aad
ljmp
aad
dec
out
inc
into
rol
loopne
call
mov
bound
addr16
adc
shll
or
and
cmp
xchg
dec
or
inc
and
adc
out
sbb
cmp
ds
dec
mov
inc
adc
lret
jo
int
negb
lds
jne
add
ja
cmp
fists
outsb
mov
sbb
adc
add
pop
pop
cltd
adc
in
cs
sub
inc
ss
lods
sbb
inc
mov
push
push
pop
push
mov
dec
std
dec
xchg
jp
cld
pop
add
cli
add
xor
fcom
shlb
xchg
or
popf
push
push
xlat
xchg
cmp
lods
movsb
and
sub
mov
push
std
lock
push
aaa
out
cmpsl
les
decb
cwtl
sub
sbb
pop
stos
lock
faddp
sbb
popf
xor
mov
mov
add
ds
jae
mov
mov
test
pushf
addr16
lea
mov
pop
cmp
or
jmp
lret
lahf
push
repz
dec
jecxz
pop
mov
dec
pop
inc
arpl
mov
call
add
inc
mov
sarl
cmpsb
das
sarl
xor
inc
shlb
mov
test
rorl
fwait
repnz
sti
add
mov
mov
dec
sub
orl
frstor
nop
std
outsl
mov
mov
imul
sub
dec
iret
pop
cmpl
aam
repz
sbb
pushf
scas
roll
arpl
lcall
outsb
lcall
scas
jno
and
insb
add
jns
imul
fucomip
cmp
xor
inc
pop
lods
and
pop
adc
sbb
lds
fsubrs
jbe
adc
out
in
ss
pop
mov
stos
sub
aam
es
gs
pop
pop
mov
adc
lods
xchg
mov
jbe
insb
pop
cltd
ljmp
add
or
mov
cmpb
fs
and
inc
or
ret
inc
in
mov
int3
xchg
leave
bound
and
lret
out
cs
pusha
jl
mov
push
xlat
dec
inc
xchg
test
lock
scas
dec
cmpb
popa
das
idivl
lock
imul
out
push
jp
sbb
scas
test
jl
or
mov
mov
fsts
lods
ja
dec
inc
mov
lcall
mov
out
mov
fnstsw
fisttps
pop
dec
or
pop
filds
int3
push
mov
pop
push
cmp
fxch
mov
lea
jg
call
ret
add
adc
xchg
and
lret
pcmpgtd
dec
shlb
and
sti
xchg
mov
mov
jno
popa
dec
adc
fldl
xchg
pushf
leave
fidivrs
dec
sub
inc
popf
xchg
stos
mov
adc
test
cmp
out
lds
xchg
jo
jb
mov
push
xorb
iret
push
fcmovnb
movsl
xchg
push
ja
jg
test
arpl
push
int
add
mov
shll
ss
out
icebp
mov
dec
add
push
push
hlt
xor
faddl
cmpsb
mov
enter
aam
mov
aad
sbbl
xchg
mov
push
dec
inc
aas
popf
dec
imull
sub
mov
fs
xchg
hlt
cmp
mov
mov
inc
sub
aas
xor
jge
dec
push
imul
mov
push
sbb
mov
mov
fldenv
mov
lret
jmp
cmpsb
mov
mov
fistpll
ret
pushf
add
pop
mov
mov
xor
pop
cmc
ret
inc
mov
add
xchg
leave
out
pop
mov
fmull
imul
mov
popf
dec
bswap
push
imul
mov
int
scas
out
mov
les
or
testl
or
pop
cmp
mov
mov
xor
xchg
std
jae
nop
testb
imul
test
push
sbb
nop
movsl
mov
push
jp
sbb
push
addr16
push
mov
jo
fwait
ret
sub
shl
popa
test
lods
pop
add
inc
push
mov
mov
dec
mov
jae
arpl
por
sbb
mov
or
mov
outsl
push
inc
pop
jbe
xlat
leave
lea
and
jmp
and
mov
inc
or
xchg
out
je
lret
cmpsl
mov
mov
movsb
and
pop
ss
jg
cld
fcoms
out
stos
lcall
in
and
loope
imul
add
aad
sub
es
push
xorl
inc
adc
nop
cmp
outsl
test
push
pop
cwtl
and
or
push
inc
jmp
mov
or
xor
fnsave
mov
outsb
cmp
mov
dec
mov
mov
inc
mov
nop
xchg
add
mov
pop
ljmp
out
jns
pop
leave
repnz
sbbb
pop
cmp
xor
popa
sub
ja
scas
xchg
ret
dec
into
popa
mov
insb
adcl
cwtl
mov
adc
xchg
into
dec
and
adc
pop
jbe
fcmovnb
sbb
lret
mov
xchg
test
out
leave
sbbl
add
or
jge
xor
movsl
sbb
int3
cmp
inc
sti
js
xchg
sbb
pop
dec
mov
dec
mov
inc
ret
insl
cwtl
sbb
or
inc
fs
and
mov
jno
das
add
adc
fwait
cmpb
ja
sub
inc
cs
cs
sbb
shl
mov
movaps
xchg
dec
add
cmpsb
outsb
test
in
js
dec
inc
dec
cmp
rorl
and
add
test
push
adc
jmp
inc
mov
mov
adc
nop
cltd
es
add
jb
push
cmpb
in
rorl
mov
cmp
shlb
cmpsl
icebp
inc
in
jmp
or
adc
mov
mov
push
pop
xchg
cmpsl
les
std
test
inc
inc
bound
test
int3
xor
test
pop
push
es
pop
idivl
jb
push
fcoms
xor
jns
and
and
sbb
into
frstor
mov
pushf
sahf
xor
repnz
fwait
test
in
lret
push
mov
adc
add
or
lret
pop
std
popa
xchg
xor
push
aam
sbb
pop
bound
ss
pop
mov
adc
and
test
mov
inc
xchg
stos
or
mov
push
sbb
aad
push
inc
cmp
mov
fbld
and
sbb
ficoms
stos
stos
lock
push
sbb
cli
sbb
cmp
sub
sub
mov
ret
cltd
inc
jne
sarl
sub
cmp
mov
stc
test
je
xor
or
adc
outsb
xor
mov
filds
jmp
insl
add
xor
mov
lds
pop
jns
test
hlt
fcompl
push
lea
dec
pop
mov
push
mov
adc
stos
jne
mov
incl
sbb
push
pop
fcomps
xchg
scas
imulb
xor
movsl
sub
mov
loope
pushf
dec
add
and
sub
cwtl
or
xchg
mov
ret
add
dec
dec
fwait
xchg
add
cs
push
out
adc
xor
fldt
mov
xor
jnp
inc
push
add
or
jl
mov
xchg
lret
loope
sbb
movsl
sti
sub
setno
dec
or
leave
call
lds
push
loopne
sub
pop
stos
bnd
sbb
ljmp
push
sbb
int
in
pushl
cmp
mov
push
dec
and
lock
fstpl
leave
aas
push
sbb
cli
mov
and
pop
jb
pop
sub
gs
cmpl
das
sbb
iret
sti
fimuls
bound
sbb
mov
imul
shl
cmpb
jbe
xlat
or
cmp
jg
sub
mov
iret
in
repz
rolb
sbb
lret
dec
or
fsubrp
adc
out
mov
mov
repnz
out
add
push
sbb
ret
xlat
push
ljmp
out
xchg
push
sub
mov
push
mov
sbb
cltd
lret
hlt
pop
ljmp
xor
push
mov
inc
mov
jne
cmp
bound
test
xchg
subb
not
in
jbe
imul
repz
iret
dec
addr16
stos
ja
cmpsb
adc
xchg
fwait
movsb
inc
mov
hlt
mov
add
or
and
sbb
lret
xor
adc
push
insb
dec
mulb
push
call
ljmp
pop
fwait
std
out
pop
jecxz
fwait
dec
pop
dec
push
jmp
icebp
imul
outsl
push
xchg
ds
arpl
repz
into
cmc
cld
stos
fdivrs
into
or
mov
out
enter
xchg
xchg
push
aam
jne
enter
jae
in
inc
insl
aam
xor
inc
cmp
cmp
rolb
fwait
shrl
subl
fidivrs
add
push
mov
pop
adcb
or
pop
aas
inc
ja
jge
push
cmp
mov
popa
sub
stos
insb
stmxcsr
ficomps
loope
bound
mov
push
mov
add
push
loope
mov
mov
jmp
push
inc
or
cmc
mov
jbe
mov
lods
sar
mov
cvtps2pd
jne
iret
stc
xchg
lea
adcl
aad
adc
jp
cmp
je
mov
shrb
push
testl
pop
mov
sahf
lgs
push
sbb
dec
cmpsl
inc
mov
jno
cli
outsl
imul
xchg
loop
rcll
das
jmp
sub
shll
scas
jge
add
mov
aaa
xchg
pop
jns
pop
les
out
int3
rcrb
sub
jl
movsb
jnp
mov
adc
pusha
push
cmp
mov
nop
and
insl
jb
jnp
dec
test
inc
inc
mov
mov
lock
add
mov
pop
test
xchg
cmp
and
xchg
repz
mov
mov
lock
mov
outsb
sub
test
jg
je
aad
pop
aas
jp
add
add
push
je
lret
xchg
push
out
lret
xor
cld
shrl
movsl
mov
iret
or
stos
cmpb
or
shll
repnz
mov
repz
out
out
dec
jp
in
loop
shlb
ffreep
jge
fidivl
dec
enter
out
xor
or
addr16
jp
xchg
sbb
mov
stc
addr16
ficompl
arpl
jmp
aad
jbe
push
mov
mov
lret
int3
cmp
shlb
cli
or
sbb
outsb
or
dec
dec
xor
inc
fcmovnb
jns
xor
idivl
in
sub
fdivl
cmp
or
add
cmp
adc
movsl
add
into
or
jns
sub
mov
xchg
and
mov
cmc
and
xlat
adc
mov
cmp
out
addb
mov
inc
std
cld
mov
pop
int3
sbb
jmp
popa
mov
popa
pop
push
fildll
jcxz
mov
daa
test
add
inc
lahf
out
lock
ds
jo
xchg
lahf
and
leave
mov
test
std
xchg
jbe
hlt
repnz
push
outsl
loope
imul
dec
ja
sub
daa
rorb
adc
outsb
imul
pop
mov
adc
push
fisubrs
sub
cwtl
jl
jbe
enter
into
mov
addr16
pushf
dec
rorl
inc
add
mov
cmp
xor
dec
sub
inc
mov
stos
jle
jno
stos
subl
pop
adc
outsb
mov
xchg
movsl
jmp
push
idivb
sbb
push
lahf
in
pop
repz
push
mov
push
movsl
inc
dec
gs
js
pop
xchg
dec
data16
pop
or
cmpsl
test
in
aad
or
jne
addr16
in
xchg
cmovne
inc
cld
jb
out
pop
in
fbstp
mov
inc
push
xor
or
in
sbb
sti
adc
cli
dec
cld
lcall
pop
pop
cltd
mov
rorb
mov
movsb
sub
rclb
stos
ror
call
cmp
movsb
sub
sub
push
xor
cmp
call
adc
jle
test
mov
mov
ret
test
mov
incl
add
and
adc
jo
bound
data16
pop
mov
mov
stos
and
lock
cmpsl
jp
cli
dec
mov
sahf
rorl
cmp
stc
mov
gs
pop
aaa
or
jge
into
rorb
inc
enter
iret
mov
push
loope
inc
out
adc
fimull
add
xchg
cmp
fwait
push
gs
mov
aad
inc
xor
jecxz
jbe
push
or
adc
jbe
mov
nop
mov
and
and
mov
sub
mov
leave
mov
in
loope
ret
inc
add
jo
imul
push
mov
subl
fucom
sub
or
mov
inc
shrb
fwait
dec
sbb
repnz
push
jbe
loop
fwait
pop
adcl
xor
jp
jecxz
in
mov
cwtl
jge
add
push
and
dec
push
js
test
in
or
xchg
mov
jge
dec
arpl
cmp
sbb
clc
shll
inc
cmp
mov
and
adc
push
dec
or
es
and
mov
ret
fwait
icebp
scas
sbb
or
mov
test
cmp
xor
and
aas
in
push
into
mov
jno
mov
rorl
std
test
insb
add
mov
outsl
fsubr
repz
push
mov
sahf
iret
ja
dec
pop
add
fistpl
fstps
pop
je
les
incl
bound
mov
xor
cmc
lods
scas
mov
inc
arpl
or
or
inc
test
adcl
fdivrl
test
sbb
iret
nop
repnz
cli
and
and
inc
aaa
das
xor
sar
inc
ss
rcrl
push
test
pop
inc
fidivrs
cmp
adc
rcr
push
sub
lret
stc
dec
adc
and
inc
scas
lret
dec
dec
cmp
mov
jmp
stc
add
cmpsb
je
leave
rorl
and
lahf
jle
movsb
jle
mov
rorb
xchg
outsb
add
icebp
xchg
shrb
mov
cltd
pop
and
fidivs
ret
filds
xor
and
adc
or
sti
pop
cmp
lods
push
push
add
cli
and
pop
clc
call
dec
add
sub
dec
outsl
mov
enter
xchg
mov
into
cmpsl
mov
in
or
sbb
sahf
addr16
add
pop
les
add
inc
sarb
pop
inc
xor
dec
pop
sbb
out
xchg
insb
mov
xchg
jo
jne
pusha
lret
push
addr16
cs
aas
insl
mov
or
test
or
pop
call
push
testl
mov
jnp
pop
in
vpunpcklwd
cmp
sbb
jg
mov
call
xchg
pop
xor
adc
jge
mov
or
movsb
aas
xchg
mov
jb
add
push
repnz
mov
stc
add
hlt
push
sbb
ret
push
mov
mov
jb
and
fwait
dec
fwait
inc
and
xor
cs
or
inc
xchg
mov
xor
mov
les
addr16
lods
ficoml
push
push
pop
jne
aaa
outsl
mov
jge
cmp
cmpb
jb
nop
jb
adc
inc
sbb
jae
imul
dec
ret
or
fbld
test
adc
fnstenv
inc
inc
and
jb
fldenv
pop
inc
push
xor
je
jle
cs
out
jecxz
ret
mov
inc
sub
xchg
xor
adcl
pop
or
decl
mov
roll
adc
fcoms
mov
lods
lea
scas
mov
clc
add
mulb
mov
jge
jp
pop
in
sub
adc
shrl
jnp
push
mov
fiaddl
add
fs
dec
jno
jns
xor
addr16
fildll
movsb
ja
adc
or
inc
push
ss
and
push
clc
xchg
adc
add
jns
or
xchg
jle
mov
popf
fdivs
insb
mov
push
adc
loopne
bound
pop
jns
fidivs
and
out
aaa
rcrl
sub
fwait
pop
scas
je
rcrl
test
leave
insb
mov
xor
pop
nop
sub
call
imul
cs
mov
jae
push
gs
pop
ljmp
in
insl
imul
push
inc
add
xchg
dec
test
or
and
stos
andl
pushw
pop
inc
mulb
test
sbb
pop
arpl
test
lcall
xorl
jle
fildll
jnp
leave
sbb
sub
cs
add
sub
and
in
jg
push
cmpsb
sti
cmc
mov
fadd
jbe
sub
mov
dec
sbb
push
mov
std
or
and
out
cld
jb
jnp
adc
out
sti
ja
icebp
push
aaa
xchg
test
aad
xchg
jg
mov
rorl
push
fbld
mov
xchg
adc
mov
sahf
sub
sbb
and
fs
add
out
inc
lock
loope
push
dec
push
jmp
jmp
pop
cld
xor
into
fwait
mov
loopne
les
mov
clc
push
xchg
insb
aad
jge
adc
push
jmp
leave
sbb
push
xchg
movsl
outsb
test
push
xchg
mov
test
outsb
inc
jp
push
clc
jb
pop
test
lock
out
lock
dec
xor
out
push
inc
add
add
mov
std
insb
into
xor
and
or
mov
mov
xchg
mov
xor
mov
mov
dec
outsl
jns
pop
inc
aaa
enter
or
sbb
sbb
pop
in
jno
push
mov
mov
mov
lods
pop
inc
aas
push
sub
mov
aad
icebp
mov
sbb
outsb
stos
jno
shlb
int3
out
enter
inc
das
pop
jg
xchg
mov
lret
stc
incb
hlt
adc
addl
cltd
push
lahf
hlt
xchg
in
cltd
cmpsb
pop
dec
jmp
bound
sahf
lea
das
xchg
pop
push
mov
or
mov
pop
mov
mov
sti
push
mov
cld
add
cli
leave
rol
and
or
cmpsl
movsb
lahf
pop
mov
inc
jg
dec
les
mov
test
lcall
popa
cmp
xor
fmuls
popa
int3
cli
stc
xchg
divl
mov
outsb
icebp
mov
mov
add
jo
ja
stos
les
mov
xchg
into
clc
mov
and
adc
out
imul
test
mov
pop
and
icebp
icebp
lahf
push
cmp
call
mov
sbb
mov
xlat
in
or
or
mov
data16
shl
lret
popf
out
push
mov
pop
dec
cmp
jecxz
call
test
xor
mov
in
sub
pusha
mov
pop
enter
loopne
mov
insl
jo
aaa
add
das
mov
sbb
pop
jle
pop
orl
int3
pop
nop
sahf
sbb
andb
out
sub
and
dec
pop
push
les
xor
rclb
cmp
mov
lods
int
hlt
mov
cmp
adc
lcall
imul
out
fldenv
bound
jo
mov
adc
inc
push
movsl
fyl2xp1
xor
mov
test
jmp
mov
sbb
lret
xchg
push
fcoms
scas
call
bswap
jb
lea
fcomi
pop
dec
mov
xlat
lret
xor
pushf
cmpsb
cld
mov
scas
cs
cmp
popa
gs
dec
push
test
mov
bound
jp
jnp
test
insl
cs
out
cmp
adc
js
icebp
mov
dec
sub
push
ret
test
loop
jne
push
xor
jb
push
pop
dec
xchg
ret
inc
insb
shll
int3
push
add
push
int3
mov
bound
nop
dec
cmpsb
loope
cmpsb
arpl
and
sbb
mov
jl
pushf
inc
adc
mov
or
movsl
repz
jmp
mov
cmp
xlat
xor
pusha
jg
scas
push
lret
addl
rcll
nop
pop
jp
rcr
lret
in
outsl
sbb
cmpl
lahf
adc
test
test
xchg
cmp
lods
pop
lcall
shll
enter
stc
popa
fdivr
cmpsl
pop
mov
mov
les
pushf
cmc
and
std
fisttpll
sub
cmp
add
push
imul
fwait
cli
sbbl
ss
les
sbb
or
je
imul
pop
sbb
loope
xchg
bnd
add
and
xor
rcl
inc
in
xchg
es
dec
pop
dec
adcl
xchg
ret
into
xor
mov
lods
sub
es
shrl
jnp
clc
loop
aas
in
xchg
js
fimuls
mov
sahf
inc
dec
ja,pn
push
in
lret
test
jge
nop
sbb
fnstcw
shrb
dec
add
pop
mov
sub
into
push
aas
adc
cs
out
loope
outsb
pop
mov
push
out
mov
int
shrl
pop
cwtl
dec
std
inc
enter
push
mov
push
movsb
dec
imul
pusha
pop
into
pop
inc
mov
or
cmp
xor
mov
add
movsb
dec
test
popf
add
or
movsl
outsl
sbb
lock
gs
inc
and
pop
loop
push
mov
test
pop
ret
xchg
fdivr
int3
jmp
push
pop
jns
sub
cmp
bound
popa
dec
imul
push
cmpsl
cmp
pop
jecxz
data16
negb
adc
cwtl
xor
in
imul
or
xchg
testl
inc
stos
leave
mov
jae
fcompl
lea
lret
jno
addr16
add
ss
inc
fists
or
in
pop
pop
scas
mov
or
sub
fcmovu
rolb
cmp
mov
or
insb
aad
jge
jbe
jmp
jns
jmp
lret
cmp
mov
in
test
into
cmp
mov
ss
cs
pop
push
arpl
cmp
push
mov
dec
push
sbb
adc
xor
sub
bound
sar
mov
lret
je
mov
push
loopne
inc
sub
cs
adc
loop
scas
sub
pop
enter
out
jo
out
lahf
cmp
fs
pop
adc
aas
pushf
roll
adc
lock
test
rcll
outsb
xor
xchg
leave
sub
mov
shr
les
cmp
stos
lret
inc
das
xchg
jae
popa
jo
ss
pop
dec
or
ja
adc
push
scas
les
insl
roll
movsb
cwtl
inc
scas
out
mov
add
inc
cld
add
pop
ss
jae
jno
add
rcrl
dec
pop
adc
add
mov
mov
mov
in
mov
testb
data16
xchg
in
xchg
movsl
shrb
jo
fwait
lods
ljmp
sub
mov
notl
add
stos
jl
sbb
sbb
dec
inc
xchg
jle
icebp
inc
jmp
shrl
adcb
cs
sub
xlat
xchg
cmp
icebp
or
leave
hlt
push
pusha
movsl
repz
lea
sahf
outsb
lods
fwait
and
inc
jns
nop
mov
incb
test
xchg
dec
and
pop
xorb
int3
add
push
sub
in
call
inc
jb
or
imull
enter
mov
ljmp
in
pushf
sti
or
push
insb
and
mov
mov
icebp
cmpsl
arpl
popa
dec
or
dec
roll
inc
enter
and
pop
ret
negb
adc
inc
adc
popa
repnz
aad
adc
cld
xor
mov
cmp
xchg
mov
scas
aas
pop
jo
xlat
movsl
shlb
pop
je
xchg
xor
cs
inc
mov
jne
xchg
cwtl
clc
inc
loop
mov
lds
mov
stc
test
xor
into
mov
and
int3
rcl
aam
push
mov
jmp
pop
jne
dec
xchg
pusha
mov
push
cmpl
std
cmp
addr16
pop
faddl
xchg
iret
cmc
repz
lods
int
dec
push
mov
jmp
int3
in
into
sub
dec
dec
inc
lds
jnp
inc
add
jne
adc
call
hlt
or
into
adc
push
lock
dec
pop
inc
rcll
icebp
into
es
or
in
jle
out
or
pusha
and
jp
in
out
mov
dec
jno
mov
cmp
jg
adc
xor
jo
mov
xchg
cmp
ror
push
and
add
add
or
fbld
xchg
sti
cmp
cmpsl
jno
movsl
rclb
or
xchg
pop
stos
mov
out
cmpsl
push
stc
pop
adc
adc
push
outsl
fdivr
fdivr
xor
incb
mov
xor
lret
or
dec
dec
dec
push
lods
add
inc
push
cwtl
xchg
fwait
rcrb
cwtl
cmp
ret
fcoml
dec
lahf
shll
xchg
test
sti
or
fmulp
xchg
dec
mov
out
cltd
jle
cld
cmp
lret
into
mov
sbb
movsb
cmpsb
xchg
aad
or
rorb
adc
sbb
and
push
adc
addl
pop
xchg
inc
sub
pop
inc
inc
pushf
push
jp
cmpsb
pusha
stos
mov
jae
inc
insl
shll
adc
xchg
std
insb
into
insl
mov
xor
jecxz
arpl
mov
lahf
adc
icebp
std
aaa
and
and
add
pop
test
sub
jg
cli
xor
loop
scas
pop
stos
inc
imul
lods
repz
fucomp
jecxz
bound
xor
lds
andb
in
ja
lds
insb
clc
rolb
jns
fdivs
push
outsw
lods
inc
push
jg
es
mov
xor
dec
sub
mov
mov
leave
xchg
jno
lret
sqrtps
jecxz
pop
xchg
mov
or
hlt
mov
dec
mulb
rcll
in
jne
dec
aad
or
mov
pop
mov
js
xchg
in
pushf
in
in
subb
pop
xor
fldl
fld
int3
jne
sti
fcoml
pop
cli
je
cs
dec
jl
shrl
jno
push
aad
cmc
dec
movsb
mov
repnz
or
cmc
pop
leave
cmp
std
js
scas
push
xchg
in
stc
mov
cmp
fnstenv
pop
stos
gs
xor
mov
inc
test
pop
nop
mov
test
out
rorb
cmp
cs
lods
xor
xchg
mov
inc
mov
or
mov
mov
out
push
push
inc
adc
insb
xchg
or
mov
mov
in
mov
sub
push
mov
loope
jns
adc
adc
pop
loopne
in
cwtl
pmaxsw
jno
icebp
aas
sarb
inc
data16
jne
bndldx
or
xlat
adc
add
cmpsl
lea
cmp
test
nopl
xor
xchg
fcomps
outsb
scas
or
fisubl
clc
loop
mov
repnz
dec
mov
or
mov
pop
jge
push
stos
int3
sub
daa
push
mov
in
inc
lcall
jno
sub
js
adc
ljmp
jnp
std
cmp
dec
lcall
mov
movsb
mov
mov
pusha
repnz
stos
dec
insl
fisubrs
or
mov
aam
push
in
cli
mov
lret
pop
nop
mov
test
loop
fidivrs
pop
stc
int3
inc
adc
inc
fs
xor
fsubrl
or
inc
lcall
sub
xor
pop
testl
test
xchg
inc
stos
adc
or
out
push
cmc
int3
xor
inc
mov
lock
add
aad
pop
xchg
cmp
aaa
sbb
push
mov
dec
adc
sbb
jns
or
test
push
jns
pop
pop
sbb
mov
ja
pop
add
and
mov
xor
subb
jge
adc
fidivl
pusha
push
daa
push
cmp
push
sbb
mov
es
shl
sbb
fidivrl
push
jae
fistpl
mov
dec
pushf
and
mov
and
and
xchg
add
xor
jge,pt
shll
push
mov
xor
mov
cli
sub
pop
lock
fidivrs
loop
pop
mov
or
add
hlt
xchg
mov
cmp
pop
nop
imul
mov
nop
pop
mov
mov
lret
and
push
rolb
jns
push
data16
add
stos
aam
inc
sub
cmp
mov
sub
sarb
loopne
cmc
ds
pushw
arpl
xor
lret
movsl
loop
sub
adc
das
xchg
and
push
imulb
out
lret
pop
repnz
cli
mov
push
cli
mov
pop
xor
out
repz
dec
add
into
call
and
xchg
jno
int3
aaa
repz
sarl
hlt
mov
subl
xchg
mov
push
fadds
push
sbb
test
sarb
cmpsb
mov
sbb
xchg
sbb
test
aam
popa
lock
adc
fdivrl
pop
xor
xor
jae
cwtl
mov
andb
shll
nop
shl
xchg
mov
add
mov
jmp
scas
in
stc
popf
jge
push
mov
dec
lahf
movsb
jb
inc
xlat
pusha
xchg
repnz
test
mov
add
jl
xor
or
cs
aaa
pop
push
lret
jns
pushl
mov
pop
mov
push
jne
jae
inc
dec
addr16
mov
push
shrl
cld
movsl
lock
aas
lock
insl
cmp
xchg
push
pop
loop
adc
and
push
xor
jno
shl
push
into
mov
cmc
dec
inc
into
ficoms
shll
lret
loopne
inc
and
inc
sar
in
lret
adc
cmc
icebp
jnp
dec
xlat
mov
adc
cmp
cli
jp
paddsw
aas
mov
xor
jns
jbe
out
or
pop
fsts
push
push
sti
xor
jae
testl
pop
shll
push
in
add
pop
push
mov
std
frstpm(287
mov
mov
xchg
inc
fs
lods
bound
rcrl
aaa
xor
cmp
mov
shrb
jp
std
xor
or
mov
lcall
jg
pushf
jo
mov
test
jmp
mov
xchg
xchg
fidivs
jns
sub
jge
pop
fistpll
jns
sar
imul
sbb
add
std
sbb
or
jo
add
adc
dec
mov
pop
cmp
outsl
incb
test
bnd
mov
mov
jp
xor
cmp
rorl
push
nop
hlt
push
cwtl
test
jnp
xor
cmp
stos
adc
mov
cld
sub
cmp
lock
push
and
shll
xchg
imul
lods
add
aas
arpl
jl
out
mov
add
test
xchg
pop
mov
add
lods
pop
inc
test
mov
mov
dec
dec
mov
fistpl
sbb
push
cmp
mov
arpl
sbb
ss
dec
movsb
pop
push
fisubrl
rcl
dec
fldt
mov
nop
mov
sahf
xor
push
rcl
into
out
cmp
push
sub
pop
sbbl
jae
adc
xchg
popf
js
pop
cmpl
adcl
xchg
loop
sub
mov
insl
iret
xchg
cmc
in
ficoml
sbb
xlat
push
mov
mov
adc
mov
push
nop
dec
mov
out
push
roll
out
movsb
lea
mov
mov
mov
mov
pop
test
mov
fisttps
inc
lahf
or
leave
lds
lds
gs
scas
imul
inc
lret
mov
repz
and
sub
pop
out
push
and
adc
leave
popa
sbb
xchg
or
and
cmp
mov
lea
movsl
adc
sbb
stos
loopne
lods
add
out
cmc
repnz
scas
divl
xchg
add
jne
mov
mov
adc
fsub
enter
jle
jecxz
pop
and
xchg
adc
xchg
in
mov
pop
sbb
dec
mov
mov
testl
mov
and
stc
fsubrs
xor
sbb
pushf
insb
fs
xchg
xchg
adc
jge
inc
push
pop
mov
inc
adc
repnz
sub
pusha
xor
mov
ss
adc
decb
xchg
sahf
jg
aad
out
sarl
pop
pop
lcall
mov
addb
pop
pop
ficoml
or
mov
popa
loopne
cmp
mov
inc
xor
cltd
and
mov
shlb
popa
shll
nop
hlt
stc
cmp
jmp
inc
lret
cmpsb
lcall
mov
dec
out
outsb
inc
jmp
push
cmpsl
fisubl
out
adc
ret
nop
arpl
and
jmp
imul
xchg
fidivs
je
shll
fs
pop
arpl
lea
outsl
sub
mov
loope
fimuls
push
and
mov
rcrl
popf
test
mov
push
bound
das
jle
stos
adc
cltd
dec
pop
out
js
enter
adc
lock
popa
call
xchg
cmc
or
enter
movsb
mov
mov
lcall
std
out
cmp
outsb
inc
mov
cmpsb
xor
shrl
cmp
orb
lret
scas
inc
mov
push
rclb
mov
jmp
xchg
mov
inc
jne
fwait
pop
mov
jmp
shll
fucomp
ret
sbb
mov
ficomps
mov
out
test
sahf
mov
mov
add
outsl
andb
iret
mov
add
daa
add
or
out
adc
shufps
push
cmp
out
sbb
lds
inc
xchg
pop
sub
iret
inc
fbld
cmp
or
nop
dec
sbb
sub
lea
cmp
xchg
inc
adc
cmp
lock
fmull
dec
das
mov
add
cmpsl
jecxz
fdivrl
jg
cmp
inc
ret
mov
xor
cs
aam
xor
xor
repnz
sub
adc
mov
or
xor
ret
lcall
sbb
and
xchg
xchg
or
push
scas
cmp
cs
dec
fidivrs
mov
xchg
xchg
adc
mov
lret
add
stos
mov
adc
push
sbb
inc
jns
cwtl
cld
addr16
fistpll
jno
or
push
push
lods
lcall
dec
adc
jno
xor
aad
jae
sbb
push
mov
fsub
fnsave
loopne
sub
fs
cs
gs
mov
icebp
mov
lcall
pop
sub
cmp
es
movb
stos
and
mov
or
and
pop
mov
mov
xchg
mov
mov
repz
inc
call
jmp
sub
outsl
orb
loop
cmp
jl
stos
repz
cltd
adc
adc
sti
pusha
ljmp
push
inc
and
nop
mov
mov
ja
in
cld
stos
dec
mov
xchg
and
js
sub
jbe
in
mov
scas
insb
cmp
data16
push
push
or
repz
fnstsw
xchg
add
mov
cs
jb
loopne,pn
jle
leave
scas
sub
es
push
push
or
or
jge
jg
adc
clc
cmp
pop
in
ret
rolb
jbe
mov
xor
mov
cltd
or
fstps
mov
in
lcall
call
mov
loop
outsl
pop
push
xchg
jb
fsubrl
cmp
lock
and
xchg
shlb
xor
or
xor
cwtl
xor
mov
ss
ljmp
jno
cmp
cld
dec
movsb
insb
mov
or
cmpsb
fs
lods
mulb
sbb
and
push
mov
adc
sub
jmp
out
xor
sti
sti
push
sub
add
xchg
push
add
hlt
daa
xchg
imul
in
mov
rcl
pop
mov
outsl
insl
mov
adc
div
lret
lods
adcl
xor
lcall
movsb
add
xchg
fidivs
xchg
adc
jno
fstpt
lahf
pop
jne
mov
xchg
pmaxub
inc
or
jge
jb
popf
stos
add
cmpsb
add
int3
test
icebp
cltd
fldl
test
push
ret
aaa
xchg
dec
es
mov
mov
cmpsl
mov
dec
add
popa
mov
xchg
mov
xchg
mov
les
mov
add
popf
xlat
jbe
hlt
jae
repnz
stc
gs
lahf
cmp
lcall
adc
adc
aad
shrb
xor
idiv
mov
push
push
xor
in
imul
inc
push
inc
dec
xor
inc
sub
fiadds
mov
pextrw
adc
das
sbb
rolb
jb
dec
add
addr16
gs
adc
mov
or
loop
nop
fldcw
icebp
mov
scas
pop
fstps
lea
stc
dec
push
sarb
test
dec
sbb
mov
inc
outsl
adc
pop
mov
mov
jne
jl
scas
add
hlt
sub
das
push
jnp
popa
jo
std
ss
dec
xor
popf
gs
pop
es
movsb
sub
mov
loopne
cmpl
std
notl
clc
shl
dec
push
in
ljmp
mov
add
cmpsl
cli
lcall
sbb
cmpsb
push
stc
daa
or
fistps
sbb
daa
push
cltd
lahf
push
out
jne
popf
fistl
ficoml
adc
ja
out
dec
xchg
add
xchg
lods
xorl
pop
sti
sub
mov
cmp
subb
movsl
push
mov
mov
adc
cmpb
loope
pop
mov
rcrl
inc
push
inc
or
xor
mov
dec
je
and
ret
xor
fwait
and
or
mov
push
int
inc
xchg
sbb
loopne
sub
shll
xlat
stc
dec
popa
shll
xchg
lcall
dec
movsb
test
jl
iret
test
xlat
push
cmp
pushf
loop
pop
clc
sbb
mov
mov
jp
jg
inc
pop
jno
sbb
lahf
packuswb
lahf
adc
aam
push
rcll
mov
in
mov
or
sbb
push
adc
leave
push
hlt
js
mov
test
cmp
mov
xor
iret
lcall
or
arpl
sbb
inc
dec
icebp
rcrb
jmp
mov
das
int
jp
pushf
mov
or
add
inc
pop
mov
xrelease
inc
pop
or
jecxz
dec
inc
cwtl
pop
push
es
mov
icebp
fdivs
pop
add
call
or
mov
sub
adc
adc
cmp
cltd
cmp
lcall
loop
loope
cmpsb
jl
and
adc
xchg
push
rcrb
mov
mov
mov
xor
xchg
ret
in
outsl
or
adc
sbb
lahf
rcrb
mov
add
and
sub
mov
xor
stos
das
xchg
dec
insb
cmp
scas
xchg
inc
movsl
jne
and
jns
lds
dec
pushf
xchg
out
inc
cmp
outsl
push
paddsb
imull
arpl
cmpsl
jg
stos
out
xchg
pop
iret
ret
shll
js
adc
decl
sahf
mov
jo
pop
mov
daa
outsb
out
lret
dec
gs
pushf
mov
fcoml
push
sub
jmp
aam
mov
push
rcrl
add
push
lcall
mov
cmp
loopne
sub
insl
dec
aam
jg
xor
outsl
mov
pop
inc
int3
xchg
mov
xchg
idivb
and
pop
inc
push
xchg
mov
scas
pop
jp
mov
or
push
mov
xchg
stc
mov
push
rorb
dec
inc
out
repnz
jge
dec
sub
mov
and
loop
cmp
dec
aad
aad
sub
jns
push
mov
mov
jb
push
mov
aad
bound
push
and
pop
push
out
and
movsb
lea
push
aas
jecxz
jp
pop
imul
cs
rolb
mov
inc
sub
jmp
shlb
inc
insb
push
pushf
ds
movsb
jge
lea
out
mov
insl
popf
movsl
xchg
pusha
pop
fs
jp
bound
hlt
clc
push
xchg
inc
mov
loop
shrl
bound
rclb
jecxz
sbb
imul
jne
ds
cmovp
ss
inc
insl
sti
dec
in
in
lods
pop
scas
pop
sub
bound
pop
in
outsb
stc
aas
decb
and
cmc
sahf
cmp
pop
fildl
pushf
lea
inc
int
cltd
les
mov
push
enter
mov
add
mulb
pop
xchg
mov
sbb
xchg
addb
jecxz
mov
sahf
jb
popf
outsb
mov
movsl
jp
jnp
pop
inc
test
pop
and
rorl
or
push
mov
outsb
or
pop
mov
lods
and
imul
adc
jecxz
or
push
test
rorb
mov
push
push
ljmp
jne
sub
aad
lds
mov
mov
clc
fisttps
cmc
mov
push
sahf
shrl
jo
pop
mov
jb
fildl
icebp
popa
adc
and
jg
leave
in
filds
xlat
push
mulb
hlt
push
js
push
ret
jmp
popf
test
pop
pusha
dec
lahf
push
mov
mov
pop
popa
cmp
xchg
das
jno
mov
mov
scas
mov
fsubrl
pop
jne
repz
cs
sbb
out
decb
nop
fs
jbe
sub
adc
and
movsl
outsb
pop
push
mov
aas
ret
inc
rclb
mov
or
xchg
xchg
jle
pop
je
shrb
inc
and
mov
int3
ds
jnp
imul
arpl
adc
and
or
cmpsb
fcoml
mov
and
lock
iret
loop
dec
mov
or
aas
mov
lea
jno
imul
jl
xchg
icebp
push
add
pop
push
mov
fildll
pop
inc
fmul
or
sbb
lods
jbe
lods
into
int3
push
inc
sbb
lret
ljmp
lret
inc
mov
out
cmpsl
mov
xlat
jge
sbb
inc
outsb
scas
xlat
roll
lods
je
push
mov
sub
std
pop
cld
scas
dec
loop
fdiv
jae
pop
sub
mov
mov
clc
fidivrs
fwait
insb
js
push
add
xor
lock
int
pusha
scas
pushf
daa
leave
inc
push
gs
cmp
mov
jno
mov
test
icebp
cmp
push
imul
mov
fcompl
push
test
mov
xchg
mov
and
iret
les
cltd
sarb
add
aad
mov
pop
shl
fbstp
addr16
int
dec
lea
aam
lcall
ret
arpl
lds
inc
mov
dec
xor
popf
mov
js
xor
jmp
pop
xchg
sbb
cmp
or
push
test
out
push
jo
mov
imul
ljmp
test
mov
or
call
dec
pusha
mov
jecxz
mov
hlt
sub
and
add
push
mov
mov
mov
push
sbb
fbld
jae
pop
mov
inc
push
sub
es
test
pop
aam
mov
cli
imul
cmp
pusha
call
popa
and
inc
sbb
ficoms
addr16
shlb
testb
repz
movsl
dec
mov
jle
outsl
rorb
cld
movsl
out
int
ret
out
mov
hlt
inc
lods
cltd
inc
push
sahf
adc
jb
pop
and
je
dec
mov
sub
repnz
aam
in
xor
pop
jnp
jne
pop
outsl
ret
adc
cmc
mov
mov
repnz
cmp
jg
in
xchg
push
inc
adc
mov
gs
jo
inc
mov
jge
push
sbb
int3
xchg
jae
adc
cld
xchg
cmp
adc
jns
test
dec
xchg
sbb
int
es
sub
dec
pop
fbstp
jecxz
xlat
imul
mulb
or
fdivrl
add
test
xchg
dec
lcall
lahf
push
in
inc
sbb
subl
dec
addl
mov
sbb
add
xlat
jo
xchg
lcall
xchg
xchg
sti
jle
add
mov
pop
push
add
xorb
jp
cmpsl
cli
cmpl
dec
jo
rcrb
shll
push
int
adc
adc
and
aad
or
stc
add
cmpsb
aas
lock
lahf
mov
in
adc
imul
ljmp
repz
cmpb
cmpl
inc
dec
xorb
dec
jge
ljmp
push
fisttps
out
not
ljmp
imul
mov
or
push
pop
add
mov
les
icebp
xchg
lds
lret
mov
xrelease
ret
sub
pop
test
mov
dec
xchg
subl
lea
adc
aam
ret
das
stos
inc
jmp
xor
sbb
fistpl
cmp
cwtl
into
mov
mov
jbe
push
mov
cmpsb
aaa
ficoms
lods
push
je
or
lea
xorb
filds
push
xor
outsl
movsl
cmp
pop
daa
in
cmp
xchg
xor
inc
xchg
test
sbb
and
jmp
cltd
cmpsb
out
jp
mov
lret
outsl
pop
imull
pop
movsl
stos
mov
sub
je
inc
cltd
xchg
adc
cmp
in
adc
outsl
fwait
and
pop
out
stc
cs
iret
adc
cmp
dec
loopne
aaa
mov
adc
push
push
pop
pop
push
ror
xchg
pop
xchg
dec
cs
rorb
adc
sbbb
xchg
out
jnp
mov
sub
popa
mov
push
push
das
aad
adc
insl
dec
es
or
push
dec
movsb
data16
stc
jmp
in
in
mov
inc
pop
fiadds
call
jg
test
stc
gs
out
test
lahf
mov
push
sarl
sbb
mov
cmp
lret
fildl
inc
or
outsl
inc
push
cmp
gs
adcb
cmp
pop
mov
xor
ss
jp
xor
inc
lock
mov
es
and
or
cmp
mov
rorb
xor
lcall
jmp
idivl
xchg
int
cmpsl
ja
outsl
mov
or
or
stc
push
push
adc
imull
loop
push
push
aaa
pop
and
fwait
push
clc
sbb
inc
mov
pusha
cli
mov
pop
lahf
dec
dec
je
mov
push
sub
xor
xor
scas
adc
lahf
data16
dec
jb
mul
and
int
mov
xchg
popf
loop
adc
or
adc
jmp
mov
dec
sysret
push
push
pop
aad
cld
lock
xchg
inc
idivl
lahf
jbe
sbb
sub
cwtl
lods
pop
or
scas
xchg
filds
je
add
dec
lcall
scas
mov
lret
xor
xchg
rorl
sub
movsl
or
popa
dec
lcall
jno
sbb
fadds
and
xchg
daa
jno
mov
mov
out
jb
pop
and
loop
shll
mov
outsb
mov
sub
je
in
push
cmp
sbb
repnz
jnp
mov
dec
test
push
sbb
and
loopne
outsl
push
ret
subl
inc
out
outsb
ljmp
xchg
ds
cmp
lea
pop
clc
pop
mov
cmp
pop
fs
pop
cmpsb
cld
fists
adc
xor
lcall
mov
fisubs
imul
insl
lods
jno
imul
jmp
insl
push
in
leave
std
xor
sub
and
inc
dec
mov
xor
sbb
cmpl
insl
pop
incb
fdivs
arpl
push
stos
gs
xchg
mov
mov
push
sub
and
popl
mul
add
das
jg
mov
sti
mov
push
les
xor
mov
arpl
dec
fnstenv
repnz
xor
mov
lcall
cmp
scas
jbe
mov
cmp
ljmp
movsb
cmc
imul
jecxz
jae
jp
fadds
jo
dec
in
stos
out
cld
fistpl
int
mov
jecxz
loop
cmpsb
xor
shll
adc
leave
jne
les
aad
pop
cmc
out
or
movsb
pop
xchg
xchg
mov
loope
sbb
lahf
lock
adc
mov
pop
jo
xchg
lea
adc
or
mov
ss
int3
gs
mov
push
add
mov
stos
loopne
stos
pusha
mov
dec
xlat
pop
dec
mov
popa
icebp
fcoml
pushl
pop
out
or
imul
and
mov
xor
sbb
xchg
mov
das
pmulhuw
inc
test
les
subl
shrl
xchg
ja
test
add
cmpsl
leave
mov
push
pop
add
hlt
cs
cs
cmp
mov
data16
jecxz
pushl
cmp
dec
es
push
sub
sti
push
or
jmp
adcb
add
adc
dec
inc
adc
pop
loope
js
jg
jb
xchg
adc
dec
adc
insl
and
insb
inc
cmp
imul
mov
adc
jae
mov
ja
shrl
out
fistpll
and
ss
mov
add
ja
mov
fwait
scas
sarb
sub
push
pop
in
xor
add
adc
daa
cmpsl
sub
jno
mov
fwait
mov
fldt
add
hlt
js
dec
pusha
lret
adc
add
mov
or
sub
mov
xchg
ja
cmp
aam
std
ret
arpl
andl
xor
push
lcall
es
adc
pop
icebp
fwait
pop
jbe
pop
mov
and
push
in
xchg
inc
pop
fcmove
jae
test
and
jmp
push
pusha
mov
addr16
shrl
stos
and
sahf
dec
jae
sub
rcll
xor
push
inc
mov
sbb
cmp
or
jecxz
aam
mov
mov
popf
mov
nop
icebp
push
add
jb
jp
and
stos
imul
pushf
jmp
pop
call
pushf
jns
xchg
lea
stos
inc
andb
test
inc
and
sbb
shll
xor
add
shlb
push
scas
scas
xor
push
sti
jno
idiv
mov
push
mov
fwait
inc
int3
push
ret
adc
mov
mov
jne
dec
fldt
inc
mov
pop
shl
cmp
cmpsl
pop
in
shl
mov
outsb
data16
stos
xor
leave
dec
mov
gs
insl
mov
incb
dec
scas
jmp
sub
pop
sbb
add
push
inc
lods
add
scas
in
pop
or
sub
inc
ja
rcr
pop
int3
pop
mov
lcall
pop
inc
cmp
inc
into
sub
xorl
add
dec
gs
aam
and
xor
cmpsb
sub
push
pop
jb
xor
ss
pop
jbe
shll
dec
cwtl
mov
xor
cmpsl
out
mov
ljmp
imul
fsubrp
scas
and
test
add
add
adc
in
ds
outsb
fimull
repz
xor
cs
gs
mov
nop
mov
inc
adcl
mov
popa
inc
mov
and
cli
xorl
fs
es
rcrl
fisubrl
daa
mov
jmp
lea
dec
lods
sub
out
or
mov
jl
mov
push
or
inc
or
and
nop
shll
adc
add
into
nop
jp
adc
pop
mov
arpl
mov
mov
out
sub
in
mov
push
enter
icebp
ds
sub
xchg
and
ret
pop
loopne
dec
ljmp
pushf
push
mov
enter
hlt
movsl
xor
out
add
aaa
jle
mov
pop
clc
je
jo
xlat
inc
insl
jne
jno
popf
cmp
sbb
leave
test
in
add
nop
pop
cmp
imul
pop
into
adc
adc
daa
push
mov
or
push
push
popf
roll
or
daa
xor
out
jnp
test
std
daa
cltd
aad
and
sub
xor
dec
xchg
dec
mov
adc
andl
movsl
aaa
push
pop
lods
inc
and
test
popa
lds
decl
mov
mov
inc
daa
loopne
fsub
dec
enter
ret
pop
or
sti
es
pop
pop
aam
xchg
inc
test
incb
xor
or
test
fisubs
sub
lods
cmc
mov
arpl
cmp
mov
aad
addl
out
sbb
pop
out
pop
sbb
repnz
arpl
xchg
xchg
jae
xchg
testl
xor
cmp
mov
mov
in
mov
cli
jno
loop
sbb
jnp,pt
push
idivb
mov
movsl
lods
into
fucomp
push
add
sbb
fldl
mov
test
popf
push
lds
mov
popa
imul
into
add
pop
xchg
stos
dec
inc
pop
push
adc
aas
jl
cmp
xchg
mov
test
xchg
push
out
and
jb
scas
sbb
xlat
icebp
pusha
cmp
xor
and
mov
out
scas
mov
inc
cmp
adc
bound
ss
shrb
ja
lret
lods
xchg
lahf
adc
cmpsb
in
fstps
mov
ret
jnp
fcomps
enter
ljmp
mov
call
jae
test
mov
mov
lods
push
loope
pop
mov
jae
or
or
jg
ret
iret
push
test
out
jle
dec
mov
sahf
imul
jae
jl
cltd
xor
inc
int
scas
and
mov
and
xchg
ss
and
mov
sbb
fistpl
ret
cmc
cmp
divl
iret
jle
fdivp
or
sbb
ljmp
inc
xor
jge
push
mulb
hlt
and
faddp
dec
add
out
mov
sub
pop
stos
push
fldenv
mov
sahf
lret
cmc
fldenv
insl
dec
mov
outsl
aam
push
cmp
jne
int
cmp
or
inc
sub
pop
aam
and
shlb
mov
adc
cmp
dec
popf
call
adc
mov
dec
pusha
mov
mov
xor
pop
jne
xchg
push
daa
cwtl
or
mov
bound
test
sub
xchg
jo
mov
lret
gs
lret
std
es
aad
lret
push
fwait
nop
jns
rorl
fs
add
mov
cltd
jle
sbbb
jns
jb
push
js
xor
xchg
inc
in
xchg
add
mov
sbbl
ljmp
or
jle
scas
mov
pop
cmpl
in
mov
fs
test
mov
cld
pop
lret
inc
inc
push
into
je
je
and
mov
jmp
flds
xchg
jo
insl
lret
decl
out
aad
jmp
push
adc
add
ss
insb
loopne
movsb
push
out
xchg
sti
cmpsb
jmp
repnz
sbb
mov
mov
popa
mov
xlat
lods
pusha
pop
test
je
xchg
pop
or
push
call
mov
popa
mov
and
xor
cld
andl
xor
fimull
push
pop
orl
cli
jg
mov
loope
stos
pop
and
or
adc
xor
mov
jle
stos
pop
pop
bound
adc
mov
sar
out
xchg
idivb
fldlg2
xchg
cs
cmp
push
pop
mulb
dec
or
loop
leave
mov
push
cmc
dec
ret
aaa
dec
les
or
stos
sub
add
ja
sub
in
add
inc
pop
push
mov
dec
xchg
pop
sbb
std
les
stos
out
mov
push
cwtl
cmp
daa
inc
push
sbbb
dec
and
adcl
jl
jo
or
pop
addr16
les
outsb
push
repz
sub
testl
push
add
loopne
xchg
pop
fwait
inc
lcall
xchg
fistps
movsb
push
xor
ret
cmpsb
mov
inc
lret
push
dec
jecxz
les
xchg
out
clc
rcl
test
push
dec
ficompl
or
fcompl
add
dec
in
cmp
mov
imul
sbb
push
and
bswap
lods
jnp
sub
rorl
imul
dec
repz
inc
outsb
stos
subb
pop
push
xchg
ss
mov
outsb
test
arpl
xor
mov
and
cmp
hlt
clc
pop
cmp
movsl
ret
jnp
push
cmp
negl
add
or
dec
inc
sbb
ds
rolb
add
cmpsl
scas
mov
out
mov
clc
cmc
ds
test
inc
fs
andl
pusha
push
test
fimuls
lcall
mov
adc
mov
inc
divb
xchg
stos
add
cmc
notl
outsb
cmpsl
mov
mov
lahf
xchg
jp
inc
sub
mov
pop
cmp
jmp
std
xchg
in
fldt
stos
insl
xor
int3
movsl
adc
rolb
jno
mov
inc
pop
je
jmp
outsl
iret
in
into
les
mov
add
jecxz
int3
sub
arpl
or
gs
fs
jb
cmp
jno
cmc
pop
pop
pop
mov
or
pop
je
js
sub
iret
stc
mov
or
inc
adc
shll
js
addr16
test
jp
lods
iret
sbb
adc
xor
mov
subl
notb
fisubrl
dec
push
add
sbb
or
out
pop
decb
test
mov
push
lods
push
jo
mov
ret
imul
mov
and
push
js
test
lahf
jmp
push
dec
popa
lret
adc
xchg
fadd
lods
mov
cld
xchg
call
movaps
add
andb
adc
je
pop
loope
outsb
push
jae
and
shll
jmp
adc
lock
iret
jb
lret
out
call
lret
jge
push
into
popf
jae
pushf
mov
push
xorb
out
or
jg
js
test
pop
inc
sahf
mov
push
cmpl
scas
jle
std
movsb
rcr
pop
roll
es
mov
push
mov
sub
pop
xor
sub
jnp
dec
sub
out
fs
rcr
cmp
cli
mov
popa
jge
ss
clc
sub
shlb
dec
out
push
test
je
iret
mov
imul
or
push
jo
lea
push
add
out
jae
into
icebp
pop
dec
jo
in
lret
int
aam
popa
lret
rorb
and
cmp
mov
lods
mov
inc
and
je
ret
loopne
test
retw
cmpsb
inc
hlt
cmp
inc
sbb
pop
lret
and
repnz
sbb
enter
aaa
pop
comiss
jmp
call
rol
outsl
dec
das
repz
test
pop
and
or
jl
rolb
jae
cmpsl
jbe
inc
jl
call
leave
out
pop
shl
in
jb
cli
push
rcl
jns
leave
pop
cs
or
arpl
xor
mov
rorl
or
into
xchg
adc
scas
les
sbb
testl
movsb
lret
mov
cmpsb
or
and
ja
and
insb
push
mov
pop
xor
xchg
cs
arpl
shll
sti
in
mov
xchg
mov
cmp
daa
mov
xor
push
mov
leave
xchg
in
or
adc
repz
xchg
sub
mov
aaa
jns
jmp
xor
add
in
jl
jp
jnp
in
arpl
in
popf
cmpsl
shl
mov
inc
sbb
addr16
adc
xchg
sbb
arpl
ja
movsl
dec
dec
stos
cwtl
pop
cmpsb
adc
add
or
inc
mov
lcall
and
mov
andl
lods
mov
rcll
push
sbb
mov
jl
inc
push
testl
xor
xor
addr16
sbb
xchg
inc
xor
mov
les
xchg
sbb
xchg
out
lods
cld
mov
rclb
dec
inc
jl
inc
or
or
fwait
cli
jnp
in
ja
das
mov
fildl
sbb
cwtl
mov
subl
hlt
jnp
daa
add
xchg
sbb
ret
jno
mov
jae
jae
jg
xchg
and
push
xchg
xor
pop
push
pop
bound
mov
jns
pop
pushf
int
fimull
push
pop
or
xchg
ret
loopne
xchg
and
in
mov
mov
or
js
testb
addr16
fcoml
jg
cmpsl
adc
loopne
enter
mov
pop
xor
jmp
xchg
add
mov
inc
lds
mov
add
fwait
sahf
sbb
mov
push
sub
movaps
mov
scas
call
xchg
jmp
sub
fs
pop
jno
pop
dec
xchg
pop
sub
sub
xor
gs
pop
les
push
nop
mov
inc
mov
pop
sti
leave
lds
jge
adc
mov
xchg
cwtl
sub
popa
cmp
imull
int
mov
push
shl
jns
repnz
lret
sbb
rol
sbb
data16
mov
xchg
or
dec
test
mov
dec
sub
or
dec
jl
mov
shll
or
pop
cltd
xchg
insl
mov
movsb
sbb
xchg
mov
dec
imul
cli
mov
inc
mov
fdivrp
sub
les
xor
shll
movb
fcmovnbe
xchg
xchg
aam
jo
add
loopne
in
mov
fisubs
xchg
mov
adcb
cmpb
xchg
cmpsb
pop
adc
adc
add
jb
cwtl
cmp
out
test
jg
in
dec
jnp
repnz
mov
repz
insb
inc
fmulp
sahf
shrb
ret
mov
decb
or
xchg
dec
fwait
adc
daa
iret
dec
xchg
clc
jb
pop
out
loopne
and
push
dec
dec
test
stos
jo
loop
mov
xchg
sbb
shrb
arpl
adc
cltd
daa
and
jle
mov
out
adc
mov
xor
mov
aaa
stos
cli
pop
pop
push
clc
fnstcw
push
test
jo
push
dec
pop
call
push
fmul
and
mov
sbb
gs
adc
jbe
push
xchg
mov
or
add
cmp
rorb
fists
mov
dec
jo
fldl
cs
mov
or
movsl
push
sbb
clc
lea
pushf
insl
jl
xchg
ds
pop
pushf
cs
fwait
sbb
push
push
and
lock
lea
jle
bound
jnp
pusha
push
call
movsb
pop
xor
jge
mov
enter
inc
jl
rclb
bnd
in
pop
ja
add
push
sbb
cld
dec
cli
cmpsb
or
aas
je,pt
repz
or
sahf
fs
repz
or
push
mov
mov
cmp
aad
pmullw
dec
repz
sti
or
mov
sub
sub
dec
push
shlb
mov
ljmp
pop
sbb
sub
cmp
and
pop
aas
cwtl
mov
fucomip
jne
nop
inc
add
pop
sbb
jne
sbb
das
sbb
jle
cmc
push
mov
bound
push
add
icebp
jl
pusha
pop
add
jle
mov
stc
xlat
dec
mov
cmpsl
jns
outsl
jle
push
dec
sbb
andb
lahf
cmpsl
add
and
cmpsb
rorl
outsb
pop
mov
and
sahf
mov
sub
gs
out
repz
inc
push
dec
mov
dec
add
jecxz
das
push
gs
adc
jmp
fldl
dec
sarb
add
mov
lcall
rclb
add
mov
and
bswap
pushf
ljmp
or
mov
popa
jo
inc
and
insl
fsubs
mov
mov
inc
dec
mov
jnp
popf
add
stos
lret
je
mov
or
cmpsb
aad
push
push
popf
add
in
mov
ljmp
mov
dec
cli
mov
cli
cmp
jno
in
fcoml
and
pop
adc
bound
inc
adc
cmp
aam
adc
outsl
adcl
out
ret
movsb
stos
mov
orb
pop
push
pop
mov
inc
ja
dec
ret
jbe
xchg
movsb
mov
addr16
mov
cmp
ficompl
or
enter
add
inc
cwtl
mov
sahf
sbb
xchg
cmc
xchg
rolb
mov
mov
je
xor
shll
inc
movsb
call
xchg
and
xchg
fdivrl
push
push
ficoms
repnz
jmp
fdivs
jmp
or
xor
dec
mov
jne
cmpb
fcom
and
inc
into
lods
jl
push
cli
out
testl
xor
sub
mov
ret
sub
sbb
pop
and
dec
cmpsb
xchg
mov
imul
int3
int
push
sub
ret
or
das
sbb
push
push
sti
push
mov
xor
jns
addr16
jmp
leave
xor
push
in
dec
orb
cmp
test
sub
xchg
ja
test
push
call
aad
xchg
mov
mov
iret
lret
fdivp
out
cmp
rcll
jno
bound
xor
mov
mov
daa
push
cmp
pusha
add
mov
xchg
xlat
cmc
mov
mov
mov
xor
pusha
aad
and
outsl
push
sub
xchg
aad
fmul
xor
add
sub
lock
lea
iret
rep
lods
mov
dec
scas
outsl
data16
ljmp
popf
adc
movsb
jb
mov
aam
fchs
in
fldt
mov
inc
inc
dec
xchg
or
sbb
insb
push
shl
mov
mov
xchg
mov
aaa
push
push
inc
rcrl
fdivl
insb
adc
std
add
xor
rol
mov
sbb
mov
mov
sbb
and
mov
pop
push
aad
loope
mov
cmp
fwait
in
lahf
je
inc
mov
mov
out
mov
imul
rol
sub
idivl
divb
mov
cmpsl
mov
adcl
dec
aad
mov
imul
sti
sbb
mov
mov
ss
and
sub
ret
inc
mov
sub
sti
insl
imul
push
nop
xor
pop
jle
and
stos
sub
in
and
and
shr
fbld
xor
inc
sub
jp
add
popf
outsb
xchg
adc
aam
testb
out
cs
push
lahf
cltd
mov
rclb
call
mov
aaa
fbstp
cmpsl
sub
and
or
fisubl
inc
dec
ret
add
cltd
adc
fsubl
out
jnp
fs
adc
push
or
mov
sub
xchg
or
fcmovne
cmpl
das
andb
loopne
jle
sub
push
jbe
jae
inc
xchg
push
and
mov
xchg
sub
xchg
cmp
rcrl
adc
aam
xor
popf
add
pusha
test
pop
lret
inc
ljmp
xchg
dec
sahf
frstor
and
fucomp
ja
mov
lcall
fwait
push
ss
push
jnp
fstp
or
insl
into
jns
add
fbld
jl
adc
pop
mov
xchg
aaa
lds
es
xchg
cwtl
jg
mov
pop
roll
cmpsb
push
mov
sti
ficomps
sbbb
pop
repz
inc
cmpsl
mov
cld
stc
adc
ffreep
xor
addr16
pop
aad
jo
jne
repnz
mov
movsl
xchg
pop
jge
jl
or
xchg
sub
cmp
nop
mov
cli
push
in
pop
sbb
sahf
push
fisttpll
add
inc
or
mov
popf
mov
popa
mov
xor
mov
mov
add
inc
decl
das
stos
push
jne
fs
bound
dec
bnd
shlb
mov
cmp
nop
sbb
mov
xor
pushf
je
movl
daa
test
cltd
out
sbb
cs
mov
sub
stos
push
icebp
jno
aad
add
mov
ja
fwait
push
aam
out
mov
sub
ds
mov
push
jno
xor
jbe
aam
dec
mov
data16
dec
jge
hlt
jne
add
lds
xor
mov
pop
dec
adc
cs
mov
in
sub
lds
ret
pushf
mov
shlb
ret
mov
mov
pop
pushf
popa
mov
lods
sbb
push
or
xchg
add
dec
inc
out
inc
fs
add
inc
pop
cmp
loope
fs
pop
dec
js
xchg
sub
test
cmp
test
cmp
or
lods
mov
ret
nop
and
sub
dec
cmp
sti
add
pop
clc
xchg
push
aas
outsb
inc
and
scas
dec
sbbw
test
scas
out
or
shrb
dec
fs
or
mov
cmp
dec
repz
xchg
sahf
inc
dec
push
cmp
loope
push
sub
add
in
dec
int
jp
sti
cli
xchg
ss
pop
pop
ja
mov
cld
mov
dec
pop
test
imul
out
pop
adc
jmp
loope
xchg
sbb
push
std
pop
nop
pop
popa
add
divl
movsb
xchg
push
jmp
loope
mov
ds
lcall
xchg
push
cmp
mov
bound
shrb
push
mov
das
and
or
and
xor
xchg
add
pop
in
xor
jp
push
rorb
cli
push
sub
mov
lahf
sub
jge
cltd
mov
aaa
jo
mov
ret
push
ret
inc
movsl
and
xchg
pop
ret
int
sti
popf
xlat
jg
incb
cmp
xor
cmp
adc
faddp
xlat
xor
sub
or
xor
mov
xlat
ss
out
enter
jle
pop
enter
mov
mov
fcmovnb
or
sub
loopne
lea
sub
ret
ljmp
xor
out
jmp
imul
popa
mov
outsb
adc
stc
leave
lods
mov
cmp
pop
enter
jbe
mov
mov
xor
repz
push
lds
cmp
lds
int
cli
add
test
jnp
xchg
inc
jmp
xor
aas
jo
dec
lret
mov
lret
and
pop
xor
ljmp
sub
popa
mov
sbb
mov
out
andb
es
adc
pop
and
mov
rcrl
add
shlb
cs
push
dec
push
xor
jle
insb
mov
mov
repz
sub
pop
pop
int3
imul
xorl
sub
rolb
cwtl
pop
jp
imul
inc
cmp
lahf
sub
and
push
and
dec
clc
xchg
lret
mov
cmc
imul
add
iret
mov
mov
mov
popa
insb
push
add
stos
dec
dec
in
mov
insl
push
add
in
lret
fnstenv
lcall
fisubl
clc
sbb
out
xchg
sub
xlat
popa
sbbl
jne
cmpsb
lock
mov
mov
mov
push
int
out
pop
mov
mov
cltd
jmp
pop
mov
pop
loope
mov
and
jns
mov
pop
rorb
insl
psubsb
push
gs
add
or
arpl
and
adc
test
cmp
adc
fldenv
decb
outsb
xchg
inc
jle
push
aad
xchg
sti
pop
cmp
cwtl
add
xchg
fs
subb
mov
cmp
ror
mov
mov
pop
test
mov
mov
stc
repnz
fsubrs
adc
adc
mov
lock
cmc
ret
enter
xchg
xchg
iret
fsts
sub
pusha
push
adc
sub
dec
inc
dec
sbb
and
cs
jo
push
rolb
pushf
jbe
adc
push
popf
jl
sti
cmpsl
int3
dec
lods
adc
cmp
loop
insb
int3
pop
inc
lods
in
push
pop
or
pushf
sbb
pop
movsb
in
sub
mov
inc
mov
cmp
xchg
jmp
inc
out
mov
cmp
das
inc
iret
cld
xorb
inc
fstpl
into
jge
lcall
fiadds
sbb
mov
out
je
pop
adc
fsubs
inc
jbe
clc
test
cli
jno
fisttpl
cmp
xor
bound
bnd
sbb
stc
inc
dec
push
cmovne
cmp
inc
and
dec
cmpsb
xchg
mov
cli
fwait
pop
fsts
fcmovne
or
cltd
aaa
pop
out
pop
pop
mov
es
xor
xchg
xlat
inc
or
stos
clc
xchg
add
arpl
cli
xor
out
leave
mov
jns
cmp
mov
and
push
ss
xor
cld
ror
xor
lret
lcall
push
enter
dec
inc
sbb
push
daa
sub
pop
bound
daa
cmc
mov
fs
mov
pop
adc
mov
stos
fs
into
inc
lds
mov
ja
mov
xor
mov
mov
jmp
testl
lock
addb
or
inc
dec
or
pop
jmp
push
test
sbb
push
sbb
aad
pusha
negb
xchg
fs
mov
icebp
lds
or
es
jo
mov
pop
daa
push
mov
sbb
fwait
rcr
mov
test
mov
xor
add
in
outsl
rcll
aas
sub
mov
sarb
int
test
mov
pop
lock
test
mov
mov
loope
push
xchg
test
lods
bound
gs
das
inc
cmp
dec
mov
std
jnp
mov
or
cld
inc
xor
negl
or
shll
sti
dec
xor
ja
lds
divb
mov
into
aad
dec
pop
aam
dec
jno
sub
fwait
add
or
stos
ja
cwtl
icebp
mov
jl
loope
inc
incb
stos
stos
pop
mov
into
scas
negb
push
aas
mov
cmp
ret
cmp
dec
popa
pop
cmpsl
sbb
mov
test
pop
inc
adc
add
sbb
push
popl
adc
pop
push
add
hlt
insb
adc
je
movsb
mov
enter
or
sahf
call
repnz
mov
mov
inc
dec
leave
xor
imul
mov
or
enter
xchg
jb
sarb
ja
add
outsl
mov
test
and
loopw
sbb
int3
mov
fnstcw
testl
pop
adc
cmp
pop
out
rcrl
xchg
jle
rorb
aas
add
push
das
test
fildl
xor
mov
pop
out
xor
mov
mov
cld
stos
jbe
sahf
mov
mov
jae
and
sahf
pop
xchg
or
jne
sti
lock
out
ret
dec
pop
xchg
sub
andl
mov
sub
or
mov
jns
push
hlt
or
imull
push
rorl
in
and
dec
push
xchg
xchg
mov
into
pop
in
divl
mov
out
dec
mov
cmp
gs
push
cmp
mov
adc
dec
imul
ss
lahf
repnz
lods
gs
maskmovq
negl
movsl
xor
loop
stos
cmpsl
push
ljmp
adc
jmp
lods
cmpsl
jns
lret
iret
cli
jmp
push
xor
in
mov
sub
mov
cmc
insb
call
jbe
and
lret
out
xchg
pop
test
popa
stos
and
lret
repnz
lock
icebp
in
cmc
pusha
aas
in
xchg
pop
pop
movsb
lods
lret
xor
push
pop
mov
cld
adc
aaa
jnp
lock
xchg
icebp
pop
repnz
xor
mov
cmpsl
push
sub
or
dec
lods
aad
xchg
test
or
leave
stos
sbb
push
mov
push
xchg
in
pop
int
pop
das
sbb
jmp
push
sub
ja
mov
popa
mov
sbb
adc
dec
adc
push
adc
mov
mov
mov
pushf
cltd
fmull
push
nop
and
mov
lahf
mov
mov
pop
ret
imul
lods
fwait
mov
push
xor
pop
push
cmp
gs
addb
fidivs
movsb
cmc
sbb
stos
sub
cmp
and
and
adc
pop
outsl
aas
dec
outsb
in
arpl
add
out
std
push
cs
sbb
mov
or
ret
out
fimull
lds
mov
mov
mov
add
pushf
push
push
dec
mov
rep
faddp
adc
insl
xor
pop
or
push
lock
push
inc
into
mov
cmp
cmp
adcb
pusha
mov
mov
add
das
pop
sti
out
xor
xorl
add
cmp
xor
cmp
mov
lock
xchg
repnz
incl
scas
pop
leave
into
aad
or
shlb
dec
popf
dec
sbb
lods
adc
enter
mov
add
loopne
cmc
dec
jnp
in
xor
incl
dec
adc
test
add
out
cmp
pop
cs
test
and
aad
into
in
lock
sbb
adc
mov
fstpt
push
add
adc
sub
xorb
and
loopne
iret
sbb
mov
out
jne
scas
ret
scas
leave
adc
sbb
fistl
cs
xor
dec
rorl
mov
lds
adc
xor
or
mov
jnp
inc
pop
jns
fstpl
in
xor
xchg
ret
or
test
out
jp
dec
rcr
mov
ficoms
push
movsb
jbe
add
fs
repnz
lret
movsb
shrb
dec
adc
mov
lahf
out
lds
aam
lahf
or
mov
sub
xchg
imul
pop
xor
cmp
mov
pushf
jbe
push
xor
xlat
jge
loopne
mov
mov
inc
inc
dec
divl
les
mov
enter
shll
adc
mov
data16
and
gs
and
mov
mov
push
arpl
xor
lods
add
sbb
jmp
cli
rorb
imul
push
sbb
jbe
retw
mov
fldenv
or
cmp
cli
pushf
insb
or
loopne
mov
sbb
mov
pop
lds
xchg
push
mov
fcmove
mov
lock
sub
xchg
jecxz,pt
in
push
fimuls
std
sbb
sub
dec
test
sub
insb
xchg
jmp
cmc
test
mov
xchg
mov
ret
sti
data16
mov
lea
xchg
gs
add
and
mov
dec
daa
movsl
dec
fistps
insb
or
mov
std
dec
xor
dec
leave
jbe
insl
mov
je
rcll
lcall
and
pop
stos
adc
jb
neg
xchg
aaa
mov
out
jb
push
jbe
xlat
adc
mov
dec
cmc
xor
fwait
xchg
inc
jl
cmpsl
cmc
nop
pushf
and
loope
out
cmpsb
xchg
leave
imul
lods
test
out
and
lahf
xchg
out
cmp
in
lcall
mov
pop
ret
ret
push
xchg
or
sub
fwait
mov
adc
enter
push
inc
mov
add
out
aaa
faddl
fnstenv
pop
stos
mov
mov
mov
or
jp
in
sub
das
rcl
imul
cs
or
out
push
pop
mov
fs
pop
dec
sbbb
add
ss
xchg
int3
dec
xchg
xor
xor
and
std
pop
add
out
std
and
xor
push
sbb
xor
insb
call
jae
repz
inc
fnstcw
and
ss
mov
hlt
mov
pushf
lods
pop
bound
xchg
shlb
mov
test
cmpsl
nopl
dec
mov
loope
std
mov
fadds
jg
cmp
cmp
push
mov
pop
pop
les
or
add
lahf
or
push
cld
imul
and
scas
mov
clc
jmp
sahf
pop
ss
stos
xchg
adc
loopne
dec
fists
outsb
shll
fucom
aaa
mov
or
out
out
and
je
mov
adc
leave
cmc
movsl
inc
or
fsub
call
ss
push
fsubrs
iret
cmp
and
pop
das
and
cmc
int3
orl
pop
sub
repz
lcall
and
xchg
shlb
jbe
add
fsubl
jo
mov
push
sbb
mov
mov
fbstp
repnz
xchg
cmpsb
dec
ret
out
xor
nop
mov
clc
jb
out
sarb
fdivrl
add
das
xchg
xchg
sarl
stos
sbb
lods
mov
movsl
idivl
fisttpl
inc
mov
add
dec
outsb
adc
mov
pop
icebp
push
pop
rorb
cmpsl
and
iret
xchg
in
xor
rorl
and
je
add
cmp
imul
repnz
popa
insl
insl
dec
out
jno
cmc
dec
ljmp
sbb
lds
les
mov
loope
stos
ds
mov
es
out
out
jb
out
mov
jo
mov
inc
mov
fwait
stos
mov
inc
mov
push
inc
sub
xchg
jp
pushf
push
mov
mov
sub
scas
add
insb
jo
ljmp
xchg
out
pop
xor
hlt
pop
xor
mov
repnz
xchg
push
dec
dec
in
mov
and
add
dec
push
xor
mov
sub
and
dec
insl
jo
cwtl
or
mov
test
dec
mov
inc
and
and
sbb
pop
mov
inc
fs
xor
std
add
or
out
pop
mov
xchg
xor
lock
lcall
inc
cltd
pop
iret
js
movsb
outsl
adc
add
pop
cmpb
aad
stc
sbb
clc
sbb
inc
inc
push
sub
lock
push
notl
sbb
in
out
mov
addr16
cmpsb
jno
repz
sub
sbb
push
pop
xor
pushf
in
xor
sub
jp
sbb
js
insl
frstor
mov
mov
xchg
push
mov
addr16
push
lock
cs
xchg
test
push
dec
pop
outsl
insl
jb
outsb
xchg
mov
fsubl
fstpl
cld
mov
mov
pusha
inc
mov
ret
and
sti
dec
rorl
or
lock
lods
sub
xchg
and
fs
lea
sub
adc
mov
std
fcom
outsb
mov
mov
shlb
cld
loop
sar
adc
push
and
out
jbe
popa
sub
dec
ret
push
xchg
jb
add
jns
xlat
pop
jp
cltd
in
data16
shrb
add
jl
enter
xor
sub
adcl
jbe
xor
add
pop
jmp
lahf
int3
scas
cltd
lea
adcb
and
add
shl
fdivrs
mov
je
xor
xor
cmc
mov
xchg
popa
sbb
lret
mov
add
dec
nop
and
jnp
cmc
mov
gs
movsl
push
inc
and
mov
jo
mov
inc
pusha
and
insl
stc
clc
lods
push
ret
xchg
inc
mov
jnp
or
add
pop
lods
sbb
dec
sub
stc
decl
dec
cmp
popf
pusha
inc
mov
cmpsb
cltd
je
push
add
xchg
fdecstp
lret
cs
sbb
inc
jo
sbbl
mov
in
xchg
loopne
out
sub
rep
sbb
fstpl
test
and
pusha
adc
mov
xor
sub
sar
sub
clc
aaa
imul
and
ficompl
repz
pop
test
ss
push
ficoml
insb
and
es
ds
adc
test
jle
test
and
dec
sub
sti
jne
scas
pop
and
adcl
cmp
adc
or
push
stos
les
sub
fcoml
xor
jae
xchg
repnz
mov
cmp
xor
jg
mov
dec
inc
arpl
sbb
dec
repnz
xchg
jbe
jns
and
or
arpl
cmp
icebp
pop
push
in
in
leave
bound
dec
xchg
jge
xchg
repz
and
mov
and
int
cwtl
and
mov
iret
cmp
pop
loop
add
icebp
inc
gs
pop
jecxz
icebp
les
imul
fcmove
mov
enter
add
mov
pop
je
jge
cmp
pop
ret
loop
sub
insl
loop
out
cmc
pop
sub
testl
lea
jno
push
add
add
mov
cs
pop
into
sub
enter
and
push
pop
jnp
mov
icebp
sarl
mov
pop
int3
lods
pusha
pop
nop
pop
lods
push
jecxz
lahf
js
repz
inc
insb
mov
sub
sbb
sub
sub
mov
mov
adc
jo
jb
cld
ret
or
xchg
push
in
lock
add
cmp
push
push
cltd
aaa
sbb
rorb
or
int
xor
scas
add
mov
cmpsb
pop
rcl
shll
jnp
push
shll
cmp
leave
in
adc
sub
lods
dec
leave
xchg
sbb
lret
jmp
int
pop
push
sbb
pop
mov
sub
mov
and
mov
dec
and
mov
sbb
js
mov
lret
push
inc
push
add
cltd
adc
mov
inc
xor
jns
movb
imul
loop
jne
dec
not
push
gs
sub
pop
sbb
jp
mov
loopne
std
mov
cmp
xchg
ljmp
mov
or
xor
jp
roll
movsb
cs
lret
test
push
jmp
shl
out
sub
fadds
int
adc
push
fisubl
insb
iret
lds
stos
mov
mov
jbe
jmp
xchg
dec
mov
in
inc
sub
movb
pop
std
inc
pushf
cmc
push
bound
sahf
out
out
mov
in
xor
loope
mov
dec
mov
gs
lret
inc
xor
mov
fadds
sbb
data16
out
xor
or
mov
mov
pop
push
jo
cs
lahf
mov
loop
sub
std
ljmp
inc
das
push
std
inc
inc
mov
sbbb
xchg
or
idiv
repz
inc
mov
adc
fs
xchg
mov
in
push
mulb
pop
movsl
push
js
cmp
ljmp
cmc
cli
or
jmp
cmp
sbb
xchg
xchg
and
mov
aad
repnz
xor
mov
cmp
jmp
lcall
dec
cmp
mov
mov
sub
xchg
in
scas
inc
mov
pusha
xor
fisttpl
mov
push
and
add
clc
and
push
movsb
jle
in
loopne
mov
inc
cmpsl
sbb
sti
rsm
jle
lds
lcall
cmp
sbb
xlat
jecxz
in
lret
xchg
adc
add
adc
test
jecxz
pop
in
add
cmpb
cmp
rclb
inc
andb
iret
cmp
ret
into
push
dec
je
ss
std
mov
sub
notb
jne
mov
imull
and
les
adc
inc
jmp
mov
push
jecxz
imul
sbb
push
dec
dec
pop
imul
and
add
out
jp
stc
arpl
aam
cmp
and
add
loop
test
mov
insb
cs
jno
adc
cmp
popf
out
test
cmp
in
bound
xchg
push
xchg
mov
sbb
pop
and
inc
mov
xchg
repz
or
mov
jmp
xchg
cwtl
pop
xor
jl
mov
aad
mov
jle
push
mov
lds
dec
test
fs
inc
mov
fsubrs
and
mov
pop
je
push
pop
repnz
inc
inc
dec
push
outsl
scas
xchg
pushw
and
jne
test
sub
adc
jne
faddl
mov
clc
fiadds
inc
scas
mov
pop
adc
add
nop
imul
push
dec
sub
and
xchg
xchg
repz
adc
add
lea
out
push
sub
push
lcall
lcall
call
imul
push
inc
or
scas
push
ja
aas
mov
jmp
dec
in
add
jnp
xchg
cwtl
sbb
ret
rcll
bound
test
and
insl
rcrl
mov
out
lea
inc
sub
mov
mov
out
out
out
sarb
sbb
test
mov
jmp
jp
lret
repz
cmp
aam
mov
add
jmp
jg
push
xchg
in
dec
pop
pop
aaa
fisttpll
loope
fs
xchg
mov
inc
popa
jmp
pop
mov
hlt
stos
ret
pop
icebp
add
cs
and
xor
mov
mov
int3
sbb
pusha
cmp
int3
outsb
xor
xor
sub
outsb
mov
sub
loop
mov
pusha
jp
in
lods
mov
sbb
sub
out
pop
iret
enter
stos
xchg
or
jl
xchg
dec
test
dec
jge
stos
test
jmp
mov
scas
in
pop
scas
andb
cwtl
push
insl
inc
xchg
stos
dec
call
outsb
out
sbb
pop
cmp
push
dec
iret
sub
in
mov
adc
mov
aas
xchg
pop
mov
mov
sbbb
push
and
pop
pusha
adc
mov
shlb
add
adc
add
mov
mov
aam
push
fdivrl
pop
jne
or
adc
lods
pusha
push
outsl
in
push
pop
call
push
pop
mul
rcrb
mov
cmp
push
inc
imul
sti
pop
enter
xor
fildll
das
fildll
inc
arpl
shlb
arpl
cli
mov
rolb
adc
add
push
and
mov
rolb
lea
shll
inc
int3
sbb
pop
movsb
outsl
les
push
lret
cmp
movsl
xor
popf
mov
or
lahf
lds
lock
cwtl
fs
mov
outsb
cltd
sbb
loop
int
mov
outsb
ret
out
stos
das
loope
sbb
xchg
mov
add
leave
lahf
xchg
orl
icebp
cmpsl
jo
int
dec
dec
flds
sti
add
in
nop
shl
pop
fisttps
xchg
dec
insb
lret
xchg
or
xchg
mov
lret
jl
icebp
negl
ret
inc
or
or
add
push
jecxz
pop
std
out
divb
pop
cwtl
loopne
xchg
je
mov
mov
add
xchg
rolb
stc
dec
mov
popl
sbb
push
mov
pushf
inc
pop
cmp
xlat
sbb
js
xchg
mov
int
testb
lahf
push
mov
adc
mov
lahf
add
mov
xlat
test
fs
test
in
ss
mov
mov
sbb
lea
mov
xor
inc
xlat
mov
aaa
gs
dec
pop
sub
mov
or
dec
popf
lret
in
fxtract
stc
lods
pop
sti
int3
dec
pop
cmp
sahf
in
xchg
xchg
movsl
daa
sahf
daa
inc
and
mov
xor
aaa
inc
addr16
mov
cmpsl
xor
inc
insl
sub
movsl
sbbb
pop
inc
pop
pop
cli
adc
repz
call
pop
out
sub
jnp
pslld
jo
fsubl
xchg
popf
mov
dec
lds
cmp
lret
and
sub
cli
loopne
xlat
or
shl
pop
fld
dec
mov
enter
xchg
cmp
xchg
mov
mov
xor
imul
cmp
scas
insl
cmp
cmpsb
sub
cmc
aam
pop
and
dec
aas
pop
add
add
sub
outsb
gs
add
xor
dec
nop
mov
mov
mov
push
and
int3
cmpsl
rorb
jmp
into
or
push
loope
rorl
mov
push
sbb
lret
jmp
xchg
jae
add
push
mov
or
cmp
or
dec
or
leave
sbb
rcrb
push
jmp
mov
or
lods
and
lret
lds
pusha
adc
aam
stc
mov
lahf
loop
cmpsl
add
sysenter
popa
aad
push
xor
mov
negb
movsb
fnstenv
lods
mov
stos
mov
xor
dec
cs
sti
sahf
into
dec
dec
sub
push
xchg
movsl
xchg
mov
cmovae
sbb
mov
add
divl
mov
loope
jbe
push
mov
cmpsb
pop
jne
arpl
and
push
mov
jns
push
xlat
xchg
pop
xor
jne
into
cmp
inc
lret
dec
in
mov
das
inc
mov
xlat
addr16
ljmp
ror
mov
xchg
pop
jle
xchg
mov
pop
fadds
push
or
jo
jge
sbb
pop
xchg
hlt
jbe
into
es
cmp
jbe
xchg
jle
addr16
pop
cmc
mov
in
int3
add
popa
mov
pop
lock
in
mull
into
into
ljmp
or
dec
jmp
mov
hlt
xor
repnz
push
lret
pop
mov
out
scas
scas
lds
xchg
shrb
jp
icebp
pop
cld
repz
cmp
adc
outsb
sbb
dec
outsb
scas
mov
cmpb
cmpsb
mov
cmpb
xchg
pusha
and
sub
pop
loopne
out
shlb
mov
lock
test
mov
xchg
in
inc
inc
repz
loopne
sarb
xchg
fsubrs
jb
in
arpl
and
movsb
test
jne
xchg
jns
pop
outsl
push
pop
cmp
roll
rolb
pop
or
mov
daa
movsb
or
andl
mov
xchg
jle
push
lods
push
fcomps
arpl
sbb
repnz
test
mov
rcll
stc
or
ljmp
jl
dec
push
mov
jge
pop
in
xchg
popa
lret
sbb
add
jnp
subl
arpl
xor
inc
push
xlat
iretw
push
jg
scas
out
inc
add
neg
cmp
int3
rclb
mov
int
in
inc
scas
xor
xor
mov
or
pushf
xchg
jle
ja
sub
mov
fimuls
add
or
jmp
add
icebp
andl
pop
sub
ret
out
xor
insl
push
addps
insl
ja
out
loopne
mov
pushf
cmp
xchg
inc
outsl
push
inc
push
cld
lret
cmpl
nopl
mov
mov
dec
in
ss
leave
push
iret
leave
flds
push
mov
xlat
out
pop
stos
cmpsb
stos
arpl
rcr
outsl
pop
cmp
aas
mov
test
daa
inc
xchg
loop
dec
in
sub
aaa
sarb
pushf
aam
sbb
data16
mov
cs
add
and
in
sbb
push
cmpsl
insb
fbld
push
mov
jbe
push
cwtl
lods
mov
fistpll
pop
test
mov
xchg
pop
sahf
add
sbb
outsb
push
shl
cld
sub
addr16
cmp
mov
adc
xchg
push
xor
frstor
lea
scas
xchg
addb
xchg
repnz
or
adc
and
inc
ss
movsl
fbld
int3
fdivrl
xchg
jb
stos
les
test
push
sbb
jo
and
push
loopne
or
pop
repnz
add
push
movsb
subl
dec
xor
adc
repz
lods
aas
into
pop
jmp
and
outsl
mov
pushf
fcom
iret
dec
and
in
push
dec
call
es
movsl
sbb
negb
fiadds
loop
scas
or
mov
int3
cwtl
sbb
sbb
cltd
shlb
push
nop
sbb
adc
stc
bound
sbb
mov
dec
dec
sub
push
xor
sti
sub
mov
in
addr16
loope
andl
dec
ficompl
mov
push
sub
mov
scas
sbb
xchg
xor
addr16
gs
or
cli
adc
cwtl
aam
scas
mulb
std
cmpsl
xor
and
movsl
sub
ret
mov
test
leave
jmp
cmc
push
sbb
test
ljmp
icebp
call
add
vpcmpeqb
dec
push
inc
jbe
mov
sahf
sub
pop
cmp
and
loop
xchg
or
pop
gs
out
mov
call
adc
fbld
shlb
lock
mov
pop
lea
mov
or
and
data16
cltd
lcall
in
scas
inc
mov
enter
lret
out
xor
sbb
std
fdiv
lds
mov
push
jle
test
loopne
gs
ss
cwtl
mov
jp
iret
in
add
inc
mov
jo
sbb
push
cmpsb
push
inc
lock
lcall
test
in
shll
push
cmp
and
aam
test
push
scas
test
sbb
mov
fwait
lock
in
fimuls
adc
in
inc
icebp
sub
loopne
push
ss
push
push
fbld
jnp
lds
inc
aam
adc
popf
or
scas
push
ds
xor
cmpsl
scas
add
fwait
lods
mov
btr
in
mov
shr
shlb
jmp
and
xor
sub
add
cld
je,pt
dec
call
cmpsb
inc
je
inc
inc
sub
daa
mov
mov
rcll
jle
pop
and
dec
mov
addr16
mov
in
mov
pop
push
and
cmpsl
xor
and
inc
ret
push
cs
jecxz
sahf
inc
adc
push
outsb
fisubrs
loope
lods
out
cld
inc
dec
les
sbb
xlat
sbb
cli
xlat
mov
xchg
pop
sahf
setl
repnz
mov
push
loop
loop
dec
pop
inc
int
jno
xchg
outsb
adc
push
and
ss
inc
xor
js
jbe
fistl
dec
push
mov
adc
mov
xor
xchg
leave
sbb
cwtl
sub
or
jno
add
lret
dec
pop
repnz
sbb
xlat
push
negb
dec
bound
andb
jecxz
pop
pop
lret
std
test
xchg
sub
fistl
call
iret
mov
add
into
pop
call
add
data16
test
push
repz
mov
int3
sbb
push
jo
xor
loop
mov
inc
insl
cmpsl
mov
pushf
and
lret
push
cld
aaa
pop
and
xor
sti
jno
sti
push
xor
sbb
out
gs
daa
fwait
cli
and
inc
xchg
xor
sub
cmp
lahf
sbb
and
fdivp
out
les
leave
mov
nop
mov
scas
cmc
push
add
adc
lahf
lret
test
ret
pop
push
xchg
adc
dec
aam
add
jbe
rolb
push
push
dec
fmuls
je
xor
ficomps
int3
xchg
cltd
mov
jbe
dec
jo
add
push
push
pop
fistl
lea
sti
pop
lahf
das
and
xchg
and
nop
mov
icebp
shr
cmp
jp
daa
inc
push
mov
cmp
push
mov
dec
add
mov
inc
call
adc
ss
inc
push
leave
in
push
cld
push
loop
add
ds
cwtl
das
hlt
ja
ss
jle
int3
cmp
ret
sub
pop
pop
jge
fcomps
mov
popa
xchg
ss
mov
fsubs
sub
sub
in
loopne
xchg
dec
stos
fldt
idivb
jo
jns
mov
push
mov
lret
ret
inc
sub
fs
adc
hlt
sub
push
inc
cmp
cltd
and
mov
fisttpl
sub
subb
std
xor
or
bound
or
add
adc
rolb
stos
test
cmpsl
roll
enter
out
dec
mov
pop
mov
ficomps
out
mov
cmpb
das
jl
xor
sahf
sbb
mov
push
cmpsl
jle
add
sbb
inc
xlat
push
cltd
decl
mov
mov
mov
pop
add
mov
lret
test
es
ret
mov
push
fdivs
cs
fisttpl
rcl
test
lea
inc
movlps
xchg
xchg
adc
cmp
push
movsb
cmp
adc
rclb
pushf
xlat
call
mov
mov
pop
ja
jge
loop
inc
jb
xchg
sub
xchg
or
dec
in
mov
mov
jecxz
mov
cmp
vandnps
mov
scas
subb
inc
cli
in
popf
jmp
sub
int
xchg
ljmp
mov
pop
movsl
or
mov
lods
scas
hlt
sbb
push
cltd
and
lret
dec
mov
movsl
xor
pusha
push
outsl
insb
inc
repz
mov
dec
xchg
icebp
or
add
pushf
push
sti
and
fidivrl
push
jo
inc
xchg
xor
scas
mov
sub
lahf
fwait
mov
lock
and
push
stos
xchg
cmp
and
popf
mov
push
add
ret
or
lahf
out
xchg
popf
sub
addr16
jne
xor
pop
ret
add
sbb
add
add
scas
mov
rcll
add
push
lea
lahf
dec
and
out
in
inc
push
jne
add
iret
and
sub
adc
sbb
lahf
fdiv
pusha
adc
testl
ret
js
sbb
sahf
jecxz
jnp
push
jbe
mov
cld
loop
mov
pop
add
movsl
or
loop
or
lret
jp
mov
pop
repz
xchg
and
pop
mul
lret
sarb
mov
add
scas
add
or
cmp
fwait
mov
insl
jg
mov
cli
sbb
aas
out
sbb
push
aas
shrb
xor
aaa
loope
in
daa
mov
fidivrs
push
jo
pushf
add
scas
jge
xchg
shlb
mov
push
mov
fldcw
test
push
in
xlat
pop
add
xchg
dec
clc
repz
div
ljmp
and
scas
stos
jae
mov
sbb
fistpll
mov
fmuls
cltd
add
lods
les
cli
inc
pop
popf
rcl
mov
add
xor
jl
pop
imul
push
push
pushf
sub
xchg
ja
in
stos
movsb
movsl
repz
mov
jmp
push
stc
xorb
pushf
cld
push
and
repz
mov
jecxz
sub
cmpsb
and
cmp
cs
hlt
jnp
outsl
pop
push
adc
add
pop
xor
stos
stc
popf
xchg
mov
adc
mov
fnsave
mov
sub
inc
push
or
fwait
int3
repz
cwtl
mov
adc
xlat
mov
and
and
int
mov
test
adc
int3
xchg
or
push
pop
fcmovnb
xor
push
push
addl
call
les
lock
pop
ja
out
loope
or
test
movsl
xchg
sbb
test
and
and
aas
xchg
jmp
xchg
js
xor
in
incb
je
hlt
dec
nop
cld
pop
sete
add
out
aas
sub
cmp
stc
dec
repnz
inc
push
insb
cmp
sub
out
xor
add
mov
daa
stc
and
clc
repnz
cmp
add
pusha
push
mov
sbb
gs
inc
mov
pop
mov
pop
dec
jo
movsb
jmp
cs
mov
and
xor
aam
mov
orb
sub
loope
into
andl
cld
out
sub
in
mov
xorb
outsb
loopne
fldcw
add
lahf
xorb
inc
or
bound
fcomps
xor
pop
mov
adc
popf
sbb
mov
sub
daa
les
inc
pop
pushf
add
push
loope
int
lret
or
cmp
sub
xor
jbe
insl
mov
mov
in
loop
mov
mov
cmpsl
push
pop
loope
jbe
jecxz
lret
xchg
nop
sahf
push
adc
sti
mov
cmp
pop
cmpsl
xchg
sahf
xchg
push
pop
mov
rcrl
sub
pause
lods
adc
mov
push
inc
mov
rorb
movsb
pop
addb
mov
cmp
loopne
testb
out
fwait
sbb
jo
mov
lret
jecxz
pop
mov
mov
sbb
pop
or
xor
cmp
jae
pusha
jmp
inc
jg
jo
popa
dec
mov
js
pop
dec
shl
cmc
sbb
add
je
mov
pushf
cmp
mov
mov
rolb
pop
jb
mov
adc
mov
cs
inc
std
or
inc
sub
xchg
pop
push
xor
push
inc
dec
inc
aaa
cmp
sbb
sub
repnz
jns
jb
mov
sub
rclb
arpl
dec
pop
lcall
fildll
adc
inc
test
mov
pushf
mov
mov
jnp
pop
pop
test
pop
out
loop
ja
add
and
push
push
shl
push
pushf
les
ja
push
ljmp
xchg
cmp
dec
dec
sub
xor
mov
pop
cmc
xchg
scas
mov
icebp
and
sti
or
test
sub
leave
fwait
sub
ret
pop
shll
aad
stc
shrl
cmpsl
pushf
sub
jl
out
mov
sbb
aad
imul
mov
sbb
jae
clc
and
das
dec
andb
rolb
jl
adc
shlb
xchg
cmpsl
and
popf
arpl
pop
test
cltd
loopne
pop
sar
dec
shrl
pop
mov
rcr
dec
shlb
das
push
sbb
mov
inc
jae
sbb
inc
sub
aaa
mov
js
adc
adc
or
out
sbb
dec
sbb
daa
xchg
mov
mov
mov
leave
xor
loopne
sub
lods
dec
hlt
jp
loopne
cmp
dec
aad
inc
push
push
inc
pop
icebp
mov
in
lds
jmp
imul
dec
push
cld
push
dec
adc
add
repz
clc
scas
push
adc
and
mov
pop
xchg
ficoml
dec
mov
jne
jmp
push
mulb
jno
hlt
sbb
loopne
js
push
sbb
push
fadd
into
or
insl
pop
in
jns
lcall
mov
inc
pusha
inc
leave
pop
dec
mov
add
sti
mov
pop
shrb
fisttps
jg
sarb
mov
push
dec
stos
mov
rol
insb
pop
jp
rorl
lahf
scas
aad
xor
jb
inc
and
push
adc
sub
xor
fdivrs
push
fildll
push
jp
sub
mov
or
push
mov
call
adcb
lods
mov
sbb
mov
loopne
inc
xchg
fisttps
or
out
mov
jnp
push
cld
ds
pop
rorl
push
les
jecxz
jle
dec
hlt
aad
fldl
out
daa
sub
sahf
lahf
xor
test
add
mov
sbb
cmpsb
adc
cmpsb
aam
mov
ljmp
sub
insb
bound
clc
inc
movsb
mov
rclb
test
int3
das
jl
lea
xchg
or
xor
cmpsl
jns
and
push
and
add
mov
or
cwtl
pushf
loop
mov
lock
sub
mov
dec
inc
push
sub
sarb
mov
mov
bound
fsubrl
and
add
test
jg
sub
dec
pop
and
lcall
insl
lods
scas
and
insl
mov
jle
std
mov
push
sti
mov
adc
lods
fbstp
cmpxchg
iret
out
cmp
xor
mov
repz
and
mov
xor
cmp
je
fcmovu
into
and
fistpll
push
loopne
or
imul
scas
sub
pop
cld
cli
loopne
mov
pop
int
lock
fildl
push
jl
rcrl
push
cltd
daa
mov
sbbl
or
pusha
mov
test
inc
xor
jmp
stos
aam
inc
cmovp
mov
cli
xchg
aam
shl
cli
mov
push
or
arpl
mov
sub
inc
loopne
aad
decb
loope
ds
sbb
icebp
lcall
sbb
pop
inc
sub
mov
cld
xchg
in
jg
lods
and
rcl
cld
push
loop
and
lock
repnz
test
ja
subb
sub
mov
mov
xor
inc
adc
jle
adc
setno
clc
mov
ja
xchg
in
outsb
lret
imul
lods
jg
shll
mov
test
push
pop
dec
sub
adc
cmp
cli
dec
mov
or
xor
fs
cmpsb
bound
add
xor
dec
test
inc
mov
xchg
or
jmp
mov
sbb
insl
mov
cmpsb
push
out
arpl
test
sbb
repnz
cmp
inc
outsl
leave
mov
movsb
ret
adc
imul
cmp
or
jne
cmp
adc
mov
fnstcw
call
xor
daa
mov
sub
dec
jo
push
mov
push
movsb
lcall
test
sbb
dec
jno
push
adc
test
or
negl
and
dec
test
pop
add
nop
push
out
popf
mov
or
sbb
push
jno
inc
adcl
mov
lods
dec
sbb
sbb
xor
les
xchg
adc
sub
mov
int
outsl
lock
sbb
mov
daa
add
imul
std
jo
shrb
adc
and
mov
lahf
pop
mov
fstp
dec
sahf
cld
or
nop
push
jmp
push
add
aad
pusha
mov
inc
shlb
test
fcompl
xchg
mov
or
cmpsl
fsubl
lret
mov
xlat
mov
push
mov
ficompl
adc
dec
fcmovne
dec
dec
arpl
adc
clc
lea
push
cmpsb
dec
loop
xchg
mov
es
dec
dec
push
loopne
ja
lahf
ret
cli
lods
sbb
es
std
jp
into
lods
add
mov
cmp
dec
flds
xchg
clc
je
xchg
adcl
cld
or
xorl
xlat
fisubrs
add
fnstenv
lock
repnz
xchg
cmp
adc
mov
jle
mov
rorb
sbb
sbb
mov
xor
pop
insl
stc
es
xchg
fwait
cmc
inc
add
or
or
cwtl
mov
clc
mov
jb
gs
mov
mov
xchg
mov
pop
dec
lret
pop
pop
repz
ret
aas
mov
push
addr16
fxch
mov
enter
es
aad
leave
push
cs
xchg
insl
push
mov
adc
cmova
and
cmp
cmp
fs
dec
push
jns
loop
add
lret
movsb
jno
xchg
jne
jmp
fcomps
mov
cli
aas
mov
ret
lcall
adc
inc
out
mov
ds
push
nop
jp
sbb
sbbb
je
decl
push
adc
pop
jnp
call
xchg
and
fcomi
sub
dec
lcall
inc
mov
adc
out
mov
test
sub
dec
test
into
sbb
sbb
dec
aas
cltd
inc
jmp
inc
fdivl
cmp
mov
jg
inc
inc
rcll
jnp
adc
dec
aad
add
mov
or
pop
mov
inc
iret
add
es
int
sub
movsb
gs
sub
out
mov
sbb
popa
mov
pop
xor
mov
jg
push
pusha
push
in
jnp
fildl
xor
shll
cmp
and
push
or
pop
lret
std
xchg
loop
xor
ss
insl
loope
pop
cmp
das
in
sub
out
stc
out
add
and
and
adc
push
das
mov
testl
pop
mov
sbb
adc
jo
mov
inc
cwtl
out
pop
outsl
roll
mov
les
xchg
lea
les
sub
and
cmp
cmpsl
pop
mov
dec
inc
test
xchg
mov
popa
pop
pushf
incl
cmc
sbb
call
push
jp
mov
adc
adcb
mov
jb
pop
mov
loope
pusha
popf
enter
fcompl
rcll
xor
in
adc
pop
inc
jl
cmp
ficoms
jo
fdivl
test
stos
xchg
mov
lret
jp
mov
or
fwait
sbb
pop
dec
in
outsl
add
repnz
sarl
rclb
in
jb
fwait
jne
xor
notb
outsl
popa
fisttpl
sbb
jae
cmp
imulb
loop
das
sbb
xor
mov
mov
jns
xchg
xlat
pop
push
imulb
movlps
nop
jae
mov
jbe
aad
rcll
push
add
push
mov
or
dec
shll
or
inc
fcoml
test
lea
fildll
daa
arpl
mov
repz
fiadds
jp
push
pop
lcall
pop
clc
push
inc
cmpsb
pop
xchg
sbb
xchg
in
push
cmpsl
xchg
cmp
mov
sti
push
jns
mov
add
push
cli
fcmovne
pop
repz
cmp
imul
out
js
pop
in
xlat
nop
or
les
add
and
out
jl
mov
test
xchg
mov
mov
mov
mov
sbb
mov
aas
mov
sub
and
xchg
mov
je
lods
mov
lsl
or
dec
popa
cld
or
ret
mov
sbb
in
push
sub
or
mov
ret
and
mov
adc
int3
dec
test
int
mov
lea
test
lods
js
clc
fistpl
xchg
cli
xor
dec
movsb
insb
scas
lods
iret
adcb
enter
xchg
popa
ljmp
fisubs
sbb
push
shrl
cmp
push
mov
lods
leave
lods
inc
mov
gs
xor
jns
pushf
mov
movl
iret
jno
xchg
xchg
inc
fdivrl
mov
fisttps
les
mov
dec
pusha
fstpt
and
insl
pop
mov
insl
hlt
jnp
outsl
xchg
pop
iret
add
aam
popfw
jns
test
pop
xchg
sbb
and
mov
xor
and
imul
das
andl
les
inc
lods
sti
mov
repnz
inc
dec
loop
xor
mov
add
mov
add
aas
pusha
insb
aad
hlt
cmp
inc
sbbb
xor
divl
dec
jge
add
les
mov
add
add
aad
mov
xor
jmp
push
gs
test
ss
sub
movsb
xchg
or
adc
pop
and
sub
jno
push
push
bnd
lret
mov
push
xchg
add
jne
xchg
mov
sub
test
jecxz
push
cltd
mov
inc
shll
movsb
je
pop
adc
test
cmp
pop
je
loop
nop
insb
rcrl
inc
in
cli
mov
and
jb
in
cltd
sub
xchg
sbb
pushf
adc
add
es
pop
nop
lret
imul
push
sbb
add
addr16
cmp
test
or
cltd
jmp
sbb
mov
lahf
das
test
push
stos
add
xchg
movsl
jnp
arpl
inc
adc
jne
pop
push
mov
jle
xor
ja
stc
fidivl
aam
fnstsw
aaa
int
gs
adc
outsl
sbb
jne
mov
pop
movsb
outsl
dec
test
mov
jb
mov
in
shll
rorl
in
xchg
ret
xchg
inc
fnstsw
adc
pushf
add
mov
xchg
xchg
test
lods
cmc
subl
arpl
pop
movsb
and
adcl
push
stos
adc
mov
and
jmp
mov
test
sub
push
mov
pop
dec
xor
xchg
sahf
sub
into
sub
fdivs
pushf
clc
int3
jno
and
push
test
popa
pop
or
pop
pop
mov
xor
in
cmp
dec
nop
fistpll
movsl
cwtl
scas
jno
arpl
int
loopne
aam
cmp
cltd
sahf
ss
add
test
test
das
xchg
push
popa
add
shr
imulb
bound
xlat
in
dec
jno
loope
pop
mov
insl
dec
pop
into
sbb
sbb
sbb
cmp
inc
adc
and
cld
sub
lods
in
dec
lcall
xor
cwtl
add
aam
lahf
cld
in
and
out
xor
xchg
out
call
mov
enter
push
sub
push
iret
jno
push
add
push
mov
ss
mov
repnz
dec
es
sti
mov
xor
loope,pn
sti
scas
mov
pop
les
aas
cs
pop
sbb
or
inc
sbb
stos
jo
movl
popf
mov
push
mov
xchg
scas
inc
fistpl
pop
push
lret
imul
mov
outsl
and
mov
lock
adcl
stos
add
xlat
call
into
push
xor
movsb
faddl
mov
and
dec
mov
xchg
mov
mov
in
test
xor
jmp
sahf
jmp
repnz
cwtl
ficomps
pop
dec
mov
es
mov
cwtl
mov
mov
mov
sub
data16
dec
mov
jmp
test
jp
sarl
pop
test
jp
push
nop
call
lret
orb
cmp
subb
subb
clc
cs
push
sub
lock
les
lock
dec
in
xlat
jp
add
inc
cmpsb
sahf
flds
mov
adc
fdivr
cmp
insl
inc
mov
inc
test
mov
scas
dec
mov
xlat
imulb
jge
test
stc
clc
stc
pop
lock
or
and
or
lods
sarl
dec
ds
adc
dec
mov
xchg
mov
push
sbb
mov
mov
xchg
cwtl
rcrl
jmp
movsl
mov
dec
sub
mov
pop
lods
ror
je
lret
sbb
sar
push
push
jo
cmp
jnp
test
xor
push
lret
sti
js
nop
sub
fadd
testb
fcoml
insl
jo
in
std
and
mov
icebp
adc
add
imul
xchg
jo
pop
out
popa
xchg
fsubs
dec
test
jbe
ficomps
gs
jb
and
popf
data16
movsb
test
jno
cmp
fisubl
push
cld
mov
mov
mov
in
gs
jecxz
pop
iret
cmp
ja
jp
mov
ret
cmp
xor
xchg
push
jmp
pop
dec
into
fidivs
roll
test
icebp
adc
add
push
push
inc
add
mov
in
lds
or
fcmovb
std
rorl
lods
inc
std
and
nop
in
mov
ljmp
xlat
adc
in
in
xchg
lret
jle
mov
sti
jmp
popf
in
sbb
jg
push
xchg
or
cli
mov
push
and
or
sbb
sub
lds
push
add
pop
fisttps
or
xor
push
mov
jo
pop
jnp
jg
das
push
jno
lret
insb
add
inc
xchg
clc
hlt
push
and
xlat
push
movsb
stos
and
mov
xchg
sub
aaa
mov
out
cmp
or
sbb
mov
fimuls
je
jmp
add
xchg
bound
jg
mov
int3
mov
xor
mov
js
aam
lds
xchg
add
je
in
xor
int
or
je
int3
mov
add
ret
aas
pop
clc
or
je
cs
fmul
jp
inc
in
sbb
mov
aam
cmp
cmp
inc
push
mov
daa
or
xchg
popa
cmpsl
test
adc
popf
jns
movsl
pop
sbb
jae
stc
aad
pusha
loop
ljmp
sbb
jae
or
js
push
jno
in
pop
and
rcl
sbb
cmp
movsl
jo
mov
xor
xor
cmpsl
fisubs
pushl
adc
icebp
add
push
pop
push
addb
pop
rorb
test
test
or
das
ljmp
cmpsb
or
dec
jnp
sarb
daa
nop
add
insl
pop
and
sub
push
cmp
mov
adc
gs
es
and
pop
icebp
mov
cmp
push
push
in
pop
scas
in
mov
ret
xchg
call
out
rcll
sbb
and
jae
push
lods
cmpsl
xchg
and
aas
and
xchg
inc
pop
add
pop
push
das
movsl
test
das
or
test
pushf
mov
jmp
pop
mov
jp
push
out
push
jg
pop
pop
ds
push
inc
xor
scas
add
mov
inc
inc
xchg
mov
imul
cmp
aaa
pop
iret
push
bound
out
mov
pop
lods
cmpsb
mov
testb
add
test
push
xlat
ficoms
inc
inc
aad
jbe
cmpsb
jae
inc
dec
test
or
jo
je
sub
jmp
into
lret
cltd
mov
jbe
cmp
pop
orl
and
ror
pop
adc
addb
push
andl
pop
mov
hlt
inc
push
and
jb
mov
xor
iret
mov
cwtl
jg
rcll
adc
mov
mov
cld
add
dec
in
pmaxub
xchg
pop
popa
mov
xchg
mov
imul
inc
jg
imul
pushf
xchg
jno
and
imull
imul
dec
fisttpll
lods
or
scas
mulb
sbb
adc
mov
aaa
sub
adc
mov
loop
pop
int
test
subb
imul
into
add
mov
jne
or
fwait
mov
data16
adc
cltd
pop
adc
fiaddl
xchg
aam
aad
cmp
pop
mov
fwait
xchg
jp
ret
sbb
daa
repz
sub
enter
sub
sub
hlt
jns
and
lret
mov
cmp
cltd
fs
jl
adc
sbb
cltd
mov
icebp
jge
inc
test
pop
xor
sub
jns
jge
clc
movsl
xchg
jb
cmp
push
mov
xor
mov
cltd
sub
xchg
aam
lcall
inc
pusha
ja
lock
insb
and
pop
stos
inc
push
into
aaa
rcrl
les
jno
mov
stc
jns
cmc
das
jbe
cld
ret
popf
cmp
pop
popf
xor
jmp
loopne
push
sbb
loope
sahf
sbb
enter
shrl
shrl
inc
adc
push
or
jns
clc
and
add
cmpsb
rep
xchg
aaa
push
sub
ret
sbb
adc
sub
jp
push
jae
ret
mov
mov
outsl
cmpsl
add
or
pop
and
fisttpll
or
lcall
push
fmull
mov
mov
bound
nop
push
or
lea
imul
dec
dec
mov
xchg
mov
aas
mov
scas
ss
outsb
adc
mov
push
sbb
popf
cmpl
add
pop
addr16
mov
xchg
pop
ret
jg
sarl
mov
aam
in
fnstenv
sbb
dec
insl
inc
xchg
push
xadd
cld
add
popf
push
mov
and
into
sbb
scas
cltd
cmp
lea
rolb
cmpsb
lret
decb
insl
mov
bound
and
popa
pop
cs
es
in
jp
lds
cmp
cmp
jge
ffree
inc
push
ret
ds
cmp
cmp
or
loope
or
je
sarl
jnp
push
push
sub
pop
xchg
sub
mov
lahf
mov
xchg
push
mov
loopne
lret
xor
mov
aaa
or
nopl
jnp
mov
mov
scas
inc
add
cmp
inc
mov
mov
call
mov
dec
mov
lods
pop
sbb
push
popf
push
push
icebp
push
and
loop
mov
clc
push
mov
inc
std
cwtl
je
ja
xchg
jl
inc
clc
jecxz
jne
sbb
lods
and
std
push
aas
repz
push
aaa
ret
push
imul
sahf
mov
mov
out
test
mov
mov
cli
xchg
cs
cld
inc
xchg
dec
arpl
sti
sbb
mov
pop
out
icebp
imul
jno
popa
rcl
mov
jg
rorl
cmp
fcoms
pop
push
mull
pop
mull
and
mov
or
or
xor
dec
xor
fwait
push
add
das
imul
pop
lods
mov
adc
and
mov
ss
test
pop
jns
or
mov
mov
cwtl
ja
and
mov
daa
push
sub
loopne
and
mov
lret
jne
pop
scas
mov
idivl
imul
cmp
xchg
out
lock
mov
jne,pn
aas
xchg
and
push
fiadds
mov
mov
cmp
mov
rcll
xchg
add
daa
sub
or
mov
cmp
call
xor
sbbb
cmpsl
test
adc
pusha
aas
std
pop
pushl
sbb
in
mov
enter
out
push
xchg
lret
out
mov
dec
mov
pop
ret
pop
add
sbb
sub
aas
inc
stc
movl
jle
xchg
pushw
scas
lret
shlb
repz
das
xorl
insl
movsb
cmp
sbb
adc
xor
subb
inc
scas
push
bound
and
add
cmp
dec
mov
jns
cli
inc
in
xchg
xchg
fists
cmpsb
pushf
mov
xchg
push
inc
outsb
add
movsl
adc
in
testl
hlt
cmc
cmp
mov
in
push
outsb
adc
je
jl
je
adcl
call
pop
ss
nop
add
mov
je
movsl
lea
aaa
shll
push
dec
pop
or
sbb
add
icebp
data16
dec
orl
and
mov
and
push
aaa
sbb
mov
cmpsb
scas
jne
push
popa
lret
repz
std
pop
mov
addb
out
push
imul
outsl
cmp
in
sub
mov
mov
sahf
dec
cld
xor
add
out
jno
test
aas
lds
ss
out
mov
cld
add
js
mov
mov
ljmp
call
push
stc
in
rorb
adc
push
data16
mov
addb
sub
in
sub
loop
mov
leave
sti
xor
popa
fisubl
mov
shll
repz
loop
cld
enter
jbe
xchg
lret
jle
sub
fnstcw
xor
jmp
and
adc
cld
cmp
pop
mov
arpl
xchg
icebp
call
ret
dec
jae
out
and
jbe
hlt
jnp
addps
mov
fwait
int
out
mov
inc
pop
pop
xor
test
or
cmpl
sbb
fsubr
mov
add
outsl
das
into
mov
icebp
cmpsb
lods
xchg
pusha
lea
sbb
fmull
and
sub
jno
sahf
add
sbbb
mov
cmpsb
cs
test
mov
xor
or
inc
pop
xchg
mov
sub
pop
mov
fwait
add
jns
jne
adc
dec
aaa
cld
inc
subl
mov
sbbb
mov
or
mov
xchg
data16
cmpsl
push
ja
push
xchg
insl
mov
dec
fstpt
xchg
in
or
rcr
xor
in
push
sub
imul
lret
jmp
or
pop
add
fisttpl
mov
rorb
cmp
subl
jae
repnz
pop
fiaddl
jae
lods
add
lods
dec
ljmp
js
push
inc
mov
lret
bnd
mov
inc
xor
ljmp
fst
push
mov
xchg
test
xchg
lcall
cmpsl
mov
js
jmp
mov
call
jae
fnstsw
cmp
pop
mov
mov
dec
pushf
inc
inc
rorl
aas
mov
inc
inc
mov
or
sub
xor
decb
lods
in
sub
jge
mov
fsubrl
xchg
lds
mov
lds
jae
mov
push
pop
test
test
or
sbbb
push
into
jp
gs
jge
sti
mov
pop
in
push
test
fptan
mov
or
xchg
xor
sub
and
mov
xor
xchg
adc
es
inc
test
daa
sbb
cmpsl
xor
jge
sbb
and
pop
lods
jl
adc
push
int3
jnp
xchg
push
pop
add
cmp
divl
out
inc
mov
aam
out
jnp
or
jnp
inc
xlat
movsl
fwait
jle
jp
mov
imul
mov
xchg
enter
imull
and
dec
fstpl
xor
ss
in
mov
push
mov
cmp
pop
pop
and
xor
pop
and
shl
xor
xchg
jne
and
cmp
das
movsl
lea
mov
xchg
add
fmuls
test
mov
cmp
add
iret
or
fwait
inc
cmp
sbb
into
adc
jne
lret
mov
pushf
and
arpl
jle
push
arpl
dec
ljmp
addl
or
test
sahf
das
and
repz
or
stos
push
mov
mov
mov
adc
sub
add
push
fndisi(8087
popa
mov
jne
cs
test
cmp
and
outsb
je
iret
sub
into
mov
rcl
jmp
int
mov
jbe
sbb
idivb
add
leave
cmp
ficoms
mov
js
push
mov
xchg
lock
out
mov
movsb
sbb
cmc
sbb
mov
outsl
scas
cmc
sbb
divl
out
std
fneni(8087
loop
sbb
mov
es
xor
xchg
or
rcll
stc
jp
xchg
andb
out
inc
in
aad
push
fwait
inc
add
sbb
sbb
in
xchg
in
in
jo
xchg
mov
adc
lahf
push
in
jl
push
aam
scas
sbb
jae
dec
aam
cmp
and
mov
enter
lods
push
inc
fistpll
dec
fisttpl
andb
pop
aad
enter
mov
lea
cmp
movl
ret
mov
shrb
in
or
pop
js
outsl
mov
xlat
xchg
sub
arpl
adc
or
lea
cmpsb
jo
test
cmp
xchg
in
pop
adc
lret
addr16
xchg
xchg
enter
popf
mov
xor
sub
popa
or
cmp
lret
push
imul
dec
dec
or
imul
push
loop
div
icebp
test
test
ret
fcoms
cmpsl
aam
lds
les
fnstcw
sti
imul
das
jns
xor
das
ficoml
outsb
inc
popa
test
pop
outsb
or
inc
fsubl
jge
or
sti
xor
push
and
int
ret
je
pop
ret
jg
or
insl
loop
test
inc
inc
push
add
cs
pop
popf
push
push
stos
adc
inc
inc
pop
pop
and
fmul
push
pop
out
insb
jo
loopne
inc
xchg
push
adc
jnp
or
push
ret
pop
jecxz
or
aam
call
adc
lcall
enter
push
loop
inc
inc
mov
dec
mov
xor
icebp
xor
xbegin
mov
push
mov
lret
gs
xchg
cld
test
and
test
mov
jne
xor
mov
jo
or
and
xchg
loope
mov
sti
leave
jg
push
iret
and
jb
xchg
fcompl
ret
sbb
sti
sbb
das
cld
pusha
pushf
in
and
dec
aad
pop
lea
shlb
enter
divb
cmp
xlat
out
mov
jns
mov
push
mov
and
mov
jg
cwtl
inc
stos
mov
hlt
and
lds
cmpl
inc
xchg
push
mov
cld
sbb
testb
inc
hlt
aam
int
mov
test
cmp
jge
flds
addr16
sub
jb
sahf
mov
xor
bound
test
ds
mov
int
cmp
sahf
mov
sub
sub
repnz
dec
sarl
sbb
in
pop
inc
xor
dec
out
es
xor
outsl
cmp
lods
lcall
pop
ficomps
pop
in
arpl
sbb
push
insl
aad
lods
mov
push
fidivs
mov
cmp
stc
into
and
jnp
push
ffree
pop
xchg
out
cmp
aaa
pop
test
addb
inc
data16
xor
lock
test
jmp
add
mov
xchg
adc
xor
adc
stc
pop
sbb
scas
cmp
add
lea
sub
pop
aam
add
in
ljmp
adc
or
lret
pop
sub
lcall
xchg
ss
cmc
adc
loope
xor
and
mov
sarb
inc
in
stos
movsl
es
sub
sub
jmp
sub
jmp
out
and
xchg
and
pop
sub
add
jns
daa
fwait
add
mov
fcompl
mov
in
xchg
fisubl
dec
out
or
cmpsb
sahf
mov
movsb
cmc
push
mov
cmp
aad
in
divb
aam
mov
jb
jg
jmp
mov
inc
push
stos
jne
mov
dec
das
jg
movsb
enter
divb
out
xchg
repz
pop
movsl
dec
test
enter
outsl
daa
mov
xchg
fldt
stos
xor
mov
insb
xorl
adc
jmp
mov
dec
popf
sub
outsl
or
adc
push
in
stc
pop
rolb
int
ljmp
xchg
inc
arpl
into
pop
jle
cld
int3
in
data16
push
sub
cmp
movsl
cmova
cli
ljmp
repnz
call
lods
mov
pop
pop
mov
cmp
cmc
outsb
or
mov
out
ret
iret
shrl
xor
fldl
or
outsl
push
repz
jg
rorl
adc
stc
push
adc
idivl
fdivrs
int
adc
inc
jmp
out
idivl
adc
sub
ds
sahf
mov
jmp
jl
pop
jns
mov
or
sbb
xchg
xor
xchg
mov
gs
add
mov
loopne
dec
ljmp
adc
jge
gs
adc
arpl
xchg
sbb
mov
movsl
in
xchg
pop
pop
cwtl
test
jb
cltd
fistpll
pop
jne
loope
les
dec
mov
fildl
outsl
mov
data16
popf
jae
mov
or
cmpsb
sub
xchg
into
push
xchg
cmp
push
jno
sbb
jmp
inc
es
jae
lahf
push
inc
pop
adc
cmpb
mov
mov
cmp
jo
lods
out
jbe
sbb
xor
pop
out
jge,pn
je
mov
les
inc
call
push
fcoml
shlb
andb
add
sub
and
rcrl
mov
inc
cmc
insl
out
adc
inc
ss
push
jmp
jns
jecxz
test
into
jo
mov
fnsave
rclb
aas
xlat
stc
cmpl
or
inc
movsl
pushf
push
test
jge
sub
adc
cmpsb
imul
pop
jge
lcall
jl
push
imul
dec
xchg
jae
xchg
dec
or
inc
mov
adc
xchg
xor
fucomi
push
push
testb
popa
sub
dec
jmp
dec
xchg
fs
into
int3
repnz
lods
stos
imul
out
pushf
iretw
dec
cli
lods
imull
lea
dec
cmp
rcrl
movsl
in
test
les
hlt
or
jp
pop
into
inc
mov
add
pop
pop
adc
sar
insb
sbb
pop
adc
lods
cmpsl
adc
mov
rorl
lods
mov
imulb
mov
enter
mov
pop
xor
test
in
repz
pop
sub
and
lahf
arpl
movsb
mov
pop
jmp
mov
scas
outsl
xor
shlb
ret
lea
pushf
xor
mov
xchg
cmp
incb
shl
sub
xor
fcomps
fstps
shrb
andb
sbb
and
ss
nop
les
push
repz
xchg
xchg
call
aam
addr16
loop
jmp
sub
push
daa
jl
mov
push
and
je
popl
stos
mov
mov
inc
or
pop
cmp
and
or
push
in
cmp
movsb
jbe
int3
mov
int3
fmuls
xchg
not
cmp
inc
sbb
cltd
scas
mov
cli
sub
mov
jnp
xchg
adc
sub
cld
bound
dec
call
jns
stos
daa
test
out
shr
jae
sub
push
sti
loope
inc
push
inc
pop
mov
jmp
prefetch
or
xchg
adc
fsub
add
or
xchg
dec
mov
mov
dec
push
pop
int3
lds
mov
jle
cwtl
push
pop
imul
ficompl
sbb
sub
mov
mov
cli
outsl
test
mov
xor
pop
in
les
into
scas
pop
movsl
test
push
or
negb
mov
inc
xorb
orb
mov
cmpsl
ret
and
pop
adc
sbb
pop
or
rcll
cmp
scas
enter
test
jb
cmc
mov
popa
xor
stos
popf
mov
cmpl
pushf
cmp
or
mov
test
mov
mov
push
mov
jo
jae
lods
movsb
ljmp
mov
ljmp
ret
xchg
imul
cvtps2pd
fs
mov
sub
mov
lret
sub
xor
pop
lret
mov
inc
std
aam
push
fadds
pop
stc
test
je
ror
imul
cwtl
or
mov
sbbl
out
outsl
cld
data16
cwtl
dec
leave
inc
mov
or
mov
mov
test
stos
push
xlat
push
pop
xchg
aas
lret
outsl
mov
inc
leave
cmc
movb
push
inc
sarb
lahf
into
mov
xchg
cs
daa
cmp
out
gs
sti
jno
out
or
mov
xchg
adc
push
and
pop
into
push
int3
add
aam
icebp
add
testl
inc
out
push
push
xchg
pusha
or
mov
mull
nop
mov
jecxz
dec
sbb
xchg
xchg
call
mov
rcll
cli
cmpsb
adc
jecxz
or
adc
repnz
subl
inc
test
ja
cmp
fidivl
and
push
push
ret
cli
push
inc
mov
jnp
dec
add
sub
out
call
decl
mov
sbb
loop
pushf
sahf
inc
ret
aad
sbb
mov
not
pop
or
dec
inc
into
xor
mov
pop
dec
sub
sbb
pusha
and
cld
repnz
sub
push
add
addl
subl
cmp
xchg
rcll
mov
push
push
test
xchg
pop
xor
jb
xchg
add
dec
push
lcall
addr16
hlt
sbb
lret
push
or
fstpl
inc
sub
fdivs
ja
sbbb
cs
fs
jg
daa
aam
stc
push
pushf
mov
adc
xor
push
pop
addr16
inc
movsl
add
lock
imul
call
out
jmp
sbb
xchg
xor
in
mov
push
sbb
movsb
in
test
sub
jl
add
mov
add
ss
mov
out
push
insl
xchg
shlb
fwait
dec
mov
enter
das
push
and
lret
jmp
lods
push
sub
adc
mov
fcomi
jle
gs
and
shlb
movsb
movsl
lds
jmp
or
arpl
add
es
adc
fimull
xor
cs
xchg
jg
and
mov
push
inc
pop
push
daa
hlt
out
in
xchg
rcl
imul
jb
fimull
hlt
cmp
push
pop
jge
xor
fcmovnu
mov
xchg
movsl
xchg
rorb
loopne
icebp
xchg
jne
xchg
shll
fisubrs
mov
addr16
push
out
dec
ljmp
push
daa
repz
shrb
mov
shll
movsb
je
mov
mov
or
xchg
data16
aaa
imul
sub
mov
orl
jo
pop
xchg
or
dec
mov
out
jmp
dec
xchg
mov
addb
aaa
popa
jno
mov
nop
popa
xchg
xor
loop
sbb
popf
rcll
sti
ret
ljmp
lods
adc
xor
inc
dec
lret
into
lret
addr16
push
or
daa
jg
dec
daa
dec
sub
clc
cmc
mov
adc
cmp
nop
mov
movsl
sbb
leave
sti
pop
inc
dec
mov
push
lds
mov
xchg
movsb
mov
aaa
loope
out
fimull
roll
out
mov
nop
jo
fxtract
loopne
xchg
cltd
mov
stc
lods
add
sub
aam
push
fsubrs
imul
cmp
fwait
icebp
adc
pusha
test
shl
repz
loop
or
lods
fcoml
jae
fwait
sbb
sarl
mov
push
ret
mov
clc
add
cltd
das
dec
scas
out
mov
shrb
mov
hlt
inc
mov
test
jae
and
in
sub
sar
jnp
mov
pusha
lods
push
inc
cwtl
lcall
push
push
cmpsl
pop
stos
fwait
hlt
push
ss
jnp
ret
call
add
add
inc
jp
shll
in
or
cmp
rcrb
or
push
ret
push
pop
push
and
dec
loopne
subb
dec
out
es
and
addl
mov
mov
sahf
ds
insb
jl
cs
sub
cmp
lcall
mov
and
lods
cs
sub
dec
inc
test
dec
hlt
sbb
test
pop
clc
inc
clc
jg
xchg
aad
in
iret
fildll
cmpsl
and
and
push
es
or
mov
jbe
hlt
outsb
rorl
jno
jae
test
lds
mov
scas
adc
addr16
cmp
dec
xchg
fs
mov
jo
xor
pop
and
addl
popa
sbb
stc
es
adc
sbb
cmp
add
xor
rorl
xor
nop
pushf
js
int3
mov
xchg
adcl
push
lds
lret
or
push
int
dec
iret
xlat
or
cld
fdivrs
insl
push
adc
push
sub
xchg
ret
out
loope
das
insb
mov
js
int
adc
into
jbe
sbb
xor
push
addr16
mov
jb
ljmp
push
fidivrl
fldcw
push
pushf
cmp
movsl
inc
in
pop
xorb
pusha
lods
push
ja
mov
ss
stos
mov
aad
shl
pop
fisttpll
xchg
out
add
jo
xchg
cmp
adc
jnp
call
inc
pop
cmp
orl
sub
mov
mov
mov
jnp
sbb
mov
in
lcall
inc
sub
cmp
xchg
jle
fiadds
loopne
sub
ljmp
and
ret
imul
or
xor
and
inc
int3
cmpsl
jns
pusha
andl
cmc
inc
mov
stos
mov
xchg
mov
lock
inc
sarl
movsl
popf
ret
cld
mov
jmp
test
jo
cld
out
jecxz
fstpl
cmp
popf
lret
push
stc
hlt
adc
shlb
mov
or
push
sub
xor
les
xlat
cmp
cmp
movsb
cmpl
mov
and
push
fiadds
inc
xchg
dec
stc
mov
mov
mov
add
inc
xor
enter
out
das
mov
mov
lods
scas
addb
hlt
xor
icebp
xchg
push
adc
ret
xchg
push
mov
or
sbb
shrb
sbb
das
xor
push
push
dec
cmp
je
or
mov
adc
popa
inc
enter
jp
push
sbb
sub
pop
adc
jb
scas
inc
sbb
lods
sbb
xlat
cmpsl
into
and
xlat
nop
mov
xchg
movb
push
push
mov
lods
xchg
adc
pop
xor
lret
or
jge
mov
pop
jg
and
jle
mov
in
mov
sbb
dec
mov
lock
pop
adc
jbe
fs
test
add
imul
fistl
inc
outsl
out
sbb
push
add
xor
inc
jl
adc
into
mov
mov
xchg
inc
mov
push
push
les
adc
loopne
pop
ljmp
movsl
ret
test
lret
lret
pop
loop
cwtl
cmp
dec
arpl
or
mov
pushf
popa
xchg
imull
add
out
dec
mov
nop
or
jmp
aad
ljmp
mov
arpl
sbb
jge
cltd
scas
inc
inc
imul
pushfw
sub
mov
pop
fcmovbe
shll
sbb
cltd
push
out
xchg
lret
in
stc
pop
sbb
pop
push
sbb
push
leave
pop
jmp
das
popa
fnstenv
push
add
lahf
cmpsb
pusha
sub
sbb
sarl
enter
and
mov
insl
adc
xchg
lds
jge
and
lods
dec
and
push
out
int
inc
into
cmp
or
ja
hlt
test
pop
xor
roll
push
fsubrs
jp
dec
lret
imul
push
push
mov
push
int
mov
xlat
and
shll
lock
pop
je
test
xchg
jo
into
mov
pop
ljmp
pop
mov
jb
mov
xchg
pop
xchg
adc
and
es
iret
or
dec
repz
fcomip
inc
cmp
and
sbb
cmpsb
mov
loopne
xor
jns
jmp
jno
adcl
ljmp
data16
arpl
nop
xor
cmc
mov
mov
ret
jb
and
fadds
pop
ret
or
clc
jl
sarl
aas
stos
loopne
fists
dec
divl
lret
daa
add
push
xchg
out
test
inc
stc
cmp
std
and
shlb
in
xorl
repnz
inc
lcall
mov
adc
sbb
aas
popa
push
xchg
insb
pop
jge
jb
xor
jle
xchg
into
mov
add
repnz
leave
xchg
repz
dec
jb
mov
int
mov
and
les
xchg
pop
xchg
pop
ds
daa
loopne
pop
add
js
stos
mov
clc
dec
sbb
fwait
lea
sbbl
adc
add
lock
pusha
mov
dec
js
cld
jmp
sbb
inc
adc
movsl
xchg
aad
jnp
or
mov
xchg
sbb
pop
in
hlt
ret
sbb
cltd
jo
cmp
mov
popf
jg
int3
pop
or
insb
movsl
incl
inc
ret
incb
and
outsl
dec
sub
fldcw
push
add
mov
cs
lcall
rorl
jno
int3
jle
add
lock
in
adc
hlt
mov
inc
std
jo
fadds
jl
adc
sbb
daa
int3
pop
clc
ret
pop
mov
inc
pop
pop
mov
cmp
lods
testl
std
mov
mov
mov
or
jbe
dec
ja
inc
flds
fcmovu
mov
daa
push
jp
cld
test
ljmp
je
inc
and
movsl
cmp
clc
stos
je
sub
test
xchg
xchg
ss
pop
imul
cmp
nop
aam
xor
pushf
lock
lods
mov
sahf
inc
xchg
outsb
push
pop
xor
mov
xchg
adc
jae
push
cwtl
inc
add
cld
push
mov
js
mov
roll
aaa
mov
jne
enter
popf
jae
in
in
xor
pushf
in
fs
mov
or
dec
xchg
dec
lahf
push
xchg
inc
inc
mov
sub
jg
mov
push
imul
mov
xchg
cmp
pop
cwtl
mov
cmp
adc
in
sub
xchg
dec
push
push
mov
and
and
movsb
mov
outsb
inc
lahf
mov
lea
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
call
push
push
push
call
push
push
push
push
push
call
test
je
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
call
push
push
call
push
push
push
call
lea
push
call
call
cmpw
pop
push
je
push
push
call
push
call
add
call
jmp
push
push
call
decl
subb
fildll
call
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
sbb
repnz
les
adc
adc
lods
jae
aaa
and
gs
ret
out
pusha
test
data16
in
xor
mov
cmp
imul
jo
fildll
mov
sbb
test
sarb
cmp
and
sub
into
aaa
adc
enter
mov
sbb
dec
jno
xchg
lds
test
pop
jp
pop
sub
mov
dec
mov
push
mov
push
aad
pop
pop
sbb
xor
sbb
stos
cmpsb
iret
adc
pop
inc
mov
test
and
sbbb
cld
int3
jo
fildll
sbb
sar
int3
pushf
adc
adc
pop
inc
fdivr
jno
adc
mov
adc
cld
lea
iret
stos
cmpsb
iret
adc
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
lock
stos
mov
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
fdivl
iret
stos
cmpsb
iret
adc
pop
push
fdivr
int3
jo
fildll
xchg
sub
cld
movsl
jae
fildll
sub
cld
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fcom
mov
cmpsb
iret
adc
sbb
fsubr
int3
jo
in
cmpsb
iret
push
fstl
push
popf
mov
stos
cmpsb
iret
adc
aaa
inc
fcomps
add
leave
cmpsb
iret
adc
inc
inc
fdivr
cld
jnp
cmpsb
iret
adc
adc
cld
int3
jo
fildll
pop
data16
sub
adc
stos
cmpsb
iret
adc
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
pop
inc
fdivr
int3
jo
fildll
sbb
pusha
adc
addb
jnp
popf
daa
aaa
mov
xchg
sbb
dec
jnp
jl
and
or
xchg
iret
add
std
stos
subl
into
icebp
lods
add
xor
clc
das
jns
sub
cmp
and
fcmovu
ficompl
xchg
insb
mov
cmp
cwtl
rcrb
ds
jp
mov
or
rcll
int
mov
lods
mov
cld
jb
nop
ret
fstpl
fldl
in
inc
or
pop
inc
fdivrs
xor
sub
push
fcompl
shll
and
inc
loope
pop
push
lds
sbb
xor
inc
and
leave
push
mov
mov
sahf
loope
dec
xchg
hlt
pop
xchg
push
loopne
mov
sbb
push
stos
inc
sbbl
cmp
ret
push
push
xlat
addr16
mov
cmp
fimuls
dec
cmpsl
cmc
cmp
jecxz
lea
inc
adc
jecxz
int3
pop
data16
sub
adc
inc
pop
mov
mov
and
sub
nop
fistpll
stos
repz
cwtl
mov
cmp
and
add
lods
sub
hlt
sbb
pushf
inc
das
stos
lahf
sub
and
andb
std
ds
mov
push
xlat
je
cmp
adc
lods
mov
pop
enter
icebp
cmp
and
loop
mov
int
xchg
push
stc
xchg
cmp
test
mov
icebp
pop
mov
push
cmpsb
pop
mov
xor
loopne
dec
imul
push
cmp
inc
out
imul
stos
cmp
cmp
jbe
mov
repnz
inc
loop
or
je
jnp
das
faddp
lods
dec
in
push
xor
jecxz
sbb
cli
pop
aas
loopne
jnp
aam
shll
mov
and
mov
fisubrl
or
adc
cwtl
push
loopne
sbb
andl
gs
mov
fwait
lret
mov
pop
adc
and
xlat
fwait
stos
mov
inc
pop
in
addl
scas
repz
pop
mov
mov
sub
jns
test
daa
xchg
add
outsl
mov
scas
xchg
push
and
hlt
call
in
shr
test
push
pusha
dec
mov
psubsw
and
cmc
and
leave
je
and
pusha
andb
or
xchg
in
int
and
fs
mov
int
cwtl
lcall
sub
mov
mov
cmp
inc
cld
lcall
inc
test
pushf
cmp
mov
popf
mov
dec
pop
and
pusha
pop
adc
inc
cmpsb
dec
jle
les
push
fs
add
cld
mov
sbb
xchg
fs
out
lods
xchg
sub
cmp
aaa
cmp
bound
cmp
mov
xor
into
xchg
or
sub
int3
aam
in
fcmovb
cmp
je
jno
lods
mov
xchg
mov
sbb
sub
fiadds
jg
push
test
sbb
lcall
mov
mov
inc
cmpsb
sub
sub
adc
sub
dec
adc
aad
sbbl
xchg
aaa
mov
xor
outsl
and
sub
loopne
fistpll
fimull
sbb
lods
loopne
xor
int3
mov
xchg
test
push
fisubrl
xor
sub
cmp
mov
into
push
sub
mov
repz
mov
sbb
mov
mov
xor
cld
jecxz
ja
inc
mov
insb
mov
subb
cld
add
les
sbb
mov
jbe
xchg
outsl
fbstp
mov
out
loopne
sarl
ret
jl
imul
mov
movsb
iret
dec
pop
xchg
push
jns
xchg
pop
push
int3
mov
jno
aam
or
push
int
into
into
ss
inc
fimuls
push
xchg
inc
add
shl
cwtl
mov
sbb
dec
dec
pop
pusha
data16
pop
xchg
xor
sbb
jae
xchg
fidivrs
mov
test
jae
mov
cmp
repz
insb
xor
scas
jg
jmp
pop
fadds
cs
movsl
enter
dec
jmp
and
lcall
mov
icebp
shrb
jae
stc
decb
mov
aam
lods
dec
pop
iret
push
mov
sub
cmpb
sbb
andl
ficompl
push
adc
mov
insb
nop
cmp
mov
pop
test
pop
or
imul
incl
out
stos
pop
mov
mov
push
std
inc
mov
int
fprem1
sahf
movsb
sbb
sti
aam
mov
xor
push
mov
lock
ret
sub
jno
pop
lods
lret
pusha
and
and
xor
xchg
rorl
mov
insb
jmp
jg
stos
test
shlb
movsl
push
mov
push
xchg
aam
mov
adc
inc
pop
ficomps
fs
xor
jne
and
pusha
dec
repz
or
inc
aam
popf
aad
dec
dec
outsb
jp
xchg
arpl
fiadds
pop
std
mov
mov
popa
in
push
push
test
jae
fwait
add
push
into
inc
pop
sub
pop
mov
mov
mov
pop
lret
daa
mov
fdivl
scas
ret
cmp
sub
sbb
pop
mov
push
mov
aaa
cs
xchg
sbb
insl
in
addr16
ja
sbb
popa
test
sub
mov
int3
jg
cmp
or
mov
addr16
cwtl
xchg
cmc
fwait
cmpsl
xchg
inc
mov
pop
jno
mov
cltd
jle
lea
outsl
call
cmp
lods
sub
popf
lret
fdivrl
inc
inc
nop
bound
call
icebp
push
stos
rcll
sbb
aaa
je
sub
es
fadds
mov
fildl
in
movntps
ds
aad
insb
mov
cmp
mov
je
cmpsb
dec
ss
je
jmp
sbb
leave
cmp
data16
repz
add
adc
mov
and
sub
aad
cltd
pop
xchg
mov
inc
leave
and
jmp
jnp
add
pop
es
mov
shlb
cld
mov
push
push
xor
movsb
sbb
add
mov
inc
int
andb
jns
test
sbb
jmp
fsubrs
mov
imul
aaa
push
fldcw
mov
fmuls
cmp
xchg
mov
sbbb
push
sub
sbb
jp
or
sti
nop
je
scas
icebp
test
cld
adcl
add
icebp
mov
cmp
push
xor
push
into
mov
cld
cmp
push
int3
jne
jle
lock
popf
or
jg
sbb
js
fucomp
in
mov
fsubs
inc
stos
dec
iret
add
fsubrp
mov
loopne
jnp
cs
int
jle
xchg
mov
leave
fchs
pop
cmp
pop
sbb
xchg
rclb
repz
and
mov
jns
out
insl
movsl
jo
cmp
cltd
mov
push
lock
inc
push
stc
mov
sbb
sub
jns
ja
xor
les
xchg
mov
xchg
sub
fldt
es
push
pop
enter
push
arpl
js
push
iret
push
nop
mov
clc
scas
adc
mov
xor
mov
shl
jne
sub
andb
sti
mov
in
lahf
mov
rolb
push
bound
scas
sub
fcoml
mov
push
divb
and
mov
stos
int3
mov
cmp
popf
sbb
or
add
insl
mov
sub
lock
lahf
int
mov
imul
xchg
mov
outsl
pop
pop
aad
or
xor
pop
sbb
push
sub
and
cmp
lock
xchg
pop
xchg
popf
scas
ret
fwait
lds
jno
xchg
movsb
xor
mov
xor
jmp
mov
and
and
in
pop
mov
add
jbe
loopne
int3
xchg
and
faddl
cs
es
scas
test
xor
lret
xchg
inc
xchg
flds
jne,pt
mov
inc
pop
movsb
jae
add
roll
sub
fadd
std
or
lea
jp
sbb
add
push
mov
xlat
xchg
cwtl
shrb
movsb
das
jl
or
fistl
sub
fildll
movsb
scas
jmp
lret
or
and
xchg
or
js
arpl
fdivl
outsb
fldcw
sbb
push
jo
lret
or
rcll
lahf
mov
dec
lea
jmp
scas
imul
fiaddl
test
and
rcrl
shll
pop
notb
mov
mov
je
mov
cwtl
sbb
jge
repz
push
enter
fdivrl
shrb
pop
lds
clc
repnz
mov
imul
lods
dec
pushf
loopne
and
sbb
mov
in
ret
lret
xchg
inc
testl
inc
cmpsl
out
sbb
and
loop
inc
gs
es
pop
pop
shlb
lcall
aad
dec
push
cmp
adc
mov
out
in
inc
mov
push
popf
sti
loope
jecxz
call
xor
clc
adc
icebp
adc
cmp
repnz
sahf
pop
push
imul
mov
into
pop
and
dec
out
inc
add
mov
sub
dec
sub
repz
dec
mov
dec
inc
and
arpl
xor
lret
in
ds
jecxz
test
repnz
mull
out
mov
push
push
dec
and
shrb
xchg
popa
xchg
sbb
pop
jmp
cmp
sbb
ljmp
bound
andb
icebp
xchg
fidivrl
cmpb
out
pop
mov
add
mov
fwait
xchg
loope
pop
in
out
inc
or
idiv
mov
leave
cltd
scas
mov
mov
imul
in
and
movl
dec
add
lret
clc
cmp
pop
das
or
pop
lret
cmp
add
and
adc
pop
fidivrs
aad
jne
repnz
and
imul
adc
mov
shlb
adc
sbb
or
xchg
mov
sbb
jge
jmp
adc
dec
sbb
jl
jl
xor
test
jns
decl
stc
mov
cmp
sbbl
dec
cs
mov
lods
mov
enter
mov
mov
sub
mov
dec
in
jne
add
push
insb
cmp
bound
xor
stos
sbb
dec
dec
lods
adc
push
bound
std
mov
push
test
fldcw
loope
daa
cmp
jo
mov
ja
mov
dec
lret
pop
mov
jns
adc
push
lods
rorb
cmc
push
int
dec
loope
add
push
adc
pop
push
jno
sub
and
inc
adc
xor
push
fistpll
out
sub
xchg
enter
jnp
and
inc
inc
sahf
lahf
rcr
loopne
rcll
lea
loop
into
mov
cld
lea
int
imul
pushf
js
nop
ss
xchg
adc
and
scas
rolb
outsb
scas
xchg
jo
test
mov
loop
add
in
adc
fiaddl
jl
out
and
in
push
cmp
push
and
es
inc
cs
jno
cmp
clc
and
mov
fldenv
cs
jcxz
int3
repz
mov
mov
imul
pop
lea
cmp
push
outsb
mov
fwait
xchg
push
sub
cmpsb
mov
xchg
mov
add
dec
jp
mov
pop
jno
jl
pop
mov
mov
push
cltd
test
dec
mov
fcompl
xorl
or
push
pop
inc
mov
stos
mov
lds
cmp
mov
out
test
rcrb
sbb
pop
sub
es
in
pop
js
mov
ds
es
in
lock
jne
adc
imul
into
test
adc
pop
mov
sub
pop
std
pop
push
mov
test
xor
in
sbb
hlt
push
sub
in
add
movsb
scas
mov
pop
jo
adc
int3
fs
push
and
pop
bound
pop
mov
dec
mov
xchg
shlb
test
xor
and
testb
sbb
cmpsl
jecxz
cli
mull
pop
out
test
mov
aaa
cmpsb
push
push
push
insl
dec
and
mov
out
mov
cmp
sbbb
push
push
in
dec
insb
inc
pop
sub
in
mov
cltd
sbb
mov
cmp
fists
pop
jle,pt
outsl
dec
iret
fdivr
cld
arpl
jge
push
pop
adc
clc
dec
adc
adc
xor
andl
xor
mov
xor
dec
sub
in
xchg
and
loopne
jne
fidivrs
adc
mov
adc
enter
popa
clc
cmp
rclb
jp
dec
jne
scas
add
out
inc
aam
cmp
mov
xchg
gs
mov
mov
xlat
cwtl
sub
xchg
jecxz
inc
mov
test
ficoml
icebp
jp
xlat
push
cmp
cmp
cltd
repz
mov
pop
sbb
xchg
pop
stos
pinsrw
jbe
sbb
shl
mov
fsub
popf
ds
or
cmp
push
adc
push
rorl
push
sub
rcl
mov
xchg
into
xchg
sub
gs
pop
xchg
mov
pop
pop
loopne
es
movsb
pop
and
mov
into
or
jnp
clc
and
adc
lcall
jnp
shrd
mov
call
sarb
add
bound
sti
cmp
fstpl
addr16
xor
adc
dec
dec
das
in
pop
inc
push
ja
add
call
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
bound
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
bound
nop
bound
mov
add
bound
jo
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
bound
aam
inc
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
arpl
nop
arpl
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
test
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
test
nop
test
mov
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
test
aam
inc
add
test
hlt
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
test
nop
test
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xchg
addb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
