sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
xchg
stc
shlb
ss
loop
loop
repnz
mov
sbb
arpl
cmp
aaa
fcoms
push
aas
mov
out
pcmpgtw
mov
lahf
or
loopne
xor
and
dec
mov
and
repnz
xor
jns
mov
jae
je
mulb
mov
test
int
call
bound
cmp
clc
pop
inc
cwtl
sub
cmpsl
jb
jle
ss
pop
cs
jl
push
loopne
ss
dec
dec
cli
int3
pop
or
test
cmp
clc
test
lods
sar
in
cmp
add
mov
xchg
sub
sub
jecxz
dec
or
leave
mulb
dec
cmp
loopne
pop
in
pop
push
loope
pop
int
jle
es
sub
push
lods
adc
xchg
xor
push
xchg
mov
imul
push
nop
or
sub
dec
outsb
push
dec
sti
xor
dec
lret
push
nop
adc
inc
inc
iret
arpl
xchg
xor
das
add
daa
jo
rorl
adc
lods
inc
push
mov
jg
mov
gs
rcll
in
push
call
sub
mov
daa
movsb
outsl
add
clc
dec
sbb
jg
lcall
call
cmp
xor
push
divb
adc
ss
out
pusha
data16
push
rep
popf
adc
dec
mov
dec
lds
push
lcall
stos
jbe
cmc
push
jae
push
add
mov
mov
popa
in
insb
fildl
dec
dec
xchg
ja
pushf
pop
insb
leave
repnz
cmp
icebp
adc
mov
sbb
shl
arpl
dec
enter
push
pusha
xor
lods
or
jae
adc
xlat
jne
add
inc
std
pop
andb
mov
clc
jb
sbb
mov
push
in
stc
or
ret
jmp
or
cmpsl
push
dec
mov
out
je
pop
ss
fdivrs
addb
lods
mov
xchg
testl
orb
adc
xor
adc
int
negl
mov
pop
cmp
adc
jp
fsubrl
sbb
add
lahf
ja
mov
sti
and
or
orl
outsb
popa
bound
stc
fadd
inc
dec
xor
sub
sbb
push
jb
jnp
xchg
mov
fld
mov
outsl
icebp
ss
in
hlt
mov
adc
negl
push
sahf
hlt
and
pop
call
mov
mov
sbb
mov
cltd
add
pop
mov
and
sarb
mov
popa
add
adc
and
jbe
lcall
or
jecxz
test
out
cld
mov
icebp
lret
push
sarb
iret
ja,pn
movsb
pop
std
dec
es
dec
ljmp
or
sbb
test
jmp
push
dec
xor
sti
cli
les
inc
cmovbe
mov
mov
movsb
loopne
add
dec
loop
mov
xchg
inc
cmp
mov
lcall
xchg
push
and
xor
pop
test
mov
stos
xor
in
leave
mov
add
cmpsl
ret
mov
sub
cmp
out
dec
mov
sub
int3
mov
or
and
sbb
scas
lcall
inc
jecxz
xchg
or
test
mov
jns
push
fsts
std
jl
mov
lods
jmp
into
test
packsswb
fsubp
jecxz
push
mov
aam
fsubs
and
insl
jbe
lock
mov
inc
fldl
test
and
movsb
shr
lret
hlt
cmp
push
negb
arpl
mov
pusha
cld
loope
mov
dec
test
xor
clc
mov
addr16
sbb
or
push
dec
mov
sub
or
or
data16
addb
jnp
fmul
cld
test
daa
adc
mov
xchg
push
lock
and
into
push
aaa
out
pop
test
aas
fmuls
cs
inc
or
jge
test
dec
xchg
dec
and
adc
inc
sti
sahf
add
rclb
fcoms
cld
xchg
jb
mov
push
jmp
dec
sbb
test
cli
dec
push
repnz
mov
in
and
fwait
or
adc
std
nop
nop
dec
mov
std
les
add
push
add
lods
repz
sub
mov
push
fdivs
push
inc
add
mov
sub
jb
mov
sbb
and
pop
cmp
push
xor
pop
xlat
push
incl
ljmp
mov
mov
mov
push
repz
dec
outsb
cmp
lods
jmp
jo
mov
sub
sub
stc
sbb
outsb
sub
insl
xlat
subl
mov
insl
xchg
mov
xor
mov
out
and
and
test
cmp
and
jle
popf
outsl
lahf
sbb
push
mov
popa
jmp
sub
daa
xor
sahf
mov
xchg
dec
xchg
xchg
cmp
xor
outsb
mov
negl
sbb
nop
loope
in
jne
nop
xor
xchg
sbb
cld
xchg
mov
outsb
fwait
mov
seto
push
insl
jnp
sub
sub
dec
push
mov
movsb
mov
dec
fsts
in
jg
lret
dec
pop
arpl
movsl
lods
fdivrl
or
inc
xlat
or
insb
mov
cmc
mov
jmp
dec
inc
jno
xchg
pop
fstpt
cmp
out
das
and
sbb
cmp
push
test
push
inc
jae
and
xor
test
test
imul
cmp
mov
ja
lods
lds
jecxz
sbb
cltd
pop
cltd
mov
pusha
xor
frstor
notb
rclb
or
pop
mov
iret
mov
pop
or
lods
outsb
pop
jae
jge
shlb
cmpsl
ja
sbb
lret
inc
xor
fs
test
aaa
mov
fists
xor
mov
addb
xor
sub
orl
in
inc
xor
fadds
jge
adc
ror
movsl
lret
jge
mov
xchg
rorl
orb
jge
push
cld
xchg
xchg
xor
xor
pop
rcrb
arpl
int3
ss
loopne
cmpsb
cmpsl
dec
les
rcrl
adc
repnz
dec
std
daa
je
aam
test
mov
or
scas
nop
sbbl
js
mov
cmp
mov
les
dec
add
loopew
sti
jb
adc
xchg
push
inc
leave
stc
loop
lock
xor
xchg
xor
mov
mov
mov
push
inc
cmpsb
jmp
ja
xchg
xchg
jo
or
pop
inc
and
xor
xlat
popa
incb
aad
and
adc
mov
dec
and
sti
ds
fnsave
xchg
sbb
test
xchg
les
sarl
aad
das
mov
xchg
mov
js
inc
mov
gs
mov
sbb
xor
xchg
repnz
popa
hlt
ljmp
jg
mov
ret
xchg
mov
adc
add
push
mov
stc
mov
sbb
popa
xlat
mov
fiadds
idivl
jne
jo
xor
rol
inc
pop
mov
hlt
jmp
cmp
dec
imull
add
movsl
insb
repnz
mov
sub
sbb
shrb
sub
push
leave
test
push
loopne
sti
adc
lret
iret
dec
ljmp
ljmp
popa
mov
popf
inc
aas
inc
inc
repz
or
mov
and
inc
movsl
inc
mov
out
stc
mov
xchg
xchg
imul
cmp
dec
les
jge
stos
gs
push
inc
nop
inc
hlt
insl
nop
inc
daa
and
xor
push
xor
cmp
mov
imul
je
or
es
test
incb
arpl
lahf
jg
enter
les
jo
pop
cld
inc
test
jb
or
jmp
cmp
mov
cmpsl
cmp
cmp
repnz
adc
lock
and
or
rcrl
iret
jle
pop
jmp
out
iret
test
ss
mov
stc
cmc
mov
cs
std
jmp
dec
sub
jne
jge
push
pop
insb
ss
leave
aam
or
mov
cld
push
jle
lahf
or
mov
mov
pop
std
cmpsl
int3
cmp
or
pop
stos
inc
arpl
pop
inc
xor
xor
loop
xchg
sbb
cli
test
sbb
std
mov
sub
sbb
movsb
mov
sbb
outsl
cld
sbb
inc
shrb
out
pop
jecxz
mov
stc
outsb
mov
lea
xorl
in
pop
or
adc
in
repz
sub
push
cmp
mov
hlt
call
lret
push
inc
fnstenv
lret
test
ror
push
push
iret
aaa
inc
cli
loop
mov
lods
test
push
push
mov
mov
pop
outsl
xchg
movsl
sti
and
insb
movsb
fisttpl
add
arpl
jne
repnz
fdivl
mov
mov
lds
or
andb
push
sbb
inc
les
xchg
xor
jge
push
cmp
mov
fsubs
sarb
sbb
mov
das
xchg
fdivp
aaa
es
aam
das
in
dec
popf
rorl
ret
je
insb
add
loope
test
cmp
test
imul
out
xlat
cmp
xlat
cmp
ja
xlat
adc
fwait
int3
aad
repz
ljmp
repnz
adc
fsubrs
push
push
adc
fidivrl
movsb
mov
loopne
or
loop
mov
repz
xor
cmpsb
jle
icebp
mov
inc
jmp
push
pop
xor
cmp
shlb
dec
cmp
inc
mov
push
dec
sbb
call
cmp
sub
xchg
icebp
xchg
mov
inc
iret
das
dec
cld
xchg
es
in
sub
pop
mov
cs
mov
or
scas
fadd
jl
enter
push
and
fsubl
xchg
das
and
test
js
pushf
pop
dec
nop
add
inc
stos
fsub
addr16
rol
sti
fsubs
xlat
cld
cli
rcrl
dec
cmp
mov
mov
mov
or
pop
mov
shrl
cmp
fcoms
dec
push
cmc
test
test
sti
jle
jle
mov
bound
mov
mov
js
ja
push
xchg
dec
pop
mov
fsubs
cmp
out
test
jle
mov
mov
sub
pop
int
popa
xor
mov
cmc
inc
mov
lods
mov
bound
mov
push
sub
fstps
lahf
insb
mov
daa
daa
jl
ret
shll
cmp
out
jmp
mov
mov
pop
cmp
rep
pop
mov
mov
mov
ret
jns
sbb
lret
mov
cmp
mov
out
mov
mov
cmpsb
pop
jge
outsb
scas
addr16
lahf
sti
dec
and
jae
out
aaa
sbb
and
jge
sub
xchg
mov
shlb
sti
and
fcoml
mov
push
xor
fistpl
sbb
push
jmp
test
dec
subb
mov
data16
popf
add
scas
aad
cld
sbb
adcl
push
js
sub
xlat
lods
lock
xor
pop
pop
pop
xchg
fistpll
lods
mov
dec
getsec
cmp
push
mov
and
mov
mov
cmp
xchg
rorl
popf
add
xchg
ja
dec
movsb
mov
jb
stos
repnz
mov
es
sub
or
xchg
scas
xorl
ljmp
push
popf
mov
insl
push
mov
in
clc
xor
data16
scas
pop
jg
stos
test
adc
mov
xlat
int3
xchg
mov
jg
push
jae
push
in
lea
pop
loopne
fsubrl
push
push
push
aad
mov
mov
in
adc
test
mov
inc
cmp
dec
fisttpll
in
mov
mov
xchg
clc
mov
int3
pop
scas
push
jmp
or
mov
xchg
xorb
inc
xor
adc
daa
push
jno
test
arpl
outsb
loopne
ror
xor
out
jecxz
mov
xchg
push
xchg
adc
inc
lds
xor
or
adc
in
push
sub
jp
sti
pop
push
scas
pop
add
push
mov
adc
in
sbb
loopne
push
adc
jno
xchg
mov
imul
adc
or
out
and
pop
rol
ret
mov
popf
imul
inc
ljmp
cmpb
mov
push
popa
sbb
and
dec
jno
mov
jle
sahf
leave
pop
scas
test
mov
ret
stc
test
nop
or
lods
adc
mov
leave
dec
xor
out
aas
clc
adc
stos
fimull
adc
pop
stos
cli
pushl
ljmp
sub
dec
jecxz
es
aam
cmp
cmp
jmp
lret
mov
call
mov
xor
out
push
mov
subb
pop
pop
insl
cs
loope
sbb
jnp
sbb
iret
sub
push
sbb
mov
into
pop
mov
xor
lds
sub
fs
sub
out
lret
sbb
or
stos
inc
sub
mov
scas
aaa
test
mov
in
mov
and
cltd
pop
gs
int
mov
mov
lea
ficompl
xor
int
cli
bound
std
cmpsl
test
mov
cmpsb
adc
cmp
sub
sbbl
add
out
idivl
sbb
mov
cli
ljmp
mov
in
jmp
cltd
cmp
xadd
outsl
lea
dec
mov
roll
cwtl
pop
repz
cmp
sbb
fiadds
sbb
movsl
hlt
stos
outsl
insl
shll
js
fnstenv
lret
mov
jne
cmpsl
mov
sub
leave
sub
cmp
outsb
pop
stc
mov
xchg
xchg
and
bound
das
push
insl
ret
outsl
mov
cmpsb
popa
xchg
lods
orl
mov
or
js
push
mov
les
mov
mov
xchg
lcall
adc
inc
inc
cmp
xor
push
jmp
or
ret
je
sub
mov
cmp
push
mov
dec
call
fmul
push
loop
xchg
aad
sub
decb
mov
jae
outsl
mov
bound
mov
mov
xor
iret
dec
rolb
push
add
insl
stos
cli
push
mov
mov
push
cli
cmp
mov
jae
push
or
clc
les
sub
mov
outsl
jb
repz
in
shl
je
mov
lret
and
lret
xchg
aam
mov
push
out
adc
push
sbb
rcll
popa
xor
in
inc
xorb
call
or
xor
mov
cld
mov
jo
lcall
push
jbe
mov
movsl
ret
push
sahf
and
mov
lret
jp
lds
clc
and
sbb
lods
push
cmp
pop
fidivrl
ljmp
shll
inc
aas
mov
jmp
pop
bound
fcomi
mov
rcrl
movsb
add
push
cwtl
jbe
mov
mov
add
xorl
sub
insl
rcrl
and
aad
pop
out
sbb
xor
fldenv
out
js
xchg
cmpsb
pop
xchg
adc
push
add
jo
fildll
lods
stos
xchg
je
insb
stos
jno
repz
push
hlt
enter
cltd
push
movsb
loopne
xchg
aam
add
push
mov
repnz
rcll
or
test
sbbl
sbb
scas
in
rcrb
jmp
xor
lods
xor
dec
mov
and
fs
xor
sub
and
xchg
cmp
hlt
gs
push
dec
jmp
add
aad
adc
cmp
loope
xchg
xchg
scas
clc
and
add
popf
in
lds
pop
sub
mov
pop
inc
adc
out
call
gs
icebp
cmpsl
xlat
fdivs
jns
popa
cli
movsl
sbbl
xchg
mov
shlb
push
mov
mov
notb
aas
xor
or
ja
out
jo
out
xchg
sbb
lds
mov
xchg
lods
in
adc
mov
mov
repnz
mov
stc
outsb
cltd
adc
test
add
test
jp
int
jg
xor
fstpt
mov
sbb
repnz
sbb
push
jne
shrb
dec
adc
push
cmpsb
push
hlt
dec
cmc
xchg
cmc
sbb
adc
cmpb
add
je
loope
sti
sub
and
test
push
jp
sub
out
pop
or
mov
add
jg
out
cmp
jns
push
insl
cmp
and
leave
in
fs
das
push
mov
pop
iret
hlt
pop
notl
repz
adc
lret
rorl
cmp
cmp
cmpsb
fmuls
sub
jns
faddl
sti
xchg
sbb
xchg
jl
popfw
xor
std
outsl
pop
repnz
xchg
loopne
pop
mov
push
ds
popa
in
int
pusha
or
xlat
cmpsl
and
sti
imul
and
inc
jbe
cld
push
das
push
popl
or
test
aad
cltd
jo
push
jae
dec
into
inc
faddl
jnp
and
jl
jg
push
dec
repnz
pusha
mov
ds
mov
popa
cmp
in
pop
sti
or
lds
jmp
icebp
push
lcallw
dec
inc
pop
jnp
push
fisubs
mov
aam
das
add
and
and
mov
stos
dec
inc
inc
add
mov
shrl
cmpsl
jmp
fxch
cmpsl
push
jnp
mov
cs
popf
fcmove
pop
fnstenv
xor
fldt
inc
push
arpl
push
test
sub
mov
ja
sub
in
xchg
push
icebp
mov
jp
int3
in
cmp
outsl
shll
outsl
push
jbe
ret
aaa
jecxz
lea
mov
leave
rolb
lahf
outsl
push
jmp
cwtl
pop
sti
jg
mov
imul
push
sub
pop
adc
mov
negb
sbb
pop
sub
in
mov
cltd
pop
cmp
lods
fwait
insb
lods
int3
outsl
jle
jmp
sbb
clc
sub
dec
mov
add
cmp
mov
repnz
idiv
gs
mov
pop
adcb
loop
xchg
cld
sbbl
dec
inc
femms
dec
in
aad
cmpsl
push
fidivs
decl
orl
daa
push
jbe
jg
xor
xchg
lods
ds
xchg
shlb
movsl
cmp
jnp
test
sti
ret
movsb
xchg
sbb
insl
sub
push
cmpsl
mov
cmc
mov
or
ss
push
adc
add
rcrb
jno
sub
add
pusha
addr16
aas
mov
dec
push
dec
xchg
and
sbb
pop
mov
mov
cs
jle
mov
sar
cli
movsb
lds
dec
xor
cmp
jmp
inc
fdivrs
sbb
gs
outsb
ficompl
call
cmp
sbb
sti
enter
cmp
pop
mov
push
mov
jns
jecxz
mov
je
add
testb
push
insl
xchg
fsqrt
popa
imul
fdivrs
aam
and
push
adc
scas
jg
mov
cltd
lahf
and
icebp
mov
mov
sbb
sub
cltd
mov
xchg
cmp
jne
push
leave
test
lds
jo
jno
xor
inc
ljmp
and
mov
jae
xor
cmp
in
ljmp
dec
adc
jecxz
fdiv
pop
repnz
mov
mov
pusha
enter
mov
mov
stc
pusha
mov
pop
and
lcall
stc
ffreep
mov
das
fadd
test
mov
pop
push
and
pop
jp
daa
lds
test
mov
cmp
push
xchg
les
mov
cmpsl
lret
out
fidivrs
mov
xchg
loope
inc
loopne
ja
or
mov
hlt
aaa
jl
fidivrs
add
cwtl
leave
xchg
cs
mov
lods
stos
cli
rcll
dec
xchg
jle
dec
xchg
or
mov
mov
aam
enter
xchg
dec
enter
cmp
ljmp
mov
inc
in
nop
sbbl
mov
sahf
jb
mov
jecxz
pop
pop
daa
aaa
adc
dec
fidivrs
add
fs
jnp
scas
cmp
cmpsl
jg
stos
scas
xchg
rcrl
lock
std
sti
lods
les
cli
jg
sahf
jmp
inc
fucomp
cmp
shl
pop
jbe
pop
mov
cmp
mov
fdivrp
lret
clc
xor
pop
mov
sbb
stos
push
subb
cltd
jb
daa
push
aad
adc
mov
lods
xchg
push
sahf
fisubrs
jo
int
adcl
jl
test
or
adcl
mov
mov
popf
mov
sub
mov
mov
push
mov
repnz
push
dec
mul
inc
lea
mov
lods
sbb
dec
ret
in
mov
sub
inc
mov
jle
dec
aam
jbe
dec
cmp
mov
stos
add
adc
notl
fs
mov
or
xchg
mov
inc
or
mov
repnz
xlat
pop
subb
mov
mov
adc
inc
push
loope
and
sbb
jne,pn
negb
add
aam
and
cmp
dec
ss
fldenv
mov
and
ss
jb
mov
lcall
or
or
mov
out
iret
call
push
aam
sahf
data16
sub
bnd
mov
es
cmc
inc
jns
and
xchg
and
lds
push
sub
mov
fstpt
mov
mov
or
push
pop
int3
incl
mov
test
jbe
je
test
dec
out
pushf
fsubrl
shrl
push
cmp
popf
incl
lret
out
mov
lahf
sbb
mov
xor
mov
iret
push
and
popf
jge
mov
ficomps
pop
or
jmp
fldcw
cmp
les
pusha
lret
pop
int3
dec
jb
xchg
push
cmpsb
xor
int
stos
daa
iret
adc
insb
mov
ja
cmp
cltd
rcrw
jns
dec
out
cmp
scas
push
ljmp
movsl
jp
dec
dec
adc
mov
popf
pusha
js
jne
cwtl
mov
push
jns
call
dec
mov
in
out
lods
into
inc
insb
and
insl
shll
push
inc
mov
inc
sbb
test
lret
not
repnz
loopne
mov
jecxz
push
rcrl
mov
and
rcrb
data16
jae
xchg
mov
xchg
mov
or
jmp
push
sti
nop
cmovb
popl
scas
dec
dec
inc
inc
stos
add
sub
mov
xor
imul
mov
and
out
mov
fiadds
mov
lock
sbb
scas
sbb
call
and
push
adc
inc
jl
mov
mov
push
movsl
cmp
xor
cmp
inc
push
mov
jno
test
adc
fxam
push
mov
xor
push
mov
cwtl
lahf
mov
mov
lods
outsb
xor
repz
int
pop
fwait
mov
lea
fiadds
dec
sbb
and
jmp
dec
icebp
dec
xchg
icebp
cmpsb
jecxz
jecxz
sbb
cmpsb
add
add
and
pop
bound
or
stos
fistps
das
in
les
dec
loopne
bound
mov
pop
jmp
cmp
cmp
mov
scas
test
dec
rorb
xchg
xacquire
mov
and
ror
jo
pop
in
cld
lods
add
jge
es
insl
inc
dec
fsubs
cmp
std
add
lock
mov
std
in
int3
sbb
fwait
ljmp
mov
cmp
fs
and
pop
les
jl
lds
lods
int
sar
stos
pop
out
push
scas
jg
clc
pop
xor
in
pop
mov
mov
jne
test
fsubp
clc
dec
sbb
inc
fs
jle
std
aas
adc
sub
mov
fs
add
fnstsw
jl
xchg
mov
mov
pop
sti
lret
lcall
dec
xchg
jmp
pop
sbb
stos
pop
repz
scas
rcrl
ficomps
js
sub
push
xorb
movl
fidivl
int3
stc
pop
jno
add
rcl
dec
add
into
jo
cli
xchg
dec
xchg
dec
sub
gs
test
cwtl
sti
arpl
stos
sahf
push
cmp
loop
dec
xlat
push
mov
pop
mov
or
fwait
xchg
mov
or
stos
out
push
in
sub
sub
lods
lds
fstps
inc
dec
ret
push
xchg
mov
loop
dec
fs
arpl
xchg
inc
scas
push
fcoms
lods
pop
lods
inc
adc
ja
rcll
sub
je
pop
aas
inc
adc
test
mov
clc
dec
cmpsl
orb
lahf
in
das
and
or
cmp
inc
jl
and
sbb
leave
xchg
xorb
add
add
lock
push
je
mov
and
and
enter
xor
mov
pop
movsb
aas
push
push
daa
push
je
and
icebp
pushf
jne
adc
push
fcmovne
push
adc
pop
mov
xchg
pusha
cmpsl
xor
cli
movsl
add
xchg
jg
sahf
sahf
lods
push
stos
push
push
and
dec
push
subb
jae
cmc
pop
out
adc
xor
cmp
repnz
mov
add
lea
lea
sbb
lahf
dec
jmp
jo
adc
fwait
rolb
sub
loope
or
faddl
mov
aam
inc
push
pop
mov
daa
inc
mov
out
sbb
cmp
shr
inc
inc
sub
into
test
sar
jno
inc
sub
inc
shlb
xor
stos
push
test
test
call
leave
add
pop
lods
or
mov
repnz
cmp
xor
in
shl
arpl
push
aam
xchg
push
loop
xor
jecxz
and
xchg
cmp
lcall
and
jbe
mov
adc
and
enter
aad
inc
inc
fiadds
rcrl
xchg
mov
outsb
into
fsubl
jp
pop
push
jnp
out
sbb
ja
xchg
xchg
lock
out
fmull
aam
inc
jg
iret
push
leave
ret
loop
mov
jo
clc
xor
subb
dec
fbld
ror
es
clc
loopne
movsl
sbbl
in
jl
push
inc
lds
pop
lahf
dec
and
arpl
adc
sbb
fists
int3
dec
pop
xchg
cmpsl
mov
add
add
mov
inc
idivl
fnstsw
pop
ret
mov
sbb
sbb
inc
mov
jl
pop
sahf
popf
or
cmpsl
mov
out
rclb
mov
xor
lods
sub
mov
xchg
cmp
pop
fucom
push
popa
push
mov
shl
loopne
jnp
gs
rclb
imul
lock
decb
adc
aam
xchg
lds
push
test
and
ret
xchg
mov
xchg
or
hlt
movsb
enter
or
push
and
sub
sub
js
jg
ficoms
jmp
les
mov
xor
cmp
imul
js
and
sub
jb
loope
push
pusha
lea
dec
negb
xor
pop
dec
sub
push
or
loop
push
inc
xchg
das
je
and
sbb
mov
jle
cmp
xorl
lods
rol
aam
cmp
pop
inc
imul
xchg
rclb
xchg
jbe
ret
mov
xchg
cli
pop
pop
int
xchg
call
push
fdivl
int
sub
xor
rcl
mull
mov
cltd
in
fldcw
cmpsb
pop
push
leave
or
mov
loopne
mov
mov
gs
mov
xchg
and
push
cli
mov
sbb
jbe
sub
pop
mov
lds
inc
or
adc
sbb
add
out
cld
and
cmp
mov
mov
nop
les
loop
out
aam
jl
pop
aam
add
lret
xchg
cmpsl
es
notl
fwait
dec
push
lcall
push
adc
dec
mov
lds
imul
mov
sahf
adc
in
fwait
mov
int
mov
inc
pop
sbb
xchg
popa
push
leave
fimuls
lea
aas
in
xor
dec
cld
xor
jecxz
xchg
or
sub
jge
out
add
out
mov
cmpsb
jg
adc
ret
mov
pushf
fists
mov
cmp
mov
lret
leave
sub
add
and
rcrb
mov
hlt
rcll
dec
adcl
mov
push
or
inc
mov
int
outsl
aaa
push
inc
lods
or
lock
mov
pmovmskb
ljmp
fsubl
insb
add
add
aaa
rolb
push
fildll
mov
cmpsl
ficoms
data16
out
test
rcll
pop
and
popf
xchg
rorb
mov
iret
cs
paddsb
ljmp
iret
ljmp
je
push
inc
push
cmpsl
imul
ss
test
push
push
out
test
mov
scas
idivl
into
ljmp
jle
sub
add
into
fildl
les
test
adc
sub
xchg
imul
call
jecxz
lods
xchg
jmp
js
test
or
xchg
jb
xchg
pop
pop
inc
jns
adcl
lds
mov
or
dec
data16
movsl
test
dec
xor
and
mov
sahf
jecxz
jnp
imul
push
in
lcall
rorb
mov
cmpsb
pop
loop
sub
cmp
mov
mov
loopne
add
push
mov
and
scas
pop
cmpsl
das
xorl
lret
push
push
push
imul
inc
adc
int3
push
push
call
fdivs
add
dec
xchg
rcl
inc
xchg
push
push
xor
pop
loopne
stos
mov
subb
lea
jmp
mov
sbb
les
mov
fildl
pop
push
adc
test
aad
stc
pop
imul
xchg
cwtl
jno,pn
sub
das
call
xchg
addb
mov
mov
rolb
mov
outsb
mov
and
mov
pushf
lcall
cmp
sub
jle
pop
dec
xor
les
push
sbb
lahf
scas
lock
loop
cmp
xor
xor
mov
js
inc
dec
sub
jle
into
sbb
pop
idivb
cld
mov
repnz
mov
fisttpl
push
cmp
cld
call
jbe
and
mov
or
fstpl
mov
shl
adc
cmc
xchg
adc
mov
push
daa
out
and
rcll
mul
insl
mov
add
faddl
aaa
jl
adc
mov
mov
cltd
xor
cli
dec
mov
insb
cli
mov
xor
mov
jl
mov
js
lock
pop
lcall
sti
sub
cmp
arpl
jg
aas
push
lock
mov
rol
psubq
pop
pop
stos
les
ljmp
mov
lahf
adc
stos
cmp
mov
jb
test
add
rol
je
sub
sub
cmp
xchg
or
mov
or
and
loope
popa
mov
cmp
inc
cmp
js
cmp
pop
xchg
push
popa
aas
jp
movsb
imul
pop
insl
cmp
dec
test
test
dec
mov
cmp
cmpsb
test
push
imul
rcl
mov
popf
xchg
jne
adc
and
jae
fildl
mov
fsubrp
loope
andl
dec
xor
xchg
ss
loopne
cwtl
lods
out
aaa
adc
pop
pop
pop
inc
insb
imul
adc
pop
je
xchg
fcoml
push
test
int
js
repnz
adc
lret
push
lods
daa
nop
prefetch
mov
in
cmpsl
imul
test
enter
and
ds
mov
in
adc
notl
push
fs
jl
test
pop
into
mov
lods
roll
pop
add
cmc
dec
mov
or
push
jbe
sbb
dec
mov
aad
push
movsb
subb
pop
or
and
mov
mov
pusha
fst
pushf
jecxz
testl
sbb
test
push
or
in
jbe
aaa
test
out
rcll
fistps
mov
sub
jmp
and
push
inc
dec
aaa
inc
daa
push
cltd
les
jno
jle
call
js
xor
push
mov
mov
adc
out
iret
xor
mov
fbstp
ja
add
xchg
pop
push
add
cmp
das
sub
jae
int3
fsubl
jle
add
or
add
lret
and
fadds
cwtl
dec
test
arpl
sub
and
pushf
xlat
adc
xchg
out
and
mov
sbb
push
push
call
mov
ret
cmp
sarl
scas
pop
xchg
out
insl
sbb
loop
lret
inc
dec
stc
jp
push
adc
xor
jp
imul
sub
mov
xor
stc
mov
mov
rcrb
insb
clc
out
je
push
test
xchg
push
jae
imul
lcall
movsl
imul
add
adcb
pop
cmp
pop
dec
or
push
stos
out
int
xchg
dec
cmpsb
js
jb
aad
mov
mov
mov
test
mov
jno
mov
adc
xchg
sarl
jecxz
stos
test
mov
pushl
ja
push
ja
daa
notl
dec
test
add
aam
mov
lahf
fwait
mov
and
mov
cs
push
jbe
push
je
pop
shrl
out
mov
popa
das
and
call
sbb
rcl
mov
inc
ficoms
movsb
sbb
dec
neg
leave
aad
rcll
imul
out
or
mov
cmpsb
mov
andl
sbb
push
js
xor
sar
cltd
int
mov
fcoml
dec
jmp
xchg
das
mov
negb
cmc
sub
ds
es
xchg
cmp
jnp
cmpsl
popa
out
or
pop
xchg
dec
adc
mov
int
jo
sahf
dec
dec
pop
pop
addr16
sahf
xor
fmuls
repnz
pusha
and
jmp
ret
cmpl
pop
loop
dec
cmpsl
jle
mov
insb
mov
push
or
sbb
cmp
dec
lods
pusha
xchg
pop
xor
lcall
push
aam
es
in
nop
jae
sti
mov
xchg
addr16
mov
jecxz
int3
xchg
fistl
add
fs
ret
mov
lahf
loopne
jae
mov
and
xor
out
das
nop
sti
pop
icebp
adc
ja,pn
xor
fdivrl
mov
adc
cmp
out
sub
xlat
mov
outsl
test
push
push
cwtl
imul
and
std
fldl
loope
and
mov
push
sub
pop
and
ss
movsl
popa
mov
add
jb
popf
push
lret
outsb
jge
sbb
mov
sub
jmp
in
mov
jbe
jno
inc
jecxz
mov
ds
push
rclb
jl
add
out
adc
iret
cwtl
int
pop
mov
sbbl
fsub
mov
xchg
mov
dec
mov
pop
xchg
pop
pushfw
mov
movsl
jb
cmpsl
int
lahf
xchg
sbb
cmpl
daa
icebp
inc
jge
insb
sbb
or
and
push
ja
out
mov
sub
or
pop
fmull
dec
pop
push
push
adc
inc
jne
mov
leave
sbb
aas
aam
enter
test
les
cmp
adc
movsb
mov
rcrb
jg
cli
rolb
pop
xchg
pushf
movsb
jle
lret
ljmp
scas
pop
ja
rsqrtps
aaa
mov
push
xchg
je
leave
data16
lock
out
shlb
test
sub
inc
pop
ljmp
pop
inc
cltd
lret
xor
aas
lods
push
pop
or
andl
test
pop
mov
leave
xchg
xor
cs
daa
fisttpl
adc
xchg
mov
jecxz
push
shll
mov
mov
pushf
lods
inc
popf
dec
push
data16
add
test
mov
scas
adc
mov
push
sbb
add
inc
pop
mov
fdiv
bound
mov
cwtl
adc
clc
test
bswap
pop
adc
sub
in
push
pop
out
add
fstpl
dec
stos
xchg
gs
jne
int3
iret
pop
jle
xor
into
fwait
mov
in
imul
repz
test
fs
adc
pop
pop
mov
arpl
sub
inc
nop
xor
ljmp
cmp
stc
test
sbbb
sbb
adc
call
mov
cmp
mov
jg
pop
jbe
stc
pop
ss
push
in
arpl
leave
lahf
out
jg
cmp
mov
cwtl
out
xchg
aam
mov
sbb
jle
shr
and
out
shll
push
push
add
cli
sub
push
aam
inc
cmpsb
ds
lods
mov
es
in
clc
jno
dec
or
or
cli
dec
repnz
adc
pop
inc
jne
dec
into
aas
sbb
and
sbb
pusha
orb
xor
sbb
pop
and
add
shll
inc
lods
adc
lods
dec
scas
xchg
mov
mov
pop
icebp
std
lods
inc
hlt
xchg
pop
enter
js
mov
clc
cmpsb
push
mov
orb
jle
pop
jmp
mov
adc
sbb
add
rcll
mov
or
leave
pop
dec
pop
test
mov
sbb
push
add
jbe
adc
jbe
inc
cmpsl
mov
dec
jbe
fidivrs
sbb
push
dec
test
lds
or
in
or
std
mov
sahf
sub
xrelease
popa
push
inc
inc
push
cmp
in
adc
outsb
jb
mov
lods
jmp
adc
lcall
dec
fiadds
pop
mov
mov
mov
mov
sub
mov
hlt
add
fidivs
cmpsb
div
fmul
xor
inc
popa
in
dec
jge
or
fsub
pushf
push
mov
push
outsb
push
push
xchg
lcall
jne
add
int
mov
inc
pop
mov
xor
and
mov
push
jae
rolb
fcomi
out
adc
xor
adc
xor
cmp
xchg
cmp
sti
pop
fstpl
push
mov
loopne
pop
and
shlb
push
mov
hlt
inc
sarb
in
mov
lods
js
mov
mov
nop
sti
dec
sbb
cld
push
fsts
mov
pop
xchg
xor
dec
jb
mov
add
adc
pop
pop
rcrl
push
xchg
clc
sti
adcb
ret
adc
sahf
nop
jge
sbb
testl
push
scas
mov
test
sub
or
fistps
adc
call
xchg
stc
xor
lods
mov
sarb
je
push
or
jae
rcll
shlb
sub
into
inc
jno
jb
xchg
sub
push
xor
je
enter
stc
adc
sbb
enter
sub
jp
adc
xor
outsl
movsl
xor
inc
jle
sbb
out
sub
push
add
je
cmp
sbb
mov
fnstenv
test
into
adcb
aam
loopne
imul
int3
fnstsw
inc
push
ss
in
dec
pop
je
aam
mov
or
dec
sar
and
push
leave
enter
jmp
inc
adc
xchg
icebp
sub
jno
cli
dec
jp
data16
fwait
and
sub
dec
clc
in
jecxz
pop
pop
fnsave
sbb
cltd
loope
adc
mov
sahf
stc
pusha
or
xchg
mov
iret
icebp
lock
flds
dec
jmp
insb
faddp
xor
xchg
andl
data16
jmp
mov
sub
ret
jg
push
pop
mov
lods
inc
into
or
inc
out
fistpll
xor
psubusw
and
mov
dec
xor
js
fisttpll
xchg
add
in
neg
cbtw
dec
mov
jp
push
cmp
dec
push
xor
call
mov
mov
xchg
dec
mov
push
pop
leave
mov
addb
pop
movsl
insl
test
into
aas
repnz
xor
push
sarb
aaa
jge
jge
insl
leave
lock
sub
cmpsb
lea
scas
jne
movsl
cmp
add
adc
jne
fisubrs
rorl
rcll
xor
push
sub
adc
cmp
fsts
cwtl
mov
xor
cmpsb
xchg
mov
popf
adc
aaa
aad
addb
fnstenv
test
push
xor
cmp
scas
popf
push
ss
cwtl
adc
das
icebp
aad
in
bound
xchg
js
adc
addr16
pop
add
add
push
arpl
jbe
ret
movsl
adc
scas
cld
jne
jbe
loop
insb
repnz
clc
lods
lret
addr16
or
add
sbb
xchg
gs
xchg
loope
int3
sub
sbb
call
les
mov
jno
aas
clc
and
mov
je
in
adc
ret
fnstsw
icebp
pop
xor
addb
push
pop
cmp
dec
mov
fwait
clc
in
adc
je
mov
mov
push
inc
cmpb
xlat
xchg
je
dec
in
mov
adc
mov
loop
mov
outsl
movsl
in
jle
cmp
cmp
pop
and
push
add
lcall
xchg
lret
cs
inc
mov
int
or
dec
mov
mov
mov
inc
outsb
mov
mov
inc
data16
xchg
push
xor
leave
dec
mov
add
negl
jo
loop
mov
mov
daa
nop
fsts
scas
lock
loop
or
pop
stos
and
or
or
addr16
outsb
pop
mov
push
aaa
loopnew
lds
jb
inc
je
push
push
sti
push
push
popf
mov
data16
bound
das
rclb
mov
stos
or
iret
or
mov
mov
aad
add
jg
jo
push
xor
and
cmp
movsl
mov
sub
cld
inc
inc
lods
into
xchg
pop
popf
jae
js
cmp
push
lds
cs
xchg
cmp
orl
push
movsl
scas
sti
xor
mov
popf
lcall
mov
pop
inc
jnp
pushf
adc
aam
or
daa
sbb
jae
xchg
or
pusha
xchg
in
into
sub
xchg
cmp
jge
cmpsl
sbb
adc
call
lods
inc
in
add
inc
adc
sbb
mov
jnp
mov
and
nop
ljmp
inc
shll
jno
inc
lret
jae
mov
lods
in
jb
fcmovnu
iret
mov
into
sub
mov
test
xchg
xchg
jno
insl
movsl
imul
into
cmp
cmp
popf
or
jmp
cmpsb
dec
je
out
cld
sub
loope
mov
outsl
mov
jecxz,pn
sbb
es
jmp
leave
push
ss
jecxz
repz
and
push
or
inc
mov
ret
sahf
ljmp
rclb
jge
jno
test
cmp
jmp
mov
xchg
loope
icebp
jbe
js
leave
loopne
sar
xor
xor
lods
stc
fldt
mov
and
jnp
and
data16
jnp
jp
stos
mov
les
push
in
cmp
mov
adc
xor
fs
lock
cltd
inc
mov
dec
adc
pushf
push
lods
pop
aaa
movsb
aad
xor
inc
ljmp
arpl
jecxz
xor
add
add
aaa
dec
pop
cmp
and
cmp
outsl
cmp
pop
and
clc
pushf
cmp
minps
sub
sub
dec
out
dec
out
and
sbb
pop
cs
outsl
xchg
scas
inc
add
inc
ljmp
lods
fstl
push
cmpsl
add
sbb
mov
mov
mov
mov
out
fldl
push
lret
inc
adc
and
outsl
pop
and
ficoml
orb
mov
sub
addr16
cs
stos
sub
mov
loopne
scas
pop
les
pop
repnz
and
jno
roll
sbb
sbb
cs
ret
or
into
jmp
mov
dec
mov
mov
movsl
inc
adc
adc
cmpl
popa
or
ficompl
dec
or
lock
mov
lahf
pop
test
ficoms
cmpsb
ja
jecxz
out
jnp
add
mov
addr16
xchg
inc
ror
icebp
sbb
and
pop
mov
test
cli
repnz
jne
add
fsubl
leave
rorl
xchg
add
subb
popf
sub
or
cs
fneni(8087
daa
inc
cmp
sahf
icebp
push
mov
cmp
in
aad
push
in
mov
daa
mov
clc
adc
xor
pop
or
jg
mov
mov
pop
negl
xchg
sbb
push
sti
push
nop
repz
fwait
inc
mov
mov
xor
jns
cs
add
xor
js
lahf
adc
sbb
jb
notb
add
cmp
pop
inc
das
sbb
sti
push
iret
and
or
scas
xchg
pushf
loop
insl
cmp
dec
outsl
add
imul
fld
adc
test
push
fldt
cltd
dec
mov
cmp
mov
mov
nop
sarb
mov
mov
adc
and
repnz
xchg
ljmp
sub
or
js
mov
jo
bound
inc
jle
iret
push
push
add
sbb
jmp
jmp
js
bsr
or
cltd
push
add
xor
xor
loope
mov
inc
cmc
inc
mov
xlat
mov
sub
and
push
push
fwait
rorl
out
out
push
leave
je
pop
iret
loopne
js
fs
into
call
sbb
or
push
enter
dec
insb
and
stos
out
js
mov
pop
lock
mov
adc
jl
mov
mov
dec
fmuls
sbb
push
jecxz
mov
pop
dec
das
mov
jecxz
xchg
mov
dec
mov
cmp
cmp
cwtl
sti
add
addr16
out
push
sub
andb
cli
sbb
mov
rolb
push
pop
xchg
imul
int3
push
and
lods
or
mov
jg
int3
pop
pusha
adc
adc
ja
sarl
cli
inc
cmpsl
mov
les
sbb
xor
cmp
outsb
or
pop
mov
les
jmp
adc
ljmp
or
mov
hlt
add
std
jge
adc
push
adc
lods
loop
in
out
test
push
lods
fistps
mov
cltd
ds
cltd
arpl
xor
repnz
jbe
add
adc
pop
push
push
ret
sbb
dec
or
fsts
mov
std
pop
xchg
jmp
in
mov
out
popf
mov
sbb
cld
and
push
xchg
push
push
mov
push
lcall
ficoml
cmpsl
mov
mov
pusha
data16
mov
imul
clc
clc
mul
sbb
icebp
aaa
movsb
push
imul
test
pop
xor
xor
adc
push
sar
dec
xor
sarl
pop
ret
push
inc
mov
imul
aad
dec
mov
xor
mov
lea
push
push
outsb
sub
xor
lock
jae
push
add
pop
inc
push
mov
pop
mov
add
in
mov
stc
xchg
dec
ds
xchg
jle
or
jne
sahf
aaa
fcomp
pop
mov
mov
mov
inc
cmp
push
cld
push
inc
dec
jl
mov
outsl
in
out
xchg
mov
nop
or
stos
sbb
mov
dec
shrl
pop
js
hlt
jg
xor
xchg
cmp
mov
pop
outsb
inc
in
and
xchg
mov
aaa
dec
movsb
lcall
ljmp
icebp
cmc
mov
test
pop
imul
sub
add
push
in
push
in
inc
jae
icebp
cmc
push
dec
mov
loop
leave
jns
xchg
jno
or
xor
js
test
aam
clc
mov
and
jecxz
fs
iret
add
lret
andl
out
adc
jbe
cs
xchg
jae
dec
es
xchg
sub
adc
and
bnd
rcrl
mov
sub
pop
ret
notl
sub
mov
mov
fsubr
lcall
add
jg
xchg
lret
sbb
xchg
adc
js
inc
pop
push
mov
imul
xor
cmp
loope
push
pop
stos
dec
jae
rdtsc
lahf
sti
lods
add
fwait
pop
sub
loope
imul
nop
and
les
sbb
rcrl
and
xor
dec
or
xor
xchg
loope
pusha
xchg
add
andb
sub
cmp
inc
lods
sub
lcall
fnstenv
repz
push
sbb
stos
subl
rolb
pop
cmp
push
dec
and
push
jle
enter
mov
mov
mov
mov
lret
xor
adc
cmpsb
aad
out
sar
pop
inc
xor
or
test
popf
pop
decl
push
cmp
ja
gs
pop
shlb
imul
mov
or
adc
cmpsb
rcrb
sub
scas
in
cmp
ljmp
mov
nop
idivw
in
cmc
ss
adc
lcall
out
mov
lea
fidivs
jecxz
fidivl
xor
pusha
push
xor
jb
xchg
pop
xchg
xor
or
push
stos
adc
pusha
jp
mov
mov
divl
orl
out
mov
insb
mov
test
sbb
xor
sti
aam
mov
sbb
push
jne
rcrl
mov
inc
jo
sub
sub
and
mov
movswl
dec
in
out
je
sbb
scas
mov
sub
jecxz
lods
add
mov
sbb
adc
rorl
ja
clc
adc
pop
dec
sub
sub
dec
cmpsl
push
stos
movsl
cmc
sub
push
and
cmp
imul
push
das
xchg
inc
ljmp
pop
mov
adc
insb
or
and
dec
adc
adcl
idivb
cmpsl
lcall
xor
xchg
leave
mov
divl
push
aad
mov
outsl
mov
lods
add
xchg
mov
leave
dec
push
mov
clc
inc
lcall
xchg
es
push
cmp
pusha
clc
orl
xor
lret
loopne
and
xor
jns
sahf
pusha
adc
fadd
xchg
icebp
xor
fisttpll
test
les
push
and
mov
push
iret
xchg
sbb
fwait
sbb
inc
adcl
lods
push
call
nop
mov
push
cld
add
push
stos
xchg
hlt
cwtl
mov
cld
jmp
mov
js
pop
xchg
sti
push
aas
and
mov
mov
in
xchg
loopne
cltd
jb
cmp
fiaddl
pusha
mov
scas
in
xor
push
invd
sub
cmp
out
adc
mov
jne
xor
lods
add
cli
lock
decl
mov
sub
or
adcb
adc
lods
lret
pop
xor
test
popf
and
movsb
loope
or
and
es
sub
scas
clc
mov
pop
addr16
xorb
rorl
adc
test
dec
cmp
ret
mov
in
mov
test
cmp
and
in
or
in
sbb
loope
sbb
mov
inc
and
push
mov
orl
mov
fnstenv
aad
xor
test
shlb
push
push
push
xchg
add
jne
push
adc
les
xchg
icebp
aam
push
mov
les
iret
test
mov
xchg
mov
sahf
xor
out
aas
adc
dec
mov
or
test
sub
inc
sub
sbb
ret
test
mov
dec
sbb
cmp
in
divl
fisubs
and
inc
popa
xor
gs
xor
or
out
test
das
push
inc
shrb
xor
cli
pop
stos
cmp
xor
fildl
mov
and
adc
jg
and
lea
sbb
sar
push
jae
sbb
in
or
ss
movsb
sub
scas
pop
jns
clc
insb
addr16
pushf
rolb
push
ds
sbb
mov
sbb
popf
and
xchg
sub
xchg
and
xor
or
jns
and
pop
inc
push
dec
sub
or
scas
add
xchg
cmpb
adc
push
sbb
xchg
xchg
xchg
arpl
push
popf
cmp
cli
jns
jl
test
or
daa
outsb
xchg
ljmp
das
push
pop
dec
subb
sti
xor
add
push
imul
sbb
mov
jmp
jp
xlat
leave
and
jb
cmp
jnp
negl
mov
jp
pop
mov
pop
test
cmp
nop
sahf
leave
add
ret
sub
imul
sbb
das
xchg
xor
mull
cli
ret
mov
pop
xchg
cltd
mov
fidivl
clc
movsl
loopne
push
cmp
mov
insl
mov
push
cmpsl
inc
rcll
cmp
xchg
decl
ja
sbb
aas
add
nopl
sub
pop
lds
pop
ja
push
test
cmc
into
test
pop
leave
inc
roll
cmpsb
or
adc
sarb
and
mov
je
jmp
xlat
icebp
mov
test
insl
movsb
inc
cwtl
icebp
add
adc
into
jnp
dec
fistps
out
out
push
fcoml
dec
js
cmp
sub
stos
adc
cmp
xor
sub
or
dec
mov
mov
or
lods
push
dec
mov
fldl
ljmp
push
aam
cmp
scas
pusha
dec
ret
mov
int
fdivr
sub
daa
mov
test
cmpsb
dec
push
mov
std
fidivs
mov
pop
or
inc
int3
dec
in
ds
pop
sbb
and
ret
mov
adc
sub
push
and
stc
pop
orl
inc
lods
pop
cmc
and
mov
add
int3
dec
vpsubq
ret
mov
popf
js
adc
mov
popa
cli
rcl
jp
rorb
jg
roll
push
lret
mov
or
js
cmp
pushf
lahf
pop
mov
aas
iret
in
sub
jns
mov
lods
in
mov
and
test
out
push
and
loope
gs
and
cmp
mov
fimuls
sar
adcl
or
data16
add
insb
mov
adc
mov
jo
and
inc
pop
xchg
bound
xchg
mov
das
fbld
out
sub
xchg
dec
out
push
insl
bound
lds
and
je
lods
pop
shlb
sbb
cmpsl
inc
push
jb
sub
movsl
repz
mov
xor
leave
inc
cmc
mov
out
pusha
and
js
rorb
or
mov
adc
icebp
popa
iret
movl
pop
xlat
imul
lods
rcl
xchg
ja
cmp
pusha
cld
add
or
insl
jb
pop
fwait
pop
mov
add
test
dec
add
pusha
test
push
imul
int
or
xor
pop
push
pop
into
in
lods
xor
dec
scas
pop
nop
adc
cmp
xchg
icebp
call
or
or
xor
movb
mov
push
sub
stc
lods
sub
cwtl
cwtl
je
adc
jl
outsl
pop
dec
scas
push
jo
push
insb
cmpsl
enter
call
mov
dec
lahf
pushf
xchg
mov
push
cs
inc
jge
popf
and
andb
xchg
pop
ficompl
ljmp
mov
in
dec
jnp
cmp
add
jns
fst
mov
push
js
mov
loop
xchg
sarb
xor
adc
test
fildl
imul
fwait
mov
in
xchg
push
mov
mov
scas
cmp
push
cmp
cltd
popf
mov
call
out
int3
pop
lcall
ljmp
sub
inc
push
jnp
mov
push
in
xchg
add
jmp
push
dec
or
mov
shll
add
fimull
je
aam
or
or
mov
sbb
hlt
orb
imul
mov
or
xchg
les
cmp
addb
pop
ja
or
push
shlb
cwtl
fsubl
rcr
in
pop
xchg
outsl
sub
xchg
popf
add
std
test
and
jbe
push
stc
mov
cmp
fwait
pushf
jno
cmp
lea
aam
inc
sbb
add
mov
outsb
aad
jbe
out
push
scas
and
xchg
inc
mov
inc
sbb
add
ret
in
lcall
push
in
mov
aas
and
testb
mov
jnp
into
orl
cmp
rol
adc
adc
cmpsl
incb
pop
push
pushf
dec
stc
xchg
adc
mov
add
iret
jg
sbb
pop
cmp
insl
sahf
scas
lcall
rcl
daa
sub
cmp
in
xor
jg
out
mov
add
mov
or
lods
fistps
sbb
push
xor
mov
shrl
fs
mov
fiaddl
mov
shll
or
sbb
sti
loopne
sub
xchg
into
jne
mov
call
cltd
je
orb
inc
cmp
lret
je
lock
jno
xor
or
fnstsw
or
push
inc
pop
data16
mov
out
lock
mov
clc
sub
xchg
dec
push
mov
in
imul
add
out
insl
xchg
or
jno
loop
gs
push
inc
loopne
inc
and
mov
and
out
rorl
lahf
mov
mov
and
pop
lods
aad
loope
adc
mov
pop
std
push
mov
cltd
pop
sahf
daa
mov
out
gs
push
pusha
leave
gs
push
out
pop
out
push
push
and
mov
lret
sahf
rorl
push
mov
or
pop
ret
xor
jno
mov
inc
in
mov
xor
mov
jae
xchg
cmp
stos
pop
cmp
dec
mov
out
xchg
push
call
push
push
sbb
mov
fistpll
mov
outsb
aaa
subl
jle
adcl
mov
imul
sub
sub
push
fdivrs
and
sbb
and
jnp
mov
push
sbb
mov
aaa
data16
pop
jnp
adc
rcrb
sbb
nop
or
aas
dec
lcall
inc
add
shlb
jl
push
push
out
ljmp
imul
andb
jnp
sub
pop
loope
adc
cmp
addl
dec
adc
jge
add
xchg
lcall
sahf
add
push
hlt
adc
sahf
loopne
push
in
push
add
ret
cmp
data16
bound
dec
sub
dec
push
aas
jo
pop
inc
fstpt
stc
lahf
jmp
sub
jmp
jl
mov
scas
mov
mov
ljmp
push
fadds
cmp
repz
sub
js
imul
in
push
or
mov
idivb
xchg
sbb
jle
xchg
cmpsb
pushf
push
dec
cmpsl
decl
xor
arpl
es
insb
das
fwait
lret
jne
int3
arpl
mov
add
push
cmp
shrb
pop
and
out
scas
subl
inc
or
test
mov
xchg
xchg
clc
fadd
dec
ficompl
iret
cmp
mov
or
dec
jno
pop
adc
std
into
sub
cmc
insb
pop
cli
jecxz
cmp
dec
xchg
xorb
out
mov
mov
js
jl
test
cmpb
mov
orb
xor
jge
pop
push
jp
jle
inc
dec
lretw
fisubrs
rolb
lahf
popa
mov
aaa
xor
jl
mov
adc
fstps
xchg
sti
clc
push
faddl
subl
jge
cmc
mov
sbb
xchg
in
mov
imul
pop
shll
xor
cmp
xchg
mov
inc
mov
rcrl
pop
aas
aas
mov
adc
and
les
xchg
sahf
mov
mov
fs
jg
out
push
mov
fstpt
mov
das
ret
mov
dec
mov
adc
lahf
or
inc
mov
jo
adc
push
dec
loopne
xor
mov
rolb
test
jmp
cmpl
cmp
xchg
sub
enter
jb
or
lret
pop
sub
pop
pop
mov
scas
xchg
in
jbe
lcall
cmp
mov
cmp
movsb
aad
dec
or
mov
cltd
dec
and
shll
pop
cmp
pop
insl
adc
pop
stos
push
cltd
movsb
test
cmpsl
sahf
iret
mov
loop
sub
xchg
push
mov
push
ds
out
inc
mov
outsl
fdivrl
dec
inc
ds
adc
sahf
test
mov
loope
cmpsl
sbb
push
jb
sbb
je
dec
xchg
sub
add
pop
cmp
add
movsb
cmp
mov
mov
outsb
fs
cmpb
xchg
cmpsb
mov
leave
cmc
mov
dec
cmp
and
pmaxub
mov
dec
shlb
mov
rcr
mov
jmp
fwait
push
ret
add
loope
sarb
test
stos
push
test
aad
mov
or
cld
es
push
popa
testb
push
xor
shrb
fisubl
jae
sub
and
lret
cmp
xor
in
cmp
ja
push
in
cmpsl
divb
pop
inc
addr16
jns
jle
cld
adc
es
xchg
push
or
mov
mov
test
sub
ds
scas
testl
cltd
repz
fsubs
ret
jbe
mov
cmp
lea
lcall
inc
ss
ljmp
or
xor
sbb
les
lods
loopne
or
mov
xchg
pop
xlat
adc
subl
dec
dec
movsl
ja
or
in
sub
ss
cltd
push
shll
mov
add
push
lods
cmp
imul
shl
pop
fsubrl
mov
nop
nop
jo
pop
sub
icebp
repz
mov
jnp
scas
mov
cmp
sub
mov
and
xor
push
test
xlat
loope,pn
andb
cmp
rol
jl
jle
call
sahf
mov
dec
movsl
inc
shl
cld
std
push
aad
test
scas
pop
in
mov
dec
jl
das
popa
pop
scas
xor
and
lret
pop
out
inc
pop
xchg
sub
mov
sbb
xchg
push
mov
ret
aas
cmpsb
cwtl
pop
or
mov
lock
les
gs
cmp
fbstp
jo
jg
lret
ret
adc
fadd
hlt
pop
insb
test
fcomip
inc
adc
dec
aas
pop
fsubl
es
outsl
inc
lret
fmuls
dec
mov
rclb
xor
pop
and
mov
pop
push
andb
sub
pop
fcomip
in
xor
cmp
psubusw
mov
mov
jne
xchg
aas
lods
mov
leave
ss
neg
xlat
dec
fst
and
daa
or
adc
jmp
ljmp
lahf
or
cs
stc
outsb
mov
lds
fistl
mov
cmp
jae
dec
cmpl
inc
or
int
aad
aas
mov
mov
xchg
in
std
cmp
popf
cmpsb
cmpsb
add
mov
pop
cmp
shrl
sub
negl
dec
push
faddl
je
nop
adc
pop
xor
mov
pop
andl
and
sub
aad
pop
out
or
sub
mov
inc
inc
cld
xchg
adc
pop
mov
mov
mov
inc
shrb
cmpsl
jl
cmpb
or
enter
pop
or
inc
scas
test
mov
shlb
dec
int
jmp
xchg
fnstsw
dec
cmp
scas
sbb
test
sbb
adc
push
push
pop
mov
and
insl
cltd
sub
jmp
xlat
push
in
mov
mov
pop
call
mov
mov
js
mov
push
pushf
cmp
xchg
nop
push
scas
jecxz
sbb
scas
pop
mov
int
pop
lock
or
ret
ret
lods
fidivrs
fbld
jmp
shlb
inc
sti
daa
inc
mov
add
pop
pop
or
push
cmp
rorb
test
and
xchg
or
add
fcompl
mov
decb
stc
test
jmp
js
and
xchg
daa
pop
mov
adc
xor
dec
mov
pop
rcrl
pop
pop
pop
mov
es
dec
jbe
cmp
insl
mov
enter
dec
in
fnstenv
dec
enter
adc
aam
inc
dec
sbb
movsl
jg
es
data16
loopne
sub
sub
inc
push
push
pop
push
pop
out
mov
push
movsb
dec
jnp
mov
mov
push
imul
test
pop
es
push
ds
mov
loop
shlb
aaa
sbb
push
inc
xchg
dec
push
and
insb
fwait
xor
je
jl
rcrl
scas
sbb
mov
es
xor
xchg
sub
cmp
dec
fcomip
fisttpll
stos
in
outsl
pop
scas
imul
mov
loope
jmp
pop
call
cmp
jle
push
das
jns
cmp
dec
xlat
or
sbb
repnz
imul
jp
clc
fiadds
mov
mov
pop
int
jge
dec
mov
aam
mov
add
and
inc
repz
mov
icebp
mov
inc
testb
das
ret
push
jae
pop
lock
ja
jae
and
hlt
push
xor
sub
mov
push
addr16
orl
test
andb
mov
aas
insl
out
movsl
mov
scas
xchg
jno
xlat
call
stc
roll
cmc
out
fwait
scas
inc
lock
dec
sub
ret
cli
mov
cmp
js
outsb
test
or
test
xor
or
mov
adc
leave
loop
xor
icebp
lret
dec
lcall
adc
dec
mov
jp
xchg
dec
loope
mov
popa
in
jno
dec
into
and
inc
scas
sub
push
inc
xchg
cltd
xchg
fstl
add
stos
leave
cmpsl
fs
insl
out
sti
cmp
xchg
gs
sub
or
movb
movsb
in
daa
in
dec
in
sub
jl
inc
jmp
and
push
jmp
loop
cld
push
mov
nop
mov
jecxz
test
ljmp
lock
mov
int
out
imul
out
inc
in
sub
decl
repz
pop
pop
popf
mov
mov
pushf
data16
push
cld
mov
aad
xor
sub
or
pop
jae
insl
sbbb
movsb
ss
mov
inc
stos
inc
dec
mov
or
and
push
repnz
shll
cmpb
aad
mov
fs
xor
mov
xchg
mov
iret
je
mov
pop
sbb
lock
lods
test
jne
mov
scas
daa
pop
jge
dec
xchg
pop
cmp
sti
in
lods
lret
sub
or
sti
adcl
or
idivb
cmpsb
je
int
mov
cmp
cmpsb
dec
cld
clc
jne
and
mov
push
sub
inc
and
cmp
loope
cmpsb
adc
outsb
faddl
jbe
call
cli
pop
jnp
and
imul
jo
shlb
pop
lcall
in
xor
adc
cmp
cmp
adc
insl
push
daa
bound
mov
sub
add
inc
mov
int3
or
repz
ja
cmpl
lea
inc
dec
adc
aad
enter
pop
sti
adc
cmc
mov
fwait
movsl
stos
aam
dec
mov
or
addr16
push
push
mov
lcall
int3
jns
jmp
mov
ret
dec
sbb
insl
sarb
jb
cmc
repz
or
andl
lods
ds
fs
int3
jbe
cmp
outsb
push
or
int3
movsb
fs
xchg
and
mov
jle
bound
sub
mov
scas
inc
test
addr16
xor
jmp
xor
fildll
or
sahf
adc
test
push
adc
mov
jae
sbb
mov
sahf
ljmp
icebp
addb
jmp
inc
fmuls
lods
aas
adc
push
hlt
pop
out
mov
xor
fdivs
in
mov
mov
in
imulb
or
lahf
cwtl
lods
fs
mov
inc
push
scas
xchg
int3
xor
sbb
push
call
cli
xchg
sub
loop
jge
add
cmpsl
jge
loopne
sub
xlat
inc
outsl
and
push
cmp
xchg
out
sub
repz
sub
je
sub
lds
lahf
test
push
adc
xchg
xchg
inc
loope
add
mov
rolb
les
jmp
cmpsl
jbe
andl
mov
sub
ljmp
std
inc
insb
mov
aad
and
add
pusha
or
nop
int3
jno
pop
pusha
lahf
cmc
push
adc
pop
hlt
or
pop
hlt
stos
mov
inc
xchg
orb
jb
movsl
loopne
lcall
xchg
sbb
and
xchg
cmp
pop
xor
test
xchg
and
and
rolb
je
in
rol
es
jge
push
outsl
std
or
ja
add
fimull
inc
rorl
add
pop
sbb
jp
test
sub
cmp
sbb
jne
fidivs
xor
xchg
xor
adc
andl
pusha
inc
out
call
xor
hlt
inc
int3
jno
and
add
jecxz
xor
cmp
movsb
scas
push
mov
das
in
lahf
shll
daa
pop
push
sti
dec
jmp
jo
rol
cld
pop
jle
orb
xchg
and
int
stos
mov
or
nop
pop
push
shlb
mov
cmp
adc
mov
andl
ljmp
sbb
clc
stc
push
std
mov
icebp
jecxz
bt
fidivrl
fidivrl
add
mov
mov
lret
shll
sub
lods
mov
nop
ja
or
add
pop
or
xor
shl
mov
dec
shlb
cmpsb
lret
cltd
lea
or
jl
cmp
test
jmp
sub
out
out
bound
jge
sbbl
adc
mov
add
icebp
mov
ds
adcl
pop
fnsave
cltd
bnd
xor
push
inc
xor
repz
mov
js
add
or
test
sti
mov
in
aam
ss
sub
push
cli
inc
mov
in
mov
mov
mov
ljmp
sbb
loope
xchg
cmp
jb
test
pop
add
dec
mov
inc
iret
sub
pop
movsl
lret
fwait
dec
sub
jbe
inc
into
outsl
sti
pop
push
lds
scas
test
cmp
xchg
stos
sbb
fisttpll
ret
or
das
fwait
stos
out
hlt
mov
cmp
out
sbb
out
and
fsubl
cmp
out
and
sbb
push
pop
enter
add
pop
aad
insb
stc
adc
pop
out
pop
and
jp
iret
add
sbb
lahf
jge
data16
sub
mov
int3
sub
mov
dec
mov
mov
int3
scas
or
pop
push
shll
or
mov
cmpsl
pop
sbb
add
call
js
pop
js
fisubs
cmp
jb
movsl
addr16
lret
pop
or
xlat
imul
sahf
push
in
ret
push
out
fcompl
pop
cmp
fmuls
sahf
cmpsl
xchg
jb
push
push
das
add
pop
pop
in
xchg
xchg
movsl
in
addl
lods
outsb
cli
lcall
mov
repnz
pop
test
mov
cs
pop
mov
lods
in
fisttps
mov
pmaddwd
lods
push
xor
sbb
shl
enter
adc
repnz
nop
mov
lods
jo
and
jbe
lret
test
test
js
add
or
aas
shll
pop
aam
mov
mov
or
js
and
rol
in
fwait
out
jbe
jb
dec
movsb
and
rclb
and
data16
in
pusha
inc
jns
xor
mov
push
leave
sub
inc
mov
fcompl
lret
movsb
orb
imul
sub
mov
addr16
pop
cltd
insl
or
inc
icebp
pushf
std
xchg
mov
faddl
int3
and
es
xlat
mov
fcmovnu
and
sub
jno
jo
mov
fcoms
pop
jns
imul
pmaxsw
daa
lret
adcb
inc
and
add
and
pushf
jbe
dec
pusha
or
xchg
push
dec
push
xor
mov
and
fs
push
jnp
fucomp
inc
leave
loop
xchg
mov
daa
lods
sbb
mov
push
add
js
mov
fcomps
int3
mov
and
jns
push
in
nop
inc
inc
jg
add
jno
xchg
gs
mov
cmpsb
adc
mov
jl
xchg
iret
cmp
jecxz
mov
lahf
jns
mov
fistpl
cli
adc
adc
cmpsl
imul
scas
add
shlb
push
or
mov
dec
addb
xchg
dec
clc
mov
dec
sbb
mov
xchg
addr16
dec
es
mov
test
mov
gs
inc
lea
test
addl
inc
dec
xchg
sub
les
dec
mov
in
jb
inc
xor
pop
shr
in
add
pop
mov
push
popf
sahf
rcll
mov
xchg
push
pop
push
hlt
mov
lea
xchg
movsl
jecxz
mov
fisubrs
cmpsl
mov
mov
nop
mov
mov
orb
pop
sub
or
inc
sahf
jo
jns
hlt
xchg
enter
fdivl
add
xor
dec
dec
sub
jne
leave
movsb
aaa
in
adc
ficomps
xor
xchg
mov
stc
mov
xchg
outsl
es
dec
jno
test
jp
jmp
je
out
enter
ret
popf
fst
stos
mov
push
push
jg
mov
imul
xchg
cmpxchg
sbb
ss
shrl
fbstp
negl
jg
xchg
fistps
mov
lret
dec
or
xchg
add
pop
pusha
mov
addl
adc
movsb
cwtl
dec
data16
decb
mov
add
mov
inc
jo
sbb
lods
xchg
jmp
movsb
mov
pop
addr16
sub
push
lods
out
fdiv
dec
daa
cwtl
cli
out
sub
pop
sahf
jb
xor
pushf
xchg
leave
lds
mov
or
mov
inc
mov
test
fdivrp
pushf
dec
in
rorl
hlt
xor
and
mov
jg
xchg
add
mov
cmp
lock
testl
insb
jne
std
cwtl
sub
adc
pop
loop
enter
lods
adc
pushf
sbb
jge
sarb
dec
out
data16
hlt
cmpsb
jmp
cwtl
scas
ss
mov
negl
jne
add
adc
ret
mov
cmp
movsl
les
jne
sbbb
lret
test
xchg
or
stos
sbb
xor
xor
push
pushf
inc
scas
mov
inc
call
adc
pop
adc
xchg
push
mov
add
dec
pop
adc
insl
pop
pop
cmp
movsl
mov
dec
or
test
hlt
int3
test
inc
adc
mov
adc
push
mov
push
pop
pop
or
mov
scas
inc
xchg
rorl
mov
mov
cli
jne
jne
push
test
xchg
push
loope
pusha
mov
ljmp
arpl
push
jge
lret
mov
cmp
mov
and
fisubs
in
mov
push
imul
in
adc
popa
mov
sbb
mov
ja
outsb
xor
jbe
ror
jnp
cmpsl
or
push
push
or
push
jne
add
fcom
add
out
ret
iret
push
dec
mov
mov
or
cmc
cs
pop
adc
sbb
movsl
sbb
loopne
stos
outsb
lock
add
xor
mov
imul
roll
out
xorb
dec
repz
sub
pusha
ljmp
aaa
and
mov
lea
lods
xor
pop
mov
shld
je
and
jbe
push
lds
jg
dec
inc
fbld
jge
mov
das
jb
mov
or
cld
mov
shl
and
push
arpl
or
push
mov
sub
fs
and
mov
repz
call
popf
and
and
inc
lret
adc
add
aaa
mov
fimuls
sub
push
repnz
cld
sub
cvttps2pi
cld
add
jle
dec
stos
test
jg
mov
les
or
test
bound
ljmp
xchg
out
dec
jb
faddl
sub
sbb
mov
sbb
pop
push
mov
mov
test
mov
ficoml
mov
fldcw
cmp
arpl
lods
add
ljmp
imul
inc
cmpsl
jae
cmp
dec
add
mov
xchg
pop
mov
lret
mov
sbb
lret
fsubr
movsb
jns
mov
aad
popa
adc
iret
out
popf
cltd
je
adc
ret
sbb
xchg
js
dec
std
cmpb
add
fwait
pop
pusha
mov
jl
pop
cmp
jmp
add
mov
xor
jp
push
mov
pop
add
sbb
pop
out
or
pop
xchg
xchg
pop
sbb
aas
mov
jns
ja
inc
sub
sar
and
ja
mov
faddl
pop
fistl
loop
jecxz
jns
add
add
insl
repz
inc
fildll
mov
mov
pop
aam
aam
js
leave
aas
fldenv
inc
pop
fidivl
dec
out
cmp
mov
mov
push
in
and
in
and
ja
ficompl
sub
flds
mov
das
das
jno
jnp
insb
imulb
sar
movsb
jmp
xchg
mov
rcrb
mov
scas
sti
jge
adc
dec
out
rorb
adc
pop
out
nop
push
mov
mov
cld
outsb
cmp
insb
pop
xor
scas
or
mov
add
rorl
jge
sub
aam
movsl
js
xlat
xlat
mov
cwtl
ja
mov
arpl
adc
add
add
push
test
xchg
je
sbb
fdivl
inc
bound
fistl
aam
sub
and
push
adcb
xchg
jne
in
cmpsb
out
jmp
push
xor
call
mov
ror
outsl
imul
std
jmp
popf
jnp
jg
scas
rcrl
test
mov
adc
repz
popa
insl
xchg
in
xchg
ret
leave
mov
dec
adc
lahf
xor
outsl
scas
aad
iret
pop
addr16
dec
xchg
xchg
jge
insb
fisttpll
cmc
jecxz
push
cmpxchg
std
cmp
xchg
cmp
ja
jns
or
jne
pop
loope
push
push
ljmp
push
jmp
rolb
add
insb
bound
or
ljmp
mov
aad
and
mov
xchg
sub
inc
out
popf
xchg
cmp
push
jo
xchg
add
pop
loopne
cmpsl
mov
enter
mov
std
pop
sub
ljmp
lret
cmp
lcall
cmp
jmp
in
mov
roll
cwtl
lcall
jbe
mov
xlat
sub
cs
push
and
sub
xchg
inc
test
fisubrl
cwtl
mov
and
popa
xchg
jge
jnp
out
jne
adc
loopne
pop
imul
mov
outsl
out
ljmp
dec
mov
adcb
jbe
ja
mov
mov
in
int
or
pop
sub
add
cmpsb
xorb
mov
iret
jg
and
mov
push
icebp
jns
cs
into
incl
adc
clc
scas
mov
cltd
sbbl
cli
mov
inc
mov
rolb
daa
andb
mov
sub
fstp
inc
jecxz
call
xchg
lock
jb
test
sahf
mov
es
mov
dec
push
nop
sbb
es
cmpsb
mov
div
lods
cmpsl
and
xor
popa
sub
loope
jmp
leave
cmp
shlb
fimull
ret
mov
es
adc
bound
cwtl
fsubrs
clc
sub
mov
mov
xchg
repz
jne
adc
mov
push
test
aam
loopne
fildl
mov
xor
nop
jnp
pop
jmp
sub
mov
sbb
pop
das
push
sub
pushf
mov
xchg
xchg
nop
xor
xor
pop
adc
aam
pop
jmp
aam
test
cltd
and
je
test
cmp
mov
int
xor
sub
mov
leave
data16
inc
iret
pop
in
mov
int3
loope
cmp
aad
mov
or
ds
add
iret
scas
pop
mov
call
frstor
jge
clc
jg
inc
in
mov
xchg
cmpsl
xor
cmc
leave
out
fstpl
jbe
aam
test
cli
ret
aas
mov
xor
jp,pn
cmc
lock
mul
sbb
ds
mov
inc
clc
xorb
out
jo
push
ja
xchg
push
pop
xor
push
xchg
xchg
inc
push
xor
jno
ficomps
aad
push
lods
dec
pop
mov
aad
xor
jp
out
mov
cmp
loope
jg
mov
imul
jecxz
mov
mov
sbb
nop
ds
inc
test
test
adc
inc
jne
adc
ss
jmp
lods
mov
dec
test
pushf
mov
cs
repnz
mov
jo
mov
or
sarb
mov
add
mov
mov
mov
out
lcall
stc
push
jo
mov
subl
jbe
inc
adc
test
sar
rclb
mov
pop
out
into
or
jle
adc
fnstcw
imul
mov
out
add
cmp
and
mov
shrl
mov
push
push
ret
divl
push
sti
add
xchg
aad
dec
mov
add
jecxz
imul
test
push
sbb
enter
or
xor
out
cwtl
mov
repnz
push
push
lea
scas
clc
lahf
lods
pop
fbstp
sub
aaa
jle
xchg
sbb
inc
xchg
lods
jae
lea
cmpsl
jns
dec
outsl
stc
fdivr
push
sbb
mov
daa
dec
daa
pusha
daa
jns
sbb
bound
add
popa
lahf
or
in
mov
shrl
lods
notl
orl
jne
mov
lret
xchg
add
cltd
ds
test
cmp
loop
push
jecxz
test
addl
push
mov
sub
leave
inc
pop
sbb
icebp
mov
push
cli
inc
push
notl
scas
jecxz
or
mov
push
cmc
inc
inc
xchg
cmc
and
xor
mov
xor
and
lret
cmc
add
clc
js
pop
sub
dec
ljmp
sub
jo
mov
addl
clc
enter
and
pop
pop
jb
or
stos
out
roll
push
cmp
dec
cmp
imul
imul
push
movsb
inc
repz
dec
les
dec
xchg
pop
out
mov
out
xchg
add
add
pop
xor
mov
icebp
push
pop
in
lds
insl
mov
adc
add
jle,pt
fsubrl
inc
jb
enter
mov
mov
imull
int3
mov
iret
xchg
push
pushf
jge
insl
lock
fimull
lock
mov
inc
int
ljmp
sub
push
xor
pop
bound
notb
pop
dec
ret
mov
popf
mov
jae
popf
in
loop
mov
or
js
out
test
outsb
xchg
push
adc
into
jge
jg
pop
jnp
mov
fidivs
add
cmp
ret
cmp
fcompl
fldt
lods
pop
movsb
inc
add
fwait
pop
out
push
jne
lds
xchg
aad
sub
push
xchg
lds
add
ror
scas
popf
sbb
clc
mov
mov
sarl
fs
dec
jecxz
add
aas
push
lret
hlt
inc
js
or
pop
and
xchg
es
mov
add
pop
dec
test
dec
das
push
cmpsl
es
repnz
push
mov
mov
sbb
xor
lret
push
leave
jecxz
test
jbe
imul
mov
mov
cld
aas
sub
cmp
cmp
mov
fwait
test
fstl
dec
pop
mov
mov
cmp
stos
lods
inc
push
xchg
pop
iret
jl
scas
ljmp
adc
mov
js
xor
lods
sub
and
sbb
cmp
xor
outsb
shlb
in
fs
fcoms
nop
jnp
lea
lahf
out
loope
mov
or
mov
pop
ljmp
fmuls
in
pop
or
xor
mov
jg
sub
cmp
sub
sub
out
test
xchg
push
push
push
mov
or
pop
push
inc
and
dec
sub
or
insl
movsb
pop
add
pop
mov
lret
and
lret
jl
arpl
cmp
stos
arpl
mov
enter
imul
shl
rolb
mov
jp
inc
shl
iret
and
aas
lock
fsubrs
push
mov
and
sub
das
mov
outsl
xlat
pop
xorb
rcrl
sub
xor
aam
pop
cltd
jo
ret
or
rorl
and
xorl
add
add
repz
jbe
into
or
mov
mul
cmp
lret
loopne
pushf
pop
pusha
ss
aam
adc
add
pushf
xchg
test
or
fists
pushf
xchg
dec
or
imul
mov
adc
ss
push
cli
sub
push
cltd
iret
sbb
push
out
gs
or
xchg
fstl
sbb
enter
or
fs
or
sbb
sbb
nop
stos
aam
adc
add
xor
mov
divb
jbe
cmp
sub
cmpsl
and
sub
pop
aaa
out
fists
repnz
fisubl
jne
movsb
cmpsb
pop
xchg
and
ds
and
pop
xor
test
mov
xlat
test
lahf
fwait
bound
mov
sbbb
mov
adc
fimuls
mov
in
test
dec
cmp
roll
dec
fidivrs
adc
sar
push
adc
dec
ljmp
pop
dec
dec
mov
xor
lea
add
push
imul
fiaddl
xchg
dec
mov
jmp
push
dec
sbb
jns
xchg
es
or
cmpl
jne
mov
adc
cmp
xchg
dec
add
mov
push
outsl
push
nop
mov
aas
mov
jo
mov
daa
out
mov
inc
xlat
test
sbb
pushf
dec
pusha
call
jmp
mov
pusha
lea
cmp
popa
je
mov
arpl
imul
cmp
mov
push
push
sbb
mov
cmpl
in
leave
mov
adc
es
sbb
cmpsl
jb
adcb
push
and
sahf
gs
cmp
jmp
rcrb
rorb
xor
imul
jge
xchg
push
inc
cmp
or
mov
push
add
mov
outsl
push
data16
mov
jecxz
popa
xor
pop
imul
add
ret
mov
sbb
subb
lret
jns
shll
sub
fidivl
jns
into
push
inc
addr16
cmp
lret
add
icebp
lret
xchg
out
stos
test
out
mov
enter
mov
jp
or
lcall
mov
out
jp
lea
cmp
les
sbbb
test
fstl
cwtl
repnz
adc
and
fisttps
pop
stos
push
dec
scas
pusha
jo
xchg
cli
xchg
mov
int3
or
mov
or
lret
lcall
cltd
repnz
sti
test
cmpsb
pop
inc
pop
or
push
js
mov
test
lods
clc
inc
cmpsl
dec
fs
bound
pop
insl
lods
jnp
xchg
jno
add
cwtl
rcrl
aam
rcrl
mov
int
test
lds
fcompl
add
mov
movsb
cmpsb
xor
or
test
lock
add
xor
push
insb
mov
fs
pop
idivl
mov
leave
sbb
mov
cmp
push
popf
je
stc
pop
ficompl
pop
daa
inc
ljmp
jge
int3
clc
jne
dec
fiadds
shl
cmp
dec
sub
cwtl
jle
arpl
or
in
into
dec
lcall
pusha
icebp
and
aaa
out
outsb
bound
iret
sahf
mov
in
inc
xchg
fcoms
or
jo
dec
pop
add
dec
mov
dec
xchg
lods
shrb
fs
mov
xor
ret
lret
subl
inc
jae
add
sahf
jno
jo
repz
mov
repz
push
imul
adc
pop
sahf
aaa
cli
mov
jle
enter
sbb
dec
mov
jne
test
test
scas
sbb
mov
add
inc
shl
cmc
int
leave
loopne
lcall
lock
outsb
and
pop
fidivrs
adc
pop
adc
rcrb
mov
popa
cmp
lahf
mov
jno
dec
sbb
push
jle
pop
int3
jge
rorb
mov
mov
test
popf
jle
inc
dec
pop
push
pusha
mov
adc
popa
mov
cmp
pop
mov
mov
fisubrl
cld
bound
cmp
sub
sub
push
mov
rorb
and
and
sub
scas
push
cmp
xchg
js
daa
sarb
aad
jle
bound
adc
add
jl
aad
shll
insl
and
or
xchg
nop
cld
push
xor
jae
les
lahf
xchg
jge
mov
pushf
shlb
sub
negl
xor
push
jae
xor
addb
lret
xchg
jne
xchg
xchg
cmp
push
pop
outsb
inc
aaa
or
cld
sub
mov
mov
repnz
cwtl
push
lahf
push
mov
popa
mov
sub
jge
scas
mov
mov
fildll
mov
add
roll
sub
fs
jbe
scas
lret
iret
mov
or
popa
push
test
pop
xor
fmuls
jp
iret
imul
dec
or
in
mov
mov
dec
mulb
add
jmp
mov
jecxz
out
pop
fucomi
cmp
mov
jmp
adc
imul
aas
and
les
nop
push
pushl
int
and
pop
push
xlat
add
mov
pop
add
js
fwait
xor
pop
sub
push
or
aam
lock
loope
adc
jb
jl
outsb
inc
mov
cmp
aas
sbb
push
test
stos
mov
or
test
loopne
mov
or
sub
daa
pop
repz
jecxz
aad
xor
and
mov
out
mov
aad
cmpsl
mov
loopne
xor
sbb
pop
mov
mov
add
inc
lcall
xchg
mov
push
or
jp
mov
pop
adc
jmp
xor
or
cli
pop
test
ja
fldt
mov
mov
int3
adc
or
dec
mov
lahf
or
xor
aas
pusha
inc
push
adc
outsb
push
sbb
hlt
push
dec
aas
sub
lock
mov
ss
bswap
xchg
cli
repnz
push
dec
in
clc
adc
leave
or
sub
xchg
add
push
nop
ljmp
push
mov
sub
push
lds
divb
xchg
ficomps
rcr
pop
mov
add
jmp
cmp
or
add
sbb
shll
cmp
shlb
das
mov
sbb
lock
cwtl
out
sub
aam
jl
push
aas
stos
imul
sbb
test
push
fstps
mov
sbb
mov
jo
pushf
push
add
fisubl
pop
call
jno
movl
popf
loope
dec
int
setne
mov
add
loopne
shlb
jne
in
mov
popf
stos
jbe
shll
fsubl
mov
mov
sub
jbe
add
inc
xchg
push
fwait
aas
insb
fcompl
dec
les
adcb
pop
daa
dec
xor
pop
and
jb
adc
das
into
push
andl
adc
lods
cmp
jle
ss
hlt
imul
dec
or
aad
sbb
cwtl
xchg
ret
push
and
int
out
jnp
sbb
mov
sub
jge
orb
add
jb
loopne
jle
jl
sub
dec
repnz
push
fidivrs
ljmp
and
stos
or
xor
pop
or
mov
dec
test
jb
lods
push
loop
or
stc
repnz
sbb
inc
scas
insb
inc
inc
or
push
arpl
insl
enter
loopne
jg
hlt
mov
or
data16
or
or
out
lods
and
mov
cmc
jne
nop
push
or
popa
notb
loope
mov
adc
dec
inc
mov
ja
or
add
or
fildl
testb
fsubr
mov
adc
mov
inc
mov
sbb
test
push
push
outsl
push
jmp
cmp
push
mulb
and
pusha
push
push
arpl
jno
dec
inc
and
push
push
cltd
mov
push
mov
stos
cld
dec
js
scas
sbb
ljmp
cmpl
fistps
or
mov
add
popa
pushf
in
movsb
in
aaa
cmp
clc
adc
data16
mov
and
iret
push
fcomi
outsl
out
cmpsl
in
popf
xchg
xchg
test
inc
sub
fcompp
mov
or
inc
scas
pop
inc
std
fdiv
mov
pop
es
and
mov
decl
jmp
jmp
push
mov
aad
pop
sti
adc
arpl
hlt
inc
pop
pop
jmp
movsb
iret
push
sbb
out
jle
adc
inc
test
decb
cmp
sub
mov
enter
dec
xchg
mov
iret
lock
pop
or
clc
push
test
xchg
xchg
or
call
loopne
ret
roll
js
xchg
and
jns,pt
jnp
pop
fcmovne
shl
in
mov
loopne
mov
or
xor
xor
ror
sbbl
aaa
adc
iret
mov
mov
mov
mov
jnp
lea
add
add
jnp
in
pop
dec
or
jne
mov
dec
fwait
jp
pop
push
mov
sbb
dec
lret
pushf
fisubs
outsl
repnz
insb
cmp
adc
test
push
dec
inc
jae
jo
pop
mov
sahf
sub
test
mov
imul
xor
out
sub
fisubs
jne
inc
movsl
fdivp
aam
loopne
xchg
inc
dec
ljmp
cltd
sub
cmpsb
dec
fnstenv
jne
cltd
popa
mov
sub
lret
mov
xchg
xchg
repz
mov
in
subb
add
out
pop
xchg
pop
lods
push
out
jne
sbb
daa
or
inc
add
jg
stos
movsl
nop
jmp
cmp
dec
jl
xchg
fmull
icebp
cs
push
pop
stos
cmpsb
pop
mov
ss
cmpsl
mov
cmpsl
in
hlt
insb
adc
mov
and
sahf
jnp
ljmp
enter
test
push
and
daa
xorb
inc
aad
lock
lock
add
je
or
add
adc
insl
adc
xchg
mov
jecxz
aad
add
push
cmp
adc
les
jl
add
jns
mov
fiadds
pop
sbb
and
mov
nop
cli
imul
je
outsl
fimull
push
mov
dec
test
add
jb
std
xchg
arpl
mov
aad
mov
stos
pop
add
pop
test
cli
test
mov
xchg
jmp
add
dec
cltd
mov
bound
loope
mulb
fsub
pop
mov
ds
and
and
inc
movsb
cmp
dec
xor
mov
outsb
push
cmp
mov
lcall
mov
pop
mov
add
adc
xor
jno
pop
data16
int3
aam
dec
mov
sarl
das
lcall
mov
ficoml
sub
ss
pop
out
mov
jecxz
das
lods
in
cmp
into
pop
in
int3
aas
cmp
lcall
jbe
ret
xchg
and
and
push
mov
aas
mov
jmp
pop
push
xchg
imulb
inc
push
js
cmp
push
push
xor
xchg
in
mov
imul
outsb
xrelease
sbb
daa
imul
dec
loopne
push
arpl
imul
outsl
sub
pop
clc
pushf
mull
pop
sub
data16
push
pusha
pop
mov
sbb
sbb
pop
jg
sbb
inc
scas
dec
aas
add
inc
movsb
lea
out
dec
outsb
sub
sbb
jle
sbb
lahf
or
pop
cs
mov
and
jbe
repz
ficomps
scas
inc
pop
daa
push
fistps
xchg
iret
jnp
and
les
femms
xlat
sbb
je
pop
mov
dec
daa
out
sbb
mov
sbb
test
xor
jle
mov
and
mov
add
lret
jl
lcall
inc
shlb
push
xor
adc
repz
icebp
sub
cld
mov
push
push
int
mov
lret
lcall
iret
xlat
xchg
inc
rolb
das
orb
sahf
loope
and
sbb
dec
mov
imul
or
and
mov
loopne
dec
push
xlat
cmpb
and
loopne
lea
movsl
sub
mov
nop
or
mov
and
data16
in
loope
pop
cmpb
jne
pop
or
xor
rclb
cli
xchg
pushf
mov
js
rcl
aaa
or
ds
cmovp
mov
cltd
push
hlt
lcall
repnz
jb
or
pop
stos
fmull
jmp
rcl
in
mov
pop
adc
shll
add
mov
dec
dec
cmpb
pop
xchg
pop
push
xchg
sti
not
dec
mov
int3
imul
shrl
pop
hlt
sbb
lock
xchg
mov
leave
jne
ret
sub
aad
sbb
shrl
push
scas
nop
into
add
pop
jecxz
or
out
outsb
mov
fs
lret
rcrb
rorb
dec
sub
insb
xchg
cmpsb
es
int
adc
xchg
pop
bound
dec
cmc
aas
leave
or
jp
shl
mov
lret
push
jae
sub
scas
iret
stc
arpl
or
xor
xchg
and
adc
imul
add
mov
xchg
mov
inc
dec
or
loope
sub
clc
cmpsl
mov
add
bound
xlat
jge
sub
jl
mov
pushf
cs
test
mov
adc
pop
pop
adc
test
add
xchg
cltd
dec
pushf
adc
leave
and
dec
xor
push
out
xchg
cli
mov
loop
pop
sbb
inc
shll
je
fmulp
inc
jo
sbb
ja
nop
sbb
imul
cmpsb
pop
lahf
ljmp
pop
sbb
cmpl
xor
ss
or
jns
inc
adc
cmp
push
cmc
es
clc
mov
cmp
xchg
ds
jbe
mov
cmp
inc
enter
inc
sbb
bound
mov
mov
orb
or
sub
lds
mov
jecxz
incb
mov
sub
iret
ffree
ds
imul
xchg
add
xor
fisttps
fidivs
dec
xchg
out
sbb
les
pop
push
icebp
pop
push
pop
jbe
loopne
scas
xchg
inc
mov
insb
jno
dec
and
sub
test
sub
jmp
mov
and
fistpll
inc
pusha
lds
mov
sbb
xchg
mov
repz
insl
cwtl
leave
imul
mov
xchg
mov
jb
int
sbb
lock
and
push
and
test
pop
mov
push
outsl
cltd
in
mov
push
iret
and
pop
mov
je
mov
pop
test
int3
inc
xor
inc
testb
iret
inc
sbb
add
js
test
hlt
aad
jae
inc
mov
inc
dec
xor
out
fwait
dec
inc
inc
sbb
out
es
bound
xor
std
dec
jl
lock
hlt
mov
cltd
lods
int
adc
add
pop
pop
push
adc
xor
cwtl
push
jo
cmp
adc
dec
lock
cltd
inc
xchg
testl
fadds
xchg
aad
pop
mov
cmpb
ret
rclb
or
cmc
sar
mov
ja
mov
clc
mov
andb
jbe
fcmovnb
bound
inc
cmpsb
cmp
movsb
insl
insb
inc
clc
inc
push
insb
xchg
rolb
callw
lods
out
cmp
adc
fisubs
fwait
daa
lds
std
sub
pushf
pop
outsl
xchg
sub
add
ret
pop
or
inc
dec
inc
and
inc
ss
notb
pusha
in
aam
inc
jmp
mov
lock
in
pminsw
enter
cli
pop
mov
mov
out
shrb
mov
cld
sbb
into
inc
xchg
sbb
sub
aas
push
mov
mov
sbb
inc
test
push
ret
cmp
cmc
dec
dec
push
lea
jbe
push
mov
sbb
rcll
xchg
idivl
imulb
cwtl
dec
out
sub
mov
push
fisubl
test
aaa
jmp
push
imul
cmp
inc
shlb
popa
and
ss
ja
mov
sbb
lahf
lahf
pinsrw
adc
jmp
and
pushf
push
adc
push
lcall
int
es
les
adc
sbb
fldcw
pop
fists
sub
fcomps
aad
mov
dec
fildl
lret
mov
sbb
push
ret
and
pop
adc
add
fistpll
div
add
and
sbb
xchg
push
xchg
sbb
lea
fxch
jge
movsl
test
xlat
jmp
cwtl
or
jb
and
minps
jle
hlt
imul
fldenv
xchg
jns
and
jns
sub
repz
dec
andb
xchg
cmp
std
imul
and
push
dec
int
outsb
mov
hlt
int
sub
push
push
and
mov
outsl
je
pop
mov
adc
mov
out
int
cmp
ja,pn
mov
leave
mov
jl
out
push
sub
scas
xor
sbb
sbb
push
inc
push
xchg
pop
pop
sbb
stos
lret
repz
add
xchg
mov
xchg
pushf
adc
sbb
mov
mov
mov
jno
insl
cmc
mov
cmp
push
and
pushf
pop
mov
aas
mov
js
cmpsb
jns
xchg
cltd
adc
xor
aas
aas
mov
mov
mov
lea
dec
loopne
data16
test
xchg
ds
mov
loop
sub
cmpsl
rolb
xor
or
sub
push
rcll
call
les
dec
dec
rep
cmp
lret
sbb
es
and
js
mov
lods
cmpb
xchg
jecxz
iret
mov
mov
sub
jb
sbb
sub
fisttps
jno
cmc
jb
in
push
int3
xor
adc
in
sbb
sbb
jae
push
sbb
push
shl
or
add
imul
movsl
fsubrs
rorb
jo
addr16
jnp
insl
pop
std
xchg
jp
sub
fdivr
bswap
std
xor
mov
sub
adc
aaa
test
add
ljmp
xchg
push
pop
fildl
mov
fisubrs
mov
lods
adc
jns
dec
imul
fs
in
adc
xlat
add
xor
je
mov
pop
rclb
xor
in
insl
mov
aam
out
push
cmpsl
cs
arpl
dec
inc
xor
cmp
lods
loopne
cmp
mov
add
sbb
push
push
pop
xchg
push
test
and
movsb
mov
xchg
xor
push
fstpt
jo
mov
pop
xchg
cmpsb
sub
sub
mov
in
cwtl
xor
sub
mov
xchg
int
test
inc
xor
insl
imul
frstor
dec
mov
push
mov
push
inc
les
loopne
xchg
sar
add
adc
flds
ja
out
push
fisttpl
xchg
and
push
xor
adc
pop
or
test
ret
inc
cmp
repnz
mov
lret
pop
repz
insl
xor
lret
jb
and
adc
cmp
and
ja
lds
mov
adc
cwtl
hlt
and
lret
mov
sub
ficompl
push
fs
das
cwtl
add
into
fsubrl
les
lds
xchg
pmullw
loopne
push
jb
fisttpl
and
adc
lods
call
incl
pop
push
xchg
xchg
pop
and
std
mov
cmpsb
mov
pop
sbb
xor
pop
leave
sub
loop
cmp
and
xor
lods
cmc
mov
xchg
inc
jns
loopne
push
stc
adc
xchg
aad
ljmp
lcall
cmpsb
adc
push
fistpl
mov
cmc
push
add
cmpsl
jno
fxch
jmp
adc
mov
ret
cmpsl
and
subb
daa
lcall
test
sbb
mov
push
je
sbb
pop
xchg
sbb
or
xchg
xlat
or
int3
test
dec
outsl
xchg
iret
sub
loop
xor
in
dec
xchg
dec
push
mov
dec
and
aaa
mov
xor
inc
jnp
adc
pushf
push
stc
pop
inc
aaa
jae
incb
jl
std
out
dec
xor
call
pop
popa
insb
fisubs
sarb
lods
adcl
jo
pop
jle
push
out
pop
mov
decl
xchg
mov
or
mov
lock
pop
pop
pop
in
fisubrs
es
mov
adc
insl
cmpsb
or
jmp
bound
add
xchg
push
in
dec
cmc
out
xor
pushf
call
int3
mov
cmpsl
pop
jmp
icebp
imulb
dec
or
out
pop
sub
fwait
subl
mov
mov
lret
fnstcw
icebp
daa
sub
xor
jmp
mov
clc
dec
push
sbb
dec
cmpsl
test
test
int
orl
dec
jmp
sbb
jne
cmp
jg
in
sub
idivb
ficoml
sarb
jb
roll
lods
cmp
loope
call
pop
adc
mov
outsb
mov
mov
shll
jne
test
jle
xchg
adcl
fldenv
xchg
int
push
andl
idivl
test
daa
xchg
outsl
arpl
repz
sahf
ret
aam
sub
std
aaa
mov
insb
xchg
jmp
negb
movsb
xchg
sub
jae
into
aad
pop
out
das
jae
xchg
fxch
sbb
adc
repnz
add
push
mov
jge
mov
inc
xchg
iret
xor
cmpsl
outsl
pushf
cmpsl
jb
leave
insb
mov
ljmp
and
push
cmpsb
out
out
jmp
scas
add
stos
inc
in
shr
lods
ja
dec
loope
cmp
movsl
sbb
push
mull
jecxz
jae
jne
cmp
and
adc
loope
fnstcw
push
pop
cmp
lcall
cmpsb
xlat
clc
rol
push
sets
jns
or
sub
mov
int
popf
push
xor
in
iret
add
pop
rorb
sbb
sbb
and
mov
dec
gs
test
cmp
hlt
pop
cmp
or
mov
pop
cmp
outsb
sub
imul
jl
cltd
mov
fnstsw
out
and
mov
push
movsb
std
lods
daa
pop
add
or
adc
fsubs
xlat
rorl
fs
das
ret
xor
mov
xchg
outsl
push
mov
jle
push
jl
fbld
dec
add
jp
cmpb
jmp
dec
jmp
lret
std
enter
in
dec
ret
adc
lds
aam
popa
int
push
pop
int
or
lods
xor
lcall
aam
movsb
push
vpmullw
cltd
mov
jb
das
call
adc
inc
sub
test
std
loop
stos
push
mov
push
pop
std
pushf
fldcw
mov
push
add
jbe
mov
cmp
data16
mov
in
ljmp
mov
adc
and
sbb
sbb
adc
jle
outsb
push
icebp
cli
int
sbb
push
mov
lcall
pop
xor
sub
enter
stos
popf
repz
and
push
push
adc
sahf
data16
lods
adc
popa
xchg
sub
push
xor
iret
cmp
push
or
sahf
xor
lret
adc
ret
add
push
jle
adc
cmpsb
dec
mov
or
mov
aas
out
leavew
icebp
add
imul
jo
ljmp
decb
dec
dec
jno
push
sub
jne
imul
nop
orl
push
mov
adc
sub
inc
das
xrelease
stc
loopne
jnp
push
repnz
iret
mov
shlb
pop
sub
pusha
aam
popa
mov
aaa
scas
flds
push
out
rorb
jg
lcall
inc
fsubr
dec
or
outsb
xor
push
mov
jae
repz
int3
add
xor
or
mov
jno
push
gs
xchg
or
jmp
cld
je
xor
xchg
pop
mov
push
xchg
mov
out
in
das
sub
in
lods
adc
add
int3
mov
mov
xor
inc
dec
aaa
jl
mov
arpl
push
sub
jge
mov
enter
int
lcall
pop
gs
xlat
push
mov
gs
xchg
and
clc
jle
jle
jae
enter
ror
lcall
call
or
lods
push
je
push
fwait
cwtl
pop
inc
cmpl
dec
mov
shl
ficompl
dec
inc
xchg
int3
pop
jnp
or
idivl
rorl
push
add
sbb
sahf
cmp
leave
fdivr
fs
jl
dec
inc
pop
dec
adc
out
loopne
lock
xchg
aaa
addr16
mov
addl
or
inc
out
sahf
dec
dec
sub
and
enter
jb
shll
adc
xor
xchg
cmp
stos
xchg
inc
and
iret
add
sti
sbb
cmp
ret
adc
out
add
adc
outsb
mov
scas
arpl
shll
std
orl
push
outsl
ficomps
test
fs
aas
bound
mov
push
push
test
or
xchg
adc
add
outsl
push
aad
int3
pushf
insb
pop
cmp
dec
or
mov
fcompl
sub
push
imul
jne
loope
sub
cmp
cltd
call
xchg
jle
push
stos
xor
sbb
push
lret
dec
scas
pop
data16
xorb
jnp
loope
mov
cmpsl
ret
dec
rorb
sbb
cld
sbbl
ja
or
and
xchg
jo
fists
mov
sub
cmp
pop
mov
add
cmpsl
call
jle
xorl
xor
lret
int3
cmp
aas
rorb
imul
xlat
mov
cmp
xchg
sub
lret
insl
cmp
jecxz
mov
mov
pop
or
bound
add
or
insb
sbb
mov
daa
mov
bound
cmp
mov
sub
aad
jecxz
arpl
insl
in
lahf
das
ja
inc
inc
clc
jg
and
cmp
pop
lahf
je
cmp
push
aam
mov
push
mov
mov
xchg
js
lret
sarb
out
sbb
sti
jmp
sbb
mov
lock
sbb
call
pop
popf
pop
stos
scas
cmp
and
sub
push
xchg
add
cmc
sbb
or
cmp
fdivrl
adc
xchg
mov
mov
sub
test
pop
or
push
in
icebp
out
popa
mov
pop
mov
and
cmpsl
jmp
cld
push
mov
push
jge
gs
sahf
ds
xor
mov
mov
dec
aam
cmpsl
pop
mov
add
lret
outsl
mov
mov
xchg
push
scas
lods
popf
ss
dec
mov
imul
mov
push
push
cmp
mov
add
adc
stc
adc
xchg
into
pushf
or
jg
sub
mov
loopne
pop
push
and
movsb
mov
and
loopne
sbb
fnstenv
jle
psrlw
call
loop
xor
out
push
sub
out
cmp
push
jo
adc
sbb
inc
popf
jle
jb
jb
pop
or
sub
mov
ja
mull
mov
xchg
test
fsubrs
mov
xchg
xchg
lret
in
adc
fs
adc
jno
test
pop
and
test
dec
in
inc
andl
bound
add
out
insl
add
mov
add
andl
ljmp
outsb
inc
cld
pop
fadds
popa
cli
cmp
mov
jg
jmp
loope
cwtl
arpl
mov
or
aas
ja
icebp
aaa
in
or
lods
mov
lods
jp
adc
sub
data16
mov
shll
jle
shlb
mov
xchg
push
sub
movsb
jle
inc
xchg
stos
push
out
adc
pop
loop
lds
mov
xchg
dec
pop
jo
insb
fmulp
xchg
scas
jp
mov
mov
xchg
das
pushf
pop
sub
fs
xor
xchg
xchg
inc
mov
andl
sbb
orl
cmp
jmp
inc
mov
ret
ss
lds
aam
inc
sub
xorl
stos
out
push
daa
mov
out
inc
dec
xchg
insl
jb
mov
cltd
xchg
vpmuludq
fadds
pop
xlat
jmp
dec
addl
jg
pop
adc
mov
clc
pop
filds
fwait
icebp
mov
xorl
xchg
push
xchg
jbe
repnz
sbb
lahf
jecxz
pop
gs
dec
movl
dec
or
fildll
fnstcw
pushf
cmc
dec
jp
cs
mov
and
add
outsl
or
rcll
mov
repnz
cwtl
add
or
pushf
pop
push
int
scas
jnp
mov
add
movsb
mov
mov
mov
mov
adc
int
loopne
divl
fiaddl
bound
adc
lahf
jnp
enter
stc
bound
jle
test
lock
sbb
cs
or
int3
in
out
xor
out
test
pop
outsl
bound
dec
dec
insl
mov
cld
and
xchg
pop
cmpsb
lahf
or
icebp
leave
sbb
data16
xchg
hlt
lret
adc
ljmp
into
scas
add
or
mov
sub
or
repz
mov
popf
inc
test
sti
xorl
stos
add
cmp
inc
out
cmp
and
add
shll
ss
das
roll
or
sbbl
xor
mov
xchg
jns
aad
movsb
sbb
mov
ss
inc
and
test
xchg
push
pop
call
pushf
repz
stos
ret
mov
cld
cmpsl
xorl
fstpt
cmp
in
dec
add
fmull
arpl
mov
adc
sti
enter
cmpsb
ljmp
cwtl
mov
addr16
add
sbb
dec
dec
rol
push
sub
inc
fcompl
mov
orb
outsl
mov
mov
xlat
in
not
xor
lcall
mov
jbe
xchg
leave
int
push
stos
xchg
sbbl
pusha
cmc
mov
ss
lods
cmpsl
fwait
or
pop
cmpsl
pusha
mov
inc
lods
mov
pop
sbb
daa
jmp
adc
aaa
xchg
loopne
fnstsw
inc
mov
cmpsb
insl
mov
xchg
dec
sub
lret
aam
push
in
push
dec
mov
mov
pushf
lods
out
ret
xorb
sti
sub
or
negb
ja
push
and
ds
cmp
repz
fcmovb
dec
or
int
cs
faddl
fistpl
stos
sbb
mov
adcl
adc
mov
pop
mov
pop
lahf
and
and
sub
pop
pop
push
loope
dec
pop
fucomp
or
ret
pop
jns
pop
lahf
jb
es
sub
xchg
or
scas
mov
inc
mov
sbb
jmp
addr16
pop
into
popf
add
sub
mov
mov
pop
inc
mov
jbe
mov
fists
cmp
aas
cmpsb
inc
aad
popa
aam
movsb
ljmp
into
mov
sbb
or
jo
insb
xlat
fstps
je
mov
xchg
add
xor
lret
jl
loop
addl
and
lods
push
mov
mov
icebp
push
in
das
addb
xchg
div
jae
leave
movsl
aam
ret
pop
xorb
pop
mov
andl
inc
jecxz
xchg
out
fcoms
xchg
js
imul
addl
add
pushf
out
dec
add
jg
cmpsl
je
mov
pop
pop
shr
pop
pop
stos
ljmp
xor
jnp
clc
xchg
dec
adc
ljmp
std
lahf
pop
imul
arpl
xlat
test
sub
fwait
pop
mov
mov
push
enter
hlt
sbb
push
push
fs
cmpsl
jnp
push
insl
jnp
mov
movb
mov
das
sub
imul
int
mov
sub
daa
push
or
push
dec
enter
pop
pop
mov
je
das
sbb
xchg
shrd
stc
xlat
push
hlt
stos
jns
mov
pop
push
sbb
leave
jnp
fimull
test
sbb
fs
pop
dec
sub
outsl
sbb
xlat
frstor
pop
daa
pop
cmp
xor
lea
imul
xor
gs
ljmp
mov
outsb
enter
mov
bound
addr16
mov
les
pusha
sbb
fidivrs
sub
cs
jecxz
xor
sub
mov
cmpsb
mov
ficompl
jno
jg
addl
aaa
shll
push
insb
jl
dec
into
loope
cmpl
icebp
xchg
mov
xor
clc
imul
jmp
test
or
neg
lds
mov
ss
xchg
xor
pusha
shlb
inc
dec
push
jno
adc
mov
je
push
fstpl
and
mov
cmp
jg
fistpll
dec
add
leave
in
out
lcall
ljmp
xor
push
pop
cwtl
in
xchg
push
push
shll
clc
mov
das
imul
push
jae
lock
scas
xor
mov
push
in
mov
rcl
jle
outsl
jae
fistpll
cwtl
cmc
push
in
add
daa
clc
in
mov
clc
push
inc
push
push
sbb
cwtl
test
scas
cmc
je
out
leave
paddsw
pop
jb
adc
outsb
iret
lret
das
dec
dec
dec
js
add
lods
push
push
movl
call
lret
cltd
fs
push
jae
cmc
test
mov
roll
lock
jp
sbbl
enter
incb
push
pop
push
xlat
dec
xor
lret
mov
sahf
xorb
clts
and
leave
jbe
fldl
mov
nop
jb
xchg
fstps
sbb
add
pop
push
and
lahf
mov
mov
xchg
sub
jl
add
rcll
jae
push
mov
popa
aam
imul
loopne
imul
das
cld
popf
pusha
xor
pop
arpl
movsb
loop
sub
cmp
das
sbbb
push
mov
lret
mov
pushf
out
push
das
mov
fildl
cmp
mov
xchg
in
xchg
movsb
xor
xor
popa
outsl
dec
dec
arpl
sub
sbb
pop
jno
aas
insb
inc
lret
pop
adc
je
popa
roll
scas
loopne
sbb
xor
dec
cs
idivl
jo
iret
pop
icebp
rcl
mov
add
push
dec
fidivrl
in
pop
jne
lcall
cmp
inc
xor
in
lahf
ret
xchg
or
mov
mov
js
sub
mov
das
lods
jae
cmp
arpl
mov
sbb
and
push
mov
enter
add
jno
pop
out
mov
inc
andb
push
push
add
ljmp
sti
sub
push
imul
xlat
dec
loop
imul
cwtl
insb
popf
imul
aad
ja
mov
data16
inc
xor
aas
mov
pop
mov
cmp
and
fsts
out
xlat
leave
dec
xchg
xor
stos
add
mov
rorl
in
push
cmc
dec
ss
jb
adc
or
push
popf
mov
cmc
cmp
int3
pop
jg,pt
outsl
scas
sbb
inc
adc
add
int3
sbb
and
dec
xchg
or
call
popa
scas
icebp
and
cmpl
mov
jne
push
sub
xchg
inc
xor
dec
lock
hlt
loopne
stos
loop
mov
pop
cmp
and
in
mov
cltd
mov
fidivs
push
fs
add
mov
mul
leave
add
jne
sti
lea
cmp
movsb
cmp
xor
loop
in
ficoms
jp
bnd
dec
cli
cmc
push
mov
and
lds
rcrl
fisubrl
pop
dec
cmp
insl
daa
imul
into
inc
test
jne
lahf
jecxz
adc
fmuls
test
fs
je
and
and
js
in
jno
aam
testl
mov
xchg
inc
cmpsl
repnz
arpl
inc
dec
xchg
sbb
inc
repz
jl
icebp
stos
out
outsb
add
cmp
int
sahf
sar
mov
scas
jmp
adc
andb
lock
xchg
test
or
push
jmp
loopne
cmpsb
jae
test
xchg
jbe
add
shll
push
pop
in
sbb
mov
fnstcw
lret
xchg
mov
ds
mov
mov
dec
imul
add
dec
aad
pop
mov
or
arpl
int3
sbb
push
int3
insl
xorl
xor
ds
loope
push
or
jmp
inc
add
ret
fcmovbe
in
stos
adc
mov
jnp
add
js
pop
roll
and
pusha
repnz
mov
cmp
test
inc
stos
shl
dec
cmp
ret
push
testb
or
mov
jnp
mov
mov
push
xor
push
in
mov
subl
push
shrb
jb
xchg
test
repnz
cmp
mov
in
int
out
aad
mov
xor
pushf
push
jb
sub
outsb
lret
test
sbb
jge
imul
add
pushf
xchg
imul
cmp
lahf
adc
cmpsb
out
shrb
push
inc
in
imul
pop
cmp
inc
ret
mov
inc
inc
das
js
mov
das
xchg
lret
adc
std
sarl
adcl
jp
xchg
dec
clc
bound
into
inc
cmpsb
pop
and
adc
and
clc
mov
mov
sahf
push
sbbb
test
cmp
and
pop
stos
arpl
dec
sub
xor
stc
pop
into
out
shll
es
cmp
push
and
data16
stc
jecxz,pt
es
inc
pop
ret
call
mov
and
cmp
jbe
jns
add
jmp
or
sbb
push
clc
aas
shrl
mov
popa
jns
scas
add
xchg
and
inc
push
stc
mov
out
adc
out
jns
les
xchg
sub
mov
push
repnz
nop
mov
cmpsb
inc
movsl
xlat
add
adc
adc
mov
adc
out
call
mov
add
sbb
pop
add
out
push
cmp
xchg
jb
sbb
mov
xlat
mov
and
sbb
inc
dec
into
xor
sub
dec
dec
inc
push
int
idivb
sub
push
out
adc
jns
mov
clc
mov
mov
push
addr16
mov
imul
sti
imul
push
push
and
insl
add
cwtl
mov
cmp
in
andb
int3
or
stos
cli
inc
fimuls
mov
mov
mov
aad
repz
or
pop
push
lret
mov
cwtl
push
dec
out
and
mov
outsl
out
fcompl
push
lret
lds
movsl
xchg
aad
cmp
mov
and
mov
jge
xor
popf
push
addr16
aad
or
imul
inc
out
jmp
movsl
pop
inc
inc
inc
dec
and
fiadds
adc
xchg
into
ss
nop
int3
and
mov
arpl
sub
shr
xor
cmp
add
push
adc
push
fmull
or
add
fs
mov
test
xor
loope
cmpsl
mov
mov
icebp
xchg
loopne
pop
in
ja
push
insl
dec
cmp
cmp
and
or
hlt
jne
sarl
mov
adc
mov
and
pop
mov
jae
xchg
jns
xor
pop
xor
adcb
or
mulb
xor
push
fwait
lds
add
xchg
loop
sahf
cmpsl
add
xchg
loope
enter
adc
subl
dec
insl
dec
cmp
mov
push
cli
inc
cmc
into
pop
mov
xor
mov
addr16
leave
sbb
inc
xchg
mov
fs
push
adc
out
loop
repz
ljmp
xor
push
fstpl
inc
lds
jae
sarb
pop
scas
mov
sbb
int3
mov
fistl
lods
mov
and
mov
and
lcall
dec
adc
movsb
call
and
jmp
outsl
call
jae
cmpsb
push
jns
out
cmpsb
push
je
sub
sbb
int
out
mov
pop
xor
push
jae
xchg
cwtl
sub
jge
fcmovne
sbb
mov
popf
loop
sti
cmp
aam
scas
add
cmp
addb
mov
clc
fbstp
jp
mov
mov
lea
cwtl
add
loopne
push
fidivl
fnsave
pop
jmp
cmp
loope
rcrl
push
add
xor
es
addr16
shlb
dec
call
stc
int
es
mov
pop
and
inc
movsl
daa
sub
test
pop
push
adc
lret
push
and
cmp
dec
push
inc
pusha
add
test
stc
out
loope
xchg
jg
orb
scas
lret
pop
push
sub
cmp
popf
popa
cmpl
dec
ja
cs
iret
xchg
pushl
xor
loope
jb
mov
mov
dec
test
stc
lret
aam
dec
xchg
sbb
jbe
jno
sbbw
ja
lods
lret
dec
adc
push
ret
lret
das
cmpsb
dec
jae
mov
xor
push
lds
mov
inc
push
ljmp
add
cs
gs
pop
andl
mov
sbb
mov
or
inc
mov
mov
add
enter
mov
cmp
mov
ret
and
xchg
mov
inc
ds
std
mov
jg
push
xor
inc
mov
jle
xchg
mov
push
shr
scas
cmpsl
fidivs
mov
mov
add
push
adc
jnp
cmp
js
cmp
pop
pushl
push
fiadds
mov
push
xchg
shrl
inc
or
adc
adc
mov
push
scas
popf
xor
adc
pop
mov
rorl
xor
sbb
out
loop
cli
xchg
mov
xor
xchg
and
lahf
push
ds
bound
mov
jl
mov
movsl
dec
int3
mov
xchg
fsubr
cltd
data16
sub
testl
imul
and
jmp
add
cmp
dec
cmc
clc
jno
rcrl
pop
sbb
sti
jne
mov
and
push
scas
mov
sti
pop
jmp
pushf
fdivrl
jns
mov
push
push
leave
dec
test
and
clc
insl
repz
stc
cltd
jb
push
add
sbb
leave
jg
cmp
pop
iret
setp
or
fwait
sbb
mov
cltd
xchg
xchg
mov
aam
cwtl
cmp
out
mov
jecxz
je
leave
gs
shr
push
enter
pop
sarl
push
add
jp
cli
adc
push
jle
fwait
xor
jg
ret
jmp
rcrb
pop
sub
stos
repz
ret
aam
scas
add
xchg
stos
inc
imul
add
jns
loopne
fiadds
hlt
in
loop
data16
test
sub
dec
mov
or
shll
mov
inc
jbe
xor
mov
mov
sub
lods
loopne
jno
cmp
push
jb
inc
mov
dec
cwtl
cmp
ss
pop
loope
lock
int3
fimuls
jecxz
inc
mov
bound
icebp
dec
stos
pushf
ss
xor
or
xor
cs
cltd
mulb
add
aam
sub
aaa
or
jl
shll
sub
mov
inc
sbb
mov
push
dec
add
roll
icebp
ja
mov
shll
jge
in
xor
ret
inc
insl
and
mov
push
jecxz
dec
inc
lea
sbb
inc
cld
fbld
bound
push
movsb
push
test
jae,pn
into
sub
cmp
mov
cltd
mov
pop
lods
pop
cwtl
test
adc
mov
jb
cmp
mov
adc
insb
jmp
mov
and
mov
cmp
gs
sbb
pop
ss
aaa
je
adc
sbb
xchg
dec
aam
cmp
mov
cmpsl
mov
jecxz
adc
mov
out
pop
jecxz
xchg
cmpsb
xchg
test
daa
xor
and
mov
test
mov
jno
add
outsl
jmp
imul
push
inc
xchg
gs
gs
movsb
adc
daa
push
lods
es
pop
loop
pop
ret
xchg
sub
or
cltd
cli
mov
scas
cmp
inc
popf
mov
repnz
or
inc
adc
and
pop
cmp
subl
mov
js
inc
movsl
mov
nop
daa
mov
loope
and
mov
loopne
and
and
out
mov
out
lret
sahf
fdivl
and
inc
cmc
jl
in
dec
lea
inc
sub
movsl
add
fdivrl
movsb
cld
cmp
lods
xor
out
enter
arpl
and
pop
ret
cwtl
mov
inc
dec
mov
movsl
sub
test
fists
lahf
shll
mov
inc
jp
jmp
lret
fsubr
xor
fadds
adc
fadd
scas
mov
adc
mov
aaa
adc
cmp
sub
test
jl
cmp
stos
xor
ret
jbe
enter
xchg
inc
clc
pop
imul
mov
xchg
add
inc
lods
nop
pop
mov
cmpl
std
movl
rorb
mov
xchg
icebp
sbb
fbld
mov
out
mov
icebp
push
push
rorb
mov
xchg
xor
mov
mov
mov
stos
jecxz
je
jecxz
aam
dec
stos
adc
arpl
lret
clc
pop
shrb
ds
xchg
fcompl
pop
cltd
rep
add
fisttpl
fmul
cmp
pop
sub
outsl
outsb
xor
bnd
dec
repnz
sub
cltd
jmp
movsb
xor
scas
adcl
inc
push
and
push
jbe
cmp
fwait
jge
dec
mov
mov
xchg
lret
adc
addb
push
jp
and
in
aaa
pop
adc
xor
inc
pop
nop
dec
div
dec
jnp
inc
push
xchg
inc
or
pushf
push
call
mov
or
iret
loope
jns
xchg
push
js
xor
orb
rcr
or
loopne
xchg
insb
push
aam
movl
test
mov
xor
or
add
mov
pop
in
stos
fdiv
mov
mov
dec
push
subb
fs
scas
mov
sar
cmc
pop
dec
data16
cmpsl
adcl
out
mov
dec
pop
ss
ret
movsl
and
lahf
cmp
xchg
mov
mov
cmp
inc
fldl
rcll
lods
inc
mov
dec
test
ret
push
sub
add
pop
jne
stos
repz
pop
in
int3
dec
ficoms
cmp
sub
dec
incl
ret
mov
outsb
outsl
push
mov
dec
dec
and
push
cmc
jns
sub
mov
cmpl
jmp
imul
adc
or
sub
xor
xchg
mov
das
int3
out
scas
jb
jno
aaa
fsubrs
mov
sub
or
and
cwtl
inc
dec
mov
push
push
rcrl
repnz
lods
pop
js
or
cmpsl
adc
sahf
call
imul
and
push
mov
pop
or
or
sbb
push
pop
dec
mov
inc
mov
outsb
imul
lock
mov
dec
shl
push
adc
in
xor
pop
sarl
fcmovu
inc
testb
std
jbe
jle
lret
push
imul
imul
jecxz
in
dec
sub
adc
in
ljmp
mov
cltd
pop
setno
fsts
mov
loope
mov
pusha
xlat
shll
ret
fcomps
fdivr
pop
pop
in
adc
pop
aad
mov
rcll
mov
mov
or
and
adc
pop
mov
adc
sbbb
sbb
mov
icebp
roll
lahf
cmp
sub
sub
push
add
movsb
sbb
scas
cli
loop
out
lret
cmpb
mov
leave
xor
xchg
daa
movsl
jne
push
test
cmp
fnclex
js
dec
sbb
xchg
aaa
mov
js
ja
sbb
jecxz
push
and
nop
inc
jle
adc
sti
stos
aaa
inc
xorb
in
test
les
mov
mov
dec
push
test
dec
inc
int3
cmp
xlat
aas
test
dec
dec
outsb
stos
rorl
pop
push
jmp
mov
sub
imul
xor
into
adc
xlat
std
sti
pop
je
push
rclb
push
mov
push
dec
mov
inc
xchg
loopne
fwait
fs
je
mov
jg
sahf
imul
call
push
pop
mov
mov
dec
dec
stos
and
icebp
or
lea
aas
stos
and
adc
icebp
inc
in
mov
fnsave
fisubs
add
add
lret
mov
subb
pop
dec
in
pop
lods
pop
or
call
push
popa
pushf
sub
ret
loop
adc
dec
gs
jp
loopne
movq
out
sbb
pop
hlt
fiadds
fcomip
movsl
enter
jae
xchg
je
inc
sub
aad
sbb
mov
mov
sub
aad
pop
xor
shlb
fwait
push
mov
arpl
call
sub
pusha
jmp
dec
xchg
mov
jae
jnp
cmp
aam
adc
pop
es
cwtl
mov
push
push
mov
add
addr16
pop
pop
and
stos
mov
rclb
jmp
push
ja
pusha
xor
imul
std
adc
push
adcl
test
daa
jge
loop
xchg
mov
mov
adc
xchg
lock
pop
mov
cmc
and
adc
lds
xlat
adc
mov
xchg
sarl
sbb
enter
jbe
outsl
xlat
pushf
cmpsb
sbb
dec
xchg
pop
cltd
push
lea
aad
loope
ljmp
mov
mov
cs
dec
pop
movsb
jle
loopne
dec
imul
mov
push
mov
pop
sbb
cmp
or
repnz
jecxz
inc
inc
mov
mov
shll
jb
push
jge
or
inc
popa
aas
mov
ficoms
mov
sbb
shlb
sub
inc
mov
pop
inc
inc
add
cmpsb
push
ret
enter
cmp
and
mov
loopne
xchg
loop
inc
xchg
or
call
pop
fcoml
ss
mov
loope
movsb
and
std
fldenv
xor
les
add
lcall
dec
lss
dec
leave
dec
push
mov
mov
out
cmp
mov
dec
cli
addl
mov
into
mov
add
mov
sub
push
jl,pn
cmp
insl
fnstcw
xchg
adc
xor
adc
or
movsb
sub
dec
mov
bound
in
dec
adc
sub
push
iret
fsubrs
ficoml
mov
xor
insb
shlb
adcl
add
sub
add
mov
into
leave
mov
test
sbb
cwtl
and
clc
in
fiadds
add
xchg
lods
popf
mov
pop
push
int
and
push
cmp
out
call
adc
jne
xchg
ja
call
sub
call
test
and
scas
loopne
jle
fistl
es
and
pop
mov
dec
in
movsl
daa
mov
push
clc
hlt
cmp
and
lock
jge
mov
add
mov
movsb
mov
lods
sub
and
cli
xor
jecxz
pop
mov
es
push
in
iret
mov
test
repnz
jo,pt
stc
movsb
insl
out
repz
fcomps
lahf
test
inc
push
xor
loopne
test
add
sahf
xor
shll
out
stos
pusha
aam
mov
xorl
ret
scas
add
test
faddl
push
jbe
jmp
push
test
or
mov
mov
and
es
sub
dec
into
inc
xchg
fwait
test
jmp
fwait
in
ror
cmp
jge
nop
sub
lea
out
mov
add
xor
jno
es
sbb
fdivrs
mov
test
aam
cmc
std
pop
xlat
jge
sbb
sub
ret
sahf
push
es
sbb
adc
rorb
jecxz
and
test
mov
hlt
mov
mov
xchg
jg
js
nop
jb
repz
push
movsl
movsl
fsubr
cmp
add
jns
sarl
into
test
inc
dec
fiadds
cmp
cmp
jle
cld
sbb
and
lcall
xchg
cmc
dec
test
adc
insb
fs
mov
aas
sbb
fnstsw
cs
es
in
out
cmp
enter
xchg
lods
es
aad
leave
test
mov
inc
xlat
pusha
int
sbb
ret
test
aad
jo
rcl
jmp
push
mov
fsub
insl
std
or
sbb
mull
inc
lahf
lret
sbb
mov
sbb
lock
js
jns
inc
clc
in
ds
imul
fsubr
sbb
shrl
pop
in
mov
orl
dec
cmp
mov
sarb
cmp
and
fsubr
mov
jmp
dec
adcb
fidivs
cmp
jae
fs
aad
out
pusha
pop
loop
push
push
fcmovne
or
mov
jns
aaa
add
xchg
test
stos
dec
mov
jne
scas
jnp
out
xchg
call
or
jle
stos
iret
fimull
das
add
add
mov
cmp
imul
push
xor
jbe
insb
repz
sub
insl
push
jmp
jg
popa
outsl
out
call
insl
sbb
inc
xchg
xor
mov
test
xchg
bound
lea
inc
fisubl
push
sub
inc
mov
dec
dec
dec
mov
push
hlt
push
mov
inc
sahf
loope
hlt
xchg
mov
mov
loopne
lods
push
lahf
mov
dec
int3
dec
pushf
inc
or
aaa
lods
fcoms
jb
fidivrl
adc
addl
push
gs
mov
movsb
inc
dec
es
fcompl
rclb
std
lea
xchg
insl
into
pop
sbb
sarb
mov
fildll
fimull
inc
cltd
lods
popa
les
loop
pusha
in
out
loope
repnz
and
jl
push
sti
popf
out
int
pusha
xor
xchg
and
mov
mov
mov
push
iret
jp
xchg
push
dec
push
push
cld
jmp
lods
int
or
push
test
pop
sbb
sub
pop
sbb
lea
push
cmp
add
add
fucomp
adc
rorb
push
or
cmp
cmc
jae
inc
mov
ret
fnstsw
mov
imul
cmp
scas
pop
and
xchg
loop
pop
pop
je
xchg
dec
dec
mov
mov
pop
sbb
rcl
cmp
xlat
mov
push
and
sub
jae
nop
les
xor
inc
jge
test
and
divb
push
lock
call
or
add
arpl
cmp
add
es
rorl
lock
cmc
test
inc
je
and
mov
sub
leave
add
pop
cmpb
das
int3
loope
mov
inc
and
jno
sbb
pop
test
and
mov
cmp
lret
xor
data16
xchg
xchg
push
dec
imul
sbb
pop
cmc
mov
popa
jge
xchg
jne
xorb
mov
xchg
mov
pop
jnp
cltd
clc
int
sub
xchg
cld
push
shlb
jg
out
sbb
out
ljmp
fmul
jo
or
cmpsb
stos
cld
fs
dec
mov
mov
shl
mov
ja
out
adc
call
sbb
jp
jns
adc
sub
cmc
movsl
adc
adc
arpl
faddl
inc
fwait
mov
mov
call
sahf
inc
mov
adc
int3
lret
outsb
jb
xchg
outsl
sub
in
fucom
pop
cmp
add
push
mov
adc
int3
jae
push
enter
sbb
add
xor
add
icebp
xchg
jecxz
loope
dec
andl
inc
ret
rcrb
subl
leave
leave
lock
mov
mov
add
sub
sbb
inc
outsb
jl
icebp
add
inc
arpl
sub
adc
fisubrs
sbb
mov
repnz
imul
mov
repz
push
and
xchg
xchg
pushf
stc
lcall
add
outsl
jecxz
mov
inc
push
xor
pusha
pushf
cmp
add
movsl
mov
and
cwtl
outsb
push
and
jle
cmp
mov
int3
push
jl
mov
dec
add
or
mov
sub
fisttpl
sbb
lcall
lea
jmp
xchg
xor
mov
stos
adc
mov
and
sub
dec
push
or
das
mov
fxch
jns
sub
xchg
into
lock
out
mov
icebp
sub
test
push
insb
pop
pop
out
outsb
jl
int3
aaa
push
pop
ss
cmp
xchg
divl
xchg
stos
xchg
dec
cli
or
cmp
and
insl
ret
test
in
lea
flds
test
fiadds
leave
xchg
imulb
stc
test
outsl
lods
mov
mov
mov
xchg
les
lods
lret
adc
jb
lods
cmp
shrb
sub
imul
jnp
mov
mov
adc
jns
std
xchg
shll
test
rep
dec
mov
aaa
adc
push
aaa
cmp
movsb
fldt
push
jle
or
xchg
cmp
leave
mov
outsb
dec
mov
scas
dec
pop
loop
xor
mov
or
in
test
sbb
mov
pop
stc
in
or
xor
xorb
xchg
repz
out
pop
add
testb
push
aad
or
mov
gs
mov
les
dec
cmp
cmp
adc
push
pop
ja
es
bound
or
icebp
mov
inc
cld
fwait
ret
push
bound
mov
jae
xchg
sub
xchg
rcrb
xchg
sahf
inc
xor
adc
ljmp
sbb
mov
mov
jns
sub
dec
inc
cltd
mov
icebp
popa
les
push
jmp
adc
stos
or
cli
hlt
lods
ds
in
and
add
out
stc
repnz
subb
mov
lods
std
aas
adc
pop
push
mov
aaa
dec
not
mov
mov
cld
xlat
push
add
add
into
mov
and
adc
cmc
cli
les
or
das
das
adc
popf
cmp
jae
and
pop
mov
shrb
insl
xchg
or
cmp
lret
mov
cli
cli
adc
outsl
xchg
adcl
xchg
sbb
mov
ss
in
stc
rolb
and
xlat
dec
push
int3
jae
mul
popf
cltd
jb
inc
add
fildl
xchg
out
or
addr16
dec
inc
or
cmp
inc
xchg
push
pop
les
cli
inc
and
mov
icebp
or
dec
outsb
pop
ds
and
pop
insl
inc
ds
pop
jae
add
out
xlat
dec
xchg
fcomps
mov
cmp
lahf
and
add
sbb
or
jb
mov
and
xchg
mov
adc
sbb
pop
adc
out
cld
xor
mov
sub
pop
scas
mov
int
cltd
into
out
iret
push
das
adc
test
cwtl
mov
mov
fs
mov
push
push
inc
adc
cmpsl
in
loope
push
adc
test
dec
es
adc
xchg
pusha
out
fwait
or
or
jmp
mov
je
xchg
jno
and
leave
jl
outsb
mov
or
xchg
push
shll
xor
or
jp
and
xchg
scas
fisubs
stos
dec
sub
and
dec
outsb
sbb
xchg
xor
adc
xor
loope
in
pop
sub
out
clc
out
xchg
add
pop
or
gs
pop
fwait
jae
rcrb
push
xchg
jae
ljmp
in
int3
and
mov
push
ja
dec
ljmp
scas
inc
push
jns
mov
pop
mov
add
xor
xchg
inc
cltd
inc
xor
mov
jnp
sbb
pop
xlat
loop
cmp
xor
inc
inc
fstpl
fcoms
nop
cli
jb
and
ror
pusha
icebp
fisubrl
cs
xchg
jo
daa
shlb
sub
shl
dec
push
xchg
rorb
pushf
and
and
cmp
adc
in
xchg
clc
nop
mov
ret
jl
cmpsl
push
movb
jmp
and
add
push
fmull
cmp
pusha
or
xchg
pushf
jge
jb
mov
in
inc
test
xor
lahf
scas
testb
fwait
lahf
xor
push
std
sbbl
mov
pop
jle
and
inc
int3
out
roll
inc
pusha
test
mov
push
cmpsb
push
push
adc
bound
insb
enter
jne
jp
mov
scas
and
mov
xchg
cmpsb
inc
mov
shl
loope
and
add
fs
test
outsb
cmp
add
std
iret
insl
cmc
aam
ficoms
and
std
mov
fidivl
ficoml
cmpsl
inc
sub
insl
adc
adc
jmp
icebp
out
cmpsb
sub
push
pop
inc
jg
mov
cli
mov
outsl
push
mov
xorl
jmp
rclb
sbb
mov
mov
adc
pop
cli
sbb
fstpl
add
lock
jle
int3
aam
ljmp
lods
and
imul
mov
pop
and
xor
and
dec
std
addr16
mov
mov
adc
push
push
sbb
jae
jg
mov
cmc
xchg
imul
mov
inc
inc
inc
and
xchg
adc
lret
pop
sarl
mov
push
scas
fs
mov
jge
push
and
frstor
loop
out
push
sub
roll
movb
mov
inc
lahf
pop
in
mov
adc
inc
movl
jno
test
dec
adc
into
pop
fs
test
nop
pop
pop
add
dec
push
sub
xor
mov
add
adc
stos
pop
inc
pop
test
mov
mov
mov
mov
stos
jge
adc
sbb
mov
xor
bnd
ljmp
mov
push
notl
subb
pop
les
mov
insl
inc
xchg
xchg
lods
mov
lods
inc
xchg
enter
lret
push
hlt
jae
and
ss
daa
int3
xchg
rclb
pusha
lock
pop
pusha
dec
lods
loop
mov
push
xchg
fsts
sbb
inc
xchg
adc
stos
movsb
adc
mov
push
adc
and
pop
rolb
int
movlps
dec
jo
lcall
adc
repz
mov
inc
fists
dec
lea
stos
cwtl
cmp
mov
test
jno
pop
lods
cli
pop
inc
test
dec
lods
mov
cwtl
addr16
add
jno
test
mov
jb
div
and
jo
inc
push
or
mov
adc
xor
loopne,pt
add
out
aad
mov
mov
test
mov
add
push
stc
out
subb
mov
in
call
out
div
cmc
adc
jbe
push
jo
and
dec
test
push
jle
les
adc
pop
jge
and
jbe
pop
xor
push
sub
mov
icebp
outsl
lods
inc
or
pop
insb
push
sbbb
stos
loop
inc
je
jmp
sub
jmp
cmp
jecxz
inc
lds
xchg
pop
arpl
mov
pop
or
lea
dec
out
in
cmp
pop
aas
mov
mov
adcl
and
mov
subl
ja
fstpt
jns
int3
mov
daa
ret
push
and
inc
push
jg
push
in
inc
mov
mov
mov
in
sub
ljmp
xchg
pop
cltd
imul
inc
stos
push
daa
cli
shl
cmpsb
outsl
sub
jge
dec
mov
popf
sub
mov
adc
loop
push
adc
test
fwait
cwtl
js
pop
or
adc
jg
sbb
insl
lods
popa
ljmp
dec
addr16
xor
imul
jae
in
mov
fbld
lods
xorb
pop
insl
loop
dec
pop
xor
sub
loopne
and
sbb
pop
lods
push
mov
lods
and
fdivrl
repz
lods
xlat
fdivl
ljmp
sti
out
cmc
aad
jmp
pusha
jns
sahf
call
lcall
sti
xor
dec
or
and
jns
and
fidivrl
dec
rclb
fbld
xchg
cmp
and
clc
jge
ds
adcb
sahf
push
popa
mov
push
mov
cmpsb
pushf
lods
dec
movsb
mov
sti
ss
add
sbbb
xor
add
cli
or
ret
pop
xchg
pop
mov
sbb
mov
xor
pop
in
jmp
cwtl
test
inc
or
adc
pop
out
fadd
stos
lahf
mov
push
push
mov
dec
fisttpll
lock
stos
stos
jbe
sub
aam
fistl
mov
jge
andb
mov
test
xor
mov
inc
adc
movsl
adc
adc
and
fbstp
sahf
jae
leave
aad
sahf
ja
dec
stos
add
xchg
cltd
mov
data16
mov
push
out
mov
push
js
repnz
rolb
push
or
cs
aaa
fiadds
mul
push
jae
fcmovb
push
and
cmpsb
cmc
xor
inc
cpuid
mov
mov
push
fldt
bound
ja
xchg
jp
or
mov
iret
lret
push
in
scas
cli
add
fmull
push
ret
sti
and
dec
jb
hlt
adc
fistps
pusha
jmp
sahf
mov
xchg
neg
inc
stos
rcrl
sbb
mov
loop
add
push
pop
repz
inc
cmp
mov
adc
out
scas
add
nop
popa
div
mov
in
repnz
divl
dec
in
push
cmpsb
pusha
mov
lods
ss
push
xchg
jg
sub
pusha
shll
mov
sub
pop
mov
imul
mov
cmp
rorb
sub
jmp
pop
imul
mov
iret
mov
rorb
push
fs
popf
nop
or
outsl
xorb
jecxz
mov
neg
mov
stc
rol
outsb
sub
add
jb
push
push
push
lea
in
in
jge
jo
movsb
inc
inc
in
into
sti
dec
adc
cld
aad
and
sub
ffree
jb
inc
es
cmp
insb
pop
mov
pop
mov
xchg
jp
adc
test
mov
pop
add
iret
leave
shrb
xlat
dec
js
push
cmp
and
sub
jne
in
sub
mov
ja
cmp
xchg
push
jbe
pop
out
inc
xchg
pop
xlat
adc
hlt
xchg
adc
das
dec
dec
gs
addr16
jns
icebp
scas
mov
inc
leave
shll
fcompl
xor
mov
mov
adc
sbb
jae
mov
add
sub
mov
fildl
add
lret
sbb
int
push
xchg
dec
shr
cmp
push
inc
popf
jno
pop
movsw
inc
out
mov
pushf
mov
sub
repnz
mov
dec
or
outsl
jl
sub
xor
push
and
ss
bound
les
movsl
jo
mulb
fisttpl
sub
int3
sbb
push
sbb
push
cmc
push
pop
mov
cli
mov
repnz
popa
fwait
inc
shrb
cmp
pushf
aas
jmp
sbb
lods
push
cld
ja
adc
xchg
xor
pushf
mov
xor
or
test
pop
cmpsb
cmpsl
inc
out
and
data16
leave
push
jbe
jl
data16
sub
fwait
pop
outsb
outsb
cmpsl
fdiv
iret
sbb
sub
movsb
mov
test
add
push
subb
and
jbe
es
mov
cwtl
mov
xchg
mov
push
cmpsb
jmp
ja
and
jns
and
xchg
pop
mov
mov
imul
roll
inc
mov
loop
and
mov
push
aad
mov
and
loope
add
cli
les
js
mov
ficomps
or
lock
and
push
mov
dec
dec
imul
jge
sub
mov
inc
cmp
jnp
sbb
stos
xchg
xchg
jbe
jl
add
xchg
dec
jg
sbb
mov
gs
xchg
fdivp
or
hlt
xor
sbb
dec
cmp
popf
mov
mov
add
adc
cmp
popf
jns
out
jne
repz
loop
rolb
outsl
mov
jnp
jb
mov
pop
xchg
mov
mov
fcmovbe
xchg
scas
push
xchg
cmp
xor
enter
shl
lds
mov
lcall
lcall
dec
cltd
xchg
sub
mov
lret
test
sbb
stos
mov
inc
fiadds
fbld
mov
jbe
or
xchg
adc
shll
sti
inc
pop
push
add
push
fsubs
in
out
pop
inc
ja
loope
sbb
mov
or
mov
sbb
adc
pop
pusha
sbb
fwait
mov
in
jmp
cmc
addr16
push
push
inc
or
push
orl
int
mov
mov
jmp
sbbl
sub
mov
les
xchg
out
cs
orb
jge
lods
scas
mov
es
scas
iret
cmp
shll
inc
mov
sub
ss
or
ja
mov
cmp
dec
mov
movsl
frstor
sub
mov
sub
push
lcall
movsl
cmp
jl
gs
ja
sbbb
sahf
cmpsl
imul
int3
pop
xchg
cmp
call
add
or
sbb
push
stc
mov
and
out
pop
jns
ficompl
ljmp
fmulp
pop
cwtl
mov
decl
mov
das
fidivs
iret
push
jecxz
idivl
pop
mov
dec
adc
dec
dec
xchg
mov
jecxz
sbb
jle
negl
lcall
jnp
out
test
loop
hlt
loope
adc
xchg
pop
mul
inc
pop
div
mov
or
and
add
dec
and
das
mov
mov
cmpsl
inc
out
dec
js
jle
int3
xor
mov
out
pop
cmpl
mov
arpl
stos
inc
inc
pop
sbb
loop
cmpl
loop
mov
stc
and
mov
add
add
cld
adc
cmp
scas
loope
fs
mov
xlat
scas
out
xlat
jo
stos
inc
in
adc
push
negl
push
push
nop
push
cli
dec
mov
aaa
mov
in
cmp
enter
test
adc
iret
sahf
cmp
inc
cld
out
ja
inc
xor
data16
pop
xchg
mov
movsl
or
xor
or
shlb
mov
dec
lret
push
mov
adc
add
push
mov
pop
push
mov
jge
inc
or
outsl
mov
jo
jecxz
or
sbb
sbb
and
shr
or
jbe
mov
icebp
inc
mov
jmp
clc
pop
sbb
inc
fimull
in
jl
and
pop
flds
pusha
mov
xchg
sub
aas
and
ret
mov
pop
jne
jmp
pop
xchg
leave
cmpsb
std
mov
fiadds
lock
shll
adc
repz
inc
inc
pop
or
out
sahf
pop
in
fwait
or
sub
push
int3
cmp
fldcw
adc
bound
push
xchg
inc
cli
mov
push
mov
jl
ja
incl
push
mov
and
inc
hlt
mov
int
lea
fwait
add
mov
into
jle
cmpl
lcall
idivl
jno
adc
dec
jbe
mov
xchg
adc
fstpt
xchg
sub
adc
shlb
testb
dec
and
cmc
mov
not
push
and
xor
cmp
sub
fcmovb
dec
jno
imul
push
mull
mov
xor
push
dec
sub
jge
mov
push
mov
fldenv
jo
push
subb
pop
fdivr
ret
vpshufd
leave
sbb
jmp
outsb
push
mov
insl
pusha
inc
aam
test
add
pop
shlb
ficompl
inc
jmp
mov
jle
add
mov
cwtl
insb
cmp
sbb
cmp
je
repz
ds
xorps
pop
add
push
lock
loope
cwtl
sub
call
out
mov
inc
loopne
push
inc
push
or
inc
xorl
sbb
mov
pop
in
pop
addb
ret
das
ja
jmp
push
ret
xor
lock
pop
in
iret
jnp
cmp
sub
fsubl
ffree
insl
or
xchg
pop
xchg
jo
adc
inc
and
and
dec
test
cwtl
pop
jne
sub
xlat
sbb
jp
lahf
movsl
xor
ret
in
xor
scas
in
inc
repnz
sub
xor
lods
fstps
inc
add
loope
fwait
les
or
jae
lea
xor
adc
xchg
inc
adc
jne
roll
xor
popf
inc
pop
aaa
sarb
sbbl
mov
movsl
loopne
and
fdivl
jno
jge
hlt
and
push
test
inc
es
xlat
add
pop
ret
stc
sti
xor
mov
outsl
insl
lcall
faddl
scas
rdtsc
aaa
sub
adc
lods
or
imul
add
adc
test
jmp
inc
dec
pushw
subl
lock
icebp
arpl
dec
cmp
sub
jnp
push
xchg
stc
push
loope
pop
aaa
ret
dec
push
push
out
dec
in
pop
stos
es
jne
repnz
adc
mov
lds
sub
ljmp
in
jno
cmp
outsl
stos
and
and
xchg
push
push
aad
xor
adc
aaa
in
loopne
lods
gs
push
in
inc
scas
data16
neg
xchg
repz
es
insl
adc
mov
xchg
add
mov
pop
pusha
push
push
sbb
fldt
push
test
cmp
scas
lcall
mov
ret
sbb
std
lcall
test
ficompl
outsl
pop
or
adc
push
iret
push
add
sub
es
or
sbb
inc
inc
in
dec
cltd
and
mov
sub
push
pusha
and
sbb
out
add
pusha
mov
sbb
dec
aaa
pop
pop
or
lcall
test
mov
xlat
pop
and
repnz
stos
aas
xchg
adc
bswap
sbb
sbb
stos
xlat
stos
xchg
sar
mov
sbb
je
out
inc
mov
mov
jbe
dec
loop
mov
inc
lcall
add
int
stos
movsb
push
jmp
cmp
test
stos
cmp
data16
aam
mov
rclb
adc
jne
leave
sbb
adc
jmp
neg
jbe
push
mov
clc
ja
xor
ljmp
adc
or
filds
je
out
jno
leave
mov
out
pop
sbb
iret
movsb
clc
push
std
sbb
adc
aad
je
pop
xchg
push
mov
ja
repnz
mov
dec
clc
xor
push
push
xor
out
dec
cmp
xor
scas
mull
stc
push
outsl
sti
stc
or
je
ret
xchg
or
aam
mov
scas
sbb
addr16
sub
jg
mov
fpatan
jle
pop
icebp
pop
cs
pusha
or
scas
stos
xlat
repz
mov
scas
sbb
cs
jge
and
maxps
mov
or
mov
std
adc
pop
mov
sti
jae
stos
lods
sub
pusha
pop
push
cltd
fsubrp
push
outsb
sbb
enter
ja
jbe
sbb
xlat
add
test
sbb
nop
push
cld
mov
loop
cmp
dec
mov
xchg
inc
lcall
cmpl
sub
mov
sub
rolb
inc
dec
or
jmp
jnp
dec
sbb
sbb
sub
xchg
and
shlb
mov
adc
out
fcmovnb
aam
dec
xor
adc
in
lds
mov
dec
adc
and
in
fisubl
jl
pop
iret
je
cltd
je
push
hlt
subb
stos
jne
adc
popf
ss
xchg
repz
xlat
and
add
repz
mov
outsb
fildll
push
adc
outsl
lods
push
jg
hlt
add
sbb
test
adc
cmpsb
mov
cmc
jl,pt
sbb
ljmp
stos
fdivrs
xchg
xchg
sbb
xchg
xchg
mov
dec
and
push
int
test
movsl
cmp
xchg
or
sbb
cmp
mov
test
add
push
jo
jb
xor
outsl
adc
jbe
in
rclb
jle
push
scas
jae
adc
mov
addr16
mov
movsb
sub
aas
test
xchg
nop
lcall
rol
jne
outsb
pop
cmp
decl
movsb
mov
shrl
jb
cmpsb
sub
out
mov
insb
lock
imul
lcall
jnp
push
dec
or
ret
aam
arpl
sbb
jl
add
in
lahf
leave
movsl
mov
or
mov
sub
ljmp
in
ficoms
and
shll
xchg
fisubrl
sahf
cmpl
pop
xor
test
inc
inc
mov
nop
in
das
orl
mov
mov
or
pop
icebp
sbb
pop
sbb
lcall
dec
push
push
and
push
mov
inc
push
push
mov
enter
inc
lods
adc
jecxz
jb
out
push
inc
adc
adc
jle
xor
cld
addr16
je
dec
sbb
or
lret
and
xlat
pop
js
jnp
cmpsb
lret
or
xchg
test
aas
iret
hlt
or
imul
add
push
and
std
pop
xchg
jl
cmp
ret
sub
loopne
jns
add
in
sub
mov
xchg
jae
jmp
push
int
popf
prefetch
or
xchg
or
out
cmp
xchg
lds
loop
cs
xchg
ror
push
dec
fdivl
ret
rcrl
lds
mov
dec
dec
mov
lods
aad
fcomip
inc
pop
cld
mov
mov
jle
jg
gs
push
js
ret
cwtl
stc
aad
pop
in
or
xor
push
scas
pop
or
fildl
mov
or
rcll
or
fs
xchg
pusha
add
addb
xor
mov
ret
aad
sbb
icebp
sbb
ss
jle
lahf
incb
scas
mov
jmp
pop
mov
mov
fistps
fiadds
lret
push
iret
sub
xchg
hlt
push
pusha
lods
sub
pop
popa
call
inc
push
inc
test
jmp
xor
je
repnz
filds
jmp
mov
pop
sub
cmp
cld
loope
push
outsb
mov
jae
push
dec
std
jno
and
inc
or
arpl
sub
jns
das
fisttpl
out
or
add
mov
sbb
or
inc
jmp
scas
xchg
aas
dec
loope
in
mov
popf
aam
xchg
and
xor
xchg
shrl
stos
das
incl
mov
inc
adc
cmp
mov
adc
xchg
dec
pop
fiaddl
push
stc
fnstenv
popf
pop
sub
icebp
push
in
nop
cltd
mov
jb
popf
call
jmp
shll
xorl
mov
pop
cmpsl
inc
repz
mov
out
xchg
cmpsb
dec
mov
leave
ret
mov
xlat
out
lods
ljmp
push
fnstenv
idivb
inc
dec
nop
mov
dec
ds
push
sub
idivb
or
sarb
fdivrs
push
mov
mov
ja
mov
hlt
insb
xchg
loopne
cwtl
movsb
jbe
lret
jecxz
pop
je
pop
outsb
jns
xor
jle
fisttpll
fdivl
js
mov
int3
mov
out
push
sbbb
xor
sub
pushl
rcll
out
sbb
decb
pop
and
call
xorb
rcl
aaa
adc
in
sbb
fistpl
das
mov
inc
adc
push
ss
lret
fsubrp
mov
xor
enter
sti
ret
call
cmp
rorb
out
inc
push
repz
stos
ja
or
jmp
or
mov
ljmp
or
pop
fmuls
sarb
ret
mov
ss
xor
pop
into
adc
mov
inc
in
lahf
jno
xchg
cwtl
repnz
fnstenv
inc
out
jne
jb
mov
movsl
int
ja
and
outsl
cmp
xchg
aaa
dec
fcompl
mov
inc
cltd
lahf
aaa
aaa
sub
jg
sti
stos
movsl
or
fwait
nop
adc
lock
loop
shrl
int
jmp
push
incl
sbb
js
je
xor
cli
pop
test
jmp
stos
icebp
test
mov
ss
out
lahf
xlat
adc
xchg
jl
mov
es
pop
push
push
inc
insb
dec
or
test
pop
outsl
xchg
fxch
sub
mov
lahf
rcl
out
add
mov
repnz
or
sbb
sti
jne
mov
loopne
aaa
add
scas
fucom
dec
flds
stos
fsubr
pop
sub
and
adc
inc
add
std
fidivl
sbb
setnp
je
mov
clc
mov
popf
stos
sahf
sbb
rcrl
pop
in
mov
cmpsb
jo
scas
jmp
pop
sub
push
sbb
ljmp
ss
inc
add
ret
mov
cld
xchg
add
dec
sub
mov
jp
cwtl
loop
inc
jl
dec
xor
xchg
push
cltd
scas
lret
adc
adc
pop
stos
fiadds
cmc
popf
add
lock
sub
aam
add
es
in
popf
inc
mov
cmp
or
jo
xlat
mov
jb
xchg
ret
psrlw
mov
dec
pop
push
xchg
xchg
sahf
ret
movsb
cld
sub
pop
popf
add
fsubs
fsts
mov
ja
jl
mov
pop
fs
dec
sbbb
push
sar
ffree
cmpsb
je
cmp
popa
ds
pop
or
cmc
push
mov
iret
repnz
adc
aam
push
cmp
and
cmpsb
data16
sbb
fucomi
fwait
pop
pop
addl
insb
mov
repz
mov
mov
and
fldenv
pop
cltd
lret
pusha
imul
arpl
pushf
mov
hlt
ret
push
popa
push
lock
cwtl
jl
dec
mov
push
in
mov
mov
fcoms
xor
nop
mov
adc
and
ficoml
lahf
shl
sbb
jp
mov
inc
sahf
sarl
xor
popf
and
in
mov
cmp
imulb
lods
insl
and
add
shl
sahf
inc
lods
imul
mov
add
insb
sub
aad
fnstcw
icebp
cld
decb
jne
add
popf
bound
cmp
mov
mov
xlat
mov
in
out
pusha
test
xor
fldln2
aaa
clc
ficoml
jmp
mov
nop
sub
xorl
aaa
mov
push
cmc
mov
into
scas
xchg
in
inc
dec
and
inc
test
sub
jmp
xor
subl
and
dec
xor
or
outsb
movsl
add
cmp
ficoms
jne
xor
cmpsb
in
xchg
mov
jge
hlt
testb
push
xorl
xchg
fisubrs
dec
lds
data16
cmp
inc
pop
rcl
sbb
cs
je
sub
mov
repnz
and
incl
mov
sub
fs
inc
pop
xlat
add
adc
fwait
sub
dec
jb
test
sahf
leave
pop
push
in
pop
fists
push
inc
mov
fsubr
das
jnp
sub
pop
cltd
aas
subb
daa
flds
sbb
xchg
movsl
rclb
mov
mov
inc
js
fcomps
outsb
mov
add
addr16
dec
jo
fs
lds
sbb
test
mov
cltd
cmp
add
cwtl
adc
jl
ljmp
push
xor
adc
in
addr16
inc
aam
js
imul
cwtl
inc
test
push
add
les
jne
rcll
ljmp
push
adc
fadd
xchg
insb
inc
lock
movsb
jne
jp
sti
popa
push
stos
pop
and
xchg
fisttpll
pop
mov
mov
jno
mov
movb
cmpsb
mov
dec
fildll
test
inc
pop
jmp
in
lds
mov
xchg
movsb
outsl
subl
push
out
jecxz
scas
and
pushf
es
mov
adc
xlat
pop
sahf
xchg
inc
pop
push
sti
xchg
nop
dec
push
dec
andb
jbe
cmp
mov
outsb
movsl
or
jno
stos
scas
ss
clc
andb
mov
xchg
xor
sub
mov
mov
movsl
mov
outsl
push
fbld
dec
jle
mov
cmp
and
add
lahf
sar
push
sub
clc
mov
daa
xor
ret
jno
or
jmp
sub
psubd
xor
repz
rep
sub
out
out
mov
or
jo
inc
fstpl
mov
ljmp
add
mov
jmp
adc
adc
imul
orb
rcrb
jle
push
aam
stc
pop
pusha
and
popf
dec
bound
add
outsl
incl
imul
jge
in
mov
sub
jns
xchg
xchg
inc
mov
mov
aad
mov
jmp
add
sub
dec
dec
jmp
sub
mov
aad
pushf
dec
sti
jl
push
stos
inc
lds
sbb
pop
mov
jmp
fldt
sti
mov
push
shl
xor
pop
call
inc
lret
pop
and
arpl
popa
adc
mov
and
cmp
rcrb
pusha
mov
inc
or
add
mov
mov
or
lods
into
xor
sbb
adc
jge
jns
stos
icebp
mov
add
ljmp
or
insb
movsb
dec
xchg
inc
adc
jnp
jnp
jb
insb
xor
addr16
add
mov
mov
mov
outsl
mov
push
fisttpll
fsubrp
lods
mov
dec
sbb
and
pop
bound
int
sbb
shlb
imulb
dec
lcall
lods
bswap
in
pushf
jb
mov
cmpsl
sbbl
loop
cmp
adc
dec
push
in
inc
and
and
mov
aam
sub
xchg
dec
jl
add
inc
push
add
jb
xlat
cmpsb
add
jo
cltd
sahf
negl
xchg
imul
aad
and
or
loope
hlt
clc
data16
mov
jnp
insl
pop
insl
repnz
cmp
xor
enter
xorb
pop
add
mov
popf
sub
jno
dec
push
nop
std
lcall
in
xchg
jmp
jl
out
push
dec
out
add
push
ficomps
mov
dec
jne
iret
jmp
push
jnp
rcrb
fsubs
dec
jo
imull
shl
adc
inc
and
add
mov
daa
mov
sti
mov
xor
sub
pop
xchg
in
lods
lods
mov
je
and
mov
movsl
imul
and
call
cmp
jb
jge
xor
popa
and
xchg
rcl
inc
stc
add
jl
xlat
dec
into
cmp
inc
jecxz
test
das
xchg
ret
jbe
sbb
or
pushf
loope
mov
add
test
jl
xchg
iret
ret
push
dec
stos
dec
cli
dec
jnp
pop
movsb
and
or
sub
mov
js
push
das
xor
fisubs
cs
adc
or
mov
cmp
xchg
cmc
in
lea
sahf
xchg
lret
rclb
xchg
adc
xor
fbstp
xchg
ljmp
insl
mov
hlt
gs
cmp
in
push
test
out
ds
adc
xlat
out
dec
mov
push
sub
mov
test
cmpsb
xchg
push
lock
ja
mov
xor
sbb
call
es
loope
inc
cmp
iret
add
sbbl
push
dec
nop
xor
mov
sub
adc
mov
fwait
push
mov
insb
test
or
inc
or
into
sbb
popa
in
gs
stos
lods
bound
inc
jp
cmp
insl
clc
ja
aad
out
sbb
cs
pop
or
jg
jns
inc
movsb
ficoml
cmc
fsubrl
int
dec
adcl
inc
lea
and
fwait
movsl
push
aas
inc
lret
jo
enter
and
outsl
and
jmp
jle
scas
lea
fldt
ss
mov
push
cmp
or
xor
or
pushf
push
jb
in
enter
daa
mov
pusha
shlb
or
lods
aas
mov
les
in
or
sub
ds
je
rorb
aaa
arpl
cmp
mov
or
push
movsl
inc
insl
lret
mov
cmp
xchg
xlat
add
jno
repz
pop
cmp
dec
test
dec
dec
and
pop
outsl
bound
faddl
jbe
loopne
xchg
cltd
loopne
or
call
stc
xor
and
mov
mov
adc
sub
mov
sub
jp
stos
int3
loopne
cmpsb
xchg
fisttpl
es
les
scas
mov
xchg
jmp
inc
or
shr
mov
js
sub
jnp
inc
outsb
cmp
or
outsb
mov
xchg
jecxz
adc
jmp
pop
mov
adc
popa
pop
cmc
in
mov
mov
jmp
jecxz
in
aas
dec
dec
pop
cmp
push
aam
xor
add
push
push
js
add
mov
push
negb
fadd
aad
std
imul
xchg
fs
pop
adc
sti
push
shr
popf
jl
ret
pop
out
outsl
xchg
mov
insb
jp
loope
mov
js
out
xor
xchg
cld
xchg
sahf
imul
stos
punpckhbw
cmc
pop
mov
push
dec
stos
f2xm1
cmp
jo
xor
cmpsb
enter
in
inc
ret
pop
or
dec
mov
adc
sub
lcall
in
stos
pusha
jne
xchg
mov
push
mov
push
enter
rolb
jbe
mov
xor
jecxz
dec
mov
cmp
fcmovbe
jns
sub
sub
push
xchg
clc
incl
xchg
mov
xor
in
push
subb
lcall
mov
fdivrl
and
adc
inc
ret
jns
stos
xchg
add
pushf
outsb
push
jge
divl
adc
je
or
jae
dec
jno
inc
inc
mov
sub
dec
push
inc
hlt
lahf
dec
xchg
pusha
hlt
aam
js
adc
cmp
sub
xor
mov
push
sbb
imul
cld
pop
aam
rcl
mov
es
fs
dec
imul
xor
lods
iret
sbb
ret
movsl
pop
pop
mov
out
inc
dec
inc
pop
jl
adc
jge
hlt
jcxz
inc
jmp
jmp
mov
mov
jmp
fsubrl
rol
ljmp
adcb
int
dec
or
mov
fisubl
daa
and
add
outsl
mov
ds
fnstenv
mov
sbb
std
or
in
out
mov
ficomps
xor
xchg
enter
imulb
mov
mov
and
mov
out
into
gs
push
and
cmp
add
xchg
rolb
ret
arpl
icebp
mov
mul
push
and
or
cmp
ljmp
inc
fistpll
lret
mov
aas
data16
jle
mov
add
call
insl
mov
mov
sub
std
xchg
adc
xor
loopne
testb
repnz
adc
or
ficoms
add
xchg
push
and
dec
adc
pop
imul
xlat
movsl
add
push
push
mov
or
push
or
push
aad
jmp
sub
mov
bnd
test
xor
sbbb
or
adc
gs
mov
lods
addr16
ljmp
jmp
adc
test
mov
cmp
add
mov
mov
push
jge
lret
insb
imul
jmp
je
mov
insl
jb
imul
jmp
into
and
or
adc
daa
add
push
mov
into
insl
out
mov
dec
mov
mov
andl
repnz
adc
je
cli
adc
jp
mov
push
out
jmp
push
xor
loope
popf
jbe
inc
xor
pop
inc
xchg
push
mov
das
mov
push
lea
in
xchg
xchg
int3
mov
jo
negb
cli
xchg
cs
pop
cmp
int
or
cmp
push
mov
xor
mov
and
jle
movsl
loop
push
jle
aam
imul
sub
call
mov
pop
test
cmpb
pop
jbe
inc
dec
lds
daa
les
inc
fisttpll
jne
imul
popf
add
insl
enter
and
in
lods
daa
sarb
fs
push
lahf
sub
pop
insl
or
cld
nop
jnp
push
push
adc
pop
ds
mov
xchg
arpl
lret
gs
push
repnz
pop
xor
xchg
sbb
roll
dec
cli
jno
dec
ja
pop
leave
fbstp
fbstp
pushf
lods
xchg
sti
and
pop
ljmp
fisubrl
xchg
cmc
clc
pop
inc
inc
xor
jl
dec
fwait
cmp
daa
icebp
push
and
outsb
fistl
dec
sbb
mov
pusha
stos
int3
xchg
lea
mov
push
push
es
out
enter
mov
icebp
lds
or
bound
lods
sbb
fdivrs
mov
imul
iret
inc
cli
daa
leave
xchg
inc
out
inc
mov
mov
jge
insl
jecxz
cmp
or
in
xor
data16
clc
loopne
inc
mov
mov
sbb
xchg
mov
es
scas
sub
xchg
push
stc
test
outsl
push
es
cli
fs
mov
mov
out
call
push
pop
jnp
adc
pop
jae
xchg
or
test
mov
xchg
in
xor
or
adc
pop
ficompl
mov
iret
bt
test
dec
dec
jecxz
push
in
xor
mov
mov
lahf
mov
fcompl
fwait
test
inc
cmpsb
int3
mov
cli
mov
fcmovnu
insb
jg
jle
push
sbb
cs
cmp
stos
jae
lock
aad
popf
js
mov
jl
push
and
cli
cmp
pop
sub
xchg
xor
inc
cmp
mov
push
pushf
in
and
cmp
subb
dec
mov
and
lcall
lds
stos
cmp
ret
jo
cmp
je
dec
xor
ficompl
adc
inc
addb
mov
mov
mov
rorl
push
pop
pusha
mov
ljmp
neg
mov
outsl
cld
je
mov
scas
orl
jo
repz
cmc
jmp
and
xchg
cs
loopne
push
jle
or
push
ret
loopne
xchg
jge
cmc
icebp
incb
popf
je
enter
vpsubq
vpmacssdd
mov
dec
insl
pop
jns
add
ds
mov
fsubr
lea
std
sbb
sub
or
test
jo
js
fldt
dec
repz
cmp
mov
jne
ret
xchg
mov
xor
lret
or
loope
adc
outsl
mov
or
cmpl
cmp
push
push
mov
out
push
mov
enter
pop
scas
and
shlb
mov
cmp
ja
jne
add
mov
movsb
inc
lcall
jns
jecxz
push
fisttpll
push
scas
adc
xchg
ja
cmp
push
mov
addl
outsb
std
cs
mov
shll
loopne
mov
fcom
mov
mov
idivl
xrelease
push
inc
int3
pop
addl
lcall
or
lea
xor
jp
nop
cmp
push
insb
xor
shlb
adc
insb
cwtl
std
in
shrl
mov
mov
mulb
out
scas
dec
xor
negl
jecxz
sbb
ret
sbb
bound
clc
pop
fstpl
xor
pop
fwait
lret
push
dec
lods
cltd
pop
jb
rclb
xchg
xor
testb
lods
and
cld
outsb
cltd
push
add
fwait
mov
xchg
cmp
nop
in
jg
xchg
jns
rorl
stc
mov
fldt
sar
sarl
icebp
lahf
mov
movsb
insb
rclb
add
cltd
push
das
lcall
lret
incl
ret
iret
sbb
pop
movl
add
xchg
mov
sub
sub
gs
sarl
dec
mov
in
out
fiaddl
fstpt
je
outsb
in
add
ror
sbb
cmp
js
adcb
ljmp
lods
push
adc
and
mov
lret
push
out
bound
pop
iret
push
push
cmp
xor
arpl
jb
xchg
repz
not
mov
and
leave
nop
sbb
rcll
ljmp
addl
xor
fidivs
sub
lods
shrb
dec
fwait
add
lods
jnp
cld
and
mov
pop
add
dec
sti
lds
pop
stos
subl
xchg
sub
mov
mov
scas
idivl
fstpt
xchg
mov
cwtl
es
aaa
pushf
mov
cld
pop
mov
cmp
popl
dec
pop
mov
das
es
jmp
ficomps
ds
loop
shll
cmpsb
lret
repz
aaa
ljmp
push
pop
ljmp
daa
test
adc
lods
or
and
xchg
push
out
pop
sub
imul
sahf
mov
lea
icebp
mov
out
int3
xchg
inc
test
sbb
xchg
and
sub
jl
jg
out
clc
lods
loop
fs
mov
sti
pop
sahf
sbb
lods
inc
pop
das
cmpb
or
fadds
out
jo
xchg
test
adc
cmp
or
or
adc
pushf
into
roll
enter
adcl
iret
adcl
jmp
sub
sub
and
js
lock
lret
shl
test
popf
push
neg
xchg
aam
mov
fdivs
stc
and
xchg
jns
mov
out
stos
pop
mov
lahf
cmpb
fstpt
cli
jo
aaa
psrlw
mov
shll
or
ljmp
adcb
jns
bswap
mov
bound
xchg
loope
gs
in
push
stc
adc
stos
pop
mov
pop
or
dec
aas
xchg
jmp
ret
sbb
pop
push
sub
call
cwtl
dec
into
fwait
scas
jp
stos
in
push
adc
addr16
aam
stos
jp
inc
sbb
mov
dec
outsb
sbb
jno
push
cs
xchg
or
mov
stos
cmc
aad
sbb
mov
xor
xchg
mov
xor
adc
sub
lds
into
or
pop
jae
and
mov
add
cmp
je
imul
sub
ret
cmpsl
subl
iret
loope
popa
push
adc
cwtl
sbb
pop
icebp
prefetch
xor
mov
sbb
dec
push
or
add
enter
cld
add
xchg
push
mov
jp
xchg
push
cmp
mov
lret
ficoml
mov
lods
pop
mov
test
inc
push
or
jle
mov
arpl
jecxz
adc
sub
adc
mov
out
pop
fwait
jle
or
xor
fwait
xorl
or
push
mov
cmp
add
dec
and
shll
jne
rcr
dec
in
aas
mov
or
insb
mov
xor
inc
adc
dec
xchg
mov
lds
pop
sbb
ljmp
and
lret
xor
push
mov
pop
inc
adcb
dec
push
jge
sub
mov
push
cs
mov
pop
xor
lcall
in
ss
or
cmp
xorb
xor
out
movsb
cmp
mov
push
dec
mov
add
inc
gs
cltd
ds
adc
sub
in
cmpsl
pop
dec
inc
push
mov
daa
sarl
gs
nop
inc
movsb
fldcw
stos
push
xor
cmp
dec
sbb
adc
orb
ret
mov
inc
test
mov
call
or
add
jl
shl
xor
inc
cmpsb
or
xchg
ret
jp
rcr
rol
xlat
mov
xchg
loopne
sub
cmp
movsb
cmp
aam
or
mov
mov
outsl
mov
adc
jp
jmp
fs
test
inc
es
adc
cmpsb
adc
scas
addb
adc
xor
loop
aas
adcl
xchg
test
insb
nop
jb
cli
cli
pop
xor
sbb
pop
xchg
lcall
in
xor
cmc
in
jae
call
xchg
or
fst
xchg
dec
lock
fwait
mov
mov
popf
jns
divb
cmp
xchg
out
es
xor
fiadds
sub
or
rolb
gs
mov
mov
ss
adc
or
push
rcrl
mov
imul
outsb
loope
lret
cmp
mov
daa
jl
or
jmp
sub
out
stos
jg
into
add
enter
mov
insl
jno
in
outsb
pop
in
sub
mov
std
pushf
loopne
test
push
movsb
sub
gs
jnp
scas
test
add
mov
push
insb
sbb
icebp
hlt
fadds
mov
add
adc
lock
mov
lret
fs
mov
imul
or
int3
mov
iret
stos
fimuls
adc
lret
test
cmp
or
xchg
ss
lcall
daa
data16
mov
insb
mov
adc
rolb
outsl
lcall
push
jne
xchg
xor
mov
stos
sub
into
xchg
ret
adc
jae
das
mov
push
cmp
sbb
xor
xchg
mov
fdiv
pusha
pop
pusha
push
mov
frstor
int3
repz
sub
xor
dec
lret
cli
mov
sub
shlb
xchg
adc
pop
inc
loopne
adc
pop
cmp
outsl
jnp
test
ljmp
lret
lahf
lret
inc
ret
jmp
sub
sbb
out
lea
jne
inc
mov
lods
jbe
xchg
xchg
outsb
pop
xchg
mov
sub
inc
jne
loopne
adcb
jl
repnz
pop
cwtl
mov
mov
inc
add
and
push
test
lds
pop
loop
and
jecxz
mov
out
and
addr16
ss
jnp
test
cmp
adc
push
pop
mov
ret
cwtl
cs
push
cmp
leave
dec
inc
jne
rclb
div
jae
ret
add
add
sbb
dec
lret
and
pop
mov
stos
insb
lds
movsb
jb
adc
xor
lret
dec
xchg
fnstsw
ret
push
dec
jmp
cmp
movsb
mov
dec
inc
push
dec
insb
pushf
sti
dec
aad
add
pop
testl
inc
fndisi(8087
jae
cmpsb
jg
mov
fwait
cmpsl
inc
adc
decl
movsb
loopne
jno
inc
adc
adc
es
orl
or
inc
test
and
mov
sbb
dec
sbb
movl
pop
push
jo
inc
cmpb
cwtl
adc
xor
popa
mov
mov
xor
cmp
dec
or
cwtl
enter
cmpsb
pop
les
ja
or
lret
sub
mov
arpl
add
mov
pop
mov
jmp
mov
in
aam
stos
divb
sub
cmp
xchg
fs
push
push
dec
xrstor
pop
test
mov
inc
fcmovnbe
cmp
arpl
iret
in
add
lcall
inc
dec
mov
xchg
cltd
xor
xor
adc
andb
std
mov
arpl
mov
or
pop
cmp
sub
sub
je
sbb
adc
rclb
clc
ret
in
insb
movsb
in
lds
nop
adc
push
lret
pop
add
xchg
ss
push
xchg
sti
dec
mov
dec
out
int3
mov
xchg
out
sti
inc
sti
movsl
or
lods
sbb
dec
test
inc
std
rorl
out
js
sub
imul
push
or
cmpsb
faddp
dec
push
fsubl
xchg
mov
ljmp
add
shl
insb
in
sub
xor
test
jbe
dec
popa
cmp
mov
imul
pop
vprotw
aad
dec
sti
loop
cmpsb
sub
inc
inc
notb
lret
fdivr
aad
inc
sbb
aam
jmp
xchg
outsl
sbb
test
push
lds
enter
cmc
insb
cmpsl
ljmp
cltd
inc
mov
rcrl
xchg
adc
dec
jno
jp
pop
in
loope
and
ret
inc
and
adc
addl
dec
aas
mov
out
in
in
xchg
in
dec
mov
sahf
pop
outsl
lret
lods
jle
inc
mov
fimuls
in
dec
adc
inc
sbb
push
rcrb
shlb
cwtl
int3
jl
mov
jmp
cmp
stc
hlt
cs
mov
adc
cmpsl
cmc
cmc
mov
cld
inc
and
jmp
mov
push
lods
aam
std
sar
cmp
sub
jbe
add
sti
xor
pop
mov
fidivrs
cmp
sub
ja
mov
repz
mov
cmp
cmp
mov
add
cwtl
mov
pop
mov
popa
add
sahf
cs
in
dec
xchg
push
imul
xchg
out
cld
enter
push
jg
cli
adc
mov
cmc
cld
rep
cmpsl
in
insb
pop
fisttpl
stos
mov
daa
and
lods
lds
pop
mov
sbb
out
mov
sub
gs
int
gs
sub
cmpsb
fidivrl
xor
fldcw
imul
xor
or
push
mov
call
cmp
push
popf
jno
sbb
xchg
mov
bound
push
add
xchg
inc
mov
hlt
in
xlat
cmpsl
lods
fidivrl
mov
movsl
and
adc
outsl
mov
add
mov
fisttpll
fsubs
arpl
add
push
mov
pop
mov
dec
ds
sub
or
into
lea
in
cmp
out
out
xor
push
jbe
sbb
jg
mov
adc
insb
xchg
mov
testw
push
stos
lret
and
jmp
div
add
insl
pop
jecxz
dec
dec
bnd
shlb
mov
arpl
loopne
mov
out
arpl
pusha
cmpsl
pusha
call
jns
loopne
popf
pop
xchg
and
fnsave
ret
scas
stc
int3
mov
cld
negb
sbb
inc
repnz
aas
cs
jle
rclb
fstp
mulb
jns
ffree
mov
push
xchg
test
xor
adc
rcrl
insb
test
cli
stc
fmull
js
inc
dec
add
push
scas
inc
xchg
xor
mov
jne
pop
push
jnp
cld
aad
and
stos
cmp
jg
popa
sbb
cmp
mov
icebp
leave
shl
mov
fmull
and
les
std
mov
cmp
ret
jno
pop
mov
ret
xchg
inc
xchg
subb
dec
mov
pop
mov
sbb
mov
dec
push
xor
mov
je
aas
cltd
lds
lods
pop
ss
ja
xchg
rcrl
lret
and
pop
cmp
jp
adc
out
sub
in
or
shll
lret
mov
push
and
outsl
test
arpl
nop
xchg
cmp
fwait
push
jp
dec
xor
and
push
mov
lods
inc
aas
adcb
in
jae
jne
push
andl
inc
mov
jbe
pop
mov
cmp
lods
shr
dec
ds
xorb
in
xor
sub
cwtl
aaa
sub
movlhps
cmp
inc
rcll
lods
stos
cltd
repnz
loope
aas
loop
stos
fmul
mov
fidivs
mov
fnstenv
inc
mov
imul
mov
xchg
jo
call
and
mov
sbb
aas
adc
into
aas
push
popl
int
js
sahf
jae
rcl
data16
dec
dec
hlt
inc
jnp
pop
iret
loope
adc
cld
adc
dec
out
rorl
push
jb
push
std
push
lds
cwtl
pop
push
in
decb
enter
out
sub
xchg
mov
scas
lea
jp
lahf
mov
jnp
mov
jbe
addr16
dec
or
mov
pop
psllw
ss
add
push
ljmp
mov
dec
jp
in
jns
adc
sahf
lods
loope
lods
rcrb
nop
enter
or
pop
into
add
jb
push
pop
xchg
xchg
movsl
repnz
dec
inc
outsb
pop
mov
jle
cmp
pop
adc
shlb
jnp
call
in
mov
inc
les
imul
push
jmp
mov
sgdtl
cmp
out
and
test
fimull
sbb
aad
xchg
sub
sbb
in
xor
cmp
aad
push
sub
es
cmp
xchg
gs
aad
cwtl
sti
mov
and
jge
lods
dec
xor
aam
gs
mov
pop
adc
loopne
push
clc
nop
mov
aas
jno
loopne
sub
push
adc
pop
pop
push
pop
or
out
push
or
mov
mov
add
nop
sbbl
fdivrs
outsb
test
jecxz,pt
idivl
mov
and
mov
sbb
lods
hlt
jbe
xor
in
dec
and
sbb
push
popf
dec
loop
iret
sub
stc
pop
pop
jl
pushf
or
inc
mov
cmpsb
shll
pushf
xchg
stc
ss
xchg
and
jmp
movsb
adc
popa
sar
add
xchg
in
movsl
mov
push
pop
popl
jg
jo
mov
movsl
loope
sahf
pop
add
insb
daa
dec
addl
sbb
adc
mov
xor
ss
add
rorl
cmp
imul
in
das
cmp
ret
sbb
test
fistpll
out
cmp
lcall
xor
adc
sbb
pusha
daa
test
pop
cmp
cli
xor
sub
fwait
dec
dec
mov
jno
sbb
insl
jge
sbb
aad
push
mov
roll
ret
incb
cltd
je
mov
push
imul
mov
test
test
pop
lods
jle,pt
xchg
out
das
inc
push
das
dec
inc
or
xchg
adc
xchg
scas
adc
arpl
inc
pcmpeqw
or
gs
mov
mov
ljmp
jecxz
mov
jg
cmpsl
lds
cmp
sbb
and
leave
push
cmp
dec
mov
push
mov
pusha
imul
lods
sub
pop
aam
adc
lods
inc
iret
rcr
sub
cmp
pop
mov
lret
lods
lcall
cltd
mov
mov
mov
ds
cltd
dec
jecxz
cmp
or
jns
shlb
int
cltd
arpl
mov
or
and
jge
or
sbb
subb
cli
jae
popf
xor
lods
imul
dec
mov
dec
sti
lods
out
popa
ljmp
push
push
es
ja
sbb
push
into
ret
rorb
leave
lret
push
addr16
sti
and
sbb
jae
mov
rol
jbe
push
add
es
rolb
dec
add
mov
jae
ficompl
iret
xchg
lcall
incb
jle
lods
insb
jb
nop
jl
sub
cmp
xchg
in
inc
jo
xor
push
lea
xor
es
cld
icebp
add
jns
in
add
push
insl
std
jns
sbb
arpl
cmpsl
dec
cmp
es
sub
lret
loop
push
insb
leave
aas
xor
inc
mov
stc
mov
outsb
push
test
lcall
dec
sbbb
add
xchg
or
cmpsb
and
mov
daa
push
clc
inc
pop
pop
mov
rol
xor
lret
aam
or
lret
fnsave
call
dec
shrl
call
sub
push
pusha
jg
jl
xchg
call
call
mov
jmp
sub
push
setp
jo
lods
call
sub
aad
shufps
in
repnz
sub
ret
rcrl
subl
jno
dec
xchg
inc
cltd
jp
jmp
lcall
add
lret
adc
sbb
sbb
stos
xchg
mov
dec
mov
sub
fwait
xlat
rorl
sarb
inc
test
xor
jb
push
xchg
jmp
sbb
add
push
out
lods
pop
pop
hlt
lcall
cli
inc
clc
mov
fs
shlb
jo
and
mov
push
aaa
dec
dec
or
stc
imul
out
jns
fsubs
and
add
mov
xchg
in
repz
mov
int3
mov
xor
aad
sbb
aaa
mov
loop
jle
push
sbb
mov
xor
aam
cmpsl
div
adc
and
mov
mov
movb
mov
jne
jg
adc
mov
inc
push
jge
sti
ret
cmp
push
ss
mov
xchg
xchg
test
ret
push
sub
cmpsl
mov
out
cltd
jnp
out
xor
adc
pusha
bound
adc
pop
adcl
jnp
pop
fwait
lods
or
out
test
mov
sbb
arpl
lcall
inc
daa
dec
push
mov
pop
jmp
push
stos
outsb
into
push
jne
xchg
adc
xchg
into
imul
mov
out
and
cmp
ljmp
nop
hlt
cmp
mov
ret
cli
cmp
xor
fistl
sub
adc
lock
inc
mov
int
cmpsb
bound
jle
and
insb
insl
push
mov
adc
inc
test
out
xchg
addr16
sub
dec
mov
lahf
movsb
push
outsl
shrb
scas
xchg
fistps
ss
scas
in
movsl
insl
outsb
xor
arpl
enter
sahf
fists
push
mov
cmp
enter
bound
mov
inc
cmc
sbb
mov
ret
pop
or
xchg
stc
jge
mov
nop
jno
mov
lcall
rorb
scas
cmpsb
sub
outsl
mov
sub
jl
fisubrl
inc
jae
jmp
jbe
test
subps
movsl
push
gs
mov
js
xor
inc
sahf
jle
push
sbb
push
sub
pusha
aam
push
jb
jmp
lea
pop
std
pop
adc
mov
addr16
cltd
fildl
mov
cwtl
ret
pop
sub
dec
mov
fadd
push
xchg
sbb
mov
into
xlat
pop
cmp
pop
daa
in
ret
aad
sub
out
add
push
jnp
je
lret
mov
dec
imul
mov
inc
pop
push
add
jbe
sbb
ds
cmp
add
das
mov
icebp
mov
sti
jae
sbb
jb
imul
xchg
and
adc
notl
arpl
pop
std
mov
push
pushf
insl
lods
stos
push
loop
add
mov
pop
mov
dec
pop
sub
test
insb
jge
pusha
out
lods
pop
scas
notb
pop
dec
js
clc
into
push
mov
movb
cmp
sbb
insb
dec
fcmovnu
aam
iret
xor
pop
mov
and
xor
fcmovne
lea
cmc
jbe
jns
push
ljmp
push
and
sbb
and
dec
add
mov
fstps
and
negl
xor
pop
fst
cwtl
lods
dec
lret
and
ror
lea
jb
inc
gs
lock
aam
mov
push
add
out
jae
imull
nop
mov
add
cmp
push
xchg
inc
je
adc
out
mov
xlat
sahf
xor
jo
adc
sar
bnd
cmpb
jbe
xor
inc
push
pop
fs
pop
and
mov
rcl
pushf
xor
rolb
nop
in
stos
pop
sbb
int
int3
movsb
neg
in
push
clc
pop
inc
inc
jg
mov
icebp
inc
sahf
aam
outsb
cmp
fwait
sbb
out
sbb
cmc
arpl
fimuls
cmc
movb
inc
rorb
insl
or
test
and
andb
in
ljmp
in
ss
pop
dec
cmpsl
test
sbb
rolb
add
push
nop
sub
sbbl
popa
mov
sbb
test
inc
push
adc
cmpsb
andb
mov
loopne
adc
mov
add
outsl
or
sti
and
ds
mov
sbb
sbb
out
sub
or
adcl
cltd
shll
test
sbb
cmp
or
jbe
jp
pop
cld
icebp
or
xchg
sbb
syscall
lock
fwait
jae
inc
fidivrl
loopne
mov
mov
inc
push
dec
and
push
dec
inc
mov
mov
or
xchg
repz
lcall
fxch
aad
mov
cmp
fnstsw
out
cmp
dec
xor
jnp
sbb
push
orb
jns
aas
stc
jg
push
cmp
xchg
sbb
out
addr16
xchg
notb
pushf
pop
insl
mov
add
js
jg
addr16
xchg
out
mov
dec
out
mov
mov
cld
repnz
push
loopne
subb
push
jnp
out
test
setp
fsubs
lods
les
arpl
cwtl
add
pusha
mov
and
mov
pop
mov
mov
push
lret
ss
xchg
sub
mov
inc
sbb
xor
nop
or
loope
push
pop
bound
sbb
lret
stc
mov
dec
mov
mov
vpandn
adc
movsl
or
push
stos
cld
mov
adc
mov
mov
xchg
lods
jmp
push
mov
xor
in
adc
pop
xor
call
mov
mov
out
xchg
pop
push
lret
fs
lods
jmp
cmp
insb
xor
int3
div
mov
test
imulb
push
mov
dec
sub
cwtl
test
jge
mov
cmpsb
iret
xchg
dec
push
inc
fsubrl
daa
mov
jnp
scas
or
mov
push
inc
stc
fnsave
test
dec
xchg
sti
or
sbb
mov
outsl
iret
shlb
int
shr
cltd
cld
test
cmpl
fs
push
shll
xor
add
dec
cwtl
mov
dec
outsl
or
loop
aad
cmpsl
sbb
pop
bound
in
in
xor
jmp
mov
ljmp
std
and
bound
unpcklps
inc
rcrb
inc
test
stos
fistpl
stos
jl
or
fiaddl
in
lcall
jle
scas
stc
sub
movsb
cmpb
jmp
push
test
mov
nop
mov
push
pop
adc
cmp
add
mov
jecxz
ret
mov
in
cmp
lock
cmp
icebp
lods
ds
lods
adc
mov
push
aaa
insl
cmp
pop
shrb
lods
scas
pop
xchg
push
and
je
jb
inc
inc
and
pushf
mov
pop
xchg
out
idivb
rcrl
ds
cli
call
jmp
dec
mov
xor
sbb
and
arpl
xchg
in
mov
cmpsb
cmc
mov
and
das
push
loope
mov
lcall
mov
mov
fmulp
jb
dec
cs
xor
xor
pop
sbb
jecxz
jge
dec
hlt
mov
scas
btc
inc
push
push
fsubp
or
push
loop
lock
test
pop
popa
into
dec
subl
push
dec
xchg
pop
dec
fs
cmp
and
iret
pop
push
pop
ljmp
adc
xchg
jnp
xor
xchg
or
out
dec
xor
mov
xchg
mov
ljmp
or
cmp
cmp
mov
xor
or
cmpsb
bound
hlt
js
gs
dec
push
je
popa
xlat
pusha
enter
inc
xor
push
sub
fisubs
pop
or
cmp
adc
movsl
insb
out
add
xchg
imul
mov
push
mov
xchg
out
xchg
jns
xchg
dec
lea
dec
test
frstor
fldl
cmp
sbb
mov
out
xchg
cmp
sar
cwtl
sti
push
push
jg
imul
and
movsl
stos
lar
outsb
xor
repz
add
xor
les
mov
les
mov
jl
movsb
adcb
or
cld
imul
jg
popf
cmp
daa
shrb
push
jb
imul
and
mov
mov
nop
jnp
lcall
daa
js
dec
sub
fwait
cltd
outsl
mov
xor
jae
mov
mov
in
cli
and
xor
jo
pop
repz
repz
mov
xchg
push
and
mov
xchg
dec
sbb
aad
outsl
cmpsb
aad
iret
dec
add
mov
push
push
fidivl
pop
fidivrl
pop
std
gs
call
adc
sub
insl
or
xchg
dec
adc
lock
cwtl
lods
sub
scas
mov
pop
push
popa
adc
and
jmp
cs
add
nop
adc
sbb
jns
xchg
pop
adc
lds
xchg
adc
jg
addr16
xchg
rcrl
loop
sub
fstpt
mov
fisubs
pusha
add
test
shlb
cmp
pop
nop
ljmp
ja
sbb
cmp
dec
or
mov
repnz
jecxz
mov
rol
or
mov
cltd
jbe
xchg
xchg
mov
xlat
adc
lahf
xor
out
insb
fbstp
pop
cld
rolb
stc
ret
test
aad
mov
push
push
clc
push
mov
fisttpll
ret
out
in
js
mov
mov
imul
mov
mov
add
jle
jb
rorl
imul
sti
xor
xchg
movl
lea
adc
push
jecxz
xchg
mov
mov
mov
fwait
cmp
clc
mov
push
jp
lret
in
jg
hlt
xchg
testb
xor
xchg
cmpsl
mov
pusha
arpl
dec
repnz
adcl
cltd
sbb
adc
ljmp
imul
outsb
and
faddp
sbb
jp
jne,pn
push
sbb
mov
xor
aam
cmp
fimull
dec
loope
test
ja
push
adc
mov
sarl
push
sub
cwtl
aas
and
mov
mov
xchg
stos
dec
xchg
jns
cmp
arpl
loop
add
test
adc
call
push
jb
mov
aam
inc
sub
es
add
loop
jmp
sahf
dec
into
cmp
push
cmp
inc
int
rcrl
or
mov
pop
ret
inc
and
push
xor
loopne
sbb
pushf
sbb
xchg
aad
push
sbb
cld
lock
pop
dec
popf
out
mov
aam
enter
aaa
imul
arpl
inc
mov
sub
jo
test
xchg
pop
js
mov
mov
xchg
daa
inc
push
add
jmp
cmc
jae
adc
sbb
mov
adc
cmpl
cmp
call
shr
or
filds
pop
jge
dec
daa
xor
lcall
pop
mov
push
fidivrs
decb
mov
fisttpll
mov
dec
sarl
pop
push
xor
cli
loope
lods
shr
push
pop
and
out
inc
cmp
aas
aaa
int3
cmp
sbb
test
dec
cltd
jle
stos
mov
xchg
and
scas
test
push
inc
out
cmpsl
xor
pop
mov
insl
pop
add
stc
or
lcall
sahf
cmpsb
loopne
scas
mov
mov
leave
or
jp
jg
push
pop
mov
add
mov
sbb
jge
std
mov
xchg
imul
pop
adc
dec
push
push
adc
lods
icebp
insb
mov
xor
sbb
sbb
push
pop
rcr
popl
rcrb
mov
pop
push
jle
fbstp
push
movsl
push
lea
cmp
dec
imul
inc
mov
lods
stc
sbb
pop
bswap
jge
fnstsw
sub
sbb
mov
push
js
sub
loopne
lahf
mov
cld
dec
dec
mov
sti
mov
mov
push
out
pop
and
mulb
inc
jo
add
lock
adc
lret
add
loope
fxch
loop
push
fs
jb
pop
test
sub
or
push
lds
xchg
xchg
into
fcomp
popf
sbb
pop
dec
push
ja
pushf
test
scas
dec
stos
add
pop
es
push
add
and
mov
out
add
mov
cmpsl
inc
lods
fdivs
sub
outsl
and
es
cmp
dec
test
sbb
stos
les
loop
or
push
jmp
stc
push
xchg
lods
jbe
or
imulb
xor
push
jecxz
subb
jae
imul
daa
add
push
aas
mov
add
mov
inc
pop
jno
lock
jecxz
ss
sbb
add
stos
push
sarb
xchg
lock
sbb
insl
into
cmp
in
dec
out
pop
outsl
out
es
cmp
add
test
jmp
icebp
cwtl
mov
inc
jl
inc
cmp
rclb
cltd
mov
subl
xchg
add
js
ficomps
orl
cmp
cmpsl
ficomps
ds
xchg
aaa
ret
stos
push
cwtl
adc
mov
mov
adc
pusha
sub
sbb
dec
dec
mov
fadd
addr16
fcmovbe
and
or
aaa
sub
es
bound
test
jbe
cs
les
ret
or
sete
stos
shr
sub
pushl
pop
inc
js
jg
lods
mov
ss
xor
inc
rorb
push
pop
mov
mov
stos
popf
pop
ret
in
pop
mov
inc
mov
outsl
push
xchg
lock
inc
insb
xor
scas
jp
ret
sbb
out
jnp
dec
xchg
xor
cwtl
pop
adc
jl
icebp
sub
xor
popf
add
loop
rcrl
mov
sbbb
mull
test
aas
xchg
mov
int3
cmpsb
jecxz
and
and
push
jnp
pop
or
pop
pusha
mov
adc
xorl
das
jg
mov
dec
roll
xor
cli
mov
jge
sbb
jge
into
mov
xlat
mov
movsl
out
xor
inc
push
jle
dec
stos
cli
push
cmpsl
lret
test
sbb
inc
cli
push
inc
cmp
jg
fs
aam
jl
mov
xchg
mov
nop
push
pop
loopne
inc
jnp
mov
adc
pop
jg
jg
int
xchg
mov
xor
fisubrl
and
mov
test
daa
and
xor
and
insl
dec
sti
ret
push
inc
addr16
das
sub
or
push
adc
into
jl
fcoms
jns
jle
mov
mov
enter
push
pop
pop
mov
xchg
jecxz
cli
jne
stos
test
push
ret
sub
popa
cmpsb
icebp
mov
sbb
fidivrl
ss
add
enter
mov
push
gs
and
mov
cld
push
clc
push
add
leave
fisubrl
mov
mov
mov
in
mov
ret
and
jo
outsl
push
xchg
inc
hlt
adc
stc
out
xor
pop
jge
jns
rorb
cli
jge
mov
roll
jae
icebp
sub
lret
add
loop
jno
enter
cmpsb
cmp
ss
jmp
enter
loopne
test
andl
pop
call
xor
push
notb
loope
sub
stos
fbstp
scas
ds
fldl
pop
pmullw
jo
and
loop
cmc
cwtl
xor
mov
test
mov
pop
push
pop
mov
das
loop
into
sbb
mov
lahf
pushf
std
testb
cmc
inc
in
aaa
icebp
add
aas
xor
cmp
faddp
and
jge
xor
adc
pop
and
pop
jmp
mov
pop
adc
mov
or
int3
mov
outsb
mull
sbb
fmul
pop
and
clc
cld
push
stc
stc
xor
jge
or
pop
pop
ret
jmp
pop
jns
iret
push
fcoml
testl
add
iret
xor
jb
jnp
pop
and
mov
jae
sub
loop
push
mov
lret
xorb
xlat
inc
in
ds
sbb
xchg
into
xchg
cwtl
push
fcmovne
fwait
and
pop
fcomip
jmp
add
xchg
pop
xchg
push
xor
sahf
mov
test
and
or
pop
jmp
xor
push
mov
adc
sub
insb
sub
sahf
cmp
popa
sbb
xchg
adc
out
addl
mov
fldl
sahf
dec
inc
inc
das
inc
cmp
add
rcrb
mov
and
mov
xlat
out
xor
adc
and
mov
imull
dec
fdivrs
outsl
lods
inc
or
mov
rcrb
jo
cmp
imul
daa
and
pop
adc
or
lods
cmpsl
cmp
push
pop
pop
xchg
push
or
inc
xchg
repz
cmc
jl
cltd
fldt
sbb
pop
cwtl
iret
jmp
mov
mov
sub
cmp
push
ss
mov
repnz
cmp
ret
leave
in
ljmp
xchg
pushf
decb
lods
lahf
stos
push
dec
std
cmpsb
push
mov
dec
test
push
pop
jb
xadd
add
fldcw
in
das
loop
lods
push
repz
lahf
lods
mov
dec
mov
outsb
cmp
cmp
sbb
cmpsb
ljmp
push
scas
inc
push
adc
leave
inc
mov
mov
clc
imul
jns
xchg
int
scas
sub
jmp
mov
cs
shll
divb
pop
pop
jge
cli
shlb
std
std
and
xchg
je
arpl
enter
icebp
xchg
mov
insb
push
adc
xchg
jl
mov
clc
push
orl
sbb
sub
gs
fildll
jo
lock
incl
test
sbb
movsl
icebp
ja
imul
adc
and
lock
mov
pop
xchg
sbb
push
lods
imul
push
sub
mov
outsb
bound
out
and
int
out
pusha
icebp
imul
or
aam
adc
xor
jecxz
das
daa
or
jg
movsl
jl
dec
jne
gs
mov
inc
mov
xchg
je
xor
ret
xlat
pop
sbb
imul
fisubrs
xor
iret
sbb
jecxz
orl
fwait
jb
jae
rclb
mov
push
popf
ljmp
movsl
lahf
neg
mov
ljmp
shll
lahf
mov
fldenv
jp
mov
and
imulb
dec
mov
xor
fcoml
je
stos
adc
pusha
dec
adc
loope
icebp
cld
ret
call
add
loope
inc
mov
jno
aad
lret
mov
test
cmpb
push
lret
push
or
bound
loope
jbe
mov
in
out
ss
inc
cmc
mov
imul
frstor
dec
pop
enter
mov
repz
sbb
shrl
addl
aam
jne
adc
mov
jae
xor
jp
xorb
repz
stos
pop
popa
inc
jb
addr16
jb
lods
adc
lods
dec
dec
scas
shll
or
pop
flds
mov
sub
mov
data16
fcomi
inc
mov
jnp
push
add
test
inc
pop
fisubs
je
mov
fdivp
lods
xchg
ljmp
in
sub
sub
stos
mov
enter
ljmp
xor
call
data16
mov
dec
bound
xlat
and
cmp
repnz
out
shll
insb
movsl
sti
aam
sub
and
int
inc
stos
shl
popf
push
and
mov
cmp
stos
jecxz
adcl
push
std
inc
divl
push
xlat
cs
out
adc
out
loope
rcrb
sbb
mov
xor
cmpl
ficompl
adc
imul
mov
sbbb
pop
sbb
or
or
je
xlat
push
sahf
cltd
inc
and
in
decl
jne
or
jae
adc
mov
aad
insb
scas
mov
leave
or
jbe
shll
jge
jo
mov
mov
pop
cmc
mov
cli
ror
fisubl
lret
sub
or
outsb
jae
add
jno
outsb
roll
mov
push
mov
arpl
xchg
iret
outsl
jno
inc
mov
out
push
jg
sahf
cmpsl
inc
lods
cmpsb
ljmp
mov
scas
lods
sbb
mov
test
adc
dec
dec
test
jb
lret
pushf
xchg
fstpl
int
testb
fdivrs
cmpl
lret
popf
push
mov
sbb
test
push
sub
dec
sarl
mov
mov
aam
in
xor
jns
test
data16
add
jo
xchg
and
daa
jmp
and
fisubs
out
addr16
pop
ret
xor
or
shlb
add
stos
es
sub
je
or
out
jle
push
stos
cmp
add
sbb
lea
pop
es
xlat
scas
mov
cmp
pop
jo
mov
loopne
jns
cmc
negb
iret
aas
mov
inc
lds
jnp
ljmp
outsb
aaa
fcomp
xor
daa
adc
or
jb
fidivrs
int
std
enter
and
xchg
into
or
stc
fs
mov
push
cli
adc
mov
shlb
dec
sbb
sub
dec
in
cli
outsl
jbe
xchg
xchg
jo
xchg
ja
pusha
push
scas
jmp
and
test
fcomi
push
xchg
lret
cmp
adc
or
or
js
pop
fs
ret
pop
push
dec
pop
js
adcl
pop
gs
and
xor
cmp
daa
lds
push
loop,pn
adc
imul
mov
loope
adc
cmp
mov
cmpsb
aaa
inc
je
lahf
out
shlb
sarl
cs
and
xchg
add
hlt
mov
dec
mov
push
dec
lret
mov
ja
mov
fistps
loope
in
mov
scas
dec
pop
dec
popa
fsubp
das
mov
adc
out
iret
sub
repz
or
and
stos
testl
bound
cmpsl
push
out
into
fwait
sub
fmuls
dec
sti
outsl
lret
push
ljmp
jmp
mov
pop
pop
xchg
cmpsb
pop
jno
loope
xchg
pop
mov
sbb
pop
and
fcoml
mov
scas
sbb
jns
mov
clc
inc
adc
arpl
jle
and
pop
lret
jno
call
push
mov
psubd
mov
idivl
ret
jno
dec
push
in
pextrw
adc
mov
or
xchg
insl
mov
ja
pop
mov
sbb
jge
sbb
test
xchg
xor
and
dec
sub
jno
jl
inc
inc
daa
or
aas
and
mov
shll
or
cmpsb
int3
lods
sbb
mov
lret
in
and
popa
mov
jns
dec
xchg
mov
and
sbbb
mov
insb
sub
test
sub
inc
bound
pop
sub
scas
ret
xlat
or
mov
dec
push
sub
out
call
mov
xchg
inc
cmpb
stos
ret
aam
xchg
cmp
and
scas
cmp
jo
out
adc
not
add
xchg
jg
push
inc
sarb
repnz
add
cli
mov
and
inc
loope
mov
push
mov
xor
jo
xor
xchg
lds
cmpsl
xlat
xchg
or
icebp
cmpb
pushf
clc
roll
lds
out
cmp
mov
imul
movntq
out
dec
mov
cmp
push
xorb
jle
or
xor
sub
pusha
push
mov
cmpl
out
sbb
idivl
fldt
and
sub
mov
mov
into
mov
int
out
xchg
ss
test
cli
roll
aad
mov
mov
sbb
jmp
push
jecxz
subl
push
arpl
xchg
hlt
jbe
push
ljmp
cmp
repnz
cmpsl
dec
adc
jnp
scas
dec
int
mov
inc
mov
or
jns
mov
stc
jle
adc
jecxz
pop
jl
jle
cs
cmp
dec
sub
push
xchg
hlt
andb
lock
repnz
stos
repnz
lock
andb
lods
inc
adc
rcr
and
test
adc
jmp
add
sub
adc
ret
jae
push
pop
aaa
dec
cmp
hlt
clc
cmp
out
jmp
loopne
ja
mov
jb
loop
dec
arpl
pop
dec
push
out
lret
lret
cwtl
aaa
mov
push
aad
rolb
int3
pushf
aam
adc
notl
lods
nop
insl
ss
jecxz
fnsave
iret
push
and
lcall
push
rcl
cs
aad
std
sti
jne
aam
sbb
jns
in
push
dec
stos
add
jle
loope
jb
mov
adc
dec
test
inc
add
das
lods
jno
add
int
pop
nop
adc
mov
sbbb
sti
push
lds
out
dec
cmp
incb
push
xchg
jae
idivb
push
xor
rolb
cmpsb
sahf
mov
pop
scas
mov
cmpsl
mov
adc
and
cmp
sub
inc
and
gs
popa
cmp
mov
imul
loop
fxch
mov
cmpsl
mov
fldl
dec
mov
mov
in
int
push
sbb
or
lea
ss
ret
mov
mull
sahf
cli
jecxz
scas
js
lods
dec
cmpsl
xchg
mov
dec
outsb
xlat
rcr
jne
xchg
xchg
and
clc
jl
mov
in
push
aaa
or
jge
jmp
jecxz
add
filds
mov
xchg
mov
push
sbb
dec
daa
mov
sti
popa
repnz
lret
outsl
inc
and
sub
je
call
in
bound
pop
jbe
pop
push
push
dec
jae
das
lods
cli
pop
mov
icebp
insb
rclb
imul
scas
sub
mov
movsb
inc
std
out
xor
mov
mov
testb
movsl
sbb
add
and
aad
xor
subb
inc
jg
mov
mov
pop
bound
jno
adc
loope
mov
xchg
cmp
shrl
inc
sbb
iret
xchg
push
xor
mov
lock
lock
aaa
dec
push
test
dec
mov
jge
inc
cli
shrl
sarb
les
fisubrl
add
and
dec
mov
roll
out
lahf
inc
hlt
jne
or
nop
push
mov
cmpsb
jmp
lds
pop
testb
test
push
mov
aas
or
dec
cmp
mov
mov
loopne
jl
xor
sbb
out
outsb
gs
or
or
lret
inc
mov
outsl
inc
pop
loope
mov
jno
mov
rolb
dec
stc
dec
dec
inc
dec
scas
test
popa
jle
aaa
inc
dec
cmc
hlt
dec
in
xor
jmp
push
es
pop
ds
sub
cli
jno
xchg
or
sbbl
ret
and
lods
jecxz
ss
mov
je
in
cmp
cwtl
jb
int3
push
std
push
dec
dec
pop
sbb
sti
pop
xchg
sbb
aaa
mov
sub
pop
movsl
js
popf
inc
cmpsl
or
in
xor
lea
aam
testl
cwtl
xor
mov
pushf
ljmp
xchg
nop
xor
in
call
pusha
addr16
xor
mull
mov
ret
mov
dec
dec
andl
cmpsb
insl
mov
imul
xchg
mov
sub
sahf
mov
push
push
or
xor
test
mov
test
inc
xchg
sub
add
aad
hlt
and
enter
std
shlb
mov
gs
and
dec
inc
sbb
sub
es
pop
ficoms
es
adc
xchg
popa
popf
or
pop
mov
mov
stos
fwait
xchg
lret
js
cmp
hlt
imul
add
das
mov
mov
lea
clc
je
fs
stos
mov
aaa
push
fmul
cld
xor
iret
jg
leave
jno
clc
into
stos
inc
aam
mov
push
lods
scas
jp
sti
out
dec
cmpsb
mov
xor
in
sbb
and
sbb
inc
and
aam
mov
fcoml
arpl
adc
xchg
lcall
leave
xchg
test
pop
mov
cmc
les
mov
cmp
fwait
test
lahf
shlb
xchg
stos
mov
sub
xsaveopt
push
push
orb
pop
cs
inc
jg
lcall
push
jp
test
xchg
dec
mov
in
mov
lret
leave
xchg
scas
out
sbb
push
inc
aad
cmp
mov
push
xchg
ljmp
outsb
and
fwait
in
sub
inc
outsb
lahf
add
js
gs
movsb
ret
aad
cltd
repnz
jge
out
cs
fisubrl
mov
jecxz
jl
and
add
and
aas
push
subl
inc
test
inc
inc
test
mov
jbe
jb
repnz
and
int3
jmp
mov
das
mov
cmpsl
aad
xor
daa
xchg
dec
or
sbb
mov
or
addr16
push
push
subb
xchg
mov
jno
in
add
sbb
pop
push
or
xor
mov
pop
sub
and
stos
test
daa
loopne
cmp
jnp
and
sub
mov
and
fstpl
mov
das
cmp
xchg
mov
mov
pop
into
in
rorb
dec
rolb
mov
and
xor
push
pusha
mov
mov
adcb
push
or
addr16
dec
ljmp
je
adc
xor
out
decl
sti
out
dec
ret
and
mov
sbb
clc
flds
mov
mov
dec
movsl
xchg
stc
xchg
pop
mov
mov
fidivrl
and
xchg
bnd
je
rol
adc
adc
mov
outsl
push
inc
shr
dec
sub
or
jne
in
jge
cwtl
push
ret
sbb
call
pop
in
sbb
push
cmp
pop
adc
jg
push
inc
stc
mov
mov
xchg
jge
cmpsb
icebp
in
and
fwait
loopne
stos
mov
clc
sbb
push
out
inc
push
imul
inc
pop
and
mov
jno
mov
mov
out
int3
pop
dec
movsb
insl
or
ret
lcall
subb
lret
mulps
push
int
jns
inc
mov
add
insl
adc
mov
jle
std
lock
mov
push
xor
adc
mov
xlat
aas
rclb
xlat
in
pop
repnz
out
mov
imul
out
subl
out
inc
out
daa
jle
mov
orl
das
mov
outsl
inc
pop
loopne
mov
int3
lds
pop
mov
aas
ffree
mov
in
les
mov
call
inc
fwait
out
out
xchg
imul
adc
loop
ja
sbb
test
scas
dec
loopne
in
jae
rclb
outsb
dec
adc
repnz
add
inc
fists
ret
fs
aas
cmpb
xchg
insl
adc
out
pop
add
xchg
stos
loop
movsb
in
int3
das
pop
jp
cli
mov
fwait
cs
out
rclb
xchg
nopl
pop
fdivrl
jnp
add
jne
movsb
sbb
jbe
inc
pushf
aas
imul
mov
pop
in
xor
lock
sub
or
jg
leave
dec
aam
test
sarl
fnstsw
mov
push
popa
xor
testb
push
push
cmc
int
lods
andb
mov
aam
cmp
paddsw
icebp
pop
stos
mov
pop
sti
imul
xchg
push
jmp
xchg
or
lret
ljmp
sti
loopne
and
fwait
xchg
sarl
jge
jb
mov
xor
add
into
jle
push
movsl
mov
clc
dec
popf
mov
adc
mov
mov
mov
sub
lahf
xor
jp
adc
lahf
adc
or
rcrl
pop
and
dec
leave
mulb
inc
popa
add
je
jb
out
ret
dec
inc
mov
mov
pop
dec
mulb
inc
inc
jno
xlat
adc
pop
jno
lods
je
push
pop
mov
cmp
fucom
sbb
sub
pop
xchg
loope
or
push
jge
lret
xchg
mov
add
jae
scas
enter
jecxz
or
lret
push
es
xchg
ss
jmp
insl
jns
int
jns
inc
and
dec
add
mov
dec
adc
pop
jb
mov
arpl
out
dec
in
and
push
mov
cltd
sbb
ljmp
ret
idivl
inc
xor
sbb
cltd
xchg
movsl
inc
push
or
jge
pop
fstpt
stc
in
sbb
sarb
pop
mov
mov
inc
jb
and
push
inc
repnz
into
add
dec
leave
push
mov
adc
mov
push
lds
jecxz
or
cltd
popa
mov
mov
xchg
in
iret
mov
cmpsb
jecxz
fdiv
adc
out
hlt
stos
mov
pushf
insb
rcr
mov
sti
stc
jne
in
stos
xchg
jbe
pop
test
mov
ss
inc
pusha
lea
sbb
add
popa
jmp
test
cmp
push
mov
inc
pop
or
sbb
jns
mov
lret
cwtl
xchg
xor
cmp
out
in
mov
jne
movsl
adc
fistpll
sub
jecxz
xor
push
jl
rcll
out
les
shrb
inc
scas
pop
dec
ret
in
mov
add
ljmp
mov
add
aas
dec
sbb
and
pop
sbb
addr16
ret
jl
add
imul
push
pop
aas
sub
negb
mov
cld
or
scas
mov
lds
mov
icebp
and
ror
push
mov
sbb
lods
aaa
nop
fistpl
es
jae
mov
push
sub
shll
jnp
add
repz
sub
call
add
jne
cmp
aas
mov
xchg
adc
jne
movsb
jbe
aad
filds
and
stos
repnz
jg
pop
mov
pand
cmpsb
mov
inc
data16
je
xchg
je
mov
imul
ja
jecxz
mov
in
pop
push
leave
aam
ljmp
pop
xchg
repnz
add
pop
das
pushf
dec
pop
inc
es
add
mov
cmp
dec
sub
add
inc
pop
mov
mov
mov
mov
daa
jbe
mov
dec
pusha
cltd
repz
xchg
and
xchg
add
int
imul
stc
lcall
cmp
mov
xchg
or
xchg
xlat
pop
adc
pop
pop
or
and
ds
push
cmp
push
shlb
xor
lahf
xor
xchg
push
push
mov
stos
xchg
fwait
aas
xchg
cwtl
aas
and
mov
xor
subl
icebp
cmp
data16
pop
xchg
xor
xchg
adc
cli
les
sbb
xor
stc
cltd
rorb
sbb
fldl
push
pop
jo
or
arpl
dec
out
fldenv
bound
lods
mov
xor
or
out
fbld
sbb
and
mov
mov
inc
inc
push
hlt
cmp
ret
insl
data16
addr16
lahf
sub
shl
or
pop
test
call
fcomps
pop
imul
mov
sub
cmp
out
add
and
stc
ja
mov
mov
ljmp
add
mov
xchg
movl
frstor
bnd
ljmp
mov
insl
test
jo
loope
jp
xor
sub
cmp
add
cs
outsl
bound
dec
inc
xchg
xor
lds
sbb
mov
imul
xor
fwait
pop
mov
jnp
inc
xlat
jb
pop
imul
cmp
or
sub
inc
cs
mov
fidivrl
pop
pop
sbb
mov
es
xchg
cmp
mov
or
jp
pop
sahf
mov
test
pop
jg
fiaddl
jo
dec
jmp
dec
or
dec
dec
adc
cli
pop
push
dec
xchg
ret
rclb
faddl
gs
ds
lea
or
xchg
push
out
mov
lock
xor
push
adc
loop
pop
jns
xor
pop
mov
cld
lcall
inc
mov
jp
xchg
mov
inc
lods
mov
ror
scas
sbb
ds
cmp
mov
test
movsb
sub
sub
or
outsl
pop
cmp
hlt
in
mov
inc
dec
mov
mov
and
mov
popa
cwtl
jbe
test
insl
jge
add
in
fidivrl
aaa
xor
xor
mov
repnz
and
in
xchg
sbb
mov
lret
xor
adc
push
cmp
cmpsl
xchg
and
jnp
int
jnp
enter
add
adc
add
push
fadds
jle
push
ljmp
dec
mov
sbb
in
out
xchg
push
mov
je
cmp
inc
aam
pop
aas
jecxz
mov
out
sub
aaa
push
adc
jae
and
ja
add
out
sbb
jns
repnz
cmpsl
adc
imul
in
dec
push
dec
cmc
shlb
mov
insb
ret
xchg
mov
dec
pop
shrb
and
cmpsb
pop
or
fidivrl
xchg
mov
insl
pop
push
pop
je
rclb
and
fwait
pop
jae
js
js
dec
inc
pop
mov
cld
sbb
fimull
cmp
jne
sahf
pop
mov
lods
in
mov
sbb
cmpl
xchg
xlat
add
pusha
add
adc
sbb
inc
lahf
mov
neg
in
pusha
lahf
and
mov
iret
add
mov
bound
iret
jp
repnz
mov
rclb
and
int3
imul
pop
push
mov
es
data16
mov
jle
pinsrw
or
jmp
push
sbb
jo
js
lahf
push
or
sbb
fsubl
jp
aad
sbb
div
and
adc
inc
adc
mov
repz
outsb
pop
dec
add
inc
push
and
mov
out
call
std
xchg
scas
loope
lods
loope
add
int3
pop
cmp
movsb
out
insb
mov
mov
fs
out
or
jp
test
jge
pop
in
in
lea
or
jg
out
mov
ds
xlat
fwait
test
adc
xchg
shll
leave
dec
cli
sub
cmpsl
repz
mov
jmp
jg
cmp
mov
std
inc
jne
push
testb
fwait
cmp
decl
insl
add
fstp
xor
push
cmp
cli
and
adc
cli
xchg
shl
cwtl
add
cld
jbe
repnz
and
add
cmp
je
xor
or
jne
cmpxchg
pop
mov
fisubl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
pushl
not
sbb
pop
mov
dec
rcrb
pop
std
and
in
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
mull
jae
lret
fcoms
jo
insl
mov
test
insl
int3
mov
add
adc
lods
push
stc
sub
adc
out
push
mov
fmuls
xor
jno
rcrb
pop
mov
cmovo
std
ss
sbb
mov
mov
inc
pop
jns
cmp
std
mov
les
and
mov
mov
jno
sub
push
neg
stos
out
xor
pop
out
loope
sbb
mov
int3
andb
dec
jns
cmpsl
das
sub
inc
std
sub
sub
jno
mov
mov
mov
out
dec
pop
mov
cmovo
mov
mov
not
push
mov
loop
cmp
jnp
rcrb
pop
mov
idivl
sbb
mov
dec
rcrb
pop
mov
mov
sbb
pop
mov
not
sbb
pop
mov
notl
mov
add
cmp
jns
rcrb
pop
lods
and
in
out
sbb
pop
mov
not
sbb
pop
mov
sahf
rcrl
pop
jb
cmp
jnp
rcrb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
xorl
pop
popf
sub
in
not
sbb
pop
mov
lds
fstps
add
in
fldenv
fstps
jno
in
fstps
pop
andl
sbb
pop
mov
pop
rcrb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
pop
mov
not
sbb
sbb
cmp
jnp
ret
in
add
fcmovnu
adc
cld
cmpsl
aas
sub
dec
cmp
movsl
arpl
lret
jo
inc
repnz
jno
mov
fisttpll
arpl
pushf
into
push
jle
call
lret
xsave
jns
into
push
inc
pop
adc
jns
daa
daa
imul
ds
mov
icebp
outsl
lods
inc
or
out
jg
mov
adc
ret
pop
arpl
mov
movl
call
jb
lahf
adc
stos
repnz
mov
adc
pop
or
inc
cmpsb
push
sar
sbb
sti
mov
rcrl
loopne
jno
xchg
arpl
push
xor
arpl
mov
inc
gs
xor
incb
rcrl
sbb
jecxz
mov
lods
ret
mov
pop
cmp
mov
movsl
inc
xor
mull
dec
lahf
aas
cmp
mov
in
popfw
cmp
aas
sub
cmp
pop
cmp
pop
sbb
lahf
adc
or
adcl
add
loopne
rep
jae
cltd
push
mov
pop
and
fsubr
test
movsb
sub
stos
dec
loop
jecxz
movsl
jnp
dec
sarb
clc
mov
and
and
sub
dec
or
mov
out
test
fldcw
scas
sub
repnz
mov
adc
and
rorl
inc
int
movsl
inc
mov
scas
fistl
outsl
mov
mov
out
ficompl
sub
push
mov
xchg
and
cmp
popf
clc
scas
dec
and
lahf
adc
push
sbb
lcall
mov
stc
lret
imull
out
aas
inc
adc
inc
es
pop
shlb
jmp
cld
stos
mov
shll
cmp
decl
inc
lea
in
jecxz
loope
fbld
jp
cmp
lods
ss
movsl
cli
push
or
ss
insl
je
dec
outsb
push
outsl
scas
jle
push
xchg
mov
jbe
jbe
das
jae
cmpsb
xchg
jge
lret
flds
gs
cmp
mov
adc
mov
mov
cmp
addr16
arpl
in
jg
fdivrs
test
inc
jne
dec
ficoms
or
and
sub
xchg
adc
adc
inc
fisubrl
sub
loopne
push
cmp
stc
inc
dec
movsb
ret
inc
popf
pop
lds
mov
pop
mov
out
push
jg
call
aas
mulb
push
adc
clc
lods
push
shlb
cld
mov
inc
add
aaa
add
inc
imul
in
add
dec
in
sub
lods
sbb
lea
dec
cld
adc
sbb
jb
xchg
mov
push
jge
lahf
push
mov
in
daa
add
jle
jnp
push
adc
int
jno
jmp
enter
dec
lcall
pop
fldl
nop
pop
push
sbb
mov
test
cmpsl
scas
mov
mov
jmp
cmp
mov
cli
stos
add
stos
adc
addr16
test
stos
cmp
lret
jge
cmp
pop
dec
pop
mov
stos
cld
pop
push
mov
and
sub
xor
in
mov
cs
mov
jae
cli
repz
in
mov
les
fs
test
push
out
hlt
cli
lret
lods
add
push
mov
fisttpll
pop
mov
int3
fsub
in
loop
jp
jb
jmp
jno
fnstsw
aas
and
in
int3
add
or
call
int
ficompl
add
pushf
and
mov
imul
push
dec
mov
push
dec
dec
je
sub
push
sub
imul
mov
aam
call
fildll
jg
pop
loopne
mov
xchg
lods
adc
je
mov
es
mov
jns
push
shll
out
adc
repz
lods
add
mov
jmp
mov
in
ds
cmpsb
lods
or
flds
cmp
lods
std
fs
icebp
fld
adc
dec
test
inc
dec
lods
lods
mov
mov
insl
dec
mov
push
fs
push
inc
jnp
xorb
xchg
mov
push
add
mov
pushf
aas
movsl
dec
stos
sahf
shrl
jno
or
xor
sahf
or
or
mov
test
gs
jmp
les
enter
xchg
insl
xchg
mov
decb
js
adc
jle
sub
mov
je
hlt
repnz
icebp
outsl
test
fdivrs
fwait
xchg
sti
aad
jp
cmp
xlat
add
pop
out
push
aam
add
loope,pn
leave
fwait
outsb
jbe
lret
push
jge
paddb
sbb
cmpsb
cmp
data16
enter
es
hlt
mov
in
pop
fmuls
in
push
and
xor
push
mov
add
inc
mov
daa
fsts
test
push
dec
test
mov
icebp
pop
xchg
add
mov
fwait
iret
jl
mov
lret
enter
jg
and
mov
fsub
arpl
arpl
into
push
cmp
enter
arpl
das
and
inc
mov
nopl
cs
call
sbb
scas
test
or
repz
enter
cmc
adc
insb
dec
cmp
fildll
and
mov
cltd
inc
xchg
int
jle
clc
lret
test
in
cld
in
sub
push
cli
cmp
pushl
and
popa
bnd
push
xchg
mov
popf
insb
aas
iret
add
mov
or
insl
add
jns
roll
sbb
stc
lock
mov
cmp
stos
fsubrl
xor
dec
dec
mov
stos
lret
lcall
add
scas
or
pop
jbe
lods
in
inc
dec
mov
int3
jle
xchg
mov
or
sub
xchg
daa
xor
xor
add
mov
pop
pop
push
sti
adc
fnstenv
test
pop
sbb
jbe
or
pop
mov
addr16
outsb
je
mov
inc
inc
stc
pusha
cwtl
dec
scas
daa
stos
xor
cmp
das
ljmp
mov
data16
scas
push
fisttps
jb
mov
sub
mov
mov
pop
jecxz
xor
mov
out
sub
mov
loope
stos
add
mov
mov
fsubrs
xor
lret
lret
pushf
loop
cmp
adc
mov
fistpll
insl
fwait
in
push
mov
mov
mov
or
icebp
adc
sti
or
push
mov
popa
js
int
fs
push
mov
ret
sub
jbe
or
cld
outsl
imul
pop
rorb
stos
mov
popf
ss
jl
fnsave
mov
cwtl
frstor
ljmp
mov
or
and
inc
mov
ret
fsts
cltd
testl
sbb
in
jge
clc
sbb
aas
fxtract
ljmp
enter
xor
fisttpl
hlt
fsubr
loopne
xchg
mov
add
mov
pop
xor
lods
add
popa
out
mov
ret
or
xchg
in
shll
pop
inc
fistps
test
arpl
loop
and
ja
cs
push
rol
mov
in
add
aas
mov
push
movsl
out
and
and
sub
sbb
mov
in
pop
mov
addr16
add
xlat
or
mov
enter
push
ret
dec
cld
rolb
xchg
icebp
jo
or
inc
in
movsl
adcb
frstor
fsubrl
in
push
xchg
jle
callw
push
fisubrl
mov
lcall
std
cltd
mov
popa
movsb
fcompl
jl
inc
mov
mov
movsb
cmp
jne
cmp
xor
pop
fisubrs
mov
cmp
mov
xor
aam
std
sbb
xchg
es
inc
mov
imul
mov
shrl
dec
jae
out
daa
cmp
jg
fs
out
dec
aad
mov
inc
dec
enter
movsl
mov
orl
xor
push
mov
popl
adc
pop
adcb
lahf
lea
push
faddl
bound
and
inc
les
bound
cmpsb
lock
sbb
sbb
pop
out
int
push
mov
lretw
push
insb
leave
or
fstl
jae
fistpl
das
mov
test
inc
mov
outsb
movsb
rcrl
es
inc
out
ds
loope
loope
mov
mov
xchg
daa
imull
lcall
cld
subl
jge
xchg
loop
mov
into
jle,pn
movsb
jecxz
push
mov
mov
ret
dec
add
out
test
ss
xor
fwait
inc
sub
test
mov
lret
iret
subb
stos
insb
cs
inc
popa
insb
test
lea
push
or
cmp
sbb
adc
lcall
lods
sbb
inc
jle
sti
mov
jo
lcall
mov
neg
xorl
cmc
or
repz
mov
cli
lea
or
jns
scas
cmp
mov
jo
jg
outsl
rclb
add
push
and
push
shrl
mov
pop
mov
sub
mov
imul
mov
adc
test
incl
push
push
jae
adc
scas
ret
cltd
jns
repnz
shrb
add
mov
pop
pop
loope
sub
pop
ja
dec
test
xor
loop
xor
push
loope
decb
cmc
xchg
ja
fldenv
lea
je
jae
or
sahf
test
outsl
push
loope
dec
xchg
cs
inc
imul
add
ret
test
mov
addr16
push
xor
push
icebp
jge
cmp
stos
inc
pusha
fsub
adc
push
mov
cmp
int
scas
addr16
into
xchg
in
jl
mov
jne
xor
mov
inc
push
pop
inc
loope
sbb
mov
je
and
shr
imul
ret
aaa
cmpb
or
sbb
fsubrs
sbb
insb
push
pop
push
mov
or
mov
ljmp
xor
es
cwtl
fcoml
scas
adc
dec
mov
and
test
sbb
push
and
jns
jp
cli
test
xor
insl
addb
sbb
inc
das
adcb
test
movsb
ret
insl
into
lret
mov
sub
adc
or
xchg
or
loope
mov
pop
sti
jecxz
icebp
cmpsl
ljmp
mov
and
cmpl
jns
in
mov
cmp
mov
lock
xchg
push
xor
mov
cld
sar
or
mov
leave
xlat
testb
nop
scas
push
add
jecxz
xchg
bound
jg
mov
pop
inc
xchg
daa
mov
cli
loopne
push
scas
sbb
int
lret
jns
clc
cmpsb
dec
cmp
fsubrp
inc
out
arpl
cli
dec
lds
or
out
sbb
xor
clc
imul
js
enter
icebp
push
add
pop
adcl
movsb
push
loopne
stos
jb
jmp
loope
cmp
stc
xor
jp
insl
mov
push
xchg
out
jg
inc
inc
push
cli
push
pop
in
rcr
and
lock
out
imul
adc
xchg
or
mov
scas
and
sbb
rclb
repnz
in
sub
cmp
ljmp
rcll
ja
icebp
ret
cmp
mov
mov
pop
aad
pop
jl
sub
lea
movsb
pop
xor
insl
shll
ret
cmp
sbb
lahf
int3
jb
mov
dec
fstps
rorb
fwait
dec
mov
pusha
and
mov
mov
adc
rep
add
xor
inc
int
shlb
js
fs
xchg
and
stos
pop
adc
mov
outsb
mov
in
mov
jns
lcall
xchg
and
lock
jne
lea
adc
xor
add
or
fcmovu
sahf
movsl
sbb
push
ret
pop
test
fisubrs
pop
pop
loop
movhps
notl
in
mov
lock
push
mov
icebp
xchg
jmp
stos
xchg
push
jp
gs
pop
cmpsb
pop
imul
jnp
jge
jb
jl
rcrl
nop
fldl
and
mov
dec
fisttpl
outsl
xor
jnp
lods
adc
dec
mov
push
loopne
sahf
sub
sub
cmpsb
jg
xlat
adc
clc
jns
sbb
orl
in
daa
fbstp
dec
pushf
push
int3
hlt
jle
popf
pop
cli
imul
repz
add
scas
or
fsts
push
sub
fdivl
sub
jne
pop
sbb
imul
inc
call
lds
out
enter
xor
scas
ja
pop
addr16
xlat
push
xchg
sub
xchg
adc
mov
out
repnz
mov
jg
lahf
js
pop
jnp
scas
push
xchg
cmc
movsb
jl
repnz
push
ret
fisttps
xor
jnp
aaa
int3
pop
xchg
dec
push
jmp
add
dec
pop
sbb
mov
pushf
adc
enter
mov
popa
sub
out
sbb
xor
imul
enter
addr16
scas
std
or
repz
push
repz
aaa
and
jbe
jne
lret
cmp
mov
cmc
mov
scas
imull
push
xchg
jbe
pop
std
orl
push
cmpsb
sbb
stos
mov
cld
in
inc
inc
pop
xor
cld
or
insb
add
pop
pusha
out
imul
ret
lcall
ret
insl
jae
enter
popf
sbb
jle
cmpl
add
add
rcrb
add
shll
hlt
mov
das
dec
pop
repz
das
dec
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
