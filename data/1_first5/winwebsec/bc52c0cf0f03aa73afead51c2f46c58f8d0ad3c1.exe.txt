mov
data16
dec
dec
adc
insl
and
xchg
sbb
xchg
mov
cmp
and
or
cmc
cs
mov
dec
loopne
inc
mov
imul
insb
lock
shlb
xor
mov
jmp
rolb
mov
sub
data16
lods
mov
mov
cltd
cmp
push
ljmp
mov
sbb
or
xchg
sbb
add
mov
inc
push
jg
int
lea
or
aas
call
xchg
fwait
pop
loope
pop
inc
or
insl
mov
sbb
test
clc
inc
push
push
or
cld
mov
xchg
dec
dec
fsubrl
psllw
lahf
in
mov
loop
push
outsl
ja,pn
cmc
ja
add
not
push
dec
into
js
int
jle
call
jo
add
fld
nop
push
cltd
adc
sub
push
sbb
cmp
mov
fdivrl
xchg
cs
ljmp
loope
lret
xor
or
pop
sti
fists
test
xchg
jge
ds
push
push
popa
bswap
testl
and
fcmovb
mov
xchg
mov
dec
lret
hlt
cld
dec
adc
sbb
dec
pop
fwait
mov
mov
sbb
repz
mov
or
movsb
push
shll
xor
push
xchg
jo
and
mov
push
scas
push
rcrl
mov
mov
sbb
in
dec
sub
xchg
test
mov
mov
enter
rclb
dec
sub
and
jns
in
jns
inc
ja
scas
adc
add
mov
or
mov
sub
fisubrl
lock
push
loopne
insb
inc
xchg
stos
data16
fwait
pop
popa
icebp
mov
mov
sbb
iret
pop
icebp
lret
mov
lret
xor
icebp
out
mov
add
mov
mov
push
jp
sbb
sub
sahf
push
sbb
mov
xchg
imul
mov
pop
cmpsl
aaa
lea
jbe
sub
mov
xlat
sbb
xchg
mov
mov
test
cmp
out
rclb
xchg
cmpsl
jge
filds
je
xchg
push
repz
out
filds
jo
mov
popf
out
out
mov
xchg
or
push
scas
fidivrl
mov
clc
in
mov
xchg
mov
mov
sbb
mov
leave
mov
lahf
add
imul
xor
mov
imul
sarl
lahf
call
testl
sbb
test
lds
push
xchg
mov
cmc
ret
xchg
ficomps
sub
sbb
stos
fdivs
leave
cld
out
add
cmpsl
adc
pop
jns
sar
jge
cmpsb
push
insl
inc
dec
in
sbb
enter
in
mov
push
scas
aaa
icebp
push
ljmp
fs
imul
push
iret
mov
mov
jmp
dec
mov
lea
test
cmp
inc
or
mov
out
test
ret
xlat
das
sti
mov
loope
xchg
push
or
fsts
testb
sub
mov
xor
push
out
cld
lcall
sbb
popf
lret
je
scas
fcomip
push
xor
inc
pop
js
repz
dec
negl
or
pusha
aad
jmp
cmpsl
jo
loop
pop
cld
int
push
das
inc
int
jb
jg
mov
xchg
mov
mov
jg
mov
testb
or
sarl
push
ficoms
dec
test
aad
cmp
sbb
stos
mov
outsl
sbb
lahf
mov
mov
xor
jnp
mov
push
ficomps
popf
inc
popa
or
das
imul
xor
aad
loop
sub
or
int
incl
xor
add
pop
gs
cmp
pushw
jp
jno
mov
add
lds
fstpt
dec
xor
insl
pop
inc
jle
sub
or
xor
imul
push
outsl
push
pop
mov
adc
mov
dec
jle
mov
int
movsl
add
inc
inc
shl
dec
pop
sbb
jle
mov
test
dec
in
lods
adc
lds
push
into
fnstsw
inc
sub
pop
fisubl
scas
sbb
cwtl
mov
push
sub
clc
xchg
bound
gs
sahf
mov
dec
sbb
xlat
or
enter
push
sbbl
negl
add
mov
and
je
dec
cmp
jnp
adc
mov
pop
mov
bnd
sbbl
pop
mov
repz
and
fisubl
and
in
fs
test
rorb
and
in
sbb
inc
dec
ljmp
aas
pop
dec
pop
arpl
xor
xchg
sub
jae
fistps
sbb
cmp
lds
lds
stos
pushf
adc
adc
inc
in
mov
push
popf
mov
pop
negl
cmpsl
pop
pusha
pop
add
push
jbe
jne
fwait
es
movsl
inc
clc
fisubs
imul
lret
and
aas
inc
xchg
inc
dec
int
push
lahf
or
imul
and
pop
jae
xchg
mov
jecxz
in
mov
gs
sahf
cld
adc
mov
fiadds
jbe
push
dec
jbe
push
sub
cmp
hlt
sbb
adcl
mov
jl
jge
or
mov
mov
pop
movsl
jmp
lods
or
jb
pop
mov
and
add
movsb
mov
add
out
ds
push
mov
shll
bswap
mov
sub
and
or
js
mov
insl
xchg
mov
data16
ja
scas
adc
dec
push
ffree
loopne
ja
lods
sub
stos
xchg
or
xor
pushf
xchg
cmp
mov
andl
mov
xchg
push
in
inc
pop
mov
adcl
scas
xchg
sbb
sub
jno
jecxz
into
mov
lret
mov
out
mov
or
lcall
dec
popf
mov
mov
inc
and
es
fidivl
cmp
jmp
dec
cmp
jno
inc
sbb
mov
cli
jnp
xchg
cmpsl
push
clc
jo
adc
sbb
insb
das
aad
iret
cli
pusha
in
in
fadds
sahf
fsubrp
lods
pop
and
jnp
testl
les
mov
daa
data16
cmpsl
dec
pop
push
pop
in
cld
and
shl
jg
push
mov
adc
mov
divb
fadds
add
sub
sahf
sbb
adc
out
cmp
call
cmp
les
cmp
inc
and
aad
add
mov
fimuls
cltd
dec
xlat
xor
jge
sub
fadds
rolb
mov
cmc
in
inc
mov
add
jecxz
jbe
ror
movb
pop
sbb
and
xchg
fildl
sub
add
fwait
nop
movsb
sub
andl
and
inc
xor
jo
dec
jb
lahf
mov
lret
fdivp
pop
fsubrl
in
out
xchg
pop
pop
mov
jmp
sub
mov
mov
xor
push
jecxz
mov
fstpt
jbe
fldenv
sub
pop
lcall
ror
icebp
sarl
test
ror
cmp
lea
lcall
inc
cmp
clc
pusha
pop
pop
cltd
std
sbb
into
xchg
in
pop
daa
repnz
jmp
xor
nop
pushl
xlat
add
sub
gs
dec
int
jle
lods
push
arpl
rorb
lods
mov
push
pop
lods
lret
fcomip
and
xchg
pop
cmp
sbb
repnz
add
xchg
lahf
sbb
xchg
jle
jle
mov
outsl
push
cli
add
aaa
push
pusha
pop
mov
mov
in
out
dec
jle
cmp
adc
xchg
jns
inc
jmp
mov
add
popa
jns
add
loope
inc
push
pop
xor
mov
ret
sub
imul
cmp
mov
xor
lods
repz
fidivrl
lcall
lahf
lods
mov
shll
js
pop
mov
sub
js
into
fwait
cs
js
dec
mov
jbe
push
push
leave
inc
cmp
outsl
lahf
iret
rclb
xchg
clc
pop
in
adc
andb
xlat
lahf
mov
push
sahf
xchg
mov
sub
pop
sar
sub
rolb
pop
lret
lcall
jnp
push
and
aaa
and
and
cld
pop
imul
sub
xchg
rcrl
divl
push
bound
test
push
in
mov
xchg
push
cmp
inc
sbb
jae
ja
scas
stos
cmpsb
test
ss
in
xchg
fwait
movsb
jmp
sub
fwait
out
xchg
push
insl
imul
push
ds
cmp
aam
int
push
pusha
cli
stos
imul
inc
pop
cltd
pusha
push
test
ljmp
fdivp
cmpl
or
cmp
dec
scas
addr16
shlb
jbe
in
insb
mov
outsl
and
pushf
or
aad
xchg
test
add
cmpsl
sbb
cwtl
adc
inc
daa
xchg
loopne
jns
mov
pop
fnsave
mov
jl
mov
mov
lret
rolb
lods
aam
jl
pusha
data16
mov
xor
xchg
mov
dec
adc
int3
das
jp
or
mov
loop
cmp
sbb
cld
cmp
add
inc
ja
rolb
cmp
daa
mov
dec
mov
ja
sbb
adc
pop
push
cmp
add
pop
pop
arpl
push
test
out
mov
fwait
stos
shll
mov
mov
in
cli
jno
jno
push
pop
dec
sub
std
or
jecxz
outsl
outsb
xor
cmp
pop
test
fcmovnu
sarb
jl
je
jmp
movsb
pop
xor
mov
orb
loopne
imul
pop
adc
out
outsb
aaa
xor
fwait
out
jle
xchg
jg
cmpsl
and
stos
push
pop
jne
call
xlat
mov
in
lret
mov
scas
add
push
and
into
scas
loop
jmp
sbb
es
inc
imul
xor
inc
xchg
cmpsb
mov
shll
aam
cmpsl
shr
push
xchg
pop
add
dec
push
add
or
xor
inc
test
and
mov
push
cmp
or
mov
jmp
insb
jg
cmp
int
call
inc
push
or
mov
adc
cmp
aad
cli
push
push
scas
mov
adc
cwtl
sahf
pusha
jmp
dec
std
hlt
lahf
ficoml
leave
rcrb
push
or
dec
push
mov
xchg
fisttpll
ret
cwtl
scas
shlb
jne
ja
push
sbb
xacquire
lock
loopne
test
daa
mov
fadd
cmp
scas
add
ret
and
xor
mov
pop
pop
aaa
cmp
fisttpl
out
fbstp
adc
push
add
sub
sub
aas
shll
loopne
arpl
xchg
mov
mov
or
dec
es
pop
rcl
in
jecxz
pop
int
cmp
jmp
or
pop
mov
and
push
stc
mov
push
es
out
or
aad
insl
push
mov
ds
enter
push
dec
xchg
insb
adcl
cli
sub
addr16
ljmp
xchg
popf
pop
mov
xor
or
sub
dec
push
aam
xor
sbb
inc
cwtl
sub
rolb
and
shl
pop
xchg
lcall
fmuls
inc
pushf
dec
test
mov
clc
or
decb
lcall
push
imul
cmpsl
dec
or
sub
rorb
pop
cmp
push
inc
dec
imul
fst
movl
outsl
mov
and
or
xchg
movsl
rcl
mov
push
sbb
xor
or
inc
roll
cmpl
dec
cwtl
and
pop
add
sbb
push
icebp
out
or
cmpsb
pushf
in
fmull
sbb
addr16
jns
and
aam
lcall
arpl
test
test
sbb
or
lods
mov
rcll
push
jns
push
stos
cmpsl
xor
push
mov
add
rcrl
and
jnp
aaa
rolb
mov
mov
sbb
mov
in
in
sub
cmc
push
adc
mov
add
mov
into
ds
sub
xor
add
sbb
testb
cmp
mov
loope
inc
jae
jge
imul
test
movb
andnps
imul
push
je
shrl
popf
jg
out
jae
mov
cmpsl
jle
push
push
orb
js
jle
pop
daa
push
bound
es
pushf
cmp
daa
ljmp
std
icebp
fmull
clc
ds
push
mov
jl,pt
and
jge
jle
xor
mov
je
pop
xor
mov
das
fisubrs
lds
dec
shrl
or
addr16
mov
sbb
scas
mov
sbb
fnsave
movsb
divl
mov
fsubrl
cmp
inc
sub
cmp
test
mov
outsl
inc
and
jecxz
iret
cli
jl
sub
mov
not
fwait
iret
mov
clc
xchg
or
cmpsl
xchg
fstpl
jae
xor
dec
xchg
rorl
mov
testb
not
lret
pop
mov
push
inc
icebp
lret
or
cltd
sub
repz
lahf
dec
xchg
sbb
lret
aam
sbb
pop
xor
dec
enter
push
dec
push
xchg
test
push
repz
mov
fdivrp
jle
inc
sbb
dec
pop
fdivrs
hlt
jbe
loope
outsl
dec
mov
adc
jns
in
shlb
icebp
sti
cmp
and
nop
imul
out
stos
mov
fldcw
pop
cmp
dec
xchg
cmpsb
in
daa
iret
hlt
xchg
lret
pop
fcomps
int3
cmp
jae
stc
adc
outsl
sahf
mov
pop
sbb
cmp
jle
les
jns
fldt
daa
into
cwtl
cmovns
dec
sahf
and
stos
add
dec
sarl
xor
add
fwait
imul
loop
add
inc
outsb
cmpb
jb
dec
mov
lret
or
pop
sti
mov
pop
cmp
lret
repnz
sahf
jmp
je
jbe
ret
pop
sub
insl
dec
or
ljmp
xor
fistps
orb
push
jne
mov
adc
pop
jno
inc
mov
fiaddl
lods
cs
adc
pop
mov
ljmp
lret
nop
xchg
in
sub
mov
fbstp
iret
inc
pop
shll
ffree
fidivrl
lahf
cmpsb
std
out
out
in
pop
outsl
inc
mov
and
or
mov
in
inc
cmp
lods
rcl
loope
loopne
jle
sbb
jl
dec
mov
cmp
cmpsl
int
lock
mov
arpl
pop
addb
test
or
repnz
mov
leave
mov
mov
ret
xchg
iret
jo
out
add
dec
and
add
sub
jp
fdivrs
jl
test
sub
or
pop
lret
jmp
push
fs
in
push
out
pop
dec
push
lock
cld
loopne
adc
mov
jle
std
or
mov
push
lods
ret
cs
mov
jo
popf
ljmp
dec
das
mov
mov
mov
jb
sahf
andb
dec
out
and
jge
push
ret
dec
iret
push
adc
xor
sti
dec
out
fimull
sti
push
movb
and
push
dec
jmp
mov
dec
mov
cli
sub
ljmp
inc
arpl
push
push
imul
es
and
gs
mov
mov
roll
les
orl
and
jl
push
jp
test
xor
pusha
mov
pop
mov
mov
inc
jge
lret
sub
add
hlt
adc
je
popa
mov
out
dec
out
int3
sub
outsl
stos
ja
aaa
dec
adc
and
imul
cmp
fnstsw
jae
lods
cld
adc
stos
pop
xchg
and
or
xor
test
jae
and
mov
pop
movsb
mov
add
enter
push
add
pusha
push
es
and
cltd
sub
pop
daa
sbb
mov
clc
inc
lods
add
ds
loope
movb
inc
aam
or
in
cmp
lods
and
mov
add
inc
test
ljmp
mov
pusha
aam
or
jg
cmp
mull
inc
cmpsl
jbe
push
cmp
cwtl
adc
dec
jae
or
or
pusha
lret
dec
pushf
das
idivl
mov
adc
daa
imul
into
mov
fdivs
pushf
fs
cwtl
xchg
sub
scas
aam
sbb
and
and
inc
lahf
imul
pop
push
movsb
pop
mov
subb
lods
int3
les
repz
movsb
push
mov
adcb
fisttpl
sbb
les
jb
arpl
shl
cwtl
push
xchg
lock
sub
in
sbb
or
and
aam
inc
mov
sub
inc
out
ret
inc
ljmp
lret
jnp
ja
out
loope
mov
cmpsb
jno
cmp
lods
mov
sub
add
sahf
test
arpl
cld
cmpsb
fs
lods
sub
jge
and
cmp
jae
xor
cmp
std
mov
in
movsl
fxch
xor
mov
and
inc
jg
hlt
push
mull
pop
pop
stc
pop
sbb
subb
ror
movsl
out
push
pop
mov
mov
test
fidivrl
into
and
jno
jnp
add
mov
imul
sarb
jl
rcll
scas
push
xor
mov
mov
sub
rcll
sub
sahf
xor
inc
xchg
fsts
pusha
push
lods
int3
pop
push
add
jmp
cs
lds
and
mov
inc
call
cmp
jecxz
scas
bound
rcrl
mov
push
movsb
pop
mov
or
push
sub
jge
push
pop
outsl
leave
call
lds
jg
xlat
call
stc
or
push
fldl
adc
xor
push
mov
push
inc
mov
pop
lods
adc
out
icebp
cmp
and
sbbb
jns
cmp
and
fsubl
cmc
jae
pop
xchg
std
cmp
lds
popf
jp
rorb
and
gs
popf
xchg
mov
jmp
inc
jg
cltd
pop
shll
insb
outsb
insb
aaa
int
dec
adcb
in
jecxz
fcmovnb
gs
or
mov
jae
xor
adc
hlt
inc
ds
test
mov
outsl
ss
dec
xchg
mov
jge
scas
mov
add
jne
push
and
js
cmpsb
mov
pop
adc
push
sahf
xor
mov
test
hlt
xchg
sahf
ret
push
mov
outsl
cmpsb
adc
sbb
mov
nop
push
xor
nop
stos
dec
loopne
lcall
mov
sub
push
test
cmc
sub
scas
out
popf
xchg
push
test
lret
pop
gs
in
shrl
add
enter
arpl
pop
adc
jns
jae
pop
sahf
push
insl
mov
mov
daa
loope
hlt
inc
sahf
nop
cld
inc
movsb
fildll
and
jg
ljmp
jg
and
lds
dec
and
test
mov
cmp
push
in
lcall
outsl
inc
or
inc
push
push
push
movsl
add
mov
enter
fs
jge
popa
jno
and
add
and
cwtl
sbb
mov
lcall
lea
mov
out
fwait
mov
sub
jne
je
mov
ds
js
es
adc
mov
cmp
push
test
into
dec
gs
mov
dec
fists
push
out
pop
pop
in
xlat
data16
mov
push
les
pop
fnstsw
pop
sub
call
jle
repnz
adc
aaa
add
mov
mov
movsl
dec
add
mov
aaa
or
repnz
mov
rcll
mov
push
sbb
mov
cmp
daa
clc
shlb
scas
sahf
mov
imul
pop
jno
dec
add
lret
jp
mov
leave
mov
mov
negb
mov
jbe
loopne
fwait
mov
repnz
jg
jl
popf
scas
mov
mov
aas
test
imull
and
lahf
mov
dec
cmp
and
outsl
out
mov
pop
inc
aaa
cmp
push
addr16
xchg
fmuls
lds
js
mov
out
stos
cmp
or
loopne
mov
rorb
pop
clc
dec
sbb
gs
pop
and
out
pop
loop
in
fs
insb
mov
sbb
mov
shl
jp
xchg
testl
in
sub
dec
in
add
ret
add
popa
dec
stos
inc
jle
lret
mov
cld
xchg
pop
int
in
enter
inc
outsl
adc
orb
lcall
and
gs
int
and
insb
stos
sti
pop
mov
movsl
xchg
in
push
push
frstor
nop
sbb
mov
mov
in
ret
mov
dec
popa
lods
pop
or
je
mov
in
adc
aas
cmp
mov
push
mov
mov
jmp
or
rcll
mov
loopne
test
das
mov
add
rcrl
inc
pop
jecxz
inc
ret
mov
fwait
bound
lds
fs
xchg
shll
mov
dec
in
in
out
mov
adc
dec
inc
sbb
ds
mov
push
pop
jbe
in
cmp
shll
aad
bound
pop
in
mov
fcmovb
mov
aaa
fsubp
fsubr
cmc
inc
dec
inc
pusha
or
enter
hlt
mov
sbb
add
jno
ljmp
cmp
lahf
inc
fisubs
sbb
call
inc
and
mov
insl
ja
sub
sbb
xor
push
popf
mov
rorl
cmpsl
push
mov
mov
leave
jle
mov
es
mulb
into
aas
loopne
js
pop
adc
nopl
add
and
lcall
adc
xchg
fbstp
insl
out
sbb
cmc
push
mov
fcmovnu
mov
mov
pop
push
jg
lock
ja
mov
mov
add
stc
mov
mov
sub
jae
xlat
mov
dec
imul
xlat
dec
xchg
lods
jno
mov
adc
mov
push
cli
cli
fwait
scas
xchg
sbb
std
pushf
mov
add
xchg
rol
not
adc
insl
fwait
pop
mov
sbb
leave
jmp
aaa
dec
clc
xchg
xor
push
xor
push
mov
and
and
mov
out
push
je
mov
inc
push
lds
mov
pop
adc
mov
loope
or
pop
rol
fsubrs
add
jg
out
sub
sbb
call
mov
push
xor
fiaddl
xchg
in
mov
mov
mov
fidivrs
mov
mov
in
ljmp
bound
push
inc
js
sbb
mov
or
aaa
cmc
imul
pusha
lods
lods
inc
push
cltd
pop
xor
rolb
repnz
dec
mov
shl
mov
xchg
and
pusha
les
adc
dec
cmp
lret
lock
shlb
loop
jo
ss
push
push
inc
aad
out
jecxz
cld
stc
mov
xchg
ss
and
lods
inc
sbb
pop
or
addr16
sbb
mov
scas
pop
mov
fwait
mov
cmpsb
aam
xchg
into
mov
jnp
imul
aaa
inc
mov
cmpsl
dec
sbb
jge
add
mov
sti
inc
adc
in
push
and
fidivrs
xor
in
jo
mov
jae
lret
jg
in
mov
test
inc
cmpsl
sub
add
adc
mov
push
notb
lock
out
sub
xchg
out
stos
into
enter
mov
insl
es
push
or
jg
mov
mov
ja
out
jo
or
mov
inc
jecxz
inc
pop
jp
pop
stos
rcll
adc
sbb
push
mov
push
mov
daa
mov
test
fwait
cmpsl
jle
dec
mov
pusha
inc
ljmp
jmp
icebp
mov
add
cmpsl
cli
mov
cmp
insl
ret
arpl
sub
mov
push
fcomps
shlb
push
pop
and
mov
sti
jge
xlat
adc
sub
jp
cwtl
xor
sbbb
shl
dec
jle
enter
mov
mov
mov
cmp
hlt
xor
filds
or
or
sub
lea
iret
inc
mov
nop
jne
je
jg
data16
fbstp
inc
or
movsl
daa
insb
gs
test
dec
jns
rcrb
cmpb
call
leave
fadds
pop
out
cli
mov
mov
js
mov
popa
clc
adc
add
push
hlt
sub
mov
scas
mov
jne
stos
je
loopne
pop
cmpsl
sbb
inc
shlb
negl
inc
ret
and
sub
xor
jno
lcall
enter
sub
xor
repnz
sub
cmp
fidivrl
xchg
ljmp
fcoms
outsb
push
fnstcw
xchg
mov
cltd
lret
fwait
jmp
add
dec
mov
sbb
cld
cli
pop
in
popa
sub
in
sub
xchg
ja
repnz
add
sub
adc
adc
mov
out
dec
sbb
gs
add
insb
inc
mov
mov
ljmp
aaa
jno
mov
repnz
inc
and
movsb
xchg
jno
ret
shll
and
ret
sbb
cwtl
or
imull
mov
jmp
fs
loopne
lea
sahf
sbb
sub
lods
pop
and
insl
and
gs
cmpsb
setle
pop
xor
jae
leave
stos
or
inc
lock
movsl
xchg
sbb
xor
lods
repnz
inc
stc
xor
cmc
imul
rcll
jecxz
jecxz
mov
mov
adc
or
xchg
adc
int3
inc
push
cmp
outsb
jo
scas
insb
insb
ror
test
dec
sbb
shll
add
movsb
in
lods
mov
jno
aas
cmp
push
xor
push
mov
cmp
push
lahf
js
mov
push
pop
or
enter
iret
mov
push
add
bound
adc
scas
popf
xor
jns
jmp
pop
rol
add
pop
mov
fsub
lahf
xchg
dec
sbb
adc
xchg
imul
jg
roll
mov
add
stos
sbb
lods
dec
insb
mov
addr16
mov
xor
outsb
and
mov
dec
sub
xor
test
xchg
dec
in
push
adc
jecxz
cmp
lods
sub
js
inc
int
mov
mov
repnz
rcl
movsb
lcall
add
mov
dec
loope
test
pop
jmp
mov
cmp
xchg
pop
jne
je
pop
mov
mov
mov
mov
in
or
imul
in
dec
or
aas
shlb
out
cmpsl
pop
cmp
rorl
inc
mov
fsubl
mov
lock
incb
test
cmp
mov
jno
xor
fldenv
cli
sbb
mov
negb
push
push
sbbl
adc
rcrb
or
lcall
subb
lea
pop
lods
pop
je
mov
adc
lret
mov
pop
jg
cmp
and
notb
lods
inc
sbbb
es
sbb
inc
dec
lahf
movsl
jne
mov
pop
dec
adc
fmul
jne
adcb
inc
int3
gs
dec
mov
stc
mov
and
gs
addl
mov
inc
mov
std
push
mov
cmp
movsl
jne
xor
out
cmpsb
mov
filds
mov
insb
testl
sub
fsubrs
jmp
out
bound
aam
test
filds
xchg
fstpl
sahf
call
stos
stc
or
clc
loopne
test
fs
and
pop
mov
movsl
iret
stos
cltd
jne
frstor
popa
std
sbbl
sti
mov
out
leave
sub
addr16
and
ret
lret
sarb
lret
or
stc
leave
pop
xor
jmp
pop
xor
mov
clc
mov
cmpsl
lods
mov
daa
les
lods
ds
rcrl
mov
jmp
add
jnp
xlat
in
or
fs
jg
fsub
jno
cmpsb
int3
mov
imul
mov
mov
jno
dec
lds
add
sbb
inc
xor
cs
in
in
imul
jbe
fsubl
sub
push
xchg
ss
lock
jecxz
xor
enter
pop
daa
out
addr16
mov
jp
mov
xor
addr16
scas
xchg
shrb
jne
lods
ret
shll
sbb
shl
inc
aad
ret
jmp
xchg
aad
xor
stos
ja
dec
add
ds
inc
and
push
repz
stos
pop
lds
add
and
mov
xchg
flds
push
dec
lea
daa
mov
test
adc
movsl
mov
jge
fists
negl
push
xor
add
jns
push
inc
in
rorb
fisubl
push
cmp
ds
add
jmp
decb
stos
cmp
and
test
subl
adc
movsl
pop
cltd
push
push
call
add
jno
jp
test
add
add
pushf
push
sahf
dec
adc
add
jge
ret
pop
adc
cmpsb
sti
movsb
ret
icebp
push
jae
pop
test
inc
and
jae
das
sub
sub
testb
lds
inc
inc
or
fnsave
pop
xchg
dec
xchg
imul
cmpsl
pop
aad
push
or
mov
cmp
cwtl
jbe
loop
lret
add
sbb
test
stc
mov
repz
sbb
rolb
addl
jp
aaa
mov
sbb
aaa
pop
jg
dec
test
repz
arpl
xor
ss
inc
addr16
and
xor
lods
push
jnp
mov
and
sub
xlat
les
insb
xorl
ret
sbb
stc
xor
sahf
lret
mov
arpl
mov
ret
mov
repz
push
dec
xor
ss
xor
int3
mulb
out
insb
jmp
hlt
push
fstl
xor
in
cmp
xchg
mov
in
addb
cmp
jno
cwtl
jnp
ret
movsb
and
es
sarb
cs
adc
jo
enter
pushf
fisubrs
and
push
repz
or
loop
lods
fs
lahf
enter
cmpsl
lcall
push
xchg
xchg
mov
inc
mov
popa
jge
std
mov
sahf
cmp
mov
xchg
sbbb
inc
pop
jne
inc
adc
shll
cmc
fcomip
mov
addl
aas
es
cmp
xchg
rcrl
jne
mov
xor
cmc
adc
aam
jmp
lods
pop
loope
push
testb
and
loope
ds
mov
out
outsl
mov
out
adc
sub
and
jne
ret
pop
xor
mov
cli
popf
fisttps
and
ror
clc
mov
fs
push
shlb
insl
jge
stos
add
lret
rclb
jge
jnp
push
xlat
sbb
adc
xchg
shll
mov
pop
pushf
int3
sbb
in
inc
mov
loope
or
add
and
gs
push
or
insb
outsl
popa
outsl
jnp
dec
ss
outsb
testb
imul
push
mov
hlt
cmp
cmpsl
jae
pop
aam
push
popa
int
js
lea
mov
cmp
aad
data16
aad
add
jno
data16
cmp
adc
cmp
inc
sub
dec
push
jne
arpl
subl
or
ds
iret
xchg
out
scas
dec
push
mov
xor
ret
push
rcrb
hlt
in
jmp
les
outsb
out
into
dec
push
mov
push
and
fadds
push
gs
xchg
insb
mov
mov
pop
xor
js
popa
mov
sbb
mov
xchg
cmc
adc
hlt
popa
movsl
stc
and
pop
lods
lret
adc
repnz
xchg
cli
cmpsb
les
pushf
fwait
inc
scas
jecxz
test
ret
decl
or
inc
lret
movl
xorl
push
in
and
mov
push
xchg
push
pushf
icebp
ja
in
adc
aam
pop
pop
lds
jp
xchg
adc
test
insl
ficoml
lret
lret
ja
stc
cmp
jae
repnz
mov
icebp
pop
in
hlt
push
test
fcomi
in
cmp
mov
pop
sahf
xchg
or
in
lret
mov
fcomi
cmp
testl
mov
sbb
hlt
cltd
pop
ss
jae
cmp
jge
jecxz
shrb
mov
adc
mov
mov
leave
popf
lock
lret
popf
scas
ret
popa
and
cmp
sub
je
push
out
lret
nop
ror
mov
mov
fs
shlb
or
cmp
cmp
dec
addr16
sti
ret
clc
push
test
dec
scas
and
jae
jmp
mov
pushf
sub
mov
es
inc
mov
in
js
pop
and
mov
fs
mov
mov
pushf
rolb
push
pop
sahf
out
and
push
nop
mov
insl
xchg
clc
and
push
sahf
pop
das
cs
inc
push
call
push
jmp
in
fcoml
aaa
pop
or
dec
xchg
xor
cs
test
outsl
shlb
push
adcb
mov
pop
data16
cmp
jbe
call
add
mov
mov
paddb
les
stos
jmp
jle
sub
loope
fisttps
inc
sub
or
daa
stos
outsl
mov
jne
mov
sub
mov
lds
leave
mov
dec
dec
inc
testb
push
sub
clc
inc
stc
js
xor
nop
repnz
mulb
add
ljmp
jmp
pop
out
scas
test
ds
movsb
cmp
dec
loope
es
cld
push
mov
xor
repnz
mov
inc
in
fwait
in
sbb
in
imul
test
iret
or
dec
xor
std
loopne
enter
popf
iret
fs
dec
pop
sub
lret
popf
adc
push
mov
or
cmp
dec
cmp
mov
imul
loope
jg
roll
cltd
dec
sbb
lahf
lcall
cmpsb
stc
dec
orl
add
push
repnz
jmp
push
outsb
test
jp
ds
mov
pushf
xchg
scas
fwait
mov
es
pusha
push
add
dec
sti
stos
push
mov
dec
mov
sbb
and
mov
mov
pop
cmp
das
inc
pop
push
lods
inc
sub
fldenv
popf
adc
jmp
xchg
loop
mov
fistpll
mov
arpl
cmp
cld
leave
movsb
mov
and
cmp
shrb
or
pop
in
loop
sbbl
mov
stc
jle
sbb
and
add
adc
nop
stos
mov
cmp
jecxz
cli
fnstenv
mov
sbb
inc
xchg
mov
pop
inc
add
minps
and
mov
cwtl
or
mov
push
push
adc
pop
hlt
ficomps
sbb
push
jo
int3
pop
pop
or
dec
lds
mov
jo
jne
insl
adc
sub
mov
dec
mov
shll
shll
pop
fdivrs
adc
push
push
lods
pop
mov
xchg
ds
jge
mov
cmp
mov
jae
aas
sbb
mov
lds
add
lcall
jl
mov
ret
loopne
mov
gs
stos
mov
sbb
movsl
sahf
arpl
aaa
aas
sbb
push
cwtl
rcl
out
cmc
xchg
lea
and
fidivrs
sbb
sbb
jg
idivl
dec
test
or
fwait
inc
push
int
sub
and
push
daa
pop
mov
xor
sub
jge
lea
fs
push
mov
sub
or
jecxz
cmpsl
mov
inc
jne
jb
scas
cmc
add
or
add
and
sub
adc
push
ljmp
cmp
mov
mov
add
and
xchg
cli
call
cmp
call
xor
pop
and
mov
call
mov
xlat
xchg
repz
lahf
add
aam
addl
outsl
clc
pop
jp
iret
jae
pusha
stos
sbb
popf
jb
xchg
jns
stos
repnz
adc
mov
les
out
insl
dec
mov
push
enter
lods
sahf
dec
out
je
cld
mov
cmp
rol
loopne
repz
cmp
push
repz
jnp
pushf
sahf
mov
or
in
xor
jno
mov
and
sbb
scas
mov
fdivp
cmp
inc
out
mov
ss
push
test
data16
insl
inc
mov
jl
ficompl
sar
jnp
dec
adc
jmp
jno
or
subb
nop
ss
xchg
daa
mov
popf
xlat
fmuls
inc
cmp
cmp
or
push
add
dec
xor
pusha
or
fnsave
pop
and
sbb
sub
sbb
cmpl
enter
orl
das
pop
inc
push
mov
or
mov
jmp
insl
mov
aad
or
in
shll
jge
mov
xorl
xor
mov
sbb
jb
call
in
cwtl
push
mov
loope
or
inc
imul
inc
jg
lret
mov
jo
pop
in
in
push
push
add
mov
mov
dec
xor
cmp
cld
addr16
in
or
rolb
cwtl
jbe
add
stos
add
fcompl
cli
scas
sub
lcall
std
mov
mov
cltd
shll
sub
inc
xchg
daa
mov
inc
jmp
pushf
jp
test
mov
enter
mov
pop
stc
cmp
aas
jno
enter
cmpsl
dec
testb
dec
fdivrp
add
pop
movsb
xchg
inc
dec
in
es
inc
cmp
out
fimull
mov
icebp
jg
roll
ret
sub
pusha
mov
jnp
arpl
enter
int
or
dec
addl
xor
cli
ret
std
pop
int3
outsb
or
xor
dec
test
add
mov
les
pushf
inc
popa
sub
add
cli
int3
ja
inc
mov
clc
mov
push
cmp
cmp
jb
add
shl
lock
pop
pop
insl
cld
clc
out
push
stos
lahf
push
mov
push
stos
xor
push
add
jp
add
lock
in
add
adc
mov
fwait
adc
add
and
shll
imul
jno
out
loope
lock
icebp
fistpl
es
jae
js
and
jne
and
mov
jecxz
mov
mov
inc
pop
xchg
repz
lret
cmp
subb
adc
inc
lds
lret
clc
sbb
cltd
fs
divl
repnz
inc
dec
xor
je
sub
enter
lahf
fstl
shlb
pushf
lahf
std
jecxz
and
push
dec
inc
loope
xor
aas
and
adc
fcoml
push
je
stos
inc
pop
outsl
test
int3
gs
lock
or
or
and
jp
iret
mov
mov
lahf
lahf
insb
fmull
sbb
dec
test
negl
mov
pushf
sbb
lahf
popa
bound
lods
aas
cmpsb
mov
xchg
shr
inc
int
push
mov
push
mov
pop
mov
or
xor
sub
rolb
ljmp
testb
adc
in
aaa
aad
pop
in
jge
imul
pop
and
mov
xchg
stos
sbb
mov
and
jg
cmp
insb
push
xchg
xchg
and
sub
sbb
mov
loop
aaa
test
insl
mov
stos
movsl
push
fwait
lret
mov
stos
add
adc
hlt
mov
call
xor
inc
inc
cwtl
mov
ret
mov
sub
pop
jbe
xor
mov
inc
sahf
int
push
cs
dec
push
out
xor
subl
or
xor
mov
push
mov
xchg
ror
lock
gs
insl
sub
sub
out
mov
lahf
and
pop
mov
cmpsl
call
push
jns
push
cwtl
sahf
jbe
mov
stos
dec
mov
ljmp
xor
jle
lods
inc
clc
lods
test
or
andb
xchg
adc
lcall
les
lods
pop
out
clc
push
jnp
sub
inc
rclb
inc
xchg
push
rcr
fdivrl
inc
rorl
push
sbb
xor
add
mov
lods
ds
inc
cmp
xlat
sub
ds
dec
test
push
lock
movsb
push
int3
stc
push
adc
dec
mov
jl
lock
std
leave
mov
xor
les
rorb
add
or
push
in
les
lods
dec
dec
je
lods
or
dec
testb
inc
out
arpl
int3
push
push
mov
dec
sbb
jae
add
out
stos
xor
and
das
adc
push
push
mov
jbe
cmpsb
jl
dec
cmp
pushf
sti
mov
mov
push
pop
cltd
ret
pop
mov
or
ja
idivb
loopne
dec
aam
stos
bound
sub
mov
push
fisubs
mov
push
gs
cli
bound
xor
mov
push
or
inc
inc
and
loop
or
loopne
mov
mov
mov
in
xor
in
mov
cmpsl
inc
jno
dec
pushl
fidivs
push
pop
popa
fdivs
xor
xor
push
sti
xor
push
mov
cld
cmpsl
add
jnp
xor
lods
dec
push
and
mov
mov
add
lods
insl
pop
xchg
xor
dec
in
pop
mov
dec
sbb
mov
aas
aam
sbb
sarb
stc
call
insl
mov
mov
cmpsb
xchg
dec
adc
dec
inc
mov
push
cmpb
popa
and
ss
sub
ja
ret
std
scas
inc
push
ret
xchg
test
sbb
sbb
pusha
xor
pushf
nop
push
sub
rcr
inc
sub
xchg
adc
add
shl
sub
pop
bound
lea
push
fstpl
xchg
sbbb
mov
js
cwtl
stos
or
xor
mov
xor
pop
sbb
iret
add
push
mov
xor
out
addr16
ficompl
mov
mov
imul
xchg
repnz
jl
mov
sub
lahf
dec
shlb
arpl
adc
std
pusha
mov
mov
add
insl
bound
cmp
inc
pop
iret
mov
inc
push
sbb
sbb
insl
add
jmp
add
pop
pop
loop
je
jmp
xchg
test
add
dec
pop
in
sbb
cli
sbb
adc
push
mov
rcrl
push
dec
pop
and
pop
data16
int
aam
imul
add
xor
adc
jge
mov
push
inc
fnstsw
bound
mov
pop
je
push
cmp
pop
decb
add
add
and
lock
jne
lret
sbb
pop
cld
xor
mov
pushf
pop
loop
das
out
sti
pusha
add
jne
jmp
icebp
lahf
mov
cwtl
mov
pop
push
cld
mov
inc
mov
stc
aaa
xor
adc
aas
adc
and
je
dec
mulb
mov
mov
inc
aaa
ficomps
pop
sbb
leave
sbb
pop
mov
and
jns
nop/reserved
jl
add
mov
arpl
pushf
jle
ds
lret
pushf
adc
mov
incb
sarl
out
out
and
cmp
lea
das
imul
cmp
inc
dec
jae
movsl
mov
cmp
jmp
mov
lcall
sub
push
push
js
inc
sub
lret
das
push
stos
mov
sub
adc
test
popf
and
inc
mov
sbb
stc
xchg
ret
iret
shl
push
adcb
aad
sbb
mov
in
popa
fcompl
adc
cmp
cmp
and
mov
into
test
or
fcomip
sahf
adc
loope
lea
repnz
test
mov
scas
aas
inc
ror
ljmp
fisubl
cmp
lock
scas
dec
and
jns
shlb
in
push
and
test
je
pushf
sbb
or
xchg
push
push
and
pusha
movsb
inc
xor
cltd
lock
pop
inc
sub
mov
jecxz
icebp
aam
movsl
sub
insb
cmp
mov
arpl
xchg
cmp
adc
push
jl
call
cmpsb
jmp
xchg
or
mov
idiv
or
orb
jp
in
add
out
lahf
adc
ret
stos
idivl
imulb
cmpsb
jmp
cmpsl
js
popf
jbe
mulb
in
mov
ds
pop
inc
jno
adc
jge
jg
xchg
pop
fsubl
or
js
loopne
sub
aad
loop
mull
fwait
lcall
cwtl
ret
xor
loopne
insb
xlat
xlat
sub
cmp
sub
xchg
push
mov
fidivl
jo
push
andl
xor
shrl
mov
cmc
jne
shr
sub
push
ret
std
mull
ja
sub
loop
dec
xchg
mov
inc
iret
mov
cmp
adc
ds
das
popa
testl
nop
xor
jae
push
sub
adc
nop
jbe
sbb
adc
inc
mov
ja
sub
call
and
xlat
cmp
cmp
movsb
xlat
add
xchg
dec
out
mov
jo
shr
mov
inc
mov
inc
mov
decb
mov
inc
jle
pop
add
fnstsw
or
cmp
dec
loopne
fs
adc
cmp
xchg
int
push
jb
les
insb
xor
mov
sub
sbb
imul
mov
lods
les
push
mov
outsb
push
push
repz
sub
jecxz
fimull
mov
fidivrs
push
add
test
jno
into
mov
mov
arpl
jne
lahf
cmpsl
push
filds
das
jns
daa
out
pop
fadd
xchg
scas
mov
push
in
mov
mov
xchg
pop
in
shll
pop
test
psllw
sbb
xchg
xor
push
push
push
stos
roll
int
lahf
cmp
xchg
test
cli
je
cmp
mov
cmp
in
jo
pushf
mov
xor
pop
mov
outsl
mov
cmp
test
dec
sbb
sub
add
out
fstps
daa
xor
hlt
cmpsl
add
rol
push
mov
test
test
sbb
sub
cmp
lods
inc
or
xchg
in
mov
es
nop
test
mov
popa
push
pop
lock
dec
xlat
add
lds
mov
cmp
inc
sub
mov
dec
or
jmp
scas
mov
sbb
cmp
test
jge
push
and
lock
add
mov
push
mov
gs
and
push
inc
fsubl
pushf
insb
xchg
in
xor
pushf
aas
inc
adc
stos
cwtl
mov
movsl
cmp
mov
test
ret
push
inc
sub
dec
mov
ljmp
icebp
ficoml
sub
pop
and
imul
stos
icebp
int3
je
push
mov
inc
jmp
sbb
jmp
push
sub
and
sahf
pop
jb
insb
sbb
fistps
das
pop
adc
jno
aaa
mov
int3
pop
xchg
cmp
lahf
jge
jbe
movsb
cli
push
sub
test
jb
xlat
test
orl
sub
fcompl
stc
xchg
mov
inc
mov
dec
fs
jmp
in
mov
outsl
adc
dec
cmp
xor
movsb
push
adc
jno
andb
dec
test
ffree
pop
cmp
adc
ljmp
mov
xchg
sti
xchg
in
sahf
push
sbb
push
sbb
cld
xor
daa
add
sbb
pushf
xor
push
xor
xchg
adc
or
adc
movsb
or
scas
pop
xor
push
cld
ss
pop
push
dec
clc
push
sbb
clc
inc
adc
fsubl
mov
xor
icebp
icebp
xchg
mov
mov
daa
and
adc
loopne
jno
jnp
jno
cwtl
cmovne
fists
dec
testl
stos
and
dec
ret
and
pop
sbb
adc
outsl
or
xor
cld
imul
imulb
ret
mov
inc
sbb
and
pop
daa
pusha
add
jmp
push
sbb
pusha
shlb
mov
fwait
sahf
or
rorb
ret
test
push
stc
sub
xor
or
mov
loope
cmp
and
cli
and
nop
rolb
mov
out
call
adc
xchg
mov
push
xor
or
sbb
sbb
lret
sti
push
pop
fwait
sbb
lock
outsl
add
mov
fdivrs
lods
notb
pop
mov
lods
in
mov
sbb
int3
push
ljmp
mov
jle
bound
popf
in
mov
lcall
es
cmc
int3
pop
dec
ret
mov
mov
test
sbb
cs
or
cmp
adc
sbb
ljmp
pusha
xor
fnstsw
push
mov
aad
xlat
xchg
fucom
push
sti
mov
cltd
jmp
cmp
lahf
xchg
sti
xchg
imul
shlb
mov
ljmp
scas
test
mov
loope
popf
or
mov
into
sub
push
xchg
mov
fidivrs
xor
lock
int
jb
fsubrs
mov
mov
mov
stos
sahf
test
cmp
xor
xor
rorb
push
or
xchg
add
or
mov
cwtl
add
in
xchg
or
fmuls
popf
inc
popf
aaa
fists
or
out
mov
ret
xor
out
aam
fdiv
mov
lock
iret
mov
cld
pusha
lahf
dec
fdivl
imul
data16
add
loope
imul
mov
rcll
mov
repz
rolb
sbb
dec
adc
insl
mov
test
fwait
add
jns
fldl
xchg
clc
and
sub
adc
movsb
xor
in
mov
sahf
jne
in
js
shlb
or
pop
dec
pop
adc
cltd
xor
pop
gs
adc
lcall
and
xchg
leave
pop
icebp
imul
std
mov
pop
addr16
cmp
mov
popa
sub
clc
dec
push
inc
lods
int3
push
loope
icebp
ss
std
adc
outsl
adc
and
xchg
lods
stc
or
sbb
popf
or
lea
pushf
mov
add
data16
stc
shl
sub
out
mov
inc
jne
jbe
pop
sub
repz
jae
pop
scas
icebp
adc
and
pop
sub
out
fisttpl
and
sub
jae
test
lahf
lahf
bound
mov
cmp
xchg
test
and
xlat
fists
xor
xchg
pop
or
sbb
jp
iret
add
shrb
xchg
loop
cmp
mov
mov
push
out
stos
xchg
out
and
jo
mov
repz
stos
pop
jg
mov
lock
cltd
popa
dec
sti
and
int
adc
adc
repz
jnp
and
and
aas
dec
jge
inc
pop
or
ror
das
pusha
arpl
ljmp
ss
jae
popa
cmpsl
mov
dec
dec
xor
rorl
adc
pop
add
cmc
mov
cmp
in
push
fsubl
fwait
adc
jno
jle
iret
xchg
xor
jns
pop
sbb
dec
pop
aam
mov
pop
sub
mov
bnd
lea
pop
es
sub
mov
mov
movhps
repnz
pop
aas
in
xchg
leave
xor
push
mov
mov
enter
into
xchg
and
neg
test
idiv
jns
sar
cli
lods
cmp
dec
adc
stc
cmc
xchg
or
pusha
shlb
jp
sbb
in
cmp
outsb
push
fwait
mov
rclb
jl
jge
or
in
sub
leave
and
sbb
mov
xchg
bound
inc
addr16
mov
insb
stos
cmp
insb
sbb
add
xchg
out
xchg
lea
mov
stos
mov
mov
fadd
ds
aad
aaa
or
and
jne
and
lds
repz
jmp
das
or
inc
adc
mov
aam
hlt
inc
in
in
cmc
push
cli
and
push
fisttps
cmp
or
sahf
push
and
add
cltd
clc
pop
mov
testl
adc
mov
leave
adc
mov
rcll
xchg
outsl
cs
sub
dec
das
fs
sbb
push
push
repnz
add
pop
jb
pop
xor
int
shll
jbe
jp
std
mov
pop
lea
bound
loop
fstpl
jnp
xor
inc
sub
int
bound
xor
lods
lcall
xchg
mov
lock
inc
inc
jmp
popa
pop
ljmp
cmc
ss
cli
imull
pushf
out
xor
es
inc
xor
mov
hlt
pop
outsb
repnz
adc
enter
shll
out
and
jns
cld
flds
xchg
int
and
mov
cltd
insb
repnz
add
push
mov
jl
add
lea
aaa
test
fisubs
fistl
movsl
pop
xor
dec
in
mov
adc
adc
mov
std
dec
mov
imul
popf
mov
mov
mov
cmp
jl
xchg
mov
fwait
and
filds
ss
dec
and
dec
xor
in
pop
xchg
and
and
lahf
push
shrl
xor
fxch
inc
push
push
sar
xchg
rolb
and
and
or
ret
inc
xchg
pushf
in
mov
inc
mov
sbb
into
pushf
mov
iret
lret
das
push
and
push
xor
repz
enter
mov
jb
push
push
rcr
cs
rorb
testb
xlat
sbb
fdivs
mov
daa
lods
inc
push
or
and
xor
in
imul
push
adcl
movsb
outsl
xchg
call
iret
div
push
daa
jmp
push
cwtl
sti
pop
push
in
mov
filds
xchg
testl
xchg
call
push
std
dec
insl
stos
lea
jp
pop
insb
insl
mov
mov
push
mov
xchg
stos
xor
dec
cmc
or
in
mov
xchg
nop
xchg
dec
mov
or
int
stos
scas
and
mov
call
shlb
xchg
mov
add
arpl
std
push
ds
shll
xor
data16
imul
push
data16
inc
xchg
push
inc
fadds
out
fmul
daa
xlat
sub
fistps
rcrl
xlat
fists
fadd
jle
in
push
jmp
adc
mov
push
mov
add
dec
ja
xor
push
outsb
call
xor
cmpsb
pop
xlat
sub
cmc
icebp
jbe
mov
inc
mov
inc
jo
stos
inc
rorb
in
and
xor
jbe
outsb
cmp
xchg
sbb
push
aas
push
pop
lcall
in
or
push
stc
jp
xchg
cld
mov
les
repz
mov
lcall
leave
pop
orb
jbe
imul
xchg
in
jne
pop
lahf
pop
mov
outsl
mov
jno
out
jno
lea
outsl
xor
repz
repnz
and
push
or
pop
cmpsb
add
push
mov
pop
ret
sub
and
adcl
dec
mov
frstor
add
sbb
mov
sbb
xor
xchg
inc
sub
push
adc
add
sbb
pop
lea
mov
repz
outsb
pop
aam
add
mov
test
in
in
fucom
sbb
sub
test
fstp
mov
inc
out
rorl
aaa
aam
and
sbb
mov
test
jl
mov
iret
hlt
repnz
add
aas
mov
cmp
inc
rcll
js
add
lahf
lahf
lret
stos
and
xor
sbb
stc
and
dec
push
test
xchg
push
xlat
sarb
cmp
jg
pop
aam
insl
dec
jl
jmp
xchg
je
addr16
sub
rcrl
clc
jae
inc
sbb
mov
pop
movsb
out
jo
daa
xchg
loop
xlat
adcl
loopne
clc
test
add
scas
out
jl
je
icebp
rclb
sub
or
jmp
xor
push
ret
inc
xor
pop
mov
dec
iret
test
hlt
cs
in
data16
aas
mov
iret
lahf
cmp
or
orl
mov
js
or
jns
xor
faddp
adc
dec
and
fldcw
movsl
les
xor
dec
pop
repz
ret
mov
pop
inc
shll
repz
das
mov
jle
arpl
mov
out
dec
xchg
xor
jp
out
adc
push
sub
inc
pop
mov
popaw
popf
adc
mov
cwtl
add
mov
in
loop
int3
xchg
cmp
dec
push
es
xchg
mov
mov
cwtl
mov
pop
sub
inc
icebp
ds
or
push
ret
mov
mov
fildl
xchg
mov
pop
rcrl
adc
fcoml
out
or
inc
xor
mov
inc
inc
sbb
mulb
dec
insb
out
ja
pop
mov
rcrl
lea
aam
mov
lret
shl
sbb
cmc
data16
incl
cmc
xchg
jns
ja
fstps
pop
xchg
inc
adc
mov
jns
bound
imul
push
enter
lods
testl
push
or
clc
ret
dec
sti
lret
lea
xlat
add
out
roll
xchg
adc
popa
ja
mov
xor
sbb
xor
loope
xchg
arpl
fildl
mov
and
sub
jno
stos
icebp
sbb
in
aad
movsl
pop
mov
daa
mov
adc
xor
sar
leave
sub
andb
rorb
nop
lret
xor
xchg
outsl
adc
shrd
pop
lea
or
jns
jbe
cmp
mov
pop
bnd
lcall
jmp
push
mov
rorl
in
mov
pop
pop
ret
mov
adc
cmp
cmp
scas
mov
push
out
lcall
mov
cli
ret
sub
jecxz
test
jne
shlb
jb
ret
cmp
and
rcrl
call
shlb
pusha
dec
jmp
and
add
js
test
lret
jno
xchg
nop
push
xchg
dec
rorl
jecxz
outsb
jbe
mov
jmp
lock
jbe
enter
push
push
fisubrs
frstor
jmp
mov
jno
imul
enter
cmpsb
out
dec
add
es
mov
cmpsl
mov
aas
gs
mov
in
arpl
sub
lock
call
and
add
test
out
es
es
out
fucomi
adc
pusha
sub
jmp
mov
mov
jecxz
inc
lahf
stos
and
push
pop
mov
inc
loopne
and
test
mov
mov
inc
outsb
or
in
outsl
xlat
imul
mov
ja
test
push
cmp
in
adc
push
dec
add
orb
leave
xchg
jl
mov
push
adc
fidivs
sbb
jns
xchg
pop
pop
add
push
fisttpl
data16
push
xor
fnstcw
mov
imul
mov
xchg
mov
fsubr
aam
push
sahf
cmpsb
jecxz
add
jns
jp
jmp
pop
xor
cld
arpl
mov
cli
add
jbe
ficoms
xor
in
jge
xor
in
and
xchg
push
xor
aad
mov
mov
lock
mov
testb
test
inc
in
jbe
xchg
jo
xchg
mov
add
loopne
jnp
mov
les
and
push
aaa
inc
cmp
aad
adc
rcrb
je
xlat
fmul
adc
sbb
aas
pop
stos
les
fisttpll
out
dec
stos
jl
inc
divl
xor
jl
fst
jp
inc
pusha
fs
pusha
push
xchg
out
sahf
cmp
mov
je
divb
nop
cmp
mov
in
mov
mov
sbb
out
cli
imul
jmp
ja
cmp
sbb
sbb
cmc
mov
cltd
dec
mov
stc
jge
mov
loope
cld
pop
cmc
stos
in
rcrl
push
or
xchg
test
push
pushf
mov
rcll
push
sub
sbb
push
ja
adc
mov
inc
or
mull
sbb
fwait
inc
sub
data16
shll
or
pop
push
push
adcl
outsb
jecxz
call
sub
push
mov
lods
xchg
dec
movsl
sub
adc
lret
outsb
insb
ret
leave
fidivl
push
mov
inc
cmp
gs
seto
xor
xorl
jmp
add
int3
fisttpl
sbb
fadds
roll
inc
push
mov
sbb
mov
push
mov
in
mov
xchg
and
mov
mov
into
fldl
lret
xchg
dec
arpl
in
ret
out
popa
mov
inc
gs
aaa
adc
pop
cmc
xorl
enter
jle
pop
ds
push
mov
ss
aas
sar
rcrl
jns
xlat
test
mov
adc
fsubl
add
mov
jge
insl
or
ljmp
cmpsb
mov
dec
inc
cmpsl
pushf
je
js
push
outsl
das
push
out
pop
ret
cmp
cmpsl
cmp
jmp
out
leave
sahf
sahf
popa
fstl
cmc
push
jle
mov
mov
jne
jp
xchg
xchg
inc
ret
into
cld
cld
xchg
mov
cld
cli
cmp
mov
push
mov
sub
ds
push
nop
leave
fisubl
fldl
jbe
sahf
mov
stos
dec
mov
add
mov
xor
xor
int
stc
pop
in
xchg
sub
faddl
cld
push
push
into
add
mov
mov
add
out
aam
sahf
pushf
sbb
andl
popa
mov
sbb
pop
aaa
lods
mov
popa
daa
xor
shlb
aad
push
pusha
loop
and
pop
dec
shrb
mov
loope
pop
sbb
and
push
subl
popf
in
jmp
xchg
cmp
cli
xor
cmc
pop
stc
dec
dec
pop
mov
or
xchg
jbe
out
std
pop
daa
mov
push
mov
mov
xlat
aad
jns
mov
popf
mov
out
aad
and
aad
stos
inc
fimuls
inc
push
and
addr16
test
mov
sub
push
xchg
mov
jecxz
mov
in
ret
mov
cmp
sub
mov
aam
mov
fidivs
enter
push
add
inc
adc
dec
cmp
jo
in
push
add
dec
test
xor
xchg
popa
push
push
xchg
xlat
dec
lds
push
or
sub
fstpl
push
jbe
pop
jecxz
cltd
cltd
mov
repnz
aaa
pop
in
dec
sub
xlat
pop
or
and
mov
xchg
das
pop
jmp
into
adc
mov
popa
inc
imul
lret
xor
add
shrb
xchg
mov
inc
or
mov
imul
test
mov
in
push
call
fstpt
mov
sbb
testb
mov
mov
adc
cmp
scas
into
xchg
pusha
sbb
fmull
sbb
int3
rol
fisubrs
lret
in
ret
jle
sbb
xor
lret
sti
jmp
outsl
jno
pusha
xchg
jae
inc
push
pop
test
dec
and
dec
sub
sahf
sbb
or
imul
out
or
loop
jge
mov
das
ficomps
jecxz
and
sbb
sub
jl
test
sti
loopne
jns
sub
mov
xlat
mov
loop
sub
jne
in
xchg
xor
enterw
outsl
xor
or
mov
add
push
mov
mov
xchg
int
repnz
mov
mov
push
sti
or
es
aas
not
add
ja
mov
scas
xchg
lods
mov
jge
mov
test
xchg
jno
mov
test
sbb
mov
fs
test
push
test
ja
lret
test
jmp
xor
add
ds
inc
mov
repnz
sqrtps
dec
mov
divb
pop
repnz
fsubrs
mov
inc
cmp
xorb
in
mov
add
sti
mov
push
pop
mov
push
push
xchg
jmp
sub
lea
xchg
dec
xchg
xchg
rclb
pop
lret
imull
sbb
lahf
insl
mov
xorl
mov
aaa
sbb
in
movb
out
in
data16
mov
lock
xor
sub
pop
rcll
xchg
inc
scas
out
ror
mov
dec
dec
add
out
inc
cmpps
sub
and
scas
lock
or
mov
adc
sub
push
aam
xorb
and
ficomps
add
sbb
or
fmull
iret
out
cmp
inc
bound
pop
push
ss
xor
inc
xchg
fnstcw
loopne
arpl
and
aaa
mov
adc
mov
lea
cmpsb
mov
push
mov
daa
mov
cmp
into
dec
push
rorl
mov
mov
xor
ds
jp
nop
cmp
dec
dec
out
jbe
pop
ljmp
mov
mov
or
inc
fwait
xor
push
mov
mov
insl
mov
enter
imul
ret
imul
ret
xchg
dec
mov
and
imul
xchg
insb
gs
hlt
pop
loop
adc
push
dec
inc
jl
les
adc
dec
ds
sub
push
mov
dec
cmp
dec
add
jl
pop
sub
cmp
push
mov
arpl
aaa
xchg
stos
push
adc
pop
pop
pop
lret
pusha
outsb
dec
lds
inc
sub
test
pop
cmp
cld
rcll
pushl
mov
pop
aam
data16
stos
test
ret
cld
enter
mov
jae
sub
jmp
mov
cs
push
loop,pt
add
cmp
outsl
lret
xor
repz
test
lds
shrb
repz
jno
loopne
dec
lcall
dec
jl
xor
sbb
mov
add
dec
je
cli
xchg
imul
push
push
pop
inc
negl
dec
push
jp
test
out
adc
mov
add
popa
lock
mov
pushf
xor
pop
pop
jne
insl
push
ret
cmp
xchg
push
add
lret
stos
mov
mov
in
clc
shrb
inc
repnz
sbb
scas
inc
mov
jb
and
fwait
add
mov
in
fs
lahf
push
pop
add
mov
adc
es
mov
xchg
adc
aaa
mov
sahf
and
xor
cld
loop
into
and
scas
or
inc
mov
bound
pop
pop
xchg
pop
adc
add
ret
scas
aaa
scas
dec
dec
or
xor
repz
test
mov
xor
sub
dec
xor
cmp
mov
rcrl
ret
pop
inc
sbb
mov
push
enter
mov
and
das
push
hlt
mov
xor
aad
cwtl
in
add
lcall
daa
sbb
aam
mov
jbe
mov
dec
mov
jo
adc
daa
mov
sub
pop
jo
mov
lods
in
dec
push
jg
movd
cld
pop
adc
sbb
push
mov
scas
fists
jne
xchg
bound
outsb
pop
in
lock
sub
dec
mov
mov
push
shlb
aas
and
arpl
sub
sub
mov
mov
es
sub
fidivs
sbb
outsl
ja
pop
jb
adc
jmp
mov
ja
movsb
mov
sbb
add
rcrb
fwait
out
and
scas
ret
sbb
xchg
pushf
push
aas
mov
mov
clc
sbbl
sahf
ljmp
adc
or
ret
inc
test
xchg
mov
inc
mov
push
rcll
adc
inc
rorb
daa
fldl2t
pop
outsl
xchg
aas
fs
nop
mov
cmp
xchg
mov
ret
mov
cmp
xchg
data16
fucomi
ss
inc
push
mov
call
nop
or
xchg
jnp
fstpl
cmc
sub
xchg
lds
xorl
jae
add
lret
jnp
cmp
cmp
cmp
das
scas
jbe
inc
cld
push
cmp
push
int
pusha
xlat
pop
test
cmp
push
xor
jnp
mov
fld
xor
jle
add
subb
shrb
or
hlt
xchg
push
iret
mov
mov
stos
push
push
cwtl
pop
xor
xchg
ret
out
sub
orb
and
mov
shl
mov
dec
push
pop
andl
mov
fstpl
sbb
dec
dec
add
stos
insl
imul
mov
sub
dec
xlat
xchg
fisubl
sbb
int
aaa
jmp
push
lret
pushf
mov
add
xchg
add
sub
aam
inc
push
fidivl
fnstsw
stos
inc
dec
ror
roll
loope
testl
shlb
sub
sub
pop
mov
gs
mov
mov
mov
sub
sbb
dec
inc
mov
or
jae
into
jne
push
push
mov
cmp
adc
stos
int
pop
test
inc
xlat
sbbl
out
test
sub
lock
lock
pop
andb
es
ret
jecxz
inc
sbb
ds
pop
ret
in
jae
add
sbb
xchg
gs
cmp
inc
mov
mov
shl
fistpll
xchg
lods
pusha
xchg
xchg
mov
mov
and
mov
out
jns
cwtl
jp
sbb
dec
and
push
sub
and
push
mov
ret
dec
push
add
leave
ja
std
sbb
xlat
add
jecxz
mov
jne
les
imul
pop
mov
mov
mov
xlat
sub
pop
icebp
push
fwait
lea
mov
mov
or
test
jge
jae
dec
fistps
ret
rcrl
pop
mov
js
cmp
pop
mov
jns
xlat
mov
sti
fwait
imul
ja
xchg
pop
sbb
jg
cltd
adcb
sahf
adc
scas
movsb
mov
out
mov
scas
xchg
push
into
xchg
in
clc
pop
mov
push
sbb
dec
pusha
imul
mov
lds
push
add
neg
nop
jg
idivb
and
int3
xor
jle
dec
enter
and
jge
jle
cmp
cltd
lret
ljmp
bound
mov
movsb
test
stc
mov
inc
into
xchg
addr16
xor
mov
ja
pop
add
jae
cmp
pop
inc
mov
cltd
mov
stos
daa
xchg
adc
rolb
adc
push
pop
mov
jno
sahf
stos
push
mov
push
xlat
ffree
fcmovnu
cmp
cmp
rcr
mov
dec
mov
outsl
mov
pop
int
mov
cmp
xchg
fiadds
jbe
push
or
add
adc
pop
pop
and
and
jg,pn
cmp
shl
dec
repz
and
xor
xchg
ss
mov
adc
cmp
jb
cmp
aad
addr16
jecxz
jnp
repnz
es
test
in
inc
out
xchg
cs
orb
and
jo
or
pop
test
mov
pop
int
mov
mov
dec
xchg
sbb
pop
mov
xchg
mov
movsb
ss
iret
cli
or
addl
pop
enter
test
fiadds
sub
pop
mov
sub
test
inc
xor
into
xchg
pusha
mov
add
jg
fcomip
mov
lcall
pushf
stc
xor
icebp
push
mov
rolb
stos
inc
mov
push
dec
lcall
push
int3
lds
fwait
push
les
add
jg
sub
insl
pop
incl
pop
mov
outsl
and
xor
pop
inc
cmp
dec
cmp
inc
mov
inc
inc
mov
push
call
add
xchg
mov
repz
inc
ljmp
mov
das
jge
pop
push
mov
incb
lea
cmpsb
iret
and
testb
aaa
push
cltd
clc
cmp
inc
aad
xchg
js
icebp
daa
mov
aaa
push
mov
insl
roll
in
push
cld
lock
jmp
or
inc
push
cmpsl
je
sub
inc
call
inc
inc
xor
popf
rolb
mov
jbe
adc
jno
jae
rorb
test
dec
and
xor
into
pop
inc
rcll
add
sbb
mov
or
stos
outsb
lret
xchg
jl
xlat
shll
pushf
lods
jge
ljmp
and
test
push
arpl
in
sbb
data16
jle
and
adc
rcr
aad
mov
in
addr16
mov
jecxz
push
je,pn
dec
arpl
cmc
insb
imul
lock
iret
sbb
es
fcomps
jns
inc
xchg
loop
or
push
inc
jmp
out
inc
and
mov
cmpl
mov
andl
aaa
je
ret
and
or
les
cmp
pop
mov
xor
pop
nop
jne
mov
jge
cmp
jmp
add
mov
lds
movsl
adc
dec
mov
xchg
push
out
xor
leave
push
rol
enter
test
xchg
pop
jns
adcl
je
js
add
inc
jle
and
xchg
ret
xchg
hlt
pop
pop
mov
pushfw
repz
mov
xlat
cli
or
pop
push
xchg
xchg
cwtl
mov
jg
adc
movl
push
aad
mov
outsl
fsubrs
ds
inc
xchg
add
or
lock
or
js
xor
mov
lea
or
inc
lea
or
sbb
or
loope
repnz
into
mov
cmp
pop
push
adc
cmc
and
in
dec
icebp
or
push
icebp
xchg
or
ret
sub
test
lcall
dec
cmp
mov
cmp
rcll
mov
cli
jge
xchg
enter
mov
mov
popa
sbb
fs
adc
mov
addr16
mov
mov
sub
mov
dec
movsb
arpl
dec
push
xchg
les
jmp
xor
push
mov
dec
lret
int
lahf
xor
mov
js
sub
jg
cli
push
orl
or
stos
cltd
lods
sub
add
adc
adc
out
sub
and
iret
stc
pop
fcompl
lds
xor
sub
int3
xchg
or
inc
add
sub
pop
jg
popf
dec
lock
mov
out
dec
push
or
jle
xchg
movsb
movsl
ljmp
mov
or
lahf
jbe
mov
jne
mov
push
repz
dec
xor
jecxz
int
fidivrs
or
fildll
xlat
outsb
add
sub
shlb
inc
mov
rorb
pop
lods
pushf
imul
xor
cmc
out
xchg
sub
repz
pushf
or
adc
ret
add
repz
repnz
ds
jg
cmp
pushf
fs
mov
sub
dec
stos
call
adc
pop
xor
mov
push
cmp
pop
dec
fmuls
jb
ret
mov
add
insb
pop
ret
sub
sbb
in
aad
decb
test
cmp
clc
out
push
cmpsl
mov
or
ret
mov
sub
adc
xchg
jns
subb
sub
mov
dec
mov
fldt
adc
test
adc
les
push
push
enter
cmpsl
add
sub
cld
xchg
pop
jb
es
lock
addl
jns
cmpb
mov
div
outsb
dec
inc
add
call
aad
clc
ror
xchg
leave
ljmp
dec
push
mov
das
cmp
mov
mov
add
paddsw
cmc
lahf
dec
sub
ss
jmp
sbb
in
shl
xor
sbb
inc
test
out
push
das
xor
pop
decl
cs
mov
jnp
popf
sbb
int3
dec
stc
xchg
dec
in
cmpsb
mov
dec
cmp
inc
pop
nop
or
iret
xor
xchg
adc
pushl
gs
fs
mov
xchg
cvttps2pi
fisubl
sahf
pop
lock
hlt
loop
scas
or
mov
lods
sub
lret
cmpsl
test
push
js
mov
pop
push
xchg
mov
pop
jo
int
in
mov
int
pop
mov
xor
or
cmpb
mov
ffreep
test
les
sbb
add
lods
cmp
sbb
fadds
ss
jle
cs
cmc
xchg
aam
cmc
insl
push
pop
je
jnp
pop
hlt
ss
cmp
nopl
or
lcall
xor
inc
cmp
lock
mov
js
push
cmpb
pop
test
cmc
shr
loopne
cmpsb
lcall
and
mov
pop
add
imul
xchg
sbb
arpl
xchg
pop
mov
and
shrl
and
pushf
ret
test
jge
int
fidivs
dec
bound
and
jae
add
test
mov
stos
js
mov
ss
sahf
jecxz
mov
sub
sbb
jne
and
ret
leave
adc
lahf
rolb
push
push
jmp
pop
mov
jns
adc
dec
ljmp
je
ljmp
jo
mov
mov
mov
mov
fwait
cltd
sub
pop
dec
pop
or
push
or
leave
ss
fdivp
gs
das
or
and
add
dec
pusha
repz
les
mov
push
xor
pushf
adc
ret
xchg
bound
dec
es
jns
ret
daa
xchg
js
add
es
dec
mov
cmp
xchg
aam
jmp
mov
sti
gs
sbb
add
dec
test
xor
inc
xchg
orb
clc
test
jmp
dec
push
cli
ret
cwtl
mov
mov
dec
cmp
xlat
inc
fnstsw
adc
jmp
arpl
sti
sub
xor
sti
mov
mov
or
push
sbb
fcmovnbe
fidivrl
and
bound
les
pop
add
xchg
shll
or
lods
addb
fldt
fisttpll
mov
inc
fsubs
xor
push
cmc
mov
xchg
adc
cmp
loopne
ss
rorl
jle
sub
adc
sbb
lret
push
or
push
fs
sbb
imul
ret
sbb
xchg
dec
test
test
mov
jno
pop
or
ja
aaa
adc
mov
and
cmp
cmpsb
scas
rcrl
cmpsb
notl
pop
push
mov
dec
movsw
cld
xchg
inc
pop
cwtl
js
pop
inc
stc
pop
repz
and
cld
pusha
sub
add
cmpb
jns
cmp
push
out
cmp
call
insb
lcall
dec
adc
rcr
adc
movsl
jns
out
sbb
daa
xchg
fcomi
add
test
adc
push
rclb
and
lods
lcall
xor
stos
aam
dec
les
jbe
loop
bound
mov
dec
add
rclb
xchg
dec
test
loope
pushf
jns
adc
mov
mov
fdivl
jbe
jo
ficoms
es
subl
xchg
lcall
scas
sar
pop
mov
jecxz
sbb
and
subb
test
lock
mov
sbb
cmp
loope
pop
out
push
sbb
cmp
pop
adc
mov
xlat
test
aam
xchg
adc
add
scas
mov
je
mov
inc
jae
sti
shlb
jno
inc
int
jle
pop
hlt
pop
cmp
mov
mov
pop
nop
lahf
in
adc
and
mov
jb
ss
into
xor
mov
aaa
pop
xor
movsb
mov
mov
fstpt
jp
mov
push
mov
sbb
ljmp
add
mov
fimull
push
sbb
push
mov
popf
mov
add
add
or
pop
push
push
lea
subl
shrb
dec
add
inc
adc
mov
loopne
sbb
mov
pop
mov
or
push
rorb
hlt
dec
lock
adc
add
inc
cmpsb
rcr
mov
dec
sbb
pop
sbb
add
mov
mov
xchg
ret
ds
rcll
rolb
push
pusha
pop
lods
push
dec
pop
xor
mov
inc
icebp
sbb
int3
cmp
popf
add
cmp
adc
lea
or
cltd
mov
pusha
lods
push
pop
clc
lods
cmc
test
push
in
mov
cmp
push
jns
in
adc
or
fwait
dec
imul
mov
pop
adc
sbb
adc
xor
inc
dec
fdivs
pop
fstpl
xor
pop
es
xor
shlb
mov
out
add
inc
push
fstps
or
aam
aad
gs
arpl
jnp
xorb
and
jecxz
cltd
sbb
jns
lret
ret
xchg
inc
pushf
adc
subl
popf
out
addr16
icebp
and
xlat
adc
fiadds
ja
sub
xor
xor
xchg
mov
shll
pop
sbb
mov
or
out
jb
inc
sahf
cwtl
fadds
xchg
fildll
stc
std
mov
mov
fs
cmc
fcmovbe
jns
iret
popa
jns
lea
cmpsl
adc
mov
jb
in
pop
adc
loop
fdivs
scas
sub
pop
jp
aam
inc
xlat
cmp
int3
rol
test
cmp
cli
scas
cltd
pop
push
lahf
pop
stos
xchg
push
sarl
int3
cmc
movsl
xchg
add
sbb
icebp
dec
mov
mov
es
xor
jecxz
sahf
xchg
cmpb
push
sbb
inc
pop
pop
xor
mov
dec
sub
dec
mov
jno
addr16
adc
or
push
bound
je
fadds
lahf
mov
mov
sbb
mov
push
cwtl
ja
add
inc
dec
push
mov
repz
push
rcll
mov
sbb
lods
mov
ja
ss
jle
sbb
notb
pop
push
ficomps
mov
shll
std
insb
add
push
pop
fwait
jns
sbb
int
xchg
sbb
cld
mov
icebp
push
xor
sbb
gs
xlat
jmp
pop
mov
jb
dec
cld
jmp
into
pop
mov
push
aas
sar
std
inc
dec
mov
pusha
sub
loop
inc
mov
roll
gs
imul
pop
dec
sub
jmp
fldenv
jl
test
pop
push
mov
mov
push
out
sbb
or
jbe
push
pop
xor
cmp
test
test
pop
icebp
test
outsl
inc
mov
pushf
imul
inc
add
inc
loop
jae
jmp
fcmovnb
mov
arpl
fmull
in
mov
pop
mov
mov
fnstenv
fs
leave
outsl
pop
mov
pop
add
mov
decb
nop
cmpsl
jns
sahf
mov
mov
test
jmp
ja
stos
repz
loop
imul
fisubl
push
or
shrb
je
dec
loopne
cmpsb
and
outsb
out
aam
aas
push
xchg
aad
sahf
mov
mov
in
movsl
jbe
pop
sbb
cmpl
xorb
or
shlb
or
cwtl
jecxz
add
lds
icebp
mov
mov
jb
jmp
addb
es
jno
into
out
sbb
addr16
jg
pop
and
dec
mov
jecxz
xor
les
xor
out
mov
lahf
adc
je
into
mov
xchg
movsl
repnz
mov
cld
mov
aaa
adc
movsb
or
pop
adc
pop
gs
movsl
addl
sbb
dec
test
sbb
add
pop
xchg
rcl
or
or
or
pop
cli
ljmp
inc
mov
sbb
sti
add
aaa
pop
mov
jecxz
daa
add
scas
popa
inc
lock
push
cmp
xchg
add
test
xchg
das
icebp
fisubrs
ret
sbb
es
xchg
mov
sub
sbb
arpl
js
das
dec
fsubl
ret
sbb
cmp
sbb
push
and
lcall
lds
andb
adc
xor
dec
and
repnz
es
sbb
mov
rcrl
mov
push
sub
sbbl
xchg
cmp
fnstsw
mov
dec
aam
sbb
testl
rolb
lea
inc
fnstsw
nop
and
leave
inc
int
aas
lock
jbe
add
pusha
fisubl
xchg
xor
cmp
ss
or
jecxz
pop
xor
xchg
cmp
leave
xchg
in
or
sbb
pop
js
jne
pop
ffreep
inc
jne
inc
sub
mov
imul
mov
aas
lds
mov
dec
outsb
scas
pop
icebp
push
add
push
cltd
aam
loop
jno
mov
push
sbb
pop
ja
test
jne
adc
sub
stos
push
fmull
jae
out
pop
push
push
xchg
in
push
into
out
xchg
mov
xor
xlat
mov
daa
dec
lcall
lods
shrl
mov
xor
and
fimuls
out
cmp
fisubl
imul
and
in
pusha
xor
mov
xchg
fwait
cli
push
dec
mov
icebp
std
sub
stos
fdivp
inc
add
sub
mov
inc
jmp
add
adc
xor
jns
lods
call
pop
sbb
fstpl
xchg
push
add
cmpsb
je
aam
negl
scas
loopne
cmp
xor
inc
test
cmpsb
mov
outsb
xor
les
or
loop
and
xchg
arpl
iret
add
cmp
push
test
sbb
outsl
cmpb
add
insb
rcrb
shlb
mov
mov
aas
loop
loop
imul
jmp
xor
jl
push
sbb
inc
mov
pop
xchg
cli
xchg
mov
sbb
fsts
mov
inc
cmp
loop
xlat
imul
fs
dec
pop
adc
or
cmp
xchg
test
call
pop
cmc
orl
les
sub
mov
inc
sub
gs
mov
movsb
jmp
enter
out
lds
push
sbb
adc
adc
lcall
mov
adc
imul
inc
mov
hlt
and
sbb
jg
testl
pop
push
nop
icebp
pop
clc
fisubs
adc
repz
pop
pop
shr
cltd
test
int
pop
in
sahf
cmp
fstps
pop
addb
leave
sub
and
jnp
jmp
rolb
mov
push
out
add
insb
and
push
std
pop
sbb
dec
jbe
mov
scas
bswap
aam
mov
rolb
das
or
hlt
adc
sub
pusha
adcl
push
sbb
out
push
mov
loopne
dec
inc
pushf
stc
std
and
push
push
push
add
ja
scas
push
lcall
jne
mov
xor
ja
mov
sti
xchg
arpl
lods
rcr
ret
iret
testb
test
lcall
fsubrl
popa
add
loopne
int3
test
inc
pop
xchg
cs
dec
and
push
outsb
outsb
add
das
sti
push
lock
sub
dec
fldenv
out
mov
int
test
mov
jge
ja
or
data16
cld
pop
dec
xor
cmovo
xchg
jae
dec
stc
or
popl
cmp
inc
mov
xor
push
les
dec
fcomp
sarb
xor
pusha
push
cwtl
or
sub
cld
mov
mov
mov
in
inc
or
sub
movl
dec
add
je
mov
pop
ficoms
lds
popa
sub
out
pop
xor
push
leave
repnz
mov
inc
in
subb
push
fincstp
lret
sbb
sti
cmp
xchg
test
sarl
fadds
test
repnz
cmp
leave
pop
sti
call
lea
adc
mov
rorb
xor
push
cmp
jg
xor
inc
shl
cmp
test
out
cmpl
mov
jno
fistl
pop
imul
hlt
mov
jo
jecxz
sbb
xor
push
sbb
push
shll
inc
push
pop
xchg
js
sahf
mov
decl
dec
mov
mov
push
movsb
cmc
negb
int
cmp
jae
sub
cmp
pop
pop
pop
cli
mov
sbb
xchg
mov
cld
xchg
fidivrl
pop
mov
mov
pop
scas
roll
lock
inc
fstl
inc
or
pop
and
jecxz
jl
cli
inc
daa
enter
aad
test
fstpl
xchg
cwtl
xchg
push
inc
imul
pop
cld
imul
aad
sbb
imul
leave
add
rclb
sahf
imul
pushf
call
iret
jo
sahf
dec
lods
in
rcrl
and
out
cmp
cs
mov
std
sahf
inc
jns
jmp
jmp
lahf
jne
psraw
mov
js
mov
sub
xchg
fmulp
adc
movsw
mov
lods
mov
adc
imul
mov
and
push
mov
pop
mov
aas
pushf
xor
mov
add
adc
cmp
sahf
bound
ljmp
imul
and
test
adc
xor
fisubs
inc
nop
stc
xor
jg
icebp
divl
sub
sahf
pop
mov
push
dec
data16
xchg
imul
adc
jae
test
jecxz
imul
push
gs
cmp
jg
mov
and
xor
or
andb
jg
mov
dec
add
mov
call
xchg
popf
inc
jp
jnp
jmp
jb
add
add
jmp
fcmove
pop
lahf
in
mov
pusha
sub
outsb
add
inc
int
lods
out
lret
mov
sub
dec
jecxz
push
sub
and
xchg
lcall
mov
mov
inc
movsb
mov
push
sbb
inc
xlat
push
aaa
cmp
gs
pop
mov
cmc
data16
and
cmc
sahf
jae
adc
lea
dec
push
inc
loope
dec
lods
aaa
mov
mov
mov
xchg
mov
cmp
lcall
out
test
pop
pop
dec
aas
movsb
jae
iret
orb
lret
jge
repnz
shll
push
es
aam
pop
lcall
in
in
je
adc
mov
js
dec
test
std
fstl
ret
ljmp
cmpsl
aas
pushf
pop
shl
cltd
negl
aaa
outsb
sub
decl
hlt
mov
test
mov
sbb
ds
dec
aad
test
pushf
invd
push
xor
roll
outsb
dec
jle
faddp
int
lret
xchg
jge
cmp
sub
sbb
stos
sbb
xor
jne
in
shlb
imul
xchg
popf
mov
xchg
push
cmc
mov
call
jae
lea
xchg
ds
dec
testb
out
or
loop
es
or
mov
call
jl
xchg
test
xchg
roll
cltd
iret
pcmpeqw
adc
aas
popa
lahf
jge
jl
mov
popf
lret
add
pop
aaa
rcrb
push
es
adc
add
pop
adc
push
divl
pop
pop
dec
fstps
or
stos
inc
loopne
adc
jge
xor
pop
dec
in
cltd
into
mov
sbb
pop
pop
jmp
add
sub
jecxz
jmp
mov
ret
test
push
das
imul
scas
mov
cmp
jge
loopne
or
push
ret
mov
xchg
adc
and
push
jmp
sahf
xor
scas
pop
roll
add
icebp
pop
mov
arpl
jns
imul
dec
mov
mov
push
adc
lret
test
jmp
inc
lahf
dec
into
xorb
ljmp
and
xchg
movsb
inc
popf
insl
dec
dec
mov
out
xlat
push
sbb
cmc
loopne
xorl
or
aas
pop
div
pushf
sub
adc
jmp
dec
fstps
imul
pusha
xchg
mov
in
mov
outsl
mov
cmp
sbb
movsb
loopne
mov
mov
mov
jns
xchg
arpl
addr16
mov
cmp
scas
and
aad
add
lds
lret
cmp
inc
stos
rol
jne
jb
fcompl
push
fldln2
mov
movsb
xchg
ret
xor
fwait
out
xor
inc
inc
sub
push
fnstenv
mov
fcompl
mov
in
add
sub
cmovle
shrb
sub
aaa
repz
xchg
int
mov
lock
push
ja
jns
jl
shrb
cmp
or
hlt
imul
out
cmp
add
icebp
or
adcl
adc
mov
jg
adcb
cmp
mov
pop
push
fucom
cmp
pop
cmpsl
push
cmp
call
std
jg
push
test
dec
ret
and
push
cld
sbb
xchg
jae
pop
adc
int3
inc
fadds
and
js
cltd
adc
xchg
inc
aaa
sbb
shl
aas
cmpsl
mov
dec
jb
in
fwait
lahf
sub
xchg
out
ret
xor
aaa
jo
xor
push
adc
fs
loope
push
inc
mov
pop
mov
cmp
je
lret
imul
shlb
sub
jo
xchg
pop
shrb
pop
stos
movsl
xlat
fs
push
xor
dec
int3
xor
insb
xor
or
xchg
xchg
and
jb
jmp
hlt
sbb
sub
bound
stos
push
dec
xlat
cmp
js
dec
mov
or
mov
int3
xchg
dec
sub
data16
addl
push
sub
es
xchg
mov
xlat
xchg
pop
js
mov
xor
cmp
push
stos
jl
iret
inc
clc
ret
mov
fcomps
mov
fcmove
lret
sub
fsubs
imul
subb
push
pusha
orl
adc
jo
iret
jmp
faddl
dec
mov
sbb
imul
insl
in
jp
aad
or
mov
xorb
aad
and
outsb
cmp
or
jge
into
pop
xchg
push
push
jne
xchg
addl
imul
fildl
xchg
xor
lret
iret
das
xor
loope
push
xor
and
xchg
cs
cmp
int
pop
push
in
jmp
and
mov
or
and
jns
or
scas
or
pushl
pusha
adc
xchg
adc
sub
stos
or
mov
pop
test
fisubrs
lret
push
push
test
repnz
roll
lret
xchg
mov
stos
push
fwait
ret
fs
push
or
adc
add
inc
add
fsub
dec
jnp
decl
ja
mulb
pop
stc
xor
pop
push
mov
adc
mov
cmp
lea
push
push
sbbb
iret
dec
dec
xor
add
push
jle
sbb
loopne
cmp
or
dec
cmc
cmp
cmp
sub
push
dec
scas
out
aam
mov
push
mov
cmc
cli
sbb
jae
pop
imul
sub
push
dec
sub
sbb
fstl
scas
xchg
pop
xor
add
rcll
jne
fwait
ja
mov
add
dec
ja
mov
sub
int
cwtl
cwtl
pop
jbe
cmp
int3
in
jnp
rcl
mov
add
add
xor
push
aam
xor
lods
push
outsb
mov
sarb
es
mov
inc
add
repz
ljmp
adc
test
aad
jo
jno
jns
sbb
sbb
aad
shl
loopne
mov
cmp
jg
pop
push
xchg
sbb
jecxz
push
bound
mov
pop
xchg
dec
push
jo
pop
jmp
test
and
push
jmp
xchg
cmp
add
sbb
pushf
xchg
xor
pop
push
fmull
lds
push
int
cmc
mov
gs
cmpsb
pusha
bound
and
insb
mov
xor
pop
push
fisubs
or
iret
dec
in
fsubrs
popa
jecxz
lds
jbe
sahf
test
lods
mov
fidivl
adc
into
push
dec
adc
ficoml
jg
aam
inc
out
lcall
push
subl
add
push
mov
stos
dec
imul
repnz
sbb
data16
shlb
arpl
jg
dec
adc
repz
pop
inc
arpl
icebp
das
aad
adc
xor
sub
popf
inc
cmp
inc
jnp
and
sub
arpl
or
add
aam
mov
xchg
clc
out
leave
pop
and
mov
pop
popa
xchg
dec
loope
gs
dec
cmpl
jne
jle
aaa
dec
call
mov
popa
fldenv
inc
inc
pop
test
ljmp
push
adc
inc
push
push
sbb
mov
fcmovnu
insb
aas
jle
popa
push
dec
add
or
mov
cli
cmp
cmpsb
aas
push
pusha
pop
xor
sub
dec
incl
rcr
sbb
out
pop
ret
lret
sahf
xchg
insb
push
cmpsl
mov
and
cmpsb
jmp
cmp
mov
shll
outsl
insl
test
shl
pop
vcvtsd2si
fisubrs
test
pop
jb
push
or
in
mov
cmp
out
cmp
inc
jle
aaa
sub
sub
or
ljmp
xor
and
jp
jno
mov
push
cmp
pop
xchg
jb
dec
push
subb
inc
adc
sbb
leave
out
jl
stos
xor
pop
push
shr
sub
sbb
adc
adc
sub
movsl
xchg
pop
push
addr16
jns
jl
pop
xchg
and
js
cmpsb
movsl
repnz
fnstsw
cli
mov
ret
push
outsb
inc
lcall
rcl
loopne
xchg
and
rolb
or
in
call
fbld
pop
imul
add
dec
push
xor
outsb
pushf
jbe
outsl
dec
push
popf
mov
push
mov
or
mov
lock
dec
mov
hlt
shlb
dec
and
jns,pn
inc
or
inc
xchg
mov
in
jno
xchg
push
mov
jl
jb
mov
jmp
test
mov
lret
xor
mov
or
cmp
or
inc
or
pop
lea
andl
inc
dec
das
mov
and
mov
mov
lcall
cmpsb
mov
xlat
push
loope
ds
mov
stc
test
in
dec
fsubrs
mov
outsl
sub
js
xor
nop
xchg
pop
add
pop
sub
rolb
jb
pop
jno
sti
aam
ljmp
loop
fwait
or
or
out
pop
insl
std
pop
cmp
and
xor
aas
xor
scas
ss
out
adc
cld
fs
mov
rcrb
inc
in
xchg
inc
pop
rcrb
in
add
inc
dec
mov
lcall
int3
xchg
sbb
add
sub
push
jg
adc
mov
pushf
mov
push
push
dec
mov
cmp
pushf
scas
iret
jne
nop
pushf
sti
cld
cs
inc
les
lods
xchg
xor
push
push
ficoml
push
cmp
ja
in
jno
xchg
add
xchg
mov
push
push
fistps
sbb
lret
mov
in
mov
cltd
aaa
sub
cmp
and
call
int
cmpsl
cmp
icebp
mov
jae
je
lods
adc
dec
or
push
mov
dec
mov
mov
test
es
sub
inc
mov
adc
pop
sbb
dec
inc
jmp
popa
push
out
notl
call
jl
or
fmul
cs
add
mov
insb
ljmp
or
cmc
fndisi(8087
and
mov
push
and
dec
shll
orl
shll
mov
mov
imul
repz
sbb
js
pop
movsb
cwtl
aas
leave
jo
je
adc
jecxz
cmpb
or
repnz
aam
ss
mov
sarl
shll
movb
lods
sbb
insl
repz
stc
movsl
mov
push
sarb
leave
or
push
xchg
mov
ret
xorl
out
adc
movsb
sub
mov
mov
sbb
js
mov
aaa
sub
test
ja
test
pop
jns
daa
adc
sti
mov
adc
hlt
or
and
jo
hlt
inc
jmp
fdivrs
mov
repz
das
nop
ss
je
add
sbb
iret
sub
pop
dec
cltd
repz
adc
dec
pop
repz
sarb
addr16
or
pop
sbb
subb
pop
jecxz
lods
out
inc
ror
jns
pop
js
aam
add
sarb
xor
call
push
test
lea
popa
dec
xchg
cmp
imul
mov
mov
insb
push
ljmp
cli
fiadds
xchg
cmp
sub
pushf
xor
bound
test
inc
loope
inc
cmp
out
mov
pop
add
push
ljmp
inc
lea
inc
lea
cmp
ja
daa
push
cltd
mov
jo
mov
cmp
mov
fnstenv
loop
cltd
lcall
jecxz
ss
ret
or
shlb
dec
pusha
ja
lds
sbb
mov
sbb
mov
stos
fsubl
aam
or
out
jecxz
pop
into
mov
fldl
or
scas
lret
xchg
push
mov
jne
add
fs
outsb
jo
insl
test
fwait
sub
es
mov
out
lahf
rcll
sbb
call
roll
in
leave
dec
add
aas
xchg
jae
add
xor
in
nop
fsin
jno
adcb
mov
fisttpl
lret
stos
test
rorl
ror
cmp
mov
sti
adc
das
clc
mov
sahf
push
xchg
cltd
in
lods
jb
sub
xchg
jl
jmp
fwait
add
test
cli
jp
daa
hlt
inc
test
mov
scas
mov
outsb
loope
fdivrp
xchg
insl
ja
or
loope
lcall
mov
sbb
rcr
imul
xor
adc
xchg
hlt
inc
dec
and
sbb
pusha
es
pusha
mov
shlb
fmull
cmp
mov
pop
xor
shl
mov
dec
insl
scas
leave
sub
je
push
out
in
pop
loope
test
jne
push
xor
loope
lock
in
cmpsb
adc
add
in
ret
stc
xchg
inc
inc
je
inc
mov
inc
xor
xor
out
stc
aad
rcrb
loop
daa
xor
and
lret
sbbl
dec
ud2
jae
enter
jb
cltd
popf
imulb
popa
push
inc
sti
jae
pop
adc
push
in
pop
mov
or
int
cmp
xchg
imul
and
inc
cld
jb
test
mov
mov
push
pop
sbb
fs
mov
push
aam
jl
jge
stc
sbb
xchg
or
and
repnz
mov
jl
hlt
outsb
push
lret
mov
mov
jge
repz
jg
leave
int3
ds
addr16
pop
rorb
mov
loop
or
or
mov
ss
mov
jmp
and
add
adc
lea
sub
add
push
cmpsl
aam
mov
xchg
sbb
fists
leave
insl
pop
jmp
pop
push
test
lret
adc
xor
out
pop
clc
mov
jl
lods
imul
sti
push
imul
xchg
mov
add
mov
inc
add
das
or
fisubs
xchg
mov
adc
test
and
movsl
cltd
stos
fcomi
cmpsb
inc
dec
adc
repz
out
lea
xor
xchg
sub
add
xchg
lahf
jp
test
divl
add
bound
mov
cmc
repnz
ljmp
xchg
cmp
pop
xchg
jne
sub
test
or
push
push
mov
out
fadds
cltd
mov
out
xchg
sbb
inc
dec
inc
jg
mov
fmull
dec
in
lcall
mov
aas
mov
mov
xchg
arpl
ret
jae
sub
test
rep
jbe
stos
fwait
out
shll
and
jle
mov
sub
aaa
mov
fidivrl
inc
pop
sbb
mov
mov
lcall
xchg
ds
cwtl
add
stos
arpl
push
jg
mov
inc
add
je
inc
pop
push
in
mov
lods
daa
cmp
leave
test
or
test
imull
out
shl
mov
push
mov
pop
pop
and
pop
in
jbe
inc
inc
cmpsb
mov
xchg
mov
inc
dec
fs
mov
stc
outsb
in
jae,pn
test
push
pop
frstor
sbb
js
js
push
mov
push
mov
rolb
cs
dec
add
jg
add
inc
lds
repz
sbb
mov
testl
cwtl
out
std
data16
add
mov
cmp
test
bound
dec
xchg
mov
stos
mov
mov
ss
and
cmp
clc
es
xchg
sub
xchg
xorb
jmp
mov
push
pop
shl
xorl
cmp
cwtl
jnp
add
ja
push
sub
mov
scas
test
mov
adc
dec
adc
xor
mov
mov
cmp
xlat
xor
jmp
mov
cwtl
popf
pop
inc
repz
loopne
and
fyl2xp1
aas
xor
dec
iret
dec
insl
lahf
adc
pop
dec
cltd
es
ret
bound
sbb
xchg
mov
or
or
aas
add
inc
jae
cmc
jnp
scas
test
xchg
or
test
dec
int3
stos
loopne
popf
sub
out
dec
mov
mov
lods
dec
cmp
mov
cmp
mov
clc
jae
in
xchg
mov
clc
cs
pop
insl
int3
jo
fisttpl
clc
iret
out
mov
dec
in
push
daa
out
cwtl
push
xchg
je
aas
nop
dec
adc
jle
and
daa
xchg
pusha
jne
imul
add
or
pop
pushf
popf
mov
pop
outsb
jne
das
imul
mov
mov
cs
pop
rorl
mov
movsl
or
sub
and
dec
cmp
pop
mov
mov
adc
push
sbb
adc
add
pop
jge
or
loop
test
int
xchg
inc
inc
and
sbb
adc
adc
jbe
aam
mov
in
xor
jo
add
cmp
or
inc
xor
push
in
dec
fcoml
or
js
mov
ret
bound
mov
pop
mov
inc
lock
sub
pop
xor
popa
scas
and
jge
jl
pop
in
js
into
mov
leave
pusha
test
lds
mov
push
push
sti
xor
movsl
mov
movsb
in
push
xor
xor
add
rcrl
cwtl
mov
jge
cmp
andb
int3
dec
add
mov
arpl
cmp
xor
mov
repz
mov
ss
mov
push
xor
adc
daa
fidivrs
sbb
js
dec
mov
cmp
pop
mov
cwtl
insl
jge
or
jmp
jl
pop
jbe
add
mov
cmp
xor
mov
addr16
adc
add
std
test
je
aad
iret
std
pop
shll
xchg
and
fwait
in
sbb
sbb
xchg
sarb
out
xchg
xchg
mov
dec
movsb
int
lock
loop
loopne
jmp
jb
ljmp
js
icebp
leave
lahf
pop
inc
nop
repnz
movsl
jae
in
imul
xor
mov
lcall
lret
arpl
mov
dec
push
mov
aas
imul
jbe
inc
out
pop
pop
add
or
add
xchg
mov
icebp
pushf
inc
out
mov
orl
push
pop
inc
std
cmpsl
xchg
cld
mov
leave
jnp
mov
cld
lock
roll
hlt
jo
jmp
fisubrs
or
int3
movsl
jp
insl
fcomps
inc
loope
sarb
jle
jmp
pop
js
in
mov
mov
push
xor
cli
in
cmp
mov
pop
inc
inc
and
push
mov
add
xchg
int
nop
xor
test
pop
cld
cmp
dec
dec
mov
test
nop
push
sbb
adc
xlat
pop
mov
jge
mov
int
in
or
sbb
push
call
sbb
and
les
lock
pop
add
rorb
jno
test
aad
add
sub
xchg
adc
outsb
xor
daa
jle
pop
sbb
mov
in
mull
loop
mov
adc
fstl
shl
repnz
fstps
jb
scas
jbe
enter
mov
xchg
in
popf
inc
fisubl
rcrl
ja
loop
and
aad
pop
lock
push
les
out
in
bound
pushf
loope
mov
pop
cmp
lock
data16
push
push
mov
mov
les
ljmp
aas
and
lret
lret
dec
lock
mov
mov
fistps
movsb
loope
pop
inc
cmpsl
and
fcomi
call
xor
lea
push
fistps
leave
stc
pop
lahf
mov
scas
aad
out
test
mov
cli
shll
xor
adc
pop
test
int
in
enter
icebp
push
jne
aam
arpl
and
xchg
aad
push
xchg
add
mov
dec
aam
repz
sub
or
ljmp
or
jecxz
test
or
cltd
les
imul
push
xchg
push
into
mov
push
call
aam
dec
in
dec
je
lods
and
cs
sahf
gs
lods
aam
dec
push
jecxz
sbbl
sbb
into
iret
add
scas
sub
cmp
std
jl
loop
les
lods
in
pop
insl
jle
xor
mov
mov
pop
and
mov
cltd
rorb
cld
rorl
jnp
movsl
inc
cmp
pop
sub
mov
pop
jns
in
push
mov
lret
jnp
loop
mov
insl
push
xchg
push
shl
adc
aam
aad
adc
and
cmp
js
enter
mov
aaa
pushf
js
or
cltd
cmp
add
fdivrs
push
dec
divl
stc
sub
push
aaa
jno
cmpsl
dec
lds
jge
addb
aad
xor
dec
in
outsl
out
jl
das
cs
popf
push
push
sub
fsubs
pop
and
sub
insb
in
sub
fistpll
xor
jmp
push
fistpl
cs
mov
imul
stos
fwait
es
jno
xor
shrb
fisttps
pop
push
cli
iret
cmp
in
xchg
dec
xor
or
call
dec
fucomp
pushl
dec
mov
mov
les
int
cmpsl
cwtl
and
cmc
mov
js
aam
xchg
daa
es
filds
inc
cmc
cmp
mov
fcompl
adc
popl
cmp
push
or
cld
aad
cmp
lock
xchg
pusha
fidivl
lret
push
sbb
dec
jo
xor
out
lds
dec
movsb
pop
push
call
out
pushf
ja
sbb
fstpl
outsb
dec
loop
push
outsb
bnd
xor
in
lods
or
mov
rcl
jae
test
leave
jae
jne
imul
jbe
cmp
and
insl
mov
adc
jnp
push
or
jo
mov
push
arpl
ret
cmpsl
xchg
pop
sbb
xchg
outsb
and
loope
lea
mov
fsubs
lods
add
inc
sarl
fucomp
ret
fcoms
sub
jmp
sbb
sub
xor
or
lea
icebp
fstl
sbb
loopne
aad
out
inc
jg
popf
pop
lods
fidivrs
push
mov
sarb
rclb
cmp
and
inc
mov
push
daa
xor
mov
and
cwtl
jno
xchg
fstps
icebp
pop
mov
sub
popa
int3
jns
xchg
jb
add
or
fstl
cmpsb
jo
add
mov
mov
xchg
test
test
xor
inc
fcom
mov
cmc
sarb
xor
pop
daa
mov
enter
mov
inc
mov
lcall
fcomps
jle
cwtl
lock
sub
dec
jecxz
add
sub
ja
dec
lds
imul
jns
outsb
ret
cwtl
shl
add
sbb
out
aaa
and
arpl
das
push
xchg
aas
add
or
fs
push
sbb
mov
repnz
stc
inc
daa
inc
pop
inc
js
adc
inc
pop
mov
outsb
add
mov
sub
sahf
mov
stos
or
adc
dec
dec
sub
cmp
fidivl
int
cmp
adc
push
in
stc
xor
cmp
rclb
sub
dec
dec
pop
xlat
adc
mov
aaa
repz
mov
rcrb
sub
pop
jle
bound
lahf
fbld
outsl
inc
xchg
and
mov
rclb
cmc
gs
push
inc
lock
out
nop
dec
adc
mov
and
jb
xchg
aaa
push
loopne
mov
jp
adc
xor
dec
dec
mov
cli
test
das
movsl
mov
mov
sahf
in
out
stos
cmp
xchg
lea
sub
sarb
cmp
jle
ds
jno
adc
jmp
sbb
and
lea
leave
jle
add
mov
inc
in
subb
repnz
lock
push
jmp
mov
loopne
out
and
idivb
test
fs
fdiv
mov
leave
test
add
xchg
cmp
out
ret
imul
push
inc
pusha
pop
mov
dec
dec
sub
cmpsl
movd
or
lods
movsl
fistpll
jne
sar
ret
nop
dec
push
lcall
add
and
out
pop
push
pop
ret
out
jg
jns
aad
movsb
fistl
dec
test
add
arpl
dec
mov
je
aam
cli
push
push
cltd
loopne
fists
pop
sub
fisttpl
cmpsl
orb
mov
outsb
push
das
imul
push
sti
ljmp
repz
or
push
mov
mov
push
incb
jns
xchg
xchg
xor
imul
and
dec
inc
sbb
stos
imul
aaa
fnstcw
xchg
jg
mov
movsl
pop
inc
clc
sub
mov
and
sub
jg
jle
mov
scas
aaa
addr16
pop
pop
sbb
jmp
psubq
pusha
mov
push
loopne
mov
fdivp
dec
inc
lahf
jl
out
inc
push
scas
mov
sti
rcrb
data16
xor
sub
jmp
push
int
cs
fstl
mov
dec
push
xor
xor
lds
ret
icebp
mov
adc
out
insb
lcall
js
or
cwtl
push
fwait
jmp
add
sbb
out
jne
iret
add
jecxz
int3
pop
jle
xchg
sarb
xor
movsb
cmp
lock
insl
add
lods
cmp
mov
andb
shll
sbb
nop
cmp
je
push
adc
sbb
cmpsb
pop
xor
pop
in
push
sbb
jne
sahf
mov
das
dec
enter
inc
jp
and
int3
and
xchg
aaa
rclb
pop
sub
scas
pop
sub
repz
sar
dec
jnp
jae
idivl
mov
pusha
stc
fbstp
inc
or
mov
and
insb
dec
movsl
dec
repnz
add
repnz
call
out
in
mov
mov
pop
xchg
jle
inc
mov
lahf
jns
push
jb
pop
adc
cs
push
hlt
and
mov
into
xchg
xchg
pop
mov
gs
push
iret
mov
adc
mov
in
mov
notb
cmp
mov
sahf
gs
cmc
mov
jns
popf
repz
ret
lods
or
pop
out
mov
push
push
jnp
mov
fsubl
hlt
xchg
and
mov
and
xlat
sub
jmp
inc
cli
pusha
je
mov
pop
stos
pop
daa
xor
aam
stos
xchg
scas
repnz
and
inc
notl
add
or
jmp
lret
lret
and
jg
mov
rclb
stos
enter
fs
scas
ja
popa
sub
xchg
aam
xchg
insl
mov
xor
fmull
cmp
fwait
sbb
jbe
mov
mov
jae
insl
sbb
and
insb
jne
adc
ds
clc
js
ds
loope
ret
cmp
movsl
mov
movsl
mov
outsl
push
add
insb
jne
xchg
test
mov
les
nop
cli
cmp
jg,pt
xchg
lds
addr16
shrb
xor
insb
and
andl
nop
ljmp
sbb
decl
xor
dec
xor
xor
adc
in
movsb
dec
rorb
adc
mov
dec
and
pop
cli
or
andl
mov
xchg
cmp
mov
test
and
mov
test
pop
cmp
inc
jl
mov
popa
mov
pop
mov
ljmp
or
fidivl
repnz
mov
das
sbb
test
lea
cltd
push
ljmp
or
push
shll
pop
jne
mov
sub
inc
pop
push
dec
adc
inc
in
adc
push
jle
mov
and
adc
dec
pop
loope
fucomi
mov
adcb
mov
push
ss
int3
sbb
add
mov
jmp
sub
mov
ffree
adc
lock
jge
call
inc
jnp
insb
sbb
adc
jmp
cmp
mov
inc
imul
gs
push
call
mov
iret
loop
jno
push
ffree
adc
orb
inc
cli
stc
cli
and
outsb
xchg
xchg
subb
gs
flds
ret
push
in
sub
xor
jmp
mov
mov
cmp
in
pushf
push
or
push
shlb
mov
mov
call
ficoml
std
ds
and
push
or
jp
sub
and
fscale
pop
cmovns
add
inc
repz
inc
daa
roll
shl
mov
push
clc
aaa
add
das
mov
pop
adc
and
push
test
pop
cld
lods
lea
sbb
fdivrs
fldt
add
mov
es
or
rcrl
add
and
imul
test
in
cmp
xchg
adc
int3
aad
jmp
dec
xchg
xor
cmp
repz
inc
xchg
pop
mov
mov
sub
daa
mov
pop
std
xor
or
adc
cs
cmp
in
sub
fnstcw
and
fildll
popa
add
adc
cmp
cmp
decb
xchg
scas
movsl
mov
fs
lcallw
jg
xchg
sub
mov
pushf
sarl
mov
adc
shl
sti
push
cmp
push
inc
andb
pop
sbb
iret
jno
cpuid
jmp
sbb
fiadds
mov
rcll
pop
stos
xor
ret
ljmp
sbb
sbb
incl
push
cmpsb
add
insl
lahf
inc
scas
das
ljmp
and
data16
popf
jo
addb
mov
std
mov
sbb
xchg
dec
gs
xchg
sbb
jb
sub
negl
mull
add
mov
sub
adc
mov
test
push
mov
gs
mov
leave
mov
mov
sbb
add
mov
iret
out
mov
ds
jno,pt
xor
das
ds
and
push
test
mov
lcall
add
xchg
inc
push
fstpl
cwtl
xorl
ljmp
mov
inc
adc
pop
pop
jmp
popf
jns
cmp
adc
cmp
dec
ljmp
shll
inc
imul
test
or
imul
lea
mov
adc
rcl
jnp
adc
xor
lret
sub
aas
je
mov
dec
pop
lock
jle,pn
sub
ja
out
inc
arpl
mov
rcll
xchg
fisubrs
mov
rcl
lds
int3
dec
inc
rcrb
mov
andb
cmc
add
enter
inc
lea
push
dec
sbb
nop
add
or
jmp
mov
outsb
push
push
ss
cmp
dec
sub
xor
push
xor
ret
mov
xchg
fistps
dec
rol
bnd
ret
stc
test
int
xor
pop
push
stc
push
pop
push
xchg
andb
enter
adc
stos
inc
mov
mov
into
lea
lods
inc
cld
and
in
cmp
adcb
pop
cmpsl
mov
sbb
dec
mov
push
into
rorl
push
notb
jl
jne
mov
das
cld
hlt
repz
adc
test
nop
insl
je
mov
into
sub
mov
mov
mov
fadds
into
xorl
jmp
cmpsl
in
adc
adc
xchg
rcrl
push
xchg
inc
jno
pushf
ss
jne
in
jmp
insl
test
inc
jp
out
xor
pop
repz
push
adc
dec
cmpsb
bound
mov
sub
add
jns
ret
movsl
test
leave
jmp
push
inc
js
stos
insb
in
and
pop
mov
cltd
ret
xor
aaa
pop
sahf
aaa
mov
dec
lret
inc
push
xchg
adc
xchg
adc
inc
pop
and
inc
xchg
mov
dec
push
pop
stos
dec
adc
orl
enter
mov
loop
movb
mov
jnp
dec
in
addr16
push
in
mov
jecxz
aam
xor
insl
bound
repz
ljmp
mov
inc
mov
inc
fucomip
jno
and
jecxz
cli
sbb
pop
or
xchg
add
sti
gs
cs
pop
rcr
xor
test
gs
push
cmpsb
int3
xchg
jno
scas
movsl
subb
sbb
sub
arpl
pop
xor
and
lea
mov
jo
pushf
js
out
sbb
jle
test
sti
pop
movsl
test
stos
sbb
cmpsl
jp
shlb
jl
clc
pop
shll
int
notb
ja
data16
xor
testl
wbinvd
push
mov
dec
andb
fdivp
lods
jle
aaa
jbe
push
cmp
sub
shll
mov
mov
jle
aad
pop
cmpsl
push
sub
add
cmp
xor
or
jbe
push
sahf
lret
leave
pusha
cmp
rorb
and
fistps
adc
in
adc
mov
sbb
cld
push
scas
out
push
or
mov
jno
mov
and
xor
mov
mov
int3
aad
lahf
imul
mov
pop
stos
mov
cld
sub
sub
scas
cmc
or
data16
stc
mov
mov
or
push
xchg
push
xchg
pop
arpl
pop
push
test
cmp
and
and
dec
imul
or
or
dec
fcmovu
lods
jo
pop
stos
and
jae
push
mov
jb
loop
and
xchg
or
popl
out
lret
inc
jg
je
fs
loop
outsb
xor
mov
add
and
rorl
int3
jl
repnz
outsl
mov
fistl
adc
icebp
daa
and
add
mov
jg
aam
jmp
fadds
or
sbb
fwait
push
lcall
cmp
hlt
ja
iret
js
add
mov
loopne
xchg
add
sahf
sti
lret
add
mov
stos
push
jge
sub
cmc
ficoml
cmc
movsl
lret
sub
loop
sbb
mulb
andl
sahf
sarl
cmp
mov
dec
inc
inc
jmp
and
addl
jb
add
ret
nop
call
mov
sbb
notb
add
jle
push
fs
lods
call
adc
jne
push
mov
dec
jns
hlt
inc
pop
arpl
and
adc
sub
pusha
adc
mov
popf
roll
fbstp
sarl
ss
dec
dec
sub
or
xor
mov
ss
mov
scas
add
lahf
xchg
repz
icebp
push
sbb
pop
add
test
sti
mov
nop
xchg
loop
push
nop
and
xor
dec
je
loope
cmp
push
mov
sub
push
in
loopne
fistpll
jmp
out
pop
lea
lods
push
jmp
dec
bt
out
ljmp
sub
decl
jl
mov
cltd
insl
mov
stos
imul
fisubrl
into
push
ret
repz
lahf
push
dec
clc
sub
push
xchg
or
dec
pop
test
out
shrl
or
jge
jno
das
add
repz
jg
push
and
push
push
sahf
xor
lock
cwtl
mov
std
negb
push
sub
loope
repnz
mov
xchg
movsl
lods
enter
mov
inc
shll
scas
rol
mov
rcr
mov
adc
jns
mov
notl
mov
in
adc
test
jnp
push
outsl
lea
sahf
sub
add
mov
inc
dec
cld
adc
inc
lods
jae
ljmp
aas
out
data16
addr16
outsb
shlb
jmp
add
sbb
sub
test
int
fidivl
sarb
jg
lock
mov
aad
por
add
bound
aas
adcb
fdivs
int3
in
insb
movsl
xchg
mov
mov
shr
jecxz
imul
mov
ja
iret
mov
jno
repnz
xor
cmpsl
insl
sbb
or
in
cli
pop
movb
aam
adc
jp
xchg
mov
jecxz
fisubl
xor
dec
or
jl
stos
insb
mov
mov
xchg
xor
sub
adc
mov
adc
xlat
xchg
outsb
inc
xchg
fnstenv
enter
sub
cld
push
es
mov
cmp
xorl
cmp
dec
inc
mov
orb
test
dec
dec
and
add
fmuls
dec
negl
mov
iret
arpl
cs
inc
jmp
icebp
nop
jmp
loop
pop
call
clc
mov
mov
in
cmp
mov
ja
cmp
pusha
mov
push
mov
or
jb
mov
mov
test
lock
les
xchg
jecxz
pop
add
addr16
pop
outsb
imul
cmpsl
in
mov
adc
sbb
pop
pushf
into
fisubl
dec
leave
push
jmp
adc
sbbl
mov
jb
or
xor
addr16
jge
ret
sbb
add
dec
mov
pushf
sbb
and
add
mov
xor
jns
and
arpl
jle
mov
stos
fwait
mov
and
aad
stos
push
add
int3
mov
cld
fldenv
mov
jb
mov
dec
mov
xchg
dec
outsb
push
mov
in
adc
lock
mov
in
inc
add
sbb
pop
sub
dec
jns
and
cltd
cli
xlat
pop
lret
xchg
mov
scas
lret
xchg
or
pop
aam
mov
mov
inc
fcmove
repnz
pop
aas
and
cmpsb
mov
mov
stc
roll
add
mov
dec
mov
push
adc
mov
cmpsb
insl
pusha
push
clc
int3
jmp
icebp
popf
xchg
sbb
add
dec
sbb
fcom
cwtl
adcb
inc
movsl
add
pop
cmp
sub
ljmp
loopne
and
leave
cld
cmp
popf
outsb
sub
jns
aad
pop
cmpps
dec
jmp
rclb
inc
lea
add
and
daa
push
xor
jbe
add
sbb
add
xchg
push
mov
dec
xor
jo
idivl
fwait
daa
cld
ja
and
pop
xlat
push
pop
arpl
push
mov
cmpsb
enter
jg
repnz
pop
adc
js
dec
mov
cli
push
push
inc
scas
scas
enter
sarb
insb
xchg
and
cmp
xor
dec
sub
std
rcll
xchg
sbbb
mov
dec
inc
imul
movsb
sub
lock
dec
pop
inc
mov
outsl
cmp
lret
inc
stc
outsl
xchg
aad
mov
rorl
push
ds
adc
jae
mov
imul
pop
nop
nop
inc
mov
pushf
inc
xor
out
sbbl
mov
inc
push
xchg
mov
mov
sbb
aas
out
negl
adc
xor
lret
repnz
cmp
imul
ljmp
notb
cmpsl
icebp
cld
push
lods
insb
sub
add
ret
xor
dec
dec
mov
pop
pop
aam
fsubr
cmpsb
xchg
shrb
fucom
in
aas
addr16
lods
lods
stos
jg
mov
ret
or
pop
sahf
xlat
imul
scas
mov
iret
clc
sub
addr16
out
dec
cmpsb
mov
out
mov
push
outsl
fdivr
scas
and
adc
dec
xchg
faddp
decb
or
and
jecxz
add
push
cmc
inc
add
popl
or
pop
int
data16
popa
mov
push
xor
incl
jg
mov
jle
pop
push
inc
lahf
mov
inc
cmp
sub
pop
es
test
enter
ljmp
addr16
ljmp
mov
dec
pop
mov
dec
cmp
lods
je
xchg
jnp
jmp
rorl
sub
outsl
test
lock
cli
push
jge
mov
xchg
ds
cmp
or
cmc
lock
xchg
clc
jmp
mov
test
out
aas
fs
scas
fstp
and
mov
xor
cmp
fimuls
call
shll
in
shrb
mov
jg
adc
jno
jb
adc
jl
pusha
popf
imul
mov
or
out
mov
push
sti
push
loop
pusha
lahf
pop
sbb
push
dec
into
sahf
pop
cmp
and
and
add
pop
scas
cs
dec
daa
dec
xchg
mov
jns
enter
jg
rcrb
sbb
dec
cmp
sub
lret
lds
cli
fwait
dec
push
xor
leave
movsb
cmp
jae
notl
mov
stc
dec
dec
pop
or
pop
mov
adc
aaa
insl
aas
sbb
notl
mov
push
rolb
out
add
xchg
xchg
xchg
mov
int
rcrl
bsf
add
mov
aaa
push
fcmove
ljmp
sbbl
cmpsb
jno
shrl
push
pop
cwtl
popa
dec
sub
shl
xlat
jge
addb
or
pop
jge
aaa
xlat
popf
push
fwait
add
or
mov
mov
jmp
and
insb
pop
or
aas
push
insb
leave
xchg
aam
pop
cmpsl
mov
mov
leave
scas
dec
inc
js
dec
outsl
aas
mov
icebp
push
adc
mov
cli
cmp
add
popa
loope
testl
pop
cs
lea
jns
xor
or
loope
js
bound
sbb
pop
inc
hlt
dec
push
or
or
inc
andb
daa
mov
mov
jo
push
cmp
rclb
jl
xchg
mov
fs
xchg
jle
and
dec
mov
lahf
cli
mov
mov
or
mov
and
dec
out
sbb
aaa
cmp
xchg
and
fistl
jb
int3
call
push
in
icebp
lods
jmp
xchg
jb
xchg
je
push
cmp
fistpl
sbb
jmp
dec
xor
mov
push
dec
xchg
es
inc
aaa
dec
or
xor
js
ja
mov
imul
jp
shl
or
test
xor
inc
enter
dec
arpl
repz
ss
movsl
sahf
or
inc
cltd
les
cmp
xchg
addr16
mov
adc
addr16
push
mov
dec
addr16
stos
enter
add
sbb
sub
addr16
daa
insb
out
les
push
adc
fisttpl
pop
outsl
fisubl
inc
pop
js
adc
pop
push
mov
cmp
jno
sbb
test
jae
mov
and
sub
call
or
xchg
arpl
cltd
and
ffree
pop
shll
pusha
sbb
add
and
xchg
lods
ret
stos
and
scas
ret
sbb
xchg
adc
test
add
or
jle
dec
sbbb
scas
pop
mov
enter
and
add
cs
mov
pop
adc
pop
loopne
ja
std
loopne
push
sahf
cmpsl
sbb
or
fstp
sbb
lods
fucomp
pop
or
cmpsl
and
out
ljmp
mov
pop
rcrb
adc
jne
jl
icebp
sbb
shll
push
and
and
pop
outsl
push
cld
mov
lret
fnstcw
mov
mov
add
xchg
jo
xor
adc
popf
sbb
sbb
xlat
xor
jge
mov
sbb
xor
popf
inc
sbb
cmpsb
xor
pop
xor
mov
mov
xor
fbld
scas
xor
pop
jne
cs
mov
dec
pop
int
fdivp
add
jae
cli
xchg
add
shl
aas
sbb
pop
std
aam
hlt
pop
in
sbb
inc
adc
push
cmpb
je
lcall
int
je
mov
jns
lcall
rcl
and
sahf
sbb
dec
lock
andb
dec
jbe
cli
xchg
bound
addr16
lock
push
xor
sub
fwait
dec
push
sbb
push
dec
pusha
sub
lock
push
pop
cmp
sti
jbe
xor
out
xchg
pop
xor
jno
xchg
mov
or
aaa
mov
les
add
jnp
mov
shrb
movsl
xchg
lock
es
and
popf
jo
mov
jmp
jne
aam
jb
daa
cli
mov
sub
jnp
aas
sbb
mov
pop
dec
mov
pop
out
dec
sbb
mov
mov
int3
loope
cmp
jbe
pop
ret
mov
std
mov
inc
loopne
scas
dec
adc
cltd
and
popa
xchg
cmp
sbb
adc
mov
out
jbe
adc
pop
jl
xchg
ds
jno
sub
ljmp
and
add
dec
dec
lods
or
sub
rcll
xchg
sbbl
mov
jg
sbb
vpslld
push
out
iret
ja
cli
int
mov
mov
rorb
or
mov
sub
xchg
lcall
mov
pop
lahf
push
sbb
loop
adc
dec
dec
in
out
icebp
enter
sub
inc
pop
cmp
dec
inc
mov
add
fbld
stos
mov
dec
mov
notl
popa
jle
pop
jecxz
ja
aaa
pop
lock
test
lock
test
daa
xor
and
jnp
sub
sbb
sbbl
jb
arpl
jmp
adc
ret
mov
mov
adc
cmovge
or
mov
outsb
dec
pop
xchg
mov
pop
mov
test
lahf
mov
push
inc
mov
pop
xchg
ret
or
xor
or
sbb
stc
dec
jecxz
add
lahf
lahf
scas
push
int
fildl
cmc
mov
pop
cli
dec
das
shlb
jge
jb
fcomps
push
mull
shll
bound
jg
lret
dec
sbb
inc
sub
jp
or
stc
dec
aad
add
sbb
cs
lret
mov
in
sbb
pusha
pop
icebp
sbb
popf
xor
xchg
mov
jp
lods
inc
jl
lahf
jbe
sub
adc
dec
repz
loope
mov
je
xor
adc
sub
cmp
outsb
sub
sbb
dec
and
fbld
lods
mov
scas
and
call
out
mov
jp
push
cwtl
xchg
xchg
jo
repz
sti
mov
or
ja
nop
sub
mov
lods
add
xchg
out
and
xchg
movb
sahf
shrb
enter
mov
mov
inc
add
jmp
cmc
pop
fisubs
pop
sub
inc
popf
stos
js
stos
and
test
xor
dec
loope
jb
loop
ss
mov
or
mov
inc
push
imul
shrb
out
mov
repnz
pop
push
mov
rorb
stos
testl
cmp
and
lret
sarb
sti
and
mov
pop
hlt
cmpsb
into
cmpsl
inc
mov
dec
mov
or
mov
mov
bound
rolb
popa
mov
pop
mov
lahf
or
stc
add
cli
mov
cmp
in
inc
pop
into
add
enter
test
lahf
xchg
mov
or
shr
pop
int
jecxz
repz
xor
std
jne
sti
jecxz
stos
push
out
xor
out
jbe
adc
cmp
notl
add
xor
inc
loope
xor
or
xchg
outsb
xchg
stos
dec
sub
fwait
scas
and
lds
into
repz
push
cmp
xchg
add
lahf
loop
cmp
ljmp
sbb
mov
mov
adcb
pushf
fwait
inc
loope
and
nop
pop
mov
lods
add
cmpsl
mov
mov
sbb
cmp
out
loope
xchg
mov
addr16
and
cmp
pop
adcb
jmp
ret
inc
rcrl
lahf
mov
repz
cwtl
lods
jl
sbb
inc
mov
pop
xor
fs
inc
xchg
dec
es
jg
and
jle
mov
mov
add
jle
dec
jns
popf
jp
add
xchg
and
mov
scas
jmp
sub
clc
aam
test
movsb
cmc
push
jmp
mov
fsubl
push
or
add
pop
mov
and
insb
sahf
fninit
dec
sub
fs
aas
in
and
shrb
dec
ljmp
bound
pop
outsb
push
mov
pop
adc
popa
jl
xor
and
lcall
sub
lods
sub
or
dec
lock
mov
mov
and
pop
into
xchg
mov
pop
cmp
dec
jle
jns
sub
lods
aas
loopne
and
pop
in
mov
ljmp
cmpsl
jo
in
push
inc
pushf
enter
mov
sub
movsb
movsl
rol
jp
adc
xchg
mov
dec
cmpb
sbb
mov
dec
add
add
jno
pop
imul
xchg
push
sahf
into
inc
sub
das
insb
sbb
xchg
jo
out
std
jle
mov
pop
sbb
inc
push
sub
sbb
adc
sbb
xchg
sbb
stc
jmp
cld
mov
rolb
push
xchg
hlt
mov
inc
mov
dec
sub
jnp
jbe
aas
cmc
lods
push
cmpsb
pop
xchg
outsl
cli
adc
and
hlt
xchg
lea
sbb
fwait
add
shl
hlt
sarl
js
lds
or
imul
mov
push
orb
sub
mov
pop
addr16
xchg
mov
sub
mov
xchg
movsb
push
nop
iret
int3
inc
repz
mov
dec
icebp
push
mov
mov
sarb
insl
jle
out
pusha
pop
and
xlat
mov
xchg
xchg
adcb
in
and
andb
xor
pop
dec
jno
imul
popf
fmull
xchg
fisubrs
aam
jecxz
xchg
repz
and
jns
mov
mov
test
leave
lods
jns
cmc
adc
rcr
loope
loopne
mov
xor
sub
xor
stos
lds
pop
daa
shl
sahf
jmp
xchg
dec
sarb
xor
scas
jno
add
xor
insl
shll
ss
sub
xchg
cld
adc
roll
xlat
enter
inc
bound
xchg
fwait
movsl
mov
push
popf
push
shrl
cmc
add
cmp
sub
mov
and
or
mov
sbb
bound
mov
lahf
mov
or
out
pop
stos
outsl
cmp
xchg
popf
xor
mov
in
mov
jge
push
cmp
push
mov
dec
pop
fiaddl
movsl
xor
mov
adc
out
ja
or
inc
loope
lret
subb
push
add
sbb
dec
xchg
jmp
xor
adc
ljmp
in
jb
pop
lret
fs
loop
inc
dec
notl
imul
loop
daa
adc
lods
divl
adcl
lods
cltd
dec
clc
jge
iret
or
cmp
add
push
fisubs
test
sbb
dec
lock
mov
mov
mov
dec
adc
jle
cmc
or
pop
lahf
add
sub
xchg
hlt
add
cmpsl
into
aam
and
jae
inc
mov
mov
ja
xlat
ds
mov
xchg
or
popf
or
jno
xor
cmp
cmp
sbb
lret
xor
in
stos
outsb
inc
adc
enter
or
iret
push
sub
cmpl
ja
xchg
or
out
mov
pop
add
lcall
adcl
scas
and
push
pop
repnz
xor
cmp
sbb
pop
xchg
add
xor
dec
lret
mov
or
lea
adc
mov
pop
popf
mov
sbb
mov
add
xor
pop
les
jg
lock
cmpsb
push
dec
stos
test
jle
xchg
push
rcll
sbb
lret
pop
push
and
mov
jns
jae
int3
jle
divb
data16
test
inc
or
xchg
mov
scas
dec
push
std
pop
mov
mul
fstps
insb
lock
dec
je
xor
pushf
sar
pop
cmc
cmp
inc
popf
add
sahf
cmp
jne
inc
rol
cld
outsb
imul
out
push
jb
xchg
sub
fisubl
xor
aam
add
aaa
imul
popf
dec
xor
mov
int3
jb
arpl
aam
cli
movsb
or
add
pop
fwait
and
xor
sub
mov
not
ret
jmp
xchg
add
cmpsl
repz
jae
inc
xor
pop
clc
mov
xor
adcl
mov
mov
dec
mov
cmp
insl
sbb
mov
push
adc
notb
sarl
out
sub
aad
fsubrl
push
jmp
mov
cmc
pop
jmp
je
mov
sbb
fmuls
out
dec
sbb
dec
out
je
orb
pop
jbe
pop
lret
dec
jg
add
lret
fsubr
pop
pop
fldt
insb
into
sarl
cmc
call
cs
mov
movsl
adc
push
xor
movsl
ds
mov
in
push
add
push
popa
sbb
sbb
push
jecxz
mov
repnz
mov
aaa
or
jl
sbb
call
dec
fnstenv
mov
test
outsb
mov
int3
cltd
adc
xchg
sbb
sbb
fisubrl
daa
or
or
cwtl
mov
enter
shrb
adc
or
jp
or
push
adc
sahf
fisttpl
pop
lret
loope
dec
aam
sbb
dec
xlat
pop
xchg
inc
xchg
push
repz
xor
std
jb
movsb
scas
dec
lret
imul
stos
sbb
insl
sub
sub
inc
call
pop
pushf
and
adc
movsl
adc
pop
scas
and
add
mov
jl
gs
ja
in
iret
cltd
adc
fisttps
cmp
out
sbb
test
or
push
or
out
add
leave
sbb
out
jnp
xchg
push
out
movsb
out
paddd
adc
and
dec
cmp
adc
mov
sub
ds
mov
or
out
inc
enter
push
xchg
das
xor
cmp
ffreep
and
jb
inc
mov
xor
mul
sbb
jae
addb
jmp
rcrl
dec
fldt
pop
jle
inc
xor
jp
cmp
fmulp
jle
xchg
cld
fstpl
fs
jbe
mov
mov
inc
out
mov
cmpsl
mov
gs
inc
or
pop
xor
xor
push
or
lds
test
clc
mov
test
bound
mov
mov
pop
pusha
mov
mov
dec
pop
jo
jbe
cmp
and
repnz
sbb
fs
mov
or
fmull
outsb
jnp
fs
notb
push
xchg
push
pop
jl
xchg
stos
ret
or
insb
outsb
mov
dec
xor
sbb
test
and
pop
ret
cld
loop
notb
out
or
fstl
rclb
dec
cld
mov
hlt
push
rcrl
sbb
jb
add
js
jmp
movsl
neg
cmpsl
push
mov
rcrl
and
push
inc
aam
jo
push
call
mov
enter
cmp
icebp
test
ficompl
in
nop
pop
mov
dec
andb
movsl
mov
dec
mov
test
fcoml
pop
lds
repnz
out
jno
add
mov
xor
add
inc
in
or
in
pop
adc
pop
daa
nop
fcom
rol
aam
andl
insl
pusha
dec
jnp
pusha
add
dec
adc
add
fs
repz
inc
test
cmp
mov
ret
enter
imul
loope
mov
push
xchg
lret
pop
scas
ljmp
pop
ret
or
jl
push
jp
jo
inc
int
jne
sbb
mov
out
hlt
push
shlb
test
jle
or
sti
xchg
add
sub
mov
flds
cmp
adc
push
push
dec
ds
sub
jnp
out
xor
paddq
push
in
and
popf
adc
jmp
std
xchg
mov
lds
loope
dec
outsl
inc
rcrb
pop
popl
mov
lock
cmpsb
xchg
adc
mov
pop
xor
fstps
rolb
and
jecxz
stc
sbb
lahf
test
mov
push
xchg
pop
fs
mov
pop
mov
sbb
mov
xchg
mov
xor
mov
adc
notl
enter
mov
hlt
ja
data16
pop
int3
sahf
jnp
cmp
and
into
cmpb
cmpsb
xchg
jb
mov
ljmp
push
adc
sti
xor
and
lret
cld
imul
dec
sub
jle
daa
cs
mov
test
mov
adc
aad
iret
jbe
in
jle
out
data16
loope
ror
or
test
scas
mov
cmpsb
or
xchg
push
dec
daa
outsl
mov
mov
mov
or
dec
into
out
inc
outsb
scas
int3
lcall
inc
add
in
fisttps
inc
cmp
jg
inc
pusha
pusha
cmp
dec
addb
mov
jg
imull
sub
cmp
lods
inc
movsl
and
ss
out
mov
inc
or
mov
cmp
push
in
ficoms
lret
xchg
or
test
xor
aam
repz
dec
sbb
sbb
push
add
sub
jmp
leave
hlt
dec
jg
test
iret
ds
out
inc
jbe
xchg
jb
out
or
aam
adc
lret
push
xchg
add
loopne
cmp
mov
mov
lcall
push
pop
sbb
and
xchg
fsts
push
cmp
jne
xchg
ret
lret
clc
xchg
icebp
inc
lahf
push
hlt
test
sub
mov
rclb
jmp
out
bound
test
and
jns
rcr
dec
inc
aaa
movsl
std
lcall
sbb
xchg
shlb
popf
sub
mov
cwtl
aas
dec
dec
pop
xchg
mov
adc
pop
lods
test
shl
push
push
sbb
cmp
push
orb
mov
mov
lea
sbb
jge
jecxz
mov
xor
addr16
mov
jmp
mov
and
sub
rcrl
xchg
mov
jne
xlat
jns
inc
xchg
mov
mov
cltd
cs
xchg
mov
out
mov
xchg
insb
scas
or
sub
mov
add
mov
adc
arpl
es
cmp
push
arpl
sbb
cmpsl
hlt
aam
aaa
or
mov
and
loop
adc
fwait
mov
sbb
dec
dec
jle
inc
loop
loopne
mov
or
nop
addl
loope
jmp
fsubr
jb
mov
pop
pop
jecxz
or
das
aaa
xchg
rcr
fmull
sub
pop
gs
add
jo
sahf
je
mov
incb
popf
cli
push
sbb
mov
fistps
and
lds
lock
daa
test
in
pop
fidivs
push
mov
mov
lea
xor
dec
lods
call
fs
xchg
mov
cmp
and
mov
pop
dec
jns
stc
xchg
dec
inc
push
adc
mov
rcll
imul
les
inc
and
addr16
jnp
xchg
push
lahf
and
dec
out
icebp
mov
insb
xor
test
je
add
mov
aas
stc
and
stc
das
aad
test
loope
mov
jbe
cmp
pop
sbb
xchg
pusha
nop
sbb
mul
sub
adc
stos
mov
jae
ljmp
sub
xor
or
mov
test
adc
mov
inc
out
push
int3
dec
ret
out
cmp
inc
mov
mov
xor
mov
in
pop
rorl
rorl
add
jecxz
cmp
push
movsl
push
push
cli
xor
or
jne
jns
and
out
lds
insl
or
les
mov
lahf
aas
pop
and
outsl
in
mov
fisubrs
push
imul
adc
xor
int
idivl
fsubl
adc
mov
sarb
mov
dec
pusha
cwtl
pop
pop
xor
xor
xor
or
int3
aad
inc
sub
push
mov
ret
in
imul
aas
mov
xchg
lock
mov
adc
in
push
outsb
call
test
cmp
jnp
cmp
pop
repnz
aad
arpl
imul
in
inc
fnstcw
adc
pop
dec
sbb
lret
insb
sbb
les
mov
gs
daa
jno
shll
lods
data16
ljmp
add
mov
dec
lret
es
sarb
ja
mulb
jnp
jl
mov
mov
or
sub
clc
cmp
inc
sbb
popf
out
pop
jle,pt
pop
lock
add
icebp
cvtpi2ps
test
mov
sub
inc
pop
aam
cmc
das
inc
sbb
inc
xlat
cmp
test
imul
sub
sub
popa
call
inc
jl
dec
loopne
ficomps
cwtl
push
and
push
aas
stos
ljmp
sub
lret
in
lahf
cmc
cltd
mov
sub
push
ljmp
mov
push
cmp
and
jp
lds
data16
jb
fwait
das
loopne
or
fldl
cmpsl
adc
jns
or
xchg
test
inc
adcl
add
les
out
pop
movsl
aaa
sbb
shl
fwait
jae
xchg
xchg
sbb
sbb
dec
dec
jp
loope
dec
mov
mov
or
fiaddl
sbb
xor
dec
out
pop
pop
push
mov
sub
mov
lahf
scas
push
out
out
xchg
stos
lock
enter
xor
out
ret
xor
ficomps
xchg
jnp
out
jbe
sub
fcomp
js
xorl
jno
jp
ficoml
mov
inc
insb
mov
xchg
ret
call
or
sbb
inc
in
cs
lret
inc
inc
bound
push
push
jnp
xchg
lea
sub
push
fnstcw
stos
mov
mov
test
mov
insl
xchg
jbe
test
mov
popf
jne
arpl
xor
mov
std
xor
arpl
mov
mov
repz
adc
mov
lret
jp
mov
mov
sub
cld
cmp
sbb
lock
mov
out
mov
mov
int
and
jnp
and
andl
mov
cmpsl
adcl
pop
sub
std
pop
cwtl
mov
hlt
lea
stos
cmp
mov
xchg
lret
xchg
aaa
adc
fmull
xchg
jne
and
mov
in
dec
cmc
sarl
stos
fnsave
push
test
stos
xor
or
cs
jle
fs
push
cmp
out
sub
mov
mov
stos
repz
mov
pushf
mov
int3
push
ja
jbe
pop
adc
cli
cmp
dec
pop
aad
adc
dec
and
mov
incl
in
arpl
mov
xor
cmp
sbb
xchg
lahf
clc
stos
and
aam
jecxz
enter
pop
mov
imul
mov
sub
push
stos
xchg
inc
lock
fsubl
adc
push
push
and
xlat
cmp
jnp
movsb
outsb
xchg
mov
imull
xlat
cmp
mov
notl
mov
push
or
scas
pop
aam
xchg
jmp
pop
fs
fidivl
mov
jo
and
call
sub
mov
in
cltd
add
call
mov
fadd
les
inc
xor
das
repz
std
push
ret
insb
les
js
fidivrl
sub
pop
sti
dec
xchg
out
fiadds
sbb
mov
sbb
dec
aaa
push
ljmp
xchg
add
inc
test
jp
lahf
jo
pop
dec
orl
addl
lcall
scas
xchg
jge
rep
mov
jecxz
addb
sbb
dec
daa
sarl
mov
sub
int3
aas
xchg
das
popf
xchg
jle
dec
and
mov
inc
mov
inc
psllw
je
fcompl
dec
aam
bound
xor
in
mov
cld
push
jb
fwait
cmp
int3
adc
daa
cmp
mov
sbb
adc
mov
outsb
je
pop
adc
testb
fcoms
fwait
dec
loopne
ja
inc
cli
cmp
bound
dec
add
ss
adc
pop
iret
mov
loope
js
jl
cmp
lock
xor
cwtl
int
in
dec
xlat
jno
mov
cmpsb
sub
mov
add
add
xchg
loop
stos
add
add
in
cmpsl
lahf
rcll
stc
mov
out
outsl
sbb
sub
mov
mov
daa
cmc
xorb
movsb
shlb
adc
mov
mov
in
xchg
xor
sub
xor
ret
push
mov
xchg
fisubl
les
fiadds
repz
je
adc
shll
pop
xor
xor
subb
cwtl
pop
subb
ja
pop
push
pushf
sub
push
cmp
das
fs
out
adc
push
mov
inc
in
call
adc
jmp
loopne
xor
fstps
idiv
push
xor
jg
dec
and
adc
cmpsb
dec
pusha
cmp
add
shlb
inc
dec
jg
insl
cmp
xor
jle
in
mov
test
int
xchg
mov
cmc
and
cwtl
je,pn
push
cmpsb
push
mov
mov
add
rorb
pushf
mov
lahf
loopne
gs
pop
ljmp
cmc
cwtl
fsubrl
mov
ret
sbb
shrl
lock
mov
push
jae
je
movsb
inc
repz
pop
lods
sbb
je
mov
out
js
cmp
das
xor
iret
xchg
push
push
jns
add
pushf
inc
or
and
cmpsl
gs
inc
lock
fldenv
sub
int
mov
push
push
or
mov
cmpsb
and
pop
mov
data16
dec
mov
add
mov
push
pop
inc
roll
sub
shl
mov
mov
pop
mov
lcall
xchg
jge
xor
int3
stc
or
call
hlt
sti
imul
insb
jge
pop
dec
dec
in
repz
mov
xchg
ret
sar
jp
fidivs
adc
add
out
out
pop
repz
jl
sub
ja
add
jp
xchg
add
pop
out
mov
loopne
add
in
mov
lret
jp
out
adc
sub
pop
xor
or
fs
dec
dec
div
and
mov
dec
pop
arpl
xchg
pop
frstor
jmp
xchg
fistps
inc
and
jge
jno
fldenv
push
dec
fisttps
testl
dec
fiadds
sbb
das
push
mov
mov
cmp
fmull
out
movsb
loope
jmp
push
sub
in
imul
outsb
lahf
aad
subb
popf
hlt
outsb
lods
dec
pop
pushf
or
insl
sub
hlt
hlt
jmp
imul
xchg
cld
or
xor
sarl
fists
xor
shr
lods
gs
sub
popf
or
and
cmp
cmp
jge
inc
sahf
rcr
js
call
mov
ss
cld
mov
test
icebp
movsb
sub
push
jecxz
mov
xor
pop
stos
test
cmp
int3
loop
adc
arpl
jae
in
push
jp
push
stc
jae
push
lods
cmp
out
push
xchg
push
fistpl
and
sub
jmp
test
push
cmpsb
mov
inc
push
js
pop
mov
sahf
aad
mov
push
sbb
cmp
sub
mov
add
scas
mov
outsb
insl
fstp
lods
iret
pop
xchg
sub
ja
lock
out
je
or
idivl
imul
cld
add
pop
pushf
inc
es
cmp
adc
mov
rorb
cmpsl
in
mov
sub
mov
inc
pop
pop
imul
insl
popa
inc
lret
popa
and
bound
or
push
pop
ret
pop
in
or
push
cwtl
in
xchg
repz
xor
sub
clc
cld
mov
adc
or
fidivl
add
enter
int
cmp
add
xchg
push
jb
push
add
inc
adc
inc
push
push
fldenv
push
cmpsl
mov
call
add
dec
xchg
or
jno
inc
inc
clc
xchg
addr16
and
das
mov
insb
sbb
cmp
push
fcmovne
scas
inc
shlb
cltd
stc
xchg
xor
nop
test
test
and
add
sub
push
imul
frstor
rcl
cmc
jge
cmp
adc
shll
lahf
out
cltd
sahf
xchg
fisubrl
or
sbb
inc
insb
dec
xor
mov
cmp
pop
and
pop
roll
or
incl
pop
push
aas
inc
push
addl
sbb
add
and
mov
mov
neg
and
ret
loop
adc
or
scas
mov
pop
xchg
mov
std
in
enter
inc
pop
mov
fs
clc
enter
repnz
int3
push
scas
in
sub
into
jge
jo
fadds
cmp
pusha
inc
int
fistpll
xchg
scas
outsb
scas
mov
cwtl
popf
sahf
test
and
std
cmpsb
xchg
je
fbstp
xlat
jmp
sub
mov
pop
stos
stos
movnti
inc
push
add
daa
stc
outsb
mov
jno
das
test
sub
inc
pop
adc
inc
xor
jge
xor
aas
jns
sub
popa
fbld
aaa
xor
and
shlb
ja
fcompl
daa
fs
stc
and
and
shl
and
scas
insb
fdivrp
popf
movsb
subb
js
inc
nop
mov
notb
and
fidivs
rorl
dec
in
push
loop
lcall
xchg
jb
xor
inc
xlat
or
sub
xchg
xchg
cmp
push
iret
cld
es
or
sub
repz
jmp
push
andnps
mov
insb
aas
xor
aam
push
mov
loopne
push
test
inc
leave
insl
and
repz
cmp
fmul
mov
enter
xchg
movsl
sbb
rcrl
push
cmp
sbb
jmp
xchg
movsb
sub
cmp
xor
jge
inc
push
add
inc
pop
stos
es
fadds
sbb
jge
pop
aam
cwtl
cmp
imull
jg
add
mov
in
fcoms
adc
loope
int
shl
mov
sub
jmp
and
dec
fistpll
pushf
les
jecxz
shrb
dec
shll
push
lea
sub
push
fisttpll
je
insl
mov
xchg
add
pop
repnz
jg
outsl
iret
jne
subl
push
sub
push
adc
out
sub
jne
inc
xchg
xchg
icebp
pop
inc
shll
rcll
fwait
idivb
or
push
out
outsb
decl
or
add
shl
push
lahf
out
ret
add
and
outsl
cwtl
lahf
mov
stc
in
ja
scas
jbe
dec
stos
push
dec
push
jb
push
test
and
lret
mov
loop
aas
adc
inc
fcomi
sbb
push
rsqrtps
icebp
stc
inc
ja
in
jae
arpl
dec
add
add
xor
xor
pop
rcrl
fcoml
insl
jmp
clc
cld
sub
inc
jp
adc
sub
add
call
loope
daa
jecxz
int
test
lea
cld
jb
cmpsb
mov
jb
sub
xor
cwtl
clc
sub
gs
add
jmp
in
inc
push
pop
dec
or
and
movsl
inc
leave
test
popw
dec
jle
aad
and
jge
aas
mov
xor
sub
push
and
mov
fwait
xchg
sbb
jecxz
call
ret
loopne
fucomi
fs
fisttps
sub
test
and
ss
fadds
xor
push
push
sahf
cmp
data16
add
lea
mov
xorb
cwtl
mov
stos
out
cmp
call
mov
fcmovbe
jb
xor
lods
popa
or
sti
inc
and
es
mov
rcl
mov
sti
pop
xlat
lcall
stos
add
outsb
pushl
and
stos
outsl
mov
adc
lds
aad
bound
jbe
push
inc
sub
mov
mov
dec
pusha
ja
lcall
mov
pushl
push
jl
popf
inc
fucomip
imul
pop
xlat
popa
out
push
cli
incb
and
add
mov
pop
jo
cli
inc
aas
pop
loope
loope
divb
pushf
lahf
sti
test
xchg
adc
lods
imul
push
inc
sub
jns
testw
adc
and
or
mov
push
push
lea
fisttpl
rcrb
mov
pop
mov
add
xchg
xorl
je
mov
sbb
inc
mov
mov
xor
inc
pop
adc
push
fisttpll
dec
sbb
pop
cmp
repnz
and
add
les
xchg
das
or
adc
pop
jo
lahf
js
inc
into
int3
dec
mov
cwtl
filds
cmc
sub
sub
sub
sub
scas
bnd
jbe
inc
dec
mov
test
cmc
mov
cmpsb
jnp
push
ja
mov
fcoms
out
mov
bound
sti
repnz
cmp
pop
mov
out
pop
xor
fldl
out
jb
pop
push
pop
inc
jecxz
addb
repnz
push
ficompl
lds
mov
adc
cmp
popa
out
dec
fs
jb
shl
or
jns
sbb
mov
mov
fwait
pop
arpl
push
ds
cs
pop
dec
movsl
ret
push
into
ja
adc
pop
and
xchg
sub
inc
jno
xchg
pop
mov
cmpsb
std
xlat
or
stos
es
ret
loop
push
rep
inc
jg
mov
dec
xchg
mov
icebp
fidivrl
out
or
bound
mov
xor
fsubrl
aas
xchg
mov
call
and
sub
jns
movsl
cmp
stos
fs
pop
push
and
mov
xchg
adc
push
fists
mov
mov
outsb
add
cmc
add
call
xchg
sbb
cmp
and
mov
jno
test
lret
and
pop
and
stos
cmp
ret
ljmp
aaa
jne
nop
out
push
cmp
sti
clc
sub
cmpsb
mov
je
mov
into
outsb
pop
or
dec
shl
sahf
in
push
mov
dec
inc
cmp
xor
mov
and
adc
rorl
leave
pop
push
inc
inc
test
pop
add
sarb
out
mov
in
js
mov
stos
call
repz
cs
xor
or
sbb
jge
in
fisubrs
mov
mov
call
jb
jl
or
pop
push
into
sbb
push
dec
call
mov
pop
inc
mov
add
mov
push
pop
movsb
fs
sbb
jge
lds
sub
pusha
adc
into
adc
es
add
movsb
push
cmp
and
xlat
push
enter
sahf
jp
sub
negb
sub
cmpsl
push
iret
adc
or
pushl
ljmp
sbb
mov
sbb
dec
mov
popa
shlb
mov
dec
into
cli
out
lock
bound
xor
out
mov
shld
and
mov
mov
negl
cmpsb
dec
aas
jp
insl
stos
push
sti
cwtl
cmc
aad
in
pop
mov
pop
pop
cmp
xor
xor
push
repnz
rorl
ss
shrb
mov
pop
sbbl
inc
sahf
push
pop
add
jne
mov
notl
icebp
mov
mov
cmpsb
test
dec
sbb
repnz
pop
pusha
cli
sbb
and
mov
cs
loopne
lock
imul
xor
rorb
add
xchg
xchg
push
lea
aas
shll
push
outsb
add
jne
stc
xchg
pop
ljmp
ret
fcom
adc
subb
jo
jl,pn
dec
mov
xor
adc
mov
mov
imul
mov
aam
lret
clc
je
dec
mov
add
fwait
dec
jge
test
mov
es
push
push
sub
mov
sbbb
test
sbb
mov
or
andl
push
jg
popa
in
imul
addb
lods
push
int
in
pop
jp
orb
push
and
ffreep
rcr
stos
sbb
xlat
mov
stc
in
sub
push
jns
adc
js
ja
jge
das
popa
loop
adc
mov
xchg
xchg
sub
fbld
test
andl
sahf
mov
push
mov
add
fucomip
repz
mov
push
clc
adc
mov
push
fnstenv
pushf
lds
cmp
ja
mov
popf
fucom
push
outsb
popf
xchg
push
add
hlt
mov
mov
movsb
outsb
cmp
sub
dec
std
add
pop
push
fdivl
ficoms
jecxz
sbb
add
inc
in
mull
clc
and
scas
jo
bound
jge
inc
clc
jb
jge
mov
xor
xchg
or
lret
cmc
xchg
adc
push
inc
inc
mov
pushf
add
sub
repz
adc
out
int3
xchg
sbb
movsl
cs
sub
pushf
ljmp
xor
push
inc
cs
xchg
jl
rolb
sarb
popa
and
leave
clc
mov
imul
mov
and
ja
fcmovne
lods
and
dec
lret
dec
testb
adc
push
lock
jmp
aam
jmp
dec
jnp
jp
add
xor
lds
lret
lahf
fmull
lea
jl
adc
stos
outsl
pop
dec
sbb
aaa
sub
sbb
ja
mov
stc
inc
insb
and
inc
mov
pushf
stc
daa
inc
loop
cmpsl
loopne
xchg
lret
jmp
jbe
dec
stos
xchg
pop
fwait
and
pop
lahf
arpl
pop
dec
repz
test
cli
or
xorl
out
mov
stc
std
mov
loope
jno
adc
das
movsb
push
and
aam
push
push
pop
xchg
xchg
mov
mov
cmpsl
inc
pushf
or
in
cmp
adc
ss
inc
mov
rolb
popa
fidivl
outsb
iret
mov
cmp
jbe
xchg
mov
cltd
mov
jo
cmpsl
nop
mov
mov
ficoms
add
or
mov
and
or
sub
sub
aaa
loopne
add
fidivrl
cli
adc
and
jae
pop
pop
xchg
cs
out
mov
shl
icebp
mov
stc
ret
xor
jl
sbb
loope
add
sbb
pop
adc
arpl
int
mov
int3
jl
add
sub
mov
sarb
gs
pop
pop
push
cmp
jp
shll
loopne
es
cmp
push
ss
es
jbe
outsl
jbe
xchg
stos
mov
enter
jmp
dec
popa
out
rorl
aas
push
xchg
push
jl
push
orb
xchg
mov
or
sub
push
jmp
mov
inc
outsl
add
negl
rolb
adc
inc
xchg
out
sbb
repz
lea
pop
sub
jl
sub
arpl
clc
push
repnz
jnp
dec
or
pop
add
nop
gs
stc
mov
mov
adc
dec
insb
outsb
pop
daa
test
cmp
into
jp
inc
push
pop
sub
push
jmp
inc
lods
lea
loopne
dec
hlt
inc
jnp
test
jae
out
pop
fmulp
testl
sub
inc
sub
int
inc
lods
cmp
repnz
mov
push
movsb
xchg
mull
mov
fldl
imul
rcll
cmp
adc
xor
inc
cmpsb
sarb
or
sub
adc
cmpsl
mov
cld
jbe
sarb
cmp
test
mov
sub
das
je
mov
shrl
dec
pop
jecxz
push
push
xor
push
mov
push
bound
xchg
lret
mov
insb
js
dec
lret
mov
dec
fistps
push
or
mov
sbb
jp
push
cmpsl
aas
jnp
int3
and
push
jle
jl
test
pop
testl
mov
adc
sub
repz
lds
fs
jae
mov
inc
add
flds
adc
inc
cmp
jp
cltd
and
sbb
into
pop
cltd
adc
add
sbb
clc
inc
ficoms
mov
aas
out
and
sub
sbb
jl
dec
jbe
fistps
shl
sbb
cmp
xor
jbe
pop
mov
xor
push
cli
inc
push
psubusw
mov
xor
pop
pop
testl
or
shrb
mov
add
mov
pop
popf
mov
out
push
lods
sub
sahf
mov
repnz
inc
sub
mov
push
jl
and
outsl
aam
mov
in
push
xlat
mov
sub
addr16
push
fisubl
outsl
rcll
jl
icebp
jge
pop
and
pop
in
fsubp
sub
and
xor
jg
dec
movsb
jecxz
test
sar
xor
mov
sbb
orl
xchg
movsb
jb
divb
sub
sarb
test
cltd
mov
imull
lcall
sbb
fmuls
out
mov
pop
testl
lret
les
leave
sbb
fdivs
das
push
fnstsw
iret
std
faddl
or
fdivl
sbb
and
mov
jbe
xchg
inc
or
mov
pop
fsubrl
call
mov
jecxz
and
faddl
xor
bound
cmpsl
nop
orl
dec
lret
and
cmp
dec
or
rorb
sub
stos
arpl
loop
sub
cmp
pop
and
inc
sub
jl
or
mov
loop
pop
xor
bound
fcmovb
cli
shrb
fldl2t
mov
xchg
adc
insb
mov
mov
test
outsl
les
leave
inc
and
test
das
test
cmpsb
jle
insb
shr
int
inc
inc
inc
lea
shlb
sub
cwtl
in
pop
cs
lds
dec
ss
mov
lock
rcrl
adc
mov
pop
movsb
inc
dec
cmc
sar
pop
pop
in
ret
imul
mov
test
dec
inc
pop
lods
push
int3
call
cmpsb
aaa
push
sti
lods
mov
das
outsl
loop
sbb
jle
repz
in
dec
sub
fadds
lods
faddl
jnp
scas
pop
xchg
daa
pop
xchg
and
mov
js
dec
pushf
sub
enter
xor
xor
xchg
rclb
add
pusha
pop
jge
dec
mov
jne
pop
pop
cld
enter
mov
and
mov
ja
adc
fs
les
out
jb
inc
xor
xor
std
xchg
or
mov
cmovle
push
int3
insl
mov
cmc
pop
fisubrl
leavew
mov
jnp
sti
and
aas
mov
mov
push
pop
and
repz
dec
test
lods
ret
mov
std
or
pusha
popf
mov
sub
mov
imul
dec
mov
hlt
in
out
jno
shl
bound
jmp
cmp
push
repz
ret
inc
xlat
popa
les
ss
mov
xchg
xchg
aaa
out
cmp
jae
popf
xchg
test
mov
push
xor
inc
div
xchg
and
shrl
inc
sti
mov
xchg
movsl
jns
sub
loop
cmp
in
add
add
lcall
call
push
icebp
push
mov
stc
jns
and
js
xchg
icebp
popa
inc
jle
aam
clc
cmp
les
jmp
adc
xor
pushf
sarb
mov
call
pop
xchg
lock
mov
ret
fdivl
rorl
mov
jne
xchg
sbb
lds
jg
inc
xchg
dec
push
into
ss
jae
fprem
adc
pop
pop
mov
cmp
xchg
push
mov
out
test
sub
mov
loopne
dec
das
xlat
push
jbe
sub
adc
popf
imul
fisttpll
xchg
or
in
scas
push
sbb
add
outsb
sub
enter
cmpl
and
cmpsb
cmp
pop
out
mov
hlt
fmuls
flds
or
lock
mov
add
fcoml
and
sub
loopne
or
cli
mov
cmp
scas
jmp
inc
rcrb
jno
sbb
xor
xchg
mov
movsl
js
ficoml
mov
jne
cmp
cs
pop
xor
pop
imul
enter
inc
push
sahf
ret
sub
loopne
mov
ss
cmp
mov
pusha
aas
idiv
pop
sahf
outsl
les
scas
fcoml
ljmp
rcll
pop
insl
clc
aam
icebp
xor
inc
push
jb
push
arpl
repnz
jle
cmpsb
and
sar
lret
jmp
call
ja
imul
inc
fs
or
mulb
jmp
pop
ss
inc
xorb
xor
lea
push
mov
inc
push
mov
cmp
push
push
ja
cmp
ss
mov
pop
jbe
ror
add
sub
sub
sub
ret
mov
in
bound
inc
push
add
mov
repz
push
mov
lret
cmp
hlt
dec
push
pop
hlt
or
rcrl
xor
js
cld
xchg
loopne
xchg
int
dec
adc
pushf
cmpsb
repz
xchg
clc
fdivs
popw
xlat
pusha
aaa
inc
aaa
jmp
insl
fisubrs
adc
push
sub
or
das
push
pop
pop
in
inc
mov
fcomip
mov
sarl
aad
dec
adc
movsb
sbb
dec
in
cmc
pop
jp
ja
fdivs
popa
enter
idiv
cld
push
add
cmp
xchg
lods
stos
inc
mov
add
jge
or
adc
fstl
push
adc
sbb
out
aaa
mov
cld
mov
lods
adc
push
cmpsl
push
enter
imul
dec
jg
test
arpl
icebp
inc
out
cmp
mov
or
dec
movsb
ret
in
jo
pextrw
popf
mov
out
pusha
fcom
fsts
lea
and
lret
push
addr16
clc
jmp
add
sub
jo
sub
adc
jmp
rol
orb
xchg
sub
leave
mov
adc
in
and
mov
fadd
push
ljmp
sub
sbb
inc
or
xchg
aad
jle
fsubs
inc
xchg
mov
fisttpll
xchg
test
sub
movb
sbb
push
cld
les
or
pop
and
or
mov
dec
js,pn
inc
mov
push
jns
add
lcall
test
or
aam
jge
jae
cmc
pop
fcmovu
pushf
mov
inc
and
repnz
popa
inc
dec
xor
leave
insl
ds
inc
int3
scas
ds
pop
cmp
cmp
icebp
imul
lods
pop
jle
mov
inc
cmp
divb
cld
encls
sub
lea
out
outsb
add
cmpsl
mov
mov
ds
jp
movsl
pop
sbb
incb
xchg
dec
outsb
push
test
pop
xchg
rol
pop
scas
in
fsubs
push
cmp
cmpsb
mov
and
jl
mov
inc
outsl
call
insb
push
push
fcmovne
ret
call
jg
nop
test
adc
push
test
jns
imul
xchg
ja
call
roll
in
cmpsl
cmp
mov
aas
push
sbb
xchg
fcmovb
sti
mov
jbe
cmp
xor
sub
into
cmp
mov
dec
jecxz
adc
push
sarb
add
mov
mov
cmpl
jl
sbb
add
fmull
fimuls
std
test
iret
ljmp
outsl
jbe
sub
mov
enter
addr16
push
daa
jle
sarb
add
sbb
ror
adc
into
outsb
cs
add
mov
fcompl
rorl
or
mov
lock
pop
sti
lods
cmp
push
loope
xor
ret
mov
imul
mov
mov
test
enter
dec
loopne
jge
shl
mov
push
sbb
roll
jp
jp
adc
bound
mov
jge
mov
add
mov
push
setle
pushf
fsubrl
ret
inc
stc
inc
jp
mov
pusha
ja
dec
faddl
scas
aaa
xor
jecxz
scas
inc
fnsave
add
mov
lods
stc
inc
lret
adc
aaa
mov
loop
loop
pusha
into
fwait
mov
mov
pop
vzeroupper
int3
push
jns
xchg
sub
into
sahf
in
clc
sub
in
lahf
mov
out
or
fildll
xchg
cmp
aad
xor
ficompl
in
sbb
lret
mov
mov
cmc
popf
iret
mov
insb
fimuls
mov
push
dec
leave
mov
jecxz
dec
sub
inc
nop
cmp
sbb
mov
shll
mov
test
xlat
cmp
xchg
mov
adc
or
dec
in
push
xlat
inc
test
xor
add
mov
jne
add
jnp
pop
std
pushf
inc
aaa
dec
pop
adc
cmpsl
out
push
xchg
adc
clc
push
pop
cltd
mov
or
cmp
enter
leave
enter
popf
mov
add
in
test
es
adc
in
pop
pop
ljmp
test
rcll
adc
cli
ss
adc
adc
dec
pop
notb
ds
fwait
js
push
in
push
aas
jno
or
out
test
mov
les
inc
xchg
test
cs
add
cs
test
inc
push
jb
shl
imull
addl
sbb
mov
ficoml
mov
cli
in
dec
sete
loope
ss
pop
aas
into
rorl
jb
xchg
cs
xchg
or
mov
mov
mov
das
mov
dec
add
outsl
push
pop
inc
cld
mov
sti
adc
loopne
xchg
sbb
inc
aas
shl
scas
repnz
popf
mov
outsb
mov
add
test
lcall
or
jmp
add
inc
js
cmp
add
mov
sbb
push
pop
repz
mov
jl
adc
mov
hlt
out
xchg
lahf
xor
aam
push
aad
mov
jne
jmp
into
jecxz
subb
add
mov
push
insl
sarl
mov
das
inc
xchg
sub
dec
into
push
cmp
scas
dec
mov
je
outsb
xor
ret
inc
ret
popf
aam
xchg
sahf
xor
test
xor
aad
cwtl
mov
xor
mov
mov
out
out
xchg
mov
cmpsb
and
and
cli
mov
loope
cmp
mov
or
call
iret
les
adc
pop
adc
push
clc
int
and
in
jle
cmp
pop
jnp
lock
cwtl
sbb
sti
xor
xor
insb
aad
out
pop
pop
inc
aas
xchg
leave
and
add
push
dec
add
sub
jl
leave
pop
dec
jo
mov
int3
xor
ficoml
add
jecxz
and
push
push
or
lcall
movsl
or
outsl
out
mov
jge
cmp
jbe
cmp
lods
out
clc
push
xor
stc
xor
xchg
lods
out
mov
scas
or
adcl
or
rorb
sbb
xor
mov
test
jle
mov
dec
pop
fists
or
stos
adc
icebp
mov
push
adc
scas
out
pop
pop
fiadds
xchg
in
imulb
mov
push
sub
sbb
cmp
xlat
test
sub
sub
sub
mov
jge
pop
fildll
jbe
dec
imul
pop
repnz
cmp
jb
push
repz
xchg
div
xchg
jnp
out
jp
or
rcl
das
jnp
incb
sbb
jbe
adc
push
cmpsl
pop
jnp
fadds
ret
pop
in
stc
fildl
mov
movsb
das
lock
call
xchg
lret
sub
inc
add
ja
out
inc
inc
movsb
push
out
cltd
mov
sbb
int
push
mov
mov
insb
cltd
or
push
rcr
mov
imul
mov
push
add
xchg
je
jnp
rcrl
movsb
push
inc
test
jg
out
inc
jle
dec
cli
push
xchg
ret
pop
mov
adc
jns
jb
jne
push
add
mov
xor
pop
and
sub
enter
sbb
lcall
cmp
out
pushf
lret
mov
orb
cmpsl
fcomps
xor
mov
data16
sbb
lods
out
add
nop
pop
add
loop
hlt
push
cmp
arpl
push
jle
mov
cwtl
rorb
sti
fdivrp
popf
mov
gs
fptan
out
dec
cltd
xchg
mov
inc
leave
pusha
test
add
pop
add
push
shlb
das
stos
aam
int
repz
jae
in
popf
sbb
sbb
pop
adc
xor
shlb
cmp
jmp
sbb
cmc
or
cld
sub
je
jge
cltd
outsb
daa
add
and
pop
pop
dec
sub
mov
push
out
cltd
xchg
mov
add
jne
sub
imul
fcoml
dec
push
hlt
jns
xchg
adc
adc
xchg
iret
push
xor
adc
es
push
rorb
jb
or
pusha
jb
out
add
test
test
add
and
or
pop
adc
lcall
lea
jo
jo
pushf
pop
xor
insb
pop
insl
xor
mov
repnz
fwait
sbb
sbb
arpl
mov
inc
mov
scas
push
pop
xchg
pop
mov
adc
stos
insb
repz
mov
mov
dec
mov
pop
into
stos
dec
xchg
sbb
xor
test
testl
sub
repz
or
sti
push
nop
cmp
mov
pop
sti
movsb
jne
mov
int3
mov
pop
lock
xor
rep
jge
jmp
sub
aad
subl
repnz
xchg
sbb
mov
daa
test
out
test
cmpsl
jl
test
xor
sub
jnp
adc
mov
or
insb
stos
dec
xor
imul
cltd
icebp
adc
sub
fmull
xchg
adc
sbb
jo
je
jg
inc
inc
pop
cmc
lea
cli
fdivr
jle
call
data16
mov
or
rcrl
clc
call
int3
sahf
cmpl
xor
sahf
scas
loope
mov
cmp
sub
adc
test
and
xor
clc
pushf
xor
out
clc
add
andb
es
jmp
test
cmp
push
in
jmp
sub
lds
les
imul
mov
stos
pop
mov
push
dec
mov
aas
push
add
jmp
fldl
out
cs
adc
int
gs
les
dec
loopne
xor
and
cmp
push
jmp
ret
int
scas
fisubrs
loop
push
pop
scas
jo
adc
mov
jo
leave
cmp
aad
jns
mov
rolb
xchg
jbe
pop
add
mov
sub
sbb
lret
mov
mov
ja
push
jecxz
push
jne
inc
dec
sbb
gs
lods
sub
xor
mov
repz
icebp
mov
adcb
push
mov
inc
int3
sub
xchg
ficoml
xlat
pop
ror
mov
shll
scas
das
cmpsb
dec
xor
dec
add
lret
mov
shll
and
dec
repz
aaa
mov
push
xor
or
xchg
lods
gs
loopne
rcr
pop
cmpsl
mov
jle
cwtl
popf
mov
es
ds
add
icebp
fiaddl
add
aas
aam
mov
and
fwait
xchg
mov
data16
mov
xchg
in
mov
dec
lahf
pop
cmc
xor
cmpsb
adcb
xor
pop
cmp
push
lea
hlt
rcll
mov
cmp
dec
fdivrl
icebp
mov
cvtps2pd
mov
enter
pop
clc
das
sub
call
mov
aad
repz
fsubl
out
lret
mov
mov
in
dec
arpl
in
scas
test
add
xor
in
das
cltd
xor
push
repz
add
mov
aas
jae
sbb
mov
scas
leave
mov
or
sbb
in
repz
js
mov
sbb
cltd
pushf
stos
pop
shll
popa
shrb
mov
mov
loop
xchg
push
outsl
mov
out
xchg
push
xor
jle
test
jb
dec
stos
outsb
jbe
sahf
jecxz
lock
insl
mov
lods
push
sbb
loop
fsubrp
iret
addl
ljmp
mov
xlat
cmp
std
xchg
ja
int
pop
add
xor
inc
pop
xchg
jp
dec
push
jge
add
shrl
inc
mov
mov
push
addr16
push
push
std
pushf
loope
xchg
mov
xor
into
xor
mov
aas
test
pop
cmpsl
sbb
out
or
dec
xchg
mov
cmp
aaa
pop
pop
jb
sbb
aam
sbbl
aaa
out
gs
push
jno
jle
jl
mov
dec
out
pop
mov
lods
aad
shll
xchg
aas
cmp
movsl
inc
mov
shr
mov
xor
sub
jae
ljmp
push
xchg
rcr
std
dec
adc
mov
xchg
imul
xlat
xchg
repnz
mov
add
sub
xor
inc
das
hlt
cmpsl
adc
in
jmp
sub
ds
out
add
push
jo
push
add
mov
inc
sub
out
cmp
das
outsl
pop
mov
xor
pop
mov
stos
cld
shlb
jae
test
or
cltd
arpl
and
sti
hlt
add
dec
sbb
push
cmc
jmp
inc
fcompl
cmpsb
cli
and
push
stos
sbb
loop
mov
pushf
pop
insb
test
sti
adc
leave
ljmp
push
adc
mov
mov
pop
xor
push
mov
sbb
imul
adc
outsb
sbb
mov
push
cld
sbb
sub
jno
inc
gs
daa
insb
cld
loopnew
sbb
lock
out
dec
sub
fidivrl
mov
mov
or
das
cltd
inc
mov
adc
int3
aad
fwait
xchg
jns
xchg
jmp
test
jmp
repnz
js
cwtl
jge
xlat
int
dec
inc
push
lods
outsb
testb
incl
inc
jl
lds
icebp
and
call
int
xchg
add
mov
sub
loop
ja
out
inc
push
push
jl
leave
fstps
cwtl
mov
and
repnz
fildl
dec
mov
data16
mov
sarl
pop
dec
dec
sti
data16
sbb
pop
and
xchg
ljmp
imul
dec
hlt
arpl
mov
xor
sub
jl
shl
xchg
adc
cmpsb
jp
cli
add
fsts
xchg
inc
lods
push
mov
arpl
dec
xchg
lock
dec
adc
add
inc
mov
and
push
cmpsb
mov
dec
popf
push
in
mov
ficompl
leave
daa
outsl
scas
js
fdivp
sbb
and
fwait
or
pop
xchg
stc
ss
mov
sbb
dec
ljmp
add
jp
out
mov
sub
sbb
xchg
sub
and
leave
xchg
ret
add
sbb
ret
lret
jp
dec
sbb
dec
insl
pop
or
je
lock
push
idiv
in
jnp
push
or
sub
pop
jae
cmc
test
jo
lods
stos
sahf
test
mull
dec
mov
dec
hlt
adc
fsts
adc
and
inc
mov
pop
sub
out
jp
and
imul
mov
mov
cli
int
repnz
mov
cs
jns
aas
pop
sbb
mov
inc
leave
lret
fldl
test
push
xchg
in
push
sbb
pop
les
popf
jbe
in
or
insb
push
push
cmp
fdiv
xchg
xchg
negl
shrl
insl
jne
mov
clc
imul
mov
jmp
push
pop
push
xchg
pushf
mov
negl
pop
cltd
lret
mov
or
sbb
push
das
movsl
mov
fbld
in
mov
xor
dec
cmpsb
dec
mov
pop
pop
jge
jnp
sub
jo
lret
sbb
popa
push
fisttps
jb
jne
adc
mov
sub
sbb
aad
das
pop
sar
sbb
insl
stos
cmp
enter
pop
fs
mov
cmp
add
testl
fldcw
xchg
adc
dec
loop
fwait
jp
gs
std
sbb
icebp
ja
adc
mov
push
mov
dec
adc
mov
cld
jecxz
leave
sbb
frstor
xchg
mov
outsl
jno
add
and
xor
push
or
sub
lret
mov
fisubrs
jae
or
pop
cmc
pop
ds
call
ljmp
jo
aas
pop
bound
in
leave
fs
pop
bound
or
push
dec
lock
mov
mov
out
fldt
push
mov
push
addr16
mov
data16
stos
jmp
sbb
inc
jge
ret
and
cs
outsb
jns
aam
std
pop
xor
lcall
sti
inc
je
scas
sti
xchg
pop
jge
cmpsl
sub
pop
cmpsb
jge
test
xlat
sbb
out
jecxz
js
or
mov
fwait
inc
inc
js
xchg
inc
pop
das
mov
mov
adc
mov
shlb
stos
popa
outsb
xor
cmpsb
pop
pop
jg
sub
mov
ret
mov
cmp
shll
dec
out
out
or
jnp
into
divb
and
pusha
and
cmpsb
insb
push
rsm
cs
mov
das
lock
pop
in
mov
push
rcrl
jns
ficompl
dec
arpl
push
inc
cmpsb
test
dec
std
lods
notl
js
data16
xchg
mov
mov
ficomps
inc
mov
push
lods
mov
push
mov
jo
sub
lret
push
mov
adc
xor
inc
jl
and
push
stos
ret
sub
adc
lcall
sub
sarb
cmp
leave
jnp
jge
cmp
and
and
ss
push
push
icebp
xchg
lods
aas
dec
xchg
fldcw
lods
inc
pop
dec
data16
xchg
sub
mov
add
movsl
pop
arpl
mov
lahf
dec
jmp
out
mov
inc
push
aam
imul
inc
scas
jnp
jo
fisttpl
dec
outsl
adc
mov
fidivrl
mov
data16
add
rcrl
pop
shll
dec
lret
pop
rcrb
nop
aad
jmp
xor
xchg
sub
rcrb
inc
xchg
leave
test
mov
dec
dec
outsl
into
jne
and
pop
repnz
in
pop
jae
jb
pop
adcl
cwtl
outsb
push
in
or
and
adc
popa
aaa
jno
pop
cmp
jb
iret
dec
mov
dec
mov
cmp
out
andb
dec
mov
inc
add
repz
push
xchg
rolb
cmp
sub
push
jbe
jecxz
or
pop
xor
clc
aam
cmpsl
mov
enter
adc
fwait
mov
lcall
or
lret
test
out
ljmp
jns
inc
adc
jle
mov
ret
les
pushf
lahf
adc
pop
int3
lds
insl
jnp
dec
sub
inc
add
clc
imul
in
dec
pop
adc
mov
push
adc
cld
fistl
cmpsl
sbb
lods
sbb
mov
je
insb
sub
mov
hlt
dec
cmpsl
aam
jne
lods
mov
push
sub
call
sbb
and
sarb
sub
mov
cmpsb
outsb
mov
dec
dec
xor
or
mov
rcrl
sbb
xor
or
sub
and
adc
andb
mov
lahf
inc
mov
ss
mov
push
outsl
mov
cmp
mov
fstpt
xchg
in
push
xor
xor
mov
mov
sbb
jp
xchg
int3
cld
pop
or
stc
inc
jp
bound
xchg
inc
inc
cmp
push
push
cmp
fs
mov
call
or
push
notl
xchg
mov
push
inc
js
xor
cmp
into
frstor
nopl
push
icebp
pop
lea
lahf
insl
jp
and
les
add
sti
in
and
sbb
xor
mov
adcl
jns
pop
mov
hlt
adc
sbb
out
cmp
in
ret
xchg
jo
inc
lret
pop
enter
cmp
cmp
xchg
leave
aas
xlat
mov
xchg
dec
jns
sarb
push
pushf
es
xor
xchg
sub
stc
fimuls
addr16
out
data16
mov
loopne
or
push
push
pusha
mov
aam
pop
icebp
mov
clc
inc
addr16
loop
jnp
pop
cmp
adc
cmp
pop
adc
flds
pushf
leave
add
aaa
ljmp
mov
xor
popf
jmp
cmpsb
sub
pop
int
mov
faddl
mov
sub
ficomps
pop
jmp
inc
cld
sbb
fsubrs
shlb
dec
rcr
sti
xor
lock
in
push
mov
je
and
mov
mov
mov
or
push
add
jo
lods
arpl
pushl
fmul
pushw
pop
in
sbb
jecxz
mov
enter
sbb
and
push
push
divb
jae
hlt
and
sbb
shll
cmc
sub
xor
sbb
add
test
or
fs
shrl
push
das
les
fmull
ja
inc
jno
pushl
and
mov
jae
in
xor
into
lock
aad
adc
xor
pop
dec
pop
hlt
fmul
ds
mov
mov
and
cmp
in
mov
cmpsl
inc
mov
test
repnz
pusha
fnsave
mov
js
lret
or
sub
bound
loopne
mov
dec
mov
stos
adc
pusha
arpl
jecxz
mov
stos
jno
sarl
push
xchg
rcll
push
out
fsubr
adc
fstpl
mull
pushf
mov
in
inc
adc
push
addb
sahf
fistpl
mov
cwtl
pop
or
repz
mov
mov
into
inc
and
lods
pop
dec
sbb
dec
and
dec
xchg
sub
pop
sub
xchg
xchg
test
dec
lret
or
dec
jge
fidivrs
and
lods
xlat
pushf
xor
xchg
jmp
mov
ret
cmp
cld
lea
stos
cmpsl
add
icebp
mov
jae
jmp
test
aad
sbb
mov
lods
clc
xor
xor
pop
dec
ror
adc
jnp
mov
jae
mov
pushf
insb
or
jle
in
mov
mov
ja
mov
and
roll
sar
or
pop
mov
repz
outsl
fsubrs
cmp
into
sbb
xchg
mov
sahf
lea
inc
pusha
out
dec
fsubrl
aad
pop
scas
pop
pop
sbb
push
xor
stc
adc
dec
xor
cmpsl
cltd
sub
adcl
adc
sub
scas
xchg
fwait
leave
lds
or
jne
inc
push
int
push
add
xchg
inc
xchg
and
fs
mov
test
fdivrl
leave
pop
in
jl
pop
jno
divl
rcrl
fdivrp
push
xchg
ja
mov
shlb
mov
scas
and
mov
mov
jl
loope
stos
mov
inc
lods
dec
mov
mov
subl
mov
cli
adc
into
das
dec
pop
sarl
leave
push
in
arpl
xor
jno
sub
mov
sbbl
sbb
stc
pop
out
stos
data16
xor
mov
xor
dec
ljmp
sub
fisttpl
mov
xchg
xchg
imul
shrl
sti
mov
sbb
sbb
sahf
push
dec
xor
pop
in
inc
mov
mov
push
mov
loopne
adc
add
pushf
das
pop
mov
mov
sub
movhps
xchg
imul
push
insl
adc
lods
pop
mov
jnp
jge
sahf
xchg
xchg
mov
and
loope
shll
push
mov
push
pop
sub
pop
xchg
dec
inc
loop
xor
inc
xchg
xor
dec
push
cs
test
add
adc
mov
jbe
ret
lds
pop
mov
ss
in
xor
add
imul
cmp
push
std
das
mov
nop
outsb
jo
and
add
pop
or
lret
mov
fldl
dec
in
mov
cltd
neg
jbe
push
test
sub
test
ja
mov
ds
jg
int3
inc
or
mov
sub
ret
mov
jns
insb
mov
inc
nop
pop
nop
sub
hlt
dec
push
dec
rorl
into
mov
xchg
ljmp
stos
sub
jg
mov
adc
push
test
pop
xchg
mov
push
and
test
and
inc
and
jae
pop
xor
add
je
mov
sub
inc
fistl
xchg
push
inc
xchg
push
inc
mov
sub
inc
push
test
aad
fidivrs
jp
mov
push
lods
xorl
pusha
sahf
cmpsl
cmpb
es
les
xor
fwait
dec
loopne
sub
sbb
addr16
sbb
fstpl
jg
stos
or
fiadds
shr
loop
inc
test
and
fidivrl
mov
sahf
adcl
rclb
aad
iret
test
inc
std
bound
jb
pop
jge
xor
pop
xor
mov
add
mov
push
adc
or
mov
cmp
lcall
std
push
aam
ds
mov
repz
pusha
hlt
jne
ret
mov
lock
jne
dec
add
fildll
inc
daa
jns
lock
dec
stos
shll
jne
lock
das
pop
inc
roll
xor
iret
sbb
in
mov
repnz
bound
push
xchg
or
lock
inc
dec
push
jo
mov
lcall
out
pop
jmp
inc
call
or
cltd
lret
movsb
stc
flds
sub
mov
ret
mov
test
dec
repz
ljmp
dec
or
mov
loopne
out
data16
inc
popf
pop
mov
jns
add
push
adc
fildl
mov
clc
ficoms
lret
mov
pop
sbb
push
mov
and
aaa
push
mov
or
push
sbb
in
mov
je
push
adc
xchg
sub
dec
jmp
dec
callw
mov
in
jae
push
les
hlt
mov
testb
sarb
jo
or
adc
in
mov
cli
nop
pop
in
push
hlt
lret
nop
cmp
in
jbe
mov
loopne
fcomip
pop
xor
sub
add
dec
adc
push
outsl
insb
pop
push
pop
fsts
js
push
int
dec
and
hlt
aam
cmpl
mov
cmova
sub
inc
out
out
repnz
je
stos
adc
es
dec
roll
adc
pop
mov
push
les
jle
je
movsb
sbb
push
loopne
dec
popa
push
pop
or
cmp
aas
shl
icebp
inc
jnp
movsb
cwtl
push
aas
xchg
sub
jb
add
scas
fadds
js
pop
movsb
xor
jo
scas
or
xchg
jb
mov
call
incb
int
fs
xor
gs
inc
mov
cmpsl
pop
mov
mov
mov
mov
xor
stc
push
ds
adc
push
test
shrb
movsl
ror
push
adc
cld
pop
aad
lret
test
cmpsb
repnz
xchg
aaa
jne
inc
lock
push
adc
inc
jmp
popa
jo
lahf
pop
lcall
rcll
push
sub
lcall
testl
std
xor
cmpsb
jl
mov
fadd
xor
ficoml
add
push
rolb
iret
fs
ficompl
jnp
pop
or
addl
jg
push
mov
hlt
adcb
jp
push
jg
cmp
cld
and
sbb
adc
adc
mov
inc
mov
cmp
pop
ffreep
adcb
repnz
mov
rcr
imull
fmul
mov
mov
push
add
pusha
dec
push
cmc
mov
lret
fucomp
mov
hlt
ljmp
xrelease
repz
test
push
repz
push
mov
xchg
arpl
mov
mov
add
adc
aas
or
lods
adc
imul
xor
mov
push
cmpsl
push
mov
test
adc
aam
enter
nop
xor
mov
daa
jo
mov
out
fisubs
int3
sbb
mov
dec
dec
or
or
aad
cwtl
push
hlt
ret
jp
pop
add
test
mov
jge
and
jo
fists
into
and
loopne
jp
sahf
pop
cmp
adcl
outsl
dec
xchg
xor
shl
pop
mov
repz
jne
jp
imulb
or
sbb
push
gs
inc
pop
pusha
sbb
fisttpl
roll
out
inc
or
dec
or
mov
pop
mov
cmpsb
fimuls
cltd
cmpsl
or
out
sub
subl
fs
clc
and
stc
push
in
int3
or
cmp
xchg
fst
imul
mov
out
daa
cld
arpl
xor
jge
jae
iret
lret
inc
inc
push
cmp
cmp
mov
xlat
push
sbb
test
pop
cmp
shl
daa
into
lods
cmp
dec
outsb
fldl
push
icebp
sbbb
cmp
out
jmp
ljmp
nop
mov
dec
cmc
mov
repz
dec
popf
cs
mov
daa
pushf
or
mov
pop
out
sub
sbb
es
jmp
dec
and
or
adc
push
inc
repnz
jl
in
movsl
psrlq
scas
std
ljmp
sbb
adc
jne
nop
adc
pop
call
cmp
or
push
sub
rorb
and
mov
mov
mov
jns
out
out
dec
mov
rclb
xor
fstl
sbb
negb
fdivrl
push
lods
pushf
lcall
scas
fdiv
leave
ret
dec
outsl
roll
jl
mov
xchg
loope
shrl
shll
mov
mov
xchg
pushf
xchg
movsl
dec
sub
or
inc
cmp
push
cmp
mov
cmp
xchg
mov
add
stos
add
je
sbb
gs
pop
movsb
fldl
loop
lret
cmp
lret
pop
ss
push
mov
or
mov
jns
gs
rcll
cmp
scas
sub
mov
inc
add
leave
mov
inc
pop
add
jo
cmp
call
stc
add
in
cwtl
cmc
cmp
or
jge
imul
xchg
or
mov
jnp
and
insl
insl
mov
int
repnz
xor
mov
into
push
pushf
cli
and
shrb
ror
and
or
sub
mov
or
sub
sbbb
xchg
in
gs
sub
and
rcrl
test
test
lret
mov
mov
mov
jb
or
mov
ficomps
or
mov
xchg
pop
push
das
inc
pop
cs
dec
cld
push
mov
jge
or
sub
lea
mov
ret
test
lahf
and
sub
addr16
lods
repz
mov
out
jmp
jns
inc
mov
push
fimuls
pop
xchg
outsb
outsb
jns
imul
mov
sbb
xlat
xchg
cmp
or
sbb
xchg
scas
xchg
outsb
loopne
jmp
xchg
rcrb
loopne
cmp
mov
cltd
or
mov
dec
push
mov
jle
mov
cwtl
xlat
xchg
add
loope
gs
fcoms
test
push
lret
xor
leave
mov
insb
ja
shrb
enter
push
xor
es
sbb
addr16
cli
lock
je
rcr
leave
stos
test
cmc
and
mov
out
push
divb
fnstcw
lea
es
sbb
nop
push
orb
sbb
lods
cmpl
xor
jne
cmp
lahf
or
cmpl
xchg
les
add
or
lret
cmpsl
testl
icebp
out
incb
ret
pop
test
lods
jp
jne
test
inc
repz
dec
push
clc
xor
mov
jle
iret
sbb
cmpsl
loop
lods
cmc
push
mov
pop
or
dec
jmp
push
add
push
mov
or
sbb
icebp
mov
repnz
sbb
mov
xor
jne
mov
mov
mov
cmp
xchg
push
jg
sahf
ljmp
xchg
lods
out
xchg
push
mov
lahf
adc
ret
imul
cmc
and
aaa
ret
push
mov
or
inc
push
xor
inc
push
int
dec
shrl
push
and
lret
and
fwait
shll
dec
adc
stc
cmc
in
shrl
cli
mov
mov
xor
repnz
out
shrl
lahf
dec
xchg
sub
testl
push
mov
enter
pop
sub
mov
or
fmul
mov
test
jp
aas
sbb
and
icebp
arpl
pusha
enter
and
cmpsl
cld
je
fdivrl
loop
push
or
mov
sbbl
rclb
push
sub
lods
dec
jp
out
jg
xor
push
loope
xchg
shrb
sbb
lret
push
nop
in
and
mov
and
fldcw
imul
outsl
icebp
and
test
mov
aas
out
je
or
sbb
cmp
outsb
mov
enter
mov
sahf
sahf
pop
pushl
fistps
jge
mov
pop
and
inc
sub
cmp
pop
cmp
fadds
mov
or
xchg
test
lahf
je
mov
popf
jecxz
pop
pop
pop
mov
adc
sub
mull
scas
xchg
mov
push
xor
sarl
into
push
pop
jne
inc
dec
jmp
repz
cli
inc
adc
loop
test
ficompl
push
cltd
mov
add
es
sub
push
loopne
adc
xor
sub
aaa
jle
sub
arpl
ret
add
mov
outsb
mov
jp
or
mov
sbb
inc
daa
dec
pop
fcoml
lea
js
mov
aam
inc
lds
inc
pop
shlb
push
test
push
imul
aaa
jp
xor
jno
pop
mov
dec
adc
xor
adc
lret
aam
pop
cwtl
icebp
add
int
popf
test
push
in
das
xchg
out
lea
stc
push
xor
ret
inc
and
out
nop
and
loope
mov
jno
mov
push
mov
arpl
lcall
bound
in
pop
cltd
adc
insb
dec
aaa
mov
lods
iret
cmpsb
dec
mov
inc
cs
sub
mov
into
das
or
mov
add
lahf
push
pop
aaa
pop
add
dec
fists
inc
mov
sbb
lods
mov
dec
or
xchg
sar
cmpsb
sbb
jo
and
scas
sub
decl
js
xchg
je
mulb
lock
ds
lods
dec
push
das
sub
sub
mov
out
lret
jnp
fisttps
pop
sbb
notb
fistpl
jl
out
mov
push
xchg
dec
dec
jle
ficoml
mov
cld
cwtl
sbb
push
xor
mov
mov
ret
adc
pop
add
inc
mov
fucomi
sbb
std
pop
add
sub
popf
adc
cmp
hlt
pop
adc
jmp
sbb
lods
dec
or
inc
xchg
cli
xor
ds
dec
adc
mov
shlb
mov
clc
push
cmp
jno
dec
pop
aaa
call
inc
add
cmc
arpl
imul
and
mov
cmpsb
cs
popf
adc
shrl
cmp
xlat
adc
xchg
pop
lret
int
shl
shll
and
pop
mov
inc
fstps
ljmp
inc
ss
dec
lahf
bound
cld
movsb
pop
xchg
fwait
or
jno
lahf
aad
incl
dec
dec
jmp
jne
aas
in
pop
xor
pop
mov
dec
fiadds
mov
rcl
cmpsl
in
push
notb
and
shll
pop
cmp
clc
mov
outsl
push
mov
sti
or
lahf
mov
pop
ret
sbb
nop
popf
cmpsl
xor
jno
or
roll
adc
fsubrl
shl
jle
sbb
or
movsb
xchg
pop
add
xor
outsl
cmp
push
sub
ret
cmpsl
rcrb
dec
jbe
popf
insb
xchg
andl
sbb
mov
inc
mov
xor
and
mov
notl
aad
adc
push
ret
and
mov
test
and
or
push
push
add
scas
dec
fstpt
cmpsl
dec
pop
movsl
cwtl
icebp
and
into
enter
and
ficompl
jne
movsb
push
mov
mov
mov
inc
or
xchg
add
or
cmp
cmp
outsb
fwait
leave
dec
mov
push
in
dec
sbb
shl
and
sbb
stos
inc
adc
cmp
je
fstps
aad
pop
xchg
mov
cld
je
push
inc
mov
fisubl
fmuls
fcmove
jo
push
imul
fmull
sbb
das
cmp
roll
push
clc
sbb
push
daa
cld
je
gs
inc
pop
cs
hlt
jnp
test
clc
hlt
pop
xchg
jb
in
fildl
popa
inc
mov
or
std
jle
inc
jne
repnz
pop
or
ret
sbb
sti
nop
aam
adc
test
clc
xor
ja
and
es
ljmp
sbb
dec
push
or
mov
sti
aam
or
push
and
pop
inc
push
cmp
lods
xor
pushf
adcl
std
outsl
aas
sar
out
jne
scas
incl
aam
add
roll
cmp
sub
jecxz
adc
mov
lods
pop
or
loope
call
fdivrl
jae
and
xchg
fdiv
inc
roll
hlt
out
push
scas
add
xchg
cmp
push
cli
sub
test
xlat
aaa
push
shlb
xchg
mov
out
sub
rolb
dec
mov
and
mov
push
xor
mov
mov
scas
dec
bnd
sbb
repnz
fisubrs
xchg
mov
pop
xchg
add
cmpsl
pushf
xor
push
scas
fisubrl
jecxz
pop
ret
call
ljmp
pop
push
xor
aaa
mov
clc
pop
movsl
loop
insb
es
jno,pn
pop
aaa
pcmpeqb
scas
and
dec
dec
lock
jns
jmp
imul
fldl
adc
jns
jnp
fcomps
xchg
je
fs
push
xchg
in
pusha
mov
xchg
shr
pop
iret
mov
icebp
mov
lcall
xchg
lcall
cli
xor
lcall
sbb
les
sti
mov
mov
add
out
rol
in
mov
mov
push
loop
or
enter
adc
in
ss
and
xor
out
cmp
push
inc
dec
ret
lods
ds
lret
push
jp
jl
fildll
mov
inc
cmp
push
mov
scas
push
xor
inc
mov
jbe
fnstsw
das
adc
mov
sub
mov
mov
lahf
xchg
jae
jb
and
xor
stos
repz
sbb
lret
mov
jge
jge
out
lds
or
rorb
sub
mov
in
imul
push
adc
fcoms
and
aam
fbld
into
mov
and
imull
inc
insb
mov
loope
int
insb
or
movsb
out
sbb
fnstsw
jbe
rcr
push
stc
dec
add
pusha
pop
pop
mov
add
and
lret
dec
bound
mov
loop
cli
fldcw
hlt
in
cmp
jo
dec
add
repnz
mov
cld
cmp
repz
stos
daa
dec
pop
je
repz
mov
movsb
out
add
push
jecxz
cmp
jg
je
sub
push
mov
ja
frstor
xchg
cmc
into
pop
insb
cld
arpl
adc
shll
imul
sub
clc
cmc
sbb
cld
jns
jmp
loopne
inc
jns
pushf
fbld
rcll
test
push
mov
fisttpll
push
std
push
mov
xor
mov
lcall
shrb
into
mov
icebp
ds
push
bound
das
in
mov
push
dec
mov
sar
jcxz
sub
jl
shl
xor
test
sarl
outsl
ret
pop
mov
js
enter
or
stos
jae
fbld
mulb
add
inc
test
mov
das
ljmp
bnd
mov
mov
sub
and
pop
dec
out
add
pop
fbstp
sahf
xchg
cltd
mov
into
std
mov
sti
and
inc
inc
incl
adc
fildll
cwtl
pop
pusha
sbb
mov
dec
pop
adc
jmp
cli
xchg
jo
sub
mov
arpl
jmp
xchg
jmp
shrb
inc
jne
int3
sbb
lods
subl
mov
ret
fldenv
cs
rorl
lock
cmp
pop
pop
and
stos
mov
hlt
movsb
add
in
lods
in
je
ficompl
and
xchg
nop
out
xchg
in
inc
dec
insl
cmp
jns
lahf
int3
xlat
sbb
push
and
sub
add
out
loope
cld
xor
das
cltd
out
cmpsb
fmull
pop
push
imul
iret
repz
mov
movsl
aaa
push
int
jno
sub
xchg
mov
dec
insb
fs
pushf
loop
insb
or
mov
ss
out
mov
add
and
mov
je
int3
ljmp
popf
test
push
dec
pop
or
push
cli
xchg
mov
jle
pop
lcall
ja
clc
xor
out
jnp
inc
dec
push
nop
fnstsw
mov
fxch
addr16
mov
or
mov
loope
inc
in
jno
cmc
cmp
in
or
or
mov
iret
push
sbb
jp
popa
and
leave
out
lds
xlat
sbb
rcrb
ret
daa
mov
movsl
mov
cmp
adc
fs
jle
popf
insl
fs
movsb
pop
adc
in
lea
push
xor
or
clc
pop
loopne
and
repnz
adc
movsb
icebp
or
std
xorb
jle
cmc
mov
test
xchg
pop
cmp
sub
jns
add
jp
push
add
cwtl
mov
jecxz
lea
lods
stc
mov
call
enter
adc
mov
adc
push
jg
out
lret
iret
fwait
cmp
cld
movsl
push
stos
xchg
imul
and
filds
sub
jae
imul
sbb
stos
xchg
test
and
or
mov
lods
aad
push
js
arpl
nop
je
mov
xchg
fistl
mov
xchg
fidivl
into
fs
cld
lds
ss
inc
mov
jle
rorl
cmpsb
sub
xchg
popa
insl
jmp
lret
push
out
jmp
shll
call
mov
dec
jecxz
inc
idiv
ret
scas
mov
xchg
xlat
push
cmpsl
cli
ret
dec
and
pushf
pop
jb
mov
cmc
insl
inc
inc
mov
iret
lea
stos
pminsw
cmp
rorb
push
cwtl
test
cs
popf
dec
sar
lods
in
mov
jnp
shll
cwtl
jno
lea
cltd
dec
jne
mov
arpl
data16
fsubrl
mov
loope
imul
fcoms
or
shll
sbbl
int3
inc
shlb
shll
pop
jbe
scas
mov
mov
inc
push
sbb
sub
xor
pop
jo
lahf
cmp
aas
imul
and
ret
jae
pusha
test
sbb
mov
sub
out
lret
pop
repz
fimuls
push
or
movsb
jge
mov
push
jle
movsl
inc
mov
mov
xor
int3
mov
jecxz
adc
std
inc
out
out
dec
aam
lods
std
daa
mov
add
fwait
pop
out
ja
xchg
sbb
jns
sti
mov
push
xchg
jne
and
movsb
lcall
int
jno
push
mov
xor
pop
cld
hlt
pop
cmp
out
pop
jmp
imul
cmp
outsl
mov
jle
jl
jmp
jbe
adc
sbb
test
jne
repnz
mov
jo
lods
pop
mov
jmp
push
int3
pop
pushf
ror
mov
mov
pusha
test
int3
jg
ret
lret
mov
mov
push
xchg
push
fwait
cwtl
dec
sub
out
daa
sub
outsb
add
pop
push
mov
ds
scas
adc
cltd
outsb
jmp
aaa
movsb
std
aad
xlat
mov
jae
cmp
xchg
push
popa
dec
push
jecxz
xchg
arpl
add
enter
fcmovnb
sub
lcall
cmp
ds
pop
jecxz
es
mov
int
es
xlat
leave
popf
out
sub
inc
movsb
push
cmp
jg
movsb
ret
stos
cld
arpl
mov
and
sub
and
imul
imul
pop
mov
lahf
xor
mov
pop
xchg
shlb
orb
lds
scas
cwtl
cmpsl
adc
out
push
enter
sbb
dec
arpl
mov
push
fiaddl
arpl
mov
push
sub
or
cmp
loope
stc
lods
or
adc
js
jle
dec
xchg
insb
sub
add
inc
les
push
cmc
xchg
aam
in
fstps
movsb
pop
xchg
cmp
inc
subl
cmp
xchg
or
pop
xorl
sub
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
lcall
sub
dec
orl
push
call
adc
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
push
out
call
push
movsb
dec
hlt
pop
in
pushf
jl
icebp
popa
jmp
xor
jle
xor
mov
idivl
sbb
shrb
jecxz
mov
sti
pop
sbbl
push
mov
test
push
pop
into
inc
shl
pop
stos
jp
pop
aam
jecxz
adc
test
lea
in
sub
mov
fnsave
mov
loop
sub
pop
inc
fcomi
sbb
stos
jp
pop
movsb
jmp
mov
jmp
adc
aaa
loopne
xchg
stos
push
sbb
jbe
loop
mov
into
inc
orl
push
call
push
out
pop
add
jmp
out
pop
dec
orl
push
jmp
ficoms
adc
mov
orl
push
call
add
dec
sbbl
push
call
adc
mov
adc
mov
out
pop
dec
orl
push
jmp
adc
or
orl
push
call
adc
pop
iret
orl
push
call
adc
pop
dec
xchg
push
mov
adc
mov
out
pop
dec
orl
push
call
adc
jle
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
ds
cmp
testl
ficoms
add
pop
dec
push
or
add
push
fisttpll
add
xor
mov
shrl
icebp
insl
mov
xorb
dec
adcl
pop
rcll
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
call
adc
pop
dec
orl
push
xchg
ficoms
adc
dec
dec
andl
cltd
in
jle
xchg
mov
cmp
mov
push
or
test
xchg
loopne
insb
mov
mov
test
ds
xor
mov
cmp
ret
push
icebp
out
jg
leave
push
mov
push
or
pop
fidivrs
scas
mov
cwtl
cmp
mull
jmp
addr16
or
and
fidivrl
inc
lret
addr16
inc
clc
xchg
push
adc
push
test
push
inc
push
mov
lock
arpl
mov
ret
cmp
ror
mov
xchg
or
scas
incl
sahf
or
fcomps
out
sbb
push
adc
sbb
pop
shlb
test
bound
in
mov
cmpsb
test
gs
test
or
aas
jne
out
mov
dec
dec
je
and
mov
mov
adc
push
mov
ljmp
sub
fisubs
and
lods
unpcklps
push
std
pop
dec
or
popf
int3
sbb
inc
aas
and
xorl
push
popa
mov
in
notl
xor
inc
fcompl
fisttps
sub
cmp
insl
xor
inc
add
push
cs
std
mov
pop
stos
add
sub
mov
sahf
mov
mov
sbb
cmpsb
jle
sbb
and
shll
mov
xor
xchg
cmp
leave
adc
out
xchg
outsb
add
insl
jge
push
movb
pop
inc
sbb
push
leave
adcb
test
sbb
fimuls
rcll
mov
push
xor
lret
cmpsl
imul
sar
xchg
stos
aaa
pop
popa
lea
sahf
clc
jl
sub
cs
nop
or
ja
inc
dec
fildl
es
fiaddl
cli
xchg
jp
leave
mov
or
or
insb
or
jle
mov
loope
dec
add
fcompl
add
dec
sbb
add
stc
test
mov
push
dec
aad
orb
sub
cmp
lock
cli
and
popf
mov
insb
adc
movhlps
mov
push
xchg
ja
inc
jbe
sub
mov
cld
test
iret
mov
dec
psrlq
sbb
push
vpmuludq
mov
push
cmp
fsubrs
into
and
xchg
cmp
es
mov
cmc
shll
das
inc
lods
mov
je
pop
je
inc
mov
cld
pop
cmpsl
jl
push
push
xchg
and
add
xor
fcoml
jns
mov
push
mov
sub
mov
dec
push
push
cli
dec
mov
es
pushf
jo
mov
mov
mov
mov
leave
push
xchg
adc
stos
pop
or
lret
int3
lea
xor
int3
mov
bound
into
into
rclb
call
inc
out
pop
out
daa
pop
negb
xor
ds
push
pop
lahf
or
cli
cwtl
push
pusha
xor
mov
add
std
xor
add
loop
arpl
outsl
dec
add
mov
ss
xchg
mov
cmp
shll
push
sub
popf
clc
mov
push
push
inc
jmp
pop
dec
pushf
or
fdivs
inc
adc
rcr
pushf
push
jecxz
xchg
call
fadds
and
hlt
xchg
in
bound
addr16
aas
sti
xor
push
mov
ja
and
repz
les
dec
iret
fstpl
sub
rcr
xchg
xchg
xor
mov
movsl
js
fnstenv
and
into
mov
ss
pop
inc
shlb
jns
arpl
inc
fstps
and
add
les
insl
push
xchg
dec
jmp
out
push
ds
lcall
pop
push
repnz
jg
xchg
sub
mov
mov
repz
sbbb
mov
sti
jmp
pop
mov
xor
push
sub
inc
nop
rep
dec
xor
movsb
adc
sub
subl
or
enter
xchg
or
mov
std
xor
inc
outsl
js
jle
int
insb
adc
mov
inc
insb
mov
pushf
insb
in
push
adc
sbb
fmull
mov
or
xchg
sub
incb
jmp
sbb
adc
mov
mov
test
sbb
je
mov
adc
incb
iret
shll
pop
mov
pop
inc
dec
mov
or
mov
stos
inc
imul
push
dec
scas
add
inc
jnp
ret
popf
adc
mov
data16
push
insl
lock
mov
scas
push
cmp
test
pushf
mov
pop
inc
xor
loope
cmp
jmp
fbstp
xor
lahf
push
cld
sti
mov
imul
int
inc
call
push
mov
mov
repnz
shr
jo
mov
xchg
or
lcall
jb
cli
mov
incb
xor
sahf
orl
xchg
lods
test
lock
adc
xor
cmp
gs
adc
pushl
js
mov
cmc
dec
inc
add
leave
stos
inc
mov
push
jnp
ljmp
out
lock
outsl
dec
jno
popa
je
rclb
or
out
and
call
gs
mov
fstl
in
addr16
xor
repz
xor
out
jle
scas
mov
dec
inc
mov
add
push
inc
pop
pop
jl
xchg
inc
loop
pop
arpl
cs
inc
or
dec
mov
sbb
jg
sub
jne
pop
push
lds
and
in
and
bound
mov
xor
jns
rorb
enter
jge
fwait
mov
gs
jge
pop
or
sbb
std
movsl
call
dec
push
push
pop
stc
dec
dec
test
stos
sahf
add
outsb
leave
add
xchg
mov
ja
rorl
and
ret
cmp
cwtl
ja
leave
or
add
jmp
rorb
xor
subb
into
pop
adc
inc
shll
xor
bound
lahf
inc
dec
ja
jbe
cwtl
cmpsl
inc
ss
imul
popa
scas
add
mov
cmpl
fimuls
adc
fwait
int3
xor
aaa
push
xchg
xlat
mov
xor
mov
in
loop
es
rcr
adc
addr16
sub
cmp
lahf
jb
cmp
mov
or
mov
stos
mov
loop
dec
ljmp
cmp
jl
outsb
inc
pushf
xchg
adc
mov
sbb
repnz
ja
adc
pop
mov
idivb
pop
fwait
ss
jb
sub
dec
sbb
es
mov
mov
repnz
repz
lcall
xchg
lods
xor
insl
sbb
repz
in
jmp
mov
and
and
out
testb
or
and
lds
push
or
sub
bound
cmp
lret
sbb
sub
mov
mov
pop
int3
fwait
jne
or
ja
mov
xor
aaa
xchg
jbe
enter
push
sbb
jl
out
stos
data16
lods
push
scas
ja
xchg
xchg
mov
iret
mov
cmp
and
nop
dec
mov
and
xor
adc
stos
xchg
xor
xchg
jne
and
inc
es
pop
bnd
push
bound
jb
pop
imul
push
iret
in
xor
sub
shlb
jne
push
sbb
loopne
fists
xchg
mov
adc
mov
push
aad
cltd
arpl
adc
mov
dec
sub
sub
das
ljmp
mov
imulb
jo
xchg
push
cs
inc
clc
jg
mov
insb
ret
popf
jmp
fsts
adc
mov
outsl
push
pop
and
mov
in
pop
test
xchg
add
pop
test
mov
ja
sti
je
leave
xchg
test
std
scas
test
ds
mov
repnz
pop
xchg
xchg
mov
pop
jl
adc
cmpb
pop
sahf
jp
hlt
imul
or
das
loopne
pushf
and
mov
scas
lret
dec
mov
xchg
scas
out
ds
jl
ret
adc
out
and
xchg
or
add
in
shrl
xchg
sbb
addr16
scas
addl
mov
sbb
push
mov
out
mov
and
stos
out
sbb
insl
sti
sub
jns
cmpsl
pop
inc
adc
and
jle
and
pushf
jb
sub
cmp
lcall
push
sahf
add
sbb
inc
es
fwait
mov
cmp
jmp
xchg
jmp
jl
adc
test
xor
inc
hlt
jnp
lods
sub
sbb
fsubrs
fs
lret
sbb
mov
push
dec
fnsave
repz
sarl
jp
mov
lock
mov
sub
xor
out
pop
scas
xor
pop
fidivs
pop
lret
sub
push
and
shl
dec
cmp
xchg
pop
fisttpll
rcrl
cmpsl
lret
dec
cli
arpl
sbb
xor
sbb
out
mov
sub
fisttpll
popa
fcom
jne
push
jbe
orl
sbb
fdivrl
daa
inc
mov
scas
ss
pop
leave
jle
push
cmp
and
add
mov
push
outsl
int3
imul
mov
xchg
aas
add
and
out
jl
bound
ljmp
fcompl
stos
mov
add
rcrl
lret
pop
inc
push
in
movsb
jecxz
fdivs
daa
xor
dec
xchg
outsl
fisttps
xchg
std
ss
sub
xchg
jle
sub
addr16
stc
jg
xchg
addr16
inc
in
jne
mov
jle
xor
xor
ljmp
jb
js
sub
xlat
push
dec
pslld
lds
sbb
xchg
ss
or
or
int3
xchg
and
jo
jno
lret
sub
jns
mov
add
loopne
frstor
sbb
xor
arpl
lret
mov
cmc
in
insb
nop
mov
add
mov
lcall
push
repnz
enter
pusha
sub
rclb
mov
mov
cmp
fs
hlt
fnstcw
jno
mov
sub
ja
xchg
popl
shrl
add
sbb
inc
pop
push
add
mov
inc
nop
not
jl
and
mov
daa
cmp
pop
subb
sub
je
imul
jecxz
mov
lock
dec
cmp
rolb
sbb
ljmp
and
mov
adcl
test
arpl
cmp
lock
pop
inc
sbb
loope
xchg
call
sub
add
xchg
lret
sub
sub
cmp
aaa
mov
test
and
dec
pop
sbb
lods
cmp
aas
mov
enter
push
lahf
out
dec
lret
nop
movsb
push
int
rcl
jl
push
int
arpl
insl
js
xchg
das
adc
mov
stos
mov
repnz
ret
mov
and
hlt
mov
out
jbe
ret
fs
mov
icebp
sub
inc
mov
fidivl
rcrl
adc
or
bound
push
out
aad
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
