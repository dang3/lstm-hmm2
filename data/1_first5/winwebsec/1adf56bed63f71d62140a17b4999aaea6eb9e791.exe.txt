push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
cli
jmp
lcall
bound
mov
push
push
push
lds
pop
xor
push
cltd
dec
xchg
fwait
test
outsl
shl
loop,pn
adcb
pop
jbe
loop
adc
pop
orb
add
add
test
outsb
sti
outsb
push
movsb
sbb
movsl
lock
test
dec
adc
push
fwait
xor
sub
shr
jmp
jbe
insl
inc
xchg
push
adc
push
mov
adc
add
in
cli
xchg
or
push
mov
jne
insb
dec
ds
inc
sbb
xor
pop
xchg
incl
inc
enter
sbb
bound
call
repnz
push
sbb
sarl
push
mov
sub
gs
pop
sbb
or
sahf
popa
mov
out
adc
push
add
and
or
dec
pop
je
mov
not
and
adc
and
adc
pop
adc
rcr
mov
imul
cld
xor
jo
adc
mov
mov
cmpsl
cld
adc
jl
sbb
or
nop
inc
subl
and
ds
xor
int
pop
das
jae
stos
xchg
lret
xor
ret
mov
pop
mov
lahf
leave
std
out
sbb
mov
cwtl
pop
mov
or
mov
ljmp
out
push
dec
leave
aas
or
nop
jmp
xor
and
dec
dec
add
pop
sbb
pop
add
ret
out
mov
int3
jo
lahf
insb
mov
arpl
jmp
in
adc
sub
dec
loopne
mov
das
mov
push
pop
pushf
or
lds
mov
mov
rorl
lcall
cmp
testb
loop
sti
sbb
mov
mov
in
mov
and
ss
jmp
mov
jne
call
xchg
adc
cmp
dec
or
xchg
add
inc
inc
jno
and
rolb
stos
imul
dec
sahf
lods
and
test
and
sti
jns
stos
cmpsl
flds
jmp
mov
js
mov
mov
add
sub
cs
or
sub
xchg
int3
xchg
mov
sub
xor
push
adc
xchg
xchg
sbb
pop
xchg
xchg
mov
out
imulb
daa
subb
out
insb
insb
pop
shl
lea
or
xchg
add
rcrl
adc
cmp
bound
push
dec
add
inc
shrl
in
sbb
mov
sub
popa
jno
adc
inc
cmp
inc
or
sub
into
dec
add
xor
fwait
xchg
adc
xor
push
pop
mov
sar
addr16
addr16
or
fbstp
adcl
ja
push
pop
and
and
nop
mov
daa
out
hlt
fbstp
mov
js
or
test
and
dec
xchg
jp
ficomps
sbb
lods
lea
arpl
and
pop
mov
popf
inc
popa
shl
test
pop
sub
mov
and
in
aas
pop
dec
adc
loope
outsl
addb
dec
movsb
xlat
outsl
cmp
lea
addb
outsb
cmp
sbb
push
insl
cmp
and
negb
inc
mov
lret
mov
inc
jnp
aam
out
fisttps
insl
push
incb
repnz
xchg
or
mov
sbb
mulb
int3
push
gs
sbb
jp
fwait
outsb
jno
pop
adc
movsl
mov
mov
mov
sahf
les
adc
inc
add
push
cmpsl
dec
push
jmp
sub
mov
mov
hlt
mov
pop
dec
sub
cmpsb
popa
inc
lcall
adc
pop
pop
cmp
fwait
sub
dec
push
jns
pop
js
sahf
outsl
mov
insl
cmp
lea
adc
push
fwait
xchg
imul
inc
in
testb
out
sbb
inc
push
cli
pop
mov
lret
and
xor
rcrb
cmp
std
pop
mov
incl
jbe
shrb
cmp
cmp
rcrl
cmpb
or
xlat
xor
sub
sbb
mov
add
pop
cwtl
sbb
shll
clc
repz
aas
add
imul
enter
xor
mov
xchg
cltd
xchg
pop
imul
arpl
push
add
and
insl
mov
repz
adc
mov
mov
mov
inc
idiv
inc
sub
sub
cmc
repnz
sbb
mov
fiadds
xchg
dec
outsb
std
into
stc
pushf
cmp
pop
nop
add
dec
scas
mov
stc
out
cmp
sbb
and
mov
or
adc
dec
mov
adc
aas
ja
jno
dec
adc
in
push
or
and
adc
outsl
cmp
xor
repz
fwait
mov
sbbl
sbb
xor
clc
mov
lahf
dec
pop
in
leave
mov
mov
sub
loop
hlt
into
lcall
jne
fnsave
mov
push
fwait
loopne
xor
mov
hlt
movsl
sub
stos
sub
pop
scas
push
pop
dec
mov
mov
mov
xchg
movsb
mov
or
pusha
test
cli
or
movsl
xchg
insb
xor
out
mov
scas
jp
nop
push
xchg
rorl
xchg
into
mov
add
push
loopne
ret
push
mov
aas
sarl
mov
je
add
lret
sbb
outsb
xlat
cmp
mov
sub
call
orb
int3
jle
in
or
mov
xchg
imul
add
aaa
ja
push
mov
hlt
inc
divl
pop
pusha
movsl
mov
mov
or
out
loope
dec
and
int3
scas
jbe
xchg
imul
data16
lret
adc
mov
stc
decb
repz
cmp
adc
jl
pop
mov
insl
repz
into
jo
test
sub
mov
jne
sbb
test
data16
xchg
loop
repnz
std
inc
jmp
jge
push
sti
cltd
and
xchg
xlat
fs
cld
sub
cwtl
push
xchg
lret
mov
sti
pusha
and
sarl
mov
or
les
push
dec
mov
dec
or
or
scas
lock
test
icebp
arpl
xor
jae
cmpsl
sub
ja
and
dec
jns
jle
std
call
loop
mov
mov
sub
adc
fidivrs
std
pop
cmp
cmp
cld
lea
mov
sbb
xchg
mov
stc
repz
mov
xchg
stos
inc
add
inc
xchg
mov
into
imul
in
movsl
je
mov
dec
mov
cltd
xchg
cmp
add
cmpsb
jg
insl
mov
ds
add
movsb
push
lock
in
mov
adc
mov
jmp
in
push
out
dec
loopne
or
test
repnz
lods
std
ror
inc
mov
pop
popf
pop
add
movsb
xchg
add
data16
mov
push
mov
jg
stos
sub
scas
imul
and
mov
into
jbe
in
pop
xor
sbb
stc
scas
inc
lahf
sbb
xchg
rcll
push
push
fdivrl
stos
and
xlat
push
test
push
js
push
iret
loop
push
cmp
cmc
pop
das
mov
movsb
lret
fdiv
pop
icebp
jcxz
hlt
dec
jno
pop
roll
movsb
hlt
out
and
mov
fdivl
insl
push
pop
adc
int
mov
and
std
xchg
and
cmp
adc
and
jecxz
sub
and
dec
adc
fsubs
or
andl
pop
bound
test
pop
add
rcrl
cmp
add
sbb
push
mov
pop
loope
fistps
rclb
or
lcall
or
sbb
jnp
sti
ret
or
daa
movsl
aad
cltd
adc
jg
sub
mov
adc
hlt
and
shll
pop
shr
mov
sub
ds
pop
test
dec
bound
in
cmpl
mov
mov
add
lret
jmp
loope
xchg
je
and
hlt
adc
inc
fsubrl
sub
and
into
push
cwtl
adc
xchg
mov
push
sub
xlat
mov
jne
cwtl
outsb
sbb
inc
daa
adc
xor
jmp
insl
jne
and
mov
sub
or
sub
adc
jmp
mov
jmp
dec
sub
cs
jg
imul
xlat
out
mov
test
jle
mul
xchg
adc
dec
sub
fisttpll
jmp
scas
test
pop
es
pop
mov
add
lret
sahf
pop
mov
adc
out
sub
xchg
lods
jl
push
xchg
add
adc
out
pushf
push
pop
out
orl
jecxz
cmpl
jbe
cld
in
addl
pop
fwait
dec
jae
mov
mov
xor
lret
jnp
jl
jge
clc
fs
mov
ret
in
mov
adc
cmp
adc
ds
dec
jge,pn
pop
lcall
jecxz
out
mov
mov
outsl
push
dec
jae
cmp
int
jmp
mov
mov
mov
xchg
dec
add
fisubrl
out
movsb
ja
and
jo
loopne
stc
loopne
repz
push
mov
btc
js
paddb
push
mov
push
call
fwait
push
cmpsl
mov
mov
mov
test
insl
pop
je
or
inc
mov
lock
lret
mov
xor
push
idivb
sub
mov
mov
out
inc
mov
adc
shll
push
add
subb
dec
pushl
daa
push
lea
pop
jecxz
aaa
data16
xchg
sbb
cmp
jp
fldt
dec
jnp
aam
outsl
scas
cmp
adc
and
out
mov
xchg
push
and
movsb
cvtps2pd
lods
jb
imul
cmp
mov
xor
gs
mov
out
mov
daa
dec
dec
aas
ds
sbb
or
cld
sub
pop
test
sarb
or
aam
cwtl
sub
mov
sbb
fisubl
sti
inc
sub
mov
xor
out
les
ja
call
push
fwait
cmp
push
sti
lock
push
mov
mov
mov
lea
xor
mov
js
imulb
add
sbb
cli
mov
in
xchg
scas
decb
mov
dec
inc
and
mov
push
insb
test
or
jmp
mov
pop
std
ds
xor
xchg
outsl
ss
pop
shlb
lock
push
fildl
mov
or
and
std
mov
mov
mov
jb
ret
or
and
sarl
mov
xor
test
stos
leave
fistpll
xor
push
rol
xchg
stos
push
test
sbb
jnp
push
ret
orl
push
pmulhw
arpl
jb
pop
push
add
lcall
push
sahf
mov
insl
xchg
pusha
jbe
pop
cmp
aad
fsin
fs
sbb
lret
xor
xorl
lods
or
mov
add
adc
jle
mov
jg
adc
xchg
or
add
neg
push
adc
mov
mov
jns
lds
rclb
push
jne
test
mov
in
dec
outsl
push
jl
js
push
or
xchg
cs
push
subl
data16
rcl
in
fdivrl
stos
pop
mov
test
mov
mov
in
idiv
ss
imul
xchg
insb
mov
lods
rorl
popf
dec
cltd
fdivrs
inc
push
inc
xlat
push
mov
adc
shrb
jecxz
adcb
cmp
rorl
mov
jmp
lods
arpl
push
adc
mov
andl
dec
call
es
icebp
mov
adc
inc
fisubs
outsb
jle
cmp
cli
lods
pushf
mov
mov
mov
jo
jmp
jbe
popf
popf
scas
fimuls
stos
cmpsl
dec
outsl
dec
in
xchg
push
xchg
sbb
pop
jl
dec
xchg
arpl
adc
jns
ds
sub
and
pop
dec
mov
roll
pop
popf
int3
stos
js
and
sti
clc
xchg
push
pop
aas
cwtl
xchg
cld
jl
out
and
jae
cltd
xor
cwtl
dec
mov
mov
fwait
aas
xor
jg
call
dec
scas
push
insl
push
add
jge
insl
cmp
sub
icebp
mov
inc
add
repnz
pop
sbb
push
fucomi
ret
push
jbe
mov
fadds
divb
xchg
adc
xchg
inc
push
out
repnz
stos
add
loopne
aaa
pop
dec
inc
pop
rcrb
popa
arpl
cwtl
xchg
xchg
lcall
add
add
ret
cmp
xorb
test
inc
jbe
les
cmp
mov
insb
shrb
and
sti
stos
in
xchg
sbb
lcall
or
xor
push
xchg
cmpsl
ja
push
mov
aaa
out
outsl
dec
sbb
jae
stos
or
fs
imul
xor
out
divb
in
adc
out
in
sbb
in
je
push
rcrl
pop
pop
cli
std
int
fs
jle
loope
dec
inc
shl
popa
push
or
xchg
xchg
lods
push
mov
sbbl
pop
out
aad
test
lds
xor
in
pop
mov
cs
dec
inc
into
pop
xchg
xor
mov
gs
cmc
mov
sub
jp
imul
outsl
movaps
mov
push
daa
loop
divb
sub
loope
or
fistl
das
add
jo
push
lcall
shll
mov
mov
mov
cmp
xor
push
add
mov
mov
fcmovbe
mov
cmc
pop
inc
sub
and
addb
xchg
dec
sbb
inc
cmpsb
jb
push
dec
xchg
cld
fistps
xchg
sbb
add
outsb
imul
jb
sbb
mov
xchg
out
add
addr16
push
cmp
cld
test
imul
add
lods
adc
rcl
and
xchg
mov
inc
gs
stos
rclb
sub
add
scas
mov
icebp
inc
inc
push
cli
pop
cld
imul
adc
mov
loopne
xor
addr16
bndstx
icebp
xchg
rolb
stc
fwait
mov
insb
js
iret
clc
sbb
es
dec
lret
in
mov
push
mov
dec
mov
int
and
ret
jl
outsl
sub
xor
enter
sbb
repz
jne
cmpsl
mov
popf
cld
das
lods
mov
jae
adc
fsubrl
or
mov
add
addr16
cli
rcrb
aas
add
in
cwtl
lret
cmpl
mov
xchg
cmp
jne
cmp
out
ret
pop
sti
aad
in
sub
cmp
xchg
mov
fmuls
inc
movsl
mov
xchg
rorb
mov
leave
adc
pop
cmpsl
sub
stos
sub
rorb
dec
xor
xor
es
mov
repz
out
icebp
mov
vpsrlq
pushf
pop
fwait
sahf
in
mov
pop
aaa
stos
hlt
sahf
dec
or
clc
lcall
push
mov
pop
mov
mov
push
and
mov
push
xchg
fwait
lcall
das
mov
mov
pop
sub
mov
jno
cmc
cmp
sub
xchg
lahf
push
out
or
mov
hlt
sub
jp
bound
das
pop
jmp
fdivp
fildll
sub
sbb
dec
dec
popf
loopne
dec
out
dec
hlt
lcall
insb
inc
push
iret
outsl
xor
pusha
das
jae
pop
shll
pop
dec
lea
adc
adc
mov
mov
inc
cmpl
push
lcall
mov
jns
gs
mov
jmp
out
pop
xor
cmpb
inc
aad
dec
dec
insl
lods
sahf
test
scas
jecxz
lahf
cmp
mov
xor
sahf
call
push
sub
test
push
fisubrl
inc
xchg
pop
pusha
jg
mov
negb
lcall
cltd
ja
xor
cmp
adc
inc
loopne
or
push
dec
jo
xlat
scas
call
push
std
scas
jo
rorb
cmp
cmp
cmp
in
sbb
sbb
or
cmp
mov
call
lea
inc
inc
bound
inc
aam
or
pop
jnp
sahf
arpl
hlt
mov
js
cmpsl
aam
jle
jns
inc
fcoml
add
and
xor
mov
jae
mov
and
roll
mov
mov
fwait
jmp
ret
mov
lahf
rcrl
lret
sti
sub
jmp
mov
pushf
xchg
nop
dec
add
in
sub
mov
cld
lahf
outsb
sbb
popa
push
popa
lods
or
clc
mov
push
int
push
pop
cltd
mov
lock
sub
add
nop
jnp
lret
sbb
ror
or
arpl
mov
mov
xchg
scas
push
aaa
insl
mov
push
push
push
int
or
push
jns
pop
mov
movsb
mov
out
dec
movsl
or
imul
xchg
int3
cld
mov
test
pop
rcrb
lret
inc
aaa
push
clc
push
pushl
in
and
in
mov
lds
dec
inc
int3
mov
aas
mov
inc
in
dec
cmp
inc
push
fwait
jge
icebp
cwtl
or
scas
add
and
cmpsl
into
mov
mov
out
push
dec
cmc
out
test
mov
test
push
enter
sbb
iret
xchg
xor
jne
dec
out
xor
push
lret
pop
addl
ss
fs
imul
fisubs
xor
adc
jl
sbb
fnstsw
das
rcrb
imul
xor
and
xor
int3
decl
movsb
mov
movsl
xlat
jno
pop
jp
dec
sbb
shl
ret
aam
enter
push
mov
pop
add
add
mov
push
cmp
push
sahf
ljmp
ljmp
es
sub
es
shll
into
je
test
pop
cs
sbb
xchg
inc
xchg
add
scas
movsb
inc
dec
adc
loop
shrl
leave
fdivrl
enter
in
iret
arpl
and
xor
pop
jmp
sahf
xor
lahf
sub
out
aam
push
or
pop
push
cmp
add
and
adc
iret
mov
movsl
andb
in
pop
mov
sahf
dec
dec
test
scas
lock
aam
inc
test
outsl
fisttpl
or
movsb
lds
fimull
jle
femms
std
pop
pop
mov
mov
xchg
insl
jns
mov
cmp
sub
rcll
and
adc
imul
fwait
push
xor
cmpsb
pushf
push
inc
pop
or
mov
jo
repz
xchg
sti
stc
adc
and
jb
xchg
dec
int
std
repz
mov
loope
mov
inc
pop
fists
push
inc
inc
jnp
scas
iret
or
bound
inc
push
in
cmc
add
lret
rclb
lock
inc
shl
dec
inc
xchg
mov
out
mov
pop
imul
sarb
push
enter
rorb
ss
stos
mov
pop
cmpsb
pop
jbe
xchg
mov
push
outsb
call
push
mov
xchg
mov
jmp
pop
arpl
jge
insb
xor
cmp
cs
data16
cmp
mov
pop
jae
enter
pop
test
in
cmc
jbe
loopne
jl
fadds
adc
pop
addb
lods
sbb
dec
jo
dec
rolb
arpl
int3
leave
jl
sbb
insl
aad
sbb
sbb
sbb
adc
xor
xchg
shlb
xor
test
ss
push
shrb
filds
inc
mov
fidivrs
mov
pop
mov
in
loopne
or
sub
cmovl
jns
add
and
ss
pop
inc
push
mov
and
cld
ss
mov
ljmp
mov
sub
ret
cmp
xchg
nop
ds
jo
aas
xchg
pushl
repz
push
in
scas
fcmove
and
cmpsb
fdivrs
jp
mov
push
jo
sahf
adc
xor
lcall
clc
cmp
sahf
push
dec
add
mov
ja
inc
mov
pop
sbb
repnz
jmp
insl
add
jle
add
xchg
jle
dec
movsb
adc
xor
je
jge
lcall
data16
and
jp
mov
or
shl
sbb
movsb
mov
pop
mov
pop
leave
jbe
adc
inc
daa
lcall
push
xor
inc
xchg
inc
cmp
in
ss
loopne
push
test
mov
daa
lock
into
addr16
sbb
test
add
mov
pop
mov
cmp
cmp
jbe
je
push
inc
push
sbb
mov
out
xor
iret
outsb
jmp
orb
bound
adc
xchg
imul
mov
clc
and
lret
pop
mov
pop
mov
push
sub
push
out
pop
fldcw
imul
add
std
push
sub
inc
add
in
nop
adc
loope
mov
xlat
pop
mov
push
ss
push
leave
adc
lret
pop
pop
sahf
add
push
sbbl
arpl
test
daa
dec
sbb
mov
cmp
cwtl
movsl
aam
std
adc
xchg
xchg
and
cwtl
mov
fwait
inc
movsb
nop
xchg
into
inc
push
mov
adc
sbb
mov
mov
xor
fsubs
inc
pop
mov
jb
cmpsl
and
fwait
ss
fiaddl
movsb
pop
out
push
push
movsl
mov
push
mov
push
sub
push
jle
sbb
std
sub
daa
cmp
aam
adc
mov
push
stc
cltd
add
enter
daa
pop
add
mov
sahf
callw
jns
rcrb
pop
push
pop
cwtl
sub
pusha
add
std
scas
sbb
jne
push
or
push
stos
pop
push
sbb
js
ds
sub
sbb
aad
mov
repz
imul
sbb
adc
in
fstpl
adc
popf
push
shlb
push
shl
mov
jns
iret
inc
rorl
pop
movsb
add
xor
lcall
mov
outsl
in
roll
push
and
and
add
fldl
jecxz
dec
ffree
mov
shrl
jge
xor
mov
stc
fiadds
enter
fildll
and
cmpsl
test
pushf
mov
adc
push
loop
or
ret
add
gs
cld
popa
pop
sbb
pop
repnz
fldt
xchg
fmull
push
pop
adc
mov
sbb
inc
and
ss
jns
cmpsb
xchg
xchg
lods
out
pop
sub
mov
jbe
sub
cmp
daa
call
jle
push
jbe
movsb
push
push
mov
arpl
add
xor
adcl
xlat
ja
jp
in
out
sbb
loope
dec
xor
lea
push
loopne
adc
pushf
stos
adc
sbb
dec
dec
imul
mov
xchg
stc
mov
les
mov
cmp
dec
sbb
popf
repnz
mov
sbb
add
lea
je
addb
xlat
xor
dec
push
push
outsb
jecxz
mov
cmp
popa
lds
cmp
mov
sbb
and
mov
mov
sub
std
lahf
sub
xchg
mov
pop
jmp
ret
js
pop
int3
push
fdivs
mov
cmp
jae
mov
stos
sub
loopne
pop
fs
add
rorl
inc
or
jno
testl
adc
xor
test
xchg
lods
fwait
mov
dec
imul
cmp
push
fcmovnb
pop
scas
nop
or
inc
in
and
cmp
mov
ror
or
jns
mov
test
mov
xor
pop
cli
hlt
les
push
pop
call
mov
mov
lea
pop
int3
arpl
adc
cltd
fsubl
lods
lods
and
pop
cli
je
cmp
sub
lcall
aas
iret
psllw
xchg
inc
std
dec
dec
jecxz
xor
xchg
inc
mov
sbb
push
adc
in
jp
popa
std
arpl
popf
daa
ret
add
aaa
adc
or
mov
dec
adc
clc
push
fdivr
jp
mulb
fsts
test
lock
jmp
jge
mov
add
lea
xlat
lahf
push
jmp
fsubl
test
mov
push
push
cwtl
push
and
sbb
mov
sbb
ljmp
dec
mov
mov
stos
test
mov
out
inc
pushf
mov
aad
fisubrs
inc
fs
test
cmp
into
cmpl
push
pop
ret
outsl
or
test
repnz
aaa
sbb
push
inc
mov
xor
or
js
xchg
pop
jecxz
movsb
push
mov
leave
sbb
pop
hlt
mov
add
xor
pop
dec
pushf
xchg
sub
fcoml
in
enter
mov
aam
cmc
or
xlat
in
sbb
fstpl
pop
call
repnz
sbb
mov
mov
pop
add
push
outsl
imul
outsb
mov
jae
int3
insl
idivb
arpl
xor
sub
xlat
xchg
sbb
mov
xchg
jge
idiv
dec
std
add
cmp
or
in
shll
shll
hlt
dec
push
int3
xchg
push
inc
jmp
sbb
fistpl
gs
insl
sbb
mov
inc
jle
inc
or
mov
test
les
ss
mov
addr16
xor
fwait
test
mov
fistps
std
and
dec
divl
push
jae
and
ficoms
lds
pushf
add
mov
add
insb
fmuls
adc
xchg
lock
out
or
les
add
inc
mov
cmp
hlt
loop
push
mov
roll
test
xchg
mov
rorb
lret
xor
inc
cld
test
pop
xor
lods
sbb
out
mov
pop
imul
in
popf
cmp
hlt
test
adc
pusha
imull
mov
cmp
pop
das
sbb
stos
int3
call
pop
xchg
cmp
test
in
push
cld
mull
inc
in
adc
mov
nop
shr
and
pop
cld
or
or
mov
mov
pop
and
jmp
loopne
and
jno
out
cmp
into
ja
mov
dec
pushl
pop
push
jnp
mov
shlb
push
les
sub
sub
clc
lcall
insb
outsb
dec
push
stos
testb
fcom
and
test
mov
mov
int3
inc
inc
xor
sbb
movsl
inc
repnz
arpl
movsl
adc
jge
mov
insb
stos
mov
lret
sbb
mov
sub
mov
xchg
mov
dec
inc
xchg
cs
test
mov
call
dec
incl
sub
repz
mov
push
and
adc
popa
jl
repz
out
jl
add
jno
clc
pop
out
movsb
fiaddl
test
ljmp
xchg
pop
into
jns
jecxz
adc
or
mov
jge
in
jg,pn
and
rolb
loopne
int3
daa
test
pop
daa
aaa
scas
fcomi
or
cmp
pop
scas
test
pop
dec
xchg
aad
mov
sbb
jno
or
cs
das
xchg
jp
dec
cmpsb
inc
mov
mov
aad
insb
jns
imul
sub
lea
cs
loope
pop
daa
sarl
cltd
les
push
fwait
pop
lods
int3
out
mov
clc
lods
mov
pushf
lret
jno
loopne
pusha
daa
lcall
xor
ret
inc
pop
and
test
int3
icebp
insl
push
inc
inc
cmpb
call
cmp
mov
push
push
orb
sub
sub
out
pop
mov
test
pop
movb
mov
std
test
repnz
int3
leave
lret
jg
mov
add
mov
nop
sbb
scas
int3
iret
cmp
and
mov
js
into
fstl
sarb
mov
inc
sub
push
fprem
xor
frstor
pop
xchg
popf
cmpsb
das
je
dec
mov
push
repz
add
jmp
out
les
int3
int
sub
jp
mov
ja
dec
inc
add
or
mov
into
fsubp
fcomip
inc
sbb
mov
les
pop
jo
rol
test
jae
imul
loope
imul
push
daa
xor
je
out
movsl
sbb
aam
xor
xchg
out
pop
xchg
lret
fwait
daa
in
and
cmp
xor
stc
mov
in
sbb
out
adc
jle
ja
dec
gs
add
inc
cld
xorl
jp
iret
mov
or
adc
sub
jbe
lods
js
lods
test
aad
loopne
and
cli
je
xchg
fisubrl
loop
ds
je
pop
cmp
mov
mov
nop
imul
ret
leave
jnp
xchg
pusha
sbb
pop
sarb
jmp
and
jbe
sbb
aad
int
inc
sbb
popa
add
sar
ds
nop
clc
xchg
xchg
push
sub
mov
rorl
jl
pop
or
cmpsb
fistpl
mov
cmc
mov
push
lahf
and
pop
or
je
das
and
mov
jp
test
xchg
cmp
ja
adc
and
pop
mov
adc
cltd
push
xlat
or
fidivs
aas
inc
ret
aas
int
aam
jecxz
andl
enter
dec
jle
es
mov
jecxz
out
mov
lods
popf
andl
mov
cmp
sub
adc
je
pop
ret
mov
jg
rclb
adcl
movsb
lcall
jb
ss
gs
insl
mov
jl
mull
add
lcall
inc
and
lods
adc
lahf
cmc
outsb
outsl
xor
ret
add
fildll
mov
out
mov
clc
imul
push
pop
dec
fcmovbe
sbb
xchg
imul
loope
scas
mov
xchg
sbb
shlb
mov
cmpb
adc
inc
jo
sahf
jbe
and
mov
int3
jno
pop
pop
sbb
dec
mov
xor
mov
inc
rcrl
mov
and
test
mov
lods
push
push
xor
xchg
fwait
pop
test
subl
pop
pop
xlat
lea
jno
push
nop
pop
jae
push
and
cmp
pop
jbe
lea
mov
dec
fwait
subb
ja
arpl
adc
pusha
fld
sub
cmp
adc
push
sbb
arpl
mov
and
mov
jb
push
retw
push
mov
push
pop
push
lcall
xchg
mov
adc
out
movsl
xchg
into
xor
or
sbb
and
iret
sar
test
jg
imul
mov
lock
les
imul
into
pop
mov
cmp
sub
repnz
fstpl
pop
inc
lods
push
sub
mov
adc
cmpsb
mov
cmc
incl
cmp
fdiv
inc
sbb
lret
pop
jmp
dec
idivl
pop
loope
and
adc
xchg
ja
sub
jecxz
pusha
in
cltd
add
sbb
sahf
icebp
bound
mov
rcrl
shlb
mov
mov
aas
lret
std
ficoml
add
cmp
inc
sti
clc
push
or
rol
fcompl
stc
mov
push
xchg
jno
sarl
or
and
xchg
inc
jns
ret
jbe
inc
jnp
jg
shll
cmc
int
xchg
lods
loop
xor
arpl
in
sub
mov
add
adc
fsts
mov
mov
push
adc
ror
into
cmpb
mov
add
jle
xchg
sahf
dec
xchg
xchg
sub
fadd
sbb
inc
mov
test
mov
cmpl
xchg
fimuls
int3
sti
xchg
dec
mov
pop
das
pop
fcoms
sub
cmp
ljmp
daa
fcom
ret
hlt
jmp
mov
filds
add
push
and
rcrl
call
mov
jnp
add
imul
fwait
stos
pop
subb
sub
inc
dec
enter
xchg
jb
dec
dec
xchg
daa
sub
stos
xor
xchg
pop
dec
lock
xor
pop
pop
cmp
sti
leave
fwait
pop
and
pop
dec
push
cmp
cld
cmp
mov
es
cmpsb
jne
jnp
add
in
and
push
mov
outsl
xchg
xor
xchg
fcomi
shll
cltd
pop
and
pop
add
adc
inc
inc
mov
fwait
jo
dec
iret
push
clc
mov
xchg
bound
test
aam
cmp
push
js
cmpsl
sub
sbb
mov
adc
fs
mov
in
int
dec
jg
jae
fs
push
mov
cmp
pop
inc
mov
push
xor
cwtl
cwtl
mov
sarb
leave
in
xchg
jbe
cltd
test
jle
icebp
mov
cmp
and
daa
orb
jb
arpl
or
sub
movsl
xchg
push
add
sbb
cmpsb
lret
fwait
xor
les
cmc
xor
int3
sti
xor
push
xchg
je
dec
cmp
ret
lcall
lock
dec
call
cmp
jbe
lods
xchg
cmp
mov
cmp
sete
sahf
nop
push
cmp
mov
jnp
mov
dec
mov
aad
rcll
stc
push
movb
rcr
inc
or
std
cld
cmc
pop
cmp
test
mov
out
loop
jge
aaa
lods
mov
inc
mov
jae
pop
les
xchg
arpl
clc
js
inc
repnz
test
mov
loop
in
mov
std
movsl
mov
mov
sti
lods
jnp
insb
mov
ret
sub
and
inc
aaa
pop
add
scas
xor
xchg
cmp
adc
lcall
jecxz
mov
and
pop
xor
jl
lahf
movsb
cmpsl
xor
mov
inc
dec
xchg
nop
mov
jno
jp
push
jecxz
rcrl
push
sub
sbb
cld
and
je
mov
andb
add
xor
dec
pop
push
leave
dec
sbb
cmp
nop
push
por
dec
lods
jbe
lds
jp
fbld
mov
mov
gs
jmp
mov
outsl
mov
ret
les
cmp
fidivs
mov
mov
pusha
fwait
leave
repnz
xor
das
push
add
sbb
aaa
movsl
push
push
shrb
push
mov
in
out
mov
xchg
adc
adc
adc
pop
and
lret
cmpsl
cld
loope
jnp
push
add
pop
mov
add
push
mov
xor
ljmp
cmp
loopne
dec
pushf
push
or
cmpsl
sub
sahf
sbb
push
loop
lds
xchg
int3
aad
scas
and
pop
pop
dec
imul
cwtl
adc
cmp
pop
scas
mov
mov
pop
pop
adc
xor
push
dec
jbe
cmovp
ret
cli
repnz
pop
out
xor
fwait
cmpsb
pop
lret
ret
xchg
jnp
jbe
stc
sbb
push
add
mov
cmpsl
rclb
dec
scas
pop
rolb
outsl
ljmp
cmp
sbb
mov
scas
jle
lcall
das
mov
push
sub
add
sbb
imul
sti
add
mov
mov
cmp
stos
sbb
popa
cmp
xor
ret
xchg
in
imul
add
jno
cmp
lds
int
and
xchg
fbstp
xchg
bound
jb
leave
lret
imul
popf
xchg
inc
testl
and
push
nop
mov
or
add
lcall
sub
mov
adc
push
in
jge
mov
nop
cmp
dec
cmp
cmp
scas
test
inc
xchg
cmp
mov
push
enter
lea
jo
push
xlat
shlb
xor
push
mov
out
pop
ss
aaa
jmp
ret
cmpsl
ret
dec
popf
cmp
js
mov
sbbb
outsb
dec
lods
cmp
push
and
mov
movsl
inc
aam
clc
scas
mov
mov
inc
fs
mov
dec
call
inc
jnp
test
clc
in
jb
jmp
movswl
out
or
push
xchg
push
push
push
jmp
mov
sbb
cmp
pop
xor
dec
mov
mov
cmpsl
rorb
push
in
sbb
lods
xchg
add
jecxz
or
xor
cmp
and
xor
mov
in
int
notb
jnp
enter
lcall
movsb
mov
push
dec
jbe
pop
and
mov
lcall
inc
sbb
in
aas
and
cli
pop
push
or
xor
dec
or
xor
fnstenv
hlt
ret
push
pop
fstl
mov
idivl
xchg
add
jle
cmp
mov
dec
cmp
jecxz
shlb
push
mov
push
idivb
clc
imul
in
jnp
not
adcb
imul
ds
pop
xorb
xchg
lret
out
push
push
arpl
pop
jl
push
fdivrp
push
pop
arpl
cmpsl
lcall
outsl
push
xrstors
mov
das
mov
and
adc
pop
idivl
or
mul
sbb
sbb
mov
inc
mov
xchg
xchg
lcall
cmp
cmp
and
rcll
xor
pop
dec
in
pop
xchg
inc
mov
jle
ljmp
dec
sub
and
nop
inc
lahf
out
sbb
sub
nop
mov
lds
rcr
lods
jg
loop
shlb
xor
xchg
sbb
cmp
je
adc
lea
imul
popf
std
data16
adc
adc
sbb
sub
rorb
cs
xchg
rcrb
jns
xchg
pusha
adc
xchg
push
insb
jecxz
pop
mov
cwtl
fwait
lock
xchg
xchg
add
dec
and
data16
js
and
add
push
hlt
push
das
dec
jp
xor
pop
mov
daa
jge
jno
sub
lcall
loope
ljmp
adc
fucom
lock
sub
and
icebp
sbb
and
cwtl
fcmovb
adc
or
dec
in
and
ret
dec
jge
test
pop
mov
xor
out
mov
roll
xor
mov
arpl
xchg
cs
ss
icebp
sarb
push
fistl
cmc
mov
inc
xor
mov
mov
mov
test
inc
idiv
and
je
ljmp
sbb
mov
sub
pop
test
sub
sub
pop
cmp
test
push
jnp
push
xor
mov
pop
lds
pop
fldenv
adcl
es
mov
and
mov
push
add
mov
and
dec
add
push
push
jle
jo
xchg
xchg
jg,pt
push
mov
es
push
movsl
inc
imull
ljmp
and
ret
mov
xchg
inc
pop
stc
push
leave
ret
cmpsl
xchg
inc
add
call
mov
repnz
fscale
aaa
xchg
fbld
sbb
pop
mov
mov
nop
lock
data16
sbb
mov
int3
div
push
dec
ss
mov
pop
ret
rolb
jmp
cmp
inc
mov
xchg
add
xor
mov
mov
mov
xor
inc
xchg
repnz
or
push
jle
pop
jb
jb
movsl
mov
in
std
leave
cmp
addr16
mov
mov
aad
enter
ds
es
inc
inc
cli
jl
popa
into
fdecstp
sub
je
int3
popf
aam
xor
or
push
pop
mov
jo
cmp
fcomps
dec
ljmp
rclb
mov
jle
jae
sbb
push
mov
push
rorl
sbb
scas
call
out
loope
inc
jle
iret
push
stos
push
lea
outsb
fdiv
fwait
repz
les
xchg
pop
pop
mov
repnz
inc
repnz
mov
push
or
push
mulb
mov
sub
fadds
frstor
add
and
aad
insl
out
push
jmp
xor
jle
hlt
repnz
jecxz
mov
lret
sbb
jo
or
push
test
add
leave
xchg
or
in
xor
cmp
and
leave
nop
pop
pop
mov
loopne
lcall
fwait
pop
or
lret
jo
push
pop
xor
xor
outsb
dec
repnz
pop
hlt
div
aas
shlb
inc
mov
or
lahf
lea
ss
fstpl
xor
inc
pusha
out
push
cmpsb
in
in
dec
stc
stos
stc
sub
xchg
mov
push
push
push
sub
sarl
lret
out
cmc
aaa
inc
push
or
push
jns
scas
fcoms
lahf
clc
dec
mov
sub
stos
cmpsl
mov
mov
inc
xchg
adc
repnz
sbbl
jp
pop
mov
push
repz
mov
in
dec
stos
mov
xor
pushf
jae
sub
sbb
mov
jbe
mov
push
mov
imul
sub
dec
or
in
loopne
fcmovnu
daa
divb
mov
inc
movsb
cwtl
fnstcw
pusha
movsb
sbb
xor
fldenv
or
nop
hlt
fs
xchg
ss
cmpsb
pop
jno
out
js
jle
sub
popf
xor
inc
cmp
dec
dec
xchg
mov
in
aaa
push
mov
call
aas
dec
je
cmp
or
xchg
ret
cmp
mov
push
mov
cmp
mov
lods
push
or
fsts
add
push
pushf
daa
jge
sub
add
aas
call
das
pushf
rorl
les
ljmp
pop
xchg
scas
mov
out
je
jl
jecxz
clc
adc
or
dec
or
mov
dec
sti
les
mov
outsb
or
cmpsb
pop
ds
xchg
sub
adc
push
and
xor
test
cmc
sub
cmpl
push
pusha
cmp
xor
mov
mov
cmpsb
out
mov
aad
sbb
dec
xorl
push
cmp
and
shlb
xor
mov
fwait
aad
or
jo
adc
mov
sbb
xor
pop
push
popf
js
in
jnp
lds
cltd
jecxz
stos
testb
inc
jl
push
sarl
lock
push
js
rcl
stc
cmc
mov
orl
cltd
pop
and
sub
call
ss
inc
inc
out
xchg
cld
sub
sub
adc
idivl
fnstenv
mov
enter
jmp
pop
xchg
jbe
std
mov
loope
repnz
xchg
sarb
mov
cmp
dec
scas
xor
sbb
sub
inc
into
ja
sub
repnz
sti
fadds
xor
mov
popa
push
mov
sbb
add
adc
enter
mov
cld
push
sub
or
jecxz
dec
in
pusha
jbe
sbb
cmp
sti
aas
mov
orl
inc
pop
inc
mov
scas
mov
push
faddl
xor
movsb
std
loop
ret
adc
repz
sbb
mov
scas
loope
leave
jmp
hlt
movb
aas
cli
sbb
movsb
ret
dec
pushw
cmpsl
neg
dec
fistl
test
ret
ret
test
rorb
mov
fisubrl
sub
ficoml
and
jo
or
jecxz
push
out
mov
mov
js
inc
gs
pop
ljmp
cld
xor
std
add
int
dec
popa
insb
push
js
or
jae
adc
data16
mov
loop
jb
leave
xlat
add
inc
int3
mov
xchg
enter
ja
xchg
fstpt
aaa
mov
and
dec
dec
cli
es
popa
mov
and
xchg
inc
jae
shrl
aad
sub
leave
or
movsl
sahf
popf
fsubrl
cmp
xor
or
adc
add
push
fldcw
insl
insl
sbb
pop
ja
inc
xchg
mov
add
std
mov
lods
sbb
mov
mov
nop
pop
pop
xor
or
test
jge
inc
mov
or
leave
loope
cli
repz
xor
adc
adc
outsb
ret
xor
xor
mov
mov
fisubl
into
in
adc
ret
lods
mov
dec
add
movsl
arpl
push
xchg
test
and
pushf
sbb
int3
jo
sub
in
sahf
ja
aad
sub
xor
push
push
cmp
jae
imul
jecxz
push
fnsave
jae
mov
cmp
or
lds
xchg
pop
mov
add
pop
sbb
cwtl
ffree
hlt
loope
cs
scas
dec
mov
inc
dec
add
sub
cwtl
xor
movsl
or
icebp
jnp
stc
sbb
lea
loope
pop
sub
xor
scas
sub
cmp
int
cmp
lcall
dec
sbb
test
lock
enter
imul
std
adc
sbb
add
mov
pop
pop
push
inc
pop
shll
xor
mov
jecxz
packsswb
inc
mul
xchg
arpl
daa
fisubl
push
cmpl
out
enter
ret
mov
sub
fcomp
enter
push
fdivrl
push
add
fsubrl
pop
cwtl
filds
push
mov
cwtl
mov
movsl
mov
inc
fimull
lahf
and
shr
jae
xchg
out
clc
test
je
inc
popa
subl
dec
mov
dec
repnz
mov
mov
icebp
xor
scas
in
xor
aad
xchg
push
leave
dec
and
fidivrl
icebp
cmp
mov
std
xor
pop
test
inc
mov
mov
adc
ret
shrb
leave
pop
push
and
ffree
imulb
test
inc
and
subl
jbe
inc
sbb
ljmp
xchg
add
adc
mov
outsb
pop
dec
addr16
sub
in
lret
mov
pop
mov
int
pop
outsb
mov
jl
fsub
inc
or
das
repz
push
mov
add
fs
les
inc
popa
cmp
xor
inc
std
loope
les
insb
mov
in
mov
mov
scas
sbb
ds
push
das
mov
fs
je
inc
out
xor
mov
addr16
dec
pop
dec
inc
adc
sbb
pop
jo
or
popf
gs
adc
push
pmaddubsw
mov
shlb
push
dec
cltd
js
or
push
push
dec
push
push
cmp
insb
out
jo
adc
and
jmp
mov
je
push
sahf
jl
jno
lods
fidivl
pop
mov
prefetch
mov
pop
pshufw
data16
dec
fldl
push
or
and
xlat
flds
xchg
sbb
inc
inc
js
push
aad
sar
pop
xchg
push
pop
enter
in
xlat
mov
add
fdiv
add
and
sbb
push
inc
cmp
ret
push
xchg
clc
mov
jnp
pop
pop
jne
inc
daa
cs
cmc
fs
ss
add
inc
adc
push
pusha
imul
hlt
adc
xor
test
in
xchg
mov
mov
sbbb
in
sub
lret
push
je
dec
jg
pop
imul
push
and
push
and
xor
lahf
cld
outsl
and
pop
fcompl
rcrl
mov
ror
cmp
lods
lret
ljmp
loop
mov
incb
outsl
mov
imul
xor
cmp
pop
idivb
inc
cmpsb
jns
inc
cmpsb
jb
scas
xchg
cmp
jge
dec
or
push
cltd
stos
pushf
and
int
outsl
xchg
inc
scas
mov
push
loope
or
jne
xchg
sahf
push
add
je
hlt
call
xchg
inc
out
sub
icebp
push
inc
mov
pop
mov
aas
in
adc
sbb
jo
mov
shl
mov
stc
cmovno
dec
push
repz
xchg
mov
loope
cmp
aam
daa
pop
jns
mov
push
lock
cli
les
movsb
pop
mov
insb
adc
dec
faddl
mov
adc
xor
cmp
je
add
clc
aaa
bound
mov
mov
mov
test
inc
orb
dec
lds
jo
sbb
arpl
inc
cs
xor
mov
cmp
xchg
das
rol
movb
in
fstpl
dec
enter
sahf
mov
sub
inc
mov
repnz
movb
es
adc
and
cmpsl
mov
repnz
push
ljmp
repz
push
call
fiaddl
inc
jge
sub
out
arpl
jle
xchg
xor
das
cmp
sbb
bnd
inc
sub
out
addr16
addl
lods
xorb
push
cld
in
fcomip
cmc
push
add
lret
test
xchg
shll
aas
stc
and
les
cmp
ret
rcl
movsl
aaa
push
dec
mov
rcr
aas
xchg
sbb
add
je
scas
test
adc
mov
sub
nop
es
mov
mov
add
aad
cmpsb
lds
jns
mov
fstps
out
adc
popa
push
insb
dec
and
pop
rcl
dec
ljmp
push
mov
xor
aam
and
stos
fisttpl
adc
movsl
stc
or
add
into
imul
iret
cmp
adcb
lcall
pushl
pushf
sbb
addr16
ja
inc
loopne
jo
hlt
mov
cmp
jbe
xchg
pop
lods
push
push
pop
push
movsl
movsb
mov
arpl
pop
fists
mov
dec
call
push
clc
push
pop
test
mov
sub
jns
cs
flds
inc
xchg
and
popf
or
add
dec
dec
dec
cs
jle
lret
clc
push
mov
fisttps
adc
and
cli
mov
mov
je
cmp
pop
jb
fdivr
dec
fidivrs
mov
cmp
add
xchg
pop
fnstsw
pushf
pop
lcall
sub
mov
jg
enter
addr16
xchg
mov
xchg
mov
push
mov
pop
dec
push
xchg
insb
call
push
pop
stc
stos
fsts
fsubrl
call
push
jl
cmp
sub
xchg
enter
insb
ljmp
jl
cld
cs
jbe
jmp
subb
mov
frstor
jb
push
push
mov
push
sub
or
lock
push
les
sub
into
adc
jge
clc
ds
cmpsb
popf
push
jnp
jnp
xchg
sbb
push
xchg
ficomps
fwait
cmp
in
jmp
pop
inc
bound
mov
sub
repz
xlat
fdivrl
xchg
loope
cmp
jae
inc
sbb
cmp
add
mov
aam
fisttps
xchg
dec
sbb
fwait
imul
sti
loop
sbb
xchg
imul
inc
push
mov
xor
les
in
dec
jbe
mov
inc
or
xor
test
test
or
pushf
sahf
mov
in
xchg
fimuls
cmp
inc
lds
mov
sbb
mov
mov
cmp
mov
push
hlt
hlt
rcrb
jge
nop
add
jp
outsl
mov
or
mov
lret
movsl
push
inc
leave
jo
mov
lcall
scas
scas
rcrl
sbb
pusha
pop
ret
cmp
sub
dec
cltd
sbb
push
lds
pop
sub
mov
adc
pop
int3
xchg
scas
xchg
sub
cmp
int
loop
push
adc
mov
or
es
ss
sub
cmp
jno
dec
jge
jbe
in
mov
out
xor
out
sub
fldt
cmpb
test
popf
addr16
adc
jle
xlat
pop
add
int
outsl
dec
cli
adc
xorl
adc
sub
dec
xchg
push
pushf
orl
ret
int3
call
mov
mov
popa
int3
jbe
lods
mull
xchg
push
cmp
mov
xlat
or
mov
adc
aaa
call
mov
pop
cmpsb
xchg
jmp
data16
jae
jnp
jns
fxch
scas
outsb
push
es
xorb
inc
push
jmp
ret
mov
mov
adc
cmp
fcoms
sub
jnp
stos
jns
cltd
scas
loopne
sbb
out
mov
or
test
inc
jmp
mov
add
pop
pop
lods
adc
cld
pop
mov
imul
mov
test
xchg
sbb
pop
and
aas
xchg
inc
add
mov
cmp
fiaddl
push
adc
push
lds
ss
cmc
rolb
sbb
push
xchg
cmc
es
jmp
or
mov
mov
test
btr
ret
addr16
mov
in
fs
cmp
push
add
sbb
mov
ss
push
ret
jle
push
push
push
ds
jmp
scas
je
inc
mov
add
mov
push
dec
gs
mov
or
push
adc
and
xlat
cmpsb
stc
add
push
and
mov
push
mov
jbe
dec
ljmp
pop
pop
or
into
xor
ss
lods
aam
scas
ret
negl
sbb
stos
outsb
dec
cli
or
mov
loop
sub
mov
xchg
xchg
nopl
ds
loopne
push
shl
inc
xor
stos
push
mov
adc
mov
jl
icebp
shr
std
or
loop
mov
adc
mov
cmc
xchg
cwtl
mov
cmp
xor
ss
rorl
adc
cmp
test
iret
iret
add
mov
jmp
andb
cmp
outsl
mov
pop
push
icebp
fldt
rcr
insb
jg
imul
ss
jns
mov
add
insb
adc
sub
and
mov
push
or
jecxz
or
mov
stc
movsl
dec
out
push
sbbb
repz
cld
aaa
insl
ja
ss
imul
or
xor
lahf
sbbb
mov
fstps
inc
iret
addl
push
mov
out
jae
push
rcrl
jecxz
xor
add
and
in
sbb
push
dec
add
mov
std
mov
pop
repz
enter
cmp
loope
xchg
dec
jbe
fidivrs
test
div
pop
cltd
push
fisubrs
ja
sub
mov
inc
je
push
repnz
jp
adc
test
sub
jp
lods
sbb
add
push
jnp
movsl
sbbl
jle
mov
ja
pop
lock
inc
push
mov
shll
fildll
cmp
jp
aaa
ret
and
cmc
cmc
jmp
repz
fwait
cmp
idivl
and
inc
cld
fs
xor
sub
sbb
test
push
std
xchg
shl
test
or
sbb
sub
aam
xchg
ljmp
flds
dec
jmp
and
out
daa
loopne
test
gs
outsb
sahf
mov
or
push
pop
push
ret
cwtl
stos
mov
sbb
outsl
inc
cltd
xor
ja
enter
lods
sub
xchg
jno
xchg
mov
xchg
add
mov
jo
pop
dec
pop
jmp
sbb
xor
and
fsubs
jns
mov
les
scas
and
pop
sarl
sub
pop
jmp
cwtl
lds
xchg
mov
rcrb
js
pusha
lret
aas
dec
test
inc
fwait
push
loop
fists
mov
add
js
fadd
lret
fbld
xchg
into
clc
push
lcall
ret
inc
ljmp
adc
push
sub
or
inc
in
or
scas
xchg
ret
out
mov
pop
cld
adc
sub
push
cmc
push
js
dec
sbb
ss
xor
push
fsubs
jno
xor
sti
xchg
mov
xor
imul
test
sub
or
and
push
mov
fidivrl
xchg
daa
xchg
mov
dec
fs
sbb
mov
ja
mov
fmulp
sbb
pop
add
lods
and
inc
inc
into
ja
jnp
lret
lcall
fisttpll
in
aam
ds
lret
ja
cwtl
and
sbb
pop
cmpb
mov
insb
mov
in
repnz
or
in
ret
and
xchg
fldl
push
frstor
jl
mov
shlb
pop
roll
mov
push
inc
adcb
daa
mov
push
xchg
or
ret
mov
jmp
add
or
leave
dec
jns
les
sub
cs
dec
cmc
cmc
leave
outsl
ds
add
sti
mov
and
mov
mov
push
dec
sub
jmp
clc
mov
dec
insl
xor
inc
hlt
sti
pop
jl
cmp
pop
dec
xchg
clc
ffreep
mov
les
jg
mov
loopne
add
das
fnstsw
jae
mov
imul
pop
xchg
jne
jle
jno
dec
fsub
and
loope
int3
lcall
pop
out
popa
in
adc
aaa
enter
pop
int3
sub
sbb
repz
jb
nop
sbb
arpl
xor
in
mov
or
cld
push
ss
or
dec
or
icebp
mov
es
jb
mov
out
push
lcall
loop
aam
inc
sbb
jl
sub
std
cld
xchg
pop
adc
jne
cmp
mov
fdivrl
cmpsb
and
repnz
adc
xlat
idivb
into
das
mov
lods
ss
xchg
dec
and
and
je
sbbl
jne
lock
add
adc
xor
mov
cmp
out
pop
lret
jge
mov
inc
mov
push
xchg
aam
ds
jmp
shrl
mov
test
or
push
inc
es
andl
mov
pop
mov
lods
iret
sti
jmp
outsb
imul
insl
cmp
insb
and
sbb
and
cs
rcr
adc
in
sub
and
es
pop
push
outsb
pop
test
mov
arpl
jg
jg
test
push
lods
cmp
push
and
sub
fsubr
or
add
popa
mov
xor
scas
cs
xchg
outsl
mov
mov
dec
sbb
lret
nop
lret
int3
arpl
out
sub
pushf
sbb
inc
pop
jmp
xlat
pop
leave
pop
sbb
cltd
test
inc
xor
shll
inc
mov
clc
aaa
adcl
shlb
rcr
xor
lds
mov
mov
movsl
dec
divb
mov
push
xorb
mov
mov
jp
sbb
jno
dec
inc
repz
add
push
dec
fistps
sahf
test
addr16
push
sub
sbb
or
addr16
repnz
iret
insb
ds
jne
testl
xor
xchg
addr16
add
push
xchg
mov
pop
xchg
test
iret
icebp
das
shlb
dec
and
andb
shrb
push
dec
sbb
sbb
in
outsb
rcll
bound
and
mov
mov
mov
mov
js
push
les
pop
xchg
xor
cmp
je
loop
pop
pusha
lret
fldenv
mov
shlb
stc
jecxz
ljmp
inc
dec
xlat
daa
cmp
mul
stos
pop
or
movl
lahf
xchg
add
xor
mov
xchg
divl
xchg
das
shlb
sti
imul
mov
divl
add
hlt
pushf
nop
cmp
sub
sbbl
dec
push
adc
int
pop
adc
sahf
xchg
adc
mov
or
xchg
fistps
cmp
aaa
subb
pop
sti
inc
in
push
addr16
mov
ds
sbb
mov
mov
fs
popa
lahf
stos
pop
sti
xchg
and
pop
mov
aaa
aaa
push
cmpsb
xchg
jne
fwait
xchg
sub
add
bound
inc
add
push
xor
shrl
out
shlb
fbstp
ret
fisubs
andl
fs
int3
jg
mov
or
sub
pop
adc
xchg
insl
sbb
pop
mov
mov
mov
sub
push
in
les
mov
stos
jl
xor
push
mov
cmpsl
dec
loope
subb
test
sub
testl
lds
sahf
xchg
push
int
fstp
add
sbb
xorl
sbb
jo
push
cmp
ret
sub
sbb
inc
shlb
aad
movsb
sub
fdivrl
lds
or
aas
pop
dec
mov
mov
adc
sub
add
sub
pop
adc
mov
inc
jg
movsb
sti
outsl
out
adc
jbe
out
icebp
and
xchg
cmp
scas
mov
out
mov
ss
push
mov
lret
cli
mov
lret
jo
test
sbb
dec
xchg
and
insb
inc
aam
and
mov
fimull
ss
jo
mov
or
jo
stos
and
cmp
cmp
jb
fdivrp
sbb
sbb
dec
or
stos
mov
lods
popa
call
pushf
push
sbb
sub
aaa
lods
sbb
test
jle
cli
popf
leave
push
pushf
sub
cmp
pusha
lret
js
push
fwait
add
ret
sbb
cmp
mul
sub
mov
xchg
jmp
and
xchg
mov
addl
scas
in
add
mov
ja
sbb
xchg
frstor
inc
lret
inc
mov
js
jno
adc
loop
sub
add
mov
jo
mov
test
cmc
mov
ljmp
ret
or
call
stos
popf
cmp
addr16
lret
jne
fsubrs
rclb
into
fs
mov
xor
test
lahf
push
or
hlt
in
cwtl
and
pop
outsl
lock
cmp
and
jge
aaa
xchg
mov
loopne
mov
sub
leave
leave
push
fnstcw
pop
inc
jle
fnstsw
and
js
mov
or
nop
or
mov
inc
xchg
loopne
sbb
out
cmp
add
shlb
mov
push
lock
adc
xlat
cld
aad
xor
jnp
fwait
sti
daa
jle
mov
aad
push
repnz
in
insb
cmc
push
and
in
adc
shlb
dec
out
pop
outsl
fcompl
sub
cli
pop
addb
dec
loope
movsl
jnp
sub
jb
cmp
cltd
into
ljmp
sbb
pop
mov
pushf
dec
cmp
push
xchg
xor
add
mov
shlb
pop
push
aam
dec
paddsw
sub
dec
or
std
divb
and
mov
daa
out
and
jge
addr16
dec
aam
and
rorl
jecxz
jb
adcb
mov
add
mov
sbb
add
add
xor
xor
and
aam
mov
dec
lock
pop
fdiv
mov
pop
push
js
or
mov
jle
push
mov
cmp
cmp
xchg
enter
xor
lret
sbb
and
in
dec
and
stos
mov
sahf
fbld
insl
or
or
in
sar
popa
adc
subl
rorl
and
stc
dec
pushf
sub
lcall
dec
adc
xor
mov
loop
lock
sbb
adc
pop
in
lcall
gs
stos
and
jns
int
addb
jecxz
shrl
sbb
jo
orb
vminpd
xchg
lret
mov
lods
cwtl
jae
rcl
cmp
in
xchg
outsb
inc
pop
adc
or
push
push
stc
popa
push
mov
jmp
das
push
pop
jb
add
push
icebp
lock
mov
pop
or
push
aam
push
pop
mov
or
xlat
add
sub
ret
lret
testl
pop
pop
or
cmp
push
int
jae
xchg
dec
push
in
addr16
or
incb
inc
ficoml
xor
je
imul
ds
out
xchg
pop
ljmp
add
loop
dec
jne
stc
std
int3
sbb
aaa
jns
mov
dec
sbb
xchg
lret
call
in
dec
divb
sub
loopne
cmpl
jne
push
push
and
and
xchg
adcl
mov
jne
rclb
int
inc
xor
push
pop
mov
push
mov
jl
push
dec
bound
and
jno
and
mov
sbb
xchg
push
adcl
mov
add
andb
iret
push
faddl
dec
popa
sub
outsl
push
xchg
aas
fbld
outsl
jo
cmp
fsubs
push
push
mov
cmc
fidivrl
mov
pop
loope
mov
dec
ss
xor
adc
ljmp
andb
push
sbb
or
mov
lock
xor
and
cmp
jmp
ljmp
loopne
push
mov
mov
or
es
mov
std
shl
jp
cmp
pusha
mov
cli
imul
xchg
aam
ss
adc
xor
das
jbe
mov
dec
push
jmp
xchg
push
or
ja
push
inc
push
push
push
cmp
jge
ds
mov
lds
stc
cmp
sub
rcl
ret
fmull
sahf
xchg
ficoml
shrl
mov
or
or
xor
and
jecxz
lea
jle
sbb
mov
xchg
pop
inc
punpcklwd
mov
push
or
jge,pn
lcall
adc
mov
push
rcll
mov
push
es
jno
cmpb
add
or
mov
fistpl
add
jbe
loop
xor
sbb
pop
int
mov
sub
fldcw
loopne
jmp
push
push
jno
pop
sbb
push
mov
cmp
popf
pop
repz
pop
push
xchg
test
inc
jno
xchg
js
inc
mulps
dec
nop
mov
pop
push
cmp
mov
jbe
loope
outsb
mov
inc
adc
pop
ret
loop
out
sbb
or
movsl
imull
ja
sub
sar
int3
es
outsb
sub
enter
outsb
imul
sbb
cmp
jae
jp
add
push
jnp
sbb
cmp
call
xchg
filds
inc
mov
sub
loop
fs
decl
outsb
xchg
inc
inc
cmp
jnp
pop
addr16
adc
inc
or
inc
or
lds
add
lods
xlat
std
sbb
jnp
xchg
gs
mov
xor
idiv
repnz
push
push
lea
mov
pop
cmc
fdivr
movsl
fsts
das
ret
dec
ljmp
inc
adc
sbb
mov
xor
mov
and
shrb
xor
mov
xor
cld
pop
loopne
subl
push
sahf
loopne
cmp
xor
push
add
inc
push
sub
frstor
adc
pop
ljmp
or
sbb
cmpsb
dec
cmp
mov
mov
xor
in
jnp
push
les
inc
lock
sbb
cli
inc
jnp
out
insl
mov
out
rolb
mov
div
jne
outsl
jmp
mov
cli
or
cmp
cmp
sub
in
mov
inc
dec
pop
imul
push
push
les
mov
push
jmp
or
sub
hlt
sbbl
mov
jecxz
mov
loopne
call
adc
cmp
push
pop
test
jecxz
dec
popa
jae
lahf
sub
adc
dec
adc
aaa
jecxz
pusha
cld
push
pop
fs
into
loope
inc
iret
xor
mov
sbb
call
push
pop
popa
add
xchg
pfcmpeq
mov
outsb
mov
inc
repnz
mov
aas
fcomi
push
pop
mov
stos
sti
push
loopne
lea
jp
fstl
insb
fwait
mov
add
xor
adc
repnz
xchg
aam
inc
repnz
sbb
and
mov
dec
out
mov
aas
roll
push
xor
in
lcall
out
mulb
lahf
sbb
repz
pop
imul
pop
xor
push
dec
push
mov
adc
and
cmp
add
mov
das
popf
lds
in
mov
inc
addr16
dec
mov
stos
inc
call
call
insb
lds
mov
lods
pop
add
add
cmpsl
and
repnz
lret
dec
sbb
pop
sub
jecxz
xor
mov
shrl
jmp
adc
cmc
dec
sbb
pop
cmpsl
xchg
cmp
cmpsb
and
mov
xchg
xor
and
mov
push
das
pop
mov
out
mov
jno
adc
jo
andb
fldenv
pop
jmp
cmc
xchg
fs
daa
mov
adc
call
dec
pushf
shll
dec
shl
xchg
clc
cmp
cli
out
mov
sub
sbb
pop
xor
mov
pusha
and
or
add
lds
int3
pusha
add
add
xor
cld
xor
cmpsl
mov
pop
roll
dec
dec
or
lock
mov
lods
or
push
fmuls
xchg
je
cmp
jo
jl
inc
mov
movsb
lcall
or
push
movsl
pop
push
cmp
inc
push
sbb
cmp
mov
out
iret
clc
repnz
sbb
push
jp
or
dec
xchg
mov
add
inc
or
daa
insb
ret
mov
jb
sbb
sub
sahf
sbb
test
cltd
fstp
test
sub
je
mov
fs
dec
test
rcrb
xor
or
xchg
xor
push
lret
ret
sub
scas
dec
neg
xor
in
mov
ror
mov
mov
ja
test
xchg
lahf
sub
movsb
pop
dec
jg
movsb
adc
sbb
push
divps
cwtl
nop
dec
dec
jo
jl
mov
cmp
fadds
or
pop
jecxz
int
xchg
and
mov
aas
loop
jmp
leave
popa
out
push
cs
adc
push
arpl
add
push
inc
sub
insb
and
adc
adc
mov
cmc
js
xlat
movl
mov
inc
dec
adc
cwtl
insl
mov
lds
push
loope
fcmovne
in
cmp
xor
cwtl
adc
insl
and
xorl
mov
xor
int3
rol
aad
cs
jecxz
es
test
lods
mov
mov
xchg
ret
and
call
pop
add
adc
mov
or
imul
repnz
popf
sub
ja
fidivrs
out
mov
push
xchg
xchg
add
fcomps
imul
xor
stos
mov
dec
lds
dec
mov
sub
imul
push
dec
ja
mov
sbb
subl
loop
mov
pop
arpl
call
rorl
cmp
inc
mov
pushf
adc
pop
aas
fldcw
mov
or
filds
imul
dec
or
adc
sub
pop
add
rclb
jne
stos
lcall
add
pop
sbb
sarb
push
pushf
mov
rolb
jmp
and
mov
loopne
add
pop
mov
insl
icebp
xchg
mov
mov
mov
push
pushf
sbb
jmp
and
xor
ljmp
loopne
fsubs
inc
rcr
pop
std
dec
mov
movsl
dec
fucom
dec
sub
add
jmp
jmp
lret
cmp
repz
hlt
xchg
jg
ret
test
ds
fisubrs
cwtl
sub
popa
cld
fnsave
mov
dec
mov
jno
cmpsb
mov
pop
mov
shll
and
push
mov
stos
idiv
pop
mov
and
aam
sub
sti
inc
fs
push
mov
or
loope
rcrb
pop
mov
add
sti
ret
cwtl
sub
mov
xlat
in
push
mov
sbb
pop
adc
push
xchg
lods
lods
jg
inc
cmp
cmp
cmpsb
pop
mov
mov
test
jle
push
add
in
fisubrl
push
cmp
mov
mov
stc
lahf
loopne
out
ret
gs
les
mov
movsb
bound
xchg
push
loope
shll
fs
sub
inc
loope,pt
cmp
sbb
xor
inc
inc
push
push
imul
mov
jns
add
lea
xchg
cmp
fucom
pop
test
jb
xchg
aaa
dec
imul
insl
fs
cmp
shll
lret
cli
rcrl
xor
int3
push
ret
sbb
xor
dec
gs
fwait
iret
aaa
shlb
push
pop
add
rcrb
cwtl
or
jo
js
ret
cmc
arpl
cmp
inc
xchg
addr16
xor
in
stos
imul
clc
push
icebp
decl
jge
dec
pop
insl
lea
jecxz
mov
mov
mov
and
arpl
jle
roll
rcrl
mov
lret
xchg
stc
divb
popa
scas
xchg
scas
in
test
jmp
sbb
xchg
mov
int3
and
test
pop
out
in
cwtl
in
xchg
adc
out
jno
pusha
jns
lods
pushf
je
cmp
adcl
clc
lock
add
or
adc
or
out
mov
push
pop
mov
scas
push
repz
mov
daa
cs
inc
lods
movsl
add
inc
gs
mov
pop
fmul
or
xor
jecxz
lock
int
rorl
cmc
ljmp
adcb
dec
mov
pusha
xchg
jmp
lods
ss
dec
xchg
jo
xchg
push
hlt
xlat
dec
sub
loop
std
aas
jmp
xchg
int3
es
push
scas
pop
aam
popf
fistpll
xor
pop
movsb
jl
xor
iret
popf
sub
dec
movsl
mov
cmp
sbb
jge
repnz
push
ljmp
cmp
pushf
sub
clc
cmp
in
cmpl
mov
jp
adc
shl
iret
xchg
inc
jns
inc
out
shr
jnp
pop
clc
sbb
dec
nop
lcall
mov
sub
insl
dec
lods
dec
addr16
cmp
jb
push
pop
test
push
xchg
bound
sbb
push
pop
stos
add
add
ret
fsubl
in
mov
push
aaa
adc
jmp
adc
inc
fistl
push
sahf
adc
jp
sbbl
pop
and
rorb
clc
es
cmp
loopne
fldt
frstor
sbb
sub
fsts
sub
mov
xor
dec
loop
inc
sbb
es
xor
fsub
in
jg
mov
push
pop
enter
mov
inc
shl
int3
jnp
xchg
inc
and
cld
fildl
mov
stos
xor
pop
xchg
imul
vmovsd
adc
pop
ja
push
js
fcoms
adc
adc
sbb
xchg
pushf
cmpsb
repnz
js
das
xchg
aas
xor
cmp
or
scas
push
movsl
cmp
cmpl
ror
dec
movsb
jae
cmp
jne
test
sbb
cmp
lods
in
mov
lret
fmull
push
or
rolb
clc
sub
xchg
std
push
bound
mov
int
sub
xor
fisttpll
xor
clc
and
sbb
add
xchg
jge
cmp
push
push
and
inc
mov
dec
sbb
imul
xchg
cli
lods
add
adc
leave
mov
hlt
cmpsb
iret
fdivs
outsb
mov
fwait
cmp
call
xor
dec
push
bound
and
or
jae
sbb
mov
fsubl
xchg
dec
iret
push
fisttpll
pusha
imull
std
or
add
mov
mov
pop
and
fcmovnu
fisubs
shlb
cmp
gs
adc
lret
jmp
add
sti
adc
inc
pop
ss
sub
loope
leave
arpl
inc
push
mov
mov
inc
mov
dec
fwait
ss
pusha
pushf
les
rorb
xor
add
movsb
mov
sbb
ret
pop
call
lock
test
or
lahf
pop
mov
in
mov
mov
lahf
xchg
dec
cmp
imul
and
sub
int
or
das
ljmp
arpl
mov
es
mov
daa
test
rcll
adc
inc
push
xorb
stc
sbb
jmp
aad
and
mov
das
and
jo
or
sti
lods
loope
inc
in
add
mov
stos
or
dec
jae
cmp
cltd
fldpi
lods
xchg
xchg
out
fisttps
pop
out
inc
xchg
movsl
push
mov
in
mov
insb
push
and
in
mov
in
and
lret
push
roll
test
pop
adc
ffreep
push
add
imul
fstl
popa
mov
cmp
dec
pop
mov
mov
sbb
mov
xor
ja
shr
sub
jg
cmp
fwait
testb
push
movsl
jb
jmp
mov
jl
int
std
dec
sub
mov
mov
mov
loopne
xchg
shrb
xor
dec
dec
sub
outsb
cli
js,pn
movsl
pop
scas
into
jmp
jge
ret
iret
mov
xor
in
mov
fs
cmpsb
in
inc
imul
pop
cmp
xlat
pop
std
shl
loop
icebp
lcall
rcrl
cmp
xchg
xchg
jne
and
push
sbb
and
mov
bound
adc
or
in
jge
add
hlt
pop
out
xor
test
xchg
xor
cwtl
fisubl
sbb
insl
push
or
hlt
test
mov
das
shll
in
xor
dec
and
sub
in
in
cmp
cmp
push
pushf
iret
cmpsl
test
push
notl
and
mov
repz
jecxz
repz
sbb
push
aad
imul
lcall
test
aam
sets
add
ret
shlb
xor
and
mov
fadd
loopne
inc
cmc
fbld
sbb
xchg
nop
mov
and
mov
mov
pushf
fmull
xor
push
xchg
xor
jno
mov
arpl
sub
roll
movsl
dec
fcoms
push
xchg
mov
outsb
xor
repz
movsl
fcmovne
adc
pop
push
sub
sti
stos
clc
leave
stos
jb
aad
in
ds
outsb
repz
xchg
cwtl
pop
jp
loope
sub
jecxz
push
xchg
bound
arpl
add
sub
jbe
movsb
push
xchg
fwait
jns
shl
jle
notb
jg
shlb
cmp
cmp
subl
lods
cwtl
xchg
pop
inc
push
jnp
cs
repnz
pop
sbb
sbb
shrb
clc
xchg
push
dec
xor
mov
sub
mov
gs
dec
mov
test
fstps
cld
xor
adc
sub
sbb
dec
dec
push
iret
jno
idivb
jle
stc
dec
inc
scas
jo
push
mov
jae
cmp
jns
adc
cmp
es
inc
insb
frstor
pop
jo
rorl
test
adc
jnp
mov
ljmp
int
mov
sub
push
mov
sub
inc
repnz
push
les
adc
sbb
inc
mov
mov
xor
xor
lods
out
out
sbb
in
push
add
mov
mov
lret
stos
sbb
push
popa
lods
pop
sbb
sbb
dec
push
popf
scas
mov
push
outsb
iret
dec
xlat
imulb
movsb
dec
lea
mov
sub
aad
das
testb
filds
insl
sbb
xor
cmp
or
inc
jg
adc
sbb
xchg
push
add
dec
cmp
sbb
inc
inc
aas
scas
in
std
aas
or
push
rol
sub
test
into
jnp
mov
loop
ret
jg
scas
in
outsl
sbb
jae
mov
fwait
xor
std
or
popf
push
dec
mov
jmp
xchg
and
jo
lds
sbb
cmpsl
inc
cmp
call
push
fldlg2
decl
xor
inc
stos
jle
mov
out
fistpll
lods
shlb
mov
jmp
cmp
daa
pop
jecxz
std
cmp
imul
outsl
sub
nop
icebp
rep
xlat
jae
or
pusha
aam
mov
push
out
test
mov
fistl
ret
ljmp
mov
inc
and
inc
xchg
nop
cmpsl
and
in
mov
and
and
int3
push
inc
lcall
or
test
decl
test
lock
je
xchg
xchg
std
cli
setnp
insl
jge
pushf
popa
xchg
mov
data16
sub
imul
hlt
pop
fists
jl
lretw
push
jnp
test
mov
aad
adcb
jecxz
jl
jae
call
loop
pop
in
mov
icebp
dec
clc
fidivs
aaa
mov
mov
popa
mov
lods
sbb
push
adc
mov
jns
cwtl
fidivrl
arpl
sub
shll
loope
aaa
aam
shll
push
xlat
xor
adc
mov
sbb
inc
xchg
dec
ss
fwait
and
mov
call
jbe
scas
sub
pop
je
pop
scas
hlt
mov
inc
cwtl
rolb
mov
pop
int3
popf
popa
xor
adc
rcrl
jecxz
or
pop
std
aam
mov
jge
push
mov
xchg
cmp
mov
ret
mov
cmp
int
mov
pop
enter
adc
jae
das
xor
das
adc
adc
pop
cmp
add
or
adc
mov
push
or
push
rcrb
push
jo
mov
mov
out
push
dec
mov
add
stos
push
push
rcr
xor
xchg
es
adc
adc
imul
fadd
ret
pop
outsl
sub
cmpsb
clc
mov
test
in
ja
add
and
fldenv
and
jg
dec
aaa
pop
mov
jae
pusha
sub
pop
push
les
int3
jae
out
insb
hlt
stos
mov
lea
out
and
repnz
mov
lods
adc
repnz
shll
xchg
cmp
adc
mov
mov
sti
ret
call
adc
nop
inc
sub
add
popa
jbe
sub
push
push
mov
push
lcall
cmpsl
xchg
push
push
sbb
jle
mov
popa
lret
stos
xor
fcoms
pop
cwtl
dec
je
jns
mov
push
shlb
xchg
mov
aas
cmp
ret
jp
lret
and
lret
sub
iret
daa
cmp
stos
in
ja
dec
xor
xchg
mov
mov
lret
ss
mov
jne,pn
movsl
mov
shl
sbb
repz
enter
popf
je
pusha
pop
mov
cltd
push
inc
divl
pop
es
lds
or
jmp
sub
lret
push
jnp
or
mov
lcall
out
cli
inc
push
sti
sbb
mov
in
jo
pop
mov
pop
daa
dec
ss
jo
mov
jnp
cld
arpl
addr16
std
lods
mov
pop
cmpsb
jl
mov
or
adc
out
cwtl
sub
popa
cmpl
lds
cld
adc
add
mov
fidivrl
call
dec
aad
adc
push
push
mov
sbb
insl
test
mov
ret
mov
jae
popa
mov
ret
mov
or
rclb
jns
mov
hlt
gs
push
and
sub
mov
in
fnstcw
inc
sbb
cmovg
leave
push
cmc
push
das
push
outsb
mov
mov
rcl
cmpsl
jl
xchg
add
std
cld
shl
outsb
xchg
ffreep
daa
jbe
xchg
sbb
dec
gs
out
sbb
mov
lods
cmp
pop
data16
dec
inc
loopne
in
jecxz
or
cmpsb
jne
gs
leave
or
repz
lret
rclb
aas
xchg
xchg
jo
mov
aam
adc
pushl
stc
push
mov
cmp
mov
shrb
mov
xor
test
mov
add
pop
in
sub
push
imul
mov
int3
jae
ret
mov
xchg
fidivs
push
push
jmp
iret
rclb
adcb
into
mov
sub
mov
or
aad
in
jb
stos
xchg
shlb
jnp
pop
fadd
loopne
iret
dec
mov
out
jae
js
xor
mov
addr16
dec
xor
sbb
in
xchg
cld
fcomps
repnz
add
lahf
mov
mov
inc
dec
jl
mov
nop
jo
in
jp
roll
inc
or
sahf
int
call
out
mov
sbb
jl
hlt
pop
jbe
and
cld
ret
jle
and
xchg
insb
popa
in
cmc
test
ljmp
lds
pushf
pop
xlat
mov
xor
in
pop
or
fimuls
push
dec
pop
jns
test
repz
jne
das
nop
mov
jo
lret
icebp
sbb
sub
dec
test
sbb
jbe
inc
push
mov
inc
test
or
ret
cmp
faddl
ss
push
cs
ret
lods
cmp
xchg
outsb
cld
jae
aam
in
leave
pop
cmp
stos
mov
rclb
cmp
pop
cmpsl
cmpsb
push
xor
std
repnz
sti
push
mov
push
xor
xchg
pop
or
pop
stc
sbb
add
insl
cltd
adc
movsb
mov
ds
add
idivb
insb
sub
lahf
mov
mov
adc
dec
ud0
es
xchg
sarb
enter
mov
pop
mov
data16
fstps
frstor
or
js
test
scas
arpl
cmpsb
imul
jmp
adc
mov
ja
mov
push
iret
jle
mov
daa
xor
es
in
ljmp
rcrl
adc
test
imul
jmp
xor
data16
mov
cmp
loop
fildl
cld
push
rcrl
cmpsb
aam
mov
fs
xchg
mov
inc
add
adc
in
mov
cmp
stos
faddl
call
xor
mov
mov
xor
in
mov
pusha
xchg
loope
mov
lcall
in
roll
cld
and
or
xchg
xchg
test
leave
mov
pushf
sub
inc
pop
in
out
bound
insl
mov
lar
lea
insb
dec
xchg
inc
cmpsb
pusha
cmp
and
int
js
sar
cmpsl
inc
out
jae
ror
or
sub
nop
data16
je
sbb
insb
iret
jmp
push
cmpl
mov
jl
adc
loopne
or
test
sbb
fsubrl
fwait
pop
add
add
scas
and
xor
aad
pop
je
add
add
xchg
leave
fldl
lret
icebp
pushf
xchg
addr16
mov
mov
jp
hlt
xor
jb
or
ja
test
inc
fwait
sub
pop
in
stos
mov
push
fadd
ljmp
mov
lock
push
and
and
out
xor
jg
sbb
mov
je
mov
lock
mov
ja
out
mov
mov
cmp
shlb
arpl
js
out
sub
mov
stos
out
pop
das
jo
mov
jno
movsl
xchg
int3
lahf
pusha
mov
test
lods
test
cmc
es
mov
xchg
cs
daa
xor
push
or
movsb
push
mov
jbe
les
subb
sbb
nop
scas
xchg
mov
negl
cli
stos
dec
mov
adc
jnp
jo
jge
xlat
addr16
inc
call
xchg
mov
pop
std
sub
addr16
jp
and
sub
mov
int3
jmp
mov
stc
fs
popf
jnp
rorl
repnz
push
and
jae
test
adc
mov
repz
mov
fs
mov
daa
sbb
mov
movb
pushf
ss
inc
aam
xchg
leave
xchg
or
int
aad
nop
popf
out
xor
jo
sub
lahf
mov
adc
jl
dec
xor
loope
stos
popa
cmp
inc
xor
scas
divb
add
test
ljmp
dec
mov
and
lret
or
into
jg
mov
rorb
mov
cmp
lock
pop
rclb
pop
mov
sbb
dec
call
je
pop
mov
mov
push
test
pop
mov
aad
pop
pop
popf
test
jbe
sub
push
fs
xchg
push
push
aas
add
ret
popa
lret
push
mov
xchg
sub
push
bound
mov
imul
clc
ret
movl
int3
or
test
icebp
test
cld
sahf
stos
ja
aam
popa
lahf
sbb
jge
popf
in
sub
sbbb
xchg
pop
pop
add
cltd
dec
lcall
adc
gs
jnp
cmpsb
insb
negb
jecxz
fsubs
popf
in
inc
jl
frstor
ljmp
cmp
add
ret
add
sbb
jns
add
ret
fisttps
and
xchg
adc
js
ffreep
sub
lcall
loope
lea
xchg
loop
fisttps
clts
xor
dec
mov
push
xchg
cwtl
in
movsb
shll
push
pop
or
mov
jnp
lahf
inc
aam
mull
xchg
addr16
outsl
inc
cld
push
std
dec
jne
push
pop
jnp
jg
pop
std
cltd
ljmp
inc
rcrb
sahf
mov
les
jp
dec
mov
jmp
jbe
daa
mov
std
or
jp
rcrl
pop
push
das
dec
ljmp
orl
cwtl
mov
cmp
imul
and
push
xchg
std
loop
xor
divl
xchg
mov
push
sbb
in
add
scas
ret
xchg
dec
mov
cmpsl
rorb
mov
mov
shll
or
cmc
inc
insb
sub
fcmovnu
dec
or
and
push
dec
lods
sahf
jg
js
push
or
inc
cmp
daa
cmp
sbb
push
test
sbb
pusha
add
pop
xchg
in
insl
iret
push
addr16
xor
popf
sbb
push
lret
cmp
fisttpl
scas
rdmsr
pop
cmp
fbstp
std
jp
adc
jp
test
inc
xor
rclb
aaa
fs
mov
xchg
aam
xchg
mov
movsl
mov
out
cli
scas
filds
inc
shl
mov
in
add
subb
psubusw
jmp
rcll
imulb
aaa
cs
jmp
in
inc
rorl
ret
mov
xor
jnp
aad
or
xorl
push
sub
repz
dec
ret
push
jg
lea
mov
adc
push
cld
sbb
pop
mov
inc
gs
lds
lahf
pushf
in
adc
imul
outsl
lea
sbb
jnp
cmp
sbb
sbb
push
xor
mov
cli
xchg
mov
cmp
pop
insl
jge
mov
dec
or
sub
sub
test
popf
iret
dec
jg
mov
sbb
cmc
mov
cli
lahf
and
mov
loope
leave
imul
ds
jle
int
pushf
jo
lahf
mov
js
lcall
xor
pop
mov
iret
xchg
jmp
test
jecxz
jmp
mov
jb
aam
jle
mov
lods
xchg
mov
imul
sarb
insb
loop
push
scas
lds
xlat
and
jae
mov
in
mov
mov
fcmovnb
xchg
ret
mov
out
cmpsl
mov
inc
jo
mov
notb
loopne
mov
lret
lret
or
mov
or
scas
insb
add
stc
loopne
jl
sub
mov
sbb
mov
sub
jnp
adc
shll
xor
lret
sub
or
test
adc
ds
loopne
pmulhuw
lret
inc
aaa
mov
xor
mov
jg
jae
mov
adc
fimull
arpl
or
mov
and
xchg
testl
dec
rolb
daa
mov
xlat
fisubrl
repz
jae
fs
pusha
ficoms
fdivr
imul
fsubr
rol
cwtl
mov
mov
enter
outsl
idivb
bound
test
fs
rol
xchg
shl
xor
jae
mov
mov
jb
and
push
jg
mov
adc
push
pushf
add
push
testb
incb
pop
xchg
mov
fwait
sarb
int
push
test
xor
cwtl
testb
jge
or
filds
mov
or
pop
xlat
rol
push
xor
out
or
les
sub
pop
jns
sub
add
dec
mov
sbb
imul
jbe
add
insl
sbb
push
inc
sub
inc
inc
out
mov
jle
outsl
or
mov
mov
arpl
jmp
mov
or
push
ja
mov
and
and
in
insl
mov
andl
movsb
mov
and
shll
cli
push
xor
mov
xchg
loope
inc
lods
mov
lock
sub
sub
sub
dec
fidivs
push
repnz
mov
dec
xorl
and
lods
xchg
mov
mov
jae
push
cmc
push
movsb
push
cmp
mov
mov
cs
fwait
pusha
lds
idiv
lahf
push
pop
sti
jbe
cmp
cmp
push
imul
rorl
dec
adc
fnstsw
popl
mov
popf
add
sub
xlat
pop
inc
and
mov
loop
subl
fwait
adc
xor
mov
adc
fwait
sub
push
insl
sbb
dec
sar
ret
jecxz
jne
ffreep
les
xchg
lods
xor
ljmp
push
push
mov
add
sbbb
mov
adc
sbb
icebp
imul
or
es
popf
test
aad
xchg
sub
in
mov
sbb
dec
mov
in
in
dec
add
dec
jae
and
call
out
test
aam
ret
adc
ja
sti
add
mov
call
push
test
push
ud2
icebp
outsb
arpl
into
lods
push
jecxz
fwait
push
xchg
jmp
in
cmp
aam
push
sbb
fadds
push
test
xchg
test
test
xchg
dec
fnsave
gs
clc
int3
pop
fnstenv
adc
xchg
mov
mov
lahf
mov
sub
xor
nop
lahf
bound
stc
sahf
jecxz
inc
bound
scas
imul
pop
cmp
sbb
cltd
or
popa
lahf
xchg
inc
ja
pop
rdpmc
addr16
lcall
loope
jmp
fisttpll
pop
fwait
out
stos
fstps
pop
ljmp
push
or
sbb
stos
mov
insb
jg
aam
gs
xorl
adc
adc
dec
lock
push
jp
pusha
cli
leave
rcr
jecxz
sbb
xchg
xchg
push
pop
jmp
xchg
jne
cmp
int3
mov
inc
cmp
lock
mov
fucomip
insb
xor
and
push
aad
iret
divl
rcll
mov
daa
adc
push
nop
negb
iret
cmpsb
stc
sbb
mov
adc
xchg
pop
push
fsubrl
sbb
inc
loopnew
inc
leave
pop
lods
dec
lahf
std
sbb
xchg
fbstp
pop
push
in
shll
jnp
or
lock
das
inc
stos
dec
inc
pop
aas
fstpt
dec
test
dec
inc
mov
sub
nop
mov
push
sub
xchg
subb
pop
fwait
pushl
daa
or
sub
and
ficompl
push
imul
mov
lea
out
and
pop
pop
and
jnp
test
sti
mov
jmp
ds
adc
mov
jb
jne
sub
notb
or
mov
in
sub
mov
add
mov
xchg
loope
test
nopl
lahf
xchg
xchg
xchg
push
ss
inc
enter
and
icebp
xor
pop
imul
sbb
mov
push
add
mov
cmp
sbb
outsl
jno
mov
std
fcmove
xchg
push
pushf
jge
shrb
and
ficompl
negl
xchg
adc
shll
cmp
sbb
sbb
icebp
inc
mov
and
ja
dec
sbb
xor
int
lcall
cmc
mov
aaa
jae
push
pop
cmp
out
xchg
add
pop
sbb
inc
jne
jb
adc
push
rcll
shll
jne
pop
push
inc
mov
bound
gs
pusha
sub
mov
rolb
mov
loopne
mov
sbb
jp
imul
ja
mov
cmp
sub
mov
push
and
sub
mov
rcrb
cwtl
fcmovne
xor
std
jp
rorb
out
enter
pop
add
or
outsb
ss
stc
xlat
mov
sbb
rcr
push
dec
sbb
xchg
or
jmp
fs
push
push
jno
xchg
out
ja
or
imul
repz
and
mov
in
inc
ret
add
sub
adc
aaa
rcrl
lods
icebp
movsl
mov
mov
push
inc
push
cltd
movsb
lods
cmp
negb
xor
sahf
fwait
lods
repz
and
and
push
leave
mov
and
movsb
adc
imul
xchg
sar
movsl
or
xlat
ret
pop
jo
mov
adc
cmp
pop
sbb
jb
or
adc
scas
jecxz
push
mov
test
iret
jo
push
mov
xchg
push
xor
mov
adc
cmp
call
sbb
mov
cltd
sbb
or
les
and
ret
sbb
jb
cmp
adc
adc
iret
mov
and
pop
xchg
and
pop
std
lds
pop
xchg
sbb
inc
insb
hlt
jno
test
in
sub
mov
fwait
stos
dec
mov
dec
dec
loopne
test
mov
cmp
cld
arpl
add
and
xchg
ljmp
mov
sahf
ds
jo
call
test
iret
sbb
push
xchg
dec
ss
es
in
mov
ja
add
xor
xchg
loop
mov
jmp
int
cmp
mov
cmp
aam
cmp
inc
or
jo
fidivl
sub
xor
fcmovnbe
cltd
jecxz
js
inc
inc
xor
loop
incb
mov
xor
lret
out
lcall
and
push
lds
out
lcall
mov
cmp
push
sbbl
sub
cld
xchg
repz
mov
sbb
and
mov
jl
inc
push
enter
sub
cs
pop
test
sbbb
cmp
and
push
sti
lock
jnp
hlt
mov
fcompl
jle
ss
in
jno
xor
dec
add
js
cmp
mov
add
pop
cmp
fisubs
dec
add
setbe
sub
fistl
sbb
out
icebp
inc
rcrl
popf
aas
or
pop
iret
rcrl
cmp
mov
dec
mov
lahf
xlat
call
bound
mov
add
xchg
adc
leave
cli
fidivs
test
and
sbb
insb
imulb
cmp
aaa
int3
stos
dec
shl
xor
popl
push
test
pop
inc
and
sub
push
adc
daa
repz
mov
lret
fstpl
push
js
fcmovnbe
mov
inc
mov
and
lret
xchg
call
fdivr
mov
dec
mov
test
icebp
aaa
idivb
cmp
lods
mov
mov
cmp
jb
outsb
and
dec
pop
cwtl
push
cli
roll
jp
mov
adc
jecxz
popf
pop
test
push
sbbl
icebp
mov
daa
insb
dec
xchg
cs
cwtl
jae
push
and
enter
jnp
xchg
adcb
inc
pop
jno
cmp
and
je
mov
mov
decl
or
popf
mov
push
dec
insb
mov
mov
rorl
jle
jle
and
fs
pusha
in
lret
sbb
pop
fidivrs
pop
vmread
push
jg
push
add
aad
cmp
pop
je
insb
xchg
lahf
jmp
in
lcall
dec
sub
adc
repnz
inc
movb
pushf
push
es
cmp
xor
push
imull
dec
daa
ja
mov
or
adc
sarl
hlt
mov
and
jl
scas
sub
or
imull
cli
push
fwait
push
cmp
ljmp
test
cmp
jmp
add
bound
or
rcll
scas
popa
sbb
cli
notb
in
les
gs
mov
in
out
insb
aam
jge
inc
adc
insl
add
in
cmc
cld
pop
inc
pop
cmp
pop
stos
adc
aam
loope
push
sub
or
cmp
pushf
push
add
or
out
push
sub
add
adc
mov
out
pop
dec
imul
mov
enter
aas
hlt
mov
xchg
push
or
pop
mov
pop
push
push
hlt
frstor
mov
in
fadds
outsl
mov
add
negb
repnz
mov
inc
inc
out
aam
scas
inc
push
ljmp
lock
add
xor
mov
sarl
das
mov
ljmp
mov
jae
and
das
xchg
test
xor
lods
adc
ret
xor
xor
imul
jmp
loop
mov
arpl
inc
mov
jne
xor
jl
sub
push
fsubrl
cli
mov
jb
fiadds
push
inc
nop
std
stos
test
scas
xchg
lock
test
adc
sbb
mov
and
loop
divl
or
jp
jecxz
mov
mov
daa
je
xchg
mov
gs
inc
out
mov
es
mov
adc
and
shrb
lahf
loopne
loopne
push
adc
mov
xchg
pop
push
push
es
in
and
pop
sbb
into
out
sub
mov
mov
pushf
decb
shrl
sub
clc
iret
and
push
int
sbb
adc
outsl
daa
lods
stc
push
mov
stos
or
fsubl
mov
iret
cmc
jne
xlat
rorl
xchg
and
sbb
cmp
cltd
ret
cmpsl
mov
xor
mov
add
xchg
addr16
push
adc
jae
leave
xchg
mov
adc
std
push
xchg
fs
cmp
sub
mov
xor
xchg
rcl
insl
popf
cmp
cld
add
push
clc
fnstsw
inc
repz
shll
jge
rcll
fdecstp
mov
scas
aaa
pop
pop
mov
jecxz,pt
inc
pop
mov
sahf
jb
or
ficomps
add
dec
xor
bound
fists
xchg
rcrl
fs
sbb
adc
fcmovnbe
add
repz
ret
and
fnstenv
push
add
sbb
in
mov
cltd
cwtl
lods
push
xchg
sub
cmpsb
stos
xor
leave
cmp
mov
out
out
ja
out
sbb
scas
pusha
or
bound
lds
xor
sub
ret
aam
push
shll
xchg
lret
test
int
sbb
lcall
sar
sahf
repnz
sub
jecxz
in
vmaxsd
cmp
int3
sbbb
fsub
inc
cld
cmpsb
dec
mov
out
sbb
pop
adc
nop
pop
mov
mov
aas
movsl
inc
mov
mov
in
fs
repz
negb
insl
jne
insb
stos
loop
rcrb
mov
adc
xor
fldt
xor
or
call
jg
pop
add
add
pushf
out
adc
in
push
xor
adc
xor
out
add
sbb
shll
daa
mov
push
push
scas
addb
addl
mov
andb
add
mov
sbb
mov
aam
jns
testl
dec
ja
pop
pop
pop
adc
lcall
and
or
fsts
arpl
xor
add
adc
pushw
sbb
stc
outsb
dec
fcompl
sub
and
jl
jge
sahf
mov
dec
iret
push
inc
sti
rcll
dec
mov
rcll
test
cmp
int
popa
xor
into
loop
insl
cli
cmp
push
xor
mov
dec
sbb
push
mov
movsl
ss
jne
inc
push
lods
ljmp
sti
push
cmp
jp
bound
jns
adc
push
pop
sti
mov
fdivp
and
mov
cs
sub
inc
cmp
and
shrl
adc
add
mov
jmp
xchg
pop
mulb
sbb
rorb
in
xchg
jns
xchg
or
add
cmp
cmpsl
jns
fnsave
sub
xchg
sbb
in
cmp
jg
cmp
lahf
adc
lods
cs
in
push
dec
out
popa
jo
data16
dec
loop
jae
push
out
mov
add
lods
cmc
icebp
jl
push
xchg
js
mov
adcl
mov
inc
cmpsb
dec
xchg
pop
mov
push
inc
into
test
inc
jno
test
into
sub
push
fildll
clc
cmp
cmp
movsb
insb
jge
xchg
pusha
test
or
rclb
rclb
sti
sub
jle
cld
push
imul
push
mov
data16
std
dec
sar
jl
stos
mov
mov
xchg
ljmp
xchg
repnz
mov
jo
leave
cmp
push
outsl
fildl
and
push
inc
lods
cmp
cmp
mov
arpl
xchg
adc
int3
lret
out
and
lock
cmpsb
cmp
lock
mul
xor
imull
orb
jp
inc
out
jmp
add
dec
les
jb
jns
psubsb
dec
push
lret
xchg
sub
or
add
aad
pop
ljmp
testb
cltd
push
rcll
cwtl
scas
popa
js
shlb
or
cld
adc
je
pop
mov
mov
cmpl
in
jecxz
arpl
pmulhw
dec
xor
mul
ret
mov
inc
pusha
and
cmp
jae
daa
sahf
jbe
subl
pop
and
or
push
mov
popa
aaa
fwait
pop
mov
dec
es
jb
mov
mov
ja
or
jmp
cwtl
outsl
pop
cld
inc
lret
ret
jne
adcb
jmp
mov
jl
int3
test
mov
add
shrb
inc
sbbb
pop
push
dec
xor
or
pushf
dec
sbb
mov
mov
adc
mov
fiaddl
pop
faddp
pop
hlt
push
lds
and
jae
push
jns
js
lea
repz
add
add
aaa
enter
loop
shl
rcrl
data16
test
dec
mov
ja
mov
push
and
ficoml
mov
dec
je
xchg
inc
jle
pop
mov
lds
cltd
jnp
xor
xor
jle
mov
jnp
pop
outsl
stc
sti
push
icebp
push
roll
and
push
pop
test
aam
lret
popf
lock
or
outsl
outsl
movsb
or
cmp
icebp
jmp
or
icebp
pop
xor
adc
push
jae
ret
jle
mov
inc
and
mov
ljmp
push
nop
movsl
std
scas
out
and
add
sbb
movsl
add
mov
outsb
push
jl
add
daa
mov
and
cli
lret
mov
xchg
or
push
aas
popf
or
pushl
mov
and
arpl
xchg
popa
inc
mov
roll
dec
pop
adc
inc
lods
stos
je
mov
fs
jg
loopne
pop
scas
test
and
daa
mov
inc
fwait
xchg
adc
xorb
pop
scas
inc
out
cwtl
jno
xor
adc
and
push
adc
jmp
jo
mov
pop
mov
ja
mov
inc
sahf
lods
js
and
scas
shll
inc
stos
outsb
adcl
xchg
das
popa
lcall
imul
sbb
pop
pop
cwtl
inc
ljmp
sbb
mov
dec
lods
fisubrs
push
sti
in
lea
aaa
mov
jmp
push
lds
dec
jle
cwtl
xchg
xor
and
pop
aas
jnp
test
mov
sub
dec
fs
leave
aam
popa
aas
dec
mov
xor
in
fisttpl
cmpsb
mov
repz
mov
or
mov
out
ss
push
hlt
sub
xchg
stc
jbe
or
sbb
out
mov
mov
jno
das
pop
mov
outsb
test
cmp
adc
aad
in
mov
xchg
push
insb
cmp
jns
pop
xchg
ja
mov
dec
adc
dec
cmpsb
mov
divb
jnp
fs
inc
mov
fisubl
test
mov
sbb
inc
pusha
stos
jg
pop
adc
xchg
sub
divl
pop
sahf
mov
sti
lods
sub
sbb
outsb
sti
xchg
add
sbb
xchg
push
mov
add
movsb
nop
push
and
cwtl
xor
push
pop
neg
sti
out
pop
jmp
inc
adc
shr
cmpsl
inc
xchg
pop
sbb
cmpsl
inc
jno
iret
ds
jle
jmp
and
cmp
fstl
mov
dec
jno
enter
je
jle,pn
add
pushf
inc
loopne
out
hlt
xor
mov
push
dec
adc
cmp
test
mov
jne
inc
mov
adc
aaa
sbb
sahf
fsubrs
pop
cltd
shl
xor
xchg
movsb
stc
push
inc
mov
pushf
cs
int3
in
adc
mov
xor
sbb
cld
xchg
les
repnz
and
aaa
es
xchg
adc
push
push
test
lret
lock
cmp
xor
std
adc
int3
outsb
int
cmpsb
mov
adc
and
test
call
push
dec
pop
shlb
jo
xchg
inc
aad
cli
fwait
in
pop
jge
nop
xlat
xor
std
adc
es
test
aas
sarl
or
jge
in
pop
mov
les
pop
push
adc
pop
cmpsl
test
test
lcall
shll
out
out
rolb
in
cld
mov
pushf
icebp
mov
jno
mov
xchg
or
lods
mov
lods
lcall
mov
pop
push
jmp
mov
or
pop
add
scas
ljmp
ret
leave
orl
sub
and
mov
jmp
wrmsr
cs
fmuls
xor
cli
es
mov
je
fcoms
and
insb
mov
icebp
subl
test
lahf
dec
jns
and
orb
push
mov
inc
inc
push
out
inc
dec
mov
daa
cltd
pop
adc
dec
sub
jns
push
out
xchg
call
or
dec
cmp
dec
or
mov
mov
rcrb
iret
push
insb
gs
out
xor
sub
xchg
fildll
push
mov
push
or
jne
addr16
mov
mov
andl
sahf
mov
push
sti
mov
cmpsl
aad
xchg
lret
fcmovnu
data16
mov
cli
mov
repnz
mov
fwait
dec
popl
ss
pop
aam
std
inc
in
inc
push
xchg
cmpsb
mov
pop
dec
sub
mov
mov
jb
call
and
rolb
cmpsl
es
push
cmp
ret
daa
pop
std
scas
in
nop
push
pop
ficoml
jo
in
shlw
push
xor
movsl
or
adc
sub
bound
gs
int3
lcall
add
stos
es
and
push
in
in
jl
and
decb
test
sub
mov
pushf
or
addl
and
and
and
cmpl
faddl
shll
imul
data16
lea
lea
inc
or
loop
test
and
mov
imulb
mov
mov
mov
cmp
and
mov
in
mov
jmp
pushf
and
or
out
cmp
sub
fs
cmp
int
push
lret
movsb
jle
into
xor
out
push
jno
cmp
fs
icebp
lea
lcall
repz
shlb
push
ljmp
jns
adc
mov
sbb
mov
inc
pop
add
dec
sbb
pushf
sbb
aam
push
std
in
pop
push
adc
push
xor
shl
fs
mov
mov
je
adc
jno
pop
mov
daa
xor
jge
xor
jb
mov
jle
lods
sbb
mov
shlb
je
inc
ja
mov
into
lods
pop
inc
int
fs
aad
cld
lock
in
gs
xor
pop
push
out
inc
jmp
push
pop
adc
rorb
dec
mov
lds
mov
shll
sub
jle
xchg
xor
xchg
in
js
pop
dec
jge
lahf
aaa
dec
lds
out
mov
pop
push
sub
decb
in
push
sbb
mov
cmp
arpl
outsl
push
in
xchg
adc
popa
mov
repz
fs
xchg
or
sub
add
jecxz
cmp
adc
sete
iret
in
or
test
lcall
sub
mov
and
jbe
push
iret
sub
sbb
sti
das
mov
fnstenv
fidivrl
push
sub
fstpt
add
or
sub
pop
fcomp
mov
sub
incb
lahf
xlat
clc
mov
lds
arpl
push
out
cmpsb
nop
inc
pop
repnz
jmp
xor
ljmp
or
jns
ljmp
and
fwait
sub
jno
jecxz
mov
mov
test
inc
pop
pop
mov
cltd
push
mov
test
mov
lcall
jle
mov
cwtl
lcall
mov
out
lret
sub
mov
cmp
loop
push
fs
nop
loope
add
int
mov
lret
icebp
push
and
mov
cltd
adc
mov
and
mov
mov
push
pop
icebp
std
mov
mov
cmpsb
fistpll
pushl
adc
push
and
lcall
xchg
cltd
pop
daa
jo
leave
pusha
and
iret
xor
in
or
lret
bnd
stos
stos
insb
rorb
inc
inc
test
out
lods
cmc
xchg
jp
push
sbb
pop
dec
fdivrs
mov
ljmp
inc
sahf
rorl
fstps
lods
sub
pop
pushf
jmp
inc
xchg
mov
cmc
stos
repz
outsl
das
insl
insb
lret
mov
dec
arpl
inc
lock
cs
in
scas
sub
or
stc
mov
inc
jmp
outsb
xchg
push
mov
arpl
xchg
push
out
pop
aad
cld
inc
adcb
sbb
inc
sbb
xor
addr16
adc
xchg
fwait
mov
jne
pop
xchg
xor
fsts
imul
fstps
je
mov
jae
push
ja
loope
push
mov
adcl
jle
jl
hlt
in
mov
nop
flds
adc
lds
gs
add
inc
ret
push
out
xchg
arpl
and
mov
mov
lret
inc
mov
out
lea
mov
bound
mov
mov
jae
jp
fstl
lea
data16
dec
dec
pop
fwait
aad
adc
adc
rcl
xchg
mov
aaa
cmp
aas
repnz
in
dec
mov
divl
nop/reserved
call
push
mov
shlb
sub
inc
fnsave
jne
inc
push
hlt
sub
stc
and
mov
repnz
pop
gs
sub
or
mov
jae
mov
mov
fs
cmp
adc
js
jnp
cmc
mov
shr
cwtl
je
nop
pop
fidivrl
loope
cmpsl
mov
xor
test
scas
cmp
inc
sti
mov
adc
repnz
xchg
mov
icebp
inc
in
push
js
xchg
cmpsl
lods
xchg
mov
sahf
mov
sbb
sarl
mov
xchg
jmp
cmp
push
mov
and
xchg
sub
push
stos
out
dec
dec
gs
cmp
or
shll
decb
inc
in
int3
pop
add
mov
mov
and
pop
dec
pop
out
pop
jmp
pop
sarb
pop
and
push
sti
int
xchg
test
inc
add
jge
call
mov
lock
movl
sbb
mov
xor
pop
into
mov
inc
pop
out
xor
jl
inc
mov
outsb
xor
push
mov
jl
xor
imul
fcompl
in
enter
jmp
pop
mov
scas
push
adc
lods
adc
cld
stc
mov
mov
into
xchg
fbstp
iret
push
push
imul
sbb
mov
ja
push
xor
outsl
inc
sbb
das
xor
jle
xor
sbb
jge
bound
loope
fldcw
in
mov
jp
lods
leave
sub
mov
adc
mov
shr
inc
out
lcall
ret
pop
ljmp
and
inc
and
dec
pop
lds
in
pusha
jo
fisubrl
and
and
lock
stc
leave
sbb
les
lds
dec
clc
jg
and
and
fdivl
sub
pop
mov
sbb
pop
or
inc
ss
pop
push
and
xchg
ret
xchg
lods
and
mov
in
jle
adc
push
fdivr
fists
cmp
sarl
hlt
out
js
xchg
insb
xor
jmp
lret
adc
enter
loope
dec
dec
andb
sbb
jb
imul
fldz
or
mov
jp
dec
loope
jle
or
popf
jb
rcr
adc
aam
push
dec
int
mov
xchg
gs
adc
in
lret
iret
imul
xchg
fwait
adc
jmp
ret
jge
lcall
lods
int
sub
mov
xchg
jbe
pop
push
int
inc
jmp
push
test
xchg
fwait
sbb
repnz
inc
pop
xchg
out
or
xor
mov
add
push
adc
sbb
pushf
mov
xchg
adc
loope
in
inc
iret
xchg
cmp
sub
sbb
push
cmp
lock
add
std
fld1
add
insl
push
rclb
pextrw
jb
mov
pusha
cli
adc
sub
inc
xor
inc
pop
or
sarb
sub
mov
sub
or
shr
push
mov
sarb
or
dec
or
add
repnz
push
cs
cmc
imul
push
and
rcrl
pop
dec
test
xor
pop
adc
outsl
int
cmc
or
mov
pop
cmp
cmpsl
int3
push
push
adcb
xor
int
mov
pop
roll
int3
dec
insb
pop
test
out
mov
cmc
jae
jle
ljmp
dec
js
ds
mov
jl
push
sub
out
test
arpl
push
test
adc
jmp
leave
push
in
pusha
lods
xchg
ret
push
dec
inc
jne
sahf
out
stc
adc
je
subl
lds
adc
cmp
in
addr16
popa
orb
dec
push
cmpsl
dec
jne
mov
popa
jle
mov
scas
mov
repz
enter
aas
add
jecxz
out
int3
ljmp
cwtl
jg
jne
mov
jmp
cmp
mov
jbe,pn
or
inc
push
stc
xor
mov
mov
fcompl
lods
lahf
rolb
push
sbb
and
mov
lahf
pop
mov
inc
mov
sar
mov
or
sub
add
popl
in
cmpsb
mov
out
mov
mov
inc
mov
movsl
std
pop
lods
adc
push
enter
dec
ficoms
fldenv
jle
out
cli
mov
insb
mov
mov
sub
iret
lgs
faddp
roll
ss
jne
hlt
dec
shrl
test
pop
mov
loope
xchg
lock
sub
xchg
movsl
fs
cmp
mov
lcall
cmpsb
xchg
rcrb
aas
movsl
in
andl
rclb
cmpsb
mov
test
jbe
mov
xor
mov
int3
test
fisubs
mov
sahf
lea
addl
jnp
cmp
sub
out
add
pusha
dec
pushl
iret
cmc
hlt
cli
mov
jmp
mov
jns
out
mov
into
filds
pop
in
shll
cmp
xlat
xor
mov
in
add
sub
adc
adc
xchg
sbb
and
lret
pusha
xchg
fisttps
sar
gs
dec
out
add
jle
xor
xchg
mov
mov
ret
mov
sub
jne
lock
mov
out
mov
imul
scas
fnstenv
xor
cmp
call
jno
xlat
push
out
jnp
inc
mov
call
mov
xor
mov
popf
fiadds
jns
mov
ret
icebp
aaa
pop
out
mov
push
dec
lret
cmpb
jge
xchg
das
jns
movsb
test
lret
enter
jne
popa
rorl
mov
sbb
dec
xchg
fdiv
and
or
fnsave
das
stc
mov
jmp
dec
lret
push
dec
adc
sub
inc
dec
je
int
mov
lret
out
andb
and
rorl
test
sbb
push
mov
jl
or
mov
ret
push
in
in
mov
bound
or
push
lods
xlat
mov
aas
imul
push
pop
pop
pop
arpl
add
popa
adc
sbb
das
iret
daa
rorl
data16
mov
lds
lret
test
loope
int3
subl
les
mov
add
aaa
lods
inc
pop
cmp
or
and
mov
add
adc
out
ja
pop
aam
mov
xorb
cwtl
lret
pop
sub
pop
out
push
dec
scas
mov
sub
shll
popa
adc
mov
add
cmp
pop
sahf
xor
push
xor
push
clc
pop
mov
adc
cs
lds
arpl
dec
and
cmp
xchg
into
jns
inc
or
and
push
ds
cltd
icebp
cmpsl
rclb
cmpsb
xchg
inc
push
imul
orb
enter
mov
rcrl
push
add
lcall
cltd
mov
shlb
pusha
adc
fstl
sub
arpl
pop
mov
int3
jnp
pop
test
mov
in
ljmp
sub
or
js
lods
jbe
add
aaa
jle
fisttpll
int3
ficoms
cmpsb
pop
ret
call
fmull
xchg
sub
xchg
cmp
mov
call
lods
push
int
pushf
mov
or
mov
das
fiaddl
xchg
cmpsb
xor
or
or
pop
jge
fcmove
aaa
push
int3
inc
daa
inc
call
xlat
into
mov
aaa
push
dec
ja
dec
rorl
in
mov
mov
mov
rorl
ret
xor
shrl
ja
fmuls
sahf
stc
pop
sbb
stos
cmp
fstl
mov
adc
push
inc
out
ja
inc
mov
pusha
lods
cltd
icebp
or
test
aad
or
out
outsl
jo
in
mov
adc
movsb
mov
pop
outsb
sbb
xchg
mov
lret
sub
inc
rcrb
test
push
add
shl
sub
jp
pop
xchg
xchg
inc
jmp
movsl
jns
inc
add
pushf
inc
imul
mov
out
cmpsl
gs
xchg
pushf
sbb
daa
stos
out
mov
ds
lret
loopne
jne
aad
filds
je
fwait
fs
push
into
mov
inc
jb
movsb
js
jg
or
popf
aam
fwait
xor
frstor
mov
fmuls
sub
jo
inc
mov
mov
dec
insb
pop
insl
inc
or
xchg
pcmpeqb
dec
scas
nop
pushw
test
lret
gs
push
dec
mov
xlat
dec
and
mov
sub
out
pop
repz
fisubl
xchg
dec
mov
das
sub
daa
and
sub
inc
inc
loopne
rcr
push
push
push
ret
es
cmpsb
or
mov
icebp
nop
orb
rcr
in
std
sub
sbb
lock
inc
stos
dec
mov
jo
lea
add
jo
push
ja
mov
sbb
enter
lods
xor
enter
addr16
mov
and
int3
les
mov
and
rolb
cmpsb
jae
loop
sbb
rolb
xor
jp
int3
push
imul
and
in
out
or
push
mov
shrb
cmpsb
mov
inc
xchg
xchg
ss
xchg
es
dec
inc
fwait
cli
lods
gs
stc
lods
dec
xchg
mov
ds
mov
fwait
in
mov
sub
mov
sub
out
push
push
test
pop
add
iret
jle
mov
inc
xchg
cmc
xchg
mov
dec
jmp
int3
ljmp
inc
lods
in
pop
aaa
adc
fwait
mov
fnsave
lods
xlat
gs
sub
cmp
add
movsl
lcall
sbbb
dec
fwait
push
inc
adcb
xchg
and
int
lods
mov
adc
mov
sub
dec
scas
mov
ja
mov
mov
shrb
mov
enter
pushf
sbb
pushf
fidivl
movsb
xchg
dec
cmp
popa
adc
lods
jnp
into
pop
stos
jnp
fs
mov
cli
aam
popa
sub
daa
push
pop
mov
ss
xor
and
jle
add
rep
mov
or
and
push
test
jl
ljmp
mov
push
test
mov
mov
test
mov
into
das
and
in
mov
lds
add
dec
enter
sbb
push
cmpsb
mov
bnd
clc
jmp
int
lcall
cs
dec
je
dec
jp
jo
jb
in
mov
leave
int
iret
scas
lahf
dec
mov
add
jbe
movsb
push
mov
and
mov
hlt
fcoml
pop
mov
jle
iret
cmpsb
pop
std
dec
out
scas
push
sub
add
xor
sub
inc
or
xchg
mov
jge
flds
adc
pop
fstpt
testb
stc
stos
push
jbe
rolb
addr16
mov
pop
sub
lret
xor
mov
mov
fistps
mov
jle
pusha
sbb
stos
test
cmp
and
cld
sbb
dec
xlat
mov
gs
imul
cmp
daa
jecxz
movsb
mul
shll
mov
scas
jle
push
jg
ljmp
mov
xchg
dec
lods
sub
mov
jmp
dec
sub
pop
std
addr16
pop
xor
das
shlb
cmp
mov
jbe
xchg
faddl
pop
ret
cmpsb
jmp
cwtl
jb
mov
add
mov
lcall
fs
sbb
jnp
out
jno
loope
mov
jae
repnz
sub
mov
pop
cmp
jg
aas
mov
std
flds
ret
sub
scas
mov
fistpll
mov
sub
dec
xor
pmuludq
cs
or
push
arpl
imul
mov
mov
inc
cmp
test
aas
iret
idivl
mov
fmuls
pop
or
das
inc
add
aaa
jl
sahf
cmc
inc
shll
adc
lcall
div
outsl
sub
xlat
lea
xor
or
push
mov
sbb
stos
pop
addr16
sbb
jns
mov
add
ret
scas
pop
fidivs
outsl
adc
stos
mov
adc
pop
scas
insl
push
add
scas
mov
jp
or
mov
js
cmp
loopne
push
aaa
movsl
enter
test
mov
lret
adc
inc
int
inc
dec
or
cltd
inc
icebp
jl
stos
rol
je
mov
jne
push
mov
dec
js
push
xor
lods
arpl
or
dec
xor
lock
pop
fldcw
test
test
mov
inc
fldl
pop
fs
in
or
popa
mov
mov
push
or
out
cmp
dec
ljmp
nop
arpl
outsl
or
mov
ficoms
jecxz
xor
or
inc
adc
sbb
and
loope
mov
xorb
test
push
shrb
sub
ljmp
cli
popl
xor
xlat
int
fcomps
aaa
inc
or
std
shrb
decl
xchg
xchg
dec
pushf
adc
data16
jo
enter
lret
fcom
dec
push
push
push
mov
mov
in
cmc
adc
fmuls
mov
pop
in
jnp
sbb
jo
push
cmp
test
or
imul
cwtl
mov
in
aaa
pop
ljmp
jbe
or
mov
xchg
jns
xchg
sub
pop
or
imul
out
shrb
mov
sbb
repnz
repz
out
movsb
inc
orb
sbb
xor
lock
jg
sub
add
cmp
shlb
dec
add
popa
and
mov
inc
mov
stc
aam
inc
outsl
xlat
pusha
xchg
cmpsb
adc
cs
mov
pop
int3
push
mov
stos
lret
add
scas
mul
mov
jg
and
lods
ret
movsl
mov
mov
lock
mov
js
adc
mov
lcall
lds
adc
mov
cmc
aaa
je
sbb
call
sub
xchg
enter
xchg
sub
lds
fsubrp
in
lods
les
sti
daa
outsl
adcl
femms
inc
push
and
push
test
int
test
fiaddl
inc
push
sahf
adc
or
sahf
push
enter
push
lret
sbb
es
mov
aam
fcmovnbe
mov
scas
jg
sbb
ss
icebp
fdivl
mov
or
fucomip
dec
fcomps
or
pop
xchg
sub
out
xor
xor
cmp
cmpl
xor
jl
lea
aad
mov
mov
jb
xor
mov
fs
add
in
jp
lea
je
sub
mov
dec
jmp
mov
call
push
sub
cli
leave
call
mov
inc
clc
sub
ss
pop
addr16
adc
sbb
test
fistpll
or
sub
in
lret
jnp
movsb
ficompl
sub
or
sub
pop
lea
dec
mov
test
sub
jnp
out
pusha
ds
push
xchg
ret
lea
int
roll
adc
pop
jmp
adc
movsl
push
inc
and
pop
mov
push
jecxz
sbb
loopne
andl
mov
nop
fwait
inc
sub
movl
int3
jb
rclb
and
imul
arpl
jae
es
jbe
mov
rorl
gs
sahf
sub
mov
add
fldcw
jne
inc
dec
dec
and
and
mov
and
mov
mov
addr16
loope
push
dec
add
dec
inc
mov
jno
mov
xchg
cmpsb
adc
xor
push
dec
push
loope
dec
add
addl
aaa
add
or
jmp
cmp
cmp
mov
cmp
orl
sbb
loopne
out
fsubl
mov
sub
movsb
sbb
cmp
mov
leave
mov
call
mov
mov
xchg
hlt
aaa
in
out
pushl
outsl
pop
rcr
pop
imul
dec
mov
loop
jno
sbb
xchg
rolb
mov
mov
dec
test
imul
and
add
xchg
mov
and
cmp
xchg
pop
xlat
and
pop
xor
aas
andl
mov
neg
insl
fsubrl
cld
mov
adc
add
xor
mov
loope
pushf
push
sbb
pop
mov
cmpl
pusha
nop
jo
xor
cmpsb
push
pop
pop
pop
push
outsb
adc
inc
loope
xchg
sbb
sub
test
inc
jg
xor
fcmovbe
fidivrl
pop
adc
gs
shl
ficompl
sub
mov
aam
in
jle
inc
cmpsl
rclb
or
push
xchg
or
inc
mov
rcll
je
push
test
adc
int3
mov
loope
fstl
fidivs
push
in
fwait
mov
stos
sbb
mov
lret
adc
jmp
push
ret
push
xchg
scas
popa
sub
ds
mov
or
jae
stos
jae
or
pop
adc
jns
mov
and
in
or
insb
cwtl
sarb
xchg
int
sub
push
mov
ret
outsb
mov
jle
add
aas
ss
daa
jne
push
push
xchg
jb
cmp
dec
ljmp
add
nop
pop
aaa
pop
fwait
inc
jmp
add
pop
inc
mov
pop
sbb
jo
xchg
inc
inc
lods
movsl
xor
adc
popf
xor
pop
add
in
cmp
jae
dec
sub
fdivs
cmp
mov
out
scas
add
push
push
dec
jp
movsl
lods
fisttps
hlt
inc
dec
pushf
add
fisttpll
adc
lods
xor
sub
int3
popf
addr16
or
mov
scas
jmp
and
sbb
mov
xchg
call
sti
adc
add
add
mov
in
jmp
jl
add
push
int
and
loop
mov
je
outsb
iret
sub
fisubl
ss
aaa
mov
or
in
xchg
sbb
aam
push
hlt
lcall
sbb
mov
in
aaa
pusha
jnp
cmpsb
rdtsc
sti
mov
xchg
lods
push
sbb
push
dec
test
dec
dec
xchg
inc
dec
insl
mov
xor
dec
mov
push
or
mov
jae
nop
push
fwait
cmp
daa
fstpt
stos
xchg
popa
mov
fcmovbe
or
pop
aas
push
movsl
cli
xchg
fmull
dec
pop
js
pop
pop
repz
stos
dec
sbbb
imul
bound
pop
movl
mov
ret
lods
pop
push
popf
mov
xchg
inc
mov
lcall
fistps
fisubs
pop
mov
lret
cltd
add
mov
test
cs
fstpl
jb
lods
jge
cmova
xchg
call
mov
fcompl
test
jno
mov
jne
ret
je
inc
mov
or
sub
andl
or
dec
push
shl
imul
push
xchg
out
xor
adc
push
enter
inc
mov
fs
cwtl
xor
dec
rcll
mov
mov
testb
inc
test
mov
bound
sarb
loopne
xchg
cmp
jecxz
mov
jp
test
adc
xor
aad
insl
hlt
jns
sub
push
scas
loope
push
loopne
ret
push
sub
mov
push
jl
pop
jecxz
and
sahf
fnstenv
adc
mov
xrelease
repnz
sarb
dec
cmc
push
sbb
popf
xor
cld
lcall
shrl
mov
mov
inc
loopne
sub
push
lods
sub
addr16
or
jbe
xlat
mov
outsb
cwtl
fs
xchg
aam
mov
adc
push
mov
jae
cltd
xchg
psadbw
pop
lods
adc
imul
mov
shl
add
sub
push
inc
xlat
pop
sti
call
xchg
sarb
test
loopne
pop
loop
sub
and
mov
jl
jl
dec
xor
outsb
and
leave
mov
mov
jmp
fsubrs
pop
stos
fisttpl
xchg
inc
loop
mov
sarl
iret
cmp
ficoml
popa
andl
inc
push
jo
pusha
cmp
movsb
lds
rolb
sbb
dec
and
aas
fisubrl
jmp
imul
icebp
ror
dec
add
mov
dec
hlt
ftst
mov
aas
push
push
inc
repnz
and
nop
clc
add
sbb
loope
leave
fst
lcall
popf
sbb
lea
inc
es
jae
icebp
dec
push
ffree
pop
out
dec
xor
sbb
fistl
pop
inc
idivb
add
lcall
outsb
cmp
mov
imul
mov
add
xchg
and
mov
lahf
jae
nop
mov
sbb
enter
or
pop
stc
or
imul
jg
add
cli
jae
movsl
jno
mov
movsl
ja
xorl
sbb
cld
jmp
xchg
pop
repz
insl
push
inc
out
jmp
pop
rorb
mov
jmp
xlat
jle
mov
jmp
inc
jl
mov
and
pushf
mov
inc
jmp
stos
stc
lds
sub
lods
cmp
aas
sub
dec
inc
cmpsl
rorb
jg
cs
jle
in
cli
loopne
lds
cmp
jbe
sbb
mov
pop
jne
mov
mov
pop
aam
pushf
dec
xchg
adc
stos
popf
mov
sbb
out
mov
adc
xchg
fwait
out
imul
cs
mov
jns
int
stc
repnz
sbb
lahf
lahf
mov
ds
and
cmpsl
jl
xlat
test
push
int3
sub
push
mov
roll
adc
xchg
mov
gs
pop
pop
lret
dec
insb
mov
ja
faddl
or
insl
lods
or
jecxz
stos
rorl
iret
xchg
or
mov
decl
jne
adc
fwait
into
mov
fdivrs
pop
jmpw
fcomps
xchg
xorl
sti
aas
cmp
sbb
lock
stc
mov
je
pop
cmp
or
rcpps
add
or
aam
cmp
fxtract
fimuls
xor
pop
fwait
adc
cld
shl
xor
xchg
and
mov
in
out
mov
jno
dec
js
icebp
rcl
aam
dec
mov
enter
sbb
data16
in
mov
add
push
mov
aaa
mov
xchg
jg
popa
cmp
mov
loope
sti
sbb
cmp
in
in
in
mov
andl
pop
decb
icebp
rcr
mov
stos
mov
jl
rcrb
cmc
icebp
shlb
or
scas
jb
mov
mov
dec
push
pop
ret
mov
int3
add
shr
xor
push
nop
out
loop
sbb
dec
push
test
rcll
fistpl
cld
stos
adcb
jl
mov
jb
lret
popf
and
xchg
sbb
out
mov
inc
setae
cmpsl
gs
arpl
popf
dec
dec
lahf
dec
or
xchg
fnsave
dec
sub
and
xchg
scas
mov
pop
ljmp
test
pop
push
jge
mov
sti
xchg
jl
hlt
push
add
notl
mov
xor
out
push
data16
movsl
int
std
lret
stos
pop
dec
or
pop
js
mov
pop
dec
jge
cmp
inc
daa
js
std
push
push
mov
mov
add
mov
push
xchg
sahf
stos
inc
pop
aas
xchg
into
cwtl
mov
adc
insl
ret
and
xor
pop
aam
push
sbbl
ror
mov
lods
mov
cs
in
add
cld
lcall
in
xchg
sbb
je
inc
mov
jmp
cmpsb
cli
enter
test
mov
push
xlat
sbb
inc
repnz
loop
ret
ret
mov
fwait
adc
enter
mov
inc
pushf
orb
lret
ds
fisubrl
cmp
cmc
push
push
push
adc
xchg
xorb
inc
shlb
mov
mov
sbb
repz
iret
sub
xor
cwtl
cli
shrb
jno
dec
outsb
out
sbb
dec
popf
sbb
lock
inc
or
outsb
push
add
subl
call
out
insl
mov
daa
stos
jo
outsb
or
shrb
sub
push
into
pop
popf
mov
mov
push
notb
out
pop
insb
lea
pop
add
out
push
addb
xor
mov
mov
sahf
movsb
cmp
push
bound
nop
iret
lds
and
cltd
testb
jp
fs
jne
test
fildll
mov
xchg
cmpsb
mov
cs
cmc
push
xchg
cmp
insl
ret
test
in
imul
sub
das
adc
or
in
lret
aad
mov
xchg
and
xchg
dec
popf
insb
dec
ss
scas
outsb
gs
xor
mov
std
xor
cli
and
push
adc
push
cmc
xor
mov
add
inc
dec
imul
jl
repnz
je
jp
mov
nop
add
outsl
mul
pop
movsl
int3
fmuls
or
mov
jl
add
xchg
lret
cmp
loope
lret
movsb
inc
pop
mov
mov
push
cmpsb
add
or
mov
in
push
loope
dec
call
imul
cmp
cltd
pop
insb
push
mov
pushf
add
mov
xor
lahf
out
es
xor
ret
cld
lods
imul
cltd
nop
scas
mov
adc
cltd
mov
cld
fsubrl
xchg
push
pop
stc
mov
dec
mov
lret
jge
aad
and
push
and
xlat
xchg
movsl
test
es
mov
inc
ror
fnstsw
enter
test
insl
xchg
insb
mov
movsl
push
push
aaa
jp
adc
imul
lods
cmp
cli
add
cmp
mov
sbb
frstor
loope
push
pop
pop
fwait
xor
xchg
push
and
mov
xchg
fsubrl
and
xchg
ljmp
nop
movsl
test
mov
outsl
arpl
and
fcompl
int
add
pop
mov
std
xor
xchg
addl
adc
ja
sbb
fwait
dec
push
and
and
dec
imul
pop
int3
enter
rclb
sub
idiv
nop
pusha
pop
jae
outsl
arpl
jae
and
mov
lods
lods
insb
insl
xor
iret
int
mov
pushf
sarl
mov
mov
mov
xor
inc
xor
jnp
pop
dec
adc
aaa
movsb
fists
dec
jno
mov
cmc
add
and
test
adc
les
jbe
aam
sub
mov
ljmp
test
sti
in
sub
jns
xorb
outsl
aaa
lahf
and
mov
test
xor
cwtl
ljmp
mov
adc
add
pusha
movsb
ljmp
cmc
ds
ss
fwait
jecxz
sbb
ret
flds
jb
mov
push
and
mov
add
jbe
scas
pop
mov
sbb
imul
cmp
je
cmp
or
cmc
push
fldt
push
inc
xchg
jbe
aas
pop
mov
orl
sbb
iret
or
and
out
mov
sub
jmp
pusha
cli
inc
cmpsb
leave
out
push
movsl
std
and
es
movsb
xchg
xchg
das
jbe
pushf
sbb
fldt
cltd
mov
adc
lods
icebp
add
inc
mov
mov
push
decl
push
jns
out
les
and
and
popa
mov
mov
xchg
mov
xchg
mov
rorl
movsl
aas
jae
fsubrs
lods
cli
arpl
test
push
stc
pop
mov
xor
sub
ljmp
ljmp
aam
aas
pop
lods
dec
mov
cmp
outsl
cmc
out
mov
pop
cmpsb
lock
stos
ret
dec
je
fwait
sub
jae
jecxz
push
test
xchg
mov
dec
cmp
int3
out
fsubrl
sub
test
clc
rolb
push
js
adc
cli
sub
xchg
mov
mov
or
or
es
sti
sbb
outsl
push
cli
test
xchg
cs
xchg
jns
mov
xlat
jle
pop
clc
sub
inc
fisttps
mov
insb
leave
xchg
push
xchg
ret
and
ret
cli
in
mov
jmp
mov
imul
inc
in
fld
cs
cld
sbb
test
lret
xlat
js
jl
int3
jle
loope
push
insb
nop
xchg
and
fdivs
jbe
sarl
xor
cmp
jg
inc
mov
push
jbe
xchg
mov
push
in
mov
pop
fistl
test
sub
roll
sbb
and
sarb
pop
jbe
stos
lcall
lahf
jge
jl
loopne
push
cld
mov
mov
popa
fsubl
mov
mov
pushf
mov
icebp
out
adc
sub
cmp
ret
shl
xor
pop
inc
and
mov
push
test
mov
adc
popf
imul
sbb
add
lds
ds
mov
stc
mov
push
daa
in
rcrb
jo
cmp
push
jecxz
and
jns
popa
push
push
xchg
push
jb
js
mov
aas
scas
adc
mov
fnstcw
mov
test
mov
sbb
fnsave
xchg
xchg
ss
sbb
jle
sub
mov
push
or
cmp
cmp
fbstp
jle
jg
or
mov
mulb
nop
inc
push
cwtl
sub
push
jmp
aaa
xchg
mov
je
mov
xchg
push
xor
ss
in
jb
sbb
movsb
jge
cli
movsl
xor
in
nop
push
sbb
inc
xchg
lock
mov
mov
popf
dec
adcb
pop
loope
mov
and
ret
mov
fidivs
sub
stc
test
mov
push
sub
in
and
add
sub
pop
sti
push
mov
mov
mov
es
xchg
or
loopne
sahf
mov
in
arpl
repnz
fs
lret
mov
adc
sbb
fs
xchg
xchg
dec
leave
test
sub
mov
mov
das
jnp
dec
push
jae
push
gs
mov
scas
out
mov
dec
pop
jmp
sub
ficoml
mov
mov
mov
fcmovb
or
iret
mov
dec
cli
sub
int
mov
lahf
rcl
jp
pop
push
xorb
movsl
or
jns
cmp
xchg
inc
inc
dec
jmp
sbb
sarb
fcomps
shll
or
stos
lret
sbb
std
data16
and
xor
lret
es
xchg
mov
pop
sub
call
lcall
add
sub
dec
std
js
int3
push
push
mov
jmp
and
push
aaa
jo
test
push
mov
outsb
cmp
loopne
pop
shrb
sub
shlb
sbb
push
cmp
sbb
mov
int3
push
xchg
fnstsw
shrl
js
out
out
dec
outsl
enter
push
cmpsl
jp
std
enter
int
je
dec
inc
cmp
xchg
gs
jno
cli
xchg
mov
imul
out
inc
outsb
mov
loope
push
adc
mov
jno
xchg
or
stos
inc
sub
mov
jb
aas
sbb
ja
cmp
jle
jp
mov
pop
imul
aad
out
stos
test
cmpsb
cli
xchg
push
jae
test
fs
lret
push
pop
loope
dec
inc
cmp
cmc
push
mov
sbb
loopne
hlt
sahf
cmp
fidivs
test
mov
rolb
lds
push
stos
dec
out
int
mov
push
cmpsl
push
int
mov
xchg
and
sub
inc
clc
lods
out
pop
sub
insb
test
ss
inc
inc
std
out
pop
bound
dec
insb
cmp
inc
test
and
jbe
dec
lods
sbb
cmp
jne
jo
or
xor
mov
das
lcall
inc
xor
iret
sahf
sub
or
sbb
movsb
mov
mov
and
mov
dec
out
jae
aas
mov
sbb
adc
pandn
negl
loopne
adc
dec
out
sub
pop
in
jbe
mov
xchg
dec
pop
js
je
pop
imull
cmpsb
call
iret
mov
sub
arpl
push
outsb
pop
enter
movsb
popf
rcrb
faddl
mov
jg
add
add
icebp
imul
dec
lret
into
stos
pop
nop
mov
test
dec
div
les
out
fsts
and
bnd
cmp
sub
push
nop
icebp
stc
jecxz
push
mov
bound
push
pop
jae
sbb
dec
jno
and
adc
inc
dec
outsb
rcrl
lcall
sbb
subb
dec
cltd
pop
or
and
jns
fistl
fidivrl
mov
and
out
mov
pop
nop
subl
pop
addr16
hlt
insl
outsb
aad
dec
pop
in
and
lds
jae
out
push
inc
jae
push
fildl
lcall
dec
mov
sbb
imul
adc
test
jle
into
cmpsl
sub
dec
xchg
fcomps
fmull
in
mov
es
pusha
pop
aaa
xchg
mov
jo
rcrl
jo
dec
mov
cld
cmovs
fiaddl
and
mov
or
lods
sbb
or
dec
pop
in
jns
or
nop
adcb
xor
and
ljmp
xlat
addr16
push
xchg
dec
nop
adc
or
fistps
xor
mov
inc
adc
push
mov
or
rcrb
outsl
popf
fcmove
pop
adcl
mov
jp
cmp
mov
lds
mov
in
or
pop
insb
movsb
ljmp
sbb
cmp
js
scas
mov
hlt
loope
cmp
iret
shrb
pop
sbb
push
aas
loop
fisttps
mov
mov
loopne
xchg
or
sbb
ret
pop
imul
stc
movsl
dec
jns
xorb
or
jmp
cmc
xchg
adc
pop
fs
cld
mov
inc
mov
arpl
add
pop
testb
stos
push
xor
clc
out
popa
push
fwait
shll
out
arpl
ret
ljmp
test
cwtl
in
ret
dec
cmc
xchg
into
or
mov
pop
mov
cld
mov
and
cmp
jecxz
xor
mov
mov
and
pop
je
or
add
notb
jmp
jg
lock
pushl
add
fmull
xchg
dec
test
popf
mov
stc
out
mov
je
mov
cli
inc
icebp
mov
push
sti
jnp
pop
fsincos
out
cmpsl
js
xor
mov
mov
outsl
mov
sbb
cli
xor
test
jb
lahf
push
add
popf
mov
lcall
je
cmp
scas
pop
add
enter
insl
push
mov
cltd
cmpsl
cmc
es
push
lds
aad
pop
mov
sub
dec
cmpl
xchg
test
nop
adc
into
inc
cwtl
add
sbb
jmp
inc
mov
jbe
inc
inc
or
push
fisubs
mov
dec
iret
fidivrs
lret
repz
test
or
mov
test
out
mov
jo
pinsrw
ret
outsl
jge
in
mov
push
pop
jg
fstl
sub
add
mov
lea
adc
lret
pop
xchg
sbbl
aad
addr16
and
je
push
stc
fdivl
lcall
mov
xchg
loope
pusha
sub
mov
pop
xor
outsb
les
cmp
xor
pop
xor
test
scas
push
mov
fs
loope
loop
jge
and
push
xchg
lret
xor
xor
xchg
adc
cld
pop
rorl
inc
mov
mov
mov
mov
push
daa
mov
pop
stc
sbb
popa
mov
xchg
and
or
mov
ret
clc
outsl
adc
add
ljmp
rorb
pop
mov
push
and
mov
sub
mov
je
xchg
orb
leave
cmp
negb
pop
adc
sub
adc
jl
dec
aas
adc
xlat
jns
sbb
jmp
les
mov
jge
in
shlb
insl
xor
aam
std
in
sub
cmpsl
cmp
pop
movsb
mov
jg
test
mov
push
mov
std
loop
dec
loop
add
xor
cli
pop
shl
mov
adc
leave
jmp
jnp
jne
jle
jno
push
rcrb
jne
sbb
out
xchg
mov
in
inc
clc
and
pop
out
in
push
sub
or
rol
in
xchg
imul
out
push
push
mov
arpl
cmp
dec
enter
nop
pop
mulb
imul
in
mov
sub
lahf
xor
xchg
aaa
xchg
add
test
and
jecxz
and
xchg
cmpsb
test
sahf
aam
adc
into
andb
aam
sarl
mov
xor
or
sub
sub
dec
sti
push
rolb
pop
push
insb
push
push
lods
mov
negb
dec
push
inc
pop
xchg
and
push
mov
push
dec
outsl
mov
call
or
xchg
rcrl
pusha
or
dec
or
push
pop
jecxz
testb
cmpsl
mov
lods
out
outsb
data16
rcrl
add
xor
cwtl
mov
cltd
or
pop
sub
daa
ficoml
notl
xlat
lods
cmc
dec
mov
imulb
pop
out
mov
mov
adc
jmp
into
mov
stos
mov
lods
sti
popf
mov
jns
pop
lahf
push
in
cmp
adc
js
insb
hlt
jb,pn
or
repz
mov
cwtl
lahf
jmp
jle
and
and
loope
inc
sub
scas
xchg
testl
repnz
imulb
inc
scas
jg
aaa
push
test
mov
scas
rorl
xchg
mov
cmpsl
fildl
and
inc
xor
int
mov
je
add
mov
int
push
std
add
rcrb
pushf
sbb
mov
ret
sti
inc
ret
rolb
repnz
fcoms
mov
mov
lea
or
js
clc
daa
loop
pop
sbb
sub
pop
pop
ror
and
out
test
nop
push
xor
lods
xlat
sub
mov
dec
into
mov
mov
jecxz
mov
add
std
push
jp
nop
dec
xchg
push
js
sbb
loope
es
mov
and
add
sub
dec
sub
sub
jp
mov
xchg
cltd
outsl
rclb
or
popa
pop
fildll
test
jb
enter
popa
sub
in
sub
fnclex
test
pop
pushf
sbbl
pop
movsb
ljmp
lds
cltd
add
stos
iret
enter
mov
mov
cmp
push
pop
mov
bound
xlat
xchg
mov
xchg
popf
mov
inc
mov
iret
xor
or
shlb
pop
setb
and
pop
sub
add
test
jb
mov
fldcw
adc
jp
and
hlt
fld
pop
lret
insl
ret
pop
xchg
movsb
loopne
jo
mov
aad
fsts
cs
jne
sbbl
dec
push
add
pop
cmp
and
pop
arpl
shrb
jo
xchg
mov
sahf
inc
aas
mov
add
push
sbb
outsl
data16
fcomip
mov
ja
nop
or
jbe
call
stos
xor
cwtl
or
pop
in
clc
outsl
je
xchg
out
xchg
xchg
pushf
jg
fmulp
fidivl
cmc
add
or
insl
jns
mov
and
movsb
push
imul
movsb
mov
or
dec
xor
pop
fstl
mov
mov
mov
idivl
lea
test
clc
sbb
mov
push
out
or
xor
sbb
stos
xchg
push
loop
ss
je
sahf
lock
shll
add
xor
mov
fmull
dec
inc
lds
cmc
fidivl
inc
push
push
inc
inc
dec
jae
mov
repz
movsl
leave
jp
mov
cmp
hlt
or
inc
xchg
mov
mov
adc
in
imull
mov
out
add
popf
or
into
popa
pusha
gs
sbb
insb
int3
mov
sub
push
and
aas
or
cltd
popf
jno
mov
xchg
stos
ja
inc
lods
fidivrl
mov
addr16
jne
xor
test
fdivrs
dec
jp
jnp
mul
mov
shll
rcrb
mov
icebp
and
cmp
js
rolb
fidivrl
dec
add
jbe
loop
arpl
outsb
dec
int
jl
or
in
mov
repnz
push
rcll
dec
push
push
mov
xor
cltd
or
inc
adc
push
xchg
jne
sbb
les
js
test
or
xor
mov
sbb
jle
lods
pop
inc
mov
negl
and
roll
mov
aas
or
lcall
jbe
sar
test
jle
or
adc
push
pop
ret
lret
mov
xor
mov
jg
std
push
leave
adc
ret
fwait
fwait
popf
push
mov
pop
jle
frstor
or
mov
inc
loopne
inc
sub
mov
nop
in
or
movsb
add
sahf
into
icebp
push
les
adc
fwait
push
push
in
mov
push
xor
stos
dec
cmp
pop
dec
mov
jb
and
xor
clc
xor
es
xlat
pop
aam
add
mov
pop
xor
mov
and
int3
lret
call
and
add
pop
mov
mov
clc
sub
pop
stos
pop
insl
or
cmp
in
xchg
enter
ret
out
inc
fstl
lcall
cmp
add
mov
lret
cli
ficoms
push
bound
and
mov
jle
mov
in
mov
fcmovnu
xchg
push
enter
inc
or
inc
imul
insl
push
enter
or
je
inc
xchg
sub
xor
js
sub
mov
fsubr
lahf
mov
js
ja
ds
movsl
test
xchg
test
scas
inc
mov
fldenv
pop
xor
dec
popf
ss
stos
cmp
jbe
add
or
das
jno
daa
push
arpl
jl
mov
sbb
mov
out
and
dec
mov
dec
in
pop
pop
jbe,pt
call
and
push
cld
lods
lcall
ret
repnz
fwait
xchg
mov
sub
mov
jns
stos
roll
in
cmc
pop
ja
or
std
mov
nop
inc
shll
clc
sub
cmpsl
cs
xchg
incl
sub
sbb
mov
icebp
sub
add
sub
fidivl
adc
xorl
xor
inc
mov
cmc
push
or
push
push
arpl
sub
pop
jne
cmpsl
inc
inc
inc
lret
fidivrs
cmc
xor
in
out
add
jle
jb
add
mov
cld
pop
adc
and
cmp
sbb
add
test
gs
lea
ja
jp
les
push
jle
out
sbb
popa
orl
push
jno
roll
fisttpl
add
or
cmp
adc
mulb
jp
lds
movsl
inc
push
push
xor
fisttpll
push
lahf
mov
sti
mov
push
cmp
pop
ss
cwtl
daa
xor
repz
xor
cmp
in
in
popa
cmp
adcb
in
mov
sbb
lock
mov
aam
into
popa
mov
aad
jmp
test
stos
mov
add
int3
push
push
scas
mov
xchg
adcl
popa
xchg
faddl
mov
xchg
lret
sub
imul
push
cmp
daa
adc
push
andl
clc
xor
cmp
clc
test
ljmp
pop
mov
and
and
push
popf
dec
pop
push
lret
lahf
cmp
rcr
cli
xor
sbb
daa
jp
dec
lret
push
push
popa
cwtl
mov
and
lods
jnp
je
push
adc
or
bnd
jb
out
or
sbbb
push
addl
iret
mov
jmp
icebp
mov
push
jb
insl
aam
push
mov
insl
pop
cwtl
xor
mov
in
sti
push
aaa
sub
sti
mov
adc
sbb
mov
andl
jne
sub
test
pop
repz
fildl
mov
push
lea
loopne
add
push
inc
adc
push
push
jne
jo
lods
pop
pop
pop
mov
mov
pop
mov
inc
ret
iret
pop
or
lahf
add
inc
out
jl
inc
cmp
mov
push
shlb
out
push
or
int3
adc
aas
xchg
mov
rorb
dec
xchg
in
rolb
iret
xchg
shl
adc
and
adc
test
push
lcall
cwtl
pusha
std
std
xchg
cmpsl
cld
mov
jae
push
add
gs
mov
pop
push
mov
inc
lods
shrl
fildll
test
icebp
push
and
out
das
movsl
jmp
push
testl
push
xor
aad
cmpb
inc
dec
mull
adc
scas
ljmp
imulb
jnp
add
inc
inc
or
aam
and
jo
or
fildll
sub
dec
inc
leave
movsb
mov
in
movl
ror
sbb
add
or
mov
pop
int3
aas
adc
mov
loopne
and
sbb
movsb
ds
push
xchg
pop
xchg
filds
or
cmc
cmp
repnz
in
repz
jns
test
or
push
fmuls
jo
dec
fsub
paddb
and
add
les
loopne
test
rolb
test
push
jg
adc
lret
imul
pusha
xor
dec
cmpsl
and
clc
addr16
dec
scas
sbb
and
sahf
sub
xlat
dec
mov
xchg
gs
fstl
pop
inc
sub
lret
fs
push
xchg
xchg
lds
insb
mov
cltd
movsl
or
in
push
xorl
test
mov
scas
push
push
pop
mulb
std
andb
push
inc
loop
lds
adc
jb
int
mov
xor
jo
sub
jp
cmp
lcall
add
mov
xchg
nop
or
fisttps
dec
sub
arpl
lcall
enter
mull
mull
xchg
mov
lcall
lds
shlb
aad
jne,pn
ret
notl
adc
xor
sbb
pop
cli
aad
xor
mov
aam
adc
mov
jmp
adc
pop
pushf
inc
cld
imul
verw
pushl
in
cmp
inc
lock
mov
fs
mov
adc
sarb
stc
jl
int
mov
aad
add
loope
xor
adc
ret
push
jge
xchg
push
cmp
mov
stos
cld
add
aad
out
sbb
in
pop
fcoms
sahf
pop
and
andb
jne
icebp
dec
rol
add
sbb
lret
pop
push
cld
je
ja
pop
or
out
int3
add
std
adcl
pusha
fs
fcmovne
pop
sbb
mov
add
jnp
call
inc
insl
jae
mov
pop
popf
jnp
cmc
sub
sbb
inc
rclb
xor
mov
setb
jle
addr16
fwait
scas
xor
mov
push
aam
mov
mov
movsl
mov
mov
iret
sbb
sbbl
data16
fsubs
jp
sbb
xchg
jb
add
cmp
xadd
xchg
jb
cmp
cmp
scas
pop
or
insb
sub
in
les
ss
nop
sti
mov
aaa
push
cmp
jno
ret
cmp
xchg
xor
repz
add
sub
xchg
cmp
pop
mov
in
scas
aam
adcl
inc
insb
dec
fldl
and
lods
movsbl
adc
fisttpl
fnstsw
adc
mov
jl
movsb
add
aaa
adc
and
adc
mov
out
add
enter
cmpb
mov
mov
and
bound
push
sub
aad
jnp
push
aas
inc
ds
pop
popa
aaa
sar
out
push
add
sub
insl
aaa
mov
push
jg
mov
inc
pop
jmp
xorb
xchg
jp
cmc
lret
pop
adc
stos
jnp
sub
sub
jmp
pop
mov
movsl
and
dec
repnz
mov
mov
enter
mov
insl
pop
in
arpl
jge
pop
bound
repz
repz
ja
lock
mov
xor
sbb
fscale
adc
cmp
icebp
nop
ficoms
mov
loop
adc
arpl
jle
mov
mov
ret
cmp
xchg
in
insl
ror
das
lds
mov
rcrw
stos
sub
setne
hlt
sbb
shrb
imulb
mov
add
jns
push
mov
enter
es
test
jg
mov
addr16
sbb
jno
pop
and
cmp
fldl
mov
adc
enter
loope
lret
ds
popa
sarb
cmp
nop
repz
test
je
fprem
lret
lds
sbb
xchg
in
pop
xchg
inc
mov
inc
jbe
pushf
loopne
xchg
or
ja
mov
sahf
mov
pop
cmp
shlb
xchg
ret
inc
test
pop
mov
dec
mov
ljmp
sub
leave
mov
jno
loopne
std
pop
popf
mov
cmpsb
cmc
movsl
dec
pop
js
mov
push
mov
sub
negl
out
fisttpl
push
add
lods
jbe
cwtl
add
cld
dec
dec
add
xor
pusha
jp
pop
into
lret
scas
loop
icebp
push
sub
mov
arpl
scas
stos
cmp
mov
shr
mov
cwtl
notb
mov
inc
imul
stos
sar
stos
inc
xor
sahf
push
xchg
pusha
sbb
or
jecxz
cltd
mov
imul
push
add
inc
in
push
fistpl
test
jo
xchg
iret
dec
popa
jo
test
mov
outsb
ret
cmp
sti
dec
mov
cmp
frstor
mov
shlb
sbb
push
stc
adc
jle
jge
push
xor
sbb
pop
and
add
adc
cmp
clc
xchg
lods
xorb
mov
push
ret
cmp
or
fistpl
cmpb
or
inc
inc
out
cmp
mulb
frstor
scas
shll
ja
xor
mov
subl
xor
stos
and
fs
ret
cmc
xor
test
aad
mov
pop
cmpsl
mov
dec
fidivrl
adc
sub
xlat
xor
call
xor
xor
ja
mov
mov
out
cmp
sbb
adc
pusha
subb
mov
push
add
out
rcrl
push
sti
mov
hlt
test
and
leave
xor
mov
rclb
xor
fwait
ja
shrb
mov
jl
ljmp
les
push
or
out
xlat
pop
icebp
out
in
roll
rclb
mov
incl
test
jle
pop
pop
int
dec
dec
repz
fstpl
push
jno
leave
sub
xor
sbb
jg
push
adc
out
fwait
mov
or
iret
or
fimuls
sarl
or
jl
out
popa
movsb
mov
into
jae
mov
xchg
jle
rorb
adc
add
test
sub
pop
pop
icebp
je
test
inc
pop
lds
arpl
mov
mov
leave
push
loopne
xor
mov
ds
das
ds
decl
cld
or
mov
adc
sub
dec
mov
mov
lock
out
dec
mov
call
cmpsb
mov
push
mov
call
popf
jecxz
and
mov
ljmp
xor
cmp
mov
aad
cmpsb
push
scas
or
rcrb
mov
sahf
sti
push
dec
and
ficoms
test
jbe
scas
and
or
outsb
cld
dec
sub
rcrl
xor
arpl
mov
int3
cmpsl
or
cmp
int
out
sti
xor
sub
pop
mov
mov
loope
daa
adc
out
xor
dec
mov
jbe
adc
cmp
aad
test
int3
jne
sub
cmp
xor
lea
cli
mov
movsb
int
inc
data16
iret
or
jns
jle
xchg
jae
jp
sbb
ret
clc
mov
scas
and
test
xchg
push
insl
add
pusha
dec
pusha
rcr
lret
loope
pop
ja
sahf
stos
loop
fsubrl
out
pop
bound
shrl
outsb
sbb
xor
adcb
out
mov
je
push
pop
lahf
mov
inc
cltd
xchg
mov
js
add
cmp
imulb
lahf
js
adc
ljmp
xchg
sub
imulb
add
jne
shlb
repnz
mov
sub
pop
sub
and
adc
clc
mov
push
sub
jo
movsl
fldenv
dec
push
mov
sti
aam
dec
add
cmpb
clc
xor
popf
dec
sub
in
jne
push
mov
filds
push
imul
jmp
loop
and
into
sbb
dec
rep
mov
movsl
inc
scas
inc
lods
xor
paddw
lret
popf
xor
hlt
dec
pop
xchg
enter
jae
sbb
js
adc
sbb
out
sub
jle
outsl
cmpsb
pushf
pusha
push
lock
or
mov
es
cmpsl
dec
jo
jl
cmpsl
push
loope
xchg
jne
aaa
bound
mov
mov
lahf
mov
cli
mov
imul
xor
dec
leave
push
jno
push
stos
cmp
mov
iret
jl
sub
and
pop
adcl
xor
repnz
inc
sbb
dec
rcll
out
sbb
lds
insb
insb
into
bound
push
in
test
pmaxsw
fsubrp
jle
push
pop
shrl
mov
pop
movsb
sub
fnstenv
pop
xor
add
ds
pusha
xor
and
jo
pop
inc
jmp
test
mov
lret
addb
in
push
push
mov
sbb
sub
cs
sub
dec
stc
cmp
aam
cmp
fimull
jle
nop
push
xchg
pop
inc
call
ss
mov
mov
movsb
pop
pusha
into
mov
jno
mov
mov
cltd
mov
insl
jbe
test
xor
fstl
xor
mov
and
pop
jnp
stos
mov
cli
daa
iret
incl
cld
add
loope
stos
fwait
out
push
cmpl
dec
push
jmp
inc
and
push
ror
and
adc
clc
jmp
fs
jb
shll
mov
js
jne,pn
and
jmp
lret
lods
mov
das
inc
mov
test
fldt
fstl
adc
aam
xor
mov
lret
add
push
cmp
andb
mov
rol
inc
pop
or
sahf
fdivrl
shlb
pop
push
sti
in
cmp
push
add
and
lcall
sbb
call
cmp
pushf
and
push
nop
pusha
test
pop
insl
std
cmp
lea
out
sbb
das
mov
mov
lds
idivb
xchg
xchg
cwtl
cmpsl
fistps
mov
adc
lock
ret
jns
push
and
sub
mov
or
and
jne
mov
fimull
xchg
fdivrs
xchg
fldcw
mov
repz
fcompl
cmpsb
adc
pop
fstp
lcall
repnz
mov
jg
or
sbbb
stos
pop
mov
pop
push
adcl
push
in
insb
ja
pop
sbb
sub
outsl
stos
push
aad
clc
jno
add
gs
lods
or
and
inc
loop
fnstenv
in
sbb
rorl
outsl
lret
xor
push
and
push
xchg
fisubs
cmp
xor
out
push
in
mov
cs
pop
adc
push
inc
xchg
repz
cmp
and
jbe
call
xchg
cmp
fwait
push
aam
push
jp
push
es
cwtl
xor
jnp
sti
daa
mov
std
jecxz
xchg
pop
mov
ljmp
mov
mov
inc
pop
out
push
stos
mov
xchg
std
insb
push
roll
adc
jl
xchg
xor
fs
mov
das
icebp
jecxz
dec
std
jp
sub
out
inc
inc
loope
jp
xchg
xchg
in
stc
rorb
dec
and
mov
imull
popa
mov
lret
leave
xor
xchg
push
mul
inc
sub
cmc
push
out
jecxz
mov
iret
push
mov
jo
and
ljmp
sub
cmc
xor
fmull
arpl
xchg
scas
xchg
xor
sub
in
das
jbe
jp
mov
pop
dec
dec
push
pushf
out
and
cli
adc
insl
jbe
fnstenv
rolb
adc
cmpsl
filds
and
inc
pand
or
mov
or
loopne
ja
jmp
out
mov
repz
inc
scas
fwait
sbb
gs
add
xchg
adc
lock
dec
mov
pop
sub
mov
rclb
dec
inc
mov
divb
xchg
aaa
mov
xchg
mov
jo
fldl2e
mov
cs
ds
add
je
outsl
ret
xchg
mov
inc
ljmp
mov
mov
test
out
mov
int3
daa
fisubrs
cmp
dec
sbb
cltd
and
or
insl
cmc
jmp
test
test
insb
cmp
lea
cmp
push
lods
repz
adc
push
das
lret
and
xchg
gs
pop
and
fsubrs
notl
add
in
add
lret
pop
mov
jnp
cmpsb
in
or
imul
daa
jo
out
in
out
lea
cltd
sahf
outsl
lret
sbb
pop
pop
out
inc
lahf
and
or
mov
jns
xor
leave
movsl
movsb
cmp
dec
test
gs
das
dec
aam
sbb
and
lahf
lcall
loop
mov
sti
repnz
idivb
repnz
inc
scas
add
inc
sbb
arpl
and
mov
cmp
ret
adc
ldmxcsr
gs
fdivrs
imulb
jb
dec
js
cmp
int3
dec
fistps
jmp
out
xchg
sbb
std
out
call
xchg
or
adc
pop
js
subb
fistpl
ret
pop
hlt
lods
out
xchg
sti
adc
inc
push
mov
sub
lods
xor
xchg
pop
in
mov
mov
leave
or
mov
insb
fbld
pop
add
mov
ja
jp
pop
aad
pop
push
add
fwait
adc
clc
lahf
push
adc
mov
sti
jp
pop
aaa
orb
mov
dec
xchg
ljmp
mov
out
scas
inc
addr16
sbb
mov
lcall
lret
xor
aas
out
out
insl
xor
gs
pop
xchg
repz
icebp
into
leave
jnp
lods
jmp
hlt
fidivrs
inc
mov
leave
jl
imul
je
or
loope
popf
dec
int
and
and
clc
xchg
rorl
ljmp
ljmp
inc
xchg
adc
xchg
stos
dec
cltd
or
idiv
push
aad
mov
sar
sahf
js
push
jae
gs
and
into
mov
push
cmp
dec
push
notl
into
adc
add
pop
xor
aaa
cmpsb
add
lret
outsl
push
in
lcall
mov
mov
call
clc
xor
cmpb
test
sub
dec
xchg
scas
mov
adcl
test
jno
lods
xor
aas
lahf
mov
inc
xchg
outsl
push
pusha
mov
mov
add
clc
pop
popf
xchg
nop
xchg
in
ret
shll
aaa
rclb
inc
inc
inc
adc
dec
push
sahf
outsl
pop
jecxz
cmpsb
or
jo
xchg
aas
cs
inc
fsubl
jmp
pop
and
xchg
mov
xchg
cmp
push
jae
movsl
movsl
dec
mov
nop
add
in
pop
sti
lods
es
cmp
xor
add
aaa
sti
xchg
cmpsb
arpl
rorl
or
insl
mov
mov
adc
cwtl
inc
arpl
xor
dec
xor
adc
push
jp
lock
push
add
aaa
dec
out
fwait
aam
sbbl
jae
repnz
js
mov
mov
mov
dec
push
mull
pop
push
dec
sbbl
inc
xchg
xchg
jo
mov
pop
dec
loop
xchg
lods
mov
mov
std
call
or
fsubrl
dec
push
push
adc
and
shl
pop
testl
stos
mov
sbb
outsl
inc
ja
xor
xchg
sub
in
leave
push
sti
sbb
xor
sti
ret
das
mov
stos
hlt
popa
push
mov
pop
mov
lds
fadds
or
inc
shlb
out
std
outsl
repz
cmp
lock
test
jg
dec
jle
int3
xor
xchg
jbe
cmp
les
lods
test
dec
cli
aam
sbb
sub
call
cmpsl
xor
es
or
and
sbb
fldcw
sub
rcll
mul
test
cs
xchg
add
xchg
add
imul
sbb
into
xlat
xor
cmp
daa
aam
sbb
mov
pop
scas
jb
xchg
lods
sarl
ja
mov
or
xor
test
popa
xor
mov
sbb
inc
pusha
xor
out
mov
int3
adc
mov
rclb
fisubl
ljmp
and
inc
cltd
pop
mov
movsb
mov
and
push
or
push
int
mov
aam
or
and
mov
xchg
add
pop
push
xchg
stc
or
rolb
lods
popa
xchg
push
pop
cld
xlat
in
stos
int3
lock
and
aam
mov
icebp
mov
outsl
stc
push
or
int3
imul
jmp
inc
xor
jge
xchg
push
lret
gs
mov
or
in
inc
lret
ret
push
lods
insb
nop
sarb
jmp
nop
cmp
adc
dec
scas
aam
nop
aam
adc
xor
xor
pushf
sub
out
test
xor
mov
jo
ret
movsb
out
mov
ja
pop
sbb
adc
icebp
inc
iret
orb
in
fs
pusha
cmpsb
je
fbld
in
add
pop
negl
dec
shlb
test
and
mov
mov
cmp
pushl
sbb
repnz
jmp
jnp
pop
adc
aas
pop
iret
int
jl
xor
push
loope
test
fldl2e
mov
mov
or
sub
insl
add
cmp
xchg
lods
push
inc
mov
mov
mov
adc
ret
lock
sub
xorl
fildl
cmpsl
sub
lret
dec
nop
sub
out
xor
and
lea
and
pop
add
insl
push
jbe
jnp
ret
adcb
ret
pop
imul
sti
xchg
cmp
push
lahf
cli
or
enter
testl
sub
cmpl
sub
pop
shll
add
insl
pop
scas
add
bound
or
and
in
or
jecxz
lock
xor
addr16
bnd
nop
xor
cmp
int3
xor
orl
por
cld
push
arpl
pop
insl
out
xor
repz
int
xchg
out
dec
test
fistpll
jecxz
ror
mov
xor
xchg
icebp
lea
das
inc
std
mov
inc
xor
mov
std
jo
testb
sbb
inc
outsb
xchg
je
push
jp
push
inc
aas
adcb
stos
add
sbb
pop
call
js
ss
shrb
jns
int3
das
clc
mov
inc
sbb
mov
arpl
push
mov
fimull
aas
and
movsb
ss
sbb
jno
mov
mov
push
xchg
inc
enter
sbb
testl
ljmp
call
pop
and
pushf
sub
hlt
sbb
push
popa
movsb
int
pop
xchg
xchg
sub
xsha256
cmpsb
xchg
es
and
xchg
shll
jbe
enter
dec
stos
in
adc
call
popa
cmpsb
in
fdivp
pop
mov
test
mov
adc
ficomps
inc
scas
and
pop
sbb
mov
fmuls
es
inc
cmp
jbe
jnp
jmp
sub
xchg
add
dec
sbb
repnz
insl
and
or
jnp
sub
rcrl
mov
cmp
das
ror
adc
sub
dec
scas
sbb
cmp
dec
xchg
cs
js
cmp
jnp
add
xchg
arpl
ljmp
cs
push
mov
xor
pop
mov
inc
or
dec
mov
pop
out
lds
lret
nop
lods
andl
inc
or
mov
fcomip
inc
sbb
sbb
inc
mov
mov
jecxz
in
test
fsts
cmp
mov
cmp
call
mov
stos
iret
fidivrl
xchg
addb
pop
mov
flds
cli
leave
cmp
stc
insb
in
daa
and
xor
inc
in
repz
pop
cmpsb
test
aaa
ud1
in
int
lcall
push
add
adc
sub
cmpsb
cmp
insb
enter
adc
hlt
jp
je
insl
sbb
mov
mov
fsubrs
in
test
sub
cmp
sub
jmp
mov
cltd
jmp
jp
push
int
les
xor
aad
push
or
jg
jns
ret
jae
jl
and
jmp
mov
adc
lods
adc
xor
mov
push
mov
into
add
inc
movsl
jb
clc
mov
test
idivl
dec
aam
and
dec
inc
jg
mov
ljmp
je
dec
fadd
sub
pop
lret
and
adc
xor
xchg
mov
pop
dec
inc
movsl
loopne
and
sbb
xchg
in
lahf
cmpsl
jb
cmp
cmp
fst
pushf
icebp
outsb
xchg
jnp
mov
dec
shlb
cmc
pop
rcr
sub
inc
xchg
sbb
int3
mov
dec
sub
inc
adc
out
mov
sbb
lahf
ret
jnp
imul
jge
test
xchg
mov
lock
mov
fstl
repz
jbe
mov
pop
aad
js
sbb
pop
or
mov
jp
mov
sbb
inc
daa
sub
mov
dec
push
fidivrs
scas
sbb
daa
rorb
ja
push
leave
gs
push
mov
push
add
sbb
addl
jbe
dec
in
push
xchg
lods
adc
jno
sbb
pop
incb
cmpsl
xlat
dec
loop
shlb
in
push
cmp
jno
dec
repnz
daa
sbb
ss
jbe
xchg
out
push
sbb
add
and
int3
mov
scas
adc
in
loope
sub
sub
adc
lcall
les
push
fiadds
dec
adc
aad
out
cmp
dec
xor
scas
std
aaa
addr16
mov
adcb
mov
in
jb
add
or
iret
shlb
xor
push
push
loopne
cmp
pop
xor
pop
ret
iret
xchg
push
dec
lcall
repz
sub
cmp
idivb
mov
les
cmpsl
xchg
adc
adc
cmp
ja
jo
cmp
xchg
in
in
lods
sbb
sub
lods
mov
jp
imul
rcl
scas
cltd
scas
push
fwait
pop
xlat
and
inc
xchg
xchg
cmpl
call
jb
jbe
bound
sbb
jo
cmc
loope
xrelease
sbb
out
jmp
idivb
ds
jp
dec
xchg
shll
nop
xchg
xor
cmpsb
fcompl
mov
jnp
mov
cld
mov
mov
jp
mov
cli
arpl
and
sub
jne
dec
rcll
and
mov
shrl
lahf
or
push
imul
mov
popa
gs
adc
sbb
mov
jmp
pusha
gs
xor
outsl
dec
mov
inc
xorb
pop
aas
sub
xlat
movsb
les
insb
pushf
pop
movsb
and
pop
outsl
cmp
loopne
mov
fmull
jnp
pop
jbe
or
ss
mov
in
sub
pushf
sbb
cmpsl
adc
nop
aad
jb
lret
mov
and
insb
jo
xor
fdivs
rcr
lods
xlat
pop
rorl
push
mov
adc
out
jnp
mov
add
and
inc
jmp
jge
cmp
cmp
push
adc
and
into
clc
lcall
cld
imul
jbe
arpl
xchg
clc
cmpsb
and
mov
mov
movsb
into
test
jno
ljmp
out
stos
rcrb
xor
mov
dec
dec
icebp
xorb
dec
lahf
cmp
push
jg
lret
out
pop
sbb
out
pop
movsl
stc
jbe
mov
push
loopne
arpl
fwait
enter
cmpsl
insl
hlt
xor
lcall
cmp
outsl
mov
pop
test
mov
ficoml
loope
cmp
jp
cmp
jg
adc
mov
lahf
jo
ret
cmc
or
stos
xchg
cmp
aas
jecxz
jnp
sub
aas
push
sub
mov
cmp
fstps
adc
hlt
dec
mov
or
xchg
sbb
hlt
mov
ds
loope
mov
ljmp
inc
sbb
add
adc
jb
jne
icebp
or
add
shll
les
movsl
pop
xor
sti
clc
out
jo
inc
lcall
and
mov
jge
mov
ss
cld
xchg
ja
rclb
pusha
pop
mov
and
popf
and
addb
jge
mov
stos
xchg
adc
stc
xor
imul
xor
cmp
out
cli
and
push
jmp
test
mov
mov
lahf
mov
insb
fistpl
pop
aaa
fistl
mov
inc
xchg
hlt
xor
mov
lock
test
imul
movsl
lcall
sbbl
insb
loope
dec
fmul
sbb
fisubrl
ljmp
testl
lret
sti
and
inc
fs
iret
xor
add
loop
leave
sti
mov
xchg
sub
stos
stos
scas
repnz
scas
lret
and
mov
stc
sbb
sub
pop
cli
loope
sarb
loopne
fiaddl
ja
movsl
mov
outsb
cli
fbstp
stc
int
xor
push
lock
test
mov
lahf
scas
jecxz
sbb
out
inc
test
fs
ficompl
xor
popa
jns
call
dec
cmp
pushf
pushf
aaa
icebp
ret
hlt
cwtl
lea
push
push
bound
mov
je
jle
addr16
dec
cmpl
jo
pop
popf
in
pop
aaa
adc
fimull
add
push
push
rcr
add
out
mov
int3
sbb
inc
adc
fisubl
dec
rcpps
test
insl
and
push
mov
shlb
dec
adc
adc
lret
push
notl
imul
pop
xor
lret
mov
int
sbb
inc
xor
xor
negl
enter
clc
jge
scas
cwtl
pop
pusha
dec
fidivrs
xor
mov
fwait
pop
inc
or
dec
dec
fimull
push
sbbb
mov
mov
pop
lcall
repz
mov
cli
loopne
jb
mov
cwtl
jb
jp
cmpsl
divb
xor
sahf
push
mov
mov
jecxz
in
xchg
mov
mov
pushf
shrb
fstpt
mov
mov
and
and
js
arpl
les
sub
jo
mov
in
mov
fdivl
into
push
into
ja
dec
xlat
sbb
ficoms
xor
xchg
inc
xlat
push
ds
jmp
out
mov
loop
mov
jge
pusha
rcrl
stos
pushf
cmp
loopne
pop
dec
imul
in
dec
and
pop
andb
popf
push
xchg
xchg
mov
jecxz
xchg
sar
sbb
add
mov
outsb
xor
mulb
inc
push
fs
addr16
test
insb
shll
jmp
lea
push
mov
lahf
push
mov
mov
add
lret
xor
jmp
nop
mov
pop
add
mov
outsb
pop
inc
adc
mov
pop
inc
int
stos
fsubrl
or
push
mov
mov
lea
popf
xlat
push
rorb
mov
lock
stos
jmp
pop
bound
mov
out
pop
or
ljmp
movsb
cmp
daa
cmp
fs
dec
lods
cmp
inc
jp
pop
mov
mov
cmpsl
popf
outsb
and
add
sub
cli
adc
dec
mov
loopne
fs
test
dec
fisubs
lods
push
inc
cmp
test
out
out
mov
aaa
mov
xchg
and
lock
test
out
gs
push
insl
fisubl
inc
int
push
bswap
and
xor
test
push
lret
push
or
xchg
ja
js
cmp
xchg
sti
push
dec
ljmp
ret
mov
push
out
cltd
mov
push
in
xor
mov
dec
adc
mov
xor
stos
adc
xchg
pop
and
cmp
adc
aaa
and
mov
fdivs
cmp
fdivs
add
xor
jno
pusha
sub
in
push
aaa
call
jg
das
jmp
ljmp
shll
icebp
adc
jns
jne
or
cltd
sahf
test
addb
mov
out
call
push
cmp
pusha
mov
mov
or
lret
out
fdivl
call
cmp
inc
inc
jmp
jg
inc
sub
xchg
mov
cli
call
push
sub
cmp
jno
jl
in
jbe
jmp
xchg
insb
xor
sbb
inc
cwtl
fldcw
xchg
je
add
cmc
xchg
add
or
jae
into
or
fldl
inc
stos
lret
or
rcl
mov
push
cmp
bound
cmc
negl
js
pop
popf
and
data16
lret
jmp
out
cmpb
mov
dec
popa
arpl
je
inc
jge
nop
and
sub
and
sbb
nop
scas
popf
dec
iret
lahf
sbb
dec
inc
inc
or
subl
dec
mov
repnz
mov
mov
xchg
or
test
out
inc
lods
into
scas
xor
cmp
adc
pop
fsubrp
lds
jmp
mov
dec
mov
push
lods
xlat
jg
push
xchg
or
ljmp
sub
and
cltd
adc
popa
push
aad
outsl
jge
mov
mov
xchg
mov
xlat
xor
add
pop
fidivl
test
sarb
add
test
xchg
cmp
mov
shrb
stos
cmp
sub
pop
push
xor
pop
xor
addr16
or
ljmp
jbe
push
or
inc
or
xchg
or
mov
mov
pop
push
mov
shrb
js
out
in
lds
push
and
xchg
fcmove
sbb
add
lahf
sub
push
idivl
cmpsl
aam
pop
daa
pusha
mov
mov
mov
sbb
lods
test
mov
pop
or
dec
incl
add
jne
or
out
sub
mov
push
sbb
and
pop
stos
movsl
lods
add
repz
sub
cltd
rorl
cmp
mov
in
push
adc
out
xor
into
int3
mov
lret
data16
mov
inc
pop
ficompl
imull
mov
and
or
jae
sub
sbb
sub
movsb
lcall
mov
mov
pop
popa
negl
xchg
repz
sbb
inc
aad
loope
push
cmp
and
cmpsl
shrb
imul
pushf
stc
mov
dec
cmp
in
in
scas
out
aas
in
xchg
ja
lea
or
mov
and
xor
sbb
xchg
dec
mov
cmp
test
daa
aam
pop
lret
dec
sahf
in
outsb
mov
jg
test
lock
inc
or
popf
outsl
cmp
sarb
sub
sbb
fildll
call
mov
mov
fdivrl
mov
mov
xlat
jb
lods
jle
movsl
dec
enter
pop
xchg
inc
or
inc
aaa
out
test
sub
lods
cmp
cwtl
ror
sub
adc
jge
stos
dec
xchg
mov
movsb
call
adc
test
sub
push
or
sti
jbe
es
xchg
ret
aaa
sub
outsb
mov
leave
and
mov
jle
push
xor
inc
dec
inc
das
adc
jle
orb
dec
inc
sbb
fucom
push
and
push
adc
fs
fsubs
mov
mov
mov
adc
jg
test
outsl
cld
sub
adc
fnstcw
fwait
jns
add
cld
jl
dec
int
xor
mov
ret
fst
mov
insl
sub
loope
jg
addr16
f2xm1
in
push
sub
xor
inc
in
data16
test
jmp
lods
mov
mov
push
bound
sub
or
sub
loope
enter
testb
int
outsb
in
or
cmpb
xchg
aaa
jge
xchg
inc
aaa
pop
sub
icebp
cmpl
xchg
sub
iret
xchg
add
push
push
ret
into
inc
sub
js
sub
cmp
shrb
dec
dec
inc
add
lea
sub
lods
mov
adc
pop
xor
mov
js
stos
push
rorl
scas
mov
fsts
dec
add
dec
inc
lcall
add
daa
pop
adc
xchg
movsb
lahf
sub
sub
adc
cwtl
jge
dec
mov
cmc
pushf
mov
cmp
cmp
mov
repnz
pop
fisttpl
sub
lods
ficoml
and
lods
imul
mov
mov
lret
xor
mov
in
mov
and
shlb
loope
jb
scas
wbinvd
out
jl
or
xor
test
add
nop
xchg
or
jg
mov
pop
repnz
int
jb
pusha
test
aas
jle
cmp
frstor
sahf
push
add
ljmp
movsb
xor
mov
movsl
mov
sti
outsl
mov
dec
cmp
and
xor
lret
cmp
into
xchg
inc
bound
xchg
clc
add
daa
mov
mov
add
outsb
mov
xchg
negl
push
shlb
popf
add
test
mov
test
test
pop
and
rol
pop
outsl
mov
jae
leave
adc
test
mov
out
popf
cmp
jl
imul
ljmp
pop
cmp
mov
rorl
push
je
out
mov
mov
aam
mov
fmull
xor
inc
lea
adc
push
clc
xchg
leave
sahf
divb
xchg
dec
lcall
mov
rclb
adc
xchg
mov
jge
xchg
ret
arpl
jl
lret
add
ljmp
scas
rcl
cmp
sub
adc
stos
rcl
push
inc
into
std
jle
test
mov
jne
adc
add
mov
std
test
or
imull
sbb
jae
push
es
ljmp
adc
cld
pushf
cmp
addb
xor
push
inc
add
cld
dec
xor
fbld
xchg
jno
push
rorb
cmp
mov
shrb
shrl
push
sub
int3
movsl
pop
pop
xchg
add
jle
out
jp
or
xchg
pusha
cltd
inc
pop
out
imul
pop
adc
daa
out
ret
cmp
rcrb
and
xor
cwtl
lds
in
mov
movsb
and
push
pop
mov
add
mov
sahf
xor
mov
xchg
fcompl
cmc
jecxz
fsubrp
test
xchg
stc
jl
cmc
mov
lock
cli
adc
mov
inc
fwait
and
or
andl
pop
mov
fldenv
out
inc
mov
adc
idivb
inc
out
iret
pop
pusha
mov
ret
jmp
jl
aaa
add
jnp
clc
mov
lea
xchg
sbb
cmpl
mov
das
and
xchg
sahf
fldt
loop
in
fnstcw
mov
dec
loop
ds
xorb
add
divb
adc
dec
ja
dec
mov
insb
sub
dec
ja
int3
cmp
or
movsb
sbb
dec
jnp
sub
push
or
lock
xchg
pop
push
push
pop
jo
repnz
inc
test
jno
lock
cmp
xor
lret
iret
js
rol
inc
mov
mov
mov
sub
inc
xor
mov
jnp
daa
jb
mov
cmpsb
mov
pop
fs
shl
xor
cmp
cmp
movsb
test
ja
out
leave
imul
and
pop
pop
sar
iret
repnz
sub
mov
or
out
jge
test
js
xchg
sub
daa
jecxz
jmp
and
xchg
mov
dec
sub
fsubs
push
out
xor
fiadds
rcl
les
mov
xor
inc
stos
xchg
dec
and
cld
jmp
dec
mov
adcb
arpl
cmpsl
test
lods
xor
rorb
pop
sub
xor
lcall
iret
mov
jae
adc
je
push
xchg
outsl
jl
sub
test
cltd
xor
pusha
test
ret
movsl
int
in
mov
cmpsb
mov
pop
std
dec
jne
mov
push
or
rcrl
push
pop
outsb
dec
rcr
sarl
imulb
mov
pop
les
mov
mov
je
xchg
ret
and
clc
mov
fmulp
and
adc
pusha
jge
and
decb
rcrb
adc
in
lock
mov
pusha
cmp
or
icebp
adc
nop
rolb
jecxz
push
subb
sub
pushf
daa
jmp
ljmp
daa
sbb
cmp
cmp
rorb
push
jns
in
add
daa
ja
inc
lahf
jb
jne
iret
fadds
les
addl
add
popf
stc
jecxz
int
inc
or
sbbb
leave
or
flds
mov
sarb
cmp
repz
mov
or
xchg
jbe
xchg
std
inc
addr16
addr16
addr16
shll
test
push
aas
sbb
dec
clc
ret
xor
hlt
outsb
imul
std
fwait
or
bnd
push
and
xchg
and
xchg
stos
jge
data16
jl
dec
lahf
sbb
sbb
aad
repz
and
jns
repnz
push
dec
sahf
sub
lahf
sbb
movsl
int
mov
das
pop
shr
stos
test
popf
arpl
jno
ret
xor
sbb
push
ds
loop
sbb
pusha
popf
mov
loopne
jno
lcall
lcall
lea
jb
daa
jae
push
mov
adc
push
xor
or
test
sub
push
inc
xchg
sar
fdivrs
scas
mov
adc
and
lcall
int3
dec
fldl
fistpll
adc
shlb
mov
xor
ljmp
xor
je
test
lea
jbe
xchg
or
lock
js
clc
std
xor
in
shl
pop
insl
jno
fucompp
cmp
movsb
mov
jae
adc
mov
inc
lods
rol
xchg
fimuls
dec
scas
out
sbb
in
insb
push
cmp
or
mov
sub
scas
mov
or
sbb
hlt
mov
cmp
xchg
divb
ret
f2xm1
jbe
int
mov
adc
inc
mov
jne
stos
test
sub
and
es
mov
cmc
mov
inc
mov
pcmpeqd
aas
daa
mov
test
push
push
lods
outsb
movsb
ss
mov
xchg
rolb
xchg
adc
shlb
sub
push
insl
mov
cmp
repz
mov
adc
cwtl
lret
jecxz
dec
add
popa
ljmp
stos
push
push
cld
test
jo
pop
cs
lds
push
add
xor
int
fnstcw
sbb
or
inc
mov
sub
dec
test
jg
into
fildll
jb
into
or
mov
test
push
sti
cld
fidivs
xorl
pop
repnz
pusha
inc
int3
sarl
loopne
pusha
repz
ss
addr16
int3
leave
mov
mov
daa
push
repz
insb
jecxz
push
das
cwtl
sarl
adc
adc
repnz
inc
sub
gs
push
rorl
cwtl
push
popf
mov
xor
ss
xlat
push
adc
or
and
leave
mul
out
mov
ret
and
and
inc
xchg
lret
sub
mov
mov
scas
lock
mov
xchg
adc
mov
xchg
dec
push
insb
fimuls
xchg
mov
cmpsl
notb
outsb
filds
and
pop
test
js
repz
xchg
cmp
sub
fwait
push
mov
xchg
mov
popf
mov
daa
fistps
and
or
iret
stc
testb
xlat
out
test
add
dec
fisubrs
lea
dec
stc
mov
ss
pusha
sahf
mov
or
dec
push
popf
paddusb
xor
jne
xchg
sub
and
cmp
mov
adcb
iret
xlat
xchg
cltd
mov
mov
ficoml
mov
lea
pop
cmp
xor
inc
xchg
cmp
imul
es
xchg
cmp
cmp
add
mov
dec
and
inc
flds
cmp
lods
mov
pop
jo
xor
loope
push
xchg
aas
fcmovnbe
xchg
iret
dec
aaa
and
loope
mov
mov
cltd
mov
out
sub
mov
push
cld
or
jle
in
sbb
mov
scas
fnstsw
push
dec
jns
movsl
push
sbb
xchg
in
xchg
and
gs
sub
out
lret
cli
xchg
xchg
cmc
and
jmp
sbb
mov
sbb
js
push
sbb
mov
xor
xor
cmp
or
jo
fmull
aam
fs
sub
addr16
test
jecxz
mov
mov
in
cmp
shl
addl
mov
aam
sbb
inc
sbbl
sub
ret
add
push
mov
shl
sub
sbb
rcrb
or
ret
fidivrl
daa
loope
jmp
pop
mov
out
lods
orl
adc
inc
mov
sbb
pop
cmpl
ljmp
stos
xchg
adc
insl
mov
dec
mov
pop
push
mov
push
cmpsb
pop
test
lea
push
pop
jb
test
decb
xchg
negl
mov
add
dec
jge
fnstenv
nop
xor
aas
pop
popa
cmp
sbb
pop
or
sbb
addl
pop
dec
and
shlb
shll
sbb
jmp
pushf
push
xchg
pop
cmp
xor
cmp
mov
lods
xchg
adc
mov
dec
repz
out
xchg
notb
fwait
dec
lea
pop
es
inc
xor
jmp
out
sbb
add
sbb
lods
dec
cmc
rclb
insl
mov
jbe
jo
cli
jg
xor
arpl
add
dec
xor
or
test
js
adc
mov
daa
xchg
xor
dec
mov
cmpsb
and
mov
test
mov
imul
les
xchg
pop
pop
xchg
push
std
imul
mov
das
cmp
and
mov
inc
aam
test
cmp
imul
mov
cltd
jmp
xor
jo
rol
popl
mov
imul
stos
popa
push
jecxz
xor
je
push
jns
mov
jg
pop
scas
mov
push
and
vaddss
jl
in
sub
mov
push
fldt
jno
and
push
and
sarl
pushl
and
mov
jecxz
fwait
dec
sbb
es
inc
sbb
je
loop
call
sub
imul
jmp
or
add
cmpb
push
fwait
icebp
imul
and
or
addb
out
clc
mov
mov
mov
je
mov
inc
push
out
cmp
int
pop
sti
fldt
inc
mov
inc
subb
test
lds
add
sbb
adcl
test
mov
push
iret
xor
in
cwtl
mov
and
lret
insb
or
cld
repnz
mov
es
leave
ja
mov
adcb
jp
cmp
rolb
loopne
xlat
pop
inc
sub
xchg
sub
mov
mov
adc
xor
addb
lea
fs
imul
add
mov
lds
jno
daa
push
loopne
cwtl
mov
mov
dec
jl
std
sbb
ljmp
push
inc
adc
jnp
imul
sbb
test
push
fwait
sub
lds
sub
loop
pop
jb
pusha
ljmp
sub
ret
fistps
incb
stc
mov
mov
mov
movsl
mov
dec
and
sbb
add
mov
loop
xchg
pop
cmp
adc
xchg
xchg
int
loop
pop
ja
inc
imul
adc
pop
mov
and
loop
pop
stos
cmp
ds
popa
aam
out
daa
lds
daa
dec
jg
das
enter
lods
push
pop
adc
sar
xchg
add
leave
nop
adc
sahf
mov
daa
movsl
das
add
xchg
mov
pop
jo
lcall
lret
les
pop
imul
mov
or
fs
or
add
sub
repnz
sarl
and
popa
dec
int
test
xlat
rcrl
fdivl
repz
in
ret
negb
fstpl
sub
jecxz
add
aam
or
mov
mov
mov
insl
add
fwait
int3
and
ja
and
fstpt
stc
sbb
add
and
pop
call
xor
xor
aam
adc
cmp
pusha
and
dec
push
xor
sub
xor
cltd
scas
sub
jle
push
and
xchg
jmp
sbb
push
lock
and
xchg
js
xchg
or
xlat
add
repnz
inc
fnsave
pusha
or
out
xchg
test
mov
jbe
and
fiadds
cwtl
mov
mov
data16
jmp
dec
cmp
addr16
out
test
roll
xor
push
nop
dec
fadds
jb
cmpsb
push
adc
pop
lret
jo
mov
cld
dec
pop
add
pop
add
add
mov
faddp
dec
popf
and
mov
stc
test
in
dec
mov
sub
or
imul
scas
fsubr
sub
mov
and
lea
push
shrl
fisubl
sbb
getsec
out
pop
jle
mov
mov
out
popf
fisttpll
shll
push
pop
fcmovnb
je,pt
sub
push
in
and
sub
aaa
sbb
xchg
imul
into
pop
imul
insl
aas
cmp
add
inc
sub
add
or
inc
repnz
pushw
xchg
sub
sbb
aas
stos
mov
mov
pop
adc
mov
dec
lret
dec
push
xchg
inc
pusha
dec
sub
lods
add
jge
pop
pop
rorl
cmpsl
jmp
ja
xchg
scas
rolb
and
pop
in
sbb
mov
xchg
add
loope
pop
inc
js
in
mov
adcb
jb
dec
sbb
movb
push
xor
push
repnz
rcrl
cmc
mov
pop
ljmp
stos
jmp
dec
xchg
mov
xor
loope
test
jno
daa
movsl
inc
pop
in
inc
les
std
js
dec
cmpsl
std
out
adc
cld
and
add
push
xor
inc
jecxz
lods
mov
xchg
out
push
inc
sub
out
sub
pop
movsl
in
dec
xor
mov
testl
sub
aad
xchg
out
lds
lock
jne
cmpsl
adcl
insb
adc
daa
dec
inc
lret
not
lret
xchg
jl
adc
xchg
mov
and
stos
ljmp
and
movsl
mov
fsub
ret
ss
jl
sbb
inc
decl
mov
mov
push
push
int
mov
fmuls
int3
idivb
aam
test
fucom
cmp
jl
stos
mov
cltd
cmc
rcrb
aas
mov
push
out
xchg
mov
mov
int3
ret
add
ret
dec
fstpl
and
jno
mov
idiv
lods
push
xlat
mov
sbb
mov
or
insb
icebp
jmp
xor
pop
imul
rorb
push
adc
jno
push
sub
nop
loop
out
repnz
pop
inc
adc
movsl
inc
jge
sti
mov
les
icebp
mov
mov
fdivs
push
push
inc
movsl
xor
sarb
mov
subl
shlb
fstp
pop
ret
sub
ljmp
xchg
jge
andl
dec
mov
and
ficompl
fs
add
aad
rol
fdivs
and
fsubs
stos
mov
adc
mov
xchg
andl
mov
mov
sbb
das
std
stos
nop
test
jno
stc
mov
push
test
sub
inc
add
sarl
push
inc
push
or
pop
mov
jle
cmpsl
dec
jno
stc
add
add
es
mov
pop
out
jmp
in
cli
pop
mov
imul
mov
jno
mov
test
jp
and
loop
arpl
dec
fcomps
cs
inc
mov
sbb
mov
es
imul
push
adc
js,pn
sbb
shrl
mov
push
subb
pushf
sbb
mov
in
push
adc
dec
add
cld
hlt
xchg
je
mov
mov
bound
dec
imul
outsb
dec
cmp
mov
test
sbb
xchg
mov
aas
into
jge
xchg
test
test
in
cmp
xchg
in
pusha
cmp
das
sbb
mov
call
out
pusha
outsl
mov
in
cmc
loope
in
iret
les
popa
fisubs
push
xor
aaa
add
test
mov
stc
xchg
xor
dec
xor
cmpsb
mov
dec
out
mov
inc
pusha
or
cmp
in
dec
inc
rcr
adc
xchg
inc
fisubs
mov
and
mov
mov
enter
sub
into
jo
jns,pn
sbb
cli
adc
or
ret
mov
cs
xchg
roll
dec
xchg
mov
stc
mov
js
clc
lea
sub
mov
mov
out
fistpl
out
mov
cmpb
xchg
mov
xchg
cmp
mov
xchg
mov
and
mov
hlt
out
cmp
notl
cli
stc
leave
aaa
imul
push
adc
das
ljmp
lock
jae
fbld
test
xor
les
ret
push
aad
movl
nop
mov
and
cmpsb
inc
shll
rorl
cld
cmp
add
jnp
cld
mov
loope
mov
xor
sarl
insb
inc
adc
add
adc
hlt
loope
jo
jbe
out
dec
jle
loopne
into
rorb
mov
test
jb
push
js
or
adc
test
outsl
jp
pop
imul
jp
cmpsb
inc
fidivs
mov
or
mov
jns
and
sbb
flds
push
int3
sub
cld
loop
pop
leave
cmp
xchg
xchg
push
jns
leave
aam
push
pop
pop
inc
pop
pop
pop
or
arpl
icebp
pop
pushf
adcb
mov
dec
sub
mov
adc
inc
jmp
add
sahf
into
lods
sub
jns
sbb
test
sub
popa
mov
fwait
lock
xchg
pushf
popa
mov
push
xorb
sbb
push
ja
icebp
or
inc
and
or
sub
dec
out
outsl
clc
pop
inc
adcb
push
movsb
jecxz
outsl
mov
push
lock
dec
aam
mov
add
stos
leave
orb
push
ljmp
cmp
sub
inc
jae
and
mov
xlat
jne
in
sbb
outsl
es
shrb
mov
mul
popf
adc
push
mov
mov
fildll
data16
adc
cli
push
fidivs
roll
movsb
out
push
lcall
out
cltd
fldl2t
pop
popf
ja
jecxz
outsl
fxch
sub
in
xchg
fwait
cmpsl
push
dec
iret
stos
fisttps
ss
insl
mov
xor
mov
pop
xor
cmpl
jl
into
lcall
mov
hlt
sub
xchg
aam
adc
lods
rep
adc
shll
test
fstpt
insb
jecxz
aam
adc
jl
js
stc
xlat
xor
jno
add
loopne
xor
scas
cwtl
sbb
xchg
xchg
sub
pusha
imul
adc
push
enter
lods
movsb
adc
lret
fistpll
mov
sbb
sub
xchg
or
daa
ret
stos
out
xchg
shlb
ja
push
mov
push
popa
push
dec
and
jb
dec
dec
jnp
dec
fildl
lret
lds
push
push
mov
inc
std
std
xlat
out
outsl
or
and
cmc
dec
rorb
sbb
fadd
insb
adc
cmp
pop
dec
pop
dec
adc
clc
dec
fucomip
inc
clc
cmp
xchg
ret
inc
adc
jae
add
out
pop
inc
pop
test
inc
push
inc
fdivrl
and
aas
mov
cli
xor
lea
mov
push
dec
push
out
jmp
mov
movsb
orb
jb
test
in
inc
repz
or
popa
push
jmp
pop
push
jo
xchg
addr16
nop
rolb
out
test
pop
ja,pn
gs
mov
shrl
scas
mov
das
sbb
jns
addr16
push
shrb
or
imul
sub
cmp
xchg
mov
pop
pop
or
cmpsl
shll
imul
jnp
adc
int3
sbb
pop
sbb
gs
cmp
xchg
push
sbb
imul
nop
das
ss
gs
inc
push
adc
testl
lods
xor
pop
mov
sbb
and
iret
jp
sub
jne
icebp
push
aas
jne
mov
cwtl
movsb
or
pop
lahf
test
loopne
lahf
xchg
lea
xor
jb
lods
xchg
add
leave
loop
or
mov
lahf
lret
in
loopne
les
inc
mov
fdivrl
cmp
jns
mov
dec
mov
cmc
imul
push
mov
mov
mov
xchg
loope
jae
je
push
cmp
shrl
out
mov
pusha
pop
dec
adc
sbb
pop
sar
sub
sub
in
cmp
shlb
sbb
lret
push
mov
test
bound
mov
xchg
pop
outsb
test
repz
pusha
adc
push
cmp
mov
pop
out
std
pop
loop
in
and
movsl
callw
test
test
lret
push
mov
adc
xchg
xchg
mov
jb
out
pop
test
gs
jno
sbb
ret
adc
test
roll
adc
repnz
inc
pop
fstpt
mov
pop
call
syscall
iret
cmp
out
scas
stos
pop
int
mov
inc
mov
and
or
mov
sbb
push
orb
leave
sbb
mov
fwait
mov
cmp
repz
orl
adc
inc
lcall
adc
shlb
inc
in
cli
cwtl
stos
push
dec
sbb
lods
lret
rorb
subb
add
sbb
mov
incb
mov
mov
lret
xchg
add
rorb
movsl
pop
jmp
jne
adc
cmc
arpl
push
pop
cmp
testb
xor
cmp
pop
in
pop
dec
jecxz
cltd
mov
sub
rorl
aam
and
dec
les
insl
inc
xor
pop
mov
fwait
mov
mov
dec
pop
inc
mov
outsb
inc
and
sbb
addr16
enter
push
out
sti
test
icebp
mov
sbb
xchg
pop
fdivrs
dec
push
les
dec
loopne
testb
cmp
fidivs
sahf
adc
mul
ja
xor
xchg
fcompl
push
jl
inc
xor
and
xchg
insb
push
rolb
sbb
int3
mov
adc
cltd
mov
fisttpll
pop
lret
sbb
cltd
jle
aaa
xor
pop
mov
or
xchg
push
mov
or
mov
imul
mov
mov
addr16
movsb
and
shrb
mov
gs
xor
lret
push
jge
sbb
sub
pop
pop
repz
jae
in
ss
dec
testl
or
inc
shr
lea
push
dec
sahf
mov
mov
mov
dec
push
sahf
inc
sbb
sbb
pusha
adc
and
daa
jnp
mov
outsl
sbb
pop
mov
roll
jne
bound
dec
aad
pop
xchg
loope
rol
loopne
xor
sti
jo
fnstcw
incb
testb
in
scas
push
addr16
dec
jne
add
xlat
imul
cmc
cmp
add
mov
pop
stc
popa
mov
or
arpl
push
inc
push
mov
iret
mov
lahf
mov
out
cmpsl
iret
xchg
mov
dec
adc
xor
sub
or
test
adc
mov
fdivs
jae
iret
fildl
mov
xor
test
jecxz
es
and
sbb
les
fsubl
aas
mov
mov
pop
jg
xchg
out
popf
sbb
dec
pop
insl
jb
popf
add
jmp
dec
fs
fwait
inc
jle
adc
imull
inc
mov
popa
cmc
mov
jg
inc
pop
or
and
inc
mov
pop
xchg
jb
daa
jo
push
repz
mov
in
lock
cmp
hlt
shll
mov
enter
addr16
bound
sahf
outsl
and
rolb
adc
lcall
test
sbb
pop
and
jecxz
inc
adc
push
lods
jno
jmp
fs
and
out
xor
push
or
test
notb
cmpsl
mov
lahf
ljmp
mov
jmp
xor
mov
movsb
mov
lret
mov
es
mov
push
sub
or
xchg
jne
xor
jbe
movsl
xchg
mov
std
movsl
adc
dec
out
stc
andl
in
xchg
pop
xchg
cmc
push
pop
or
filds
lcall
cmc
ss
loope
xchg
mov
adc
js
fisubrl
daa
lock
jno
mov
test
sbb
pop
es
ljmp
pusha
addr16
rcll
sbbb
jno
and
sub
sbb
pop
jns
or
jg
cmp
or
test
shll
pop
cmp
or
inc
xchg
mov
in
mov
lret
lods
adc
and
xor
loope
lret
movsl
adc
xchg
push
ja
mulb
popa
cmpsb
push
repz
jmp
arpl
xchg
adc
je
dec
arpl
mov
pusha
arpl
sbb
stos
jo
cmpsb
xor
enter
lods
dec
fwait
lods
leave
cmpsl
sbb
or
adc
fs
mov
jle
int3
movb
iret
mov
cmpsb
inc
outsl
mov
mov
call
xchg
mov
inc
adc
jle
and
jbe
jle
and
int3
jns
add
rol
dec
sub
cmpsl
add
xchg
es
int3
adc
in
ja
mov
inc
aas
cmc
jno
pop
adc
sub
add
rcrb
fst
stc
or
and
jns
incl
cmp
xor
or
sbb
mov
sahf
cmp
push
jnp
dec
enter
adc
repnz
pusha
dec
add
cwtl
cmpl
or
xchg
call
and
sbb
push
test
cli
pop
push
clc
mov
cmp
rclb
sti
test
cmp
inc
inc
fs
inc
leave
mov
jmp
sub
fcmovbe
ret
xchg
cmp
aam
mov
mov
lods
jbe
je
pop
jne
in
cmc
pop
and
fucomip
inc
ret
mov
stc
fstpl
adc
fcomip
test
xlat
mov
add
icebp
leave
inc
or
xor
adc
pop
pusha
addb
adcb
cmpsb
mov
mov
sub
xlat
jecxz
sbb
or
popa
mov
mov
sahf
int3
mov
enter
mov
js
and
or
mov
jnp
lds
cli
mov
mov
mov
aas
hlt
cmp
aas
gs
movsl
mov
test
nop
mov
sti
mov
pushf
xchg
xchg
insl
icebp
xchg
arpl
pop
aad
push
jg
add
rcrb
test
lds
cld
cmp
adc
jecxz
dec
test
orl
jp
dec
mov
fsubrp
sarb
mov
mov
mov
xor
jb
rcl
jo
and
mov
imul
dec
sub
mov
fcomps
cmp
cmp
pop
inc
fiadds
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
lcall
push
pop
stos
aas
loopne
cmp
shrb
aas
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
imul
and
lret
ss
xor
int3
lods
sub
sbb
or
dec
rolb
arpl
jns
jo
pop
push
add
fwait
add
into
jge
aas
loopne
aas
imul
mov
std
xchg
lods
popa
push
push
mov
mov
xor
xchg
pop
push
push
lock
fldcw
add
popf
into
pop
push
lods
ljmp
les
mov
push
mov
mov
es
stc
push
mov
push
sbb
outsl
scas
ss
add
xor
gs
stc
sbb
cmp
adc
sub
test
loope
aas
xchg
mov
pop
test
loopne
fildll
jmp
push
scas
les
cmp
daa
cmp
sub
test
loopne
aas
imul
sub
les
test
lock
aas
imul
sub
test
loopne
cmp
sub
sub
daa
cmp
inc
sbb
movsb
pop
test
loopne
das
imul
sub
test
lock
aas
imul
sub
test
loopne
aas
imul
test
stos
aas
loopne
punpcklbw
xor
push
movsb
les
aas
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
int
xchg
daa
aas
imul
es
movsb
aam
test
fisubl
aas
imul
imul
loopne
aas
imul
or
fimull
aas
imul
jge
movsb
les
aas
loopne
aas
imul
sub
les
aas
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
sub
test
loopne
aas
imul
push
mov
pop
mov
mov
cwtl
sarb
inc
or
or
ja
test
mov
lods
aas
pushf
mov
sbb
ret
int3
cltd
stos
jl
or
push
inc
das
xor
out
ret
test
adc
daa
stos
imul
fs
lods
test
sbb
push
or
addl
test
repz
xor
mov
cld
cmc
rcrl
mov
out
mov
fnstsw
cmpb
mov
in
cli
or
repz
and
xchg
hlt
jmp
pop
fldt
divb
enter
mov
jo
or
jmp
pusha
mov
pop
and
jge
inc
sub
cvtdq2ps
mov
pushf
or
add
sub
adc
insl
cld
xchg
xor
jb
lods
and
int
mov
cmpsl
or
cmp
mov
push
sub
bnd
adc
push
shll
mov
inc
cmp
dec
cmp
repz
ja
test
es
lret
inc
push
adc
scas
cmp
setne
fidivs
in
out
andb
sub
push
add
cmpb
sbb
or
mov
adc
mov
pop
mov
lea
imul
inc
aam
popa
icebp
sub
outsb
adc
add
mov
sub
cmp
mov
mov
test
xchg
pop
xchg
sbb
jno
gs
lock
sub
orb
inc
pop
lock
ja
xchg
jmp
loopne
sbb
fidivrs
fs
pop
xor
push
cwtl
jmp
mov
sub
lods
icebp
stos
aad
sahf
fsts
test
sub
ja
inc
ficoms
push
je
rcr
test
inc
lahf
fisttps
jns
js
out
lret
cmpsb
addr16
clc
sahf
test
cld
scas
jne
fimull
xchg
jge
fs
shr
push
cmpsl
fidivrs
push
aaa
mov
mov
xor
arpl
fsub
cltd
adc
jne
inc
in
ljmp
pop
stos
or
rcrl
mov
jl
xor
cmp
cmp
mov
cmp
imul
add
cmp
inc
mov
push
mov
das
fsub
adc
shrl
test
ret
xchg
nop
test
push
xlat
adc
fistpl
mov
dec
repnz
jp
mov
sbb
scas
out
rcrl
lret
pop
xorl
jae
ja
lods
sbb
mov
sbb
push
or
mov
jecxz
mov
ja
insb
mov
pop
cmpsb
sub
xchg
xchg
mov
adc
and
sub
filds
dec
pop
jno
fucomip
push
inc
push
push
imul
sub
adc
xlat
into
out
pop
in
leave
add
pop
into
mov
xchg
push
or
scas
lock
xor
inc
ficomps
jbe
add
aas
in
jmp
mov
and
mov
test
aad
pop
pop
cmc
stc
test
lcall
mov
sub
aaa
or
adc
mov
adc
xchg
out
xor
scas
lods
inc
stos
inc
aaa
push
push
mov
xlat
movsw
adc
mov
in
push
pop
xor
test
fwait
pop
or
outsl
js
testb
pop
dec
arpl
rclb
push
lods
bound
add
xchg
insl
jae
insl
cmpsl
mulb
adc
mov
mov
mov
bound
add
idiv
aaa
pushf
dec
bound
bswap
outsl
push
test
cmp
push
lock
in
into
xchg
lods
test
addr16
and
push
mov
sbb
mov
inc
pop
cltd
cmp
mov
aad
lds
jecxz
mov
pop
ret
hlt
mov
add
sbb
stos
or
aam
or
jo
repnz
imul
inc
add
cmpsl
sbb
popa
outsl
in
in
cmp
push
hlt
add
push
inc
pop
push
pop
push
fsubl
dec
ds
shll
fcoml
sarb
jmp
imul
arpl
mov
sub
jle
cwtl
add
out
inc
loop
inc
test
mov
and
mov
mov
add
cmpsl
push
xor
fcoml
fsubs
inc
daa
mov
sbb
mov
shrl
mov
notl
mov
sahf
scas
cmpsb
xchg
es
les
xor
fnstcw
xchg
lret
sbb
push
addb
jnp
scas
lods
sti
xchg
bound
xor
cld
pop
xchg
out
pop
ss
jb
mov
test
sub
sbb
mov
js
xchg
imul
push
add
sbbl
ret
fisubrl
xchg
outsl
in
mov
rorb
popa
cmp
clc
pushf
in
mov
int3
dec
testb
daa
push
mov
stc
inc
pop
into
push
lds
xor
add
dec
sub
mov
add
fildl
cmp
dec
das
stos
inc
dec
popf
add
outsl
push
and
int
dec
dec
add
sbb
sbb
data16
nop
xlat
das
fwait
popa
out
sub
addr16
notl
xor
or
jmp
imul
mov
cmpsl
icebp
inc
mov
es
push
insl
cmpsb
or
and
out
lret
sahf
daa
stos
popf
pop
rclb
xlat
add
pusha
out
jb
add
cmpsb
and
out
loopne
movsb
push
andb
shlb
ds
shr
mov
add
je
lea
mov
pop
and
xor
ja
push
jnp
test
mov
push
bnd
orb
icebp
lods
add
testb
incb
cmp
andl
jp
in
pop
das
cmp
jno
pop
popl
loope
xchg
inc
dec
movsl
pop
or
mov
push
adc
fcomp
fs
ret
xor
cltd
in
inc
int3
sub
adc
mov
mov
mov
mov
sbb
out
movsb
insb
loopne
add
es
sbb
or
fwait
out
scas
jo
popa
test
add
cltd
and
subb
cwtl
rorb
or
ljmp
jmp
mov
ret
leave
sbb
adc
frstor
mov
and
jl
pop
cmc
in
inc
or
mov
js
cli
nop
hlt
cmpl
and
push
cmc
push
and
pop
mov
cltd
xor
cmc
sub
ret
fs
and
repnz
dec
punpckhwd
iret
mov
je
lea
mov
test
dec
sub
loopne
cmp
mov
mulb
inc
subb
mov
cmp
push
lahf
hlt
push
std
dec
push
fs
pop
mov
pop
push
rorl
adc
mov
jmp
mov
sahf
ljmp
jno
filds
mov
frstor
jbe
clc
sbb
sub
dec
aad
loop
cmpsb
cmp
adc
rcrl
arpl
jno
cmp
rorl
sbb
fsubp
movsb
sbb
dec
mov
in
xchg
push
jo
pushf
push
dec
jbe
jmp
dec
addb
lcall
push
in
insl
or
insl
jbe
leave
add
dec
mov
inc
gs
mov
insl
mov
testb
pop
or
mov
fisubrs
mov
mov
jl
mov
pop
lods
popa
pop
sub
insb
and
or
mov
cmp
out
addr16
sbb
cmpsl
or
movsl
arpl
xor
xor
mov
imul
jmp
lods
or
out
jns
leave
or
push
sub
mov
enter
xorl
and
scas
loopne
in
or
xchg
mov
sbb
adc
out
pushf
cmpsb
mov
mov
stos
xchg
ljmp
bndldx
jns
push
mov
imul
jne
fcmove
mov
mov
adc
mov
xchg
pop
jnp
pop
mov
pop
cmpsb
fnstenv
inc
inc
fucomi
jle
add
cmp
jns
jl
ljmp
ret
stc
jle
add
mov
lds
sbb
add
xchg
mov
dec
xor
push
xor
push
sub
aaa
and
jecxz
lret
fwait
inc
leave
or
popf
sbb
clc
sbb
insl
mov
hlt
jae
out
lods
out
sarb
insl
or
xor
inc
xor
das
rcrl
pop
lcall
movsl
pop
inc
sbb
mov
xchg
loop
pop
cmp
mov
sti
mov
fisttpll
adc
sub
inc
lcall
or
popf
mov
insb
fsubs
jno
add
cli
or
inc
and
push
call
dec
add
jnp
loope
xchg
clc
mov
int3
aas
or
iret
fisubrl
lods
push
mov
rorl
pand
in
and
or
repz
mov
js
mov
das
and
pop
adc
lock
outsl
or
cmp
jecxz
loopne
add
inc
mov
xchg
cltd
pop
sub
faddl
xor
sarb
mov
mov
xor
filds
jl
add
dec
cltd
fdiv
cmp
imul
jne
movsl
xor
rcr
dec
sahf
jle
lcall
les
orb
pop
cmp
mov
sub
lods
xlat
dec
jnp
adc
sahf
mov
mov
sbb
mov
push
push
movsb
push
repz
inc
fbld
insb
dec
cmp
cmc
ret
add
add
mov
mov
mov
xchg
adc
or
xorb
dec
popa
fcoml
or
aad
int
xchg
lret
popf
add
test
icebp
jmp
js
pop
push
stc
or
out
adc
cmpsl
inc
lods
lds
sti
inc
vhsubps
call
ds
xchg
push
pop
ret
lock
shrb
mov
xchg
mov
adc
mov
jl
cmpsb
pop
adc
mov
std
add
leave
dec
ljmp
sub
push
mov
jge
les
cmp
idivl
pushf
xchg
ja
adc
mov
mov
jbe
ds
test
sbb
inc
sub
and
or
mov
lds
pop
mov
xor
pop
and
movb
xor
jle
imul
mov
xor
imul
mov
jge
mov
mov
mov
pop
shl
es
movsb
xchg
ret
mov
add
sti
push
movsl
push
xchg
dec
inc
aas
jae
cli
add
jmp
push
inc
dec
mov
js
pushf
cmp
test
sub
ret
inc
sub
add
je
mov
xor
jmp
push
xorl
push
stos
ficoms
pop
or
push
jns
sbb
inc
decb
and
cli
adc
cltd
dec
into
push
push
lcall
xlat
push
mov
data16
or
imul
fldt
adc
ja
ret
arpl
push
in
or
inc
and
icebp
mov
inc
ljmp
ja
mov
push
xchg
aaa
out
xor
test
inc
notb
jmp
cmp
or
mov
cmp
adc
inc
mov
push
call
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
