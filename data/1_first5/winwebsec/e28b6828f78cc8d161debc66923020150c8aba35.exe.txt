push
mov
or
pop
call
inc
dec
xor
push
aad
call
push
fwait
mov
das
sbb
sbb
push
movsb
repz
add
call
cmp
sub
lret
jp
pop
push
cli
xor
stos
jbe
adc
mov
clc
loopne
lods
pop
imul
sbb
add
xchg
loop
daa
inc
in
cli
ljmp
cmp
shrb
mov
push
cmp
scas
inc
sbb
icebp
sahf
or
mov
jo
dec
ljmp
or
sub
mov
inc
cltd
bound
lcall
subl
lcall
ljmp
divb
adc
lcall
add
xchg
dec
mov
out
push
call
dec
sahf
adc
mov
enter
outsb
adc
daa
jle
push
sbb
xchg
in
pop
or
popf
lods
pusha
out
pop
jecxz
lods
jp
enter
push
shrl
sub
mov
xor
pusha
cmp
shrl
sbb
ljmp
ds
daa
push
mov
aas
dec
neg
and
sbb
arpl
xchg
clc
push
mov
sbb
clc
notb
jo
out
pushf
insb
mov
push
sbb
aaa
push
leave
xor
or
jmp
add
mov
jo
ds
shlb
adc
xor
mov
sub
cld
stos
mov
adc
in
insb
in
ja
xchg
inc
das
es
or
nopl
inc
pop
clc
fs
leave
xchg
popa
pop
push
dec
xor
test
fs
aas
xchg
fstpl
cmpsb
xchg
ret
scas
jo
mov
iret
adcl
jns
lods
dec
push
jge
and
xchg
jle
in
out
push
cmp
mov
addr16
jecxz
repz
or
inc
lahf
out
shrb
movsb
mov
test
mov
or
dec
cltd
ja
scas
movsl
popf
jo
or
enter
dec
add
shll
insl
pop
mov
fsubs
into
movsb
jmp
jo
adc
xchg
jnp
cmp
ljmp
jo
jo
jmp
sbb
xor
test
pop
daa
into
in
ficompl
std
cmpsb
adc
push
sub
adc
sub
jmp
enter
cwtl
test
in
addb
icebp
inc
mov
or
leave
xchg
out
stos
rclb
sub
fwait
push
stos
lds
push
dec
jp
call
xchg
mov
sub
das
adc
and
mov
fcmovnbe
loopne
and
test
cmpsb
call
inc
in
push
cmpsl
mov
mov
dec
dec
dec
and
ds
xchg
test
adc
bound
hlt
test
add
or
les
pop
jp
cmp
cmp
fs
push
mov
loop
ficoml
inc
in
adc
out
and
es
lock
add
xor
test
adc
nop
push
aad
clc
adc
dec
mov
lcall
out
pusha
jge
pop
outsb
mov
or
jmp
push
jb
xchg
neg
sbb
mov
mov
stos
cmp
sahf
jp
sbb
dec
mov
lods
cmpsb
movsb
fmull
aas
xchg
pop
or
loop
inc
mov
cmp
in
sbb
ret
dec
cmp
sub
mov
mov
outsl
ss
inc
mov
mov
or
dec
jecxz
incl
pop
sbb
leave
repnz
jp
lcall
lds
pop
pop
movsb
dec
dec
repz
icebp
mov
js
loop
addr16
sub
aad
jnp
cmp
mov
sub
sub
lret
test
inc
xor
dec
add
push
mov
xchg
cmp
mov
sub
xchg
xchg
int3
pop
xor
adc
lods
mov
out
adc
jecxz
mov
jnp
sbb
mov
test
aas
push
cmp
sub
movsl
lret
notb
mov
push
dec
sub
mov
jno
aas
fildll
push
inc
and
mov
and
xchg
push
mov
mov
stos
repz
fldl
mov
sub
aam
or
lahf
scas
pushl
arpl
add
stos
lcall
push
jbe
sahf
cltd
daa
mov
push
sub
cli
pop
cltd
fists
xchg
push
push
cmp
iret
cmp
mov
and
jl
aaa
pop
or
pop
pop
pop
mov
fwait
arpl
push
daa
ud2
mov
jmp
sub
mov
fsts
mov
cmpsl
push
mull
jp
les
scas
dec
icebp
movsb
adc
imul
mov
icebp
sti
inc
in
ret
je
adc
mov
jae
ret
mov
cmp
mov
mov
nop
dec
mov
push
out
pop
icebp
lret
jns
push
movsl
mov
xor
mov
sub
jb
scas
out
cltd
nop
push
adc
mov
repnz
jno
into
clc
aaa
adc
adc
mov
adc
cmp
test
imul
sub
das
mov
or
ret
cmp
mov
dec
mov
imulb
inc
divb
xchg
cwtl
lea
lods
aas
jbe
clc
and
xor
filds
ljmp
fdivrl
push
or
mov
push
js
aam
sarl
mov
movsb
jno
movsb
ficoml
int
invd
rcr
jl
sbb
ss
push
pop
pop
mov
jecxz
imul
fsubp
sti
jb
adc
pop
out
xchg
shr
in
out
xchg
dec
sub
push
cmp
in
mov
sahf
flds
int
imul
lea
add
aaa
cmp
shl
and
andl
scas
jnp
xor
cmp
insl
das
pushf
into
add
push
pop
pop
scas
xchg
pop
aaa
sbb
mov
and
inc
scas
sub
pop
decl
sahf
xchg
mov
leave
dec
sub
shl
mov
mov
loope
mov
cs
dec
idivl
add
jle
cmp
and
push
dec
ret
push
leave
push
lea
and
mov
dec
push
mov
lods
mov
xor
dec
shrb
ret
loope
push
lahf
shlb
incl
faddl
idiv
xchg
and
mov
lods
push
sbb
jl
ja
test
scas
adc
mov
lahf
icebp
outsl
out
scas
repz
adc
pop
adc
push
or
inc
stos
push
gs
daa
stos
cmp
cmc
push
lret
pop
pushf
xchg
mov
ljmp
iret
mov
sbb
inc
fs
or
fidivrl
add
fmulp
add
adc
push
outsl
add
cmpsb
fidivs
push
aaa
lahf
xor
inc
push
ds
sbb
aam
test
js
cmp
dec
inc
outsb
outsl
sbb
gs
leave
mov
out
in
loope
les
and
cwtl
sub
mov
fwait
out
into
and
adc
mov
xor
jno
xor
push
sarl
mov
je
jg
scas
in
out
ja
stc
mov
roll
sbb
cmp
repnz
mov
inc
movsb
mov
andb
shlb
fnsave
sarl
or
cmp
call
sbb
lahf
add
dec
push
and
add
mov
jae
cmp
adc
loopne
rclb
pop
jmp
int3
cli
fmul
in
std
mov
sti
fwait
and
add
inc
or
mov
lret
push
ret
jbe
outsb
add
das
jle
lods
fsts
enter
xchg
mov
xchg
cmp
or
sub
push
pop
push
push
fwait
inc
and
pop
mov
mov
mov
out
outsl
push
push
test
push
fistpl
mov
dec
jb
xchg
sub
mov
out
loop
sbb
loope
push
stos
sbb
jbe
sti
pusha
popf
shrb
int3
jl
mov
test
stc
sub
push
xchg
push
or
xor
sub
jp
add
adc
push
push
jnp
pop
aaa
shrb
das
ljmp
xchg
fldl2e
inc
and
mov
ljmp
mov
xor
fdivrl
or
push
pop
dec
repnz
pop
pop
mov
dec
fdivrl
jae
fs
ds
ja
adc
mul
and
enter
sub
fcomp
sbb
ss
xor
xor
pop
out
in
fcmovnu
mov
scas
xor
mov
lret
mov
dec
and
shr
push
les
adc
into
xchg
test
cs
cmp
sbb
sbb
adc
cltd
call
inc
pop
fistpll
jle
or
test
add
popf
fcmovnu
loopne
call
lahf
enter
xchg
int3
jnp
push
icebp
mov
push
test
cmp
lret
cmc
xchg
lahf
xchg
adc
sub
jb
out
addb
nop
xchg
jbe
in
or
mov
xchg
dec
xor
mov
mov
jmp
dec
add
or
enter
cmp
jl
pop
xchg
push
jmp
mov
das
shll
adc
add
insb
es
ret
popa
jmp
xor
push
cmp
xor
push
aas
stos
mov
idivl
repnz
adc
iret
pushf
scas
in
cmc
jae
and
adc
adc
mov
lock
dec
call
cmp
nop
ss
ss
inc
or
mov
std
in
lret
inc
aad
xlat
and
sub
and
stos
insb
sub
arpl
cwtl
stos
dec
fbld
jns
xchg
sbbb
lret
lds
cmp
daa
into
mov
mov
xor
fidivl
jb
lds
rcll
mov
pop
and
out
cmpb
aam
sbb
jmp
jbe
mov
lods
ds
sbb
cmp
dec
inc
pop
dec
mov
outsb
xor
sbb
lcall
or
sub
mov
jb
push
insl
pop
jl
pop
subl
rcr
inc
mov
and
mov
sbb
sbb
push
mov
jmp
std
xchg
jnp
cmp
jmp
sbbl
or
jge
dec
insl
dec
js
xor
inc
adc
call
cmpsb
in
lds
ljmp
push
js
mov
pmaddwd
in
xchg
jbe
push
and
dec
pop
fildll
sbb
add
adc
cmp
sub
jmp
push
jecxz
imul
fdivp
dec
cmp
sti
xor
mov
testb
push
xchg
mov
and
jae,pn
rorl
call
inc
push
xchg
mov
and
mov
ds
jecxz
or
mov
sbb
jp
adc
xchg
or
test
jbe
sub
daa
jle
jnp
add
inc
clc
pop
roll
in
dec
shl
pushf
sub
xchg
jne
cld
sub
sar
cmc
pop
cmc
decb
dec
nop
cmp
xor
jno
and
ret
push
and
dec
adc
je
scas
xlat
sbb
jo,pt
xchg
fildll
sub
div
mov
loopne
das
out
fldcw
bound
lods
jns
loopne
mov
jbe
sbb
lea
adc
xchg
mov
out
cmp
add
into
pop
daa
dec
bound
ucomiss
add
loope
es
das
aad
push
int3
jl
mov
out
lds
adc
movsb
in
cmpsl
test
cmp
cmp
out
sub
xchg
xor
cld
ljmp
sub
arpl
add
cmp
mov
jae
subl
mov
mov
shrl
pop
push
dec
push
xor
mov
test
cmp
xchg
mov
leave
dec
and
iret
sbb
pushl
push
pop
sti
jae
mov
push
hlt
xor
or
pop
xchg
call
dec
mov
fistps
mov
jmp
mov
push
inc
and
dec
test
mov
enter
sub
push
fcomps
mov
fs
out
jl
call
or
cli
test
pop
stc
dec
shrl
mov
dec
pop
in
js
int3
mov
inc
jae
es
jle
dec
int
jae
insl
cmp
xor
enter
in
psubb
shrb
roll
mov
add
mov
adcl
ja
lods
sbb
pushf
loope
push
jge
mov
lcall
inc
inc
fmul
test
pop
mov
clc
data16
push
cmpl
ja
ret
outsl
lahf
mov
pop
sahf
scas
into
enter
adc
fisubrl
shlb
flds
adc
icebp
out
arpl
push
mov
jmp
adc
mov
xchg
daa
imul
pusha
cmp
ss
imul
sbb
arpl
mov
jae
sub
dec
js
loope
mov
shlb
addr16
jnp
loope
repnz
jae
int3
call
lret
push
inc
dec
push
or
or
cwtl
jp
shll
jg
dec
mov
out
lds
pop
mov
push
pop
lea
movsl
inc
out
push
cmpsb
orb
ret
hlt
sub
ds
mov
test
sbb
pop
mov
stos
adc
inc
sti
xlat
adc
mov
cmc
aad
or
dec
loopne
es
inc
jp
mov
push
push
cwtl
or
jle
and
jl,pt
out
and
add
lahf
test
push
push
jb
mov
das
cmp
jmp
mov
rcrb
stos
shll
jo
push
mov
gs
mov
mov
jl
bndldx
cmpsl
sbb
cmp
mov
pop
sbb
fsubrl
cwtl
inc
iret
sub
das
cmp
push
pop
mov
mov
push
scas
mov
ljmp
notl
or
xchg
lahf
cli
adc
lahf
mov
dec
hlt
cmpsl
shll
inc
cmp
subl
mov
dec
and
xchg
leave
and
mov
cmp
xchg
jno
xlat
clc
pop
xor
imul
outsl
xor
jp
push
cmp
xchg
lods
inc
xchg
ds
pushf
sar
fwait
ja
and
out
das
and
out
mov
xchg
inc
les
mov
mov
scas
inc
loope
outsl
mov
push
test
shlb
cmp
movsb
mov
cld
repnz
pop
xor
movsw
aas
loope
adc
inc
test
mov
lock
adc
aaa
andl
sbb
fldt
adc
xchg
out
sbb
xchg
pop
out
jmp
mov
cmc
jmp
fcomps
push
inc
movsb
cmp
jno
mov
stos
xor
fnsave
aam
sub
imul
inc
in
jae
arpl
xor
mov
jge,pn
enter
in
lahf
and
xlat
and
xor
cmc
fcomps
mov
push
and
adc
int
inc
fdivs
pop
test
add
pop
daa
lock
mov
jg
gs
or
stc
sub
push
addr16
addl
std
mov
cmp
or
mov
push
lock
orb
stos
orb
mov
or
inc
inc
test
mov
pusha
into
push
add
dec
pop
push
mov
sahf
push
or
xor
or
xchg
stc
add
or
cli
pop
aaa
or
rcll
test
push
lock
sbb
cmp
sub
ret
js
sub
int3
and
xchg
aas
add
lahf
rep
repz
in
push
hlt
adc
orb
mov
mov
cmp
aas
cmpsb
adc
push
outsl
add
and
adc
pop
stc
xchg
adc
daa
pop
mov
dec
xchg
sbb
mov
and
js
sub
leave
pop
lret
movsl
sub
das
or
mov
mov
mov
or
mov
lcall
shll
iret
in
pop
sti
dec
imul
and
mov
imul
test
push
jl
cmp
or
cmp
push
outsb
mov
shlb
push
cwtl
jae
into
sbb
sbb
bound
jnp
test
jecxz
icebp
pop
sahf
jno
bound
fcmove
iret
mov
push
pop
adc
jae
gs
fistl
cmp
popa
loopne
jmp
repnz
push
pop
scas
addb
sub
ret
mov
jbe
inc
ret
repnz
pop
cli
fwait
jmp
sub
adc
into
mov
xor
pop
mov
ljmp
insl
xlat
inc
lret
pop
std
cmpl
add
outsb
xchg
pop
add
xchg
cltd
push
fs
xor
or
sahf
inc
stos
jecxz
int3
and
jae
aaa
int
mov
pop
popf
xor
std
mov
pusha
dec
movsl
or
cmp
cmp
es
cwtl
pop
pushf
iret
aad
inc
inc
jecxz
inc
xchg
ljmp
xchg
scas
mov
in
dec
sarb
out
call
dec
xchg
outsl
sub
push
imul
inc
cs
adc
cwtl
addr16
pusha
gs
bound
es
mov
stos
mov
fidivs
push
jns
sarb
mov
sub
fstpl
and
adc
sbb
nop
aas
bndstx
out
jb
insl
jbe
pop
rcrl
dec
cmp
push
test
stos
inc
jno,pn
lret
outsb
out
jl
push
rcrb
test
insb
call
adc
pop
repnz
out
or
push
jmp
mov
sbb
inc
fs
ficompl
arpl
jmp
mov
xor
jecxz
cmpsl
outsl
out
xlat
add
jge
js
or
jmp
mov
sahf
icebp
and
sub
outsb
scas
mov
xorb
mov
pop
mov
xchg
divb
push
xchg
rcll
gs
inc
test
cmp
outsl
mov
lock
stos
pop
add
sahf
pop
push
dec
cmp
add
leave
jo
pop
out
mov
shrl
xchg
gs
repz
fisubrl
sahf
inc
sbb
test
outsl
dec
and
jle
notl
jge
mov
push
or
mov
push
mov
add
dec
xor
into
sbb
mov
stos
lods
enter
mov
jl
pop
pop
sbb
inc
mov
or
mov
adc
std
lds
sahf
or
mov
add
sbb
xlat
inc
jo
pop
jge
add
push
and
jle
mov
sti
mov
cmc
xchg
mov
pop
mull
add
mov
push
imul
jns
lods
jo
stos
test
push
test
out
mov
dec
icebp
into
je
mov
ja
or
cld
xchg
pusha
addb
loopne
insb
into
cmp
jg
jecxz
adc
xlat
sub
xchg
xor
push
lods
jno
out
add
or
cmp
push
push
outsb
adc
push
mov
push
data16
sbb
fnstsw
mov
jl
scas
cmp
mov
cmp
fcomi
mov
mov
jg
je
xchg
test
cmp
jnp
insl
ss
pop
inc
dec
pop
pop
ja
mov
mov
jae
subl
out
jmp
cmp
dec
dec
test
mov
xchg
cmp
pop
paddb
test
mov
js
faddl
in
xor
dec
ja
rcll
repnz
insb
sahf
mov
xchg
adc
push
fbld
scas
pop
mov
test
fwait
lock
loopne
roll
add
push
and
arpl
repz
pop
adc
xchg
lret
sbb
pusha
ja
aaa
xchg
xchg
push
cmpsb
dec
mov
mov
jecxz,pn
sub
rolb
xlat
xchg
push
jle
lock
insl
insb
fwait
lods
ljmp
inc
std
cmc
xlat
insl
and
push
jo
movsb
fisttpll
in
inc
jb
xorb
rclb
jmp
adc
call
movsl
add
mov
dec
mov
xchg
pop
mov
sti
mov
cmp
jmp
shl
add
rcl
std
pop
mov
jno
mov
inc
lea
mov
push
and
mov
sbbb
xor
and
jnp
inc
shl
addl
fldcw
lds
mov
mov
sarb
pop
mov
out
xchg
jno
xor
test
and
xor
or
or
jl
out
mov
sub
mov
dec
jle
mov
call
inc
fwait
pop
pop
fcoml
test
xchg
pop
enter
pop
dec
je
jmp
rolb
test
jecxz
fnstsw
sbb
xchg
imul
ds
dec
lds
dec
lahf
sub
sub
xchg
enter
cld
cmpsb
xor
test
xchg
mov
push
pusha
pop
into
repnz
mov
inc
cltd
imul
add
mov
lret
sub
pop
jg
nop
fildl
in
push
filds
movsl
cmc
daa
lods
pop
rolb
push
out
mov
inc
xchg
mov
mov
lods
mov
jno
popf
xchg
and
test
mov
xor
testb
jp
cmp
or
sahf
mov
xorb
push
imul
sub
add
mov
or
sbb
xchg
jo
stc
dec
mov
or
jp
outsl
mov
pop
loop
ja
add
adc
enter
es
push
push
lahf
xor
adc
sbb
cmp
das
add
inc
pop
push
dec
or
stos
je
hlt
mov
mov
mov
dec
inc
dec
cmp
mov
jl
xchg
out
jno
xchg
pushf
xchg
mov
inc
dec
roll
inc
addr16
mov
push
rcrl
loopne
shl
pop
add
mov
pusha
or
lock
sbb
push
jb
xchg
jo
repnz
jno
jge
das
dec
call
or
fisttps
sahf
and
std
sub
sbb
jo
or
stc
xorb
ljmp
xor
push
push
dec
xlat
adc
sub
mov
test
lods
jge
push
dec
das
in
push
mov
jnp
pop
sbbb
xchg
mov
aaa
lret
mull
shrl
cmp
sub
xchg
loop
cli
mov
pop
rorl
ret
xor
outsl
inc
in
xchg
jnp
mov
ficoml
mov
loope
mov
int3
leave
xorl
pop
lahf
cmpsb
jo
mov
lea
mov
repnz
popa
and
std
cmp
insb
popf
xor
aaa
push
lock
ja
sub
cmpsb
lock
icebp
mov
mov
sub
inc
and
std
inc
and
push
mov
push
xchg
mov
cwtl
mov
xor
push
xchg
sub
int
divb
nop
insl
aas
xchg
pushf
cmpsb
lds
push
in
mov
and
sub
dec
scas
mov
data16
mov
inc
daa
and
pop
pop
scas
cmp
mov
or
sar
mul
xchg
lret
mov
imul
scas
jbe
notb
push
mov
bswap
jo
mov
pop
mov
sti
add
arpl
arpl
adcl
add
sbb
or
or
rorl
xor
stos
cmp
adc
rorl
sub
in
mov
push
cmpb
mov
jo
bound
and
mov
in
bound
ds
sti
and
outsb
cmc
popf
sub
add
push
push
push
nop
aas
loope
push
fs
inc
dec
and
jo
mov
xchg
loopne
sub
sub
and
and
mov
ror
xchg
jae
inc
jmp
and
jnp
je
loopne
clc
mov
mov
jne
mov
push
lahf
clc
scas
xchg
sbb
enter
inc
jno
shll
xor
inc
xor
jae
dec
rcrl
jbe
inc
rcl
fldl
dec
loopne
sti
mov
jg
cmp
adc
xchg
pop
lcall
sbb
jl
mov
dec
test
enter
jle
cmp
clc
mov
jge
xchg
sub
push
daa
cmpsl
clc
adc
testb
enter
xlat
inc
test
stos
lea
imul
push
sub
dec
inc
inc
sbb
mov
dec
and
push
add
addr16
lock
jno
fs
loope
shl
xor
sbb
pop
movsl
cwtl
xchg
xchg
sub
movsb
ja
dec
xor
mov
adc
insb
xor
out
imul
inc
push
add
psubusb
rcrl
cmp
pusha
repnz
shrb
fprem1
loopne
imul
dec
lea
sbb
dec
movsb
mov
leave
ffreep
xchg
push
shrl
dec
dec
xchg
xlat
out
ljmp
xor
and
inc
lcall
pop
cli
sub
shl
xchg
repz
iret
pop
cmp
int
icebp
sbb
adc
dec
jne
add
jg
lahf
adc
mov
aas
sar
outsb
pop
xchg
push
push
cmpsb
repz
push
je
and
outsb
push
pop
stos
xchg
fnstenv
outsb
push
push
sbb
cmp
cld
inc
xchg
adc
mov
cmpsl
test
or
or
and
cld
mov
cmp
shrb
mov
mov
repnz
daa
mov
dec
insl
in
movsl
adc
sub
jp
out
jecxz
lcall
in
iret
pop
dec
adc
data16
sbb
leave
pop
xor
test
push
mov
or
mov
push
ja
pop
and
push
adc
sbb
cmp
mov
and
mov
add
jno
pop
adc
mov
lret
cmp
addl
into
xlat
pop
pop
or
cmpsb
xchg
jbe
push
mov
dec
lods
or
stos
and
sbb
mov
dec
or
pop
aas
subl
sub
sbb
leave
pop
scas
aaa
push
inc
movsb
ret
cld
decl
jae
sub
adc
fwait
sahf
push
jbe
jo
dec
clc
in
jb
sahf
cmpsl
adc
jmp
mov
aad
sub
xchg
es
mov
or
ret
arpl
pop
addb
sbb
test
pop
out
push
scas
leave
and
lahf
lcall
stc
icebp
jmp
and
int
lret
imul
inc
dec
das
push
nop
ret
in
inc
loop
fnsave
sub
ds
lahf
mov
and
loop
loopne
test
pushf
push
nop
mov
dec
add
in
pop
xchg
scas
jae
in
adc
popa
or
mov
jno
cld
add
sub
inc
les
popf
jae
add
adc
je
xchg
push
jg
and
inc
idiv
xor
or
pop
xor
jnp
mov
inc
addr16
inc
add
inc
ds
shll
test
stos
pop
idivl
leave
sub
clc
add
push
mov
mov
sbb
aas
push
std
int3
repnz
dec
ja
mov
hlt
mov
shlb
jae
add
repnz
pop
mov
cmc
fadds
gs
fisubrs
pop
pop
adc
in
loop
mov
in
fs
add
sub
and
or
ljmp
pushl
xor
arpl
test
xor
pop
sub
add
xchg
sub
xchg
adc
add
insb
push
sti
movsb
pop
push
std
mov
xor
pop
in
mov
ret
push
movsl
add
pop
jg
aam
adc
and
sti
jo
rclb
into
pop
and
cmpsl
mov
test
data16
daa
int3
push
or
sub
push
mov
mov
repnz
xchg
cld
sbb
pop
add
mov
mov
jo
and
inc
inc
leave
in
mov
mov
sub
xchg
inc
popf
sub
mov
cwtl
insl
ja
int3
dec
pop
push
xchg
or
pop
mov
aam
cmp
fmuls
mov
add
mov
push
mov
jne
mov
das
gs
ds
adc
jp
xchg
pop
cmp
das
pop
xor
pop
es
es
aad
pop
mov
push
mov
mov
sub
mov
fs
jp
xchg
pusha
inc
repnz
mov
or
jnp
lret
sarb
std
mov
aad
icebp
pop
xrelease
repnz
or
push
call
mov
jge
jo
mov
inc
sbb
jnp
xchg
loop
sahf
xchg
xor
ret
das
es
mov
inc
lcall
adc
sub
mov
mov
xor
shrl
lcall
int
adc
fists
jmp
push
mov
enter
sub
mov
mov
adc
mov
pop
insl
lret
xchg
jne
pop
aas
lcall
pop
xchg
and
subb
ret
sarb
and
cmp
inc
jp
pop
inc
dec
mov
cltd
lods
add
lods
mov
adc
iret
sub
inc
lds
mul
adc
lods
lea
pop
int3
cltd
add
adc
dec
ss
icebp
mov
cli
and
dec
or
jmp
xor
cs
or
xor
sub
mov
sbbb
incb
mov
pop
mov
lea
jl
cs
aam
dec
or
jns
add
mov
mov
incb
sahf
inc
nop
cmp
lret
adc
or
inc
xchg
adc
and
psrlq
rcr
adc
jb
pop
lret
mov
mov
xor
adc
mov
hlt
lret
loop
mov
mov
dec
cwtl
pop
push
in
lret
xchg
inc
lcall
mov
adc
lret
ja
xor
mov
out
cmp
dec
add
inc
or
mov
ficompl
testl
out
fadd
push
mov
push
call
call
xchg
xchg
int3
bound
jnp
mov
mov
adc
ds
movsl
ret
xor
sub
xchg
xor
dec
jns
mov
inc
mov
dec
imull
in
fisubl
decl
lret
adc
jle
lret
mov
sbb
fucomip
ja
cwtl
lock
cli
mov
adc
mov
xlat
sbbb
add
and
out
test
sbb
mov
pop
movb
aad
or
insl
cmp
in
jo
xor
loopne
xorl
out
inc
lock
add
push
xor
rorb
pop
jbe
into
xchg
dec
test
and
add
out
jge
rcll
dec
and
je
pop
daa
adcb
pop
or
call
ficoml
and
call
adc
std
inc
sbb
movsl
adc
push
rcrb
aad
ficoml
inc
xchg
int3
pop
aad
dec
add
inc
aam
lret
pop
inc
push
jno
ret
movsl
push
and
mov
fbld
cmpsl
mov
repnz
mov
lock
or
adc
xchg
ja
data16
rorl
pop
fildll
xchg
dec
shlb
lods
mov
pop
push
pusha
shl
pop
dec
cmc
jge
cld
aaa
or
je
fdivrs
sbb
cmp
xor
leave
stc
lods
adc
sub
jns
loopne
push
jmp
xchg
ljmp
repz
cmpsb
sti
sbb
xchg
nop
push
out
ss
mov
imull
jnp
cld
dec
xor
sti
gs
pop
or
dec
add
xor
jnp
stos
cmc
pushf
and
out
clc
add
js
out
ret
in
jo
daa
jmp
xlat
or
ljmp
jbe
push
shlb
inc
in
push
scas
cmp
das
sbb
in
aaa
cmp
xchg
scas
push
in
and
int3
lret
push
and
pusha
mov
imul
aad
push
stos
pop
push
insb
adc
jo
pop
sbb
movb
or
fwait
nop
xor
jo
int
pushf
jmp
cmpsl
pop
test
xchg
mov
hlt
pusha
mov
jne
sub
adc
mov
cwtl
pusha
mov
lret
lcall
push
out
jge
jnp
push
fiaddl
int
mov
pop
popa
lea
outsl
popl
jae
xchg
jp
jmp
push
insl
test
push
sub
add
dec
add
xlat
add
int
mov
psubb
ds
sbb
xor
sbb
aad
mov
or
cmc
lcall
push
and
cwtl
in
rcrb
imul
sub
sub
test
sbb
pop
cmp
xor
add
sti
mov
dec
stos
repz
cmp
cmc
add
xor
stos
dec
adc
xchg
cmp
sbb
push
mov
push
test
and
or
aam
inc
int
in
ss
cmp
pop
ss
leave
push
cwtl
mov
cld
sbb
mov
lahf
or
int
dec
jno
sbb
pop
xchg
sbb
mov
rcl
sub
mov
out
mov
and
aas
js
xchg
mov
xchg
mov
or
mov
inc
sahf
inc
out
xchg
cmpsb
movsb
sarl
cmp
xchg
dec
sbb
xor
sbb
xor
and
test
mov
adc
cs
pusha
ds
dec
lahf
push
aaa
jge
movsl
leave
outsl
mov
or
adc
aam
dec
divl
or
movsb
pop
or
sbb
cs
mov
cs
pop
adc
mov
push
dec
xorl
and
movsb
in
xchg
adc
idivl
xor
int
jecxz
mov
xchg
adc
fidivrl
lret
push
fdivs
bound
int
mov
hlt
in
cli
insb
mov
imul
mov
testb
dec
mov
addr16
test
and
mov
pusha
push
push
xor
cmpb
andb
mov
dec
dec
adc
inc
aad
jp
xlat
leave
jo
pop
adc
repnz
cmp
push
jg
sub
ficompl
xchg
popf
xchg
cmp
fsts
jne
js
cli
mov
pop
popa
inc
mov
and
push
rcrb
sub
stos
jne
xor
icebp
jge
aad
inc
popa
cli
inc
es
testb
ret
or
test
sbb
jg
push
adc
ja
and
test
pop
sbb
mov
fnstsw
inc
xchg
sub
jl
cmp
inc
push
sub
ret
push
bound
sahf
cmpsl
mov
rorl
sbb
icebp
or
int3
xchg
in
fsubrl
sbb
out
pushf
push
cmp
ret
sub
mov
out
inc
pop
sub
orl
daa
cmpsl
inc
aaa
sbb
cli
mov
cli
inc
cmp
mov
int3
jge
std
mov
movsb
cld
mov
sar
cmp
or
stc
jbe
ss
adc
pop
add
inc
push
ja
addb
fdivs
cmpsl
xor
fcoml
add
int
pop
jo,pn
add
int
add
pop
loop
push
push
push
xor
lods
push
push
jae
je
testl
sbb
repnz
mov
icebp
ret
mov
jbe
loope
ljmp
sub
add
jae
shrl
push
jle
rcrb
cmc
or
repnz
xor
bound
adc
mov
out
faddl
xor
repnz
jnp
add
mul
jno
lock
lret
or
lods
mov
je
xchg
sahf
mov
in
les
add
xchg
push
push
xor
xlat
mov
or
jbe
sbb
jecxz
stos
icebp
in
outsl
pop
fldcw
inc
jmp
push
movsl
mov
adc
mov
das
sub
mov
in
mov
push
lods
or
lret
lock
test
fwait
repnz
imul
xlat
fwait
dec
jns
sbb
test
stos
xchg
rol
ficoml
sarb
jno
sbb
divb
sbb
lret
push
std
mov
into
add
je
cltd
mov
jbe
ljmp
xor
fnstsw
repz
fsubl
mov
cli
cltd
sbb
aad
inc
add
mov
in
add
jno
js
mov
mov
push
les
mov
movsl
loope
enter
mov
jns
cmp
inc
pop
je
push
pop
inc
xchg
push
pop
fnsave
inc
dec
cmp
sub
jae,pn
inc
push
mov
in
cmp
adc
inc
jge
stos
dec
pop
sbb
scas
std
pop
insl
inc
pop
jns
push
add
ret
into
lret
cmpsl
dec
sbb
cltd
add
push
inc
jno
xchg
mov
adc
cwtl
out
fwait
cli
cmc
cmc
mov
mov
xlat
in
jns
out
or
cmp
pop
jns
inc
or
cmc
adc
dec
std
sbb
movsl
out
fiadds
lea
call
inc
dec
fsubrl
pop
xchg
orb
inc
iret
inc
mov
sbb
sbb
mov
ljmp
push
mov
movsb
xlat
lahf
mov
insl
das
mov
vpxor
pop
iret
sbb
add
or
fiaddl
iret
fdivl
push
xlat
adc
mov
js
dec
hlt
lds
mov
add
ret
push
pop
sbb
mov
push
in
mov
mov
mov
stos
add
inc
stc
lret
aad
adc
dec
mov
jle
adc
mov
call
and
cmp
adc
mov
dec
repnz
or
lds
mov
jbe
ss
pop
push
dec
lods
leave
push
xor
jmp
xchg
mov
xchg
std
dec
ret
dec
push
in
fprem
jno
ficompl
mov
or
mov
test
ss
and
xlat
fisttps
pop
fistpll
inc
incb
fstpt
in
fbld
lods
js
in
cmpsl
dec
pushf
mov
cmp
in
lds
xor
xchg
test
aas
dec
ss
sbb
inc
inc
repz
out
cs
ljmp
fadd
xor
notb
mov
xlat
sbb
das
or
test
xor
pop
rcrl
add
ja
cmpb
sub
adc
dec
jns
mov
push
imul
popf
mov
pop
ret
scas
push
jmp
mov
push
icebp
mov
inc
sub
loop
or
xchg
mov
push
mov
cmp
add
xlat
xchg
sahf
pop
cli
push
mov
fisubl
mov
ss
mov
test
dec
lods
stos
xchg
vpavgw
jns
or
in
jnp
cmp
push
lcall
jns
loop
std
rcl
test
outsb
out
clc
jnp
mov
imul
sub
shll
dec
aad
ja
testl
nop
sahf
jp
jne
jge
mov
push
xchg
popf
cld
insb
mov
add
fadds
mov
shlb
das
test
add
test
mov
push
imulb
push
cmp
and
bound
shrb
out
inc
push
cli
daa
ret
addr16
mov
orb
mov
push
dec
mov
and
sub
mov
cbtw
ret
adc
int3
jp
fcomps
mov
fs
shrb
outsb
mov
mov
jl
ret
pop
mov
push
inc
out
and
out
lcall
scas
and
xchg
sub
mov
cmp
stos
inc
xor
adc
sarl
aad
cld
shl
ret
mov
push
add
push
or
mov
cs
cwtl
xor
sbb
add
add
shll
pushf
popa
rcr
cmp
mov
add
insb
push
cmpsl
pop
xchg
into
lods
std
fildll
cmp
cld
icebp
nop
repz
and
mov
addr16
rcll
mov
jns
mov
mov
lods
add
mov
dec
xorl
shrb
mov
out
push
jbe
subb
mov
mov
xor
mov
jbe
shll
int3
clc
mov
insl
rclb
pop
jnp
int
fs
test
adc
sub
outsl
cwtl
in
movsl
and
frstor
adc
or
adc
lds
adc
fwait
pop
ret
ss
cmp
mov
dec
popa
roll
push
lret
enter
sub
testb
ljmp
shll
sti
adc
out
sarb
fisubs
lcall
inc
call
pop
add
outsl
or
ret
cvtps2pi
pop
fmuls
jl
xchg
pop
daa
sub
xchg
shrl
js
adc
or
loopne
insb
pop
mov
cmpsl
xchg
push
and
imul
or
sub
lret
rcrl
push
and
push
add
mov
movsl
pop
jo
out
out
andl
xor
pusha
pusha
lcall
ret
sub
cmp
mul
mov
scas
jle
dec
push
xor
aam
fwait
and
rclb
and
mov
sbb
lods
mov
xor
shrl
lods
xchg
shl
xor
inc
movb
adc
mov
daa
fs
test
inc
outsl
scas
sbb
nop
xchg
jp
sarl
lods
jne
pop
sahf
or
add
dec
mov
pop
xlat
mov
or
xchg
sbb
enter
daa
adc
in
xor
aad
mov
and
in
out
aam
and
testl
or
cli
mov
aaa
pop
add
jo
out
or
imul
mov
push
mov
push
adc
out
popf
or
jmp
rorl
add
push
or
xchg
pusha
ds
and
dec
pop
mov
and
int
and
jnp
jnp
out
sub
and
mov
sbb
pop
filds
adc
push
cmp
cmpb
scas
mov
negl
testb
push
adc
fwait
jecxz
push
mov
fimuls
or
add
dec
lods
add
sahf
adc
mov
fcomps
ja
pop
pop
fsub
scas
mov
sub
out
xchg
mov
ss
lret
enter
jo
test
into
gs
adc
fs
or
jbe
jp
into
lea
loopne
scas
cltd
icebp
lret
mov
insb
sbb
xlat
or
xor
popf
enter
sbb
dec
cli
out
jae
or
dec
call
movsl
xchg
dec
jg
adc
in
scas
notl
or
push
dec
jb
push
or
imul
push
xchg
mov
push
cmc
pop
mov
aas
in
ret
push
cwtl
mov
pop
repnz
adc
inc
jl
shl
adc
dec
pop
pop
fimuls
cwtl
into
sbb
cmp
lea
incb
ja
je
dec
jne
test
fwait
adc
push
jge
cwtl
mov
pop
jg
xchg
jl
pushf
xlat
and
ret
xchg
mov
stos
and
mov
sub
test
push
push
cld
scas
jg
movsl
test
mov
jno
jbe
int
int
inc
sbb
dec
std
pusha
lahf
jno
mov
les
movsb
cmc
jne
pop
mov
aaa
icebp
cwtl
test
or
cmc
dec
cld
push
lret
aad
inc
dec
mov
outsb
mov
mov
movsl
adc
std
jle
popa
cvtdq2ps
int
mov
in
ds
fldt
inc
insb
cli
push
push
outsl
pop
inc
outsl
dec
arpl
push
jnp
xchg
pop
xorb
fnstsw
cmp
out
test
jl
mov
sub
cmp
jno
sahf
inc
jb
xchg
mov
mov
popa
sbb
mov
mov
and
repz
imul
mov
mov
cmp
out
or
out
cs
mov
repnz
cmp
xchg
jno
mov
mov
mov
iret
jmp
fs
mov
pop
and
popa
xor
xchg
mov
mov
jno
dec
out
dec
mov
aas
sbb
jg
sbb
std
and
test
mov
mov
pop
or
scas
push
popa
call
mov
imul
scas
sbb
xchg
cltd
pop
jp
js
jo
test
mov
stc
inc
jae
bound
sbb
enter
mov
and
mov
push
mov
xchg
jnp
sbb
shl
jbe
insb
add
test
jg
mov
pushf
pop
mov
mov
stos
adc
add
into
das
xor
cmp
xchg
shll
test
cli
je
pop
sbb
scas
shll
xchg
loop
jbe
inc
jg
stos
xor
imul
mov
aad
ds
pushl
mov
dec
sarb
adc
mov
xorl
enter
inc
int3
or
in
sarb
leave
pusha
outsb
dec
push
out
pushf
out
push
xor
loop
std
je
xorb
std
and
mov
mov
xchg
insl
pop
cmp
sbb
pop
lahf
jno
push
outsl
pop
je
sbb
pop
movl
jae
and
mov
fcoms
ja
fwait
sbb
aas
mov
es
fdivs
push
pop
mov
cwtl
fidivs
hlt
cmp
cltd
and
mov
jg
rolb
stos
lds
cmpsb
movb
push
ljmp
repnz
fld
xchg
cltd
mov
adc
pop
pop
test
xchg
sbb
dec
ret
push
icebp
ljmp
mov
data16
cmp
jno
shrl
pop
pushf
clc
out
inc
stos
mov
lret
ja
lds
loop
pop
ss
bound
call
loope
xor
push
pop
adc
ss
clc
loop
xorl
and
add
ss
cwtl
and
arpl
js
mov
lea
push
movsb
sub
movsb
andl
mov
hlt
sbb
and
stc
inc
xor
add
push
sub
out
adc
sbb
cmp
push
pop
in
or
xor
pop
sbb
xor
mov
add
xlat
adc
xchg
icebp
mov
je
xor
insb
aas
mov
add
dec
pop
add
scas
mov
jg
imul
aad
pop
cs
stc
mov
inc
jo
xchg
mov
dec
xchg
inc
and
scas
into
push
addr16
hlt
inc
aad
cmc
inc
pop
mov
pop
push
mov
testb
push
adc
loop
lcall
lods
adc
dec
cmp
hlt
mov
mov
sti
push
es
jbe
mov
and
es
jecxz
or
sbb
icebp
mov
pop
rcrb
cmp
lods
jmp
or
push
mov
js
mov
push
mov
out
jbe
inc
cmp
lods
stc
sub
mov
mov
jnp
cmp
std
cmp
push
mov
and
jp
cmp
into
cwtl
mov
push
add
pushf
push
push
outsb
jle
and
sbb
inc
fisttps
rolb
pop
mov
xor
lret
xor
adc
ret
imul
popa
dec
cmp
add
mov
xchg
enter
iret
xchg
xor
mov
sbb
cmp
xchg
aas
fisubrl
push
cmpsl
inc
int3
dec
pop
fldl
mov
testl
leave
adc
imul
adc
ds
mov
out
xor
ljmp
rol
inc
mov
mov
sub
dec
dec
sub
jnp
cmp
rcrb
repnz
bound
inc
jg
mulb
xchg
add
iret
inc
adc
pop
nop
jle
or
sub
sub
sub
ljmp
jmp
std
stos
jne
test
ret
cmc
je
sahf
rcrb
adc
adc
test
sbb
adc
mov
popf
jns
jno
xor
jne
fstl
test
xchg
dec
es
dec
or
pop
pop
movsb
mov
pop
aad
sbbb
xor
call
inc
stos
dec
jne
mov
cs
dec
in
push
outsb
push
push
call
loope
pop
scas
mov
lods
test
punpcklbw
mov
int3
push
xor
sbb
and
jbe
les
mov
enter
test
dec
loop
test
test
cmp
enter
xor
mov
lock
xor
xchg
stc
cltd
subl
aad
leave
push
repz
addr16
call
lock
mov
push
enter
push
push
dec
pushf
pop
notl
ljmp
xchg
dec
inc
lret
xor
sbb
add
aaa
push
mov
adc
sub
in
push
push
jmp
sahf
fwait
mov
aas
cmp
pusha
lods
xchg
mov
xchg
ja
jg
lods
xor
cmp
scas
add
in
adc
loop
mov
push
imull
jl
mov
and
ljmp
adc
ss
ja
and
pusha
jne
pop
loopne
jae
or
shlb
cmp
lret
sbb
cmpsb
push
data16
sub
xchg
imul
pop
xchg
ja
pusha
js
push
ss
jns
push
pop
ja
pop
inc
arpl
mov
arpl
pop
xchg
pop
pop
jle
xchg
jecxz
rcrl
dec
sbb
mov
adc
outsl
jl
push
loope
shl
inc
rcll
pop
bound
and
xlat
sub
pop
pop
dec
arpl
push
pop
pop
xchg
aas
leave
sahf
arpl
testb
cmpsl
gs
test
cmpsb
ret
mov
or
pop
test
out
pop
leave
negb
ljmp
or
jns
lahf
cli
fbld
xchg
jg,pn
mov
jbe
ret
decl
push
dec
push
imull
std
jp
ret
add
repz
scas
push
imul
mov
scas
mov
jns
sbb
imul
dec
mov
lods
mov
xchg
scas
jge
jge
repnz
add
or
sub
or
xchg
dec
loope
xchg
sub
xchg
test
rclb
testl
pop
movsb
aad
dec
je
push
mov
mov
inc
leave
or
daa
adc
or
mov
mov
push
cwtl
movsl
jmp
test
mov
arpl
mov
mov
cld
in
push
and
and
xchg
adc
mov
or
movsl
mov
jmp
mov
xorb
fisubrl
in
cmp
and
imul
lods
fidivl
push
int3
ljmp
pusha
dec
es
mov
mov
lods
cmpsl
cwtl
jns
cs
das
push
call
add
or
and
int3
fsts
or
notl
xchg
lea
xor
movsb
sub
leave
mov
nop
inc
lcall
add
shr
sub
out
mov
add
xchg
popa
mov
pusha
je
fadd
dec
mov
loop
in
int3
lret
mov
fstps
jns
mov
mov
in
xchg
and
add
push
jne,pn
pop
out
mov
mov
divl
jl
push
rolb
xchg
ret
xchg
sub
shrb
outsl
test
sbb
loope
xor
addr16
adcw
mov
aaa
pminsw
xchg
imul
or
imul
test
je
xchg
mov
mov
cmp
mov
mov
push
fcomps
test
mov
imul
neg
push
mov
cld
shll
jp
loopne
push
addr16
arpl
repz
jno
add
pop
mov
and
es
in
stc
stos
sbb
dec
jbe
add
aad
aam
adc
adc
lahf
fwait
xchg
cmp
test
mov
ret
mov
test
adc
aas
push
jge
inc
mov
and
mov
insl
dec
adcl
mov
or
mov
mov
xchg
inc
sbb
shlb
pop
cwtl
rorl
insb
adc
movsl
mov
and
mov
push
clc
dec
xchg
mov
and
mov
dec
in
loopne
mov
in
shll
cmpsb
ljmp
in
sub
mov
call
mov
xorl
push
dec
xchg
push
lret
std
popf
out
shrb
nop
movsb
inc
outsl
imul
mov
das
ljmp
insl
pop
test
jmp
rcr
mulb
outsb
icebp
sbb
cmp
sub
repz
push
ja
inc
adc
movb
push
out
cwtl
sub
stos
jl
enter
cli
sbb
xor
jmp
xor
sub
dec
xchg
scas
insl
not
lcall
mov
out
fsubl
xchg
sarb
aaa
in
iret
mov
lcall
mov
outsb
sub
xchg
les
pushf
xchg
lds
arpl
xor
test
pop
inc
add
fcmovu
mov
mov
xchg
jne
loope
nop
push
mov
add
pavgb
xor
ja
cltd
push
in
das
adc
jns
add
jl
sbb
or
shl
sbb
jg
call
mov
jo
xchg
jl
mov
xchg
pop
adc
test
and
mov
shlb
mov
in
shrl
and
and
push
add
cmpsl
in
adcb
adcl
mov
jbe
rcrl
imul
pushf
nop
pop
inc
push
cmp
sti
mov
mov
jbe
push
sti
push
xchg
out
xacquire
adc
rcrl
mov
repz
andl
cmpsb
jo
js
pop
sub
mov
outsl
in
mov
push
repnz
fimull
fsubrl
add
push
sub
das
sub
inc
inc
xor
test
icebp
stc
rcrl
sahf
ret
sti
fs
cmpsb
jns
sub
ljmp
and
sbb
enter
mov
sub
sub
mov
push
lods
inc
lods
jbe
mov
jecxz
js
or
xlat
dec
insb
mov
int3
xchg
pop
out
mov
fs
bnd
xchg
mov
xlat
fidivl
lods
mov
es
clc
ret
pop
test
push
jo
mov
out
cwtl
arpl
inc
subl
add
xchg
mov
in
pop
jno
inc
mov
xchg
insl
pop
cli
pushl
push
lcall
or
add
cmp
pop
sbb
cmc
add
mov
pop
test
addr16
adc
sahf
dec
cmp
loop
ja
lods
add
pop
icebp
jp
out
mov
outsl
xchg
cld
xchg
push
movsb
push
mov
mov
jb
out
test
pop
ja
popa
and
mov
in
mov
jp
or
fists
jecxz
loop,pn
stos
cmp
rorb
or
jg,pt
rclb
mov
jl
lock
add
mov
cli
jmp
outsl
dec
pop
push
ljmp
ljmp
sub
sti
pop
sbb
xchg
jno
movb
xchg
or
stos
ja
push
or
sbb
addr16
testl
rorb
jg
int
dec
repnz
push
dec
mov
imul
add
insb
scas
sarb
js
fadds
mov
scas
mov
inc
stos
dec
outsb
gs
add
imul
ss
push
pop
mov
jno
pop
xchg
mov
push
cmp
inc
out
js
xor
cmp
jecxz
push
test
add
cmp
mov
pop
sti
addb
aaa
divb
cmp
push
das
cli
add
cmp
push
mov
fildll
jmp
and
sub
int
jle
adc
popl
pop
imul
pusha
insb
xchg
or
bound
ret
sub
jge
dec
in
pop
pop
jle
adc
pop
repz
jne
fistps
cld
mov
ret
mov
cli
mov
inc
sarb
mov
or
or
push
je
arpl
testb
hlt
daa
call
cmp
in
and
outsb
mov
add
mov
imul
popf
xchg
js
fsubrs
push
inc
cmp
adc
jae
sub
xor
nop
andl
xchg
mov
mov
fs
int
and
cli
inc
imull
in
xchg
adc
ss
repnz
jmp
mov
adc
in
push
test
stos
jno
mov
cli
bound
inc
sbb
into
into
sub
mov
nop
push
sti
pop
mov
shrb
int
sbb
xchg
rcl
dec
xchg
loop
push
fsubl
jbe
int
sub
cmc
adc
adc
lock
je
inc
xor
bound
add
es
shrl
cmp
xchg
push
leave
mov
cmp
push
movntq
or
add
fldcw
insl
inc
cld
xorl
and
xor
ja
repnz
sbb
pop
inc
mov
enter
add
rcrb
rol
out
cmp
test
dec
data16
in
gs
jge
fs
or
jae
pop
push
pop
ja
cmpsl
int
test
jb
leave
push
sar
mov
xor
das
repnz
sbb
jns
in
and
push
mov
adc
ficoml
enter
add
mov
sub
cmp
or
iret
jbe
push
in
mov
repnz
dec
and
stos
in
jo
adc
pop
ficompl
and
cmp
mov
jg
sbb
mov
cmp
mov
sbbb
popa
jno
jnp
clc
sub
jb
test
dec
jecxz
sarl
data16
xor
in
test
jle
mov
movsb
xor
cmc
lcall
cmp
mov
adcb
push
jl
out
std
cmpsb
fwait
sbb
or
push
jb
push
jecxz
jns
jo
cwtl
pop
pop
mov
pushf
call
jge
add
cmp
imul
decl
cmpsb
or
push
sbb
testl
stos
cmpsl
fsin
jb
fwait
mov
mov
or
sbb
in
int3
and
nop
xor
test
pop
inc
xor
leave
sbb
push
xlat
fimull
mov
cld
or
lcall
sbb
xchg
addr16
and
add
xchg
jecxz
jb
lret
loop
add
xchg
mov
shlb
adc
jb
mov
mov
adc
repz
or
fisubrl
pop
iret
in
dec
in
xor
jne
lods
fisttps
fnstenv
lods
xchg
or
inc
ffreep
loop
jne
sub
mov
push
mov
shrl
das
pop
pop
stos
push
sub
pushf
jp
icebp
xchg
mov
fisubrl
mov
inc
movsb
loopne
inc
stos
cmpsb
fstps
cmp
push
jb
adc
aaa
xor
loopne
in
sub
hlt
mov
shrb
arpl
fcmovnbe
call
imul
fmuls
xor
mov
xor
je
divl
fisttpll
pop
out
sub
sub
loop
mov
icebp
and
jp
mov
aas
out
jo
int3
jecxz
mov
aaa
xchg
jle
lods
cmp
ret
nop
call
insl
repz
jmp
arpl
ret
dec
sbb
mov
push
dec
or
mov
outsb
in
jb
out
pop
loope
repz
xchg
xlat
sbb
inc
pushf
cmp
mov
push
push
es
gs
insl
and
and
test
mov
add
stc
int
lea
les
add
sahf
call
adc
outsl
mov
fcomip
mov
aam
arpl
imul
sub
rorb
sbb
lods
cmpsb
insl
iret
jecxz
cmp
std
les
jp
adc
lods
cmc
pusha
or
aaa
int
inc
mov
sub
jmp
pop
jg
mov
sub
hlt
push
movsb
out
shll
push
inc
cmp
xor
stos
push
cmp
xchg
xchg
test
push
imul
jno
imul
andl
or
adc
dec
mov
repz
test
mov
hlt
lcall
add
cmp
adc
cmp
out
test
aad
ss
arpl
sbb
test
cmp
js
popf
cmpsb
cwtl
cltd
rcrb
xor
sub
iret
lock
cmp
or
fisubs
jg
xor
test
jp
sub
insb
jl
pop
mov
and
ret
jns
inc
push
cld
cmp
aad
js
add
inc
icebp
mov
add
mov
xlat
inc
mov
cmpl
rolb
dec
call
popa
xchg
mov
jns
mov
clc
xchg
cmpl
xchg
xchg
mov
addr16
ret
les
pop
or
and
fxch
lods
aam
dec
inc
pop
int
jb
jl
xchg
cmpsl
xchg
lea
mov
sub
out
roll
mov
push
jp
xlat
and
aaa
xor
test
add
aas
addr16
enter
pushf
sub
and
es
repnz
fistl
xor
shll
push
dec
and
inc
nop
ficoms
add
ds
fiadds
or
mov
sbb
stc
push
jle
ljmp
xchg
jns
or
fcomip
add
enter
and
add
mov
lock
jle
or
adc
push
into
jb
jnp
mov
movl
hlt
pushf
stos
or
dec
pop
mov
scas
out
cmp
jl
cwtl
cmpsb
test
xor
fs
xchg
xchg
arpl
lcall
stos
sahf
push
stos
push
sub
add
mov
loope
stos
cwtl
mov
je
vphadddq
adc
mov
jp
push
push
cmp
fdivr
xchg
xchg
pop
sbb
jge
bound
mov
sarb
jl
add
xchg
in
sub
push
push
push
rorb
cltd
push
aam
and
pushf
xor
mov
adc
xchg
and
pop
popf
pop
cmp
idivl
lahf
out
loope
add
push
out
lea
fwait
xchg
cs
mov
jl
inc
ds
push
fst
js
push
xor
divl
xor
inc
and
insb
push
lods
jp
repnz
jns
xchg
pop
popa
jnp
add
gs
jge
jns
mov
xchg
out
icebp
aad
jge
arpl
loope
das
jb
push
arpl
inc
fcoml
cmp
fiaddl
push
xchg
into
aaa
fisubrs
outsl
aaa
push
les
mov
and
adc
jno
inc
inc
loop
test
sbb
push
fiaddl
xor
xchg
jle
mov
sbb
adc
push
dec
and
dec
call
das
fdivs
imull
push
xor
fs
xor
inc
mov
lock
push
pop
sub
fiaddl
mov
push
sbb
aam
xor
andl
test
xchg
mov
or
jne
pop
mov
mov
jp
lods
mov
jmp
lret
fstl
hlt
repnz
imul
mov
mov
test
out
push
fldenv
mov
test
push
cwtl
mov
fs
lcall
cmpsl
mov
js
js
das
lods
xchg
pushf
sub
xchg
loopne
xor
test
sbbb
fwait
test
insl
jb
inc
aam
mov
imul
fdivrs
cmp
out
shll
xchg
leave
js
sub
out
popa
or
jmp
out
loope
mov
push
adc
sub
jae
cmp
mov
cmp
sbb
cmp
inc
jne
cld
enter
out
shl
xor
cld
imul
sub
fidivrs
jb
add
movsb
mov
mov
inc
loop
cmp
sbb
jge
push
adc
outsl
js
mov
sub
adc
pop
lock
sar
inc
popf
fcoms
es
lods
imul
cwtl
fwait
pushf
es
jb
dec
in
mov
push
movsl
xor
mov
pop
aaa
lods
cmp
xor
outsl
out
out
pop
sbb
pop
add
les
imul
or
in
aad
jl
or
adc
fdivs
mov
adc
test
loope
movsb
dec
xchg
or
imul
clc
mov
xchg
ljmp
scas
popa
into
js
clc
test
inc
mov
or
and
mov
ja
sbb
cmpb
test
sbb
mov
jmp
lods
or
cmpsb
lcall
jp
xorb
pop
dec
sub
jmp
push
inc
outsl
ja
ret
mov
cmpsb
inc
push
out
sbb
and
adc
push
testb
adc
dec
push
stos
inc
jae
imul
mov
fstps
dec
movsl
xor
jns
and
cli
stc
pop
inc
add
sub
inc
inc
inc
out
vmwrite
in
mov
xor
lahf
cmp
add
xchg
outsb
xchg
mov
sahf
dec
push
in
es
mov
pop
lret
sbb
add
xlat
sub
push
leave
jo
bound
dec
mov
cmp
fwait
test
pop
adc
push
adc
sbb
lds
jae
mov
hlt
in
and
add
push
push
fistpll
adc
jae,pn
push
dec
dec
mov
xchg
push
cmp
mov
push
xchg
pop
or
xchg
movsb
adc
lret
xor
lds
outsb
mov
sbb
jecxz
mov
mov
jl
jbe
ss
movsl
add
xor
jns
lret
cmp
pushf
push
fcmovbe
mov
jge
xor
jb
cltd
xor
iret
je
jnp
mov
mov
rcrb
int
mov
cltd
shl
push
nop
mov
stc
dec
or
sarl
in
out
test
mov
rep
sarb
cld
xor
mov
xchg
imul
sti
iret
daa
mov
into
aaa
inc
add
test
aad
outsb
cli
mov
cmp
pop
rcr
or
inc
subb
pop
das
gs
mov
xor
outsl
sbb
fwait
out
ja
cmpb
movsl
out
cmp
out
insl
in
test
jbe
stos
jae
xchg
dec
and
inc
loop
addr16
or
addr16
adc
dec
jae
mov
mov
in
ljmp
mov
xchg
add
adc
cmp
cmp
push
andl
aam
pop
dec
movsl
sbb
adcb
mov
and
test
test
shrb
mov
dec
mov
jbe
xchg
mov
subb
mov
cmpsb
xor
xor
mov
std
sbb
jge
popf
mov
sbb
stos
push
hlt
inc
sbb
enter
cmpsl
out
les
mov
add
sbb
and
fstsw
iret
mov
xchg
jp
mov
sbb
notb
push
cmpsb
outsl
pop
loope
mov
cli
ss
dec
aad
jno
mov
push
push
push
pop
aam
fldt
pop
dec
sbb
aas
push
pop
dec
lock
fcoml
add
mov
jge
test
repnz
insb
jmp
adc
ss
ja
pop
cli
gs
lcall
outsl
fdivs
and
jecxz
inc
cmc
mov
cmp
dec
push
or
lock
testl
insb
cmpsb
xchg
clc
sub
aam
stos
shll
sahf
dec
jecxz
pop
mov
pop
xchg
pushf
es
les
lea
hlt
or
or
mov
and
fistps
push
es
push
jnp
dec
sub
test
mov
ja
dec
adcl
cmp
pop
ds
rcll
dec
outsb
xor
push
dec
adc
daa
inc
call
inc
push
mov
iret
jo
enter
jne
fisubl
sbb
lods
xchg
pop
scas
sub
iret
add
or
scas
mov
or
mov
adc
push
ss
mov
ret
not
cmpsb
xchg
adc
sub
cs
inc
lds
insl
adc
movsb
ret
lret
aaa
rcll
int
push
jo
dec
out
and
sahf
pop
cmp
jo
cmpsb
je
jno
mov
sub
xchg
rol
mov
push
mov
or
push
mov
lret
or
and
out
mov
and
lock
or
mov
add
sub
add
jne
lahf
rorl
jp
jnp
in
das
cltd
ficomps
mov
es
dec
fisttpl
push
dec
sbb
andb
sbb
lcall
add
test
xchg
aaa
xchg
imul
push
pop
xchg
mov
fwait
insb
mov
out
adc
stos
fistpl
inc
xchg
xchg
xchg
scas
lods
xlat
data16
stc
and
loopne
push
lret
push
out
dec
sub
loop
xchg
dec
stc
fidivrl
testl
adc
test
push
daa
cmp
lods
orl
std
cli
sahf
test
or
dec
mov
clc
fisttpl
mov
cmp
int3
movsl
sarb
xchg
or
inc
mov
xor
adc
out
rorl
outsb
adc
xor
fnstsw
sub
pop
jge
push
imul
addb
xchg
pop
push
jle
jbe
addl
shrb
out
xor
test
pop
mov
mov
adc
data16
sub
popf
ret
scas
xchg
or
pop
cli
jne
xchg
sub
lock
fldenv
lods
sbb
rclb
enter
into
sbb
jns
adc
aaa
fwait
bnd
dec
rcrb
xchg
mulb
xor
sbb
push
test
and
adc
mov
or
pop
cmc
add
sub
or
jle
cwtl
fisubs
int3
mov
push
mov
push
outsl
test
icebp
pusha
xchg
out
pop
xor
inc
push
rorl
mov
lahf
and
mov
arpl
fcomi
mov
or
icebp
mov
stos
mov
in
faddl
pop
daa
in
mov
sbb
xor
inc
notl
pop
shll
scas
int
or
push
repz
dec
imul
inc
dec
cmp
xor
js
mov
and
dec
adc
push
adc
aam
or
xor
or
add
inc
mov
inc
push
scas
cmp
pop
rcr
inc
mov
jo
pop
mov
aaa
pop
sbb
cld
subb
aas
pop
iret
pop
inc
faddl
inc
jb
js
mov
xchg
cmc
out
ja
jg
dec
adc
lcall
jle
cwtl
movsb
mov
jmp
cld
add
addr16
and
jb
hlt
push
mov
xchg
mov
loope
push
sbb
jl
in
lods
ret
pop
mov
pop
push
lahf
gs
or
cmpsl
and
jmp
nop
xor
call
mov
bound
sbb
divl
shll
test
pop
rorl
sbb
lods
or
test
imul
cmp
fstl
sub
pop
cmp
and
cmp
pop
popa
push
adc
dec
sub
xchg
jmp
mov
movsb
dec
scas
pop
push
xchg
lock
rcll
push
jo
cmp
push
adc
or
lds
cwtl
xchg
add
ret
and
aaa
fists
in
xchg
cli
mov
push
outsb
mov
xchg
pop
inc
dec
mov
inc
lods
fldcw
cmp
mov
xchg
and
icebp
pop
add
icebp
ret
outsl
push
mov
mov
jp
jns
dec
test
jp
cli
out
sbb
loopne
add
rclb
fiadds
stc
fisubl
sub
fldl
scas
iret
das
adc
lds
adc
sahf
inc
cs
bound
loope
pushf
sbb
das
cli
mov
pop
sahf
mov
mov
ljmp
enter
sahf
stos
into
in
inc
adc
dec
pop
jbe
lahf
gs
pop
arpl
push
inc
mov
fcoms
in
jge
sub
sahf
mov
mov
in
in
int
jmp
push
loop
pop
leave
loop
insl
rcrl
leave
shrb
push
sub
int
mov
jno
mov
pop
das
int
mov
cmp
cmp
pop
xchg
xor
cs
mov
fstps
dec
cmpsl
pusha
dec
stos
xchg
ret
adc
push
stc
stos
fidivrs
adc
mov
stc
subl
add
and
lahf
inc
xor
outsl
and
faddl
mov
and
adc
aaa
push
and
aaa
inc
or
cmp
js
imul
cli
mov
jge
call
push
inc
inc
repnz
cmp
adc
xchg
rclb
lret
cmpsl
push
jp
xor
stos
or
adc
std
push
enter
mov
jge
push
sbb
pop
cmp
cltd
xchg
jns
xor
xchg
sti
or
pop
addr16
dec
daa
scas
cmpsl
in
inc
adc
test
adc
and
inc
sub
outsb
push
inc
ljmp
lcall
shll
imul
xor
ljmp
jge
and
shlb
ljmp
xchg
lock
in
mov
dec
dec
repnz
je
sub
nop
xchg
popf
mov
sub
cmp
jns
enter
loopne
fdivrp
hlt
inc
pop
aas
lods
push
add
push
dec
adc
int
outsl
mul
int
lcall
sub
jnp
or
cmp
in
xor
imul
in
xorl
outsb
mov
int3
lods
jl
dec
pusha
sbb
into
mov
mov
push
add
dec
fidivs
mov
das
jg
cld
pop
and
inc
xor
inc
jmp
push
lds
aad
aas
sub
push
clc
inc
or
scas
lea
inc
fs
xor
pop
pop
xchg
mov
push
jle
and
shll
mov
xchg
int
pop
xor
xchg
xchg
sub
and
clc
call
mov
loope
dec
das
inc
int
cli
filds
out
pop
mov
pop
aam
jg
mov
jnp
pop
fcmovnbe
mov
cmp
jnp
dec
int3
xchg
xor
mov
loope
shld
mov
mul
push
in
outsb
lret
fsubl
lret
iret
sub
sub
out
stc
insb
insl
outsb
jp
lock
xchg
rol
sbb
sbbb
lock
icebp
das
and
jg
mov
scas
ret
ja
lahf
fs
mov
jne
int3
cs
addr16
test
or
cmp
movsb
add
jmp
jbe
push
cmpl
push
adc
ret
test
leave
lock
xchg
or
fisttpll
xor
cmpb
xor
cmp
adc
movsl
icebp
jl
and
imul
xor
rcrb
sarl
dec
inc
cmp
or
shrb
jle
sub
stos
minps
movsb
imul
in
clc
insb
lret
ror
nop
hlt
inc
lock
stos
add
jmp
add
cmpsl
ret
cli
mov
scas
scas
cltd
leave
pusha
sti
ss
scas
mov
mov
test
stos
adc
stos
sbb
jb
adc
push
mov
push
pop
scas
rcrb
int3
dec
paddw
xor
push
insb
xor
ljmp
fdivp
fwait
rorb
lahf
aam
adc
xchg
sub
or
test
stc
sbb
push
jae
inc
stc
leave
addr16
test
sbb
push
pop
jp
mov
fcmovnu
mov
std
pop
stos
out
out
lods
decb
pushf
push
adc
add
pop
push
mov
pusha
rcrb
adc
mov
mov
outsb
pop
jp
cmpsb
cli
stos
xor
cmp
sub
clc
xchg
mov
das
sbb
mov
sahf
xchg
and
push
pushl
mov
push
or
jo,pt
xor
xor
lret
mov
fcomp
cltd
sub
lret
push
jp
dec
fcomip
mov
inc
sbb
mov
and
push
sbb
movsb
dec
sub
jbe
add
cmp
pop
push
mov
insl
pushf
jo
inc
dec
cmpsl
xor
in
mov
icebp
jnp
cmpsl
loop
ja
or
sarb
lock
jle
xchg
or
push
sub
int
add
push
repz
mov
jo
pop
dec
cld
popl
jnp
and
lea
fldl
gs
nop
pop
sub
pushf
inc
cmp
mov
ss
cld
mov
repnz
imul
add
xchg
lods
sub
adc
xor
lock
pushf
pop
dec
pop
cld
and
in
sbb
clc
mov
out
dec
pop
pop
out
lock
pop
lea
push
lods
adcb
and
mov
clc
push
mov
imul
sbb
jp
cmp
add
jl
push
mov
aam
nop
mov
jnp
jbe
xchg
push
call
mov
out
inc
leave
dec
push
jle
popf
mov
insl
scas
hlt
sbb
xor
pusha
cmp
lds
sbb
ljmp
push
dec
repnz
cld
sub
xchg
or
cli
cmpl
cmp
pop
xchg
in
adc
xorl
cwtl
cld
nop
push
repnz
mov
xor
fdivrp
dec
add
test
aaa
dec
lds
jecxz
mov
add
cmp
pop
andl
jb
and
xchg
pop
xchg
test
dec
push
rclb
ficoms
shll
add
mov
leave
outsl
mov
sbb
insb
in
xor
fcoms
add
add
pop
movsl
push
cld
xor
push
daa
les
rorb
adc
sub
adc
and
stos
push
dec
sbb
stos
mov
push
lret
ret
sbb
or
jnp
pop
popf
inc
lock
dec
jmp
adcl
repnz
imul
mov
cwtl
enter
push
fistl
and
hlt
ljmp
inc
xor
mov
aad
call
or
ljmp
stc
push
mov
mov
aad
push
mov
push
inc
adc
mov
cltd
add
imul
xchg
xchg
lds
lahf
cmpsb
jae
fiadds
fwait
sahf
xchg
mov
and
push
iret
sbb
push
icebp
les
jge
ja
packuswb
pop
movsl
popa
dec
and
movsl
or
mov
sarl
sub
stos
popf
popf
fisubl
push
test
mov
xor
rorl
inc
sti
dec
jecxz
mov
test
xor
xchg
aad
stos
ficoms
and
roll
mov
pop
pop
jmp
popf
pop
lds
cmp
rcrb
jb
repnz
xchg
inc
loope
xorb
aam
fistpl
mov
push
out
or
mov
andb
jl
shll
es
test
cmpsl
movsb
xor
outsl
jg
cmpsl
jno
in
xor
sbb
and
rcr
pop
adc
cmp
bound
fistl
cmpsb
lcall
je
fnstsw
xchg
iret
repz
loopne
fwait
sahf
test
jns
xor
aam
out
cmp
test
cmpl
fwait
push
lds
ja
pop
inc
cwtl
jg
lods
jl
add
jne
mov
sbb
sahf
aas
dec
out
repz
adc
mov
push
sahf
in
leave
cmp
adc
fmulp
mul
dec
and
dec
sahf
or
mov
sub
imul
popf
sbbl
adcl
nop
sbb
add
insb
mov
xor
push
in
adc
pop
mov
test
push
sbb
fsubl
test
enter
add
xlat
inc
rclb
adc
fldt
push
jo
cwtl
testl
insb
jns
pushf
sub
lods
leave
sbb
mov
sub
push
repz
inc
insb
mov
xchg
cmp
push
lds
daa
loop
in
shl
dec
cmp
pop
jbe
add
addr16
data16
and
mov
push
ljmp
lock
ss
pop
roll
mov
xor
aam
in
in
iret
cmp
push
lock
das
mov
or
xor
stos
xchg
leave
adc
pop
mov
repnz
icebp
cmp
in
and
movsl
adc
mov
pushf
dec
sbb
das
movsb
mov
pop
int3
repz
fmuls
outsl
jl
cmp
insl
mov
into
out
idivb
pop
inc
cmp
pop
nop
xchg
nop
xor
or
sbb
cltd
idivl
mov
push
fwait
dec
push
mov
push
mov
pop
dec
cmp
and
outsl
and
ljmp
cmpsl
dec
shlb
push
add
xchg
mov
daa
out
loop
in
dec
add
jecxz
data16
mov
cmp
jl
cmpsl
mov
add
pop
sub
shll
ljmp
lea
mov
jl
inc
push
in
gs
mov
mov
popf
mov
sti
iret
out
cmp
mov
mov
repnz
enter
pusha
or
ret
iret
xchg
popa
cltd
xor
jb
pop
xor
mov
cs
dec
aas
inc
js
or
js
mov
sub
adc
fidivrs
lods
jg
shlb
into
es
mov
cmp
or
shlb
in
or
mov
push
and
xchg
jns
sbbb
push
dec
cmp
ds
xchg
fisubl
pop
inc
lea
popa
or
sub
push
jno
jg
testb
mov
push
jmp
stos
xor
mov
scas
push
add
in
leave
inc
add
adc
aas
movsl
mov
xor
and
fimuls
mov
lret
je
and
push
outsl
mov
adc
fwait
int3
adc
lds
fwait
pop
add
push
outsb
pushf
outsl
sarl
pusha
mov
add
cmpb
sbb
mov
hlt
mov
mov
cmp
pushf
and
rol
jae
or
call
int3
xchg
dec
push
pop
cmp
addr16
ret
shlb
cltd
push
fidivrs
cmp
inc
mov
mov
lcall
pushf
or
mov
adc
or
ja
mov
jle
sbb
dec
addl
mov
cs
or
or
pop
popf
push
sbb
pop
inc
jb
inc
sub
outsb
sarl
fcoms
dec
test
int3
fucomi
xchg
arpl
hlt
mov
cli
mov
sahf
jp
sarl
loop
aaa
jnp
push
fnstsw
je
cmc
add
xchg
cli
mov
je
pop
test
inc
lds
jp
imul
xchg
mov
mov
outsb
jl
ss
push
les
scas
pop
sub
out
pop
xor
pop
rcrl
inc
add
call
test
and
stos
sbb
mov
inc
mov
mov
je
sahf
pop
out
lock
icebp
pushf
mov
out
inc
iret
cltd
in
bound
popf
enter
jns
cmp
bound
lret
out
leave
add
scas
outsb
xchg
adc
cmp
lock
push
pop
sub
nop
add
jecxz
mul
repz
jae
mov
add
test
movsb
mov
or
div
mov
mov
adc
mov
mov
lea
in
cmp
nop
in
loope
mov
sub
push
push
jns
adc
xchg
cs
mov
out
jne
fistl
and
or
neg
rolb
xor
jo
push
or
loopne
outsl
sarl
bound
aas
inc
movsb
fists
ja
cmp
mov
pop
enter
and
xor
jbe
push
and
mov
loop
jno
pop
fisttpll
sub
adc
lahf
and
dec
adc
ret
or
addr16
repz
mov
cwtl
hlt
jecxz
scas
jns
inc
outsl
pop
in
mov
in
adc
in
test
and
pop
ret
imul
adc
sbb
add
jnp
in
insl
rorb
hlt
nop
sbb
cmp
jb
fdivrs
test
daa
mov
mov
xchg
xor
push
push
scas
jne
inc
dec
dec
xchg
lahf
jbe
fsts
inc
lcall
out
addl
pop
add
xlat
push
repz
push
repz
rcr
adc
lock
cmp
clc
fsub
loop
add
in
mov
clc
shl
push
mov
int3
xor
and
popf
loope
lahf
adc
sar
addr16
add
cmpsb
ljmp
arpl
or
dec
lahf
hlt
pop
or
cli
and
xchg
push
xor
fldt
lahf
sub
pop
pop
es
rcr
into
mov
push
test
mov
jle
adc
add
cmpsb
mov
pop
xor
fsincos
out
cwtl
out
stos
add
mov
push
dec
inc
lret
pop
mov
xchg
pusha
idivl
mov
js
inc
sahf
repnz
call
push
adc
mov
mov
adc
adc
or
pop
cmp
stos
les
push
pop
gs
cmp
gs
aam
sbb
bound
xchg
sbb
shrl
adc
add
into
ret
and
les
mov
sahf
int
stc
xlat
loopne
cmp
or
add
push
adc
shll
xor
dec
outsb
outsb
jp
int3
pop
and
dec
mov
fxch
push
sti
jo
pop
dec
test
loopne
jb
add
pop
ret
mov
cld
push
mov
cwtl
mov
cmp
cmpsb
out
data16
movsl
ss
push
mov
dec
pop
notl
sbb
xchg
rolb
adc
data16
aas
mov
popa
lcall
test
xor
ja,pt
int3
sub
add
xlat
jne
nop
imul
xor
jae
jmp
mov
inc
sahf
cltd
or
jo
inc
jb
xor
cmpsl
or
pop
arpl
pop
ret
mov
and
shl
movsl
adc
inc
dec
pop
xor
sub
cmpsb
jne
std
ficomps
fwait
xchg
mov
xchg
jg
pop
mov
pop
xorl
mov
movsb
sub
scas
roll
addb
cmp
push
pop
fsubrl
lods
push
lods
or
xor
decb
rol
loop
add
insb
aas
cmp
cmpsl
pop
and
in
ja
stos
mov
mov
dec
push
ds
in
insl
test
lds
push
sahf
gs
scas
sub
inc
insb
xor
add
mov
pop
fidivs
roll
xchg
jne
ds
movsb
scas
and
bound
hlt
sbb
adc
push
xor
dec
in
enter
ret
sbb
xchg
movsbl
lea
das
jmp
insb
push
add
and
lds
cmp
ss
shll
sahf
shrb
pop
arpl
mov
push
dec
push
push
push
mov
inc
test
rclb
andb
sbb
pusha
mov
cltd
jg
test
adc
mov
push
clc
push
out
clc
lods
sub
push
mov
dec
add
add
ljmp
adc
xor
shlb
int3
rcll
in
iret
adc
push
mov
jne
rorb
lret
xchg
sbb
mov
jb
data16
cmp
push
inc
xor
mov
jns
cmp
test
jnp
shlb
cli
pop
lea
jo
cmp
loop
mov
xchg
ret
arpl
div
ss
call
repnz
insb
ds
out
pop
push
sti
push
fidivrs
out
mov
adc
push
subb
scas
pop
xorl
jb
push
mov
loopne
mov
mov
arpl
sahf
sbb
cmp
inc
xchg
sub
imul
cs
jno
sti
fldl
sbbl
sbb
aas
test
dec
in
in
data16
pusha
xor
dec
fldl
push
cmpb
jg
test
jno
arpl
sbb
iret
adc
jb
aas
mov
pusha
repz
adc
mov
jle
mov
addb
shrb
jecxz
test
out
add
xchg
sahf
repz
add
fldcw
and
mov
push
xchg
scas
andl
xor
cmp
xchg
aad
pop
xchg
xor
pop
lds
jg
add
je
xor
jns
xor
aam
push
int3
push
pop
inc
jl
sarl
inc
add
js
out
inc
adc
mov
push
lds
bound
call
movsl
sbb
outsb
fmull
sti
xchg
push
inc
enter
pop
rorb
fstl
fisubrl
clc
mov
jo
add
ljmp
jmp
push
cli
loop
jg
push
mov
cmp
andl
pop
std
sti
loop
jmp
icebp
faddl
push
mov
xchg
pop
cmp
loopne
sub
adc
loopne
pushf
or
in
dec
xchg
in
push
jge
push
lahf
lock
outsb
cmp
lds
push
inc
jo
mov
cmp
movb
mov
cmpsl
mov
aad
test
xchg
sbb
add
sbb
sbb
inc
ljmp
cmp
fs
dec
adcl
sbb
mov
mov
push
jle
mov
outsb
mov
rol
pop
loop
and
loop
fildll
lret
rclb
sahf
test
cld
leave
jmp
mov
sub
pop
shrl
cs
test
scas
xchg
jle
or
xchg
sbb
jne
das
push
pusha
adc
pop
push
andb
daa
lock
ret
lcall
fisubl
add
cmpsb
add
movsb
push
or
mov
pushf
add
push
mov
push
pop
mov
scas
jp
andb
add
imul
in
in
daa
mov
daa
mov
pop
or
sub
popa
lods
mov
mov
in
out
repnz
shll
test
dec
insb
jb
mov
mov
test
shr
repnz
dec
mov
mov
hlt
lea
mov
les
lods
test
jns
mov
add
mov
test
lcall
xchg
lods
iret
xchg
mov
pop
inc
mov
mov
ss
arpl
dec
lock
gs
loopne
outsb
jb
pop
jg
sub
pop
jmp
fsubrl
cmp
je
daa
sub
inc
dec
ret
popa
aaa
add
pop
add
dec
xor
pop
lea
test
inc
fldcw
mov
and
mov
add
inc
inc
sbb
pop
push
and
sbb
mov
test
jae
mov
mov
jle
in
inc
add
sbb
in
and
mov
out
imulb
mov
push
push
sub
mov
les
jbe
pop
and
xchg
push
pop
mov
cltd
je
scas
dec
fwait
jae
stc
je
lea
xchg
push
mov
xchg
lock
sub
shr
cmp
jnp
fucomi
mov
add
xor
jmp
mov
pusha
sbb
add
mov
aad
and
inc
xlat
movsl
jbe
loopne
lock
jg
fdivl
aam
pop
mov
aad
dec
icebp
imul
xchg
call
or
arpl
mul
push
push
addr16
mov
pop
mov
jbe
push
jae
inc
pop
clc
imul
inc
lock
pop
scas
jae
inc
pop
aad
je
lret
stos
xchg
enter
inc
sbb
pop
ret
shrl
ja
xchg
fnstsw
mov
ja
inc
hlt
hlt
push
pusha
jae
mov
mov
or
jmp
jge
int
outsb
lret
int3
jmp
adc
sahf
jns
ret
orl
test
lret
jae
lods
mov
inc
inc
out
in
ljmp
lret
pop
test
pop
adc
and
or
jmp
int3
fmul
cmp
mov
pop
mov
ds
pop
stos
ret
mov
jmp
lods
lret
mov
ret
sar
outsb
cmpsb
clc
push
int
push
inc
imul
cmpsb
cmp
jbe
mov
mov
adc
leave
cmp
hlt
mov
inc
lods
data16
push
push
ret
push
nop
fildl
in
fisttpl
push
jns
outsl
xor
jl
call
add
lahf
jmp
push
ss
xchg
ja
or
xchg
ret
in
jnp
repz
add
fdivs
fnsave
dec
cmp
popf
mov
gs
idivl
int3
push
push
or
daa
rorl
mov
adc
mov
fsubrs
pusha
dec
sub
aam
push
push
imul
fs
cmp
xor
aam
cmp
mov
sahf
cmpsb
cli
push
ja
jmp
out
lahf
test
xchg
pop
inc
sub
sub
push
mov
ss
in
fnsave
enter
loopne
stos
push
pop
popf
cmc
pop
or
hlt
outsl
push
clc
sbb
jne
xchg
jmp
mov
cmp
fldt
mull
incl
fdiv
lret
jne
jg
inc
and
and
ret
cld
in
add
pop
sbb
loopne
jecxz
pop
jg
out
lret
sub
mov
daa
and
adc
mov
mov
sar
push
mov
jg
lds
rclb
xchg
rorl
fcomip
dec
mov
and
sti
lret
loop
cmp
lea
test
sbb
or
imul
dec
and
mov
pop
jne
hlt
xor
jle
and
pop
stos
xor
out
rcr
xchg
loope
cltd
sbb
sbb
ret
mov
insl
cmp
scas
inc
shrb
fimuls
aam
mov
mov
push
aas
out
popa
push
data16
jmp
jo
repz
mov
and
mov
cmp
add
mov
and
jg
repz
std
push
lahf
xor
pop
jbe
out
loope
jae
jge
xchg
cmpsl
cli
daa
dec
pushf
inc
loope
stc
fisubl
out
movsl
mov
mov
lret
sub
push
adc
pop
repz
mov
jle
int
jb
mov
mov
adc
jo
dec
test
das
movsb
mov
dec
cmpsl
in
scas
push
mov
jg
jnp
xor
mov
add
ret
sub
movsl
imul
sbb
outsl
lret
nop
jg
pop
xorl
mov
mov
xchg
cmpsl
loopne
leave
and
out
fwait
add
mov
je
mov
cmp
movsl
cmp
jo
adc
pop
push
movsb
cmp
dec
dec
enter
cs
out
cmp
mov
dec
pop
arpl
in
les
idivb
mov
popa
dec
movsl
out
rcr
xchg
add
jne
cmc
mov
movsl
dec
jnp
imul
dec
dec
shl
loopne
cmp
rorl
mov
mov
sub
jecxz
mov
push
ret
lahf
out
roll
push
push
ret
cmpsb
push
sub
mov
hlt
xchg
and
dec
xor
mov
mov
inc
movswl
lcall
fwait
cmpsl
data16
or
jge
and
in
adc
and
push
fidivs
push
aas
test
push
fcmovb
dec
test
push
popf
aad
in
push
pop
loop
cwtl
or
xchg
jno
inc
mov
or
pusha
sub
xchg
or
mov
pop
mov
jb
lea
xchg
add
cmpsl
ja
cmc
fisubrl
rcll
mov
push
jae
ljmp
sub
aaa
cmc
test
and
dec
cmpsl
out
pop
in
dec
test
cs
and
sbb
popa
out
movsb
insb
clc
fwait
lods
lods
pop
fwait
jecxz
cmp
fistpll
arpl
add
sub
stos
sub
push
jns
mov
int
mov
popf
cmp
fimull
mov
inc
stos
pushf
movsl
jecxz
flds
aaa
cmp
push
pop
sti
mov
loop
dec
jg
insl
jbe
flds
clc
movb
and
movsl
sahf
xor
addr16
lock
sub
jp
dec
cmp
lock
sbb
jmp
add
das
addb
and
mov
sub
adc
xchg
xlat
pushf
sbb
nop
xor
sbb
orl
sbb
inc
aas
outsb
pop
mov
sbb
add
daa
xchg
loope
mov
imul
sahf
cmpsb
mov
rcrb
ret
fildl
lods
mov
sbb
test
jbe
mov
repz
sbb
sub
das
mov
psllq
stos
xor
cli
xor
cmp
aaa
ret
adc
mov
mov
pop
in
jb
js
add
test
jp
bound
xor
aas
pop
cmpb
mov
inc
scas
dec
mov
stos
data16
movsl
inc
or
or
negl
mov
mov
ds
cmpb
sbb
cmp
rolb
test
dec
aas
dec
pop
cmp
cmpsl
cmp
inc
sub
push
lds
and
mov
jle
pop
test
push
addr16
mov
iret
in
in
or
adc
push
or
ret
dec
push
insb
xor
push
call
into
jp
cmc
in
addb
push
sub
and
dec
cmp
shll
or
mov
ja
mov
fmul
push
mov
aad
xor
movsl
cmp
repnz
jno
xchg
maxps
dec
sub
mov
into
mov
shlb
jbe
xor
ret
push
test
jb
std
lret
repz
loope
push
or
popf
sbb
push
aam
push
das
pushf
std
test
cmp
push
sbb
pop
mov
in
lods
daa
ret
jo
jecxz
cmpsl
dec
loope
mov
aad
and
mov
in
adc
mov
or
outsb
das
lea
stos
adc
pop
sbb
stos
dec
dec
push
insl
cmp
lcall
cld
das
adc
movsb
adc
xor
test
rcll
nop
xlat
mov
jno
icebp
rcll
jecxz
inc
hlt
rclb
shlb
nop
pop
cmp
inc
sbb
popa
loopne
mov
cmp
pop
dec
int3
add
testl
fbld
in
dec
xor
lcall
jno
std
daa
imul
pushf
pop
cmc
pop
cmp
pop
popf
sbb
mov
scas
push
mov
stc
jp
pop
cltd
or
pop
loope
mov
jno
pop
mov
adc
inc
outsl
cmc
xor
cwtl
insl
dec
mov
cmpsb
mov
xchg
jge
sub
jge
lods
imul
mov
xchg
inc
cld
mov
dec
dec
xor
aaa
out
pop
sti
mov
lcall
sub
in
dec
pushf
adc
add
mov
loopne
and
mov
in
sub
dec
daa
out
in
mov
ds
xchg
ja
xor
push
adc
jge,pt
mov
jg
lock
pop
xchg
push
xor
popf
loopne
xchg
or
inc
ds
cli
push
jns
and
repnz
loop
cmpsl
adc
push
in
xchg
jp
mov
shll
cld
call
sbb
pop
orb
mov
sub
xchg
subl
iret
test
mov
dec
out
mov
mov
and
rclb
mov
or
adc
mov
mov
jmp
and
in
aas
cwtl
movsb
aas
stc
dec
jp
push
inc
add
mov
imul
ret
mov
int
xchg
adc
dec
cmp
mov
aaa
in
xor
fsubs
movlps
adc
sub
xchg
scas
ss
sbb
rcll
int3
mov
int
push
ljmp
or
aaa
mov
xor
cmp
arpl
aas
int
or
jno
dec
sti
push
je
jnp
jl
cli
cwtl
jo
rcl
cmpsl
push
icebp
push
xchg
push
cld
or
dec
sbb
sbb
or
mov
movsl
js
push
lahf
mov
mov
push
testl
out
lods
sbb
push
push
xor
xor
jmp
pop
push
and
jge
and
mov
rorb
movups
and
jl
loope
mov
push
cs
das
lock
insl
dec
stc
movsl
aaa
hlt
add
sbb
int
popl
popf
popa
mov
mov
out
aad
sub
add
lods
sub
call
mov
push
sub
xchg
xchg
mov
jns
in
sbb
aaa
rorw
push
inc
dec
test
adc
inc
int
xor
rclb
xor
test
mov
data16
dec
push
mov
fsubrs
xchg
inc
call
xor
int
shl
lods
and
jb
sbb
pop
cmc
cli
pop
clc
in
xchg
xchg
fiaddl
add
cmp
pop
aas
ds
jne
dec
leave
fwait
xchg
mov
adc
imul
int3
arpl
int3
pop
aaa
mov
cwtl
cwtl
or
ret
bound
fstp
push
nop
shlb
dec
xchg
add
fildl
mov
xchg
mov
sbb
aaa
into
daa
adc
lea
imul
push
scas
mov
fdivr
mov
xor
xchg
cwtl
pop
dec
add
mov
out
sarl
lds
adcl
ds
jo
fucomi
add
decb
pop
fsubl
sbb
add
pusha
in
add
aas
push
scas
and
lods
xchg
ret
mov
xor
shrl
call
adc
pop
in
sbb
mov
cwtl
insb
jecxz
pop
pushf
push
push
jecxz
dec
mov
adc
mov
call
lcall
clc
mov
ss
std
test
shlb
negl
push
cmp
jns
pop
out
jmp
movb
jle
fmul
stc
mov
mov
sub
bound
cmp
push
push
sbb
jns
dec
dec
jecxz
movsb
enter
aad
jecxz
pop
xchg
imull
or
xor
xor
aas
lods
xchg
addb
repnz
add
jle
adcb
inc
pop
std
sti
fadds
loopne
ret
retw
inc
pop
cld
pop
xchg
outsl
mov
xchg
push
popf
push
cltd
fcmovne
stos
sbb
and
fwait
adc
jp
xchg
nop
shlb
cmp
in
mov
add
sub
mov
sti
cmp
sbb
shlb
jmp
pusha
repz
call
and
push
add
mov
cld
mov
xchg
push
adc
lods
xlat
mov
jl
sub
push
ds
repnz
test
inc
outsl
int
cwtl
dec
mov
inc
cmp
push
testb
cmpsl
imul
jle
cmpsl
es
add
push
xchg
push
jnp
pop
and
pop
xor
out
cmp
frstor
leave
call
pop
leave
mov
sub
shlb
xchg
mov
pushf
fisubs
xor
inc
mov
in
mov
aaa
pop
inc
jmp
xchg
mov
fcmovu
mov
in
ret
jno
xchg
mov
mov
mov
push
imulb
jb
adcl
pop
stc
insl
jno
lock
js
sub
cmp
enter
test
jge
stc
cld
mov
mov
outsl
out
std
lret
mov
dec
ljmp
lret
icebp
jmp
fadd
xchg
leave
fisttps
fiadds
push
push
push
xor
dec
fisubrl
iret
fwait
inc
or
ret
ds
add
push
mov
dec
pop
inc
push
cmp
lret
insb
shlb
sub
add
pop
mov
sti
shl
stc
push
jg
jns
outsl
push
xchg
fmuls
and
out
xor
dec
mov
cmp
pop
dec
icebp
sarl
popf
in
call
push
adc
aam
jae
lcall
jo
imul
test
push
mov
inc
dec
mov
dec
lahf
xor
sarb
fcomps
adc
pusha
outsb
xor
andps
pop
int3
bound
ja
js
hlt
aad
test
addb
cmp
push
repz
mov
adc
fisubrs
mov
mov
xor
cltd
xor
push
sti
iret
xchg
pop
lea
cmp
popa
cmp
out
jne
gs
adc
cmc
dec
push
popa
int3
add
cmp
inc
cld
cmp
dec
mov
mov
movsb
insb
fnstsw
cmc
testl
jns
pop
or
push
imul
movsl
pop
sub
cmp
mov
lds
push
sub
pop
jns
test
inc
jns
mov
push
lods
or
mov
clc
insb
jo
or
inc
ljmp
or
int
jno
push
in
mov
push
push
mov
push
aam
push
dec
add
imul
int3
xchg
sub
dec
lea
sahf
les
xor
push
pop
jno
div
mov
fdivrs
clc
movsb
adc
pop
inc
pop
fistpl
js
fwait
in
popf
cmp
jl
xor
jbe
aad
out
add
mov
int
xchg
imul
adc
outsb
mov
sbb
call
mov
arpl
cmc
inc
pop
out
fisttps
lods
mov
jge
mov
push
inc
sbb
or
jg
and
pop
call
jmp
inc
test
add
enter
mov
pop
cmpsb
sarl
mov
scas
mov
sbb
shrb
lret
add
sub
imul
enter
hlt
adc
xor
cmp
push
push
cwtl
dec
cmp
inc
cmpsb
cmp
ret
int3
cwtl
lock
cmp
shlb
cmp
in
fisubrl
mov
movups
fcmovu
aam
mov
fsubrs
fcmovne
or
out
inc
in
in
dec
shll
sbb
push
and
sbb
cmovno
pop
cld
mov
stos
int
jmp
loop
pusha
jge
std
sbb
pusha
es
lds
jno
sbb
jnp
cmpsl
inc
in
fnstenv
jge
imul
ret
pop
push
push
adcl
cmp
jp
jge
cltd
dec
dec
xchg
pop
push
lds
push
adcb
pushf
loope
test
pushf
pop
xor
andl
pop
jno
pop
push
fwait
out
adc
pop
mov
xor
test
adcb
lods
je
psubw
ret
in
lret
pop
gs
ret
ret
mov
push
lea
insb
push
icebp
sub
or
inc
and
jo
sub
leave
mov
ss
fbld
adc
imulb
sub
xchg
ds
and
jo
stos
mov
lods
sbb
scas
popa
movsb
ja
push
decb
ja
psrlw
sub
les
sub
mov
xchg
ja
out
repz
rorb
scas
aaa
jp
push
cmp
movsl
fdivrs
ljmp
lea
xchg
out
sub
or
cmp
push
and
adc
mov
iret
aas
and
dec
push
popf
adc
add
cli
push
loop
inc
xor
or
add
mov
jle
call
push
pushf
movsl
arpl
or
fidivs
or
in
cmpsl
or
outsb
hlt
sub
inc
rcr
je
outsl
add
mov
sub
fbstp
aas
popa
test
sub
int
rcl
mov
adc
inc
fs
and
sbb
xchg
out
jno
jmp
jno
insb
mov
out
push
stos
out
mov
sti
add
push
cmp
test
cmp
lret
sahf
stos
out
sub
icebp
mov
std
fcmovnu
jecxz
insl
inc
cmp
sbb
dec
stc
cld
loope
xchg
inc
jno
movsb
getsec
mov
test
ret
pusha
out
cld
mov
push
adc
push
push
sbb
subl
ror
mov
and
nop
xchg
sbb
stc
decl
mov
xor
fwait
gs
sub
cld
lret
and
cmp
imul
pusha
adc
enter
and
push
jle
dec
leave
addr16
lret
mov
xchg
cmp
push
imul
ret
insb
cmp
rolb
in
imul
dec
push
and
pop
push
scas
mov
dec
mov
jle
pop
shl
xor
mov
shll
mov
mov
xor
gs
into
popf
lret
test
gs
mov
sarl
rcrl
popf
cmp
clc
sub
add
data16
lods
mov
pop
ds
push
or
fldl
sub
adc
xor
sub
xor
pop
mov
push
push
fwait
movsl
insb
inc
mov
jnp
aam
pop
and
test
jp
gs
out
enter
pop
pusha
stos
clc
sub
andb
lcall
dec
sbb
sub
shrl
push
adc
cmpsb
xchg
nop
sbb
add
mov
sbb
arpl
and
hlt
adc
clc
mov
imul
cmc
and
push
bound
lcall
incl
pop
xor
lret
imul
push
nop
xor
out
sbb
addb
into
fsub
inc
jp
dec
clc
insl
ljmp
dec
mov
xor
adc
mov
imul
dec
add
popf
mov
mov
sub
mov
mov
mov
adc
or
clc
mov
test
dec
jmp
test
adc
inc
lahf
pop
xchg
repnz
lahf
dec
andb
sub
mov
nop
dec
sbb
xchg
pop
jmp
jp
xchg
in
pop
clc
dec
repz
js
stos
in
popa
outsb
mov
dec
add
jg
decb
movsl
psubw
int
shlb
and
out
imul
div
icebp
push
cmp
int
addl
iret
fld
push
push
inc
shll
pop
xor
imul
add
mov
mov
mov
jne
clc
inc
iret
movsb
fsub
jp
or
pop
jp
xchg
jle
xchg
adc
rclb
js
jmp
mov
adc
xor
push
outsl
mov
xor
dec
push
orb
cmp
mov
call
sbb
cld
mov
jge
pushf
cmp
push
sub
out
es
lret
not
jecxz
cmpsl
jns
pop
ret
out
pop
xchg
mov
call
out
jmp
xor
mov
pop
ret
jl
xor
test
sub
test
and
aad
mov
jle
mov
inc
lcall
outsl
jns
call
push
lahf
pop
in
dec
sub
movsl
aas
xchg
les
pop
adc
leave
out
repz
mov
lea
sbb
push
push
inc
nop
or
cld
ljmp
sbb
imul
inc
jge
dec
pop
push
jns
insb
test
sub
xchg
shl
icebp
xlat
add
mov
sbb
jmp
les
xchg
cmpsl
scas
mov
push
aas
and
fwait
push
cmp
adc
cs
aaa
data16
mov
push
jp
inc
add
cmp
int3
push
jb
pop
aam
inc
dec
sub
in
cmp
in
fiaddl
or
cmc
mov
ffreep
xor
mov
jmp
xchg
pushf
idivb
pop
jmp
in
adc
jmp
and
es
lock
nop
add
in
cmp
das
push
inc
sub
pop
lret
sub
cs
dec
adc
or
sub
push
sbb
adc
ret
inc
xor
cmp
and
stos
arpl
stc
push
jbe
adc
dec
add
mov
lods
nop
xor
cli
mov
out
xlat
xchg
loop
bound
cmp
cwtl
cmp
stos
pop
out
mov
dec
pop
pop
scas
add
je
pusha
inc
inc
dec
mov
pushf
jecxz
xor
lret
cwtl
mov
mov
call
and
in
push
add
aam
ds
and
push
or
lods
lea
dec
insl
or
fimull
div
hlt
loop
jl
jae
and
mov
xchg
jle
pop
jno
jo
xor
cmp
test
icebp
int
popf
mov
test
sbb
popaw
scas
push
push
pop
fwait
pusha
repnz
push
movsl
add
stos
addb
arpl
and
scas
pop
lods
loop
jb
arpl
or
push
lods
cmp
push
xchg
pusha
and
aas
rorb
dec
dec
sbb
loopne
gs
dec
jp
or
sarl
sub
push
jecxz
mov
mov
outsb
cmpl
sahf
pop
je
sub
cmpsl
mov
pop
std
aam
fcomps
xlat
and
test
es
inc
jnp
fstpt
pop
push
leave
pop
aas
and
and
and
les
inc
and
leavew
adc
cmp
dec
cwtl
cltd
ja
in
outsb
xchg
xor
adc
inc
mov
jb
pop
xchg
call
hlt
test
aas
fidivrs
decb
clc
push
inc
adc
mov
jns
and
mov
aaa
imul
fwait
lds
xchg
jge
lea
push
sbb
fcmovnb
cmc
jecxz
inc
jecxz
cli
sbb
xchg
xchg
iret
mov
stos
lods
loop
in
pop
push
push
jae
stc
mov
popf
scas
loope
xchg
xchg
mov
aad
call
aas
inc
hlt
sub
ficoms
or
dec
xchg
fcoml
inc
dec
pop
add
mov
outsl
sub
outsb
adc
mov
jg
lcall
mov
clc
or
sub
cmp
xchg
mov
inc
sarl
xor
add
aas
mov
pop
push
lods
adc
into
jns
push
idiv
cmp
leave
mov
push
outsb
dec
fwait
mov
push
jae
outsb
lea
mov
sbb
cwtl
or
dec
jne
insb
xchg
flds
cmp
sbb
imul
ret
outsl
mov
test
vpshuflw
sub
inc
cli
ds
aad
sbb
sbb
mov
adc
and
xor
sbb
sub
bound
sub
jg
shr
lret
cmp
imul
jae
jmp
jo
mov
dec
jae
cmp
scas
adc
mov
int3
adc
bound
xor
cmp
inc
and
ret
pop
ja
cltd
out
fsubl
jo
mov
test
mov
mov
test
and
sbb
jb
lahf
jecxz
icebp
mov
lret
movsl
fs
nop
adc
mov
and
call
iret
pop
xchg
test
sub
les
cs
xor
test
or
push
lahf
mov
in
lret
cmc
cmp
movsl
inc
aas
notb
out
push
sbb
mov
out
inc
mov
cmp
pop
les
aad
jecxz
cs
mov
in
adc
and
cwtl
sub
das
or
cmp
je
test
xor
adc
scas
jno
rclb
mov
sti
inc
les
dec
jecxz
js
push
mov
leave
movsb
xor
lods
sub
jp
lcall
ficoms
stc
adc
pop
ret
xchg
stos
stos
mov
xchg
adcl
ja
filds
ljmp
mov
shlb
push
mov
stos
stos
out
test
dec
jae
pop
mov
mov
sub
ds
jo
push
mov
bswap
xchg
lret
cmp
std
add
jp
sub
xchg
fwait
dec
insl
add
adc
mov
out
sarl
cmc
in
lahf
test
xor
call
jns
shrl
into
lret
xchg
jle
in
test
scas
pop
jae
pop
cs
in
lds
test
pop
scas
int3
fwait
aaa
cmc
fildl
pop
inc
push
inc
push
ss
or
adc
or
enter
pop
enter
or
aaa
mov
xor
cmp
or
into
lock
inc
ja
push
aad
icebp
and
jl
push
cmp
jbe
adc
xchg
push
push
adc
pop
pop
mov
inc
cli
loope
cld
aad
fdiv
nop
les
push
in
movb
pop
outsb
mov
sub
pop
das
scas
jnp
daa
push
addl
js
mov
adc
test
add
or
mov
mov
or
cmp
pop
imul
outsl
lahf
pop
ret
push
jnp
mov
or
sub
cmpsl
hlt
lods
fsubrl
rcr
inc
and
lahf
mov
loop
rclb
push
xchg
dec
and
popf
dec
jge
and
adc
pop
stc
je
or
pushf
out
jp
fldl
and
clc
inc
fdivrp
mov
shr
jmp
xchg
mov
iret
adc
jl
outsl
push
push
add
cli
inc
cmpsb
nop
xor
push
or
scas
div
sbb
mov
sub
fldl
mov
sbb
hlt
adcl
scas
call
ret
dec
inc
mov
shlb
loopne
xor
mov
lret
sti
jb
rcll
xchg
daa
daa
inc
int
and
pop
xchg
and
sbb
aam
xchg
xor
nop
push
mov
out
mov
mov
jne
daa
pop
insb
xor
or
movsl
xchg
sub
loope
lret
or
mov
lods
or
pop
scas
cmc
or
or
cltd
sub
jecxz
lods
int
cwtl
xchg
mov
and
dec
mov
jmp
dec
jg
inc
mov
addr16
add
js
pop
dec
xchg
cmova
inc
mov
sub
add
in
mulb
dec
leave
jg
cli
mov
sbb
std
shl
push
test
aas
and
data16
xchg
pop
fnclex
add
add
add
test
or
cmc
ja
ds
cmp
sbb
sahf
sbb
pop
mov
pop
and
push
lret
inc
add
mov
sbb
pop
jmp
lahf
xchg
fs
lea
add
xor
ss
jbe
sbb
icebp
cmp
mov
int
mov
xor
xchg
scas
daa
inc
xor
sbb
lock
push
cli
jne
inc
adc
add
pop
dec
pop
ja
repnz
jg
push
int
cmp
aad
jle
jne
mov
add
inc
and
mov
repz
dec
add
push
stos
pop
sti
aas
rcl
cmp
pop
sub
pop
ret
subb
int3
lea
sbb
lret
fmuls
mov
inc
loopne
push
mov
sub
sbb
je
jp
pop
adc
jl
mov
push
or
out
jae
outsl
xor
and
or
call
enter
addr16
lret
add
xchg
cmp
dec
stos
aam
sbb
ficomps
movl
andb
in
adc
jo
fsts
cs
cmp
je
dec
inc
imul
adc
addl
pop
adc
scas
sub
lea
add
pop
add
push
stos
subl
mov
pop
push
lret
ja
mov
pop
mov
push
sbb
sub
jg
cmp
jmp
jnp
jle
lods
or
sti
inc
jnp
push
out
fwait
std
adc
mov
pop
mov
jle
lret
mull
cmp
cld
push
jg
adc
cmp
sbb
jl
sarb
mov
push
packuswb
popa
movsb
or
cmp
xor
inc
jb
ret
repnz
mov
or
mov
icebp
scas
add
jecxz
xchg
push
pop
jmp
je
repnz
xor
mov
in
movsb
in
sbb
imul
mov
ret
mov
dec
mov
fcompl
inc
sub
mov
push
dec
jmp
mov
sub
popa
les
xor
jo
sbb
orb
or
xchg
pop
ljmp
imul
push
push
repz
cmp
mov
aaa
add
sti
jge
adc
repnz
inc
mov
fildll
dec
add
mov
loop
adc
dec
call
test
and
lods
and
ret
jb
push
lret
and
pop
out
cmp
out
push
hlt
jnp
or
daa
xor
sub
jbe
mov
in
lods
or
in
leave
mov
int3
movsl
push
push
repz
xor
clc
push
pusha
xor
scas
mov
xor
push
pop
jne
inc
jl
push
xchg
and
popf
in
js
adc
out
lret
sub
adc
pusha
jg
std
mov
jae
xchg
mov
xchg
pop
sub
pop
roll
push
mov
icebp
lret
dec
or
and
dec
xchg
adcl
pop
je
rorl
jae
out
pop
mov
test
jecxz
pop
es
xchg
mov
imul
or
adc
sub
and
sub
jo
mov
fwait
xorb
sub
push
subb
cmp
push
add
mov
or
mov
mov
cmp
and
in
or
cmp
xorl
sbb
xchg
mov
stc
adc
push
mov
sti
xor
daa
movsb
jo
sub
dec
mov
dec
out
sub
shrl
add
ljmp
mov
das
jns
aad
dec
ja
dec
push
inc
add
mov
data16
ret
xor
mov
jl
xchg
mov
xchg
and
pop
sub
fidivl
inc
out
cmpb
jnp
or
test
aam
inc
add
mov
in
mov
add
repz
nop
cmc
testb
mov
bound
nop
dec
rcll
pop
into
push
lds
or
cltd
xor
pop
iret
push
or
xchg
inc
in
in
cmpb
popf
aam
push
shr
outsb
push
push
sub
movsl
push
or
xor
stc
push
fs
mulb
mov
popa
nop
dec
push
inc
outsl
rclb
push
pop
mov
roll
sahf
inc
shlb
pop
push
cmovbe
aad
imul
and
jmp
jae
ss
cmp
loop
pop
mov
lcall
stc
or
dec
xchg
jns
dec
stc
fistps
ret
mov
add
push
data16
stos
push
xchg
cmpsb
xchg
cmp
out
sub
dec
notb
dec
ja
call
mov
jne
loope
pop
bound
es
nop
jae
shlb
inc
icebp
add
xchg
xor
pop
cltd
or
dec
insb
fimull
jmp
xchg
add
mov
fs
push
jecxz
jmp
idivl
outsl
scas
jo
add
ror
push
scas
mov
ret
xor
jl
jmp
pmaxub
push
sbb
mov
popf
sbb
xor
push
je
pop
inc
or
push
rorl
jge
push
jno
popa
inc
xchg
fists
dec
dec
sub
dec
jmp
push
sub
scas
add
jnp
lret
jno
mov
insb
mov
test
les
mov
add
rorb
cmove
pop
push
xor
add
sbb
js
shrl
cmc
int3
mov
cmpl
mov
adc
mov
xor
insb
lds
xor
adc
xor
xchg
dec
aam
icebp
push
js
cltd
xor
jno
sbb
xor
fnstenv
mov
ret
nop
stos
les
mov
jmp
les
xor
pop
mov
mov
or
lret
gs
fildll
imul
sub
xchg
lret
inc
add
idivl
push
rcll
fildll
icebp
mov
jbe
ds
xchg
mov
sbb
adc
lcall
lds
pop
jge
jno
dec
test
sub
mov
pop
test
mov
outsb
iret
jno
sub
loope
into
lret
std
xchg
jns
lahf
cs
or
mov
bnd
cli
sahf
pop
and
sbbb
cmc
int3
jbe
jns
mov
cwtl
in
test
dec
jno
mov
cmpb
mov
lret
push
jb
cmc
repz
mov
lcall
pop
xor
adc
pop
xchg
inc
fildll
rcll
push
jle
xchg
into
push
sbb
mov
push
sarl
push
icebp
enter
aaa
inc
aad
call
mov
mov
into
add
into
sbb
scas
outsl
adc
adc
dec
mov
add
or
jo
pushf
dec
sbb
lods
dec
push
xor
ja
pop
push
xor
add
out
stc
mov
mov
dec
sub
sub
je
fcoml
cli
mov
out
mov
jo
loopne
jns
fsubl
ret
out
fs
lock
outsl
rorb
pop
and
push
inc
jp
xor
ds
inc
std
sub
sbb
adc
pop
dec
push
pop
push
and
add
fldenv
inc
jns
add
dec
fcompl
outsb
pop
mov
sbb
xchg
jg
xor
xor
dec
lahf
imul
dec
icebp
jge
mov
mov
movsb
sahf
xchg
push
sarb
mov
pop
cmp
pop
icebp
imul
xchg
push
jl
shll
cmp
sbb
scas
add
fisttpll
jl
dec
leave
add
sbb
int3
sub
or
in
push
shll
push
or
sbb
out
sbb
int3
dec
loope
scas
mov
jne
cmp
lea
xchg
sbb
in
mov
sbb
mov
dec
outsb
enter
sbb
xlat
push
xor
inc
hlt
iret
loopne
jecxz
in
and
push
cmpsb
add
xor
xchg
clc
addr16
jnp
out
and
and
aas
into
pop
xor
imul
adc
int3
iret
mov
sbb
mov
cs
pop
inc
pop
cmp
cwtl
gs
cli
pop
mov
pop
jp
ds
ds
sub
pop
jl
mov
pop
dec
dec
shrb
ss
and
repz
ljmp
or
out
inc
push
leave
and
shl
sub
push
push
into
add
fsub
mov
movsb
xchg
mov
loop
fs
aas
mov
pusha
insb
adc
dec
sarb
in
loopne
and
mov
xor
pop
enter
iret
das
fsub
cmp
test
jo
out
inc
push
test
in
in
pop
ds
cmp
pop
imul
fidivrl
es
in
enter
fsubs
xchg
cmp
xor
xchg
cli
repnz
icebp
rolb
pop
jo
jl
mov
cwtl
jmp
xchg
notrack
ja
pusha
icebp
lds
pusha
mov
lahf
cli
idivb
xor
cmpsb
add
dec
popa
lahf
or
and
in
sbb
sub
outsb
insl
and
cmpsb
push
fs
es
sti
dec
adcl
xor
js
jmp
jns
mov
mov
enter
roll
add
dec
incl
cwtl
movsl
jg
and
mov
les
sub
cli
sub
mul
push
pushf
push
cmp
pushf
push
fs
test
xchg
push
mov
pop
add
push
rcll
addr16
mov
or
cmp
xlat
pop
jb
pop
pop
stos
sbb
mov
imul
les
es
inc
outsl
mov
popf
inc
mov
mov
mov
cmpsl
mov
xorb
outsb
push
stos
adc
add
shrb
pop
xchg
pop
dec
es
xchg
pushf
mov
adc
ss
aaa
pop
clc
dec
xor
rol
ret
inc
xchg
clc
sub
enter
pusha
mov
push
cmp
pop
shll
xor
loope
mov
adc
mov
add
ljmp
movsb
sub
sbb
shlb
lret
aad
movsb
or
mov
jg
int
pusha
clc
fcmove
sub
dec
fcomip
clc
dec
xchg
push
aad
xchg
xchg
fs
lcall
mov
sub
xchg
adc
stc
and
insl
jo
cmpsl
adc
push
bound
pushaw
inc
xlat
push
test
popa
xor
imul
mov
mov
add
loope
dec
aam
mov
push
pop
call
les
lods
int
push
not
repz
pop
mov
mov
add
cmpsb
into
mov
and
mov
bswap
ljmp
lret
cmpsb
sub
xchg
pop
lea
incl
jns
stc
jb
cmpsl
out
mov
in
pop
cmp
jl
push
adc
cli
es
mov
fsts
in
sub
loopne
sahf
and
insl
in
js
sahf
or
sbb
jp
ret
lods
pop
adc
push
adc
rolb
or
sbb
jns
sub
mov
ret
inc
das
jmp
fs
popa
cmc
stc
lfs
ret
cwtl
popa
popf
jae
iret
mov
push
into
mov
leave
xor
add
ret
and
fdivl
cmp
dec
in
sbb
gs
dec
xlat
in
lds
lods
xor
adc
lcall
mov
jle
sub
arpl
aam
jbe
outsb
jle
mov
jle
add
int3
xor
fbstp
pop
shll
aam
movsl
out
mov
in
inc
dec
xchg
lahf
add
xchg
inc
xchg
repnz
mov
aad
loop
and
shrl
ficoms
jo
push
inc
sub
xchg
jnp
idivl
insb
cmpsb
or
push
push
sbb
push
lock
inc
mov
cmp
insl
xor
dec
int
fmulp
jnp
jo
push
pop
and
sbb
push
add
push
mov
mov
movsl
and
jge
mov
addl
stos
inc
loop
lret
sub
movsl
pop
inc
inc
fwait
cs
xor
cmp
pop
inc
jne
fstpt
pop
xchg
roll
xor
and
mov
sub
nop
pop
push
xchg
mov
call
test
lea
pop
cmpl
scas
imul
sbb
mov
mov
jno
out
xchg
aad
stc
test
pop
loope
pop
jg
lea
lods
sbb
jae
add
rcl
push
mov
negl
dec
and
mov
out
lds
push
sahf
rolb
mov
movsb
out
loope
leave
xor
xor
in
mov
and
shll
frndint
cltd
sbb
lcall
imul
and
jecxz
or
imul
insl
add
sub
mov
nop
mov
inc
dec
cmpsl
and
push
pop
into
frndint
leave
sub
and
std
lods
sbb
arpl
notb
hlt
xchg
xchg
roll
jns
add
push
xor
in
jns
sarl
movsl
fmuls
mov
sub
andl
aad
subl
data16
adc
jge
loop
xor
mov
xor
mov
loope
sub
sub
xor
mov
jmp
stos
cmc
mov
daa
fucomi
arpl
daa
fldl
mov
pop
call
pop
pop
or
mov
xor
imul
inc
bound
ret
lea
popf
pop
ficoml
leave
dec
xchg
pop
or
and
inc
xor
cmp
push
inc
jl
mov
pop
inc
mov
sub
int
pop
flds
mov
cmpsb
dec
push
daa
jne
sti
movl
mov
inc
repz
cmp
int
testb
ret
jae
shlb
cmp
sbb
daa
adc
sub
addr16
jns
sub
xor
std
xchg
cmpsl
mull
ss
roll
add
pop
jle
adc
jns
jo
js
gs
and
imulb
call
cmp
loop
jno
sub
aas
rcrl
lret
or
mov
sbb
mov
mov
adc
fisttps
xor
out
push
adc
rorb
adc
add
push
or
fnstcw
sbb
add
inc
xor
cmpsb
jg
dec
inc
repz
pop
in
mov
in
mov
add
loopne
shlb
int3
push
iret
dec
adc
lea
dec
subb
aam
cmp
inc
pop
mov
imul
mov
int
imul
jp
lock
in
mov
cmp
mov
mov
fcoml
mov
push
push
in
dec
adc
sub
or
jae
jle
sar
push
mov
inc
hlt
mov
test
pop
cmp
iret
sub
pop
cmpsl
sbb
jo
addr16
cltd
sbb
ljmp
fcmovnb
xor
test
sbb
add
adc
test
mov
inc
jns
into
inc
inc
cmp
aad
mov
insl
mov
fucomi
and
pop
pop
sbb
cmpsb
stc
mov
sub
xor
cmp
stos
test
iret
mull
jno
push
sub
xor
scas
cmp
sbb
cld
jecxz
bound
dec
sub
sub
js
dec
xchg
xor
leave
sbb
iret
rcl
sub
stc
pusha
mov
rclb
aam
jg
lock
xchg
pop
push
dec
outsl
or
xchg
adc
inc
js
mov
test
js
fsts
loope
push
cs
cs
mov
lcall
sub
popa
shrl
mov
fimull
js
jecxz
jl
test
cmp
mov
adc
fs
in
and
insb
lret
jp
push
call
pusha
jle
and
inc
rclb
loop
xlat
inc
inc
pcmpeqb
mov
shlb
shlb
std
inc
push
push
lods
adc
mov
sub
ja
popf
mov
mov
test
cwtl
out
sti
pop
mov
sti
jecxz
adc
rorb
test
test
dec
mov
nop
dec
adc
idivl
pusha
jb
aas
mov
iret
out
int3
sbb
and
add
in
pop
adc
fistpl
xchg
into
mov
loop
das
popf
imul
cmc
stos
mov
out
push
data16
mov
and
mov
sub
push
shlb
sub
push
mov
jnp
int3
jb
lock
cmp
sbb
xchg
dec
pusha
icebp
fdivl
mov
adc
push
fists
sahf
and
jne
jns
and
mov
lock
jo
xor
adc
or
inc
enter
jns
inc
dec
dec
jmp
sarb
jp
mov
out
es
test
sub
es
call
push
cmp
jo
cmp
pushw
imul
mov
or
andl
cmp
addb
lret
pushl
xchg
das
fwait
sub
sbb
imul
cmp
jo
add
repnz
ret
cmp
imul
jmp
inc
sti
pop
push
ret
sahf
add
sbb
adc
add
jmp
ret
iret
add
sbb
pop
add
hlt
loop
lds
subl
inc
jns
push
fsts
loop
sti
inc
cmp
and
or
push
inc
daa
xor
cwtl
and
ficomps
mov
mov
jae
fwait
xlat
fsubs
lea
imul
test
and
sub
inc
int3
fwait
leave
push
push
mov
jp
inc
ja
pop
mov
adc
adc
jp
ret
push
pusha
dec
xchg
ret
arpl
jp
out
scas
stos
sahf
push
test
test
mov
insl
rcrb
xchg
sbb
jl
xor
das
cmp
popf
dec
in
lea
pop
mov
jo
jecxz
or
ljmp
mov
cmpsb
cmp
xchg
lea
out
ret
and
mov
mov
push
inc
in
pop
or
jmp
out
insl
mov
or
xor
adc
and
jnp
sub
stos
sets
jmp
cmp
ds
cmp
mov
or
lea
mov
movsb
fmuls
call
cmc
pop
lahf
adc
pop
xor
mov
or
xchg
mov
cmp
loopne
out
loop
pop
inc
mov
mov
and
push
add
out
dec
xor
jecxz
mov
jbe
adc
fdivr
pop
ljmp
jg
mov
push
cld
in
or
sub
pop
pop
or
adc
xlat
sub
out
and
hlt
cltd
xchg
add
es
repz
inc
leave
xor
or
loope
test
inc
out
pushl
mov
jnp
or
cmpsb
jl
push
cli
mov
pop
das
stc
xchg
sbb
jnp
adc
ja
out
in
xor
jae
filds
je
mov
xor
or
dec
rcl
jne
jge
movsb
xor
jge
lock
popf
out
sbb
sub
negb
adc
add
and
xor
ss
push
adc
pop
inc
jae
test
sbb
fcomip
or
inc
jns
sub
mov
inc
cmp
adc
in
roll
outsl
and
fistps
test
mov
ficoms
fists
sbb
push
xchg
ljmp
js
sbb
outsb
popa
fcoms
push
ret
xlat
insl
testb
sti
loop
jnp
loop
jno
test
in
jb
push
xchg
sbb
mov
je
jae
rorb
jns
aad
fwait
pusha
leave
subb
or
shr
mov
imul
dec
icebp
dec
adc
add
lahf
jmp
jbe
adc
outsl
shl
pop
inc
add
insl
adc
cld
data16
in
mov
adc
mov
leave
inc
adcb
lcall
push
lock
cmp
jg
mov
jmp
and
mov
out
mov
and
in
movsl
and
add
cwtl
xorl
inc
jb
xor
rolb
out
adc
sub
fidivrl
cld
dec
dec
mov
lock
add
outsb
into
xchg
lret
jo
pop
mov
pushf
das
dec
ja
gs
mov
mov
fldl
inc
sbb
lods
cwtl
push
dec
xor
mov
mov
adc
xor
sub
xchg
ficomps
push
mov
sub
cmpsb
mov
mov
outsb
sub
icebp
mov
lcall
inc
jbe
das
pop
repz
cmc
int3
mov
cmp
or
push
js
rcl
mov
imulb
les
adc
out
subl
test
and
mov
addb
movsb
push
test
jbe
xchg
cli
aam
xchg
push
inc
ljmp
jns
mov
ljmp
cmpsb
daa
mov
lods
add
adc
mov
dec
sub
inc
sti
xchg
add
push
fsubl
pushf
es
mov
or
pop
nop
pop
pushf
jb
cmp
clc
leave
inc
pop
and
fbld
into
repnz
mov
js
xchg
cmp
cmc
inc
mov
sbb
js
inc
aaa
add
push
loope
int3
sbb
outsb
add
out
mov
lea
sub
test
insl
shrl
mull
out
lods
icebp
fdivrp
push
sbb
push
ss
stc
mov
in
sub
jae
pusha
cmpsl
call
fildll
in
stos
lret
mov
sub
scas
fwait
cmpsb
add
jl
dec
mov
push
and
xlat
movsb
stos
sub
sbb
push
pop
jne
xchg
cmp
sahf
mov
xchg
and
cmc
xchg
mov
inc
hlt
mov
ss
mov
inc
enter
arpl
stc
cltd
ds
dec
xlat
addb
in
xor
xchg
lock
nop
cmp
inc
lcall
xchg
jl
mov
mov
sbb
fdivs
dec
and
mov
mov
push
pusha
out
cmpsb
fsubr
push
fwait
or
js
jo
push
xchg
ds
lods
loop
xchg
pop
sbb
addb
sub
pop
adc
push
gs
xlat
in
std
cs
fpatan
mov
loope
or
dec
and
in
push
andl
dec
mov
aad
xchg
cmp
xor
cmp
mov
jns
push
out
sarb
rorl
pusha
lret
int3
sbb
cmc
jle
aad
dec
add
sbb
psraw
xchg
mov
mov
xor
hlt
js
aad
xchg
push
das
clc
push
jg
cmpsb
mov
loop
adcb
cltd
jmp
test
jb
nop
xchg
addr16
icebp
stc
fmulp
repz
dec
outsl
loopne
insb
cld
jae
roll
es
addl
cmp
xor
test
inc
mov
and
sbb
inc
gs
mov
lods
push
mov
jge
mov
jmp
cmpl
int
jno
mov
cltd
sub
inc
push
push
mov
into
daa
imul
sahf
jb
mov
or
push
repnz
lods
in
push
fisubrl
xor
insb
jg
sub
pop
aas
aad
dec
xor
popf
loop
aad
and
sbb
ret
insl
idiv
add
push
sub
bound
adc
outsb
mov
and
leave
sbb
mov
dec
mov
inc
pop
ds
mov
add
fwait
clc
daa
out
sbb
add
imul
dec
les
int
cmp
add
pop
xlat
xchg
adc
mov
jmp
jmp
or
out
aas
std
or
in
and
jns
cmp
xor
add
add
bound
jne
js
pop
cmpb
push
mov
js
ds
out
cmpsl
aas
jp
push
sub
std
pop
add
cld
xor
mov
out
dec
xor
pop
pop
sub
xchg
or
lods
add
cmp
inc
bound
imul
mov
mov
xchg
insb
dec
mov
xchg
adc
cmp
lret
pop
lahf
aad
daa
xor
scas
jae
inc
out
fcom
outsb
pop
xchg
sub
ja
dec
jle
xor
stos
inc
lock
xor
pop
pop
xchg
mov
mov
mov
sub
lahf
adc
popf
jo
fwait
dec
shlb
nop
das
lcall
jle
aas
fs
cmp
sub
enter
hlt
cmp
cmpsb
repz
xchg
movsb
lret
bound
dec
push
rcrl
mov
lods
or
cmp
mov
mov
dec
fsubrs
xchg
lods
sbb
fbld
inc
mov
push
and
and
insl
or
aam
int3
cli
stos
aas
or
pop
push
jl
movsb
cmc
pop
test
sbbb
js
int3
lahf
inc
mov
in
mov
jecxz
jne
lods
pop
sbb
mov
jae
add
loope
daa
jle
out
xlat
pop
inc
mov
adc
or
ret
lea
adcb
aaa
jmp
and
or
outsl
sub
rol
mov
jp
or
das
mov
jo
mov
pop
fisubrs
xchg
jnp
lcall
push
cmp
jmp
inc
mov
aas
push
and
test
xchg
mov
scas
cmp
movsb
add
inc
loop
test
arpl
lds
jo
push
ret
scas
js
jle
xor
jmp
idivl
add
cmp
xchg
lret
pop
jmp
sbb
xchg
or
xor
shlb
adc
inc
add
add
jg
xlat
jmp
into
pop
fs
je
aad
rcrl
imul
xor
or
cld
daa
jle
add
popa
and
xor
xchg
cmp
jmp
addr16
sti
mov
shrb
icebp
inc
cmc
insl
lock
xor
sbb
mov
or
and
dec
cli
stc
mov
add
dec
push
dec
lret
scas
leave
pinsrw
aaa
fwait
lock
dec
xor
jb
daa
aas
movsb
push
insb
sbb
xchg
ljmp
fsubs
in
mov
cmp
inc
cmpsb
ret
jae
stos
cmpl
adc
push
adcb
cmp
std
out
mov
je
imulb
lret
enter
dec
jns
pop
sbb
jg
push
inc
sbb
sbb
lret
sti
sbb
lret
and
pop
xchg
mov
add
xchg
cmpsb
stc
cmp
in
adc
xor
cli
mul
ret
popa
mov
mov
movsb
lret
inc
sbb
sub
stos
sub
imul
jl
cmp
jns
nop
xor
cmp
lret
cmp
enter
fidivl
xchg
or
adc
mov
movsb
mov
pushf
mov
repz
xor
mov
insl
pushf
jmp
xor
daa
shl
or
adc
scas
xchg
andl
sub
mov
decb
shrl
jae
hlt
sbb
and
push
adc
mov
jmp
mov
popa
stc
lds
jo
sahf
push
xchg
pop
jae
std
mov
ja
cli
sahf
std
adc
movsl
xchg
sbb
mov
add
xor
sub
arpl
add
loopne
test
rcrl
insl
jo
sub
lock
js
mov
add
pushf
test
lcall
repz
mov
jne
ljmp
aad
bound
mov
xchg
inc
adc
addr16
xor
inc
test
sub
ret
loop
sbb
les
xchg
inc
xor
cld
clc
adc
aad
lahf
popf
pushf
sahf
movl
pop
sub
fmul
and
sarl
inc
loop
mov
cli
xchg
and
out
inc
jb
sbb
inc
add
sbb
lahf
int3
call
lret
mov
jo
mov
lahf
xor
fistps
jo
cmc
push
jo
mov
push
fwait
bound
enter
dec
inc
mov
aas
fdivrl
cmpsw
or
fistpl
test
sub
mov
pop
or
in
je
or
pop
inc
pop
sbb
jb
and
jbe
inc
sub
inc
inc
leave
shr
sub
inc
gs
xchg
andb
xchg
imul
fwait
xchg
cmc
out
pop
add
mov
mov
xor
add
push
inc
leave
pop
inc
jecxz
or
leave
inc
sub
dec
sub
adc
in
leave
jae
je
movsb
jno
in
or
insb
mov
mov
mov
pop
leave
dec
mov
and
sub
popl
cmp
test
je
cwtl
sahf
sbb
xchg
in
out
fcomps
fnsave
inc
hlt
mov
push
icebp
mov
ds
lret
xchg
int3
mov
xchg
clc
mov
dec
cmc
popf
push
psubq
jno
js
sub
add
sar
xor
or
outsl
cmpsb
or
mov
jno
cltd
fiadds
mov
fldcw
lret
xor
or
xor
push
rcl
xlat
xchg
scas
fimull
jne
jg
add
sub
imul
or
xchg
cmpsb
aas
xor
mov
enter
movsl
and
xchg
repnz
xor
inc
pop
out
pop
lahf
cmp
cli
inc
sub
cmpsb
cmp
lds
leave
test
mov
inc
dec
and
dec
xlat
adcb
in
or
xor
mov
dec
jno
out
add
shl
rclb
adc
pop
pop
cmp
imul
pop
push
mov
sub
fsubl
mov
rcrl
leave
dec
fistpll
mov
in
adc
fwait
and
inc
stos
scas
mov
jnp
faddp
test
int3
jecxz
loop
test
mov
add
dec
ljmp
push
pop
sarb
lcall
test
dec
movsl
popf
jbe
adc
das
ljmp
dec
dec
xlat
adc
lahf
insb
jae
pop
lods
loopne
push
les
and
jg
addl
jo
aad
lcall
jg
xchg
adc
or
xchg
sub
sub
mov
push
negb
push
lock
xor
ds
cmpsl
cmc
or
or
mov
mov
lret
lods
mov
inc
cmpsb
cld
or
sub
pop
ror
stos
and
fiaddl
or
lahf
add
ljmp
push
daa
jp
arpl
jns
mov
shl
mov
pushf
into
and
pop
inc
subb
sub
mov
insb
insb
out
aad
ljmp
mov
test
daa
push
adc
inc
adc
mov
xlat
or
out
into
mov
dec
mov
aaa
adc
imul
xor
stc
and
ss
xchg
push
push
dec
out
cmc
das
xor
inc
add
cmp
inc
je
pusha
test
add
dec
xchg
aam
iret
mov
mov
jle
or
sub
daa
adc
push
xchg
mov
mov
dec
ret
xchg
mov
daa
stos
jns
mov
or
mov
dec
xchg
xchg
xlat
add
dec
jae
sbb
push
mov
sarl
cltd
cmp
dec
dec
push
movsb
and
mov
jnp
mov
mov
aaa
scas
rorl
mov
subb
push
xor
fstpl
sbb
negl
mov
iret
jno
inc
imul
sub
sub
jo
adc
push
mov
call
es
mov
and
or
stos
adc
addr16
mov
incl
leave
inc
out
add
adc
cmp
loop
xor
mov
xchg
mov
sbb
jb
aas
dec
lods
rclb
fstl
xchg
jb
fistpl
and
adcb
cmp
std
cmc
pop
or
sbb
cmp
jecxz
repz
xchg
inc
js
mov
test
loop
adc
sbb
iret
jle
sub
leave
mov
adc
fst
push
js
or
inc
mov
sarl
mov
mov
mov
pop
daa
lea
jmp
movsb
loope
push
inc
scas
orl
nop
lcall
or
inc
push
in
pop
insl
rol
test
ss
cmp
add
imul
xchg
mov
cld
xchg
pusha
fisubl
dec
or
mov
insb
xorb
inc
inc
cmp
cmpl
insl
sub
in
scas
or
and
dec
outsb
pop
push
mov
std
call
fistps
jbe
and
loop
lods
push
testl
jle
mov
dec
push
call
xchg
sub
das
arpl
mov
loope
jmp
repz
cmp
ja
imull
lds
hlt
iret
int3
xor
in
lahf
out
xor
push
sets
call
clc
cmc
jns
inc
insl
add
stc
push
arpl
push
push
int
lods
mov
sbb
xchg
jo
insb
dec
lcall
push
add
push
add
pushf
shrb
cmc
shll
adc
clc
and
rcr
mov
test
or
movsb
js
fisubrl
lahf
int
inc
dec
dec
adc
adc
jb
mov
lret
cli
pop
cli
inc
sub
cli
in
push
mov
sbbl
jns
jp
push
cmc
dec
push
insb
xchg
cs
lock
dec
dec
fnstcw
inc
out
mov
mov
stos
push
mov
cmp
shlb
fs
stc
es
cmp
fcompl
mov
pop
sub
adc
xchg
repz
into
inc
decb
or
pop
imul
push
cmpsb
inc
lods
leave
sub
sub
lea
cmpsl
and
imul
mov
push
dec
push
sti
sub
cmc
mov
cld
push
mov
int
cmp
out
mov
xor
mov
jno
addr16
shll
xor
stos
cltd
dec
xchg
pop
bound
and
pop
cmp
push
cmc
lods
cmp
inc
cmpsb
ja
and
decl
fisttpl
xchg
ljmp
pop
cmpsb
test
mov
lea
add
enter
jne
dec
push
lcall
jmp
sbbb
inc
dec
jecxz
jbe
pop
rorl
test
insb
jge
pop
movsl
and
and
or
mov
sti
xor
addr16
mov
int
push
subl
test
lods
mov
movsb
enter
push
inc
je
movsb
xor
fidivrl
int
nop
or
fcomps
shlb
xor
mov
roll
cld
cmp
test
repz
aaa
xor
inc
sbb
hlt
ret
inc
xchg
push
ja
dec
fld
popl
inc
xor
dec
mov
loop,pt
pop
add
inc
adc
cwtl
xchg
push
xor
cmp
out
test
jmp
out
adc
test
add
adcl
scas
je
push
fidivrs
xlat
push
xor
ds
mov
xchg
mov
add
mov
pop
movsb
push
mov
sbb
ds
les
xor
add
loopne
dec
jb
cwtl
and
int
cmpsw
imul
xlat
outsb
mov
sub
or
mov
lock
push
push
mov
lock
ror
adc
inc
jg
test
adc
or
push
and
aad
fwait
stc
leave
arpl
or
sbb
or
cmc
das
out
sub
mov
adc
add
pop
pop
sub
xorl
xlat
idiv
pop
std
adc
adc
test
leave
cmp
leave
daa
test
arpl
test
std
mov
inc
lea
pop
hlt
and
pusha
push
or
and
or
inc
push
inc
out
pop
jnp
fs
mov
dec
sub
mov
xchg
sub
outsl
mov
cmpsl
aas
or
mov
xchg
jno
push
or
push
jl
jecxz
pop
mov
lahf
std
jbe
or
xor
mov
or
fwait
adc
out
inc
inc
popa
fbld
mov
test
pop
xchg
sbb
mov
cmp
mov
je
cmp
push
add
pop
adc
sub
sbb
int
dec
fwait
sub
hlt
ljmp
jp
adc
aas
push
mov
sarb
lret
pop
dec
scas
and
fidivl
jo
pop
add
push
mov
int
test
xchg
mov
dec
aas
lret
xlat
xchg
bound
add
out
fsubl
cmpsb
or
mov
push
and
cmp
rcrl
sbb
jge
xchg
sbb
mov
mov
rcrl
fucomp
fnstsw
mov
cs
or
mov
sub
inc
bound
or
jb
dec
jne
jo
cmp
imul
pop
xchg
mov
faddl
lret
sub
jno
dec
std
jp
cld
sbb
adc
add
mov
adc
lcall
ds
in
pop
lock
jno
cmp
ret
negb
jmp
adc
popa
sub
mov
fisubl
nop
loopne
mov
lcall
sbb
push
push
or
mov
xchg
sub
mov
and
lahf
jne
sbb
cmp
in
dec
sbb
add
xchg
ret
mov
outsl
xchg
mov
mov
push
push
pop
pop
mov
push
cmp
shr
ljmp
xchg
cmp
xorl
jecxz
js
adc
push
xor
maxps
js
pop
hlt
cmp
cmpsb
pop
call
add
or
arpl
mov
fbld
sbb
out
test
inc
aam
adc
add
lahf
jmp
push
inc
sub
mov
sbb
sub
adc
mov
fldt
fs
addb
lcall
or
add
xor
es
icebp
das
stos
fcomi
sub
or
sti
xchg
push
push
mov
stos
aad
add
fs
jle
or
aad
add
movsb
sbb
inc
or
jp
xchg
push
enter
decl
ret
jo
ljmp
jp
cmp
int
cli
push
loope
stos
movsb
fcomps
cmpsb
mov
ljmp
sub
or
shl
mov
cmp
fmulp
fmull
mov
inc
push
dec
xchg
adc
mov
fbstp
push
cmpsb
or
insb
push
test
jecxz
rolb
scas
cmpb
xor
icebp
lods
sub
sbb
dec
popa
lcall
mov
pushl
jno
cwtl
rcll
mov
mull
loop
aam
ret
push
push
push
daa
rolb
push
sarb
sub
mov
stos
mov
inc
cmp
outsl
pop
out
outsb
cmp
mov
inc
cmp
xchg
jno
pop
fdivs
in
cmpl
je
lret
cmp
test
sub
mov
dec
rcrb
dec
sbb
mov
xor
sub
sbb
pop
dec
enter
sub
in
mov
and
jge
sbb
mov
mov
aas
mov
nop
inc
out
push
push
xchg
shlb
js
mov
pop
jmp
xchg
mov
cmp
imulb
divb
lahf
out
loope
push
sti
jle
repz
xor
sub
movsl
movsl
aaa
xchg
jo
test
in
cli
ss
jb
into
add
ret
and
lods
fnstsw
cmp
stos
sub
je
cmp
xchg
ffree
in
mov
adc
fsubrs
fcomps
mov
into
jp
and
repnz
pop
shr
lret
loope
fsubs
pop
inc
xchg
leave
test
mov
ljmp
sahf
push
mov
jae
stos
insb
lcall
jge
mov
notb
mov
dec
and
ljmp
sbb
sbb
jg
cs
enter
xor
fcompl
pop
jno
cmp
ja
ret
outsl
pushf
movsb
jo
cmp
cmc
iret
fstps
and
adc
pop
cmp
gs
das
dec
mov
xchg
mov
cwtl
scas
xchg
lds
fdivrs
jl
mov
jne
das
adc
xor
lds
mov
std
ret
mov
inc
and
or
arpl
das
stos
xchg
jb
push
int3
dec
mov
push
mov
inc
pop
lret
in
push
dec
sti
dec
popa
stos
or
hlt
mov
lret
cltd
out
enter
repnz
dec
out
adc
out
push
sub
inc
jmp
lods
and
ret
call
jno
mov
pop
mov
dec
test
repnz
mov
ror
xor
cmp
adc
jbe
mov
repnz
sub
sub
cmc
sbb
ficoml
jnp
push
add
ds
inc
push
imul
lock
and
cltd
push
mov
add
push
lods
incl
mov
or
pop
aad
jle
mov
hlt
mov
icebp
mov
scas
mov
sbb
div
or
test
add
xchg
and
add
movsl
mov
and
cmpsb
fldl
jnp
negb
out
stos
cmp
xorl
mov
adcb
cwtl
or
imul
inc
test
mov
mov
std
xor
test
adc
sub
popl
dec
fisttpl
mov
divl
xchg
js
push
rolb
xlat
dec
bound
cmp
mov
add
fwait
cmp
jg
xchg
inc
mov
es
fs
repnz
push
cmpsb
jl
or
rcrl
aaa
cmp
fldl
lret
shll
jo
sbb
psubd
xor
jne
sahf
mov
mov
ret
mov
mov
sbb
sbb
push
pop
cmp
cs
mov
dec
popa
push
adc
xchg
sub
cmc
lods
or
int3
push
scas
out
stc
sbb
jle
clc
mov
push
xchg
in
call
iret
rcrl
xor
fcomps
popf
adc
push
aad
mov
inc
mov
xorb
xor
movsl
dec
mov
cmpsb
fs
hlt
call
fs
pop
lret
fnstcw
movsb
sub
movsl
lods
add
ret
and
mov
pop
xchg
xchg
pop
ljmp
rolb
jmp
xlat
mov
mov
pop
shll
in
and
pop
orb
mov
pushf
ds
fistpll
mov
dec
popf
push
fbstp
mov
push
mov
push
movsl
movl
stc
xor
stos
clc
daa
repnz
adc
jno
inc
dec
out
cmp
ficoml
outsl
mov
mov
fwait
jg
daa
bound
pop
sbb
cmpsl
mov
pusha
rcrb
or
rolb
int3
scas
or
sub
push
dec
add
jns
push
cmpl
mov
or
push
mov
enter
hlt
ja
adc
add
icebp
add
mov
outsl
pushf
or
or
mov
enter
scas
or
fmul
popa
stc
insb
orb
lea
in
adc
dec
test
pop
sbb
outsb
sub
inc
sub
shl
cli
cmp
arpl
aad
or
cmc
and
cmc
inc
insl
rolb
add
mov
add
or
mov
pop
mov
push
lahf
or
dec
rorb
pop
sbb
nop
ds
lds
pop
stos
lret
cs
nop
mov
stc
subb
loopne
xorl
popf
cmp
out
jl
cmpsb
dec
dec
fucomip
jno
inc
jae
sub
mov
lds
pop
mov
xchg
std
add
or
mov
in
dec
cmpsl
or
push
das
push
roll
ret
mov
ja
insl
adc
mov
cwtl
lds
scas
jno
inc
jl
test
xor
lahf
add
cmpsl
lea
in
add
mov
xor
repnz
dec
fsubrs
cmp
pop
lock
add
aas
out
jo
xor
lahf
jle
cmp
pushl
lret
xchg
pop
fmul
mov
stos
sbb
sahf
or
test
mov
mov
lcall
cmp
icebp
sbb
mov
fcoml
out
std
test
push
inc
pushf
adc
push
insb
pop
imul
push
int
loope
xor
sub
xor
pop
jecxz
pop
sub
adc
or
jns
ja
aam
call
insl
int3
xor
aaa
push
pop
mov
aam
outsb
add
jge
in
mov
cld
cli
jmp
dec
cs
cmp
lahf
jl
cmp
mov
and
data16
cmpsl
sbb
sub
fstpl
xor
add
sub
dec
or
icebp
mov
scas
sbb
fisubl
or
adc
mov
int
inc
decl
mov
xor
cli
jg
cld
cwtl
mov
nop
fisubrs
lcall
test
sahf
inc
xor
test
jge
movsb
cmp
lock
mov
fbstp
mov
enter
fiadds
xchg
push
mov
push
bound
sahf
std
mov
int3
and
jb
jmp
xchg
mov
rcrl
cli
push
mov
mov
push
outsl
fimull
mov
test
or
pop
and
mov
add
push
imul
add
adc
adc
ret
jmp
cmc
in
loope
inc
xchg
xlat
inc
ds
nop
pop
xor
adc
daa
test
int3
mov
call
jl
dec
data16
jg
xor
fcomps
in
inc
fdiv
mov
mov
and
cwtl
scas
stc
in
xor
mov
sub
jo
mov
lret
loop
jl
popf
out
or
and
shrl
add
adc
mov
nop
mov
pop
and
stc
imul
shll
or
jnp
pop
pop
xlat
pop
inc
das
rcll
test
addr16
push
fsubl
adc
sub
add
dec
inc
push
in
fwait
ds
add
mov
mov
cli
adc
mov
sbb
push
mov
call
outsl
test
repz
sbb
inc
test
dec
jle
pushf
mov
arpl
sub
add
cmp
and
sbb
mov
pop
or
inc
jp
test
and
loope
push
arpl
shrl
insl
icebp
cmpsb
cs
mov
xchg
add
test
shrb
lds
jnp
sbb
adc
xchg
xor
or
movsb
sub
mov
jecxz
adc
lock
ficomps
insl
hlt
je
outsl
mov
and
lods
aaa
stos
mov
leave
lds
jg
lcall
movsl
data16
sbb
mov
aam
sub
insb
dec
pop
fnstcw
pop
cmp
cld
cmpsb
cld
cmp
pushf
xchg
xchg
fcoml
and
adc
imul
gs
sbb
lahf
aam
hlt
outsl
mov
data16
xorl
test
sub
int
adc
ficomps
sbb
mov
xor
mov
dec
aaa
in
xor
jmp
cld
shlb
iret
outsb
dec
lret
lahf
mov
or
sbb
jp
xchg
pop
stc
cmp
in
xchg
repnz
ret
dec
dec
pop
sbb
cmp
mov
popf
rcrl
sub
jg
xchg
jae
loop
rolb
js
mov
jnp
push
loop
daa
clc
arpl
mov
jnp
imul
dec
fstpt
jae
adc
test
push
mov
lods
and
mov
dec
mov
movsb
xor
pop
in
popf
rep
aaa
xchg
push
into
insb
push
sbb
jns
add
iret
test
std
out
pop
pop
sub
movsl
and
sbb
iret
inc
out
sub
stos
in
push
add
dec
imulb
std
add
pushf
cmp
ss
ja
loop
popf
push
outsb
loope
xlat
cwtl
cmp
sub
daa
mov
mov
sub
sub
repz
aam
inc
pop
sarb
push
sbb
mov
jne
push
fwait
or
adc
loope
dec
push
mov
jge
sti
jne
bound
test
mov
dec
pop
push
inc
xchg
xor
daa
dec
in
aas
test
scas
cmp
jb
mov
sub
aad
roll
sti
jle
push
add
sbb
nop
xlat
sbb
cmp
pop
fs
js
jl
pushf
push
adc
inc
inc
fbstp
or
xlat
pop
ja
add
ret
hlt
and
push
out
mov
or
jg
mov
nop
jl
notb
mov
xor
fmulp
push
addr16
loopne
aas
mov
call
xchg
bound
aaa
js
push
or
push
lahf
and
ss
sarl
adc
ds
jmp
ret
subb
dec
sbb
xchg
repz
jle
and
adc
sbb
cmp
jbe
addl
mov
nop
fiadds
rcl
fwait
lea
sub
lcall
cmp
int3
insb
rorl
sbb
inc
push
cmpsl
mov
xor
inc
cmp
imulb
in
aam
cmp
push
inc
int3
insb
fiadds
ss
pop
aad
or
aad
jno
mov
popaw
movl
je
roll
mov
or
aam
je
lods
stc
push
add
in
and
inc
in
mov
mov
popa
aas
cmp
mov
lods
mov
sub
outsb
movsb
ret
in
sbb
inc
sbb
dec
cmpl
paddsb
pusha
mov
dec
loop
mov
cmp
out
fisttpl
xchg
cmc
mov
loopne
inc
inc
or
fdivrp
xchg
aad
out
xchg
stos
roll
sub
daa
or
dec
or
inc
jns
xor
jo
aaa
andl
icebp
lahf
pop
in
lock
mov
cmp
stc
lock
or
dec
iret
in
inc
xor
add
ljmp
inc
cmpsb
fs
cmp
dec
inc
sub
scas
cmp
mov
int3
or
mov
mov
push
pop
loope
jl
lods
jl
jmp
sub
cli
stc
fwait
sub
testl
push
push
sbb
sbb
data16
mov
sub
stos
push
imull
int3
mov
mov
repz
mov
or
and
xor
jno
push
sbb
ss
sbb
mov
stos
and
mov
xchg
rolb
shr
cld
xchg
xor
mov
or
in
fcmovb
sbb
mov
js
push
icebp
adc
ret
sbb
jnp
ficoml
dec
test
jbe
adc
in
fists
popa
loopne
push
dec
imul
mov
frstor
pop
int
mov
mov
cwtl
dec
loope
mov
in
cmpsb
mov
fwait
xor
aad
xor
add
mov
pop
pop
pusha
pop
lods
sub
jl
cmpsb
mov
mov
shlb
xor
jb
enter
sub
mov
mov
sub
lahf
push
add
clc
mov
outsl
xchg
jne
pop
jb
leave
insl
push
mov
lahf
mov
mov
test
in
mov
je
mov
mov
imul
mov
cmc
mov
in
mov
sbb
je
sahf
test
ljmp
inc
rol
mov
xor
adc
cmp
and
fucomp
out
lret
mov
stos
lea
pop
jo
mov
sbb
xchg
mov
jae
lock
jge
lcall
subb
add
lcall
shl
loope
repnz
fcoms
addl
mov
mov
push
les
jbe
scas
mov
inc
aaa
es
inc
pusha
cmp
outsl
bound
push
subb
fnstcw
dec
fists
or
imul
pop
xor
mov
push
mov
xor
clc
sub
cli
not
test
mov
dec
pmulhuw
dec
inc
in
leave
cs
sub
jge
cmp
jne
shr
jl
mov
das
or
push
pop
xchg
xlat
jl
pop
mov
mov
jbe
cmp
mulb
cs
lock
je
mov
inc
dec
das
inc
jl
sti
push
mov
movntq
and
sahf
mov
push
test
xchg
mov
push
ret
call
shl
sbb
mov
sbb
push
nop
imul
jmp
pop
icebp
inc
push
fsub
dec
pextrw
xor
mov
out
js
xchg
lds
imulb
push
clc
ss
orl
xchg
in
bound
mov
sahf
push
sub
mov
ret
into
xchg
and
push
loop
jo
and
pusha
stc
fsubs
or
push
add
in
pop
test
push
lds
jo
iret
push
mov
jge
or
ret
adc
sbb
pop
or
add
scas
imul
mov
movsb
mov
push
in
inc
pop
jecxz
mov
testb
mov
pop
pusha
in
daa
pop
bound
add
daa
cmpsb
out
sbb
cltd
loop
adc
js
xor
daa
inc
jecxz
fcompl
int
xor
jl
popa
push
jl
mov
push
mov
dec
lds
in
jnp
push
cmc
ljmp
jno
or
sub
repz
in
mov
add
imul
xchg
cmp
lock
cwtl
dec
aaa
inc
loopne
inc
lret
cmp
and
lock
lds
enter
aad
push
push
mov
addr16
es
inc
fsubrl
fs
jle
aas
test
and
stos
push
fldl
mov
cmp
test
cmpl
dec
adc
das
jae
dec
ret
cmpsl
xchg
cmpsb
mov
in
inc
test
cmp
mov
cmp
mov
clc
push
xor
imul
inc
add
cmp
shlb
aas
lods
pop
sbb
outsl
dec
int
bound
inc
ret
inc
dec
in
pop
dec
xor
sub
inc
in
shr
push
scas
sub
shl
mov
test
jl
dec
iret
cmpsb
aaa
js
bound
add
int3
xchg
hlt
jne
mov
enter
les
fiaddl
and
stos
fcomp
mov
add
or
xor
in
push
cmp
mov
insb
mov
jl
popf
mov
stos
shr
rcr
or
sbb
push
cmpsb
mov
mov
mov
and
sahf
lods
loopne
pop
test
sub
nop
push
and
sub
stos
push
int
add
bndldx
and
cmpsl
lahf
xchg
jne
jns
adc
pop
stos
leave
stc
mov
cmpsl
pop
or
shrl
out
or
jae
rcll
jecxz
mov
fisttpll
pop
movsb
dec
stos
mov
stc
push
ret
mov
lock
sbb
jecxz
add
addl
sahf
out
gs
mov
xchg
sub
lock
cmp
fisubs
clc
mov
insb
add
fwait
jmp
or
int3
xor
add
push
dec
xchg
xor
stos
gs
popf
inc
outsb
or
movsb
push
inc
or
outsl
lret
pushf
addps
out
mov
aas
popf
mov
jg
repnz
int3
dec
sub
jno
cmp
in
cmp
cmp
mov
lahf
aad
out
push
out
mov
popa
std
mov
ret
sub
add
divb
dec
sub
movsb
add
xor
negb
int3
sahf
push
ja
xchg
into
push
sub
and
mov
pop
add
push
push
xchg
movsb
xor
mov
fldt
push
sbb
cwtl
int3
xchg
pushf
in
mov
and
xchg
and
jle
and
daa
stos
sbb
mov
inc
pop
incl
sbb
inc
inc
dec
test
aas
pop
xor
add
loop
mov
insl
insl
cmp
jns
hlt
push
fcmovnbe
sbb
ljmp
mov
call
push
pop
lds
js
ss
and
es
into
mov
rclb
fstl
sti
repz
xor
add
pop
scas
enter
pop
dec
mov
mov
insl
mov
and
jg
adc
jecxz
fsub
nop
lret
mov
arpl
sub
ret
fistl
pop
add
aaa
inc
rcr
test
mov
movsl
inc
out
rcl
add
xchg
mov
cmc
or
popl
es
xor
stos
imul
jne
lea
aas
out
sbb
xchg
push
enter
stos
lds
jle
cwtl
aad
ret
mov
mov
fwait
lret
notb
xor
push
aam
in
push
push
inc
inc
pop
pop
rclb
jo
xor
jno
adcl
popf
call
fmuls
cwtl
xchg
popf
xchg
xor
jne
stc
mov
mov
add
ljmp
inc
gs
pop
or
mov
jle
mov
stc
les
cld
repnz
das
push
bound
xchg
aad
jno
mov
rclb
pop
ret
lret
pusha
popf
adc
test
cmpsb
xchg
sbbb
mov
sbb
dec
lea
addl
push
xor
stos
sbb
pop
out
enter
inc
arpl
xchg
cmp
dec
movsl
mov
outsl
mov
cltd
or
inc
lahf
jnp
and
iret
movsb
in
sub
pop
test
jno
mov
xchg
das
aas
add
hlt
push
bound
ret
inc
gs
push
ss
loop
sub
je
jle
loope
pop
lret
in
mov
mov
jg
mov
pop
jmp
mov
xor
rorb
bound
add
repnz
fidivs
inc
orb
jb
das
rcll
pushf
jge
out
imul
pop
stc
lcall
lea
rorb
or
pop
loopne
push
inc
sub
mov
stos
cld
sbb
scas
add
addb
mov
pushf
shl
dec
mov
cmp
addb
in
or
cvttps2pi
sub
adc
mov
adc
adc
shr
mov
mov
adc
sbbb
jecxz
in
sbb
xchg
push
arpl
adc
jp
add
fxch
pop
ss
xchg
pop
das
xlat
iretw
mov
rorb
daa
adc
mov
inc
mov
cmp
push
les
pop
mov
inc
aas
shlb
mov
call
jp
rcr
mov
jg
daa
gs
mov
lret
rep
mov
pop
lea
ds
jne
pop
mov
shlb
fistpll
lods
hlt
sub
mov
scas
int3
movsl
and
scas
fdivrl
push
mov
test
xchg
push
mov
cmp
push
std
mov
ret
ljmp
out
insb
or
jno,pt
adc
jae
aaa
dec
inc
or
cmpsl
fstp
packsswb
mov
push
pop
in
pop
lock
in
or
ljmp
fsubrs
mov
jns
idivb
mov
dec
push
repz
popf
inc
test
mov
dec
insl
clc
jbe
pop
scas
xor
pop
jno
cltd
aas
ss
dec
sub
adcl
sbbl
dec
cmp
and
cmpl
adc
popf
inc
adc
and
lock
ficoms
add
rorb
xchg
sub
add
and
mov
and
icebp
mov
ja
cmpsl
das
lds
sub
cmp
pusha
jle
mov
cmp
lret
ss
js
jbe
mull
or
lret
ljmp
jb
and
sbb
xchg
in
inc
mov
int
mov
jno
jle
push
in
push
add
std
push
adc
xor
icebp
mov
dec
pop
fcoml
push
mov
mov
xchg
ret
ret
jae
lods
bound
adc
fistps
dec
clc
inc
sbbl
mov
cs
lds
repz
push
test
mov
or
push
pushf
stos
push
in
sub
fdivrl
pop
pusha
pop
je
jle
mov
mov
add
out
out
out
or
inc
ja
mov
int
shrl
cmp
out
roll
outsl
out
fwait
push
arpl
or
test
mov
sub
out
and
sbb
push
add
cli
ljmp
jbe
popf
test
sbb
lcall
rorl
stos
cld
push
dec
add
mov
mov
jg
add
pop
lock
popf
xor
aam
das
cmp
push
jecxz
pop
add
lods
ja
xchg
and
hlt
mov
pushf
jo
push
addr16
nop
push
pop
les
mov
sub
adc
pop
mov
pop
mov
test
cmovns
ret
negb
sbb
cmpb
imull
icebp
sub
mov
nop
and
cmp
mov
dec
arpl
jp
into
sub
cmp
mov
out
jg
pop
icebp
ljmp
add
lahf
enter
fmulp
dec
movsb
mov
test
sbb
scas
pop
in
int
mov
clc
mov
fimuls
add
sahf
inc
cmc
cmp
mov
dec
xor
sbb
sti
ret
mov
out
jle
inc
lods
mov
pop
jmp
xchg
or
notb
add
arpl
in
ret
and
mov
das
hlt
int3
lret
loope
cmp
pushf
xchg
push
mov
xchg
in
aad
push
ja
rcll
dec
popf
sub
add
xor
jmp
jp
out
pop
or
adc
test
or
sub
mov
mov
or
dec
mov
ss
or
add
push
jle
loopne
adc
ret
and
fnstsw
and
subb
arpl
push
inc
cmp
das
stos
fnsave
repz
mov
dec
rcl
ja
jp
xchg
xchg
jne
mov
outsb
sbb
es
pop
scas
add
jl
sbb
ljmp
jae
push
insl
test
mov
mov
inc
mov
mov
jae
call
bound
xchg
int
xor
movhps
sub
aaa
inc
mov
addr16
addl
inc
or
and
loope
subb
cmp
cltd
add
inc
xor
pop
adc
xlat
pop
push
push
jle
add
ss
dec
cs
cmp
jne
rclb
mov
rcrl
pop
imull
not
int3
and
sbbl
pop
mov
mov
out
cmp
into
movsl
push
ljmp
jp
dec
cld
icebp
fucomi
dec
sti
test
call
loope
sbb
xor
fs
add
ret
sti
dec
pop
xchg
out
pop
mov
push
aam
sub
cwtl
adc
dec
fistpll
nop
jns
adc
pusha
push
scas
popf
jb
loope
sub
iret
mov
jb
sbbl
push
gs
push
in
leave
xchg
js
dec
mov
lock
push
cld
or
jb
dec
fwait
imull
jg
imul
push
jnp
sbb
pop
sub
mov
adc
aas
xlat
mov
mov
add
ja
imul
push
scas
or
cmp
in
sti
add
ljmp
imul
int3
push
sub
call
stos
jge
call
pop
jp
jecxz
adc
into
in
xchg
andb
out
push
sub
out
adcl
test
repnz
movsl
mov
cmp
cmpsl
jle
lds
and
sub
jb
out
mov
adc
cmpsl
cmp
into
fisttps
mov
stc
shlb
jl
add
das
leave
mov
nop
iret
mov
test
pop
fsubrl
rorl
mov
out
testl
dec
hlt
repz
mov
lahf
icebp
popa
lods
adc
jge
pop
nop
inc
push
popf
dec
imul
aam
jl
ror
adc
rclb
and
gs
inc
mov
add
insl
mov
cwtl
cli
dec
fldcw
pop
inc
inc
outsl
xorb
adc
push
lahf
push
mov
int3
jns
orb
jns
cmc
pusha
cltd
or
push
xchg
xor
sub
xor
adc
inc
cwtl
adc
and
sbbb
test
cmpsl
and
push
sarl
add
mov
scas
mov
cltd
mov
data16
mov
mov
xchg
and
dec
aas
cmp
ficompl
ret
aam
jecxz
sub
add
jae
pusha
mov
pop
hlt
cld
outsb
scas
jb
or
xchg
hlt
cmc
leave
pop
mov
jg
loope
iret
imul
jg
sub
icebp
pop
adc
cmpsl
std
scas
movsb
mov
stos
loop
jb
cmpsb
or
cmp
cmp
pop
cld
jb
push
cmpsl
into
out
push
loopne
push
cmp
xchg
fildl
repnz
lahf
xchg
xor
test
inc
cmp
insb
int
cmpsb
sub
adc
add
iret
cmp
cmp
push
test
jmp
rol
pop
mov
mov
cld
ja
sbb
ja
adc
popf
scas
jno
clc
movsl
addl
mull
jge
xor
sbb
xchg
negl
rol
fadd
es
pop
xor
inc
push
cwtl
xchg
out
dec
xchg
notb
ror
sbb
es
jno
adc
loopne
jb,pn
pop
cld
push
hlt
cmpsl
push
sbb
scas
dec
pop
pop
xor
sbb
out
and
out
jge
add
lods
cmpsl
cmpsb
add
mov
ret
std
inc
xor
in
mov
into
add
xchg
push
pop
push
in
jns
jg
mov
lret
inc
or
loope
shll
cli
adc
xchg
push
mov
sbb
cmp
cmp
jl
addr16
dec
lret
add
push
int3
xchg
dec
daa
adc
lcall
fs
jne
outsb
shll
ret
mov
addr16
add
and
icebp
mov
aad
pop
test
daa
xchg
xor
pop
fisttpl
lret
repz
or
hlt
dec
sbb
mov
sbb
dec
ljmp
loop
in
mov
push
jmp
fimuls
inc
and
andb
mov
shr
cmp
push
les
in
mov
paddsw
dec
insl
and
mov
popa
pop
sub
into
dec
sub
mov
dec
mov
add
mov
mov
pop
insl
mov
pop
test
in
ret
pop
mov
loop
mul
lret
adc
mov
xchg
filds
jecxz
jns
movlps
xlat
inc
stos
sub
cwtl
sbb
cmp
stos
xchg
and
xchg
xlat
jg
dec
xchg
test
test
mov
int3
pop
incl
mov
mov
jecxz
ret
xlat
ljmp
pushf
mov
jno
test
lcall
gs
cmp
xor
adc
das
fists
push
negb
mov
jp
mov
cltd
lret
xchg
jecxz
pop
popl
xchg
add
lods
cmpsb
les
ret
iret
out
push
orl
decl
aaa
jae
mov
pop
and
in
js
orb
les
insl
jns
aaa
xor
decl
cltd
cmc
push
cs
lds
fcomp
cmc
push
xchg
repz
stos
push
dec
cmp
insl
lods
movsb
xchg
mov
adc
scas
imul
add
aad
inc
dec
ret
jnp
cmp
adc
xchg
push
int
jb
fbld
movsl
aaa
xchg
xorl
repnz
xchg
fdivr
mov
sbb
frstor
iret
push
jno
sbb
push
cmp
clc
push
gs
mov
jmp
mov
jbe
shl
jge
mov
rolb
inc
jmp
pushf
adc
pop
inc
rolb
idivb
mov
mov
jge
sbb
lahf
ror
push
leave
mov
dec
lock
js
std
lock
shlb
daa
fiadds
sbb
jg
sub
mov
cmp
js
jne
cwtl
xor
js
cli
cmp
mov
mov
leave
rcrb
push
testb
addr16
mov
daa
sub
fwait
test
lret
in
in
sbb
call
outsb
sub
je
roll
pusha
rorb
push
push
or
mov
addr16
pop
mov
or
jae
orl
sbb
incb
inc
jmp
aaa
shl
out
jmp
xchg
imul
mov
std
sbb
mov
jns
jns
lcall
or
inc
fstpl
sbb
cmp
cli
xchg
dec
xor
xorl
loopne
test
popa
xor
and
cld
sti
push
sub
sub
clc
dec
rcrb
ja
add
inc
inc
pop
sbb
mov
mov
push
nop
mov
jg
push
sub
inc
dec
pop
xor
in
push
into
sub
out
push
mov
popf
cli
cmpsb
and
and
sbb
ss
push
outsl
pop
sahf
sbb
mov
lret
dec
lcall
sbb
inc
mov
xchg
mov
mov
or
test
dec
mov
jecxz
daa
movsl
push
mov
call
cmpsl
cmp
call
xlat
aad
lret
mov
sbb
and
push
dec
fcmovu
ret
xlat
jge
add
add
loope
mov
leave
loopne
hlt
mov
sbb
ret
push
jl
out
dec
xchg
jecxz
and
divb
jp
ljmp
in
xchg
mov
add
dec
fld
aad
push
cmp
push
inc
sbb
daa
push
leave
add
mov
mov
and
packuswb
fcomps
in
pushf
jp
add
int3
imul
xor
cltd
pop
imull
mov
jl
sbb
sti
adc
divl
das
lcall
xor
add
insb
int3
jbe
add
xchg
add
mov
sbb
lret
inc
fmull
rcll
punpckhbw
movsb
push
mov
in
lock
jecxz
inc
aas
rcrb
cmp
sub
ret
mov
mov
jb
insl
addb
sbbb
int3
add
ds
andb
cmpl
pop
jae
es
loop
add
movsl
je
das
mov
xchg
adc
sub
xor
das
xchg
sahf
xor
idivl
scas
out
cli
loop
cmp
cmp
int
lahf
int3
cmc
mov
mov
xor
ss
js
roll
out
pop
lret
push
xchg
hlt
xchg
int
mov
xchg
outsl
in
pusha
or
mov
push
mov
sbb
or
sub
pop
push
pop
aad
lea
lcall
or
movsb
fisubrs
ffreep
call
aaa
addr16
push
adc
mulb
cld
dec
sahf
sbb
and
jnp
jge
inc
lcall
ss
test
and
mov
pop
mov
pop
aas
adc
pusha
fwait
loop
lret
std
mov
jne
pop
fstl
jns
test
push
inc
mov
arpl
cmp
sarb
fcoml
faddl
lock
mov
and
sub
adc
lret
pop
lea
mov
fsubs
add
inc
outsl
mov
loopne
lds
data16
push
add
outsb
dec
out
ret
jne
and
rol
xchg
notb
ja
or
loop
jnp
mov
filds
mull
mov
fisttpl
sub
xor
popa
xchg
xchg
lods
test
sahf
lret
xlat
dec
mov
and
sarl
call
mov
data16
pop
dec
ds
lcall
sbb
fcmovu
sahf
out
xor
fsubl
rol
loopne
decl
dec
and
ret
bound
cmp
xchg
push
mov
hlt
jg
push
into
cmpsl
pop
sub
in
sub
and
gs
xchg
mov
or
iret
add
test
out
or
jle
push
xor
mov
and
dec
inc
cmpsb
fdivrl
mov
cmp
repz
jl
cmp
cmp
mov
sbb
add
jnp
sahf
notb
and
xchg
jno
jne
aad
orb
fcmovb
fsubrl
mov
dec
into
add
push
imul
out
push
sbb
adc
test
lea
or
mov
push
je
jle
xor
test
ret
push
adc
pushf
pop
into
pop
call
dec
gs
fldl
push
xchg
pop
or
fildll
mov
enter
in
fistpl
inc
mov
shll
sub
andl
xorb
xor
mov
ds
ficoms
jle
cmp
mov
ds
xchg
je
pop
xor
in
adc
fistpl
add
out
daa
addr16
mov
nop
ljmp
inc
add
je
inc
pop
call
dec
and
jge
cmp
push
aas
or
sub
adc
idiv
fimuls
xor
arpl
jns
pop
jne
std
addr16
mov
lcall
int
cs
or
out
cmp
adc
cmpsb
mov
out
gs
add
stc
sub
scas
call
gs
add
lahf
xor
ljmp
mov
or
push
pop
add
mov
push
mov
or
mov
ret
int3
xor
iret
xchg
cmp
ret
sbbb
xchg
shll
push
je
imul
pop
sbb
sbb
les
and
outsl
or
ror
leave
push
jp
add
push
imul
jno
add
add
stos
cmpb
sti
cwtl
cmp
add
cmp
mov
pop
ds
pop
fildll
add
in
ljmp
out
ja
or
das
cmp
push
inc
in
inc
adc
adc
cmp
sbb
mov
js
xorl
adc
adc
jg
mov
push
cwtl
ds
dec
fbld
mov
scas
into
sub
repnz
ret
pop
stc
jb
push
xor
push
jle
sbb
mov
lock
mov
aad
mov
sbb
nop
mov
mov
sub
xchg
iret
cmc
je
mov
decb
push
aaa
out
out
mov
sahf
jmp
ja
cltd
sub
or
fsubl
jno
cmpsb
gs
xchg
imul
lcall
iret
pop
cli
repnz
mov
jo
enter
popf
and
dec
xchg
mov
pushf
pop
bound
mov
lea
cld
mov
hlt
adc
in
add
jne
in
imul
fistpl
push
call
xor
cmpsl
insb
jmp
sbb
xchg
cmpsl
rcll
inc
mov
inc
ret
test
popf
imul
ret
xchg
lea
or
pushf
sbb
jmp
mov
pop
and
loope
jae
jnp
sbb
rclb
pop
sbb
jne
shrb
mov
pushf
or
sub
push
mov
adc
and
push
mov
cmp
insb
pop
adc
xorb
mov
fiadds
pop
xlat
leave
and
cli
and
pop
mov
popa
int
imul
dec
dec
loopne
sti
pop
mov
nop
dec
in
jne
mov
pop
lahf
mov
cmp
pop
imul
insl
test
fs
mov
add
incb
xchg
ret
insb
xchg
mov
jl
les
and
push
jo
mov
adc
test
lods
mov
mov
adcb
das
xchg
arpl
stc
jmp
add
push
xchg
mov
popaw
dec
mov
pop
fwait
jae
cmp
fbld
outsb
add
repz
xlat
imulb
mov
lahf
sbbl
sbb
sub
push
jae
sbbb
in
sub
in
mov
xor
out
les
aad
jl
mov
das
pop
bnd
lcall
notb
popl
dec
movsb
and
xor
idiv
cmc
jbe
push
xchg
push
je
xor
mov
incl
fwait
push
xchg
push
out
sub
xor
jp
fwait
ljmp
repnz
mov
roll
inc
inc
mov
jp
cmp
or
movsb
call
ret
aaa
loopne
and
xor
out
push
std
dec
sbbb
es
aaa
stos
add
mov
in
xchg
pop
cld
push
xor
out
addb
daa
or
xchg
push
push
mov
in
cmp
xor
nop
or
jle
icebp
pusha
push
xchg
movsb
and
popf
cmp
shlb
jb
mov
adcl
add
ficoms
adc
dec
pop
pushf
sbb
test
dec
lea
dec
rclb
lods
dec
popf
test
mov
mov
adc
add
jnp
arpl
mov
mov
sub
inc
in
es
cwtl
jbe
xchg
inc
add
aaa
pop
sbb
inc
pusha
loopne
jmp
pop
mov
add
pop
sub
fstpt
jl
in
out
pop
and
pop
iret
gs
call
xchg
mov
mov
imul
or
insl
fs
push
enter
inc
ret
cmp
in
xchg
in
xchg
inc
repnz
push
js
and
pop
xchg
in
mov
sub
pop
dec
in
sahf
scas
adc
lea
dec
out
push
sub
jbe
add
subb
adc
xchg
outsb
and
aam
insl
and
nop
imul
shll
sahf
lret
dec
nop
push
adc
xlat
aas
and
fbld
lahf
sarl
aaa
fs
les
or
imul
push
xor
pop
add
cs
xor
mov
xor
pop
jg
push
sti
div
mov
xor
arpl
mov
loopne
insb
aas
out
nop
das
pop
mov
mov
pop
xchg
sbb
test
into
push
repz
hlt
jae
sub
push
scas
inc
sarl
jl
mov
pop
out
jbe
dec
fidivs
mov
int3
insl
jmp
or
cmpsb
push
or
xchg
pop
cmp
mov
mov
sub
subl
adc
jne
xchg
rcr
outsb
lret
and
mov
cmp
jle
sarb
fdivrs
and
pop
xorl
rolb
and
addr16
data16
scas
ss
mov
sub
mov
cmp
sub
dec
push
mov
sub
mov
jge
cmp
sub
movsb
lea
jmp
je
insb
icebp
mov
mov
add
gs
into
ss
jg
jecxz
push
jg
popf
addl
sub
and
pop
stos
xor
clc
xchg
cmpsl
repz
lcall
fs
outsl
xchg
inc
cmpsb
xchg
and
mov
xchg
jno
shll
push
dec
es
icebp
jp
je
add
push
add
sbbl
jmp
and
sti
sbb
shrb
cmp
jmp
ret
mov
outsb
mov
les
stos
outsl
push
inc
addl
jmp
outsl
mov
mov
popf
mov
pop
sub
idiv
jg
test
jmp
xchg
fdivrs
inc
ss
push
fisubs
aam
and
mov
jne
andl
aad
pop
rolb
pop
adc
pop
loopne
fldcw
push
fldt
push
repz
aaa
call
mov
adc
sbb
stos
jae
and
mov
or
xchg
and
std
pushl
push
adc
int3
add
cmpsb
fwait
jp
fmul
push
in
pop
lcall
outsb
xchg
mov
sbb
and
and
mov
push
cmpl
dec
iret
jns
inc
mov
div
gs
jge
dec
aam
mov
jle
imul
xchg
add
fdivl
xchg
idiv
cmp
mov
cwtl
mov
popf
movsb
jnp
int3
out
imul
jecxz
mov
lods
xchg
lret
std
shlb
stos
sub
mov
mov
nop
and
xor
and
fisubrl
call
dec
jns
mov
repnz
cmp
sbb
iret
add
jbe
jae
mov
and
enter
jg
insb
and
sub
mov
inc
test
insb
mov
sbb
jne
jmp
cmpb
cli
stc
xchg
into
pop
push
idiv
sub
cmp
insl
pop
and
out
in
mov
inc
xchg
mov
lods
fs
push
cmp
xor
jae
and
xor
pop
aas
add
mov
out
xor
rclb
jle
dec
rcr
jl
subl
jge
inc
inc
push
mov
mov
xchg
mov
mov
jbe
pop
mov
mov
jbe
icebp
xchg
jbe
mov
rorb
mov
paddd
shlb
mov
in
sub
loopne
inc
push
outsl
mov
add
adc
lret
jmp
inc
movsl
icebp
ds
mov
test
mov
inc
testb
fld
mov
inc
or
lods
xlat
pop
xor
mov
out
jb
ss
mov
sub
fs
mov
les
jb
test
pop
cwtl
sbb
pmuludq
lahf
xor
aam
mov
adcl
ljmp
push
fimuls
jle
ret
push
dec
push
add
stc
enter
cmp
xchg
shrb
movsl
in
aas
pop
push
adc
cmp
pop
scas
lea
repnz
dec
sbbl
movsl
int
xchg
shlb
lods
leave
ja
mov
jb
jle
pushf
or
cli
aad
scas
rol
cmp
sbb
mull
insb
jnp
inc
ja
xorl
mov
lcall
and
in
rorl
pushf
add
xchg
pop
mov
syscall
jg
xor
lds
cltd
cli
bnd
xchg
mov
jmp
inc
xor
mov
mov
lahf
mov
and
pop
inc
movsl
inc
sbb
xchg
je
test
xchg
inc
int3
sbb
jae
sbb
xchg
iret
xchg
pop
xchg
lods
adc
add
sub
push
cmc
mov
aaa
push
mov
mov
pop
cmp
dec
cld
add
push
and
jb
xchg
mov
andb
out
xchg
push
stos
inc
mov
fs
cmp
loop
pop
mov
sbb
fwait
or
or
xchg
test
mov
shr
or
and
xchg
xchg
mov
mov
adc
bnd
jp
pop
lcall
insb
test
xchg
dec
xchg
cmc
or
jle
or
lahf
aam
rol
xchg
fld
les
test
aaa
out
jne
lock
or
and
jo
cmp
inc
or
mov
enter
stos
mov
in
int
mov
aam
pop
xor
sub
aad
out
xor
mov
mov
sti
insb
aas
clc
mov
data16
pop
mov
data16
leave
call
ret
scas
aas
popf
xorl
push
fwait
cmp
xchg
push
mov
daa
jnp
mov
xor
inc
push
adc
outsl
fldcw
stos
pop
cwtl
shll
je
ret
sarb
repnz
fsubs
jne
arpl
sub
or
xor
icebp
xor
jg
mov
add
pushf
aad
dec
mov
cmc
pusha
xchg
jnp
and
mov
call
mov
xor
addr16
data16
gs
sub
xchg
mov
mov
lret
push
jg
shrb
cmp
sahf
in
dec
mov
repz
pop
inc
imul
out
adc
fidivrs
mov
hlt
push
xor
mov
pop
out
ds
cmp
jecxz
inc
or
jp
push
inc
and
mov
sahf
push
das
adc
mov
sbb
adc
data16
cli
test
dec
lds
hlt
jmp
xor
jge
popf
lcall
push
ljmp
sbb
testl
shll
int3
sarl
nop
pop
jbe
mov
inc
test
aad
repnz
xchg
or
cmp
cmp
pop
cli
iret
enter
add
hlt
cld
icebp
fsubs
outsl
fcmovbe
sbb
pusha
scas
dec
dec
mov
jo
pop
daa
arpl
pop
movsl
cmp
fnstcw
les
push
std
in
out
mov
mov
mov
add
lock
and
adc
sub
sarb
adc
ffreep
jne
ljmp
into
scas
test
subl
ret
jbe
jp
push
xchg
das
mov
stos
movsl
pop
cli
add
leave
and
mov
adc
jo
sub
and
lds
test
inc
add
lods
jp
rorl
push
xor
mov
fiadds
movsl
push
mov
loop
dec
aaa
dec
fiaddl
dec
jmp
aas
test
jbe
addb
icebp
mov
adc
lahf
aad
adc
mov
lock
xchg
outsb
adc
out
jmp
jge
adc
outsl
lock
into
ret
bound
loop
outsl
ffreep
scas
xlat
push
add
test
mov
movsb
mov
stos
sbb
cmp
push
nop
mov
xor
sbb
cmp
cmp
iret
mov
inc
fstps
sub
cmp
fcoms
bt
mov
lahf
mov
xchg
stos
add
or
call
popa
mov
fcmove
xchg
pop
mov
leave
inc
rcrl
cld
aam
adc
push
test
mov
or
adc
sbb
xchg
jmp
inc
cmp
xchg
pop
scas
movsl
movsl
pop
out
std
pop
mov
cmp
fstpt
push
add
test
sub
leave
sub
xor
sub
or
push
sbb
mov
pop
lock
cltd
inc
pop
sub
addr16
mov
popa
jmp
and
ror
add
cmp
nop
movsb
sbb
xor
inc
xchg
btr
mov
or
jno
mov
clc
mov
lods
stos
rclb
hlt
mov
cmp
jl
push
test
mov
push
push
inc
lea
or
xor
outsb
rolb
or
je
mov
pop
scas
mov
pop
jno
sbb
adc
or
test
lret
mov
mov
mulb
mov
clc
or
inc
call
outsl
xchg
mov
outsb
xchg
push
sahf
aas
mov
ss
push
cltd
sbb
pop
xchg
rcll
mov
adc
jmp
mov
pushf
and
mov
dec
lods
inc
adc
push
xchg
and
icebp
mov
movsl
lods
test
loop
sub
jns
loope
or
inc
sub
sbb
xchg
and
dec
jno
out
rorb
pop
mov
xchg
fcmovnbe
repnz
les
enter
inc
and
push
mov
fildl
arpl
jbe
sub
imul
fildl
xchg
xchg
addr16
call
loopne
enter
or
fldt
imul
test
daa
aam
rcrb
and
sub
sub
sarl
ret
or
adc
jb
lds
filds
jae
repnz
mov
mov
pop
mov
xchg
push
call
les
aaa
cmc
cmp
mov
cmpsb
orl
test
push
pop
out
mov
das
in
mov
repz
fldz
ror
cs
cmp
mov
adc
mov
imulb
or
jp
outsl
push
xchg
xchg
loopne
loope
rorl
aam
add
dec
insl
pop
ret
sarb
inc
adc
and
loop
jb
jb
jl
sbb
lea
fwait
hlt
push
lea
cmc
nop
mov
jge
pop
pushf
daa
ret
add
shlb
insl
jno
popf
insb
or
sahf
mov
pop
inc
mov
aad
mov
insb
or
sbb
inc
fdivrp
data16
sarb
sbb
pop
pop
loop
fildl
sbb
add
cmpxchg
xchg
fsubp
push
add
in
add
xlat
out
hlt
sbb
push
fcomi
leave
mov
fs
pop
push
pop
cltd
int3
mov
loope
clc
scas
filds
xor
mov
cmp
xlat
xor
outsl
sub
subl
mov
push
mov
test
out
jne
ljmp
jecxz
test
pop
out
js
in
out
faddl
mov
sbb
inc
sbb
and
lret
or
lahf
cmp
nop
js
mov
repnz
push
xor
and
and
push
inc
outsb
stos
or
dec
call
sbb
fidivs
sub
js,pt
inc
mov
sub
and
sub
cmp
mov
push
mov
pusha
mov
mov
psubb
fimuls
jmp
sahf
xor
xchg
sar
sub
test
push
cmp
stc
movsb
add
js
pop
ret
xor
and
aaa
cs
cmp
je
stos
sub
sti
fstpl
movsl
sub
int
clc
roll
fs
xor
mov
xor
les
loopne
pop
jb
pushf
pop
sti
bound
push
js
pusha
mov
je
push
mov
inc
push
scas
fiadds
mov
xor
mov
daa
scas
pop
rorb
jnp
iret
mov
movsl
xorl
ret
sbb
lahf
daa
stos
pusha
in
lods
rclb
mov
jbe
xchg
packsswb
or
mov
fs
mov
sbb
mov
gs
in
lret
stos
jg
pop
call
lock
ret
xor
cmp
sub
enter
leave
adc
and
and
test
rolb
lods
mov
jl,pn
scas
inc
push
cmp
dec
in
ss
jle
mov
ret
adc
cmc
in
pop
xchg
imul
bound
roll
mov
addr16
out
scas
adc
mov
insl
imul
shl
pusha
push
pop
pop
inc
loop
dec
pop
adc
jle
jmp
call
mov
push
dec
js
out
stos
push
mov
add
mov
lock
pop
cmpsb
call
mov
push
jbe
addl
jae
mov
test
mov
xchg
lahf
mov
aad
push
insl
dec
rolb
dec
jecxz
rorb
xor
test
mov
dec
mov
rcrb
pop
cvtpi2ps
mov
pop
sub
iret
lcall
mov
and
mov
in
mov
inc
roll
pop
xor
pop
inc
or
cmp
cs
jae
jo
test
decl
mulb
je
cmpb
out
jmp
nop
adc
cmc
insb
gs
sbb
sub
mov
mov
leave
push
sub
nop
inc
mov
iret
mov
sub
dec
leave
dec
pop
cmp
and
pop
jne
or
insb
fs
or
jle
lds
sahf
jae
cmp
dec
test
mov
popa
repz
pop
inc
sub
mov
daa
stc
jno
xchg
mov
fisubl
jmp
inc
mov
sti
dec
inc
pop
clc
and
mov
jl
push
pop
dec
cmpsl
sbb
dec
mov
fbld
jb
pop
outsb
mov
test
aas
inc
sbb
loope
cmp
enter
inc
movd
mov
fcompl
pushf
push
ds
dec
in
imul
sub
cmp
dec
loopne
xor
mov
xchg
jne
popa
sub
and
cmp
mov
mov
lahf
xchg
mov
dec
das
sar
std
mov
add
inc
dec
sahf
inc
sbbl
or
sbb
sub
in
jl
push
xchg
and
inc
mov
insb
into
loopne
mov
push
shll
mov
imul
ud1
insl
sub
jmp
clc
inc
popl
cs
lret
aaa
in
adc
in
testb
test
cwtl
add
and
xlat
outsl
push
sub
dec
imul
xor
out
sub
dec
movsl
and
lea
into
outsb
and
xchg
xlat
push
ss
sbb
inc
xor
mov
push
jae
add
das
sub
mov
jmp
icebp
adc
cs
jmp
call
inc
add
test
push
jne
pop
out
stos
data16
fnstcw
call
push
ja
rcr
jmp
fisttpll
movsb
div
insb
sub
and
mov
scas
inc
lea
cmpsb
shll
je
mov
loope
iret
mov
dec
pop
dec
xchg
or
add
nop
jo
sahf
aam
mov
gs
push
sub
dec
jo
insl
cmp
mov
rolb
out
pop
dec
lret
push
xchg
hlt
pop
mov
fs
pop
call
pop
test
inc
inc
mov
jl
sub
mov
sbb
sbb
addl
cmpsl
lret
or
and
repnz
mov
mov
mov
push
mov
mov
push
fistl
sub
cmpsb
lock
test
into
imul
xchg
cmp
xchg
ljmp
ficomps
push
cltd
test
mov
mov
mov
enter
sub
pop
pusha
sbb
shll
fwait
rcrl
mov
pop
mov
cld
in
add
sbb
js
sub
and
adc
dec
outsb
mov
mov
enter
pop
cmp
je
enter
mov
shrb
loopne
jne
test
outsl
repnz
dec
mov
inc
sbbb
push
pop
xor
jl
ret
jno
add
or
arpl
xor
dec
cmc
push
mov
stos
cmp
sub
popa
and
jae
mov
jl
mull
pop
mov
jo
test
cwtl
push
pop
inc
inc
hlt
jg
mov
sahf
mov
lods
pusha
repnz
adc
arpl
mov
mov
jo
cmpsl
mov
push
inc
mov
mov
pop
and
or
mov
xchg
or
or
nop
ss
sub
xorb
or
or
cli
jecxz
aad
cli
jo
repz
add
xchg
pop
in
xor
out
cltd
push
int
lods
shlb
xlat
frstor
arpl
mov
pop
jg
mov
test
mov
xchg
pop
aam
in
jecxz
or
dec
imull
test
jp
imul
xor
andl
mov
or
addl
in
sbb
push
fwait
add
movl
or
xor
mov
and
pop
lds
push
dec
sub
cmp
into
inc
fldenv
mov
pop
push
imul
pop
sub
clc
lahf
cmp
or
dec
push
mov
push
xor
cmp
dec
enter
test
xor
push
cli
out
mov
ss
dec
xchg
or
dec
add
fdivrl
jns
leave
xchg
mov
leave
mov
movsb
add
dec
imul
lret
imul
test
jp
cwtl
xlat
les
mov
mov
sarl
aas
stc
in
in
je
testl
ret
add
sub
xor
cmp
mov
xchg
pop
rol
mov
test
push
ljmp
sub
push
xchg
dec
xor
out
push
mov
adc
shrb
je
jno
test
ljmp
mov
cmpl
sub
xor
inc
dec
pop
xchg
cltd
sbb
pop
popa
popf
ljmp
mov
sahf
xchg
movsb
mov
dec
lods
iret
pop
loope
dec
imul
inc
adc
je
add
jmp
lds
fmull
sbb
lods
push
cmp
fmulp
mov
fidivs
and
inc
xlat
xchg
jecxz
aam
cld
sub
sbb
ret
or
pop
addb
mov
stos
cld
inc
and
push
jo
add
mov
mov
rcrb
inc
dec
mov
ljmp
pop
mov
push
mov
push
jecxz
xchg
xlat
dec
loopne
dec
sarl
mov
pushf
inc
and
jno
cmp
push
lcall
sub
inc
lahf
test
aas
cli
xlat
outsl
dec
add
push
insb
mov
sub
sub
or
mov
or
fbld
or
mov
cmpl
sbb
aaa
rep
inc
sub
sub
jne
addr16
add
imul
insl
rcrl
das
fwait
lret
pop
sti
enter
add
loop
mov
repz
loopne
ds
push
mov
and
aad
push
fcmovne
add
cmpsb
xchg
inc
leave
pop
call
lret
sti
jbe
repnz
hlt
xchg
repnz
ret
mov
xor
mov
xchg
filds
jecxz
ret
and
stos
xor
gs
mov
fucomi
dec
or
xchg
adc
mov
mov
cmc
cs
dec
lahf
lahf
fldenv
mov
fildll
mov
sub
adc
xchg
xchg
mov
xorps
mov
enter
sarb
loopne
xchg
mov
nop
mov
and
dec
addr16
mov
adc
test
dec
jecxz
mov
movsb
stc
pop
push
pop
cmp
lret
cld
int3
sbb
pop
popa
mov
das
pop
movsb
ja
cmp
cmp
loopne
fs
xchg
sbb
outsl
push
aaa
mov
push
mov
aad
dec
push
stos
divl
jg
jb
xor
sbb
inc
js
mov
dec
push
or
in
mov
and
mov
clc
repnz
or
aas
sbb
and
loope
xor
repnz
ljmp
mov
cmpsb
icebp
pushf
add
inc
mov
cltd
push
out
cmpsb
adc
sub
jae
scas
mov
add
add
testl
pop
ja
inc
xchg
mov
sahf
jae
pop
cmpsb
or
dec
push
lret
sti
push
lods
mov
shlb
and
loope
and
dec
test
in
sti
push
add
xchg
inc
clc
icebp
sub
jmp
jns
jge
popf
mov
mov
add
cmp
mov
out
imul
pop
lcall
subb
and
inc
cmp
and
daa
aaa
insl
push
fwait
pop
jne
pop
mov
pushf
sub
mov
dec
mov
dec
sub
jg
outsl
movsl
pop
push
imul
enter
test
and
mov
sti
pusha
pop
xchg
jg
cwtl
xchg
int3
stos
daa
aam
sbb
mov
inc
fcmovne
xlat
pop
fistps
insl
or
and
std
test
arpl
pop
jge
in
testl
dec
adc
mov
push
inc
test
jl
mov
test
loop
mov
jecxz
jne
test
push
dec
out
sub
xor
cmp
es
sub
test
add
xchg
and
pop
push
call
loopne
aad
lods
mov
and
mov
stos
xor
pop
dec
and
fldcw
push
in
mov
inc
sti
nop
push
icebp
xchg
sti
dec
push
shll
mov
call
cwtl
test
call
add
inc
add
aad
clc
subb
sbb
jb
cld
aaa
mov
data16
aaa
es
mov
mov
popf
mov
push
push
xchg
pop
ds
mov
mov
jne
xor
insb
adc
imul
mov
in
test
pop
in
inc
out
cmp
add
scas
imul
loope
adc
dec
xor
and
imul
mov
mov
jae
add
pop
fidivs
addl
push
adcl
insb
push
cltd
jge
dec
in
mov
ljmp
mov
fidivl
cli
jb
mov
pop
jne
inc
into
mov
into
mov
fildll
stc
stos
enter
cwtl
mov
fistpl
aam
or
dec
cwtl
sbb
pushf
fnstcw
fwait
push
out
test
pop
pop
sub
sub
xchg
mov
push
fsub
push
bound
test
cmp
xchg
adc
add
icebp
das
outsl
lods
lahf
jns
adc
jne
arpl
negl
test
stc
pop
in
push
sti
insb
daa
in
xchg
cmpsl
mov
fsubl
adc
out
add
out
arpl
push
incb
insb
test
mov
movl
inc
dec
xchg
dec
call
jecxz
push
mov
pop
mov
inc
mov
je
dec
cmp
dec
repz
repz
das
jne
aaa
add
out
outsb
sti
jp
sbb
add
mov
mov
or
loopne
jle
or
add
mov
or
iret
je
jmp
out
clc
aaa
imul
lock
lods
add
xchg
sbbb
pop
xor
mov
call
scas
das
xchg
dec
xchg
dec
sbb
add
mov
test
fxch
and
dec
fstps
rep
and
shll
sub
jnp
shr
adc
pop
pop
mov
add
mov
push
sub
mov
enter
add
jo
mov
push
mov
pop
mov
popa
sbb
shr
add
jne
jo
mov
dec
gs
fs
std
addr16
shll
sub
pop
add
push
mov
xorb
insb
pop
lds
sbb
test
ljmp
daa
dec
imul
andl
outsb
mov
aam
cs
mov
ja
jo
sub
mov
jae
lahf
mov
cmp
fwait
pop
dec
test
ja
xor
out
or
mov
fadd
xor
adc
aas
xchg
and
emms
fldcw
fmuls
dec
mov
mov
xor
test
nop
popa
pop
fidivrl
sbb
stos
int
shrl
add
outsl
aaa
push
sbb
outsl
mov
cmc
lret
aam
cli
add
sub
sub
lea
xor
mov
push
sbb
push
adc
dec
aam
ret
pushf
inc
mov
mov
mov
popa
mov
lock
data16
insl
int3
xor
mov
mov
adc
enter
ljmp
xor
mov
or
add
scas
mov
mov
cwtl
aam
hlt
sbb
cwtl
or
repz
subl
mov
adc
mov
jo
cmp
add
jns
adc
adc
add
test
and
cwtl
rol
js
shll
scas
insb
rolb
sub
dec
push
rcr
popf
negl
call
int3
aas
jl
jne
sbb
sti
pushf
ror
jo
xchg
sbb
and
xchg
adc
mov
add
mov
sbb
cmp
ret
dec
and
es
addr16
test
movsl
les
popa
inc
test
and
loopne
and
mov
std
nop
and
xor
dec
xor
push
inc
pop
mov
or
lock
push
fnstenv
and
ljmp
movl
adc
fucomi
lods
ss
mov
hlt
fbld
add
jle
mov
xchg
aas
jecxz
xchg
mov
stc
inc
cmpsb
stc
pushf
lds
cmc
cld
mov
xchg
mov
sbb
adc
mov
fwait
add
or
push
movsb
test
jl
std
pop
movsb
jmp
mov
enter
push
insl
leave
pop
mov
and
jge
lds
xchg
mov
adc
in
pop
sbb
jge
ljmp
nop
lock
call
pop
fdivrp
fmull
xchg
jnp
sub
dec
jge
dec
aad
mov
imulb
test
adc
or
scas
aam
push
and
fsubs
mov
mov
jo
sub
xchg
clc
adc
fcomps
fstl
adc
inc
pushf
sarb
loop
push
loopne
mov
jb
pusha
mov
je
mov
sub
push
xchg
xor
subb
mov
jae
addr16
leave
fidivs
fbstp
in
aam
xor
jno
push
lods
jno
adcl
fsin
fmulp
adcb
dec
xchg
lods
mov
loop
mov
cltd
insl
xchg
sbb
push
mov
lods
mov
sub
mov
jle
jp
mov
aam
subb
adc
or
aam
xor
repz
sub
lea
jg
fisubrs
fstl
ficoms
inc
imul
popa
xor
lock
cmp
push
pop
jecxz
cmpsl
fidivl
push
mov
mov
jbe
gs
mov
cmp
mov
jle
test
mov
ja
mov
sub
icebp
les
or
pop
fnstcw
in
nop
sbb
out
addr16
jge
and
adc
cmp
lods
scas
mov
cmpsl
push
sub
clc
int3
mov
int3
repz
iret
inc
fistl
inc
push
aas
rcrl
out
or
mov
mov
in
addr16
subl
sbb
stos
or
push
scas
jbe
rcrb
leave
ds
cwtl
aad
or
xor
in
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
jmp
pusha
int
scas
cli
fucom
ret
mov
scas
pusha
leave
subb
or
subb
or
subb
or
subb
or
and
adc
or
repnz
xchg
add
pop
fimuls
mov
lods
mov
stos
pop
sub
xor
inc
movsb
out
lret
lahf
or
iret
jae
mov
scas
pusha
leave
subb
repnz
cwtl
pop
mov
add
mov
fmul
ret
cmp
add
push
xchg
push
js
lock
nop
sti
jae
dec
jmp
movsl
mov
mov
xor
pop
mov
add
mov
int
push
add
in
lock
out
jae
aam
movsb
and
adc
cmp
and
pusha
leave
subb
or
and
insl
push
ret
mov
scas
pusha
sub
enter
jg
pusha
jne
scas
cli
and
ret
mov
scas
jo
subb
dec
mov
mov
cli
and
ret
mov
scas
pusha
int3
subb
or
ja
pusha
int
scas
sti
sbb
jnp
mov
scas
pusha
flds
ret
mov
mov
cli
and
ret
mov
scas
pusha
leave
subb
arpl
mov
jns
mov
scas
pusha
leave
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
jle
add
pusha
leave
subb
or
subb
cmp
xor
pusha
leave
subb
and
or
add
subb
cli
mov
subb
or
subb
ljmp
scas
cli
and
ret
mov
scas
pusha
leave
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
subb
or
add
sub
in
jns
mov
pop
ficomps
pop
dec
inc
jae
adc
ror
mov
dec
inc
sbbl
pusha
out
daa
daa
scas
jae
imul
outsl
pop
add
pop
mov
int
push
repnz
jno
add
and
add
pusha
rorl
inc
and
xor
test
jo
jno
mov
push
in
mulb
mov
nop
movsb
test
jno
cmp
dec
sub
pushf
jno
movsb
pop
leave
and
inc
or
daa
sub
in
movsl
jbe
push
jno
movsl
sti
mov
xchg
hlt
jp
es
mov
or
xchg
test
push
jne
leave
xor
mov
sub
xchg
movsl
outsb
stos
and
dec
jae
xor
testb
insl
stos
sbb
imul
stos
rclb
cmpsl
dec
inc
stos
pop
mov
pop
push
sub
imul
or
adc
mov
and
cmpsb
popa
pop
xchg
mov
xchg
arpl
mul
or
cmp
jno
cmc
cmpsl
fs
mov
in
icebp
dec
aam
pop
xor
repz
gs
fidivl
iret
loop
clc
or
or
xor
sahf
enter
out
out
out
rcr
je
repnz
add
fmull
add
add
inc
jl
mov
sti
xlat
sub
in
sbb
adc
push
mov
sbb
repnz
shrb
shlb
pop
rolw
pushf
leave
cmp
sar
lahf
mov
cmp
add
shlb
xor
sbb
jmp
out
push
mov
vaddsubps
insl
sti
jbe
xor
dec
jbe
adc
jmp
jbe
mov
gs
cmp
mov
mov
adc
in
jg
aad
inc
clc
daa
fldenv
or
out
mov
pop
sub
lahf
pushf
cmp
pop
push
and
ret
jmp
push
xchg
and
cmpsb
jecxz
mov
inc
and
xchg
pop
xchg
jle
rcll
push
add
fsubl
movsb
icebp
jae
jns
repz
test
mov
out
fcoml
lcall
lret
filds
test
sbb
pop
enter
push
dec
out
stc
hlt
scas
add
mov
mov
pop
mov
adcb
lcall
loop
xchg
push
jns
sub
fldl2e
rorl
lods
repz
call
adc
push
cmp
outsb
jae
mov
or
leave
int
push
aad
mov
pop
fmuls
loop
iret
cltd
mov
iret
push
and
xchg
push
test
xchg
pop
inc
or
or
loop
push
int3
xor
bound
data16
stos
push
sbb
or
in
inc
loopne
sbb
adc
dec
outsl
pop
mov
dec
aaa
adc
outsl
inc
add
mov
call
mov
pop
in
call
cs
pop
mov
mov
push
or
mov
sub
cmpsl
dec
arpl
push
adc
adc
push
mov
push
idivl
inc
xchg
aad
ss
ret
movsl
addr16
scas
or
test
mov
roll
in
push
adc
xchg
andb
inc
repz
cmpxchg
mov
or
repnz
jns
sub
inc
xchg
or
outsb
adc
filds
mov
roll
inc
pop
xchg
or
in
mov
andb
push
sbb
mulb
out
cs
mov
push
mov
inc
lds
xchg
test
push
daa
sahf
cmpsb
lret
pop
sbb
lret
dec
je,pn
in
in
xchg
scas
or
test
or
add
inc
xchg
sub
xor
lcall
dec
cmp
vaddss
aam
out
dec
and
aam
mov
int3
dec
rolb
lock
leave
test
bound
pusha
lods
xor
xchg
repz
or
rdmsr
pop
movsl
cld
pop
and
add
test
lods
movsb
fmulp
or
shl
enter
in
imul
fnstenv
mov
insb
push
test
shlb
inc
push
and
and
imul
inc
fdiv
dec
sub
insb
jmp
mov
and
fiaddl
loope
mov
loopne
out
cli
lock
aad
fwait
and
nop
sub
or
sub
and
fwait
cmpsb
cld
lret
sub
fbstp
pop
xor
xchg
or
mov
inc
jbe
aas
push
xchg
data16
clc
and
js
insl
or
push
add
into
xor
cld
jae
loop
xor
mov
jge,pt
inc
out
ss
sbb
test
fcomps
add
scas
scas
dec
cld
or
adc
or
jg
mov
enter
mov
icebp
movsb
sub
push
lret
dec
pop
jno
push
mov
jg
aaa
cmpsb
cmp
push
pop
cwtl
stos
int
lods
orl
aaa
lock
jns
lahf
sbb
fdivl
xchg
ret
xorl
popa
sub
out
pop
in
cltd
iret
inc
mov
out
and
pop
aam
fisttpll
push
xor
and
and
or
ds
loop
fnsave
sti
adc
pop
out
outsb
add
pop
mov
cmp
ss
add
or
and
testb
push
in
push
test
mov
hlt
rorl
jg
mov
scas
stos
out
dec
cmp
insl
cltd
or
add
lods
and
jno
pop
lcall
sbb
mov
scas
int
xor
jne
shrd
nop
mov
gs
cmp
sub
cmpsl
push
ljmp
pop
xlat
adc
scas
lret
fs
mov
scas
out
push
sahf
fsubl
sbb
pop
nop
lock
lock
pusha
or
cmpsb
mov
xor
cmp
xor
jnp
cmpl
mov
subb
insl
imulb
xor
inc
push
daa
mov
movsl
shll
push
test
divl
mov
in
int3
inc
and
outsl
cmp
push
in
pop
and
push
daa
icebp
push
fwait
xor
xchg
into
mov
scas
fidivrl
imul
pop
fs
lret
jl
jge
cltd
cwtl
push
jnp
pop
sti
pop
inc
inc
nop
hlt
scas
sbb
sbb
movsl
bound
int
push
ret
daa
add
pusha
repnz
pop
lret
fxch
sub
xchg
not
fistpl
and
or
aad
out
fbld
in
lods
out
cmc
add
jae
dec
mov
fdivrs
dec
bswap
cmc
lret
cli
xor
adc
lret
js
adc
mov
sbb
push
lahf
fdivr
scas
sbb
cwtl
mov
push
stos
ret
push
stc
adc
xchg
bound
push
mov
pop
fstp
mov
jecxz
pop
adc
inc
jno
add
sub
dec
fdivrs
call
sbb
aam
add
cmp
pop
sub
mov
cs
xor
push
icebp
lods
out
shlb
in
xor
popa
jns
mov
gs
lods
pushl
rcll
test
xchg
push
aaa
dec
outsb
lock
xor
or
xchg
das
mov
xor
jns
out
or
icebp
mov
out
ret
dec
cmp
dec
jmp
mull
xor
mov
push
mov
sub
lret
sahf
faddl
popf
movsl
jbe
mov
inc
xlat
cwtl
cmc
jecxz
aaa
pushf
pop
repnz
rorb
inc
fstpl
mov
adc
dec
inc
mov
mov
add
xchg
cli
xorl
and
pop
jns
cmpsl
adc
bound
fdivl
and
hlt
mov
cmp
mov
lds
jl
cmp
pop
mov
enter
jno
ret
fimuls
dec
mov
aaa
shrb
fldenv
push
xchg
lcall
sub
jbe
lea
mov
pushf
or
sbb
inc
or
lods
adc
lret
lret
jp
scas
enter
lcall
std
inc
aas
cs
scas
mov
in
cld
adc
loopne
and
pushf
mov
sti
insb
ss
push
and
aaa
hlt
popf
sub
negl
loop
xchg
incb
inc
add
shrl
iret
shl
rol
out
ss
jne
fisttpll
fcmovnb
out
fwait
test
mov
nop
mov
and
test
mov
hlt
xor
mov
js
js
scas
in
push
ret
and
and
push
lock
pop
mov
hlt
lds
das
and
leave
sbb
push
lods
aad
xor
sarl
pop
in
insl
xor
insl
pop
push
mov
push
jle
inc
xchg
mov
scas
or
cmpsb
jbe
adc
std
jp
mov
leave
pop
cmp
push
cmp
dec
pop
maskmovq
mull
add
xor
test
mov
fdiv
inc
inc
mov
test
xor
jae
js
jno
mulb
xor
nop
les
jno
aas
mov
lds
cld
repnz
icebp
push
jno
fstps
dec
scas
jb
jne
sbb
loopne
xor
int
ret
or
aas
clc
pop
mov
xchg
mov
dec
xchg
and
inc
xchg
fstpt
cmpsb
xor
lock
jp
jp
xchg
xchg
xchg
sub
pop
icebp
fldcw
cmp
push
mov
mov
sub
arpl
mov
adc
les
pusha
cmp
cmpsl
mov
push
jp
jmp
cli
les
xlat
out
sub
push
or
movsl
loop
icebp
jp
in
jo
jno
and
cmp
mov
or
and
cwtl
imul
call
xchg
nop
into
or
movsl
imul
cwtl
fwait
mov
or
jmp
in
xchg
and
push
xor
sbbb
leave
jp
stc
js
pop
jno
add
bound
add
imul
mov
icebp
leave
sbb
push
sub
aaa
sub
or
xchg
mov
xchg
dec
add
add
dec
jge
jns
pop
add
pop
or
rorl
cmp
mov
sub
push
ret
push
xor
lock
cli
cmp
ljmp
dec
js
sbb
out
add
pop
jl
in
dec
cmc
mov
cmp
test
gs
cwtl
jp
fs
mov
sbb
sti
mov
or
pop
insb
jns
shrb
ss
inc
sub
push
pop
push
movsl
stc
lret
pop
test
adc
ja
inc
lods
enter
lret
xor
sub
jl
imul
adc
push
mov
jmp
or
push
mov
ss
daa
or
shll
ret
ret
aam
shlb
bound
push
cmp
pop
push
pop
pop
cmove
out
add
mov
xor
push
clc
push
pop
sbb
jne
ds
sti
stc
mov
clc
fdivp
pop
arpl
add
data16
rorl
push
push
or
cmp
paddb
clc
or
mov
cmpsb
add
fs
das
cld
cmp
lret
jle
and
and
fwait
sub
pop
push
aam
cltd
inc
mov
addr16
inc
xchg
pop
push
ds
and
sub
cmp
push
idivb
xor
jns
mov
inc
insl
ss
pop
test
mov
xchg
cmc
cmpsb
push
cmp
lcall
or
cmc
and
jmp
lahf
xchg
cwtl
pop
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
