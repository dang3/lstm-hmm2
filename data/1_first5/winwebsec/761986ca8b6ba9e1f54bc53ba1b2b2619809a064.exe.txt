lods
das
popa
xchg
dec
jecxz
inc
ret
push
mov
lods
mull
sbb
pop
pop
jno
and
rcll
sbb
and
xchg
jo
fs
adc
mov
add
call
fsts
sahf
aas
mov
xorl
mov
out
pop
sub
xor
sbb
xlat
and
lods
in
lret
rcrb
dec
jno
call
sub
test
mov
inc
mul
fs
or
shlb
push
mov
sub
xchg
fcoms
push
inc
ja
call
incb
daa
jno
kmovw
in
jae
dec
neg
aas
out
dec
into
mov
push
mov
adc
sbb
push
aas
repz
lahf
int
mov
ficoms
jecxz
mov
ljmp
repnz
iret
jmp
clc
into
mov
dec
jmp
sar
pop
xlat
js
movsl
mov
dec
test
test
push
pop
test
sub
sub
lahf
adc
push
pushf
popf
pop
ljmp
jne
jnp
sub
test
fildll
leave
cmp
loope
aaa
cs
mov
out
xchg
into
push
rol
adc
notb
fmul
pop
mov
fbstp
push
or
pop
push
hlt
or
mov
icebp
clc
addr16
aaa
adc
imul
add
adc
xchg
addb
adc
rolb
andl
mov
in
fnstsw
dec
inc
jae
ret
arpl
cmp
test
sub
sldt
sbb
cs
sbb
or
dec
rolb
rcrl
jmp
imulb
int3
lds
xor
and
test
imul
mov
outsl
mov
mulb
mov
in
jmp
add
adcb
into
inc
jp
add
mov
mov
xchg
lcall
pop
pop
dec
scas
enter
pop
pop
sub
mov
dec
sub
mov
sti
cmp
aas
mov
or
adc
mov
sub
test
fldenv
push
and
outsl
iret
test
add
cpuid
xlat
push
insb
es
rcll
mov
push
sbb
adc
lods
adc
inc
out
push
popl
dec
ljmp
push
mov
lret
adc
fidivrs
outsl
enter
clc
sbb
cwtl
movsl
mov
pop
cmp
jne
add
jle
test
sbb
mov
dec
xchg
xchg
or
xor
push
aad
ret
in
outsb
jb
mov
adc
outsl
loope
dec
dec
orl
pop
ret
lret
out
sbb
sarb
inc
push
jo
fldpi
dec
stos
popf
test
sub
xchg
adc
xor
fldcw
aam
imul
xor
imul
push
jnp
in
and
sbb
test
inc
cs
jmp
ds
sub
push
and
or
sbb
fnstcw
andl
pop
xchg
clc
jne
adc
je
in
pop
mov
lock
inc
xchg
cmp
js
sbb
lods
and
pop
fstpt
xchg
repz
lret
loop
add
dec
sbb
roll
imul
cmc
cmp
in
mov
sub
inc
in
and
rclb
loopne
dec
aad
js
loop
xchg
call
mov
sub
lock
pop
idiv
aas
mov
fiadds
iret
fisubs
les
adc
pop
out
test
aad
cmpsb
test
and
out
mov
popf
push
subb
inc
cmp
jge
push
fistpll
insb
or
inc
daa
sti
mov
in
xchg
lahf
xchg
test
mov
cmpsb
ljmp
push
pop
movsl
push
test
adc
cmc
ljmp
imul
ljmp
xlat
lret
stos
sub
leave
mov
inc
int3
scas
xchg
inc
daa
push
jecxz
sub
xlat
imul
cmp
shll
outsl
mov
pmulhuw
adc
fstl
add
movsb
pop
test
popf
or
ja
pop
pop
stos
cs
jle
inc
dec
mov
cwtl
lret
ficoml
stc
mov
or
cmpsb
std
push
fildl
ljmp
and
sbb
inc
mov
adc
xchg
mov
xlat
pop
call
pop
outsb
leave
loopne
cli
mov
loope
loop
insl
cwtl
mov
cs
mov
push
sarb
enter
adc
mov
je
jo
sarb
mov
mov
lret
ja
bound
jo
dec
add
mov
std
jmp
mov
or
mov
pushf
dec
sub
mov
cmp
xchg
xor
incb
adc
sub
mov
jno
arpl
dec
insl
pop
adc
ds
int3
jbe
out
push
enter
testl
push
dec
dec
imul
sub
pop
push
sti
jg
enter
add
or
decb
in
scas
fcmovnbe
push
lcall
cmc
jno
movsb
loopne
jmp
mov
pop
push
xchg
stc
mov
sub
push
jmp
mov
cmovne
sbb
or
call
aam
push
into
lahf
int
movsb
stc
pop
push
jno
incb
sub
mov
mov
xchg
jp
jne
sub
movsb
mov
mov
fidivrl
xor
adc
mov
js
mov
popf
pop
and
pushf
or
jo
add
jge
mov
pop
mov
sbb
or
inc
clc
xchg
add
sub
movsb
cmp
outsb
scas
inc
rcr
loope
icebp
out
inc
sbb
and
scas
cs
pop
lods
cmp
push
sbb
mov
and
fstpt
or
push
cmp
mov
jg
out
imul
daa
out
aad
sub
pushf
jae
ljmp
push
push
push
cmp
int3
pusha
cwtl
std
aad
les
aaa
gs
nop
call
and
cmpsl
je
fcomip
das
and
dec
test
imul
push
xchg
into
rolb
push
jle
sbb
lock
mov
inc
jecxz
sbb
xchg
aaa
sub
pop
jne
xor
repz
mov
ss
lods
fdivs
jnp,pt
mov
cmpb
pusha
mov
mov
lret
push
test
jb
cmp
push
jmp
mov
inc
aam
sub
mov
or
inc
push
bound
and
push
mov
mov
rcll
pusha
adc
inc
scas
out
mov
push
mov
mov
push
in
ja
xorl
mov
fs
addb
aad
and
cmp
pop
cmpsl
mov
xchg
inc
sub
mov
in
push
sbb
loope
fdivl
fnstenv
mov
cmc
and
std
aaa
sub
je
jns
cmp
dec
fldcw
sub
je
stos
lea
pop
dec
cltd
enter
push
xchg
cmp
dec
mov
dec
or
fcmovbe
push
leave
mov
xor
ffree
lahf
cmp
inc
pop
and
push
or
icebp
xor
mov
js
stc
add
cmp
or
out
add
cmp
in
adc
imul
neg
insb
pop
and
pop
sub
inc
and
mov
movsl
jl
jge
push
push
sub
dec
aam
xchg
les
sti
das
out
idivl
std
xchg
mov
and
flds
rcrb
ja
sbb
jmp
adc
push
sub
mov
enter
sbb
mov
pop
cmp
scas
mov
daa
inc
aas
mov
adc
mov
gs
or
test
cmp
sahf
mov
jecxz
push
mov
jmp
repz
out
into
aas
mov
stos
fdivs
popf
adc
movsl
mov
incl
mov
movsb
xor
scas
sbb
dec
pop
or
orb
ret
sub
xor
fwait
sub
loop
lods
fs
push
push
lret
fistpll
das
ja
fidivs
pop
jbe
sti
sub
add
cmpsb
int3
jge
scas
sbb
push
xlat
outsb
sub
cmp
push
add
rorl
mov
sbb
push
mov
jmp
loopne
filds
into
lods
movsb
xor
jnp
xchg
mov
dec
aam
repz
nop
imul
jb
fdecstp
mov
je
out
jg
icebp
push
loop
lcall
subl
movsb
ss
enter
mov
inc
xchg
jo
push
ds
and
cmp
pop
icebp
sub
fisubrs
popa
jmp
or
out
and
jp
xlat
pop
pop
sub
rorl
pop
stc
stc
in
fs
jo
outsl
out
mov
xor
loop
push
out
adc
sahf
mov
inc
stos
ss
mov
andb
add
adc
inc
add
xchg
ss
mov
es
and
iret
push
fadds
stc
hlt
pop
and
jnp
or
push
int3
ss
shll
sub
pusha
sub
pop
aas
mov
add
mov
aas
faddl
add
cli
adc
into
mov
sub
icebp
add
ficomps
jb
pop
mov
mov
jne
and
sub
mov
xchg
mov
mov
adc
test
fwait
push
xor
fnstenv
push
fdivrl
pop
or
ffree
add
cmpb
or
and
std
pusha
jnp
fstsw
mov
jge
or
cmp
cmp
xchg
adc
test
push
inc
or
filds
call
mov
cmpsb
add
or
jns
shlb
adc
int
movsl
lahf
scas
lds
push
dec
fsubl
imul
adc
shl
mov
inc
or
xchg
in
push
and
sbb
mov
fyl2xp1
test
jbe
pop
out
push
ret
cltd
cmp
inc
sahf
mov
xchg
and
fs
xor
test
sbb
add
mov
jne
mov
xchg
push
pop
in
jno
jb
into
sbb
arpl
cltd
filds
in
aad
pusha
xchg
insb
test
fnstcw
addl
jmp
idiv
sbb
pop
xchg
mov
roll
mov
mov
mov
dec
loop
call
push
in
adc
pop
out
clc
out
outsb
lahf
sub
sarl
xchg
push
adc
or
clc
and
or
repz
pop
sbb
or
mov
inc
loopne
or
jb
push
mov
cmp
pop
mov
jb
pop
pop
dec
jle
mov
cmp
cmp
adc
ja
test
fstl
cmp
out
je
inc
push
popf
mov
adcb
fcmovnb
insl
test
lds
test
push
fsts
push
push
add
test
sub
data16
cmp
xor
shrb
jge
js
mov
jno
cli
add
int
enter
and
test
adc
loope
cmc
hlt
out
sti
pop
xchg
pop
insb
or
es
lock
fisubl
popf
sbb
dec
cwtl
test
or
imul
idivb
xor
jle
std
push
mov
loop
mov
mov
sahf
sbb
ficomps
insl
sub
stos
and
sbb
lods
cmp
outsl
and
adc
movsb
pop
xlat
sub
sbb
mov
push
pop
mov
psrlq
leave
sti
xchg
pop
inc
or
inc
icebp
mov
ss
mov
fisubl
fdivrl
das
dec
mov
shufps
xchg
outsl
rcrb
mov
mov
xor
xchg
xchg
push
fildl
ret
lahf
dec
cwtl
xor
push
or
add
xorb
pusha
mov
loopne
inc
stos
cmpsl
cmpsl
pop
pop
mov
dec
movsl
xchg
pop
mov
je
gs
lods
mov
ja
pop
push
sbb
adc
jns
inc
sub
jo
dec
xor
pop
pop
in
xchg
and
push
popa
xchg
sub
cmpsl
pop
xchg
inc
push
testb
adc
xchg
incb
repz
cmp
mov
dec
sahf
pop
fcmovbe
mov
aaa
fildl
leave
aam
shlb
inc
dec
add
test
popf
pushf
inc
jns
cwtl
add
ja
jo
fsubrs
mov
cmc
shlb
test
jne
mov
jno
sbb
push
inc
mov
xor
mov
jle
xor
add
xchg
dec
rclb
ficompl
test
popa
jecxz
shll
or
loopne
imul
or
lret
xchg
nop
std
mov
sti
icebp
adc
xor
pushf
enter
mov
out
addr16
sub
xlat
rcll
xchg
push
sbb
cmc
or
int3
in
scas
enter
adcb
mov
add
addl
pop
out
pop
lret
dec
and
icebp
je
rcrl
scas
aad
pop
popf
cmp
addr16
in
or
insb
stos
xchg
mov
mov
push
adc
call
aas
shrl
adc
outsb
mov
xchg
jmp
cmp
loope
cli
std
sti
divl
push
imul
pusha
dec
and
push
mov
bound
sbb
xchg
xchg
sub
mov
jnp
pop
pop
or
mov
mov
inc
arpl
pop
mov
and
roll
add
dec
mov
push
sub
push
push
adc
xlat
int
pop
ror
sbb
std
inc
or
jne
mov
push
jl
mov
push
es
js
lea
jecxz
rcrb
out
cmpsl
cmp
jne
fdivrp
scas
sbb
rcrb
xor
jno
arpl
outsb
pop
adcl
test
sub
push
frstor
outsb
ds
add
push
fidivrs
cmp
lea
jle
je
jnp
jle
push
push
cmp
je
sub
mov
pop
outsb
dec
cwtl
int
std
sub
idivb
push
push
ds
into
imul
mov
je
pop
pop
lods
xchg
dec
adc
mov
icebp
or
divl
push
jne
inc
inc
lahf
sbb
jmp
decb
inc
dec
jg
xchg
enter
enter
popa
mov
or
shrb
push
repnz
mov
fcmovnb
mov
ds
ret
cltd
aad
imul
pop
xchg
dec
insl
mov
ret
inc
mov
inc
dec
xchg
gs
aaa
testl
sub
cmp
mov
mov
jne
push
nop
fs
jg
sub
fstp
xchg
int
iret
mov
fiaddl
imul
loope
filds
and
fstl
or
out
stc
pop
mov
test
inc
lcall
mov
mov
push
pop
ss
fnstcw
cmpsl
cmp
jne
jmp
rcrl
xor
sub
fdiv
and
test
xor
stos
test
pop
or
sti
xor
xor
pushf
cmp
pop
mov
push
xor
dec
mov
into
test
and
mov
pop
lahf
pop
pop
mov
jg
dec
push
jo
loop
push
dec
out
repz
ret
xlat
andl
add
dec
mov
mov
or
inc
into
mov
xor
das
dec
adc
mov
add
call
sub
bswap
ret
out
add
mov
mov
fldcw
cs
dec
sti
std
inc
dec
shlb
xchg
into
lcall
clc
mov
xor
call
push
sbb
mov
jecxz
push
mov
cs
mov
pop
es
sbb
das
nop
and
push
data16
mov
fdivrp
jne
outsb
xlat
data16
stos
xchg
cmpsb
loopne
dec
into
loope
jp
xor
scas
jmp
ss
int3
jge
outsb
iret
jmp
fwait
stos
scas
jp
xchg
mov
fbstp
rcll
iret
mov
sbb
subl
fidivs
loopne
in
mov
insb
xor
pop
adc
and
pop
push
es
pop
mov
or
and
rorl
lea
pop
cmp
cld
or
rolb
lods
mov
or
mov
out
add
jne
jne
push
aaa
add
movsb
push
cmpsb
stos
daa
push
divl
dec
push
dec
stos
stc
jmp
mov
stos
js
mov
push
push
iret
adc
xchg
jg
stos
xor
ret
ret
aad
test
leave
mov
cltd
lea
ds
es
aaa
or
loop
out
adc
and
add
mov
push
movsl
cli
dec
sbb
pop
call
jecxz
pop
push
mov
xor
popf
aas
stos
adc
or
mov
sarb
push
loope
rorb
push
cltd
or
pop
mov
rcll
fstpt
ret
pop
jecxz
lods
movsl
sarb
out
cmp
mov
imul
test
stos
add
jb
dec
mov
jb
stc
pushf
cmpl
bound
jecxz
test
push
mov
mov
mov
enter
push
mov
jo
dec
mov
stos
loope
xchg
jp
lds
add
pop
ss
and
mov
bound
xchg
in
xchg
fmuls
mov
fldt
movsl
mov
aam
ja
xor
cld
out
out
adc
sbb
adc
sub
dec
les
mul
sahf
xchg
xor
nop
outsb
push
push
cmp
in
dec
in
push
push
sbb
inc
popf
mov
push
push
lret
jmp
fmuls
fdivs
stos
push
sbb
into
test
fstpt
imul
xchg
xchg
xchg
dec
cwtl
pushf
xchg
xor
sub
jmp
push
xor
and
dec
inc
cmp
dec
xchg
cltd
cli
mov
pop
ficoml
mov
aam
fs
adc
int3
test
jecxz
xor
pop
cmpl
adc
or
mov
add
enter
or
lock
sub
insl
pop
mov
rorl
jb
and
test
sarl
pop
outsl
cmp
mov
xchg
cmp
aas
dec
insl
icebp
test
testl
lret
and
push
push
jns
aam
lock
mov
cmp
mov
adc
fwait
stc
xor
dec
push
xchg
xchg
iret
push
inc
and
inc
ret
or
int3
pop
cmp
scas
sub
sbb
adc
std
or
sub
push
mov
lods
incl
xlat
sbb
ja
hlt
push
in
push
int
pusha
push
fidivs
insb
push
rcrb
lret
push
push
cmc
inc
ret
repnz
xchg
popa
mov
push
inc
repnz
test
adc
cmp
push
daa
or
sub
out
dec
std
sub
clc
cmp
push
outsl
movsl
fisubl
dec
lret
mov
adc
clc
int
les
and
adc
jno
aam
ret
or
push
mov
ds
xchg
xor
sub
push
or
mov
and
push
int3
sub
ss
jb
inc
jns
outsl
sub
push
jl
and
and
aad
arpl
mov
pop
ljmp
shll
mov
out
clc
test
aas
in
xor
or
mov
jns
jmp
stc
cmp
jg
out
pop
es
push
gs
fistpl
xchg
loopne
xchg
movsl
dec
insl
scas
ljmp
jmp
nop
xlat
xchg
dec
rcll
adc
lret
jo
mov
adc
or
outsl
mov
dec
les
fisttpl
outsl
imulb
insl
out
aad
outsl
dec
popa
xorb
dec
pop
mov
push
lea
xlat
jg
adc
pushf
jg
mov
cmp
gs
dec
push
dec
sub
cltd
aas
sub
sarb
nop
loop
jne
cmc
xor
fbstp
xchg
rep
mov
jg
ja
rorl
adc
mov
push
pop
divb
xor
cmpsl
jbe
nop
jnp
xchg
fisttps
pop
pop
orl
xchg
xor
push
enter
add
mov
pop
in
sti
add
mov
dec
jne
xchg
and
jns
or
and
mov
mov
pushf
sbb
nop
adc
inc
cmc
shrb
inc
sbbb
cmpsb
imul
in
mov
mov
cmp
icebp
sub
add
jae
aad
sub
xlat
sub
adc
outsl
mov
dec
insl
cli
jl
pop
sub
push
push
sub
push
mov
dec
aaa
cmp
lods
and
jmp
out
push
cli
jns
out
mov
pusha
pop
add
aaa
push
int3
cmpsl
stos
fnsave
inc
sbb
int3
mov
lcall
or
movsb
and
cmp
sahf
dec
sub
out
dec
decl
xor
out
dec
ss
aad
lods
push
outsb
ret
ja
es
sbb
xchg
pop
or
mov
js
iret
mull
in
movsb
mov
aam
sub
lahf
hlt
adc
jb
mov
xorl
into
andb
ret
addps
pusha
xchg
andb
cs
fldl
inc
cmpb
pusha
pop
xlat
push
pop
mov
and
ljmp
insb
pop
popa
fsubp
scas
sub
push
daa
loopne
inc
mov
ficoml
rorl
mov
scas
adc
cmp
les
ficompl
adc
lret
mov
adc
mov
push
or
in
comiss
jno
pop
fstpl
cmp
jmp
loop
mov
stc
fwait
incl
xchg
nop
aam
push
in
pop
mov
outsb
cmp
xlat
incl
push
ret
xchg
cmp
lods
and
pushf
or
enter
jae
add
add
sbb
xchg
jge
jle
stc
int3
pop
xchg
pusha
add
pusha
lds
mov
scas
fldcw
push
mov
push
mov
imul
outsl
inc
mov
inc
add
out
fwait
sub
int3
jge
sbb
in
les
jmp
sbb
jns
and
push
insl
into
jp
push
notl
pop
or
and
cmpsl
lods
scas
insl
xchg
pushf
mov
or
andb
addr16
jnp
xchg
test
mov
lret
and
mov
push
inc
in
lds
mov
adc
push
pop
loop
stos
faddl
nop
fwait
test
mov
imul
xor
mov
pop
pop
mov
sbb
mov
cmp
dec
movsl
in
test
inc
jge
push
mov
mov
stos
jmp
rclb
dec
rcll
pop
popa
push
jns
enter
inc
es
arpl
mov
jne
push
fcmovnu
es
cli
push
adc
icebp
out
sub
push
or
mov
in
iret
xchg
rorl
stos
inc
sarl
pop
xchg
mov
xor
xchg
lahf
xor
lahf
mov
and
out
dec
and
dec
outsl
lock
loope
stos
insl
popf
inc
ljmp
or
pop
aas
mov
mov
outsl
pop
pop
sub
inc
in
lahf
or
sbb
shrb
stos
inc
add
xor
test
pop
pushf
popa
les
cld
dec
inc
int
fldl
inc
or
or
and
mov
pop
push
lret
stos
xor
jnp
enter
inc
xlat
mov
hlt
les
jae
ds
or
sbbl
popf
xchg
cli
mov
push
out
dec
inc
inc
xchg
bound
ss
aam
lahf
jae
push
sub
arpl
fstpt
xor
inc
jmp
call
lods
mov
push
icebp
mov
cmpsb
jle
and
ss
insl
sarb
mov
ret
adc
stos
inc
scas
jge
cltd
or
mov
mulb
mov
sub
icebp
test
fists
cmc
xchg
ret
xor
leave
jmp
bound
cmpsb
cmpsb
ds
fidivl
jae
push
sbb
cmp
repnz
popf
fisubrs
inc
pop
std
xor
push
std
scas
push
add
dec
aaa
dec
std
xor
cmp
out
mov
test
sti
fdivrs
ds
mov
ret
cmp
sbb
rorl
insb
fwait
repnz
iret
rcr
xor
fildl
xorb
xchg
adc
add
mov
js
mov
fildl
cmp
mov
push
hlt
xor
ficoms
pusha
mov
imul
lods
mov
or
mov
aad
mov
mov
sub
mov
jb
cwtl
dec
aam
scas
shlb
push
sbb
roll
xorl
fsubs
lods
mov
shll
adc
xor
mov
fldcw
roll
sub
movsl
add
jge,pn
add
and
in
ljmp
sub
jge
insl
mov
addr16
fxch
inc
adcl
pushf
in
push
fwait
adc
out
test
sbb
mov
test
dec
div
sbb
movsl
push
mov
adc
enter
jae
lcall
push
ret
fnsave
insl
fdivs
push
push
pop
int3
push
mov
paddw
dec
add
es
jno
les
sbb
mov
cmpsl
aad
and
adcl
aam
jle
and
into
inc
xchg
lods
inc
dec
jl
xor
mov
or
scas
jmp
leave
cmpb
mov
adc
cmp
pushf
adc
cli
imul
and
jl
or
dec
xchg
sahf
cli
in
mov
in
lods
shll
jo
pop
adc
jmp
negb
movsb
dec
dec
dec
dec
ja
fimull
rolb
mov
inc
repnz
test
dec
in
and
or
bound
mov
fcompl
push
orb
sub
loopne
lahf
loope
lods
mov
scas
cmp
idivb
imul
loopne
cli
and
pop
in
mov
sub
cli
sub
pop
pop
flds
jp
fisubs
mov
popf
pop
mov
cmpsl
cmp
ljmp
movq
pusha
mov
xor
in
lock
adc
push
jnp
ja
or
xchg
inc
fnstenv
jnp
and
in
push
cmpsl
lcall
test
or
adc
push
ret
cmp
mov
jle
cmp
jo
xor
sbb
outsl
decb
cwtl
jle
enter
mov
mov
lods
jg
hlt
and
mov
loopne
pop
gs
mov
loope
jl
sub
sbb
jecxz
in
in
mov
rolb
dec
in
fwait
bound
adc
sti
gs
xchg
adc
imulb
mov
adc
or
std
xlat
mov
pop
shlb
test
scas
mov
xor
mov
fs
ffree
mov
and
mov
or
dec
inc
adc
rcrl
push
pop
and
jle
out
mov
sti
xor
cmp
xchg
mov
aam
lahf
mov
frstor
stc
lahf
fadd
sarl
test
cli
test
jmp
and
idiv
push
loop
xorw
push
inc
cmp
cmp
dec
aas
inc
or
xchg
dec
push
not
xchg
jo
ret
es
or
lret
jle
inc
adc
mov
movsl
sbb
shrb
pop
mov
sub
out
call
test
mov
mov
sbb
aam
daa
movsl
push
jb
sub
mov
hlt
rcll
xchg
out
add
into
jo
fnstsw
outsb
add
mov
outsl
pop
testl
or
iret
or
scas
fnsave
loopne
xor
xchg
xor
dec
mov
mov
imul
jns
xorl
add
sarl
jmp
adc
sub
dec
jmp
fidivrs
outsb
jae
loopne
pop
push
sbb
lea
pop
add
out
xlat
fisttps
lret
test
add
jge
jns
scas
fcmovnbe
mov
mov
push
xchg
cmpsl
xlat
sub
jl
fdivrl
dec
cmc
push
lock
add
push
addr16
and
outsb
mov
js
out
scas
adc
xor
icebp
push
fists
js
stc
mov
push
lods
ljmp
fucom
jnp
xchg
insb
stos
outsl
or
dec
jne
pop
push
fcoml
inc
das
dec
shlb
clc
lcall
notb
divl
out
inc
aas
sub
iretw
mov
mov
jae
lods
add
pop
aad
or
add
jns
push
pushf
scas
jl
adc
js
mov
adc
push
ret
cmpsl
push
mov
jge
push
or
jnp
ret
lods
mov
insl
rcrb
notl
lcall
out
mov
jle
std
mov
stc
xor
dec
mov
mov
icebp
cs
mov
push
lods
repnz
dec
sub
jmp
mov
jo
addl
pop
mov
and
jbe
shr
jbe
into
and
imul
inc
mov
jns
les
in
push
sub
xor
jge
loope
out
cmp
imul
sbb
ss
bound
out
rcrb
je
dec
push
push
arpl
push
ret
outsb
ret
stc
test
mov
in
popa
sbb
cmp
jmp
mov
cld
fidivs
sbb
mov
mov
sub
leave
or
pop
rcll
sbb
fisubl
push
xor
xchg
push
mov
push
push
xchg
daa
xor
push
mov
cmp
jbe
mov
dec
test
jecxz
cmp
iret
jno
arpl
test
fstps
mov
mov
sub
pop
mov
shlb
sahf
loopne
aam
xlat
nop
es
pop
adc
sub
jmp
fsubr
mov
pop
les
enter
je
in
cmp
mov
adc
cwtl
or
jne
mov
add
mov
popa
and
mov
fimull
cmpsb
dec
popf
adc
leave
out
pop
lahf
sub
and
call
fisttpll
flds
ret
sbb
pop
repnz
outsb
dec
push
xor
adc
addr16
leave
or
clc
add
loop
push
xchg
cmp
mov
sbb
je
sbb
mov
jecxz
add
push
enter
push
ljmp
into
pop
pop
insl
into
sahf
leave
ljmp
sbb
lret
mov
imul
mov
xlat
pop
xlat
xor
ljmp
fsubl
xchg
push
dec
cmp
and
arpl
ds
inc
cli
ss
jmp
cltd
mov
xchg
daa
dec
dec
xchg
cmpsl
inc
push
mov
shlb
or
fisubrs
daa
pop
mov
iret
cmc
pop
clc
outsb
mov
jl
pop
in
mov
js
icebp
lcall
lret
xor
push
adc
ret
sbb
ja
test
mov
inc
xchg
and
jge
loop
push
push
scas
pop
lods
cs
dec
xchg
and
sbb
mov
aad
pop
add
hlt
rcrb
pop
lret
xchg
ja
pop
out
jno
cwtl
sbbl
inc
push
daa
mov
imul
mov
les
xor
jb
sbb
jecxz
ror
into
rorb
add
inc
xor
leave
jmp
outsb
inc
mov
dec
mov
sub
in
pop
int3
test
into
mov
out
int3
push
and
shrl
fs
shlb
cmc
in
fsubrl
pop
inc
pop
adc
jnp
add
adc
mov
mov
lock
pop
mov
lock
loopne
fdivl
mov
cld
push
add
fdivr
insb
inc
mov
pop
pop
dec
or
jo
lcall
idivl
xor
jle
es
mov
dec
sub
mov
adc
notl
push
adc
sti
popf
testb
inc
fsubs
sub
lahf
xchg
sbb
jo
icebp
icebp
pop
xchg
push
insl
mov
in
aas
and
clc
and
outsb
pop
sbb
adc
xlat
fidivs
addr16
div
in
xchg
divb
adc
lock
and
inc
mov
cmp
adc
out
mov
mov
mov
sahf
jmp
push
mov
sub
loop
sub
aas
pop
fistpll
mov
shll
sbb
stos
lea
aaa
into
xchg
sbb
pop
xlat
mov
and
out
test
jns
mov
fdivr
in
imulb
pop
mov
jp
jmp
mov
lea
mov
pusha
mulb
test
fiaddl
dec
nop
jle
mov
xor
out
push
lock
or
cmpsb
pop
mov
out
movsl
or
cmpsl
gs
into
sbb
mov
push
test
sub
or
addr16
push
pop
iret
dec
sbb
iret
testl
jmp
jo
inc
cwtl
insl
sarl
pop
xchg
xchg
cmp
pop
or
sub
sbb
int3
jo
in
dec
xchg
in
aad
sbb
push
inc
sti
ja
jle
adc
rorl
xlat
jnp
in
ja
arpl
ret
jnp
scas
mov
out
xchg
leave
push
cmpsb
push
fsts
daa
xchg
dec
mov
or
leave
ja
add
leave
insb
cmp
adc
ret
or
cmpsl
rcl
mov
mov
mov
pop
pop
or
dec
addb
jl
clc
jnp
fs
jnp
push
cmp
sbb
in
in
mov
xchg
sub
jg
sti
and
nop
xor
out
hlt
inc
xor
adc
mov
sub
jl
pop
fwait
mov
mov
mov
push
stos
orb
mov
add
mov
ret
sbb
ljmp
cmp
fucomp
dec
repz
test
ret
lea
ljmp
fs
pop
out
cmp
aas
push
popa
cld
jns
insl
dec
test
adc
jp
daa
fmuls
adc
cmpsb
popf
cmp
inc
out
std
pop
jmp
push
pop
fldl
inc
xchg
fs
subb
xor
test
xor
mov
pop
jmp
es
mov
xor
popf
int
clc
mov
int3
dec
mov
push
frstor
stos
push
dec
pop
lock
fldt
test
fimull
test
daa
xchg
scas
sub
sahf
rcr
cmpsb
fadd
fsts
push
add
xlat
inc
aas
aam
lret
xor
lret
lods
dec
mov
insl
int
xchg
or
sub
xor
mov
pop
xchg
out
adc
dec
jno
push
movsl
and
pop
mov
sarl
xchg
dec
or
xchg
ja
inc
mov
push
jbe
adc
cmp
and
js
push
sbb
fwait
cmpsb
jle
xor
xor
mov
fidivrs
outsb
mov
push
pop
adc
cs
and
jecxz
loope
test
dec
ljmp
bound
mov
fcoms
insl
or
mov
sbb
push
pop
or
loope
in
xchg
mov
lret
pop
push
leave
pop
or
fwait
cwtl
sub
inc
push
sti
inc
das
xchg
xchg
pop
test
std
xchg
leave
sbb
ret
dec
nop
mov
sbb
adc
xlat
aad
add
sbb
cmpsl
stc
dec
jg
pushf
xchg
push
or
mov
lcall
mov
mov
or
push
cmp
xchg
mov
dec
inc
cmp
jg
dec
in
out
mov
arpl
xchg
dec
div
bound
cmpsb
andl
add
insl
pusha
jb
pop
lock
sub
sub
enter
jbe
or
and
xor
pushf
repnz
xchg
xchg
sahf
cwtl
cmp
xchg
sahf
subl
andb
mov
scas
std
test
mov
sarb
mov
pop
sahf
xor
or
adc
jno
adc
mov
scas
xchg
in
jmp
inc
add
in
jnp
cmc
enter
cmpsl
ds
cmc
test
ds
int
jg
sarb
fwait
ljmp
stos
inc
mov
out
call
cmp
add
mov
sub
andb
dec
inc
cmp
jo
mov
add
jmp
stos
adc
ret
gs
inc
adc
mov
xchg
movsl
xor
sarb
cmpsb
or
pop
jnp
and
mov
imul
mov
insl
push
add
ja
or
les
call
sbb
add
mov
cmpsl
jl
test
jbe
lea
mov
insl
fisubrl
or
jge
mov
mov
dec
ja
push
add
fdivs
call
imul
fucomp
mov
popf
ss
cmpsl
sarb
add
sub
std
inc
xor
jae
push
repz
or
sti
movsb
loope
loope
cli
pushf
rol
mov
adc
cmp
mov
loope
jne
dec
xchg
add
pop
roll
pop
sub
mov
xlat
enter
lds
cmc
clc
out
push
pushf
cmp
hlt
push
lods
jo
or
call
ds
in
mov
scas
cmp
push
xchg
dec
pusha
stc
stc
cmp
push
addb
adc
push
xchg
mov
mov
jo
inc
xchg
xchg
ret
pop
loopne
imul
push
sbb
pop
mov
sbb
divb
mov
imul
lods
xor
xchg
mov
lds
sub
jle
xor
xchg
cmpsb
adc
sub
sub
hlt
add
cmc
sub
aaa
popf
ret
dec
lret
mov
sbb
mov
xorb
subl
xchg
cmp
pop
xlat
sub
movsb
mov
jecxz
lea
cltd
mov
daa
sub
std
shlb
sub
dec
mov
out
adc
lods
rclb
push
sbb
rorb
in
int
cmp
les
nop
scas
inc
adc
push
mov
std
jmp
dec
pop
inc
cmp
cli
insl
jns
push
addl
imul
aam
mov
jecxz
adc
sbb
cltd
je
xor
popa
pop
mov
sub
push
repnz
mov
xchg
jmp
movsl
or
push
lods
call
stos
dec
andb
es
inc
int3
add
push
out
ret
insl
fidivl
inc
je
int
or
ss
cmp
xchg
xchg
and
or
mov
push
icebp
shlb
cmp
xor
add
aaa
sub
or
repz
movsl
sarl
enter
sahf
shlb
inc
loop
aas
or
loope
loope
jl
into
push
sub
push
xor
stos
inc
cmp
aam
js
pop
stos
dec
jp
adc
pushf
push
in
mov
push
and
enter
jle
lock
xor
mov
adc
rcll
scas
loope
xchg
dec
dec
xchg
sbb
sbb
arpl
iret
jns
mov
add
stc
xorl
add
or
rcrb
cltd
test
idivb
or
jbe
mov
adc
sbb
mov
fmull
jl
movsl
xor
cmp
xor
dec
jbe
inc
xor
lock
mov
clc
or
lcall
sub
stc
mov
rorb
gs
xor
pop
jecxz
mov
fcmove
outsb
arpl
mov
sarl
aam
add
push
or
fdivs
inc
mov
mov
push
inc
fcmovnu
mov
mov
sbb
fistl
add
sbb
sarb
pop
bound
push
stc
in
mov
add
lods
xchg
or
push
dec
or
mov
inc
test
sbb
int3
mov
jnp
data16
adc
mov
in
nop
dec
push
inc
mov
push
subb
enter
lret
sbb
fdivrp
or
push
pop
lods
xchg
push
mov
sahf
cmpsl
subb
inc
and
or
add
fcompl
lret
lea
out
movsb
test
scas
mov
cmp
rolb
xor
xorl
mov
bound
adc
cs
dec
xor
mov
xchg
inc
into
fisubs
adc
ds
adc
rorb
nop
insl
imul
pop
sub
sub
idiv
and
repz
xor
and
xchg
subb
mov
xchg
es
cmp
mov
mov
stos
stc
dec
daa
aad
mov
movsl
fcoml
clc
pop
adc
xor
add
inc
mov
add
jne
out
jo
int3
xorl
push
lock
jae
add
sbb
das
push
leave
ret
mov
jno
mov
or
pop
in
out
adc
aaa
jl
lods
or
out
mov
and
imul
hlt
add
mov
adc
lret
es
js
lret
imull
pop
cmp
and
jmp
cmc
jp
adc
or
mov
popa
cs
xor
mov
movsb
lds
insb
sbb
dec
in
cmp
cmp
xor
mov
movsl
xchg
sub
pop
lock
xchg
outsl
orl
ret
jne
fwait
sar
push
bound
jne
call
and
repz
repz
ret
adc
push
push
or
popa
cmc
testb
push
mov
inc
cmp
add
repnz
push
pushf
ret
aas
iret
popf
lret
fbld
sub
int3
int3
or
xchg
outsl
add
inc
outsb
add
outsb
cmc
lock
scas
subl
inc
je
popl
cwtl
add
dec
lds
inc
data16
and
jbe
aas
pop
mov
add
sub
push
sub
pop
sbb
add
jb
mov
xchg
pop
imul
mov
adc
or
mov
in
aaa
cmc
ss
fildll
mov
fsubl
insl
popa
or
or
je
aaa
mov
sbb
sbb
adc
xor
sbb
insb
std
loopne
outsl
cld
std
gs
mov
sub
dec
xor
repnz
and
add
aam
mov
out
lods
jo
push
insl
popa
mov
adc
bound
lahf
dec
cmc
repnz
mov
xchg
pop
andb
inc
jecxz
arpl
imul
cli
in
iret
pop
nop
inc
mov
jns
add
push
or
test
cmp
jnp
lods
sbb
jecxz
and
sbb
mov
lods
pushf
rclb
push
sbbb
fstps
jle
push
lds
adc
aas
and
jp
mov
mov
jl
fists
rorb
jnp
mov
pop
cld
mov
sub
inc
cmp
and
arpl
imul
mov
xchg
cmp
mov
xchg
jb
xchg
and
hlt
xchg
pop
mov
push
fiaddl
push
and
inc
push
fwait
aas
inc
loop
cld
pop
inc
push
sbb
ret
xchg
fldenv
sub
dec
push
icebp
mov
out
cmp
pop
jne
xchg
fsubs
sub
daa
cvttps2pi
mov
fdivs
xchg
inc
popf
xchg
inc
mov
jp
add
sti
scas
and
xor
push
xlat
aad
inc
pushf
outsl
sub
xchg
jb
enter
icebp
stc
scas
sub
xchg
imulb
pop
in
xchg
out
mov
and
arpl
mov
sub
shlb
cltd
loop
daa
in
mov
iret
dec
push
data16
cmp
pushf
lcall
test
rcrb
add
cld
pop
ret
sbbl
pushf
pop
imul
mov
mov
ret
loope
jp
out
enter
xor
fists
jge
mov
mov
and
imul
cmp
inc
mov
sub
std
popf
je
int
insb
push
mov
scas
xor
xchg
pop
xchg
popa
mov
mov
cwtl
push
loop
call
mov
push
fnsave
dec
rol
lcall
lret
cs
add
or
fisubrs
pop
adc
inc
push
inc
test
xchg
and
inc
add
loopne,pn
incl
mov
cli
repnz
outsl
das
pop
xlat
mov
ret
sahf
dec
adcl
mov
xchg
popf
cli
adc
mov
and
ja
bound
push
sti
pop
je
pop
xorl
fstl
in
jno
mov
inc
clc
dec
jl
jg
mov
scas
lods
mov
sub
add
mov
loop
mov
and
and
mov
add
into
fwait
popf
sbb
std
sbb
movsl
mov
sahf
loopne
es
sti
mov
pop
push
mov
gs
xchg
je
cmpsw
std
mov
jo
gs
ret
xchg
xor
pop
enter
and
es
add
int3
lock
jne
fistps
inc
pop
mov
dec
in
mov
sarb
push
pop
add
test
sbb
nop
pop
inc
je
pop
pop
jne
cmp
add
repnz
xor
xchg
je
sbb
aas
stos
mov
pushf
mov
mov
inc
and
mov
cmp
nop
call
in
lods
mov
mov
add
not
xchg
adc
sbb
sub
sub
jae
repnz
add
outsl
ret
dec
sub
data16
nop
jle
insb
popa
fucom
add
jle
mov
adcb
insl
mov
cmp
pop
xlat
inc
fldt
daa
hlt
in
das
dec
dec
mov
or
push
mov
inc
icebp
in
mov
sbb
mov
mov
icebp
xor
or
mov
sbb
adc
add
adc
adc
outsl
sub
or
sbb
clc
repnz
test
sbb
inc
adc
and
xor
jecxz
fimull
jno
push
loopne
notb
popa
jno
inc
fwait
icebp
cmp
push
push
or
jno
movsl
ds
int
sbb
and
or
stos
dec
xor
mov
lret
sti
dec
inc
fs
out
xor
arpl
ja
pop
test
mov
push
mov
xchg
inc
mov
or
pop
sub
and
dec
mov
xor
je
pop
aam
xchg
xchg
ret
jnp
out
in
dec
cmp
xchg
jnp
in
jle
inc
ret
cmp
or
imul
icebp
movsb
push
mov
adc
pop
or
in
leave
mov
aas
fs
add
push
cs
setb
mov
mov
loopne
mov
inc
stc
out
stos
stc
repnz
mov
data16
sub
stos
sbb
mov
ret
mov
xor
jno
adc
jns
es
leave
dec
adc
out
jb
sub
sbb
les
ret
stos
inc
inc
sub
andb
fcoml
int
iret
add
cmpsl
shlb
insl
ret
mov
daa
pop
rcll
bound
add
mov
jge
sub
cld
std
push
cld
daa
lock
push
clc
push
cmp
jecxz
mov
xchg
stos
pop
adc
push
and
sarb
mov
testl
pop
bound
mov
std
or
filds
mov
inc
or
in
andl
insb
andb
push
jg
cmp
loopne
outsl
sub
dec
int3
dec
fisubl
lcall
mov
adc
repnz
mov
xor
ja
out
insl
cld
jne
sub
loope
popf
xor
sbb
pop
sub
mov
lret
rolb
and
sbb
xorb
js
xor
aad
cmpsl
fadds
pop
cld
xchg
notl
test
mov
cmp
sub
xchg
add
mov
mov
mov
sbb
jecxz
push
lods
aaa
jo
xchg
nop
inc
xlat
call
clc
int
add
xchg
sub
or
fidivs
add
or
pop
lret
xor
jmp
mov
mov
pop
iret
mov
shll
lods
jecxz
cmp
and
test
scas
sub
mov
sbb
sbb
out
aam
cmp
pop
stos
mov
pusha
sbb
pop
jp
and
std
insl
mov
mov
rolb
clc
scas
int
mov
xchg
jnp
movsb
jo
stc
lods
mov
xchg
add
loope
adc
jg
and
ret
mov
and
sbb
cltd
lret
arpl
sbb
roll
stc
jbe
jmp
cmpsl
ss
mov
mov
mov
hlt
push
jp
mov
rclb
xchg
fcompl
cwtl
aad
or
enter
jno
adc
mov
in
cmp
rcll
sub
aad
jns
lods
test
xchg
scas
lret
adc
mov
mov
dec
add
jmp
imul
addr16
rol
decb
push
mov
or
xchg
pushf
xchg
sub
xchg
sbb
aad
mov
mov
push
and
mov
insl
ret
mov
mov
jle
daa
lods
jns
mov
push
adc
loopne
movsl
push
mov
cld
enter
fcoms
outsl
mov
popf
cmp
sbbl
cmp
push
dec
or
pop
mov
jmp
sub
or
or
xchg
popf
je
pop
imul
in
xchg
rclb
sbb
das
xor
and
scas
adc
test
push
xor
xor
out
inc
xor
xchg
in
push
cltd
idiv
cmc
movnti
out
mov
testb
out
xor
aas
or
jne
mov
pop
or
scas
leave
and
lahf
aaa
jmp
shl
cwtl
es
xchg
inc
fiadds
in
fucomi
es
jne
pop
jl
push
dec
test
sti
cmpsb
ret
push
dec
sub
fs
fidivs
jecxz
mov
cmp
aaa
in
adc
shlb
mov
clc
ljmp
sbb
xchg
jo
jg
arpl
scas
cwtl
and
adc
inc
lret
fstl
adc
das
xchg
cli
mov
loope
stos
adc
mov
inc
in
mov
out
ja
sbb
pusha
dec
mov
lcall
mov
push
lods
mov
add
ficoms
fists
loope
cmp
add
and
xchg
jo
or
and
sbb
stc
jbe
cmp
adc
or
sbb
mov
dec
xor
es
dec
movsb
cmp
mov
jns
popf
xchg
lcall
das
out
popa
fcomps
mov
lock
aad
addb
cltd
add
mov
sbb
or
lods
xor
xor
mov
pop
sahf
xchg
icebp
js
fdivr
dec
jge
push
cld
cs
imul
pop
mov
insb
fcompl
fs
sbb
sbb
sub
in
pop
xchg
inc
icebp
jp
negb
lock
adc
insb
ja
in
pop
push
and
repz
pop
add
jge
repz
shl
inc
xor
adc
adc
mov
fwait
push
pop
xchg
push
repz
stc
jbe
push
adc
dec
sti
mov
mov
xor
push
sub
pop
push
test
insb
xchg
repnz
aas
push
ret
aad
nop
mov
pop
xlat
adc
lds
out
pop
pop
inc
push
push
lret
push
ret
leave
cmpsb
pop
sub
int3
fsubrs
adc
xorl
dec
adc
adc
inc
clc
jo
or
lods
or
lret
shrb
mov
mov
fs
mov
mov
loope
imul
xor
cmc
adc
imul
sub
cmp
lahf
clc
flds
jl
test
xchg
mov
repz
inc
mov
and
movsl
fisubrs
push
out
dec
xchg
cmpb
xor
pop
pop
imul
jns
nop
jb
push
inc
int
imul
xor
outsl
inc
aad
testb
mov
dec
cmp
mov
repz
push
shlb
mov
adc
inc
cld
pop
test
add
sbb
mov
jmp
xchg
inc
imul
mov
and
dec
inc
and
dec
in
dec
test
sub
jmp
js
xchg
push
and
inc
sbb
sbb
mov
clc
andl
push
jle
popf
jb
test
ret
mov
sahf
sbb
push
fdivrp
sbbl
test
pop
push
mov
mov
dec
into
out
push
push
mov
pop
test
out
jbe
sub
cmp
arpl
mov
mov
or
jl
lds
call
call
sub
push
cmp
stos
dec
es
mov
adc
pop
stos
adc
xchg
xchg
push
mov
in
sub
mov
psllw
cmp
clc
sub
inc
bound
in
test
stos
jns
int3
and
jmp
lods
lret
sbb
cmp
cmpsb
addr16
out
or
dec
in
std
mov
mov
fisubrs
sbb
dec
lds
pop
mov
mov
pop
xchg
gs
outsb
in
jge
sbb
cmpsb
cmpsl
dec
jl
sbb
pop
out
adcl
es
inc
xchg
arpl
push
cmp
and
fstpl
sub
ljmp
mov
lea
adc
add
mov
lock
mov
imul
mov
pop
arpl
adc
in
inc
adc
push
fistps
mov
pushf
sub
cmp
mov
jnp
xchg
inc
negb
std
cmc
cmpsb
pusha
cmpsl
js
orb
xor
pusha
or
add
jo
cmp
mov
shlb
inc
js
sbb
jecxz
mov
sbb
adc
dec
inc
add
lahf
fidivrs
cld
cmpl
sub
and
jl
lcall
fimull
test
adc
stos
sahf
jbe
jl
ret
ds
push
jb
cmp
out
iret
dec
or
or
ss
testb
or
loop
clc
pop
dec
xor
mov
insl
int
clc
shrb
sub
mov
jne
mov
push
fldl
lahf
inc
or
mov
insb
push
ljmp
iret
cmpsb
jl
outsb
inc
sbb
std
cwtl
out
insl
jl
arpl
imul
or
sbb
inc
aaa
lret
mov
pop
insb
push
xlat
roll
pop
mov
xchg
dec
cmp
push
fisttps
outsl
test
mov
movl
shl
jecxz
xchg
out
xrelease
and
iret
std
ja
pop
outsb
es
insb
data16
push
mov
cwtl
cmc
jg
clc
push
or
mov
fs
out
xlat
mov
icebp
movsl
aas
clc
push
mov
lret
mov
cmp
sbb
ret
cmc
call
aam
push
mov
mov
and
iret
xor
sbb
outsb
test
inc
mov
push
inc
icebp
mov
stos
rorb
sub
xchg
in
orl
sti
fisubrs
ljmp
xchg
popf
inc
stos
adc
jno
fwait
loopne
fldl
xor
xor
cwtl
push
mov
inc
idiv
or
sub
push
pop
jle
and
je
into
ret
mov
and
mov
push
inc
imul
mov
xchg
sbb
arpl
xchg
stc
lret
push
imul
outsb
lock
imul
push
insb
push
or
call
movsb
mov
loopne
stos
imul
call
or
lds
vmovsd
cld
inc
mov
mov
add
cli
or
add
xchg
sarb
mov
pop
fistps
mov
mov
icebp
rcrb
aam
out
mov
mov
stos
jg
xor
cmpb
and
clc
xlat
push
das
repz
test
jmp
dec
fcoml
cld
int
insl
mov
mov
int
dec
scas
jecxz
add
cmpsb
outsb
in
cltd
dec
sbb
inc
adc
imul
jno
inc
xor
repnz
xchg
out
cli
inc
cmp
jnp
in
clc
pusha
push
push
rcr
sub
testl
pop
mov
in
adc
ret
aam
lds
dec
push
adc
cmpsl
cmpl
push
mov
jmp
fisttpl
inc
test
jbe
push
push
jbe
dec
daa
dec
fsub
xor
mov
and
test
jecxz
lcall
jbe
popl
or
jbe
jg
sbb
pushf
das
xor
addb
sbb
repnz
sbb
cmpsl
mov
ret
lret
shr
mov
out
mov
xchg
sub
mov
sbb
sub
aas
sbb
xor
in
adc
lea
or
bound
nop
jns
lret
sub
popa
dec
sub
loopne
add
test
xchg
mov
call
push
aas
and
inc
into
inc
jl
aam
lcall
hlt
inc
jg
sub
popf
dec
lock
or
lcall
sbb
insb
push
dec
inc
pop
pop
push
dec
call
pop
mov
mov
dec
sub
or
xor
test
mov
dec
adc
out
sbb
sbb
je
cmp
mov
mov
mov
add
stc
imul
xchg
push
mov
je
ss
test
repz
pop
lods
dec
mov
pop
and
data16
mov
ja
cltd
hlt
scas
pop
std
add
adc
out
pusha
in
xchg
xor
js
sbb
push
cmpsb
dec
mov
sub
insb
lds
adc
addr16
aas
mov
xchg
lods
mov
iret
sub
fdivs
lds
add
loop
inc
cmp
in
cld
repz
add
mov
mov
rol
mov
xorl
es
ret
inc
inc
in
std
addl
lret
jbe
shl
pop
push
shlb
mov
jno
pushf
pop
mov
and
std
leave
push
fidivrl
stc
dec
in
pushf
or
pop
incl
cltd
mov
popf
test
repnz
in
or
imul
xchg
hlt
ljmp
xor
pop
add
cwtl
cmc
sbb
cmpsl
insl
sub
mov
rcr
xor
and
sahf
test
sub
icebp
in
imul
xchg
jmp
pop
and
shlb
jp
jns
push
push
xchg
es
test
mov
pop
mov
and
mov
lock
stos
mov
jmp
mov
mov
pop
pop
mov
lahf
aas
mov
push
sbb
int
cmc
daa
jns
imul
jecxz
inc
jo
inc
les
cltd
xchg
or
adc
outsb
out
mov
sbb
repz
pop
fwait
push
inc
inc
and
pop
in
add
subl
cld
aad
lret
or
or
inc
mov
out
dec
add
mov
and
mov
repnz
les
sbb
mov
xchg
flds
pop
es
push
jno
notl
fistl
paddusw
adc
mov
lret
sub
popa
stc
mov
or
jmp
idivb
ljmp
xor
xacquire
mov
cwtl
je
pushf
jl
mov
adc
mov
cmp
out
push
xor
cmp
lahf
mov
pop
pushf
testb
mov
or
mov
pop
add
jae
push
loop
cld
ret
add
inc
xor
loopne
scas
add
push
fs
out
pop
add
shlb
mov
mov
or
pop
sbb
hlt
rclb
xor
sub
nop
arpl
xchg
sbb
out
xchg
mov
out
jae
push
pop
out
pop
inc
stos
pop
cmpsl
mov
pushf
xor
ja
cld
pop
xchg
add
add
mov
sub
xchg
roll
test
sar
jns
cmp
pop
fs
jbe
push
repz
test
mov
xor
outsb
ret
std
inc
in
fadd
add
fnstenv
dec
outsb
ljmp
add
aas
mov
or
mov
mov
icebp
inc
cmp
shll
cmp
dec
jmp
add
mov
push
lret
sbb
adc
or
pop
add
push
jae
scas
xor
imul
clc
inc
mov
jmp
mov
loope
and
in
mov
mov
xor
sbbb
push
cmp
sarl
repz
xor
or
jbe
test
fcmovbe
ret
xchg
add
cmp
test
inc
sbb
sbb
push
jnp
push
push
in
mov
inc
fwait
pop
es
test
sub
shr
lcall
shlb
and
int3
mov
xchg
sbbl
sbb
orl
fcoms
loopne
enter
or
cmp
fdivs
stc
jp
or
sbb
test
sahf
push
mov
shll
lods
or
mov
das
mov
push
inc
ret
xor
inc
and
fnsave
das
mov
mov
mov
iret
push
pop
cmp
and
inc
pop
test
aam
lods
push
decl
arpl
imul
jb
or
dec
bound
mov
std
push
sti
stos
pop
mov
aad
mov
mov
insl
movsb
inc
xlat
sub
mov
pop
leave
aas
jle
cs
iret
mov
inc
adc
rol
or
leave
test
lahf
insl
je
arpl
push
pusha
xchg
lret
in
fldcw
sub
pop
out
shlb
or
outsb
sbb
and
jnp
jmp
fnstsw
ds
mov
addr16
mov
clc
push
ds
xchg
push
popa
add
sub
test
add
dec
push
xchg
cmc
pop
jbe
into
sti
mov
jecxz
test
mov
fimull
aas
ja
add
push
fldl
popf
stos
pop
clc
mov
mov
xchg
sub
scas
dec
lods
enter
jge
shll
bound
pop
leave
pop
and
push
pop
pop
or
or
repz
fdiv
mov
cmpsl
cli
cmp
add
fcomps
ss
jnp
sub
insb
xor
and
xchg
or
arpl
ss
addb
aas
fistl
jne
pop
mov
mov
icebp
mov
es
xor
sbb
pop
add
push
mov
cmc
in
outsl
sbb
clc
rol
push
jmp
movsl
movsl
in
jnp
add
into
cmp
dec
mov
aam
in
mov
jle
rclb
lahf
jae
fucomip
ret
das
dec
pop
dec
xchg
lods
std
mov
and
iret
enter
lock
shrl
fidivrl
imul
xchg
in
ljmp
pop
pop
icebp
out
push
out
dec
jmp
or
cmc
sbb
adc
mov
test
push
inc
push
sub
sbb
or
ror
outsl
fisubs
mov
xchg
mov
fnstenv
mov
inc
or
rcl
iret
or
outsl
aad
mov
insl
mov
popf
out
es
divl
add
or
push
or
outsb
mov
pushf
ds
cmc
mov
lahf
outsb
iret
pop
xlat
ret
adcl
sub
xchg
sbb
push
inc
push
mov
fidivs
mov
cmp
xor
lahf
inc
mov
cmp
les
fsubs
inc
inc
mov
roll
test
ret
adc
rolb
dec
in
push
push
sub
mov
adc
out
daa
imul
xor
test
aaa
pop
sub
xor
dec
nopl
in
stos
stos
mov
out
movsl
dec
rcl
pushf
cmp
jl
out
lods
sbb
rcl
out
xchg
xchg
ret
pop
in
jno
rol
jno
adcb
dec
call
outsl
fsubrs
call
movsb
movsl
or
cmp
jnp
in
xchg
mov
adc
popf
cmp
and
mov
loopne
adc
aas
add
sti
enter
sbb
sbb
fisubs
mov
stc
or
xchg
aad
xor
or
sbb
push
arpl
imul
ret
cmp
outsb
mov
or
jp
push
inc
lods
dec
add
dec
jnp
add
shll
sbb
sbb
cmpsb
incb
cli
lods
aam
mov
xorb
mov
dec
dec
xor
mov
inc
push
mov
fcmovu
ljmp
sub
push
subb
ret
add
mov
mov
push
jae
cmp
inc
movsb
sbb
cmpsb
lret
mov
and
fdivl
cmp
sarb
mov
daa
fstps
lods
pusha
or
push
sub
jae
and
dec
mov
adcl
cmpsb
fiaddl
xor
in
and
jb
es
dec
lea
repz
push
lcall
sub
jle
clc
test
int
jnp
rorb
bsf
xor
push
push
daa
push
push
xchg
xchg
jecxz
adc
ret
sti
sbb
ljmp
stos
pop
int3
cmp
ret
int3
pop
jne
xchg
xchg
xchg
xchg
pop
cmp
sub
xchg
int
lock
pop
fisttpl
jecxz
pop
bound
inc
mov
fs
outsl
scas
outsl
xor
lds
xor
cltd
in
int3
test
xchg
dec
push
mov
inc
inc
mov
gs
addr16
and
scas
xchg
xchg
push
or
xor
movsl
xchg
inc
inc
xchg
es
jecxz
dec
sub
push
outsl
mov
xchg
movsb
mov
pop
jne
ljmp
shlb
addr16
cmp
xchg
push
ret
jge
and
imul
cmp
xchg
cmp
lods
pop
fs
jp
inc
xor
sbb
hlt
inc
int3
add
mov
test
outsb
or
nop
call
mov
mov
daa
test
lea
sub
inc
shll
sbbb
or
imul
push
rorl
jle
push
movsl
nop
or
rolb
sarb
out
and
pop
test
adc
sarl
xchg
jbe
inc
hlt
xor
fwait
mov
insl
sub
xchg
sub
add
addl
or
inc
adc
bound
ja
test
mov
sub
mov
inc
test
int
xor
fisubrl
xchg
or
clc
stc
pop
mov
adc
repz
sub
dec
inc
sbb
test
xchg
fldenv
les
xor
sbb
xchg
fistps
jne
add
xorl
lock
xchg
loopne
or
jmp
adc
scas
dec
cli
in
fcmovnbe
and
imul
in
adc
adcb
bnd
jo
xchg
xor
cmp
arpl
loope
fsubs
mov
addb
xor
adc
jnp
stos
mov
enter
mov
int
movsb
stc
lret
or
dec
pushf
adc
call
stos
or
dec
inc
scas
lret
bound
btc
arpl
pop
xchg
push
lret
in
jb
pop
and
jbe
insl
xchg
add
lock
xchg
popf
inc
cmpsl
adc
shl
leave
dec
mov
cmpsb
xchg
lret
lods
pop
jle
cmpsb
inc
aad
xchg
mov
pop
idiv
fwait
mov
std
rol
int3
push
jo
jg
fwait
mov
push
and
jp
push
into
aaa
xor
out
jp
jl
lds
ror
sub
and
inc
scas
cltd
pushf
imul
jg
mov
adc
shll
xor
xchg
shrb
je
jb
int3
pop
movsl
decb
aas
mov
sub
push
mov
xchg
loop
lock
add
cmpsl
jge
adc
jg
add
and
mov
mov
pop
inc
cmp
bound
xor
cmpb
sub
lea
call
jae
jle
jns
jbe
iret
aaa
push
and
aaa
out
lret
mov
mov
xchg
jge
seta
adc
loop
repz
mov
cmpsb
mov
mov
dec
insl
cmpsl
pop
mov
mov
loopne
in
pop
sub
push
push
ljmp
inc
push
cld
sub
stos
fs
scas
mov
pop
push
arpl
fsts
shll
inc
iret
xchg
mov
push
lods
sbb
cmp
aaa
sub
xchg
pop
mov
mov
aaa
jle
or
aas
lods
sub
adc
dec
ja
and
pushf
inc
inc
cmp
fisttpl
mov
test
pop
push
adc
sbb
xchg
das
in
pusha
adc
jecxz
cmp
insb
jnp
and
mov
and
leave
adc
mov
cmp
xchg
jmp
xor
sarl
loope
nop
loopne
sbb
sbb
shrb
mov
push
mov
ja
xchg
imul
imul
mov
inc
dec
push
jbe
insb
mov
sarl
jg
dec
mov
clc
cmpsl
out
inc
push
mov
int
aas
aad
lods
sbb
or
rcrl
mov
insb
push
aam
cmp
in
add
xchg
rcrl
not
or
dec
jbe
jns
in
fs
das
mov
adc
jge
xchg
xchg
outsb
fistpl
xchg
nop
jno
sub
pusha
mov
cmp
or
les
mov
je
fbstp
int3
out
mov
cmp
mov
xlat
jp
xchg
fmull
cmp
or
jae
mov
rol
push
xor
and
mov
into
and
cli
mov
lds
add
lods
out
dec
sahf
jns
and
cltd
nop
pop
cwtl
jno
fidivs
cs
xor
call
mulb
movsl
jge
rorb
popa
mov
cmc
push
insb
jno,pn
add
pop
or
inc
arpl
inc
mov
cmp
cmp
or
fstps
testb
idivb
nop
and
sbb
mov
popf
outsl
dec
and
xchg
cmc
jno
jge
xor
inc
imul
out
mov
out
js
jbe
lods
cmp
das
pop
in
and
mov
test
loope
fcomip
pusha
movb
jno
sbb
rolb
jp
mov
cmp
into
mov
xchg
in
push
movb
jns
ljmp
cmp
sub
push
enter
cltd
sbb
bound
test
add
adc
jb
out
fsubl
aas
mov
sbb
and
push
into
add
dec
lock
cmpsb
iret
cmpsb
xor
ljmp
rorb
and
cwtl
cmp
pop
inc
enter
test
stc
cltd
stc
data16
stc
movsb
in
insl
jle
test
sbbb
shrb
cltd
jecxz
test
inc
or
or
mov
icebp
dec
xchg
repnz
mov
pop
or
inc
inc
ss
cs
dec
pop
iret
jo
pop
jnp
push
xchg
fs
leave
xorl
outsb
mov
xchg
testl
pop
add
adcl
push
aad
and
add
shlb
and
fcomip
cmp
jmp
out
popf
aas
add
into
mov
loope
movsl
jmp
xchg
idivl
mov
add
repz
or
clc
pop
mov
test
popa
adc
test
dec
push
fwait
dec
push
scas
std
dec
in
xor
push
rorw
xchg
jns
shr
shrb
push
mov
mov
aam
sub
cmc
mov
out
adc
int3
inc
movaps
fmuls
or
mov
mov
and
cwtl
mov
popf
xchg
lods
mov
jecxz
pop
sub
mov
mov
xorl
mov
inc
jecxz
dec
scas
ljmp
jae
test
cmp
popf
pop
lcall
out
xor
es
inc
mov
and
inc
movsb
mov
mov
cmpsb
pop
nop
out
add
mov
push
sub
addr16
insl
dec
mov
and
xchg
or
pushf
xor
js
mov
inc
pushf
andb
xlat
jle
push
bound
ja
or
dec
loop
scas
xchg
into
adc
and
sbb
and
pop
lcall
dec
aam
and
dec
sub
pop
sub
jno
or
xor
xchg
push
icebp
js
and
movsb
rorl
pusha
fisubs
sarl
unpcklps
cmp
stos
push
push
mov
outsl
inc
jle
mov
add
fucomip
sbb
adc
xor
jmp
pop
add
outsl
adc
loop
clc
dec
popf
sti
xor
mov
pop
jmp
adc
icebp
or
xchg
stos
or
inc
xor
int
jae
loopne
shrl
or
adc
sbbb
pop
cmp
aad
fldt
mov
xchg
dec
shrb
fildll
cmpsl
frstor
xor
jb
repz
push
in
sbb
jbe
xchg
scas
and
lods
ret
push
imul
iret
cmp
cltd
int3
sahf
rorb
pop
jno
inc
fcoms
mov
popa
jmp
xor
lods
andl
lods
inc
ret
push
sub
xchg
std
mov
inc
xchg
lea
shl
jbe
aam
push
jne
add
push
rorl
insb
jmp
xlat
repz
xor
push
and
ret
inc
rorb
je
fistl
push
mov
xchg
jmp
mov
push
test
in
push
lods
or
and
in
mov
out
sbb
in
fidivs
les
lds
pop
mov
data16
popf
adc
jg
pusha
push
in
cmc
pop
fmul
push
inc
out
enter
and
mov
xor
fidivs
fwait
pop
ret
imul
aad
pop
push
cmp
dec
push
stos
pop
jbe
sahf
mov
xchg
xor
rcr
in
sbb
sahf
bswap
push
stc
xchg
sti
xchg
push
addl
enter
pop
iret
aaa
xchg
inc
in
fldl
aad
inc
mov
out
dec
cmpsl
jne
or
mov
or
pop
loop
fsubs
jnp
jmp
mov
enter
cmp
aaa
mov
and
insb
or
popa
movsb
subl
xchg
imul
sbb
mov
jge
sbb
mov
je
jns
pop
data16
xor
push
push
push
lds
in
sti
and
dec
mov
lds
dec
das
ret
xchg
adc
mov
ret
pop
jno
movsl
hlt
cmp
mov
loopne
shlb
test
dec
fcmovnb
fs
nop
cmp
mov
pop
fistpll
mov
cmp
dec
jo
fbld
fdivs
or
out
scas
mov
in
rcrl
test
and
out
shrl
dec
xchg
pop
add
or
data16
pop
mov
xlat
outsl
insb
cwtl
adc
mov
xor
push
loop
lea
adc
in
inc
lret
scas
fistl
mov
pop
sub
sarb
notb
mov
sub
mov
pop
movsb
adc
jne
xchg
cmpsb
cmc
imulb
mov
xchg
test
push
sbb
cs
loopne
dec
cmpsl
outsl
fsubrs
rclb
jb
adc
mov
lods
aad
adc
sarb
les
loope
xor
std
scas
mov
repnz
jo
jp
movsb
xor
push
or
cs
xor
cli
push
sub
ljmp
ja
mov
add
or
jbe
ret
mov
cli
clc
pop
fildl
fimuls
cmp
bound
push
stc
xchg
push
testb
loope
out
mov
xchg
mov
lock
stos
rcl
xor
pop
lret
sub
xchg
stc
mov
addr16
push
cs
adc
test
xor
cmpsb
sbb
lea
out
xchg
cmpsl
test
push
nop
dec
cmp
mov
mov
jle
es
roll
jp
inc
pop
jecxz
pop
test
fwait
mov
lods
sbb
add
outsl
cmp
or
mov
mov
shl
mov
xor
fs
adc
pop
add
cli
mov
pop
fsub
icebp
cmp
fimuls
or
cmpsl
aad
mov
insb
movsl
push
jno
mov
cwtl
icebp
xchg
sti
out
dec
sub
dec
pushf
sbb
jmp
mov
stc
fwait
les
rcll
add
pop
mov
fs
mov
out
xchg
pop
pop
xchg
jno
pusha
inc
adc
lea
inc
ret
mov
jo
adc
add
jb
jg
mov
ss
ret
pop
mov
push
sub
sub
fs
add
mov
mov
scas
in
into
add
or
fstpl
xlat
rcrl
or
mov
mov
sarb
sub
out
out
es
xor
xchg
cmp
out
shll
push
daa
jg
inc
jns
xchg
jno
fs
cli
mov
dec
insb
dec
sub
dec
mov
sti
lret
mov
push
imul
mov
aas
xchg
popf
cld
iret
jbe
sbb
sub
xchg
jns
or
sbb
mov
pop
test
push
stc
int
mov
jnp
adc
nop
adc
xor
mov
xchg
ljmp
shll
adc
cmp
leave
cmp
sub
mov
xchg
lcall
fucomp
shrb
mov
add
decb
xchg
hlt
lock
movsb
mov
out
lock
hlt
divb
mov
sub
test
push
insb
mov
pop
and
add
jle
fidivl
cmpb
leave
jae
fdivrs
add
pushf
scas
jno
je
stos
mov
add
mov
mov
mov
and
or
xlat
mov
jbe
movsl
add
mov
xor
decl
fistps
js
cmc
adc
lcall
push
andb
arpl
or
sbb
ja
add
stc
fnstenv
icebp
aam
inc
sbb
pop
or
mov
dec
in
fwait
pop
repz
out
dec
fstps
ss
cmp
pop
jb
pop
imul
jnp
mov
aad
push
pop
inc
pop
sub
xor
popa
lcall
loopne
fisubs
add
xchg
lock
mov
xor
scas
aaa
leave
pop
pop
sbb
add
push
xor
pop
push
dec
leave
idivl
adc
sahf
inc
jge
push
fwait
lahf
call
movsb
fbld
mull
data16
cmp
std
pop
push
cs
pop
sbb
cltd
movsb
mov
xchg
mov
and
inc
outsb
loop
xor
cmp
lret
push
push
sub
out
cmp
enter
cmp
jo
lods
bound
xchg
orl
adc
xor
stc
add
or
adc
jb
dec
inc
mov
mov
insl
xor
cmp
in
pushf
lret
pop
sub
loope
fistps
aam
pop
inc
cmpsb
daa
fcmovne
roll
hlt
sub
shll
mov
lret
iret
pop
xchg
mov
mov
adc
repz
cmp
push
jno
adc
leave
push
or
xor
sbb
cmc
shr
push
push
mov
adc
stos
jmp
in
adc
sbbl
repnz
pop
mov
add
push
jp
pop
or
push
mov
clc
xchg
movl
scas
negb
pop
mov
and
pop
and
out
push
inc
and
sahf
adc
cmp
xor
or
jne
mov
cmpb
pusha
push
ret
pop
sarb
xor
xchg
jecxz
loope
sbb
mov
out
sbb
push
push
sub
cwtl
sub
mov
mov
lret
bndstx
hlt
or
xor
mov
mov
leave
or
das
sbb
xor
popf
jbe
sbb
popf
lret
scas
add
sub
data16
sbb
sub
gs
pop
xor
mov
enter
and
or
mov
decb
inc
call
in
rolb
aam
outsb
push
cmc
or
xchg
pushf
push
dec
je
mov
imul
repz
add
stos
loop
jge
xchg
jne
aam
or
lods
sti
imulb
inc
cmpsb
mov
lcall
insb
iret
jle
dec
sbb
mov
mov
addr16
cmp
cli
cmp
mov
mov
orl
fmulp
push
enter
stc
shll
in
es
adc
arpl
mov
add
fsubs
lret
jge
sbb
inc
push
pushf
and
xchg
popf
inc
sub
ljmp
inc
mov
xchg
arpl
pop
cmp
pop
adc
mov
ficompl
jmp
test
mov
sbbl
ret
shll
cmp
movsl
jl
mov
dec
xor
push
dec
pop
pop
fsubr
push
daa
aam
movsb
je
mov
pushf
cmp
add
and
cltd
pop
mov
aas
mov
mull
repz
sti
je
cld
ja
lds
test
jo
jmp
repz
les
mov
lods
pop
jno
xor
xchg
int
pop
lock
push
mov
in
cmp
mov
je
sahf
mov
aas
jns
dec
imul
mov
inc
icebp
icebp
and
mov
dec
adc
in
movsb
mov
mov
sbb
xchg
sbb
aam
sbb
fwait
dec
xchg
pop
mov
lret
bound
ljmp
mov
mov
movsl
out
push
fistps
fsubrl
cld
ficomps
cwtl
jmp
mov
mov
push
or
adc
out
lea
adc
inc
sbbl
stos
sub
das
cmp
push
stos
push
xor
icebp
jo
dec
cmp
add
jbe
inc
out
xchg
jne
stos
ss
cmpl
or
cld
adc
mov
mov
mov
lcall
jne
push
sahf
lea
mov
pop
sub
fdivp
shll
and
adc
hlt
test
insb
idivb
in
xadd
adc
xor
movsl
inc
repz
xchg
inc
or
mov
and
jo
inc
out
xchg
push
mov
ljmp
scas
push
push
adc
scas
inc
lcall
sub
sahf
mov
jne
test
xchg
dec
dec
jo
movsl
mov
cltd
pusha
fidivrl
hlt
dec
imul
jne
ja
xor
xor
iret
fwait
push
or
pushf
pop
push
pop
add
adc
andl
inc
arpl
fsubrl
fsts
adc
mov
jp
dec
test
sti
andl
out
pop
fildl
fisttps
mov
subb
enter
cli
lahf
xchg
xchg
add
sbb
lahf
repnz
fistl
sahf
inc
loop
fs
mov
and
and
and
push
inc
xlat
pop
in
pop
jmp
push
cmp
and
push
aas
or
fwait
out
sub
out
jne
icebp
aas
int3
inc
sbb
es
cmp
test
mov
sbb
cwtl
repnz
popa
push
sub
inc
jmp
or
add
cmp
repnz
add
jl
hlt
pusha
inc
jne
stos
aaa
test
imul
cld
ret
push
xchg
ds
xchg
mov
lods
out
sbb
adcl
xchg
xor
lods
lahf
xchg
and
lcall
dec
les
mov
mov
and
loopne
pop
in
scas
into
push
lahf
push
rclw
shl
pusha
fcompl
inc
and
adc
xor
insb
je
leave
call
pop
or
jecxz
sbb
mov
xchg
mov
jns
xchg
daa
xchg
popa
push
insl
mov
fldcw
push
lods
adc
scas
int3
inc
pop
push
push
pop
xchg
xor
lods
xchg
inc
inc
fsubrl
cwtl
sub
les
or
addr16
adc
pop
addr16
outsl
pop
xorl
pop
aam
sub
pop
lods
cmp
sarb
mov
adc
jb
jg
inc
pop
mov
imul
lods
sub
pusha
push
dec
cmp
xchg
cmpsb
push
ss
sub
pop
mov
and
cmp
lret
sub
sub
out
mov
adc
pop
mov
jae
mov
xchg
mov
repnz
scas
mov
sarb
jns
test
shl
mov
int
dec
adc
icebp
imul
xchg
loop
fisttpll
cld
mov
daa
and
mov
and
jae
outsl
in
and
xchg
xor
mov
push
inc
cltd
test
mov
add
push
aam
popf
lcall
loop
mov
sbb
jo
xor
sub
or
test
jle
mov
cmp
inc
stos
cmc
sbb
ss
jecxz
ja
xlat
sbb
jne
mov
cs
leave
adc
data16
xchg
imul
and
adc
push
cs
pop
sub
cmp
shrb
xchg
movsl
dec
dec
mov
into
mov
subl
sbb
lock
push
stos
lahf
addl
xor
or
sbb
mov
sub
adc
adc
mov
xor
mov
pop
flds
mov
cld
mov
daa
ss
dec
notl
das
sarl
out
aam
lock
inc
in
push
das
adc
cmp
lock
rolb
adc
fistps
paddq
ret
in
idivb
in
xchg
test
jae
pusha
jno
jecxz
sbb
and
icebp
jne
nop
out
pushf
mov
sub
sub
push
lcall
fldl
pusha
adc
push
or
mov
pop
pop
fstpl
push
push
das
test
xor
enter
xchg
mov
mov
lock
dec
nop
push
icebp
shl
and
repnz
stos
std
arpl
pop
xor
test
std
and
push
inc
sub
cwtl
mov
xchg
and
mov
test
out
adc
sub
cltd
adc
and
out
out
jge
repz
int3
mov
jge
andl
or
lods
in
aam
xchg
aas
xor
xchg
mov
in
ljmp
cltd
inc
jae
icebp
xchg
dec
imul
jmp
sbb
sub
dec
inc
decl
gs
lock
mov
hlt
addb
jbe
or
ret
test
push
aam
inc
mov
inc
cmp
shlb
and
pop
add
fisubs
mov
add
jns
xchg
pop
push
cmp
add
cmp
xchg
rcl
sub
hlt
pop
mul
mov
jbe
xchg
sub
push
outsl
or
in
mov
in
xchg
cmp
push
mov
data16
fwait
in
mov
gs
and
imul
mov
mov
dec
data16
rdtsc
in
pushl
pop
test
lea
inc
mov
std
into
loope
aad
and
add
push
mov
rcrl
nop
jp
insb
mov
and
mov
add
stc
in
mov
adc
xchg
scas
outsb
lods
in
scas
mov
fnstsw
out
test
adc
je
cmp
out
sub
js
push
sahf
sbb
mov
cmpb
cli
stos
leave
mov
daa
pop
jl
inc
adc
movsb
rcrb
push
scas
icebp
xor
push
cmp
cli
dec
decl
sub
or
dec
lahf
xor
mov
mov
int
and
bound
push
jmp
cmpl
js
pop
jg
fs
dec
test
adc
or
mov
and
fdivrl
pusha
and
movsb
cmpsl
sbb
sbb
push
icebp
sti
pop
imul
cmp
xchg
aaa
push
aas
stos
pop
and
and
mov
test
and
mov
cmpsl
icebp
mov
imul
push
mov
inc
xor
push
jne
xlat
jo
stc
aas
dec
dec
addr16
jle
pushf
sbb
jns
jg
inc
jne
dec
adc
aam
dec
mov
insl
popa
cmp
adc
bound
imul
sub
daa
imul
dec
sub
cmp
xchg
fwait
mov
xchg
sti
fisubs
inc
dec
xor
fmuls
cmp
fisubrs
cwtl
and
imul
mov
aad
and
jo
mov
stos
int3
sub
testb
faddl
lock
clc
movsl
pop
dec
dec
inc
loopne
enter
into
mov
jp
jne
mov
dec
or
adc
xor
cmp
adc
aas
adc
mov
pop
imul
inc
xchg
adc
mov
roll
inc
lea
and
dec
js
shll
mov
lds
fidivs
jbe
loopne
rcll
cmpsl
aam
sub
pop
lret
addr16
sahf
arpl
outsl
cmp
inc
movb
cmp
push
or
mov
ljmp
adc
mov
adc
adc
shl
push
aad
loopne
jg
fmuls
push
add
mov
add
pop
cld
and
or
imul
lock
out
cld
test
cwtl
xchg
and
cmpsb
stos
add
push
inc
jl
dec
popf
rcrl
sbb
dec
inc
es
pop
sub
add
inc
or
stos
or
ss
jno
ljmp
nop
adc
ret
sbb
aaa
pop
xchg
pop
lock
fwait
negl
cwtl
mov
fs
xor
sbb
mov
cli
mov
cmp
xor
pop
jl
mov
int3
inc
out
imul
je
js
gs
add
or
insl
and
xchg
rclb
mov
ret
js
ljmp
sub
gs
fwait
and
out
test
aaa
shrb
inc
pushf
mov
test
sbb
add
insb
sub
dec
jne
insl
sbb
push
orb
data16
jle
sti
push
fcmovu
pop
imul
ds
push
cwtl
jg
inc
pushf
loope
mov
popf
jmp
inc
nop
mov
lret
mov
inc
into
mov
jmp
cmp
xchg
xor
inc
mov
rcll
out
ret
imul
jmp
aad
cmp
cltd
xchg
pusha
or
mov
mov
rcll
nop
sbbb
and
int
mov
cmp
mov
mov
scas
int3
inc
or
mov
scas
inc
shlb
js
cmpsb
je
leave
out
dec
add
jg
pop
jecxz
xor
repz
sahf
iret
imul
xlat
ret
mov
mov
js
sbb
pop
push
leave
gs
js
cltd
bound
idivl
pop
lret
je
mov
ds
xor
mov
mov
scas
mov
data16
shll
pop
leave
out
popa
insl
mov
test
mov
inc
pop
add
pop
repnz
push
in
data16
js
repz
je
mov
cltd
adc
xchg
mov
loop
fildll
pop
dec
icebp
sbb
xchg
jnp
xchg
mov
adc
popf
std
js
sbb
add
lret
sbb
dec
pop
mov
fldcw
aad
sbb
or
xor
cmpsl
pop
in
xchg
mov
xchg
sbb
xchg
or
and
mov
jge
or
mov
mov
lods
call
scas
dec
dec
inc
cwtl
push
ss
aad
or
shlb
sbb
cmp
shrb
or
and
ret
sub
pop
out
sub
xor
mov
les
sti
dec
icebp
jo
add
mov
and
ss
in
sub
adc
faddl
inc
mov
push
xor
and
cwtl
push
xor
fisubs
push
xchg
into
enter
mov
sahf
cwtl
mov
or
mov
rcrb
sub
jno
jo
nop
cmp
sbb
xchg
lcall
dec
mov
inc
js
or
or
mov
aad
pop
mov
pop
xchg
jne
addr16
xor
mov
nop
cmc
addb
push
dec
js
and
aas
xor
out
sub
pop
das
icebp
inc
fwait
scas
mov
scas
ds
mov
jne
mov
sub
jo
or
adc
pop
loopne
sbb
pop
loope
push
fsubrl
sarl
sbbl
or
dec
adc
xchg
xor
xlat
sub
jle
test
cmp
fsubr
push
repnz
and
mov
push
pop
cmp
test
jae
pop
cmpsb
mov
in
and
or
lods
mov
stos
repz
xor
push
adc
mov
aad
cli
mov
cmp
push
addl
mov
cmp
aas
xor
sbb
fcoml
push
pop
mov
jo
in
loope
insb
cmpsl
mov
out
mov
jge
movsl
inc
and
sub
aam
jmp
movsb
mov
mov
xchg
ret
jmp
adc
pop
hlt
pop
frstor
call
in
dec
lahf
inc
es
mov
int
es
std
xlat
pop
ret
lods
dec
sarb
out
outsl
sahf
addb
cmpsl
sbb
rcll
jnp
push
out
sub
xchg
and
outsb
mov
xchg
or
leave
add
cmpsb
adc
xchg
push
popa
repnz
pop
pop
inc
or
ret
sbb
dec
inc
cmpsb
arpl
inc
loopne
mov
ljmp
sub
in
add
loope
cld
mov
jmp
and
jb
sbbb
daa
int3
push
aas
inc
xchg
mov
xor
rorb
aas
insl
ret
inc
mov
xchg
cmp
sub
jnp
adc
sbb
push
test
adc
mov
adc
pop
mov
dec
or
push
psubw
std
iret
dec
pop
int
push
adc
dec
mov
mov
sahf
sbb
xchg
lds
or
nop
adc
push
frstpm(287
push
jecxz
and
adc
stc
mov
out
add
jo
cmp
xor
adc
outsl
dec
pop
adc
pop
push
xchg
mov
js
jne
xchg
jg
jp
out
ret
pop
xor
mov
ffree
popa
add
aas
sub
add
in
fildll
adc
mov
adc
mov
or
xchg
sbb
add
ficomps
mov
sbb
mov
push
push
xor
mov
popf
and
out
rorb
scas
je
jnp
orb
push
pop
mov
or
xchg
imul
mov
mov
movsb
push
xor
add
ret
pop
pop
xlat
jl
push
mov
and
or
jmp
outsl
push
xor
dec
lods
cmp
bnd
cmp
cld
adc
pop
ss
lods
in
inc
fwait
or
mov
mov
mov
inc
add
push
data16
scas
in
mov
dec
dec
ffreep
xchg
stc
cmp
fstl
cmp
nop
dec
adc
or
int
ljmp
cs
dec
aam
pop
sbb
mov
es
adc
mov
push
pop
data16
pmulhuw
jae
jo
decb
out
andl
andb
mov
mov
int
dec
sub
xor
xor
dec
out
add
movsb
push
or
in
and
dec
or
bound
jg
push
jbe
or
pusha
into
es
shll
jb
jno
jae
outsl
adc
push
cwtl
ljmp
addr16
jb
inc
fsub
sbb
adc
mov
stc
shll
sarb
icebp
push
mov
out
lock
stc
es
cs
rorb
mov
lahf
sbb
add
lods
test
movb
jg
fildll
lds
aaa
loopne
jae,pt
mov
fimull
pushf
outsb
in
and
pop
sub
pop
out
xorl
add
aaa
out
int
sbb
cmpsb
mov
or
inc
cltd
popa
pop
mov
shll
stos
mov
dec
inc
call
mov
jmp
fstps
rcrb
lret
jge
pusha
out
xorl
rolb
fwait
and
adcb
testl
cltd
adc
mov
call
jg
push
jb
jb
lahf
lods
jo
stos
dec
pop
pop
adc
out
dec
and
mov
stos
mov
dec
daa
imul
inc
cmpsl
mov
mov
arpl
and
dec
loopne
cmp
sub
ljmp
es
jb
aas
pop
pop
aas
push
aaa
add
mov
aam
ret
in
mov
inc
mov
ja
stos
jbe
icebp
fcom
ret
movsl
stc
hlt
call
mov
xor
dec
mov
cmp
jo
mov
push
adc
arpl
mov
pop
in
je
xchg
aad
sbb
inc
mov
inc
cmpsl
add
dec
add
ret
mov
inc
xlat
bound
mov
push
fchs
int3
cs
mov
add
add
lcall
jnp
add
add
mov
incb
push
lods
jb
dec
adc
mov
rol
jno
sub
push
xchg
test
sbb
std
imul
mov
pop
jp
dec
mov
add
sbb
jnp
jb
mov
jl
daa
xchg
cmp
pop
repz
xchg
int3
iret
aas
push
pop
pusha
mov
xor
jnp
jns
lcall
outsb
xor
jmp
addr16
pushf
jge
stos
fwait
stos
jb
popf
stos
test
add
sub
and
or
daa
mov
pushf
daa
sahf
xchg
lret
mov
jno
pop
mov
fcmovnbe
shll
jo
js
scas
adc
jecxz
test
cmp
and
inc
xor
add
or
adc
or
lret
fadds
adc
add
lock
js
aad
pop
loopne
shlb
pop
repnz
loopne
cmc
in
cmc
dec
rorl
leave
std
mov
xchg
test
ret
in
fwait
xchg
push
pop
pusha
cmp
mov
push
xchg
mov
cmp
sti
sbbb
nop
js
sbb
xrelease
push
int3
jle
jecxz
xchg
mov
pop
jne
ficomps
pop
data16
sub
cltd
or
divl
out
sbb
jmp
lock
aad
push
fucom
xlat
sbb
pop
pop
daa
pop
or
mov
jno
nop
mov
inc
lahf
fisubl
xchg
push
and
test
push
and
xor
fisubs
fs
ss
xchg
test
jo
lahf
ja
call
in
lret
xchg
in
testl
mov
dec
dec
out
repnz
mov
and
imul
icebp
mov
pusha
mov
lods
insl
mov
xor
sub
out
addr16
jle
push
fisubs
sub
and
ret
lcall
test
pop
insb
rclb
mov
cmpsb
mov
lret
add
sbb
test
sub
lahf
add
sub
in
test
mov
rorl
scas
push
repz
jne
xchg
sbbb
sbb
push
adc
aad
stos
loope
sahf
pop
testl
mov
stos
lds
xor
stos
bound
cli
bound
scas
pop
and
xchg
mulb
jle
enter
xor
sub
ja
in
outsw
mov
xor
aad
loopne
jne
mov
pop
loop
xchg
xor
push
mov
sub
pop
std
notl
mov
pop
or
or
push
push
add
and
je
je
push
shr
xlat
shll
inc
and
out
idivb
xlat
xchg
fdivrs
and
push
adc
inc
ja
inc
popf
cmp
imulb
aam
lahf
lock
sub
adc
out
dec
lahf
mov
add
ds
jecxz
clc
pop
dec
inc
imul
iret
sub
scas
sti
pop
sbb
xor
arpl
enter
xor
mov
imul
jle
pop
or
fs
rcll
daa
inc
pop
fs
mov
shrb
and
xchg
xchg
cmc
fsubrs
idivb
cmc
in
pop
mov
pop
mov
popf
push
subb
rorb
ret
std
jns
xor
or
jo
test
cmp
sbbb
das
push
sbb
es
adc
mov
loop
roll
lea
adc
mov
xorl
addr16
imul
test
xchg
and
ror
mov
xlat
pop
into
mov
daa
and
jne
lods
repnz
or
fsubrs
push
aas
ret
cli
ljmp
cmpsl
adc
push
and
inc
movsl
popf
cmc
mov
into
cmp
test
stos
xor
stos
mov
cltd
cmp
sbb
mov
cltd
dec
push
xchg
cli
pop
js
cld
clc
ret
in
xor
inc
not
mov
jbe
or
dec
sub
into
int
xchg
mov
and
lahf
adc
push
add
je
add
shl
cmpsl
hlt
ret
into
jl
cmp
ret
or
cltd
mov
adc
push
ljmp
add
cli
sub
in
rcll
sub
dec
orb
dec
jl
lods
lods
dec
push
add
inc
mov
les
lods
xchg
dec
cmpsl
cwtl
cmp
stos
sbb
in
fs
cmc
mov
push
pop
call
push
and
data16
mov
and
fadd
test
pop
mov
or
pop
cmp
clc
fldcw
pop
jo
push
fidivrs
cmp
cld
lock
rcrb
ljmp
test
mov
jge
add
cmp
inc
cli
dec
das
add
mov
or
ficompl
dec
data16
inc
mov
pop
orl
les
lret
test
les
push
jecxz
arpl
rcrb
scas
clc
ljmp
dec
push
mov
loope
lock
fwait
clc
push
mov
movsl
add
dec
ljmp
pop
jnp
dec
mov
es
test
mov
dec
fldenv
and
push
dec
jo
lahf
mov
lea
hlt
ret
sbb
and
je
add
inc
out
lahf
fistl
jns
dec
push
shrl
jns
mov
mov
and
jbe
add
and
out
pop
and
pop
mov
push
imul
fs
aad
sbb
icebp
repnz
mov
aam
les
mov
xchg
mov
ret
arpl
xchg
repz
cld
jns
stos
outsb
jmp
orb
push
xor
fdivr
jge
aad
dec
sbb
pusha
xor
clc
adc
add
and
push
push
movsb
push
mov
mov
aaa
adc
add
pop
cmp
adcb
loop
or
in
dec
cmp
inc
aas
out
lret
std
push
jno
nop
int3
arpl
mov
jmp
out
stc
pop
add
jl
js
mov
xchg
icebp
lds
push
fstps
mov
in
out
inc
mov
cmp
mov
mov
add
or
lds
cmp
add
cmp
repz
insl
mov
inc
sub
test
les
lret
jne
in
lds
sbb
pusha
lock
sahf
daa
jg
inc
mov
gs
cmp
mov
sar
push
mov
mov
outsl
push
lret
fs
clc
and
andb
push
ficomps
or
jno
cs
push
add
sbb
test
movsl
sbb
fldl
je
mov
movsl
jnp
nop
loope
daa
clc
push
mov
in
int3
in
mov
cmpsb
nop
in
bound
cltd
repnz
sub
pusha
mov
xor
cs
and
enter
int3
xchg
and
hlt
or
or
adcb
neg
jns
mov
je
iret
fstpl
sbb
jl
jle
jecxz
mov
popf
jbe
dec
and
imul
imul
cwtl
sbb
sbb
sbb
ret
mov
pusha
shlb
lret
sub
js
dec
fs
rolb
push
arpl
inc
scas
push
push
jge
inc
push
jecxz
mov
stos
test
sbb
call
or
xchg
xchg
inc
xor
inc
jo
xchg
mov
dec
mov
je
std
cmp
jg
adc
dec
mov
iret
jne
lock
mov
adc
popf
inc
jo
mov
mov
mov
sbb
loop
mov
inc
jl
sbb
mov
ds
cmc
push
jmp
sbbb
inc
shl
ficoml
test
js
push
mov
and
ret
stc
mov
xchg
shrl
clc
shlb
lds
push
or
scas
jo
xchg
or
lods
inc
dec
mov
and
dec
in
hlt
mov
sbb
cmp
push
in
loope
mov
mov
stc
and
pop
fdivs
mov
pop
insb
repz
sub
pop
xchg
into
push
mov
mov
shll
jno
or
es
into
mov
test
mov
cmpsl
sbb
mov
out
into
and
repnz
sub
mov
popa
sbb
jg
adc
jmp
add
or
inc
jmp
popf
ljmp
aam
push
sub
xlat
mov
add
test
sti
scas
mov
daa
xor
mov
outsb
inc
jne
xor
fistl
int3
popa
xchg
div
jno
ret
jne
lcall
daa
dec
jo
fadds
adc
repz
repz
lock
xor
notl
dec
mov
adc
or
jbe
cmc
pop
mov
dec
add
hlt
xchg
shlb
inc
out
mov
into
adc
cmp
push
sbb
cs
repz
dec
int
in
mov
add
in
int
ds
insb
mov
xor
outsb
mov
pop
mov
and
mov
dec
mov
fbstp
sbb
inc
jbe
aaa
push
arpl
lcall
movsb
and
push
add
js
or
dec
xchg
mulb
sbb
in
or
call
cs
mov
push
sbbb
adc
lods
pop
sahf
mov
into
mov
idivl
jecxz
shl
mov
mov
or
test
ja
add
repz
cmp
aam
cmpsl
mov
dec
lret
xor
outsl
aad
ja
repz
add
cmpsb
into
xor
outsb
movsl
push
aad
jmp
adc
imulb
mov
cld
cld
jmp
js
sub
addr16
sbb
lahf
cli
adc
iret
pop
jmp
pushf
bound
mov
or
aam
imul
out
cmp
fwait
mov
hlt
mov
xor
adc
or
mov
pushf
insb
mov
loope
nop
jg
imul
arpl
pushf
adc
leave
je
pop
push
lea
mov
or
sbb
cvttps2pi
dec
lock
out
add
inc
repnz
jl
pop
dec
rol
and
outsl
xchg
adc
mov
shlb
movsl
push
lret
cmc
xlat
outsb
imul
fptan
adc
filds
or
jge
xor
loopne
mov
cltd
mov
pop
add
inc
inc
sub
push
daa
mov
mov
stos
es
mov
sub
data16
in
mov
inc
push
mov
xchg
or
cmpb
pop
setg
test
mov
inc
mov
mov
jg
loopne
cmp
sbb
cwtl
in
test
xchg
lods
inc
xor
cld
jmp
imul
push
or
stos
stc
cmp
aas
cs
jae
inc
and
in
repnz
inc
fidivrl
mov
nop
icebp
pop
mulb
jl
inc
repz
or
xor
add
in
mov
insl
mov
mov
pop
repz
int
inc
xchg
sub
pop
xor
jecxz
or
outsl
outsl
fadds
hlt
inc
push
jge
mov
jbe
addr16
out
lock
rcr
or
dec
pop
dec
ja
mov
add
lret
cmp
into
lods
cs
push
push
add
jbe
cmp
mov
inc
cmpsb
or
outsl
in
test
inc
and
fisubs
inc
repz
loopne
pop
inc
xor
mov
jge
andb
add
or
mov
dec
dec
dec
cmp
jae
cli
dec
jae
push
rcrl
aaa
inc
in
cwtl
test
aad
jno
add
enter
rolb
mov
mov
clc
cmp
cmpsb
pop
fiaddl
jmp
mov
inc
inc
and
stos
pop
mov
pop
movsb
inc
rcl
sbb
inc
xchg
daa
xor
mov
jnp
lds
add
gs
push
fidivrl
fiadds
in
ds
scas
ficoms
scas
jne
nop
in
dec
sti
mov
mov
mov
xchg
pop
jle
sub
lea
outsb
sbb
pop
aad
sti
xor
sub
repz
cmp
imul
aas
rol
sbb
mov
aas
ret
lret
fcoms
ret
rorb
in
xor
mov
loopne
sub
lods
icebp
ret
loope
ss
fisttpll
adc
sbb
iret
pop
fnstsw
push
popw
sub
xor
xchg
xor
movsl
in
cmc
and
adc
mov
xor
and
jge
jg
sbb
jo
inc
mov
lock
add
enter
pop
cld
in
inc
jno
je
movsl
adc
mov
and
cli
mov
xchg
xor
adc
test
in
xchg
dec
fnsave
out
push
sbb
cmpsl
in
jl
mov
shll
cmp
imul
jge
aam
cmp
stos
cmp
mov
jno
lret
lods
sub
xor
mov
popf
sbb
test
sbb
xor
jle
repnz
mov
and
xor
iret
popf
lods
orl
cmova
mov
sub
imul
or
jns
inc
incl
dec
scas
pop
orl
test
xor
int
sbb
jp
push
mov
mov
cmp
sarb
sbb
call
dec
push
popa
and
jne
dec
sub
mov
dec
repnz
leave
lods
ljmp
push
out
adc
xor
dec
mov
push
sub
insl
xchg
in
in
sbbb
loop
sub
test
and
xchg
pop
sub
out
int
pop
jo
inc
fdivs
mov
stc
mov
psubusb
add
push
stos
inc
dec
dec
xchg
xor
test
paddsw
xchg
sbb
mov
stos
pop
mov
ret
jmp
cmp
loop
sti
mov
push
jae
std
test
call
cwtl
ljmp
cmpsl
iret
push
push
jo
aaa
int
int
jl
sbb
xchg
fidivrs
cmp
imul
scas
mov
mov
cs
sbb
xchg
loopne
into
shrl
pop
sub
int
lods
jl
or
xor
jg
push
adc
and
pop
push
pop
jo
std
sub
and
adc
and
call
mov
add
mov
and
jp
cmp
xchg
mov
shlb
mov
and
mov
mov
jbe
xor
notb
fsubr
push
inc
pop
stos
inc
push
fidivs
stos
fistpll
cli
ds
sti
adc
push
incb
jmp
dec
loop
push
out
pop
xchg
mov
insb
jns
or
sub
insl
ljmp
in
fbstp
mov
and
adc
adc
mov
mov
loope
xchg
cli
sbb
inc
sbb
push
aas
mov
push
jecxz
cmp
sbb
cmp
adc
mov
pop
or
ret
lods
push
xor
mov
mov
xlat
stos
adc
add
test
push
and
dec
addr16
stos
lea
das
inc
pusha
pop
mov
sub
xchg
pop
jno
jmp
jne
add
movl
xchg
notb
cmpb
pop
out
mov
test
xchg
daa
sbb
mov
mov
fucom
cmp
and
scas
ret
inc
mov
lcall
and
pop
inc
xor
std
mov
icebp
inc
cs
js
jb
mov
sbb
into
inc
ror
out
das
pop
push
stc
clc
dec
dec
push
fs
sbb
cmp
rorl
add
jecxz
and
cmp
test
mov
inc
sbb
pop
addl
mov
xchg
xor
add
jns
lock
xchg
cli
inc
lock
mov
push
pop
int3
dec
repnz
int3
ret
pop
cmp
push
or
push
dec
xchg
push
jo
jne
add
fidivrl
int3
xor
lcall
pop
cli
scas
popa
adc
sbb
dec
popa
push
or
pcmpgtb
verw
pop
je
in
lahf
imul
rcll
push
fsub
xor
mov
push
push
shl
fistl
adc
pop
or
sbb
sahf
loope
iret
pop
cld
data16
lods
jb
fdivrl
enter
addr16
data16
sarb
add
movsb
sub
push
dec
push
jnp
push
pop
sahf
mov
jl
js
xchg
in
xchg
call
pop
pushf
in
shlb
andb
or
or
add
cmp
in
out
je
mov
push
dec
arpl
mov
mov
fcomp
ljmp
lret
jle
movsb
sub
jbe
dec
or
rol
pop
dec
bound
mov
testl
ficompl
call
notl
adc
add
push
cwtl
mov
mov
sub
test
js
dec
cltd
adc
leave
cmp
pushl
out
jno
jae
lahf
insb
cmpsl
aaa
xor
cmc
imul
mov
inc
mov
sub
sbb
mov
fucomi
into
adc
mov
push
pop
add
negl
out
add
mov
ljmp
ret
and
clc
sbb
xor
jno
test
enter
sbb
push
or
cmp
pop
clc
sbb
xchg
or
mov
ret
sar
movsl
or
sub
sahf
or
push
sub
or
cld
or
cmpsb
ror
int
dec
or
xlat
or
lock
iret
sbb
out
sub
out
xlat
cmp
mov
jb
pop
pop
jae
pop
mov
cli
pop
out
mov
outsb
add
loopne
sbb
shll
pop
add
pop
sub
mov
iret
cmp
call
js
cmp
mov
mov
sub
test
add
push
cmp
clc
stos
push
cmp
sub
sarb
push
arpl
ljmp
hlt
pop
out
ret
ljmp
fdivp
mov
inc
hlt
mov
push
cmc
push
mov
and
adc
xor
out
arpl
pop
lahf
adc
mov
pop
fsubs
push
lea
push
sub
jg
incl
mov
jl
in
insl
cmp
inc
stos
sbb
stos
stc
inc
outsb
push
xchg
mov
test
lea
push
cld
mov
das
sbb
ss
loopne
mov
mov
testb
or
xor
sub
sbb
fmul
jle
sbb
jmp
inc
dec
sub
add
lahf
xor
cmp
mov
shrl
cltd
popf
test
jae
inc
and
and
fisubrl
inc
insl
arpl
add
dec
into
lock
push
push
cmpsl
das
stc
jmp
and
nop
call
inc
stos
cld
add
loope
adc
sub
xchg
ss
jo
addr16
sarl
xchg
into
sbb
in
cwtl
pop
out
fmull
lods
lcall
addr16
addr16
mov
xchg
fs
roll
add
and
lcall
leave
xor
data16
push
shr
test
rorb
ljmp
push
lods
aad
out
cmc
int3
sub
adc
xor
push
movsb
mov
aam
out
jns
adc
sub
push
stos
popl
out
arpl
gs
cmp
mov
pushf
ret
push
mov
mov
inc
rcrl
pop
popa
out
jno
push
cmp
loope
imul
adc
outsb
and
arpl
int3
lds
aam
adc
fcoml
pop
mov
and
sbb
jbe
scas
push
fisubrs
jnp
xchg
inc
inc
arpl
jno
sub
mov
in
jge
stc
jbe
add
lock
test
adcl
push
adc
push
sub
dec
pop
mov
jg
adc
sbb
repnz
mov
out
jae
lods
push
jbe
pop
sbb
sub
pop
jo
inc
add
mov
lods
or
in
pop
sub
test
insb
inc
mov
movsb
incb
outsl
xor
orl
sti
mov
lret
mov
and
dec
fistpl
mov
cmp
or
lret
add
lcall
mov
xchg
sti
xchg
inc
stos
cmp
outsb
enter
jle
jnp
gs
loop
cmpsl
push
xchg
or
push
in
jmp
pop
jne
out
or
jge
add
mov
xchg
and
mov
jno
bound
sbb
or
shr
pushf
push
push
movsb
enter
pop
popa
cmpsl
jno
add
dec
fcompl
fnsave
xchg
call
stos
add
pusha
or
iret
clc
setae
movsb
sub
hlt
insb
in
mov
inc
push
ret
fxch
inc
and
xchg
adc
shld
xor
insl
and
int
out
mov
dec
fwait
and
jg
and
or
inc
mov
iret
push
fs
jge
cli
pop
jmp
iret
xchg
mov
mov
pop
lea
add
xchg
jle
pop
pop
mov
testl
sub
or
sbb
movsl
popa
shlb
sti
and
repnz
test
jmp
jg
mov
jg
mov
popl
adc
out
add
jp
push
sar
mov
out
dec
push
sub
cmpsl
jge
popf
std
pop
ds
cltd
jbe
push
jle
std
mov
push
dec
fimuls
adc
xor
pop
jge
sub
jmp
sahf
cmp
imul
dec
xchg
ljmp
les
push
add
lahf
sub
lock
loopne
dec
shlb
pop
mov
sbb
test
jo
jge
cmp
nop
cwtl
adc
std
pusha
and
mov
mov
js
adc
stos
cld
stos
jg
push
push
scas
loope
das
cmp
mov
cmp
pop
xchg
daa
jle
aam
bound
int
fs
mov
add
addr16
std
imul
imul
push
pop
push
mov
mov
sar
xor
mov
or
jmp
fs
pop
adc
mov
adc
pop
ret
lret
dec
dec
ljmp
sbb
es
sub
cmpsb
cs
iret
add
dec
cmp
les
cmp
aam
sbb
pop
xchg
mov
push
xchg
addb
push
push
fs
in
cmp
jo
sbb
pop
pop
ret
es
pop
or
out
mov
shrb
mov
out
jo
cmpsb
lds
push
xchg
aas
adc
stos
dec
iret
les
mov
pop
sti
mov
clc
hlt
test
mov
mov
push
in
or
dec
pop
inc
jg
cmpb
adc
mov
push
lahf
fldcw
jmp
push
movsl
cmc
push
enter
stc
add
std
aad
rcrl
xchg
cmp
cmp
cmp
xchg
and
cs
push
xor
and
test
jae
shrd
sub
add
daa
ss
inc
out
fdivl
int3
cmp
cli
mov
js
movsb
add
xchg
adc
cld
push
mov
pop
loopne
mull
pop
xchg
pop
sahf
mov
push
mov
out
ficoms
std
xchg
sub
mov
clc
test
sub
stos
lret
xlat
fiadds
std
sti
pop
lcall
popf
insb
aam
mov
test
push
sbb
pop
push
adc
andb
loopne
push
xchg
mov
jle
aam
test
sahf
add
inc
nop
pop
sbb
and
dec
or
pop
daa
cmp
mov
dec
pusha
or
sbb
mov
adc
mov
fists
fsubrs
push
sub
or
mov
in
xchg
push
jl
inc
out
jo
jge
xchg
push
cmp
inc
mov
scas
xor
jp
lds
pushf
push
cld
push
xchg
icebp
add
test
rolb
cmc
mov
xor
pop
mov
movsb
cmp
jg
inc
cmp
or
or
mov
iret
push
mov
cli
das
jae,pn
mov
xor
or
fwait
aas
setno
push
cld
cmp
xchg
dec
test
push
dec
addl
adc
push
loope
popf
xchg
popa
inc
adcb
sti
dec
mov
lock
cmp
bnd
xchg
xchg
loope
pop
add
fisttpl
cmp
dec
inc
jbe
rclb
pop
push
out
jno
dec
dec
dec
xor
shll
icebp
std
push
pop
pop
sarb
add
repz
sub
out
lods
fxch
out
mov
dec
iret
sbb
out
mov
repnz
sub
pop
in
sub
cwtl
mov
cmc
xchg
fdivl
in
adc
scas
jg
dec
call
and
hlt
jp
rolb
in
fisubs
and
mov
js
inc
bound
icebp
mov
nop
cmp
mov
pop
sub
cs
stos
dec
pop
lahf
aaa
push
ss
dec
leave
mov
xlat
jge
inc
scas
push
fidivrs
pusha
mov
es
jnp
dec
pop
lea
and
push
fxch
jns
mov
and
mov
add
jmp
add
daa
cmpsl
xor
mov
dec
dec
hlt
es
and
inc
pop
or
stos
gs
js
mov
mov
xor
scas
jg
push
stos
nop
dec
cmc
cmp
cwtl
loopne
push
cmp
andb
sub
test
add
bound
pop
test
loope
int
push
fldenv
arpl
in
aad
in
push
rorl
push
push
dec
js
cmp
scas
arpl
test
fucomp
cmp
push
fadds
imul
lea
dec
test
pop
add
pop
in
repz
stos
jo
hlt
popa
sub
sahf
pop
test
dec
or
inc
cmp
jno
sbb
inc
jecxz
jb
rcrl
pop
hlt
adc
stos
xor
push
imul
pop
leave
cmpsl
inc
xor
ja
inc
dec
add
push
mov
aad
dec
push
test
dec
fadd
ds
adc
mov
les
add
sbb
imull
lock
xor
push
xchg
ds
jp
stos
stos
xor
mov
test
int
sbb
jno
pop
add
push
lcall
xchg
xchg
aaa
lea
or
flds
addr16
lea
sbb
mov
xchg
lods
dec
fists
push
sarb
in
mov
pop
jns
sbb
pop
in
sbb
scas
stos
cmp
push
neg
into
test
sub
mov
fistpll
cmp
stos
dec
xchg
push
clc
aas
das
imul
push
or
pop
cltd
popf
lea
mov
rcr
mov
iret
pop
cmp
xor
arpl
in
xlat
inc
or
push
push
or
jno
fs
cmp
shll
mov
icebp
bound
cmp
pop
xchg
aas
cmp
decb
add
enter
mov
inc
mov
or
arpl
in
and
cmp
add
and
mov
call
dec
and
daa
dec
insl
xor
sbb
xor
xchg
lret
xor
xchg
fwait
pop
push
ret
cmc
mov
xor
ljmp
fldcw
fnstcw
imul
mov
add
push
das
push
dec
xor
fimuls
mov
or
push
aas
dec
or
inc
and
or
out
es
cmp
dec
sbb
inc
add
lahf
stc
push
and
data16
push
push
xchg
test
xchg
jno
loop
and
mulb
jp
push
and
dec
test
adc
cld
test
fcompl
push
jmp
clts
mov
cwtl
cli
and
mov
fdivr
decl
aam
les
repz
call
mov
test
arpl
cli
jno
mov
jns
pop
and
popa
inc
jge
push
outsl
lret
inc
mov
mov
in
push
fadds
ret
add
mov
dec
cmp
rol
pop
das
xor
dec
mov
cltd
cmp
leave
xchg
jno
subl
ret
xor
iret
cmp
push
das
je
lods
mov
loope
sbb
push
and
adc
test
clc
movsb
sbb
or
jl
pop
scas
xor
mov
mov
cmpsl
rorb
arpl
jo
pop
imul
adc
lret
sbb
inc
rolb
xchg
xchg
mov
push
sbb
jg
lret
in
vxorps
adc
arpl
scas
push
sbb
movsl
rclb
ret
inc
movsl
fstpl
xor
out
cmp
jmp
sub
cli
xor
mov
ljmp
arpl
cmc
add
pusha
lea
or
inc
test
scas
shl
stc
sub
cmpsl
sub
dec
movsl
mov
sti
fwait
mov
dec
es
pop
xor
pushf
dec
inc
sbb
out
lods
jbe
leave
mov
rorl
sub
hlt
jmp
inc
mov
cmc
mov
jg
jg
test
xor
jne
mov
popa
or
shrb
and
add
push
add
scas
jmp
sarb
xchg
cmc
in
mov
bnd
in
push
jae
mov
lds
sub
cmp
and
xchg
pusha
or
mov
and
sbb
jg
mov
lcall
lds
push
popa
pop
jecxz
cmpsl
jbe
sbb
std
call
aam
cltd
add
push
je
mov
mov
fldt
shl
xor
sub
fisubrl
cmc
icebp
pop
and
inc
cmp
pop
insl
dec
xchg
mov
mov
mull
je
push
and
scas
inc
mov
js
cmp
lock
shlb
dec
dec
mov
jbe
psrlw
jge
fiaddl
sbb
inc
adc
shlb
rcll
adc
push
mov
xor
js
fldl2t
pop
cld
mov
sbb
xor
subb
xchg
pop
aas
test
cmpsl
cmp
mov
sub
daa
jp
aam
fildl
push
dec
jle
sbb
mov
xchg
mov
xor
sahf
mov
xor
flds
outsl
movsl
cmp
iret
in
inc
shlb
test
adc
aam
popf
test
stos
inc
or
pop
pusha
xchg
pop
sbb
inc
dec
jge
cmp
xchg
mov
jecxz
or
xchg
jbe
imulb
add
popf
insb
push
ljmp
out
inc
inc
js
ss
sarl
push
push
jp
iret
sub
jnp
jmp
xchg
mov
jnp
pushf
jno
jb
rcrl
cmp
push
int
xchg
and
dec
mov
jmp
sub
outsb
cmp
xchg
jns
mov
pop
add
mov
jl
add
mov
std
adc
mov
mov
jle
mov
cmp
pop
movsl
or
jg
push
or
adc
int
xor
sbb
and
mov
xchg
in
adc
jmp
test
gs
sbb
xchg
in
lock
dec
mov
xor
mov
pop
clc
mov
std
xor
pusha
xchg
lahf
scas
scas
mov
lea
sub
icebp
push
ja
les
mov
mov
add
adc
adc
jbe
cmp
sub
cli
repz
mov
sub
inc
mov
cmp
aas
out
cmp
icebp
lret
and
add
pop
out
xor
mov
icebp
les
leave
sub
jge
arpl
inc
stos
out
xchg
ja
and
cmpb
fld
push
xor
xchg
or
and
fsubr
adc
xchg
mov
adc
mov
dec
repz
adc
inc
cmpsb
inc
sub
adc
fnstcw
xlat
arpl
or
mov
mov
lahf
std
pop
xchg
mov
hlt
pop
data16
fsubrs
and
cmpsb
sub
aas
pop
mov
push
ret
cmp
or
mov
sahf
cwtl
loopne
sbb
pop
les
je
popa
xor
mov
push
cltd
jl
push
xchg
outsb
mov
negb
mov
cmp
xor
push
mov
fwait
pop
add
push
mov
xchg
fwait
push
ja
push
or
add
cmp
xchg
cmpsb
lock
sub
pop
cmpl
call
inc
xor
mov
lahf
xchg
sub
jns
sub
shl
jbe
movsl
shll
sbb
out
aaa
push
cltd
rorb
mov
xchg
pop
sbb
movsl
sub
test
loope
and
xchg
sbb
jmp
movsb
dec
dec
jecxz
icebp
mov
mov
xchg
mov
cmpsl
jne
test
dec
xchg
adc
jecxz
pushf
xchg
scas
sti
pop
mov
push
mov
inc
dec
add
jb
jno
negl
imul
addr16
and
ljmp
andl
dec
aaa
push
ret
mov
cmp
shrb
xlat
test
mov
call
les
pop
pop
adc
imul
loop
shlb
hlt
out
cld
adc
adc
mov
push
inc
sub
mov
stos
subl
out
mulb
cmp
cmp
js
daa
or
test
xor
inc
jmp
sbbl
add
in
mov
movsb
fnstcw
jbe
es
sub
scas
add
cmp
mov
and
sahf
dec
out
sub
fdivrp
inc
mov
pop
mov
pop
repnz
in
fwait
add
sarl
add
xor
push
sub
jg
dec
push
xchg
or
xchg
clc
imul
add
adc
bound
and
int3
add
or
cltd
adc
push
adc
inc
inc
jl
dec
lea
je
mov
fdivrl
push
aad
pop
sbb
out
ja
aaa
sbb
or
dec
jge
fcompl
inc
add
aad
sbb
xchg
sbb
lret
jae
cmc
sub
in
notl
adc
int
lods
ds
gs
or
outsb
loopne
mov
push
mov
hlt
scas
jb
cmp
sbb
insb
das
lret
and
cli
sbb
int3
mov
xchg
loopne
insb
mov
mov
push
test
mov
ja
push
cli
hlt
fiadds
jo
insl
std
fst
pop
mov
fdivl
cli
test
dec
fcoml
in
aas
pop
mov
sbb
dec
and
loope
mov
loop
pop
rclb
xor
call
sub
mov
cmpb
rorb
cmp
push
movsb
sbb
inc
xchg
mov
cmp
sar
ds
mov
jbe
sti
in
push
pop
mov
sub
xchg
iret
js
mov
or
push
xchg
aas
int
cmp
jge
in
leave
mov
xor
test
pop
in
leave
push
mov
and
add
movsb
or
or
push
fst
mov
icebp
bound
or
jo
sbb
iret
test
mov
mov
jb
jg
das
test
jo
sbb
mov
ss
addr16
ja
xor
int
rcl
mov
push
cmp
and
fimull
pop
cmpl
lock
dec
sub
push
iret
mov
int
in
or
iret
or
popa
sar
push
inc
cmpsb
inc
cwtl
imul
mov
int
bound
xor
test
and
test
xchg
and
xchg
jae
dec
add
test
dec
mov
mov
adc
jl
test
pop
test
xor
adc
test
add
mov
fs
jmp
xchg
cmc
add
cmp
mov
push
insb
inc
adc
jne
ljmp
repz
loopne
ud1
aam
test
loop
into
dec
enter
xor
out
push
addr16
icebp
mov
sbb
xor
mov
ret
mov
push
rcr
jg
adc
pop
arpl
jne
jns
insb
outsb
ss
imul
loop
pop
movsl
icebp
mov
adc
inc
fbstp
or
jl
cwtl
in
inc
dec
stc
and
sarb
adc
out
xor
in
imul
xchg
add
push
xor
dec
mov
lods
or
pop
mov
mov
jae
jg
in
mov
mov
pushf
inc
xlat
daa
mov
out
pop
mov
shr
sbb
add
ds
lret
inc
adc
jne
clc
in
mov
dec
testl
clc
or
call
out
out
jmp
test
cmpb
rol
clc
mov
addr16
fimull
stos
pop
and
push
xor
mov
sbb
shlb
mov
jmp
mov
xlat
outsl
mov
loop
mov
pop
or
jo
popa
test
jmp
xchg
dec
pop
pop
cmc
popf
xor
out
rorl
pushf
add
mov
mov
test
fisttpl
mov
scas
sbb
fstpt
and
xor
jl
out
jmp
jne
clc
jl
bnd
and
jl
clc
push
loop
mov
jle
movsb
pop
stos
sbb
and
jne
add
sub
sti
cmp
jl
mov
mov
and
std
mov
in
testb
sbb
shlb
and
enter
shr
adcb
test
or
out
insb
dec
mov
push
int3
rcl
xor
cmc
sti
xchg
hlt
movsb
pop
jae
sub
test
mov
cli
dec
pop
or
mov
out
and
cmp
mov
xlat
out
jmp
mov
mov
adc
sub
jb
inc
pushf
out
jge
andnps
repnz
adc
js
inc
push
stc
ds
cmpl
out
outsb
jg
sub
scas
leave
popf
dec
mov
cld
and
pop
lods
sub
daa
mov
or
mov
inc
pop
test
xchg
xchg
das
fdivr
in
rcl
mov
lcall
scas
das
inc
inc
and
adc
push
cld
shll
imul
or
aam
int
mov
push
and
test
cmp
jae
xor
add
xor
mov
inc
lcall
and
loope
orl
sbb
out
lret
mov
fucomp
call
pop
jle
adc
notl
and
mov
add
xchg
sbb
mov
pop
or
pop
or
sbb
addr16
fsubrl
jbe
push
in
addl
sub
cmp
ljmp
dec
push
dec
scas
push
xor
pop
mov
cmp
int
cmc
sbb
arpl
cmp
mov
nop
das
pop
into
rcl
push
mov
ret
mov
and
and
add
mov
loope
rolb
test
sbb
cld
aaa
mov
in
orb
adc
stc
adc
or
pop
clc
mov
shl
insb
popa
shlb
mov
adc
and
popa
jecxz
std
xor
je
jecxz
mov
xchg
pusha
adc
xchg
cwtl
xchg
xor
lods
lahf
in
and
or
lahf
lea
pop
and
sub
push
fsubrp
lods
adc
scas
pop
cs
cs
aas
jge
or
sbb
iret
mov
subl
xor
lret
sub
dec
ja
test
test
mov
xchg
stos
imul
les
sbb
fldt
popf
pop
int
inc
jb
push
cld
xchg
dec
dec
and
inc
outsl
xchg
mov
sbb
sbbb
popa
cmpsl
adc
lods
mov
mov
mov
dec
push
dec
stos
es
icebp
mov
xchg
lcall
push
arpl
xchg
aaa
sub
lods
aas
mov
xchg
sbb
stc
outsb
daa
shll
shlb
jg
or
lahf
push
sbb
cld
xor
stc
sarb
push
lock
pop
and
or
mov
fmul
sub
or
stos
addr16
add
xor
jmp
gs
inc
jne
loopne,pt
mov
jge
inc
add
out
leave
pop
push
push
mov
sub
sbb
and
adc
xlat
mov
jns
add
jg,pn
movsl
lock
sahf
outsl
out
xchg
dec
call
insl
sub
mov
pop
push
lcall
adcl
fwait
ljmp
xchg
aam
jp
jecxz
jge
loope
ja
jb
int
or
gs
ret
push
in
int3
cmp
pop
jae
pop
stos
jae
and
fstpl
addr16
add
flds
aad
and
dec
arpl
sub
cmpsb
push
dec
xchg
cmp
sbb
jmp
xor
adcl
test
cmc
in
in
sbbb
insl
movsb
std
push
ja
pusha
dec
sbb
jle
mov
cmp
sar
xchg
push
hlt
add
cmp
ficompl
leave
push
enter
pushf
pusha
pop
outsb
xchg
popf
cmp
int3
movsb
std
dec
pop
dec
adc
push
andb
popa
cltd
aas
xor
test
outsl
jns
aam
cmp
loopne
add
les
cmp
inc
jne
xor
add
cli
inc
loope
jae
lahf
stos
jns
and
mov
xchg
push
pop
cwtl
mov
aaa
lret
leave
call
and
add
arpl
lahf
cmpsb
jbe
dec
cs
dec
inc
inc
xchg
in
sbb
mov
push
jae
dec
jno
cli
cld
out
and
fsubr
je,pt
bound
cmc
add
in
xlat
adc
mov
inc
mov
test
sbb
mov
sbb
sub
inc
xchg
jmp
and
aad
aaa
jns
je
stos
add
gs
dec
icebp
aaa
movsl
in
shrl
into
and
sub
pop
insb
xchg
or
int
into
mov
test
sti
bound
mov
xor
pusha
push
in
incb
xor
jle
sub
ret
or
push
aam
test
aaa
das
xchg
adc
sahf
cltd
out
pop
adc
adc
out
inc
dec
repz
push
repnz
pop
mov
xorl
sub
and
inc
and
mov
pop
test
cmp
or
bound
jp
iret
sbb
inc
push
fsubrp
sub
jnp
push
fisubl
in
cmpsl
pop
lcall
jle
xor
add
mov
sbb
stos
xlat
mov
cmp
imull
ja
leave
filds
jmp
outsl
popa
stos
outsl
shlb
sbb
xor
push
pop
insl
pusha
xor
xor
mov
add
adc
lods
xchg
dec
sti
dec
push
mov
lods
fildl
icebp
scas
or
mov
cld
and
cwtl
jne
push
pop
int
or
enter
rcrb
stc
cmp
cmpb
out
ja
popa
or
xchg
mov
or
xchg
pop
add
cmp
stc
adc
jge
pop
imul
cmpsl
or
xor
das
pop
xlat
shlb
enter
fucom
jbe
cwtl
daa
dec
mov
and
push
push
cmc
out
jl
dec
enter
sti
adc
adc
or
add
js
push
cltd
imul
push
insb
sar
icebp
stos
out
je
add
pop
loop
nop
cmp
insl
push
cmp
divb
fsubp
and
loope
sub
int
fcomps
xchg
popa
outsb
bound
iret
jle
ja
lock
mov
shrb
cld
js
inc
pop
inc
mov
adc
xchg
sub
sub
or
ja
fimuls
sbb
add
mulb
jno
inc
bound
mov
adc
adc
rcrl
dec
sbb
ds
sbb
or
insb
jmp
ljmp
es
cltd
sti
outsl
xchg
fsubs
xor
jnp
jno
nop
or
cmp
imul
subl
cmp
adc
leave
mov
mov
int
shl
mov
push
lock
push
and
dec
lret
mov
imul
test
cmp
jno
fcmove
mov
adc
inc
mov
sub
es
fwait
dec
push
lock
sarb
sub
jg
jmp
fmull
mov
add
dec
andl
adc
ret
jmp
inc
stos
popa
lea
push
xchg
sub
pop
fstl
jns
xor
xor
xchg
sbb
add
and
cli
cld
pop
xchg
lret
adc
inc
out
pop
in
mov
scas
xor
ret
shr
xor
or
sbb
ficomps
xchg
orb
cmp
pop
mov
std
and
mov
outsl
sbb
cmpsb
repz
and
into
pop
es
push
gs
ret
add
add
sete
sarb
in
addr16
int
lret
mov
lds
xor
sbb
dec
mov
xchg
or
pop
ret
add
mov
popf
jbe
xchg
dec
add
adc
nop
push
push
and
sbb
gs
jae
test
outsl
lods
cmpsl
cmp
shll
out
lea
sub
jnp
mov
ret
push
mov
je
jl
cmp
data16
jmp
sbb
jns
ja
fiaddl
mov
fnstsw
mov
and
fiaddl
repz
mov
push
js
shll
outsl
and
mov
imul
insl
data16
or
cmpsl
lods
push
aaa
adc
pop
inc
in
stos
inc
or
and
js
popl
arpl
dec
insb
daa
and
xor
push
mov
cmp
es
jae
test
test
inc
inc
cmp
jns
add
in
outsl
inc
xchg
xchg
daa
jne
push
jle
xchg
xor
pop
cmpsb
loop
mov
push
movsl
aam
popa
xchg
xchg
xor
mov
in
dec
mov
jns
scas
push
or
test
test
jb
or
in
or
inc
aad
ficompl
push
sahf
sti
xor
xor
add
cwtl
mov
mov
add
mov
add
push
cs
adc
lods
xchg
lock
xchg
sbb
push
out
mul
add
add
mov
nop
aas
fimull
pop
mov
mov
xchg
add
mov
xor
fwait
cmp
aam
push
cmpsl
int3
outsl
icebp
push
mov
inc
leave
es
jo
out
sub
jbe
outsb
popa
jle
lahf
int3
mov
repnz
mov
rcll
mov
add
mov
gs
push
adc
mov
cmc
call
pop
shl
push
dec
fisttpll
or
test
std
mov
loop
mov
arpl
cltd
mov
xchg
sub
adc
call
sbb
or
push
mov
int
inc
and
pop
scas
ljmp
pop
popf
sbb
movsl
sbb
into
mov
es
loope
daa
jmp
xchg
cmc
cmpsl
aas
dec
push
jo
jno
inc
dec
jae
pop
mov
cmp
cmp
push
pop
lods
adc
adc
xchg
mov
push
cmpsl
dec
add
inc
cmpsb
lds
hlt
inc
in
dec
stos
jmp
inc
mov
int
cli
pop
xchg
vcvttss2si
cld
pop
adc
and
adc
dec
push
xor
xor
nop
out
inc
sub
dec
rcl
mov
add
test
jle
jnp
lret
lret
and
mov
sub
test
jmp
xchg
mov
pop
scas
pop
xor
add
mov
ljmp
lock
xchg
xor
rcrb
loope
jl
push
out
rclb
stc
sub
fimull
xor
push
into
jmp
jp
lret
outsl
jmp
movsl
cmp
repnz
xor
mov
and
fldl
jb
std
test
add
inc
fldt
sti
cmp
dec
faddp
fiadds
push
push
lods
adc
mov
sahf
lret
orb
push
dec
sub
push
push
push
cmp
enter
dec
cs
jno
mov
or
cmp
lret
xor
call
xchg
imul
sub
add
jmp
add
lahf
stc
daa
mov
inc
mov
and
xstore-rng
cmpsl
add
mov
adc
push
popa
mov
into
ficomps
sub
jno
mov
jns
negl
ficoml
dec
test
movsl
pop
pop
lods
push
ficomps
icebp
outsl
add
aas
cltd
xor
jae
sbb
loopne
aas
rolb
mov
stos
adc
roll
int
jns
fadd
cmp
in
push
jp
pop
mov
pop
sub
cltd
aas
test
inc
pop
sbb
je
fbstp
pop
lock
adc
data16
pslld
lods
mov
leave
mov
cmpsb
fcoms
sbb
sub
loopne
sarl
pop
fildl
loopne
rcrb
int3
pop
jb
rorl
inc
loope
mov
xor
sub
icebp
bound
sbb
and
nop
lahf
push
xchg
inc
mov
dec
je
xor
scas
fstpl
subl
inc
xchg
fldt
push
lahf
scas
sub
rorl
sub
pop
sbb
mov
aad
cmp
cmpsb
or
cmpsl
jle
lods
or
lods
mul
ret
pop
cmpb
mov
cld
pushf
sbb
jb
gs
sub
dec
sub
xchg
aas
xchg
test
and
scas
addr16
lea
mov
arpl
call
jecxz
jne
jae
dec
mov
cmp
movsb
xchg
xor
mov
into
or
movsb
mov
cmp
psrlw
dec
fnstenv
mov
mov
aam
lea
mov
loopne
movsb
xchg
in
fmuls
xchg
jge
xor
movsl
cmp
jle
mov
mov
inc
mov
imul
and
das
test
bound
cld
aaa
mov
in
jnp
out
pop
jge
icebp
pop
testb
xor
sub
iret
mov
inc
sbb
cmp
mov
js
ret
push
pop
push
and
pop
ss
mov
lods
stos
jmp
enter
pop
inc
xlat
xor
rcrb
insb
adc
test
sub
lret
cmp
or
sub
in
insl
lret
or
mov
stc
imul
aad
ja
repz
aad
test
jbe
mov
adc
sti
daa
fsubrl
fs
fs
push
xchg
mov
xchg
sbb
in
filds
aad
push
sbb
jecxz
xor
push
sub
xchg
mov
outsl
jp
mul
je
pop
jb
andb
out
sub
add
xchg
nop
in
fsubp
fwait
sbb
bound
out
mov
stos
jmp
pop
dec
fmull
and
shl
jae
adc
cmp
cltd
add
inc
xor
fwait
mov
mov
and
fsts
jbe
lods
and
test
ret
enter
jmp
lea
cmp
push
sub
aam
jbe
mov
cmp
adc
mov
repnz
cmc
adc
ja
cld
cmpsl
mov
push
arpl
movsl
es
popa
test
mov
push
cld
gs
mov
sub
incl
push
push
jmp
sub
jbe
pusha
add
adc
xchg
scas
rclb
pop
enter
cmp
dec
fdiv
add
add
movsb
fbstp
test
cwtl
ljmp
or
out
add
pop
in
hlt
jg
out
pop
jmp
and
push
mov
inc
dec
ss
sti
push
inc
mov
and
mov
or
adc
call
push
pop
out
cli
sub
add
cwtl
fdivrs
mov
stc
pop
sub
aam
lock
mov
lods
imul
lcall
adc
enter
add
shlb
mov
adc
psubsw
mov
adc
cmp
lret
add
clc
jb
or
xorl
jg
mov
dec
test
adc
daa
bound
push
sbb
mov
adc
xchg
scas
ja
ret
ds
movsb
jb
inc
pusha
rcrb
js
jge
leave
dec
daa
stc
subl
pop
cmpsb
jle
loope
int3
jmp
mov
scas
stos
jnp
lea
xchg
call
and
pop
call
sti
xlat
inc
jo
movsb
xor
and
sub
dec
fsubs
mov
xor
mov
add
mov
scas
sub
std
xlat
imul
inc
and
xor
insb
adc
pop
xor
xchg
xor
inc
in
pop
sahf
xchg
daa
out
mov
aad
add
popa
add
fs
das
xchg
lods
sbb
mov
mov
dec
sbb
inc
movzbl
hlt
aad
test
dec
and
cmp
xor
sub
xor
cmp
xchg
in
cmp
mov
inc
mov
or
movsb
call
pop
mov
test
jg
add
insb
data16
imul
stos
dec
adc
fucomp
mov
int
xor
movsb
inc
scas
or
test
pop
xchg
movsl
push
adc
fcmovu
sub
xchg
stos
sub
cli
rorb
lods
stos
das
aam
lahf
int
ss
mov
mov
daa
sub
and
lahf
xchg
fisttpl
popf
loop
addr16
jne
cmova
dec
pop
leave
rorb
imul
movsl
mov
ret
call
out
mov
mov
add
pop
xchg
enter
addr16
jb
das
jbe
dec
mov
or
or
xlat
ret
sbb
rclb
push
add
add
scas
test
sub
mov
jbe,pt
dec
add
add
xchg
ficoms
fs
mov
imul
addr16
mov
or
imul
xor
xor
fisubrs
and
rcl
cmp
rolb
fistl
addr16
xchg
fnsave
sub
mov
lods
push
clc
pop
mov
mov
cmp
sub
ret
cmp
fildl
adc
ds
sbb
inc
mov
add
sub
test
arpl
jns
xchg
inc
adc
mov
gs
lods
bound
loop
mov
enter
lods
push
sarl
sti
xchg
or
push
push
cmp
lea
in
pop
adc
mov
mov
fs
sub
inc
sub
or
cmp
pop
mov
cmpb
gs
pop
sub
ficoml
imul
add
sub
or
xchg
fs
dec
imul
jo
push
loop
jle
aad
je
push
jo
call
adc
lahf
sbb
les
pusha
dec
arpl
add
ss
and
sbb
mov
sahf
mov
pop
into
adc
xor
pop
dec
mov
mov
mov
popa
xchg
mov
push
add
shlb
stos
xor
out
nop
mov
enter
and
fldl
out
daa
ljmp
adc
or
inc
and
push
adc
xor
xchg
ljmp
andb
rorb
clc
inc
xchg
out
pop
push
or
lock
popf
pop
add
dec
rcll
and
idiv
mov
mov
sahf
scas
pop
cmc
or
xor
cmp
test
and
test
cmp
inc
std
cld
mov
jns
lret
xchg
aad
push
fildll
fstpt
jecxz
jno
repz
ljmp
cltd
loop
push
or
fiaddl
ljmp
insb
cmp
imul
loope
test
testl
into
mov
jl
notb
movsl
and
add
push
jns
jmp
test
jnp
hlt
std
sbbl
into
mov
sahf
jo
fdiv
xchg
test
stos
cmp
fdivs
sbb
xchg
lock
cmp
push
lahf
jb
and
cmp
mov
mov
popa
in
loopne
enter
dec
mov
arpl
fcoms
jle
adc
sti
or
loope
inc
repz
mov
hlt
or
push
clc
leave
sbb
sbb
aam
mov
lret
ret
insb
mov
xor
insb
lahf
stos
mov
adc
pop
mov
or
test
stos
pop
jne
iret
in
or
pop
jle
xor
jbe
xchg
xchg
scas
add
daa
mov
xchg
std
ret
or
scas
out
push
mov
push
outsl
in
or
in
lock
mov
xchg
icebp
rcrl
push
test
cmp
sahf
aam
arpl
loopne
stos
push
dec
test
out
xchg
leave
cwtl
mov
flds
sub
shrb
sub
jecxz
mov
aaa
inc
addr16
pop
sbb
out
pop
movsl
mov
inc
int3
shll
xlat
xlat
fisubs
fidivrs
pop
add
dec
mov
mov
xchg
xchg
aad
or
testl
push
mov
mov
pop
push
pop
and
in
addr16
sub
xchg
or
js
jg
dec
mov
shr
ret
mov
lds
and
lods
and
and
mov
fisubrs
inc
jne
test
aaa
pop
mov
mov
lahf
test
mov
dec
test
out
xchg
lods
dec
xchg
push
in
and
orl
fwait
sub
mov
lods
mulb
and
mov
lahf
daa
gs
xchg
cmp
arpl
fnop
fisubl
fs
pop
lock
xchg
ret
ljmp
aad
loope
hlt
movsl
inc
cmp
cmpsb
add
or
aam
and
push
or
sbb
push
jl
rol
sbb
ret
cmp
mov
fwait
leave
sub
pop
xor
mov
adc
mov
add
push
jp
adc
mov
arpl
insl
lock
sbb
int3
sub
aaa
push
jne
repnz
les
dec
and
xor
dec
jo
xchg
mov
scas
push
xor
sub
xchg
lahf
jg
dec
add
mov
sahf
adc
lods
cltd
xchg
xchg
push
cmp
arpl
add
and
inc
sbb
mov
jo
repz
ret
stc
in
mov
idiv
jg
imul
incl
jmp
fstl
repnz
push
jne
aas
push
and
lock
fsubrs
xor
sbb
aam
cmc
mov
xchg
imul
push
mulps
dec
dec
and
mov
jb
cmp
call
out
dec
jp
leave
imul
inc
cmp
stos
mov
adc
sbb
rolb
bound
jo
pop
lods
push
jno
lods
fcomi
stos
and
sbb
push
std
dec
xchg
xlat
frstor
cmp
push
movsb
mov
pop
jno
sbb
inc
xchg
and
dec
mov
lcall
cmp
sbb
pop
adcb
out
pop
jmp
inc
orb
inc
test
cld
imul
aad
xchg
je
addl
lds
mov
pusha
enter
clc
jg
push
je
stc
cmp
mov
inc
xchg
jae
lock
mov
dec
into
loopne
frstor
test
or
popf
sbb
das
push
stos
lods
pop
lods
push
mov
jg
sbb
movsl
inc
je
lods
sub
adc
xchg
movsl
popf
aad
clc
int3
add
xchg
test
lods
cmp
dec
mov
sbb
lahf
imul
cwtl
and
scas
psrlq
and
rorl
jns
lock
aas
data16
lds
ficoml
mov
or
dec
push
xchg
icebp
cmp
adc
imul
mov
pushf
mov
pushl
pusha
xor
and
ret
inc
mov
sti
xchg
add
addr16
out
push
ja
add
clc
repz
rolb
ds
fcmovnb
mov
ret
cmp
push
add
dec
ss
and
enter
shlb
dec
repnz
clc
mov
dec
lds
pushf
outsb
das
arpl
into
outsb
sub
push
imul
js
push
push
rcl
adcb
cmp
dec
call
nop
repnz
icebp
xor
dec
imul
push
pop
mov
shl
jl
icebp
imul
mov
mov
je
or
lods
push
jle
je
or
gs
adc
cltd
into
jge
pop
test
mov
sub
jp
nop
aam
or
mov
and
pop
ss
mov
xchg
adc
xchg
pop
mov
and
rol
dec
lea
pushf
icebp
mov
in
xor
sbbb
pusha
mov
loop
mov
fmul
mov
push
push
cmpsb
inc
int3
mov
fsubs
mov
mov
add
sub
xchg
add
inc
sahf
movsl
mov
cmpsb
jge
mov
add
pop
push
xor
rorl
imul
lcall
aam
mov
mov
test
outsb
sub
xchg
cmpsb
popa
push
les
add
mov
xor
inc
enter
mov
inc
nop
mov
and
add
pop
mov
outsb
jl
mov
lahf
or
xlat
aaa
push
xor
sub
out
fcompl
xchg
push
enter
xor
inc
lods
mov
cld
movsl
insb
push
subb
out
int
inc
stos
leave
cmp
sub
jecxz
mov
adc
loop
outsl
fsubl
jp
adc
fisttpll
mov
test
repnz
out
inc
pusha
pushf
mov
jl
out
js
add
push
clc
int3
push
out
sub
sarb
pop
sbb
lahf
inc
jo
icebp
push
xchg
sbb
jmp
mov
cmpb
xchg
ficompl
xor
cmp
adc
pop
loopne
mov
fnsave
aad
jge
push
decb
sbb
and
call
or
inc
push
nop
push
xor
fmuls
repnz
dec
push
lahf
push
push
and
test
mov
push
daa
mov
pushw
push
jecxz
pop
xchg
adc
mov
pop
cli
mov
jle
inc
hlt
jecxz
cmp
or
adc
ror
movsl
mov
jb
sub
mov
outsb
xchg
mov
sbb
lea
mov
gs
add
push
int3
jg
sbb
inc
ret
sub
mov
jb
je
sub
cli
int3
sbb
fistpll
dec
movsb
mov
xor
mov
jb
jnp
std
or
je
aaa
jnp
mov
in
aas
scas
enter
in
and
nop
jmp
lahf
and
pop
cld
push
mov
fidivs
das
out
outsb
pop
rcr
iret
inc
aad
fcomps
repz
dec
and
dec
mov
dec
mov
ja
hlt
mov
push
mov
cwtl
pusha
xchg
dec
cpuid
fnstenv
mov
outsl
jne
mov
xchg
mov
int
push
in
fs
push
js
add
mov
outsb
out
and
mov
out
xor
adc
adc
inc
lahf
xor
mov
scas
leave
jle
xlat
dec
call
lock
adc
stc
mov
out
pusha
inc
arpl
lret
sub
push
or
pop
lock
cli
adc
cld
test
lock
cli
sbb
dec
sub
out
fimull
aaa
add
xor
cmpsl
push
sbb
aam
les
out
lret
and
cli
sub
cmp
jne
and
sbb
shr
fdivs
mov
daa
fwait
lahf
inc
int
cmc
mov
gs
cwtl
ret
jbe
iret
and
mov
cmp
hlt
in
out
jnp
sbb
ds
pop
aam
pusha
jo
mov
popf
adcl
pop
push
jb
imul
or
xchg
cmpsl
and
adc
pop
insb
dec
add
popf
or
jo
test
js
lcall
movl
movsb
mov
sub
jns
mov
sbb
fidivrl
dec
xchg
mov
mov
mov
lret
shll
movb
xchg
inc
pop
cli
inc
dec
sahf
add
adc
sub
cmp
notb
or
rol
icebp
xor
jge
jmp
not
mov
xor
insl
xor
sbb
adcl
es
xor
add
enter
iret
jecxz,pt
test
inc
int3
lock
andl
dec
loop
loop
std
add
addr16
mov
push
es
movsb
or
sbb
inc
fnsave
rcl
iret
je
mov
repnz
ss
dec
inc
fsts
lret
push
xchg
adcb
in
pop
push
mov
mov
mov
test
mov
inc
test
test
dec
out
add
cld
xchg
mov
in
and
aad
and
rcrb
scas
js
sbbb
shlb
jns
fwait
inc
add
push
push
pop
jg
lods
popa
lret
int3
or
sub
test
mov
scas
sbb
cli
inc
cmp
pop
push
ss
in
pop
mov
xchg
pop
or
sbb
dec
xchg
sarl
cmc
fdivr
fildll
iret
sub
mov
sbb
in
ret
stc
loop
loope
fwait
jbe
dec
xchg
addr16
leave
xchg
stos
lcall
mov
pushf
xchg
lcall
push
pop
out
jno
lret
mov
adc
push
inc
lea
sub
nop
outsl
cmc
push
test
lods
xor
xchg
imul
add
mov
inc
nop
aam
notb
and
imul
sbb
shl
dec
icebp
and
insb
pop
mov
mov
xchg
lods
insb
movsl
shll
pop
arpl
add
push
mov
lock
lcall
add
fiadds
inc
test
mov
mov
lret
iret
or
dec
mov
jns
dec
loop
repnz
sub
push
mov
mov
jp
ds
add
cwtl
cmpsb
mov
mov
xchg
es
pop
enter
shr
ffree
out
fisubl
int3
cmpsb
mov
mov
lahf
inc
jae
sarb
out
mov
cs
roll
push
xchg
nop
sub
out
mov
pop
cmc
mov
sub
test
shlb
shl
outsl
bnd
lcall
pop
inc
cmpsl
mov
mov
stos
ds
pop
scas
enter
lret
pop
ss
orb
enter
or
in
icebp
lods
rcr
leave
sub
push
adc
sub
lock
mov
cmp
adc
xlat
data16
outsl
ds
lret
mov
cmp
cmp
mov
out
lods
jg
cmp
mov
popa
vxorps
bnd
fadd
mov
repz
and
dec
pop
xchg
jmp
lds
jge
mov
mov
loopne
pop
rcrl
mov
adc
mov
cmpsb
and
loopne
sbb
push
ss
push
xchg
mov
dec
movsl
xchg
mov
lahf
ficoml
out
scas
xchg
xlat
insl
mov
pop
popa
mov
lea
dec
mov
enter
jo
mov
call
lret
mov
xorl
xchg
xorb
sub
mov
xchg
outsl
pusha
sarl
push
mov
in
dec
loope
mov
out
push
push
aaa
or
pop
or
call
cmpsb
sub
jbe
cltd
push
mov
jmp
push
jbe
add
les
data16
sarb
dec
dec
jb
repnz
mov
sbb
lods
ret
and
jecxz
sub
nop
xor
jg
mov
fistl
xchg
test
mov
push
jns
and
cs
jecxz
ljmp
xchg
mov
leave
mov
sub
push
mov
xchg
mov
pop
addl
flds
cwtl
sbb
pop
add
test
rcrb
cltd
pop
cmc
das
or
and
xor
and
and
mov
insl
or
mov
xchg
or
ja
icebp
jg
inc
sbbl
imul
sub
mov
jl
mov
mov
imul
pop
pusha
add
lds
lret
in
push
xchg
sub
add
pop
fwait
int3
les
sub
lahf
cmpsl
movsb
dec
xchg
in
das
leave
and
cltd
adc
jge
xor
jecxz
imul
push
in
mov
pop
cltd
test
fists
mov
in
fcmovnu
shll
fisttps
push
dec
ljmp
mov
inc
inc
shlb
or
cmp
and
sar
imul
aaa
fidivs
out
mov
and
fbstp
and
lea
lds
cmpsb
lret
jo
mov
mov
or
add
sub
inc
or
inc
int3
test
dec
or
outsb
out
adc
lea
mov
xchg
stos
mov
sub
push
jb
out
fisttps
jmp
xor
testb
sub
popf
dec
cld
test
test
mov
out
inc
or
loop
imul
mov
fildl
cs
loop
mov
dec
sbb
leave
or
xor
test
addb
out
out
mov
pop
sub
adc
inc
les
sbb
sub
add
popa
add
adc
ds
xchg
xor
xchg
sbb
xchg
mov
dec
jne
lcall
sub
add
iret
sahf
jge
rcrb
out
out
and
mov
sbb
inc
pop
jns
rcr
xchg
xor
add
repz
in
pop
jmp
je
cmp
ljmp
pop
aas
mov
push
pop
rcl
test
cs
hlt
loop
lds
sbb
mov
mov
test
mov
cmp
test
aas
xchg
addr16
sahf
push
add
ret
sub
cmp
std
daa
pop
mov
aas
fdiv
sbb
pop
mov
out
lock
inc
or
cmp
test
inc
xchg
jne
and
pusha
test
int3
shl
daa
js
dec
in
mov
dec
es
adc
loope
adc
mov
shrb
mov
stos
dec
adc
inc
mov
dec
and
cmp
mov
sub
inc
mov
mov
jne
push
mov
cli
mov
icebp
leave
lods
into
sub
mov
mov
sahf
and
sarl
mov
aad
and
fwait
push
jae
pusha
push
cmpsb
inc
psllw
mov
rorb
push
mov
push
cmp
into
dec
mov
xlat
mov
aaa
dec
outsl
or
mov
stos
mov
out
and
adc
pop
jmp
repz
insl
lret
mov
gs
or
nop
pusha
loope
cmp
frstor
pop
adc
mov
lods
lock
pop
push
sub
xchg
das
mov
lea
outsl
add
pop
pop
jp
fld1
xor
jl
test
popf
push
aas
orl
movl
jne
dec
test
lcall
pop
sub
stos
stos
inc
outsl
repz
and
adc
adc
push
adc
mov
mov
arpl
mov
push
repnz
out
push
or
outsl
loopne
jle
add
cmp
mov
pushf
pop
jb
mov
mov
in
leave
mov
into
adc
gs
push
movsl
fiaddl
out
shrb
inc
outsb
pop
inc
outsb
sti
clc
sbb
jnp
jb
adc
xchg
aas
pushf
ja
sub
fs
mov
enter
stc
push
loope
mov
pop
jle
push
cmc
mov
add
outsl
push
and
in
or
mov
sub
cmpsb
scas
sbb
push
dec
xor
ret
push
cli
gs
outsb
inc
add
shrb
cmpsb
cmc
loop
fisubrs
mov
sub
xor
int3
mov
cmp
jp
and
push
push
movsb
add
rclb
fcomp
sub
xchg
pushf
mov
shrb
xchg
push
pop
sbb
xor
into
out
ja
jae
dec
adc
lret
lds
outsb
orb
xor
mov
xchg
xchg
add
push
inc
cmp
mov
sub
push
dec
stos
ds
lds
dec
mov
xchg
hlt
xchg
xchg
jb
push
fdivs
adc
inc
aaa
addb
pusha
shrb
stc
hlt
cmp
das
jmp
mov
and
call
and
xchg
cwtl
xor
mov
lret
xor
stos
cltd
push
sahf
imull
ret
xchg
sbbl
or
movsl
jle
arpl
cmp
push
ja
out
jl
insl
sub
lea
fistpl
mov
inc
arpl
push
lcall
jecxz
sub
lock
push
xchg
sahf
mov
xchg
repz
inc
jecxz
mov
sub
add
je
ss
in
sub
mov
mov
pop
adc
push
lea
xlat
pop
repnz
jno
jecxz
sub
or
in
cmp
inc
mov
sahf
je
and
jbe
xchg
out
jge
dec
mov
sbb
xor
pop
shll
outsb
in
stc
ror
mov
out
in
mov
ss
stos
mov
shll
repz
xor
xchg
jae
dec
mov
fdivl
jg
rep
mov
fsubrl
pop
mov
push
mov
fsubl
or
shl
lret
scas
adc
or
jne
jl
pop
add
out
adc
popa
xor
stos
stc
pop
dec
adc
into
lock
gs
cmp
mov
stc
jp
lahf
insb
popl
pushf
les
inc
and
and
xchg
mov
jp
pushf
jne
lds
adc
cmp
or
jmp
ljmp
mov
mov
adcl
lea
outsl
loop
mov
push
push
std
fiadds
dec
fs
gs
pop
dec
inc
pop
movsl
xchg
stc
fstl
stc
lcall
filds
icebp
and
or
nop
mov
cli
sti
in
cltd
fistpl
addr16
or
mov
pop
mov
add
fabs
nop
stos
negl
stos
xor
xor
fdivs
mov
cld
jne
jo
mov
in
int
mov
adc
scas
test
not
pushf
mov
cmc
sbb
pop
or
cmp
stc
sub
and
or
inc
adc
and
sub
ss
inc
xchg
mov
mov
sub
cs
and
inc
lahf
mov
cmc
lret
jge
mov
mov
cwtl
enter
mov
mov
and
pop
add
sbb
icebp
inc
push
jl
push
xchg
movsb
push
int
or
movsb
push
adc
push
mov
push
dec
scas
mov
sbb
cmp
popa
jl
sahf
lret
adc
and
jg
rorb
aad
dec
ljmp
orb
in
mov
lret
pop
jl
mov
leave
mov
cmc
repz
and
aam
test
dec
std
rcrb
push
xchg
jmp
and
scas
mov
and
into
jp
cmp
push
fmuls
cmp
clc
jbe
nop
mov
vcomisd
inc
lret
dec
push
cwtl
pop
inc
sbb
dec
inc
sub
cli
pop
adcl
aaa
nop
hlt
into
sbb
add
cmc
push
cmp
ret
clc
out
ss
arpl
arpl
mov
leave
in
or
adc
jmp
int3
inc
mov
cli
call
jmp
into
in
jae
dec
loopne
mov
xchg
jns
xchg
jge
push
xor
jmp
lock
adc
jge
or
stos
cs
mov
repz
ss
xorl
inc
jg
sbb
add
adc
decl
xor
push
daa
fs
push
mov
push
mov
cmp
pusha
mov
movsb
test
adc
pushw
inc
push
add
ds
mov
pop
mov
jno
ds
pop
dec
insl
outsb
rcr
mov
mov
repnz
mov
je
xchg
push
push
movsb
divl
jnp
out
xchg
mov
xchg
add
or
xor
pop
shl
jne
popf
jns
adc
bnd
cltd
daa
ljmp
push
push
lods
outsb
rcll
mov
mov
sbb
outsb
fbstp
adc
dec
cld
dec
mov
sub
insb
sub
push
mov
xor
add
test
ljmp
movsl
scas
ja
xlat
scas
pusha
out
mov
pop
jo
inc
mov
cld
dec
cmp
iret
cmp
dec
pop
mov
jne
mov
adc
aas
arpl
mov
jmp
pop
std
lods
lods
popf
dec
jbe
xchg
ss
test
cs
stos
sar
arpl
pop
sub
inc
sbb
xchg
add
ret
push
test
and
mov
iret
stc
and
sti
popa
rcll
adc
jecxz
scas
add
outsb
add
add
nop
sub
mov
xchg
inc
je
dec
add
dec
jmp
into
jle
les
test
dec
nop
lods
cmp
pop
xor
sub
sbb
push
and
test
xchg
outsb
xor
mov
shlb
sbb
cld
inc
mov
scas
sti
dec
sbb
mov
sbb
xchg
js
das
jae
cmp
lret
test
lods
dec
cmp
fisttpll
out
dec
scas
aam
in
push
inc
cmp
or
inc
sub
jne
fildl
pop
pop
je
loop
or
push
js
dec
add
cli
or
insl
fadd
xorb
in
mov
jns
sub
pushf
fst
add
ret
out
lods
sbb
mov
cli
loope
cmpsl
hlt
outsl
out
mov
test
mov
push
mov
mov
test
out
and
cmc
mov
add
lea
popa
or
mov
cmp
push
les
stos
insb
mov
and
clc
mov
js
pop
jmp
in
and
mov
sti
and
adc
lock
add
add
sbb
addb
mov
xor
pop
mov
cmpsb
cmp
ss
jnp
push
repnz
fisttps
xor
cmp
lds
shll
add
push
ljmp
outsb
scas
mov
lds
mov
ljmp
loopne
stos
mov
rorl
cmp
cli
sahf
mov
or
call
in
mov
daa
mov
adc
mov
pop
stos
pop
clc
aas
inc
sbb
ret
and
adc
jecxz
pop
ja
mov
out
cld
inc
movsb
add
shll
cmp
cmp
mov
adc
aas
adc
pusha
push
push
add
jmp
out
daa
out
jns
adc
fidivrs
mov
xchg
cmp
mov
cmp
lds
pusha
addl
dec
imul
dec
jnp
ljmp
rolb
inc
xor
nop
and
scas
hlt
sbb
lcall
repnz
sub
xchg
cmp
fcmovne
xchg
adc
out
mov
dec
dec
clc
loope
fwait
mov
cli
jnp
or
xor
xchg
mov
mov
xchg
mov
hlt
sbb
mov
aad
arpl
pop
inc
movsl
push
jae
nop
pop
sub
sub
xlat
subl
or
xor
jno
add
clc
push
pusha
cmp
das
movsb
sbb
mov
icebp
out
mov
inc
inc
xchg
out
sarl
std
imul
and
aad
out
mulb
pop
jmp
jge
pusha
out
int
scas
pop
xchg
and
add
add
insb
pop
ficoms
lock
inc
daa
dec
dec
lret
mov
aad
into
gs
jno
mov
jmp
jne
xchg
jno
xlat
jae
in
addb
pushf
and
lahf
pop
lret
mov
jne
bound
sbb
fcoms
add
shlb
and
das
pop
add
nop
loope
xchg
into
and
push
dec
cltd
xor
xchg
inc
mov
inc
clc
loopne
jge
cmp
int
pop
mov
mov
jecxz
les
xor
adc
stos
pusha
fstpl
sub
mov
adc
inc
ret
insb
sti
bound
aam
cmp
xchg
mov
fcmove
lahf
mov
lods
lret
inc
pop
xchg
inc
out
xchg
loop
imul
rorl
cmp
movsl
jne
imul
sti
out
jmp
mov
dec
arpl
add
in
inc
push
add
or
fcmovnb
pop
mov
or
and
mov
mov
bnd
aam
shlb
sbb
imul
shll
xor
mov
stos
stos
add
in
fmuls
add
push
cmp
sub
sti
ret
loopne
sub
gs
mov
pop
adc
movsl
jae
dec
adc
jno
sbb
mov
sti
mov
mov
jo
sub
jle
sub
or
inc
cmpsl
call
add
add
cmp
in
fimuls
fidivl
fs
jmp
jb
inc
imul
jge
inc
xchg
rorl
inc
shlb
adc
sub
jl
icebp
xor
pop
xor
mov
push
lret
mov
ja
out
push
mov
jp
aad
cmp
in
mov
push
add
mov
jnp
add
pop
out
lock
test
jmp
jo
inc
mov
in
xchg
pop
inc
lods
jp
inc
aas
pop
cmp
jle
jl
xlat
push
lds
loopne
mov
bound
repz
call
dec
es
xchg
cmp
or
pop
jb
movsl
mov
xchg
pusha
sbb
sbbl
les
cli
mov
jge
fsubrs
mov
xchg
jns
inc
pushf
loopne
popf
sbb
pop
sbb
and
xchg
iret
sub
adc
jl
dec
sti
sbb
loope
push
and
cmpsl
jo
xor
jecxz
imul
fists
adc
jmp
into
sbb
mov
in
shrb
shrb
mov
cltd
leave
int
call
jae
xchg
fistpl
lahf
or
fwait
jmp
push
in
arpl
jmp
xor
lret
mov
mov
cmp
mov
lcall
das
movsl
jno
xchg
inc
push
mov
cmp
mov
movsl
test
fdiv
mov
add
sbb
pop
ret
mov
inc
insb
rcll
xor
mov
sti
mov
pop
and
cmp
fwait
sub
cmpsl
gs
popf
mov
lret
xchg
insl
xchg
rorb
or
test
mov
divl
add
cmc
or
xor
xchg
ffreep
dec
jne
sbb
aaa
mov
inc
clc
lahf
lret
mov
and
fwait
fwait
cld
imul
xor
or
push
inc
aaa
fucom
bound
inc
pushf
inc
lahf
ja
jge
add
rcll
hlt
inc
and
inc
stc
mov
pop
rcrb
mov
dec
icebp
cwtl
arpl
out
iret
fisubrl
ret
shll
sbb
add
mov
ficoms
in
xchg
push
sbb
add
cmp
pop
add
mov
incl
out
aad
or
push
mov
lock
cli
loopne
jnp
or
xor
dec
shlb
sbb
sbb
push
idivl
fisubrs
xchg
pop
ds
jecxz
mov
mov
fwait
mov
mov
cmp
mov
lock
fists
std
xchg
sub
das
jno
xchg
movsl
je
mov
out
mov
pusha
xor
mov
push
ret
jb
and
sti
nop
insb
inc
xchg
sbb
shl
rorb
fidivl
popa
daa
jno
mov
ret
cmpsl
push
cs
ja
pusha
jnp
inc
lods
mov
inc
mov
mov
pushf
adc
call
cmp
adc
sub
sub
outsl
jl
orl
nop
push
out
js
ret
inc
sbb
clc
nop
fcompl
jnp
and
add
push
rclb
loop
pop
test
in
popa
mov
sahf
sbb
adc
cmpsb
std
les
push
outsb
fistps
dec
scas
bound
iret
cltd
rcl
jg
mov
push
das
and
stc
aad
lahf
mov
rcll
inc
test
xchg
repz
adc
xor
mov
push
push
fwait
imul
push
rep
mov
adc
push
cld
pop
imul
lods
std
sub
jbe
insl
cmc
push
cmpsb
ljmp
jnp
popa
sub
les
loope
fcomps
mov
xor
adc
push
jb
inc
mov
imul
xchg
push
cld
cmovs
imul
popf
cmp
ret
dec
lcall
dec
icebp
fcom
push
in
mov
xor
rcr
add
cli
ror
jo
vorps
adc
inc
or
cltd
push
or
movsb
test
popf
ja
hlt
inc
sbb
xorl
pusha
xorb
jle
dec
or
pop
ja
push
popf
xchg
fwait
pushf
cmp
jnp
sbb
jle
lods
iret
add
inc
jmp
or
cmovns
jl
test
lcall
outsb
sub
ficoms
add
arpl
pop
or
test
mov
fdivl
aam
pop
jp
inc
arpl
push
adc
add
mov
lods
push
testl
std
insl
fdivl
adc
xchg
xchg
shrl
push
cmp
sbb
loope
mov
outsl
jl
in
push
popf
dec
test
pop
mov
je
pop
aaa
mov
or
dec
fwait
pop
fcomps
sub
adc
add
push
dec
and
loop
add
std
call
jb
lret
adc
not
mov
jno
xchg
jl
fwait
or
lods
sub
push
shr
lret
push
xor
fcoms
jns
into
mov
cmpsb
inc
xor
xor
movsb
addr16
mov
jl
mov
call
xchg
ror
mov
jmp
dec
call
pcmpgtw
sub
mov
xlat
in
xor
adc
xchg
popa
or
icebp
push
jge
std
push
enter
and
pop
imul
mov
arpl
push
xor
out
pop
movsl
sub
stos
fidivrl
xor
mov
cmp
hlt
mov
dec
pop
adc
lcall
popf
xlat
add
cli
incb
ret
or
dec
mov
sbbl
jno
jne
aas
mov
mov
xchg
dec
xchg
cltd
repnz
push
push
xor
jae
xchg
xor
int
jmp
cmp
push
pushf
dec
mov
xor
lds
mov
mov
pop
ret
nop
fdivrl
jbe
out
lret
sti
or
cmpl
jne
mov
int
dec
xlat
das
sub
outsl
scas
sub
loope
adc
into
jne
mov
ret
rolb
cs
push
push
test
push
mov
sbb
pusha
pop
sub
lods
xchg
and
cmp
push
xor
lods
insl
cmp
hlt
jp
fisubrs
adc
les
dec
jl
xor
or
arpl
leave
sub
adc
sbb
pop
cld
cwtl
dec
and
add
mov
dec
les
cmovl
xor
pop
lahf
sbb
mov
call
ljmp
ss
mov
int3
mov
pop
subl
fmul
fwait
pop
jb
mov
mov
and
bound
add
mov
xchg
pusha
insb
loopne
xchg
jmp
es
cmp
movsb
xor
mov
push
inc
les
ret
and
mov
mov
push
adc
jne
movsl
mov
addr16
ljmp
xchg
adc
shlb
cmp
scas
cmovge
test
pop
in
dec
inc
add
sbb
jb
hlt
inc
mov
xor
sbb
addb
lret
sti
dec
movsb
mov
mov
fdivs
ss
cmp
cmp
jmp
adc
jmp
cmp
bound
es
insl
jne
xor
iret
pop
mov
dec
inc
addb
fimuls
or
and
cltd
push
mov
xor
imul
fs
testb
pop
enter
cmp
ja
jge
adc
sti
out
jge
push
or
lods
scas
jg
enter
xchg
and
xlat
pop
add
fimuls
arpl
dec
dec
or
cmpb
add
fisubrl
ret
cltd
ds
pushf
and
and
mov
ss
inc
sub
pop
clc
in
filds
jns
insb
jp
iret
jmp
sbb
jl
out
scas
subl
imul
sahf
mov
popf
ficompl
clc
ret
iret
jae
mov
mov
clc
leave
ds
decb
xor
push
data16
loopne
movsl
adc
sbb
sub
or
cmp
insb
stos
addb
popf
icebp
pop
sub
sbb
jae
test
adc
insl
js
add
mov
loop
rcll
push
push
aas
adc
sub
sub
mov
xlat
cmp
aam
mov
pop
xchg
int3
lret
hlt
sub
push
push
pusha
je
rcll
xchg
add
das
jecxz
push
and
push
js
inc
jae
rcrl
aam
jns
or
mov
jae
jl
gs
das
or
push
and
out
add
mov
mov
fs
dec
test
xchg
pop
not
lods
adc
add
or
inc
mov
sbb
mov
repz
adc
inc
push
subb
int3
call
fsubl
or
stos
sbb
test
int
xlat
idivb
lcall
cs
popf
cli
divl
lret
push
out
xor
je
xchg
mov
push
xor
xor
pop
dec
cmp
cmp
or
sub
fxch
scas
stos
add
cmp
xchg
mov
imull
dec
aas
lret
pop
mov
or
sahf
addr16
popf
xor
pop
xorb
and
jne
roll
pop
pop
es
jmp
mov
test
and
lods
push
pushf
mov
ss
shll
mov
jcxz
xor
push
test
orb
movsl
jnp
movsb
or
fcmovnu
sub
push
addr16
cli
enter
outsl
add
dec
push
cmp
stos
sahf
stos
ja
int
sub
mov
movsl
das
js
cmp
pop
enter
jae
popf
out
pop
push
pop
scas
subb
mov
pop
ret
scas
sub
mov
xor
lret
cltd
mov
pop
jo
stos
mov
jne
mov
sbb
mov
fldcw
cld
add
shrl
mov
je
in
push
or
popa
cmp
xor
mov
inc
jnp
mov
les
sbb
dec
or
fisttps
jb
addb
sub
psrlw
testb
push
or
iret
xor
mov
loope
clc
jle
add
test
int3
jg
addl
ja
xchg
xchg
cld
bound
push
sbb
pop
xor
sti
jbe
rcll
fcomps
adc
dec
mov
or
add
aam
xor
js
aaa
mov
pop
mov
ret
and
push
std
jmp
xchg
or
jge
add
negb
jl
ja
pop
out
gs
and
and
jecxz
or
xchg
cs
loope
int
push
cmpsl
inc
push
mov
push
outsl
jp
jg
js
mov
bound
jo
mov
xor
loop
inc
sub
xor
repz
pop
fmuls
shll
push
jp
vprotd
pop
xor
jp
lock
jecxz
test
pop
or
mov
dec
xlat
out
aaa
sub
sbb
loope
icebp
inc
scas
add
enter
imul
stos
pop
jmp
ret
push
or
adc
mov
or
sbb
cmpsl
lret
add
or
xor
imul
lcall
mov
ja
loopne
dec
pop
push
in
xor
push
cwtl
insb
sub
jne
cltd
stos
icebp
mov
dec
rolb
inc
ret
adc
stos
popa
mov
push
mov
sbb
hlt
jbe
cmp
adc
xor
aaa
movsl
div
mov
add
into
inc
cmp
cmp
gs
dec
jo
sub
fcomip
mov
adc
pop
dec
fldenvs
les
add
sbb
out
lock
cltd
rcll
dec
ja
popf
mov
sbb
dec
pusha
daa
jbe
mov
and
push
jns
loope
test
pop
outsb
push
pop
stc
mov
and
jp
push
lock
pop
cmpsb
mov
loope
sbb
dec
aad
les
scas
mov
enter
mov
leave
dec
je
mov
and
lds
std
jg
add
std
dec
neg
sbb
mov
xor
mov
jae
lods
dec
hlt
lock
fs
testb
adc
cmpb
sbb
cmc
and
fdiv
cmp
insb
ss
cmp
pop
ffreep
cli
add
gs
ds
lods
rcrb
andl
test
xchg
mov
sbb
bound
mov
ds
dec
dec
movsl
sub
es
outsb
sub
mov
jp
fimuls
and
dec
jno
xchg
mov
sbb
popa
loope
fs
push
loope
sysexit
mov
mov
dec
movl
cmpsb
fsubs
mov
mov
mov
movsb
orb
mov
mov
out
stos
and
cmp
loop
pusha
rclb
mov
and
mov
jg
fs
shl
cld
dec
push
ss
adc
pop
daa
aas
pushf
or
push
sub
push
and
add
xlat
inc
cmp
movsb
test
sbb
clc
in
popa
leave
addr16
in
incb
xor
lods
fistpl
jle
push
lcall
cltd
push
mov
pusha
repz
cmpsl
loope
xchg
mov
cltd
mov
inc
out
fwait
xchg
push
cmp
mov
or
push
and
ret
ficomps
data16
or
scas
sub
clc
mov
out
ret
xchg
clc
stc
inc
lret
or
mov
fisubs
imul
lods
addb
cltd
pop
dec
pop
adcb
push
adc
leave
mov
inc
mov
jmp
js
jg
push
in
cmp
push
loope
mov
shlb
push
sti
movsb
int3
xor
repz
xor
sbb
int3
and
cmpsl
insl
or
dec
stos
mov
adc
push
std
imul
xchg
addr16
cwtl
cltd
pop
ja
inc
push
push
pop
shrl
nop
mov
xorl
mov
lret
test
aad
pushf
add
xchg
ja
ja
xchg
mov
xlat
int3
xor
pop
jmp
into
inc
jge
cmp
jns
ror
loop
lret
aaa
push
inc
js
std
push
repnz
and
fisubl
adc
loope
das
cli
dec
mov
imul
jb
fildl
mov
pop
adc
leave
xchg
lret
clc
mov
subl
inc
dec
in
sbb
test
jne
in
mov
mov
and
mov
mov
call
or
hlt
jle
push
rcr
decl
movsl
cmp
dec
stos
addr16
int
test
enter
and
incb
mov
loope
or
inc
inc
cmp
lea
cltd
cmpsb
jnp
scas
js
push
add
or
pushf
xor
sub
xchg
stos
and
lock
add
repz
fdivs
mov
cld
out
push
sbb
pop
pop
ljmp
mov
xchg
jge
js
inc
ja
cli
stos
mov
xchg
pusha
xchg
les
stos
mov
call
inc
or
mov
lods
jecxz
cltd
sti
sbb
outsb
ds
addr16
pop
scas
mov
nop
nop
adc
jmp
dec
mov
scas
jo
pop
jp
addb
arpl
or
sbb
push
mul
dec
out
pop
dec
push
pop
pop
icebp
adc
iret
add
testl
test
and
sahf
and
sub
in
nop
cld
inc
ja
cld
fcmovu
outsb
pop
test
mov
push
nop
rcr
mov
pop
movsb
mov
imul
mov
ljmp
js
cmp
ss
mov
dec
fistpll
flds
mov
test
mov
or
arpl
pop
jle
mov
or
dec
and
add
push
fldl
imul
adc
das
push
inc
sbb
push
or
scas
inc
insl
inc
test
imul
dec
out
popa
daa
cli
loope
aas
nop
ljmp
in
sub
fildll
scas
lahf
and
cld
out
js
int
inc
movsb
roll
jle
mov
cmpsb
sub
pop
popf
xchg
pusha
mov
fists
test
mov
mov
fsubrs
in
mov
xchg
stos
mov
shrl
cmp
inc
out
push
inc
xchg
ss
pop
pop
xchg
cmp
cmp
lret
mov
lcall
fistl
cmpsb
imul
jbe
outsb
push
jg
in
sub
push
cmp
gs
lock
mov
mov
push
stos
movsb
push
out
imul
sub
sti
fistpl
pop
push
jge
dec
in
ficoml
outsb
xor
xor
loop
jns
cmp
adc
addr16
test
fisubl
mov
xchg
fisubrl
dec
inc
cli
pop
rcr
push
imul
popl
cmc
mulb
sub
pop
xchg
push
and
enter
popf
jle
cmp
imul
push
jp
and
scas
sub
mov
sub
call
aas
outsl
loop
fmull
mov
stos
and
jge
pop
xchg
jp
test
pop
fsubrl
aam
frstor
jne
dec
sub
movsl
jle
ds
cmpsl
fisubrl
mov
xor
jns
xor
jge
test
sub
loope
xor
cmp
sbb
repz
xchg
mov
stos
repz
mov
sbb
mov
adc
imul
rolb
mov
or
sub
shl
push
pushf
jno
add
popa
aam
ret
inc
repnz
in
jae
push
dec
push
icebp
push
inc
mov
ds
adc
jno
out
mov
lcall
stos
dec
and
inc
xor
mov
dec
iret
dec
pop
lret
in
inc
pop
test
out
popa
adc
mov
icebp
sub
add
mov
inc
ss
sbb
lahf
pop
dec
fbstp
dec
sbb
and
mov
in
shr
sub
fnsave
pusha
mov
ret
out
outsb
sbb
cmpsb
outsb
cmpsb
iret
rcl
jnp
loop
stos
orl
daa
mov
xchg
ret
fsubl
xor
mov
es
fcomp
sbb
xchg
es
lcall
adc
xor
rcrb
rorl
mov
and
sbb
ficompl
ds
pop
leave
jmp
and
aam
sbb
sbb
adc
sub
les
es
cli
cld
jge
cwtl
mov
shrl
test
add
sbb
add
xlat
rolb
mov
xorb
popf
jns
push
fisubl
dec
out
or
add
add
sbb
mov
jnp
dec
xor
addr16
push
push
ss
xchg
or
push
ja
in
testb
sub
or
sbb
pop
mov
add
dec
cmpsl
xchg
mov
or
dec
pop
incl
inc
shll
inc
ficompl
sbb
loop
cmp
scas
fmull
ret
dec
add
mov
mov
mov
rorb
cmp
jbe
imul
push
push
pop
ret
mov
inc
adc
sbb
repnz
pop
ljmp
pop
fwait
push
push
adc
adc
repz
jbe
jge
xchg
les
rclb
jns
ficoml
cmp
inc
cmp
jge
or
mov
cmp
cmp
popa
jnp
shrl
dec
fdivrs
adc
cwtl
jg
sbb
lcall
add
addr16
lret
imul
lahf
cmp
stos
xor
insb
fcoms
incl
adc
ss
mov
mov
call
pop
aaa
int3
ds
nop
filds
adc
sub
xchg
cs
inc
ror
sbb
pop
mov
enter
or
xchg
leave
fisttps
es
or
arpl
xchg
mov
dec
hlt
adc
add
xor
or
jg
inc
inc
rcrb
lea
jno
fldenv
movsb
mov
shrl
fwait
lods
mov
mov
and
dec
xchg
mov
cmc
mov
in
int3
or
mov
jbe
xchg
inc
cwtl
insl
cs
xchg
inc
insl
push
outsb
or
xchg
push
enter
xchg
cmpsl
and
jae
popf
push
icebp
push
mov
push
or
hlt
das
fildll
and
jle
dec
rorl
xor
out
add
jmp
xorl
movsl
push
push
xchg
imul
cmpsl
pop
adc
les
jae
push
cmpsb
imul
lret
out
push
xor
sbb
adc
out
jbe
dec
insb
popf
xor
sarl
dec
cmp
arpl
out
xchg
fisubrs
aam
cltd
mov
pop
addr16
inc
push
std
pop
ss
adc
jp
cld
xchg
iret
and
cmc
mov
xchg
dec
dec
mov
mov
divl
loop
loope
or
xchg
xor
mov
pop
inc
imul
int3
cmpsb
aam
lret
jge
xchg
scas
rorl
mov
scas
stos
into
mov
adc
xchg
pop
cmp
and
imul
fidivl
enter
inc
lahf
or
jge
push
fs
dec
stos
inc
mov
sub
sti
in
dec
fimuls
test
adc
imul
gs
out
jbe,pn
pop
cmpsl
push
add
mov
push
lock
add
imul
out
shrl
cmp
pop
cmp
jns
push
popf
jl
pop
lcall
add
ja
scas
repz
mov
cmpsb
addr16
push
movsl
sbb
sahf
jnp
mov
insl
adc
jmp
sub
mov
xchg
popa
push
lret
cmp
les
dec
fs
and
scas
loop
xor
jbe
cmp
outsb
stos
inc
popf
mov
leave
mov
or
add
in
inc
outsb
fsubs
jmp
push
cld
cmp
jecxz
out
or
xor
jns
cltd
mov
das
lock
shrl
std
inc
subb
clc
push
adc
xor
out
cmpb
adc
xor
xor
daa
pop
sub
or
cmc
lock
pusha
pop
aam
lret
fstpt
pop
mov
in
inc
cltd
mov
push
out
insb
cltd
jle
adc
fisubrs
xor
ret
out
sub
mov
add
mov
dec
sub
xchg
in
push
test
or
nop
xchg
cmp
push
out
stc
nop
daa
jle
ja
rolb
inc
bound
sahf
adc
out
mov
fcomps
jae
jmp
mov
pusha
mov
movsb
jecxz
add
pop
test
cmp
int3
daa
pop
cmp
repz
popa
out
sbbb
xchg
xchg
inc
or
pop
jmp
or
add
add
lret
aas
test
in
mov
sub
jl
movsl
lods
inc
jno
dec
repnz
lock
inc
pop
xchg
pop
pop
pop
mov
jp
inc
dec
mov
sbb
call
cmp
mov
jnp
pop
rcrb
loop
add
inc
addr16
dec
sub
sarb
jmp
test
xchg
cmpsl
stos
pop
rorl
pop
scas
jns
add
mov
mov
sbb
xor
js
mov
adc
pop
pop
or
loop
add
sahf
je
or
sub
mov
fisubrl
lods
jo
into
cmp
push
mov
fimuls
inc
inc
jns
repz
push
loop
mov
xchg
cmp
sub
icebp
dec
in
or
int
rep
js
incl
xor
sbb
sub
out
das
mov
dec
pop
stos
push
pop
jno
push
rcll
les
sahf
in
sub
ret
inc
out
xchg
lods
dec
dec
dec
jne
xchg
movsl
mov
notl
inc
dec
enter
ljmp
mov
shlb
pop
sbb
test
and
push
cmpsl
clc
aaa
ret
fwait
loope
dec
cmp
cmp
sbb
adcl
cmp
cmp
cmp
pushf
out
add
out
jae
ja
bound
jns
and
idiv
mov
fwait
popf
sbb
daa
cmp
dec
gs
adc
out
sub
dec
pop
loope
mov
sbb
fildl
test
add
push
js
pop
jle
sti
pop
mov
cwtl
sbb
xchg
mov
nop
shlb
test
inc
fmull
mov
es
fwait
mov
pop
mov
icebp
or
hlt
shlb
sti
mov
in
sbb
sbb
mov
add
mov
sti
imul
mov
fbld
cmp
cmc
outsl
and
mov
pop
sti
dec
dec
jecxz
push
adc
sbb
jp
dec
adc
daa
lds
inc
insb
or
pop
scas
nop
jecxz
cmp
push
lds
sub
cld
int
in
sarb
rolb
jmp
test
xor
fisubl
lahf
outsb
dec
mov
inc
sub
add
cld
mov
sbb
shll
mul
push
icebp
scas
cs
mulb
roll
test
pop
or
ljmp
pop
nop
inc
push
cmp
lret
pop
mov
and
xchg
mov
push
mov
mov
xchg
sub
pop
ret
divl
push
sbb
mov
mov
push
push
movsb
mov
and
and
das
mov
lds
jno
ss
in
shrd
push
add
enter
add
lahf
push
stos
outsl
fbld
andb
mov
inc
mov
repnz
sbb
ss
or
inc
ret
push
int3
or
mov
inc
adc
dec
jo
jb
xbegin
mov
shr
adc
hlt
push
pusha
pushl
mov
jns
faddl
mov
push
add
das
imul
or
dec
out
lret
movsb
dec
js
jmp
stos
hlt
inc
les
cmp
scas
jecxz
mov
mov
push
inc
scas
iret
mov
push
in
lea
pop
xor
xchg
aas
mov
repz
push
pop
lods
imul
loopne
les
xchg
adc
jo
rep
jns
fmull
ljmp
cmp
pushf
insb
adc
pop
icebp
mov
nop
jg
icebp
pop
test
dec
aad
mov
push
pop
adc
xchg
test
sub
xor
jnp
shll
inc
pusha
adc
xor
ljmp
fdivrl
idiv
gs
jmp
popf
mov
jecxz
push
lret
fildl
mov
bound
ficoms
fdivs
js
mov
xor
leave
scas
mov
movsb
lods
and
lods
fisubl
cmp
or
cmc
cmp
lds
jg
scas
pop
leave
ret
jg
call
cli
push
dec
jecxz
cmpsb
pusha
imul
loope
aad
add
mov
sub
jl
iret
fwait
push
inc
push
into
pusha
nop
scas
jle
push
mov
mov
ja
inc
and
popf
data16
je
outsb
inc
adc
lahf
js
mov
daa
stc
mov
xlat
or
fcomi
dec
leave
xchg
js
int
shll
into
xor
fistpl
pop
stc
dec
pop
xchg
cmp
xchg
push
pop
mov
jnp
push
adc
push
jne
add
je
stos
loop
jo
mov
pop
sub
in
out
roll
icebp
push
rorl
jecxz
cmpsb
jp
sbb
in
out
mov
xorb
mov
push
mov
aas
pusha
sbb
cmp
xchg
gs
push
or
mov
xchg
idivl
in
push
mov
and
in
dec
push
xor
bound
arpl
imul
fdivs
mov
sub
mov
out
mov
xchg
cmpsb
push
popf
lods
mov
xchg
push
xor
lea
inc
pop
xchg
adc
or
and
fcompl
jb
scas
addr16
xchg
and
fldt
xchg
xchg
mov
dec
mov
xlat
xchg
pop
out
in
cs
in
pop
adc
xchg
pop
xchg
lcall
iret
into
movsb
dec
jb
add
mov
out
out
push
push
xchg
imul
inc
rcll
jne
loop
inc
fbld
sub
and
clc
es
jmp
in
idivb
mov
push
out
js
enter
aad
pop
scas
outsb
data16
daa
cmc
jbe
adc
fwait
jnp
sbb
lcall
lret
inc
xor
iret
or
mov
pop
mov
push
cmp
cmp
adc
loopne
inc
shll
hlt
sbb
aas
adc
das
inc
ss
xorb
faddl
loope
gs
repnz
les
push
andb
add
loope
shl
imul
ss
dec
in
sbb
push
out
push
popl
and
cmc
into
int3
adc
enter
ret
jle
sbb
ret
jmp
inc
and
test
fisubrl
fs
dec
in
xchg
int3
dec
inc
lret
push
jnp
add
enter
push
xor
fisubrs
iret
ret
mov
cmp
mov
mov
gs
or
ljmp
rolb
popf
jnp
inc
push
cmpsb
adc
filds
and
push
aas
imul
inc
lods
fbstp
les
jmp
adc
push
outsb
mov
push
test
lods
aad
ffreep
pop
xchg
dec
ljmp
xchg
mov
int3
adc
jbe
jecxz
in
add
ret
mov
mov
jge
sti
aad
clc
iret
mov
jns
mov
dec
mov
add
jne
vpunpcklwd
jecxz
pop
xchg
out
stc
sbbl
sub
cmp
test
sub
sbb
imulb
lea
movsb
adcl
cltd
adc
fildll
out
jnp
mov
aam
sub
adc
subl
xor
subl
outsl
fcomps
xchg
dec
test
ret
imulb
sti
pop
mov
out
push
cmpsl
xchg
andl
pushf
fsubrs
call
lock
mov
mov
adc
cltd
xchg
scas
dec
cmp
mov
clc
xor
dec
inc
lea
fistl
xchg
inc
add
scas
cmpsl
sub
jo
popf
loopw
fstl
or
mov
mov
mov
fs
xorl
mov
inc
cld
movsb
pusha
fmull
jg
push
shlb
cwtl
push
dec
mov
inc
adc
xchg
out
addr16
lret
lods
insl
add
les
push
push
ret
mov
repz
sbb
dec
mov
cltd
scas
das
push
or
lods
xor
ret
xor
popf
xor
into
mov
sbb
push
flds
dec
or
sarb
xchg
mov
adc
dec
cmp
mov
repnz
daa
out
mov
call
push
cmp
mov
sub
inc
sbb
ret
sub
dec
rorl
mov
push
cmp
fwait
mov
adc
fstpt
xor
and
adc
out
jb
pop
insl
push
stos
dec
inc
jo
sub
adc
mov
dec
int3
dec
jns
xor
xchg
insb
leave
loopne
mulb
in
daa
sub
aas
inc
fists
bound
and
jg
in
loope
push
jg
mov
jl
mov
jno
lods
add
sub
sbb
cmp
movsl
cmp
inc
dec
fnstcw
pop
daa
sbb
or
jo,pt
or
jecxz
add
cltd
cld
xor
pop
stos
lret
pop
jge
fidivrs
daa
call
je
or
cli
mov
jp
gs
push
cwtl
ror
mov
push
imul
xor
inc
push
add
outsl
adc
adc
mov
jl
aas
test
adc
pop
ljmp
xor
pop
pop
outsl
repz
movsb
inc
mov
cli
int3
add
orb
push
push
fwait
mov
out
xor
test
add
iret
mov
pop
shl
cli
push
mov
pusha
xchg
movsl
dec
or
stos
shrb
and
inc
clc
push
cmp
push
push
cmpsl
sub
data16
push
enter
push
stos
jle
sahf
bound
fs
pop
loopne
cltd
inc
adc
jmp
mov
es
dec
fdivrs
movsl
inc
lock
lcall
cli
addr16
int3
jg
jle
loopne
arpl
xor
pop
xor
mov
testb
push
rcll
shll
pop
pop
sbb
dec
and
nop
xchg
xchg
ljmp
jecxz
fnstsw
stos
orl
notb
dec
cli
sub
jo
shl
sbb
dec
inc
aaa
push
push
mov
inc
fs
hlt
adc
jae
lock
cmpsl
lret
and
call
inc
push
xor
xor
in
jmp
push
push
out
or
fistl
fwait
addr16
repz
mov
in
dec
and
adc
clc
and
cwtl
ficompl
out
sub
addl
fwait
stos
je
pusha
ljmp
test
out
scas
lds
pop
aaa
lret
jne
in
idivb
xchg
mov
xchg
aam
cmpsb
in
int
and
ret
sub
lods
push
imul
lahf
hlt
pop
lea
cmp
test
enter
dec
inc
orl
repz
scas
pop
mov
dec
popf
add
mov
pusha
and
dec
rcrl
clc
cmpsl
jmp
sbb
jo
add
cltd
ret
lds
pop
imull
xchg
inc
repnz
std
mov
pop
dec
cs
xchg
and
pop
pop
sbb
mov
lock
jmp
push
scas
sbb
pop
push
pop
mov
adc
inc
leave
jg
push
dec
mov
mov
lret
xor
gs
push
rcr
scas
mov
pop
jg
adc
leave
inc
mov
test
sarb
sbb
nop
push
mov
fs
mov
mov
insl
fidivl
pop
hlt
mov
and
ret
push
push
dec
push
inc
and
je
and
mov
in
mov
sub
add
jmp
push
and
jle
mov
testb
aaa
lcall
test
cmp
jbe
out
test
adc
int
jo
lahf
mov
pop
jnp
in
cmp
xchg
xchg
fildll
jae
or
mov
inc
test
stc
xchg
sbb
dec
cmp
nop
sbb
and
adc
push
movsl
dec
ret
pop
jg
xchg
jle
es
xor
mov
lcall
lods
pop
push
sub
inc
aad
aam
pop
decb
jne
or
pop
jbe
in
addr16
mov
mov
jne
jmp
push
insb
mov
repz
int3
mov
movsl
inc
mov
stos
stos
test
sub
rcrb
mov
jno
das
inc
dec
adcl
fsubl
dec
iret
push
fsub
roll
insb
lret
insb
sub
lret
or
fsubl
in
jbe
bound
adc
xor
mov
sti
popf
ja
or
es
jno
lea
in
sub
test
loop
fcompl
inc
mov
push
dec
insb
pop
cmc
mov
aaa
test
pop
pop
lahf
arpl
clc
jnp
loopne
mov
rol
leave
mov
outsb
bound
jp
xchg
int
jb
roll
or
or
jl
inc
xchg
out
rol
adc
clc
jbe
jle
or
fwait
adc
cld
test
sub
jbe
fildll
loopne
jnp
sbb
lods
xor
sarb
fcmovu
adc
push
mov
in
adc
push
adc
xchg
scas
jnp
lods
js
xchg
push
jl
dec
rorl
and
or
push
mov
mov
jb
push
cwtl
orl
mov
movb
and
or
call
jg
loop
xchg
ss
mov
add
call
cltd
repz
outsb
lcall
rcrb
inc
jae
pop
fs
push
outsb
push
shll
dec
ljmp
or
push
int3
xor
or
outsl
ss
mov
jecxz
ficoms
xchg
out
jns
add
inc
in
in
sahf
js
dec
divps
jns
cmp
pop
lahf
insb
xlat
into
pop
cmp
push
jle
test
pop
ja
lods
test
mov
mov
push
movsb
pop
mov
cli
push
or
insl
cld
rclb
xchg
adc
fsubr
push
push
ljmp
add
mov
inc
inc
cmc
mov
es
dec
fdivl
sar
inc
fistpl
push
lods
xchg
popf
in
push
pop
mov
push
mov
dec
adc
inc
pop
xchg
shr
sbb
aaa
and
push
sbb
stc
inc
jns
icebp
xchg
bound
sbb
mov
lahf
and
jp
cwtl
test
and
sti
stc
std
jne
movsl
popa
popa
adc
pop
inc
test
ret
pop
aaa
jecxz
pusha
sarb
inc
jns
nop
addr16
je
roll
insb
pop
repz
push
gs
push
sub
jo
pop
adc
cmpb
sub
jno
xchg
or
repnz
xor
adc
popf
pop
stc
mov
in
arpl
insb
sbb
ret
testl
enter
loopne
dec
mov
fnstenv
xor
jg
gs
in
js
sbb
xor
in
mov
push
in
repnz
popa
stos
scas
roll
xchg
in
or
mov
lahf
mov
inc
pushf
ret
mov
adc
jnp
dec
daa
mov
mov
sbb
inc
mov
in
ror
sub
movsb
and
push
dec
sbb
mov
imul
dec
iret
movswl
out
out
ficompl
scas
or
in
jg
in
test
mov
inc
mov
jno
jmp
int
jnp
das
cmpsw
push
dec
xlat
sbb
dec
fs
call
mov
xchg
iret
jno
loopne
push
out
xor
mov
push
mov
ret
aam
movsl
mov
adc
roll
push
sub
pop
fildl
cli
cmc
lods
rcr
push
mov
les
fsubrs
daa
or
sbb
mov
jnp
pop
jnp
mov
push
pop
inc
inc
fwait
jmp
adc
cmp
fnstenv
pop
ja
adc
or
pop
xchg
xlat
aas
add
push
stos
adc
stos
in
cmpsl
cmp
xchg
xor
popa
sarb
pop
mov
jb
inc
xchg
or
addb
push
int3
mov
cmp
pushf
jo
pcmpgtd
je
fimuls
iret
sub
stos
sti
mov
and
bound
in
test
popf
mov
adc
lcall
or
stos
imull
lcall
sub
add
inc
ja
cltd
mov
lods
mov
out
inc
mov
and
xor
mov
in
cwtl
sub
dec
cwtl
movl
push
jne
bound
xlat
mov
mov
mov
test
ljmp
pop
repnz
cwtl
lret
jne
ljmp
push
lock
mov
add
push
xor
lret
and
jo
pop
call
mov
jnp
ret
push
les
dec
cli
icebp
mov
mov
adc
cmp
cmpb
mov
fs
fcmovne
push
jno
cwtl
ret
sub
iret
jecxz
mov
pop
or
sbb
or
out
sbb
jg
out
and
es
incl
sbb
jle
mov
test
and
mov
or
punpcklbw
das
ja
jno
mov
addb
aaa
add
adc
and
pop
sbb
jne
xor
pop
lea
xchg
jo
cmpsl
ss
adc
lea
inc
mov
cmp
xor
pusha
xchg
jl
loope
sti
inc
xor
rcll
jmp
mov
mov
cmc
lods
adc
jg
cmp
pop
xor
and
jo
movl
sub
or
sub
mov
aad
enter
dec
xchg
sub
dec
stos
sbbb
mov
movsb
repnz
pop
sub
dec
jnp
inc
mov
xorb
add
loop
addb
fmulp
cmp
repz
mov
jnp
imul
mov
cmp
out
xchg
add
subl
sub
divb
sarl
testb
pop
cmp
scas
jno
adc
push
inc
fisttpll
push
mov
add
out
movsb
xor
nop
aaa
scas
js
daa
fwait
scas
sbbb
push
cld
jo
test
sahf
jns
insl
orl
ljmp
outsb
aad
pop
aaa
sar
sahf
xchg
stc
pusha
repnz
cld
pop
dec
pushf
jge
ret
clc
insl
ret
mov
push
jge
push
fdivl
mov
mov
lock
loop
or
in
test
sub
cwtl
dec
or
jmp
mov
mov
cmp
jo
and
popf
nop
dec
out
inc
or
addr16
daa
jecxz
push
loopne
or
push
hlt
jno
and
xor
add
loop
push
mov
scas
xor
sahf
adc
and
clc
mov
mov
ret
je
push
fdecstp
aaa
std
lahf
call
sbb
loop
in
sti
adc
test
sub
into
daa
dec
test
dec
scas
mov
mov
loop
fwait
mov
cld
pop
sti
dec
pop
jmp
sub
mov
fisubrs
rolb
pop
testb
jnp
les
or
cmp
sub
ret
mov
and
lcall
addr16
out
int
lods
repz
xchg
jne
and
and
mov
pusha
in
xchg
push
sbb
ror
xor
pusha
adc
mov
jecxz
or
neg
cmpsb
xchg
mov
jg
addr16
lods
mov
fistpl
dec
pop
xchg
lock
dec
push
push
mov
mov
repz
and
test
sbb
mov
enter
testl
push
out
mov
andb
je
fisttps
mov
pop
bound
or
icebp
pushf
and
cltd
data16
push
jl
push
lcall
lcall
ret
pop
inc
mov
or
fstps
fcomp
aad
and
lret
push
addr16
sub
or
pusha
sub
lods
push
mov
test
fisubs
gs
scas
pop
inc
popf
in
into
into
data16
mov
cltd
fs
mov
or
shrl
pop
cmp
dec
in
bound
imul
dec
shlb
jp
decl
fisttpll
inc
repz
adc
fcmovnb
sar
dec
aaa
aam
test
out
pop
cmc
lret
mov
and
sbb
loopne
sti
dec
add
testb
in
sti
and
mov
jecxz
idivb
xlat
scas
inc
adcl
cwtl
ret
lods
loopne
adc
pop
sbb
push
clc
jno
movsl
jns
mov
pop
iret
inc
mull
fadds
dec
jno
cmp
sub
push
sbb
andl
cmp
adc
or
add
das
xor
pop
pop
pop
adc
mov
sbb
add
mov
xchg
in
enter
into
add
jle
sub
cmc
cmp
arpl
loopne
and
jb
and
mov
cld
cmpsl
test
mov
inc
pop
mov
lods
jne
aas
out
push
out
dec
push
movsl
and
mov
and
sbb
loopne
cmp
mov
pop
leave
or
repnz
or
add
push
notl
cmp
pop
add
xor
popa
inc
into
xchg
push
jns
dec
imul
test
inc
dec
jo
or
icebp
mov
xor
push
mov
ret
fsubr
stc
pop
repnz
jb
lret
mov
cld
das
mov
test
push
enter
sbb
pop
adc
push
test
sub
xchg
pop
mov
iret
dec
std
mov
fldl
mov
inc
cmp
push
sub
insl
jno
push
mov
inc
testl
clc
fwait
cmc
das
pop
dec
std
pop
jg
call
lret
sub
ss
lret
cmp
mov
mov
sub
xchg
shrl
cwtl
inc
sub
adc
fisubrs
fidivrs
arpl
pop
je
pop
shll
scas
lcall
jo
testl
icebp
jb
in
xor
cmp
mov
in
add
and
and
imul
lea
dec
and
pop
fcmovbe
xchg
and
dec
stos
add
mov
xor
jnp
movsl
inc
addl
sub
bound
xlat
cmp
inc
xor
enter
int3
jle
aas
in
sub
xor
mov
scas
xchg
xchg
adcl
jb
std
mov
push
sahf
cmp
add
lahf
xor
adc
ret
or
les
and
addr16
shll
stc
dec
xchg
fistpll
jno
int
lock
mov
mov
je
ror
mov
outsl
out
and
ljmp
sbb
addr16
scas
mov
mov
jno
sub
js
ljmp
fs
loopne
lods
mov
dec
pop
xor
inc
add
aad
xlat
adc
int3
mov
inc
cwtl
mov
js
add
lret
add
insl
hlt
add
lods
hlt
in
les
in
data16
ds
xchg
jmp
into
pop
push
sub
stc
inc
js,pt
mov
adc
scas
jae
cmp
lds
out
fsub
push
testb
fwait
div
pop
outsb
jno
and
sub
fsubl
mov
xchg
cmp
sub
scas
scas
jns
jne
adc
jl
xor
ljmp
mov
mov
jecxz
dec
mov
dec
jno
mov
outsl
or
movsb
sub
and
pop
in
pop
inc
loope
sarb
and
sbb
add
aam
movsb
je
mov
imul
cmc
ljmp
or
mov
add
int3
leave
and
sub
or
xor
jo
sub
jbe
loope
mov
std
mov
fbld
fstpl
loope
jae
dec
shrb
out
dec
dec
mov
ljmp
sub
sbb
mov
sbb
adc
sub
fcmovbe
push
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
mov
addr16
lahf
sbb
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
outsb
std
test
sbb
fildl
push
imul
into
imul
push
jnp
sbbl
jmp
push
ret
push
sbb
dec
stos
mov
add
out
xor
push
pop
mov
addr16
push
addr16
into
mov
jae
adc
bnd
loope
sbb
inc
add
push
nop
jg
xorl
movsb
sub
rcrl
pop
cwtl
jo
dec
cmc
pop
mov
jae
adc
repz
add
or
push
lahf
test
pop
aas
jg
inc
mov
and
lods
or
and
adcl
mov
sbb
pusha
loop
inc
jne
repnz
das
loop
add
mov
fs
imul
add
mov
addr16
pusha
loop
adc
pop
mov
addr16
gs
add
mov
gs
pusha
out
add
mov
pushw
pusha
loop
add
mov
mov
sbb
test
add
sbb
pusha
loop
add
mov
addr16
pusha
repnz
mov
addr16
xchg
add
mov
addr16
sub
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
sub
cmp
insl
mov
sbb
imul
adc
mov
arpl
pusha
mov
inc
inc
or
sbb
inc
loop
loop
cs
call
add
add
fstpl
addr16
fs
add
mov
addr16
pusha
ret
xchg
pop
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
addr16
pusha
loop
add
mov
or
jne
mov
push
jo
iret
mov
icebp
cwtl
imul
sar
add
je
fldl
xor
in
test
out
inc
xor
stos
test
rol
inc
lods
sub
sti
sub
out
std
mov
jnp
xor
xor
mov
mov
lea
cld
call
sub
xchg
notl
jl
rcrb
mov
je
sub
pop
enter
dec
dec
push
call
test
loop
ss
ficoml
dec
add
popf
push
jg
or
xchg
loope
or
int3
mov
into
jge
ja
push
in
mov
subl
mov
mov
hlt
jnp
dec
mov
sub
and
push
cltd
cmp
mov
push
jmp
stos
mov
test
testb
loope
push
mov
xchg
sbb
inc
inc
cmpsb
das
int3
inc
push
xchg
outsb
sbb
sbb
or
rorb
jmp
cli
ret
inc
cmpsl
xor
push
pushf
imul
xlat
mov
adc
jmp
movsl
and
and
xchg
push
in
int
movsl
out
push
nop
sub
mov
js
movsb
scas
sbb
scas
xor
inc
sbb
outsb
std
sub
bound
cmp
std
jp
fdivrp
dec
xor
outsb
imul
repz
adc
ljmp
rolb
aas
cmpsl
xor
or
inc
adc
mov
jne
out
mov
iret
mov
loopne
xchg
or
sbb
inc
mov
jmp
dec
adc
cli
adc
mov
rcrl
rol
mov
adc
int3
inc
scas
ficompl
ds
lahf
stc
xchg
outsl
stc
push
pusha
out
ficompl
pop
aam
adc
push
rcrb
xchg
push
mov
je
aaa
xor
pop
iret
lods
jnp
pop
or
mov
insb
mov
cltd
and
adc
mov
mov
iret
pop
mov
mov
outsl
jmp
sbb
daa
xor
mov
push
roll
es
aas
movsb
inc
adc
cltd
inc
lret
and
xlat
das
mov
mov
decb
add
cltd
repnz
mov
xchg
enter
data16
pop
inc
cmp
xchg
pop
addb
test
enter
add
nop
gs
and
adc
sbbl
mov
mov
or
jo
out
push
test
adc
cmp
mov
cmc
push
cwtl
mov
popfw
icebp
sub
pop
mov
pop
push
out
pop
pop
sbb
add
or
mov
sbb
fsubl
outsl
xor
adc
mov
and
rcrl
push
clc
mov
pusha
dec
js
mov
add
cmp
adc
add
stos
mov
ficoms
ja
int3
inc
lahf
and
push
xchg
int3
jl
jl
push
fists
adc
sahf
into
xchg
xchg
mov
rorl
fsubs
adc
xchg
in
inc
or
imul
inc
sub
xchg
test
jmp
lods
sbb
mov
std
sub
hlt
iret
shl
dec
hlt
inc
push
fisttpl
dec
cmpl
mov
jnp
fsts
arpl
std
mov
hlt
lea
xchg
pop
test
push
out
call
adcb
cli
pop
stos
stos
ret
pop
push
pop
dec
mov
inc
and
bound
je
mov
int
jecxz
or
cmpl
popf
insl
ret
jns
xchg
lret
dec
scas
pushf
push
cmp
xor
mov
inc
push
loop
mov
add
mov
jmp
sahf
clc
jl
js
not
shrb
xor
dec
in
dec
xchg
cmp
insb
sub
stc
and
in
pop
jno
push
sti
shrl
or
mov
or
dec
into
int
mov
pop
aaa
and
lock
xor
movsl
sbb
dec
or
jp
pop
repz
es
cmp
enter
jmp
dec
cmp
sub
sub
mov
fstl
ret
dec
mov
sbb
hlt
popf
imul
xor
pop
frstor
divb
loop
jecxz
jge
ljmp
into
mov
sub
test
pop
sbb
jp
fadds
jmp
rcl
aaa
jb
sbb
out
jb
cmp
xchg
xor
loopne
adc
pop
test
data16
dec
es
or
inc
or
xor
aam
or
inc
mov
pop
mov
into
out
xchg
dec
pop
adc
jmp
jg
and
push
sub
cltd
test
pop
lret
xor
enter
push
xor
mov
add
add
dec
and
and
jb
cmp
add
pop
mov
mov
lds
mov
sbb
mov
outsb
sub
mov
and
jne
addb
test
imul
fisttpll
outsb
icebp
pusha
jnp
mov
add
sbb
loop
scas
jle
jae
pop
adc
xor
call
inc
test
and
sub
jge
jo
or
cltd
lds
testl
adc
mov
in
rol
testb
paddusw
inc
lret
xchg
cmc
jle
pop
adc
and
xchg
inc
sbb
mov
xchg
loop
data16
mov
dec
xor
xor
cmp
inc
sub
shr
cmc
push
in
mov
js
inc
out
stc
gs
jbe
scas
dec
jno
jnp
or
pop
add
and
jp
cmp
out
cli
jmp
push
xor
pop
jno
cmp
clc
xlat
pop
xor
jbe
mov
xor
mov
dec
xlat
test
rorb
mul
jne
ljmp
jge
les
cltd
push
pop
leave
push
rcl
add
jbe
sti
sbb
lea
loope
jl
cmp
std
andl
xchg
mov
loopne
mov
andb
mov
push
enter
call
stos
mov
sub
pop
loop
test
nop
sbb
add
cmpsl
ret
push
mov
ss
insl
in
mov
rcrb
and
xchg
mov
pop
inc
bound
je
add
fimull
fcompl
in
out
pop
data16
call
jl
test
loop
loop
data16
les
mov
daa
aas
or
enter
in
sbb
lock
mov
sbbl
movsb
lcall
push
jnp
lret
loope
xor
inc
out
mov
mov
xchg
inc
jae
in
pop
push
or
cmp
mov
cmp
sub
ja
push
movsl
shrb
out
in
cmp
call
or
cmc
fstpl
imul
scas
jnp
out
loopne
mov
xchg
mov
fdiv
jl
add
data16
sahf
sahf
xchg
jns
js
xor
or
or
fcmovnbe
xchg
movaps
mov
shll
scas
inc
cmp
out
pushf
andnps
and
cmpsb
sbb
jmp
mov
in
les
sub
jne
add
dec
les
xor
dec
or
popl
cmc
int3
stos
xchg
add
cmp
and
inc
ss
xchg
loope
inc
int3
dec
in
push
cld
mov
ret
add
daa
lea
lds
mov
pop
mov
popf
adc
mov
bnd
clc
test
mov
mov
sbb
pop
inc
jo
adc
mov
and
xchg
xchg
aas
fcmovb
lods
or
pop
shll
bound
or
ljmp
mov
pop
je
gs
int
arpl
ss
inc
jmp
ds
mov
pushf
mov
xor
call
adc
repnz
mov
fs
or
dec
daa
loopne
add
jmp
roll
out
aam
add
and
push
gs
xor
mov
icebp
sbb
shrb
rclb
xor
lea
cmpsl
jge
mov
stos
out
ja
adc
adc
nop
dec
out
loope
fsub
add
out
mov
mov
jp
jns
mov
insl
mov
and
add
aam
popa
add
sub
jo
je
test
sub
fiaddl
mov
ret
lock
sbbb
xorb
or
das
xchg
pop
sbb
jl
or
aas
fdivl
xchg
mov
shlb
add
aaa
and
cs
xchg
fsubrs
pop
mov
inc
xchg
push
int3
mov
push
jns
mov
das
mov
xchg
leave
sbb
jns
in
sub
xor
fwait
dec
cmpsl
mov
gs
cld
jl
sti
xor
mov
inc
mov
repz
repz
pop
sbb
pop
cmp
sbb
push
cs
inc
jg
imul
add
cli
push
addl
cmc
xor
adc
pop
jne
cwtl
jge
push
or
fdivr
inc
data16
inc
pop
ljmp
lock
push
inc
cs
pushf
icebp
push
rcr
cltd
mov
dec
cmp
sub
lds
cmpl
dec
sbb
jp
call
mov
inc
loop
in
pop
hlt
test
movsb
mov
cmp
fstps
es
loop
xor
push
ja
jo
roll
sbb
fcomps
in
inc
jno
out
add
sub
cli
dec
loope
fdivp
pop
pusha
push
and
xor
nop
pop
push
aad
push
or
mov
addb
lcall
aaa
xor
add
and
pop
lds
push
mov
push
jns
mov
decl
sahf
sarb
add
jno
addr16
jg
call
test
jbe
fsubrs
lds
jecxz
iret
sti
daa
push
adc
pop
mov
and
push
dec
fmuls
pusha
sbb
nop
popf
out
xchg
cmpsb
xchg
pop
xchg
repnz
gs
sbb
or
out
or
mov
sbb
jne
sbb
xchg
mov
xchg
lds
ficoms
mov
xchg
scas
test
fs
sub
mov
xchg
mov
jno
lret
js
jo
cmpsl
jecxz
adc
stos
dec
pop
add
imul
pop
cmp
jmp
cmp
fidivrl
fs
mov
in
cltd
arpl
mov
add
xchg
repnz
les
call
push
push
jecxz
and
or
xchg
jecxz
lock
dec
adc
rcr
xchg
pop
dec
jecxz
xor
mov
out
jae
sub
xchg
xchg
fiadds
xchg
pop
fcmovne
xor
scas
and
xchg
xchg
shlb
es
add
sahf
fs
adc
leave
aam
mov
testb
jmp
pop
mov
fstps
push
std
inc
add
repz
shlb
repz
mov
lods
int
inc
test
adc
pushf
orb
shl
dec
adc
cmpsl
lahf
scas
jge
insl
cmpsb
std
fs
movsb
cmp
mov
sbb
dec
dec
lea
dec
adc
lods
shrl
test
adc
or
add
es
int
stc
jo
xor
inc
sahf
cmpsb
mov
test
ds
sub
cmp
out
cmpsl
icebp
in
imul
loope
pusha
inc
insb
pop
jecxz
test
rclb
sbb
scas
jns
orl
cmc
jnp
jmp
inc
leave
cld
jae
jae
mov
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
