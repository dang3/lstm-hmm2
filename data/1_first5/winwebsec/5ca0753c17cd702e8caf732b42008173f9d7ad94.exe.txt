inc
inc
pop
push
out
fildl
scas
in
movsb
jecxz
sbb
cmp
scas
hlt
fcomip
mov
sub
cs
mov
mov
aaa
dec
das
mov
add
jne
fidivrs
sahf
add
js
imul
js
mov
inc
aad
mov
mov
mov
push
jno
and
or
dec
pop
cmp
inc
pushf
dec
ss
pushf
jmp
sbb
jge
add
out
jp
ds
push
mov
cli
movsb
fidivl
dec
jae
jns
inc
pop
pop
in
es
mov
iret
aam
fistpl
xor
js
andb
cwtl
ja
inc
pusha
lds
jge
adc
add
push
je
aam
mov
push
adc
sbb
mov
test
leave
out
and
imul
dec
lods
in
xchg
fimuls
lret
lret
loope
pop
out
mov
repnz
jo
fldenv
xor
in
xchg
xor
inc
inc
fnstsw
dec
fs
inc
pop
lea
inc
lret
mov
mov
ret
jbe
mov
jle
inc
addl
and
aas
out
js
xor
pop
xor
add
jmp
ja
fsubs
xor
xor
and
cmp
cwtl
jo
or
adc
xchg
pop
das
stc
testb
sahf
inc
sub
cmp
add
push
dec
push
fs
or
lods
push
int
ljmp
or
fs
sub
xchg
xchg
out
insl
add
int
sarl
ljmp
mov
pop
sbb
mov
fcmovu
and
pop
inc
jns
scas
divb
ljmp
mov
aad
sbb
sbb
rcrl
mov
fldenv
jle
mov
icebp
dec
sbbb
pop
bound
lahf
scas
sbb
sahf
sub
into
int
repz
inc
les
push
xchg
lock
sub
fwait
dec
cmp
push
ljmp
outsb
cmp
add
stos
xor
cmc
popl
dec
fwait
sub
mov
xchg
sub
push
sub
cltd
in
xchg
iret
std
adc
add
and
movsb
lods
test
push
mov
pushl
fistpl
fwait
push
mov
lods
xor
fldt
mov
lret
testl
sahf
inc
notl
xor
dec
and
cwtl
push
sbb
xchg
push
das
repz
scas
out
xor
pop
fs
cmp
dec
hlt
push
cltd
cmp
aam
mov
call
rcrl
bnd
les
adc
and
aad
movsb
and
flds
mov
je
push
pop
jmp
and
cld
fwait
or
mov
sbb
es
push
subb
xchg
xchg
add
xchg
and
push
je
jno
outsb
cmpsl
loop
mov
or
incb
rep
iret
xor
cmc
xor
testb
lds
xchg
mov
std
bound
fwait
jo
loope
cmp
aad
sbb
push
cmp
nop
pop
fadd
xchg
pop
add
cmp
outsb
or
mov
vpavgw
add
std
lock
push
sub
sub
mov
pop
jne
paddd
jnp
and
mov
nop
jns
rclb
push
popl
lcall
test
int3
inc
div
add
add
jg
inc
jle
in
dec
in
loop
push
add
and
fadd
adc
add
jmp
sbb
repnz
outsl
pushf
dec
dec
ret
shll
out
ret
dec
fdivrs
mov
in
mov
add
inc
add
fs
imul
rcll
imul
dec
or
cs
lret
mov
std
lock
dec
mov
movsl
loop
pop
cld
std
pop
out
out
pushf
loope
xchg
jmp
insl
or
lods
pop
mov
adc
lcall
loopne
inc
nop
pop
cmpsb
ret
out
jge
pop
mov
mov
dec
mov
int3
ret
in
fsubr
aas
cmp
mov
cmp
cmpl
inc
or
xor
les
and
push
aad
testb
jecxz
rorw
mov
xchg
xchg
adc
mov
jns
push
cmpsb
and
mov
mov
call
jb
addr16
mov
imul
aaa
fsts
mov
sub
cmpsb
jle
dec
int3
dec
jge
add
mov
enter
xor
imull
xchg
and
xchg
js
and
and
rcll
addr16
cli
mov
lods
xchg
mov
jne
xchg
sub
mov
jge
push
cld
addb
out
sarb
mov
cltd
push
adc
fcomps
mov
out
mov
int3
rorl
clc
es
and
jle
insb
jns
jle
in
sbb
inc
push
mov
ret
popf
inc
add
jge
mov
fimuls
xor
mov
fcmovu
sarl
pop
sahf
aas
loopne
faddp
out
inc
test
cmp
mov
aaa
icebp
loop
add
repnz
mov
mov
mov
ljmp
inc
and
dec
insb
mov
cmpsl
pop
data16
enter
push
cmpsb
dec
insb
dec
insl
inc
sbbl
fadds
hlt
jb
test
sbb
stos
mov
loop
pusha
loope
into
out
js
jns
mov
in
or
sahf
adc
sbb
dec
jl
pop
lahf
dec
les
fsubs
adc
dec
cmp
lahf
jg
fdivrs
pop
aad
imul
mov
mov
cltd
sbb
roll
pop
imul
dec
xchg
and
aad
ja
or
dec
lods
mov
mov
addr16
jp
inc
test
dec
lahf
mov
lcall
cmp
cmpsl
cld
or
fadds
fisttpl
lcall
or
adc
mov
sub
cmp
sbbl
adc
and
add
test
in
mov
inc
insb
js
push
shll
mov
pop
mov
int3
rcl
adc
sbb
pop
stos
addb
int3
add
add
xchg
mov
push
and
scas
push
ja
mov
xchg
int3
and
cli
cltd
test
dec
push
ds
inc
jb
xchg
xor
lahf
add
aam
ror
mov
adc
dec
xchg
mov
and
roll
mov
outsb
jmp
and
sbb
or
inc
sbb
into
cwtl
faddl
push
decb
fcoms
push
cld
cmpsb
loope
cmpb
and
sti
loopne
jl
in
sbb
repnz
addr16
cltd
call
shlb
aaa
adc
fists
cwtl
cltd
jg
int3
adc
test
sbb
inc
stos
xor
add
lds
mov
and
movsl
ljmpw
cmp
or
dec
daa
es
mov
dec
dec
sbb
movsb
test
imul
sub
mov
sbb
pop
test
ret
push
adc
test
mov
int
ljmp
adc
scas
cmp
mov
push
test
xor
jne
into
xchg
and
out
mov
lcall
lods
sub
pop
shrl
add
push
pop
and
dec
mov
sbb
cmpb
bound
test
movsb
lock
sub
int
inc
cwtl
cmp
arpl
jge
xor
add
jecxz
or
adc
and
cmp
sbb
inc
int3
fs
inc
scas
cmp
push
shrb
push
add
inc
dec
push
test
les
push
into
jge
clc
test
hlt
add
repnz
pop
xorb
push
int
ds
xorb
iret
inc
clc
sub
lods
movsl
add
cmp
sub
add
mov
hlt
sbb
xchg
je
xchg
xor
cld
push
fdivrl
pop
mov
mov
sub
jecxz
dec
ret
dec
mov
fisubl
fidivrl
or
add
cld
push
xor
hlt
lea
inc
clc
jmp
icebp
ljmp
mov
cmp
mov
dec
cwtl
iret
loop
mov
inc
pushf
out
fidivs
mov
dec
andb
insl
data16
mov
xchg
xchg
or
jbe
jbe
inc
or
mov
cmp
pop
loope
outsl
pop
adc
imul
mov
ret
rcrl
sti
jp
je
fwait
testb
mov
inc
xor
inc
mov
jp
jmp
lea
mov
aas
lock
insl
stos
out
lcall
stos
imul
push
incb
test
stos
fsub
or
fucom
repnz
mov
movsl
cltd
pushf
mov
imul
std
jnp
dec
ljmp
in
cmp
std
js
int3
cmp
and
filds
cltd
sbb
or
shrb
inc
add
test
test
flds
dec
int
sti
mov
imul
push
outsl
mov
test
or
imull
enter
cmp
les
testb
xor
dec
pop
popf
jp
cli
push
mov
lret
xchg
fisubl
ja
adc
xlat
jmp
push
dec
inc
stos
push
mov
mov
push
call
scas
in
popa
cvtpi2ps
es
cmpsb
lods
mov
mov
sbb
inc
iret
add
mov
cmp
sub
sarl
iret
clc
and
xor
fstpt
sbb
mov
sbb
and
imul
jle
and
pop
push
imul
test
xlat
pop
pop
fwait
pushf
push
jnp
xor
cmp
movsb
push
ja
and
xchg
jge
xor
pushf
or
stos
add
fiadds
sub
dec
lods
daa
mov
cmp
stos
push
loope
mov
mov
ds
insl
movsl
pusha
loope
mov
add
pop
or
aas
leave
sbb
push
shrb
aas
clc
xor
gs
jae
shlb
lahf
mov
leave
xchg
shlb
sarb
jns
cmp
fdivr
jl
mov
mov
rorb
xor
pop
jo
ja
pop
dec
into
sub
or
cmp
pop
and
dec
leave
ror
movzwl
sbb
or
and
mov
ror
jle
fdiv
cmc
sbb
push
xor
rclb
imul
in
sbb
pushl
popa
sahf
leave
imul
aaa
les
jl
lret
adc
push
mov
mov
sbb
cli
notb
jmp
inc
jnp
insl
idiv
and
arpl
in
xor
loopne
lods
ja
pop
and
ret
out
pop
gs
jge
enter
pop
imul
loopne
ret
sbbl
mov
add
testl
sbb
push
mov
mov
lock
jp
ds
sub
pop
xor
aam
fbstp
and
push
divl
xlat
por
add
dec
add
or
fiadds
mov
mov
cld
xor
rorb
pushf
sbb
out
repz
jmp
aad
movsl
pop
pop
mov
test
out
leave
nop
sub
pop
test
jge
add
je
dec
sbb
gs
sub
fsubl
in
cmp
imul
push
cmp
sbb
outsl
mov
cmp
sbb
and
cmp
push
sahf
shrl
das
rsm
int3
xor
out
add
negb
jge
leave
cld
cmpsb
fbstp
stos
adc
cmpsl
sahf
arpl
dec
push
push
adc
jne
dec
scas
out
xchg
lret
mov
xor
fisttpl
cs
lcall
add
loopne
stos
jge
rcrb
xor
mov
in
test
mov
jb
xor
adc
addb
mov
mov
push
mov
scas
fwait
sahf
pop
pusha
jl
fildl
sub
pop
dec
ret
push
imul
les
pushf
loop
jp
loop
or
pusha
sub
aas
pop
adc
xor
push
jb
mov
mov
mov
xor
push
imul
and
iret
cmp
mov
ds
es
sbb
stos
dec
in
jecxz
js
aam
setg
ljmp
xor
cltd
mov
mov
lcall
sub
int
in
jp
mov
jo
stos
and
sti
cltd
fdivs
adc
test
rorl
pop
mov
ljmp
cltd
sbb
push
mov
push
lock
icebp
mov
jle
cmp
aas
cld
and
inc
mov
xchg
pop
movsl
dec
jno
cmc
sbb
sbb
shl
shl
movsb
pop
pop
xchg
mov
clc
pusha
or
imul
cmovns
imull
dec
les
xchg
pop
rolb
std
aam
daa
scas
test
cmp
adc
mulb
add
adc
loop
push
mov
dec
data16
shlb
dec
push
lds
loop
test
push
sbb
xor
jns
rcrl
lret
fbld
pop
inc
scas
std
dec
lds
adc
mov
and
lcall
jl
insb
mov
in
push
push
adc
mul
mov
mov
out
popa
sub
pushf
sbbb
lret
aad
xlat
adc
pop
mov
pop
adc
daa
mov
dec
xor
jno
lcall
sar
mov
xchg
cwtl
xchg
dec
adc
jge
int3
ljmp
jae
pop
dec
divb
dec
popf
fldl2e
pop
rorl
adc
lea
push
les
aas
mov
test
adc
push
xchg
arpl
add
out
sub
xor
pop
loopne
out
aaa
test
leave
daa
pop
clc
int
cld
sbb
adc
sub
xor
xor
and
insb
fwait
jae
js
cltd
fsubs
inc
push
outsl
ficoms
arpl
test
lea
jmp
std
dec
dec
adc
incl
fistps
sub
and
rorl
dec
pop
repz
jb
inc
clc
test
enter
xor
lahf
add
aaa
aam
hlt
push
out
out
mov
push
dec
pop
mov
and
xchg
push
mov
std
push
gs
push
test
out
mov
or
sub
daa
out
mov
rorb
inc
inc
cld
push
inc
mov
mov
cld
xor
mov
push
rcll
jmp
dec
test
jb
fwait
inc
inc
cli
cmpsb
mov
push
xor
pop
cmpsl
dec
sarb
sub
mov
adc
add
stos
inc
scas
sbb
aad
in
movsb
or
data16
pop
fldt
and
into
inc
enter
aad
ficomps
daa
lret
push
outsl
enter
setno
xchg
mov
bound
inc
mov
rcrb
test
scas
in
cli
rol
ljmp
mov
into
xchg
sti
out
adcb
ret
jp
cmp
add
pop
lcall
or
je
imul
dec
mov
dec
mov
aad
sub
inc
dec
rcl
sub
cmpsl
inc
inc
adc
daa
add
jbe
je
test
xchg
insb
aad
arpl
and
rcrb
test
or
cwtl
adc
arpl
mov
mov
push
mov
pop
mov
test
jnp
rcr
fs
fstp
das
mov
jne
dec
adc
shlb
test
stos
shlb
shl
xchg
mov
jg
mov
fbstp
out
ret
adc
jns
jae
int3
cltd
dec
jge
dec
cltd
cmp
mov
fistps
ficoms
ss
mov
test
push
inc
daa
mov
push
out
mov
in
push
lds
daa
cld
leave
hlt
push
sub
and
rol
aaa
jb
pop
cs
popf
inc
imul
dec
pop
incl
xor
pop
push
fs
jb
sub
jecxz
sbb
pop
jne
mov
xor
jno,pt
out
sub
notb
mov
jg
push
mov
rorl
inc
mov
mov
movsb
rcl
push
pop
fdecstp
scas
and
sar
xchg
repz
xchg
cmp
mov
push
mov
inc
inc
rcrb
divl
cltd
lret
jb
push
cwtl
add
imul
fcoms
push
jecxz
jp
lcall
into
bound
into
fldt
fisubl
inc
lea
or
cmc
orl
cs
sub
call
lock
or
push
aad
stos
jl
sbb
or
and
lea
jae
pop
aas
jbe
outsl
das
inc
or
xchg
insb
dec
bound
lahf
push
inc
das
sub
rcrb
jle
fidivrl
add
adc
dec
sub
xor
jae
gs
mov
je
daa
xchg
push
insb
push
push
jp
inc
pop
mov
fs
sbb
cmpsb
scas
inc
mov
imul
jbe
cmp
scas
das
test
sub
mov
mov
jbe
xchg
xchg
add
out
push
jo
and
inc
mov
mov
and
jge
cwtl
in
out
push
int3
adc
jl
das
cmpsb
xor
outsb
or
jb
xor
call
iret
divb
int
sub
data16
push
add
movsb
sbb
into
mov
enter
movsb
or
or
add
xchg
notl
fsub
fsts
std
mov
sbb
arpl
js
dec
cmpsb
out
aam
cmp
and
sbb
gs
and
in
mov
sub
push
adc
mov
add
xchg
push
jmp
mov
ja
jb
ret
xchg
fnstenv
es
leave
adc
cmpsl
subb
mov
iret
mov
jo
sahf
pop
int3
loope
mov
in
fwait
fs
cmp
push
je
in
lahf
jg
mov
popf
ja
jnp
insl
xchg
popf
mov
icebp
lret
jecxz
ds
dec
fs
popa
xchg
pop
mov
addr16
out
cs
addr16
xchg
ss
xchg
shrl
mov
jno
mov
frstor
adc
in
mov
movsb
pop
fidivrs
pop
ljmp
ds
add
xchg
pusha
jno
sbb
arpl
mov
add
push
sti
pop
lock
push
push
ret
mov
test
shlb
fst
loopne
mov
stc
cmp
mov
add
pop
in
jne
stos
mov
mov
rolb
bound
outsl
sbb
cmp
sbb
sub
push
aad
call
in
jge
cmpsl
cmp
pushf
rcll
js
filds
push
cmp
gs
or
cltd
into
mov
test
sub
repz
cltd
sbb
stos
push
loop
in
push
add
xchg
sub
test
loopne
xlat
cwtl
jg
push
push
loop
jmp
inc
mov
sub
or
adc
jns
push
add
inc
xchg
cmp
aaa
shrb
sti
mov
jl
xchg
jecxz
jge
rcrl
call
dec
in
push
sub
add
add
push
fwait
mov
or
cmpsb
lods
loope
and
pop
xchg
fidivs
es
add
inc
jo
rcrl
adcl
sub
iret
lds
movsb
leave
pushl
adc
stos
inc
add
loop
sbb
jmp
sub
cmp
adc
pop
push
mov
jp
pop
xor
pop
imul
dec
daa
add
ret
in
mov
push
movb
cmc
int3
jge
dec
pop
mov
les
add
push
inc
push
inc
lods
insb
imull
hlt
stos
inc
fidivrs
pusha
loopne
ds
lcall
and
test
and
inc
jne
lret
xchg
mov
js
mov
es
xchg
xchg
sbb
pushl
xor
shlb
xor
pop
aam
aas
sarl
adc
push
and
jl
bound
cld
add
jge
inc
sbb
push
jae
and
rcrb
aad
popa
call
negb
ja
mov
rolb
mov
inc
fs
dec
xchg
adc
push
push
iret
mov
add
cltd
jno
dec
jecxz
xor
out
cmpsl
lret
repnz
int3
std
fcmovbe
fs
dec
call
pop
cmp
shrl
jae
call
cli
inc
and
out
push
push
js
xor
jns
adc
dec
push
in
ss
call
lret
xchg
jae
cltd
cs
jp
pusha
or
mov
add
and
xchg
test
adc
adc
or
jnp
add
push
push
pop
sbbb
pushf
and
push
jge
cmp
stc
lea
scas
xchg
mov
test
shlb
adc
cmp
ss
test
es
rcl
cltd
scas
rolb
inc
leave
clc
test
jne
sahf
loope
clc
push
or
adc
test
aad
int
jns
xchg
mov
sub
fimuls
dec
jmp
cmpsb
fwait
jns,pt
loop
jbe
pop
fwait
stos
sahf
lret
out
xor
lcall
mov
or
les
jno
repz
pop
dec
xlat
dec
jbe
repz
inc
jecxz
pop
test
scas
xor
adc
or
sub
jmp
shlb
mov
ss
ret
pop
inc
cli
dec
cmp
int3
cltd
add
bound
jg
inc
insl
dec
sub
inc
inc
add
pop
sbb
mov
ja
ljmp
mov
clc
or
mov
or
lcall
les
push
iret
inc
add
dec
movsb
out
out
sub
push
aaa
mov
cmp
movsb
test
incb
mov
scas
jae
xchg
loop
xor
and
dec
leave
dec
xchg
mov
mov
xchg
or
mov
dec
lods
insb
out
lret
pop
adc
aad
xor
inc
mov
jl
add
stos
daa
divb
cmp
mov
mov
inc
in
adcl
push
lock
cmp
sbb
mov
mov
jl
divb
lock
inc
mov
ja
andl
out
mov
adc
lahf
in
adc
and
lds
fmull
xor
subl
out
sahf
lcall
gs
fst
pop
imul
inc
pop
jle
inc
shl
addr16
es
std
sbbl
cs
xchg
shll
mov
push
inc
xchg
mov
ljmp
scas
shrb
out
mov
xor
inc
movsl
sbb
pop
imul
push
inc
icebp
inc
rcr
cmc
mov
add
stos
push
add
sar
out
or
aas
sub
lret
test
xor
sbbl
fisubrl
add
cmp
ficoms
xor
sub
and
fiaddl
fdivrl
orb
cli
cs
test
out
jne
jnp
out
mov
in
aaa
lock
stos
mov
movsl
adc
jno
pop
pop
movsl
sbb
int
call
adc
pcmpgtd
inc
fwait
scas
outsb
sbb
push
jecxz
in
push
jmp
inc
scas
adc
sub
sbb
inc
sbb
in
in
pop
icebp
lcall
or
test
adc
rol
aad
ja
cmp
rcr
xchg
push
in
push
fistl
fstps
inc
imul
cmp
adc
lds
sbb
aaa
push
aam
cld
lods
sub
pop
xchg
jae
jb
or
and
push
out
fiadds
inc
and
shl
xchg
inc
das
cmp
pop
arpl
and
inc
jnp
int
pop
dec
dec
sarb
pop
div
cmpsl
sub
int3
in
sti
mov
add
dec
xchg
sbb
inc
in
push
push
mov
lahf
adc
or
xor
mov
dec
mov
xor
popw
push
clc
fstpl
xchg
mov
out
mov
sub
cmc
fildll
cmpsb
outsb
mov
ror
mov
lock
in
sahf
jb
test
sahf
cwtl
out
ds
ss
inc
sahf
lret
sahf
fistpl
cld
loope
test
popf
inc
shll
sbb
bound
lods
es
adc
mov
sub
sbb
inc
mov
es
insl
or
movq
cmp
cltd
jmp
mov
mov
jecxz
fbstp
xchg
out
subl
aam
mov
div
jmp
das
dec
adc
fucom
mov
dec
jb
insl
xor
jp
sub
push
or
sbbl
outsb
in
mov
pop
repnz
inc
xlat
xor
rorb
mov
mov
mov
xchg
adc
lods
dec
mov
or
sarb
fdivr
imul
sahf
jge
sub
out
insl
out
xor
adcl
sub
jle
ficoml
jmp
stos
mov
or
cmp
sbb
mov
pop
daa
aam
arpl
clc
pop
fildl
fmull
xchg
xchg
sbb
or
rcrb
lahf
popf
js
icebp
fidivs
call
mov
sub
repz
inc
out
inc
aad
lcall
cs
dec
or
and
aaa
dec
inc
sbb
sub
pusha
scas
or
dec
inc
push
inc
jne
xchg
es
mov
cmp
sbbl
std
jp
daa
das
mov
lods
push
push
xchg
xchg
jge
push
in
fmulp
push
jae
test
rcrl
je
xacquire
or
out
dec
fisubrs
test
out
mov
add
loope
leave
loopne
mov
shll
mov
imul
je
lretw
inc
ljmp
sub
add
pop
pop
dec
fwait
inc
xchg
sbb
insb
jle
fisttpll
jmp
sbb
inc
loopne
mov
dec
mov
adc
insb
scas
mov
or
dec
ret
xchg
jge
sub
mov
mov
nop
pop
pop
lcall
ret
push
mov
push
rcrb
mov
stc
jmp
insb
inc
insb
std
hlt
aam
cmp
adc
repz
mov
enter
aad
jns
push
int3
inc
movsb
sbb
divb
lret
jle
or
jb
cmpb
in
sbbb
lods
in
arpl
mov
rcr
mov
mov
push
fisttps
xchg
mov
out
into
inc
je
push
jbe
cmc
dec
push
sbb
divl
nop
sbb
mov
insb
or
sub
pop
popl
pop
xor
mov
mov
jle
push
push
push
test
dec
push
lahf
mov
les
push
xor
into
mov
popa
cwtl
mov
mov
lea
sbb
mov
shrb
dec
int3
in
push
mov
fstl
push
mov
adc
icebp
roll
sbb
out
mov
adc
mov
popa
sub
pop
pushf
mov
ds
iret
sahf
dec
and
in
sub
icebp
in
inc
pop
insb
outsb
mov
dec
cltd
pop
sbb
lods
cwtl
popf
adc
lea
jno
pop
popa
popa
and
js
dec
mov
sub
cmp
pop
cmp
inc
cmpsb
jb
jbe
into
or
hlt
mov
xchg
add
sub
loope
je
xchg
xchg
or
test
movsb
or
imul
or
out
inc
xor
jg
and
test
lds
push
cmp
or
mov
jle
lahf
notb
ret
mov
xchg
mov
sbb
bound
xchg
sub
jp
aaa
test
scas
or
jae
sbb
xchg
push
pop
lcall
jg
xor
cwtl
movsl
adc
mov
add
push
cmp
int3
int
sub
adc
cmp
push
xchg
dec
jnp
orb
lods
leave
mov
mov
lea
add
or
mov
fwait
mov
inc
push
stos
sbb
adc
xor
dec
push
cmp
insl
and
rclb
ret
in
or
mov
mov
fs
pop
outsb
cltd
adc
loopne
repz
push
xchg
push
cltd
push
jge
gs
fdivr
inc
lods
mov
aas
outsb
mov
adc
xchg
jle
sub
ret
mov
std
into
hlt
inc
sub
das
sbb
outsl
adc
lods
sbb
in
mov
mov
mov
sbbl
add
mov
pop
push
pusha
xchg
mov
cld
mov
pop
rorl
pop
stc
sub
notl
aas
mov
push
es
mov
cmc
popa
xchg
movsl
mov
jno
sub
mov
outsb
sbb
stos
mov
in
mov
call
dec
sub
fs
fmul
push
addr16
mov
in
repnz
pop
popa
sub
mov
ss
and
aad
and
loopne
fidivl
jl
pop
lods
inc
sub
insl
ds
cmp
cltd
xchg
scas
popf
and
lods
add
xor
and
pop
cltd
mov
flds
test
dec
addb
sbb
test
jl
pop
mov
aad
jbe
add
or
nop
mov
jecxz
js
data16
mov
xchg
xor
ds
jae
adc
in
adcl
aas
jo
ljmp
push
test
rorl
push
push
mov
cmp
pop
push
push
fists
clc
dec
xchg
cwtl
mov
in
fs
push
lock
and
xchg
add
mov
popf
pop
mov
imul
push
sbb
pop
xchg
je
add
push
dec
pusha
sub
push
and
adc
imul
or
sbb
mov
popf
add
push
movsl
insl
roll
std
mov
clc
sub
sbb
dec
xor
sets
iret
dec
pop
xchg
cmpsb
sub
and
mov
pop
push
xchg
scas
cmc
push
movsl
xor
movsb
cmpsb
xchg
inc
in
dec
pop
pop
lea
mov
fs
xor
and
je
sbb
nop
adc
xor
pop
push
ss
adc
xchg
shrl
mov
xor
adc
xchg
and
loope
cmp
xor
in
push
icebp
fwait
and
inc
mov
andl
ret
ss
sbb
in
inc
sti
test
and
or
ret
lods
or
ret
cmc
shl
pop
mov
adc
fstp
aad
data16
mov
cmp
sti
cwtl
cmp
aad
jle
in
ret
sbb
adc
xor
inc
dec
into
insl
mov
and
addr16
repz
insl
jno
mov
or
idivl
push
into
mov
push
sarl
mov
lods
adc
lret
popf
jg
xor
cmpsb
repz
xor
adc
arpl
xor
and
mov
fiadds
nop
pushf
ret
dec
movsl
bound
sbb
rclb
push
jmp
lods
nop
mov
mov
pop
repnz
dec
xchg
jns
pop
jno
pop
mov
cmp
addr16
test
fdivs
insb
bound
push
sub
mov
insb
cmp
push
mov
cli
cmc
push
fsubrs
inc
jb
adc
push
pop
lea
jbe
fisubs
xor
scas
mov
test
and
mov
aaa
insl
adc
decl
jno
mov
jb
jecxz
add
in
inc
fmul
mov
aad
push
mov
jae
sub
inc
lock
out
stos
mov
adc
in
dec
insb
loop
mov
and
xor
mov
ret
ss
pop
add
mov
hlt
push
push
jge
mov
xlat
ljmp
daa
outsb
popf
pop
mov
or
addl
push
inc
dec
sahf
mov
std
sbb
jnp
imul
dec
fistl
loop
fisttpll
movsl
icebp
pusha
xchg
sbb
pop
in
dec
pop
jbe
sub
push
pop
sbb
ret
sbb
outsl
lahf
cmp
movsl
arpl
cmp
add
ror
lret
cmp
jno
in
mov
mov
xchg
xchg
mov
nop
cmp
sbb
int3
pusha
sti
aam
test
dec
inc
adcl
xor
cmpsb
dec
fidivs
or
push
adc
adc
mov
mov
stc
loope
sti
mov
scas
push
mov
ds
les
je
inc
pop
xchg
mov
arpl
sub
rcr
sti
jl
cs
popf
stos
mov
or
js
sbb
pop
sbb
cwtl
pop
cmc
stos
in
jbe
iret
filds
inc
adc
loop
insb
inc
adc
shrl
xchg
mov
and
mov
sub
gs
inc
inc
movb
sbb
cmp
and
pop
mov
pop
rcr
and
adc
add
movl
dec
pop
pop
mov
mov
push
jns
gs
xchg
in
xor
sbb
jae
xchg
push
mov
cltd
lds
jb
lret
jae
data16
call
cmp
cld
stc
fstpl
xlat
xlat
adc
popa
iret
mov
call
popa
mov
and
pushf
jg
mov
push
push
or
into
sub
inc
in
and
sbb
mov
xor
sub
mov
test
es
lahf
in
sar
cmp
push
in
xchg
or
and
gs
pop
fistps
in
mov
jno
bound
pop
out
movsl
call
pop
in
jnp
sub
cld
ficomps
push
xor
repnz
or
lea
ja
cmp
cmp
ljmp
mov
aam
adc
insb
ds
clc
test
movl
mov
pop
dec
addl
cli
mov
and
fnstcw
rorl
xor
jns
push
cwtl
push
and
add
ds
lea
mov
cs
push
fimuls
or
jae
mov
cltd
jae
inc
mov
movsl
ljmp
ss
sbb
add
scas
dec
and
arpl
xchg
push
pushf
ret
mov
shl
pop
aad
cmpsb
fnsave
std
lods
movsb
imul
sbb
test
inc
and
add
xchg
sbb
sbb
mov
add
jne
inc
and
jmp
push
adc
mov
dec
arpl
mov
insb
rcl
sbb
jg
push
add
lds
out
fdivr
in
pop
enter
fldlg2
push
pop
mov
sbb
cmp
xchg
outsb
pop
adc
clc
out
mov
mov
push
sub
subl
ss
jb
lds
jmp
inc
push
xchg
loop
in
mov
mov
popa
push
cmpsb
adc
pop
jg
mov
fs
jmp
xlat
lret
int
in
sbb
test
xlat
and
mov
xor
or
jno
push
pop
or
mov
pop
incl
mov
mov
sbb
sbbb
mov
push
ja
adc
adc
stc
dec
divl
mov
mov
xchg
lds
fwait
rorb
mov
pusha
into
mov
movsl
sub
js
sub
dec
push
lret
push
pop
leave
std
sub
scas
cld
mov
push
mov
xor
cmpsl
popl
sub
enter
adc
adc
gs
fldcw
std
mov
mov
test
mov
add
outsl
xchg
stc
mov
jnp
ror
cmp
jae
adcl
mov
orb
cs
shl
xchg
and
and
mov
addr16
lcall
sub
sahf
icebp
out
aas
mov
mov
adc
sbb
mov
insb
sbb
roll
and
popa
data16
ja
bound
inc
jno
mov
dec
xchg
jb
cli
movsb
push
test
call
sub
mov
subb
mov
jne
cmp
xchg
and
inc
add
xchg
mov
inc
fwait
cwtl
adc
dec
pusha
or
inc
add
sbb
mov
jle
dec
jmp
lret
pushf
iret
int3
mov
and
outsl
imul
mov
pop
add
aad
std
cmp
push
popf
mov
int3
mov
pop
fimull
push
imul
repnz
lret
pop
stos
pop
outsb
inc
fwait
push
jmp
dec
mov
aaa
loop
fiadds
jle
ds
test
lret
jno
orl
and
scas
mov
out
das
xchg
addr16
add
jecxz
mov
xor
roll
call
int
sarb
btcl
addl
bound
sbb
xchg
les
pop
sub
or
out
pop
jne
xor
sahf
out
arpl
gs
sub
dec
fdiv
sbb
aaa
inc
pop
xchg
insl
cmp
jle
mov
fstpl
ja,pn
mov
imul
add
cmp
dec
and
mov
ss
mov
iret
sub
mov
pop
mov
push
mov
xorl
fcmove
js
or
icebp
cmpsl
and
popa
mov
sbb
ds
mov
sbb
sbb
fcoms
jb
fnstenv
stos
pusha
adcl
jne
movsl
lahf
mov
mov
xchg
cwtl
push
add
and
int3
jo
ljmp
fadd
mov
rcrb
cmp
sahf
mov
jb,pt
iret
add
idiv
push
push
lea
cld
adcl
mov
mov
mov
ss
push
jp
daa
test
in
mov
imul
inc
inc
dec
sahf
lahf
les
ss
das
jg
bound
dec
sti
dec
fidivrs
enter
bound
test
dec
pmulhuw
lods
sarb
adc
sub
insb
mov
inc
popf
adc
xor
int
loop
notb
mov
inc
sbb
push
shlb
mov
mov
daa
mov
fsubr
dec
ret
mov
push
pushf
xor
jl
sub
loopne
ret
roll
ja
fwait
mov
mov
fnstenv
loop
sbb
inc
into
add
enter
rol
cmp
mov
int
nop
or
adc
lds
push
mov
sbb
lods
in
jne
mov
push
nop
outsb
mov
fs
lahf
jp
andl
fisubrs
loop
loop
dec
pusha
cld
mov
orl
loop
push
jecxz
inc
shlb
nop
push
in
sti
push
je
pop
cmp
fwait
inc
cmp
ret
cmp
sarb
in
push
dec
push
and
xor
xlat
std
popa
mov
lds
cli
nop
sbbl
stos
sub
ficoms
jg
inc
orb
int
mov
push
lods
cmpsb
cmp
inc
sub
ret
jnp
cmpsl
jns
pop
jle
scas
sbb
mulb
or
inc
popa
loope
xchg
dec
inc
in
pop
push
in
push
imul
in
add
mov
or
popf
fucomp
mov
in
add
xor
aad
cmp
or
xor
adc
mov
je
inc
loopne
inc
mov
dec
lods
jg
mov
mov
in
jne
and
xchg
mov
xchg
pushf
lcall
incb
push
fimuls
mov
adc
fwait
pop
fmul
rclb
jne
imull
mov
cmp
or
cmp
aam
sti
lods
mov
setl
inc
inc
fldcw
out
cmp
jmp
xchg
inc
icebp
add
mov
and
loop
mov
insl
test
lcall
rep
lret
sub
test
pop
inc
add
inc
xor
sub
stos
pop
or
push
loopne
popa
dec
frstpm(287
add
icebp
lock
xchg
pop
popa
movsl
add
in
aaa
in
push
adcl
pop
js
fldcw
testl
mov
rolb
jp
mov
inc
mov
pushf
fisttpll
rcr
pusha
stos
push
gs
aad
loop
push
stc
test
sbb
jg
andb
sbb
loopne
insb
out
scas
mov
sti
int3
shl
push
xchg
in
xchg
push
fmull
xchg
inc
mov
sub
jne
test
xchg
clc
adc
inc
inc
dec
mov
mov
out
fwait
sub
ljmp
dec
test
mov
pop
imul
jae
leave
mov
in
lcall
jb
inc
test
dec
cmp
or
mov
or
sti
mov
sub
dec
cmpsb
stos
out
loopne
test
cmp
inc
loopne
pop
fldenv
and
adc
lds
xchg
pop
int3
xchg
fimull
pop
or
push
xchg
jb
out
imul
push
lcall
test
dec
test
cltd
sub
ret
pushf
dec
mov
pusha
mov
sbb
mov
push
data16
lods
push
xor
test
and
push
test
sub
stos
jns
cli
repz
sbb
notl
cmp
rolb
gs
cmp
sbb
jg
mulb
cltd
cmp
xchg
lret
sbb
xor
arpl
jp
subb
in
rorl
pop
pop
not
add
and
dec
lock
out
inc
lcall
aas
fidivs
mov
fdiv
out
scas
icebp
fs
imul
repz
dec
ss
xchg
jle
xchg
add
mov
xchg
mov
movsl
cmpxchg
mov
stos
adc
pop
outsl
pop
xchg
sub
add
shll
xor
sub
xlat
int
cli
ss
scas
inc
mov
lds
xchg
adc
mov
pop
test
or
lcall
push
mov
cmp
int3
mov
sub
subb
pop
les
je
push
es
imul
imul
mov
mov
cli
int
cmp
push
xchg
inc
cmp
jnp
xchg
pop
ret
pushf
jg
int
lods
add
bnd
icebp
xchg
mov
lock
push
mov
xchg
test
daa
outsb
add
jge
int3
das
dec
dec
sub
jne
and
jae
bnd
mov
sbbb
cmp
fisttpll
in
cmc
inc
jo
mov
repz
inc
lcall
in
mov
cmp
mov
pop
out
xchg
dec
fldt
jne
add
push
clc
lds
in
inc
imul
clc
add
enter
jno
mov
inc
or
out
push
xchg
mov
sbb
fwait
mov
hlt
cwtl
shll
sub
push
jns
mov
pop
push
dec
out
outsb
pop
test
xlat
jbe
fdivr
jae
outsl
idivb
out
gs
push
repz
push
dec
push
inc
cli
dec
add
pop
shlb
inc
cmc
pop
movsl
and
fdecstp
popf
int
les
int3
sub
xchg
add
dec
xchg
repz
add
in
fisttpl
mov
dec
push
insl
sbb
mov
xchg
or
sti
scas
outsl
out
push
mov
inc
xchg
mov
or
ret
or
mov
and
ss
xor
and
aam
aas
inc
inc
fistpl
pop
push
jmp
lods
mov
sbb
and
aad
xchg
pop
ljmp
sub
adc
jg
ret
pop
int
xor
insl
jne
and
jo
into
and
fwait
dec
push
gs
outsb
dec
cmpsb
es
test
ja
xchg
aam
fisubs
xor
add
add
xchg
cmp
mov
lods
insl
data16
jp
cmp
out
aaa
movsl
dec
fld
xor
dec
jl
fcompl
scas
jns
sub
arpl
xor
jg
xchg
mov
or
dec
push
fisubrl
out
out
mov
mov
push
shll
inc
in
rclb
lods
outsb
xor
enter
sub
sub
aaa
mov
mov
ret
dec
xchg
push
add
pop
cmpsl
int
or
sub
sbbl
pop
xor
dec
and
scas
adc
fbld
fs
adc
cld
inc
loope
mov
cld
fwait
daa
mov
scas
scas
inc
out
jne
in
jnp
xrelease
sbb
call
add
fidivl
jne
sbb
incb
push
and
in
mov
mov
lds
push
testl
xchg
icebp
test
inc
pop
outsl
mov
aas
sbb
sti
aam
mov
int3
das
cmc
into
lea
in
dec
mov
lock
push
inc
push
in
pop
lods
add
cmpsl
mov
push
sahf
pop
fimuls
xchg
add
pop
push
lcall
sbb
sbb
push
nop
jl
fwait
adc
pop
fsubl
lahf
in
and
cmpsb
ret
sub
mov
mov
movsl
jae
cltd
adc
dec
addl
scas
mov
pop
scas
mov
test
xor
jmp
rcr
in
add
stos
inc
dec
adc
inc
xor
push
cmp
sbbb
es
add
cmp
int3
das
jp
xor
jbe
dec
mov
add
mov
mov
les
rcrl
xchg
negb
out
inc
arpl
and
repnz
push
adc
rcll
notl
xchg
mov
jnp
inc
inc
insb
xor
movsl
lret
cmpsb
aam
icebp
xchg
je
sub
cmpsb
movl
push
cwtl
sub
sub
movsl
popa
sbb
test
mov
fdivr
das
add
cld
adc
loope
inc
mov
adc
loope
mov
sbb
movsl
popa
call
dec
push
lods
sub
fwait
add
int3
loop
out
mov
mov
xchg
ss
loopne
and
dec
jmp
jg
mov
repnz
addl
outsb
xchg
std
enter
mov
cltd
fmulp
and
stos
sub
pop
mov
sbb
jb
imul
callw
sbb
cmp
fcmovnu
test
push
divb
pop
jge
adc
adc
lret
popf
xor
add
cmpsb
cmp
jno
jge
inc
pop
xor
mov
imul
pop
pusha
cmp
ffreep
inc
and
loop
fwait
sbb
and
shrl
pop
gs
mov
test
mov
test
dec
negl
mov
inc
xor
pop
or
movsb
xor
push
stos
jle
cmp
mov
push
mov
pop
sbb
shlb
lods
js
pushf
jnp
fdivs
aad
icebp
pop
mov
mov
shlb
mov
sub
or
xor
cmpsb
adc
or
cmp
cmpsb
arpl
dec
aaa
idivb
sahf
push
outsb
out
aam
push
ret
mov
ja
addl
xchg
sub
jnp
xor
xchg
xor
adc
data16
dec
add
aam
jno
jb
cmp
test
dec
jecxz
clc
inc
adc
pop
mov
jmp
mov
scas
out
pop
sti
xchg
sub
or
xchg
call
addr16
scas
xor
fisttpll
lods
xlat
adc
pop
xchg
popl
jnp
jmp
je
pop
adc
xor
cmpl
sar
sbb
mov
inc
pop
add
mov
xor
push
jo
xor
xor
push
jge
ljmp
dec
add
cmp
repz
out
int3
dec
ds
cmp
shrl
lcall
js
dec
rcll
lcall
jne
jge
cmp
jnp
pop
lds
lcall
sarl
dec
outsb
stos
pop
cld
lret
dec
mov
mov
icebp
scas
xor
loope
fdivrs
dec
push
insb
and
mov
lret
loope
xor
fstpl
roll
and
repnz
add
lea
dec
mov
into
fdivs
and
cmp
out
hlt
aaa
mov
sbbb
push
mov
lds
lods
sti
add
add
outsb
mov
pop
shl
adc
or
imul
in
adc
loopne
cmp
aaa
iret
push
popf
pop
ds
sbb
fisttpl
pop
in
dec
push
mov
pop
mov
les
ds
cmc
xor
shll
mov
test
sbb
lods
sub
ds
jg
sahf
dec
xchg
enter
imul
dec
cmp
aam
cmp
xor
cmp
and
sbb
loopne
add
scas
rcrl
jo
movsb
mov
xchg
je
fstl
insl
cmp
mov
jbe
int3
das
jle
mov
dec
insl
lret
mov
push
inc
int
and
imul
sbb
jns
in
cltd
mov
sti
movsl
nop
sub
xor
adcl
mov
stc
inc
mov
out
mov
daa
and
pop
lock
xchg
add
aas
mov
sahf
jl
sub
xchg
push
and
lea
leave
je,pn
fstpt
repnz
out
scas
in
mov
daa
sbb
negb
orb
push
xchg
loop
sub
outsb
call
ja
xchg
inc
lea
lods
mov
shll
xor
jp
ds
stc
add
jmp
in
call
add
stos
dec
pop
xor
ss
enter
dec
inc
ljmp
gs
or
outsb
mov
xor
and
lcall
push
mov
mov
cmp
xor
lret
fcmovnb
pushf
jl
adc
cltd
mov
inc
arpl
mov
push
push
mulb
or
or
decb
inc
dec
out
int3
pop
mov
loop
mov
fidivs
mov
xor
push
push
es
push
rcrb
sub
les
ds
aaa
mov
cli
sbb
cltd
into
imul
insb
push
push
xor
inc
mov
xor
arpl
adc
bound
dec
adc
add
call
sahf
xchg
call
jae
loope
sbb
ret
aas
mov
pop
outsl
mov
cmp
outsb
xor
or
test
gs
pop
fisttps
add
add
clc
mov
arpl
lds
pushl
mov
sub
dec
ja
sbb
adc
sub
das
adc
out
sbb
cmc
and
mov
mov
ret
shrl
pop
mov
inc
divl
cmc
popf
mov
fsts
or
out
mov
aaa
pop
mov
in
jg
lcall
inc
inc
mov
mov
in
add
mov
insl
cmp
lock
js
testl
cmpsl
pop
pushf
ja
or
xchg
cmpsb
loopne
mov
les
pop
dec
dec
pushf
lds
cs
pop
push
and
cmp
scas
mov
fwait
jmp
or
leave
xor
ret
ds
popf
test
cmp
cs
andl
xor
or
mov
sbb
aam
aas
cmp
pushf
popf
fnstcw
sbb
mov
sarb
subl
xchg
insb
pop
fcmovnu
insb
adc
mov
mov
sarb
xor
jae
ds
mov
adc
add
lds
int
sub
sub
xchg
xchg
mov
fs
hlt
stos
fdivl
repz
cld
aas
mov
mov
stc
js
in
js
clc
mov
fidivl
mov
sbb
imul
imul
xor
push
loop
fldl
jge
xchg
sbbb
ror
cmc
hlt
rcr
lods
mov
in
cmp
out
pop
mov
cmc
sahf
pop
je
jbe
jmp
xchg
dec
xchg
bound
jmp
pop
xchg
aaa
xchg
mov
shlb
gs
lahf
inc
xor
jl
inc
inc
test
out
jne
or
pop
adc
mov
add
xlat
addr16
in
aas
mov
in
pop
push
into
outsb
cmp
sbb
clc
push
or
sbb
test
iret
lods
xchg
fdiv
gs
sub
cmpsl
fnsave
mov
ja
ja
mov
cli
lahf
sub
xchg
test
icebp
pop
cmp
rclb
jmp
cmp
cmp
pop
push
sub
jmp
sub
pop
rorl
push
sbbl
mov
mov
jne
jl
notl
movb
iret
test
pop
cli
loope
sbb
mov
cmc
repz
inc
and
scas
cmp
cmp
add
aaa
add
lret
out
ljmp
xchg
outsl
pop
cmpl
ss
jo
cld
sub
sahf
xor
cmp
xorl
push
or
subl
inc
testb
pop
add
test
mov
fsubs
popf
mov
push
lds
push
lock
mov
popl
push
jo
dec
fsubr
dec
iret
aam
xchg
andl
jnp
dec
iret
jae
loopne
test
xchg
cltd
xchg
xchg
dec
data16
dec
mov
pop
cmpsb
fdivrl
fsubrl
out
push
sub
into
mov
mov
out
jecxz
lahf
mov
xchg
add
stos
inc
mov
dec
inc
shrb
pop
inc
das
icebp
cmp
loopne
fwait
inc
sub
imul
out
mov
mov
mov
jecxz
fwait
and
xor
push
fwait
or
pop
xor
int
loop
adc
div
mov
loop
xchg
cmpsb
mov
lods
movsb
jl
imul
push
cs
inc
push
popf
shll
pop
sub
data16
or
mov
aaa
inc
call
hlt
lods
clc
roll
jno
outsl
inc
cs
lahf
or
push
xor
bound
fadds
jno
dec
mov
popf
popa
jp
sub
es
sbb
sub
xor
jecxz
sub
push
sarl
jg
hlt
fimuls
pop
jg
mov
loop
dec
in
sbb
push
sbb
lahf
xor
inc
or
mov
stos
stos
jle
mov
xor
adc
pop
pop
xchg
clc
mov
test
jbe
push
ret
or
pusha
outsl
xchg
jne
pop
jne
sbb
lahf
icebp
int
mov
or
mov
mov
shlb
je
dec
scas
push
and
sahf
ljmp
addl
lods
cli
inc
mov
mov
rcl
xchg
mov
mov
daa
in
xor
xor
fyl2x
aad
adcb
sub
mov
sbb
sbb
dec
insb
shll
ror
add
push
ljmp
add
pop
pusha
fadd
push
or
xchg
xchg
pop
icebp
into
pop
ljmp
adc
dec
cld
adc
sub
mov
jl
loope
xchg
leave
imul
imull
xchg
jmp
push
repnz
fmuls
ljmp
pop
dec
adcb
sub
push
lods
loope
inc
add
popf
fdivrs
sub
sbbb
xchg
inc
fsubs
mov
idiv
jo
addb
dec
xchg
shrl
mov
and
pusha
or
sbb
mov
pop
out
icebp
into
jne
mov
pop
stos
jae
or
lea
fisttpl
inc
test
jp
mov
scas
inc
das
push
mov
cmpl
or
add
cld
repnz
fistpl
aam
mov
mov
call
lds
inc
jle
mov
xchg
imul
cmc
pusha
dec
jae
jnp
cmp
outsb
jge
xorb
in
cmp
enter
mov
fs
xor
in
std
fsts
and
inc
out
cmpsl
sarb
ljmp
jle
xchg
test
xor
sbb
iret
fdiv
push
pop
xchg
ficoms
jns
pop
repnz
sub
insb
lods
push
les
add
and
xor
add
rolb
push
aam
cmp
or
int3
test
sub
dec
pop
lahf
scas
mov
test
pop
and
adc
les
jp
in
push
ja
xchg
cmp
loopne
lods
testb
mov
shlb
adc
dec
mov
push
shlb
add
in
mov
cs
stc
push
xchg
dec
or
movsb
loope
mov
sbb
pushf
and
scas
movsb
xor
loope
mov
push
shl
fnstsw
push
ja
arpl
lds
cmovle
lods
gs
mov
imul
lock
bound
fsubl
add
iret
jnp
in
pop
les
or
imul
xchg
and
jecxz
jo
pop
pop
sub
inc
jmp
mov
es
sub
je
ret
test
lret
frstor
push
cwtl
mov
fsubrl
aaa
ret
inc
das
dec
shr
sub
fisubl
leave
mov
movsb
and
xchg
in
sar
in
daa
fdivr
push
mov
lahf
or
test
mov
cmp
das
xchg
shlb
push
movsb
inc
jo
fbld
xchg
daa
fwait
inc
daa
leave
xchg
mov
sti
and
mov
popf
fwait
mov
pop
mov
push
cwtl
xchg
xchg
ret
jb
sbb
push
stos
lahf
out
mov
into
daa
int
sub
inc
arpl
fstpl
es
push
stos
lods
call
sub
sbb
ljmp
das
mov
push
jle
xchg
jl
xchg
push
in
adc
es
pop
sbb
imul
jg
call
out
cmp
push
mov
dec
xchg
mov
cmp
dec
dec
xchg
stos
call
sub
es
dec
adc
movsl
sbb
pop
xor
sbb
mov
push
jp
gs
jnp
pushl
ret
or
add
mov
lock
add
or
stos
inc
inc
stc
je
out
mov
addb
aam
int3
mov
out
test
lea
xor
cs
mov
push
mov
mov
mov
and
xchg
push
scas
mov
fnstcw
sub
ljmp
mov
xor
pop
adc
lods
mov
xchg
dec
adc
cmp
adc
add
inc
push
mov
adc
dec
push
jno
arpl
and
movsb
js
pop
mov
xchg
cmp
sbb
and
xchg
xchg
ljmp
adc
outsb
out
xchg
dec
xlat
fstps
pop
lret
test
jb
lret
inc
std
xor
cmpsb
sub
inc
add
scas
outsb
sbb
add
sbb
decl
xchg
pop
xor
push
aam
adcb
pop
jle
mulb
in
sbb
out
pop
in
dec
mov
in
pop
jne
jno
test
fdiv
outsb
rclb
mov
out
jp
cwtl
les
xor
xchg
mov
dec
mov
mov
fwait
sti
movsb
sti
movsb
pusha
mov
frstor
dec
mov
pop
xor
xor
movsb
fidivrs
nop
imul
dec
dec
incb
add
stc
shll
leave
inc
inc
mov
out
outsb
inc
push
mov
popa
and
out
mov
mov
mov
enter
pop
fisubs
call
pop
xchg
je
cmp
add
xor
jmp
jne
sbb
dec
lds
jg
imul
and
fldt
mov
movsb
mov
movsb
in
je
jg
push
jp
xor
push
mov
cltd
outsl
std
mov
cmp
push
mov
pop
test
stos
rep
lahf
push
icebp
repz
cld
sub
pop
in
mov
addr16
out
test
cmp
leave
lahf
dec
cmp
xor
and
aam
outsb
push
add
bound
ds
mov
sbb
xchg
adc
iret
cwtl
ss
repnz
pop
jns
inc
sbb
stos
and
cmp
sbb
inc
js
jo
pop
jo
mov
sub
cltd
arpl
mov
xchg
in
cwtl
mov
jne
stos
cmp
inc
push
mov
sub
loop
call
test
into
and
addr16
pop
cmp
mov
xchg
xchg
dec
ja
pop
xor
mov
call
mov
into
sub
jae
ja
sub
sbb
cs
push
cmp
cmp
cltd
jb
insb
dec
lret
out
cmp
adc
mov
inc
clc
rorl
cmp
aad
inc
sbb
adc
sbb
jbe
adc
lock
arpl
jo
mov
test
mov
repz
jg
insb
rorb
movsl
add
test
and
mov
dec
cmp
jmp
ret
or
dec
xor
lret
aam
mov
jbe
cmp
jns
mov
push
out
lock
mov
les
repz
imul
fcoms
test
lods
das
insl
dec
pop
sahf
pop
pop
mov
inc
adc
sbb
jmp
ret
cmpsl
fs
aam
and
loopne
fdivs
jmp
out
xchg
mov
movsb
lds
das
add
mov
sarl
iret
cmc
sub
loop
fistpll
cwtl
fdivs
repnz
jbe
sahf
pop
arpl
out
jmp
mov
hlt
daa
fiadds
jae
in
add
mov
jge
scas
jb
fildl
mov
jne
ljmp
pop
scas
mov
cmp
inc
mov
cmp
out
lret
insb
push
cmp
inc
aas
push
add
mov
lret
push
pop
sub
scas
loop
adc
lret
jbe
pop
add
jp
in
orl
lahf
or
xor
loope
jp
sub
ret
mov
imul
sub
jl
cwtl
popa
push
dec
xchg
sbb
sahf
popa
mov
cmp
add
sbbl
arpl
pop
push
fiaddl
push
xlat
sub
shrl
js
push
jge
add
push
push
mov
xchg
pop
test
mov
adc
mov
out
xor
dec
sub
xchg
clc
in
lds
add
in
sub
loopne
out
stos
lea
jmp
cmc
scas
jbe
mov
cmpsb
mov
add
push
push
and
jne
stc
and
aam
clc
je
dec
pop
lea
jecxz
lock
add
lea
pushf
ss
mov
dec
ljmp
dec
and
mov
xchg
or
je
adc
mov
xor
test
ret
stos
cmp
sahf
xchg
cld
xchg
xchg
and
jns
sbb
and
push
xor
js
fisubrl
add
jl
push
lahf
push
flds
icebp
ret
stos
int
mov
and
jl
inc
insl
dec
movsb
movsl
and
js
cmp
sub
test
jecxz
mov
out
xchg
inc
in
xlat
pusha
stc
into
pushf
xchg
and
leave
xchg
xchg
and
aam
mov
add
in
mov
xor
fcom
sbb
aam
pop
add
sbb
adc
cltd
dec
ds
imul
rcr
sbb
mull
mov
fs
into
cmp
fwait
mov
xchg
xor
or
xor
and
mov
aas
mov
sbb
fs
sub
jle
ret
ds
add
jmp
add
jae
std
xor
push
out
sbb
daa
xchg
add
push
xchg
jae
daa
cli
pop
icebp
cmp
mov
sbb
cmpsb
imul
cwtl
push
jecxz
data16
ret
push
add
in
je
add
mov
xchg
and
stos
hlt
add
mov
push
push
lcall
mul
adc
mov
js
mov
movsb
lea
dec
pop
mov
fdivr
lds
jle
lahf
daa
mov
ret
mov
ret
cmp
clc
xchg
loop
fmull
dec
rorl
bound
adc
aad
cmp
push
and
dec
pop
lret
in
movsb
push
add
pop
bound
mov
fisttpll
mov
sub
xchg
jp
popa
into
inc
lds
dec
cmp
out
and
dec
andb
clc
out
dec
outsb
jnp
mov
push
outsl
sub
popa
mov
repnz
in
mov
xchg
or
rcr
xlat
push
pxor
and
xor
mov
sub
xor
adc
jmp
imul
movsl
fbstp
outsl
pop
std
jmp
inc
mov
outsb
dec
test
xchg
loopne
sbb
and
enter
adcb
jmp
inc
test
insl
stos
cmpsl
mov
cmc
inc
leave
jne
cltd
mov
or
or
sub
pop
aad
dec
sub
je
ret
or
and
sub
imul
std
xor
add
dec
shrl
adc
sub
pop
lea
jmp
mov
loop
mov
adc
ljmp
mov
imul
insl
out
addr16
xor
jmp
mov
sbb
cmp
pop
cmp
sub
and
sahf
inc
dec
sbb
out
pop
imul
sub
mov
hlt
fstp
lret
cmc
daa
mov
daa
rolb
and
xor
inc
mov
cmp
mov
jae
mov
mov
stos
or
xchg
push
pop
mov
mov
push
ss
stos
cbtw
push
cmpsb
outsb
mov
cvtps2pi
loopne
cmp
cld
scas
jb
jg
xchg
xor
idivb
inc
and
xor
dec
shlb
test
cwtl
inc
sbb
call
movsl
shll
cs
xchg
pushf
cmp
sub
imull
mov
mov
lock
ja
or
iret
sub
inc
xor
sub
and
fucom
sbbb
pop
push
cs
dec
jmp
lods
mov
mov
insl
sbb
fs
std
into
sbb
xchg
mov
jbe
sbb
mov
mov
jmp
ds
adc
push
add
shll
mov
fiadds
mov
mov
pop
ret
cmpb
inc
add
add
subl
movsl
js
xchg
and
test
leave
pop
push
mov
dec
push
jge
push
sub
jmp
test
jne
inc
mov
outsb
les
fmul
push
lcall
loopne
dec
lret
sbb
out
push
inc
test
repz
sub
sbb
lods
sub
rcrl
out
cltd
stos
dec
aam
out
out
or
iret
adc
or
lods
inc
sub
lret
xorb
mov
adc
pop
jecxz
test
push
jnp
adc
enter
adc
add
ss
cmp
nop
data16
or
push
mov
pop
in
xchg
rclb
std
sbb
xor
sub
xor
inc
push
push
dec
aam
dec
pop
and
andb
xor
stc
jmp
in
sbb
fmul
js
adc
movl
arpl
iret
insl
inc
push
cmp
xchg
mov
adc
fldenv
lds
stos
jecxz
jge
sbb
pop
adc
and
aaa
pop
or
cs
and
fld
int3
mov
sub
hlt
outsb
call
add
faddl
scas
mov
xchg
xchg
pusha
aaa
shl
cmp
mov
mov
je
jl
add
jge
cld
shll
arpl
sarb
lret
into
lods
ret
lods
xor
std
sub
fsts
stos
test
jl
aas
mov
daa
inc
and
in
xor
sahf
mov
shlb
test
fldl
fistps
mov
sbb
jne
add
es
out
pop
or
insl
arpl
mov
das
in
scas
ja
push
lea
mov
not
imul
out
in
int3
mov
bound
mov
xchg
push
pop
stos
into
test
cmc
xchg
dec
xlat
cmp
fadds
and
shll
push
xchg
test
cli
shlb
inc
in
cwtl
loope
jae
mov
push
aaa
xor
mov
pop
insb
push
xor
daa
push
mov
das
mov
push
dec
xor
pusha
pop
pop
aas
inc
stos
or
cs
inc
jl
cli
fistps
mov
push
subl
add
insl
mov
roll
popf
fisttpll
stos
xchg
jbe
ljmp
fsubp
movsb
or
xchg
stos
lret
jg
aas
repnz
fstl
sbb
mov
aas
add
pop
pop
jns
je
popf
sbb
xchg
inc
sahf
dec
and
pop
into
xor
pop
mov
ret
pusha
ret
inc
and
xchg
inc
mov
or
pop
and
negl
mov
sbb
jne
inc
xor
js
fisttpl
mov
sub
xchg
icebp
and
xchg
and
iret
in
mov
jae
pushf
jo
testl
fucomip
cmp
xchg
fidivs
jbe
or
adc
jecxz
idivl
enter
or
mov
cli
dec
xchg
sbbl
jmp
fmull
lret
iret
fiadds
push
stos
imul
dec
inc
test
test
in
stc
xlat
adc
and
js
mov
jge
xor
movsb
xchg
xchg
and
pop
aam
dec
adc
adc
repz
xchg
imul
outsl
sub
mov
jecxz
xchg
adc
inc
sbb
cld
cltd
mov
test
mov
or
mov
leave
sahf
adc
push
adc
xchg
jae
out
imul
rcrl
dec
loope
loop
out
das
into
mov
pop
test
adc
pop
jo
xor
lea
jge
bound
pmulhw
push
inc
stos
shrl
or
or
aam
rclb
mov
add
cmpb
jmp
js
fidivs
pusha
fimull
dec
lods
jne
and
test
mov
jae,pn
dec
lds
fdivr
push
and
push
and
das
je
mull
lcall
jns
push
mov
jne
negb
inc
fdivrs
or
xor
fdivrs
ja
fdivr
insl
mov
cwtl
and
es
lret
loope
scas
ds
lret
mov
aam
stos
add
xor
jle
call
cmc
test
rcll
les
pop
inc
lea
xchg
xabort
sbb
sbbl
lods
mov
mov
fcmovb
lods
jnp
lret
inc
jp
mov
mov
cwtl
fisubrs
test
jp
scas
mov
int
mov
movsl
ret
mov
pop
lcall
jnp
mov
mov
mov
or
aas
adc
mov
mov
lods
mov
jmp
mov
popf
hlt
mov
cli
jmp
mov
sub
arpl
in
pop
repnz
les
sbb
gs
into
sbb
lds
lods
fistl
jp
sahf
jle
scas
push
notl
xor
add
xchg
fs
mov
inc
rcrl
pusha
cmpsl
dec
leave
dec
hlt
das
pop
sbb
pusha
es
push
or
test
mov
fwait
xchg
pop
and
addl
pop
cmpsl
pop
and
xor
pop
mov
cmp
or
push
push
setno
mov
aaa
mov
sub
dec
shll
add
out
jmp
xor
mov
inc
or
xchg
icebp
sbb
arpl
in
mov
and
iret
cmp
inc
std
xchg
sarb
dec
xchg
add
and
jp
jmp
mov
fiadds
imull
fldlg2
xor
mov
js
lods
loope
ljmp
cmpsl
jl
sti
sub
add
scas
mov
adc
or
in
and
jbe
insb
imul
and
jbe
add
aam
lods
cmp
js
mov
xor
orb
stc
lods
sub
mov
pusha
test
repz
xor
out
push
addb
jg,pt
sub
jnp
lcall
push
cmpb
jl
ljmp
rolb
xor
shrb
les
or
push
negb
and
cmp
push
xor
mov
cmp
int
iret
mov
pop
sub
cmp
fmul
push
push
inc
sarl
popf
sbb
std
pop
pop
in
xchg
push
loope
les
mov
rorl
std
mov
add
dec
daa
sub
mov
addr16
and
cwtl
sbb
es
aam
aam
andb
dec
movsl
push
ljmp
inc
nop
out
or
cltd
movsl
sub
outsb
cmpsl
jbe
fsubrp
push
add
cmp
fstpl
imul
pminub
int
xor
cmp
mov
xor
repz
stos
bound
and
sbb
leave
xlat
sbb
mov
das
ret
mov
adc
jp
bound
pop
outsb
lods
mov
fdivrs
int
pop
mov
add
add
jmp
push
xor
push
adc
lods
loope
vmwrite
dec
imul
sbb
addr16
repnz
lret
or
dec
xor
inc
cmc
xor
popa
mov
popf
mov
ficomps
mov
mov
xor
daa
and
inc
xchg
flds
xchg
test
nop
push
ljmp
movsl
ljmp
gs
or
movsb
add
xchg
outsb
push
fwait
imul
or
mov
xor
in
subl
jno
lcall
aaa
stc
xchg
inc
test
mov
push
mov
daa
jne
jmp
fwait
cmpsb
aaa
mov
iret
adc
adc
jg
mov
xor
out
mov
mov
and
dec
lds
or
lahf
repnz
xchg
xor
fwait
aaa
addr16
clc
sub
push
cmp
rolb
rcl
movsl
pop
cmp
pop
in
xchg
rcl
aad
inc
lret
add
lds
rol
mov
or
pop
inc
pop
rclb
add
xor
xchg
rcrb
dec
push
iret
cmpb
dec
push
inc
dec
inc
add
push
xlat
mov
loop
push
sti
mov
stc
call
fs
sbb
xchg
or
jle
mov
add
aam
int3
jp
inc
rol
or
adc
mov
sbb
mov
enter
adc
push
loop
ret
xchg
je
ljmp
add
sub
out
sub
mov
jl
mov
add
or
scas
scas
inc
lret
jg
test
popf
js
xchg
iret
and
adc
in
popf
aaa
test
test
movsl
inc
iret
movsb
mov
jns
hlt
pop
sbb
push
jg
vmaxps
push
jno
or
or
lods
jns
loope
out
loope
mov
jmp
mov
shr
in
xor
icebp
popa
pop
xor
add
xor
jo
movsb
jne
fidivrl
xchg
mov
inc
push
lcall
and
sbb
xor
mov
pusha
or
add
clc
shld
add
dec
jae
xlat
subl
insl
nop
cmc
jmp
pop
outsb
mov
inc
sub
dec
fldcw
insb
hlt
and
cmc
std
mov
aad
jno
xchg
movsb
in
mov
std
xor
daa
fwait
int3
and
mov
add
or
inc
lods
pop
xor
add
pop
aam
mov
mov
fiaddl
add
jae
mov
icebp
pop
pushf
js
data16
mov
popa
ds
das
mov
fsts
add
in
sbb
push
subb
shlb
lret
inc
pop
cmp
dec
insl
fdivrp
inc
movsl
jns
push
ret
out
mov
inc
mov
jae
cmpsl
sbb
in
mov
sub
iret
mov
aad
je
push
push
jge
cmp
push
or
sbb
rcl
pop
or
mov
and
mov
mov
xchg
cld
ja
ret
pop
jnp
sbb
dec
add
sub
mov
jb
scas
ds
dec
hlt
std
pushf
pushf
mov
ret
leave
arpl
dec
xor
mov
das
cmp
les
flds
push
push
rorb
jmp
std
sbb
pop
push
pusha
das
cmpb
sub
iret
xchg
cs
push
les
lfs
into
or
fiadds
jecxz
stc
pop
outsb
pop
dec
int3
inc
ret
loop
pop
pop
aaa
testb
in
mov
cmp
data16
add
daa
insl
clc
jecxz
xor
daa
stos
xor
cld
xchg
movsl
jmp
loope
mov
xchg
dec
imul
pop
test
push
inc
jmp
das
ret
imul
shl
xor
mov
or
xor
xchg
sub
popf
pop
cmpl
out
xchg
out
popa
mov
icebp
mov
outsb
test
std
cli
jne
sub
outsl
orb
xchg
jmp
jb
jmp
pop
fdivp
or
pusha
cmp
test
push
adc
mov
out
inc
clc
adc
adc
pop
push
insl
in
fmulp
jae
cli
pop
std
icebp
fisubs
sbb
adc
pushf
sbb
and
shl
pusha
imul
sarb
stos
mov
out
adc
sub
fisubl
and
push
sbb
repz
xchg
cmpsl
push
mov
cmc
insb
adc
gs
or
orb
xchg
in
pusha
sub
mov
lcall
mov
bound
insl
in
sub
mov
imul
in
fs
cmpsl
adc
jge
add
jecxz
ljmp
mov
jb
scas
loopne
mov
mov
jmp
sub
mov
outsb
fldcw
cmp
inc
call
pop
mov
mov
rcl
and
movsb
sbb
jecxz
or
push
xlat
data16
out
inc
fisubrl
pop
xor
jne
sbb
jo
cs
add
jbe
lods
in
inc
xchg
mov
fwait
sahf
adc
mov
dec
mov
push
imul
das
aam
mov
testb
aas
popf
out
addr16
jno
inc
shl
inc
add
xor
lds
mov
pop
dec
jp
fcmovne
cwtl
in
sbb
les
movsb
repz
movsb
in
in
add
fwait
add
jo
out
ds
inc
addps
xor
adc
clc
sub
out
mov
push
imul
mov
mov
inc
popa
adc
mov
stc
daa
test
cld
jge
popf
cmpsb
push
loop
pusha
xor
ljmp
in
mov
mov
mov
aad
orb
aas
outsb
jmp
int
cmp
stc
mov
insb
cmpb
pushf
mov
out
push
scas
xchg
mov
ret
aad
inc
pop
cmc
dec
dec
imul
icebp
aas
xchg
fimuls
nop
sub
jnp
sti
stos
ret
mov
mov
and
cmc
mov
mov
js
in
cmp
mov
loop
mov
inc
mov
popa
shrl
mov
insl
inc
jo
or
je
mov
push
jnp
push
cltd
jmp
aas
xchg
or
push
xchg
xor
mov
add
xor
in
pop
sub
sahf
mov
addr16
mov
mov
and
dec
les
mov
mov
jb
push
add
lds
cmp
lods
push
ret
call
int3
out
ret
int3
aas
adc
jg
cmp
insl
test
mov
sbb
into
cmpsb
cld
mov
fisubrs
lcall
test
cmp
inc
jb
insb
cmp
add
imull
mov
rorb
xor
lods
or
test
cltd
nop/reserved
mov
push
lahf
and
enter
push
mov
outsl
xchg
and
sahf
lret
lea
or
sub
call
lret
fadd
cli
lods
enter
pop
pop
imul
sbb
outsl
negl
or
dec
mov
divl
orl
inc
and
push
mov
pop
add
jl
mov
rcrb
add
push
bound
sti
mov
or
gs
std
push
push
pop
sub
cmp
jg
xrelease
push
pop
push
jp
mov
sarb
cmc
fwait
lret
push
cmp
into
adc
mov
cmp
aam
sbb
or
repz
stos
mov
fdiv
cld
test
jg
cmpsl
sbb
jbe
lods
outsl
mov
ljmp
fidivrs
pop
je
and
pop
add
test
hlt
movsl
mov
xor
fs
xchg
mov
add
inc
mov
or
mov
jmp
lods
arpl
xor
push
add
and
or
xchg
xchg
push
stc
insb
push
les
mov
mov
bound
lock
das
mov
dec
jne
test
inc
test
inc
ljmp
add
dec
out
idivl
test
stc
imul
jmp
adc
ret
cmp
ljmp
jp
mov
and
fcomp
pop
and
leave
ds
adc
rclb
fsubrp
pop
dec
inc
add
loop
repnz
sub
mov
adc
das
fdivs
pop
jns
cmp
insl
and
or
ret
shrb
pop
sbb
mov
cmp
or
mov
pusha
jmp
or
ss
mov
mov
pop
jl
xchg
dec
pop
test
jnp
test
jge
mov
inc
dec
adc
push
mov
pop
mov
ljmp
ror
xorb
mov
xchg
bound
enter
je
mov
and
jnp
rorl
bound
mov
xor
sbb
cmp
jno
pop
xchg
lret
xor
add
push
shl
std
lds
fstps
repz
add
mov
adc
loope
arpl
push
or
dec
cmp
push
rcr
dec
and
mov
sahf
lods
mov
jp
test
call
dec
adc
push
int
xchg
cmp
pusha
out
daa
mov
sbb
xor
insl
enter
ja
adc
ljmp
sbb
push
sub
mov
push
cmp
adc
mov
jnp
or
sub
xor
add
inc
lret
frstor
mov
outsb
hlt
pop
mov
in
xchg
xchg
mov
jo
scas
dec
add
jle
aaa
sbb
jl
and
add
sbb
aad
xchg
insl
and
sbb
sbb
jle
cmpsl
sub
sub
int3
xor
inc
sbb
sahf
mov
pop
inc
pop
jne
inc
cmp
mov
mov
mov
insb
popf
out
dec
das
jmp
jp
mov
movsl
cmp
ja
mov
scas
adc
adc
jbe
lret
mov
sub
jne
inc
mov
lcall
inc
stos
rcr
inc
cltd
rcll
dec
js
std
dec
fsubrl
xchg
stc
mov
jnp
test
jg
dec
lock
flds
and
xor
mov
lods
mov
adc
cs
rorl
mov
sbb
jp
out
pusha
xor
or
out
inc
aad
test
mov
pop
push
loop
or
cmp
orl
mov
mov
xor
jg
out
mov
test
loopne
jge
inc
inc
shlb
jnp
cmp
inc
add
push
aam
inc
pop
mov
mov
pop
orl
pop
jmp
jge
call
push
jmp
cmc
scas
sub
or
and
cmp
jnp
cmpsb
aad
xchg
xchg
stos
mov
icebp
std
and
fisubl
or
mov
sbb
outsl
adc
add
jne
jmp
pop
rclb
jle
adc
lods
sub
sub
sti
fdivrl
fwait
add
and
lret
ror
imul
mov
add
movsb
sahf
pop
xorl
mov
pushf
dec
add
xor
movsl
repnz
clc
add
repz
addl
add
sub
sti
xchg
jg
rorl
cmp
nop
xchg
data16
inc
xchg
int
out
adc
pusha
cmp
xchg
lods
pop
jnp
xor
js,pn
cmp
mov
in
mov
fmul
mov
pop
shr
cmp
icebp
pop
in
ds
cmp
leave
iret
repnz
pop
mov
fiaddl
stc
jmp
shll
jns
adc
stc
pop
ror
cmc
xor
mov
cs
cmp
lock
mov
xchg
adc
fxch
lods
repnz
inc
inc
repnz
pop
dec
js
pop
jmp
xchg
sub
out
sub
fs
sti
xchg
popf
xor
lret
addr16
push
lods
leave
dec
and
jge
scas
mov
pop
adc
fisttpl
int
mov
mov
nop
xchg
mov
out
mov
jno
bound
add
and
idiv
scas
cltd
das
test
xor
in
mov
adc
sub
cmc
or
push
pop
mov
add
dec
xor
push
adc
bound
bnd
je
cmpsb
lds
sub
dec
out
or
and
push
scas
pop
push
dec
cmc
add
mov
loopne
imul
cli
fistpll
icebp
mov
xor
xchg
adc
dec
int3
sub
dec
sbb
lahf
adc
mov
fnstenv
test
ljmp
or
sahf
mov
loope
mov
sub
sbb
popa
out
mov
jl
jo
and
popf
jecxz
int
stc
rol
pop
or
jne
int
xchg
pusha
mov
shlb
lea
dec
data16
fadds
dec
sbb
add
ret
imul
andb
in
sub
mov
mov
sub
in
push
mov
jmp
jmp
or
jne
dec
adc
pop
mov
sub
jmp
outsb
psubusw
or
pop
push
aaa
test
xchg
cli
xchg
insl
pop
out
push
rcll
shrl
mov
push
daa
mov
scas
bswap
mov
ds
clc
cmp
dec
inc
int3
inc
fisttps
orl
sub
mov
xor
jecxz
inc
fidivl
in
inc
dec
imul
shlb
mov
jae
lock
pop
lcall
ss
sti
xchg
xlat
mov
and
sub
add
shrb
sub
idivb
jns
inc
cmp
push
cmp
or
imul
xchg
and
test
inc
insb
ficomps
mov
jge
cmpsb
imul
ss
mov
sbb
xor
cmp
adc
gs
inc
loop
mov
or
out
and
rcll
mov
dec
cmc
xchg
call
movsl
jb
inc
adcl
mov
cmp
lods
out
inc
repnz
mov
adc
jbe,pt
inc
cmp
dec
pop
jae
aaa
dec
add
out
stos
or
sub
ja
test
cmp
loopne
jmp
jnp
push
cmpl
out
jbe
push
jecxz
xor
xchg
data16
dec
jbe
outsl
pop
lock
stc
jne
adc
enter
and
bound
or
lock
gs
sbbl
pop
jecxz
cmp
or
imul
addr16
js
mov
ljmp
outsl
and
xchg
jbe
rcll
in
adc
or
aas
testb
int3
push
fcomps
cmc
jmp
inc
imul
ret
ret
pop
jns
stos
faddl
daa
inc
xchg
aam
loop
xor
lea
daa
inc
xchg
xchg
test
mov
mov
mov
sub
jmp
mov
clc
mov
pop
shrb
push
mov
xchg
loope
pop
sbbb
repz
cltd
dec
out
ret
mov
movsl
das
push
sub
or
inc
mov
mov
jmp
xchg
lahf
mov
out
jmp
dec
insb
dec
test
inc
sarl
mov
or
pop
mov
loope
dec
pop
and
xchg
jecxz
psubd
xor
popa
mov
adc
push
rorb
dec
mov
loope
popf
rorb
int3
inc
sub
push
or
dec
mov
pop
in
pop
fildl
mov
sbb
nop
out
rep
pop
rorb
aam
pop
rclb
imul
shrb
jmp
inc
testb
mov
push
xor
jmp
sub
mov
jmp
push
ret
roll
mov
xchg
outsb
mov
cmp
lret
shlw
loopne
scas
imul
xchg
pop
xor
stos
xchg
add
mov
rcll
xor
repz
jo
ret
mov
sbbl
cmpsb
aas
jbe
pop
rcl
mov
int3
loop
fwait
jl
ret
sti
loopne
test
dec
jmp
fcomps
dec
push
cmp
in
test
jae
xor
mov
scas
push
adc
jl
dec
mov
test
mov
sub
adc
jne
bound
nop
mov
xlat
push
arpl
push
mov
sbb
aam
cmp
cmp
mov
pushf
or
ja
scas
lcall
jae
scas
into
loop
iret
ss
movsb
mov
not
or
push
and
xchg
mov
mov
mov
test
dec
push
xchg
jle
sbb
test
outsl
mov
cmpsl
cmp
push
or
sub
dec
in
rclb
mov
mov
inc
push
mov
lock
stos
enter
mov
test
outsb
outsb
cmc
cmp
and
mov
jns
push
cmc
xlat
gs
fidivrs
cmpsb
loope
dec
sbb
cmp
adc
and
aam
decb
push
sbb
dec
or
enter
adc
in
cli
cmpsb
sbb
push
add
and
mov
push
data16
repnz
xchg
and
out
pop
mov
cmp
stos
add
lcall
clc
pop
call
idiv
mov
shlb
dec
stc
loop
add
sbb
mov
js
pop
addr16
rclb
mov
popa
lods
lahf
clc
mov
loopne
jle
jae
sbb
pop
icebp
lret
or
cmpsb
mov
jp
jns
jle
jae
ljmp
outsl
sbb
mov
into
enter
push
pop
cs
sbb
shl
mov
sub
add
pop
inc
jmp
lahf
xchg
jmp
call
fistps
xchg
sub
cmp
mov
xchg
lret
jecxz
ja
add
push
movsb
ficoms
pop
cld
mov
push
and
test
addr16
adc
pop
mov
out
aad
jne
hlt
jge
dec
mov
enter
fidivl
or
iret
or
repnz
add
sbb
dec
out
push
repz
rcl
in
iret
and
test
dec
repnz
or
movsb
sarl
mov
aaa
push
adc
push
cmp
and
mov
cmp
xor
jae
js
xor
popa
xor
mov
outsl
inc
lods
jmp
adcl
mov
in
inc
cmc
jmp
stos
mov
mov
adc
adc
mov
inc
imul
sti
enter
loope
icebp
outsb
aam
imul
cld
repnz
mov
adc
mov
jbe
fwait
cmp
loop
adc
xor
sti
dec
repz
pop
jo
out
sub
insl
stos
sub
scas
bnd
mov
jecxz
cmp
dec
je
gs
pop
daa
pop
iret
nop
arpl
fmulp
aaa
cmc
jnp
push
xor
sub
mov
lret
cmpsb
or
hlt
cwtl
ljmp
mov
jge
push
add
cmp
lret
roll
imul
mov
int3
sahf
jnp
fisttps
xchg
xchg
ljmp
cs
or
in
pop
es
and
lods
lds
push
push
std
mov
aaa
xchg
sbb
jns
pop
add
insb
sbb
push
mov
xchg
xor
sub
xchg
cltd
pop
scas
insb
mov
adcl
mov
jb
inc
cwtl
lods
addr16
roll
mov
pop
adc
loopne
adc
test
dec
add
fs
xor
and
enter
cmp
push
lcall
cmp
sub
repnz
push
test
mov
rcrl
leave
push
and
or
mov
mov
ret
daa
pop
aam
ss
idivl
lods
repnz
sbb
xor
mov
inc
lock
add
adc
and
out
push
sbb
lods
mov
inc
and
fdivr
inc
and
aaa
aad
push
out
cmp
test
sarl
aas
fsubl
rcrl
rcr
or
fsubrs
xor
arpl
fwait
or
loop
dec
loope
mov
addb
xor
lods
add
cmp
jmp
scas
loop
mov
lret
mov
cmp
shlb
xchg
mov
inc
jmp
push
sahf
loopne
pushf
movsb
ds
mov
cmpsb
pop
out
movsl
call
mov
test
mov
push
cmpsl
aam
lahf
pop
xchg
andl
mov
out
fwait
dec
mov
sahf
cmp
fcomp
cmp
pushf
adcb
ret
iret
insb
xchg
pop
pop
jmp
loopne
or
add
sbb
xor
pushf
jns
push
push
lahf
push
push
stc
xor
and
push
adc
and
lock
lea
sbb
jnp
mov
dec
movsl
dec
fnstcw
sti
lea
dec
push
sbb
dec
jle
cmpsl
jo
lock
cmp
arpl
dec
add
loop
mov
and
enter
popa
cwtl
in
add
js
push
shlb
jle
mov
or
jb
push
mov
adc
popf
add
sub
popa
mov
xchg
or
ret
lret
movsb
lods
fwait
fwait
mov
jo
sub
inc
clc
xchg
inc
mov
cwtl
cltd
mov
pop
or
lcall
outsl
mov
dec
or
mov
dec
cmpsb
popl
out
imul
les
dec
aad
mov
inc
mov
dec
adc
lods
inc
iret
pusha
push
jle
pop
or
xor
ds
add
addr16
cmp
rcl
rol
jnp
movsl
cmp
push
inc
adc
je
push
mov
aas
adc
cli
mov
sub
mov
xor
bt
insb
xor
aad
mov
daa
xor
cmc
sub
jbe
lock
sbb
sahf
or
test
jle
clc
test
fimull
inc
adc
cmc
cli
or
sbb
mov
das
push
sbb
add
inc
mov
mov
adc
mov
test
pop
les
adc
dec
and
test
mov
hlt
cmpsl
jb
rolb
pushf
icebp
popa
inc
call
out
ds
stos
dec
sbb
mov
nop
jae
cli
adc
in
or
push
sarl
push
adc
xor
jmp
push
stc
rcll
pop
les
dec
push
jmp
sti
data16
loop
dec
int3
mov
add
push
adc
cmp
push
adc
int3
cld
out
cmc
into
jge
dec
fs
jno
loope
add
fwait
rolb
sub
adc
mov
adc
data16
push
addr16
cmp
int
and
addr16
fsubrs
movntps
setp
outsb
repz
popf
push
mov
je
jnp
sbb
fld
xchg
xor
mov
push
xor
fwait
and
rcr
in
outsl
jno
mov
and
adc
cwtl
scas
and
std
fs
je
pushf
push
and
jmp
in
cli
out
dec
cmp
and
pushf
add
loop
dec
add
or
add
xor
ljmp
push
insb
daa
int
mov
adc
outsb
or
adc
fdivrs
aaa
loop
pop
pop
adc
rclb
fists
sti
or
outsb
out
clc
ds
dec
hlt
mov
add
jns
cmp
loop
push
xchg
sbb
mov
dec
push
int
mov
enter
mov
mov
ds
mov
idivb
cmp
int
jecxz
mov
lods
mov
lods
push
enter
movsb
mov
sbb
sahf
fwait
dec
mov
xor
lret
dec
das
add
test
loop
sub
dec
or
ja
mov
shll
xchg
adc
sar
ret
test
dec
pushf
les
inc
dec
jb
gs
jecxz
std
lds
aam
jecxz
mov
pop
xchg
rorl
loope
clc
xchg
gs
mov
call
lods
inc
test
stc
and
sbb
or
xor
dec
jg
sub
or
jb
mov
test
icebp
mov
iret
push
je
mov
sbb
enter
orl
nop
xor
xchg
movsl
dec
push
call
into
mov
ds
mov
pop
sub
outsb
push
sub
or
xchg
mov
outsl
jge
push
arpl
fwait
push
in
cmc
push
aad
pop
int
lock
not
out
add
jle
jns
imul
lods
enter
adc
push
mov
pop
outsb
sub
subb
fidivl
repnz
fsub
lahf
cmpl
cwtl
divb
arpl
stos
fadds
rolb
cmp
andl
sub
imull
vmulsd
dec
lcall
push
and
or
mov
mov
fidivrl
push
loopne
and
sbb
jo
sarl
cmp
ss
mov
sub
mov
add
push
loop
je
adc
ss
cmp
mov
dec
das
fucomi
and
push
jb
pop
fildll
xchg
int
add
scas
mov
aam
cmp
sub
cs
je
adc
jle
push
jae
jg
sbbl
or
out
bound
test
pop
jb
shlb
stos
xor
sbb
test
shrl
pop
push
jo
mov
test
mov
inc
adc
xchg
in
and
or
jno
mov
mov
mov
idivb
divl
iret
jbe
mov
cwtl
xor
mov
mov
inc
nop
dec
jae
cmp
icebp
sub
mov
arpl
cmp
add
rclb
fdivl
vpxor
lahf
shll
cld
pop
xor
push
lfs
xchg
pop
mov
test
mov
mov
out
insb
mov
adc
dec
add
out
lods
lods
mov
xchg
jbe
loope
icebp
cmc
lods
in
in
and
jg
and
fcmove
push
test
in
xchg
lret
adc
xlat
cwtl
scas
sub
inc
and
adc
sbb
cmp
or
dec
out
andb
ror
ds
insl
dec
inc
out
xchg
mov
lds
xor
lea
adc
or
cmp
in
daa
mov
mov
lods
lds
insb
ret
movsb
imul
jo
lret
add
rcrl
xor
add
jnp
fucom
es
jno
data16
out
adc
push
adc
int
and
addr16
mov
sbb
imul
jge
outsl
inc
pop
mov
push
fwait
aas
mov
idivl
pop
sub
rorl
sahf
ja
adc
enter
mov
sbb
adc
inc
mov
sub
in
sbb
mov
and
dec
inc
lret
ss
or
outsl
stc
les
pop
out
xlat
sub
mov
not
testl
pusha
popf
fistpll
cs
andl
mov
popa
jne
lret
adc
push
out
mov
xchg
dec
addr16
dec
je
push
jno
nop
pop
imulb
ror
adc
mov
mov
ds
arpl
cld
scas
stos
jo
mov
in
js
xchg
sbb
test
push
pop
or
dec
hlt
sub
rorb
xchg
jo
cmp
outsb
push
in
movsl
push
jne
ljmp
sub
push
repnz
adc
push
inc
or
ret
cmpsl
rcrb
aas
push
fs
dec
lcall
xchg
add
mov
add
lods
push
aad
sbb
sarl
inc
cmp
jge
imul
sub
fistpll
nop
sbb
subb
or
xchg
sub
xor
clc
mov
and
cmpsl
pop
push
sub
or
add
int
cmp
and
inc
cmp
xchg
inc
lods
pop
in
cmp
or
pop
fcmove
jl
outsl
push
loope
mov
add
aam
faddl
push
mov
mov
sub
jg
lcall
popa
jmp
pop
and
out
pop
lret
pusha
dec
xorb
inc
pop
mov
and
ljmp
arpl
pushf
les
mov
pop
mov
ud1
fiadds
adc
ljmp
cmc
and
lret
bnd
inc
sbb
pop
lcall
mov
lret
jp
pushw
lods
clc
movsl
mov
fisttpll
push
sahf
and
mov
push
mov
dec
sbb
and
cwtl
dec
pop
xchg
jno
out
adc
loopne
decl
movsl
xlat
xor
nop
add
mov
or
xadd
subl
jo
push
fsts
cmp
add
aad
sub
jge
sub
aam
push
lret
loopne
or
sbb
jae
test
sub
lret
and
or
scas
jecxz
rclb
rcr
shll
mov
call
sbb
jmp
add
sbbl
push
cli
inc
test
mov
inc
sub
sbb
out
test
call
arpl
lret
and
or
addr16
mov
ljmp
sbb
sbb
and
imul
sbbb
das
dec
mov
xor
pop
mov
mov
andl
call
xchg
sbb
dec
mov
das
adc
adc
cmpsl
xor
and
xor
cld
ror
mov
popf
frstor
mov
test
out
loop
cmp
push
dec
cmp
aad
jmp
sbb
add
scas
aam
xor
inc
cwtl
xor
jbe
push
in
sbb
and
sub
dec
pop
insl
mov
dec
push
adc
mov
dec
clc
arpl
pusha
adc
pop
outsl
pop
repz
inc
adc
orl
in
push
xchg
ljmp
divb
les
rclb
mov
xchg
mov
orb
push
popf
mov
sub
xchg
cmpsb
std
movsb
fsubrp
std
xchg
mov
cmc
xchg
pop
cld
push
sti
xchg
sbb
jnp
imul
inc
inc
push
ss
xchg
cmc
jb
jne
lock
sbb
pushf
sbb
inc
dec
int
cmp
mov
pop
lret
pop
es
popa
mov
test
hlt
mov
and
sbb
pushf
cmp
dec
outsl
pop
les
addb
push
mov
adc
mov
in
call
jne
sub
pop
repnz
adc
call
sbb
adc
movsb
jg
int3
mov
jnp
mov
in
jbe
adc
leave
popf
pop
sub
jl
fsubr
test
mov
jmp
mov
imul
adc
adc
shr
sti
daa
mov
enter
mov
repnz
pop
lcall
movsl
mov
jne
mov
fdivrl
adc
idivb
das
mov
cmp
jnp
mov
aad
push
fadd
data16
dec
mov
sub
mov
jno
addr16
xchg
je
inc
sbb
xor
leave
push
sub
loope
inc
in
pusha
sbb
push
in
mov
jmp
cld
movsl
test
into
xor
mov
jnp
mov
ret
cli
and
jmp
pop
sti
inc
pop
js
mov
mov
in
je
push
mov
mulb
stos
pop
xor
inc
addr16
movsb
into
xchg
mov
xchg
loop
cltd
mov
inc
push
stos
insb
cmp
cmpsl
dec
adc
add
jle
test
pop
dec
mov
dec
mov
and
popf
or
int
mov
xchg
movsb
mov
inc
je
jge
int
push
out
imul
fcoml
sub
xchg
imul
sbb
popl
repz
cld
loop
ds
shll
ftst
add
cmp
mov
test
mov
sub
cmp
add
dec
and
sti
xchg
pop
fistpll
ret
imul
jns
ja
cmp
fcoml
sbb
add
push
mov
jo
lods
sbb
push
mov
lods
and
xchg
pop
leave
int
testb
std
gs
adc
pop
inc
loope
push
or
inc
clc
movsb
or
sbb
and
out
adc
pop
adc
jmp
negb
inc
xor
movsb
movsl
in
adc
lahf
push
inc
jbe
add
shlb
push
jg
xlat
cmpsb
aas
mov
adc
std
movsb
and
lea
rcll
cmp
insb
sub
jge
std
lahf
lcall
mov
or
arpl
test
lcall
cmp
mov
sbb
repnz
adc
pop
aad
mov
and
pop
lds
shl
lds
out
add
orl
sar
ljmp
hlt
push
dec
push
ret
in
stc
ds
dec
stos
in
jle
addr16
xchg
aas
mov
movsl
loopne
cs
add
scas
fs
sahf
loop
outsl
ror
into
mov
bound
push
mov
ljmp
hlt
or
inc
enter
insb
mov
add
pop
cmp
push
cmpb
cmpsb
fwait
in
dec
nop
adc
xchg
fldenv
lds
mov
clc
or
rorl
push
lret
in
and
pop
imulb
jno
pop
lds
sbb
xchg
mov
fiadds
popf
sub
shll
and
cli
mov
inc
stos
or
out
in
add
push
push
xchg
jge
stos
xchg
aaa
sarb
aaa
and
sbb
jnp
popa
outsb
mov
and
shr
cmc
mov
push
stos
push
adc
cmp
cmp
mov
mov
in
out
or
mov
dec
mov
sbb
ljmp
push
dec
cmpsl
lcall
inc
xchg
cmpsl
ljmp
jb
xor
or
inc
pop
pusha
insl
lret
out
adc
imul
out
ss
lock
pop
ss
push
aas
pop
inc
pop
shl
and
iret
mov
je
clc
cmp
dec
int3
sub
and
mov
cmpsb
rclb
fisttpll
and
fwait
sbb
inc
shlb
insb
sub
repz
jl
cmc
ret
and
xor
in
movl
test
lret
mov
adc
sbb
add
std
addr16
mov
fadds
mov
shll
jecxz
inc
inc
negb
sahf
mov
push
push
loope
arpl
push
fcoms
adc
mov
popa
push
into
sub
lds
arpl
mov
mov
cwtl
mov
bound
push
ss
mov
jnp
pop
jb
ljmp
lahf
les
sub
pop
pop
jns
dec
pop
push
cltd
ret
jae
aaa
movsl
pop
repz
mov
add
lods
jmp
imul
iret
inc
sub
cmc
lret
lods
lcall
fstpl
sub
in
mov
std
xchg
push
xor
out
pop
mov
pop
mov
lods
xchg
xor
cmp
mov
popa
icebp
sbb
cmc
jb
xchg
pusha
lock
shlb
mov
icebp
mov
cmp
cwtl
mov
fcomp
int3
mov
movsl
jg
das
ret
dec
and
sbb
cmp
lret
fldcw
adc
loop
in
dec
fisttpl
loopne
jb
ss
sti
push
movl
cmc
in
sbb
jecxz
xor
pop
or
add
sbb
fs
xchg
leave
xor
jl
cs
mov
push
movsb
sbb
movsl
movl
and
jmp
int3
cld
scas
int
insl
into
or
cmpsb
mov
icebp
paddsw
xor
loop
imul
cld
cmpsl
cmpsl
rcl
xor
std
fwait
sbb
je
imul
jb
dec
push
sahf
jnp
fldcw
pop
imul
pop
lcall
pop
in
enter
dec
xor
sub
gs
jp
and
pop
and
xlat
or
fisttpl
aam
push
sub
out
out
sub
insb
mov
or
jp
int3
push
out
cmp
arpl
sub
hlt
insl
scas
push
loopne
mov
inc
jl
in
cmpsl
aaa
xor
dec
insl
jne
cmpsl
push
outsb
sbb
xorl
pop
pop
add
jmp
repnz
push
sub
xchg
jns
jbe
xor
cmp
insl
arpl
outsb
dec
xor
cbtw
or
mull
xchg
popf
stos
out
gs
sbb
scas
stos
out
cmpb
fisttpll
cs
leave
stc
cmpsb
movb
fisttpl
out
or
or
loopne
test
mov
sbb
mov
xchg
pop
ficoms
mov
jmp
out
xchg
dec
in
mov
aad
xchg
lcall
and
mov
inc
cmp
mov
inc
pop
mov
add
add
xchg
push
nop
push
out
stos
addr16
xor
out
jae
stos
aad
sbb
je
mov
loopne
test
mov
or
mov
stc
sub
sbb
jl
inc
mov
sub
lea
and
push
sbb
sbb
dec
icebp
nop
sub
int3
or
lea
call
rol
dec
jge
inc
stos
dec
push
jno
hlt
xchg
ss
mov
mov
in
and
push
or
mov
lcall
dec
lcall
mov
movsl
mov
pop
sbb
lahf
imul
cmp
aam
mov
mov
in
jnp
and
dec
mov
test
or
jge
sub
loopne
hlt
cmp
daa
sbb
cmp
jbe
push
and
ficompl
je
ljmp
mov
push
loopne
pop
xor
and
cmp
fcompl
mov
adc
jmp
or
mov
sahf
lret
jo
gs
xchg
mov
push
popf
loope
das
lcall
loop
inc
adc
mov
mov
mov
mov
mov
push
xchg
jnp
pusha
sub
sbb
or
lret
xor
cli
xor
call
hlt
test
cwtl
mov
les
mov
in
ljmp
shl
mov
movsl
fildll
lret
dec
stc
leave
jbe
divl
add
lret
aas
or
ss
cli
aas
stc
cwtl
insl
lods
icebp
mov
jmp
xchg
pop
mov
mov
adc
mov
movsl
insb
clc
xchg
sahf
sbb
jle
call
mov
mov
lods
inc
stos
xchg
sbb
xor
test
dec
ss
int3
pop
out
cmp
xlat
jno
push
lret
pop
repnz
mov
and
rolb
fwait
and
dec
pop
cmc
into
and
jp
inc
adc
lahf
cmc
jecxz
lahf
xor
and
loope
fdivrl
stc
mov
dec
add
test
lods
sbb
fcoms
pop
add
xchg
pop
lods
dec
or
into
fcomps
arpl
ja
mov
jae
or
push
dec
or
movsb
leave
cmp
inc
stos
cs
sarl
out
or
adc
xor
cmp
jmp
in
jecxz
or
push
cmp
fidivl
and
adc
xor
jnp
add
adc
js
outsl
or
hlt
test
sub
or
dec
push
shr
inc
inc
arpl
jno
fldl
pshufw
adc
pop
fbstp
cltd
mov
mov
fwait
sbb
out
int
mov
jg
and
aam
mov
inc
lock
push
mov
cmp
test
hlt
bound
bound
in
ret
pop
or
cmp
mov
jmp
mov
cmpsl
in
adc
leave
cli
pop
pop
and
pop
aaa
movsl
in
mov
push
cltd
cmp
jecxz
popa
and
cmp
adc
jle
cmpl
xor
mov
movb
push
xor
add
ret
xor
mov
div
fldenv
adc
mov
loope
sahf
insb
ds
or
xchg
add
das
adc
lds
xor
mov
dec
js
pop
sti
adc
dec
dec
pusha
push
push
dec
and
pop
adc
pop
push
ss
mov
xchg
popa
int3
cmpsl
in
stc
mov
std
sub
pop
cmp
or
jl
jo
mov
pop
test
repnz
push
jle
push
cmp
sub
fwait
sub
add
xchg
jl
stos
push
daa
and
lods
mov
jge
pop
loope
push
xor
mov
add
dec
outsl
or
sbb
mov
cmp
jo
sbb
shll
pop
jl
fiadds
out
call
out
out
cmp
xchg
or
outsl
nop
adcb
xor
into
xchg
xchg
mov
movsb
xchg
mov
dec
cmp
fs
sbb
sub
imull
push
cmc
mov
or
cmp
fdivp
cmc
nop
out
in
mov
push
insl
pop
lea
mov
push
movsl
lock
xchg
pavgb
sub
push
cmc
rcll
sbb
sub
inc
sub
pop
xchg
lahf
loop
jno
inc
ret
push
clc
or
andb
push
and
addr16
cmpsl
lret
into
insb
jb
inc
mov
pop
push
and
mov
gs
jl
arpl
les
adc
xor
sbbb
pop
push
call
or
insb
sub
xchg
clc
mov
and
dec
cmp
mov
mov
xchg
pop
cs
or
dec
test
iret
leave
fcompl
inc
mov
push
or
cwtl
inc
adc
icebp
in
jnp
loop
out
inc
ftst
js
add
push
sub
mov
cmpsb
fimull
lods
fcompl
sbb
pop
daa
xor
pushf
fdivr
adc
out
mov
mov
add
jmp
js
hlt
dec
and
dec
jmp
jae
call
in
fisttps
addr16
outsb
push
icebp
test
add
push
clc
xor
sub
ficoms
dec
popfw
mov
xchg
scas
xlat
xchg
and
lods
jmp
shrb
cmpsl
popa
sbb
bound
outsb
shl
sarl
shlb
mov
mov
ficomps
mov
add
test
cli
or
pushf
xchg
push
ljmp
inc
pusha
xchg
xlat
std
push
cli
push
pop
xchg
xor
mov
add
sbb
pop
insb
fsts
shlb
jle
out
out
sahf
jae
fsubr
mov
pop
inc
lcall
mov
push
push
mov
sub
sub
dec
xchg
dec
outsl
mov
pop
ja
xor
out
ja
ud2
loopne
push
subb
ds
sbb
cli
cmp
data16
lock
pop
rcll
cmpb
xchg
shr
test
stos
jo
loopne
xor
enter
jns
and
pusha
adc
in
test
pusha
mov
fcmovne
pop
loope
adc
daa
or
mov
inc
popf
scas
fdivs
insl
or
pusha
scas
shlb
sbb
cmp
mov
aad
mov
adc
cmp
cmpsb
insl
cwtl
push
dec
adc
sbb
xchg
inc
roll
mov
xlat
push
aam
adc
add
mov
and
mov
jmp
and
idivb
dec
cmpsb
inc
outsl
dec
cmpsb
fcoml
fimuls
mov
ficomps
aaa
jbe
int
repz
adc
fsubs
dec
push
mov
mov
mov
loopne
ljmp
jecxz
push
xor
test
inc
test
sbb
dec
inc
scas
rclb
test
inc
push
sarl
sti
xor
xchg
xor
mov
std
sub
sbb
pop
jb
rcrl
decl
xchg
enter
mov
sbb
sub
shl
les
push
cmpsl
cmpsb
jge
push
or
sub
pop
or
leave
repnz
sbb
int
ret
shrl
or
mov
call
bnd
pop
in
adc
mov
mov
jno
outsl
fstpt
ss
mov
clc
push
dec
daa
lods
sub
sub
xchg
jae
mov
sub
adc
push
pop
xchg
add
mov
popa
jo
sbb
enter
dec
or
pop
sub
cmp
inc
loop
lcall
lds
pop
aas
ljmp
sub
out
shlb
loopne
push
add
sub
gs
push
push
imul
mov
icebp
mov
sbbb
push
ss
mov
xchg
add
mov
mov
mov
pop
and
in
fdivr
fnstcw
jo
jp
and
inc
jno
outsl
gs
cmp
loope
mov
int3
shlb
in
push
inc
test
es
xor
nop
xchg
sbb
mov
outsb
mov
int
and
insl
rclb
std
das
into
aam
fs
addr16
mov
mov
test
lcall
mov
and
out
mov
arpl
ss
xor
inc
push
adc
sub
adc
mov
sarl
mov
xor
pop
stos
test
or
xchg
out
inc
sbb
daa
insl
pop
lods
enter
cmp
pop
gs
xor
stos
inc
lea
ret
mov
ljmp
pop
or
push
adc
filds
imulb
fidivrs
repnz
or
mov
fwait
in
cmp
cltd
push
sbb
shl
fists
push
sbb
cmc
pusha
mov
push
pop
test
fisttps
dec
mul
stc
daa
xor
loopne
out
ljmp
dec
xchg
mov
dec
inc
and
xchg
loope
in
popf
notb
xor
push
ret
js
cs
sub
out
add
stos
mov
sbb
xor
adc
inc
leave
pop
jne
jg
cltd
dec
ficoms
js
aas
mov
push
dec
cmp
xor
ljmp
outsl
lret
fnstsw
fsubrl
out
leave
sub
cmpsb
dec
dec
and
popf
jnp
xor
mov
push
fwait
iret
ret
add
pop
ret
cmpsl
dec
inc
xor
sub
lea
jecxz
fwait
xchg
sbb
insl
icebp
xchg
inc
cmp
pop
add
xor
test
fsubs
or
imul
xchg
dec
rcll
mov
into
shll
cltd
push
aam
outsb
loope
lods
and
cmp
shll
cld
xor
imul
xchg
cmpsl
jge
add
mov
pop
sbb
inc
push
fdivs
or
ljmp
sbb
or
pop
pop
mov
mov
cmp
xorl
call
rol
fnsetpm(287
fdivrl
xor
fbstp
adc
mov
or
pushf
cmp
out
aad
adc
jp
repnz
leave
ret
inc
ret
or
fldl
das
or
aaa
cltd
fistpl
arpl
fnstsw
fiaddl
push
cs
hlt
sub
mov
popl
sbb
stc
sar
imul
xorb
in
push
imul
and
outsb
test
cmpsl
sub
divl
pop
pop
outsl
pop
mov
push
fsubr
sti
das
mov
jo
adc
inc
mov
adc
inc
data16
outsb
pop
add
dec
pusha
cmc
xor
loop
pop
add
or
xor
push
sbb
iret
loope
sub
push
or
loope
cmpsb
mov
imul
jp
jp
push
push
adc
xor
jmp
aad
sbb
sbb
imul
dec
xchg
aad
ljmp
into
pushf
mov
sbb
xchg
push
insb
hlt
mov
ja
outsl
jmp
cmp
lods
clc
adc
stc
add
stos
mov
cmp
lret
dec
mov
lret
jge
mov
sahf
inc
stc
mov
loope
pop
cmp
orl
adc
jb
cmp
push
mov
xlat
lahf
push
lret
aam
mov
inc
jns
cmp
jp
adc
shll
stc
fdivrs
dec
lahf
inc
push
sbb
mov
lock
mov
push
sbb
add
lods
sahf
add
outsl
mov
xlat
subb
jnp
pop
ret
shll
movsl
popf
and
inc
inc
lcall
pop
sub
sub
popf
loop
loop
fistps
shlb
loop
jb
hlt
ds
out
shl
rorl
mov
ss
pop
mov
nop
pop
out
push
mov
fdivs
lahf
jecxz
xchg
cmp
fistpl
stos
or
mov
cmp
xchg
pushf
fildl
push
pop
movsb
mov
pcmpgtd
fisttps
or
clc
pop
xchg
in
jb
dec
add
loop
fbld
cmp
xor
xchg
orl
fldl
cmpsl
andb
stc
ss
xor
xor
aam
je
mov
sbb
inc
lret
cmp
adc
out
cmp
je
jecxz
ds
fwait
aaa
sbb
push
pop
pop
pop
push
pushf
add
lock
jp
jae
xlat
inc
push
int3
pop
int3
rcrb
mov
dec
in
mov
dec
in
push
ret
sbb
std
nop
xchg
test
ret
std
fimull
lods
out
lret
movsb
outsb
xorb
lods
sub
xchg
add
push
lret
inc
fdiv
push
loop
sub
addr16
loopne
aas
adc
mov
push
popf
sub
stos
xlat
jbe
out
inc
idivl
aas
insl
mov
test
cld
loop
or
mov
pop
lcall
xor
cs
lahf
add
push
push
inc
xchg
cwtl
cmp
idivb
jge
push
pop
mov
mov
mov
push
add
sti
stos
or
fs
data16
scas
jmp
fdivs
adc
cmpsb
sbb
pop
ret
sub
dec
jb
add
mov
adc
dec
sbb
jb
lods
popa
in
add
pop
add
aam
insb
jg
sar
cmp
push
dec
pop
pop
sbb
sub
aad
gs
call
sub
mov
push
mov
dec
sub
loopne
arpl
arpl
inc
xchg
aas
roll
test
push
and
pop
mov
js
iret
cli
sarb
fcmovnbe
sti
jbe
or
xchg
or
sahf
and
sub
inc
push
repnz
and
notb
push
sub
adc
push
mov
ljmp
push
inc
xchg
mov
pushf
and
sbbw
jle
div
jbe
mov
sarl
sbb
call
sbb
ljmp
lahf
int
lods
push
cmp
push
and
in
or
testb
sbb
mov
mov
int3
cmp
lret
pushf
ljmp
sahf
and
mov
repnz
cwtl
jnp
movsl
ret
dec
mov
add
mov
stc
movsl
repnz
push
sbb
mov
jbe
or
adc
bound
sahf
ud0
fidivrl
and
mov
js
sbb
movsb
inc
pop
sbb
xchg
filds
popl
lahf
shl
or
cmp
jne
popa
mov
movsl
fs
mov
xchg
jp
ret
mov
lock
mov
mov
mov
out
xchg
enter
xchg
ds
xchg
arpl
movsb
jmp
roll
int3
cmp
and
test
pop
pop
cmpsb
test
xor
dec
sbbb
loope
test
pop
mov
out
int3
gs
xchg
jmp
mov
push
dec
out
outsb
subl
enter
in
mov
sbb
enter
add
and
jo
adc
or
add
cmp
cmp
loopne
lods
gs
add
int
out
out
leave
sbbb
fisttps
stos
iret
add
lret
repnz
les
mov
jbe
sbb
das
es
mov
dec
scas
bound
sub
push
fsubl
mov
pop
lods
subb
fs
push
mov
pop
add
outsl
pop
out
shll
je
push
enter
cmp
xchg
or
jmp
ss
sub
mov
in
xor
negl
cmc
push
aaa
fwait
inc
mov
xchg
dec
or
ja
cmp
and
rorb
xchg
inc
sbb
mov
sbb
insb
cmp
jmp
jae
inc
adc
pop
push
inc
in
sbb
sbb
nop
stos
xor
mov
sub
push
jne
aam
fnstenv
jl
jbe
dec
push
in
gs
lods
clc
xchg
push
fdivrs
data16
sub
lcall
or
and
nop
xchg
inc
pop
std
sbb
push
test
mov
xchg
inc
subl
imul
int3
xchg
movsb
mov
jo
jg
dec
mov
cmp
mov
in
aas
cmp
aas
mov
stc
push
out
jno
jno
mov
insl
cmp
imul
lods
jnp
mov
inc
mov
pop
pop
leave
push
call
aam
mov
push
push
dec
xor
sub
inc
sub
das
xchg
mov
mov
loopne
or
mov
fwait
and
imul
xchg
adc
mov
dec
fwait
pop
push
jmp
add
dec
push
jns
push
sub
sub
mov
loop
push
sub
popf
push
jbe
add
mov
jmp
add
lds
pop
jae
lods
leave
in
pop
xor
mov
and
mov
popf
pop
sbb
inc
xorb
gs
dec
outsl
cmp
rcll
mov
dec
mov
sub
mov
jb
jb
mov
lahf
ret
add
dec
lahf
insl
test
lea
inc
outsb
xchg
mov
sub
fcmovnb
pusha
pop
xor
mov
xor
pop
sub
inc
int
cld
arpl
ffree
dec
xchg
or
nop
or
addl
dec
mov
test
bound
push
inc
mov
inc
movsb
outsb
and
das
dec
popf
sbb
std
stos
rcrb
xchg
int
sti
jns
cld
adc
pop
fdiv
mov
and
jge
dec
lock
mov
es
dec
xchg
popf
dec
hlt
in
hlt
cli
fcomi
dec
pop
fadds
xor
lock
push
mov
mov
cmp
push
test
xchg
xchg
jnp
inc
mov
jmp
fnsave
push
nop
mov
mov
js
or
inc
or
test
inc
mov
imul
cltd
and
sub
les
jecxz
movsl
insb
aad
int3
test
sbb
insb
cmpsl
inc
sub
in
sub
jno
jl
sub
adcb
sub
jo
dec
std
test
aaa
or
xor
shll
sbb
gs
subb
add
cmp
cmp
xchg
cmp
cmp
je
pop
sahf
mov
mov
rol
lods
rolb
fsubp
pop
or
mov
iret
and
push
xchg
mov
adcl
addr16
add
cmp
mov
dec
jno
sbb
or
aas
mov
push
test
std
aas
in
int3
jmp
cltd
mov
ds
inc
leave
aad
arpl
aam
rolb
ret
jno
xchg
jbe
push
jl
scas
cli
dec
dec
stos
xchg
inc
iret
xchg
inc
dec
sub
lds
es
mov
out
mull
push
mov
rol
jbe
xchg
repnz
mov
sbb
and
cmc
cmp
add
mov
mov
sub
mov
cmc
rcll
imul
add
sub
mov
mov
lret
push
inc
push
and
xchg
and
xor
mov
shl
divl
pop
push
rcrl
push
inc
gs
inc
int
mov
xor
dec
bound
adc
cmp
fadds
xchg
test
xchg
popf
push
sub
dec
adcl
test
bound
stos
pop
fcomp
fimull
mov
stc
adc
push
inc
adc
push
adc
push
popf
pop
or
lea
inc
jecxz
xchg
xorl
fwait
push
in
addr16
outsl
xor
xchg
fiadds
mov
jecxz
les
sub
ljmp
outsb
inc
jns
jb
jae
lea
dec
push
mov
scas
xchg
pop
dec
inc
mov
pop
pop
data16
es
xlat
pop
in
iret
sarl
scas
jecxz
aas
mov
mov
mov
shll
cltd
and
jmp
dec
out
pop
adc
fdivrs
mov
dec
inc
test
outsl
xchg
xchg
add
rclb
bnd
dec
rorl
sub
jp
in
or
sub
inc
je
xchg
push
loop
lds
adc
xor
testl
pop
jmp
xor
xchg
filds
ror
mov
sbb
loope
mov
sub
jl
test
sub
adcb
es
push
aaa
xor
xchg
or
sbb
out
sub
fcomp
bound
das
das
jno
or
jmp
movsb
dec
add
lahf
mov
int
cmp
xchg
jno
xor
enter
aas
dec
shl
xor
mov
mov
mov
dec
jmp
out
mov
or
mov
push
jecxz
mov
mov
inc
adc
jmp
fwait
mov
repnz
xchg
shrl
sbb
sarb
push
negb
xor
inc
das
and
mov
cmp
mov
bound
fwait
sbb
add
sub
adc
insl
add
inc
mov
in
mov
popf
push
or
mov
mov
fmul
into
fsts
sub
imul
je
mov
lods
cmp
mov
jle
jne
xor
pop
mov
lahf
clc
scas
test
in
inc
inc
pop
fs
or
cmpsl
outsl
mov
push
sbb
add
repz
movsl
int3
leave
iret
daa
std
add
jne
gs
stos
sti
sbb
push
ret
mov
cld
addr16
xor
lock
mov
pushf
sahf
in
popa
jp
jo
and
ja
lods
mov
lock
xor
mov
movsb
jmp
jecxz
cwtl
ds
es
dec
cltd
mov
pop
ss
loopne
push
jl
mov
mov
mov
jo
mov
es
sbb
out
test
mov
ret
data16
sbb
adc
icebp
sub
push
ret
cmp
out
jl
adcb
aaa
push
push
fcoms
mov
fisttpll
pop
aas
adcb
cmpb
xchg
cmpsl
inc
or
cmpsb
or
xor
xchg
xchg
out
jg
cwtl
test
mov
js
out
or
pop
add
lods
imul
in
aaa
and
cmpsl
js
pop
and
cmpl
push
push
aaa
jb
xchg
iret
and
ljmp
sbb
xchg
popa
mov
and
movsb
out
int
mov
sbb
adc
repnz
mov
dec
loop
fadds
loope
push
push
shl
cmp
push
xchg
sti
ficoms
cmpsb
jge
jecxz
xor
mov
push
fnstsw
jo
nop
and
mov
fcom
loop
mov
out
int3
push
mov
push
lret
cmp
shll
and
cmp
sub
pop
fisubrl
popf
nop
xor
leave
lds
inc
push
inc
rcr
nop
xchg
arpl
out
push
cli
ret
ds
cwtl
mov
stos
outsl
lret
shr
loope
jl
push
xchg
sub
add
nop
adc
shrl
imul
lods
add
jo
int
shl
shll
in
pop
fwait
push
and
push
add
jg
filds
lock
pop
jl
fs
orb
xlat
cld
adc
mov
fidivrs
push
psrld
cmp
and
orl
mov
icebp
lahf
push
pop
in
lock
clc
jge
ljmp
mov
in
dec
sub
decb
faddl
and
lds
cwtl
and
jo
inc
mov
fs
pop
add
xor
addr16
add
imul
adc
mov
loop
inc
dec
pop
iret
mov
outsl
mov
stc
push
jo
movups
pushf
adc
xchg
iret
jg
test
push
arpl
shlb
or
jae
mov
lcall
lret
sbb
pushf
mov
pop
and
jmp
rcll
push
jno
or
notb
push
jge
mov
or
mov
dec
adc
out
cli
sahf
xchg
imul
pop
or
test
mov
sub
cli
jmp
xchg
in
push
adc
fldcw
mov
or
or
sbb
push
xor
mov
cmpsb
adc
into
pop
dec
xor
jnp
mov
mov
loopne
pop
inc
cwtl
lds
dec
mov
data16
jbe
cmpsb
int
mov
call
ret
repz
mov
cmpsl
xlat
aad
inc
jb
out
sub
cmp
adc
cmp
call
jecxz
jp
add
xor
mov
inc
or
lods
mov
lock
xor
inc
dec
sbb
movsl
movsb
scas
pushf
xchg
test
sbb
stos
or
faddp
stos
mov
out
jle
arpl
pushf
bound
rcr
aas
divb
ret
lods
pop
stc
in
lea
or
je
popa
lcall
pop
push
in
mov
imul
fstpt
jne
jbe
add
dec
leave
jmp
adc
cmc
xor
addb
cs
aad
movsl
repz
imul
xor
data16
test
scas
xchg
setbe
push
out
dec
ljmp
neg
mov
dec
mov
sub
mov
add
push
cmp
push
sub
stos
push
xlat
aam
mov
stc
test
mov
cmpsb
adc
stc
inc
fnstcw
push
push
jae
roll
push
popa
movsb
imul
sbb
popa
popf
idivl
subb
xor
xchg
movsb
divb
test
pop
sbb
ds
adc
pop
pop
mov
loopne
std
mov
je
sti
dec
add
mov
push
ret
push
fidivs
mov
cs
hlt
imul
jp
pop
add
ficoms
jb
or
cli
packsswb
rcr
out
and
mov
push
xchg
test
push
pushf
sahf
out
fisubl
push
rcrl
fdivr
xor
push
add
negb
hlt
dec
sti
lods
xor
push
loopne
in
mov
in
lahf
ficoml
pop
scas
xchg
jle
mov
mov
outsb
push
in
insb
mov
fisttpl
push
scas
push
fsubrs
out
xorl
cmp
rorb
das
js
lret
cmp
lods
cmp
outsl
jmp
stos
and
xchg
fistps
add
sarl
mov
scas
ja
push
mov
jnp
adc
loopne
pushf
outsl
sub
jg
fiaddl
fs
out
jg
and
clc
pop
outsb
test
xor
add
lods
sub
sub
mov
lock
adcl
mov
and
xor
rolb
orl
mov
outsb
cmp
dec
jnp
scas
mov
imul
push
sbb
cld
fldenv
cmp
rorb
mov
mov
loope
jns
lods
add
sbb
shrl
mov
inc
lret
data16
imul
imul
jo
mov
adc
sbb
into
sbb
push
ret
imulb
pop
mov
repnz
mov
pop
cmp
rorl
rclb
and
lret
inc
cmp
out
cld
adc
push
add
pusha
out
fmull
clc
or
cmp
jne
fwait
js
mov
jp
jns
xchg
adc
orb
mov
push
adc
adc
aas
pop
sbb
loope
stos
imul
pop
ds
outsb
or
shll
inc
push
outsl
lahf
push
jle
mov
ja
inc
cmc
shll
mov
leave
mov
inc
mov
mov
or
add
mov
shl
or
loope
pop
xchg
mov
test
int
add
stos
cli
cmp
test
ret
dec
xor
out
divl
icebp
test
dec
fnstcw
clc
insl
or
cs
mov
adc
ljmp
cmp
aaa
mov
clc
push
test
dec
test
mov
sbb
dec
jo
lret
mov
pop
push
adc
cs
jne
fadd
add
xlat
cwtl
cmp
sahf
push
aam
jnp
push
arpl
movsl
testb
fst
jl
jb
addr16
and
xchg
dec
xlat
and
ret
xchg
out
xchg
dec
cmc
icebp
add
mov
cld
stos
adc
adc
sub
adc
es
insl
mov
insb
and
adc
xchg
sub
jns
inc
cs
call
dec
inc
inc
popl
enter
adc
sbb
sahf
jg
xchg
mov
or
cld
inc
insl
loop
xor
daa
adc
adc
lret
xor
out
loope
ror
add
jnp
cwtl
or
pushf
mov
movsl
inc
pusha
fcompl
pop
pop
inc
sub
add
mov
hlt
inc
xor
pop
pusha
sbb
pop
movsl
or
adc
mov
mov
push
dec
int
shl
aam
mov
xchg
ljmp
jp
cmpsl
add
mov
insb
jae
out
mull
inc
in
ret
enter
jns
mov
pop
out
stos
push
aas
dec
inc
les
sbb
xor
aaa
jge,pt
jne
and
push
mov
sub
mov
ja
pusha
sti
xor
mov
jae
mov
outsl
or
mov
jmp
or
ds
pusha
add
jp
pop
lahf
icebp
inc
and
in
push
or
bound
mov
mov
adc
cmp
ljmp
shrl
pop
cld
xrstors
jne
mov
in
mov
imul
jecxz
insl
popa
scas
das
jo
cmp
xlat
or
loope
cs
mov
rcrl
jg
cltd
push
outsl
mov
cmp
insb
stc
in
bound
loopne
test
add
fildl
mov
stos
lods
and
icebp
xor
and
mov
adc
push
adc
movsb
out
pop
pop
stc
out
leave
mov
dec
xor
sub
sahf
mov
popa
xlat
out
inc
stos
cmc
mov
in
ret
hlt
mov
cli
dec
push
aas
outsl
push
cmp
xchg
loop
in
fdiv
ss
cld
push
jnp
sbb
adc
inc
push
icebp
adc
shr
inc
push
xchg
jmp
sbb
or
das
lahf
mov
cmp
adc
loope
inc
sbb
out
mov
pop
gs
sbb
divb
orb
movsb
mov
push
loop
jp
test
add
adc
inc
mov
rcrl
pop
aam
add
insb
fdivl
mov
stos
xchg
inc
sets
adc
das
std
push
fstps
dec
pop
aas
in
js
movsb
cmp
shrd
pop
fisubrs
hlt
or
mov
jl
mov
mov
fstpl
adc
fildll
fnstcw
lret
lea
out
inc
sbb
xchg
pop
ret
ficomps
fbld
or
mov
jp
xchg
test
jg
or
pop
dec
call
mov
popa
and
pop
jo
sub
sbb
adc
test
in
dec
outsb
lds
adc
mov
jae
out
in
in
inc
or
imul
dec
pop
repnz
jnp
ret
and
inc
mov
outsb
fwait
outsb
cmp
mov
dec
test
insl
jae
and
jb
ds
fisubrl
and
orb
cmp
pop
jb
inc
dec
push
ljmp
inc
sbb
dec
xlat
addr16
push
mov
cs
fadd
lods
fmull
psubusw
shrl
push
notl
push
in
cmc
es
shrb
fadds
mov
push
stos
enter
setnp
pop
ret
xchg
aaa
mov
test
mov
or
pop
clc
insb
imul
test
cltd
cltd
aaa
std
jmp
test
cltd
add
push
add
daa
xchg
loop
inc
xchg
cmp
add
pushf
push
sub
pop
aad
sbb
jb
aaa
mov
test
cmc
push
xor
and
xchg
add
int
xchg
and
cmc
cld
cmp
jl
lock
filds
push
out
fcmovne
mov
xorb
push
or
mov
dec
outsb
mov
jae
lret
dec
test
stos
shrl
mov
xchg
scas
or
xor
aas
jne
sbb
cltd
cmp
pop
lds
rorl
in
aad
jmp
fldenv
stos
mov
aas
rcr
push
sbb
sbb
stos
imul
lock
inc
cltd
repz
jbe
lcall
inc
popf
and
int
das
add
loopne
mov
sbb
or
dec
inc
sahf
and
or
jge
js
sbb
and
and
fcomps
push
mov
push
add
push
movq
pop
pop
mov
call
inc
push
pushf
mov
push
aam
arpl
shl
push
ja
imul
in
test
f2xm1
in
mov
jb
jns
notb
ljmp
jo
popf
mov
or
insl
sub
or
adc
lea
xchg
mov
outsb
inc
cmpsl
movb
enter
adc
arpl
scas
mov
sub
enter
sub
sbb
idivl
xchg
mov
xor
jmp
dec
imul
pop
ds
inc
mov
and
or
popa
fidivl
xor
dec
test
lods
sbb
mov
ja
mov
xchg
loop
xchg
mov
xchg
mov
or
mov
cmpsl
sub
jns
jg
jmp
rol
sti
stos
fs
mul
xchg
push
mov
mov
sbb
xchg
mov
pop
pop
cwtl
mov
fsubrl
into
sar
dec
jmp
jnp
jle
or
jno
clc
push
xor
xchg
and
push
xor
sub
dec
xchg
mov
aas
push
out
pop
and
stos
js
das
lds
call
mov
scas
inc
lret
lcall
ret
fisubrl
mov
mov
cmpsb
jb
loope
jecxz
cmp
imul
cmpsl
mov
xchg
das
fs
nop
fwait
cmp
fnsave
or
cmpsl
and
sbb
repz
pop
xor
cmp
punpcklwd
outsl
shl
mov
popa
sbb
pop
xlat
dec
xchg
mov
adc
jb
pop
pop
sarl
outsb
stc
xadd
inc
cld
xor
xor
icebp
mov
in
xchg
arpl
pop
push
in
pop
arpl
adc
dec
lods
pop
nop
repz
sarl
test
adc
cmpsl
loope
mov
lea
pop
pusha
dec
cmp
jae
mov
jno
inc
insb
or
fimuls
or
hlt
pop
movsl
sub
rcrb
jp
sub
ds
adc
into
xlat
xor
fldt
fs
dec
cmpl
sbb
mov
inc
lahf
cmpb
fiadds
subl
out
xchg
lods
cltd
test
fwait
stos
ljmp
int
jb
popf
push
pop
push
push
shrb
pop
inc
out
jecxz
rolb
push
jg
cmp
in
setg
std
int
nop
iret
xchg
ret
push
flds
push
sahf
jg
push
jne
inc
imul
push
pop
mov
or
inc
and
das
mov
lods
xor
das
mov
mov
shrb
adc
insb
push
or
mov
rcll
push
adc
xchg
fists
or
mov
clc
xchg
and
fs
push
push
inc
ret
andl
bound
bound
mov
push
pop
bound
fs
xor
in
sbb
cwtl
call
insb
jmp
xchg
jb
call
cmpsl
sbb
jbe
push
push
les
sub
pop
add
mov
or
aaa
xor
sub
ucomiss
les
cmp
js
cmc
pop
pop
sbb
mov
pusha
sub
pop
mov
outsb
and
push
pop
mov
mov
in
mov
add
aad
icebp
sub
lcall
fcomps
enter
mov
test
lret
pop
iret
imul
xor
cmpxchg
cmp
sub
lret
mov
jp
dec
jp
mov
std
gs
xchg
cmp
shl
xchg
pusha
scas
lret
aas
pop
push
push
andl
jbe
push
dec
lock
insb
or
push
cmpsb
imul
xor
inc
sub
jb
dec
pop
xchg
push
and
mov
fdivl
out
xor
leave
arpl
in
xor
push
repz
mov
jp
cwtl
jnp
mov
pop
lods
sub
fdivrp
stos
xor
fcoms
popa
adc
fs
jo
pop
ficoml
push
push
rorb
data16
testl
fs
iret
adcb
sub
lahf
iret
and
mulb
and
loopne
and
shlb
cld
in
or
ljmp
out
rorl
out
mov
sti
shr
mov
into
xlat
xchg
sub
xor
decb
cmpsl
fstpt
inc
sbb
fdivrp
mov
stos
nop
cli
sbb
push
ljmp
ja
les
aaa
jecxz
repz
ss
icebp
xchg
pop
mov
and
lods
scas
es
push
adc
test
inc
nop
cltd
dec
xchg
jle
in
test
cmp
jl
cltd
mov
dec
or
xor
ja
inc
add
push
scas
lahf
and
insl
add
inc
xchg
xor
lds
xor
pop
inc
pop
adc
movsl
jbe
dec
sbbb
adc
add
mov
movsb
xor
loop
mov
mov
pop
push
inc
pushf
stos
jmp
cmpsl
int3
fsub
dec
inc
sbb
pop
jno
and
push
sbb
imul
adc
mov
jne
jp
xor
test
dec
push
pusha
jmp
mov
mov
jl
neg
jecxz
pop
jg
imul
ret
sub
inc
ret
leave
pop
cld
rorb
sub
mov
adc
jp
data16
fildll
mov
js
mov
movsl
in
cwtl
jecxz
outsl
rol
sub
gs
dec
xor
jns,pn
inc
test
pop
push
sti
out
pusha
mov
mov
cmp
sarl
xchg
or
gs
xor
out
xor
sbb
adc
ljmp
imul
fnstsw
in
sahf
mov
arpl
mov
xlat
popf
xchg
mov
faddl
dec
push
jmp
popf
mov
rorb
mov
sbbl
dec
dec
jmp
nop
xchg
xor
stos
test
jno
lods
adc
pop
or
mov
mov
cli
popf
xor
pop
sahf
dec
xchg
pusha
xchg
mov
rcrl
repnz
insb
orl
xor
jae
mov
call
dec
cwtl
aad
bnd
adc
jne
cli
mov
out
mov
rcll
int
jbe
mov
gs
call
cmp
sub
and
cmpsb
dec
lock
push
jnp
fwait
xor
stos
or
sub
mov
js
adcl
cmp
mov
cltd
pop
movsb
mov
sbb
dec
mov
jne
or
pusha
cmpsl
loope
mov
pop
mull
sbb
jmp
jge
cmpsb
add
mov
icebp
cltd
and
xchg
hlt
inc
cmp
aas
data16
sbbl
add
ret
xor
cmpl
or
xor
inc
insl
mov
jbe
mov
or
and
and
xor
and
loope
ret
fisubrl
mov
mov
cmp
ret
or
loopne
test
loop
jmp
pop
movsl
cmp
repnz
add
call
adc
notb
aad
ficomps
dec
push
sub
imul
into
and
insl
mov
lods
fadds
test
ret
lret
mov
push
and
insl
inc
or
inc
dec
negl
xchg
inc
push
sub
sarb
aaa
gs
out
jb
pushf
add
popa
mov
add
lahf
mov
mov
push
outsl
dec
mov
sti
push
jo
jns
cmpsb
dec
lds
dec
sarb
add
and
pop
pop
pop
cmp
sbbl
mov
testl
mov
imul
pop
push
sub
repz
push
push
pop
imul
sahf
fdivs
fldl2e
inc
xchg
mov
sbb
in
xlat
jmp
fwait
inc
sbb
xchg
push
test
outsb
adc
int3
fistpll
lret
push
xlat
push
ljmp
addb
sbb
xchg
imul
ja
mov
movsb
bound
adc
das
xor
push
mov
enter
and
cs
mov
adc
loop
loop
mov
test
adc
loop
sub
mov
sub
cmp
outsb
dec
aas
loope
daa
xor
dec
hlt
adc
icebp
movsl
fistl
arpl
xchg
flds
add
shr
imul
sbb
xchg
stos
std
les
clc
lahf
in
dec
stos
stos
pop
jnp
stc
pop
fisubrs
inc
ljmpw
mov
xor
dec
es
inc
and
stos
mov
sbb
adc
or
inc
je
xor
pop
cmp
pop
mov
cmp
jle
clc
andb
xor
stos
jg
andb
push
inc
outsl
add
insl
dec
sub
lods
dec
mov
shrl
pusha
inc
jge
pop
xor
leave
jns
dec
nop
dec
mov
cmp
xchg
stos
mov
cmp
pop
sub
add
cmc
cmpsl
loope
pushf
es
dec
jne
incl
jmp
cmpsb
adcb
push
jmp
adc
cmpsb
sub
pop
jb
and
gs
jl
dec
icebp
inc
in
push
mov
pop
xor
cmp
xchg
push
jle
int
pop
mov
mov
xchg
mov
notb
push
aad
lea
ds
lods
sub
lahf
push
fldcw
les
jp
mov
mov
xlat
pop
popf
inc
xchg
daa
pop
inc
sub
inc
or
fwait
jmp
int
lcall
pop
push
das
xor
es
dec
and
jbe
push
xor
fwait
aad
cltd
jecxz
cwtl
and
stc
lock
pusha
sti
insb
sbb
in
fiaddl
and
fidivrs
mulb
dec
sti
das
ja
sbb
inc
xchg
dec
jmp
ret
scas
pop
mov
add
jecxz
push
out
pop
xchg
xor
shll
incl
jnp
pop
test
push
xlat
adc
mov
jnp
dec
movsb
push
add
pop
pop
cli
mov
fsubr
and
cmp
xor
mov
shlb
fidivrl
pop
inc
or
std
jge
arpl
sub
int
mov
repnz
pop
mov
ljmp
pushf
or
cmp
sbb
xor
inc
clc
out
sbb
lret
cmp
fwait
leave
out
push
in
xchg
cwtl
outsb
insl
decb
mov
data16
cmpsb
push
xor
mov
jge
rcr
and
jnp
sti
lods
lahf
push
push
cmp
push
xlat
clc
pop
mov
sub
fnsave
sbb
cmp
test
xchg
shrl
pop
mov
xlat
popa
pop
hlt
es
out
sub
loopne
into
sbb
lods
mov
loop
adc
xchg
sbb
mov
push
sub
out
jmp
dec
test
sub
mov
jbe
push
and
jg
iret
push
xchg
mov
nop
lods
aam
mov
jg
sub
xor
repz
cwtl
pushf
pop
mov
dec
dec
les
clc
rcr
lea
rcll
imul
std
xchg
push
popa
lods
out
icebp
shlb
add
arpl
movsb
push
mov
jge
into
mov
and
bound
in
xor
lds
adc
jmp
imul
add
in
xchg
fcomps
data16
adc
mov
mov
mov
jg
push
ds
adcb
adc
ret
jl
icebp
shrb
push
sub
sbb
sub
loope
test
xchg
insb
pop
pushf
lret
and
push
lods
xor
dec
pop
loop
or
hlt
mov
faddp
pop
lds
aas
dec
test
cwtl
jb
imul
je
add
cld
jp
int
xchg
testb
int3
xorl
adc
stc
mov
push
cmpl
xlat
mov
sub
popf
test
sbb
out
nop
inc
mov
pusha
cld
pop
pop
inc
ds
daa
mov
sub
pop
fs
inc
js
push
jo
test
adc
xor
and
xchg
pusha
test
pop
sti
xorl
add
push
add
xchg
cltd
adcb
pop
ficoml
jp
lods
imul
push
int3
push
es
fcoms
and
xor
divl
inc
aad
push
xor
ja
movsb
inc
ss
and
fists
cmp
jmp
mov
fsubrl
xchg
iret
enter
xchg
sub
inc
lret
mov
dec
fdivp
shr
lret
xchg
lods
test
pop
pusha
and
shlb
dec
sub
test
xor
mov
mov
mov
sbb
popa
xchg
mov
and
sbb
repz
pop
movsb
stc
xchg
stos
mov
xchg
lcall
cmpsb
aaa
or
stos
pop
adc
iret
inc
or
push
add
outsl
cmp
addb
push
push
sbb
outsb
jns
mov
sub
lods
rclb
jno
lds
sbb
mov
or
dec
jnp
push
sub
js
xchg
sbb
mov
mov
pop
in
jl
out
decb
mov
inc
jle
lret
test
test
push
dec
out
mov
lock
enter
inc
dec
dec
testb
push
loope
call
mov
dec
mov
adc
mov
sbb
pop
adc
add
adc
or
mov
sarb
jnp
lock
pop
jo
jae
sbb
inc
jl
pop
push
push
mov
or
int3
dec
xchg
and
dec
loop
mov
call
sarl
sbb
mov
cmp
loop
fdivl
sbb
cltd
adc
mov
cmp
and
cmc
inc
mov
cld
inc
mov
xor
or
mov
sbb
jecxz
xchg
adc
lock
add
testb
xchg
mov
fwait
loop
fldcw
dec
sbb
je
in
push
push
sub
jo
and
cs
nop
adc
lds
rclb
xchg
mov
or
sbb
dec
sbb
dec
or
push
pop
les
xor
sbb
xchg
test
dec
xchg
mov
repz
adc
xor
neg
push
inc
or
xor
rorb
jle
push
loop
stos
sti
pop
stc
jne
pop
dec
bnd
mov
aas
adcb
lods
mov
sbbl
stos
push
gs
stc
popa
clc
mov
adc
add
push
jmp
mov
push
push
negb
xchg
pop
mov
aas
jmp
xlat
rolb
call
loopne
push
push
or
loope
jl
enter
mov
int3
test
push
pop
sbb
adc
lahf
sbb
add
icebp
and
mov
stos
std
cmp
xor
pop
xor
mov
imul
push
sahf
out
lcall
cld
add
lret
cmp
movsl
dec
ret
in
daa
dec
cld
aad
daa
mull
xor
jp
insl
sub
adc
and
sbb
sbb
jnp
popa
xchg
mov
adc
push
inc
cltd
mov
ljmp
cmpsl
shlb
sbb
sub
in
aas
pop
mov
inc
jmp
sbb
xchg
sbb
repz
dec
fldcw
dec
fstps
loopne
nop
insl
or
int
dec
sahf
push
int
out
je
push
add
mov
lock
ret
out
pop
mov
inc
dec
leave
adc
mov
psubsb
mov
fstpl
test
xchg
iret
loopne
ljmp
xchg
jecxz
sbb
sti
mov
jns
mov
je
fimuls
lods
lret
out
xchg
inc
fistps
mov
in
pop
push
dec
fbld
push
jno
fnstcw
roll
loop
push
cli
gs
mov
add
sarl
mov
out
cmpsl
pop
sbb
int3
adc
andl
jae
inc
outsl
sbb
mov
xor
and
dec
cltd
sub
lock
xchg
std
push
and
xchg
outsl
mov
cs
xor
sbb
push
outsb
ret
pusha
mov
sbb
stos
ret
lods
inc
cmpsl
xor
pop
lods
push
mov
mov
sub
push
aam
ljmp
jo
notb
movsb
out
or
in
or
xor
sbb
popa
lods
mov
dec
dec
adc
fimull
dec
imul
test
jl
clc
dec
xor
push
insl
shll
dec
cmpsl
mov
cmpsb
sub
cmc
push
pusha
dec
mov
rcrb
mov
out
xchg
fldenv
add
mov
push
cmp
cltd
test
shrl
sub
repz
pop
adc
cmp
fcoml
sub
test
xchg
xor
mov
dec
sub
adc
loope
push
add
mov
sbb
loopne
bound
sub
aad
sbb
pop
jns
loope
sub
aam
jg
dec
push
imul
leave
dec
add
movsb
pop
sub
shl
xchg
jge
mov
mov
les
mov
out
mov
std
sub
mov
xor
mov
leave
insl
mov
rol
jno
add
push
cmc
das
leave
bound
or
out
imul
inc
mov
mov
andb
imul
push
fwait
cmc
jle
cld
leave
fnstsw
in
push
out
and
adc
or
cmpsl
or
icebp
jns
les
sarl
sahf
inc
imul
stos
sbb
mov
and
ret
outsb
xchg
push
pop
or
mov
adc
test
out
xchg
or
pusha
stc
fnstenv
inc
sub
push
das
cmpsl
fiadds
sub
fdivr
movsb
sbb
movsb
mov
mov
push
jae
or
jno
shll
pop
cmpsl
enter
pop
mov
test
aad
dec
daa
gs
out
mov
xchg
das
mov
subb
lea
inc
ja
ficomps
inc
jns
and
cmpsl
sub
cld
lcall
jbe
in
js
dec
dec
jo
jno
shll
add
xchg
jl
in
xor
fdiv
mov
fiadds
cmc
daa
jo
dec
filds
push
int
fdivs
cwtl
mov
lahf
out
lea
cmp
test
xchg
jo
cmp
aam
hlt
sub
pop
gs
repz
sahf
fwait
js
mov
mov
and
loope
lods
sti
adc
sbb
inc
push
int3
push
cmp
mov
rcll
sbb
dec
sti
dec
shlb
xor
les
stc
sbb
std
ja
push
loope
popf
cltd
les
in
pop
int3
scas
sbb
sbb
pop
xchg
mov
pop
push
xchg
xchg
mov
popa
add
xlat
mov
xchg
xchg
xchg
push
fstpl
push
faddl
jmp
push
pop
cmpsb
pop
fisubl
jno
in
mov
sti
aam
mov
dec
outsl
scas
or
outsl
adc
movl
sub
sbb
or
nop
push
push
xchg
mov
pop
xor
cmpsb
dec
loope
inc
sbb
jmp
outsl
mov
fwait
aam
aas
push
mov
scas
mov
or
cmp
int3
outsl
mov
mov
pop
test
adc
lret
pop
je
dec
xor
push
aas
cmpsl
int
jecxz
call
adc
in
xor
cmc
pop
and
adc
fildl
repz
loope
and
xor
in
leave
adc
cmpsb
mov
cmp
dec
insl
push
cmc
sbb
fistl
dec
push
dec
pop
adc
mov
int
fbstp
icebp
stos
xor
divl
pusha
jnp
les
ja
lock
pop
shrl
jbe
jo
fs
adc
pushf
aas
movsb
add
repz
test
fs
pop
mov
rcll
mov
adcl
jge
movsb
adc
jb
mov
in
scas
jns
dec
xor
dec
into
fwait
out
lock
inc
fidivrl
adc
rol
fisubrs
jmp
scas
add
or
adc
jmp
pop
xchg
or
fnstcw
mov
cmpsb
les
push
fists
jae
pop
dec
inc
movsb
mov
jns
adc
popa
and
imul
or
mov
push
pop
insl
imul
mov
mov
mov
stos
in
in
dec
popf
pop
stos
or
int
aaa
cwtl
jo
jge
mov
orl
sub
xor
fisttpll
jb
pop
pop
call
outsl
cld
mov
xor
jmp
aaa
mov
psrlw
and
aas
or
outsl
mov
shll
stos
mov
pop
push
and
mov
cmp
lret
and
in
dec
add
prefetchw
or
cltd
push
insl
nop
jl
or
and
ffreep
outsl
push
push
sahf
xchg
fiadds
les
add
inc
jl
aad
ja
rol
mov
mov
xchg
jecxz
inc
mov
jno
scas
insl
imul
insl
mov
push
lahf
xor
popf
repz
xchg
aas
es
cmc
das
addr16
loop
mov
push
imul
negb
adc
mov
jge
add
cmpsl
aam
or
and
jbe
and
fldcw
inc
fld
lahf
aas
and
add
push
jbe
and
xchg
fucomp
fldenv
cmp
mov
call
add
arpl
or
outsb
shr
ja
dec
aaa
call
mov
cmc
ficompl
adc
and
lret
xchg
mov
or
arpl
shl
adc
imul
pop
xchg
js
adc
ret
dec
lods
mov
cmp
nop
jg
mov
cmp
push
xchg
dec
aam
xchg
jmp
ficoml
sub
ss
stos
into
jo
add
xor
sti
push
mov
test
je
dec
add
jae
push
in
cmp
mov
push
cs
aas
jl
cmpsl
pushf
mov
mov
test
and
aas
cltd
das
dec
push
fcomps
adc
gs
sub
inc
xchg
scas
xchg
pop
inc
push
mov
call
fnstcw
fsubr
ja
jne
add
dec
jecxz
cld
dec
sbb
or
jmp
ficoms
mov
scas
pop
call
xor
lret
sub
data16
nop
mov
push
stos
dec
repnz
mov
rclb
addr16
push
dec
and
scas
xchg
ret
and
divl
fidivl
inc
push
fisttpll
cmp
fsubs
lcall
inc
out
xor
sub
imul
sub
ja
mov
push
mov
xor
push
lods
dec
push
adc
js
mov
mov
and
mov
dec
pop
add
mov
aad
cmp
in
pop
daa
fistps
mov
pop
sbb
les
xlat
xchg
dec
mov
pop
push
or
jbe
mov
pop
jge
scas
or
ret
ret
push
pop
sbb
scas
fstl
js
xlat
test
dec
xor
sbb
cmp
adc
jmp
xor
stc
fwait
xchg
xor
add
mov
dec
outsl
lock
cmp
and
push
xchg
fwait
cld
adc
ret
gs
fucomi
mov
sti
cmpsl
faddl
xchg
mov
xchg
stos
nop
push
xchg
int
aaa
fs
fimull
ljmp
dec
adcl
pop
adc
inc
cmp
jp
int3
mov
lock
rorl
loopne
jae
cwtl
push
imul
inc
lods
jae
mov
inc
test
mov
insl
jmp
test
jae
bswap
cmpsb
add
imul
addr16
mov
and
push
sub
pop
out
dec
jecxz
sbb
in
push
lahf
jge
push
ljmp
vpminsw
or
and
xor
add
jmp
lcall
xor
sub
xchg
movl
ret
clc
mov
push
push
mov
into
jbe
dec
pop
inc
iret
lea
ret
cmpsb
mov
jmp
adc
test
mov
and
jne
or
xor
mov
inc
pop
mov
inc
add
ret
cmpsl
addb
lahf
sbbl
mov
mov
or
pop
push
iret
mov
xor
rol
call
sar
fimuls
add
jge
data16
sub
popf
sahf
inc
cmp
xchg
pop
cmpsb
xor
lahf
xor
mov
mov
xor
hlt
and
lea
add
inc
push
jnp
es
xchg
mov
adc
daa
das
clc
outsl
sub
mov
call
in
out
shlb
mov
push
decl
test
mov
arpl
outsb
fbstp
sub
arpl
inc
or
lock
adc
cli
ja
sub
sarb
dec
pop
sbb
les
pop
inc
aaa
jno
sub
xchg
pop
mov
adcb
or
jg
int
and
jae
add
ret
repz
std
fmuls
add
je
lret
inc
pop
adc
insb
jmp
mov
jge
rclb
sub
sti
jmp
cmp
iret
pop
ljmp
inc
xor
add
push
dec
mov
xor
jg
jle
sarb
add
xor
out
cs
idivl
rolb
cld
lret
in
sub
sbb
lea
out
inc
mov
cwtl
inc
or
in
sbb
imul
or
rclb
adc
inc
fwait
push
mov
shrb
push
xlat
sub
sub
mov
fisubrl
pop
lock
push
pop
icebp
stos
sbb
cmpsb
dec
movb
inc
les
pop
fs
fnstenv
mov
std
mov
mov
pop
xor
push
sbb
and
dec
mov
movsl
adc
mov
cmp
js
cmpb
inc
mov
cltd
jle
sbb
pop
sti
test
inc
into
push
enter
fidivl
enter
push
fcmove
test
xchg
pop
lcall
shrl
dec
push
xchg
jae
stos
xor
jae
sub
dec
fs
ss
movsb
ja
pop
out
add
in
push
das
loopne
aas
pop
xor
aaa
cmpsb
adc
cld
mov
inc
cmpsb
pusha
stos
mulb
mov
fwait
xchg
std
mov
loopne
out
xor
push
and
xorb
cltd
cs
in
and
jb
mov
shrb
mov
or
adc
dec
dec
or
dec
pop
stos
imull
and
popf
stc
repz
lea
pop
addr16
sub
mov
push
mov
dec
test
pop
cld
sbb
les
repnz
rorb
test
out
ss
cwtl
lret
stc
jl
jg
jne
idiv
inc
and
into
sub
fldenv
cltd
mov
cmpsl
out
mov
or
fwait
dec
icebp
xor
push
inc
and
loope
test
mov
sbb
sub
subb
cwtl
inc
ret
xchg
and
sahf
test
jecxz
fwait
movsb
js
lods
jns
push
dec
ror
jle
lock
mov
add
popa
add
xchg
xchg
popa
call
add
pop
push
fcmovne
nop
std
dec
movnti
int3
inc
or
adc
inc
lcall
test
leave
cmp
mov
mov
dec
jmp
mov
sahf
jl
push
sub
mov
mov
push
ret
dec
xchg
adc
fiadds
sub
cmpsb
or
stos
into
jne
std
aas
push
xchg
inc
mov
stos
test
adc
cs
add
orb
inc
jle
arpl
loopne
push
jl
daa
sub
adc
lret
xor
jecxz
test
ja
or
adc
cltd
xor
inc
out
jns
inc
push
mov
jbe
shll
sub
or
adc
jmp
insb
dec
pop
xor
adcb
ret
cmp
inc
dec
fsubs
mov
cld
cmp
pop
ret
stos
imul
aam
mov
mov
jns
or
dec
cmp
push
mov
xchg
or
push
sbb
sub
xchg
add
mov
outsl
in
sbb
push
not
mov
cmpl
mov
test
xor
sbb
pop
es
sbbl
insb
out
roll
push
out
adc
adc
xchg
cmp
int
push
testb
bound
mov
jle
or
lret
push
scas
dec
loop
or
scas
pusha
sbb
push
mov
mov
inc
mov
mov
lods
adc
icebp
ja
cmp
test
add
out
xchg
cmpsb
std
movsb
or
sbb
xor
inc
cli
mov
adc
pop
es
jmp
int3
dec
lods
mov
xor
xchg
aas
out
movsb
mov
cmp
lret
out
vpshufhw
pop
pop
mov
dec
inc
mov
xchg
xchg
lcall
ja
cmp
xor
fisubrl
rcll
push
mov
incb
fcompl
arpl
mov
negl
cmp
jle
jecxz
repnz
or
mov
fcompl
xlat
stos
push
xchg
mov
idivb
test
out
xchg
cwtl
divl
in
in
icebp
je
mov
sub
jmp
xor
dec
into
sbb
rcrb
lcall
fdivrs
push
stc
and
ja
mov
mov
push
fldenv
or
lods
xchg
sbb
aaa
in
icebp
dec
iret
jmp
inc
shlb
dec
or
pop
push
adc
mov
lret
imul
fdivrp
cltd
pop
xor
mov
cltd
adc
stc
mov
mov
push
mov
stc
sub
dec
jne
sahf
xor
pop
pop
aad
test
jg
mov
pop
lahf
sbb
je
xchg
jle
test
inc
mov
xor
lcall
sbb
lcall
push
shl
cli
add
push
jne
ja
in
pusha
mov
lods
adc
pop
jle
les
sarb
daa
std
mov
sbb
test
ss
mov
test
or
dec
lods
mov
jmp
imul
pop
mov
dec
movsb
xor
and
cli
push
rcrb
cmc
sub
xchg
jnp,pn
push
sbb
fwait
xchg
jb
add
shl
inc
sbb
fsub
inc
cwtl
xchg
mov
cmp
movsl
mov
les
aam
add
jne
sub
lea
adc
fidivl
repnz
push
fidivrs
add
stos
cmp
xchg
pop
sub
adc
xor
sti
ss
mov
std
aas
cmp
adc
push
dec
xchg
inc
mov
jl
jle
sbb
inc
sahf
ss
mov
loop
outsl
in
mov
frstor
jge
mov
in
int
jae
jnp
leave
imul
loopne
mov
out
mov
pop
movsb
and
sti
dec
or
call
adc
adc
inc
jns
cmpsl
pop
out
pop
arpl
insb
pop
pop
push
mov
sbb
movsl
cmp
inc
lock
lods
xor
int
cmc
adc
push
sbb
jecxz
ret
test
inc
and
mov
imul
dec
out
push
jns
add
xor
jns
xchg
sub
and
nop
push
lea
xorb
pop
jp
xchg
test
push
pop
dec
pushf
hlt
xlat
jl
shl
xor
push
adc
push
cwtl
daa
cmc
dec
pop
stos
lcall
not
in
push
out
jp
stos
outsb
imul
mov
jbe
xchg
or
in
push
inc
icebp
out
loop
dec
push
push
std
mov
pop
dec
cmc
rcll
mov
push
sti
jbe
cmp
cmpsl
je
lods
cli
pushf
cwtl
mov
mov
fdivrl
xor
cmc
ss
clc
lcall
or
add
mov
push
mov
imul
popl
je
sbb
dec
push
push
sub
xchg
jb
and
mov
out
ficoml
xor
test
cltd
mov
daa
pop
mov
daa
push
push
mov
mov
mov
lods
jne
xor
sub
mov
in
addb
in
sub
jae
mov
orl
ret
shll
and
lea
js
pushf
pop
es
rclb
ljmp
fsts
sbb
lods
fstpt
inc
divl
fidivrl
mov
or
fldcw
test
sti
jb
jecxz
dec
push
mov
adc
shrl
pop
loop
scas
jbe
xchg
mov
xchg
subb
into
inc
mov
fwait
movsb
mov
rcr
ret
fldt
xchg
aad
in
movsb
inc
out
pusha
push
add
mov
aaa
or
mov
addl
or
mov
dec
inc
cmp
clc
stos
xor
fidivrl
dec
cmp
mov
jb
xor
cmc
loop
push
sub
lcall
lock
jnp
cmp
and
sbb
mov
pusha
rcr
or
jnp
jmp
sbbl
negb
mov
xlat
mov
dec
out
add
sub
icebp
inc
push
mov
fs
pop
loopne
es
or
mov
pop
les
xchg
adc
dec
loope
push
push
or
test
or
and
mov
mov
ds
jmp
mov
xor
loop
ljmp
cmp
mov
jmp
push
mov
sub
inc
movsl
adcb
pop
mov
test
and
cld
div
test
xchg
lea
push
rolb
stos
dec
lods
jecxz
xlat
pop
sub
mov
popa
pop
mov
fldenv
push
mov
pop
sub
jmp
push
shrl
jle
outsb
fwait
xchg
xor
xlat
and
aaa
outsb
in
mov
fbstp
ret
mov
aad
mov
outsl
stos
fisttpll
xlat
cmp
leave
sbb
dec
out
push
sbb
or
add
push
mov
mov
scas
cmp
jnp
std
xchg
push
pusha
sahf
cs
adc
imul
loope
mov
xchg
push
pop
mov
ljmp
xlat
cltd
enter
push
sahf
or
fists
mull
mov
not
and
mov
lahf
cs
or
loop
lcall
dec
dec
outsl
inc
stos
je
pop
dec
cmp
push
push
sbb
mov
push
outsl
in
insb
cmp
pop
insb
pop
add
or
adc
popa
scas
and
inc
cmp
bound
cmp
xlat
gs
aad
mov
jle
outsb
arpl
fs
das
dec
fdiv
xchg
jae
pop
rcl
jmp
iret
stos
cmp
aam
dec
cmpb
mov
adc
mov
fsubrl
cltd
mov
movb
add
mov
sub
jb
or
in
jnp
leave
shrl
jae
sar
arpl
push
stc
xorl
add
popa
lret
jp
mov
enter
stos
cmp
sahf
push
and
fisubl
rcrl
lock
mov
les
sahf
sub
lea
cmp
cmp
in
cmp
jnp
and
out
outsb
mov
sbb
jg
lds
lea
xchg
add
gs
dec
add
xchg
sub
in
pop
add
dec
cmc
repnz
cmp
rolb
mov
mov
jno
sarl
pop
xor
out
jns
push
push
lret
les
push
pop
mov
xchg
leave
int
xchg
call
int
and
divb
jp
roll
insl
xchg
scas
jbe
add
aad
mov
xchg
mov
aam
and
into
or
andb
inc
mov
aam
sub
popf
mov
mov
iret
imul
lods
jp
push
ret
sub
jne
inc
xor
ds
test
xchg
xor
mov
fnstcw
es
mov
inc
dec
sub
adc
sub
or
lret
out
hlt
mov
inc
fstpt
lahf
xor
cli
mov
or
push
and
imul
div
test
into
punpckhbw
rcl
cltd
dec
add
push
push
jge
dec
shrl
mov
mov
mov
mov
pop
dec
fs
cmp
test
enter
push
mov
mov
sub
dec
inc
and
jmp
xchg
vcvtsi2sdl
push
fcoms
add
ds
and
inc
push
outsl
in
notb
ss
adc
in
test
cmpsb
xchg
shrl
dec
and
adc
popl
mov
jnp
mov
push
inc
push
mov
push
popf
push
jecxz
jge
dec
test
les
repz
sub
imul
lahf
xor
repz
cmp
xor
mov
xchg
adc
xchg
jg
ja
inc
ljmp
jp
fistps
js
xchg
fbstp
in
mov
shlb
sub
mov
xor
push
shll
fimuls
lock
test
cmp
adcl
repnz
cmc
adcl
add
insl
jb
push
aaa
cmp
jnp
ret
shll
add
arpl
jae
mov
xlat
or
and
dec
sbb
and
sbb
xchg
cli
pop
sub
and
cwtl
dec
test
inc
mov
jg
mov
mov
in
shll
mov
stos
lock
xchg
imull
or
sbb
sahf
inc
jnp
ret
xchg
jb
das
mov
jno
add
fucomp
adc
cmp
in
and
addr16
scas
jno
jg
cmpsl
mov
jmp
xor
push
fiadds
xor
mov
out
sub
imul
jbe
or
xor
scas
xchg
ljmp
and
andb
setle
sub
dec
pop
inc
mov
sub
jle
mov
stos
cmpsl
mull
dec
sbb
add
imul
adc
test
xor
inc
sbb
popf
and
movsb
mov
cs
xor
ss
inc
scas
jns
repnz
pop
jge
mov
aas
cmc
jecxz
notb
mov
mov
pop
or
sbb
subl
pop
sub
xor
adc
andb
xchg
xchg
jo
fbld
add
inc
stos
xchg
cmp
sbb
cmp
js
xorl
pop
jle
xor
lock
pop
popa
enter
sbb
pop
mov
pop
mov
das
pop
add
jo
sar
rorb
mov
outsl
into
imul
mov
cmp
incb
push
add
inc
fdivrl
sbb
pop
push
xor
mov
mov
loope
and
or
clc
iret
repnz
aad
push
mov
adc
loope
std
xchg
ficomps
stos
adc
adc
sahf
cmp
cltd
add
cmpsl
scas
sbb
addl
xchg
sti
mov
sti
js
jg
push
fadd
gs
or
mov
mov
loopne
inc
cmpsl
mov
jb
rcll
fcompl
je
cmp
mov
ss
mov
mov
and
and
fidivrs
les
scas
adc
push
mov
dec
push
imul
lcall
add
test
test
out
cmp
cmpsb
lds
clc
push
cmpsb
sbb
and
mov
pop
repnz
add
fnsave
lahf
cmpsl
mov
outsl
lock
sbb
popa
test
imul
cmp
insl
inc
incl
and
sub
in
xor
sbb
jb
outsb
in
inc
stos
fs
loopne
push
inc
mov
rorb
cmp
shrb
mov
sbb
loop
shl
jns
imul
lret
loop
push
dec
cmp
mov
mov
clc
sbb
imul
leave
adc
jmp
cmp
aaa
adc
add
jnp
adc
push
push
xor
or
mov
mov
outsb
adc
cld
test
out
xchg
or
das
repnz
sub
sbb
mov
not
or
cmpsl
mov
cmp
lock
jp
loop
insl
or
and
pop
fwait
pop
loop
mov
pop
cltd
xchg
loop
add
inc
rolb
add
mov
ss
mov
add
sub
add
add
or
lret
xor
fadds
dec
inc
fnsave
imul
cld
aas
insl
fcmove
das
cmp
sbb
outsl
cld
inc
lret
scas
fmuls
stos
aam
hlt
push
mov
fidivrl
fstl
jg
pusha
shl
test
add
cmpsl
or
xchg
xor
cmp
in
add
sbb
mov
mov
notb
sbb
scas
push
pop
test
jg
mov
das
outsb
fstpt
loope
push
mov
xlat
fsubrs
inc
inc
inc
jo
mov
xor
leave
jp
xchg
popa
jns
jle
popf
movntps
test
dec
xchg
fistpl
fs
call
clc
js
xchg
std
mov
paddusb
insl
in
pushf
push
sbb
rolb
lock
xchg
add
cltd
popa
cli
jmp
mov
pop
mov
sub
shll
sub
fcmovnu
xlat
icebp
inc
mov
stos
cmp
je
xchg
mov
fidivs
mov
into
mov
loopne
dec
jmp
and
fldenv
mov
dec
cmp
inc
cmp
stos
mov
clc
ret
lea
add
lock
xchg
xor
push
imul
movsl
fimull
mov
inc
inc
adc
adc
adc
and
mov
mov
add
out
fildl
mov
cmp
and
or
jo
or
psubusb
sbb
mov
filds
dec
push
inc
idiv
fmuls
stc
in
and
lahf
sub
rorl
subb
adc
add
sub
ss
sahf
addl
out
mov
or
xorl
dec
imul
push
adc
sahf
jmp
test
mov
es
outsl
loopne
loop
xchg
imulb
xlat
maxps
mov
test
in
je
adc
pop
mov
and
dec
mov
mov
icebp
or
mov
subl
and
mov
lcall
data16
xchg
repnz
mov
cld
movb
xchg
dec
popa
pop
sarl
shl
mov
inc
lods
cli
or
pop
or
out
dec
jp
fidivrl
push
ljmp
aas
sub
xchg
jp
std
ret
sbb
ljmp
sbb
dec
and
rcrl
sbb
les
stos
repz
test
inc
pop
push
aas
add
roll
scas
mov
lret
or
jg
sbb
push
loope
xchg
js
mov
das
fisttps
jnp
sbb
pusha
cmp
shlb
ret
jge
push
mov
je
repz
lods
jge
mov
and
push
xor
sti
in
and
dec
or
xchg
sbb
mov
and
cmp
adc
shrl
mov
movsb
inc
dec
push
js
cmp
notl
pop
clc
repz
fwait
rorb
ud2
dec
lcall
loop
add
sbb
jnp
push
clc
pusha
imul
sub
jge
mov
mov
pop
xchg
rcl
mov
jb
cmp
jge
movsb
jb
xor
test
push
jp
or
les
loop
cs
mov
test
push
pop
jb
xchg
or
mov
insb
sub
push
movsl
mov
cmp
fisttpl
push
outsl
outsl
fadd
cmc
in
rclb
popf
sbb
adc
mov
das
pop
ror
aad
or
aas
int
xlat
lock
dec
dec
fcoml
rcrb
in
jge
stos
mov
ret
int3
mov
mov
inc
sbb
lcall
jecxz
push
data16
lds
mov
jecxz
sti
lods
jbe
mov
pusha
sbb
xor
cwtl
loopne
or
lock
add
or
mov
test
aad
sub
pushf
mov
stos
push
stc
lods
sbb
shll
test
mov
mov
push
scas
mov
pop
sbb
and
cmp
xlat
das
cmpsl
das
adc
mov
sbb
mov
dec
push
adc
lock
ljmp
mov
mov
jmp
sbb
test
dec
insl
xchg
shr
iret
test
push
push
xchg
inc
sbbb
xchg
shll
idiv
xchg
dec
in
out
or
inc
shll
push
push
cmp
fs
dec
jno
int3
dec
cmp
jo
jge
gs
lret
mov
mov
adc
movsl
js
push
lods
and
out
nop
dec
cld
mov
xchg
xchg
nop
push
jb
sbbl
jge
sbb
pop
lcall
pop
insl
test
push
mov
push
push
pusha
sub
xorb
inc
xor
add
jmp
mov
jmp
addr16
bound
or
or
imul
loopne
mov
sub
mov
fldenv
adc
jnp
arpl
js
insb
les
popf
mov
mov
scas
or
cmp
xor
inc
mov
movsl
lcall
or
arpl
iret
das
js
aad
pusha
data16
mov
lea
enter
push
push
cmp
ss
mov
fldt
stos
repz
shrl
in
sbb
test
inc
lods
cmpsb
push
or
cmpsl
dec
inc
push
inc
das
ja
adc
jp
pop
iret
cmp
loopne
dec
or
mov
ret
or
mov
jnp
insl
int
jge
lods
call
mov
jb
pop
adc
fs
xor
pop
mov
aaa
add
jmp
add
and
sbb
inc
xchg
in
aad
in
out
test
mov
lods
inc
outsl
popw
xchg
add
js
xor
imul
test
dec
sarl
mov
imul
int3
mov
cmp
adc
push
dec
cmp
mov
xchg
xchg
cmp
sti
inc
out
outsb
and
add
jne
sbbb
adc
into
inc
out
popf
push
or
push
push
lods
add
cpuid
and
mov
xchg
or
dec
andl
mov
pushf
add
mov
inc
add
not
int
aas
daa
insl
push
push
mov
fs
or
pop
roll
inc
mov
testb
outsl
test
xchg
sub
or
pop
pop
inc
andb
and
ret
mov
test
jne
pop
xchg
lret
shll
dec
ja
sbb
mov
sahf
out
movsb
push
dec
cmc
and
fmuls
pusha
mov
mov
push
jecxz
push
or
add
sarb
orl
and
lods
pop
pslld
mov
test
fmull
in
jmp
cmp
jle
lea
xchg
fnstsw
jbe
fwait
dec
lcall
popf
adcl
leave
sahf
outsb
rol
dec
jp
jl
xor
dec
sub
mov
xor
and
cmp
xor
in
aam
or
sbb
push
add
outsl
fstp
lods
pop
pop
jle
jae
or
call
sbb
jae
pop
push
into
scas
sub
jp
data16
push
xor
jne
fdivr
or
mov
js
pop
bound
pop
loop
fdivrl
add
int3
fdivrs
cmpsl
sub
sbb
incl
xor
jl
jmp
mov
loopne
mov
sbb
mov
call
cmp
mov
add
pop
movsl
arpl
sbb
mov
jae
es
and
xlat
out
jle
int3
fadds
lret
das
xor
xor
rorl
cmp
aad
mov
mov
xor
push
lea
fbstp
out
addr16
pushw
into
or
pop
jecxz
xor
cwtl
add
int3
pop
sbb
xor
mov
out
mov
or
movb
enter
in
lea
in
pushf
lods
out
arpl
add
inc
xchg
xchg
push
cld
adc
pop
in
aaa
nop
movsb
out
xchg
in
cwtl
movsl
pop
pop
jl
add
fwait
sbb
push
ja
add
repz
mov
sbb
xor
out
cmp
repz
mov
icebp
push
dec
lcall
mov
xorb
inc
xor
jge
jp
and
push
sub
xchg
test
bnd
jb
stos
lods
lahf
out
mov
andl
mov
jle
movsb
sub
sarb
jle
shrl
jbe
mov
adc
or
mov
mov
rorl
xor
sbb
mov
jecxz
rorb
sti
fwait
lret
jp
mov
inc
mov
mov
and
inc
push
xor
lahf
pop
cmc
mov
subb
adc
sbb
out
and
movsb
pop
mov
jge
and
cmp
jge
push
xchg
cwtl
xor
adc
sbb
and
adc
into
fnstsw
scas
or
loopne
xlat
xchg
sbb
xchg
xchg
iret
scas
cmp
ja
add
outsb
fcomip
into
and
inc
adc
arpl
push
repnz
sbb
sub
jmp
or
adc
dec
and
fs
xor
sub
js
mov
aaa
aad
mov
sub
in
lock
dec
sti
orb
mov
xchg
cld
imul
frstor
fisttpll
cld
lea
sbbb
push
pop
jmp
mov
lods
jg
mov
mov
adc
in
ljmp
lcall
ret
pop
fistl
jns
fisttps
xchg
jne
arpl
xor
je
imul
push
add
adc
mov
push
cltd
sbb
jl
movsl
mov
movsb
clc
or
stc
movsb
outsb
and
into
mov
xchg
insb
cltd
push
ficoml
pop
xor
push
adc
add
push
movsb
inc
mov
cld
add
je
scas
ss
fs
jmp
fisubl
xor
pop
pop
jge
loope
loope
xor
or
pusha
adc
scas
popf
in
push
sti
cmp
adc
inc
dec
jl
ds
pop
js
repnz
addr16
lock
inc
ljmp
xchg
jl
xorl
ljmp
cmp
sbb
gs
loopne
fcmove
pop
mov
pop
sti
inc
xchg
mov
jo
add
arpl
shr
cwtl
shrl
shll
mov
sbb
fucom
fs
jae
pop
xchg
andb
push
sub
pop
push
stos
cwtl
loope
cmp
test
adc
pop
mov
adc
repz
bnd
es
mov
pop
or
movsl
mov
popa
cmp
adc
adc
sub
cmpsl
loop
scas
add
inc
cmp
cmpsl
mov
insl
mov
mov
pop
inc
mov
jl
gs
repnz
aas
ja
push
sub
dec
inc
jg
cs
inc
cld
cmpsb
pop
fs
sbb
inc
ljmp
mov
mov
cmp
es
les
outsl
mov
icebp
lcall
cltd
inc
push
pop
mov
sub
add
push
popa
fiaddl
loop
fisttpl
and
adc
mov
outsb
setno
pusha
es
dec
es
fisubs
dec
or
loop
les
stc
inc
fldln2
pop
dec
pusha
mov
push
dec
adc
repz
repz
out
bound
cmp
xchg
les
out
sub
mov
int3
divb
push
push
adc
xor
and
les
out
std
xchg
or
mov
imul
ja
lcall
pop
test
xor
pop
pop
pusha
das
and
push
mov
jecxz
sub
push
mulb
fwait
mov
lret
ficoms
pop
test
cmpsb
scas
mov
push
leave
sub
lret
push
je
movsl
xchg
mov
xor
inc
pop
insl
insl
shl
lock
nop
xchg
add
int3
loope
and
leave
mov
sti
leave
or
jmp
lret
fwait
rol
fcomip
stos
push
js
movsl
sbbl
mov
enter
push
push
lods
imul
sub
cmpsb
sbb
ret
repz
mov
jp
into
xor
mov
inc
dec
call
shlb
arpl
adc
sbb
xor
addr16
pop
and
mov
loope
mov
outsl
jbe
dec
mov
pop
xor
out
mov
orb
sbb
add
push
jns
push
cmp
xor
dec
lock
xor
jo
out
pop
pop
out
dec
outsl
fs
jle
call
mov
pop
popa
mov
imul
mov
iret
clc
or
sti
ja
clc
jg
ds
pop
std
loopne
cmp
sub
jo
xchg
cmpsb
sbb
push
sbbb
xchg
fdiv
pop
mov
cmpsl
or
js
fmul
repz
xchg
es
dec
rorl
lret
jnp
cmp
rcrb
andnps
jecxz
push
into
add
lock
testb
idivl
adc
add
sti
adc
mov
jno
add
sbb
mov
mov
add
dec
in
adc
cmc
in
or
jl
pop
jne
sti
loop
sbbl
sub
lods
and
pop
subl
popf
and
ret
repz
shrb
mov
pop
nop
mov
jo
cmp
add
aaa
movsb
push
js
stc
cmp
lret
jbe
xchg
rcl
dec
pop
xchg
inc
sbb
imull
inc
add
lret
and
ret
sarb
out
je
in
in
sahf
mov
outsl
pop
jp
dec
stos
mov
sub
cld
lods
repz
orb
negb
push
test
adc
cwtl
shll
xor
xchg
test
push
dec
jbe
pop
pop
into
fldenv
or
bound
mov
lods
add
xorb
xchg
test
and
mov
fdiv
sub
cltd
adc
adc
xchg
jne
xchg
imul
inc
adc
adc
pop
jle
push
and
in
loope
push
lret
je,pt
push
push
cld
scas
cltd
insl
and
jg
repnz
dec
sbb
popf
roll
sbb
xchg
enter
sbb
cmpb
cmc
pusha
cmp
les
sub
ja
test
mov
xchg
xchg
das
lds
jae
lret
cmp
push
or
test
and
jnp
ret
aad
xor
push
mov
repz
imul
sbb
cs
push
push
fists
inc
add
jg
sub
jno
repz
je
testb
pop
sahf
push
loope
mov
sbb
lret
ror
adc
cmp
sahf
sub
xchg
in
jl
nop
roll
adc
mov
rorb
xchg
ja
loop
ja
xor
cld
mull
or
adc
call
sbb
mov
xor
adc
jns
mov
xchg
fisubl
inc
sarl
cltd
ja
and
imul
insl
fdivrs
ljmp
xor
and
mov
cmp
fdivrl
mov
call
adc
push
or
or
mov
aaa
cli
shlb
pusha
sub
rorl
sbb
or
ret
mov
add
scas
and
lods
loop
scas
mov
add
ja
loope
mov
pop
push
popf
jb
ja
add
inc
bnd
aaa
fisubl
stos
dec
fidivs
cmp
mov
jns
mov
xlat
popf
dec
iret
mov
add
into
data16
adc
mov
xchg
pop
xor
mov
mov
ja
mov
add
sbb
mov
pop
mov
nop
dec
fstps
jle
out
call
pusha
das
xor
xlat
lahf
pop
loopne
data16
aaa
and
decl
sti
sub
rclb
pop
or
ja
repnz
mov
jns
or
mov
int3
push
mov
insb
mov
loop
callw
sub
dec
pop
sub
testb
mov
pop
jns
sub
xor
dec
lcall
out
push
cmpsl
mov
jnp
mov
imul
fiadds
pushf
lds
shlb
nop
xchg
enter
xor
ret
hlt
jle
outsb
or
pop
int
xor
cli
mov
mov
jns
dec
fisttps
and
dec
mov
sysexit
push
pop
rclb
xchg
mov
shll
cmpsl
pusha
xchg
jne
add
xchg
dec
mov
xchg
xchg
cmp
inc
cmpsl
std
mov
and
and
fstpt
outsb
ret
mov
and
icebp
jecxz
pop
xor
push
or
cmp
cmpsl
push
adc
mov
push
lods
push
push
mov
mov
int
add
ss
jl
dec
cmp
lds
add
lods
rolb
xchg
idivl
cmp
lea
xchg
lds
adcl
sbb
jns
shl
pop
popf
jecxz
and
lods
xchg
mov
jae
mov
fstps
cmpsb
ljmpw
loopne
inc
jmp
movsl
int
mov
jnp
or
rcrl
stc
popf
shl
in
in
pop
outsb
mov
inc
fwait
out
add
sub
cli
scas
fwait
xor
xchg
mov
mov
pop
shl
push
mov
es
adc
pop
stos
inc
leave
lret
add
scas
fsubr
mov
push
sub
ss
arpl
and
test
scas
fistpl
iret
sti
js
cld
mov
mov
xchg
clc
idivl
pop
addr16
mov
movsw
lock
aad
sub
adc
je
into
sarb
jle
sbb
xchg
dec
sbb
mov
mov
movsb
stos
lret
out
inc
or
and
jp
hlt
pop
and
lahf
or
popf
push
inc
ja
gs
jg
pop
add
jne
or
push
rorl
lods
gs
jae
mov
pop
lcall
inc
and
pop
jp
push
ror
addl
inc
hlt
movsl
cmc
test
clc
enter
nop
sbb
and
pop
adc
add
mov
push
rorb
inc
pop
sub
xchg
and
shl
insb
mov
pop
cld
pop
jmp
repnz
pop
and
mov
fdiv
xchg
imul
mov
fsincos
movd
xor
sub
push
movsl
mov
pop
std
sub
popa
xor
mov
outsb
outsb
add
xchg
xchg
cmc
pop
pop
push
and
xlat
fidivrs
adc
repz
adc
rorb
and
xchg
mov
xor
jle
add
pop
lds
xchg
test
insl
and
stos
lret
cmc
mov
push
lcall
cmc
lea
xor
adc
add
scas
add
add
mov
pop
aad
mov
add
sbb
pop
push
mov
movsl
add
mov
inc
shr
incl
in
jle
mov
in
mov
sub
cmp
push
cmp
mov
inc
jmp
sub
hlt
xor
pop
imul
pop
and
ret
loopne
jmp
mov
jmp
or
sub
sub
lcall
cmpsb
sbb
cltd
mov
pop
fidivl
xchg
invlpg
hlt
adcl
stc
test
fiaddl
test
push
in
jae
cmpsb
gs
ss
pusha
ds
add
daa
stos
inc
sub
pop
sbb
cltd
mov
cmp
incb
stos
fs
arpl
push
gs
fwait
lods
sub
cmp
scas
or
sub
pop
in
cltd
pop
jno
push
xchg
pslld
int3
imulb
push
xor
push
jae
mov
inc
ret
cmpsl
xchg
sub
jmp
fxch
lret
mov
sti
js
pop
sbb
adc
jae,pt
xor
push
pop
cmp
fistl
sub
adc
inc
or
mov
arpl
arpl
sub
loop
xor
fildll
fs
cld
inc
icebp
mov
lret
mov
movsl
pop
sbb
mov
js
ret
std
add
adc
inc
xchg
in
enter
sbb
dec
jae
or
shll
adc
stos
mov
or
addb
pop
mov
xchg
xchg
pop
inc
pop
in
jl
lods
shll
inc
mov
mov
mov
enter
lret
sub
xor
dec
dec
mov
nop
xchg
cmp
cmc
int
mov
iret
rclb
rclb
inc
iret
mov
lret
mov
adc
outsb
shlb
dec
cmp
and
out
in
pop
sbb
aad
rcrb
xchg
mul
cmp
jbe
mov
popa
xchg
cmc
pop
imull
sbb
int
mov
cmp
lods
and
sub
sub
outsb
sarl
inc
sbb
imul
sub
lods
scas
outsb
xchg
lock
stos
sub
mov
lods
mov
cs
fucomip
invd
dec
push
pop
cmp
icebp
xchg
out
pop
add
add
out
loope
lret
jb
fs
lock
out
in
sub
lods
mov
inc
push
lcall
clc
lods
dec
fwait
push
ret
inc
cli
hlt
push
int
orb
mov
bound
jbe
lock
add
xorl
sub
lds
arpl
xchg
sbb
sbb
loop
inc
pop
pop
cmc
movsl
or
mov
out
rorb
sbb
sbb
jne
sub
data16
jno
jae
sarl
outsl
fisubrl
subb
les
dec
xor
loopne
bound
pop
adc
inc
add
and
jne
push
and
xchg
jno
ljmp
inc
xor
loope
rcrl
jge
popa
into
inc
mov
shll
fcomp
jge
rorl
fsts
es
mov
mov
divl
lahf
repz
pop
sub
add
xor
dec
aam
fldl
pop
pop
adc
ljmp
in
inc
adc
shll
es
pop
mov
movsb
daa
ja
rolb
or
add
lcall
or
inc
pop
daa
arpl
aaa
xchg
je
inc
fwait
iret
dec
test
std
daa
push
pop
scas
add
add
pop
jbe
sbb
imul
adc
test
popf
push
dec
adc
lds
imul
shrl
inc
dec
add
cmp
cmp
sub
push
loop
ljmp
jl
xchg
nop
ret
pop
out
adc
enter
mov
testb
jns
mov
pop
xchg
dec
inc
sti
call
out
xchg
aaa
fwait
or
stos
mov
popa
push
rclb
ss
popa
push
aaa
xor
ja
sub
mov
mov
push
inc
mov
inc
pop
mov
jmp
test
ret
push
test
xchg
mov
clc
mov
dec
jg
mov
jae
mov
jmp
lds
push
xor
cmp
dec
jo
xchg
testl
sbb
mov
mov
xor
xchg
in
sbb
mov
out
dec
sbb
or
push
iret
adc
fucomi
loope
pop
pusha
pushf
mov
push
lahf
pop
fcomps
lahf
cmpsb
sub
test
and
mov
jl
adc
inc
sub
lea
cmp
int3
inc
mov
outsl
ret
imul
dec
ret
or
imul
dec
rolb
orb
dec
inc
rcrb
icebp
xlat
sahf
data16
aas
cmpsb
push
or
test
add
pushf
xchg
cs
aam
sahf
nop
mov
add
pop
jno
jp
inc
cmpsl
jne
sar
push
jecxz
dec
inc
shrb
or
sub
or
dec
xor
js
bound
or
sahf
and
ret
stc
mov
fbld
mov
xor
and
lret
push
repz
adc
dec
adc
push
and
mov
popa
mov
pop
aad
pusha
js
gs
stos
jle
mov
mov
scas
pop
inc
fcompl
pop
icebp
jnp
mov
sbb
fcomp
mov
call
jno
mov
aam
push
outsl
dec
cmpsb
cmp
xor
movsl
and
xor
repnz
push
pop
xchg
inc
cli
pusha
sub
cwtd
mov
out
push
mov
test
dec
cmp
bound
sahf
mov
dec
jg
dec
sbb
mov
js
ret
mov
adc
lods
loop
insl
sub
mov
insb
cmpb
jecxz
and
imulb
mov
ret
outsl
dec
jns
fwait
out
lods
add
addr16
sbb
ret
jle
int
xchg
fiadds
xlat
cmp
adc
aas
cld
jno
jp
push
data16
cmp
gs
or
bound
orl
movsb
cli
popf
in
aaa
shrl
lret
jno
add
and
daa
xor
mov
std
add
subb
data16
pop
pushf
mov
aaa
cmc
mov
xchg
aam
cmp
sub
imul
dec
mov
lcall
loop
mov
mov
in
or
dec
mov
fsubrp
jns
les
dec
movsb
les
insb
xchg
into
dec
clc
popa
sbb
adc
mov
or
lahf
movsb
fwait
push
orb
inc
repz
mov
xchg
or
inc
adc
mov
sbb
adc
mov
pop
xchg
out
test
dec
jecxz
adc
inc
repz
mov
lods
cmp
inc
ljmp
sub
mov
shlb
inc
pop
test
es
testl
or
adc
push
mov
and
mov
pminub
inc
sbb
aam
sti
xchg
dec
adc
scas
mov
and
sbb
incb
cmp
and
inc
call
mov
jae
mov
fstpl
dec
adc
cli
jecxz
fildl
lods
xor
adc
mov
hlt
out
ja
mov
pop
sbb
cmp
and
sbb
push
inc
mov
pusha
cs
pop
mov
scas
adc
xchg
mov
xchg
mov
outsl
adcl
cmc
cli
sahf
icebp
cltd
add
push
xor
jmp
daa
sub
je
bound
jecxz
add
sbb
inc
data16
xchg
mov
inc
outsb
inc
xor
and
shll
xorb
inc
cs
int
mov
xchg
dec
sbb
or
dec
sub
xor
daa
scas
xchg
xor
fcoms
out
xchg
movsl
or
push
xchg
int
xchg
incl
test
mov
hlt
xor
cmp
or
shll
adc
sbb
pop
pop
lock
jl
rol
dec
add
jnp
adc
mov
ret
ficoml
xor
fldenv
xor
mov
mov
pop
mov
mov
and
in
jecxz
pop
dec
dec
sub
cld
repz
into
adc
out
sub
out
push
push
cmp
lds
sahf
dec
ja
xchg
fstps
sub
jl
and
in
lcall
outsb
hlt
je
push
jge
inc
cmp
jecxz
cmp
jle
dec
hlt
dec
out
pop
dec
mov
pop
je
jp
dec
cwtl
mov
jge
js
stc
add
fsubs
std
lret
mov
cwtl
ret
fs
xchg
pusha
clc
adc
add
adc
cmp
cmp
aam
jbe
das
mov
cmp
enter
cmp
inc
jae
cmpsl
ss
xchg
cltd
cmpsb
cmp
push
jp
mov
add
sub
leave
and
dec
ret
adcb
xchg
sahf
lret
inc
xchg
addr16
mov
movsl
es
or
lret
fdivl
mov
pop
dec
cli
jmp
and
push
pusha
frstor
cli
push
jae
int
jae
aam
outsb
notl
sbb
adc
mov
xchg
push
stos
rcrl
sbb
in
loope
mov
in
sub
andl
scas
sahf
push
stc
push
and
incb
mov
mov
add
insl
inc
inc
jp
shll
aad
ret
adc
orb
mov
outsl
out
mov
mov
mov
ficompl
jmp
into
rclb
mov
int
shl
cmp
mov
xor
fimull
push
fbld
push
insl
jecxz
call
and
frstor
cltd
ret
mov
ss
or
adc
mov
ss
das
sarb
sbb
in
jno
imul
repz
arpl
xor
dec
xor
cltd
fsubrl
pop
sbbb
loop
mov
mov
inc
lods
sahf
sbb
imulb
lahf
movsb
int
cld
xor
cmp
hlt
adc
and
lods
push
jno
inc
in
adc
fadds
cmp
lret
mov
movsb
cltd
xlat
push
fsubrp
ja
xor
pop
push
outsb
push
jg
popa
xor
ljmp
mov
lret
or
js,pt
fsub
mov
sbb
push
mov
jg
inc
mov
nop
rcl
sarb
fsub
push
jns
repz
xor
ss
push
xor
std
aas
mov
cli
jns
mov
mov
cmp
nop
dec
or
ret
pop
fimull
cmp
xchg
mov
notb
adcl
push
mov
aas
out
sbb
ret
aas
pop
aam
stc
js
dec
ret
jbe
cli
js
sbb
push
or
std
nop
jb
xchg
pop
xor
or
call
mov
xchg
sbbb
mov
push
and
push
or
scas
mov
cmp
lret
jp
xchg
push
push
add
sub
jle
mov
inc
cli
inc
dec
push
and
pop
shlb
int
or
push
data16
cmpsb
jg
mov
xchg
mov
mov
mov
shrl
lods
les
push
adc
jo
mov
pop
mov
sahf
sarl
lods
jnp
add
into
dec
ds
jp
imul
in
test
jle
lock
das
iret
sahf
test
into
push
lds
lods
bnd
lcall
out
inc
lds
int3
bound
xor
cli
rcll
outsl
aaa
mov
and
sub
ljmp
gs
pop
and
mov
rcr
xor
sub
push
or
into
leave
and
mov
mov
js
mov
call
in
jne
cmp
shlb
push
xchg
bound
lock
jnp
pop
mov
mov
sub
mov
mov
clc
inc
aas
addr16
dec
les
out
xor
jge
roll
add
lods
enter
fwait
dec
nop
add
fnstsw
mov
inc
lock
es
push
xchg
mov
sti
push
xor
jne
out
dec
shll
rolb
popa
cli
clc
inc
cmpsl
add
shl
adc
jecxz
enter
repz
cmp
stos
pop
out
outsl
adc
mov
push
push
int3
xor
scas
leave
pop
out
shrl
int3
scas
divl
divb
adc
ret
add
lea
cmp
outsb
movsl
sub
fidivrl
ss
push
and
enter
es
pop
clc
setbe
dec
dec
inc
dec
xchg
filds
insl
daa
fnstsw
loope
mov
jb
lea
call
clc
sbb
jg
aad
mov
push
fst
dec
xchg
inc
call
mov
mov
loopne
arpl
or
sub
add
push
mov
sub
jecxz
and
push
sub
xor
movsl
psubusw
insb
shrd
jo
cmpsb
lahf
dec
fs
dec
bound
xor
stc
shll
mov
in
jae
gs
mov
mov
lea
popa
or
xlat
jno
sbb
fidivs
add
lods
cmc
and
push
jmp
pushf
mov
push
ret
test
push
mov
pop
pop
push
das
push
mov
xor
in
cmp
cmpsb
mov
dec
out
aas
cmpl
mov
xchg
mov
jns
mov
jne
inc
repnz
fnstcw
adc
add
aas
jns
shlb
ds
inc
mov
loope
scas
mov
ljmp
ficoms
mov
mov
out
popf
pop
sbb
or
in
dec
mov
test
mov
dec
test
jmp
divb
push
sar
or
cmp
adc
add
pop
sbbb
fldcw
adc
std
sbb
in
lock
and
loopne
dec
mov
test
jmp
add
movsb
out
ret
add
sub
sahf
xor
cld
jns
push
jns
int3
pop
sbbb
int3
push
inc
dec
fdivr
jbe
out
jle
sbb
sub
inc
andb
inc
cmp
enter
pop
aaa
jne
les
inc
sbb
dec
test
push
mov
dec
pop
xchg
out
loope,pn
mov
daa
xchg
jbe
movsl
adc
bound
xchg
out
sarl
sbb
push
sub
rcll
add
or
cli
push
inc
push
outsb
jp
js
cs
mov
xor
mov
inc
pop
jg
jb
dec
pop
push
pop
inc
sti
mov
mov
or
mov
xchg
cmp
pop
sub
sub
sarl
cltd
mov
data16
push
push
in
add
mov
pop
adc
xor
mov
mov
jne
adc
dec
push
add
std
xchg
push
cmc
xorl
cli
xor
ljmp
xchg
test
jne
in
lahf
out
std
adc
bound
jo
stos
dec
outsb
lock
and
loopne
test
xor
mov
inc
dec
cmp
push
adc
adc
xor
push
fdivl
inc
cs
cmp
pop
int3
adc
and
sub
dec
sbb
cld
lods
por
cwtl
into
jecxz
and
inc
shrl
mov
jl
lds
jo
paddusb
dec
inc
inc
lret
aaa
inc
sub
jns
outsb
xchg
sbb
push
sub
xchg
call
mov
mov
push
je
nop
ja
and
fstps
ficoml
mov
jo
popa
icebp
xor
push
scas
or
add
ds
sbb
lock
xor
and
repz
mov
bound
or
and
jb
mov
inc
lods
gs
sub
add
push
push
cmc
gs
rcr
and
movsl
mov
clc
lahf
jp
adc
push
mov
cli
mov
push
sub
out
and
or
mov
loopne
inc
in
add
aas
mov
fwait
imul
fidivs
jl
dec
pop
pop
or
insl
xor
xlat
andl
adc
daa
mov
inc
add
push
ficompl
sub
pop
fcompl
iret
ret
xorl
std
lods
stc
push
xchg
out
hlt
ljmp
cmpl
push
aam
sar
inc
ds
fstpt
hlt
fs
pop
dec
jbe
fdivp
rep
cld
xor
ja
push
outsl
stos
mov
mov
pop
pop
dec
fwait
ret
popf
xor
insb
aaa
out
test
adcb
sub
rclb
imul
in
mov
aaa
movsb
adc
outsl
mov
pop
rcll
ret
pop
pop
push
mov
jo
push
sub
stos
xor
push
cld
inc
fstps
call
ja
shlb
mov
mul
dec
popf
je
xchg
dec
out
push
repz
pop
sub
pop
sub
xlat
gs
in
push
sbb
outsb
mov
rcll
push
negb
enter
push
or
out
lret
out
cmp
dec
pop
pop
and
dec
adc
mov
pop
jae
push
add
push
sub
rep
inc
mov
insb
setbe
add
push
xor
aam
xchg
hlt
xchg
dec
outsb
mov
test
jae
xchg
sarb
or
push
hlt
adc
lahf
cmp
lret
adc
jmp
dec
pop
std
sbb
test
xchg
lods
and
pop
pop
popf
test
push
push
push
jmp
or
testb
sbb
fsts
xchg
inc
push
shlb
test
aaa
push
xor
inc
mov
push
or
enter
sahf
lcall
arpl
repz
aaa
test
inc
lcall
pop
shlb
add
repz
dec
pop
cmp
imul
cmpsb
xchg
pop
pop
xchg
sbb
mov
dec
inc
lock
call
pop
pop
push
enter
jl
scas
and
icebp
adc
adc
mov
fwait
push
sti
in
shll
jb
popf
push
xor
push
cld
mov
movq
test
movsb
mov
cmpsl
sarb
mov
fsubl
push
jb
call
addr16
mov
pop
iret
xchg
and
repnz
rcl
push
mov
lret
loope
out
push
add
jmp
mov
roll
cld
and
addr16
lods
and
clc
adc
jns
shrl
jae
outsb
andb
adc
jl
add
or
fadds
pushf
xor
inc
pop
pop
or
in
loope
cmp
icebp
data16
stc
lret
idiv
push
jb
pushf
mov
sti
lret
xchg
pop
std
call
arpl
repz
mov
lock
ja
jmp
aaa
push
pushw
push
out
shl
sub
mov
mov
aad
or
xorb
push
int
jno
in
cmp
inc
push
rcr
fisubs
adcl
sub
pop
push
add
push
jp
nop
pop
dec
in
lret
mov
rolb
push
pop
in
sbb
adcb
or
jnp
xor
in
rclb
cmp
fnstcw
cmpl
add
scas
mov
cs
int
cmp
add
lea
or
js
cmp
cmp
push
insl
push
repz
cld
xor
aas
mov
add
jle
add
adc
arpl
cmpsb
js
ret
out
mov
rolb
fcmovnb
int3
and
push
add
jb
pusha
pop
cmpsb
pop
jle
xor
push
inc
or
xor
dec
jae
ret
inc
fstpl
mov
sbbl
pushf
js
inc
inc
mov
lods
leave
shlb
mov
xor
lret
out
jg
bound
test
aam
inc
pop
adcl
mov
lods
add
fcomip
popa
stos
pop
js
ss
or
cmp
xlat
mov
sub
lock
lcall
mov
in
xchg
dec
nop
and
push
mov
adc
lret
cmp
jl
adc
sbb
sbb
scas
xchg
out
cvtdq2ps
pushf
dec
lods
js
dec
cltd
add
hlt
stc
call
xchg
mov
sahf
out
aaa
repnz
imull
pusha
mov
sub
bound
fbstp
push
fstpl
or
cwtl
adc
ds
enter
xchg
test
cld
push
xor
rorb
sbb
repnz
push
fnstenv
ljmp
xor
les
lret
adc
pop
mov
push
or
or
xor
pop
mov
jp
adc
fists
js
push
inc
aaa
jl
inc
leave
inc
and
in
mov
cwtl
add
xor
adc
sbb
movsb
xchg
out
jp
stos
and
inc
push
or
incb
addr16
out
loope
mov
add
scas
out
insl
jmp
pop
inc
xchg
dec
pop
int3
add
or
scas
pop
inc
insl
cmpsl
jns
test
mov
movl
mov
test
popa
aam
cmp
jl
daa
das
jecxz
in
jne
das
out
mov
add
and
subb
cmp
cld
mov
push
inc
dec
dec
fs
pop
jp
loopne
insl
xchg
push
scas
inc
aad
cmp
scas
pushf
jecxz
sbb
arpl
jno
xchg
dec
icebp
lods
jnp
add
xor
enter
lcall
scas
fnstsw
pusha
clc
stc
xchg
mov
negl
push
scas
sarl
lahf
add
movl
push
loopne
cltd
mov
sbb
mov
jg
sub
ret
push
xor
dec
lods
dec
cwtl
fwait
xlat
loope
aaa
or
sbb
pop
lea
fistpl
iret
les
jge
add
aaa
lret
das
jns
cld
aad
pusha
aas
dec
shlb
out
loop
iret
fdivrs
mov
lretw
or
cltd
sub
mov
mov
sub
add
inc
pop
mov
mov
call
jnp
mov
pop
bnd
dec
xor
sbbb
adc
fldenv
xchg
aad
repz
adc
sub
mov
cwtl
push
daa
mov
sahf
pusha
mov
dec
sbb
dec
xchg
mov
sbb
insl
icebp
outsb
mov
mov
into
xor
pushf
mov
lods
mov
bound
push
xchg
mov
ror
jo
movsb
cmp
sub
mov
daa
inc
push
out
mov
orb
into
call
les
jecxz
mov
loope
das
pop
int3
subb
sub
sbb
popa
iret
andl
fs
sahf
mov
movsl
pop
lcall
push
into
mov
jns
inc
push
add
shll
aaa
and
and
xchg
sbb
test
pop
fnstsw
aam
aam
inc
das
addr16
xchg
rcll
inc
insl
dec
push
pop
daa
or
sbbl
push
aad
or
cmpsb
inc
sub
jnp
add
std
xchg
pop
imul
dec
cli
scas
cltd
and
xchg
jae
into
push
adc
xor
inc
sbb
pop
sub
cmp
mov
gs
or
loopne
inc
add
inc
and
rcpps
lock
dec
nop
imul
mov
lret
mov
std
int3
std
cmp
mov
mov
cmp
dec
aam
jl
mov
jle
mov
movsl
addb
frstor
inc
and
xchg
mov
std
mov
mov
cwtl
enter
jge
sbb
mov
push
outsb
es
in
mov
sahf
ds
lods
xchg
jge
clc
xor
outsl
imul
lods
bound
loopne
dec
stos
rcll
mov
pcmpgtw
or
cwtl
addl
popa
fs
hlt
shrb
sar
push
and
adc
fsubp
jae
xchg
enter
js
inc
pusha
pushf
js
mov
cmp
js
inc
ds
mov
je
inc
ss
std
jne
lods
lret
pop
ret
arpl
cwtl
inc
lcall
andb
mov
ljmp
std
adc
sbb
pop
push
gs
and
sbb
add
push
mov
sbb
cmc
cmpsb
cmp
pop
cltd
mov
mov
jnp
lret
xchg
daa
mov
mov
mov
inc
pop
push
aam
mov
bound
fidivl
lds
pop
xchg
xor
lahf
fiaddl
cli
out
ss
jmp
ljmp
imul
mov
shll
imul
pop
lods
mov
mov
jg
inc
sub
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
ljmp
jns
arpl
mov
loopne
sahf
xor
cmpsl
pusha
sub
mov
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
jle
out
aam
jo
in
hlt
add
subb
fdivl
xchg
lea
push
xchg
pop
popf
shll
aad
xchg
adc
xchg
and
out
xchg
cmp
cmp
cmp
mov
out
popf
push
decb
decl
sbb
imul
push
inc
and
sub
ja
leave
jnp
cmp
mov
push
out
or
pop
cwtl
mov
inc
stos
test
cmp
dec
decl
sbb
imul
lea
xor
mov
ja
push
aam
push
nop
inc
ljmp
and
icebp
lods
addr16
mov
add
out
and
loopne
popa
popa
lods
pop
pusha
addr16
mov
popa
xor
pop
pusha
sub
loope
pusha
cmp
pop
mov
mov
loopne
popa
xor
mov
push
cmc
dec
loopne
popa
xor
pop
pusha
sub
loopne
fs
pop
pusha
sub
loopne
popa
xor
pop
xor
mov
loope
fs
pop
pusha
stos
mov
lock
xor
punpcklbw
lods
mov
cmc
dec
loopne
jno
jmp
mov
cmc
dec
loopne
pop
cmp
mov
scas
xor
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
imul
dec
add
xor
pop
pusha
sub
push
cmc
dec
loopne
xor
xor
mov
loopne
popa
xor
xor
pop
iret
rclb
loopne
popa
xor
out
imul
jmp
jns
xor
pop
pusha
sub
loopne
inc
xor
jmp
mov
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
loopne
popa
xor
pop
pusha
sub
dec
jbe
push
jmp
cltd
imulb
cmp
dec
lea
das
xchg
stc
cmp
pop
test
inc
pop
cmp
xor
in
pop
or
push
sarl
mov
push
shll
mov
sub
xor
and
je
inc
adc
dec
je
pop
xor
add
fdivl
stos
loop
push
jne
sub
and
notb
push
mov
fs
imul
mov
dec
and
ja
mov
inc
outsb
aaa
and
push
jns
inc
insb
sub
sub
sub
cmpsl
cmp
push
int3
lret
mov
xor
fs
out
or
pop
and
call
lret
and
mov
cmp
pop
adc
fistps
ja
bound
sbb
icebp
mov
jmp
negl
sub
add
fcom
pushf
mov
cltd
sahf
pop
mov
add
loop
repnz
roll
dec
inc
lock
mov
out
jne
add
jo
mov
aam
addl
clc
sbb
sub
fwait
mov
scas
into
cmpsl
rcrb
cmp
out
add
mov
in
iret
push
fcomip
sbb
and
inc
dec
dec
dec
test
lea
aas
sub
mov
or
and
in
mov
jnp
repnz
pop
or
jmp
jecxz
mov
shr
out
mov
xchg
je
lret
mov
xchg
push
or
jg,pn
mov
jns
dec
inc
cmp
mov
jecxz
lods
jns
lods
das
dec
cmp
inc
jp
lea
xor
mov
mull
jns
pusha
jle
xor
and
cmpsb
in
ss
xlat
cmp
aam
adc
mov
jmp
cs
enter
cmpsl
push
enter
je
scas
cli
mov
shrl
clc
imul
cltd
ljmp
fsub
loope
maxps
pop
icebp
shrb
je
xor
lock
jmp
mov
test
div
loop
inc
mov
std
lods
movsl
pusha
add
das
pop
or
or
sub
outsl
pop
stos
fcom
xlat
add
aam
cwtl
aad
test
jbe
test
lds
mov
cmp
dec
cmpsb
mov
jecxz
imul
repz
fistps
std
stos
adc
sub
cwtl
vcmppd
sbb
scas
mov
imul
dec
jmp
jmp
bound
loopne
pop
jns
adc
add
fiadds
xchg
mov
cli
dec
add
lods
or
je
inc
xchg
jae
dec
repz
mov
repnz
mov
ret
inc
push
mov
aaa
inc
sbb
popf
mov
int3
pop
xchg
fmull
mov
in
xchg
out
pop
xchg
sbb
xchg
jge
std
out
dec
jnp
decl
jb
cmp
sbb
jp
push
xor
fdivs
outsb
loop
hlt
leave
jb
cmp
sub
jmp
icebp
movsb
fs
out
jne
scas
push
sbb
adc
popa
aaa
push
out
push
adc
pop
cmc
std
inc
push
outsl
dec
loope
mov
stc
mov
cmp
push
bound
in
and
mov
rcr
pop
adc
adc
ja
ja
cmp
push
cmpsl
sub
icebp
mov
and
fstpl
add
mov
adc
pop
out
clc
aaa
data16
adc
movl
xchg
dec
xchg
or
dec
popa
sub
insl
xchg
ds
mov
inc
xchg
das
sbb
fiaddl
fsubs
inc
lret
inc
xchg
sahf
mov
in
cli
test
mov
add
inc
insl
movsl
in
dec
xor
xchg
stos
mov
pop
test
inc
hlt
add
sub
aaa
ficomps
xchg
rorb
jne
dec
fidivrl
int3
cwtl
rolb
pop
arpl
aam
sub
jmp
pop
push
sbb
mov
dec
ret
cltd
adcb
push
mov
pop
ja
xor
mov
cld
mov
lock
sbb
xor
pop
inc
shl
jge
int
xchg
rclb
fldl
push
lods
xor
lcall
and
mov
fwait
scas
pushf
xor
and
mov
pop
scas
pop
jle
and
imul
xchg
in
pop
mov
push
jge
or
dec
push
xor
xchg
repnz
in
inc
cltd
mov
fiadds
push
out
push
cmp
dec
push
aam
jno
mov
or
mov
mov
dec
in
test
int
in
aam
ds
cmpsl
xchg
es
in
xchg
loope
mov
pop
pushf
js
and
nop
mov
lcall
mov
test
push
jl
jnp
add
sahf
mov
mov
dec
hlt
mov
clc
call
push
push
rcrl
fisttpll
imul
add
push
outsl
insl
cwtl
lds
ror
repnz
add
mov
sub
loope
xchg
ds
inc
push
cltd
test
adc
fldenv
mov
out
add
test
pop
ficompl
jl
or
popf
ss
ss
push
les
pop
hlt
add
es
xchg
jmp
dec
gs
out
push
cmp
roll
pop
out
lret
rcrb
scas
push
mov
cmc
call
mov
jb
or
call
xor
popf
nop
and
xchg
add
lcall
sbb
in
stos
in
mov
bound
imul
and
xchg
rolb
inc
aaa
out
imul
rorl
ret
rcrb
mov
and
add
sbb
aas
ss
xchg
sub
jae
shr
loope
aam
inc
lcall
insb
in
aad
sub
lret
popf
inc
out
add
add
clc
add
es
push
flds
pop
jecxz
xorb
or
ret
mov
mov
mov
inc
adc
pop
popf
fildll
pusha
aas
adc
push
and
je
mov
pop
das
out
lahf
push
outsb
shrl
pop
xorb
popa
aaa
sbb
imul
jnp
cltd
lods
xor
add
mov
push
mov
and
and
aas
shll
movsl
in
adc
pop
lods
mov
testl
push
fsubrp
and
leave
aam
scas
pop
clc
xchg
push
adc
popl
orb
and
bswap
in
sub
test
mov
lcall
out
lock
mov
mov
dec
push
cmp
xchg
and
ja
mov
add
xor
sti
dec
and
popa
inc
cmp
xor
adc
out
inc
ds
aaa
pop
jns
dec
cmc
stos
jp
icebp
cmpsb
add
rcrb
scas
sub
adc
sbb
pop
insb
orl
test
pop
lock
leave
sub
or
jns
cmp
subl
fmull
hlt
mov
add
int
sub
add
fs
push
loop
shll
push
cmpsl
dec
push
in
int3
sti
push
aaa
pusha
dec
add
mov
lahf
fbld
push
mov
idivl
mov
push
adc
mov
or
add
stc
loopne
jb
xchg
push
jg
push
jp
les
adc
lcall
and
cmp
bound
sub
sbb
xor
loopne
cmp
mov
test
pop
notb
loope
jns
dec
mov
movsl
adc
mov
jle
or
test
cli
or
sub
mov
in
adc
mov
int3
out
popa
lods
fisttpll
push
sarl
mov
iret
adc
jmp
inc
pushf
jno
or
es
mov
xchg
jb
jmp
xchg
repnz
stos
sbb
mov
iret
bound
je
jg
pop
es
push
test
data16
pop
add
bound
imul
dec
inc
aam
icebp
aad
pop
cwtl
adc
add
flds
aam
enter
xor
sbb
mov
mov
arpl
fldl
cmpsb
out
mov
out
cmp
add
out
jbe
cmp
enter
push
mov
mov
kmovb
out
inc
ffree
mov
add
sbb
mov
xchg
jb
dec
and
xor
js
lahf
cmpsb
mov
je
in
call
loope
mov
xchg
movsl
mov
pop
clc
pop
rorb
lea
data16
call
popf
pop
into
push
mov
dec
sbb
push
fnsave
fbld
sub
nop
sub
scas
outsl
pop
ror
mov
inc
test
fsubs
xchg
inc
mov
xor
nop
addl
fmull
mov
mov
add
sub
mov
mov
ret
push
aam
clc
dec
ds
cltd
inc
xor
cltd
xor
push
jp
test
filds
mov
dec
adc
or
mov
adc
cld
addr16
push
loop
xchg
lock
rcll
mov
xchg
fadd
or
dec
test
pop
repnz
arpl
xchg
bound
iret
fcmovnb
mov
mov
push
mov
mov
jge
setae
and
push
loopne
jmp
pop
in
mov
ret
les
scas
gs
add
sahf
or
pop
fsubs
out
sub
ss
add
insb
lods
int3
and
sub
out
and
insl
xchg
mov
xor
add
scas
xor
adc
mov
add
adc
popf
xchg
sbb
adc
mov
lods
inc
test
mov
mov
push
or
vpblendmd
icebp
sbb
das
fiaddl
add
cmpsb
in
inc
sbb
ret
lret
pop
bsf
jge
add
mov
sub
mov
mov
fadds
adc
jg
ficompl
scas
rolb
add
jns
xchg
repnz
aaa
mul
notl
mov
jl
scas
sub
adc
sub
mov
in
into
out
push
pop
pop
mov
in
jecxz
jo
mov
dec
mov
xor
mov
cmp
mov
insl
lods
sub
jbe
add
or
pushl
xor
les
push
xor
mov
js
mov
repnz
dec
and
mov
mov
inc
movsl
loopne
lds
shll
mov
loopne
xor
leave
adc
or
pop
es
lods
add
je
jecxz
adc
out
add
push
jns
inc
stc
sbb
inc
jg
mov
mov
pusha
lret
mov
mov
add
pop
nop
int3
sbb
mov
fstl
mov
cwtl
cmp
fbstp
jl
adc
cmpsl
inc
aaa
push
pop
jo
sub
sbb
aam
mov
sarl
xor
jae
push
fstl
push
scas
ret
pop
push
stos
sub
ret
mov
lea
in
out
addr16
les
outsb
clc
add
in
adc
lcall
mov
push
enter
and
xor
mov
sbb
dec
sub
dec
mov
adc
pop
sbb
iret
mov
and
inc
inc
in
cs
shlb
xchg
or
xchg
pop
out
sbb
fstl
sub
cmp
and
in
jbe
out
pop
repz
jne
scas
test
out
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
