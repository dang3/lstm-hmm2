sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
test
int
into
dec
subb
cs
lods
mov
sbb
popa
mov
and
add
orb
xchg
pop
and
pushf
iret
dec
xlat
mov
scas
push
xchg
sbb
idivl
add
sahf
adc
mov
shll
scas
jl
mov
dec
or
push
movups
cmp
jne
orb
aad
push
mov
mov
and
ficomps
lods
add
jnp
repnz
cmp
lds
jns
insl
push
mov
out
add
jb
xchg
cmp
xchg
outsb
bound
sbb
mov
jl
div
xor
fs
fmuls
std
lcall
pop
lret
outsl
fs
in
mov
mov
sub
jnp
aad
jp
inc
adc
inc
mov
mov
inc
mov
mov
add
mov
pop
out
leave
gs
cmp
sbb
cmpsl
movsl
call
out
xchg
mov
mov
push
mov
sub
mov
push
xchg
pop
fldln2
pushl
lahf
push
repz
add
dec
cmpsl
pusha
test
mov
jne
repz
ljmp
push
lock
rcr
rcrb
push
mov
mov
push
jp
scas
pop
mov
and
into
xchg
movsl
mov
shlb
es
enter
rorb
xchg
ret
fmull
std
pop
addr16
fldl
xorl
xchg
add
sti
sti
inc
repnz
xlat
push
adc
fs
cmp
pop
jge
jp
xor
add
sub
xchg
cmp
or
filds
cmp
divl
add
jo
mov
cmpsb
jge
loop
push
movsb
pop
xchg
push
int3
pop
in
and
insl
add
xchg
pushf
cmp
push
push
movsl
scas
js
lcall
push
cmp
jmp
inc
cmp
mov
mov
movsl
sbb
out
idivb
test
int
mov
add
or
int
bound
cmp
lret
lret
mov
mov
cmp
mov
out
and
scas
mov
or
xor
lahf
enter
and
xchg
sbb
inc
jno
jmp
mov
sbb
arpl
insb
jnp
push
mov
mov
cmp
or
mov
sbb
add
addl
jo
ljmp
cmpb
es
push
xchg
loope
mulb
mov
and
mov
aam
dec
loop
cli
sahf
dec
add
mov
lahf
jl
pop
int3
dec
std
inc
pop
adcl
jmp
ret
aad
or
insb
ret
repnz
ljmp
leave
pop
push
mov
enter
jne
es
mov
cltd
mov
mov
psubq
es
xor
jbe
sbb
pushf
mov
inc
jge
inc
mov
xchg
cmp
fcom
inc
mov
stos
or
mov
mov
mov
fisttpl
loopne
jp
enter
sub
and
js
aas
jbe
jg
mov
add
bound
icebp
cmp
sbbb
aad
mov
xchg
ret
jecxz
pop
and
sub
add
sub
fldcw
fld
inc
rorb
enter
jg
test
mov
lods
pop
negl
dec
xchg
dec
xlat
mov
sub
pop
cmp
jnp
lods
imull
xchg
mov
popf
mov
sub
push
pusha
xchg
stos
js
sub
add
in
mov
ret
out
or
jmp
shl
xchg
pop
sbb
sub
pop
arpl
iret
cmc
or
xchg
fcoms
js
push
pop
nop
xchg
pop
mov
ja
push
push
pop
pushf
cmp
dec
test
mov
xchg
arpl
sbb
in
xchg
sbb
or
dec
pop
pusha
int
adc
or
push
pop
rcrb
and
rolb
adc
test
push
and
xor
mov
lret
pop
jg
nop
cmp
sub
pop
mov
outsl
flds
test
insb
xchg
outsl
jnp
ror
call
dec
pusha
aad
xchg
imul
aam
and
ds
dec
arpl
lahf
xchg
mov
jecxz
addr16
fs
in
and
dec
test
xchg
adc
push
das
inc
lret
push
push
inc
mov
arpl
push
shrl
std
cmp
adcl
pop
pop
cwtl
outsl
leave
jo
les
ret
test
add
jnp
cmc
push
je
pop
sbb
arpl
daa
xor
adcb
loope
mov
scas
pop
jg
sbb
icebp
add
dec
mov
out
jl
jmp
mov
stos
push
mov
jecxz
shrl
iret
jecxz
dec
bswap
scas
sbb
pushf
xorl
pushf
sahf
cmpsb
jno
jne
cmp
push
xchg
aad
mov
push
lds
pop
ljmp
out
or
push
shll
int3
sbb
sbb
dec
pop
mov
test
mov
imul
jbe
idivb
and
pop
sbb
nop
xchg
jmp
cltd
jl
out
in
cmpsb
pushf
std
inc
xor
movsb
or
insl
out
sbb
fnsave
aam
jge
out
ds
cwtl
icebp
pop
in
xor
push
mov
and
mov
adc
je
rorb
mov
shrl
cmp
into
inc
mov
inc
out
data16
adc
loopne
xlat
and
jo
loop
cmc
pop
or
cltd
pcmpgtd
push
out
mov
loop
cmp
cmp
iret
dec
gs
xor
and
ret
pop
mov
mov
xor
imulb
push
xchg
fimull
fcomps
aaa
pop
dec
stos
fldt
mov
ret
pop
mov
int3
mov
inc
cwtl
lea
push
and
in
pusha
rcrl
es
jmp
mov
or
or
mov
push
icebp
or
loopne
sbb
sahf
mov
sbb
imul
push
fistpl
cmp
addr16
sub
jne
pop
sbb
inc
xchg
clc
mov
icebp
clc
sti
je
cmp
mov
fs
inc
or
aad
sub
ss
pop
sahf
mov
mov
jae
popf
ret
fstps
cmc
les
out
sub
seto
cmp
in
movsl
dec
mov
iret
cmp
stos
lcall
scas
push
pop
subb
lret
rcrb
cmp
loope
or
hlt
or
bts
pop
lahf
jo
jg
fidivrl
jae
imul
or
xor
je
int3
fs
ret
jl
cmpl
add
dec
es
out
and
clc
mov
xlat
outsl
mov
and
mov
loope
shll
mov
nop
or
add
adc
inc
fcoms
ja
dec
ds
dec
add
sbb
cmp
add
sbb
push
insb
or
adc
and
mov
clc
xor
pop
or
sbb
and
movsb
jns
cmpsl
into
lret
pop
pop
or
inc
pop
insb
mov
mov
mov
jg
clc
imul
push
cltd
xorb
push
rcr
outsb
dec
or
jae
arpl
jo
jmp
aas
and
popa
pop
mov
push
or
sub
mov
std
jg
dec
pop
sbb
test
dec
jo
stc
lea
and
jno
jae
shl
pushf
lret
sub
or
aas
push
lahf
add
inc
add
cwtl
pop
rcrb
inc
jmp
push
loopne
jg
int
dec
mov
mov
cwtl
loopne
push
dec
fimull
sbb
aas
add
test
in
cmp
xor
pushf
mov
and
sbb
rcr
sub
or
xchg
dec
push
mov
or
pop
lock
sbb
outsl
mov
sub
cmp
std
ljmp
add
nop
and
mov
or
adc
mov
mov
mov
inc
iret
into
jmp
test
mov
mov
mov
xor
push
les
sbb
lods
sbb
cmp
aad
mov
fnsave
dec
rcrl
or
mov
movsl
subl
xor
stc
lahf
mov
fdecstp
test
popa
mov
fwait
enter
pop
movsb
gs
pop
stc
cmp
sti
sbb
aam
ja
sub
push
pop
data16
mov
cwtl
adcb
stos
inc
mov
enter
jnp
lahf
cmc
mov
mov
add
or
pop
insb
rcrb
in
loope
iret
xlat
push
xlat
jns
push
inc
scas
inc
hlt
add
sti
and
dec
adcb
movsb
sub
gs
pop
and
lock
rclb
xor
mov
out
fnstenv
xchg
test
loopew
push
lock
jp
xor
mov
cmpsl
xor
jp
sahf
adc
mov
inc
cmp
outsb
push
mov
pop
mov
test
call
scas
cmp
adc
lahf
xor
mov
adc
test
push
out
scas
adc
adc
xchg
fcomip
clc
data16
xchg
jbe
enter
jmp
insb
cld
mov
mov
repnz
mov
xchg
test
mov
popf
pop
or
hlt
hlt
push
loop
movsb
cmp
andl
out
and
scas
inc
adc
jnp
sub
mov
push
inc
sbb
jl
dec
jb
mov
dec
rcrl
cmp
jns
insl
mov
push
in
push
in
icebp
js
data16
or
or
outsl
movsl
jg
sub
mov
rcrb
cwtl
andb
icebp
mov
dec
or
adc
test
js
ret
jbe
mov
add
repz
andb
add
lods
cmp
xchg
adc
push
mov
cwtl
add
xor
push
mov
fmuls
mov
leave
adc
rolb
das
mov
sub
or
out
mov
and
aas
inc
mov
and
jnp
lahf
imul
adc
and
sbb
loope
aas
loopne
stc
stos
jbe
aaa
mov
in
push
scas
xorl
push
es
and
dec
out
repz
xchg
and
or
mov
jnp
aam
xchg
cmp
fnstcw
fisubs
nop
sub
outsb
cmc
pop
aad
movsb
mov
sub
sub
and
jae
adc
xor
nop
repz
add
xlat
fs
add
cmp
adc
xchg
aad
dec
xchg
dec
in
push
push
fptan
or
orl
or
or
or
mov
pop
inc
rorl
popa
test
das
mov
ja
pop
dec
in
inc
leave
in
sub
xlat
sub
std
xor
sub
cwtl
jmp
mov
mov
sbbb
arpl
pop
repnz
imul
and
inc
add
pop
push
inc
arpl
lahf
push
outsl
push
mov
sbb
gs
and
jb
pop
ret
add
sub
stos
add
test
cs
xor
or
dec
mov
and
sbb
mov
xchg
or
or
fildll
scas
ret
pop
clc
add
sbb
pop
scas
push
subl
aad
xchg
xor
xchg
repnz
arpl
sbb
pop
xor
push
idivl
cmpsl
jecxz
das
into
add
notl
mov
lods
movb
ffree
adc
mov
fnsave
icebp
test
std
and
push
dec
mov
ss
sub
mov
xor
dec
sub
adc
ror
fnstcw
add
mov
insl
mov
imul
test
sbb
test
mov
dec
jp
and
fnstcw
dec
syscall
mov
test
aam
inc
sub
bound
stos
or
in
popf
push
mov
dec
dec
stos
jmp
pop
lock
cmc
js
inc
lods
stos
cltd
aam
add
int3
cld
shlb
sbb
mov
icebp
out
mov
lea
lret
movsl
mov
addb
jns
sub
pop
insb
mov
sahf
sbb
jb
aas
jmp
sbb
mov
or
outsb
add
subl
adc
rol
push
cmp
lret
pop
test
add
ds
mov
orl
repnz
mov
orl
xor
mov
mov
stc
push
dec
in
xchg
imul
ss
ficoml
addr16
js
sbb
jg
add
cmc
jmp
sbb
mov
inc
mov
inc
push
ret
sbb
ss
jo
test
fs
icebp
mov
je
fsubl
insl
sub
cmp
xchg
cmpsb
cld
fiaddl
in
mov
push
int
mov
mov
pop
andl
js
repz
cmp
jp
fwait
cmpsb
lret
mov
mov
cmp
inc
ret
mov
test
dec
adc
sub
xor
cli
pop
cmp
mov
push
cmp
lcall
inc
cs
cld
inc
test
xchg
dec
and
push
jnp
clc
sbb
cmpsl
bound
cltd
js
roll
xchg
ljmp
hlt
into
mov
lea
scas
roll
pop
insl
cmpsl
enter
jl
dec
or
loop
lcall
rclb
gs
shll
stc
jl
adc
ror
out
dec
test
fs
cmpl
mov
popf
stc
imul
mov
mov
dec
jbe
fsubrs
xchg
pushf
or
rorb
mov
outsl
xor
mov
hlt
icebp
rcl
shll
andl
xor
nop
dec
add
pusha
adc
fimull
out
sub
lods
mov
ja
or
sbb
inc
dec
xchg
cmc
mov
cmp
pusha
shlb
outsl
movl
test
fcompl
fsubl
jp
dec
lahf
mov
sbb
std
inc
mov
int3
add
jge
in
pop
out
jmp
and
sahf
push
mov
adc
xchg
iret
std
jne
sub
cmc
mov
lcall
outsl
iret
inc
pop
dec
or
ret
inc
sbb
xchg
hlt
cs
or
cmpsl
lahf
xchg
xor
or
mov
arpl
test
sbb
pop
push
hlt
shrb
repz
into
iret
movsl
xlat
ds
scas
jecxz
pop
pop
sbb
dec
adc
lret
dec
sub
jp
mov
adc
add
jle
sub
pushl
lock
inc
movsb
jmp
jp
sbb
sbb
mov
push
stos
adc
pop
dec
xor
iret
clc
sbb
pop
sbb
pushf
insb
push
nop
or
pop
and
mov
ss
iret
xor
scas
imul
inc
jl
test
and
push
popf
jb
pop
int3
xchg
xchg
add
call
cs
out
sti
cld
sub
sbb
pusha
fst
jo
push
in
dec
pop
stos
jecxz
xlat
add
xchg
adc
xchg
rcrl
mov
outsb
int3
rcrl
in
leave
call
repz
adcl
fistpl
inc
clc
sub
xchg
popa
mov
adc
mov
test
push
xchg
pop
jno
inc
jns
xchg
ror
dec
fistps
pop
xchg
jbe
add
int
add
cmp
sub
inc
xchg
outsl
or
jp
stos
or
scas
jle
icebp
fwait
xchg
imul
gs
rcr
out
push
rcrl
addl
flds
in
jg
xchg
ds
jbe
test
pop
xlat
adc
cmpsb
pushf
fadds
mov
rep
cltd
jp
mov
and
or
in
leave
xchg
test
mov
loop
std
push
sahf
jl
push
xor
test
lods
jo
aaa
test
jb
xor
iret
arpl
shlb
ja
test
sbb
cmpsb
test
fisubs
xchg
dec
pop
test
sub
mov
test
sub
jmp
push
add
jnp
insb
sbb
daa
inc
stos
and
subb
xor
mov
mov
mov
xor
or
cld
mov
sarl
cs
mov
pop
or
inc
imul
incb
add
div
xchg
xor
inc
xor
out
cmp
sub
scas
repz
sbb
push
sbb
jp
cwtl
push
in
xor
pusha
mov
stc
dec
add
mov
pop
shlb
lahf
or
sbb
adc
repz
mov
jae
push
into
push
inc
insl
stos
pop
add
mov
mov
cltd
mov
mov
pop
mull
pop
adc
arpl
insb
mov
dec
push
lods
ret
adc
mov
mov
mov
sbb
xor
inc
das
jl
shrb
jb
int3
in
mov
push
mov
js
sub
cmp
jle
add
test
mov
lea
lds
in
add
xor
in
aad
cmpsl
lea
pop
pop
pop
pusha
fs
xchg
xor
sarl
jl
loope
icebp
or
cld
xlat
iret
push
test
mov
shlb
mov
imul
cmpsl
mov
cmp
xchg
ret
and
imul
int3
cmp
mov
push
xchg
adc
out
inc
lahf
push
fmuls
add
jle
les
xor
jmp
nop
push
je
inc
push
cmpl
sbb
xor
movsl
and
aas
jnp
push
add
je
mov
inc
jl,pt
addr16
popa
insb
add
and
cmpsl
loop
das
adc
bnd
cmp
push
xor
jb
imul
movsb
push
inc
adc
or
fistpll
insb
pop
mov
test
int3
clc
lods
jno
lock
jb
xchg
gs
fiaddl
xchg
lock
aaa
mov
jg
out
push
fisubs
push
push
in
cld
sarl
shld
cmp
cli
pop
flds
pushf
jecxz
jl
lods
insl
sarl
mov
loopne
mov
jl
mov
ss
mov
fld
js
js
lock
int3
loope
sbb
pop
data16
movb
shl
xchg
cwtl
insl
pop
mov
shlb
push
aaa
aas
inc
push
bound
mov
mov
push
clc
inc
sbbb
test
xchg
hlt
rcll
adc
pop
sub
add
pop
lods
xchg
lret
lods
xor
movsl
repz
pushf
hlt
pop
daa
ret
pop
ret
cmc
std
pop
sbb
mov
xor
and
jp
or
in
xor
lret
stos
testb
jge
in
in
pop
leave
mov
outsl
inc
add
je
mov
or
mov
fwait
pop
popa
fistps
pandn
cmpsb
xchg
lcall
and
pop
lea
cmp
add
mov
push
lods
xor
pop
imulb
pop
rcrl
jmp
addl
repnz
aas
sub
repnz
xchg
mov
loope
pusha
sbb
fwait
in
push
rcll
lret
jecxz,pt
adc
in
push
pushf
ds
cltd
std
mov
repz
pusha
mov
jb
mov
int
xchg
mov
es
mov
inc
outsb
push
inc
pop
cwtl
test
fwait
rclb
pushf
popw
jp
push
jg
add
fwait
or
dec
leave
shrl
mov
mov
push
add
push
jo
enter
mov
pop
jno
xchg
mov
inc
ret
mov
xchg
dec
fdivl
in
fnstcw
scas
dec
cmc
push
mov
das
fcmovne
stc
shr
and
and
insl
es
sub
cld
xchg
cmp
pusha
inc
mov
fcomip
jo
xchg
scas
sbb
ss
inc
mov
lds
popa
das
stos
push
js
fucomp
les
or
inc
jns
movsb
rcrl
sub
fs
push
xor
fistps
jnp
ret
ja
enter
adc
xor
or
xchg
popf
adc
mov
cmc
jl
xchg
and
jg
pop
pop
mov
inc
cmc
xor
mov
and
dec
cmp
sbb
pop
out
pop
test
sub
popa
popf
pop
ljmp
clc
push
or
inc
dec
fdivrp
xor
sbb
jae
les
mov
adc
jbe
test
lods
push
scas
mov
xor
cld
pushf
mov
cltd
iret
mov
enter
pop
in
shr
in
and
inc
jmp
hlt
sbb
int3
jg
in
es
shll
rcll
outsb
sbbb
cmpb
sub
jo
lret
adc
sti
repz
les
shrb
mov
jne
data16
jl
jle
push
sbb
or
ss
cmp
mov
test
jl
xor
jl
xor
inc
rorb
dec
inc
into
popa
lahf
mov
mov
cmp
inc
mov
sahf
hlt
add
ret
dec
adc
lock
mov
arpl
cmpsl
push
iret
cmc
pop
nop
jb
push
jb
adc
aad
std
xchg
xchg
add
adc
mov
mov
sbb
mov
imul
or
sub
inc
xlat
clc
push
fsubrp
add
pop
int
mov
jp
pop
inc
mov
loopne
sarb
sbb
ss
fidivs
xchg
inc
ds
aad
jnp
ljmp
cltd
test
aas
mov
jns
lcall
iret
test
popa
aas
and
dec
xchg
xchg
adc
add
int
cwtl
cmp
daa
sbb
addr16
sti
in
roll
decb
int
sar
fstps
call
fwait
movsb
inc
xchg
xchg
fsubp
pop
je
outsb
mulb
imul
mov
inc
add
pop
ja
lock
jge
pushf
jg
cmp
dec
in
mov
sbb
push
fs
cmc
xor
mov
xchg
sbb
ja
enter
pop
testl
dec
push
sbb
cmc
mov
push
fs
mov
fnsave
lods
mov
mov
push
jns
lea
dec
fldcw
dec
pushf
fcmovbe
or
loope
sbb
test
inc
cmp
stos
das
cmpsl
push
daa
xchg
addr16
or
adcl
inc
cmp
mov
mov
ss
pop
data16
xlat
cli
outsl
push
cltd
iret
dec
and
stos
fstl
inc
fdivl
cmpsb
mov
inc
mov
sub
dec
data16
dec
xor
jmp
fiadds
mov
xrelease
add
pop
jmp
movsl
mov
in
jl
mov
jg
test
loopne
es
in
enter
roll
jno
mov
jge
pop
push
lcall
inc
fsubr
rcl
push
aaa
add
pop
sub
sub
xor
pop
inc
mov
push
jp
rorl
sub
fildl
mov
inc
dec
cmp
inc
push
add
ds
daa
jbe
imul
out
push
xor
dec
xor
or
and
jo
push
call
cwtl
jmp
cmp
loope
ja
stos
addb
push
xchg
mov
rorl
lds
cli
movsb
jp
movaps
mov
ret
jle
push
rorb
xlat
addr16
push
leave
mov
pushf
push
mov
outsl
frstor
sarb
xchg
ss
mov
mov
lea
push
mull
push
fadd
pop
inc
inc
pop
lods
outsl
ljmp
outsb
cli
inc
bnd
inc
push
iret
add
insl
add
mov
mov
incl
je
repz
cmpb
and
sbb
call
inc
imul
or
xor
fbstp
out
inc
inc
mov
cld
cwtl
sub
xchg
hlt
aad
sbb
add
xchg
inc
outsl
pop
sbb
mov
sbb
cli
cs
fldenv
jne
xor
aas
cmpsl
test
ficoms
movsb
inc
mov
imul
clc
pop
out
sbb
push
mov
mov
mov
sti
jp
and
xchg
pop
mov
sahf
orb
stos
dec
nop
cwtl
int
mov
mov
in
int
xor
cwtl
daa
outsb
pop
push
and
pop
lea
das
push
mov
adc
xorl
outsb
sbbl
ret
aam
enter
shl
fidivs
scas
inc
pop
fucom
sahf
or
enter
insb
adc
xchg
mov
iret
dec
cld
ds
nop
push
mov
pop
jl
and
leave
sar
outsl
stos
outsl
xchg
cmp
push
push
out
cmp
xor
hlt
xchg
ffreep
test
add
lea
aad
mov
jae
popf
push
cltd
cmp
mov
das
out
ljmp
iret
cld
scas
call
lods
mov
addb
iret
cmp
mov
pop
push
dec
jnp
ficoml
std
sub
in
pop
push
add
push
and
stc
mov
xchg
mov
and
fadd
xor
repnz
ret
xor
enter
cmpl
jns
popf
shrl
stos
std
inc
add
mov
mov
lcall
push
icebp
mov
outsb
repz
xor
shll
clc
inc
in
xor
pushf
test
or
push
ss
movsl
xchg
hlt
and
xor
negb
dec
mov
pop
adc
cli
mov
and
fisttpll
cwtl
mov
in
inc
aas
cld
adc
bnd
pmaddwd
mov
outsl
mov
mov
jae
jbe
cwtl
imul
mov
pushf
lahf
ss
mov
mov
sub
add
push
out
scas
iret
mov
mov
push
sub
popf
lea
mov
or
neg
in
add
mov
lret
aam
sbb
lret
test
movsl
ljmp
stc
fbld
popf
outsl
dec
jmp
jl
jg
hlt
push
repnz
pop
sahf
pop
sub
fs
and
cmp
add
in
sarb
jge
fld
stos
loopne
sub
inc
pop
es
pop
xor
sub
xchg
shlb
push
mov
shl
das
das
stos
inc
jno
leave
sbb
fstpt
mov
imul
add
inc
push
add
popf
lds
mov
movsb
das
cltd
fidivrs
out
or
ret
push
andl
cmpsb
mov
cld
mov
mov
aam
lret
jnp
aas
mov
call
inc
ja
stos
pop
sbb
cmp
arpl
loop
jp
pop
movsb
test
pop
outsb
cmp
lods
xor
or
xor
mov
inc
std
repnz
ficomps
jmp
in
shrl
xchg
es
test
pop
scas
lcall
pop
inc
loope
mov
mov
insl
loop
dec
mov
sub
mov
call
imul
pop
lds
dec
xchg
imul
pop
sub
mov
idiv
push
xorb
mov
push
cs
mov
outsb
push
loopne
orb
insb
push
mov
mov
mov
lcall
scas
sbb
xor
pop
xor
ja
lods
out
jmp
jnp
insl
xchg
rcrb
xlat
hlt
jae
mov
sbb
call
fmul
out
std
add
jns
push
aaa
ret
sbb
xor
push
and
xor
aas
loop
popf
test
ss
lock
xorb
lock
hlt
mov
mov
out
gs
adc
cwtl
sbb
cmp
fidivl
mov
lret
push
pusha
daa
inc
inc
aaa
or
shll
push
mov
push
hlt
mov
std
or
into
sub
ljmp
and
stc
stos
mov
mov
in
outsl
jp
dec
pop
xlat
and
subl
mov
mov
push
popa
xlat
out
push
jbe
mov
mull
stos
pop
mov
jo
cld
adc
jno
xchg
mov
outsl
and
mov
xchg
pcmpeqw
xchg
gs
jmp
xchg
stos
lcall
mov
cmp
push
or
aas
inc
decl
repz
cmpsb
cld
jle
lods
sbb
pop
pop
leave
mov
xlat
std
leave
cmp
pop
sbb
fwait
push
adc
pop
stos
mov
jl
ret
lahf
cmp
jb
dec
les
dec
repz
push
jmp
cmpsl
ljmp
imul
cs
insb
push
push
lds
lcall
aam
mov
fsubrp
mov
or
loop
sbb
jae
sub
scas
push
fs
push
inc
push
test
push
mov
inc
adc
adc
pop
or
add
insb
cmpsb
dec
aam
pop
or
test
arpl
pusha
inc
aas
stc
mov
lock
idivl
in
addr16
cmp
push
into
or
movsb
ds
mov
jp
pushf
repz
mov
sub
xor
test
sbb
cmpsb
sub
xchg
dec
lret
adc
add
arpl
mov
imul
push
cmp
jae
aas
add
loopne
mov
xor
jmp
data16
push
ds
bound
mov
jge
xchg
int
mov
jnp
out
fidivs
jnp
insl
jg
push
in
inc
mov
cmpsl
fsub
mov
pop
je
or
repz
inc
in
imul
rorl
inc
mov
pop
movsb
add
jne
xchg
push
add
cmp
out
aam
mov
out
jmp
cmp
lds
ret
lods
out
cmpsl
xchg
fisubl
hlt
ds
shlb
sub
movsl
lock
push
and
mov
push
outsl
mov
pop
cmp
lret
out
add
inc
imul
push
jns
hlt
popl
dec
and
mov
loope
ficoml
lods
mov
sub
xchg
add
add
push
in
mov
and
ret
pop
gs
fnstcw
stos
dec
mov
gs
cltd
insb
fbld
sbb
test
mov
jl
and
push
sub
push
and
out
cmp
push
sti
div
mov
xor
out
int3
pop
and
fs
ret
xor
stos
jnp
ss
mov
fmuls
mov
jb
inc
jne
in
lock
cmp
jb
popl
xchg
hlt
call
fwait
pop
ret
mov
inc
add
adc
in
es
jbe
insb
pusha
out
mov
inc
out
mov
jns
mov
xor
sbb
sbbl
and
jp
pop
sahf
das
outsl
mov
pop
jmp
cld
mov
jmp
into
leave
pusha
jb
js
insl
call
aaa
cwtl
push
out
jns
mov
or
xlat
rcll
xchg
cmp
aad
sbbl
icebp
sbb
stos
adc
jo
fidivs
stos
mov
mov
ret
jo
adc
pop
mov
pushf
arpl
mov
mov
xchg
lods
push
out
fistpl
addb
leave
test
adc
adc
sbbl
jmp
adc
clc
jle
hlt
and
jb
ds
fbstp
pop
pop
arpl
int3
aam
mov
adc
add
mov
popf
lret
stc
ret
ss
sub
sub
push
aas
xor
and
jle
movsl
scas
cli
das
jl
jo
inc
fstl
lods
jne
aas
jns
mov
bound
and
popl
cld
jmp
pop
jl
dec
popa
push
sub
cs
xchg
add
mov
xchg
fimull
fadds
jg
out
xlat
sub
xorl
mov
xor
mov
xchg
inc
out
stc
scas
mov
fstl
and
aaa
rorl
in
push
mov
cmc
push
test
testb
xor
pop
inc
gs
rcrl
mov
push
pop
aad
sub
rcl
mov
mov
ja
mov
mov
cmpsl
movsb
cmpb
addr16
hlt
xchg
int
fsubl
in
cmp
mov
dec
in
shlb
or
int
into
xchg
sub
pop
adc
in
pop
push
xor
mov
xor
sar
pop
xchg
fs
out
dec
out
dec
push
push
mov
gs
daa
cmp
xor
ret
mov
push
mov
sbb
loope
mov
pop
mov
sub
pop
cmp
das
sbb
rolb
lcall
cmp
nop
lods
popa
mov
ljmp
and
jae
mov
fisubrs
xchg
clc
pop
scas
lcall
or
jne
or
popf
aaa
cld
jb
xor
or
ret
ds
leave
ret
sub
aas
pop
pop
push
cmpb
jnp
outsl
mov
push
nop
je
in
dec
and
ffree
adc
mov
pop
loopne
cmp
stos
xor
test
sub
dec
cmp
pusha
bound
pop
jle
mov
cs
mov
sbb
lods
add
ret
jns
sar
std
neg
enter
mov
xlat
in
mov
cwtl
pop
js
data16
pop
pop
sahf
and
add
mov
add
pushf
push
cmp
inc
scas
fcmove
or
push
push
xchg
out
xchg
lds
aad
das
iret
cmp
inc
sub
fldl
jnp
add
lcall
xchg
mov
and
sbb
or
sbb
push
inc
xor
cmpsl
dec
leave
enter
inc
or
pop
in
in
pusha
or
leave
mov
dec
mov
push
mov
ja
loopne
inc
xlat
ficoms
mov
jl
jecxz
stc
or
outsb
adc
popa
jbe
loop
cwtl
mov
sub
inc
xor
mov
sub
mov
mov
cmp
mov
pop
dec
inc
fwait
lods
iret
lcall
dec
stos
sti
das
mov
dec
stos
xchg
insb
fs
or
pop
outsl
loop
aaa
sti
pop
leave
push
int3
mov
lea
ja
push
sbb
mov
hlt
xchg
push
test
repnz
ljmp
cmp
adc
stc
lea
fimuls
mov
jbe
cltd
mov
mov
xor
cltd
int3
mov
xchg
test
hlt
dec
add
adc
lds
mov
jecxz
and
data16
ja
lods
xchg
out
push
mov
gs
mov
xlat
xchg
pop
xorl
mov
cmpsb
mov
fildl
jnp
dec
ret
into
or
daa
stos
aam
fldt
or
xchg
xchg
in
call
iret
in
mov
dec
fxch
fsubl
jae
jb
in
ret
stos
dec
mov
sbb
or
nop
jecxz
imul
icebp
push
lods
sub
psraw
sahf
mov
and
add
jp
jle
pop
inc
hlt
fs
and
jae
pushf
stos
xchg
pop
je
insl
pop
sub
mov
xor
pop
jge
addr16
xlat
pop
jge
out
inc
stc
xlat
cltd
pop
pop
outsb
std
inc
ret
shll
adc
test
mov
adc
pop
mov
add
jmp
jne
jb
and
inc
ftst
push
fildl
adc
adc
push
shll
div
sub
lods
ficomps
daa
inc
xchg
push
sub
push
sbb
leave
add
xor
loopne
mov
lcall
cld
or
sbb
sbb
mov
pop
sbb
imul
rcrb
xor
shlb
ljmp
mov
fiadds
enter
sbb
aas
lret
repnz
roll
xchg
mov
xchg
lcall
push
lahf
stos
push
sbb
push
bound
push
sub
sbb
mov
stos
icebp
xchg
mov
int3
scas
and
adc
and
mov
imul
lret
inc
rcrb
cmpxchg
ljmp
rclb
push
push
mov
cli
iret
fstl
pop
push
add
in
ficompl
mov
enter
mov
add
fs
std
mov
test
outsl
xlat
fsubr
daa
push
mov
mov
xchg
pop
stc
ds
or
cld
out
into
sub
shl
lods
push
pop
add
dec
and
xchg
dec
in
imulb
cmpsb
xchg
imul
dec
mov
add
fildll
cmp
mov
gs
mov
pop
or
loopne
pop
sbb
movsl
and
ret
jns
repnz
pop
jl
divb
into
cs
int
mov
stos
mov
xchg
cli
lods
xor
inc
lods
ret
in
lods
cwtl
sub
aaa
adc
ss
int3
push
mov
push
inc
ret
lock
adc
fcoml
push
cmp
lahf
lds
stos
mov
aad
xor
xorb
push
addr16
ss
pusha
subb
lock
mov
push
loop
pop
sbb
bound
and
pop
inc
cmp
mov
mov
repnz
push
cmp
xor
push
sub
mov
dec
jbe
push
out
inc
sahf
sbb
aas
ds
cltd
out
jnp
jae
fs
sub
or
xlat
test
addr16
mov
mov
movsb
fildll
loop
cmp
mov
imul
sbb
mov
aas
mov
or
mov
aaa
inc
out
fldt
sbb
sbb
cli
pop
je
mov
enter
inc
xchg
stos
xchg
sahf
pop
mov
mov
enter
pop
or
xor
loop
adc
repnz
or
mov
or
outsb
mov
push
jg
dec
mov
jo
aad
fsubs
adc
or
cmp
push
insl
add
lea
cmp
test
push
ret
pop
loope
jp
mov
scas
or
mov
cwtl
leave
adc
xor
jo
mov
adc
add
pop
xchg
jle
mov
imul
dec
ds
dec
add
in
xchg
test
and
data16
test
jge
out
mov
mull
jl
out
je
sub
sti
xor
je
jg
or
xchg
push
out
daa
dec
ret
lret
cli
lock
sarb
mov
sub
mov
loop
arpl
repnz
cmp
cmp
jmp
je
and
fstpt
push
xchg
adc
inc
in
std
pushf
mov
ja
bound
stos
fstpt
hlt
xor
testl
outsb
lfs
int
inc
popa
fcmovu
and
jbe
aas
js
call
fs
and
add
mov
and
xchg
loope
push
xchg
in
inc
fldt
xchg
sub
xor
and
in
lock
push
lock
lods
out
fwait
inc
cmp
lds
fmuls
add
mov
push
mov
xor
call
push
pop
mov
jbe
cs
cmp
jne
xchg
mov
pushf
mov
xor
or
test
mov
dec
xchg
ret
stos
inc
mov
lcall
lahf
inc
movsl
andb
hlt
and
test
in
fstpl
std
stos
dec
and
mov
fcmovu
dec
push
rcrl
sti
testb
and
pop
adc
pop
adc
or
sbb
xchg
push
jecxz
test
xor
lds
lret
test
int
sbb
cs
or
push
cmp
insb
cmp
adcb
pop
fisubl
dec
sub
shrl
inc
std
push
stc
sub
add
in
pop
jecxz
adc
test
dec
adc
pop
jle
stc
imul
and
sub
pop
into
mov
rclb
push
in
arpl
pushf
mov
stos
mov
cmp
pusha
ret
jl
xlat
clc
lods
out
shl
loope
shlb
dec
mov
daa
lock
mov
add
sbb
iret
and
popa
dec
stos
mov
inc
rcrb
jp
int3
stos
lret
out
cmp
and
xor
aad
rorl
mov
inc
fadds
negl
and
insl
jl
xchg
sub
ret
js
mov
jmp
rcll
add
fbld
xor
mov
push
stos
pushf
call
push
or
sub
lret
xorl
dec
pop
push
mov
jns
jns
jne
ljmp
jge
cmpsb
and
mov
inc
fsubrl
mov
sbb
inc
cli
imul
jne
cmpl
adc
scas
dec
in
in
sbb
mov
fs
repz
cs
aas
mov
mov
loope
mov
adcb
repnz
enter
stos
push
les
mov
dec
xchg
jns
mov
sahf
dec
adc
push
popf
loop
repz
jae
add
loop
outsb
cli
das
clc
inc
hlt
adc
fisubs
push
xchg
pop
aam
dec
or
dec
cmc
dec
pop
decb
add
push
sbb
in
cmp
or
sbbl
mov
push
cmp
mov
es
test
xchg
and
push
and
out
ljmp
sub
cmp
fistpll
ret
jnp
push
mov
or
movsl
and
add
ljmp
div
xlat
mov
insb
ljmp
mov
xor
in
scas
add
mov
jle
mov
mov
pop
jle
add
pusha
iret
sarb
insl
jl
push
addb
ret
daa
pop
int3
jp
jge
cmp
cmp
push
push
icebp
or
ror
mov
out
pop
testb
mov
inc
je
lock
and
mov
arpl
fiadds
popa
jp
xchg
int3
dec
imul
jle
sahf
pop
fwait
sub
push
aam
xchg
clc
pop
shlb
in
test
es
decl
sti
sub
mov
movsb
cwtl
cmp
repnz
add
pop
aaa
sub
sbb
cmpsl
push
bt
test
shll
data16
mov
punpckhbw
pushl
adc
mov
aam
push
push
add
mov
rol
and
mov
cmp
adc
adc
mov
mov
push
insb
sti
dec
test
ljmp
insb
aaa
xchg
xor
stc
stos
xchg
adc
sub
insl
lret
fwait
mov
out
xor
push
leave
jecxz
fcmovnbe
xchg
push
ljmp
push
ljmp
mov
leave
push
push
ficompl
iret
jno
dec
sub
arpl
or
mov
fstps
lds
and
adc
push
mov
bound
jno
or
xor
add
imul
test
ret
add
dec
dec
imulb
jo
mov
push
xchg
mov
lds
movsb
mov
imul
lods
xchg
cli
mov
aas
pushf
rcl
add
testl
jnp
dec
bound
jne
test
nop
clc
imul
push
jle
inc
cmp
stc
lods
mov
add
mov
mov
pop
daa
jns
sbb
int3
arpl
scas
adc
std
and
push
sbb
fisubs
xchg
and
aas
icebp
test
mov
arpl
fstl
and
filds
push
pushw
jecxz
sbb
mov
xchg
fnstsw
cmp
sub
xor
inc
movsb
bound
xlat
push
pop
popa
jb
xchg
jo
imul
out
xchg
adcl
aas
dec
std
lret
int
mov
fnsave
sbb
cld
das
jle
lods
daa
fiaddl
in
cmp
ficompl
test
pop
adc
mov
outsb
xchg
rcr
sbb
mov
sbb
mov
and
cmp
mov
pop
lret
push
inc
fwait
dec
push
data16
lret
add
jno
cld
pop
in
sti
inc
mov
hlt
leave
es
les
push
movsl
cmp
jmp
outsb
push
xchg
mov
rclb
mov
jbe
popf
sarl
mov
aas
in
and
loope
rcrb
in
xchg
popa
in
cmpb
mov
xchg
adc
jns
xchg
stc
shll
roll
data16
in
sub
sub
add
or
inc
aam
mov
and
gs
shll
shlb
outsb
pop
movl
add
aas
scas
xchg
ss
jle
stos
stc
pop
aas
mov
mov
push
inc
stos
xorb
cmc
xchg
jge
divb
testb
aaa
mov
jecxz
adc
push
insb
in
lods
jb
pop
or
out
push
ljmp
push
xor
in
outsl
mov
cmpsb
or
xchg
jp
repz
into
or
xchg
fsubr
or
lods
popa
popf
jecxz
lds
pop
cld
or
inc
pop
inc
jle
mov
int
sarb
sbb
push
mov
loopne
rorl
in
jp
sbb
jge
push
xor
loope
sti
aaa
ret
push
dec
push
xorl
or
notb
mov
add
xchg
jnp
daa
ss
or
mov
and
push
fwait
mov
std
fchs
jge
stos
rolb
fildl
ret
divl
aaa
stmxcsr
adc
cmp
or
lahf
arpl
imul
jmp
add
gs
jns
sbb
call
out
ljmp
in
or
ret
out
push
ret
pop
sbb
adc
xchg
mov
mov
aad
in
cmp
movsl
push
jecxz
xor
jmp
and
not
loop
xor
fwait
cs
lds
push
or
push
popl
in
dec
sbb
mov
push
inc
sbb
inc
sbb
mov
fs
daa
pop
imul
enter
mov
push
xor
pop
test
push
arpl
mov
cmp
push
xchg
mov
fstpl
ja
pop
sahf
xchg
cld
lret
nop
mov
aas
jnp
mov
scas
inc
repnz
dec
pop
and
test
mov
push
in
sub
push
pop
shl
cli
push
aaa
scas
dec
cmp
popa
out
sbb
add
jae
push
test
sahf
mov
or
mov
cmc
inc
pop
or
mov
in
and
inc
loopne
in
clc
ljmp
pop
cmp
lret
or
js
add
into
adc
push
sbb
idivb
or
les
inc
pushf
test
aam
dec
and
and
inc
aam
repnz
dec
dec
movsl
sub
lret
cld
xchg
and
push
fidivrs
mov
xchg
cmp
add
sub
pop
push
movl
cmpsl
mov
xchg
lock
push
lret
jno
mov
fstps
ja
jmp
cmp
sub
cltd
pop
out
add
fildl
mov
adcl
ss
in
loop
push
cmpsl
out
popa
stos
cmpl
mov
cmp
cmp
dec
ficompl
or
sub
cltd
dec
sti
loop
clc
push
repz
add
cmp
divl
inc
cltd
fdivr
pop
dec
out
ror
loopne
sub
test
fsubrl
cmpsl
pusha
xchg
xor
pusha
ds
lret
inc
xlat
and
dec
and
not
pop
mov
aad
jo
test
push
mov
pop
jb
movsl
clc
jns
adc
pop
xchg
cmp
xor
mov
fisubrs
and
mov
dec
push
or
and
jae
add
cmpb
scas
sbb
inc
enter
jno
sbb
sti
fsubrl
jo
jecxz
mov
xchg
jnp
cmp
jle
pop
in
inc
and
push
fsts
adc
dec
fdivrl
push
jae
iret
dec
aas
lret
aam
add
sub
dec
xor
stos
sbb
fnstcw
leave
stc
mov
or
mov
stos
bound
outsb
insb
mov
ficompl
jmp
stos
in
jns
xor
jno
insb
outsb
fimuls
push
dec
mov
xor
or
ja
push
lods
xor
out
gs
sbb
and
jl
jle
iret
test
repz
lret
pop
into
add
loope
jae
and
stos
mov
nop
repnz
sbb
inc
popl
nop
mov
popf
lock
jnp
int3
dec
push
sbbl
cmp
repnz
ds
cs
insl
shr
sbb
sbb
lods
ret
and
xchg
mov
cld
pop
push
jecxz
cmc
pop
scas
mov
gs
rcrl
pop
call
adc
jno
call
pop
int
push
ds
and
int3
cmp
hlt
pop
xchg
sub
xchg
fucom
jge
repnz
pop
push
repnz
xchg
lret
pop
rorb
inc
iret
jo
cmp
aam
push
int3
cmp
cmc
mov
xor
inc
push
out
into
lret
ljmp
dec
jecxz
cltd
out
push
repz
outsl
in
xor
flds
sbb
jno
push
leave
pop
fnsave
out
out
fcom
jno
jnp
cltd
push
or
push
cmp
push
and
inc
repnz
pop
push
insb
add
fs
test
cmp
stos
mov
orb
xchg
lock
sub
jbe
jb
xor
fwait
rcrl
dec
into
fidivs
rolb
mov
xor
xchg
ds
out
sbb
shlb
cs
fbstp
outsl
xor
aad
xchg
pop
jmp
pusha
push
ja
ror
cmpsl
dec
mov
outsl
in
add
xchg
mov
xchg
mov
sbb
jge
mov
push
or
push
mov
mov
sbb
pop
mov
icebp
jne
sbb
mov
jb
sti
scas
or
xor
outsl
das
fistpl
js
pop
or
mov
out
cli
xchg
pop
stos
xorl
cs
or
pusha
loope
add
mov
cltd
mov
or
in
out
pop
jl
xor
push
adc
pop
or
xor
jmp
lret
incb
sbb
push
pop
sub
jg
arpl
test
sub
inc
cmp
data16
fxch
sub
lods
enter
lret
and
scas
jg
cli
nop
dec
push
and
or
or
xchg
cli
in
or
lea
cmpl
aam
jb
xorl
or
sti
jns
xlat
ss
xor
mov
dec
shr
call
ret
ds
mov
cmpsb
test
inc
lahf
adc
mov
xor
cmpsb
pop
int3
sub
fldl
push
test
mov
pushf
and
pop
out
out
xor
loopne
pop
pusha
xor
lods
addr16
out
sub
pop
popa
dec
sub
push
pusha
jle
sahf
ret
jmp
sbb
or
sti
and
loop
pop
or
push
lret
insl
test
sub
mov
xor
pop
fwait
xchg
pop
pop
mov
mov
xchg
out
insl
inc
xor
xchg
push
bound
xchg
cld
sub
dec
pop
mov
mov
imul
cmp
js
mov
or
mov
insl
mov
mov
icebp
jno
mov
fmuls
xor
adc
or
lahf
xchg
popa
lret
mov
jae
subl
adcl
fstp
test
mov
xor
xchg
insl
cmp
add
pop
mov
and
fistps
pop
mov
xor
mov
or
mov
or
shlb
inc
or
jge
inc
das
daa
aad
lds
fs
mov
fisubrl
lahf
scas
insl
pop
mov
cmp
enter
stos
jnp
pushf
ljmp
jnp
mov
aas
repnz
int3
lret
adc
push
mov
add
sbb
in
movsl
hlt
mov
in
jle
pop
inc
dec
xor
lret
sbb
ds
pop
and
jnp
or
xlat
push
rorl
dec
leave
inc
int3
pop
adc
cmpsl
sub
mov
enter
or
jl
rol
bound
repnz
pop
pop
nop
jbe
and
repnz
fstp
push
cltd
loope
pop
clc
xchg
stc
jle
repnz
adc
mov
call
lods
hlt
popf
mov
faddl
mov
jl
mov
fnstsw
call
stc
repnz
lahf
adc
cmp
aad
js
imul
mov
stc
fbstp
testl
pop
jae
sbb
shrl
clc
add
ljmp
mov
divb
cmp
lods
xchg
mov
pop
push
ret
notl
cmpsb
ljmp
stos
or
ljmp
cs
mov
cmp
cs
jns
push
pusha
pop
mov
xchg
dec
aaa
jae
push
inc
insb
xchg
imulb
es
dec
repnz
mov
push
decb
sbb
outsl
arpl
fcoml
jmp
jae
add
inc
xchg
std
dec
ljmp
inc
imul
lods
nop
popa
movsl
add
test
sub
jle
int3
mov
enter
dec
out
mov
decb
arpl
insl
rclb
scas
or
mov
sub
jmp
imul
icebp
dec
and
outsb
mov
js
fisttps
dec
outsb
fstpt
xchg
mov
lret
jbe
fisubrs
pop
arpl
cmp
sub
fs
repz
hlt
aaa
mov
daa
and
aas
lods
nop
cmp
mov
add
dec
push
popf
mov
push
jmp
fnstsw
jns
lea
push
leave
int
lcall
imull
sub
push
mov
dec
push
add
mov
popf
sub
test
cwtl
pop
add
mov
xor
cld
shl
jne
testb
imul
das
xchg
and
jno
xor
imul
push
push
movb
jle
fidivs
ljmp
movb
and
pop
jmp
xchg
mov
rcrb
cmp
mov
cmp
push
adc
dec
xchg
cmp
mov
cmpsl
inc
sbb
dec
addr16
dec
cmp
aas
ss
mov
jecxz
cmp
jae
pop
sbb
dec
out
and
sub
xchg
sbb
mov
out
aaa
aas
clc
call
sbb
test
movsl
popa
aad
mov
dec
and
enter
sub
push
push
pusha
or
xlat
ss
arpl
test
mov
cmpsb
sbbb
mov
xor
xor
add
and
pop
pop
sub
adc
jecxz
sub
pop
pop
shlb
ja
je
or
dec
lret
das
xchg
ret
lret
sub
add
jp
jmp
repz
jecxz
add
out
pop
les
mov
js
mov
xchg
pop
push
push
imul
xor
push
mov
movsb
sub
mov
sbb
insb
cmp
pop
xlat
adc
leave
mov
stc
ror
cmc
xchg
mov
inc
jne
cmpsb
punpckhbw
jecxz
push
mov
push
xchg
ss
hlt
lods
or
pop
into
adc
sub
pop
cmp
sarb
ja
pop
fiadds
jno
mov
dec
int3
xchg
dec
add
push
adc
xchg
inc
cmpsb
out
mov
push
xor
dec
mov
dec
stos
std
dec
mov
ret
dec
sti
fdivrs
jns
adc
xchg
ds
into
fstpt
popa
loope
test
cwtl
sub
add
pop
in
aad
adc
fildl
add
int3
push
adc
out
push
jp
pop
push
scas
fstps
mov
sub
sbb
sub
mov
mov
and
test
lods
pop
xlat
testb
or
inc
cmp
adcb
push
loopne
xor
xor
clc
sbb
dec
push
movsl
mov
dec
pop
push
push
sbb
xchg
mov
dec
hlt
movsb
push
lock
shll
jmp
js
insl
test
ljmp
fldenv
inc
ret
lcall
dec
or
push
or
cmp
sbb
mov
daa
jle
ds
pop
and
pop
push
fs
sbb
test
test
xor
mov
jmp
add
mov
add
cmp
or
test
push
out
insb
sub
fwait
pushf
sbb
mov
push
sbb
cmpsb
fldenv
or
jb
mov
xchg
into
push
pop
add
shr
pop
adc
cld
loop
mov
sbb
adc
add
pop
mov
xchg
xlat
fcoms
adc
pop
pusha
pop
lahf
xchg
lock
test
mov
adc
jo
and
or
pop
arpl
jmp
fiadds
pop
push
xchg
push
add
and
jbe
das
pusha
je
dec
ja
mov
push
xchg
cs
and
jo
push
imul
adc
arpl
clc
imul
mov
jnp
cmpsl
cld
int3
imul
xor
jb
in
fmuls
jmp
xor
out
or
adc
jno
jo
insb
jl
std
pop
xor
lds
sub
jl
cld
fistps
cmp
es
fwait
push
or
fs
jle
or
outsl
push
fnsave
scas
mov
ret
les
mov
cwtl
mov
iret
lock
pop
lock
push
cmp
inc
cmpsb
mov
pop
sbbb
inc
ss
adc
ret
test
fstpl
cmc
xchg
cld
mov
jbe
push
pop
mov
fimuls
dec
ss
lods
inc
lcall
shr
push
icebp
dec
movsl
cld
out
xchg
lock
mov
enter
pop
xchg
hlt
loop
in
fisubs
mov
cmp
fs
push
mov
aas
out
xchg
arpl
ss
mov
sti
call
pop
adc
dec
pop
pop
shl
jb
sbb
popa
push
cmp
sahf
xchg
shll
dec
movsl
repz
jmp
xor
mov
ficomps
pop
xchg
enter
faddp
into
jne
stos
xchg
test
push
test
inc
adc
jo
data16
mov
lods
dec
movsb
or
mov
mul
push
jnp
mov
fsubrl
push
jae
loope
xchg
scas
sbb
in
xchg
add
pop
sbb
jbe
sub
sarl
imul
pop
lahf
popa
cmp
outsb
gs
movsb
and
dec
jns
fwait
stc
inc
mov
pop
jb
in
dec
shll
jle
jp
fcomps
outsl
cmp
mov
das
sbb
lock
stos
imull
out
add
xchg
xor
scas
xchg
jmp
jmp
mov
dec
imul
dec
cwtl
cmc
cmc
sar
mov
fcoml
rcrb
pushf
xlat
dec
in
test
push
out
inc
scas
or
push
andl
dec
aas
gs
add
in
lea
lret
mov
lcall
es
xlat
pop
jno
mov
js
xchg
scas
loopne
in
jo
js
fldenv
out
aas
xor
test
pusha
ja
lods
ja
jmp
push
andb
sub
xor
roll
mov
sub
inc
jge
sbbl
mov
fwait
insb
idivl
push
xchg
inc
imul
jo
scas
pop
imull
int3
inc
add
and
jno
pop
aad
adc
xor
test
xchg
sbb
add
imul
add
movsb
outsl
inc
pushw
mov
and
sbb
and
test
xchg
mov
jns
aad
cli
mov
lahf
imul
lret
and
pop
mov
or
pop
mov
adc
push
pop
xchg
cmp
cli
arpl
xchg
lods
jl
icebp
and
dec
mov
test
and
sahf
fcmovu
shl
cwtl
call
shll
loop
pop
jae
out
das
inc
sbb
push
fsubl
dec
jmp
loopne
push
pop
ds
lret
ja
jmp
fists
mov
xorb
repnz
sub
orb
push
outsl
aam
cli
mov
adc
mov
or
xor
jp
stos
fsts
decb
call
cltd
inc
jae
xor
int3
pop
pop
fdivrp
jmp
lcall
subb
jne
nop
push
dec
xor
sbb
nop
or
test
arpl
or
jo
icebp
pop
cmp
stos
outsl
dec
orl
adc
inc
pop
cmp
aad
mov
and
icebp
popa
test
or
fstl
pop
in
je
xchg
sbb
dec
jno
rol
mov
mov
xchg
and
repnz
mov
sub
outsl
jmp
loope
cli
sbb
jae
stos
divl
cmp
pop
jbe
std
mov
in
adc
mov
dec
sahf
xor
push
adc
lahf
test
loop
stc
stos
pop
rcrb
lods
lcall
stos
push
cmp
sbb
or
push
or
scas
add
loope
cmp
add
cmp
jo
imul
xor
fisttpl
dec
and
jl
inc
xor
mov
pop
stos
jecxz
lods
imul
orl
and
mov
add
fsts
cmpsb
fcoms
inc
mov
rclb
mov
inc
adcl
jmp
and
and
mov
in
xchg
adc
xchg
imulb
sub
pop
lcall
data16
push
pop
sub
xor
adc
sub
xchg
mov
std
xor
sub
mov
andl
add
es
mov
mov
sub
fisttpll
mov
adc
mov
adc
inc
or
sub
xchg
test
mov
rorb
repnz
xlat
mov
push
rolb
sbb
nop
test
test
lods
adc
jmp
insl
lret
xchg
les
out
fnstcw
pusha
imul
in
or
push
pop
pop
loope
dec
scas
dec
into
inc
addr16
cmp
rclb
icebp
dec
xchg
push
in
push
mov
xchg
in
adc
sbb
xor
and
pop
mov
pop
adc
shll
sbb
mov
subl
call
scas
fwait
jmp
scas
enter
cmp
mov
movsb
les
pushf
cmpsl
push
jo
aam
xlat
inc
lods
pop
or
call
dec
rclb
xchg
sbb
arpl
lcall
cmp
jnp
ds
and
mov
mov
ljmp
xor
sub
mov
inc
mov
stos
xchg
jg
push
fisttpll
and
ja
mov
insl
cli
decb
std
ret
jo
fnstcw
test
inc
rcl
push
push
jno
rcll
loopne
shll
cmp
lahf
xchg
pcmpeqw
jno
aam
hlt
pop
mov
jecxz
or
mov
jge
fwait
insb
fs
push
enter
leave
mov
iret
xor
call
fimull
jno
jle
les
or
outsl
leave
sbb
das
mov
xlat
test
cmp
js
push
cmp
jnp
or
aas
clc
xchg
xor
push
mov
xchg
pop
pop
pop
inc
adc
or
inc
fidivrs
hlt
and
fsubs
or
inc
int
cltd
jbe
cmpsb
scas
loop
cmpxchg
sub
cmp
inc
jbe
sub
into
adc
inc
lret
sbbb
xchg
jmp
xchg
mov
movsb
adc
inc
or
and
pushf
popf
and
mov
push
cmpsl
popf
or
les
jno
push
or
mov
push
pushf
repnz
cmp
xchg
out
dec
mov
out
aam
push
push
test
inc
stos
ss
pop
or
lcall
lret
dec
ss
add
mov
and
pcmpeqd
pusha
xchg
and
dec
test
adc
sbb
cmp
addr16
add
sub
sub
lods
dec
in
mov
notl
lea
das
lret
fmuls
loopne
sub
push
pop
mov
and
fsubl
push
scas
pusha
fdivp
in
jp
popa
cmp
loopne
sub
movsb
push
dec
test
std
out
add
mov
inc
cmp
sbb
xchg
jecxz
cmp
out
mov
aam
adc
les
mov
jbe
sub
cmp
xchg
xor
cltd
inc
cmp
loop
std
out
or
stc
repnz
and
es
adc
cmp
push
sahf
ret
xchg
adc
lret
out
inc
test
xchg
add
push
ss
mov
leave
movb
les
xchg
cs
push
gs
mov
xchg
rolb
mov
add
or
inc
pop
cmp
jb
sub
scas
xchg
inc
bswap
gs
idivl
pop
pop
fs
je
inc
cwtl
leave
sbb
cli
mov
scas
inc
popa
andb
leave
mov
into
gs
int
pop
je
xchg
shll
xlat
xchg
icebp
roll
xchg
je
mov
jae
pop
pop
aaa
stc
mov
aad
sub
in
jg
adc
lcall
sbb
mov
ret
lods
sahf
dec
out
add
repz
add
into
sahf
push
jmp
jae
inc
xchg
or
ret
scas
bound
ret
rorl
inc
cmpsl
dec
adc
inc
mov
mov
pushf
jecxz
dec
int3
dec
or
das
adc
sub
and
test
sub
pushl
test
xor
dec
arpl
dec
push
aas
mov
inc
and
std
and
fs
cwtl
clc
sti
dec
mov
jns
sub
inc
xchg
out
lret
or
lds
push
testb
cmpb
sti
pop
or
loopne
jle
out
mov
aad
fsts
cs
into
insl
loopne
outsl
adc
mov
push
jg
mov
das
xor
scas
and
or
adc
dec
cltd
mov
out
adc
sbb
add
pusha
xor
jnp
in
hlt
jb
xor
push
inc
sub
fdivrs
inc
push
adc
jnp
add
imul
push
mov
aaa
addr16
idivb
mov
loop
xchg
and
into
les
insb
mov
add
mov
mov
mov
lods
pop
loope
out
fsubrs
into
lock
adc
mov
imul
leave
pop
xor
jnp
andb
add
lods
xor
sahf
mov
outsl
jns
and
rcl
cmp
inc
hlt
lock
adc
adc
int3
xor
in
push
cmp
out
mov
popf
je
adc
js
xchg
xchg
add
mov
sub
fistpl
or
xchg
adc
mov
aaa
aad
loopne
mov
push
dec
xor
cli
cmp
out
pop
clc
xor
push
mov
sbb
jnp
lahf
mov
les
mov
sahf
dec
mov
lods
loopne
cmpb
push
test
pop
lcall
in
pop
sub
loopne
cmpsl
inc
or
or
adc
cld
adc
stos
mov
ret
cli
ficoms
icebp
lds
sarl
scas
int
mov
add
mov
scas
cmp
sbb
clc
stos
cmp
xchg
inc
add
mov
ja,pt
adc
mov
fidivs
cmp
sbb
popf
and
push
inc
std
das
repz
pop
push
ss
mov
mov
pop
or
xchg
xchg
test
test
inc
xchg
xor
rcl
or
push
out
or
xchg
push
loopne
test
icebp
mov
inc
add
aam
mov
cmp
inc
js
loopne
decb
push
inc
out
and
jne
mov
mov
popa
adc
loopne
imul
pop
aas
jp
or
ja
cmpsl
dec
aad
scas
mov
std
lds
inc
dec
fmuls
dec
rclb
cmp
shll
push
test
mov
xor
push
roll
xor
inc
xor
int
lock
outsl
push
xor
xchg
ja
and
icebp
and
add
das
pop
cmp
mov
fdivl
adc
lea
mov
cmp
add
cmpsb
shrl
inc
dec
mov
mov
mov
inc
in
xor
imul
shl
ja
jbe
sbb
js
pop
xor
pusha
pop
push
and
xchg
sub
imul
mov
push
mov
outsb
repz
xor
mov
outsl
fnsave
mov
push
sbb
push
popf
out
std
jo
lcall
inc
mov
jl
xlat
sahf
inc
shr
jbe
xorl
jns
and
icebp
or
sbb
data16
or
movsl
mov
out
add
sub
or
sbb
test
lret
mov
call
pop
ds
inc
sub
cmp
test
and
cmp
loopne
stos
mov
adc
out
inc
loopne
and
adc
lods
xor
test
jne
sub
adc
and
clc
add
jns
imul
dec
mov
sbb
cli
sbb
mov
rol
jbe
lods
enter
dec
in
rcrb
pop
mov
mov
mov
stos
fucomip
repz
bound
xor
js
mov
ljmp
stos
push
pop
popf
mov
lcall
scas
addr16
loop
adc
lock
xchg
push
cmp
fnstenv
push
adcb
xchg
add
call
out
xor
loop
sub
scas
mov
outsb
nop
xor
outsb
outsb
iret
jge
ja
inc
sbb
dec
mov
mov
mov
push
test
bound
addr16
jo,pt
dec
pop
xchg
addr16
inc
sbb
inc
mov
or
jge
outsl
adc
pop
dec
nop
push
js
adc
ja
dec
mov
stc
add
popf
imul
push
dec
add
xor
cmp
and
icebp
lods
fistps
cmp
mov
dec
and
lcall
ret
jmp
and
push
daa
int
jae
add
adc
cmpsb
mov
imull
inc
pop
cmpsb
test
fisubrs
and
adc
imul
jmp
shufps
lahf
push
das
push
jle
test
push
leave
pop
mov
insl
inc
jae
inc
aad
add
mov
rcrb
pop
and
sbb
add
add
cltd
mov
lods
insl
push
push
cld
in
pop
lcall
or
icebp
popa
scas
sub
sub
and
and
inc
push
add
inc
xor
sub
and
scas
addb
pop
or
imul
pop
inc
dec
subl
aaa
dec
js
mov
rcll
adc
leave
jecxz
pop
pop
push
das
sahf
sub
jnp
jo
adc
shrb
fisttps
leave
movl
repnz
push
aad
adc
cmp
pop
paddsb
lahf
stc
xor
or
in
pop
xor
nop
test
fcom
sbb
test
cmpsl
in
sbb
inc
fmulp
mov
sti
adc
ret
and
sbb
add
jecxz
ljmp
outsl
pop
jle
push
test
push
xor
xchg
mov
nop
ljmp
add
out
iret
fimull
add
mov
sbb
aad
dec
mov
sbb
mov
cmp
push
mov
bound
inc
cmp
adc
xor
jl
sub
fstp
out
sbb
push
cmp
adc
mov
lret
rorb
stc
out
adc
cmovb
leave
ret
mov
xor
mov
mov
fs
sub
popa
dec
mov
rcl
dec
aaa
test
enter
push
sbb
mov
xor
or
je
push
lods
and
sbb
xor
arpl
mov
sub
jbe
je
dec
imul
mov
lahf
dec
and
in
push
je
cli
xor
dec
movsl
fcoms
call
adc
or
add
in
pop
push
out
push
add
or
xchg
mov
xchg
or
mov
fdivrl
mov
leave
pop
call
shl
mov
cmp
sahf
mov
std
lock
pop
mov
mov
lret
aas
outsl
xor
push
out
pop
sbb
push
push
jle
pop
int3
pop
gs
mov
rorl
movsb
jecxz
outsb
dec
add
dec
add
mov
ret
out
in
jb
shlb
test
jnp
jg
shlb
out
shlb
xor
lret
pusha
cs
out
adc
xchg
outsl
test
popf
cld
mov
rorl
popa
cs
jbe
adc
jbe
jae
mov
test
lret
and
shl
lahf
pop
mov
mov
testb
sbb
xchg
inc
inc
sbb
stos
bound
cs
xchg
sbb
hlt
mov
push
cmp
out
pushf
lods
xor
mov
mov
jecxz
fld
push
outsl
incl
idivb
mov
pusha
pop
sub
jle
test
movsb
daa
call
xor
call
push
pop
lcall
jnp
push
or
xor
scas
fs
ss
jp
cmp
es
adc
xchg
cmp
mov
lret
pop
mov
int3
dec
sub
cli
cwtl
test
mov
lds
int3
dec
cmp
mov
adc
mov
xchg
lahf
scas
inc
push
aaa
sub
pop
repz
sbbl
movsb
test
cmp
test
aas
cs
xlat
nop
sbb
push
push
in
aam
lret
mov
xchg
jns
sub
outsl
mov
or
lods
cmpsb
mov
jnp
jno
sti
cmpsl
lock
out
outsb
mov
shl
es
es
pop
mov
pop
or
mov
insl
cmpsb
out
dec
lahf
cmc
mov
gs
into
fcoms
cli
pop
repz
les
mov
mov
or
aaa
and
mov
xchg
stc
cmp
xchg
imul
mov
mov
data16
push
test
cmc
sti
enter
hlt
xchg
in
rolb
repz
xor
mov
dec
pop
js
sub
sub
inc
std
out
mov
dec
lea
jp
push
sub
cli
mov
and
inc
xchg
adc
in
sahf
icebp
fldz
outsl
ret
cmpsb
jg
xchg
test
pop
loop
dec
pop
fs
cmp
jp
xor
inc
es
mov
int
push
adc
das
push
dec
or
repnz
movsb
addb
cmpb
mov
xchg
std
popl
bound
mov
jecxz
stos
ljmp
gs
hlt
mov
enter
inc
jo
mov
sub
stos
roll
push
int3
fcmovb
inc
lret
pop
stos
or
addl
add
cs
leave
inc
cmp
movsb
pop
dec
jp
imul
pop
out
test
aaa
out
sub
add
in
cmp
lret
sbb
fincstp
rep
sub
repnz
dec
jne
jp
sbb
aad
scas
inc
xor
or
popa
into
je
repz
cmp
sbb
ds
loop
in
fsubr
imull
and
pop
push
ret
or
xor
xor
fisttpll
in
stc
mov
adc
cwtl
stos
or
jno
data16
in
nop
mov
cmpsl
or
push
adc
push
mov
fsubl
jo
cli
add
push
jecxz
popf
shrl
fsubrp
sub
inc
pop
mov
xlat
sbb
lahf
in
and
clc
mov
cmpsb
push
add
and
or
dec
xchg
jmp
dec
or
mov
xor
faddp
and
aam
movsb
cs
push
addr16
adc
inc
adc
cmpsb
lcall
js
mov
push
ficompl
cmp
push
pop
inc
sub
pop
xchg
cmp
xor
test
lods
stc
jae
aam
xchg
cmpsl
pop
pop
loopne
adc
test
xorl
push
push
jnp
cli
jg
leave
aas
leave
loopne
lret
lret
cs
add
movd
pop
lock
add
insl
jmp
out
repz
imul
sub
push
sbb
fdivrs
and
imul
lret
stc
aam
mov
pop
or
shlb
popa
mov
gs
sub
out
out
je
aaa
mov
into
xchg
push
lahf
add
loop
je
negl
pop
and
scas
cwtl
jnp
pop
repz
or
pushf
movsl
sub
daa
fsts
out
xor
push
mov
stc
movsb
pop
sub
xchg
mov
test
add
scas
xlat
add
cmp
and
aas
mov
add
int
push
test
dec
cltd
jb
lret
or
mov
cmp
push
mov
mov
jmp
insl
lcall
int3
mov
ja
jns
incb
ret
and
inc
addr16
icebp
shlb
pop
jge
inc
enter
push
sbb
movsb
and
test
inc
push
jmp
sbb
nop
in
or
sarl
fsubrl
stos
pop
pop
das
mov
roll
xchg
out
xchg
popa
ljmp
push
pop
xchg
sub
mov
mov
push
dec
xchg
outsb
mov
jle
mov
add
cmp
addl
xchg
aam
testl
cmc
push
ljmp
push
out
ja
cmc
fcomi
cmp
lret
mov
mov
roll
movl
or
jg
push
cs
inc
in
pop
push
xchg
adc
and
dec
movsl
mov
or
add
mulb
arpl
fcmovbe
sub
idivb
pop
into
test
cmp
fwait
adcl
xchg
and
mov
fwait
int3
divb
or
mov
addr16
and
js
lds
and
inc
cld
out
mov
fcoml
sbb
lret
jbe
xor
and
in
aaa
bound
js
xor
push
aaa
outsl
pop
mov
jne
inc
xchg
dec
inc
int
or
or
shl
imul
jns
jne
test
or
push
push
insb
add
dec
jg,pn
stos
inc
leave
ret
sbb
add
adc
cld
inc
lret
lods
in
xchg
cs
fimull
out
movsl
mov
mov
fmull
aaa
div
adc
pop
rol
movsb
push
pusha
sub
inc
cmp
test
insl
jnp
arpl
enter
mov
pushf
insb
stos
push
shlb
sbb
mov
test
pop
pop
rorl
repz
adc
dec
pop
push
jo
aaa
inc
jl
ds
mov
rcrb
nop
xor
sbb
bound
sarl
inc
adc
in
xor
sub
xchg
dec
popa
hlt
in
aam
jp
add
sahf
rcll
add
mov
clc
aaa
rcrl
sub
dec
addb
iret
idiv
push
push
loope
jo
mov
out
ss
pop
and
test
xor
int
mov
mov
lods
and
in
sbb
in
enter
mov
ficoms
repnz
pushf
jp
lcall
bound
jne
leave
lret
mov
xor
pushf
dec
dec
pop
out
jns
pop
popf
lock
push
push
nop
xlat
add
ja
lea
mov
insb
sub
mov
mov
notl
orl
xor
cmp
inc
xchg
mov
xor
daa
ja
mov
cwtl
or
xor
aad
adc
xchg
jns
inc
and
push
add
dec
out
sbb
sti
faddl
mov
or
or
ret
pushf
mov
sub
pop
jmp
fldenv
cwtl
loopne
rorb
outsb
stos
cmp
and
dec
dec
xlat
ret
sbb
push
mov
mov
sub
ret
adc
lret
sub
adc
or
xchg
test
cmpsb
aaa
pushf
fs
dec
pop
testl
mov
jp
int3
dec
pushf
bound
dec
stc
out
stc
jmp
push
outsl
dec
std
fstpl
push
in
aaa
and
or
rep
mov
xorl
clc
out
cmp
nop
mov
jmp
pop
addl
in
jbe
cmc
pop
jae
xchg
mov
out
jo
lcall
adc
cwtl
and
sbb
fcmovbe
data16
push
pop
mov
pop
insb
ret
lods
lds
pop
mov
jnp
pop
dec
daa
mov
stc
movsl
jmp
scas
sti
dec
or
and
push
mov
pop
scas
enter
loop
xor
loopne
or
jo
xchg
in
mov
xchg
jg
xchg
adc
jbe
mov
out
aam
jg
push
jg
cwtl
loopne
pop
cld
pop
mov
pop
xchg
inc
xchg
pop
xor
push
sbbb
inc
or
outsl
fsts
jne
and
cmp
fisubrl
xchg
outsb
dec
test
mov
pushf
adc
inc
pushf
sbb
pop
int3
sbb
fidivl
pop
orb
xchg
mov
sbb
push
and
xchg
jecxz
mov
inc
mov
enter
scas
xor
push
nop
or
cmc
sbb
cli
imulb
or
and
fs
not
inc
and
pop
dec
cld
push
adc
mov
mov
mov
cmp
push
or
adc
mull
or
jnp
call
adc
jb
pop
mov
add
jmp
fnstcw
fnstcw
movsb
add
stc
push
popa
nop
add
pusha
mov
jno
addb
dec
pop
sbb
sub
js
rcrb
daa
or
into
pop
push
cmp
out
cltd
cltd
lret
lahf
push
or
sarb
sub
ret
shl
jge
call
and
cmpsl
iret
js
jl
or
scas
mov
adc
lods
dec
and
int3
mov
xchg
repnz
add
push
pop
add
sbb
inc
hlt
popl
insl
inc
sti
and
out
sbb
out
add
scas
push
xor
loopne
or
add
jns
out
ret
jle
push
test
xchg
cmp
sbb
or
hlt
les
inc
scas
jmp
enter
clc
inc
jp
arpl
and
push
inc
repnz
negb
mov
jecxz
call
or
mov
jmp
imul
jns
sub
xor
enter
add
rcrb
sarl
inc
notb
fcomps
and
mov
mov
es
lcallw
out
push
or
ficoml
dec
outsb
adc
lock
and
fisttpl
aad
add
pop
pop
inc
pushf
int
mov
cmp
in
adc
inc
adc
mov
xchg
lods
iret
lahf
inc
jmp
sub
mov
mov
adc
scas
pop
gs
sbb
xchg
int
loopne
or
mov
sbb
dec
int
adc
arpl
mov
jp
dec
jns
pop
cli
pusha
add
sahf
and
push
or
jbe
int3
ja
add
inc
cld
test
push
mov
inc
mov
mov
push
rclb
adc
std
outsl
xor
pushf
iret
push
or
lods
movsl
mov
js
cmpsl
fiadds
lret
addl
add
push
xor
and
dec
push
jp
pop
jae
fnstenv
dec
mov
push
daa
ja
xchg
addr16
ss
aas
je
test
xchg
xchg
call
push
cld
gs
shlb
ja
andb
inc
pop
pusha
out
fs
xor
rcr
lret
cmp
pop
xor
int
xchg
shrb
icebp
scas
jb
sbb
int
push
xchg
lcall
mov
int
mov
push
or
popf
lods
sub
and
pop
ja
std
and
sub
xchg
inc
adcb
xchg
and
cmp
es
xchg
pushf
shr
adc
and
popf
scas
cltd
inc
lahf
divb
arpl
xlat
shlb
loop
or
xor
dec
push
and
pop
insl
fmulp
push
push
enter
mov
orb
cmpsb
mov
jne
jecxz
and
test
sub
jmp
push
ss
shll
and
js
icebp
hlt
loop
push
inc
cmp
pop
inc
dec
sbb
add
pop
popl
ret
ret
xor
xchg
loopne
repz
jg
ficoms
xchg
or
pop
sti
stc
movsl
imul
aas
or
xor
jl
fistpl
loopne
std
mov
and
inc
xor
push
push
in
hlt
ftst
repz
imul
push
xchg
cli
push
xchg
insb
leave
idivb
lret
cmpsl
movsb
sbb
sub
mov
icebp
shll
mov
cmp
loopne
jmp
jg
cmp
and
sahf
sub
jns
bound
and
pop
insb
jl
test
lcall
pusha
xchg
ret
adc
sbb
mov
pop
jp
cltd
push
ja
adc
in
pushf
and
lahf
outsl
adc
xor
insl
mov
adc
or
lods
lods
inc
adc
lahf
add
loop
cmpsl
mov
lods
aam
arpl
aad
adc
stos
nop
rcl
xchg
dec
loopne
push
dec
test
jl
nopl
add
stc
loope
lcall
ljmp
cmp
ss
adc
pop
sbb
xor
push
aas
cmpsb
mov
out
out
adc
jns
call
push
and
cmp
stc
pop
mov
mov
mov
fwait
cmp
xchg
int3
inc
and
push
lods
cmp
cmp
cld
sbb
inc
jno
imul
mov
fmuls
xor
nop
mov
dec
jge
call
loopne
ret
daa
enter
out
and
cs
adc
sbb
jae
or
arpl
push
jg
mov
xchg
js
addr16
jl
popf
sub
jp
cmc
push
fisubl
rorb
repz
shll
hlt
testl
shl
or
mov
push
loopne
cmc
test
test
sub
jne
leave
imulb
dec
mov
and
cli
dec
ljmp
push
in
add
mov
mov
and
pop
add
pop
popf
stos
shll
mov
cld
push
mov
add
lods
push
sbb
aam
cld
inc
ljmp
outsb
sub
mov
in
test
or
lock
adc
pop
rclb
mov
or
push
jge
jp
pop
cwtl
lret
outsl
ljmp
mov
mov
mov
enter
xor
ja
out
pushf
mov
out
es
das
test
dec
gs
mov
rcrb
ret
icebp
xor
xchg
lret
stc
sti
les
ss
adc
data16
rcr
das
icebp
push
dec
lds
jno
insl
mov
or
dec
or
dec
push
stos
sub
aad
inc
dec
sarl
jmp
int
popf
cmp
mov
adc
adc
iret
xchg
push
mov
fisubl
mov
fsubrl
cmp
sub
push
push
sbb
out
jae
nop
mulb
lret
aad
lea
testb
into
cld
test
pop
push
xor
or
outsb
jns
cmpsb
fidivrl
mov
pop
scas
mov
and
adc
inc
cmp
aaa
pop
mov
in
icebp
xor
add
add
and
lods
cmp
mov
xchg
ja
or
nop
in
xchg
test
mov
cmpl
cld
imul
lods
in
cmp
add
inc
testb
out
push
cmpsl
popf
les
pusha
and
pop
ret
mov
adc
subb
aaa
xchg
popf
out
cmp
andl
push
mov
lret
mov
push
mov
pop
push
orb
jb
mov
leave
jne
negb
dec
test
outsl
add
lahf
fdivrs
mov
loop
xor
add
jne
mov
test
mov
and
pop
pusha
outsb
ljmp
mov
pop
add
repnz
add
aaa
mov
les
sbb
lahf
das
cltd
leave
mov
out
fiadds
and
mov
mov
pop
movsb
cmc
add
push
int
cmp
pop
pushf
sbb
push
movsl
sarb
not
push
aam
or
dec
push
mov
ret
sub
cwtl
cmp
je
outsb
idivb
call
sbb
inc
and
leave
mov
mov
movsl
out
arpl
sbb
gs
mov
mov
aad
fldt
add
mov
add
dec
scas
out
xor
outsl
and
sub
notb
dec
mov
mov
xor
or
or
mov
inc
scas
mov
fcoms
movsl
lock
out
add
or
lahf
sub
jecxz
cmp
adc
inc
inc
xchg
push
iret
pop
mov
ljmp
cmp
lret
jg
gs
adc
dec
fwait
int
dec
mov
jle
cmp
addb
jg
sub
mov
popa
and
push
push
cmp
pushf
shlb
jbe
sar
mov
inc
jb
nop
dec
dec
cmp
aaa
and
dec
adc
sti
add
jns
sbb
sbb
push
fcmovnu
lret
or
xor
jne
fisttpl
call
sbb
dec
mov
pop
mov
dec
cltd
mov
push
adc
std
out
in
or
and
mov
punpckhdq
sbb
cmp
mull
int3
in
mov
adcb
pushf
out
shll
js
rorb
test
ljmp
rcr
mul
push
cltd
inc
or
mov
mov
push
hlt
repz
push
filds
sahf
mov
xor
in
mov
testl
jecxz
mov
add
jb
and
les
enter
inc
and
cmpsl
lods
clc
push
mov
add
push
sbb
dec
out
xchg
js
movsl
decl
cmp
or
stos
loopne
cmp
dec
nop
cltd
mov
lret
jns
sbb
icebp
pop
aad
lahf
out
push
dec
pop
jp
bound
lea
adcb
and
es
int
push
enter
sub
dec
jnp
ret
xchg
cmp
imul
imul
cmpsl
test
fmulp
dec
fdivrs
mov
fcomps
out
mov
adc
jns
xchg
aas
sub
stc
nop
push
jo
push
inc
sti
sti
adc
pushf
push
mov
daa
ss
and
std
lret
xchg
mov
adcb
mov
adc
push
popf
pop
adc
and
repz
mov
inc
inc
xchg
into
cmp
lods
cmp
movsl
out
arpl
push
ret
sub
adc
xor
dec
sub
jle
mov
movsl
cld
sahf
or
xchg
pusha
add
push
xor
inc
movq
xorb
push
aaa
sbb
xchg
sbb
sub
ret
pop
popf
adc
and
jne
aas
and
sub
jb
iret
xchg
pop
pop
dec
jno
mov
cmpsb
push
rcl
mov
xchg
dec
and
call
scas
mov
out
outsb
or
jmp
jae
inc
xchg
mov
ds
push
mov
js
lds
sub
sbbl
xchg
adc
outsb
pop
imul
jbe
sub
aaa
add
jge
imul
out
mov
jo,pt
mov
push
subb
sub
xchg
shl
jg
push
push
mov
cltd
cld
push
add
inc
jns
lock
cli
orl
xchg
adc
push
jb
mov
cld
jne
push
loop
jp
in
pushf
repnz
shl
inc
xchg
mov
inc
lds
xor
push
fidivrs
mov
out
insl
or
repz
xchg
rcrb
fmuls
sbb
test
push
loop
es
and
add
sub
cs
dec
mov
enter
fldt
mov
xor
pusha
inc
xchg
sub
adc
mov
mov
cmp
sbb
imul
jae
call
push
xchg
xor
xchg
sar
loopne
int3
lahf
add
adc
mov
or
stos
mov
push
stc
inc
test
in
movb
ljmp
test
test
pop
ret
pop
iret
xor
testl
test
xor
inc
push
das
shrl
pop
lds
movsb
mov
cvttps2pi
aaa
add
shl
vmread
dec
inc
jg
fistps
mov
gs
sub
inc
pop
cmc
fisubl
add
or
pop
test
or
je
je
sbb
addr16
dec
inc
pop
push
push
stos
push
mov
jp
repnz
lods
pop
cs
jae
sti
andl
test
test
inc
cmc
push
pop
addb
push
aas
addl
ret
das
cmpl
les
or
push
pop
push
cmp
pop
in
stos
out
mov
push
loope
out
pop
sub
test
inc
shlb
sub
push
push
xchg
stos
jmp
loop
cmp
push
ret
adc
fidivl
inc
xor
jns
adc
mov
add
stos
mov
into
fimuls
mov
mov
leave
stos
push
push
pusha
adcb
or
xchg
ret
jae
push
adc
data16
popa
gs
shlb
shl
or
sbb
jmp
mov
jge
dec
jecxz
cmovns
test
jnp
out
loope
out
out
shlb
cmp
popa
lcall
cmpsb
scas
test
movsl
pusha
cmp
ljmp
je
xor
in
int3
cmp
adc
into
enter
fwait
adc
and
mov
mov
int
cli
push
add
xchg
in
sub
aad
dec
nop
xchg
stos
adc
mov
adc
lea
xchg
mov
dec
aad
and
stos
pop
mov
std
adc
sahf
lahf
xchg
xchg
jle
add
push
and
sub
andb
in
pop
pop
imul
ljmp
mov
test
adc
mov
pop
push
jmp
pop
mov
pop
imul
jo
push
push
loopne
iret
pop
push
add
mov
ret
pop
add
fisubl
imul
jno
notb
inc
popf
jns
jp
push
mov
stos
or
inc
cmp
inc
adc
mov
or
push
in
cld
rolb
push
insb
rorb
je
and
mov
lds
xor
ds
xor
mov
bound
in
popa
bound
daa
fidivl
sub
mov
in
insb
cmp
mov
out
mov
mov
xor
cs
cltd
push
pop
aas
adc
scas
xor
scas
lret
ds
cmp
iret
mov
mov
pop
push
inc
push
iret
gs
sbb
dec
out
jnp
sbb
pop
or
lcall
cmp
or
add
push
leave
jg
test
push
mov
inc
pop
pop
cmp
xchg
nop
push
negl
jnp
mov
and
das
stc
rcl
mov
insl
shrl
push
adcl
filds
pop
xchg
test
sti
mov
fisubl
call
lret
arpl
mov
inc
xor
je
mov
insl
insl
sub
dec
push
jno
cmp
mov
adc
pop
sub
fnstenv
cmpsb
or
mov
sub
dec
mov
mov
mov
add
scas
ffree
arpl
data16
scas
ja
dec
imul
cmp
dec
pop
sbb
fs
dec
sbb
mov
push
js
sahf
pop
or
xlat
enter
pop
pop
inc
push
lret
lods
aam
test
mov
adc
push
xor
sbb
ljmp
ret
jp
mov
lods
jns
pop
les
or
push
pop
pop
mov
lods
add
lahf
arpl
les
aam
mov
pop
xor
and
rcrb
mov
insb
push
jae
xchg
aad
mov
cltd
sub
cmpsb
lds
jg
push
inc
sahf
or
nop
je
pop
out
mov
int
in
jns
cmp
jge
jne
jbe
mov
clc
out
dec
loope
sbb
mov
das
xchg
addr16
jb
sbb
leave
jl
sti
pop
cwtl
push
xchg
lret
mov
inc
dec
jns
pop
fldl
push
push
scas
cmpb
inc
fimull
das
fnsave
in
mov
test
mov
ret
mov
fiaddl
std
es
adc
push
and
cwtl
out
shrl
mov
or
and
in
pusha
test
jmp
mov
insb
cmpsl
les
and
xchg
test
outsl
sbb
idivl
dec
lahf
xor
mov
std
mov
sbb
xchg
mov
add
jo
and
mov
lock
dec
xchg
movsb
adc
dec
sbb
inc
test
scas
pop
sbb
cmp
addr16
cmp
in
lret
jnp
ljmp
cltd
jmp
add
jl
adc
mov
jo
call
mov
aam
push
mov
ret
jecxz
movsl
dec
dec
sbb
jnp
mov
stos
jecxz
popf
mov
mov
xchg
jg
insb
jecxz
cmpb
pop
pop
sub
mov
adc
xor
sti
cmpsb
pop
push
or
mov
stc
mov
inc
rcrl
adc
fnstsw
mov
inc
add
add
xor
pushf
repnz
xor
and
cmp
xchg
adc
xlat
shll
bound
push
insl
sub
clc
repz
dec
add
lea
mov
gs
loop
test
stos
cmp
lock
xchg
inc
sbb
fwait
daa
push
div
sbb
fildll
addr16
jge
insb
mov
inc
int
out
rolb
aad
xor
push
mov
or
cmc
push
jge
dec
fidivs
jo
and
js
sysexit
and
mov
jnp
mov
sub
or
gs
in
arpl
adc
xchg
popf
xchg
push
lock
loop
mov
cmp
pop
rclb
stos
scas
pop
sti
dec
jno
push
xchg
mov
insb
sbb
pop
pop
xchg
push
dec
sbb
je
dec
mov
inc
xchg
add
enter
push
sar
add
in
mov
lret
pop
push
xor
ror
dec
dec
push
pop
dec
cmpsl
jecxz
sub
pop
adc
aam
mov
jl
jecxz
inc
jecxz
jle
dec
notl
add
pop
adc
ja
push
push
or
mov
mov
leave
out
lret
jle
arpl
sbb
and
sbb
dec
mov
or
pusha
aaa
pop
int
in
cmp
cmp
sahf
scas
rclb
fistps
int
cmp
adc
sub
int
add
xlat
cli
pop
enter
mov
in
les
xor
fs
adc
push
mov
jbe
repnz
push
call
enter
and
xor
call
popf
jge
and
nop
xor
inc
add
adcb
dec
mov
push
and
xchg
dec
adc
addl
add
dec
push
pop
pop
mov
jp
lock
push
pop
pop
out
test
and
lock
enter
push
cwtl
and
addr16
pop
out
cli
rclb
pop
add
mov
test
neg
mov
or
or
xchg
addl
cmpsb
lret
xor
dec
or
std
mov
out
scas
roll
inc
fmul
mov
jo
lret
pop
push
je
or
pop
mov
or
pop
shlb
out
roll
je
dec
ret
pusha
inc
cmp
sub
mov
lods
dec
sbb
xor
dec
xchg
sbb
adc
inc
mov
fldl
mov
test
pop
clc
push
lret
jp
jae
dec
pop
pop
jle
mov
pop
adc
out
outsl
pop
les
int
jne
lods
cs
push
cmp
ror
jle
sahf
sub
adc
sub
xchg
negl
call
and
sbb
in
xorl
fdiv
mov
xor
es
sbb
adc
jl
pop
jmp
stos
add
mov
lcall
pop
xorb
pop
fistps
inc
in
rorb
sub
dec
sub
or
jecxz
jae
in
rcrb
cs
lcall
fildll
cmpl
repnz
mov
add
dec
xchg
xchg
push
dec
jae
cltd
repz
bound
nopl
ret
inc
and
imul
mov
push
pop
sub
xchg
mov
rcrl
dec
jbe
aam
push
test
repz
shlb
inc
cld
outsl
add
movsb
or
push
gs
js
mov
inc
ljmp
add
pop
push
mov
inc
jno
call
dec
push
xchg
pop
insb
mov
dec
pop
insb
ljmp
sti
inc
imulb
rcll
aam
or
lret
flds
dec
dec
nop
bound
enter
adc
int3
mov
sub
stc
movups
js
jbe
sub
ja
aad
xchg
pusha
out
je
and
push
jmp
test
cs
adc
xchg
jl
loope
or
lods
out
xchg
or
mov
dec
lcall
push
xlat
jg
jge
outsb
imul
push
jmp
pop
or
and
call
call
sahf
mov
or
push
pop
pusha
adc
push
ja
imul
aaa
test
jge
scas
cwtl
in
sti
jae
mov
call
aam
jp
jns
aaa
insl
push
add
push
test
sahf
cld
add
dec
loopne
mov
xchg
outsb
incl
push
adc
lds
pop
push
jge
je
adc
ljmp
lret
aaa
insl
add
cmpsl
fwait
outsb
cmp
mov
aad
mov
lret
cmp
jns
sbb
inc
stos
stos
int
sub
cltd
adc
leave
add
add
pop
push
mov
adc
lods
inc
insb
or
inc
jnp
imul
sbb
cmpsb
and
xor
inc
icebp
cmp
cmp
mov
mov
lock
dec
movsl
dec
xor
jae
or
std
cmp
lds
arpl
fisttps
xor
fdiv
mov
add
mov
cli
stos
loopne
sub
inc
sti
out
sub
mov
in
sti
into
or
mov
aam
test
mov
cwtl
jmp
fsub
mov
sub
fadds
or
or
or
push
aam
mov
mov
and
lods
and
push
inc
pop
adc
addr16
mov
dec
cltd
fnstsw
mov
in
shlb
scas
inc
adc
pop
stos
iret
cmp
mov
dec
xor
mov
mov
mov
out
mov
sbb
lea
outsb
add
xchg
in
adc
je
fistpl
int3
mov
cld
test
inc
push
loop
in
rorl
xor
push
fildl
mov
adc
sub
pop
inc
add
jp
add
rcrb
or
popf
fs
lret
mov
mov
cmpsl
lret
pusha
lea
insb
pop
cmc
ficoms
add
xchg
inc
mov
pop
cmp
mov
adc
cltd
cltd
and
repnz
outsb
leave
sbb
push
cmp
push
das
loope
sbb
aad
mov
mov
xor
aad
stos
cld
sub
dec
jne
outsb
notb
inc
gs
loopne
pop
sbb
pop
bound
xor
ss
mov
das
mov
pop
lods
adc
mov
mov
out
inc
in
push
scas
pop
or
push
pop
lods
cmpsb
push
jecxz
clc
test
pop
aaa
imul
icebp
lock
int3
das
pop
mov
mov
bound
inc
test
fs
std
xchg
dec
or
inc
jbe
mov
in
xor
or
aaa
or
sub
fmul
cmp
ja
inc
je
inc
cli
sub
pop
jno
ljmp
clc
jp
or
addr16
dec
pusha
cmp
xor
adc
inc
ljmp
pop
adc
popl
sub
add
adc
ljmp
mov
icebp
fadds
loopne
or
sbb
daa
fstl
or
mov
dec
jge
das
jl
scas
and
std
adc
shlb
fisubl
mov
pop
adc
gs
pop
int3
dec
sub
fucomi
addl
sub
cltd
sahf
fdiv
test
and
clc
sarl
jne
dec
sub
lret
call
or
cmp
jne
jbe
mov
mov
insb
pop
cmc
in
sbb
mov
jo
cmc
pop
push
jp
arpl
cmp
sti
idivb
out
sub
dec
mov
dec
dec
ret
and
imul
sub
push
cltd
lea
sbb
xchg
pusha
add
scas
insb
scas
shlb
mov
dec
pop
pop
mov
out
js
rorl
inc
arpl
sbb
jae
jns
cmp
sub
and
mov
adcl
outsl
jle
mov
fisubrs
xchg
or
mov
movsb
mov
dec
data16
std
jmp
out
cli
outsl
mov
inc
cmp
inc
repz
sbb
mov
xchg
push
xor
xor
repz
dec
es
aas
lahf
xlat
sub
adc
rcrl
out
sbb
xor
rclb
push
adc
cmpb
lret
pop
fistpll
mov
or
pop
mov
add
xchg
aad
push
sub
adc
mov
dec
inc
fmuls
inc
fcoml
pop
mov
xchg
add
xlat
jns
ds
jle
pop
xor
add
xor
ja
fnstsw
xchg
andl
das
jb
pop
add
aad
addl
std
call
sub
and
jmp
add
mov
test
xor
mov
xchg
sub
pushl
xor
lret
rclb
sti
les
dec
in
xchg
fildll
add
dec
mov
scas
decb
test
mov
call
int
adc
sub
pop
push
ss
je
jg
sahf
leave
push
inc
jl
push
dec
das
dec
popa
test
add
inc
aam
imul
je
add
loop
int
loop
pop
push
and
out
xchg
push
cltd
and
push
shlb
and
jbe
jno
pop
cs
mov
clc
dec
mov
jge
mov
ja
adc
mov
jnp
lcall
inc
xor
les
cmp
pop
fwait
mov
mov
and
cltd
dec
das
testl
sbb
xchg
push
dec
adc
xor
daa
inc
sahf
loop
mov
icebp
jae
aas
movsb
add
add
std
xchg
or
cmp
or
out
fwait
subb
inc
bound
loop
mov
jg
sbb
sti
pop
or
pop
push
push
push
adc
stc
pop
fwait
adc
cli
dec
xchg
inc
mov
jno
stos
out
mov
sbb
or
or
test
lret
ret
inc
or
xchg
es
jbe
into
aad
jge
ds
mov
sahf
rorl
sahf
inc
xchg
adc
insl
jnp
int3
in
mov
and
lds
into
jno
mov
test
mov
sub
and
lock
inc
xchg
les
bound
push
jg
dec
fisubrl
sub
jl
shll
clc
jecxz
mov
lahf
out
pop
add
adc
jmp
adc
jbe
jp
int
repz
mov
dec
loope
mov
dec
sbb
sbb
popa
mov
and
call
lahf
in
mov
cmp
call
add
repz
insb
sti
sub
sub
shrb
in
hlt
lods
fisttpll
sbb
pusha
sbbl
mov
lret
jns
mov
jle
mov
das
les
ficoml
clc
jnp
cmp
xchg
mov
xchg
add
xchg
ja
iret
loope
repnz
lock
es
xor
add
mov
outsb
ss
jle
movsb
rorl
cmpsb
test
ljmp
or
mov
mov
roll
es
mov
mov
cmp
pcmpeqw
nop
lret
lahf
lea
or
xchg
lret
cmp
rcll
shlb
jle
fsubl
sbb
dec
mov
inc
cwtl
jmp
repz
push
sbb
repnz
std
ljmp
fs
add
pop
pushl
ds
pop
mov
ljmp
sub
add
sub
fidivrl
xor
lods
jmp
stc
sbb
jo
xor
mov
pop
xchg
imul
aas
cwtl
xor
and
push
out
jno
mov
adc
dec
jecxz
mov
ljmp
js
fsubrs
cmp
in
mov
or
fbstp
dec
pop
or
dec
adc
inc
cmpl
mov
dec
outsl
sub
rclb
hlt
sbb
jl
ja
adc
xchg
adc
add
inc
gs
lcall
int
insl
pop
mov
mov
hlt
cmp
add
sbb
mov
out
sbb
sbb
mov
fisubl
das
mov
sbb
mov
insl
push
cmp
loop
sub
jnp
insb
rclb
jecxz
inc
cmp
outsb
das
xor
mov
jg
fcoms
daa
push
lcall
pusha
pop
imul
aam
pop
outsl
pusha
cmp
out
xor
push
jg
lds
xor
pop
xlat
xchg
mov
or
ret
dec
lods
dec
push
shl
cmp
inc
in
add
push
add
jns
loopne
sub
sahf
xor
xor
xor
mov
inc
jecxz
lret
into
adc
es
mov
std
fisttpll
sbb
mov
cmpb
ds
imul
pop
push
outsl
pop
cmpsb
arpl
pop
pop
scas
cmpsb
push
in
cmpsb
and
mov
jnp
and
push
fdiv
xor
fnstcw
divb
ret
jge
pushf
cwtl
sbb
cmp
mov
pop
cmpsb
cmpsl
push
hlt
mov
add
inc
or
pop
into
ds
inc
mov
js
stc
aam
cltd
pusha
aas
neg
jmp
js
pop
loope
leave
cmc
mov
jp
inc
sub
outsb
mov
pop
xlat
jmpw
jle
imul
inc
mov
mov
push
pushf
inc
fs
xchg
and
out
and
movsl
into
push
xor
sbb
mov
push
xor
stc
out
jmp
inc
fnsave
pop
into
mov
inc
pop
adc
clc
sahf
jle
inc
aad
sahf
mov
mov
popf
ss
fildl
icebp
stos
mov
mov
mov
xchg
mov
sub
mov
adc
or
mov
loope
jl
icebp
stos
ror
mov
push
sar
cmp
daa
nop
push
jne
lret
sub
xchg
dec
push
pop
pop
adc
or
sbb
push
mov
pop
cld
rol
pop
dec
in
jbe
xor
rcrb
pop
sub
mov
pop
push
sub
dec
inc
xchg
les
sarl
xchg
repz
push
pushf
xchg
mov
sbb
int
and
adc
inc
call
jp
and
in
es
ror
push
addl
push
xor
xchg
int
push
cmpsb
aas
mov
mov
mov
stos
cmp
push
sub
je
sub
pushl
inc
mov
add
or
pop
mov
jecxz
and
add
jnp
fwait
inc
pop
insb
sbb
sub
push
mov
sub
and
cld
xorb
rol
xor
push
loop
repz
mov
sub
mov
insb
testl
and
sar
push
fcoms
jne
shll
push
add
mov
sub
sti
xor
cmp
cmp
outsb
cli
out
inc
cmp
or
es
ds
or
cltd
xor
push
icebp
stc
jae
inc
sti
mov
sub
rolb
jle
add
lret
adc
mov
push
add
mov
imul
sub
sub
jno
and
xor
push
mov
mov
inc
dec
sbb
push
int
jo
insl
repz
rol
in
sub
loope
xorl
or
xor
pusha
clc
pusha
xor
mov
mov
fistpll
add
icebp
mov
dec
popf
jnp
je
mov
pop
push
mov
dec
sbb
sbb
pop
es
push
rorb
scas
movsb
jg
inc
shll
arpl
push
es
push
or
std
push
xor
or
pop
les
and
mov
lods
xor
jnp
rcr
sub
lea
cli
mov
int
imul
shl
stc
ret
iret
sti
sbbb
jbe
xchg
or
pop
mov
xchg
sarb
or
mov
leave
fstpl
das
jae
xlat
stos
pop
ret
aam
stc
pop
add
scas
sbb
les
fwait
outsl
mov
int
xor
pop
rcl
enter
outsb
sbb
dec
test
jge
addb
pop
nop
xchg
sti
jae
addr16
push
pop
mov
add
inc
inc
out
incb
push
sbb
ret
pop
int
stc
lcall
xchg
cltd
xchg
je
mov
xlat
addr16
push
add
or
mov
fstp
sbbb
mov
mov
inc
ret
int
ret
mov
lret
jg
aaa
inc
pusha
std
repz
out
popf
sub
in
and
add
cmp
mov
pop
out
das
xchg
add
push
cmpsb
in
sub
lret
cmp
inc
cmp
test
adc
push
mov
addr16
or
jo
ljmp
mov
push
dec
aas
or
push
mov
adc
and
sahf
jp
int3
lea
mov
and
fmuls
clc
cs
push
das
dec
imul
xorl
rcll
arpl
mov
lds
cwtl
ficomps
cmpsl
fwait
scas
movsl
stc
mov
mov
and
mov
lret
scas
les
fdivrl
andl
loop
fs
fcoml
cltd
xchg
xchg
adc
iret
cli
add
aaa
pop
cmp
mov
jg
sub
loopne
push
loop
jne
mov
cmp
test
mov
fwait
ds
push
data16
lahf
xor
xchg
cmp
mov
mov
into
push
dec
lock
or
int3
xorl
lahf
jge
push
lret
and
cmovns
fcompl
testb
les
add
aam
xchg
clc
jno
mov
xor
jo
xchg
add
mov
cmc
mov
sub
and
sbb
stc
jecxz
test
jmp
cmpsl
mov
jl
rcrb
xchg
test
jge
cmp
movsl
jle
icebp
aad
mov
es
shl
icebp
cmpl
in
cltd
mov
pop
push
popa
push
int
hlt
sbb
or
push
leave
shrl
addb
adc
cltd
test
sbb
lds
ficoml
xor
cmp
jp
in
dec
adc
dec
notl
dec
xchg
push
loope
add
mov
or
aam
cmc
mov
push
das
ret
lea
test
xlat
les
cltd
shl
cli
pop
sub
cmpsl
sub
pop
insb
jb
cmp
and
push
inc
xchg
jp
cmp
adc
jns
lods
xor
add
xor
clc
leave
sbb
lcall
js
enter
xlat
stos
xor
fstpl
mull
dec
cmp
inc
ret
or
mov
ret
ret
jnp
movsb
cmovne
sti
jg
sti
rorb
in
cmp
lea
loopne
or
leave
aas
in
shlb
pop
scas
push
adc
andb
enter
push
xor
insb
scas
sub
add
sbb
mov
les
add
shlb
lea
push
and
dec
adc
out
xchg
rorb
outsb
xorl
xor
les
ljmp
inc
test
pop
insl
arpl
cmpsl
mov
jle
test
sarb
add
movsl
icebp
clc
inc
xchg
mov
call
push
lret
clc
xchg
addr16
dec
mov
adc
in
push
das
mov
adcb
movsl
push
orl
push
out
sub
outsb
inc
or
jbe
xchg
inc
daa
push
dec
lods
inc
push
outsl
fstl
lcall
fadd
mov
add
adc
shll
data16
and
fdivp
mov
popf
mov
dec
sbb
clc
test
jo
scas
mov
inc
je
insl
outsb
lods
and
mov
pusha
dec
inc
outsl
sbb
in
dec
insb
dec
or
sti
dec
es
ficoms
rolb
and
aad
idivb
test
rcl
and
or
dec
and
in
sub
dec
or
cmp
dec
outsl
enter
pop
jbe
adc
xchg
testb
dec
jge
mov
pop
or
pop
mov
push
call
cmp
dec
pop
dec
movsl
mov
out
xor
xchg
iret
push
dec
pop
out
jmp
mov
add
insl
jecxz
popa
clc
pop
mov
mov
dec
xchg
vmwrite
cmc
notb
enter
insw
outsb
pop
mov
das
ficoms
out
je
mov
fstp
stc
mov
fisubrl
mov
mov
add
stos
call
mov
test
in
mov
xchg
js
sbb
inc
enter
int3
push
stos
and
mov
imul
in
rol
cmp
jnp
pusha
mov
sub
adc
ret
call
or
lret
mov
adc
js
je
jmp
jo
push
xor
ljmp
push
cld
sbb
repnz
pusha
and
push
cmc
iret
mov
cmp
aam
pop
inc
aaa
out
cmpsl
lret
fidivrl
pop
add
out
xchg
mov
dec
adc
inc
inc
fistps
mov
fucomip
and
aad
outsl
dec
in
ret
inc
ja
pop
loope
cmp
add
adc
inc
xor
ja
or
cmp
lcall
stos
pop
repz
xchg
ret
sti
jne
lret
cli
dec
aam
add
loop
xchg
frstor
push
ss
jl
sti
dec
mov
xchg
or
mov
loopne
inc
pop
adc
dec
jns
imul
mov
xchg
outsl
and
xchg
jl
jmp
out
sub
xchg
pop
mov
jns
int
sbb
mov
cmp
mov
jge
push
aad
adc
stc
adc
das
push
das
pop
into
jecxz
jno
stos
ljmp
int
xor
add
mov
ja
int
lret
jo
jnp
xor
jmp
leave
xchg
dec
cmpsl
outsl
loop
pushf
insb
icebp
pop
mov
sarb
mov
or
or
add
xchg
jge
jne
insb
aad
xchg
mov
mov
dec
js
imul
ljmp
lds
lret
mov
jb
mov
test
mov
fstps
in
icebp
stos
stos
icebp
sbb
divb
dec
xchg
mov
xlat
cmc
int3
mov
movsb
pusha
fucomi
jbe
dec
outsl
test
dec
lock
mov
rolb
sbb
xor
movl
sub
je
ds
call
sarl
pop
pop
cmp
sbb
adc
inc
icebp
pushf
sarl
arpl
lds
nop
fisttpl
idivb
or
adc
jbe
xchg
sub
sbb
mov
sbb
mov
mov
mov
das
xchg
pushf
scas
sub
imul
lds
push
adc
jne
pop
push
stos
fadd
push
xchg
daa
fs
sub
data16
pusha
push
jge
mov
jo
mov
rorb
xchg
sub
sahf
leave
cltd
jnp
shl
popa
ror
addr16
add
adc
mov
mov
mov
lret
jl
inc
xchg
xchg
dec
scas
repz
push
pop
sub
adc
mov
cmp
shl
dec
xchg
sub
mov
test
xchg
sbb
stos
cmp
cmp
pop
mov
pop
pop
mov
aad
lods
pop
sbb
sub
sbb
adc
aad
sti
push
or
es
xchg
dec
dec
mov
cmpsb
inc
minps
insl
cld
cmc
push
into
mov
push
div
mov
pop
hlt
test
add
add
imul
jp
add
es
lods
mov
int3
inc
addl
pop
pop
call
xor
test
sub
push
sbb
mov
xor
pop
mov
fidivs
cld
jae
popf
repnz
mov
data16
add
sbb
xor
mov
push
cmp
lret
pop
addr16
ss
or
addl
lds
cwtl
cld
mov
dec
mov
xchg
jle
jecxz
fidivl
roll
sub
push
ret
sbb
xor
testl
jae
leave
push
nop
cs
fs
orl
out
test
leave
lock
sub
push
clc
cli
test
ud2
shl
pop
inc
insl
fmul
push
xor
int
sub
popa
inc
push
xor
repnz
push
pop
mov
mov
or
sbb
xchg
sub
pop
xor
mov
test
fistps
popa
sbb
loope
mov
popf
mov
fstpl
sub
xchg
sbb
orb
nop
push
xor
and
mov
in
xchg
out
pop
mulb
sub
aam
xchg
jmp
cld
outsb
sbb
mov
cld
jns
mov
cwtl
cmp
in
movsb
dec
push
sbb
int
in
inc
lcall
rcll
in
cmc
pop
mov
in
sub
cs
adc
hlt
sbb
ja
rcll
mov
negl
rorl
push
jl
mov
addb
repz
mov
enter
cmp
das
cmp
dec
fs
fstp
inc
push
lahf
xor
rcll
outsl
dec
jge
les
es
arpl
fs
lods
inc
testb
xchg
mov
mov
arpl
mov
insb
jo
cli
cwtl
fdivs
or
cmc
insb
xor
clc
movb
mov
jle
inc
incb
mov
and
push
sub
enter
dec
jle
mov
shll
bound
xlat
sbb
scas
xor
push
xor
adc
data16
dec
cmp
push
fbstp
xchg
jne
mov
push
jp
mov
inc
cmp
pop
enter
lcall
inc
stos
in
loop
loope
jno
je
mov
les
xchg
dec
lcall
adc
movsb
insl
cmp
lods
mov
loope
lods
mov
ret
pop
ret
add
xor
fsubrs
or
pusha
push
lds
push
and
jl
rolb
xlat
pop
outsb
or
pusha
pop
pop
jns
mov
mov
xor
pop
xchg
cld
ds
pop
xor
mov
in
jo
shrb
fnsave
mov
pop
ss
pusha
pop
movsl
and
push
fwait
jae
inc
in
in
lcall
jl
mov
sub
mov
inc
in
jmp
mov
pushf
imul
or
and
stos
mov
dec
and
call
mov
jbe
jl
push
cwtl
out
shl
std
push
inc
jg
gs
cmp
rcrl
inc
cmp
movsl
inc
ret
mov
enter
dec
aam
jmp
pusha
roll
rcrl
sbb
pop
popf
mov
and
lods
mov
cs
xchg
jne
push
popf
imul
inc
sbb
mov
add
cmp
pusha
push
add
sbb
bound
pop
pop
lods
cmc
mov
ds
or
leave
shl
jle
jp
jne
test
and
daa
call
add
in
shrl
inc
adc
into
orl
jne
xchg
push
push
or
jge
mov
mov
xor
mov
not
fadds
roll
mov
mov
inc
push
or
push
xor
nop
ja
into
xchg
pop
adc
cmc
sbb
movsl
mov
mov
in
movsl
sub
mov
jmp
adc
inc
dec
mov
dec
jo
jbe
inc
ret
mov
icebp
mov
sub
mov
bound
arpl
popf
aad
mov
popa
jl
shlb
jnp
add
lock
pop
or
loopne
out
outsb
and
xchg
inc
xchg
push
adc
gs
add
ret
pop
push
xchg
sbb
push
xchg
mov
mov
daa
add
xor
push
aad
fstps
xor
pusha
into
cmc
test
xlat
test
call
fwait
adc
mov
cmp
pop
pop
cmpl
cmpsb
xchg
push
push
mov
inc
mov
pop
outsl
popa
mov
pop
into
ret
aam
test
cmp
sarl
popa
shr
aad
inc
mov
loope
cmp
and
mov
loop,pt
inc
add
cs
cltd
push
and
fwait
dec
jle
dec
mov
xchg
fs
ret
and
and
and
iret
call
in
int
cmp
xchg
andb
dec
xchg
cmp
test
and
ret
stos
ret
mov
in
sbb
sub
push
xor
arpl
fildll
fsub
ja
add
sub
pop
ret
sarl
jg
xor
mov
sbb
inc
mov
dec
fisttpll
sbb
pop
or
lret
lret
ss
sarl
dec
fcompl
sbb
loopne
mov
push
pop
pop
xor
shll
addr16
xchg
cmpsl
mov
jmp
mov
lret
lods
lret
push
jno
test
outsb
xchg
jecxz
mov
sub
push
imul
ret
mov
dec
push
ficoml
testl
fistpll
add
in
push
in
dec
xor
mov
mov
loop
mov
div
fadds
add
lods
movsb
push
das
dec
cmp
ret
pop
adc
rol
lcall
rcr
jl
pop
adcb
movsl
mov
hlt
and
in
fsubs
jnp
mov
mov
leave
sub
and
dec
xor
or
jbe
or
fwait
mov
les
stos
sbbl
sbb
imul
adc
cs
mov
pop
pop
pusha
and
xor
and
insb
mov
dec
std
and
inc
mov
inc
popa
lret
ret
push
divps
nop
fsincos
ret
adc
call
xchg
das
push
push
add
xlat
xor
out
inc
xchg
or
and
outsb
mov
subl
cmp
or
dec
inc
xchg
movsl
cwtl
stos
inc
lret
fnstsw
mov
and
inc
cmp
add
das
sbb
xor
es
ja
enter
das
dec
inc
stos
push
sti
insl
and
adc
out
gs
pusha
dec
lcall
icebp
mov
out
jo
aas
repz
js
or
jne
enter
in
or
lock
outsb
movsb
sbb
sbb
lods
sbb
push
pop
fmuls
xchg
bound
ljmp
cs
imul
mov
mov
jbe
adc
pop
mov
push
repnz
scas
xor
nop
mov
fdivs
cwtl
mov
push
lret
jmp
leave
loope
inc
dec
sbb
repnz
dec
push
dec
mov
icebp
and
mov
paddsw
insb
lret
in
adc
imul
ror
loopne
movsb
xor
cmp
in
inc
push
lcall
out
sbb
fstl
in
jmp
int
fnstsw
out
sbb
loope
les
loopne
arpl
notl
pop
sbb
pop
inc
add
outsl
in
adc
movups
fwait
fs
sub
or
popf
sbb
and
mov
fldt
das
mov
or
sti
mov
nop
fs
lods
andb
cmp
or
cld
cmp
cmpsb
lock
xor
xchg
mov
sti
aaa
lret
mov
ljmp
and
mov
jecxz
and
jge
dec
xchg
adc
ret
adc
inc
fnsave
cmp
mov
adc
rorb
and
test
mov
je
pop
test
ficompl
xchg
pop
std
jno
mov
out
mov
mov
mov
fsubrl
aad
sub
pop
push
mov
lahf
mov
js
lock
mov
pop
cltd
sar
adc
xor
outsb
fildl
int3
aas
fimull
les
faddl
xchg
push
cmpsl
mov
mov
inc
xlat
sti
in
mov
std
push
sub
jmp
jp
pop
lods
adcl
lods
lock
cwtl
mov
or
jb
mov
cmc
roll
jmp
push
dec
push
nop
cld
xor
xor
mov
js
pushf
aad
jle
cmc
ret
pop
mov
cmp
out
inc
les
inc
add
aaa
cwtl
gs
lea
movsb
int3
cmp
and
pop
imul
adc
bnd
test
sahf
dec
arpl
mov
cmpsb
push
pop
cltd
mov
lods
cmp
cs
loopne
jg
or
fwait
dec
cmpsb
add
xchg
std
cmp
fidivs
pop
sub
adc
lock
movsl
adc
mov
pop
les
dec
cmpsb
mov
pop
mov
cmp
jecxz
cmpb
dec
xchg
sarb
or
inc
inc
mov
xchg
dec
mov
or
lea
clc
adc
lcall
pop
push
cmc
lret
jns
jmp
pop
das
or
mov
mov
xor
dec
push
lret
push
sbb
pop
dec
out
jb
xchg
mov
iret
pop
push
and
mov
inc
int3
lahf
lods
add
les
fsubrl
push
popf
jno
insb
cmp
inc
xchg
push
inc
lcall
xchg
jno
sbb
cmpsb
fcompl
mov
dec
cmp
loope
pop
mov
pop
fwait
jl
and
call
mov
mov
loopne
iret
fimull
mov
cmpsb
popa
sti
cmp
outsb
push
sub
sub
adc
mov
push
int3
lods
popa
popa
nop
jnp
jmp
enter
dec
shlb
jnp
punpckhdq
push
cltd
xor
stc
sbb
pminub
call
int3
inc
fs
xor
cmpsb
lahf
stc
add
and
bound
bound
ljmp
out
inc
mov
repz
icebp
jb
rorb
xchg
mov
les
xchg
clc
mov
test
xchg
mov
jecxz
mov
repnz
je
jb
popa
add
scas
inc
xor
cmp
lahf
std
nop
jle
adc
repz
aaa
pop
addr16
mov
ja
push
mov
into
mov
mov
sub
xchg
adc
lcall
pop
test
popf
fsubs
push
jbe
cmc
out
xor
jb
cmp
cmp
adc
cs
xchg
and
add
adc
xor
sub
adc
xchg
aam
cmpsb
sub
fdivrl
mov
add
pop
mov
mov
call
lret
inc
mov
aas
jne
jns
jle
andl
pop
pop
dec
call
test
insl
mov
sbb
inc
stos
push
cmp
loope
xor
dec
icebp
popa
push
xchg
inc
cmp
cli
push
add
xchg
mov
dec
loope
push
icebp
xchg
pop
push
mov
mov
jbe
in
out
adc
insl
pop
jmp
mov
inc
andl
test
add
add
inc
rcll
mov
pop
mov
adc
in
movsl
stc
stos
jnp
in
enter
insb
fld
pop
mov
or
adc
ja
cmp
ss
dec
les
inc
dec
adc
pop
dec
jl
push
in
inc
xchg
movb
roll
or
aas
push
jle
cli
add
push
cmp
cmp
cmpsb
inc
jo
push
xchg
daa
cmc
pop
repz
sub
mov
gs
dec
sbb
test
and
jo
test
stos
test
imul
loopne
xchg
mov
push
addr16
in
icebp
adc
jnp
mov
xor
sub
xchg
dec
cwtl
xor
cwtl
sub
lret
icebp
push
jnp
add
cltd
adc
inc
fcmovnbe
sbb
pop
push
push
mov
out
sbb
pop
mov
and
dec
jb
push
lods
or
pop
test
or
sbb
cmp
mov
mov
mov
jbe
or
add
mov
cmpsb
aam
push
jne
les
lcall
adc
shlb
call
cld
mov
pop
xchg
outsb
sbb
loop
jne
mov
add
jecxz
dec
mov
imul
loop
insl
inc
cmc
andl
scas
mov
inc
pop
pusha
jbe
xchg
in
jl
popf
jbe
test
orl
dec
and
cwtl
mov
cs
orb
and
xor
pusha
rcrl
stos
arpl
adc
mov
daa
mov
je
cld
pop
rolb
daa
fiadds
cmp
adc
sub
cmp
mov
test
xor
call
and
loope
lds
xchg
sarb
sub
out
repz
dec
inc
pop
add
or
jg
xlat
cmpsb
rclb
mov
xor
adc
push
xchg
mov
adc
xor
jno
mov
sub
clc
leave
scas
xchg
cmp
pushf
inc
aaa
sbb
mov
dec
fbstp
push
pop
mov
ds
pop
mov
imul
int3
lahf
idiv
xchg
mov
jno
fcomp
dec
or
dec
or
loope
or
mov
jg
int
pop
jecxz
aaa
dec
scas
aaa
test
xchg
xchg
sarl
xor
cmpsb
xchg
jo
movsl
mov
and
fs
testl
sub
adcb
mov
mov
in
dec
dec
dec
test
sbb
sub
sub
sub
add
mov
cmp
mov
and
aaa
adc
inc
dec
adc
pop
call
inc
jnp
ds
lock
xor
mov
mov
cld
pop
pop
sahf
or
jle
pop
enter
xchg
notb
es
dec
push
jns
cli
into
lock
inc
lahf
and
fistpll
mov
mov
inc
test
mov
cmp
xor
mov
push
cmpl
mov
and
adc
out
push
fsub
fwait
mov
loop
addr16
das
jg
lods
pop
ss
lahf
adc
jbe
cld
imul
daa
das
leave
and
adc
stos
xchg
xchg
fcoms
pop
fwait
cmpsl
fwait
in
ljmp
push
pop
lea
lret
sub
out
aam
stc
leave
xchg
sbb
lahf
lcall
stos
cmpb
insb
cmpsl
pop
sbb
xchg
mov
pop
ljmp
inc
arpl
adcb
in
rcl
incb
push
xor
dec
dec
ljmp
inc
jb
lret
bsr
mov
mov
add
pop
xchg
fsubs
mov
lds
cmpsl
inc
add
and
dec
fisubs
mov
mov
pop
lods
xchg
mov
fcompl
pushf
out
add
cmpsl
mov
or
jecxz
loopne
mov
fbstp
mov
subb
cmp
jmp
adc
pop
dec
jp
jo
mov
mov
test
fdiv
inc
mov
repz
dec
mov
xchg
lods
or
mov
adc
sub
sbb
in
xchg
jecxz
insb
mov
gs
cs
out
repz
mov
jno
subl
push
inc
jg
mov
movsl
adc
lea
arpl
mov
cmpsb
cld
mov
add
push
jl
scas
test
dec
cmp
in
mov
or
cltd
movsl
in
pop
add
push
xchg
dec
addr16
inc
stos
cs
aam
adc
stos
lea
filds
push
shll
push
je
lods
jns
mov
or
lds
sub
ds
aaa
jg
mov
insl
popf
mov
not
insl
test
inc
sbb
sar
xor
int3
insl
jns
ja
movsl
add
xor
dec
mov
inc
cld
mov
shlb
sbb
sbb
add
movsb
scas
into
sahf
mov
mov
pop
push
jb
sbb
cli
je
or
mov
shrl
pop
push
clc
pop
sti
dec
sti
shrb
in
mov
das
hlt
mov
xor
sub
push
rcrb
ret
fmuls
mov
push
push
jl
js
xchg
pusha
cli
jb
fcom
adc
inc
insl
mov
aaa
jnp
dec
outsb
jno
sbb
and
popa
push
cwtl
repz
mov
jnp
sub
mov
jge
ljmp
cmp
mov
fwait
std
cmpsl
inc
data16
and
inc
aaa
xchg
push
dec
mov
pop
push
repz
lock
inc
push
cmpsb
fs
xor
add
outsl
enter
sbb
adc
fwait
mov
sbb
test
or
stc
andb
pusha
call
mov
incb
inc
pop
ret
rclb
pop
jno
xor
adc
add
lock
lret
loopne
out
jnp
shll
adc
imulb
and
pop
inc
dec
inc
pop
or
std
xlat
mov
add
nop
adc
insb
xchg
mov
mov
or
jmp
std
in
leave
stos
jp
dec
xchg
or
mov
xor
int
je
push
rclb
aaa
jns
dec
push
movsl
shlb
sub
mov
cmp
dec
cmp
pusha
pxor
aam
clc
sbb
icebp
fsubrl
xchg
add
push
outsb
sahf
mov
inc
mov
lret
test
or
in
shr
sub
pop
xchg
xor
sar
or
mov
or
loopne
out
sub
test
int3
inc
stc
dec
mov
and
jge
mov
dec
ja
xchg
jo
or
fisubs
rcrb
addr16
push
mov
push
out
iret
mov
jg
or
cli
dec
add
sbb
icebp
stc
aam
movsl
or
push
dec
xchg
add
fs
fisttps
cmp
xchg
mov
aaa
push
call
jne
es
jmp
pop
arpl
cmpb
mov
lret
mov
test
sti
cmp
fcoms
push
mov
jo
addr16
sbb
out
insb
int3
mov
sub
jns
pushf
mov
in
cmp
daa
repz
dec
adc
mov
lret
cmp
in
xor
jl
mov
daa
push
outsb
jne
mov
cmp
insl
fcmovnbe
xor
xchg
pop
cmp
idiv
outsb
push
imul
mov
sub
or
movsb
push
pop
jecxz
add
hlt
orl
mov
sbb
cld
dec
insb
lret
shlb
out
sbb
in
rolb
push
outsl
mov
pusha
outsl
adcl
in
sbb
fidivl
loope
xor
xor
imul
gs
loop
imul
sub
ja
pop
jnp
xchg
lods
mov
popf
dec
mov
add
aad
mov
movsb
pushf
popa
mov
test
or
add
leave
xchg
lahf
jmp
lea
les
lds
cmpb
fstps
movsl
lret
fnsave
jmp
inc
mov
add
ret
adc
lock
ss
jbe
aaa
fildll
sbb
pop
pop
mov
or
xchg
mov
mov
test
rcll
insb
test
idivb
ja
leave
mov
sub
mov
mov
xchg
push
ror
cmc
testl
cmpb
push
mov
xchg
pop
lcall
aaa
xchg
inc
inc
sub
inc
pop
and
sub
loope
fists
stos
test
roll
insb
mov
les
stos
mov
pop
das
add
sbb
scas
cmp
inc
adc
inc
enter
pop
sti
in
cmp
mov
mov
xchg
and
rcrl
in
cli
mov
jl
aam
mov
icebp
popl
arpl
sbb
test
pop
add
mov
mov
loopne
daa
inc
push
shlb
jb
in
jmp
cld
pop
rol
stc
bnd
fisttpl
popf
addl
pop
out
sub
sub
or
cs
cmp
pop
js
sub
mov
mov
xlat
nop
jb
cmovae
xchg
rol
test
ljmp
sti
aad
out
loop
add
sub
movsl
pop
sahf
jns
jecxz
and
mov
pop
aam
aaa
and
xchg
dec
mov
inc
pop
dec
repz
xchg
ja
lret
mov
and
cmpsl
adc
leave
add
inc
jle
rcll
daa
and
fwait
xlat
sbb
push
mov
iret
mov
bound
mov
and
test
sahf
in
xchg
loope
sbb
jae
leave
aad
sbb
cwtl
inc
daa
int3
push
enter
subb
stc
in
jne
mov
dec
sbb
into
pusha
mov
movsb
fwait
ljmp
iret
mov
leave
test
sub
enter
cmp
dec
mov
and
sub
mov
sbb
cld
mov
xchg
mov
dec
push
in
mov
andl
inc
pshufw
mov
mov
sbbl
xor
out
jecxz
aas
xor
lods
add
push
push
cmp
cmp
movsl
lret
femms
jb
out
in
jne
jmp
dec
invd
mov
notb
inc
pop
je
scas
dec
push
scas
cmp
bound
sbb
adc
jns
push
mov
pushf
push
cmp
pop
bound
fadds
push
iret
loop
iret
xor
push
push
adc
xchg
into
aaa
test
jg
jne
hlt
sbb
fidivrs
les
and
stos
lock
cli
cltd
fbstp
adc
aad
int3
jno
or
ret
add
jns
out
push
mov
lea
and
iret
xchg
add
mov
xor
sbb
push
mov
dec
adc
sbb
lods
cmp
pop
and
or
popf
dec
inc
or
jne
les
fcmovb
inc
into
cmp
stos
out
sub
lock
mov
mov
sub
ds
popa
lret
jae
pop
xchg
hlt
nop
das
pop
xchg
stos
mov
shl
xchg
imul
test
ja
jno
ficoms
mov
sbb
inc
xchg
xchg
adc
lret
jg
int3
popa
lret
jle
sbb
ss
test
sbb
dec
jbe
jno
inc
clc
pop
pop
hlt
call
sub
or
daa
outsb
pop
stos
and
fdiv
repz
ret
xchg
pop
cld
xchg
push
sbb
lret
cltd
xor
xor
int3
or
test
mov
jno
nop
or
cmpsb
pusha
cmp
push
mov
imul
xchg
sbb
and
shr
testb
scas
dec
fnsave
pop
cmc
adc
rcrl
pop
xor
aas
sub
push
and
cwtl
cli
out
mov
push
cmp
lret
sub
leave
roll
xor
out
sub
icebp
pop
stos
push
pop
xchg
shlb
sbb
arpl
decb
divb
dec
xchg
popf
jl
sbb
push
lods
inc
jl
addr16
lods
sub
mov
cmpsb
inc
sub
add
xor
adc
cmp
and
out
push
jo,pn
imul
sub
xchg
push
mov
mov
cmp
jnp
ss
ss
push
test
lock
fwait
mov
pop
int
lods
add
insl
cmp
fs
inc
sarb
push
fisttps
sbb
fucomi
rorb
adc
jbe
sub
stos
dec
stc
std
cmc
popf
add
jl
push
lds
jnp
enter
mov
movsl
into
fisttpll
movsl
xchg
repnz
mov
mov
or
jnp
div
scas
inc
leave
mov
xchg
aas
jmp
ss
mul
scas
adc
mov
idivl
sub
movsb
and
movsb
cld
shll
or
jb
xchg
jae
mov
pop
repnz
mov
int3
lret
push
loopne
jno
gs
dec
inc
mov
sub
push
jmp
push
jb
arpl
inc
sbb
mov
out
stos
cmpsl
imul
push
in
inc
lahf
xchg
push
or
inc
cmp
test
mov
or
lods
sub
pop
adc
in
dec
filds
das
jb
mov
jp
inc
shrl
push
adc
je
adc
pop
jge
adc
push
scas
dec
loop
jge
je
or
incb
out
repnz
pushf
lcall
xor
sub
inc
push
icebp
repz
xchg
stc
outsb
int3
clc
mov
nopl
push
test
add
inc
jo
test
and
dec
dec
adc
and
mov
je
inc
lret
adcl
pusha
test
fwait
rcrl
adc
or
insl
int3
jle
adc
and
cmp
sbbl
xchg
pop
cmpsb
push
movsl
cmc
pop
push
mov
mov
out
pop
mov
gs
inc
push
out
or
xor
or
nop
push
jge
adc
inc
sub
out
dec
cmp
jge
cltd
cmp
mov
push
scas
sub
mov
xchg
js
cmp
xlat
xlat
mov
mov
or
cmp
push
adc
dec
add
insl
iret
add
and
mov
xor
pusha
push
mov
lods
xchg
mov
jge
inc
xchg
xor
mov
cmp
mov
xor
notl
ret
and
and
mov
rcrb
xchg
mov
add
and
and
ja
push
dec
push
scas
cld
enter
push
mov
cld
jle
jne
gs
mov
mov
ficompl
cmpsb
inc
xor
dec
sti
aam
xchg
sarb
sbb
in
call
xchg
dec
pminsw
bswap
and
mov
outsl
pop
push
insl
sub
arpl
ljmp
int3
nop
add
mov
add
push
enter
cltd
add
xchg
xor
mov
jmp
sub
mov
mov
test
push
mov
pop
inc
xor
shlb
inc
fcmovbe
bound
movsl
adc
sub
neg
cmp
mov
mov
lods
dec
xlat
in
dec
in
xlat
push
mov
dec
out
xchg
dec
scas
jno
popa
mov
cmp
popa
ja
xchg
sbb
jmp
fwait
mov
test
out
mov
das
lret
add
out
fs
outsl
push
je
imulb
xor
pop
push
in
insl
add
outsl
sub
popf
mov
push
pusha
ja
in
shr
shll
cli
push
xor
inc
bound
test
add
sti
sub
pop
test
cmp
sbb
lahf
lret
xchg
int
cwtl
leave
add
jmp
dec
call
and
inc
add
add
xor
lcall
mov
mov
adc
jns
rol
cmpsb
mov
jne
loopne
add
lea
fcomps
xchg
sbb
insl
fbstp
cmp
call
push
addr16
jns
mov
dec
push
les
pop
xchg
push
xchg
sahf
inc
sub
incl
dec
scas
inc
push
enter
xchg
cmpsb
push
rcrl
dec
add
add
lds
sub
xor
inc
dec
mov
je
mov
hlt
push
popa
xchg
xchg
jge
xchg
adc
and
lea
xor
pop
es
ret
add
xor
xchg
gs
sbb
sub
jae
nop
repz
movsl
dec
out
mov
rcrl
or
push
dec
inc
aad
gs
jecxz
sti
cs
jl
xchg
mov
mov
cmpsb
mov
sbb
cwtl
hlt
jp
lock
test
inc
cs
test
cmp
lret
adc
pushf
sti
and
pop
pop
jbe
mov
pop
jle
or
inc
dec
in
mov
fcomp
and
adcb
mov
cmp
popf
pop
dec
aad
gs
fwait
jge
fs
and
cmp
outsl
dec
out
clc
ds
in
jge
not
dec
filds
push
push
pop
push
imul
sub
mov
xchg
out
push
mov
and
mov
fcomps
pop
fimull
daa
pop
in
jle
loopne
mov
lret
inc
or
sarl
jo
fcoml
iret
nop
in
mov
sbb
out
jl
xchg
cmp
dec
aas
cmp
mov
mov
insl
aaa
adc
sub
movsl
and
jnp
int3
or
xchg
ljmp
sbb
or
or
stc
jno
cltd
ss
xor
sbb
push
daa
cli
icebp
mov
xchg
out
xchg
pop
fcoml
push
ds
rcll
rorl
jge
loop
adcl
xor
je
in
mov
mov
cmp
loopne
sub
shrl
aam
bound
lret
jb
outsb
cld
pushf
mov
daa
xor
push
push
add
int
ljmp
inc
jb
lahf
fldl
insb
les
inc
mov
and
mov
popf
dec
in
jge
divb
dec
fsts
lahf
mov
in
adc
cmp
stc
xlat
push
hlt
mov
sub
push
insl
add
and
xchg
lock
xchg
mov
pop
cmp
push
push
in
std
sbb
cld
sbb
push
pop
fbstp
xchg
push
lods
stos
fwait
dec
test
push
sub
cmp
dec
adc
jge
jl
sub
fwait
aam
lahf
imul
cltd
adc
clc
sub
out
rcrb
mov
ljmp
inc
inc
popf
movsl
mov
aas
pop
sbb
pop
imul
pop
bnd
sahf
jbe
mov
lds
jmp
pop
sub
imul
mov
addr16
mov
subb
and
cli
sbb
jae
js
cwtl
out
mov
mov
bswap
xor
aaa
subb
dec
stos
mov
aad
pop
xchg
xor
push
std
fnsave
jl
test
xchg
lods
dec
fsubs
mov
nop
pop
mov
adc
xor
iret
mov
js
jle
insb
jno
inc
inc
in
mov
mov
dec
jmp
cmpl
mov
sbb
aas
insl
xor
xor
repz
dec
mov
jge
lea
xchg
pop
dec
mov
adc
lret
sub
cmp
sbb
xchg
cmp
or
and
add
or
decb
testl
jb
rclb
addr16
ffreep
sub
push
inc
pop
mov
xlat
push
push
or
push
add
ret
sub
lds
std
aas
adc
scas
pop
hlt
jmp
xor
xchg
adcb
xlat
mov
jge
and
shl
adc
pushf
jne
and
ss
out
je
cmp
xchg
arpl
jae
push
adc
insb
push
lods
out
fdivl
stc
imul
pop
das
sbb
jns
or
jno
pop
mov
in
add
or
or
inc
sbb
js
into
addl
daa
dec
out
push
jp
pop
scas
scas
mov
add
jns
pop
cmpsb
jae
mov
aaa
or
mov
xor
push
mov
xor
test
add
jb
or
pop
int
mov
jno
mov
cmp
cmc
push
fucomip
xchg
pusha
pop
xorb
add
cmp
js
std
push
add
loope
sub
adc
pusha
stc
icebp
mov
fldenv
imul
push
popf
mov
push
es
push
jl
lret
lds
inc
lret
jo
dec
pop
js
into
push
scas
out
sub
fnstcw
fidivs
hlt
imul
loop
mov
nop
and
jle
pop
mov
ffreep
sbb
jmp
ljmp
cmp
sub
pop
sbb
aas
movsl
jno
mov
in
mov
int
aad
lds
sbb
mov
push
add
lret
dec
push
pushf
shlb
and
push
jl
xchg
out
in
insb
push
ficoms
mov
xor
cmc
mov
mov
mov
popf
lret
lret
xorl
mov
insb
or
fisubrl
loop
lods
xor
and
std
in
femms
inc
clc
mov
push
and
adc
ds
push
jno
xor
lret
fmul
mov
sub
lret
jne
lock
push
push
xchg
pusha
in
mov
loope
insl
movsb
xchg
in
cmpsb
lods
cli
sbb
mov
jo
push
sahf
xchg
mov
lea
push
out
clc
xchg
fnstcw
jnp
sbb
rcll
out
test
int
ljmp
mov
jns
out
fwait
add
ret
push
mov
pop
repz
fadds
pushf
push
dec
lock
in
shrb
cwtl
add
lcall
add
and
daa
pop
stos
sbb
mov
test
push
rcrb
xlat
outsb
ja
icebp
loopne
adc
sub
sarb
adc
or
cld
cmpsl
dec
fs
idivl
cmp
pop
ljmp
inc
jb
inc
pop
imul
sub
addl
repnz
mov
inc
dec
add
dec
jp
push
mov
xchg
jo
push
ja
test
xchg
or
rcrl
add
push
adc
imul
sbb
out
jmp
sub
add
ljmp
in
mov
dec
ficoml
and
sub
clc
mov
and
out
cwtl
xchg
mov
dec
adc
push
sub
pmulhw
xchg
movsl
adcb
fcomps
fbstp
xchg
shrb
cmp
test
div
cmp
fs
push
ja
call
out
jl
popf
out
sbb
loope
sbb
popa
add
push
push
cmp
fildl
jne
add
xor
push
sbb
clc
in
jbe
xor
pushf
dec
cmp
es
out
add
xchg
inc
les
xchg
and
jb
out
enter
adc
jmp
rolb
mov
lret
test
ss
fstpt
daa
dec
pushf
mov
xchg
jmp
movsl
mov
add
ret
xchg
jmp
jp
test
cwtl
jle
pop
add
lcall
mov
mov
jg
inc
xchg
loopne
xlat
aas
out
popf
pop
cmp
mov
jle
insb
jno
aad
mov
mov
out
repnz
xor
aaa
and
arpl
push
mov
lret
aaa
sbb
jne
pop
js
mov
inc
div
xor
adc
mov
iret
sbb
scas
fcomps
pop
mov
fsubl
sub
xchg
loop
push
aas
stos
mov
imull
lods
or
lods
push
jg
add
ds
or
mov
data16
xchg
push
push
enter
mov
mov
icebp
aad
xor
mov
mov
pop
mov
repz
popf
cmp
mov
popf
je
stos
fsts
mov
or
stos
jns
mov
add
fdiv
jle
clc
popf
mov
dec
jmp
int
push
pop
mov
pop
xchg
sbb
sbb
movsl
jne
lea
adcb
push
inc
cmp
ds
int
push
aaa
ret
and
cmc
push
insl
xchg
jae
mov
lods
xchg
int
add
pop
adc
lahf
movsb
jne
pop
push
jnp
cmp
daa
cmc
in
xlat
lock
mov
in
into
sti
roll
cmp
lcall
mov
push
push
xor
ljmp
push
fsubrl
jle
push
sbb
inc
inc
xor
mov
mov
imul
or
pop
das
mov
inc
sub
pop
push
xchg
daa
and
jae
dec
test
stc
mov
jne
lahf
cs
mov
lret
loope
pop
int3
popf
add
test
aam
mov
or
clc
data16
sbb
dec
outsb
sbb
xchg
sbb
ja
pop
adc
xor
mov
add
xor
test
aas
jns
inc
mov
repnz
mov
pop
lods
jecxz,pn
jle
les
daa
int
les
lea
xorl
loope
sbb
js
js
and
add
int
add
out
push
ljmp
sbb
mov
or
ss
pop
xchg
pop
and
jmp
xor
xchg
aaa
repnz
sar
lock
mov
add
and
enter
int
sub
stos
cmp
push
xchg
cli
ret
pop
aam
test
daa
jnp
and
pop
scas
jo
sub
pop
inc
xor
xchg
shlb
shlb
and
je
jmp
in
mov
xor
push
cltd
cmp
jl
mov
xor
fdivs
shl
mov
pop
leave
push
mov
pop
es
mov
and
loope
inc
cmp
lock
jmp
sbb
scas
xor
dec
push
cmp
lock
or
arpl
setle
lock
jmp
cmc
or
stos
scas
sbb
cmp
jnp
lret
jge
imul
mov
std
push
sbb
gs
cmp
add
loope
add
mov
push
imul
sub
cmp
add
imul
addr16
or
adc
addr16
mov
dec
xchg
mov
cwtl
or
or
arpl
cmpb
cmpsb
push
test
mov
inc
jns
jb
ds
pushf
xchg
mov
mov
jg
jge
inc
aam
mov
sbb
fnsave
dec
push
xchg
jmp
mov
outsb
sub
outsl
rcrb
cmp
mov
repz
lods
js
sub
lret
mov
mov
mov
jecxz
je
jne
cmc
adc
sub
xor
mov
int
test
cmpl
or
aaa
leave
mov
pop
icebp
leave
out
pop
inc
pop
cmp
fists
xchg
fwait
aaa
rcrb
test
pop
inc
inc
cltd
adc
loopne
mov
xor
add
mov
mov
push
pop
cmpsb
mov
in
sub
push
cli
jg
or
fs
scas
dec
outsl
ss
add
and
ljmp
add
push
rorb
mov
sub
sub
in
inc
mov
add
mov
fistpl
xor
dec
inc
push
mov
dec
mov
or
push
testl
mov
push
jmp
pop
movsl
xchg
out
xor
cmp
mov
dec
outsl
adc
or
adc
rcr
mov
popa
mov
xchg
ljmp
clc
nop
mov
sbb
dec
fwait
pop
and
cltd
cmp
les
xlat
cmp
es
dec
jle
or
sti
and
jge
fists
arpl
pop
or
in
in
dec
xor
rorb
adc
rorb
outsb
pop
mov
cmp
lret
sub
addr16
and
fsub
stos
or
lcall
and
mov
or
mov
lcall
or
sbb
sbb
pop
push
ds
fistpl
dec
faddl
jg
mov
mov
test
js
jns
mov
shlb
pop
xchg
cmp
outsb
scas
nop
sbb
imul
mov
push
dec
repz
es
mov
xor
cmp
xchg
fstpt
cli
ss
lods
cmp
mov
cmp
pop
jle
pop
mov
mov
ljmp
add
js
outsb
test
mov
mov
pop
adc
mov
cld
push
push
and
sbb
jge
mov
lahf
hlt
sub
cltd
outsl
enter
div
testl
push
mov
mov
inc
xor
cmp
shll
lock
popa
cmc
or
std
mov
pushl
jecxz
mov
mov
mov
dec
add
call
gs
in
test
jp
pusha
pop
addr16
fs
stos
sarb
sbb
stos
mov
push
loop
sub
cmp
add
mov
and
arpl
add
das
mov
mov
pop
cltd
dec
pop
and
jnp
xlat
daa
aaa
pop
inc
mov
mov
les
jns
outsl
leave
imul
aad
or
push
pop
fidivrs
dec
in
cmp
mov
cmpsb
into
dec
xchg
adc
mov
xchg
inc
lods
mov
loope
jne
ja
fcoml
cltd
cmp
fnstsw
push
in
ret
push
sbbb
xchg
aad
inc
inc
in
sub
xchg
in
pop
ja
ret
dec
push
negb
outsl
xchg
orb
pusha
inc
into
push
loope
pop
mov
pop
lcall
movsl
pop
bound
sub
pop
or
push
cld
dec
imul
inc
repz
es
lcall
cmpl
divb
mov
loopne
fidivrl
xchg
add
cwtl
dec
cmp
push
inc
int
dec
or
rolb
pop
push
sbb
jg
jg
or
out
ljmp
cmp
fldcw
cmp
pop
mov
jle
lcall
lea
xchg
jne
xchg
and
or
je
cmc
dec
xchg
repnz
sub
std
frstor
insl
mov
xchg
sub
icebp
adc
and
loopne
cmp
fsubrl
pop
int3
mov
iret
dec
ljmp
rorl
jecxz
sti
bound
int
outsb
dec
push
lock
mov
and
imul
sub
pop
dec
stos
push
adc
sti
fwait
push
add
xchg
xchg
push
inc
stos
pop
push
cmpsl
mov
push
int
add
gs
adc
jne
enter
sbb
leave
and
int3
xchg
fwait
test
repz
stos
push
imul
loope
gs
dec
xchg
jl
xor
roll
jb
sbb
mov
sbb
xchg
leave
jmp
jge
data16
nop
das
mov
xor
mov
inc
out
mov
int
cltd
ljmp
in
or
bound
jge
ds
mov
fs
in
add
xor
aas
data16
call
xor
lods
sub
push
pop
xlat
iret
fidivs
sub
ds
add
jg
fdivl
iretw
movsl
daa
into
repnz
shll
inc
cwtl
iret
aaa
mov
inc
sbb
jge
pop
mull
mov
out
loope
and
clc
sarl
mov
shll
sti
enter
sub
fldenv
mov
fwait
int3
pop
addr16
pop
fsubl
out
inc
push
insl
sub
jne
movsb
in
push
push
testb
lret
mov
out
pop
sahf
push
mov
aad
mulb
sub
test
lods
and
push
subl
pop
jnp
dec
rcll
mov
hlt
ss
das
xchg
pop
inc
iret
ds
fwait
mov
add
jne
arpl
mov
shll
mulb
add
ds
insl
insl
mov
push
adc
les
jno
inc
aad
pop
inc
aas
xchg
mov
xchg
call
rcrl
mov
cmpsb
cltd
call
push
xchg
test
push
xchg
cmc
hlt
ret
aam
das
out
repnz
repnz
push
inc
insb
cmp
ja
lahf
fs
lcall
xchg
jbe
dec
sbb
loop
inc
jbe
add
test
cmp
adc
cltd
mov
divb
jno
mov
aam
fstps
pop
push
inc
push
test
idivl
incl
arpl
dec
cmc
or
dec
in
sbb
shrb
ja
mov
ds
push
pop
loopne
ficomps
movsl
push
mov
test
inc
lret
pop
sbb
lret
mov
adc
call
hlt
lea
movsl
xchg
dec
lods
pop
xor
sbb
or
nop
mulb
mov
pop
test
dec
mov
push
addr16
adc
icebp
push
fiadds
rcrb
push
aas
js
popf
cmp
xchg
popf
popa
sub
jne
push
mov
cmp
push
xor
jp
cmp
xchg
mov
mov
mov
stc
adc
dec
and
inc
rsqrtps
cwtl
xor
inc
sti
mov
loopne
adc
popf
iret
das
dec
pop
mov
xchg
rclb
test
call
orl
sbb
stc
stos
sbb
hlt
cmp
iret
and
addr16
pop
jb
cli
mov
pop
sbb
fildl
cmc
xorb
add
cmpsb
xchg
outsl
sbb
das
add
cld
or
xchg
sbb
popa
leave
cmp
divl
xchg
mov
push
inc
inc
sub
add
imul
es
jmp
xlat
adc
dec
push
adc
mov
pushf
stos
in
push
xor
jne
or
xchg
jmp
mov
ud0
in
cld
out
mov
pop
cmp
dec
mov
dec
aam
mov
movq
or
xchg
fsin
mov
lret
xlat
in
jp
and
lock
xor
xchg
fwait
into
lods
dec
and
mov
inc
or
insl
cs
xor
in
pop
icebp
pop
push
ja
pop
stc
insl
aaa
mov
inc
pop
inc
xchg
xor
mov
add
mov
and
sti
add
and
sbb
sbb
lods
xor
add
xlat
ss
add
or
sbb
sbb
adcb
pop
shrb
adc
add
pop
sub
mov
jo
sub
fs
pushf
ja
mov
aaa
xor
popf
jg
into
mov
repnz
xlat
sti
push
push
xchg
mov
fstpl
xchg
pop
int3
add
jo
subl
adc
out
daa
sti
add
pushf
dec
jns
outsb
sbb
lcall
push
xor
push
imul
xchg
and
add
out
les
xor
lcall
imul
fidivl
xor
ret
icebp
add
daa
in
cmpsb
pusha
lahf
or
rorb
pusha
add
adc
or
xor
inc
shll
jmp
iret
adc
cs
mov
and
sub
into
andb
fstpt
sub
stos
les
sbb
jmp
mov
mov
fdivrs
outsl
and
pop
inc
push
fstpl
push
inc
dec
xor
fs
outsb
jb
mov
adc
jae
sbb
cmpsb
imul
mov
rcrl
or
stos
xorb
dec
sbb
dec
xchg
cmpsb
push
mov
fs
xor
mov
outsl
sbb
inc
rorb
and
movsb
cltd
sbb
loop
js
fwait
xchg
sahf
or
cmp
mov
mov
push
js
into
cwtl
pop
out
outsb
jbe
mov
test
scas
mov
insb
xchg
loopne
xor
xor
push
sbbb
push
cwtl
fwait
mov
cmpsw
pushf
or
mov
jno
adc
and
add
nop
xor
inc
or
inc
mov
inc
xchg
sbbb
test
pop
ja
push
test
dec
repnz
movsb
mov
adc
les
ficompl
jno
sahf
neg
clc
mov
std
xchg
or
js
dec
aam
mov
loop
mov
out
in
hlt
sub
repz
jp
pop
sbb
or
dec
pop
pop
arpl
sbb
in
push
ret
lret
adc
shlb
in
sbb
pop
mov
adc
lock
sbb
scas
rorl
imul
das
jae
inc
sub
iret
inc
jmp
xor
or
pop
xchg
gs
setge
loopne
jo
ss
push
iret
adc
fs
mov
push
movsl
push
loop
jnp
jne
andb
push
rcll
cmp
or
ficomps
mov
fwait
test
test
pop
and
pop
cmc
lods
aaa
lock
hlt
add
cwtl
and
daa
imul
imul
or
jge
in
cmp
pusha
lds
jg
fcompl
xor
fsubl
mov
dec
leave
insl
xlat
or
ficoms
pusha
test
pop
push
repnz
adc
mov
mov
cmp
push
enter
cmp
in
sub
push
mov
sahf
lock
lcall
inc
enter
jns
jp
add
cli
xlat
xchg
or
leave
mov
jp
adc
mov
xchg
cli
mov
inc
xchg
std
and
cmp
neg
js
gs
pop
or
ljmp
xchg
xchg
and
movsb
fsts
scas
pop
imul
dec
sub
xchg
pop
daa
and
test
jnp
test
jle
out
pushf
mov
stos
outsb
adc
adc
loope
and
jmp
or
lret
pop
arpl
cwtl
add
cmp
inc
int3
push
test
clc
pop
andl
lahf
xor
xchg
mov
jns
scas
add
fcomip
dec
cmpsb
or
fdivl
add
dec
jne
mov
imul
xchg
jp
mov
int
adc
pop
out
mov
push
inc
in
jl
pop
lea
pusha
push
pop
push
jmp
push
and
push
sahf
inc
xor
fcmovnu
jno
mov
pop
pop
aas
aad
clc
lds
sbb
imul
mov
inc
sub
fldl
in
lds
or
cmp
jl
aas
nop
ficompl
cmp
fisubrl
sbb
test
sbb
nop
cwtl
fdivrs
scas
or
pop
adc
fistl
inc
push
lahf
in
mov
push
inc
rcll
imull
inc
mov
or
xor
clc
fadd
test
das
or
mov
aaa
push
mov
loop
mov
sahf
aad
inc
xor
mov
jmp
daa
xchg
cwtl
outsb
pushf
mov
xor
fs
in
ret
jecxz
aaa
lahf
and
sbb
clc
sbb
and
data16
mov
cli
jmp
and
pop
jmp
int
mov
sbb
add
mov
addr16
jo
inc
fwait
xlat
mov
ja
or
fcomps
pop
ret
stc
push
and
and
push
mov
cmc
mov
loope
jmp
aas
inc
out
jae
int3
mov
sbb
push
pop
sahf
js
inc
pop
xor
inc
xchg
inc
nop
push
in
or
sbb
mov
ret
jl
pop
insl
inc
push
scas
sbb
or
test
lret
fistpll
jg
pop
out
lret
inc
xor
pushf
sbb
jge
or
hlt
loopne
xor
mov
pop
dec
pop
xor
pushf
mov
ret
ds
fisttps
subl
push
jns
cmp
call
jl
push
lods
xchg
mov
or
inc
pop
mov
push
imul
mov
dec
xor
add
ja
cli
roll
dec
iret
lea
inc
or
daa
mov
or
sub
cltd
ja
fildll
fldcw
push
and
out
les
loop
inc
add
dec
cmpsb
adc
mov
add
xlat
js
fsubr
push
loopne
mov
cmpsl
xchg
push
inc
rolb
sub
adc
and
cmpsl
shrl
jmp
mov
push
xchg
in
mov
cmc
lret
dec
or
xor
lcall
ljmp
popf
cmp
push
dec
sub
mov
xchg
js
in
cltd
and
fistpll
jmp
mov
bound
pop
add
mov
or
and
sub
xchg
dec
push
hlt
cmp
fs
sbb
sub
negb
cmp
je
sbb
fsubs
andl
mov
repz
mov
mov
add
ljmp
loopne
out
xlat
aam
std
xchg
aas
sbb
pop
fwait
add
daa
and
les
xor
aam
ret
pop
fdivrl
jecxz
jne
aaa
sub
shr
ss
outsl
popf
mov
xchg
sbb
shr
shl
mov
adc
lock
push
add
push
xor
pop
insb
push
sti
shlb
lds
adcl
pop
fidivrs
mov
je
or
loop
rcrb
or
dec
xor
add
add
pushf
lret
out
mov
jle
std
lahf
aam
mov
jbe
pop
fstp
inc
dec
outsl
faddl
push
nop
aam
pusha
in
and
out
push
shl
sbbb
in
push
das
pop
inc
aad
lock
aas
sub
into
add
xchg
stos
dec
jb
inc
shlb
inc
gs
cmp
loope
int3
mov
and
and
fs
cmp
inc
sbb
push
dec
leave
ret
lret
mov
and
xchg
out
xchg
filds
popa
out
jp
lds
mov
and
cmc
or
sbb
cs
adc
push
js
addr16
ret
mov
ljmpw
sbb
push
add
sbb
mov
test
imul
jnp
push
or
push
pop
sbb
or
sarb
xor
fdecstp
jbe
sub
pop
and
and
inc
jno
adcl
sub
add
sbb
mov
or
ja
inc
shll
or
cltd
popa
xchg
ds
test
loopne
fisubrs
scas
mov
js
pop
push
jne
push
mov
mov
adc
int3
pop
lods
pcmpeqb
cmc
outsb
pop
jno
lea
cwtl
arpl
cmp
das
pop
xchg
cmp
jmp
jecxz
cmp
mov
bound
xchg
dec
orl
cmp
xchg
jbe
sub
pop
ja
adc
sbb
add
pop
xchg
jle
fdivrp
add
imul
mov
or
adc
aas
or
pop
xchg
daa
cmc
mov
sub
sub
loop
pop
sbb
push
jge
sbb
mov
xor
cmp
dec
jmp
xchg
mov
jns
push
mov
sbb
and
mov
mov
sub
shlb
lcall
movsb
mov
fidivs
rclb
hlt
test
sahf
or
inc
clc
cli
cli
and
mov
mov
int
pushf
push
ss
dec
les
cltd
fistps
mov
mov
mov
pop
lahf
mov
les
addr16
pushf
rorl
and
dec
mov
pusha
xor
pop
cmp
aad
testb
inc
es
lock
test
push
inc
jmp
xor
sbb
jo
addr16
arpl
or
adc
divb
arpl
jmp
jecxz
inc
lcall
sub
loopne
xor
sub
cs
push
sub
pop
xchg
push
repnz
jne
jecxz
enter
and
call
or
jmp
xchg
pusha
mov
inc
imul
dec
dec
in
loop
push
out
adc
repnz
add
mov
loope
inc
scas
cmp
lcall
testl
mov
outsb
fwait
inc
mov
shll
add
popa
adc
jmp
sbb
call
jne
adc
mov
push
test
int
mov
push
pop
mov
pop
cmp
pop
lds
cmpl
push
xor
sub
push
cltd
cmc
loope
les
pop
stos
jle
push
mov
xchg
neg
lds
fadd
lret
mov
aas
mov
popf
dec
and
mov
lret
in
push
xor
xor
sarb
addr16
sub
ja
dec
dec
lds
mov
rorb
aaa
dec
in
fistl
cmc
add
mov
stos
sahf
inc
shlb
sbb
sarl
rcr
cmpb
dec
test
in
repnz
mov
dec
lock
xor
sbb
bound
mov
mov
xchg
push
lods
pop
pop
iret
bound
cmp
fwait
and
scas
iret
adc
cltd
pop
sbb
test
stos
xchg
sub
sub
sti
cmpsb
mov
push
testb
loope
cmp
test
cmpsl
iret
fldl
loope
mov
int
lock
out
and
pop
fisttpll
out
adc
in
push
add
push
sub
leave
lret
out
and
mov
je
repz
adc
pop
test
mov
jecxz
stc
cmp
mov
or
inc
lret
jns
bound
pop
fstpt
sub
cltd
and
call
imul
dec
dec
add
or
mov
jecxz
dec
addr16
jge
popa
dec
test
and
or
push
std
les
hlt
cli
int
cld
pop
sti
popa
mov
es
jle
aad
jle
mov
aas
mov
mov
sub
lret
inc
dec
mov
sbb
cmp
movsb
cmpsb
push
dec
mov
insl
cmp
jns
fcompl
lret
fcoms
add
pop
or
out
jmp
jb
sbb
pop
pop
scas
sar
jno
jg
rorb
sub
hlt
dec
in
or
movsb
push
adc
mov
mov
xor
and
push
mov
or
cmpl
or
or
xor
ds
xor
into
adc
pop
stos
ljmp
xchg
test
xchg
mov
fisubrl
push
mov
add
sahf
mov
insb
lea
jle
jmp
out
jne
movsb
push
pop
mov
jo
inc
or
cmpsb
mov
jp
fists
addr16
and
add
in
sub
movsl
xchg
js
test
lret
test
lea
bound
push
sub
rcll
xlat
adc
dec
xchg
pop
or
sbb
jg
pop
push
inc
fisubrl
xchg
movsl
arpl
pop
sbb
and
lock
inc
mov
push
or
hlt
daa
int
and
scas
adc
jnp
adc
xor
jae
out
mov
mov
sbbl
push
inc
pusha
and
leave
xor
and
mov
or
pop
mov
jbe
and
cmp
mov
xchg
push
push
cmc
rorl
xchg
push
in
cmpsl
out
lret
leave
push
dec
leave
mov
aad
mov
sbb
call
iret
or
sub
pop
aaa
inc
scas
inc
push
add
and
adc
push
cld
or
xor
jbe
test
repz
fsubl
stos
xor
stos
stos
stos
adc
sbb
movsl
xchg
add
mov
adc
xor
sar
adc
mov
loop
lds
pop
and
add
lret
fwait
push
mov
repz
jg
fisubl
inc
bound
push
popl
or
popa
mov
rclb
xor
out
adc
out
lret
cli
ret
shll
lock
sbb
jg
or
enter
fwait
stc
inc
cwtl
outsb
cltd
insb
adcb
sbb
jns
cmp
dec
call
clc
mov
mov
in
lret
inc
lods
add
in
in
xchg
sub
insl
inc
mov
jp
mov
aaa
inc
mov
lret
jmp
mov
sti
jmp
cmp
push
sub
dec
and
test
sub
mov
mov
inc
sub
loop
pop
pop
mov
xor
int
in
push
out
insl
sbb
adc
xchg
in
cmp
cwtl
jge
sbb
xchg
fbld
fsubr
dec
cmp
or
out
int
mov
cmp
cmpsl
sar
mov
and
adc
push
das
shrb
add
push
loope
cs
sbb
pushf
notb
repz
pop
mov
jmp
push
test
or
xchg
arpl
testb
movsl
lret
fidivrs
rolb
mov
pop
sar
scas
dec
gs
cmp
pop
xchg
int3
arpl
pop
push
fstps
push
das
mov
inc
cmpsb
cmpsl
cmc
xor
hlt
push
mov
flds
xchg
xchg
mov
xor
pop
ret
mov
pop
fucomi
xor
mov
lcall
shrb
sbb
scas
ficoml
push
adc
pop
or
adc
dec
jge
add
mov
sbb
insb
xor
xor
and
xchg
sbb
xchg
ret
pop
ffree
in
cmpsb
test
sub
add
inc
xor
or
pop
add
mov
out
xchg
jle
mov
shll
jo
inc
dec
insl
inc
sub
dec
notl
inc
mov
mov
dec
pop
movsl
dec
push
adc
pushf
jae
dec
xor
mov
into
fabs
daa
sbb
mov
push
shl
push
jecxz
out
adc
in
dec
cmpsb
xor
pop
push
push
push
or
arpl
mov
out
add
out
xchg
inc
sarb
xor
das
xchg
mov
cltd
and
lahf
mov
dec
mov
filds
and
rcrl
into
dec
in
sbb
xlat
das
or
cld
test
arpl
sub
mov
add
or
cmp
lahf
sub
dec
es
adc
add
xchg
cmp
gs
fidivl
jno
sbbb
or
cli
movsl
sub
push
push
fstpt
jecxz
dec
fcoms
push
mov
test
cmp
addr16
and
xchg
mov
dec
add
fs
and
adc
push
jg
jmp
add
xor
ds
pop
adc
xchg
xor
imul
jo
xor
dec
lcall
sbb
mov
or
dec
iret
sub
push
pop
sub
out
repnz
mov
add
jnp
pushf
inc
pop
repnz
in
dec
xor
out
push
mov
dec
pop
loopne
or
sbb
pop
pusha
imul
movsl
in
push
ja
movsb
shll
jl
lcall
mov
adc
and
adc
and
loope
in
pop
arpl
add
imul
and
sbb
pop
or
sub
int
aaa
push
lret
dec
add
movl
je
lods
js
sarb
add
push
mov
adc
mov
popf
adc
idivl
loop
mov
and
add
sbb
or
or
lea
add
repz
adc
xchg
mov
gs
xor
pusha
sarl
push
data16
mov
mov
and
stc
mov
mov
cs
jno
les
jle
shrb
movsb
jno
dec
cmp
mov
nop
fildll
pop
repz
mov
fstps
adc
push
mov
test
add
dec
jge
lock
sub
stc
mov
jmp
inc
clc
sbb
cmp
or
scas
xor
mov
inc
cli
mov
add
into
or
movsl
adc
lret
fisubs
shrb
cltd
pop
ficompl
pop
inc
xchg
pop
inc
push
and
push
test
push
jp
fwait
in
push
insb
cwtl
mov
add
test
xor
mov
cmp
shll
xchg
sub
cmp
iret
or
outsb
mov
xchg
movsb
and
add
or
into
jb
fs
inc
add
test
mov
in
arpl
nop
aam
pop
sti
lret
add
and
xor
inc
arpl
subl
cmpsb
or
jo
test
jae
mov
adc
sub
xor
es
in
xor
ss
push
int
int3
add
jecxz
movb
sbb
shlb
in
repnz
sub
pop
pop
jp
popf
or
xor
cld
jmp
cltd
aad
xchg
shr
aaa
mov
and
xchg
mov
mov
pop
andb
js
lcall
xor
xchg
sub
adc
jne
cmp
adc
pop
mov
cmp
shrb
cmp
pop
fnstcw
repz
lock
pop
es
sub
inc
or
mov
hlt
and
in
xor
mov
mov
xor
inc
mov
mov
fneni(8087
mov
rclb
lcall
movsl
pop
mov
xchg
adc
pushf
aad
xchg
mov
hlt
dec
jecxz
repz
inc
add
out
dec
popa
push
lock
jne
ss
cmc
int3
inc
lahf
movswl
lcall
push
add
sbbb
aam
or
int3
std
imull
mov
pop
stos
inc
std
lahf
sbb
out
cmp
fwait
mov
test
leave
mov
pop
cmpsl
stos
mov
loop
xchg
les
add
xchg
outsl
jno
or
ss
or
enter
iret
and
loop
push
out
mov
int3
es
mov
ret
inc
or
lea
push
cmp
and
ret
or
pop
iret
cmpsb
roll
add
cli
jecxz
cmp
push
aam
test
dec
jnp
rcrb
sbb
pop
imul
xor
dec
shll
fdivs
mov
insl
mov
sub
and
sbb
mov
pushf
ds
imul
shr
arpl
push
jmp
lds
xor
pop
mov
mov
dec
bound
test
insb
scas
add
fcoml
movsl
cwtl
out
push
out
popa
sti
add
xor
dec
add
xor
daa
adc
push
push
add
sub
sarl
jecxz
jbe
aaa
add
or
and
jge
jmp
mov
adc
imul
sub
push
pusha
push
cmpsb
and
sahf
sbb
lock
or
adc
mov
xor
xchg
aas
mov
ljmp
out
es
int3
fsubrl
les
pop
popa
cmp
xchg
mov
outsb
mov
jl
xor
mov
fldcw
adc
frstor
jns
jnp
int3
xchg
sub
fdivrl
into
jno
mov
dec
add
in
fwait
sub
fbld
add
add
iret
sar
mov
xchg
les
or
push
sar
xchg
addl
daa
push
dec
subl
push
jns
lea
cmp
out
pop
dec
fnstenv
mov
cs
cmp
push
dec
dec
lods
inc
jecxz
cmp
rorl
sub
arpl
insb
out
aaa
jne
or
aad
dec
inc
popa
push
lds
xor
imul
sbb
je
stos
xorb
divl
fdivr
cltd
loope
push
pop
mov
add
mov
and
popf
adc
arpl
xor
leave
jle
lret
push
fsubr
cmpsl
addr16
mov
cmpsb
inc
push
imul
cwtl
inc
lds
imul
lods
sbb
jg
insb
lret
xchg
int
lret
or
xor
in
sub
cltd
cmc
xchg
push
mov
out
fsin
pop
jne
xchg
shll
jg
push
mov
sub
jl
mov
xchg
push
inc
pop
fildl
rcrl
sbbl
ljmp
scas
scas
jmp
cmpsl
mov
xor
jnp
add
sub
xchg
mov
nop
fmul
mov
xor
ss
pop
iret
sbbb
movsl
pop
and
lret
roll
arpl
adc
dec
fisubs
add
add
testb
stos
cmp
mov
stc
test
ds
mov
push
scas
dec
imul
arpl
xchg
sub
mov
jp
mov
mov
xchg
jb
ss
adc
daa
and
int3
add
jb
pop
out
add
mov
lds
xchg
or
push
sub
cmp
sub
shrl
rcl
mov
adc
pushw
enter
out
xchg
pop
test
in
and
and
mov
outsl
inc
das
pop
mov
mov
mov
das
int
cmp
outsb
jp
ss
inc
pop
push
flds
push
xchg
mov
dec
add
add
pop
push
sub
jnp
sbbb
imul
jnp
cli
dec
bound
mov
es
data16
pop
aad
add
sbb
ljmp
jecxz
aad
push
fisttps
mov
leave
xchg
xchg
lods
pusha
push
pop
adc
jno
xorl
sbb
dec
testb
fadd
fistl
add
lcall
popl
loop
fsubl
cli
ret
lcall
mulb
out
nop
xchg
jge
dec
cwtl
pop
mov
xchg
dec
fnsave
jbe
mov
dec
int3
imul
push
es
push
jbe
out
shlb
inc
mov
lea
es
dec
jle
adc
leave
add
call
mov
lcall
sub
or
and
cwtl
xorl
push
sbb
daa
sub
stos
push
cs
scas
sbb
and
enter
inc
lea
fwait
jns
dec
imul
jns
cmpb
sbbb
ja
pop
inc
xchg
or
jmp
inc
js
lock
add
arpl
mov
testb
sbb
imul
or
sub
aam
sub
add
mov
pop
jne
dec
das
cmp
mov
es
cmpsl
mov
cmp
xchg
pop
fldl
xor
jl
sub
push
sarl
xchg
mov
lea
push
mov
scas
icebp
push
lret
lods
push
pop
icebp
cmpl
xchg
pusha
ret
inc
cwtl
adc
xchg
jle
cmc
dec
popf
bound
xchg
mov
pop
cmp
into
cmp
test
pop
test
mov
dec
pushf
jp
cmpb
push
rcr
inc
lock
dec
ljmp
dec
mov
push
push
aam
xlat
imul
fs
lret
xor
cs
ds
pop
in
adc
jmp
xchg
fwait
ds
fwait
inc
inc
xor
inc
movl
fisubs
jle
push
bound
mov
jno
cs
jmp
cmp
sti
and
fs
out
gs
mov
xchg
les
dec
mov
adcl
jnp
cltd
fsubs
inc
xchg
int
inc
hlt
cmc
push
add
sub
adc
dec
fadds
cwtl
out
in
jecxz
aam
jp
push
sbb
or
push
xor
cmp
inc
mov
sbb
xor
aas
xor
lods
mov
in
pushl
ja
inc
out
cli
inc
sub
jmp
stc
test
test
scas
je
outsl
xor
fs
imul
shll
adc
cmp
xchg
or
ss
xchg
xor
mov
loop
jmp
jns
lds
push
inc
out
lcall
xor
and
js,pt
mov
mov
ret
jmp
or
mov
dec
mov
addb
movnti
dec
adc
sbb
push
ljmp
out
mov
push
int3
xchg
pop
decb
mov
xchg
mov
inc
xchg
pop
mov
sub
and
jns
sti
and
data16
sub
mov
imulb
lret
shlb
and
mov
add
xchg
test
xchg
stos
ljmp
add
enter
mov
mov
xorb
ret
and
pushf
adc
pop
mov
dec
jbe
or
push
xchg
loop
mov
aas
mov
inc
call
loop
add
mov
or
inc
sub
cmpsb
push
fiadds
xor
pop
in
pop
mov
mov
and
out
leave
adc
lret
nop
and
stos
mov
push
js
sub
aam
test
sbb
and
out
aaa
jno
cmp
mov
push
in
jecxz
sbb
cmpl
xchg
and
jns
add
insb
cmp
ljmp
push
dec
mov
pop
pop
dec
jge
jns
mov
push
sbb
pop
lcall
jnp
add
and
lods
xor
xor
aas
and
aaa
add
pop
lret
aas
fisttpll
dec
or
into
nop
out
mov
aam
inc
xor
loope
daa
in
loopne
inc
jmp
and
test
cltd
mov
insl
fstpt
jbe
outsb
sti
inc
fwait
bound
in
rcrb
jecxz
insb
xchg
repz
icebp
mov
jo
fnstsw
jno
sub
int
hlt
mov
mov
aaa
and
mov
xchg
scas
mov
mov
bound
lcall
cmc
inc
aad
inc
and
dec
mov
cmp
push
int3
in
popa
fwait
mov
subl
loopne
lods
pop
mov
std
or
inc
jns
outsb
adc
push
mul
pop
jae
lret
mov
out
shll
out
add
lock
push
inc
daa
jmp
aam
mov
fstpl
mov
js
fimull
xor
inc
icebp
sub
xor
adc
xchg
loope
insb
les
les
in
xchg
stos
loope
rcr
mov
jmp
inc
mov
rorb
pop
mov
adc
cmp
sub
jb
je
mov
lods
cmpsb
pop
inc
xchg
pop
cmp
mov
push
sbb
adc
xchg
push
or
orl
int3
nop
or
roll
lods
inc
stos
arpl
pop
jnp
xchg
hlt
sub
or
pop
out
lea
add
data16
or
fmuls
or
movsb
add
dec
ds
loopne
or
mov
outsb
stos
outsl
sbb
xor
call
mov
rol
push
mov
mov
sub
sbb
insl
mov
lods
in
cwtl
cmc
xchg
call
mov
cmp
push
out
addr16
or
xlat
call
cmp
mov
pop
pop
aad
dec
cmp
xor
mov
xchg
sarl
sub
pop
sub
int
cwtl
push
sbb
clc
pop
test
push
nop
mov
sbb
xchg
inc
pop
mov
leave
int3
rcrb
or
dec
jl
mov
mull
dec
jge
and
pusha
int
das
mov
inc
pop
dec
nop
xor
mul
jg
jmp
pop
push
mov
movsl
xor
pop
sbb
repnz
ds
cs
sub
data16
jbe
push
mov
outsl
fld
mov
pop
int3
sbb
jp
pop
pushf
imulb
pop
int3
scas
inc
jg
jl
xlat
push
out
fiaddl
orl
cmp
sbb
push
cld
sub
adc
lahf
jae
sub
mov
mov
jb
push
mov
xor
and
fsubrl
mov
inc
and
dec
icebp
cs
in
and
push
cmovnp
xor
sub
mov
adc
enter
pop
mov
dec
jne
ret
sarl
out
add
mov
testl
cmp
xor
mov
bound
cmpsl
xor
xor
incb
scas
add
cmc
add
mov
push
mov
inc
ss
cmpsb
xlat
out
pop
sbb
sbb
jno
push
adc
out
leave
mov
cld
popa
jl
popa
pop
jl
gs
xchg
jg
mov
mov
test
adc
aas
cmp
xchg
mov
mov
aaa
push
dec
push
inc
adc
call
lea
sub
add
mov
xchg
mov
sub
addb
sub
and
mov
jg
loope
repnz
xor
jo
jg
lret
popf
add
inc
ror
add
fisubrs
daa
dec
js
cmpsb
in
and
adc
mov
ss
andb
repz
xlat
mov
push
int
rcrl
dec
inc
fisubs
jmp
mov
inc
sbb
push
cli
movsl
mov
shl
sahf
lods
idivl
ss
std
rcll
incb
mov
inc
mov
test
mov
lock
loopne
push
fnstcw
shll
cmp
mov
fldt
movsl
and
aaa
sbb
je
jns
mov
pop
movsb
mov
jle
gs
jg
jmp
sti
shll
push
xor
pop
into
adc
bound
loop
cltd
in
xor
pushf
test
ja
sbb
adc
mov
mov
into
scas
xchg
inc
aaa
push
lfs
shlb
mov
push
loop
sbb
push
mov
repz
lods
test
addr16
lret
jne
jle
and
xlat
lea
in
push
dec
pop
sarb
fwait
or
fucom
push
nop
sub
xor
cwtl
pop
mov
jl
mov
or
int
fistpll
jl
mov
mov
fistps
popa
nop
or
jno
dec
fisttpl
test
xchg
sub
mov
xchg
sti
xchg
and
test
and
jmp
test
pop
fistl
jle
add
ss
in
xchg
cmp
ja
sbb
jecxz
cmc
xchg
jge
gs
or
xor
or
test
shlb
mov
popl
and
arpl
and
inc
xor
mov
mov
in
sub
ss
push
les
loop
aad
mov
lcall
cld
cs
dec
lahf
sub
jp
add
or
adc
xchg
mov
xchg
lret
cmp
jecxz
lea
cmp
xchg
and
scas
cmp
aad
jl
xor
rorb
nop
jnp
or
mov
es
xchg
scas
jb
in
lods
imul
add
aas
hlt
cmpl
sub
call
mov
roll
cmc
xor
loope
cmpl
je
fsubl
insb
mov
mov
xor
pop
std
testb
leave
or
and
push
mov
sahf
rcll
rcll
les
mov
cmp
in
pop
pop
mov
pop
jb
cmp
xchg
fldl
sub
in
ja
mov
aaa
les
mov
cmp
push
lahf
insl
jmp
push
arpl
inc
aam
das
and
xchg
push
dec
jecxz
rorb
pop
inc
cli
adc
pop
popf
imul
imul
test
jp
pop
test
mov
xor
push
pop
cmp
xor
pop
xchg
or
xor
test
pop
test
out
out
pop
and
pop
dec
cmpl
jl
mov
jnp
mov
movsl
inc
repnz
xor
dec
sahf
mov
pushf
mov
js
sarl
icebp
push
cmpsb
add
sub
and
dec
xchg
adc
sti
in
xchg
xor
inc
jnp
lret
dec
int
aas
fstl
cld
mov
cltd
and
into
or
pslld
dec
aad
or
add
pop
inc
xor
dec
mov
jns
and
das
add
and
and
xchg
or
inc
mov
imul
mov
mov
pop
mov
std
ss
inc
rcrl
fstl
pop
mov
outsb
out
ds
stos
or
cmpsl
push
aam
xchg
jnp
xchg
push
sbb
pop
or
hlt
mov
rcrb
mov
xchg
inc
sub
mov
pop
jo
out
int
mov
test
aad
jne
ret
jecxz
fistpl
repnz
xor
int3
jb
sub
sub
inc
pop
or
push
mov
mov
shlb
movsb
imul
mov
push
mov
aam
mov
iret
adcb
xor
adc
daa
adc
out
imul
mov
arpl
jb
ljmp
add
mov
add
lods
xchg
in
pusha
in
and
loop
jecxz
lret
push
aaa
push
xor
call
int
cmpsb
les
addr16
and
xor
imul
push
or
icebp
stos
inc
fildl
push
mov
mov
andl
xor
push
and
push
shll
sub
out
in
mov
dec
xor
fs
lock
rcrl
out
ret
jl
pop
stc
and
aaa
push
pop
insb
sub
ja
stos
cmp
sub
push
gs
xorb
cmpsb
push
icebp
int3
cmp
outsl
jge
mov
xor
aad
out
fdivrl
sbb
mov
cmpsl
xor
push
dec
push
pop
outsl
lahf
rclb
cmp
mov
mov
sub
and
adc
out
je
or
dec
push
fmull
xor
jo
imul
mov
sbb
scas
adc
xchg
jp
adc
decl
sub
cmp
aaa
push
push
in
ljmp
push
xchg
mov
push
fsubr
fstpt
xor
andl
cmp
push
push
cmp
ret
lret
frstor
flds
jns
cmp
sub
jge
shl
adc
addr16
push
pop
iret
out
ds
jno
mov
fld
add
dec
cmp
pusha
addb
and
xor
inc
and
add
adc
imul
rorb
mov
jne
in
jnp
push
les
add
add
sub
push
imul
sub
js
pop
or
pop
scas
mov
fistpl
xchg
pop
jno
xchg
xchg
or
loopne
and
leave
jl
clc
and
ret
cmp
adc
daa
movsb
mov
stos
sbb
xor
jnp
loop
mov
int
shll
sub
or
xchg
pop
fs
inc
or
push
inc
je
mov
add
je
or
je
xchg
arpl
add
inc
enter
jne
pop
sub
pop
and
pop
cmp
sbb
add
and
jnp
inc
cmpsl
pop
pusha
out
and
inc
test
lods
mov
aad
cmpsb
push
sbbl
js
dec
dec
test
and
daa
xor
dec
popa
push
sub
dec
int3
arpl
pop
push
ja
pushf
push
lds
icebp
add
cmp
xchg
pop
or
repz
sub
out
jo
popf
sahf
mov
idivl
repnz
stos
cmc
cmp
xlat
push
push
xlat
mov
lret
adc
cmc
stc
push
dec
sub
lock
repz
xchg
mov
int
out
mov
add
decl
adc
daa
push
push
push
inc
pop
cmp
mov
mov
inc
pop
test
sub
add
outsl
test
movsl
dec
dec
mov
xor
mov
pusha
xlat
jecxz
mov
adc
icebp
add
mov
add
xchg
mov
mov
loopne
mov
movsb
add
inc
out
adc
mov
push
mov
dec
cltd
xchg
dec
fisttpl
pop
ret
push
add
push
subb
lret
mov
fisttpll
jmpw
loop
xchg
outsb
inc
aad
insb
testl
mov
icebp
jo
xor
cmpsb
lret
mov
call
test
repz
aas
cmp
sbb
fisubrs
adcb
pop
std
xor
mov
push
das
mov
sub
xor
or
jnp
call
sbb
cmc
jo
mov
in
sbb
stos
or
push
xchg
and
insl
push
push
jo
iret
push
mov
dec
mov
or
pushaw
roll
sub
andps
nop
cwtl
imul
and
pop
or
filds
in
cmpsb
mov
rcr
mov
test
xchg
fisubl
adc
frstor
popf
lock
pop
test
ja
sti
imul
xorl
xchg
mov
mov
lahf
dec
incl
xor
ret
cmp
out
xchg
mov
xchg
mov
xor
inc
out
pop
pushf
sbb
cmp
sti
rorb
loope
and
test
gs
push
xchg
and
mov
mov
in
pop
mov
fs
dec
adc
flds
mov
fmuls
repz
mov
lret
jo
xor
ja
sub
mov
jbe,pn
js
lock
cwtl
in
fs
fcomps
adc
or
js
out
out
inc
cli
decl
dec
push
dec
lcall
inc
xchg
add
subw
nopl
out
or
int3
mov
mov
cmp
test
adc
cmp
push
xchg
inc
mov
push
push
je
xor
test
push
nop
ret
xchg
xor
int
xor
rol
in
shll
push
loope
cmpl
sbb
sar
mov
scas
mov
xchg
sub
sti
nop
addr16
mov
lods
pop
inc
sbb
jge
cmp
ja
and
das
lahf
mov
std
push
in
into
fwait
shrl
into
leave
inc
dec
sti
negl
int3
adc
out
lret
popf
in
addr16
test
xchg
out
add
das
jnp
fwait
mov
je
xlat
fwait
insb
enter
shl
cmp
cmp
mov
xorb
mov
cmp
adc
xchg
pushf
pop
movsb
icebp
mov
mov
pop
xor
mov
cmpsl
jle
std
scas
jmp
xor
xor
add
jl
xchg
aaa
xlat
mov
dec
fs
sub
enter
adc
xlat
shrl
ja
fisttpll
dec
ud2
call
out
add
out
inc
sbb
jnp
fidivrs
test
sarl
rol
insl
cltd
xor
inc
test
adc
dec
iret
pop
lock
mov
ljmp
add
insb
mov
mov
dec
dec
je
cmpsb
cmp
movsl
jl
adc
sub
es
lea
cld
sub
scas
dec
pop
test
add
xchg
xor
inc
jno
mov
sub
or
in
fmul
outsb
rorb
cmp
outsb
lcall
lds
test
roll
mov
xor
add
xchg
jne
push
adc
mov
jbe
das
stc
lret
ds
mov
pop
push
neg
xrelease
fidivrl
les
add
in
jns
mov
in
push
jle
adc
add
jle
pop
ljmp
sbb
in
mov
mov
push
loope
dec
addl
cmp
out
push
jb
mov
mov
out
sub
or
repnz
int3
jmp
movsb
fdivr
xor
ret
aam
js
rcrl
adc
lods
or
inc
add
lcall
dec
or
int
out
cwtl
add
lret
adc
cmpsb
sub
or
mov
cmc
sbbl
mov
clc
imul
ret
mov
dec
xor
jge
cli
push
ror
inc
push
out
lea
mov
mov
inc
ror
cmc
arpl
jl
mov
jne
movsl
or
add
ret
pushf
inc
shr
loop
in
cmp
orl
push
lds
jbe
loope
lret
lahf
xchg
fimuls
in
je
push
xor
pop
outsl
shll
sti
and
mov
add
fldcw
std
fcmovb
test
addr16
dec
jl
push
jns
sub
pop
mov
mov
push
and
bound
sub
das
out
stos
movsl
cmp
mov
es
sahf
test
loopne
scas
sub
xor
mov
imul
sub
sti
repnz
es
daa
xchg
cmpsb
xchg
imul
and
lcall
sub
icebp
fcompl
repnz
sbb
test
and
std
add
aaa
cmp
pusha
outsb
push
jg
add
sahf
scas
jo
in
aam
fimull
jmp
pushf
or
sbb
test
and
pop
cwtl
sbb
add
mov
inc
sbb
xor
dec
shrb
adc
sub
add
mov
pop
sbb
pop
mov
ds
mov
aaa
ficompl
orb
daa
jno
fstps
insb
and
in
aas
repz
add
dec
push
clc
cltd
ljmp
shrl
mov
clc
jl
ret
adc
cmpsb
fnstenv
fstpt
daa
jne
lds
jns
nop
gs
sub
push
test
sbb
enter
inc
jecxz
cmp
push
stos
add
andl
stc
xor
sub
inc
mov
pop
sub
mov
stos
daa
inc
cmpsb
cmc
pop
cld
cli
add
into
ficoml
cltd
add
out
rclb
cli
test
mov
or
fidivrl
mov
into
outsl
adc
pop
jo
ret
bound
sti
and
push
mov
lret
jg
adc
sbb
xchg
push
or
ret
inc
adc
in
jbe
and
or
cld
and
push
scas
and
dec
in
add
scas
in
sub
xchg
enter
xor
push
fistpl
add
bound
sub
lcall
dec
in
lods
jbe
add
cmp
pop
aam
in
jg
stos
es
cmp
stos
jo
cmp
pusha
idivl
ret
stc
bound
adc
pop
and
xor
and
or
popa
mov
and
test
insl
test
push
popa
imul
lds
enter
lods
sbb
cmp
into
push
outsb
jns
adc
dec
adc
push
xchg
inc
inc
negl
mov
rcll
inc
sbb
pop
dec
out
fldenv
jb
inc
and
cmp
popf
push
mov
jecxz
xchg
inc
in
addr16
adc
leave
sti
xchg
stc
push
ds
sbb
jp
movsb
or
push
xchg
loop
mov
xchg
xchg
aas
mov
xchg
pop
sbb
mov
cld
rorl
aad
xchg
push
repz
loopne
sub
mov
mov
roll
rclb
in
mov
dec
sti
out
xor
jmp
add
daa
pop
mov
sti
and
mov
pop
and
push
cmc
ret
mov
mov
pop
call
jae
rorl
sub
fidivrl
lahf
inc
loope
icebp
jge
sti
pop
jecxz
je
cmp
faddl
fstl
or
mov
scas
fisttpll
cmp
movsl
sbb
or
cmp
inc
xor
inc
add
jl
mov
mov
and
mov
adc
or
les
pusha
in
push
fisttps
arpl
test
movsl
add
popa
scas
sbb
pop
cmc
push
mov
je
dec
jo
fstps
test
dec
sub
mov
arpl
cmc
mov
mov
je
fistps
dec
jl
es
adcl
and
inc
insl
pop
push
imul
jo
xor
and
test
jg
or
cmp
or
sub
sbb
cmp
xor
test
call
shl
xchg
lahf
lods
fldenv
inc
lret
xchg
jp
mov
push
lret
and
mov
fisubs
sbb
fxch
sbb
lock
mov
push
cmpsl
inc
out
xchg
and
insb
mov
cmp
pop
mov
jnp
std
mov
lods
divb
mov
mov
call
scas
sub
pop
aaa
enter
shr
rorl
push
xlat
mov
ds
idivl
adc
imul
cmpsb
fldenv
mov
in
xchg
add
push
cld
xor
sub
jns
jb
mov
cli
cwtl
dec
xor
insb
outsb
fstl
xor
xchg
xchg
mov
xor
lods
sub
jle
or
add
subb
and
xor
rcl
sbb
or
rcrb
nop
movsl
sub
jge
mov
cwtl
xchg
jecxz
push
sub
xchg
mov
mov
sti
xor
outsb
fistpll
cmpl
inc
cwtl
testl
hlt
xchg
xor
mov
pushl
mov
cld
lods
mov
inc
cmpsb
cld
cmpsl
mov
cmp
ret
pop
cltd
mov
aas
dec
inc
enter
fisubl
mov
xchg
fcmovnb
fsubrs
in
pop
cmp
xchg
rcl
ja
push
into
xchg
adc
adc
test
mov
rorl
and
scas
mov
dec
sub
jnp
out
and
nop
inc
push
sbbb
cmp
cmp
pop
jp
push
xchg
pop
jle
cmp
pop
xor
xor
pop
fcomip
push
pop
imul
ret
das
outsb
or
fstp
mov
cwtl
lahf
insb
std
mov
add
xor
jnp
jp
cmp
test
inc
pushf
daa
lahf
ret
imul
push
sbb
push
mov
lcall
sahf
jecxz
mov
or
inc
jno
push
dec
push
and
adc
movsl
mov
sub
call
lcall
mov
mov
cmp
mov
mov
fbstp
fcoml
xchg
add
pop
addb
lret
sub
and
mov
dec
cmp
stos
adc
and
arpl
cmp
insl
xor
cli
lds
and
xchg
and
cmc
out
pusha
push
inc
xor
shr
outsw
int
pop
xchg
aaa
mov
nop
mov
mov
lock
xor
ja
push
je
pop
enter
push
dec
jae,pn
testb
test
mov
pop
pop
pop
fistps
lods
mov
repz
lcall
fisttpl
testb
nop
inc
sbb
aaa
dec
stos
jo
fmulp
int3
add
out
bound
sub
test
pop
out
jle
int
or
fnstcw
std
ror
stos
cld
cmpsl
xchg
jb
imul
daa
xchg
repz
test
fsts
add
jae
lock
mov
push
mov
push
std
adc
and
fistps
pop
in
xchg
pop
loopne
push
xor
mov
or
jo
test
popa
shrb
mov
dec
movsl
lods
insl
or
les
jno
les
in
lcall
vpaddq
pop
push
jb
dec
and
xor
mov
pop
lock
js
arpl
mov
jl
mov
jo
jge
pusha
ret
insl
mov
sarb
or
stc
inc
or
sbb
lret
pop
mov
insb
popf
pop
and
cld
sub
sbb
jp
inc
rcrb
hlt
cmpl
mov
inc
cmp
stos
add
mov
xchg
jecxz
inc
loopne
or
push
pop
popf
popa
jb
lret
lods
jl
ljmp
bound
gs
jne,pt
xchg
push
mov
mov
int3
leave
sbb
push
pop
mov
inc
mov
cmp
pop
jns
out
mov
xor
push
fstp
sub
popa
xor
dec
push
cmp
and
pusha
mov
and
les
rcl
loopne
cwtl
xchg
fwait
es
push
mov
std
outsl
sbb
fisubrl
es
push
fisubs
shrb
mov
sub
sub
ficoms
xrelease
mov
jl
je
shll
pop
pop
jmp
jp
lods
and
xchg
jg
lret
aam
and
jmp
das
cld
xor
xchg
es
add
icebp
jge
dec
pop
outsl
pop
ja
movl
test
cmp
jo
push
out
jp
mov
mov
mov
mov
loop
inc
mov
or
ljmp
sbb
bound
adc
adc
mov
andl
cmp
dec
mov
imul
pop
xchg
xor
jle
cmp
push
loop
cmp
jb
test
sub
and
test
xor
daa
fsubl
ds
and
push
cmp
xchg
jno
lock
add
cmp
sbb
mov
cmp
fisubrs
fnstenv
stos
arpl
sub
pop
cmp
add
jb
loop
test
jle
arpl
mov
push
adc
test
fstpt
daa
stos
or
stos
sti
addl
addr16
dec
stc
pop
fucomi
pop
jno
test
orl
pop
xor
cmpsb
fldcw
mov
and
and
das
repz
test
sbb
pop
in
xchg
sub
mov
add
inc
gs
loope
inc
push
sbb
xchg
sbb
lret
xchg
xchg
sbb
pusha
out
insl
mov
dec
mov
jp
lock
xchg
out
or
adc
lret
ret
xlat
jo
fsubs
add
sbb
subl
lock
cmpsb
lds
pop
repnz
dec
and
mov
dec
cmp
fwait
mov
push
mov
jne
lods
lock
push
inc
int
imul
jno
xchg
dec
mull
cmp
and
or
cmpsb
leave
inc
mov
das
jbe
pop
inc
cwtl
dec
pop
out
test
mov
out
out
nop
or
pop
pushf
pop
adc
mov
in
test
and
mov
or
xlat
mov
push
xchg
in
pop
push
sub
sub
sahf
and
test
stos
gs
fwait
sub
xchg
in
mov
add
adc
out
sti
fistpl
outsl
dec
adc
adc
inc
sbb
jo
or
pop
push
inc
das
mov
adc
sbb
mov
jne
mov
cmp
cld
jne,pt
mov
or
fwait
rdpmc
pop
ficomps
jo
or
subb
enter
sti
xor
in
add
xchg
movsl
jb
sar
jmp
mov
mov
mov
addb
cmpsl
das
int
icebp
cmp
push
push
rolb
sbb
arpl
loop
dec
jge
hlt
mov
aam
outsb
pusha
jb
out
movsl
xchg
fwait
into
pop
mov
xchg
dec
ror
dec
jbe
stos
inc
jecxz
or
jns
xchg
dec
xor
sub
sbb
gs
in
mov
aad
pop
icebp
fcmovnb
in
fsts
pusha
out
hlt
lret
push
fcomp
test
xlat
dec
pop
sti
inc
repnz
data16
sbb
lods
out
icebp
add
push
je
loop
cwtl
dec
cmp
mov
in
xor
sahf
rorb
pop
cmp
jmp
adc
xchg
out
lahf
pop
pop
inc
pushf
in
jno
sub
test
mov
xlat
dec
mov
adc
push
imul
imul
pop
mov
and
mov
addr16
loopne
idivb
xchg
ret
ljmp
lea
test
or
adc
jo
lock
adc
fwait
scas
mov
fdivs
repnz
add
scas
mov
pop
mov
adc
dec
pop
out
and
insl
push
mov
adc
inc
dec
pop
dec
cltd
cmpsb
pop
adc
repz
arpl
fimull
push
xchg
add
test
ds
xor
jge
loop
aad
inc
jmp
xchg
lock
leave
cltd
subl
hlt
lock
mov
ss
repz
adc
mov
or
dec
bnd
mov
scas
popa
push
adc
jecxz
add
xchg
les
stos
shr
lret
and
jo
sub
add
xor
pop
ftst
push
xchg
les
fs
sub
jno
cld
cmc
mov
push
adc
int3
cmp
xchg
int3
mov
addb
incb
and
jle
cmpsb
pop
adc
push
mov
xchg
lock
in
sub
inc
lret
jne
aam
in
push
lret
rolb
mov
mov
xor
subl
mov
divb
sub
mov
mov
push
jmp
inc
mov
into
jmp
jne
xchg
fwait
adc
popf
cmp
pusha
daa
arpl
adc
and
xor
jl
xchg
cwtl
dec
ljmp
pop
aad
stos
jp
sbb
data16
pop
lods
inc
jns
hlt
pop
es
arpl
iret
ds
lcall
mov
lret
loop
jle
sub
inc
outsl
jecxz
adc
fadds
sbb
int3
inc
inc
mov
lock
xchg
fidivs
lcall
adc
mov
xlat
fwait
adc
pop
push
mov
lcall
out
jno
dec
fbstp
arpl
xor
aad
cmp
push
jbe
pop
mov
sahf
movsb
jno
enter
xor
shr
jecxz
mov
rclb
in
pop
mov
int3
in
out
lcall
test
xor
and
mov
aam
mov
popf
rcrb
cmc
mov
xchg
cmovne
push
mov
add
mov
push
fists
in
and
in
stos
movsl
icebp
scas
jno
sub
sub
push
fnstenv
gs
movsl
mov
popa
sub
jge
repz
test
sbb
lea
das
repnz
ss
out
mov
int3
push
arpl
enter
cld
xor
mov
pop
fwait
std
dec
or
seto
cs
mov
and
fwait
in
scas
adc
js
and
or
pusha
fdivs
gs
pushf
and
mov
add
mov
lea
gs
jns
mov
mov
call
shll
xchg
mov
lods
sbb
mov
cmp
lret
mov
push
mov
pushl
adc
fnstenv
fld
xchg
cmpsl
lods
cmp
cmp
mov
xlat
bswap
hlt
lret
push
cmpsb
sub
jl
jbe,pt
out
push
push
imul
rol
imul
jmp
popf
adc
sub
jl
mov
repnz
lea
shl
mov
jnp
and
pushf
mov
out
inc
add
outsl
into
in
int
stos
addr16
add
inc
dec
int
add
inc
jle
jno
and
cmp
dec
or
or
fadds
gs
xor
xor
in
popf
leave
xchg
xor
inc
adc
jno
cs
sbb
mov
or
je
push
cmpl
pop
adc
call
xor
or
mov
call
adc
mov
aam
mov
pop
aas
cmpsb
pop
cmp
ss
adc
test
push
cs
adc
and
add
pop
lret
adc
es
ss
xorb
js
mov
mov
bound
sub
repz
push
nop
cld
out
std
gs
hlt
inc
cmpsb
testb
lock
aad
add
jl
add
xor
les
scas
cmc
mov
xchg
push
imul
xlat
ret
imul
jmp
cmpsl
dec
sbb
in
mov
push
outsb
fdivs
xorb
cmp
out
int3
or
push
and
or
mov
clc
or
dec
enter
dec
cmp
mov
fnstsw
dec
mov
in
lods
sub
scas
mov
sub
es
xchg
jnp
in
inc
add
sub
mov
sti
filds
push
push
imul
cmpsl
dec
in
shlb
and
push
out
bound
test
addl
add
mov
jmp
push
mov
out
popf
adc
or
add
sbb
and
add
jne
test
adc
cli
or
add
das
ljmp
test
cmpsl
popa
mov
push
decb
adc
xor
clc
sbb
or
push
add
pop
lahf
cmpsb
add
icebp
xchg
inc
push
int3
push
jns
inc
mov
dec
sbb
or
pop
gs
or
je
mov
out
jae
cmp
arpl
fwait
ret
sub
popf
cmp
hlt
and
fs
dec
xlat
push
fdivs
xchg
scas
xor
lret
xchg
sbb
loopne
sbb
cld
sub
subl
add
fimull
push
jbe
in
sub
ss
add
mov
jl
xor
sbb
adc
enter
mov
jl,pt
jns
mov
push
leave
leave
jo
sbb
fisubrs
sbb
push
mov
jmp
mov
pop
sbb
add
xlat
push
mov
jns
push
fdivr
jne
xchg
bts
sbb
push
adc
sbb
or
pop
inc
fstps
mov
mov
inc
dec
jns
xor
mov
sarl
push
push
test
cmpsb
arpl
fs
lahf
jl
cmp
leave
daa
cmpsb
neg
xchg
dec
dec
jnp
push
sbb
push
dec
addl
gs
lea
sub
push
push
xorl
aaa
shlb
mov
fscale
mov
aad
mov
sub
pop
out
sbb
testb
out
cli
fdiv
popf
or
loop
scas
push
mov
fsubrl
fsubrs
push
mov
jbe
add
pop
daa
std
sub
jge
mov
xchg
xor
xlat
push
sub
movsb
js
dec
cmp
sub
test
test
dec
addb
adc
stc
mov
fdivrs
push
jb
test
lcall
das
fdivs
xchg
les
movsl
push
pop
pop
loope
mov
add
cmpsl
push
in
lret
insb
aad
sbb
lock
dec
icebp
sbb
xchg
pop
aam
rcrb
mov
cld
mov
jg
sub
jl
mov
fstl
inc
lods
cwtl
call
out
adc
test
mov
sbb
outsl
xor
sub
mov
cmpsl
addr16
shrl
mov
cmp
push
xor
testb
ljmp
movsl
idivl
adc
filds
fwait
add
add
pop
lods
mov
je
imul
data16
in
shld
shlb
js
ljmp
movsb
mov
push
pop
pshufw
ja
push
pop
sub
pop
sub
stc
mov
std
mov
cmp
and
mov
xchg
sub
pop
fistpll
aas
adc
setns
jnp
ljmp
call
xor
mul
stos
ucomiss
or
data16
das
mov
in
mov
cmp
or
popf
add
loope
cltd
or
jb
or
out
push
in
or
mov
repnz
jae
out
and
push
pushl
rorb
add
orb
ljmp
cs
jae
repz
push
test
lock
inc
inc
insl
and
ds
icebp
jne
dec
int
cmp
pop
test
add
adc
mov
out
mov
mov
inc
pop
xchg
mov
jbe
sub
test
fstpt
jbe
mov
adc
loope
call
adc
movsb
xchg
push
outsb
or
rorb
iret
in
stos
adc
out
lcall
loopne
pop
shr
in
push
sub
xchg
sbb
adc
popa
sbb
test
fs
sbb
imul
sub
daa
std
cmp
imul
dec
push
repz
add
rcl
xchg
mov
jae
aad
dec
adc
mov
insl
daa
jmp
pop
imul
scas
dec
xlat
jno
shlb
lods
xchg
test
aaa
push
fsts
xlat
aad
push
dec
mov
inc
push
xchg
int
dec
sub
repnz
mov
sarb
dec
mov
and
inc
roll
out
es
mov
ret
icebp
mov
sbb
or
xchg
popf
popf
cmp
lret
out
sub
xchg
lods
sti
incb
sub
or
outsb
movl
sub
pop
add
mulb
sub
cld
lahf
adcl
inc
xor
lods
lea
loope
xchg
and
xchg
cmc
push
scas
jbe
mov
mov
jae
add
popa
rcll
lret
icebp
roll
xchg
loop
pop
mov
ljmp
fnsave
ja
mov
sub
or
xor
push
repnz
sub
imul
adc
dec
es
bound
js
push
mov
mov
sub
dec
call
fidivrs
xchg
xlat
addr16
inc
in
fdivrp
adc
add
lcall
ror
xchg
mov
pop
lahf
je
lods
dec
adc
and
pop
aad
xor
adc
jne
mov
pop
ss
jbe
xlat
inc
nop
movsl
faddl
xor
and
mov
or
adcl
orl
jp
dec
dec
or
xchg
pushf
xchg
out
fldt
cmpsl
xor
cltd
xchg
cmpsb
push
mov
adc
popa
cwtl
xchg
mov
rcrb
jg
inc
loope
push
adc
lahf
mov
ret
ss
dec
mov
rcl
sub
out
or
aam
cli
dec
js
inc
inc
sbb
cmp
and
out
sbb
stc
push
fidivs
cwtl
lcallw
faddp
xor
xor
xchg
fadds
pushf
sub
mov
and
or
add
or
ja
xor
push
cmp
or
mov
es
in
cmp
pop
inc
or
add
jno
out
adc
cmp
xor
outsb
cld
jnp
sub
loop
loope
test
or
jle
cmpsb
push
in
add
outsl
idivb
jno
mov
in
loopne
repnz
cld
out
mov
pmaddwd
cmp
mov
or
xchg
gs
sub
jnp
popf
test
arpl
fdivrs
rcl
mov
sub
ss
pusha
add
lea
xor
sub
bound
into
clc
mul
xlat
jbe
dec
adc
mov
lds
aam
subl
xchg
sahf
xchg
mov
repz
inc
in
push
and
push
movsb
adc
test
inc
subl
je
mov
or
inc
push
gs
adc
mov
cmc
and
or
inc
jecxz
frstor
jmp
outsl
dec
fstpt
inc
mov
and
bound
ret
aam
sti
push
in
push
outsb
xchg
stos
pop
cmpsl
sub
and
sbb
fmuls
xor
and
and
bnd
dec
rorb
pop
dec
mov
jecxz
out
inc
into
lea
shlb
rcrl
inc
cli
repnz
lods
xor
push
ljmp
jno
jmp
jns
inc
and
insl
int3
add
dec
push
jns
mov
idiv
ds
and
aaa
jb
jecxz
shll
out
cltd
mov
xor
jl
or
dec
les
pop
xlat
push
lock
insb
adc
jg
dec
jge
mov
xor
mov
jmp
insb
data16
jge
mov
and
xchg
xor
gs
adc
inc
std
or
sub
dec
sbb
pop
movsl
es
mov
cwtl
mov
sub
scas
and
outsb
lahf
rcll
mov
pop
push
lcall
nopl
imul
fstl
sub
jmp
pushf
pushf
push
popf
loopne
adc
add
mov
mov
lods
inc
mov
incl
xchg
inc
cmp
fists
test
jle
mov
pushf
imul
sbb
call
mov
scas
nop
push
xor
jb
rcl
aad
adc
rorl
out
imul
add
inc
faddp
aam
jno
pop
hlt
or
push
fisubrl
out
xchg
or
dec
outsb
inc
pop
or
sbb
packssdw
xchg
dec
js
cltd
sub
enter
nop
mov
add
mov
bound
call
fwait
shrb
push
cmpsb
push
cli
dec
cmp
repz
jle
js
mov
mov
xchg
and
mov
ljmp
pop
loope
rorb
push
outsb
xchg
icebp
xchg
push
inc
lock
or
xchg
dec
gs
scas
ret
cmp
push
jbe
push
jne
xlat
movsb
shrl
sbb
or
movsb
push
mov
sbb
xchg
cmpsl
ret
cmpsl
in
aaa
inc
xchg
add
mov
or
sbb
sbb
outsb
movsb
add
sub
sbb
into
or
dec
pop
cwtl
daa
and
hlt
pusha
push
call
adcb
push
mov
sti
mov
mov
pusha
mov
pop
lea
jl
dec
cs
sub
aam
add
mov
mov
subl
test
loop
lods
pop
sub
movsl
jg
mov
sub
xor
sbbl
xchg
xor
mov
cmp
jae
icebp
mov
or
jnp
fldl
xchg
das
lahf
mov
pop
ds
clc
and
mov
mov
stc
add
and
stos
add
cmpsl
adc
dec
cmp
ret
xchg
imul
inc
mov
test
inc
sbb
jns
dec
scas
jge
jmp
popa
test
test
jle
fwait
mov
nop
shrb
inc
int3
xor
enter
ret
stc
dec
imul
rorl
inc
xchg
ljmp
aas
jbe
xchg
fcomps
lods
adc
arpl
mov
or
lods
shll
add
insb
notb
cmp
dec
jle
adc
add
xchg
mov
jl
jb
mov
outsb
push
or
outsl
sbb
and
lret
and
aas
cmp
pop
rcl
mov
bnd
push
or
pop
push
flds
and
out
dec
cmp
fisubl
es
sbb
inc
or
sub
iret
icebp
loop
aam
mov
ficomps
xor
lret
sub
xor
lret
adcb
pushl
cmpsl
nop
mov
shrl
dec
cmc
pop
and
psubw
push
div
xchg
push
mov
or
pushf
data16
sahf
sub
mov
add
int
subb
xor
shll
dec
enter
loope
sub
faddp
rorl
mov
std
bound
mov
mov
imul
sbb
dec
and
pushf
add
jns
cld
push
mov
adc
jge
jae
arpl
imul
pop
inc
fwait
jmp
mov
add
add
gs
xchg
ror
lcall
pop
jg
mov
shlb
stos
pop
xchg
dec
ss
jne
push
mov
ret
iret
or
xor
adc
ja
push
jae
mov
fldl
in
in
dec
dec
mov
mov
test
lds
sbb
dec
pop
mov
sub
sub
aaa
add
int
ret
ficompl
lds
test
in
push
push
push
test
into
pusha
cmpl
jb
bound
stos
inc
adc
divl
in
out
pop
mov
and
call
adc
stos
sub
pop
insb
int
jp
push
mov
mov
aad
xchg
mov
pop
pushf
stc
xchg
push
xor
idivl
pop
mov
lcall
push
lock
mov
imul
pop
jmp
cmp
mov
mov
mov
push
rorb
incb
xor
and
mov
in
inc
push
xchg
fwait
dec
xor
inc
xlat
ret
cld
sub
clc
inc
in
pop
lret
ret
sti
mov
mov
jno
dec
sbb
pop
lods
stos
into
sbbb
fcmovnb
mov
dec
inc
inc
popf
mov
in
rol
lea
das
pop
mov
in
xor
in
sub
add
popf
xlat
outsb
and
gs
loop
jecxz
xchg
adc
idiv
sbb
or
scas
push
xchg
mov
repnz
sti
inc
mov
das
cmp
nop
sahf
popa
in
ret
int3
pop
and
movsb
fisttpl
push
lret
push
jae
sbb
fsubs
cmp
cmp
push
test
pop
ficoms
pusha
or
fsubrs
jne
movsb
and
mov
dec
add
fs
sarb
aam
sub
cli
dec
inc
ds
jg
dec
inc
sub
bound
xor
imul
add
jnp
das
repz
mov
test
cmp
add
scas
dec
sbb
pop
popa
sbb
clc
jle
mov
push
jecxz
movsb
out
sub
xor
dec
sbb
into
mov
add
pop
ret
dec
aam
mov
mov
scas
cmp
stos
mov
mov
frstor
dec
sbb
cwtl
dec
loope
push
sub
or
fwait
sbb
mov
sbb
aam
lea
test
imul
jle
je
pop
lret
jecxz
insl
pop
sub
inc
pop
stos
push
mov
and
lds
mov
fists
or
sbb
jb
stos
lea
fwait
repz
lret
out
mov
mov
rcll
sbb
mov
shrl
addb
out
jb
and
loopne
vaddpd
iret
jge
cmpps
push
jmp
stc
ret
aaa
push
and
in
xor
cmpsb
sar
dec
adc
mov
testb
iret
mov
shr
xor
pushf
inc
inc
insl
push
loope
outsb
mov
fimull
sahf
aam
scas
test
mov
adc
cld
add
enter
addl
and
rolb
fisubl
out
push
cmp
test
call
sbb
clc
fbld
sarb
cmp
out
rorb
bound
mov
cld
cmc
add
mov
push
xchg
mov
pop
mov
or
cwtl
imul
push
inc
out
stc
icebp
pop
loopne
lods
adc
pop
ja
rcl
fisubrs
cmpsb
scas
in
adc
lds
enter
movsl
sbb
cmc
loope
fbld
mov
setb
dec
ret
or
sbbl
xor
pop
rolb
add
jg
jle
loop
ret
jno
push
xchg
in
dec
mov
xchg
ret
fprem
xlat
xchg
aas
mov
inc
fmul
push
sti
dec
hlt
inc
push
mov
lret
cmovne
out
push
aad
pop
lahf
lret
sub
sub
or
insl
pop
jmp
neg
inc
sbb
xchg
push
hlt
adc
mov
scas
ss
rcrb
and
sub
ss
lods
pop
adc
cmp
inc
and
mov
push
dec
or
iret
xchg
stos
movsl
pop
or
hlt
cmpsl
mov
mov
mov
xlat
cmpsl
mov
and
jmp
and
dec
in
ljmp
iret
jo
int
das
mov
hlt
cmp
jo
cmc
sub
ljmp
movsl
int3
out
js
rcl
xchg
movd
lods
lret
icebp
inc
and
inc
out
lds
dec
jns
jns
nop
aas
int3
xor
dec
pop
inc
cmp
xor
out
rcrb
movsb
mov
stos
mov
mov
outsb
cmp
int3
inc
adc
lea
jmp
or
mov
stc
adc
add
into
dec
clc
aaa
test
jno
outsl
insb
in
mov
inc
fwait
shll
into
sub
data16
push
lods
jo
xchg
pop
inc
inc
je
or
xorl
inc
sti
inc
sbb
ret
or
jno
call
inc
jno
outsb
cmp
notl
outsb
push
icebp
roll
pop
inc
negl
mov
test
movb
add
ficomps
and
movsb
dec
les
adc
push
inc
cltd
push
dec
call
shll
jbe
mov
fwait
adc
mov
inc
and
rorb
mov
popa
fmuls
mov
push
mov
xor
gs
sbb
dec
push
sbb
bound
cwtl
sub
sbb
gs
and
out
push
cmpsl
push
pop
adc
je
mov
add
xchg
jmp
jo
cmp
mov
mov
pop
xchg
add
lcall
mov
lcall
daa
mov
roll
mov
mov
fsubrl
loopne
repnz
mov
mov
sti
lret
out
dec
imul
sahf
xorl
fisubs
xchg
sbb
loopne,pn
inc
cmp
push
enter
scas
push
push
lret
jne
and
inc
bound
xchg
loope
xor
fwait
pop
cmp
lock
aad
mov
lock
test
cmp
subl
push
es
es
or
and
xor
xchg
mov
cwtl
int3
sub
lret
sbb
mov
xlat
or
or
call
push
call
or
out
in
inc
mov
stos
std
es
cs
dec
arpl
data16
xchg
flds
stc
pop
clc
sbb
iret
stos
imul
cmp
mov
int3
inc
mov
xor
xchg
adc
mov
icebp
mov
ljmp
cld
es
xor
mov
adc
js
into
xor
stos
cltd
shll
in
cli
pop
sub
mov
and
ds
gs
adc
les
sbb
mov
stos
stc
xchg
cmp
inc
fwait
lea
hlt
push
dec
cmpsb
mov
psrld
pop
push
dec
jbe
test
repz
fcmove
ja
pop
test
sti
ficompl
sbb
test
jmp
or
push
or
dec
out
push
cbtw
push
popa
mov
fisubrl
fwait
in
test
add
adc
imul
cli
arpl
sbb
xchg
push
or
ds
dec
lcall
leave
dec
arpl
add
lods
mov
fstl
lds
lods
inc
sbb
jg
jno
cltd
or
mov
js
jo
int3
jge
filds
rcl
xor
fistps
jecxz
mov
jle
out
sbb
imul
xchg
jmp
nop
shl
or
jae
mov
mov
loope
and
push
mov
stos
pusha
push
cmp
cmp
inc
notb
xor
mov
gs
sub
xchg
xor
loopne
pop
jle
and
clc
xchg
sub
lock
jp
pusha
inc
rolb
pop
xchg
xchg
lret
fisubl
dec
mov
dec
xor
or
sub
out
mov
push
rcr
xor
adc
test
int
push
dec
in
sub
dec
jne
adc
rorb
out
cmpsl
xor
mov
add
mov
inc
in
fisubrs
mov
jp
push
pop
xor
ljmp
push
and
pop
dec
stos
sbb
and
ljmp
jbe
jp
cwtl
lods
pop
mov
rorl
stos
push
call
push
mov
clc
int3
fs
shll
jp
sub
dec
inc
pextrw
scas
repnz
pushf
aam
int
out
mov
push
xchg
xlat
or
dec
mov
in
inc
dec
sbb
fcompl
loope
dec
dec
mov
ror
mov
sar
scas
xor
fiaddl
add
add
fwait
pushf
ja
test
xor
cmp
dec
add
ret
clc
mov
aaa
cmp
mov
mov
divb
cmpsl
addl
mov
xor
and
xchg
clc
fcompl
lds
lahf
lret
fisttpl
xlat
or
inc
imul
in
cmp
xchg
pop
mov
sahf
inc
sub
push
mov
jle
inc
sbb
mov
jae
jbe
jbe
pop
lahf
mov
andb
int
jne
sub
jp
jb
xchg
xor
test
cwtl
push
leave
mov
push
mov
shlb
inc
xchg
lock
lds
push
xor
mov
jmp
test
cmpsb
cmc
xchg
rcl
sbb
adc
sub
sub
add
push
dec
sti
inc
jnp
push
adcb
pop
dec
int3
cmp
jns
push
fimuls
push
out
jne
cltd
das
stos
subb
loope
jbe
insl
jp
movb
push
and
cmp
push
push
cmp
cmpsb
dec
testl
and
pop
mov
inc
or
mov
daa
cmp
inc
in
sub
sub
mov
cmpsl
xchg
pop
fisubrl
sbb
dec
mov
cmpb
or
and
push
or
pop
insl
adcl
adc
lods
cmp
jp
inc
outsb
adc
push
pop
lods
scas
loope
mov
add
sub
int
push
and
testb
push
or
subl
int3
push
mov
mov
xchg
fnstcw
mov
cmc
jecxz
addr16
addl
inc
adc
je
push
mov
cmpsb
xor
in
push
cmc
in
pop
fadds
push
xchg
or
cmp
xor
dec
fldl
nop
lods
scas
stc
add
inc
dec
or
dec
pop
xchg
lea
lret
push
std
roll
sbb
out
pop
lds
int
repnz
sarl
jge
pop
dec
popa
es
lock
xor
test
sbb
in
cmp
dec
sbb
sub
xor
xchg
lahf
dec
dec
enter
ret
sbb
inc
jne
push
jno
hlt
mov
dec
xchg
xchg
dec
ds
cld
les
and
sbb
xor
mov
jecxz
out
orl
je
add
mov
pop
inc
and
mov
or
sub
aaa
pop
aam
add
stos
adc
loop
fcomps
inc
cs
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
call
mov
outsl
scas
xchg
mov
and
jno
lods
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
rolb
mov
andb
sbb
int3
mov
mov
mov
add
repz
sarl
mov
lahf
xorl
fdivrl
lods
xchg
mov
inc
mov
xchg
lea
das
dec
xchg
mov
cmpsb
fdivs
shlb
or
pop
sub
gs
loop
test
lock
call
jmp
and
fstpt
out
lods
lea
dec
xchg
stc
mov
cmpsb
cmp
shlb
xchg
inc
shlb
orb
fstpl
leave
mov
loope
cld
test
ds
int3
mov
fcompl
lret
int
fadds
shll
lods
xchg
mov
xlat
cltd
inc
or
fsubrl
xlat
fcompl
xchg
mov
outsb
outsl
xlat
fstps
xchg
mov
fcompl
xchg
mov
fcompl
mov
mov
in
popf
shll
lods
pop
int3
mov
fcompl
xchg
mov
fmull
xchg
mov
pop
neg
jno
scas
xchg
mov
loope
shll
lods
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
mov
not
cwtl
shll
lods
xchg
cmpsl
fsubrs
xlat
fmul
xchg
xor
enter
outsb
outsl
xlat
cld
cwtl
rcll
rcr
outsl
xlat
mov
xchg
repz
jmp
outsl
lods
xchg
mov
fdivrl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
fcompl
xchg
mov
cwtl
jno
mov
mov
mov
mov
idivb
inc
mov
mov
sti
or
fdivrs
test
mov
cmpsl
call
out
mov
cmc
js
push
jno
jge
enter
xor
jo
mov
stos
or
mov
rcl
cmpsb
test
mov
les
jb
jb
dec
test
scas
mov
in
xchg
data16
xchg
loop
adc
or
xchg
xchg
lea
xchg
add
shll
adc
lea
out
movsb
cmc
mov
cltd
dec
ds
dec
ja
insb
xchg
dec
loop
neg
cmp
rclb
push
mov
inc
sbb
mov
add
pop
notb
sub
dec
outsl
add
mov
or
shrb
xor
cmp
mov
jmp
or
inc
notl
adc
fisttpll
fwait
mov
cmp
orl
mov
arpl
push
xchg
mov
xchg
jnp
out
dec
inc
inc
xchg
aas
imul
and
add
dec
and
cmp
mov
mov
dec
cmp
lcall
add
push
jp
jno
adc
xor
jle
shll
cmc
sub
adc
xchg
cmp
mull
andl
sahf
inc
inc
and
subb
hlt
push
fnstsw
enter
and
out
mov
cmp
adc
mov
popa
int3
xchg
scas
adc
test
jo
ljmp
jne
dec
or
adc
push
filds
sub
and
call
xor
adc
push
sahf
jo
push
shll
ss
sub
lods
int3
test
jmp
fs
mov
ret
es
addr16
lcall
add
lret
sbb
ljmp
sahf
sbb
jb
add
pop
nop
arpl
jns
add
addr16
dec
dec
cmp
stos
xchg
into
fwait
je
push
ljmp
inc
sahf
rorb
or
add
test
cmpsb
int3
push
inc
pop
stos
outsb
into
arpl
pop
cmp
in
fidivs
gs
pushl
adc
push
adc
add
sarb
mov
mov
mov
lock
test
roll
cmpsb
sbb
clc
mov
loope
push
inc
sub
mov
negb
jge
test
lods
mulb
arpl
daa
pcmpeqw
mov
mov
sbb
dec
jne
pop
out
jb
les
add
inc
pusha
iret
addr16
insb
rcll
das
mov
cmp
pusha
mov
sbb
out
nop
adc
xchg
mov
inc
pushf
ja
jecxz
jbe
add
mov
mov
insl
mov
pop
ss
sbb
jnp
dec
cs
outsb
es
jno
das
mov
or
inc
icebp
add
movsl
clc
lret
mull
addr16
jns
cltd
hlt
mov
mov
mov
or
xchg
xchg
les
cmp
cmp
cmp
jns
scas
fnstcw
shl
cmpsl
jns
lahf
xor
add
lret
mov
stc
jge
es
xchg
nop
add
cmp
lds
mov
test
jmp
pop
fcomip
add
dec
fmuls
shlb
outsl
xchg
push
aad
lret
xor
xchg
add
sti
cld
push
sub
adc
jmp
in
pop
adc
cmpsl
or
add
jmp
pop
insl
jecxz
jno
test
cmpsl
cmpsl
jmp
loop
movsl
out
fidivrs
lret
outsb
int
lret
xor
out
imul
pop
push
adc
pop
out
inc
int
test
call
xchg
int
nop
cli
lods
inc
aam
push
sub
push
push
sarb
adc
shl
jmp
lea
mov
stc
sub
lcall
push
cmp
and
sbb
mov
popa
fisubrl
push
pop
jo
xor
decb
mov
rcl
andl
icebp
jnp
push
adc
mov
andb
je
pop
dec
jecxz
sbb
clc
out
xor
push
add
ljmp
lods
push
pop
ljmp
xlat
inc
adc
mov
jno
xchg
loopne
push
popf
jg
sti
sub
fisttpl
cli
movsl
cmovbe
push
lea
ret
and
cmp
stc
fs
ljmp
push
hlt
adc
pop
and
je
push
or
mov
out
inc
aam
mov
andb
and
lods
xchg
and
lea
sub
xchg
sub
lods
movsl
into
sbb
cltd
jl
iret
lods
cmpsl
dec
xor
sbb
out
addl
stc
icebp
xchg
xlat
inc
ror
aas
jge
add
pop
nop
mov
cmp
mov
lods
mov
imul
imul
sarl
inc
lods
xchg
je
inc
jl
mov
movsb
pop
jb
and
sub
inc
imul
rorl
push
inc
mov
pop
jg
sub
add
inc
xor
rcrb
cmpsl
aaa
aaa
dec
insb
lret
mov
repz
cmp
movsl
cmp
dec
adc
ja
and
in
mov
mov
orw
jmp
and
pop
dec
pop
jecxz
pop
in
xchg
fistpll
divb
push
std
adc
arpl
in
pusha
sbb
mov
inc
lds
inc
or
and
push
mov
cmp
adc
jl
jecxz
cmpsl
mov
pop
shrl
push
ret
lock
pop
mov
cmp
ret
mov
dec
cmp
mov
imul
jbe
lcall
icebp
insl
mov
cmpb
mov
ficompl
movsb
lods
xor
xchg
mov
test
xor
xor
push
lock
xor
ds
inc
xchg
xchg
and
jo
sbb
daa
push
cld
stos
arpl
bswap
frstor
orb
cmp
mov
mov
cmp
mul
lret
jle
js
mov
loop
mov
outsl
mov
push
ret
push
iret
inc
in
or
xor
push
xlat
test
push
xchg
aaa
sub
movsl
daa
mov
push
and
imul
and
mov
ret
mov
mov
xlat
mov
inc
mov
xchg
das
dec
fcomps
mov
dec
lahf
loop
imul
cmpsb
mov
ds
jge
shll
xorl
adcb
pop
mov
jecxz
xor
push
and
sbb
in
icebp
xchg
push
mov
mov
add
adc
and
mov
pop
pop
add
cmp
mull
ds
in
imul
jne
cmp
mov
pop
stos
lods
repz
rorl
adc
cmpsb
or
xor
fcom
sbb
dec
pusha
xchg
movsb
mov
rolb
inc
in
les
fldl
add
ret
adc
push
mov
int3
leave
or
xor
adc
inc
das
inc
xor
int
add
and
lods
std
sbb
pop
repz
cwtl
pop
je
lcall
jno
cmpsl
cmpsb
cli
mov
movsl
stos
cltd
inc
imul
inc
pop
add
daa
adcl
cltd
scas
xchg
xchg
push
insl
adc
clc
push
mov
lds
test
cmpl
test
shr
pop
aam
and
call
aas
test
cmp
xchg
xor
fstpt
pop
push
dec
jo
scas
jg
mov
adc
sub
sub
paddsw
xchg
je
xor
sbb
xor
adc
fimull
outsl
test
jg
mov
repz
loope
nop
insb
push
mov
lahf
sub
push
cli
iret
jg
data16
decl
inc
push
insl
nop
push
push
cmp
dec
sbb
orl
push
inc
cwtl
in
enter
call
add
adc
mov
adc
add
popf
int3
dec
xchg
xchg
push
push
sahf
jae
push
or
cs
or
jmp
pop
andl
or
add
pop
andb
mov
or
inc
fmull
mov
popf
lret
xor
cld
inc
jg
insl
adc
movsb
js
or
push
aaa
and
or
or
ficomps
int
test
sbb
lret
popa
mov
sbbb
test
and
pop
repz
out
push
push
mov
mov
je
gs
mov
popf
std
push
jns
jg
push
cld
aas
adc
jecxz
lcall
movsb
mov
pop
call
jb
mov
jo
cmp
jg
int
cmpsl
shlb
add
test
adcl
add
shrb
push
ficoml
jae
or
mov
or
int
xor
je
mov
add
mov
mov
movsl
mov
data16
outsb
loope
fisttpll
push
setno
jmp
into
ret
pop
xchg
fstl
imulb
pop
popf
inc
sbb
repz
mov
lcall
cli
mov
ja
mov
or
or
mov
cmp
mov
or
stos
test
orl
mov
sbb
xrelease
jmp
xchg
les
sbb
cs
push
pusha
jle
test
fstl
aaa
pop
ret
imul
fdiv
mov
mov
mov
mov
ss
out
adc
aaa
sbb
sbb
into
mov
jb
aaa
bound
insl
arpl
mov
fidivrl
and
push
push
les
or
cmc
aaa
mov
add
ja
inc
testb
dec
cmpsb
sbb
sar
jecxz
xchg
dec
cmp
sbb
into
mov
nop
clc
sbb
gs
test
mov
mov
arpl
cmp
push
add
popl
pop
fcoms
sbb
imul
mov
sub
lcall
ss
aad
adc
add
jne
ret
sbb
je
dec
insb
mov
call
out
xor
jns
test
push
sub
aam
or
mov
stos
push
and
ror
pop
mov
inc
sbbb
ret
in
popa
mov
add
mov
xor
or
xchg
sti
out
enterw
xchg
xchg
subb
in
fadd
jae
and
pop
pop
or
lahf
jnp
in
mov
pop
les
roll
pop
insb
loop
sbb
rolb
dec
pop
and
cmp
sbb
mov
in
mov
bound
mov
arpl
and
mov
sub
sbb
sbb
ja
xchg
mov
jnp
imul
push
jge
mov
mov
push
rclb
sub
xor
xchg
test
inc
pop
inc
inc
fisttps
xchg
jbe
xchg
into
fs
data16
mov
sar
fdiv
std
jge
imul
pop
sahf
cli
xor
mov
push
sahf
andl
mov
std
ss
repnz
sub
movsl
push
scas
enter
xchg
loope
cmpsb
ljmp
je
mov
and
les
ret
xchg
cmpl
push
call
sbb
leave
cli
push
loope
and
or
xlat
mov
leave
outsb
dec
outsl
cmc
fsubrl
cmpsl
mov
fidivrs
push
jo
sub
arpl
sbb
in
das
pop
outsl
mov
in
daa
loopne
js
pushf
xor
test
stos
add
cs
ljmp
add
mov
mov
inc
dec
test
rcr
int
in
mov
imul
iret
repnz
andl
add
pusha
add
or
push
sub
and
outsb
stos
les
pop
jl
rclb
cmp
mov
orb
inc
cmp
ss
and
adc
mov
sbb
adc
js
sbb
cmp
fs
lret
out
xchg
mov
in
dec
in
inc
push
lret
imull
and
adc
pop
inc
sbb
mov
and
sub
pop
ja
call
in
jno
mov
aad
mull
daa
xor
xchg
scas
and
pop
pop
daa
sbb
lret
cwtl
nop
popa
inc
data16
push
add
mov
addr16
sbb
pop
and
add
inc
dec
lock
sub
inc
cmp
mov
mov
jp
in
xchg
jp
sbb
call
xor
jne
sbb
mov
stos
jb
inc
adc
and
mov
outsb
dec
mov
lods
dec
icebp
jle
xor
dec
mov
es
cmp
push
mov
fcoml
add
rorb
jmp
cmp
pusha
cmp
call
xchg
xor
ret
out
int
addl
hlt
sub
pushaw
das
popa
mov
cmp
mov
xor
rolb
into
clc
in
pushf
inc
or
adcb
inc
inc
iret
imul
in
adc
push
mull
sub
jecxz
mov
nop
or
jne
pop
or
mov
aam
ja
cmp
xchg
lea
xchg
push
or
push
lods
sbb
jg
mov
adc
loop
fdivrl
xchg
cmc
add
test
mov
cs
fsubr
pop
pop
sub
dec
pop
cmpsl
pusha
mov
push
mov
test
in
mov
scas
xor
xchg
stc
adc
push
les
das
mov
dec
push
inc
adc
pop
stos
fcmovnb
xchg
push
push
mov
stc
arpl
cmc
cmc
or
shrl
mov
data16
test
pop
imul
cmc
push
cmp
xchg
mov
fsts
mov
repz
cmp
add
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
