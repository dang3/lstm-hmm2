sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
xchg
addr16
repnz
int3
and
popa
sahf
lret
imul
jmp
and
imul
dec
bound
scas
jne
insb
enter
push
add
popf
sbb
repnz
push
mov
add
add
mov
dec
mov
fsubrl
xchg
scas
sarb
push
cwtl
mov
mov
into
add
out
lods
jne
jmp
movsl
cmp
sbb
or
mov
sbb
sub
xchg
adc
andl
nop
scas
iret
jae
cs
dec
pop
xor
push
test
outsl
xchg
fnstsw
mov
jo
pop
jae
jge
sbb
mov
inc
divb
pusha
xor
xchg
cmp
pop
fcmovnb
movsb
fs
outsl
push
hlt
push
fwait
lcall
jecxz
jp
lock
out
shrb
push
push
inc
jge
and
les
mov
jp
mov
cmp
fsubl
add
mov
roll
mov
mov
xor
mov
mov
jl
lahf
cmp
sbb
iret
jp
xor
frstor
add
push
nop
adc
dec
pop
push
data16
add
aam
lahf
or
and
daa
adc
ret
aaa
and
adc
ss
lret
test
loope
push
sbb
push
dec
cltd
imul
stos
out
xchg
xchg
mov
add
fistpl
leave
int
orl
and
ja
cmp
popf
xchg
mov
sbb
mov
add
nop
sbb
cmp
imul
sbb
jecxz
loopne
push
gs
test
inc
cmpsb
xchg
sub
ss
pop
sub
int3
dec
je
adc
cld
in
arpl
call
inc
inc
les
xor
jnp
jmp
test
enter
or
shlb
repnz
out
inc
popf
mov
sbb
insb
inc
and
lods
push
dec
dec
pop
lcall
mov
cmp
insb
ss
out
xor
pop
sahf
fwait
loopne
inc
cmpsl
shlb
fsub
aam
mov
decl
fsubl
cmpsl
loopne
clc
pop
les
xor
jae
add
mov
and
or
add
cmpl
cmp
addr16
or
pop
out
dec
call
mov
lahf
sbb
push
xchg
data16
call
aaa
push
icebp
dec
pop
lock
test
pop
mov
sub
xchg
mov
add
repnz
inc
enter
jmp
adc
flds
pop
dec
bound
push
sbb
push
push
arpl
mov
xchg
out
loopne
dec
inc
outsl
fdivl
aas
mov
inc
add
xchg
popa
mov
leave
inc
in
xchg
cmpb
frstor
ret
movsb
mov
dec
jg
lock
scas
cltd
jmp
mov
add
and
std
inc
popf
push
jbe
addr16
mov
mov
mov
push
inc
sub
and
inc
popf
lock
inc
mov
and
shrb
cwtl
frstpm(287
call
cmpb
inc
frstor
fdivrs
inc
insb
adc
add
lret
or
xchg
sub
mov
repz
insl
push
fdivs
bound
iret
cli
or
stc
dec
insl
cmpsb
xchg
adc
jae
xchg
in
fadds
divb
cmp
popl
or
dec
mov
xchg
inc
gs
jae
mov
cld
sti
sarb
sbb
inc
stos
loop
push
repz
jle
dec
xchg
daa
adc
lret
je
sbb
adc
pop
repnz
xchg
adc
dec
dec
and
mov
in
mov
call
push
insl
sarb
inc
pop
mov
pop
ss
xchg
jns
hlt
ljmp
adcb
ljmp
out
testl
inc
cmpsl
jge
je
mov
mov
addb
adc
mov
outsb
mov
jg
mov
aaa
cmp
pusha
int
out
xchg
jo
pop
sub
mov
test
mov
sub
add
mov
jp
jne
jns
imul
mov
dec
fistl
mov
push
sub
sbb
pop
movsb
lock
cmp
lock
pop
lods
mov
cli
jno
jb
mov
jne
addl
lret
mov
jl
add
cld
sub
stos
mov
cld
lods
pop
mov
cmp
sbbl
popf
mov
pop
dec
out
shl
aas
sti
cli
inc
pop
addr16
pop
leave
cmp
testl
or
cmc
sub
xchg
dec
xor
nop
or
sbb
adcl
sbbb
mov
lods
insb
sub
ja
adc
lahf
xor
and
xchg
sub
js
lods
dec
in
dec
aad
lret
pop
mov
xchg
movsb
pushf
adc
sbb
push
dec
sub
xchg
std
dec
movsb
pop
mov
out
inc
and
dec
out
xor
push
dec
lret
mov
cld
movsl
cmpsb
fisubl
mov
lock
adc
mov
mov
mov
jo
or
push
enter
inc
popa
test
adc
cmpsl
loop
cld
or
push
ljmp
mov
adc
bound
and
cmpl
inc
cltd
mov
dec
das
ljmp
jl
jno
hlt
jae
sbbb
fdivrl
and
sub
ror
cltd
pop
es
enter
or
fisubrs
mov
fs
push
push
cmp
mov
out
xchg
into
mov
sti
rorb
sbb
decl
inc
inc
mov
test
cmp
adc
rcrb
xchg
push
stos
xchg
mov
notb
push
mov
mov
pop
jg
ds
roll
inc
jg
xchg
hlt
pop
loope
sbb
test
jne
adc
mov
pop
in
and
jg
repz
push
aas
es
push
nop
movsb
js
das
push
sbb
lea
xchg
sbb
or
cmp
add
mov
lea
in
fs
ja
test
cmp
xchg
sub
xor
jb
test
test
mov
or
int3
mov
lods
add
dec
in
xchg
sar
sbb
or
test
or
nopl
in
flds
mov
shrb
adc
jne
xchg
lods
push
dec
aam
pushf
xlat
xor
std
mov
mov
mov
ret
out
rorb
sti
je
push
jbe
fsts
sti
and
popa
dec
jl
or
aad
or
cmp
lea
ret
cld
xor
jmp
sub
and
or
sahf
shrb
enter
shll
adc
imul
insb
movsb
mov
popa
inc
std
pop
jno
pop
test
rorb
mov
les
sbb
jb
cli
int
adc
bound
lcall
imul
aad
scas
addr16
or
sub
push
cmp
xor
cmc
aam
xchg
daa
iret
mov
mov
testb
hlt
in
cli
push
popa
in
popa
aad
stos
xchg
push
sbb
and
ds
push
lods
int3
fidivl
and
and
mov
jnp
arpl
add
adc
xchg
cwtl
inc
jo
dec
bound
int3
mov
fdivrs
ds
xor
aaa
cs
push
jb
mov
test
imul
jno
xchg
inc
call
bound
mov
push
add
mov
dec
push
out
and
cmp
xchg
inc
rcrl
shll
sub
mov
andb
cmp
xchg
mov
and
lods
int
jo
xchg
data16
sub
xchg
push
ret
test
jae
adcb
xchg
ficoml
daa
repz
adc
int
add
ss
mov
push
pushf
sbb
inc
xor
mov
add
push
pop
mov
mov
jecxz
mov
push
gs
add
pop
rep
cmp
repz
in
popf
rol
mov
push
ret
cltd
adc
mov
push
mov
sub
repnz
or
movsb
xchg
jecxz
fwait
push
out
cmpsb
cmc
adc
push
cmp
pop
cmp
fisubrl
add
cmpsb
adc
sbb
mov
test
or
xor
xchg
aam
sbb
or
sub
dec
jecxz
or
daa
inc
mov
lock
mov
outsl
lret
adc
in
inc
xchg
cmp
pop
add
sbb
mov
in
aaa
jg
xor
test
sbb
sub
sub
in
dec
inc
mov
cs
push
mov
call
add
mov
je
insl
into
jecxz
push
jge
ficoms
or
jne
jnp
mov
adcb
push
inc
pop
imul
xchg
fisubl
ljmp
pop
push
data16
es
adc
pop
inc
sub
lock
xchg
push
cmpsb
mov
or
mov
lods
mov
mov
jge
into
lcall
sahf
into
pop
add
subl
in
xchg
or
jl
rclb
in
xor
xor
xor
push
cmc
test
pop
rcl
lcall
arpl
loope
out
stos
nop
inc
add
mov
or
sbb
cmp
mov
rolb
push
pusha
jns
js
sbb
lods
push
loopne
pushf
gs
and
data16
xchg
out
and
sbb
ljmp
sbb
mov
inc
pop
fwait
mov
out
icebp
or
jb
iret
leave
cmp
repnz
pop
and
lcall
and
or
sbb
ljmp
decb
push
ds
or
loopne
mov
inc
push
loopne
mov
insb
ret
xchg
fistpll
sbb
jecxz
xlat
call
icebp
xchg
sbb
lock
iret
jo
stos
or
adc
xchg
push
cmp
pop
out
push
shrb
sbb
sbb
pop
push
push
leave
adc
jns
mov
and
outsl
mov
repz
push
xchg
and
xor
push
out
aam
dec
inc
jmp
jae
push
or
scas
scas
pop
fsubrl
add
daa
jno
shrl
mov
nop
jne
xor
pop
lret
xchg
lret
mov
jecxz
pop
gs
inc
inc
sbb
add
stos
sbb
lahf
out
mov
stc
sub
sub
and
pop
mov
cmp
insb
lret
movsb
test
js
dec
in
dec
or
fdivr
mov
ljmp
mov
pusha
lds
std
stos
mov
je
xor
aam
insb
ljmp
cld
xor
xlat
push
shrb
pusha
nop
gs
call
scas
inc
loopne
stos
jno
out
jle
insb
jg
test
leave
sub
mov
cs
mov
sbb
lret
mov
sub
loopne
ret
and
add
enter
lods
add
or
pop
mov
dec
insl
mov
xchg
jnp
xchg
xlat
push
mov
rorb
xlat
flds
sti
dec
pop
or
dec
push
inc
ret
dec
dec
mov
xlat
inc
or
fdivs
scas
cld
mov
ss
imul
mov
xchg
fmul
xor
aas
inc
xchg
push
lods
stos
adc
test
dec
jns
push
insl
xor
mov
mov
cltd
hlt
imul
sbb
cmpsl
aad
daa
fildll
in
call
mov
mov
daa
pop
fcmovnu
scas
pslld
inc
mov
rcrl
add
sub
insl
pop
rcll
jb
add
ljmp
rcl
push
mov
std
fimuls
inc
pop
lea
cmp
or
stc
arpl
aad
outsl
into
rolb
lahf
js
push
cli
dec
xor
add
sbb
mov
xchg
cmp
sarl
add
push
jns
or
jno
sahf
data16
cmp
icebp
nop
mov
mov
rorb
rclb
scas
stos
enter
ljmp
out
insb
addr16
rcrb
or
xchg
mov
bound
int
into
scas
rorb
mov
setne
cmc
mov
arpl
or
mov
popa
xchg
inc
in
mov
cwtl
mov
cmc
lods
cmp
push
mov
push
add
pop
xor
xor
or
bound
cmpsb
repnz
mov
jecxz
add
mov
and
mov
sub
ffree
sbb
xlat
das
xor
xchg
inc
mov
inc
jg
stc
loop
movsb
imul
je
xor
xchg
es
jecxz
inc
mov
out
lahf
adc
cmpb
fisttpll
aas
aaa
lock
xor
or
pop
or
rorl
les
or
and
pop
mov
and
sub
pop
scas
lahf
sbb
push
mov
mov
dec
pop
dec
loopne
test
mov
out
into
popa
in
in
ret
add
lcall
jg
mov
adc
push
arpl
fnstcw
pushf
sbb
mov
hlt
ret
mov
sti
dec
xchg
test
push
sbb
cmc
mov
xlat
mov
aaa
cmpsb
push
sbbl
movsb
push
jne
inc
js
dec
cmpsb
arpl
xchg
gs
aaa
je
cmc
movsl
daa
sbb
mul
mov
call
cmp
inc
cltd
add
fcmovnu
fisttpll
pushf
mov
mov
cmc
mov
mov
jecxz
ret
fcomps
test
test
inc
cmpsl
xchg
jno
sbb
xchg
dec
mov
rcrl
ficomps
inc
int3
out
test
in
cmc
push
mov
sbb
adc
fwait
out
push
xchg
cmpsb
pop
loope
test
shr
ret
inc
addr16
aaa
imul
lret
pop
mov
push
push
lods
cmp
mov
xchg
mov
int3
or
add
ds
and
push
cmpsl
mov
lods
add
xlat
pop
aas
push
mov
repz
leave
cmp
gs
mov
mov
dec
push
push
rol
add
adc
push
in
iret
add
ja
push
push
ss
add
mov
adc
and
mov
fwait
sbb
pop
mov
xor
add
push
push
nop
sti
adc
sub
inc
adc
fbld
mov
fstps
ss
jo
daa
mov
cmp
sbb
aad
push
pop
loope
rolb
cmc
nop
pop
push
mov
and
adc
push
neg
adc
imul
out
pop
stc
sub
xchg
push
testb
gs
nop
xchg
in
cmpsl
sbb
rorb
sbbl
in
pop
jb
cmpsb
pop
jge
xor
dec
pop
jl
enter
xor
xchg
rolb
push
inc
adc
jae
mov
repz
adc
sub
aam
or
or
bound
add
xor
push
aas
leave
inc
inc
out
jl
xor
popa
mov
xor
lods
sbb
and
into
in
cmp
das
xor
shr
mov
jg
popa
orl
loope
ds
incb
addr16
lea
push
cmp
leave
neg
movsl
xor
mov
sub
mov
test
popf
adc
or
div
int
add
repnz
sbb
das
cmc
subl
adc
test
loope
mov
pushf
insl
outsb
add
mov
or
sbb
popf
orb
and
jne
std
xchg
mov
loope
imul
mov
jl
xchg
andb
adc
arpl
shll
xchg
jne
fmull
nop
push
mov
addb
mov
mov
mov
sbb
add
aas
sub
xchg
and
loopne
dec
lret
mov
jge
dec
xor
mov
fdiv
mov
stos
fldcw
pop
mov
add
cmp
lret
fisubrs
je
stc
or
mov
push
xchg
test
push
lcall
pop
sbb
out
aaa
lret
inc
mov
dec
lret
push
imul
dec
push
lret
add
push
popa
adc
and
fsubr
or
add
les
dec
cmp
cvtdq2ps
xor
sub
in
stc
dec
jle
out
mov
inc
lahf
or
xchg
orl
popf
inc
pop
mov
lcall
jb
test
arpl
inc
mov
jbe
addb
int
mov
adcl
fmull
or
bound
inc
aaa
popf
fisttps
pop
aad
xchg
shll
test
ret
loop
inc
and
cltd
leave
or
cmp
and
cwtl
fs
pop
mov
jecxz
adc
jns
jmp
push
mov
sbb
xchg
out
fs
adc
outsl
popa
pop
xlat
pushf
add
mov
xchg
test
push
mov
adcb
fwait
dec
jo
pop
xchg
ja
jae
pop
stos
xchg
sub
pusha
and
mov
fwait
pop
mov
sub
test
xchg
push
xlat
mov
mov
inc
mov
loopne
ss
loopne
loope
mov
es
xlat
stos
aam
es
fadds
sbb
js
clc
arpl
and
cmpsb
loope
scas
les
mov
daa
xlat
movsl
sub
xchg
xor
pop
imul
dec
push
cmp
inc
pop
xor
dec
lret
xor
inc
mov
cwtl
push
mov
mov
mov
call
cmp
popf
push
dec
jbe
ljmp
lods
dec
jbe
jae
push
jmp
ja
inc
pop
jb
in
mov
lea
addr16
push
dec
into
das
add
clc
inc
insl
jp
or
mov
dec
enter
mov
daa
or
stc
mov
jo
out
je
sbb
mov
outsb
lcall
test
push
sbb
ror
pop
inc
or
adc
fdivl
pop
dec
or
add
add
cmp
imul
inc
repz
jne
in
fiadds
test
xchg
sbb
sbb
outsb
add
inc
test
sbb
mov
in
mov
and
addb
or
fmuls
xor
mov
sub
sub
mov
cmp
in
sarl
in
xor
sahf
mov
xorl
pop
das
pusha
mov
inc
and
pop
mov
pop
inc
jecxz
cli
cmpsl
aam
shll
aaa
lods
and
test
fsts
sub
scas
inc
rol
test
lods
pop
or
and
shrd
outsb
ret
cmp
repnz
movsl
cli
faddp
xor
mov
stos
jmp
fwait
xor
pusha
cmp
xor
adc
sub
lds
fldcw
aad
mov
cmp
movsl
daa
into
loop
aad
lret
rorl
mov
popf
fs
sub
shll
xchg
xor
push
movsl
adc
idivb
insl
dec
repnz
mov
cmpsl
cmp
shlb
addr16
hlt
mov
sub
cld
dec
insb
ret
pushf
lcall
or
sbb
ja
cld
jmp
add
movq
shlb
rorl
hlt
std
dec
jecxz
adc
xchg
and
dec
das
sarb
mov
mov
mov
adc
stos
or
decl
jb
mulb
sbb
mov
mov
rcrl
std
lods
inc
mov
inc
dec
movsl
out
sti
lret
mov
jne
dec
popa
ret
stc
insb
sub
xor
mov
mov
push
test
lea
popa
mov
mov
hlt
rclb
jb
cmp
mov
fiadds
sarl
inc
push
cmp
mov
inc
scas
xchg
arpl
mov
ljmp
pop
push
jb
dec
pop
test
xchg
dec
rorl
sub
pop
adc
xor
aam
into
sbb
scas
and
xor
cmp
pop
pop
and
push
and
daa
mov
mov
mov
test
shlb
pop
or
xor
shll
fs
add
dec
cmpsl
inc
in
jecxz
xor
sbb
mov
jl
cmc
push
cltd
push
cld
cli
jle
call
insl
movsb
fsubrl
cli
jno
lahf
sbb
jge
jg
and
sub
shl
jp
jno
cld
or
jge
test
fsubrs
cmpsb
inc
js
mov
mov
cmc
xchg
xchg
dec
add
push
rcr
fwait
jo
and
loop
sub
pop
dec
lds
mov
sbb
into
out
adc
push
mov
sub
pop
sbb
adc
iret
add
fcoml
inc
push
stos
lahf
fisubrs
jnp
mov
leave
jns
xchg
fs
sbb
cmp
dec
xchg
xchg
mov
outsl
mov
push
aaa
jne
xor
mov
push
and
add
inc
loope
jbe
mov
jge
jle
clc
xchg
push
shlb
cmc
test
or
mov
dec
pop
std
adc
lods
sub
jecxz
ds
dec
xchg
sub
add
cmp
jno
inc
add
js
test
in
clc
cli
loop
jns
popa
mov
or
daa
cmp
mov
sub
scas
mov
andl
add
inc
mov
or
jno
pop
cmp
les
push
sbb
dec
cmp
jg
sbb
insl
xor
in
xchg
ds
sti
inc
icebp
dec
into
nop
stc
jne
jbe
pop
mov
loope
xchg
push
jl
cmp
mov
mov
cmpsb
jbe
ret
mov
xchg
leave
sub
hlt
inc
sbb
mov
add
cli
js
icebp
fs
je
in
cmp
aad
sbb
add
stos
or
movsl
test
add
mov
addr16
test
adc
jb
std
enter
aam
jle
sbbb
push
or
inc
mov
or
imul
stos
cmp
xor
lds
out
test
insb
add
mov
mov
jnp
popa
and
andl
dec
negl
jns
jl
pop
ja
sti
or
pushf
rcrb
mov
es
rol
test
into
dec
or
insb
cld
sti
cmp
fisttpll
mov
gs
js
leave
lcall
imul
ds
inc
ja
mov
lods
js
insl
xchg
sub
xchg
fisubs
icebp
fs
sbb
in
cmp
mov
lahf
inc
adc
add
cmp
inc
push
andl
out
rclb
fwait
aas
jmp
sahf
mov
insb
ss
add
shr
dec
mov
fwait
cld
out
adc
arpl
push
mov
mov
fistpll
es
leave
xor
roll
dec
sub
incb
sbb
stos
mov
mov
cwtl
insl
add
cltd
sbb
test
leave
lds
push
or
jnp
in
adc
push
pop
ret
push
aam
loopne
pusha
push
loope
test
push
add
pop
das
adc
aam
sub
sbb
xor
aas
add
mov
xchg
sub
add
lea
adc
rcr
push
int
or
push
mov
pop
mov
idivl
rolb
pop
xchg
mov
adc
int3
ss
sub
into
test
roll
je
jmp
push
cmc
pop
test
imul
jns
lcall
std
adc
lods
sbb
push
out
or
jg
outsb
in
add
mov
fistl
add
push
xlat
cmp
inc
add
outsl
pop
in
inc
jns
or
sahf
call
and
sarb
push
movsl
repnz
test
or
cmp
aam
jbe
ret
push
sarb
xor
out
pop
xchg
addr16
xchg
mov
jl
adc
jmp
jp
fdivrp
js
cmp
or
pop
lcall
or
lret
into
or
lods
push
or
sbb
inc
jg
rcrl
std
mov
pop
clc
cmpsb
jne
jl
hlt
cmp
pop
inc
jne
mov
in
and
jbe
imul
mov
fisubs
repz
and
mov
inc
cltd
icebp
jg
int3
mov
dec
sub
xchg
out
adc
xchg
insl
dec
jne
push
add
out
popf
lea
and
mov
sub
mov
xchg
mov
into
stos
xlat
hlt
movsb
repz
enter
push
fdivr
inc
sub
lods
sub
xor
popf
dec
aas
inc
insl
jmp
call
add
popf
and
mov
pop
pushf
lds
mov
pop
pushf
adc
insb
les
pop
xor
js
jne
inc
out
push
inc
xchg
lcall
lahf
call
outsb
lds
test
popa
sbb
jmp
in
add
mov
jmp
pop
repz
das
xchg
insl
mov
jae
in
icebp
cmp
dec
cmp
arpl
in
pop
shll
push
in
push
cmpb
push
cld
mov
shr
add
lret
mov
cmpsl
mov
insl
inc
std
notl
push
popf
pop
and
sbb
cmove
dec
pop
jne
call
mov
cltd
xor
repz
and
xor
mov
cwtl
cmp
das
sbb
rcrb
out
jmp
add
sub
outsb
fnstenv
mov
mov
lds
push
sbbb
fwait
xchg
dec
imul
pop
mov
into
stos
in
insb
pop
adc
jp,pt
cmp
aas
pop
ret
mov
je
xchg
xchg
dec
push
push
icebp
mov
pop
cs
lea
inc
lret
enter
out
aaa
cltd
sub
gs
test
and
pop
dec
test
fistpl
jmp
roll
dec
cld
aam
jo
fadds
testb
sbb
jp
or
dec
insb
sub
repz
jbe
pop
jl
lds
push
addr16
unpckhps
sbb
cmp
sbb
mov
jp
sti
mov
das
xchg
cmp
test
outsb
mov
jo
test
leave
das
mov
je
jecxz
cmp
nop
out
mov
push
call
jo
xlat
jge
mov
int
dec
push
mov
push
sub
or
sbb
sbb
bound
mov
inc
xchg
lods
jle
push
lret
mov
mov
aad
inc
and
mov
xor
mov
mov
rorb
sbb
test
push
push
cmp
cmc
ljmp
in
jnp
mov
jecxz
jecxz
outsb
mov
xchg
adc
stc
dec
pop
mov
jo
mov
cwtl
sbb
movsl
jl
pop
cmc
push
pop
adc
and
push
in
pushf
push
ljmp
pop
mov
inc
mov
or
ret
dec
inc
mov
insb
cmpsl
aas
push
sar
scas
sbb
sahf
popf
cmp
scas
xor
pushf
inc
cmpsl
and
or
clc
xchg
mov
mov
mov
std
jmp
pop
xchg
or
hlt
and
sub
adc
and
sub
cmpsb
loope
xchg
mull
hlt
cld
mov
aad
or
mov
test
sbb
xchg
xor
sbb
fwait
or
or
dec
push
int3
cmp
mov
enter
ret
xchg
repz
ret
sub
jno
mov
mov
popf
sbb
push
popf
stos
mov
pop
xor
bswap
in
out
xor
inc
std
mov
or
and
in
adc
mov
inc
pop
or
out
mov
add
xlat
sbb
mov
es
decl
add
mov
dec
or
xchg
xor
adc
sub
mov
movsl
and
cmp
out
pop
sbb
pop
lahf
mov
int
push
movsl
insb
sub
popf
mov
aaa
cmp
add
out
icebp
push
in
inc
jno
adc
inc
push
aam
js
sbb
iret
mov
out
add
sbb
mov
jbe
jmp
xor
outsl
mov
ret
xchg
test
mov
inc
pop
xchg
xchg
mull
sbb
xor
or
dec
testl
nop
pop
mov
xchg
jno
mov
lcall
mov
dec
push
lds
jb
sub
cld
stos
adc
ret
roll
inc
cwtl
add
jo
out
pop
scas
or
mov
insl
pop
test
push
jecxz
ljmp
pop
outsb
mov
inc
jns
inc
je
adc
mov
add
push
in
or
jae
jbe
pop
mov
lret
das
mov
test
mov
in
test
outsb
fcomps
ss
mov
cmp
fisttpll
adc
mov
push
testl
xchg
mov
pusha
test
sub
xlat
popa
int3
pop
pop
adc
mov
lock
fwait
push
dec
sub
repz
dec
jb
cwtl
std
adc
ljmp
hlt
sub
jb
ljmp
fsubrs
inc
insl
fadds
scas
push
pop
les
lods
sbb
or
add
mov
sub
inc
aaa
and
lods
pop
jle
aas
repz
add
or
xchg
movsl
pop
pop
out
push
pop
jle
push
pop
cmp
jne
add
lret
outsl
inc
fistps
sub
mov
decb
pop
mov
mov
decl
jo
iret
ds
sub
jns
push
test
sahf
bound
or
push
push
insl
jecxz
mov
frndint
dec
mov
push
xchg
pop
sti
xor
lds
xor
adc
sahf
scas
or
mov
nop
aas
popl
mov
out
mov
pop
lods
sahf
ret
test
sbb
aas
sub
mov
pusha
push
ret
inc
and
jbe
mov
ja
push
push
inc
mov
int
pop
add
mov
adc
int
shr
out
inc
push
mov
push
les
fimull
xor
sbb
ds
imul
lret
add
lret
pop
cmp
pop
out
enter
jp
hlt
and
mov
dec
push
ror
ljmp
mov
push
shlb
sbb
mov
pop
out
in
gs
sbb
sub
loopne
push
cmp
outsl
inc
mov
cmp
jnp
dec
imul
mov
ret
mov
mov
mov
aad
or
out
sti
jecxz
push
or
loop
mov
std
repnz
sti
xchg
jne
sbb
lds
lret
ret
pop
leave
mov
out
shlb
inc
or
hlt
stos
icebp
test
pushl
inc
mov
test
scas
scas
adc
inc
xchg
int
loop
push
loopne
lea
xor
popf
aas
jae
cmpsb
arpl
push
fwait
push
loopne
lods
rclb
hlt
or
ds
xor
mov
fs
lea
cmc
xchg
push
pop
and
or
frstor
pop
popa
add
fwait
inc
push
pop
jno
dec
jle
rorl
vpclmulqdq
fwait
add
mov
jbe
test
mov
negl
sahf
sbb
jmp
nop
push
mov
roll
mov
add
mov
scas
mov
xchg
cwtl
int
imul
loop
nop
fildl
xor
test
push
jmp
sbb
lods
jb
jle
mov
in
std
mov
mov
xor
imul
popf
imul
add
jae
lds
pusha
and
popf
in
ret
das
inc
data16
cli
push
mov
xchg
gs
jmp
loop
and
sahf
test
mov
int3
movsb
lods
push
test
dec
or
mov
jb
test
popf
sub
test
out
loopne
xor
rolb
cmpsb
das
lcall
movsb
add
insl
inc
inc
outsl
pop
jns
sub
js
jmp
dec
out
shlb
mov
pop
or
pop
lds
pop
loopne
sahf
ret
jecxz
jge
dec
push
mov
pop
mov
dec
mov
or
sbb
std
gs
and
outsb
inc
rcl
dec
sbb
adc
das
lods
push
shll
mov
test
dec
sub
iret
rcrl
outsb
les
repnz
inc
adc
push
outsl
sbb
mov
insb
cs
pusha
push
cmpsl
pop
rolb
sbbb
inc
mov
rorl
sub
pusha
dec
hlt
aam
jle
fdivrs
adc
lret
bound
mov
push
addl
icebp
pop
cld
push
lods
mov
jle
xchg
fs
push
sbb
add
frstor
test
sub
pop
and
push
std
dec
add
sbb
aam
incl
cmc
jne
adc
cltd
clc
roll
shl
outsb
enter
inc
cmpsb
dec
mov
jae
into
lret
into
push
xchg
roll
aaa
addb
ret
imul
in
push
pop
xor
push
push
mov
shr
xchg
xor
leave
lahf
jmp
lock
mov
sbb
add
lea
sub
mov
push
ds
pop
push
jl
add
nop
pop
call
jae
sub
sbb
push
scas
loope
mov
rclb
xor
pop
arpl
cmp
or
mov
aad
dec
add
pop
xchg
lcall
mov
leave
pop
insl
and
cmpsb
cmpsb
pop
cmc
jl
mov
cmpsb
push
testl
in
es
mov
and
cwtl
mov
cmp
push
pop
xor
mov
fsts
jl
push
shrb
testb
int
xchg
mov
mov
rep
sbb
jb
aad
aaa
jle
adc
cmp
imul
nop
mov
test
mov
movsl
mov
mov
call
mov
repz
mov
sub
adc
dec
gs
jecxz
lret
push
adc
cwtl
xchg
adc
mov
mov
fstp
or
xor
cvttps2pi
pop
ret
xchg
jbe
sub
dec
test
mov
jl
push
pop
das
sub
push
ret
test
int3
mov
iret
push
nop
fdivrl
dec
sub
xchg
mov
loop
mov
inc
sub
aad
loop
add
shlb
bnd
xor
test
push
jb
sahf
jle
popa
sahf
movsb
sarb
sub
sbb
les
add
ljmp
lcall
in
aas
xchg
jo
xor
jo
test
stos
sahf
adc
pusha
in
add
or
mov
test
mov
cmp
adc
test
push
and
popl
es
cmpsb
ljmp
sti
cmpsb
nop
xor
add
add
jne
dec
jno
cld
or
ret
bound
sub
sbb
mov
nop
lret
xchg
jp
or
lea
dec
xor
pop
js
imul
and
les
dec
js
mov
cmp
pop
mov
fcomi
jne
add
test
aas
call
push
repz
addr16
in
pop
dec
sub
xchg
xor
push
sub
mov
add
cmp
fsubrs
arpl
mov
push
out
pushf
push
and
lret
cmc
xchg
push
fmull
mov
adc
mov
xchg
inc
ljmp
sbb
stos
in
stos
xor
sbb
imul
loopne
ror
jb
mov
push
mov
shll
cmpsb
xlat
adc
xor
adc
inc
xor
lods
push
movsl
mov
loop
lret
mov
stc
negb
je
orb
cli
pop
xchg
lods
rclb
mov
or
dec
or
sub
xchg
test
jge
shrl
div
mov
repnz
add
jnp
out
pop
jb
jbe
insl
cltd
arpl
xor
and
xchg
pop
xchg
pop
cwtl
adc
mov
xor
sub
push
mov
loop
jo
dec
sbb
add
xchg
mov
mov
inc
adc
cmc
call
cmp
out
push
les
mov
mov
inc
test
fisubrl
mov
ret
mov
jne
pushf
adc
adc
or
pop
outsl
pop
jle
jne
adc
inc
je
jg
push
mov
xor
rorb
jo
cmp
dec
addr16
inc
aam
das
mov
add
adc
jno
mov
in
test
roll
mov
xlat
inc
out
outsb
fisttpl
adc
andl
pop
xlat
rcll
arpl
mov
scas
fidivrs
push
pop
adcl
sub
push
fldt
sar
aaa
sub
out
mov
test
nop
push
push
mov
cmc
push
jecxz
or
in
push
xor
daa
mov
jnp
insb
js
or
mov
jge
mov
out
pushf
js
or
or
enter
nop
add
or
add
push
jnp
inc
pop
push
mov
xor
sahf
stc
and
dec
out
jnp
imul
dec
mov
cld
iret
inc
jb
mov
orl
pushf
xchg
mov
je
or
test
cmc
fs
xor
into
lahf
jns
add
lds
adc
lods
push
rol
or
movsb
mov
mov
roll
outsl
hlt
jno
mov
aad
int3
adc
push
cwtl
lcall
inc
in
cmp
add
dec
mov
int3
in
cmp
push
enter
sbb
cmp
loop
sub
and
lret
inc
inc
je
je
lret
and
adc
daa
les
mov
cltd
push
lock
cmp
adc
mov
sti
outsl
cmp
fldenv
push
jmp
adc
xor
jne
inc
es
xchg
mov
mov
mov
outsb
add
fwait
xchg
dec
shll
adc
popf
call
xchg
shl
outsl
pop
jae
decb
add
mov
pusha
movsl
cmp
push
cli
cmp
lea
jne
rolb
jg
fnstsw
jmp
sub
dec
pop
and
add
addr16
adc
push
fwait
or
cltd
or
inc
in
ss
ss
inc
popa
insb
push
xchg
shlb
mov
lock
xchg
mov
sbb
pop
jno
pop
push
add
shlb
inc
sbb
stos
inc
and
call
pusha
and
or
cmpsb
dec
push
mov
xchg
cmpsl
pushf
cwtl
mov
sub
popf
jle
aas
mov
pop
decb
inc
xchg
outsb
jp
pop
dec
loopne
cmp
or
lret
push
mov
add
cmp
popf
jns
addr16
sahf
and
lds
inc
or
ja
dec
insl
negb
subl
imul
fisubl
ret
cmp
adc
lods
sbb
ss
into
int3
jae
mov
or
inc
xchg
xchg
cmc
cmp
xchg
or
pop
adc
sbb
xchg
or
xchg
pop
cmpsl
sub
lahf
xchg
mov
lods
es
and
movsb
outsl
sahf
divb
jge
subl
call
addb
std
mov
outsl
sbb
gs
pop
or
cltd
jns
jge
rorl
pop
fs
add
adc
out
xchg
repnz
push
testl
and
cltd
and
sub
push
bound
mov
ljmp
lahf
xor
mov
or
imul
in
fisubrl
stos
fisubs
push
add
lahf
ja
push
ja
orl
cli
jae
xchg
xor
adc
sub
test
outsl
xorl
or
push
mov
lret
push
push
mov
pop
cmp
daa
jnp
and
mov
or
jne
mov
pop
popf
cmp
js
in
sub
cmp
cwtl
es
out
add
test
sbb
cmp
subb
push
and
lret
cmp
fsubs
test
fs
movsl
jmp
in
sub
pop
lahf
adcl
or
or
aaa
pushf
leave
and
push
arpl
in
insl
xchg
mov
adc
push
ds
out
add
or
or
sbb
inc
pop
or
out
adc
icebp
daa
subb
push
pop
push
loop
or
jbe
dec
jp
add
hlt
test
popf
or
shlb
enter
aaa
jns
lcall
ret
inc
nop
call
cltd
aad
xor
mov
mov
add
nop
pushf
es
js
xchg
lea
cwtl
jo
jle
loopne
adc
lret
push
or
ljmp
popa
int3
or
aad
push
daa
cmpsl
andl
jmp
icebp
test
pop
fisttps
lahf
shrl
mov
mov
out
orl
cmp
loop
sub
enter
sub
or
lods
dec
xchg
and
xor
fsin
icebp
cmp
imul
mov
push
mov
sbb
mov
clts
nop
dec
and
inc
shlb
jge
dec
loopne
sbb
push
pop
pushf
xchg
hlt
dec
xor
xchg
int3
sti
insl
rorl
xor
mov
scas
sbb
cmp
pop
cmp
pop
movsb
stos
gs
jge
mov
cmp
mov
inc
inc
shrb
out
xor
push
clc
push
insb
push
leave
movsb
lock
lahf
sub
dec
cmp
stos
xchg
mov
and
mov
jnp
dec
mov
inc
dec
inc
in
add
mov
in
and
inc
sar
enter
sbb
push
ds
jae
mov
aam
mov
and
mov
mov
les
jne
fiadds
dec
cli
jnp
add
int
pop
test
xchg
call
nop
mov
aam
mov
icebp
jo
rcrb
pop
jecxz
adc
popl
cmp
add
mov
mov
push
add
divl
loopne
add
lds
mov
ss
cmp
ljmp
loope
add
lds
adc
movsl
addr16
imul
mov
mov
imul
push
fisttpll
inc
dec
xor
into
mov
mull
push
inc
or
decb
test
leave
movsl
jecxz
or
les
imul
inc
popf
test
cwtl
lds
fsubs
xchg
pop
cmp
mov
cmpsl
pop
mov
fcompl
mov
bound
stos
push
push
or
ret
shrl
fldt
jnp
jge
xor
int3
adc
adc
and
cli
hlt
cmc
sbb
push
or
pop
sub
mov
xchg
adc
scas
lret
lcall
in
fs
add
pop
cmp
mov
mov
add
inc
sub
xchg
xchg
inc
cld
fadd
jne,pt
push
scas
dec
dec
fnsave
das
mov
cs
shrb
iret
enter
mull
mov
xchg
lea
sbb
add
outsb
cmpsl
rorb
dec
jno
scas
inc
xchg
jno
cmp
popa
fucom
add
push
or
int
imul
and
ret
sub
lret
mov
data16
popa
loopne
clc
xor
loope
mov
push
hlt
mov
addl
stos
stc
loopne
scas
push
repz
pushf
mov
or
lea
fwait
push
cmp
repnz
dec
in
dec
dec
popa
fs
jnp
iret
sbb
pop
and
mov
jmp
mov
jnp
sub
test
cltd
jb
push
xlat
xchg
loop
arpl
cltd
inc
xchg
jl
cmpsb
push
les
subl
xchg
fs
int3
adc
add
popf
cld
outsb
loop
xor
cmpl
out
and
cmpsl
insb
mov
mov
push
mov
cmp
enter
mov
push
dec
sbb
fwait
dec
adc
sbb
dec
aam
fs
push
sub
mov
jbe
das
push
push
or
sbb
ret
inc
jmp
ret
call
fs
xor
ficomps
pop
jmp
and
std
lods
jne
int3
loopne
repz
sbb
sbb
inc
rol
sti
xor
dec
leave
inc
add
cli
push
cmpsb
mov
mov
cld
sbb
push
mov
jns
and
je
ret
jp
mov
pop
outsl
test
mov
push
popf
sub
test
mov
dec
add
pop
aas
mov
and
loopne
into
popa
aam
aam
sbb
cmp
scas
dec
adc
xorl
xchg
mov
adc
std
pop
in
fsubr
jns
iret
xchg
popa
test
pusha
ret
xchg
adc
imul
cmp
orb
lahf
sub
jmp
in
mov
sarl
into
cld
dec
mov
sub
ds
jp
subb
or
mov
jne
cmc
xchg
mov
lcall
rcl
xchg
jle
and
xchg
es
xor
aad
fwait
jae
dec
loopne
outsb
sbb
out
mov
push
push
fldt
and
cli
push
repz
push
push
jle
test
cmp
sbb
sbb
adc
adc
jns
hlt
pushf
pop
mov
aas
mov
mov
inc
push
clc
adc
xchg
pop
call
movsl
dec
xor
cli
pop
and
jns
mov
pusha
push
push
sbb
popa
lret
jbe
aas
sbb
pop
std
dec
out
xchg
xor
dec
push
rolb
cmp
or
lret
xchg
mov
fwait
xlat
adc
es
call
mov
mov
mov
lret
push
enter
mov
adc
mov
xchg
loope
sbb
incl
add
push
insl
testl
pop
mov
xchg
rolb
sub
cmp
and
sub
cmp
icebp
scas
leave
sbb
sub
mulb
sub
mov
xchg
push
popl
addl
lods
popf
dec
xlat
lahf
leave
xchg
andl
lods
sbb
xlat
test
shrl
repnz
out
in
inc
iret
dec
ja
xlat
fs
xchg
cmp
push
and
enter
xchg
mov
and
scas
xchg
adc
xor
leave
push
adc
push
xor
mov
gs
pushf
mov
test
pop
inc
nop
xor
mov
je
xor
xor
push
pop
shll
push
in
xchg
xor
adc
dec
adc
sti
mov
sbb
js
pop
or
vhaddpd
fiaddl
lods
cmpsl
xchg
jle
repnz
and
mov
cmp
add
in
test
arpl
mov
jnp,pt
mulb
and
pop
fcoms
les
ret
in
les
test
pushw
mov
jg
pop
xchg
mov
fwait
bound
leave
lods
js
adc
mov
xlat
mov
sub
std
stos
xchg
xchg
lock
push
mov
pusha
dec
cwtl
testb
imul
cwtl
fimuls
xor
outsb
scas
jae
fistpl
in
rorb
repnz
jmp
inc
xchg
movsl
xchg
rolb
mov
notl
push
scas
pop
xor
sbb
ds
push
adc
incl
fs
dec
in
add
mov
fdivl
imul
lahf
imul
or
in
xchg
jne
push
stc
loopne
dec
mov
in
fnstcw
js
int3
rol
xchg
fld
lods
fwait
arpl
stos
push
inc
pop
sbb
fnsave
xchg
cli
xor
lret
xor
dec
aaa
incb
sbb
cmpsb
sub
pop
sbb
mov
leave
loopne
mov
inc
data16
in
xchg
push
les
les
lcall
mov
pop
push
arpl
in
shrl
leave
or
dec
sar
mov
icebp
sbb
mov
ss
xchg
scas
dec
psrld
dec
and
js
inc
push
in
ja
mov
pop
js
mov
pop
into
inc
add
andb
int3
dec
add
in
in
rcrb
push
push
mov
cmp
xchg
int3
loopne
lahf
push
rcr
stos
jp
jge
sbb
or
faddl
adc
lea
or
and
adc
push
loope
xchg
jns
fmul
dec
loopne
mov
rclb
adc
mov
push
outsb
test
mov
rcl
cmp
roll
gs
repnz
adc
inc
fsubs
jno
adc
add
mov
mov
loop
jbe
mov
pop
test
outsb
fbstp
test
dec
xor
pop
mov
cmpsb
xchg
cli
cmpsb
outsb
sbb
into
scas
fmuls
mov
adc
fbld
in
bound
and
sub
inc
lcall
sub
das
sbb
add
mov
mov
xchg
xchg
insl
sbb
mov
mov
repnz
xchg
lods
mov
jae
xor
sub
bound
arpl
hlt
cmpsl
rcl
add
add
dec
loop
data16
add
mov
inc
insl
fisubl
test
pop
int
jecxz
repz
dec
loop
jge
xor
sbb
dec
fisttpl
cmpsl
test
daa
jno
push
notl
mov
je
repnz
xchg
sbb
and
inc
cmpsb
ret
rolb
ret
bound
jo
and
int
xchg
jecxz
pop
loop
jp
or
shrb
ja
jnp
and
mov
sub
mov
imul
std
adc
mov
nop
lods
xor
lods
int3
cmp
jb
dec
mov
iretw
rorl
mov
mov
jns
mov
test
int3
push
mov
mov
mov
jp
adc
add
pop
adc
adc
mov
and
adc
dec
clc
xchg
test
mov
mov
ret
jmp
aas
push
stos
push
jmp
sbb
cmc
hlt
clc
scas
in
les
adc
fs
in
shrl
repnz
cwtl
jmp
push
repz
lret
mov
sub
xor
sar
popa
loop
daa
stc
jo
repz
into
cmp
testl
cmpsb
lcall
jg
adc
jno
pop
das
and
aaa
int
ret
xchg
mov
fwait
out
cmp
pop
test
push
mov
xchg
lea
cltd
mov
mov
dec
ja
sub
mov
iret
ja
ss
mov
jb
popa
add
test
outsl
cs
nop
lea
daa
xor
lahf
pop
cmp
repz
jl
outsl
mov
push
add
add
stos
add
cmp
test
pop
mov
lcall
jne
mov
mov
out
fimuls
mov
mov
dec
sbb
ss
mov
inc
sub
icebp
bound
lock
xor
xor
dec
in
mov
mov
stc
lret
sti
cltd
or
int
in
rorl
push
test
movhps
int
jecxz
es
shll
dec
inc
mov
fs
clc
in
mov
in
aam
addr16
aad
and
jle
jno
sub
jge
lahf
add
fwait
mov
cmp
pushf
out
and
jnp
jp
cmpsb
mov
outsl
sbb
jnp
jb
jle
inc
stos
negl
xor
mul
fstl
cmp
fs
js
inc
rclb
test
mov
push
jle
test
push
shll
push
sub
addr16
and
pop
dec
shlb
lock
fcomp
inc
sahf
cld
xrelease
roll
cmpsb
negl
xchg
dec
xchg
or
sub
loope
lds
inc
mov
lea
pop
dec
mov
cmpl
fsubrl
into
aaa
loope
sbb
sbb
out
aam
add
pop
sbb
inc
into
and
mov
out
sub
mov
push
testb
xchg
fildl
or
movsb
or
int
mov
xchg
push
out
fwait
ljmp
ret
ret
imul
popa
lret
pop
or
leave
insl
mov
mov
mov
mov
mov
shrb
int3
int
pop
hlt
inc
stos
mov
sub
mov
ss
pop
stc
fidivl
xor
lds
mov
cmc
inc
mov
and
loope
sub
sub
push
cli
insb
loope
cli
pop
ret
jg
mov
loopne
filds
aaa
sbb
add
xor
pop
push
jo
xchg
test
aam
mulb
out
add
fs
outsl
adc
int
push
pop
lcall
push
xchg
mov
mov
outsl
push
xchg
aad
jg
fs
rcr
icebp
rolb
jo
mov
adc
mov
ret
cmp
sub
lea
addb
testb
hlt
adcb
iret
aad
rcrl
adc
mov
imul
sbb
lock
aas
adcl
and
icebp
imul
sub
sbb
adc
sbb
pushf
mov
mov
dec
mov
adc
lods
jae
push
xchg
pop
mov
insb
sbb
shrb
cmp
in
dec
mov
popa
xor
hlt
mov
roll
out
loope
jne
push
call
mov
mov
inc
add
mov
or
jno
sahf
jno
mov
add
dec
or
and
sarl
popa
xchg
or
push
adc
scas
fcmovbe
push
in
jno
imul
push
push
rcr
mov
pop
xchg
jbe
das
or
testb
adc
or
es
out
pop
sbb
loope
dec
push
cmc
test
addr16
jbe
stc
pop
dec
jle
fwait
and
cmp
into
loope
rorl
into
roll
int
js
fdivrl
fiadds
jg
sbb
or
mov
ds
aam
cltd
jb
stos
inc
or
sub
jno
mov
call
es
or
mov
jg
in
into
shrl
js
dec
or
in
loope
inc
out
and
inc
jle
cmp
in
sub
je
loop
ljmp
sahf
cmp
stos
fsubs
xlat
es
pop
outsl
and
jg
stos
cmp
iret
popl
and
inc
and
sbb
and
std
or
pmulhuw
scas
mov
jge
cmp
test
ljmp
int
fs
fildl
and
lock
cmp
jmp
fcmovnbe
dec
adc
inc
mov
xor
mov
and
rcrb
pop
test
sbb
ds
sub
and
inc
or
xchg
js
roll
movsl
loop
inc
fdiv
xchg
push
mov
adc
dec
sbb
js
jnp
push
cmp
mov
xor
jne
sbb
push
in
pop
add
xor
fwait
int
insb
daa
dec
push
fisubrs
pop
jg
xor
mov
pop
in
mov
or
fnstenv
cmc
add
inc
sbb
imul
mov
mov
mov
push
imul
mov
sub
push
inc
xor
sti
add
xorl
in
inc
lcall
push
push
jae
cmp
push
je
cmp
adc
or
cli
mov
andl
test
outsb
std
jle
xor
inc
mov
xor
cld
test
or
xor
mov
push
lret
out
in
lods
adc
add
inc
in
fsubrp
popa
and
pop
or
sarl
and
out
ljmp
push
cmpsb
shll
mov
jg
addr16
pop
pop
xchg
adc
lods
sbb
addr16
or
mov
clc
test
pop
das
push
mov
jne
les
jge
shl
mov
jmp
cmp
les
inc
push
cmp
jge
rcr
xchg
std
popa
sub
jno
or
adc
fisttpll
stc
push
js
sub
stc
sub
inc
mov
mov
or
sub
jnp
cli
inc
push
cmp
inc
lret
mov
cvtps2pi
rclb
jae
push
mov
xor
push
dec
sbb
dec
jl
push
mov
cmp
inc
adc
mov
repz
fstps
xor
stos
cmpb
inc
loope
in
insl
adcb
xor
mov
je
outsb
imul
cmp
mov
lea
push
mov
add
pop
clc
push
xor
icebp
into
cmpsb
or
cmp
fbld
mov
mov
jg
sub
cmpl
in
decl
pop
mov
pop
test
out
inc
cmc
lods
scas
inc
dec
pop
notl
sbb
xchg
pop
out
push
into
jmp
xor
and
push
insl
jecxz
mov
loope
daa
pop
sti
pop
xchg
es
mov
movsl
push
rolb
cmp
pop
pop
sub
jne
aaa
movsb
mov
popa
fcoml
cmp
or
movsl
or
inc
shrb
enter
jp
mov
sub
loope
cmp
addr16
rcr
rclb
aas
jge
addr16
adc
mov
xchg
pop
jl
xchg
push
sub
add
out
das
push
inc
out
daa
test
pop
dec
jecxz
stos
jae
fidivrl
pop
xchg
pop
ss
outsb
out
cs
int3
pop
add
je
or
je
mov
cltd
fadd
lods
or
xor
add
or
pop
imul
mov
pop
cmc
cmp
ja
jg
test
gs
mov
mov
jle
push
lods
push
scas
mov
in
mov
mov
jp
push
dec
shlw
repz
scas
loop
dec
test
sti
mov
xor
or
scas
mov
add
jmp
push
sub
popf
add
pop
add
lds
or
shlb
loope
sub
cmc
pop
es
popf
mov
mov
fimull
push
jae
rcl
add
lea
adc
add
xor
bswap
es
aam
outsl
xchg
ret
ljmp
sub
das
mov
mov
mulb
push
xchg
leave
xchg
scas
mov
push
stc
adc
mov
inc
pop
mov
mov
aad
scas
fwait
ljmp
push
and
gs
pop
lcall
in
fcompl
leave
imulb
push
add
in
les
dec
in
and
push
mov
xchg
repz
mov
inc
outsb
dec
test
sub
cmp
ret
xor
fs
pop
lock
clc
dec
dec
addb
and
shll
pop
sbb
movsl
aad
and
negb
scas
shlb
ja
cmc
inc
scas
shll
in
adc
pop
inc
fimull
xchg
jo
in
loope
and
es
lods
push
mov
xlat
out
jge
negl
add
push
push
enter
in
mov
cmp
mov
inc
clc
movsb
into
nop
into
ficoml
in
xchg
movsb
pop
or
test
jne
out
test
jmp
sarl
das
mov
aad
pop
or
jecxz
push
testl
jno
outsb
sbb
mov
mov
jo
iret
add
or
lret
inc
mov
loop
loope
stos
rcll
mov
sbb
cmpsb
xlat
cmpsl
daa
mov
outsl
ret
lock
scas
stos
mov
cmp
push
cmp
pop
jae
jl
dec
or
ret
xchg
jle
or
lret
dec
pop
lods
xchg
add
lret
cli
aaa
xchg
je
popf
les
mov
aaa
mov
sub
and
mov
jbe
fdivl
sti
mov
leave
sarl
fists
adc
sbb
inc
popf
add
shlb
popw
mov
shrb
add
fisubs
popa
push
hlt
dec
mov
or
scas
lahf
aad
add
or
sub
pushf
or
shl
jmp
scas
mov
pop
push
inc
mov
mov
mov
mov
pop
mov
jge
cmp
sbb
xchg
pop
dec
or
or
or
push
jge
dec
or
push
test
outsb
or
sbb
shl
movsb
aaa
popa
mov
push
hlt
fwait
sub
xchg
in
cmp
lret
fadds
gs
mov
add
insl
and
ss
xor
sahf
or
out
iret
cmp
lds
mov
push
jg
dec
int3
mov
and
cwtl
sub
test
dec
dec
cmp
pop
mov
dec
and
test
ret
popf
out
xlat
xor
fstl
js
sbb
dec
pusha
popa
or
decl
movsb
imul
daa
adc
leave
daa
cmp
xchg
fsubs
adc
jp
jmp
inc
sahf
dec
imull
jge
push
xchg
mov
ds
add
fwait
rorb
mov
ljmp
adc
or
mov
es
jg
pop
test
pushf
sub
call
jecxz
pop
adc
lea
rol
fucomip
jns
fisubrs
outsl
cld
push
rorb
mov
mov
xchg
inc
ljmp
adcl
nop
sub
andb
pop
out
fidivrl
cmpsl
es
dec
cwtl
loope
fnstcw
std
mov
or
mov
lret
js
insb
out
cli
cld
jecxz
lret
adc
pop
sbb
cmpsl
test
sub
test
ss
hlt
adc
cmc
adc
divb
fidivrs
stc
push
adc
push
mov
pushf
clc
icebp
les
shlb
adc
test
lods
xchg
push
pop
mov
jmp
in
shr
or
gs
mov
shrb
sub
out
jns
outsb
scas
data16
orl
loop
ljmp
out
movsb
lods
push
cmp
out
push
and
cwtl
pop
push
loope
cld
sub
popf
push
cltd
mov
cli
je
mov
divb
les
mov
je
test
adc
daa
sbb
jae
les
fnstcw
push
sub
lahf
sti
ja
insb
dec
lahf
rcll
int3
or
dec
das
sub
div
or
pop
loop
fwait
or
jl
movsb
pushl
movl
xchg
aam
and
mov
arpl
ret
dec
cs
inc
push
jg
push
pop
rcrb
into
in
push
adc
sbb
je
cmp
mov
jle
sti
cmp
pop
xchg
mov
sub
jb
in
mov
fcmovb
les
cmpsb
xchg
pop
clc
aaa
jl
in
sbb
jecxz
push
out
push
pop
inc
sti
sbb
movq
add
or
push
fldenv
lock
leave
fyl2xp1
imul
ret
adc
cwtl
call
test
jae
outsb
mov
mov
dec
pop
or
inc
xchg
gs
and
out
push
nop
xor
adc
push
dec
out
es
jmp
rorl
xor
imul
fs
out
add
adc
hlt
xchg
mov
pop
pop
dec
mov
mov
adc
fidivrs
pop
mov
pop
mov
push
mov
jns
lcall
xlat
pop
cmp
xor
jno
inc
fsubr
inc
sarb
xchg
test
push
test
aad
mov
jge
loop
push
in
rolb
and
lret
hlt
jo
bound
mov
jg
pop
js
ds
dec
setb
mov
lcall
pop
lods
cwtl
ja
xchg
push
sbb
sti
and
sbb
andl
push
mov
arpl
xchg
repz
and
fwait
cmp
int3
or
push
push
mov
andb
fistl
mov
adcb
push
sbb
mov
out
push
inc
loopne
adc
inc
mov
sbb
bound
inc
push
xchg
test
jg
fwait
lock
stc
cmp
pop
enter
pop
inc
jne
mov
adc
xor
push
dec
mov
and
test
testl
push
and
das
test
mov
inc
test
xchg
add
mov
out
sub
jmp
push
out
mov
xor
mov
cmp
pop
or
mov
pop
sub
cmc
aad
into
stos
jae
sbb
mov
pop
lds
int
mov
mov
jp
sbb
int
jae
jo
and
sbb
push
jg
lock
into
iret
nop
mov
mov
sbb
sub
es
xchg
dec
push
shll
stc
dec
push
and
into
xchg
push
das
lret
ficompl
repnz
jno
sti
sbb
xor
pop
in
into
jns
xor
into
adc
int
lods
addr16
hlt
xchg
out
loope
sub
xor
mov
inc
mov
xlat
add
xor
xor
or
pop
xchg
hlt
inc
cmp
and
rclb
adc
mov
push
mov
adc
inc
mov
daa
ljmp
das
decb
das
jno
mov
in
hlt
cmpb
in
xchg
mov
adc
imul
cwtl
enter
add
fisttpll
lret
lea
sub
js
sbb
outsl
call
ja
mov
sbb
out
pop
insb
push
fs
xor
jp
pop
ret
mov
outsl
cmp
push
shl
lcall
test
push
dec
inc
push
jl
movsb
dec
mov
and
stos
stc
aas
add
es
cmc
mov
scas
aaa
mov
shrl
jg
xchg
in
push
fwait
xorb
dec
xchg
mov
xor
mov
mov
jle
sub
lds
leave
popa
sbb
inc
popa
xor
fchs
add
mov
or
cmpsb
lcall
xor
addr16
mov
mov
ja
xchg
outsb
mov
popf
fcmovnb
nop
mov
push
das
mov
fs
pop
js
push
pop
push
rcrl
repnz
cmp
jb
nop
ror
in
sarl
fwait
xor
movsl
fildll
xor
push
xchg
xchg
mov
jns
mov
dec
in
sahf
rorl
loopne
push
ss
and
cmp
jecxz
pop
cmp
jb
lret
adc
dec
or
test
ja
mov
sbb
idiv
mov
dec
mov
movsb
cmp
mov
leave
test
stos
mov
pop
pop
test
mov
inc
xor
lcall
ja
xchg
sbb
adc
stos
cmp
jne
ficomps
lcall
xlat
jl
test
xchg
in
or
call
jo
mov
cli
clc
insl
in
jmp
or
movsl
push
les
imull
icebp
js
in
inc
insb
cli
cmpsl
repz
inc
rcll
cmp
out
mov
lahf
and
das
imul
les
inc
loopne
fnsave
lret
inc
mov
ficomps
gs
cmpl
push
push
inc
test
push
repz
add
adc
out
ja
jle
or
cmp
lret
aaa
sbb
jbe
shrb
lea
mov
push
roll
mov
push
mov
out
out
rorb
mov
mov
or
pop
sbb
out
out
pushf
sub
xor
orb
mov
ror
xor
out
pushf
sbb
fisubs
pop
ljmp
xchg
popa
adc
aam
ljmp
rorb
adc
add
imull
cmpsb
loopne
cmp
rclb
jo
popf
add
out
and
fists
add
fwait
lods
movl
cltd
addb
jnp
push
xor
jecxz
mov
push
ljmp
pop
and
lret
push
add
dec
pop
dec
jb
pusha
imul
icebp
push
jns
outsb
or
fwait
fwait
lea
stc
fsubrl
mov
repnz
mov
push
jge
addb
adc
fidivs
cmp
sbb
xlat
and
imul
sahf
iret
jbe
stc
or
and
ret
mov
lea
jno
insb
xor
pop
fildll
je
push
in
in
sbb
mov
and
out
mov
add
sbb
mov
sbb
aad
mov
push
xor
adc
inc
sub
pusha
stos
xor
mov
popl
or
repnz
sbb
cmp
add
add
inc
nop
ret
lods
xor
cmpsl
mov
sub
pop
and
or
adc
dec
mov
pop
fwait
dec
or
add
mov
mov
jnp
sbb
sbb
hlt
repz
jg
aad
cmp
mov
sbb
in
or
xchg
shlb
cwtd
neg
aas
cmp
push
imul
mov
mov
repnz
nop
nop
std
stos
xchg
lds
push
addr16
in
in
push
sub
lds
dec
hlt
stos
imul
insl
mov
mov
sahf
fdivrs
jns
aaa
pop
pop
ljmp
push
dec
or
push
clc
sarb
test
xchg
cmp
mov
fmuls
adc
jp
xchg
popf
xchg
fimull
jl
sbb
adc
or
xor
cld
add
push
leave
push
push
pop
mov
pop
push
stos
clc
dec
xor
inc
das
push
dec
mov
fimull
mov
test
iret
xlat
rorl
xchg
jbe
test
mov
xchg
test
inc
ss
jmp
jge
fwait
push
push
arpl
ficomps
dec
aad
lods
mov
lret
lahf
popa
jmp
outsl
cmpsl
or
inc
and
xlat
cmc
shll
stc
xchg
aam
inc
pop
push
les
scas
ret
idivb
loope
sub
in
sub
out
inc
cmpl
add
int
cmp
in
cmp
dec
cmp
pop
push
shll
popf
jae
stc
imul
xlat
mov
mov
aam
mov
mov
inc
loopne
cmpsl
dec
jns
sbb
jg
xchg
movsl
push
and
pop
push
outsl
mov
sbb
dec
jmp
es
std
mov
dec
push
dec
test
shlb
bound
xor
cmp
sbb
pop
fldl
addr16
out
pop
xor
es
and
sti
and
jle
push
ss
popa
pop
dec
cmpsb
fists
jnp
iret
and
or
movsl
cli
pusha
add
mov
fidivrs
fnstcw
rcl
push
adc
loop
push
or
iret
lahf
xor
pop
add
ljmp
or
daa
inc
fwait
inc
ja
lock
stc
ja
into
fimuls
sahf
xchg
rorb
ja
idivl
dec
int
push
pop
and
jmp
xor
lods
filds
jo
loope
inc
fildll
mov
jb
ret
xchg
loopne
repnz
ljmp
enter
not
push
inc
in
jnp
aad
and
inc
sbb
cmp
and
sub
and
movsl
repz
add
sbb
adc
test
popa
cmc
and
mov
enter
sbb
dec
or
jg
popa
scas
pop
cli
jae,pn
fsubr
dec
fwait
inc
ret
cmp
stc
sbb
push
push
cmp
lcall
jmp
shrl
bnd
mov
pop
cmc
adc
sarb
dec
mov
int3
push
aam
test
xor
cli
ja
fs
movsl
sbb
test
jns
ss
lret
repnz
shll
mov
pop
pop
out
jns
push
int3
push
xchg
test
aad
fcomip
rcrb
icebp
cmpsb
mov
mov
outsl
push
xchg
or
pop
sub
mov
or
aaa
aaa
push
jae
cltd
lret
fnsave
or
add
xor
sbb
clc
ret
push
inc
out
xor
xchg
mov
xchg
jg
cmc
sbb
shlb
pushw
cwtl
jne
sbbl
je
pushl
xchg
ljmp
adc
push
sbb
jns
jp
out
popa
adc
or
or
sub
xor
and
clc
adc
into
arpl
pop
in
mov
or
ret
xor
sub
push
jno
push
jp
ret
shr
mov
insb
ds
mov
or
insl
or
negl
pop
sbb
pop
and
out
push
sub
fs
pop
cld
mov
cltd
jo
test
adc
jp
ficompl
clc
daa
adcl
jbe
mov
or
inc
cltd
lret
or
mov
mov
adc
addr16
faddl
jns
in
aaa
mov
push
push
adcb
mov
loopne
cmp
fistl
mov
mov
mull
in
fstl
popa
sbb
and
pop
lret
push
fwait
inc
andl
pop
enter
fwait
jno
cmp
mov
and
and
test
pop
inc
pop
scas
cwtl
jae
shrl
jmp
sbb
push
fdivs
out
nop
push
sub
inc
sbb
mov
test
push
andl
or
test
jbe
fwait
pusha
sub
sub
lock
dec
jl
popf
sbb
push
push
scas
mov
xor
pushf
sti
dec
das
fisubs
mov
jns
and
jne
lock
lret
jae
outsb
sub
neg
xchg
lret
jae
push
ja
lods
or
push
and
call
test
neg
idiv
in
inc
push
mov
xorl
aas
xor
aas
adc
lret
bound
xchg
dec
mov
pushf
test
mov
jbe
lods
cmp
or
dec
je
mov
xlat
andl
andl
fsubs
sub
or
xchg
xlat
push
push
pop
in
or
dec
xchg
adc
mov
call
imul
push
xor
xchg
aaa
sbb
movsl
mov
sahf
push
cmp
xchg
cmpsb
mov
cmp
cmpsl
ja
lahf
fistps
jne
add
mov
mov
inc
sub
add
aaa
gs
inc
mov
lahf
pushf
aaa
mov
pushf
loopne
sti
call
ret
cwtl
or
lea
sub
std
push
mov
add
lds
jp
loope
add
inc
icebp
mov
stos
hlt
mulb
or
jecxz
into
popf
cmp
repz
add
fsubs
test
fstpl
rcrl
dec
jg
lahf
xor
cmp
popa
idivl
mov
xchg
pusha
inc
lds
xor
mov
test
jmp
ljmp
clc
push
test
push
out
dec
cmp
or
dec
add
mov
ljmp
mov
lret
xor
and
fsubl
jmp
jmp
mov
out
aaa
out
movsl
test
push
aaa
push
aas
icebp
loopne
cltd
pop
cltd
imul
xchg
push
jge
cmc
leave
push
xor
jne
jecxz
dec
and
das
mov
mov
dec
push
xchg
mov
pop
stos
and
pop
pop
fstl
scas
adc
xchg
lea
sbb
mov
das
fwait
add
jns
vpmaxub
stos
xor
adc
aam
das
and
lret
jns
inc
pop
add
cmp
imulb
adcl
in
adc
cmp
lret
stos
ds
mov
je
jl
fidivl
imul
in
fcoms
push
icebp
dec
test
xor
jge
mov
stc
ds
aam
popf
pop
mov
adc
mov
sbb
insl
push
or
sbb
imul
cli
loope
enter
jb
push
arpl
imul
add
std
in
jle
popa
ds
mov
dec
pop
lcall
or
roll
xor
lods
lea
shlb
sub
push
repnz
cld
mov
adc
mov
cli
sbb
pop
nop
fstpl
ss
pop
push
pop
stos
je
xor
push
mov
fld
add
lahf
rcrl
push
xchg
dec
rol
xchg
sbb
idiv
mov
adc
movsl
jg
dec
es
popf
push
sub
jne
imul
dec
mov
std
cmp
inc
xchg
jecxz
xor
pop
fsubrs
lret
pop
clc
xchg
mov
enter
aas
jo
jbe
cmp
lcall
mov
pop
xchg
cmp
outsl
outsl
popa
call
orb
dec
scas
dec
in
sbb
push
jnp
push
ret
and
mov
add
outsb
sub
push
pop
dec
jmp
rcll
out
ss
fwait
push
xchg
adc
inc
out
outsl
mov
xchg
leave
inc
mov
cmp
mov
shr
arpl
adc
movsb
push
push
es
test
push
pop
push
mov
cmp
mov
lods
push
and
in
sub
xor
adc
lods
and
cmp
or
gs
inc
filds
negl
frstor
pop
aas
mov
mov
mov
into
mov
test
dec
test
inc
rolb
int3
pop
rcl
and
imul
pushf
push
clc
inc
ret
or
and
mov
in
in
xchg
int3
inc
cmp
pop
inc
popa
in
sub
xor
ja
sub
adc
pop
dec
fisubrl
fwait
sub
fwait
dec
ret
fs
lea
aam
cld
rcrl
imull
cwtl
push
pop
mov
testb
in
mov
jg
dec
stos
mov
xor
jmp
fs
mov
dec
push
pop
xorb
imul
cwtl
and
add
pop
popf
or
xchg
xchg
and
mov
cwtl
mov
test
mov
data16
fst
and
call
ljmp
and
inc
mov
xchg
dec
mov
push
add
sbbl
jecxz
ret
jmp
adc
pop
mov
iretw
loopne
psubq
dec
cmp
nop
pop
pop
btcl
cmp
fstl
call
jae
movsb
lock
cmp
std
push
idivl
imul
xchg
mov
out
pop
or
mov
into
push
imul
cmp
lcall
jle
fstps
sub
nop
movsb
ret
in
push
aaa
and
data16
adcl
cmpsb
cmpsb
xor
push
setnp
lret
xor
mov
aam
ljmp
jne
mov
push
cmpl
lods
popa
and
mov
push
je
xrelease
mov
sbb
cli
jb
and
lods
mov
lock
outsl
lods
mov
test
int
and
inc
jne
add
mov
jns
push
ret
mov
sub
cmp
es
aad
icebp
mov
adcl
in
sbb
inc
jmp
insl
enter
jae
push
lret
outsb
outsb
push
test
pop
sbbl
xor
push
jg
xor
int
mov
call
lss
sahf
lcall
mov
mov
iret
sub
mov
adc
sbb
or
fildl
inc
xor
push
or
and
outsb
mov
or
lret
aas
mov
cli
mov
imul
inc
pop
push
out
lret
fidivrl
push
sbb
rcrb
jbe
aaa
aad
sbb
dec
subb
push
lret
dec
cmp
call
cli
pop
add
es
aad
xchg
dec
add
gs
cwtl
or
lods
and
xchg
hlt
mov
loop
mov
ljmp
sbb
mov
xor
sub
mov
jb
push
mov
add
cwtl
xchg
in
js
push
mov
jnp
pop
or
inc
cmpsb
aaa
mov
mov
pop
faddl
adc
adc
ljmp
test
push
push
scas
mov
add
pop
mov
ror
and
pop
mov
out
fdivrp
movsl
in
ja,pt
iret
jle
xor
push
sub
add
add
clc
pop
sbb
scas
cmpsb
addr16
mov
pop
enter
aam
jne
scas
or
cmpsb
sub
push
or
movd
decl
movsb
or
mov
xchg
movsl
hlt
sub
xchg
es
or
jl
xor
xchg
sbb
mov
movsl
arpl
jo
mov
iret
inc
pop
and
cmpsl
pop
jnp,pn
outsl
jb
ljmp
lahf
mov
mov
ret
and
es
ljmp
push
cmpl
call
fwait
cli
xchg
jno
jle
xchg
adc
mov
ret
mov
out
mov
cmp
ja
and
xor
pop
push
cmpsl
or
lea
adcb
mov
mov
pop
and
push
bound
and
cmpsl
ja
push
mov
sbb
push
cmp
push
pop
stos
lret
xor
fnstsw
jb
dec
sub
and
movsb
or
in
shll
fwait
sbb
fs
insl
pop
cltd
inc
mov
sbb
mov
int
dec
mov
jl
sbb
call
pop
into
sub
std
push
dec
dec
loopne
sub
xchg
push
stc
dec
inc
xchg
mov
and
jecxz
test
hlt
out
cmp
mov
lds
fscale
cmp
out
out
add
in
enter
dec
lods
imul
scas
mov
dec
pop
jb
or
jne
aam
ss
adc
push
fiaddl
mov
sti
fld1
xchg
in
test
imul
test
inc
add
mov
enter
arpl
mov
icebp
test
lret
int3
sub
cmp
or
xchg
int
inc
cmp
push
cmpl
dec
iret
inc
and
dec
add
out
add
ret
jo
in
mov
fmull
out
outsb
inc
pop
bound
push
inc
ret
cmpsl
insl
in
pop
icebp
jae
push
jne
xor
les
or
aam
pop
insl
mov
ja
mov
out
and
pop
in
pop
jns
lret
adc
std
and
mov
je
adc
xchg
pop
jno
push
inc
fsubl
dec
ret
adc
out
mov
or
lods
cmp
sbb
je
sub
or
and
std
sbbb
mov
movsl
or
aad
sahf
repnz
pop
sub
add
adc
pop
xchg
sbb
in
xchg
lock
and
popl
fldenv
stos
xor
subps
outsb
mov
cmpsl
outsb
pop
repnz
jmp
push
test
and
jae
std
or
pop
xchg
int
cs
lods
xor
adc
add
outsl
rcrb
les
xchg
xlat
sbb
fimull
adc
push
or
jle
mov
add
xchg
call
sub
sbb
ljmp
leave
in
rol
lds
mov
inc
in
aaa
out
cmp
or
iret
lea
mov
jne
clc
movsl
and
cli
or
jmp
adc
hlt
cmp
in
push
out
in
shrb
shr
inc
push
push
jbe
cmp
pop
and
push
sbb
inc
or
sbb
dec
stc
int3
sub
leave
lods
ret
sbb
mulb
fmul
jg
aad
dec
push
adc
addl
cmp
push
jmp
xorl
jne
mov
nop
mov
add
xchg
divb
jl
and
inc
mov
mov
and
popa
push
or
sbb
test
int
adc
adc
testb
push
aam
jge
andb
das
and
and
sbb
das
jo
or
enter
push
into
jl
es
loop
push
sbb
fcmovbe
push
sub
loop
lds
mov
xchg
push
dec
std
lods
lret
fsubl
push
mov
lret
mov
ret
mov
sbb
jo
cmp
sbb
push
push
mov
nop
mov
das
xor
and
inc
push
mov
adc
subb
dec
fidivrs
mov
xchg
pop
mov
lret
shlb
inc
stos
lret
arpl
inc
stc
arpl
sbb
lcall
mov
push
sti
in
adc
test
fisubrl
repz
cmc
in
add
pop
js
xor
adc
aaa
dec
xchg
imul
mov
xchg
scas
sahf
adc
pop
adc
or
pop
xor
add
push
xchg
cmpl
sbb
addr16
lods
test
push
dec
rcl
mov
dec
jmp
sub
faddl
and
int
sbb
xchg
test
add
fidivrl
or
daa
jle
ret
xor
ds
push
cmp
out
ret
repz
cli
fwait
scas
gs
test
lret
subl
fwait
shr
inc
nop
popl
mov
add
imul
loopne
mov
jae
jg
dec
ficomps
popf
out
pop
mov
call
xor
ljmp
scas
jmp
std
in
push
cmpsb
aad
fs
add
jg
aam
and
rorb
pop
gs
mov
mov
xchg
mov
mov
sbb
push
mov
insb
add
xor
dec
clc
cwtl
jno
push
jecxz
jecxz
push
sahf
xchg
cwtl
aad
mov
lods
sbb
jl
mov
frstor
daa
sti
leave
shll
jle
and
insl
mov
jnp
pop
cmp
cmp
xor
inc
pop
ss
pushl
jb
add
push
cmpsb
push
dec
mov
sti
add
push
inc
scas
adc
jno
adc
stos
jge
outsb
cwtl
sahf
xor
int3
cmc
xor
push
negb
imul
or
imul
std
xchg
ret
push
fwait
or
mov
or
lcall
and
xor
cmp
cmpsb
cmp
add
imul
sbb
jl
int
mov
mov
mov
cmc
push
lahf
aad
repnz
stos
xor
popa
cmpsl
jle
jnp
lods
dec
add
sbb
ljmp
nop
sbb
icebp
xorb
sbb
and
lods
push
shll
daa
mov
sbb
inc
scas
or
pusha
jno
add
xchg
ret
push
out
mov
mov
mov
xchg
in
daa
cmp
outsb
scas
xor
daa
in
hlt
pushf
pop
mov
shll
mov
mov
mov
jl
sbb
test
push
xchg
cld
rol
rorl
rolb
push
mov
addl
out
or
aam
ss
cmc
jg
dec
sub
hlt
scas
in
movsl
cmp
loop
add
subps
dec
mov
out
inc
sbb
pop
xor
xchg
cmp
and
mov
pop
inc
cli
mov
les
loope,pt
push
push
adc
divl
addl
out
sub
or
adc
inc
inc
push
and
test
mov
mov
mov
call
jne
push
mov
and
fnsave
dec
cmpsl
push
in
mov
adc
jo
cmpl
fdivp
sub
cmp
inc
or
dec
cmp
and
add
ja
lods
lcall
ja
int3
jne
daa
int
in
fistl
jecxz
or
sbb
enter
das
scas
push
sub
push
test
add
cltd
stc
jns
iret
push
push
hlt
mov
sub
xchg
sahf
in
ss
cmp
push
push
std
fsubrl
adc
and
mov
sub
fsubl
nop
js
jbe
pop
mov
std
xor
outsl
call
vgetmantss
jb
mov
xlat
into
push
dec
outsl
sub
in
stc
cmc
data16
mov
cmp
fwait
es
out
std
jecxz
sahf
jecxz
inc
push
cli
push
sbb
xchg
loope
xchg
outsb
xchg
imul
shll
pop
repz
jge
ret
mov
jle
and
cmpsb
mov
push
pushf
cli
pushf
sbb
jns
push
gs
jnp
xchg
fists
jl
xchg
cmc
je
ja
lret
adc
mov
loopne
loopne
sbb
dec
rclb
mov
mov
aad
adc
sbb
adc
popa
xlat
jl
mov
jbe
sahf
push
fstpt
xor
or
mov
xor
sub
jae
movsl
cmp
mov
xlat
and
in
stc
daa
jo
test
hlt
mov
das
fwait
shlb
int3
cmp
xchg
cs
dec
dec
jae
jl
mov
push
ss
out
std
in
in
insb
hlt
stos
arpl
scas
sbb
lahf
xchg
mov
imul
jns
adc
hlt
sahf
out
leave
and
mov
shlb
cmpsb
jno
adc
aaa
xchg
push
jnp
mov
lcall
testl
cmc
test
add
mov
jmp
mov
nop
xor
xor
cld
and
push
bound
push
aaa
mov
and
and
scas
add
fistps
insl
cli
pop
arpl
push
out
insl
sti
shll
lahf
xchg
inc
scas
aaa
mov
shll
loope
push
cmpsl
ret
inc
and
lock
push
add
pop
mov
jae
insb
aaa
xchg
pop
dec
repnz
inc
push
or
lods
inc
pop
daa
add
fisttpl
lret
ret
aam
push
pushf
jp
pop
sbb
fisttpl
inc
mov
cltd
shll
cmpl
repz
xor
jmp
sbb
ret
mov
jmp
sub
pop
xor
iret
inc
push
xchg
cli
jp
int
xor
lock
cli
in
mov
jge
jns
fsubs
cmpsb
out
lret
jmp
movsl
or
shl
repnz
mov
fisubrl
in
push
loop
or
xchg
jns
cmp
pop
add
aaa
xor
in
addb
xrelease
mov
xor
xlat
shlb
pop
sbb
in
pop
xchg
jge
dec
in
out
lea
out
int
pop
adc
test
cmp
lcall
sbb
dec
cmp
das
out
add
cmp
xor
out
or
loopne
add
nop
ret
sbb
or
pop
dec
addr16
xchg
adc
fiaddl
jg
pop
lock
ds
mov
cmpsb
fistl
popa
or
push
jbe
into
or
add
mov
repz
mov
add
loop
lock
in
imul
imul
mov
fs
jge
push
mov
cld
ud1
pushf
insb
lret
imul
sub
and
out
mov
inc
rol
leave
sub
xor
cmpps
cli
xchg
mov
xchg
lea
push
movsl
cmpsl
pop
lods
sub
in
negl
jbe
mov
in
stos
ret
repz
xor
push
adc
ret
mov
jns
and
mov
iret
dec
cmp
mull
and
cmp
or
mov
mov
test
inc
pop
aam
cltd
test
push
rcll
xchg
dec
xor
fbld
rcrl
pusha
stos
lcall
fldenv
pop
inc
xor
pop
repz
mov
add
and
cmp
stos
mov
pop
adc
cmc
fucomp
or
mov
pop
push
fwait
sbb
push
sbb
adcl
sub
lret
movsl
outsl
adc
popf
push
rolb
cmp
fs
push
scas
xchg
mov
scas
xor
inc
adc
pop
aaa
mov
cmp
leave
rorl
add
icebp
bound
inc
or
sbb
add
pop
jg
out
out
rol
or
loop
cmp
ret
repz
mov
imul
jb
pushf
fidivrs
add
mov
das
pop
cli
cmp
or
add
dec
rcrl
notl
mov
cs
cwtl
test
pop
mov
imul
mov
sbb
scas
stc
hlt
leave
pusha
arpl
in
repnz
les
sahf
mov
xor
and
rorl
mul
jecxz
in
fsubr
xchg
and
mov
mov
out
dec
rcrb
inc
loopne
stc
js
xchg
insb
and
sub
or
lret
pop
pusha
and
push
and
inc
mov
aas
movsb
cmpsb
cwtl
call
addps
cltd
add
adc
ss
jae
dec
std
jns
fs
in
leave
xchg
pop
push
ss
cmp
iret
pop
pop
test
mov
imul
into
mov
clc
pop
nop
dec
sbb
lds
shrb
sbb
dec
call
shrd
nop
cli
mov
pop
cmp
jp
push
mov
incl
imul
stc
dec
les
and
mov
inc
mov
bound
sub
fdivr
daa
cmpsl
inc
js
ja
jne
je
sbb
dec
mov
aaa
cmp
xor
adcl
jnp
mov
dec
inc
xchg
cmp
popa
mov
je
mov
testb
pushf
or
and
sahf
prefetch
or
mov
dec
into
sarb
in
repnz
icebp
cmpsl
add
daa
cwtl
in
mov
inc
cs
jmp
adc
inc
pop
push
sahf
push
pop
jp
sbb
jmp
mov
pop
es
or
es
test
aam
shlb
jge
lcall
add
iret
enter
test
fdivs
pop
daa
adc
push
lods
ret
jnp
cmp
mov
mov
pushf
out
pop
hlt
rcl
das
fmuls
ficoml
inc
ljmp
test
repnz
clc
ficompl
adc
inc
aaa
arpl
mov
push
daa
dec
test
dec
sbb
mov
cltd
cmp
ljmp
mov
imulb
or
mov
xchg
incb
pusha
testb
insl
movsl
hlt
rorb
push
inc
xchg
imul
lret
mov
arpl
jbe
pusha
mov
xchg
mov
test
pop
jg
dec
dec
out
rcll
shlb
sub
cltd
rcrb
in
or
jno
pop
lret
xchg
add
shrl
in
repz
fcomp
insb
push
in
jno
push
ret
cli
inc
pop
test
fdivrs
mov
stc
cmp
pop
pusha
cmp
xor
push
addb
dec
xchg
dec
stos
fcmove
shll
pop
outsl
in
mov
jmp
pop
nop
fcompl
leave
jl
pop
cmp
mov
jno
cmp
orl
mov
push
mov
and
xchg
and
scas
or
and
icebp
stc
mov
mov
notb
jae
cltd
and
inc
subl
sub
insb
leave
and
mov
cmp
lcall
adc
sub
mov
jbe
pushf
fdivl
andl
jmp
push
xchg
sub
add
cmp
mov
xor
sar
out
ds
lods
sub
push
adcb
imul
cmc
sub
cmpsl
icebp
adc
leave
pop
adc
fsubs
or
push
leave
fsubs
xor
push
je
pop
out
daa
fdivr
and
test
sti
lds
loop
inc
imul
repnz
mov
cwtl
pop
sbb
es
sbb
iret
enter
jo
lea
test
lahf
add
popf
scas
lods
arpl
outsl
and
mov
add
inc
jg
shlb
jne
hlt
push
xchg
sbb
push
subl
mov
and
movsb
sti
inc
jo
mov
push
push
xchg
nop
push
aaa
or
and
adc
daa
sub
jno
or
pop
fs
pop
xchg
cmp
inc
ss
inc
ljmp
xor
sub
in
imul
ret
push
dec
loope
mov
pop
insb
mov
adc
xor
mov
xor
mov
fiaddl
push
repnz
inc
roll
sarb
inc
fucom
inc
pop
cld
xorl
or
sbb
scas
out
adc
jbe
cmc
cld
iret
dec
loope
stos
popa
scas
push
inc
cmc
iret
das
ret
jle
pusha
mov
iret
test
xor
dec
xchg
dec
stos
mov
lahf
out
cwtl
inc
cmp
jbe
popa
xchg
dec
andl
sbb
pushf
ret
xor
mov
test
jmp
push
ss
jns
imul
or
or
mov
mov
pusha
addr16
inc
mov
das
push
mov
leave
stos
mov
shll
mov
into
mov
mov
pop
int3
mov
sbbb
dec
pop
cmpsb
push
es
arpl
push
sarb
pop
imul
add
bound
mov
sub
cmp
adc
cwtl
in
pushf
and
cmp
push
arpl
loope
scas
jl
inc
xchg
mov
xchg
pop
popf
pop
mov
cs
cs
fldcw
movq
outsl
insb
dec
pop
cmp
nop
loope
aad
or
or
jp
push
testb
int3
idivb
xchg
jb
dec
lea
sarb
push
ljmp
inc
xchg
mov
stc
xchg
push
mov
into
sub
inc
pop
fiadds
aad
cltd
jne
stc
sete
cld
int
lock
aam
xor
inc
mov
push
mov
stos
cmp
inc
adc
push
filds
popf
pushf
stos
std
xchg
dec
dec
cmpsl
jo
sub
or
xor
jnp
xor
lea
adc
lock
mov
mov
cli
sbb
jmp
gs
loop
ficomps
push
add
mov
ljmp
arpl
addr16
sbb
xchg
test
int3
out
aam
addr16
ds
repnz
into
mov
push
xchg
push
or
cltd
test
js
scas
adc
jo
loopne
xlat
jno
mov
add
mov
mov
cld
mov
test
loop
push
inc
lret
pop
jnp
ds
addr16
dec
into
jp
xchg
lods
cmc
mov
pusha
insl
sbb
add
int
jp
adc
xor
jecxz
imul
xchg
xor
xor
call
sub
sti
pop
add
lret
mov
pop
stc
popa
mov
stos
mov
je
push
pop
pop
fsubrs
insb
pop
push
fs
sbb
cmpsb
pop
repnz
mov
mov
in
inc
dec
inc
cmp
xor
daa
loope
jno
js
arpl
outsb
mov
add
enter
les
popf
fsubrl
loop
out
add
repnz
mov
iret
or
leave
daa
cmpsb
xchg
aam
and
aaa
les
mov
sub
sbb
andb
cmpsl
adc
xor
mov
aas
cld
push
xor
mov
fistl
pusha
inc
push
pop
dec
or
cmpsl
jle
mov
repz
jbe
es
mov
dec
cmp
inc
cli
test
imul
mov
add
jl
mov
adc
sub
test
bound
lds
mov
or
jmp
push
pusha
cmp
outsb
jmp
cmc
adc
sub
xchg
xor
out
lock
jo
stc
mov
std
inc
inc
gs
mov
mov
bound
mov
push
jmp
shl
mov
sbb
push
dec
ljmp
daa
push
jl
fwait
cs
adc
stos
jl
lahf
ss
testl
cmp
xor
add
out
mov
add
daa
ffree
arpl
add
dec
add
push
movl
sub
and
scas
loopne
pop
adc
repnz
pop
movsb
mov
pminsw
adc
cmpl
ljmp
jo
or
out
pcmpgtd
in
mov
es
sbb
add
fcoml
clc
mov
ret
fisttps
rol
dec
fiaddl
in
pop
lods
ds
mov
adcb
sbb
sbb
std
push
xlat
frstor
mov
sub
dec
lahf
ret
sti
jo
into
adc
mov
lret
outsb
int3
dec
fwait
das
xchg
std
jge
inc
inc
loopne
rcll
enter
mov
lods
shl
lods
repnz
jp
shll
mov
mov
mov
test
pop
lods
sub
test
jne
not
or
cmp
loope
xor
inc
aas
in
jbe
sbb
cltd
mov
mov
push
in
and
jg
aas
pop
xor
dec
cmp
add
fwait
push
jl
std
leave
mov
es
sarb
jp
xor
stos
xchg
popf
xor
test
imul
adc
xchg
xchg
xor
leave
lahf
movsl
rcrl
cmpxchg
mov
les
jl
xchg
insb
imul
subl
movsb
inc
fsub
ss
or
test
xchg
fwait
add
and
dec
das
lods
hlt
sub
jl
clc
test
sbb
add
inc
call
addl
push
iret
fstpl
call
jns
mov
cmp
fildl
nop
into
pop
cwtl
mov
jb
push
orb
lahf
lea
loop
and
sbb
fwait
pop
mov
shrl
add
sahf
sub
pop
jg
mov
mov
sti
cmp
negl
sahf
pop
and
xchg
push
mov
mov
and
loope
sbb
cmp
mov
pop
pusha
stos
std
jb
pop
add
inc
cwtl
aaa
jne
mov
or
rclb
inc
data16
fcmovu
sub
scas
mov
out
add
mov
mov
sbb
adc
cld
push
sub
dec
cmp
xchg
pushf
test
hlt
hlt
leave
mov
movsb
repnz
sbbl
stos
sbb
push
psrad
xchg
aaa
push
push
cmp
jmp
lock
aaa
mov
dec
add
inc
and
ljmp
pop
jmp
or
jmp
cwtl
faddl
lss
and
jns
jb
push
inc
lret
and
imul
cmp
loop
xchg
stc
mov
rcrb
inc
in
int
aas
mov
xor
xor
cmpsl
xchg
fists
add
into
adc
pop
cmp
sarb
add
test
fisubrl
sub
and
insl
imul
int
xchg
and
scas
aad
fwait
and
fcmovu
dec
push
mov
int3
mov
inc
adc
and
mov
and
scas
cwtl
iret
nop
xor
mov
or
xchg
xor
xchg
rcll
inc
imul
push
jmp
icebp
mov
stos
lock
sbb
mov
mov
test
and
mov
andl
cmpsl
cmp
lret
fwait
add
jns
stos
das
add
xchg
inc
lds
cltd
jne
push
ret
hlt
divb
and
dec
cld
mov
fisttps
in
xor
pushf
jae
cmpsb
inc
out
call
test
test
mov
add
mov
andb
stos
cmp
mov
jbe
inc
stos
movsl
mov
in
push
cld
add
mov
dec
jo
mov
add
pushf
sub
cmp
xchg
sahf
mov
inc
sbb
arpl
push
shlb
cmpb
push
rcrl
or
movsb
addr16
adc
lock
or
ds
adc
push
sub
sti
mov
adc
dec
aas
dec
popf
dec
jno
aad
cmp
cmp
fucom
out
adc
les
xchg
dec
aaa
ret
jnp
mov
sbb
mov
les
cmp
in
jp
jl
cmp
sbb
jbe
jno
shrl
dec
fimull
cmp
scas
out
jnp
and
sub
mov
sbb
mov
xor
pop
dec
cmp
add
addl
fs
mov
pop
and
and
or
xlat
cmpl
mull
imul
in
sbb
add
ss
jmp
or
loope
cmp
das
push
inc
lods
add
ds
mov
jb
out
ja
loope
outsb
mov
les
stos
cmp
call
insl
adc
or
mov
scas
fcmovb
ret
into
sub
dec
popa
add
adc
lret
mov
mov
add
jae
lea
fxtract
or
lret
test
mov
or
add
rol
mov
fs
pop
add
outsb
pop
lock
mov
jbe
adc
nop
lea
daa
outsb
sahf
push
adc
stos
rcll
pop
cmp
mov
clc
add
mov
mov
rorl
shrl
dec
divl
dec
sbb
fidivs
ss
cmp
push
mov
dec
cmp
daa
adc
push
pop
in
pop
push
enter
mov
add
jl
mov
dec
int3
xchg
push
fiaddl
shlb
xor
pop
xchg
cmc
test
jns
lret
or
push
scas
or
lods
jle
push
iret
push
rol
cmp
xchg
xchg
mov
dec
daa
sbb
dec
adc
mov
es
stos
setne
xchg
in
fwait
aad
xchg
sbb
sub
jmp
leave
mov
pop
or
inc
pop
and
pop
jp
in
scas
cltd
mov
or
jne
cwtl
mov
jmp
aad
inc
push
stos
and
push
xor
inc
sbb
jmp
push
aad
and
adc
adc
clc
daa
adc
inc
int
pushf
pop
lcall
movsb
push
idivb
xor
pop
push
inc
push
xlat
cmp
or
pushf
lods
decl
outsl
dec
loop
and
cmp
add
pop
cmp
ljmp
pop
int3
mov
or
sub
bound
adc
push
mov
insl
cmc
mov
cmp
and
cmp
imul
add
fldpi
popa
jo
pop
scas
adc
xchg
loope
fstpt
push
mov
jecxz
push
rcr
shll
outsl
out
or
jo
cmc
adc
push
mov
cmp
jae
lret
fisubl
cmp
adc
sub
jno
sbb
fldln2
aam
les
pop
push
insb
and
or
jne
push
jle
imul
lret
lds
adc
ret
mov
mov
aam
dec
and
inc
outsl
mov
or
adc
addr16
or
cmpsb
inc
subb
loop
test
mov
sbb
lea
dec
jp
fbld
or
push
je
ljmp
int3
incl
jnp
add
das
rcll
jo
rorl
jg
push
sar
push
sub
cmp
adcb
loopne
pushf
push
cmp
clc
es
kaddb
pop
adc
jecxz
test
repz
in
clc
fidivrs
gs
fs
jns
icebp
loop
outsb
jno
addr16
stos
fcmovnu
add
clc
aas
pop
call
orb
pop
mov
imul
jmp
xchg
cwtl
xchg
les
lods
shll
scas
jns
cmp
cli
pop
push
sbb
mov
or
cmp
pop
cmp
out
pop
add
sub
adc
xchg
and
push
mov
div
cmp
jnp
stos
imul
imul
fnstenv
pushaw
fs
std
fcoml
movsl
dec
rcl
jecxz
test
xlat
fsts
fisubs
idiv
dec
push
add
and
and
aaa
ljmp
mov
ljmp
xchg
push
cmp
mov
arpl
test
push
ret
in
inc
das
in
add
and
imul
ret
lods
sbb
pop
pop
inc
in
fisttpll
mov
jmp
or
sbb
out
mov
outsl
cmpxchg
sti
enter
mov
inc
pop
popa
shl
loop
sub
add
pop
iret
inc
mov
xor
push
out
mov
sbb
cs
aas
or
add
add
sahf
inc
or
gs
mov
jl
cmp
iret
pop
sbb
push
xchg
pusha
rclb
add
xor
addr16
jnp
or
sarl
add
inc
jge
cmp
in
cmpsb
pop
mov
pushf
adc
clc
mov
mulb
dec
ja
pop
push
imul
jbe
push
sbb
sbb
into
cmp
pop
xchg
cld
aas
mov
out
into
movb
mov
jb
loopne
jp
jae
mov
arpl
sbb
pop
xchg
cmp
outsb
xchg
dec
out
mov
xor
and
mov
sub
jl
subl
iret
push
inc
mov
or
sub
fstps
in
pop
divl
mov
or
aad
orps
sub
mov
sbb
xchg
lahf
insb
jmp
xorl
je
xor
add
sbb
aas
inc
xchg
aad
shl
sbb
adc
es
repz
iret
jecxz
add
pushf
ss
sbb
test
cld
pop
fcomp
rorb
jbe
adc
lretw
sbb
sbb
lret
fadds
xchg
push
hlt
push
cs
push
sub
push
jno
inc
ret
sub
pusha
lret
push
fadds
jae
mov
pop
pop
loop
xchg
pop
call
cmp
ljmp
jne
enter
jae
xor
cmpsl
lock
punpcklbw
jns
push
mov
mov
jmp
push
loop
adc
fs
fs
lret
xchg
ss
jg
jl
out
fwait
or
cmp
inc
arpl
loop
out
fstpl
scas
lock
push
and
data16
cltd
mov
push
call
test
and
loope
in
dec
mov
js
add
hlt
push
enter
jmp
sbb
repnz
push
mov
out
add
sub
adc
test
push
pop
jbe
scas
cltd
xor
xchg
shlb
je
sub
hlt
and
fistps
ret
mov
xchg
or
push
data16
push
push
sub
jg
in
or
dec
int
in
xchg
rcr
std
xor
xor
fdivr
mov
pop
push
xchg
enter
dec
pop
stc
addr16
add
pop
inc
adc
adc
mov
dec
lahf
inc
jle
loop
jmp
and
cmpsb
sub
bound
and
aas
test
inc
ret
arpl
xchg
sbb
int3
mov
jae
in
xor
pop
jmp
push
sub
les
cmpl
cwtl
pop
mov
gs
lods
mov
lret
ja
xor
pop
loopne
sbbb
xchg
mov
sarl
lods
jl
in
sub
dec
hlt
cmp
fs
add
sar
push
aas
leave
scas
xchg
popf
shr
pop
sbb
xlat
std
cmp
jns
inc
fldcw
and
cmp
shll
push
jmp
pop
out
xor
out
aad
std
mov
jne
lds
push
pushf
xor
fbld
jne
xchg
dec
scas
test
and
sti
js
lea
sub
pop
inc
sbb
idiv
mov
adc
mov
jecxz
pop
dec
das
mov
ret
or
inc
xlat
and
bound
lret
mov
cli
fidivl
mov
mov
aam
xchg
mov
out
mov
dec
add
push
xchg
into
cmp
push
pushf
push
mov
loop
mov
mov
adc
inc
imul
sahf
js
inc
xor
mov
pop
mov
dec
mov
inc
fwait
push
cmp
and
pop
dec
pop
hlt
movhlps
rclb
cmp
repz
jnp
mov
mov
xor
cld
arpl
cmpsb
in
decb
push
add
lods
sahf
das
sub
les
sub
pop
lds
addb
jmp
aas
cmp
inc
insl
aam
cmp
or
cld
stos
sbb
mov
testb
cltd
ret
rcrb
test
ss
cmp
sbb
popa
xor
stc
or
pop
and
push
sti
mov
adc
popf
and
inc
cmp
mov
test
aam
xor
lea
xchg
sahf
jne
fs
in
inc
pop
pop
sbb
out
mov
pop
sub
or
addr16
loope
xchg
jle
jecxz
dec
and
pop
fistpl
cltd
xchg
ss
fildll
fsubs
pop
cmp
pusha
push
add
cmp
shrl
cmp
out
orb
or
xor
imul
adc
cmpsb
icebp
xchg
lock
je
rcrb
imul
ret
lods
adc
push
scas
cmp
or
divl
mov
and
sbb
adc
jno
je
add
pop
mov
jp
loope
cli
xlat
jp
call
repz
loop
addr16
jle
sbb
mov
shlb
js
fwait
stc
xor
loope
jbe
mov
jmp
jp
les
push
ss
or
aas
mov
cmpsb
outsb
lock
ret
push
cli
daa
mov
mov
jb
mov
cmpsl
xchg
jo
dec
out
cltd
cs
xor
jne
iret
pop
je
xor
or
cmp
popf
mov
push
mov
jl
dec
fstl
inc
out
or
sbb
js
lret
hlt
mov
cmp
in
cmpsb
pop
and
cld
pop
imul
jb
fs
mov
mov
lods
adc
and
andl
rcl
out
and
or
mov
pop
push
call
cmp
cmc
sub
ljmp
scas
mov
pop
dec
mulb
outsb
mov
cmp
or
lods
mov
or
push
mov
push
movsb
jno
lods
or
aaa
sub
repnz
sub
and
cmpb
into
lret
and
jmp
inc
sub
testl
xor
push
test
sbb
xor
cld
loop
dec
jne
xchg
ret
jl
sub
xchg
icebp
cs
or
jmp
shrb
in
adc
pop
add
push
pop
or
daa
sub
dec
jo
pop
sub
call
insl
loopne
xchg
cmpsl
jne
fildll
pushl
mov
push
mov
dec
fldenv
insl
pop
mov
pushf
and
xchg
scas
mov
mov
shrb
test
xchg
adc
adc
loopne
cmp
mov
movsl
sub
shr
cmp
cld
and
fisttpll
je
xchg
xchg
out
cmpsb
rol
sbb
and
mov
sub
sbb
mov
xor
add
push
loop
sub
dec
xchg
std
mov
push
mov
push
int
cmp
lcall
test
mov
sub
or
rclb
fs
in
mov
mov
sbb
adc
dec
sarl
push
or
add
push
xlat
lahf
ret
mov
test
cmp
dec
sbb
mov
inc
pusha
add
mov
sub
into
leave
fcomi
lret
jae
push
pop
sbb
gs
call
ljmp
pop
dec
xchg
mul
in
in
xchg
enter
xor
jmp
pushf
or
cmp
xlat
sbb
xor
xorb
add
test
mov
movsl
sbb
clc
nop
push
lods
dec
jmp
push
jb
or
jg
lods
in
mov
mov
mov
push
aaa
movsb
xchg
arpl
and
popf
push
xor
lock
loope
cmp
inc
mov
ss
xor
cmp
push
sub
dec
andl
iret
xor
ljmp
push
mov
scas
ds
insb
lock
std
or
dec
or
push
je
fwait
stos
sbb
out
fbld
aaa
test
aad
sub
out
lock
and
dec
sbb
xchg
dec
jmp
gs
or
in
lcall
in
push
push
push
push
xchg
jmp
or
inc
pop
lods
fldl
gs
int3
iret
push
jnp
clc
ret
lods
clc
cmp
mov
fdivrs
add
xor
xchg
imul
sbb
inc
jae
sbb
inc
sub
loopne
push
pop
mov
fsub
sbb
sbb
push
cmpsb
outsl
jo
pop
imul
or
dec
setno
movsb
dec
jmp
xchg
in
pop
cwtl
pop
in
push
or
fcmovnb
shlb
aam
into
jno
mov
lods
and
xlat
dec
cwtl
filds
cmp
push
cmp
in
icebp
insl
dec
pop
neg
mov
or
lea
outsb
pop
cmp
xchg
mov
cmp
mov
sub
js
xchg
mov
leave
jns
mov
popf
icebp
dec
data16
xor
xor
ret
sbb
adc
into
cwtl
xchg
xchg
sbb
jne
fisubrs
sti
daa
push
daa
add
adc
outsl
inc
mov
jp
lahf
mov
fwait
push
sub
outsl
neg
cmp
adc
lock
ret
dec
mov
jle
hlt
dec
fists
cli
lret
push
cld
xchg
insb
add
inc
test
lret
ja
cmpsl
repz
dec
sub
adc
clc
lret
xchg
mov
lcall
insb
mov
pop
pop
cmp
mov
lods
lea
nop
lahf
jnp
repz
push
mov
adc
cmp
cmp
mov
in
js
xor
add
in
mov
xor
mov
mov
push
pop
mov
xor
pop
fsubs
outsb
jecxz
lret
dec
data16
movsl
cli
sbb
lods
sahf
dec
pop
ret
mov
ret
jg
xchg
nop
add
aad
xor
sbb
rcr
and
test
jmp
daa
cmp
inc
jg
cmp
sarb
loope
enter
mov
cmc
xchg
fadds
mov
xchg
or
pop
js
mov
jns
xor
fcoms
test
jmp
xchg
and
sub
flds
push
mov
dec
pop
inc
lcall
cmp
xor
dec
ret
lea
pusha
in
pop
stos
mov
cmp
pop
in
sbb
jl
fisubrs
fcoms
sarb
das
adc
sub
test
ja
mov
and
add
push
push
fmuls
aaa
adc
ljmp
jae
inc
jns
ret
lahf
or
andb
adc
and
das
or
sub
fldl
jb
in
adc
mov
dec
or
mov
fcompl
dec
negl
add
inc
inc
dec
push
cmp
sti
or
icebp
xchg
test
jmp
xchg
sub
xchg
pop
mov
adc
or
jp
adc
adc
or
or
dec
into
or
xchg
push
mov
int
dec
mov
xor
and
jle
push
adc
cld
push
sbb
in
daa
push
outsb
rolb
jns
mov
loop
repnz
sub
loop
stc
jmp
push
shlb
jmp
lea
lret
sbbl
lds
imul
ret
cs
lcall
in
adc
int3
sbb
sbb
cld
int3
jbe
adc
ja
and
notl
inc
daa
repz
mov
adc
fmuls
sti
lock
mov
lock
mov
fyl2x
mov
enter
lahf
push
push
or
subb
sub
sarl
ja
ss
cltd
push
in
cwtl
es
iret
jbe
in
lret
mov
rorb
mov
ficoml
sbb
jnp
dec
test
rorb
pop
fidivrl
clc
inc
fldt
cltd
cmp
js
pushf
sub
xor
sbbb
or
mov
mov
mov
cmc
mov
int
stos
add
in
cmc
ret
scas
inc
inc
pop
pop
fwait
xchg
jge
push
xor
pusha
rcl
bnd
sub
mov
and
movsl
test
jo,pn
imul
mov
shll
test
add
in
in
jp
aam
xchg
mov
xchg
in
pushf
rorb
add
lcall
sub
out
adc
and
mov
sbb
outsl
data16
push
sbb
mov
xchg
sbb
dec
pop
inc
inc
mov
mov
jmp
mov
pop
cmp
push
in
dec
ds
les
adc
enter
push
out
mov
jl
stos
xor
outsb
sbb
scas
jnp
addr16
xor
es
jecxz
jbe
andl
inc
fmull
mov
dec
ret
lret
imull
je
cmpsb
call
cmp
data16
inc
outsl
lods
flds
mov
sbb
mov
clc
cwtl
lock
push
pop
xchg
dec
call
repz
mov
nop
mov
lcall
lcall
arpl
adc
pop
js
adc
and
cmp
jae
adc
mov
jns
jg
cmp
xor
test
sbb
and
xchg
negb
xor
or
inc
mov
push
outsb
xor
inc
aas
jo
dec
loopne
push
jns
pop
sub
or
test
mov
cmp
mov
lahf
test
frstor
mov
aam
shl
mov
mov
sub
lret
mov
enter
ds
jbe
lods
inc
jp
fnstcw
test
hlt
fstps
aam
hlt
stc
adc
mov
add
lcall
test
xor
sbb
and
mov
popw
daa
mov
xlat
pop
pop
test
ficoml
or
mov
rcll
xlat
inc
mov
enter
es
sbb
cltd
mov
cmp
cld
ja
inc
mov
in
jns
inc
ficoms
test
sub
mov
icebp
sub
stc
pop
sub
and
fsubrl
xor
and
pop
enter
je
sub
adc
nop
ljmp
mov
je
mov
out
sub
mov
and
je
add
sbb
xchg
xor
mov
pop
stos
push
mov
adc
aas
rorl
push
fcomi
into
sti
or
push
pop
jae
pop
cltd
push
sbb
or
arpl
jne
sub
scas
add
lcall
push
out
cli
test
das
pop
out
mov
adc
ret
cmp
mov
clc
and
push
sarb
add
lea
scas
test
mov
int3
cmpsl
clc
inc
sti
iret
mov
mov
scas
jae
pop
cmp
inc
push
daa
dec
popa
cmpsl
inc
int
ja,pt
sub
push
add
call
lret
jge
cmp
fcomps
inc
jmp
jnp
xchg
sbb
sub
test
jmp
movsl
dec
lods
arpl
jg
mov
pop
sub
jl
cltd
and
jecxz
inc
aas
aad
nop
push
push
shll
and
adc
lcall
addr16
xchg
mov
sub
xchg
outsl
mov
xchg
mov
push
sbb
xor
jmp
cmc
and
inc
cmpsl
pop
jbe
les
dec
xchg
sub
dec
scas
xor
and
cs
mov
out
lods
lret
shll
jae
dec
out
into
jle
int
lock
lods
mov
incl
lret
pusha
cmp
adc
les
sbb
test
or
sub
in
fimuls
test
pop
push
add
mov
pop
cmpsb
pop
inc
sub
iret
jge
dec
aam
add
inc
int
add
pop
inc
dec
call
mov
add
scas
inc
mov
jmp
sti
push
jmp
popf
daa
in
rcrb
adc
popa
inc
mov
or
jecxz
lcall
das
add
or
xchg
fimuls
push
repnz
shrb
add
jne
sbb
fsubrs
std
push
dec
movsl
lret
mov
pop
das
daa
scas
mov
jbe
inc
in
repnz
inc
mov
aam
in
jecxz
fsubs
lods
mov
dec
jb
mov
inc
sahf
stos
call
mov
in
pop
leave
or
cmp
push
and
pop
pop
xor
int
sarl
aaa
int
pop
outsb
dec
sub
jns
push
and
mov
frstor
and
xor
xchg
add
lock
out
in
scas
inc
iret
cwtl
pop
jecxz
lahf
negl
cs
cmp
aas
mov
or
fists
add
or
neg
loopne
sub
mov
pop
and
popa
cltd
arpl
xlat
xchg
mov
sbb
sub
mov
fstl
xchg
shrl
ss
loopne
jns
sahf
adc
test
es
dec
jo
xor
ret
scas
inc
or
push
shll
adc
adc
iret
gs
mov
ss
dec
ret
or
sarb
mov
test
loope
out
inc
and
sarl
sti
sub
pop
out
mov
mov
imul
mov
jg
mov
loopne
ss
pop
mov
dec
add
sar
cwtl
test
inc
addr16
jecxz
push
dec
repnz
mov
jecxz
sbbl
push
loope
xchg
cmc
jecxz
in
fcomps
aam
insb
rcrl
cmp
push
cmc
leave
add
pop
ret
pop
popl
dec
jge
mov
ret
and
and
push
into
mov
xor
pop
cmpsb
mov
das
and
cld
sbb
xchg
scas
jne
pop
and
jns
insl
js
fbstp
or
inc
fmul
fsubr
inc
push
rcr
dec
and
out
xchg
mov
repnz
push
lock
rcrl
fidivrs
scas
sbb
mov
and
xchg
rcl
mov
sbb
gs
adc
ret
xchg
test
add
sub
pop
pop
jle
inc
pop
add
into
pop
mov
inc
cmp
and
fisubs
dec
out
mov
imul
mov
fisubl
mov
adc
out
rcl
jbe
shr
push
or
add
pop
inc
dec
jnp
xchg
fstps
mov
imul
in
mov
fdiv
jne
sub
xor
cwtl
aas
dec
out
movl
push
gs
pop
outsl
cmpsb
cmp
daa
loopne
pusha
and
inc
aad
pop
xor
pop
adc
arpl
mov
dec
stos
dec
or
mov
repnz
pop
roll
ficoms
in
jae
gs
push
sub
es
mov
ret
mov
call
cmpsb
cli
mov
into
xorl
pop
stos
loopne
enter
js
stos
push
add
mov
stc
decl
xorl
iret
pop
adc
out
decb
in
pusha
dec
jl
dec
jo
shrl
scas
outsl
icebp
sbb
mov
sbb
fisttpll
lods
adc
mov
or
pop
push
in
in
leave
sub
and
dec
jb
add
jg
xorb
sub
pop
jns
out
ret
add
mov
ror
jl
mov
lods
add
mov
arpl
jge
push
sar
lock
out
jns
cli
mov
xchg
xlat
sbb
movsb
stos
sahf
xor
enter
dec
xor
mov
dec
xchg
add
adc
fdivl
cmpsl
stos
ret
dec
xchg
xlat
lret
or
cmp
es
leave
aad
xchg
lahf
xchg
les
leave
fcomp
scas
mov
scas
and
pusha
dec
ljmp
or
movsb
lods
inc
aad
ret
cmpsb
jb
adc
addb
cs
daa
dec
dec
sub
pushf
mov
mov
enter
mov
mov
pop
lods
sub
or
mov
inc
ja
fmulp
jl
push
xor
sbb
or
pop
sbb
pop
ret
jmp
call
and
dec
repz
lahf
imul
xor
outsl
rcrb
fildll
stos
ds
cmp
loopne
enter
push
ss
mov
pop
cmp
pop
test
iret
loopne
out
mov
jnp
push
notb
call
in
lods
push
iret
xorl
fistpl
cli
out
push
stc
icebp
hlt
stos
test
dec
mov
xchg
xor
dec
pop
arpl
jnp
pop
outsb
stos
add
or
je
faddl
loope
out
jno
je
push
pop
outsl
and
cmp
add
pop
cmp
mov
push
rcrl
pop
mov
xor
cmc
fstl
add
jb
add
jns
cli
testl
xchg
addl
mov
add
dec
gs
adc
push
and
mov
dec
or
nop
pop
cmpb
mov
or
loop
and
dec
mov
mov
outsl
in
mov
or
dec
std
mov
jmp
jle
test
push
cwtl
push
lahf
jge
xchg
jp
outsb
ss
and
xchg
outsl
repnz
nop
frstor
test
hlt
sbb
jl
adc
lahf
dec
adc
mov
jb
int3
xor
add
mov
adc
sbb
out
adc
push
mov
loop
sbb
inc
rcrl
add
add
mov
lds
xlat
mov
and
sti
sbb
testb
jne
aas
lock
les
stc
lods
sbb
insb
lahf
dec
lahf
lods
or
std
mov
fnstsw
in
inc
xor
push
mov
jmp
adc
js
fisttpll
pop
push
fwait
and
outsl
fucompp
daa
sub
cmpsb
push
adc
adc
adc
pop
pusha
cld
dec
pop
shrl
pop
lock
inc
adc
popa
int
xor
inc
sbb
popa
or
xchg
sub
pop
or
iret
jae
hlt
xor
js
xor
mov
fcomps
lret
and
clc
pop
int
mov
adc
out
mov
sub
cmpl
adc
imul
add
sbb
lea
lds
pop
cmp
das
inc
mov
xchg
imull
jae
pop
daa
mov
gs
jp
popa
mov
sti
pop
mov
out
dec
lods
fsubl
xchg
jne
cltd
movsb
sti
inc
dec
jae
pop
call
adc
mov
cli
cmpsl
and
xor
pop
jle
mov
xchg
push
hlt
arpl
dec
lock
push
pop
movsb
xor
sbb
mov
and
clc
cs
mov
cmp
inc
fildl
or
jno,pt
sub
daa
cmpsb
ficompl
insb
mov
pop
cmpsl
mov
popa
xor
push
cmpsb
cld
push
mov
ret
das
pushf
jo
sar
popf
fldl
push
gs
pop
lcall
movsl
nop
bound
lods
sub
lcall
mov
inc
dec
adcl
scas
lahf
insl
xchg
jne
jl
mov
xorl
pop
loopne
fwait
and
cmpsl
ljmp
jo
bound
sbb
hlt
add
in
fcomps
push
mov
stos
imul
pop
jns
pop
add
je
mov
pop
xor
pop
nop
test
flds
lret
jno
pop
divl
cmc
xor
loopne
sbb
mov
daa
ret
icebp
aam
push
mov
aad
enter
push
aaa
fisubs
jle
jno
lret
xor
mov
cmp
or
testl
add
das
sbb
add
fsubrs
dec
mov
xor
and
jb
cmpsb
and
scas
inc
cli
imul
xchg
sti
dec
sub
insl
jle
popa
and
adc
dec
adcb
inc
shl
std
jo,pt
out
jns,pt
orb
sub
cwtl
lods
push
xchg
mull
test
push
iret
inc
aad
mov
jle
push
mov
mov
fxtract
xchg
movsb
lods
xor
xchg
mov
inc
out
pop
adc
js
cli
test
dec
jo
popa
push
stos
nop
lahf
cltd
jno
and
in
mov
sub
lcall
sbb
add
and
sub
andb
ret
pop
loop
js
add
int
in
mov
adc
ss
cmp
and
jge
lock
sub
push
mov
jl
int3
rorl
insb
jmp
add
stos
sbb
orl
arpl
outsb
mov
pop
lahf
push
or
ret
mov
or
pop
in
cmp
jp
out
mov
jle
mov
insb
aas
outsb
jge
inc
lods
aas
add
add
dec
lds
push
mov
int3
jns
sub
dec
lret
arpl
lds
add
stos
sbb
mov
stos
mov
and
adcl
dec
adc
pop
xor
pop
and
xlat
sub
bound
mov
call
insb
mov
outsl
cmpsb
shll
or
adc
jno
test
sahf
add
je
sub
cmc
mov
push
add
scas
pop
xchg
je
adc
repz
push
pop
addr16
or
mov
or
cwtl
xchg
fimull
mov
jnp
jp
fucomip
add
stos
in
pusha
fnstcw
mov
das
jecxz
rclb
pop
inc
mov
add
repz
sti
pop
fistps
ljmp
rorl
leave
pop
sbb
rclb
sub
test
dec
lea
push
mov
dec
and
dec
rorl
out
push
jnp
jae
cmpsl
lods
add
adc
cmpsl
arpl
sub
mov
push
mov
xchg
enter
sub
outsb
cltd
std
ror
leave
mov
dec
mov
dec
lock
cmpsl
mov
lock
mov
mov
shll
sbb
repnz
add
jl
call
and
stos
adc
clc
cmpsb
adc
andl
jne
scas
in
add
adc
inc
das
mov
imulb
lret
dec
imul
jle
add
mov
jno
call
mov
add
sub
adc
push
arpl
push
pushf
push
repnz
mov
xchg
testl
sbb
dec
out
aaa
push
mov
cmp
sbb
lods
add
in
leave
pop
lds
pop
fcomp
jl
lret
repnz
mov
sti
frstor
or
adc
in
cli
out
mov
adc
cmc
in
push
ljmp
test
pop
xor
cld
clc
inc
pop
push
fists
movsb
cmp
adc
int
jo
mov
int
mov
rolb
sub
sbbl
cli
lea
sub
sub
insl
std
cs
pop
addr16
into
xchg
leave
addb
cmp
and
test
and
cmp
imul
fiadds
fbld
sbb
imul
add
js
cmp
push
push
pop
cmp
imul
loopne
cwtl
fadd
aam
xchg
add
sub
xor
xor
jl
jge
clc
cmp
mov
xlat
inc
sbb
rclb
lahf
mov
inc
addr16
or
xlat
adc
ljmp
loop
add
andb
jnp
jb
inc
inc
stos
pop
scas
addr16
jl
adc
cwtl
adc
sahf
add
sbb
inc
test
pusha
pop
cmpsl
cmp
add
pop
xor
shll
stos
test
add
xchg
xor
inc
ds
loope
sahf
fistpl
xchg
pusha
xor
mov
mov
add
jo
sbb
int3
fbld
xchg
xchg
pop
sbb
lret
and
es
sbb
jmp
out
inc
adc
das
mov
insl
int3
push
adc
inc
loope
fdivrl
subb
fmuls
add
lret
add
clc
push
xchg
pop
fsts
mov
in
adc
jg
into
add
push
cmpsl
and
mov
ds
gs
aad
jns
push
int
xlat
cmc
fucomp
insb
push
xor
dec
sbb
in
shrl
sub
push
pusha
mov
xor
mov
pop
xchg
cli
xor
ljmp
leave
or
mov
iret
jbe
ja
jmp
dec
out
cli
aaa
mov
loopne
nop
xor
sbb
imul
jne
xor
mov
xor
inc
sub
insb
imul
addl
inc
push
movb
inc
in
jo
iret
fwait
jnp
or
stos
push
mov
rcl
and
in
bound
sar
mov
or
int3
imul
sbb
jo
and
lds
xchg
sbb
cmc
loopne
jnp
sbb
test
mov
gs
pop
adc
icebp
push
popf
and
imul
jae
mov
dec
into
push
test
jnp
jo
dec
mov
add
repnz
ljmp
inc
fsubl
push
cmp
dec
dec
sarb
mov
mov
sub
pop
out
icebp
addr16
popf
pop
imul
popl
xor
jg
orl
jno
cltd
mov
out
iret
pop
dec
or
xchg
in
pop
xchg
lock
push
mov
sbb
mov
add
into
into
sub
lock
es
out
scas
mov
cli
addr16
fisubs
add
stos
or
arpl
mov
loopne
sub
mov
or
add
sahf
adc
outsl
mov
in
pop
pop
mov
or
popl
push
gs
jne
xchg
int3
in
or
arpl
mov
adc
ljmp
or
fstpl
xchg
or
and
or
mov
paddusw
pop
sbb
insb
ret
mov
sbb
popf
inc
lods
mov
cwtl
mov
dec
out
test
icebp
ljmp
lret
xor
cld
add
dec
fs
jle
in
mov
adc
inc
aas
daa
repnz
ss
cmp
sarb
iret
cmc
mov
aaa
mov
lret
cmp
sub
imul
sub
or
add
jmp
xchg
decl
jns
int3
scas
fwait
addr16
and
dec
fwait
jg
inc
xchg
aad
mov
xchg
mov
test
inc
movsl
lahf
dec
loop
loopne
dec
cld
push
mov
push
or
icebp
xchg
testl
pushf
mov
jp
mov
inc
shrb
inc
daa
pop
and
pop
loopne
scas
pop
push
into
and
cli
or
cmp
jb
xchg
push
repz
push
subb
fnstsw
push
out
lcall
cwtl
rcl
mov
cmpsl
out
int3
insb
std
xor
in
sub
push
dec
in
sub
push
xlat
ja
rol
out
hlt
cmp
sbb
pop
cltd
jae
mov
scas
stc
xor
lret
xchg
ret
movsl
xor
imul
sub
inc
ss
jb
cmpsb
mov
idivl
shlb
dec
call
negl
cli
mov
loop
dec
les
jecxz
push
sbb
jno
jl
loope
push
xchg
loop,pt
pop
xchg
shr
arpl
sbb
popa
and
pop
pop
lds
jg
sahf
jmp
lret
pop
and
fistpll
bound
lea
xchg
cmp
test
add
and
pop
mov
jg
jb
mov
mov
cmp
hlt
es
xlat
aad
pop
mov
inc
adc
xor
jecxz
adc
xchg
or
ret
mov
shll
dec
test
cltd
int3
imul
mov
mov
and
out
sbb
dec
mov
in
imul
lret
add
sahf
insb
imul
dec
inc
out
jno
das
and
jo
inc
or
sbb
aam
dec
push
lret
sti
lods
xchg
scas
cld
test
pop
inc
lea
xor
std
scas
jge
dec
sbb
xchg
cwtl
jno
test
dec
xchg
test
and
pop
cmp
add
jecxz
into
sahf
shlb
mov
pusha
aas
stc
inc
jbe
sbb
lea
aaa
lods
loope
cli
mov
aad
enter
add
jno
or
mov
mov
ja
inc
and
es
mov
add
push
mov
repz
pusha
and
and
push
push
push
push
pop
shl
mov
or
adcb
inc
xor
mov
adc
cmp
cmpsb
adc
jns
mov
in
cmp
jge
iret
xchg
ret
sti
int3
sbb
into
adc
scas
std
push
in
push
cmp
shll
dec
data16
fs
scas
mov
add
or
sub
jecxz
adc
add
movsb
ret
cli
mov
xchg
divl
loop
xchg
mov
repz
dec
into
pop
int
push
sbb
dec
nop
leave
cmpsl
push
mov
dec
mov
xor
aas
sbb
ret
jnp
inc
cld
pop
cmp
stos
cli
je
stos
aad
inc
push
or
rolb
xchg
add
iret
jnp
jno
std
arpl
pop
insb
xor
imul
ljmp
repz
jmp
repz
jp
fistps
js
cmpsl
stc
insl
shr
mov
cmp
fstps
and
ds
jge
sahf
inc
or
push
lahf
sbb
fwait
outsl
punpckhdq
xlat
iret
sbb
pop
movsl
push
sub
adc
enter
pop
mov
pop
inc
pop
mov
cmp
jl
pop
iret
repnz
fiadds
mov
mov
cmp
add
aam
and
dec
dec
aaa
mov
scas
cmc
dec
mov
das
pop
jo
dec
lret
or
mov
pop
pusha
jbe
aas
xor
mov
cmp
and
and
aam
mov
nop
cs
dec
adc
mov
and
lret
test
or
inc
inc
inc
fadd
mov
ja
push
movsl
cwtl
mov
xchg
xor
pop
pop
ja
ja
xchg
pop
in
test
and
aam
and
cmpsb
stos
jg
outsb
pop
cwtl
sub
cmp
jg
pop
add
cmpsb
or
ja
lds
cmp
out
sub
and
jp
andb
xchg
add
fnstsw
cli
mov
leave
mov
mov
lods
add
fdiv
add
push
push
pop
repnz
pop
inc
push
jp
push
cmp
adc
std
jecxz
bound
icebp
mov
aaa
and
out
and
jb
cs
leave
mov
sarl
mov
es
ret
addr16
jo
in
jg
mov
insb
cli
mov
cmp
or
fsubrp
idiv
fistpll
int
repnz
sbb
cmp
fsubl
or
ret
mov
push
sbb
out
push
pop
clc
lcall
addb
lds
ret
adc
lahf
daa
hlt
je
mov
or
cmp
leave
lea
ss
jns
cmpb
inc
sarl
cmp
cmpsl
cwtl
mov
sub
les
mov
add
dec
push
insl
dec
fnstcw
sbb
mov
xor
out
ja
inc
addr16
jnp
mov
outsl
test
rclb
or
std
mov
rcrb
pop
dec
xor
xor
mov
mulb
aaa
pop
jg
sar
xlat
aad
mov
pusha
push
mov
je
xor
adc
xor
xchg
and
ret
push
inc
cmp
mov
aam
rcll
test
mov
les
imul
mov
dec
mov
shlb
jno
mov
dec
ss
jo
xchg
mov
repnz
lea
sarb
cli
icebp
stc
cmp
out
cmp
lea
cmp
jbe
loopne
sub
push
sbb
xor
sub
push
aaa
lret
hlt
xorl
push
stos
int3
adc
xor
jle
mov
jbe
adc
lods
mov
lcall
inc
daa
lds
mov
mov
mov
sub
mov
push
pop
inc
sarl
pop
mov
mov
lods
xor
sub
push
stos
lret
or
inc
leave
xor
into
stc
and
push
shrb
add
adc
js
into
mov
inc
daa
mov
jecxz
sub
rolb
repnz
sub
cmc
mov
xor
in
inc
fisubrs
inc
push
fdivrs
ror
push
hlt
xchg
inc
add
push
sbb
int
lods
ret
aam
loope
out
sarb
inc
xchg
xchg
and
xorl
in
loope
jmp
std
inc
aaa
lret
mov
mov
iret
test
sbb
mov
add
mov
inc
sub
lods
fmull
aam
test
mov
sbb
mov
lahf
jecxz
insl
mov
inc
shll
mov
loopne
stos
bound
cltd
pushf
adc
push
repz
ljmp
test
sbb
bound
data16
mov
jp
mov
xor
jg
cmp
xchg
cmp
clc
lods
nop
filds
lret
fcoml
push
fdivr
mov
lods
push
repnz
cs
push
ja
popf
popa
cmp
sub
and
dec
cmpsb
iret
fmull
sti
jb
xchg
or
lret
dec
rcrb
cmp
int3
inc
xchg
gs
cmp
adc
xor
adc
scas
push
outsb
pop
mov
pusha
rcrb
sub
aaa
das
sbb
clc
push
std
lea
scas
or
mov
xor
jp
fildll
push
adc
inc
ret
mov
es
pop
mov
pusha
test
cmpsl
mov
xor
mov
inc
mov
js
adc
sbb
insb
jl
sbb
inc
inc
loopne
jb
mov
insb
xchg
or
jecxz
xor
aas
pushf
pop
enter
arpl
jbe
sub
dec
dec
add
clc
push
xchg
pushf
mov
insb
push
sbb
enter
out
scas
lds
or
cmp
inc
sub
lock
mov
add
inc
movsb
adc
ffreep
add
push
int
std
and
mov
cltd
sahf
inc
and
and
jae
xchg
pop
cwtl
aam
fmuls
int3
jmp
aaa
and
adc
in
jb
leave
sbb
jge
dec
push
repnz
xchg
jg
jo
loop
jno
sub
mov
dec
ret
add
sbbb
fs
pusha
dec
fnstsw
xchg
lcall
pop
sbb
insb
js
xor
sub
pop
push
push
xchg
cwtl
xchg
decb
and
xor
push
insl
cmp
rcr
hlt
mov
jge
push
pop
jecxz
loopne
lods
inc
psrlw
mov
std
negl
test
mov
lds
inc
iret
mov
mov
stos
lcall
add
mov
fisubrs
mov
jbe
or
pop
ret
lds
stos
sbb
test
fisttpll
jge
testb
pop
inc
mov
leave
mov
mov
lret
push
sbb
leave
mov
test
add
popa
popa
cmp
shll
mov
push
lods
push
xor
pop
lds
lds
jmp
sbb
dec
push
cmc
cmp
cs
dec
rclb
and
imul
pop
dec
add
je
mov
das
decl
mov
cli
out
int
cli
mov
xchg
inc
cld
incb
fistpll
pop
into
and
sub
mov
dec
dec
pop
movsb
xchg
out
adc
out
dec
mov
xlat
fistpll
in
push
xchg
xchg
jmp
jl
in
test
dec
jecxz
add
pop
adc
xchg
push
inc
pop
jnp
xor
and
mov
jp
xor
or
loopne
sub
imul
hlt
shll
adc
or
mov
jne
daa
popf
mov
push
pop
repz
dec
jae
and
mov
xchg
dec
jecxz
or
cmp
push
cwtl
pop
add
repz
test
jp
test
inc
xor
inc
outsl
jp
xor
pusha
dec
push
fnstsw
xchg
pop
movl
sbb
jg
cmp
mov
add
inc
mov
inc
cmp
repnz
rol
or
sbbl
jle
pop
push
pop
mov
adc
pop
push
pop
sbbb
rorl
daa
ds
sbbb
adc
subb
loopne
aaa
inc
mov
dec
mov
jns
fisubrl
jns
mov
ss
xchg
push
aaa
data16
jmp
rol
xor
push
mov
xor
outsb
pop
sbb
rcrl
sub
cltd
and
mov
mov
test
les
pop
mov
push
repnz
lea
dec
xor
ja
movsl
in
mov
leave
xchg
es
push
fsubrs
cmp
jo
pmaxsw
xor
into
push
pushf
loope
jbe
xor
push
sbb
out
xor
jp
pop
xchg
cmp
dec
ja
jo
mov
mov
rcr
test
or
mov
add
popf
dec
pop
jl
out
out
lret
push
test
pop
ret
clc
xor
les
jecxz
inc
xchg
dec
cmpsb
sub
dec
mov
xchg
in
out
fstpt
hlt
out
in
adc
and
jae
movsl
jbe
movsb
add
push
lret
add
fildl
push
and
sti
mov
xor
test
push
addb
test
pop
adc
or
psllw
in
add
into
lds
ror
dec
or
sarl
adc
int3
into
shrb
xchg
fcomps
jmp
scas
adc
pop
test
xlat
int3
orb
test
out
mov
adc
pextrw
cmp
inc
jmp
mov
mov
jne
sbb
or
inc
enter
lods
xor
cmp
loopne
movsb
mov
in
ret
or
insb
pop
fadds
ret
push
rorb
dec
add
add
fmull
push
mov
loope
fcoms
and
fidivl
pop
xor
cmpsl
and
push
sbb
cwtl
and
xchg
inc
push
popa
dec
push
mov
paddq
mov
add
add
outsb
rep
rorb
mov
aas
repnz
shlb
jns
in
jg
fwait
and
mov
jne
rolb
ficoms
icebp
outsl
add
into
jg
daa
or
rorl
pop
jl
adc
jl
xor
cmp
dec
add
push
nop
push
sub
or
mov
lock
data16
pop
mov
push
pop
dec
add
inc
mov
stos
xchg
pop
movl
cmpsb
jl
mov
inc
test
fidivrl
pop
arpl
or
mov
loop
push
cmpsl
mov
dec
inc
xor
mov
stos
and
and
dec
jbe
and
clc
push
jg
and
inc
pop
aas
fsubrs
dec
pop
imul
push
leave
fisttps
lock
and
aas
loopne
loop
or
ds
pop
insl
insl
je
mov
pop
ja
cwtl
lea
popa
test
pop
std
sbb
inc
mov
clc
inc
dec
or
rorb
fsubr
hlt
dec
aam
sahf
fisttps
test
or
xor
and
inc
dec
pop
xor
sub
popf
loope
and
les
outsb
das
loope
pop
shrb
mov
add
ss
lds
mov
and
lods
scas
fwait
mov
pop
repz
mov
sbb
lea
push
mov
in
insl
pop
popa
ljmp
sbbl
or
in
and
pop
inc
jnp
add
pop
and
mov
push
fdivs
pop
nop
into
sub
js
and
sbb
fsubrs
xchg
sbb
cs
or
pop
in
cmp
adc
scas
divb
or
xlat
jmp
and
xchg
aas
scas
mov
inc
sarb
jns
inc
imul
fstps
push
rdtsc
sbb
jl
push
fistpll
mov
xchg
push
loope
push
cltd
jg
pusha
cmp
mov
lds
cmp
daa
shrw
popa
jmp
shll
or
aam
xor
mov
lahf
dec
stos
dec
adc
xchg
mov
int3
loopne
loope
mov
leave
sbb
addr16
movsl
mov
cwtl
jae
dec
and
push
test
xchg
mov
sbb
dec
test
mov
mov
xchg
loop
sti
inc
ds
les
cmpsb
cmp
dec
inc
mov
insl
xor
icebp
int
or
or
inc
ljmp
bound
pop
cmp
sti
mov
stos
push
pop
mov
jg
mov
adc
dec
cmp
nop
mov
mov
mov
das
es
adc
jbe
lods
push
mov
ljmp
or
aas
dec
fs
and
idivb
xor
stos
js
mov
pop
fimuls
inc
in
sub
cwtl
xchg
push
inc
nop
pop
inc
es
insb
js
dec
dec
adc
insl
sbb
add
push
push
sbb
das
mov
pop
inc
adc
ds
mov
pop
icebp
mov
imul
jl
sbb
xor
rolb
insb
sbb
movb
lock
pop
lods
push
push
cmc
mov
outsl
add
lods
aad
xor
incb
push
xor
jecxz
ljmp
dec
nop
sti
jmp
add
sub
notl
push
lret
lahf
ret
mov
or
push
xor
cmp
test
aaa
scas
cmp
add
add
loopne
js,pt
pop
rol
jbe
adc
add
testl
mov
scas
adc
sub
data16
imul
ret
xlat
fistpll
mov
adc
mov
cmp
and
in
cmpsb
push
call
cmp
sti
xchg
add
outsb
lea
lret
and
push
inc
mov
push
pop
xchg
aad
and
xor
pop
arpl
gs
inc
cbtw
adc
jle
insl
push
mov
lret
jo
insl
mov
into
das
pop
jmp
aam
das
mov
ljmp
pushw
push
fs
push
dec
sbbl
xchg
inc
in
push
sarl
mov
outsl
dec
sbb
mov
or
pop
pop
cmp
outsb
adc
in
int
or
jae
pop
stos
push
and
lret
shrl
test
dec
dec
in
cmp
or
sbb
dec
sub
enter
fimuls
jbe
je
push
loop
sub
inc
sbb
mov
mov
movsb
push
pop
inc
leave
push
xchg
mov
int
stos
std
dec
ss
cmpsb
adc
cld
insl
clc
sub
push
mov
push
mov
dec
jle
imul
daa
dec
sahf
xchg
xor
iret
push
add
out
or
mov
mov
cmpsb
mov
out
rcll
dec
fistpll
in
outsb
sub
cld
xchg
insb
and
cltd
shl
ror
pop
loopne
lods
pop
pop
inc
xor
inc
es
mov
loop
jecxz
outsb
or
mov
clc
ds
ficoms
mov
insb
in
cmp
pop
push
decb
mov
mov
and
ret
jno
gs
sbb
das
push
mov
hlt
and
xor
add
cs
or
pop
or
push
ds
daa
imul
mov
or
shl
add
add
adcl
mov
clc
fsubrl
pop
lods
adc
xchg
dec
in
es
mov
or
outsl
insb
iret
dec
rcll
lods
pop
and
lret
push
lds
outsl
stc
decb
and
sub
stos
pop
in
in
push
and
into
pop
jns
mov
ljmp
jecxz
je
sar
add
sti
or
repz
int3
insl
mov
jns
loopne
jo
stos
inc
mov
jno
lea
dec
cli
ret
sbb
fs
lcall
leave
push
jb
leave
push
mov
jbe
rcll
push
test
ljmp
stc
loop
xor
dec
stc
in
cwtl
sub
out
pusha
and
ljmp
fcomps
push
addl
jecxz
repz
lret
push
cli
rorb
test
jmp
mov
ret
cltd
aad
xchg
movsl
xor
dec
push
and
xchg
jge
jns
fldenv
inc
xchg
bound
aaa
imul
jo
pop
lods
std
mov
scas
xchg
pop
hlt
gs
add
popa
call
out
or
stos
arpl
cmp
ja
mov
sbb
cmp
aaa
pop
adc
popf
shll
aam
and
test
mov
out
scas
subl
jmp
push
add
dec
out
cmp
and
out
or
mov
hlt
in
out
mov
inc
sahf
pslld
dec
pusha
nop
lea
in
adc
jno
push
or
or
fistpll
je
and
sahf
add
jns
enter
ja
daa
and
fiaddl
ljmp
pop
dec
mov
daa
mov
push
enter
pop
lret
inc
dec
in
pop
xor
js
es
lods
inc
mov
rcll
jp
jg
or
lods
or
push
repz
rcr
xchg
xchg
xor
or
mov
popa
xchg
inc
imul
test
int3
mov
arpl
cmovge
out
aas
cmpsl
movsb
or
jle
mov
cltd
lret
movl
push
mov
rorl
jg,pn
sbb
cwtl
push
cmpsl
daa
xor
push
cld
pop
sbb
xor
push
aam
adc
xchg
mov
jg
jmp
or
pop
mov
movsl
mov
adc
sbbb
xlat
push
or
xchg
and
xchg
lret
add
cmp
leave
inc
mov
xchg
popf
push
push
das
shr
xchg
mov
iret
in
or
inc
rcrb
fstpl
outsb
or
insb
daa
sbb
enter
push
out
int
and
clc
scas
out
test
inc
and
in
test
sbb
fadd
jae
mov
push
mov
lret
pop
dec
inc
in
jno
in
lret
pusha
out
scas
xchg
adc
mov
cmp
sbb
dec
xchg
xchg
js
and
cmpsl
das
push
xor
xchg
imul
adc
xor
scas
cltd
push
pop
inc
xor
rorl
and
pop
les
test
inc
xchg
int3
pop
add
or
cli
ret
pop
lea
mov
push
orb
aam
outsb
cmp
xchg
inc
pop
mov
mov
cmp
enter
ljmp
push
aam
gs
stos
jb
sub
hlt
xchg
jle
ss
cmp
lcall
cmp
push
sbb
lahf
repz
push
push
aas
or
fdiv
hlt
add
int
lock
inc
mov
jg
daa
adc
ds
mov
mov
pop
cmp
mov
cmp
push
sub
cwtl
stc
adc
lret
push
call
jo
mov
orl
jecxz
pop
lods
das
mov
sub
aas
es
rolb
leave
xchg
flds
scas
in
xchg
cmpsb
cmp
js
xor
dec
inc
push
xor
ret
mov
jg
inc
xchg
adc
test
mov
xchg
push
shlb
dec
add
sub
pop
adc
cmp
dec
jae
add
push
jge
or
push
jl
mov
push
or
out
sub
ret
cmp
idivl
push
adc
or
pop
xlat
inc
and
pmuludq
mov
xor
push
stos
lock
pop
es
jmp
cld
xchg
sahf
je
ret
call
cmp
aaa
adc
xchg
sbb
xor
or
std
aad
push
outsb
push
rcll
adc
subl
xchg
add
or
add
int3
push
imul
xchg
push
mov
cmp
outsl
stos
jbe
andl
push
xor
outsb
ret
jmp
inc
add
or
fchs
pop
push
lods
das
fucomi
popf
rorl
mov
xchg
add
inc
lock
lods
sub
es
push
or
lret
gs
adc
insb
imul
or
pusha
imul
mov
lret
pop
mov
jecxz
fisttpl
out
movsb
mov
cltd
stos
test
push
fsts
sbb
ljmp
fisttps
lret
pop
and
icebp
jge
pop
test
jl
popa
cmpsl
movq
not
das
mov
gs
lods
out
add
imul
mov
incb
mov
push
insl
pop
dec
iret
inc
sarl
bound
pop
sbb
fwait
xchg
and
add
pop
push
aam
stos
out
leave
jge
lcall
and
dec
jl
dec
lds
aaa
cmp
clc
and
das
jecxz
jno
push
add
mov
dec
jle
scas
scas
jae
int3
orb
inc
adc
adcb
push
out
stc
or
aaa
shrb
adc
cmc
aam
xchg
mov
cmp
roll
xchg
pop
adc
fwait
ret
inc
push
scas
imul
insb
lahf
push
adc
xchg
fstl
shlb
add
mov
movsb
jmp
jno
cld
stc
mov
adc
adc
push
sbbb
xor
xchg
int3
aas
jae
xor
cmp
movsb
loope
sub
sbb
xchg
and
xlat
push
ret
stos
jle
xchg
dec
subl
fnstenv
outsb
sbb
inc
xchg
inc
inc
xchg
dec
pop
sub
sbb
sub
push
lcall
and
in
xchg
push
xchg
mov
add
xor
and
addl
loopne
mul
movsl
or
js
push
jno
sub
sbb
push
xor
or
mov
jae
lcall
xchg
mov
testb
push
sarl
cmpsl
call
push
and
nop
mov
int
sbb
iret
in
jnp
dec
inc
pop
js
mov
mov
ror
pushf
cs
xchg
fisubrs
jmp
lea
ror
outsb
adc
into
lret
pop
mov
insb
or
faddp
sbb
outsl
jle
scas
dec
shlb
xchg
fwait
mov
fisttpll
push
mov
loopne
cs
repnz
ficoms
push
cld
fcmovnu
mov
loopw
pop
in
movsb
ja
jg
sbb
adc
ja
lock
add
mov
fnstenv
int3
add
xor
push
int
push
push
and
inc
jecxz
cld
mov
mov
push
pop
jge
clc
pop
sbb
fistpll
jne
xchg
loopne
or
movsb
movsb
add
out
adc
ja
pop
dec
sub
orl
notl
nop
lahf
shll
pop
pop
mov
mov
comiss
fcoml
fidivrl
arpl
mov
mov
popf
insl
jnp
mov
pop
pusha
and
adc
sub
repnz
nop
lret
adc
push
xchg
movsl
out
lods
fnstcw
xchg
in
imul
imul
fisubl
adc
popf
adc
test
sahf
out
insl
in
hlt
mov
aam
cmp
mov
ja
fwait
mov
jns
add
fstl
dec
sbb
cwtl
scas
push
pop
arpl
stos
mov
push
and
mov
adc
repz
cli
sbb
adc
inc
xlat
mov
push
lock
cmp
pop
add
inc
cmpsl
lahf
insl
clc
push
jl
push
dec
sub
sbb
add
insl
or
ljmp
sub
xchg
xor
lds
fists
adc
mov
or
pusha
enter
lcall
push
inc
mov
in
adc
jge
fisttpll
pop
subb
loopne
sub
aas
pop
in
das
clc
test
push
cmp
add
push
fnsave
in
adc
adc
stos
pop
dec
pop
push
pushf
xor
je
sub
loop
mov
sub
mov
out
mov
stos
mov
in
mov
xor
out
push
inc
sub
dec
ficompl
jb
int3
in
mov
add
ror
mov
in
in
out
fwait
daa
mov
mov
cmp
adc
das
mov
cmpl
call
les
pusha
jne
dec
fwait
mov
push
adc
popf
lea
mulb
push
fwait
inc
cmp
inc
fwait
jb
pop
pop
lahf
xchg
jl
xchg
adc
test
add
mov
pop
mov
bswap
iret
cmpsb
jle
mov
dec
mov
or
dec
mov
add
fcmovb
daa
and
out
lds
push
add
rorb
dec
jns,pt
mov
in
cmp
xor
sub
je
dec
pop
cmpsb
sarb
fwait
push
in
cmc
outsb
xor
jns
cmp
je
popf
iret
popa
sbb
or
jo
shrb
dec
cld
mov
dec
push
hlt
test
lds
cwtl
mov
invd
emms
je
cmpb
inc
cmp
and
loopne
addr16
popf
rcrl
mov
mov
rcr
push
daa
push
jle
fildl
cmp
dec
pop
fidivl
psrld
or
cmpl
push
out
outsb
aas
push
xor
jmp
in
sarb
push
mov
mov
jmp
push
addr16
ljmp
out
out
int
jecxz
and
cmpsl
adc
dec
cmp
aas
cwtl
lahf
gs
lcall
icebp
ds
xlat
out
inc
pop
add
lds
lock
subb
jge
aas
in
movsb
adc
inc
cld
dec
mov
aad
sbb
in
movl
test
jp
xchg
mov
loop
dec
popl
pusha
out
cli
lahf
dec
addr16
fnstsw
push
jmp
outsl
push
jl
int
sti
xchg
jo
and
push
imul
cmpsb
mov
adc
mov
jg
loopne
leave
fwait
mov
jle
mov
sub
or
fisttpl
movsb
int
xchg
loopne
pop
mov
fs
fisubrl
pop
mov
out
addr16
aas
add
cmc
or
inc
xchg
out
cmpsl
fisubl
mov
loope
jns
pop
cmp
push
adcl
aas
and
or
and
push
cmc
test
jb
pop
dec
mov
es
xlat
lea
jns
xchg
cld
out
mov
in
loop
mov
mulb
push
enter
fadd
jg
pop
in
mov
hlt
outsl
jmp
add
cmc
jo
hlt
mov
repnz
mov
in
pmaxub
orb
cmp
sub
mov
add
mov
bswap
mov
cmpsl
sbb
jns
mov
and
xchg
xchg
je
movsl
into
pop
stos
push
dec
icebp
jl
movsb
push
cmpsb
jl
shr
xor
rcrb
sub
pop
mov
xchg
inc
push
mov
cltd
negb
loope
xor
mov
adc
mov
icebp
movl
xorb
jecxz
jmp
mov
jmp
mov
add
sub
add
sti
sbb
call
mov
push
roll
mov
test
loop
sub
jae
sarb
inc
popf
xchg
inc
ss
jl
clc
mov
xchg
roll
sub
push
test
sti
les
or
movsb
mov
iret
sahf
inc
cmpsl
sahf
pop
or
adc
sbb
dec
jl
and
pusha
dec
fnstenv
rol
push
cmp
testb
xor
sub
inc
push
fnstcw
repnz
xor
ss
in
inc
das
inc
add
fisttps
mov
jecxz
popf
mov
lea
mov
pop
xchg
dec
jge
xorb
scas
out
lea
iret
mov
add
repnz
cmp
sub
adc
mov
jne
inc
sub
icebp
dec
push
enter
out
sti
outsb
xor
inc
jns
ds
pop
inc
or
jbe
mov
sbb
in
fs
orl
out
pop
ja
subb
idivl
incl
outsl
fcompl
pushf
mov
or
inc
lods
and
stos
rcll
mov
rcll
xor
nop
xlat
popl
mov
js
pop
sbb
mov
inc
mov
inc
xlat
nop
and
out
xchg
lds
jo
lea
sbb
sub
cltd
fdiv
scas
sti
dec
mov
push
int
in
push
fwait
mov
filds
cwtl
push
adc
sub
cs
ret
mov
adc
arpl
dec
cld
jp
xchg
sub
je
in
add
add
and
in
sarb
test
cmp
and
and
cmc
scas
push
sbb
scas
add
js
cwtl
add
add
and
cli
pop
out
outsb
sub
out
call
dec
gs
es
jae
cmc
mov
xchg
sbb
dec
mov
or
adc
push
xchg
or
mov
lahf
xchg
mov
adc
pop
pop
cld
shl
dec
sub
cmp
pop
imul
jp
adc
fwait
add
test
insl
ljmp
mov
xor
mov
jg
mov
popf
inc
mov
dec
mov
lret
jne
jb
inc
mov
push
jbe
mov
dec
mov
jbe
cmp
imul
mov
pusha
rolb
dec
cli
jle
lcall
lds
sahf
cli
negl
sbb
sub
mov
lds
lods
push
sub
push
push
enter
rolb
daa
in
adc
jle
fidivl
aad
xor
enter
cmp
pop
sti
jp
cmp
or
cli
mov
mov
inc
out
push
cmpsb
movsl
inc
or
hlt
out
pop
adc
clc
mov
mov
in
arpl
push
jecxz
nop
lock
ljmp
xor
sub
push
jge
bound
mov
dec
rcrl
sti
cmp
pusha
mov
mov
jbe
lods
add
push
int
sbb
aaa
xor
movsb
popa
leave
xor
test
jbe
fldcw
mov
push
jnp
jb
push
push
les
loopne
outsl
and
jno
sbb
add
std
loop
hlt
aam
sbb
popa
jnp
dec
sahf
and
xchg
insb
aaa
mov
adc
dec
das
out
addr16
dec
scas
dec
out
lock
insb
out
pushf
xor
sub
xor
imul
js
cmp
xchg
test
lods
push
mov
mov
cmp
sbb
pop
mov
pop
inc
sub
ret
xchg
lods
mov
cmp
adc
push
enter
push
cwtl
or
push
aas
test
jb
popf
andl
pop
testb
fstpl
movsl
test
stc
sbb
mov
cld
clc
bound
les
mov
cmpsl
adc
mov
js
dec
jnp
and
flds
cmp
xchg
inc
ja
adc
xchg
fildl
sti
mov
popf
or
ret
hlt
mov
cmpsb
arpl
pushf
cmp
xchg
mov
cmpsb
int
sbbb
ja
aad
sarl
gs
dec
push
ja
pop
inc
jns
jmp
push
inc
mov
add
push
sub
ds
cmp
dec
pusha
jne
xorl
loope
jge
mov
lods
mov
dec
inc
fwait
scas
push
jae
cmp
leave
outsl
repz
jne
mov
js
sbb
fs
adc
sub
push
out
fwait
imul
cs
adcb
mov
mov
adc
xchg
cwtl
insb
lret
mov
jae
xchg
clc
mov
cmpl
jns
rcl
repz
mov
out
sbb
mov
or
inc
adc
jge
shrb
bound
or
outsl
mov
and
inc
sub
rolb
pop
mov
pop
xchg
dec
push
fisttpll
rcll
std
jge
cmp
idivb
les
jne
xlat
push
js
or
pop
and
test
roll
lea
andb
imul
cld
cmp
out
or
movsl
cwtl
push
lcall
aam
jmp
movsb
xchg
inc
loope
cmp
inc
sbb
ret
jae
xor
repnz
sub
rorb
cmp
pop
sti
push
and
bound
mov
sbb
sti
mov
sbb
adc
popa
shr
popf
int
add
fsubs
pop
sbb
std
or
jbe
sub
inc
pop
enter
push
inc
sbb
push
add
adc
cmpsl
aam
clc
xchg
out
cltd
or
repnz
lret
jns
int
add
cmp
pop
push
scas
lods
fsubrs
sbb
sbb
lds
push
mov
pushf
dec
test
pop
or
mov
cld
sbbb
xlat
outsl
sbb
pop
xchg
push
fcoml
js
cmpl
sub
mov
mov
or
stc
jae
movsl
daa
mov
call
ret
shrb
lret
bound
test
xorb
jne
inc
out
mov
or
pop
add
xor
xchg
adc
loop
pop
mov
lea
mov
inc
add
aaa
xor
xlat
stos
pop
fiadds
cmp
mov
sub
dec
sti
arpl
xor
aam
lret
add
lds
pop
or
fdivrl
mov
inc
and
or
and
jae
dec
js
std
or
imul
pop
pop
push
dec
sti
stos
inc
stc
jae
movb
fwait
inc
sub
mov
xchg
lret
insb
cmp
push
mov
aaa
or
xchg
adc
add
adc
icebp
ret
sub
jl
test
add
mov
add
add
cmp
dec
pop
lods
std
or
jnp
inc
arpl
out
aas
jne
push
lods
cltd
xchg
pop
dec
aaa
cmc
dec
mov
sbb
pop
mov
test
gs
sub
insl
mov
aam
stos
add
push
data16
outsb
or
xor
ss
dec
stos
leave
sti
in
push
pop
lret
push
fdivrs
stos
or
fsubrs
scas
or
mov
jle
jb
mov
ljmp
jnp
in
shrl
mov
jp
and
mov
jl
sbb
imull
int
xlat
iret
xor
dec
xorl
or
arpl
push
cmp
inc
push
inc
bound
fimuls
fdivr
sbb
inc
adc
out
cmp
jne
cmp
movsl
int3
push
mov
mov
andb
shrb
repnz
js
push
in
jno
add
pushf
fiaddl
push
aad
es
and
jbe
fiaddl
pop
cmp
jns
push
push
pop
imul
sbb
cmp
arpl
pop
add
sub
dec
push
pop
xchg
mov
push
iret
jp
js
lahf
test
cmp
jno
adc
sti
cmp
xor
movb
cmp
aad
sbb
pop
shrl
adc
mov
sub
xor
cld
fisubrs
push
sti
pop
iret
jae
cmp
jno
add
jg
adc
movsl
jne
jg
ss
das
fnstcw
xchg
and
loope
or
insl
icebp
into
mov
xor
mov
jno
mov
aam
std
movsb
cmp
and
add
iret
or
shl
in
pop
imul
mulb
out
pop
push
cltd
push
sub
mov
xor
mov
idiv
in
aaa
inc
add
nop
adc
cmp
fmuls
cmp
mov
or
aaa
adc
mov
xchg
cmp
pop
sti
outsb
cwtl
cltd
sub
sbb
fsubrp
or
fcmovnu
mov
jnp
aad
add
ret
adc
in
fs
out
mov
lcall
sub
idivl
data16
repnz
in
movsb
cmp
fcmove
out
mov
movsb
mov
jge
pop
loope
aas
stc
into
test
pop
mov
xor
daa
mov
jns
jnp
jmp
xchg
ljmp
out
push
sub
mov
movsb
mov
out
ss
sbb
imul
inc
aas
sub
jle
and
stc
push
mov
enter
pop
pop
xor
fcmovnbe
ss
add
fwait
sub
outsl
clc
fdiv
sbb
mov
rcrl
ret
pushf
daa
xlat
sahf
insb
sub
lret
sahf
lret
stos
data16
sbb
cltd
push
inc
movsl
aaa
in
pop
pop
mov
push
cmp
xor
push
sbb
pusha
movsb
in
cwtl
and
test
cmp
rorb
stos
repnz
hlt
cmpsl
hlt
test
test
pop
test
pop
push
pop
ljmp
inc
mov
or
jmp
in
ss
divb
sbb
xor
jl
xchg
popa
pop
insb
ret
ljmp
lods
mov
lods
push
andb
push
mov
and
ja
nop
mov
dec
fnstsw
adc
adc
scas
and
dec
or
out
xor
scas
and
sti
cmp
sahf
insl
ret
dec
xchg
push
mov
imul
iret
shll
jbe,pn
in
xchg
fstps
push
sub
mov
jae
test
sahf
out
rcrl
jg
rcrl
push
sub
pop
cmc
insb
loope
xor
or
xchg
pop
sbb
imul
adcl
cmp
pop
fldcw
mov
fwait
inc
pop
xchg
cld
adc
push
sub
inc
push
popf
repz
mov
xor
adc
scas
imul
repz
fstl
mov
mov
lahf
mov
pop
insl
vpaddd
jo
xor
icebp
pop
jb
idivl
mov
lock
jge
loop
inc
out
das
icebp
sbb
jg,pn
sbb
mov
out
push
out
dec
inc
aas
arpl
flds
or
ss
jecxz
mov
push
mov
pop
xor
sbb
loope
and
enter
adc
mov
dec
or
mov
ret
add
fs
mov
loopne
je
jae
sar
fsubs
inc
rep
jg
inc
jp
cmp
sarl
push
xor
xchg
adc
movsl
xchg
lods
xchg
insb
dec
out
cli
xchg
lods
aas
movsb
stos
add
aad
inc
cli
in
outsl
cmc
popf
push
pushf
jp
outsl
mov
mov
cmpsb
ss
mov
mov
stos
imul
sarl
aam
sub
pop
sub
repz
dec
outsb
rorb
je
dec
jnp
sbb
xchg
fst
push
adc
mov
fcompl
lock
pop
imul
fsubl
xchg
sar
inc
push
xchg
or
and
fldcw
arpl
stos
cmp
aam
and
fwait
dec
outsb
push
push
lods
or
outsl
xchg
cmp
pop
outsb
lret
and
punpcklwd
gs
sbb
lea
int
cmpl
mov
fsubl
mov
sub
lock
shr
pop
mov
call
pop
fmull
cmp
shll
scas
xchg
rcll
add
and
popa
sbbb
jg
rcrb
insb
adc
inc
mov
movsl
out
les
ljmp
pop
mov
lods
sub
adc
repz
mov
and
int3
sbb
lods
jb
aam
mov
mov
into
dec
ljmp
pop
insb
mov
and
pop
repnz
pop
das
and
je
ss
int
push
icebp
clc
fcmovb
sbb
int3
insl
inc
pop
pop
and
dec
mov
int
hlt
sub
sub
sbb
jle
loope
sub
fucomi
lods
push
push
mov
jns
and
sub
jle
shl
repz
pop
jmp
es
mov
jns
in
sbb
mov
push
bound
pushf
push
adcb
movl
inc
lahf
add
in
mov
loop
or
sub
cmp
test
out
stc
add
cmp
jmp
cmp
inc
dec
and
ret
adcb
xlat
jmp
jp
dec
subl
fists
xor
gs
cmpsl
push
out
mov
cmpsb
mov
ja
or
pushl
pop
stos
or
cmp
in
ret
mov
imul
dec
and
pandn
mov
xor
je
lret
mov
imul
syscall
xchg
mov
cmc
test
xchg
lret
mov
sub
cmpsl
insb
pop
sbbl
stos
xchg
add
cmpsl
push
int3
dec
push
stos
push
add
loopne
leave
repnz
ret
xor
sub
lcall
ficomps
mov
fwait
mov
xchg
iret
out
or
rcrl
jno
imul
mov
pop
jecxz
fcompl
mov
dec
add
xchg
fisttps
mov
inc
inc
or
push
jg
ss
cmc
adc
jnp
ficoms
loope
fyl2x
iret
les
mov
je
or
loopne
add
out
pop
pop
mov
mov
in
pop
adc
adc
sub
aad
loop
repnz
mov
stc
adcl
mov
dec
lahf
lahf
jp
addr16
ret
cmp
out
pop
sti
pop
gs
lahf
je
in
pusha
sbb
push
xor
fdivrl
lods
jnp
cmp
roll
daa
aaa
jp
filds
shlb
mov
sbb
and
test
lods
fs
add
dec
and
xorl
ljmp
xchg
pop
xchg
lret
clc
jecxz
test
or
test
fldl
rorb
push
mov
xor
add
pop
sbb
ja
jb
fsubl
or
mov
test
mov
push
mov
fstps
bound
sbb
sub
push
pop
lret
pop
add
jb
jae
leave
jno
pop
jl
dec
dec
lock
enter
inc
mov
mov
add
into
lods
push
dec
jne
int
out
test
push
mov
or
out
lea
ljmp
fimuls
jecxz
jae
cmp
ret
add
test
mov
inc
jge
and
lret
imul
int
data16
aaa
xlat
inc
push
ret
xchg
ficoml
or
int
dec
sub
lea
into
mov
in
aad
sub
sbb
decb
add
mov
test
xchg
jp
push
out
mov
add
mov
out
or
pop
mov
or
xchg
daa
xchg
jecxz
adc
cli
hlt
loopne
adc
adc
clc
jecxz
addr16
inc
gs
push
cmp
xchg
adc
aaa
mov
sbb
nop
loopne
cmc
aam
mov
out
adc
pop
sbb
pop
clc
xor
cli
cmp
sbb
hlt
jg
clc
jp
jmp
adc
push
and
lods
push
out
in
out
dec
or
dec
fisubs
mov
je
xor
mov
mov
out
outsb
jg
decl
scas
js
test
daa
lahf
enter
sbb
sbb
ret
shll
and
call
add
jns
fwait
das
dec
call
dec
sbb
aas
dec
fisubs
jp
cltd
fcompl
aas
inc
mov
stos
lret
cltd
rcl
mov
and
adc
mov
out
dec
or
mov
mov
aaa
mov
dec
push
pop
les
in
sbb
or
outsb
out
ds
cwtl
stos
and
sahf
mov
test
lcall
sub
jno
popa
cmpsl
cmp
arpl
mov
lret
cmpsb
jmp
test
jle
stos
xor
mov
imul
dec
in
xor
add
rorl
cwtl
movsl
mov
cmp
push
hlt
repnz
dec
fldl
std
push
out
inc
addr16
lret
loop
add
bound
adc
xchg
mov
loop
in
sub
pop
sub
ret
add
mov
mov
daa
lcall
mov
pop
negb
sub
cld
test
mov
fcmovnu
cmp
jo
ficompl
ss
not
xchg
dec
or
fcoms
ds
sub
cmp
push
repz
fs
mov
movsb
or
add
dec
int
out
or
xor
sub
push
push
popf
xor
sbb
mov
jge
test
mov
mov
daa
add
syscall
jnp
push
push
cmpsl
mov
fsts
mov
xor
dec
js
pop
pop
or
jno
pop
mov
jg
push
outsb
adc
sahf
rcr
jns
js
lock
lds
sbb
pop
mov
mul
pop
jae
mov
ret
fmuls
mov
cli
sbb
jl
jl
jmp
jl
xor
hlt
mov
bsf
fdivl
pushf
sbb
cmc
jb
mov
dec
cmpsb
dec
xor
xchg
cmc
fiaddl
push
cmc
dec
fwait
cmp
pop
xchg
inc
mov
test
add
subl
inc
push
mov
mov
imul
std
xchg
inc
aaa
inc
movsl
xchg
dec
xchg
cmp
mov
andl
or
mov
push
loopne
ret
add
out
cmpsl
cltd
mov
in
push
xor
jo
and
dec
mov
lds
fucomip
cmp
jae
jb
xor
push
cld
add
iret
out
xchg
xchg
fchs
jne
lret
fcmovnu
or
jns
cmpsb
xchg
xor
sbb
test
cmp
add
rclb
adc
add
mov
rcr
jle
push
dec
pop
push
aam
or
sbb
mov
push
imul
and
cmp
test
adc
fucomi
orl
cld
ja
mov
adc
jb
adc
fsubs
sub
mov
jb
and
sbb
enter
xchg
clc
sub
scas
cmp
ja
mov
das
inc
lcall
or
cmp
out
sub
jecxz
jns
cli
and
pop
pop
mov
mov
lret
ret
enter
jb
cmpsl
inc
jmp
sbb
add
sbb
jmp
mov
push
add
xchg
or
adc
mov
sbb
int
out
xchg
and
xadd
aam
loope
mov
cld
gs
dec
lds
imul
xor
insb
push
int3
stos
sub
mov
add
mov
pop
pop
pop
jbe
aam
enter
scas
adc
jge
xchg
mov
sub
icebp
nop
test
sti
adc
insb
je
add
dec
ret
rcll
jno
fs
imul
lret
push
aad
xchg
mov
roll
shrb
jb
out
dec
jo
cmp
bound
dec
cmp
outsb
shr
mov
pop
lahf
inc
cld
pop
aam
inc
shrb
sub
or
popf
aas
jl
inc
shrl
lcall
insb
repnz
inc
mov
mov
cmp
sub
mov
mov
add
mov
ss
push
or
sbb
or
aaa
xchg
or
cmpsb
ret
test
cs
mov
mov
stos
div
in
dec
jmp
dec
push
dec
push
call
sub
add
dec
and
pop
and
lea
cld
cwtl
push
sbb
jmp
fisubs
mov
or
pop
add
orb
loopnew
jmp
int
sti
icebp
or
push
scas
cmp
jl
inc
inc
rcr
add
or
dec
ljmp
mov
sub
or
mov
pop
mov
adc
addr16
xor
call
test
inc
adc
in
fmulp
jne
mov
movsb
aad
cmp
pop
xchg
dec
scas
jb
popf
xchg
mov
adc
scas
int
fs
dec
xor
cmp
cmp
scas
dec
int3
xchg
mov
sbb
inc
into
inc
arpl
dec
xor
lret
bnd
cld
fcmovu
fcmovbe
dec
pop
dec
insb
xchg
lock
mov
lret
adc
pusha
les
insb
lret
and
loopne
adc
nop
mov
mov
loop
sbb
out
mov
ficompl
clc
test
lods
je
adc
sub
adc
push
fnclex
inc
ret
add
cmpsb
push
pop
mov
adc
cmp
or
loope
js
inc
mov
sarl
testl
movsl
in
std
outsb
cld
stc
outsl
gs
inc
rolb
fst
pop
mov
sub
repz
adc
psrad
jnp
jmp
sbb
jmp
in
mov
mov
jecxz
dec
inc
fimull
mov
outsb
xchg
mov
ljmp
loop
pop
andl
rclb
cmc
mov
ret
and
jne
mov
pop
push
jnp
inc
push
in
add
es
pop
daa
jecxz
or
nop
mov
mov
sbb
sub
pop
iret
ja
dec
cmp
daa
stos
adc
hlt
jmp
lea
or
ljmp
jle
scas
addr16
insb
jb
test
test
insl
sub
cli
outsl
arpl
outsl
je
cmp
pop
xchg
dec
push
jno
ret
arpl
rcrl
mov
int
jns
pop
scas
xchg
pop
das
imul
pushf
imul
xchg
dec
iret
cmp
ret
mov
pop
mov
lgs
movsb
add
jle
or
outsb
pop
push
add
jb
sub
adc
mov
icebp
std
mov
sbb
lods
loope
test
test
aad
dec
mov
add
sub
xchg
sarl
mull
mov
xchg
jnp
mov
les
dec
hlt
xor
jecxz
in
pop
cmc
inc
mov
lret
lods
push
jo
ss
pushf
fisubs
fs
sbb
mov
mov
jnp
xchg
pop
xchg
sarb
lds
and
movsl
rcll
cmp
xchg
leave
inc
or
test
roll
out
out
ret
pop
shll
popf
mov
pop
push
cmpsb
lods
rcrb
mov
mov
adc
inc
mov
dec
fiaddl
xchg
clc
jl
push
jle
push
test
inc
jecxz
push
mov
cmp
fisubrs
cmp
jns
popa
pop
mov
fisttpl
lods
or
cmp
cmp
mov
jns
sub
lahf
imul
cmpsb
cmp
mov
xchg
loopew
int
js
js
mov
jo
or
adc
fcoms
inc
into
adc
movsl
insb
mov
ret
test
jo
flds
rolb
into
push
jp
mov
xor
cmc
mov
sub
push
cmp
fiaddl
inc
and
jns
and
jb
je
call
cmp
repz
mov
mov
hlt
add
sahf
pop
inc
orb
hlt
add
mov
pop
lahf
adc
mov
sub
out
test
pushf
lret
mov
pop
push
ficompl
jne
shlw
or
ljmp
sub
mov
cmp
adc
cli
andl
clc
aas
mov
in
mov
shlb
jg
addr16
mov
sub
rolb
push
xor
outsb
xor
mov
sub
pop
push
punpcklwd
movsb
insb
mov
add
mov
mov
add
jae
dec
adc
adc
mov
mov
cmp
dec
adc
sbb
ds
mov
sahf
lahf
fdivrl
call
push
xor
xlat
cwtl
or
fildll
xchg
jmp
add
stc
and
test
shll
mov
push
and
cmpsl
inc
and
mov
fistl
push
jae
jnp
sub
lods
cli
mov
sarb
cmpsb
cld
lret
es
pop
out
push
sub
sub
popa
dec
pop
xor
popf
cmp
xor
pop
lret
adc
ds
insl
dec
pop
cmp
daa
xor
in
and
mov
xor
mov
sbb
addr16
adc
xchg
mov
std
or
inc
dec
imul
lahf
imul
or
pop
call
cmpsl
pop
arpl
push
in
push
dec
insl
into
pop
rcll
ja
mov
lret
popf
loop
daa
jecxz
add
sbb
les
add
testl
adc
push
sub
xchg
sbbb
jmp
or
dec
ret
inc
andb
loope
stos
ret
adc
mov
movsb
fcompl
pop
mov
xor
push
jno
jge
jbe
xchg
stc
aas
sbb
inc
aad
mov
lret
arpl
cwtl
outsl
pop
leave
jle
fcmovb
xor
cmpsl
fstps
xorb
mov
or
adc
adc
lods
xor
jns
lea
addr16
daa
loop
aam
mov
pop
sub
xor
mov
fs
icebp
imul
mov
in
sub
mov
movq
jg
add
sbb
out
hlt
push
sti
pop
pop
call
int
sub
xlat
loope
sub
lret
and
xor
popa
push
inc
movsb
imulb
icebp
mov
pop
cmc
sti
cmpsl
aaa
cltd
inc
inc
push
test
adc
inc
jb
std
clc
xchg
cmpsb
clc
stos
je
lock
mov
and
xor
movsb
imul
add
cmp
xchg
pusha
rcrl
scas
out
jne
shr
lock
add
pusha
xchg
pop
fs
and
sbbl
mov
mov
xchg
aad
pop
sbb
ficompl
lds
notb
sub
js
addr16
fwait
les
arpl
fistpl
mov
cmp
xorb
pop
xchg
orb
push
or
pop
aad
nop
xchg
sahf
pop
nop
jl
test
js
xor
lods
jno
jmp
xchg
add
pop
or
test
sahf
xchg
lods
loopne
or
mov
or
cmp
add
dec
mov
xor
push
jp
pop
loopne
movups
add
ja
iret
pusha
sub
jl
or
push
movsb
push
push
jl
daa
out
es
shlb
xor
mov
jle
jne
mov
insb
clc
cmpsb
pop
sub
imul
xor
mov
lcall
cmp
cmpsb
pop
test
popa
jb
pop
cmpl
stc
std
pop
in
loopne
fidivrs
pop
fs
lcall
mov
cmp
dec
cmpsl
jle
xor
xor
xor
sub
cli
cmp
stos
jmp
iret
jno
xchg
dec
clc
int3
lods
and
rol
adc
cltd
imul
jl
in
scas
push
fistl
xchg
push
ret
aam
imul
mov
pop
fistl
or
stc
cmpsb
xchg
aaa
mov
xchg
bound
in
in
frstor
pop
inc
adc
pop
outsl
dec
sub
lcall
dec
ret
pop
ja
lahf
adc
test
jmp
stos
and
std
xchg
sub
rolb
or
jp
insl
sbb
sub
push
add
dec
or
pop
sbb
jb
add
insb
loop
pop
push
ss
daa
xchg
mov
bound
gs
cmpsb
pop
clc
xlat
imul
insb
ret
jo
imul
orb
pop
stos
xchg
xchg
subb
xor
or
into
outsl
iret
pop
cli
lods
pusha
bound
mov
xlat
adc
dec
pop
pusha
jecxz
in
lds
mov
mov
lds
lods
rol
jg
sarl
out
icebp
shl
setg
sub
shrb
or
cmp
lods
mov
xlat
lds
cmpsb
push
sub
orb
adc
scas
es
mov
stc
xchg
aaa
and
std
inc
sbb
cli
xor
cmp
movsb
cmp
sub
adc
dec
test
sub
es
xlat
cli
mov
cltd
inc
pop
adc
dec
sbbb
pop
jge
xor
add
mov
inc
pop
andl
ljmp
sbb
push
cmc
xor
sub
mov
cmp
fdivl
jg
inc
sbb
dec
push
mov
ds
lret
shrl
gs
insl
ret
sbb
pusha
mov
dec
insl
xor
xor
sub
shl
idiv
mov
cwtl
pop
mov
imul
int
sub
xchg
jl
mov
cmp
inc
mov
scas
daa
pushf
push
arpl
push
push
add
in
mov
mov
fdivl
sbb
fistpl
fisubl
xchg
sub
stc
ljmp
mov
test
lahf
jne
mov
nopl
jl
test
loope
mov
scas
xchg
into
sbb
jne
daa
dec
scas
outsb
push
sub
and
push
push
jge
or
xchg
adc
xor
push
mov
movsl
fsts
adc
add
push
jp
dec
xor
push
mov
jnp
jg
scas
push
iret
rcrb
jbe
lret
clc
pop
outsb
ficomps
in
addr16
sbb
iret
xchg
insl
xchg
xor
cmp
aas
movsb
outsb
dec
test
pop
push
xchg
and
clc
in
add
fdiv
jnp
sbb
cmp
test
mov
inc
xorl
pop
jbe
mov
mov
fildll
dec
fsubrs
popf
xor
sbb
inc
cmp
cmp
inc
and
lods
add
jo
loopne
aad
or
mov
lahf
pop
cltd
jo
xor
adc
mov
daa
pop
test
gs
out
nop
sarl
jle
outsb
and
call
movl
sbb
add
data16
cmpsl
insb
ss
ljmp
in
test
or
xchg
lret
and
fisubs
xor
pop
cmp
xorb
nop
lds
cli
outsb
mov
jmp
jle
scas
imul
movsb
xor
stc
and
mov
cmp
fcompl
and
add
sbb
ljmp
xlat
sub
outsl
jae
or
adc
sahf
pop
mov
mov
push
xchg
sub
in
or
cmpsb
jo
rclb
dec
leave
xchg
cmp
cmp
popa
aaa
dec
push
mov
add
out
pop
fwait
out
loop
stos
mov
pusha
popa
sbb
dec
aam
xchg
gs
lods
pop
mov
and
sbb
sbb
movsl
mov
hlt
sub
ja
mov
pop
aam
lahf
aam
add
ljmp
cmp
clc
or
dec
sub
repnz
pop
adc
mov
test
loopne
sbb
movsl
int3
push
mov
jle
and
ljmp
push
out
cli
mov
cmp
in
push
xchg
movsl
inc
inc
inc
jg
outsl
test
or
pop
jmp
jne
fsts
aad
pop
test
lock
push
cmpsb
push
int
je
adc
inc
mov
and
pop
push
xchg
jno
jmp
loopne
dec
test
mov
xchg
movsl
or
mov
mov
dec
cmp
loopne
adc
mov
ja
in
mov
lock
loop
push
mov
and
dec
fdiv
popa
fsubs
repnz
call
or
jmp
dec
insl
sahf
xchg
inc
test
orb
ret
data16
movsb
insl
mov
mov
sub
jge
testb
frstor
xchg
dec
push
jne
repnz
push
popf
jl
mov
fstpl
fistl
and
nop
test
mov
vmovsd
sti
or
dec
sahf
mov
xor
jae
out
sbb
jl
xchg
pop
aas
cmpsl
sahf
pop
pop
sub
loopne
in
and
and
std
xorb
ljmpw
out
shrb
mov
pop
jle
and
std
imul
out
cmpsb
and
ja
mov
int
jmp
cld
out
push
sbb
ret
nop
daa
mov
daa
repnz
cli
addr16
fildl
add
shl
bound
jp
dec
mov
or
and
ja
pusha
or
jne
jno
ja
pop
sbb
jnp
dec
ror
popf
std
xchg
jae
iret
or
sbb
mov
lods
scas
in
nop
xchg
rclb
xor
lret
mov
out
test
cmpb
roll
fbstp
nop
testb
xor
push
pop
clc
stos
hlt
data16
fldenv
iret
cmpsl
mov
in
loop
pop
ret
pushf
pop
in
pushf
inc
adc
adc
pop
push
cmpsl
js
loop
mov
fildll
sub
mov
hlt
push
stc
outsl
pusha
pop
mov
lcall
into
negb
jmp
adc
adc
mov
cld
cmp
fldl
push
ficoml
punpckhdq
sbb
nop
cmp
icebp
push
test
shll
dec
dec
rclb
repz
iret
pop
in
push
or
cmp
mov
test
inc
stc
push
and
jo
push
pop
dec
pop
pop
xor
fwait
iret
jge
push
fdivrs
and
and
stos
cmp
mov
pop
xchg
lret
fisttps
cmp
pop
add
addr16
mov
or
nop
lea
adc
fadds
cmp
and
pop
xchg
fisttpll
leave
jmp
mov
sub
fidivl
pushf
inc
call
les
pop
jns
cmp
dec
aam
rol
xchg
pop
dec
jge
pop
dec
sarb
ror
fisttpl
loope
ljmp
push
cli
out
sti
adc
push
rolb
lret
lea
outsb
mov
sub
add
imul
push
gs
xor
mov
sbb
mov
mov
dec
test
daa
test
mov
cmp
pop
outsl
adcl
leave
push
scas
push
push
repnz
xor
add
mov
mov
mov
push
cmp
rol
mov
int3
arpl
sbb
cmc
or
adc
push
dec
rcrb
push
shl
add
ss
cmp
sub
stos
pop
dec
lds
mov
scas
jmp
sbbl
or
jns
ljmp
push
dec
ljmp
mov
pop
ja
xchg
movsb
cwtl
popa
bound
mov
adc
leave
add
mov
add
xor
sub
inc
cwtl
setbe
es
test
fimuls
push
cli
mov
ret
ret
fmuls
push
push
sub
out
xlat
pop
pop
mov
ret
jg
pop
repz
int
adc
mov
add
imul
add
sbbl
mov
cld
out
hlt
and
pop
shrb
pop
sbb
cmp
inc
xchg
pop
mov
in
loop
sbb
js
loop
out
lcall
mov
or
or
out
cli
loop
mov
or
and
mov
js
push
adcl
pop
cmpsb
lret
movsl
jbe
and
mov
mov
int3
xor
decl
xor
ficoml
push
or
mov
lods
ficoms
outsb
je
add
jne
mov
ret
xchg
and
dec
fldenv
cmp
mov
cmp
test
or
cmp
fnstenv
and
rcll
push
lret
cmp
or
mov
xor
mov
pop
aas
xor
cvtps2pi
mov
movsb
pusha
repz
dec
xor
mov
fnstsw
sub
mov
adc
fisttps
cmc
in
cli
bound
mov
jle
xchg
jge
mov
and
fistps
sti
adc
sub
popf
pusha
cli
ss
fldcw
cmc
mov
adcb
jns
and
jo
mov
loop
cmpsl
movsb
insl
dec
loopne
ret
xor
pop
push
push
and
xor
shl
daa
lea
or
xchg
add
arpl
xchg
mov
or
fadd
sbb
and
push
push
pushf
adc
push
outsl
mov
xor
sbb
and
add
adc
fsubp
iret
hlt
mov
dec
jo
test
lcall
sub
dec
test
jp
pusha
gs
int3
sarb
mov
push
xor
dec
sbb
out
leave
pushf
sub
setne
or
test
insb
or
fildl
icebp
add
lods
je
icebp
pop
popl
addr16
pop
int3
mov
jne
mov
adc
mov
or
repnz
push
add
int3
inc
sub
aas
outsb
int3
testl
pop
jle
arpl
imul
mov
ljmp
stos
push
xchg
loopne
inc
stc
mov
daa
scas
xorb
pop
push
lds
jb
icebp
cmc
sbb
mov
push
jae
outsb
inc
cmpsb
aaa
mov
aaa
xor
xchg
negb
into
push
adc
and
fnstenv
jb
sbb
addl
and
jb
jae
cmp
push
or
sbb
shll
dec
out
out
and
and
pop
call
scas
mov
inc
dec
xor
pushf
arpl
aaa
test
inc
or
adc
or
inc
jae
rcll
xor
gs
roll
out
test
enter
bound
lcall
inc
jb
divb
cmc
lock
push
std
shlb
pop
xchg
pop
mov
mov
ret
fisubrl
mov
mov
arpl
adc
icebp
xor
stc
dec
add
sub
push
test
mov
jl,pn
xor
jl
enter
jge
test
add
push
incb
in
adc
xchg
jg
cmp
negb
ja
jmp
jmp
jb
pop
pop
inc
cli
jl
mov
lret
int
iret
ret
ds
mov
mov
lods
cmp
repnz
jnp
or
xchg
add
adc
cs
inc
out
mov
mov
xchg
int
scas
or
testl
add
pop
outsb
push
xor
add
inc
out
mov
loope
pop
cwtl
iret
mov
xor
out
pusha
ljmp
ret
push
or
shlb
arpl
push
xor
jmp
mov
jl
jno
push
test
mov
cmp
clc
sbb
adc
das
jmp
repz
xchg
xchg
xor
jo
mov
jo
outsl
mov
xchg
fimuls
sbb
imul
loope
ja
fwait
adc
out
mov
cmp
push
repnz
fsubs
stc
adc
rcrl
jnp
or
or
jmp
sub
sbb
cltd
adc
inc
jge
mov
dec
xchg
push
movsl
add
cmp
adc
outsl
cs
lahf
pop
or
mov
mov
jo
test
pop
mov
push
std
cmp
jecxz
fisubrs
repnz
in
xor
lcall
cmc
cmp
inc
mov
leave
test
and
inc
mov
fildll
add
xor
out
outsl
ret
gs
push
addb
mov
rorb
sti
mov
adc
cs
add
lcall
push
cmp
and
pop
mov
pop
jge
ss
loope
or
jo
rcll
imulb
hlt
loope
and
std
shr
loop
xchg
movsb
jge
test
sub
dec
scas
sbb
xchg
inc
push
push
into
addr16
or
mov
add
shlb
lods
sub
xchg
into
adc
inc
scas
mov
testl
mov
adcb
fwait
inc
adc
mov
xchg
xchg
pop
adc
fiadds
outsl
xor
daa
repz
es
adc
xchg
repz
cmp
clc
or
out
ljmp
sar
mov
shlb
pop
rolb
adc
lcall
push
xor
icebp
aad
jae
arpl
sub
std
loope
cmpsl
or
lds
cmp
hlt
je
jle
outsb
mov
push
mov
mov
dec
push
js
loope
popa
push
sub
into
cmp
lods
jmp
mov
cmp
inc
pusha
sbb
jecxz
dec
arpl
call
sbb
push
pop
dec
xchg
pusha
sbb
mov
ja
pop
or
cmp
or
push
repnz
and
pop
sbb
xchg
push
push
mov
jle
pop
push
jne
jmp
add
sbb
arpl
rorl
push
filds
sti
dec
cmp
js
es
push
iret
hlt
sub
shrl
cmp
das
inc
frstor
push
jl
jg
incb
imull
in
je
inc
repnz
loopne
popf
mov
jno
lds
arpl
adc
lds
stc
add
push
sbb
das
cltd
push
int
xor
cmp
or
fimull
add
outsb
dec
xchg
bound
inc
sub
fistl
addr16
imul
ljmp
ljmp
mov
xchg
or
fildll
dec
xlat
push
and
ror
sub
pop
cmc
mul
and
jmp
test
sbb
dec
sub
adc
cmp
cmp
pop
and
sbb
or
lret
lock
ret
add
jb
test
addr16
inc
ret
scas
xorb
jno
add
ds
push
fwait
pushf
subb
int
int
test
insl
xchg
add
xor
icebp
in
cwtl
mov
bsr
sbb
push
lock
xorb
adc
clc
sbb
ret
bound
fstps
mov
mov
jg
mov
outsb
ljmp
mov
mov
loope
divb
int
bound
cmpb
mov
mov
cld
add
dec
dec
insb
cmp
xchg
fcompl
ljmp
in
test
shrl
scas
ss
sub
sbb
dec
sar
int
and
outsl
sbb
loop
mov
fldcw
cmp
cwtl
pop
out
mov
xchg
inc
fwait
xchg
js
sub
push
insb
lcall
push
daa
pop
fsubl
clc
and
sub
inc
mov
inc
xchg
mov
and
dec
mov
imul
arpl
fwait
jle
adc
xchg
rep
insl
decl
add
pusha
xor
movb
pusha
inc
jge
jge
shlb
and
subl
js
daa
xchg
stos
cmp
fistl
movsb
mov
stos
push
cmp
mov
daa
inc
cli
daa
out
mov
sbb
mov
xor
mov
push
lods
xor
out
xor
js
stos
pop
pop
jo
fldt
das
data16
pop
stos
out
shlb
int
sub
mov
push
mov
cmp
jns
push
mov
sub
mov
insl
dec
inc
cltd
clc
fidivrl
sub
cmp
in
cmp
sbb
lcall
push
xchg
sub
sti
jecxz
and
lret
call
popf
shlb
bound
jl
cs
into
jl
and
xchg
push
and
das
mov
loop
shrl
in
out
and
daa
jb
daa
push
aam
mov
fisttps
fistps
pop
pop
aaa
in
xchg
adc
pop
cmp
mov
out
stos
add
loope
mov
mov
shlb
test
push
xchg
push
pop
or
arpl
lea
sub
int3
inc
stos
jo
loopne
pop
xchg
jb
add
loope
ficoms
inc
mov
testl
cmp
subl
adc
pop
jl
ljmp
loopne
dec
mov
or
push
ret
jo
int
mov
add
data16
iret
inc
stc
out
push
mov
sbb
arpl
push
xchg
add
sub
pop
jge
orl
js
ds
adc
faddl
shll
xorb
push
dec
cmpsb
jb
aam
dec
and
enter
jne
push
pop
js
and
nop
mov
ret
jg
mov
push
cmp
push
mov
fcompl
fwait
je
mov
mov
jmp
fistl
lahf
aaa
dec
jb
sbbb
bound
mov
add
jne
cld
push
fmull
push
ds
jae
test
aas
pop
lods
test
loop
jecxz
cld
jmp
std
mov
out
loope
push
lret
mov
bound
shrl
mov
lods
xchg
add
sbb
aaa
lcall
js
jnp
icebp
push
cmp
mov
cmp
cli
cmp
push
scas
sahf
xchg
push
outsb
test
jb
rcl
mov
imul
mov
bswap
sub
repnz
mov
or
add
xchg
ret
ret
je
fmuls
rcrl
movsb
adc
lods
and
outsl
adc
and
and
inc
jmp
mov
movsb
int3
adc
xor
sub
les
unpcklps
ss
jmp
shrb
mov
negl
rolb
jno
popa
xor
je
push
xor
sub
mov
add
pop
xor
imul
pop
movsl
gs
xchg
mov
and
movsl
jbe
daa
dec
mov
gs
popa
adc
arpl
pop
and
repnz
jge
ss
ja
cmp
cmp
stc
or
xchg
add
dec
mov
arpl
int3
push
test
xor
mov
and
popf
fldcw
or
into
cmpsb
cwtl
aas
cmpsb
mov
sbb
jns
xchg
cmp
mov
test
mov
lcall
fldl2e
ss
sub
mov
xchg
xchg
cmp
sbb
pop
mov
jae
and
test
and
in
fstpt
popf
enter
sub
jno
lcall
cmpsb
inc
mov
rcll
or
jae
imul
jp
xchg
cmc
jo
repnz
test
rcrb
mov
lds
sub
xchg
out
testb
leave
imul
and
shrd
pop
dec
das
test
pop
dec
inc
test
pop
sahf
cmp
popf
dec
add
into
clc
lahf
and
pop
sub
add
xor
xchg
xchg
push
inc
iret
mov
mov
test
inc
movsb
clc
mov
xchg
xchg
rolb
pop
sub
das
mov
movsl
fdiv
pop
or
loop
pop
adc
xor
lret
mov
mov
repnz
testb
out
push
mov
lock
lret
jno
cwtl
push
push
xor
xchg
fcomps
leave
cmp
inc
dec
xchg
icebp
outsl
out
cmp
fisubl
notb
cmp
pop
push
shr
cld
insl
inc
adc
into
xchg
loop
dec
adc
ret
nop
adc
add
je
and
in
cld
sbb
mov
cs
jb
repz
jo
and
xchg
adc
cmp
repnz
jae
jo
outsb
lock
scas
sbb
inc
call
inc
in
jno
xor
inc
dec
cmp
lahf
mov
xchg
cmp
mov
inc
cmp
into
test
mov
mov
imul
addl
sbb
movsl
sub
pop
inc
sti
xor
xchg
sbb
pop
inc
mov
scas
jle
aaa
push
fistpll
pop
fsubrl
sbb
cld
out
aas
enter
aam
xchg
push
cmp
out
daa
imul
inc
loope
js
pop
dec
cs
and
test
lret
jo
test
pop
adc
xchg
inc
repz
sbb
cmp
push
scas
aas
add
cmp
xchg
xlat
fnstcw
ret
fnsave
cmpsl
enter
int
mov
and
push
out
and
xor
repnz
sbb
mov
loope
mov
jl
dec
stos
movsb
imul
cmpsb
popf
and
push
sub
dec
add
gs
push
push
pop
aaa
push
mov
cld
and
and
jns
fistpll
push
gs
ret
add
cltd
xor
cwtl
into
fidivl
inc
aas
pop
fs
mov
adc
cmc
dec
jl
call
xchg
in
movsl
lock
es
in
adc
scas
or
adc
mov
jecxz
test
dec
add
or
pop
outsb
sub
and
sahf
xor
sbb
test
popa
fldl
insl
push
addl
or
dec
mov
in
ja
cli
sbb
mul
out
das
imul
divps
xchg
sbb
pusha
stos
arpl
cmp
push
cmp
daa
in
aas
sub
sub
imulb
dec
in
sub
inc
jo
into
mov
cmpsl
ret
or
jl
cmp
pop
pop
or
pushf
add
pusha
dec
hlt
and
scas
sbb
xchg
js
cmp
cmpsl
enter
xchg
not
shrb
out
cmp
xor
adc
call
jbe
pop
fstpl
fidivrl
cmp
mov
nop
insb
jge
sbb
inc
loop
in
fdivl
push
push
inc
dec
xchg
push
push
inc
mov
cmp
push
lret
mov
add
shrb
cmpsl
and
dec
nop
adc
xchg
inc
adc
fwait
hlt
sub
roll
xor
xchg
adc
fsts
shll
sub
and
pushf
xor
faddl
mov
jmp
or
aas
out
sub
lret
jo
addr16
mov
lahf
leave
inc
push
inc
sbb
ret
cmc
int
jg
test
sub
pop
sahf
xorb
lahf
xor
jbe
sub
cld
xor
orl
pop
mov
iret
pushf
push
and
lcall
imul
sarl
adc
pop
jg
das
test
mov
and
jp
pop
insl
or
mov
clc
loop
jae
nop
sub
inc
mov
cmp
sbb
sub
dec
clc
mov
mov
push
pop
mov
sub
scas
and
inc
aam
leave
loope
cmpb
loop
pop
inc
ljmp
les
ljmp
out
insl
cwtl
loope
and
insb
out
mov
fwait
imul
adc
movb
ret
mov
movsl
daa
fidivrs
in
jno
int3
sarb
imul
or
daa
outsb
add
sub
cli
stos
test
cld
aaa
dec
mov
and
dec
xchg
cwtl
xchg
push
pop
adc
jb
jl
imul
xor
cmp
push
pop
push
mov
div
pusha
jbe
scas
repnz
inc
sbb
cltd
xchg
inc
pop
sub
inc
out
ja
aam
arpl
mov
icebp
lret
pushf
cli
movsb
rolb
mov
sub
ror
pop
es
xor
mov
addb
sub
addr16
mov
mov
sbb
jmp
dec
out
mov
inc
mov
je
fnstcw
push
data16
sub
insl
rcrl
test
daa
cli
test
scas
int
xor
popf
in
sti
outsl
hlt
out
dec
and
daa
mov
and
outsl
mov
ja
push
or
dec
inc
cmp
mov
shll
fadd
cmp
js
pop
cmc
cmpsl
adc
pop
leave
call
pop
inc
dec
lea
fsubs
jo
push
sti
sbb
or
cmpsl
aad
ja
das
push
adc
mov
xchg
lret
jns
and
cmp
xor
pop
cltd
out
imulb
xchg
fsubs
jns
jl
dec
lret
lcall
push
cmp
test
stos
lods
xor
test
pop
push
cs
push
pop
gs
jb
vmwrite
jp
sbb
push
mov
popf
fistpl
cltd
jle
bound
ljmp
mov
pop
fs
sbb
pop
cmp
cmc
pusha
mov
or
enter
fwait
mov
mov
movsb
int3
rorl
popf
jb
icebp
inc
das
or
cmp
cmp
xchg
lods
dec
pop
std
outsl
mov
dec
pop
jg
bound
inc
sahf
aam
sub
mov
mov
jmp
push
mov
adc
cmc
cmpsl
add
test
xchg
icebp
mov
cmp
xchg
aad
or
ficoml
pop
add
jne
or
mov
lret
adc
stos
xor
adc
sub
sti
fcoms
fistl
xor
mov
lods
into
fucomip
hlt
ja
mov
leave
push
jge
in
test
sub
mov
push
and
aam
aam
fstl
mov
pop
jae
cmpsl
scas
popf
mov
addb
mov
out
mov
mov
xchg
lea
out
out
mov
xchg
ds
lcall
mulb
and
xchg
mov
or
and
shr
les
sbb
aam
xchg
insb
lods
pop
push
pop
inc
push
mov
pop
push
xor
fdivrl
popa
adc
daa
dec
fcmovbe
lods
gs
jbe
testl
sub
jg
inc
dec
lods
jp
pop
jmp
enter
mov
out
add
add
notl
mov
sbb
sahf
cmc
mov
popf
pop
sbb
insb
mov
add
mov
lods
adc
adc
inc
inc
or
add
xchg
mov
fwait
ret
fidivl
push
cmp
rcll
rcl
cld
jns
bnd
call
hlt
push
ljmp
cs
movsl
pop
sub
mov
xor
adc
movsl
xchg
mov
push
add
popa
fmuls
push
cmp
hlt
sub
mov
adc
xor
pushw
jg
or
outsl
popa
ja
xchg
fnstsw
gs
rorl
and
popf
les
mov
je
adc
out
mov
xchg
sbb
les
lods
sbb
stos
adc
imul
cmpsl
lods
insl
scas
lret
dec
bound
and
pop
dec
and
or
xor
mov
or
ret
mov
mov
pop
dec
add
lret
leave
cmp
or
sbb
fwait
sbb
cmpsb
adc
iret
adc
add
mov
js
mov
or
push
adc
cmp
push
ss
pop
inc
cmp
cmc
sarl
jl
sub
cmp
sbb
push
add
sub
mov
sbb
mov
inc
ljmp
stc
dec
cltd
add
in
push
fistpl
dec
and
jle
into
insb
repnz
add
add
jge
sub
jl
pop
mov
scas
dec
dec
pop
push
adc
add
insb
popf
repz
mov
xor
jnp
mov
ficoms
sti
mul
sbb
test
xchg
jg
mov
lret
hlt
inc
push
jecxz
push
mov
mov
adc
adc
or
stc
sub
out
mov
dec
xor
mov
stc
je
mov
or
adc
sub
fcoml
sub
xchg
inc
adc
add
sbb
out
jge
imul
sbb
aad
test
xchg
test
adc
je
mov
dec
call
xor
out
shrb
sub
jne
mov
gs
test
or
repnz
xchg
cmp
jl
test
test
fcompl
lods
in
cmp
mov
fisubl
sub
out
pop
mov
std
dec
idivl
jnp
jbe
shlb
and
es
jno
loopne
xchg
cmpsl
cmp
fwait
jg,pt
rcll
int3
push
or
or
cld
dec
je
test
loopne
sarb
mov
jns
ds
jbe
ret
aad
push
lods
xor
cmp
xchg
push
mov
aad
ds
shlb
out
lods
and
cltd
idivb
sbb
and
xchg
jns
pop
and
adc
dec
jl
repz
es
out
jmp
in
imul
xchg
pop
cltd
push
and
wbinvd
fidivrl
push
pop
jg
and
jb
ss
ficoms
leave
int
pop
pop
pop
mov
test
add
sti
cmp
cmp
push
xor
add
push
scas
clc
jp
push
fs
sbb
fisttpl
inc
sub
aaa
adc
loope
in
jbe
sub
and
repnz
push
les
pop
mov
jecxz
cmp
inc
sahf
in
or
jecxz
test
loopne
or
lods
push
out
out
mov
test
sti
mov
mov
and
xchg
stc
adc
mov
push
xchg
popf
jo
repnz
or
dec
shll
pop
ljmp
pop
andl
jno
cmp
dec
es
push
sti
imul
pop
cli
dec
mov
stc
adc
loop
pop
inc
inc
popa
jmp
pop
insl
lret
jae
cmp
in
push
jg
rol
push
and
loope
mov
int3
add
adc
cli
push
add
cli
push
mov
push
popa
xor
rclb
adc
mov
aad
mov
fldcw
or
jne
dec
xchg
mov
mov
loope
fistpll
mov
sub
mov
lods
imul
mov
xor
mov
dec
adc
into
mov
fwait
scas
insl
jmp
jae
lret
sarb
insl
imul
call
push
and
mov
cmp
mov
xchg
add
xor
xchg
std
add
push
push
mov
bound
sub
add
xchg
pop
es
ficoms
scas
aad
add
xor
pop
push
lahf
arpl
test
int
dec
pusha
jb
mov
outsl
and
xor
jmp
stc
rorl
jge
or
pop
lcall
pop
cmp
hlt
fucomp
xchg
sub
add
mov
lea
jmp
inc
stc
add
dec
add
ss
push
loopne
clc
insb
es
ss
popf
mov
lret
shl
addr16
dec
xor
addb
mov
loopne
dec
scas
mov
test
cmp
inc
aaa
pop
mov
sub
ja
xchg
dec
mov
sbb
cltd
mov
cmp
lods
adc
add
popa
cli
xor
mov
stos
inc
loope
mov
push
js
xchg
andb
ret
enter
sarb
and
pop
sbb
mov
push
aas
push
lds
outsb
popa
adc
xchg
or
xchg
cmpsl
testb
stc
rol
notl
mov
cmp
popa
pop
jp
dec
test
cli
xchg
mov
repz
lock
add
dec
lea
mov
test
sbb
je
ret
lds
sub
lods
arpl
pop
aam
mov
aaa
xor
enter
jle
sbb
jo
push
mov
xchg
imul
xchg
scas
xchg
sub
xchg
sub
mov
pusha
xchg
or
rorl
and
add
sbb
out
clc
mov
dec
mov
xor
in
es
jle
fsub
es
mov
lahf
lahf
mov
in
popf
mov
mov
adc
jbe
filds
adc
das
sbb
cld
movl
mov
add
aaa
mov
dec
and
enter
or
jge
jge
or
aad
push
and
aam
mov
inc
add
jl
xchg
xchg
xchg
xchg
imul
push
add
test
in
pop
jns
scas
lcall
out
pop
cltd
or
add
dec
cmpsl
fisubrs
mov
repz
ja
lds
pop
adc
clc
clc
in
ret
jns
mov
sub
mov
int
std
xchg
popf
mov
test
fdivr
mov
jecxz
dec
mov
xor
jle
nop
mov
pop
inc
xor
sub
lret
push
rcr
mov
xor
jle
sbb
adc
mov
jle
sahf
and
cwtl
mov
je
adc
out
les
clc
jb
into
jns
movb
pop
or
das
mov
push
leave
push
rcll
shrb
mov
out
mov
cmp
scas
sbb
xor
mov
sub
xor
iret
in
jle
cmp
add
dec
loopne
fcomps
jge,pt
fldenv
xchg
incl
hlt
mov
inc
adc
cmp
stos
sub
outsl
or
lea
mov
fsubrp
and
sub
stos
call
lods
fisubl
insb
aaa
xor
mov
notl
xor
pusha
fcmovbe
push
nop
les
movsl
test
sbb
cs
shl
pop
stos
cmpsl
sbb
jmp
lock
mov
sbb
cwtl
and
mov
addl
cli
lods
icebp
adc
xor
fdivs
loope
xchg
mov
cmp
jae
push
mov
or
add
mov
mov
sbb
xchg
mov
outsl
test
pop
inc
mov
adc
dec
pop
jp
stos
fstpl
ja
jno
scas
and
sbb
aaa
iret
push
ret
cmc
popf
out
test
addr16
push
pop
hlt
pop
pop
sub
add
js
pushf
orb
arpl
fstp
jbe
sub
aad
jae
popa
inc
pushf
mov
jge
idivl
dec
and
push
sahf
rcll
jbe
stos
mov
outsb
and
inc
mov
jns
movsl
jno
sub
cwtl
fistpl
dec
fisubl
int3
cld
or
int3
push
jbe
cli
add
popf
test
push
sti
aad
and
ret
iret
out
das
mov
or
nop
or
sub
or
jae
sbb
add
call
cmpsl
test
push
je
push
clc
push
loopne
rcrb
lods
xchg
lds
loope
mov
fcomip
aad
add
arpl
jnp
and
rcrl
out
xorl
mov
sti
fldt
or
sub
mov
jg
test
dec
jge
sbb
lods
xor
sub
mov
imul
repz
ret
pop
rclb
add
faddl
and
adc
xchg
inc
xor
xor
mov
stc
aas
nop
fistpl
lods
pop
out
jmp
mov
icebp
or
xchg
pop
sub
mov
rcl
mov
sti
xlat
pop
pushf
cmp
nop
rorb
addl
and
out
push
shlb
xchg
cmp
stos
stos
xchg
repnz
dec
push
fdivp
negb
pop
and
jl
fistpll
out
dec
and
push
das
mov
or
add
ja
mov
sbb
and
inc
inc
jg
mov
dec
out
jp
mov
jns
sbb
adc
sbb
push
adc
mov
xchg
push
repnz
pusha
addb
sub
in
imul
cmp
adc
jmp
test
cmc
gs
mov
jge
iret
add
dec
adcb
push
or
clc
fcmovnbe
fs
jmp
iret
scas
mov
mov
mov
test
inc
pop
sub
dec
jb
push
mov
fdivl
xchg
aas
adc
in
aaa
idiv
repnz
dec
mov
out
repnz
pop
jno
repz
mov
dec
or
clc
xorb
jg
adc
inc
xchg
jg
add
dec
push
pop
or
adc
test
dec
cmp
xor
out
sub
daa
add
mov
xlat
adc
mov
addb
add
lods
lcall
push
xor
aam
dec
icebp
jl
sti
mov
jg
rcrl
sub
out
in
xchg
mov
jae
rcll
out
inc
jle
cmpsl
js
jmp
shrb
les
xchg
int3
mov
fisttpll
jae
sarb
cltd
outsb
punpckhdq
jp
arpl
cmpsb
rolb
lcall
cmp
or
sbb
or
mov
inc
scas
pop
mov
scas
loopne
and
ds
xchg
cmpsb
out
cmp
sub
pop
lea
repnz
or
enter
ror
cmp
xchg
inc
aas
mov
divb
pushf
imul
out
in
mov
add
adc
jp
arpl
mov
sbb
xor
ss
xor
mov
cmc
push
inc
outsl
adc
cli
sub
or
fs
mov
push
cmpsl
pop
mov
stos
test
xor
push
repnz
icebp
dec
ret
mov
lcall
dec
inc
push
ror
cli
cmovb
popf
mov
les
cli
test
inc
lods
add
pop
jo
push
and
xchg
stc
push
outsl
push
push
in
mov
jmp
das
dec
mov
lret
cwtl
rclb
cmp
es
test
push
mov
lcall
test
loop
cmpsl
pusha
cltd
xchg
mov
or
in
repnz
js
sub
enter
dec
mov
push
add
cmp
xchg
xchg
iret
and
jl
movsb
mov
push
negl
pop
sbb
push
test
pop
or
pop
les
pop
fcompp
jl
sbb
pushf
push
insb
push
insl
arpl
inc
inc
int
loop
jo
leave
ljmp
fidivl
jecxz
ja
inc
dec
sub
fcomi
out
push
aas
push
pushf
ja
mov
fadd
adc
xor
stc
mov
push
mov
negl
push
loop
js
push
xchg
stc
or
sub
std
out
sbb
scas
xchg
movsb
loopne
sub
mov
fs
pop
dec
jge
movsb
ret
gs
mov
repz
xor
mov
imul
test
imul
shll
mov
and
jge
ds
shlb
push
push
or
adc
xor
in
push
sahf
sub
mov
hlt
mov
jp
loop
int3
and
sbb
ja
ljmp
add
mov
cmc
adc
xor
xor
pop
pop
or
sbb
std
pop
js
push
in
clc
in
xchg
aam
jns
jno
and
cmp
pushf
or
mov
inc
rcl
jecxz
fbstp
sub
inc
push
les
add
inc
sbb
rcrl
mov
insb
and
xor
add
lds
jo
ss
jns
push
test
pop
fdivs
rcll
lea
sub
adc
jecxz
std
ss
xchg
ds
mov
push
and
push
inc
pop
movsl
sbb
jb
sub
mov
mov
xor
mov
out
inc
dec
das
mov
lcall
adc
jns
and
push
fmull
insb
mov
jae
scas
dec
ret
jge
pop
nop
jno
mov
repnz
and
rsqrtps
adc
and
sbb
push
and
add
js
dec
cmp
data16
cmp
popa
and
scas
xor
pop
test
xor
clc
out
mov
movsb
ljmp
shrl
jnp
pop
xchg
pop
lds
sbb
pop
xchg
inc
mov
push
sub
insl
cmpsl
mov
fsubrs
nop
push
or
mov
lock
inc
repz
stos
mov
scas
imul
loope
pop
jg
outsl
push
fsubrs
push
and
push
sub
jno
mov
jns
movsl
in
fsubrl
xchg
ds
xchg
mov
sbb
ss
pop
mov
shlb
ficoml
rorl
and
mov
mov
in
inc
lahf
pushf
dec
xor
or
adc
mov
push
lret
and
xor
jno
popa
and
sbb
mov
add
aam
mov
popa
xlat
test
sahf
insb
filds
pop
pop
adc
add
roll
sub
scas
push
inc
add
pop
imul
je
jle
push
loope
push
cli
mov
ret
adc
cli
sbb
sbb
inc
pop
fwait
mov
jbe
jne
fistpll
les
and
test
pop
leave
loopne
pop
adc
jae
or
lahf
lret
loope
pop
shrl
imul
ds
pop
mov
sbb
dec
ficompl
add
adc
lods
jl
sbb
adc
sub
out
adc
fisubrs
insb
repnz
test
ds
ja
jecxz
gs
jl
add
clc
cmp
std
fldenv
dec
insl
and
lcall
xchg
cmp
or
pop
jmp
fwait
dec
mov
jb
out
jp
jl
fwait
mov
scas
xchg
popa
dec
in
daa
xchg
lcall
ds
insl
daa
cmp
add
ss
jmp
and
push
lret
aad
sub
add
lret
ret
iret
sbb
push
pop
cmp
inc
stos
xor
nop
roll
mov
lahf
rcll
addr16
sti
xchg
dec
xor
fisttpll
outsl
mov
mov
loopne
xchg
pop
push
add
adc
ret
cmp
sub
push
inc
scas
xchg
push
dec
lods
inc
sbb
clc
insl
fcoml
dec
negl
clc
add
imul
ret
xchg
ja
in
inc
in
inc
mov
stos
cmp
test
or
divl
cld
mov
call
jge
js
mov
dec
sub
inc
loop
cltd
jle
cmpsl
jge
test
adc
adcb
adc
ret
sbb
push
pop
in
hlt
mov
and
xchg
mov
cmp
ds
inc
sahf
push
lds
push
lret
adc
pop
jmp
jecxz
ds
mov
sub
sub
xlat
sbb
mov
inc
mov
stc
test
cli
sbb
into
sub
mov
hlt
jne
movsb
js
jae
cli
adc
pushf
jl
mov
mov
fstp
jnp
jo
cwtl
xchg
xchg
dec
cmpsb
mov
lret
stc
and
add
push
pop
out
jp
inc
bound
pop
lods
cmpsl
pop
adc
xor
or
lret
xor
gs
add
rolb
mov
or
xchg
xchg
fwait
rolb
inc
loopne
stos
push
es
jecxz
jge
movb
cmc
cmp
test
add
sub
fbstp
fstpt
pop
cwtl
ss
ret
shll
repz
popf
mov
mov
sbbb
push
push
insl
cmp
stos
insb
mov
ret
and
daa
cli
add
sbb
jmp
sub
std
daa
push
sub
xchg
test
sub
outsb
jmp
nop
dec
pop
fs
orl
mov
adc
push
sahf
loope
out
mov
adc
lods
xlat
lcall
mov
or
sbb
push
mov
shll
ja
sarb
arpl
jo
lcall
arpl
mov
pop
sub
mov
hlt
or
jge
in
adc
mov
push
xor
add
cmp
and
mov
sahf
or
in
dec
adc
xchg
jb
imul
pop
flds
xchg
loopne
jo
negl
ds
outsl
les
adc
sub
popf
push
jo
xor
push
lods
xchg
adc
movsb
jns
inc
shrb
xlat
and
jne
shlb
imul
inc
daa
xor
mov
add
cs
dec
jno
dec
push
pop
xchg
jmp
pop
daa
out
adc
insb
mov
test
ror
mov
push
add
cld
push
in
xor
out
insb
clc
or
mov
sub
rcrb
js
pop
add
pop
adc
or
ret
out
gs
adc
sbb
or
jmp
mov
cltd
mov
lods
dec
movsb
sub
jmp
adc
dec
xor
shlb
and
mov
and
mov
jae
mov
cmpl
sub
or
daa
add
jno
pop
mov
mov
test
mov
cmp
jns
out
pop
divl
mov
sbb
aaa
lods
add
mov
mov
pop
stos
jne
fwait
xchg
mov
icebp
jo
and
data16
gs
push
std
xor
push
ss
add
pop
stos
sbb
arpl
inc
loope
stos
das
dec
shlb
mov
mov
jg
test
and
test
inc
mov
mov
sahf
push
std
mov
sbb
stos
popfw
or
mov
push
pop
pop
lret
adc
filds
pop
out
mov
es
and
jo
xor
lahf
mov
out
dec
mov
sbb
leave
std
jmp
pop
or
pop
rcrb
adc
add
stc
sbbb
into
fisttpl
mov
lcall
out
pop
inc
inc
das
add
add
pop
add
mov
add
mov
hlt
mov
jo
xchg
dec
sub
arpl
test
or
rolb
icebp
mov
das
in
xchg
jecxz
and
xlat
and
adc
daa
or
mov
pop
fldenv
sbb
sbb
sub
icebp
push
adc
jmp
fsts
push
pop
mov
xor
mov
jp
or
jne
outsl
adc
dec
fnstenv
lcall
inc
clc
inc
popa
or
jecxz
enter
sbb
out
cmp
imul
xor
mov
lret
ja
lods
add
orl
jg
mov
and
addl
jg
in
pop
nop
add
into
push
mov
ss
mov
mov
push
inc
xabort
push
or
push
and
xchg
fwait
mov
sbb
xchg
loop
sbb
shrb
cmpb
fs
or
pop
out
ss
pop
sub
dec
dec
sarl
aam
ret
cltd
jns
cmp
mov
mov
lahf
mov
pusha
inc
xor
xor
pop
ret
inc
push
es
in
repz
sub
insb
sti
repnz
add
scas
mov
fstpt
xchg
leave
stos
ret
mov
movsb
jmp
cmpsl
stos
dec
outsb
mov
jg
sbb
fstl
xorb
das
add
fsubl
and
int
push
mov
mov
int
mov
test
xchg
fdivrl
xor
daa
mov
rcrb
sahf
nop
mov
dec
lret
sub
sarb
xchg
pop
fsubrl
push
inc
adcl
fwait
and
add
or
stc
push
into
mov
xchg
into
loope
pop
xlat
lods
imul
int3
js
subl
pop
out
push
mov
nop
popa
xlat
add
add
push
push
sti
dec
js
mov
cmp
and
push
fistpl
test
mov
xor
push
sar
idivl
out
in
dec
push
ret
stos
jns
push
sub
lcall
clc
inc
mov
pop
push
add
popa
scas
pusha
and
xchg
arpl
movswl
pop
fcmovbe
cmp
in
jno
testl
fists
cs
lea
nop
mov
mov
lods
adc
sbb
lret
fxch
in
mov
mull
fnstcw
inc
ret
fists
lea
mov
call
mov
out
test
pusha
jno
call
in
xor
xor
lcall
and
shl
mov
mov
mov
js
adc
cmc
cwtl
insl
test
jecxz
jns
xchg
rcl
sbb
pop
rcrl
cmp
xchg
push
imul
mov
sub
push
loopne
sbb
mov
jno
rcll
lods
jnp
mov
sbbb
fsubp
das
shlb
nop
shlb
xchg
clc
jmp
popf
xchg
fstpl
xchg
push
cli
pop
adc
push
push
jg
shrb
imul
nop
je
mov
add
movsl
inc
inc
clc
lret
sarl
pop
test
inc
jle
adc
jp
in
data16
xlat
dec
mov
or
mov
fistl
xchg
mov
mov
fmuls
outsl
inc
incl
pop
in
insl
jno
and
fwait
incl
push
lcall
lods
xchg
lret
std
pushf
pop
jo
mov
adcb
mov
xlat
xor
out
lret
cwtl
and
sbb
mov
push
fsubrs
or
pusha
sbbb
shll
adc
jns
in
xchg
int3
rcrb
cwtl
mov
lret
cmc
gs
pop
loope
pushf
inc
mov
lret
test
out
cmpsl
xchg
popa
popa
repz
cmc
sahf
rorl
push
pop
jp
cltd
sub
lock
movsb
xchg
imul
leave
adc
push
ss
scas
push
jg
add
jge
mov
cmp
daa
jne
repz
or
imul
ret
pop
xor
cli
aad
fucomip
push
cli
push
dec
fisubrl
std
dec
rol
jnp
and
pop
mov
lahf
fisubl
add
pop
lret
mov
sarl
int3
mulb
pop
lret
daa
cmp
jno
notl
stos
cld
mov
sbb
mov
repz
outsb
out
addr16
push
cmp
daa
int3
arpl
mov
sub
in
pop
fsubs
sub
and
add
xchg
sti
xchg
pop
cs
xchg
mov
rcl
xchg
xchg
fsubl
or
push
daa
gs
mov
dec
ds
or
icebp
xchg
cmpsb
push
jl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
ljmp
dec
loope
push
jl
push
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
add
cltd
fwait
jg
inc
jo
inc
sub
inc
push
xor
pop
and
push
cmp
hlt
mov
push
and
push
sarl
inc
pop
and
jp
mov
xchg
cmp
cmp
ds
loope
cli
push
jl
or
insb
or
push
push
das
jl
adc
sbb
jp
das
fcom
xchg
stos
out
xchg
mov
fsubr
xchg
jp
jbe
insl
repnz
add
aas
inc
mov
popa
push
push
mov
xor
cmp
pop
test
lahf
cmp
jp
mov
aad
aaa
je
xlat
cwtl
cmpsl
inc
sub
jmp
add
jbe
cld
add
mov
jl
xchg
pusha
pshufw
loopne
cli
mov
xor
loope
sbb
cwtl
sahf
popa
aas
dec
jo
dec
loope
push
jl
xchg
pusha
xor
loope
cli
push
jl
nop
pusha
xor
icebp
push
jle
xchg
gs
loope
call
cltd
xchg
pusha
xor
loope
push
jl
movsb
gs
loope
ljmp
dec
pusha
ds
icebp
push
jl
xchg
jo
dec
jo
dec
loope
cli
push
jl
adc
ds
sbb
pop
jl
test
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
xchg
push
jl
sahf
pusha
xor
fcmovnu
cli
push
js
xchg
xor
inc
push
loope
cli
push
jl
mov
xor
xchg
mov
lds
dec
inc
xor
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
inc
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
jl
xchg
pusha
xor
loope
cli
push
cmp
pusha
sbb
cs
loope
pop
mov
int
sarl
dec
sbb
adc
es
sub
add
sti
add
pop
ret
cmc
hlt
int3
les
pop
push
mov
jp
xchg
es
test
push
scas
lods
dec
jmp
mov
out
popa
sub
mov
xchg
aaa
je
test
xchg
call
sarl
imul
sub
xchg
xlat
lcall
jle
stos
push
xchg
jmp
subl
or
push
xchg
inc
pop
mov
cld
fisubl
vorps
mov
pop
pop
cmp
sbb
mov
cwtl
jl
inc
pop
arpl
jecxz
jmp
inc
js
xchg
mov
in
xchg
dec
or
mov
mov
popa
sahf
and
vrsqrtps
out
or
insl
or
into
inc
sub
sub
test
gs
pop
xchg
arpl
cmp
pushf
adc
ds
jmp
jle
leave
rcrb
movsl
lods
movsb
repnz
push
subb
out
sbbl
cs
lods
test
mov
dec
jp
xor
push
mov
or
xchg
and
shl
outsb
imul
cmpsb
jne
sbb
pop
mov
hlt
cs
jmp
lret
sbb
xor
inc
lea
fcmovnbe
mov
shlb
loopne
pop
ja
rolb
cmpsb
aam
push
sbb
and
fwait
mov
and
jle
jne
pop
push
out
fs
sub
mov
xchg
ljmp
or
sar
lock
adc
fldenv
dec
or
test
repz
les
push
rclb
lret
shr
xchg
pushf
int
arpl
push
jnp
fisttpll
mov
call
pop
shlb
insb
rolb
xchg
mov
adc
addr16
icebp
test
push
and
pop
repz
adc
fdivl
jg
movl
and
sbb
sub
clc
mov
and
sti
ds
xchg
in
pop
mov
and
mull
mov
loopne
jmp
loopne
fdivrs
rep
inc
pop
cmp
call
adc
lret
push
mov
fstpl
sbb
mov
inc
and
push
lret
outsl
push
arpl
add
lods
sbb
je
pop
imul
jmp
sub
into
hlt
fsubrl
fistpl
pop
and
jp
lea
popa
clc
mov
sbb
inc
sti
mov
push
fstl
fcompl
xor
push
shlb
pusha
pusha
ss
pop
push
test
push
adc
xchg
ficomps
loopne
pop
scas
sbb
cmp
sbb
xchg
pop
jne
repz
insl
mov
jb
pop
sub
cmp
loop
fs
shll
xchg
insl
adc
outsl
daa
and
mov
push
push
mov
int3
daa
mov
in
cs
lds
lret
jl
jnp
inc
testb
and
pusha
pop
outsb
test
ficoms
pop
mov
add
imul
xor
enter
mov
clc
insl
add
mov
jb
cmp
gs
divb
xchg
enter
lret
sbb
outsl
push
xor
cmp
lods
cmp
iret
xor
iret
inc
mov
mov
xor
jns
xor
or
shrl
mov
subl
in
ds
lcall
dec
xchg
pop
xor
fs
out
lret
mov
jo
mov
adcb
dec
lcall
sahf
inc
inc
frstor
test
popa
jle
jp
xchg
push
insb
mov
cmp
or
aaa
cmpb
sarb
lods
pushf
adc
cwtl
mov
mull
inc
les
jmp
ret
pop
dec
xor
xor
xor
ds
mov
xor
mov
loop
addb
icebp
repz
adc
jecxz
adc
cmpsb
loopne
dec
mov
int
dec
dec
in
xchg
int
mov
call
sbb
loop
shlb
aad
test
and
out
add
adc
out
sbb
adc
inc
cmp
sub
cmp
add
pop
int
jne
insb
sub
cmpsl
xor
xor
ud2
mov
xchg
pop
ds
mov
imul
xor
pop
out
mov
push
sub
ss
scas
dec
inc
rol
mov
mov
scas
pop
push
pop
shl
fcmovnu
aad
pop
push
inc
pop
idivb
mov
popa
mov
shrl
in
mov
jecxz
mov
in
in
and
mov
aad
repnz
in
and
push
flds
pop
mov
xchg
cmpsb
data16
mov
es
cmpsb
jns
push
push
xlat
popf
ja
dec
scas
imul
mov
cmp
dec
repz
lret
lods
push
adc
push
cmpsb
cli
fistpll
push
imul
out
iret
shll
pop
and
fdivp
gs
mov
roll
push
cmp
mov
add
popf
inc
xlat
bound
dec
std
push
in
decl
push
xchg
das
ljmp
arpl
add
push
paddq
out
inc
icebp
mov
xchg
inc
and
in
mov
pop
or
aaa
ds
sbb
leave
push
dec
xchg
pop
adc
cmp
sub
jg
arpl
movsl
mov
movsl
xor
movsl
sub
int3
fcoml
dec
rclb
sbb
rcrl
inc
inc
mov
in
in
and
test
sbb
push
fistl
icebp
cmpsb
loope
push
leave
shl
data16
aas
std
cmpl
aas
push
pusha
and
outsb
and
aaa
enter
mulb
jg
arpl
push
lods
sbb
ds
xor
mov
fcom
pop
icebp
sub
pushf
lods
push
loope
add
push
gs
mov
push
jbe
cmpsb
subl
fdivs
add
das
add
mov
cli
test
jbe
incb
xchg
aaa
movsl
fimuls
lcall
outsb
sbb
add
mov
or
add
mov
ret
push
dec
mov
fucomip
or
sti
loope
into
mov
test
push
mov
movsl
xchg
dec
mov
in
or
das
hlt
adc
fdivrl
jge
inc
inc
inc
mov
or
xor
sti
or
or
hlt
push
adc
arpl
int3
xor
push
in
or
xor
addl
lret
mov
int3
pop
sbb
jecxz
incb
pop
jo
cmp
fbld
mov
push
dec
enter
mov
pop
push
pop
in
imul
cmc
lods
cmp
add
outsl
and
mov
loopne
xor
xchg
iret
xorb
fdiv
lea
mov
loope
add
daa
orl
hlt
sub
lea
cs
dec
dec
movb
xchg
cmpsl
lds
pusha
mov
and
sub
shrl
push
mov
sbb
in
sub
stc
insb
arpl
jne
imul
loopne
ljmp
out
mov
mov
cli
pop
test
pop
add
enter
cmc
jle
xchg
dec
sti
call
add
into
jg
inc
cmpsl
pop
out
data16
jb
cmpsl
pop
mov
add
xchg
pusha
fidivs
cltd
popf
adc
cwtl
dec
cltd
mov
xor
mov
mov
or
mov
push
pop
ds
fwait
imul
jnp
cmpsb
stos
lea
and
lea
xorl
fwait
mov
adc
inc
scas
and
adc
jnp
push
dec
out
push
mov
jnp
jbe
in
iret
sti
fldcw
xorb
int
sub
adc
clc
jle
and
mov
outsl
stos
xchg
sbb
or
hlt
mov
add
pop
inc
adc
inc
ja
push
sbb
cli
and
jb
fcomi
jnp
lret
cmc
adc
rcrl
arpl
pop
daa
cld
in
jns
sub
push
rclb
xchg
div
mov
int3
insb
and
popa
cmc
push
sbb
aam
adc
sub
mov
test
test
adc
notb
sbb
sub
or
push
mov
test
jb
arpl
int
jge
mov
loope
push
fnstsw
inc
popf
push
inc
xor
aad
sbb
fadds
out
mov
bound
mov
je
mov
mov
fwait
shrl
std
add
dec
push
pushl
mov
popa
call
pop
pop
jns
xchg
scas
mov
fwait
aad
test
movsl
sbb
sub
sub
dec
mov
aam
mov
test
test
jo
nop
jns
mov
insl
sbb
outsl
adc
lea
stos
xchg
mov
fistl
sub
adc
sbb
add
push
cmp
push
jmp
jle
or
inc
jmp
and
sub
dec
ret
incb
jbe
xchg
mov
mov
call
fs
icebp
punpcklwd
mov
jl
cmpsl
into
call
lea
lahf
push
push
dec
push
mov
int3
add
jp
xchg
sbb
sub
and
mov
cmp
outsb
cmpsl
pop
cwtl
mov
xchg
mov
stos
xchg
clc
sbb
or
adc
fdivp
xchg
test
test
sub
sbb
xor
aad
or
cmp
dec
xor
ror
das
into
es
in
iret
xchg
xor
lea
dec
push
add
lcall
mov
sbb
imulw
push
lret
insl
jg
xchg
mov
xbegin
js
push
test
push
push
ja
movl
and
xor
les
mov
and
or
xlat
push
outsl
xor
push
rolb
repnz
xchg
push
lahf
loopne
sub
inc
mov
jecxz
sub
xchg
shl
adc
pop
ret
ret
mov
xchg
inc
outsl
jmp
push
add
and
rcrl
push
enter
lock
lcall
shl
sahf
cmp
and
pop
lds
jge
shlb
pop
xchg
scas
mov
loope
sti
into
loopne
cmp
add
rol
popf
clc
mov
push
add
mov
lods
cltd
mov
jnp
lock
cwtl
dec
fsubl
fmul
cmp
test
scas
lock
pop
xchg
ds
jo
cltd
call
xor
add
ret
push
in
sti
cli
pop
rol
push
add
sub
sar
xorl
jp
xor
popf
movsl
mov
shll
aad
test
ss
mov
addl
aaa
jne
jnp
stos
push
push
xor
call
jno
adc
ja
inc
mov
inc
and
mov
and
fdivrl
dec
or
xchg
xor
xor
and
push
into
gs
pop
mov
xlat
dec
push
jg
ret
dec
mov
fcomi
sti
cmp
adc
inc
mov
xchg
pusha
sub
mov
out
ds
and
pop
scas
inc
mov
push
push
add
adcl
fnstenv
lock
mov
fldl
dec
fstpt
cmpsb
es
je
test
jo
push
dec
add
mov
jns
mov
aaa
fs
fsubrp
mov
xor
hlt
and
xchg
imul
stos
inc
in
mov
pop
sub
ds
in
inc
scas
and
lods
xchg
lea
arpl
aaa
loopne
clc
and
loop
xchg
popa
push
and
rcrb
jg
pop
cld
adc
sub
cwtl
out
inc
xlat
in
ja
sub
xchg
mov
jmp
mov
cwtl
loope
int3
pop
mov
xchg
sbb
js
aas
xor
notb
xor
inc
xor
inc
pandn
pop
push
cmp
cld
add
sti
jb
cmc
pop
push
pop
and
dec
movsb
mov
jge
pop
cs
dec
push
add
adc
js
cmp
mov
stos
inc
mov
mov
outsb
decb
fcom
pop
xor
cli
nop
push
test
pop
mov
cmpsb
mov
push
cmpsb
jo
aas
shll
jle
or
add
aam
push
inc
mov
inc
jnp
dec
enter
cmp
fadd
pop
lret
push
mov
push
das
rorl
je
or
ret
pop
mov
pop
test
xchg
xor
adc
mov
popf
xor
pop
lock
mov
mov
xor
ffreep
clc
mov
cmp
fidivs
imul
cld
test
mov
arpl
jo
cmpsl
jp
xor
std
jae
movsl
ret
loopne
pop
xchg
test
or
jl
xchg
neg
outsb
aas
sub
fsubl
int3
test
sbb
jnp
ret
pushf
adc
mov
pop
sahf
test
sub
out
int
mov
add
push
std
daa
cld
xchg
jle
inc
sub
mov
sub
stos
in
mov
jns
daa
push
inc
icebp
data16
xchg
pop
xchg
sbb
inc
les
nop
repnz
xchg
outsb
fnstsw
sti
mov
out
and
mov
inc
cmp
test
sbb
or
add
sub
xchg
cmp
pop
sub
stos
sbb
sbb
add
icebp
addr16
hlt
sbb
jbe
inc
mov
mov
movsb
add
sti
adc
lcall
xchg
push
lods
pop
or
test
into
mov
dec
out
cmpsl
mov
sub
sub
pop
pop
out
mov
jge
filds
sub
out
push
jmp
cmp
push
inc
cli
sub
sub
mov
jmp
ljmp
mov
mov
hlt
cmp
cmp
jns
adc
mov
sarb
pop
mov
mov
adc
pop
sarl
pop
shll
add
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubl
add
popa
inc
add
popa
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
arpl
movsb
arpl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
addl
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
inc
add
addl
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
test
movsb
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
