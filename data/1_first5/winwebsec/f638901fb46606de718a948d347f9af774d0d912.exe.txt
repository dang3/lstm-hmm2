sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
xchg
bound
jge
lret
push
movb
in
mov
jae
ds
call
outsb
adc
pop
popf
cmp
or
adc
cmp
push
xchg
sbb
cmp
int
add
leave
add
xchg
inc
imulb
adc
or
or
mov
enter
inc
xor
daa
mov
push
cmc
cmp
cmpsb
add
ds
movsb
mov
jp
out
insb
in
sbb
adc
cmp
push
fidivrl
icebp
xlat
pop
iret
xchg
mov
sub
in
sbbb
insb
lods
mov
adc
fsub
pop
fistpl
or
inc
or
mov
jge
xchg
mov
subl
sub
lds
mov
lods
inc
push
adc
repnz
out
stos
sarb
mov
push
dec
mov
into
daa
pop
nop
stc
js
subb
jl
in
adc
aas
xchg
scas
jp
add
and
xor
pop
xchg
call
adc
gs
hlt
es
add
call
rcrb
arpl
mov
popf
arpl
test
in
adc
inc
bound
test
pop
adc
mov
ret
pop
ret
pushf
xchg
les
inc
int
or
aam
dec
cwtl
or
insl
mov
pop
lds
out
pop
sbb
dec
enter
push
mov
test
inc
dec
int3
xchg
out
push
push
dec
jmp
insb
adc
cwtl
mov
mov
and
pop
mov
aad
in
xor
pop
cmp
or
jbe
xor
lods
lea
pop
pop
pop
pop
loopne
mov
je
mov
jne
pop
sahf
arpl
push
mov
add
test
add
adc
jp
data16
fildll
inc
shrl
nop
mov
and
in
jno
jae
sbb
xchg
orl
sbb
sub
or
push
cmpsl
cli
pop
enter
bound
out
or
sub
pushf
mov
addl
ds
in
lret
out
sahf
and
push
xchg
sub
test
mov
jae
hlt
movsl
out
inc
pop
lds
sahf
pop
movsl
daa
mov
jl
js
mov
pop
jl
ret
xlat
loopne
adc
das
rep
jb
pop
das
incl
clc
xchg
push
mov
rol
out
sbb
xchg
loope,pn
sub
or
outsl
sbb
ret
sub
adc
add
mov
mov
dec
mov
mov
add
push
aaa
and
jmp
into
push
xchg
dec
adc
das
push
push
add
xchg
mov
cmc
sbb
add
sub
dec
and
inc
fidivl
out
rcr
pop
adc
push
pusha
sbb
cmpsb
fiadds
cmp
call
sti
dec
add
push
frstor
mov
cmp
iret
int
mov
iret
gs
adc
cltd
xor
mov
addr16
ljmp
mov
test
push
sub
mov
out
push
imul
divl
icebp
cmp
mov
mov
lahf
int3
movsb
adc
aaa
fsubrs
xchg
stos
mov
call
testb
imul
or
lods
jno
pop
js
xor
popa
lods
xor
mov
pop
add
ret
fstpl
cmpsl
mov
loopne
mov
gs
mov
xlat
addl
inc
sub
cld
or
lcall
sub
adc
add
dec
jnp
fisubs
nop
inc
adc
xchg
push
jae
repz
mov
dec
leave
fwait
mov
xchg
cmpsb
mov
lret
xchg
in
mov
in
pushf
loop
mov
orl
sti
mov
cli
repnz
xchg
testl
cmpsl
fdivs
cmc
add
jns
sub
insl
je
pop
out
mov
inc
jb
jecxz
mov
lret
mov
je
orl
sub
cmpsb
cmpsb
and
aad
jp
popa
pusha
jg
cmp
inc
popa
add
enterw
cmp
loopne
sub
loope
int
and
daa
pop
int3
movsl
ljmp
adc
or
sub
mov
cwtl
sbbl
mov
cs
in
enter
or
pop
lds
xchg
adc
xor
xorl
and
das
fwait
cmp
aad
arpl
cmc
mov
imul
pop
or
cmp
add
mov
shlb
gs
xchg
cmp
jecxz
cli
leave
rorb
push
sub
shll
aam
push
sub
scas
addl
dec
add
cld
mov
cmp
imul
mov
pop
push
out
sbb
aaa
divl
fnstsw
mov
loopne
popf
test
push
add
jb
ret
cli
stc
aam
xchg
xor
dec
mov
mov
imul
sub
loop
mov
or
pushf
jno
pop
jb
mov
add
jge
inc
cmpsl
rorl
dec
pop
adc
xor
out
jecxz
cli
mov
insb
cmpsl
and
jmp
mov
jns
fildll
ds
mov
xchg
mov
cmp
cmp
pop
repz
cltd
in
iret
test
mov
mov
and
jo
sub
mov
cmp
popf
dec
and
repnz
leave
jno
test
pop
dec
sti
int
push
push
dec
dec
mov
dec
add
inc
repnz
sti
lahf
leave
movsb
es
pop
xor
pop
das
mov
pop
add
cmp
cld
int
in
inc
pop
push
loope
jo
je
popa
movsl
test
shl
jb
dec
jg
and
popa
push
xchg
scas
in
std
lds
lret
inc
sub
mov
ljmp
jmp
inc
sbb
imul
mov
lods
lock
inc
or
scas
pop
cltd
add
or
rorl
jno
int3
sbb
xchg
jp
inc
lods
adc
pop
aad
jno
xchg
scas
fldt
dec
cmp
jle
and
push
cmp
add
or
mov
out
jns
hlt
inc
out
int
in
mov
insb
cmovo
ljmp
repz
int3
popa
pop
ret
pop
scas
xor
std
ds
lds
popf
fsub
and
lods
mov
adc
loopne
jbe
push
xchg
jmp
pop
xor
cli
nop
adc
add
decb
idivb
test
dec
push
js
jo
orl
push
test
insb
or
mov
movsb
adc
cs
aad
pop
adc
sub
inc
cmc
pop
sbbb
mov
mov
xchg
jmp
dec
das
inc
mov
mov
adc
cltd
stc
movsb
fcomip
fimull
in
mov
inc
imul
or
or
push
divl
mov
xchg
push
inc
sub
sbb
mov
cmp
outsb
bound
sbb
jecxz
or
pusha
in
sub
sub
adc
cs
cmp
cmp
add
rolb
inc
mov
out
xor
jp
test
ja
sbb
mov
cmp
ret
xchg
mov
xorl
fcmove
leave
add
imul
or
pop
out
lea
popf
notb
cmpsb
test
in
push
xor
inc
jg
push
div
test
ficoms
push
fs
pop
popa
sbb
add
test
test
cmp
aas
lcall
jecxz
js
std
adc
dec
inc
fs
sub
stc
int3
xlat
aam
mov
or
mov
mov
or
out
mov
lods
ljmp
aad
je,pn
xchg
cli
lock
and
cmp
cwtl
or
jle
jmp
pop
outsl
jns
subl
cmp
imul
adc
add
ja
sub
add
rclb
std
cld
dec
jle
add
cmp
in
aam
mov
sub
lds
sbb
or
mov
sub
testl
mov
mov
out
mov
sub
push
or
pop
aas
cmovo
out
jne
mov
push
add
lret
cmp
mov
imul
pushl
sbb
bswap
add
cmpsl
adc
xchg
stos
add
and
dec
cwtl
cmp
int
or
sbb
imul
xor
insb
dec
bound
data16
hlt
jb
insl
or
mov
adc
jmp
push
and
cmc
in
stos
ret
das
sbb
scas
mov
sub
adc
pop
sbb
cld
arpl
lds
mov
xor
or
dec
rorl
js
dec
out
fldt
popl
idivb
invd
push
daa
add
ljmp
in
rcl
fstpl
cmp
aaa
sti
mov
lcall
out
ds
pop
fs
data16
sbb
mov
in
ret
std
lret
pop
divb
pop
jle
repz
cmpsb
inc
sub
sbb
in
fdivrl
xchg
mov
xlat
into
lret
pop
sti
jbe
test
decl
cmp
leave
cmp
jno
cmp
xor
add
fucomp
pop
cmc
sub
inc
xor
xor
sbb
ret
mov
jge
and
sahf
xor
ret
cmpsl
pop
loope
lret
add
lcall
negl
pop
sub
push
sar
jmp
loope
lret
movsl
push
rcll
rep
sub
cmp
add
inc
pop
jg
sub
push
lret
push
nop
mov
outsl
outsb
push
pop
jae
xor
pop
addr16
cmp
aam
sbb
mov
ja
rcl
or
push
call
les
jb
mov
lret
scas
or
shr
cmc
fwait
adc
ficoml
rorb
lahf
daa
imull
or
iret
hlt
sub
test
and
push
test
iret
daa
sbbl
mov
das
lds
in
test
out
out
dec
push
shrb
les
jno
dec
pop
sar
adc
inc
mov
push
mov
jnp
adc
pop
enter
push
xor
nop
jnp
mov
lret
inc
loop
adc
addl
and
cmpsb
aad
addr16
enter
popl
mov
xchg
push
addr16
unpcklps
dec
scas
sub
scas
mov
inc
xor
jl
push
jmp
sub
mov
push
xchg
lods
rorl
cmp
cmp
xchg
les
iret
cli
outsb
fisubrl
aas
jg
ficomps
adc
jae
das
pushaw
loopne
xor
int3
adc
push
popa
dec
stos
aaa
rcll
fadds
repz
cmp
jae
rcrb
adc
mov
hlt
lret
pop
jns
bnd
fldl
lods
jmp
dec
lret
rorb
pop
addr16
xchg
lret
jg
jp
pusha
ss
jb
mov
adc
mov
pop
movsb
jge
rcrb
movsl
subl
insl
pop
inc
cmp
scas
jp
xchg
push
xchg
xchg
stos
pop
xor
jecxz
pop
es
cmp
pop
lods
or
cmpsl
pusha
dec
in
add
loop
in
imul
sbb
out
insl
incb
xchg
pop
sbb
jmp
and
pop
push
xchg
fnsave
mov
inc
popl
out
sbb
andl
mov
xchg
or
xchg
fwait
add
pop
aad
loop
or
pop
mov
test
pushl
test
cmp
sub
xchg
in
mov
push
aad
scas
or
fsub
cs
xlat
out
inc
daa
pop
mov
pushf
jmp
push
mov
add
dec
jl
xchg
inc
mov
movsl
sub
sahf
xchg
cmpl
rcll
fmulp
pop
mov
or
sbb
es
das
add
xor
mov
mov
je
sbb
mov
push
or
sbb
test
mov
or
dec
icebp
adc
mov
loopne
push
and
loopne
xchg
cwtl
enter
jg
xor
sbb
xorb
aas
js
cltd
xor
lret
inc
add
test
leave
and
mov
inc
leave
es
test
push
out
aam
ret
xor
cltd
lods
test
cmc
cmp
cltd
inc
sub
loopne
cmp
pop
lds
movsl
inc
adc
lea
dec
sbb
mov
cmpsb
or
xchg
les
pop
sub
lods
cld
inc
lock
in
mov
imul
and
or
shrl
mov
xchg
pop
jmp
cmp
xchg
ror
out
adc
mov
or
mov
mov
in
pop
mov
xchg
mov
pop
in
outsb
sub
popa
xor
mov
push
mov
mov
jl
aaa
ret
ret
jns
mov
fldenv
push
sbb
pop
aaa
mov
cmp
fs
nop
mov
mov
out
or
inc
mov
mov
ds
pop
scas
pcmpeqw
push
jne
and
pop
out
outsl
mov
mov
fsts
negl
add
cmp
ja
mov
sub
bnd
int
and
mov
cli
inc
mov
andl
loopw
mov
add
nop
roll
mov
and
pop
add
fbld
push
sbb
jns
movsb
xor
daa
rcrl
addr16
jmp
push
cmp
jb
mov
sub
fsubl
cmc
scas
mov
popa
jnp
ljmp
mov
add
lret
mov
das
repnz
fisubrs
and
mov
sarb
jmp
sub
and
mov
lahf
jmp
ss
callw
sarl
and
imul
in
xor
push
sarl
pop
lea
pop
ja
dec
scas
subb
xor
stos
sbb
add
lret
leave
add
enter
push
sti
mov
shrb
push
pop
mov
scas
xchg
lea
rcrb
or
xor
sbb
cmp
xchg
cmp
cmp
and
stc
dec
cmpsb
out
xchg
cmp
scas
add
gs
push
xchg
pmaddwd
ljmp
add
sbb
insb
push
call
pop
cmp
insl
mov
jne
cmp
pop
popf
inc
push
pusha
std
push
ljmp
sbb
icebp
sbb
jns
cwtl
or
inc
and
push
repnz
pop
stos
mov
mov
rorb
shlb
add
xor
test
cmp
fs
cmpsb
iret
bound
inc
pop
jb
in
sbb
xor
sbb
pop
mov
mov
xchg
vmwrite
push
int3
les
iret
in
in
inc
out
cmp
test
scas
mov
cmp
lret
cmpsl
popf
dec
fcoms
repz
inc
mov
je
shl
shlb
lcall
test
sbb
ja
mov
lea
or
xlat
sbb
xchg
cwtl
in
push
adc
shll
pusha
push
add
xchg
ffree
inc
test
and
nop
mov
jp
add
inc
in
loop
test
aam
push
sbb
enter
pop
mov
shlb
cmp
ret
loop
imul
js
mov
push
leave
cli
cwtl
xor
add
ds
ljmp
test
stos
sbb
push
jecxz
push
dec
and
pop
and
adc
outsb
or
popa
push
xchg
mov
and
mov
iret
xchg
fdivl
inc
push
outsl
push
and
loope
je
fidivs
aam
fstl
fwait
jne
jo
bnd
jge
sbb
outsl
push
inc
jbe
adc
std
mov
test
ljmp
cmpsb
cmp
out
in
mov
cmp
je
jmp
dec
clc
lea
stc
nop
mov
jne
aas
ljmp
lods
and
pop
xchg
adc
or
mov
scas
hlt
jbe
mov
icebp
inc
into
cld
xchg
xchg
or
sar
inc
dec
enter
fstl
sub
mov
jl
int3
lahf
cmp
mov
dec
addr16
insl
in
fisttpl
add
dec
sub
or
call
cmpsb
fsts
pusha
aam
xchg
cmpsb
sub
pop
add
add
mov
xor
jb
loope
push
mov
mov
jb
add
scas
sub
fcoml
mov
cmp
xlat
inc
stos
ss
cmp
ret
adc
add
add
add
adc
cmp
lock
add
jl
and
pop
insb
scas
pop
sub
jne
xchg
sub
stos
sbb
xlat
dec
setno
lcall
xor
test
mov
jmp
inc
pop
pop
loope
loope
or
std
mov
mov
lea
in
jne
adc
jnp
push
push
fucomip
les
jo
bswap
cmp
sbb
jmp
mov
push
cld
adc
or
xchg
int3
mov
loope
test
and
adc
rol
pop
int3
ds
pop
push
bound
mov
jecxz
mov
into
in
push
pop
icebp
lcall
xchg
inc
mov
lret
fs
push
xor
jne
addr16
daa
mov
scas
inc
popf
xchg
push
push
sarb
jbe
iret
repnz
cld
fucom
ljmp
mov
push
aad
sbb
push
fsubrl
adc
inc
adc
pop
scas
mov
cmpsl
std
sub
iret
jle
or
inc
mov
and
jb
shrl
adc
cwtl
dec
jecxz
pop
insl
outsb
imul
test
les
lcall
xlat
mov
or
jae
leave
xchg
xor
dec
aaa
int3
adc
in
enter
mov
popf
add
or
adc
mov
xor
mov
and
in
lahf
insl
movsb
fwait
push
push
cmpsb
or
jle
aam
jae
mov
pop
jno
adc
je
cli
add
daa
mov
lret
push
push
ja
pop
ja
imul
je
mov
xor
fwait
dec
test
mov
test
into
add
ds
enter
call
mov
cmpsl
imul
push
sbb
jae
or
and
push
and
movsb
imul
rol
pusha
push
jns
aas
xlat
mov
xchg
hlt
and
in
sbb
mov
pop
add
gs
imul
test
enter
jbe
mov
les
rcrl
push
cmp
or
mov
push
cmc
inc
mov
test
mov
pop
test
dec
add
or
pop
imul
in
iret
test
inc
inc
jle
mov
xchg
int
mov
insb
call
repz
inc
shlb
fmull
clc
jg
mov
scas
mov
add
push
jmp
outsb
stc
pushl
jnp
lcall
xchg
adc
cld
fcmovnu
in
mov
divl
out
fldl
push
cmp
arpl
push
movsb
adc
add
shl
sbb
out
add
jl
cld
xor
sti
fcomp
popf
lret
cmp
addr16
lret
push
mov
call
adc
mul
pop
jne
mov
xor
movsb
push
int
push
das
xor
adc
test
int
adc
mov
mov
insb
fs
jno
test
pushf
jo
cmp
inc
andb
adc
add
imul
inc
cmpsb
nop
and
movsb
bound
mov
jno
dec
sbb
fstp
nop
repz
or
sub
insl
iret
sbb
or
cmc
sbbb
jmp
std
stos
push
mov
cmp
cwtl
cmp
sub
xchg
stos
cli
out
adc
push
lods
popf
pop
sbb
jmp
dec
sub
mov
aaa
xchg
insb
ss
fwait
ja
sbbb
cmp
cmp
xchg
je
mov
shlb
cmpb
cmp
mov
dec
add
sbb
or
xchg
popf
je
adc
mov
add
je
sbb
push
push
jg
jae
pop
js
pop
pop
cmp
stos
cltd
fisttps
test
fmuls
repz
pushf
lea
outsb
jmp
push
into
adc
aam
jge
dec
mov
insb
xchg
push
rcrl
jo
lret
fnsave
mov
andl
mov
sbb
xor
or
or
add
sub
push
adc
lods
mov
pop
sbb
add
or
sarb
ljmp
inc
jecxz
mov
mov
pop
cmp
adc
jnp
xlat
fiadds
iret
cs
dec
xor
mov
cli
fldenv
add
js
xchg
popa
mov
xchg
fmull
lret
jo
or
sahf
leave
pop
aad
or
and
mov
pop
lret
cmp
and
js
add
ret
sub
inc
mov
test
popf
pop
jne
mov
jae
xor
pop
mov
jle
imul
push
cld
jecxz
dec
xchg
mov
sar
jb
jl
sub
push
pop
test
adc
cmpsb
loope
mov
sbb
xchg
rolb
insb
xor
add
aad
push
into
rcll
bound
push
add
stos
sbb
lret
cwtl
pop
roll
push
shrb
loop
out
mov
mov
ss
xchg
mov
js
test
dec
andb
or
pop
mov
popa
xchg
call
insb
push
mov
adc
pop
jb
dec
fstl
sbb
cmp
cmc
rclb
ret
add
jae
aaa
xchg
mov
nop
cmp
mov
cwtl
and
dec
test
ret
jp
and
filds
pop
push
mov
subb
imul
push
xchg
dec
pop
ret
ljmp
xor
jle
rclb
stos
add
and
jo
push
popf
sbb
push
or
xchg
icebp
add
add
in
push
xlat
imul
push
dec
jno
or
cmc
xchg
mov
lret
cmp
cld
insl
mov
jne
xchg
mov
xor
and
dec
out
sub
mov
leave
jb
loope
les
xor
loope
lret
outsl
dec
ds
dec
dec
repnz
mov
xchg
jno
scas
jae
push
addl
jge
sub
mov
jb
hlt
aam
jns
lret
push
stc
scas
pop
or
and
das
mov
hlt
dec
clc
pop
jecxz
add
imul
int3
test
jae
popa
cmp
push
xor
stos
and
xor
addr16
cli
mov
int3
mov
pop
pop
fadd
xchg
mov
xor
shr
pop
ljmp
gs
or
jb
jbe
cmp
out
pop
dec
sub
or
ss
iret
rol
and
mov
popf
lret
adc
and
popl
sbb
mov
ss
jno
sbb
sbb
cmp
lods
lahf
loopne
mov
in
sbb
aaa
push
add
std
lods
adc
cmpb
call
sub
pushf
bound
mov
jno
imul
ror
pop
dec
inc
xor
add
mov
sarb
inc
inc
lods
fwait
call
jo
addr16
popa
fists
cwtl
jg
mov
add
lret
dec
je
xlat
mov
mov
push
hlt
xor
lahf
lret
dec
cmpsb
cs
cmpsl
jne
adc
push
inc
lret
mov
jecxz
rcrl
xchg
lcall
fsubrl
mov
mov
insl
mov
mov
mov
cmpsl
shrl
jne
pop
dec
jg
jo
mov
jg
cld
out
xchg
sbb
push
and
push
push
ds
cli
pop
pop
pusha
outsl
rcll
movsb
xchg
mov
push
push
xor
push
in
daa
in
sub
fwait
pop
aaa
fwait
loope
sub
pop
lret
mov
push
dec
xchg
adc
xorl
sbb
enter
cwtl
bound
cmp
xor
es
mov
add
xor
mov
jle
mov
push
jnp
xorb
and
mov
mov
dec
imul
and
fldt
add
fdivr
sbb
scas
add
fndisi(8087
test
jno
lods
rcrb
jecxz
add
pop
add
mov
loopne
mov
pop
xchg
jp
cmp
int3
dec
dec
cmp
mov
mov
mov
aaa
fbld
jo
bound
test
mov
mov
fistpll
sub
and
xor
pop
push
into
sbb
loopne
jp
sbb
adc
mov
adc
enter
xchg
push
jne
loopne
xor
rcr
push
popf
fistl
fcoml
jge
in
dec
int3
ficoms
cmp
mov
jne
sbb
daa
test
pminub
mov
inc
movsb
mov
shrb
cwtl
push
out
pop
and
add
add
fcmovbe
mov
sahf
fsubrl
mov
popf
xor
cmp
pop
std
inc
das
cmp
fildl
mov
adc
ds
rcrb
out
aad
mov
push
dec
adc
xchg
movsb
sbb
push
or
mov
cld
sbb
testl
fcmovbe
cmp
sbbb
rorb
iret
mov
daa
or
call
outsb
mov
insl
aad
ljmp
and
arpl
xorb
test
mov
clc
mov
inc
int3
xchg
sbb
push
xchg
jns
adc
adc
outsb
out
mov
dec
or
cwtl
dec
cmp
inc
dec
into
cwtl
pushf
sub
sti
inc
sbb
inc
jecxz
shlb
mov
or
or
loopne
cmpsl
jmp
gs
push
jl
jno
jmp
xchg
jge
mov
mov
adc
nop
ds
iret
out
dec
insb
xlat
test
push
mov
stos
enter
add
mov
idivb
test
pop
push
sti
lea
xor
add
and
dec
ds
aas
lret
mov
adc
mov
adc
dec
js
daa
loopne
cltd
fcoml
mov
mov
int
pop
mov
test
mov
dec
cmp
pop
add
shll
les
and
movsb
sub
cmpsl
mov
je
mov
or
and
jge
lcall
cmp
leave
cs
sbb
sub
addr16
mov
scas
pop
xorl
imul
iret
dec
fildll
jno
xor
shr
fwait
cmp
dec
xchg
add
jbe
addl
jnp
std
jle
mov
dec
outsb
cltd
sub
popf
fs
aas
dec
out
sbb
add
lret
stos
gs
fists
xchg
mov
push
mov
mov
add
inc
movsb
int3
popf
rcr
xor
inc
cs
inc
shll
and
pop
fadds
mov
rorb
in
adc
push
and
mov
aad
cld
jecxz
fs
sbb
pop
or
divl
add
adc
into
out
add
test
mov
push
xchg
and
push
sbb
inc
xchg
pop
in
cmp
cltd
jne
mov
sub
aaa
add
pop
push
les
ds
jae
addr16
dec
xor
iret
dec
xlat
xor
dec
lds
out
test
cs
xor
adcl
cmc
cltd
rorb
jge
mov
and
insl
sub
stos
sub
push
pop
lock
ljmp
fwait
mov
jbe
test
shrl
clc
mov
xchg
repnz
jnp
mov
and
xchg
cmc
daa
out
pop
cs
out
xor
jns
add
aad
iret
jne
setp
lds
pop
jbe
das
ljmp
push
fsubrs
in
sbb
ja
jecxz
movsl
pop
add
in
aad
mov
sti
pop
cmp
fwait
scas
cmpsb
xlat
xchg
outsb
fwait
xchg
loope
cs
cmp
sti
frndint
imul
push
daa
sahf
lods
int3
int
ja
inc
out
add
push
aaa
loop
add
stc
push
push
cmp
and
lret
pop
cmp
mov
insb
jbe
jns
sub
cmpsl
sbb
mov
addl
clc
iret
lods
out
mov
arpl
cltd
jl
pop
js
clc
outsb
imul
mov
xor
adc
xor
aas
shll
xchg
sbb
out
cmpsb
cmp
cmp
jo
clc
jne
mov
andb
jmp
mov
sbb
and
clc
ds
out
dec
rcl
adc
sub
in
leave
cs
inc
inc
fimuls
push
jge
mov
adc
aas
add
leave
cmc
jbe
pushf
cmc
jnp
pop
jl
lock
jbe
icebp
sbb
mov
push
div
imul
ds
cli
scas
fld
fwait
mov
sbb
and
js
jne
aas
push
out
jb
sbb
imul
mov
sub
lods
fsubrl
inc
mov
xchg
lods
cmp
or
out
int3
fistpll
cld
fistps
push
inc
xchg
jb
or
push
es
cltd
outsl
cltd
test
lret
mov
and
dec
movsl
arpl
nop
push
cmp
rorl
std
mov
fldt
out
call
js
xchg
test
popf
xchg
add
mov
sbb
push
fdivrs
incl
xchg
out
cmp
lcall
mov
mov
mov
out
ret
jbe
jmp
lahf
cmp
gs
mov
pop
and
scas
je
push
adc
sub
push
insb
neg
sbb
jecxz
lods
push
sub
push
clc
dec
mov
push
inc
push
je
stos
pop
popa
je
mov
movsb
inc
xor
xor
mov
outsl
repnz
es
aam
xchg
adc
jnp
into
jo
xchg
lret
decl
mov
mov
jno
adc
mov
cmpsl
rcl
sbb
adc
insl
sub
or
jns
pop
popa
add
fs
pop
addb
jb
decb
mov
loope
or
push
mov
mov
push
push
aaa
push
and
mov
mov
enter
pop
and
mov
cmpsl
mov
imul
cwtl
fwait
clc
inc
hlt
mov
sbb
gs
adc
mov
jno
dec
test
jmp
stos
sbb
lods
mov
pusha
push
cmp
int
pusha
stos
ja
lret
xchg
repz
mov
scas
cmpsl
repz
or
adc
out
les
jmp
sbb
addr16
adc
sub
jnp
popa
jns
addl
pop
clc
pop
nop
sub
xchg
mov
xchg
je
mov
mov
shrb
lahf
lods
mov
xchg
sub
mov
inc
mov
pop
xchg
sub
lret
ss
xchg
loopne
mov
clc
jl
sub
std
shlb
lods
push
or
pop
stc
cwtl
jle
inc
stos
mov
ret
in
imul
mov
mov
push
xor
push
mov
mov
out
push
inc
sub
pop
xchg
sbb
outsl
pop
dec
lock
xchg
adc
pusha
or
nop
inc
jp
xchg
xor
push
cmp
loope
aam
pop
into
sti
insb
daa
and
nop
cltd
inc
add
mov
es
incb
cmovne
push
mov
out
sub
iret
das
out
mov
iret
loopne
test
jg
out
mov
add
xchg
sbb
add
jp
push
cmp
cltd
xchg
scas
pushf
repz
out
pop
add
out
lods
mov
or
xchg
pop
mov
rorb
mov
push
int3
pop
xchg
dec
out
jl
cmp
fcomps
push
pop
or
sbb
mov
mov
pop
cmp
cmp
mov
and
lret
push
pop
lods
out
xor
lret
in
les
mov
mov
xchg
hlt
cmp
icebp
push
mov
mov
sti
mov
popa
sbb
testl
outsb
jnp
jecxz
lret
or
or
rolb
jnp
push
imul
sbb
inc
arpl
mov
fsubrs
sbb
out
or
jae
das
adc
jo
lods
mov
test
cwtl
scas
pop
push
xor
mov
shlb
insb
cmp
cs
lods
jnp
aad
dec
jmp
jge
repnz
pushf
inc
int
sub
je
int
dec
sbb
imul
xor
cmpsl
sub
jmp
negb
cmpl
mull
jmp
cmpb
xor
ret
xor
mov
mov
and
adc
call
scas
push
push
cmp
jl
mov
aas
ret
or
pop
xchg
sbb
sub
xlat
dec
cmpsl
arpl
imul
ds
nop
das
or
dec
xchg
dec
and
cwtl
push
push
dec
mov
jbe
stos
in
mov
add
xchg
das
sbb
pop
mov
mov
aad
push
sub
xor
inc
mov
fcmovne
je
mov
cli
outsl
mov
cmc
jmp
pop
push
out
bound
aam
or
push
sub
lcall
xor
ret
sub
mov
mov
mov
push
sarl
cmp
mov
daa
shll
cmp
incb
inc
cwtl
mov
ret
inc
mov
bswap
sub
xor
outsl
mov
imul
pop
aaa
pop
fimuls
cmp
mov
xchg
das
mov
testb
rolb
test
cmp
jne
out
push
adc
mov
fs
subl
cwtl
fnstenv
jns
adc
mov
xor
outsb
pop
mov
xlat
cld
out
fildl
aas
es
dec
push
shlb
dec
xor
adc
and
test
xchg
inc
mov
xchg
repz
das
jecxz
push
cmp
jmp
jecxz
cmp
xor
push
xchg
loope
stc
and
jl
imul
mov
sbb
movsl
jp
push
mov
xchg
movsb
outsl
movsl
sbbl
add
leave
mov
std
popf
roll
ljmp
pushf
hlt
rclb
ds
jle
dec
out
xabort
fbstp
mov
mov
cmp
jb
xor
popa
adc
int
inc
outsl
sahf
nop
or
cwtl
add
in
inc
out
xchg
les
xor
push
loopne
aas
loop
sahf
push
jle
sub
lret
dec
dec
fsubrl
or
add
cmpsl
pop
lea
xor
push
pavgb
insl
cmpl
loope
xchg
cwtl
jle
ffree
nop
cmpsb
add
xor
jb
xor
sub
fwait
mov
cmp
out
xchg
dec
jl
xor
pushf
shlb
outsb
xchg
test
cld
jecxz
stos
inc
xchg
jne
loopne
cmp
dec
lods
incl
repnz
lcall
adc
out
rorb
inc
pop
out
dec
es
or
cmp
stc
xchg
in
mov
int
xor
push
mov
add
xor
mov
and
and
fisttpl
in
fwait
mov
ss
das
jo
call
aad
out
into
jnp
xlat
mov
rorl
and
es
xchg
je
in
insl
neg
es
outsb
ss
test
ss
mov
mov
addr16
in
popa
andb
clc
add
jl
jge
xor
jmp
push
stc
and
aaa
addl
das
mov
or
jl
lret
insl
das
rcr
xor
mov
xchg
std
add
jecxz
aad
popa
mov
cs
jecxz
xchg
lret
mov
rcrl
xor
sub
rorb
mov
js
fucom
mov
enter
icebp
xchg
adc
mov
adc
adc
repnz
pop
lret
mov
xorb
sbb
iret
insl
pop
int
fimull
cmc
cld
jmp
daa
mov
cld
sbb
pop
sahf
lock
dec
adc
mov
sbb
pop
lods
sahf
sbb
icebp
mov
and
leave
cmpsl
mov
push
or
jae
mov
add
dec
addr16
inc
std
jmp
pop
sbb
inc
inc
lea
cli
loope
mov
adc
mov
sbb
adc
rclb
xor
pop
add
mov
mov
mov
mov
adc
lds
arpl
bound
adc
xchg
mov
fwait
cli
cli
fcomps
dec
sbb
imul
or
sbb
xor
mov
cmpsl
lock
mov
jbe
or
addr16
push
mov
or
fsub
mov
push
clc
sub
lret
jmp
pop
shll
int3
push
mov
mov
outsl
roll
mov
pop
test
push
or
test
fucomp
sahf
in
push
xlat
fdivrs
test
fisubs
push
imul
xchg
inc
xor
jnp
jp
jmp
add
add
movsb
pop
dec
sahf
das
add
outsl
imul
inc
mov
ljmp
mov
mov
pop
xchg
lcall
mov
jmp
mov
mov
aas
sbb
pop
dec
jns
adc
and
call
mov
fmul
and
jl
xchg
dec
xor
add
xlat
and
cmpsl
push
enter
inc
xor
ret
cmpl
shr
mov
jl
inc
push
jg
push
push
sub
sub
fildll
xor
pop
cld
lock
neg
ret
mov
push
ja
ljmp
test
hlt
xor
add
xchg
fs
sub
enter
push
lcall
repz
into
mov
daa
lcall
xor
in
mov
inc
and
test
push
aad
xchg
imul
out
les
imul
insb
sub
sub
jnp
pop
sbb
inc
aad
pavgw
std
push
enter
cmpsb
jmp
addb
sbb
mov
and
inc
and
fidivs
jp
sbb
shlb
pusha
mov
cmp
sub
dec
mov
pop
stos
inc
cmpl
inc
mov
lret
mov
mov
mov
je
fidivl
cmp
int
div
cld
push
aaa
fldt
cmpb
push
pop
sbb
xor
push
jp
pop
scas
push
add
data16
es
sub
push
sbbb
cltd
pop
mov
pop
pop
pop
cld
push
ljmp
inc
hlt
push
incl
jnp
and
inc
sbbl
test
inc
adc
xor
call
sub
adc
mov
dec
adc
pop
je
mov
xchg
test
cmp
xor
clc
jecxz
add
jl
ss
jnp
inc
inc
clc
inc
lcall
subb
in
ficomps
cmp
jns
mov
dec
push
jmp
dec
sub
enter
jbe
unpckhps
push
cs
or
and
cltd
jno
sahf
sbb
fnstcw
inc
mov
fldt
sub
mov
xchg
pop
sbb
rclb
shrl
add
out
push
sbbb
stos
and
lock
loopne
lock
mov
pop
mov
mov
cli
je
mov
mov
xchg
fucomip
push
fimull
daa
repnz
imul
jmp
sbb
pop
notl
scas
add
es
ja
sub
lret
add
imul
ret
dec
loope
xchg
or
xlat
push
ss
jb
xchg
pop
insl
cli
adc
adc
mov
insb
into
jg
cmp
imulb
sar
and
and
mov
fstpt
cld
jbe
push
cmp
xchg
dec
mov
aaa
aaa
leave
mov
pop
jno
stc
jne
sti
in
out
out
mov
push
mov
xchg
mov
and
sbb
mov
fcomps
sbb
push
mov
pop
mov
jno
push
mov
loopne
cli
lahf
pop
xchg
jecxz
dec
int3
pop
jnp
icebp
shll
cltd
lret
out
sub
scas
arpl
sbb
arpl
xchg
cltd
sub
sbb
push
aaa
mov
out
jg
jnp
mov
loope
or
push
xor
push
je
xchg
adc
loop
inc
sbb
mov
push
sub
pop
xor
test
sub
or
lock
data16
negb
jns
jb
cmp
rorl
mov
mov
mov
sti
sub
sbb
sti
xor
add
lock
pushf
and
js
push
cvtdq2ps
add
dec
lret
sbb
jecxz
mov
cmp
out
or
fdivrs
inc
cmp
mov
sub
les
dec
mov
repz
mov
cmp
dec
out
inc
js
add
jo
xchg
or
ljmp
sbb
sbb
jl
call
notb
or
inc
mov
adc
pop
dec
adc
fisubrs
aaa
mov
inc
or
xchg
mov
es
pop
stos
movsl
cmpsl
js
mov
ss
loop
cmp
or
pop
xor
cmp
jmp
lods
lcall
pusha
in
loop
cmp
pop
or
xor
cs
sbb
add
dec
jmp
inc
mov
out
cmpsl
out
mov
iret
call
stos
dec
popf
cs
repz
jns
mov
inc
push
je
loope
adc
push
xchg
mov
ljmp
adc
jbe
cmp
lds
sub
faddl
adc
adc
push
inc
mov
out
ficoml
and
xor
and
jge
mov
mov
cmp
adc
int
cli
test
push
or
jbe
jno
xchg
xlat
inc
ja,pt
add
imul
push
mull
dec
cmpsb
inc
adc
cmpsl
pop
dec
in
and
inc
adc
aas
jmp
shlb
pop
mov
adc
stos
aas
mov
push
or
notl
stos
sahf
pop
test
adcl
fsubrs
out
pop
stos
dec
sub
lret
push
in
out
lcall
in
out
pop
push
adc
cld
add
sub
sub
mov
std
das
fwait
out
dec
daa
jne
push
mov
fmull
cmp
sbb
or
lahf
lcall
and
jne
dec
xchg
push
popf
xor
pop
xchg
iret
mov
lahf
test
sbb
jnp
jae
fsts
lret
ffree
mov
fmulp
mov
push
in
add
or
dec
jo
cmp
dec
imulb
xor
loop
js
ror
sub
and
jae
or
add
or
cmpl
call
aad
repnz
insb
mov
mov
fs
fsts
cmp
fdivs
inc
push
xor
xor
cmp
leave
push
pop
pop
pushf
int3
cmpb
ret
dec
pushf
incl
and
xchg
movsb
nop
or
xor
ja
mov
mov
push
mov
fcompl
mov
or
fwait
hlt
popf
mov
jbe
mov
mov
mov
arpl
dec
adc
inc
xorb
mov
fnsetpm(287
sbb
int
or
aas
je
cmp
cmc
sbb
mov
xchg
cli
ss
test
std
idivl
fdiv
add
cmp
int3
notb
pop
incl
stos
xchg
aam
jbe
scas
jne
or
insb
pop
insl
fucomi
iret
sub
movsb
and
test
pushf
push
cwtl
cmp
aad
bound
aas
and
xchg
imul
adc
xor
jg
std
enter
dec
sub
pop
pop
in
aaa
cmc
and
std
and
lea
mov
ds
ret
out
stos
sbb
addr16
jo
jnp
test
ficomps
js
xor
jno
or
xchg
add
pop
aad
jle
mov
fs
xor
adc
shl
jbe
stc
or
or
les
sbb
push
dec
pushf
and
sub
jne
dec
jo
arpl
dec
lret
xchg
cltd
loop
arpl
sahf
into
imul
lahf
shll
push
sbb
adc
mov
xchg
xchg
popa
out
loop
pop
mov
push
and
or
mov
push
je
rcll
out
in
pop
and
imul
sbb
inc
ficoms
cltd
mov
sarb
dec
test
jp
decl
lock
into
in
call
sbb
movsb
push
xchg
jb
movsb
mov
dec
insb
jl
icebp
pop
and
hlt
popf
loop
out
mov
loopne
cmp
push
in
lods
inc
pop
and
cmp
lret
es
imul
jl
cmp
call
lcall
xor
adc
adc
imul
testl
xchg
jnp
sub
loop
jle
or
cmp
pop
add
test
mull
or
or
cmp
test
adc
sub
cmp
mov
popf
shrl
call
dec
xor
stos
sub
in
ret
jmp
fs
movsl
inc
mov
cli
adc
lret
shrb
in
frstor
pop
test
lods
inc
sahf
insb
jecxz
add
mov
lea
xchg
xchg
in
stos
xor
mov
daa
mov
xor
lret
pop
mov
adc
and
cmpsb
lods
data16
aam
sub
inc
mov
negl
rcr
daa
add
addr16
enter
test
je
pop
ljmp
aas
mov
inc
std
mov
mov
jb
push
mov
add
in
rcll
loop
mov
pushl
push
mov
leave
cmp
pop
cmp
mov
dec
xchg
out
push
je
push
aad
movsb
cmp
gs
pushl
pushf
sar
andl
pushf
call
xor
lahf
mov
adc
push
jb
scas
lret
rol
mov
into
mov
lret
ss
mov
jp
jnp,pn
push
dec
and
cmp
fldl
gs
rcrb
xorb
fs
xchg
xor
jge
test
loope
jge
and
mov
out
xchg
sahf
mov
sbb
scas
stos
jnp
xlat
cmp
loopne
dec
pusha
jns
adc
sub
movsb
jl
popa
out
pusha
sub
es
xor
enter
repz
fisubs
dec
rclb
int
cwtl
add
ja
jno
jne
test
push
lcall
and
imull
add
xchg
enter
xorl
fistpl
xor
fisubl
pop
aam
daa
cs
movsb
dec
stc
adc
sbb
pushf
lcall
pop
std
lret
negl
imul
call
dec
cwtl
adc
cmp
cltd
ja
pop
mov
inc
jle
mov
cld
pop
jp
fdivl
xchg
mov
mov
or
enter
xchg
jae
clc
call
pop
scas
add
cld
nop
push
faddp
cli
cmp
xchg
add
pusha
sbb
lock
in
jge
je
dec
cmp
mov
gs
inc
jg
adc
repnz
push
roll
mov
or
lahf
cmp
jecxz
dec
xchg
pop
xchg
mov
loopne
jne
xchg
mov
test
in
std
dec
xor
xor
add
cmpsb
dec
idiv
cmp
add
xchg
pop
mov
js
lahf
or
sub
jbe
insl
push
cli
cltd
data16
jmp
dec
lea
or
andb
cmp
mov
push
jo
push
lret
add
add
cltd
imul
arpl
cmp
and
push
pop
xor
cmp
mov
mov
inc
orl
sbb
inc
enter
rolb
ljmp
push
loop
push
fs
gs
loop
adc
lret
pop
repnz
jne
inc
leave
ret
xor
popfw
cltd
insl
mov
xchg
ds
jns
loop
rcll
loopne
fmuls
pop
mov
jge
or
fdivl
in
lock
adc
aad
add
repz
lods
inc
pop
mov
dec
aam
jae
mov
jl
sub
sub
mov
xor
xlat
push
adc
divl
inc
or
jecxz
sub
inc
cwtl
mov
ret
testb
sbb
or
test
or
aaa
test
shll
movsb
sbb
adc
add
call
lret
out
lds
mov
pop
aam
inc
pop
decb
mov
jge
daa
and
leave
pushf
dec
jmp
je
push
in
inc
and
adc
out
cmc
push
shll
lret
add
jno
ret
aad
pop
ljmp
out
mov
dec
insb
and
jbe
aaa
mov
subl
jno
inc
iret
jg
xor
dec
fiaddl
jmp
and
add
scas
xlat
push
loopne
loope
jb
dec
cld
xchg
jmp
scas
cmp
lock
xchg
or
rcl
inc
mov
fidivs
sub
fimuls
jne
ss
inc
inc
mov
sub
bound
fs
mov
imul
cmp
push
movsb
in
adc
rorb
sub
cmp
test
ret
shll
inc
xor
mov
cmpsb
aaa
subb
sub
or
xor
sahf
fimull
ss
push
aas
sub
xlat
pusha
loope
mov
add
lock
or
or
cld
pop
pop
enter
mov
sbb
dec
cmpsb
xlat
testb
les
mov
mov
jle
cmp
fdivrl
xchg
sub
sbb
sbb
or
push
and
into
outsb
les
fstl
xchg
sub
fildl
inc
es
shlb
cmp
out
ljmp
jge
je
mov
add
sbb
shl
sbb
fbstp
icebp
adc
mov
xchg
in
mov
je
sbb
movsb
nop
sti
push
jg
add
xorl
rolb
jae
rcr
xor
outsl
sub
fwait
adc
test
data16
mov
jnp
xchg
or
out
mov
inc
jo
jb
fnstenv
adc
push
pop
xor
mov
adc
and
xchg
ljmp
fdivrs
fidivrl
bound
cmp
adc
cmpsb
fidivrl
loope
push
aam
jmp
inc
sub
pop
lods
cmpsb
sub
mov
out
popf
push
test
push
rorl
cmp
xorl
jne
and
test
mov
cmp
inc
imul
test
test
shlb
mov
je
sbb
pop
mov
repz
or
test
bound
inc
aam
cmpsb
add
pop
push
mov
sbb
shrl
or
cmpsl
psrlq
sub
pop
das
loope
pop
xchg
aas
mov
iret
mov
ja
mov
dec
push
or
imul
xchg
outsl
decb
xchg
cmp
and
in
and
cmp
pop
adc
loope
insb
test
das
mov
cmp
push
aam
sub
pusha
cmp
cli
push
mov
div
addb
lods
xchg
sbbl
inc
mov
push
push
inc
xor
jmp
cmp
ljmp
mov
xor
pushf
pop
jl
jno
jecxz
loopne
mov
mov
je
xcrypt-ctr
cmpsl
cltd
mov
mov
aad
fisttps
ja
inc
lret
xchg
cld
cmp
or
add
das
adc
loopne
pop
sub
roll
lods
sub
or
sti
jnp
lret
jns
fldl
hlt
outsl
std
mov
stos
das
out
inc
pop
cmpsl
test
aad
and
mov
push
es
test
push
cmc
or
popa
jae
das
or
ficoms
cmpl
les
xchg
stc
jmp
ss
daa
shrb
imul
js
xor
xchg
xchg
add
mov
adc
movsb
xchg
pop
dec
movsb
mov
gs
sbb
icebp
pop
test
lock
in
and
dec
mov
jmp
ds
rorb
jg
outsb
pop
pop
mov
adc
or
dec
pop
inc
fwait
pop
out
arpl
inc
shl
test
arpl
mov
pop
xor
sti
test
orb
into
push
arpl
fcompl
pop
mov
out
mov
rol
das
call
clc
or
mov
stos
inc
stos
inc
xchg
vmread
xor
sub
mov
or
fwait
mov
das
mov
mov
imul
xchg
rorl
dec
mov
std
ficoms
xlat
mov
push
sbb
clc
xchg
adc
xchg
pop
arpl
sub
mov
mov
mov
xlat
in
sub
mov
orl
call
out
cmp
sbb
arpl
add
fdivrl
test
add
mov
ret
cltd
jp
sub
pop
je
mov
lods
shrb
add
ljmp
jns
hlt
arpl
popa
loopne
cmpb
std
lret
mov
adc
add
out
mov
jmp
mov
mov
sub
push
std
add
loop
shll
outsl
faddl
loope
clc
leave
shr
adc
xorl
subl
xor
push
cmpsl
inc
sbb
sub
xchg
cmpl
popf
ljmp
lahf
dec
and
movsb
rcll
imul
rorl
pop
xchg
test
rorb
nop
cmp
push
mov
xchg
sbb
add
lret
lret
aas
cmp
jmp
sbb
mov
cltd
ja
ljmp
call
mov
pop
call
sub
mov
out
push
je
xor
cltd
sbbb
scas
push
add
repnz
or
imul
mov
das
icebp
mov
inc
inc
frstor
int
dec
into
ds
mov
cmc
dec
or
jmp
enter
add
ror
ds
push
push
imul
dec
push
ljmp
repz
lcall
push
andb
pop
js
xchg
mov
mov
mov
test
mov
inc
inc
sbb
addr16
jg
or
mov
mov
enter
mov
adc
jge
sarl
outsl
lcall
xchg
enter
push
add
or
xchg
test
cwtl
inc
lock
or
mov
aam
and
shll
add
jmp
cmp
scas
sbbl
inc
mov
outsl
jns
incb
iret
loop
iret
int
stos
pop
jb
inc
jp
das
lock
loope
mov
adc
int3
jbe
imul
js
ljmp
mov
xor
xchg
loope
mov
testb
lahf
dec
mov
cmpl
cmp
mov
xor
adc
jle
dec
add
lret
mov
call
in
fwait
push
adc
add
aam
in
nop
add
sub
stos
mov
push
pop
and
sub
jge
ja
mov
pusha
or
sbb
test
push
fldenv
stos
pop
sub
ret
test
mov
stos
pop
pusha
int3
push
inc
dec
xchg
jmp
sub
lods
dec
or
rcrl
cmp
fs
or
mov
xchg
cmp
mov
idivb
sbb
clc
out
cmpsb
into
push
and
std
add
push
sub
push
inc
lahf
into
or
pop
sahf
cld
cmp
add
cmp
subb
fldcw
fwait
or
cmc
ds
mov
dec
mov
loope
js
aam
fldl
dec
mov
push
mov
test
jns
push
imul
hlt
into
outsb
add
and
sbbb
mov
insl
clc
push
rclb
es
shl
ja
fstps
popf
dec
jne
and
dec
mov
adc
add
mov
inc
mov
icebp
testl
xchg
outsl
push
lock
sub
rep
pop
sbb
fsubs
xor
sbb
sub
inc
subb
out
dec
and
test
orb
pushf
mov
xor
js
adc
sub
or
adc
arpl
push
mov
xor
mov
nop
dec
jp
and
cmp
fwait
inc
sub
pushl
or
ficomps
dec
mov
insl
mov
jl
filds
and
or
pop
xchg
sub
pop
lock
stos
mov
xlat
add
jo
stc
mov
mov
outsb
lret
aam
ret
imul
adc
mov
lock
mov
testl
les
jg
std
jne
push
notb
testb
xor
add
pop
lock
lock
aaa
icebp
repnz
push
adc
mov
sbb
jmp
and
xchg
cmp
pop
sbb
sub
fnstsw
ret
stc
data16
imul
testl
adc
je
xchg
inc
cld
inc
mov
jne
lcall
pop
pop
pop
xor
sub
out
andb
sub
stc
mov
cmovge
xchg
cwtl
and
add
idivb
test
mov
js
mov
sub
popa
lods
lods
ret
jp
fbld
or
nop
lods
mov
frstor
jb
ljmp
cmp
sub
or
rorb
aas
sbb
or
imul
int
xchg
mov
jb
pop
or
jmp
push
fisubl
sub
test
mov
hlt
inc
popa
sbbb
data16
pop
mov
push
gs
push
inc
jp
int
adc
ret
jle
sahf
fistpl
adc
inc
mov
add
out
call
ds
pushl
cmp
cmp
std
cld
adc
pop
je
jb
loopne
xor
adc
inc
test
pop
jnp
mov
rol
mov
pop
leave
jl
and
add
push
ds
scas
mov
add
gs
cwtl
cmp
jbe
out
inc
leave
divl
test
addb
mov
sahf
mov
rcl
sub
push
popf
lea
arpl
imul
inc
nop
lods
subb
cli
icebp
xor
hlt
push
jno
push
xchg
in
movsb
bnd
jnp
inc
cmpsl
sbb
stos
repz
sbb
mov
push
out
sbb
cltd
rclb
movsl
mov
and
lea
divl
sub
lods
sbb
sbb
shr
add
mov
xchg
sbb
in
xchg
andl
pop
mov
push
outsb
es
dec
jmp
js
cmp
inc
imul
paddb
jns
pop
xor
inc
or
adc
mov
or
adc
int
in
jp
ss
pop
sbb
sbb
andl
iret
pusha
jecxz
jb
mov
xlat
fs
mov
or
decb
cmp
add
lret
or
icebp
jge
xchg
xchg
shll
popf
dec
mov
cwtl
pusha
push
jb
or
xor
push
sbb
mov
cmpsb
mov
fstpl
cmp
lret
jb
test
mov
sbb
cmp
xor
push
mov
jbe
out
or
mov
out
scas
push
xchg
adc
add
xchg
sbb
mov
sub
rorb
subb
in
push
fsubl
mov
cmpsb
or
cmp
stos
xor
lods
mov
shrb
mov
sbb
cmpsl
mov
adc
movsb
dec
cmp
sbb
sahf
mov
add
sbb
pop
push
int3
dec
pop
js
pop
adc
movsl
lea
add
lret
int
into
in
into
cmp
adc
cmpsl
xor
ljmp
pop
out
mov
jl
mov
sbb
or
adc
arpl
inc
adc
scas
mov
popa
pop
loopne
adc
lret
cwtl
fadds
adc
pop
jnp
ret
cli
out
out
sbb
mov
ror
jne
aad
cmp
mov
pop
dec
mov
jle
mov
movb
lahf
outsb
adc
or
lods
divb
xchg
pop
xchg
cmp
sar
ss
xlat
and
sub
sub
dec
or
xchg
sbb
push
mov
sbb
xor
fbstp
pop
into
repnz
iret
imul
lods
addr16
js
cwtl
aas
clc
pop
and
aas
shlb
mov
scas
xlat
sbbb
mov
push
call
jb
daa
jbe
inc
jo
xlat
nop
loope
fiaddl
inc
repnz
push
sbb
in
dec
jp
push
and
into
mov
add
fwait
xchg
scas
ss
cmp
fnstenv
mov
pop
stos
stc
jmp
aaa
fidivs
and
ja
adc
das
aam
and
sti
mov
mov
sub
in
jge
mov
mov
dec
adc
sbb
jmp
out
push
cltd
leave
dec
push
aam
fcmovbe
cmp
pusha
fwait
mov
mov
dec
mov
or
add
inc
and
cmp
lods
push
addr16
cmp
xor
je
pop
or
mov
sub
mov
lods
jnp
fcompl
add
aam
mov
jp
stos
loop
lea
call
js
mov
outsb
push
fistps
addb
sbb
inc
pop
stos
jl
jle
jae
inc
mov
insb
and
je
shlb
ds
cmpb
lods
add
fstpl
xchg
pop
lret
lea
repz
jge
push
les
mov
inc
imul
dec
cwtl
cmp
out
adc
inc
aam
push
inc
pop
adc
mov
dec
mov
in
cmp
and
pop
nop
insl
mov
lds
and
movsl
jmp
pop
and
pushf
jge
xor
sbb
and
sbb
xor
jp
adc
pushf
dec
push
into
out
test
repz
jne
rol
ja
xchg
loope
or
add
or
pop
cmp
mov
iret
insl
cmpsl
and
ljmp
mov
sub
cli
push
fists
xor
ret
clc
push
clc
pop
xchg
add
xor
mov
cmpl
or
bound
ljmp
movsl
int
pop
pop
ret
push
push
or
not
loope
push
icebp
xchg
xor
daa
gs
mov
sbb
test
ss
pop
dec
sub
inc
pop
dec
in
scas
into
shr
sub
testl
js
in
adc
dec
test
dec
mov
shlb
sub
out
add
or
cmp
cltd
or
lcall
outsl
mov
ds
arpl
adcl
xchg
imul
das
dec
int3
outsb
mov
add
subb
test
std
jg
xchg
mov
adc
mov
xor
adc
jle
sbb
popa
push
insb
mov
mov
cmpsl
jmp
inc
lock
movsb
repnz
enter
lahf
out
shrl
mov
jg
mov
pop
call
in
xchg
idivl
push
addb
or
pushf
shll
shrb
pop
add
mov
mov
fisubrl
pop
sahf
mov
pop
cwtl
es
ror
test
and
loop
movsb
cli
lds
sub
cmp
cmp
jmp
cmc
jecxz
ljmp
push
dec
or
aad
pushf
or
mov
sarb
andb
cmp
and
out
and
and
add
shll
shlb
mov
icebp
mov
icebp
cmp
out
aaa
loop
paddd
cmc
jcxz
xchg
fstl
movsb
mov
pushf
and
mov
sahf
mov
out
jb
pop
lcall
notb
mov
cmp
and
or
outsl
jmp
and
mov
xchg
into
cld
dec
cmpsl
add
rcl
cmp
cmpsl
mov
sahf
in
or
cmp
pop
mov
push
loope
test
inc
or
jg
out
pop
ja
sbb
rcll
cmp
cmp
adc
inc
inc
call
filds
fistpl
addr16
pop
and
out
shlb
dec
add
lret
or
inc
pop
and
scas
decb
cmp
movsb
xchg
dec
dec
data16
lret
jg
push
sbb
cmp
sbb
cmp
stos
fisttps
cmc
ret
arpl
insl
mov
xchg
jae
cmp
sub
or
jle
aam
dec
sbb
and
orb
popl
stos
mov
xchg
outsb
shll
shlb
sub
mov
sbb
or
and
loope
out
insl
fimuls
lea
into
call
imul
ja
insl
xchg
ret
bt
in
repnz
and
pop
fists
in
pop
push
cmp
dec
adc
ja
xor
adc
sub
call
push
mov
mov
scas
mov
cli
sub
cli
push
in
xchg
fnsave
mov
jecxz
mov
loope
in
dec
xchg
shll
push
out
aaa
cmp
or
out
mov
sbb
inc
cmc
inc
mov
push
add
mov
push
jg
mov
int3
push
imul
shrb
pop
cmp
jecxz
cmp
pop
lock
dec
addl
arpl
mov
push
scas
out
pop
fsubs
fidivrs
mov
orb
sbb
movsb
sub
and
movsb
xor
aad
dec
mov
mov
sarl
xchg
mov
movsb
mov
pop
mov
flds
mov
sbb
push
fxch
test
leave
fdivr
rolb
jmp
loopne
insb
test
mov
push
xchg
push
std
mov
pop
cmp
mov
hlt
shll
sub
pop
das
lea
mov
lods
cmp
pop
sbb
sub
fmulp
iret
xor
pop
inc
lea
pop
add
adc
es
jnp
rclb
mov
addb
cwtl
popa
addr16
adc
in
xor
fwait
xchg
sub
daa
push
out
dec
jb
inc
sub
outsl
mov
sarl
push
push
repz
push
push
cmp
lock
loopne
dec
cmpsb
pushf
push
or
not
insl
push
cmp
pusha
add
sub
jle
scas
push
push
mov
cs
add
and
shll
in
popf
fimuls
xchg
mov
mul
or
push
cmpsl
fwait
test
push
pop
sar
out
and
sub
sub
das
mov
pusha
lahf
popa
outsl
lret
ljmp
push
mov
rclb
std
sbb
pop
cmp
mov
cmc
stos
mov
daa
cmp
mov
push
hlt
sub
ljmp
outsl
inc
mov
mov
xchg
sub
adc
int3
bound
pushf
add
push
jno
jne
out
and
mov
or
ss
dec
fistpll
mulb
pop
mov
mov
mov
or
xchg
in
sub
sub
mov
mov
aaa
inc
push
in
pop
add
sbb
or
mov
lock
outsl
sub
mov
push
das
pop
mov
cwtl
push
mov
pop
add
in
or
popf
lea
push
jbe
rcrb
inc
xchg
loopne
cmp
mov
cltd
sti
fninit
pop
pop
mov
int3
push
insb
loopne
adc
cs
cmc
and
push
nop
add
xor
cli
mov
sti
and
xor
mov
ror
in
cmp
and
mov
sub
push
mov
add
inc
ja
add
stc
mov
leave
rorl
mov
sbb
sub
dec
cs
gs
imul
out
adc
inc
xchg
daa
jp
pop
xchg
sub
and
sbb
sbb
iret
loop
js
sub
lods
cmc
mov
stc
fisubs
aad
or
shll
ss
mov
inc
nop
mov
pop
cwtl
lret
mov
xor
mov
xchg
movsb
ret
mov
cmp
xchg
bound
jp
pop
push
jmp
mov
ret
stos
loopne
cmp
arpl
shrl
mov
xor
out
scas
out
push
push
in
sub
sub
inc
lret
cmp
shrl
mov
pushf
sub
pop
inc
es
jg
insl
std
jecxz
adc
push
fstpt
mov
arpl
ror
pop
jae
pop
pop
mov
std
in
inc
leave
pop
daa
jp
xchg
jne
add
ret
repnz
sbb
fisttps
xor
pop
test
inc
sbb
jge
mov
stos
push
jb
cwtl
test
mulb
loope
es
pop
xchg
cmpsl
call
gs
bound
clc
lds
fwait
fs
pop
daa
test
xchg
mov
dec
out
cs
in
ficompl
pop
push
insb
ret
mov
sub
xchg
movsb
cli
xor
lcall
and
ret
ret
shlb
stos
inc
and
dec
mov
add
aas
and
mov
xor
jo
sahf
mov
mov
subb
add
rcll
syscall
mov
dec
push
adc
inc
cs
sti
bound
mov
adc
pop
push
sarb
xchg
adc
pop
jns
jnp
pusha
lea
and
rorb
aaa
sahf
inc
cwtl
push
jbe
push
mov
add
addr16
dec
push
imulb
inc
dec
or
mov
dec
das
ret
push
jae
mov
lret
adc
stc
rolb
xchg
lcall
xor
or
movsl
fldcw
lcall
adc
xor
out
int
jle
dec
adc
pop
xor
inc
cmp
mov
out
lods
ret
ficomps
outsb
sti
mov
jno
push
cmp
ja
ret
shl
out
lods
addb
cli
aas
fldl
jnp
pop
push
into
test
das
jbe
xlat
es
mov
cmp
dec
jl
enter
or
imul
lods
inc
mov
pop
xor
lret
ficompl
inc
sti
aad
xor
fwait
loope
push
in
pop
sub
ss
sub
test
lcall
nop
loope
add
test
pop
jnp
jge
es
insl
arpl
adc
xchg
inc
dec
jo
push
mov
pop
mov
add
and
or
adc
pop
sub
sub
jmp
shll
push
inc
or
pop
cmp
xchg
and
cmp
js
fisubrl
mov
and
sub
cmp
ds
fwait
mov
push
mov
jae
cmp
leave
adc
jb
test
dec
daa
test
push
inc
ss
mov
fldcw
push
es
mov
sbb
iret
sti
outsl
sbb
dec
mov
xchg
into
add
cmpsl
es
xchg
arpl
jnp
inc
mov
das
out
xchg
mov
out
mov
outsb
jl
add
pop
mov
les
out
fs
add
loope
push
imul
rcll
inc
sbb
out
iret
or
mov
push
iret
or
xchg
inc
in
add
or
testl
xlat
mov
cmp
into
mov
jl
mov
jae
adc
sub
jne
add
data16
push
ret
fs
jg
bound
into
in
dec
mov
sysret
inc
jns
push
shll
int
xchg
in
lods
push
adc
adcb
inc
jecxz
sti
pushf
add
ficompl
mov
xor
stc
int
cli
cli
or
sub
outsb
sub
inc
cmp
pop
popa
add
xchg
xor
mov
mov
mov
cmp
cwtl
aad
adc
into
dec
int3
or
test
dec
add
sbb
mov
push
jp
mov
fldt
rcll
mov
sbb
add
sbb
cmp
mov
push
dec
push
push
shll
and
add
mov
and
into
or
sub
push
popa
jg
mov
or
fisubrl
negl
mov
lods
shlb
inc
xor
lods
js
out
fldenv
pop
push
cmp
jmp
popl
push
pop
popa
xor
in
xor
fwait
int
push
cmpl
mov
mov
mov
or
pop
xor
popa
lahf
jae
imul
and
adc
gs
aas
lds
jge
cmpl
inc
adc
scas
lds
shlb
lret
int
sub
dec
or
loope
pushl
mov
mov
pop
xor
adc
into
fisttps
dec
fistl
mov
jo
adc
pushf
sbb
ret
dec
dec
sbb
imul
and
push
mov
bnd
in
xor
cmp
inc
sbb
push
in
and
mov
sub
mov
or
adc
sub
addr16
rclb
daa
fcomps
pushf
mov
push
ret
pop
dec
jo
and
popf
xor
in
movsb
push
mul
adc
xchg
testl
mov
aad
pusha
sahf
std
scas
xor
jecxz
inc
cmc
lea
jne
into
nop
dec
pushf
sub
int3
mov
or
std
dec
xchg
inc
xchg
xchg
mov
leave
insb
cli
push
aas
ds
shll
out
dec
xchg
loopne
jns
lock
sbb
and
and
roll
jb
mov
xor
cld
lret
fildl
mov
xchg
xlat
or
mov
sbb
lods
xchg
add
int3
inc
lds
adc
sub
lock
fmulp
lahf
lcall
nop
push
subl
mov
ja
je
in
stc
mov
into
push
dec
negb
pop
jmp
mov
lret
aas
mov
cmc
pop
mov
fs
cmp
cltd
hlt
insb
clc
cld
cltd
mov
pop
pop
or
mov
out
inc
movsl
mov
push
addr16
lock
pusha
shll
movsl
jnp,pt
std
arpl
inc
xorl
mov
push
and
mov
loope
dec
push
shrl
les
insb
in
loop
rorl
and
int3
fdivl
mov
mov
xlat
sub
loope
dec
inc
hlt
mov
and
lock
pop
push
in
rorl
jmp
loopne
inc
xchg
je
add
imul
xchg
stos
shl
out
cmp
test
dec
sub
scas
cmp
stc
sbb
cld
and
inc
fs
or
data16
push
movsb
xor
pop
add
imul
shlb
clc
xor
xorl
dec
ds
push
bound
mov
imul
xor
fnstcw
jns
sub
fisubl
or
loop
push
in
mov
rol
outsl
scas
outsb
sub
icebp
pop
outsb
push
xor
test
lahf
or
call
out
fstps
jnp
mov
jl
inc
xchg
jae
mov
dec
and
jmp
sarl
outsl
xor
dec
dec
inc
ljmp
or
js
inc
lcall
in
in
leave
popf
push
fldl
xchg
xchg
jns
sub
imul
adc
cmp
add
dec
push
popf
insl
stc
sahf
andb
testb
pop
aad
xor
cmc
sbb
jne
clc
xchg
mov
sub
sbbb
xor
jo
loopne
adc
xor
inc
cmp
or
fwait
cmp
leave
pop
out
rorb
jl
mov
xchg
jb
push
not
jbe
gs
pushf
and
xlat
js
sarl
aas
push
push
sbb
loop
inc
jb
js
stos
sbb
popf
movsl
sbb
pushf
scas
cmp
bound
mov
push
mov
fadds
sub
rcl
shl
inc
std
movsb
jmp
popf
sbb
je
inc
test
ljmp
lods
jno
loop
sbb
fsts
push
in
je
ret
add
dec
mov
mov
inc
dec
inc
int
jne
shll
cmpsb
or
int3
mov
rclb
dec
les
outsb
loop
adc
loope
aas
rcrl
mov
fmulp
mov
xlat
in
aad
jb
xor
xor
xchg
jmp
hlt
pop
mov
and
jle
sbbl
repnz
or
xor
sub
xor
pop
xchg
xchg
js
rcr
mov
ja
insb
fsubs
iret
shlb
mov
add
mov
mov
arpl
imul
lret
sbb
cmp
mov
popl
lret
sub
xchg
cmp
adc
jo
add
fwait
je
and
test
out
sbb
pusha
test
push
ljmp
test
ret
bound
ljmp
out
ret
mov
addr16
push
inc
mov
add
rcrl
fildl
inc
mov
arpl
jg
push
mov
std
adc
and
lock
pop
dec
push
mov
filds
pop
push
jns
popf
lcall
inc
add
mov
daa
bound
and
mov
mov
fcoms
dec
cli
mov
pop
push
popf
pop
inc
cmp
sbb
mov
push
dec
mov
xchg
and
ret
sar
mov
testl
stc
pop
and
insl
daa
aaa
or
dec
push
mov
sbb
mov
std
cmpsb
jnp
add
ret
pop
test
mov
sbb
aad
lock
cmpsl
xchg
ret
out
and
push
or
cld
and
jl
leave
sahf
jo
ja,pt
pop
in
sub
cmc
sub
orl
ja
lret
mov
jge
sahf
test
ret
enter
and
or
scas
leave
xorl
and
mov
push
push
rorl
xchg
pop
inc
aaa
icebp
into
cmc
dec
pop
mov
imul
int3
daa
sbb
sbb
icebp
pop
jbe
nop
jl
xchg
push
dec
add
ljmp
adc
adcl
mov
cmpsb
cmp
jmp
outsl
bnd
scas
mov
mov
nop
cli
pop
cld
pop
sub
ljmp
mov
in
fsubrs
mov
sub
adc
int
jnp
lret
add
mov
inc
ljmp
xchg
insl
imul
iret
mov
test
jno
mov
rolb
psadbw
xchg
mov
daa
leave
mov
mov
movsb
in
dec
or
sbbl
imul
xor
or
cmp
lea
cmp
cli
adc
xor
jl
mov
jl
push
xchg
mov
fbld
test
outsl
lea
and
adc
pop
push
cmpl
rcrl
add
add
lret
xchg
stc
out
push
call
into
mov
inc
ret
jmp
add
cli
gs
sub
inc
mov
adc
lret
sahf
inc
push
push
push
adc
pop
or
adc
clc
cmp
mov
jb
cmp
js
xor
stc
leave
and
adc
mov
leave
xchg
fstl
cmove
lret
mov
ror
adc
sbb
mov
inc
cld
pop
sbb
jle
hlt
mov
call
xor
ret
loope
bound
cli
loop
cli
fnstcw
add
adcl
aas
jp
jno
sbb
out
xor
outsl
ss
pop
ljmp
pop
pop
push
sbb
jle
add
push
fsubl
inc
inc
cmp
lods
adc
xor
fiadds
roll
jne
adc
jne
push
push
pop
mov
lods
cld
cld
icebp
push
adc
das
cmp
add
dec
add
mov
cmc
mov
fdivr
mov
inc
mov
push
fprem
dec
fwait
cmp
in
xchg
push
jb
lret
sbb
xchg
and
cmpsl
repnz
cmp
popa
imul
mov
xchg
into
icebp
adc
rcrb
sti
testb
stc
or
test
ret
push
ret
pop
je
inc
std
mov
ja
pop
cmp
and
ss
add
xor
aad
xchg
add
loopne
nop
dec
jle
add
data16
stos
push
mov
popf
mov
mov
lret
cltd
mov
roll
mov
es
jecxz
cmp
pop
clc
fidivrl
jl
lock
rcll
loop
subb
enter
push
mov
ret
adc
je
stos
xor
mov
les
cltd
nop
xor
jecxz
fcomps
data16
push
das
pop
jmp
test
adc
movl
inc
mov
sbb
cmp
outsb
out
mov
dec
jl
jg
cli
or
nop
lods
stos
fs
in
and
sub
andl
and
jnp
push
cmp
xchg
pmullw
stc
fimull
into
xor
adc
rol
sbb
sub
xchg
lea
mov
sahf
cltd
ds
cmpsl
lahf
pop
dec
inc
mov
shll
mov
mov
loope
mov
dec
dec
inc
jb
pop
in
ljmp
adc
fnsave
dec
or
repnz
ret
testl
mov
cmpsl
and
bound
inc
cs
loop
xlat
pop
mov
mov
negl
adc
jge
pop
adc
movsb
addl
cmp
jb
imul
lds
xor
mov
je
movsb
sbb
addr16
jl
jmp
inc
sbb
lcall
cmp
push
cmp
jle
mov
dec
aam
jno
repz
cmp
fsubl
pop
stc
xchg
rolb
test
rcrb
inc
mov
push
add
adc
jo
dec
arpl
mov
dec
in
js
xchg
push
es
pop
mov
sub
inc
pop
inc
sbb
xchg
inc
dec
popf
inc
mov
out
mov
clc
movsl
rorb
into
out
push
mov
aam
push
mov
movsb
aas
jnp
or
and
cmpsb
sub
mov
pop
jb
inc
xor
sub
lret
add
mov
mov
fildl
ret
dec
bound
scas
inc
dec
jb
jle
in
aam
and
filds
sub
in
stos
aad
mov
dec
andl
fdiv
popa
ret
ja
rorb
rep
dec
cmpsb
sbb
and
test
and
addr16
mov
jecxz
loopne
or
cmp
fwait
mov
sbb
push
cmovs
xor
insb
mov
sar
ljmp
stos
in
gs
scas
cltd
and
rcl
daa
sbb
sub
ret
jbe
leave
inc
push
ljmp
pop
dec
and
or
jg
js
jmp
sarl
pusha
pop
jo
testb
stos
push
sbb
mov
popf
popf
mov
mov
insb
call
cmp
fwait
sub
jo
and
addr16
push
mov
push
xlat
movsl
orl
dec
cmp
imul
xchg
filds
xchg
jmp
js
ja
stos
push
mov
pop
fadds
sbb
sbb
leave
test
dec
pop
fsubs
lret
fpatan
pop
jge
push
bnd
fisubrl
push
dec
enter
test
cmp
in
fiaddl
stos
aas
test
or
mov
pop
cmp
sub
in
lock
test
jmp
and
mov
mov
je
jbe
sub
and
cs
orb
stc
popa
popfw
ret
int3
rolb
pop
scas
inc
add
repz
pop
lcall
add
push
in
ds
jnp
dec
sbb
xchg
into
xor
xlat
insb
cmp
lods
inc
outsb
test
sbb
mov
mov
lods
ljmp
and
ffree
xor
xchg
push
mov
inc
sahf
daa
rcrl
mov
insb
jl
jl
out
outsl
arpl
imulb
outsl
loopne
xchg
mov
ja
int3
lods
push
int3
loop
mov
sub
ficoml
test
pop
stos
inc
aaa
push
push
loope
in
movsb
and
out
add
mov
lret
lahf
sbb
push
xor
lds
cmp
lods
aad
fdivl
into
push
in
dec
xor
pop
ret
mov
outsl
mov
bound
jle
sub
push
addr16
dec
dec
cmpl
dec
jge
mov
jnp
adc
adcb
xchg
test
ror
push
dec
pop
popa
jbe
jl
mov
mov
fldenv
jle
adc
adc
inc
movq
add
scas
or
push
adc
mov
push
cmpxchg
test
test
clc
and
jecxz
aas
xor
stos
xor
arpl
stos
rcll
movsb
inc
sbb
popf
mov
cmp
jle
and
sub
mov
cmp
lock
fwait
jecxz
mov
divb
bsr
dec
out
popa
sub
or
test
add
nop
sbb
pushf
lods
insb
and
jl
xor
cmp
push
aad
movsb
fs
fdivrl
js
jns
sub
clc
dec
cmp
and
xor
sbb
push
rcll
jmp
jge
or
add
sub
icebp
stos
arpl
lea
add
xor
add
inc
lods
cmpsl
imul
mov
cli
outsl
fildll
pop
into
jnp
imul
mov
je
scas
xor
dec
cmpsl
mov
sub
push
sbb
push
loope
xchg
mov
pop
cmovge
shll
fldt
into
ret
inc
add
fildll
xor
int3
inc
or
dec
xchg
or
mov
add
pop
mov
pop
sub
movsl
xchg
add
cmp
ja
dec
dec
lea
cmp
sbb
xchg
jecxz
addb
ret
push
mov
push
inc
gs
pop
push
cld
xchg
add
enter
pop
iret
pop
lahf
lods
ret
jb,pt
cwtl
xor
gs
mov
mov
mov
leave
aas
enter
test
and
aad
add
pop
les
ja
lea
xor
in
jl
adc
cli
push
jg
lods
lods
cmpsb
test
repz
movsl
shl
idivl
mov
add
js
jl
sbb
mov
sbb
mov
pop
fldenv
mov
push
ss
int
popa
ret
cwtl
imul
dec
add
mov
jg
in
repz
sub
lret
adc
add
test
mov
xor
out
repz
fisttpl
cmp
mov
nop
cmc
lock
pop
orb
adc
sbb
mov
pushf
sarb
xchg
or
rcrl
out
cmpsb
jnp
pop
dec
fwait
pop
clc
aaa
cli
repnz
lret
mov
and
popf
xlat
and
mov
jmp
adc
dec
mov
popf
shll
aad
fwait
shl
adc
jb
cs
iret
xchg
push
push
clc
icebp
arpl
jb
jns
sub
mov
dec
lahf
int3
adc
rcrl
icebp
test
push
cltd
sarb
scas
cmpsb
icebp
push
test
adc
mov
out
dec
movsl
mov
jns
pop
mov
jbe
enter
push
xor
pop
loopne
repnz
xor
clc
mov
loopne
pop
test
test
mov
cli
cmp
xchg
mov
jg
xor
jge
cmpsb
out
adc
out
mov
in
and
and
mov
dec
cmp
jb
imul
mov
ss
mov
ljmp
push
lock
add
cmp
clc
cld
stos
xor
into
cld
xor
jecxz
jb
ret
addl
inc
sub
stos
cmpsb
xchg
sbb
sub
jmp
in
adc
sub
add
insb
sbb
neg
push
add
add
addl
aaa
mov
and
dec
cmpsl
cmp
dec
mov
aam
xor
std
mov
push
fstpl
fsts
jge
add
cmpsb
aas
popf
push
mov
push
push
jne
mov
mov
mov
std
jno
add
into
and
shll
sbb
les
incl
cmp
fucomi
jno
xlat
popf
mov
mov
scas
je
sub
pop
mov
mov
mov
sub
ret
pusha
daa
or
clc
dec
mov
xor
pop
test
adc
cmp
in
shl
inc
repnz
push
mov
divb
je
cwtl
ljmp
jl
xor
add
sbb
jge
jmp
mov
dec
dec
mov
mov
sbb
and
push
push
clc
pop
push
call
stc
and
push
xchg
xor
loope
mov
xor
mov
xor
pushf
mov
mov
jmp
cwtl
rcrl
lea
js
push
int3
sbb
ret
iret
jmp
xor
mov
mov
scas
cltd
insb
test
es
notb
mov
mov
add
inc
mov
sti
insb
add
pop
roll
inc
push
adc
xchg
les
pop
inc
push
jnp
testl
adcb
push
repz
adc
mov
rcrl
cmp
push
lret
mov
mov
rcrl
mov
sahf
lahf
push
xlat
dec
or
in
push
mov
loope
insl
and
loope
sbb
scas
add
xchg
jne
dec
jmp
xchg
insb
stc
dec
lods
xchg
xor
push
in
cmp
mov
mov
and
call
divl
in
sub
cwtl
adc
mov
or
cltd
ret
repnz
filds
fimuls
inc
gs
cmp
aam
dec
pop
adc
loop
gs
dec
shll
add
mov
jnp
sbb
stos
push
jecxz
pop
push
sar
jb
add
pop
sbb
fldt
push
addr16
lea
jecxz
fimull
pop
sub
push
push
xchg
sub
sub
sbbl
push
push
je
mulb
inc
out
sub
push
mov
xlat
shll
and
lret
pop
push
push
jecxz
dec
add
mov
cmpsl
add
in
fucom
cmc
into
test
or
xor
dec
outsl
out
mov
bound
orl
adc
cli
outsb
in
or
cltd
jae
fmuls
ret
dec
mov
adc
mov
int3
aaa
sub
shrb
shlb
test
dec
dec
inc
inc
movsl
test
mov
aaa
mov
mov
lea
aad
or
dec
lods
in
mov
lds
add
and
les
push
xor
faddl
sti
mov
aas
inc
fwait
scas
outsb
out
cld
stos
test
inc
fldt
cmp
jns
in
or
push
test
rorl
xchg
pop
ss
enter
dec
add
dec
fildl
jno
sub
add
xchg
stos
and
imul
inc
push
adc
push
and
jge
shll
jl
inc
in
jge
neg
and
jecxz
dec
or
mov
sbbl
xlat
mov
movsl
mov
pop
mov
test
fs
idiv
int3
fstps
outsl
aam
pop
mov
fdivs
daa
fsubs
push
mov
fwait
cmp
xor
dec
adc
test
js
leave
cmp
dec
aas
cmp
mov
loopne
fs
adc
sub
rorb
outsb
jns
icebp
mov
push
lock
pusha
cmp
cmc
ja
dec
xchg
jg
inc
outsb
popa
cld
das
loop
andb
jne
push
pop
xor
push
stos
lret
dec
mov
mov
xchg
movsl
adc
jne
xlat
stos
jp
cmc
popf
lcall
nop
mov
test
pop
lock
pop
add
jp
adc
stos
out
xchg
sub
fistps
dec
dec
dec
out
fdivrs
push
insl
daa
mov
fimuls
scas
xchg
jle
inc
adc
cmp
jecxz
cwtl
cwtl
sarl
adc
fmul
and
xor
int3
add
es
jp
scas
shll
insl
pop
and
add
pop
in
rolb
sub
jg
xor
cmc
scas
mov
or
inc
cmpsb
inc
mov
pusha
adc
xchg
adc
jge
pop
das
shll
pop
dec
jnp
xchg
cli
inc
and
mov
pop
hlt
fsubs
xchg
xchg
adc
outsb
clc
aaa
push
mov
std
add
adc
push
mov
test
es
xchg
mov
pop
outsl
inc
daa
or
pop
outsb
lret
das
mov
sahf
or
pop
ja
mov
shrb
shll
movsl
addl
xor
pop
test
add
pop
cmpsl
add
mov
xchg
pop
lcall
out
ficoml
jb
fcmovne
push
xchg
setno
popf
mov
jo
cwtl
or
cmp
jmp
cmp
mov
push
inc
lods
push
add
add
cmp
loop
mov
sub
sbb
xor
lcall
pop
jg
int
mov
roll
inc
divb
or
rcr
and
js
xor
push
jae
mov
mov
sbb
pop
sbbb
jge
cmpb
and
mov
pop
fisubrl
cltd
clc
roll
aam
incl
sbb
xor
ret
notb
std
push
loopne
and
ds
adc
iret
pop
out
movsb
jge
into
and
sar
mov
pop
movups
lods
dec
clc
aam
dec
lahf
cmp
cmp
imul
outsl
jno
and
xchg
call
rclb
fdivs
outsb
mov
out
mov
not
jb
lods
mov
adc
insl
xor
psubw
inc
jno
cmpsb
jecxz
gs
data16
mov
int3
test
mov
fwait
std
gs
movsl
fistpll
sbb
mov
or
xchg
dec
div
lahf
lds
sub
ja
inc
sbb
dec
adc
and
mov
or
fisttpll
add
mov
xchg
add
sub
lock
lods
pop
cmp
iret
cmp
hlt
clc
popf
mov
popf
xor
dec
lret
insb
icebp
das
jmp
decl
shll
pop
stos
hlt
adc
fcoms
xchg
add
or
inc
xor
mov
imul
shll
jmp
mov
or
cli
ds
push
sbb
and
pop
xor
and
and
lock
sbb
out
mov
push
sti
ret
scas
subb
les
push
jmp
subl
xlat
adc
cmp
xchg
fldenv
jge
stos
shl
inc
fnstsw
mov
xlat
fldenv
mov
push
mov
xor
out
mov
enter
sarl
push
inc
jo
fwait
aaa
jno
pop
mov
mov
dec
xchg
sub
or
out
mov
xor
dec
je
testl
enter
fnstsw
test
rol
lock
hlt
pop
jnp
ret
lds
xchg
ljmp
mov
in
pop
mov
mov
cmc
xor
push
pushf
test
mov
nop
fwait
xor
mov
xchg
insl
mov
push
mov
gs
xchg
adc
pushf
push
lret
inc
jp
add
jnp,pt
xchg
js
les
mov
ss
xchg
aas
cld
jl
mov
scas
jecxz
lcall
psubusw
jbe
insl
mov
movhps
test
rcrb
popf
ja
adc
movsb
pop
shrl
add
and
sbb
lods
clc
mov
repz
or
sbb
jecxz
xchg
jg
adc
pop
std
push
fdivl
stc
clc
frstor
cmp
lock
inc
xchg
cltd
dec
je
imul
xchg
add
push
jae
sti
add
lcall
lock
adc
test
sub
aam
ss
inc
pop
scas
shl
stc
roll
adcl
jb
stc
cmpsl
addr16
sbb
popa
sbb
movsb
mov
push
jb
popf
jle
incl
pop
das
add
in
push
xchg
push
jo
ret
aam
je
adc
lcall
call
mov
sbb
mov
add
mov
sub
mov
push
inc
shll
adc
or
sti
sbb
mov
pop
in
pop
stos
fisttps
clc
adc
pop
jg
pop
iret
outsl
data16
jle
sbb
jnp
imul
jo
negb
xor
repnz
adc
leave
pop
test
popa
sbb
sub
data16
adc
mov
cwtl
jns
xchg
sarl
mov
dec
dec
xchg
movsb
sti
imul
dec
test
sub
mov
mov
xchg
jmp
mov
sbb
sahf
mov
mov
pop
fbld
repz
adc
daa
lock
loop
out
cwtl
lods
les
jo
mov
outsl
enter
add
adc
sbb
or
jg
pop
dec
subb
pop
lds
and
and
dec
push
sahf
fldenv
in
clc
mov
loope
pop
pop
les
popf
mov
cld
dec
in
pop
imul
aas
into
inc
and
dec
fcomi
repnz
mov
out
push
ret
xor
ficoms
enter
pusha
fnstcw
subb
adc
test
inc
push
loopne
out
scas
shll
sub
in
xor
imul
push
callw
mov
int
outsl
adc
int3
shl
mov
movsl
in
pop
sub
pop
loop
cmpsb
fistps
loopne
aaa
add
scas
inc
mov
or
and
inc
scas
and
mov
lea
movsl
pop
cmc
push
pop
ret
leave
aam
test
lds
xchg
addr16
push
fnstsw
adc
or
aaa
mov
jecxz
mov
clc
pop
or
dec
push
mov
xchg
mov
int
insl
jle
mov
and
sub
add
jb
xchg
mov
jb
jbe
mov
loope
push
loop
repz
push
or
imul
ja
cmp
insb
bound
std
or
rolb
movsl
lods
mov
inc
popa
leave
xchg
mov
rorb
xchg
sbb
mov
push
mov
mov
ljmp
aad
stos
xchg
jae
sub
fdivr
or
dec
mov
dec
inc
rcrl
outsl
xor
movsb
aad
adc
gs
addb
rcrl
inc
testl
orl
lret
sbb
gs
mov
rorl
aas
jp
pusha
push
jl
lret
inc
test
jecxz
mov
addr16
fs
xchg
call
ret
popa
cmc
or
push
push
inc
mov
dec
pop
sbb
subb
cmp
push
lret
cmp
daa
mulb
int3
sub
xor
xchg
and
sub
pop
sub
jg
pop
imul
sbb
xchg
out
or
xchg
cmp
enter
inc
xor
sbb
lds
jp
iret
push
xchg
push
sarb
inc
push
mov
xchg
icebp
inc
pop
outsb
sbb
sub
pop
pop
mov
jg
jp
leave
cmc
inc
mov
dec
or
aas
xchg
cwtl
arpl
daa
jo
je
lahf
jnp
jns
outsl
pop
pop
jno
mov
pop
mov
incb
adcb
lods
andb
fdivrl
sarl
jne
fldcw
pop
and
scas
in
or
and
mov
pop
rorl
mov
daa
mov
push
or
mov
push
sbb
push
dec
mov
dec
sbb
jns
cwtl
push
sbb
lock
sarl
hlt
mov
dec
movsb
fwait
test
in
push
xchg
xor
dec
sub
addr16
imul
ret
addr16
or
jae
test
pop
nop
mov
insb
repnz
adcl
or
clc
int3
cmpsb
dec
data16
add
push
lahf
jae
mov
ljmp
aam
sbb
cli
test
mov
insb
pop
xor
sub
sti
imul
sbb
push
mov
mov
mov
mov
dec
sbb
add
insb
inc
cmp
cli
fldt
jp
loop
out
mov
fwait
test
jg
jecxz
dec
popa
sbb
fst
lods
mov
gs
test
jo
dec
std
cltd
shll
fwait
ret
mov
inc
cmpsl
out
dec
cmc
push
ret
xchg
leave
mov
push
fldl
jmp
xor
shll
inc
sar
pop
into
or
fwait
ror
icebp
adc
lods
jne
in
les
in
sbb
pop
sbb
xlat
mov
mov
push
pop
repz
dec
push
leave
mov
or
mov
ret
mov
jecxz
sbb
lret
xchg
scas
inc
loope
sti
insl
pop
pop
lret
jg
and
out
movb
repz
loop
addr16
jae
cmp
inc
mov
scas
add
jb
adcb
es
sbb
cmp
mov
enter
subl
jmp
pop
cmp
xor
mov
and
in
rclb
es
add
das
leave
push
xor
lock
cmp
or
or
xor
ffreep
std
inc
mov
bound
imul
inc
xor
lret
ficoms
cs
cmpsb
inc
xchg
mov
test
out
lcall
data16
hlt
push
mov
or
repz
or
dec
test
mov
dec
push
fidivrl
add
lock
inc
movsb
rcll
pop
testb
dec
or
ret
or
test
popf
xchg
mov
and
jae
fs
inc
cmp
and
rclb
cmp
pushf
out
inc
mov
outsl
mov
subl
lods
xor
addr16
cmp
jmp
mov
jae
aaa
add
adc
add
aas
cld
sub
mov
mov
mov
pmulhw
test
lods
fs
adc
mov
lds
add
jmp
jns
mov
add
lods
ss
pop
cmp
stc
inc
jg
mov
addr16
ficoml
jne
mov
sub
pop
mov
mov
outsl
mov
and
xchg
lods
xchg
jg
sbb
cmp
addr16
insl
arpl
add
outsb
xchg
pop
in
cmc
dec
movsb
cmp
imul
sbbl
inc
push
dec
adc
mov
lret
xlat
xchg
pop
adc
lcall
call
jmp
xor
test
stc
ficoml
xor
jp
fcmovnbe
popa
mov
or
mov
pop
sub
jo
mov
clc
jno
rorl
fiaddl
sub
leave
bound
cmpsl
sub
mov
inc
push
pop
pushf
insb
or
aam
shrb
ret
rorb
aad
stos
popf
ljmp
cs
pop
sbb
arpl
jecxz
leave
je
dec
in
jo
xchg
and
into
aam
xchg
cli
add
outsb
enter
push
mov
mov
lahf
cmpsl
addr16
adc
mov
pop
jae
aas
incb
lods
ja
lcall
xor
mov
movsb
in
and
out
test
movsl
notl
pop
jg
hlt
pop
mov
dec
aas
rorb
fsubrl
lds
insl
jp
es
rclb
pop
orb
mov
or
or
jmp
aaa
js
mov
mov
pop
xor
nop
cmp
xchg
mov
imul
aam
inc
cmp
leave
negl
mov
dec
inc
je
sbb
cli
jne
cwtl
in
dec
inc
and
mov
mov
mov
xchg
inc
ljmp
mov
sbb
mov
sbb
sbb
scas
xchg
adc
ja
outsl
xchg
stos
push
push
or
or
sub
jge
out
lea
das
push
dec
js
imul
icebp
stc
shll
je
addr16
push
ljmp
mov
push
sbb
les
pop
add
ret
mov
loope
adc
daa
cmpsb
mov
or
mov
rorl
mov
sahf
std
cltd
jmp
adc
imul
repz
and
xchg
xchg
mov
pushf
pop
pop
lcall
adc
fcmovu
mov
shl
in
mov
shlb
mov
outsb
sbb
je
push
int3
sub
aam
out
push
scas
pop
push
jno
test
cmp
repnz
inc
xor
pop
cltd
inc
sbb
sbb
aaa
loop
xlat
or
ret
fsub
dec
sbb
mov
sub
repz
out
adcl
js
ja
test
push
mov
orl
scas
dec
and
out
popf
mov
add
mov
and
sbb
roll
mov
das
gs
test
mov
fwait
jg
rclb
arpl
pop
jg
cmp
gs
loop
in
rcrb
add
out
mov
imul
rclb
inc
outsb
mov
ret
xchg
inc
lcall
sub
push
lret
ja
loopne
adc
or
jno
ds
std
or
push
inc
mov
cmpl
scas
fwait
ljmp
cmp
lahf
push
and
hlt
mov
outsl
cmp
dec
out
cmc
xchg
lds
repnz
and
cmc
notb
pop
lods
faddl
jne
ficomps
dec
fs
push
lods
or
push
decl
cmp
cmp
es
mov
add
adc
cmp
pop
iret
inc
dec
xchg
in
mov
xor
cmpb
stc
mov
fwait
or
or
ja
fisttpll
push
repz
insb
push
mov
mov
push
adc
jg
lds
xchg
into
or
test
pushl
push
rclb
js
xchg
rorb
aam
or
pop
and
call
stos
insl
cmpsl
divb
cmp
clc
mov
adcl
pop
roll
pop
inc
inc
pop
ja
jne
inc
insl
popa
inc
push
mov
and
fs
out
push
pop
ret
scas
mov
xchg
mov
testl
push
lds
aas
fisttpl
leave
outsl
mov
aad
sbb
add
int3
test
enter
jns
sbb
movsb
push
loopne
cmp
ljmp
stc
adc
cmp
mulb
sarl
ja
loop
push
je
cmc
rcr
pushf
xchg
std
shrl
inc
sbb
scas
not
std
fidivs
cmp
xchg
xor
addr16
xchg
cmp
or
iret
jmp
mov
ds
ja
cmp
dec
pushf
push
stos
scas
adc
mov
pop
aad
jmp
push
dec
push
data16
test
fcomps
in
sbb
test
scas
dec
or
sarl
fsincos
jecxz
icebp
jb
push
test
pop
sahf
loop
out
sbb
ja
cmp
iret
getsec
xor
pop
outsb
cmc
mov
mov
or
pop
cs
jmp
stc
pushf
mov
aad
push
add
sarl
jecxz
or
ljmp
xor
dec
pop
stos
sub
inc
mov
rcr
sub
sub
cmp
arpl
pop
mov
xor
dec
push
pushf
pop
pop
xchg
jbe
ret
insb
lea
mov
fldenv
and
les
mov
sub
inc
rolb
push
or
xchg
cmpb
or
xlat
lock
push
jne
cltd
dec
roll
aam
sub
sbb
push
sub
pop
dec
rolb
push
lret
nop
aaa
xor
mov
js
cmp
and
adc
ret
xchg
dec
je
mov
and
mov
jo
add
cmp
inc
xchg
sbb
jg
mov
aam
pop
enter
notl
push
test
add
pop
xlat
cmp
push
inc
sbb
pop
cmp
out
nop
push
out
lcall
pop
lret
mov
stos
xchg
fsubl
push
inc
push
cmpsl
mov
into
push
and
adc
sub
pop
inc
dec
inc
js
mov
mov
dec
jo
cmp
sbb
das
imul
xchg
mov
daa
mov
inc
mov
xor
imul
data16
lret
xchg
push
pop
mov
push
mov
jecxz
insl
loopne
nop
pop
shr
add
adc
mov
loop
leave
add
lock
cmpsl
sub
fcompl
out
add
popa
jbe
inc
xor
shlb
js
jge
dec
lcall
dec
jne
in
cmc
mov
imul
jl
imul
push
and
popa
jno
std
enter
arpl
outsb
pop
jg
xor
int
xor
popa
dec
sub
int
mov
pop
lahf
stc
fcmovne
push
imul
fsubp
pop
add
lods
sbb
pop
add
repz
pop
test
pop
mov
cwtl
jae
gs
sub
flds
cmc
jne
mov
nop
xchg
in
outsb
out
pushl
gs
cmp
out
cmp
sbb
mov
mov
and
in
xchg
mov
cli
imul
out
sarb
aas
lods
adc
lds
sbb
mov
jb
inc
and
sub
dec
pop
mov
mov
es
jns
shr
push
int3
stos
imul
mov
add
andb
jge
jge
sub
and
jge
aad
push
in
push
mov
sub
xchg
imul
fisubs
xor
xchg
stc
fsubrl
inc
lahf
adc
dec
iret
xacquire
movsb
sub
jmp
mov
les
fcmovnb
add
movl
jg
jo
xorl
sub
sub
loop
adc
xchg
sub
fdivrp
sub
push
jmp
lods
mov
mov
or
pushf
repz
lods
out
lret
xor
nop
pop
pop
ret
scas
test
add
dec
push
pushf
or
cltd
dec
ds
shll
pushf
and
and
or
rcll
sub
sti
addr16
cmp
hlt
pop
dec
cmp
test
and
add
and
jae
adc
adc
and
mov
xor
mov
das
adc
jmp
ficompl
pop
jbe
sbbb
jg
aad
popa
aas
adc
push
inc
enter
jle
pop
jg
adc
push
mov
mov
inc
aas
insb
shll
clc
sti
fidivl
scas
or
popf
sub
fsts
mov
mov
shlb
adc
push
sub
push
inc
aaa
loopne
sarb
mov
sub
lret
dec
mov
int3
movsb
lods
xor
jle
cmpb
mov
insb
sbb
cmp
pop
pop
jns
or
fs
lcall
mov
mov
jmp
add
fidivrs
cs
mov
dec
cmp
daa
enter
add
dec
dec
inc
ret
data16
inc
inc
rorb
pop
sbb
fsubrl
xor
push
outsl
ret
add
out
jae
ljmp
in
jp
xchg
jno
dec
inc
and
pop
adc
jno
cmc
xchg
or
and
aas
xchg
mov
xchg
mov
in
mov
dec
outsb
jecxz
stos
je
xor
or
and
push
cs
fistl
inc
in
lds
dec
pushf
popf
shl
mov
add
adc
nop
and
sub
lcall
mov
mov
xchg
sbb
and
or
adc
add
mov
sahf
sbb
dec
iret
sub
adc
call
std
mov
dec
pop
jmp
xorl
xlat
incl
xlat
dec
dec
mov
inc
cmp
and
and
insb
jmp
xchg
mov
fnsave
fdivrs
out
rcrl
push
push
loope
or
mov
outsb
cmpsb
adc
ljmp
jg
pop
or
mov
fadds
and
rcll
adc
ret
mov
daa
xchg
mov
inc
push
mov
mov
into
insl
jl
jecxz
dec
push
sti
adc
inc
sti
xchg
addr16
and
sbb
xchg
and
int
out
in
push
loope
ret
hlt
mov
out
sarl
push
fwait
hlt
insl
lcall
push
jns
pop
push
outsb
jp
mov
aam
cmpsl
xor
adc
xor
mov
jo
xchg
pusha
cmp
mov
out
inc
mov
negb
mov
dec
fcompl
scas
pop
xlat
mov
sub
or
mov
es
dec
lret
jo
pop
pop
cmp
or
inc
jecxz
xchg
pop
mov
mov
lea
sub
int3
jg,pn
int3
pusha
into
jge
pop
xchg
mov
mov
mov
pop
out
push
lahf
addr16
push
jns
jbe
int
jns
stos
mov
and
inc
jmp
jge
fdivrs
sub
out
fsub
xlat
shl
hlt
add
pop
addr16
xchg
and
jp
dec
cmpsb
mov
pusha
insl
adc
clc
fs
xor
cmp
clc
cmp
jns
roll
adc
movsb
fidivl
cwtl
and
addr16
inc
popf
int3
stos
xor
or
idivl
push
push
in
add
repnz
sub
adc
mov
clc
std
xor
test
xchg
cld
jmp
push
mov
push
movsl
cli
fimull
repz
sub
shl
filds
jmp
sub
cmc
mov
push
cmp
push
or
loopne
fistl
out
sub
outsl
jmp
gs
dec
out
mov
sub
pop
sub
inc
mov
jnp
mov
fbld
daa
loop
mov
cltd
cmp
dec
inc
xor
add
in
xchg
jb
imul
popa
inc
ljmp
jmp
dec
bound
sub
movsb
cmp
dec
je
std
movl
add
rcl
push
mov
push
outsl
push
push
dec
add
mov
es
sbb
loope
sub
jle
mov
int
sub
mov
in
adc
int3
xor
inc
mov
mov
xchg
adc
mov
jle
pop
mov
pop
sti
or
mov
jne
add
fimuls
mov
mov
andl
sub
fisubrl
in
inc
mov
sub
rorl
test
popl
daa
lea
adc
test
mov
flds
mov
pop
icebp
cmpl
in
lret
and
add
aad
xor
pop
dec
mov
nop
scas
pop
xchg
push
shrl
xor
sbb
jbe
jg
xchg
mov
inc
lds
xorl
pusha
xchg
lods
pop
cmp
mov
mov
sahf
mov
mov
push
aad
stc
or
movsb
jecxz
stos
int
sub
repnz
daa
jmp
out
jl
mov
add
cmp
push
push
clc
jns
push
pop
inc
sub
ror
cs
mov
lock
cmp
lahf
push
out
jnp
negb
mov
fsubr
pop
inc
fwait
and
mov
pop
add
cltd
shll
mov
fidivrl
in
scas
gs
sti
mov
es
push
cmp
sub
imul
stc
push
cli
divl
es
sub
out
in
lock
sbb
push
dec
test
xchg
rcrl
or
inc
ja
xor
lods
inc
cwtl
jmp
pop
loopne
xor
fmul
mul
sbb
jg
out
adc
mov
iret
mov
sub
pop
cltd
xchg
mov
leave
repz
hlt
cld
sbb
add
imul
mov
mov
in
pop
push
push
sbb
pusha
insb
dec
mov
jecxz
adc
sub
outsb
add
ret
orl
push
mov
add
and
xor
jne
mov
test
iret
scas
nop
inc
and
jno
xchg
jge
je
stos
adc
add
mov
inc
idivb
mov
push
xchg
add
and
test
sti
xor
movsl
xor
push
loope
jl
dec
shl
jne
mov
nop
leave
aad
loop
and
mov
push
rcr
jns
outsl
lahf
test
mov
adc
into
push
jl
sbbb
lds
imul
shrb
and
addr16
pop
push
sub
dec
rolb
mov
sub
cltd
jl
insl
pop
ljmp
pusha
cmp
and
sbb
dec
stos
push
or
cmc
mov
xchg
adc
fldt
xchg
add
je
pushf
gs
and
and
lahf
pop
pop
es
lock
stc
hlt
xchg
fisubrs
add
fcoms
cmc
ds
pop
or
jnp
cmp
cmp
bound
pushf
das
push
xor
mov
sbb
mov
movsl
icebp
stos
pop
in
pop
ljmp
pop
cmp
jns
in
lahf
xor
cltd
enter
sub
sbb
pop
cli
outsb
dec
mov
lock
shl
loope
push
dec
jmp
mov
and
es
pop
aas
pop
pop
scas
sub
ficomps
out
loop
shl
and
sbb
cmp
cmp
mov
push
hlt
out
mov
or
popa
sbb
test
jmp
xchg
out
sbb
outsb
jne
rcr
cmp
movsb
jmp
ljmp
enter
sub
mov
pop
das
shrb
mov
imul
in
aas
aaa
jmpw
loopne
xchg
and
loopne
leave
dec
xor
push
loope
cmc
or
push
fsqrt
add
add
fwait
out
xor
mov
push
cmp
jl
push
push
pop
fldl
into
inc
fs
addb
push
xor
xchg
out
add
inc
inc
scas
lcall
imulb
xchg
rorb
add
push
push
or
cmp
iret
je
mov
inc
mov
jecxz
add
test
cmp
fildl
adc
push
sub
and
in
mov
loope
mov
pop
out
or
fists
mov
fimull
pop
inc
das
push
movsl
in
fisttps
pop
loopne
outsl
jecxz
mov
clc
sub
in
jae
or
mov
je
ja
sub
addb
lods
adc
inc
cmp
xchg
push
mov
jae
out
push
in
in
lahf
jb
or
pop
sub
das
sbb
dec
ret
hlt
mov
pop
call
mov
jne
and
popf
loope
clc
mov
sub
sub
arpl
push
ss
popa
cli
sbb
rcrl
repnz
jbe
outsl
cmp
inc
adc
xchg
mov
addr16
lret
sbb
out
jae
icebp
loopne
add
adc
and
addr16
cmpsl
rol
adc
pop
xor
dec
push
insb
clc
mov
sahf
mov
imul
jo
mov
sub
lcall
mov
and
orl
jmp
jl
outsl
add
and
bswap
loopne
aaa
addr16
mov
in
test
push
inc
hlt
add
sbb
movsl
mov
jp
xor
jp
enter
in
jmp
je
test
lds
push
sbb
insl
pop
pop
cmp
dec
jg
adc
outsb
daa
jp
adc
mov
or
dec
popa
enter
icebp
sbb
sahf
aam
sub
cmp
sbb
cmp
loop
pop
pop
lret
push
dec
mov
dec
js
jg
aam
push
xor
jno
add
shll
nop
imul
xchg
pop
ret
cmp
out
and
sbb
mov
push
test
in
xchg
pop
gs
test
lock
xor
and
and
inc
pop
divb
jnp
les
sub
adc
stos
xor
and
add
jmp
add
fwait
popa
dec
adc
xchg
mov
lret
and
sub
rorb
mov
mov
mov
std
xchg
jae
popf
xlat
pop
dec
mov
jnp
fucomip
sub
xchg
std
movsl
cmp
jg
adc
add
sbb
jl
leave
push
sbb
sbbl
inc
sub
add
decl
push
inc
cmpsb
dec
jle
inc
lock
sarl
mov
jg
jne
jbe
xchg
repz
in
imul
adc
sub
outsl
adc
sub
filds
int3
and
cmpsb
cld
jge
mov
mov
push
je
mov
int
jns
lret
push
fildl
addr16
xchg
mov
out
mov
push
cmp
fildl
cmc
mov
outsl
mov
and
sub
or
rcrl
and
je
cmp
pop
stos
mov
and
mov
je
adc
xor
cmp
ds
shrd
mov
rolb
sub
hlt
inc
fsubl
add
inc
sbb
addr16
xchg
inc
rol
jb
sbb
into
in
jo
ret
negl
call
aas
mov
cs
jl
nop
xchg
bound
and
mov
adc
shlb
sub
jno
jp
adc
test
mov
js
movsl
pop
test
adc
xor
pop
jb
jns
cltd
stos
inc
pop
in
xor
icebp
cmp
push
mov
sahf
mov
insl
outsb
into
jno
in
inc
adc
js
inc
push
adc
xor
mov
pop
pop
insl
xchg
and
pop
pop
cmp
lahf
daa
sbb
jnp
std
imul
into
add
mov
push
lahf
xor
or
fwait
cs
daa
test
mov
add
int
insb
insb
push
scas
scas
scas
outsl
popa
xchg
push
addr16
popa
imul
xchg
push
adc
cld
inc
ja
shlb
xchg
add
push
pop
xchg
test
and
pushw
ja
std
scas
in
xor
rclb
pop
push
test
cld
push
pop
pop
mov
mov
or
outsb
divb
jle
sahf
outsl
data16
mov
sbb
inc
adc
andl
loope
lret
sub
adc
mov
hlt
jnp
add
lret
jns
cmc
arpl
loop
adcl
inc
and
sbb
jno
imul
and
push
int3
xor
dec
rep
popa
fsubr
inc
rclb
imul
cmpsb
imul
push
popa
inc
ret
mov
push
sbb
inc
jg
mov
inc
test
aaa
xchg
fsts
out
adc
or
aaa
mov
ds
aad
daa
lcall
push
popa
cmp
icebp
call
inc
dec
inc
add
adc
jo
dec
rorb
int
cmp
ret
add
dec
mov
pushf
or
std
mov
xor
sbb
in
dec
push
out
cmp
pushw
mov
test
pop
insl
mov
jnp
push
add
dec
cmc
pushf
jg
and
or
mov
out
rorl
outsl
push
fdivrs
imul
call
orb
mov
jg
sbb
test
loope
imul
inc
sahf
sub
mov
push
inc
ja
lea
loop
pop
sbb
or
adc
cwtl
jge
movhlps
add
sarb
and
mov
insl
int
js
mov
out
jp
nop
sti
and
call
shl
fldl
mov
clc
mov
lcall
fnsave
mov
push
lods
mov
mov
cmpsb
stos
imul
and
jp
jno
or
mov
shll
call
repnz
dec
or
mov
push
pop
imul
les
clc
cmc
jecxz
mov
leave
stc
dec
lcall
loopne
bnd
testl
fyl2x
and
push
push
into
adc
xchg
stc
xchg
mov
mov
xchg
mov
ja
mov
sub
pop
xor
cmp
mov
pop
lock
sub
cmovno
movsb
adc
dec
iret
dec
xor
add
mov
test
cwtl
jne
cld
sahf
push
dec
mov
outsb
daa
jno
jbe
sbb
or
scas
int
xlat
movsl
pop
gs
adc
test
xor
cld
adc
insb
test
xor
mov
les
int
xor
int
add
movsl
leave
inc
mov
mov
inc
mov
push
test
jnp
push
or
ret
mov
testl
sbb
cwtl
sub
xchg
popf
mov
fnsave
lret
subb
notl
mul
loope
sub
jbe
sbb
lahf
lahf
out
rorl
xchg
pop
sbb
or
dec
and
movsl
pop
xchg
stos
and
inc
push
xchg
jp
sub
jo
add
sub
jecxz
and
jp
in
sbb
adc
cli
sbb
clc
call
adc
daa
daa
mov
add
movsl
jle
mov
mov
push
add
push
sub
fcoms
lock
sbbb
xchg
packuswb
mov
add
iret
dec
aam
dec
movsb
mov
jp
rol
mov
cli
negl
nop
sbb
mov
iret
dec
test
xchg
xchg
in
xchg
rcll
add
rorl
rep
jmp
aas
ljmp
mov
sahf
divb
cmpsl
mov
bound
sbb
pop
inc
popa
sbb
pop
mov
lods
dec
push
mov
pop
pop
or
dec
jle
inc
adcl
xlat
mov
push
jo
mov
rorb
inc
adc
sub
addl
inc
pop
sbb
rorl
and
pop
add
lahf
in
and
pop
aas
push
das
sub
pushl
aaa
scas
insb
stos
out
int3
push
cmp
rclb
push
jo
sub
cmp
pop
inc
mov
adc
sub
and
call
jae
addr16
cltd
aaa
int
sbb
add
aaa
ret
sbb
jecxz
mov
jne
call
aas
cmpsb
shlb
fisttps
push
mov
imul
out
jbe
iret
sti
fldt
adc
mov
xorb
sub
cli
mov
add
sub
loopne
popl
cld
enter
dec
pop
jp
push
out
sbb
dec
pop
daa
jg
clc
pop
lcall
fsts
add
and
movsl
bswap
push
xchg
mov
jl
mov
cwtl
std
mov
xor
and
ds
xchg
mov
or
mov
push
mov
movsb
sbb
add
cmp
mov
shlb
sahf
jnp
xor
add
int3
stc
iret
mov
dec
test
jmp
cmpb
and
add
test
sub
mov
movsb
loope
les
pop
mov
adc
daa
inc
cmp
incl
push
push
and
dec
roll
push
in
into
jl
and
jmp
int
fsubrs
ljmp
push
stos
adc
inc
jb
push
nop
xor
xchg
or
loopne
mov
out
roll
dec
in
mov
lods
cmp
or
out
jns
adc
sub
out
sahf
dec
xchg
mov
and
lret
enter
xchg
push
xchg
in
inc
push
lret
push
leave
cmp
add
cwtl
add
cltd
subl
movsb
out
xor
cmc
in
sub
pop
sub
xor
pop
and
jno
enter
sub
fcoms
pop
loope
jge
xchg
test
pop
add
mov
cld
ds
scas
aad
js
movsb
jl
mov
xor
fldcw
leave
ret
or
fildl
outsb
scas
jmp
push
inc
mov
lret
insb
aad
mov
sbb
les
divl
pop
inc
cli
call
in
jno
mov
idivb
adcl
mov
leave
mov
mov
pop
sbb
push
pop
ds
adc
mov
pop
je
xor
adc
xor
adc
fsubrs
movl
in
cli
icebp
and
xor
pop
mov
adc
adc
mov
enter
dec
or
push
cmp
adc
lret
cwtl
adc
push
fbld
push
insb
xchg
ret
int
add
mov
xor
lahf
cs
sub
push
add
in
fsubl
dec
popf
dec
mov
ret
dec
das
push
xor
push
dec
xor
cmp
lock
std
jge
lods
mov
out
shlb
sub
leave
and
push
les
popf
xchg
cmp
mov
and
dec
out
rorl
and
mov
div
dec
dec
insl
inc
imul
test
fwait
clc
xchg
idivb
xor
das
push
das
sub
fadds
mov
push
test
xor
enter
loop
lods
jo
mov
out
jge
pop
repnz
es
dec
mov
out
xor
cmp
xor
dec
cmp
fdivrl
testl
sub
iret
add
adc
pop
push
inc
test
sub
aas
mov
dec
xchg
aaa
loop
cmp
pop
stos
jno
fs
imul
test
mov
shll
adc
loopne
push
mov
mov
popf
push
xor
subb
pop
rorb
pop
push
ror
pop
jae
jnp
ss
out
or
jns
or
pop
icebp
leave
rolb
jb
int
mov
ret
outsb
and
stos
cmp
cmp
mov
push
test
lahf
mov
dec
shlb
jae
ret
lret
cmpsl
lds
sub
daa
jle
xor
data16
sahf
jnp
mov
dec
out
xchg
pop
dec
outsl
mov
test
jp
outsb
pop
cmc
sbbb
mov
mov
fs
in
fmul
mov
push
dec
and
int3
pop
idiv
xchg
xchg
pop
movsb
mov
or
mov
jle
test
jae
push
inc
mov
sub
or
fwait
mov
pop
mov
adc
movsl
push
fs
inc
icebp
jmp
pop
test
in
test
outsb
sub
cmpsb
or
sub
lea
lods
push
dec
or
repz
cltd
into
sahf
cmp
jmp
xchg
or
cltd
mov
loopne
lea
add
cld
adc
andl
push
movsb
lret
pop
aas
pop
sbb
pop
xor
jbe
adc
mov
pop
push
lahf
es
lods
ret
xorb
repnz
xor
dec
push
push
rorb
cmp
push
ret
push
push
test
lret
or
push
pop
shll
sub
or
xor
pop
push
mov
icebp
lds
andb
loopne
enter
jns
fildl
imul
cltd
adc
fcmovb
sub
cmp
insb
scas
std
cmp
inc
in
out
mov
cltd
mov
cli
jno
mov
test
mov
lcall
cmp
xor
mov
outsl
arpl
leave
and
je
push
in
icebp
adc
fdiv
in
jmp
cld
sub
mov
mov
mov
add
mov
jle
scas
sar
dec
outsl
pop
cmp
jle
xchg
xor
out
je
icebp
aaa
mov
dec
jg
addl
in
push
push
cmp
js
andl
scas
ljmp
shlb
into
inc
cmpb
mov
cmp
loope
dec
pop
aas
subb
mov
push
cltd
iret
sbb
jecxz
test
and
push
mov
dec
xchg
push
movl
insb
stos
adc
ror
iret
sbb
push
adc
mov
jb
add
fldenv
ss
add
lret
in
inc
jmp
es
pop
int3
imul
mov
mov
je
clc
mov
sbb
cwtl
loop
xchg
mov
test
sub
mov
lods
cmpsl
dec
sub
cmpsl
pop
sub
pusha
cmp
jmp
adc
roll
insl
jb
cmc
lret
ret
pop
das
push
ss
rol
cmp
stc
cmc
movsb
mov
mov
dec
xlat
enter
adc
and
je
js
into
movb
popf
and
sbb
mov
aas
ds
push
test
pop
aaa
push
dec
xchg
dec
mov
pop
js
push
adc
lret
or
int3
jmp
mov
lock
je
add
push
das
aad
outsl
sarb
lods
popa
imul
mov
lods
sub
sub
or
dec
and
pusha
mov
jbe
and
out
xchg
xchg
std
adc
popf
data16
int
dec
gs
cmpsl
ss
in
xor
push
out
pop
jae
ss
mov
xchg
sub
scas
push
sbb
or
mov
rcrl
sbb
cmp
push
adc
loop
int
iret
jecxz
jmp
push
sti
mov
mov
sbb
je
fcoml
sbb
loopne
aam
mov
lcall
and
cs
stos
es
lret
jp
stos
frstor
cs
mov
adc
inc
addb
push
andb
add
in
jbe
xchg
cld
test
mov
push
cs
stos
add
and
js
pop
int3
or
dec
out
mov
xor
lcall
dec
push
test
push
out
rcrb
push
outsl
jle
test
rclb
push
dec
sahf
jnp
sub
data16
xchg
mov
ret
bound
test
cmp
pop
mov
or
add
xchg
hlt
xor
out
and
sub
cmp
and
clc
and
arpl
dec
xchg
mov
arpl
fxch
dec
scas
push
imul
clc
mov
sub
roll
push
dec
fcompp
mov
lahf
add
lret
mov
cmpsb
dec
add
aaa
sub
xchg
mov
sub
enter
add
dec
push
mov
mov
push
pusha
xor
add
pop
das
int3
and
lcall
loop
inc
nop
into
movsl
pop
or
out
xchg
hlt
orl
int3
psubw
aas
or
nopl
and
sub
add
cmp
popf
mov
int3
movsl
shll
loopnew
loope
sbb
insl
dec
repnz
rcrl
lahf
dec
repz
push
mov
bound
imul
pop
lea
xor
out
pop
push
mov
sbb
jno
jo
int
pop
into
fisubrl
add
daa
ret
popf
mov
inc
mov
mov
adc
mov
cmp
add
mov
or
pusha
lea
or
cmp
pop
push
pop
mov
lahf
xchg
xor
sub
adc
shl
sub
xchg
push
push
xchg
lahf
hlt
xor
jg
test
jmp
out
xchg
push
cmp
add
jl
pop
push
insl
test
and
lret
cwtl
std
lret
xor
and
push
enter
roll
std
sti
push
dec
imul
imul
jae
in
mov
pop
jl
push
xor
pushf
or
inc
mov
lods
sub
std
sti
sti
push
adc
mov
mov
and
mov
std
inc
out
pop
scas
scas
xor
pop
sub
pop
lods
xchg
and
lcall
lret
lods
test
inc
dec
stos
sub
jno
cmc
pushf
lods
mov
loope
mov
inc
mov
xchg
sahf
xchg
xchg
adc
adc
nop
call
scas
and
jno
hlt
push
adc
xchg
mov
xchg
xor
leave
andb
pop
fadds
cmpsl
dec
stos
mov
jno
mov
jg
push
aas
lret
cmp
inc
dec
push
pop
mov
push
jbe
fwait
loop
cmpsb
push
repnz
lock
mov
aam
ret
rcl
cmovae
fimull
adc
push
push
add
xchg
lods
stos
cltd
mov
lahf
out
scas
mov
pop
repz
cmp
fwait
test
push
or
xor
pop
outsb
pop
fstpt
dec
ss
xor
lcall
mov
push
dec
adc
aas
shll
sub
pop
scas
popa
fnstcw
jae
dec
mov
movsl
push
testl
bound
push
add
pop
dec
pop
sbb
pop
xlat
jb
je
dec
cli
das
jno
das
call
dec
adc
sbb
shll
sbb
xchg
stos
insb
dec
or
enter
fwait
and
ds
cld
push
sbb
adc
push
xchg
push
das
mov
sub
dec
pop
lret
jg
sub
add
push
out
loop
inc
mov
leave
repnz
xor
sub
cmp
mov
gs
outsb
adc
push
mov
cltd
push
inc
push
xchg
pop
or
outsl
pop
lar
sbb
ds
daa
sbb
jae
test
jns
xchg
stos
jae
cwtl
pop
jge
daa
lods
iret
imul
jle
pop
insb
jecxz
sub
aam
mov
cmpsl
sub
mov
sti
pop
in
rorl
inc
cmp
mov
pop
out
jg
xor
push
cmpsl
push
leave
add
jno
loope
push
xor
add
push
adc
or
out
push
cwtl
lret
pop
inc
lds
add
leave
mov
aas
pmaxsw
aam
xchg
sbb
jns
pop
inc
lea
inc
add
test
mov
push
mov
outsb
adc
cmp
jecxz
stc
mov
sbb
xchg
call
push
mov
xor
gs
out
fldenv
inc
mov
cmp
sbb
cmp
in
mov
nop
or
pushf
mov
mov
add
out
or
int
or
xchg
jmp
ja
test
sbbb
repnz
jge
inc
loope
add
mov
sub
adc
das
mov
lea
sbb
push
mov
dec
stos
stos
out
inc
sub
push
xorb
mov
push
and
push
dec
in
cwtl
insl
repz
cld
xchg
sub
daa
cmp
js
xchg
dec
xorl
fwait
sbb
call
cmp
mov
in
inc
jmp
hlt
mov
mov
pusha
xor
cmp
inc
test
mov
and
and
jae
test
sub
cld
sbb
and
xchg
daa
mov
xor
push
inc
pop
or
aam
iret
push
fisubrs
mov
repnz
enter
sbb
or
pushfw
in
push
xchg
js
pop
test
les
xchg
lds
sar
adc
add
cmp
clc
repnz
push
movsb
mov
xchg
lret
or
mov
leave
insb
add
ret
adc
sbb
mov
es
jnp
pop
push
outsl
and
or
jmp
stc
mov
sbb
cli
leave
add
inc
mov
call
imul
jnp
push
enter
cmpsl
push
ja
xor
mov
pop
or
daa
or
and
add
in
add
push
dec
call
sub
jbe
jo
mov
mov
cld
rcrl
lret
xor
and
enter
pop
test
shll
jle
jle
lret
push
test
cmpsb
lahf
movsb
fsub
mov
inc
add
jmp
inc
sahf
xchg
adc
data16
out
pmulhw
xchg
fs
push
iret
js
insb
test
pop
insl
sahf
into
jg
in
fdivr
int
xor
cmc
push
mov
and
lahf
or
addb
std
lret
or
fbld
addr16
add
filds
imul
movsb
bound
inc
adc
test
or
stos
int3
mov
xchg
adc
dec
mov
mov
mov
pop
inc
loopne
or
xor
sbb
leave
adc
jns
imul
subl
test
pop
imul
mov
pop
je
and
lods
roll
xor
sbb
and
fwait
std
pop
and
mov
or
imul
arpl
cmc
sub
pop
enter
nop
dec
int
outsl
stos
cmp
outsb
sbb
lock
and
popf
mov
testb
adc
xor
pop
adc
rcl
leave
or
int3
sub
sub
cmc
xchg
push
dec
or
add
int3
mov
popf
je
mov
inc
pop
stos
jno
es
in
jl
cmp
repnz
call
aad
es
add
cmp
xchg
pop
les
lods
mov
xchg
xor
sti
sbb
ffree
ljmp
xor
jmp
xor
into
jg
mov
lcall
and
xlat
rolb
fdivs
sbb
xorl
adc
in
je
shlb
sbb
xor
adc
ret
mov
or
push
sub
test
xor
ret
and
cmp
jno
push
es
dec
call
pop
jp
shrb
arpl
cmp
shlb
iret
cmpb
mov
out
jno
xchg
adc
cmp
mov
jmp
ret
push
jp
pop
lea
mov
imul
stos
push
sbb
scas
dec
sahf
mov
inc
pop
pop
andl
jne
test
pop
jge
xchg
es
arpl
ljmp
xor
call
repnz
stc
sbb
jb
stc
jne
cmp
movsb
cld
shlb
and
cmp
fs
mul
jp
cltd
mov
mov
loopne
push
xor
fcomps
imul
das
and
xchg
sti
loope
fldl
mov
call
push
notl
adc
mov
insb
mov
push
add
jl
push
addr16
pop
lock
mov
sti
inc
mov
icebp
add
imul
in
xlat
mov
lcall
fs
add
inc
mov
std
jmp
lret
sbb
xor
pop
mov
cmp
movsb
lds
push
inc
sbb
xor
lcall
orb
testl
push
inc
xchg
iret
sub
data16
mov
das
insb
mov
stos
dec
xchg
inc
sub
repz
cltd
roll
jle
push
inc
es
cmp
mov
nop
fistpl
decb
icebp
call
movsb
sub
dec
clc
in
jae
mov
sbb
or
sub
jae
pushf
dec
sub
add
ficoml
aad
lahf
pop
jbe
jl
fwait
cld
hlt
out
hlt
dec
insl
das
cmc
dec
xchg
inc
dec
inc
xchg
call
adc
mov
sub
fisubl
mov
shlb
stos
mov
loopne
scas
cmpsl
fs
int
xlat
lret
or
fimuls
pop
popa
inc
dec
shlb
setnp
cmpsb
stc
sub
pop
ss
push
mov
fld
adc
mov
mov
repnz
pop
or
mov
pusha
fistps
lahf
fwait
pop
mov
ds
stos
push
pushf
push
sub
fiaddl
jecxz
inc
test
adc
sbb
and
add
and
push
jle
lcall
outsl
inc
subl
inc
inc
and
xor
fsubp
addr16
mov
pop
mov
adc
mov
enter
bswap
arpl
sbb
xor
jl
sahf
movsl
dec
es
sti
icebp
adc
sbbb
xchg
push
ss
daa
outsb
shr
scas
test
out
test
cmp
mov
inc
icebp
adc
lea
sbb
pop
sub
or
rep
push
ret
lahf
ljmp
dec
mov
loopne
mov
cmp
sub
pop
ja
into
cmc
pop
mov
cmpl
dec
jmp
lods
cmp
mov
sarb
xchg
gs
mov
pop
mov
mov
xor
ja
xchg
mov
es
cmp
or
mov
test
and
in
cwtl
jno
leave
sbb
mov
loope
ja
test
sub
mov
xor
sbb
dec
aad
sbb
icebp
inc
cmp
stc
fsubs
out
cmpsb
xor
push
outsl
les
out
loope
ljmp
mov
mov
das
mov
test
push
cmc
divl
lods
stos
test
adc
and
in
sub
pusha
insl
enter
jmp
notb
xor
mov
scas
repz
mov
scas
xchg
imul
rcrl
jg
movsb
push
in
enter
jno
shlb
push
cltd
sub
arpl
pop
sbb
testb
and
hlt
adc
gs
mov
sbb
std
add
sti
mov
cwtl
sbb
adcl
mov
dec
retw
and
je
repnz
mov
mov
mov
mov
lds
inc
pop
adc
xchg
js
mov
clc
cmp
loopne
out
popf
lahf
call
pop
sbb
out
mov
inc
mov
mov
mov
cld
lods
or
adc
pushf
in
ja
sbb
int3
push
mov
les
or
in
dec
int3
aaa
xor
insb
in
and
pop
loope
jp
call
xchg
lock
xor
sbb
lahf
jp
mov
inc
xchg
xchg
sbb
cmp
xor
aam
dec
ret
addb
popf
mov
push
push
mov
jp
push
jb
mov
jmp
std
sub
repz
in
sbbb
rorl
icebp
sahf
mov
imul
loope
pop
loope
sar
mov
scas
test
pop
pop
daa
inc
ret
mov
xchg
out
dec
pushf
inc
cmc
pop
sub
cmpsb
mov
and
or
sbb
jns
popa
pop
adc
lock
inc
stos
inc
push
jo
mov
stos
mov
add
iret
cmpsb
xchg
pop
imul
xor
mov
les
sbb
aam
ss
iret
add
add
sub
fiaddl
popf
jp
out
mov
sahf
mov
aas
or
mov
jo
outsl
mov
lret
cmpsb
push
mov
jne
imul
inc
ret
sahf
pop
movsl
jle
in
push
cmpsl
lock
xor
lods
xor
sbb
lods
lret
and
inc
push
js
mov
aam
dec
push
and
jmp
add
pop
push
loop
daa
pop
je
add
dec
fcomi
rcr
addr16
push
pop
sbb
outsl
jp
cli
daa
lock
sub
pushw
jl
inc
cmp
cmp
xor
and
mov
subl
gs
fisttpl
movsl
cltd
pop
cs
xchg
dec
stos
mov
sbb
aaa
flds
xor
pop
fwait
mov
pushf
sarb
dec
sub
adc
fiaddl
inc
mov
pop
push
aam
xor
pusha
push
and
mov
jg
pushl
xchg
jo
rclb
mov
jmp
cmpsb
aas
cmp
or
dec
inc
mov
xchg
pusha
xlat
sub
rcrb
inc
cmp
push
popa
pop
push
imul
js
fldcw
lea
inc
mov
add
cmp
movsb
push
inc
push
fldenv
xor
inc
jmp
shrb
jne
jg
mov
cmc
push
dec
pusha
filds
mov
fmull
xor
sti
ret
mov
sbb
xor
les
adc
loopne
arpl
cltd
sbb
inc
mov
test
sbb
pop
jae
adc
inc
clts
and
xchg
sbb
inc
add
out
xorb
cmpsl
movsl
jp
push
cmp
lock
sbb
jo
fs
test
push
fs
les
std
or
subl
mov
sbb
daa
ss
xchg
cmp
rclb
add
in
insl
xchg
lret
rorl
pop
mov
das
xchg
sbb
pop
ja
push
movsl
sbb
out
jecxz
xchg
cli
xor
repnz
insl
cmpsb
call
les
mov
inc
xchg
mov
lret
add
imul
ret
mov
lds
adc
enter
ljmp
xchg
movsl
cmp
loope
rclb
ds
lcall
pop
sub
orps
lods
or
pop
and
xchg
cmp
mov
cmp
dec
xchg
mov
pop
pop
orb
pushf
dec
mov
cld
sahf
cmp
pop
push
jle
sbb
int
mov
mov
test
mov
adc
fsubp
bound
jne
pop
inc
xchg
sub
pop
scas
dec
sbb
pusha
leave
dec
jge
xor
test
sbbl
ljmp
xchg
fisubs
jecxz
lret
push
lods
xchg
xor
cmpb
fs
push
dec
sbbb
enter
sbb
cwtl
fwait
cmp
add
data16
daa
push
imul
aaa
sti
and
push
je
aas
loope
into
inc
aad
arpl
push
movb
push
or
xchg
jle
add
lcall
aas
call
sub
out
arpl
imul
push
aaa
pop
xor
inc
xor
push
bound
sub
jb
inc
nop
pop
xchg
mov
cmp
addl
dec
dec
push
inc
shrl
icebp
mov
pop
push
inc
repnz
loop
mov
js
ret
add
push
adc
mov
decb
dec
mov
mov
and
enter
jo
aas
push
mov
pop
inc
push
and
fnsave
test
xchg
out
sbb
cmp
jae
fstpl
adc
jnp
cmpsl
test
addr16
insl
mov
ljmp
sub
xchg
loop
jb
frstor
jnp
push
sub
lods
xor
or
mov
cld
jnp
adc
rcrl
popl
mov
sub
lods
fsubrp
jmp
mov
add
dec
mov
mov
sub
and
mov
jo
inc
dec
inc
in
mov
lods
loopne
xor
cwtl
scas
es
adc
in
repnz
dec
xchg
cwtl
mov
add
stc
push
gs
xchg
add
loop
das
shlb
adc
cwtl
addl
xchg
insl
sub
mov
lret
jecxz
dec
ja
sbb
dec
push
xor
jno
pop
add
or
mov
imul
add
cs
add
pop
stos
cmp
push
push
dec
sahf
jb
test
push
cli
add
lcall
adc
popa
fimuls
out
sbb
xchg
and
xorl
adc
mov
addl
cmp
or
cmp
mull
mov
adc
sub
xchg
xchg
bound
sbb
dec
seta
cmp
xchg
sbb
dec
or
mov
test
mov
int3
das
es
fnstenv
sub
out
and
sub
aad
pop
mov
sbb
push
mov
or
add
mul
loopne
in
xor
stc
inc
aad
sarl
popa
lcall
push
jne
push
pop
ret
gs
das
lods
pop
mov
lahf
push
adc
mov
mov
fs
dec
arpl
cwtl
push
sarl
std
push
jge
or
in
movsl
inc
mov
jbe
cmc
pop
mov
fs
push
inc
xchg
out
mov
cmpsb
lret
mov
pusha
out
adc
int
adc
sbb
stc
xchg
xchg
gs
add
jnp
ret
add
testb
ljmp
or
pop
inc
in
dec
cmc
sahf
clc
jbe
stc
lret
pushaw
lea
sbb
and
call
incl
out
mov
int3
push
inc
adc
sbb
scas
rcrb
xchg
cmp
jae
mov
xchg
adc
sbb
push
aad
inc
adcb
adc
push
mov
inc
push
clc
movsl
mov
jle
nop
cmp
loop
scas
insb
iret
sbb
mov
or
sbb
mov
lods
std
push
loopne
or
or
inc
jnp
sbb
mov
adc
add
jge
lods
ja
mov
mov
lahf
out
inc
pop
pop
mov
push
insb
pop
and
scas
mov
fs
cmpsb
sarb
add
stos
cmpsb
addl
popf
or
dec
pop
fs
insb
push
into
cli
pop
push
mov
mov
cmpb
cmp
out
fsubrs
es
mov
leave
jmp
bound
mov
pop
mov
out
aad
add
int3
and
pop
and
jae
das
sbb
pop
testb
dec
fdivr
cwtl
xlat
gs
pop
inc
jp
sub
lods
pop
lods
push
ret
pop
lds
xor
and
lahf
or
push
out
inc
out
mov
mov
lret
push
ja
mov
out
sbb
pop
mov
cmp
sub
negl
pop
inc
mov
stos
mov
mov
sahf
cmpsl
dec
jns
testl
dec
repz
mov
ss
mov
scas
dec
lock
cmp
or
lahf
repz
dec
push
xor
jne
and
inc
push
test
movsb
jl
add
sarb
imul
lea
aam
dec
insl
loop
imul
dec
mov
aad
jb
cmp
mov
adc
les
mov
std
aaa
popa
jp
btr
mov
push
xchg
xor
fnsave
ja
mov
push
or
xor
cli
int
lret
pop
inc
and
xchg
cmpsb
push
roll
and
out
pop
inc
arpl
cmp
pusha
fwait
xor
fsubrs
sub
rcrl
imul
repnz
xlat
push
js
in
add
adc
cmp
test
insl
inc
in
cmp
or
rolb
mov
or
lods
xchg
mov
cmpsl
jae
and
xchg
sbb
rorl
pop
nop
mov
bnd
cmpsb
or
or
xor
push
addr16
cmp
call
into
jle
enter
movsl
aam
or
push
faddl
dec
pop
leave
xchg
mov
test
xchg
lcall
sbb
sbb
sbb
lods
imul
cvtpi2ps
insl
aad
std
push
jl
xor
lret
mov
inc
jl
sahf
pop
ret
sub
inc
jmp
shlb
inc
loopne
leave
sub
mov
jge
push
aad
int
lret
or
aad
aaa
icebp
add
cld
sub
inc
jo
shrb
test
jnp
jp
shlb
scas
scas
push
add
mov
cmp
xor
scas
xor
out
ret
and
std
cmpsb
pop
ss
idivb
push
ja
xor
xor
in
pushw
mov
inc
shll
or
xchg
int3
outsl
decb
lds
sbb
push
adcl
mov
mov
mov
cld
xor
inc
xor
xor
mov
rcrl
scas
sub
and
sbb
inc
mov
push
xchg
lock
int3
pop
cld
addr16
aad
push
test
les
mov
addb
jg
jae
test
shlb
xor
xor
lcall
movl
and
pusha
xor
andl
leave
aaa
stc
inc
pop
adc
shll
sbb
movsl
clc
sub
aam
outsb
cmpsl
jecxz
jae
inc
or
shlb
les
aad
call
pop
xchg
push
fildll
xor
enter
xchg
jnp
sub
cmp
fs
fstl
repz
rep
lods
es
xchg
or
mov
shlb
fstpl
xchg
sbb
dec
jg
aad
fwait
add
test
dec
xor
pop
or
xchg
lock
xor
fstl
outsb
sub
jmp
push
or
inc
xor
push
aam
dec
push
add
jmp
negl
xor
in
xchg
adc
sahf
jb
stos
inc
lods
ret
pushf
fwait
lahf
ret
cltd
jl
sub
call
sbb
lock
sub
sbb
and
pop
xchg
or
pop
add
mov
incb
pop
into
enter
jmp
mov
jae
ret
pop
repz
mov
jmp
jae
push
clc
lahf
mov
inc
lret
int
ds
mov
mov
daa
lods
rcll
mov
push
mov
inc
nop
popf
dec
popa
in
pop
jmp
scas
adc
into
mov
cmp
inc
leave
or
adc
loope
std
les
sbb
test
sub
or
sbb
pop
fs
mov
dec
shr
aad
or
add
push
jo
addb
pusha
xor
push
push
js
xchg
sahf
cs
and
xchg
and
inc
sub
cmp
cmpsb
sbb
and
push
xchg
mov
daa
sbbl
test
stos
pop
dec
push
insl
sbb
icebp
int
clc
cld
outsl
and
and
test
xor
add
addb
or
push
sbb
cmpsb
gs
pushw
add
push
imul
loopne
mov
test
push
push
inc
out
insl
and
shr
arpl
loopne
pop
pop
in
fwait
inc
int
push
jle
out
push
push
dec
daa
ret
push
loop
cs
sbb
outsb
mov
sbbl
add
mov
sbb
jmp
popf
pop
repz
mov
push
lock
push
test
cmc
and
stc
pop
sbb
add
loopne
in
adcl
sbb
fwait
pop
adc
inc
push
sbb
aas
aaa
lret
mov
dec
test
add
repnz
in
mov
fadds
nop
sbb
leave
cmp
pop
sti
mov
jecxz
shl
xor
pop
aad
sahf
hlt
je
inc
lcall
sbb
cwtl
inc
shrl
and
pop
icebp
and
mov
push
adc
jle
nop
pop
int3
jnp
popf
in
adc
ds
cli
mov
mov
sbb
push
je
loop
std
push
dec
and
sbb
mov
jp
xchg
int3
pop
jmp
sbb
cli
pop
mov
sbb
sbb
jne
cmp
fs
adc
mov
movsb
jge
les
in
push
bound
push
int3
jns
fists
adc
inc
push
stos
cli
xlat
es
mov
mov
out
jmp
jle
fucom
jecxz
adc
fmuls
xchg
jl
sbb
lods
shl
int3
push
movsb
dec
dec
jbe
sub
or
cmp
and
jecxz
cmp
dec
adc
pop
lods
cmp
sti
outsl
pop
xchg
xchg
xchg
cli
lock
ss
nop
loopne
push
inc
pushf
push
pop
pop
jno
lret
push
sarb
test
xchg
popf
push
cmp
loop
sbb
and
loopne
aas
gs
mov
outsl
xor
dec
cmc
push
or
pop
loope
out
inc
mov
and
pop
adc
jle
test
or
out
adc
movsl
insl
fstl
fxch
leave
idiv
xor
clc
cs
daa
jle
xor
int
mov
or
daa
mov
cltd
jno
add
out
mov
xor
mov
lods
or
mov
mov
cmp
pop
mov
mov
out
or
outsl
sbb
lods
popa
addb
mov
push
rolb
js
xchg
subps
and
or
jp
xor
xchg
inc
jns
sub
adc
arpl
pop
cmc
scas
jl
enter
roll
out
insb
cmp
adc
push
mov
fs
xlat
inc
lea
pusha
loop
rcrl
enter
sbb
lret
jnp
test
adc
mov
roll
dec
jns
lahf
popf
push
cld
mov
addr16
jbe
fsubrs
cld
sub
push
push
dec
sbb
mov
addr16
lods
mov
mov
cmpsb
nop
lock
fsubl
loope
push
push
iret
rcll
or
push
test
fsubs
pop
jp
out
out
or
add
loopnew
inc
test
dec
xchg
add
call
cmp
xor
sbb
aas
mov
lcall
pop
fcomi
jbe
xchg
pop
iret
lock
pop
imul
faddp
lock
mov
mull
jg
push
mov
rcrl
popa
xchg
shr
sub
rcrl
gs
xor
loope
aad
cmpsl
loopne
xchg
and
out
scas
xchg
sbb
or
xchg
push
push
idivl
mov
test
cmp
adc
jno
jno
loop
jge
push
das
push
test
and
mov
xchg
push
mov
dec
push
mov
jnp
in
daa
mov
je
and
xchg
pop
imul
add
mov
and
hlt
push
loope
jne
test
scas
xchg
fucom
or
fucomip
fmull
sbb
jno
push
mov
jle
jmp
cmp
lods
aad
je
mov
loop
das
rorl
test
sti
cmpsb
pop
ja
mov
cmp
iret
mov
or
sub
adc
inc
pop
out
into
jno
ret
add
loop
push
pop
push
pushf
push
adc
mov
sub
dec
iret
jecxz
xor
adc
lret
mov
in
fdivr
sub
and
in
push
or
fst
pop
push
in
inc
cmp
aas
add
aaa
imul
jle
ss
mov
jo
inc
int3
mov
xchg
dec
mov
xchg
fsts
push
dec
sbb
mov
and
idiv
dec
add
mov
jnp
out
inc
lret
dec
sti
mov
inc
movsl
in
fisubrs
and
adcl
inc
pushf
cmpsb
add
clc
and
add
adc
js
xchg
xchg
enter
and
push
xchg
sub
clc
adc
push
jmp
mov
adc
sbb
cmpsl
rorb
ljmp
mov
cli
sbb
or
fsubs
adc
repnz
xchg
ss
ja
imul
or
jne
int
sub
gs
mov
jbe
cli
pop
aaa
cltd
loopne
fisttps
out
clc
mov
stos
fwait
je
mov
and
ja
mov
repnz
pop
clc
repz
mov
mov
pop
cmp
pop
pop
mov
cmp
sbb
loope
negb
nop
in
xchg
lret
outsb
or
inc
in
mov
xor
test
in
into
aaa
adc
sbb
roll
mov
gs
lahf
imul
insb
arpl
outsb
ror
mov
xchg
pop
ja
and
xor
addr16
sub
lods
mov
cmp
out
jl
movsb
stos
jg
loop
mov
test
pop
mov
mov
jno
push
cld
fidivl
mov
push
jl
icebp
push
push
pop
push
stos
lea
and
push
sub
fcoms
add
mov
jl
cmp
xor
cwtl
push
pop
sub
pop
and
outsb
lods
push
pushf
xor
fistpl
mov
inc
cwtl
add
push
mov
fsubp
push
stos
inc
jae
mov
push
lahf
in
jb
push
mov
xchg
or
mov
jp
push
mov
filds
mov
in
jl
jge
aad
rcrb
and
cmpsl
jnp
jecxz
shll
push
mov
pushf
ljmp
movsl
shrl
sub
test
xchg
fwait
mov
xchg
ds
xchg
das
popf
inc
and
mov
push
std
outsb
adc
lret
ljmp
aaa
mov
push
ja
lret
add
orb
iret
scas
nop
mov
mov
jne
repnz
fwait
pop
cmpsb
rorb
bound
fsubl
xor
imul
push
lea
adc
cmc
idiv
mov
loopne
mov
or
and
imul
jmp
cmp
jl
in
stos
cmp
adc
addr16
jne
jne
adc
js
and
vphaddwd
fcoml
rclb
clc
mov
dec
xchg
ja
cmp
mov
sbb
lds
sub
ss
mov
add
cmpsb
mov
nop
xchg
jbe
xchg
adc
pop
stos
stos
stos
jg
xor
ret
and
cmp
out
je
sbb
imull
sub
scas
push
adc
leave
jecxz
xchg
inc
xor
xchg
or
fdivrl
dec
lods
test
mov
mov
pop
push
xchg
loopne
rol
sahf
stos
pop
scas
aam
movb
lea
popf
bound
pop
mov
cltd
add
sub
idivb
inc
inc
adcl
clc
jg
mov
jnp
jnp
and
pop
mov
test
mov
lret
lds
in
inc
outsb
xor
cmp
cmc
rorl
xchg
xchg
xchg
lea
sub
fstpt
jecxz
sub
add
adc
sbb
or
int
and
in
scas
mov
les
icebp
clc
adc
aas
fnsave
pop
jp
push
int
cmp
sub
push
les
sbb
lea
mov
xchg
call
sub
jbe
ljmp
int3
movsb
adc
pop
mov
cmp
dec
test
and
adc
notb
add
jb
sbb
cmpsl
sub
call
xchg
test
std
ja
sbb
jp
cld
negb
dec
xchg
mov
in
scas
cmp
in
or
mov
iret
mov
cmpsb
sub
cltd
jns
add
fildll
jge
mov
push
out
adc
pop
cli
dec
inc
add
cmp
or
icebp
stos
sub
jo
push
mov
xchg
jbe
aad
pushf
daa
xchg
jae
cmc
push
jmp
and
dec
xchg
lret
mov
jne
pop
mov
aam
cmp
or
in
sub
add
iret
add
hlt
mov
dec
out
lods
sbb
aad
mov
mov
int
test
add
ds
push
into
jmp
or
pop
or
insl
insl
dec
xor
imul
dec
cmp
cmovb
push
sbb
insl
pop
cmpsl
and
out
mov
in
cmpsb
mov
jo
mov
add
imul
push
mov
xor
or
jg
xor
xchg
stos
in
aas
jne
xchg
call
or
mov
xlat
bound
add
pop
mov
sbb
mov
xchg
pushf
push
das
fisttps
jmp
fistpl
inc
cli
scas
lret
fwait
inc
fsts
ds
jp
nop
inc
lea
icebp
push
xchg
call
lea
or
pop
inc
sahf
fisubrl
jbe
lock
out
pop
cmpl
stos
mov
imul
mov
push
inc
add
pmullw
jbe
mov
push
inc
aad
loopne
sub
addb
lods
mov
jle
mov
jmp
ret
addr16
inc
jecxz
jp
negl
pop
gs
mov
xor
rcll
mov
mov
dec
dec
sbb
std
push
cltd
inc
jl
out
insl
cs
lahf
pop
and
add
xor
popa
sub
xor
movsb
scas
fwait
and
jp
sub
aas
jmp
sub
cli
cltd
insl
incl
mov
enter
adc
xor
xlat
add
or
loopne
pop
pop
jmp
add
push
mov
cmp
mov
test
shrb
pop
or
lret
scas
jbe
outsb
sbb
in
mov
subb
in
dec
adc
push
or
sbb
adc
mov
adc
xchg
ss
insl
mov
ds
fabs
jecxz
push
int
orb
addl
dec
fldl
es
mov
fcmovb
add
rorb
gs
and
in
adc
push
cmp
fdivrs
pop
jb
lcall
and
push
into
ds
sbb
sbb
gs
add
or
mov
add
push
in
push
gs
push
test
rcl
inc
enter
mov
sbb
or
lret
fldt
test
dec
rclb
stc
sbb
adc
sub
out
mov
shlb
xchg
shlb
xchg
sbb
es
clc
cwtl
cmp
or
dec
cmp
stos
jl
jne
mov
movsl
sbb
push
faddl
gs
push
push
in
mov
add
sub
fiadds
es
fdivl
in
aad
cld
cmp
shll
jo
mov
pinsrw
mov
jae
call
je
push
mov
data16
pop
or
mov
pop
push
fdivrl
ficompl
dec
cmp
push
cld
xchg
dec
bound
pop
in
dec
sub
add
sbb
inc
stc
mov
xor
and
into
repz
arpl
pop
mov
adcl
fildll
add
ja
inc
mov
jno
test
call
pcmpgtd
mov
icebp
icebp
xlat
dec
movsb
xor
iret
xchg
push
mov
push
sub
xchg
mov
mov
das
fs
and
movsl
dec
pop
int
dec
int3
int3
out
scas
mov
mov
cmpsl
mov
and
push
xor
in
repnz
sti
insb
addr16
addb
mov
push
imul
pop
std
xor
nop
cmc
sbb
loopne
mov
cmpl
outsb
outsl
inc
stos
lret
or
test
loop
add
push
int3
out
mov
sub
pop
xchg
dec
jnp
into
add
pushl
dec
xor
mov
dec
iret
sbb
xor
ds
gs
jle
jns
dec
lds
sub
insl
andl
aas
or
or
xor
push
pushf
jno
ja
dec
cmc
dec
or
jo
loopne
out
push
idiv
les
push
fisubl
or
imul
pop
shlb
cmp
dec
fldt
push
push
fistpl
outsb
js
jno
xchg
ret
stc
cld
add
xor
frstor
test
and
ret
orb
mov
mov
test
jne
filds
bnd
inc
push
popf
imul
mov
push
push
or
jae
arpl
and
push
add
mov
data16
lret
cmp
inc
hlt
out
lcall
dec
shlb
cmpsl
aam
jns
xor
les
jno
add
pushf
inc
fisttps
outsb
hlt
cmp
cltd
loopne
pop
lret
add
dec
cmp
fucom
cmp
out
adcb
stos
fldl2e
sahf
inc
push
ret
add
fs
pop
gs
add
cmp
jo
pop
mov
notb
and
jnp
out
idivl
adc
fs
pop
sub
inc
je
dec
sbb
leave
shlb
cmp
clc
es
incl
fnstcw
cmpsl
xchg
addr16
sub
xchg
or
adc
idivl
mov
imul
jg
ss
fisubl
js
add
aas
inc
rcll
mov
nop
adc
pop
test
out
orl
dec
mov
pop
pop
pop
dec
inc
xchg
movsb
dec
lock
add
push
imul
and
push
xlat
mov
jg
sbb
xor
pop
push
cmp
out
or
mov
ja
push
lahf
aaa
sub
outsl
or
adc
js
sub
mov
pusha
rcrb
test
dec
or
scas
es
adcb
mov
mov
sub
sbb
jns
or
arpl
dec
cmpsb
ss
mov
push
out
sbb
mov
ja
in
in
mov
shrl
fbld
shrb
inc
sahf
addr16
lock
popf
mov
fiadds
gs
adc
cs
bound
pushf
shlb
pop
dec
fiadds
and
mov
scas
sub
shlb
push
add
addb
add
outsb
add
cmp
daa
loope
pop
and
fimuls
es
jno
cmpxchg
movsl
jge
mov
aam
or
pop
insb
add
iret
test
lcall
pop
repz
fistpll
push
popf
cwtl
sbb
clc
mov
cli
das
push
sbb
lods
push
push
push
iret
xlat
push
call
stos
fsubl
mov
and
push
sahf
pushf
xchg
mov
loope
test
dec
clc
jo
xchg
mov
idivb
xchg
cltd
add
mov
sti
xchg
aam
into
inc
adc
xor
into
dec
push
hlt
mov
xchg
dec
jbe
icebp
int3
lret
ret
sbb
jno
out
loop
push
mov
rorb
rolb
scas
push
xor
dec
out
mov
add
mov
inc
lods
push
cmp
hlt
stos
mov
inc
cmp
push
xor
sahf
shlb
dec
adc
repz
ret
aas
pushf
in
adc
adc
pusha
lret
xor
xchg
jnp
sahf
pop
std
jne
test
icebp
jmp
popa
andl
mov
sarb
pusha
push
mov
cld
push
add
js
mov
pop
mov
cmp
dec
dec
add
pop
imul
outsl
add
xor
cmp
and
mov
cmp
and
adc
cld
jp
mov
sbb
mov
inc
xchg
aam
shrl
push
mov
cmpsb
dec
or
pop
or
jmp
pop
lahf
imul
testl
inc
sbb
nop
repz
adc
push
psrlw
fcomi
push
je
out
stc
sub
or
outsb
push
xchg
mov
lods
jnp
hlt
out
adcb
mov
sarb
cltd
mov
lret
aaa
jnp
sub
or
aaa
xchg
les
jmp
das
and
cmp
pop
into
adc
cmp
mov
lret
ret
mov
sbb
shlb
fisubs
push
popa
inc
lods
sub
out
es
mov
dec
lods
and
jmp
jo
mov
in
lea
xchg
jecxz
push
push
shr
mov
es
enter
stc
fstp
in
ficompl
sub
xchg
fmul
mov
xor
insl
pop
data16
repz
stos
sahf
dec
jns
pop
pop
sbb
mov
ficomps
xor
add
inc
jle
or
jl
addr16
int3
xchg
lcall
mov
cmp
pop
xor
xchg
add
adc
dec
mov
stc
popa
aad
xchg
inc
shlb
and
or
cmp
loope
cmpsb
push
dec
sbb
stc
sar
mov
inc
mov
add
mov
mov
jne
fdivl
pusha
ljmp
pop
mov
jnp
orb
sahf
out
pop
pop
es
push
mov
sub
je
pop
ret
lret
scas
shrb
test
jl
push
jmp
fwait
jne
aam
cmp
push
adc
mov
faddp
sbb
jne
xor
pop
sub
mov
mov
xchg
stos
xchg
xor
ja
add
outsb
or
adc
xchg
std
sub
inc
cmc
fst
sbb
pop
mulb
dec
mov
dec
xlat
mov
cmc
lret
sbb
pop
push
adc
mov
aam
popf
mov
cli
cmp
sub
imul
jl
pushf
sub
shlb
mov
je
adc
fmul
lock
cmpsb
in
imul
pop
in
out
mov
mov
xor
add
ret
out
cmpsb
dec
int
mov
cmpsl
stos
fisubl
out
mov
xor
sub
mov
loope
bound
shll
or
loope
or
test
sbb
jecxz
leave
test
mov
dec
test
inc
loop
rcll
pop
jbe
cmpb
test
pop
daa
xor
sbb
inc
lcall
bnd
lahf
and
call
aam
scas
jns
pop
int
inc
push
push
and
dec
jmp
inc
rclb
jmp
test
or
test
stos
sub
inc
and
sbbl
ss
or
xchg
dec
lret
cmpsb
out
repnz
or
das
shll
push
or
push
fadds
fwait
rcr
fstl
test
mov
loope
out
mov
push
sub
or
lock
adc
add
dec
jmp
ds
dec
mov
mov
adc
scas
sbb
lahf
in
xor
jo
dec
or
stc
mov
and
cmpl
les
dec
pop
jae
imul
dec
imul
mov
aaa
cmp
out
mov
mov
loopne
push
adc
loop
mov
sahf
dec
inc
loope
xchg
push
or
mov
les
flds
icebp
xor
jno
ret
ret
sahf
pop
mov
mov
jbe
xchg
add
add
test
hlt
add
shrl
mov
stos
dec
outsl
cmpsl
adc
dec
xor
subl
xchg
cmp
lds
mov
and
ret
or
inc
aaa
and
add
xor
mov
add
sub
loopne
jnp
sbb
xor
or
and
into
and
and
imul
mov
mov
push
push
cmp
xor
push
add
mov
fwait
push
push
jl
xchg
push
out
jne
sub
neg
fs
scas
cmpl
pop
leave
stos
imul
or
pop
stos
or
mov
fisubs
cmp
cmp
or
add
jns
mov
push
push
lock
cmp
in
dec
in
pop
and
mov
cld
xchg
movb
ja
and
cmp
rcrb
mov
push
std
cs
cltd
fldcw
aas
push
mov
aad
test
mov
js
lret
dec
jne
aas
xchg
fcomps
insb
mov
jno
aam
push
std
out
test
and
dec
jle
leave
leave
bound
mov
inc
das
inc
sbb
dec
mov
cwtl
mov
cmpsb
xchg
outsl
inc
dec
test
jns
push
jo
cltd
push
dec
test
push
adc
dec
adc
notl
jae
pop
push
es
loopne
dec
shr
ss
pushf
and
lods
sbb
imul
setg
or
cmp
mov
fnstsw
xchg
dec
dec
xor
std
loopne
add
xorl
fcmovb
pusha
sbb
xchg
mov
pusha
jne
mov
aad
inc
push
and
daa
jg
int
or
jno
mov
mov
pop
fldenv
mov
fisttpll
ficomps
mov
stos
or
push
pop
mov
dec
lods
lea
and
out
movsb
in
aas
adc
aaa
xchg
mov
test
test
repnz
ss
or
leave
shlb
mov
enter
xchg
repz
or
dec
mov
jecxz
cmp
stos
mov
pop
dec
je
jb
sub
xchg
rcl
jle
mov
jb
pop
adc
pop
sbb
adc
in
je
out
aam
pop
mov
inc
sub
bound
jnp
loop
pusha
subb
pop
stos
ret
xchg
in
jecxz
and
pop
or
xor
cmp
sbb
arpl
jne
cmp
fisttpl
out
mov
loope
mov
leave
fs
inc
mov
sbb
fstps
lahf
dec
dec
das
push
cwtl
push
inc
cmp
sbb
aad
das
outsl
sub
inc
push
repz
mov
xor
mov
xchg
mov
enter
adcl
xchg
rcrb
fstpl
xor
mov
dec
mov
outsb
mov
and
or
adc
sub
dec
icebp
rcrl
add
imul
stos
adcb
mov
push
add
ss
and
int
cmpsb
mov
and
fs
xchg
mov
xchg
mov
xchg
jae
nop
aad
ret
cli
mov
mov
push
inc
push
pop
xlat
add
push
stos
jmp
sub
sbb
add
pop
or
es
mov
cmp
clc
repz
dec
dec
and
adc
push
fildl
clc
sarl
pop
leave
xchg
jno
mov
int
add
mov
enter
add
aad
xor
sub
in
and
repz
pusha
jp
adc
pushf
sarb
mov
ja
or
push
test
add
popa
loop
xlat
mov
les
adc
es
jle
popf
movsb
push
cmpsb
ja
movsl
aam
xorb
cld
out
imull
cmpsb
jno
mov
xor
movsb
fidivl
dec
xor
lods
loopne
xchg
idivb
aam
sti
sar
and
ljmp
jge
xchg
cmpsl
enter
xor
iret
and
mov
jno
cld
cmc
mov
aam
mov
xchg
xlat
and
pop
jnp
pop
pop
cmpsl
sub
inc
mov
stos
pusha
cmp
cld
adc
popf
mov
pop
mov
pop
push
insb
push
scas
add
sbb
enter
mov
stc
mov
pop
jp
pop
jno
insl
push
jle
jmp
xchg
pop
jae
add
das
jle
ss
or
jae
mov
mov
cwtl
dec
jno
aad
add
inc
mov
xchg
cmp
sbb
push
push
cmpsb
push
loop
add
sarl
outsb
loop
pop
dec
adc
mov
jmp
or
out
mov
notb
cmp
xor
lret
xor
dec
mov
int
push
push
lret
cmpb
fmull
daa
lods
xorb
lret
and
cs
mov
jmp
xchg
sbb
lea
shlb
sub
mov
fcoms
add
movsl
sub
arpl
adc
mov
push
ljmp
mov
jmp
jno
das
pop
aaa
roll
stc
jecxz
cmp
int
dec
sub
and
inc
lds
lods
test
pushf
arpl
mov
xor
lods
lret
subl
lds
dec
inc
inc
pushl
testb
enter
sbb
ret
das
fadd
add
jecxz
je
lods
dec
aaa
jmp
sub
xchg
lock
sbb
popa
sub
lea
ss
lods
imul
fsubs
pop
das
jbe
xchg
clc
mov
sbb
fsubrs
sahf
sbb
icebp
xchg
lcall
mov
rorb
iret
dec
and
rorl
mov
push
fldt
push
mov
out
outsb
jae
sbb
push
test
ss
jno
inc
imul
pop
cmp
in
lods
into
xchg
mov
in
stos
jne
adc
pop
push
inc
daa
xor
xchg
mov
insl
scas
mov
shlb
xor
addl
pushf
inc
or
icebp
dec
mov
sahf
lret
fistpl
test
push
addr16
shrb
mov
mov
or
sub
lahf
fucomip
out
push
in
loope
daa
or
mov
cmp
pop
jl
mov
dec
dec
sti
dec
push
leave
jecxz
xorl
shll
sub
loop
outsl
jecxz
stos
and
jb
push
clc
dec
aaa
add
lods
in
add
leave
mov
add
jge
test
xor
lods
push
push
adc
mov
std
aaa
mov
jle
pop
and
or
sbb
test
setle
sbb
push
aas
dec
incl
mov
cmp
cmp
mov
add
and
cmp
dec
shrb
ficoms
out
iret
arpl
bnd
push
in
add
mov
lock
push
dec
test
xchg
xor
lahf
dec
push
cld
cmp
sbb
addr16
in
pusha
mov
mov
test
loop
push
add
insl
stc
jecxz
or
sub
mov
inc
mov
sub
pop
sbb
cmp
mov
sub
imul
cltd
adc
pop
jle
movsb
shl
pop
add
aas
jge
and
adc
mov
pop
cmp
pop
cld
jge
add
inc
mul
adc
mov
les
push
fcmovbe
dec
call
sub
call
aam
adc
out
repz
out
fisubrs
inc
jle
cmp
into
dec
pop
int
mov
pop
push
xor
test
xchg
jne
imul
ss
fisttpl
imul
fbld
adc
cmp
sbbl
add
mov
scas
jae
jb
loope
xchg
mov
loopne
ret
sarb
idivl
test
xor
arpl
jl,pt
sahf
mov
cmp
mov
data16
xchg
mov
call
repz
xchg
leave
fldenv
xor
cld
add
sbb
pop
xor
and
rcrl
je
or
ja
outsb
dec
fidivs
inc
pop
xchg
push
mul
jo
cmp
mov
adc
rcrb
xor
adc
cmpsl
je
sbb
or
in
cmpsl
cmp
popa
xor
mov
and
insb
sbb
decb
cmp
sbb
bound
int
adc
cmp
adc
out
test
xchg
sbb
cmpsb
fldt
les
dec
pop
mov
popf
ja
mov
arpl
mov
add
lods
clc
sbb
xor
bound
or
or
loope
add
int3
jns
shrb
inc
inc
adc
outsl
adc
and
mov
call
sub
jg
dec
pop
push
xchg
xor
mov
sbbl
clc
movsl
lea
jecxz
jae
xchg
loop
movsb
jp
out
cmp
add
adc
xlat
mov
fnsave
jle
pop
insl
repnz
ljmp
test
std
jo
fsubrs
loopne
push
lods
stos
jbe
les
mov
fsubrs
in
ja
shll
out
jns
xlat
and
test
enter
fildll
and
aas
pop
jge
xchg
jmp
lods
cmp
movsl
mov
adc
inc
xlat
xor
cli
cmp
and
jp
pop
add
sub
inc
pop
or
jo
stos
lcall
cmp
dec
aam
xlat
push
add
push
mov
dec
roll
fdiv
bound
inc
jb
pop
push
inc
xchg
test
adc
cs
or
xor
sub
subb
mov
hlt
mov
mov
push
push
cmp
sub
xchg
jne
test
jb
inc
pop
std
inc
push
sbb
mov
sarl
je
ljmp
jae
sbb
dec
test
cmp
xchg
imul
jp
adc
jmp
fistps
push
mov
imull
sahf
jle
jg
mov
repz
test
fcmovb
stos
sbb
mov
call
or
dec
mov
in
shl
and
xlat
mov
inc
mov
fwait
jnp
inc
mov
pop
stos
das
mov
xlat
xchg
dec
jp
pushf
push
iret
adc
repz
outsl
mov
fsts
sbbb
dec
fcomps
cli
mov
popa
push
popf
insl
pop
andb
sahf
imul
adc
iret
pop
push
sbb
lock
sti
mov
aas
jle
iret
mov
stos
bound
fidivrs
jae
test
std
add
xchg
adc
cmpsl
inc
xchg
mov
je
out
or
sub
dec
fstl
mov
out
cmp
adcb
cmp
popf
sub
lods
popf
or
into
or
mov
sub
pop
rol
and
and
sti
adc
enter
pop
mov
stc
fnstsw
imul
inc
popa
mov
push
cmp
movsl
jae
and
xor
inc
lds
adc
sub
into
pop
adc
jae
lds
adc
push
sti
sub
or
leave
mov
jmp
mov
xor
add
mov
xchg
movsl
mov
xor
fucomi
or
in
add
scas
nop
cmpsl
nop
and
arpl
jmp
adc
sarl
mov
dec
inc
xor
pusha
add
jno
test
imul
pop
testb
push
lret
pop
shlb
mov
lret
inc
push
repnz
xchg
bnd
insl
paddsb
lea
push
jno
adc
lock
mov
cmp
pcmpeqw
or
or
cmp
xlat
loope
xor
test
out
and
cmp
adc
aam
sbb
pop
xchg
dec
shr
hlt
mov
divl
iret
cmp
mov
fucomip
push
test
sub
or
std
inc
sub
or
rclb
aad
inc
lcall
xchg
ss
lds
insl
sti
push
shrb
jg
out
es
jnp
cmp
mov
cmp
adc
adc
subb
std
aas
xor
or
je
mov
jmp
stos
mov
sub
cmp
lcall
aas
push
adc
orl
into
cmpsl
sub
cmc
rorb
mov
dec
imul
xlat
add
ficoml
adc
or
xorl
add
or
repnz
sub
fldl
xor
mov
push
jno
imul
in
sbb
mov
pusha
cwtl
dec
jo
mov
dec
add
sub
dec
xor
adc
negl
add
and
sarl
ja
scas
out
cltd
dec
jle
addr16
pop
mov
mov
xor
cmc
or
icebp
dec
pop
loop
scas
inc
xchg
mov
add
dec
jl
and
filds
fs
sti
rorl
jo
scas
push
add
mov
push
cmp
cld
sub
mov
insl
mov
cmc
test
out
adc
adcb
jb
mov
mov
jg
in
adc
cld
std
loop
repnz
lahf
pop
mov
inc
inc
rolb
icebp
sbb
jae
outsl
aad
adc
mov
sub
hlt
std
lahf
repz
or
inc
sub
clc
arpl
out
dec
pushf
testl
jnp
jne
mov
outsl
mov
aas
and
jne
daa
je
inc
mov
movsl
inc
pop
or
pusha
aad
sbb
push
xlat
mov
movsl
mov
mov
pop
xor
daa
and
pop
adc
mov
outsw
jecxz
stos
mov
add
mov
lods
pop
jo
mov
iret
mov
faddl
lods
mov
pop
cmpsb
or
ljmp
pmaxsw
jecxz
lret
mov
and
xchg
mov
xchg
mov
loopne
sbb
ret
frstor
lret
loope
cli
call
fst
add
cltd
sub
lds
aas
mov
into
push
xchg
dec
mov
and
aad
sbb
mov
xor
sahf
jg
xor
fs
out
addb
cmp
mov
ljmp
mov
cmpb
and
popf
sbb
mov
mov
fstpt
mov
les
test
inc
xor
pinsrw
push
aam
jge
daa
and
pop
addr16
cltd
xor
jp
push
outsl
int3
xor
pop
xchg
push
jle
or
loopne
xor
dec
sbb
aam
jb
neg
mov
pop
and
fisttpll
push
jle
xchg
lcall
insl
loopne
cld
add
das
ret
jns
cmp
push
std
jle
data16
add
enter
push
dec
arpl
xchg
popf
mov
test
mov
test
popl
push
xor
jecxz
pop
ja
mov
ljmp
push
subl
xor
jmp
sub
and
rorl
xchg
jno
test
int
pop
dec
aaa
adc
icebp
paddusb
push
loope
push
dec
mov
jne
adc
sbb
inc
stos
sti
das
jno
mov
xorl
xchg
outsl
sub
cld
shlb
jbe
pop
xor
aas
jns
popa
xlat
mov
popa
inc
and
pop
push
and
pop
rcr
adc
aaa
inc
push
xchg
pop
jge
outsb
cmp
add
inc
xchg
xlat
aaa
mov
mov
mov
lret
movsb
jns
shrl
jecxz
mov
xor
sub
insl
movsl
lds
pop
jmp
lcall
loopne
inc
fwait
mov
xchg
jnp
cmp
jg
lea
xchg
xor
repz
cli
in
enter
scas
add
pop
lock
out
and
imul
les
js
out
loop
jmp
lods
cwtl
xor
dec
push
shrl
shll
stc
cmp
sub
faddp
mov
dec
fstpl
out
xchg
push
lret
mov
popf
dec
es
push
push
xor
and
or
xchg
xchg
mov
imul
xchg
mov
inc
movsl
repnz
xchg
mov
leave
enter
push
push
sbb
into
inc
iret
xchg
pop
mov
in
add
sbb
fs
sahf
dec
add
cs
dec
fwait
test
std
cmp
add
or
xchg
dec
pusha
pop
test
imul
aas
mov
or
out
int3
mov
mov
sub
lods
fldl
jecxz
scas
sahf
dec
fstl
dec
lods
and
test
lds
clc
inc
icebp
movsb
jae
out
push
mov
add
xlat
mov
mov
mov
adc
nop
jne
loope
adc
test
jl
sub
sarb
aas
ret
faddl
sarl
lds
nop
and
dec
pop
pop
fstpt
hlt
and
mov
pop
sub
pusha
fnstenv
jne
push
inc
sbb
jp
testb
aad
ljmp
and
sbb
lds
jae
xchg
fwait
call
test
or
adc
cmp
or
inc
cmp
cld
mov
sbb
inc
xchg
dec
sbb
mul
loop
testb
outsb
adc
sub
xor
dec
pop
push
mov
xchg
cmpsb
or
dec
ret
hlt
jb
sub
test
add
in
mov
lret
shlb
test
ljmp
es
jmp
orb
movsb
in
or
or
inc
loope
adc
push
xor
sbb
pop
xor
and
mov
cltd
adc
jae
cmp
aaa
iret
imul
push
fwait
outsb
cld
test
mov
lock
bound
lods
sti
dec
inc
mov
stos
sti
bound
pop
xor
les
movsl
sub
test
pusha
cmp
test
cmp
jmp
out
pop
inc
addr16
arpl
mov
lods
or
mov
xor
mov
pop
in
push
out
jge
dec
ljmp
test
xchg
cltd
jb
sarl
xor
jmp
push
test
sub
lock
ds
jle
pop
mov
roll
call
pop
xor
adc
xchg
mov
cmp
sub
fsubp
xchg
dec
jo
and
fnstcw
add
or
lods
imul
je
pop
mov
cs
push
xchg
mov
sub
inc
pushf
mov
out
jp
xchg
inc
movsb
orl
xor
shrb
int3
out
dec
sbbl
loop
test
jp
lcall
dec
mov
push
sub
or
and
jmp
mov
cmp
sbb
cmp
mov
les
mov
jmp
fldl
adc
movsl
jle
int
jp
andl
inc
mov
cs
fs
movsl
jae
add
ss
faddl
aaa
out
sub
and
mov
mov
pop
dec
sub
loopne
adc
pop
mov
subl
iret
inc
stos
mov
inc
clc
or
pop
sbb
fcoml
and
xor
xchg
loopne
insb
ljmp
push
cmp
mov
mov
leave
inc
cltd
jl
pop
dec
subb
dec
shlb
mov
fsts
xchg
push
push
in
sahf
sbb
jo
aam
pop
es
xor
lret
and
push
mov
jle
ja
loope
adcl
push
xchg
notrack
ficoms
and
out
add
xchg
aad
push
outsb
movsb
xchg
stc
shlb
test
inc
rcll
loope
hlt
test
inc
int
dec
insb
imul
jp
dec
out
xorl
ljmp
insl
xor
push
cmp
pop
leave
push
sbb
jecxz
inc
cltd
ja
icebp
pop
push
out
imull
mov
sbb
mov
cwtl
xchg
test
sti
jb
stos
das
pusha
dec
push
dec
push
push
sub
gs
movsl
rcrl
std
xor
adc
inc
sub
push
lcall
push
mov
pushl
stos
daa
fisubs
out
pop
push
and
popa
jbe
xor
fs
imul
mov
fnstcw
jle
fcmovb
mov
xchg
mulb
cmpb
iret
gs
push
xchg
ret
xor
xchg
test
clc
mov
cltd
and
loopne
nop
das
sub
insw
lcall
jo
aaa
iret
xchg
and
out
decl
jecxz
push
sbb
xchg
insl
arpl
jg
inc
xor
nop
jp
push
in
xor
sbb
scas
enter
xor
fistpl
orb
push
jg
pop
pop
mov
out
rol
rclb
or
icebp
mov
imul
gs
mov
xor
jg
sarl
mov
xchg
popf
andl
repz
pusha
push
cmp
out
lods
mov
loopne
scas
enter
cmp
mov
in
push
cmp
andb
fs
cmp
mov
jl
in
inc
sbbb
das
aaa
repnz
je
inc
dec
loope
sbb
gs
fucomp
mov
mov
xor
inc
jle
lahf
shlb
pop
ds
lea
out
and
fistpl
sub
ret
cmc
scas
add
out
or
pop
in
jne
jno
repnz
cmp
repz
or
adc
fiadds
out
pop
sub
sbb
and
ja
mov
pop
js
nop
and
xchg
daa
shll
and
cld
lock
sbb
sti
imul
or
mov
fwait
jns
outsl
lods
fisubs
adc
sbb
dec
stos
jns
es
dec
movsl
dec
inc
mov
push
push
push
flds
push
adc
inc
data16
push
mov
popa
xchg
faddp
mov
cmp
and
add
outsl
sub
push
sbb
cmp
add
mov
pusha
out
mov
lods
or
out
ficoml
popa
mov
xchg
js
cmp
jns
out
out
inc
aam
inc
and
jns
cmpsb
sub
jno
jb
sub
cli
jecxz
inc
loop
in
mov
mov
mov
test
enter
fldl
inc
mov
push
mov
es
add
jae
std
mov
mov
add
js
push
pop
ljmp
mov
ret
add
dec
lds
xchg
adc
or
fwait
xor
stos
into
mov
adc
fstl
fs
in
arpl
dec
mov
xchg
int3
xchg
das
xchg
jge
mov
push
les
jg
fdivl
repnz
imul
and
push
mov
xlat
movsl
push
leave
ficompl
inc
inc
add
test
stos
xor
mov
scas
fdivs
jecxz
mov
mov
xlat
call
xchg
scas
mov
loop
and
shll
push
xor
mov
out
mov
inc
inc
mov
insl
sahf
notl
out
out
pop
mov
xchg
sub
or
adc
mov
pop
test
ljmp
leave
fwait
cmp
outsl
movsl
icebp
push
fnstsw
or
cmc
test
and
mov
test
js
mov
pop
clc
cmc
xlat
dec
xor
and
add
adc
sbb
cmpsl
xchg
in
dec
insb
pop
jmp
int3
xor
sub
inc
or
out
loop
mov
outsl
popa
xor
aad
push
or
outsl
mov
lcall
adc
push
int3
test
sub
xchg
add
mov
sub
adc
imul
scas
jns
pop
mov
sbbb
adc
icebp
sub
pop
int3
jo
fstps
push
imul
in
xor
in
cmp
arpl
aam
movsb
push
dec
fdivrs
mov
sarb
pop
dec
lods
out
scas
cld
jecxz
cmp
inc
push
mov
and
popf
sub
icebp
lcall
mov
das
mov
sub
sti
int3
sbb
cmpsb
test
dec
ficompl
in
lret
leave
xchg
dec
inc
dec
push
dec
incb
js
mov
xor
inc
bound
sub
jg
mov
leave
dec
in
jae
sahf
jp
adc
test
fst
loopne
rorb
push
cmp
out
hlt
or
fimull
jb
pop
out
push
arpl
push
rol
aad
or
pop
add
mov
sti
rcrl
ds
cltd
cld
mov
or
push
jnp
xor
inc
push
pop
rcrb
cmp
enter
mov
or
xor
xchg
ljmp
pop
mov
cmp
pop
push
es
mov
lret
cmc
or
aaa
jmp
repz
push
test
adc
hlt
pushf
pop
or
fld1
cwtl
loope
jp
pop
mov
cltd
mov
and
mov
into
push
mov
inc
shlb
pop
sbb
outsl
or
mov
mov
cmpsb
dec
lods
movsl
mov
add
cmp
sbb
mov
sahf
cs
sahf
das
andl
rcrb
nop
sbb
insl
ja
stos
sub
cli
xchg
mov
cmp
mov
outsb
push
or
insl
cmp
es
fdivs
test
push
js
in
mov
add
rclb
and
mov
mov
mov
inc
mov
mov
push
jns
mov
inc
and
pop
ror
fwait
push
int
add
or
jmp
push
ja
mov
pop
hlt
mov
sbb
sub
in
jnp
out
add
xor
jnp
repz
outsb
repz
and
fwait
mov
ljmp
test
pushf
sub
xchg
js
pop
lcall
mov
adc
jmp
loopne
es
gs
in
inc
adc
stc
loop
mov
add
push
je
into
js
inc
cmp
add
enter
lcall
in
cmpsb
les
out
mov
aad
xlat
sbb
pusha
pop
aad
cmp
inc
inc
lret
jns
test
js
andb
xchg
xor
les
les
arpl
push
jb
dec
roll
inc
loope
inc
cmp
xchg
faddp
lods
mov
ds
imul
je
rcll
lock
mov
dec
adc
shll
imul
movsb
and
loop
sub
mov
sub
cmp
cwtl
test
in
sub
jnp
popa
popa
or
pop
or
sub
jl
cltd
xor
push
fnsave
adc
clc
leave
jae
lds
mov
push
and
adc
mov
xor
inc
xor
jo
int3
test
adc
jg
push
cmpsb
lret
and
adc
addr16
pop
lret
shll
pop
js
movsl
dec
out
sbb
sbb
add
mov
hlt
xor
jecxz
fcmove
out
pop
and
cmpsl
lods
add
add
lret
xchg
and
xchg
fisttps
repz
pop
sub
xor
std
push
shl
out
push
gs
xchg
repz
int3
xchg
sbb
jle
lret
mov
mov
xchg
fimull
jmp
pop
jnp
es
jmp
dec
repnz
loopne
rorb
cmc
lret
outsl
fsubrl
data16
xor
push
clc
push
jp
add
sahf
add
mov
outsb
xchg
xor
orl
sub
or
add
scas
lods
pop
fcomps
lods
fmul
imul
les
or
jnp
ljmp
mov
add
adc
es
jno
mov
std
cmp
loop
dec
inc
sub
into
sti
mov
jl
subb
xchg
mov
loopne
les
test
sbb
in
test
movsl
dec
frndint
push
rcrb
in
mov
adc
push
addb
in
push
xor
sub
into
lods
loope
cmpsb
xor
fxch
lods
pop
cwtl
dec
mov
pop
test
insl
xchg
xchg
pusha
imul
jns
fsts
ss
fs
imul
adc
and
in
adc
repnz
add
add
scas
sbb
fcoms
insl
lret
pushf
xchg
popf
xchg
fistpll
pop
adc
mov
sahf
fldcw
int
mov
pop
inc
mov
sbb
daa
pop
fildl
or
push
xor
mov
mov
stc
call
xchg
pop
pop
mov
fs
jmp
test
cmp
das
or
test
fidivs
mov
mov
xlat
push
in
jae
sbb
icebp
rcrb
rcl
lret
data16
xchg
mov
sbb
int
mov
jbe
jo
mov
push
jns
adc
sub
cwtl
std
sub
mov
pop
xor
pop
aad
in
xchg
xor
jecxz
xchg
cwtl
sbb
push
ja
push
incl
popf
push
jp
fisubrl
xchg
or
cmp
jl
and
xorl
fwait
or
fcmovb
dec
inc
sbb
les
sti
adcb
leave
cltd
insl
add
jo
decl
xor
imul
fs
adc
ss
test
mov
sti
je
loope
jbe
shll
movsb
mov
addr16
jb
cmpsb
orb
imul
and
cmp
cltd
sar
mov
sbb
jp
dec
lods
push
int3
jp
fwait
jbe
movsb
jmp
in
inc
add
cmpsb
inc
or
xchg
das
cld
fisttps
jp
or
leave
addr16
inc
sbb
test
mov
sub
repnz
test
pop
xchg
icebp
mov
imul
and
cwtl
cmp
cltd
push
lods
cld
sbb
cmpl
mov
xchg
mov
loopne
bound
mov
adcb
push
scas
xor
ds
mov
cli
xchg
je
pop
inc
fcoml
sti
inc
movsl
mov
sbbb
ret
xor
or
imul
xor
push
sti
nop
into
ret
jbe
icebp
sbb
enter
xor
popa
aad
loop
imull
adc
add
insb
lret
call
rcl
aaa
decb
lods
mov
movsb
stc
psubusw
jg
nop
pop
dec
sub
dec
ret
xchg
iret
mov
push
xor
hlt
lret
or
in
sub
mov
stos
dec
call
mov
movsb
jge
mov
punpckhbw
mov
pop
rol
out
dec
and
sub
out
jle
jne
pop
popa
into
enter
xchg
daa
jge
pushf
inc
add
inc
gs
mov
mov
fsubl
aas
mov
ds
or
sbb
pop
push
outsl
adc
xlat
mov
imul
add
mov
jmp
out
fsubl
fwait
int3
cmpl
nop
mov
jmp
inc
leave
sub
lcall
sbb
jg
sbb
in
mov
out
test
fadds
dec
dec
adc
mov
sbb
shll
xchg
cmp
daa
repnz
inc
or
cmpsb
inc
xor
ljmp
dec
and
or
test
fsubrl
jmp
sar
lds
pop
pop
in
sarb
dec
int
lret
cmp
test
xchg
jnp
orb
pop
inc
out
lods
mov
fs
dec
mov
imul
dec
and
mov
add
pushf
mov
mov
pop
nop
fnstcw
aam
lret
ljmp
mov
push
push
insb
movsl
pop
add
dec
ficomps
jg
inc
and
and
push
adc
mov
clc
mov
pop
and
push
mov
jg
xchg
repnz
or
sbb
fisttpl
pop
pop
and
mov
or
and
lcall
cmpsb
sbb
dec
cs
pop
rcr
sbb
lea
aaa
dec
mov
adc
lods
adc
mov
cmp
nop
mov
push
stc
mov
out
inc
fstpt
sbb
mov
adc
iret
and
xchg
jne
push
xor
out
dec
xchg
push
xorb
push
shl
cs
loopne
mov
add
xchg
dec
sti
stos
lods
push
or
stc
pop
imul
mov
push
xor
addr16
mov
xchg
scas
xchg
out
mov
push
mov
jno
xor
pop
mov
pop
jb
add
dec
into
cs
jb
test
sub
inc
sti
push
cmc
inc
dec
pop
sahf
adc
mov
push
pop
pop
mov
lahf
addr16
ret
jecxz
inc
js
ret
test
cmp
clc
jno
sbb
or
popf
jle
jns
rcrl
ja
adc
push
add
dec
mov
pop
sbb
loope
icebp
mov
jp
scas
cmc
push
das
adc
add
fwait
data16
gs
push
pop
js
adc
js
add
fmull
scas
sbb
pop
xchg
scas
and
gs
pop
or
jae
xor
mov
cmp
and
lea
shrl
jg
fdivs
jge
xchg
test
mov
add
adc
jmp
notb
push
movb
lret
sub
adc
cmp
push
rolb
cmpsl
shll
xor
fcoms
fwait
push
cmp
es
lahf
out
mov
in
xor
jbe
sbb
daa
and
jo
add
or
mov
pop
aam
push
adc
push
push
pop
cli
fs
push
add
and
call
jno
cmp
xchg
in
xchg
jns
in
std
and
sub
xchg
add
out
adc
adcl
jecxz
inc
iret
outsl
movsb
dec
cwtl
fnsave
test
test
xlat
mov
mov
lds
iret
jbe
cs
stos
dec
cli
xor
shrl
adc
les
fsubrl
orl
pop
fcoms
cmpsl
push
in
je
push
sbb
jl
ljmp
test
mov
add
inc
incl
mov
sbb
jmp
xor
iret
imul
fcoms
mov
popa
cmp
jae
xchg
or
enter
sub
and
or
xchg
xchg
movl
jb
mov
imul
leave
add
push
mov
popa
mov
mov
push
cmp
leave
lds
pushf
in
pop
xor
ja
mov
leave
hlt
scas
push
dec
mov
lods
test
rcrl
pusha
fisttps
fst
jle
ja
clc
xchg
cmpsl
fsubr
stos
xor
mov
aad
sub
lea
xor
mov
sahf
imul
jno
in
inc
mov
dec
outsl
add
ss
push
mov
aad
or
popf
push
movsl
or
and
mov
cmp
rclb
add
adc
mov
leave
loopne
cmp
lods
push
add
pop
lcall
or
mov
push
lds
xor
jle
fs
test
add
lret
pop
cltd
scas
mov
movsl
or
das
push
mov
fisubs
mov
cmpsb
scas
dec
inc
mov
icebp
iret
xchg
loope
or
data16
dec
pop
xor
int3
mov
out
imul
jb
fwait
mov
dec
int
push
or
xchg
frstor
mov
push
stos
fwait
xlat
mov
insb
in
fisubl
sbb
adc
icebp
das
cld
call
sub
in
shll
inc
cmpsl
insb
lret
lcall
std
movsl
sub
int
insb
sahf
or
fisttps
js
xchg
xchg
scas
mov
jnp
push
fdivrp
jno
shlb
icebp
pop
iret
push
and
add
insb
inc
imul
andl
mov
sbb
pop
leave
cmp
mov
aas
out
int
aam
push
adc
jo
mov
or
inc
in
mov
filds
mov
dec
pop
sbb
cld
es
leave
std
mov
mov
insb
xor
adc
mov
jno
loope
pop
cld
in
xor
int
xchg
inc
and
imul
push
cmp
test
push
push
mov
pop
cmp
add
sahf
ja
or
cmc
out
fs
pop
pusha
cmc
movb
add
add
mov
std
std
and
adc
pop
cld
pushf
cmc
es
ss
sub
push
popa
rcrb
push
mov
sbb
pop
cmp
enter
out
inc
pop
repz
mov
roll
add
push
repnz
jge
mov
dec
pop
push
scas
js
outsb
sbb
aam
mov
pop
outsb
or
xchg
shl
addr16
adc
push
leave
aaa
add
imul
sqrtps
push
js
push
dec
rcrl
outsl
adc
and
mov
ss
inc
adc
sub
ds
jl
xchg
repnz
das
fwait
cmc
inc
mov
rorl
pop
mov
leave
insl
pop
pop
jo
dec
in
insl
jno
mov
mov
jb
adc
mov
jecxz
mov
ja
int3
adc
dec
ss
add
or
iret
cmp
pop
pop
jle
call
std
lds
outsl
mov
ds
in
aas
nop
cmp
addr16
daa
inc
sub
lret
mov
mov
fistpl
lret
push
les
jo
xchg
cli
sbb
jmp
out
adc
mov
mulps
adc
ss
cmovbe
mov
ss
mov
cwtl
ficoms
mov
cmp
movsb
or
cld
jp
cltd
lcall
lahf
jge
mov
xchg
test
in
lock
in
jg
fistpll
xor
in
sbb
or
ljmp
mov
cltd
adc
cmp
in
cli
ljmp
loopne
xor
sub
and
pop
in
pop
out
sub
pop
dec
xor
in
lods
mov
int3
outsl
lahf
lock
xchg
pushf
mov
in
jle
or
sbb
int
sti
inc
push
cmp
adc
fmull
idivb
sub
add
pusha
pop
jbe
jnp
mov
mov
test
dec
and
fisttpl
pop
xorps
mov
sub
lds
ss
aad
pop
pushf
sub
pop
xchg
add
xchg
jnp
int3
or
sbb
xor
mov
jg
shrb
in
push
sbb
rolb
inc
sbb
dec
cwtl
ds
mov
mov
sbb
imul
adc
inc
sbb
fsubr
in
popf
lcall
push
xchg
push
xor
aad
inc
cli
cmp
mov
or
loope
scas
xchg
sahf
faddl
js
sub
push
xchg
sbbl
xor
in
sub
outsb
or
inc
movsl
into
push
mov
adc
std
daa
cltd
rorb
out
ljmp
cli
push
movsb
jecxz
mov
lcall
mov
fs
sub
push
or
and
mov
or
fnstenv
repz
test
mov
mov
shlb
xchg
mov
aaa
pop
or
aas
pop
and
or
add
lods
test
push
xor
and
fnop
or
adc
jmp
sbb
dec
xchg
loope
or
push
rcrb
int3
and
gs
dec
cld
dec
in
add
inc
xor
out
adcl
repz
negl
push
jnp
call
testb
mov
imul
jne
pop
lods
pop
or
inc
mov
insl
std
inc
ret
lret
outsb
pushf
stos
inc
aas
mov
sub
outsl
mov
repz
repz
ljmp
xchg
push
fwait
dec
cmp
bound
andl
cwtl
jecxz
inc
iret
insb
divb
mov
jbe
sub
movsb
jl
push
adc
pop
cmpsb
pop
mov
mov
pushf
inc
jl
mov
xor
fildll
pop
push
aad
fwait
lds
jns
jnp
cmp
enter
jmp
mov
cmp
jno
popa
mov
ja
dec
adc
jmp
cmp
inc
cmp
rorl
pop
dec
sbb
stc
inc
add
adc
ret
fs
pop
pop
inc
mov
add
adcl
inc
out
cmp
dec
or
mov
jns
lahf
mov
frstor
xchg
jl
ss
add
xchg
jno
jb
push
push
pop
jnp
dec
cmp
xchg
or
call
std
push
ja
cwtl
stos
mov
and
mov
mov
fs
lret
xor
cmpsb
mov
sub
add
jmp
test
xchg
scas
push
inc
ror
adcl
jno
pop
push
mov
jne
sub
cwtl
ror
mov
repz
mov
lahf
fs
inc
jnp
mov
jno
insb
iret
das
xor
pop
lods
mov
int
scas
cmp
std
scas
fst
add
sbb
and
lds
insl
dec
inc
sub
dec
sbb
test
js
repnz
into
sarb
cmp
add
frstor
or
dec
stos
xchg
js
add
sub
adc
jl
or
subl
push
js
sar
mov
std
push
ss
cltd
out
mov
jne
imul
and
mov
int3
loope
mov
xor
test
lcall
pop
lods
push
nop
iret
mov
xchg
push
lds
insb
mov
mov
or
movb
dec
mov
mov
sub
pop
shrb
dec
jo
inc
dec
mov
cmc
bound
mov
xor
and
js
and
adc
xor
popf
pushf
mov
insl
add
xor
in
daa
push
sub
cmp
fstl
inc
or
xor
fucomp
dec
or
lds
stos
xlat
add
adc
mov
pop
popa
enter
mov
mov
mov
int3
fisttpl
cs
lds
mov
out
outsl
inc
sbb
inc
leave
call
lock
lock
loop
aas
daa
jl
adcb
je
push
sub
in
fbstp
mov
imul
dec
adc
sub
inc
jae
and
inc
icebp
insl
pop
ror
push
dec
cli
dec
mov
mov
push
iret
mov
mov
push
arpl
andl
scas
test
in
push
and
push
sub
inc
ficompl
sub
fdivs
ja
xchg
shrb
das
addr16
jns
test
xchg
je
mov
cs
popl
orl
mov
cs
mov
mov
pushf
jl
or
ret
cli
fmul
int
and
mov
ret
bnd
inc
cmp
in
fildl
jbe
inc
sbb
shrb
pop
push
xchg
into
fwait
mov
add
loopne
shll
ficompl
insb
lahf
xor
adc
cmp
dec
icebp
dec
out
es
jns
adc
stos
jg
cmpsl
lods
add
aad
xchg
add
sbb
lret
ljmp
xchg
push
and
dec
sub
push
xor
add
xchg
push
subb
js
mov
in
push
lds
call
pop
sbb
out
jp
mov
mov
xchg
add
and
ret
clc
shrl
nop
lock
cltd
mov
add
jle
adc
mov
imul
je
push
push
pusha
xor
jns
daa
xchg
ret
addr16
fstpt
jae
or
ret
cmp
jnp
pop
xor
cmp
cli
push
and
sbb
nop
stos
sbb
faddl
or
mov
jg
pop
test
imul
inc
mov
jbe
rorb
bound
cmp
arpl
jg
clc
je
loop
mov
inc
fwait
pop
cmp
jne
iret
pop
mov
test
pop
inc
insl
fmull
pusha
cli
dec
xchg
mov
pop
jmp
out
shr
mov
or
test
jmp
insl
cmp
imul
xor
das
and
push
and
lds
xchg
pushf
sub
mov
js
repnz
mov
fildl
xchg
and
mov
ljmp
pop
fldl
out
mov
cmc
enter
pop
lret
sub
mov
je
mov
iret
mov
stos
push
popf
add
lret
adc
arpl
xor
or
push
jp
std
adc
xchg
jge
stos
mov
loopne,pt
cmp
fldt
js
fistps
add
sbb
sub
add
inc
add
mov
in
ffree
imul
ljmp
mov
popa
inc
lods
roll
imul
ret
je
insl
push
mov
add
sbb
pop
rcll
xchg
fsubrp
sbb
adc
movsb
pop
and
adc
xchg
roll
adc
movsb
test
imul
out
sbb
jl
bound
sbb
jae
stos
cli
cmp
or
lock
iret
ss
and
xor
pop
adc
movsb
call
sbb
rcrl
mov
jne
sub
xchg
xor
inc
xchg
rolb
mov
mov
mov
daa
add
and
sti
test
cwtl
orb
pop
add
mov
popf
pop
sub
push
dec
sbb
pop
pop
jge
jb
add
sub
dec
sarb
pusha
xchg
push
pop
add
iret
cmpsl
sbb
inc
push
jae
adc
inc
pusha
inc
fwait
cmp
mov
ret
cmp
xor
fbld
or
es
bound
mov
jmp
push
push
lcall
push
in
jns
scas
sub
out
cmpsl
jmp
jo
sbb
sub
fstenv
push
sub
and
outsb
fsts
or
pop
mov
icebp
test
out
add
or
jmp
and
mov
stos
jp
and
or
fisttpl
cmpl
push
adc
xchg
mov
lret
pop
cld
push
hlt
push
add
ljmp
imul
testb
into
iret
mov
mov
cmp
pop
dec
xlat
lods
cmpsb
test
xor
clc
fucom
cmp
fs
mov
mov
mov
and
out
sub
pop
pushl
inc
jecxz
fcmove
or
ficomps
adc
mov
inc
mov
dec
cmpsl
pop
sub
ret
aaa
xor
add
fstpt
add
lods
jge
shlb
les
pushw
xor
mov
fwait
sub
sub
hlt
fwait
mov
push
in
aaa
mov
or
test
imul
fs
repnz
sub
mov
sub
out
or
lret
rcrl
enter
sub
cmc
cmc
aad
cld
mov
xchg
cmp
test
inc
out
lahf
jg
adc
loop
mov
dec
enter
dec
adcb
cmp
xchg
lret
lret
jae
and
adc
jl
adc
lret
and
inc
sub
fs
inc
dec
aad
push
das
loope
xchg
jae
dec
jo
jl
stos
imul
movsl
out
cs
add
jbe
sbb
sbb
outsl
outsl
lahf
lcall
ss
fs
sar
push
mov
movsb
cmp
and
fsts
dec
aam
sti
bound
sub
inc
xchg
cltd
jno
pop
ljmp
or
sbb
xchg
add
inc
xchg
sbb
xchg
pop
daa
sub
cltd
add
ss
ret
shlb
sub
xorb
jo
leave
push
dec
ja
ss
mov
mov
jb
jbe
sbb
jno
pop
test
lea
jge
repnz
jmp
mov
out
cmp
mov
xchg
int3
xor
xor
out
xchg
or
sub
movsb
and
xor
insl
imul
xor
leave
enter
mov
mov
dec
bound
lcall
jp
xor
or
mov
lret
sub
inc
dec
andl
dec
mov
enter
mov
arpl
loope
mov
mov
xchg
mov
jle
sti
mov
inc
or
inc
lahf
test
fs
call
aad
test
dec
out
inc
shl
test
push
arpl
inc
or
test
repnz
idivl
cs
push
sub
jno
mov
mov
or
cld
cmc
ljmp
mov
in
movsl
jge
aam
aad
inc
cmp
dec
inc
cmpsl
mov
test
repz
push
es
jno
xchg
jae
and
into
or
pop
add
addb
mov
or
jg
xchg
add
xor
pop
mov
popf
out
xchg
popa
add
cld
push
fidivrl
mov
mov
addl
out
push
shll
ret
idivl
and
pop
adcb
cmpsl
and
push
dec
cmpsl
jp
mov
inc
ret
mov
mov
dec
idivl
mov
inc
mov
test
mov
mov
jo
jle
ja
shlb
inc
mov
pop
outsb
and
xor
lret
mov
lret
mov
jae
cld
mov
das
add
adc
adc
arpl
sbbl
mov
mov
xchg
jecxz
add
xchg
nop
mov
and
add
call
push
imul
loopne
inc
dec
push
lret
dec
mov
sahf
out
mov
popa
push
xchg
lret
rolb
dec
aad
nop
mov
sub
lods
mov
push
xchg
jae
mov
mov
mov
int3
repnz
xor
dec
jae
call
je
cmpsl
pop
aaa
push
inc
pop
jns
mov
mov
rcrb
xchg
sbb
fnstsw
movsb
xor
mov
aam
jno
lret
pop
dec
jnp
adc
and
mov
pop
or
test
xchg
mov
ds
rolb
jg
xchg
fdivs
fcomps
add
aad
inc
loopne
mov
and
incb
ret
fstps
pop
cmpsb
out
pop
ljmp
dec
repnz
adc
mov
add
jp
imul
sbb
adc
xlat
mov
or
scas
jge
lcall
ss
dec
cmp
add
add
xchg
mov
pop
fs
fmuls
mov
sbb
scas
sub
cmp
mov
loopne
mov
jmp
js
mov
jnp
shll
dec
out
jns
push
insl
sub
push
jno
mov
movl
cmp
outsb
push
rolb
imul
lahf
scas
mov
cmpsb
and
dec
jae
gs
jb
stos
sub
fisubl
je
push
push
rorb
adc
xchg
lret
cltd
out
mov
mov
xchg
rcr
lock
pop
mov
sub
fsubrl
aas
add
jmp
aas
mov
popa
test
cmp
in
jg
mov
dec
outsl
mov
push
aas
adc
cmp
add
addr16
enter
test
cwtl
movsb
fbstp
cld
sbb
and
and
andb
pop
out
xchg
cld
pusha
iret
adc
stc
shrl
jno
enter
xor
jge
pop
shlb
cmp
sahf
mov
sbb
subb
aad
test
pop
mov
test
or
mov
fwait
enter
dec
dec
sub
lds
mov
xchg
xchg
imul
stc
mov
and
daa
sub
xor
stc
fisubrs
sbb
fisubrl
hlt
out
test
dec
pop
pusha
jne
into
in
cli
out
testl
scas
popf
pusha
mov
gs
stc
adc
stos
mov
clc
xor
or
sahf
dec
dec
add
or
sbb
inc
stc
push
ja
ds
sub
ljmp
imul
add
jns
movsb
sub
jbe
stos
je
es
loopne
pop
cwtl
cwtl
push
lret
mov
dec
sbb
call
gs
jns
adc
xor
push
sub
xchg
int
add
mov
pop
mov
xchg
cmp
add
mov
sbb
js
pop
inc
std
rolb
lahf
outsb
repnz
aam
outsl
push
fisttps
repz
popl
sahf
repnz
fbld
aaa
inc
and
imull
scas
mov
push
add
cltd
jge
jg
repnz
cli
sbb
sbb
icebp
cltd
jns
mov
jnp
int
loope
xchg
clc
cmpsb
mov
pop
notb
xor
mov
jp
mov
jnp
clc
repnz
jmp
lods
dec
sarl
push
or
xchg
cwtl
hlt
and
pop
xorb
inc
mov
or
notl
pop
or
mov
mov
and
xlat
jnp
fwait
jge
dec
lahf
shlb
shlb
mov
lret
mov
mov
inc
data16
cld
push
pusha
and
shl
loopne
mov
stos
sbb
pop
mov
sbb
jecxz
add
xchg
rcll
lds
jns
mov
xor
dec
xlat
cmp
push
mov
ss
pop
dec
or
cli
std
mov
cmpsb
inc
loopne
sub
sbb
mov
lret
or
inc
int3
ret
mov
cmpsb
ret
fsubl
cli
imul
out
shll
subb
data16
movsb
xor
sbb
and
sub
add
pop
dec
inc
pop
and
sub
std
mov
scas
or
shl
movsb
call
cmp
popf
sbb
adc
stos
mov
adc
lock
inc
xchg
ljmp
or
int
test
push
jg
mov
out
or
xor
stc
push
mov
sbb
ja
pop
out
xchg
fcmovnu
inc
iret
or
mov
inc
js
cmc
rcrl
outsl
cmp
sub
push
les
in
cmpsb
cmp
ret
push
push
push
ret
mov
es
xchg
ret
add
adc
and
add
dec
gs
cmp
xchg
int
jl
arpl
lock
jge
dec
pop
and
int3
sub
inc
add
je
and
cmp
rcrb
dec
lret
add
rcrl
inc
fmul
shll
arpl
movsl
mov
cmp
xchg
pusha
dec
xchg
inc
mov
test
sub
test
loop
nop
iret
sbb
cmpsl
and
add
lods
and
test
dec
sahf
pop
xor
icebp
inc
mov
lea
mov
mov
sub
sbb
xor
popf
aas
mov
and
out
jmp
test
popf
int
push
jne
lcall
test
ret
lret
xchg
add
mov
nop
fisubrs
inc
mov
xchg
test
pop
push
cmp
mov
pushl
dec
fcmovnb
ss
pop
dec
pop
popa
nop
in
leave
and
jo
data16
add
xchg
add
inc
insl
mov
scas
mov
jns
pop
in
xchg
je
inc
push
xorl
cmp
imul
in
addb
mov
and
mov
orl
dec
push
test
mov
or
mov
fwait
and
fcmovb
xor
clc
xchg
xor
adc
ss
cmpsb
push
mov
jle
or
into
mov
push
scas
mov
rclb
clc
lock
out
jge
into
test
das
outsb
movsb
cli
mov
mov
bound
inc
lahf
and
cmp
sub
pop
push
cmp
cld
add
idivb
adc
bound
cmc
test
push
sub
mov
jne
or
out
jle
or
mov
sbb
adc
lahf
iret
mov
push
inc
sbb
xor
cli
sbb
fwait
pop
leave
cmp
fcoms
jg
jl
xor
shrl
les
loopne
mov
xlat
push
and
pop
mov
mov
addr16
add
xor
jp
mov
aam
lret
jl
stos
shl
test
insl
dec
mov
imul
pop
addl
pushf
icebp
clc
fwait
adc
inc
pop
gs
push
imul
cmp
xor
aam
lea
inc
js,pn
test
into
sbb
in
shrb
add
push
and
xchg
adc
icebp
in
pop
iret
dec
push
cmp
mov
orl
sar
mov
pushf
inc
mov
xor
dec
loopne
pushf
push
test
jmp
push
fsts
xor
xchg
shll
adc
rorb
sbb
xor
ss
pop
cmpsl
pop
or
enter
sub
mov
xchg
sbb
xor
ja
hlt
dec
cmc
mov
loope
in
cmp
insl
mov
test
cwtl
imul
xchg
push
xor
clc
or
int
mov
enter
jae
lret
xor
rcrl
rorb
dec
lock
jbe
sbb
mov
push
xor
out
je
pop
dec
pop
mov
pop
xchg
dec
fldcw
fistpll
add
cmpsl
sub
xchg
sahf
gs
sbb
out
inc
in
daa
rep
adcl
and
dec
clc
cmp
daa
inc
add
imul
int3
jbe
sbb
imul
rorl
aam
xchg
add
jbe
jne
dec
cltd
inc
jge
push
lock
mov
pop
xor
cltd
std
sbb
or
jne
clc
jbe
add
sub
out
jmp
js
sub
mulb
fs
cmpsl
push
mov
cmp
movl
out
insb
in
jnp
pop
jbe
mov
mov
incb
mov
sub
jne
xchg
mov
in
jl
mov
loop
jnp
imul
hlt
xchg
add
jl
mov
jle
push
pop
test
xor
xor
add
adc
mov
push
rclb
clc
dec
aad
xlat
cmp
inc
fs
add
adc
and
cmp
cmc
les
aad
and
bound
sub
test
xchg
sarl
lcall
inc
mov
insb
arpl
ss
xor
inc
sti
fdivrl
movsl
and
lods
fmull
xchg
dec
pop
icebp
jo
pop
shll
mov
adc
mov
jmp
sarl
addr16
add
popf
xchg
and
sbb
out
sbb
sbb
bound
insb
xor
out
js
test
sub
int3
add
lds
and
mov
jmp
sub
sbb
test
in
adcb
xchg
hlt
addb
loope
out
and
sbb
jo
pop
ljmp
pusha
mov
sub
out
cmpsb
push
cwtl
push
pop
sbb
cmc
aaa
inc
pop
test
fists
das
scas
es
and
ljmp
pop
int
test
aaa
ja
sub
shl
loope
out
cli
push
shrb
ret
dec
int
sbb
xchg
cld
cltd
mov
sub
or
fidivrs
fwait
cld
xor
pop
icebp
add
js
xchg
sahf
cs
sub
fidivrs
cmpb
inc
xor
mov
push
fidivrl
hlt
insb
dec
loope
pop
mov
pop
std
pop
dec
dec
lock
lea
push
imul
call
sar
in
repnz
data16
mov
push
push
lret
or
xchg
add
lods
cmp
adc
rclb
in
out
xchg
xor
fdecstp
arpl
mov
sahf
decl
sahf
test
mov
and
jbe
addb
stos
cwtl
add
xor
in
cltd
shrl
test
daa
inc
jge
adc
mov
mov
xchg
jp
mov
sbb
scas
sbb
dec
fnsave
sbbl
mov
dec
in
int
pop
out
cld
fisubs
add
fbstp
xor
fsts
and
dec
mov
dec
sbb
cmc
ret
sbbb
imul
js
jmp
cmp
lahf
loop
andb
jae
das
fstpl
jo
and
sbb
mov
gs
rcrl
fistl
outsl
mov
cld
adc
pop
xchg
sar
lds
cs
fcomps
xor
inc
dec
pop
imul
test
or
inc
mov
int3
xchg
mov
xlat
jbe
cmpsl
jmp
in
mov
lahf
pop
inc
enter
stos
xor
xchg
popa
lock
cli
in
cltd
mov
push
shlb
frstor
addb
in
push
jbe
add
in
mov
in
and
add
stc
jae
pop
mov
insl
xchg
xchg
insl
xchg
xor
mov
test
mov
xchg
pushl
push
pusha
sarl
push
cli
movsb
dec
in
int
out
in
out
jne
clc
repnz
or
loope
outsl
inc
imul
hlt
fnstsw
pop
adc
sbb
pop
jl
lret
adc
int
xor
jo
mov
jo
insb
cmp
lahf
cmp
in
dec
je
cwtl
or
pop
fs
inc
mov
inc
xor
lock
call
xchg
popa
mov
cmc
in
push
mov
sub
inc
sub
mov
pop
mov
scas
add
aam
inc
sbb
jle
adc
fcoml
mov
push
xor
or
cli
lahf
call
mov
out
and
jg
lcall
inc
into
aam
andb
subl
or
fcomps
pusha
dec
dec
mov
cmp
daa
push
cmp
pop
notb
mov
mov
mov
sbb
mov
repz
repnz
js
sbb
mov
push
test
call
test
cmp
mov
push
push
jb
cmp
div
cmp
adc
scas
push
push
xor
adc
jecxz
fnsave
xchg
dec
push
push
cmpb
mov
and
out
call
aad
xor
dec
test
inc
mov
test
dec
or
test
loope
les
mov
fldz
inc
xchg
fwait
mov
or
xchg
out
cmc
scas
jns
push
sbb
scas
sbb
sbb
add
push
cltd
xor
addb
shlb
test
popf
and
xor
jl
pop
pop
loopne
sbb
sbb
add
test
and
sti
sbb
imul
mov
stos
gs
inc
mov
or
mov
hlt
xor
xchg
enter
lea
fiadds
push
mov
sub
sbb
push
je
push
mov
addr16
xorb
shlb
imul
mov
aas
repnz
lahf
aam
dec
xor
mov
pop
xor
fbstp
sub
jb
repz
shl
xlat
push
mov
and
adc
cmpsl
adc
ror
out
cmp
aaa
dec
repnz
inc
xor
stc
imull
pop
jbe
in
frstor
cld
push
rolb
loope
int3
loope
fwait
and
inc
lea
repnz
push
jno
mov
test
jmp
mov
test
sbb
add
iret
dec
out
xchg
daa
out
in
mov
xchg
sub
inc
ljmp
out
sbb
inc
adc
add
lds
lds
mov
pop
pop
scas
pusha
mov
push
inc
rcll
mov
mov
inc
and
inc
cmp
das
mov
inc
xor
rcrb
push
and
outsl
outsb
lds
div
movsb
cmp
orb
lds
cmpsl
je
ret
or
fists
lds
outsl
dec
int3
mov
xor
js
insb
out
adc
pushf
ss
mov
testl
insb
xchg
psubd
dec
push
or
fnstcw
jl
push
rcrl
mov
cwtl
jp
pusha
das
repnz
inc
ja
mov
jb
je
int3
test
push
pop
inc
mov
dec
aad
xchg
movsb
pop
icebp
xchg
fldenvs
or
in
adc
mov
or
js
cwtl
inc
imul
inc
xchg
lret
pop
add
ss
fldenv
adcb
or
xchg
push
mov
inc
cmp
xchg
add
std
dec
addr16
loopne
leave
xchg
and
xor
pop
movsl
mov
mov
or
movsb
push
sarl
fsubp
loop
add
mov
imul
sbb
gs
sarb
dec
stc
lret
fwait
sbb
pushf
add
fistl
sub
jl
xlat
push
bound
lock
or
jo
pop
call
push
icebp
loope
jnp
lret
inc
test
out
pop
repnz
push
mov
ja
cmpsl
pusha
aad
xchg
imul
fidivl
adc
arpl
divb
repnz
loope
mov
jecxz
rcrl
push
inc
mov
fists
insl
xchg
push
ficoml
xchg
mov
in
mov
xor
dec
outsb
cld
mov
sub
sbb
mov
inc
xor
test
cltd
and
out
stc
loopne
test
orb
or
loop
mov
mov
add
lea
test
push
insb
fiadds
subl
push
adc
test
add
mov
or
or
inc
sbb
enter
adc
and
clc
mov
stos
xchg
jge
jmp
adc
push
lock
xchg
pop
or
dec
into
daa
das
sbb
adc
in
movsb
xchg
call
gs
faddl
out
cmc
and
mov
add
xchg
scas
inc
jnp
ret
jg
push
bound
mov
inc
push
fisubs
fcompl
or
out
loopne
orb
pop
xchg
es
aas
loopne
sti
xchg
popf
sahf
adc
cwtl
mov
xchg
stos
test
push
addr16
push
repnz
jnp
push
pop
xor
inc
dec
jge
mov
pop
sbb
mov
mov
aad
mov
fmuls
mov
aad
cmp
dec
dec
test
xlat
pop
inc
or
lock
pop
lret
ss
xchg
es
sar
sahf
loopne
mov
pusha
rorl
jnp
stos
sbb
iret
sub
push
cli
repz
int3
pop
mov
pop
sbb
loopne
xchg
add
adc
adc
not
sub
mov
xor
mov
daa
test
leave
loop
cmp
int
cli
or
jns
aad
stos
aas
fstpt
or
cmp
inc
sub
cld
xor
mov
lcall
or
orb
push
iret
jnp
int3
pop
pop
int3
or
and
scas
call
ds
jns
and
loopne
nop
or
ret
incb
mov
fnsave
or
inc
sahf
cmp
out
cmp
mov
aam
push
ljmp
scas
adc
mov
lods
std
xchg
inc
xchg
fldt
jge
and
or
das
mov
clc
or
and
lcall
in
jne,pn
xor
xor
frstor
clc
lock
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
jns
fdivl
lcall
or
dec
dec
int
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
cli
sub
inc
jne
xchg
je
mov
clc
push
aad
and
push
add
lret
clc
push
scas
aad
aam
sub
cltd
cmc
push
std
ljmp
aad
mov
mov
cli
fidivrl
inc
inc
push
and
mov
insl
enter
mov
cli
outsl
mov
ds
jns
lds
cmp
mov
jg
incl
xchg
fdivrs
or
aad
cmpsb
inc
push
cmc
and
mull
ds
sub
dec
or
jg
bound
popf
imul
xchg
mov
leave
dec
mov
jge
xor
mov
hlt
xor
or
mov
sarb
lcall
pushl
sahf
mov
lahf
hlt
xor
dec
enter
xchg
fnsave
xor
lcall
hlt
xor
and
mov
hlt
xor
dec
jne
xchg
mov
and
xor
and
mov
hlt
xor
dec
and
mov
hlt
and
dec
jne
lcall
jo
inc
dec
sbb
lcall
leave
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
bound
inc
loop
xchg
xor
mov
pushl
pop
jne
lcall
hlt
or
inc
jne
mov
lahf
aam
dec
lods
pop
push
jmp
mov
movsb
xor
dec
inc
sub
mov
lock
dec
jne
lcall
hlt
adc
dec
xchg
and
mov
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
hlt
xor
dec
jne
lcall
xor
dec
jne
lcall
or
ror
and
test
out
jo
pop
std
ret
pop
sbb
or
cmp
jp
lret
in
dec
cld
mov
mull
xchg
and
and
in
mov
sub
jecxz
xchg
xor
lock
stos
mov
and
inc
je
and
test
enter
jmp
mov
call
fs
and
push
cli
inc
fcmovu
pop
inc
negb
push
outsl
sub
ljmp
das
jle
nop
insl
push
push
cmp
aas
outsb
and
pop
and
inc
mov
add
push
sbb
loope
stos
cmp
out
xchg
xchg
dec
adc
mov
jge
dec
sbb
scas
arpl
push
daa
xchg
xchg
or
or
ret
jne
inc
dec
aaa
pop
das
es
orl
push
fwait
sti
cmp
mov
add
push
mov
psrld
sub
fisttps
imul
add
cwtl
out
int
inc
mov
push
stos
int3
jge
test
aaa
loop
or
mov
dec
cltd
cmp
fisttpl
inc
jmp
fldl
cmp
aam
or
jl
call
cltd
sub
out
lods
into
inc
or
stos
mov
mov
mov
aas
inc
cmpsl
lret
dec
outsb
shrb
dec
mov
mov
pusha
lock
inc
stc
inc
int
scas
mov
or
xor
and
pop
sbb
int
aas
cmpsb
shll
pop
or
dec
js
add
and
xor
pop
sbb
jnp
mov
insl
lock
ret
ljmp
adc
or
jbe
jle
or
rorb
jge
mov
mov
xorl
push
mov
ja
fnstsw
aaa
test
popa
mov
jns
dec
nop
xor
and
int3
popf
pop
test
dec
aaa
sub
fsub
mov
fwait
idiv
outsb
ja
mov
xor
test
jno
insl
ja
test
pop
std
cmp
inc
ficomps
shrb
idivl
mov
ljmp
xchg
hlt
in
or
loope
pop
pop
aad
mov
loop
dec
xchg
or
sarl
sahf
ret
push
sbb
iret
ja
lods
cmp
jne
xchg
aad
loopne
gs
jge
test
jmp
xchg
mov
adc
movb
fnstenv
or
inc
aam
lods
jl
flds
std
xchg
outsl
dec
lock
aaa
aam
and
rclb
sbb
fisttps
fidivrl
lret
out
cmp
dec
cwtl
mov
int3
and
adc
outsb
pop
xchg
push
pop
fdivrs
or
jecxz
push
dec
decb
xor
adc
cmp
xchg
ja
mov
shll
bound
into
mov
fldenv
jae
dec
sbb
sbbl
pop
xchg
adc
outsl
dec
xor
ret
cmpl
test
repz
adcl
mov
mov
add
xchg
jle
pop
mov
cmpsb
lods
pop
arpl
arpl
out
push
jmp
sbb
dec
cmp
decb
pop
in
call
imul
into
je
inc
int3
sbb
int
jg
cmp
rorl
add
lcall
and
gs
xchg
loopne
mov
and
cmp
lret
clc
xor
cmpsb
shll
gs
and
jbe
leave
loop
inc
ljmp
and
das
sarl
clc
mov
jnp
inc
jl
rcl
aaa
mov
rcl
jl
mov
jle
mov
fiaddl
inc
inc
fisttpl
mov
js
gs
cmpsl
xor
mov
or
out
jno
pop
mov
int3
enter
jle
and
push
das
lahf
test
mov
pop
pushf
or
sbb
sub
fs
inc
lret
rclb
jns
imul
stc
and
pop
jb
in
in
push
jecxz
test
push
sub
xchg
sahf
adc
jns
pop
xchg
int
mov
std
sub
cmc
sti
ja
push
add
call
add
sbb
imul
inc
and
ljmp
mov
roll
scas
jge
dec
jle
outsb
pop
leave
pop
xchg
sbb
ret
cmc
mov
lds
push
mov
jns
cmp
jp
out
cmp
dec
inc
ficoms
loope
pop
cmpsl
push
xchg
iret
jmp
push
cltd
nop
sbb
mov
dec
nop
add
add
rclb
lods
xchg
add
in
loop
jecxz
repnz
dec
and
rorb
in
mov
add
and
andl
lock
add
mov
fistps
fwait
push
in
xor
mov
and
pop
jl
dec
mulb
inc
outsb
rolb
out
adc
mov
cwtl
arpl
scas
cmpsb
jle
nop
xorb
lret
rorl
inc
hlt
pushf
xchg
ds
sbb
adc
aad
xchg
pop
loop
and
cmp
pop
adc
shll
out
adc
sarl
leave
and
les
aaa
dec
or
pop
ret
pop
add
cmp
out
pop
jp
mov
cmc
push
xchg
add
iret
pop
push
push
xor
xchg
scas
ljmp
xchg
or
cmp
pop
mov
push
cli
data16
call
cmp
dec
xchg
scas
in
sar
bound
inc
adc
aam
push
and
shlb
pop
mov
cmp
dec
les
cmp
xor
xchg
cmp
sub
push
mov
test
test
sbb
and
neg
popf
inc
sbb
cmp
ljmp
jge
sti
testl
add
add
daa
stc
out
fiaddl
add
mov
aam
lcall
outsb
jge
in
xchg
mov
addl
clc
xor
and
test
dec
add
popa
aam
xchg
pop
pop
or
mov
in
ss
jno
cmpl
out
inc
sbb
jp
add
adc
push
jle
enter
mov
fnstsw
push
xorb
or
outsb
pop
enter
add
das
out
dec
pop
or
pushf
sahf
out
movsl
imul
imul
push
adc
lods
pop
dec
mov
es
shrb
lods
xor
mov
jo
dec
out
sbb
adc
xchg
std
insb
dec
test
ljmp
ficomps
out
jl
and
push
popf
xchg
jo
dec
int
push
jmp
mulb
xchg
bswap
inc
jnp
lods
push
gs
imul
mov
mov
mov
adc
into
scas
mov
insl
loop
xor
xchg
insl
push
mov
cli
mov
dec
cmp
jo
roll
mov
xor
jns
push
cmp
in
aam
outsl
dec
xchg
pop
mov
pop
inc
out
and
fildll
or
xor
pop
imul
incb
xor
xor
dec
xor
jp
mov
or
scas
ja
fisubrs
jge
pushf
ljmp
shrb
sub
cli
xor
stc
je
call
mov
inc
xor
push
mov
cmp
add
lea
cwtl
nop
mov
daa
cmp
iret
dec
in
cmpsl
fnsave
xchg
lods
aad
shrl
jb,pn
lret
mov
ret
jecxz
xchg
add
sbb
shll
or
pushf
mov
mov
pop
push
fstl
adc
xor
mov
shll
pop
push
xchg
mov
fisttps
inc
cld
fsubs
cmp
sbb
push
sbb
ljmp
loopne
jo
push
daa
in
xchg
xchg
xor
in
jge
imul
fisttps
aas
xor
mov
pop
adc
aas
es
sbb
out
or
mov
cmc
fisubs
push
jbe
inc
or
sbb
iret
adc
and
mov
lock
pop
aad
inc
jmp
popf
mov
or
lds
aaa
xor
icebp
mov
pop
jecxz
imul
mov
inc
adc
fcompl
jo
push
dec
mov
push
dec
inc
pop
or
and
cld
mov
cmovb
inc
test
nop
mov
jo
sahf
xchg
lods
inc
mov
scas
out
cltd
inc
jnp
xchg
scas
mov
cmp
and
lret
lret
imul
in
imul
mov
cmpsl
into
pop
pop
sub
cmc
or
jno
bound
fcoms
sub
aad
inc
mov
mov
ret
and
cwtl
mov
pop
aam
mov
repnz
lds
xchg
ret
popf
jecxz
pop
mov
das
mov
js
mov
leave
stc
lods
lea
mov
nop
lea
xchg
jl
jae
fwait
xor
movsl
and
pop
imul
out
shrb
cmpsl
cmpsb
mov
arpl
add
lea
sti
fucomi
push
out
ja
mov
or
pop
nop
jecxz
test
mov
test
mov
mov
gs
and
and
int3
sub
in
add
jle
sti
sbb
xor
movsl
lcall
lds
aaa
mov
movsl
leave
mov
push
sti
xor
adc
int3
test
mov
in
adc
fcomps
push
call
in
push
call
jmp
in
icebp
mov
sahf
setb
hlt
pushf
ret
mov
repz
lcall
mov
xchg
xchg
push
or
in
xor
push
in
pusha
xor
ja
aaa
sub
mov
jle
mov
nop
loop
fwait
ljmp
mov
push
jle
popf
test
icebp
cmc
ss
and
jns
mov
or
and
aad
or
and
sbb
mov
and
push
in
insb
inc
and
add
into
sub
pushf
dec
jae
test
add
and
lcall
dec
test
ficoms
cmp
das
cltd
in
sti
sbb
xor
jle
xorb
xchg
fbstp
cli
sub
xor
and
mov
sbb
cmc
jmp
shlb
addr16
enter
test
jle
nop
sub
mov
add
mov
cmp
push
aas
sbb
fwait
adc
lahf
dec
call
iret
mov
outsl
sbb
and
aad
lahf
test
inc
xor
inc
and
rcl
push
or
or
int
push
clc
imul
sahf
das
mov
sahf
add
pusha
test
movsb
sub
and
sub
push
addr16
inc
jno
dec
push
out
cmp
mov
movsb
lret
xchg
mov
push
bound
test
xor
mov
std
loopne
adc
in
sahf
push
mov
leave
mov
jecxz
icebp
daa
shll
push
fdivrs
add
cmp
or
jle
jnp
and
sub
xor
je
lds
and
out
ret
mov
dec
hlt
cmp
js
sahf
push
negb
es
je
iret
and
mov
push
arpl
or
xchg
rclb
daa
mov
mov
or
repz
sbb
leave
jg
lock
cmp
and
inc
out
push
ss
sub
or
push
leave
std
adc
cmp
pop
ret
sti
lahf
mov
loope
rclb
push
mov
testl
insl
rcrl
xor
ljmp
fdivrl
push
xor
insl
dec
pop
das
out
repnz
pop
insb
xchg
insb
out
mov
jecxz
or
pop
xor
mov
daa
sti
pop
fldt
test
push
mov
lret
xlat
out
std
test
cmp
outsl
sbb
lret
sti
sbb
mov
adc
jg
mov
pop
ficompl
inc
enter
sbb
fcmovu
cmp
mov
push
fnsave
and
loope
enter
stc
push
sbb
arpl
iret
addb
cwtl
sti
cmc
es
test
or
insb
inc
xchg
test
fistpl
imul
cmp
lret
push
inc
repz
lret
dec
jnp
inc
incb
imul
cmp
jb
iret
stos
inc
add
in
mov
mov
mov
mov
mov
mov
pop
push
mov
insl
add
jne
out
mov
xchg
shr
or
rcl
dec
xchg
in
movsb
mov
mov
out
aas
mov
jmp
mov
adc
jle
cli
dec
push
xchg
mov
subb
scas
or
into
jp
xor
xchg
mov
pop
mov
into
jnp
lahf
addr16
fwait
and
mov
dec
push
mov
add
add
cmp
mov
mov
jae
push
sti
outsl
xchg
stos
xlat
test
push
jmp
in
xchg
mov
lds
std
jl
xchg
sti
sti
jbe
jne
pop
mov
std
test
ljmp
cwtl
lock
pop
adc
movsb
xlat
je,pt
leave
mov
inc
jne
jno
jge
xchg
push
and
enter
cmp
ss
addr16
add
mov
jae
js
adc
icebp
jmp
inc
inc
sbb
lods
jmp
lods
notb
ja
mov
mov
cwtl
and
sbb
ret
and
fisubs
cmp
int3
outsl
clc
inc
jl
jne
mov
cltd
adc
orl
push
sub
daa
cmp
aad
gs
sbb
ja
shufps
mov
jmp
xchg
ds
scas
mov
je
or
inc
arpl
test
xchg
mov
xchg
pop
shrb
lock
cwtl
fidivrs
popa
adc
and
imul
xor
cmp
mov
and
and
push
cli
popf
in
cmp
enter
iret
mov
pusha
jbe
cmp
mov
jmp
add
inc
mov
and
dec
push
loope
lock
push
mov
lock
adc
mul
pop
mov
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
