push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
inc
pop
xchg
fiaddl
scas
pop
xor
ja
sar
jle
or
filds
mov
stos
ret
rolb
cmpl
movsb
je
hlt
push
add
dec
aas
mov
mov
jbe
pop
adc
push
jl
pop
sbb
jo
int3
jns
jge
jnp
gs
adc
loope
mov
jl
stos
sub
sbbb
insl
in
add
out
push
imul
into
sbb
stos
mov
mov
jnp
fwait
inc
sbb
xchg
mov
cmp
rol
daa
in
sbb
lret
into
mov
and
xchg
or
test
inc
fadds
adc
int
xchg
fsubs
aas
cwtl
shl
fidivs
mov
push
arpl
and
divl
or
cltd
mov
std
xor
or
es
jmp
inc
das
mov
mov
sbb
push
out
les
mov
xchg
sti
je
push
insb
inc
les
dec
lcall
xor
push
pop
push
mov
aad
pop
fwait
push
aam
in
fstpt
mov
mov
in
xor
leavew
sbb
push
inc
inc
jmp
loop
pop
inc
xlat
imul
lds
jnp
add
scas
xor
mov
int
inc
pop
push
pop
fisttpll
stos
push
cmp
push
shrl
call
mov
or
mov
out
jb
lcall
rcll
out
and
nop
inc
push
push
mov
lods
push
adc
nop
aam
push
push
xor
inc
cmpsl
sub
xchg
mov
jmp
xlat
push
mov
sti
mov
out
dec
mov
push
mov
adc
fwait
dec
or
xor
cmp
aas
adc
pop
cwtl
or
mov
mov
sahf
xor
arpl
stos
out
and
inc
int3
imul
jle
mov
loop
ror
inc
pop
shlb
sub
sbb
fildll
dec
mov
cltd
movsb
xlat
adc
mov
pop
imul
call
jns
xchg
jge
sbb
xor
out
add
mov
imul
add
inc
push
test
orl
jo
xchg
cmp
ljmp
enter
rolb
mov
and
dec
mov
inc
xchg
xor
shlb
popf
lods
and
repz
mov
jns
in
ja
in
lds
dec
nop
and
lods
sub
push
lock
dec
enter
inc
push
loope
dec
outsl
in
dec
xlat
mov
sbb
jb
out
mov
push
push
xchg
cltd
cmp
mov
imul
adc
xchg
and
push
sub
mov
or
test
push
jmp
jb
dec
xor
daa
xchg
dec
int3
push
sahf
push
les
int3
mov
fcomip
adc
mov
jb
in
in
and
fisubrs
xchg
test
test
sbb
cmp
aaa
add
push
push
rcrb
sarb
mov
jnp
xor
or
pop
jecxz
cld
pop
push
inc
and
mov
mov
sbb
shrb
or
stc
test
movsl
shrl
sub
out
int3
mov
mov
xchg
cld
addr16
cmp
pop
arpl
test
inc
in
add
stc
lcall
scas
loopne
mov
xor
push
jns
inc
lea
mov
add
fucompp
loope
cmpsl
jmp
loopne
test
stos
mov
push
shll
push
imul
jl
sbb
iret
outsb
fwait
out
and
add
fadd
xor
mov
movl
popf
test
or
push
loop
into
pop
pop
arpl
and
and
lret
repnz
movsl
sbb
aas
mov
inc
rcl
repnz
mov
out
repnz
sbb
mov
sti
mov
es
imul
lods
sub
das
cltd
inc
dec
add
fsubl
andl
shlb
inc
push
ret
stos
or
push
mov
pop
shlb
stc
imul
mov
xchg
lea
dec
xchg
outsl
loope
sbb
aaa
jne
aam
add
stos
inc
fwait
and
test
pop
outsb
loopne
mov
dec
inc
push
cwtl
fs
shlb
mov
nop
cmp
shrb
fisttpll
repnz
out
jbe
inc
sti
xor
sti
cmp
ror
dec
ret
cmc
icebp
insb
cld
or
scas
mov
cmp
imull
jbe
xor
imull
movsb
orl
pop
lods
mov
sbb
jns
call
jecxz
subl
mov
inc
test
push
xlat
out
aas
cmp
fistl
lret
cli
sbb
push
adc
adc
lret
test
fdivs
cltd
sub
cs
pop
pop
daa
into
sbb
jp
je
inc
adc
pusha
movsb
xchg
nop
testb
in
add
fsts
sbbb
xchg
and
xchg
repz
cmp
xor
cmp
fwait
pop
loopne
jbe
fld
popa
jmp
mov
and
out
iret
push
mov
jo
pushf
insl
inc
bound
dec
out
pop
xchg
cmpsl
lods
out
inc
imul
inc
mov
mov
scas
and
mov
dec
jg
mov
sub
mov
sbb
jae
mov
and
fsubrl
push
lods
push
mov
cmpsb
hlt
ja
sbb
mov
movsb
iret
dec
inc
fcmovne
les
mov
ja
lcall
mov
and
xlat
fstl
scas
test
dec
inc
or
dec
testb
ret
mov
push
cmp
add
in
xor
data16
xchg
jnp
cmp
bound
xchg
scas
in
jg
jb
mov
js
repz
push
loop
xchg
jle
jb
fildll
daa
mov
push
inc
sbb
into
cmp
call
ja
add
dec
rep
jnp
negb
rorl
gs
dec
push
ds
loopne
inc
xor
sahf
out
in
pop
lret
aaa
push
pop
inc
stos
aad
int
or
and
inc
inc
dec
xchg
pushf
cltd
push
xchg
out
mov
mov
and
cli
add
push
popa
into
imul
fdivrp
xchg
inc
bound
ja
sbb
lods
sub
cmpsl
xchg
mov
adc
bound
imul
mov
aas
cmp
jg
sbb
xor
popf
cltd
and
xchg
sub
cmp
cmpsl
negb
ja
add
dec
iret
cmovg
inc
daa
pop
sub
test
jmp
push
lret
and
sti
out
push
sahf
scas
nop
bound
dec
pop
sub
enter
cmp
dec
pop
or
jl
je
popf
mov
sbb
call
adc
or
jle
cvttps2pi
add
cmc
push
sbb
lea
mov
pop
add
jns
shlb
sub
jl,pt
dec
ror
in
lret
in
sbb
out
and
dec
lahf
enter
inc
call
xlat
xchg
sub
gs
mov
cmpsl
add
mov
and
add
xchg
arpl
jecxz
shll
gs
mov
leave
hlt
rcl
add
jge
mov
inc
sahf
or
or
lea
pop
imul
popa
sub
push
cli
inc
stc
xor
add
cmp
stos
sub
loop
imul
sahf
dec
and
icebp
mov
shl
push
jo
das
add
cld
imul
dec
leave
das
adc
mov
pop
sbb
iret
jge
enter
frstpm(287
icebp
jecxz
mov
lds
jle
in
leave
jp
mov
in
icebp
mov
push
pop
xor
je
fstl
push
in
fildl
scas
sbb
jge
dec
rep
cmp
jnp
sub
inc
fdiv
xchg
pusha
fnsave
in
sahf
or
in
test
inc
lds
jno
mov
je
jmp
ds
ds
pop
fadds
leave
and
scas
cltd
int
ficompl
cmpsl
or
repz
gs
fs
icebp
data16
insb
inc
in
sbb
iret
pop
lret
mov
mov
pop
shlb
psubsb
ja
in
nop
xor
mov
out
pop
and
sub
adc
sahf
lret
and
mov
xchg
movsb
cltd
mov
fisttpll
shlb
hlt
mov
imul
scas
jo
jge
cmp
std
sub
in
or
pop
outsl
stc
cmp
ljmp
ss
or
aaa
aad
xchg
xor
adcb
fldcw
mov
scas
and
sbb
xchg
call
ljmp
cmpl
mov
ja
inc
push
xchg
int
adc
xor
pop
xor
cmp
dec
xor
mov
insl
cmpsb
fsts
xchg
out
test
sahf
popl
ret
jp
push
mov
lods
in
xlat
or
sub
or
pop
shl
loop
fxam
outsl
mov
adc
in
repnz
cmp
mov
pop
mov
shlb
sub
int
mov
enter
mov
and
sub
cli
or
cmp
roll
jecxz
add
or
cli
movsb
inc
xchg
ret
add
xor
sub
mov
pop
test
mov
pop
dec
inc
push
adc
sahf
ficomps
push
xchg
inc
shlb
adc
mov
lds
mov
sbb
insb
mov
push
shl
xchg
mov
loope
ret
mov
aam
loope
test
cmpsb
pop
inc
mov
jno
fldcw
xor
in
fists
in
mov
inc
std
xchg
shl
push
int
xchg
jbe
je
jle
addr16
shlb
repz
xchg
jbe
mov
jns
sub
xchg
adc
push
xchg
repz
pop
push
lea
pop
pop
pop
out
cmpl
jae
std
or
and
fidivl
sbb
fs
dec
dec
roll
inc
lds
aaa
rcll
pop
mov
popf
scas
ret
rorl
mov
mov
xor
stos
inc
mov
xchg
mov
dec
jle
add
insl
rcrl
stos
or
and
mov
or
mov
pop
mov
or
xor
dec
stos
stc
jnp
xor
push
nop
mov
inc
out
dec
insb
dec
push
xor
lahf
movl
mov
cmpsb
aas
leave
fists
in
stos
int
jne
jbe
inc
stos
mov
mov
aas
sub
add
repz
vmaxpd
mov
punpckhdq
cli
jmp
rorl
ljmp
hlt
lods
push
enter
mov
mov
dec
pop
dec
outsl
mov
push
xchg
sbb
mov
pusha
cmp
pop
lods
movsb
inc
fstl
lcall
dec
mov
testl
sub
mov
call
or
sbb
adcb
and
mov
roll
push
mov
dec
jg
push
shrl
xor
mov
and
xchg
stos
lret
out
clc
mov
cmpsb
mov
aas
faddp
popf
rorb
sar
testl
mov
mov
xor
fildll
popl
lret
mov
loop
ja
cmovge
add
xlat
xor
aaa
cmp
and
aam
bound
stos
dec
cmpsb
sub
in
dec
cmpsb
sub
repnz
ret
xchg
aaa
fstl
jmp
dec
xchg
mov
sti
sub
stos
jmp
stos
mov
push
pop
imul
xchg
mov
imul
mov
pop
nop
push
pop
call
sub
mov
arpl
int3
jp
mov
cmp
arpl
cs
leave
fldcw
rcr
outsl
aam
stos
add
jge
pop
gs
shlb
inc
jno
or
int
std
mov
pop
push
in
pop
outsl
cmp
sbb
aas
imul
mov
bound
hlt
daa
lret
jae
cmpsb
xchg
loope
movsl
loope
aaa
mov
xor
lock
cltd
leave
pop
ret
mov
xor
imul
fisubrl
mov
and
push
loopne
lods
sub
cmp
ds
mov
fucomp
xor
push
ja
add
add
aam
add
dec
int3
bound
fisttpl
cmp
lea
jmp
xchg
xchg
dec
movsb
cmp
xor
in
xor
lret
mov
jns
pop
mov
test
pop
push
popa
pop
shl
pop
mov
pop
aaa
scas
pop
cmp
mov
jae
pushf
loopne
xorl
hlt
xchg
jp
insb
mov
das
aas
cmpsl
lods
int3
mov
hlt
std
jle
pop
iret
pushl
mov
pop
aam
repnz
in
mov
lea
or
shr
cmpl
xchg
mov
stos
add
aaa
sti
cmpsb
repz
mov
push
cmp
ds
lcall
into
mov
dec
arpl
sahf
repnz
xor
dec
test
enter
mov
dec
insl
lea
adc
aad
std
outsb
jbe
in
inc
stos
cmc
push
cmp
push
and
mov
clc
cmc
sub
ja
mov
mov
jecxz
mov
shlb
push
jge
bound
push
dec
dec
cmp
sarb
xchg
dec
jge
jno
ja
pop
sub
in
jmp
gs
ljmp
dec
xchg
pusha
xor
cs
add
and
xchg
push
addr16
and
stos
ficompl
and
mov
xchg
adc
xchg
sub
cmp
leave
cs
and
cltd
mov
jp
lret
dec
in
outsl
pop
cmpsb
ss
cmc
notl
movsb
dec
cmp
cmp
add
dec
push
dec
cmp
jecxz
inc
push
lods
jbe
add
push
or
xor
repnz
and
and
cmp
sub
mov
dec
int
sbb
xor
sbb
test
pop
test
popl
mov
cmpsb
sbb
and
sbb
mov
add
hlt
outsb
ret
and
in
shll
push
add
orl
dec
inc
out
xlat
rol
iret
mov
repz
inc
ret
jbe
insb
and
pop
mov
mov
stos
and
mov
sub
mov
mov
rolb
pop
lahf
push
push
add
ficompl
push
test
ds
pop
and
and
add
mov
mov
mov
push
sbb
and
popf
leave
daa
sub
jns
add
cmp
push
sub
inc
popf
dec
fmul
ror
cs
addb
jg
xor
leave
sbb
mov
cmp
pop
pop
xor
scas
cwtl
push
cmc
pop
xchg
lret
cmp
dec
imul
xor
imul
pop
stos
jp
jno
add
add
lods
int
data16
mov
ret
push
push
mov
pop
xlat
lock
push
imul
cli
ret
movl
cmp
push
adc
push
sbb
into
rol
enter
movsl
sbb
add
adc
enter
and
jecxz
sarl
stos
dec
add
jne
jns
outsb
mov
imul
mov
test
jbe
pop
adc
loop
cmpsb
inc
push
xchg
jnp
adc
mov
inc
inc
mov
sub
xor
cld
push
jg
mov
stos
push
out
or
aaa
cmc
adc
in
push
rorb
lahf
and
int3
pop
cmp
jmp
notb
cmp
mov
pop
push
scas
movsb
push
mov
jns
iret
mov
dec
pushf
cltd
xor
push
push
nop
enter
cmpsl
movsl
mov
loop
push
pop
ja
fmull
pop
aad
mov
bound
cmp
bound
dec
pop
jg,pt
dec
inc
dec
xchg
xor
jecxz
inc
mov
cwtl
cmp
stos
jg
aaa
cmp
mov
int3
es
fisttpll
and
xor
in
or
jg
sahf
rcr
bound
adc
ret
popf
sub
out
in
cmp
push
xchg
mov
popf
xchg
lods
sub
lahf
mov
cli
push
cmp
mov
cmp
mov
sbb
cltd
push
cmp
leave
jae
popf
inc
sbb
in
lret
popa
shlb
sbb
rcll
mov
jb
fmul
orl
mov
test
push
dec
pop
jns
fwait
lds
push
and
and
shll
push
mov
mov
sub
inc
cwtl
dec
adc
pop
stos
flds
mov
stc
dec
jg
fistps
data16
or
out
adc
mulb
mov
sub
out
gs
pop
sub
jb
pusha
fidivrl
mov
std
cmp
xchg
inc
std
cmpl
cmp
push
jnp
insb
data16
mov
mov
dec
lcall
mov
mov
xchg
pop
pop
mov
lods
iret
push
fsubrl
int3
xchg
negb
cmpsb
mov
or
aad
mul
loopne
push
sti
je
inc
int
aad
xor
sub
cli
test
pusha
cmp
hlt
aaa
sahf
sbb
add
pop
fcomps
lods
in
aas
aaa
loop
shl
inc
cwtl
mov
push
loope
out
sahf
repz
repnz
imul
mov
repz
out
adc
mov
stos
sub
push
xchg
and
adc
or
and
mov
mov
repnz
sbb
mov
jge
sub
jl
inc
mov
mov
jae
movsl
mov
xor
loop
loop
sbbl
data16
or
lea
sbbl
repnz
jl
in
imul
ret
mov
jae
test
es
shll
in
mov
xlat
dec
xchg
jg
pop
test
mov
es
pop
int3
xor
in
mov
addb
nop
js
adc
mov
adc
cs
loop
ret
popf
rcrb
nop
shlb
sub
or
andb
fdivs
aad
cltd
pop
mov
add
add
aam
sahf
xchg
sub
lock
sbb
mov
int3
xor
dec
test
leave
mov
xor
hlt
cltd
cwtl
xchg
hlt
fwait
stos
fcoml
mov
mov
push
stos
fmuls
mov
cmpsl
mov
push
shlb
sbbl
inc
filds
cli
icebp
jne
mov
mov
negb
rorl
pop
fucomp
testl
das
lret
mov
loope
mov
dec
cwtl
addr16
sub
xor
into
inc
sub
xchg
sahf
adc
addl
add
stos
sbb
mov
xchg
adc
jb
pop
push
ficomps
arpl
inc
or
mov
mov
dec
popa
incl
clc
cmp
ds
xor
out
dec
in
repnz
inc
mov
dec
fstp
xor
dec
fdivrl
jno
aas
cwtl
icebp
jnp
jmp
push
test
jbe
sub
add
es
dec
inc
dec
out
push
out
insl
mov
lods
out
out
mov
pusha
inc
jns
pop
mov
push
insl
mov
xor
aas
jne
pushf
cmp
jp
pop
dec
loopne
or
lods
add
js
cld
mov
test
scas
mov
push
insb
pop
dec
test
add
push
jns
movsb
ret
rorl
orl
sub
es
cmp
cmpsb
ror
sbb
mov
xor
mov
push
xchg
mov
jmp
mov
insb
inc
movsb
mov
cmp
psubusb
xchg
aaa
pop
add
pop
cmpsl
dec
sub
in
dec
stos
pushf
in
xchg
dec
push
push
xchg
xchg
sub
popa
repz
sahf
xchg
xchg
xor
pop
lods
fsubs
testb
adc
ja
stos
stos
xchg
enter
icebp
insl
pusha
stos
jmp
faddl
inc
jg
stos
iret
inc
sub
lea
int
mov
pop
add
adc
jg
add
outsl
add
add
nop
mov
out
add
xor
and
inc
enter
cmpsb
clc
dec
es
gs
loop
mov
dec
dec
mov
insb
out
fmuls
fwait
stos
xor
test
and
rcl
lret
mov
dec
pop
jne
scas
ret
jp
push
daa
imul
cs
shll
push
adc
pop
and
inc
push
daa
inc
pop
scas
push
or
jbe
mov
and
test
bound
dec
imul
lock
nop
sbb
out
std
or
aas
clc
fwait
jb
pop
xchg
jmp
aas
sub
je
std
cmp
loope
fdivs
mov
lea
pop
call
scas
cmpsl
fwait
lret
mov
repnz
out
negl
jl
or
movhps
inc
adc
mov
dec
or
movsl
push
ja
sbb
sti
mov
adc
lcall
lds
test
pop
inc
mov
cld
cmc
mov
mov
cmp
sub
cltd
dec
popf
orl
pushf
push
xor
jle
xchg
fisttpll
cmp
jle
mov
jns
stos
jo
jb
imul
pop
shrl
dec
cmpsb
call
aam
cmpsb
ret
pop
scas
pop
stos
rolb
ss
jnp
aad
lret
xchg
aam
orl
dec
and
fcompp
dec
mov
cli
cmpsb
cmp
pop
sarb
rolb
mov
mov
push
lret
fisttpl
xor
inc
fcomi
outsb
inc
aas
or
push
cmp
mov
adc
popa
icebp
sub
popa
js
xor
pushf
pop
push
mov
lds
and
daa
adc
jne
mov
aad
jnp
xorb
dec
add
pop
xchg
sbb
cmp
mov
add
mov
mov
inc
subb
mov
and
cld
push
adc
sub
jb
xchg
dec
out
xchg
insl
ret
andb
cmpsl
pop
mov
pop
shlb
sbb
faddl
int
sbb
xor
ret
clc
jb
clc
enter
dec
cmp
dec
sahf
jno
int3
pop
mov
xchg
stos
xchg
ret
imul
inc
push
dec
mov
insb
pushf
out
dec
sarl
xchg
int3
call
mov
cmp
inc
cli
int
cmp
scas
xor
or
sbb
mov
vphadddq
push
jmp
lahf
imul
subb
and
sub
and
test
sbb
mov
out
inc
js
pusha
outsb
lret
mov
push
test
xchg
sbb
xchg
xchg
push
xor
or
adc
std
xchg
sbb
pop
mov
in
loop
into
decb
inc
enter
or
sub
data16
or
mov
filds
cs
mov
sub
icebp
dec
cs
test
int
push
mov
lds
pop
das
mov
shlb
xor
xorl
jg
rclb
dec
pushf
xor
out
sub
sbb
mov
cmp
mov
jns
fdivrs
sahf
repnz
fisubrs
push
clc
aad
je
pushf
adcl
and
outsb
cld
fwait
jle
nop
push
pop
cs
lret
insl
mov
adc
push
fstl
out
bnd
test
hlt
scas
es
rol
popf
cs
xchg
xchg
mov
dec
xor
dec
xor
ret
imul
popl
leave
mov
int3
scas
rcll
pop
rcrl
xor
jne
and
adc
xchg
ror
loop
scas
iret
or
add
in
sub
das
lret
imul
loope
mov
jae
jne
push
mov
jno
ds
mov
rcl
inc
scas
push
push
cmc
outsb
sti
daa
lock
and
ds
push
push
filds
sub
aam
movsl
xlat
pop
mov
arpl
sub
inc
inc
jb
mov
inc
pop
shlb
fdiv
push
adc
shr
daa
xchg
insl
xchg
into
stos
push
add
movsl
in
sahf
in
add
jo
lods
out
jnp
in
sarb
stos
cmp
aas
or
pop
je
inc
out
push
xchg
ret
stos
hlt
je
iret
jecxz
mov
mov
inc
lret
mov
fcomi
ds
cmpl
andl
mov
inc
repnz
sti
cli
mov
iret
xor
jae
pushf
sbb
jae
mov
mov
loope
loop
push
je
fwait
mov
in
xchg
mov
mov
mov
cmp
mov
imul
mov
or
xchg
in
adc
pop
in
loopne
add
lret
cwtl
in
in
loop
xchg
mov
and
mov
repz
cmp
mov
hlt
adc
mov
neg
sub
pop
lods
push
call
mov
rorb
cs
out
testl
xchg
loope
sub
mov
sbb
and
adc
inc
sarl
sti
gs
xchg
cltd
sahf
sbb
imul
inc
adc
push
cli
pop
aas
and
or
mov
scas
xchg
mov
jl
mov
sbb
mov
mov
test
icebp
sti
mov
loop
sub
xor
inc
pop
in
xchg
or
dec
sahf
xchg
arpl
lods
es
movl
push
inc
dec
mov
scas
in
or
adc
mov
sub
xchg
jg
sub
sbb
aas
push
add
jae
hlt
jp
dec
adc
jno
popf
mov
push
outsb
stos
lods
mov
in
xchg
xchg
mov
sbb
and
inc
mov
ror
lcall
fwait
pop
xchg
mov
inc
lock
jb
std
aad
in
jle
out
pop
pop
into
hlt
loop
push
loopne
pop
movsl
fisttps
fsubl
adc
jo
jp
cmp
out
jo
sub
stc
test
cmpsb
nop
and
ss
aaa
cmpsl
sahf
pop
into
mov
roll
jmp
xor
push
cwtl
mov
out
fwait
mov
push
sbb
stos
gs
and
or
push
push
movsb
gs
outsl
cmp
in
out
adcb
push
ss
in
sub
add
cmpsl
stc
xchg
jb
xlat
xlat
pop
mov
cmp
xchg
and
pop
sbb
dec
xchg
das
stos
shrb
mov
fistpll
adc
cs
mov
jle
or
fcompl
mov
add
mov
scas
jp
sub
outsb
cwtl
add
mov
repnz
push
inc
nop
out
dec
cwtl
jb
or
mov
cmp
sbb
mov
xchg
xchg
push
test
into
cmp
ret
fnsave
or
inc
cld
ja
xchg
rcr
cld
inc
fs
inc
icebp
test
stos
sub
fisubl
mov
and
stos
xchg
cwtl
mov
sub
mov
push
sbb
push
pop
mov
add
push
popf
xor
pop
sub
cmc
xor
testl
and
not
cld
xlat
js
and
frstor
scas
and
cmpsl
pop
xchg
imull
test
push
ficoml
cmp
or
xlat
bound
dec
in
adc
dec
pop
xor
sbb
loope
sub
xchg
jge
fisttps
out
sub
cmp
xchg
dec
pusha
mov
lahf
mov
into
sub
sub
xchg
rorl
andl
or
mov
jns
out
pushl
dec
cmpsl
ja
cmc
jge
and
mov
sarb
xchg
movsl
cmp
xlat
icebp
or
movsb
cltd
or
adc
cltd
sub
cmp
mov
addr16
xor
mov
and
rorl
inc
mov
int3
and
dec
pop
mov
aad
enter
int3
jecxz
outsb
xchg
pop
test
cmp
dec
mov
mov
orb
gs
ret
das
imul
push
adc
nop
data16
addr16
sbb
imul
mov
pop
inc
pop
lock
hlt
fstl
andb
mov
movlhps
xchg
push
stos
xor
xchg
sub
inc
push
aad
cld
test
shr
iret
xor
loope
stos
sub
cmp
push
icebp
jge
jp
test
iret
sub
ja
out
push
xchg
ja
mov
jmp
js
adc
dec
xor
mov
or
mov
dec
dec
inc
data16
and
mov
cmovg
xchg
pop
sub
push
fwait
sbb
cmpsb
add
jbe
js
mov
jae
loopne
lock
lcall
inc
lock
std
loope
mov
je
xchg
pop
mov
insb
ljmp
push
out
arpl
inc
cmc
loope
sub
or
mov
js
cmpsb
push
fisubrs
push
testl
stos
sbb
pop
mov
enter
in
imul
pop
push
jmp
adc
test
dec
hlt
std
pmulhuw
lods
mov
das
jle
pop
into
shlw
push
jle
into
jmp
leave
mov
jge
jge
lods
xchg
jo
das
sub
push
pop
in
pop
sub
cmp
in
or
jmp
sub
clc
pop
pop
lret
push
loope
scas
lcall
fidivrl
jmp
jae
sbb
cli
cld
sahf
inc
push
aad
and
dec
mov
jb
cmp
and
push
push
and
fildl
add
push
add
jl
scas
sbb
outsb
lods
popa
adc
popf
jnp
mov
aad
cmpsl
mov
pop
mov
test
jmp
dec
sarl
push
push
rorl
pushf
sub
and
pop
js
xor
push
push
sbb
rclb
in
and
insl
mov
jge
popa
sti
mov
popf
or
pop
add
push
int3
jns
mov
daa
xchg
ficoms
push
dec
testb
dec
and
inc
cmp
shlb
cmpsl
mov
call
xchg
popf
xchg
in
mov
fsubr
in
cmpsl
mov
mov
dec
jge
lods
push
out
scas
in
inc
addr16
andl
cmp
mov
fwait
out
test
add
lcall
xor
xchg
jecxz
inc
lock
lahf
stc
jno
nop
sbb
fwait
sbb
dec
lahf
or
mov
adc
or
or
mov
dec
iret
aas
in
jne
in
lahf
xlat
inc
push
popf
xchg
jl
mov
mov
mov
push
mov
in
or
mov
and
shrb
test
pop
adc
mov
hlt
xchg
push
adc
dec
jns
sbb
and
push
mov
test
in
stos
das
popa
and
mov
add
adc
xchg
inc
mov
pop
mov
outsl
mov
cltd
lret
cmp
aas
fcmovnb
outsl
xor
or
xor
sub
inc
and
mov
mov
lcall
push
mov
imul
push
fdivrp
xor
fists
mov
insl
inc
in
mov
push
insl
dec
sbb
push
ja
pop
pushf
and
cmpsb
js
fildll
stos
fidivrs
cmp
rcll
repnz
test
or
jno
imul
das
jg
pop
push
mov
pop
push
mov
pop
outsb
xorb
shrb
push
lret
cmp
sub
pushf
jp
cmc
add
pusha
cmpsl
mov
fidivl
cmp
jmp
jmp
repz
outsb
fcmovbe
lea
xchg
push
inc
in
ja
push
in
movsb
imul
ret
mov
xchg
jmp
jo
scas
arpl
test
mov
lret
xor
cwtl
out
rcll
xchg
in
push
insb
enter
adc
xchg
andl
mov
aad
js
jge
filds
cmp
or
popa
lahf
lock
shl
loope
lahf
jecxz
in
test
negb
std
ficoms
ss
xchg
adc
in
out
cmp
ss
add
dec
sub
and
inc
xchg
sub
add
daa
jg
ja
leave
repnz
or
cmp
int3
jge
push
pop
repnz
jnp
ret
dec
mov
xor
and
adc
mov
pop
jne
lret
jp
ja
sbb
mov
mov
mov
cmp
inc
xchg
xlat
sub
and
lods
or
xchg
mov
dec
pop
arpl
stos
fs
push
pop
rorb
sarl
or
or
insb
cmp
pop
mov
gs
adc
es
sub
inc
or
andps
aas
mov
xor
daa
insl
mov
sub
stos
add
dec
xlat
and
imul
xchg
mov
mov
mov
and
mov
lcall
mov
sbb
ficompl
sbb
push
push
iret
or
xchg
adc
in
dec
stos
push
adc
jne
inc
addr16
and
xorl
or
or
sti
js
dec
mov
addr16
xor
mov
xor
pop
or
and
and
ret
mov
inc
mov
jg
mov
mov
mov
les
push
xchg
add
mov
or
in
mov
sbb
ja
imul
sbb
fidivl
outsb
sti
sbb
daa
out
or
ret
in
repnz
push
cmpsl
test
ret
rep
push
aaa
stc
in
in
imul
xchg
int3
aas
jae
add
adcb
sub
xchg
arpl
bound
pop
stos
scas
pop
fidivl
loope
inc
jae
or
cmp
repnz
sub
fwait
ljmp
inc
inc
fadds
add
jnp
loope
mov
loopne
or
xchg
icebp
or
cmp
or
mov
pop
daa
cmc
flds
xchg
xchg
jge
mov
lds
test
jg
sbb
adc
mov
xorb
je
icebp
xchg
cwtl
out
xor
int3
xchg
cmp
lds
int3
mov
jb
inc
fs
cmp
mov
jmp
lret
hlt
fidivrs
or
xchg
fsubs
and
cli
add
mov
cs
inc
push
pop
mov
sub
cmpsl
sbbl
je
fldt
push
in
imul
imul
arpl
add
dec
out
repnz
xor
mov
adc
or
lods
pop
stc
sub
cli
pop
or
dec
iret
pusha
popf
fwait
mov
sub
jmp
sbb
cli
mov
jle
fdivr
insb
cmp
outsb
and
xchg
jl
pusha
out
mov
test
pop
cmpsl
orl
xchg
sbbl
mov
mov
mov
adc
add
addl
sub
andb
test
mov
dec
cltd
xor
pushf
pusha
lds
mov
sub
dec
sub
ds
xchg
mov
adc
and
xlat
mov
lea
jno
ja
out
inc
lds
cs
mov
mov
lret
xchg
sti
inc
lret
push
and
cld
mov
cmp
dec
pop
rcl
shl
inc
repz
stos
mov
xchg
fs
into
xchg
mov
fisubl
inc
mov
jnp
inc
push
mov
loopne
fimuls
in
jle
aas
push
sbb
xor
ds
call
mov
mov
jnp
jl
and
cmp
stc
lahf
les
xor
xchg
gs
hlt
lahf
sub
sbb
mov
sbb
mov
das
mov
or
sub
or
or
out
mov
loopne
gs
or
adc
xchg
mov
icebp
scas
xchg
inc
arpl
sub
sarl
push
mov
mov
mov
mov
mov
out
inc
stos
lds
push
mov
mov
jecxz
adc
jle
adc
fs
test
pusha
inc
dec
aad
xchg
adc
jl
dec
dec
nopl
das
sbb
or
mov
andl
dec
test
pop
jno
stos
adc
pushf
imul
aas
out
pop
xchg
cli
or
or
xor
in
enter
dec
sbb
fcomi
cmpsb
inc
xor
cmp
dec
mov
dec
mov
imul
or
jae
loope
dec
sbb
add
neg
out
out
cmp
movsb
fisubs
rcrb
sbb
xchg
push
out
rcrb
aam
xor
adcl
add
iret
sarl
popf
leave
xor
jle
test
xor
sub
sub
scas
jecxz
pop
mov
dec
add
xor
outsl
int
pop
lods
add
sbb
mov
and
xchg
mov
adc
push
popf
push
push
out
xchg
xor
xchg
ret
or
pushl
inc
pop
sahf
stos
push
cmp
push
sbb
xchg
jb
cmp
push
xchg
leave
pop
jno
xchg
data16
std
insb
pop
sahf
test
and
mov
xchg
leave
data16
xchg
cmp
and
clc
jg
mov
int3
push
pusha
add
call
sub
addr16
lock
lahf
mov
push
xor
pushf
pop
lock
sbb
repz
mov
pop
fwait
stos
ror
sbb
js
xchg
or
ja
push
shrl
dec
xchg
call
mov
stos
mov
test
pop
or
leave
sbb
adc
mov
jne
dec
xchg
shl
nop
call
jg
iret
xor
mov
inc
cltd
jae
fiadds
out
pop
and
stos
and
cld
push
imul
jo
fdivrl
scas
xlat
dec
jmp
fldenv
loopne
je
ffree
mov
hlt
sbb
mov
xor
or
xchg
imul
insl
jmp
das
in
xchg
mov
sbb
or
pop
cmp
sti
ret
in
sbb
lods
push
icebp
xor
into
sahf
cwtl
pop
adc
fisubl
in
lods
in
xlat
push
and
jge
inc
ljmp
lahf
jb
std
in
pop
inc
sar
and
push
xchg
or
or
out
dec
pop
int3
xchg
jmp
xor
mov
lahf
addb
imul
push
ds
stos
xor
mov
gs
xor
daa
fldt
and
insl
rcrl
lret
pop
push
cmc
push
push
sbb
lea
pop
hlt
xchg
jns
imul
pop
cli
ds
std
cmpsb
jg
inc
fsin
and
incl
mov
xor
or
data16
arpl
or
setno
push
insb
repz
sub
pop
lcall
mov
aaa
and
xchg
pop
int3
js
jb
mov
mov
xor
and
out
roll
mov
xchg
mov
in
mov
sub
pop
iret
rcr
xlat
mov
jnp
es
mov
cmp
cmc
mov
xorl
fsubs
lods
insl
fisubl
sbb
pop
sub
cmp
leave
ljmp
push
add
repnz
fs
ja
cld
xchg
cmp
rolb
hlt
outsl
fbstp
leave
cmp
mov
mov
scas
cmp
mov
sbb
fisttpll
dec
jge
xchg
mov
jnp
xchg
add
mov
or
jmp
int3
mov
mov
add
mov
jae
jnp
jne
ret
rorb
or
pop
sbb
jbe
mov
stos
inc
cwtl
rclb
daa
cmp
mov
cli
xchg
outsl
or
mov
mov
cmp
dec
cwtl
icebp
mov
pop
sbb
test
ja
ds
std
and
mov
dec
mov
lea
sbb
jecxz
mov
and
lea
jns
adc
fstps
aam
out
pop
xchg
lock
push
inc
gs
imul
mov
inc
aas
sbb
rep
outsl
sbb
ljmp
out
in
adc
leave
mov
adc
in
push
and
scas
jne
in
rorb
add
shll
mov
mov
sbbl
dec
mov
mov
andb
xlat
fwait
sub
adc
xlat
inc
adc
movsl
les
fcoml
scas
mov
mov
stos
insb
inc
cwtl
and
dec
enter
sarl
or
xchg
stos
fdivrs
and
or
aas
add
lret
out
cwtl
roll
sub
shll
push
fnstenv
mov
adc
mov
xchg
rcl
outsl
lock
popa
test
jp
mov
xchg
mov
push
pusha
out
ds
adc
sbb
cmp
jmp
pop
mov
faddl
pop
inc
lret
jne
popa
sbb
cli
repnz
mov
and
cwtl
cmp
fcomps
ds
incb
and
cmp
and
push
pushf
outsb
jb
outsl
mov
push
outsl
insb
push
daa
xchg
sti
or
lds
mov
xor
insl
adc
xchg
pop
out
jbe
and
cli
mov
jbe
addr16
push
or
ret
or
ja
call
into
add
rolb
pop
xor
pop
push
pop
hlt
jbe
mov
mov
cmc
mov
je
in
pop
dec
jne
fnstenv
or
push
jle
mov
mov
cmpsl
sub
ud1
jns
mov
adcb
pop
lea
dec
pop
daa
xchg
xchg
call
int3
cmp
sub
in
jo
imul
fstpt
xchg
dec
dec
or
and
mov
aas
cmp
mov
cmp
jae
mov
pop
xor
sbb
or
movb
out
std
fstpl
jbe
cs
add
mov
loope
push
call
fstps
push
mov
add
cwtl
lock
popl
sub
xchg
push
inc
inc
sub
enter
push
scas
nop
mov
adcl
mov
cmp
in
jbe
outsb
sub
jae
les
xchg
xor
das
sahf
pop
shl
daa
and
push
loope
insl
lcall
loope
dec
jp
pop
cmovae
mov
lret
cmp
push
push
pop
add
rclb
fildl
inc
xor
fcoms
push
cmp
fwait
xlat
imul
inc
mov
adc
adc
movsb
cmp
rcl
pop
mov
insl
pop
pop
rcrl
dec
mov
popf
dec
sahf
mov
xchg
mov
icebp
pushl
stos
xchg
pop
cmp
aas
pop
call
insl
filds
and
test
out
add
mov
nop
mov
cmc
mov
xchg
jp
pop
lods
dec
xlat
and
xor
cltd
mov
xchg
into
mov
inc
and
sbb
clc
ret
and
insl
sbb
mov
out
addr16
sti
mov
add
sub
icebp
xor
xchg
rcll
jp
int
dec
test
pusha
jecxz
adc
push
sbb
mov
xchg
and
add
add
adc
sbb
adc
stos
jne
out
xchg
dec
or
jge
sbb
adc
jg
rorl
cwtl
outsl
dec
stos
aaa
imul
mov
enter
sbb
push
aas
fists
scas
outsb
daa
mov
popa
lods
xchg
mov
mov
pushf
jnp
sbb
scas
and
push
xor
imul
mov
xchg
mov
repnz
ret
ljmp
xchg
ja
jl
data16
lcall
data16
js
inc
and
hlt
dec
das
jbe
aaa
rcrb
pop
pop
repz
enter
call
int
insl
cltd
popf
mov
and
ret
add
icebp
clc
aaa
arpl
or
icebp
jo
adc
cmp
sub
xchg
lret
cmp
adc
adc
adc
int
mov
clc
xchg
test
leave
xor
jl
add
addr16
rol
mov
aad
sub
nop
xchg
cmpsb
aaa
xchg
stos
ss
mov
xlat
sbb
int
lret
or
adc
jns
outsb
dec
ret
cmp
fmuls
push
mov
cmp
es
pop
or
sbb
test
add
inc
or
mov
js
cmc
pop
mov
ret
clc
xchg
fidivl
xchg
pop
push
dec
cmpsl
jmp
dec
xchg
mov
aas
sti
and
adc
and
mov
cli
pop
pop
out
mov
ds
out
pusha
icebp
dec
xchg
rclb
add
popa
mov
mov
mov
mov
mov
sub
or
fmull
decl
xchg
pop
pop
mov
int
adc
call
jge
mov
and
test
mov
fadd
xchg
mov
pop
pop
aad
adc
inc
lret
cmp
repz
aam
cmp
jae
ja
in
clc
out
loope
out
movsb
sarb
aas
leave
stos
add
cld
insb
push
lods
sbb
cmp
sub
in
pop
out
adc
sub
or
lret
sub
pop
mov
or
cwtl
cmp
sbb
pushf
adc
test
sub
cwtl
push
jae
inc
sar
fsubrs
shrl
testb
leave
pop
imull
loope
mov
cmp
stc
sahf
inc
lods
pusha
call
loopne
and
adc
sarl
and
stos
mov
add
in
jne
pop
mov
push
cmp
test
mov
lock
mov
mov
cmc
sub
fisttpl
out
addr16
add
push
add
imul
jg
fbstp
xlat
inc
xchg
dec
addl
ss
or
adc
add
dec
mov
jo
and
cltd
xor
out
sub
inc
stos
test
sub
loop
jns
sub
clc
push
push
inc
loopne
push
lods
js
xor
dec
jmp
adc
leave
frstor
cmp
scas
clc
loopne
js
leave
in
pushf
cli
and
enter
cmp
iret
dec
fcoml
sub
jg
scas
shll
lret
mov
pushf
dec
jge
ret
inc
imul
mov
decb
sahf
and
push
or
jb
dec
outsb
out
popf
mov
in
movsb
fs
clc
lahf
and
jbe
loope
inc
xchg
addr16
cli
enter
imul
add
stos
std
outsl
inc
xor
mov
xchg
xlat
sbb
jae
mov
mov
addr16
dec
cltd
sti
les
or
push
dec
lock
stc
xchg
mov
push
cmp
sbb
clc
ja
fsts
push
les
inc
xchg
lahf
jae
pop
push
lahf
outsl
rorb
int
xchg
push
or
iret
pop
idivb
xor
add
cmp
mov
insl
out
add
int3
gs
sbb
out
outsl
in
in
andb
and
inc
pushf
xlat
push
mov
repz
push
adcl
bound
imul
fisttpll
or
or
mov
and
dec
das
mov
dec
dec
loopne
cmp
ror
js
xlat
adc
adc
mov
pushf
xchg
push
lret
xchg
push
jmp
aaa
mov
push
adc
imul
push
dec
mov
or
xchg
sub
loop
jge
inc
lea
das
jo
sbb
out
rcll
or
repnz
data16
insb
jae
xor
scas
xchg
inc
push
cmpsb
adc
cld
rcrb
vmovaps
inc
ja
push
cmp
mov
cmp
es
clc
lcall
nop
lret
test
jmp
inc
out
in
jne
push
stos
pop
cltd
fistpl
push
leave
arpl
cli
fidivrs
add
xchg
and
add
dec
push
lods
ss
xor
add
addr16
or
push
ja
mov
jo
mov
inc
nop
xchg
xsaveopt
cmp
sbb
xor
aam
mov
or
jecxz
mov
mov
adc
pop
adc
sbb
imul
out
call
push
lods
add
in
sub
mov
cmp
test
jle
movsb
sbb
aad
mov
clc
sub
out
aad
outsb
jbe
inc
stc
sub
or
sti
dec
mov
popa
inc
jl
sub
sub
sub
sbb
les
imul
cmp
xchg
int3
pop
fstpt
mov
je
xor
inc
or
loop
cmp
daa
mul
leave
aad
mov
stc
cmp
xchg
sbb
lgdtl
cvtps2pi
aaa
sbb
mov
in
mov
sbb
adc
mov
mov
adc
adc
push
hlt
ficoml
fimuls
mov
push
lods
push
cwtl
sub
aad
inc
inc
sub
adc
int
mov
mov
pop
aad
xchg
mov
in
add
lds
push
jp
out
dec
jecxz
sbbb
push
jbe
mov
movsl
mov
mov
push
addr16
mov
pop
in
rcrb
push
jg
dec
in
or
icebp
push
xlat
pop
sbb
xchg
and
and
je
loopne
test
in
cmpsb
pop
dec
mov
movsl
add
stos
stc
xor
in
mov
test
xor
xchg
call
out
mov
inc
enter
pusha
xor
cwtl
dec
pop
dec
imul
push
movsb
dec
mov
ret
push
or
jne
lods
lock
mov
jo
fisttpl
and
add
pop
jb
les
mov
dec
outsb
roll
sete
outsl
push
mov
jp
mov
cmc
jp
loop
dec
je
icebp
test
and
add
mov
mov
mov
ret
pop
inc
push
xor
mov
ss
repnz
test
stc
pop
mov
cmpsb
mov
mov
mov
je
adc
push
pop
cmpsl
andb
add
cmpb
and
rcrl
out
pushf
gs
mov
mov
jno
inc
adc
shll
pop
or
enter
ss
adc
jae
adcb
nop
add
xchg
cmp
mov
enter
inc
or
dec
and
pop
cmp
sbb
mov
comiss
shll
cmp
push
out
jno
fstpt
stos
cmp
dec
inc
fildl
lock
pushf
mov
cli
xlat
mov
and
fcomps
imul
lods
mov
movsb
push
or
and
cmpsb
push
sti
push
in
push
movlps
mov
out
fstp
js
rcr
adc
out
push
push
inc
push
loopne
jge
loopne
xorl
out
mov
inc
xchg
pop
xchg
jnp
pop
das
mov
fimuls
loope
push
idivb
or
jecxz
das
mov
xchg
mov
daa
das
lret
jbe
test
pop
cld
sbb
pushf
mov
push
ret
dec
inc
sti
movsb
inc
dec
gs
mov
movsl
addl
fs
mov
sarb
mov
xor
mov
fistps
lods
hlt
outsb
add
mov
xchg
ret
push
les
lds
jns
imul
enter
lret
imul
xchg
dec
jae
mov
mov
or
icebp
lcall
mov
add
fistps
jnp
cld
pusha
mov
movb
rorb
add
cmpsb
mov
ret
fisttpl
mov
adc
push
stc
icebp
sarb
andb
adc
xor
push
push
mov
push
pop
bound
movsb
jo
sub
sarl
cli
xchg
stc
or
xchg
aam
test
out
loopne
mov
enter
sub
sbb
mov
mov
mov
mov
pop
arpl
insl
loopne
mov
xchg
fsubrl
push
loop
dec
lcall
cmp
aam
cwtl
scas
rcrb
sub
sahf
jmp
add
push
lahf
shll
enter
mov
lock
sbb
jb
dec
stc
out
lret
mov
add
mov
xor
push
cmp
ds
cmpsl
es
adc
mov
outsb
leave
xchg
cmp
popa
lods
stos
adc
leave
lret
pop
pop
iret
int3
test
aad
xlat
pop
inc
stc
lods
jb
fidivs
xor
dec
xor
imul
xor
mov
fs
jo
faddl
mov
inc
lock
pop
mov
enter
loop
out
dec
enter
dec
mov
lods
stos
xchg
xor
ss
mov
movsb
repz
cs
jo
jecxz
xchg
pop
mov
test
jg
mov
xor
clc
inc
mov
jecxz
jns
mov
subb
mov
mov
enter
xor
mov
sub
shrb
sbb
sub
mov
jnp
lret
mov
adc
dec
stos
mov
sbb
bnd
mov
ja
es
aam
imul
js
and
out
lcall
lds
jg
push
int
sub
push
dec
aas
mov
cs
ds
in
fisubrl
lcall
repz
adc
xchg
gs
dec
sbb
xor
test
adc
push
jo
mov
arpl
push
stos
cltd
lods
shl
mov
aam
xchg
leave
xchg
mov
into
push
mov
push
push
cmp
hlt
push
push
jmp
push
push
cmp
movsl
xchg
or
mov
popa
pop
ret
stos
push
cmp
and
ds
ljmp
test
cld
pop
mov
sub
test
rorl
orb
mov
loopne
loopne
inc
pop
stos
int3
test
shrl
mov
and
mov
stc
jle
mov
iret
mov
inc
cmp
dec
repnz
dec
jae
mov
sar
mov
xor
or
sbb
xchg
pop
push
fnstsw
and
push
xor
sarl
das
or
into
dec
sbb
xlat
rolb
cmp
adc
pop
inc
rcl
xchg
loopne
xchg
jne
jnp
movl
xchg
add
outsb
adc
cli
inc
sub
stc
inc
addr16
loopne
jo
stos
hlt
test
jecxz
in
ja
add
push
stos
jmp
push
je
fsubl
popf
ljmp
push
mov
push
stos
ret
pop
adc
mov
std
loopne,pt
cmp
jo
ss
push
out
dec
ret
call
push
int
and
dec
jbe
leave
pop
sub
inc
cmpsl
scas
scas
xchg
into
pusha
adc
cwtl
mov
fwait
jb
movsb
inc
out
rcrb
cmp
bound
pop
xchg
cmpsl
xor
xchg
in
jmp
jne
push
lods
cmpsl
aas
pop
in
jp
and
xchg
xor
sub
loopne
in
loop
insl
arpl
adc
push
cmc
das
sub
xchg
cmc
mov
jle
pusha
push
scas
cmp
push
test
int
adc
lods
mov
fs
pop
cmpsb
fmull
push
fistl
jp
icebp
mov
adc
repz
js,pn
bound
movsb
lock
js
fisubrl
jns
jbe
js
loope
iret
mov
popa
push
and
mov
ljmp
mov
int3
jge
mov
pop
dec
lret
scas
push
movsl
test
shll
lea
mov
xor
jle
and
cmp
faddp
hlt
pop
and
adc
mov
aas
lods
mov
push
testl
cmc
jmp
pop
inc
test
out
mov
test
xchg
popf
out
inc
lret
mov
shll
mov
pop
dec
addb
out
inc
outsb
xchg
cltd
mov
call
lock
rcr
xchg
pop
and
jp
out
add
sbb
adc
mov
icebp
repnz
sar
imul
outsb
into
int
bound
xorb
popa
add
lods
cli
mov
les
jo
push
shr
mov
out
pop
and
int
out
rclb
and
dec
ret
stos
mov
in
imul
pop
jp
push
frstor
ljmp
aaa
imulb
lcall
mov
insl
or
cld
mov
pop
ljmp
test
test
pop
sbb
cmp
and
sti
rorl
xchg
out
inc
jle
inc
pop
icebp
adc
inc
repnz
xor
movsl
ret
cwtl
out
mov
adc
adc
int
lods
jne
sub
aaa
arpl
jge
divl
loopne
sbb
lods
jae
sub
cmp
jbe
popa
add
test
outsb
or
pop
dec
fdivrs
int
fmuls
repnz
dec
add
loope
cmpb
lds
mov
mov
iret
or
repz
jmp
stos
adc
cmpsb
xchg
pop
mov
sbb
loop
out
lods
xchg
jge
popl
xchg
repz
scas
pop
mov
and
sub
notb
pop
jne
push
stc
mov
adc
notl
shll
cmp
push
lcall
xchg
addb
cmc
sub
daa
jns
in
adc
sub
pop
je
lods
mov
inc
jge
xor
mov
scas
jge
xchg
push
in
mov
jle
iret
fwait
and
mov
in
mov
inc
dec
push
sbb
mov
sub
jbe
call
in
pusha
dec
fmul
cmp
and
adcb
scas
mov
arpl
testl
xchg
add
repz
clc
mov
mov
sbb
lea
xlat
and
movsb
sbb
xor
dec
and
xchg
rcll
cmp
cmp
adc
leave
xor
dec
push
push
outsl
aaa
int
cmp
cmp
inc
jns
jbe
daa
in
fisubrs
and
mov
adc
daa
or
cmp
pop
cmc
dec
or
out
icebp
fadds
push
fsub
gs
sub
mov
jae
lcall
popa
pop
and
dec
pop
stc
int3
adc
int3
push
add
add
and
xchg
outsl
mov
cmpsb
sbb
pop
gs
dec
data16
push
repnz
arpl
inc
aaa
jo
mov
inc
test
js
lods
sbb
sub
in
sti
push
pop
popa
in
stc
adc
ret
js
ret
dec
fwait
mov
cltd
int3
or
pushf
jle
inc
sbb
mov
mov
cltd
mov
dec
cmp
cmp
cmp
cld
and
frstor
out
push
add
adc
pop
int3
push
loop
jecxz
or
imul
sub
push
pop
std
ds
push
icebp
xlat
popa
inc
or
shlb
add
mov
add
mov
test
mov
aas
decb
or
jl
fsubrs
jb
int
sar
mov
mov
add
lcall
pop
in
mov
or
in
sbb
ficomps
xchg
mov
aas
idiv
ret
aad
pop
std
xchg
sub
and
and
jge
push
aas
shrb
jo
sbbb
js
adc
mov
jne
call
pop
ljmp
repz
pusha
divl
jnp
imul
imul
movsl
xor
inc
loopne
dec
lcall
inc
inc
jecxz
lret
lret
in
scas
in
fadd
insl
inc
xchg
add
xchg
lods
insl
adc
in
mov
push
dec
dec
push
popf
nop
pop
fimull
mov
adc
cmp
cli
push
xor
push
loopnew
pop
sahf
dec
fwait
lock
out
inc
push
push
dec
loopne
pinsrw
js
mov
into
sub
sbb
leave
mov
xchg
sub
pusha
pop
ret
jmp
inc
xchg
movsb
gs
mov
jl
lcall
fisubs
sub
sub
dec
mov
shrb
mov
jo
inc
cltd
out
xchg
std
push
pop
inc
loope
xchg
aaa
repz
add
ljmp
loop
push
iret
rcpps
jmp
cli
pop
adc
std
popa
mov
sbb
xchg
je
cmp
mov
out
loopne
sub
push
scas
fstps
push
push
loope
add
sti
in
sub
scas
call
mull
adc
lock
shl
pop
push
fsqrt
cmp
cmp
jmp
loopne
xlat
push
dec
push
push
mov
nop
push
push
in
test
jecxz
mov
jp
addr16
sub
jo
push
outsb
sbb
into
mov
xchg
push
int3
cmpsl
enter
pushf
fucomi
xchg
mov
and
jl,pn
mov
inc
push
rolb
or
add
out
insl
ljmp
lods
and
push
stos
sahf
lahf
mov
test
mov
in
repz
stos
addr16
cmp
icebp
mov
loop
xor
inc
test
cmpl
fnstcw
mov
xor
loopne
inc
fwait
mov
decl
add
fmul
sbb
insb
ljmp
xchg
test
push
inc
lcall
rorb
stc
sbb
mov
sbb
imulb
push
adc
pop
dec
fwait
jnp
sbb
aam
out
lods
inc
xchg
inc
movsl
xor
jmp
out
outsb
fwait
push
lret
mov
aam
sbb
mov
and
sarb
lret
arpl
lret
sbb
lods
leave
out
stos
out
and
mov
jo
inc
sti
xor
or
pop
imul
cmpsl
addr16
ljmp
mov
and
je
lea
sub
pop
mov
add
xor
adc
mov
and
insl
out
pop
mov
insb
shlb
mov
jmp
mov
bound
dec
xchg
sub
rcl
mov
cld
mov
mov
cmp
int3
out
mov
ret
xchg
cs
jmp
enter
dec
bound
xchg
jmp
mov
dec
pop
jbe
fsubl
sti
or
cltd
fwait
aas
inc
cmpsl
shlb
jmp
adc
mov
call
push
sbb
mov
and
aad
lret
leave
mov
jle
xchg
xor
loopne
rcrl
cmp
hlt
fsub
jle
ljmp
adc
lret
cmc
jno
jecxz
addr16
popf
scas
xor
lcall
mov
imul
push
add
imul
mov
std
movsb
push
sbb
scas
pop
rcl
out
mov
sbb
push
es
cmp
stos
ret
push
fisubl
clc
mov
test
xor
fcomp
in
fimull
inc
add
outsl
ret
push
mov
ja
xor
sbb
sahf
xor
sti
or
fcomps
mov
fistl
repz
sbb
inc
mov
jge
pop
inc
lahf
fildll
push
cwtl
mov
mov
outsb
sbb
fs
js
addl
in
jnp
add
cmp
mov
and
lods
cs
mov
pop
or
fnsave
and
insb
stos
das
or
sbb
aaa
and
cmp
es
pop
xchg
mov
dec
movsb
sub
or
lods
fprem1
into
mov
xlat
jnp
jnp
push
push
adc
jg
xchg
imull
lods
pushf
mov
inc
mov
sub
cmp
aad
sbb
sub
aas
movsb
in
xchg
pop
xchg
test
push
fnstsw
sub
pushf
push
inc
mov
pop
dec
in
fisubrl
repnz
xchg
arpl
shl
mov
sti
xchg
sub
mov
mov
int
aas
mov
mov
jae
imulb
or
mov
pop
test
mov
jo
and
sbb
mov
adc
push
into
mov
movsl
xchg
dec
sbb
lock
stos
xchg
js
cli
lret
xchg
xor
push
je
outsb
xchg
cmp
jne
add
jb
sahf
adc
pop
mov
mov
add
test
fmuls
orb
mov
jge
xlat
xchg
lods
sti
and
push
inc
sbb
in
fisubs
mov
mov
shll
addr16
test
enter
sbb
adc
sub
cmc
jbe
add
iret
cmp
xor
xchg
xor
icebp
and
nop
stos
pop
subb
push
jle,pn
lahf
aaa
adc
pop
sub
das
adc
sub
imul
stc
rcrl
mov
sahf
mov
cmp
shlb
push
inc
aam
out
bound
lods
inc
xchg
cmp
and
xor
or
push
test
out
pop
mov
mov
lods
movsb
pop
test
dec
out
dec
xor
fisubl
bound
and
icebp
test
xchg
fldt
sub
add
bound
xchg
test
push
mov
sub
incl
jle
dec
in
xchg
sbb
pushf
cltd
mov
jns
idivb
fisttpl
pop
subl
sub
aaa
inc
jg
scas
pop
fstp
mov
mov
mov
lods
push
sub
notb
dec
mov
pop
cld
repnz
pop
gs
xor
adc
scas
add
or
and
sub
dec
setns
xor
mov
in
inc
cmp
push
dec
js
test
adc
jge
xor
cmp
sub
aam
cwtl
xor
fs
cmovs
or
cmpsl
daa
out
ret
movsb
xor
movsl
gs
pop
movsl
xlat
loope
jae
jle
mov
sub
inc
jmp
outsb
sub
repz
cld
xchg
xchg
and
outsl
rol
int3
adc
ret
push
roll
shlb
mov
pusha
aad
xor
subb
push
andl
add
adc
xor
enter
test
outsl
fwait
pop
test
mov
mov
lret
bound
mov
pop
cli
push
lret
loopw
jg
push
inc
movsb
rcl
push
xchg
jb
and
or
adc
xor
int
call
pop
inc
xlat
adc
sbb
fwait
dec
mov
pop
inc
adc
jb
xchg
dec
lahf
bound
jnp
hlt
xchg
pop
pop
jmp
int3
xlat
xorb
push
cld
jge
ret
xor
out
ss
xor
cld
mov
pop
std
pop
call
or
mov
and
rolb
ret
mov
outsl
fwait
push
add
cmp
inc
mov
in
sub
ret
or
into
clc
lods
lret
shrb
lds
and
lock
jno
sbb
dec
hlt
insl
ss
inc
cmp
dec
mov
arpl
daa
sbb
or
scas
data16
cmpsl
or
outsl
insb
in
shrl
cld
mov
sbb
lock
shrl
jno
pop
jmp
cs
xchg
out
arpl
loop
int
ljmp
push
cmpsb
aad
jmp
mov
mov
sub
push
sub
fsubrl
dec
sub
in
outsb
inc
dec
jns
lea
insb
jne
ret
lret
push
xor
dec
jle
fsubrs
or
add
js
sbb
mov
sub
adc
and
imul
test
inc
mov
stos
and
cwtl
pop
jmp
dec
ljmp
cmp
cmp
and
pop
dec
test
hlt
mov
mov
ficompl
imul
andl
mov
mov
loopne
inc
lret
dec
add
push
add
add
ds
fimull
in
std
mov
push
nop
aam
xlat
int
or
adc
gs
fdivr
pop
lds
push
repnz
fdivrs
sarb
mull
mov
out
xchg
hlt
mov
and
sub
push
je
popa
jp
push
in
fcoms
pop
push
lahf
dec
fistpl
adc
xchg
sbb
shlb
repz
gs
sti
negb
mov
pop
mov
push
ja
adcb
xor
inc
lret
inc
pop
xchg
rorb
pop
lods
lock
lcall
xchg
mov
icebp
mov
call
adc
xchg
pop
movsb
push
sub
add
jge
cs
aas
dec
jne
xor
rclb
jl
roll
shrb
enter
fwait
inc
mov
push
insb
xor
imul
movsl
jns
mov
cltd
pop
movsb
mov
pushf
sub
mov
test
aad
inc
mov
out
cwtl
out
bound
popf
mov
dec
inc
std
scas
enter
gs
xor
lods
or
in
dec
cmpsb
pop
pop
pop
test
push
ljmp
add
adc
xchg
inc
pop
loope
pop
mov
push
xor
and
mov
scas
jp
mov
mov
xchg
in
sti
mov
sbb
cmp
stos
xor
loope
xchg
push
push
js
fwait
cmp
mov
aaa
test
outsb
add
std
jbe
lods
jmpw
into
je
inc
rcrl
aad
loopne
ja
push
mov
and
sub
xor
aad
or
ja
push
mov
aas
clc
xor
xchg
add
xor
pop
sti
test
stc
sbb
scas
dec
push
scas
mov
bnd
or
dec
loope
xlat
cmp
inc
fbld
push
or
aad
dec
or
and
adc
cmp
sub
mov
adc
addb
add
mov
mov
loope
sub
cmp
aas
pop
xor
pop
mov
daa
mov
pop
lods
add
rclb
mov
adc
insb
push
stos
mov
jmp
xchg
pcmpgtb
sbb
sub
inc
and
mov
mov
xchg
sbb
mov
mov
outsl
dec
add
and
pop
mov
lcall
jbe
jge
mov
lret
jns
pushf
pushf
sbb
jns
gs
test
das
add
sbb
shll
sub
push
pop
ds
cmc
inc
icebp
pop
call
mov
adc
into
js
daa
in
jle
cmp
fwait
mov
mov
sbb
orl
enter
push
js
dec
cwtl
mov
xchg
sbb
or
mov
pop
addr16
lcall
int3
fbstp
mov
andl
int3
test
test
lock
out
jp
push
ret
nop
andb
daa
fdivl
jg
scas
mov
int
mov
rorb
jns
jbe
mov
and
add
xchg
push
std
adc
sub
sub
loop
pop
orl
jns
ret
ret
or
addr16
jo
aas
inc
mov
xchg
push
xor
test
jb
pop
ja
xor
insl
or
adc
filds
and
jbe
cwtl
jle
jns
sub
xchg
inc
ficompl
add
out
pusha
push
sbb
es
js
pusha
xor
sbb
cmp
aad
sub
fwait
jae
loope
lcall
dec
or
lea
hlt
cld
nop
jp
aad
jmp
xchg
jge
les
dec
jmp
pop
or
push
jg
and
rclb
lahf
or
jl
fiadds
bound
fdivp
sti
inc
orb
mov
movsl
jecxz
dec
jno
inc
dec
xchg
loope
je
hlt
pop
or
out
aam
mov
xchg
mov
push
adc
into
mov
leave
cmpsb
push
adc
lea
cltd
into
mov
flds
pop
mov
cmp
sub
jo
test
ret
out
int3
push
mov
aas
loop
stc
jb
and
lret
lcall
pop
xor
addr16
xlat
loop
ret
cld
mov
cltd
jbe
int
test
sub
xor
pop
mov
sbb
das
push
mov
sub
dec
or
adc
je
fldl
arpl
shlb
push
pop
xchg
outsb
inc
addb
mov
mov
es
push
arpl
mov
jmp
test
mov
in
aam
lret
ss
shrl
add
push
ss
add
insl
leave
mov
sti
mov
push
pop
and
lret
pushf
in
jae
movsb
sbb
sub
mov
mov
mov
call
mov
popa
jns
push
xchg
mov
adc
xor
out
push
popf
push
pop
scas
sub
pusha
aas
out
cmp
pop
cwtl
mov
into
popa
test
add
xor
adc
add
lods
in
sub
push
lahf
add
jne
adc
mov
mov
and
push
ret
mov
xor
push
mov
sbb
sub
mov
inc
xchg
push
fsubs
sub
imul
dec
mov
pop
mov
das
ret
jns
sub
add
in
jg
xor
sub
jge
call
aaa
mov
pop
and
jl
cmp
insl
dec
int
stos
pop
and
mov
mov
pop
add
cmp
inc
test
add
out
or
outsl
popf
movsb
mov
fisttpll
inc
pop
and
aam
or
or
out
inc
adc
push
sub
nop
movsl
setp
cmpsl
inc
or
jmp
add
cli
repnz
xchg
das
cmp
dec
sbb
shrb
xor
insl
mov
mov
rcll
cmp
pop
ds
mov
mov
ficompl
inc
adc
outsb
in
pushf
stos
lcall
xor
cmp
push
fwait
into
lret
or
xlat
fnstenv
jno
lods
popf
mulb
scas
xorb
jns,pt
sub
mov
aam
lahf
or
mov
pop
leave
loop
movsb
jge
cmp
push
test
js
std
int3
std
iret
sub
insb
or
mov
gs
mov
xlat
pop
sbb
mov
mov
or
in
sbb
mov
sub
jp
inc
lock
or
subl
dec
or
into
xor
inc
in
mov
sub
mov
enter
cld
xchg
xor
pop
ds
hlt
aam
push
fstps
pusha
nop
pop
xchg
imul
inc
pop
fildl
push
stc
nop
jno
movsl
xor
cmp
outsl
pop
mov
sbb
pop
out
movsb
movsl
inc
aaa
adcb
push
or
rcrl
mov
add
dec
cmp
fcmove
mov
xchg
cli
into
data16
or
jp
inc
mov
push
movsl
das
scas
fwait
es
pop
push
and
mov
cmpl
pop
rcl
or
ljmp
cli
push
xchg
test
push
jge
fstl
test
pop
mov
sbb
jecxz
xchg
ret
xchg
jle
pop
mov
xor
push
sbb
bound
js
sub
mov
leave
fs
sahf
es
cwtl
movl
jae
lock
xchg
popa
mov
add
into
clc
and
icebp
out
sar
mov
dec
mov
stos
sub
jne
scas
pop
jb
xor
dec
cltd
or
mov
or
popf
jbe
cli
ret
sub
cs
icebp
insb
shrl
push
cmp
sahf
dec
cltd
and
mov
adc
cmp
push
adc
sbbb
dec
push
lods
ret
adc
pusha
and
sub
or
subb
mov
cs
push
push
jae
bnd
insl
inc
insl
mov
lea
push
cmp
jle
or
sbb
cltd
and
popl
push
out
pushf
outsb
mov
into
push
jmp
adc
sbb
cltd
xchg
mov
adc
mov
cmpb
lcall
sti
mov
loop
movsl
pop
and
test
adc
jae
gs
in
jae
stc
insl
sbbl
in
adc
fisttps
and
subl
in
stos
and
mov
lret
pop
mov
dec
insb
and
xorl
pop
xchg
sbb
jp
xchg
iret
imul
push
sub
shlb
cmpsb
inc
outsb
insb
jbe
ret
sub
sbb
das
pop
aas
pop
insl
addr16
in
inc
pushf
bnd
rolb
lret
outsb
rcll
sti
mov
fdiv
out
push
in
mov
sub
xchg
in
mov
inc
dec
imul
gs
lds
pop
ret
je
pusha
addl
cmpsl
cmp
add
mov
loop
mov
lds
or
or
xor
pushf
cmp
xchg
popa
add
lods
fadds
adc
enter
lods
push
lea
push
outsb
iret
out
cs
pop
cltd
jnp
scas
add
add
pop
jg
shl
imul
mov
mov
xchg
mov
xchg
xchg
push
ja
add
dec
gs
pop
mov
jns
or
ss
mov
sub
imul
sbb
data16
lock
int
or
sti
or
gs
push
int3
cwtl
or
into
mov
mov
dec
in
xchg
test
jg
inc
xchg
fisubl
mov
dec
xor
ret
lret
mov
mov
cmp
loop
lods
insb
cmp
mov
in
pop
or
sbb
fmul
adc
xchg
bound
out
rolb
roll
inc
verr
insb
in
xor
je
clc
in
and
push
or
shlb
mov
out
gs
leave
mov
jns
push
stc
shlb
fcmovu
je
sti
mov
xchg
adc
rcll
push
hlt
xchg
repnz
xchg
shrl
sbb
movsl
jge
adc
mov
out
adc
in
dec
cltd
mov
push
test
dec
adc
sarb
aas
call
push
xchg
pop
clc
enter
xchg
lds
push
jle
pop
inc
loope
call
leave
push
stos
pushf
cli
pop
call
pop
lahf
insl
popa
or
imul
movl
test
in
and
inc
out
stos
jle
mov
cmp
jmp
mov
out
aad
sub
add
clc
mov
add
or
dec
adc
aad
jg
sub
stos
sub
ffree
jecxz
cmpsl
push
adc
dec
repz
fstps
ja
pop
in
aas
mov
js
outsb
inc
or
lcall
pop
aad
cli
push
repz
fisubs
add
jmp
aaa
daa
clc
pop
mov
inc
jge
sub
mov
sahf
mov
dec
rcll
in
cltd
mov
xchg
adc
icebp
cmp
sahf
inc
jmp
xor
xor
xchg
movsb
out
stos
mov
cmp
cld
mov
cmc
add
mov
pop
jb
mov
sbb
std
mov
jb
adc
je
xor
stos
jle
lods
loop
mov
push
mov
ret
sti
movhps
xor
sbb
lods
in
lahf
test
dec
mov
aas
mov
xchg
dec
pushf
sbb
adc
sub
out
cmp
mov
xor
mov
dec
add
jg
icebp
out
mov
adc
fcoms
adc
and
push
pop
fcompl
fstl
and
repz
jns
movsl
imul
or
aad
inc
enter
mov
pop
into
rcll
mov
dec
inc
cs
aad
pop
jns
push
movhps
add
pop
rorb
inc
out
sahf
cmp
sbb
inc
and
push
push
std
popa
pushl
pushf
stos
sbb
mov
arpl
cmp
sbb
scas
and
xlat
xor
pop
shlb
sbb
push
xlat
jns
sar
push
mov
push
fimull
xchg
fmull
add
out
std
pop
cs
aas
sarl
mov
mov
clc
mov
out
loop
xchg
je
jge
inc
bound
adc
xchg
cld
xchg
push
lds
cli
pop
jo
adc
push
add
je
mov
ljmp
mov
or
push
inc
push
lcall
mov
in
and
fs
es
or
pop
dec
push
rcrl
and
shrl
jmp
enter
ljmp
pusha
mov
pusha
xor
and
loope
orl
lret
insl
clc
xchg
lods
or
mov
and
mov
aam
jl
lea
aam
pop
xchg
leave
add
mov
adc
les
repnz
sbb
fistl
addr16
lock
sbb
jb
sub
repz
push
jle
adc
fdivr
lret
dec
jl
push
andl
or
in
jecxz
sub
fucomp
adc
gs
jmp
jecxz
loopw
out
pop
idiv
in
push
loopne
addr16
push
fwait
pop
cld
add
sbb
sar
sub
mov
imulb
cmp
cmp
push
push
inc
pop
mov
mov
das
decb
jle
and
adc
xchg
sbb
adcb
cmp
in
pushf
outsl
or
loopne
outsl
push
fldl
mov
mov
push
scas
lret
ja
fmull
jl
xchg
lahf
mov
in
lret
add
mov
push
mov
cmp
arpl
xor
popf
pop
mov
push
inc
es
movsl
ljmp
repnz
push
popf
loop
sbb
xor
mov
nop
stc
test
stos
xlat
idivl
push
dec
popa
mov
xchg
sbb
divl
xchg
inc
cmpl
jae
dec
in
mov
into
clc
dec
push
leave
nop
jae
cmc
add
push
pop
adc
in
pop
inc
nop
ret
or
ss
mov
enter
adc
jmp
in
jle
mov
rcrb
dec
pop
popl
push
popa
pop
push
ret
mov
and
or
popf
sbb
inc
jl
jl
sbb
shrl
lret
sub
scas
xchg
and
xor
push
pop
adc
and
je
call
inc
ljmp
lahf
rorb
dec
jecxz
subl
lock
fisubs
enter
fldl
dec
mulb
je
pop
pop
sbb
inc
push
mov
in
fistpll
and
mov
mov
or
popa
int
cmp
xor
adc
jle
cmp
cltd
pop
pop
cmc
int3
rcrl
and
push
jg
push
scas
fcoml
fsubrl
ret
das
mov
lret
repz
flds
sbb
hlt
jne
divl
jo
ret
pop
outsl
sbb
mov
cli
jns
int3
addr16
int
divl
pop
inc
jmp
shr
jo
inc
and
fdivs
call
xchg
pop
aas
test
lahf
jns
add
xchg
adc
out
dec
mov
mov
lahf
in
jae
add
lods
push
out
in
pop
ficomps
jp
push
in
mov
xchg
test
cmpsl
mov
mov
add
sbb
lret
push
int3
inc
push
sub
push
mov
cld
lea
mov
push
sti
mov
inc
add
mov
push
vorpd
adc
repnz
outsl
adcl
ljmp
movsb
jmp
cmp
sbb
inc
or
sahf
push
arpl
fidivrs
js
inc
push
push
jno
cmpsb
cmpsl
or
out
out
ss
push
out
sbb
xchg
pop
push
mov
xchg
rolb
cmp
mov
dec
cmp
cli
xor
dec
in
jne
mov
repz
lds
mov
adc
mov
jp
sbb
xor
into
out
jbe
fdiv
dec
and
mov
dec
dec
js
xchg
or
bndstx
sub
rcrb
shrl
pushf
cmp
sbb
dec
or
jae
push
nop
repnz
cmp
jmp
xor
testl
std
das
pop
mov
push
cwtl
pop
loope
iret
dec
jns
aam
pop
cltd
in
xor
sbb
sub
fwait
gs
lahf
xor
mov
int3
xchg
add
aad
inc
enter
iret
add
mov
loope
pop
or
xor
jmp
dec
ss
out
and
mov
lea
or
cmp
mov
xchg
enter
aad
and
adc
jno
loop
sbb
incb
cmp
js
sub
jl,pt
inc
and
inc
lahf
sbb
inc
push
test
cmp
xor
pop
mov
inc
cwtl
jne
mov
in
sub
inc
pop
mov
xchg
pop
cmp
lahf
cmpl
mov
jbe
jae
mov
xchg
loop
sub
aad
mov
mov
jae
push
jnp
shll
and
xor
insb
clc
data16
jmp
push
mov
mov
add
les
sar
fistpl
fwait
test
mov
dec
stc
mov
out
gs
push
mov
pusha
push
lret
pop
pop
je
in
sti
push
cmp
aad
cmpsl
adc
pop
jno,pt
fidivrs
sahf
and
lds
push
mov
sub
lea
pop
in
insb
push
mov
addr16
out
jge
mov
and
nopl
and
jecxz
push
lcall
push
cmp
pop
mov
push
cmpsb
jnp
ljmp
lea
adc
repnz
xor
aaa
movsb
pop
outsb
std
jb
push
mov
add
jp
nop
fcomp
jl
jno
inc
jae
sbb
les
dec
jge
aas
fidivrs
incb
nop
in
jg
sub
jmp
mov
shl
mov
sbb
dec
call
loop
mov
pop
add
jmp
sub
shlb
add
leave
or
xor
cwtl
aaa
dec
out
or
mov
xor
inc
fidivrl
or
xor
mov
and
insl
imul
xchg
adcb
push
orb
jl
inc
outsb
mov
xor
sbb
pop
icebp
mov
mov
imul
sarb
mov
push
xchg
ret
orb
scas
daa
int
mov
xor
test
sub
pop
out
mov
fdivrs
imul
mov
cmc
test
jno
das
lea
scas
enter
mov
mov
arpl
dec
in
sbb
popa
icebp
dec
loop
aam
leave
fxch
je
jmp
jne
enter
or
lret
sbb
cmp
adc
xchg
xor
jno
inc
cmp
cmp
mov
dec
loopne
shll
jle
push
out
pushf
sahf
sub
jbe
inc
dec
push
push
push
cmc
cmp
fucomip
adc
mov
jnp
cmpsb
mov
ljmp
stc
sbbl
jmp
js
jl
xchg
push
lret
sbb
imul
adc
cmp
nop
xrelease
jecxz
fimuls
sti
jecxz
add
cltd
aas
xor
mov
lods
out
add
and
dec
cmc
mov
inc
mov
movsb
nop
flds
add
mov
pop
das
das
dec
out
jge
mov
ret
data16
aas
jno
ror
das
xlat
or
jo
sbb
lea
movsl
ds
div
cli
push
cmpl
cmpsb
cmp
lahf
jne
aam
push
cld
or
cmp
outsl
out
andl
sub
aaa
enter
outsl
mov
in
dec
insb
mov
and
jnp
ss
stos
loop
jnp
out
dec
in
cmp
outsl
dec
xchg
xor
xchg
sub
sbb
gs
cmp
add
mov
push
jg
mov
popa
lret
pop
xor
out
mov
mov
fcoms
push
sbb
cli
mov
mov
inc
bt
out
int3
lret
jae
mov
addr16
sub
or
inc
cmp
push
or
aad
in
jmp
scas
xor
mov
adc
stc
insl
add
xchg
cmpb
sbb
adc
jno
xchg
in
mov
xchg
stos
lock
iret
jb
jnp
ss
cmp
lahf
outsl
mov
popf
lock
test
mov
jg
cmp
cmp
mov
mov
arpl
push
loop
pop
loope
mov
and
lea
pop
jnp
xchg
xchg
cwtl
aad
stc
pop
rorl
out
imul
shlb
add
sbb
std
and
sub
xor
call
mov
adc
in
and
lret
leave
scas
outsl
roll
mov
jg
test
or
inc
fimuls
out
js
mov
push
or
mov
jne
mov
adc
add
dec
xchg
lret
add
sbb
push
add
pop
fisttpll
out
clc
popa
jno
sti
int
hlt
fidivl
adc
rolb
in
push
lods
mov
test
fldt
xchg
cld
pushf
lret
fidivrl
mov
lods
out
cmpl
adc
imul
cs
sti
mov
mov
repz
xor
lods
jl
addr16
mov
mov
xchg
subl
pop
into
lret
xor
pop
lret
jne
icebp
aam
mov
mov
imul
xchg
or
pop
loop
mov
ds
xchg
int
xchg
push
mov
mov
pop
xchg
cmp
sbb
mov
aas
inc
aad
sbb
or
loopne
xchg
jb
sub
mov
mov
mov
pop
push
inc
cltd
dec
test
mov
pop
and
jnp
pop
stc
clc
dec
loop
push
inc
pop
leave
ja
jle
test
pop
jbe
xchg
xchg
ficomps
in
xchg
das
xchg
jb
loopne
rcrb
das
sti
int
sbb
fs
xchg
outsb
xor
mov
jns
inc
dec
jge
jo
lahf
inc
push
cmp
push
jae
imul
and
jns
out
push
lea
adc
mov
outsl
int
xor
xchg
cwtl
cmpsl
hlt
enter
mov
ljmp
cmp
sub
addr16
jl
pop
dec
rcpps
cmp
pop
addr16
xchg
idivl
ret
mov
xchg
fiaddl
add
rorb
out
mov
push
adc
ficoml
cmp
iret
mov
push
sbb
mov
or
pushf
dec
and
xchg
daa
pop
decb
adc
sub
jb
imul
mov
dec
adc
or
fidivrs
xor
int3
sbb
jp
leave
adc
fnstsw
das
jbe
sub
inc
pushf
mov
jbe
lea
jmp
ret
mov
outsb
test
sbb
add
ds
insb
mov
inc
clc
sbb
jmp
notl
inc
mov
js
arpl
xchg
lea
and
cltd
insb
push
and
jp
adc
lahf
inc
push
fwait
mov
mov
push
sbb
push
inc
push
lds
xlat
sbb
aas
add
movsb
imul
mov
fdivr
fimuls
inc
addl
jbe
inc
popf
mov
insb
mov
xor
dec
inc
or
repnz
insb
loopne
ret
mov
cmp
test
pusha
imul
int
insl
lods
or
xor
pop
jbe
and
cltd
ja
dec
test
sbb
negl
lcall
rorl
add
lods
mov
add
adc
dec
gs
pop
jns
pop
mov
mov
in
in
gs
mov
test
mov
cmc
and
add
out
sub
jge
fcmovnb
xlat
fnstenv
xchg
add
push
cmc
les
inc
out
das
aam
pop
adc
inc
repnz
test
adc
inc
lret
int3
leave
ret
pushf
sti
sahf
orl
fldl
fisubs
or
fsubrs
dec
jg
imul
cmp
lcall
mov
add
mov
jp
inc
push
loopne
xchg
stc
fbld
mov
push
xchg
subb
out
stc
rcrb
inc
repnz
cmp
mov
inc
hlt
xchg
fldcw
ret
xor
mov
pop
jae
xor
xacquire
and
jge
xchg
fldt
jne
xor
mov
roll
pushf
fstl
mov
jo
dec
out
loop
add
add
imul
out
sbb
mov
inc
cmp
cmpb
cld
std
fcmovu
ljmp
xchg
mov
mov
sti
shlb
push
xchg
or
jle
adc
inc
lods
cmp
pop
dec
sub
inc
push
jp
mov
push
xor
in
sbb
fnstsw
mov
push
stos
sub
inc
adc
int
adc
mov
push
lock
jmp
ja
fistps
testb
out
adc
cmc
das
pushl
jge
xchg
push
add
mov
mov
inc
es
pushf
pop
es
stos
mov
dec
ds
sub
push
lret
mov
mov
lret
push
pop
xchg
inc
adc
leave
fwait
leave
sbb
in
cs
push
popf
xchg
popa
loopne
sbb
mov
cmp
in
sub
cltd
cmp
int
insb
jmp
fildll
cs
scas
xor
cmpsl
stos
daa
es
inc
push
lret
shlb
mov
mov
jmp
jp
jns
js
fmulp
aam
js
sub
or
jne
xchg
std
dec
inc
sub
mov
stos
je
push
lahf
movsl
mov
xchg
mov
arpl
or
and
dec
outsb
icebp
int3
sbb
sbbb
mov
inc
push
outsb
pop
lock
shlb
xchg
add
mov
movsb
cld
loopne
sub
lock
cmp
mov
adc
imul
mov
sub
adc
das
adc
mov
dec
fldt
adc
and
pop
out
jno
mov
lock
xchg
mov
fcomps
xchg
or
sub
xchg
sub
sub
shll
loop
shl
lea
int3
cmpsb
mov
lea
mov
or
adc
pop
inc
scas
cmp
mov
lock
push
rol
shll
dec
jg
pop
jmp
jg
inc
outsb
fidivrs
imul
aam
lock
xor
shll
cli
out
hlt
cmc
cli
mov
xor
in
adc
or
dec
pop
outsl
and
pop
xchg
mov
pop
cmp
shl
mov
fisttpll
inc
jecxz
mov
or
xstore-rng
cmpsl
or
icebp
fiaddl
mov
ljmp
pop
pop
xchg
add
jmp
es
cs
lcall
pop
repnz
inc
xlat
push
test
test
enter
mov
std
jl
mov
mov
dec
xchg
imul
iret
cmp
xlat
nop
mov
out
int
and
lsl
test
ljmp
cld
xchg
push
sub
cmpsl
xchg
stc
pop
stos
or
and
mov
inc
sbb
sbb
fcompl
cmp
iret
pop
jns
cmpsb
pop
pop
pop
sarb
push
xchg
jmp
dec
lds
pop
jmp
pop
jae
push
mov
xlat
xor
mov
sbb
ss
sbb
lds
ja
test
jnp
cltd
push
xchg
or
inc
jb
adc
push
mov
scas
outsl
dec
mov
pop
shl
pop
nop
xlat
iret
sarl
inc
jp
insb
shll
out
xor
int3
clc
ljmp
jecxz
int
jle
outsl
jle
sahf
mov
out
cwtl
out
sbb
popa
roll
aad
sub
test
nop
mov
stc
shr
mov
sbb
iret
xchg
in
stos
out
insl
jnp
jo
sub
add
popa
xchg
aad
or
jp
dec
mov
bound
adc
in
int
or
scas
popf
mov
clc
xor
icebp
mov
dec
dec
or
mov
int3
mov
ret
stos
je
leave
out
ror
aad
lret
mov
push
lcall
inc
decb
jbe
loop
dec
pop
insl
lret
mov
adc
stos
pushf
adc
xor
add
test
daa
mov
and
mov
pushf
rcr
inc
stc
xor
xchg
push
cmp
pushw
push
adc
cmp
andl
xor
adc
pmuludq
mov
aas
fsubl
nop
xchg
pop
push
nop
xchg
cwtl
addl
dec
lods
testb
mov
push
in
out
out
xchg
in
mov
cmp
xchg
scas
movsl
push
sbb
cmp
call
jecxz
fistps
mov
shrb
lods
mov
loope
xlat
mov
dec
xlat
pop
leave
jne
push
cwtl
xchg
and
and
inc
stos
stos
mov
in
ds
jb
test
int3
sbb
mov
xor
lcall
test
ds
ljmp
aad
lods
js
and
xchg
mov
sbb
ljmp
jb
ret
enter
xchg
sti
xchg
dec
lds
cltd
test
add
dec
sbb
cmc
lds
js
insb
or
rol
dec
sbb
dec
das
or
cmp
jnp
pop
or
inc
sti
mov
inc
push
clc
mov
loope
mov
loop
push
push
test
mov
or
fs
sbb
fisubl
mov
fistpll
add
lcall
pop
push
pop
pop
stc
add
in
jno
inc
ja
cmp
rcll
mov
int3
iret
and
lcall
sub
jo
inc
cltd
sub
adc
enter
pushf
std
jecxz
xor
mov
test
jo
fildll
test
into
dec
mov
rcr
cmp
mov
ficomps
xchg
push
stc
cmpsl
jne
xchg
inc
jg
je
jb
jmp
push
sub
cs
sbb
call
mov
pop
stos
lcall
cld
lret
sti
pop
icebp
xchg
clc
sbb
pop
shr
ljmp
or
bound
scas
pop
jp
cmp
push
addb
or
int3
xchg
xor
inc
jns
cltd
cmp
mov
inc
dec
push
in
push
inc
mov
ja
lods
fistpll
xor
sub
mov
imul
js
mov
daa
xor
cmc
adc
mov
data16
mov
jno
jg
dec
fistps
cmp
dec
incb
das
pop
cmp
push
sub
movsb
sahf
push
cmpsb
xchg
insl
imul
or
xor
mov
mov
push
sub
fsubrs
leave
push
jno
mov
inc
inc
or
fcom
mov
arpl
sbb
sub
jmp
adc
data16
cmp
xor
out
fld
fdivrs
push
mov
jnp
adc
cli
pusha
lret
inc
lock
mov
negl
or
push
inc
cmp
mov
and
add
int
inc
loopne
cmp
jnp
les
shll
mov
add
cmp
and
imul
popf
stos
outsb
cmp
mov
pop
aad
jno
cmp
mov
cmpsl
push
jbe
push
fidivs
mov
or
push
in
mov
lea
xchg
dec
inc
mov
enter
pushf
inc
aaa
mov
xchg
pop
sbb
pusha
and
add
lods
ja
popl
jne
cmp
mov
cld
pop
shrl
inc
out
cwtl
or
and
fcoml
mov
out
je
mov
stc
scas
imul
repnz
xchg
jl
stc
icebp
gs
mov
inc
and
shll
xchg
cmc
loopne
lock
sub
dec
add
sbb
out
mov
xor
in
ret
xor
out
gs
push
pop
cltd
sbb
cmpb
lock
xor
xchg
jle
and
jp
in
divl
test
sub
sahf
notb
adc
push
popf
inc
dec
jecxz
insl
out
test
mov
mov
inc
xchg
inc
ficomps
loope
ret
adc
pop
insl
ds
xchg
lods
addr16
mov
xor
push
adc
lods
cli
bound
out
cmp
rclb
rcll
sbb
and
or
into
in
and
add
and
mov
hlt
mov
mov
mov
ret
data16
push
add
dec
pop
xchg
js
imul
js
lea
mov
sbb
dec
and
jecxz
fdivrp
lahf
ds
mov
rorl
adc
sbbb
ljmp
loopne
sub
in
xchg
jecxz
fsts
pop
or
stos
mov
jecxz
insl
or
les
jg
lea
mov
int3
and
mov
sbb
testl
jae
sbb
sub
push
cmpsb
adc
push
mov
adcl
aaa
sbb
insl
in
rcl
add
lea
jnp
inc
mov
cwtl
jl
ffreep
and
seto
add
call
shrb
jp
add
sub
adc
cmp
repz
out
inc
repnz
xchg
lret
in
push
jp
mov
pop
push
and
sbb
lds
mov
adc
xor
shll
loopne
push
push
xchg
fdivrs
fs
jp
ret
mov
repnz
mov
pop
pop
and
cmc
lahf
lock
cs
das
mov
or
or
inc
stos
fwait
ret
xchg
xorb
push
dec
mov
xor
daa
in
lret
rcll
mov
pop
mov
notl
adc
popf
stc
rclb
sub
fwait
popf
sahf
jbe
aaa
cmp
push
xchg
inc
test
xorb
dec
ljmp
std
iret
mov
sbb
push
xchg
adc
xchg
arpl
in
mov
std
mov
les
pop
outsl
or
inc
xchg
repz
in
mov
in
inc
adc
jno
or
call
cmp
mov
dec
cmp
scas
ficomps
cld
or
adc
mov
lds
inc
sbb
xchg
jae
test
pop
ud2
push
sbbb
adc
mov
xor
jle
dec
xchg
dec
pop
mov
ja
push
out
cmc
das
fisttps
or
cmp
out
in
jno
adc
test
mov
pop
loopne
movsb
pop
movsl
add
aaa
push
add
xchg
insl
nop
aam
and
fbld
fstps
sub
sahf
test
sbb
popa
pop
enter
lret
lea
xchg
rcrb
ret
and
mov
mov
test
and
mov
xchg
adc
cld
mov
jle
fmull
shlb
inc
ret
mov
add
je
fsubs
mov
inc
cmpsl
xlat
dec
cmp
cmc
into
and
iret
mov
mov
push
ja
cmp
jb
insl
dec
cmpsl
pushf
mov
ds
mov
mov
dec
scas
in
gs
adc
call
repz
mov
jge
je
inc
xchg
xchg
and
add
and
mov
lea
lods
or
sub
cwtl
fcompl
pop
loop
inc
popf
jecxz
fcomi
adc
jle
cmc
cmp
stos
stos
jl
adc
or
and
cmpsb
xchg
add
ret
cmp
aam
mov
jns
inc
ret
jns
dec
inc
cwtl
mov
push
movsb
inc
pop
gs
shrl
iret
xor
cmp
bound
ljmp
jg
pop
sbb
mov
push
xchg
fmulp
sub
movsl
push
cmp
mov
fisttpl
cmp
sbb
sub
outsl
cmp
mov
aaa
rcl
mov
mov
cwtl
lods
sbb
cld
cwtl
mov
cmp
xor
cwtl
mov
dec
or
lret
jo
sti
scas
xchg
xchg
out
stos
add
cmp
insb
fs
pop
pusha
fadds
push
jo
mov
in
add
scas
or
xchg
sub
ljmp
call
lret
in
add
fildl
icebp
clc
xor
adc
and
rorb
inc
aam
shll
sub
mov
imul
adc
sbb
add
repnz
pop
inc
mov
fwait
lods
jmp
xchg
and
mov
andb
push
sti
shufps
pusha
iret
ffreep
adc
mov
xchg
pop
stos
ja
pop
pop
pop
scas
jle
inc
add
pop
xor
add
mov
lcall
scas
out
inc
sub
repnz
xor
mov
inc
xchg
test
xor
aad
dec
xchg
cmpsl
test
cmp
mov
mov
into
rcr
inc
sbb
push
pushf
xor
mov
in
in
sbb
pop
sub
int
iret
fs
adc
lds
rorl
fcomps
add
cmp
lods
and
mov
incb
movsb
les
push
rcrl
cmc
pop
inc
shlb
mov
or
outsl
pop
ss
xor
incb
and
mov
or
jb
or
mov
jno
xor
test
xlat
sahf
add
addr16
xchg
ljmp
lock
outsl
repz
cli
out
jp
dec
cli
pop
daa
push
lcall
sbb
leave
jle
cmp
lret
int
clc
sub
mov
imul
jbe
xchg
or
popa
pop
cmp
data16
in
push
loop
in
pop
xlat
mov
rcrl
imul
push
fimull
pop
sbb
push
mov
xchg
scas
cwtl
loope
mov
scas
mov
jbe
pop
pop
pop
mov
cmp
push
adc
icebp
push
sar
sub
xlat
or
cmp
xchg
iret
orb
flds
test
movsb
sub
frstor
mov
fists
out
pop
les
aam
xchg
pusha
fcoms
movsb
adc
lds
mov
sti
push
sub
sahf
movsl
nop
xchg
repnz
xlat
fistpl
jmp
push
adc
fistpl
xchg
mov
and
stos
ljmp
mov
xchg
or
dec
outsb
sbb
cmp
popf
icebp
push
fwait
clc
jnp
mov
dec
lock
cmp
mov
icebp
or
pusha
cld
inc
or
mov
test
imul
mov
sbb
mov
xor
in
and
inc
enter
out
push
jb
fwait
sub
sbb
inc
xor
mov
pop
jmp
ljmp
popa
fcmovu
adc
aas
push
jmp
xchg
fisttpl
dec
out
aas
leave
push
repnz
xchg
js
jb
popa
or
cs
inc
adc
xor
fadds
push
je
sbb
arpl
aam
addb
mov
inc
icebp
insl
cmpsl
insl
ret
out
inc
fidivrs
sbb
jae
add
mov
fisubrl
divl
mov
pop
pushf
jle
fsubl
stc
sub
push
int3
mov
and
xorl
in
cmp
sbb
imul
inc
pop
push
pop
mov
ret
jno
shll
mov
or
lahf
cmp
jle
push
lea
xchg
mov
jl
add
mov
mov
fs
xlat
addr16
popf
dec
cmpsb
fdivs
jl
mov
pop
sysenter
adc
aas
lock
sub
cltd
dec
xor
inc
dec
insl
addr16
es
cmpsl
xchg
in
iret
jle
dec
jle
adc
xor
rcr
and
lods
insb
lret
jne
cmp
and
loope
add
push
les
out
pop
mov
cs
shlb
mov
add
fidivs
cmp
add
ljmp
jl
mov
pop
test
out
add
pop
stc
mov
mov
sbb
stos
imul
lcall
mov
aaa
add
xchg
or
push
xor
out
add
mov
sub
scas
pusha
enter
popf
push
pop
popf
push
nop
shll
push
mov
in
xchg
lods
cmp
mov
in
filds
jle
out
xor
data16
iret
out
sub
test
addr16
fwait
xor
inc
movsb
lea
dec
xchg
nop
xchg
pop
jno
jae
in
movsl
xchg
pop
stos
jge
sarb
pop
fst
and
lahf
bound
test
mov
adc
imul
shlb
push
es
insb
xor
pop
ret
xchg
push
cmpsl
mov
dec
inc
push
cmpl
out
push
mov
mov
loop
sbb
mov
testl
repz
and
arpl
ljmp
sub
fwait
mov
xchg
sti
sub
in
xor
jae
es
xchg
xchg
jge
mov
daa
ret
mov
mov
sub
xchg
sbb
sbb
inc
stc
adc
xor
movsb
sbb
sub
lods
and
bnd
sub
jne
push
mov
sbb
daa
scas
mov
call
out
add
std
jle
stc
or
push
or
mov
inc
lcall
adc
ja
adc
addr16
jge
fs
dec
inc
xor
push
movsl
maxps
mov
add
mov
adc
jge
popa
mov
mov
mov
pop
ljmp
push
sub
sbb
lods
inc
outsb
imul
call
notb
sbb
add
data16
ljmp
jns
xchg
push
jne
mov
pop
add
jle
mov
pop
or
and
adc
out
mov
jecxz
lds
outsb
leave
inc
or
push
mov
fs
adc
sarl
popa
mov
sub
mov
mov
push
dec
or
mov
cmc
xchg
xorl
or
es
sahf
pop
insb
in
clc
lea
add
or
fs
inc
push
mov
push
test
in
out
xchg
inc
sahf
and
test
mov
outsl
push
mov
ss
push
jnp
loope
imulb
out
sbb
mov
fstl
cmp
addr16
xchg
dec
add
test
in
stos
fsts
sbb
lahf
lea
push
inc
data16
lcall
pop
mov
add
leave
lods
frstor
mov
jge
inc
adc
xchg
into
or
stos
add
or
in
jl
add
imulb
loop
mov
dec
inc
mov
or
mov
xor
push
lret
lret
cld
pop
push
mov
pop
enter
addr16
jne
inc
inc
arpl
push
cs
cmp
addr16
or
xchg
gs
jno
daa
xchg
test
mov
sbb
xor
xchg
mov
scas
je
out
rcll
inc
xchg
sahf
xor
xlat
sbb
call
push
fstl
stc
mov
jb
cli
stc
stc
mov
aad
sbb
pop
fstpt
jecxz
and
lods
mov
jl
mov
addb
mov
cwtl
push
adc
pop
push
push
push
and
repz
popf
test
push
or
inc
repz
xor
push
fld
sbb
mov
dec
add
mov
jg
rol
or
aam
ret
add
in
shlb
insb
popf
or
int
sub
add
loop
repz
int
arpl
cmpsl
jnp
sbb
push
out
shrl
inc
cmp
iret
sbb
lret
inc
inc
or
sub
and
push
fldt
adc
stos
xchg
sub
push
insl
lcall
lret
mov
cmp
mov
mov
lea
lock
ret
lret
out
inc
push
mov
jle
pusha
jae
mov
mov
mov
mov
xlat
inc
pop
sbbl
sbb
pop
push
aam
adc
mov
ja
mov
mov
adc
int
jne
fldenv
lea
xchg
or
jb
or
xchg
or
jmp
ds
xchg
imul
add
push
daa
lcall
sbb
test
lahf
sar
and
xchg
scas
cmp
pop
pop
cmp
iret
test
mov
or
jp
loope
jns
or
inc
data16
pop
stc
jnp
dec
adc
and
dec
mov
cmc
rcll
movl
push
ljmp
xor
in
cmpsl
and
ror
mov
insb
nop
xchg
into
iret
adc
int3
rorb
jmp
insl
daa
sub
xor
lret
push
testb
cmp
cwtl
pop
addb
jne
stc
pop
xchg
insb
xor
in
scas
imul
inc
ret
aas
sti
add
pop
dec
push
sbb
and
sti
adc
pusha
push
js
dec
adc
out
mov
xchg
sub
arpl
xchg
pushf
or
add
shl
jb
inc
sub
mov
jne
call
mov
divb
or
push
mov
xor
inc
add
les
pop
pop
dec
xor
cmp
dec
sbb
inc
mov
xchg
ret
aam
push
sub
push
out
mov
mov
cmpsb
lret
jb
add
adc
ja
movsb
data16
addl
xor
mov
xchg
jb
sbb
mov
ljmp
cmp
fsubrs
addr16
lahf
cmp
sbb
xor
mov
stos
popl
xchg
push
pop
cmpsl
dec
ror
push
adc
sub
or
pop
jl
push
or
push
lock
xor
mov
les
popf
ret
xor
hlt
inc
dec
test
add
cld
lods
mov
inc
pop
xchg
xchg
adc
iret
bound
push
bound
add
xor
loop
cltd
mov
pop
mov
adc
mov
imul
ss
fucomip
pop
pop
jno
fadds
int
xchg
sub
dec
mov
rorl
sbbb
pop
mov
cmp
jno
loopne
mov
popf
iret
adc
ja
les
insl
mov
jnp
adc
out
fisubs
xlat
jp
and
mov
loopne
or
mov
mov
pop
jo
jns
in
or
cmpsb
or
call
hlt
js
imul
leave
sub
pushf
xchg
cmp
pusha
jl
rorb
and
cwtl
or
lea
add
and
jbe
aad
out
into
mov
scas
stc
sbb
stc
or
xor
add
dec
xor
loop
inc
stos
sbb
xor
push
cmc
jns
add
cmpsl
cmc
sbb
shr
stos
out
jecxz
lret
cli
add
ret
jnp
pop
pop
rorb
imul
mov
insl
pop
sbb
add
in
sbb
sub
sbb
lock
fldenv
dec
push
imul
fidivrl
xor
mov
pop
and
sub
lock
and
push
aaa
xchg
xchg
sbb
adc
fistps
shll
in
testb
jnp
ret
clc
insl
pop
ss
pop
shrl
rcrb
out
xchg
pop
pop
mov
mov
xchg
sbb
out
add
mov
jp
lock
mov
dec
xchg
xchg
sub
xor
push
mov
and
lcall
push
push
incb
sub
shr
push
ret
cli
inc
cmpsb
mov
sub
repnz
fnstenv
fcomi
hlt
arpl
and
popf
subl
mov
or
xor
mov
fisttpl
inc
testb
std
add
or
cmp
xchg
add
xor
repz
cmc
iret
pop
hlt
int3
test
dec
push
mov
mov
and
push
and
subl
sub
movsl
cmc
out
bnd
xchg
push
sub
add
arpl
xor
inc
inc
stos
ret
xchg
das
mov
mov
dec
ja
push
fidivs
in
int3
test
xorb
sub
cmpsb
push
mov
cmpsb
or
jno
jnp
call
dec
xor
dec
or
stc
je
inc
or
jmp
or
push
lock
pop
push
imul
test
adc
cmp
mov
imull
loope
mov
test
sub
jb
shr
xor
dec
cmp
fwait
pop
mov
xor
add
in
and
sbb
mov
sahf
lods
sub
mov
pop
mov
clc
sbb
push
sbb
mov
addr16
xchg
aas
dec
jnp
in
jle
lods
pop
jb
aaa
cmp
xor
jg
in
and
pop
mov
fdivrl
test
jge
mov
fsubs
cs
imul
adc
push
cmpsb
popa
adc
lret
pop
in
adc
out
addl
or
es
inc
adc
mov
add
subb
xor
adc
or
and
lds
js
or
xor
pop
lods
sbbb
xlat
imul
adc
pop
or
inc
lret
lock
push
adc
xchg
mov
addl
inc
sub
syscall
add
lea
push
repz
mov
inc
and
jb
shlb
dec
and
xor
aad
orl
sub
int3
or
lea
lret
mov
cmp
inc
aaa
jg
dec
mov
test
mov
inc
sbb
int3
imul
or
mov
das
shll
loop
shrb
dec
mov
jg
rcrb
popa
je
movl
jp
xchg
loop
hlt
xor
and
and
mov
add
dec
in
inc
mov
inc
inc
js
inc
xor
bnd
sub
or
fcmovu
mov
aam
pop
divl
xchg
jae
sub
cmp
arpl
cmp
adc
fisubs
gs
stos
bound
or
push
jge
or
inc
in
cltd
sub
mov
imul
dec
and
mov
fsubs
fstps
or
in
cmp
add
test
cmp
loop
sbb
pop
leave
rorb
mov
jb
ss
in
lods
jl
mov
stos
movsb
xchg
cwtl
lds
or
cmpsl
sub
test
mov
sub
pop
add
sbb
fs
jne
push
lahf
aam
dec
sahf
dec
outsl
daa
mov
outsb
arpl
xor
dec
dec
call
mov
xchg
sbb
lea
loop
mov
out
test
fsubp
lahf
data16
or
mov
dec
iret
popa
stc
inc
push
negb
jbe
dec
jmp
imul
rcll
sbb
arpl
adc
fistps
mov
rcl
div
les
lcall
out
mov
adc
sbb
push
push
mov
dec
cmp
inc
std
lret
in
jnp
jns
test
ret
stos
cmp
clc
loope
pushf
sar
mov
sub
xlat
testb
int3
xor
cmc
add
into
adc
mov
and
push
pop
loop
hlt
fldlg2
rcrl
or
in
cmpsl
out
mov
cwtl
lods
mov
out
es
sbb
out
rcrl
pop
dec
cmc
inc
out
int3
jb
mov
pop
ss
imulb
mov
sbb
bound
jns
sub
movsl
jg
popf
add
sub
addl
sbb
insl
xor
lret
in
divl
les
xor
sbb
cmp
out
xor
cmp
dec
or
sbb
scas
test
iret
adc
test
in
inc
addr16
repnz
cld
pushf
jo
ss
ljmp
clc
cmp
mov
pop
frstor
xor
movsb
add
aad
movsl
xchg
scas
sub
stos
test
stc
aam
aaa
or
roll
xchg
push
xchg
jle
fdiv
lcall
les
je
mov
sub
xchg
movsl
test
mov
xchg
scas
movsl
lcall
jae
or
leave
pushl
xchg
cmpsb
ja
adc
leave
xchg
test
mov
sub
adc
mov
rep
sub
mov
adc
and
mov
inc
aam
mov
lock
movsl
lret
xchg
mov
mov
pop
and
scas
aam
je
inc
cmpsb
mov
fdivl
enter
xchg
add
dec
adc
cmp
or
xchg
cwtl
shll
popa
cmp
cltd
repnz
cmp
jecxz
xchg
add
div
mov
test
add
clc
inc
cmpsb
loop
sub
jl
add
rorb
pop
sahf
loop
arpl
lock
out
mov
and
cld
test
adc
and
push
cmpsl
test
jle
xacquire
ss
xchg
push
xchg
ret
pushf
pop
or
or
push
xchg
dec
bound
rorb
adc
jo
enter
nop
rcll
int3
imul
testb
stos
rcrb
sub
loopne
addb
xchg
stos
in
inc
xor
rclb
js
add
cmp
push
push
loope
or
int
pop
aam
or
jns
cmp
in
cmpsl
scas
js
ret
xchg
sub
dec
ret
scas
pushf
push
sbb
subb
jl
or
sbb
mov
cmpsl
dec
inc
mov
bound
in
lcall
clc
test
cld
or
in
push
push
and
pop
sbb
push
dec
pop
cmp
xchg
les
jle
add
iret
pop
testb
std
paddsb
or
mov
mov
inc
icebp
inc
jbe
and
aas
pop
adc
fadd
bound
cmp
fisubrl
clc
jecxz
inc
push
inc
aad
jle
repnz
or
cmp
add
sbb
lgs
shlb
lret
mov
rcrb
or
xchg
mov
sbbl
cltd
out
jg
push
push
lret
cs
inc
hlt
push
sub
cmp
shr
cmp
xchg
xor
leave
cli
xchg
cmp
pop
jg
aas
pop
sub
jmp
std
dec
push
lahf
addl
cmp
lcall
jbe
in
cmpsb
notl
out
lahf
or
int
add
popa
leave
cld
dec
mov
and
sarl
test
sub
int
cmc
jle
in
js
sbb
orb
fldcw
and
stos
mov
cwtl
cmp
insb
loop
popa
scas
push
and
xchg
call
call
stos
xor
sarb
mov
out
dec
xor
mov
int3
xchg
cmc
fisubl
jge
iret
ret
scas
add
sarl
inc
sub
cmp
jmp
xchg
lret
mov
in
or
mov
cmp
mov
jp
jo
js
ljmp
and
pop
adc
and
hlt
mov
inc
sti
jae
add
inc
adcb
xor
inc
adc
repz
jge
shlb
sub
adc
outsl
push
mov
xchg
hlt
leave
cs
push
popa
or
xchg
cmp
lret
dec
mov
lods
push
cmp
push
sbb
cmp
fistpl
xchg
or
cmc
push
jmp
cmp
mov
push
fidivs
aad
jo
inc
cmc
loopne
mov
cltd
mov
popl
lods
daa
into
scas
imul
ljmp
adc
mov
push
cmp
pop
pop
fwait
sub
jge
inc
xchg
sub
aas
mull
scas
fisubs
loope
mov
mov
mov
scas
and
xor
and
mov
lock
roll
jecxz
sbb
adc
jl
cmpb
jnp,pt
shll
jae
rorb
les
jb
inc
xchg
cmp
lock
cmp
popf
and
testb
nop
jo
popf
repz
rol
inc
add
aam
aas
dec
inc
mov
flds
mov
jecxz
aam
push
jo
inc
stc
mov
lahf
imul
xchg
mov
xchg
push
lret
sub
sbb
sbbb
cmpsb
insb
insl
fwait
loopne
pop
fcomip
jecxz
sarb
jmp
xor
shll
or
sub
pop
pop
test
shll
es
pop
stc
daa
sti
push
stc
loope
jle,pn
jle
sahf
pop
dec
inc
mov
push
shll
test
hlt
xor
jne
or
cmp
fwait
xlat
sbb
fsubs
jb
cmp
int
in
loopne
insl
rorb
xorl
push
push
ljmp
add
push
jns
loope
xchg
lea
mov
mov
cmpb
movzwl
adc
mov
sub
cs
in
pusha
or
into
pop
cli
jb
lods
xchg
dec
data16
call
repnz
call
add
add
add
loopne
pop
mov
jp
ss
outsl
test
xor
fwait
xor
or
test
cmpsl
fstl
fisubs
and
sub
push
sub
lods
push
pop
pop
xor
jns
and
es
fwait
xor
adc
neg
dec
xchg
out
ror
jae
sub
jp
out
in
js
fiadds
out
mov
scas
enter
jl
das
mov
icebp
out
pop
mov
mov
xor
lods
ds
jl
mov
pop
sbb
or
daa
cmp
xchg
imul
rol
movsb
movsl
aas
in
jp
mov
sub
mov
adc
scas
push
push
insl
add
pop
cmpsl
icebp
imulb
sub
xchg
mov
add
out
pop
jae
dec
mov
xchg
jl
into
bound
aas
xlat
mov
push
jne
lret
test
fucom
pushf
inc
or
lock
daa
bound
int
pop
dec
inc
lock
xor
dec
insb
xor
pushf
jo
stc
xchg
in
movsb
cmp
cmp
js
repz
shl
sub
and
sahf
sti
xchg
mov
outsb
mov
cmc
ss
adc
dec
dec
je
mov
out
or
mov
shll
mov
inc
jne
mov
jb
inc
inc
lret
xchg
cmp
sbbb
cmp
testb
jl
lcall
mov
movsb
lods
into
testl
loop
je
mov
in
xchg
fistpl
lea
out
cli
mov
pop
dec
scas
scas
xchg
insb
push
outsb
pop
out
pop
pop
cmp
or
xchg
rorb
cmp
sub
shr
inc
in
lds
sbb
sbb
nop
addr16
stc
outsl
mov
in
cmpsl
sahf
movsb
jecxz
and
mov
pop
fisubrs
jmp
jo
into
fisubrs
mov
sub
xor
sub
shr
cs
jnp
movsl
ss
mov
in
dec
clc
ret
out
xor
icebp
rcl
sbbl
or
fwait
pusha
sub
notl
mov
and
shll
call
cli
hlt
lods
inc
mov
adc
loope
and
xchg
data16
xchg
push
xchg
or
cmc
mov
add
repnz
fistpl
mov
das
or
jl
mull
subl
inc
lcall
push
loope
inc
mov
js
cmc
test
insl
pop
fistl
add
pop
into
outsl
cld
xchg
in
and
jmp
aaa
mov
jns
out
mov
pusha
xor
out
jns
adc
and
shlb
mov
add
mov
pop
cmp
push
jo
xchg
loop
cld
jg
in
jns
push
mov
inc
mov
icebp
leave
sub
pusha
fsubl
sbb
clc
shll
mov
mov
sbb
popa
mov
xchg
loope
mov
add
negb
sarb
mov
sub
xchg
call
and
je
loopne
test
fldlg2
ret
cs
adc
pop
mov
pop
push
dec
inc
jle
sahf
mov
cli
imul
subl
and
inc
and
jae
inc
mov
mov
clc
test
mov
aaa
loopne
sub
inc
test
fisubs
xchg
cmp
adc
test
cld
loopne
cmp
pop
sub
mov
push
mov
mov
push
insb
mov
pushf
and
push
mov
outsb
pop
sub
stos
nop
ja
stos
dec
clc
bound
sbb
and
sarb
sbb
mov
and
fmulp
jae
pushfw
sbb
rcl
cmp
jmp
dec
outsl
arpl
mov
xchg
cmp
sub
cmp
test
inc
sbb
mov
inc
lods
in
test
fdivs
mov
out
in
adc
pop
pop
addb
sarb
xor
jno
mov
movsb
mov
pop
mov
repnz
into
inc
xchg
sub
cmp
mov
stos
sbb
add
jl
cmpsb
fs
repz
les
mov
ss
lret
repz
jae
int
cmp
bound
xor
addr16
js
ljmp
pushf
fsubrl
sub
jmp
leave
inc
bswap
push
repnz
jbe
cmp
cwtl
fsubr
and
stc
inc
sahf
jp
pop
das
sbb
ds
sbb
add
sbb
pusha
sbb
dec
fisubs
out
sub
out
adc
jbe
sub
xchg
pop
cltd
sub
add
jb
and
int
cli
xchg
sub
test
imul
in
cmp
icebp
icebp
test
mov
jl
dec
sub
inc
test
mov
jno
dec
mov
push
mov
out
push
stos
push
cli
adc
icebp
pop
adc
pop
icebp
ljmp
adc
fs
dec
aaa
repnz
add
jp
orb
sti
aam
lock
fisttpl
jecxz
pop
sub
xor
fcompl
dec
dec
pushf
cld
xor
int3
es
ss
xor
popa
pop
inc
imul
xchg
std
adc
and
addr16
call
inc
mov
jne
in
adc
mov
xor
imul
mov
inc
out
mov
push
add
mov
mov
jge
clc
mov
fimull
call
cmpsb
xor
xor
loope
shrb
iret
fists
cltd
js
filds
add
sahf
dec
mov
fucomp
xchg
addr16
test
dec
add
and
xor
movsb
std
les
sti
jae
mov
push
mov
cmpsb
arpl
push
jge
in
dec
loope
mov
adc
sub
sub
rcrl
and
xor
and
fisttpll
into
cld
cmpsb
test
rcr
xor
mov
pop
jne
push
jno
adc
cmp
fdivrs
sahf
mov
mov
fnstenv
std
adc
std
out
sub
sbb
mov
lods
inc
in
mov
mov
hlt
ljmp
pop
sub
cmp
out
das
hlt
rclb
xchg
sbb
xor
push
popa
call
sahf
sub
push
and
pop
xor
cs
loop
ljmp
and
hlt
rorb
sbb
nopl
jle
enter
repz
ljmp
shl
jmp
enter
mov
addl
fldl
shll
movsl
iret
mov
inc
das
outsb
insb
push
add
les
lds
js
sahf
lcall
add
bound
sbb
mov
xlat
pop
dec
daa
sub
ja
stos
xlat
rclb
dec
rorb
mov
scas
repnz
mov
pushf
pop
rolb
icebp
ficoml
into
test
or
out
xchg
xchg
adc
icebp
fidivl
cmp
out
jo
movsl
repnz
cmpsl
sub
add
leave
jp
pop
cltd
push
push
jle
int3
inc
stc
ss
cs
inc
jb
mov
outsl
pop
ja
mov
jb
xor
sub
sbb
mov
mov
mov
mov
insl
repnz
adc
push
fmull
idivb
inc
adc
pop
mov
inc
or
loop
test
pop
js
pop
nop
int
cli
add
xchg
es
lods
repnz
pop
cmp
xor
sbb
xlat
jne
cltd
icebp
sub
push
pop
xor
movsb
push
adc
jle
orb
cwtl
mov
xchg
push
es
jb
or
mov
mov
mov
jno
ss
out
push
mov
xchg
leave
sub
xor
bound
xchg
cmp
fldenv
push
dec
mov
stos
sarb
pop
push
inc
xor
xor
pop
lea
mov
rorl
std
xor
pushf
add
sbb
push
cmp
stos
pusha
adc
ss
pop
sbb
or
pop
xchg
pop
test
push
out
jb
add
dec
adc
adc
inc
sub
sub
jae
imull
jmp
stc
dec
adc
mov
xor
pop
inc
fwait
js
mov
cmp
sti
bound
loope
fs
fs
cmpsl
je
testb
pop
pop
roll
sarb
mov
int3
movsl
xorl
inc
sahf
and
push
jmp
repz
cmpb
mov
arpl
ret
inc
jge,pn
shll
pop
mov
es
jnp
dec
pop
pushf
bound
adc
inc
and
lahf
jecxz
sub
andl
inc
jo
mov
fcomps
push
mov
xor
sbb
icebp
jne
push
pop
jmp
scas
xchg
lods
in
add
dec
or
vmovss
lret
imul
movsl
xchg
ds
xchg
int3
push
int3
ret
xchg
lds
jo
fs
scas
popf
je
push
out
mov
leave
pop
test
and
sbb
aam
jo
adc
popa
xlat
div
fidivrs
repz
mov
sbbb
mov
mov
movsb
dec
aas
or
aas
std
enter
mov
mov
add
dec
rol
gs
adc
pop
jne
cld
fs
sub
sti
or
fsts
aaa
lret
daa
cwtl
scas
jne
aaa
fnstenv
fwait
mov
sti
dec
or
sti
std
push
add
leave
loop
daa
xlat
add
mov
lret
mov
test
inc
call
mov
and
andb
lods
ljmp
movl
mov
or
adc
sbb
cmp
sub
pop
or
fimull
dec
sub
push
insb
adc
xorb
mov
aas
loop
xchg
repz
push
jl
call
xchg
movsl
pop
cmpsb
xchg
jp
cltd
cmp
out
pop
fisubl
or
cli
dec
pop
cli
inc
clc
inc
fisubrs
push
outsb
sti
ja
rcr
fadd
les
sub
push
test
sub
stos
popa
mov
push
arpl
cmp
or
sub
shrl
pop
ficomps
add
fldt
rcr
mov
adcb
ja
cmp
adc
add
cs
mov
stos
jge
nop
add
cld
xor
jecxz
into
mov
fidivs
mov
aas
mov
sub
sub
jecxz
sarl
sub
xorb
loopne
jmp
mov
add
mov
mov
in
lea
mov
lds
das
pushf
and
mov
repz
cmpsb
sar
mov
ja
iret
insb
cld
mov
push
lret
daa
andb
dec
out
xor
push
adc
daa
pop
mov
inc
add
xchg
adc
jle
or
pop
and
mov
repz
lea
fmull
cli
ficoms
cmpsb
in
daa
ss
or
js
inc
mov
jle
test
mov
stos
or
gs
xor
int3
out
pop
sbb
stos
test
mov
fwait
loope
js
popl
mov
fidivl
scas
outsl
fimull
vmovlps
xor
or
adc
out
clc
push
fcomps
xchg
push
mov
repnz
pushf
mov
xor
jo
mov
cltd
mov
dec
loope
cmp
jae
sbb
mov
cmpsb
movsl
pop
insb
adc
loopne
sbb
add
jmp
faddl
popf
imul
xchg
xor
int3
xchg
add
jo
rorl
mov
xchg
pop
cmp
dec
xor
jbe
sub
sbb
lahf
pop
jmp
lods
adc
ror
js
montmul
cmpsb
add
mov
rcrb
or
das
mov
push
in
mov
imul
stos
call
jle
mov
std
inc
insb
in
les
inc
imul
outsb
jbe
cld
xchg
lret
cmp
mov
data16
xchg
xlat
ljmp
mov
and
cmpb
xor
pop
dec
rorb
adc
push
lret
xchg
cltd
add
push
sbb
call
stc
int3
psllw
xor
jo
daa
roll
outsl
jge
sub
icebp
or
cs
and
mov
faddl
push
adc
out
mov
jecxz
pop
dec
repz
xchg
sahf
pop
cld
cld
clc
cmpsb
add
pop
jne
repz
inc
loopne
in
out
dec
or
sbb
orl
iret
xchg
movsb
pop
mov
cmp
jp
sub
int3
pop
in
mov
pop
test
jne
add
push
push
or
ja
jge
out
xchg
sub
sbb
pop
mov
test
vpacksswb
lds
test
pop
mov
lcall
jns
mov
js
push
sub
add
and
lcall
pop
test
call
in
movsb
dec
xor
ds
push
ljmp
mov
ja
stc
rorb
mov
je
aam
sub
shrb
out
xor
mov
mov
in
mov
fisubrs
sub
dec
enter
xor
fstps
lret
mov
ljmp
aas
xor
dec
add
pop
xor
popa
or
jns
push
push
movsb
repz
and
inc
jl
ljmp
out
mov
xor
cmpxchg
or
data16
out
push
je
int
mov
cmp
xor
fcomps
mov
cmp
push
es
shrb
jo
add
jmp
add
popf
cmp
stos
cltd
aas
pop
xor
jmp
xor
push
cwtl
and
push
shll
mov
xorb
pop
aad
ficoml
ret
fs
pusha
jo
adc
arpl
cmpsb
cltd
sbb
out
mov
mov
mov
push
mov
jnp
stos
and
xchg
and
test
ljmp
sbb
data16
sub
addr16
loop
sbb
or
and
pop
pop
aad
cmp
je
adc
shll
mov
mov
mov
dec
cli
mov
dec
imul
int
jne
push
fisubl
adc
jno
jmp
adc
mov
sub
or
movsl
pop
ret
test
xorl
push
adc
scas
movsb
fnsave
push
pop
test
mov
loopne
mov
jns
push
xchg
mov
in
movsb
aaa
push
inc
inc
cld
xor
sti
ja
lods
in
add
adc
jge
ja
data16
or
adcl
and
mov
jle
das
pop
dec
add
xchg
daa
sbb
and
sbb
ss
arpl
das
jb
or
push
xchg
cmp
clc
out
pmaxsw
out
xchg
jb
push
and
pop
push
jbe
mov
es
out
xor
pop
fiadds
add
mov
xor
loopne
jns
push
lret
clc
xor
leave
sub
xchg
out
add
dec
xchg
cld
popa
push
mov
shlb
mov
adc
cmp
faddp
or
stos
das
or
mov
lea
lret
test
insb
into
and
pushf
xor
test
xor
test
cs
inc
pop
and
test
pop
pop
jmp
cs
push
clc
push
mov
jle
cmc
sbb
push
pop
jmp
fdivr
stc
subl
stos
hlt
adc
jp
and
adcb
xor
cmp
add
data16
xor
pop
cmp
ret
inc
cmp
cmp
adc
mov
mov
mov
add
cltd
adc
cmc
aaa
ret
pop
dec
fs
daa
dec
lcall
das
aam
pop
es
lods
mov
leave
lods
xchg
fnstenv
in
dec
sub
cmp
js
push
pop
inc
inc
ret
xor
jbe
loopne
lods
shl
xor
push
mov
fdivs
pop
insl
adc
cmpl
jg
adc
fwait
aad
fwait
stc
mov
add
add
or
mov
es
popa
adc
in
adc
repnz
or
mov
aam
cmp
xchg
xchg
xchg
push
stc
add
or
hlt
xor
cmc
and
adc
int
rcrb
inc
push
out
scas
sbb
iret
cmp
fwait
sbb
cmp
insl
int
sub
nop
adc
mov
xchg
jmp
push
ficoml
jne
into
popa
out
hlt
call
xchg
sub
or
ficoms
mov
lcall
mov
jb
sub
xor
loopne
clc
mov
in
insl
pop
pushf
test
cmpsb
lods
cwtl
int
bound
rcll
xchg
scas
fmull
adc
sahf
dec
push
je
jmp
fcomps
mov
andl
das
int3
pop
addr16
sbb
jnp
adc
dec
sbb
jge
mov
sbb
mov
push
lcall
mov
ret
sbb
pop
jl
out
dec
push
sbb
xchg
inc
in
add
jo
mov
push
out
mov
call
sbbb
or
and
in
push
and
call
xchg
and
lret
es
mov
add
int
movsl
subb
adc
in
lcall
push
popf
insl
cmpsb
push
into
jge
cmp
stc
les
sbb
or
add
xor
negb
arpl
fwait
imul
or
cli
pop
adc
stos
imul
mul
aas
add
adc
enter
push
sbb
mov
fistl
out
xchg
or
add
adc
mov
out
andb
in
sub
ret
mov
push
fcoml
mov
mov
iret
mov
cld
pop
sub
mov
add
sub
add
inc
dec
das
into
lock
iret
lods
fs
sbb
shrb
lahf
aaa
mov
mov
jne
adcl
cmp
jl
xchg
push
cmp
mov
lds
data16
jg
xor
cmpsl
and
das
enter
aas
fs
pmulhuw
xchg
and
fdivr
mov
dec
mov
xchg
mov
xchg
aas
add
lea
pop
std
aas
push
sbb
sbb
pusha
mov
test
mov
push
in
mov
add
addr16
adc
jecxz
in
or
mov
mov
int
scas
sub
ljmp
cmc
mov
push
add
shll
push
xchg
add
rcrl
dec
and
outsl
pop
jg
add
repz
jns
loopne
sub
mov
shl
outsl
arpl
fcmovnbe
lods
cmp
incb
sbb
xlat
ja
push
adc
or
fs
add
rcrb
in
sbb
xor
sbb
cmc
push
push
je
dec
push
and
orb
mov
adc
cld
sbb
loopne
pop
shll
push
aaa
pop
dec
fsubl
scas
pop
fs
mov
add
cmp
hlt
addl
lea
mov
jmp
movb
inc
jp
dec
add
xor
sbb
insl
inc
push
stc
sbb
push
fs
mov
pop
jle
sub
rorl
into
pop
mov
pushf
sti
stos
loopne
pop
jne
stos
adc
int3
je
rcr
fmull
mov
push
fnstenv
jecxz
mov
lds
push
xchg
push
xlat
movsbl
push
mov
test
out
mov
ljmp
pop
sbb
push
xor
call
mov
popf
cltd
inc
cwtl
loopne
scas
iret
mov
or
ret
imul
push
loope
sub
xor
adc
pop
insb
jmp
lods
daa
frstor
stc
pop
sbb
cmp
mov
rol
mov
push
es
jbe
repz
aas
idivl
sbb
outsl
sbb
or
adc
shrb
ds
hlt
xchg
pop
leave
inc
rorb
inc
mov
rcl
in
fs
fidivrs
or
mov
jge
ljmp
sbb
jle
jnp
fldt
xor
gs
and
and
int
sahf
ja
add
cmp
sbb
outsl
mov
lods
pop
xchg
jb
popa
add
or
das
mov
insl
sti
stos
inc
fidivrl
std
mov
xchg
out
fmull
cmpsl
rcll
push
stos
pop
out
leave
scas
fdivl
push
in
les
pushf
push
xchg
pop
push
sahf
fwait
cmp
xchg
in
jg
aas
jp
mov
sbb
das
mov
mov
jge
loope
test
pop
cmp
or
mov
mov
push
xchg
out
pop
dec
das
pop
mov
loopne
cmp
and
imul
into
sbb
sahf
mov
mov
movsl
in
pop
cmpsb
test
adc
xor
inc
xchg
jge
stos
lods
sub
lock
ds
sbb
push
mov
cmpsb
jo
push
jnp
sbbb
divl
and
dec
pop
add
mov
pop
or
mov
sti
xor
inc
xorl
dec
stc
jo
clc
ret
ffree
xchg
sub
inc
mov
dec
notb
cmpsl
enter
aas
or
je
scas
scas
push
bound
fidivs
cli
dec
mov
mov
cld
inc
jecxz
movsb
mov
scas
stos
jge
movsb
pmulhw
js
popa
add
cwtl
cmc
daa
jmp
cli
xchg
adc
pop
stos
adc
push
adc
ds
cli
pop
enter
dec
cmp
call
xchg
pusha
dec
lret
xchg
insl
xchg
cli
pop
subb
es
aas
mov
mov
clc
cmp
imulb
imul
mov
xor
and
mov
jp
sti
inc
adc
push
and
pop
stos
xchg
xor
push
adc
fidivrl
loop
and
mov
dec
push
scas
subl
cmp
repz
or
idiv
test
add
icebp
push
push
or
adc
xchg
fwait
inc
lea
mov
cmpsb
sar
enter
lock
or
fmuls
push
push
cmp
mov
bound
mov
fwait
mov
lods
inc
ja
and
mov
fistpl
jecxz
or
push
and
adc
fmul
andb
push
icebp
ret
stos
das
push
pushf
clc
dec
pop
xchg
ds
jg
out
or
inc
fsubrs
jne
and
pop
mov
pop
adc
mov
xor
pop
lret
xchg
xchg
aam
sub
dec
pusha
cmp
adc
mov
idivb
xchg
divl
pop
push
xor
jle
scas
push
and
imul
sub
mov
cmpsb
add
mov
jno
cmpl
push
pop
fs
cmpl
test
mov
bound
mov
xchg
es
lds
add
nop
mov
mov
jbe
mov
mov
ss
adc
cmp
push
sbb
add
out
shll
add
sahf
mov
cmp
dec
pusha
cmp
sbb
lds
gs
dec
std
or
das
xchg
imull
nop
sub
les
out
outsb
addb
outsb
lods
pop
push
mov
stos
adcl
testl
mov
sbb
inc
xchg
or
out
pusha
das
push
in
andl
int
sub
repnz
inc
pusha
rcrl
mov
xchg
in
sub
imul
popf
xchg
or
jg
dec
test
inc
repz
cmp
mov
jne
add
mov
xchg
inc
lock
outsb
mov
sarb
pop
icebp
xchg
mov
xchg
and
insb
push
gs
cmp
xchg
inc
cmp
mov
adc
sub
mov
aaa
xlat
pop
mov
das
sub
dec
adc
jecxz
xchg
sar
push
ret
or
pushf
cld
xor
mov
push
aam
fldcw
mov
sbb
sbb
and
inc
js
or
repz
push
adc
js
stos
push
jp
sbb
pop
push
xor
sarl
xchg
pop
sbb
in
shrb
xchg
mov
xor
adc
inc
sbbl
jbe
out
aaa
outsb
test
loop
xor
es
rcr
or
mov
add
xchg
jmp
lcall
mov
jmp
pushf
sub
add
add
jne
int3
cmp
mov
inc
pop
cmpsb
xchg
popf
mov
int3
call
test
cmp
movsl
or
adcb
mov
pop
cmpsb
shlb
es
inc
mov
lock
mov
push
mov
rcrl
lret
in
je
lock
jne
cmpsb
clc
popf
push
xchg
and
mov
gs
nopl
call
sub
loopne
jmp
movsl
mov
pop
inc
dec
xchg
and
adc
pavgw
jge
and
sub
pop
popl
lret
sbb
lds
rcr
mov
add
or
and
adc
mov
or
rcrl
aad
push
mov
insl
xlat
out
fcomps
xor
push
and
fsubrp
movsb
jne
sbb
test
jp
insl
xor
mov
fucom
push
outsl
stos
negl
and
pop
cmpsb
shr
das
js
popa
fucomip
and
mov
xchg
mov
fisttpll
fnsave
outsb
cmpsb
addr16
popf
sub
mov
cmpsb
jo
mov
repz
loopne
mov
add
aas
mov
scas
pop
ret
cmp
mov
xor
repnz
pushf
icebp
lock
and
and
and
es
shll
pushf
test
daa
rorb
in
out
fwait
outsb
pop
popf
fldt
mov
jmp
cltd
rclb
cmc
sub
test
add
test
xchg
ret
ljmp
pushl
scas
stos
aam
jo
rcrb
gs
add
xor
out
or
sbb
add
mov
in
dec
push
mov
and
cltd
pushf
out
inc
pop
xor
out
sbb
loopne
inc
sbb
add
ss
mov
inc
and
jecxz
dec
and
push
push
xor
daa
cmp
call
int3
pop
in
push
jb
sbb
push
nop
iret
or
lods
pop
sub
and
mov
es
pop
mov
and
aas
sbb
leave
xchg
push
int
sbb
xchg
cmpsb
std
sahf
daa
push
inc
mov
xchg
pop
dec
rolb
test
in
dec
int3
rcrl
loope
push
cmp
stos
pop
pusha
adc
cmp
mov
enter
and
xor
jg
dec
incl
mov
fs
rorb
lods
mov
shl
or
in
mov
lock
xchg
fsubp
idivb
insl
ss
push
push
notl
repz
scas
aad
add
popf
ja
cli
xor
mov
mov
mov
scas
fwait
shll
sbb
test
imul
insb
cmc
jmp
pop
xchg
mov
jle
sub
pop
movsl
mov
insl
cli
pop
xor
mov
mov
mov
test
loope
and
jns
idivl
xor
aaa
pop
lahf
add
mov
inc
fwait
cmpsl
and
inc
jo
outsl
push
cwtl
xchg
hlt
fmull
jecxz
gs
aad
inc
in
cmp
inc
mov
insb
add
sub
sub
inc
scas
jb
subl
mov
or
imul
je
cld
push
inc
sbb
lcall
lods
rol
hlt
mov
imul
test
int
sbbb
out
sbb
jp
cmp
or
hlt
insl
outsl
lods
xchg
out
adc
cmc
arpl
aas
mov
or
dec
jl
xor
pop
sbb
stc
stos
push
sbb
mov
pop
mov
popa
call
jne
dec
inc
push
jecxz
mov
jg
xchg
cmc
mov
mov
loop
push
mov
addb
rcl
adc
fimull
aaa
sbb
js
pop
aaa
jle
or
cmp
push
add
mov
adc
xchg
mov
add
mov
cmpsb
movsb
xor
mov
push
sbb
imul
inc
add
and
jmp
into
xchg
push
in
dec
dec
xchg
stc
xchg
push
aaa
bound
and
sbb
loope
fcmovnbe
idivl
inc
sbb
imul
in
pop
push
rol
add
pop
sub
movsb
clc
pop
data16
loop
or
add
jne
sub
mov
test
inc
dec
pusha
or
adc
inc
sub
cmp
mov
mov
je
popf
xchg
sahf
jnp
push
sub
jle
jecxz
pop
push
xchg
pop
jo
push
and
shrb
dec
rol
int3
outsb
iret
inc
ja
nop
rep
jle
in
mov
fstpt
push
jl
sbb
xor
adc
or
lea
outsl
in
iret
pop
ficoms
into
push
out
mov
imul
pop
sub
nop
je
aam
sbb
movsl
pop
imul
push
cs
add
fadd
mov
lds
fs
jns
bound
dec
mov
icebp
and
stc
insb
or
data16
scas
fwait
hlt
out
ljmp
insl
sub
cmp
adc
cmp
pop
andl
out
and
xor
aas
test
xchg
jns
mov
repnz
mov
rol
inc
jae
mov
xchg
push
xchg
push
inc
push
les
gs
and
cwtl
push
xchg
xor
lods
mov
shrb
push
data16
mov
pop
xlat
lret
cltd
ret
push
mov
lock
sub
rcrb
jmp
xor
jmp
dec
mov
popa
in
push
inc
push
pop
mov
insl
and
xorl
jmp
pop
add
jecxz
adc
and
xchg
push
lret
lods
push
mov
mov
int
je
jo
inc
mov
lods
add
mov
sbb
sahf
nop
movsb
into
xchg
movsb
jmp
and
jecxz
xchg
sbb
das
pop
xor
es
shll
gs
mov
ja
sbb
and
xchg
mov
mov
pop
xchg
fs
iret
lods
or
mov
nop
mov
std
mov
push
cmp
loop
mov
in
sbb
jg
outsl
push
je
sub
stos
jl
and
jg
into
pop
clc
jle
mov
sub
repnz
leave
nop
dec
popa
rcr
repz
push
and
mov
cltd
in
out
xchg
push
jo
pusha
mov
pop
outsb
aad
sub
mov
or
in
push
inc
ret
mov
adc
dec
in
loope
fiadds
push
sarb
adc
sub
jg
push
add
nop
in
mov
mov
or
roll
push
cmpsl
adc
mov
flds
pop
xor
popa
lods
imul
push
add
mov
in
jge
mov
xorb
sarl
cmp
and
test
add
shll
aam
out
fwait
aas
mov
aaa
in
xchg
out
int3
leave
push
aam
stos
and
adc
jo
sti
subb
add
int
xchg
sub
gs
mov
insb
ljmp
fcomps
sbb
bound
xchg
scas
repnz
sbb
inc
cmp
in
ret
rep
iret
or
sbb
adc
aad
cld
dec
push
rolb
int3
rorb
cld
or
jo
sbb
jge
loopne
test
gs
lcall
arpl
mov
je
fdivrs
cltd
out
jecxz
cwtl
cmp
push
ret
iret
push
mov
cli
push
nop
sub
stos
xchg
or
pop
out
cmp
cld
jmp
lods
sub
out
imul
fs
push
pop
loop
int
push
mov
ds
pop
jle
jae
pusha
test
mov
bound
push
xchg
divb
cmpsl
jne
es
mov
lods
and
cmp
ljmp
mov
andl
mov
dec
les
fmuls
sbb
xchg
aam
sub
aam
push
push
pop
pushf
mov
pop
fstps
sub
xchg
mov
add
mov
mov
out
jns
nop
int
cmpsl
sbb
stc
cmc
adc
out
imull
mov
bound
pop
les
jmp
lcall
xchg
aas
cltd
aas
pop
sahf
push
mov
cmp
sub
enter
push
xor
lods
mov
hlt
outsb
push
in
jge
xor
popf
mov
nop
mov
fiaddl
xchg
insl
pop
lcall
sub
xor
jmp
fisttpl
dec
lcall
add
or
addr16
mov
ljmp
cmp
adc
lock
xchg
cmpsb
and
std
adc
icebp
or
xchg
inc
int
mov
or
push
repnz
loop
out
jae
jnp
rorb
push
test
jne
push
add
loop
iret
xchg
pusha
lcall
in
stos
enter
lahf
cmp
jae
xchg
es
dec
cmpsl
cmp
dec
test
cs
ss
sahf
add
aas
sub
mov
popa
into
addr16
push
ret
adc
or
test
or
lds
push
je
shrl
outsl
mov
mov
cmp
ret
sahf
in
dec
outsb
mov
inc
pop
xchg
sbb
jo
mov
adc
sbb
fistl
fs
repz
cmpsl
fndisi(8087
add
xorb
jge
fcomp
mov
fdivrs
sub
xchg
and
cmp
aad
jl
or
push
imul
add
sti
repz
in
mov
dec
xorl
sub
jl
out
je
adc
jp
cld
aad
shll
dec
inc
xor
push
pusha
push
push
jecxz
sbb
cld
adc
mov
test
in
mov
test
push
insb
out
adc
pop
push
pop
xchg
shrl
jne
jp
cmc
in
fadd
dec
xchg
testb
sbbb
adc
sbb
mov
dec
rorl
out
fcomp
inc
dec
outsl
imul
pop
scas
jb
das
pop
fists
outsl
cmpb
mov
call
jno
jmp
cwtl
cmpsb
pop
dec
bound
movsb
shlb
test
dec
movsb
sub
pop
xlat
ja
aaa
cs
fisttpl
lea
sub
lds
xlat
sti
popf
pop
dec
xor
ja
gs
inc
xor
inc
jmp
sti
sti
lahf
out
fdivr
lock
xor
pop
lahf
cmp
iret
js
push
ljmp
pop
mov
sbb
adc
sub
push
imul
fwait
aam
movsb
lods
sti
outsb
mov
stos
mov
xchg
jl
ss
cli
push
jbe
xchg
push
sub
int3
jge
mov
fwait
mov
andl
imul
icebp
test
pop
out
outsb
mov
jbe
sub
adc
call
inc
jge
addb
xchg
or
push
push
cltd
cmp
test
int3
movd
push
mov
sub
push
popl
test
mov
sbb
jb
sti
pop
aad
aaa
adc
aam
mov
aaa
lret
es
jne
movb
pop
iret
daa
loop
imul
lds
xchg
decl
incb
test
mov
or
repz
sbb
xchg
in
xor
sbb
push
outsl
pop
out
imul
jle
and
div
jne
jae,pn
loopne
adc
mov
outsl
jae
pop
adc
inc
or
movsl
adcl
inc
mov
mov
jns
pop
mov
test
movsb
xchg
adc
adc
imul
iret
push
scas
and
in
mov
xchg
in
imul
popa
inc
pop
loopne
mov
sub
mov
bound
cmp
inc
sbb
sub
mov
lret
push
addr16
pop
xchg
mov
in
iret
jns
inc
in
xor
test
mov
mul
mov
out
lods
lods
aam
cmc
or
movsl
or
mov
in
dec
lret
adc
fwait
es
sub
push
push
outsl
packsswb
or
add
das
in
xor
rclb
daa
andnps
in
and
jns
ds
ret
jo
push
jge
or
xor
add
lret
or
jmp
xor
xor
xchg
sbb
add
lahf
inc
daa
xchg
jl
lods
aaa
sub
jbe
aam
inc
sub
imul
jns
cmp
and
movsb
inc
cltd
sub
jno
mov
adc
sti
cmp
shlb
decl
inc
lods
jle
into
push
fwait
lcall
add
test
dec
popa
out
aam
scas
subb
nop
add
push
fstpl
jmp
shll
popf
ds
jg
jb
push
jp
xchg
push
cmp
and
jmp
fldl
mov
mov
jmp
loope
leave
popa
je
lret
sar
adc
call
imul
addr16
repz
leave
pop
push
dec
push
push
xchg
pusha
call
iret
push
push
pop
push
sbb
or
hlt
adc
movsb
push
imul
sbb
cmp
pop
cmp
dec
je
inc
movsl
nop
cmpsl
sbb
dec
popf
dec
xor
pop
sbb
inc
pop
mov
rcrb
jne
and
sbbl
fs
cmpsb
loope
jnp
loopne
jnp
out
pop
mov
dec
subb
int3
dec
fld
inc
jecxz
lret
mov
jnp
movsb
or
repnz
jg
scas
jge
loop
push
scas
pop
cs
lret
push
lea
mov
je
insl
cmp
cli
stc
or
scas
or
adc
mov
xor
cmp
int
inc
jle
jge
mov
pop
pop
rol
cmp
cmp
pop
stos
ret
test
ja
icebp
jp
lock
test
cmp
rclb
dec
jmp
sub
inc
jo
leave
and
scas
ret
neg
mov
cmp
xchg
idivb
pushf
add
cmp
addr16
dec
cmp
mov
cmp
cmp
ret
add
jns
in
cmpsb
jp
jl
pop
imull
dec
lock
and
call
movsb
xlat
orl
xor
mov
pop
das
gs
adc
cmc
pop
pop
cld
repz
xchg
inc
ss
push
fsubs
bound
jae
mov
fnstenv
into
loope
mov
and
sbb
popa
rclb
addr16
push
sub
data16
add
jns
iret
pop
push
lret
pop
mov
mov
mov
icebp
movsb
fwait
push
andb
and
mov
mov
das
push
das
pop
cmpb
jg
inc
ret
fs
jae
div
inc
testb
mov
jmp
mov
lret
scas
dec
mov
jp
pop
pop
xor
in
mov
xor
fidivl
lock
mov
or
xor
jno
lds
xchg
inc
in
xchg
xchg
adcl
cmpsb
xchg
xlat
cld
push
or
rcrl
stos
pop
test
mov
xorl
sub
and
int3
jnp
faddl
xchg
icebp
lahf
repz
out
pop
lret
add
nop
sbb
cmp
push
dec
cmpsb
das
arpl
es
mov
les
cltd
call
enter
pop
xchg
jmp
jae
insb
sub
mov
push
mov
lea
xor
cmp
xor
stos
imul
pushf
mov
hlt
pop
mull
mov
jg
ljmp
push
gs
dec
dec
add
ret
loope
stos
scas
scas
mov
xchg
dec
jns
pop
add
jae
jne
stc
sub
mov
mov
add
inc
pop
pop
xor
ljmp
lret
inc
adc
adc
std
andb
mov
mov
test
or
mov
xorl
xor
mulb
xor
xchg
xor
call
cmp
loop
xlat
inc
push
jecxz
ja
dec
push
dec
sub
cmp
in
fpatan
ret
ret
cmp
mov
mov
or
aas
jo
push
out
push
inc
dec
pushf
push
mov
ds
addb
lods
test
mov
sub
push
sbb
out
lods
cld
xor
in
loope
xchg
xchg
pop
xorb
inc
sub
mov
loopne
stc
loopne
or
sub
mov
xor
mov
dec
scas
xor
mov
psubb
repnz
mov
test
jbe
sbb
add
push
or
in
insl
inc
sub
lahf
inc
stos
fcmovnu
sarb
fwait
mov
sub
jno
sbb
mov
stc
pop
add
icebp
lret
sub
cmp
in
ds
inc
data16
or
adc
test
mov
daa
inc
fldcw
and
jl
or
or
daa
cmpsl
sbb
sahf
test
cmp
xor
arpl
je
test
cmp
mov
ds
out
mov
lcall
xchg
jno
shll
outsb
cltd
cmpsl
and
mov
mov
in
sti
inc
jnp
mov
adc
inc
mov
push
mov
inc
mov
xchg
inc
adc
jae
ss
fldenv
mov
mov
dec
mov
inc
cs
test
sti
lcall
ror
jae
lods
test
gs
sbb
scas
notl
inc
leave
mov
cmp
jno
js
dec
inc
out
lret
and
sub
sub
icebp
test
aas
and
dec
cmp
out
add
mov
std
xchg
pop
xor
add
dec
fsts
jmp
mov
sbb
xor
dec
ret
mov
fsubl
rcl
xchg
push
imul
scas
inc
cld
sbb
push
jne
dec
xchg
push
out
pop
fcomps
pop
pop
push
in
dec
cmp
mov
cs
jp
dec
and
jns
ljmp
movsb
call
mov
leave
sbb
cld
cli
ljmp
push
stos
sbb
sub
jae
jg
sarl
popa
jb
lret
xchg
sub
jb
decb
sbb
lret
fs
mov
gs
subl
xor
jmp
test
adc
movsl
add
inc
je
pop
or
into
pop
jecxz
fwait
sub
mov
fcompl
roll
cmpl
xchg
outsl
sub
bound
loopne
jnp
cmpsb
mov
mov
add
sbb
mov
inc
xlat
orb
out
test
call
fnstenv
lods
jp
lcall
sub
pop
ss
push
or
inc
cmp
loope
dec
sub
movsl
fisubl
lea
aad
das
xchg
test
sub
pop
lret
popf
sbb
sarb
adc
push
push
js
sbb
pop
jnp
sbb
xlat
xchg
int
fdivrs
aaa
in
stc
pop
dec
mov
and
out
addr16
xchg
enter
outsl
sbb
out
out
or
fs
outsl
inc
scas
inc
mov
ds
stos
mov
fldcw
out
out
or
add
sub
stc
int3
mov
mov
std
outsb
sahf
mov
lret
notb
in
sbb
test
mov
pop
push
xchg
fildll
popa
sti
aam
push
out
push
jo
push
lea
icebp
hlt
hlt
add
xchg
push
sbb
jge
dec
push
adc
sbb
sbb
popa
lds
xchg
lret
xor
push
in
mov
sub
pop
das
jecxz
inc
adc
out
aaa
push
in
xchg
or
pop
push
fiaddl
dec
mov
movsb
flds
sbb
inc
jg
ljmp
ficompl
mov
ljmp
sub
insl
sahf
in
testl
dec
sub
cs
arpl
mov
cmpl
arpl
loope
inc
or
aaa
ljmp
mov
mov
loop
inc
cmp
into
sbb
ja
sub
sub
or
pop
imul
push
dec
and
lcall
pop
in
mov
out
movsb
cwtl
mov
cs
push
roll
xchg
data16
adc
mov
into
add
sub
cli
cs
int3
imul
div
mov
and
sub
loope
aam
xchg
lods
emms
sbb
and
jmp
lea
pusha
jmp
rolb
rorb
xor
pop
inc
outsl
push
aas
xlat
insl
dec
fsubs
stos
imull
push
pop
sbb
in
mov
inc
mov
and
push
ret
rcrl
pushf
hlt
or
sub
sahf
bound
inc
cli
and
push
xchg
cmp
enter
fadds
jo
testl
loopne
loop
sbb
cld
dec
addr16
test
mov
enter
jns
hlt
cwtl
xchg
cmp
cmp
add
jp
cltd
push
xor
push
call
xor
jbe
scas
jbe
xchg
jmp
out
jbe
inc
sahf
pop
and
jle
mov
cli
ficompl
ficoms
cs
lcall
sub
ljmp
cwtl
mov
not
mov
jnp
outsb
dec
mov
mov
inc
test
rolb
pop
pop
or
lods
xchg
cld
adc
sub
daa
dec
loop
cmp
sub
popf
pop
in
ret
mov
jne
leave
adc
mov
mov
sub
jl
in
imul
insb
mov
cmp
insl
mov
mov
add
cmc
or
mov
lods
mov
fwait
jno
push
rcrl
push
fs
fs
inc
js
mov
sahf
pop
sub
icebp
imul
jo
push
dec
pop
test
loop
push
push
push
pop
test
xor
pop
sbb
add
mov
pop
movsb
repz
xchg
inc
xchg
mov
jns
enter
or
loopne
mov
mov
out
pop
cwtl
sbb
lahf
sub
xor
lret
dec
sub
outsb
ficomps
ret
pop
shlb
sub
jnp
mov
inc
cmpsb
cltd
bound
int
mov
lret
addr16
flds
xchg
sbbl
popa
int3
addr16
push
mov
mov
sbb
cli
mov
push
inc
std
cmc
stos
pop
out
xchg
in
jns
lahf
int
lds
leave
loopne
push
jae
jl
mov
add
rcll
sbb
mov
push
js
shlb
repz
inc
mov
pusha
mov
shlb
inc
sbb
nop
pop
inc
push
shl
std
mov
push
sub
js
xchg
cmp
push
mov
dec
xchg
sub
mov
in
cmp
aam
add
pop
inc
mov
imul
dec
sub
stos
cmp
mov
fcmovu
cs
js
push
aad
mov
add
xchg
insl
or
mov
jl
jle
jns
mov
into
sub
xlat
or
push
out
insl
mov
mov
pushf
sahf
push
xchg
push
xchg
in
fbstp
mov
decb
sbb
es
add
icebp
daa
inc
mov
mov
and
popl
cmp
add
cmp
push
adc
out
loop
or
andl
lds
jp
mov
in
pop
xor
push
add
mov
es
and
pop
adc
inc
mov
sbb
in
xchg
mov
das
push
jle
xchg
btcl
nop
roll
jnp
pop
addr16
mov
jb
inc
rcl
dec
mov
sbb
enter
into
adc
xchg
lods
jb
push
rcll
inc
mov
sub
mov
mov
insb
and
cmpsl
aam
mov
and
inc
xchg
in
test
cmp
psllw
sbb
sar
mov
push
in
lds
or
inc
inc
jae
push
daa
iret
or
shlb
pop
dec
pop
in
pop
dec
xor
dec
aas
mov
lret
sbb
rcl
cmp
jno
cltd
loope
cmpsb
aas
shr
mov
xor
out
movsl
cmp
pop
sti
imul
adc
sti
test
push
jbe
int3
pop
sub
push
push
dec
loop
mov
fs
cmc
cmp
mov
popf
mov
sub
and
xchg
mov
jo
jmp
in
cmp
test
or
or
and
sub
mov
pop
adc
cld
lret
sbb
ljmp
icebp
lods
adc
inc
push
sub
nop
jae
pop
das
sarb
je
jbe
fstps
cmp
int
mov
cmp
cmpl
ret
daa
xchg
ficoms
xchg
or
xchg
mov
mov
and
dec
dec
sub
shr
lods
push
int3
add
sub
xor
xchg
push
mov
mov
das
sbb
stos
fisttpl
push
js,pt
pushf
stc
cmpsl
mov
loop
std
jns
lcall
push
lcall
inc
mov
add
xor
xor
mov
and
xlat
enter
dec
mov
sub
test
pop
lods
stc
shl
dec
sbb
ret
js
sub
popf
push
xchg
xor
addl
jb
mov
add
lock
pop
fisttpl
jmp
jp
adc
jmp
adc
ffree
inc
das
leave
cmp
syscall
sub
shr
ret
test
scas
fsubp
jb
iret
fsts
add
rcl
mov
inc
icebp
mov
stos
xchg
aas
inc
mov
lods
and
xchg
mov
adc
cmp
out
inc
xchg
push
dec
mov
push
imul
mov
cltd
arpl
scas
cmp
sub
cmp
inc
rcll
push
imul
ja
daa
gs
mov
mov
sub
dec
lods
ja
fildl
test
cmc
aad
flds
out
jp
adc
icebp
fldl
es
push
loop
ja
push
push
xchg
push
mov
std
lods
pop
ja
out
or
cmpl
xchg
cmc
push
dec
xor
shrb
push
jmp
xchg
add
jae
pop
sbb
sub
push
in
mov
cs
aas
cmpsb
out
outsl
mov
mov
mov
enter
sbb
mov
push
stos
cli
mov
sarl
lods
xor
add
sub
fistps
jp
les
les
and
repz
mov
sti
fsubp
cmp
and
and
sub
mov
xchg
xchg
mov
rcrl
inc
fnstsw
push
push
xchg
aas
and
rolb
incb
pop
mov
out
orl
xchg
push
cwtl
out
test
sbb
sub
sbb
dec
push
cmc
es
mov
test
addr16
cmpsb
gs
les
push
add
mov
adc
mov
lahf
call
cmp
loop
loope
xchg
mov
jnp
cltd
inc
xor
jno
xor
int3
fisubs
or
cmp
out
push
jl
pop
ret
imul
stos
dec
ds
and
fistps
js
jmp
call
inc
dec
sarb
repz
icebp
bswap
jecxz
outsb
mov
xchg
ret
mov
scas
imul
negl
arpl
adc
mov
dec
shl
outsb
pop
add
les
xor
lock
in
imul
sbb
mov
add
mov
imul
or
jle
push
jg
leave
shll
fcmovu
pop
dec
adc
xchg
pop
mov
popa
shrl
push
jmp
or
fadds
in
add
xchg
cli
test
push
fistpll
mov
cld
pop
sub
aaa
lock
add
adc
mov
lds
adc
push
pop
fdivl
popf
cld
mov
or
xchg
ret
lret
mov
jge
xchg
cwtl
in
mov
jno
aad
pop
pusha
adc
dec
cmp
lods
add
sub
inc
ja
bnd
jl
aam
dec
mov
or
aaa
pop
mov
sbb
jae
xchg
rcrl
push
mov
insb
dec
repz
es
push
push
jns
outsb
inc
js
mov
add
cld
mov
xor
mov
fists
call
jbe
in
mov
mov
jge
mov
ret
je
ss
or
rcr
xchg
out
push
cmpsb
pop
jns
or
sub
fdivrs
sub
in
js
pop
add
and
imul
jne
ret
inc
call
pop
mov
inc
ljmp
sub
outsb
iret
cmc
xchg
enter
testb
push
inc
sbb
xchg
lods
and
sbb
xchg
enter
xorl
stos
xchg
mov
dec
push
push
or
push
test
mov
cmp
pop
andl
outsl
jl
test
into
mov
sbb
int
mul
mov
xchg
pushf
les
sti
sub
add
sub
loope
xchg
sub
aaa
stos
xchg
repnz
pusha
add
or
xor
mov
push
xchg
dec
sub
mov
fs
adc
jo
mov
mov
xchg
out
popa
pop
adc
in
aad
in
repnz
pop
add
adc
repz
mov
cs
in
ficompl
mov
and
push
in
lret
or
mov
inc
filds
sbb
lock
mov
mov
adc
mov
loop
mov
rolb
das
in
xor
mov
cld
pop
loop
repz
loopw
sbb
lock
ret
pop
xchg
and
sub
or
out
subl
movl
fdivrs
idivb
xchg
pop
xchg
sub
arpl
mov
dec
mov
or
mov
mov
pop
cld
int
data16
sahf
iret
adc
shl
jae
test
leave
fisttpll
jb
or
push
shll
rcrl
ds
cmp
lds
popa
push
fs
loope
int3
dec
jno
scas
pop
fwait
xchg
and
jg
push
sbb
sbb
pop
rolb
jnp
mov
aad
pop
xchg
stos
push
mov
inc
sarl
pop
loope
inc
js
push
dec
inc
mov
das
jo
sbb
mov
push
orl
pop
inc
into
stc
bound
pop
int3
push
in
add
popa
adc
or
dec
or
icebp
dec
pop
lea
fucomp
mov
or
rol
stos
out
js
xor
jg
pop
cmp
pop
jnp
dec
jns
imul
addr16
sub
loopne
in
lret
mov
sbb
xchg
lcall
jbe
inc
mov
xchg
repz
cld
cmp
insl
mov
push
addr16
lock
lods
insl
xlat
sahf
inc
adc
jp
dec
add
jne
pusha
jge
add
pop
pop
and
loopne
jg
push
mov
cs
push
pop
lods
popa
adc
push
scas
sbb
and
nop
or
enter
out
and
add
popa
sbb
mov
add
jb
lods
jmp
lcall
clc
pop
push
stc
sarl
stc
ret
sbb
sub
inc
pop
mov
aas
xchg
pop
mov
mov
dec
pop
sub
rolb
into
and
pop
stos
xchg
and
ret
rol
hlt
push
lea
hlt
pop
lea
dec
aad
pop
jl
add
scas
cmp
aas
xchg
imul
mov
inc
cmp
sub
xor
cli
and
rcll
cld
add
add
jns
push
or
ret
rorl
pop
sbbl
call
dec
cmp
fs
arpl
ja
cs
addl
repnz
shl
ret
loope
fadds
gs
sub
orl
and
in
aaa
pop
lret
ljmp
insl
sub
push
sub
fsts
orl
dec
ss
test
sub
mov
sbb
sub
xor
dec
sbb
xchg
mov
ret
cli
and
lods
jmp
lods
loope
push
fdivs
ss
and
xchg
rorb
push
inc
pop
cli
inc
cmp
mov
push
lret
adc
insb
add
mov
cmovns
pushf
push
imul
xchg
or
shrb
cwtl
into
cmp
aas
ss
loop
mov
inc
adc
gs
shlb
pop
mov
ljmp
insl
mov
push
xor
clc
inc
mov
push
leave
sub
cltd
jnp
insl
cli
sar
mov
sahf
and
imul
fnstsw
lods
sti
lods
std
push
daa
cmpsb
mov
ret
fmul
mov
cwtl
sbb
jns
cltd
mov
add
cli
dec
fwait
fs
pushf
out
mov
test
mov
sti
inc
jbe
xchg
push
adc
pop
push
lea
repz
or
jne
hlt
sub
or
out
sbb
and
sbb
and
icebp
jp
pusha
test
xchg
mov
scas
adc
pop
mov
out
mov
cltd
mov
mov
xchg
iret
data16
arpl
pop
push
pop
aam
or
mov
cmp
test
nop
or
cmp
jg
shrl
loop,pn
cmp
inc
sbb
sbb
push
nop
jb
out
outsb
repz
iret
aad
jg
rcrl
sub
pop
paddq
in
adc
or
in
xor
xor
inc
test
sub
stos
or
popl
or
loop
cmp
cmp
jp
and
inc
sub
aaa
add
or
ficompl
lds
dec
call
or
adc
adc
mov
imul
fs
mov
xor
mov
dec
fwait
mov
cli
dec
dec
pop
push
movsl
les
movsb
ljmp
neg
mov
jbe
sti
gs
orb
sub
sub
jecxz
fstpt
jecxz
fcoml
fdivrl
dec
or
add
repz
ret
pop
xchg
popf
fisubrs
roll
bound
inc
jge
sbb
loope
je
das
pop
mov
lea
cmpl
loopne
mov
fdiv
mov
fidivrs
fwait
add
jne
ja
lods
xor
adc
rolb
cld
add
jle
mov
add
jno
stc
add
cmpl
add
push
gs
in
add
adc
jecxz
mov
aad
ret
and
pop
lret
xchg
dec
xor
hlt
decl
int3
std
pop
or
mov
mov
mov
adc
imul
arpl
daa
fld
out
push
dec
push
clc
pop
mov
in
stc
mov
push
mov
jl
push
jae
jbe
icebp
psubusw
add
das
xor
in
aad
xchg
jp
or
enter
cmp
push
in
scas
cmp
xchg
iret
popa
test
cltd
mov
stc
dec
jno
push
imul
and
insl
mov
shrl
add
jae
jl
cmpsb
stos
scas
mov
pushf
inc
arpl
mov
pop
jl
cmpsl
add
jecxz
jo,pt
xor
mov
cmp
pusha
mov
in
je
jmp
mov
cltd
fldcw
sahf
sub
mov
aam
mov
out
pushf
test
test
fisubs
push
into
pop
mov
sahf
jle
and
cmp
fcomp
orl
sub
jecxz
dec
push
incl
add
inc
xchg
push
test
add
jmp
dec
fidivs
mov
add
out
lods
cmp
in
mov
ret
aam
push
in
dec
fadd
inc
mov
cs
and
repnz
std
pop
push
jg
inc
jg
mov
or
inc
test
fwait
jbe
dec
iret
sti
pop
mov
fwait
sbb
fcompl
aas
dec
add
push
in
jge
sub
fisubrl
sub
ja
lock
arpl
int
dec
add
sub
sbb
xchg
or
sbb
ret
ss
pusha
cmpsl
xchg
xchg
fcmovnbe
shlb
inc
nop
fbld
cmp
fst
add
adc
mov
jge
out
cmp
cmp
mov
pop
or
inc
out
mov
or
fsubrl
mov
lods
stos
push
lea
inc
pop
mov
mov
adc
or
in
jno
jae
sub
lods
push
adc
dec
push
gs
cmp
shl
push
lock
cmpsl
sbb
jbe
daa
ret
mov
test
and
jns
fstps
xlat
push
mov
test
and
cld
or
mov
jle
mov
mov
sbb
xchg
imul
scas
xchg
dec
mov
mov
adc
pushf
addr16
pop
lock
push
testb
or
loop
jo
lret
pop
outsb
inc
ljmp
aad
out
addb
mov
mov
adc
xlat
int3
dec
push
int3
jo
adc
je
dec
test
test
push
or
jmp
jp
gs
mov
sbb
jns
fisubrs
divl
adc
nop
out
cmp
push
cwtl
pusha
mov
mov
movsl
add
jecxz
leave
rorb
out
cmp
or
js
arpl
inc
fcomip
jns
movsl
adc
pop
push
pop
sbb
ds
push
mov
xor
and
sbb
mov
sbb
cmp
inc
jl
pusha
push
jne
dec
arpl
mov
inc
jae
int
hlt
in
and
inc
mov
in
pushf
or
jp
inc
and
adc
push
add
fiaddl
sbbl
or
mov
pop
jle
pop
out
mov
rorl
or
pop
push
jl
aas
clc
test
cltd
add
out
jmp
adc
jno
mov
loop,pn
add
push
cld
les
aaa
sub
dec
mov
cmc
repnz
sbb
shlb
mov
sbb
jmp
insb
call
jnp
frstor
mov
in
stos
testl
jecxz
popa
jo
sarl
fsubrl
shrb
pavgb
aaa
sti
xchg
sbb
cmp
popa
test
inc
cmp
jae
sub
mov
push
fidivs
and
xor
push
in
in
jno
jle
cmp
fistpl
xchg
mov
push
sub
in
stos
pop
inc
sbb
sub
dec
shlb
jge
push
adc
int3
push
xlat
int3
fnstsw
sbbl
inc
shrl
call
jb
loop
lds
adc
sub
shrb
stos
mov
call
sub
ror
adc
das
sbb
int3
pusha
dec
mov
jl
fs
mov
mov
xchg
or
inc
dec
loop
sub
repnz
mov
dec
repz
and
cld
mov
fsubrl
iret
inc
daa
int3
into
loop
or
rcr
pop
cmp
sbb
in
pop
out
cmp
movsl
dec
xor
inc
add
shll
rorl
in
sub
lahf
inc
cmp
jecxz
mov
push
iret
insl
add
dec
cld
dec
pushf
or
xchg
push
add
fucomp
flds
cmpsl
js
lods
push
jp
scas
sbb
adc
shlb
addr16
pushf
push
test
ja
dec
pop
pushf
stos
jb
mov
sahf
jecxz
inc
mov
jle
add
scas
addr16
push
call
aas
mov
out
pusha
negl
add
pushf
sbb
hlt
stc
push
jno
scas
jb
cmc
inc
add
loope
xor
mov
lret
sarl
xchg
xchg
and
or
mov
loope
insl
fnstenv
outsl
inc
lahf
bound
ss
cmp
iret
cmpsl
das
lcall
mov
mov
sti
call
add
int
sub
sahf
xlat
addr16
push
sub
loopne
xor
push
push
xor
lods
lret
in
mov
rol
insl
jle
test
adc
adc
inc
jecxz,pn
pop
push
fs
adc
test
imul
lcall
cmpsb
pusha
xor
clc
stos
loop
jmp
icebp
jecxz
mov
jae
fistpl
inc
hlt
sub
inc
cmp
inc
sbb
pop
out
test
xchg
aad
cwtl
ljmp
arpl
xchg
or
test
arpl
xor
push
arpl
sub
adc
daa
sbb
xlat
ljmp
add
movb
mov
filds
inc
jmp
mov
mov
leave
mov
mov
fwait
lcall
mov
cmc
dec
and
fldl2e
fcomps
sbb
push
mov
sbb
xchg
inc
xor
aad
mov
pushf
push
cwtl
sbb
outsl
mov
mov
fsubrs
cmp
sahf
sub
add
push
jle
into
das
adc
loopne
inc
cmp
mov
push
lods
cmc
out
out
jmp
pop
aaa
and
test
test
into
inc
dec
xchg
test
sbb
call
mov
jle
fs
sti
and
mov
fadd
pop
mov
je
inc
sbb
adc
jnp
push
pop
sub
fmul
lret
mov
jl
cmc
and
push
push
fldt
in
test
outsb
loop
mov
push
insl
inc
xlat
outsb
mov
dec
push
xchg
fisttpl
jge
push
jmp
or
out
mov
imul
mov
xchg
sbb
movsl
daa
outsl
aad
mov
daa
lods
loop
mov
out
cmpsb
sbb
inc
mov
cli
jb
mov
sub
sbb
pop
cltd
mov
lahf
jno
sbb
add
xchg
xor
gs
out
ret
iret
cld
in
dec
aad
add
in
dec
or
stc
push
add
lahf
ffree
push
sahf
sbb
sbb
add
or
repz
ret
mov
push
loope
ret
sbbl
cmp
inc
lret
lds
push
fwait
mov
loop
cld
lret
jne
fiaddl
mov
hlt
pop
cli
push
adc
mov
int
fmul
lcall
sarl
sahf
cmp
js
or
jne
hlt
dec
cmpsb
fdivrl
jb
aas
out
lds
dec
cmc
imul
inc
cli
jle
loopne
jmp
cmp
adc
imul
imul
repnz
int
ds
push
ljmp
stos
arpl
and
fwait
push
loop
mov
pop
pop
mul
data16
mov
gs
mov
pusha
or
mov
pop
popa
mov
adc
cmp
jle
fdivl
rorl
push
addr16
outsl
xchg
xchg
sub
jge
je
mov
mov
rcll
pop
rcll
sarb
add
jae
add
push
mov
shlb
lret
inc
call
sbb
adc
and
xchg
dec
js
outsl
mov
jg
scas
add
xchg
sbb
sahf
adc
xlat
add
pop
cmpsb
xchg
inc
cwtl
jmp
sub
adc
ds
fmuls
mov
mov
incb
cltd
jae
int
cmp
insb
vbroadcasti32x2
out
pop
push
enter
cwtl
arpl
and
mov
push
jmp
pop
fnsave
adc
sub
outsl
mov
xor
adc
sti
xor
mov
imul
shl
outsb
sub
std
mov
and
mov
mov
mov
xor
xor
addr16
add
incb
ljmp
fwait
loopne
mov
scas
jo
mov
cli
push
mov
ja
call
xor
clc
pop
xchg
lds
stc
adc
dec
subl
repnz
into
inc
xchg
mov
jb
cld
aam
hlt
insb
push
call
fstps
ret
hlt
or
xchg
lock
fisttpll
dec
jle
icebp
sub
xor
das
lods
mov
mov
push
ss
push
sbb
shrb
adc
sti
and
fwait
in
gs
adc
or
push
imul
jae
data16
leave
push
push
shlb
orb
jb
adc
sub
insb
sbb
mov
test
inc
xchg
mov
jnp
mov
xchg
mov
mov
jmp
das
ret
pop
mov
fs
imul
push
dec
push
push
pusha
lods
inc
jb
and
test
es
mov
inc
push
sub
popf
rol
aam
hlt
pop
das
sub
sbb
add
popf
cmp
filds
fucom
out
call
cmp
xchg
std
inc
add
repz
lret
and
fs
adc
sbb
pop
aad
add
lds
int3
cmpsl
pop
cmpsb
sub
daa
push
ljmp
dec
adc
mov
rcrl
mov
pop
mov
mov
or
mov
mov
xchg
pop
aas
cs
fstpl
test
dec
stos
test
mov
movsl
lret
cmpsb
xchg
sub
leave
scas
push
adc
repnz
flds
scas
cmp
add
mov
push
cmp
push
addr16
popa
xor
call
xor
repz
mov
js
sti
fimuls
loopne
in
popa
sti
in
stos
push
mov
es
out
lcall
sub
popl
gs
or
push
ja
fsubs
dec
mov
pushf
sbb
jmp
mov
sbb
and
out
pop
hlt
mov
lret
pop
mov
push
dec
pop
scas
jmp
sbb
mov
mov
fimuls
call
loopne
and
vmulps
lahf
or
shll
mov
xchg
mov
cmp
nop
scas
dec
incl
jno
inc
adc
inc
in
push
leave
pop
mov
js
adc
stc
mov
subb
mov
je
pop
or
test
dec
pop
int
lods
jmp
pushl
xor
jbe
rep
ss
mov
andb
stos
outsl
adc
and
cmpsl
adc
and
jbe
fwait
xlat
test
es
push
cld
test
shrl
cmp
loope
jmp
fdivs
and
stc
add
pop
push
add
xlat
mov
rcl
mov
jno
inc
insb
mov
jns
rolb
je
outsb
scas
adc
xor
fistpll
or
pop
cld
xchg
into
or
into
lods
mov
jecxz
enter
or
cmp
push
dec
xor
inc
int
add
mov
dec
add
fisttpl
les
sti
jmp
stos
push
aad
iret
push
xchg
jne
cmp
jl
inc
push
test
or
in
mov
adc
stos
xor
repz
jmp
mov
inc
sbb
sub
imul
rcrl
inc
lock
dec
fistl
push
lret
outsl
out
mov
scas
inc
pusha
add
jno
sub
mov
inc
andb
push
int
xor
lret
ss
enter
xchg
sub
int3
jge
xor
sub
ljmpw
aas
jp
push
sub
mov
push
xchg
test
addr16
or
aad
inc
icebp
daa
pop
addr16
sub
jmp
sub
in
and
inc
and
data16
adc
xchg
xchg
adc
push
jp
pop
test
sahf
mov
pop
jb
sbb
addl
cmp
cmc
lcall
cmpsb
rcrl
testb
ljmp
cmpb
outsb
add
jg
lcall
sahf
pop
jl
and
xchg
add
stos
lock
dec
fsubrl
or
push
xchg
leave
cli
and
les
pop
sbb
movd
jmp
leave
cmp
cmp
outsb
in
out
sub
sbb
rorl
shlb
fldcw
cmpl
cmp
jle
addr16
in
add
ror
push
xor
dec
fs
xchg
into
or
pop
cmpsb
jnp
dec
insb
int
pushf
mov
lds
vphsubwd
push
lret
arpl
sbb
mov
mov
jp
movsb
add
in
mov
les
leave
mov
arpl
sub
subl
scas
pop
stc
push
mov
aad
or
and
data16
inc
dec
jb
push
mov
add
ljmp
sub
test
movsl
inc
jmp
push
mov
mov
push
pop
scas
mov
mov
into
cltd
dec
push
jecxz
lcall
jp
je
loop
movsb
pop
mov
gs
stos
inc
xchg
fidivrs
loopne
popa
cltd
out
pop
adc
das
dec
mov
inc
or
iret
xor
fdivs
xchg
add
fisttpll
rclb
out
sub
aaa
jle
mov
rcrb
rcr
inc
ficomps
in
sbb
cli
push
shrb
sub
and
jae
dec
cmc
into
stc
xchg
pop
stos
adc
fistps
jbe
je
std
lds
int
jle
push
dec
sarb
sub
test
ljmp
popf
jbe
dec
cli
fadd
mov
into
loope
enter
daa
push
loop,pt
in
lahf
nop
jbe
aaa
mov
xor
xchg
lcall
dec
add
fs
mov
dec
mov
inc
cmp
out
jle
sarl
sub
in
sub
xor
mull
push
dec
pop
xchg
cmp
fs
arpl
jns
clc
ret
xlat
fistl
push
add
call
lcall
xchg
ss
cwtl
mov
addr16
pusha
cltd
xchg
ja
jg
push
fisttpl
mov
add
mov
sub
movsl
xchg
int3
mov
stos
ret
push
cwtl
add
sahf
out
xor
ret
mov
scas
pop
adc
loop
jmp
add
jns
xor
mov
cmp
gs
pop
push
xchg
pop
shr
dec
lods
and
inc
pop
inc
add
scas
push
shlb
inc
cmp
jae
out
mov
mov
push
push
and
adc
out
cli
les
dec
cltd
iret
sarb
pop
test
call
push
enter
mov
xchg
fs
rolb
lea
iret
fistps
shlb
mov
xlat
rcrl
push
out
mov
cmp
mov
data16
movsl
jmp
mov
lods
sub
cmpb
fnstenv
loopne
fcom
push
and
inc
and
stos
push
scas
and
jnp
loopne
push
mov
xor
mov
xor
cmp
fistpl
fldl
std
jno
repz
jbe
and
xchg
mov
xchg
repnz
jb
pop
fimuls
fnstsw
in
nop
fildl
push
inc
ss
shl
jbe
jns
sub
test
cmc
jl
cmp
fwait
pop
stos
dec
and
sbb
adc
pop
ds
mov
inc
jmp
dec
xor
cmp
outsl
cmc
aam
sahf
movsb
inc
fs
fcompl
push
test
outsb
pop
gs
adc
dec
rolb
cmpsb
insb
pop
data16
scas
arpl
mov
sbb
outsl
scas
pop
mov
jl
mov
push
in
lods
or
mov
stos
popf
inc
aas
scas
imul
mov
aam
fdivrs
pop
inc
test
pop
push
out
loopne
jns
sub
daa
fcmovnb
adc
cmp
mov
xor
cli
xchg
addb
movsl
inc
inc
mov
sbb
sub
dec
and
sub
lahf
addr16
mov
dec
out
jp
push
outsb
pop
xchg
stos
push
mov
ss
sti
dec
ret
cmp
sbb
nop
cmpsb
repnz
fcompl
or
push
clc
aas
or
cmpsb
mov
cmpsb
cmp
outsb
xchg
pop
lea
mov
adc
ds
inc
cmp
jp
sub
pop
leave
xlat
push
push
adc
and
out
jb
insb
int3
imul
adc
pop
shrb
inc
js
arpl
sbb
dec
dec
xor
and
fiadds
bound
cmc
sbb
cmp
divl
dec
lds
xchg
fcoml
stos
jp
mov
dec
test
and
and
shlb
outsb
icebp
rcrb
or
or
mov
pop
xchg
adc
sbb
out
jno
mov
cmp
push
mov
xchg
jecxz
lods
ja
imul
arpl
ret
not
and
dec
lods
mov
inc
ret
sbb
aam
outsl
sbb
mov
pushf
or
jno
jbe
push
nop
mov
test
xchg
cwtl
aad
lret
xor
cmp
leave
test
add
push
pop
dec
push
faddl
mov
pusha
cmp
xor
xor
fldt
mov
mov
ret
mov
ret
push
fs
jno
movsb
aaa
sub
lea
das
and
jnp
lds
aam
sub
xchg
jne
cmp
lcall
push
das
lret
scas
sub
pushf
xchg
cmp
ss
data16
int
movsb
pop
push
add
leave
je
push
lcall
nop
fwait
sub
cmp
sarb
test
mov
test
out
subl
sbb
push
out
outsb
push
xor
negl
push
cmp
mov
in
jmp
shll
sub
jl
fs
xor
fucomip
sub
pop
sub
mov
dec
xlat
and
cli
data16
negb
sarb
in
das
mov
das
cmp
push
inc
gs
mov
movsl
idivl
icebp
out
jmp
icebp
mov
jecxz
jnp
lret
arpl
sbb
add
pusha
inc
and
movsb
pusha
mov
cmc
and
cmc
pop
mov
push
ror
aaa
and
into
test
push
rol
jmp
loopne
leave
xchg
jge
sahf
fmulp
jl
xchg
js
cmp
outsb
and
pop
les
xchg
fsub
mov
xchg
xor
fnstcw
mov
pop
popa
sbb
scas
jnp
xor
push
gs
mov
gs
icebp
es
pop
mov
add
add
push
scas
cli
cmp
pop
out
adc
push
jle
sbb
adc
scas
add
data16
test
fsubp
dec
mov
aas
and
loope
in
sbb
jmp
pop
insb
imul
and
cmpb
cmp
or
fistl
and
lret
xchg
lahf
cli
inc
xchg
cmp
cmp
shrl
outsl
push
sbb
push
xor
stos
push
ds
shll
jecxz
dec
es
xor
mov
dec
dec
rcrb
xchg
std
call
xchg
bsr
cmp
sub
cmp
inc
or
push
in
loope
stos
insb
jno
mov
adcb
jg
ret
clc
jnp
out
push
icebp
bound
cmp
movsb
mov
addb
cld
jecxz
adc
rcll
in
mov
cs
inc
and
lret
mov
sub
mov
xor
out
and
outsl
fistpl
lock
stos
std
xchg
rolb
imul
and
sbb
push
mov
test
stos
mov
xchg
fs
adc
pop
push
pop
arpl
mov
mov
mov
lcall
or
push
or
nop
dec
repz
movsl
aam
push
adc
cmp
adc
lcall
leave
aas
aaa
call
addr16
sarb
adc
mov
sbb
xchg
in
adc
add
sbb
xchg
sbb
jecxz
or
jo
adc
mov
icebp
push
and
dec
test
or
xchg
jge
xchg
dec
insb
shll
mov
test
hlt
push
es
sahf
dec
notw
pop
js
mov
inc
scas
aam
jle
mov
in
enter
lcall
imul
je
aad
push
imul
loopne
in
dec
adc
mov
stos
mov
std
add
cmc
pop
or
mov
mov
dec
or
popf
loopne
lahf
jo
adc
sbb
adc
insb
dec
daa
movsl
orl
or
sbb
je
jl
jne
jae
sbb
ficoml
div
inc
mov
jae
pop
lods
xchg
push
stos
mov
hlt
outsl
push
ficompl
lock
clc
nop
icebp
dec
sub
jge
in
mov
push
dec
rcll
jmp
push
ret
enter
cld
adc
ja
ljmp
cmp
or
movsl
lock
push
adc
popa
jge
test
mov
int
push
sarb
push
or
test
fcmovu
stos
mov
movsl
stos
in
jmp
or
adc
or
jns
jns
nop
adc
or
dec
dec
fsts
int
ds
add
or
subl
push
add
or
jmp
bound
mov
rorb
mov
sahf
imul
fldenv
jb
loopne
or
cmpsb
jns
loop
or
sbb
xor
pop
pop
loopne
js
nop
daa
rdtsc
jnp
inc
fs
cld
push
or
adc
xchg
sahf
or
ss
out
inc
sbb
and
jo
or
insl
les
push
xlat
ds
cmp
push
pop
test
out
or
int
in
mov
pusha
loopne
sbb
jmp
aas
xor
pusha
filds
or
roll
cmp
add
dec
lahf
mov
es
jae
movsb
sub
pop
pop
sarb
push
jno
xchg
jp
pop
pop
ds
jbe
je
cmp
dec
mov
addr16
loop
xorb
sub
je
insb
lods
cltd
fwait
in
insl
lret
sti
loope
xor
mov
pop
insb
mov
jo
add
and
jbe,pt
mov
leave
data16
cs
or
enter
pusha
jmp
sbb
inc
inc
fwait
xor
nop
test
mov
out
push
orb
mov
inc
xor
inc
mov
pop
xor
stos
test
jge
fildl
addb
jns
enter
and
imul
scas
jge
mov
leave
ret
je
inc
jl
cmp
mov
push
mov
and
fcom
dec
repnz
push
int
ret
mov
sub
lret
out
iret
pop
and
cmpsl
or
int
vandnpd
stos
jle
pop
in
insb
mov
mov
outsb
push
cmc
mov
into
lds
mov
int
jmp
js
jp
pop
or
js
pop
stos
and
mov
sub
sbb
sub
cmc
aaa
nop
cmp
enter
sub
aas
in
ret
add
xchg
push
and
aad
mov
push
push
sbb
mov
push
mov
repz
ss
rorb
pop
movsl
mov
push
jne
adc
fsts
lahf
jecxz
jecxz
mov
mov
mov
xchg
adc
pop
adc
lds
push
and
ljmp
adc
and
out
int3
gs
je
sbb
dec
adc
dec
adc
cmovg
das
jne
mov
mov
stc
loope
xor
cmp
cmp
enter
into
outsl
mov
and
stos
jmp
dec
mov
jae
insb
sub
lods
xchg
cmp
jecxz
iret
cmc
push
test
sbb
movd
movsb
int
stos
mov
into
out
cmp
jp
pop
pop
fwait
les
and
inc
arpl
or
popf
ret
dec
call
jl
mov
sub
xor
dec
test
rcll
sahf
mov
into
push
adc
ljmp
adc
jnp
xlat
sbb
cmpsb
adcl
call
pop
adc
movsb
mov
ret
mov
jo
les
jp
xor
leave
ss
sbb
cmp
ja
nop
into
sti
cwtl
inc
xor
mov
pop
sbb
mov
divb
mov
inc
or
fstpl
add
cmpsb
add
and
lods
xchg
mov
sbb
adc
push
loope
aam
lock
push
xchg
ds
adc
cmpsb
in
pop
pop
sub
and
and
pop
leave
cmpsl
sahf
push
mov
or
push
and
push
cmp
jle
xor
cwtl
das
pushf
cmp
nop
cmp
xor
dec
xlat
fisttpll
inc
pusha
cmp
orb
iret
push
das
addb
inc
cltd
icebp
mov
arpl
sahf
sahf
mov
arpl
daa
iret
adcl
jmp
cmpsb
xor
out
dec
pop
ss
lcall
mov
scas
stos
xor
cmpl
sub
ror
mov
cmp
cmp
xor
mov
ficoms
shr
jo
test
stos
mov
push
lcall
and
loop
lea
scas
insb
lock
gs
cmp
cmp
inc
sbb
test
xor
lret
push
gs
in
jp
add
incb
ror
lea
and
push
sbbl
negb
enter
out
mov
out
pop
or
mov
imull
mov
mov
push
outsb
test
push
stc
mov
stos
pushf
nop
cmpsl
adcb
xor
bndstx
mov
or
push
sub
jl
jp
add
sub
mov
mulb
or
imulb
adc
pop
clc
popl
mov
andb
mov
add
stos
sub
addr16
mov
sbb
stos
jne
dec
out
fs
pop
pop
sbb
dec
mov
pop
xor
or
popa
cmc
insl
push
test
nop
and
adc
mov
arpl
stc
sub
or
sbb
add
rorl
cmp
cmp
out
repz
xchg
jecxz
lcall
push
stc
ret
das
xchg
add
and
inc
js
mov
int
rolb
mov
mov
mov
jle
sub
mov
lret
mov
jge
repz
xchg
aam
cltd
dec
in
arpl
jl
sahf
and
stos
xor
shrl
xlat
lret
push
les
or
int
dec
add
aam
rclb
adcl
in
std
adc
imul
and
sub
inc
lret
xchg
cmp
add
das
lds
or
xchg
and
adc
adc
xchg
into
mov
mov
push
inc
jo
jl
rorl
cmp
adc
mov
aad
adc
pop
sahf
aam
adc
inc
inc
cwtl
xlat
test
mov
dec
cmpsl
inc
or
lds
inc
les
push
rcrb
mov
inc
test
into
loop
int
jns
shlb
xchg
push
pop
adc
dec
mov
adc
rcrl
xchg
lods
jmp
xchg
nop
adc
dec
test
add
push
mov
mov
jp
incb
pop
cmp
jnp
push
cmp
pop
dec
lahf
inc
sbb
adc
pop
push
mov
inc
cmpsb
fxch
or
lea
xor
mov
cmp
jae
push
sub
xlat
mov
addr16
lock
sbb
mov
popf
cmpb
je
test
popa
and
hlt
loop
nop
int
std
bound
jmp
push
and
adc
push
mov
mov
sahf
pop
clc
xchg
inc
insl
xorl
js
jb
cmp
test
scas
popf
addb
gs
out
push
lcall
lds
clc
push
je
out
jns
in
mov
mov
ljmp
sahf
push
or
aas
lds
addl
cmp
bound
std
fcmovnbe
dec
cmpsb
xchg
pop
mov
dec
fdivl
std
sbb
and
lods
mov
pop
cmpsl
ss
repz
jnp
dec
fildl
push
sarb
cmpl
ljmp
and
lods
cmp
popa
sahf
jmp
mov
xor
mov
jl
and
les
insl
xchg
inc
pop
rcrb
jns
popa
mov
fstpt
dec
jecxz
cmp
mov
cwtl
cmpsl
lahf
jmp
mov
adc
xchg
in
pop
mov
mov
orb
and
sub
out
out
and
jmp
or
rcrl
jne
sub
fistps
in
mov
sbb
cmp
stos
sub
push
loope
incl
js
sub
popf
cmc
test
cmpsb
sub
mov
stc
popf
fwait
mov
inc
nop
xor
sub
mov
adc
out
mov
xor
ljmp
or
push
push
pop
pop
addr16
imul
jo
pop
insb
movsl
popa
pusha
add
cmpsb
fnstenv
lock
adc
add
mov
loop
mov
pop
fs
push
ror
lret
icebp
push
jge
push
mov
and
fst
xlat
js
stos
push
mov
push
or
aad
jp
aam
test
in
std
les
pop
or
icebp
aaa
sbbb
add
lcall
mov
push
xlat
bound
cmp
lds
lods
sbb
fdivl
dec
dec
lea
sbb
sub
scas
mov
sbb
cmc
push
mov
lret
arpl
pop
test
xchg
repnz
jns
fldcw
mov
pop
lahf
cwtl
xsave
test
xchg
mov
std
rcrl
cs
add
lret
imul
or
adc
mov
scas
arpl
lahf
call
add
ficomps
pop
add
and
mov
stc
cli
lea
sbb
mov
inc
inc
ret
dec
cltd
cmp
shr
sbb
sub
xchg
pop
roll
jb
ds
andl
dec
or
sbb
add
shrb
aad
shll
out
movsb
push
nop
push
push
pusha
xor
pop
push
mov
loope
sarb
mov
in
jge
or
and
push
and
pop
adc
outsl
jae
lahf
sar
jg
push
out
jmp
mov
insb
jl
enter
mov
sbb
push
scas
sahf
ret
decb
fwait
fs
cwtl
sbb
leave
fldenv
dec
sahf
inc
mov
sbb
push
mov
dec
add
sbb
or
dec
lcall
sbbl
stc
push
pop
cmc
and
setno
aaa
xor
jg
or
sbb
pop
jl
sbb
pop
nop
or
gs
cltd
cmp
ret
jge
push
cld
shll
sub
fbld
dec
int3
push
cmp
cmpl
rcrl
stos
pop
inc
neg
mov
push
sbb
jp
xor
data16
stc
mov
inc
scas
out
repz
lods
jmp
dec
out
cli
out
pop
hlt
push
aas
nop
ret
repnz
adc
mov
outsb
pop
jne
mov
xchg
les
imulb
fs
mov
mov
xchg
arpl
sbbb
inc
gs
cmp
mov
add
cmp
sarb
xor
sbb
mov
mov
out
pop
sub
xchg
xor
push
cltd
sub
hlt
in
test
dec
ss
xchg
dec
push
add
lea
xor
sbbb
and
addl
pop
notl
loopne
fisubs
mov
insl
lods
add
jmp
pop
cmc
mov
imul
mov
jl
lods
pop
sbb
sti
int3
cmp
and
jae
movsb
mov
xor
int
ja
push
add
shlb
sarb
rcrb
addr16
xor
imul
repz
mov
inc
cmpb
jge
adc
into
adc
movsb
rorl
lret
mov
fildl
scas
sub
dec
xchg
xor
outsb
out
fidivs
and
adc
notl
fs
in
decb
xchg
adc
jbe
dec
push
hlt
or
test
ss
mov
bound
cmp
push
adc
sbb
cmpsb
mov
pop
enter
xor
xchg
mov
jbe
adc
or
and
mov
sub
gs
inc
mov
cmp
insl
cmp
cwtl
shll
pop
test
jns
xchg
inc
xchg
pop
fsts
add
test
push
or
inc
jbe
mov
fdivrp
adc
aaa
pop
add
rol
jg
mov
dec
jecxz
hlt
aaa
leave
lods
xchg
jecxz
aam
mov
inc
je
out
sub
adc
loopne
push
mov
movsl
push
test
ja
push
imul
add
xchg
dec
pop
test
push
lock
lcall
mov
lcall
push
lea
daa
mov
mov
pop
data16
lock
ds
test
pop
mov
arpl
push
adc
cmp
loopne
in
pop
jp
cs
in
lret
insb
add
adc
insl
loope
mov
push
pop
sub
push
jmp
std
xchg
jecxz
pop
cwtl
jmp
jle
fwait
cmp
xchg
inc
adc
loope
sbb
push
jp
aam
push
cs
loopne
fdiv
cmp
lcall
or
fs
int
sub
sbb
mov
ret
cmp
xchg
lcall
adcb
sub
mov
mov
mov
add
or
mov
inc
mov
add
push
jmp
into
add
out
ljmp
and
jae
ds
imul
xor
dec
iret
pop
mov
push
sub
add
mov
imul
inc
lods
pop
fisttps
out
mov
or
das
lcall
mov
inc
add
inc
bound
sarl
sbb
insl
sahf
test
mov
mov
clc
rep
mov
setl
clc
mov
sub
sub
mov
dec
xchg
popf
iret
popa
in
or
out
pop
add
push
sbbb
inc
dec
xor
add
ror
adc
add
mov
xchg
test
addb
sbb
outsl
fstpl
outsl
cs
push
aaa
jns
sbb
repnz
dec
dec
mov
mov
push
pusha
and
jb
xchg
cmc
data16
xchg
mov
xchg
xor
popl
lock
loop
pop
pop
sub
xchg
in
imul
ds
inc
lcall
and
xlat
rcll
cmp
add
push
xor
add
out
xor
inc
mov
aad
in
mov
ret
xchg
outsb
cmpsb
xor
mov
pop
pusha
das
leave
sbb
adc
test
push
mov
movl
cmpsb
test
outsb
rorb
cmc
xchg
pop
pop
add
dec
push
cwtl
sub
push
cmpsb
test
jle
pop
push
ffree
mov
pusha
add
std
incl
xchg
push
test
cmp
fs
in
or
in
ja
sub
loopne
fildll
mov
jbe
inc
inc
sub
xchg
mov
icebp
dec
sub
xchg
pop
push
push
mov
jg
stc
fdivr
xor
iret
outsb
sub
das
rorl
scas
loopne
mov
mov
inc
lahf
mov
push
fwait
push
movsb
xor
push
mov
dec
hlt
sbb
xchg
cmc
cli
rcrl
mov
scas
sub
in
sahf
xchg
jp
cltd
aam
sbb
or
push
cwtl
mov
nop
mov
inc
and
xchg
int
jae
or
mov
dec
and
mov
rcll
push
mov
popf
int3
cld
jns
ja
xor
jmp
insb
mov
out
sbb
testl
stc
lret
ror
add
cmp
adc
test
jnp
sbb
xchg
loopne
pushw
adc
in
in
lret
dec
icebp
fisubrs
add
adcl
xchg
cmp
and
dec
inc
fsts
mov
jmp
mov
inc
jmp
shr
mov
cs
bound
sbb
or
mov
jl
and
xor
sbb
xchg
jmp
dec
or
push
fldt
mov
cmp
data16
pop
jl
repnz
cmp
or
pop
lret
daa
fdivr
jae
lcall
dec
dec
mov
sbb
xchg
mov
xlat
sub
jns
push
sti
sub
xchg
dec
bound
mov
pusha
mov
jns
dec
int
inc
popf
xchg
push
fwait
mov
mov
or
imul
fnstsw
pop
cmp
shl
outsl
xor
mov
or
lods
adc
in
ds
int3
or
arpl
ret
jmp
xchg
pusha
movsb
cli
aas
inc
arpl
adc
scas
ja
jg
aas
sbb
xchg
loop
or
pop
add
xor
sub
daa
icebp
test
xchg
movsb
add
dec
sub
xlat
cwtl
repz
in
adc
insb
xchg
or
dec
mov
push
rcl
inc
daa
std
jg
in
subb
push
outsb
ljmp
outsl
fstl
pop
nop
mov
jo
pop
dec
fsub
arpl
js
mov
mov
jmp
call
xchg
dec
mov
or
lods
or
mov
pushf
pop
mov
jb
loop
adc
mov
jno
adc
xor
mov
sub
fcomps
fbstp
dec
lea
clc
stc
add
out
in
iret
inc
test
insl
adc
adc
inc
inc
cmp
subl
pop
or
cmp
sbb
in
pop
aam
lods
inc
adc
xchg
mov
sbb
mov
push
mov
inc
mov
movsl
jl
xor
xchg
xchg
cmp
sbb
test
pop
mov
xchg
sbb
jne
add
cltd
pop
xor
xor
dec
bound
xorb
ss
pop
and
mov
lret
repz
stos
std
sbb
retw
push
jecxz
movsb
xor
pop
insb
jb
push
push
dec
and
cmpb
jle
insl
pop
xchg
xor
sub
adc
daa
sbb
pop
lahf
lcall
test
cmp
stc
pop
mov
movsl
pop
push
pop
mov
call
push
and
push
into
jae
and
pop
js
mov
adc
ds
clc
mov
leavew
cmp
jo
stos
xchg
test
mov
dec
mov
dec
cmpsl
cmp
add
cmpsw
push
jnp
insl
orb
repnz
pop
in
mov
xorl
mov
fistl
and
xor
cmp
ret
jl
imul
xor
ftst
loope
push
cmc
daa
cmp
push
cwtl
mov
jo
in
xchg
lods
movsl
sbb
dec
dec
sti
mov
lahf
enter
push
or
sub
jno
mov
dec
aad
loopne
pop
ljmp
call
mov
pop
xchg
dec
js
mov
dec
push
jns
sub
dec
bound
mov
fcoms
push
outsb
mov
nop
mov
mov
daa
sub
xor
pop
mov
outsb
fwait
addr16
cmp
sub
add
lods
cmc
mov
or
adc
ds
out
and
aad
int
insl
add
xchg
push
mov
clc
push
or
jne
and
subb
mov
sbb
in
pop
jbe
js
jbe
xlat
and
idivb
or
or
mov
and
les
jne
mov
aad
fistpl
push
mov
int
aad
scas
lcall
sub
push
xchg
dec
aam
jge
std
out
fsub
push
jge
sub
xor
push
xor
das
fidivs
dec
jmp
cmp
push
xor
fisttpl
gs
mov
test
rcrl
mov
sub
scas
daa
pusha
aas
test
inc
xchg
ljmp
cs
cmpsl
jg
sub
or
mov
ss
cmp
add
mov
xor
jnp
mov
rcrl
mov
lock
cmc
rorb
out
push
ss
and
cmp
cmp
xchg
ret
in
adc
cmp
insb
test
out
imul
ror
mov
int
xchg
mov
jp
dec
inc
arpl
ror
jb
add
sub
xor
push
or
jne
pop
inc
inc
cmpsb
mov
and
das
out
xchg
lods
iret
fbld
dec
pop
outsl
pop
jb
xchg
data16
cmc
inc
gs
std
adc
scas
jae
cmp
add
xchg
push
shll
insl
jge
cmp
jnp
add
cltd
sbb
xor
push
inc
xchg
sub
adc
and
mov
outsb
ficoml
cmp
clc
bound
push
jne
lea
addr16
jl
test
mov
pop
jle
jg
loope
or
or
xchg
inc
xor
sbb
ljmp
xor
jbe
add
xor
rclb
mov
mov
inc
hlt
push
xor
shrb
or
sbb
xchg
movsb
ds
jp
ffree
lcall
outsl
mov
gs
push
pop
rorb
js
movsl
inc
popl
pop
sub
stc
insl
pop
fidivs
shrb
cmp
or
pop
jnp
inc
ljmp
cmp
das
test
out
sub
rcll
dec
fistpll
es
sub
pop
out
idiv
xchg
loope
je
leave
xchg
mov
sbb
mov
shrl
mov
andl
clc
push
fdivrs
orb
jae
enter
fdivs
push
xor
push
mov
jl
scas
cs
loopne
dec
lds
loope
loop
sbb
push
dec
in
push
xchg
inc
mov
lea
cwtl
mov
imul
int
xor
cmp
xor
mov
mov
xchg
sbb
inc
jbe
icebp
jb
cli
aad
lods
stc
pushl
jg
popf
pop
sbb
xor
mov
testl
mov
pop
pop
imul
ss
aad
sbbb
jno
mov
sub
cmp
aaa
in
lret
fbstp
add
pop
sti
adc
lret
shll
dec
push
mov
adc
lock
inc
data16
mov
push
lret
jne
out
push
sub
iret
and
mov
in
xchg
cmp
clc
add
or
jle
push
out
mov
pushf
insl
in
ret
shll
push
pop
in
sbb
addr16
jecxz
and
ret
dec
push
out
outsb
lock
dec
jo
mov
cltd
jle
cmp
fisubl
lock
sub
mov
hlt
test
push
mov
cmp
cwtl
cld
sbb
dec
ret
sbb
fsubl
dec
jnp
mov
inc
cmp
jns
addr16
push
add
mov
nop
fdivp
mov
inc
adc
dec
xchg
lods
add
jns
jecxz
aaa
lods
add
in
mov
mov
fnstenv
into
add
int
daa
sbb
inc
mov
mov
sbb
out
inc
sub
adc
sub
addr16
push
divl
popl
in
mov
ss
adcb
test
test
cmp
mov
cmp
imul
or
lret
lds
cmp
mov
sarl
shlb
arpl
ret
stos
bound
fistps
sub
xor
dec
call
popf
les
mov
mov
mov
repnz
dec
sbb
repz
imul
loopne
jle
ja
rorl
push
shr
xchg
scas
adcl
iret
shrb
sub
fcoml
out
sub
mov
and
rclb
mov
add
mov
jecxz
xor
loope
jge
jp
bound
inc
sub
adc
cld
ds
add
or
sti
loope
lock
xchg
xor
int3
aad
pop
add
add
dec
xchg
cmp
leave
xchg
and
data16
repz
out
xchg
mov
push
lret
pop
fcmovbe
cmpsl
mov
insb
sahf
lahf
push
shl
pop
inc
mov
xor
cmp
mov
scas
insb
sbb
add
mov
or
push
lock
bound
enter
leave
nop
jns
push
jmp
lods
xor
fsubs
fwait
xchg
addb
out
test
ljmp
in
jns
in
nop
pop
pop
orl
cmp
xchg
mov
lods
pop
cmp
mov
pusha
xchg
adc
jbe
aad
xor
mov
ret
jge
cmpsl
and
stc
into
data16
shrb
into
xchg
out
fimull
iret
jo
stos
add
fwait
or
cmpsw
lahf
xor
enter
fildll
xchg
idiv
lret
hlt
xchg
out
jmp
lock
rclb
and
sub
negb
xor
movsl
cmpsl
jg
jmp
rorl
or
bound
lods
mov
push
pop
jbe
repz
add
arpl
cld
xor
mov
arpl
jmp
pop
out
add
sub
mov
std
cmp
out
pop
adcb
pusha
push
cs
mov
je
xchg
sti
or
dec
gs
hlt
mov
or
cmp
sub
pop
fwait
mov
push
loop
lock
xchg
repz
cmc
xor
mov
xchg
in
and
mov
loop
and
jnp
test
xchg
icebp
int3
repz
jecxz
cli
mov
pop
cmp
pop
std
imul
and
es
mov
ljmp
xor
cmp
push
xchg
and
mov
jle
outsb
cs
xchg
and
or
and
repnz
fisubs
or
je
lods
jge
jmp
data16
mov
mov
ret
lods
jbe
loopne
insb
scas
sub
test
add
adc
add
lcall
mov
cmp
jecxz
into
pop
outsl
xor
fnsave
repz
ret
push
fstpl
mov
xchg
xchg
movsl
inc
jbe
sub
inc
mov
stos
imul
das
or
shrb
xor
sar
popf
adc
in
adc
jle
jne,pt
pop
dec
fwait
ret
cmp
gs
fs
sbb
add
mov
sbbl
jg
mov
popa
divb
jae
mov
mov
inc
inc
out
repz
add
not
pop
mov
xchg
fcmovb
iret
shr
mov
xor
and
push
jmp
out
xor
sahf
mov
or
into
adc
inc
inc
repnz
mov
nop
iret
das
cltd
sbb
mov
mov
xor
xchg
lea
lret
cmp
xlat
cmp
pop
jne
pusha
or
lcall
mov
rcrb
inc
add
or
xchg
or
fs
inc
imul
adc
adc
or
in
and
cltd
adc
in
jns
sbb
and
cmp
xchg
mov
pop
ljmp
das
jmp
daa
enter
mov
mov
xor
mov
adc
sbb
ja
fimuls
jecxz
push
shlb
fsubs
dec
push
inc
xchg
push
iret
imul
cmp
adc
adc
xor
jle
mov
test
or
cli
xchg
xor
sbb
movsl
int
inc
and
into
pop
mov
pop
into
stos
adc
int
mov
cs
or
test
mov
mov
cmp
sbb
dec
loopne
rol
cmpsl
mov
lds
push
push
pop
insb
mov
push
fucomi
pop
nop
into
mov
jecxz
inc
cmp
stos
mov
sarl
repnz
sbb
scas
pop
fldenv
stos
xchg
or
push
movsb
movsl
sbb
inc
mov
ror
sar
imul
imul
pop
fidivl
mov
lret
out
adc
mov
out
mov
out
lret
in
insl
fbstp
adc
rolb
jl
dec
pop
xchg
xor
cltd
mov
mov
in
in
les
or
fimull
push
loope
je
mov
push
or
inc
subl
mov
push
dec
xor
cmp
test
out
jbe
sbb
rclb
jecxz
andb
repnz
cmp
ljmp
add
fcmovb
mov
hlt
imul
pushf
test
repnz
outsb
lea
pop
imul
jle
aas
jnp
mov
dec
pushf
xor
xor
jg
pop
cmpsl
xor
incb
sub
shll
cmp
jnp
mov
jle
mov
cmc
push
loopne
inc
adc
clc
add
ret
xor
jcxz
lock
lahf
outsl
xor
xchg
addr16
inc
sbb
ret
xor
and
sub
xor
xchg
inc
sti
mov
push
inc
xchg
mov
jne
or
mov
xorl
data16
cmpsb
fidivl
mov
out
aas
jb
add
sbbb
jp
data16
lods
mov
lret
sti
push
xchg
loope
or
int
inc
pop
bound
pop
mov
jb
mov
jae
std
scas
les
jb
fwait
out
lret
icebp
dec
cmp
push
popf
lahf
mov
pop
push
push
mov
jmp
stos
push
push
stos
xor
or
mov
pop
cmp
scas
lock
push
mov
mov
fidivrs
inc
or
xchg
push
ss
adc
cmp
les
scas
repnz
xor
sub
mov
and
dec
sbb
int
loop
and
out
sbb
mov
add
loopne
mov
add
stos
int3
int
lods
sbb
in
fwait
outsl
cmp
lock
pop
mov
scas
sbb
cmpsb
movsl
mov
adc
xor
out
movsl
push
pop
mov
adc
mov
pop
or
je
outsl
lret
sub
movsb
fnstcw
dec
mov
adc
frstor
cli
jp
insb
sub
fldt
cs
rorl
push
mov
pop
outsb
sti
in
adc
push
out
mov
inc
dec
add
js
pushfw
mov
aad
shll
in
pop
pop
xchg
div
pop
inc
add
sub
dec
jg
movsb
push
or
jmp
mov
aam
outsl
pop
cmp
jbe
imul
repnz
and
gs
mov
xchg
lret
filds
cli
cmp
std
sbb
xchg
hlt
jge
xchg
aaa
or
imul
data16
fwait
add
jnp
and
push
out
jnp
repnz
inc
adc
cli
arpl
sbb
in
les
mov
fsubs
sub
cmp
lds
lret
mov
rorl
arpl
in
ffreep
loope
sbb
ljmp
rorb
cmp
cmp
insl
loope
scas
and
lods
mov
pusha
dec
insl
aam
jae
push
cmc
mov
xor
incl
add
inc
mov
test
jp
lcall
enter
sahf
xchg
push
xlat
mul
outsl
dec
in
popf
subl
jae
push
mov
xor
xor
add
sub
sbb
scas
cli
iret
leave
cmpsb
imul
loope
push
scas
adc
lock
and
inc
mov
mov
mov
loopne
aas
jmp
or
movsb
in
mov
xchg
in
jle
xor
adc
std
arpl
adc
and
xor
in
ret
xor
imul
aam
addr16
scas
fisubrs
js
add
push
mov
insl
ja
out
imull
stc
data16
mov
les
pop
daa
sbb
int
push
es
das
popa
nop
add
and
xchg
out
xor
pop
cmp
loopne
sarb
popl
ss
mov
pop
adc
fcoms
pop
fwait
dec
pushf
lcall
lock
dec
lds
cmp
lock
and
ja
cmp
pop
cmp
mov
fidivl
stc
push
fiaddl
test
or
mov
jnp
cmp
aaa
xchg
jb
sub
xchg
jo
mov
adc
aad
and
sbb
or
xor
push
xlat
lock
call
aaa
aam
iret
pop
mov
jg
dec
mov
imul
mov
mov
dec
shr
ret
pop
jle
stos
adc
adc
aaa
cmpsb
scas
mov
or
cltd
adc
adc
lock
jp
imul
push
inc
ja
cld
pop
mov
and
xlat
xor
aad
jecxz
lea
daa
jecxz
sbb
lcall
sbb
scas
outsl
sti
mov
dec
pop
dec
mov
or
push
leave
xor
movsl
scas
icebp
xor
scas
push
mov
and
hlt
xchg
hlt
movsl
cli
jl
inc
out
sbb
pop
xor
iret
xchg
mov
popa
pop
sub
push
push
out
das
sarb
jmp
mov
cmp
fs
ljmp
jo
imul
mov
in
jg
pop
fcmovu
dec
mov
repnz
ss
std
out
push
mov
xor
jle
mov
lods
out
jae
scas
orl
daa
shlb
jno
mov
mov
fsubrs
mov
movsb
mov
icebp
imul
ss
cs
outsb
lcall
xor
xor
sbb
in
andl
aad
shll
dec
and
pop
dec
imul
jle
popl
stc
cmc
jle
stc
xor
sbb
push
and
enter
sbb
mov
cmp
leave
pusha
mov
loope
adc
cwtl
bound
rclb
adc
in
adc
mov
mov
push
adcl
iret
in
dec
sub
jg
jb
icebp
adc
adcl
das
mov
mov
adc
mov
and
ljmp
daa
ja
movsb
push
mov
jge
jbe
and
mov
cld
in
mov
mov
out
xlat
push
stc
mov
in
sbb
sbb
mov
pop
push
aad
jne
ret
lret
cmp
lods
jp
mov
push
cmpsb
in
scas
xlat
sbb
lds
mov
jge
in
in
pop
adc
mov
push
jl
loope
add
pop
mov
test
xchg
lock
xor
push
pop
loopne
lock
shrl
pop
std
pusha
outsb
fildll
and
lea
in
pop
xor
out
mov
fwait
popf
test
mov
jmp
aas
jns
mov
in
push
cmpb
pop
lea
push
cld
mov
mov
fidivrs
cmp
inc
mov
jmp
stos
add
add
push
inc
pop
jo
add
jne
inc
mov
or
or
cwtl
jns
aas
mov
mov
and
inc
adc
lods
pop
pusha
xchg
stc
sub
lock
cmp
mov
mov
hlt
cltd
add
stc
inc
ja
std
ret
adc
cmp
stos
and
pop
xor
mov
dec
or
and
adc
cmp
pop
scas
or
adc
adc
addr16
aam
arpl
xor
or
fisttps
loope
mov
xor
or
push
and
pop
inc
fisubl
cmpsb
push
jle
mov
push
out
sub
lds
lret
pop
fiadds
xor
mov
add
mov
sbb
and
adc
push
xchg
cmp
jmp
dec
mov
mov
xor
les
je
sbb
jno
popf
dec
mov
arpl
aam
or
jl
das
dec
xchg
inc
arpl
inc
sub
int3
lret
sahf
ss
out
mov
aaa
push
imul
xlat
ret
aam
dec
lahf
inc
mov
cld
xchg
add
movsb
lods
push
popf
shrb
scas
push
femms
and
push
and
out
fcmovb
test
dec
cmp
loope
inc
in
outsb
and
push
scas
push
dec
jp
jge
push
jle
mov
cmp
pop
sub
jmp
jb
ja
mov
or
aaa
lock
jg
into
das
push
fsts
jae
adc
daa
dec
inc
jp
imul
lock
fcomi
imul
lods
cld
mov
add
mov
call
enter
cltd
cwtl
jle
push
stc
cmc
sub
mov
testb
xchg
push
dec
aas
mull
jmp
inc
inc
leave
sbb
outsb
rep
lock
push
dec
shrb
mov
sahf
sbb
cli
pop
dec
loopne
pop
pusha
ss
hlt
mov
mov
jmp
scas
push
ds
jae
dec
pop
xor
or
jg
rcr
fnsave
jae
stc
pop
jne
fsubrs
push
push
je
andl
repnz
data16
dec
xlat
push
loop
scas
lcall
xchg
and
loopne
jle
mov
xor
shl
or
push
xorl
enter
push
mov
adc
and
pop
loopne
pop
sub
dec
or
fs
pop
push
ret
out
scas
push
sub
pop
dec
pop
test
jnp
int
and
test
push
in
adc
imul
into
inc
lds
lret
fstpl
push
fs
and
fsubrs
into
xlat
mov
push
xor
mov
test
push
in
inc
pop
jnp,pt
jp
push
jge
add
pop
or
jp
inc
int
cmp
xchg
lods
xor
mov
out
xchg
jae
pop
ss
xchg
shl
or
aam
sub
hlt
push
fdivr
pop
cmpsl
inc
inc
ja
push
out
daa
mov
mov
push
xlat
adc
jge
scas
arpl
imul
pusha
packuswb
popa
inc
mov
aas
popf
cmp
xchg
dec
test
pop
sahf
push
idivb
sub
pop
gs
add
jmp
cld
mov
hlt
adc
xchg
sub
jne
outsl
loopne
jno
sub
push
dec
push
cld
pop
pop
mov
add
mov
movsb
popa
adc
in
cmc
sahf
sarb
cs
xor
enter
jo
mov
das
sti
test
mov
ret
or
and
adc
push
push
ja
cmp
push
push
popa
repnz
mov
and
inc
lret
les
pop
mov
clc
and
xor
sbb
into
ret
push
mov
adc
sub
sbb
cli
cmp
add
adc
mov
in
mov
fidivrs
in
adc
arpl
pop
je
inc
sub
cltd
and
jbe
pop
jecxz
push
add
cmp
ss
cltd
adc
fimuls
sub
or
hlt
xor
adc
fs
xor
sbb
cmp
ret
test
cmp
stc
jb
lret
testb
ja
aas
stos
pusha
std
pop
pop
int
sbb
fldcw
mov
xor
loope
nop
adc
jmp
movsb
mov
fs
inc
or
mov
dec
iret
jb
cmpb
shlb
mov
cmc
xor
neg
jne
xchg
sbb
and
mov
bound
adc
jne
and
int
cmp
dec
aaa
pop
js
cmp
or
pusha
sub
rorb
dec
jmp
idiv
scas
fldl
xchg
sub
gs
fwait
cwtl
mov
enter
rcll
in
iret
test
inc
jge
loopne
cmpsb
mov
test
dec
inc
mov
pop
jecxz
bound
jmp
aam
xlat
jmp
xchg
ret
and
mov
int
fadd
sub
cld
jle
ret
je
mov
jge
mov
js
dec
loopne
xchg
test
sarb
aas
mov
movsl
mov
loope
in
add
add
dec
bound
outsb
sti
xchg
loopne
jmp
rol
aas
out
clc
adc
popf
fidivl
clc
xor
lcall
pop
pop
xchg
aam
lods
pop
inc
or
add
mov
cli
int3
cmc
xchg
and
sbb
subb
add
adc
pop
sbb
dec
lds
xchg
insb
std
cmp
dec
aad
add
mov
add
mov
jecxz
and
and
fldcw
out
inc
cmp
mov
sub
jb
das
stos
mov
dec
sub
push
cwtl
mov
or
test
fiadds
ret
jge
std
mov
or
std
movsl
lcall
sub
popa
jl
xchg
sbb
pcmpeqw
mov
arpl
bound
add
loop
jnp
pop
cwtl
push
loop
shrb
insb
adc
add
dec
and
shll
out
in
stc
cwtl
or
into
xchg
negb
into
mov
stos
push
lret
in
cli
and
push
sub
fdivrl
dec
jb
popf
int
xchg
outsl
imul
adc
jmp
aas
mov
xor
repz
sub
push
into
icebp
loope
mov
imul
in
clc
shr
pop
mov
mov
fwait
push
in
in
sbb
adc
jg
sti
push
fsubrs
inc
adc
lret
dec
lods
mov
pop
mov
push
pop
mov
xlat
scas
sbb
addr16
fldl
or
mov
and
test
sti
imul
in
xchg
leave
xor
ljmp
ret
sbb
or
out
mov
push
aad
shlb
lret
or
push
push
jno
int
jbe
xor
mov
insl
xchg
cmp
das
inc
sub
imul
xchg
mov
sbb
mov
add
cmp
lods
sub
or
mov
lds
lret
or
nop
aaa
sub
cmpsl
cltd
arpl
cmp
repz
mov
sti
pop
in
ret
dec
rcl
insb
fwait
jg
movsl
test
jmp
dec
fwait
push
adc
pop
cli
int3
and
adc
lahf
int3
jl
insl
mov
or
mov
or
je
sub
xor
push
popa
mov
push
cs
add
movsl
mov
hlt
test
jle
pop
enter
ja
cmp
xor
dec
mov
xchg
jb
or
sub
xchg
jno
xor
scas
mov
push
lret
out
sub
insb
sbb
mov
xchg
movsb
sti
sub
test
push
inc
outsl
pop
dec
cs
inc
arpl
mov
push
stc
sti
movsb
adc
xor
insb
sbb
das
cmpsl
ret
xor
inc
sub
cmp
xor
popf
or
cmp
and
fs
pop
rcl
call
dec
and
dec
xchg
les
cmp
dec
mov
jns
and
ja
push
pop
nop
int
cmp
or
mov
mov
pusha
fcoml
sbb
sbb
pop
pop
add
cwtl
cmp
in
and
sbb
mov
orb
in
cwtl
add
jl
mov
xchg
mov
enter
cmp
dec
out
sub
test
and
jnp
mov
lods
mov
fbld
mov
push
or
jle
and
sbb
add
xchg
jmp
fs
push
mov
or
iret
je
sbb
in
bound
testl
sub
lods
jne
sub
cmp
cmp
mov
jge
mov
dec
addb
nop
in
arpl
push
pushf
cmp
inc
int
icebp
cmc
adc
mov
sbb
shlb
aad
repz
fadds
dec
sbb
in
pop
xlat
jg
jae
xor
dec
stc
daa
jl
sbb
add
and
sarb
jg
testl
fs
sbb
iret
sti
mov
fbstp
scas
daa
jns
xor
sub
fimuls
lds
lods
les
mov
in
inc
inc
lods
pxor
mull
fwait
imul
cli
dec
in
jae
out
cs
mov
inc
fnstsw
cmp
divb
sahf
movsl
int3
xchg
test
inc
adc
jno
xchg
stc
xchg
in
in
lock
pusha
popf
lret
out
mov
mov
out
xor
pusha
movb
xchg
xchg
cmpl
jmp
call
outsb
pop
loope
sub
into
pushw
adc
stc
pop
sub
stc
mov
in
jo
loope
jb
mov
push
lret
xor
or
mov
jae
aam
ja
xor
daa
ja
int3
ret
dec
subl
push
mov
sub
pop
sti
ret
pop
sub
aas
xor
xchg
movsb
test
inc
movsl
cmpsb
sbb
inc
dec
outsl
mov
cmp
jle
aam
xor
je
fldl
add
xor
fstpt
push
out
xchg
sbb
sbb
inc
mov
add
pop
dec
or
mov
add
or
xchg
push
adc
fistps
jo
test
outsl
sbbl
cmp
sub
xor
int
mov
add
hlt
cwtl
jne
adc
xor
dec
rcll
lds
ret
jo
or
es
in
movsl
mov
mov
and
push
adc
add
mov
pop
test
sub
mov
popf
cmp
push
fstpt
aad
aas
divb
mov
hlt
dec
cmp
inc
loope
fst
push
sbb
cmpsl
fimuls
iret
add
mov
mov
adc
sahf
xor
lds
or
push
addb
aas
lret
cmp
push
pushaw
out
pop
cltd
and
adc
leave
retw
jg
or
test
imul
mov
jl
xor
insl
xor
jl
icebp
dec
clc
pop
sbb
jle
mov
push
inc
cltd
aaa
mov
mov
out
icebp
push
cmp
push
dec
sub
xor
adc
xchg
in
nop
lahf
in
xchg
stos
shlb
aaa
jl
dec
adcb
mov
mov
movsb
lcall
leave
and
jb
xchg
fistpl
cwtl
nop
leave
pop
inc
rcrb
jle
into
cmc
out
frstor
xor
daa
xor
dec
in
mov
push
cld
mov
sti
or
xchg
fiaddl
cmp
xchg
mov
xor
sbb
add
enter
pop
push
push
add
fs
test
in
bound
fstl
cmc
and
iret
jae
lods
and
mov
xor
cmpsb
xor
test
or
pop
add
xchg
mov
sub
iret
lcall
into
clc
add
test
push
js
inc
push
test
xor
mov
add
push
rclb
ljmp
cs
or
and
xlat
and
inc
jg
in
lods
shrb
mov
add
ljmp
mov
js
inc
xor
ret
add
mov
mov
and
stc
mov
and
inc
push
jg
dec
in
mov
sub
mov
xor
sbb
push
adc
fwait
das
out
push
or
movsl
fisubrl
leave
fsts
sbb
lods
std
leave
lods
mov
ficompl
xor
jge
fcomps
mov
leave
ss
lock
stos
int3
mov
xchg
pop
bound
xchg
or
ja
adc
ret
pop
hlt
dec
lahf
dec
loop
push
mov
pop
loopne
pop
jb
lret
jns
das
popa
and
mov
int
or
insl
jae
dec
mov
test
cmp
xor
call
and
mov
cld
fildll
fdivl
lods
negb
inc
add
sub
push
mov
push
outsl
add
popa
lds
insl
sub
loopne
mov
aad
nop
pushf
test
mov
rorb
clc
out
xor
xchg
jmp
mov
add
cld
int
cli
cmp
xchg
or
mov
jo
cmp
fwait
ja
push
fdivrs
add
cmp
xchg
mov
sub
inc
je
fldl
mov
mov
test
mov
pop
add
mov
jge
sub
inc
sti
adc
insb
mov
lea
mov
jl
popf
add
popf
scas
add
jg
pop
jl
nop
mov
push
mov
out
adc
cmp
into
adc
lahf
pushl
int
lods
mov
repz
stc
sub
adc
in
clc
scas
mov
dec
ds
bound
push
insb
push
pop
pop
jl
loopne
jns
imul
xchg
push
std
cs
cmpsb
inc
dec
mov
inc
pop
mov
sbb
sbb
bound
dec
push
mov
arpl
mov
adc
mov
fwait
imul
int3
mov
pop
pop
inc
movsb
aad
cmp
xor
popw
shrb
mov
adc
movsb
dec
loope
sbbl
push
push
jecxz,pn
imull
sbb
xchg
es
mov
sbb
xor
mov
ljmp
das
sub
aas
or
mov
dec
pop
movsl
fcoml
sub
adc
push
hlt
and
scas
xor
icebp
inc
or
les
xchg
jns
nop
call
jo
mov
jecxz
jno
push
jnp
jge
push
mov
push
cmc
adc
xchg
pop
sub
xor
sub
inc
or
jmp
xorb
adc
jecxz
mov
pop
jnp
mov
pop
pop
add
or
sahf
rcrl
xor
or
push
movsb
xor
jb
std
add
xchg
je
out
sub
cmc
jb
dec
and
and
mov
xchg
mov
iret
cmp
in
xor
pop
jl
add
rcrl
loope
cld
cld
add
scas
dec
push
pop
repnz
loopne
out
insl
stos
aad
mov
jg
jbe
add
cmp
cmpsb
imul
push
in
out
lahf
inc
les
push
jl
sub
insb
out
xor
mov
cmp
out
std
jecxz
push
jp
jbe
mov
mov
jmp
cmp
scas
mov
dec
mov
add
jne
mov
cmp
ds
lret
sbb
xor
imul
popa
fiadds
loope
add
scas
lcall
int3
xchg
es
jle
daa
xor
sbb
lods
in
mov
xor
cmp
ret
xlat
cmp
jecxz
mov
jge
mov
rol
or
or
ja
notb
iret
sbb
sbb
inc
outsb
movsb
dec
outsl
dec
test
lahf
push
rol
shlb
dec
jns
mov
mov
maxps
mov
test
or
push
pushf
test
add
pop
adc
scas
mov
stos
outsl
push
leave
aas
sahf
pop
sahf
cltd
jmp
test
xor
out
push
push
pushf
adc
lods
addr16
xlat
andl
pop
push
and
mov
add
cli
je
addl
mov
orl
mov
mov
es
jbe
xor
ret
and
inc
xor
sbb
xchg
pusha
cli
mov
aam
push
das
or
shl
lcall
jne
hlt
lahf
cmp
lods
test
bound
cmp
scas
ret
lods
mov
fcoml
sbb
pop
pop
jo
push
mov
out
incl
insl
lea
loopne
leave
daa
xlat
loope
inc
sub
lret
in
pop
or
adc
add
in
std
jl
inc
testl
lods
out
xchg
inc
add
cwtl
mov
dec
xchg
xchg
inc
mov
adc
rcll
test
roll
xchg
sbb
cmp
test
cs
ret
jbe
movsb
clc
scas
aas
jmp
inc
out
fsubrs
insl
test
fsubs
jl
mov
stos
pop
cmp
icebp
mov
icebp
xchg
cli
sahf
rclb
aas
lods
mov
out
enter
pop
mov
out
test
fstpt
hlt
ret
fsubrs
or
and
fcompl
dec
adc
iret
jl
xchg
test
repz
pop
jle
cmpl
test
or
stos
mov
and
call
in
dec
xlat
and
or
or
xor
xor
es
mov
push
adcb
lods
sbb
inc
xor
push
push
minps
mov
jmp
add
ss
mov
js
pop
add
push
xchg
nop
cltd
mov
fs
adc
popf
push
movsb
fisubs
dec
fwait
andl
loopne
cmp
in
pop
sti
add
das
pop
mov
scas
iret
pop
sbb
sbb
gs
int3
mov
insb
hlt
sbb
add
in
stos
xor
and
adc
push
std
and
or
sbb
rorl
fstpt
ficoml
aam
and
or
pop
xor
push
into
mov
bound
fsubr
adc
imul
cwtl
mov
mov
fidivrl
inc
cmp
out
int
loope
xchg
xor
mov
clc
cli
dec
js
and
inc
xchg
fisttpl
inc
dec
shlb
xchg
mov
cmpsb
xchg
mov
sarb
add
andb
imul
push
pop
jne
out
xor
jnp
movsl
push
lea
lret
mov
jns
pop
adc
scas
test
clc
mov
jbe
mov
dec
push
lahf
jecxz
sbb
cltd
cmp
loope
lret
dec
mov
movsb
ret
aaa
cmp
stos
or
int3
xor
jne
mov
test
sahf
mov
outsl
push
ljmp
jl
cwtl
jo
dec
outsb
pop
add
mov
ss
das
ds
js
aam
stc
xorb
imul
into
inc
or
sub
xor
or
or
push
leave
in
and
sub
pushl
push
scas
ljmp
ljmp
jle
data16
test
imull
add
jmp
mov
imul
popf
clc
cli
ret
mov
push
cltd
mov
mov
dec
jne
into
or
loope
ficoms
mov
fwait
mov
std
sbb
push
scas
cmp
and
pop
shlb
out
fs
or
mov
fwait
movsl
shl
mov
dec
lcall
rol
add
mov
sub
test
mov
js
push
fcmovnu
cmp
push
dec
arpl
orl
cmpsl
cmp
cmp
daa
mov
mov
std
sub
movsb
inc
push
pop
push
stos
cmp
lcall
xchg
repz
mov
push
repz
notb
inc
and
mov
jmp
cmp
sbb
in
js
shrb
push
push
mov
jno
or
les
xchg
cmp
imul
ds
or
jno
xchg
adc
pop
sbb
xchg
test
or
jbe
fs
cmc
cmp
jmp
data16
imul
pop
fbld
dec
jbe
into
fs
xor
sub
mov
push
or
xor
push
in
pop
lahf
mov
rcl
mov
xchg
dec
push
and
jmp
lods
sub
xchg
shll
out
lea
movsl
loop
pop
and
jg
xchg
stc
or
add
mov
jbe
cli
lods
push
out
pop
fcmovbe
xor
or
xchg
pop
sub
stos
mov
jae
mov
add
fbld
fimuls
cmp
xchg
gs
sbb
jecxz
xchg
andb
lea
xor
push
add
mov
rcl
fstpt
xchg
mov
jl
sbb
mov
jbe
and
movsb
cli
mov
movsb
test
push
mov
push
pusha
push
mov
stos
push
rorb
lds
mov
into
adc
mull
in
adc
adc
in
mov
inc
aas
and
jmp
aad
pxor
mov
test
mov
add
lock
adc
cmp
inc
mov
fnstsw
out
xor
sti
xchg
popa
test
cmp
or
decl
cli
int3
push
add
aas
int3
pop
enter
mov
int3
rcrb
dec
out
int3
pop
xor
dec
xchg
movsl
mov
leave
mov
mov
adc
xchg
xchg
imul
mov
cmp
je
jbe
stc
sbb
outsb
orb
jno
aad
addr16
jne
movsb
imul
xchg
xchg
or
lret
pop
xlat
lock
stc
cmp
cs
push
mov
aaa
jne
aas
xor
bnd
pop
jge
sbb
shlb
sbb
dec
sti
xchg
push
lods
mov
out
sub
mov
test
lret
sub
sbb
or
or
mov
mov
gs
aaa
cltd
add
push
ret
mov
lods
xchg
jmp
mov
popa
mov
into
orb
fwait
icebp
push
push
rcl
in
push
fxch
sbb
push
xchg
pop
data16
mov
fxch
xchg
dec
adc
adc
nop
ret
les
dec
mov
inc
and
mov
sarl
out
addl
pop
ret
dec
mov
ss
fildl
outsl
xchg
or
outsl
xchg
adc
lret
je
adc
and
aam
add
fwait
adc
jle
push
lcall
pop
adc
pop
jmp
and
mov
xchg
pop
adc
cmpsb
jae
pop
test
imul
jns
movsb
push
aad
add
lods
or
sti
sti
xorl
adc
lods
cmpsl
xlat
dec
lcall
push
sbb
push
mov
ud2
dec
das
ret
push
int3
pop
sub
or
orl
jb
dec
insl
das
out
sahf
hlt
mov
iret
sbb
pop
repz
call
dec
faddl
xor
mov
out
sbb
jecxz
in
push
xor
mov
adc
push
shlb
sbb
xor
inc
rcrb
jb
mov
lods
fwait
xchg
mov
jbe
mov
int
mov
or
leave
xorb
fdivs
insb
addb
int
sbbl
lods
cltd
in
aas
rclb
negb
sbb
xchg
mov
cmc
cli
pop
lcall
push
bound
jns
adc
aam
mov
lods
xor
outsl
cmc
dec
gs
mov
leave
or
loop
test
enter
sti
outsb
pop
mov
pop
cli
jle
sti
rclb
pop
push
adc
jnp
sub
rcrl
pop
sti
aaa
or
jg
jl
pop
jmp
sbb
inc
add
push
lea
inc
mov
sbb
insl
lock
je
xlat
xchg
sub
std
mov
mov
addl
repnz
out
mov
outsl
and
fst
sub
in
je
pop
mov
xor
adc
jne
divb
inc
cmpb
ret
jl
movl
das
stos
jp
dec
mov
push
push
dec
fimuls
mov
insb
xchg
inc
les
dec
je
jecxz
je
jmp
and
pop
js
mov
adc
mov
pop
jmp
mov
mov
sarb
inc
cmp
jecxz
inc
add
inc
js
scas
cwtl
jo
in
mov
sbb
add
popa
notb
or
sbb
pop
or
hlt
jmp
or
jno
enter
lods
push
int
iret
ja
adc
mov
or
xorb
outsb
push
jne
sbbl
add
pop
or
cld
cmp
sub
dec
mov
outsb
pop
xchg
pop
lahf
jns
cli
das
mov
pop
mov
imul
std
gs
pop
sub
out
mov
push
mov
xchg
jmp
fbstp
stos
pop
insb
or
mov
pop
fsubs
jp
xor
ds
mov
xlat
xchg
mov
aad
aas
jne
push
fcomps
insb
adc
and
push
sbb
pusha
inc
jae
jno
jnp
add
repz
push
cs
sub
in
imul
ss
dec
inc
xchg
jo
cmp
push
fwait
xchg
lahf
cltd
fdivl
push
sub
inc
jp
ljmp
testl
mov
mov
mov
loop
pushf
sbb
rorl
xchg
outsl
mov
mov
sub
push
add
das
jge
into
mov
and
sub
pop
mov
test
push
pop
xor
leave
test
pop
addr16
cmc
in
popa
xor
inc
dec
mov
mov
jle
pop
call
iret
add
jo
lock
movsl
jge
or
rcl
bound
mov
or
adc
dec
repnz
dec
ja
push
stc
fcoml
out
inc
dec
sbb
test
in
loopne
mov
xchg
leave
lret
adc
test
xorl
in
int3
or
or
xchg
mov
ss
out
add
bound
pop
fstpl
xchg
lods
and
or
aas
xor
fdivl
idivl
out
mov
ret
push
xchg
pop
mov
rolw
into
sub
mov
adcl
and
aam
jno
mov
xlat
shr
add
int3
pushw
stc
sbb
bnd
into
xchg
fimuls
aas
push
sub
lods
sub
dec
in
loopne
bound
jl
fptan
in
mov
push
push
or
xor
xorl
aaa
fldl
pop
imul
arpl
in
iret
jo
and
outsl
insb
and
pop
repnz
sbb
fmulp
in
or
or
std
cmpsb
ret
cmc
adc
and
scas
and
mov
inc
jns
sti
lret
popf
xchg
repnz
cmpb
adc
and
xchg
int3
mov
mov
shll
mov
popa
fwait
cwtl
sbbb
loope
movnti
hlt
lea
stos
ja
jns
jmp
dec
cmp
arpl
add
pop
outsb
adc
mov
enter
sub
outsb
out
push
add
decb
test
sub
sbbb
orl
jp
movsb
shll
rcl
ret
testl
lret
outsl
test
int3
mov
rolb
jo
inc
jmp
jns
push
and
xchg
enter
test
sub
push
push
xlat
mov
lods
gs
sub
inc
mov
add
xor
nop
lock
mov
stos
stos
mov
clc
mov
insb
test
ret
andb
iret
add
addr16
and
loope
push
xchg
bound
mul
ret
mov
push
data16
adc
mov
fs
push
or
dec
sbb
push
pop
mov
push
dec
dec
dec
xchg
gs
mov
or
repnz
stos
sahf
mov
and
inc
add
jl
rcr
lcall
cltd
xchg
bnd
xor
out
mov
rolb
loop
std
popf
lret
popf
pop
pop
adc
test
push
mov
mov
hlt
xchg
pop
rcr
adc
pop
push
push
mov
mov
sbb
out
sub
in
mov
dec
ss
gs
es
dec
inc
xor
insl
jge
push
pop
lods
xchg
push
push
stos
shlb
cli
aam
clc
test
scas
cmp
leave
or
pop
fnstsw
arpl
jno
in
pop
and
sub
mov
mov
jnp
stos
dec
sub
loop
fwait
xlat
fcomps
repz
in
sub
cmpsl
push
mov
iret
repz
and
mov
mov
call
loope
ss
negb
mov
les
xor
aas
ss
mov
mov
sub
and
mov
shl
int3
call
add
sar
jmp
pop
fdivrs
mov
test
mov
popa
cmp
call
sub
test
mov
add
sbb
mov
rcll
pop
pop
fwait
call
xchg
mov
repnz
pop
push
adc
stc
mov
push
push
jmp
lahf
loope
insb
lock
popa
push
or
push
xchg
mov
divb
sub
mov
pop
sub
push
addr16
pop
add
fildll
add
aaa
jb
cmp
sahf
fwait
mov
stos
cmp
sub
xlat
mov
or
scas
movsb
sbbb
xchg
icebp
jo
xlat
jmp
add
and
out
pusha
in
adc
push
cmpsb
hlt
cli
mov
xor
jge
stos
cmp
mov
or
sbb
lds
push
sbb
xor
and
pop
push
lret
lea
idivb
pop
inc
push
gs
adc
enter
pop
mov
add
ret
jmp
leave
inc
sbb
lahf
movb
sbbb
mov
cmp
mov
inc
jmp
scas
aaa
xor
pop
out
mov
push
pop
push
xchg
xor
sbb
dec
sahf
mov
outsb
imul
mov
fs
and
std
hlt
in
mov
int
decl
xor
nop
insb
or
out
mov
aad
pop
lahf
mov
leave
lods
push
jl
cld
ljmp
sbb
fstl
adc
dec
divb
push
outsb
std
jl
jo
sub
inc
lods
cs
xchg
xchg
pop
lahf
mov
mov
push
xchg
jo
pushf
lea
adc
push
mov
xchg
dec
mov
or
xor
adc
arpl
scas
aam
pop
incl
sbb
mov
adc
mov
xor
out
mov
sbb
mov
mov
psraw
lahf
and
call
dec
push
dec
jbe
adc
mov
not
mov
je,pn
xlat
mov
test
enter
mov
dec
jns
sub
add
filds
movsb
pop
xor
mov
int3
adc
xchg
inc
mov
push
insl
lods
push
sbb
jecxz
je
adc
popa
and
sub
add
test
pop
sbb
mov
xor
lret
fstl
and
mov
fisttpl
into
sbb
sub
lods
je
push
cmp
cs
popl
inc
xor
hlt
mov
sbb
mov
xchg
push
lock
in
dec
scas
mov
hlt
mov
ret
jp
mov
ret
jns
es
or
mov
add
fildll
and
jb
mov
pushf
inc
iret
mov
xchg
add
jae
mov
xbegin
push
ret
pop
pop
or
in
add
mov
and
sbb
pop
and
sub
pop
cmpsb
sub
movaps
adc
xor
sub
loope
frstor
inc
xchg
scas
push
xor
jl
sbb
jle
es
inc
enter
ss
inc
ss
jno
in
in
mov
xchg
jg
xor
adc
xchg
xchg
aad
divb
mov
mov
hlt
mov
pop
push
int3
rcll
lret
sti
stc
in
dec
adc
cmp
jp
mov
sub
mov
das
sbbl
lock
stos
sbb
adc
out
dec
outsb
outsl
cmp
pop
xor
push
rolb
clc
cwtl
outsl
cmp
adc
scas
or
fbld
dec
cmpsb
scas
push
xor
and
gs
adc
ljmp
sub
popf
out
mov
inc
dec
adc
cmpb
sti
jl
sbb
adc
xchg
frstor
xor
mov
and
add
cmp
fs
movsb
push
sbb
or
jp
int
add
add
shll
jge
dec
test
aas
fisttps
add
andb
imul
inc
out
adc
mov
lea
notb
sbb
push
pushf
sub
clc
popa
fstps
sti
je
lods
pop
jmp
cwtl
pop
inc
jmp
lods
jmp
daa
repz
rolb
and
fstl
cs
inc
shrl
adc
div
int3
les
popf
mov
push
pop
xchg
mov
lods
stc
add
push
subb
mov
mov
mov
or
jmp
mov
xchg
rclb
jl
inc
pop
shr
push
add
push
cmp
aam
and
repz
cmp
sbb
jnp
cmpsb
jb
push
jg
incb
fidivrl
sbb
jmp
out
test
int3
dec
cmpsl
cmpsb
sbb
int
and
jns
lahf
mov
or
aas
mov
sbb
ret
arpl
push
out
xchg
and
sbb
or
shl
out
pop
mov
mov
push
and
push
and
das
adc
idiv
cmpl
adc
adc
jne
leave
loopne
xchg
das
in
inc
fisttpll
dec
jg
xchg
cmp
mov
leave
sub
xor
sub
mov
jge
sbb
popf
loopne
mov
pop
and
mov
lods
icebp
sub
andb
jnp
xor
sbb
rorb
xor
scas
call
sbb
inc
aaa
lahf
sbb
push
sbb
insl
mov
mov
les
push
outsb
fimuls
inc
mov
aaa
aam
sub
ja
and
imul
pop
movsl
int
mov
hlt
jmp
bound
sbb
pushf
aaa
aam
push
ret
cmpsl
stos
scas
mov
dec
jnp
les
jge
push
paddd
xlat
add
push
adc
cs
aas
arpl
ljmp
lret
xor
lods
cmp
adc
or
mov
sti
ds
inc
aas
pop
stc
mov
jp
lds
inc
or
aaa
in
mov
push
xchg
fimuls
dec
test
inc
mov
aad
xor
add
xor
lret
or
xorl
push
adc
arpl
leave
in
loope,pn
inc
shrb
nop
shll
jnp
jo
mov
adc
sub
test
roll
stc
rolb
mov
jmp
mull
sbb
sbb
mov
lea
or
insl
sub
xor
dec
loop
add
dec
mov
in
lss
push
sub
dec
js
out
push
pop
cmp
call
sahf
adc
mov
pop
pop
test
out
adc
xlat
push
out
fldl
push
ja
lods
adc
push
nop
adc
or
xchg
push
mov
sub
xchg
push
aad
idivl
add
mov
xchg
into
sub
imul
pop
inc
clc
adc
pop
jbe
ljmp
mov
fistpl
jge
mov
pop
cmpxchg
js
jno
call
loope
divl
je
mov
jl
xchg
sub
push
cmpsb
sub
inc
sbb
ficompl
aam
add
mov
stos
mov
lahf
inc
jno
repnz
in
sar
pop
shl
test
int
stos
pop
popa
jp
sbb
inc
aaa
out
scas
pop
jecxz
scas
mov
jo
xor
inc
dec
mov
repz
pop
inc
lods
test
push
shll
inc
setne
negl
xor
rcrl
pop
sbb
add
pop
loope
addb
fucom
fwait
popf
adc
mov
cld
jns
xchg
not
xchg
xor
pop
int
dec
mov
push
push
push
xor
andnps
pushw
aam
mov
rcr
fsubr
into
inc
mov
out
adc
int
push
sti
es
cs
lods
insl
mov
inc
outsl
ret
mov
orb
daa
lock
fisttps
xor
shll
popf
fdivr
lahf
jge
fidivrl
xchg
cmp
rorb
sub
push
add
cltd
scas
jg
mov
jae
mov
mov
mov
cmp
adc
mov
aaa
sbb
or
fyl2xp1
adc
aad
rorl
leave
fs
daa
push
sub
push
jp
es
mov
mull
add
imul
test
adc
fnstsw
mov
mov
pop
ror
dec
sub
xchg
clc
cmc
sbb
pop
dec
fistl
sti
scas
xchg
dec
clc
mov
daa
and
sub
mov
dec
sub
sub
dec
fistl
shrl
je
popa
sbb
pop
dec
sub
cmp
bound
cmp
inc
repnz
xchg
lods
jle
pop
fxch
jae
mov
push
fstps
jmp
mov
xchg
sub
adc
push
dec
inc
lahf
jno
fisubrl
and
sahf
jno
sbb
pusha
das
fs
dec
in
fwait
je
jbe
mov
pop
iret
push
push
in
test
or
push
test
outsl
test
cmp
out
decb
xchg
jno
movsb
or
ficompl
mov
adc
or
mov
aas
xchg
loop
xchg
sbb
push
jg
mov
enter
push
jo
scas
dec
js
aaa
dec
push
rol
cmp
push
aad
fs
out
sub
cli
outsb
jne
xchg
dec
cmc
xchg
add
addr16
lds
xchg
enter
lcall
jle
daa
pause
add
mov
inc
imul
jle
cmp
pop
flds
mov
in
sub
dec
dec
pop
push
shll
add
enter
jp
push
add
ret
add
xchg
push
jmp
xor
inc
xchg
jg
je
push
sbb
pop
ret
xor
out
imul
shrb
jge
mov
pop
dec
mov
jne
inc
jns
sahf
rclb
aas
xchg
cmp
jnp
pop
adc
push
pop
sub
cmc
iret
loop
fidivrl
dec
in
sbb
lds
xorl
mov
and
adc
aad
lea
cmp
test
pop
shll
stc
cmp
push
and
ss
or
jle
lods
xchg
stc
out
add
insb
sbb
mov
outsb
add
mov
popa
clc
jg
fs
or
adc
ret
push
or
inc
fisubs
adc
aas
mov
stos
cs
jae
jbe
cltd
sahf
cmp
fiaddl
mov
pop
aas
jns
mov
mov
andl
adcb
cmp
in
lods
dec
pop
movsb
mov
or
add
mov
jl
stos
lea
mov
rcr
pop
fnsave
or
or
ret
les
xchg
scas
push
bound
ljmp
xor
mov
cmp
adc
iret
sub
in
sbb
push
fsubl
cmp
mov
xchg
xchg
mov
and
fbstp
fsts
xchg
and
xchg
push
pop
mov
cwtl
mov
arpl
fs
add
dec
jle
inc
mov
pop
cmp
dec
sti
das
out
lods
sub
cmpsb
in
and
xchg
fidivrl
lret
inc
sbb
aad
notl
arpl
pop
mov
mov
in
inc
sbb
es
inc
pop
addb
sub
mov
inc
dec
cmp
sub
dec
xchg
cmpsb
xchg
lret
mov
jmp
pop
xor
aam
fidivl
call
sub
push
pop
or
and
xchg
scas
out
mov
hlt
test
icebp
bound
push
adc
xor
addr16
loope
add
jp
xor
xchg
jg
mov
sbb
mov
xor
jecxz
jbe
enter
adc
test
dec
inc
fisttpl
or
cmpsb
lock
cld
or
mov
dec
and
loope
loope
cld
push
dec
out
loopne
mov
jno
outsl
mov
cmp
mov
nop
test
push
inc
or
sti
inc
and
inc
movsl
inc
add
int3
push
sbb
mov
or
shlb
fs
mov
jbe
mov
jge
ret
push
pop
in
mov
pop
xor
movsl
xchg
push
xchg
cmc
mov
mov
mov
scas
cmp
xlat
and
mov
lods
imul
and
cmpb
loope
popf
lahf
xor
push
cmp
jno
xchg
add
sbb
adc
rclb
mov
xchg
test
in
loopne
bound
out
mov
pop
into
adc
push
xor
ja
mov
jle
add
jbe
pushf
push
fwait
mov
outsl
jo
push
push
mov
pop
outsb
inc
sub
dec
loope
scas
push
jle
test
insl
aad
in
push
fstpt
jp
ja
dec
pushf
sbb
xor
nop
push
loopne
push
sbb
movlps
or
pop
filds
loop
dec
push
or
out
push
dec
mov
dec
out
das
fidivrl
xchg
add
or
sub
cmp
cmp
cs
fldenv
repnz
xchg
xchg
sti
cmp
inc
sar
imul
in
iret
dec
cli
scas
dec
cmp
enter
fwait
test
add
xchg
lods
jle
mov
mov
pushf
inc
pop
add
sub
fldl
or
ret
jae
hlt
leave
add
sub
push
les
cmc
js
movsb
xlat
js
jnp
lods
push
xchg
mov
xor
ja
sub
mov
nop
xchg
pop
lret
test
pop
or
test
jae
mov
fwait
mov
mov
cmpsl
outsb
into
mov
add
inc
inc
push
cmpsl
stos
xchg
rol
pop
jbe
pop
mov
pop
mov
es
lock
jne
aam
mov
xlat
ja
push
cmp
ficoms
inc
dec
test
push
fwait
ss
jnp
pusha
push
inc
lods
xchg
jg
push
cmpsb
pushf
mov
sbb
jb
call
jne
in
cli
dec
ja
cli
sbb
xchg
pop
mov
or
push
ficoms
mov
xchg
cmp
add
sub
push
dec
mov
dec
popf
or
mov
mov
mov
inc
std
mov
mul
sbb
cmp
shll
cmp
hlt
and
loop,pn
push
ja
jb
jg
sbb
mov
adc
insb
dec
je
mov
push
sahf
icebp
fsubs
repnz
dec
pusha
sub
aas
cmp
sbb
mov
jmp
mov
leave
insl
insb
movsb
div
enter
jmp
cmp
mov
mov
mov
xor
jmp
pop
xlat
dec
sbb
pop
sub
popf
test
fimull
cmpl
push
xor
add
shrb
movsb
jno
xchg
sbb
fidivrl
leave
xchg
sahf
shr
testb
mov
dec
test
and
cmc
movsb
or
push
xor
aad
dec
out
inc
or
out
aaa
mov
mov
es
shr
jnp
and
shlb
dec
test
add
fisubs
fs
mov
mov
loop
out
leave
xchg
jge
popf
lea
and
je
push
lcall
aas
lock
ret
lds
xchg
in
xchg
xor
test
movsl
push
or
fldt
mov
decl
and
in
push
jne
into
jp
cmc
test
and
dec
gs
movsl
test
inc
dec
jne
push
xchg
mov
aas
sbb
lret
fisubs
loopne
movsb
jne
fiaddl
lock
repnz
push
out
lods
in
adc
mov
inc
adc
test
or
lahf
ret
mov
mov
cltd
aaa
es
add
inc
test
cmpsl
inc
movsb
faddp
push
lcall
push
mov
xor
sbb
jno
ja
mov
mov
aas
jbe
or
outsl
jbe
push
jbe
mov
jp
fistpl
mov
and
ja
push
mov
es
movsb
cltd
out
testl
shl
popa
les
mov
stc
mov
xlat
in
int
adc
and
adc
test
scas
lret
mov
xchg
push
pop
cmp
int3
xchg
lods
mov
xor
je
jno
dec
pop
faddl
ds
stc
sub
mov
bound
dec
mov
mov
jb
imul
ja
inc
push
ret
and
or
lcall
mov
test
cmp
stos
movsl
test
pop
into
rorb
std
cmp
add
push
pop
out
mov
bound
fldl
ficompl
popa
outsl
adc
nop
xchg
cld
addr16
aam
xchg
jo
mov
mov
jg
dec
push
mov
xor
cltd
jle
inc
je
iret
int3
inc
roll
int
pop
mov
mov
and
add
and
stc
cmp
mov
jle
inc
es
add
mov
mov
test
enter
insb
cli
mov
sbb
xor
cmp
xchg
cwtl
cmp
sbb
shll
sti
loop
inc
xchg
push
adc
repnz
outsl
mov
xchg
negb
jno
mov
mov
fiaddl
ret
popa
sti
into
imul
inc
shlb
mov
add
lret
testl
xchg
arpl
push
push
fisubl
adc
sti
fistps
and
iret
stos
dec
mov
loop
cmpsb
lds
scas
scas
sub
push
mov
bound
ds
push
loopne
scas
xor
and
or
xor
into
push
mov
mov
adc
mov
popa
ret
jnp
sarb
xchg
ret
mov
xchg
pushf
push
mov
ror
test
jno
scas
ja
mov
aad
in
testb
push
in
das
iret
dec
pusha
cmp
arpl
mov
dec
jmp
lcall
ss
mov
push
add
das
imul
arpl
int
or
push
test
xor
and
mov
and
es
test
gs
inc
xor
dec
push
mov
lds
in
and
xor
mov
xor
sub
std
out
xchg
push
sahf
inc
sub
fwait
in
pop
pushf
daa
sbb
add
data16
xchg
leave
movb
mov
dec
dec
sbb
mov
and
xchg
stos
out
stc
xchg
cld
cmp
xor
mov
mov
xchg
push
cmpsl
lret
pop
adc
sbb
jns
mulb
stos
sub
cld
xchg
inc
mov
push
test
add
dec
dec
int3
test
hlt
sbb
rolb
pop
sahf
adc
imul
cs
testb
mov
nop
testl
jb
js
and
scas
sub
adc
jp
add
pop
or
iret
xlat
sti
xchg
sbb
in
daa
xor
jo
push
mov
mov
insl
xor
adc
test
decl
loopne
call
sbb
sbb
push
add
or
sahf
and
jnp
sub
leave
add
arpl
nop
fildll
inc
movsl
ljmp
jge
jp
loopne
mov
stos
mov
test
aad
mov
aaa
mov
sbb
lods
push
dec
fidivs
jbe,pt
lret
mov
in
dec
out
push
and
sbb
xchg
mov
in
out
mov
mov
mul
cmp
fstps
mov
sbb
cltd
mov
jae
inc
sbb
jg
test
pop
sub
adc
lea
dec
mov
inc
loopne
jae
shlb
leave
leave
daa
xchg
stc
mov
inc
pop
insl
je
outsl
lods
jge
sbb
push
insl
testl
mov
sub
loopne
jnp
je
push
les
mov
arpl
fimull
mov
int3
daa
rcl
out
dec
sub
push
ljmp
lcall
adc
jo
sbb
sub
dec
mov
adc
rcrb
inc
jbe
out
inc
or
jbe
in
push
pop
shll
stc
movsl
scas
inc
mov
cmp
loope
add
in
loop
or
push
loopne
pop
movsb
mov
xlat
fnstcw
and
xor
mov
insl
daa
inc
inc
pop
pop
cmp
sub
popa
sbb
cmp
mov
and
jmp
cmp
clc
mov
sbb
clc
movntps
pop
jae
or
stos
mov
sub
bound
sarl
add
test
pop
fidivrs
xor
push
dec
inc
ljmp
or
xor
out
inc
dec
popf
lea
mov
mov
xor
push
ret
imul
pop
xchg
test
mov
sbb
outsb
push
imul
nop
or
sub
sbb
pop
fsubs
fimuls
cmpsl
mov
ljmp
cli
pushf
insb
lahf
loopne
ljmp
shrb
shrl
sub
out
shll
jbe
fisubs
call
shrb
lcall
or
jp
scas
cmp
push
xchg
fldlg2
pusha
xchg
pop
push
xchg
outsl
into
xor
dec
test
pop
inc
jmp
sbb
dec
test
inc
push
sub
xchg
stos
aad
cmpsl
cmp
bswap
mov
cmp
lods
mov
xlat
sub
sub
lock
jbe
call
xor
in
addr16
pop
out
popf
jno
xchg
ds
int3
jp
aam
adc
lea
clc
ja
lds
jecxz
out
jle
inc
mov
mov
je
std
adc
mov
mov
pop
fdivl
sub
or
cmp
repz
inc
adc
insl
jg
jp
xchg
insl
xchg
dec
out
mov
push
in
cmp
xlat
cmp
pop
ds
in
mov
inc
mov
mov
out
outsb
push
pusha
pop
hlt
lea
in
cltd
add
lods
out
mov
out
xchg
outsb
ret
inc
mov
mov
xlat
cmp
cmc
jg
dec
xchg
insl
inc
icebp
in
aam
das
stc
imul
fwait
or
jl
into
popa
mov
cmp
insb
xor
ds
mov
dec
push
stos
sub
cmp
call
stc
ljmp
sti
aas
xor
lods
xchg
cmc
and
call
aam
popa
pushaw
punpcklwd
inc
cltd
data16
or
inc
mov
aam
dec
ja
ret
addr16
mov
sbb
ret
sub
push
in
in
jns
push
js
loopne
fcmovnu
clc
xchg
loope
repnz
xor
jge
or
push
pop
shlb
fmuls
pop
out
fnstcw
jge
xchg
mov
aaa
push
inc
cmpsb
cmp
in
inc
aam
pusha
add
or
dec
xlat
mov
popa
dec
test
jmp
movsb
jns
sub
mov
dec
addr16
adc
mov
ficompl
js
in
sub
js
inc
cmp
sbb
gs
pop
or
push
cli
inc
loop
repnz
xchg
xchg
loop
jns
cwtl
ret
movsb
shl
or
cmc
int
not
icebp
or
cmpsl
cmp
pushf
in
in
or
dec
cwtd
dec
xchg
inc
mov
dec
sbb
mov
gs
push
push
mov
push
add
mov
stos
popa
inc
or
call
mov
mov
inc
mov
mov
adc
movsl
repz
out
and
xor
loope
adc
fisubl
cmpsb
outsl
pushf
int3
xchg
xchg
add
jge
rorl
into
popa
pop
push
call
hlt
test
mov
lcall
cmpsl
lahf
rcrl
cmpsl
pop
ficomps
cwtl
lods
or
jbe
cmp
sbb
jmp
mov
clc
aad
fbld
and
pop
stc
sub
dec
fdivs
mov
mov
sub
repnz
shrl
mov
pop
push
sarl
dec
fs
jo
jbe
mov
lret
pushl
mov
add
cmc
cmp
lods
sarl
mov
inc
xor
add
jle
jae
sub
es
aad
cwtl
adc
mov
out
mov
mov
cwtl
sub
inc
mov
xor
or
pop
add
bound
adc
mov
cmp
push
stos
bound
and
and
mov
ja
jmp
jbe
aad
pop
sti
pop
lret
pop
ss
sub
dec
cmpsb
add
pop
mov
push
addr16
fld
adc
cltd
enter
test
mov
jg
call
push
mov
mov
jae
push
add
js
cld
fdivl
sbb
loopne
icebp
and
inc
test
and
jle
jge
outsb
xchg
mov
ss
ds
xchg
mov
jns
cwtl
int
jbe
call
fstpl
mov
out
insb
sbb
and
mov
sti
std
in
outsl
jmp
lret
clc
mov
ret
cmp
test
mov
xchg
popa
into
das
cltd
mov
push
ret
arpl
insb
cwtl
lret
mov
movsl
jnp
cmp
sbb
mov
mov
jbe
std
mov
mov
mov
popf
pushf
test
call
mov
mov
icebp
and
dec
sub
cmp
cmp
in
push
push
ss
or
cltd
test
cmp
test
outsb
repnz
js
push
or
insb
ss
mul
cld
xchg
cmc
xchg
pushf
js
push
dec
jno
add
andl
popa
push
outsl
dec
in
fidivrl
sahf
ja
movsb
test
stc
data16
in
dec
call
loop
mov
pop
ds
fstl
mov
cmc
mov
sbbb
fwait
test
pop
cs
je
xchg
and
jecxz
jp
cmc
lods
mov
mov
lods
repnz
jo
push
arpl
add
stos
pop
jl
mov
dec
stc
aad
test
je
pop
jp
loope
or
mov
imul
cld
mov
movsb
out
and
or
fbstp
or
xchg
push
outsb
loope
pop
test
cmp
push
push
test
xchg
mov
ficoml
addr16
lret
pop
add
out
fists
loopne
mov
aas
dec
and
push
jmp
xchg
lret
lds
outsl
rcll
scas
sbb
cmp
dec
ja
xchg
fildl
jle
aaa
add
dec
lret
sub
and
loop
test
push
add
mov
popf
shrb
lds
repnz
mov
xchg
addr16
pop
cs
dec
xor
push
sbb
xor
adc
push
popf
xor
mov
mov
mov
dec
xor
xor
and
or
jle
add
jmp
adc
filds
push
ficoms
pop
movsl
lock
clc
cmp
rcr
inc
xor
mov
dec
fists
cmp
mov
or
inc
call
enter
cmp
pop
test
add
pop
out
xchg
sub
ss
fs
mov
bnd
xor
in
or
push
and
ret
jecxz
mov
clc
int
orb
push
test
movsb
ds
popl
lcall
mov
hlt
es
mov
int3
pop
push
mov
mov
in
addr16
add
jmp
xchg
add
daa
xchg
pop
mov
sub
jmp
jne
aas
or
rol
cmp
jb
outsl
add
je
je
adc
lock
xor
pop
icebp
add
insl
push
pop
push
gs
lock
dec
in
call
lock
movsl
andb
repz
lcall
push
sbb
push
ds
ret
mov
sbb
fistpl
loopne
mov
daa
jno
and
mov
pusha
jno
ljmp
enter
lods
sahf
rcrb
hlt
pop
test
lea
jge
inc
xor
int
outsl
in
adc
idivl
sub
jl
popa
int
popa
ficomps
sub
shll
mov
cmpb
stos
jge
inc
push
jl
xchg
enter
shl
mov
sub
scas
stc
stos
mov
sbb
sub
pop
pop
jle
aad
push
test
divl
negb
adc
sub
jecxz
push
mov
jo,pt
scas
stos
jle
mov
add
dec
mov
dec
or
and
in
lcall
or
push
push
test
popf
dec
in
jnp
in
pop
cmpsl
mov
cld
out
rcrb
std
jno
push
std
sbb
inc
lea
call
call
js
sbb
cmpsb
push
adc
in
xchg
in
daa
movsb
xchg
lock
and
leave
lcall
mov
jecxz
stos
mov
sbb
push
push
mov
jg
mov
test
hlt
and
mov
mov
hlt
scas
dec
or
mov
outsb
std
xlat
push
sbb
push
fs
pcmpgtd
lods
loope
jne
sahf
into
mov
mov
adc
push
or
mov
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
popf
ret
mov
cmp
or
inc
cmp
or
rcrb
add
mov
rcrb
add
mov
rcrb
add
test
or
decl
jecxz
sarb
icebp
jne
sbb
jno
nop
push
jb
push
shlb
movsb
push
fistpll
push
out
lea
jno
xchg
push
fstpt
cmpsb
add
mov
pop
and
jnp
push
daa
or
test
iret
subb
and
xchg
rcrb
mov
jno
push
or
les
aam
icebp
test
sub
sarl
push
es
lea
cmc
stos
lret
and
jnp
test
jmp
pusha
jle
rcr
inc
fdivrp
push
lcall
push
inc
jnp
mov
rcrb
add
mov
rcrb
add
in
jecxz
sbb
cmp
or
pop
rcrb
add
loop
cltd
pop
rcrb
mov
sbb
cmp
or
cli
cmp
or
pop
rcrl
add
lods
loop
sbb
xchg
loop
cmp
or
cmp
or
out
cmp
or
pushl
cmpsb
pop
lds
ror
and
cmp
or
cmp
add
sbb
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
sbb
jg
xor
pop
rcrb
sub
sbb
cmp
pop
sbb
cmp
or
fistpll
cmpsb
jecxz
rolb
cltd
sbb
cmp
or
pop
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
rcrb
add
mov
shlb
add
add
jge
adc
mov
les
dec
mov
cmpsb
stos
push
in
andl
sarl
test
and
push
enter
mov
jno
dec
adc
push
mov
filds
sahf
inc
in
movsl
roll
or
mov
cmpw
xchg
jle
inc
std
fs
pop
das
jns
aas
in
stos
lea
xchg
mov
pop
mov
popa
mov
or
out
bound
and
pop
sub
das
aad
xor
mov
int3
xor
imul
outsl
enter
xlat
adc
add
lock
out
fidivl
pop
sbb
mov
ret
orb
lds
or
mov
and
loopne
or
inc
bound
iret
out
add
dec
js
repnz
mov
js
pop
test
xadd
fldcw
aad
mov
sub
cli
dec
popa
and
mov
ret
ror
jp
push
bnd
sbb
fldcw
adc
inc
ficoml
loop
sub
js
jmp
repnz
xchg
das
insb
jne,pn
dec
dec
xchg
mov
adc
lahf
mov
ja
cmpb
mov
xor
out
push
jne
jne
push
mov
les
lds
adc
loope
xlat
and
rcr
jnp
xor
inc
and
push
jns
mov
mov
stc
fadds
jecxz
sarb
sub
test
add
fs
data16
ja
xor
mov
xorb
pop
das
nop
pop
aad
adc
jg
mov
faddl
out
sar
inc
dec
add
mov
push
pusha
das
add
xor
push
pushf
fdivrs
imul
cmp
or
or
in
popf
add
ficoml
in
dec
or
jecxz
sub
mov
jnp
ret
mov
push
sbb
lods
js
mov
movb
sbb
aas
scas
cmpl
mov
sub
jo
pop
aam
lret
sahf
mov
add
pop
mov
les
shll
dec
ljmp
jae
or
pop
pop
data16
dec
push
jmp
cmp
andb
mov
repz
mov
sub
scas
pop
xor
sbb
pop
or
int3
xchg
ret
dec
inc
jl
and
cmc
xor
cmp
dec
lret
fs
add
xor
dec
push
insb
inc
nop
stc
jle
mov
mov
push
sub
sbb
js
aaa
xchg
xor
mov
xchg
cltd
mov
xor
mov
mov
sbb
dec
inc
int
sbb
cmp
scas
popl
mov
jne
inc
mov
push
push
sti
push
push
sub
in
ljmp
pop
in
int3
xchg
sbb
jae
lock
ret
call
or
push
dec
pop
xchg
in
xchg
divb
cmp
sarb
ja
mov
cld
imul
mov
dec
or
cmpsl
pop
inc
sbb
inc
iret
or
xor
sub
adc
in
out
adc
and
rcrb
sub
daa
sbbl
push
pop
dec
or
dec
and
frstor
ret
hlt
lods
movsl
sub
add
sbb
push
shrl
stos
leave
shll
mov
shl
mov
lods
cld
imul
mov
aaa
addr16
das
loope
fsub
and
ja
ret
iret
add
push
cmp
mov
pop
inc
fimuls
inc
sbb
pop
jno
xchg
pop
ret
outsl
mov
ja
popf
lods
insl
int3
xchg
dec
int
xchg
mov
lea
inc
cld
push
and
pop
ret
and
jl
inc
sahf
mov
add
ds
inc
inc
mov
incb
or
and
sbb
sbb
rcrb
jge
mov
sbb
test
add
xchg
enter
rclb
mov
and
mov
lea
add
popf
inc
test
ss
pop
lods
cmp
cmp
je
xchg
pop
xor
xchg
jae
mov
push
and
int3
bnd
in
adc
orl
jnp
lret
push
repnz
add
push
lds
imul
movsb
loope
sahf
fidivrs
sarb
cltd
xchg
push
retw
xchg
fisubl
cli
or
xchg
sbb
shlb
xor
lods
push
movsl
dec
call
mov
add
stos
adc
movsl
insb
sbb
push
sub
cmp
adc
push
ficompl
bound
mov
pusha
loop
xor
jbe
jbe
jecxz
outsl
arpl
mov
nop
arpl
out
pop
iret
xchg
data16
shlb
repz
orl
xchg
mov
movsb
jmp
mov
shr
imul
movsl
dec
test
dec
mov
inc
mov
int
sarl
add
lods
pusha
push
inc
mov
push
pop
mov
pushf
pop
xchg
aam
mov
push
test
sub
and
jle
aas
and
pop
js
std
cli
pop
push
dec
pop
sahf
inc
test
adc
mov
inc
jo
jne
sbb
inc
fucom
pop
and
mov
fsubrs
xor
outsl
test
dec
add
test
pushf
pop
jg
out
sbb
adc
jo
dec
pop
mov
adc
pop
push
gs
inc
cmpl
adcl
mov
mov
cld
jmp
je
das
mov
loopne
dec
dec
addl
mov
or
pop
outsl
popa
movsl
mov
je
jb
push
frstor
std
dec
pop
lret
je
popa
fdivrs
jge
sahf
loope
mov
mov
fisubs
orb
mov
cmp
mov
mov
scas
addr16
sub
add
add
mov
aas
imul
leave
sbb
fstpl
cmp
lcall
out
push
mov
insb
aam
das
dec
pop
ja
mov
cmpsb
cmc
and
mov
les
insb
cltd
add
roll
xor
dec
out
xor
arpl
fiaddl
push
lock
mov
push
xchg
addr16
enter
inc
stc
call
lret
jge
mov
add
inc
aaa
or
inc
ds
call
cs
xor
xchg
pop
and
into
cwtl
sub
ret
enter
lret
cmpsb
pusha
mov
cmpxchg
xchg
push
fstl
jle
loopne
mov
in
and
movsb
icebp
pop
fmul
pop
ret
icebp
clc
lds
aad
and
je
pop
jbe
sub
addr16
inc
pop
sbb
adc
fldenv
xchg
std
mov
xchg
fdivrl
fdivs
push
outsl
mov
cmp
insb
aaa
or
mov
pop
mov
lret
and
push
lcall
mov
push
push
mov
stc
clc
es
sbbl
js
lds
push
mov
xlat
fcoml
test
add
ret
mov
fistpl
sbb
pop
dec
add
push
scas
fsubr
mov
addr16
dec
mov
enter
mov
popa
lar
cmp
test
mov
xor
cs
add
pop
js
in
jecxz
cmp
lods
hlt
dec
test
jae
push
or
jg
adc
cwtl
sahf
sbb
js
jmp
pusha
and
fsubrp
mov
mov
cmp
shll
pop
leave
in
inc
mov
lcall
push
sahf
aam
js
jae
and
out
sbb
add
mov
jle
pop
mov
push
sub
sbb
pop
scas
test
fs
jb
or
fisttps
mov
lahf
push
push
mov
and
les
shll
ret
push
add
cmp
stos
outsl
repz
mov
mov
add
scas
xor
adc
fs
xor
mov
sarb
jnp
xor
add
cld
inc
aad
mov
getsec
xor
int
inc
sbb
sub
jp
fwait
jo
or
cld
lods
sub
fsincos
sbb
xchg
lcall
int3
mov
push
xor
repz
xchg
add
mov
std
and
mov
or
mov
push
pop
add
les
xchg
add
adc
mov
gs
fs
pop
and
jns
lret
sbb
xlat
dec
popa
pop
cwtl
xchg
jae
xchg
xchg
mov
gs
adc
aas
cltd
inc
cmpsb
jmp
sub
mov
pop
mov
loopne
and
push
cmpsb
into
lsl
xor
or
shlb
jp
out
push
sbb
imul
addr16
xchg
repz
mov
adc
in
lods
test
pop
sub
daa
mov
arpl
pop
and
pop
cltd
ss
hlt
adc
dec
cmpb
bound
ljmp
pusha
and
push
inc
movsb
pop
mov
jo
and
out
popa
scas
fadd
add
loopne
cld
sub
movsl
sbb
add
cld
popf
pop
inc
adc
aaa
push
pop
repnz
je
push
dec
inc
or
jecxz
rcrb
xor
xchg
pop
ss
sbb
jge
cmp
push
hlt
cmp
cli
lea
ds
jge
movsl
xchg
das
mov
inc
pop
jmp
sbbb
mov
mov
bound
rorl
es
stc
dec
aam
lcall
jl
adc
fs
or
sbb
mov
pop
xor
aaa
push
cwtl
cld
and
inc
pop
test
or
jbe
mov
hlt
xor
sub
clc
jnp
ret
out
es
mov
stos
dec
ret
and
aas
out
adc
cli
xchg
testl
addb
loop
sbb
inc
stos
cld
test
push
mov
test
daa
xchg
dec
jns
popa
push
cltd
xchg
sub
movl
mov
popf
cli
xor
scas
pop
mov
mov
lret
mov
daa
push
sbb
sbb
sub
fdiv
in
add
jns
jb
into
mov
js
les
mov
notb
mov
shlb
aam
mov
stos
dec
ret
and
insb
adc
xor
xchg
push
dec
mov
out
ret
pop
ret
clc
add
ficoms
sub
aad
pop
incl
xchg
mov
push
jle
pop
jns
sub
push
inc
sub
adc
jecxz
mov
rcll
push
push
js
or
lds
cmp
mov
loopne
fwait
push
mov
movsb
ss
push
xchg
fcmove
dec
into
dec
je
adc
movsb
pop
push
gs
repnz
inc
push
cmp
xchg
mov
or
or
fsubl
jne
adc
inc
xchg
or
outsl
push
jp
out
mov
push
adc
bswap
jno
std
int
xchg
out
mov
pop
mov
rcl
aad
xchg
aas
in
clc
ds
fs
ficomps
jb
cmp
fisubrs
iret
add
sbb
pop
mov
lret
adc
mov
lods
mov
push
sub
lock
scas
roll
shrb
rclb
pushf
jae
aaa
loope
ljmp
mov
ljmp
mov
xchg
ret
mov
jge
jle
jmp
mov
push
cli
pop
jb
push
mov
inc
adc
or
xchg
adcl
outsb
jecxz,pt
ss
test
cmpsb
add
sbb
sti
rcll
sahf
lret
aaa
cmp
adc
jnp
jmp
pop
cld
inc
jg
aaa
test
hlt
xchg
pavgw
jecxz
jbe
push
jle
and
sbb
lea
test
and
mov
mov
and
loop
aad
lcall
inc
sub
push
or
scas
pusha
xchg
sub
xor
sbb
mulb
out
lret
xor
pop
imul
mov
roll
fdiv
mov
clc
cld
adc
pop
mov
cmpsl
aas
pop
mov
cmpsl
iret
and
pop
and
mov
and
or
pop
shrl
lods
mov
push
pop
ss
int
lret
mov
or
lods
inc
shlb
out
xor
ss
mov
fs
std
enter
xchg
xor
mov
repz
loop
mov
dec
sbb
push
pop
filds
and
mov
loopne
sbb
ret
fsubp
mov
inc
sahf
lods
mov
dec
shl
push
psrlq
sub
or
inc
adc
jb
cmc
inc
jne
cmpsl
adc
sti
mov
test
insl
jmp
pop
ljmp
loop
iret
xlat
ja
or
lret
movsl
and
in
mov
cld
outsl
jne
aad
mov
out
repnz
je
xor
mov
cmp
cmpsl
jmp
adc
push
aam
test
hlt
dec
repz
push
jns
mov
pop
jns
xchg
movsb
jns
rolb
xor
int
adc
and
mov
mov
mov
test
pop
test
jmp
lea
in
clc
repnz
jnp
ja
les
xchg
mov
popa
dec
jb
orb
jl
repz
cmp
adc
fistps
mov
xchg
enter
mov
je
lea
jbe
insl
stos
mov
jo
add
mov
das
jae
out
notl
jb
inc
add
gs
sub
sbb
jmp
sahf
aas
mov
jle
xchg
ret
mov
xlat
lods
scas
mov
repz
je
mov
mov
adcl
cmc
ljmp
in
jp
lock
mov
xor
mov
fists
inc
hlt
push
jg
das
cli
addr16
cmp
repz
decb
inc
scas
hlt
idivl
cwtl
push
je
cmp
jae
jnp
add
lahf
dec
data16
fbstp
push
mov
pop
xchg
orl
inc
aam
test
push
cwtl
fadd
mov
stos
mov
aam
shl
dec
jge
test
lods
push
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
