fninit
mov
push
int
jns
rcrb
popa
push
lea
sub
test
mov
lcall
push
les
jmp
loop
sti
out
mov
sti
pop
in
xchg
cmp
sub
cmova
adc
pop
iret
div
cltd
pop
mov
sub
loope
push
sti
jl
xchg
lds
mov
fcoms
and
and
loop
testl
test
ljmp
js
xor
or
cmpsb
fstpt
sub
mov
cmp
mov
and
js
adc
shlb
pop
and
or
cs
dec
sub
push
cmp
inc
fdivl
pop
and
mov
xor
scas
sbb
cmpsb
and
repnz
pop
pop
shl
in
and
xor
inc
movsb
cld
inc
popa
add
and
in
push
mov
adc
fcoms
fsubrs
push
pop
xor
push
inc
mov
ss
mov
rcll
nop
sub
sub
stc
push
imul
xor
imul
adc
mov
cwtl
push
and
bswap
dec
jae
mov
dec
mov
push
mov
outsl
mov
int
and
popf
xor
xor
fadds
jp
test
or
loop
fsts
and
push
stc
test
aaa
sub
push
pushf
and
lcall
add
jae
int
arpl
shll
cpuid
mov
mov
fsubr
mov
mov
xchg
mov
dec
cli
xor
mov
jmp
fiadds
sub
gs
dec
push
xor
adc
cli
fidivrl
xchg
cmpb
xlat
inc
shr
ja
adc
mov
dec
popa
lods
pop
jg
iret
xor
mov
ret
push
pop
xchg
mov
repz
jae
leave
cmp
add
inc
push
mov
int
mov
add
es
add
outsb
xchg
les
jge
ljmp
inc
adc
repnz
mov
xchg
les
loop
xor
mov
or
xor
push
jae
out
fwait
xor
sbb
arpl
into
fmuls
dec
loope
notb
fidivrs
dec
mov
mov
rcrl
mov
js
mov
shll
mov
xorb
and
dec
fistpll
dec
mov
shlb
inc
cmp
xchg
cmp
movsl
sub
in
sbb
mov
sahf
sub
mov
mov
out
stc
inc
mov
int
in
mov
loope
pop
dec
mov
jp
out
sbb
mov
scas
sub
std
in
xchg
call
add
ret
ja
pusha
push
xor
fsts
mov
les
mov
push
sub
imul
clc
add
cld
cmp
data16
addb
xor
fucom
andl
mov
push
push
add
popf
jne
and
jnp
loope
mov
call
xchg
fs
movsb
sbb
xlat
les
or
mov
inc
push
mov
add
jb
ret
imulb
cltd
jl
test
cltd
dec
fcoml
leave
test
icebp
cmpsl
lods
adc
push
mov
aaa
jl
int3
aad
and
fstl
std
or
int
pop
shrl
inc
iret
fstpt
ja
addr16
jns
cld
cmp
dec
cmc
jl
pop
arpl
out
or
fwait
ja
sbb
xchg
and
adc
jne
xchg
and
out
lahf
call
mov
lret
aaa
xor
cmp
inc
rcrb
add
stos
arpl
jecxz
jg
adc
cmp
in
sub
aaa
push
push
sub
mov
push
fs
pop
fs
pop
mov
jp
sub
cmp
xor
cmpsb
adc
inc
push
adc
test
xchg
xor
push
fwait
cmp
adcb
cld
sub
cmp
lcall
es
sbb
push
mov
fdivp
arpl
cmp
cmp
mov
xor
fadds
sbb
sub
fsubr
push
sbb
dec
fistpll
call
mov
jns
dec
fmull
cmp
jns
loop
push
xchg
fildl
jle
mov
pop
push
dec
sub
aam
dec
push
or
pop
mov
dec
adc
test
shlb
xchg
push
sbb
add
cwtl
cli
testb
and
lds
cs
mov
xchg
lds
popa
and
mov
pop
jae
insl
sub
xor
mov
ret
pop
jp
dec
ja
cmc
dec
sub
mov
sub
xchg
pop
je
jno
sbb
daa
add
sub
frstor
nop
push
xor
mov
in
mov
pop
inc
cmc
push
xchg
sbb
insb
xchg
push
lods
sti
sub
cmpsb
fldt
mov
mov
dec
lods
inc
lret
sub
or
jp
lds
xchg
hlt
mov
cmp
cltd
inc
andb
push
inc
into
add
cmp
jo
stos
inc
cmp
in
or
orl
add
ret
es
mov
test
xlat
call
inc
mov
xchg
xchg
inc
cli
aad
shll
cmp
mov
clc
aam
jl
add
xor
add
in
push
imul
and
jno
orl
sub
aas
rcrb
inc
hlt
shlb
push
adc
rorl
jbe
and
ljmp
out
mov
xor
or
sbb
cmp
ret
cmp
arpl
mov
adc
and
sub
sbb
push
std
cli
xchg
sbb
rorl
push
sarl
xchg
xchg
cmp
lods
fwait
sbb
push
stc
out
adc
out
ss
pop
mov
jp
jle
arpl
and
repnz
in
das
mov
vshufps
or
xlat
int3
mov
cmpsb
aam
mov
outsb
sub
cmpsb
push
ret
lea
iret
ljmp
aas
xchg
lods
rcr
scas
push
test
testb
adc
mov
jae
lret
scas
push
sahf
sub
mul
icebp
and
std
outsl
test
incb
jg
outsl
jmp
jae
mov
xchg
sbb
add
xchg
mov
test
movsl
and
ret
jno
mov
mov
rcl
faddp
push
inc
in
or
shr
jbe
lock
cmp
fadds
fwait
cmp
jp
mov
popa
sbb
subb
mov
inc
mov
push
mov
ret
dec
insb
mov
add
cltd
pop
pop
push
inc
xor
lret
bound
cmpsl
fnstcw
stos
jbe
push
mov
and
cmpsb
fs
xchg
cmp
ljmp
inc
and
jno
cmp
cmp
mov
pop
nop
or
ja
xlat
popf
push
es
pop
mov
rcl
lcall
ret
sbb
xor
inc
mov
sub
adc
add
daa
call
out
mov
lock
mov
and
xchg
sub
ja
jno
shl
xchg
add
pop
pop
xchg
mov
xchg
sahf
cs
sbb
pop
stos
mov
test
mov
mov
xor
jge
pop
lcall
cmpsb
mov
je
sti
testl
in
icebp
mov
pop
mov
mov
sub
lea
mov
mov
mov
mov
out
jl
mov
sbb
mov
jmp
sti
jge
pop
jbe
test
scas
mov
sbb
es
sti
cmpsl
insb
lahf
movsb
cmp
movsl
data16
sub
sarb
xchg
mov
inc
outsb
pop
mov
and
push
test
fnstcw
ret
mov
sbb
rolb
sub
mov
addb
and
pop
cli
addr16
jo
jle
stc
out
pusha
adc
sub
jae
xchg
fdivrl
sub
inc
fidivrs
cmp
mov
in
std
mov
push
jb
xchg
xchg
add
add
dec
aad
adc
dec
in
in
aad
mov
and
insl
cs
popa
stc
xchg
ret
mov
fisttpll
cwtl
pop
adc
adc
sbb
and
and
mov
divl
leave
mov
mov
mov
pop
sbb
adc
sub
xor
scas
int3
mov
jge
jne
decb
bound
idivb
lahf
scas
les
cmp
popa
aam
dec
cmp
xorl
adc
leave
fcom
call
mov
pop
inc
in
rcrl
add
push
mov
divb
popf
xchg
shl
push
bound
test
mov
insb
jne
out
icebp
jno
cmp
outsl
daa
shlb
out
mov
lods
pop
mov
sub
insl
mov
nop
les
fdivs
fwait
test
sbb
js
pop
jno
add
push
insb
pop
jbe
push
add
mov
mov
and
fmull
push
daa
ret
es
sub
mov
jne
mov
xchg
and
mov
and
mov
xchg
mov
shr
sbb
push
ds
bnd
xchg
rolb
data16
xchg
sub
jns
sbb
mov
shrl
jno
sub
jne
dec
cmp
popf
dec
je
push
lret
inc
cltd
mov
xchg
jb
adc
xor
push
inc
loopne
je
ret
fwait
cmpsl
cli
fimuls
fdivrs
inc
xlat
mov
mov
std
pop
insl
lcall
push
adc
test
fwait
sub
notb
xor
iret
mov
xor
xlat
push
icebp
dec
data16
or
sub
push
or
adcb
pop
pop
mov
mov
adc
and
xor
int
in
push
or
xchg
mov
les
arpl
jnp
inc
and
ret
sbb
repnz
pushf
filds
pop
roll
imul
add
push
pop
flds
scas
and
adc
bound
jl
insl
push
shrl
push
push
out
add
nop
jle
orb
push
test
sub
lret
mov
insb
mov
sub
dec
fcompl
jecxz
fwait
mov
cmpl
pop
sbb
dec
dec
fcmovne
out
stos
fidivrs
ret
sbb
cmp
sub
dec
mov
iret
mov
ja
loopne
xor
sarl
add
lcall
enter
clc
jb
test
dec
xchg
ljmp
out
clc
cmp
inc
fistpll
push
popf
sub
pop
leave
movsl
xlat
ret
lock
cld
stc
adc
hlt
mov
fcmovnu
or
jnp
in
push
aas
xchg
loope
xchg
cmpsb
lret
adc
mov
add
inc
in
loopne
or
push
sti
push
popa
xchg
mov
clc
es
xchg
rolb
mov
les
rorl
mov
push
lret
in
int3
xor
popa
enter
sbb
nop
pop
mov
ficompl
loopne
std
mov
push
lret
push
xchg
mov
bnd
call
xchg
xor
cmp
inc
and
pusha
aad
adc
jae
pushl
aaa
cwtl
lock
push
rcl
popl
sbb
in
sbb
inc
mov
push
cmpl
ss
mov
nop
in
sti
adc
iret
xchg
pop
movsl
jmp
sub
and
xor
outsb
add
adc
xor
or
movsl
das
les
aaa
hlt
lods
add
mov
es
das
popa
cmp
out
inc
pop
push
fisubrl
inc
test
ljmp
and
or
mov
sbb
mov
idivl
jne
lret
pop
mov
jb
lahf
lahf
std
scas
inc
ret
arpl
add
cmp
cmp
add
ja
pop
sti
icebp
jbe
dec
mov
xchg
ret
pop
enter
test
sub
adc
or
jae
shll
cltd
ja
adc
add
jns
mov
sub
adc
ret
arpl
xchg
js
jnp
and
sub
addr16
repnz
jmp
imul
inc
icebp
or
pop
sub
ss
ret
push
adc
push
push
fstl
test
xor
and
jbe
daa
out
add
push
fs
rcll
pop
daa
or
stos
cmpsb
rcr
mov
pop
rolb
sbb
cmp
les
mov
enter
pop
lret
fistps
dec
cwtl
popa
sub
dec
outsl
adc
cmpl
and
sub
pop
xchg
sarl
add
dec
mov
dec
xchg
xlat
into
jg
outsl
loope
test
cld
pop
repnz
dec
negl
dec
mov
ret
inc
into
aad
sbb
add
jmp
faddl
loop
push
inc
insb
fsubrp
sub
movsl
or
mov
dec
fstpt
dec
ds
pop
cmp
jl
pop
inc
cmpsb
fists
push
inc
ret
pop
add
in
or
and
stos
xor
dec
lods
add
nop
push
push
es
inc
push
adc
pop
dec
dec
dec
daa
or
fdivl
mov
inc
dec
je
nop
int
or
push
mov
cmpl
jp
negb
mov
sbb
nop
push
sbb
push
cmpl
mov
push
or
jmp
push
lret
jnp
or
inc
fcoms
fwait
imul
and
add
push
jns
inc
loope
mov
add
adc
jo
xchg
pop
mov
repz
dec
or
cmpsl
lcall
mov
mov
mov
cmc
icebp
push
loope
or
fistpl
cld
or
cmp
jae
jns
pop
mov
ret
repnz
pop
in
sub
stos
test
jmp
ret
frstor
loopne
lret
xchg
out
or
xchg
xchg
bound
xor
cmpsb
mov
jb
push
loope
pusha
ljmp
pushl
sbb
in
icebp
or
push
cmp
aam
sbb
lret
ljmp
rolb
and
stos
jb
lods
outsb
les
pop
inc
ficomps
into
out
mov
jbe
rorb
add
sub
jg
shlb
stc
lods
jl
sti
lock
add
insl
iret
mov
push
xchg
enter
mov
leave
addb
and
mov
jp
shld
fwait
xchg
int
adc
iret
push
jb
dec
shlb
add
insb
mov
rcr
mov
mov
pop
je
in
lret
mov
cmp
dec
push
and
adc
mov
and
mov
xor
icebp
scas
adc
cmc
lds
mov
test
scas
jecxz
insb
scas
mov
sbb
ret
stos
clc
pop
mov
xchg
or
xor
in
mov
and
inc
lock
inc
out
pushf
out
insl
jae
cmc
es
gs
jge
into
int
movsl
sub
mov
loop
aad
and
pop
push
push
mov
outsb
sub
push
icebp
loop
aad
add
lock
out
sbb
dec
repz
xchg
test
jg
notl
push
imul
dec
sbb
arpl
mov
data16
add
fs
pop
push
inc
cmp
ds
xchg
fldl
test
cmp
test
repnz
insl
lock
fstpl
rsqrtps
bound
repnz
push
sub
lret
fldpi
and
or
outsl
jmp
lods
into
fdivs
rcrl
sub
fmul
xor
imul
sbb
cli
sahf
test
jae
out
jnp
shll
cmc
mov
pop
pop
out
orb
push
les
push
or
leave
mov
stos
stos
fstpl
jno
mov
and
retw
cmp
cld
addr16
fwait
xchg
popf
dec
push
or
fisubl
aas
jne
popa
cs
mov
aaa
mov
cmp
sti
nop
jle
lcall
pop
jle
out
test
push
jp
cmp
cmpsl
dec
mov
loop
sarb
sbb
test
push
or
add
sbb
cmp
fdivrs
loopne
mov
shl
repz
outsb
push
imul
cmp
nop
mov
dec
sbb
jnp
shrl
mull
sub
adc
rcrl
pop
mov
dec
aas
outsl
fadd
mov
cwtl
inc
sub
sti
inc
in
xor
sarb
add
push
cmpsl
push
xchg
or
xchg
and
fdivp
xor
adc
loop
pop
sbb
or
lret
sbb
add
add
in
dec
jo
sbb
imul
sti
ret
jecxz
sub
and
adc
ds
mov
mov
inc
mov
push
rorl
push
lret
xlat
lods
pop
push
in
outsl
imul
jbe
lret
iret
movsl
xchg
repnz
js
popf
pop
es
rep
dec
bound
push
repnz
cmp
jns
ret
addr16
mov
scas
jge
shrl
xor
cwtl
or
pop
mov
fmulp
pop
sub
ljmp
fwait
push
push
xchg
dec
push
push
mov
or
ret
pop
push
mov
leave
test
and
fcoml
insl
push
loopne
cld
jns
sbb
mov
int3
inc
stos
popf
push
sti
daa
out
push
cmp
inc
mov
sub
out
sbb
jae
aaa
sbb
xor
stc
std
fisubs
or
pop
pop
movsl
out
mov
lcall
arpl
popf
outsl
dec
je
data16
repz
xchg
out
test
mov
dec
dec
outsb
into
pop
nop
pusha
jmp
test
lret
lret
mov
scas
insb
cmp
push
shl
into
sahf
adc
inc
test
call
dec
add
jnp
inc
cltd
ficomps
shlb
push
stos
xchg
pop
fidivl
pop
mov
mov
jge
out
nop
lret
movsb
xor
push
aaa
xlat
imul
js
inc
adc
icebp
aaa
cmc
inc
inc
sti
popf
xchg
and
popf
lahf
jbe
jb
xor
mov
scas
fisubs
imulb
lock
and
hlt
test
dec
cmpsl
nop
std
mov
sbb
cmp
cmp
lahf
notb
pop
push
pop
cmp
aas
xor
mov
sbb
shrl
inc
cltd
pusha
adc
enter
cmpsb
and
cli
or
pop
sub
add
mov
rcll
jecxz
stos
shlb
add
push
lcall
pop
in
push
jge
pop
push
lahf
jno
xchg
mov
xor
sbb
xchg
mov
dec
pusha
and
nop
scas
cmc
out
imul
sbb
mov
repnz
pop
sar
jmp
ret
push
push
push
in
mov
or
lret
movsl
xor
jge
leave
inc
dec
mov
mov
daa
push
add
push
inc
or
fstl
add
cmp
dec
jae
les
adc
scas
inc
fisubl
sarl
xor
lods
shr
pop
cmp
shll
and
jl
pop
lock
sub
push
out
sbb
cmp
lahf
xchg
pushf
xlat
out
xchg
orl
mov
push
pop
jbe
xor
pop
dec
xor
clc
imul
int3
lods
in
sub
push
jns
out
cmp
daa
test
cmp
or
bound
sub
inc
nop
sub
xchg
mov
pop
or
sbb
ror
insl
push
mov
lds
inc
fisttpll
scas
lcall
scas
inc
xchg
hlt
add
jo
cmp
sub
rolb
pushf
cli
pop
mov
dec
dec
push
stos
insb
gs
mov
ds
scas
stos
sbb
out
mov
or
imul
cmp
ds
jns
lcall
jbe
mov
adc
jb
mov
jae
je
in
mov
pop
pop
lods
sti
jno
shr
adc
sbb
fistpll
test
mov
or
cmp
push
in
das
sbb
sbb
and
jl
and
pop
aad
in
shll
aaa
loopne
sbbb
icebp
inc
pop
mov
jmp
xor
push
test
dec
xlat
subl
into
out
ljmp
xor
fcmovb
dec
mov
es
push
mov
pop
xchg
mov
scas
sti
lahf
jo
mov
or
xor
add
sub
mov
in
jb
popf
pushf
cmp
out
lret
xor
add
mov
pop
mov
gs
testl
addl
mov
scas
jl
sub
ja
jbe
rcrl
inc
imul
xchg
movsb
jno
mov
pop
movsl
stos
cmp
ss
fwait
test
fdivr
mov
js
jns
add
stos
xorl
fs
idivb
mov
mov
les
stos
sub
sbbb
mov
mulb
in
pop
stos
inc
imul
xor
mov
pop
and
add
jno
fcomp
fucomi
sub
mov
popa
mov
and
adc
push
mov
inc
push
rorl
add
fistpll
fiaddl
jb
adc
mov
push
into
jle
mov
xorb
imul
jb
pushf
dec
fldt
push
and
ljmp
sbb
jle
jle
aad
adc
jbe
dec
jle
xchg
adc
ja
cmp
fisubl
sbb
mov
push
xchg
inc
dec
fs
ret
mov
aam
xlat
cs
ja
inc
mov
stos
lret
adc
lods
sbb
xchg
fsubl
push
pop
fldcw
cli
and
xlat
scas
es
popa
push
add
cld
jle
cmpsl
jle
xchg
mov
sti
sbb
xchg
mov
pop
or
mov
xor
mov
and
dec
pop
and
aaa
jmp
mov
in
jecxz
mov
sub
xor
out
lahf
aam
sahf
lret
and
xchg
js
cmpsb
enter
adc
cmp
add
xor
stos
mov
push
leave
mov
xor
fistpl
mov
cwtl
arpl
ret
popl
cwtl
dec
push
aam
daa
int
sbb
jge
inc
clc
out
xlat
xor
ds
push
mov
mov
push
pop
adc
in
fisubrs
push
icebp
loop
push
lods
outsb
sub
cmpsb
es
leave
loop
pop
bound
pusha
daa
cmpsl
sbb
adc
fldpi
and
loope
lret
das
xchg
or
addr16
stos
lret
mov
test
sub
fisubl
xchg
cmpsl
in
out
xor
xchg
cmp
rorl
push
jno
mov
inc
dec
pop
enter
mull
dec
fucomip
in
cld
pop
xchg
popa
cs
adc
cmp
daa
lods
push
jl
mov
jno
adc
stc
push
scas
push
sbb
aaa
sbb
push
sbb
es
mov
push
lcall
or
pop
sahf
pop
in
hlt
or
adc
lods
mov
cltd
pop
cmpsb
push
mov
jl
call
fsts
std
jae
jnp
adcl
test
loop
stc
iret
movsb
sti
push
mov
call
sub
mov
mov
cmp
and
sbb
add
or
enter
sbb
inc
mov
push
and
cmp
adc
cmpl
enter
hlt
es
jmp
aas
arpl
mov
cld
mov
dec
cmp
cmc
adc
jnp
rol
pop
cmpl
pop
xor
aam
mov
scas
push
in
jg
fisttpll
orb
fstp
xchg
add
outsb
cmc
lock
std
cmp
mov
inc
mov
pop
stc
adc
pop
leave
imul
into
ljmp
push
pop
popa
aaa
xchg
xchg
dec
mov
inc
outsb
add
cli
push
shl
rcll
xchg
mov
inc
in
lods
aam
int3
push
or
dec
pop
add
add
imull
fsubrs
fucomi
cwtl
scas
arpl
mov
mov
inc
cli
test
mov
and
pop
shlb
movsb
movsb
mov
andl
or
dec
jg
subb
popf
push
arpl
mov
mov
jg
sahf
rol
lcall
fsts
cmp
call
mov
or
xor
lcall
out
mov
dec
outsb
lcall
push
inc
fmuls
mov
jp
mov
cld
int
int3
mov
hlt
jns
adc
inc
or
mov
sub
and
inc
jp
scas
jp
pop
lret
pop
fs
repnz
cli
mov
jne
push
mov
loop
mov
sahf
hlt
and
jecxz
daa
leave
outsl
or
movsb
ss
pop
cmp
add
lock
loopne
rep
pop
popa
scas
rclb
jg
inc
inc
stc
test
rorl
mov
mov
gs
std
mov
pop
sti
pop
out
adcl
pop
xor
jb
push
cmp
push
fildl
push
in
nop
mov
inc
divl
dec
adc
in
jb
mov
and
xor
movsl
ret
mov
ds
into
shlb
lock
mov
loopne
pop
mov
hlt
sub
je
push
pop
arpl
jle
aam
jmp
sub
mov
push
inc
jle
outsl
and
pop
pushf
mov
push
jl
pop
mov
pop
mov
push
pop
lahf
icebp
lods
jecxz
sbb
lock
pop
or
out
xchg
inc
mov
push
pop
mov
ret
jmp
pusha
jae
fcmovnbe
ret
sbb
xchg
inc
sbb
adc
push
and
aas
mov
jmp
sahf
lods
cmp
shl
jbe
arpl
mov
std
and
jge,pn
inc
mov
rclb
jbe
ret
fs
push
dec
out
mov
std
pop
in
nop
in
loope
icebp
jecxz
movsl
int
push
test
mov
nop
sub
xor
pop
pop
mov
mov
aad
push
faddp
insb
add
movsb
cmpl
sbb
cmp
and
out
out
movsb
pop
lds
and
dec
dec
cltd
mov
mov
daa
jle
push
xchg
xor
sub
sbb
jle
into
shlb
jbe
cmp
pop
scas
test
loopne
lds
add
adc
mov
stc
clc
out
push
xor
sbb
push
inc
fdivs
xor
xchg
lods
adc
enter
push
xchg
cmpsl
in
pop
int3
lock
mov
repnz
xchg
jl
adc
aad
nop
pushf
xor
xchg
mov
ret
out
pop
js
adc
pop
inc
mov
in
xchg
cltd
in
mov
imul
rcll
sbb
cmpsl
stc
jmp
jge
rorb
ja
cmpsl
mov
push
cmp
fimuls
mov
cmp
mov
filds
mov
mov
mov
adc
push
leave
out
mov
imul
fisubrs
icebp
jmp
imul
les
inc
into
insb
es
push
cmp
mov
ljmp
xchg
fsubr
push
xorb
push
add
xor
outsb
cli
mov
shll
lods
cwtl
jns
shlb
lret
xchg
leave
sub
mov
pop
out
sbb
roll
push
lock
inc
std
or
xchg
and
jl
dec
sahf
fnstenv
cli
add
push
and
ret
mov
adc
xor
cmc
out
lods
cmp
shrb
loopne
inc
lahf
adc
mov
sbb
pop
xor
pop
test
push
push
xlat
mov
jg
sbb
dec
daa
lahf
or
xchg
mov
xchg
inc
cmpsb
add
fwait
inc
mov
inc
ret
in
or
movhps
push
fisttps
jecxz
icebp
es
arpl
movsl
pop
nop
jge
je
ret
loopne
xchg
test
imul
out
adc
jne
bnd
add
mov
push
shrl
and
outsl
cmc
jnp
add
mov
mov
cmpsl
and
movsb
cmpsb
inc
cwtl
push
sub
lahf
mov
testb
lcall
outsb
dec
loopne
cmp
inc
loope
xor
sub
cmp
lret
cmp
addr16
and
pop
adc
cmpsl
sub
xor
jb
dec
loop
rorl
add
test
pop
push
int3
in
movsl
out
dec
push
adc
xorb
fimuls
ss
out
cli
addr16
jbe
dec
xchg
add
sbb
sti
mov
stc
aam
rcl
cld
push
cmp
imul
jbe
jle
jns
dec
psubb
sbb
aaa
mov
loopne
stos
sub
add
add
fcompl
cmp
stc
mov
cmpsb
mov
leave
sbb
add
push
jg
or
pusha
jns
orb
mov
xchg
sbb
stos
mov
mov
rcll
sbb
in
push
aam
fmull
dec
lds
xor
xor
data16
sub
out
pop
or
test
mov
fwait
stos
mov
inc
pop
mov
jo
mov
popf
movl
aad
and
dec
andl
jne
aam
ret
add
in
xor
xlat
mov
cmpsl
inc
jb
inc
xor
daa
call
inc
sbb
dec
outsb
inc
outsb
jo
shrb
pusha
add
sub
fwait
mov
ljmp
test
pop
pop
mov
test
test
pop
ret
fsubrl
cs
mov
cmc
mov
lock
cmpsb
cmpsb
movsb
mov
scas
movsb
dec
and
xchg
inc
dec
shr
xor
fisubrl
push
out
test
arpl
mov
or
mov
dec
je
jae
xor
dec
sub
push
mov
ja
into
sub
ljmp
pop
cs
push
out
test
cmpsl
fcoml
stos
rclb
fldenv
mov
or
xchg
insl
lock
adc
add
xchg
je
outsl
mov
jbe
fstl
dec
mov
leave
push
mov
xchg
stos
sub
sbb
or
add
xchg
and
jnp
inc
xchg
popa
in
xor
lods
jmp
inc
inc
mov
mov
push
mov
xchg
mov
rcrb
add
nop
dec
mov
cld
xchg
cmp
aam
mov
dec
sbb
dec
xor
mov
popf
inc
je
div
jnp
and
leave
adc
subb
dec
outsb
lods
cmp
xchg
xor
outsb
pop
cmp
xchg
pusha
mov
in
pop
lods
or
shlb
fmul
xor
cmp
mov
inc
cmp
mov
sub
movsb
in
cmp
test
notb
and
or
sub
push
mov
mov
xor
lret
jmp
pusha
cmp
jle
icebp
mov
lahf
push
mov
and
jnp
inc
jle
and
sub
loopne
pushf
in
mov
jp
push
sbb
fcompl
push
xor
sti
push
hlt
sub
mov
jns
dec
mov
mov
mov
std
popf
mov
pop
inc
stc
test
or
or
mov
aas
and
dec
cld
xor
and
aas
std
insb
xchg
inc
data16
pop
jle
std
push
jbe
popa
fs
inc
jae
push
xchg
sub
out
fwait
lcall
fbld
mov
icebp
cli
cli
add
sbb
fisubl
aas
pop
in
xchg
shlb
pop
ucomiss
or
push
mov
nop
sbb
shrb
pop
push
mov
jg
pop
or
or
loopne
in
pop
mov
cmp
fnsave
inc
cmp
pop
xlat
jb
jno
ret
xchg
jbe
xchg
mov
inc
sub
or
out
rorb
sub
andb
mov
orb
dec
fxam
cmp
add
mov
push
push
pushf
xor
push
fistpl
arpl
xchg
test
or
jb
fisttpll
sahf
aam
dec
or
xor
jp
pop
or
xchg
and
test
jnp
adc
mov
push
inc
lret
mov
out
mov
push
fists
lods
xor
push
cmpsb
dec
stc
call
xorl
in
aad
cmp
xor
mov
jb
add
mov
cmp
and
mov
xlat
aad
fidivl
out
fistpl
xchg
sbb
js
xchg
jo
in
mov
lret
mov
mov
cmp
inc
xbegin
fsubrp
cmp
ficomps
ss
mov
xor
stc
stc
mov
in
jg
add
out
fucomip
fisubs
mov
popa
xor
cs
xchg
adc
jne
int
inc
mov
push
aad
int3
aaa
cmp
and
in
mov
xchg
dec
aas
inc
jbe
clc
iret
or
cmpsl
inc
add
xor
fstpl
lea
xor
div
cmc
fs
jbe
xlat
mov
push
pop
cmp
pushf
outsb
je
xor
and
lods
imul
dec
sub
test
jecxz
es
jge
outsb
lods
js
into
sbb
mov
int
out
nop
aaa
lds
iret
imul
leave
inc
test
xor
test
scas
rcrl
int
addb
xlat
push
cmp
dec
jb
out
daa
mov
cmp
and
aam
out
insb
xchg
insl
mov
popa
movsb
test
stos
and
sbb
push
xchg
popa
lahf
pop
add
inc
fiadds
frstor
push
repnz
xchg
popf
mov
decb
je
sub
add
xchg
ret
dec
pop
popa
shlb
push
mov
in
add
cmp
ret
enter
test
pop
pop
mov
jae
push
fdivr
xchg
lret
sbb
sti
or
inc
pop
push
outsb
mov
and
fildl
sub
xchg
push
cs
jp
dec
mov
jbe
fs
mulsd
imul
cmc
aas
cmp
mov
iret
inc
mov
lea
inc
cmpsb
pop
mov
sub
mov
adc
sbb
and
pop
jp
sub
jl
sbb
call
dec
lahf
shll
mov
inc
subl
out
inc
mov
inc
in
xlat
and
imul
mov
push
sbb
mov
mov
pop
fs
scas
push
clc
jae
push
add
or
lods
das
pop
dec
add
xchg
lret
fcomp
bound
into
sbb
repz
sub
add
jb
jg
sub
inc
out
or
add
adc
xchg
cmpsb
inc
imull
mov
add
imulb
mov
pop
or
lret
inc
rcr
pop
push
jns
ss
pop
in
inc
pop
cmp
test
xchg
sarl
dec
scas
xchg
cmp
and
sbb
rclb
adc
mov
les
out
push
sbb
out
jae
add
xor
mov
fcomps
and
test
movsl
lock
push
cltd
shrb
out
fbstp
jge
int3
andb
xchg
ret
fcoml
mov
adc
pop
fcom
sub
sti
jecxz
stos
cmp
inc
jmp
and
js
push
hlt
mov
popa
sar
test
lret
push
pop
sub
mov
stos
xor
mov
sub
lret
mov
lds
pop
scas
jbe
insb
or
fcmovnbe
rcr
cmp
rclb
mov
test
scas
lcall
sahf
or
sahf
lret
iret
cmp
push
sub
cmpxchg
and
rorb
addr16
lcall
fidivrs
push
lods
jle
inc
mov
jge
fstpl
sbb
scas
sbb
leave
xchg
and
xor
cmp
push
lret
push
mov
jmp
or
sbb
insb
jl
lret
mov
and
ret
mov
sbb
push
cmp
sti
xchg
clc
hlt
add
adc
clc
pop
cmpsb
insb
add
rcll
inc
out
push
hlt
cltd
arpl
popa
cwtl
xchg
inc
daa
push
and
dec
mov
mov
dec
out
push
ss
sub
cmp
test
call
es
bound
loope
rcrl
fdivl
pop
ss
es
or
iret
adc
and
orl
xor
cmp
mov
leave
pop
lds
inc
ret
xchg
adc
add
lcall
pop
imull
mov
inc
bound
out
mov
orl
mov
xor
pop
sbb
aas
push
into
in
loope
loop
lods
cmpsl
data16
jp
dec
fsubs
cs
cmp
cld
push
xorl
out
dec
mov
das
divl
jo
int3
push
and
nop
mov
out
mov
scas
mov
adc
lock
xchg
stos
das
lods
pop
jle
imul
into
push
gs
stos
stc
ret
jns
push
lea
mov
and
mov
pop
push
sub
or
push
pop
jnp
cld
inc
xor
repz
insl
and
pop
hlt
test
dec
mov
popf
cmp
xor
dec
jno
cli
push
adc
or
in
jne
push
ljmp
cwtl
jno
stos
adc
mov
jns
push
xor
cmp
aad
inc
insb
mov
pop
adc
arpl
cli
push
and
push
out
mov
icebp
out
in
or
mov
or
mov
dec
adc
imul
mov
adcl
inc
lods
cmp
call
sahf
dec
xchg
cmp
sub
ss
out
cltd
and
mov
pop
and
insb
pusha
push
outsl
icebp
loopne
cmp
mov
push
stc
xchg
hlt
stc
xor
mov
aam
add
andl
mov
and
hlt
rclw
in
mov
inc
dec
lods
addr16
add
lret
scas
cltd
pop
lock
mov
imul
pop
push
xor
jg
inc
out
pop
jns
sarl
mov
push
jns
test
jns
xor
sub
lcall
inc
ja
inc
sti
xlat
and
js
jns
push
or
dec
dec
imul
cli
mov
adc
jge
iret
or
dec
aaa
pop
jmp
jge
add
hlt
or
fstpt
jg
add
jne
and
dec
bndldx
jle
iret
test
push
subl
inc
sti
adc
xchg
lds
and
je
mov
lret
lods
mov
in
adc
or
push
sbb
bound
fs
xlat
repz
jmp
std
jle
cltd
aam
jne
adc
sub
cld
add
out
mov
daa
movsl
xor
es
mov
and
push
rolb
sbb
xor
push
xchg
arpl
mov
mov
add
cmp
mov
mov
pop
dec
push
xor
dec
test
lods
outsb
pop
jle
arpl
dec
dec
jbe
mov
test
mov
in
movsl
arpl
in
mov
je
push
out
mov
jne
jno
out
mov
stc
push
pop
ret
dec
mov
popf
mov
popf
sub
ret
fwait
data16
adc
mov
inc
in
mov
loop
sbb
dec
out
add
je
xchg
mov
cld
and
mov
negb
inc
outsl
aam
in
mov
add
sbb
fcomps
sub
cmp
inc
mov
cltd
sub
scas
xor
add
jl
push
jle
imul
cwtl
add
push
add
fidivrl
or
pop
cmp
pop
pop
fcoml
daa
add
or
dec
std
mov
jbe
push
or
and
push
push
xchg
xchg
rorl
imul
mov
cmpb
into
call
insl
insb
js
insb
xor
push
insb
push
sub
call
inc
sbb
jo
jl
adc
loop
inc
inc
or
dec
daa
rcrb
test
push
das
shrl
xchg
adc
pop
dec
cs
push
cli
je
test
adc
cltd
in
inc
adc
cld
and
lea
insl
in
flds
adc
in
sahf
inc
and
sub
adc
lcall
fnstcw
xchg
and
and
add
inc
and
inc
adc
xor
cld
nop
scas
faddl
lcall
and
or
push
int
inc
adc
in
dec
xchg
out
lods
xchg
mulb
xchg
mov
popf
pop
nop
dec
test
lret
lock
mov
jae
push
cmp
orl
aas
xchg
addl
leave
mov
add
popf
inc
outsl
ss
mov
cmpsl
xor
xor
inc
gs
loopne
pop
add
inc
sti
aaa
mov
loope
mov
cwtl
mov
aad
mov
fwait
call
mov
cmpsb
mov
jle
lea
adc
add
mov
bound
xchg
ljmp
repz
sub
fstpl
push
mov
cmp
test
mov
cmpsl
and
mov
and
fucomp
mov
jle
and
cs
in
aas
cmp
dec
sbb
and
push
aad
xchg
aad
lods
xchg
test
dec
xchg
movsl
mov
call
pop
dec
or
addr16
jno
out
sar
xchg
jae
addr16
sbb
cmp
popa
jnp
andps
pop
pop
inc
imul
pop
nop
cli
loope
int
add
imul
movsb
mov
ljmp
lret
xchg
mov
push
mov
stos
lcall
mov
add
shlb
dec
hlt
jne
adc
ds
lcall
lds
or
jb
xchg
mov
movsb
mov
movsb
sbbb
push
out
movsl
nop
xor
in
movsb
cmp
dec
fdivrs
cmp
dec
lods
aaa
jno
repnz
and
xchg
out
fistl
cmpsb
out
xorl
and
scas
add
xor
mov
or
into
or
les
jecxz
in
add
or
add
jle
adc
and
rolb
lds
lds
pop
jmp
xor
rcrb
and
mov
int
lret
lret
xor
test
cld
ja
push
inc
insb
jo
push
stos
push
jg
lods
out
fldcw
lret
int3
adc
sbb
mov
mov
mov
loop
mov
add
sub
jp
jb
jno
pop
arpl
out
leave
dec
pop
adc
mov
jno
repz
mov
push
test
inc
and
push
xchg
hlt
push
dec
dec
xchg
popa
loop
in
outsl
iret
xor
mov
mov
mov
sub
adc
push
xor
pushf
enter
std
push
mov
jle
in
lds
aam
xor
aaa
sub
pop
mov
push
jp
pop
mov
xchg
inc
in
mov
dec
pop
insl
mov
movsl
data16
or
dec
cmp
add
pop
filds
pop
jno
sub
xchg
xor
ret
icebp
rorb
insl
shll
call
jo
cmp
cmp
push
pop
movsb
lret
xchg
sahf
aas
negl
xchg
cmp
mov
lret
xor
or
xchg
paddd
pushf
push
loopne
lock
inc
jnp
enter
int3
pmaxub
mov
sarl
pop
and
mov
nop
out
popf
cmp
sbb
aaa
loop
mov
xchg
negl
repz
ds
shll
jbe
ljmp
pop
lahf
stos
mov
pop
in
js
dec
mov
std
popa
mov
cmpb
mov
movsl
jge
push
xlat
js
jmp
ljmp
jmp
adc
mov
stc
sub
sub
inc
add
add
inc
pop
daa
jbe
pop
sub
adc
loop
outsl
jmp
ljmp
pop
mov
cmp
sti
and
dec
add
popa
or
lret
out
sub
dec
mov
push
adc
jg
lock
mov
movsb
mov
push
jb
mov
or
test
loopne
and
pop
rcll
push
orl
fwait
mov
mov
test
sbb
rcl
cmp
into
ss
xchg
testb
pop
add
addb
daa
call
jg
cmp
push
test
cmp
inc
cmp
ds
ss
mov
mov
aas
jmp
imul
push
or
add
sbb
fscale
xchg
jmp
mov
xor
adcl
xor
jb
xor
inc
cs
sbb
scas
insl
ret
adc
push
push
dec
rcr
gs
jmp
add
lahf
xchg
aam
movsb
ja
nop
js
add
data16
imul
mov
addb
jp
in
scas
cld
lret
jmp
pop
sub
popf
shrb
inc
inc
mov
mov
fs
jle
pop
xchg
addl
out
add
mull
sbb
cmp
jbe
cmp
mov
xchg
ficomps
and
jmp
mov
je
xchg
stos
cmp
insb
mov
inc
jle
add
cmp
popf
popl
jno
popf
adc
dec
adc
cmp
pop
stos
lods
stc
pop
es
ljmp
mov
fldl
xchg
clc
cltd
int
out
push
std
pop
adc
jg
les
dec
icebp
xchg
push
std
repnz
popf
sarl
in
in
ljmp
sub
push
cltd
add
and
sbb
dec
cmpsb
jbe
pop
mov
das
neg
test
pushf
stos
fadd
addr16
push
imul
sbb
push
scas
jle
and
add
mov
cld
pop
outsl
add
ss
dec
sub
jecxz
cmp
or
insb
and
sbb
push
das
aam
jno
adc
sub
rorb
int3
out
inc
pop
sbbl
inc
loopne
idivl
daa
ljmp
int3
cwtl
imul
aam
xchg
sub
sub
imul
loop
cmpsb
add
je
push
inc
andl
pop
lods
scas
setae
xor
cmpsb
lea
inc
lds
pop
and
or
cmp
push
in
mov
cmp
mov
adcb
jae
nop
ds
sbb
sub
sub
jg
inc
mov
mov
test
or
outsb
sbbl
cs
ret
movsl
xchg
call
std
adc
popf
jno
mov
cmpsl
popf
mov
iret
mov
ljmp
ret
dec
ret
iret
sahf
xchg
hlt
int
pop
mov
lea
test
mov
mov
insb
pop
xor
int
adc
out
fdivrl
pop
mov
xchg
mov
rcrb
aas
jecxz
arpl
mov
push
sbbl
loopne
mov
mov
xchg
adc
cs
stc
adc
inc
fwait
lods
jno
jecxz
sti
cltd
xor
mov
ja
fnstsw
add
mov
dec
imul
cmp
inc
jge
into
and
jae
fs
xor
mov
and
lcall
aaa
xor
jg
in
add
idiv
or
aas
test
movsl
int3
mov
call
movsl
and
xlat
es
outsb
lea
dec
dec
mov
cmpsb
xchg
sub
cmp
dec
adc
lret
jle
jl
lods
mov
insb
sti
add
enter
lret
xchg
dec
mov
add
out
fiaddl
ret
adc
sbb
push
push
jl
insl
xchg
notb
pop
scas
mov
cwtl
xchg
scas
rolb
mov
in
mov
mov
cmpsl
popf
mov
lock
addr16
fnstenv
mov
test
fidivrl
xchg
add
dec
ficompl
mov
mov
enter
adc
fsubr
pop
scas
std
mov
lret
int3
sub
sub
mov
adc
in
adc
lcall
xor
mov
mov
stos
sbb
mov
call
sbb
data16
hlt
fs
dec
lock
mov
xchg
xorl
aad
ficoml
aam
cmp
add
jg
cmp
stos
sahf
roll
jb
cwtl
dec
fstpt
push
inc
cs
mov
dec
dec
adc
ja
test
sbb
data16
push
scas
jmp
pop
xchg
test
outsb
xchg
scas
out
bound
adc
test
data16
ret
fiaddl
pop
pop
pop
mov
pop
jmp
movsb
sbb
lds
sbb
push
or
lahf
push
lods
test
insb
fwait
jle
rolb
shll
jo
in
scas
and
leave
scas
hlt
sub
sbb
jo
dec
dec
ret
xchg
mov
aad
test
or
jae
lods
fistpl
ror
jmp
dec
jns
pop
push
scas
cmpsb
insl
dec
out
push
cmp
push
and
add
jo
push
rcr
sbb
pop
jmp
sub
scas
xor
mov
in
xchg
adc
sbb
inc
test
scas
push
mov
outsl
iret
sbb
add
lods
repnz
and
pop
je
loop
sahf
xchg
in
rorb
jo
dec
and
pop
sbb
rcrl
jae
out
inc
psllq
pop
fcom
fmuls
in
clc
cmp
and
mov
push
adc
lods
es
push
add
sbb
clc
cmpsb
mov
and
lret
push
add
inc
adc
lahf
aad
mov
sbb
iret
ljmp
jns
and
inc
and
ret
daa
push
adc
sahf
push
dec
add
out
jo
mov
loopne
jno
nop
lods
shl
add
test
mov
mov
mov
xlat
enter
xchg
into
jbe
jo
dec
ja
popf
das
mov
mov
out
cmpl
clc
int
mov
push
mov
jnp
lds
test
cmpsl
mov
int
dec
push
push
jmp
add
adc
aad
mov
cmp
fdivrs
gs
pop
cmp
push
enter
enter
push
jle
add
mov
lods
call
stc
int
mov
imul
dec
inc
arpl
cmp
sub
movsb
push
testb
sti
imul
mov
jmp
push
cs
mov
pushf
pop
push
arpl
pop
stos
loopne
dec
jp
push
je
loop
in
jnp
jmp
cli
mov
xlat
jecxz
sub
jp
sub
add
in
push
push
lds
cli
xchg
ds
mov
loopne
pop
cwtl
ljmp
fiadds
jecxz
ljmp
sub
or
pop
aam
cmc
imul
mov
mov
in
mov
mov
les
push
ret
rolb
mov
ret
cld
lcall
and
out
and
sub
insl
cmp
in
adc
push
xchg
adc
jg
mov
decl
push
jg
lret
in
aaa
xor
sub
das
loop
jno
lea
stos
and
mov
jmp
xchg
int
arpl
lods
scas
jge
in
mov
cmpsl
xchg
xchg
jne
jo
test
mov
cmp
sub
cmp
inc
arpl
xchg
pop
fs
movsb
push
xor
cmp
lods
sub
mov
adc
cmp
push
insl
mov
cmp
mov
push
mov
xchg
sar
jp
test
sti
push
push
pop
cmp
cmp
sahf
jns
jns
and
xchg
or
data16
push
push
inc
outsl
push
arpl
cmpsl
adc
adc
mov
pop
jecxz
push
cwtl
push
jl
xchg
or
pop
fwait
aas
pop
fstp
in
call
inc
pop
in
mov
jnp
dec
fiaddl
sbb
and
leave
xchg
or
cltd
jl,pt
push
inc
ret
sbb
adc
cmp
and
in
push
add
gs
fsubrp
sbb
inc
adc
aad
xor
loope
stos
orb
mov
cmpsl
dec
sub
nop
stc
push
rcr
jns
and
fldcw
pop
jmp
mov
inc
mov
or
xchg
lea
call
xor
cmp
mov
sbb
shlb
dec
les
cmpsl
jnp
sub
int
dec
les
mov
outsl
and
and
mov
ss
pusha
cs
lret
mov
pushf
xchg
mulb
ret
out
std
rcr
jns
cmp
scas
sbb
pop
inc
sarl
add
jmp
xchg
cmp
pop
mov
jge
ss
aaa
es
pop
fisubs
filds
jnp
jge
movsl
movsb
pop
repnz
cs
push
lods
cltd
rolb
sarl
pop
push
and
adc
cwtl
lods
xchg
cwtl
jae
mov
or
stos
fistpll
sub
sbb
xchg
mov
sub
ja
popa
mov
jnp
movsl
cwtl
pop
inc
adc
xor
scas
xorb
imul
cmpsl
pop
add
imul
push
mov
pusha
das
dec
lahf
push
pop
stos
cld
sarb
mov
pop
div
xor
pop
cmpsl
sub
gs
xor
push
pop
mov
and
mov
bound
mov
enter
mov
dec
xor
je
in
mov
cs
sbb
sub
mov
mov
adc
xchg
xchg
rcr
mov
out
jae
push
cmpsb
sub
pop
scas
into
add
pop
jns
mov
mov
movsl
hlt
popf
lock
adc
xchg
mov
iret
jns
ja
dec
lods
cmpsb
popf
lods
insb
push
adc
and
lea
push
cmp
sbb
cmp
andb
outsl
xlat
fs
setne
jl
imul
push
sbb
mov
repz
sbb
pushf
and
mov
sbbb
push
outsl
sbbb
cld
outsb
ret
cmp
lods
daa
add
xor
and
xchg
loop
dec
lods
aam
movsb
iret
hlt
out
dec
inc
ja
mov
fildll
or
sbb
xchg
in
out
pop
xor
jmp
rcrl
and
or
scas
subb
jle
in
dec
cs
mov
jg
xorb
imul
shlb
push
jnp
negb
das
ficoml
mov
in
pushf
or
dec
shrb
jbe
lcall
pop
or
add
loopnew
in
xchg
dec
pop
sbb
pop
push
sbb
inc
jbe
push
mov
lret
in
enter
stc
mov
inc
sti
sbb
and
gs
push
repnz
add
imul
mov
mov
popf
call
hlt
and
out
xchg
jnp
or
add
in
sbb
fdivr
les
or
pop
lahf
jp
fadd
pusha
cmpsb
push
push
arpl
inc
jnp
sub
jo
nop
aaa
mov
loope
leave
cmpsl
shll
lods
fildl
xchg
mov
lds
sub
hlt
fadds
jmp
adc
gs
clc
into
mov
and
dec
scas
sar
cmp
add
pop
or
or
sub
ds
xor
xchg
xchg
sbb
fnclex
mov
inc
jmp
cltd
pop
add
sti
popa
leave
jno
jp
js
and
jmp
and
or
xor
pusha
cld
add
or
jb
jecxz
loope
xchg
xchg
mov
lcall
fs
insb
stos
push
mov
test
inc
movsb
jmp
test
icebp
add
adc
xor
dec
cmp
fadd
sbb
sbb
mov
push
outsb
pop
cwtl
pop
mov
into
ss
fnsetpm(287
sbb
addr16
in
mov
xchg
pop
scas
push
jae
pop
movsb
xbegin
xor
out
jl
cmp
sbb
sbb
fidivs
divl
cmpsb
loope
stc
or
push
mov
pop
sbb
dec
jg
cmp
fidivs
push
aam
and
les
push
popl
nop
movsb
cld
imul
out
insb
roll
lret
add
sub
xchg
rorl
xchg
xor
shrb
imul
and
jbe
shlb
insb
mov
dec
jnp
jle
mov
mov
jae
inc
jle
cld
or
fdivrp
lods
fmulp
je
test
iret
imul
subl
inc
lcall
nop
xor
data16
mov
test
test
int3
ja
cmpl
xchg
push
imul
out
inc
arpl
cmpsb
sbb
test
xchg
rorb
mov
sub
test
jmp
mov
out
decl
sbb
call
add
cmpl
mov
dec
es
ja
dec
lret
fistps
xchg
cmp
or
sub
clc
ja
pop
fcmove
inc
cmc
fbld
xchg
fsincos
adc
das
push
cld
sbb
and
and
stos
stos
and
xchg
test
cmc
jns
imul
lock
scas
mov
adc
clc
or
insl
mov
out
push
xor
repz
xor
les
addl
gs
imul
mov
scas
movsl
leave
and
call
inc
dec
fimuls
push
inc
adc
or
jnp
adc
fdiv
xor
mov
lret
cmp
aad
in
mov
sahf
mov
and
cmp
sub
shrb
adc
fldt
mov
or
ljmp
pop
jmp
je
shrb
push
add
stc
xlat
and
mov
orl
fs
xchg
loop
mov
orb
in
xchg
adc
adc
scas
jo
sahf
subl
in
in
xchg
mov
mov
xor
inc
orl
xor
xor
shlb
mov
mov
and
mov
ret
jns
and
xor
jbe
leave
pop
testb
es
xor
mov
ret
dec
movsl
mov
cs
push
cmc
add
rorl
xchg
push
std
push
fldcw
insl
sub
sub
jns
push
jge
jno
ret
les
bnd
jge
xchg
jne
xchg
push
das
mov
das
les
cltd
mov
dec
stos
xchg
xchg
cld
inc
push
jnp
dec
and
ss
mov
leave
cmp
xor
cwtl
and
xorb
dec
pcmpgtw
inc
popa
inc
cmpsb
and
or
mov
or
js
xchg
add
and
dec
imul
inc
mov
jg
xor
out
fsubp
pop
rcll
in
inc
xlat
jnp
mov
push
sahf
jp
xchg
pop
test
jbe
out
pop
aam
mov
leave
push
inc
pop
cmp
data16
fnstsw
pop
inc
xchg
mov
divl
mov
xor
adc
sub
pop
cmpsl
pop
lcall
xchg
xor
pop
pop
cmp
xor
pop
stos
lret
jns
aas
pusha
subb
add
js
mov
cmpsl
jmp
jmp
cmpsb
lods
add
add
mov
mulb
or
jge
adc
sbb
dec
jb
dec
mov
pop
cli
imul
and
dec
in
stos
or
popf
push
les
fwait
in
movsb
ret
ss
mov
repnz
mov
mov
mov
dec
fucomp
mov
jle
loop
scas
and
in
inc
je
shll
les
jl
dec
pop
mov
rcrl
mov
ja
sti
cmp
mov
daa
insl
mov
aam
shll
mov
jno
jp
inc
notl
jno
dec
lahf
cmp
or
cmc
and
leave
divl
mov
xchg
lcall
fwait
rcl
adc
fstp
jmp
jbe
push
out
lcall
cmp
adc
inc
lahf
out
add
int
inc
sbb
test
rcrl
aas
cmp
and
popf
repz
nop
pop
jmp
push
dec
cli
imul
cltd
dec
dec
out
mov
addr16
test
fnstenv
cmc
out
push
mov
in
in
std
dec
push
push
cli
or
adc
and
mov
xchg
mov
insb
add
or
pop
rcr
fdivrp
inc
add
fs
inc
adc
repnz
loope
lea
cltd
rcll
fdivrl
out
and
sahf
into
lret
clc
jo
rcrb
outsb
bound
push
pop
sub
pop
cld
mov
sarb
lahf
icebp
jbe
cmc
adc
sbb
in
sbb
push
aam
movsl
cmpsb
test
repz
xor
mov
xchg
popa
mov
iret
inc
idiv
xchg
xchg
in
xchg
cmc
std
fists
and
imul
mov
jmp
aad
cmp
test
jmp
inc
sbb
jl
push
loope
loopne
out
mov
addb
sub
or
xchg
sub
sti
adc
pop
inc
pextrw
inc
pop
fdivr
mov
fistps
xor
nop
mov
mov
mov
leave
stos
scas
imul
inc
and
aad
jmp
sbb
or
mov
inc
and
xchg
xor
je
adc
loop
pop
jbe,pn
iret
inc
cvttps2pi
sti
sub
mov
xor
cmp
pop
push
and
push
and
adc
mov
in
call
test
or
clc
dec
movsb
das
das
insl
test
les
jecxz
aaa
mov
cli
ljmp
out
sbb
mov
rolb
and
cmpsl
jb
jecxz
aas
or
lret
scas
pop
cld
mov
push
jp
pop
add
test
sub
movb
sbb
pop
pop
inc
mov
inc
ja
ja
and
ja
push
mov
pop
shlb
cmc
stos
sarl
mov
sbb
pop
insl
cld
out
test
mov
insb
push
inc
dec
cmp
mov
movsl
inc
cmp
xor
jecxz
mov
addr16
sbb
push
in
adc
scas
scas
arpl
outsl
cs
cmp
lcall
xor
dec
or
jmp
add
jmp
pop
push
push
scas
mov
lods
add
inc
ja
xchg
jae
movaps
mov
addb
mov
sub
repnz
and
mov
mov
jl
aad
daa
sbb
sbb
fstpt
sbb
push
push
in
sub
int3
fs
add
aas
lret
flds
inc
xor
jmp
fs
mov
insb
gs
xchg
sub
and
aam
mov
nop
adc
nop
and
lret
leave
data16
jne
cmp
add
jle
dec
sbb
test
add
fldcw
push
cmp
stos
xchg
popa
nop
lret
push
je
sbb
mov
fdiv
sbb
and
fsubrs
inc
repnz
cmp
or
mov
aas
clc
cmp
pushf
or
lods
pushf
hlt
mov
xor
xor
cmp
std
and
idivl
mov
add
ljmp
lods
fstp
xchg
bound
shrl
mov
mov
aas
enter
fsts
and
imul
lock
lds
icebp
fistps
negl
and
mov
pcmpgtd
jb
in
and
pop
mov
add
xlat
mov
inc
lods
hlt
test
cmp
add
cltd
rep
out
fdivl
in
pop
mov
jbe
cmp
test
test
mov
cmp
in
in
hlt
jecxz
mov
sbbb
push
inc
test
les
inc
inc
mov
sbb
icebp
clc
adc
out
and
lods
pop
adc
popa
xchg
and
lret
pop
and
sbb
int3
xadd
mov
sti
les
add
sbb
add
arpl
pop
sub
movsb
lcall
inc
add
cmp
inc
pop
clc
xor
aas
mov
mov
adc
repnz
sub
divl
or
aam
lea
add
lods
roll
mov
push
inc
pushf
push
xchg
xchg
or
into
gs
pusha
dec
das
call
pop
or
out
scas
insb
cwtl
mov
push
mov
cwtl
cmp
jo
out
push
sbb
movsb
xchg
jae
arpl
pop
adc
adc
jmp
push
scas
inc
pop
sub
mov
cltd
push
ja
mov
and
nop
mov
jmp
insb
add
dec
sarl
movsb
pop
int3
imul
gs
gs
aam
test
cmpsb
aas
gs
adc
and
push
jmp
loopne
xor
dec
lcall
push
mov
mov
push
pop
pop
test
push
test
pop
mov
adc
mov
aad
mov
mov
test
bound
pusha
mov
out
mov
in
xchg
mov
adc
test
aad
sub
pop
loopne
mov
scas
mov
insb
loopne
cmp
sbb
inc
sbb
push
sbb
jb
orl
fildl
sbb
push
inc
pushf
inc
bound
insb
or
xchg
push
test
in
jns
icebp
lret
and
dec
hlt
mov
shrb
adc
aam
mulb
repnz
enter
mov
push
test
js
add
jno,pn
jmp
adc
pop
push
xor
adc
cmp
pop
push
lods
mov
xchg
scas
adc
fcmovbe
xor
ljmp
push
or
in
icebp
jl
iret
cmp
scas
loopne
mov
dec
add
ret
and
ret
jge
popa
shll
loope
xor
loop
lret
loope
shr
xchg
repnz
mov
mov
div
add
mov
mov
outsb
lret
ljmp
mov
mov
adc
cmp
loope
es
imul
sub
call
loope
mov
fsubs
daa
inc
imulb
sbb
and
add
and
xchg
int
cmp
aaa
icebp
in
in
or
jae
mov
dec
shll
aas
fnstsw
repz
iret
mov
add
fbstp
mov
xor
add
push
cmp
fisttpl
mov
data16
aam
xlat
or
mov
in
jbe
or
mov
mov
shlb
sar
and
jle
dec
xor
aad
xchg
test
and
cwtl
adc
push
mov
hlt
cwtl
imulb
les
push
and
fisubl
push
dec
mov
add
sbb
in
pop
adc
jo
insl
dec
movsb
mov
or
mov
jnp
mov
cmp
mov
jae
push
cmp
inc
mov
mov
lahf
cmp
lock
scas
outsb
add
pusha
outsl
jecxz
loopne
sbbl
negb
push
mov
cmp
je
jae
mov
addps
lods
push
les
xor
pop
arpl
inc
fdivrs
mov
sqrtps
or
gs
xchg
insb
dec
mov
lods
repz
aaa
fistl
and
xor
push
data16
xchg
ficomps
dec
cli
repnz
push
outsb
rcl
clc
pop
les
jmp
ja
popa
jo
clc
xor
mov
rcrb
ret
xchg
mull
loopne
adc
jg
inc
xchg
and
out
notb
mov
sbb
xchg
push
stos
sub
add
shl
add
sbb
std
dec
daa
cmp
pop
jge
mov
aad
adc
inc
xor
push
mov
lods
pop
mov
pop
xor
fs
sarb
dec
cmp
mov
adc
xchg
dec
popa
cmp
pop
jp
cmp
dec
popa
sub
sub
inc
stos
fdiv
cmp
cmp
jno,pn
xor
push
xor
cli
inc
inc
jns
icebp
not
xor
pop
fsubl
xchg
shrb
testb
jmp
call
jmp
out
movsl
je
push
adc
fwait
pusha
pop
push
movsl
leave
xchg
mov
add
cli
sbb
out
jmp
fsubrl
arpl
in
push
bound
inc
arpl
mov
adc
mov
pop
sub
mull
cmp
cmp
pop
js
and
jp
or
cs
data16
pop
cmp
repz
js
imulb
fcmovbe
push
add
sub
fwait
movsl
cs
sbb
add
xchg
jne
pusha
cwtl
or
arpl
sbb
pop
inc
push
mov
cmp
sti
stc
sub
jecxz
mov
mov
out
sbb
stos
loopne
sar
movb
scas
aas
adc
xchg
ret
leave
adc
clc
rol
push
jmp
or
or
xchg
aaa
push
and
jp
push
pushf
dec
and
cld
push
sbb
loope
inc
in
push
pop
sub
pop
mov
jecxz
popf
cmp
in
scas
mulb
push
ss
inc
dec
loope
mov
and
xlat
scas
add
insl
xor
sbb
adc
push
lods
es
sub
xchg
mov
pop
fcmovb
test
test
adc
scas
push
insl
adc
testl
mov
push
sbbb
roll
leave
xlat
pusha
test
imul
pop
lds
daa
popa
lods
inc
dec
divb
xor
jno
fisubrs
subl
mov
cmpsl
jnp
sub
dec
rclb
cmp
sti
fistl
lea
fwait
inc
xor
xor
das
lahf
xor
sbb
jo
jno
les
mov
fwait
or
cmpsl
and
popf
mov
sbb
and
mov
lods
pop
adc
insl
adc
lods
xlat
cmp
mov
sub
and
mov
ljmp
mov
inc
sbb
loop
out
pop
lret
mov
mov
aad
inc
lods
inc
jno
nop
jo
lahf
and
inc
mov
out
inc
insl
rorl
out
filds
je
rcrb
movb
fistpll
xchg
fsubs
mov
sbb
mov
into
adc
mov
fmuls
mov
daa
cmp
aad
or
in
pushf
and
bound
iret
push
pusha
add
mov
push
push
idivb
and
lret
fs
aaa
stc
dec
into
pop
sbbl
xchg
insl
in
mov
or
loopne
fnsave
dec
sub
loope
add
add
jge
mov
or
mov
push
sbb
popa
push
das
push
push
or
shl
call
cmp
pop
or
xor
jecxz
in
push
adc
push
fcoml
jno
jge
mov
test
dec
sub
pusha
mov
xchg
call
js
pop
leave
sti
cmp
push
jae
pop
gs
xor
cmc
lahf
scas
imul
test
xchg
cltd
xchg
subb
test
int
cmp
jg
cli
sub
adc
lock
push
mov
jl
sub
dec
and
sbb
out
xchg
jno
mov
push
jmp
mov
and
pop
mov
or
dec
push
xor
and
sub
hlt
fidivrs
les
enter
mov
ljmp
incb
mov
cmp
les
mov
cmpsl
out
mov
add
and
add
fsub
xorl
sti
xchg
xchg
jnp
popa
int3
fldcw
push
in
push
mov
lcall
push
jb
mov
lock
xor
mov
sbb
lods
xchg
loope
out
loop
xor
push
rorb
shll
sbb
push
jle
add
insb
jb
cmc
add
sbb
in
mov
add
push
lods
pop
test
out
xor
mov
loope
lcall
jbe
mov
lret
or
sbb
popf
repnz
in
jl
pop
push
sub
je
nop
mov
neg
movsb
ret
cli
cmpb
mov
push
cmc
and
data16
jp
jo
or
pop
aaa
push
pushf
xor
push
pop
add
mov
insb
xchg
push
xorl
and
int
rol
sbb
xor
push
ret
cmp
and
mov
popa
sarb
fwait
addr16
sub
sar
cltd
nop
cmpsb
pop
fistpl
jg
jo
inc
xchg
loopne
jmp
mov
pushf
cltd
lea
mov
mov
xchg
add
fidivrs
pop
inc
je
sub
push
sub
xchg
and
inc
lcall
dec
std
lds
add
es
lcall
push
jecxz
out
mov
cli
movsl
out
jmp
mov
imul
jns
call
cmp
in
mov
ror
cltd
andl
loopne
stos
cmp
add
cwtl
xlat
dec
adc
lea
mov
inc
aas
pop
sbb
mov
mov
jno
push
add
insl
in
pop
mov
inc
inc
mov
scas
in
mov
adcb
aam
outsb
stos
or
jle
sub
xlat
cmp
sbb
test
add
add
or
std
movsb
jbe
mov
gs
std
lret
iret
mov
mov
jns
cli
aas
movsb
adc
aas
pop
sbb
dec
xchg
push
shrb
push
adcb
xor
xchg
mov
iret
push
fstpt
or
addl
lahf
mov
outsb
cmp
dec
imul
push
nop
and
pusha
or
mov
add
xchg
and
xor
scas
push
or
jns
out
test
cmp
push
fsubp
adcb
mov
sarl
icebp
xor
popa
daa
shr
movsb
out
and
fsubrl
sarb
lods
xor
adc
aas
pop
jne
cmp
dec
sub
add
pop
push
outsl
js
push
data16
sbb
cli
push
mov
inc
call
xor
mov
pop
pusha
dec
adc
sbb
or
push
sti
push
loope
mov
push
out
push
mov
mov
mov
rorb
imul
mov
enter
mov
hlt
mov
rol
push
bound
cmpsb
mov
mov
in
cwtl
xor
mov
jno
stc
xchg
mov
push
popf
neg
xchg
cmc
pop
jg
sbb
lret
daa
decl
stc
xchg
adc
or
mov
push
adcl
lret
out
mov
xor
add
xchg
imul
mov
xchg
inc
xorl
int
lods
mov
lock
ja
dec
sub
mov
push
cmpsb
inc
add
sub
xlat
ret
jns
lods
fwait
in
faddl
or
shrl
lret
and
adc
nop
rorl
andb
mov
push
jp
cmp
and
scas
neg
bound
call
les
push
mov
in
icebp
mov
stos
punpckhdq
scas
cli
pop
hlt
je
sbb
mov
pop
outsl
dec
sub
add
push
cmpsl
and
mov
push
imul
out
pop
cmp
aam
jno
add
jmp
mov
dec
fs
xchg
mov
cmp
insb
dec
pop
cmp
dec
adc
adc
add
sarl
adc
inc
mov
mov
cmp
popa
jo
cwtl
push
mov
or
cmp
xchg
cld
adc
loop
lea
lea
add
push
test
sub
push
adcb
bound
push
jne
or
push
cmpl
rclb
scas
dec
ja
mov
popf
sbb
cmp
dec
ficoml
bound
int
fcoms
push
ficoms
jbe
jge
pop
mov
jne
insb
call
mov
js
pop
mov
popa
mov
les
mov
cld
or
push
cmp
mov
pop
inc
push
pop
shlb
sbb
cmpl
mov
loope
pusha
mov
push
fidivrl
out
cli
and
rorl
fs
jge
fisubs
mov
cmc
outsl
or
mov
dec
idivl
mov
and
xchg
repz
mov
jg
std
jns
hlt
popf
sbb
mov
xchg
dec
cmpsl
int3
sub
fwait
pop
fwait
ret
mov
cmpsl
cmpl
mov
mov
mov
lods
pushf
dec
jno
sub
sub
inc
jns
addl
dec
mov
cmpsb
jno
mov
or
xchg
cmp
cmp
mov
cmpsb
hlt
shll
ret
push
and
cld
repz
movsb
shll
xor
cld
adc
dec
dec
inc
mov
and
and
mov
out
or
sbb
aam
dec
out
sbb
loop
scas
ret
aam
xchg
pop
popf
gs
or
fisttpl
mov
popa
adc
in
jb
fimuls
mov
addr16
add
enter
fnstsw
cmp
mov
mov
xchg
test
popa
arpl
arpl
xor
movsb
mov
jl
adc
in
addb
pop
mov
cmp
xor
clc
push
xlat
sbb
pop
cwtl
xchg
xor
mov
and
dec
popf
jne
jmp
rcrb
pop
movsb
mov
xor
ljmp
or
cmpl
xchg
sahf
pushf
aad
test
mov
add
test
shrb
mov
sbb
or
xor
jbe
xlat
lock
cmp
pop
adcb
shlb
and
scas
test
into
adc
sbb
dec
lock
sarl
xor
cmp
sti
and
mov
push
mov
cmp
sbb
dec
add
adc
mov
mov
xor
aaa
out
sbb
mov
inc
jae
lret
push
stos
dec
mov
xlat
out
pop
pop
xor
loopne
data16
xor
sub
int
pop
inc
stos
lcall
hlt
push
or
mov
jo
inc
outsb
gs
sbb
cmp
sbb
sub
jmp
ret
push
pushf
into
das
sub
push
xchg
push
lods
add
aaa
das
fadd
ljmp
pop
push
jb
and
push
sub
flds
pushf
pop
jl
test
cmpl
xor
jmp
scas
es
mov
std
xchg
loopew
sbb
shl
dec
add
jmp
jo
pop
mov
sarl
xlat
hlt
jecxz
lret
inc
xchg
insl
mov
inc
xchg
mov
mov
aam
not
iret
out
lahf
je
jge
out
sti
cmpsb
mov
incl
rcl
in
icebp
lods
dec
sti
negb
idivb
xchg
mov
jbe
pop
jno
or
int
or
push
aaa
mov
or
outsb
ret
xchg
push
pop
gs
lock
push
mov
flds
cmp
movb
mov
and
cmpsl
mov
dec
lcall
stos
jecxz
dec
js
xchg
outsl
test
xchg
sub
or
in
dec
arpl
daa
jmp
fs
pop
sub
lock
enter
sub
mov
add
mov
iret
mov
jne
fisttps
jne
adc
jp
mov
xor
adcl
push
sub
out
jmp
jbe
adc
incl
cmp
xchg
mov
jg
or
sbb
inc
sti
mov
mov
mov
imul
shr
rcl
popf
mov
xlat
xor
mov
stos
movsl
dec
int3
mov
cmp
cmp
outsb
push
push
sahf
add
mov
test
mov
dec
mov
or
aad
inc
iret
packuswb
xor
in
test
jge
int3
loope
push
jnp
mov
je
std
adc
ds
addl
mov
pop
pop
imul
test
test
dec
mov
es
clc
pop
sub
inc
push
mov
xor
imul
dec
lods
pop
cmpsl
mov
xor
sub
inc
loop
ds
push
lock
aad
pushf
shlb
inc
into
cmp
insl
jecxz
xor
push
test
sbb
jp
popf
sub
repnz
rclb
pop
outsb
jge
mov
and
mov
cmpsl
cmpsb
daa
push
stos
jb
data16
in
mov
cmc
test
and
int
xchg
xchg
aaa
inc
cmp
ret
ljmp
mov
subl
enter
and
or
cmp
inc
test
push
jmp
mov
jb
notb
in
int3
mov
add
movsb
data16
add
iret
lods
mov
in
nop
dec
mov
ja
xor
movsb
outsb
cmp
out
lahf
sbb
xor
shl
rcrl
ljmp
ds
sub
repz
add
mov
sbb
mov
pop
scas
clc
xor
das
jp
sbb
xchg
pop
dec
xor
or
inc
mov
pop
push
std
push
jp
fisttps
in
inc
adc
cld
mov
inc
nop
imul
in
movsb
rorb
mov
fadds
jecxz
xor
bound
jae
xchg
nop
mov
addr16
lahf
ret
addr16
jecxz
mov
ss
jns
mov
loop
test
arpl
jge,pn
cwtl
add
or
ret
popa
inc
add
movsl
sub
mov
or
imull
dec
and
or
aaa
bnd
fstl
inc
jns
inc
not
pop
movaps
xchg
ret
ret
lcall
sub
push
pop
cmp
push
pushl
add
sbb
xor
imul
add
cmp
xchg
mov
stc
xor
daa
add
cmp
mov
mov
sub
sarl
pop
stc
testl
pop
and
xchg
xor
push
nop
mov
repz
scas
or
lea
cmp
test
rolb
sub
imul
cmpsb
in
loop
rclb
pop
pop
test
push
int3
fbstp
cmp
ljmp
mov
cmpsl
jl
cwtl
sub
test
sbb
adc
adc
fwait
push
sbb
insl
and
dec
je
stos
xchg
call
fmull
test
stos
xor
cmp
ja
daa
or
lods
adc
popl
inc
sahf
add
sbb
sub
loope
inc
cmp
insl
fldl
clc
test
push
mov
daa
xchg
or
in
cmp
add
cmp
cli
add
push
inc
data16
stos
inc
in
xor
test
in
imul
push
mov
orl
mov
mov
lea
pop
push
lods
out
in
cmpsb
cmpsb
lods
mov
mov
pop
iret
or
mov
mov
imul
addr16
loope
mov
clc
loope
popa
nop
fsts
mov
inc
arpl
cwtl
mov
mov
out
jne
out
cmp
out
inc
lock
xorl
jle
and
out
lods
sbb
pop
xor
cli
push
mov
iret
or
stos
mov
cmp
sbb
pusha
mov
or
jg
je
sub
jne
ret
xor
inc
and
loopne
xchg
mov
negl
and
mov
std
and
add
inc
cmp
fwait
cmc
xor
pop
jle
dec
nop
sbb
or
and
js
mov
sahf
mov
dec
bound
sub
push
cwtl
sbb
or
pop
add
xor
ss
les
lret
cmpsl
aaa
in
scas
sti
out
test
push
fdivs
sbb
or
dec
fcoms
jae
insb
push
lcall
xor
and
adc
adc
popa
mov
cmp
dec
jae
es
mov
mov
adc
mov
out
ds
cld
mov
mov
int
pushf
jle
cs
mov
mov
and
mov
or
sti
popa
ja
xor
adc
pop
popa
jnp
mov
inc
popf
adc
pop
push
mov
dec
mov
mov
xchg
call
pop
xor
adcb
pop
push
in
or
mov
loope
push
repz
enter
popf
das
dec
sub
inc
lods
ljmp
cmp
mov
flds
mov
inc
xchg
jne
jmp
icebp
mov
push
push
pop
mov
mov
pop
shll
movsl
arpl
inc
cltd
das
cmp
dec
loop
in
adc
mov
dec
cmp
enter
shrb
sub
stos
jnp
adc
pop
icebp
pop
add
data16
push
inc
ljmp
adc
mov
loop
out
or
stc
sub
sub
cmpsb
daa
cmp
fimull
cltd
push
sti
std
sahf
pusha
or
adc
xchg
lock
and
jmp
in
in
jnp
or
outsl
push
aad
xchg
loop
and
and
insl
sarl
ljmp
inc
cmpsl
rclb
arpl
popa
rorb
cmpsb
jl
shrb
mov
push
lods
push
pop
pop
aaa
into
or
sbb
imul
and
rcll
inc
jne
insb
adc
cmp
ss
push
out
push
pop
cmp
and
loope
or
into
and
sub
xchg
enter
push
pop
movsl
push
leave
mov
ljmp
jne
lds
pop
cmp
mov
loop
jg
push
mov
sbbb
push
add
push
cwtl
inc
shrl
cmp
fisubrl
fdivl
jmp
in
dec
mov
sahf
sbb
call
pop
or
mov
sti
call
into
mov
jo
cmp
in
pop
cmp
loop
xor
inc
or
incb
push
mov
jecxz
mov
xchg
sub
adc
cld
ds
outsl
xchg
mov
in
pop
lock
call
push
cmp
test
dec
scas
jg
andl
add
adc
sbb
repnz
ljmp
inc
jmp
inc
out
sbb
cmp
ss
adcl
and
out
sbb
xorl
xor
cmp
jmp
cmpsb
ret
imul
cmp
sub
and
std
mov
and
shll
loopne
and
dec
jae
ljmp
stos
cmpsb
ljmp
in
and
push
out
ljmp
push
mov
adc
fwait
and
pusha
xchg
or
or
fsub
xor
movsl
lret
sahf
dec
jbe
adc
outsl
scas
jo
repz
rcll
sub
repnz
test
dec
cmpsl
jb
or
fwait
testb
in
push
jg
and
int3
cld
sarb
in
mov
cli
dec
repnz
in
cli
sub
mov
je
les
popa
clc
sub
cmpsl
mov
fs
insb
call
pop
dec
out
inc
cmp
pop
int3
into
lcall
sub
hlt
outsl
insl
into
push
xchg
cli
add
pop
mov
movsl
nop
outsb
ret
in
adc
loopne
lret
test
mov
call
xor
imul
test
ds
cltd
mov
pop
stc
out
fcmovnb
aaa
sbb
mov
push
sbb
xchg
adc
mov
cmc
ja
adc
fmuls
ret
aad
cwtl
xchg
push
pop
out
inc
cmp
push
pop
test
and
cmpsl
and
xchg
stc
pop
out
frstor
jne
js
cmp
inc
or
pop
sub
jge
in
inc
mov
ret
stos
cmp
das
in
dec
jle
shl
xchg
push
loope
aaa
jns
sub
xchg
mov
das
or
stos
cmp
and
in
jp
daa
pop
sbb
call
or
xchg
sub
aaa
cmp
dec
hlt
jae
clc
pop
xchg
das
movb
test
mov
jno
cli
stc
loope
xchg
dec
movsb
ret
lret
xor
push
mov
mov
push
cwtl
imul
inc
mov
mov
das
cmc
cmpl
xor
sbb
in
inc
jbe
jmp
mov
idivl
mov
push
loopne
bound
sub
xchg
inc
fmull
cmp
and
mull
push
dec
test
pop
pop
stos
pop
add
in
shl
loope
jl
pop
pop
test
xchg
and
shll
pop
je
mov
xor
fsubr
mov
cmp
icebp
dec
dec
fisubs
aam
stos
mov
lods
mov
mov
aad
popf
insb
dec
lock
ret
jne
lock
pop
stos
loop
lcall
cmp
or
jne
jns
cmp
shll
cmp
mov
in
xlat
sub
adc
test
push
stc
or
aaa
pop
jo,pn
sbb
xchg
fld
mov
adc
andb
out
pop
push
inc
push
lock
ret
enter
sahf
shr
mov
stos
sbb
sub
stos
jb
sub
sub
cmc
shl
cmpl
outsl
fdivrl
mov
or
mov
jl
inc
cwtl
std
int
mov
push
aaa
push
fildl
mov
pop
loope
in
or
aad
shrb
push
les
jbe
sbbl
jmp
pop
out
or
jmp
dec
js
pop
sub
int3
repnz
jne
or
mov
or
aam
fisubs
sti
je
xchg
inc
shrl
call
xchg
pop
repnz
dec
lcall
adc
fwait
jmp
jecxz
pop
fbld
cmp
pop
cmp
std
es
pop
cli
adc
pushf
and
jmp
mov
pop
push
pop
adcl
loop
subl
ljmp
cmc
insb
rolb
aaa
cwtl
adc
xchg
test
cmpsl
sbb
lret
xor
sub
push
rcrb
iret
xchg
imul
jge
rcll
fimull
lahf
sbb
mov
imulb
jo
sbb
ljmp
mov
xor
notl
pushf
mov
cwtl
subl
fnstsw
push
add
xchg
sub
mov
fstpt
sub
mov
cli
lcall
in
sti
cmpsb
push
gs
pop
bound
cmpb
push
ss
and
test
jae
adc
aaa
lret
loope
jle
push
mov
out
aaa
and
jmp
mov
jbe
xchg
and
and
cwtl
mov
gs
push
lret
lds
in
nop
mov
fs
arpl
arpl
stos
and
mov
into
pop
push
inc
mov
mov
leave
scas
pop
mov
add
dec
repnz
add
leave
popf
fadds
in
pop
rolb
xor
scas
jo
jl
sbb
shrl
xor
and
xchg
aad
push
loop
out
leave
out
in
clc
pop
lahf
add
cmp
mov
mov
cld
in
fwait
mov
sbb
adc
push
mov
hlt
ds
sbb
scas
and
jl
fnstcw
leave
push
pop
mov
cmp
inc
iret
fwait
xchg
pop
xchg
gs
sbb
sbb
jns
lret
fdivrs
dec
aas
sub
add
inc
cmpsb
push
sub
push
mov
into
mov
add
push
mov
inc
push
jne
cmp
lret
dec
imul
nop
shr
outsb
push
mov
pusha
push
sbb
outsb
es
sahf
push
rcll
data16
movsb
aaa
ss
loope
jp
jecxz
pop
loop
inc
pusha
mov
cmpsb
out
imull
fwait
add
out
js
add
push
xchg
or
cld
fsts
movsb
xor
and
fnsave
push
mov
cmp
out
ds
sahf
js
int3
pop
ss
xchg
in
sbb
popf
fwait
in
cmp
das
lock
shr
sarl
inc
mov
sub
push
es
fisttps
add
or
roll
fdivl
and
push
out
mov
dec
lahf
andl
fwait
pop
dec
daa
push
jb
movsb
jns
fwait
sbb
outsl
push
xchg
or
sahf
inc
sbb
leave
or
enter
aad
mov
sahf
out
cmpb
in
dec
xchg
mov
rclb
mov
popa
push
jb
pop
sahf
cmp
std
ret
mov
ljmp
sub
sub
adc
cld
dec
idivb
push
test
test
push
xor
lock
loopne
sbb
enter
iret
adc
and
fwait
xchg
hlt
pop
xchg
cld
out
in
sub
popa
jg
pop
sub
pop
into
xor
aaa
clc
pusha
fs
push
and
push
gs
fs
dec
pop
scas
mov
sub
push
das
out
loopne
loopne
les
jns
push
loopne
xchg
addr16
clc
adc
xchg
sub
inc
cmp
lcall
pushf
dec
rol
pop
jle
pop
push
push
ljmp
pop
mov
aaa
aaa
call
loop
repnz
clc
pop
or
sbb
xor
inc
cmp
and
and
cmp
call
pop
and
ret
and
daa
xchg
lods
add
jbe
repz
fsts
sbb
xorb
jmp
push
arpl
adc
cmc
mov
inc
add
in
iret
lods
sbb
mov
lcall
ljmp
movsl
adc
clc
sarb
and
mov
xor
test
jge
pusha
or
add
or
push
jae
mov
bound
insb
jne
add
es
inc
sub
mov
mov
aad
xchg
jbe
pop
inc
and
mov
jo
cltd
cmp
sub
leave
push
lock
cmp
adc
fcomps
decl
inc
dec
stos
lods
adc
loop
jns
pop
pop
cmp
mov
aam
xchg
xor
and
rcrb
jmp
push
rcrl
sub
jle
xor
js
out
xlat
sbb
add
or
lock
pop
xchg
jp
and
cli
pop
out
aad
repz
sbb
jae
stos
iret
inc
add
je
data16
dec
jge
ds
mov
dec
push
stos
aam
in
test
sbb
in
adcb
lods
cmp
outsl
out
das
fwait
int
sub
dec
adc
cmc
enter
roll
xor
xchg
inc
ffreep
test
mov
cs
mov
icebp
or
sbb
ds
icebp
xchg
fisttpll
inc
or
xchg
sbb
sbb
cs
dec
jno
dec
xchg
jl
sbb
adc
into
xor
add
int3
and
inc
cmp
movsb
test
pop
insl
dec
sub
mov
sub
lods
icebp
dec
xor
bound
jmp
mov
sbb
mov
mov
mov
bound
roll
push
jns
mov
clc
in
filds
mov
mov
mov
pop
push
addr16
adc
lods
sahf
imulb
je
imul
imul
push
divl
inc
shr
jno
testl
xchg
pusha
push
fidivs
inc
or
xor
bound
mov
aad
loope
mov
cltd
lods
je
sub
or
shrb
cli
jp
cld
mov
xchg
xchg
pop
outsb
mov
cmp
cmpsl
cmp
or
icebp
push
mov
xchg
lds
jbe
cmpsb
xlat
outsb
jno
in
dec
lahf
dec
lcall
dec
push
out
jo
mov
mov
jno
sub
pop
adc
xchg
insl
lahf
inc
enter
sahf
out
into
add
cli
push
and
or
and
int3
movb
xchg
stos
mov
pop
es
cwtl
sub
addb
lods
xor
sti
mov
roll
sti
mov
shrl
leave
mov
xchg
in
ficoml
jne
shll
mov
xor
cmp
out
push
sub
mov
add
push
or
cmp
paddsb
ret
pushf
adc
notb
cwtl
lret
in
enter
push
inc
and
loope
nop
sub
sarb
in
sbbl
sti
add
jg
mov
push
repz
mov
or
mov
test
cwtl
add
int
inc
daa
xchg
leave
cwtl
jmp
aad
push
xchg
fwait
shrb
jo
scas
les
push
mov
and
sub
inc
inc
lods
sub
lea
mov
sbb
dec
pop
imul
out
test
mov
or
lret
adc
and
add
das
testb
xchg
es
xchg
push
iret
push
repz
mov
paddsb
ret
shl
add
aam
sub
popf
mov
or
aam
loop
setne
mov
out
lods
cwtl
outsb
fcmovbe
sar
sub
mov
mov
lret
inc
cmc
aas
push
pop
dec
jmp
mov
lds
jmp
lods
xchg
iret
mov
cltd
fxtract
xor
mov
sub
xor
xchg
mov
and
rcrb
arpl
inc
jmp
clc
lods
push
sbb
push
xor
js
mov
je
leave
cmp
test
cmpsb
inc
rcrl
sub
shrb
cmpsb
ljmp
sbb
gs
repz
xchg
mov
mov
sbb
mov
xchg
jecxz
test
inc
push
dec
arpl
push
ss
mov
std
xchg
jne
or
addr16
sarb
sbb
lret
cmpsl
mov
xor
and
push
dec
mov
aaa
jle
mov
mov
cmp
mov
sbb
clc
loope
cmpsb
add
dec
cmpsb
popf
sbb
dec
lret
lret
arpl
mov
push
push
cld
repnz
jb
shl
pop
ret
pop
add
xchg
fsubr
notl
dec
add
inc
push
mov
or
xor
stos
mov
nop
mov
testb
jb
out
xchg
aam
add
in
aas
mov
mov
mov
imul
cmpsb
pop
lock
adc
inc
or
lods
adc
mov
adc
mov
mov
mov
jl
fistpll
loop
xor
push
adc
addr16
mov
pop
dec
leave
pop
sbb
inc
nop
ljmp
pop
push
push
push
push
daa
cld
enter
dec
insl
pop
adc
mov
cltd
jmp
jle
das
push
push
and
sub
fwait
out
das
repz
push
mov
es
pop
stos
std
int
mov
mov
push
inc
scas
ds
mov
aam
movsl
arpl
xchg
out
cmpsb
stc
pusha
pop
inc
stos
cld
fistps
es
sub
jo
fists
push
xlat
jne
mov
xchg
push
jae
mov
or
mov
cld
sbb
push
xchg
or
push
inc
and
inc
jnp
inc
insb
push
push
mov
lods
out
std
xchg
cmp
je
mov
add
inc
dec
mov
jge
mov
sub
rcrb
push
xchg
lahf
iret
mov
xor
arpl
les
mov
arpl
scas
cwtl
jle
outsl
fbstp
aam
sub
repnz
iret
lahf
cwtl
dec
movsb
push
idivb
mov
mov
test
mov
repnz
imul
mov
jno
ret
sahf
imul
mov
not
add
cs
les
mov
mov
stos
gs
movsb
mov
sbb
cmp
sarl
and
rorl
sbb
pusha
call
arpl
les
out
add
daa
pop
inc
pop
sub
fnstsw
cmp
repz
jb
fcoml
leave
jmp
xchg
ljmp
fidivrl
jle
add
dec
sub
jle
aas
iret
push
sub
imul
inc
jmp
aad
mov
fwait
movsb
enter
sub
ss
mov
cmp
inc
jl
jb
addr16
lods
les
pushf
inc
pop
mov
push
sbb
ja
cmp
mov
jecxz
arpl
xchg
and
movsl
sub
stos
inc
pop
push
repz
aam
stos
jmp
out
inc
and
jle
sub
pop
ficoms
cmpsb
icebp
mov
cwtl
cld
cmp
xchg
inc
frstor
xchg
loope
jo
imul
jae
add
or
push
xchg
popf
xorl
lods
sbb
mov
sub
pop
pop
sarl
scas
mov
jmp
cmp
insl
sub
mov
mull
loop
pusha
inc
push
pop
mov
imul
sarb
aaa
addr16
or
ss
mov
push
daa
sbb
jl
adc
shll
jl
sub
or
xchg
ret
cmp
sti
clc
out
cmp
inc
fcompl
mov
mov
jg
cmc
pop
scas
cmp
jecxz
pop
popa
dec
mov
movsl
mov
in
mov
mov
movsl
sub
mov
in
or
dec
xor
sbb
stc
sbb
jne
add
out
jge
push
jno
cmpsl
cltd
jb
scas
mov
push
scas
push
cmp
xor
lret
xor
and
sub
es
arpl
clc
pop
dec
roll
push
test
xor
pop
xchg
jo
lcall
imul
xchg
xorb
mov
out
xchg
sbbb
or
xchg
jb
xchg
loopne
scas
fwait
or
shrl
inc
inc
pop
int3
cmp
dec
andb
test
jmp
sbb
mov
jnp
jnp
in
sbb
loope
mov
sub
cmp
dec
mov
into
loop
repnz
bswap
sti
mov
add
dec
ret
insl
mov
sub
sbb
inc
subb
sub
dec
ja
push
inc
push
shlb
pop
jne
mov
cmpsl
and
int3
add
mov
xchg
outsl
out
aaa
loopne
aad
mov
lods
mov
push
rol
movsb
sbb
pop
push
mov
cmpsb
sub
push
jbe
adc
andl
xchg
adc
int
pop
push
xor
fcomps
out
add
sbb
scas
xor
cs
in
dec
and
sbb
aas
adc
dec
leave
or
mov
sbb
dec
or
aas
cmp
decb
cmpsb
inc
sub
xlat
test
out
xor
and
jp
ret
pop
hlt
cli
cmp
shrb
ja
pop
xchg
lods
sub
pop
dec
outsb
mov
lds
pop
add
scas
bound
mov
cmp
and
sub
dec
pop
sbb
js
cmc
add
mov
leave
pop
mov
icebp
rorl
jbe
mov
mov
push
hlt
push
test
cs
inc
sbb
xchg
into
out
daa
test
add
xchg
lock
xchg
push
mov
ljmp
cs
or
jg
fmuls
pop
sahf
adc
js
mov
jae
hlt
shl
adc
jle
push
xor
push
dec
pop
lds
stos
or
adc
movsl
push
or
lcall
fwait
push
pusha
mov
sbb
aad
or
shrb
xor
js
movsl
lods
add
dec
inc
outsb
xor
ja
inc
mov
movsl
sub
pop
jle
fwait
int
mov
xor
mov
rcpps
or
bound
loope
jg
out
push
sbb
sub
mov
or
out
movsb
fisubrl
lret
dec
lret
notb
nop
xchg
add
lods
jg
leave
cmpsl
pushf
or
sbb
or
cwtl
adc
jmp
test
sub
push
dec
push
aam
sub
mov
mov
test
xor
pop
pop
and
imul
gs
fwait
cmp
push
out
xor
inc
testl
inc
xchg
sti
push
mov
mov
notb
dec
mov
popl
bound
mov
push
jg
and
push
aam
loopne
and
mov
inc
sub
mov
sti
push
mov
iret
jp
nop
cmovnp
dec
rcrl
insl
lret
int
test
mov
scas
cmp
mov
or
int3
icebp
scas
xchg
shl
or
pop
pop
lret
out
jl
mov
and
jg
jle
push
and
test
movsl
roll
xor
xor
dec
ss
loope
inc
mov
pop
jns
gs
add
rcr
rcll
inc
xor
jg
mov
inc
mov
test
mov
loop
lahf
popf
inc
mov
outsl
lcall
aam
lret
dec
push
aas
outsb
shll
lea
std
ret
add
jge
sahf
repz
gs
inc
orl
jle
mov
and
popa
repz
in
movsb
test
or
pop
hlt
fincstp
ja
es
mov
outsl
add
mov
jb
stc
inc
and
add
pop
sbb
out
ljmp
sub
push
adc
sbb
shlb
mov
int3
loope
or
rcl
cld
test
ljmp
leave
adc
lock
inc
dec
sbb
cltd
out
or
sbb
fimuls
test
xor
pop
jnp
sub
hlt
hlt
aad
sbb
pusha
ret
mov
push
jl
shrl
dec
push
mov
out
test
mov
jge
cmp
imul
xchg
mov
dec
clc
inc
add
sub
mov
dec
clc
dec
fisttpl
pop
aas
cmp
inc
test
cwtl
lods
mov
lcall
fnsave
jno
adc
lcall
xchg
push
mov
pop
int
xchg
incl
mov
enter
scas
outsb
testl
jle
jns
dec
push
jno
sbb
push
jg
mov
loopne
cmp
imul
add
aad
loopne
aam
sbb
cmp
push
cmp
mov
int3
incb
data16
or
or
xor
mov
and
dec
mov
out
adc
inc
inc
outsb
add
lret
aam
idivb
fwait
bound
stos
aam
enter
xor
je
xchg
inc
pop
lea
cmp
sub
mov
insl
mov
jnp
flds
lods
inc
repz
fistl
int
jle
xchg
imul
sub
out
and
pop
sarl
adc
outsb
negl
imul
repnz
test
push
mov
int3
xor
jae
cmpsb
xchg
and
int
adc
adc
xchg
scas
or
fisttps
mov
xchg
das
daa
pop
push
sti
fs
pop
xchg
mov
jns
mov
mov
int3
dec
dec
mov
insb
rcl
mov
sbb
clc
push
add
mov
ret
mov
inc
movsl
and
loopne
adc
fnstsw
sub
addl
in
iret
fsubrl
push
fs
and
or
push
xlat
sbb
loopne
fdivrp
lret
aaa
push
and
pop
jp
jbe
fs
or
jecxz
arpl
xchg
inc
insl
into
shl
xor
xor
mov
les
jns
inc
xchg
mov
int3
bound
aam
xor
xor
pop
add
sub
outsl
pop
xor
ljmp
in
inc
mov
enter
test
scas
sbb
ret
pop
cmpsb
inc
sbb
mov
in
outsb
test
out
aad
dec
aaa
mov
repnz
insl
icebp
mov
pop
icebp
mov
pop
xor
jae
mov
aaa
call
idivl
mov
push
mov
mov
popf
jl
sahf
sbb
out
xchg
clc
mov
adc
jp
cmp
inc
or
shrb
gs
incb
jo
sub
pop
fcoms
push
cmpsb
dec
sti
leave
push
or
add
add
rcll
leave
inc
out
xchg
mov
aas
ds
mov
cmp
iret
mov
ss
push
cmp
adc
push
dec
jecxz
pop
aad
repnz
es
inc
ds
lods
ljmp
adc
movsl
add
pop
fbstp
setno
jno
dec
fs
sbb
push
or
sti
lds
jge
and
shl
lds
cmp
push
mov
lret
push
popf
test
mov
cld
jle
xchg
cmp
push
roll
sbb
mov
stos
adcl
xchg
sub
inc
adc
insb
sbb
loopne
orb
mov
push
inc
outsb
aad
adcb
repnz
push
pop
xor
cwtl
mov
fstl
lret
loope
pop
push
imul
jns
pop
inc
dec
les
adc
cmp
xor
cmp
incl
das
imul
adc
push
push
std
cmc
sub
imul
mov
inc
shll
or
and
xor
cmpsb
icebp
sub
push
test
loopne
movsb
js
loopne
and
cmp
dec
imul
popf
aas
mov
pop
xor
dec
ret
push
and
pop
jnp
int3
xchg
ffree
jmp
ret
out
mov
es
rorl
pop
cmpsl
bnd
les
in
mov
cmpsb
iret
aam
imul
mov
xchg
les
lock
pop
scas
dec
lods
aas
lcall
loopne
ss
hlt
iret
cmp
mov
pop
loope
in
mov
and
inc
cmp
lock
mov
mov
ffreep
dec
in
xor
adc
add
push
nop
mov
out
aas
jnp
out
pop
shrl
ss
sbb
fadds
das
inc
add
or
dec
movsl
sbb
adc
xchg
mov
and
outsb
mov
cmc
lods
out
shll
and
sub
or
dec
mov
cmpsl
repnz
inc
sub
sub
scas
push
movsl
xchg
rcr
stos
jmp
add
push
shrl
pop
in
mov
iret
out
sub
inc
out
repnz
jle
cmp
dec
ja
push
jnp
mov
xchg
pop
outsl
movsb
mov
out
clc
jl
inc
or
and
xchg
sub
inc
lret
iret
mov
push
test
outsb
lcall
lret
jmp
push
cmp
aad
insl
jb
adc
sub
push
add
adc
popa
mov
add
in
or
dec
dec
leave
xlat
sub
add
mov
stos
fdivrl
add
addr16
int3
mov
push
push
push
je
loop
sbb
mov
cmp
mov
adc
hlt
xchg
inc
pop
repnz
pop
sub
xor
pop
cmp
fwait
lods
das
movsb
push
push
sub
and
insb
sti
sub
loopne
aam
fnstcw
cmp
pop
mov
dec
data16
mov
mov
jae
mov
leave
inc
mov
or
mov
inc
fwait
mov
cmp
mov
xchg
xchg
mov
sarl
add
sbb
jl
rol
adc
js
mov
xor
and
xchg
lea
pop
lock
push
fnsave
repz
sbb
pusha
add
fstp
and
cld
vandpd
mov
mov
cld
mov
lods
push
stos
les
test
mov
cld
xor
sub
dec
mov
loope
fs
pushf
mov
mov
inc
jmp
or
inc
xchg
dec
sbb
pop
push
jo
push
mov
xor
lret
add
mov
and
aaa
sti
inc
test
lret
ret
mov
inc
and
fcmove
pop
sub
mov
xchg
push
mov
and
fs
pop
fcomi
jg
mov
mov
test
mov
jl
hlt
mov
std
push
shr
test
add
push
sub
mov
rcrl
fcmove
push
test
adc
in
cwtl
andb
out
mov
rorb
outsl
jmp
jne
adc
cwtl
mov
jl
and
push
xor
inc
lret
fidivl
andl
ret
cmpsb
fsubrp
rorl
rclb
dec
dec
sub
in
fxch
xor
loope
mov
test
popf
inc
sbb
das
dec
out
pop
dec
jecxz
jbe
pop
pop
test
push
addr16
dec
popa
jb
inc
xchg
push
adc
sbb
inc
adc
sahf
fucomip
add
add
xor
ftst
cmp
addr16
int3
and
shl
stos
jae
into
dec
lods
mov
mov
outsb
jmp
add
dec
stos
shrd
adc
pop
gs
arpl
inc
cld
jnp
jne
xchg
jae
dec
and
mov
movsl
mov
push
pop
cmp
cmp
ja
push
cmp
mov
cmp
sbbb
dec
loop
xor
std
cmpsb
shl
icebp
and
enter
cmp
cmp
je
rolb
shlb
incl
dec
fwait
mov
fists
mov
test
lcall
add
adc
xchg
imul
cli
dec
dec
insb
adc
ret
cld
orl
or
nop
daa
inc
mov
leave
pop
out
in
call
aaa
push
clc
dec
pop
or
adcl
inc
cwtl
fwait
mov
loope
push
and
lock
sbb
xor
daa
mov
rcrb
loopne
in
sub
dec
xchg
and
jbe
dec
mov
out
lret
cmp
dec
and
pop
test
mov
in
fsubrs
insl
inc
xor
arpl
test
nop
xor
xchg
or
int3
pop
push
fnsave
arpl
movsl
adc
jbe
mov
xor
in
add
adc
aam
sahf
push
jbe
in
inc
dec
mov
cmp
clc
adc
or
ja
ja
push
mov
and
popf
mov
ss
push
and
xchg
test
fidivrl
pop
test
dec
leave
hlt
pop
and
loop
stc
shlb
or
hlt
mov
or
sbb
in
shll
pop
push
repz
mov
lods
xchg
gs
pop
icebp
xchg
or
sub
mov
dec
push
cmp
repnz
jle
daa
ret
shll
daa
xor
cmp
mov
sarl
cmp
push
insl
mov
adc
lea
push
shrb
and
xchg
push
sti
cs
or
pop
dec
jb
mov
mov
mov
fadds
or
test
jnp
call
lcall
cmpsl
mov
xor
fsubs
jae
pusha
dec
push
les
mov
mov
sub
sub
adc
cmp
stos
addr16
mov
xor
add
cmc
mov
push
inc
jl
sub
adc
fisttpl
enter
lods
shrb
or
stc
dec
cmp
movsl
mov
xor
in
xor
push
jbe
lret
push
pop
arpl
mov
outsb
pop
sub
sub
inc
and
bound
lret
mov
push
movsb
jnp
and
jp
in
fldcw
stos
xor
and
mov
jnp
lea
sbb
jmp
iret
je
inc
in
hlt
add
aad
add
inc
xchg
cs
jg
out
inc
stos
mov
xor
jnp
jmp
hlt
pop
stos
outsl
or
adc
push
int
leave
ret
adc
mov
imul
pusha
loope
sub
lahf
in
inc
rclb
rcrb
cmp
out
xchg
out
mov
or
loopne,pn
and
or
leave
mov
and
out
das
icebp
pop
cwtl
add
lock
addr16
and
out
jo
mov
jge
mov
fnstsw
xchg
les
cmp
xor
pushf
test
xor
frstor
adc
cmp
in
jle
add
cltd
leave
pop
hlt
push
mov
inc
and
mov
mov
jb
nop
pop
divb
clc
or
iret
out
ljmp
mov
cmp
inc
pusha
xor
xchg
pop
ljmp
mulb
add
dec
xor
adc
xchg
mov
ljmp
add
jecxz
test
mov
call
lcall
pop
loope
mov
loopne
mul
mov
ret
leave
test
and
pop
jmp
jne
sbb
addr16
lret
call
sub
pop
loopew
fnsave
mov
jb
dec
jno
mov
repz
popf
jle
ljmp
mov
adc
insb
xor
lahf
push
xor
mov
jle
je
and
adc
sahf
add
push
pop
gs
or
lock
adc
aaa
cmp
xor
pop
ljmp
push
inc
ljmp
sbb
cltd
sbb
inc
xchg
xchg
sbb
cmp
sub
insl
insb
dec
iret
pop
cwtl
sbb
jns
enter
add
xchg
clc
mov
pop
mov
adc
call
fistl
int
fidivl
imul
push
sbb
and
mov
cli
xor
outsl
ljmp
icebp
inc
pop
inc
idivl
add
int
jle
ret
inc
xlat
dec
pop
mov
push
ja
iret
pusha
dec
test
shrb
loopne
cmp
out
sub
jbe
sbb
push
adc
loop
and
jb
inc
pop
rolb
mov
or
pop
and
bound
dec
mov
jmp
xchg
fst
add
lds
or
jo
fucomp
sub
jl
hlt
adc
jge
jmp
loopne
inc
movsl
fistpl
cmp
movsb
pop
push
jno
cmpsb
inc
cmp
sbb
adc
je
stos
jle
adc
cmp
add
mov
cmp
or
std
mov
scas
scas
das
test
ret
jns
and
and
mov
mov
sbb
jnp
inc
sbb
or
ret
arpl
sbb
mov
or
xor
hlt
mov
and
dec
aad
js
stc
ja
int3
add
pop
sbb
mov
sub
fisubrs
cmp
xor
add
jl
js
jae
sar
das
dec
pop
sbb
sub
xchg
fwait
or
adc
push
and
xlat
iret
cmp
and
jl
out
inc
imul
out
ficompl
or
mov
cmp
arpl
hlt
or
jae
or
jb
xchg
pop
frstor
stos
adc
sahf
push
xchg
movsl
out
es
stos
sbb
scas
sub
mov
aaa
cmpb
jns
mov
mov
mov
cmpsl
loopne
aaa
xchg
inc
jns,pt
fisubrl
push
ja
cmp
jae
and
mov
xlat
dec
pop
mov
sub
xchg
aas
into
aas
into
imul
divb
add
dec
mov
in
adc
dec
dec
stos
scas
inc
lods
xchg
test
pop
mov
ljmp
js
or
push
rcr
jns,pn
sti
ljmp
push
xchg
xor
test
fdivrp
fdivs
mov
inc
scas
test
outsl
int3
and
mov
xchg
cmp
cwtl
xchg
mov
or
push
pop
lret
adc
xchg
xor
jge
jo
fisubl
test
or
pop
add
inc
add
pop
xor
mov
dec
xchg
leave
enter
or
dec
aam
sbb
mull
mov
cli
cmpsb
in
ss
pop
add
inc
fnstsw
out
in
push
lods
mov
movsb
jle
mov
mov
xchg
pop
pop
or
pop
outsl
push
xchg
sbb
mov
lret
jbe
xchg
adc
cli
out
or
jle
dec
das
and
adc
js
ljmp
cmp
add
pop
jns
hlt
sub
pop
sti
inc
push
scas
mov
xor
lods
and
rcrl
in
fidivrl
sub
sub
sub
jo
ret
divl
mov
adc
mov
jl
adc
inc
jno
inc
mov
or
adc
movsb
out
test
inc
dec
bound
out
jnp
mov
fmuls
push
into
arpl
sbb
xchg
sar
scas
fs
pop
js
add
fcmovb
sbb
mov
jle
adc
pop
push
ja
addr16
pop
cwtl
adc
lret
shrb
dec
enter
les
adc
js
xchg
stc
movsl
jb
mov
cmp
adc
push
fs
mov
mov
xor
adc
adcl
ret
in
sahf
lea
xor
cmc
adc
out
mov
iret
int
xchg
jae
mov
lock
xchg
js
mov
jae
mov
or
in
push
sti
push
xlat
leave
fwait
jp
mov
aad
cmc
rcrl
mov
jl
push
call
and
mov
and
adc
xchg
pop
sti
lds
adcb
cmc
mov
adc
mov
sub
ds
jnp
jg
insb
mov
mov
shr
jp
lret
sub
dec
jo
mov
push
add
cwtl
jl
cmp
lahf
inc
mov
xchg
dec
jle
mov
mov
mov
dec
lock
out
dec
pop
das
jle
push
lods
sbb
repz
xchg
mov
push
xchg
andl
call
ret
push
add
sub
lret
mov
fisubs
dec
push
cmp
sub
rclb
sbb
lods
enter
pop
idivb
mov
push
dec
adc
rcll
ret
sbb
sbb
pop
into
cmp
jle
pop
cld
mov
cwtl
fdiv
xchg
or
sub
les
sub
aad
sub
jns
arpl
fcmovnu
or
sub
int3
cmpsb
lea
movl
fidivrs
sti
mov
add
mov
dec
mov
cld
jl
daa
int3
jmp
cmp
push
or
add
mov
mov
mov
mull
xchg
jl
ret
test
test
mov
push
sub
into
xor
sahf
out
lea
cmp
nop
daa
cld
xchg
xor
aaa
push
dec
sub
jp
jmp
lds
sbb
dec
push
mov
sub
mov
mov
mov
scas
mov
inc
out
jp
testb
xor
mov
or
cs
inc
stc
xlat
aad
add
clc
loop
gs
mov
push
nop
jo
out
cmp
fcomip
scas
lahf
pushf
lcall
loop
jmp
push
jae
pop
jmp
js
mov
lds
imul
cmp
dec
into
rorl
lcall
out
and
scas
idivb
push
pop
lds
fs
and
jnp
repz
cmpsl
lcall
call
mov
mov
jle
pop
mov
push
iret
repnz
push
xchg
aaa
imul
pop
mov
pop
dec
lock
jmp
push
es
and
push
and
mov
pop
out
in
adc
std
cld
out
inc
mov
jge
cmp
aad
fnstcw
inc
cmp
inc
mov
inc
loopne
addr16
int3
enter
xchg
sub
jmp
aad
pop
mov
lds
dec
fwait
push
push
jge
clc
insb
fistpl
inc
push
cmp
pop
push
or
ffreep
scas
ds
push
xchg
mov
sub
nop
aas
cli
stos
pop
je
lret
roll
pop
push
pop
cli
inc
lods
bound
and
movsl
ficompl
sbb
cmpsb
dec
xchg
xor
mov
sub
inc
lret
jnp
dec
fwait
pop
sahf
repz
mov
sub
pop
mov
add
lds
pusha
icebp
lret
mov
cmc
mov
jno
les
test
and
mov
mov
hlt
cmp
xchg
scas
clc
ja
enter
lret
sbb
ficompl
rorl
cs
fimull
movsb
cmp
jbe
cmc
enter
jl
push
sti
shlb
std
fildll
clc
in
scas
bswap
sub
inc
mov
adc
dec
sub
sahf
ret
pop
andl
mov
dec
and
sbb
pushf
call
pop
iret
adc
sub
adc
fwait
pop
imul
mov
gs
lret
mov
psrad
or
cmp
sbb
mov
jno
or
fucomip
xchg
add
and
push
mov
push
popf
mov
in
shrd
and
inc
push
adc
adc
jae
dec
push
je
sbb
cwtl
dec
dec
mov
call
imul
test
and
jp
ret
xchg
stc
scas
or
js
std
outsb
xlat
ret
fistpl
pop
xchg
push
hlt
loop
push
pop
or
dec
ss
push
cmp
scas
dec
xor
popf
jnp
adc
jmp
int3
insb
bound
cld
xchg
inc
jo
push
lods
sub
and
dec
jns
adc
mov
out
dec
out
rol
fiaddl
mov
inc
test
lods
out
aam
stos
hlt
push
cmc
mov
fsubl
outsb
xor
adc
cmp
pop
sub
jmp
int
andl
add
je
cwtl
fwait
mov
loop
ljmp
xchg
repnz
sbb
in
into
in
repnz
sub
sbb
fldcw
fdivl
shrb
mov
sbb
push
and
loopne
push
das
mov
push
jno
mov
data16
addl
inc
in
popa
sbb
mov
pop
sub
cwtl
ret
jo
hlt
cmp
sarl
rorb
fldcw
jbe
cmp
push
pushf
mov
addr16
addr16
sbb
imulb
je
xor
xor
arpl
fsubl
add
sbb
iret
add
xchg
and
testl
mov
shll
idivb
rcl
clc
xor
loopne
jb
push
leave
int3
cltd
sti
mov
mov
fidivrl
shlb
inc
jl
mov
out
in
push
xchg
push
mov
rorl
pop
orl
jno
rclb
bnd
mov
cld
test
xchg
leave
and
inc
idivb
imul
xor
mov
out
pop
cmp
mov
fwait
dec
mov
scas
pop
into
xchg
hlt
loope
lds
test
test
jg
repz
adc
or
lods
mov
and
pop
inc
jns
cli
xchg
movsb
or
mov
push
xlat
sti
enter
sar
xchg
test
leave
mov
jns
cmp
into
loopne
lcall
bound
jns
mov
push
ss
cmp
cmc
test
ss
ret
jmp
mov
sbb
cltd
popa
mov
push
or
xor
in
enter
test
shll
jge
cmp
or
das
mov
jno
inc
bound
adc
icebp
adc
out
push
push
mov
daa
into
push
bound
repz
int3
clc
xchg
dec
and
test
jg,pn
in
pusha
inc
clc
jno
js
rcrl
mov
shrl
ss
jp
jmp
xchg
movsl
or
rcll
xchg
mov
add
xchg
subl
shl
js
popf
imulb
cmp
bound
cmc
xchg
push
and
mov
push
stos
or
add
enter
adc
sbb
loope
inc
pop
or
test
hlt
jae
movsl
into
mov
push
adc
scas
or
mov
push
enter
scas
bound
aam
and
add
pop
inc
stos
mov
rcll
adc
test
jae
pop
mov
lcall
cmp
fists
xchg
insb
jb
inc
push
cmp
incl
mov
sub
sarb
nop
inc
push
mov
sbbl
test
push
sub
inc
scas
cmp
or
mov
add
out
jle
aad
inc
fnsave
mov
dec
mov
dec
fldt
repz
int
jb
imull
sbb
adc
xlat
mov
push
pop
pop
or
jmp
add
mov
fldl2t
push
sub
ret
mov
leave
ljmp
push
sub
lret
pop
jp
leave
jmp
pop
jmp
xchg
daa
xchg
xor
jo
pusha
inc
test
xor
xchg
mov
fwait
sub
adc
xchg
mov
jnp
cmpsb
jne
insb
pop
inc
xchg
ja
cs
outsl
cmp
mov
movl
dec
dec
jge
push
adc
jno
push
repz
icebp
mov
loopne
or
rclb
sbb
leave
inc
cmp
stos
test
cs
test
insb
sbb
push
insl
cmp
outsb
lret
arpl
mov
push
push
mov
popf
je
or
pusha
pusha
lcall
jae
pop
jg
arpl
pop
sub
mov
adc
je
mov
arpl
mov
mov
xchg
lods
sub
pop
fwait
mov
lds
dec
xor
push
mov
adc
ja
cmp
xchg
and
lock
mov
out
or
into
push
jge
mov
adc
xchg
movsl
xor
repz
lret
dec
insl
push
cmpsb
lods
pop
int3
mov
jmp
xorl
rorl
dec
push
and
mov
push
out
dec
push
and
ja
neg
pop
sbb
jmp
cli
addr16
mov
in
lds
sub
jae
in
xchg
and
and
jns
mov
adc
adc
push
lods
pushf
clc
mov
call
cmp
mov
je
aad
jle
pop
sub
and
pusha
xor
xor
sub
mov
sbb
loop
cmpsl
adc
xchg
or
das
mov
xor
popf
mov
imul
fisubrl
stc
xchg
fidivl
mov
add
mov
cs
pop
xchg
rcr
icebp
and
push
call
iret
js
or
jmp
ret
adc
or
sbb
imul
pop
hlt
xor
std
sbb
jbe
push
int
jecxz
cld
adc
in
cltd
mov
enter
fwait
js
or
and
lods
and
out
xlat
mov
jbe
sarl
mov
mov
fwait
xor
mov
movsb
addr16
and
outsl
jg
dec
lods
pop
dec
aaa
cmp
pop
dec
mull
ljmp
repz
adc
loope
js
xor
mov
stos
push
into
push
xchg
dec
cmp
mov
pop
js
loope
xor
stos
ret
mov
frstor
xorl
cmp
cmc
inc
cli
jmp
cmpl
push
mov
lcall
sub
mov
imul
rcrl
insl
mov
shl
punpckldq
fnstenv
out
cmp
arpl
xchg
xchg
and
mov
outsb
leave
sti
lcall
in
mov
sub
arpl
push
inc
inc
test
icebp
roll
fabs
add
pop
scas
imulb
aaa
js
dec
push
and
mov
push
daa
mov
int
xor
imull
es
dec
pop
adc
mov
sbb
mov
lret
jno
sahf
sbb
and
add
or
mov
clc
stos
mov
add
in
push
in
shrb
adc
xchg
ja
sti
call
sbb
mov
cmp
push
sub
jmp
out
jno
iret
filds
in
rolb
add
xlat
sbb
ds
lret
cs
dec
push
pop
lods
les
or
lahf
cmp
mov
and
and
fdivp
mov
enter
xchg
mov
sbb
or
lret
mov
sti
fisttpll
xchg
maxps
fmul
hlt
popf
stos
aam
iret
imulb
fisubrl
push
gs
dec
and
sub
mov
jecxz
data16
addr16
add
sbb
adc
or
add
dec
jbe
mov
dec
inc
lds
xor
out
sub
mul
dec
fadds
test
insb
fnstcw
sti
push
stos
sub
je
daa
inc
pop
push
repz
das
lods
jp
add
ljmp
lcall
dec
ja
push
lods
into
dec
sbb
imul
loop
add
stc
mov
ljmp
frstor
xchg
mov
pop
jbe
aam
sahf
pop
xchg
jp
lahf
xor
mov
je
cmc
cmp
mov
xchg
inc
cmp
adc
int3
push
iret
xchg
lahf
aaa
fisttps
inc
bnd
fdivl
xchg
jb
es
dec
pop
cltd
mov
mov
inc
mov
push
shl
mov
or
scas
or
inc
or
jge
out
jns
push
in
loope
mov
add
mov
and
dec
lret
inc
pusha
insl
xchg
push
adc
das
lret
lcall
aam
mov
rcrb
cmp
ljmp
fsubl
ret
cmpsl
cmp
je
loopne
enter
mov
jns
xchg
xchg
out
lods
lock
out
push
and
insl
mov
roll
sti
push
js
pop
sub
stos
cli
jno
pop
xchg
add
insb
addr16
test
in
popa
push
les
repnz
push
jne
xor
mov
filds
mov
mov
sub
popa
cli
fwait
imul
jns
aas
push
sbb
xchg
mov
xor
gs
jns
cs
cltd
push
jg
mov
xor
push
pushf
xchg
push
mov
loopne
jae
stc
push
xchg
lds
adc
adc
cmp
repz
add
sub
imul
in
in
sti
shlb
jecxz
js
mov
das
popf
and
add
popa
adc
movsl
sbb
scas
popa
icebp
in
add
mov
or
jle
add
leave
not
imul
pusha
adc
and
addr16
in
inc
jmp
ret
inc
push
push
cmp
and
xchg
fs
fs
mov
push
js
in
pop
idivl
dec
shr
jnp
cltd
sub
out
xor
jne
pusha
ret
aad
sti
fstps
add
dec
arpl
push
cmpsl
imul
ja
scas
movsl
es
stos
xchg
aas
push
add
or
mov
dec
xor
out
xchg
xchg
data16
daa
xchg
and
test
jbe
mov
dec
cltd
or
hlt
mov
insb
inc
lret
add
pop
fnstcw
bnd
xor
add
popa
adc
shrb
pop
inc
int
sahf
push
nopl
mov
lods
mov
lods
push
mov
adc
stos
cmp
or
movsl
pop
bound
mov
lea
xchg
mov
mov
stc
mov
xchg
call
mov
cld
sbb
insb
inc
ret
out
outsb
movsb
out
sbb
jns
rep
mov
jmp
dec
jns
mov
jge
inc
cltd
push
cs
xor
insl
rorl
lahf
popf
jno
fnstcw
cmc
inc
mov
sub
addr16
out
scas
mov
mov
lret
sti
xchg
and
inc
jno
push
dec
data16
and
subl
out
jnp
cmpb
scas
push
in
mov
rclb
mov
adc
je
pusha
adc
or
pop
rcrb
loop
mov
inc
rcr
aam
je
push
aam
push
and
xor
jns
mov
cmc
inc
sub
pusha
add
in
adc
cltd
iret
leave
test
inc
imul
mov
cmp
and
insb
push
and
push
hlt
or
pop
and
sub
sbb
es
cmp
daa
cli
mov
fsubrs
out
movsb
adc
jns
xchg
jecxz
sbb
inc
sti
data16
leave
fmuls
mov
jmp
sbb
sub
imulb
push
lret
fisubs
add
mov
adc
inc
push
mov
add
cs
rorl
pop
je
adc
adc
je
xor
out
mov
nop
mov
jne
inc
movsl
cltd
or
rcrb
inc
sub
in
mov
or
mov
out
or
dec
adc
dec
pop
daa
lods
cli
xor
jl
or
sub
sub
lods
xor
jecxz
ljmp
lods
pop
xchg
ds
inc
pusha
xor
rorl
adc
mov
push
and
popa
sbb
inc
stc
mov
xor
out
lahf
push
adc
test
inc
add
add
adc
aas
negb
xchg
inc
cmpsl
int3
pop
insb
fdivs
mov
pop
daa
mov
sbb
popa
test
xchg
push
icebp
arpl
jne
sti
sbb
cmpsb
mov
dec
daa
mov
cmp
scas
adc
lcall
mov
mov
sbbl
cmovns
stc
jmp
jge
pop
inc
lds
lahf
jge
loop
dec
and
jo
add
fsub
mov
sbb
enter
cmp
pushf
fdivrs
popa
mov
rcrl
daa
mov
movsl
bound
sub
movsb
or
push
imul
xchg
dec
cmp
jae
lods
mov
stos
lock
mov
xor
cmp
add
push
sub
bound
mov
in
sub
shl
sub
jmp
in
test
or
hlt
bnd
mov
rcll
lock
and
incb
smsw
shlb
add
in
push
push
pop
in
jmp
or
fld
cli
add
mov
ret
lret
hlt
jmp
push
mov
xor
dec
dec
pushf
rcl
or
aaa
xor
and
push
subb
lret
mov
ljmp
lahf
addr16
sbb
ret
jmp
in
push
jle
repz
cltd
sub
jg
inc
popa
jge
and
pop
add
xor
dec
shl
sub
iret
imul
jp
add
adc
fidivl
sub
mov
push
mov
pop
int
outsl
sbb
daa
stos
test
lock
xor
aaa
inc
ficompl
scas
les
sub
sahf
mov
popf
in
sbb
fcmovu
sub
sbb
add
loop
xlat
cmp
popa
clc
xchg
mov
flds
fcompl
lock
xchg
inc
test
stc
fcmovu
fimull
pusha
inc
das
idiv
dec
hlt
xchg
xchg
insl
into
dec
pop
push
pop
jl
dec
pop
pop
jg
sarl
insb
or
hlt
pop
sbb
jle
jge
mov
jmp
ja
imul
inc
inc
mov
sbb
mov
fistpl
aaa
mov
push
sub
xchg
mov
sub
into
fsubr
cmp
cld
into
adc
aad
mov
jmp
fisubs
sub
and
sub
mov
in
mov
mov
jo
xor
adc
push
mov
push
push
test
out
pop
ret
movsl
arpl
adc
lds
or
xchg
and
and
sbb
xlat
sub
out
stc
inc
imul
lret
cmp
pop
mov
enter
bound
ss
push
data16
mov
mov
ret
in
xchg
add
fbstp
or
das
das
cmpb
and
push
xchg
mov
cmp
stos
lahf
rcrb
cmpsl
in
out
pop
add
jae
inc
imul
mov
add
jle
or
push
add
cmp
cmp
push
add
insl
mov
inc
loop
mov
nop
mov
cmpsl
jmp
pop
or
fdivl
or
add
cmp
sahf
pop
out
out
ja
aas
bound
repz
jb
movsb
mov
jecxz
scas
inc
out
loope
jno
fnstsw
fisttpll
jnp
mov
fwait
test
leave
cmp
push
sti
sbb
ds
lahf
sub
stc
cltd
inc
jo
scas
adc
xchg
xor
mov
dec
dec
mov
push
cld
sbb
and
push
sbb
popl
ret
int3
add
dec
subb
clc
dec
in
sub
in
shrb
sbb
fcoms
sahf
mov
je
xor
mov
data16
out
mov
mov
test
int
out
decl
xchg
ds
pop
add
test
pop
mov
lcall
insl
loope
add
inc
repnz
jns
add
ret
mov
sub
lods
popa
jg
out
or
xlat
inc
lods
push
addr16
inc
sahf
aaa
cld
addb
push
pusha
lock
cwtl
xchg
pop
pusha
push
xchg
cld
fmull
ficoml
xchg
insb
sbb
add
add
shll
test
add
cld
mov
cwtl
iret
aas
dec
mov
std
mov
imul
mov
cld
adc
dec
test
mov
enter
pop
ss
cld
mov
mov
mov
pop
imul
mov
jp
leave
mov
in
adc
push
xchg
cmp
fs
jb
mov
sub
sbb
lret
push
sub
push
sar
pop
xchg
out
movsl
mov
loop
jb
jne
xchg
imul
add
daa
mov
pop
sti
in
lock
ss
inc
mov
and
ss
ret
jns
rcr
push
lods
scas
scas
lods
jnp
or
ja
out
lret
jbe
cmpb
lret
cwtl
aaa
outsb
sbb
pop
cmpl
xchg
pop
xor
ljmp
pop
ds
mov
fcmovnbe
dec
jl
sub
clc
int
fst
adc
lret
pop
and
cmpsb
and
mov
cmp
rorb
mov
scas
pop
inc
adc
mov
mov
in
sub
lods
mov
sbb
icebp
hlt
xchg
dec
aam
mov
dec
ljmp
xlat
or
sbb
xor
xchg
jns
test
xchg
adc
or
test
insl
arpl
jno
push
dec
cmp
sbb
xor
mov
lret
mov
add
out
and
pushf
xorl
scas
or
xchg
push
stc
movsl
adc
mov
pop
out
js
scas
in
pop
pop
nop
mov
pop
dec
push
imul
scas
adc
dec
mov
jne
cmp
xor
inc
sbb
cmp
adc
mov
into
pushf
sarl
cmp
mov
push
outsb
cltd
mov
mov
loop
dec
push
mov
cmp
and
sub
sub
inc
xchg
sbb
dec
push
mov
fldt
pop
pop
or
xchg
rcll
sub
inc
lods
aas
xlat
add
mov
jno
in
mov
lock
in
fwait
cmpsb
push
mov
das
xchg
sub
cmp
mov
push
shrb
and
dec
mov
insl
sti
addr16
mov
or
filds
rolb
das
imul
adc
rolb
xor
jecxz
js
adc
icebp
xchg
xchg
sub
jmp
mov
imul
dec
outsb
pop
mov
imul
sbb
adcl
adcb
gs
xor
lock
dec
std
icebp
or
or
jbe
subl
jae
xchg
and
les
ja
pop
push
adc
cmpsb
pop
xchg
push
mov
jb
xchg
xchg
scas
dec
inc
je
ja
fidivrl
xchg
popa
psubsb
sub
mov
ds
ljmp
xchg
shl
mov
sub
and
push
lock
stc
mov
scas
fstps
sub
lret
adc
jle
mov
push
xchg
add
xor
lock
sub
fdivrs
sbb
sub
inc
and
iret
xchg
icebp
gs
jno
div
sbb
add
add
xor
mov
xchg
rcr
es
in
dec
add
cmp
int
mov
pop
or
jmp
sub
shr
and
mov
sub
int
pop
and
sbb
cmp
sbb
adc
lcall
mov
jns
cmp
sub
push
imul
add
jo
pop
sahf
and
test
leave
das
scas
lcall
out
xchg
dec
out
jp
mov
mov
xchg
in
cmc
xchg
orl
repnz
xchg
shll
mov
lahf
push
xor
enter
pusha
jg
mov
pop
outsl
popa
jnp
mov
xchg
mov
mov
mov
mov
stos
or
xchg
sub
mov
cmp
mov
jns
cmp
std
jle
dec
jecxz
xor
in
mov
shll
and
mov
je
dec
jg
mov
loopne
in
insl
sarb
int
push
outsb
fcompl
pop
adc
aaa
in
jle
repz
or
jns
jecxz
fiaddl
scas
std
cmp
xor
les
jle
xchg
dec
jecxz
repnz
fimull
jg
rol
out
xchg
pusha
pop
lcallw
or
inc
in
xchg
fisubl
mov
add
ss
sub
lods
xchg
roll
pusha
imul
dec
mov
cmp
jmp
subl
add
loop
dec
ljmp
icebp
inc
test
out
sbb
sbb
repz
fiaddl
repz
xor
sbb
js
or
insl
cltd
in
fmull
stos
ret
ret
sahf
shll
repnz
mov
stc
inc
divb
outsb
fsubr
jmp
fldlg2
mov
rcrb
pop
stc
mov
es
cmc
xchg
mov
or
adc
xchg
mov
mul
inc
sbb
push
sub
fs
sbb
pop
in
data16
mov
or
jns
punpckhwd
enter
adc
insb
pop
movsl
dec
mov
pop
into
dec
add
cmp
mov
psubb
pop
enter
ljmp
rolb
and
cmc
scas
fwait
loop
inc
je
cmp
lea
fiadds
push
dec
into
push
sbb
mov
scas
insl
mov
mov
lcall
scas
push
sar
lcall
popa
icebp
test
ss
mul
and
and
cmp
cmp
test
dec
sbb
aam
ss
pop
pop
adc
out
ret
iretw
add
pop
mov
xor
mov
sahf
adc
pop
adc
mov
dec
hlt
int3
add
add
mov
or
dec
daa
loope
pop
cltd
repz
into
rsqrtps
cmpl
fldt
in
out
dec
xor
out
imul
mov
icebp
dec
aas
in
les
push
pop
insb
add
arpl
es
jns
or
inc
lock
mov
das
inc
inc
and
cltd
out
sub
rcr
fwait
mov
pop
xor
insl
or
ret
inc
ja
mov
add
xor
cs
stc
das
sbb
push
mulb
roll
mov
push
repz
xchg
dec
adc
push
jmp
push
push
xchg
adcb
xchg
scas
aaa
inc
stos
sub
adc
fstps
clc
lds
xorl
pop
pop
cmpsl
or
imul
mov
push
ja
das
lahf
jmp
mov
dec
xchg
mov
jecxz
movsl
inc
or
push
pop
sub
ds
push
jle
popa
or
mov
out
shll
mov
inc
add
imul
xchg
lahf
push
sbb
jl
sti
iret
cli
and
int3
movsb
push
mov
and
inc
cs
arpl
in
jge
dec
into
mov
mov
out
push
cld
shlb
das
mov
js
add
pop
xchg
icebp
addb
mov
mull
inc
inc
mov
and
lret
shll
push
in
fisttpl
stos
cltd
or
sarl
mov
jae
mov
mov
sub
fstps
pop
pcmpeqd
es
shll
jmp
lock
in
repnz
cmp
mov
and
xlat
inc
incl
xor
pop
add
push
push
cli
inc
jns
add
rcr
dec
push
jae
ret
dec
dec
jno
loop
pop
enter
ret
testb
xchg
in
pushf
iret
pusha
leave
cmp
popa
ss
pop
outsl
mov
dec
outsl
jg
xchg
test
scas
mov
xchg
outsl
jmp
mov
xor
aad
int3
lret
xchg
inc
pop
push
pop
cmp
cs
pop
int
pop
ja
inc
xchg
fdiv
jne
mov
sbb
in
leave
lret
shlb
mov
sbb
push
ja
repz
scas
sbb
and
push
ds
bsr
and
cli
pop
push
ret
cmc
roll
sub
lock
inc
jg
out
outsb
cmp
jns
rcrb
sub
pop
repnz
pop
pushf
loopne
cmp
loopne
xor
test
pop
aad
decl
lahf
and
jnp
data16
negb
rclb
sub
inc
imul
int3
cmp
es
fs
adcb
loop
ljmp
out
jns
mov
add
je
aam
ss
cmc
xchg
cld
xor
loopne
sbbb
lret
cli
sub
jl
inc
xlat
inc
outsb
scas
mov
mov
arpl
subl
shlb
mov
outsl
add
and
data16
jnp
jne
jbe
push
addr16
ret
loope
insb
push
cmp
and
icebp
sbb
and
xlat
pop
add
mov
fwait
cltd
mov
fadd
sbb
nop
xchg
jne
push
popa
ja
fstpl
mov
jns
fs
jno
xchg
loope
xor
cmpsl
pop
int
jnp
test
push
cli
adc
xchg
and
lds
aam
xorb
idivl
scas
jno
push
je
jle
push
mov
add
xchg
mov
pop
test
mov
scas
add
cmp
inc
std
add
icebp
jle
inc
popf
pop
adc
lods
mov
lea
xchg
push
or
sbb
out
inc
push
out
int3
loop
jo
fld
pushf
xchg
push
movsl
mov
jae
lahf
xor
add
aad
or
mov
lret
sub
inc
inc
es
rcrb
push
mov
loope
js
mov
pop
pop
dec
pop
lea
add
cli
popa
pop
mov
inc
xor
cmp
subb
pop
mov
or
sub
cwtl
cli
jae
cmp
cmp
or
das
mov
bound
cld
mov
out
jne
inc
dec
sub
mov
sub
jmp
jp
mov
cld
sub
stos
in
aad
fxch
push
mov
dec
sbb
popa
lret
mov
les
out
mov
insl
cmp
jo
adc
enter
gs
dec
mov
fldl
loop
adc
add
test
adcb
and
jno
sahf
shr
jg
or
adc
mov
outsl
into
pop
xchg
mov
jnp
pop
pop
test
mov
jnp
cs
shr
add
jbe
je
out
push
dec
mov
in
jbe
mov
das
adc
inc
jae
lock
cwtl
jl
mov
imul
mov
ja
mov
ror
jne
xor
out
cmpsb
stos
push
bound
and
dec
in
in
movsl
in
loop
sub
add
pusha
in
mov
mov
jno
fs
and
cmp
add
dec
outsb
icebp
and
rorb
adc
sbb
loope
push
and
or
arpl
mov
pop
mov
add
sti
outsl
mov
aas
shrl
ds
push
loopne
in
xlat
mov
aad
sbb
adc
in
cmp
dec
pop
mov
cmpsl
test
lea
mov
popa
jmp
xlat
ss
mov
ds
adc
push
movsb
mov
mov
cmp
les
push
outsl
int
pop
sbb
aam
out
setg
mov
fmull
adc
or
pop
or
test
or
xlat
lods
lock
enter
stos
mov
movsl
fnsave
pop
sbb
and
je
push
aas
cmpsb
sti
mov
adc
xchg
mov
cmp
repnz
pop
cmpsl
in
or
test
mov
push
or
lock
inc
mov
in
dec
jmp
stos
stos
jle
or
fldl
mov
leave
jle
rolb
inc
mov
and
adc
xor
mov
push
sbb
dec
test
sbbb
jb
pop
notb
or
mov
cwtl
popf
pop
xchg
int3
mov
and
pop
mov
sbb
bound
pop
enter
dec
dec
cmp
shl
leave
pop
jge
mulb
mov
adc
mov
push
iret
ja
mov
or
mov
out
roll
in
and
rorb
rcrb
dec
popa
inc
add
ljmp
lret
movsb
pop
ret
xor
cmpsl
aam
inc
loopne
adc
xor
mov
adc
xchg
scas
ret
stos
dec
pop
stc
out
out
cli
push
mull
xchg
mov
mov
outsb
out
stos
push
mov
xchg
xchg
pop
push
insb
aam
stc
leave
mul
mov
nop
testl
mov
test
stos
aaa
js
arpl
fs
into
repz
cmp
pop
ljmp
lock
mov
mov
xchg
ficoms
dec
test
fldcw
push
add
popa
cmpsl
push
lret
into
adcb
pop
xor
bound
mov
lea
jnp
fdivr
lds
or
out
pop
mov
xchg
fnsave
mov
push
mov
arpl
mov
stc
test
movsb
inc
loope
mov
stc
adc
in
cmp
jl
fisttpll
test
gs
mov
xor
add
fidivrs
cmpl
pop
mov
mov
dec
aas
in
lea
insb
mulps
je
mov
push
or
dec
shll
push
jl
ljmp
std
mull
or
dec
ret
sub
or
sbb
aad
push
imulb
fyl2x
lret
sub
mov
lret
fs
sbb
cmp
iret
dec
mov
pop
push
clc
dec
or
mov
lahf
imul
or
rcrb
lea
jle
outsb
lea
cmp
cs
ss
sti
mov
sti
dec
enter
dec
test
ss
es
orl
mov
xchg
add
push
insl
and
imul
push
in
in
xchg
push
push
fcomps
mov
popa
cmp
fbstp
aam
nop
or
inc
xlat
mov
mov
pop
rorb
add
sbb
add
pop
or
push
pop
flds
dec
mov
lock
in
fstpl
jns
mov
inc
inc
jns
fdivs
dec
ds
les
lcall
add
cmpsb
out
push
pusha
xor
int
sbb
push
pop
std
and
lret
jg
sbb
dec
mov
out
mov
ss
aas
jge
mov
out
inc
pop
pop
out
push
xor
sbb
outsl
loopne
push
shlb
jnp
mov
pop
push
das
das
sub
add
loopne
xlat
pushf
or
jmp
cmc
sti
rcrl
in
jns
mov
lahf
pusha
mov
cmpsb
mov
stos
mov
call
pop
mov
fcmovbe
lods
push
pop
sbb
fistps
out
icebp
push
ljmp
mov
fadds
pop
adc
mov
insb
cmc
or
xor
jo
xchg
iret
rcrb
into
nop
popf
repz
out
pop
inc
aam
sub
movsl
cltd
aas
inc
icebp
test
sbb
push
cmp
imul
ret
test
or
xchg
push
out
aaa
mov
data16
fnstsw
push
cwtl
or
sbb
cmpl
cmpsb
add
pop
in
or
dec
dec
sbb
pop
repnz
mov
jge
das
xor
fwait
mov
mov
mov
or
test
aam
xchg
iret
les
adc
aad
xor
inc
ja
push
in
test
ja
lods
fs
sbb
xor
repz
das
adc
xor
xchg
andl
ret
push
sbbl
cli
dec
mov
fs
jmp
add
lcall
pop
fisttps
inc
sbb
in
jg
inc
jns
xchg
jno
stos
or
xor
lods
scas
shl
ret
cmp
aam
negb
cmp
add
pusha
outsb
xor
pushf
jmp
pop
cs
and
and
lahf
cmc
repnz
subl
lea
testb
mov
sbb
mov
cltd
sbb
lret
scas
jb
fistpll
sub
xchg
sub
popa
and
dec
les
cmpsb
push
fnstsw
cwtl
iret
mov
push
inc
push
sub
ja
insl
jns
mov
enter
pop
sahf
xor
xchg
std
fwait
call
xor
popa
adc
jle
add
sbb
pusha
mov
mov
jno
movsl
or
jo
sarb
and
adc
fsubrs
and
es
into
mov
int3
std
cmpsb
data16
mov
jno
inc
jg
push
mov
push
mov
clc
mov
mov
jecxz
cmpsl
inc
out
jl
xor
xor
imul
into
ret
or
in
fisttpl
adc
orb
xor
or
insl
push
sbb
scas
scas
cmpsb
pop
mov
adc
xchg
pop
pop
repz
xor
adc
adc
outsb
outsb
pusha
sarl
jg
mov
std
xchg
dec
movsl
inc
cmc
jmp
sub
push
stos
mov
rcrb
cli
mov
adc
fdivrs
dec
sbb
es
out
add
pop
xchg
or
movsl
jae
rorb
inc
lds
add
cmpsb
data16
mov
mov
xchg
and
popa
stos
test
adc
sbbb
imul
sbb
sbb
push
mov
shlb
add
cmpsb
rcll
les
call
movsl
lods
mov
rorb
lahf
lds
pop
out
jnp
and
pop
xchg
outsl
popa
mov
pop
sub
sarb
adc
loope
pop
cmp
add
jae
jbe
sbb
out
cmpsl
fistps
fwait
cwtl
xchg
movsb
lcall
adc
fwait
lods
das
jbe
dec
test
outsl
in
ret
mov
pusha
adc
cmpsb
xchg
and
inc
xor
mov
xor
dec
dec
arpl
inc
icebp
ja
mov
sbb
push
push
out
mov
jo
dec
push
add
das
popf
fs
jg
testl
in
or
in
movsb
mul
shrl
adc
mov
dec
push
sbbl
lods
shlb
xorb
rsqrtps
cld
les
int3
jae
cltd
ret
leave
add
pop
enter
dec
pop
and
xchg
in
js
cmp
cmpsl
lods
pop
insl
ljmp
add
xchg
shll
and
cwtl
repz
pop
add
mov
or
push
sbb
inc
iret
stos
scas
inc
xchg
mul
inc
push
or
or
pop
sarl
push
cmp
cmp
push
insb
add
mov
fdivs
inc
xchg
mov
lret
std
addr16
jl
adc
in
aad
pusha
aaa
add
inc
aam
notl
fisttpll
nop
cltd
cwtl
fsubs
bound
lods
inc
xor
lds
aad
cli
inc
jl
jbe
outsb
popf
in
inc
cvtps2pd
push
notb
iret
and
push
sbb
sbb
andb
mov
inc
cmp
cld
xchg
or
inc
rolb
fnstenv
dec
sbb
js
out
add
fidivrl
aad
mov
insl
xlat
cmp
xchg
adc
popf
lock
shrl
and
cs
xchg
into
sbb
fcompl
incb
push
cmp
jne
shll
insb
mov
cmovg
and
in
andb
mov
sarb
lds
jecxz
and
orb
std
outsl
nop
stc
and
add
test
lcall
lds
xchg
xor
daa
scas
adc
sub
add
push
add
pushf
push
push
cmpl
add
push
and
or
sub
in
lcall
jbe
popa
test
faddl
ja
insl
lret
and
lea
aas
ret
push
loop
jmp
loope
and
and
push
jp
cmpsl
push
iret
outsl
and
xchg
out
hlt
mov
inc
jecxz
call
or
outsl
fs
in
dec
jo
sti
inc
test
mov
rorl
mov
dec
fsubrs
mov
scas
xchg
stc
inc
test
pop
and
in
mov
shl
dec
jns
in
mov
clc
loopne
je
push
jge
pusha
xchg
adc
jecxz
mov
aad
xchg
fbld
pop
xchg
in
cmpsb
dec
addr16
cmp
inc
mov
pop
xor
jge
xchg
jg
clc
iret
dec
and
and
fstp
cmp
cmp
out
loopne
scas
fmull
sbb
gs
je
mov
or
sub
mov
or
inc
jbe
mov
push
in
pop
jmp
mov
nop
push
gs
dec
nop
mov
out
dec
jb
les
scas
mov
pop
sbb
inc
xor
mov
popa
loop
mov
repnz
cmpsb
stc
pop
mov
aas
insl
fisubl
and
mov
int3
pop
repnz
xchg
push
push
les
mov
adc
test
call
lahf
mov
and
pushf
pop
sbb
xor
cld
push
bound
mov
lcall
mov
fs
popa
inc
cmpsb
xor
lds
mov
lea
in
lcall
push
pop
scas
adc
cmp
sub
out
sarb
add
xchg
out
add
dec
sti
ret
test
sbb
adc
or
push
and
adc
mov
xchg
push
insb
cmpsb
dec
fldt
add
insb
lea
imul
cmp
add
jb
test
mov
bound
int
fistl
out
outsl
loop
rolb
xor
mov
or
inc
push
sbb
add
aas
add
addr16
push
pushf
insl
in
imul
imul
dec
cmpsb
rclb
adc
mov
in
dec
fcomps
pop
cmp
loop
leave
pushf
in
cmc
mov
add
sbb
and
outsb
shrb
inc
mov
push
jb
inc
insl
gs
loope
mov
jle
cwtl
fs
xchg
test
adc
sahf
mov
mov
lret
movsl
mov
ljmp
jns
push
dec
aaa
inc
cltd
out
mov
pop
loopne
or
jno
popfw
add
icebp
test
sub
fstl
push
xchg
adc
sub
mov
ret
jns
sbb
cwtl
out
cmp
fwait
mov
add
ficoms
movl
es
sbb
inc
cld
ljmp
fstpl
add
test
jae
mov
jbe
lea
dec
insl
sbb
lods
or
mov
lock
lea
loope
xchg
aad
pop
pop
movsl
mov
loop
jnp
repnz
lret
vandnps
jne
aaa
lds
out
std
inc
fwait
scas
and
pop
inc
mov
loop
or
addr16
adc
js
xchg
or
mov
add
ja
sbb
test
adc
xor
cld
inc
lret
adc
sbb
mov
lock
cmp
pop
gs
out
sbb
lods
xchg
enter
push
out
pop
cmc
shr
or
cmp
out
add
dec
test
mov
je
pop
push
push
mov
test
mov
js
xor
xchg
xor
pop
lea
bound
adc
leave
lock
sbb
fistl
int3
mov
and
and
repz
rol
cld
push
add
dec
sbb
cmp
popa
jmp
pop
outsb
dec
popa
icebp
adc
adc
iret
mov
in
in
nop
ljmp
js
inc
lret
push
mov
test
ret
jmp
aad
add
cmp
ja
mov
push
and
rcrl
notl
push
dec
cmp
enter
mov
sbb
pop
push
xor
sbb
jmp
and
push
shlb
das
adc
sbb
cmp
push
dec
cmpsl
mov
clc
mov
pop
gs
mov
sbb
ds
inc
or
jp
mov
pop
dec
out
adc
shlb
int3
rorb
or
dec
xor
sbb
adcl
mov
sub
fsubr
lcall
mov
lods
in
lods
pop
cwtl
pop
aad
or
dec
sbb
mov
shr
fbstp
das
mov
push
sbb
fadds
sbb
loope
xor
cs
xlat
hlt
lods
jno
data16
shll
out
mov
sbb
dec
sub
sbb
ja
dec
shl
inc
dec
mov
dec
jl
bound
push
testb
pusha
add
dec
xchg
std
and
js
ljmp
popa
push
cld
ficomps
std
fcompp
js
in
sbb
scas
repz
js
lods
inc
stos
das
jp
xor
inc
clc
jno
mov
jbe
cld
jo
cltd
pop
jnp
jnp
inc
adc
outsl
fiadds
jmp
adc
pop
push
nop
psubd
js
push
push
xchg
adc
mov
cmpsl
lcall
adc
in
cmpsl
xlat
adc
test
fmull
jb
bound
sti
jne
xchg
lock
adc
mov
cmp
pop
pop
pop
js
push
sbb
fwait
das
bound
arpl
out
js
inc
push
cltd
pop
js
inc
jmp
mov
fstpl
add
jo
les
sub
jmp
pop
imul
loope
lahf
xor
adc
cmp
fwait
das
sarb
xlat
jns
pop
movsl
adc
test
and
aam
inc
fwait
andb
and
loope
lods
pop
add
stos
mov
jnp
lret
std
sub
jne
sarl
mov
stos
rcrb
mov
add
adc
insb
int3
bound
mov
lea
mov
pop
cld
out
or
insl
push
mov
cmpsb
lods
outsb
push
inc
call
bound
pushf
icebp
mov
jl
addr16
test
test
sbb
jmp
dec
inc
xor
sbb
xor
xlat
outsb
cltd
or
jns
test
and
mov
out
repnz
lahf
das
inc
fiadds
push
lcall
dec
cmc
adc
push
lcall
in
jne
int
sub
jns
lods
movl
orb
repz
aas
enter
lahf
inc
push
cmpsb
mov
sub
ja
adc
pop
mov
push
jle
mov
cmp
fwait
push
push
jo
and
loop
pop
shrl
pop
jo
arpl
loopne
lods
inc
out
fcoms
test
test
and
fcomp
nop
pushf
fs
imul
mov
push
pop
pop
rorl
cmp
cmp
setno
mov
xchg
inc
push
movsl
mov
pop
lret
orb
sub
mov
test
jg
jecxz
sub
and
ja
sub
lds
sti
cltd
rorl
movsb
adc
cltd
outsb
pushl
into
cmp
insb
push
xchg
pushf
and
in
xchg
mov
and
js
fistps
gs
int
loope
and
bound
adc
out
popa
dec
jno
add
movups
and
adc
dec
icebp
mov
lret
mov
xor
cmp
adcl
into
int
pop
or
imulb
push
push
cmpsb
rcll
fildl
repz
fcoms
xor
sti
add
std
mov
adc
mov
leave
sub
lds
inc
adc
mov
rorb
xlat
xorl
jl
scas
jg
mov
dec
outsb
orb
jge
push
sub
xor
jecxz
leave
lret
push
fiadds
addr16
or
push
mov
stc
jg
push
data16
and
test
ror
fidivl
mov
cmp
jle
jne
xor
rcll
push
in
repz
sti
mov
lret
or
lods
es
sub
push
orb
jmp
inc
out
jbe
jnp
ljmp
jae
adc
mov
repz
jno
mov
and
mov
push
xchg
iret
push
xchg
cmp
mov
mov
mov
testl
adc
or
dec
mov
fdivl
and
cmp
mov
rclb
inc
repz
dec
cmp
cmp
lods
push
cmp
test
pop
out
orl
or
sub
cmp
mov
push
mov
push
dec
xor
mov
loopne
xor
inc
and
movsb
andb
movsb
push
adc
sbb
and
call
jb
cli
jl
cwtl
mov
mov
mov
dec
loope
subl
mov
sub
out
mov
stc
addr16
and
out
mov
adc
insl
xor
push
pop
mov
orb
sbb
xor
pop
das
ficomps
adc
inc
scas
iret
add
outsb
dec
fcoml
lock
dec
cmp
loop
mov
push
sub
mov
imul
jmp
xchg
repnz
mov
stc
les
pop
repz
lret
in
jmp
in
xchg
out
or
sbb
add
sub
or
outsw
cwtl
aad
and
pop
sbb
dec
int3
scas
adc
adc
inc
pop
in
in
mov
jge
aam
or
into
cs
jg
sti
mov
clc
cmp
ja
jo
adc
test
test
nop
add
mov
jge
insb
hlt
lcall
lea
enter
cs
icebp
and
xor
inc
jecxz
xlat
xlat
jbe
mov
out
push
lret
movsb
mov
das
jae
stc
lahf
arpl
clc
jbe
adc
gs
outsb
cmc
lret
sub
ficompl
arpl
loop
insb
pop
ret
repz
mov
out
jbe
ja
mov
pop
mov
shrb
xchg
fdivs
mov
cltd
in
push
adc
aam
out
out
or
mov
jo
push
out
sub
pusha
or
scas
push
mov
lods
pop
mov
or
pop
add
jno
lds
jecxz
sahf
out
sahf
push
shl
js
mov
aad
lahf
test
sbb
sbbl
xor
cmp
mov
movsl
mov
out
call
adc
mov
mov
cltd
push
mov
push
add
xchg
adc
jb
sub
icebp
hlt
dec
mov
push
outsb
fisubrs
xorb
mov
in
xor
xor
pusha
sahf
jbe
cltd
test
ret
xor
insl
aam
pusha
hlt
das
imul
out
mov
mov
mov
push
sub
cmp
int
imul
sub
fwait
mov
jp
jle
xor
push
daa
inc
js
jns
aas
mov
test
jp
pop
test
mov
cmc
sbb
pop
lahf
ljmp
pop
mov
inc
cmpsb
gs
and
mov
scas
repnz
std
add
sti
divb
pop
jle
mov
inc
scas
sti
lcall
int
sbb
and
std
and
add
xchg
inc
jmp
out
or
sub
sbb
mov
ss
jae
fstps
mov
mov
mov
jecxz
push
inc
and
dec
inc
mov
jne
js
pushf
push
repnz
jmp
iret
sub
jmp
mov
or
mov
push
inc
mov
rcrl
pop
push
fadds
adc
xor
pop
ljmp
mov
loopne
lret
dec
lods
hlt
jmp
testl
jb
out
jp
cmp
or
sbb
adc
icebp
stos
adc
mov
mov
mov
mov
insb
test
sahf
add
xchg
sub
push
jmp
loope
std
das
sbb
repnz
mov
sti
fidivs
push
cmp
and
jnp
call
jbe
enter
and
jge
test
push
hlt
daa
cmp
xorl
imul
scas
test
out
test
pop
scas
shll
rcll
rorl
cltd
jle
mov
sti
xor
lcall
push
ror
or
repnz
push
pushf
loop
jne
mov
mov
aas
xchg
jne
sbb
fbstp
insl
push
insb
fistps
clc
push
push
jle
xor
jnp
ret
push
ds
cltd
pop
inc
shll
mov
leave
jg
ljmp
sub
inc
mov
sbb
pushf
lods
dec
sbbl
cmp
fisubl
sbb
push
outsl
mov
mov
add
mov
push
imul
jns
or
test
test
pop
mov
neg
out
repnz
daa
out
imul
cmp
cltd
mov
into
enter
mov
in
lret
into
sbb
push
sub
sub
scas
inc
insb
push
call
outsb
std
jne
icebp
mov
orb
push
inc
inc
out
fdiv
and
xor
xchg
dec
jo
pop
adc
mov
scas
pop
mov
push
xor
xorb
out
cmp
outsb
cs
jp
fwait
movsl
ficoml
xchg
sbb
mov
or
inc
xor
jb
xor
jnp
or
pop
rcrb
xchg
out
fildl
jo
push
lds
xor
jne
push
addb
je
ret
or
jb
cli
loope
in
shll
or
jae
stos
add
in
jns
rclb
push
int3
stos
je
cmp
aad
pop
fistps
and
push
in
in
pop
icebp
shlb
inc
rcrb
stos
sub
jge
es
lahf
arpl
mov
adc
ror
jle
inc
daa
int3
fbstp
rorl
xchg
in
fsub
out
jmp
out
xor
gs
or
in
aas
mov
fisubrl
fcmove
mov
push
xlat
mov
dec
jl
mov
sbb
jmp
mov
fists
jle
mov
sub
test
int
addb
lahf
les
mov
aad
bound
or
inc
lahf
int3
pop
jae
cs
mov
int
mov
dec
imul
cmpsl
xor
ds
outsl
mov
inc
mov
stos
mov
aaa
int3
mov
jge
push
xchg
jecxz
jb
imul
mov
jl
cmc
inc
lcall
sbb
lods
sub
outsl
shrb
hlt
and
mov
lret
dec
mov
popa
mov
ds
stos
mov
xchg
add
cmp
sbb
mov
mov
mov
sub
jg
fadds
mov
and
fsubr
and
pop
das
mov
lock
push
sub
jne
add
sub
dec
shll
and
imul
xchg
dec
push
or
into
and
lods
dec
jmp
leave
xchg
lds
jl
aaa
jmp
je
cmp
ficoml
mov
cmp
cmp
stc
loop
gs
ss
inc
lods
addl
imul
push
pop
jne
push
dec
mov
jg
push
loop,pn
stos
enter
cmpsl
test
mov
pop
test
xchg
xchg
jmp
jnp
shrl
fsubl
std
stos
push
pop
and
ja
dec
fstl
imul
cs
popf
xchg
jmp
pop
sub
adc
xlat
pushf
shrl
adc
outsl
call
shll
mov
fisttpll
sbb
cli
scas
stos
das
test
pusha
pop
mov
dec
lds
jb
sub
aaa
pusha
cld
push
lods
dec
push
in
mov
push
jp
gs
xchg
and
subl
xchg
mov
movsb
adc
pop
mov
dec
jno
insb
pop
inc
sbbb
jge
sbb
dec
xchg
cmp
xchg
sub
loopne
inc
push
mov
mov
xor
rcrl
xor
push
and
sbb
int3
mov
sub
mov
push
stos
aas
mov
cld
mov
xor
insb
xor
pop
dec
ficomps
lret
dec
movsb
jb
inc
out
xor
sbb
mov
mov
sub
mov
fnstcw
pop
shrl
mov
jg
mov
mov
lods
mov
mov
push
xchg
lcall
sbb
sub
imul
fbstp
adc
jecxz
lods
sub
add
and
jnp
into
mov
cmpsb
or
xor
sub
bound
jmp
pop
and
jbe
arpl
roll
aaa
sub
cmc
dec
or
nop
les
fdivrs
sub
out
adc
leave
xchg
rcll
fmulp
sub
sub
ds
mov
ja
jmp
jae
setne
sahf
mov
movsb
stos
push
mov
negl
inc
ret
push
call
lods
inc
icebp
das
int3
inc
jmp
jo
ret
popa
inc
push
and
fdivp
cltd
jb
xchg
and
sub
xor
inc
mov
pop
sbb
add
shlb
push
dec
add
outsl
inc
icebp
inc
ffreep
push
dec
orl
ja
inc
adc
fs
notb
adc
lods
mov
dec
sub
add
pusha
or
jnp
pop
out
sahf
cmp
push
lcall
mov
push
xor
pop
subl
pop
jle
inc
lea
ljmp
xor
adcb
pop
in
imul
adc
ljmp
adc
pop
ret
cwtl
std
jl
leave
add
adc
push
mov
add
lcall
nop
jmp
push
add
movsb
loope
je
and
lock
ds
lahf
out
mov
mov
sub
jae
sar
sbb
add
adc
xor
push
jecxz
cli
insb
mulb
orb
rorl
fnstcw
sarb
mov
outsl
adc
jne
lret
xchg
cld
stc
out
cmp
out
es
sub
dec
lea
aas
mov
addl
fisubrs
dec
out
mov
push
add
repz
mov
adc
adc
loop
ret
scas
out
pop
dec
mov
cmp
push
shrl
jne
inc
push
sub
fcmove
lds
jle
pop
adc
outsb
ret
sbb
in
xchg
adc
pop
inc
in
adc
int
loop
push
dec
pushf
cmpsl
add
push
push
sub
pop
sahf
dec
inc
adc
sub
cs
hlt
jnp
cmp
mov
mov
mov
push
xorb
pop
out
jb
mov
xchg
repz
fwait
adc
outsb
test
pop
in
sbb
add
ret
cltd
scas
out
pop
push
negb
dec
mov
sbb
adc
out
popf
or
mov
add
clc
lcall
data16
jecxz
subb
adc
sbb
fldcw
jge
jo
adc
push
rcrl
movl
xor
mov
add
xchg
dec
loope
jne
or
fs
sub
pusha
int
sbb
jl
sbb
mov
mov
pop
stc
mov
popf
sub
push
ljmp
or
sbbb
inc
dec
insb
loopne
push
push
mov
out
sub
fnstenv
ret
lock
add
xchg
mov
mov
jg
sbb
xchg
fnstcw
and
xor
push
dec
mov
ret
push
shrl
aad
lret
mov
xlat
xchg
pop
lds
movsl
dec
lcall
outsl
add
shl
fxch
push
roll
mov
mov
pop
lea
jmp
inc
lcall
or
mov
mov
jl
and
mov
adc
dec
jns
fld
jmp
push
mov
out
stc
inc
xchg
call
dec
andb
push
lcall
ss
int
sbb
dec
mov
dec
es
fdivrs
out
into
std
mov
inc
add
movl
movsb
mov
xorl
in
cmp
cmpl
or
gs
cmp
in
rcrb
push
and
decb
enter
push
sti
mov
xor
and
add
enter
dec
mov
sti
or
mov
mov
push
pop
loope
mov
inc
cmp
das
pop
and
stc
aam
mov
aam
in
ds
push
shll
adc
or
dec
data16
rsm
jns
pop
fs
imulb
jnp
sub
xor
nop
xchg
xchg
loopne
sti
rclb
movsb
fcmovnb
mov
push
cltd
and
add
adc
pop
xchg
out
sub
daa
ljmp
xchg
mov
clc
mov
xor
lret
mov
cmp
mov
mov
sbb
nop
test
jnp
rcr
into
cld
jle
popf
sahf
cli
es
cmc
jo
pop
jg
or
adc
sbbl
xchg
ret
or
mov
fs
iret
xlat
dec
or
mul
in
stc
in
imul
fnstsw
adc
fsts
or
xor
stc
ficompl
aam
je
add
mov
xor
xor
inc
sbb
mov
ret
jl
xchg
mov
sub
je
mov
xchg
sbb
mov
inc
cmp
fadd
ror
ret
mov
lods
lret
jle
cmp
leave
in
mov
incb
push
push
jmp
mov
xor
jle
cmpsl
adc
or
mov
push
add
loopne
and
sub
pop
imul
cwtl
jecxz
mov
dec
sub
scas
xchg
repz
js
aam
mov
mov
out
std
adc
fwait
add
sbb
cld
xchg
fucomi
xchg
inc
cs
and
pop
mov
dec
mov
lcall
cli
in
daa
xchg
test
leave
or
cmp
sbb
sbb
loopne
lea
test
test
cmc
int3
stc
mov
clc
enter
out
jmp
int3
push
xchg
dec
add
pop
sbb
jo
mov
sahf
adc
cmpsb
hlt
imul
pop
push
fsubl
dec
in
inc
push
inc
and
cwtl
scas
adc
xor
sub
jnp
pop
in
push
sub
xor
andl
mov
mov
int
fldl
cmpsb
adc
xchg
push
notl
jbe
and
jnp
jg
xor
cmpsb
loopne
push
gs
and
out
inc
ret
sti
dec
and
push
push
or
and
ja,pt
mov
lahf
test
testb
test
fcoml
sub
xchg
mov
cmpsl
cmp
shl
mov
test
int
mov
pop
add
lahf
shll
sbb
pusha
arpl
dec
adc
int
int
jae
not
add
cmpsl
aad
dec
adc
rcrb
and
icebp
mov
mov
xchg
rcl
xor
mov
inc
mov
daa
jecxz
jecxz
or
fmul
jmp
pop
push
cmpsl
adc
adc
fildl
shl
pop
daa
xchg
inc
icebp
mov
sub
jp
mov
xchg
sbb
jmp
popf
bound
add
or
aas
inc
popa
mov
mov
push
jo
or
test
or
fbld
inc
inc
mov
cmp
inc
push
mov
nop
insl
xchg
and
inc
pinsrw
xchg
add
iret
cmp
xor
hlt
jno
lock
push
lods
jecxz
push
xlat
icebp
mov
cmp
add
cmpsb
nop
inc
test
push
insb
loopne
fsts
jnp
fisttpl
popf
cmp
popa
xorb
mov
stc
iret
and
lds
imul
mov
fwait
mov
js
lds
mov
pop
scas
fidivrl
xor
xor
std
jecxz
push
xor
fs
inc
sub
mov
je
loop
cmp
mov
into
test
popf
sbb
mov
insb
pop
mov
jne
insb
xor
lods
int3
mov
add
je
mov
outsl
idivl
movsl
test
popa
jle
scas
push
pop
stos
inc
les
fwait
imul
pop
repnz
scas
insb
mov
cld
icebp
push
push
in
or
fcoms
push
mov
cld
adc
adc
adcl
mov
rorl
dec
mov
push
inc
out
sbb
push
insb
or
outsl
dec
cld
dec
jb
call
jle
cmpsl
cmpsl
inc
push
adcb
rcll
sbb
pause
and
mov
out
test
shll
loope
jns
mov
std
and
xchg
push
cmovp
int3
mov
add
jmp
ret
hlt
xchg
sahf
ret
dec
add
sub
adc
or
or
pushf
pop
call
dec
iret
pop
jmp
xor
xchg
push
jl
shufps
xchg
xor
jo
pusha
xor
mov
pop
arpl
inc
loopne
pop
mov
add
rolb
loope
std
mov
mov
xor
fsts
cld
sbb
shll
and
mov
js
inc
inc
or
mov
cvtps2pd
lret
xchg
jnp
push
mov
jmp
lret
jp
out
mov
cmp
clc
das
ss
sub
test
or
shl
sub
jne
xor
mov
add
stos
repnz
bound
sbb
add
daa
jle
xchg
xor
xchg
push
outsl
in
push
sbb
or
insl
and
mov
jb
or
gs
inc
mov
mov
pop
popf
xor
lahf
out
cld
mov
js
jno
loope
mov
dec
mov
mov
imul
add
xchg
stos
inc
cwtl
sub
xchg
hlt
xchg
xor
pushf
sub
mov
ljmp
jge
int3
mov
push
lods
xchg
stos
jno
test
hlt
lret
cmp
push
sbb
nop
and
jecxz
xor
sbb
and
ja
adc
mov
pop
insb
lret
adc
insl
pop
loopne
lret
notb
sub
ja
dec
xchg
jge
hlt
pop
icebp
sub
scas
icebp
pop
jbe
imul
and
adc
adc
mov
jnp
cmp
add
jp
gs
addb
xchg
cli
rorb
mov
mov
loopne
mov
cli
cmp
mov
sub
mov
bound
xchg
std
pop
push
sub
push
mov
jno
push
xchg
push
add
add
xchg
aas
mov
out
mov
sti
mov
fs
pop
lods
inc
fwait
mov
xor
shll
fs
das
sub
fsts
dec
sti
jne
fmuls
inc
jmp
jl
loopne
sbb
stos
imul
jae
mov
sbb
cmp
mov
jnp
aas
lods
xchg
cli
pop
stos
aad
fwait
mov
dec
arpl
loopne
or
pop
ret
dec
push
out
lock
pop
leave
and
jge
sub
inc
shl
cmpsl
dec
iret
sub
es
mov
icebp
mov
sbbl
mov
enter
cmp
and
xchg
inc
lret
mov
ljmp
out
push
xorb
mov
xor
or
mov
lods
loope
daa
lahf
mov
mov
xchg
out
and
mov
or
xchg
lcall
and
jb
lret
pop
and
loop
movsl
pop
jp
mov
scas
push
sub
fdivrs
xchg
pop
les
test
pop
dec
jnp
pusha
pop
ret
ficomps
mov
pop
cltd
cmp
mov
fbstp
std
sarb
cs
sbb
add
adc
or
pop
cli
push
adc
pushf
adc
mov
lret
push
sarb
popa
jecxz
mov
xor
or
je
mov
imul
iret
mov
xor
out
loop
push
addr16
sbb
orb
inc
rcrb
sbb
sbbl
scas
xorl
test
xchg
icebp
addr16
fisttpl
outsl
jmp
sub
in
push
pop
pop
leave
mov
mov
mov
dec
movsb
xor
sbb
jmp
xchg
jg
add
mov
jg
sbb
inc
loop
xchg
mov
movsl
loop
call
push
pop
pushf
sub
cs
mov
and
sub
ss
lock
divl
movsl
in
jns
xor
ficomps
mov
mov
lret
dec
adc
mov
test
dec
or
xor
sub
add
and
imul
mov
and
mov
mov
or
lods
fwait
jbe
xor
xchg
lret
mov
aad
idivb
mov
push
xor
jns
mov
stc
mov
lods
or
cmp
xor
inc
aaa
push
es
jbe
test
jnp
mov
xor
jns
enter
adc
mov
js
mov
mov
addl
xchg
imul
mov
das
jmp
out
lcall
leave
pop
pop
movsb
cmp
add
subl
mov
jle
fildll
xchg
inc
cmp
pop
inc
pop
popa
or
jnp
into
out
cmp
jns
add
mov
mov
mov
ss
imul
xchg
xor
aam
pop
adc
and
lret
iret
int3
insb
pusha
outsb
xchg
aas
lret
lcall
into
or
mov
add
cmp
pop
and
das
fbld
ret
inc
shll
adcl
mov
xor
inc
jle
sahf
add
cmp
cmp
push
rorb
pushf
xor
daa
and
ds
cmp
cld
loop
dec
call
pop
adc
jmp
ds
mov
adc
pop
das
cmp
gs
test
mov
fstl
mov
idiv
add
xchg
or
jne
decl
mov
pop
dec
mov
and
sub
add
inc
hlt
pop
into
xchg
inc
adc
add
xchg
adc
popf
xor
into
dec
dec
jecxz
lds
repnz
or
xor
das
lock
sbb
out
fimuls
push
push
xlat
lcall
aad
and
pop
shrb
push
push
inc
cli
push
add
repz
jnp
jae
pop
test
out
jnp
add
popa
jbe
push
add
out
fadds
jns
hlt
xlat
out
mov
out
lret
mov
fildll
cmp
int
ja
sbb
leave
shll
sahf
ret
and
leave
pop
add
jge
cwtl
cmc
aad
mov
out
out
mov
push
sbb
rol
or
js
inc
test
clc
fimull
cmpsl
add
sub
mov
stc
loopne
xchg
mov
add
inc
add
mov
test
pop
out
pop
push
hlt
cmpsb
push
sbb
sbb
aam
repnz
push
out
mov
je
es
pop
pop
cmpsl
fs
fnstcw
or
divb
fs
out
sub
dec
pop
call
paddw
enter
mov
scas
adc
shrb
jbe
addr16
sub
push
sbb
out
adc
add
or
stc
sub
mov
iret
xchg
dec
in
roll
mov
jne
test
jbe
sub
xchg
insl
subl
cmpl
in
insb
dec
out
xor
mov
pop
outsl
mov
mov
scas
mulb
sbb
cwtl
push
add
xchg
cmpsl
mov
xor
ficomps
adc
add
cmpsl
adc
or
xor
in
fcomps
mov
sbb
leave
loopne
outsl
test
sbb
dec
add
adc
loop
pop
scas
ds
mov
pop
jge
cmp
xchg
dec
out
insw
mov
xchg
andl
testb
lea
jge
aam
pop
jmp
loopne
cmpsb
int
mov
lds
cmp
into
inc
fprem
mov
in
cmc
sbb
rcl
jp
fdivrs
jmp
and
jno
jecxz
push
xchg
xor
mov
jb
popf
punpckhwd
push
xchg
push
shr
int3
mov
sarb
mov
and
xchg
out
scas
cmpsl
mov
dec
in
sbb
sub
icebp
aas
test
jecxz
dec
push
sbb
insb
cld
pop
push
stos
dec
sub
sub
data16
and
adc
mov
cld
push
and
int3
repnz
cmpsb
add
clc
shll
out
push
pop
mov
rolb
out
je
les
arpl
stc
push
dec
test
dec
ret
xor
rclb
adc
nop
push
lcall
jg
loopne
es
and
sbb
mov
out
fisttpl
push
cmp
clc
inc
lods
mov
xchg
cmc
shl
or
xchg
sub
cmp
jl
fisubl
add
daa
inc
add
mov
aas
sti
loopne
addr16
stos
inc
out
lods
or
sbb
cmp
and
fsubrs
shr
pop
sbb
sub
or
ret
cs
rol
mov
les
pusha
sbb
les
test
stos
mov
mov
es
leave
dec
dec
repnz
test
mov
shld
jg
popa
bound
dec
cmp
jnp,pt
xorb
inc
mov
roll
jo
scas
inc
cmpsl
adcl
out
data16
daa
inc
lods
lods
je
lret
aam
cltd
sbb
pushf
cwtl
aam
sub
mov
aaa
test
in
fidivrs
popa
in
jnp
ss
mov
in
aas
out
push
cmp
or
lods
faddp
js
adc
neg
jns
in
or
movsb
jns
inc
aaa
repz
add
int3
pop
pushl
push
mov
or
mov
fcoms
sahf
push
addr16
sbb
fcomps
jl
das
in
adcb
push
adc
out
ret
dec
mov
cmpsb
xor
cmp
js
in
inc
aas
movb
pop
outsl
loop
dec
negl
in
icebp
push
or
mov
scas
movsb
movsb
fs
cli
lcall
pop
pop
mov
das
subl
das
jp
mov
xchg
fs
fcomi
mov
out
outsl
xor
inc
pop
ret
out
jmp
out
xor
jl
xor
mov
arpl
into
jl
dec
gs
ljmp
push
mov
pop
call
xchg
xchg
lcall
push
or
ss
ljmp
jb
cmp
mov
sub
lods
mov
xor
ret
mov
aam
jmp
aas
enter
xchg
lcall
in
inc
orb
test
jne
mov
inc
je
mov
adc
push
ljmp
jp
mov
xor
scas
sahf
loope
jb
dec
fadds
xorb
inc
stc
in
loope
repz
pop
lret
fstl
movsl
fnsave
pop
cmc
test
faddl
outsl
cld
movsb
pop
leave
mov
in
bnd
aam
lret
jb
call
push
pushf
aas
mov
mov
ss
push
sbb
mov
xor
icebp
mov
repz
xchg
imull
std
pushf
mov
enter
pop
rcl
mov
pop
mov
mov
sbb
pop
insb
test
add
pushf
push
sub
jns
andb
mov
jb
call
aam
dec
ds
and
scas
shl
pop
jle
lods
xchg
cmp
xor
aas
shlb
push
and
pop
call
xor
cltd
dec
or
xchg
pop
inc
jmp
add
mov
aad
nop
jecxz
or
mov
ret
cmp
pop
mov
and
mov
cmc
sbb
and
decl
daa
inc
cmp
add
inc
fidivrl
mov
outsb
sbb
jecxz
hlt
inc
inc
push
enter
mov
sbbl
and
lods
scas
sahf
in
add
mov
push
inc
cmp
mov
cmc
arpl
cmpsb
jge
cmp
or
in
pop
jnp
cli
and
push
sub
pop
subb
stos
pop
pushf
ljmp
adc
popa
notb
mov
and
mov
cmp
movsb
push
rcrl
sbb
imul
mov
sarl
lret
xchg
and
stos
sub
xchg
popw
mov
movsl
pusha
mov
xchg
inc
mov
loopne
cs
lea
aam
xchg
inc
test
xchg
mov
cmp
sbb
push
js
push
pop
enter
mov
lods
shlb
jp
jno
cmpsl
pop
and
fwait
cwtl
jno
popf
or
mov
cs
mov
mov
int3
lds
pusha
ret
in
gs
cwtl
mov
insb
push
mov
loop
bswap
jno
rorb
cmp
xor
in
ret
inc
jle
fadds
sbb
aam
fwait
mov
xor
leave
xchg
mov
lret
push
dec
pop
jns
push
push
ss
mov
inc
lahf
out
jmp
and
sub
popf
xlat
xchg
sbb
sbb
dec
cwtl
pop
ds
sahf
sub
rol
testb
cwtl
mov
ds
test
and
out
in
fimuls
sbb
iret
aad
inc
mov
add
lods
sub
scas
cltd
movsl
and
dec
sbb
rep
add
outsl
mov
lds
sbb
inc
insb
mov
popa
mov
jnp
stc
add
pop
pop
ljmp
or
test
push
push
pop
in
xor
jb
setge
in
dec
ds
xchg
sbb
and
push
fists
out
jo
jae
xor
mov
mov
out
add
mov
js
je
dec
push
mov
adc
adc
jno
fidivl
sub
xchg
cmp
dec
les
pop
push
fldcw
icebp
fucom
int3
popf
push
mov
mov
push
in
dec
mov
cmpsb
and
fcoml
repnz
inc
mov
cltd
ljmp
push
and
xchg
pushf
aas
imul
mov
js
sub
decb
out
les
add
loope
dec
mov
sti
rclb
jl
hlt
fsubs
adc
divl
lds
cmpsb
adc
push
pop
xchg
cwtl
fisubrs
pop
lret
lahf
test
pop
cmpsb
popf
push
mov
je
addr16
loop
add
sub
inc
xchg
push
gs
mov
push
inc
hlt
mov
add
sub
lods
sub
ret
push
mov
cld
xchg
ret
lods
mov
pop
adcl
mov
adc
jge
inc
xchg
out
push
add
fiadds
in
xor
aam
les
stos
sub
and
adc
push
rcll
mov
mov
stos
mov
imul
fiaddl
push
out
inc
xor
push
rolb
ss
push
pop
lock
mov
mov
call
lret
es
mov
ret
sahf
int3
retw
cmp
mov
in
mov
mov
jecxz
push
lret
addb
loopne
insl
push
aaa
or
mov
test
push
outsl
adc
fcomip
mov
cmp
sbb
push
sbb
xchg
mov
mov
sti
cmpsb
hlt
mov
pop
dec
jp
pop
add
xchg
push
or
lds
into
jg
data16
add
push
mov
push
xor
xchg
mov
repnz
inc
jge
in
out
mov
aam
push
nop
pusha
or
ljmp
adcl
int3
cmp
je
ror
cld
aam
cmp
xchg
orb
inc
or
shr
cltd
out
scas
or
aaa
or
adc
dec
adc
repz
scas
add
adc
and
test
imul
enter
and
xlat
fstl
push
test
xchg
jle
or
xchg
cmpsb
cmp
stos
sub
ficomps
sub
jp
leave
xor
gs
jmp
pop
enter
test
movsl
out
or
lods
shlb
lds
jnp
loope
and
clc
jge
xchg
ret
inc
stos
shlb
pop
iret
mov
xor
sub
insl
imul
dec
push
rorb
icebp
mov
or
mov
addl
dec
cltd
test
or
push
je
insl
aaa
insb
sbb
int3
sub
cmp
xor
lahf
fildll
loop
movsb
pop
jae
fmull
inc
fmul
loopne
clc
test
adc
inc
adc
insl
pop
mov
cmp
dec
lods
mov
fucom
je
imul
mov
cmp
test
add
inc
enter
lds
sub
mov
clc
lea
test
lret
imul
xchg
scas
lods
and
movsl
jnp
pop
les
movsl
idivb
cmpsl
fstpt
push
mov
ss
lret
mov
pop
lock
ss
out
adc
sub
or
imul
scas
push
dec
mov
nop
mov
fldcw
out
push
pop
pop
xor
mov
mov
mov
cltd
ret
pop
inc
pop
flds
aad
add
sbb
xor
fcoml
xor
cmp
pusha
or
inc
adc
fs
mov
mov
sbb
dec
xor
push
xor
adc
pusha
out
aad
out
shll
mov
jo
xor
in
mov
lods
push
jecxz
mov
mov
out
bnd
and
addb
jae
mov
aas
pop
or
xchg
fbstp
cmpsl
mov
add
negb
stos
imul
mov
dec
mov
aaa
jbe
sbb
mov
push
jne
cmp
or
out
sub
xchg
shrb
dec
loope
xchg
out
shlb
cmp
push
mov
mov
jmp
xor
out
aas
in
test
jge
sub
dec
sbbb
mov
cmp
xor
test
dec
ja
mov
cmpsb
stc
jmp
lret
aas
jns
sbb
sub
pusha
aad
xor
mov
rcl
sub
or
inc
xchg
mov
outsb
and
mov
mov
movsb
push
push
push
xchg
orb
jmp
out
ss
mov
push
and
daa
outsl
and
or
sub
int
scas
bound
pushf
aam
aaa
push
gs
xor
inc
test
out
lods
mov
movsb
jns
test
shrb
xor
out
into
ja
pop
pop
divl
sub
mov
test
xchg
cmp
inc
mov
pop
rorb
in
dec
pop
decb
fists
vpavgw
orb
mov
cmp
loope
mov
pop
sbb
adc
loop
mov
jae
push
cmp
aad
inc
push
mov
cmp
out
jne
lock
pop
add
hlt
jl
inc
lahf
pop
lcall
adc
mov
ret
lea
add
leave
inc
inc
lret
sbb
nop
sti
jmp
jecxz
int
mov
mov
cmpsb
lods
pop
push
jo
into
out
sub
mov
dec
aaa
fnstsw
sbb
addr16
out
dec
ds
das
stc
gs
pop
xor
sbbb
das
sub
jl
popf
call
pusha
xchg
inc
mov
pop
imul
dec
xchg
xchg
lcall
cmp
mov
fidivs
out
movl
xchg
scas
push
push
repz
ljmp
xchg
stos
add
stos
aam
cmc
inc
xor
pop
insl
or
jne
shl
sub
xor
iret
jbe
push
iret
mov
movsb
test
scas
push
jp
xlat
shlb
or
fst
js
out
adc
inc
push
push
das
imul
xchg
pop
pop
push
fs
aaa
test
rorl
mov
dec
in
lods
imul
mov
adc
cli
dec
dec
pop
push
cwtl
xchg
ret
xchg
outsl
je
ret
stos
iret
stos
adc
xchg
mov
cmp
jg
mov
mov
into
cmp
rol
adc
div
cs
into
icebp
inc
hlt
sub
test
jmp
lock
mov
bound
sarb
test
sub
stos
mov
call
sti
and
jno
mov
rcll
leave
sbb
add
jge
sub
or
popa
add
or
lret
xchg
dec
push
sbb
popa
or
push
push
int3
and
cmp
xor
xchg
fsubl
jo
xchg
push
jb
sub
mov
push
in
out
jmp
cmp
sub
push
push
and
aad
mov
mov
push
xchg
ja
in
add
popa
cld
sbb
insb
sbb
cmpsb
pop
pop
pop
and
decb
insl
mov
inc
sub
arpl
jb
fadds
sbb
test
dec
xchg
mov
pop
sub
dec
push
sarb
push
imul
or
fnstsw
int
push
in
gs
jnp
inc
cld
shl
popf
jbe
movsb
test
xchg
bound
std
dec
mov
outsb
mov
xor
insb
ljmp
bound
or
hlt
mov
mov
adc
pop
pop
cmpsb
repz
mov
std
adc
inc
xchg
out
cli
dec
sbb
lock
push
dec
jg
inc
sub
xchg
or
mov
xchg
or
adc
imul
or
mov
in
ja
adc
ljmp
jns
popa
loopne
pushf
ficoms
cmpsb
push
sbb
shrl
sbb
bnd
jmp
lods
popl
push
xor
mov
rcll
mov
pop
std
les
xchg
lock
dec
cltd
aaa
stc
push
jb
jle
std
sahf
aad
jg
scas
and
mulb
mov
scas
mov
push
fs
sub
shlb
or
bound
xor
mov
mov
add
add
mov
sbb
pushf
int
pop
jbe
mov
push
test
or
gs
push
enter
sbb
pop
es
fwait
xchg
ja
enter
push
dec
inc
clc
test
push
mov
aaa
xor
push
out
arpl
add
sub
outsl
mov
mov
arpl
inc
push
push
mov
dec
adc
mov
nop
fs
mov
ss
cmp
xchg
xchg
sub
rcrl
mov
and
out
lret
or
xchg
test
insb
adc
mov
xor
and
sub
jne
dec
decl
sarb
imul
mov
jmp
imul
dec
call
int3
dec
mov
lods
xchg
cmp
or
loop
lods
and
sbb
sub
cli
xchg
xchg
js
ret
mov
mov
jne
int3
mov
or
arpl
enter
xchg
adc
jae
mov
sub
xchg
ss
mov
xchg
dec
cmc
xchg
add
lea
sub
sub
out
cltd
xchg
clc
fcmovnbe
mov
dec
scas
lret
or
sbb
cli
shlb
jbe
fildll
mov
pop
xchg
or
adc
push
out
lock
mov
inc
sarl
in
daa
pop
mov
or
push
loopne
mov
sub
sub
sbb
out
jle
fimuls
push
jp
sbb
stos
mov
jno
jnp
dec
icebp
pop
dec
add
scas
xor
cmp
stos
xor
imul
not
cmp
mov
pop
cmc
int3
insb
leave
xor
or
mov
add
sahf
ljmp
push
nop
add
sbb
out
add
scas
xor
inc
shrl
and
push
xchg
xor
fs
sbbb
cmp
adc
movsb
out
ficoml
cli
ficomps
lds
loopne
mov
insb
mov
mov
mov
rorl
xor
cltd
rcrl
xor
push
loope
sarl
imul
sbb
push
pop
iret
and
cmp
push
outsl
jmp
pop
test
pushf
dec
inc
ret
icebp
test
adc
xor
inc
imul
sahf
sub
push
cmc
xor
ds
xchg
push
inc
add
push
mov
or
dec
cmp
cmp
sub
fcomps
add
rcr
xchg
or
mov
and
jge
mov
mov
mov
shrl
mov
add
icebp
popa
dec
jne
xchg
shrl
add
or
xor
notb
jbe
mov
shll
add
dec
mov
ja,pn
shrl
aad
adc
out
hlt
cmp
gs
sbb
sub
push
into
rcrl
popf
mov
mov
xor
sarl
enter
add
pop
mov
mov
mov
sarb
push
pusha
mov
inc
xorb
test
sbb
jl
mov
and
test
xor
mov
lcall
test
mov
cmp
inc
bound
mov
in
repz
jbe
dec
mov
xlat
adc
sbb
pop
mov
push
pusha
cmp
cli
call
cmpsl
sbb
arpl
ret
mov
insb
orl
popa
ffree
push
ds
mov
cmp
aaa
or
mov
mov
sub
cmpsb
push
aas
add
pop
mov
addr16
push
imul
js
xchg
push
stc
mov
mov
fdivp
pop
push
xchg
insl
pop
or
and
loope
ficompl
push
xor
aam
inc
shrl
push
int
adc
adc
dec
mov
fisubl
or
repnz
mov
dec
jl
outsb
ret
mov
pop
inc
xor
das
enter
or
in
ja
shl
or
add
adc
push
inc
xchg
lods
xchg
lahf
add
clc
lcall
inc
push
fstl
xor
test
loopne
mov
adcl
jns
hlt
outsl
add
inc
or
outsl
psrlq
adc
lret
push
dec
mov
imul
inc
mov
aaa
and
adc
ljmp
outsl
pushf
test
cmp
mov
loopne
mov
repz
pop
mov
add
sbb
out
in
outsb
stos
sbb
lret
push
and
cmc
repnz
dec
inc
push
dec
cltd
mov
add
dec
outsb
loopne
sbbl
hlt
cs
xadd
data16
in
xchg
jae
scas
je
xchg
jb
xor
xchg
jbe
xor
cmp
and
lret
fldlg2
push
in
stc
mov
into
sbb
inc
mov
add
jmp
xchg
adc
pop
arpl
mov
insl
nop
movaps
aaa
push
cmpsl
mov
mov
les
and
inc
sarl
or
mov
sub
movsb
inc
jge
inc
sub
xchg
mov
roll
xchg
fimuls
jge
jl
mov
fldl
out
cmp
add
push
test
mov
fucomip
insb
jae
push
or
jle
adc
data16
enter
mov
aas
imul
in
mov
mov
adc
outsb
roll
jb
push
lea
mov
cmp
push
dec
push
jp
out
push
adc
sarb
popf
push
pop
test
mov
adc
out
je
mov
adc
jbe
adc
xor
xor
lret
adc
out
repnz
stc
jo
sbb
lods
xor
xor
sbb
lahf
js
jmp
pop
jae
push
loopne
jl
add
push
lret
iret
cmpsl
fsubrs
push
stc
mov
cmpsb
xor
or
dec
in
test
std
imul
cmpsl
mov
mov
xchg
xchg
inc
call
and
dec
rcrl
out
push
daa
jge
sahf
mov
mov
lcall
or
push
or
jae
outsb
inc
xchg
push
adc
pusha
cltd
dec
mov
cli
or
retw
mov
push
inc
test
test
out
mov
rep
pop
fcomps
mov
or
xlat
jl
rcrl
mull
or
cltd
pop
and
xchg
sbb
sub
addr16
test
sbb
popa
out
dec
pop
das
jb
lea
and
mov
daa
testb
xchg
lret
sbb
mov
cmp
sub
insb
or
cmp
fs
dec
imul
cmc
cs
xchg
pop
les
hlt
mov
add
enter
sti
inc
jmp
shl
jg
movb
jns
push
push
adc
xor
push
cld
aaa
push
push
mov
je
out
int3
adc
test
aaa
jno
popf
ret
fcoms
pop
jne
adc
in
mov
mov
mov
push
xor
dec
push
aam
loope
cmpsl
cmp
in
addr16
aam
push
push
fcmove
jge
add
adc
repnz
adc
xchg
jns
inc
xor
adc
mov
mov
sub
add
jnp
fistl
bound
mov
xchg
les
mov
jae
std
ljmp
test
xchg
jb
out
and
sub
sub
dec
cmp
xchg
imul
inc
lods
mov
sti
pop
cmpsl
inc
out
push
dec
cmp
cmpl
movsl
insl
push
aad
cwtl
mov
pop
and
xlat
lahf
mov
out
cmp
stos
cmp
test
popf
iret
mov
insl
gs
aas
pop
xchg
mov
mov
mov
sbb
inc
sbb
test
inc
mov
fucomp
fcoml
imul
pop
fbstp
dec
lods
mov
nop
or
or
imul
arpl
setge
sub
mov
aas
das
push
lcall
test
or
adc
fldenv
loop
xchg
dec
fldt
adc
sbb
xchg
arpl
pop
ret
mov
std
out
mov
jbe
cld
cmp
mov
ds
jmp
add
dec
fs
mov
cltd
pop
fldz
aam
cmp
sbb
xor
xor
push
sub
sbb
or
lcall
xlat
in
pop
inc
ret
sub
test
adc
adc
inc
xchg
push
xchg
push
push
enter
inc
lods
push
push
mov
adc
arpl
ljmp
xor
popf
lea
lea
fs
pushf
push
pop
push
cs
inc
cmp
cmpsb
or
jnp
fcmove
or
mov
cmp
push
iret
mov
jno
or
test
or
outsl
sub
mov
xchg
or
jne
fdivl
fwait
pushf
ss
mov
adc
sub
fwait
aaa
mov
out
xor
jo
pop
xchg
xor
jmp
cwtl
dec
pop
js
into
inc
adcl
aam
in
pop
les
or
xor
sarl
mov
arpl
lea
aam
movsl
pop
testl
test
arpl
mov
mov
sub
in
xchg
jp
xchg
gs
inc
cmpsl
cli
mov
sbb
cltd
inc
int
and
mov
mov
inc
out
outsl
or
jb
imul
outsb
sbb
das
pop
mov
dec
adc
pushf
mov
in
mov
jbe
and
xchg
inc
jl
cmp
push
pop
mov
jle
cs
push
popf
icebp
jge
mov
sub
sbb
inc
jne
push
dec
out
push
icebp
arpl
fucomip
lods
pop
mov
inc
sbb
cmpsl
or
popa
sub
or
lret
jne
in
pop
mov
mov
adc
mov
stos
mov
adc
ds
fcomps
sub
ficoml
out
test
pop
les
cmp
repz
daa
movsb
lea
fistpl
sub
loopne
add
adc
inc
dec
inc
add
xchg
mov
xchg
aam
fbld
fcoms
out
push
adc
jbe
mov
leave
mov
inc
adc
cmp
adc
into
jl
cmpsb
stc
cmpsl
jo
xor
mov
outsl
mov
mov
jbe
mov
cmpsb
mov
sub
xor
or
out
sahf
add
dec
addr16
movsl
daa
mov
cmpb
call
add
cmp
andb
mov
or
sti
rol
loope
adc
in
push
jecxz
cli
xchg
xchg
sbb
imul
mov
add
sub
fidivl
adc
ds
in
sub
test
fs
lods
mov
mov
and
lds
sarb
not
and
lret
jmp
xchg
ret
adc
push
lret
add
jnp
push
add
cmp
or
cld
icebp
fnstenv
mov
push
xchg
xorb
xchg
mov
or
stc
sub
call
and
aam
sub
mov
pop
das
testb
aam
and
push
cmp
jns
scas
clc
popf
lahf
insb
scas
cmpsl
into
jns
loope,pn
loope
xchg
cmp
fcoms
out
movsl
sbb
iret
adc
mov
mov
mov
das
incb
sub
cmc
dec
and
aad
inc
add
fstl
and
push
cli
dec
test
cmp
jno
stos
in
and
adc
aad
pop
dec
fcmove
and
push
push
out
jae
pushf
stos
push
iret
and
mov
jmp
push
inc
push
xchg
sub
push
mov
lds
push
adc
push
inc
lea
lock
dec
jl
cmp
leave
mov
rol
aaa
pop
or
call
pushf
sub
xchg
inc
sti
cmp
pop
int3
lea
sub
sbb
adc
jp
daa
pop
cmp
pop
mov
cmc
push
push
dec
mov
das
dec
push
sahf
push
pop
add
cmp
in
xchg
lock
jecxz
test
xchg
cli
dec
divl
dec
int
xchg
enter
xor
stc
jne
push
sbb
dec
sbb
js
fistl
mov
scas
fcmovnb
mov
in
push
push
call
in
ds
xchg
mov
sub
xor
int
add
ret
call
sbb
jp
jle
jb
daa
inc
data16
aas
mov
dec
jg
fwait
sarb
fsub
inc
fldt
xor
sub
and
int3
cmpsb
mov
out
sbb
dec
jge
lret
push
sahf
and
imul
add
aad
mov
mov
cmp
shrb
rcll
outsb
xor
add
ret
jg
push
lret
jp
push
or
pop
jnp
jge
outsb
out
ds
jmp
mov
roll
xor
cmp
push
subl
ds
nop
mov
adc
xorb
add
push
call
pop
add
pop
cmc
fstpt
sbb
mov
mov
fsts
std
rcl
repz
adc
lcall
std
dec
dec
movsl
sahf
pop
mov
lock
scas
aam
sub
daa
jb
inc
shlb
inc
mov
outsb
push
inc
lds
stc
fstps
or
cld
je
gs
stc
out
inc
push
dec
mov
fidivl
data16
movsb
fwait
or
add
add
cwtl
xor
push
int3
cmp
roll
in
sub
jmp
and
fistl
mov
xchg
test
sbb
xor
push
or
test
ret
pop
lock
dec
jg
mov
fstl
sub
sbb
sbb
decl
mov
enter
inc
pop
das
xchg
clc
push
cmp
mov
mov
cli
jg
xchg
fisttps
js
sbb
add
ficomps
sarl
int3
fsubrs
pop
adc
icebp
add
outsl
dec
les
int3
pop
stc
cmp
sbb
xchg
rol
arpl
mov
les
cmp
push
inc
into
fs
insl
adc
ljmp
cmp
aad
xchg
loope
cwtl
loopne
std
fcom
imul
mov
sub
addr16
out
test
jg
or
ror
sbb
pop
pop
add
sub
mul
mov
gs
sbb
mov
fldt
addl
imul
jecxz
sub
scas
jl
xchg
in
and
add
pop
lret
sbb
cmpsl
xor
mov
stos
xor
push
loope
idiv
lds
addr16
pop
xlat
call
mov
in
inc
cli
cmp
pop
dec
inc
das
into
sbb
fcompl
rorl
push
xchg
push
cmp
cmp
mov
xchg
dec
sub
cmpsb
xor
in
mov
popa
aaa
xchg
je
es
xor
adc
mov
movsl
int
mov
jle
lahf
xchg
jnp
lea
jl
adc
cmp
push
inc
insb
daa
pop
out
mov
pop
sbb
stos
pusha
xchg
in
pop
addr16
jl
jp
loop
lret
and
shrb
pop
aad
cld
or
and
mov
daa
mov
out
std
cmpsl
mov
lods
std
hlt
test
adcl
adc
adc
out
mov
ljmp
xor
rcr
cmp
pusha
ret
lock
test
lods
ret
std
mov
int3
jp
add
sub
adc
pop
push
rclb
mov
jae
xchg
nop
and
ja
sbb
sbb
std
in
adc
into
push
inc
in
adc
add
shrb
cld
into
incl
stos
icebp
pusha
mov
and
push
sub
jb
sbb
das
adc
into
dec
dec
mov
lds
mov
push
mov
push
fwait
sarl
in
cmpb
lods
jmp
cmpsl
sub
dec
or
inc
inc
adc
scas
loop
sahf
fcoms
fs
push
bound
clc
mov
rolb
mov
mov
aam
sub
gs
pop
int
pop
inc
mov
repz
mov
icebp
std
jg
jp
sbb
test
jge
out
or
xor
cmpsl
enter
cwtl
xchg
xor
pop
xchg
lods
mov
mov
data16
test
sbb
jno
push
lcall
mov
call
bound
int
popf
repnz
pop
lds
and
mov
or
or
fiadds
stc
cmp
aad
outsl
or
idivb
cmc
adcl
push
jmp
fsubl
cltd
add
cmp
test
or
jmp
inc
mov
xor
shll
mov
push
or
ret
add
divb
mov
cmp
nop
decb
ljmp
nop
aas
mov
popa
mov
cmp
icebp
dec
inc
test
mov
mov
jecxz
data16
imul
mov
pop
push
fsubl
pop
and
sub
push
shl
push
das
jne
int
jle
stos
in
add
mov
in
testb
movsb
and
scas
pop
lea
pop
into
int
sbb
out
jne
push
or
or
mov
clc
setp
inc
imul
outsl
jmp
xor
sar
sub
push
pop
jge
sti
fcmovu
xchg
sarl
es
pmaxsw
jae
cmp
subl
lahf
and
mov
pop
xchg
or
and
dec
aas
lahf
mov
adc
dec
or
sub
inc
sbb
sbb
stos
mov
sub
stos
popa
outsb
jo
and
jg
push
incb
jl
mov
out
mov
pushf
cmpsb
movsb
inc
mov
pop
mov
add
pushf
mov
mov
mov
loope
pop
inc
mov
js
add
das
std
es
mov
ss
push
pop
and
cmp
sbb
push
jne
dec
push
scas
ret
xchg
push
mov
out
and
stos
fcompl
push
adc
jmp
in
jg
jg
cld
mov
popf
shrl
dec
cs
das
ret
mov
cmc
and
dec
mov
sbb
xor
cmpl
fidivs
ret
hlt
insl
cmp
bound
inc
push
loope
and
inc
mov
inc
fsubrs
std
pop
push
adc
push
cmp
leave
sbb
test
test
jmp
and
rcrb
fidivs
and
dec
call
lods
xchg
test
sbb
mov
xchg
or
jb
or
xor
es
fldt
addr16
imul
or
or
mov
inc
mov
data16
scas
push
stos
popa
push
stos
fstpl
pop
sbb
ret
movsb
xchg
sbb
fcomp
mov
scas
and
gs
inc
shlb
or
sub
sti
add
call
divl
xor
pop
push
int3
jmp
inc
shlb
mov
pop
loopne
arpl
hlt
push
add
cmc
roll
jmp
clc
fs
push
cmpsb
addr16
xor
ds
dec
mov
mov
jns
jbe
dec
cmp
jmp
mov
push
mov
adc
mov
jp
inc
cmp
das
jecxz
and
inc
xchg
and
pop
lret
into
data16
xlat
sti
hlt
int3
ljmp
sbb
xchg
pop
pop
mov
idivb
cmp
mov
dec
in
or
xor
push
pop
daa
sub
js
mov
bound
inc
fisubrs
mov
sar
adc
fcmovnu
xchg
arpl
pop
sbb
out
adc
fsubrs
add
or
aad
rclb
dec
mov
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
jmp
mov
test
jae
imul
add
dec
imul
popf
jae
aas
ja
imul
mov
ja
imul
mov
dec
imul
mov
iret
dec
and
sbb
push
adc
or
or
movsb
pop
adc
jge
dec
xchg
sbb
sbb
or
jle
popf
jae
aas
ja
imul
inc
vmwrite
in
sub
jne
mov
jl
jge
or
in
test
push
mov
add
in
jle
gs
jne
pop
arpl
stc
repnz
sub
je
rorb
mov
in
xor
push
xor
movsl
xchg
push
loope
jl
jge
fbld
mov
nop
aaa
inc
vmwrite
out
test
mov
ja
mov
je
popf
jae
aas
xchg
dec
push
in
push
je
jae
test
lret
dec
imul
add
jae
das
ja
imul
clc
popf
jae
aas
ja
imul
outsb
clc
jne
popf
jae
aas
jb
push
je
int
test
jae
imul
mov
addr16
imul
test
ja
imul
mov
ja
imul
rcrb
inc
imul
popf
jae
aas
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
int
or
aas
ja
imul
mov
ja
insl
or
cmp
test
ja
imul
xchg
out
add
pop
ja
imul
dec
xchg
jae
gs
imul
mov
ja
imul
pop
popf
jae
aas
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
imul
mov
ja
push
mov
mov
aad
sbb
inc
repz
insb
sub
fmuls
jns
xor
lds
mov
pusha
mov
mov
ja
roll
cmpsb
aas
push
ljmp
test
xor
mov
mov
jns
pop
push
out
data16
dec
inc
mov
dec
mov
fs
xor
jae
pop
inc
out
fistl
or
pop
ss
iret
fmuls
jb
push
sarl
stos
rolb
mov
add
jns
sti
loop
out
cmpl
xchg
fildll
add
mov
dec
jb
xlat
sbbl
push
addl
push
inc
pop
inc
setb
or
xchg
mov
ret
jle
jmp
cmp
fistpl
pop
and
lds
sub
loopne
lahf
outsl
push
popa
enter
xchg
jecxz
lahf
test
scas
gs
adc
and
dec
cmp
mov
icebp
and
fisubs
mov
cmpsl
scas
push
enter
or
dec
push
xchg
fwait
es
mov
mov
adc
mov
cmp
cmp
dec
cmp
mov
sub
enter
add
filds
and
nop
jbe
and
fcoml
lods
xor
loope
cmp
lock
pop
enter
and
mov
iret
cmp
cli
push
sbb
jmp
cmp
notb
shll
xor
pop
aas
scas
dec
jecxz
sbb
add
jmp
cmc
push
rcrb
adc
xor
or
cld
insb
shll
inc
rcll
popf
es
mov
cmp
jmp
arpl
gs
enter
mov
inc
push
push
subps
mov
add
adc
call
add
adc
add
push
mov
loope
sbb
xor
pop
sahf
sbb
mov
jb
push
cmpl
dec
and
scas
leave
or
mov
xor
push
and
or
imul
lods
fldt
scas
test
xorb
out
cs
mov
xlat
mov
jnp
clc
cmp
in
cli
lea
out
push
enter
in
aam
out
andb
cmp
xchg
or
xor
sbb
adc
or
cmp
and
out
or
mov
dec
arpl
add
fpatan
mov
lds
cmpsb
adc
dec
fidivrs
aas
insb
and
pop
mov
sar
or
add
addr16
stc
jno
xchg
loop
sbb
mov
add
pop
or
stos
lcall
stos
cmpl
sarl
inc
adcl
rcrl
movsl
popa
das
ja
lds
loope
sbb
shll
bound
xor
addl
fsubrl
or
and
push
xor
xchg
mov
sub
cmp
mov
inc
enter
dec
cltd
daa
call
dec
aaa
roll
lret
in
mov
imul
inc
mov
cmpb
cmp
rorl
lods
xor
xor
add
es
pushf
sbb
or
jno
or
xor
loop
je
aas
jb
fsubp
gs
push
xchg
lahf
scas
inc
adc
add
mov
ljmp
add
inc
es
jne
sub
sbb
mov
push
pop
jmp
or
out
repnz
and
shrb
xor
jle
mov
mov
jmp
add
push
sub
std
fsubrl
mov
jp
test
jg
and
scas
adc
stos
js
es
sub
repnz
adc
lcall
dec
lods
loopne
jno
fcomi
cmp
insb
loop
mov
sbb
sbb
out
cli
push
push
inc
or
enter
jg
fisubrl
add
push
xor
aas
ljmp
fldcw
dec
push
subb
xchg
sub
adc
fdivr
nop
mov
enter
js
xchg
ja
movsl
pop
add
fwait
popa
jge
inc
push
addr16
jp
xchg
in
outsb
cli
push
sub
mov
fs
pop
test
int
xchg
sbb
fsts
out
jb
in
push
pop
icebp
add
jecxz
mov
ret
xchg
shrb
sbb
xchg
leave
out
pop
int3
cmp
xor
xlat
add
outsb
pusha
mov
mov
in
fidivs
xor
cli
hlt
cmp
sarb
mov
out
mov
cmpsb
loop
mov
mov
mov
inc
cmp
roll
xchg
fistl
aas
in
mov
add
cld
test
je
sbb
jl
push
xchg
popf
or
jl
jnp
pop
stos
fs
mov
adc
jo
adcl
outsl
sbb
cmp
mov
cltd
xchg
test
or
hlt
adc
jne
mov
cmp
iret
negb
nop
out
xchg
jl
mov
movl
repz
addr16
aad
arpl
std
jle
andl
sbbl
icebp
cmp
dec
sbb
imul
fwait
push
or
dec
mov
pop
add
imul
lahf
fildll
add
sub
jg
int3
shrl
cmp
cmc
fs
stc
xlat
xchg
and
push
mov
inc
mov
pop
push
mov
mov
push
sbb
aam
cmp
stc
add
imul
xor
popf
or
xor
jg
cltd
inc
movsl
mov
jo
in
sbb
icebp
jne
insl
push
push
or
lods
sbb
cmp
bound
arpl
mov
cmp
pushf
mov
gs
js
jl
push
into
enter
shlb
cmp
ljmp
loope
push
xor
push
je
mov
lret
popf
ja
and
dec
xchg
packuswb
pusha
xchg
and
pop
or
mov
adc
cmp
pop
adc
jle
or
mov
shlb
jno
mov
push
add
enter
push
decl
inc
sub
fstpl
scas
cmpsl
bound
and
test
das
sub
xor
sahf
mov
mov
inc
scas
mov
jae
or
fisubl
jo
xlat
push
rcrl
imul
cld
jnp
adc
arpl
jb
loop
mov
pop
loope
dec
push
cmp
dec
xchg
js
dec
cmp
cli
sub
outsl
cmpsl
xor
sbb
jle
cmp
scas
test
nop
jp
movsb
icebp
aam
orl
fs
dec
ret
fistpl
ljmp
sbb
ret
fsubrs
mov
ret
xchg
jne
adc
mov
mov
xor
sbbb
mov
xchg
mov
mov
dec
movsl
jge
xchg
js
mov
bound
and
ljmp
subl
mov
in
mov
fnstsw
lret
dec
dec
lods
stc
shrl
xor
add
pushf
pushf
xchg
xchg
std
lds
mov
inc
cmp
cmp
sbb
xor
adc
push
inc
cmpsb
cmpsb
pop
and
mov
mov
fsubp
xchg
sub
aaa
inc
lods
push
jnp
xchg
and
imul
in
adcl
aam
lahf
rcr
or
dec
outsb
xor
pop
dec
jl
out
jbe
ds
fildll
sbbl
jl
imul
imul
sbb
scas
into
mov
ljmp
mov
stos
and
mov
cmp
ljmp
xor
aas
inc
or
or
push
fcomps
addb
scas
shll
mov
dec
pop
push
mov
mov
mov
in
cmpsb
xor
push
mov
aam
mov
cld
inc
mov
pop
jbe
xchg
shrl
and
pushf
lds
sub
ret
add
or
mov
sub
sub
push
or
cli
sub
enter
das
test
xor
es
outsl
movsl
ss
pushf
ret
ds
mov
push
sbb
xchg
xchg
pop
push
cmp
jno
push
mov
rorb
cld
fistps
mov
push
test
stos
mov
jns
push
addl
pop
jge
mov
inc
dec
or
mov
insb
fisttps
loope
lcall
sbb
xchg
mov
fmull
leave
jb
mov
mov
lods
add
pop
push
scas
stc
pop
ja
imul
cmp
xor
in
push
mov
hlt
xchg
testb
or
imul
fcmovnbe
fistps
clc
inc
scas
jle
push
dec
pop
mov
scas
rol
out
mov
pop
loop
ja
sub
sar
rol
int
pop
rolb
arpl
int3
mov
pop
frstor
push
sbbb
xor
adc
push
adc
sub
movsl
lods
mov
pop
pop
dec
adc
jmp
loope
mov
mov
mov
enter
dec
adc
lret
arpl
lahf
orb
loope
xor
scas
push
fwait
pop
mov
jl
dec
call
and
ficoml
cwtl
cmc
jns
out
and
stc
adc
pop
ret
inc
fs
into
push
lods
enter
add
mov
dec
out
xchg
sbb
scas
xchg
xchg
ds
sbbl
mov
cwtl
cmpsb
in
xor
es
sub
test
xchg
push
rclb
push
adc
pop
es
jb
iret
push
out
mov
aad
out
lret
inc
jae
xor
nop
paddw
cmp
mov
jbe
dec
int
into
push
sarl
enter
das
push
sub
out
or
adc
sub
xchg
pop
sbb
lds
pop
mov
rolb
inc
xchg
popl
add
sub
stos
lea
mov
loope
add
shlb
or
in
sbb
ret
clc
mov
arpl
or
movsb
hlt
sbbb
stos
mov
hlt
movsl
xchg
sub
lock
adc
jp
arpl
inc
sbb
sub
pop
std
dec
stos
sti
loopne
dec
pop
xchg
mov
jecxz
mov
pop
inc
lods
pop
in
les
ss
jnp
fstps
add
out
test
shll
outsb
in
sub
lea
push
cmpsb
mov
stos
lods
nop
jp
pushf
outsb
ficoms
or
lock
loop
dec
jge
sbb
shrd
xchg
xor
mov
fscale
cld
pop
addr16
in
jne
outsb
or
ret
and
frstor
adc
inc
js
adc
shll
xor
pop
fnstenv
into
stos
stos
and
and
je
sub
ret
xor
mov
filds
pushf
shlb
xchg
test
inc
loopne
mov
les
pusha
lret
xchg
mov
or
out
dec
hlt
mov
movsb
loop
out
add
adc
mov
jle
in
xchg
jnp
gs
mov
mov
stc
jmp
jl
jp
mov
es
insl
push
in
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
