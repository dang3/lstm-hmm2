jbe
ss
imull
or
outsb
mov
imul
aas
add
out
mov
jmp
enter
daa
fs
hlt
js,pn
inc
mov
into
push
idivl
mov
imul
lret
add
popf
fsubrs
outsl
mov
xchg
push
pop
aad
cmp
sub
pop
or
insb
imul
iret
add
xchg
cmpb
jecxz
cmc
cmpsb
dec
pop
jno
inc
sub
dec
sbb
test
xor
jle
lret
pop
mov
jecxz
push
mov
dec
fldl
pop
or
or
mov
adc
jle
xchg
sub
mov
in
fmuls
jnp
dec
call
mov
mov
mov
pop
jns
push
add
push
xor
cmpsb
inc
and
adc
push
sarb
xchg
cltd
dec
lea
ret
out
fisubl
xchg
mov
sbb
adc
inc
push
push
je
loope
xchg
and
rcr
fldenv
add
lahf
dec
dec
lds
mov
cmp
clc
mov
negl
cmp
lret
dec
add
pusha
dec
ret
aas
cmc
daa
cmpsl
out
sbb
mov
addr16
dec
aas
fldenv
out
mov
pop
sahf
adc
mov
pusha
lock
or
jg
inc
cltd
and
enter
jo
adc
mov
cmp
push
mov
popa
mov
mov
mov
arpl
mov
mov
sbb
xchg
add
adc
ficompl
xchg
xor
sub
sub
cmp
push
sub
jnp
mov
mov
loop
out
subl
dec
xchg
mov
mov
pop
lret
lods
pop
shrl
xchg
mov
stc
add
shr
dec
ss
adc
in
orl
loope
mov
bound
inc
jns
loopne
mov
push
scas
mov
jne
inc
aam
push
fidivs
pop
xor
mov
scas
int
imul
cwtl
test
into
xchg
in
aas
lcall
mov
mov
and
cmp
cmp
cmpsb
bound
or
mov
mov
rorl
movsl
mov
cmc
adc
js
jae
pop
sarl
mov
lea
mov
mov
add
xchg
aam
hlt
or
mov
mov
cmp
pop
dec
out
jae
adc
pop
mov
shll
mov
testb
and
js,pt
and
aaa
mov
jl
fisttps
nop
sbb
mov
aam
adc
push
dec
out
test
dec
insl
cmp
pop
scas
adc
ljmp
jno
lods
xchg
adc
filds
mov
repz
mov
and
jo
and
cmp
in
sbb
sbb
lock
lret
in
push
dec
cwtl
push
test
inc
pusha
insb
bound
pushf
mov
xchg
adc
rol
dec
mov
insl
or
movsb
mov
aas
inc
fdivs
xor
xor
sahf
arpl
sbb
cs
mov
push
or
sarb
or
and
adc
cmp
pop
adc
fadds
out
dec
shlb
je
insb
lahf
mov
and
add
outsl
insl
sub
cmp
lock
adc
push
cwtl
add
sti
xlat
call
outsb
movsb
ds
negl
pop
out
mov
inc
jns
xor
ficomps
cs
xor
xchg
sarl
cmp
test
or
mulb
adcb
in
loop
mov
or
adcb
scas
adc
test
hlt
fcompl
in
pop
sar
sub
dec
lock
in
lock
xor
dec
cwtl
nop
cmc
sub
cld
pop
xchg
outsl
andl
mov
cmp
sub
add
xchg
cmp
dec
or
in
int3
andl
sub
sbb
adc
out
adc
jmp
sbb
jbe
out
fnsave
jne
es
push
ret
sbb
and
lret
add
mov
scas
and
xor
inc
inc
nop
inc
add
out
push
inc
ficomps
push
test
push
xchg
sahf
aam
les
out
rcll
lea
call
jge
add
xor
pop
iret
pop
push
lret
xchg
out
cmp
sahf
into
sub
inc
arpl
push
shl
mov
sbb
stos
cltd
and
incb
insl
dec
loope
rclb
daa
mov
and
in
je
cltd
fsubr
addr16
pop
pop
jmp
popf
adc
mulb
cmpsb
jae
sub
faddl
pop
mov
sub
and
shld
stos
add
stos
xchg
scas
and
insl
lock
jge
push
mov
mov
dec
mov
jnp
push
fwait
cmc
or
div
cmpsl
ljmp
sub
gs
and
xchg
pushf
or
test
pop
xchg
fsubs
and
inc
sub
mov
out
add
stc
lret
mov
sahf
cld
imulb
xor
xor
cmp
cmp
push
jb
insl
enter
jno
xor
adc
in
imul
adc
iret
jns
in
mov
cmpsb
ljmp
mov
jne
test
or
testb
imulb
loop
adc
scas
rolb
imul
xchg
xlat
ljmp
loopne
or
ljmp
xlat
xchg
and
leave
andl
jb
fcomi
sub
inc
das
mull
jge
into
ds
fidivrl
mov
clc
leave
and
jmp
fidivs
test
push
ja
imul
mov
fwait
xor
xor
jle
xchg
dec
ds
inc
push
imul
pop
dec
inc
pop
jb
cmp
jbe
jmp
xor
add
es
push
imul
pop
imul
das
lahf
xor
cli
push
aas
lds
cld
mov
jae
popl
andl
stos
paddd
mov
sub
shlb
and
mov
outsl
lock
js
addr16
dec
mov
in
push
mov
cltd
xor
fistpl
or
pusha
loop
push
cmpsl
pop
outsb
dec
xor
pop
inc
leave
push
into
in
fcomps
add
popa
movsl
movsl
mov
out
stos
xchg
jp
shrb
ss
incl
pop
mov
sub
jecxz
push
jno
and
je
test
pop
dec
icebp
mov
cmp
shrb
cmp
xchg
shlb
push
iret
push
sbbb
sarl
xchg
add
jmp
cmp
leave
adc
lcall
jmp
pop
arpl
fbld
cli
jne
inc
clc
sbb
mov
call
or
shlb
jnp
jmp
xchg
lods
aaa
add
adc
cwtl
sub
loope
xchg
xor
mov
test
sub
lds
jno
test
outsl
cmp
mov
push
rclb
jae
mov
fsubrs
test
push
mov
dec
jns
jb
push
ret
jp
lret
or
push
and
divl
aam
adc
dec
sub
mov
mov
cmpsb
cmc
push
mov
pop
test
call
insb
scas
out
sbb
enter
fs
sbb
icebp
in
sbb
aas
ja
pop
xchg
fmull
dec
movsl
aam
gs
repz
push
sub
and
ret
inc
mov
mov
fcmove
cwtl
dec
daa
xchg
stc
jmp
iret
jbe
jp
js
pop
jmp
xlat
cmp
outsb
inc
mov
add
out
xchg
in
xor
xor
add
das
push
and
lahf
dec
jo
std
or
int3
int
imul
loop
push
stos
aam
shrl
mov
lods
mov
cld
mov
gs
insl
jno
gs
push
push
fs
cmpsl
andl
add
sbb
inc
jecxz
adc
mov
pop
cmc
jnp
imul
loope
push
sbb
sbb
das
fdivs
call
in
loop
movsb
fistps
adc
shlb
mov
mov
or
int3
sbb
mov
sbb
mul
adc
gs
xchg
shlb
imul
sub
popf
sub
pushf
fmuls
xor
adc
daa
repz
icebp
es
push
int3
aas
aam
insl
pop
mov
call
int
and
jno
lea
out
jo
mov
pop
dec
xchg
sub
jnp
add
lret
rcll
xchg
inc
or
mov
xor
movsb
mov
dec
dec
push
popa
mov
scas
jecxz
lret
add
mov
je
arpl
addb
push
jnp
and
repnz
cmp
into
test
rcrl
insl
sbbb
mov
xchg
pop
adc
data16
popf
loop
xchg
jecxz
push
cmpl
outsl
cmpsl
dec
mov
push
bound
loope
cmp
enter
cltd
int
xorb
mov
xlat
pop
jbe
add
lahf
xchg
ljmp
xlat
fldt
addb
inc
pusha
je
stos
push
or
inc
sub
fidivrl
test
sub
mov
mov
mov
or
cmp
imul
mov
loope
add
pop
icebp
mov
or
test
ret
xchg
loope
adc
cwtl
xchg
out
fldl
pop
pop
xor
dec
adc
icebp
pushf
rolb
push
push
cmc
jo
rol
adc
mov
cmp
icebp
xor
mov
aam
ret
push
dec
cmpsl
scas
add
jl
pop
popf
lods
in
or
pop
mov
jmp
xchg
loop
insb
stos
lock
add
fstps
sub
loop
pop
mov
daa
int
and
xchg
imul
xchg
lods
fs
jg
mov
dec
ljmp
and
fwait
dec
xchg
mov
in
int
dec
and
dec
std
je
int
adc
sti
xchg
inc
mov
xor
sub
adc
stc
enter
pop
adcb
pop
sub
and
add
addr16
loope
lret
int
dec
orb
inc
out
das
jno
xorb
mov
lock
and
mov
dec
or
lahf
jne
repnz
loopne
es
mov
push
jns
pop
mov
xchg
fs
call
stc
xorl
inc
add
cmc
mov
ds
jae
orl
push
loopne
popf
pop
dec
inc
out
jnp
les
repz
call
add
fistpl
jae
cmp
imulb
dec
mov
adc
in
lods
xchg
jne
xor
stos
sbb
stos
aas
mov
add
lods
xchg
insb
sbb
mov
adc
test
mov
push
pop
and
fcmovne
cmc
mov
fnstcw
dec
orb
cmc
lahf
jl
push
xchg
adc
sbb
rolb
add
cmpsl
sub
mov
cld
inc
pop
cmp
sbbb
pop
inc
cwtl
shr
mov
jae
xor
jl
iret
add
mov
xlat
sub
ja
push
imul
xchg
mov
xchg
mov
filds
sbb
jns
xchg
lahf
les
mov
push
mov
mov
movsb
mov
daa
dec
popf
mov
in
stos
outsl
dec
es
fwait
jns
fwait
std
xor
lret
jl
inc
inc
fst
cmpl
in
movsb
push
cmc
xor
pop
mov
jmp
xchg
lret
mov
push
xchg
lret
sub
adc
push
ja
loope
sub
pop
sub
pop
rclb
sub
das
mov
hlt
mov
movsl
lahf
out
lea
sbb
mov
or
ficoms
add
adc
sahf
fimull
mov
shll
lock
mov
jb
dec
xor
jmp
adc
xchg
fidivrs
jne
cld
dec
test
outsl
in
call
jl
test
dec
mov
lret
je
push
mov
or
cmp
bound
push
xor
cli
xchg
test
dec
mov
mov
out
xchg
dec
sti
into
leave
das
and
dec
lods
imul
outsb
push
push
rcl
nop
subps
push
in
fstpl
dec
jb
fists
mov
js
pop
sub
mov
and
and
xchg
xor
adc
std
xor
mov
gs
mov
rcrb
ja
xorl
gs
clc
gs
push
sbbb
add
int
rclb
jp
and
in
sbb
mov
lea
imul
pop
lods
mov
push
out
adc
int3
out
dec
or
and
mov
pusha
or
xchg
jnp
adc
mov
aaa
pop
lahf
mov
dec
sbb
push
lahf
jl
jl
xor
sbb
mov
subl
cwtl
jns
xor
mov
sbbl
int
and
mov
shll
jae
test
xchg
or
push
push
repz
pop
cmp
and
fwait
enter
pop
pop
mov
sbb
lods
jle
sbb
jbe
sub
mov
stc
sti
aam
inc
lock
movsb
loopne
pop
clc
mov
pop
pop
int3
shr
stos
cmpsl
push
cltd
push
cltd
add
adc
ja
inc
sarb
fisubrs
mov
pop
aam
fisubs
lods
add
inc
jp
cmp
dec
push
inc
repnz
inc
add
or
adc
jne
movsb
cltd
std
xor
mov
sbb
int
and
shrl
cmp
gs
adc
or
push
push
inc
lods
jmp
rol
jne
dec
adc
or
mov
aam
pop
pusha
dec
loop
xchg
test
movsb
inc
ret
pop
mov
xchg
xor
mov
inc
pop
xchg
jmp
lret
adc
xor
cmpsl
insl
clc
pop
lret
mov
bound
mov
push
pop
pop
aam
or
imul
and
xlat
dec
cltd
lods
and
rcll
xchg
xchg
in
addr16
in
xchg
xchg
and
fists
lret
scas
inc
push
xor
mov
lret
pop
scas
in
or
mov
repnz
cwtl
mov
mov
std
xchg
pop
les
cmp
in
sbb
and
mov
sbb
movsl
push
fmuls
pop
sbb
push
push
shrb
push
dec
sbb
and
sbb
xor
cli
cmpsb
xchg
movsb
xchg
out
lahf
mov
push
xor
gs
lahf
mov
push
lret
movsl
add
addl
or
test
mov
lret
cli
lret
je
inc
out
xchg
bound
mov
lahf
mov
outsl
dec
pop
cwtl
ja
into
pusha
mov
push
js
xchg
sbb
scas
leave
mov
ficompl
pop
in
mov
aas
push
jb
mov
adc
pop
or
mov
dec
ja
inc
mov
in
lock
sub
jns
and
aad
stos
cmp
cmp
fwait
loopne
or
jecxz
ret
imull
out
sub
hlt
mov
sbb
xchg
pop
out
je
add
mov
jns
lods
xor
les
ficoml
iret
xchg
cli
cli
adc
cmp
mov
or
jecxz,pt
test
or
push
inc
inc
cmpsl
leave
pop
push
xor
fldcw
and
movsl
xchg
les
sbb
scas
hlt
lret
or
and
add
loope
fisubrl
dec
sbb
out
jno
mov
aad
jne
push
push
rcr
andl
out
repz
shlb
scas
push
or
iret
test
cmp
push
jbe
cmp
mov
shl
jno
lods
ja
mov
outsb
add
adc
daa
or
outsb
inc
mov
xor
cltd
dec
add
add
cmp
fldenv
scas
ds
in
in
or
fcmovb
incb
fs
popa
rol
std
imul
jno
push
sbb
ficoml
push
outsl
fimuls
pushf
pop
pop
sbb
push
mov
push
cltd
adc
mov
push
iret
xchg
pop
jp
push
cs
xor
add
mov
jl
mov
mov
cmp
sbb
xor
xor
pop
shrb
sbb
jno
lret
xor
ret
push
inc
daa
adc
adc
push
xchg
call
mov
push
adc
cmp
fbld
adc
dec
pop
loop
cmp
ja
outsb
sub
pushf
push
and
and
dec
inc
jle
call
cmp
or
sbb
jecxz
xor
cltd
loope
in
iret
mov
lods
xchg
xor
cmpsl
incl
pusha
dec
pop
std
inc
imul
mov
xchg
cmp
ror
cltd
ds
sub
into
std
loopne
mov
jmp
std
sahf
jbe
and
scas
mov
sbb
fmuls
shrb
mov
lcall
hlt
ds
or
lahf
push
inc
dec
xor
pusha
pushw
daa
mov
outsb
out
and
inc
jle
dec
xchg
mov
sub
das
mov
or
mov
fidivs
fwait
test
stc
cmpsl
cmpsl
add
mov
outsb
leave
mov
inc
enterw
nop
gs
lea
push
cs
xor
adc
frstor
stc
or
xchg
jno
xor
scas
pusha
mov
adc
inc
inc
outsb
pop
push
cmpsl
jp
mov
xchg
outsl
ret
xorb
push
xchg
cli
xor
sbb
add
into
dec
gs
in
xchg
ja
push
loope
pusha
movsl
xchg
jecxz
mov
std
fnsave
fmuls
mov
pop
add
mov
jne
sbb
out
xchg
dec
lahf
push
ret
lea
jl
mov
movsl
xlat
sbb
push
jge
adc
mov
or
notl
mov
jae
pusha
test
loop
out
pop
mov
add
mov
fimull
sbb
mov
inc
jle
in
mov
pop
xchg
test
bound
pushl
clc
mov
aad
mov
cs
jmp
or
mov
outsb
push
push
sbb
iret
fwait
xor
add
fsub
xor
add
filds
inc
adc
fisubs
add
aaa
xchg
push
inc
mov
int
sbb
dec
lret
push
loopne
or
xor
sbb
out
mov
pop
repnz
leave
push
push
fdivl
cli
stc
jns
adc
jb
inc
pop
jle
lock
inc
and
sub
inc
mov
hlt
lock
out
cld
fs
mov
mov
sbb
into
scas
lods
ret
aad
sbb
into
dec
ds
decb
fdivrp
stos
or
add
andl
rolb
loop
cmp
mov
loop
ret
ja
push
iret
test
inc
shrb
adc
lods
jb
adc
add
lock
add
lcall
xadd
cs
push
mov
jg
sahf
int
dec
cmp
and
into
call
decl
mov
add
mov
mov
sarl
ljmp
push
xchg
cmpsl
int
pop
pop
mov
cmp
and
add
mov
dec
pusha
push
addb
dec
pushf
scas
or
cmp
scas
pop
std
and
aas
bound
and
jno
int
shr
push
xchg
insl
pushl
and
xchg
pop
sbb
orl
xor
stos
mov
and
fs
xchg
loopne
ja,pt
mov
and
mov
push
repnz
xchg
sub
mov
movsl
cs
jmp
xchg
fistpll
mov
jle
cmp
rcll
add
adc
xchg
scas
mov
icebp
mov
or
sbb
pop
leave
inc
pushf
sub
jb
scas
lea
les
ss
jecxz
pop
cmp
pop
and
adc
repz
dec
int3
sahf
mov
adc
mov
jle
xchg
cmp
aam
jae
mov
outsl
fnstenv
mov
jno
sub
push
jo
fidivl
insl
inc
es
test
xchg
push
or
add
mov
out
testb
movsb
lods
push
xchg
mov
dec
icebp
shufps
das
mov
aad
hlt
xchg
adc
das
bound
jno
lret
outsb
mov
add
cmp
push
sbb
add
push
rcll
lods
push
mov
sub
inc
dec
bnd
jno
loopne
clc
inc
popf
loopne
cltd
out
xchg
cltd
mov
enter
xchg
or
xchg
add
jl
pop
cmp
test
xor
mov
jge
cmp
lcall
mov
xchg
in
das
repz
dec
sbb
inc
sahf
dec
mov
jb
or
scas
xor
and
mov
sub
mov
imul
out
icebp
jle
sub
adc
int
imul
sub
mov
xchg
xchg
xor
cmp
mov
mov
push
mov
pop
shl
adcl
mov
and
loope
mov
mov
adc
cmpsb
rol
daa
xchg
mov
outsb
mov
mov
mov
ret
cmc
dec
sub
xchg
call
sbb
ds
pop
out
jbe
sbb
hlt
and
jle
fisubl
fsubrs
out
adc
xor
je
adc
cmc
mov
aad
cmp
addl
adc
aaa
xchg
and
xor
repnz
lahf
aad
add
jecxz
sarb
mov
push
sub
ds
pop
outsl
cwtl
in
lea
cli
call
ds
xchg
pop
stos
xor
mov
rcrb
mov
cmc
xor
aam
sbb
mov
sub
lahf
xor
fmul
lds
dec
xchg
dec
int3
cmp
loop
sub
sub
sub
push
push
out
je
add
and
mov
test
repz
frstor
xlat
adc
push
cmp
mov
fcompl
insb
and
mov
in
mov
fwait
pop
lock
and
in
or
jnp
xchg
mov
lods
aas
adc
mov
mov
mov
and
icebp
mov
cld
pop
inc
fidivl
js,pn
test
lcall
xor
xor
add
je
mov
sub
jns
ljmp
les
push
outsb
and
jbe
xchg
lret
jne
push
cs
mov
inc
cmp
ss
push
ds
inc
aad
cmp
lea
rcrb
push
cltd
sbb
xchg
sub
pushf
jmp
or
adc
clc
pop
push
cmp
mov
movsl
rdpmc
stc
mov
and
mov
movsl
xchg
mov
add
dec
stos
mov
adc
and
sbb
pop
sbb
cmpsb
sbb
xchg
ds
loopne
int3
daa
and
repz
test
imul
mov
dec
into
outsb
cmp
sub
pop
cmp
mov
std
xchg
lods
scas
addl
ss
push
imul
mov
or
cmp
divl
lods
mov
add
test
mov
sbb
shlb
mov
call
jle
scas
and
cs
and
or
je
into
leave
mov
ret
cmp
mov
push
pop
je
sbb
aaa
xchg
std
cmp
xor
xchg
call
mov
jg
jne
push
inc
aad
in
es
push
push
and
and
mov
bound
dec
lret
inc
adc
dec
popf
sub
xor
inc
shrb
xchg
mov
push
imul
cmp
decb
imul
imul
inc
imull
mov
xchg
test
inc
call
sbb
fiadds
inc
mov
mov
push
dec
lahf
mov
shl
pop
sub
xor
adc
push
enter
sub
int
aam
and
mov
jbe
leave
fimull
out
popa
ja
xchg
xor
loopne
add
push
lcall
std
fneni(8087
mov
cmp
sbb
and
cwtl
pop
sub
jge
mov
jge
ja
mov
or
mov
jle
jb
sti
dec
pop
repnz
mov
out
inc
idivl
adc
sub
cmc
arpl
add
pop
push
inc
dec
shrl
adc
dec
mov
fldt
rcrb
aaa
je
sahf
fsubl
fwait
cmp
cmc
mov
aad
jns
in
icebp
jbe
test
pusha
cmp
roll
xor
xchg
adc
mov
test
dec
leave
or
in
roll
push
stc
fwait
cmp
pop
popa
xchg
push
and
jecxz
pop
fimull
adc
push
xchg
aaa
ja
loop
cmp
sbbl
lds
sbb
repz
aam
leave
loop
add
mov
andl
xor
pop
xchg
mov
inc
ret
or
mov
jge
push
lds
repz
push
sbb
pop
shrl
jae
lods
and
xchg
cmp
shrb
push
push
pop
or
rcrl
aam
out
sub
scas
xor
jne
not
adcb
aam
sbb
shlw
into
out
push
std
repnz
mov
inc
xchg
out
or
ret
xchg
or
jno
popf
imul
sbb
xorl
xor
mov
fxch
push
into
mov
xchg
sbb
lret
adc
cmpsl
push
jecxz
gs
push
cmpsl
loopne
dec
dec
outsl
lock
pop
push
adc
and
stos
cmp
leave
add
testl
xor
arpl
out
sub
jo
ljmp
pop
frstor
xorl
cli
lret
xlat
pop
out
mov
jns
lea
add
je
rcrl
lods
in
dec
inc
lods
push
loopne
mov
sub
push
adc
lahf
iret
rorl
pushf
imul
cs
cs
pop
sub
and
clc
cmp
mov
in
xchg
dec
inc
mov
jno
xchg
mov
mov
int3
mov
or
and
mov
into
in
scas
arpl
rep
pop
jg
mov
lret
mov
in
stc
pop
roll
or
dec
inc
icebp
lock
ret
or
into
lahf
ds
fadds
xor
inc
mov
bound
icebp
adc
dec
int
stos
fimuls
in
add
aas
das
cmpsl
frstor
xor
mul
sahf
xor
mov
mov
in
mov
in
cmp
dec
jl
ljmp
push
push
loop
cli
inc
add
xlat
fldenv
lret
out
cmpsb
popa
incl
fistps
mov
imul
sbb
xlat
iret
insl
xchg
mov
jp
jo
add
cs
sub
in
stc
je
jecxz
sbb
push
jl
cltd
imul
add
aaa
mov
jnp
test
int3
icebp
dec
sbb
nop
add
hlt
sbb
repz
ljmp
dec
or
fidivrs
xchg
jb
aad
or
gs
leave
in
add
sarl
sbb
imul
mov
or
or
mov
movb
test
sbb
sbb
jmp
aas
movsb
sub
add
shlb
jge
mov
stc
and
icebp
fdiv
int3
fwait
mov
pop
sub
inc
dec
inc
loopne
lcall
push
ffree
ja
mov
movsl
adc
xchg
movsl
mov
lahf
xorb
cltd
popf
cmp
js
mov
push
lahf
fsubs
mov
scas
mov
and
pop
loop
inc
xchg
xor
inc
push
icebp
lods
or
jne
aam
push
daa
jmp
imul
icebp
leave
pop
jno
repz
jecxz
fisttpl
fidivrs
sar
cwtl
leave
inc
mov
jo
push
inc
xchg
adc
xchg
mov
xor
cltd
or
pop
imul
sbb
sbbb
jns
jg
pop
inc
dec
enter
dec
cld
push
mov
das
push
adc
jo
inc
jmp
sbb
pusha
inc
cmp
xor
push
push
sbb
inc
adc
test
pop
jmp
not
in
out
and
fiadds
mov
jp
push
gs
lret
rol
or
jo
jg
repz
push
call
dec
jp
mov
lret
mov
mov
imul
adc
sbb
jb
push
adc
ret
add
enter
xorl
adc
shrb
ret
faddl
iret
cmpsl
xor
les
mov
fistpll
adc
ss
scas
or
sbb
mov
nop
out
mov
leave
rorb
jb
jge
loopne
leave
pop
push
and
fwait
push
pop
sbb
test
into
test
xchg
jbe
jecxz
fwait
xor
push
std
lods
mov
xchg
sbbb
inc
mov
push
lea
jbe
push
xchg
cmp
addr16
rolb
pop
inc
sub
cmp
sbb
add
sbb
adc
loop
inc
cmp
push
or
sbb
mov
imul
test
addr16
pop
test
xchg
jne
dec
mov
xchg
or
pusha
stc
push
sub
pop
jo
mov
mov
xchg
mov
add
dec
js
mov
test
movsb
xchg
imul
xor
jmp
push
xchg
sbb
out
xchg
dec
cmp
and
je
cmp
into
stos
aam
pop
jne
fcmovne
mov
repnz
push
lret
jb
call
and
xchg
scas
frstor
add
int
jo
pusha
rclb
push
jne
mov
sub
mov
cmpb
dec
fwait
xor
ret
out
pop
inc
cmp
out
sbb
stos
movsl
and
out
out
movsb
mov
fnstenv
arpl
loopne
hlt
repnz
imul
push
insl
mov
push
xchg
jmp
xor
ret
sub
cmp
orl
test
mov
jb
gs
ror
and
push
sbb
mov
mov
push
sbb
and
xchg
in
add
sub
jg
xchg
aad
jo
adc
lods
outsb
pop
sub
adc
add
outsl
ret
or
dec
ret
push
mov
gs
mov
sub
sbb
and
mov
jns
movsb
pop
scas
movsl
out
jp
ret
xor
mov
pop
pop
push
popf
lods
in
shl
xchg
iret
stos
adc
pushf
stos
inc
and
shll
xlat
pop
decb
cmp
scas
adcb
clc
pop
gs
mov
mov
mov
xchg
jnp,pn
dec
sbbl
or
and
fadds
pop
scas
jo
ficoms
shlb
or
in
or
lock
pop
and
sbb
mov
inc
push
sbb
fsubl
cmp
in
mov
xor
inc
xchg
inc
xchg
xor
adc
and
mov
jo
adc
add
ret
int
decb
dec
cmp
mov
fiaddl
adc
pop
es
xor
ljmp
shrl
das
fiaddl
mov
scas
pop
arpl
sub
lea
testb
xchg
mov
mov
mov
lods
sbb
out
pop
add
nop
xor
push
jp
adc
push
mov
dec
cmpl
mov
or
loopne
les
cwtl
add
adc
daa
fs
enter
leave
icebp
hlt
rorb
jecxz
pop
jmp
fistps
cmp
inc
push
adc
cmc
lahf
fisttpll
out
cld
cltd
shlb
imul
aaa
in
in
je
dec
pop
pop
fisttps
or
push
loop
arpl
xchg
clc
xchg
push
das
dec
in
test
sti
mov
int3
enter
or
add
imul
loop
int
adc
ss
dec
call
push
push
or
aam
sbb
pop
into
inc
xor
enter
divl
cmp
sahf
je
dec
sub
int3
xchg
aad
adc
adc
lods
or
or
scas
push
sub
popa
fsubr
jp
addb
in
mov
sbb
repnz
fldl
shl
and
loopne,pt
sub
jo
shl
and
xchg
into
daa
outsb
rcr
pop
nop
mov
jl
mov
jns
cmp
cmp
mov
jbe
xor
test
icebp
xchg
xchg
pop
dec
sub
sbb
cmp
inc
lock
aas
ds
jecxz
xor
sbb
sub
mov
push
mov
ja
mov
enter
dec
cmovs
aaa
mov
sub
dec
push
sbb
push
cltd
dec
in
jbe
sub
dec
jmp
btr
imul
out
or
test
notb
movsb
xor
push
mov
in
jp
add
pop
test
lods
sbb
inc
xor
sub
fidivs
lret
mov
xor
add
mov
fidivl
cmp
mov
lods
sbb
pusha
test
jg
sbb
dec
jl
inc
xchg
ss
les
or
xchg
aam
shr
xor
ss
sbb
or
leave
cli
sahf
inc
sbb
rol
sbb
pop
addr16
sbb
icebp
mov
scas
rcl
ret
xchg
push
dec
pop
and
add
pusha
mov
ds
add
dec
cmp
fcoml
ljmp
adc
cmp
and
stc
pop
or
pop
jecxz
cli
jge
leave
adcb
imul
cmp
dec
out
adc
adc
pop
inc
inc
pop
das
push
rcrl
push
sahf
push
in
jae
adc
enter
shr
xchg
fsubl
push
fwait
dec
pop
push
je,pn
popa
sbb
lret
or
lcall
inc
and
hlt
out
push
mov
js
push
pushf
jl
in
dec
rcrb
adc
daa
fimuls
or
aam
mov
fwait
out
ljmp
cmp
in
hlt
out
popa
or
sub
jno
outsl
sub
mov
sbb
out
leave
iret
jp
lods
inc
fcoml
jb
fisttps
scas
or
test
xchg
jecxz
fdiv
add
push
sti
in
inc
add
mov
pop
and
jmp
into
lock
test
dec
and
testb
aaa
add
leave
adc
jmp
xchg
ds
dec
popf
std
xchg
xchg
xor
xchg
mov
test
pop
jns
sbb
jmp
xchg
inc
hlt
ret
imul
inc
test
jne
jmp
push
scas
ds
test
xchg
jae
in
push
lret
sub
xchg
cvtps2pd
and
xchg
cmp
jg
lods
and
loopne
nop
fistpll
sti
movsl
in
out
shrl
iret
mov
lds
das
xchg
push
insl
push
xchg
jnp
adcb
incl
pop
pop
and
faddl
pop
lahf
mov
mov
cmp
imul
ds
ss
and
inc
call
in
cmp
pusha
negb
test
sub
add
add
dec
clc
pop
push
cmpsb
repnz
loopne
inc
lods
and
pop
push
les
mov
test
inc
xchg
xchg
div
mov
pop
into
fcomps
push
bound
int
ja
xor
and
fstpl
arpl
stos
push
jge
xor
xchg
loopne
adc
in
lea
add
mov
and
mov
loope
lods
add
lret
iret
or
fs
cli
je
push
mov
mov
push
sub
mov
pop
imul
imul
imul
dec
mov
pop
pop
arpl
call
out
adc
pop
movsb
in
loop
pop
sub
das
das
test
in
pop
and
or
cmp
mov
scas
hlt
arpl
ljmp
push
inc
or
insl
fwait
dec
xchg
movsl
loopne
jae
jl
dec
mov
shlb
xor
aad
mov
adc
cmp
mov
cld
aad
sub
ja
insl
addb
push
push
icebp
mov
cmp
fsubr
mov
scas
fnstenv
push
je,pn
sbb
sub
lret
and
jecxz
lahf
sbb
and
negb
outsb
imulb
ja
mov
clc
nop
xor
cmp
fldt
shl
mov
icebp
sub
fidivrl
daa
test
inc
sahf
xchg
in
aas
jno
jns
sahf
push
lcall
push
or
mov
push
dec
jns
xchg
sub
xchg
not
cmp
inc
ds
movsb
mov
lret
cwtl
popa
loop
in
subl
nop
out
cli
sub
push
pop
push
jae
pop
or
and
add
mov
or
mov
dec
mov
mov
inc
fidivrs
pop
sbb
xchg
push
or
in
ret
sbb
inc
in
mov
xchg
xorl
out
outsl
cmpsl
and
pop
adc
jnp
mov
sub
orb
fistps
popl
ror
adc
xor
jle
cli
mov
push
mov
mov
jne
xor
dec
jno
sub
mov
xor
sbb
sub
loopne
adc
pop
pop
dec
leave
ficomps
scas
add
and
test
sub
stc
sbb
fdivs
leave
stc
stc
leave
inc
ja
test
mov
add
rclb
mov
movsl
and
loopne
into
add
ffree
mov
adc
cli
xor
cmp
or
jns
push
clc
loope
dec
enter
add
test
jae
aaa
xchg
sbb
je
repnz
adc
xchg
and
lods
mov
lock
dec
out
pop
stos
pop
mov
push
ds
fst
call
or
cmp
imul
decl
xor
mov
gs
mov
mov
xlat
lcall
mov
and
and
idivl
mov
ljmp
pop
lret
cmp
call
rol
push
inc
adc
rcr
add
push
or
pop
cs
pop
xlat
or
mov
sbb
mov
lea
dec
enter
rclb
jp
jns
dec
les
push
ljmp
fldl
jo
xlat
dec
test
aaa
lods
mov
xchg
cmp
out
out
ja
and
stc
loope
fisttpll
sarb
mov
push
cmpsl
pop
sub
dec
push
pop
sar
repnz
mov
insl
iret
inc
jp
cld
sub
sbb
aaa
rcll
sub
aas
xor
cmp
jecxz
das
xor
in
insl
sbb
cmp
imul
pop
mov
jl
ss
sti
ret
je
add
outsl
mov
xor
shlb
mov
lock
negb
daa
cld
outsl
inc
sarb
daa
shll
jge
and
dec
fidivl
daa
mov
or
mov
add
push
ja
cs
mov
xchg
or
mov
inc
dec
ret
sbb
pop
jno
dec
aam
mov
cmpsb
sbb
inc
jmp
nop
std
mov
xchg
nop
ret
stos
adc
rolb
cmpsl
ja
fildl
push
das
sub
outsb
scas
in
rclb
jge
mov
and
adc
cltd
shrl
pushl
scas
arpl
jge
pop
xor
flds
push
fldcw
fwait
shll
int3
xor
mov
imul
jecxz
imul
inc
push
insb
cmc
test
jmp
mov
mov
inc
dec
shll
mov
popa
daa
sub
loop
adcl
out
pop
leave
cmc
sub
xchg
int
or
push
push
push
dec
test
daa
sub
shll
adc
jmp
xchg
outsl
sub
add
ret
testl
dec
mov
mov
sub
ret
ja
shrl
test
push
xchg
inc
mov
dec
cmp
lret
xlat
loop
cmp
out
cltd
addr16
enter
sbb
scas
lds
pop
frstor
jl
fidivs
push
dec
add
add
pop
mov
movsl
test
dec
jmp
int
lods
xchg
fidivs
std
outsl
push
ret
push
mov
lock
jl
mov
test
mov
jnp
push
leave
or
dec
lret
fistl
xor
and
orl
enter
cld
jge
pop
cli
jae
or
mov
in
pushw
mov
dec
mov
sbb
mov
in
and
dec
aad
sub
mov
std
jb
addr16
dec
in
xchg
mov
fdivrs
js
in
ret
cmpl
cmpsl
test
mov
into
pop
pop
mov
push
test
sbb
pop
mov
fs
call
sahf
jmp
cmp
mov
xchg
fcoms
mov
push
push
jno
xor
inc
xor
add
mov
shll
mov
popf
pop
mov
mov
jge
push
push
xor
mov
fsubrs
hlt
lcall
pop
and
repnz
lds
rcrl
xchg
sub
xchg
and
cmp
int3
jb
inc
mov
and
cmp
jno
mov
lret
aaa
hlt
je
cmp
pop
jge
dec
out
sahf
mov
call
mov
ss
cld
imul
push
out
jge
add
mov
aas
xchg
sbb
aam
inc
lea
cmpsl
out
add
decl
xchg
test
repnz
in
cmpsb
incb
out
rep
arpl
adc
stos
sbb
enter
in
movl
sbb
mov
pop
push
movsl
fcoml
imul
xchg
sub
sbb
jmp
cmp
xchg
out
pop
xorl
cmp
and
cmp
or
pop
fstp
and
lods
pop
mov
idiv
xchg
and
or
icebp
loope
mov
ret
xchg
or
dec
adc
and
xchg
pop
push
jo
or
mov
or
pop
and
pop
aad
sub
scas
cltd
mov
in
outsb
push
or
in
inc
add
ljmp
cmpsb
jno
jle
bound
fidivs
ja
test
imul
mov
stc
lret
iret
add
mov
cmp
cmp
inc
in
sbb
mov
out
stos
call
ficoml
dec
push
vorps
scas
xlat
in
push
add
lods
jp
lock
test
and
mov
mulb
adc
hlt
push
add
pop
mov
push
shll
daa
jmp
and
out
or
adc
pop
sub
test
add
xchg
push
add
push
ret
test
loopne
hlt
stos
ja
imull
shlb
push
sbb
or
xchg
loopne
insb
int
lea
sbb
cltd
xor
testb
ja
sti
jo
movsb
add
inc
sbb
mov
sub
and
mov
jns
aad
push
sti
add
stc
cltd
leave
cli
ljmp
add
scas
pop
sbb
out
mov
in
inc
pop
mov
pop
pop
push
mov
je
cs
mov
sbb
ss
je
push
insb
movsl
mov
dec
add
mov
mov
loopne
jae
je
jl
ljmp
jg
dec
call
mov
xchg
mov
inc
in
dec
mov
sub
addb
push
mov
xor
cmp
mov
inc
or
push
mov
xor
xchg
ss
lea
jae
mov
rcrl
xor
jae,pn
roll
cmpsb
lahf
sbb
xor
insb
scas
aam
mov
xor
outsb
jl
mov
sar
fisttpll
mov
iret
inc
aad
fdivrs
jl
out
cld
inc
inc
dec
dec
add
cmpl
insb
push
test
clc
addb
sbb
cmp
test
ljmp
cmpsl
jl
mov
insb
and
lods
mov
jno
jnp
out
rolb
adc
inc
adc
xor
lret
dec
cmpsl
repz
mov
sub
fildl
leave
push
xor
lcall
cli
js
jae
jp
xor
add
in
inc
fimull
xor
xchg
idivl
pop
fwait
stc
add
or
fs
sbb
in
aam
rol
push
pop
adc
es
ja
stos
adc
jl
ret
loop,pn
mov
dec
jle
js
mov
call
mov
aad
leave
jo
mov
pushl
rcll
test
fistpl
mov
repz
lahf
fistpl
and
push
in
and
in
jo
clc
push
lret
pop
pushf
mov
add
out
imul
das
xchg
add
aas
out
mov
icebp
cmc
and
add
pop
add
lcall
xlat
and
push
jne
lret
mov
cmp
outsl
lds
fs
fcoms
pop
test
cmc
fisttpl
stc
jg
rcl
dec
cmp
clc
icebp
les
test
or
test
je
or
push
movsl
cmp
fs
add
pusha
sub
daa
mov
and
in
xchg
fwait
and
push
fs
or
jl
mov
mov
lret
adc
mov
mov
pop
mov
mov
in
inc
pop
lahf
in
arpl
mov
call
loopne
jecxz
stos
clc
pushf
into
les
loop
push
jb
xor
scas
jb
sub
movsl
push
cmp
repz
xor
jae
dec
pop
jns
test
addl
sub
cmpsb
xor
adc
cli
imul
xchg
inc
mov
xor
sub
push
dec
out
sbb
dec
mov
cmpb
int3
mov
dec
fwait
or
jae
cmp
or
jne
cmc
stos
inc
or
jb
fldcw
icebp
mov
adc
pop
jle
cmp
jmp
pmaxsw
mov
mov
mov
push
fdivs
sub
mov
fs
mov
loopne
pop
xchg
mov
sub
and
lcall
fidivl
cmc
inc
cmpsl
jg
add
pop
sahf
mov
mov
test
shr
mov
scas
mov
popf
sbb
popf
mov
adc
clc
scas
sub
daa
out
movsb
scas
sub
and
push
inc
add
movsb
pop
sub
and
push
or
ljmp
sbb
add
jl
dec
rol
iret
xorb
push
fldl
aam
inc
push
lret
sbb
jnp
les
imul
sbb
es
and
out
int
dec
shlb
push
mov
sub
xor
lahf
lods
mov
aaa
mov
dec
mov
jb
xlat
or
push
fucomip
fs
jbe
nop
xchg
jo
pop
push
imul
mov
xchg
popa
dec
les
or
sbb
scas
jl
xchg
jb
add
sbb
push
sbb
push
xchg
adc
jg
lcall
mov
lock
stos
xchg
and
inc
ss
mov
das
mov
in
jmp
sbb
lcall
xor
out
out
lds
push
rcrl
ret
push
mov
movsl
sbb
mov
jns
call
dec
and
pop
insl
push
adc
dec
pop
push
and
mov
dec
adc
mov
arpl
fwait
sub
push
push
mov
fsubrs
sbb
aad
ds
dec
lods
std
jne
dec
xor
aaa
adc
cli
mov
dec
cmp
push
adc
jle
adc
inc
out
cltd
pop
xchg
or
ffreep
cld
std
cmp
or
sbb
aaa
ret
fiaddl
call
js
shl
jge,pn
out
and
xchg
dec
test
in
adc
add
push
sbb
inc
dec
cmpsl
mov
or
mov
push
mov
jbe
ss
popf
lcall
mov
sbb
push
test
in
in
or
push
test
add
jecxz
jnp
loope
in
adc
xor
push
add
and
mov
movq
xor
cmp
mov
loope
fldl
fldl
mov
push
jo
ret
add
lods
cmp
sbb
cmp
dec
push
jmp
gs
jbe
in
popa
pop
aaa
paddsb
cmpsb
push
cmc
in
xchg
inc
xor
lcall
sbb
pop
mov
enter
and
mov
imul
mov
fcomps
scas
lahf
pop
fwait
lea
xchg
lds
cmp
mov
out
out
incl
jns
jl
inc
sbbl
mov
and
aaa
into
movsl
lea
pop
pop
lods
pop
addb
push
stos
in
shlb
scas
xor
stos
pusha
jo
fcmovne
sbb
xchg
and
cmc
mov
dec
adc
cmpl
push
mull
jle
xor
loopne
mov
lcall
xchg
pop
pop
loop
cmpsl
xchg
dec
outsb
push
mov
insb
cmpl
add
out
fisttpl
pop
popa
mov
stos
xchg
sub
movsb
jbe
pop
mov
xor
lds
imul
mov
mov
fildl
ret
mov
insl
fdivrl
js
call
cmp
stos
or
in
adc
gs
shrl
ja
rcrl
ret
or
xor
mov
mov
pop
sar
sti
add
call
pop
mov
notb
insl
dec
inc
rcrl
push
cmc
pop
xchg
lods
addb
cmpsb
cs
xchg
mov
repz
push
fistpl
sbb
aam
pushf
test
add
sub
out
sbb
mov
sarb
outsb
pusha
add
and
adc
mov
mov
shlb
dec
pushf
pop
cltd
les
icebp
and
lods
arpl
stos
mov
jmp
filds
push
fistpl
sub
out
repz
mov
cmpsb
ja
inc
ljmp
mov
iret
cmp
clc
sub
xlat
push
cs
push
lods
cmp
mov
lcall
mov
push
cmpsl
fwait
xchg
es
std
mov
xchg
mull
add
cld
shll
lods
sub
xchg
je,pt
xor
mov
add
push
and
imul
fs
fwait
pushl
arpl
repnz
loopne
xchg
sub
and
mov
sar
fadd
mov
inc
test
inc
jno
sahf
pop
inc
lods
fdivr
out
loopne
divl
mov
inc
jge
pop
pop
mov
adcl
dec
xlat
cmp
sbb
cmpsb
aad
std
dec
notb
fwait
push
repnz
decl
getsec
lcall
dec
data16
push
jmp
jecxz
outsl
shlb
cmp
lock
movsl
cmc
pop
add
mov
xor
or
add
int3
rcrb
hlt
jne
inc
inc
aas
dec
mov
mov
cmp
mov
cmp
lcall
stos
pushf
mov
popf
mov
iret
insl
xor
adcb
add
ffreep
outsb
cmc
push
fs
xchg
or
xchg
add
inc
or
jb
lock
pop
ret
or
and
lret
lret
push
imul
aam
push
jmp
adc
imul
and
sahf
ss
xlat
aad
xor
popf
mov
or
jb
cmp
cmpsl
adc
push
adcb
sbb
cld
add
mov
mov
ja
xchg
mov
inc
xor
cwtl
shl
cwtl
sbb
add
cmpsl
mov
sub
lret
dec
xchg
inc
sbb
push
rol
loopne
jne
lods
testb
mov
jb
lcall
dec
pop
xor
loop
call
ret
cld
cld
xor
push
inc
insb
xchg
sahf
das
cmpsl
mov
mov
jmp
dec
subl
fstps
jp
out
out
out
ljmp
jnp
inc
fnstcw
adc
xlat
adc
addr16
mov
xchg
test
imul
or
flds
sbb
add
cmp
xchg
add
sar
fistl
mov
sbb
lea
mov
into
rcl
inc
xchg
adc
mov
mov
ja
mov
dec
fsubrs
insb
xor
bound
dec
rorb
lods
ljmp
fdivrs
sbb
aam
fsubr
xor
sbb
adc
es
lock
cmp
lcall
xchg
or
cwtl
xor
enter
mov
lds
enter
xchg
call
hlt
xor
dec
aas
mov
pop
jb
pop
cmpsl
mov
add
jl
inc
cmp
mov
inc
mov
and
dec
sahf
daa
dec
jo
jno
sub
addl
jno
xor
and
inc
xor
testb
lahf
cmp
sub
popf
and
xor
mov
adcb
pop
in
ds
cltd
out
push
cmp
xor
bts
push
ss
cmp
pop
push
clc
icebp
jae
jns
and
mov
dec
mov
pop
and
pop
pop
push
inc
cmp
cs
js
sbb
clc
mov
pop
divb
outsb
in
mov
push
or
aaa
add
mov
push
push
push
xlat
sbb
mov
cmp
sub
mov
rclb
or
stc
fisubl
repz
mov
leave
jno
addr16
scas
js
stc
outsb
aad
nop
xchg
or
dec
shl
mov
mov
stc
js
sub
or
or
mov
pop
jbe
dec
push
jmp
sbb
in
push
sub
mov
mov
insb
vprotw
mov
nop
xchg
repz
jb
xor
and
mov
lea
orb
or
ret
arpl
lret
in
jmp
fmull
loopne
jle
cmc
cmc
movb
rcrb
adc
mov
mov
push
imul
push
sti
nop
or
iret
jae
stos
add
arpl
push
push
sbb
cmpsb
pop
jnp
xchg
push
mov
dec
lods
mov
ret
lcall
jmp
stc
and
adc
push
popa
or
js
movsl
popa
popf
inc
icebp
add
xor
or
inc
in
push
jecxz
add
enter
pusha
inc
addr16
xor
add
in
sub
mov
cld
icebp
and
sbb
sar
add
rorb
aas
push
fldenv
xor
pop
push
jmp
scas
mov
add
pop
pusha
clc
pop
dec
pop
jo
jb
mov
ja
out
dec
ljmp
cmp
xchg
jb
xor
cmp
fsubp
pmovmskb
out
or
hlt
cld
aad
mov
xor
fldl
imulb
scas
jecxz
jns
push
in
fiadds
and
push
dec
cmp
push
push
das
gs
pop
cmpsl
scas
stc
pusha
mov
jnp
leave
push
dec
add
and
mov
adc
dec
call
leave
popa
mov
outsb
cwtd
inc
sbb
mov
mov
xor
cmp
icebp
lock
lret
mov
imul
inc
mov
push
xchg
sub
xchg
cmp
sahf
aaa
shrb
sti
mov
cmp
inc
scas
mov
daa
cmpsl
aam
divb
dec
sub
push
shrb
ror
jg
push
pop
data16
mov
fcoml
test
mov
sarl
aad
lods
ss
add
xchg
ret
sub
testb
mov
leave
arpl
sbb
pop
xor
jne
adc
inc
cld
or
pop
push
cli
xchg
cmp
fildll
out
xchg
das
or
mov
push
out
inc
hlt
and
mov
inc
addr16
sahf
lea
aas
or
sbb
mov
and
popa
sbb
call
out
xor
sub
pop
daa
out
cmp
stos
mov
das
xchg
pmuludq
lahf
lahf
aaa
lret
mov
mov
sub
dec
insb
add
std
test
insl
mov
adc
mov
ss
inc
mov
mov
insl
xchg
mov
ja
lds
mov
xchg
cs
mov
orb
mov
scas
xchg
loop
sub
pop
in
add
dec
dec
inc
jae
push
push
mov
nop
adc
mov
mov
sbb
mov
popa
ljmp
inc
lds
or
in
push
mov
pushl
popf
mov
mov
inc
sub
daa
data16
push
fnstenv
or
sti
push
ss
push
cmp
popf
lods
add
inc
dec
xchg
and
sub
add
mov
out
or
mov
inc
jle
bnd
cs
mov
inc
sbb
out
mov
sbb
sbb
xor
mov
leave
jno
or
jmp
sub
jne
add
sbb
in
imul
jae
jmp
jne
sub
movsb
cld
cmp
add
xchg
es
push
fnstenv
icebp
icebp
dec
jae
cmp
repz
mov
mov
cmp
dec
inc
aad
cmpsl
xor
push
and
and
mov
orl
or
divl
inc
mov
stos
js
jae
popf
aas
xchg
ficompl
fcoml
test
ret
lds
sbb
mov
ficoml
leave
out
mov
scas
pop
cli
in
stc
lea
subb
jno
test
lock
dec
pop
mov
add
enter
sbb
pop
sub
lcall
xlat
dec
clc
dec
push
xor
rorl
test
repz
stos
push
adc
push
cmp
into
cmp
std
xor
jge
lds
fmull
std
movsl
fs
jle
imul
jmp
scas
xchg
js
stc
lds
inc
sub
lock
gs
fidivs
push
mov
movsb
loope
sub
sbb
or
and
mov
mov
dec
out
in
inc
sbb
push
push
sub
inc
push
adc
mov
xchg
jmp
insl
cwtl
fsts
scas
inc
addr16
xchg
negl
jge
jae
insb
scas
je
fucomi
sub
js
or
xor
insl
add
jge
jns
sub
rorl
cmpsb
pop
pop
cmp
push
lea
push
and
gs
add
sti
repz
mov
and
push
mov
rcll
popf
add
scas
and
movsb
cmpsb
jmp
cmp
dec
clc
repz
cmp
iret
mov
mov
jae
test
lcall
cs
nop
xchg
mov
popf
sbb
pusha
insb
std
lret
inc
lds
inc
loop
sub
xchg
cld
push
and
pop
gs
push
xor
fs
push
aas
xor
insl
dec
lea
inc
xchg
rorl
jg
data16
push
das
mov
sti
popa
add
gs
sbb
rcl
sbb
sub
inc
hlt
dec
call
in
stc
dec
mov
loopne
aas
nop
repz
inc
aas
in
les
ds
push
xchg
movnti
movsl
push
nop
popf
lods
cmp
cwtl
jmp
int
mov
std
push
fwait
mov
xor
xchg
jb
out
push
mov
jmp
xor
xchg
out
xor
pop
or
adc
icebp
dec
popf
pop
jg
test
loop
adc
sub
and
sbb
pop
outsl
testl
outsl
xchg
dec
iret
add
push
mov
or
imul
jae
movsl
push
outsl
lahf
mov
mov
mov
test
push
push
xor
or
lret
shl
rcrl
dec
push
call
sub
mov
std
cmpsb
divb
jno
push
jnp
fcoms
cmc
arpl
push
aas
int3
xchg
xchg
inc
js
xchg
push
sub
adc
push
jle
outsl
hlt
xor
xchg
jne
lods
push
out
les
inc
jae
rorb
les
sbbl
faddl
repz
or
test
push
shl
or
or
addr16
mov
pop
sti
xchg
enter
push
cmp
hlt
cltd
jl
jle
cli
inc
out
pop
dec
loopne
cmp
loope
out
and
out
stos
andl
aaa
ss
mov
int
cmp
out
mov
add
loop
jmp
vprotq
pop
mov
mov
repnz
pop
mov
popf
xor
mov
ljmp
jl
es
jg
push
add
nop
push
mov
hlt
sub
mov
fiaddl
out
dec
repnz
jl
popf
mov
fxch
push
mov
mov
test
and
outsl
imul
dec
aam
pop
cmc
inc
mov
push
inc
mov
inc
pop
aam
mov
bswap
mov
sbb
push
idivl
add
fs
pop
push
popf
mov
insl
and
leave
mov
inc
lahf
jmp
mov
mov
cmp
xor
push
shlb
jp
rol
inc
and
xchg
mov
add
aas
aas
or
aam
loopne
dec
or
mov
cltd
mov
xchg
fs
mull
jp
sub
pop
cmp
and
int
mov
cmp
adc
rol
mov
mov
inc
mov
addr16
into
das
cmp
popf
lret
push
das
xor
pop
jne
cmpsl
out
out
dec
jl
dec
pop
fwait
pop
pop
add
push
enter
pushf
fistl
fnstsw
and
stos
lcall
ljmp
stc
popa
rcl
jnp
xchg
mov
jmp
sub
mov
fstpl
mov
call
push
cmpl
mov
jge
or
inc
xor
pop
btr
scas
inc
pushf
and
xlat
mov
clc
jnp
shrb
jg
in
mov
jmp
movb
and
adc
adc
cmp
pushf
adc
jmp
inc
mov
imul
mov
scas
sbb
sahf
inc
mov
roll
sbb
iret
dec
aaa
xor
sbbb
lret
pop
insb
ficoms
lret
dec
fbstp
push
imul
fnstsw
add
scas
insb
sub
fiadds
sbb
xor
push
fs
mov
dec
adc
xlat
rcr
fldcw
mov
in
popa
cwtl
lods
or
lcall
scas
in
or
lods
pop
push
insb
enter
dec
arpl
sub
bound
out
jo
xchg
cmpsb
inc
pop
es
pop
mov
add
ret
pop
lcall
adc
mov
bound
test
cmpsl
fcmove
orb
xor
push
jae
xor
inc
in
dec
out
mov
xchg
scas
sbb
dec
xchg
jle
mov
cli
test
mov
sbbb
sbb
pop
daa
xor
and
fucom
dec
test
mov
jbe
repz
stc
or
rcrb
sub
mov
dec
or
js
xchg
inc
jno
add
ds
dec
or
jp
inc
push
fbld
mov
in
scas
iret
xchg
push
sbb
orb
hlt
add
in
movsb
inc
imul
rep
pop
mov
std
lahf
loope
push
pop
xchg
or
cmp
shll
test
mov
xchg
outsb
sbb
inc
push
out
xchg
and
fcmovnb
int
out
add
xor
test
xchg
in
mov
sub
add
out
popf
sub
adc
lahf
fcompl
cmp
or
cmp
call
mov
mov
inc
jbe
or
mov
jg
lock
dec
out
fs
jae
rcrl
int
je
dec
insl
xchg
sti
mov
jno
out
inc
sbb
mov
sbb
ret
repz
ds
or
adc
das
mov
xchg
scas
xchg
shlb
lods
ds
xor
sar
jae
lahf
add
sbb
out
cmp
push
cmp
fs
cld
xchg
and
cmp
push
cmp
in
xchg
aam
add
xor
or
int
divb
push
jge
fistps
rcr
int3
dec
pop
mov
repz
or
popa
adc
and
test
cmp
jge
clc
idivb
xchg
and
sahf
cmp
cltd
and
lahf
inc
mov
stc
fldl
ret
ds
mov
mov
push
dec
add
xorb
call
andb
jne
fs
rcrl
dec
aam
jecxz
xor
jns
pop
inc
mov
mov
mov
out
ficoms
pop
xor
adcb
ret
ss
jae
test
jbe
jae
xchg
push
jmp
mov
pop
mov
in
pushf
xor
mov
jp
andl
jbe
fcoml
out
int3
pop
sub
pmulhw
aas
mov
fadds
xchg
outsl
inc
push
fs
inc
iret
adc
xchg
sbb
dec
daa
pop
dec
stos
int
rol
out
xor
mov
jno
out
cld
dec
lock
jae
clc
popf
xchg
push
dec
fimuls
add
push
pop
adc
mov
fcmovnb
jnp
ret
in
fsub
or
ja
push
jp
fstpl
cmp
dec
out
mov
cmp
dec
jae
push
std
mov
sub
inc
jno
sub
test
incb
sti
ret
xor
push
and
orb
mov
jns
flds
cmp
addr16
push
add
cmpsb
loope
mov
aad
sub
inc
adc
mov
jl
hlt
xlat
ss
xor
insl
xchg
cli
movsl
aas
cltd
inc
into
sub
dec
cmpsb
adc
adc
int3
js
insl
cmp
push
sub
dec
movsb
pop
pop
ret
push
out
sbb
add
push
sbb
xchg
push
pop
nop
ffree
mov
push
adc
inc
iret
and
xchg
ss
test
ret
aad
sahf
mov
aaa
sub
les
in
mov
or
push
cld
loopne
insl
jp
push
pop
mov
push
shlb
outsb
jge
jl
mov
mov
lods
out
out
mov
insl
out
jp
out
ja
js
aad
sub
or
mov
xchg
lods
jle
dec
pop
gs
sbb
adc
test
xor
adc
push
aam
add
mov
cs
mov
xor
cltd
pop
fstpt
sub
and
pop
sub
std
jl
mov
mov
daa
shlb
arpl
xchg
mov
mov
mov
cmpl
stos
popf
inc
nop
cld
pop
test
push
stos
fbld
mov
mov
stc
mov
out
addl
sub
pop
adc
lds
in
int3
dec
mov
aad
jle
push
shl
push
fiadds
jb
jp
inc
cmp
mov
dec
icebp
sub
mov
test
mov
push
cli
xor
adc
inc
rorl
icebp
jmp
popf
mov
pop
in
sbb
jge
pop
mov
xor
mov
push
adc
cmpsb
sub
mov
push
mov
aaa
add
xlat
push
lods
cli
shlw
mov
loope
xor
lcall
xchg
cltd
sti
insb
dec
imul
and
call
xor
pop
mov
pop
pop
stos
ret
aas
add
cwtl
loop
inc
sbb
pop
repz
sarl
test
ja
add
imul
stc
xchg
jmp
sbb
rcrl
inc
test
cmp
ja
mov
pop
fs
sub
sahf
and
push
add
push
sub
cmpsl
hlt
ret
jno
mov
cmp
jl
in
xor
es
cmp
test
aas
pusha
mov
sbb
cmpsl
and
icebp
or
mov
and
or
xchg
repnz
movsb
fdivp
push
xor
and
pop
rcrb
sbb
mov
mov
flds
imul
js
lods
add
aad
push
and
lahf
jbe
inc
pop
clc
aam
jb
mov
pop
jmp
mov
fdiv
xchg
mov
call
inc
or
nop
fdivrl
push
mov
pop
ret
fcmove
daa
inc
mov
fcmovnbe
clc
out
jp
xchg
pusha
sub
cmc
sub
rorb
rorl
sbb
mov
push
movsb
mov
sub
icebp
in
mov
test
adc
int
pushf
lahf
popf
adc
add
je
inc
xor
fcmovbe
lcall
clc
je
jb
stos
imul
push
push
das
push
inc
cmc
inc
pusha
ss
and
cwtl
repz
in
fnstenv
in
mov
push
dec
xor
xor
ja
mov
mulb
mov
stos
xchg
fwait
call
pushf
insl
pop
orl
pop
je
sahf
stos
add
or
inc
sbb
cmp
pop
stos
dec
adc
cmp
lods
or
add
mov
add
and
lcall
pop
fldt
mov
jb
mov
cmp
mov
rol
and
aad
push
mov
out
mov
ja
push
bound
mov
cmp
push
stc
xor
xor
fcompl
jmp
lahf
and
cmp
sbb
and
inc
jle
fldenv
lods
movsl
sbb
pop
daa
icebp
sbb
enter
sbb
fidivrs
movb
inc
adc
mov
xor
mov
incl
sbb
xchg
or
lock
subb
or
les
pop
jmp
lods
push
push
push
pop
sti
dec
bound
inc
pop
push
lahf
and
mov
sbb
rep
sub
xor
scas
leave
daa
xchg
mov
fidivrl
movsl
jle
ds
and
push
adc
adc
in
push
call
nop
pop
and
js
sbb
mov
stc
notl
daa
js
iret
pop
jno
jle
dec
in
mov
lret
sbb
mov
xor
mov
xlat
test
testb
mov
ljmp
idivl
or
sahf
enter
lods
pop
xor
jle
cmp
sub
setg
cmp
ss
aam
sbb
add
mov
mov
hlt
sar
adc
jecxz
adc
or
insb
add
jbe
lods
lock
pop
mull
inc
and
add
jecxz
adc
fwait
leave
pop
mov
movsb
xchg
xor
push
dec
sbb
add
push
sub
addr16
test
faddl
std
scas
cmp
xchg
cmp
mov
aas
data16
cmp
xor
sub
sub
sub
sub
xchg
movsl
arpl
loope
mov
nop
mov
in
push
mov
inc
movsb
or
sub
dec
sbb
outsb
rcrb
cmp
dec
and
jp
sub
movl
push
jb
jge
adc
repz
push
adc
jmp
push
js
pop
lea
dec
scas
std
sub
adc
pop
jg
xchg
lahf
add
scas
out
outsl
adc
out
scas
popf
mov
jmp
xchg
pop
imul
mov
and
cmp
push
in
jp
inc
jmp
repnz
xchg
jp
loopne
lret
mov
mov
loop
arpl
xchg
ss
xor
jge
lret
and
hlt
aas
out
mov
test
jno
sub
lret
shlb
in
arpl
xorl
push
lret
fnstsw
mov
xchg
cmpsl
int3
mov
jns
ds
jge
mov
jb
cltd
pop
hlt
sbb
mov
pop
iret
fcomps
mov
pop
add
mov
adcb
sbb
mov
or
mov
out
or
dec
xchg
stos
scas
aaa
dec
loope
sti
iret
dec
pop
mov
fs
dec
clc
movb
in
push
and
fsubr
cmpsl
add
xchg
outsb
jo
divl
mov
add
xor
loope
pusha
cld
insb
or
sbb
jle
gs
pop
jecxz
sbb
pop
std
push
out
jno
dec
jo
lods
xchg
outsl
loopne
mov
fxam
cmp
cmpsl
xor
loopne
xchg
inc
xchg
in
ja
rcrl
pushf
inc
das
ret
pop
in
xchg
lret
or
aas
mov
cmpb
loop
rcrl
scas
jb
and
and
xchg
addl
pop
xor
in
shrb
xor
mov
lahf
lods
and
popa
mov
mov
aad
adc
orb
scas
adc
mov
pop
cld
push
mov
jmp
shlb
inc
mov
mov
test
pushf
subl
jle
repnz
jle
lahf
pusha
cmp
scas
mov
out
aad
xor
sbb
inc
or
rep
cmp
cld
adc
leave
mov
dec
and
inc
dec
xor
adc
loopne
inc
jmp
ljmp
call
push
dec
mov
dec
jae
push
scas
mov
stc
sbb
jle
je
mov
mul
rcrb
ds
sbb
push
shl
scas
xchg
out
into
or
shlb
cwtl
xchg
cld
outsl
pop
or
push
cmpl
icebp
pop
aam
push
and
into
cmc
and
fmuls
lock
cmp
bound
pop
lret
ja
cltd
mov
jae
sti
aaa
iret
push
mov
cmp
cmp
ficoml
popf
mov
arpl
mov
xchg
xorl
mov
insb
and
cs
lahf
in
jns
scas
arpl
fnstcw
and
cmpsb
sub
sub
jns
pop
popf
mov
ds
mov
push
mov
jecxz
outsl
pushf
cmp
xchg
cltd
xchg
fs
mov
mov
cs
push
cltd
loop
mov
movsl
jbe
inc
and
adc
in
aam
leave
inc
aam
out
sub
mov
jnp
or
mov
inc
clc
jmp
sub
das
shrb
sub
cmp
sti
mov
ljmp
pop
jbe
dec
fcmovu
adc
push
mov
sub
cmp
sbb
stos
imul
addb
xchg
out
mov
insb
jae
jmp
fs
lock
sub
lods
cmp
jae
fcomps
mov
insl
or
popf
cmc
push
xchg
insb
push
fst
data16
jnp
shlb
jno
add
adc
inc
mov
jl
inc
xchg
scas
mov
mov
loop
xor
jg
fadd
rcrl
add
jbe
sub
jle
ja
fsincos
outsb
stos
es
adc
ss
push
ljmp
aad
xchg
adc
and
cmpxchg
sbbl
pushf
in
mov
pop
and
inc
jb
addr16
subl
mov
sbb
repnz
ds
add
int3
xchg
ficoms
test
aas
dec
cmp
xchg
sti
xchg
aas
enter
adc
push
and
add
sbb
in
or
cmp
cmp
pop
dec
or
inc
xor
sarl
sub
mov
in
out
add
test
adc
stos
jnp
xchg
push
imul
pop
and
outsb
das
outsb
xchg
dec
push
mov
push
cmc
xor
rcrb
pusha
out
push
fists
adc
adc
mov
mov
xor
nop
mov
pop
clc
jge
mov
push
into
inc
leave
fs
sub
mov
out
inc
test
loopne
and
push
data16
add
mov
or
and
mov
sbb
mov
and
push
fidivl
or
push
jnp
sub
pop
or
dec
orb
sub
pop
fisubs
mov
adc
and
stos
or
adc
call
cmp
pop
mov
add
mov
lret
cltd
dec
stos
imul
aam
sbb
lock
inc
outsl
xchg
or
mov
dec
inc
aaa
mov
int
push
dec
inc
mov
lods
setno
jo
and
lds
inc
cmpsl
cmp
insl
lahf
popl
dec
out
inc
loope
push
mov
push
cwtl
nop
sbb
jle
cltd
jg
inc
jmp
lret
mov
setb
lods
dec
mov
jnp
sub
aam
add
daa
add
ja
mov
es
aas
ret
js
dec
push
imul
xchg
flds
sub
xchg
mov
add
mov
mov
push
gs
pushf
sbb
jmp
and
and
mov
in
mov
pop
inc
stos
cltd
aaa
andb
push
jno
push
xchg
push
mov
add
leave
scas
adc
setle
jp
jnp
ficoml
mov
push
jmp
xor
outsb
sahf
push
hlt
ja
inc
mov
fildl
clc
mov
xchg
cmpsl
insb
pop
inc
inc
push
subl
dec
push
mov
mov
cmp
insb
xor
inc
repz
cs
adcl
pop
sti
loop
arpl
movsb
jae
in
cmp
adc
insb
hlt
xchg
ja
je
mov
jg
cld
mov
imul
idivl
jecxz
inc
loopne
jb
rolb
in
lret
bound
cmpsl
lret
cmp
and
cltd
test
lea
lahf
ret
loop
jmp
repz
ss
mov
dec
xchg
push
mov
add
inc
int
repz
inc
mov
add
outsb
mov
aas
jge
pop
push
std
cmpsb
mov
cmp
adc
jno
mov
fdiv
sbb
imul
and
xchg
ss
mov
mov
rclb
jp
mov
push
test
mov
xorb
aad
jle
loope
xchg
and
das
pop
in
jmp
xchg
push
push
xchg
testb
data16
popf
inc
adc
loope
sub
std
xchg
mov
or
out
push
ljmp
jle
aam
jae
sub
aas
pop
imul
lret
stc
push
mov
dec
jecxz
lret
xor
lcall
std
sahf
fiadds
ficoms
outsl
sub
mov
mov
stos
pop
test
call
sbb
and
add
inc
push
jmp
cmp
into
rcl
scas
adc
test
or
and
int
add
jp
jne
jecxz
dec
mov
nop
subb
xchg
stos
mov
negl
or
sub
test
adc
and
mov
sbb
dec
mov
xor
loopne
mov
inc
nop
or
xchg
lcall
mov
out
or
mov
xchg
insl
sbb
lcall
jbe
sbbl
fs
fstps
outsl
jl
push
jns
mov
lcall
and
dec
popf
xchg
addr16
lods
popf
rcrl
xchg
cmp
or
pop
les
shrl
pop
lock
repnz
test
popf
push
test
push
or
push
inc
std
addl
inc
mov
inc
push
pop
nop
lret
add
push
cmp
jg
testl
bound
popa
lret
inc
out
and
mov
add
pop
lahf
test
outsb
sahf
test
into
or
scas
cmp
dec
negb
mov
out
lret
mov
sub
jnp
cmp
adc
xlat
pop
jmp
sub
iret
mov
outsl
inc
lcall
pusha
loope
in
in
pop
mov
push
pop
mov
sbb
js
inc
mov
inc
in
mov
add
in
popa
jle
pop
pushl
leave
xlat
inc
das
loopne
adc
shl
and
or
or
xor
rcrl
popa
sub
push
or
xor
pop
lahf
push
daa
pop
dec
fsubp
add
ret
push
test
loop
sbb
leave
cmc
jns
cs
int3
lods
push
lods
and
clts
cmpl
aam
sub
push
pop
ret
mov
xchg
je
push
in
int3
movl
xchg
mov
or
stos
shll
or
jae
mov
aas
addr16
cltd
sbb
adc
add
iret
add
inc
push
pop
or
mov
cmp
sahf
mov
or
dec
jb
lock
mov
and
dec
imul
xlat
mov
cltd
cs
push
xchg
out
ja
movsl
jg
fistpll
repnz
mov
cmp
mov
push
cli
popf
loope
pop
inc
pop
dec
imul
aam
pop
dec
xchg
lds
and
dec
sub
jnp
subl
shlb
push
pop
add
in
jno
daa
sub
pop
repz
ljmp
in
dec
inc
jmp
pop
rorb
push
push
ret
cmpsb
aas
stos
mov
cmpsb
rcll
in
and
cmp
es
mov
mov
inc
jg
aam
sar
cld
cli
inc
in
test
push
insl
sub
pop
popf
mov
out
pop
cltd
mov
pop
jb
jl
add
xor
pop
push
dec
pop
or
fiadds
fldl2t
outsw
or
jp
jle
pop
mov
loop
lods
inc
ds
aaa
movsb
decl
xchg
outsl
dec
cltd
scas
mov
pop
or
mov
add
fistl
cld
mov
ret
imul
mov
mov
xor
jne
mov
jg
imul
sahf
pop
mov
xor
and
movswl
sub
inc
mov
jo
push
in
adcl
addr16
pop
inc
sbb
pushf
jae
fmul
jecxz
xchg
sub
shr
subb
test
xlat
push
mov
test
mov
mov
ds
insb
adc
loope
mov
lcall
and
pop
cli
insl
iret
cltd
cwtl
mov
aam
insb
ds
mov
mov
mov
xchg
out
incl
orl
data16
mov
and
cmp
inc
adc
movsl
rcll
or
sbb
mov
jmp
cwtl
movsb
lret
rcll
adc
jle
xorb
fidivs
imul
imul
cli
nop
jns
popl
out
popa
push
adc
inc
cmpb
xor
inc
int3
and
clc
mov
hlt
nop
icebp
mov
pushf
cmp
mov
sti
test
nop
movsl
cmp
push
cmp
popa
out
nop
pushf
jle
andb
sub
je
pusha
popf
test
scas
dec
inc
xchg
lea
stc
jnp
cmp
mov
and
inc
sti
fisttpll
ret
push
pop
stos
fwait
mov
dec
dec
test
int3
shl
loop
add
ds
mov
subl
daa
dec
andb
pop
and
cmp
jbe
mov
ss
cmp
xlat
cmp
andl
sub
jae
and
addr16
pop
mov
mov
cmp
dec
push
sub
adc
inc
scas
dec
or
fwait
adc
in
scas
lea
cmp
push
insl
out
ss
cmc
scas
cmovne
inc
lcall
sbb
repz
cmpsl
insb
nop
add
and
sub
cmp
les
add
testl
sub
adc
rcll
xchg
pop
jns
fists
add
xor
xor
dec
mov
fsubr
pop
jg
imul
je
in
daa
cmpsl
lahf
jle
stos
dec
repz
xlat
incb
idivl
mov
imul
add
std
mov
inc
cmpsl
and
cmp
ret
popf
rclb
and
push
leave
add
xchg
hlt
cmpsl
iret
and
clc
into
ja
loope
test
mov
add
mov
cwtl
dec
fsubrl
imulb
outsl
push
xchg
fwait
push
fnstsw
dec
dec
jecxz
push
lea
outsb
jmp
ss
fldenv
mov
or
subb
sub
cli
inc
lret
cmc
cmpsb
rcll
mov
iret
in
outsb
jb
add
push
xor
xchg
pop
dec
arpl
lods
test
arpl
jne
out
stos
pop
jge
and
and
into
inc
sti
pop
jb
push
adc
out
cmpb
jle
mov
pop
dec
mov
sarl
push
dec
repz
sub
adc
mov
push
pop
add
jbe
in
scas
inc
xchg
int
js
dec
pop
stos
je
or
jmp
jne
jmp
or
add
in
mov
pop
fsubs
pusha
add
imul
test
cs
xor
dec
lret
xor
imul
scas
popa
adc
push
inc
mov
outsb
adc
push
out
shrl
pusha
xchg
ss
xor
cltd
mov
out
addr16
stos
popa
mov
sub
enter
xchg
add
cmp
insl
jns
nop
jns
mov
sbb
mov
adc
les
in
outsb
push
fwait
shll
xchg
aas
ja
jne
jno
in
gs
mov
xor
mov
cmpsl
sbb
popa
and
sbb
rorb
scas
jnp
jp
adc
mov
cmp
insb
lock
iret
mov
or
test
push
mov
push
dec
vmaxps
and
pop
xchg
and
test
hlt
rolb
xchg
insb
ret
aam
jns
cmp
nop
stos
negb
add
rcrl
mov
into
outsl
sub
addr16
push
shll
icebp
int
pop
roll
mov
popa
jne
ja
and
mov
dec
and
data16
push
ds
out
xlat
mov
xchg
and
push
cmpl
js
lret
enter
fcomps
lret
add
bound
push
lock
arpl
xchg
cmp
sti
pop
decb
cmpsb
add
xor
pusha
sbb
jge
icebp
mov
pushl
mov
add
jl
mov
inc
popa
insl
add
adc
mov
inc
fcomp
push
add
cmp
test
rolb
adc
lock
sub
dec
dec
loope,pt
dec
mov
adc
adc
adc
sbb
lods
lahf
fisubs
jae
push
push
mov
mov
fstpl
popa
xchg
mov
sarl
mov
xor
repz
mov
shll
mov
push
cwtl
and
mov
int3
sqrtps
jnp
and
lods
or
sub
mov
pop
jp
sbb
in
fisubrs
shrb
sbb
jg
lret
arpl
pop
pop
xchg
hlt
push
cmp
or
xor
iret
pop
insb
int3
mov
iret
xlat
dec
into
xor
cli
xchg
pop
outsb
add
sbb
daa
or
sub
scas
es
repnz
jns
add
fmuls
pushf
mov
pushl
pop
cmpsb
rcll
fs
lea
insl
or
dec
push
sub
insl
and
fiadds
push
add
cld
mov
xor
call
int3
out
aas
xor
call
test
cltd
xor
loopne
push
cmpsb
popf
sub
inc
leave
jo
add
pushf
xchg
lcall
xor
mov
mov
roll
iret
jno
sbb
mov
jbe
xchg
es
and
dec
aas
jae
or
jne
sbb
cld
mov
cmpsb
jbe
out
sti
push
fcompl
pop
shl
test
sarb
je
cmp
mov
and
and
loopne
mov
int
xchg
adc
xchg
jo
pop
mull
rcrb
hlt
lock
adc
aam
xchg
sbb
cmc
and
pop
test
test
cmp
sarl
sbb
je
and
pushf
pop
les
pop
jb
xorl
xchg
lods
popf
test
mov
mov
sub
sti
aaa
ja
shr
mov
push
hlt
scas
insl
pop
or
dec
cld
fldl
inc
and
out
imul
and
mov
jbe
in
popf
lcall
lret
inc
insb
dec
xchg
xor
cmp
loopne
jae
and
out
test
sub
popa
jmp
ffreep
fxch
das
sub
lahf
hlt
in
dec
stc
and
xchg
jne
inc
data16
popl
mov
mov
xchg
shlb
sub
and
xchg
inc
out
mov
popa
ljmp
fistpll
fisubrs
dec
sbb
adc
scas
ret
mov
xor
lahf
ret
jp
mov
addl
inc
imul
adc
mov
or
push
mov
popa
neg
fmuls
and
movsl
lahf
scas
loopne
and
arpl
inc
jo
cmp
xor
shr
les
pop
add
icebp
sahf
sbb
stc
aam
test
push
pop
daa
scas
cwtl
fs
cmp
or
mov
add
lret
les
xor
repnz
mov
int3
sbb
or
aaa
test
stos
pop
stos
shrb
cltd
pop
push
pusha
int3
aas
fbstp
std
popa
xchg
fistpll
aam
repnz
icebp
push
mov
add
cld
jbe
shr
aam
pushf
sub
divl
add
push
jle
aam
xchg
fadds
test
and
mov
stos
mov
loope
dec
push
xchg
repz
iret
int
mov
pushf
inc
scas
adc
sahf
aam
repz
es
mov
push
iret
pushf
add
dec
outsl
pushw
jnp
cmpsl
or
lds
add
cmp
and
faddl
mov
cmp
mov
cli
mov
ds
mov
imull
cltd
fs
mov
mov
cmp
aad
mov
push
pop
mov
cld
xor
and
addr16
xchg
insb
xchg
fildll
stos
cmp
lock
repnz
std
test
adc
sub
jp
mov
enter
lock
pop
cmpsl
xchg
pop
xchg
jmp
daa
push
pop
or
loope
mov
sahf
jge
es
imul
push
inc
sub
lea
jle
outsl
scas
add
xor
jno
xchg
add
rolb
mov
jnp
push
movl
in
in
pop
cmc
pop
ret
and
mov
cmp
cmp
es
xchg
in
bound
push
mov
adc
inc
jl
shll
jbe
cmc
out
xlat
dec
xchg
xchg
mov
addl
and
leave
mov
adc
pop
lret
pop
movsl
or
ja
push
xor
fcmovb
add
sbb
leave
movsl
adc
xchg
pop
cmpsb
pop
jg
jnp
fs
and
inc
cmpsb
inc
dec
push
xor
add
sahf
repz
mov
imul
xlat
pushf
ss
icebp
dec
stos
jmp
dec
xchg
pop
pop
jno
cmc
data16
sub
fisubl
add
mov
mov
mov
xorb
and
dec
stos
xor
jmp
add
popf
aam
mov
cmp
mov
arpl
sub
pop
test
movsb
int3
adc
inc
in
push
push
inc
sti
cld
int
xor
fnsave
jb
sbb
sbb
xchg
jge
sbb
cmc
cmpsl
cmpb
mov
out
fisubrs
nop
les
shrb
andb
xor
dec
shlb
sub
out
xchg
mov
lods
sahf
sub
jns
popa
imull
loopne
je
push
mov
xchg
jns
add
pushf
icebp
cmc
call
jmp
scas
scas
jae
out
or
add
push
stos
pop
push
push
add
aaa
push
stc
dec
nop
add
pop
loopne
push
mov
pop
mov
xlat
cmpsb
mov
cwtl
cwtl
jl
dec
jle
and
ret
lds
mov
jl
mov
das
daa
sar
popa
mov
inc
fsubr
addr16
inc
sub
aam
xchg
push
cmpsb
std
pop
inc
pop
pop
lahf
out
jle
and
hlt
xor
adc
xchg
mov
ret
inc
and
enter
dec
sbb
outsb
in
je
jb
ljmp
jl
outsb
dec
es
mov
jp
pusha
jo
dec
cmp
mov
jnp
scas
lods
lock
adc
sub
dec
sahf
bound
cmc
orl
in
lds
shll
mov
mov
push
out
push
pop
inc
inc
and
push
leave
pop
or
pop
pop
insb
test
push
inc
je
std
mov
mov
lret
leave
ret
pop
ljmp
mov
aas
xchg
mov
mov
sbb
dec
outsl
cmova
shll
fdivr
minps
icebp
inc
push
inc
xchg
jecxz
xlat
call
or
daa
loopne
enter
sahf
jl
or
inc
push
jnp
addr16
mov
lock
ljmp
sub
sbb
xor
orl
cmpsl
adcb
fidivs
add
fimull
outsb
sbb
add
xor
adc
adc
pop
gs
lock
adc
adc
testb
xchg
mov
adc
loop
xor
std
lcall
aas
andb
ret
xchg
or
xor
add
and
stos
mov
shrb
ljmp
loope
sub
and
cmp
jno
xchg
cmpsl
fwait
adcb
and
cmp
test
adc
out
es
hlt
pop
inc
aad
lds
mov
jmp
add
test
sbb
sub
aaa
ss
pushf
shlb
xor
cmc
pop
cmc
sar
outsb
ss
test
push
cli
jne
imul
xorl
or
jge
inc
and
pushf
mov
inc
mov
mov
in
push
mov
pause
outsb
adc
js
mov
stos
scas
out
xchg
call
das
and
rorb
mov
inc
push
rcrb
and
jb
cmp
jno
test
inc
xchg
fidivl
cmp
cmp
adc
add
mov
push
in
int
es
in
fs
fisttpll
fxam
pop
mov
cld
xor
icebp
xor
mov
pop
xor
bnd
das
loope
data16
push
enter
fwait
ret
mov
and
adc
int3
push
inc
fucomip
ds
test
pop
test
imul
mov
sbb
jecxz
rolb
cmpl
fimull
ret
insl
push
mov
mov
insl
aam
pop
test
into
fdivrs
and
mov
sti
je
ja
cmp
pop
rcrl
rolb
push
jne
sub
std
loope
push
imul
andl
xchg
shlb
negl
sub
push
xchg
ret
mov
pop
mov
int3
adcl
or
pop
adc
or
scas
in
jl
adc
ror
mov
dec
inc
dec
lret
imul
mov
xchg
add
nop
ds
lods
repnz
and
subl
bound
xchg
test
push
call
xchg
inc
push
and
mov
aam
add
ds
jmp
sub
call
scas
pop
add
push
xor
sub
xchg
pushf
in
ret
pushf
mov
xor
rcr
xchg
popa
cmp
dec
xlat
lds
cmp
les
mov
stos
push
jno
incl
in
cmc
imul
lahf
stos
ja
outsb
mov
fwait
and
stc
mov
pop
pop
stos
inc
add
ds
xchg
mov
jae
icebp
mov
adc
and
repnz
ret
ja
inc
mov
hlt
sbb
scas
es
cld
xchg
inc
inc
mov
mov
pop
mov
push
push
pop
jle
cmp
push
fmulp
jge
aam
xchg
mov
fs
outsb
imul
cmp
jns
sbb
xchg
inc
sub
jg
push
clc
outsb
mov
pop
pop
or
gs
aaa
loope
frstor
mov
mov
xchg
mov
mov
adc
mov
mov
mov
lds
shl
aaa
or
pusha
daa
cmp
mov
mov
enter
in
or
push
pop
jnp
mov
enter
hlt
xchg
dec
orl
in
movsl
sbb
sub
test
inc
insb
and
in
imul
or
sbb
xor
ffree
and
push
mov
fdivrl
aaa
ror
jecxz
cmp
mov
dec
xor
inc
fsubp
jl
sub
sub
ret
xor
jg
sbb
repz
jnp
pusha
mov
das
jl
jmp
movb
ja
xchg
push
jmp
fbstp
jnp
fcompl
inc
nop
push
data16
aas
sbb
mov
mov
andl
out
mov
aam
sbb
lock
and
sbb
into
scas
adc
mov
xchg
testb
mov
inc
ja
lock
xchg
pop
fdivs
pushl
inc
pop
daa
lahf
push
pop
out
fisubl
push
jp
pminsw
fdivs
ja
arpl
push
xchg
ds
sub
aaa
cmpsb
lahf
test
pop
pop
stos
push
mov
pop
xchg
adc
inc
dec
mov
mov
sub
into
or
adc
dec
or
out
xchg
dec
xlat
mov
mov
mov
inc
fdivr
and
mov
mov
xor
enter
add
mov
loopne
daa
loope
loop
push
idivb
daa
inc
mov
sbb
mov
rcrl
jg
mov
push
adc
fsubr
mov
andb
xor
mov
iret
mov
imul
push
cli
outsl
xchg
ret
jmp
ret
push
in
push
cli
mov
cmc
test
push
pop
inc
push
or
andb
sbb
adc
or
mov
pop
imul
cli
roll
sti
popf
mov
mov
or
inc
xchg
cli
jae
movsl
jl
cmpsl
push
jo
cli
mov
xlat
xchg
in
push
movsl
cmp
mov
mov
sahf
add
in
das
sub
iret
sbb
das
xchg
rcl
xchg
pop
int3
outsl
movb
cmp
fists
daa
jae
mov
stos
and
push
push
pop
sbb
cld
leave
inc
rol
sub
cs
das
arpl
je
xchg
in
rcll
ss
daa
out
push
ror
jno
xor
cmpsl
mov
mov
ret
fiadds
add
cmpsl
adc
jb
jmp
jmp
into
mov
cwtl
push
sbb
sti
jo
notb
ret
cmp
mov
call
xor
nop
es
fbstp
jb
lods
dec
out
add
pop
jb
add
add
loope
push
pop
das
push
push
iret
or
ja
popf
cmp
sub
insb
loopne
shrl
cld
or
sub
or
out
dec
dec
cmp
rcl
push
sbb
add
mov
inc
aas
xor
aas
test
inc
mov
dec
pop
ret
jmp
push
lods
push
faddl
sbb
sti
icebp
jnp
int
pop
rcrl
xlat
lcall
mov
test
into
test
fdivs
inc
inc
insb
or
mov
cmp
fldt
dec
scas
mov
xor
iret
sub
mov
or
sub
incl
adc
mov
cld
pop
movsl
mov
mov
cmp
add
popa
jge
lock
jbe
fsubrs
push
mov
std
sarl
and
inc
fsubp
repz
jle
cmc
daa
in
cmp
mov
fdivp
cmp
ss
out
repz
sub
popf
xchg
into
pushf
cmp
jl
pop
mov
dec
pop
pop
imul
push
xchg
or
mov
fwait
aaa
je
jns
fimuls
cli
or
cmp
mov
mov
in
sbb
inc
outsl
push
xchg
dec
shll
popf
cmp
aaa
inc
scas
mov
inc
test
add
add
xchg
out
test
stos
sqrtps
daa
outsl
or
mov
scas
pop
and
dec
pop
cmc
fidivrl
inc
cmp
xor
pusha
je
add
jne
out
sbb
sarb
cmp
mov
movsb
cmpsl
out
jp
dec
hlt
or
xchg
jo
dec
jle
dec
xor
xor
pop
jb
cltd
jmp
stos
adc
dec
aas
test
adc
pop
pop
jg
mov
cmpsb
xchg
push
ret
jp
sub
sub
cmpl
pop
push
insl
repnz
mov
in
les
inc
xor
jl
mov
test
push
mov
shrb
cli
mov
lret
jge
cmp
scas
rcl
pop
movsb
stc
fcmovbe
lret
int
adc
das
push
add
cmp
push
stos
or
mov
insb
inc
fstp
cwtl
and
jp
xacquire
sub
outsl
aad
iret
jg
push
jo
push
xor
ret
shr
and
shrl
bound
gs
xor
pop
push
xchg
inc
imul
pop
loop
dec
loope
mov
pop
xchg
lock
cltd
inc
clc
in
movsl
stos
xchg
rorb
pushf
add
add
in
and
in
mov
aaa
pop
and
xchg
cvtpi2ps
mov
scas
fdivl
xor
aaa
xchg
cmc
cltd
mov
push
rol
popa
add
mov
jle
and
push
mov
test
pop
jmp
adc
jb
dec
data16
mov
ja
sub
je
fistl
cmp
push
lret
aas
outsb
inc
jmp
daa
test
push
cmp
xchg
push
and
fstl
xor
in
sti
jnp
pop
sti
adc
xchg
cmc
or
mov
sbbb
ds
sub
xchg
mov
jae
inc
xchg
push
xor
call
test
cltd
lea
cltd
stc
fistps
dec
or
jns
inc
sub
pop
icebp
hlt
daa
adc
mov
xchg
or
shlb
lods
mov
mov
int
loopne
mov
fdivrl
mov
aam
fcmovu
cltd
push
or
sub
sbb
aad
cmpsl
pop
aad
push
icebp
and
fiaddl
scas
or
cmpsb
pop
mov
in
fucomi
cld
mov
cmp
xchg
fsubrl
gs
fdiv
push
stos
divl
gs
fwait
ret
aam
add
sbb
mov
mov
stc
xor
xchg
outsl
mov
test
stc
repz
imul
sub
mov
popf
xlat
adc
add
jge
sub
dec
jae
or
rorl
pop
daa
fwait
das
adc
das
idiv
dec
adcl
pop
sbb
or
dec
inc
xor
inc
ficomps
iret
cli
inc
pop
nop
mov
addr16
lea
mov
cmp
leave
fimuls
mov
xchg
popf
jns
mov
jmp
lds
cltd
divb
cmpsl
ljmpw
lods
and
cmp
inc
or
stos
xchg
inc
test
cmp
test
data16
lods
inc
xlat
clc
pusha
in
fs
in
sub
push
outsb
jg
pop
pushf
sub
jge
outsb
sbb
gs
cs
xchg
push
bound
mov
pop
or
ss
push
push
push
mov
dec
hlt
mov
add
add
inc
pop
dec
loopne,pt
hlt
xor
lcall
ss
and
mov
cmp
add
repz
jmp
adc
mov
popl
lock
fldcw
mov
sbb
push
icebp
imulb
cmpsb
repz
adc
aaa
push
gs
lods
movb
xor
sbb
cmpsl
icebp
add
outsl
jne
adc
cmpsl
andl
sub
js
repz
mov
pop
jmp
mov
shr
and
ficoml
push
enter
aam
mov
es
das
push
pop
xor
dec
fisubs
push
neg
loop
ljmp
ss
add
enter
leave
in
adc
shll
mov
loope
and
push
adc
movsl
cli
xchg
test
fstpl
pop
xchg
jno
lds
shrb
arpl
insb
jecxz
fstpt
or
cmp
ret
out
add
mov
rcll
or
mov
clc
ret
and
ror
repnz
push
xlat
mov
jo
icebp
jle
jae
push
jmp
or
or
aaa
ss
pusha
repnz
cli
adc
negb
leave
into
inc
in
sub
jo
addr16
add
in
xchg
dec
shlb
mov
inc
pusha
mov
pop
in
jg
xchg
lods
lock
mov
sbb
into
sti
inc
mov
out
mov
sub
fsubr
jne
js
scas
lcall
shl
cmpsl
add
mov
add
jb
ja
pop
mulb
repz
das
xlat
cli
jo
inc
mov
js
cltd
pop
add
sahf
outsb
cli
movsb
outsl
mov
fisubrl
lock
pop
and
push
test
imull
rorb
popf
addl
lahf
mov
pop
or
cltd
fstl
fisubrl
outsb
movsl
mov
sbb
hlt
cmp
clc
out
xlat
incl
lods
test
jmp
push
jne
lcall
les
mov
adc
frstor
aas
into
mov
movsl
or
jo
andb
add
sub
dec
pop
push
ljmp
cmp
adc
sbb
pop
jecxz
mov
sbb
mov
sbb
ret
enter
push
gs
mov
loope
pop
or
jno
fbstp
ret
ljmp
insb
pop
stos
ficoms
dec
jno
jmp
dec
das
int
inc
fidivrl
cmp
xchg
hlt
mov
mov
push
jns
add
jbe
std
aad
xchg
stos
shrb
sub
cld
and
das
popf
fadds
cmp
lock
cltd
jbe
xchg
dec
movsl
fistpl
sbb
jl
popa
adc
clc
xchg
jns
cli
jne
push
add
shl
sub
xor
clc
xchg
dec
adc
mov
rcrl
loopne
and
xor
out
mov
lahf
push
mov
and
jne
call
nop
sar
inc
out
xlat
or
imul
loopne
push
rolb
in
inc
push
adc
insl
enter
aas
hlt
repz
rcrb
lods
test
scas
mov
jns
xor
add
pop
cmpsb
popa
adc
aaa
gs
xchg
in
neg
cmc
mov
fidivs
cmpl
movsl
les
inc
les
lock
leave
add
add
jnp
mov
ret
test
aaa
push
jg
cs
outsb
xor
sbb
mov
pop
pusha
fcmovnbe
inc
push
or
cmp
aas
int3
cli
push
je
in
cs
mov
and
ja
fadds
mulb
lcall
xor
jmp
ret
pop
xor
std
sbb
dec
jp
mov
adc
cltd
jno
jecxz
jae
pop
jne
dec
jns
cmpsl
jge
xchg
das
lcall
paddsw
cmp
jle
lock
aad
test
stc
jle
and
adc
arpl
mov
pusha
in
scas
jns
cmp
mov
insb
xor
negl
sti
icebp
shlb
mov
aas
rcrl
or
insl
xor
imul
or
movq
daa
lea
sbb
push
loop
ds
mov
pop
fdiv
test
cmc
stc
fsub
ds
pop
jae
pop
sbbl
mov
scas
bound
scas
push
lahf
fsts
fstpt
imul
inc
add
and
sub
rol
mov
and
stos
add
aaa
jns
pushf
nop
movl
movsl
fildl
pushl
test
jl
push
xor
xchg
xlat
jno
ds
cmp
fsubrs
pop
fcmovne
scas
in
ret
clc
enter
imul
inc
js
xor
repz
int
rcrb
and
or
jg
cmp
pushf
cmpsb
pushf
int3
add
jle
mov
notb
push
add
mov
jnp
mov
push
pusha
aad
jns
mov
bound
and
push
mov
xchg
xchg
xorl
push
sarb
pshufd
pop
jmp
jo
mov
jne
push
push
adc
mov
push
ss
cmp
mov
inc
stos
mov
sub
push
jcxz
xchg
mov
in
jp
xchg
mov
lcall
pop
lahf
inc
adc
stos
xchg
cmp
test
cmp
out
shlb
les
push
stos
in
xor
loop
ret
sbb
add
push
popa
mov
imul
in
clc
clc
sahf
fsts
xchg
xchg
outsb
xlat
adc
cmp
out
subb
fimull
lock
xchg
inc
out
scas
pop
lret
bound
lea
fs
ret
insb
rcrb
shrb
cmp
movsl
arpl
inc
adc
sub
mov
rolb
adc
stos
in
mov
push
pop
push
push
dec
cltd
push
popa
rep
push
jge
stos
push
jecxz
mov
or
mov
out
imul
arpl
icebp
sbb
outsl
adc
adc
pop
pop
js
test
inc
imul
ss
push
adc
into
cmp
fisttpl
pusha
enter
addb
mov
dec
pop
mov
xor
xor
add
mov
push
xchg
data16
out
fmul
or
sbb
mov
loopne
mov
xchg
mov
test
xor
icebp
mov
dec
data16
mov
sti
rorl
jge
test
xchg
mov
movsb
adc
and
xor
xor
std
adc
es
cli
ja
sub
adc
pusha
fmuls
mov
mov
jnp
stc
push
popf
leave
in
and
pop
cmp
push
repz
out
push
lods
pop
and
xchg
push
jmp
jg
sti
jg
xchg
cli
push
push
cmp
jp
mov
gs
inc
nop
mov
add
shl
jno
and
out
rcll
cmpsl
daa
mov
mov
mov
sbb
jl
push
mov
jno
mov
stos
and
adc
cld
lret
sub
je
ljmp
lea
in
inc
pushf
clc
iretw
repz
dec
stos
and
mov
gs
lods
flds
mov
sbb
bound
xlat
test
xor
inc
dec
lock
orb
mov
mov
leave
pop
ljmp
lcall
jnp
or
mov
out
orb
push
adc
sahf
xchg
and
sub
enter
es
pop
push
and
push
es
jmp
add
out
lret
rcll
lds
and
xchg
imul
adc
pop
loopne
sub
jns
std
push
push
sbb
testb
fbld
sbb
call
jmp
dec
fcmovnbe
jo
or
pop
in
sarb
push
xorl
jno
jl
sbb
jae
cs
inc
xchg
lahf
ret
lea
sub
je
flds
pushf
out
xor
fsub
hlt
jne
cmp
push
pop
xchg
inc
jmp
fisubs
push
pop
or
adc
imul
dec
lcall
fisttps
mov
addl
popa
lahf
mul
cmp
dec
cld
push
xchg
addr16
cmp
add
out
lahf
pop
sbb
inc
sub
imul
xchg
pop
sbb
hlt
popf
imul
cltd
lds
pop
dec
push
stos
mov
cmpsl
pop
inc
icebp
fadds
pop
dec
das
sub
inc
rclb
scas
test
jmp
js
mov
mov
jp
lret
mov
out
mov
bnd
push
outsb
fwait
push
jno
xor
imul
pop
daa
or
popl
in
cmp
add
mov
mov
push
in
fcomi
popa
mov
faddp
jle
call
xor
lods
xchg
inc
dec
rcrb
sbb
mov
mov
and
in
or
sub
dec
xlat
push
and
inc
dec
add
outsl
imul
sbb
in
out
out
sti
mov
add
out
xchg
and
ss
into
fidivl
cmp
mov
jecxz
mov
hlt
push
clc
aas
and
dec
into
add
mov
mov
mov
stos
sbb
mov
adc
pop
shrl
sub
add
inc
cmpsl
icebp
pop
bound
in
fs
or
sbb
stos
movsl
dec
dec
or
scas
outsl
lds
pop
sbb
adc
pop
xor
jmp
subb
into
nop
repnz
js
stc
popa
xor
mov
push
scas
dec
shrl
inc
inc
mov
push
cpuid
aad
inc
push
mov
push
or
stc
pop
inc
sub
pop
test
test
inc
dec
rcrb
xchg
and
aas
fisttps
bound
stos
mov
or
pop
test
lahf
mov
outsl
mov
fnstenv
xor
and
sarb
sbb
cld
pop
mov
js
push
mov
push
icebp
into
jmp
mov
and
int3
jae
imul
jp
and
bound
sbb
roll
and
mov
pop
les
xchg
mov
xchg
je
scas
out
ljmp
repz
imul
mov
in
inc
jge
stos
dec
test
push
push
repz
mov
pusha
or
lret
cmp
push
jne
cli
xor
pop
mov
sub
xchg
mov
add
ret
add
lret
sarb
bound
or
inc
mov
lahf
xorl
mov
jae
clc
ret
shll
cmp
push
outsb
test
rcll
mov
add
mov
sub
inc
psrlw
sub
mov
in
orb
movsl
dec
adc
cwtl
mov
xchg
fsub
sahf
jle
xchg
inc
outsb
inc
movsl
mov
enter
xchg
ds
in
sbb
or
cmc
loopne
mov
call
fists
ja
sbb
inc
sub
inc
pop
push
lods
xchg
call
sti
sub
addr16
sbb
enter
pusha
sub
or
inc
push
cmp
sub
xchg
ljmp
movsb
xchg
sbb
sti
cmp
popa
cltd
popa
js
ja
xchg
push
push
pop
orb
xchg
cmpl
leave
jle
arpl
imul
mov
inc
sbb
add
jno
xor
sbb
in
push
xchg
mov
xchg
ror
sub
fldl
mov
push
sub
sbb
inc
jg
cmpsl
imul
inc
xor
or
mov
test
cmp
js
popf
cli
adc
pop
mov
pop
stos
dec
loope
sub
xchg
mov
push
lods
ret
xor
loopne
les
add
xchg
lea
inc
jecxz
xor
xor
fnop
stos
mov
andl
incl
scas
out
enter
imul
jae
in
push
jno
pop
or
cmp
pop
cmc
aas
xchg
cli
jo
mov
in
push
notb
xor
sub
sbbl
mov
nop
sarl
popa
data16
jno
addr16
and
dec
cld
stos
sbb
ja
or
adc
and
sub
cmp
jge
lods
xlat
add
add
mov
bound
cmp
pop
xchg
enter
sbb
ficompl
gs
lret
or
das
sbb
sub
aas
std
cmp
push
sbb
xchg
scas
scas
adc
pop
jp
imul
jmp
xchg
dec
test
mov
sar
or
sub
fildl
pop
hlt
xchg
ss
movsl
xchg
jle
sbb
or
cmpsl
jp
push
arpl
shlb
loop
dec
sbb
jo
mov
pop
ss
pop
dec
leave
or
push
cmp
int3
decb
mov
test
fbstp
cmc
into
data16
fdivs
lret
jo
shll
sub
nop
mov
mov
push
xlat
dec
gs
cmp
add
sub
rol
jnp
sbb
lock
stos
mov
jmp
or
dec
sti
or
and
addr16
outsb
push
lods
push
outsl
fcmovnb
xchg
push
cwtl
xor
iret
std
js
ficompl
mov
loop
mov
movlps
addl
movb
jnp
push
icebp
movsl
stos
and
ljmp
jnp
xor
pop
add
and
mov
pop
das
fimull
jbe
lds
jp
push
scas
lods
pop
jl
push
push
cmp
mov
push
pop
inc
ja
mov
mov
repnz
inc
mov
scas
lahf
ret
or
loope
mov
push
fadd
dec
cwtl
popa
pop
jg
xchg
outsb
jle
inc
je
repnz
nop
adc
push
push
cmp
mov
stos
call
pop
jne
mov
jle
mov
pop
xchg
jge
push
jle
hlt
loope
pop
daa
pop
cltd
clc
into
cmp
cmpsl
jp
cmc
stc
es
sbb
inc
mov
nop
test
sub
lret
stos
inc
push
cld
cmp
pushf
mov
adc
jbe
push
xchg
lcall
sahf
xor
roll
subb
inc
sbb
add
loope
cs
jecxz
adc
es
cmpsb
repz
cld
lahf
lcall
adc
push
mov
cmc
mov
leave
adc
out
in
das
and
inc
or
fistps
mov
test
fs
into
ja
adc
jge
mov
sahf
dec
add
jecxz
hlt
mov
pop
adc
jmp
imul
icebp
xchg
jg
clc
push
sbb
incl
sbb
aam
jle
clc
sbb
rcll
call
ret
inc
imul
pop
pop
fwait
cmp
fistpl
inc
jb
loop,pn
es
nop
sub
and
jbe
bound
push
in
mov
out
imul
in
push
push
push
mov
inc
int
xchg
xchg
movsb
idiv
xchg
ficoml
in
and
gs
or
or
outsb
shrb
jle
xor
lods
into
push
insb
insl
inc
or
lock
adc
inc
jle
xchg
push
test
inc
ds
dec
sbb
in
xor
in
and
mov
sahf
mov
ja
fwait
fs
aaa
sub
out
push
leave
rcr
adc
cld
pushf
pop
sahf
or
popa
push
out
arpl
lahf
mov
call
jg
pop
fldl
dec
xchg
call
mov
jns
mov
data16
jnp
stc
add
inc
add
add
push
jnp
push
xchg
xchg
add
hlt
mov
cmp
cmpsl
in
nop
mov
jns
push
iret
xor
sub
mov
repnz
jg
lahf
xchg
xor
das
inc
push
daa
jmp
rolb
dec
repz
repnz
xchg
cmc
cmpsl
mov
mov
mov
lret
sub
jbe
adc
pop
push
movsl
stos
add
rcll
fadd
push
xchg
repnz
add
mov
jae
lock
lret
push
dec
and
stos
aam
iret
jb
push
sbb
mov
call
lret
xchg
pop
divl
cmpsl
pop
inc
hlt
fcompp
sbb
mov
adc
sbb
test
mov
addr16
mov
xlat
sbbb
and
xchg
call
stos
outsb
lret
enter
insb
in
testb
mov
cmp
ljmp
loope
inc
or
inc
inc
mov
jmp
movsb
mov
and
fldz
push
js
mov
mov
je
mov
arpl
pushf
cmp
fadds
inc
xchg
mov
cltd
jno
lods
aad
test
lea
mov
ret
jp
ficoms
subl
mov
imul
or
dec
rorl
test
pop
xor
aam
xchg
hlt
mov
gs
jg
jl
lahf
or
aad
js
mov
into
pop
out
xor
or
or
dec
and
stos
cmp
pop
xorb
enter
lods
push
mov
mov
add
add
and
xchg
jnp
mov
movsb
pop
add
xchg
and
cmp
xor
jl
add
pop
fiaddl
movsb
dec
aad
repnz
icebp
sub
out
and
in
cmp
addr16
adc
in
pop
sbb
push
or
sub
call
dec
lods
push
js
and
loopne
push
mov
sub
pop
sub
mov
repz
push
inc
xchg
and
outsl
mov
push
leave
fisttpl
xor
and
test
je
fisubrl
dec
loopne
push
sub
jmp
in
mov
inc
loop
add
sbb
rcrb
jno
shlb
adc
push
mov
jp
das
adc
sub
adc
adc
mov
inc
or
stos
add
xor
rclb
mov
daa
movsb
jmp
aaa
pop
outsl
lahf
and
outsl
push
push
testl
pop
es
es
add
hlt
pop
xor
xor
insb
adc
movsl
adc
push
add
imul
cmc
cmpsb
mov
xchg
das
call
je
or
pusha
or
jg
and
fs
mov
inc
dec
imul
iret
lcall
in
or
push
sbb
inc
leave
notl
dec
imul
test
push
push
ljmp
inc
les
mov
lods
xchg
push
jne
adc
daa
shll
xor
xor
notl
pop
pop
orl
dec
adc
cmpsl
or
in
repnz
mov
mov
xor
icebp
mov
mov
jbe
push
mov
add
add
inc
mov
pop
in
mov
mov
sti
fcmovne
pushf
mov
and
adc
jle
pop
fists
call
add
lock
and
add
adc
xor
adc
xchg
lahf
data16
push
lock
pop
das
mov
jno
mov
cwtl
and
or
pop
or
daa
js
pop
in
xlat
bound
push
mov
cld
push
mov
and
xchg
adc
pop
fwait
sahf
aaa
das
jo
sub
jmp
fwait
xchg
pusha
xor
mov
stos
idiv
fisttpl
and
pusha
cmp
inc
xor
add
es
cmc
mov
xor
jge
mov
stc
mov
xabort
adc
push
jne
pcmpeqw
inc
lea
push
daa
sbb
mov
xchg
aad
mov
push
insl
loope
and
fsubr
jg
roll
lock
or
and
cltd
xchg
shrl
dec
add
cmp
lahf
jns
add
loop
mov
lock
sbb
mov
jo
jmp
pop
adc
sahf
repnz
jb
cmp
loop
int3
pop
and
adc
cmpsb
add
outsl
push
clc
imul
out
lret
mov
mov
ret
addr16
jns
xor
sbb
rclb
sti
sub
push
fmull
xchg
mov
mov
xor
mov
loopne
mov
add
daa
mov
jb
adc
pushf
int
mov
push
cmc
jne
repz
mov
out
idivl
sub
hlt
stc
das
add
dec
push
insb
sub
dec
orb
in
negl
iret
mov
adc
imul
push
ret
xor
fcoms
loope
fsubl
or
cli
pop
mov
sbb
sahf
in
pusha
inc
in
addr16
ljmp
add
bnd
jb
xchg
push
jp
push
inc
imul
out
cld
lahf
or
lock
pop
or
sbb
sub
lea
mov
pop
inc
lds
pop
mov
cmp
mov
int3
loopne
hlt
lds
lock
imul
mov
imul
movsb
and
clc
outsb
mov
rclw
fwait
outsb
mov
push
test
mov
mov
iret
stc
push
sbb
jle
add
rorb
sbbl
gs
adcb
loopne
and
stos
movsl
jl
sbb
mov
jmp
mov
jecxz
aad
ljmp
cs
pop
fimuls
movsl
mov
lret
push
sahf
lret
inc
pop
movsb
mov
push
cs
push
pop
test
cmp
std
lcall
fwait
xchg
push
pop
lods
mov
data16
js
dec
js
jns
jo
out
arpl
pop
test
mov
outsb
int3
mov
and
xor
imul
std
xchg
xchg
dec
xor
lods
bound
in
push
adc
push
jp
fwait
dec
mov
cwtl
insl
insl
xchg
inc
mov
flds
test
sub
shll
pop
cli
std
sbb
mov
jbe
jp
iret
pop
lret
push
std
repnz
push
pop
cmp
cmp
cmp
loopne
sub
add
daa
xchg
xor
ds
dec
inc
roll
je
and
jb
dec
mov
cmp
jge
sbb
lret
cmp
xor
out
sbb
test
xchg
movl
cltd
clc
sbb
icebp
push
xor
xor
ja
mov
or
lock
ds
adc
fistpll
jne
push
negb
repnz
scas
adc
jno
xor
inc
push
sbb
outsl
and
out
mov
loope
jle
outsl
sub
inc
add
pop
jp
lret
or
in
sub
pop
mov
sub
sbb
lret
dec
push
mov
cli
ret
lea
test
movsb
or
fcompl
lcall
aad
jg,pn
iret
fistpll
outsb
pop
lahf
js
cmp
adc
loopne
stc
jl
push
repz
dec
cmpsl
popa
pusha
pop
rcrl
add
mov
jns
repnz
jb
jp
movl
push
jg
and
data16
clc
clc
xchg
lods
cli
inc
inc
pop
lock
hlt
mov
or
jns
daa
imul
imul
sbb
cmp
and
insb
ret
pop
lahf
lods
dec
cmpl
negl
out
push
aaa
dec
repnz
or
gs
mov
adc
mov
pop
xor
sub
push
outsl
outsb
sbb
bound
aam
push
rolb
xchg
xor
and
jge
lock
jnp
cmc
cld
out
and
fs
lahf
inc
lods
xor
lods
lahf
out
mov
cmp
push
test
jns
out
mov
xchg
arpl
cmp
clc
sbb
test
ss
pop
out
adc
cs
sub
jecxz
mov
pop
shl
dec
rcl
ret
inc
or
dec
xor
add
xchg
fwait
loope
push
fsubr
push
ss
dec
jl
or
or
sbb
movsb
ljmp
lods
imul
shll
lea
leave
xchg
push
mov
test
sbb
xorb
loope
add
loopne
daa
jmp
in
cmp
in
mov
xchg
repnz
leave
pop
cli
dec
jge
pop
adc
insb
int3
adc
mov
sbb
add
cmpl
incb
add
mov
and
stc
les
mov
out
add
or
aam
sub
add
inc
cs
mov
adc
ret
into
shll
daa
pop
sbb
and
xchg
loop
lret
xor
adc
negl
mov
lea
sbb
insl
sub
roll
dec
pop
xor
sahf
repnz
addr16
ja
inc
jl
mov
ss
push
gs
fmul
push
iret
roll
xchg
outsl
cmc
sbb
jnp
xchg
push
test
imul
mov
mov
ret
add
mov
aam
aam
lcall
push
jae
mov
mov
mov
jnp
fistpll
dec
test
adc
fwait
mov
jbe
outsb
push
dec
adc
fcomps
int3
ljmp
sbb
cmpsb
mov
icebp
push
mov
movl
pop
hlt
mov
xor
push
mov
fs
or
xor
jp
punpcklbw
ret
inc
push
and
insl
loop
push
pusha
mov
xor
lcall
fld
movsl
cmpsl
or
xor
cmp
sbb
gs
dec
dec
and
mov
xchg
ds
dec
mov
inc
test
and
sub
stc
mov
js
int
and
lock
out
test
jne
sub
xchg
cltd
nop
add
call
mov
dec
out
sarl
inc
sub
and
negb
in
adc
xchg
push
repnz
mov
jb
fcoml
ret
int
arpl
fildl
add
jne
fcomi
out
mov
dec
sub
stos
sarl
decl
push
sti
push
int3
cs
das
mov
pop
dec
les
jbe
push
sbb
add
push
mov
repz
jno
les
jb
mov
stos
imul
nop
test
add
mov
fcom
mov
pop
jle
addb
push
pop
adc
mov
aaa
pop
lcall
sbbl
xor
adcl
xor
inc
sbb
daa
fdivs
stos
sahf
and
dec
jns
adcb
cmp
push
lahf
push
push
sbb
pop
add
pop
lret
inc
dec
cmp
stc
or
xchg
mov
call
xor
enter
pop
inc
lea
fldcw
hlt
in
sbb
test
mov
push
lds
pop
cmp
jb
jge
inc
movsb
and
pop
jmp
cltd
cwtl
int3
cmp
xchg
pushf
jae
push
jge
xor
lods
aam
cltd
jno
jbe
xor
xchg
dec
mov
mov
movsb
subps
mov
out
adc
inc
sub
movsb
ret
inc
test
push
repnz
fisttpl
leave
rcrb
push
loop
fidivl
aam
in
mov
inc
jo
xchg
fs
sub
jae
cmp
rorb
ljmp
xlat
fmulp
adc
push
mov
into
cmp
insb
push
popa
and
dec
loopne
int
and
jae
adc
mov
test
mov
loop
sub
push
xchg
sbb
repnz
cld
popa
in
add
stc
lds
xor
inc
xchg
gs
outsb
mov
hlt
test
test
xchg
jl
jne
xor
push
inc
adc
cmp
cmpsl
sbb
inc
xor
cmp
lea
sbb
jg
fsubrs
mov
mov
imul
test
sub
jns
les
iret
mov
std
inc
push
fdivrs
lods
shlb
mov
dec
adc
and
adc
mov
mov
add
xor
or
outsb
sbb
push
testl
mov
xor
pusha
lods
jnp
add
lea
push
xchg
xor
push
pop
adc
push
shlb
inc
imul
lret
inc
imul
lods
loope
rorb
sbb
pusha
or
cmp
and
adcb
inc
xchg
icebp
mov
out
rolb
sbbl
mov
fnstenv
lock
or
jae
mov
orb
pushf
cmpsl
and
sbb
fwait
push
call
adc
jnp
data16
push
stos
outsl
cmpsb
imul
leave
rcrb
aas
cs
adc
data16
jmp
xor
dec
negl
repz
gs
mov
mov
loope
fisubs
jno
dec
lret
or
mov
outsl
pop
mov
int
jnp
in
sbb
inc
mov
lock
test
iret
pop
mov
cmc
cmp
rorl
je
scas
mov
add
cld
popf
loop
push
out
cmp
in
mov
mov
cmp
sub
jmp
test
or
xor
ret
and
test
mov
adc
xchg
jp
sub
xor
push
fsub
mov
add
aas
jnp
dec
xor
xchg
xchg
aas
std
adc
or
push
movsl
loop
stos
in
pop
xor
insl
xchg
lcall
inc
das
push
add
enter
iret
jle
pop
push
rcrl
mov
and
mov
lea
and
aam
movsl
inc
adc
inc
add
testb
jbe
mov
enter
sbb
mov
sub
mov
push
test
mov
cltd
xchg
cmp
shlb
scas
stos
clc
mov
mov
lock
cld
mov
adc
scas
fdivl
cld
jg
loop
es
faddp
sar
sbb
mov
pop
cli
outsb
lcall
imul
arpl
sbb
icebp
in
and
out
into
outsb
cmp
fs
cld
repz
cmpsl
adc
mov
mov
add
ds
sub
pop
inc
inc
pop
cwtl
int3
add
in
inc
out
cltd
daa
icebp
subb
fdivrl
cli
test
xchg
stc
pop
mov
or
cmpsl
pop
mov
lret
or
sub
cmc
fidivrs
and
insl
jecxz
gs
lret
ror
sbb
sbb
lea
in
shl
int
sbb
gs
sbb
popf
in
fldcw
push
cmp
out
jle
inc
mov
mov
nop
cmp
mov
fdivrs
cli
inc
or
cmpsb
jb
or
movsb
ss
xchg
sbb
add
dec
js
sbb
loope
cmp
and
repnz
int
fwait
mov
ja
in
hlt
mov
in
aam
sbb
dec
mov
mov
aas
repnz
stos
leave
dec
sub
lret
pop
push
aam
fidivl
scas
jge
and
jne
jecxz
popf
roll
outsl
stc
mov
xchg
iret
rolb
jnp
sub
xchg
repnz
lahf
dec
mov
pop
add
pxor
xchg
cmp
sub
pop
lods
mov
inc
fbld
add
cwtl
es
mov
shll
push
mov
lods
dec
cmp
jnp
xchg
pop
in
popf
popa
rclb
mov
addr16
pop
sbb
out
insl
sbb
inc
xor
dec
pop
dec
and
iret
outsl
repz
les
and
or
jno
pop
fld
and
maskmovq
imull
mov
xchg
xchg
add
andl
mov
mov
aaa
ror
into
andl
xor
scas
xor
out
mov
pop
jmp
xlat
popf
daa
mov
mov
and
inc
add
int
js
xchg
inc
jecxz
in
xor
dec
adc
or
cmpsb
fs
adc
cld
pushf
aas
mov
cmp
push
lods
enter
lea
and
jne
cmp
sub
lock
xchg
xor
icebp
pop
in
add
jns
scas
add
repnz
scas
xchg
mov
in
sub
imul
jo
sub
and
adc
lods
add
xchg
push
pop
dec
cmp
jo
mov
aaa
out
out
dec
fdivl
inc
xchg
adc
adc
cmp
xor
sbb
ds
enter
and
scas
ss
ja
xor
cmp
mov
or
das
cs
dec
inc
mov
jecxz
mov
hlt
lods
mov
sbb
cs
jnp
mov
and
sub
mov
jne
test
cmp
movsb
in
out
mov
imul
add
movsb
pop
jmp
mov
fistpl
and
les
add
lcall
fwait
mov
mov
loopne
cli
testb
movsl
or
xlat
mov
movsl
pop
dec
or
cmpsb
sti
sub
push
mov
sub
pop
mov
and
or
dec
pop
js
lock
adc
push
mov
mov
cwtl
lar
jb
inc
xlat
cmp
jb
setae
jle
mov
ds
aaa
inc
inc
cmp
aam
fwait
mov
push
inc
and
nop
and
or
test
dec
test
aas
cmp
dec
dec
xchg
fsts
inc
add
or
jle
shlb
popf
push
jle
test
int3
jbe
lret
cmpl
pop
rorb
pop
cmp
xchg
out
xchg
fistpll
lahf
mov
xor
jp
sbb
mov
ret
and
mov
jl
fcomps
inc
pop
bnd
rcl
int3
xchg
lock
out
cmp
bound
cs
pop
mov
fsubs
or
pop
loop
mov
add
ja
lods
lods
pushf
inc
push
and
dec
mov
das
pop
xchg
xchg
data16
jae
pop
mov
out
pop
hlt
jge
lods
add
add
sbb
fwait
jge
je
fcomps
dec
cmp
jno
mov
sub
pop
pop
cltd
add
adc
or
mov
push
jns
push
adc
pusha
movsl
in
inc
mov
jge
sbb
cmp
cmc
pop
pusha
out
adc
into
add
enter
add
negl
pushf
jbe
mov
cmove
mov
inc
stc
cmp
inc
lahf
rclb
cmp
scas
jecxz
dec
into
jle
je
xchg
rorl
cli
pop
adc
aad
xor
fisubs
sbb
xchg
insl
mov
xchg
pop
mov
pop
xchg
outsl
pop
sbb
jbe
inc
test
aad
data16
xor
enter
idivb
cs
cmp
leave
cli
jne
andl
lods
scas
lret
sbb
adc
xlat
xchg
stc
xchg
in
bound
fstpl
in
sbb
sub
repz
inc
mov
xlat
mov
imul
push
lods
xor
mov
stc
scas
repz
lock
out
pushf
xchg
sti
mov
dec
pop
mov
loope
xor
in
cmpsl
and
rcrl
sbb
adcl
jl
test
sbb
call
insl
cwtl
movsl
fdivl
inc
mov
inc
pop
in
cmc
nop
and
je
repnz
scas
cmp
inc
adc
jp
jmp
fwait
jle
sub
adc
jl
cmpsb
imul
pop
jns
push
jns
lret
xchg
fsubl
bound
arpl
data16
dec
inc
fwait
rorb
xor
data16
push
pop
inc
jb
jno
mov
jbe
enter
icebp
jne
out
xchg
pop
leave
into
adc
xor
mov
outsl
test
jns
flds
insl
push
xor
xchg
pop
mov
jnp
inc
lock
push
lret
mov
xchg
ljmp
jp
adc
add
les
mov
or
adc
sub
mov
jbe
movsb
and
aam
stc
pusha
mov
and
cmpsb
filds
xchg
xchg
pop
lods
scas
add
insl
jns
ljmp
push
sub
or
movsb
inc
xor
adc
daa
sbb
fwait
jle
adc
jle
andb
pushl
int3
lahf
daa
mov
jo
mov
shl
push
or
xchg
icebp
ja
cli
pop
test
enter
vdppd
inc
dec
fwait
lock
sub
cmp
dec
cmpsl
shll
sahf
sub
call
mov
mov
nop
push
sub
adc
xor
add
dec
push
std
cmpsl
xor
mov
test
pusha
ja
hlt
js
and
scas
mov
cs
loope
sub
add
cli
out
sub
std
int
push
sahf
push
shlb
cmp
es
gs
xchg
inc
popa
lds
repnz
and
pop
shll
imul
repnz
xor
js
faddl
xor
div
movsl
or
dec
xchg
arpl
cli
xlat
fldenv
inc
lahf
cmp
mov
pop
push
adc
inc
lock
mov
mov
mov
lret
xchg
in
mov
sahf
int
loop
sub
add
outsl
push
cmpb
repz
dec
hlt
push
pop
adc
sub
nop
pop
arpl
mov
inc
add
sbb
addr16
inc
repnz
je
icebp
xor
mov
dec
sub
sub
dec
mov
mov
or
dec
ss
dec
xchg
fistpl
iret
out
dec
outsl
pusha
or
aas
add
cltd
movsb
enter
mov
push
mov
fcoms
jg
cld
push
jecxz
bound
push
bound
cs
sub
mov
push
mov
jle
imul
lret
jbe
jmp
mov
push
or
repnz
mov
mov
dec
cmp
adc
inc
mov
xchg
mov
sub
inc
rcll
cmp
hlt
mov
push
pop
mov
lret
stos
mov
cli
out
jp
adc
ds
and
ficoms
pop
adc
icebp
xchg
imul
cmp
and
hlt
jl
xor
mov
sub
cmp
adc
adc
aam
mov
mov
enter
add
sbb
test
cmc
scas
pusha
ss
inc
call
das
pop
push
jnp
pushf
loope
out
sub
std
sub
movsl
in
xor
sbb
lds
in
add
mov
fbld
mov
pop
cmc
mov
dec
nop
cmp
mov
dec
inc
mov
cmc
jmp
pop
lcall
call
or
push
pop
faddp
test
fwait
shr
aas
sbb
addl
adc
lock
stc
mov
dec
sbb
pop
ss
mov
les
xchg
stos
pop
jo
sbb
cmpsl
ljmp
push
insb
mov
loope
push
movsl
cmp
or
lea
xchg
push
mov
dec
stc
fnsave
pop
adc
sub
jb
jae
sub
in
inc
sbb
je
fsts
push
xchg
inc
ret
mov
inc
rcrb
mov
lret
nop
pop
dec
fs
orb
jle
dec
push
sub
add
ds
pop
cwtl
lcall
pop
cltd
das
pop
mov
pop
lods
into
iret
or
leave
out
int
lahf
push
pusha
dec
xchg
jmp
push
xchg
lods
mov
cmp
insb
jl
fnsave
cli
lahf
pop
ss
xor
add
cmp
out
cltd
sti
popa
mov
sbb
push
jno
adc
cmpsb
movsl
cwtl
movsb
loopne
jp
pop
mov
adc
aad
jmp
adc
mov
cwtl
lcall
mov
adc
cli
cltd
and
mov
sbb
jb
fwait
les
call
dec
aad
or
xchg
pop
lods
and
mov
sbb
mov
adc
xor
inc
pop
jg
movsb
pop
xchg
das
mov
js
rcrl
lcall
test
push
pop
pop
mov
inc
push
out
sub
mov
mov
out
mov
sahf
sti
bound
or
mov
or
rcrb
mov
mov
xor
outsb
cmpsl
adc
and
xorb
inc
push
insb
outsb
pop
insl
les
nop
shr
loope
jno
pop
dec
icebp
xor
shl
xchg
mov
aad
pop
call
addr16
loope
cmpsb
lods
sbb
movsb
adc
in
sti
sub
std
jge
shl
scas
sbbl
mov
push
push
jmp
arpl
push
mov
cmpsb
lock
mov
mov
cs
mov
cmc
pushf
or
xchg
enter
pop
bound
fxch
mov
fistl
add
clc
inc
dec
daa
jg
gs
out
mov
ss
xchg
insl
or
inc
scas
in
push
mov
and
cli
je
lds
loopne
pop
pop
add
cmp
fcoms
in
nop
inc
and
je
test
or
out
sbb
insl
push
lock
mov
jnp
ficomps
inc
sbb
out
stos
cmpsl
jns
movsb
outsb
nop
cmp
jecxz
jmp
xchg
gs
and
repz
mov
and
pop
hlt
fimuls
and
push
lahf
pop
mov
xchg
aaa
sbb
mov
daa
xchg
sbb
in
jne
lods
into
mov
dec
inc
enter
out
cmovno
ljmp
inc
nop
jb
or
fldt
loope
jno
cmpsl
in
out
sub
pop
cmp
xor
jno
xchg
fnstsw
les
mov
cltd
add
pushf
adc
xor
adc
inc
jmp
nop
sub
ret
mov
jo
cmpsb
movsb
inc
mov
or
push
sub
into
jl
in
xor
xor
push
inc
xor
or
sbb
inc
xor
popf
jle
sti
pop
imul
fcmovu
std
enter
pop
out
fdivp
shrb
push
mov
insb
xchg
mov
aad
xchg
jno
test
mov
rorb
lock
cli
inc
nop
lret
mov
inc
stos
notb
cmp
lods
lret
call
fwait
repz
rcrb
shlb
add
xchg
sahf
int
sbb
fistpll
push
fiadds
arpl
cmp
adc
and
inc
cmp
scas
out
notl
xorl
inc
xlat
mov
add
test
mull
sbb
mov
ja
pop
icebp
int3
mov
push
sbb
xchg
push
lret
aam
push
rep
pusha
rcll
mov
xor
inc
fisubrl
jnp
sbb
adc
out
or
and
ds
cli
jmp
je
aad
into
out
mov
jno
icebp
loope
fbstp
hlt
ret
out
inc
adcl
jnp,pn
neg
xchg
xchg
mov
sbb
push
xchg
inc
lods
mov
cmp
pop
fs
pop
jno
push
dec
pop
shrb
adc
cmp
xorb
or
out
fsubl
fimuls
inc
dec
xorl
mov
maskmovq
bound
xor
in
xchg
mov
mov
arpl
cmp
mov
clc
std
outsb
std
mov
sbbl
add
inc
imul
aam
lock
pop
pushf
addr16
int
psrad
mov
loopne
push
fidivs
popf
test
mov
sub
mov
push
dec
fsubs
pop
roll
andl
leave
and
or
mov
es
dec
or
pop
pop
dec
bound
outsb
inc
lret
ret
ds
loop
loopne
mov
mov
dec
xor
jle
cltd
pop
jbe
in
imul
into
and
ror
inc
push
cld
add
imul
ljmp
insb
pxor
adc
and
inc
inc
test
cmc
adc
push
psubw
dec
or
aad
cmp
lahf
xor
adc
or
dec
push
push
mov
stc
xchg
fs
lret
cmpsb
mov
push
xchg
cmp
fdivrl
xchg
scas
or
nop
mov
cmp
xchg
aad
mov
push
out
mov
loopne
out
popa
enter
and
ja
xchg
int3
and
mov
pop
jecxz
sub
mov
mov
popf
mov
xchg
xchg
cmp
mov
mov
sub
sti
leave
pop
mov
adc
sub
mov
pop
lods
jno
add
pop
je
pop
test
in
leave
adc
push
mov
sbb
aaa
and
aam
push
and
into
es
popa
jmp
je
and
fcomps
mov
aas
pop
push
repnz
fbstp
das
lret
mov
imull
push
sub
daa
push
or
jle
xchg
pop
outsl
xchg
dec
fdiv
nop
in
add
outsl
insl
or
xor
fisubrl
pop
mov
mov
or
fmul
sbb
xor
inc
mov
rcpps
push
push
cmpsl
dec
mov
jb
sub
xor
mov
cmpl
cwtd
lods
int3
adc
or
xchg
in
aam
dec
ds
repz
push
lods
and
adc
inc
pop
sbb
sbb
mov
dec
or
mov
imul
ja
std
loopne
scas
adc
xchg
popl
loope
std
pusha
dec
xchg
orb
mov
push
cmp
add
icebp
adc
add
sbb
fcomps
sti
mov
arpl
mov
lods
and
mov
cmp
mov
xor
shlb
xchg
pop
jmp
lods
jp
xor
push
test
imul
fldt
push
lret
in
inc
pop
out
loope
jno
mov
mov
cmpsl
mov
mov
sarb
negl
push
jmp
adc
shl
std
or
outsb
pop
mov
fists
push
rclb
loopne
loope
int3
scas
pushf
lcall
xchg
jnp
loope
ficoml
lds
push
adc
mov
xchg
push
mov
adc
in
negb
sahf
xchg
icebp
add
add
xor
call
or
cmp
lods
ljmp
sbb
outsl
into
es
mov
inc
cs
dec
lea
and
cmp
outsb
or
imul
fsubrl
dec
dec
rcrb
fcmovne
push
sbb
cmpsb
add
fnsetpm(287
fisubrs
cwtl
lods
adc
int
lock
pop
and
pop
mov
lahf
adc
dec
fiaddl
push
bound
leave
int3
dec
push
aad
sub
test
sub
jns
inc
ljmp
jb
mov
xchg
push
inc
loop
xchg
imul
dec
les
ret
stos
pop
lahf
mov
mov
push
stc
inc
and
mov
mov
mov
in
lahf
imul
int3
fwait
lods
inc
bound
fidivl
cmpl
mov
fs
mov
mov
and
jmp
lock
iret
jo
xchg
sub
cmc
out
xchg
in
xchg
mov
jmp
mov
mov
sahf
add
lock
imul
xor
sbb
xlat
add
adc
jle
inc
out
mov
rcrb
inc
jle
inc
notl
fcmovne
xor
aas
insb
push
sbb
sti
test
sub
pop
sbb
adcl
nop
xchg
scas
inc
fisubs
lods
fnstcw
mov
or
push
aaa
data16
aam
int
out
xlat
push
mov
lods
mov
add
mov
xchg
mov
and
ret
cmp
fs
or
movsl
imul
test
jo
jo
fisttpll
loope
pop
sub
sub
rcrb
out
and
andb
jl
adc
cmp
lret
sbb
xchg
ljmp
dec
add
push
in
xor
push
jae
sahf
inc
sbb
push
inc
and
pop
jae
mov
push
push
jns
xchg
fstp
mov
inc
and
pop
cs
mov
mov
mov
test
clc
inc
cmp
lahf
dec
push
jl
fdiv
iret
sbb
sbb
pop
pop
std
pop
popa
pop
fdivrs
xor
push
scas
xor
out
jecxz
pop
ja
inc
cwtl
jnp
popa
mov
fmull
std
int
jp
dec
rcl
jecxz
leave
ret
mov
adc
lcall
sbb
fisubl
mov
test
int
mov
pusha
mov
and
fisubrs
das
fs
mov
pop
repz
adc
clc
inc
aas
lods
lret
cld
fnsave
in
pop
jg
adc
stos
and
mov
rcrl
adc
adc
dec
xor
sti
das
sub
add
inc
mov
and
popf
adc
sti
adc
add
leave
or
jg
xchg
mov
jne
ss
push
js
xchg
fiaddl
nop
sbb
sub
insl
cmpb
or
movsb
mov
pop
pop
loop
int3
jmp
inc
xor
int3
sbb
push
dec
data16
push
sub
ds
add
repz
sub
sbb
fs
iret
jl
inc
stc
aam
stc
inc
dec
xor
mov
dec
insb
jge
xchg
lods
sub
sbb
sbb
jb
ret
orb
cmp
sub
stc
cmpsb
push
dec
sub
jp,pn
sbb
ja
rorl
out
push
xor
or
es
jp
mov
sarl
nop
add
jne
mov
aad
pop
pop
lret
aas
push
pop
nop
cmp
sub
add
adcl
insl
cmp
sub
fnstsw
jg
out
jb
movsb
out
lds
repnz
clc
decb
stc
jl
cwtl
mov
mov
dec
lods
test
inc
cltd
iret
sub
jb
shl
lods
cwtl
inc
xchg
pop
rorl
out
dec
push
push
dec
xor
into
push
push
aaa
xor
xchg
or
ficoms
jne
inc
in
rclb
inc
shll
push
mov
fstl
dec
lods
sti
cmp
cmp
sub
gs
jb
std
lock
jp
movsb
push
push
xchg
jg
fpatan
and
pop
xorl
sub
lods
popa
push
nop
adc
mov
out
bound
test
pusha
xchg
push
insl
nop
stos
pop
jne
mov
xchg
loope
sbb
cmp
and
sbb
fstl
push
pop
ret
mov
leave
repz
pop
cmpsb
fcoml
mov
jne
fiaddl
add
jp
push
cltd
inc
in
in
int
stos
jne
imul
and
lods
leave
and
icebp
repz
aaa
movsb
ss
inc
cmp
mov
jnp
sahf
xchg
hlt
sbb
pop
push
inc
inc
rcrb
jno
mov
popa
enter
lds
scas
es
jl
movsl
ret
cmp
and
out
push
bound
push
jg
sub
and
and
mov
insl
out
sbb
push
mov
jecxz
shl
xlat
and
mul
icebp
xchg
add
xchg
repnz
test
pop
js
js
fs
lock
xorb
pop
jmp
xor
pop
cld
mov
dec
inc
add
fstps
sbb
mov
out
jmp
call
iret
jo
insl
dec
adc
jg
mov
data16
xchg
jno
push
std
cmp
test
mov
pop
pop
inc
into
out
mov
icebp
sbb
mov
sub
inc
pop
int
clc
cmpsl
mov
hlt
or
push
dec
pop
inc
sbbb
and
mov
push
lahf
loope
repnz
and
out
add
jne
and
lret
add
iret
repz
not
adc
sub
sbb
jp
xor
or
call
int3
dec
and
dec
jp
mov
sub
pop
mov
popf
adc
insb
sbb
leave
pop
cs
sbb
shll
jo
out
mov
mov
loopne
lret
int3
adc
xlat
popa
or
add
or
in
sub
lods
iret
rol
and
test
push
popa
dec
xlat
call
out
divb
inc
jl
cmpsb
jne
test
xchg
mov
push
or
ret
dec
fld
cmp
mov
inc
inc
cmp
gs
hlt
cmp
dec
cmp
or
sbb
adc
iret
jge
fcompl
fldenv
inc
inc
jg
sub
sbbb
repz
jne
in
mov
mov
das
adc
mov
push
add
mov
adc
inc
int3
xchg
fidivrl
or
inc
and
addr16
lcall
es
shlb
out
push
scas
pop
fidivl
test
pusha
testl
mov
lods
push
arpl
movsb
and
dec
xchg
jo
nop
sti
dec
jle
lcall
call
cmp
stos
sub
addl
lds
test
fwait
jecxz
jne
test
push
arpl
daa
adc
lea
sahf
fildll
inc
xchg
push
or
dec
adc
mov
mov
add
rclb
leave
xor
or
adc
je
stos
lahf
mov
jecxz
inc
xchg
fsubrl
xor
pop
mov
jne
hlt
add
pusha
in
mov
adc
pop
ret
out
push
cmp
pusha
imull
das
ss
lea
orl
adc
addr16
pop
test
out
pusha
dec
push
sub
xor
ss
jno
sbb
leave
sbb
negl
lret
repz
lock
stc
imul
jmp
sub
cmp
cmp
pushf
cmpsl
pop
test
fwait
xor
jns
pusha
xchg
rcll
std
push
push
cmp
add
jb
pop
into
jns
push
cmp
aam
mov
in
mov
or
cmp
push
pcmpgtb
nop
repz
ficompl
or
adc
mov
stos
popf
call
cmpsb
pop
pop
xchg
cli
in
int
add
fs
xchg
dec
imul
bound
in
jmp
je
test
add
pop
and
or
enter
sarl
je
sub
negl
mov
mov
pop
fbstp
add
pop
and
jbe
sbb
cmpsb
xchg
mov
xchg
imul
mov
clc
outsb
repnz
mov
or
add
add
test
stos
cmp
push
jbe
mov
test
jo
xor
enter
testl
jmp
imul
adc
jl
xchg
iret
cmp
xlat
out
mov
pop
movsb
orb
xchg
push
sbb
jnp
push
inc
and
aam
popf
insb
jb
fwait
push
clc
push
dec
repnz
outsl
sbb
xor
dec
ret
pop
push
leave
push
cmpl
adc
cwtl
pop
test
and
pop
mov
jp
mov
repnz
ja
add
test
addr16
sub
mov
inc
pop
rcrb
adc
sbb
mov
shlb
dec
popa
push
sbb
xchg
mov
rcrl
xchg
iret
mov
push
adc
fxch
push
mov
inc
and
cmp
mov
jecxz
add
lcall
cwtl
cmp
adc
and
push
lds
sub
and
mov
sbb
inc
xor
cld
jmp
nop
adc
mov
mov
xchg
stc
xor
jp
pop
rcrl
aaa
lea
push
xchg
test
cmp
in
fcomps
push
push
jp
xchg
mov
add
mov
mov
pop
mov
jmp
mov
into
js
dec
fcom
xor
negl
pop
repz
and
mov
jecxz
fisttpll
xchg
xlat
mov
dec
pop
mov
cmp
mov
fldcw
fiadds
ljmp
and
jl
pop
stos
xorl
pop
jb
lret
bound
or
rcll
daa
call
dec
push
outsb
hlt
xchg
and
push
popa
mov
xchg
stos
jnp
add
and
lret
aas
mov
cli
xchg
lret
das
les
insl
push
cmp
sbb
in
cli
pop
pop
pop
mov
fs
pop
out
xchg
mov
sbb
fdivrs
xor
scas
popa
ljmp
enter
fs
mov
cmpb
xchg
jl
pop
inc
movsb
test
movsl
andb
aad
cmpsl
popl
cmc
mov
jnp
jbe
and
sbb
push
insb
je
xor
dec
lahf
pop
clc
push
push
xchg
mov
insb
cmpsl
xchg
movsb
lds
ficomps
mov
adc
in
aad
xchg
data16
or
popf
mov
imul
fcomip
dec
or
jmp
test
lods
cmp
push
adc
aaa
icebp
aaa
lds
jne
push
lret
lods
pop
jmp
adc
cmc
mov
push
inc
and
sub
mov
lret
test
mov
stc
gs
lcall
mov
mov
pop
sub
mov
repz
inc
sbb
pop
leave
dec
sbb
adc
icebp
mov
loope
sahf
jle
add
in
jle
mov
loop
cli
sub
sub
adc
push
gs
dec
imul
xchg
lret
xor
push
icebp
or
dec
jmp
pop
pop
cmp
pop
out
add
loopne
pop
jmp
xorb
ss
mov
push
adc
pop
notl
mov
bound
cmpsl
dec
sub
sbbb
scas
fsub
lret
repz
adc
dec
cmc
mov
xor
lds
sti
cs
and
jecxz
push
add
nop
or
xor
bound
test
jp
mov
mov
test
and
mov
jnp
pop
shll
cmp
push
aaa
xor
mov
sbb
fst
add
mov
rcrb
das
adc
add
outsl
xor
push
adc
jecxz
cmove
data16
gs
es
jl
repnz
test
jl
mov
fldl
xor
cli
xor
lret
je
add
rcl
ljmp
jae
push
mov
mov
mul
mov
jmp
sbb
lods
stos
xor
dec
fwait
push
mov
out
out
adc
idiv
out
or
test
mov
adc
jge
or
adc
jns
int
add
sbb
jl
dec
sub
push
cmp
sbb
dec
adc
push
sub
push
loope
pop
cmp
mov
aad
jp
pop
dec
inc
pop
ja
popa
je
cmp
lret
nop
loopne
mov
push
lds
shrb
inc
or
cmpsl
aaa
sub
ljmp
ja
sti
aad
cs
push
shlb
jg
clc
sub
pop
sahf
mov
and
push
mov
fisttpl
xchg
test
cmp
cmp
mov
jp
mov
xor
dec
ja
or
addr16
adc
shlb
sti
fadds
adc
stc
xchg
int
push
cmp
and
mov
lea
rcrl
dec
outsl
ja
inc
mov
or
stc
fsubrs
inc
rcrb
clc
es
cld
lods
jl
ds
stos
loop
mov
sbb
xchg
ljmp
dec
subb
sarb
lret
sub
divl
mov
rolb
stos
cmp
jne
test
addl
lret
cmp
sub
clc
push
jae
bound
cwtl
loope
sbb
in
fs
and
out
divl
push
psubq
bnd
fwait
jmp
aas
aad
repnz
in
mov
insl
ret
mov
xor
daa
cmp
adc
inc
push
pop
add
mov
pop
mov
cli
xchg
or
out
pop
sbbb
fwait
mov
ljmp
mov
stc
xor
mov
adc
mov
popf
cmp
inc
call
lods
mov
sub
iret
mov
xor
rcl
test
movzbl
xchg
stc
je
repnz
cmpsb
hlt
cmp
imull
cs
repz
aas
sbb
sub
faddl
jge
jp
xchg
add
xchg
dec
jae
push
outsl
pop
add
subl
in
jno
jae
ds
les
xchg
sub
cli
or
cmp
icebp
and
jo
movsb
dec
mov
in
movsb
cmp
lock
jge
stos
inc
mov
outsl
sbb
push
pop
dec
ljmp
jl
adc
add
add
icebp
add
push
mov
and
and
add
pop
or
stc
sbb
pop
jmp
clc
mov
lods
into
fiadds
mov
into
insb
adc
sbb
movsb
fmull
mov
fsub
cmp
negb
jno
push
out
push
dec
xchg
and
cmp
in
adc
add
lcall
add
loope
inc
ss
out
mov
gs
pusha
mov
cmp
cmp
pop
add
in
sbb
mov
or
sti
jbe
cmp
cmc
add
pop
leave
mov
add
jne
push
jbe
jmp
dec
inc
les
push
xchg
jae
jg
add
add
and
xlat
inc
mov
scas
mov
lods
add
dec
xor
and
cmpb
mov
mov
shl
cmp
test
or
add
jnp
add
jne
out
sbb
mov
lods
repnz
fsubl
adc
cltd
je
xchg
jge
movsb
stc
stos
inc
push
mov
lods
lahf
cli
ficomps
pop
push
push
jns
add
xchg
sub
or
cwtl
sbbb
lret
pop
and
jg
enter
nop
add
in
push
sahf
pop
sbb
dec
inc
loope
adc
xor
sahf
push
sub
inc
xchg
inc
jle
pop
orb
cmp
enter
jmp
fdivl
lods
cmp
or
jo
fbld
out
mov
pop
inc
outsl
in
jae
and
insb
cmpsl
clc
test
shll
or
pusha
js
flds
jl
inc
subl
insl
jbe
arpl
mov
sbb
jmp
ja
mov
cmp
pop
fidivs
icebp
push
mov
imul
push
cmp
clc
cmpsl
pop
loopne
aad
and
jmp
addr16
sub
jae
mov
shlb
pushf
in
test
repz
fwait
cmp
adc
add
scas
pop
pop
sarl
jmp
xlat
jl
ss
iret
es
repz
out
xor
and
mov
adc
cmp
mov
sub
mov
call
cmp
jnp
fs
xor
ljmp
leave
arpl
and
inc
mov
test
push
jb
adc
sbb
dec
movl
mov
push
and
add
lret
sbbl
push
push
push
fcomp
pop
inc
cltd
cld
jne
mov
and
inc
pop
aas
stos
pop
jno
mov
mov
jp
and
lea
fisubs
sub
sti
pop
xchg
fidivrl
jl
adc
xor
push
xchg
jo
xor
aad
mov
pop
pop
sbb
pop
mov
inc
in
outsl
push
mov
xor
fistpll
jae
jb
push
into
pusha
repnz
ja
mov
inc
data16
jne
pop
cmp
push
mov
dec
cmpsl
pop
add
mov
xchg
adc
or
fwait
sbb
mov
clc
ret
pop
iret
xchg
and
daa
cmp
insl
mov
xchg
mov
lods
pop
cmpsb
mov
clc
pop
mov
subb
mov
xchg
loope
cmp
inc
sti
pushf
mov
sbb
fstpt
xchg
icebp
jl
data16
addl
cmpsb
fcomps
sahf
in
fprem1
pop
jl
sbb
mov
jae
fiadds
cmpb
push
ss
mov
icebp
jnp
pop
mov
or
lock
ret
cli
test
aaa
sub
push
in
dec
adc
xchg
sbb
into
outsl
scas
out
cmp
rcrl
test
out
mov
and
ds
cmpsb
fistps
xchg
inc
cld
out
xlat
aas
mov
in
push
movsb
inc
add
std
call
adc
sbb
xor
jb
mov
sub
fmuls
fcomip
int
push
mov
cmp
cmpsl
or
jno
and
inc
pop
das
dec
mov
mov
sahf
add
jl
js
gs
int3
inc
push
ret
insb
mov
jb
pop
sti
jbe
xchg
xor
sbb
les
inc
cmc
loope
sbbb
sarb
or
push
adc
imul
jae
xlat
roll
pcmpeqd
xor
sbb
lods
jge
aam
jmp
fbld
ljmp
imul
iret
add
and
add
mov
mov
mov
pop
jp
and
ficomps
repz
loope
mov
adc
sub
mov
hlt
mov
lods
pop
sub
pop
push
pop
inc
lcall
pop
cld
hlt
mov
xchg
fadds
movsb
or
lock
xchg
and
cwtl
pop
add
out
aas
mov
outsb
adc
outsb
sbb
stos
mov
jb
push
sbb
jns
fs
ret
jnp
mov
dec
push
fcomi
pop
xor
add
mov
jl
sub
movl
insl
cmp
jns
stos
vmovntps
shrb
mov
and
adc
pusha
out
jnp
xchg
das
in
scas
ljmp
inc
xor
xchg
xlat
lods
aad
cmc
jo
dec
cmp
jo
cld
mov
mov
bound
mov
flds
stos
fwait
bound
and
jne
jg
repz
cmp
gs
mov
adc
xchg
mov
cwtl
arpl
testb
sub
mov
push
aam
rorl
push
cmpl
fisttpll
and
arpl
inc
stos
pop
cltd
add
je
ret
insb
out
mov
jnp
outsl
nopl
inc
push
cmp
xchg
out
insb
pop
fildl
mov
addb
pusha
rorb
add
inc
ss
shlb
pop
adc
test
divps
and
pop
jle
add
insl
shr
loop
and
les
iret
in
dec
and
or
popf
repz
out
imul
adc
mov
inc
in
andl
sbb
aaa
cmp
ret
testl
xor
test
mov
test
mov
pushf
stos
push
or
pop
mov
inc
or
mov
sub
lods
xchg
loope
pop
fstpl
jmp
rcll
insb
push
xchg
std
mov
pop
jmp
inc
push
rclb
aaa
and
dec
rolb
adc
push
sbb
cmp
xlat
hlt
bound
dec
mov
mov
adc
add
pushf
out
gs
gs
xchg
dec
jnp
mov
xchg
pop
push
fsubrl
shlb
in
inc
repnz
imul
dec
push
insb
jge
leave
cmp
repz
call
lcall
mov
aas
inc
sbb
loope
cwtl
lret
pop
roll
xchg
jns
jns
into
das
inc
test
std
out
out
das
inc
mov
cmpsl
fldcw
pop
int
ret
sbb
outsl
adc
xchg
sub
push
push
sub
xor
dec
cmpsl
or
dec
aam
pop
out
sub
mov
mov
jnp
mov
sbb
jbe
repz
sbb
orb
int
das
fcomp
loopne,pt
pop
dec
scas
aam
stos
xchg
ljmp
push
addr16
pop
fs
test
sbb
std
mov
ds
outsb
pop
jne
sbb
mov
test
or
test
inc
xor
js
adc
push
lret
mov
or
lret
jle
stos
inc
pop
repnz
jle
data16
jne
sbb
dec
clc
sbb
jge
sub
jge
stos
pop
pusha
jns
clc
mov
and
push
xor
inc
mov
push
or
dec
shlb
xor
xchg
bound
push
enter
aas
mov
cmp
xchg
fcmovu
loope
arpl
testb
mov
cwtl
and
add
in
xchg
insl
pop
into
adc
sub
repz
fld
inc
daa
rcrl
mov
dec
outsb
ss
in
sbb
sub
sar
lcall
mov
popl
xchg
fistpll
mov
adc
xor
and
inc
xlat
sti
mov
add
jne
bound
in
mov
mov
call
fsubl
addr16
fistpll
dec
outsb
shlb
cmp
aad
mov
int3
inc
inc
xchg
add
cmp
rolb
cmp
and
add
or
scas
cld
sub
out
push
popl
daa
cwtl
int
push
in
cmp
rcr
or
dec
or
pop
ficoml
stc
cmp
jbe
stc
xorb
cmpsl
inc
popf
fadds
dec
ljmp
incb
addr16
xor
pushf
jbe
adc
dec
enter
fistl
in
test
xchg
je
pop
xchg
icebp
fld
sub
push
int
repz
std
mov
in
gs
dec
or
test
into
xor
sbb
jb
cld
push
cwtl
sub
mov
xchg
adc
inc
imulb
iret
mov
mov
mov
dec
mov
repnz
mov
sbb
addb
hlt
push
or
sbb
rolb
cli
out
pop
into
and
xor
popa
or
add
jecxz
lcall
lods
or
sbb
arpl
mov
xchg
pop
jge
insb
outsb
stos
push
xor
test
pushf
push
icebp
jnp
stos
adc
fsubrp
popl
xchg
test
popf
in
das
in
xchg
test
leave
fidivs
test
in
lods
fwait
mov
dec
loope
nop
sub
addr16
inc
xchg
sub
pusha
cmc
mov
and
push
xor
aam
pushf
mov
inc
mov
adc
into
cmp
xchg
sub
out
or
ds
push
sub
xchg
push
or
lahf
cmpsb
and
jno
pop
sub
mov
fpatan
ret
movsb
outsb
push
xchg
cmpsl
or
pop
loop
cmp
or
pushf
inc
cmp
push
into
mov
push
lahf
sbb
adc
fsubs
pop
jg
mov
into
push
xchg
xor
imul
clc
mov
shl
add
and
inc
out
dec
in
mov
mov
and
mov
or
cs
xor
jns
mov
xchg
mov
add
lahf
cmc
adc
insl
out
inc
or
rolb
inc
dec
push
or
flds
mov
ret
shlb
lods
mov
aas
out
xchg
repnz
sub
das
aas
dec
jl
bound
lret
pushf
gs
gs
xor
dec
repnz
cmpsb
hlt
cwtl
lret
loope
push
cmp
mov
ja
sub
and
pop
jnp
addb
iret
inc
xor
fwait
orb
pop
xchg
sub
lea
or
mov
ss
addb
sub
xchg
dec
insb
pop
das
sti
mov
or
pusha
sarl
leave
sbb
add
out
mov
jns
addb
mov
add
adc
clc
xor
insb
test
out
nop
repz
loop
rorb
repz
mov
jno
xor
xchg
dec
xchg
cmp
mov
lock
mov
or
xchg
and
cld
sub
mov
cltd
push
xlat
add
in
pop
gs
scas
ja
fisubrl
stos
leavew
push
xchg
inc
movhps
cmpsl
stos
mov
jbe
mov
sarb
in
inc
mov
cld
push
int3
cmp
lds
leave
les
mov
arpl
les
dec
add
push
inc
pusha
and
out
addr16
dec
ret
bound
dec
sbb
jbe
mov
idiv
sub
loopne
mov
and
movsl
pop
lock
insb
adc
fistpll
outsl
sub
mov
sub
dec
mov
xor
mov
mov
cli
or
idivl
insb
les
pop
and
xchg
inc
test
fistpl
in
loope
pop
xor
addb
sbb
push
shlb
aas
pop
iret
jae
push
out
ja
sbb
lcall
sahf
mov
fbld
pop
lds
repz
mov
ret
jmp
and
or
and
inc
jnp
ret
jbe
fimull
in
es
mov
sysexit
aaa
fisttps
out
in
sub
cmpsb
mov
stos
cmpsb
leave
call
aas
sub
insb
ret
les
xchg
loop
or
xor
shll
sub
fstl
add
ret
dec
sarb
mov
sbb
aam
js
shlb
cmp
mov
add
sub
loopne
insb
xor
popa
shrl
lea
rclb
sbb
shlb
dec
mov
repnz
int
ja
in
fwait
sub
ja
sub
outsl
fmulp
dec
push
xor
pushf
mov
es
jne
aaa
push
orb
std
inc
pop
mov
dec
lret
pop
shlb
mov
mov
stos
push
daa
or
out
jno
sub
cmp
xchg
ret
jge
cwtl
outsl
les
adc
jl
cmp
mov
inc
lcall
sub
xor
cmp
icebp
repz
adc
rcrb
js
or
adc
sub
xor
js
lahf
imul
and
add
jg
push
dec
jge
scas
sub
pop
cmp
xchg
add
scas
aad
xor
pop
adc
cmp
mov
out
mov
imul
dec
stos
mov
fimull
inc
ret
mov
hlt
out
xchg
cltd
or
xor
das
xchg
js
fistpl
movsl
mov
or
lret
sub
in
icebp
mov
in
xchg
aas
add
add
arpl
loop
mov
enter
inc
mov
lods
inc
xlat
cmpsl
mov
jl
pop
fiadds
pop
cld
inc
cmp
out
push
movsb
into
ljmp
jg
dec
notb
lds
cmp
or
arpl
jg
sbb
das
sti
fs
aam
pusha
clc
int
dec
fmuls
cmpb
push
imul
mov
pop
cmp
jo
jno
jnp
xchg
lods
and
sub
push
cli
stc
inc
shr
inc
sub
push
stos
andb
pop
mov
dec
xor
and
rorl
dec
mov
push
cltd
fwait
cmpsl
cmp
fdivrl
out
inc
scas
mov
sub
add
adc
add
sbb
push
cmpb
bnd
shrb
inc
push
stos
cmp
test
arpl
dec
sbb
sbb
loop
adc
ret
out
adc
jb
inc
or
adc
mov
adcb
mov
jecxz
adc
mov
and
and
mov
sub
in
test
jbe
sub
mov
add
pop
push
dec
push
hlt
push
leave
push
sbb
aas
test
popa
mov
jg
out
cmpsl
inc
mov
mov
pop
fstps
dec
push
mov
sbb
xchg
inc
test
xchg
insb
fs
adc
stos
fcoml
and
jns
testb
inc
push
sub
stos
or
dec
subb
dec
or
mov
in
sub
out
inc
adc
shr
in
dec
cmpsl
fisubs
imul
stc
sbb
loop
data16
add
xor
cs
add
adc
aad
lcall
pop
xchg
pop
mov
dec
inc
cwtl
push
mov
and
flds
sbb
lock
and
dec
fcoml
jmp
cmpsl
pop
cmp
mov
leave
pusha
inc
sub
mov
xchg
sbb
lods
popf
lret
pop
add
mov
add
dec
adc
adc
fistpl
xchg
imul
orl
in
xor
inc
sub
mov
icebp
rcl
lcall
jl
je
push
daa
shrl
cmp
pop
cmpsl
sbb
cltd
stos
sbb
adc
les
setae
mov
cmp
add
insb
mov
adc
inc
push
outsb
pop
adc
mov
mov
cmp
imul
rolb
or
mov
addr16
fstp
jbe
mov
fimuls
sub
push
fdecstp
mov
insb
inc
imul
push
shll
push
bound
mov
jp
lock
mov
dec
imul
cmpsb
mov
shll
cwtl
sub
mov
negl
addb
push
movsb
in
cmp
sub
scas
data16
mov
lods
rcll
cmp
add
sbb
out
push
dec
in
sbb
or
cmpsl
xor
sbb
fwait
out
adc
fcompl
aas
ljmp
mov
jp
push
stos
pusha
pop
addr16
adc
mov
sub
xchg
and
jno
mov
jns
sub
jbe
sbb
dec
popa
lock
jg
ss
push
sti
xchg
dec
xchg
dec
test
rclb
loope
scas
in
jecxz
cmpsb
hlt
in
lods
push
dec
je
push
jp
loopne
xchg
xor
outsl
xor
movsl
cli
pop
dec
mov
sub
std
out
std
jg
aad
sbb
adc
or
jb
test
and
es
sbb
ss
fwait
in
imull
nop
cli
test
cs
sub
and
enter
sub
jmp
test
sub
add
addr16
rcrb
imul
add
dec
fmull
dec
das
adc
into
dec
pop
inc
lahf
test
jmp
jl
push
push
icebp
shrl
outsl
jbe
cmpb
hlt
pop
or
jns
sub
mov
adc
and
jle
mov
leave
fdivr
dec
xor
add
lds
cmpsb
add
ds
mov
jo
cld
int
or
inc
insl
mov
cmp
scas
xchg
or
pop
bsf
in
cmp
pop
ja
mov
mov
xor
adc
jb
mov
adc
jbe
add
dec
fldcw
shlb
mov
leave
push
jmp
stos
cli
int
inc
push
aam
xchg
inc
push
scas
xchg
cld
loope
ret
mull
sahf
aas
fiadds
cmpsl
adc
repnz
hlt
adc
xchg
jnp
jg
fimuls
lock
sbb
stos
add
mov
xchg
mov
mov
in
and
xorl
scas
add
mov
cmp
add
orb
mov
inc
popa
inc
aad
imul
jmp
loope
sbb
pushf
out
inc
test
popf
push
ja
and
int3
sbb
jnp
cmc
jmp
mov
in
and
das
cmp
and
enter
jno
or
int3
and
cmp
mov
mov
pop
jo
xor
add
inc
scas
sub
sub
mov
xchg
je
jge
mov
shrl
dec
test
mov
aad
xchg
sub
push
mov
mov
je
adc
and
or
int
cmpsl
loop
fstps
fwait
dec
or
or
fimull
es
loopne
leave
addr16
push
sahf
sub
xor
push
fs
inc
popa
inc
dec
pop
insb
sbb
xchg
int3
xor
and
cwtl
push
outsl
shll
pop
shlb
loopne
popa
addr16
xlat
icebp
outsl
dec
sub
cmp
popf
shlb
stos
insl
mov
scas
arpl
jnp
xor
pop
and
hlt
jb
mov
push
dec
pushf
jl
or
pop
inc
inc
subb
jno
pushf
push
stos
inc
jnp
mov
mov
test
popl
lret
mov
divb
leave
std
cmp
ss
or
outsl
into
icebp
in
sub
xor
outsb
or
adc
mov
push
div
xor
and
test
pop
insl
bound
inc
push
stos
fcmove
sbb
add
mov
push
sub
adc
jb
push
test
daa
add
andb
fisttps
xchg
cmp
inc
loopne
pushf
pop
cmpsl
add
pop
lahf
jp
xchg
push
shlb
push
xor
scas
or
jns
scas
push
lock
das
lret
cwtl
into
shl
dec
push
inc
pusha
int3
pop
mov
fwait
cs
mov
push
out
hlt
std
insl
push
andl
sub
xor
jp
mov
and
daa
push
mov
pop
icebp
xchg
mov
jmp
xchg
mov
inc
mov
shrb
and
lcall
pop
mov
inc
hlt
jb
sub
out
jns
xor
mov
adc
jo
push
aaa
stos
test
cmpsb
sti
adcb
inc
mov
jp
je
out
stos
dec
push
rclb
adc
loop
bound
xor
out
inc
stc
roll
dec
stos
and
jge
push
test
push
inc
add
adc
aaa
dec
adc
pop
mov
mov
lret
mov
out
insl
repz
xchg
fcomip
inc
ds
xor
pushf
push
imul
jne
xor
inc
jne
xchg
popf
inc
xor
mov
cs
jp
add
outsl
iret
mov
dec
cmc
lret
idivl
xor
adc
push
jg
adc
cmpsb
pushf
jge
adc
push
add
pop
jnp
and
pop
and
hlt
jae
addb
nop
pop
mov
mov
out
adc
mov
das
loopne
add
lods
or
popa
ret
cmp
mov
cmp
hlt
fdiv
sbb
aaa
pusha
sti
add
xchg
popf
movsl
cmp
pushf
int
adc
inc
pop
add
xorps
imul
jecxz
les
dec
sbb
inc
lahf
idiv
pop
outsb
stc
in
jle
and
cs
clc
mov
fwait
nop
xchg
cltd
popa
jl
or
add
fs
jmp
push
jo
pop
bound
scas
add
pushf
mov
push
mov
call
lods
push
cmp
xor
xlat
or
push
push
scas
add
fmul
jbe
ffree
stos
sbb
xchg
aad
cli
inc
push
pop
out
inc
es
into
mov
pop
cmpsb
xchg
or
xchg
lods
jnp
repnz
mov
leave
fs
dec
subb
ja
aam
ret
repnz
les
shlb
fidivl
cmp
jns
mov
xchg
sbb
sub
frstor
call
test
cmc
notb
cltd
push
adcb
cli
sti
push
outsb
ret
mov
add
xor
xchg
mov
mov
outsb
dec
mov
aam
lds
xchg
mov
and
sub
or
or
mov
xor
sub
loop
add
stc
in
jbe
bound
mov
xchg
mov
test
jbe
loope
cltd
int3
xor
mov
sub
xor
xor
jecxz
arpl
cmp
mov
les
out
loope
sahf
stos
and
sub
mov
fwait
mov
mov
movsb
scas
stos
jp
mov
aas
sbb
and
rorb
adc
sbb
lods
lret
mov
mov
loop
or
ret
shr
popa
mov
push
test
sub
inc
pop
testl
insl
sub
mov
sbb
cmp
sbb
jae
cmc
enter
into
sub
jg
jmp
pop
imul
popa
and
loop
leave
lret
xlat
cld
push
pusha
xlat
imul
adc
push
mov
orb
jb
cmp
roll
add
out
xor
xchg
jle
jmp
js
stos
mov
sbb
cltd
leave
hlt
icebp
popf
loop
mov
xor
lods
movsl
cmp
mov
lods
cmp
decl
ret
jnp
xlat
xchg
loopne
push
and
les
xlat
jns
enter
insb
nop
sbb
sub
lods
mov
repz
lret
add
adc
cltd
movsl
movsl
mull
mov
xchg
aas
mov
fucomi
out
jne
cli
dec
rolb
cltd
mov
cmp
jae,pn
or
xchg
xorl
xchg
cli
push
in
enter
or
scas
xchg
jae
sahf
push
pushl
sbb
movsl
xor
pop
imul
pop
sub
mov
jl
xor
mov
enter
push
add
ret
mov
addr16
mov
inc
inc
pop
test
js
jb
mov
sub
jne
jge
js
insl
imul
leave
aad
dec
inc
icebp
cmc
stos
iret
pop
push
mov
shlb
fsubrs
dec
sti
jns
jae
mov
mov
pop
sbb
out
int
jo
fwait
call
xchg
mov
cmp
mov
and
ret
jae
xchg
pop
mov
cmc
iret
cmp
cli
in
int
jp
ret
in
iret
ljmp
ret
sub
outsl
dec
dec
fsubp
mov
into
lret
xchg
fimull
xor
fs
ja
scas
push
std
jmp
push
mov
xchg
inc
adc
aas
roll
mov
xchg
xchg
mov
jl
addl
sbb
rcl
sub
adc
inc
or
mov
pop
dec
jecxz
xor
pop
xor
xchg
push
stc
adcb
xchg
cld
fstpt
cmpsl
stos
xchg
adc
stc
add
cmc
fwait
and
cld
clc
loope
stos
sub
cmp
pop
je
orl
cmp
popa
out
mov
sarl
jmp
cwtl
mov
fbstp
shr
sub
or
dec
cmp
incb
cwtl
je
rcrl
push
mov
dec
sbb
and
mov
lret
mov
sub
outsl
sbb
repnz
out
and
jae
push
pusha
sub
icebp
inc
dec
fmull
ficoms
mov
loop
pop
sbb
fisubrs
loopne
ja
sahf
add
data16
mov
sub
pop
pop
arpl
pop
and
jle
call
mov
mov
add
mov
sub
adc
loope
cs
push
jp
push
sbb
ss
inc
adc
fisubrl
imul
stos
pop
std
jp
adc
and
inc
ja
push
jle
or
push
das
or
aaa
inc
or
and
mov
negb
js,pn
into
imulb
sub
scas
jmp
mov
jnp
pop
lea
shll
mov
xor
mov
lds
mov
or
fimuls
sbb
rorb
movsl
adc
add
xchg
movsb
inc
iret
mov
mov
daa
xchg
push
ret
scas
mov
cld
mov
into
outsb
out
cmc
ds
pop
imul
jmp
adc
outsb
push
shl
pop
les
and
clc
pop
call
ljmp
scas
fcoml
dec
push
jg
pop
ret
inc
sti
insb
mov
idivl
shrl
add
ja
dec
push
lds
es
sbb
ja
mov
adc
test
jmp
movsb
lds
or
mov
daa
cmp
push
adc
sti
xorl
add
cmp
lods
sahf
js
push
cmp
mov
sbb
dec
fdivr
imul
sub
popa
push
push
sbb
mov
pusha
addr16
mov
pushf
push
jne
mov
in
lcall
jle
push
mov
pop
lods
dec
cmp
and
or
pop
jno
push
jg
fisubs
lea
inc
ljmp
aaa
js
pushl
test
pop
shll
mov
inc
push
test
in
ss
insb
pop
sahf
inc
pop
loopne
jg
lret
sbb
mov
inc
lods
inc
mov
decb
jge
cmp
in
js
test
imul
jl
icebp
fdivrs
jl
or
or
fucomp
das
xor
and
jne
sub
sub
sbb
flds
fwait
movsl
aad
aad
dec
pop
nop
mov
xor
push
mov
mov
lret
shrl
je
sbb
ret
mov
test
mov
jmp
inc
and
cld
mov
push
sub
fmull
push
dec
fxch
ret
lock
cmp
cs
inc
push
pusha
testl
inc
and
jae
jne
orl
and
test
sub
mov
mov
push
push
cmc
cmp
dec
ficompl
sub
cmp
out
xor
sub
shlb
lds
decl
cmp
rol
mov
xchg
lods
push
sub
in
push
hlt
iret
ret
sti
mov
xchg
insl
lods
out
in
push
adc
mov
int3
sti
lea
cmpsb
xor
lods
incb
stos
jae
sahf
pop
xchg
adcb
push
pop
popf
and
mov
fimuls
bound
cmp
inc
popf
jo
jo
pop
adc
movsb
jo
xor
cmp
xchg
divl
xchg
inc
xor
and
sub
jg
push
adc
test
leave
mov
dec
pop
xchg
ljmp
sahf
cltd
push
jg
jmp
adc
in
jno
cmp
mov
cmpsb
fistl
scas
aaa
pop
adc
dec
jnp
outsb
jo
call
dec
add
cmp
test
adc
imul
daa
cli
je
rcrb
ret
add
mov
mov
or
pop
ja
loope
seto
push
das
jecxz
sahf
cmp
xchg
ret
movsb
test
fwait
dec
sbb
ficomps
int
in
jne
cmp
adc
cmpsl
mov
rol
add
xchg
lret
or
imull
inc
add
cmp
and
sbbb
xor
icebp
mov
hlt
das
and
orb
push
pop
push
xor
insl
mov
mov
js
jbe
or
aad
jge
fs
nop
imul
inc
fstps
dec
ja
cmp
adc
cmp
mov
or
pop
mov
call
fs
out
lahf
ss
push
xchg
cli
mov
mov
mulb
adc
das
add
xor
jbe
mov
test
or
les
sub
cwtl
add
mov
cmp
xor
cs
std
lds
shl
in
xchg
dec
jge
in
jl
lea
inc
mov
mov
andl
mov
mov
add
adc
dec
imul
in
mov
rolb
icebp
outsb
dec
or
daa
sbb
int3
mov
subl
pop
fsubrl
stos
mov
pop
mov
arpl
dec
mov
cmpsb
sub
movsb
lea
in
cmpsl
test
push
xor
inc
or
ror
push
xor
add
in
jbe
mov
adc
aam
ds
testb
mov
mov
jae
xchg
iret
ja
sarb
andb
pop
mov
sub
inc
xchg
jns
inc
das
cli
and
lock
shrb
mov
push
outsl
push
lea
dec
jno
dec
inc
frstor
mov
test
xchg
cli
or
stos
pop
outsb
pop
mov
and
xchg
xor
int
cltd
cmpsb
pop
push
loopne
sub
push
sbb
icebp
mov
lahf
mov
mov
stc
adc
sub
mov
jns
jmp
arpl
icebp
dec
stos
jecxz
scas
out
jo
call
jo
pop
xor
lret
incl
xor
lds
mov
arpl
gs
pusha
aaa
push
jo
dec
and
cmp
mov
mov
cs
fimull
adc
add
leave
adc
rcr
sub
mov
lock
adc
pop
sub
push
sub
dec
loope
cmp
out
cmp
and
imul
adc
rcr
sti
and
jnp
push
mov
mov
repz
addb
cmp
mov
loopne
xchg
sbb
stos
mov
shr
mov
das
sub
lret
mulb
insb
adc
sbb
sub
test
add
testl
int
cmp
jo
pushf
dec
rolb
sbb
xlat
insl
leave
and
push
sub
add
movsl
mov
sahf
cmp
push
divb
dec
pop
lret
shr
ja
dec
sti
mov
dec
pop
inc
mov
push
jecxz
fldt
dec
sbb
imul
fwait
push
and
jbe
pop
jmp
mov
insb
inc
and
xor
sub
jno
scas
je
movsl
out
xchg
pop
mov
jno
arpl
in
mov
lea
gs
mov
mov
test
mov
outsb
pusha
sub
mov
jo
into
jne
add
ret
mov
sti
inc
mov
lret
mov
pop
inc
mov
inc
enter
sub
imul
cmp
pop
test
mov
out
push
out
jecxz
fs
ds
jle
loope
push
aam
pop
fwait
movsl
sub
int3
dec
shl
daa
pop
xchg
cmp
mov
add
xchg
xchg
cmpsb
les
and
into
idiv
stc
xchg
movsb
test
xor
rcrl
cmpsb
sbb
xor
dec
out
orb
xchg
ret
and
pop
cwtl
adc
push
rcll
add
lock
leave
inc
or
out
mov
xor
imul
ret
call
cmpsl
inc
in
std
dec
jge
mov
pop
fbstp
jb
inc
aas
in
inc
mov
out
cmp
das
or
scas
je
scas
sub
sbb
dec
into
out
repz
sub
or
sbbl
cmp
leave
xchg
out
and
icebp
scas
push
mov
cmp
lahf
lcall
and
sahf
leave
or
ret
ret
cli
or
adc
cmp
ljmp
jo
mov
xor
fiadds
in
mov
cmp
loop
xor
inc
out
shlb
xor
inc
pop
aas
ret
push
sbb
xchg
inc
icebp
push
jno
rorb
sub
movsl
pop
roll
xchg
sarl
scas
testl
xor
orl
mov
aad
sbb
inc
or
push
push
mov
ss
insl
addr16
icebp
pop
pop
subl
adcl
mov
push
xchg
ret
sbb
aam
rorl
sbb
and
lods
dec
and
and
dec
lock
adcb
gs
adc
push
je
outsl
jecxz
xchg
jno
jecxz
adc
outsl
lahf
jb
adc
dec
xchg
stos
in
bound
mov
sub
ja
push
mov
shll
insb
int3
stc
mov
ret
mov
mov
jg
ret
mov
mov
mov
cmpsl
repz
sbb
pusha
sahf
stc
mov
mov
test
xchg
shl
mov
mov
or
jb
cmpsb
jge
dec
and
mov
ds
mov
jno
movsb
sti
jmp
rcrl
out
mov
inc
sub
push
adc
inc
dec
icebp
or
scas
clc
nop
nop
jbe
fists
call
jl
xchg
dec
sti
inc
xchg
ret
and
mov
pop
xchg
scas
jbe
enter
fildl
xchg
push
lds
sbb
push
adc
push
stc
xchg
push
outsl
and
rol
add
jmp
pop
ds
xchg
xor
lea
mov
jmp
imul
push
out
fwait
xchg
xchg
leave
orb
add
sar
call
or
push
add
mov
testb
lret
ss
bound
push
push
add
enter
outsb
addb
ss
test
xchg
test
and
jmp
bound
or
sub
addr16
ffree
and
loop
pop
lret
adcb
xchg
hlt
jae
push
cmp
cmpsb
test
fmul
dec
jp
mov
or
aaa
xlat
mov
mov
sub
push
push
hlt
shl
dec
sbb
pop
add
stos
loope
sti
jo
mov
lret
incb
pop
and
cmp
scas
lcall
cmc
int
andb
ljmp
pop
lahf
cs
inc
call
push
or
mov
add
jle
push
mov
cwtl
jns
fstps
rcr
push
frstor
sub
daa
push
movsb
sti
adc
sbb
jb
push
pop
adc
or
cmc
jnp
dec
popf
lcall
popw
xchg
fnstenvs
sti
dec
lcall
clc
adc
fisttpll
xchg
pop
lods
xadd
cmc
pushf
sub
add
add
jl
rclb
push
sbb
fwait
jl
movsl
testl
inc
test
jns
xor
mov
ret
fldt
vpcmpeqb
testl
sahf
mov
mov
or
xor
and
push
push
xor
jno
mov
jle
mov
cmp
sub
and
lods
jp
push
add
push
mov
or
adc
cs
das
xchg
push
stos
dec
ja
int
pop
pop
jbe
stos
xor
push
xor
out
xor
into
mov
mov
dec
xchg
mov
js
lret
mov
mov
sahf
out
sub
fs
mov
push
inc
in
out
mov
inc
jb
jmp
mov
push
adc
test
xchg
dec
in
lods
or
push
or
in
sbb
jge
dec
in
inc
stc
nop
xor
pop
negl
in
mov
je
insl
xchg
sbb
mov
leave
inc
imul
repnz
jnp
cmpsb
mull
aaa
mov
hlt
sub
dec
mov
xchg
enter
push
fbstp
jbe
shll
rolb
mov
movsl
loope
mov
adc
test
cmc
cli
iret
and
in
pushf
stc
xchg
pop
jne
sahf
repz
rorb
add
sbb
xlat
cld
sub
ficomps
lds
sub
push
imul
loope
jae
decl
sub
scas
repnz
cmp
or
jecxz
add
icebp
or
das
mov
push
jge
xlat
int3
add
pop
add
push
jl
aaa
add
sub
gs
leave
dec
es
repnz
cmc
inc
mov
out
fwait
in
pop
cmc
movsb
dec
rorl
sub
adc
sub
pop
aam
and
sti
add
jp
push
dec
jmp
out
insl
mov
fdivrs
xchg
mov
add
movsl
out
shrb
cli
add
jns
and
ss
cmp
sub
ja
out
aaa
dec
leave
out
jbe
cmp
xchg
jae
or
cmpsl
inc
fsub
fwait
pop
testb
dec
xchg
push
xchg
repz
sub
leave
sti
shrb
imul
repnz
push
or
in
push
lds
shl
inc
mov
and
inc
push
lods
je
xchg
cltd
stc
or
pop
jae
cmp
push
jnp
pop
jo
xchg
and
cmp
mov
inc
loop
push
mov
jl
enter
les
cli
int3
sbb
xchg
push
in
rcr
inc
sub
xchg
push
loopne
add
and
push
pop
pop
aaa
push
dec
push
mov
push
in
mov
push
dec
popf
inc
iret
xchg
inc
addl
sti
inc
ret
sbb
jl
jmp
inc
or
mov
js
jl
test
mov
jnp
lock
add
out
dec
xor
mov
and
test
aad
test
arpl
push
pushf
jo
test
mov
jmp
add
cmp
cwtl
shll
jle
jno
cmp
out
adc
pop
cmc
stos
test
push
inc
push
jae
enter
mov
stos
jb
aad
int3
inc
add
call
adc
and
mov
inc
sub
cld
mov
cli
or
call
xchg
mov
cmp
push
lret
xchg
adc
dec
pop
stos
cmp
outsl
xor
aaa
fidivl
mov
push
out
sbb
cld
push
adc
fbld
mov
mov
xor
xor
sbb
lret
or
scas
bnd
xchg
or
mov
or
xor
jne
dec
jne
lahf
cmc
cmc
lods
adc
xor
mov
out
out
and
ja
jl
mov
xor
pop
add
jge
mov
xor
pop
xchg
js
mov
fnsave
ja
mov
adc
mov
xchg
movsl
clc
mov
sbb
loope
dec
test
pushf
sbb
pop
mov
xor
and
rol
sarl
lods
out
pop
pop
mov
mov
test
aaa
xchg
outsb
add
pop
jo
iret
cmovle
ljmp
out
sbb
jbe
test
sub
inc
jmp
or
hlt
call
sub
push
out
xchg
movsb
inc
loope
jmp
mov
pop
add
pop
mov
xor
pop
xor
ljmp
adc
or
int3
jne
pop
das
mov
sbbb
push
pusha
cmp
push
pop
jg
and
outsb
mov
lahf
sbb
mov
sbb
xchg
out
push
sub
xor
mov
sarb
add
ds
mov
out
add
or
xchg
adc
inc
ror
mov
lds
lcall
adc
sub
je
cmp
clc
imul
push
jno
imul
jns
cmc
test
pop
xchg
dec
addr16
cli
add
mov
sub
les
shrb
adc
dec
ss
mov
xor
jge
and
mov
fisubrl
sub
repz
xor
mov
sarb
mov
adcb
xor
jg
add
lea
and
rcr
or
cmp
ljmp
in
xchg
pop
mov
and
xor
je
and
sbb
repz
jle
fxch
cmp
lods
add
scas
aam
lock
test
fdivr
aas
adc
mov
stos
jns
fbld
or
popa
push
outsl
inc
daa
xor
mov
or
jg
lahf
popa
pusha
sbb
test
in
sub
sbb
mov
sahf
cmp
cs
clc
hlt
inc
push
int
push
punpcklwd
popf
adc
jno
cmpsl
sub
cmp
and
popf
inc
push
stos
in
mov
add
sbb
dec
lcall
xor
jne
hlt
mov
adc
or
adc
cmpsb
mov
movsl
loopne
fnstenv
lock
imul
pop
or
push
loop
pop
adc
push
in
push
insl
dec
pop
dec
daa
orb
mov
and
mov
sbb
cmp
mov
mov
push
test
mov
repnz
in
and
nop
mov
inc
lock
or
loopne
fidivs
es
cmp
sbb
cmp
mov
in
pop
pop
adc
lods
mov
mov
out
cmp
stc
xchg
adcb
test
into
pop
mov
stos
jns
mov
sti
cmp
ret
in
add
jnp
ror
mov
mov
ret
mov
pop
sub
in
fcomps
icebp
cmp
in
jge
add
mov
into
pop
ljmp
push
in
repnz
ljmp
adc
test
lea
ficoms
dec
rcll
lahf
arpl
or
mov
mov
push
and
scas
arpl
mov
pop
sub
cmp
scas
jnp
test
sbb
add
dec
outsb
xchg
jmp
out
and
cmp
out
pop
adc
dec
mov
jo
out
sub
mov
xchg
mov
dec
filds
inc
push
mov
fists
arpl
mov
xlat
or
cmp
sbb
dec
push
std
repnz
ret
cmp
sbb
fnstenv
push
jb
inc
pop
in
shlb
and
imul
int3
push
js
adc
rol
jae
daa
imul
jb
pop
pop
or
dec
add
inc
fnstsw
sti
cmp
xchg
push
pop
push
xor
fsts
ja
popf
lcall
popf
mov
shl
lret
inc
mov
mov
das
rcrb
mov
data16
push
sub
adc
mov
adc
dec
dec
scas
add
inc
roll
testb
inc
pop
imul
sbb
sub
int
jns
jnp
mov
popf
push
rolb
inc
lods
sahf
call
jae
scas
movsl
mov
jg
add
mov
ja
jle
mov
xchg
mov
sub
jno
bound
pop
mov
inc
dec
and
sbb
cmp
fs
xor
mov
mov
cmp
loop
test
movsl
push
cmp
xchg
adcl
fldcw
and
fbld
ficompl
iret
lea
lock
insb
gs
mov
mov
jmp
lcall
push
mov
mov
sti
push
sub
xchg
xorl
fildl
xchg
dec
xor
scas
nop
fldcw
lret
or
mov
daa
dec
jnp
pop
popw
jge
mov
mov
out
and
pop
cmpb
mov
push
dec
fbstp
xorl
mov
int
in
stos
xchg
xor
cmp
pop
sub
lahf
test
das
mov
push
in
mov
imull
jge
dec
or
jg
lods
mov
imul
aam
scas
or
hlt
jmp
call
rolb
add
icebp
mov
outsb
sub
xor
cmp
jns
pop
sbb
in
testl
aaa
push
push
or
sbb
mov
das
ds
rorl
and
sub
movsb
dec
aam
jbe
pop
mov
pusha
cmpsb
push
lret
xchg
pop
jle
sarl
xchg
movsl
cmp
inc
bound
xchg
inc
ds
push
stos
aaa
lds
fdivrs
pusha
popa
test
xchg
adc
scas
fnstsw
or
or
pop
push
shrl
jecxz
sub
jge
sbb
rorb
bound
shr
dec
aaa
jecxz
notb
pop
shl
jg
pop
cmp
inc
sahf
jmp
mov
xchg
cmpl
lret
cli
pop
fiaddl
xor
push
cwtl
int
pop
movsb
xchg
mov
xchg
cs
mov
sub
sti
xchg
mov
lds
and
mov
or
aas
mov
mov
cmp
jg
aad
inc
popf
or
rclb
dec
aad
imul
ret
js
stos
and
ret
mov
adc
sub
shrl
lock
xchg
pop
mov
sbb
pop
js
ss
adc
jl
pop
das
stos
movsb
dec
or
xor
pusha
mov
mov
loopne
mov
repz
int3
data16
xchg
mov
xchg
jp
addb
ret
addl
sbb
mov
divl
push
repnz
rolb
mov
xlat
adc
xor
stos
ja
cmp
cmpsl
pop
lock
sbb
movsl
or
lds
sti
mov
mov
xchg
sub
dec
xchg
ds
xchg
andb
loopne
jg
lods
int3
dec
push
aad
stos
iret
cld
loope
jae
std
int
lret
mov
imul
lds
sbb
cmp
cmp
dec
pop
imulb
adc
hlt
or
pop
mov
hlt
arpl
push
fildl
jno
rcll
ja
adc
mov
sub
mov
and
cmp
jl
pop
mulb
jbe
movsb
scas
sahf
cmp
jecxz
rorb
push
mov
ss
sahf
lods
dec
sub
sbb
mov
mov
jbe
and
fs
leave
and
scas
jecxz
jbe
jb
dec
and
lds
mov
and
sbb
mov
in
andl
mov
mov
xchg
lahf
inc
or
mov
mov
push
jns
popf
xchg
sbb
sub
mov
ret
mov
test
xchg
or
cmp
popw
or
cmp
inc
out
mov
js
add
mov
std
comiss
es
add
mov
lahf
and
jp
push
out
fimuls
cmpsl
pop
adc
dec
fstpt
mov
push
insb
aam
daa
jae
test
pop
into
jecxz
push
scas
aas
lcall
pusha
les
xor
mov
movsb
cmp
sub
ret
in
scas
jb
pop
or
xchg
push
testb
jnp
inc
mov
and
stos
repnz
cwtl
mov
imul
xor
push
das
jae
arpl
add
xchg
inc
movsb
xchg
sub
ss
sub
in
jo
and
or
and
fists
into
xchg
mov
ss
cmp
dec
jmp
mov
das
fbld
cmp
mov
mov
sbb
into
incb
push
sub
adc
add
jno
jno
cmpsl
push
sti
dec
and
sub
pop
or
stc
sti
rcr
push
arpl
in
pxor
push
js
imulb
fcoms
and
pop
push
fmull
cmp
scas
inc
jb
xlat
dec
movl
push
je
pop
jge
xchg
xor
mov
dec
aaa
out
mov
inc
xchg
push
decb
xlat
fs
xchg
popf
out
sbbb
add
cmp
sub
movsl
ss
jmp
pop
xor
lret
sahf
int
xchg
int
loop
sub
or
lea
loope
or
jg
fdivrs
mov
jle
call
xchg
or
sar
stos
call
pop
ljmp
jno
push
lahf
adc
push
cmp
inc
notb
shrb
mov
sbb
fwait
jmp
pop
scas
add
inc
mov
dec
pop
clc
push
aas
sub
outsb
inc
stos
ret
mov
test
cmpsl
cmpsb
frstor
ds
into
js
push
mov
ds
insb
lcall
xor
adc
les
sbb
push
or
cli
fiadds
push
mov
mov
and
test
mov
or
icebp
test
jp,pn
repz
jecxz
cmpl
psadbw
mov
cmp
pushf
mov
or
out
fwait
mov
or
or
and
pop
jecxz
inc
mov
inc
int3
push
mov
fisttps
sbb
push
stos
faddl
xchg
jb
ret
jnp
std
push
shll
push
pop
mov
arpl
icebp
sahf
loopne
bound
or
scas
imul
jno
jne
push
stos
in
test
xchg
jo
sub
xchg
inc
test
mov
pop
inc
clc
in
int3
test
mov
jae
gs
insl
lea
cmp
incb
pushf
adcl
mov
mov
pop
mov
push
jle
pop
mov
fstl
shlb
std
push
xor
sbb
push
lods
je
jne
pop
addr16
pusha
enter
push
mov
sbb
mov
es
pop
xlat
sti
sbb
std
insl
push
scas
push
or
sahf
jae
jp
int
divl
out
add
sbb
push
test
ret
out
and
test
cwtl
push
arpl
xchg
and
push
lahf
dec
out
jno
cld
scas
mov
jl
or
jns,pn
enter
pop
movsb
lods
push
jmp
das
cmp
add
fcoml
push
xchg
test
stc
mov
inc
lahf
adc
add
mov
xchg
push
clc
push
push
fsubl
dec
aaa
outsb
jbe
in
adc
or
ljmp
leave
dec
dec
outsb
pushl
dec
popa
cmp
lahf
fstps
pop
inc
mov
jb
fisttps
push
add
mov
push
das
sbb
leave
add
sbb
jne
ret
jp
addr16
lods
lcall
icebp
mov
mov
rcr
imul
xor
sbbb
dec
cmp
ss
jmp
int
jg
xchg
es
mov
pop
jmp
mov
fld
shll
cltd
jecxz
push
pop
fadd
cs
hlt
xor
mov
dec
xor
leave
mov
and
aad
and
mov
push
jp
or
or
ficomps
xchg
fidivs
stc
push
jns
inc
xor
pusha
xchg
sbb
dec
mov
xor
shlb
cmp
push
cmp
loopne
lcall
lahf
inc
push
into
inc
jae
xchg
out
movsl
mov
insl
orb
pop
add
movq
push
jmp
mov
sbb
mov
popa
pushf
sub
aam
pop
adc
mov
outsb
or
mov
mov
adc
xorb
out
mov
xchg
mov
int3
mov
aad
push
add
je
inc
dec
dec
out
loop
loope
call
mov
lea
test
and
sub
inc
and
imul
dec
sbb
sub
js
mov
dec
mov
dec
pusha
cmpl
mov
sub
dec
pop
sbb
sahf
jno
sub
xchg
mov
pop
insb
cs
aas
movsb
lea
push
ret
or
out
outsb
push
and
mov
inc
sub
cmpl
int3
lcall
jnp
emms
or
mov
fwait
leave
mov
push
cli
test
ret
pop
loop
pop
mov
xor
mov
push
mov
inc
xorb
scas
push
ja
loopne
bound
cmp
cwtl
lret
movd
xchg
aas
adc
push
adc
mov
ret
pop
incl
mov
xor
mov
xor
scas
out
or
mov
es
sbb
and
mov
mov
stos
subb
dec
insl
movsb
jae
push
mov
popa
es
xor
dec
imul
xchg
fadd
in
ficompl
popf
add
out
fwait
dec
cmp
insb
ja
mov
add
mov
pop
jne
popf
mov
mov
mov
jo
pop
in
outsl
rcrl
xor
lahf
sub
stos
outsl
dec
sbb
mov
pop
dec
lock
repnz
sub
inc
ljmp
pop
rcl
jne
movsb
cli
mov
scas
sbb
pop
inc
int3
push
clc
inc
lods
sbb
mov
xor
xchg
add
movsl
lcall
adc
je
repnz
cs
or
pusha
repnz
repz
mov
sbb
xchg
mov
cltd
vcvtps2dq
in
jbe
outsl
and
xchg
xchg
sub
repnz
push
ds
push
fcmovu
jle
xor
sbb
cmp
out
lds
icebp
pop
push
mov
pop
jbe
and
inc
in
ret
pushw
adc
movsl
and
mov
mov
or
xchg
fldl
ja
mov
in
cmp
es
push
in
arpl
sub
jne
lods
mov
xor
dec
repnz
inc
subl
jmp
popa
fwait
xor
and
mov
fsub
outsb
mull
imul
or
pop
xor
add
test
mov
or
stos
repz
adc
lcall
ret
rclb
fldt
lods
cli
adc
insb
dec
lea
xor
insl
fwait
into
mov
sbb
lahf
aaa
es
je
mov
cld
cmp
xor
lcall
aad
leave
adc
aam
sub
enter
fidivl
push
rcrl
decb
jecxz
addr16
pushf
mov
pop
sbb
add
push
test
sbb
add
push
cltd
mov
mov
mov
sub
xchg
sti
insb
xor
sbb
std
and
fldl
or
in
rcll
imul
aam
mov
test
pop
bound
loopne
dec
xchg
lock
pushf
pop
jp
mov
xlat
fwait
out
jge
sub
test
ret
pop
aad
lods
and
aas
inc
je
sbb
inc
clc
outsl
xchg
shll
adcl
pop
shlb
mov
ds
out
rolb
arpl
mov
mov
ss
mov
cld
xor
xchg
outsb
movsl
push
hlt
push
test
pop
add
pop
inc
gs
push
imul
enter
pop
mov
mov
aad
mov
cwtl
sbb
leave
icebp
dec
and
sbbl
arpl
les
or
rorl
movsb
or
jae
pop
popf
or
inc
xor
cmpsl
fisubl
dec
je
test
jno
push
inc
mov
sbb
or
movsb
sbb
iret
mov
adc
mov
and
mov
sbb
dec
sbb
outsb
mov
push
arpl
mov
mov
rorb
lret
je
imul
mov
js
mov
cmp
adc
and
in
aaa
ljmp
mov
ljmp
sahf
adc
jecxz
sub
cmp
push
daa
adc
fnstsw
icebp
cmp
push
filds
fs
pusha
lea
xor
scas
jb
imul
daa
out
outsb
push
mov
xchg
cld
mov
sbb
sub
fldenv
push
jnp
movsl
ja
sbb
pop
pop
insb
mov
out
mov
decl
mov
inc
lea
fiaddl
cmc
pop
adc
push
outsl
aad
mov
loop
jl
push
mov
int
call
test
sti
jge
das
jbe
ret
or
mov
cltd
cli
sub
call
loopne
subl
push
xor
sub
sbb
jne
inc
xor
shll
pop
ret
es
jecxz
cmpsb
sub
icebp
push
or
push
jl
movsb
xlat
sti
jo
iret
jg
div
cltd
push
inc
dec
add
insb
xchg
xchg
movsl
xor
das
dec
sbb
arpl
and
mov
rcrl
push
loopne
test
mov
roll
mov
loope
xor
or
mov
outsl
jp
cs
pop
adc
lret
aad
mov
push
jbe,pt
add
mov
or
addr16
mov
cmpsl
xor
pop
add
adc
gs
ret
mov
mov
push
lods
rcr
fidivs
rclb
into
push
sti
mov
mov
push
int3
xchg
jg
sbb
pop
jmp
pop
lahf
call
push
js
cmp
add
pop
pop
push
in
pop
scas
punpckhwd
loopne
add
sub
mov
adc
xchg
sahf
shrb
gs
xchg
fs
inc
test
ljmp
lods
sbb
or
xor
cmp
pusha
pop
rol
xor
es
shl
cmp
aas
das
ret
orl
fistpl
adc
bound
dec
push
aaa
add
mov
mov
emms
std
lret
sbb
mov
mov
aam
push
push
xor
mov
cmpsl
adc
negl
inc
aad
adc
sub
or
mov
sub
shll
leave
adc
add
addr16
mov
loop
stos
dec
daa
cmpb
hlt
out
lahf
inc
xlat
jne
xchg
cmpsl
cmp
mov
sahf
es
and
inc
add
cwtl
xlat
sub
adc
stc
fidivrl
test
xor
insb
xor
sbb
out
mov
popf
pop
and
mov
mov
jo
hlt
adc
add
jp
jne
roll
das
xor
mov
loope
int3
dec
mov
pop
sarl
fiadds
sbb
lret
fsts
mov
enter
jnp
mov
insl
jbe
mov
mov
in
leave
cmp
and
xchg
push
in
dec
daa
je
jmp
sarb
xor
xchg
incb
add
fldcw
jo
inc
mov
add
jecxz
popf
jno
dec
cmc
xor
ss
mov
xchg
or
add
mov
test
psllw
sahf
and
loope
fldcw
or
xor
jne
out
jbe
mov
or
fimull
fsts
loopne
or
stos
mov
xor
mov
jge
dec
mov
lcall
or
and
scas
or
addr16
sub
ja
jno
ljmp
scas
adc
ljmp
sub
mov
cmp
imul
or
mov
ret
test
sbb
or
rcll
mov
test
sbb
or
hlt
mov
xor
pop
repnz
stc
mov
cmp
add
in
sahf
lcall
mov
stc
test
jle
push
scas
mov
lea
outsb
bound
dec
sub
jle
sbb
sbb
jge
jnp
push
adc
fimuls
sarb
ljmp
push
mov
mov
inc
xor
roll
cmp
xchg
or
inc
andb
jbe
mov
xchg
add
jnp
sbb
jp
and
fwait
cmpsb
jmp
mov
mov
push
lods
adc
hlt
push
mov
or
int
inc
cs
out
dec
xchg
push
js
in
aas
sbb
inc
movsl
add
insb
test
mov
push
lods
mov
dec
sahf
idivl
add
imul
aam
xor
mov
xchg
mov
sbb
jno
and
scas
pop
or
outsl
xlat
jnp
cmp
icebp
jge
push
add
clc
imul
xchg
cmp
xchg
aam
pop
out
fstpt
cmp
xor
push
sbb
test
add
stos
mov
mov
addl
sbbl
xchg
dec
test
xor
subb
jae
scas
sbb
cwtl
sbb
data16
loopne
cmp
fldt
or
xor
movsb
test
lahf
pushf
sbb
imul
cltd
out
jg
xchg
sub
jnp
aaa
inc
les
cli
adc
and
mov
add
mov
xchg
fwait
orb
mov
cli
pop
pop
add
xor
jbe
aas
lods
data16
push
xor
ficomps
cwtl
push
aad
js
inc
pop
sbb
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
lods
lahf
cmp
fnstcw
or
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
lds
fst
test
mov
push
shrl
or
lock
cli
iret
not
lcall
std
pop
test
out
sahf
mov
dec
xor
mov
fdivp
push
mov
cmp
add
jno
scas
sub
add
mov
mov
xchg
xchg
push
jo
xchg
fdivl
rol
repz
movsb
rorl
imul
or
scas
sub
arpl
dec
and
add
jne
aaa
lds
cli
mov
cmpl
gs
cmpsb
xchg
mov
cmc
rcr
outsb
je
ffree
sbb
jl
jno
lahf
cmp
stc
aaa
pushf
test
aaa
lods
popf
cmp
stc
flds
lods
lahf
fisttpll
insl
flds
mov
enter
lods
cmp
stc
addr16
or
lahf
cmp
cld
fadds
lods
lahf
cmp
flds
lods
lahf
cmp
fildl
lods
lahf
sub
stc
fsts
mov
fwait
lock
jnp
lahf
cmp
shrb
or
lahf
int
scas
aam
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
addr16
outsb
add
lahf
cmp
stc
addr16
test
jnp
fwait
cmp
test
xor
lahf
cmp
stc
cmp
cmp
stc
fnstenv
jnp
lds
stc
flds
lods
lahf
cmp
fldenv
or
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
flds
lods
lahf
cmp
stc
dec
flds
push
paddq
pop
aam
dec
inc
mov
mov
push
dec
adc
pusha
pop
ljmp
das
es
mov
outsl
sbb
xor
and
jno
sti
sbb
aam
mov
jnp,pn
roll
jno
test
xor
js
adc
mov
sub
jmp
cmp
sub
xchg
lds
pop
test
and
lods
dec
daa
sub
adc
pop
mov
inc
mov
mov
adc
mov
cmc
or
xchg
xchg
imul
sub
aam
and
out
pop
das
mov
mov
cli
cmp
jae
imul
lret
add
xor
pop
push
mov
lea
inc
sahf
int3
mov
dec
loope
lcall
pusha
cmp
pop
sbb
fwait
xchg
add
jp
ljmp
sbb
jl
dec
mov
mov
push
lcall
mov
push
jne
loope
or
imul
add
push
mov
xor
inc
cmp
arpl
jp
push
into
divb
lock
data16
cld
adcb
xor
sub
repnz
mov
cli
mov
jo
inc
fsubs
sti
adc
mov
outsl
adc
dec
cli
imul
cmpsb
push
outsb
shlb
cltd
jnp
pushf
loop
std
aas
pusha
push
sub
ja
fldt
push
push
call
add
cld
or
les
stc
pop
popl
pop
mov
pop
xor
insb
push
pop
jne
js
das
add
lret
das
inc
idivl
dec
dec
xlat
mov
hlt
mov
stos
in
mov
es
or
scas
pop
popa
or
pop
shl
xchg
popf
pop
leave
loopne
lds
mov
and
movsb
mov
inc
stos
pop
cmpsb
loopne
dec
xchg
dec
fdivr
mov
pop
xchg
xorl
pushf
movsb
repnz
into
js
and
inc
stos
nop
inc
and
mov
lahf
dec
jp
inc
xor
aas
stos
pop
pushf
jp
repz
jl
pop
xchg
cmpsb
xchg
jb
std
cwtl
movsl
inc
out
sub
or
dec
pop
adcl
subb
loopne
pop
in
dec
jge
xor
sbb
dec
lret
icebp
fnstcw
xchg
rcr
adc
mov
dec
adc
xor
int3
imul
into
std
outsb
mov
repnz
pusha
sbb
sub
lret
jns
daa
inc
or
inc
inc
and
into
xor
push
mov
jnp
sarb
xchg
jmp
lods
cmp
cli
sbb
push
adc
mov
pop
pusha
cmpsb
mov
or
clc
out
mov
jecxz
iret
xchg
sbb
ss
aam
xor
inc
outsb
and
mov
mov
mov
mov
mov
insb
push
jmp
les
in
jge
xchg
add
ja
andb
pop
mov
push
iret
mov
add
or
xchg
lods
test
ss
cmp
outsl
and
or
xor
inc
cmp
iret
adc
push
push
rorb
and
push
ret
xchg
rcrb
inc
or
insl
jbe
and
adc
jl
test
dec
gs
xchg
dec
sahf
lahf
lea
rcrl
fimull
stc
jp
idiv
outsb
ja
test
cmp
pop
jns
iret
xor
in
sub
inc
cmc
jbe
lcall
ljmp
mov
mov
xchg
fldl
cmc
cmc
enter
jmp
pop
adc
lret
std
pop
inc
hlt
ja,pn
sbb
xor
or
pop
not
jmp
sarb
loop
cmp
das
shll
xor
adcb
lds
lock
push
ljmp
pop
inc
repnz
xchg
fwait
cs
scas
lret
scas
fwait
repnz
inc
stos
xchg
xlat
pop
cld
pop
faddl
rclb
insl
push
movsb
fnsave
mov
jne
inc
outsb
sbb
dec
in
add
jns
pop
loop
or
fs
in
aaa
subb
movsb
mov
das
in
jb
daa
add
std
in
shlb
jbe
sub
jp
pop
push
mov
or
filds
and
icebp
dec
sub
and
cltd
sub
sub
stos
mov
test
nop
xlat
pop
mov
scas
jo
push
inc
sar
addr16
ret
leave
dec
js
xchg
cld
aas
pop
bound
push
jae
sbb
icebp
cli
sub
mov
and
shll
clc
daa
test
dec
or
jb
push
push
inc
pop
jge
push
cwtl
lcall
test
aad
mov
push
add
adc
fstps
pop
popf
mov
mov
jle
in
pushf
mov
xor
subb
jno
push
lock
sarl
sahf
push
aas
xchg
pop
add
out
sub
cli
cmp
outsl
xchg
and
cmp
mov
out
xacquire
insl
fisttpll
mov
ss
test
sahf
mov
inc
push
in
add
clc
ljmp
lret
mov
jmp
mov
push
mov
rcl
add
xor
lods
movsl
orl
xorb
pop
mov
or
push
test
pop
pop
push
hlt
shlb
movsb
push
mov
pop
xor
adc
dec
or
scas
shll
test
sti
pop
mov
stos
and
sbb
scas
push
adc
push
lret
lcall
xor
add
inc
dec
xchg
jg
pop
push
xor
mov
jbe
mov
sti
pop
test
test
rolb
add
pop
xor
sub
jl
inc
cld
cmc
xlat
sub
jo
jns
pop
add
lsl
out
adc
xchg
arpl
push
cmpl
fucomip
scas
pusha
sub
loop
xchg
add
xor
mov
inc
adc
sub
jmp
cmpb
or
aad
repz
ror
xchg
outsl
aaa
lahf
sti
adc
push
and
repnz
xor
push
jno
outsb
sub
pop
sarb
lret
adc
repnz
xchg
gs
sbb
jge
add
or
xor
cld
cmc
icebp
pop
clc
cmpsb
mov
xchg
xchg
jge
flds
jge
push
icebp
pop
mov
bound
xchg
div
and
xchg
stos
pop
scas
mov
push
jbe
in
and
push
dec
push
fbld
jae
xchg
lods
mov
loop
sarl
cmpsb
mov
fisttpll
add
sti
push
shl
xlat
cmp
inc
adc
shrl
aas
push
inc
scas
sbb
insb
test
xor
loope
or
stc
adc
bound
cmpsl
xchg
cltd
addr16
and
loop
aad
out
cli
add
sub
jle,pn
pushf
jmp
pop
sbb
mulb
repz
jo
cmp
sub
xor
push
and
pop
enter
cwtl
and
mov
bound
outsl
lret
pop
pop
pushl
bound
or
mov
ret
inc
outsl
xchg
and
mov
xchg
rolb
xor
ss
stos
test
mov
adc
fimuls
add
inc
cmpsb
inc
gs
pushf
testb
imulb
cmp
flds
outsb
shrb
test
or
xchg
movsl
sbb
lret
add
and
cmp
jl
scas
jno
mov
shrl
pop
cmpsb
js
jecxz
lahf
add
addb
adc
mov
push
andb
dec
sub
push
push
in
mov
jle
cwtl
mov
inc
cltd
out
xchg
dec
cmp
lds
in
ljmp
mov
cmp
push
push
cmp
ds
adc
mov
push
repnz
addb
jle
in
jl
add
jns
mov
aaa
mov
test
dec
or
stos
xor
mov
fidivrl
mov
lock
mov
adc
jg
pushf
xchg
out
jp
fwait
mov
ret
jnp
jl
in
jns
and
in
adc
pushf
xchg
fmuls
adcb
add
std
and
arpl
xlat
lahf
cmc
sbb
xchg
pop
mov
cltd
enter
cltd
sbb
mov
adc
rolb
ljmp
mov
test
in
and
adc
push
ss
sub
add
out
fs
mov
inc
xor
jnp
sbb
loopne
sbb
shlb
stos
inc
adc
fcomp
ret
adc
test
ja
fs
mov
enter
rorb
jmp
pop
push
aas
enter
inc
dec
daa
ss
dec
xchg
fs
subb
aas
mov
mov
pushf
mov
jl
test
adc
insb
addr16
and
jae
aas
pop
mov
mov
add
lret
decl
inc
jecxz
dec
fdiv
mov
out
shll
rcl
ret
pop
add
push
clc
sbb
jb
lret
mov
mov
mov
bnd
int
push
repnz
sbb
xchg
enter
clc
mov
add
mov
and
stos
popf
mov
dec
adcl
push
stc
jle
mov
xor
maxps
sbb
pop
sub
mov
je
add
jne
mov
inc
cld
hlt
insl
aas
clc
daa
movb
or
dec
push
outsl
sub
xor
cwtl
mov
pop
xchg
push
inc
ljmp
push
std
push
test
push
pop
fs
or
cli
test
xor
inc
aam
stos
add
adc
iret
cwtl
and
nop
cltd
sbb
or
lea
lret
push
cmp
notl
push
js
mov
nop
int
imul
inc
inc
int3
clc
outsl
test
insb
xchg
mov
fcomps
push
sbb
aad
pop
or
pop
insb
jge
push
enter
mov
mov
ret
push
mov
iret
jo
rolb
out
jmp
test
rcl
cmp
insb
mov
cmpsl
push
adc
sub
sub
in
adc
adcb
pop
lcall
lock
dec
sbb
sahf
mov
jmp
jae
push
push
stos
mov
mov
sub
stos
push
lock
jb
inc
mov
lcall
mov
mov
add
or
stos
std
out
dec
mov
or
cmp
push
dec
push
mov
mov
sahf
cltd
outsb
pop
cmp
ficoms
pop
jb
insl
jge
sbb
leave
orb
xchg
fisubrl
push
mov
mov
lcall
ja
or
loopne
lret
adc
xchg
or
clc
in
xor
shrb
test
push
jmp
lods
cmp
pusha
lods
inc
sub
data16
in
rcl
dec
mov
sar
lret
push
pop
gs
pop
cmp
adc
jmp
jecxz
inc
xchg
add
std
mov
aad
push
pop
lock
jbe
xchg
aad
test
clc
push
js
stc
mov
mov
outsb
insl
mov
mov
stos
dec
cmpb
hlt
jmp
fcoms
push
dec
mov
pop
lock
gs
mov
inc
cmp
xor
not
jg
mov
outsl
dec
fisubs
jmp
outsb
lahf
lcall
add
pop
push
roll
mov
sbb
xlat
jno
in
xlat
ja
cmp
insl
xor
stc
mov
adc
cmc
xor
sahf
int3
out
and
push
xor
jecxz
incb
stc
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
