push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
lret
adc
ret
fisubrl
mov
pop
cmp
stos
div
add
in
out
cwtl
xor
ja
jle
rcrl
outsl
cmp
sbbl
inc
loope
dec
in
pop
xor
xlat
lea
jp
pop
cld
sub
popa
pop
out
xchg
push
insl
pop
aaa
fwait
or
sub
pop
cmp
out
mov
fisttpll
mov
push
or
xlat
push
cmp
ja
push
rorb
fstps
shl
jne
loop
inc
data16
aas
outsl
outsb
enter
jl
or
sahf
dec
std
mov
test
in
add
pop
test
dec
sub
arpl
loopne
les
loope
ret
pop
pop
pushf
adc
jmp
cmpsl
hlt
xchg
sub
fcoms
push
aad
mov
lret
mov
mov
cmc
push
stos
aam
pop
rclb
mov
dec
cli
mov
mov
sub
jns
pop
dec
mov
loope
loop
add
jns
jle
adc
std
cmp
mov
sub
aad
mov
jb
push
xchg
pop
sub
sbb
xor
inc
inc
out
xlat
jp
ss
xchg
fistpl
cli
leave
test
mov
sub
cmp
or
push
nop
fnstcw
inc
inc
insb
push
add
xchg
jns
vdivps
loopne
pop
daa
icebp
pop
or
cmpsl
sub
push
mov
insl
test
sbb
dec
xchg
pop
and
xor
sbb
xlat
data16
popa
ja
xlat
clc
dec
cmp
loop
stos
pop
pusha
push
data16
push
repz
stos
aam
ja
dec
jnp
leave
xor
out
imul
std
ljmp
loopne
cltd
fnsave
rorb
mov
xor
pop
sbb
cmp
push
jge
dec
int3
push
mov
hlt
inc
insl
aas
or
les
int
dec
lods
movsb
sti
pop
std
inc
ret
fs
repnz
fs
daa
out
mov
stc
out
xor
adc
xchg
ljmp
mov
push
xor
jl
cmp
mov
shll
addb
sbb
jl
je
bound
cmc
repz
and
jne
faddl
inc
xchg
sahf
es
sbb
lds
dec
adcl
cs
jmp
lds
std
insb
mov
sahf
mov
jns
out
insl
imul
dec
sbb
fidivrs
xchg
outsb
jae
lds
sbb
mov
mov
rol
cmp
mov
inc
inc
mov
bound
call
shr
in
add
and
popf
out
push
test
pop
xchg
jnp
jnp
cwtl
nop
push
roll
es
push
mov
dec
mov
fs
mov
leave
scas
xor
das
mov
fdivrs
cmpsb
jle
mov
aaa
adc
add
stc
fneni(8087
push
inc
cmpb
aad
push
lret
mov
ljmp
sar
or
inc
sahf
push
lahf
jns
mov
cmpsl
and
imul
push
sahf
es
std
push
outsl
inc
xchg
test
mov
jmp
ja
addb
mov
inc
inc
movsl
outsl
xchg
xchg
andb
adc
sub
xchg
into
in
push
test
cli
mul
jle
mov
insb
mov
xor
cmpsl
xorb
mov
fsub
mov
loopne
mov
scas
sbb
mov
outsb
lahf
xor
jne
cmc
int
cmp
mov
fmuls
jp
in
out
xor
sbb
mov
jae
push
flds
call
dec
xor
add
clc
lret
cmpsb
dec
sbbb
ret
mov
sub
add
mov
or
add
sbb
shll
ret
dec
pop
jmp
rol
pop
pop
or
lea
decb
jl
enter
mov
jne
jecxz
faddl
pushl
add
sbb
cld
pop
mov
cmp
js
movsl
js
cmp
lret
shlb
cmc
sbbl
inc
lods
int
icebp
cmpsb
lret
hlt
cmc
cmp
call
negl
aas
sub
jae
and
jno
push
bound
aas
add
cmpps
in
inc
andl
ret
jae
out
fs
bnd
add
xchg
jno
pop
mov
jbe
push
leave
add
mov
mov
shrl
stos
sub
cmp
sbb
and
adc
xor
rcr
mov
subl
and
fsincos
adc
jp
cmp
cmp
das
lahf
idivl
setge
bound
mov
int3
movb
fadds
adcl
dec
sti
pop
pusha
xor
push
roll
pop
in
push
xor
aas
push
mov
pop
fcomps
popf
enter
push
push
out
fcomps
mov
add
nop
roll
scas
xchg
mov
popa
decl
cld
pop
repnz
fmuls
sbb
movsb
dec
pusha
cmpb
mov
gs
mov
orb
cs
mov
mov
push
pop
cmp
cltd
imul
fldcw
rcrl
inc
pop
fsub
pop
fs
test
xor
lcall
push
xor
cs
jecxz
mov
mov
jecxz
daa
insb
push
les
pop
into
push
lcall
inc
fcomi
xchg
enter
movsb
fs
aad
or
mov
cltd
cmp
lds
push
nop
sbb
mov
adc
fmuls
pop
and
fistpl
push
pop
xchg
or
inc
jle
notb
adcb
je
add
dec
dec
jnp
or
lcall
mov
pop
dec
fsubrs
pushf
push
mov
jl,pn
xchg
adc
popa
adc
je
mov
jmp
ss
fistpll
rcl
int
push
fists
lret
dec
je
xchg
leave
les
xchg
ret
popa
sub
add
xchg
sbb
mov
stc
cld
push
scas
push
ja
mov
cltd
int3
sbbb
sbb
mov
or
cli
aaa
xchg
mov
rol
decl
push
push
out
sub
loope
mov
add
stos
cs
sbb
lret
xlat
insl
mov
into
cltd
js
roll
jle
pop
jmp
pop
les
or
scas
shll
and
cmpsl
stos
inc
mov
outsl
pop
jmp
out
xchg
filds
inc
shlb
xchg
out
int3
push
out
mov
push
push
filds
and
loop
dec
add
and
mov
imull
cmc
ljmp
aam
cmp
push
ljmp
dec
xor
inc
sub
push
lods
in
repz
mov
sbb
nop
rolb
cmp
lds
imul
lret
out
shrl
sarl
test
or
xchg
scas
jbe
jb
jo
outsb
push
and
and
mov
nop
push
repnz
mov
ret
mov
jmp
out
push
xchg
adcb
dec
cmp
pop
jl
sarb
mov
cmpsl
flds
push
test
sbb
shr
mov
cli
das
inc
inc
cmp
sub
mov
dec
and
pop
push
mov
test
addr16
testl
call
or
sbb
mov
rcrl
ds
and
test
cli
out
xlat
jno
mov
xchg
add
adc
jo
repnz
cmp
repz
sbb
je
adc
jo
cmp
and
mov
lret
or
call
pop
ret
insl
jecxz
imul
push
xor
rclb
divl
fistps
call
mov
mov
pop
out
fidivl
dec
clc
jmp
sahf
adc
sbb
in
push
test
in
and
cltd
jns
jo
mov
out
mov
sbb
cmp
mov
fisubrl
sub
lcall
pusha
fcompl
testl
mov
repnz
sub
cmc
loope
lods
cmc
push
mov
or
mov
cmpsl
and
hlt
insb
stc
cwtl
loope
call
pop
test
stc
mov
jg
mov
repz
jge
and
das
lods
pusha
aas
sbb
int3
adc
xor
data16
sbb
cli
dec
push
fsubs
mov
dec
pop
add
fisubrl
fninit
fcmovnu
cltd
and
divb
jmp
dec
xor
loope
push
out
xchg
sub
push
int3
mov
mov
dec
ret
xor
divl
push
stos
das
jp
dec
xchg
push
iret
out
dec
ret
insb
popf
inc
scas
pusha
xor
shrl
and
dec
jae
push
inc
mov
ds
mov
xor
push
sbb
cmp
xor
cmp
popf
scas
cwtl
int
insb
mov
outsb
push
mov
in
mov
cld
jecxz
fwait
imul
add
js
icebp
push
mov
stos
xchg
pop
inc
subb
jno
loop
in
scas
leave
dec
mov
pop
hlt
int
clc
cmp
push
ljmp
insb
scas
push
dec
mov
push
sub
add
or
loopne
stc
lcall
loop
fcomps
int3
lea
jns
sub
mov
loop
pop
insl
int
jmp
push
insl
or
ss
cs
xchg
scas
jmp
sub
js
loope
fidivl
jnp
adc
les
hlt
mov
xchg
add
jne
je
scas
jle
out
mov
subb
rcrl
pop
lea
xchg
cmp
and
loop
shll
mov
cli
movb
mov
mov
shr
jmp
sbb
adc
pop
push
aas
out
lret
mov
loope
fistps
mov
clc
push
sub
pop
test
cmp
cld
cmpsl
not
scas
mov
lret
or
test
insb
arpl
cmp
rcrb
lcall
lahf
adc
rorb
xchg
lret
lds
data16
xor
loopne
lcall
push
xor
in
out
fadd
xor
aad
jns
jmp
leave
fwait
add
and
inc
fcmovnb
xorb
mov
icebp
lods
xor
sub
lods
sar
xchg
or
ljmp
dec
sub
mov
dec
cmc
push
mov
fcmovnb
bound
or
clc
mov
cmp
outsl
xor
sub
in
dec
daa
xor
xor
xchg
xor
mov
jae
xchg
das
rcrb
dec
inc
cwtl
roll
pop
mov
lret
in
scas
xchg
dec
lea
ss
fs
xchg
xchg
pop
test
aaa
jbe
cmp
out
test
inc
and
cli
aad
mov
mov
xchg
inc
aad
mov
test
mov
and
xchg
icebp
test
push
add
sbb
andl
inc
sahf
lcall
sub
out
adc
mov
dec
xchg
aad
pusha
mov
es
stos
ja
adc
xor
test
and
sub
lret
lods
dec
add
aas
and
mov
out
mov
addr16
nop
lret
sub
ja
xor
xlat
std
daa
sarl
sbb
stc
addr16
mov
mov
xchg
cli
add
loope
aam
out
inc
daa
lahf
or
xor
int
sub
ret
adc
loopne
repnz
dec
fsub
or
pop
gs
ret
imul
idivl
and
les
or
sub
arpl
push
loopne
fs
adc
add
in
fcomip
mov
loop
cmpsb
sbb
or
mov
lea
sub
xchg
pop
jp
mov
in
and
and
inc
imul
bound
or
push
mov
aam
cli
mov
push
js
jo
or
enter
inc
int3
pop
adc
cld
jb
push
mov
cmp
nop
mov
ja
cmpsb
aad
add
lods
dec
lea
idiv
adc
in
scas
int3
mov
in
repz
out
push
mov
ror
rcl
add
aas
outsb
xor
add
mov
jge
insl
sbb
add
add
fildl
repz
fiadds
jg
mov
lea
fiaddl
mov
scas
popf
addl
mov
jo
inc
mov
fs
mov
fbstp
mov
pop
inc
mov
frstor
jge
pushf
in
lea
aam
arpl
sbb
xchg
lret
mov
loop
insb
sahf
subl
outsl
rcr
xchg
std
xor
xchg
xchg
push
xchg
mov
cli
cmp
xchg
in
dec
cmpl
scas
loope
lods
test
adc
adc
jns
aaa
jb
loopne
cmp
and
ss
int3
call
sahf
mov
test
mov
fcmovnbe
jmp
mov
push
cwtl
dec
lret
dec
int3
inc
pop
fists
ror
leave
xchg
jl
dec
mov
adc
sbb
mov
cs
inc
aad
mov
cld
add
inc
push
out
scas
cmc
testb
movsl
test
pop
movsb
and
cli
jl
mov
sti
hlt
pop
mov
movaps
scas
cli
fcompl
dec
lea
cs
pushl
xor
mov
add
pop
sarb
into
jae
sub
int3
or
push
dec
add
push
or
testb
adcl
pop
insl
add
cmp
push
js
out
out
sahf
jns
imul
sbb
mov
sub
push
push
call
dec
ja
xor
dec
pop
jecxz
mov
pop
inc
cltd
and
push
jl
jl
mov
dec
sbb
subb
adc
xchg
iret
loopne
andb
ret
aaa
cs
insl
sbb
add
inc
and
jne
cmpsb
cld
repnz
fstpl
pop
and
dec
mov
fistps
jmp
xor
scas
sti
sbb
mov
xchg
jbe
bound
mov
cwtl
or
sahf
cmp
stc
fs
in
out
int3
pop
dec
cmc
cmpsb
popa
jns
sub
inc
bound
fcomip
fnsave
pop
iret
jo
jb
push
hlt
out
jno
fisttpl
xchg
call
ss
xchg
subl
test
cmp
xchg
mov
or
jmp
pop
psubq
daa
mov
fs
aas
push
out
pop
xchg
adcl
pop
jno
dec
decl
outsb
push
cmp
mov
ret
and
jg
in
lock
pop
cs
xchg
xor
inc
jo
sbb
jl
pop
lods
mov
daa
push
sub
dec
shlb
xor
xchg
pop
int
jg
lret
pop
push
adc
xor
mov
xorb
sbb
sahf
clc
mov
fs
cmc
pop
push
mov
imul
ljmp
je
outsb
in
push
dec
call
mov
rol
hlt
cmp
jg
mov
jb
movsl
xor
movsb
xor
insl
jns
dec
cmp
es
sub
add
jo
pop
dec
and
xchg
add
xchg
shlb
int3
add
dec
lods
dec
iret
mov
push
xchg
lock
inc
xchg
mov
adc
push
rorl
movsb
mov
outsl
or
ret
mov
mov
pop
aaa
dec
add
or
rcll
push
lock
jnp
add
std
lret
cmp
scas
adc
pop
repz
mov
lods
mov
xor
adc
xor
add
add
adc
fmull
sub
repz
or
aas
or
and
ret
push
adc
mov
xchg
je
repnz
xor
popa
hlt
fidivrs
push
mov
adc
fisubrs
lods
out
cmp
sub
in
xchg
cltd
and
or
push
sub
dec
inc
out
mov
loope
jno
push
out
mov
loopne
xchg
mov
rcrb
gs
adc
fldcw
lret
pop
inc
dec
xor
or
mov
in
and
push
mov
nop
data16
outsb
pusha
mov
add
pop
xor
inc
and
cmp
in
fwait
pop
xchg
andl
push
mov
aas
fistl
or
call
inc
daa
ja
xor
aam
sub
inc
add
in
adc
pop
sbb
jmp
lock
or
sbb
add
cmp
mov
mov
jge
fisubl
imul
daa
pop
jmp
into
call
sbb
sub
lcall
movsb
fadd
mov
scas
inc
inc
inc
int3
or
les
jmp
push
mov
fcmovnb
ja
sbb
jmp
fsubrl
add
fcompl
lahf
int
out
andl
fcmovnb
imul
pop
arpl
add
and
nop
rcrl
cmc
inc
push
cmp
mov
dec
pop
fnstenv
pop
adc
insl
or
pop
and
sar
rcll
xor
aaa
mov
outsb
pusha
les
jge
les
sub
in
or
dec
out
sbb
mov
jp
lcall
sub
out
lds
jae
add
fwait
loop
xchg
iret
and
sub
jo
sbb
movsl
inc
push
mov
xor
adc
pusha
sbb
ficompl
stos
sbb
data16
in
lds
jne
in
stos
mov
ja
push
sarl
cmpsl
sub
aaa
push
std
xor
xor
testb
das
jmp
popa
jne
std
cs
out
cli
mov
sbbl
mov
sbb
js
call
dec
xor
cmc
sub
gs
ret
iret
ljmp
shr
pop
aaa
emms
mov
mov
cltd
adc
fidivrl
outsb
pop
aam
aas
insb
mov
adc
outsl
xchg
sub
pop
ljmp
movsb
inc
adcb
dec
add
cmc
adc
insl
jle
cmp
in
mov
out
mov
dec
or
js
sub
jmp
xor
push
insl
stc
mov
jle
testl
aaa
imul
xchg
dec
xor
pop
fsubrl
xchg
jle
xor
decb
inc
jmp
adc
jg
mov
lods
cmp
insl
hlt
scas
cmp
fldt
inc
mov
mov
xorl
sbb
fidivs
add
jnp
pop
enter
inc
add
jle
add
push
inc
jb
or
in
arpl
dec
js
jb
sub
out
dec
fsubrs
xchg
loope
stc
adc
or
dec
xchg
xchg
mov
adc
fcmovb
jnp
stc
xchg
mov
jge
data16
pop
xor
dec
outsb
aaa
adc
lcall
jae
push
xor
mov
aas
scas
pop
mov
lods
xlat
xorb
movsl
test
xchg
in
dec
cmp
xchg
test
push
add
loope
sbb
mov
push
cmpsl
cmp
pop
sub
xchg
inc
push
lds
out
jge
jle
shlb
cmpsb
sarl
xor
out
add
mov
enter
adc
mov
dec
andb
or
sub
mov
add
fnsave
and
jl
sbb
shll
and
sub
cmp
loopne
movsl
and
aas
jns
jl
loop
push
push
ret
add
xor
push
mov
jb
pushf
repnz
adc
orl
mov
sub
sub
pop
cs
push
adc
mov
ret
popl
cmp
sbb
sub
movsl
jnp
sub
dec
fdivrs
das
mov
sti
pop
mov
nop
push
inc
bswap
dec
mov
xor
es
jle
adc
inc
test
push
fstps
add
pusha
mov
push
lret
sub
inc
into
sub
push
adc
lock
pop
push
xchg
xor
jmp
aaa
out
cmp
std
jmp
mov
sbb
sbb
cmpsb
fcomps
outsl
mov
sbb
mov
cmovnp
push
push
xor
add
lods
mov
push
or
push
sub
or
sbb
jge
push
and
xchg
xchg
shll
sbb
jp
cltd
sub
test
cmp
dec
mov
loopne
cltd
bound
jmp
cltd
mov
mov
dec
jae
inc
aad
ror
in
bswap
out
xchg
movsb
and
inc
pop
mov
dec
ret
cli
mov
imull
add
and
fs
aas
pusha
test
pusha
adc
push
out
insb
int3
or
add
fnstenv
lret
roll
inc
out
push
push
mov
mov
push
pop
aam
push
sbb
dec
into
cmp
sub
cmp
mov
sbb
rolb
sub
jmp
jle
push
xchg
sub
xlat
mov
aad
xchg
cld
icebp
pop
ja
sahf
iret
inc
mov
xor
aas
mov
jmp
mov
xchg
lret
shll
stos
int3
mov
lret
push
jg
lea
in
jo
pop
mov
mov
pop
movsb
rolb
xchg
pop
xchg
jp
mov
or
aaa
dec
mov
mov
mov
jne
xor
or
push
mov
xor
push
or
fdivr
repz
fcomps
cmp
imul
jp
sbb
cs
pop
lea
outsl
rorl
into
cwtl
loop
jae
dec
and
mov
sub
sbb
hlt
mov
xor
fistl
imul
sbb
loopne
mov
mov
sub
repz
jp
gs
mov
repnz
out
cwtl
cmp
dec
pop
push
jbe
xchg
push
mov
shl
dec
cmp
mov
mov
add
sbb
ss
add
movsb
addb
mov
and
sbb
loop
sarl
das
and
dec
add
rcl
sub
mov
ror
jge
cwtl
xor
mov
scas
pop
ret
in
movsl
addb
xchg
and
shl
xchg
mull
test
lea
insb
fisttpl
pop
and
or
inc
movsb
cmpsl
inc
ja
add
mov
in
cmp
push
es
mov
lcall
cmpsl
repz
mov
adc
inc
mov
push
push
pop
pushf
test
and
popa
sub
ss
add
in
pop
les
ret
aam
gs
in
dec
mov
cs
outsl
cld
add
in
pop
aam
scas
fildll
in
push
xor
push
arpl
outsb
fiadds
lcall
lods
mov
pop
mov
pop
mov
xor
cmpsb
movsl
jns
push
and
int
push
roll
lods
mov
mov
add
icebp
lcall
xchg
fbstp
mov
or
sbb
mov
xorl
cmc
push
sbb
fdiv
loope
insb
ljmp
sub
int
mov
dec
cs
mov
inc
sbb
fstpt
jbe
cltd
jle
outsb
es
xor
cld
loop
mov
shll
repnz
jno
ss
jg
mov
ljmp
xadd
out
dec
aaa
mov
mov
inc
mov
adc
mov
test
aaa
mov
push
popl
xchg
jae
stc
sbb
mov
mov
mov
shll
push
push
pop
pop
jae
xchg
loop
aaa
js
mov
sti
dec
sbb
cmp
stos
jnp
or
arpl
rol
or
ss
stc
dec
stos
mov
popl
lods
lcall
std
mov
mov
adc
outsb
clc
adc
icebp
push
and
sub
loope
stc
repz
cli
and
mov
lret
cltd
negb
aad
pop
out
push
or
rcrb
mov
mov
fsubr
lods
insl
fsub
pushf
pushf
adc
inc
xchg
nop
cmc
data16
xchg
push
iret
or
mov
int
ficoml
mov
cmp
dec
lods
inc
cmpsl
bound
push
xchg
mov
xchg
imul
mov
data16
push
or
pop
mov
or
cli
ss
or
sbb
rorl
xchg
clc
adc
bound
pop
test
adc
call
es
adc
and
inc
pop
lahf
xchg
xchg
je
outsb
xor
jl
into
push
in
or
mov
imul
dec
insl
dec
pop
std
mov
xchg
test
push
add
push
mov
sub
data16
out
ljmp
and
or
scas
movsb
stos
fldcw
add
fbstp
out
mov
js
cmp
push
mov
repnz
mov
ljmp
xor
stc
sbb
sti
jl
push
outsb
push
bound
pop
and
mov
loope
adc
push
enter
nop
cli
dec
inc
mov
out
mov
cs
cld
cltd
push
jnp
pop
jns
adc
aad
mov
or
roll
lret
cli
mov
cmc
xchg
mov
stc
mov
roll
stc
add
cmpsl
outsl
add
jbe
adc
or
adc
cli
adc
mov
fnstsw
cs
pop
mov
mov
imul
add
hlt
xor
dec
arpl
pop
nop
iret
sbb
xchg
jle
inc
pusha
out
inc
cmc
mov
std
popa
movl
mov
sti
jp
push
outsl
imul
imul
pop
mov
mov
nop
jecxz
popf
scas
mov
shl
test
pop
mov
fmull
ret
mov
arpl
out
mov
adc
cmp
and
sbb
cmpsb
int
les
cmp
cmp
mov
mov
test
mov
xchg
rclb
call
inc
imul
rol
fnstsw
mov
incb
imul
dec
or
loop
outsb
sub
insb
jae
sub
jno
jg
aam
test
test
loopne
lea
ret
repnz
or
jns
cmp
mov
adc
icebp
hlt
dec
pushf
push
negl
outsl
fcomi
jb
popa
call
pusha
fsts
in
leave
fisubl
test
xchg
dec
outsl
pop
mov
hlt
pushw
mov
fdivrs
aad
out
out
std
jmp
and
xlat
leave
mov
mov
mov
shrb
xchg
or
leave
stc
in
cmpsb
adc
fsubrs
push
sub
jno
and
mov
adc
dec
dec
dec
mov
test
mov
roll
jg
and
adc
std
inc
inc
mov
xchg
jo
push
adc
mov
mov
adc
fists
dec
mov
outsb
repnz
repz
fsave
subb
fucomip
test
adc
inc
sahf
mov
jns
daa
lret
loopne
mov
out
sbb
jbe
cmp
sarb
push
cmp
or
insl
sbb
or
xchg
out
mov
xchg
sub
lcall
pop
rol
mov
repz
push
ss
hlt
call
ss
repnz
dec
inc
imul
pop
xor
ss
xchg
cld
cmp
call
in
cmp
mov
inc
lcall
leave
inc
test
mov
popa
adc
rolb
sarl
pop
add
pop
lahf
xchg
add
mov
ficoml
imul
jnp
jecxz
sbb
push
push
jb
es
imul
or
inc
add
pop
cmpsb
mov
lea
cli
ret
jno
adc
pop
sub
filds
es
lea
xor
jnp
sbbl
xlat
lods
mov
test
sbb
sbb
mov
es
icebp
lods
in
jecxz
outsl
mov
cs
inc
pop
into
push
fwait
mov
fstps
cmp
bound
sub
insb
scas
push
pop
movsb
rcr
fwait
jmp
mov
mov
mov
push
nop
outsl
adc
sar
or
leave
sbb
pop
lret
cmpsl
push
fisubs
inc
adc
pushl
and
out
sub
ds
push
sbb
dec
jmp
push
or
enter
out
mov
adc
mov
sarl
int3
ja
clc
enter
pop
dec
push
fwait
xchg
mov
adc
adc
push
scas
xchg
xchg
push
jl
fcmovnb
xchg
jne
jns
adc
dec
jmp
mov
mov
xor
cmp
mov
mov
cs
js
cwtl
cmp
jb
insl
mov
and
ljmp
pushf
adc
sub
mov
cmp
xor
push
push
xor
in
inc
dec
scas
lret
lods
es
adc
xchg
mov
in
sbb
jle
sbb
inc
cmp
mov
ja
jge
fmull
pop
push
jg
enter
push
cli
sub
and
mov
es
or
enter
inc
adc
ljmp
xchg
bound
out
jle
jns
cld
add
test
mov
cltd
aad
push
int3
icebp
mov
pop
in
push
js
loop
adc
mov
sub
adc
mov
fnstsw
fcmovb
je
fidivl
addr16
aad
cld
push
xor
addl
imul
scas
mov
fcompl
adc
lret
and
push
add
lods
lock
sti
pop
jo
dec
pop
dec
inc
popa
out
mov
aas
rclb
loop
or
sub
sbb
nop
lods
pop
push
popf
insb
aas
mov
xchg
ja
fidivs
test
cmp
add
daa
cmp
inc
into
stc
fildl
mov
push
fidivrs
mov
mov
scas
inc
adc
inc
sbb
or
jns,pn
sbb
popw
setg
lea
int
mov
imul
mov
push
mov
lods
pop
cmpsl
add
pop
push
pop
arpl
pushf
rcrl
mov
pop
cmp
notl
add
adc
push
mov
sbbl
mov
mov
das
dec
jp
mov
movsb
aas
cwtl
xor
mov
xchg
adc
sbb
lods
outsb
cmp
xchg
out
mov
sbb
stos
and
xchg
das
arpl
test
push
mov
repz
int3
adc
lahf
inc
inc
decb
and
xorb
jp
lahf
ljmp
inc
xor
inc
call
lods
jns
and
or
cmp
lret
adc
xchg
push
cmp
fisttpl
stc
push
xchg
addl
sarb
popa
lret
repnz
lret
insb
lds
stos
sub
inc
imul
mov
cmpb
xorb
loopne
mov
enter
insb
sbb
adc
lods
xchg
pop
and
or
dec
xor
push
ljmp
mov
xchg
xlat
rolb
mov
xor
push
mov
ret
mov
in
lds
sub
lret
faddl
mov
jmp
inc
cwtl
dec
stc
pusha
cld
push
fisttps
fisubs
mov
inc
add
jle
jmp
mov
mov
sbb
xor
xchg
ds
mov
or
enter
mov
ffreep
aam
popa
cmp
jb
sbb
mov
jl
out
push
cmpsl
and
ret
and
enter
js
adc
dec
xchg
xchg
xlat
xchg
sbb
push
lahf
fs
cmp
pop
insl
daa
movsl
out
adc
jns
sub
mov
and
cmp
dec
xchg
jb
mov
insl
jg
cltd
cli
inc
push
dec
adc
sbb
adc
cmpsb
sarl
in
ja
rclb
adc
push
mov
push
imul
cmp
lahf
pop
imul
jecxz
mov
xchg
mov
mov
lcall
lock
pushf
push
loope
scas
jmp
cmp
aas
addr16
push
pop
mov
std
fstpl
sub
add
dec
dec
cmp
hlt
and
popf
outsb
mov
cmp
clc
dec
sub
jno
fxch
shlb
cs
das
aad
adc
push
sub
sbb
push
mov
mov
xchg
mov
in
bnd
aam
sub
test
xor
daa
cmpl
stos
push
in
aam
fwait
and
dec
jp
pusha
rcll
adc
notb
push
andl
iret
lret
cmp
or
int
cwtl
mov
arpl
inc
sbb
pusha
sub
cmp
ret
cltd
lods
mov
sub
daa
mov
or
mov
jmp
mov
mov
decl
mov
adc
fisubl
ret
iret
pop
cmpsl
add
and
mov
js
jecxz
or
jge
cmpsb
sbb
pop
hlt
xor
movsl
xor
push
sti
sti
push
mov
loop
and
xor
add
or
adcb
cmc
cmp
jnp
test
cmp
int3
xor
shr
dec
jbe
inc
cmpsb
dec
js
imull
push
lcall
xor
stos
xor
mov
jbe
int3
mov
adc
adc
sahf
mov
in
mov
sub
and
filds
push
sarl
add
lcall
std
sub
mov
push
shll
push
fistl
stos
daa
dec
negl
mov
sub
repz
inc
push
scas
in
add
in
and
inc
mov
daa
mov
lret
ret
popf
mov
jae
cwtl
pop
daa
sub
sub
testl
sub
mov
ret
ja
add
xchg
stos
je
mov
adc
cmp
xchg
xchg
or
adc
sub
or
or
ss
cli
mov
adc
fnsave
xor
ds
mov
imul
ja
test
pop
iret
imul
push
push
sub
lret
mov
in
vmwrite
dec
add
pop
dec
inc
dec
push
fmuls
ret
stos
xor
int3
pop
daa
jl
dec
inc
jge
xchg
fwait
mov
aad
test
jl
mov
add
in
cli
mov
push
mov
dec
push
jns
cltd
pop
jne
pop
jb
ret
pop
andb
push
out
cltd
clc
orl
sarb
mov
sub
pusha
loope
scas
inc
jmp
fildl
xor
jg
adc
ud0
mov
and
xor
lods
into
pop
fidivrl
jb
insb
inc
sub
jge
ret
push
xor
jp
lea
lods
int3
add
pop
test
and
and
inc
out
data16
cmp
lea
pop
test
jge
sbb
jne
sbb
pop
cmpl
leave
sbb
ds
call
fs
fbld
inc
jp
mov
push
xchg
dec
or
cmp
inc
adc
mov
cmc
jg
or
dec
add
imul
add
outsb
andb
and
loop
push
pop
imul
xchg
data16
mul
fwait
jns
fsubl
push
js
xchg
and
movsb
inc
jnp
test
comiss
loop
mov
mov
ret
push
aad
sub
mov
iret
xchg
push
lods
stc
jmp
fstp
fbld
enter
ljmp
inc
decl
popa
jecxz
xchg
jge
jns
hlt
jmp
jbe
dec
add
lds
lds
and
pushf
jle
test
aad
dec
sbb
xchg
push
cmp
shr
mov
jecxz
fstl
jne
cmc
inc
sbb
movsb
dec
aaa
andl
or
pop
push
sbb
fs
fistpl
addr16
add
or
cli
repnz
dec
faddl
inc
mulb
test
sar
imul
adc
mov
jb
add
jge
mov
lret
adc
cltd
aaa
mov
jns
pop
std
jb
fsts
scas
sbbl
push
push
dec
nop
adc
imul
cmp
sarb
int
inc
int3
cmpsl
shlb
xchg
icebp
push
add
or
gs
jno
push
sbb
sub
enter
fidivrs
cmp
jo
divb
loope
jp
push
in
jg
aam
fistpl
sub
cwtl
fucompp
sub
mov
mov
inc
jl
push
mov
int3
and
stc
pop
addl
pop
int3
jp
fisubs
mov
mov
and
lret
jnp
gs
xchg
das
lods
iret
mov
fs
mov
out
out
xor
loop
mov
mov
pop
mov
lret
xor
jge
enter
fmull
adc
rolb
cmp
aam
push
jecxz
mov
int
push
xchg
inc
movsl
and
cmp
outsl
repnz
mov
fdivrs
lcall
movsl
out
mov
inc
hlt
ret
push
inc
fisttpl
xchg
push
or
inc
inc
adc
jle
test
xchg
jnp
sub
sbb
sbb
adc
cs
jge
out
cmp
lret
xchg
mov
mov
mov
movsl
out
inc
inc
push
pop
loop
jb
push
cmpsl
xor
jmp
test
orl
inc
mov
clc
mov
xchg
cwtl
xor
or
mov
push
ficoml
xchg
imul
sub
loopne
addr16
inc
imulb
adc
fs
sub
and
inc
or
add
xor
lds
ljmp
std
testl
rolb
pop
cmpsb
aas
mov
bound
mov
and
icebp
jbe
mov
inc
inc
stc
cmp
popa
sub
and
fsubrl
jae
sbb
jno
mov
movsb
sahf
das
ss
jge
sbb
stos
sub
or
leave
jns
pusha
mov
mov
hlt
push
cmp
add
jg
in
mov
cmp
jmp
sub
cmp
arpl
aas
push
je
dec
in
push
sbb
or
pop
shll
lds
rcrb
push
jl
adc
sbb
xor
push
cmp
mov
xlat
sub
mov
bound
fwait
lods
repz
and
insb
mov
arpl
sbb
cmc
adc
icebp
andl
push
in
cmp
movsb
imul
outsl
mov
xchg
imul
and
mov
push
into
fs
mov
lret
in
and
sbb
or
shlb
aam
inc
mull
inc
xchg
cltd
aas
mov
cld
in
stos
cmp
pop
sbbb
lcall
js
scas
or
and
cmp
test
mov
rolb
pop
pop
mov
jb
mov
sarl
loope
sahf
ret
les
adcb
cld
xchg
and
scas
in
inc
aad
or
jo
and
clc
cmpsb
lahf
dec
in
test
pop
mov
icebp
inc
insb
imul
out
jge
enter
jbe
inc
out
in
flds
stos
lods
lahf
jnp
sub
mov
xor
nop
mov
xchg
call
dec
xchg
sub
in
scas
pop
incl
jae
jp
push
add
pop
and
data16
scas
mov
andb
sub
inc
adc
fwait
es
sbb
addr16
hlt
and
outsb
movsb
les
fisubs
pop
or
lcall
inc
outsb
call
movsl
mov
push
or
sahf
push
out
ds
xor
inc
scas
mov
incl
pop
cmp
lds
rcrl
pushf
stos
pop
xor
int3
std
add
xor
mov
mov
pop
sub
fwait
cmpsb
jns
xor
mov
fs
inc
cmp
dec
adc
clc
ret
ja
push
loopne
sbb
jmp
add
push
xor
lret
pop
push
inc
xor
fsubrp
jns
adc
pop
cmpsb
pop
neg
imul
mov
mov
cmpsl
repz
xchg
data16
jno
cwtl
pop
sbb
in
jno
sub
jmp
pushf
xor
in
jge
pop
sub
mov
in
in
and
add
pop
and
lret
and
cltd
sub
popa
mov
imul
push
inc
mov
xchg
cli
sbbl
sbb
clc
std
enter
sbb
ljmp
sub
or
jns
jno
sbbl
and
loopne
xchg
add
pop
lcall
ss
mov
jmp
sub
iret
sbb
lahf
mov
mov
stos
pop
sbb
lcall
enter
sbb
jmp
or
jp
pop
sahf
pop
pop
notl
mov
or
dec
cwtl
and
pop
stc
sbb
inc
push
cbtw
aad
sbb
mov
shlb
out
push
jo
pop
sahf
icebp
mov
shlb
cmp
cmp
mov
popa
out
iret
int3
mov
mov
jl
scas
mov
adc
rcll
pop
pop
fs
inc
divl
negb
inc
out
mov
in
and
mov
popa
lahf
or
daa
sub
pop
push
aaa
movsb
xchg
bnd
xchg
add
in
mov
test
sarb
test
clc
dec
push
adc
xor
aaa
inc
sub
xchg
jl
dec
mov
pushf
sbb
or
cli
daa
sub
test
aad
cmp
mov
shlb
idivb
arpl
xor
or
das
bound
clc
jae
outsb
fmul
ljmp
or
test
fsubrl
mov
aas
js
inc
cmpsl
xor
mov
xchg
sbb
add
push
push
push
imul
adc
cwtl
test
sbb
sub
pop
add
dec
testb
test
out
cld
pop
es
push
call
mov
jle,pt
mov
xor
sbb
repnz
sub
add
mov
imul
lods
xchg
pop
pop
fstl
xchg
fisubs
adcb
fdivr
xor
xor
xchg
ret
pop
fnstenv
cmc
jle
cmpsl
or
jno
js
fwait
push
push
push
mov
push
push
mov
add
sbb
mov
sahf
movsb
xor
outsl
loop
iret
les
sbb
push
inc
loope
and
inc
arpl
scas
cmp
or
and
pusha
addr16
add
cmp
movsl
test
jmp
or
cmc
mov
int3
push
popf
fwait
iret
inc
daa
mov
lods
imul
nop
fs
enter
hlt
push
cmpsl
mov
mov
jmp
in
scas
jnp
mov
jmp
sbb
pop
imul
inc
add
bound
setae
or
rcrb
fdivrs
into
pop
mov
fldl
jmp
mov
push
repz
mov
cltd
xchg
sub
cltd
sbb
jo
hlt
test
test
push
ss
into
push
xchg
aam
ss
outsb
jbe
sbb
imul
add
push
popf
jge
pop
lock
sub
cmp
bound
add
cmp
push
sub
push
dec
int3
shlb
xchg
push
rcl
mov
imul
dec
aam
xlat
push
and
xor
mov
ja
sbb
addr16
outsl
sbb
mov
inc
sbb
and
jmp
into
adc
insl
das
scas
insb
xchg
out
sbb
push
adc
or
stos
imul
int3
and
mov
test
adc
xchg
scas
dec
and
data16
aaa
adc
shlb
cmpsl
aas
aam
mov
xor
sbb
push
pusha
icebp
inc
shlb
sub
cs
lret
jo
sahf
and
jnp
movb
popa
inc
std
aam
mov
xor
cmp
shlb
xchg
sbb
mov
push
or
mov
xor
push
stc
mov
sbb
push
out
lret
lock
fwait
xor
ss
dec
mov
mov
xchg
mov
push
mov
pop
mov
shlb
lret
notb
es
mov
lock
dec
jmp
jmp
outsb
jg
mov
mov
push
lahf
test
sbb
mov
ds
imul
push
push
mov
push
mov
ljmp
or
xchg
add
cmc
arpl
push
cmc
mov
popf
mov
jmp
shll
sti
jne
adc
cld
sub
mov
mov
je
mov
jle
jecxz
jp
mov
fsubl
out
pop
xor
sub
int
or
sahf
mov
out
sti
or
push
and
push
out
popa
cli
push
add
stos
or
fwait
je
jle
adc
cmp
repz
in
xor
imul
sub
insb
or
stc
dec
adc
dec
push
xchg
push
pop
hlt
rcl
sti
xchg
cmp
lret
repz
mov
inc
fldenv
int3
xchg
cwtl
xor
push
mov
in
mov
cltd
mov
ljmp
add
adc
les
or
cwtl
sub
jecxz
jp
adc
push
xor
cltd
ja
jle
sbb
sbb
push
sbb
mov
icebp
fistpll
mov
dec
pop
lock
out
sahf
and
add
jp
das
cmpl
stos
jno
test
gs
lock
stos
push
test
and
push
fisubrs
scas
jae
inc
jne
nop
sbb
es
xchg
fcoms
cs
xor
repnz
flds
test
inc
mov
pop
rcrb
mov
sub
mov
sub
out
sahf
lock
mov
jns
push
jge
mov
je
into
mov
popf
rorl
push
jb
sbb
in
adc
add
add
pop
push
outsb
inc
mov
mov
and
dec
dec
testl
rcrb
subl
dec
push
scas
cs
xor
mov
inc
into
ss
js
cmpsb
test
cmc
jae
pop
orb
adc
fildll
adc
pop
aam
pop
add
iret
pop
dec
sub
inc
cmc
lea
xchg
popf
es
dec
mov
push
movsl
push
std
inc
popf
and
test
andl
std
daa
outsb
add
jl
lock
push
hlt
icebp
out
pop
jg
xchg
outsb
xor
add
out
mov
mov
adc
jne
repz
sub
pop
pop
add
cmpsb
xlat
les
addr16
sub
jb
bound
adc
mov
xor
sbb
dec
sub
pop
out
dec
repnz
loope
xchg
xchg
das
xchg
test
ja
push
pop
xchg
jl
xor
jg
ds
stos
sub
xchg
dec
rolb
or
int3
loop
push
and
inc
out
mov
pop
xchg
xor
sbb
and
imul
pop
loopne
pop
push
dec
outsl
jmp
leave
mov
push
xor
rcr
int
push
adc
repz
mov
sbb
cmp
push
enter
fimull
push
imul
aaa
pop
aas
xchg
loopne
cmp
push
adc
inc
leave
adc
mov
repz
xorl
mov
out
xor
dec
out
in
stos
popf
lock
jo
int
lret
stc
mov
insl
or
in
int3
daa
clc
mov
gs
mov
arpl
stos
cmpsl
jmp
xor
mov
inc
inc
sub
movsl
xchg
pusha
cmpsl
xor
xorl
cltd
inc
lret
pop
sahf
cmpsb
add
lret
add
or
clc
gs
out
pop
test
dec
rcr
pop
pop
fdivrl
or
stc
insl
loopne
xchg
outsb
cmc
mov
add
push
repz
push
fimull
mov
scas
mov
cltd
ljmp
in
inc
enter
fldl
ds
add
mov
je
sti
cwtl
mov
mov
outsl
mov
mov
cwtl
fwait
cli
and
rdtsc
cmp
lret
jno
push
std
xchg
fstpl
and
jbe
sbb
notb
push
out
sbb
mov
lahf
rolb
xchg
enter
add
mov
jae
fs
popf
jno
shll
sbb
dec
or
pop
mov
clc
mov
dec
cmp
iret
inc
jg
outsb
jbe
js
inc
or
dec
mov
xor
mov
test
ja
push
dec
lea
xor
test
dec
or
and
int
jo
inc
fsub
cmp
cmp
sub
out
cmp
jge
mov
andb
mov
fwait
xchg
in
in
arpl
lods
or
push
fst
dec
cwtl
shll
testb
dec
inc
push
xchg
add
and
lock
rcrl
jg
add
cmp
cs
push
or
add
fstl
inc
bound
aad
test
jmp
adc
imul
enter
fwait
jmp
cmp
push
cmpb
pop
add
in
push
jg
pop
sahf
je
incl
rcrb
jne
mov
inc
aam
cwtl
data16
push
push
inc
push
das
xor
sub
shll
mov
cmp
sbb
test
scas
xor
and
icebp
outsl
lcall
fsubs
pop
push
cmp
sub
lea
loopne
insb
dec
cmc
sbb
jl
loopne
inc
in
cmpb
add
adc
mov
xchg
xor
push
jo
dec
test
and
sti
mov
cmp
xchg
push
xor
test
xor
and
jmp
lret
out
sub
outsl
jns
inc
dec
ljmp
test
fwait
mov
mov
arpl
fbstp
std
insl
cli
mov
jb
in
pushf
dec
mov
clc
push
fstl
orl
cmp
jg
push
aad
sbb
ljmp
ret
mov
pop
sub
xchg
das
dec
dec
push
ljmp
xchg
jnp
jge
adc
cmp
push
mov
sub
gs
and
inc
lcall
inc
sub
xor
pop
into
outsb
out
popaw
mov
cmp
repz
subb
mov
add
fisubl
cmp
mov
xor
and
jae
sarl
lock
out
sub
lret
outsb
pop
movb
add
mov
int3
mov
pop
rclb
mov
shll
adc
pop
mov
inc
mov
push
xor
push
push
rcrb
xor
js
adc
adc
leave
ret
int
cwtl
orb
and
je
dec
jge
jo
ds
cmc
inc
out
stos
xchg
lret
outsb
push
test
fs
stos
cmpsl
mov
dec
repz
inc
xor
repnz
arpl
mov
jns
lret
mov
mov
sahf
xlat
sbb
rcl
jb
aas
pushf
push
and
shl
idivl
sub
imul
mov
mov
pop
pop
cmp
leave
outsb
out
ret
xchg
add
aas
dec
push
jp
cmp
push
adc
pop
push
loop
popf
pop
stos
out
add
pop
pop
daa
test
stos
cmc
cmc
jne
nop
dec
in
fldt
mov
das
push
out
jmp
jae
xor
push
arpl
in
add
pushf
fs
pop
xchg
aam
jmp
add
insb
xor
clc
cltd
add
out
outsb
int
inc
sub
jecxz
jg
push
aad
mov
jecxz
cmp
cwtl
pushf
fwait
lea
test
pop
in
call
cmpsb
mov
jo
mov
and
out
mov
xchg
jae
lods
movsl
and
mov
js
xchg
movsl
dec
or
sub
addr16
sub
mov
cld
xor
nop
mov
xor
cmp
in
mov
repnz
sar
push
mov
and
mov
push
mov
rcl
mov
imul
and
adc
lds
daa
stos
rorl
cmpb
mov
shr
out
into
ret
aas
sti
andb
insl
lret
dec
cmp
xchg
push
insb
mov
push
pop
orl
out
add
pop
data16
mov
xlat
fidivrs
dec
inc
insl
push
ljmp
mov
pop
lcall
xor
pop
xchg
lahf
mov
add
lahf
push
xchg
lcall
shl
dec
sub
in
nop
in
cmpsl
stos
cwtl
enter
adc
ret
insb
mov
repz
loope
call
imul
cmpsl
in
mov
pop
mov
mov
popa
xchg
push
sahf
mov
test
stc
mov
faddp
mov
mov
cmp
hlt
sbb
mov
add
imul
xchg
dec
aad
sbb
dec
inc
xchg
pop
shll
insl
mov
pushf
sahf
es
mov
or
cmp
inc
jmp
xchg
mov
push
and
shr
stc
pop
stc
repnz
push
inc
divb
and
lods
inc
int3
pop
xlat
lahf
enter
mov
rolb
imul
dec
mov
or
gs
jle
mov
nop
mov
lods
call
jl
data16
inc
fldenv
notb
outsl
out
push
movsb
xlat
mov
fwait
sub
dec
fcomp
aas
xchg
insb
and
push
jae
cs
movsl
jge
ficompl
sub
out
pushf
adc
mov
push
lret
leave
jbe
jmp
add
jo
int
adc
mov
mov
push
loopne
mov
mov
lahf
test
xchg
dec
hlt
das
sti
ret
or
or
push
ret
shrl
fsubrs
mov
aam
pop
push
sbb
jno
adc
mov
mov
adc
pusha
sub
inc
cwtl
add
sbb
pop
or
and
pop
jge
dec
add
int
lret
sub
inc
imul
sbb
xchg
in
pusha
xor
mov
or
aad
movl
push
daa
scas
mov
test
lret
js
es
hlt
mov
and
pusha
inc
pusha
fnstsw
ret
mull
mov
int3
sahf
and
mov
and
mov
push
mov
pop
inc
mov
push
inc
cld
sti
mov
jmp
dec
test
in
ja
xchg
lods
mov
jle
or
loopne
gs
pop
addb
cmpsb
mov
mov
idiv
adc
out
in
neg
jne
adc
ds
daa
cmpl
push
xlat
clc
lret
mov
push
data16
add
push
test
xchg
imul
inc
jae
outsb
xchg
test
cmp
sbb
jg
fs
pop
mov
outsb
fucomip
dec
orb
dec
xchg
call
pushf
lods
and
repz
insb
sahf
mov
xor
sbb
hlt
scas
loope
and
ds
filds
orl
push
push
iret
inc
or
sbb
mov
test
ret
jg
cltd
add
hlt
mov
icebp
es
inc
adc
test
test
jp
pop
push
pop
lret
mov
jbe
je
iret
jl
push
daa
aas
mov
mov
outsl
mov
or
mov
push
pop
mov
leave
sbb
dec
mov
xor
push
lds
mov
adcl
dec
mov
and
add
lret
cltd
mov
xlat
into
dec
ljmp
dec
mov
jecxz
xchg
rorl
xor
mov
js
add
jg
es
xchg
add
add
xchg
or
cmp
divl
xchg
xchg
dec
js
inc
add
pop
and
inc
jp
jb
mov
aam
daa
iret
ljmp
test
pop
push
ljmp
cmp
or
divb
sbb
in
je
imul
lahf
xchg
jns
je
fistpll
out
lcall
fimull
and
dec
xor
or
sub
out
dec
fcoms
insb
pop
jmp
fimuls
xor
mov
stos
cmp
mov
mov
inc
int3
lods
out
adc
fsubs
sbb
xor
int3
call
decb
mov
jp
mov
daa
arpl
pop
xlat
cli
cwtl
dec
sbb
rol
jmp
inc
jmp
ret
mov
aam
mov
mov
mov
test
dec
sarl
out
add
jo
rorb
mov
sbb
cmp
or
mov
dec
mov
add
popa
adc
xor
fstp
mull
in
or
outsb
inc
out
sbb
pushf
dec
push
mov
out
cli
out
sbb
mov
popf
stos
sub
lods
int
mov
int
pop
pusha
push
adc
test
pop
shrb
cli
or
pop
push
dec
sub
jno
movsb
mov
roll
popa
xchg
shll
ljmp
test
xor
cld
and
push
fiadds
cmp
addr16
dec
mov
jg
inc
test
insl
push
and
int
ror
rol
inc
cltd
pop
sbb
testb
pop
cmp
push
in
xlat
jge
sti
push
inc
enter
mov
stos
fidivrs
adcb
adc
xor
mov
mov
add
lock
mov
ret
call
das
andl
out
hlt
mov
mov
xchg
xchg
mov
xchg
rcr
mov
stos
xor
cld
sbbb
jns
jmp
mov
push
mov
mov
push
shlb
or
xor
dec
aas
adc
std
sbbb
add
and
or
and
cs
aam
nop
cmpsb
int3
jg
dec
cmc
cld
lahf
inc
loopne
insl
xchg
mov
mov
mov
xor
fmull
lcall
outsb
mov
scas
dec
mov
stos
cwtl
outsb
lret
rcrl
pusha
andb
int
in
pop
adc
std
into
jbe
xor
imul
gs
xor
lock
les
mov
jae
push
ljmp
mov
lea
mull
dec
adc
add
loope
repnz
push
ret
push
ljmp
lcall
int
and
fs
sub
ja
pop
adc
xchg
fildll
cltd
into
test
add
push
mov
mov
or
and
test
mov
flds
jmp
dec
std
in
inc
loopne
loope
push
je
push
inc
adc
test
adc
bound
dec
cmp
fdivl
add
and
scas
mov
jns
jbe
mov
stos
scas
repnz
xchg
scas
shr
ds
pop
mov
roll
mov
mov
adc
cwtl
nop
xchg
sbb
or
pop
mov
inc
add
jge
aam
cmc
aad
in
aam
cmp
xchg
add
imul
in
ds
xchg
add
imul
aaa
or
loopne
mov
faddl
leave
xor
std
or
sbb
lds
cmp
lret
jl
or
popf
push
movsl
dec
in
push
push
out
and
in
lods
hlt
ss
movsl
shrl
push
mov
js
add
mov
sub
insl
std
pop
inc
adc
fidivrs
insl
pusha
mov
lea
cmp
mov
xchg
aad
int3
stos
out
cltd
outsb
adc
dec
iret
imul
or
pop
lods
into
fnsave
scas
mov
rorb
mov
sahf
stc
jmp
lea
lcall
push
stc
fsubl
fcomip
sar
enter
xor
jb
jnp
mov
xchg
lret
jge
xchg
repnz
push
sub
or
adc
loopne
jns
xor
repnz
iret
add
push
lret
push
out
cmpsl
xor
verr
int3
jg
mov
pop
out
or
int3
sub
xor
int3
movb
adc
popf
xchg
mov
sbb
lods
adc
movl
mov
lret
sub
mov
sub
jg
popa
sbbb
pop
add
push
cmp
loop
jmp
leave
icebp
pop
add
jno
jge
aaa
sub
data16
rorl
ficoms
xchg
sub
in
jg
outsl
imul
js
cmp
into
mov
sub
xchg
fcomps
aaa
mov
xchg
lahf
sub
outsl
push
add
or
pop
pop
pusha
push
lahf
pop
fiaddl
push
cmp
int3
cwtl
mov
pop
push
adc
xlat
daa
sbb
js
mov
repnz
std
pop
adc
cmp
ret
adc
push
cmc
mov
inc
dec
mov
push
mov
sbb
push
fstpl
sbb
out
lock
inc
xor
adc
cmp
in
adc
push
jae
lea
lods
addr16
pop
sti
daa
adc
stc
call
or
testl
jmp
mov
fldl
or
dec
jns
jno
int3
hlt
rcrb
movsb
mov
stc
into
addr16
pop
sbb
adc
pop
jb
pop
fisttpll
pop
xor
int
mov
stos
jns
inc
repnz
fsubrs
repz
jns
popa
fcmovne
xchg
scas
mov
int
cmp
das
mov
adc
scas
mov
pop
popa
inc
jb
pusha
leave
into
bound
pop
jns
pop
mov
inc
sbb
xchg
jmp
loop
mov
ret
call
push
xchg
cmc
scas
scas
mov
mov
fidivs
imul
xchg
sbb
adc
and
pop
push
xchg
lcall
xchg
mov
add
add
repnz
jns
jns
inc
faddl
push
negl
test
fwait
cmp
inc
out
and
mov
pop
xor
into
fcoml
cmp
int
inc
enter
insb
cwtl
aas
push
add
in
xchg
adc
and
or
inc
mov
xchg
int
les
or
fstpl
xor
inc
hlt
pop
pushf
scas
sub
rorb
adc
xlat
sahf
test
mov
in
jle
ret
test
adc
imul
push
push
test
mov
popa
jmp
js
lcall
xchg
mov
mov
push
cld
mov
in
pushf
mov
xor
or
inc
xchg
in
imul
loope
aad
adc
cltd
sub
imul
movsl
pusha
fiaddl
test
pop
xor
repnz
adc
jo
rcrb
pop
aas
inc
mov
cmp
arpl
jno
into
enter
sarl
adc
pop
pop
mov
shrl
push
xchg
outsb
ror
in
hlt
addr16
push
ficompl
cmp
mov
dec
daa
sbb
lret
filds
push
push
ljmp
stc
sti
loopne
and
gs
jge
std
bound
sahf
test
cs
dec
fyl2x
sub
cli
jno
daa
xchg
adc
ss
dec
in
pushl
jae
std
or
mov
imul
ficomps
add
aad
adc
inc
mov
sub
mov
mov
mov
xchg
jne
add
outsb
fsubrl
daa
push
lods
mov
jnp
push
js
inc
ss
ss
divb
fdivrs
in
and
call
add
shll
xchg
cli
shll
xchg
std
scas
pop
cmc
out
adc
mov
ja
xor
push
push
pusha
stos
cld
outsb
ljmp
fldln2
mov
roll
in
sub
cmc
scas
cmc
lods
pop
cltd
pop
notl
sahf
sbb
jmp
push
mov
sbb
and
cmpl
mov
shll
stos
or
repz
mov
jl
imul
gs
inc
cmp
dec
jnp
and
xchg
lahf
fcoml
loope
xor
fisttpll
jne
movsl
and
mov
fsubr
jo
xorl
and
xchg
jno
cs
cmpsl
xorl
mov
les
xorl
push
call
xchg
sahf
adc
outsb
fsts
out
ss
faddl
push
loopne
ss
xor
jne
jo
iret
dec
pop
and
ss
fnstsw
add
fimuls
xlat
push
push
cmp
xor
jle
test
pop
cld
cld
testl
repz
pop
sbb
mov
fs
pop
mov
push
mov
dec
pop
scas
jno
leave
imul
hlt
mov
adc
js
rcrl
sub
outsl
pop
idivl
push
push
sti
xor
rcrb
cmpsb
rorl
addr16
mov
xor
and
or
xchg
inc
insb
fisttpl
frstor
inc
insl
pusha
mov
sbb
popa
dec
outsb
fbstp
mov
mov
scas
and
mov
jns
stc
test
xchg
mov
jle
sahf
xchg
cld
test
out
fwait
lock
sahf
out
mov
shll
sbb
stos
rcll
jbe
jno
fsubr
and
push
aaa
gs
mov
ficoml
inc
mov
and
mov
or
lods
dec
pop
cmp
xchg
ret
dec
inc
inc
into
xor
push
movsl
mov
push
loop
pop
xlat
icebp
movsl
jecxz
jae
lds
fidivs
ljmp
or
dec
das
inc
lret
cmpsb
iret
push
xchg
call
out
or
pop
jg
cmp
pop
adc
xchg
mov
sbb
push
sub
or
sub
scas
mov
lea
bound
das
shll
lods
inc
inc
fimuls
nop
pop
add
sub
stos
aad
leave
push
mov
movsl
inc
fildll
pop
lret
lods
repnz
sub
jb
pop
fdivrs
push
cs
push
cmp
arpl
das
subl
push
xor
pop
jnp
jae
sbbl
push
aas
sub
shrd
jbe
mov
out
aaa
xchg
mov
test
xor
ja
or
adc
pop
roll
shlb
xchg
jae
pop
lods
cmc
scas
in
and
push
insb
and
imul
in
sbb
push
movsb
aad
lock
sbb
add
pop
mov
adc
in
inc
sub
movsb
pop
add
mov
shrl
decl
loope
xor
imul
je
fidivrs
int3
out
mov
mov
xor
stos
fstps
mov
enter
push
stc
ljmp
mov
pop
pop
lock
in
xchg
mov
adc
lea
outsb
dec
sbb
subps
inc
andl
jbe
or
mov
jmp
xor
ret
loop
jae
mulb
pop
cwtl
xchg
scas
stos
scas
loopne
or
sbb
cli
dec
outsb
inc
fisttps
dec
pop
jbe
enter
pop
pop
aas
mov
push
jb
into
sbb
roll
fwait
pop
adc
mov
xchg
rcll
int3
lds
inc
nop
adc
xlat
jle
cmp
aad
iret
sub
push
xchg
mov
mov
inc
mov
cmp
cmp
fsubs
stc
lods
sti
jle
ds
loopne
test
dec
out
in
fsubrs
aad
and
in
clc
sbb
loope
stos
or
outsb
mov
sbb
fidivrs
or
xchg
rclb
mov
imull
push
xor
pop
jle
outsl
adc
xor
es
push
iret
andb
jmp
adc
xchg
sahf
js
jmp
rcll
mov
loop
dec
mov
repz
mov
test
pop
xor
adc
jl
outsb
fistpl
cmp
add
jecxz
inc
mov
jb
and
push
notb
fiaddl
daa
push
sub
daa
negb
adc
sbb
inc
test
hlt
aam
mov
out
cltd
xchg
sub
push
mov
push
cs
popf
popa
movsb
add
pushf
fcmovnb
negl
add
sti
fcom
dec
movl
repz
ss
dec
add
mov
jg
mov
testl
loope
or
dec
shll
adcb
sub
inc
mov
mov
jno
inc
add
jnp
pop
push
or
inc
cltd
iret
jae
mov
sub
icebp
push
push
das
sbb
lahf
call
or
rorl
iret
inc
pusha
jns
popa
inc
lds
and
mov
jbe
insl
push
loop
pop
dec
sahf
into
pusha
dec
lods
je
lahf
jb
cwtl
rclb
imul
imul
push
cwtl
sbb
fwait
cmp
lea
scas
repz
pushf
cmp
xchg
ljmp
push
arpl
lea
faddl
inc
jge
rorl
movb
cmp
adc
xchg
test
mov
or
jne
mov
ljmp
mov
adc
sti
iret
lods
mov
xchg
push
mov
sbb
pop
dec
test
loope
call
dec
jbe
movsl
rorb
inc
dec
iret
pop
fiaddl
stos
push
mov
es
leave
arpl
gs
lds
lcall
push
ss
sti
mov
aad
lods
cmpsl
js
cmp
xchg
mov
fwait
aam
lea
pop
insb
cld
adc
xchg
jne
add
rorb
rcrl
push
aam
mov
mov
fcomps
ret
ret
je
incb
inc
push
mov
push
icebp
cs
cmp
inc
lds
lods
fmuls
jno
inc
scas
sahf
leave
imul
pushf
test
cmp
dec
sbb
dec
mov
mov
xchg
movsb
mov
sbb
sub
or
pop
out
adc
pop
bound
jmp
mov
xor
dec
out
cmp
rolb
dec
and
pop
xchg
xchg
repz
daa
jb
adc
jp
mov
bound
std
or
pushf
cmp
dec
xchg
into
ja
repnz
mov
inc
lds
inc
fidivrs
ja
repz
sub
mov
in
jo
mov
push
rolb
mov
mov
not
sub
in
incb
pop
popf
pop
adc
lods
sbb
insl
dec
in
das
movsb
push
mov
dec
insl
pop
aad
xchg
cmc
dec
push
js
std
punpckhwd
sbb
fistpl
xchg
adc
ret
mov
iret
mov
cmp
pop
mov
xchg
ljmp
dec
out
cmpsl
in
test
call
fwait
or
scas
cmp
xchg
cmp
inc
xor
neg
stos
in
into
cmp
fcoml
mov
out
test
push
imull
mov
xlat
stc
fnstenv
adc
lock
add
cmp
inc
pop
jb
adc
push
inc
mov
movsl
inc
add
xor
icebp
jae
or
xchg
es
and
xchg
or
jae
sbb
push
ret
test
aam
sarb
sub
clc
popa
dec
sub
and
inc
addl
or
jp
in
insb
adc
dec
jno
aaa
mulb
push
cwtl
movl
xchg
data16
cwtl
xchg
repnz
jge
push
in
mov
mov
and
nop
pop
mov
pop
adc
in
mov
adc
xor
jne
shrb
out
fnsave
adcl
sub
and
sub
adc
loope
pop
fcoms
pop
xlat
mov
test
adc
test
cs
or
aam
into
fwait
es
mov
dec
xor
jecxz
push
nop
xchg
add
xor
mov
pop
mov
sarl
jp
cmp
test
test
lock
insl
imul
inc
dec
jmp
lods
decl
cmp
pop
push
out
repnz
dec
dec
addr16
les
movsb
shrl
ret
and
push
scas
fbstp
lods
mov
stos
sti
loope
push
jge
inc
push
dec
xchg
stos
xchg
out
fnstsw
mov
xor
je
icebp
shll
shrl
jb
in
inc
ds
adc
outsl
push
mov
inc
xchg
adc
cmp
mov
andl
cmp
inc
mov
stos
movsb
pop
mov
mov
push
rorl
push
insl
jo
ret
xchg
xchg
mov
ret
cwtl
pop
cld
sbb
cld
xchg
and
outsb
fsubrs
mov
push
ljmp
imul
lret
mov
dec
gs
push
fchs
and
pusha
pop
cmp
jb
pop
mov
jne
hlt
adc
fdivs
mov
add
adc
mov
adc
xchg
icebp
xor
rclb
add
xchg
mov
scas
mov
push
hlt
nop
jle
hlt
pop
sub
dec
mov
add
mov
jbe
mov
je
scas
dec
push
ficoml
push
es
ret
and
out
shl
adc
cmovbe
mov
fwait
lahf
xchg
cld
sbb
outsl
xchg
dec
push
xchg
xchg
cs
jns
gs
mov
pop
loope
jne,pt
mov
movsb
mov
or
mov
mov
xchg
or
outsl
mov
or
mov
xchg
insl
out
adc
test
fcomps
in
push
jecxz
jge
sar
dec
imul
ss
push
movsb
jp
sub
cmp
mov
ret
sbb
jns
xchg
repz
jns
adc
xor
jo
arpl
xor
movsb
mov
stos
jno
lds
cli
out
fimuls
xchg
lret
mov
mov
int
std
or
mov
and
or
out
sub
stc
rclb
push
sbb
pop
mov
jg
call
cmpsl
add
lock
insb
or
imul
jl
into
pop
lret
std
adc
orl
cmp
mov
and
test
sbb
xor
pop
int3
in
inc
mov
cmp
mov
addr16
xchg
or
mov
mov
js
imul
lcall
jbe,pt
pop
jns
aam
int
in
add
inc
cli
pop
loop
imul
dec
imul
and
mov
dec
dec
or
xchg
pop
add
xor
stos
mov
mov
cli
mov
cltd
test
xor
push
push
rclb
pop
mov
cli
mov
xor
mov
or
sub
adc
imul
sbb
dec
dec
js
cmp
mov
jnp
sub
std
aaa
mov
sub
rorb
cmp
add
dec
pop
add
xor
or
push
and
dec
sub
cmc
pop
ficomps
jno
xchg
ss
jp
jmp
fcomps
cmc
sbb
pop
lret
fdivrl
in
enter
fists
sbb
xchg
pop
cmc
lock
fisubs
and
sarb
dec
push
sbb
push
mov
or
fidivl
dec
mov
adc
mov
and
fildl
subl
push
scas
test
cmpsl
clc
loopne
xor
pop
cmp
enter
out
lea
lahf
fidivrl
stc
cltd
mov
mov
sub
inc
out
xchg
jae
jecxz
insb
add
stc
dec
push
xchg
outsb
orl
cmc
adc
sbb
movsl
jmp
or
mov
mov
push
mov
mov
popf
add
and
aaa
mov
shrl
jge
fmull
mov
std
addr16
repz
mov
in
sbb
pushf
rcrl
mov
push
je
sti
sbb
push
mov
jbe
cmpsb
mov
aaa
inc
jg
push
cmpsb
or
xchg
sbb
push
add
imul
jno
mov
icebp
xlat
fmul
sub
push
sbb
xchg
and
pop
cmp
xchg
mov
jl
outsb
xchg
xchg
cmp
mov
push
imulb
je
out
popf
mov
ret
push
push
sub
mov
cmp
sahf
mov
push
add
rcrb
test
jl
jl
add
jno,pn
icebp
aad
orl
cmp
pop
push
and
nop
sub
ss
xchg
lea
dec
cmp
pop
mov
sar
inc
outsl
mov
mov
pop
mov
jae
jg
lret
mov
xor
add
jmp
rcll
add
push
pusha
pusha
mov
xor
or
xor
int3
sub
out
mov
mov
mov
insl
pop
or
lret
imul
popf
adc
push
push
push
sti
shld
mov
adc
insb
pop
clc
push
adc
ret
adc
mov
sbb
jle
push
sbbl
push
mov
pop
inc
xor
je
adc
dec
xchg
jmp
inc
ss
sbb
xchg
pop
gs
fcmovu
inc
setnp
lock
test
stos
lea
fcomi
push
mov
sub
mov
lcall
cmp
sbb
sarl
stos
cltd
inc
inc
mov
repnz
cmp
nop
push
xor
lods
cmp
fisubrl
std
xor
outsb
data16
pop
sub
add
pavgw
dec
daa
push
icebp
cwtl
jmp
inc
or
or
pop
or
inc
mov
xchg
jl
scas
inc
or
mov
out
fists
jge
in
jp
jns
xchg
test
jne
cmc
mov
pushl
sbb
nop
inc
sbb
out
dec
loop
mov
sub
push
sbb
mov
rol
out
out
psubq
inc
loop
daa
pop
cmpsl
stos
fildl
add
popa
push
pop
lcall
shll
cs
mov
lock
pop
sub
xchg
dec
pop
push
jns
push
push
xor
or
sub
sbb
mov
xor
mov
pop
or
mov
sub
sub
ljmp
xor
stc
mov
in
hlt
out
sub
inc
push
out
out
das
flds
rolb
loope
jae
pop
mov
scas
adc
adc
xchg
mov
mov
in
or
pop
rcll
inc
sub
cmp
cmp
pop
andl
inc
dec
jo
inc
dec
add
push
orl
sbb
hlt
mov
aas
cld
adc
pusha
pop
push
rol
hlt
mov
testl
hlt
fisubrs
push
shrl
test
xor
inc
insl
ss
dec
mov
movsl
mov
out
mov
jmp
loopne
in
lret
jg
cmp
push
adc
ss
xor
mov
mov
mov
loop
lods
or
adc
jno
pop
nop
jg
sub
cmp
jnp
and
outsb
sti
mov
jmp
adc
pop
mov
add
test
jge
cmp
fidivs
sub
insb
out
out
iret
adc
jnp
rclb
cwtl
xor
shr
sbb
iret
jl
add
push
ljmp
jecxz
in
mov
rcll
inc
xor
or
jo
repnz
lcall
fcoms
push
push
inc
push
add
scas
ficomps
pop
mov
and
outsl
outsb
stos
ret
into
call
fcmovb
sahf
dec
or
sbb
sbb
sbb
or
mov
hlt
dec
mov
sbb
fs
into
std
lods
mov
or
test
pop
add
inc
xor
xchg
shrd
clc
loope
andb
or
jl
incl
jns
aas
push
cmp
ja
push
mov
test
andb
push
dec
add
jns
insb
pop
xlat
jg
stc
in
cmc
mov
mov
jge
aam
rcrl
cmp
jno
add
adc
inc
fnstcw
sbb
jg
or
fisubs
int
inc
ret
loopne
add
ret
lahf
xor
mov
ret
push
mov
daa
ja
aaa
dec
movsl
or
sub
cmp
inc
int
clc
push
adc
inc
cmp
sarl
lahf
sub
or
xor
nop
or
xchg
cmpsb
ja
mov
xor
jno
inc
dec
sbb
pop
mov
aaa
dec
pop
roll
mov
pop
xchg
and
in
xor
inc
loop
adc
scas
loopne
iret
jae
imul
push
cwtl
aad
les
clc
sub
add
cmp
outsl
popl
imul
mov
mov
call
call
out
sqrtps
pop
jbe
sbb
sahf
pop
xor
push
or
mov
imul
adc
inc
test
add
loope
pushf
adc
adc
out
pusha
leave
cmp
mov
add
aas
cmp
popf
bound
lods
or
xor
into
inc
addr16
ret
sbb
out
lods
rcrl
mov
mov
fldcw
pop
cmpsb
pop
push
jl
mov
cltd
mov
cmc
push
cmp
leave
fistpll
sbb
cwtl
or
sub
inc
dec
rorb
cmc
js
pop
pushfw
setl
xchg
pop
or
push
sub
repz
mov
mov
stos
pop
aam
movsl
xor
pop
mov
push
jecxz
jmp
add
xchg
xchg
idivb
cwtl
stos
icebp
push
mov
arpl
inc
fidivl
inc
mov
and
pop
inc
jle
movb
aad
shl
insl
test
adc
std
sbb
push
arpl
dec
loope
adc
and
pop
xor
fcom
lcall
dec
hlt
lods
mov
cmp
fwait
xchg
pop
adcb
pusha
cmpsl
pop
cmp
adc
pop
pop
or
add
lret
imul
pop
jb
push
push
enter
aam
jns
aas
sbb
ficomps
sbb
pop
mov
xchg
loop
daa
push
mov
add
push
and
pop
dec
cmc
scas
sub
xchg
jae
adc
ret
inc
leave
sub
movsb
mov
sbb
dec
xchg
cwtl
out
jecxz
sub
inc
movsb
pop
xchg
int
ja
cmpsl
inc
in
jbe
subl
pop
mov
xor
daa
call
mov
inc
dec
sbb
mov
lcall
shlb
int3
and
push
out
fidivl
adc
insl
test
mov
cli
cmpsl
adc
mov
dec
dec
pusha
adcl
jnp
jmp
lret
stc
cmc
outsb
xchg
mov
in
ljmp
pop
xchg
mov
xor
lret
mov
jnp
mov
mov
cmp
fimuls
bound
int
and
mov
inc
das
add
cmp
sub
mov
sar
ret
and
stos
add
insb
mov
enter
pop
sub
mov
inc
loopne
inc
hlt
daa
ds
xor
imul
push
cltd
fadds
dec
ja
insb
gs
test
and
jbe
mov
push
cltd
cmpl
aas
mov
mov
add
out
pop
push
cltd
stos
fwait
adc
or
and
in
push
pushw
fs
cmovbe
test
les
push
push
push
jbe
sbb
shl
das
push
xchg
sub
sbb
lahf
incb
fsubrl
sub
in
mov
stc
cmpsl
cmp
add
push
popf
insb
inc
ret
jge
pop
and
icebp
push
xor
sbb
faddp
and
mov
aas
adc
test
dec
data16
lret
adc
cmc
xor
cwtl
fdivr
fisubl
negl
mov
xchg
mov
xchg
xor
scas
int3
out
test
insb
xlat
xchg
jb
sti
mov
enter
test
mov
mov
stos
add
pop
es
mov
inc
lds
xorb
aas
mov
cmp
add
sbb
add
xchg
sbb
cld
lret
scas
xchg
repz
into
lods
mov
mov
fists
pop
mov
shrb
pop
outsb
jne
mov
mov
idiv
insb
lods
push
inc
jle
jge
stos
inc
cli
insl
mov
and
pop
shlb
arpl
push
adcl
push
clc
or
xlat
mov
mov
or
xchg
mov
jns
repz
mov
std
dec
add
mov
enter
fwait
jle
nop
ds
fdivl
scas
push
pop
xchg
lcall
ror
lds
jb
mov
outsl
jno
jecxz
scas
sbb
push
jge
jbe
and
mov
jb
and
sbb
xchg
cltd
push
cmpsb
loop
xor
and
loope
sbb
inc
call
adc
movsl
ja
movsl
jns
pop
adc
push
sarl
inc
xchg
bound
jg
mov
pushf
jo
push
push
cli
mov
int
aaa
pop
or
sti
clc
insl
inc
dec
cmp
out
jp
jmp
lock
push
xchg
cmp
mov
and
fldl
imul
testl
mov
push
push
add
xchg
mov
inc
nop
inc
cmp
mov
enter
adc
not
scas
scas
and
rcl
lds
movsb
loopne
mov
dec
and
dec
adc
pop
scas
inc
push
mov
xorb
test
cmp
add
push
jae
lcall
xor
movb
call
popf
mov
jns
cmp
inc
ljmp
pop
cltd
hlt
nop
bound
std
fcompl
sub
push
mov
jecxz
stc
mov
xor
jmp
sbb
cmpsb
test
pop
mov
or
mov
jne
and
jb
and
bound
shrl
xlat
dec
fstps
lret
push
in
bound
std
lcall
push
mov
xchg
dec
mov
cmc
inc
fiadds
ret
icebp
pop
into
lret
jae
stos
inc
and
mov
or
jne
notb
and
movsb
sbb
jl
pop
mov
movl
test
lcall
pop
lcall
or
pusha
enter
out
mov
shrl
test
push
dec
sbbl
push
je
and
inc
scas
jp
dec
lods
fdivl
mov
idivl
cmpsb
adc
iret
subb
enter
repz
xchg
nop
add
mov
xor
jmp
cltd
push
popa
mov
cmp
sub
xor
jmp
mov
xchg
sbb
xchg
aam
pop
xchg
mov
jl
xor
movsl
int3
push
cmp
sub
xor
and
icebp
sbb
int
mov
and
push
scas
and
test
mov
in
shll
pop
pop
push
lcall
gs
adc
test
xorb
mov
ret
mov
mov
repnz
pop
push
call
out
dec
add
push
add
dec
out
js
cld
jp
mov
lahf
cmp
push
add
mov
rorl
adc
sub
in
cmc
push
in
in
sub
push
xor
in
push
lret
inc
dec
call
pop
pop
les
mov
fsubs
xorl
fcmovnbe
push
repz
imul
int
addr16
push
or
xor
out
cmp
pusha
or
in
test
jbe
lods
lds
or
mov
dec
movsb
mov
test
adc
in
add
out
push
xchg
aad
push
out
xchg
mov
ret
adc
xor
inc
ds
mov
push
das
ret
sti
in
mov
jp
mov
mov
test
imul
sub
mov
xor
pushw
dec
pop
push
xorl
mov
xlat
sbb
sti
lea
mov
and
dec
cld
clc
int
scas
mov
sbb
rcrb
jno
and
or
in
mov
jle
out
cmp
cld
mov
and
loopne
test
leave
mov
cmp
push
sbb
add
adc
cld
leave
call
ljmp
pop
orl
jae
aam
sub
lock
mov
lea
jge
mov
xchg
stos
sarl
pop
pop
fists
out
in
das
inc
jne
xchg
xchg
xorl
pop
gs
lahf
mov
xchg
dec
add
mov
or
jecxz
dec
sbb
shlb
gs
aaa
mov
repz
leave
movsb
fildl
std
loope
push
pop
xor
jmp
stc
lods
jae
push
xor
jne
xchg
jo
dec
out
out
pushf
dec
daa
sbb
pop
popf
jle
dec
mov
subb
lcall
mov
sbb
stos
mov
xchg
or
enter
cld
mov
sahf
mov
xchg
xchg
inc
or
adc
test
pop
movsl
mov
ret
adc
jle,pn
xor
pop
jp
pop
jns
ret
cmp
insl
jg
fcompl
in
cli
lcall
andl
bnd
add
mov
popa
mov
lcall
iret
fcmovnb
dec
mov
scas
lds
pop
js
out
jl
mov
sbb
nop
and
ja
mov
popa
xchg
add
rcrl
push
push
push
add
or
adc
lds
ja
lds
cmp
sti
push
lods
out
shlb
add
into
push
leave
out
push
ljmp
inc
int
je
imul
or
sahf
and
xor
cmc
jle
call
xor
out
test
dec
sbb
cmc
mov
addr16
mov
aaa
cmp
movsb
fisttpll
fbstp
mov
inc
adc
push
and
xor
out
inc
ljmp
inc
pop
dec
fwait
stos
inc
insl
pop
ret
mov
push
inc
adc
aas
insl
inc
jb
cmp
cmp
xchg
xor
test
sub
adc
jmp
je
pop
mov
sbb
jnp
jae
sbb
popa
mov
movsb
sbb
popa
jo
cld
lret
cmpsl
mov
add
scas
xchg
pushf
pop
push
adc
lds
or
mov
jmp
shl
pop
xor
rorb
push
lods
test
insb
xor
repnz
in
jns
push
jb
xchg
lods
test
jle
mov
sbb
aad
cmp
sbb
decb
add
or
lret
pop
mov
out
jmp
xchg
lea
movsl
mov
jmp
sub
cmc
adc
ret
pop
and
sub
fadds
xor
out
mov
lods
xchg
dec
xor
push
and
mov
pop
mov
outsl
pop
and
adc
cmpsb
add
push
pushf
inc
mov
pop
out
adc
pushf
mov
xor
dec
sbb
cmp
xor
adc
adc
xchg
mov
fs
icebp
in
loop
js
sub
push
sub
in
cs
test
and
test
sbb
js
jno
and
nop
out
in
dec
imul
movsl
adc
inc
lahf
cmp
jp
test
test
fst
adc
hlt
and
xchg
dec
scas
into
fstl
js
cs
adc
xchg
sbb
les
add
repz
inc
jo
xor
push
mov
cs
mov
jg
test
push
lahf
loop
pop
sub
popf
mov
inc
repz
mov
and
cmp
xchg
in
fnstcw
xlat
sti
mov
pop
mov
inc
testb
rcll
dec
xor
cmpb
or
fists
insl
lock
in
fstl
aad
sub
add
arpl
nop
jge
jl
fnsave
pop
jnp
imul
pop
decl
fadds
jl
sbb
sti
pop
sti
xchg
scas
fbstp
inc
out
inc
add
ffree
fimuls
mov
add
pop
cwtl
mov
shrl
movsl
shlb
pop
dec
je
jl
or
add
das
adc
pop
xchg
xor
xor
sbb
and
or
xor
dec
movl
pop
movsl
pop
xchg
xor
xchg
xchg
out
xor
xchg
or
push
iret
shll
imul
imul
mov
pop
xchg
and
cmp
pushf
add
cmpb
cmc
mov
push
int
call
sarl
fsub
stos
and
fwait
inc
pop
mov
popa
mov
es
cmp
adc
add
adc
decb
pop
mov
sub
test
stc
loop
popf
sub
push
mul
sub
xor
aaa
scas
leave
decl
xchg
js
xor
bound
pop
jnp
in
loop
dec
and
stos
jne
imul
pop
push
pop
hlt
and
xor
int
imul
pop
inc
or
iret
insl
cmc
add
pop
jmp
xchg
scas
mov
add
outsb
sbb
arpl
call
out
push
dec
mov
dec
mov
les
add
movsl
jno
push
jb
mov
xor
call
jns
clc
xchg
orl
lahf
push
andl
mov
test
rcr
iret
testb
dec
imul
jg
nop
dec
cmc
sbb
push
std
xchg
lea
cs
adc
push
repnz
mov
aaa
fcom
sub
lahf
test
mov
add
add
pushf
into
add
fcmovnu
out
int3
sub
jge
ds
out
out
cs
mov
pushf
cmpsb
insl
and
mov
mov
aam
movl
pusha
je
push
test
cmp
out
jmp
rolb
lds
je
ljmp
mov
mov
dec
add
in
xor
inc
inc
fsts
push
or
fsubrs
in
loop
jne
outsb
sub
push
add
mov
pop
lods
cmp
push
pop
jecxz
pop
xor
mov
pop
mov
mov
xlat
mov
inc
jnp
movl
enter
add
inc
push
jo
repnz
popa
mov
mov
sub
or
pop
loopne
cli
pop
adc
bound
pop
iret
dec
clc
repz
jg
xor
inc
in
pop
push
inc
adc
sub
push
js
xchg
movsl
jp
xchg
dec
inc
icebp
and
cld
inc
add
roll
es
pop
xchg
insb
cmp
bound
push
push
push
cmp
in
or
jecxz
sub
pushf
sub
dec
std
push
jp
nop
test
mov
lret
aad
adc
fisttpl
sbb
or
jno
pop
scas
xchg
sar
and
lods
movsl
push
xchg
lock
mov
jle
lock
call
scas
xor
ret
popa
inc
xor
sbb
jo
aaa
push
add
adc
testb
xorb
inc
dec
inc
lcall
jmp
and
xor
scas
adc
mov
repnz
mov
mov
jnp
js
in
push
pushf
xchg
idiv
shll
mov
loop
dec
jge
sbb
cmp
adc
pop
in
scas
and
push
mov
pop
cltd
imul
adc
dec
jo
mov
fstl
mov
shll
repz
pop
into
dec
mov
xchg
mov
bound
nop
mulb
lods
xor
aad
dec
or
call
jp
cmp
in
dec
mov
and
sub
xorb
inc
xor
ss
cmp
or
lret
jecxz
pop
xchg
test
adcb
xlat
inc
mov
jle
sbb
jbe
pop
fwait
lahf
jl
lret
mov
sbb
lahf
outsl
xchg
pop
sub
hlt
out
inc
mov
mov
xchg
shll
test
lds
cs
rcrb
xor
out
push
in
jno
add
sahf
inc
xchg
xchg
insb
pop
sub
pushf
mov
push
aas
in
jge
gs
js
out
cmpsb
cltd
ret
and
rolb
or
mov
inc
mov
ret
arpl
add
mov
jno
pop
pop
mov
repz
jmp
inc
and
mov
dec
and
std
jg
imul
inc
xor
xor
push
xorl
inc
fmulp
sub
xor
and
iret
punpckhbw
jmp
fcmovb
sub
aaa
add
xor
loope
jae
ret
sbb
xchg
cwtl
xchg
insb
mov
dec
cmp
bnd
push
popf
xchg
out
hlt
adc
in
cmp
xlat
out
push
gs
cli
fs
scas
gs
es
add
or
jge
and
mov
or
lock
mov
sbb
jnp
or
inc
inc
int
pushf
iret
push
pop
inc
test
arpl
cmpsl
in
push
add
push
pop
cmp
jecxz
and
jge
jg
sub
in
dec
mov
cmp
je
mov
mov
daa
xlat
sbb
mov
push
jmp
xchg
sub
or
shrb
je
scas
int
xchg
xor
bound
jbe
pop
mov
cld
out
inc
int
or
xchg
cwtl
sbb
icebp
mov
jg
add
lea
and
cmc
push
pop
add
fcoml
mov
dec
jecxz
xor
add
test
nop
mov
xchg
push
jle
out
pop
or
scas
jno
add
lcall
adc
fistpl
orb
mov
add
xor
pop
into
pop
fdivl
push
cmc
aad
jmp
movsb
push
mov
cwtl
lods
out
push
mov
jge
mov
xor
sub
and
iret
xor
jle
push
push
dec
cmp
fldl
jmp
rorb
mov
gs
repnz
rclb
mov
jp
sub
mov
cmp
clc
cli
inc
dec
cwtl
jns
dec
int
jnp
xor
fstpt
dec
sbb
inc
lret
pop
fmuls
cltd
cwtl
mov
ljmp
fwait
ret
or
or
ja
inc
jb
dec
inc
mov
sbb
adc
outsl
xchg
or
jo
js
jae
std
cmc
adc
hlt
leave
and
movsb
jne
sub
lea
call
push
cmp
jmp
jnp
xchg
pop
jo
push
leave
negl
addr16
negl
pusha
jp
xor
mov
stc
test
add
out
dec
imul
xchg
sbb
cs
xchg
roll
mov
nop
rcr
cmp
lds
mov
inc
mov
and
push
loope
mov
push
leave
repz
leave
jecxz
or
cli
shll
push
dec
push
xchg
sarb
xor
cmpsb
test
std
jnp
jge
mov
xchg
cmp
pop
mov
jge
testb
sbb
mov
ret
pop
sarb
cmp
sub
ss
lret
cmp
lcall
movsb
sub
pop
sub
push
push
fstl
out
and
xchg
add
pop
loop
adc
sbb
repnz
out
dec
imul
ss
and
cmp
jge,pn
add
and
inc
dec
sub
mov
pop
aam
or
sbb
gs
sti
mov
pop
xchg
testb
dec
mov
loop
negb
xor
or
icebp
cltd
fistpll
sub
cmp
sbb
add
xchg
arpl
or
scas
and
jp
xchg
cld
and
in
ret
mov
sti
sub
cmp
and
cmp
ljmp
shl
push
pop
ret
xor
cltd
add
jbe
xor
pusha
les
enter
and
mov
repnz
popl
lcall
or
sbb
mov
stc
pop
jecxz
fneni(8087
xchg
or
cmp
ss
lret
ljmp
int
mov
inc
jne
mov
scas
fmul
xchg
lock
cmp
adc
sbb
dec
test
mov
mov
sub
cmp
stc
sahf
xchg
adc
mov
in
add
mov
lret
pop
fwait
imul
mov
add
jge
cmpsl
cs
fidivrl
scas
lret
xchg
das
dec
jns
jmp
dec
xchg
pop
jecxz
cmp
adc
mov
adc
lds
push
addr16
jne
xchg
jmp
in
xchg
mov
scas
cs
in
inc
and
call
cmp
and
mov
leave
pop
push
movsb
cltd
ja
xchg
call
pusha
adc
inc
movsb
mov
loopne
inc
dec
pusha
and
or
popa
div
lods
dec
ljmp
out
mov
fidivrs
or
fs
sarl
add
push
ja
fmuls
pop
push
cmc
lret
pop
notb
xchg
movsl
imul
ss
repz
stos
adc
inc
aaa
mov
cwtl
mov
jmp
sbb
and
std
inc
lods
mov
inc
sbb
gs
fsubr
subl
mov
lcall
add
sbb
loopne
mov
shrl
cmp
mov
pop
push
clc
insl
out
fbld
xor
and
or
and
js
imul
jg
push
mov
loope
push
push
mov
bound
cli
shll
sbb
or
jne
push
pop
fimuls
mov
pop
repz
stos
mov
ss
mov
mov
cmpsl
mov
jp
and
jecxz
popf
test
cmpsl
shl
sub
std
inc
mov
mov
mov
insl
divl
dec
sahf
adc
mov
jl
rolb
dec
loopne
jmp
sbb
jecxz
repz
jmp
out
xor
xor
cltd
xor
insl
or
fisubrl
rcl
and
lcall
lcall
adc
lea
fnstcw
bound
mov
lret
shl
fsubr
push
ret
mov
or
xchg
scas
pop
shrl
xchg
xchg
and
dec
mov
lds
jbe
sub
lods
in
jl
push
mov
or
add
imul
add
pop
out
or
sub
test
call
or
scas
lds
inc
rcr
das
sub
pop
jp
loop
mov
iret
stos
xchg
mov
and
adc
or
add
in
push
clc
mov
xchg
sub
pusha
cli
js
add
adc
lock
add
push
icebp
inc
sub
lahf
pop
push
movsl
hlt
insl
mov
cltd
stos
push
inc
int3
inc
sub
mov
mov
mov
in
xor
movaps
and
cmp
pusha
ret
int
mov
hlt
insl
push
ficomps
xchg
or
test
mov
jg
inc
jl
rcr
mov
fcoms
mov
jl
cmp
repnz
in
or
outsb
insl
add
into
shll
inc
cmp
repz
mov
inc
cmpsl
fcomps
outsb
mov
ljmp
mov
popl
fs
inc
jne
movsb
cmc
fdivrp
pop
mov
cmp
jae
nop
pop
aaa
push
jmp
enter
push
add
into
pop
mov
scas
jnp
setbe
stc
or
sbb
imul
pop
pop
sarb
xchg
ljmp
jae
repz
mov
xchg
adc
push
sub
in
push
in
mul
arpl
mov
repz
sub
incb
mov
clc
notl
jp
xor
push
sbb
shl
lahf
jmp
jno
pop
mov
rsqrtps
lret
push
shll
xchg
inc
pop
jl
xor
jns
adc
test
fildll
pop
mov
add
cmp
call
jbe
pop
ja
mov
sub
dec
les
into
jo
jge
loope
pop
cltd
lods
jnp
dec
movsb
outsl
and
inc
pop
jbe
mov
fldenv
shl
arpl
xchg
sti
aas
sar
xor
mov
xor
je,pn
xor
and
call
xor
leave
and
dec
insb
xchg
sbb
lock
into
faddl
jl
jno
mov
adc
push
mov
xchg
cwtl
sub
les
xor
mov
andb
bound
or
add
es
enter
cld
adc
mov
xchg
adc
cmp
shl
pop
xor
xchg
inc
loopne
dec
hlt
dec
cmpsb
xor
xchg
fs
push
adc
adc
xchg
pop
lods
sub
jle
addr16
ljmp
fcompl
push
and
adc
enter
sbb
xor
dec
popa
cmp
insb
pop
ja
jbe
inc
mov
movsb
outsl
lods
cwtl
aaa
push
and
ja
or
xchg
add
xor
iret
push
xchg
push
pop
push
test
push
aas
sub
call
lret
push
stos
pop
or
jb
xchg
jne
pop
xchg
outsl
rcr
mov
es
cld
mov
enter
adc
int3
sub
mov
xchg
inc
pop
loopne
xchg
push
in
xchg
cmc
scas
sti
ljmp
testl
or
sti
sub
xchg
fs
outsl
mov
mov
and
cmpsb
scas
loop
push
test
jmp
push
mov
xor
dec
mov
repnz
add
dec
xchg
add
xchg
fiaddl
sbb
subl
mov
xchg
xor
fldcw
push
stos
scas
enter
xor
loope
push
xchg
pop
inc
mov
fmulp
xorb
test
add
jl
sti
pop
pushf
test
push
adcb
ret
mov
sub
dec
repz
push
lock
cltd
inc
addr16
mov
les
call
fwait
jmp
mov
ljmp
idiv
mov
cmc
mov
inc
xchg
mov
addr16
dec
xchg
lea
sbb
pop
sbb
fdivl
dec
push
or
fstl
add
sti
lds
adc
frstor
push
xorb
jne
fistpl
mov
adc
push
xor
add
or
cmpl
add
mov
gs
and
clc
hlt
push
adc
ds
cmp
dec
xor
shrb
pop
add
loopne
cli
jp
xor
test
mov
movsb
call
mov
mov
sbb
inc
jae
movl
xor
arpl
mov
mov
add
mov
popa
sahf
movsl
push
jbe
jge
adc
psubusw
das
dec
push
sub
enter
jns
cmp
dec
add
scas
aam
das
mov
popf
ja
sub
in
xchg
mov
dec
jmp
lods
call
adc
mov
jecxz
dec
push
andl
lahf
or
add
adc
pop
push
xchg
adc
ret
xchg
add
mov
mov
jo
pop
cli
inc
ljmp
dec
cmp
sub
adc
mov
mov
xchg
in
push
pop
push
pop
xchg
jmp
stos
jbe
in
inc
xchg
inc
dec
push
adc
inc
scas
dec
ficoml
in
sub
addr16
call
sub
rol
dec
sub
fdivr
xor
rcl
mov
cld
enter
adc
pop
fstps
ljmp
cmp
mov
push
adc
lods
int3
movl
cmp
adc
sbb
xor
mov
inc
jmp
arpl
aas
inc
stos
clc
cmpsb
xor
inc
pop
mov
loope
lods
popa
xchg
fwait
jo
movsb
mov
mov
or
add
shll
cmpl
js
mov
mov
mov
mov
mov
test
lahf
loop
stc
adc
ret
fiaddl
push
std
lock
pop
inc
orl
jg,pt
cmp
into
jae
call
shlb
jno
daa
mov
add
xlat
call
sahf
or
pop
scas
cmp
xchg
fsubp
xchg
push
lds
mov
sub
xor
cld
addr16
add
cmp
es
rolb
mov
jae
mov
mov
xor
lock
mov
sbb
arpl
fwait
loopw
add
sbb
xor
inc
in
xchg
ja
xchg
ret
ljmp
sahf
push
push
or
or
rclb
mov
inc
ret
and
mov
out
orl
dec
enter
adc
mov
pop
divb
sbb
das
lods
bound
pop
and
sub
add
enter
fimuls
inc
shr
sbb
cwtl
push
mov
xchg
lods
shlb
jmp
mov
out
lods
lcall
fdivrl
mov
out
push
cmovno
xchg
into
xchg
sbb
fnstcw
jecxz
int3
and
xor
fsubrl
xchg
lea
in
loope
in
lds
std
jle
pop
fsubs
movsl
clc
sbb
pop
lods
push
aaa
inc
test
jecxz
sbb
jne
sub
lock
popf
sub
das
add
push
inc
push
clc
cli
ja
loope
in
clc
call
mov
add
sbb
pusha
xchg
fs
xchg
mov
mov
jmp
push
int
mov
mov
arpl
in
mov
or
in
lret
sub
leave
xor
sbb
pop
loopne,pt
pushf
lds
inc
xor
rorl
sbb
bswap
and
jg
fnstsw
add
xor
jbe
and
jns
dec
jmp
in
fs
jns
mov
cmp
nop
rcrb
inc
or
mov
pop
mov
adc
push
and
sti
pushf
fwait
pop
xor
loop
adc
cmp
aaa
inc
scas
fists
cmp
mov
pop
push
add
daa
fistl
mov
pop
not
dec
call
cmc
adc
ja
daa
popa
xor
test
dec
add
out
mov
and
dec
popaw
test
loopne
mov
notb
sbb
inc
gs
es
dec
std
test
mov
outsb
pop
xchg
aam
pop
nop
xor
fiadds
addr16
add
adc
jp
cmp
cmp
pop
leave
jle
dec
fists
pop
test
icebp
adc
sub
rcrl
and
aam
mov
xchg
lea
out
jno
loop
jecxz
mov
push
sbb
je
scas
jl
sub
cmc
repz
add
ja
xchg
mov
shl
pop
lock
mov
push
call
mov
mov
mov
stos
lods
aad
jo
mov
ds
pop
inc
mov
shrb
adc
and
and
jae
xchg
sbb
push
mov
pop
inc
es
push
cmp
pop
mov
fsubl
test
cmpsb
fildll
loop
push
loopne
sub
jo
in
dec
jnp
xchg
fisubrs
mov
push
dec
push
fmulp
addb
xor
and
aam
imul
sub
pop
and
or
ljmp
popa
test
sbb
cli
subb
pusha
popf
repz
xchg
out
lcall
pop
pushf
lahf
test
mov
jp
push
call
dec
stos
cli
mov
fldl
push
sbb
in
push
fdivr
sbb
test
imul
ret
fmuls
dec
ret
dec
inc
sub
dec
movsb
xor
les
fldcw
sti
pop
jb
sbb
fildl
cmp
scas
je
add
xor
push
pop
jbe
shll
dec
loope
push
sub
sarl
inc
sub
enter
std
jmp
adc
daa
inc
ja
lods
pop
cltd
fcoms
bound
or
popl
in
test
lods
js
insl
cltd
xchg
cmp
pop
test
aaa
push
cmp
xor
jmp
jecxz
dec
cwtl
stos
mov
insb
cld
sbb
jns
in
cltd
outsb
sub
adc
cmpsl
jg
ror
push
imul
popf
repnz
dec
push
add
xor
cwtl
cmp
in
imul
addr16
mov
push
test
movsl
dec
movsl
inc
mov
pop
inc
adc
cmp
pop
insb
xor
test
lret
ret
mov
les
push
test
outsl
cmp
xor
aaa
aam
call
push
sub
sbb
cmp
out
or
mov
sub
test
xchg
call
mov
ljmp
fbstp
mov
mov
mov
add
dec
lds
incb
fisubl
and
xor
jno
cltd
stc
jg
repz
mov
sub
ljmp
pop
repnz
add
pop
xchg
fstl
mov
shl
push
adc
mov
xor
data16
add
xchg
fnstcw
repz
mov
addr16
or
loop
dec
das
or
movsb
xchg
push
inc
repnz
cmpsl
sub
sub
shll
lea
leave
mov
ror
add
push
rcrl
cmp
shlb
xchg
mov
in
es
loope
addl
rolb
and
xchg
adc
jg
pusha
jns
es
fldcw
sbb
frstor
outsl
ficomps
xor
xorb
jmp
ss
neg
xor
mov
push
push
xchg
fpatan
add
jne
dec
mov
xor
mov
rclb
jp
decb
fisubrl
xchg
xchg
push
pop
sti
and
ss
lods
inc
push
je
push
fsubs
xchg
xchg
ret
stc
dec
sub
lret
rorb
popf
daa
out
ljmp
adc
cmc
cmp
mov
outsb
mov
dec
in
test
pop
out
or
dec
xchg
sahf
inc
faddl
push
inc
push
and
int3
shlb
sub
jb
out
dec
outsb
push
in
or
xchg
add
pop
xchg
js
ret
and
scas
dec
xchg
dec
xchg
push
sbb
inc
lods
cmp
adc
or
mov
loope
jbe
cld
rcrb
gs
dec
inc
std
push
cs
sub
add
ljmp
imul
clc
mov
jae
or
leave
pop
lds
mov
out
dec
or
inc
push
push
mov
iret
jp
ds
pop
rorb
cs
test
mov
mov
mov
adc
mov
dec
or
in
movsb
in
push
iret
adc
nopl
xchg
xor
xor
or
add
aam
ljmp
jae
push
jecxz
mov
mov
mov
dec
repz
push
xor
xor
sbb
xor
mov
stos
mov
scas
clc
adc
dec
xor
mov
ficomps
mov
icebp
fimull
mov
sub
sbb
scas
inc
mov
stos
add
outsl
or
add
ror
fwait
add
outsb
jecxz
sub
ja
push
pop
mov
loop
dec
out
std
adcb
dec
jbe
fisttps
ret
mov
push
or
xchg
int3
call
stc
xchg
xchg
sahf
mov
jbe
inc
test
mov
imul
scas
xor
push
inc
xor
xor
jge
ds
xlat
pop
fs
out
hlt
leave
fisubs
ja
jae
dec
fcomi
mul
and
int
sub
mov
xchg
sbb
shl
jno
jp
clc
or
pop
dec
std
jl
adc
movsb
and
insl
sub
out
or
pushf
inc
mov
xchg
outsb
pop
add
xchg
std
xor
pop
add
cli
jp
mov
mov
pop
test
pusha
popf
mov
xor
cmpb
repnz
add
lods
push
mov
or
lea
dec
repz
xor
xor
push
hlt
add
sub
movsb
pushl
cmpsl
into
add
pop
int
jg
jno
dec
add
push
dec
movsl
push
xchg
stc
mov
ljmp
push
pop
fsub
dec
outsl
stc
rclb
jp
scas
sbb
add
gs
xchg
fwait
inc
push
test
jle
sub
gs
call
and
fisubs
jmp
dec
les
clc
into
jbe
in
pop
mov
daa
adc
cmp
pop
mov
std
mov
lods
mov
cmpsb
adc
clc
sbb
and
in
push
leave
add
or
pop
xchg
test
add
std
aas
fucomp
add
add
out
jno
mov
jo
add
jbe
lods
dec
jo
adc
jl
inc
pusha
adc
or
rclb
push
pop
and
hlt
inc
subl
pop
lret
sbb
jnp
xchg
cmp
jge
xor
in
pop
push
or
rcl
fildl
mov
sbb
sbb
mov
mov
cmc
cs
out
pop
sub
daa
and
pop
dec
jns
lea
cmc
pop
ds
lret
add
lds
cmpsb
push
dec
loop
jnp
cmp
add
push
inc
or
jg
rclb
push
in
add
in
add
pop
pop
jp
imul
lods
xor
mov
adc
outsl
mov
mov
cmp
or
scas
lock
aam
dec
xchg
xchg
dec
insb
inc
cmp
and
inc
or
adc
mov
imull
dec
daa
stc
pop
push
shl
adc
loop
inc
dec
gs
fwait
or
mov
fsubrs
mov
cmovne
addr16
push
inc
and
lret
roll
mov
mov
cmp
sub
cmpsl
push
outsl
adc
push
popf
xor
jno
repnz
ja
inc
inc
xor
pop
addr16
les
sti
fpatan
xchg
or
mov
mov
fs
jns
xor
or
in
xor
dec
sbb
fisubrs
xor
sub
dec
icebp
pop
stc
push
sub
in
xchg
inc
pop
not
aas
push
cmp
mov
sbb
sub
sti
mov
imul
push
sti
mov
and
mov
mov
fimuls
and
and
push
icebp
or
adc
js
int3
add
mov
outsb
dec
or
mov
sub
ss
mov
ds
fists
jp
mov
and
bound
push
push
xchg
stc
xchg
or
in
js
enter
jmp
or
pop
sbb
sbb
lret
dec
cs
adc
pop
sub
push
dec
dec
pop
inc
js
push
andb
or
adc
sbb
push
pop
repz
icebp
pusha
rclb
mov
cmp
push
add
rolb
xchg
and
pandn
cmp
imul
mov
mov
fistpl
std
mov
je
or
dec
mov
mov
mov
inc
sbb
loope
sbb
pop
mov
jmp
mov
mov
shrb
mov
repnz
gs
xor
bound
mov
pushf
das
xchg
pop
clc
mov
ret
push
ljmp
lds
mov
sbb
cmpsl
push
shl
xchg
inc
and
mov
cmc
dec
sub
test
sub
mov
mov
out
mov
pusha
jmp
fcomps
bound
sub
dec
loope
in
xchg
xor
sub
inc
in
cmp
sbb
lds
add
inc
std
mov
aaa
add
jge
fsubrs
scas
jb
hlt
sti
sbb
rep
mov
inc
out
xor
jg
or
push
jo
inc
stc
fnstenv
cmp
inc
lock
inc
repnz
out
xor
dec
xor
push
xlat
jg
test
imul
js
hlt
dec
mov
out
push
pop
fcomi
mov
enter
and
repz
stc
lret
gs
fists
xchg
loopne
shrb
in
test
in
sbb
lret
outsb
xchg
es
rcll
imul
cmp
sub
pushf
daa
jecxz
aas
or
fwait
leave
in
push
sub
roll
mov
mov
add
jbe
xor
mul
mov
xor
push
push
std
inc
out
adc
or
and
decb
inc
dec
lock
rcrb
add
loop
out
arpl
add
aad
sub
popa
xchg
ljmp
cmp
dec
mov
fdivrs
stos
popa
ljmp
cmpsb
fsubrs
andl
xor
pop
adc
jae
pop
test
adc
in
pop
cld
fwait
push
in
adc
xor
jg
pusha
out
cltd
insb
inc
jnp
cli
pop
int
or
fimuls
stc
ds
lods
pusha
dec
aaa
mov
dec
call
je
push
dec
int
aam
add
test
data16
jp
adc
loopne
icebp
aad
cwtl
xchg
loopne
add
enter
int
imul
loopne
test
inc
adc
dec
mov
add
enter
loope
movsb
ds
enter
es
mov
pop
das
inc
jmp
dec
ss
ss
push
inc
jle
xchg
in
out
rolb
out
add
xor
push
pop
push
mov
push
mov
or
bound
push
jae
mov
jmp
mov
and
or
lcall
daa
cli
int
mov
lods
pushf
xor
pop
xor
mov
pop
add
ret
dec
xor
dec
sub
mov
xor
scas
lret
xor
fsubs
jl
push
push
pop
pop
xchg
sahf
pop
jne
xchg
lods
das
cmc
jbe
mov
loop
scas
shr
and
xor
xchg
jae
xchg
lret
fidivs
jl
inc
or
sbbl
dec
pop
cmp
and
sub
mov
dec
lods
pop
add
pusha
jg
cmpsl
in
adc
mov
jae
leave
adc
fwait
xor
sahf
rclb
movsb
pop
data16
push
push
negb
push
pop
mov
xlat
push
sti
lahf
pop
test
xor
sbb
sbb
lret
mul
and
xor
and
addb
in
mov
scas
inc
fcomps
sahf
lods
pop
xlat
and
out
scas
mov
iret
and
mov
sysexit
sub
repnz
pushf
aam
mov
mov
inc
mov
outsb
test
mov
insl
rcll
out
or
inc
cmp
ret
cwtl
jmp
pop
mov
dec
sbb
mov
shrb
adc
out
mov
rcrl
jecxz
adc
mov
test
ret
pop
rclb
or
xchg
adc
xlat
je
jo
xchg
sub
sbb
and
cmp
movsb
out
out
cmc
add
inc
push
ret
pop
popf
sub
jnp
sahf
sbb
insb
cwtl
mov
sbb
and
nopl
popw
xor
iret
push
vrcpss
add
out
in
and
pop
mov
outsl
pop
dec
int3
loope
imul
jp
jno
and
jmp
push
movntq
out
test
lods
roll
mov
ljmp
inc
inc
push
mov
call
add
jg
push
hlt
add
ret
loope
cli
adc
std
mov
mov
cmp
fbld
fistps
mov
add
pop
pop
shlb
inc
movsb
push
pusha
lea
jg
pop
push
sub
insl
push
cmp
mov
and
shrl
out
xchg
adc
fisubrs
xchg
je
in
or
rorb
add
shlb
jle
inc
insb
or
jns
std
xor
adc
rorl
fistpll
call
aam
dec
ret
test
imul
cmp
dec
jne
fucomp
lock
adc
es
inc
sbb
sbb
jecxz
adc
loope
test
pop
aad
cs
cmp
aad
xchg
push
movsl
aaa
shufps
aad
inc
icebp
sub
push
xor
clc
cwtl
mov
outsb
or
dec
pop
dec
ss
cld
gs
addb
stos
or
pushf
ljmp
push
out
dec
hlt
push
xor
dec
jb
adc
lret
jns
cmp
gs
ret
pop
jp
inc
sbb
xor
jae
or
adc
je
sub
mov
hlt
xor
push
clc
jo
xchg
xchg
jmp
outsb
jge
push
or
adc
jbe
std
or
test
nop
fists
xor
out
jge
shlb
inc
gs
test
rcrb
xor
xchg
inc
enter
mov
std
stos
dec
cmc
mov
gs
cmp
mov
sbb
or
js
lret
mov
mov
push
push
insl
lret
repnz
ret
cmc
mov
out
inc
leave
std
and
sbb
scas
rcrb
movups
test
rcll
dec
inc
stos
sbb
bound
sub
mov
cltd
jae
loopne
js
stos
shrl
add
pop
incl
xchg
and
xchg
sbb
sar
or
imul
fucomi
fnstsw
jmp
push
push
jle
mov
aad
xchg
hlt
mov
mov
pop
je
xchg
inc
mov
cltd
push
outsb
sub
add
in
lcall
pop
adc
pop
int3
xchg
pop
stos
into
xor
jmp
sahf
daa
pop
int3
jb
maskmovq
testl
ja
test
inc
cwtl
mov
lods
loope
jns
jno
clc
xchg
mov
imul
xor
inc
pop
or
or
imul
push
sti
mov
mov
mov
fdiv
or
shlb
in
enter
ja
inc
mov
dec
cmp
into
jno
movsb
mov
in
xchg
ljmp
inc
sbb
mov
xchg
pop
mov
into
mov
arpl
adc
popf
and
dec
mov
inc
leave
xor
int3
iret
es
add
insl
sbb
inc
out
in
lcall
and
push
jnp
out
dec
dec
fs
fdiv
and
movsb
jge
sbb
add
inc
lods
hlt
xchg
les
call
fucomip
roll
popa
test
addr16
xor
pop
ret
adc
pop
ret
jp
sub
js
xchg
hlt
sahf
roll
hlt
aas
ljmp
and
scas
xor
pop
test
out
fcoms
push
pop
pop
inc
mov
xchg
out
ds
dec
dec
xchg
mov
mov
sbb
or
jns
sub
jb
jecxz
loop
jl
testl
mov
or
ficompl
pop
gs
sbb
mov
je
mov
dec
fistl
xchg
sbb
ret
inc
mov
dec
stc
movsl
mov
dec
pop
adc
fs
dec
fsubs
aam
aad
rorl
pop
mov
add
lahf
repz
xchg
js
sahf
in
mov
addr16
adc
in
shlb
ret
data16
lds
mov
sbb
shll
or
push
jno,pn
and
pop
adc
push
rorl
mov
mov
dec
push
or
ds
xchg
or
rorb
lods
lret
pop
or
jl
outsb
sbb
stos
push
add
mov
nop
lds
mov
fdivrl
cmpsb
and
jge
add
push
fists
mov
dec
mov
mov
add
or
je,pt
xchg
aaa
or
out
cmpl
add
mov
adc
clc
jmp
popa
sbb
mov
iret
mov
movsb
xchg
loop
mov
stos
xor
jmp
stos
or
xor
mov
pop
xchg
dec
xchg
xchg
jnp
mov
mov
je
inc
pop
repnz
ret
or
shr
movsb
adc
out
xor
mov
cltd
pop
and
mov
aaa
or
mov
xchg
lret
sarb
loop
adc
mov
mov
insb
mov
mov
dec
jl
and
out
ret
fisubs
jbe
test
adc
stos
inc
imul
lock
sub
or
ds
xor
sub
imul
add
je
int3
xchg
or
xchg
outsl
aad
into
das
shrl
movsl
sbb
daa
push
or
stos
stos
icebp
addb
sbb
dec
cmp
cltd
jl
outsb
sub
shrl
inc
in
inc
out
dec
or
or
add
loope
pusha
call
sub
data16
and
xchg
xor
pushf
mov
mov
jno
dec
pop
test
push
cmp
push
mov
jmp
mov
enter
fsubr
nop
fsubl
cmp
sub
lock
ficoms
xor
pop
xor
mov
scas
ret
push
add
mov
cmp
jge
add
jno
ljmp
add
into
addb
testb
pop
xlat
arpl
in
repz
or
fucomip
movsl
lahf
pop
pop
xchg
pop
jge
and
adc
push
mov
imull
test
push
leave
int
or
outsl
mov
jns
mov
xchg
lods
stos
cmpsb
dec
jg
dec
xchg
fsqrt
mov
sete
pop
les
push
cmp
adc
sbb
push
lcall
jne
mov
jo
and
into
fimull
or
cli
dec
je
aas
jno
xor
jle
les
lret
lock
jle
aam
xor
sbbl
lea
dec
fsqrt
adc
or
dec
popf
outsb
in
pop
sub
ds
jnp
push
lods
mov
lock
inc
sbb
sbbl
divl
add
sbb
push
pop
lock
test
cmc
ficoml
jp
stos
fdivrl
mov
cwtl
jle
jecxz
pop
clc
mov
not
ret
xor
les
adc
rol
and
sbb
jns
ret
popf
mov
mov
repnz
repnz
sub
pop
stc
and
fidivs
out
lods
add
add
movsb
addl
int3
lret
xchg
js
jge
sub
push
xor
xchg
jle
je
inc
in
sub
add
jnp
cwtl
lds
xchg
push
sub
sbb
dec
sbb
into
xchg
sbb
xor
dec
push
fidivl
out
in
movsl
fstpt
inc
mov
dec
mov
rcrb
fdivrs
push
mov
mov
xor
xor
mov
ljmp
ret
das
and
xchg
shlb
cmpsl
je
popa
jo
mov
jp
dec
mov
xchg
les
mov
jo
push
mov
dec
es
cmp
addr16
jbe
mov
pop
jmp
inc
lcall
dec
mov
cmpsl
dec
movsb
test
xor
imul
cs
cmc
cmp
pop
pushf
cmp
cmp
dec
cmp
xor
mov
cmp
push
lods
test
ret
dec
push
jle
aad
jns
inc
jle
in
out
sbb
stos
or
adc
in
test
or
xchg
mov
xor
cmp
test
fs
cmp
clc
fcompl
jg
scas
mov
test
shll
dec
test
cmpsb
inc
fs
mov
mov
sbb
lret
add
sub
leave
add
inc
pop
or
inc
mov
jne
push
shll
test
inc
call
mov
out
sahf
mov
push
sub
fldenv
adc
icebp
pop
rcrb
fisttpll
sub
cmpsb
mov
jge
shl
and
shl
cli
test
sbb
push
xchg
cmp
push
cs
lcall
addr16
xchg
mov
lcall
xchg
clc
pop
mov
jae
repz
cmp
sbb
fistpll
xchg
pop
jbe
stc
sbb
shll
shrb
jmp
cld
out
pop
xlat
es
jbe
lock
inc
mov
xor
leave
inc
incb
lcall
push
lea
hlt
fcmovnb
fsubrs
in
pop
adc
out
cltd
orb
sub
cld
icebp
cmp
ret
sahf
add
adc
xchg
call
jge
das
imul
mov
mov
mov
in
add
leave
push
mov
fwait
jbe
inc
cmp
add
mov
into
push
aad
push
inc
mov
addr16
xor
outsb
addr16
in
xchg
or
or
adc
push
fsubrl
xor
lds
ljmp
stos
pop
push
dec
ret
andl
sbb
xchg
jmp
add
add
rclb
pushf
mov
cmpsl
pop
and
clc
mov
movsl
pop
xor
dec
mov
mov
inc
and
push
cltd
sarb
mov
sub
jne
aas
out
inc
push
flds
push
popf
lods
data16
cmpsl
sbb
fsts
ss
xor
fs
add
movsb
jmp
xchg
mov
mov
sub
xor
lock
pop
cmp
mov
inc
push
lea
aaa
cltd
mov
pop
lds
xor
xor
insl
push
iret
mov
arpl
in
xor
in
xor
jmp
sbb
outsb
stc
cmp
and
pop
shl
enter
xchg
aam
mov
and
adc
shll
sbb
push
or
popl
mov
cmp
or
shrb
xor
icebp
xchg
pop
cmp
add
pop
icebp
cwtl
adc
fstps
jnp
mov
mul
scas
xor
dec
in
jmp
inc
jge
jns
xor
add
pop
fiadds
dec
ja
pusha
imul
test
addl
sahf
fs
flds
inc
int
inc
mov
mov
mov
inc
and
adc
mov
pop
scas
sub
leave
lds
push
shll
dec
or
arpl
clc
je
test
cmp
mov
adc
inc
xor
inc
dec
test
push
and
inc
xchg
and
push
or
sub
lahf
jo
in
pop
fmuls
cmpb
jb
cld
cmp
xchg
sbb
add
repz
dec
inc
dec
lahf
pushf
fscale
cs
fisttpl
sahf
gs
fdivrs
icebp
dec
mov
in
dec
push
rcl
cmc
xchg
popa
pop
jb
pop
iret
fbld
loopne
enter
push
mov
pop
lea
in
aad
std
mov
out
mov
mov
das
cmpsb
shll
inc
cmpsb
xchg
call
cmp
sub
fistl
pop
add
mov
out
fwait
pop
shl
or
mov
mov
inc
movsb
inc
jmp
xor
iret
lcall
int
mov
mov
sub
fcoms
xchg
push
rorl
repnz
insl
daa
mov
jmp
movsb
lock
jle
mov
ret
jmp
xchg
loopne
les
sbb
jle
or
mov
gs
gs
iret
jmp
mov
jne
or
repnz
stos
scas
adc
push
cmc
imulb
and
loop
lahf
jno
daa
repz
sub
jp
push
inc
arpl
nop
push
call
int
mov
jmp
sbb
xor
mov
sbb
fsubl
fwait
mov
loopne
out
rep
loope
cmp
inc
push
or
pop
xchg
add
inc
scas
xlat
push
pop
mov
dec
repnz
faddl
mov
sbb
cmp
dec
mov
std
push
jb
aaa
scas
jp
adc
xlat
data16
pop
aam
xor
and
stos
push
or
jno
add
or
dec
xchg
dec
test
mov
lods
in
jnp
outsl
stc
pop
out
mov
ds
add
and
mov
rorb
mov
pushf
aas
or
mov
inc
rorb
mov
enter
or
and
mov
jmp
or
xor
roll
arpl
pop
or
shlb
or
push
jae
pop
es
call
and
sbb
cmp
xor
jecxz
test
imul
dec
jmp
adc
xchg
add
es
fnsave
iret
rcll
out
mov
in
or
test
inc
icebp
fsubrl
aad
outsl
std
inc
add
sub
aaa
pop
cmpl
insb
ret
jbe
imul
testb
imul
fwait
ret
aam
mov
cmp
push
in
stc
into
insl
fs
movsb
js
jbe
push
mov
aad
bound
pop
mov
popa
mov
sbb
inc
test
sbb
std
lcall
into
or
and
call
dec
adcb
mov
jo
fcomp
inc
push
test
inc
fnstcw
sbb
push
loopne
enter
push
mov
mov
push
scas
pop
cmp
aad
or
push
pop
mov
jno
test
and
iret
fsubrs
loopne
lcall
inc
orl
jne
bound
addl
mov
add
sub
xor
mov
fsubrl
in
hlt
pop
mov
ret
ds
xlat
push
stos
cmp
xchg
lea
xchg
or
cmp
fwait
inc
hlt
test
das
push
insl
and
mov
jb
nop
cmp
or
cmp
dec
popf
adc
std
sub
jo
and
xchg
push
jge
test
lahf
test
dec
add
popa
pusha
add
std
mov
call
xchg
mov
out
mov
lret
fiaddl
mov
jo
push
mov
add
xchg
sub
xchg
test
mov
or
hlt
jp
aas
repz
cld
or
cmpsb
dec
add
mov
adc
add
addr16
dec
mov
push
adc
inc
orb
inc
inc
ret
adc
xlat
jl
cmp
test
adc
jno
subb
hlt
dec
add
cwtl
mov
int3
lcall
dec
pop
jne
mov
test
pop
adc
or
push
pop
push
pushf
jl
in
push
ljmp
mov
testl
cmp
xchg
mov
pop
xor
sahf
push
shrl
cmpsl
cmp
orl
jns
stc
mov
loope
mov
jbe
ss
xchg
gs
sbb
lcall
ljmp
scas
push
rcll
jl
addl
dec
inc
push
jae
jnp
mov
stos
push
sarl
push
std
popa
daa
insb
xor
lahf
cmp
jp
hlt
test
sbb
add
bound
enter
cmp
rorb
add
push
test
cmpsb
cmp
shrb
test
or
push
mov
pop
push
in
and
mov
mov
jbe
outsb
rolb
push
aas
lods
jmp
add
add
mov
dec
mov
sbb
mov
mov
mov
scas
ds
push
das
sub
movsb
lds
insl
mov
lds
cmp
sbb
pop
imul
mov
xchg
push
xor
cmp
xchg
inc
mov
push
xchg
les
shrl
dec
xorl
cmp
mov
icebp
add
push
sub
sahf
stos
jne
cmpsl
cmc
popf
mov
sub
adc
jb
ret
xchg
push
push
mov
push
inc
mov
push
inc
jge
pop
jnp
jb
lock
stos
ss
out
fucomip
mov
sub
fisubl
push
inc
out
sbb
xchg
mulb
inc
mov
xor
pop
es
add
rcll
jge
jge
in
pop
rcll
pop
lret
ds
loopne
inc
test
outsl
pop
pop
sub
orb
mov
xor
jecxz
test
and
push
and
lods
js
xchg
or
jno
adc
fidivrl
push
pop
jle
movsl
mov
clc
pop
loop,pn
mov
insb
mov
or
push
push
js
jp
push
rcll
mov
or
add
cmp
and
pop
or
fisubrs
ret
and
mov
out
sub
cli
sbb
jae
adc
rol
loopne
xchg
mov
mov
test
in
jo
sti
cmp
adc
mov
cld
mov
clc
adc
jge
mov
movsb
pop
xor
pusha
adc
jbe
mov
xchg
add
cmp
dec
stc
adc
inc
cmp
jmp
add
jp
cmp
mov
pop
aam
add
negl
xchg
fisubs
jnp
jecxz,pt
pop
xlat
fs
xor
and
xchg
pop
loop
mov
or
jnp
inc
ret
cltd
dec
xchg
dec
pop
test
movsl
pop
cmp
addr16
lcall
jnp
aas
rcr
aam
jg
aad
arpl
adc
xchg
sbb
jb
mov
ret
lcall
mov
inc
js
lcall
sub
mov
cwtl
test
hlt
jg
ljmp
fldl
jp
shll
xor
aad
rol
cmp
mov
es
rol
fcomps
and
add
pop
adc
call
xor
mov
insw
test
fcompl
xchg
mov
xor
pop
stos
pop
and
adc
inc
adc
lret
outsl
jno
sti
mov
lds
movsl
shl
imul
mov
dec
mov
dec
rcrb
into
inc
xchg
pop
pop
fs
adc
loop
fnstsw
xor
rol
loopne
add
xor
xor
inc
xlat
js
test
inc
xchg
inc
aad
and
rorl
lahf
icebp
lret
pop
mov
add
mov
xchg
push
or
fldenv
jae
jg
stos
enter
fcmovb
xchg
lret
adc
push
lods
lods
cmp
xor
cmp
mov
stos
and
imul
push
xorb
inc
mov
inc
mov
jl
inc
out
test
push
sub
mov
pop
je
aaa
lahf
mov
lods
jmp
repnz
xor
pushl
push
pop
in
inc
push
xchg
fsubs
inc
das
repz
lods
movsb
jne
imul
push
jnp
sahf
jbe
icebp
out
xchg
mov
inc
sbb
push
cmp
cltd
push
push
mov
jmp
lock
xchg
add
dec
out
ret
shl
clc
xchg
movsl
fcomps
adc
add
jno
mov
pushf
jle
push
add
and
daa
outsl
shl
lret
jne
stos
addb
jg
sub
js
dec
mov
mov
iret
loope
sahf
enter
scas
gs
lods
fldl
int3
cmp
xor
jle
ret
fildll
mov
sti
push
xchg
adc
in
aad
mov
pop
shlb
mov
insl
in
add
mov
int
insb
push
addr16
movl
js
sbb
sbb
fsts
xor
cmp
add
mov
fdivrl
daa
iret
cmp
mov
popa
xchg
fldt
and
lock
ja
pop
insl
idivb
push
dec
cmpsl
inc
sub
sub
sub
xchg
and
fcmovbe
pop
xchg
jmp
push
in
sub
pop
add
dec
fucomip
fadds
or
cmp
push
mov
mov
cli
aas
movsb
insb
fnstenv
sti
mov
cli
cs
and
xchg
in
dec
les
push
mov
mov
cmpb
fcompl
jb
add
mull
in
mov
psubw
movsl
mov
cmp
add
cmp
popa
ss
sub
stc
fcomps
inc
and
insb
out
cltd
cli
xchg
mov
fcoms
repz
cs
dec
testb
notl
dec
add
in
pop
adc
addl
cmp
jecxz
and
adc
sub
pop
pop
inc
popa
stc
push
cmp
and
mov
pop
dec
adcl
and
data16
add
fsubs
xor
xchg
outsb
int
ss
imul
mov
mov
jl
xor
fwait
out
sub
jecxz
mov
stos
nop
mov
and
ja
test
cmp
test
adc
repnz
mov
dec
push
pop
push
out
mov
ret
addr16
or
movsb
dec
sbb
into
sub
adc
iret
xor
mov
push
jge
add
mov
cmc
pop
push
divb
lock
jnp
or
sub
popa
inc
pop
ds
popf
shlb
push
call
add
ljmp
call
and
cmp
cwtl
mov
xor
cmp
dec
cmp
jne
lret
push
stos
mov
mov
sbb
mov
fistpll
or
pop
and
inc
or
ds
mov
jl
jnp
add
inc
mov
mov
push
out
lret
iret
cltd
dec
cs
or
xor
push
lahf
cltd
aad
sub
mov
adcl
or
stc
add
pop
sub
dec
je
mov
cmc
sbb
rcll
mov
les
jmp
xor
lods
lds
push
inc
xchg
jmp
insl
sub
pop
or
call
jecxz
jbe
int3
mov
in
pop
ljmp
into
jbe
pop
mov
das
cltd
inc
sub
loop
shlb
pop
pop
into
ret
gs
movsb
rcrl
mov
leave
or
outsl
dec
xor
aaa
jno
mov
inc
pop
inc
dec
cmp
dec
std
xabort
cs
test
hlt
mov
test
lds
shll
adc
outsl
test
adc
out
dec
lea
jns
and
imul
xor
std
mov
into
mov
jb
clc
cs
aaa
or
jle
pop
and
nop
xchg
mulb
add
imul
xor
inc
dec
mov
jp
jp
cmp
pop
daa
dec
mov
sbb
push
mov
add
stos
mov
in
mov
sbb
cmc
jmp
sbb
adc
dec
xchg
mov
pop
rcrb
adc
shll
sbbl
or
movsl
or
cmpsb
js
nop
mov
out
and
xchg
mov
adc
rorl
gs
into
imul
stos
jge
mov
pop
movsl
int3
insb
stos
fdivs
mov
test
je
das
mov
jae
sarl
leave
xchg
scas
adc
cmp
test
xor
jns
inc
cmpb
aas
fnsave
fcomps
movl
ret
mov
xchg
jmp
cmpsl
or
shrb
insb
mov
dec
les
inc
and
movsb
jb
cmp
pusha
adc
push
sti
jnp
daa
or
mov
jb
imul
int
dec
aaa
xor
cld
lahf
inc
xlat
push
stos
pop
arpl
sub
cmp
jmp
call
rcll
mov
pop
pop
pop
roll
in
lds
cmp
sbb
cli
mov
imul
fbld
push
test
push
stos
xor
adc
or
dec
andl
add
adc
ficomps
push
cmp
and
adc
pop
push
cld
push
sub
add
jmp
adc
cmc
cmp
stos
cmpl
push
pushf
add
mov
clc
xor
ljmp
inc
loop
je
jb
imul
inc
and
xchg
mov
sub
shll
cwtl
jmp
push
adc
test
loopne
mov
imul
and
xor
push
scas
add
inc
add
inc
ss
test
cmp
call
xchg
lret
inc
sub
cltd
pop
bound
inc
or
mov
jns
adc
sbb
push
hlt
in
inc
mov
lods
lahf
repnz
cltd
aas
mov
pop
roll
fsub
repnz
or
jns
cmp
cli
stc
dec
ja
adc
leave
xor
jecxz
xchg
or
clc
inc
stos
cmpsb
lea
lods
mov
cmp
cmpsb
xor
add
sub
ja
and
cmpsb
mov
and
or
push
std
xor
gs
aaa
pop
jp
or
adc
jbe
cmp
lahf
aam
lods
mov
xor
das
fistl
insl
pushf
dec
cmp
fimull
pop
lea
push
sbb
iret
sahf
sti
sub
lret
mov
pop
add
cld
inc
lds
or
pop
push
fdivrs
in
ucomiss
je
mov
jno
jo
loopne
daa
pop
push
mov
js
xchg
dec
ret
adc
popa
dec
push
ret
lds
lods
mov
mov
mov
jno
sub
sbb
mov
mov
mov
add
pop
xchg
aaa
fcompl
repz
stos
mov
inc
pop
mov
jmp
leave
jge
pop
shr
dec
ds
or
push
outsb
mov
add
ret
lea
dec
sbb
push
fincstp
add
roll
cs
mov
test
sub
cli
adc
push
inc
negb
loop
adc
call
scas
daa
jns
pop
sbb
and
dec
dec
imul
jmp
sub
mov
dec
jp
pop
fdivl
jecxz
arpl
inc
lret
dec
pop
add
imul
jl
add
xchg
in
xor
cmp
decl
jo
add
pop
mov
pushf
test
dec
std
and
jecxz
adc
rclb
dec
sbb
subb
mov
jbe
add
mov
xchg
ret
xorl
dec
cli
popf
and
subb
mov
xchg
out
adc
movsl
sbb
mov
mov
mov
xor
cs
jle
rcll
popf
stc
mov
roll
adc
or
loop
test
jnp
dec
mov
jne
imul
data16
adc
lcall
mov
mov
xchg
cld
je
fisubs
xchg
cmpsb
and
stos
out
int
mov
xchg
cmp
movsb
lret
js
nop
shlb
cli
fdivrl
into
jno
lahf
xchg
jno
shl
rol
sbb
or
js
fwait
bound
xchg
lds
or
mov
push
pop
std
jne
xor
dec
aas
mov
mov
scas
mov
repz
mov
iret
movsb
pusha
ja
mov
jmp
push
sbb
bound
add
xlat
les
negl
push
or
xchg
loopne
sbb
inc
pusha
pop
movsb
jmp
pop
sahf
or
push
sub
adc
aam
repnz
stos
sbb
push
mov
popa
cmc
push
dec
ficoml
shll
and
test
jmp
pop
inc
xchg
xor
iret
mov
jae
push
pop
jo
testl
cs
pop
rolb
or
adc
ret
or
testl
sub
or
or
pop
push
faddl
mov
inc
push
imul
icebp
data16
lcall
inc
das
das
test
lds
lret
mov
jmp
loop
scas
lcall
lods
and
push
fdivr
aad
cmp
scas
sub
je
inc
xor
enter
xor
imul
and
pop
xlat
xor
cltd
and
hlt
push
pop
lods
inc
test
jecxz
pop
cmp
cmpsl
xchg
xor
mov
stos
enter
or
xor
loope
xor
lahf
inc
xorl
lods
inc
jge
jae
adc
pop
test
movsl
push
pop
and
pop
inc
mov
outsl
cs
push
and
bound
jns
cmp
in
add
int3
subl
lret
lea
push
push
sub
jne
inc
aaa
lods
and
mov
int
mov
mul
icebp
jae
test
dec
xchg
xchg
adc
cltd
in
aad
mov
aam
fidivl
xor
gs
loopne
inc
push
mov
sub
xchg
or
mov
in
sti
es
mov
gs
loopne
xor
pop
test
pusha
out
xchg
insl
mov
xchg
inc
inc
inc
sahf
adc
ljmp
bound
out
jno
scas
or
jmp
push
dec
aad
dec
sub
xchg
cmp
cmp
loope
sbb
mov
fmulp
out
sti
xorl
dec
mov
scas
xchg
xlat
pop
scas
xor
test
sub
dec
ret
repz
outsl
adc
sahf
sbb
stc
mov
repnz
sub
lds
jno
inc
nop
fsubs
push
popa
jno
fadd
sarl
mov
pop
fists
cmpsb
dec
movsb
mov
fdivr
dec
xor
xor
adc
pop
mov
cmpsl
mov
ja
pop
inc
mov
pop
nop
xchg
lds
xchg
push
fwait
sub
andl
sub
cmp
in
addr16
nop
daa
cmp
mov
fwait
mul
enter
fildl
addl
cmp
xchg
je
adc
daa
lds
cltd
mov
ja
xchg
mov
iret
mov
inc
mov
pop
cmp
lods
mov
mov
jne
jmp
dec
add
jl
notb
push
fadd
mov
out
shlb
mov
mov
popa
imull
push
jp
sub
jnp
aam
push
movsl
out
jo
out
gs
sbb
push
es
mov
xlat
daa
lods
sub
pop
mov
and
ljmp
pop
xor
rcll
leave
sbb
stos
bound
aaa
cltd
cmp
insl
faddp
xchg
imul
mov
loop
enter
jne
pop
mov
js
mov
hlt
pop
push
mov
jnp
stos
jne
jns
bnd
inc
xchg
and
sbb
arpl
call
xchg
mov
mov
push
inc
shll
fwait
sbb
int
orl
jns
sub
mov
adc
push
push
mov
aaa
and
bound
adc
fmuls
ds
cmp
adc
push
test
aaa
and
xchg
mov
stos
jecxz
leave
or
pop
shlb
mov
inc
jns
xchg
outsb
mov
xchg
push
scas
pop
pop
or
xchg
and
xchg
scas
sbb
jg
add
pop
in
xor
mov
jns
jno
xor
xor
outsb
dec
cmpsl
adc
push
or
sahf
sbb
xchg
xor
or
cs
les
jge
dec
cmp
std
cmc
shlb
sub
dec
jmp
das
or
mov
test
jo
hlt
test
aaa
add
mov
out
js
dec
test
jno
hlt
addr16
ljmp
inc
cltd
test
insb
popa
lods
mov
cmp
push
xchg
lds
fmul
test
clc
in
imul
sub
fnstenv
xchg
or
jp
adc
rcll
addb
aad
sahf
push
lret
mov
pushf
xchg
in
cld
lds
jno
mov
les
jmp
cwtl
out
movsb
cvtps2pd
fcompl
jbe
shll
sbb
fucom
popa
xor
enter
xchg
sub
sub
cwtl
ja
mov
mov
cwtl
xlat
jle
jb
xchg
shl
iret
xor
xor
push
dec
mov
pop
aaa
sbb
sub
sarl
push
push
jb
imul
loope
adc
push
es
out
sbb
add
aaa
in
xlat
cwtl
adc
jg
clc
cmp
xor
cmp
jb
test
stos
or
inc
xchg
neg
adcb
inc
mov
stos
mov
and
leave
mov
or
and
daa
push
push
sbb
ds
ja
in
dec
or
out
pop
loop
dec
adc
cmp
jmp
lret
mov
lea
inc
lcall
repz
popa
mov
pop
xchg
clc
xor
jno
lds
dec
jle
pop
cwtl
add
fwait
push
push
out
push
scas
leave
pop
xor
xor
pop
loopne
or
jl
cmp
pop
pop
push
adc
mov
fcoml
lret
cli
sti
ret
in
lret
stos
fistpll
mov
bnd
pop
pushf
mov
sbb
int
jbe
mov
pop
xor
jmp
jbe
les
into
out
iret
push
pop
cmp
nop
dec
pusha
pop
ds
add
add
sahf
mov
sbb
inc
cmp
sub
push
mov
adc
or
sub
mov
shrb
stc
mov
jmp
into
xchg
inc
leave
jb
jecxz
js
jbe
adc
stc
fcmovnu
outsb
inc
loopne
inc
jne
leave
in
sbb
sbb
pop
push
test
out
je
sub
and
rolb
outsb
and
push
pop
sub
dec
out
xlat
sub
dec
pusha
pop
xor
push
les
and
cmc
xor
lods
sub
adc
ss
std
mov
push
sub
jg
in
sti
repz
mov
outsb
xchg
test
mov
aad
mov
enter
sub
or
pop
bound
out
pop
fistpll
pop
rol
int3
xor
fistpll
push
loopne
add
stos
xchg
jecxz
jge
leave
out
movsl
jl
icebp
mov
push
jno
jmp
jmp
mov
mov
or
aas
push
lahf
mov
loopne
pushf
push
inc
mov
cmpl
call
adc
cmp
inc
mov
push
int3
gs
jno
adc
out
push
xchg
push
mov
dec
and
cmp
lcall
notb
lods
repnz
mov
fs
ficoms
lock
jno
inc
test
push
or
xlat
sbb
je
jne
sbbl
pop
mov
xor
mov
fsts
mov
dec
sub
fwait
sahf
rcrl
in
adc
dec
sbb
mov
not
ret
pop
lea
ja
out
pop
mov
icebp
sub
push
mov
not
mov
adc
insb
jb
cmp
popw
aam
sarb
or
inc
inc
or
lea
test
push
nop
push
jns
cmp
pop
mov
pop
mov
stos
adc
outsb
enter
arpl
dec
jno
push
mov
cmp
mov
shll
jne
mov
inc
ljmp
dec
sub
test
push
mov
dec
and
adc
aam
jge
xlat
aas
subb
dec
lock
xchg
adc
mov
mov
in
mov
pop
xor
sub
or
jnp
test
push
mov
xrelease
jl,pt
adc
mov
inc
dec
mov
aad
and
dec
xchg
jmp
and
jecxz
xor
xchg
stos
and
inc
f2xm1
fcomi
mov
mov
es
sbb
xchg
jne
mov
jle
icebp
adc
push
repnz
cmp
push
sbb
dec
fdivs
jno
fisttpl
inc
out
push
imul
xorl
pushf
movb
lret
js
and
jmp
mov
into
out
das
jle
and
gs
pop
test
jle
inc
int3
nopl
jb
dec
dec
dec
repz
sub
and
popa
add
cs
xchg
aam
adc
mov
stos
mov
pop
cmpsb
push
push
sub
movsb
push
call
sub
bound
mov
iret
pop
std
xchg
fimuls
lods
fidivs
incl
pop
das
or
inc
pop
jp
movsb
and
test
adc
pop
adc
pop
sbb
cmp
int3
jne
loopne
jbe
xchg
jo
rorb
lods
fisttpll
mov
imul
das
mov
inc
pop
std
ja
fimuls
rorb
pop
push
test
out
jl
jb
js
xchg
inc
cmp
je
andb
inc
loopne
dec
jg
cmp
xor
in
shlb
fistl
or
cmp
xlat
pusha
clc
and
lods
stos
in
xchg
push
inc
pop
inc
es
in
dec
mov
cli
fsts
dec
mov
xchg
sahf
ret
and
popf
adc
push
fisttpll
sbb
jne
clc
fwait
rcrl
arpl
sbb
pop
andb
sub
call
and
mov
cmp
out
in
iret
mov
push
scas
add
imul
stos
mov
dec
call
ret
fmull
and
push
addr16
test
xlat
imul
out
xor
jp
aaa
push
adc
mov
es
inc
addr16
push
movsl
shl
repnz
mov
xor
push
dec
jo
in
xchg
push
inc
insl
cld
ds
mov
outsb
mov
dec
mov
test
push
xor
scas
repnz
enter
hlt
or
lods
jno
adc
fdivr
fstps
and
clc
out
pop
pop
cltd
jae
cmp
xchg
jmp
inc
sub
xor
ss
js
dec
mov
out
and
dec
ret
dec
pushf
out
inc
add
cmc
mov
mov
mov
outsb
inc
test
and
jg
jmp
mov
xchg
push
les
and
mov
or
push
mov
loop
js
jns
sbb
sahf
int
fnsave
push
dec
negb
add
push
xchg
lahf
pop
sbb
pop
mov
xchg
cmp
ljmp
icebp
movsb
imul
out
dec
int
jl
js
xor
cmpl
faddl
das
xchg
cwtl
xor
lret
mov
hlt
inc
fidivrl
lret
or
xchg
and
inc
and
sbb
repz
outsl
nop
cld
bound
loop
pop
add
jle
fdivs
sub
or
fnstsw
jmp
and
lret
mov
pop
pop
or
xchg
mov
in
in
js
sbb
leave
icebp
lea
inc
sti
xchg
add
mov
dec
mov
andb
inc
cli
xor
loope
aam
mov
into
js
test
into
ret
push
push
neg
fiaddl
dec
push
das
inc
ljmp
add
lock
je
pop
cs
lods
ret
adc
xlat
and
jbe
enter
push
sub
adcl
adc
push
in
lock
xor
push
add
adc
xchg
or
inc
mov
push
sub
add
dec
adc
sub
movsl
mov
xor
out
jae
lret
ljmp
push
test
adc
inc
jmp
lock
sub
divb
outsb
inc
repnz
xchg
inc
in
jle
int3
arpl
int
out
into
mov
int3
aad
mov
repnz
and
fisubrs
stc
out
mov
rcrb
mov
sbb
and
mov
sub
xchg
fwait
data16
lahf
sbb
mov
loope
fstl
and
or
adc
ds
dec
sub
push
jmp
xchg
or
cmp
xchg
jmp
jp
test
sub
sub
push
add
cmpsl
dec
mov
pop
xor
sbb
stos
push
dec
je
pop
add
aaa
sbb
inc
pusha
out
jl
movsl
outsl
cmp
popf
xor
jb
stc
ljmp
jmp
loopne
popf
xchg
and
out
add
lcall
or
mov
adc
and
jae
loopne
mov
or
push
mull
idiv
jp
xchg
dec
and
aas
mov
fcomps
adc
std
fsubrs
je
cs
sbb
inc
jle
in
or
lea
adcb
push
aam
mov
movsl
andb
ds
lock
sbb
mov
pop
es
adc
jecxz
cs
push
and
insb
jno
add
movsl
mov
sbb
jle
cli
push
lcall
int
movsl
ret
inc
pop
stos
or
stos
addr16
adc
ss
jne
mov
iret
mov
xchg
cli
pop
mov
outsb
sti
pop
cmp
or
ret
mov
mov
jge
add
jl
aad
test
sub
push
outsl
push
pop
or
inc
dec
loope
out
lahf
imul
addr16
lret
jle
sub
loope
push
dec
sbb
imul
cwtl
lcall
xor
sahf
clc
adc
add
fiaddl
lcall
or
es
push
mov
push
inc
pop
and
xchg
popa
sbb
incb
or
push
xchg
sbb
cmp
dec
dec
mov
sub
fildl
ss
repnz
outsl
and
lret
inc
jb
ror
mov
mov
frstpm(287
leave
ds
ss
xchg
sbbl
push
shrl
jbe
mov
jae
loope
pop
mov
inc
xchg
cmc
mov
cmpsl
pop
or
cmp
fildl
bound
xchg
popa
jnp
dec
sub
lods
push
and
pop
lcall
js
outsl
mov
mov
mov
inc
xor
pop
test
jle
in
repz
jl
popf
sub
sub
mov
aas
subl
int3
inc
and
test
fstl
jge
sbb
lret
mov
xchg
inc
sub
int3
into
insl
mov
pop
push
mov
fs
out
aad
lcall
out
scas
sbb
xlat
in
addr16
mov
out
jp
add
test
in
outsb
fdivrl
loopne
mov
mov
sti
test
cwtl
lahf
adc
cld
lcall
xor
call
out
push
inc
push
jae
or
cmp
out
pop
test
cs
jge
xchg
loopne
push
jo
xor
cmp
xor
cmp
mull
icebp
mov
aas
incl
sub
cmp
incb
dec
push
in
ret
adc
aam
out
dec
leave
lods
mov
fdivrs
or
jns
cltd
jne
sti
sbb
mov
mov
mov
and
scas
pushf
fidivrl
hlt
inc
adc
mov
inc
movsl
dec
lds
xchg
addb
push
hlt
lcall
mov
adc
cmp
pop
scas
push
imul
arpl
test
cmp
cmc
xchg
mov
xchg
int
and
inc
pop
jp
testb
rcr
pop
and
mov
lock
loopne
loopne
mov
pop
sbb
xor
roll
ljmp
sub
es
lahf
arpl
push
sbb
lcall
cmpsb
adc
and
adc
ljmp
insb
enter
xchg
inc
sti
cmp
fdivrl
mov
enter
test
and
jmp
cmpsb
jecxz
cwtl
cmp
fisubrs
sti
cmpsl
inc
cmc
push
hlt
aam
fwait
add
mov
loop
sub
pop
sti
and
inc
adc
cmp
push
pminub
xor
and
pusha
jp
scas
pop
ja
andb
or
mov
lods
mov
icebp
clc
mov
dec
sbb
jae
lret
loope
pushf
mov
stos
xlat
scas
inc
cmpsb
jae
jbe
xchg
cltd
jb
es
shlb
fidivl
out
stos
add
out
inc
xchg
sub
cltd
cmp
push
pop
test
sbb
inc
cmpsl
je
fmuls
sbb
lods
sub
nop
ds
push
lahf
scas
and
inc
mov
cmp
xchg
lock
and
aas
lock
pop
mov
and
out
xchg
repz
xchg
pop
mov
rorl
ss
jecxz
adc
lods
jns
outsb
sbb
stos
cwtl
out
push
inc
pop
dec
sub
out
pop
outsb
mov
aad
addr16
leave
shl
inc
rep
popa
int
sbb
jp
insb
pop
lds
xchg
sbb
mov
jg
ss
sub
and
inc
inc
mov
pop
and
movsl
jbe
mov
xlat
mov
testl
inc
adc
or
mov
xchg
adc
mov
xchg
rcr
push
add
xor
push
add
adc
xor
std
adc
push
pop
ja
aam
lcall
fcomp
pop
imulb
xor
mov
pusha
ss
cmp
ds
lret
add
int
gs
test
out
int
fnstenv
pop
in
sbb
bound
in
aad
and
mov
fmull
outsb
mov
repz
hlt
cmpsb
adc
ljmp
aas
and
or
mov
std
pop
daa
jp
les
stos
fadd
cmpsb
les
or
lock
cmpl
mov
in
mov
lret
movsb
cmp
mov
test
addr16
frstor
mov
sub
jmp
or
insb
mov
mov
or
mov
cmpps
das
das
pop
cmpsl
iret
out
daa
xchg
enter
inc
sbb
pop
and
adc
stos
sub
fistpl
inc
les
dec
pop
cmpsl
test
cli
push
loope
fimuls
mov
mov
test
push
scas
mov
lods
mov
out
jne
push
mov
push
jg
mov
push
cmpsl
js
mov
jmp
and
xchg
pop
pushf
push
mov
sub
popf
ljmp
jae
test
fwait
enter
sub
xlat
int
push
cmp
sub
push
xchg
jne
rorl
adcb
addr16
int
adc
adc
imul
push
and
ret
fs
out
pusha
mov
pop
nop
jmp
jecxz
ja
sbb
adc
inc
or
mov
dec
and
mov
sbb
daa
call
push
ficompl
int
imul
mov
mov
xlat
cwtl
pusha
out
adc
daa
gs
mov
scas
sti
xchg
xlat
dec
mov
push
les
aas
xlat
jnp
pop
sbb
mov
mov
pop
das
lret
je
mov
stos
mov
adc
fidivl
aad
sahf
xchg
mov
dec
cmp
out
push
sahf
rorb
xchg
jle
cmp
lahf
nop
mov
test
lret
shlb
jbe
mov
incb
xchg
push
les
and
add
adc
and
pushf
pop
adc
fistpl
into
leave
push
std
ds
push
and
pop
mov
lahf
aas
or
push
adc
xor
add
sbb
rclb
arpl
push
or
das
jns
or
fildl
js
js
arpl
dec
mov
testb
pop
shl
imul
loopne
aas
xchg
and
or
push
adc
jbe
rcll
aas
pusha
insl
fistps
incb
xor
sarl
and
mov
outsl
adc
and
mov
test
mov
and
mov
sbb
adc
jbe
test
push
popf
call
and
mov
inc
in
les
push
call
addr16
std
jmp
ja
xchg
add
jecxz
mov
add
adc
bound
aas
or
sahf
aad
lcall
jge
and
outsl
mov
mov
imul
sar
fnstenv
rcl
stc
jns
decb
in
jne
ss
xor
mov
pop
ljmp
lea
jbe
das
xor
cmpsl
testl
mov
xlat
push
ljmp
std
push
push
cmpsb
jg
test
in
cmp
inc
lock
dec
inc
loop
test
pop
fwait
loope
jge
or
es
out
xchg
xor
popa
jne
mov
mov
pop
sti
enter
out
push
cwtl
hlt
fcompl
cmp
mov
adc
ret
jg
pop
repnz
sbb
and
ret
sahf
adc
cld
scas
ret
sub
xor
jns
pop
pop
adc
adc
sub
inc
mov
fdiv
mull
or
lea
fsubl
into
pop
aam
adc
arpl
fstpl
stc
aas
stos
inc
xor
mov
inc
call
and
stos
jp
push
adcb
xor
pop
xor
cli
pop
sbb
out
dec
fisttpl
scas
imul
iret
decb
or
inc
loop
and
enter
popa
and
subb
mov
add
loope
insb
add
mov
leave
xchg
push
rcl
fadd
mov
add
push
xor
or
shl
mov
sbb
je
fimuls
sarl
xor
inc
je
jo
pop
shll
insl
cltd
aas
pop
adc
popa
sub
cmpsl
cmc
jns
in
lock
dec
call
sbb
add
ret
jle
loope
or
xor
add
enter
adc
mov
mov
repnz
sbb
js
adc
xor
das
and
lods
movl
arpl
sarb
jb
add
jo
xchg
in
fs
movsb
imul
add
jae
add
inc
xchg
and
pop
push
xchg
push
scas
adc
int
dec
mov
test
mov
enter
das
aad
mov
hlt
sahf
lods
or
mov
jb
jb
mov
adc
push
sub
cmp
imul
loopne
divb
gs
push
es
rclb
nop
leave
loop
js
out
pop
dec
lret
xchg
push
mov
cmp
mov
add
push
or
cs
dec
repz
or
or
les
jns
ljmp
daa
cmp
divb
sbb
adc
mov
push
push
and
mov
dec
push
stc
mov
sub
test
js
fs
jp
in
cltd
test
ret
lea
sub
adc
sub
addl
pop
xchg
mov
shlb
mov
leave
test
or
jno
shll
and
fs
sub
jmp
cld
jp
mov
cmc
ss
cmc
cmpsb
dec
jo
imul
or
xlat
push
imul
pop
cmp
int3
jno
mov
mov
rolb
fadd
lock
cmp
test
inc
or
inc
sbb
dec
hlt
mov
mov
and
jne
in
sbb
pop
out
xchg
fnstenv
or
and
xor
mov
sarb
pop
xlat
mov
int3
fiaddl
popa
inc
mov
pushf
push
movsb
push
mov
pop
cmp
repz
andb
mov
add
sahf
or
addl
jg
mov
push
xchg
pushf
int
jmp
dec
xor
mov
push
dec
cld
mov
jg
icebp
ret
cmpsl
rorb
fwait
xor
stos
pop
stos
into
aad
xor
fwait
xchg
xchg
jo
ftst
xchg
jnp
mov
pusha
or
in
pop
mov
in
sub
cld
cltd
add
cltd
popa
outsb
and
cmpl
or
mov
pop
sbbb
add
dec
dec
cltd
add
popa
add
add
scas
dec
adc
adc
jbe
or
bound
shlb
mov
cmp
dec
stos
insl
outsl
and
ror
sahf
xor
add
mov
lret
jmp
iret
jnp
push
dec
inc
adc
notl
inc
movsb
cmc
sbb
sbb
inc
out
xchg
mov
pop
popf
and
aaa
andb
adc
cmpsl
dec
es
cli
fimull
jbe
sbb
cmp
mov
test
movzwl
xor
test
mov
mov
lret
mov
cli
adc
mov
icebp
pop
icebp
xchg
xchg
cwtl
push
adc
and
push
fst
mov
add
and
pop
push
mov
clc
cmc
sub
jmp
mov
call
sti
cwtl
test
dec
sub
lahf
jecxz
popa
lock
adc
dec
dec
js
jle
fstpl
mov
xorl
lods
push
mov
xchg
adcl
fwait
jg
mov
ficoms
ffreep
ds
inc
lcall
or
xor
push
push
xchg
setge
pop
test
mov
mov
fs
sbb
push
mov
dec
loopne
jg
arpl
xor
jb
test
lahf
fiaddl
cmp
sub
ds
ret
inc
sbb
sarb
xchg
mov
aad
sahf
out
or
fdivrs
decb
inc
lods
push
push
popf
jmp
ret
mulb
jmp
xchg
pusha
push
jg
pop
or
scas
xchg
enter
iret
mov
lock
int3
push
notb
sub
cwtl
xor
jecxz
xchg
rclb
mov
add
pop
lods
jo
test
mov
push
and
lret
jns
shrl
lock
lods
or
adc
fcom
repz
push
jno
lret
push
sbb
loopne
push
mov
and
push
aas
mov
test
push
push
xchg
push
mov
mov
lods
xor
mov
lahf
inc
mov
ret
aam
jne
pop
aas
cmp
push
add
pusha
adc
jb
mov
xor
mov
add
xchg
arpl
and
pusha
lcall
jo
pop
sub
int3
in
add
iret
fidivl
out
sbb
sbb
mov
xchg
sub
fwait
mov
mov
fstl
add
xor
push
xchg
sub
dec
xor
adc
mov
adcl
je
or
sub
cltd
call
in
aas
outsl
test
jno
nop
pop
nop
and
dec
cmp
lcall
scas
cmp
add
into
iret
inc
jmp
stos
out
das
insl
push
insb
into
int
notb
jecxz
sub
mov
cmp
jecxz
lahf
or
outsb
arpl
test
pop
mov
inc
add
or
mov
lcall
fbld
cmp
loopne
adc
out
aaa
roll
fsts
sub
sub
fldenv
aad
dec
mov
pop
ljmp
lret
gs
and
loope
mov
or
mov
sub
iret
adc
mov
cmp
in
test
mov
mov
xor
je
ljmp
xor
in
add
sti
sub
popa
leave
mov
sti
idivl
fisubrs
call
mull
inc
lahf
lahf
insl
mov
fildl
sti
in
xchg
cwtl
in
add
mov
lods
rep
int3
push
sbb
inc
outsb
cwtl
stos
aas
das
mov
pop
ds
and
loop
icebp
in
mov
pushl
push
mov
add
or
pop
xchg
stc
imul
add
test
jle
push
push
mov
inc
ficomps
leave
or
adcb
and
arpl
push
cmpsl
sti
stos
das
mov
or
mov
shlb
jle
sub
mov
rol
lods
bound
sub
dec
pop
xor
in
inc
xor
popl
cmp
xchg
mov
iret
aaa
into
or
add
stos
cmpsl
clc
and
xchg
sub
in
push
subl
insl
jae
jns
xor
es
mov
cmc
and
daa
je
test
repnz
sbb
sub
mov
jnp
lret
bound
add
icebp
sbb
adc
pop
sbb
push
imul
xor
cmp
mov
dec
mov
fldenv
jg
in
pop
push
in
andb
and
test
data16
mov
int3
inc
hlt
shll
add
fmul
pusha
test
add
sub
jne
lea
in
lret
dec
adc
push
dec
mov
es
mov
je
mov
and
cmp
inc
shll
xlat
push
xchg
xchg
jns
dec
and
fildl
cmp
hlt
sbb
mov
sti
adc
rorl
inc
mov
pop
xor
adc
cmp
sahf
mov
or
add
pop
imul
cmp
es
sub
jmp
xchg
add
pop
inc
push
mov
addb
mov
lea
cmpsw
or
cmp
in
xor
xor
sbb
cmp
jns
jle
xorb
jg
repz
out
push
frstor
leave
push
sub
fwait
jae
mov
mov
repnz
lret
xor
mov
mov
add
sbbb
fs
arpl
mov
aam
movsl
rorb
cltd
push
rcrb
adc
mov
or
push
inc
add
cltd
loopne
cmp
daa
pop
aaa
mov
movsl
dec
mov
jns
ret
ret
clc
pop
out
pusha
test
popf
cmp
pop
setle
sti
inc
bound
das
rcll
mov
xchg
and
insb
mov
mov
shrb
lret
cmp
inc
push
jae
inc
js
and
inc
nop
cmp
movntq
aas
xchg
or
mov
adc
lret
in
jnp
stc
into
xor
mov
pop
dec
pop
adc
xchg
jl
mov
dec
dec
stos
cmc
fisttpl
jno
outsb
movsb
mov
mov
push
outsb
js
push
fbstp
fidivs
pop
sub
adc
inc
pusha
adc
dec
xchg
sahf
push
mov
pand
push
cmp
lret
mov
inc
in
outsb
add
xchg
or
xchg
dec
pop
or
xor
les
lock
mov
sub
jecxz
sbb
add
jl
out
cld
es
popf
js
jmp
fists
dec
rcll
outsb
lea
and
mov
add
dec
sbb
cli
movsb
lahf
pop
xor
xchg
push
push
xchg
in
xor
stc
xchg
mov
insl
in
cmp
sbb
in
add
cmpsb
ja
inc
lock
adc
sub
or
mov
push
mov
xchg
jmp
pop
fwait
push
or
ja
pop
xor
xor
nop
dec
aad
add
xor
jne
out
shl
gs
xchg
icebp
pop
cmp
ljmp
ss
dec
xor
mulb
push
sub
rcrb
mov
insb
cmp
sahf
cs
movl
fcompl
pop
ret
mov
sbb
xor
insb
mov
push
jle
iret
pusha
xchg
fsubrp
mov
push
dec
xor
mov
or
in
insl
inc
dec
sub
pop
sbb
sbb
adc
mov
sub
mov
test
lret
mov
xchg
xor
cli
ret
ljmp
mov
jmp
ret
xchg
stc
outsl
mov
pop
mov
es
adc
mov
and
adc
cmpsb
sub
mov
add
sub
mov
inc
scas
sub
cld
negb
lods
repnz
aaa
test
ds
sahf
fucomip
push
mov
insl
xor
outsl
orb
ss
fs
sub
xor
loop
and
aad
dec
mov
mov
jae
or
add
out
cmpsl
inc
push
lcall
mov
rclb
inc
cld
xor
cld
cmp
inc
fldcw
aam
fs
in
ret
cmp
out
pop
lret
or
popa
nop
jl
inc
sbb
add
mov
cs
xchg
movsl
mov
xchg
popa
faddl
icebp
push
mov
int3
movsl
xchg
xor
pop
dec
add
push
pop
cmp
pop
pushf
movsl
scas
sub
jne
es
inc
sahf
fbstp
fmuls
cmp
daa
dec
pop
mov
out
das
lret
lock
push
ljmp
push
dec
cmpl
or
stos
inc
scas
cmp
sbb
lods
sbb
push
ja
and
cltd
lods
pushf
pop
jns
test
and
aas
ret
or
jne
stos
les
subl
mov
pop
push
pusha
and
bound
cmp
shll
xchg
push
fwait
jl
repnz
es
punpcklbw
cld
mov
and
push
sbb
out
cwtl
cmpsl
cmp
call
gs
push
xchg
or
dec
fisubrs
bt
mov
mov
inc
call
and
ljmp
xor
or
in
push
dec
cmp
mov
pushl
or
jp
push
out
inc
iret
inc
adc
jl
dec
lret
mov
cs
pop
add
data16
test
fidivrl
fstpt
mov
lret
push
sub
test
fstpl
inc
out
adc
addb
xor
jmp
in
push
call
pushf
jge
lods
divb
jb
dec
mov
outsb
packssdw
aaa
cmp
sub
outsb
daa
xchg
lds
inc
mov
in
push
adc
ret
pushf
adcb
add
sbb
mov
mov
mov
je
lret
sbb
fmul
mov
mov
add
sub
aam
fcoml
push
lock
xlat
sbb
inc
cwtl
ret
mov
scas
in
lods
jmp
push
jne
fmuls
pop
aad
mov
dec
mov
loope
cmp
jo
cmp
mov
mov
push
fidivl
xor
mov
xchg
lock
mov
test
jle
cld
lahf
xor
hlt
into
xor
dec
mov
jbe
adc
mov
adc
add
or
shrl
push
into
or
add
ljmp
pop
jbe
xchg
out
mov
stos
call
sbb
dec
jne
arpl
push
fs
add
and
adc
jbe
push
mov
pop
mov
and
mov
mov
sub
sbb
lahf
inc
sub
mov
arpl
stc
pop
lret
cmp
rcrb
xlat
jno
pushf
mov
sbb
xchg
in
add
inc
cmpsb
loopne
int3
xchg
ds
fwait
scas
push
mov
pop
add
dec
mov
mov
loop
loop
pop
subl
cs
imul
adc
dec
pop
ss
popa
cld
mov
arpl
loope
addr16
jne
daa
and
out
dec
lcall
mov
shlb
add
xlat
or
or
mov
shl
mov
insl
imul
pop
aam
out
mov
pushf
loopw
adc
daa
dec
dec
pop
lret
imul
xor
sbb
repz
pushf
inc
sahf
int3
pop
xor
lods
ja
xor
dec
push
stos
fwait
mov
and
ret
loope
rcrl
jmp
cmp
cmpsb
insb
sbb
leave
dec
loope
js
xchg
or
fwait
xchg
adc
adcl
aas
int3
stc
mov
dec
aad
xchg
mov
imul
xor
and
hlt
adcl
add
mov
lods
pop
adc
jo
jb
pcmpeqd
sbb
dec
fbld
int
enter
fsubl
arpl
pop
ficoml
imul
rcll
stos
sub
dec
pop
int
sbb
sbb
lret
lock
inc
mov
int3
cltd
popf
push
fdivrp
je
adc
mov
push
pop
js
aaa
mov
fcmove
test
pushf
push
cli
cmp
and
xchg
mov
jmp
dec
aaa
lret
xor
xchg
sub
inc
or
fwait
cmp
cltd
movsl
sub
test
nop
jno
mov
jp
mov
ret
jmp
insb
adc
mov
sbb
sbb
mov
add
scas
push
jmp
ret
dec
dec
aad
add
jne
rclb
cmpsl
adc
mov
mov
ds
pusha
push
dec
sbb
push
fsubrp
popf
cltd
xchg
test
aam
fmull
in
dec
xorl
xchg
dec
sbb
cld
xlat
movsb
movsb
clc
jmp
test
pop
dec
mov
jp
jp
scas
pop
in
ss
inc
sub
int
icebp
iret
inc
xchg
std
cmp
pop
shl
ret
lds
dec
dec
dec
sbb
ljmp
enter
sbb
in
adcb
stc
and
mov
push
push
popa
add
std
cmp
push
loop
loope
sbb
stos
mov
imul
jns
jb
xchg
xchg
out
sbb
fimuls
xchg
adc
ret
and
jbe
das
mov
lahf
pop
cmp
xor
jge
adc
repz
stos
or
sti
movsl
out
rorl
das
xor
inc
push
and
dec
pushf
aad
in
xor
lods
mov
aam
cld
mov
mov
les
inc
mov
and
ds
xchg
fsubp
loopne
repnz
addr16
xor
enter
stos
iret
or
adc
mov
jp
dec
arpl
hlt
les
cs
insb
popa
ret
repz
fdivl
fs
xor
mov
inc
mov
daa
mov
jp
aas
sarl
sbb
and
jbe
cli
test
addr16
push
xlat
sbb
xchg
lret
xor
adc
outsb
push
gs
faddl
add
or
mov
xchg
cmp
mov
roll
insl
imul
fiaddl
mov
int
rol
cld
jnp
or
lret
xor
addr16
push
or
stos
mov
mov
mov
fnstcw
mov
pop
int
sub
dec
mov
adc
gs
dec
shlb
add
negb
pop
mov
insb
enter
push
mov
jg
js
lcall
insl
sbb
and
ret
lods
jns
xchg
pop
lret
mov
cmp
sbb
or
jl
push
jae
arpl
push
roll
or
or
out
stos
push
lods
pop
xchg
sub
dec
inc
xchg
cmp
cmp
add
test
fcmovnb
xchg
cltd
arpl
adc
adc
xor
mov
in
mov
xchg
js
or
pop
mov
fildll
ljmp
pop
mov
ret
mov
lds
mov
sbb
dec
jp
es
xchg
xor
ret
sbb
test
sahf
lods
pop
jno
icebp
or
xor
jnp
jle
mov
in
push
mov
push
inc
mov
mov
mov
mov
or
ss
xchg
insl
xor
into
scas
jnp
push
dec
mov
and
orb
daa
dec
rorb
call
pop
cmp
add
push
out
enter
pop
iret
mov
lock
lea
or
sbb
cmpb
push
test
mov
out
adc
je
sti
rclb
sar
enter
dec
mov
loope
iret
pop
sahf
jmp
call
mov
cmp
lea
cwtl
mov
mov
sbb
imul
push
out
arpl
movsb
ret
and
xor
sti
and
jmp
dec
popf
push
jp
add
xchg
rclb
xchg
lods
ret
mov
and
test
ljmp
cli
xchg
addl
add
pop
negb
shlb
ret
xor
cmpsb
shrl
xchg
bound
sub
shrl
les
cmp
insl
add
repz
sarb
aas
sub
jl
stos
lds
lcall
inc
adc
dec
test
loop
pop
out
cwtl
test
neg
shll
shrl
sub
or
xor
jmp
xchg
pop
xor
xorb
sub
mov
mov
fstpl
sub
xor
test
sub
divb
pop
gs
lods
ret
daa
pop
sarl
stos
std
push
cltd
dec
adc
mov
add
test
jno
or
icebp
add
inc
lahf
inc
sahf
jns
imul
cmc
cmp
pop
xchg
pop
adcb
xor
in
cmc
je
imul
xchg
inc
inc
out
pop
push
cltd
jmp
scas
jbe
sbbl
mov
xlat
dec
jge
js
xor
push
int3
pop
pop
loope
das
aaa
xchg
cmp
push
loope
sbbb
movl
push
dec
arpl
push
pop
sub
sub
cmc
cmp
pop
in
mov
dec
sbb
dec
shll
xchg
scas
movsl
in
xchg
jecxz
mov
mov
push
mov
jp
ds
into
xor
inc
cwtl
dec
pop
pop
movsl
lea
jb
sbb
mov
xor
mov
sbb
stos
push
pop
fisubl
ss
mov
adc
popa
xchg
xchg
mov
mov
les
add
adc
mov
xchg
les
pop
sarb
imul
and
lret
cmpsb
and
inc
andb
mov
mov
fs
xchg
mov
fidivs
cmp
lods
sbb
jg
call
adcb
in
sub
xor
sub
xchg
insb
scas
pop
mov
mov
cmp
jl
ja
pop
cmp
pop
inc
inc
mov
js
pop
adc
js
pop
shrl
les
lcall
xchg
movsb
hlt
mov
or
push
push
ret
lods
outsb
or
cmp
jmp
add
cmpsl
pop
jbe
adc
ja
inc
and
fdivrl
sbb
dec
adc
lret
out
movsb
movsl
sbbb
les
mov
out
les
pop
or
pusha
int
ret
inc
jae
cmp
into
push
mov
inc
loopne
movq
mov
sbb
js
divb
cmp
imul
and
mov
push
orb
fs
fisubl
pushl
mov
adc
leave
imul
inc
fcoml
lea
xchg
push
mov
and
inc
push
mov
pop
and
insl
fcmovnb
loopne
push
insl
adc
test
rcrb
out
dec
stos
adc
jns
in
pop
and
fstpl
loope
sub
add
mov
pop
fcmove
dec
std
sbb
cmc
inc
adc
jae
jnp
daa
and
mov
mov
jno
rorb
mov
cmp
cmp
jbe
clc
ret
scas
cltd
nop
out
ss
aad
repz
in
mov
jns
add
das
scas
pop
push
cmpsl
into
inc
rcrl
sbb
mov
adc
leave
push
pop
xor
mov
or
pop
stos
std
jns
sub
sar
jmp
mov
fwait
add
popl
nop
pop
shrl
dec
xorb
sub
dec
mov
mov
into
scas
js
push
mov
pop
insl
pop
mov
push
cmp
fimuls
mov
pop
loopne
inc
or
stos
cld
cmpsb
pusha
fimuls
sub
testb
and
mov
repnz
ss
adc
mov
nop
adc
aam
adc
jbe
out
pusha
mov
and
fnstenv
loope
inc
and
call
inc
fucomp
pop
aaa
pop
addr16
das
in
popa
scas
ja
sahf
push
movb
sub
pop
push
xchg
leave
popa
outsl
arpl
iret
dec
mov
imul
leave
pop
daa
push
dec
cltd
in
in
and
xchg
pop
cmp
push
jnp
xor
pop
jle
jl
sahf
pop
cmpsl
or
jecxz
movaps
ret
insl
ss
cltd
lods
xchg
xchg
xchg
jle
repnz
push
shlb
mov
stos
xor
dec
fcomip
mov
data16
jmp
lds
call
rcrb
sahf
pop
in
or
jle
lret
movsl
xor
fs
sti
sti
jecxz
fcomps
sbb
daa
ja
jmp
sub
xor
mov
iret
outsl
inc
daa
or
adc
iret
mov
jb
nop
sbb
call
mov
inc
frstor
or
clc
jp
ljmp
jae
movsb
scas
mov
leave
shr
push
xor
cmp
dec
mov
or
inc
outsb
movsl
fidivl
push
adc
out
xchg
add
aas
xchg
and
imul
cmp
rorl
or
or
cmc
movsb
out
xchg
pop
inc
fdivp
mov
pop
inc
rclb
jecxz
sub
clc
arpl
add
mov
jecxz
xchg
mov
ljmp
xor
pop
jge
repz
lahf
push
mov
loopne
pop
or
cltd
cli
ja
pop
pop
icebp
push
cmpsl
int
mov
rorb
xlat
test
cmp
testl
mov
scas
js
out
iret
adc
icebp
bound
pushf
iret
cmp
add
aaa
cs
cli
inc
lahf
xchg
pop
cmpsl
pop
cmpsl
fwait
aas
or
sub
xlat
mov
les
cmp
ss
iret
shrl
icebp
push
add
stos
outsb
insb
xchg
adc
sbb
mov
ljmp
pop
inc
xchg
xor
jae
xchg
insb
jno
mov
pop
add
es
push
dec
clc
mov
fwait
adc
mov
scas
shll
push
rcrb
hlt
jns
add
jecxz
shll
adc
fdivrl
loopne
in
test
neg
rcrb
and
push
push
neg
mov
mov
jp
in
repnz
xchg
test
mov
lret
dec
cli
lahf
mul
mov
and
or
sarb
pop
sub
xor
test
dec
fwait
xchg
sbb
andb
aad
pop
add
lret
mov
adc
ret
adc
repnz
xchg
and
push
push
pop
jge
mov
enter
stos
in
pop
adc
inc
popa
bswap
stos
enter
fisttpll
in
loope
imul
xchg
sub
in
xchg
pop
xor
xlat
mov
mul
or
xchg
pop
popf
mov
jmp
imul
enter
sub
test
cld
orl
mov
loopne
sub
jae
and
clc
mov
test
aad
mov
pop
test
xchg
mov
or
cmp
push
inc
adc
xorb
movsl
jmp
imul
cmpsb
aam
push
adc
ss
aaa
loope
int3
lret
insb
into
mov
ljmp
inc
test
mov
mov
jnp
lock
pop
dec
loope
cmp
or
cmp
and
cmpsl
sbb
lods
js
jmp
add
aam
mov
xchg
inc
std
es
cmp
inc
mov
pusha
pop
inc
ret
shl
sub
mov
pop
mov
adc
into
adc
xorb
fadds
fsubl
sub
xchg
jne
mov
in
adcl
enter
inc
and
daa
pop
lret
jl
cwtl
decb
or
push
fidivl
jecxz
xchg
dec
mov
pop
les
or
xchg
clc
imul
jae
mov
test
inc
sub
mov
mov
pushf
mov
cmp
lods
enter
mov
mov
jno
mov
insb
xchg
xchg
bound
xor
iret
aaa
push
dec
int3
dec
adc
xor
mov
mov
inc
clc
lahf
outsb
out
cmp
out
hlt
mull
pcmpeqd
pop
sar
jae
jb
cwtl
add
outsl
addl
pushf
imul
ja
lods
xchg
inc
mov
jb
add
cmp
push
bndstx
mov
add
xchg
or
data16
pop
dec
call
mov
testb
call
mov
out
sub
add
adc
and
mov
std
mov
fadd
insl
in
mov
adc
xor
xchg
jno
push
mov
out
incb
jno
push
sahf
jp
pop
sahf
call
or
mov
pusha
mov
rorl
push
pop
imul
add
pop
xor
and
jns
inc
lods
dec
inc
pop
sub
mov
mov
sub
lea
ret
leave
jmp
xchg
sbb
aam
sbb
pushf
sahf
mov
sbb
push
add
or
cmp
flds
inc
dec
cmp
bound
shll
or
popa
jb
scas
pushf
add
cs
xor
pop
shl
outsl
ljmp
stos
movq
test
pavgb
data16
fstl
mov
mov
fdivrp
xchg
lret
fdivp
inc
mov
add
enter
std
loope
adc
les
or
xchg
leave
xor
outsb
clc
push
jle
jnp
adc
rorl
mov
dec
aad
xchg
cmc
dec
outsl
push
and
jns
xchg
mov
jg
popa
cmp
orb
stc
xor
push
mov
add
test
mov
pop
cvttps2dq
cmp
sarl
mov
jns
fwait
push
shll
leave
dec
cmp
stos
cmp
add
adc
popa
js
xor
popf
push
test
lret
fwait
mov
insb
jne
sub
cmp
jne
loop
stos
mov
sub
jge
mov
scas
xor
sti
sub
xor
jne
pushf
ja
dec
cmp
rclb
mov
sahf
sub
lcall
or
ds
inc
nop
cltd
ss
push
leave
and
mov
roll
incb
lret
dec
jno
or
or
sbb
add
sbb
jl
lcall
lea
adc
xchg
cmpsb
iret
stos
dec
inc
cmp
and
rcrl
inc
and
insl
inc
sbb
lock
mov
fbld
jne
aad
xchg
push
stc
lea
and
test
adc
lods
popf
sbb
push
daa
stc
add
sub
negb
push
imul
push
xchg
adc
fmull
dec
adc
pushf
cmp
adc
inc
pop
popa
xor
into
jns
push
outsb
dec
add
fdivs
and
xchg
cmp
adc
xchg
sub
out
movsb
daa
enter
or
fsubrl
jo
xor
mov
pop
push
test
pop
jge
mov
cld
mov
in
pushf
mov
ret
clc
xlat
sub
cmc
ja
test
dec
out
lock
pop
shrl
and
stos
push
jnp
push
aaa
das
mov
add
lods
sub
mov
dec
out
std
cld
outsb
movsl
mov
sbb
jle
and
push
mov
repz
data16
scas
jae
mov
pushf
jl
inc
jns
lock
and
xor
testb
mov
jg
sahf
fimull
jge
jae
test
call
cmpsl
mov
adc
dec
je
idivb
and
push
fildll
jg
lcall
lock
es
fwait
mov
jmp
leave
inc
shl
lret
test
jnp
sbb
lret
jno
sub
inc
cmp
mov
push
insb
jb
jns,pt
add
gs
in
bound
test
movsb
push
and
ds
mov
xor
int3
dec
pop
imul
insb
int3
out
cmp
pop
mul
push
or
fwait
sbb
movsl
popf
outsl
xchg
fistps
xchg
aam
mov
adc
mov
inc
enter
jb
cmpsl
popa
loope
cmp
jecxz
adc
imul
fninit
cmpsb
divl
mov
in
xor
ret
fs
and
out
xchg
sbb
jno
jle
fnsave
adc
jb
sub
lret
imul
jns
js
fcmovnbe
cmp
js
inc
lea
add
es
pop
jge
popa
mov
movsl
hlt
mov
push
cmpsl
push
xchg
inc
push
push
cmp
jne
mov
push
push
pop
enter
aaa
cmp
push
mov
cmp
mov
ret
lcall
dec
enter
xchg
mulb
sub
pop
gs
sbb
and
xchg
incl
add
in
dec
mov
pop
xlat
ret
into
cwtl
jae
sub
rorl
cmove
add
mov
sub
in
push
mov
xor
mov
mov
jp
sub
pop
xor
sbb
add
mov
sbb
or
jb
inc
add
xchg
call
enter
xor
lret
mov
sub
xchg
push
lret
cli
pop
mov
lret
inc
das
fs
jbe
sub
pusha
in
xchg
xchg
push
mov
rorl
in
push
xchg
sub
cmp
shr
lods
adc
mov
sub
loope
mov
outsb
ficomps
inc
sahf
sbb
shll
mov
icebp
fs
mov
adc
lea
test
or
shrb
and
scas
call
push
ret
mov
mov
clc
sub
mov
gs
sbbl
pop
stos
mov
and
inc
int
sbb
int3
push
std
outsb
cmp
shrl
cmp
push
cmpsl
imul
out
test
ds
sub
repz
or
xorl
mov
add
add
mov
fldt
call
rcrl
aaa
sub
and
jb
push
les
cltd
fstl
mov
cmpsb
xchg
mov
movsb
xor
lea
sub
rorl
jno
lcall
test
mov
fists
jno
fnstcw
pusha
pop
inc
rolb
jnp,pn
push
outsl
mov
jge
aad
xor
xchg
in
pop
nop
inc
ss
popf
cmp
mov
pop
and
xor
repnz
xor
ds
aad
lcall
xchg
in
inc
rorl
loopne
mov
fildll
stos
test
data16
cs
ret
nop
ss
jae
movl
int
sub
out
shll
lret
cmpsb
je
xlat
adc
cwtl
dec
daa
adc
enter
inc
or
cmp
inc
jno
test
ss
sbbl
adc
cs
xchg
popf
stc
comiss
lock
out
mov
dec
jb
pop
or
sbb
cmp
sub
sbb
in
mov
test
cmpsl
testl
xor
mov
jmp
cmp
push
xchg
adc
mov
dec
das
adc
inc
nop
out
mov
xchg
mov
lret
decb
in
enter
jmp
aam
pop
int3
push
adc
sub
push
xor
mov
scas
mov
and
shl
jne
dec
nop
push
cmp
subl
movb
mov
mov
fisttps
push
add
sub
stc
bound
xchg
in
sbbb
jne
lods
pushf
std
aas
test
in
in
scas
cmp
jecxz
add
mov
repz
test
dec
int
rclb
into
sub
lret
mov
pushf
in
movsb
scas
cmp
imull
jle
lahf
and
in
std
adc
cmp
mov
or
cmp
adc
jns
adc
pop
adc
mov
in
mov
adc
hlt
aam
xor
and
scas
cmp
sti
cwtl
adc
mov
icebp
xor
sub
leave
js
shl
dec
push
mov
mov
xchg
fnsave
ret
cltd
mov
int3
inc
mov
mov
cmpsb
add
push
dec
fwait
les
jno
test
jne
mov
cmpl
mov
xchg
setnp
push
mov
lds
jmp
ja
insl
xor
inc
pop
aam
and
mov
lds
sub
xor
rcrb
mov
popa
jecxz
push
add
mov
lds
pop
out
dec
popf
outsb
lods
xchg
rcrb
cltd
frstor
pop
das
rorl
es
orb
test
das
cmpsb
pop
mov
call
sbb
stc
push
add
xchg
mov
in
or
jne
lcall
pop
popa
mov
and
push
loopne
mov
inc
testl
ror
ljmp
mov
sbb
fmuls
stos
in
loop
test
cmp
ret
mov
addr16
and
or
inc
lods
inc
aam
leave
jno
push
enter
jmp
cld
incb
dec
push
cli
out
mov
mov
pop
xchg
adc
mov
push
xor
mov
cmpsb
lock
xor
add
lgs
xchg
imul
insb
mov
sbb
pop
sub
jle
ret
push
je
roll
dec
sub
add
pop
add
aam
fdivs
outsb
mov
xor
add
sbb
je
out
repz
sbb
cwtl
xor
and
lock
ret
testb
xor
jle
push
outsb
icebp
push
in
cltd
iret
loopne
js
or
ja
mov
jp
addr16
scas
push
pop
mov
xor
lret
inc
popa
test
mov
call
and
mov
pushf
fiadds
jno
xchg
dec
mov
cmp
in
push
mov
clc
push
ficompl
xchg
mov
cmp
aas
out
add
stos
imul
xor
stos
js
mov
nopl
int3
sbbl
jb
xchg
sub
sub
lds
push
inc
shrl
pop
cmp
and
ja
xor
xchg
or
jo
mov
xchg
stc
add
les
xchg
adc
jae,pt
in
jnp
inc
stos
push
jmp
inc
dec
adc
cmp
xlat
imul
xor
call
dec
jae
add
mov
jns
sbb
test
mov
adc
popa
ror
shlb
or
aad
pop
inc
inc
inc
inc
inc
test
fistpll
push
mov
mov
movsb
sbb
add
in
cmp
out
cmp
shrl
cli
jne
addr16
out
or
xchg
and
test
push
push
inc
xchg
outsl
outsb
ljmp
pop
and
ja
fidivrs
rorl
sti
ds
dec
rorl
std
cld
mov
xor
inc
sbb
enter
add
shrb
fnstsw
pushf
rcrb
fucom
mov
jns
add
js
mov
imul
sbb
mov
cmpsl
jae
push
jb
or
bound
ret
filds
jle
fs
cmp
shrb
bnd
test
jg
sub
out
movsl
sar
push
sub
lods
nop
out
push
or
leave
test
xchg
push
xchg
jnp
aaa
xor
ret
push
roll
pop
jbe
gs
test
add
sbb
mov
les
out
cmpsl
jne
out
call
cmp
arpl
fstps
adc
dec
mov
and
jno
sbb
inc
pop
cmp
pop
repnz
jae
ds
or
lahf
aas
xor
jns
fistpll
mov
mov
adc
out
fdivl
shlb
dec
clc
ljmp
sbb
dec
test
mov
cmpsb
out
vmovss
add
loop
jnp
movsl
xor
mov
xor
fnsetpm(287
mov
jge
mov
shlb
mov
data16
pop
fimuls
fisubs
jns
lret
scas
xadd
mov
adc
sbb
movsb
sti
loopne
mov
popa
iret
pop
ja
adc
leave
arpl
mov
mov
adc
imul
push
mov
cltd
imul
notb
xchg
lods
cmp
add
movsb
sbb
rcr
or
xor
ja
or
ds
das
jns
push
mov
test
fwait
and
popa
jg
jp
push
stos
inc
xchg
std
lret
out
and
jle
aam
adc
or
stos
scas
ss
and
and
push
cwtl
mov
mov
mov
div
xor
cmp
cmp
cli
jno
daa
push
jne
push
and
mov
addr16
cmp
cmp
and
hlt
mov
shlb
inc
sub
fnstsw
aas
pop
xchg
loop
out
mov
inc
cmp
loopne
lcall
dec
cmc
leave
loopne
inc
mov
add
xchg
cmp
push
sbb
add
jb
test
mov
adc
mov
push
cli
pop
test
add
pop
fimull
xchg
inc
sti
jb
cs
inc
xchg
mov
add
pop
sub
test
clc
dec
cmp
mov
cmp
sbb
jp
and
outsb
add
out
jns
int
cmp
jmp
or
xor
scas
loopne
fidivrl
mov
pop
jmp
sbb
mov
scas
idivb
sarb
pop
arpl
cld
mulb
push
push
orb
and
psrld
scas
mov
cmc
das
cmp
cmp
bound
mov
dec
add
pop
orl
cmp
gs
jle
pop
sbb
xchg
lret
lods
and
fistl
jle
insl
jnp
js
or
and
and
xor
lcall
into
icebp
js
add
jl
nop
pop
ds
inc
sbb
cmp
lds
xor
sbbb
cmp
cmpsb
lret
cwtl
cmp
lahf
adc
popf
fsts
mov
cmp
daa
jae
mov
orb
cld
mov
jge
mov
in
js
fisubrl
lds
rcll
lahf
mov
shrb
or
mov
filds
inc
xchg
and
call
stos
inc
icebp
jns
or
outsb
pop
jge
or
push
pop
mov
lcall
int3
ret
cld
or
mov
cmpl
mov
mov
insl
iret
scas
xchg
popa
cs
cltd
lcall
pop
clc
fisubrs
pusha
cmp
pushf
lret
test
sub
push
into
stc
ret
cmp
negb
ljmp
out
sbb
add
nop
dec
xorl
call
lahf
adc
mov
ret
mov
mov
adc
adc
mov
and
rol
xchg
int3
mov
mov
ss
loope
fidivs
sub
repnz
dec
dec
push
fwait
mov
orb
mov
pop
cmp
pop
loop
cld
xchg
xchg
inc
sbb
out
test
sub
int
cwtl
push
fisttpl
nop
pop
sub
xor
dec
cmp
inc
push
and
mov
out
ss
cmp
mov
loope
popa
add
jne
inc
inc
mov
in
xor
xor
pop
in
out
jmp
add
cmp
test
je
lret
push
push
mov
imul
pop
mov
mov
or
ds
dec
scas
ja
inc
leave
daa
inc
pusha
xchg
loop
ljmp
insb
rorb
xor
jp
repz
adc
and
in
js
sbb
cmp
push
xchg
inc
aaa
icebp
jno
and
adc
into
jge
sub
movsb
clc
add
lcall
push
int
adc
loopne
cwtl
sbb
push
pop
inc
movsl
mov
xchg
jecxz
dec
jmp
mov
xchg
call
and
inc
cmp
mov
mov
push
jg
and
out
addr16
lret
enter
or
add
addr16
popl
or
lods
xchg
out
pop
push
out
int3
xchg
or
cmp
add
in
sbb
mov
jo
clc
in
cmc
jnp
add
sarl
cltd
iret
jp
add
arpl
dec
sub
mov
push
adcl
xchg
sbb
push
jg
nop
sub
pop
jmp
push
and
add
jg
cmpsl
adc
into
pop
in
mov
rcrb
lock
enter
test
jbe
or
cmpsb
add
jecxz
subl
leave
shrb
das
in
lcall
out
lock
sbb
fmul
add
nop
ss
test
push
imul
shrb
sub
fidivrs
dec
fst
rorb
daa
in
popf
and
pop
ljmp
lock
xchg
adc
xchg
mov
ss
pop
aam
cmp
or
in
pop
xor
xchg
jo
jbe
xlat
xor
leave
shrl
out
shll
xchg
xlat
xchg
jge
enter
pop
loope
leave
xchg
aaa
jae
push
jns
dec
mov
inc
xor
sub
loopne
sub
pop
sti
fnstenv
pop
int
lahf
pop
sub
rorb
je
xchg
adc
mov
sub
push
jno
xor
in
fdivl
stos
jg
and
adc
addr16
mov
into
roll
mov
fistpll
stos
push
xor
sti
xchg
xchg
xchg
nop
cmpsb
pushw
pusha
sti
cmp
dec
pop
pop
jo
clc
scas
mov
xchg
inc
mov
nop
andl
test
lret
bound
inc
in
movsb
cmc
fldl
shlb
aam
cmp
and
mov
push
xor
dec
xchg
sub
not
or
leave
jl
pop
cld
test
adc
fisttpl
out
mov
rcrl
xchg
cmp
imul
addr16
push
negl
pop
out
cs
add
adc
scas
nop
js
fstpt
push
push
xor
mov
jmp
into
insb
mov
dec
dec
adc
in
mov
adc
fidivl
sbb
rolb
fstp
fnstcw
dec
movsl
nop
scas
push
mov
fwait
lret
jp
cmp
fstpt
ja
or
sub
test
fsubp
jge
xor
xchg
pushf
insb
int3
push
jp
lcall
xor
loope
les
das
mov
leave
adc
je
hlt
pop
push
clc
test
aas
iret
mov
jecxz
or
sub
and
mov
cmp
cmp
mov
sbb
mov
imul
inc
cmp
push
mov
nop
dec
cmp
sub
jle
inc
scas
dec
out
stos
inc
pop
je
fsubrp
xor
push
mov
out
shrl
lret
inc
xchg
mov
pop
repnz
adc
push
nop
cmpsl
adcb
xor
lock
jno
aam
jne
push
mov
outsl
arpl
mov
sahf
mov
js
adc
lock
pop
push
fisubrl
dec
mov
jo
dec
mov
mov
cmc
enter
add
fs
andb
lea
and
jne
jnp
sti
xchg
clc
cmpsb
sbb
into
repz
cmp
ret
xchg
xor
or
leave
mov
insl
es
jae
dec
leave
and
and
loopne
mov
pop
jnp
int
je
push
xlat
divb
or
popf
ja
das
cmc
xor
mov
cli
push
out
lret
rorl
and
fs
out
mov
mov
and
pop
jmp
xor
jge
jne
jb
xchg
arpl
jae
mov
inc
adc
cmp
xchg
test
lret
addr16
shll
addl
mov
in
dec
ja
push
cwtl
cld
fbstp
loop
sub
enter
xor
dec
xchg
hlt
lahf
ds
jae
stos
xor
push
push
jae
xor
xchg
jge
test
sub
mov
add
pop
or
mov
gs
ja
jmp
insb
mov
into
in
scas
inc
mov
dec
stos
cmp
sbb
jl
xchg
pop
mov
cwtl
mov
jnp
jbe
pop
jb
jo
cmpsb
call
lahf
mov
sbb
fisubrs
jg
push
insl
xchg
xorl
pop
jb
dec
lods
in
cmovns
mov
lea
adc
sbb
popa
push
cmp
xchg
sbb
lret
push
cld
dec
and
cmp
pop
popa
mov
dec
mov
pop
xchg
pop
fisubl
mov
fs
pushf
jbe
std
mov
jns
test
enter
fists
testl
add
adc
cmp
enter
fwait
pop
cwtl
sub
mov
pop
arpl
je
sub
fadd
loope
pop
or
cli
mov
cmp
fisttps
test
scas
js
sahf
cmp
dec
in
sti
push
fsubr
cmp
lcall
adc
cmp
push
dec
in
leave
push
xchg
xorb
adc
mov
mov
xchg
sbb
adc
xchg
shll
push
jle
add
xor
pop
frstor
loope
push
xchg
out
aas
push
jmp
jmp
scas
add
movsl
in
pop
sbb
lret
in
mov
xchg
xor
cmp
jg
add
cmpsb
jle
or
inc
test
push
cmc
aam
jno
mov
call
divps
repnz
pop
or
mov
xor
and
jb
ds
je
lret
andb
sbb
inc
and
inc
mov
push
fisttpll
out
dec
jl
cs
add
rcr
inc
push
sbbb
sub
cmpsl
adc
xchg
jae
sub
sub
faddp
sbb
mov
outsl
test
inc
sbb
mov
in
sbb
and
push
shll
sub
inc
and
mov
and
dec
pushf
adc
imul
fmull
xchg
lds
addps
pop
dec
mov
bound
adc
mov
xor
sub
mov
mov
sub
push
mov
bound
mov
xor
loop
sbb
push
dec
cs
repnz
push
xchg
add
fldcw
lret
nop
mov
les
sbb
pusha
jb
mov
imul
fwait
xor
cwtl
xchg
dec
or
or
jmp
inc
dec
ljmp
cmp
or
mov
adc
xchg
xchg
shll
sub
mov
xchg
mov
push
sub
jp
arpl
jmp
jbe
int3
sub
dec
or
dec
push
aam
pop
sbb
xchg
stos
inc
popf
sbb
mov
nop
stc
in
add
mov
je
pop
cmc
lock
add
movsb
add
xchg
shr
and
test
fnstsw
cld
mov
and
insb
int3
imul
dec
aas
lods
push
and
inc
cmpb
in
cwtl
setge
sub
push
xchg
jg
popa
mov
stos
xchg
xchg
outsb
add
scas
adcl
lea
in
rcll
adc
ret
js
pop
test
or
in
xchg
frstor
xchg
insb
popf
sahf
dec
mov
or
andb
jge
pop
cltd
sbb
mov
sbb
push
shld
sub
lods
mov
adc
lods
push
insl
and
push
addr16
out
inc
inc
fnstenv
sbb
scas
add
test
jg
add
and
inc
movsl
jmp
pop
add
sahf
jle
mov
test
xchg
xor
push
in
cmpsl
stos
jnp
sarl
mov
adc
gs
dec
js
jns
cmp
pop
lds
lahf
andb
je
mov
mov
dec
push
rcll
stos
mov
add
xchg
loop
or
sbb
leave
ss
jmp
mov
aaa
movsl
dec
es
aas
mov
xor
push
inc
in
mov
sub
xor
and
shl
call
push
fiaddl
icebp
xchg
test
xchg
icebp
mov
dec
xchg
test
cmp
int
lods
add
mov
decl
inc
stos
jb
pop
jp
gs
cmpsb
stc
les
jecxz
lret
fwait
jmp
sbb
sbbb
into
mov
in
dec
jl
push
hlt
mov
jecxz
stc
mov
subb
push
cmpl
int3
pop
icebp
pop
inc
imul
test
jbe
push
xor
fisttps
push
jmp
shll
sarb
scas
add
pop
xchg
movsb
and
repz
push
and
jns
sub
filds
pushf
xor
add
daa
fcom
jmp
fwait
subb
arpl
add
bound
je
out
in
add
test
enter
cli
in
iret
jne
adcl
in
jmp
jo
xor
shl
push
inc
cmp
arpl
addr16
popa
xchg
insb
cmp
mov
inc
push
push
and
pop
sub
dec
pop
jle
popf
ret
scas
je
mov
inc
mov
push
sub
adc
std
andb
mov
mov
and
mov
sti
dec
jo
xchg
add
out
stos
out
xor
aam
imull
outsl
fiaddl
dec
xchg
andb
lret
js
push
pop
rorl
xchg
outsb
pop
mov
inc
mov
imul
popa
add
mov
cmc
add
push
pop
dec
fstps
bound
push
movsl
imulb
adc
lcall
jnp
push
adc
imul
pop
xor
imul
loope
jae
fistps
push
mov
inc
sbb
movlps
xor
add
fidivs
lods
and
das
movsl
cmp
mov
clc
push
aaa
jne
pusha
adc
xor
add
pop
sahf
icebp
das
push
arpl
mov
cld
cmp
mov
pop
gs
arpl
push
or
shr
jb
in
pop
or
and
lret
outsl
mov
or
call
jl
xchg
lcallw
mov
inc
sbb
lods
sbb
add
test
fnsave
xchg
ja
jae
test
inc
push
mov
dec
xor
sub
adc
xor
test
int
in
dec
hlt
pop
mov
dec
imul
sbb
les
add
mov
movsb
stos
comiss
mov
mov
xor
mov
pop
inc
repz
fistpl
js
mov
sbb
or
mov
jp
pop
gs
xor
mov
jno
adc
ja
or
mov
aad
lea
popf
mov
add
inc
and
xchg
mov
fistl
cmpsl
fistpl
pushf
sbb
out
and
push
jb
shrb
rcrb
jl
and
xchg
fnsave
ljmp
popf
cmc
aaa
xor
mov
jb
lock
movsl
sbb
fcmovb
repnz
push
push
add
hlt
ja
loop
sbb
jle
xorb
mov
stos
jle,pn
jne
lret
lretw
test
xor
adc
pop
pop
sub
pop
push
jne
nop
lret
cmp
inc
or
sbb
mov
dec
xor
jb
dec
repnz
dec
pop
and
cmpl
repz
xorl
imul
mov
jo
pop
mov
mov
out
mov
pop
cltd
add
flds
push
xor
pop
mov
add
mov
push
add
movsl
cmp
push
ja
shrl
lods
mov
jmp
mov
add
es
sub
adc
or
lret
movsb
rolb
aad
arpl
push
je
dec
mov
test
das
stos
int
mov
fbstp
or
pop
jl
out
lods
out
jnp
inc
mov
inc
repnz
adc
lcall
loopne
pop
xchg
mov
mov
pushf
lods
pop
fistl
in
inc
test
movsb
sbb
xchg
push
sti
out
movsl
mov
xchg
pushf
inc
cmp
mov
and
loope
test
data16
movsl
jb
cld
outsb
cltd
adc
adc
cmc
push
push
inc
cmp
mov
and
jecxz
cmp
call
decb
cmp
jmp
adc
push
xor
outsb
adc
cmp
or
push
mov
mov
lods
sbb
arpl
mov
pop
daa
leave
xchg
push
ret
ret
bound
and
adc
cmpsl
and
or
fsubrl
std
repnz
pop
sbb
push
jle
stos
sub
inc
cltd
out
xchg
push
pop
bound
mov
mov
lods
adc
lret
testb
test
dec
adc
dec
aad
add
sbbb
push
dec
dec
lea
sub
cmp
adc
test
or
jb
mov
cwtl
sbb
test
mov
xor
or
and
inc
mov
test
mov
nop
jae
std
dec
int3
enter
cli
ret
test
jo
push
scas
dec
sub
sub
out
rorb
or
loop
pop
pop
jg
lea
into
lock
push
ljmp
fsqrt
cmp
mov
add
xor
inc
add
aam
cmpsl
xchg
movsb
pop
fiadds
jae
sbb
cltd
jae
inc
test
sahf
jb
lods
or
test
mov
add
insl
xor
mov
test
sahf
dec
lret
stos
inc
cmpsl
aad
pop
push
sbb
out
xchg
iret
rclb
mov
sub
lods
push
dec
cmp
mov
pop
mov
mov
dec
int3
adc
pop
add
insl
dec
inc
or
mov
xchg
iret
dec
mov
sbb
lret
pop
icebp
neg
sub
or
jl
push
inc
sbb
inc
outsl
dec
adc
adc
flds
arpl
add
int
push
jns
inc
mov
jo
aam
movsl
push
inc
mov
testl
pop
jecxz
mov
mov
mov
sub
dec
inc
xchg
out
pop
ds
test
mov
test
pushf
jecxz
push
fmul
sbb
lods
out
cmp
out
adc
imul
and
clc
dec
inc
push
cmp
mov
fs
into
pop
xchg
pop
add
adc
mov
lret
mov
arpl
lret
decb
je
xchg
pop
xchg
hlt
in
stc
mov
mov
push
aam
pushf
push
mov
pusha
cli
test
pusha
fimull
into
stos
addr16
repnz
in
cmc
rorb
mov
rclb
shrb
add
sub
jno
sbb
test
popf
xor
mov
or
mov
fdivl
in
sub
pop
push
ljmp
sbb
and
mull
or
int3
je
in
pop
xchg
scas
ss
ss
cmpsl
ret
dec
add
insb
jmp
test
inc
es
jmp
xchg
scas
xlat
pop
mov
mov
pop
std
pop
fists
pop
xchg
push
or
fists
pop
int
outsb
test
xchg
mov
pop
push
rcrb
jmp
mov
je
cs
scas
cmp
lret
sti
mov
jp
adc
mov
push
dec
cld
fiadds
xor
sub
sbb
mov
lea
movsb
mov
or
pop
adc
sbb
pop
movsb
les
ret
jmp
mov
inc
int3
and
popa
or
testl
scas
sbb
sub
iret
mov
sti
inc
adc
in
lret
daa
test
ror
xor
cmp
mov
lret
lea
rcrb
shll
test
xor
ret
loopne
lods
pop
jb
cmpsl
dec
xor
inc
shll
push
mov
push
mov
jmp
inc
mov
jae
xchg
and
xorl
add
lock
jmp
leave
push
sbbb
cwtl
fwait
jbe
pop
clc
clc
int3
inc
mov
movsb
aam
xchg
mov
jge
and
lret
dec
mov
adc
jg
sbb
ret
lock
aas
and
fists
mov
ret
aaa
outsb
ljmp
shrb
ret
add
rcll
addr16
int3
leave
scas
mov
lahf
fdivr
rcll
lret
int
mov
dec
in
push
mov
push
addr16
xor
movsb
int3
in
xchg
in
and
sbb
ljmp
jmp
and
out
push
cmp
scas
incl
xchg
test
imul
jno
mov
mov
lcall
sbb
mov
pop
divb
ror
push
roll
data16
mov
das
outsb
cmpl
das
insl
xchg
sahf
inc
repz
sub
sbb
loopne
arpl
pop
pop
pop
nop
mov
out
add
pop
iret
jl
jle
mov
cmp
mov
fsubrl
arpl
pop
push
xor
fldt
pusha
sub
loop
test
bound
or
lds
or
and
fucomp
add
stos
lods
out
sub
fstpl
rcl
add
fucomi
mov
and
pop
or
push
xor
mov
xor
out
arpl
loope
lds
not
mov
fbld
adc
addr16
and
mov
dec
into
test
addr16
mov
insb
pop
xchg
mov
ss
scas
xor
push
lods
test
cmp
and
and
jne
mov
outsl
fldl
aam
aam
adc
das
faddl
sbb
inc
dec
xor
pop
cs
mov
mov
mov
lods
xor
test
jg
sbb
movsb
sub
jns
std
jge
in
movb
mov
mov
stos
cmp
fwait
test
lds
es
sub
mov
jmp
pop
icebp
mov
adc
mov
ja
mov
aam
filds
outsl
sbb
sub
lahf
jmp
sti
sub
add
mov
lods
mov
jecxz
pop
jnp
inc
jbe
cwtl
xchg
sbb
into
lods
and
or
sub
pusha
xlat
xor
in
push
jo
add
and
sbb
fidivs
stc
sub
std
jae
push
rcrb
je
scas
arpl
js
push
sti
shl
dec
faddl
mov
sub
sub
mov
iret
adc
sub
xor
sahf
shrb
lcall
xchg
popf
ret
mov
ds
cmp
push
jae
dec
in
fst
fdivrs
arpl
mov
push
push
xchg
in
xor
pop
mov
and
lahf
pushf
js
mov
push
shll
fisttps
jbe
cmp
sahf
in
outsl
repz
out
add
subl
push
xor
pop
add
movsb
sbb
popa
loope
cli
push
into
jns
loopne
fs
pushf
jl
fs
dec
outsl
cld
jbe
lock
ja
mov
out
pop
or
movsl
cmp
jl
mov
lods
jb
cwtl
fldenv
fsubrp
pusha
test
xchg
aad
cli
outsb
jno
dec
dec
push
and
xlat
fs
xchg
xchg
andb
int
xor
push
xchg
in
call
sbb
movups
and
lea
aad
dec
popa
cmpsl
jae
mov
sarl
scas
and
inc
cs
add
and
shrb
pop
das
sbb
and
les
jo
inc
or
sbb
sub
mov
add
nop
into
repz
jecxz
pop
sysenter
jb
jl
push
adc
sub
push
outsb
repnz
or
mov
jb
test
mov
add
or
sub
shlb
por
jg
and
jecxz
and
mov
sbb
and
push
or
fisubs
orl
lea
stc
mov
push
pop
daa
or
mov
inc
add
and
xchg
jo
imul
cltd
inc
leave
pop
xchg
mov
mov
fadd
xchg
subb
lods
out
rcrl
shll
xor
lods
jno
jbe
sub
sbb
jb
leave
pop
push
inc
outsl
ret
daa
sarb
mov
ss
mov
jnp
push
rep
popf
dec
cmp
sbb
push
mov
stos
jne
sub
jns
sti
es
hlt
and
int
cmp
inc
xor
popa
jmp
stos
add
push
mov
or
fsubr
and
mov
das
fdivrl
out
sarb
insb
pop
test
cmp
and
ss
shrb
and
cltd
outsl
mov
fwait
push
lcall
fidivrs
xchg
adc
and
std
pop
xchg
and
jmp
adc
jge
cmp
lds
dec
mov
pop
jecxz
dec
xchg
push
cmc
sahf
out
inc
dec
inc
adc
fs
call
les
dec
mov
xchg
xor
les
enter
sub
das
push
ljmp
adc
sahf
out
pop
ja
mov
lods
enter
cmp
inc
loopne
lea
dec
xchg
shlb
cmpsl
je
pop
add
push
clc
fdivs
add
cmp
dec
mov
inc
outsl
or
stos
ficomps
lret
cli
add
mulb
adc
xchg
mov
jge
das
out
sbb
add
adc
incl
xchg
fstl
push
xchg
push
jne
adc
push
outsl
mov
mov
jle
add
dec
add
outsb
sub
sbb
push
push
dec
imul
xchg
icebp
mov
xchg
sub
cmp
sti
cld
adc
cmp
andl
jne
jp
les
sub
mov
lcall
inc
insb
inc
cmp
adc
mov
stos
das
inc
es
outsb
arpl
push
scas
push
pushf
xor
adc
cli
mov
push
lahf
js
sub
mov
popa
xchg
sub
in
loope
mov
mov
test
sub
add
dec
iret
pop
aam
xor
cmp
xchg
nop
push
aad
xor
enter
dec
aas
dec
scas
aam
icebp
jle
mov
dec
fnsave
jmp
xor
es
mov
sahf
xchg
jp
push
and
adc
loope
ret
adc
shrb
mov
mov
inc
aam
mov
adc
xor
and
les
xor
add
push
test
adc
iret
push
lcall
mov
mov
jno
test
shrb
lret
add
sub
sub
adcb
xor
test
loop
xor
adc
cli
dec
dec
sti
or
movsl
je
and
dec
sbbb
dec
push
shlb
outsl
jl
outsl
sbb
cmp
push
enter
inc
popa
xor
int
movsb
out
xchg
xor
push
movsb
cld
adc
daa
jae
pushl
add
mov
xchg
in
xchg
aaa
std
lock
lcall
xchg
lcall
test
lcall
xchg
and
mov
icebp
sbb
es
lret
out
jno
adc
fstl
hlt
pop
xchg
mov
adc
inc
inc
mov
push
cmpsl
pusha
pop
push
dec
add
das
pop
dec
stc
movb
adc
sbb
adc
sbb
pop
inc
outsb
aad
mov
adc
pop
daa
cmpsl
andb
xchg
cwtl
aaa
push
loop
sub
add
cmp
push
jne
xchg
lret
sub
sarb
repz
lcall
cmp
mov
shrb
inc
adc
cs
adc
and
cmp
mov
or
dec
lock
pop
or
cld
cmpb
sub
inc
sbb
data16
mov
dec
lret
mov
mov
and
sahf
dec
setne
mov
bound
add
xor
xor
stc
dec
adc
ja
ficoms
jmp
dec
dec
repnz
dec
mov
stos
stos
rcll
fdivl
clc
jmp
xchg
mov
xchg
and
sub
movsb
sarl
mov
out
cmpsb
test
cmp
pushf
int3
out
inc
sbb
push
push
lds
sbb
adc
aas
pop
sub
in
bound
outsb
mov
add
mov
xor
dec
loopne
cmp
adc
cmp
shll
out
jle
into
out
call
test
mov
test
test
test
mov
nop
xchg
push
ret
sbb
or
push
dec
das
ss
adc
mov
or
dec
mov
xor
xchg
sahf
iret
movsl
lds
xchg
popa
mov
jg
pop
dec
fiadds
dec
push
push
clc
pop
ljmp
xchg
jg
aad
cs
push
repnz
in
xchg
and
push
mov
in
stos
jae
outsl
xor
jmpw
test
shrb
js
add
add
adc
mov
pusha
xor
xchg
ds
imul
xchg
mov
or
cltd
and
lret
mov
cmp
pop
inc
jmp
dec
mov
int
add
mov
push
mov
sub
je
in
adc
repz
rcrb
mov
mov
test
cltd
xor
and
mov
ret
lock
adc
imul
ret
cmp
loop
fiadds
dec
mov
pop
cmp
and
sub
push
and
sahf
popa
and
aas
add
dec
loopne
sub
add
orl
cwtl
push
jne
dec
jecxz
rorb
roll
jg
imul
xor
xorb
loop
ss
push
xor
movsb
enter
adcl
jp
sub
mov
cli
pop
xchg
sbb
out
jnp
scas
rcll
popa
or
in
push
fsubs
mov
jp
cs
add
pop
fcmovnbe
mov
add
and
popf
outsb
popa
dec
cmp
test
mov
stc
sub
jl
mov
addr16
imul
inc
push
mov
add
and
push
fnstcw
xchg
adc
inc
push
int
adc
leave
mov
push
out
xlat
test
pop
and
rclb
decl
sbb
add
push
xor
ds
or
in
out
push
inc
add
sbb
jae
sbb
jno
clc
hlt
fs
mov
xchg
inc
mov
cmpsl
mov
pop
jnp
dec
mov
inc
fs
xchg
bound
into
or
inc
add
push
or
push
xchg
mov
sbb
xchg
loop
xor
inc
fldl
inc
pop
xor
xchg
ds
pushf
adc
cmp
test
inc
test
jl
sub
cld
subb
cmp
xchg
jae
xchg
xchg
int3
pop
clc
pop
aas
dec
testl
stc
mov
lods
xor
xor
ss
rcrb
mov
jnp
imul
add
jbe
leave
mov
cmp
ljmp
jne
mov
cmp
fcmove
jmp
cmpsl
arpl
inc
lods
mov
cld
cmpsb
xorb
fs
jae
xor
sub
ficoml
pop
ficomps
mov
jbe
leave
addr16
jnp
or
fisttpll
dec
popa
bound
mov
sahf
mov
push
idivb
pusha
lret
addr16
jb
inc
scas
jbe
xor
push
call
and
in
push
scas
loopne
in
xor
mov
push
in
adc
std
bnd
push
pop
int3
shl
xchg
and
js
jae
jge
subl
or
pop
push
cli
fstpl
xchg
sub
add
popa
add
test
shrl
pop
xor
inc
ljmp
loopne
push
or
dec
clc
rclb
aaa
mov
dec
pop
aaa
inc
or
inc
fsubrl
cltd
stc
fmul
inc
adc
jae
pop
dec
decb
push
mov
rol
addr16
push
add
jb
idivl
insb
fwait
pop
stos
pop
repz
imul
cmp
out
insl
and
adc
stos
dec
stc
push
mov
cmp
cld
xchg
jl
ja
lret
xchg
push
jbe
into
andl
in
movzwl
je
enter
inc
cli
and
pusha
movsl
lods
lcall
xor
jmp
int3
mul
int3
ljmp
dec
push
sar
or
in
test
dec
and
cli
out
cmp
rorb
mov
or
in
int
push
rorl
mov
es
repnz
jnp
and
fadds
add
je
dec
test
lcall
jge
push
bound
xchg
rcll
iret
sub
pushf
xorb
mov
arpl
pop
or
add
xchg
mov
mov
aad
ss
add
sub
or
xlat
movsl
outsl
fstps
inc
adc
shlb
xchg
in
cmp
or
push
push
xchg
mov
adc
mov
pop
mov
cld
test
lods
push
cmp
bound
cs
cmc
sub
test
ficomps
mov
xchg
pop
jmp
stos
adc
cmp
lods
arpl
push
or
pop
mov
pop
or
pop
sub
mov
mov
push
cwtl
scas
xchg
je
cmp
push
xor
sarl
fisttpl
push
enter
and
and
fwait
cltd
adc
fimuls
pop
mov
std
gs
and
xchg
iret
jb
dec
in
dec
cmpsb
ja
sbb
xor
fnstenv
iret
clc
push
dec
push
in
pop
andl
inc
mov
sbb
ja
pop
mov
mov
sbb
int3
decb
cltd
mov
mov
pop
mov
bnd
mov
adc
add
sub
jne
xchg
jg
mov
inc
movsl
lret
lock
test
jmp
out
adc
imul
xor
out
stos
scas
dec
pop
jbe
out
stos
cmp
xor
clc
push
mov
sub
cmp
or
dec
fidivrl
add
xor
enter
push
cmp
xchg
jmp
pop
inc
push
mov
push
push
jb
jle
sbb
and
lods
lds
das
daa
xor
lods
jo
es
subb
dec
xchg
sbb
movsb
jp
insb
inc
fsubr
xlat
sub
loope
dec
ret
mov
es
fwait
scas
out
rcrb
xor
and
loopne
ret
jnp
add
pop
jbe
nop
pop
or
jns
movsl
pushf
lret
xor
das
adc
xchg
hlt
jns
sub
jo
xor
out
sub
loope
push
push
popf
xchg
jb
out
sub
pop
cltd
sti
mov
push
movsb
test
sbb
and
shlb
dec
filds
fcmovnu
or
loop
or
xor
loop
sub
ret
stos
ficomps
outsl
xchg
in
dec
add
cmp
loopne
push
fidivs
push
mov
gs
xlat
test
ljmp
js
sub
pusha
loopne
xor
loope
dec
rcrb
sbb
pop
push
ss
loop
repnz
dec
mov
mov
cli
push
jl
push
add
and
insl
in
cltd
fcoml
add
out
test
sbb
xchg
pushf
and
push
loop
outsl
jp
mov
stc
xchg
xchg
loope
pop
jp
lock
sbb
jge
pop
imul
fldt
pop
inc
cmpsb
jnp
push
pop
andb
icebp
mov
jbe
test
sbb
mov
fsubl
xor
in
xorl
or
mov
cli
and
outsl
loope
push
iret
insb
add
daa
aad
sub
xorb
stos
push
cmp
sbb
mov
leave
or
and
xchg
out
lock
lcall
and
leave
leave
andb
add
mov
mov
dec
jne
mov
lods
add
in
dec
push
les
js
sti
mulb
mov
bound
shlb
pushf
xchg
push
adc
push
xchg
pop
sahf
aad
cwtl
gs
lock
test
xor
push
push
push
push
in
mov
jns
pop
fidivrl
call
sbb
add
popf
jle
popf
add
fcompl
cltd
mov
je
adc
pusha
add
adc
ja
add
mov
push
lcall
aam
push
scas
xchg
inc
into
adc
mov
mov
test
stos
int3
enter
xor
add
mov
pop
push
scas
xor
sub
aad
scas
dec
addr16
test
sbb
and
andl
loope
jae
jg
subl
push
nop
inc
push
ja
popf
das
out
out
daa
rorb
push
jo
mull
arpl
fsubp
lahf
lock
jb,pt
jmp
mov
popf
shlb
jmp
insb
push
mov
cltd
popf
or
xchg
daa
jmp
ret
int3
pop
sbbl
push
mov
dec
add
stos
lahf
pop
out
mov
bound
pop
push
cmp
xor
fsubp
mov
outsl
testb
inc
repz
repz
sub
jo
leave
jbe
add
repnz
pop
test
out
and
jle
cld
sub
dec
dec
cltd
fwait
shrl
or
pop
int3
lret
pop
lret
mov
lret
inc
int3
cli
sahf
push
jmp
or
aaa
fmull
sbb
ja
std
jnp
cmp
fisttpll
aas
movsb
in
ret
inc
cwtl
test
fildll
cmp
adc
fwait
insb
ss
mov
addr16
pop
andb
cmpsb
pop
mov
std
and
sbb
lret
pop
mov
out
jo
movsl
adc
pop
mov
mov
inc
jns
je
mov
leave
daa
inc
fdivrs
notb
sub
daa
cmpl
jbe
adc
add
sbbb
mov
movsl
dec
cs
das
push
lret
fidivl
xlat
fsub
xchg
or
popw
clc
in
mov
mov
dec
sub
push
icebp
mov
inc
dec
jns
repz
stc
stos
sti
mov
pop
pop
jmp
pusha
cmp
xchg
push
popf
mov
fsts
and
cmc
das
add
test
movsb
repnz
cmp
and
push
xor
lock
lea
jge
shl
push
add
cmp
fcoml
jmp
mov
hlt
pop
dec
nop
dec
mov
mov
sub
push
xchg
mov
ret
test
dec
mov
sub
adc
xchg
cmp
inc
das
cld
call
rorl
scas
clc
push
in
mov
pop
xchg
lea
imul
cmp
nop
popa
or
jo
lret
adc
idiv
dec
nop
lea
cld
xor
gs
pop
loopne
mov
sub
hlt
lahf
push
or
mov
push
enter
mov
ficoml
out
push
incl
or
arpl
push
cmp
hlt
xchg
repnz
pop
xchg
push
adc
jno
cmp
inc
cwtl
fiaddl
sbb
cmp
into
or
pushf
and
cmpsb
ljmp
or
fcmovb
xor
mov
cmpsl
pop
stc
and
add
out
imul
adc
shlb
xchg
icebp
xlat
sahf
mov
push
enter
or
jbe
icebp
les
jno
dec
es
shl
xchg
sub
or
inc
mull
subl
iret
xor
sbb
mov
mov
xchg
loopne
clc
sbb
in
fcoml
cmp
aam
in
ret
leave
xlat
xor
xchg
push
leave
lret
cwtl
mov
pushl
ret
inc
cld
xchg
mov
in
mov
or
push
push
imul
icebp
lea
jmp
and
jg
xchg
dec
xorb
int3
data16
push
push
adc
adcl
cwtl
or
xchg
daa
adc
loop
js
mov
push
stos
popa
sub
iret
std
or
jne
filds
lcall
cltd
pop
cmp
push
cmp
mov
out
rclb
pop
xchg
push
jle
test
cli
cmpb
inc
mov
and
mov
out
cmpsb
or
mov
icebp
je
out
data16
addr16
lds
cli
gs
in
cmpb
pop
fidivrl
push
lock
cmp
fcoms
sub
nop
xchg
in
aaa
ret
rcrl
cltd
pop
out
out
add
data16
lcallw
add
xor
arpl
lds
leave
int3
ss
decb
push
xor
outsb
dec
cwtl
inc
imul
lock
push
dec
fwait
stos
shrb
pop
jnp
pop
sahf
roll
xchg
mov
push
nop
fwait
push
cltd
mov
mov
es
push
sub
jo
mov
and
xchg
cmp
stc
insl
repnz
js
sbb
inc
ljmp
sbb
xor
mov
push
faddl
mov
scas
jbe
push
stos
jle
cwtl
adc
loopne
aaa
loop
sub
mov
clc
push
in
out
int3
mov
adc
into
xor
mulb
sub
mov
dec
push
and
jg
mov
lods
imul
adc
sbb
jo
test
mov
insb
mov
js
sbbl
leave
pop
xchg
clc
fadd
repnz
jae
sub
sbb
adc
hlt
fsubs
cltd
sahf
mov
iret
dec
jo
mov
shl
ret
push
filds
jbe
jno
xchg
sbb
loope
adc
je
fists
addr16
jmp
int
movsl
cs
lods
popf
xlat
and
outsl
push
dec
movsb
jmp
xor
rcrb
daa
out
scas
sub
ss
inc
pop
sub
inc
js
popa
clc
push
dec
movsb
loopne
addb
insb
adc
shlb
pop
or
movsb
outsb
shrb
lods
sub
pop
push
cwtl
or
adc
inc
orb
popa
cmp
insl
scas
pop
test
shrl
push
ss
not
sub
sbb
cmpsl
mov
stc
loope
jmp
and
ret
inc
shll
fs
mov
ljmp
rcrb
xchg
dec
adc
out
ds
push
add
jecxz
es
repz
mov
mov
call
loop
sub
dec
aad
sub
pop
add
cwtl
pop
jbe
ljmp
bound
out
in
pop
sbb
loope
xor
cltd
xlat
pusha
scas
mov
push
insb
dec
inc
dec
arpl
in
xchg
cmp
push
cmpsb
daa
jp
mov
ss
insb
int3
xor
pusha
cmp
adc
test
in
dec
movsb
movsl
xor
pop
loop
or
shrl
ljmp
aaa
aas
inc
lock
pop
imul
daa
dec
into
jb
fs
addb
push
fisttpll
xlat
shll
mov
cli
stos
jns
mov
sbb
mov
cmp
scas
dec
movsl
add
adc
jg
jnp
jo
dec
stos
mov
je
jp
pop
test
push
sbb
sub
jb
ret
rorl
jnp
jmp
js
inc
dec
cs
std
popf
ds
loope
jbe
nop
sbb
inc
fistpll
xor
cld
shlb
and
sbb
bound
sub
xor
push
cmp
sti
mov
sbb
jl
outsb
inc
lahf
sub
cmc
xchg
or
andb
insl
sahf
dec
pop
and
fisubs
mov
cltd
push
xchg
dec
in
and
stos
pop
outsb
sub
xchg
les
jp
int
mov
push
dec
mov
xor
imul
fidivl
and
sbb
xor
mov
shll
gs
std
adc
sub
fidivrs
and
xchg
pop
mov
pop
and
dec
adc
lret
cmp
cli
insl
icebp
push
xchg
lock
pop
cltd
testb
test
icebp
mov
sti
and
cmp
cmpsl
push
outsb
and
cmc
pop
hlt
xchg
rolb
into
jb
xor
mov
or
or
movsl
scas
xlat
js
push
sub
mov
loopne
outsb
out
notl
sahf
cld
jb
dec
ljmp
fs
and
inc
repnz
and
jmp
mov
and
test
cmpsl
sbb
adc
fwait
arpl
imul
adc
lahf
mov
fsts
test
jle
call
insl
or
movsl
dec
jecxz
dec
push
inc
sbb
cs
cwtl
or
into
sti
dec
pop
lret
lea
gs
and
add
sbb
jg
push
dec
sbbb
pop
repz
testb
mov
mov
mov
cmp
pop
add
jae
sub
mov
sti
sbb
ss
and
mov
std
dec
jp
aas
insl
enter
movsl
cmp
push
leave
mov
adcl
scas
mov
push
jge
cmp
je
cmp
fst
incl
test
xchg
shrb
xor
xor
jns
pop
sahf
mov
push
in
arpl
adc
push
pop
or
sub
or
jecxz
mov
mov
or
ret
out
xor
push
push
xorb
addr16
xchg
sarb
cmpsb
lret
cmp
pop
push
and
add
call
popf
jbe
mov
into
insb
xchg
jnp,pt
cmp
xor
or
add
add
ljmp
jl
cs
jno
xchg
pop
icebp
ja
fldcw
xchg
mov
dec
iret
and
in
test
clc
frstor
lcall
leave
sbb
lods
jb
adcb
add
cmovns
in
hlt
repnz
lret
jo
pushf
imul
or
mov
push
push
sub
mov
sub
pop
jne
popa
mov
push
js
jbe
and
xor
rcr
mov
add
mov
jb
mov
subl
mov
std
fisttpll
add
test
push
stos
imul
lret
aas
push
pop
jbe
push
in
out
mov
adc
outsl
in
popa
mov
adc
call
out
das
mov
adc
jecxz
or
inc
add
sti
mov
arpl
jno
loope
mov
dec
les
in
dec
cmp
mov
pop
dec
xchg
lds
sahf
movsl
cmp
adc
imul
adc
adc
xor
test
or
mov
xchg
pop
scas
cmc
dec
pop
sbb
pop
into
std
and
das
testb
xchg
scas
test
sbb
fcom
inc
pop
xchg
add
cmpsl
inc
outsl
sti
cltd
xrelease
mov
nop
xor
sbb
scas
adc
insl
mov
and
adc
mov
cmp
fs
sub
js
outsl
mov
xor
outsb
xchg
dec
lea
testl
inc
in
sub
sub
add
lods
popf
leave
icebp
adc
test
adc
xlat
mov
test
sbb
pop
inc
sbb
or
xor
cmp
pop
mov
out
stos
inc
sub
xor
repz
jbe
mov
mov
jecxz
mov
mov
push
jns
imul
mov
cmc
and
xchg
jno
mov
add
adc
push
push
or
ret
xchg
fldl
scas
imul
mov
in
clc
iret
call
das
mov
out
daa
mov
xor
mov
andl
and
in
fs
pop
and
adc
test
cli
lock
xor
out
lret
loop
jae
and
mov
cmp
shll
dec
mov
or
repnz
adc
adc
out
outsb
or
push
or
push
lock
mov
pop
shrl
xor
rolb
or
sub
imul
xor
pop
mov
imul
jmp
bound
and
test
movsl
mov
fcmovbe
add
mov
mov
aas
push
movb
xor
clc
in
pop
xor
dec
and
cmp
xlat
sbb
pop
inc
and
sub
shrb
pop
cmp
dec
dec
sti
cwtl
inc
imull
dec
es
jle
jge
in
shlb
xchg
insl
jmp
stos
sbb
scas
and
shlb
sbb
pushf
mov
out
add
ja
ficoml
mov
xchg
xor
push
outsl
adc
insb
vmread
daa
lea
mov
stos
aad
fisttpll
sub
mov
lcall
or
std
cmp
movsb
fadds
imul
jg
xchg
js
jnp
adc
arpl
mov
inc
mov
and
scas
addr16
add
inc
test
mov
mov
out
pusha
xchg
out
in
xor
sub
outsb
inc
rorl
fldl
mov
sahf
clc
aam
xchg
pop
sbb
sub
add
mov
sahf
scas
push
das
out
jecxz
test
push
lock
stos
or
out
xchg
jp
in
out
add
and
jmp
popf
push
in
shl
in
push
les
ljmp
pop
test
cli
pop
sbb
shll
mov
fnstenv
in
test
or
outsl
frstor
das
cmp
popf
icebp
mov
add
xchg
dec
fwait
decl
add
sub
xchg
jl
xchg
and
mov
inc
cmp
mov
bound
stc
mov
and
in
cmp
lods
add
xchg
xlat
fidivrl
roll
push
daa
dec
jge
push
sub
inc
faddp
mov
xchg
push
lds
jl
fwait
adc
clc
adc
mov
je
push
adc
jnp
sub
push
rclb
andb
jo
xor
mov
inc
xor
stc
xor
cmp
mov
test
jbe
xchg
xchg
imul
out
push
nop
dec
addr16
xchg
pop
addr16
cmpsb
aam
cmpsb
insl
or
or
int3
push
aaa
push
jno
lret
xchg
hlt
stc
pop
xchg
jle
sbb
xor
push
outsb
popf
shll
std
xor
vcvtss2si
add
sbb
fadd
addr16
fimull
enter
mov
cli
push
das
fwait
adc
mov
push
das
popa
test
jo
loopne
out
push
inc
inc
push
clc
ficoms
sub
cmpsb
push
mov
cld
hlt
xchg
mov
cmp
fistpll
mov
pop
dec
mov
in
push
xor
pusha
sub
out
push
sub
fadds
and
jecxz
sahf
or
cmp
test
fidivrl
in
fwait
cmp
daa
add
mov
jle
cmpb
bound
xchg
idivb
dec
mov
outsl
cmpsb
popa
mov
push
loop
negb
lcall
sbb
das
mov
pusha
mov
stos
and
xchg
iret
adc
sbb
lods
xchg
ds
or
adc
pop
pop
lret
gs
xchg
in
jnp
dec
mov
test
ret
out
cmpsl
xlat
mov
or
xchg
cwtl
inc
sbb
repz
les
in
xchg
push
mov
adc
sbb
stos
jle
fldl
sbb
pushf
or
sub
push
mov
data16
pop
orb
cmp
jbe
sub
loopne
and
jl
jle
mov
inc
test
or
mov
add
add
or
jns
frstor
push
xchg
or
sbb
loop
jbe
mov
cld
jbe
rcr
pop
lods
mov
movsl
outsl
gs
fidivs
popa
sub
push
pop
pop
xor
scas
xchg
mov
adc
inc
mov
push
js
imul
outsb
leave
ret
insb
popa
scas
push
loope
jnp
popf
call
xchg
mov
xor
lahf
leave
popa
xchg
rcll
ljmp
adc
popf
jb
sbb
xor
push
in
jbe
sahf
cs
aas
mov
fldenv
pop
sbb
test
imul
or
aad
imul
lods
fsubrl
test
movsl
ljmp
xor
cmp
test
aad
cmpsl
aam
mov
nop
shlb
jg
test
cld
jns
jo
loopne
fs
cltd
and
rcl
cmpsl
xchg
daa
mov
orb
in
sti
out
insl
push
ss
push
mov
in
lods
in
jo
xor
rol
mov
sub
sbb
jb
sub
out
out
cmp
mov
jmp
subl
iret
push
push
rcll
jge
test
adc
ss
push
push
pop
mov
lret
sub
add
lds
movsb
enter
movsb
pushf
or
push
jne
adc
xor
stos
stos
out
loop
mov
cmp
stc
bound
and
mov
mov
jecxz
mov
stos
test
pop
iret
add
test
pop
sub
test
adc
imul
mov
xor
and
rclb
jbe
xor
dec
fisubrl
inc
ret
lea
jns
movsl
cmp
movsl
lret
xor
lahf
sbb
test
push
xchg
js
bound
or
cmp
inc
pushf
sbb
xchg
fstpt
scas
lret
dec
pop
jecxz
shrb
fbld
dec
int
xchg
arpl
dec
mov
and
pop
cld
xchg
vmulss
cmp
scas
loopne
and
mov
orb
cmpb
or
xchg
outsl
in
mov
mov
ljmp
pop
add
sahf
and
dec
inc
push
mov
mov
xchg
out
xor
sub
sbbl
xor
das
daa
push
leave
scas
adc
std
or
adc
icebp
inc
pop
shl
sub
popa
jb
xchg
cli
test
insl
push
push
mov
push
imul
push
shl
repz
mov
sub
cmp
popa
sahf
imul
mov
pusha
xchg
out
hlt
inc
jne
js
mov
imul
vcvtpd2dqy
outsl
inc
cltd
pop
in
and
sbb
repnz
jns
test
ret
nop
test
mov
fistpl
cmp
mov
dec
sbb
rcrl
lcall
inc
notl
mov
int
flds
fcomp
imul
pop
dec
sub
test
leave
push
xor
push
jg,pn
add
add
in
jge
ret
sbb
add
sbb
mov
sbb
xor
mov
mov
inc
push
divl
xchg
xchg
fldenv
jo
mov
dec
cmp
cmp
mov
les
js
cmp
sbb
dec
sbb
cmp
daa
or
cmp
pop
xor
add
js
pop
sbb
xchg
push
scas
pushf
nop
sub
in
mov
mov
xchg
and
jle
fimull
push
mov
es
pop
arpl
leave
int3
inc
cmp
adc
and
hlt
jg
in
xchg
mov
xchg
xchg
pop
bound
push
add
lea
in
add
int
ret
movsl
lods
cmp
and
mov
inc
int
push
dec
icebp
dec
out
xor
pusha
int
inc
dec
or
jp
jmp
lea
clc
xchg
out
movsl
subb
pop
repz
pop
test
pop
cmc
in
lret
scas
jp
and
push
into
mov
in
test
aaa
icebp
xchg
loop
fwait
pusha
ret
fsubrs
aaa
sbb
fsubrs
xorl
icebp
sub
cmc
sbb
ja
jb
dec
cld
call
loop
jg
idiv
clc
imul
out
jo
sbb
jno
pop
loop
ror
jo
dec
dec
mov
not
jp
mov
sub
xchg
inc
add
pop
cmp
jnp
in
sbb
stos
nop
sub
or
daa
pop
dec
inc
ret
fbstp
data16
cmp
dec
jae
sbb
xchg
lret
testb
aam
in
rorb
arpl
mov
iret
and
xor
sbb
mov
stos
mov
icebp
xchg
test
loope
jge
fidivrs
stc
loopne
jge
icebp
lods
orl
mov
xor
push
cmp
stos
jl
shrb
lcall
jmp
mov
jp
lahf
icebp
enter
sbb
in
cmp
xchg
add
cmp
xor
lds
add
and
stos
dec
mov
testl
pop
ljmp
xchg
jge
mov
cs
fs
pushf
mov
mov
xchg
inc
rorb
cmp
pop
push
lea
les
xchg
cmpsb
das
push
lock
xchg
jbe
mov
out
shl
xor
mov
dec
sbb
pusha
lcall
mov
mov
rcll
arpl
push
orb
in
push
push
xchg
repnz
xor
mov
inc
lods
push
lea
lods
hlt
xchg
xchg
inc
insl
mov
xor
mov
repz
ret
stos
mov
xor
jae
inc
or
fnstsw
roll
cmp
add
push
mov
arpl
ret
test
mov
push
jp
pop
xor
xchg
dec
ret
popf
shlb
jmp
jg
xor
xchg
jns
fs
lahf
lcall
in
gs
neg
int3
lret
push
scas
inc
sbb
dec
aaa
xchg
outsb
les
ret
addr16
loope
fwait
push
int3
or
dec
mov
xchg
movsb
mov
insb
xor
push
outsb
out
addb
ret
pushf
enter
ss
mov
mov
into
lea
xchg
adc
sub
movsl
shl
push
xlat
mov
push
rcrl
and
mov
pop
adc
pop
stos
dec
mov
pop
test
inc
es
gs
jno
int
lods
xor
and
jae
test
push
in
mov
cld
adc
fstpt
lods
jnp
ret
mov
mov
rorl
xorb
std
aad
jnp
push
nop
or
mov
or
mov
xchg
call
sete
sbb
push
mov
sub
or
iret
pop
xchg
faddp
pop
jge
das
les
inc
adc
adc
and
je
jno
cmpsl
arpl
or
fcoms
pop
fildll
lds
mov
dec
push
das
add
cli
inc
ds
mov
mov
mov
or
jmp
adcl
dec
out
in
pop
and
jne
ds
cltd
push
jp
mov
cwtl
jmp
jae
dec
movsb
lahf
mov
out
call
fstpl
xor
pop
jg
push
scas
add
mov
mov
out
pop
mov
pop
xor
aam
rcl
mov
or
push
push
cmp
xor
repz
sbb
inc
inc
imul
and
jo
aaa
inc
pop
gs
shrb
int3
aam
fldcw
enter
xchg
aas
call
mov
fists
dec
stos
mov
pop
int3
pop
idivl
mov
push
in
cmp
jae
inc
out
fisttpll
mov
mov
inc
inc
cmc
repnz
mov
mov
mov
repnz
out
pop
adc
cltd
in
shl
push
and
pusha
lahf
cmpb
sub
cs
xchg
scas
lds
cmp
sbb
mov
pop
insb
pop
dec
jmp
out
adc
aam
adc
scas
insl
imul
clc
push
andl
xlat
cld
test
push
fistpll
in
sub
aaa
fstpt
push
add
test
xchg
pop
mov
decb
cmp
mov
loop
ffreep
test
pop
push
add
jle
bound
das
and
icebp
mov
fwait
or
jno
xor
out
jo,pt
push
jle
lret
xchg
daa
push
xor
enter
push
fsub
inc
sahf
cmpsb
scas
and
idiv
mov
shlb
mov
es
ljmp
mov
cmp
cmp
sub
rclb
cmp
sbb
jle
and
jp
stos
lock
into
movsl
dec
jb
mov
pop
in
dec
xchg
cmp
jae
lods
pop
call
clc
fistpll
push
mov
fistpll
xor
inc
dec
dec
dec
lcall
adc
sbb
push
cmp
rorl
push
inc
movsb
and
jns
xlat
xor
cs
mov
xor
pop
aad
mov
dec
sub
mov
push
test
aam
js
jo
pop
xlat
mov
xlat
mov
fisttps
lock
dec
mov
lret
and
sub
mov
lahf
mov
mov
xlat
or
addr16
push
and
or
inc
fsts
clc
scas
or
loop
push
scas
or
cmpsb
movsl
pop
dec
imul
and
dec
mov
ret
mov
imul
mov
inc
mov
sarb
push
ret
sub
imul
test
jne
or
sub
roll
fimull
cmpsb
outsb
shlb
sahf
fnsave
roll
outsl
bound
pusha
mov
jle
fidivl
pop
adc
sbb
pop
jne
cmc
movsl
xor
ds
dec
aas
xorb
adc
stos
mov
and
sbb
and
xchg
xchg
outsb
jp
aam
fnsave
call
call
gs
addr16
jecxz
test
mov
mov
call
sarl
mov
xchg
or
sbb
pop
adc
mov
ja
iret
jae
jl
pop
cli
clc
push
pop
jmp
fs
and
rcrb
fcomps
cmp
add
xor
sahf
ja
pop
push
jmp
imul
mov
loopne
loope
and
pop
cmp
fwait
insb
js
pop
mov
lcall
adc
push
movsb
sub
push
aas
cmp
outsb
sbb
cltd
inc
insb
shrl
subl
insb
xchg
hlt
push
mov
lea
jnp
scas
jge
mov
xor
xor
imul
and
adc
jae
push
xrelease
sbb
ljmp
pop
out
push
rol
push
fidivl
push
fstpt
daa
xor
mov
fimuls
fsubl
mov
push
sbbl
inc
or
rep
fisttpl
cmp
fisubrs
sbb
mov
xor
cmpsl
jge
inc
push
xchg
lods
mov
xor
mov
call
mov
les
aam
adc
pop
dec
fwait
push
adc
add
cmp
xchg
push
push
iret
cld
mov
or
push
clc
out
out
nop
mov
push
lea
ficomps
fmul
and
cmp
out
lds
or
arpl
addr16
inc
cmpsb
in
inc
push
fstl
aaa
sahf
shlb
dec
sti
je
mov
xchg
mov
pop
in
xor
fdivl
pushf
loopne
jmp
or
sbbl
and
leave
fcompl
bound
pushw
sbb
mov
pop
xor
push
loopne
jns
sbb
icebp
lods
lcall
push
icebp
xchg
xchg
aam
and
and
pop
mov
lea
stc
lahf
dec
sub
mov
xchg
jno
inc
xchg
mov
push
data16
xchg
jmp
sahf
pusha
mov
mov
mov
mov
stos
js
and
mov
aas
ss
movsl
mov
icebp
rcrl
lea
cmp
jae
pop
repnz
aam
orl
mov
cmp
xor
stc
jmp
push
xchg
sub
pusha
jo
mov
cmp
insl
les
icebp
imul
sbb
ficompl
fnstcw
lock
pop
dec
into
sti
aaa
mov
lahf
inc
call
push
stos
sub
loopne
jbe
mov
add
and
jecxz
fimuls
out
xor
xor
data16
aam
adc
xorb
in
bound
jae
cli
xchg
cltd
mov
sub
roll
or
decl
dec
push
and
mov
out
int3
pop
dec
aaa
inc
lahf
rcrl
inc
sub
out
cld
cmp
cld
mov
or
cmc
push
mov
outsb
test
push
cld
mov
adcb
call
push
insl
or
sbb
ja
pop
imulb
call
daa
loopne
sbb
rclb
fistl
lcall
cmp
inc
push
ljmp
roll
or
inc
aam
xchg
or
lock
xor
add
mov
xor
test
lock
lds
addr16
cmpsl
dec
and
roll
fmuls
or
cmp
pop
int3
cmp
test
push
sbbl
cmp
pop
inc
sbbb
fisubrs
int
cltd
jp
fldenv
jp
jmp
bnd
loopne
cs
jno
pushf
dec
inc
std
fimuls
add
push
and
cmp
movsl
xorl
or
ret
stos
jb
popf
jecxz
sti
adc
cli
jmp
add
pop
dec
inc
mov
out
ret
mov
into
test
lret
fcmovnu
push
std
sbb
je
mov
fisttpl
cmp
sbb
inc
jo
mov
icebp
mov
arpl
das
clc
hlt
mov
push
fisttpll
or
cs
sahf
xchg
and
xor
mov
xchg
lods
or
cmp
or
mov
and
test
and
decb
dec
mov
dec
rolb
test
bound
movups
and
jl
pop
xchg
xchg
lret
repnz
call
mov
out
or
jne
mov
mov
cmpsb
mov
add
popa
cmp
in
jge
adc
sbb
aaa
lahf
mov
fwait
dec
cwtl
ret
jns
addr16
jg
sub
jg
jecxz
inc
dec
sbb
aaa
add
mov
jno
xchg
xchg
push
sub
ja
popf
cld
or
push
jle
into
pop
mov
mov
insl
popa
push
aas
xchg
scas
fdivs
xor
stos
popa
cmp
sbb
sti
test
and
dec
xor
andl
and
add
lds
inc
xor
shlb
cmpsl
pop
xchg
adc
dec
in
sub
mov
mov
mov
mov
mov
das
cmp
push
cmp
xor
and
pop
popf
and
test
push
call
sbb
dec
adc
mov
andb
sub
test
out
pop
gs
pop
dec
je
ss
sub
fdivl
adc
stos
mov
mov
fs
mov
out
ljmp
fiadds
inc
negb
and
iret
outsb
fistl
mov
fimull
pushf
lahf
lcall
cmp
and
das
pop
ficomps
in
mov
sbb
fwait
or
arpl
mov
mov
mov
fdivs
addr16
leave
popa
sub
pushf
or
sbb
inc
in
dec
cmc
not
push
dec
out
lods
mov
repz
popa
cmp
jecxz
pop
mov
and
sub
cli
inc
outsl
jns
iret
sti
mov
push
scas
std
xor
or
popa
testl
into
aam
ljmp
and
push
and
push
dec
jle
mov
xchg
pop
das
mov
testl
inc
iret
mov
jae
lcall
add
in
adc
out
lea
shr
inc
or
ret
xchg
or
push
dec
mov
sbb
jge
jecxz
dec
in
test
loop
mov
jecxz
or
das
fcmove
adc
roll
jae
in
shll
in
pop
dec
jnp
xchg
lods
jo
cmp
jp
hlt
mov
pop
sbb
mov
pop
ffree
push
push
movaps
pop
insb
imul
rcrl
test
mov
xor
xor
jnp
aam
pusha
xchg
sti
inc
inc
jne
pop
inc
out
stos
out
adc
cld
jmp
cmpsb
fucomp
aaa
jle
popf
hlt
divb
push
cld
or
push
inc
and
pop
je
sbb
jae
inc
divb
xor
or
cli
jmp
call
ljmp
cmp
fwait
xchg
andb
add
inc
iret
rorl
test
bound
repnz
add
mov
fidivrs
sbb
lret
cmc
mov
lea
sbb
bound
mov
jp
mov
push
popa
cmp
jbe
pop
sar
cmpsb
faddl
adc
andb
dec
jge
jge
subb
and
inc
mov
mov
hlt
xchg
pop
jns
movsl
lret
pop
pop
jnp
pop
insb
xor
scas
mov
push
ret
adc
lea
xchg
int
sub
lahf
lock
mov
cmc
adc
fisttpll
adc
mov
test
push
pop
mov
sahf
repz
push
cmp
adc
mov
or
nop
inc
cmp
push
ret
dec
inc
sarb
es
sti
and
xor
xchg
pop
jge
or
arpl
int3
jl
adc
insl
push
fidivrl
iret
aas
adc
mov
mov
mov
cmc
test
icebp
xchg
lahf
push
cs
pushf
aad
push
rclb
xchg
pop
sbb
mov
lcall
dec
add
aas
outsl
sub
dec
jbe
aam
xchg
jno
popa
and
movl
pop
dec
fistl
fcompl
cmc
out
pop
lret
movsl
push
mov
imul
insl
pop
sub
mov
call
mov
sbb
jmp
orl
jmp
sub
pop
sub
jno
dec
scas
lea
iret
jnp
loopne
inc
mov
in
sub
jno
jae
pushf
fbstp
lahf
icebp
test
not
push
into
add
insl
dec
jl
clc
out
pop
push
push
dec
ficomps
insb
add
mov
add
stc
out
inc
outsl
lds
lods
cli
adc
jb
andl
xor
data16
arpl
jne
pop
out
adc
jge
add
out
loopne
enter
repz
sbb
jb
dec
test
mov
pop
in
push
mov
mov
jle
dec
mov
mov
inc
push
inc
je
mov
daa
arpl
js
movl
push
mov
lea
or
loop
mov
stos
xor
hlt
and
call
pushf
das
inc
fdivs
dec
mov
xchg
test
xor
inc
pushl
ficompl
pop
cli
rcrb
int
lock
jmp
stc
loopne
aad
jp
sti
mov
clc
pop
jns
dec
jmp
cmp
dec
ret
xchg
and
xor
pop
mov
add
add
rcll
xchg
sub
aas
in
test
mov
int
mov
daa
sbbb
sahf
pop
or
clc
sbb
xor
das
adc
nop
mov
dec
aad
push
jmp
icebp
jb
push
xor
int
imul
jl
mov
push
dec
xlat
fsubl
adc
out
push
mov
call
cmpsb
xchg
jae
orl
and
popa
addr16
out
adc
lret
and
movsb
fisubs
sbb
sarl
pop
shr
mov
xchg
adc
jne
mov
ljmp
jne
push
into
dec
test
adc
jno
cmp
mov
mov
jnp
jbe
mov
push
cmp
loopne
shrb
mov
repz
leave
mov
ja
push
fistps
jmp
mov
xchg
out
pop
xor
mov
cmp
add
mov
stc
cmpsl
pop
mov
xchg
aam
popf
cmp
mov
or
xchg
aas
or
fs
scas
cli
test
inc
ror
pop
sar
js
and
jb
loopne
cld
jle
pop
xchg
pop
xchg
mov
cs
xchg
andb
rcrb
inc
mov
sub
fwait
in
xchg
dec
leave
pop
mov
jnp
xor
xor
or
daa
outsl
lock
sti
jl
cwtl
into
pop
nop
enter
xlat
outsb
clc
inc
dec
mov
inc
mov
fwait
rcl
dec
shlb
sub
in
adc
cli
xorl
fnstcw
push
sub
xchg
cmp
mov
mov
in
push
push
int3
mov
dec
pop
pop
ds
push
insl
pop
test
std
out
call
pop
cmp
in
stc
and
adcb
repnz
mov
jecxz
or
cmp
cld
fwait
movsl
push
imul
scas
jb
negb
lock
cmp
lods
fcomps
xchg
icebp
jg
addr16
scas
inc
mov
ljmp
dec
fmuls
dec
pop
xor
loopne
dec
ja
xlat
xchg
xor
and
adc
adc
ss
dec
sub
add
pop
jbe
xor
ficoms
jne
inc
std
push
sub
mov
adc
int
add
aad
add
rcrl
sub
ret
mov
dec
aas
mov
sahf
add
repz
insl
sti
out
dec
aad
mov
je
or
push
mov
clc
lret
fsubrs
scas
imul
adc
cld
imul
sbb
jg
lret
cmp
xor
sbb
ret
adc
pop
lea
push
xor
int
in
sub
rcrb
xchg
movsb
andl
loope
sbb
mov
mov
fwait
push
mov
pop
dec
jle
stos
push
xchg
call
sub
int3
lahf
fdivs
xor
mull
sbb
fwait
pop
push
roll
xor
and
pop
int3
or
lret
test
xlat
cltd
call
xchg
es
and
testb
jmp
cld
push
sub
jp
xor
sbb
sub
pushf
sub
pop
add
and
aas
pop
jo
pop
sbb
sub
push
push
dec
adc
shl
test
pop
imul
or
dec
sub
cmpb
daa
or
fwait
push
xchg
sub
cs
jb
fadd
ss
and
jmp
jg
pop
shll
mov
js
ss
sbb
fdivs
int3
inc
lret
pop
sahf
daa
subb
cmp
mov
cwtl
mov
sbb
in
adc
outsb
push
add
jns,pt
jle
sbb
pop
ficoms
dec
xor
es
pop
push
hlt
cmpsb
fdivr
xlat
inc
jge
sbb
imul
out
pop
xchg
and
jo
xchg
cmc
icebp
fs
or
in
pop
arpl
mov
mov
or
cwtl
sbb
push
mov
pop
ffreep
faddl
addr16
outsl
aas
out
mov
pop
inc
jecxz
ret
in
mov
test
and
clc
push
rorl
cltd
les
sub
inc
inc
imul
insb
pop
ror
push
adc
xor
daa
loop
push
xchg
lea
rorb
mov
push
mov
in
sbb
mov
je
sub
js
les
js
mov
cmp
cld
jle
push
dec
in
add
outsb
or
and
pop
and
xor
push
jo
outsl
pop
insl
inc
sahf
and
jne
hlt
inc
decb
xchg
leave
push
scas
cmp
repz
pusha
dec
sbb
les
inc
jmp
aam
mov
or
xchg
leave
adc
leave
in
aaa
adc
lret
jle
imul
outsb
push
sbb
loopne
lods
dec
mov
sub
mov
push
inc
and
outsl
or
ficomps
lcall
orb
mov
insb
test
jnp
inc
mov
inc
rcrl
stc
js
in
xchg
outsb
mov
test
adc
pop
mov
imull
and
bound
fs
jns
push
clc
jae
mov
sub
out
pop
jns
cmpsb
mov
mov
ljmp
mov
aaa
push
or
mov
push
jns
push
or
xorb
adc
divps
sbb
test
jmp
push
into
mov
les
in
cld
daa
arpl
adc
lahf
or
dec
gs
xchg
add
lds
mov
mov
out
into
push
mov
push
inc
cmc
jae
stc
gs
xor
aad
mov
xor
imul
or
dec
fisttpll
aaa
subb
adc
jne
sub
nop
inc
bound
and
repz
push
xor
mov
outsl
popa
mov
sbb
shrl
dec
shrl
xor
and
pop
inc
jnp
sbb
aad
sub
push
js
insb
mov
pop
and
jnp
adc
shl
sbb
or
into
push
jmp
shlb
push
adc
ficoms
sub
xchg
cmpsb
cmp
and
shrb
inc
mov
adc
add
lods
nop
lock
push
out
xchg
push
sti
outsb
mov
inc
add
push
xor
fisubrs
sbb
int
cmc
mov
cmp
mov
lcall
nop
fs
sub
push
test
std
xor
jl
jp
add
out
or
add
out
int
mov
imul
mov
lds
inc
fcmovnb
xchg
imul
movsb
push
lcall
and
in
sbb
mov
stc
add
cwtl
dec
pop
loopne
push
adc
dec
out
jle
notb
inc
imul
push
add
mov
fiadds
inc
daa
mov
scas
adc
lret
pop
aam
sbb
cmpb
jb
adc
pop
scas
pop
dec
bound
mov
cmpsb
leave
adc
loopne
add
pop
pop
cmpb
andl
mov
sbb
jle
divb
je
and
push
xchg
sub
inc
sbb
mov
inc
pop
leave
jnp
lret
jl
jp
cs
add
ficoms
pop
inc
loope
insb
icebp
fnstcw
dec
loop
adcb
push
jae
sub
js
dec
xor
insl
add
mov
adc
jno
xchg
push
xor
fldcw
fwait
xor
cwtl
xchg
and
push
les
adc
jne
in
mov
push
xor
pop
push
mull
repnz
sub
sub
add
outsl
or
xchg
stos
xchg
inc
cmp
xchg
addr16
lret
mov
sbb
lret
cmpsb
sbb
ror
pop
scas
icebp
in
xor
icebp
lret
rorb
pop
or
loopne
jecxz
xor
fistl
leave
xchg
cmpsl
rclb
and
out
push
adcl
add
call
jecxz
mov
push
cmc
nop
stos
daa
xor
ja
inc
mov
stc
enter
in
inc
dec
and
or
jmp
jo
imul
xor
pop
pop
xchg
dec
test
mov
mov
stos
fs
cs
cs
pop
popf
xor
out
shr
push
adc
jbe
dec
mov
cli
and
les
sub
cli
cwtl
push
loope
jo
cmp
cmp
pop
inc
push
add
cwtl
xchg
mov
jge
bound
and
inc
push
inc
call
mov
lds
out
jns
lahf
mov
cmp
cli
push
mov
data16
mov
std
sbb
dec
mov
cltd
rorb
loop
and
int3
push
pop
mov
jmp
lea
imul
adc
repz
leave
sbb
arpl
sbb
push
cmp
ret
inc
inc
stos
inc
cmp
scas
ss
jg
pavgw
js
xchg
fstpt
push
scas
lea
jo
inc
mov
out
lds
mov
arpl
imul
ss
cmp
insl
aam
stos
imul
lods
mov
pop
cmc
adc
add
js
cmp
cltd
fdivs
push
inc
cwtl
mov
cmp
cld
dec
stos
add
es
cmp
mov
push
mov
push
aas
and
push
repz
or
xchg
lods
lock
mov
xchg
dec
xchg
loop
fistpll
aad
jle
and
pop
jle
in
cmp
leave
loope
ds
cs
sbb
sti
xchg
inc
push
inc
push
ret
add
aad
pop
fnstcw
sti
fiadds
sub
ret
ret
mov
jb
dec
rorl
push
add
dec
aad
enter
subl
cmp
sbb
or
imul
out
pop
jp
inc
inc
pop
xor
jge
test
mov
cltd
sti
jl
pop
imull
fstpt
pop
sub
sub
mov
or
repnz
outsb
fwait
ss
inc
push
and
jl
ss
imul
add
sbb
mov
jne
ljmp
mov
clc
xchg
mov
fdivr
mov
jne
imul
pop
in
in
sub
add
cltd
or
mov
dec
imul
sbb
lret
xchg
jmp
fs
pop
or
xlat
sub
jno
pop
jle
sbb
insl
xor
sti
push
lret
sbb
daa
fnstsw
ja
fiadds
ficompl
dec
add
adc
pop
outsb
adc
bound
pop
and
adc
imul
inc
in
stos
repz
dec
adc
sahf
popa
lcall
lcall
cld
stos
and
or
test
push
push
lcall
jl
xchg
cmpl
lea
jl
sti
add
mov
push
bound
push
repz
lds
fdivrl
adc
subl
cmp
fildl
adc
dec
mov
mov
loope
test
inc
inc
mov
and
in
add
shr
sub
aad
add
or
pop
pop
insl
xlat
xlat
jmp
mov
xchg
scas
subl
loope
and
mov
gs
lret
les
dec
mov
into
push
clc
enter
xchg
add
cmpsl
push
xchg
push
and
xchg
pop
sbb
lret
mov
sbb
pop
cmp
push
inc
aad
xor
sbb
pop
imul
push
lret
cmpsl
xchg
leave
testl
sbb
repz
cmpsb
sbb
jecxz
xor
fstl
js
aas
or
into
xchg
jle
bound
adc
cmc
push
jno
es
aam
push
mov
lret
and
add
adc
or
enter
and
or
xchg
inc
push
mov
adcb
ficomps
mov
or
adc
push
imul
jecxz
cmp
out
mov
out
scas
mov
fstps
inc
aaa
sbb
sti
sahf
aas
jmp
pop
test
jnp
cmp
aad
add
mov
mov
push
sbb
js
test
in
in
enter
lret
popa
jb
add
mov
push
jp
leave
cmpsl
lahf
mov
mov
jle
mov
xchg
xchg
sub
pop
cmp
dec
out
aaa
jnp
je
pop
ss
je
enter
push
fistpl
aaa
out
jecxz
cmp
aad
mov
add
pop
stc
lcall
les
in
in
out
jno
mov
adc
or
mov
sbb
jg
mov
mov
gs
and
add
push
fs
mov
outsl
jne
push
imul
add
lods
lock
push
inc
stos
hlt
push
sahf
testl
lods
mov
aas
jae
xchg
fs
cmpsl
add
out
pop
jmp
adc
fistl
sbb
scas
adc
out
jae
je
testb
inc
push
shlb
sbb
jecxz
push
jge
push
cwtl
push
add
add
pop
jmp
jp
lds
lcall
je
fimull
pop
pop
add
daa
rorb
push
sub
arpl
popa
lcall
xchg
pop
mov
xchg
jns
es
jno
dec
and
ret
mov
test
insb
adc
in
inc
push
jb
xchg
dec
xchg
scas
cs
push
mov
push
jcxz
iret
cmp
aas
gs
pop
je
inc
sub
jo
dec
daa
push
mov
enter
dec
adc
int3
add
xchg
test
mov
inc
mov
sbb
mov
push
inc
dec
lcall
inc
cld
jl
cwtl
dec
rolb
daa
and
xlat
test
cmc
bound
mov
sar
mov
push
jmp
push
inc
movsb
out
sub
cmp
adc
stos
fidivrs
sbb
popa
mov
jns
jp
pop
adc
add
dec
push
sub
cmp
mov
test
shr
outsb
fldcw
popa
push
push
push
adc
in
push
movsb
in
roll
dec
cs
add
xor
xchg
and
xchg
lcall
or
dec
adc
lret
cmp
sysenter
sub
std
fsubl
add
add
inc
jmp
outsb
pusha
and
lea
jae
call
sub
mov
mov
test
cmp
jb
cmp
pop
outsb
add
push
add
xchg
lahf
dec
and
daa
pop
dec
jbe
jl
lods
push
loope
push
sub
imul
push
xchg
movsb
adc
cld
shlb
or
pop
pop
das
cwtl
pop
rolb
pop
xlat
test
xor
mov
and
repz
push
out
xor
mov
divl
dec
pop
xchg
data16
repz
pop
aad
sub
mov
daa
imul
sub
or
in
jp
popa
inc
test
and
push
and
jecxz
inc
pop
push
inc
mov
or
sar
inc
cmp
push
jg
xor
ret
int
lock
test
cwtl
mov
cwtl
leave
dec
lds
ljmp
std
xor
or
inc
adc
push
adc
dec
fs
mov
mov
repnz
cwtl
mov
cli
xchg
pop
push
pushf
pop
push
inc
add
inc
aam
cmp
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
ds
stos
fptan
call
test
in
adc
popa
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
adc
inc
loope
xchg
ljmp
push
stos
rcrl
leave
dec
cmp
jne
mov
pushf
jnp
aaa
xchg
ficoml
push
jge
stc
mov
or
xor
icebp
call
test
aam
lcall
sub
mov
xor
aas
sub
cmc
lret
nop
fwait
test
mov
mov
sbb
stc
dec
stos
out
pop
nop
xchg
or
or
sbb
xchg
mov
pop
xchg
mov
popl
daa
in
add
inc
and
xchg
and
insb
out
ret
mov
int
jbe
adc
mov
test
sbb
cmp
icebp
call
test
sbb
cmp
mov
mov
and
cmp
call
test
sbb
xor
sti
call
test
sbb
icebp
stos
out
push
mov
and
jae
ds
call
test
sbb
cmp
icebp
jmp
test
sbb
cmp
icebp
call
test
sbb
vpsllw
pop
repz
add
fyl2x
call
test
sbb
cmp
icebp
call
test
sbb
aas
fscale
call
test
adc
add
icebp
call
test
sbb
cmp
icebp
call
movsb
and
jae
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
das
sub
test
sbb
xor
icebp
clc
pop
mov
shrl
mov
test
sbb
sbb
icebp
or
and
lret
and
jae
pop
fyl2x
call
cli
and
jae
aas
fyl2x
call
test
sbb
cmp
icebp
call
les
jae
cmp
icebp
call
test
sbb
xchg
icebp
call
test
sbb
cmp
mov
pop
jae
mov
and
jae
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
test
sbb
cmp
icebp
call
add
jae
cmp
loope
pop
cltd
lock
fcompl
loop
pop
out
and
aad
rolb
loop
xor
icebp
and
imul
mov
sub
stc
enter
push
bnd
int3
cmp
mov
add
out
mov
jae
inc
fdivrp
scas
pop
inc
ret
enter
mov
mov
pushf
imul
loop
lods
mov
sbb
jae
enter
add
mov
jge
int3
xor
add
imul
or
xor
and
das
das
pusha
cli
int3
sub
sbb
add
xchg
mov
sbb
icebp
push
cmp
stos
sub
mov
sub
add
in
mov
mov
subl
lock
ja
cwtl
sbb
jg
stos
sub
add
call
xchg
cmp
jmp
mov
faddl
cmp
repz
or
rcrl
sub
xchg
lds
or
jmp
sbb
aas
jo
sahf
sub
or
clc
mov
test
jle
add
push
or
call
clc
push
ja
mov
fadds
fistpll
xchg
push
mov
mov
fnstsw
dec
push
call
pop
and
jl
cli
imul
out
stc
leave
ja
adc
cwtl
std
mov
push
and
mov
out
mov
jp
xor
lods
hlt
inc
mov
in
imul
fmuls
aaa
cmc
fidivrl
shr
mov
shlb
inc
test
jb
test
push
int
push
ja
lods
andb
pop
repz
jg
inc
push
hlt
fimuls
call
addl
xchg
sahf
inc
mov
cmp
loope
sbb
cmp
lods
cwtl
dec
lret
imul
scas
push
stos
ret
push
ret
push
push
adc
clc
sti
loop
repz
mov
fwait
rorb
mov
sar
ss
rcll
mov
inc
dec
jne
and
ficoml
xlat
push
mov
xchg
jnp
cmp
cmpsb
out
ss
insl
pop
push
jmp
out
lret
in
mov
push
xchg
dec
testl
dec
xchg
sbb
dec
sub
stos
repnz
mov
dec
or
pop
xchg
or
inc
arpl
nop
rorb
data16
jge
fwait
sub
dec
sbb
popa
inc
sbb
jmp
mov
xor
bound
sub
and
add
pop
cmp
lds
dec
cmp
inc
xor
sbbb
xchg
dec
jnp
sahf
fwait
dec
adc
push
pop
cmp
lcall
outsb
jle
orl
xchg
aaa
movsl
xorl
mov
sbb
xor
das
adc
pop
es
popa
jmp
xlat
mov
test
inc
inc
cmpsb
mov
inc
adc
aad
and
das
push
sub
push
ss
ja
nop
int
into
pushf
and
test
sbb
fisttpl
in
cmp
cwtl
clc
dec
xchg
hlt
adc
sbb
cld
jns
and
call
add
andl
xor
push
mov
out
out
pop
divl
inc
dec
mov
movsb
jg
dec
or
dec
pop
leave
mov
test
outsl
int
push
mov
dec
and
jge
lock
pop
adc
out
and
cmpsb
jl
ljmp
jecxz
sbb
xchg
and
adc
jge
popa
mov
sbb
int3
adc
popa
push
mov
add
xor
add
shll
icebp
mov
fwait
xor
xchg
aad
pop
aaa
jmpw
in
push
jns
inc
and
pop
cmp
mov
in
cltd
testl
pusha
inc
or
mov
mov
or
jl
dec
pop
cmp
repz
stos
push
inc
mov
ror
and
movl
out
dec
ret
add
leave
arpl
and
rorb
sbb
das
js
sub
sbb
sti
add
push
arpl
push
test
xchg
mov
daa
rol
ss
inc
cmpsl
subb
and
repz
mov
xchg
lods
enter
inc
xor
sbb
inc
out
dec
subb
stos
dec
pop
jae
mov
mov
pop
daa
pop
sahf
add
push
mov
add
stos
and
hlt
jecxz
sarb
inc
inc
lahf
cmp
pop
je
cld
mov
xchg
push
loope
nop
mov
jge
outsb
jge
in
jbe
pop
pop
pop
xchg
stc
daa
es
fsubrl
iret
in
movsb
xor
outsb
testb
jmp
pop
insb
sbb
repz
mov
mov
clc
sbb
xor
jg
sub
dec
clc
inc
mov
mov
sub
faddl
pop
jno
mov
icebp
xchg
loope
xchg
insb
sahf
xchg
add
xor
and
sahf
jecxz
xor
scas
out
push
jl
pop
jns
mov
repz
mov
insb
daa
rcl
cli
out
mov
mov
flds
pop
shll
xchg
rcrb
icebp
test
mov
push
xor
cmp
fcomps
mov
or
fnstsw
adc
lret
mov
pop
xchg
add
daa
imul
inc
movsl
push
fsubrl
jo
jb
frstor
fdivl
pop
cmpsl
xor
push
pop
adc
add
push
sbb
pop
stc
mov
imull
xor
test
mov
imul
inc
addr16
addr16
push
mov
stc
or
mov
popf
jg
jnp
das
std
cld
and
pop
fildl
xor
sbb
cs
and
cmp
adc
jno
daa
ss
cld
sti
mov
mov
scas
es
mov
push
sub
add
lds
adc
rorl
or
out
shlb
xor
pop
lcall
jo
mov
lock
cmpsl
lcall
int
testl
sub
xchg
dec
mov
dec
dec
jo
jno
jge
xchg
xchg
ret
daa
sub
mov
in
aas
les
sbb
push
dec
push
xor
push
in
enter
mov
mov
push
sti
outsb
mov
rolb
sbb
fmull
lea
jge
add
stos
mov
in
mov
xor
and
xlat
insb
jo
pusha
pop
push
outsl
mov
enter
repnz
and
add
or
add
inc
lret
cmc
lods
xor
mov
adc
jns
ss
ja
xlat
fidivl
shr
stos
adc
cmp
pop
xor
outsl
jl
jecxz
data16
aaa
cmpsl
imulb
scas
push
dec
add
ss
sbb
and
imul
mov
dec
sbb
test
dec
mov
pop
jle
push
or
and
jbe
push
or
sbb
pushf
int3
cwtl
or
f2xm1
jns
mov
add
adc
shll
int3
popf
pop
aaa
mov
xchg
jo
mov
push
ss
ss
notl
sbb
xlat
mov
xchg
or
adc
inc
push
fnstcw
outsb
cmp
cmp
shlb
pop
out
pop
and
insb
dec
pop
inc
imul
jns
mov
clc
lcallw
jae
fnstenv
sbb
call
cmp
push
push
push
push
notl
repz
inc
sub
xlat
sbb
stos
lahf
inc
int3
cmp
xchg
mov
dec
stos
mov
jl
les
insb
push
add
div
mov
lds
rol
sub
lahf
inc
sub
daa
sub
daa
adc
xchg
insl
adc
adc
xchg
inc
push
dec
cmp
mov
xchg
out
xchg
adc
clc
xor
popa
es
aad
cld
adc
je
imulb
cmpsl
imul
out
aad
fadd
adc
adcl
aaa
jge
lods
into
sahf
push
mov
outsl
pop
mov
mov
xchg
or
clc
pop
and
push
imul
ret
add
stc
sub
fisttpl
out
ret
sbb
jb
loop
leave
jl
dec
scas
sbb
dec
mov
and
fidivrl
stos
add
or
fstps
xchg
pop
pop
fnsave
addr16
xor
push
xor
push
xor
pushf
mov
es
aas
adc
pop
sbb
add
dec
xor
or
scas
or
or
xchg
test
dec
loop
xchg
in
in
jg
dec
sub
arpl
mov
in
mov
dec
xchg
insl
adc
mov
stc
mov
test
aad
scas
cs
mov
mov
mov
mov
scas
jmp
fsts
leave
jae
test
into
adc
cmpsb
push
scas
xor
stos
ja
dec
push
aam
repz
cli
or
sbb
fnsave
arpl
sarl
ret
popf
inc
dec
rorl
cs
orb
in
cmp
and
rclb
sbb
xlat
xchg
xchg
stos
mov
add
repnz
jne
push
cmpsb
lds
mov
jae
mov
xchg
or
shl
mov
js
imul
movsl
jns
imull
push
outsl
imul
or
sub
insb
imul
popa
insb
mov
fistpll
sub
repz
push
movsl
mov
inc
std
mov
inc
mov
inc
jle
dec
int3
mov
xchg
icebp
push
lds
cmp
addr16
and
test
or
mov
scas
xchg
add
pop
js
jae
ljmp
hlt
mov
pop
mov
cmp
fidivl
icebp
insl
inc
jmp
stos
int
fimull
leave
imul
or
fs
push
scas
imul
pop
pop
cmp
or
mov
lret
sti
xor
jnp
inc
sbb
es
in
jbe
push
mov
push
mov
movsl
addb
push
in
pop
int3
cmp
mov
xor
pushf
add
push
cltd
es
dec
out
lret
jp
or
and
push
cmpsl
pop
ficoml
xlat
mov
xchg
push
and
push
xor
mov
test
sbb
jbe
jns
int
clc
xchg
sti
imul
lcall
mov
fcompl
mov
cmp
xchg
repz
rolb
sbb
int
and
sbb
arpl
mov
push
jae
vmaskmovdqu
xchg
aad
aaa
push
in
push
out
add
std
pop
scas
repz
mov
insb
sbb
jbe
ret
ret
cmp
and
jle
stos
mov
test
out
ret
add
xchg
sub
mov
cs
sub
inc
xchg
add
stos
insb
lahf
rolb
lahf
out
ret
addr16
mov
lods
clc
jb
jecxz
cld
leave
fimuls
test
cmpsb
nop
pop
leave
adcb
jge
call
sub
imul
idivw
in
repnz
jbe
pop
push
stc
pusha
mov
add
popa
mov
jne
shrb
jae
jg
dec
dec
fstps
and
mov
adc
int
jmp
jns
sar
xchg
mov
fwait
xor
test
push
fs
adc
push
pushf
add
xor
xlat
cmp
fcomps
sub
out
ja
test
hlt
jecxz
movsl
pop
test
mov
fdivr
incl
cmp
jns
jge
rcll
sub
pop
xchg
dec
xor
adc
dec
xor
arpl
ja
mov
mov
fcoml
lfs
dec
push
cmc
repz
lea
mov
or
outsb
push
nop
add
aaa
mov
jg
outsb
add
cmpsl
ds
xor
shll
xchg
and
movsb
add
mov
mov
pop
push
stos
enter
push
stos
cmp
fmul
add
negb
mov
cmpl
adc
xor
sahf
cs
ja
and
test
lret
loopw
popf
sar
xchg
scas
push
fs
popl
test
add
pop
daa
pop
cmpsb
pop
or
mov
push
cs
sub
or
inc
insb
push
vphaddubd
push
push
sbb
jg
xchg
and
pushf
mov
pop
inc
mov
sub
mov
add
loopne
insb
mov
inc
pop
into
jns
aas
pop
dec
pop
pop
stos
jb
jp
dec
xchg
popf
pop
push
adc
sti
xchg
push
rcrl
leave
or
push
imul
or
std
test
aas
mov
fs
in
aad
shlb
test
popa
cmp
mov
and
sbb
fcoms
sub
adc
outsb
out
lret
aam
sub
lods
cmp
and
das
outsb
sti
call
repnz
outsl
test
jns
mov
and
lock
out
push
out
pusha
lcall
nop
push
and
out
lods
orl
aad
mov
int
mov
popa
cmp
xchg
cmp
out
jecxz
test
enter
pop
ret
in
mov
dec
xor
fistps
iret
leave
idiv
lret
popa
and
test
gs
iret
xor
fiaddl
cmp
idivl
push
adc
and
mov
xchg
push
movb
imul
in
mov
push
sub
jg
xlat
adc
or
inc
imul
sub
imul
rcll
das
rorl
jecxz
inc
jmp
mov
mulb
cmp
addr16
push
sub
jmp
sti
pop
notl
jmp
push
aam
mov
mov
xlat
cmp
push
fwait
shl
insb
dec
jg
ror
aad
nop
roll
inc
xchg
cmp
inc
jnp
fildl
push
loop
jae
inc
popa
mov
lret
addr16
xor
mov
adcl
sub
cmp
xor
cmpl
cs
shlb
jmp
fsub
in
sbb
mov
sti
lods
nop
sbb
xchg
int3
jbe
lods
idivb
and
xchg
jmp
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
