push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
sbb
mov
subl
aad
mov
mov
loope
scas
xlat
in
xchg
cmp
or
iret
mov
out
xchg
jb
cltd
xor
loope
push
inc
into
mov
add
test
popa
pusha
sarb
cmpsl
scas
int
jmp
in
fisttps
icebp
into
push
ja
andl
pop
std
jb
aad
add
mov
jle
les
std
adcl
jg
test
repz
gs
push
inc
xor
test
fistps
int
lock
out
in
imul
addr16
hlt
fwait
imul
lahf
in
jp
mov
jmp
push
mov
mov
cmp
mov
add
and
and
notb
pop
pop
xlat
mov
insb
push
mov
mov
jb
outsb
inc
addr16
nop
repnz
sub
scas
mov
enter
cld
insl
add
ds
fwait
xchg
jae
xor
mov
sub
data16
fistl
pop
stos
fdivp
sbb
push
mov
adcb
jg
or
ja
pop
cmp
div
push
or
repnz
add
mov
mov
push
dec
cltd
jns
mov
outsl
or
loope
or
bnd
inc
dec
stos
cmp
roll
push
movl
jmp
mov
pop
cwtl
jae
push
adc
add
adc
inc
data16
jle
dec
scas
inc
adc
xchg
pop
les
pop
movb
sbb
andl
das
out
call
mov
sub
push
ffreep
aam
imul
push
jecxz
push
mov
daa
pop
adc
pop
and
or
and
les
add
mov
mov
dec
jmp
mov
jb
xor
mov
stc
mov
loopne
sbb
push
pop
insl
pop
pop
scas
sbb
ret
test
ficoms
xchg
fisttpl
or
jo
jle
adc
ss
inc
xchg
mov
cld
push
insl
ja
pop
xor
xor
xor
sbb
adc
fidivrl
pushf
mov
dec
scas
out
xor
lahf
cmpsb
fs
push
xor
or
inc
mov
loopne
clc
jno
mov
mov
pop
push
mov
mov
mul
mov
sbb
push
pop
xchg
cmp
shrl
sbb
pop
push
sub
adc
sub
xlat
out
sbb
loop
xchg
mov
mov
lfs
mov
xor
sti
repnz
jmp
lock
push
shrl
inc
mov
rcll
ret
arpl
sub
sub
in
ds
lcall
jecxz
dec
xor
mov
ljmp
mov
pop
loopne
seta
or
jb
xor
test
cmc
mov
fcomip
lods
dec
leave
mov
xchg
inc
fsubrs
ja
add
lret
xchg
in
stos
shll
sbb
xor
inc
adc
xchg
jnp
cmc
fcmovne
imull
fstpt
mov
or
in
fxch
push
inc
icebp
aas
sub
sub
xchg
test
out
xchg
jmp
and
imul
push
cs
rorl
insb
push
mov
push
add
and
push
rcl
xchg
cmp
adc
iret
mov
inc
lcall
pop
or
cmpsb
xchg
popa
mov
int
pushf
add
add
mov
ljmp
rol
loope
ret
push
mov
xchg
outsb
inc
popf
add
call
test
test
inc
sahf
jmp
ja
push
jno
cmp
mov
adc
ds
mov
mov
sbb
mov
mov
shll
loope
mov
pop
enter
shll
out
adc
test
insl
cmp
je
dec
jne
incl
out
notl
dec
dec
or
add
mov
cmc
repnz
sbb
xchg
mov
pop
adc
jbe
pop
out
or
xchg
fsubl
mulb
ja
aaa
icebp
aad
lret
test
popf
xor
test
mov
pop
lcall
and
xor
or
leave
xor
imul
icebp
lea
adc
loope
test
mov
psrld
jns
jg
or
inc
jae
push
jl
scas
pop
push
rorb
mov
dec
mov
inc
jo
or
dec
or
std
pop
add
sahf
lods
ljmp
test
sbb
jae
mov
sub
sahf
fadds
add
adc
fisubl
sub
repnz
jo
data16
push
cmpsb
jns
adc
scas
cmp
mov
adc
filds
mov
push
inc
addr16
mov
jmp
ds
xchg
xlat
jmp
and
cltd
pop
js
cwtl
pop
mov
push
jnp
adc
sbb
push
push
cmp
jecxz
pop
rolb
sub
out
mov
fwait
xor
push
out
jns
shrl
fiaddl
jle
clc
loope
sub
sub
mov
mov
adc
fldt
enter
dec
fisubs
pop
imul
push
jbe
sbb
pusha
mov
push
ljmp
xchg
fmull
mov
add
fbstp
push
pop
stos
jmp
fchs
daa
xchg
aad
sbb
pop
jmp
pop
jae
fwait
inc
jns
aaa
add
jg
jge
or
daa
daa
adc
and
xchg
mov
loopne
ljmp
push
clc
sbbl
xchg
out
loop
sahf
mov
push
jp
sub
mov
es
out
and
pop
jno
test
lock
xor
and
clc
mov
jge
rcrl
mov
jne
xor
loope
lret
scas
add
bound
lods
adc
push
mov
in
pop
roll
fwait
aaa
xchg
cmp
push
outsl
jp
in
cmp
ja
xchg
arpl
stc
sub
mov
adc
in
mov
xchg
push
in
mov
pop
hlt
jge
add
cmpsl
icebp
nop
inc
dec
sbb
xchg
and
mov
push
lds
mov
aad
mov
aaa
data16
lock
mov
jo
cmp
stos
and
jg
loope
xlat
push
or
stc
mov
scas
movl
js
cmp
xchg
sub
mov
int3
mov
dec
xchg
pop
dec
ds
fadds
lds
pushf
and
xchg
daa
dec
adc
andl
jle
xor
pusha
push
inc
mov
push
les
xchg
cmp
jne
sub
fildl
pop
in
fbld
mov
fmull
dec
in
cmp
add
push
adc
xchg
cltd
mov
dec
sub
ja
loop
add
aam
es
cwtl
pop
xor
sbb
shll
xlat
jl
shll
cmp
hlt
es
adc
mov
rcll
clc
add
inc
mov
adc
inc
push
data16
scas
fwait
xor
out
or
mov
movsb
cmp
mov
mov
repnz
inc
xor
dec
lret
enter
jecxz
cmpsb
cmp
mov
lods
jb
es
adc
cmpsb
fisttpll
xorl
dec
pushf
mov
xchg
inc
cmp
jge
mov
xor
fstl
or
add
pushf
and
xchg
int
or
cmp
xor
fadds
dec
and
mov
mov
in
sub
mov
mov
inc
push
jne,pt
repz
sbb
rorl
shl
pop
sbbb
adc
int3
addr16
jne
shlb
insl
mov
adc
xchg
add
xor
adc
rolb
mov
jnp
int3
fnstsw
out
fxtract
cmp
cmp
insb
mov
mov
adc
scas
cmp
fistpll
pop
and
jl
adc
jb
test
lds
outsb
mov
clc
sbb
inc
xlat
and
xchg
push
fildl
inc
push
lods
test
or
cli
iret
jns
or
pop
out
stos
push
jg
cmp
test
imul
fstl
and
lcall
pusha
sar
hlt
pop
push
shrb
mov
sub
mov
jo
xchg
dec
in
sahf
jbe
and
dec
and
pusha
inc
sub
pop
call
das
mov
data16
out
lcall
mov
mov
pop
mov
outsl
fidivs
leave
movsb
mov
sub
xor
mov
in
mov
inc
mov
in
arpl
cmp
pop
aad
inc
inc
int3
sub
addr16
fsubrl
and
add
addr16
test
mov
push
clc
jecxz
rcrl
insl
int
lcall
in
aam
xchg
jg
mov
out
xor
inc
insl
jmp
dec
dec
out
sub
push
xchg
les
inc
movsl
fdivrl
scas
pop
fwait
push
mov
cmc
mov
fdivrl
fistpl
push
pop
mov
mov
xor
or
gs
aad
cmpsb
xor
out
pop
xor
cmp
sbb
mov
cmpsb
inc
dec
mov
jo
out
sbb
add
mov
ret
fs
pop
outsb
xchg
cmp
push
add
adc
fisubrs
mov
lods
jns
clc
mov
sub
fisubrs
mov
nop
leave
add
out
std
mov
je
out
js
jne
xchg
int
in
imul
fimuls
mov
xchg
sbb
movsl
popa
arpl
icebp
inc
ja
mov
inc
mov
cmp
std
nop
movb
repnz
or
insb
ds
andb
cmp
sti
aam
cmp
popa
insl
xor
mov
stos
inc
jns
popf
jmp
lahf
jge
sub
lret
jge
js
cltd
popa
or
int
mov
xchg
rcrl
fmull
mov
jno
addl
sbb
out
int
and
popa
jl
jo
xchg
or
pop
jne
fnsave
lahf
fwait
push
test
std
push
mov
and
scas
xor
lea
popa
shrl
cmp
fists
xchg
arpl
fwait
fs
jmp
add
gs
mov
enter
adc
ret
inc
out
shr
jb
fs
ja
mov
jo
cmpb
mov
adc
and
stos
add
in
rcrl
push
mov
out
testl
mov
xlat
dec
int
out
popf
lahf
xchg
aaa
dec
lret
mov
mov
or
data16
or
enter
aad
int
and
lds
inc
cs
out
outsb
cmp
xchg
js
xchg
push
sbb
loopne
pop
lret
stos
nop
cmpsb
stos
sub
add
inc
or
mov
test
call
push
dec
jb
xchg
cmpsb
sub
sub
sarl
aad
in
pop
or
movsb
mov
in
cmc
add
jne
icebp
stos
dec
fdiv
cmpsb
inc
dec
cmpsb
jae
test
lock
iret
mov
sbb
aas
xchg
out
xchg
or
rclb
pushf
inc
or
sahf
mov
or
pop
mov
repz
jmp
pop
mov
sbb
gs
push
ret
mov
jns
aaa
pop
dec
sub
sbb
lock
mov
hlt
push
pop
sub
inc
dec
jge
stc
jae
pop
fcos
ds
mov
cld
dec
test
and
sti
rcll
push
pop
mov
ljmp
sbb
sarl
test
aam
divb
mov
shll
leave
daa
and
push
jmp
mov
adc
out
and
inc
mov
test
sub
jge
push
adc
addr16
nop
imul
jns
xchg
sahf
rol
in
mov
sub
add
mov
cmp
hlt
das
in
sbb
in
int3
cwtl
repnz
push
mov
test
pop
inc
and
pop
movsl
mulb
jle
dec
mov
cwtl
sub
pop
outsl
mov
jnp
jns
aaa
iret
xor
cmp
lds
pop
or
inc
pop
in
and
xor
lods
sbb
mov
add
aad
insl
inc
cli
dec
das
cmp
inc
inc
frstpm(287
xor
push
mov
outsb
inc
xchg
xchg
xlat
mov
clc
inc
add
push
adc
jo
push
lds
out
mov
mov
loope
push
out
divl
mov
adc
jae
jmp
lock
pushf
shlb
cmpsl
jcxz
and
in
insl
stos
outsb
hlt
repz
testb
fcoms
andl
or
inc
mov
sbb
push
cmpsb
and
mov
test
out
sbb
or
xchg
std
mov
mov
fwait
rol
aas
mov
xor
cmpsl
stos
dec
out
and
xchg
push
inc
or
adc
xchg
jo
add
fbld
sbb
jp
pop
stos
test
or
sub
sti
xchg
enter
mov
inc
testb
out
xrelease
add
jae
add
add
aam
movsb
dec
mov
aaa
adc
and
fists
test
jge
es
sub
jecxz
rclb
call
mov
ret
sub
xor
mov
cli
shrb
js
inc
out
cmc
imull
pop
sub
popf
scas
scas
shl
test
add
mov
push
inc
out
mov
or
sbb
insl
mov
movsb
cmp
adc
jno
in
ljmp
pusha
in
incl
pop
lahf
lea
gs
icebp
stc
sub
outsb
aam
pop
flds
push
out
dec
sbb
jne
dec
jp
xchg
cs
out
cwtl
xchg
pop
pop
cmpxchg
add
imul
push
cli
aad
dec
or
sahf
xchg
jno
jp
push
dec
test
dec
mov
stos
mov
sbb
mov
or
stc
jnp
gs
push
jns
and
jle
pop
ja
inc
aam
push
sbb
inc
aas
aaa
lret
insl
out
mov
xchg
pop
and
jo
rolb
int3
pusha
add
stos
push
rcll
sbb
into
cs
jl
add
mov
jb
cmpsb
jae
xchg
fbstp
into
addr16
shrl
add
pop
sbb
jnp
mov
sbb
orb
inc
jp
adc
xchg
sub
fcompl
sti
out
pop
inc
test
pop
push
cmp
cli
inc
in
ret
push
jbe
sahf
sub
cmpsl
adc
or
mov
test
add
push
imul
inc
mov
popa
inc
sub
fwait
mov
fidivl
inc
les
cmp
adc
lret
mov
sahf
mov
mov
lret
sbb
movsl
add
dec
push
clc
iret
int3
jne
mov
sub
dec
popf
imul
out
test
call
or
stc
push
imull
fsqrt
fs
mov
sbb
mov
ljmp
mov
repz
mov
sti
sahf
test
out
adc
out
mov
and
mov
cltd
mov
xor
pop
enter
add
outsb
add
or
push
inc
daa
repz
cld
add
push
sbb
les
cwtl
xchg
das
sbb
negl
out
mov
jb
sub
cmp
pushw
sbb
push
or
jnp
mov
repz
mov
and
dec
xor
clc
or
ret
icebp
lods
out
add
adc
ja
nop
xor
outsl
aas
rcll
lock
sahf
cmpsl
out
leave
dec
xchg
das
popf
pop
mov
loope
cld
into
mov
jns
test
push
add
or
mov
push
stos
or
adc
push
jo
cld
jg
imul
xchg
add
hlt
cwtl
dec
xor
xchg
add
imul
jp
in
popa
cltd
xchg
jmp
fwait
xchg
hlt
add
pop
in
ss
in
mov
outsb
jae
mov
imul
xlat
inc
sub
jecxz
mov
bound
out
jg
cmp
std
xchg
jg
mov
mov
fdivs
xchg
cmpsl
xor
enter
popa
popa
jecxz
xchg
pop
aaa
cmp
rcrb
fstpt
std
cmp
imul
push
rclb
in
xchg
shll
out
int
adc
mov
mov
in
cld
loop
insb
test
cmp
push
push
outsb
fwait
add
shlb
or
mov
fbstp
orl
push
fs
scas
out
in
bound
xchg
jl
cld
fisubrl
dec
out
dec
dec
pop
add
fadds
inc
sti
dec
out
or
or
mov
push
mov
mov
dec
icebp
jle
lock
cmp
sbb
js
repnz
js
outsl
fmul
movsl
xchg
pop
add
sbb
dec
movsb
dec
mov
lahf
in
out
out
pop
and
out
push
cmp
mov
in
mov
jecxz
aam
pushf
inc
in
jle
inc
jmp
xchg
inc
mov
lahf
sbb
sub
or
sbb
mov
push
cltd
iret
mov
jno
imul
es
mov
das
xchg
jae
sbb
xchg
mov
lcall
clc
adc
iret
pop
loop
aaa
mov
aam
testl
fldl
mov
lret
mov
cmp
jecxz
aam
jle
cwtl
jmp
cmpsw
test
mov
xchg
jns
lods
add
test
xor
aam
loope
jg
pop
add
xor
in
cld
xor
imul
fistpll
fwait
or
lods
ja
ja
mov
fisttpl
lcall
icebp
iret
sbb
loop
mov
mov
pop
movsb
cltd
pop
cmp
test
push
mov
mov
aad
or
ret
xor
jnp
pop
inc
pusha
rcll
push
push
push
dec
pop
iret
jb
push
xchg
cmp
adc
mov
je
and
inc
push
mov
cmp
rorl
pop
sub
shlb
ja
pop
rcrb
sub
and
pop
or
lret
inc
int3
fists
ret
inc
jge
or
inc
mov
push
adcb
mov
xor
pushf
dec
into
data16
lea
pop
mov
pop
stos
int3
add
outsb
in
pop
clc
sbb
pop
lret
iret
push
stos
xor
in
pop
xchg
repnz
and
xchg
dec
inc
jb
cmp
dec
stc
jmp
jne
mov
or
pop
xchg
mov
mull
push
xchg
icebp
lods
pop
fs
test
rcll
pop
inc
mov
cmp
or
xchg
adc
les
pop
xchg
push
push
jo
mov
xchg
subb
es
imul
call
pushf
sarb
sbb
push
mov
sbb
xchg
push
mov
xor
xchg
es
and
and
adc
jmp
call
xchg
add
sub
aas
xchg
ljmp
sbbb
dec
fisttps
out
sbb
int
sbb
jmp
add
lock
lds
cmpsb
imul
mov
push
sbb
scas
adc
and
adc
sub
out
mov
arpl
push
pusha
add
aaa
repnz
aam
hlt
sbb
shl
dec
aad
cmp
sbb
jno
cmp
cmp
mov
outsb
aas
lcall
push
stos
inc
orps
jle
mov
mov
inc
insl
test
adc
or
iret
adc
xchg
or
add
into
push
jmp
add
sbb
in
mov
repz
outsl
in
xor
dec
or
pop
stc
xor
sub
lcall
sti
cwtl
lods
lea
lahf
lcall
dec
cld
repnz
jmp
xchg
mov
dec
inc
ror
xor
adc
jmp
fdivrl
inc
stos
pop
jno
rep
dec
clc
and
cmp
pop
xor
inc
std
add
in
mov
cli
lahf
stc
sarb
or
dec
and
push
sahf
mov
xchg
jmp
cwtl
fcmovnu
mov
nop
dec
push
push
je
add
xor
lods
lea
out
pop
add
mov
lcall
sbb
popf
sub
popa
pop
fsubrl
mov
sbb
mov
mov
push
pop
lcall
pop
pop
adc
sbb
cmp
ja
mov
jp
xchg
jnp
cmpsl
or
lods
adc
inc
ds
add
jbe
adc
out
mov
test
push
xorb
xchg
add
scas
jmp
xlat
daa
stc
jo
and
sbb
inc
insl
xchg
sbb
aas
mov
fdivr
nop
pop
pop
adc
inc
cmpsb
insl
sbb
fwait
pop
aas
out
pushf
mov
andb
mov
xchg
or
xchg
xchg
inc
call
in
lahf
fstpt
call
enter
rcll
inc
shrl
xchg
ret
in
jle
or
sub
iret
aaa
jmp
ss
cmp
push
test
inc
adc
or
cld
mov
hlt
sub
pop
jmp
dec
adc
insb
pop
dec
add
or
repnz
jns
aad
inc
daa
inc
adc
xchg
jne
shrb
out
sbb
popf
fwait
dec
and
push
popa
cli
sbb
call
jle
stos
dec
test
ret
mov
cs
addr16
repz
data16
inc
fidivl
jg
rol
xchg
lock
hlt
out
out
adc
mov
adc
lahf
jge
leave
jl
dec
cmp
cmpsb
xchg
test
sbb
sub
lods
fsubrs
xchg
push
leave
mov
ds
sahf
ss
push
in
xchg
mov
jecxz
dec
xor
fsts
push
scas
loopne
xor
orl
sahf
xchg
aam
sbb
add
cmp
jge
sbb
mov
xchg
leave
jnp
xor
lods
sub
in
xor
jb
adc
xor
dec
clc
xor
or
movsl
jae
cmp
xchg
enter
fs
xor
xchg
sub
stos
xor
subb
imul
scas
int
daa
push
out
bound
cmp
pusha
dec
decl
pushf
test
sub
or
mov
push
dec
fdivr
fdivs
in
mov
popf
ljmp
inc
insb
arpl
bound
repnz
movsb
jmp
es
in
and
out
mov
adc
and
lods
adc
xor
adc
movsl
in
cmp
mov
in
cmp
pop
add
iret
pop
cwtl
cmc
inc
sbbb
sahf
push
stos
dec
inc
lods
fwait
xor
mov
xchg
rorb
jbe
sub
loopne
in
insl
cmp
pusha
push
and
cld
rorl
pop
test
fs
movsb
es
push
xchg
mov
mov
hlt
inc
sub
pop
orb
xor
jmp
ja
push
cmp
xchg
inc
inc
mov
orb
clc
sti
out
mov
in
cwtl
pop
jecxz
lret
shlw
test
aad
jno
lahf
fiaddl
mov
sub
getsec
movsl
cmp
inc
mov
push
dec
push
sbb
stos
les
push
je
test
and
stos
pop
dec
adc
or
sar
lods
ret
sub
and
cmp
sub
repnz
or
xchg
add
jno
adc
daa
mov
mov
ficompl
push
or
notl
sti
std
jmp
out
adc
adc
lock
in
sbb
pop
adc
xchg
bsf
loopne
stc
xchg
mov
mov
daa
aad
imulb
mov
adc
sub
addr16
xor
int3
mov
arpl
cltd
insb
and
sahf
mov
into
xchg
movsb
cld
test
loope
sbb
push
push
mov
mov
repnz
popf
pop
mov
adcb
lret
imul
inc
cs
int
push
mull
mov
fbstp
negl
inc
sahf
pop
fldl
sbb
xor
lods
jl
jne
lock
mov
data16
hlt
jl
mov
hlt
jge
jne
stos
stos
adc
sbb
sbb
push
js
das
pop
sti
and
test
scas
test
or
sub
cmp
lret
loopne
je
jl
push
shll
mov
xchg
or
mov
ret
dec
pop
mov
lahf
or
mov
mov
mov
and
mov
mov
pop
mov
adcl
ljmp
movsb
iret
add
dec
sbb
rorb
std
fs
sub
aas
scas
mov
fwait
mov
xor
pop
cmp
shrl
pop
loop
mov
aaa
inc
xchg
stos
inc
pop
xchg
repnz
out
lock
std
jbe
cli
cmp
icebp
pop
fildl
xor
loope
xor
cs
and
ret
pop
in
lcall
and
in
or
ss
xor
or
icebp
and
xor
sub
or
idivb
hlt
ds
xorl
push
mov
mov
jp
xchg
test
pop
insl
sub
add
dec
test
adc
pop
ret
rclb
in
daa
cld
movsb
mov
xor
shrl
inc
leave
cld
pop
pop
cmp
out
cmpsb
aam
int3
shlb
aaa
jo
lret
jb
push
pop
and
out
mov
ss
add
fimull
ja
xor
aam
push
icebp
dec
loopne
mov
add
dec
pop
int3
in
lret
lret
push
push
cmp
sub
mov
jbe
jnp
xor
dec
and
lret
fucomi
stos
and
daa
mov
pop
pop
push
loopne
pushf
mov
push
sub
xchg
sti
jp
and
data16
and
dec
mov
sarl
jecxz
sub
add
sub
xlat
dec
ror
insl
es
sbb
rorb
ja
scas
outsl
lret
stos
ror
or
ds
xchg
push
sbb
movsl
lahf
pop
mov
sbb
stos
adc
or
mov
mov
pop
lahf
and
push
das
cld
sbb
or
mov
lods
xchg
jle
sub
sub
test
clc
dec
sbb
dec
mov
shl
or
fbstp
mov
scas
mov
add
filds
xchg
lods
dec
cwtl
xlat
dec
xchg
movsb
cli
mulb
push
imul
mov
pop
dec
mov
mov
jmp
xchg
pop
stos
mov
ljmp
jge
sub
out
jp
in
fldt
jo
test
xor
push
cmp
mov
mov
cwtl
negl
dec
sub
mov
sub
push
jb
lea
add
rcrl
add
fnstenv
in
aam
cmpsb
decl
aas
dec
repnz
rcr
push
pushf
cmc
popf
adc
test
mov
aaa
mov
into
pop
out
outsl
rclb
movsb
ror
xor
inc
imul
ret
ja
pop
add
insb
adc
iret
in
rorl
add
push
roll
in
fucomi
sarl
aad
xor
push
add
cwtl
outsb
pop
enter
inc
cmp
mov
mov
cmp
cmc
xor
cmp
cmp
mov
or
dec
les
xor
pop
add
test
lock
jne
dec
xchg
std
mov
aad
xchg
sarb
sub
aas
xlat
adc
leave
aas
pop
fisubl
jg
jmp
mov
repnz
sbb
xchg
inc
daa
or
fstps
pop
mov
ret
movsb
subb
cwtl
gs
and
jge
jb
insl
inc
and
jp
dec
ljmp
add
cmpl
dec
push
dec
pushf
sbb
cmp
push
int
inc
div
pop
div
cli
adc
subb
xchg
sbb
or
xor
shll
movsb
ret
rcrb
pop
shll
dec
push
out
jge
or
xchg
mov
mov
inc
js
repz
out
sbb
and
imul
inc
int3
aaa
jmp
sub
add
xchg
cmpsb
outsb
jne
xor
mov
cmp
enter
add
mov
ljmp
xor
push
dec
in
repz
leave
xchg
lea
daa
lea
stos
sub
mov
adc
int
push
out
fnstcw
cmp
pusha
mov
lcall
xchg
rorb
jbe
test
mov
or
push
sub
decb
aad
ljmp
cmp
dec
xchg
popa
and
scas
mov
in
mov
leave
push
enter
push
xor
ret
lea
mov
daa
test
rsm
nop
in
mov
loopne
leave
dec
ret
push
test
push
iret
les
fildll
mov
inc
rolb
aaa
cmp
out
ret
mov
in
xor
loope
outsb
jo
inc
movsl
bound
mov
dec
bound
push
sub
or
insl
mov
xor
aad
inc
sbbl
inc
mov
in
notl
andl
cmp
sbb
cmp
inc
jae
and
add
push
sub
test
mov
stos
aaa
and
leave
jo
and
aad
gs
sub
fwait
pop
dec
mov
dec
add
int3
cmc
xchg
nop
xchg
lock
mov
daa
stos
lock
clc
sub
and
or
pushl
mov
inc
xor
mov
push
aas
cld
icebp
xchg
cmp
out
jns
xchg
popa
inc
jl
addr16
xchg
nop/reserved
push
xor
aas
push
in
mov
ret
inc
lret
push
pusha
mov
push
push
xchg
mov
xchg
loop
jbe
ror
mov
mov
push
or
pop
mov
cmp
dec
stos
filds
mov
jo
inc
adc
movsb
sbb
add
out
xchg
out
cmpsl
cmpsb
movsb
and
popa
jo
adc
addr16
fmull
cmp
or
fsubr
jg
mov
pop
dec
fdivrs
fsts
hlt
and
and
ret
jle
cmp
mov
push
loop
loope
lret
dec
nop
popa
adc
roll
add
add
push
daa
mov
jns
ret
pop
imul
sub
push
mov
movsb
ljmp
int3
dec
adcb
jb
xchg
ret
adc
andb
stc
dec
lcall
sahf
loop
sahf
jbe
xor
addr16
cltd
gs
imul
ss
xchg
xchg
mov
data16
int3
push
nop
cmpsb
clc
cmpb
rol
inc
dec
mov
sahf
inc
loopne
je
add
dec
test
insl
push
or
mov
pop
movlps
and
iret
insb
push
dec
into
iret
cmp
insl
mov
test
mov
rcl
das
add
pop
or
mov
mov
jae
mov
lret
jecxz
mov
imul
inc
movups
mov
cltd
ffree
clc
outsl
pop
int3
cmp
stos
mov
in
sub
pusha
or
sub
jmp
loop
adc
pop
and
xor
addr16
cmp
xor
push
jbe
sub
hlt
int
movsb
pop
ds
popa
mov
popa
fs
xor
aad
sbb
add
cmc
hlt
mov
mov
ficompl
in
mov
xor
cmp
cmp
pusha
inc
xchg
push
or
scas
push
les
sbb
adc
mov
dec
cld
js
and
inc
jl
lods
pop
cmp
adc
adc
push
sarl
in
jnp
pop
hlt
xchg
and
movsl
push
decb
jo
fildll
out
inc
and
call
sarb
push
mov
add
mov
hlt
outsb
adc
or
xor
xchg
inc
xchg
sbb
iret
mov
jae
or
call
call
pop
dec
mov
lret
xor
add
sbb
lret
inc
adc
lea
cltd
rcll
fs
mov
xor
hlt
inc
mov
inc
mov
or
aam
xchg
xorl
cmpl
mov
or
fistps
inc
mov
stos
xchg
or
inc
enter
cmp
inc
jmp
insb
scas
mov
fdivrl
dec
push
sbb
push
cmc
bound
sbb
adc
jns
dec
test
or
pop
fimuls
mov
in
ffreep
or
frstor
aad
xchg
xchg
pop
negb
dec
dec
sbb
std
sahf
sahf
and
pop
cmp
ror
cmpsl
mov
push
mov
xchg
rorb
ss
popf
mov
or
mov
aas
and
pop
push
adc
mov
sub
sub
push
and
add
fmul
insb
jmp
push
testl
aaa
jo
jmp
lock
enter
lret
dec
push
mov
leave
fsubrs
aas
pop
inc
sarl
das
cmpsl
xor
and
sarl
js
sub
out
cltd
xchg
sbb
mov
stc
sar
hlt
shl
div
and
mov
inc
dec
ja
cld
aam
and
jge
mov
movsb
push
ret
mov
shl
dec
dec
inc
pop
movsl
cmpsb
fwait
lods
push
push
or
cs
add
mov
or
out
shr
inc
inc
and
inc
iret
add
or
fmuls
adc
cld
pop
jne
pop
mov
cltd
popa
sbb
sbb
add
mov
add
or
pop
inc
jp
jmp
cwtl
mov
push
std
dec
jge
shrl
jns
mov
xor
push
pop
inc
shlb
dec
in
mov
jmp
dec
pop
cmp
pop
sbb
xchg
lods
adc
loopne
xchg
cmp
stos
jmp
mov
sbb
or
sbb
ds
cli
sbb
xchg
dec
push
jmp
jg
jae
sarb
outsl
mov
fnstcw
pop
jnp
xchg
sbb
or
sahf
in
mov
xor
xchg
jp
inc
push
rclb
adc
mov
stos
ja
mov
test
mov
xlat
adc
aad
pop
mov
stc
inc
jae
jnp
or
or
xchg
cmpsb
xchg
inc
mov
mov
in
aaa
iret
stos
out
sub
cld
dec
jmp
in
sbbb
jo
adc
sub
mov
inc
xor
outsb
xor
cmp
push
mov
stos
and
inc
notl
pop
mov
ror
movsl
dec
mov
imull
adc
rcll
inc
mov
fisubrl
int3
imul
stos
xor
push
mov
add
fiaddl
xor
je
push
jle
lea
push
jmp
test
lret
inc
out
dec
push
es
jnp
xchg
repz
test
adc
and
out
movsl
scas
dec
gs
xor
sti
repz
cmp
sub
movsl
pop
out
adc
push
xor
mov
jmp
aam
dec
je
loopne
inc
cmpsl
adc
lods
hlt
adc
iret
mov
push
mov
fcmovnb
ja
sbb
push
std
lahf
movsb
cld
inc
or
aaa
outsl
mov
adc
cli
inc
inc
jo
mov
ja
ds
sbb
inc
or
mov
fdivl
lds
mov
and
scas
adc
aam
sub
adc
test
nop
lret
inc
testl
ljmp
mov
inc
add
push
and
or
adc
cmpsb
scas
push
test
mov
sbb
rcll
or
test
and
repnz
int
cld
pop
xchg
jmp
inc
fldl
ret
negb
cltd
mov
std
dec
dec
js
xchg
jmp
push
icebp
fmuls
in
or
bound
or
sbb
mulb
addb
xchg
jb
inc
push
std
mov
mov
lods
sub
es
arpl
test
mov
out
xchg
lret
jbe
cmp
and
stc
sub
sbb
push
je
xchg
sub
shl
aad
ja
test
sub
fldl
sbb
pushf
popa
ret
xor
fmuls
sub
test
aam
push
mov
sti
mov
repz
mov
sbb
mov
stos
shl
loopne
or
cli
imul
mov
push
adc
and
pop
enter
fcomi
jns
and
dec
pushf
outsb
out
inc
sub
mov
mulb
stos
decl
mov
es
data16
movsb
jmp
adc
adc
call
jno
cmc
gs
movsb
sub
xor
push
xchg
lret
adc
aas
sahf
xor
call
aad
mov
aas
sub
addr16
and
popf
popf
popf
fstp
mov
dec
into
sti
jbe
and
lds
and
sbb
ds
pop
push
les
sbb
inc
inc
aam
ss
fistpl
mov
in
jns
les
movsl
jno
loopne
add
divb
ljmp
inc
scas
sub
int
jo
xor
aad
cld
add
out
jno
jmp
mov
shrb
movq
jge
xchg
icebp
scas
xor
hlt
dec
and
xchg
mov
push
xchg
push
sub
cltd
or
pop
outsb
in
sti
addr16
insb
cmp
les
mov
cmp
inc
aaa
and
lret
loopne
pop
sub
outsb
jnp
cmc
inc
mov
ja
es
bound
sbb
in
enter
jae
fdivrl
daa
pop
dec
out
sbbl
inc
mov
mov
shrb
mov
add
push
and
sahf
imul
mov
addr16
aam
cmpsb
fwait
ljmp
add
out
sahf
mov
jecxz
movsb
and
movsl
pop
inc
lds
jno
push
sub
lret
sub
cwtl
inc
add
mov
or
xor
sbb
pop
pop
aaa
mov
lret
mov
clc
and
in
aas
and
xchg
cwtl
pop
repnz
sub
addr16
lcall
cmp
and
or
pop
push
loop
das
push
inc
xor
add
mov
cld
xchg
leave
decl
rcrl
incb
pop
cmc
dec
xor
xor
cmp
and
xchg
in
mov
repz
lcall
push
adc
and
xchg
inc
nopl
imul
mov
test
push
imul
mov
xchg
pusha
mov
cmp
inc
push
pop
icebp
push
push
xchg
inc
iret
jmp
inc
mov
add
inc
fistpl
xor
lahf
push
pushf
cmp
cmp
icebp
or
sub
pop
pop
and
ds
test
add
push
lock
outsl
rcpps
push
add
addb
dec
rcll
iret
xor
cmpsl
int3
ljmp
mov
mov
jge
jp
dec
fistpl
cmp
je
jbe
stos
mov
int3
shrl
aas
push
dec
movsb
push
or
mov
out
hlt
inc
out
cmpsb
out
sub
test
pop
jns
mov
lods
adc
pop
add
or
out
popa
cld
insl
in
call
mov
add
popf
jne
sbb
and
out
add
or
pushf
sbb
mov
scas
cmp
fisttpll
mov
fidivs
ljmp
outsb
xchg
call
jmp
inc
mov
scas
leave
pop
rorl
mov
out
dec
mov
pop
pop
insl
mov
mov
lahf
adc
add
mov
scas
in
add
sti
add
test
cmp
inc
stos
gs
jecxz
jno
adc
push
fcompl
jl
std
mov
sub
mov
out
dec
xlat
mov
lret
jl
out
or
mov
aad
mov
sbb
inc
gs
aaa
test
or
and
into
orb
pop
or
adc
sub
dec
sbb
xor
mov
fdivr
inc
sti
and
test
sbb
mov
lret
mov
mov
das
xchg
mov
add
sbbb
cmp
sbb
mov
sbb
aaa
aas
cmp
mov
fdiv
mov
fisubrs
inc
add
sbb
loop
cmpb
ret
push
cli
sub
lret
cld
pop
inc
push
fcompl
pushf
xchg
xchg
insl
push
lcall
inc
xchg
stc
bswap
daa
lret
sti
jle
insl
xor
std
or
mov
rcll
dec
sahf
clc
sub
std
ficompl
adc
data16
ret
jae
or
pop
in
sub
inc
mov
dec
push
pop
lcall
xchg
pop
cmp
fld
cmpsl
fisubs
mov
adc
in
push
loopne
or
je
xchg
stos
loope
sub
mov
push
pop
sbb
int3
cwtl
sbb
out
mov
ret
mov
repz
xor
dec
mov
inc
sbb
add
fwait
ljmp
xlat
xchg
xor
dec
sub
in
fsubrs
jns
pop
or
xor
adc
lea
popa
addl
orps
jg
or
stos
fisttpl
sarl
call
repz
shrl
adc
mov
lods
in
jb
xchg
push
andb
add
es
adc
dec
push
push
jno
mov
jo
cmp
cmp
arpl
mov
xchg
mov
bound
add
in
adc
cltd
cmp
mov
nop
add
mov
xor
cli
lret
pop
aam
decl
sub
jbe
fistpll
xor
mov
ljmp
xor
add
cmp
aas
in
das
adc
or
inc
out
mov
mov
jg
and
pop
insl
sbb
jge
test
lahf
add
fisttpll
inc
xchg
push
pop
repnz
and
roll
neg
mov
or
xchg
stos
fimuls
shrb
add
bound
stos
repz
mov
pop
loopne
int
mov
adc
imul
xchg
inc
cmpsb
inc
jb
and
pop
xchg
or
inc
in
lds
mov
out
sub
lret
xorl
mov
jle
cld
mov
stos
and
inc
inc
sti
and
fabs
sbb
ss
clc
pop
stc
adc
in
xchg
pop
fidivrs
sbb
push
jbe,pt
push
clc
xchg
data16
or
adcl
mov
subl
push
cmpsb
xor
gs
mov
or
test
jg
jecxz
loop
pushf
pop
add
xor
stos
cmp
xchg
jl
je
cwtl
shll
testl
pop
aaa
fs
aas
sbb
icebp
pop
in
push
xchg
jno
adc
into
and
mov
mov
mov
jnp
xchg
comiss
mov
add
leave
xchg
sahf
insl
test
cld
or
xor
dec
lds
cs
test
ss
cld
hlt
xor
pop
add
mov
mov
frstor
insb
xor
xchg
out
adc
inc
cld
push
sbb
sarb
das
dec
je
adc
mov
cmp
sub
jo
mov
popf
jp
aam
shll
int3
jmp
outsl
mov
jnp
xchg
xor
fs
in
cmc
rorl
add
xchg
arpl
out
imul
pop
dec
popf
xchg
mov
adcl
pusha
pop
pusha
std
adc
xor
call
mov
mov
pop
loopne
ret
in
cmc
fimull
sbb
xchg
cmp
in
sub
cmp
jecxz
jb
stos
mov
dec
cmpsb
rcrb
lods
aad
test
xor
bound
lret
pop
shrb
xchg
jge
mov
les
cwtl
cmp
add
lahf
sub
sar
cmpsb
es
movsl
mov
xchg
mov
scas
mov
mov
dec
and
sarb
mov
xlat
pop
mov
pop
addr16
test
sbb
sbb
cmc
xor
push
dec
mov
out
pop
jl
sub
mov
inc
jno
mov
out
outsb
xor
dec
lret
out
cld
jle
icebp
and
xchg
enter
mov
testl
and
inc
jecxz
push
into
jmp
dec
iret
xchg
push
sub
xor
sbb
pushf
and
adc
mov
leave
loopne
mov
out
pop
in
adc
push
mov
iret
cmpsb
shl
mov
push
dec
dec
ja
fisttpll
sub
push
pop
mov
mull
push
hlt
sbb
xchg
add
add
popf
fsubr
repnz
addr16
pop
das
inc
and
das
int
jnp
jae
inc
or
adcl
lea
sub
push
sbb
scas
mov
lcall
mov
xchg
push
insb
bound
dec
jge
xorl
ror
jge
mov
inc
add
mov
cmpsb
mov
xor
mov
adc
idivb
stc
and
or
adc
add
or
test
jns
aas
adc
mov
mov
mov
pushf
mov
pushf
stos
lods
cmpsl
movsl
cld
inc
or
addl
add
cmp
inc
cli
and
clc
mov
fiaddl
js
push
into
inc
mov
aaa
pop
iret
mov
mov
mov
cmc
pop
xor
or
pop
inc
or
or
mov
movsb
pop
cmp
out
in
test
adc
mov
mov
pushf
pop
mov
js
pop
daa
shll
repz
jb
in
out
mov
jp
cld
roll
mov
ret
jg
inc
xor
mov
mov
xor
pop
data16
jnp
mov
inc
nop
lods
out
cmp
mov
add
loope
repnz
mov
nop
push
jl
pop
mov
test
stos
imul
inc
fisubl
push
mov
ljmp
mov
arpl
xchg
aas
xor
mov
out
or
pop
push
int
scas
xor
in
add
fisubl
or
mov
aaa
mov
ja
mov
das
mov
je
negb
dec
leave
movsb
mov
rclb
inc
out
mov
hlt
or
mov
sub
dec
in
push
mov
jle
mov
out
sub
arpl
addr16
vpavgb
sbb
lods
push
adc
nop
inc
addr16
mov
loopne
ljmp
xor
push
jge
push
jo
jbe
cltd
pop
mov
arpl
ds
jmp
xor
xor
addb
aas
jge
or
sub
mov
inc
outsl
mov
call
and
mov
gs
adc
imul
bound
push
arpl
in
sbb
dec
sub
insl
xchg
pushf
loopne
mov
fistpll
cmpsb
je
sub
push
imul
push
xor
in
push
mov
dec
xchg
lret
das
xchg
and
int
mov
mov
icebp
aas
int3
aas
movsb
addr16
jmp
imul
aam
mov
or
jg
sub
shrb
icebp
add
hlt
lods
popa
shrl
lret
sub
fistpll
stc
nop
cmp
cmp
cltd
inc
lahf
shlb
sbbb
jle
mov
and
mov
inc
pop
mov
dec
push
fisttps
imul
subb
inc
hlt
inc
jge
push
mov
js
cs
pop
add
jmp
jno
inc
jb
call
sub
push
mov
add
xchg
add
dec
sub
inc
sbb
mov
lret
mov
sbb
xchg
pusha
cltd
pop
lahf
jecxz
hlt
scas
out
jmp
shl
xor
dec
xlat
adc
scas
enter
gs
mov
lods
incl
hlt
xor
sub
les
cli
dec
aas
test
mov
loope
dec
es
fs
mov
nop
jno
cmc
jge
lods
adcb
xlat
push
add
pop
push
sbb
sti
jmp
mov
arpl
xchg
jo
call
mov
or
cwtl
add
outsl
push
dec
int3
repz
pop
ljmp
fsubrs
jns
adc
mov
xchg
add
xchg
movsb
lods
sub
and
fsubl
testb
mov
xchg
mov
jo
push
mov
or
int3
scas
jmp
mov
add
push
bound
imul
and
repnz
jbe
and
jae
loop
mov
sub
cmp
or
push
push
xor
push
fists
in
adc
ja
lahf
in
push
int3
sub
sbb
dec
clc
pop
rcr
and
sub
xor
and
xchg
std
sub
lods
mov
jae
or
pushf
adc
push
repz
arpl
jl
or
sub
mov
lret
xor
xchg
std
sub
push
push
clc
adc
xlat
shll
jns
dec
enter
pop
stos
or
fcoms
add
xor
adc
in
dec
repnz
pusha
jo
ljmp
dec
mov
xchg
adc
mov
jg
xor
imull
pop
xor
std
insl
arpl
das
int3
loop
or
test
xchg
scas
add
pop
lret
aas
std
das
add
lea
mov
movsl
repz
xor
cmp
jp
outsb
or
jle
inc
and
gs
adc
jae
fists
push
sbb
pusha
push
and
ja
pop
mov
push
movsl
push
jle
mov
jno
jle
in
or
dec
mov
stos
aad
jo
adc
filds
pop
mov
mov
push
jbe
mov
cli
xchg
dec
out
mov
aas
arpl
pushf
mov
or
popf
jo
mov
fwait
pop
inc
mov
mov
cmp
push
lods
rcll
cmp
push
addr16
xchg
cltd
cmp
mov
or
mov
pop
ja
xor
inc
mov
inc
loop
cmp
rol
idiv
xlat
out
xorl
cmp
adc
cltd
mov
pop
fwait
jbe
mov
xor
aam
sbb
cmp
mov
xor
add
and
aad
es
mov
rorl
push
mov
mov
insb
stc
out
addl
xchg
xchg
add
xchg
cmp
inc
aad
dec
and
adc
je
lods
jp
test
bound
sbb
cmpsb
das
ja
push
jge
mov
adc
cltd
dec
push
fwait
cld
retw
inc
lods
and
cmc
test
out
repz
jo
lds
mov
sahf
adc
enter
je
push
mov
add
dec
cmp
push
js
sub
scas
idivl
call
sahf
mov
or
cmp
push
out
movsb
mov
jbe
push
mov
aad
mov
mov
mov
mov
iret
or
jp
mov
sbb
imul
imul
sub
jmp
add
ret
adc
mov
loope
cmp
cld
cmp
cmpsl
push
xor
sub
mov
test
lods
test
jae
jge
cltd
rcr
add
mov
mov
fildl
shl
mov
rorb
cmp
insb
cltd
adc
gs
ficompl
divl
fsts
sbb
loop
xchg
jl
into
xchg
push
pushf
add
inc
dec
jns
mov
mov
xchg
add
loope
cmp
xchg
fdivrl
scas
push
jnp
out
pop
push
inc
push
scas
jb
mov
in
pop
dec
fs
aaa
ret
loop
sbb
fstp
xor
shll
xlat
xchg
and
dec
pushf
lods
mov
xchg
cmp
mov
cmc
sbb
or
jae
movsl
repz
pop
shlb
xlat
insl
sti
ret
push
fdivl
aaa
das
xchg
jmp
aam
xchg
scas
or
mov
dec
jae
ss
inc
mov
cmp
and
int
cltd
xchg
clc
sbb
shlb
repz
loop
sti
jmp
fprem1
ds
mov
dec
mov
out
int
loop
bound
or
outsl
sbb
fisttpl
sarb
leave
add
rcrl
add
out
test
sub
data16
push
adcl
repz
pop
hlt
out
mov
inc
mov
add
pop
jmp
xlat
jmp
mov
xor
xorb
cmp
fistpll
xchg
xchg
ja
mov
popf
sti
dec
out
mov
cs
pop
sar
mov
adc
sub
aam
mov
addl
movb
xlat
sub
int3
jge
dec
aam
add
adc
and
jge
mov
mov
cs
dec
push
int
outsl
cmp
in
int3
gs
mov
addb
mov
add
fst
mov
stos
dec
xor
dec
pop
out
sbb
adc
push
movsl
ret
pop
int
and
sarb
jp
xchg
inc
and
sahf
movsl
andb
push
jecxz
popa
mov
mov
orl
xchg
mov
xchg
rolb
testb
add
add
cmc
add
cmc
call
push
ljmp
mov
rcrl
and
movsl
dec
loope
pushf
popa
rolb
shll
cmp
push
fnstsw
or
jne
add
cs
cltd
xchg
mov
lret
and
pop
cmpb
hlt
pop
xchg
xchg
ljmp
test
cmp
jb
sub
aad
xchg
dec
rcrb
adc
jb
jb
insb
shll
jg
jp
rcr
xlat
push
mov
pusha
mov
ds
inc
jne
push
rcr
pop
imull
mov
cmpsb
repnz
mov
pushf
ffreep
dec
out
sub
cli
call
mov
in
fs
fwait
in
lock
pop
lcall
lea
adc
lods
rcl
adc
adc
lret
pop
ja
pushf
and
fiadds
aas
xor
into
mov
ljmp
and
pop
bound
fs
push
addb
xchg
mov
addr16
push
and
mov
sub
sub
mov
lods
cwtl
push
out
push
sub
pop
mov
iret
pusha
cmpsl
add
mov
mov
pop
outsl
fstpl
xor
ret
cmp
mov
and
and
mov
imul
ss
pop
jecxz
add
cmc
mov
xor
mov
inc
push
imul
pusha
subb
adc
jecxz
iret
jb
push
sbb
inc
fcmovne
in
lock
inc
scas
ds
cli
cmp
mov
push
mov
dec
int3
std
cmp
dec
test
jmp
push
add
ficoml
je
je
clc
orb
rcrl
cwtl
inc
aam
jmp
fcmovnb
in
mov
mov
cmc
push
sub
out
mov
and
fcmovu
xchg
mov
arpl
leave
out
dec
js
push
mov
inc
adc
rorb
mov
repz
je
sub
dec
loopne
adc
std
fidivrs
sub
jae
in
mov
subl
push
lods
add
scas
push
mov
aas
cs
pusha
adc
sbb
push
insb
mov
mov
data16
out
lahf
sti
addb
mov
shll
dec
lods
adc
pop
lods
adc
mov
lcall
cmp
sbb
bound
mov
mov
adc
dec
xor
das
add
cmp
pop
lcall
mov
jecxz
int
inc
mov
inc
decb
xchg
pusha
push
mov
and
mov
fsubrl
daa
adc
loopne
fwait
add
imul
xor
mov
sub
push
mov
leave
lods
mov
xchg
std
aad
in
insb
stc
mov
pop
mov
ljmp
or
sub
shlb
je
add
and
pop
pushl
mov
test
lea
ljmp
xchg
andl
xchg
mov
jne
xor
add
iret
bound
scas
fsubl
fdivrs
adcb
daa
jbe
mov
ja
aaa
cwtl
cli
cmp
pop
das
push
sahf
jo
pushl
loope
cmpsl
mov
das
jnp
cltd
into
mov
inc
pop
mov
rcl
shlb
push
lret
mov
jp
repz
push
nop
std
subb
mov
pusha
lret
enter
stos
scas
ljmp
push
mov
or
jb
sysexit
mov
lds
push
xchg
lcall
cwtl
outsb
fwait
in
test
pop
cmc
in
mov
adc
and
pop
cmp
arpl
test
inc
loop
sub
lods
popf
mov
sub
outsb
xchg
inc
std
cmp
mov
xor
dec
test
push
sbb
cs
out
push
cmp
mov
mov
stos
bound
pusha
jne
mov
fchs
cmpsl
mov
dec
sbb
scas
arpl
xor
sbb
sahf
pushl
fs
mov
jne
jbe
shlb
cmc
mov
lea
daa
mov
ds
lcall
cmpsl
rorb
add
cmpsl
call
clc
leave
sub
and
xchg
das
data16
psllw
push
jle
pusha
mov
pop
push
xor
pop
rcrb
mov
mov
and
pop
jmp
jns
sbb
lcall
rcll
or
in
mov
dec
mov
inc
repz
xor
push
fwait
inc
or
adc
jns
or
cmp
push
xor
dec
lods
mov
adc
sub
push
popf
imul
mov
or
sub
cwtl
sbb
lds
mov
pop
mov
div
mov
mov
adc
push
aas
jp
xchg
mov
cmp
xchg
sub
adc
jecxz
aam
xor
inc
cmpsl
aaa
test
lds
push
mov
and
jmp
cmp
sbb
ret
adc
repnz
call
fidivl
adc
sbb
add
repnz
test
lcall
sarb
out
adc
sbb
fldenv
cmpsb
xchg
imul
addl
cmp
pop
xchg
and
rclb
cltd
inc
lahf
imul
mov
repz
sbb
pop
ret
adc
out
pop
jne
sbb
fstp
inc
mov
cmp
mov
scas
lahf
jnp
lock
push
add
add
stc
jl
adc
add
fistps
in
sub
rcrl
insb
out
shrb
fnsave
cmp
adc
daa
dec
jne
sub
out
fcoms
lret
aam
ss
pop
adc
daa
jae
mov
cld
dec
bswap
sub
std
lds
xchg
lock
repnz
jle
xlat
clc
mov
rclb
imul
mov
or
data16
loope
mov
mov
pop
aas
mov
push
xor
inc
adc
int3
inc
les
xchg
add
push
test
daa
mov
cltd
bound
test
stos
jge
ja
loopne
jl
inc
lods
jns
dec
sub
inc
lahf
inc
inc
inc
jg
cmpsb
cmp
mov
jmp
popf
dec
insb
dec
inc
in
ljmp
inc
in
fwait
out
data16
flds
and
push
xchg
sar
ret
or
mov
ret
sbb
or
int
and
sar
cltd
outsl
push
sub
pop
mov
xor
pop
xor
mov
fstpl
dec
mov
fcomps
pop
es
mov
lahf
rclb
lret
jp
fcomps
xor
shll
loope
outsl
xor
xor
mov
mov
in
fisttpll
fcomps
dec
mov
push
subl
mov
outsb
add
mov
push
mov
jae
jl
push
pop
push
and
and
push
ss
fimuls
cli
sbb
xor
xor
scas
mov
stos
jnp
fldenv
pop
cli
and
inc
push
inc
cmp
jl
xchg
inc
pop
pop
sahf
or
int
shrb
fmul
dec
mov
popa
add
pop
add
sbb
add
push
ds
jne
pop
add
subl
xchg
std
pusha
rorl
dec
out
jmp
add
inc
out
cmp
push
lods
push
mov
outsb
test
xor
push
cmp
and
das
mov
out
sbb
push
andl
push
popa
jl
xchg
gs
dec
jnp
sbb
inc
mov
mov
xor
push
adc
inc
mov
pop
cmp
rol
and
add
sub
push
hlt
mov
sar
in
popa
add
popf
into
jno
dec
mov
cmp
mov
adc
adc
mov
mov
stos
mov
les
pop
inc
jmp
mov
pusha
jge
lock
push
int
icebp
push
jmp
insl
movsb
jne
lods
push
fstpl
xchg
fisttps
pop
out
jge
mov
lret
shrb
add
and
dec
int3
add
sub
cmc
imul
sahf
mov
jbe
lods
inc
dec
ret
movsl
jl
bound
es
int
lret
or
test
lods
popa
cmpsl
ja
inc
test
hlt
xor
movb
mov
xchg
jbe
or
jl
fiadds
orl
insb
mov
rcr
int3
dec
movsl
mov
es
jo
out
pop
mov
jg
jmp
les
lock
rcl
stos
sbbb
nop
ffree
out
and
mov
outsb
sub
loopne
fadds
sarl
sbb
add
mov
xchg
adc
push
data16
adc
dec
mov
je
cli
adc
int3
cmp
jg
lahf
rcl
ficompl
mov
dec
mov
cld
les
mov
jp
lock
cmp
mov
insb
inc
shlb
lret
jne
mov
bound
push
and
xchg
jae
bound
call
or
cwtl
lods
clc
lea
icebp
lret
fwait
push
xchg
imul
repz
add
daa
xchg
rorl
mov
lock
jge
rcrb
adc
cmp
or
lahf
mov
pop
push
repnz
xor
pop
divl
inc
and
sbb
cmp
jmp
xchg
imul
inc
pop
fistpll
fdiv
dec
movsb
add
lods
mov
xor
out
mov
paddb
imul
imul
adc
dec
mov
ror
mov
jle
testl
jge
jb
icebp
mov
call
testl
data16
adc
fs
mov
or
addr16
mov
inc
jne
rolb
or
sbbb
mov
xor
or
lea
cmc
add
aaa
xorb
add
hlt
test
rolb
jmp
mov
add
sub
ss
sbb
xchg
jl
iret
jmp
jp
pop
push
fmull
rcl
in
and
mov
cmp
jns
sbb
jnp
ret
call
movsb
rorl
push
lds
sub
adc
push
mov
or
sbb
ret
dec
or
dec
push
into
inc
inc
fs
in
lret
shlb
aad
xchg
mov
sbb
repnz
pop
sarb
and
mov
mov
add
add
fbstp
mov
or
inc
add
mov
sbb
cwtl
pushf
jmp
and
or
xor
cmp
sbb
lahf
arpl
xor
test
adc
test
std
clc
sub
jecxz
arpl
aam
mov
fistl
movsb
jp
sub
out
fimuls
out
jb
inc
and
jge
jo
inc
sub
outsb
std
js
fldt
sbb
hlt
jle
sub
sbb
inc
in
das
cmp
add
aaa
xlat
push
jmp
mov
imul
outsl
iret
xor
mov
mov
mov
mov
mov
rcl
push
xor
fistpll
loop
fldl
add
mov
mov
icebp
faddp
push
shr
sbb
or
scas
pushf
add
inc
popa
bound
arpl
cltd
loop
fists
les
mov
xor
push
cmpsl
and
push
stos
stos
add
lods
inc
in
sub
mov
cmpsb
xchg
push
add
push
cld
repnz
pop
in
in
and
sbb
idivb
test
lret
mov
xor
fildl
or
jl
fldt
mov
jbe
gs
cli
dec
outsl
xchg
insl
and
nop
xor
pop
inc
mov
aaa
push
sti
push
pushf
jmp
push
sub
push
repz
insb
insb
dec
mov
aaa
xor
aad
test
in
fdivrl
call
mov
xor
daa
leave
sub
or
dec
xchg
pop
jae
test
pop
jl
out
sbb
out
int
popf
mov
sahf
adc
lods
pop
mov
and
sahf
test
xlat
cmc
fdivrl
pop
cmp
adc
jns
jg
cmp
adc
mov
xor
add
push
cli
jmp
movsl
test
call
sahf
jecxz
leave
ljmp
test
pop
addr16
jbe
or
pop
jae
pop
into
aam
call
mov
xchg
jl
or
call
mov
in
xchg
adc
sbb
sbb
fwait
xor
dec
pop
jnp
jns
push
xchg
lcall
pop
andl
inc
mov
jns
cmp
sahf
sti
jno
imul
rcl
negl
push
fildl
rorb
push
std
stos
arpl
mov
movl
sbb
xor
jp
outsl
xor
aaa
adc
es
pop
jl
insb
lods
pop
ficoms
stos
cwtl
nop
test
popa
adc
xchg
lea
cmpsb
mull
push
aaa
in
cmp
pop
cli
or
lret
adc
jecxz
cltd
xor
cltd
mov
xorl
cli
adc
lret
mov
insb
mov
data16
insb
fwait
aam
or
stc
mov
xor
mov
dec
ret
sub
xor
mov
adc
push
xor
aas
dec
dec
sub
ss
mov
adc
fwait
pop
jae
ja
sub
lock
mov
push
vpcmpgtb
and
testb
cmp
cmc
sbb
call
mov
and
dec
iret
gs
cltd
repz
sub
or
dec
push
xchg
leave
push
sub
testl
into
cli
lods
loop
pop
add
testl
out
jecxz
jl
push
push
mov
int3
push
divl
setae
imul
test
rcrl
mov
adc
jmp
pop
ret
inc
movsl
inc
adc
sbb
xor
adc
push
in
sti
dec
add
and
inc
jmp
xchg
xchg
ror
jp
adc
sar
push
movsl
adc
inc
ljmp
fadd
xor
out
adc
mov
xor
cld
fdivs
pop
sub
inc
cmp
stos
xchg
add
popa
cmpsb
sbbb
jo
fimuls
cmpsb
xchg
pop
scas
test
push
enter
xchg
inc
pop
mov
in
add
icebp
inc
loopne
sbb
jns
imul
les
add
sub
and
pop
xchg
dec
shl
imul
sub
jle
jns
push
xchg
and
and
jle
in
pop
cwtl
push
out
hlt
jns
fcmovb
leave
mov
cmp
lcall
add
ja
in
push
pop
roll
xchg
movsb
fdivrs
sub
mov
jae
push
and
ds
jge
sahf
rol
pop
fistl
cmp
dec
fdiv
mov
test
mov
stos
imul
aam
xchg
fidivrs
xchg
xchg
mov
cmp
lds
ds
mov
add
mov
cmp
cmp
pop
insl
out
into
rcl
rcrl
ss
ljmp
sbb
stos
jae
xor
xchg
push
inc
in
add
icebp
arpl
mov
xchg
inc
in
xchg
push
sub
lods
dec
xor
push
sub
mov
enter
mov
pushf
jno
sub
fcoms
imul
mov
cmpsb
push
fstpl
jecxz
mov
dec
mov
das
xlat
mov
mov
mov
jle
jbe
dec
popa
test
sub
or
jae
mov
pusha
mull
mov
rclb
cmpsl
and
daa
movsb
push
in
push
and
inc
cmp
or
enter
mov
ror
xchg
outsb
sahf
mov
sbb
push
push
xor
dec
or
fildll
inc
pop
leave
lods
sub
sarb
lea
mov
and
lret
lods
push
dec
push
dec
lea
scas
sub
add
das
xchg
pop
sbb
adc
sub
push
lods
sub
and
adc
fisubrs
into
mov
repz
and
loope
xchg
fwait
mov
lods
cmpsb
add
call
imul
out
and
adc
pop
ss
add
testl
adc
xchg
jno
pushl
jg
ljmp
movsb
dec
aaa
jmp
xor
dec
jmp
push
cmp
pop
gs
scas
inc
sahf
and
in
hlt
nop
push
incb
pop
mov
cld
inc
or
or
sbb
mov
ret
xchg
xchg
mov
cmpb
mov
cmpsl
or
adc
xor
ja
iret
cmp
lcall
and
fadds
or
in
sti
push
outsl
scas
imul
ret
rcll
adc
popa
xor
push
lds
lret
mov
das
loopne
cmpsb
push
hlt
insb
adc
mov
int3
arpl
in
and
cmp
cmpsl
and
and
hlt
mov
mov
fwait
mov
popa
fdivrs
shr
dec
imull
xchg
jb
scas
mov
pushf
decb
mov
and
mov
lret
push
movsb
ja
or
test
les
lret
cmp
jne
daa
cwtl
in
jge
xchg
cmp
dec
popf
or
xchg
jbe
mov
outsb
inc
test
inc
in
or
cld
adc
add
lea
add
hlt
and
repnz
mov
jecxz
test
mov
dec
or
jne
jge
xlat
pop
iret
fstl
sub
out
mov
jb,pn
pop
pop
jb
adc
mov
cmc
aas
pop
pop
mov
pusha
lock
inc
push
sbb
fsubrs
push
xchg
or
jae
adc
mov
cltd
ret
dec
nop
lret
jno
repnz
pop
mov
push
xchg
mov
inc
sahf
cld
mov
pop
bound
std
mov
and
pop
xchg
sbb
cmpsb
mov
repz
add
xchg
adc
push
xor
loope
imul
mov
das
icebp
xor
int
adc
lret
inc
test
sub
test
or
repnz
cmp
push
or
fcomip
cwtl
dec
inc
insl
test
jns
lds
add
inc
das
push
mov
add
adc
add
mov
pop
cmp
lock
xchg
xchg
mov
loop
pusha
lidtl
lcall
sahf
xchg
dec
adc
jl
xor
cmp
pop
sbb
sbb
rcrl
xor
mov
sahf
test
or
dec
sbb
or
pop
mov
mov
bound
mov
adcb
adc
inc
mov
push
jl
jmp
popf
rol
push
mov
hlt
enter
inc
popf
cmp
out
xorl
sti
pop
shll
xor
movsl
loop
cmp
dec
push
clc
or
and
mov
out
lret
loope
hlt
sar
or
dec
out
insb
mov
das
mov
fidivs
xchg
idivl
pop
jp
scas
pop
or
js
mov
jmp
xchg
cmp
push
ss
aas
rsm
adc
and
xor
ret
and
xor
aam
jp
add
inc
mov
mov
clc
sarb
mov
divb
ss
lds
and
lods
shll
mov
ds
cmp
and
adcb
sbb
call
inc
leave
nop
mov
cmpsb
pop
push
addr16
test
mov
sub
clc
dec
sub
xor
clc
enter
test
lock
lret
movsb
mov
xchg
adc
xchg
add
push
enter
push
outsb
fldcw
xchg
sub
in
mov
sbb
mov
scas
mov
idivb
insl
imul
insl
cmpb
ds
jmp
nop
push
and
xor
insb
mov
out
inc
test
mov
mov
fisttpl
notb
out
and
mov
pop
sub
icebp
pop
pop
out
mov
jg
jne
xor
flds
mov
xor
rorl
push
pop
test
insb
je
mov
push
in
sub
mull
jne
rolb
loopne
jne
jl
and
bound
and
rolb
mov
icebp
fnsave
mov
insl
push
mov
jmp
cltd
mov
inc
dec
data16
stc
lea
scas
ret
pop
sub
in
mov
adc
xchg
adc
mov
sub
shl
in
cmc
call
ret
mov
mov
xchg
rcll
es
and
movsl
mov
cwtl
add
lds
inc
xchg
js
pop
lds
out
pop
push
iret
or
idiv
mov
jno
movsb
out
repz
es
cmp
fdivr
add
adc
and
test
mov
bound
push
sub
jb
xor
add
addr16
sbb
es
aas
jb
roll
jnp
shlb
sahf
and
mov
xchg
and
push
mov
repz
xchg
xchg
ds
push
xchg
mov
push
and
mov
pop
pushl
into
add
xchg
rcrl
sub
mov
and
cmp
adc
test
scas
ljmp
js
mov
push
jno
imulb
sub
outsl
repz
roll
jp
fimuls
or
test
cmp
push
mov
cli
mov
mov
xchg
jne
mov
mov
loopne
dec
js
and
aad
mov
jo
ja
mov
pop
adc
mov
aaa
mov
pop
jae
mov
divl
cli
insl
mov
push
cli
mov
daa
popa
jle
sub
adc
insl
jmp
inc
repnz
data16
mov
inc
mov
pop
mov
dec
mov
shlb
orb
lods
add
xchg
arpl
cmp
cmp
add
data16
mov
mull
lock
inc
xchg
ds
faddl
mov
dec
pop
push
mov
loop
mov
mov
inc
push
jnp
jl
dec
lds
adc
movl
mov
out
xchg
jl
loope
or
out
pop
jg
or
js
insl
es
test
iret
call
xchg
mov
fbld
and
xor
fisubs
mov
lea
mov
and
sub
xlat
mov
jb
pop
xchg
pop
mov
sbb
sti
mov
ficoms
pop
outsl
jl
dec
lods
sbb
cltd
sbb
or
and
mov
push
push
test
pushf
in
xchg
mov
mov
mov
mov
bound
clc
lea
jp
mov
icebp
rcll
inc
mov
pop
xchg
in
pop
mov
jmp
add
push
mov
mov
test
xchg
pop
pop
pop
jg
dec
sub
adc
mov
es
pop
aaa
xor
lods
popa
pop
mov
out
sbb
test
shl
jmp
jmp
pop
prefetch
aad
insl
mov
sub
ljmp
jnp
aam
repnz
xchg
rcr
sbb
add
dec
fdivl
lods
test
mov
leave
ret
xor
mov
xchg
fucomi
cmp
sarl
dec
out
xchg
clc
jb
gs
push
or
cmpsb
sti
xor
mov
cli
test
nop
xor
push
adc
movsl
inc
movsl
and
loop
ficomps
and
xchg
in
mov
mov
imul
mov
in
xchg
mov
bound
int
gs
mov
xchg
sub
sbb
popa
mov
or
dec
popf
push
arpl
mov
mov
rolb
stos
ds
test
btrl
dec
pop
add
rcrl
out
push
xchg
lods
xchg
or
pop
mov
pop
xor
cmp
mov
push
cmp
daa
mov
rcrl
cmp
jnp
jmp
inc
sub
adcl
imull
mov
orb
nop
ja
lock
lcall
and
fwait
mov
push
jp
les
addr16
pusha
mov
xor
sbb
xchg
ret
sub
xchg
cmp
das
mov
xorl
push
inc
cld
pusha
xor
xor
mov
sbb
and
push
rorl
jne
dec
popf
mov
mov
inc
cmp
hlt
mov
pop
ja
mov
ds
gs
sbb
cmp
inc
sub
fnstsw
cltd
xor
mov
cs
out
jb
mov
adc
test
sbb
pusha
sbb
xlat
enter
add
out
and
sbb
or
mov
sub
les
movsb
xor
and
dec
leave
push
icebp
adc
fsts
mov
push
mov
xchg
scas
jb
cmpsb
cmp
sub
hlt
mov
cmp
imul
movsb
imul
icebp
call
sub
mov
jg
out
bt
dec
int3
ret
iret
fadds
sub
mov
cmp
mov
sbb
cmp
push
sub
sar
fimull
add
ss
mov
test
cmc
sti
jl
mov
add
sub
test
bound
pop
mov
into
shlb
mov
xchg
insb
push
and
shrl
cmc
mov
sub
xlat
cmp
aam
gs
sbb
jmp
mov
loop
jp
enter
jg
test
jl
xchg
push
jecxz
test
pop
xchg
aad
adcb
xor
inc
sarl
insl
repz
out
js
push
fsubl
mov
jno
sub
adc
push
mov
aad
inc
mulps
pop
jbe
sub
dec
dec
sbb
into
push
pushf
sbb
fdivl
jbe
scas
pushf
mov
outsl
mov
pcmpeqb
push
nop
scas
jge
outsl
adc
mov
mov
pusha
pop
jo
scas
xchg
add
pop
daa
cmp
add
xchg
int
lret
arpl
js
push
or
pop
jecxz
mov
fsubrs
dec
nop
push
subl
push
loope
mov
sub
icebp
and
popa
mov
repz
test
sbb
inc
jge
mov
dec
dec
es
mov
mov
mov
or
leave
testl
outsl
aaa
jecxz
sbbb
das
fsubrs
jecxz
jg
cwtl
outsb
mov
lret
push
and
pop
or
test
xchg
rorl
fldcw
dec
sub
sub
scas
leave
sbbl
jae
in
inc
sbb
mov
ljmp
inc
inc
pop
jnp
repz
dec
lret
fistps
insl
imul
sub
movsl
lods
mov
movsb
cli
es
and
pushf
fidivrl
jo
sbb
imul
dec
xchg
pop
leave
je
sahf
stos
push
push
pop
pop
outsl
or
pushf
pop
add
leave
mov
jno
repz
in
mov
outsb
sub
cmc
xchg
cmp
adcl
movsl
add
stos
inc
push
pop
adc
push
sbb
imul
outsl
ret
cmpsl
and
jle
ljmp
nop
or
pop
xor
xor
push
mov
push
pusha
mov
cmp
addb
cmp
jmp
inc
stos
mov
icebp
xchg
mov
mov
imul
stos
jae
jae
mov
inc
mov
fnstsw
addr16
mov
aad
inc
sbb
xchg
leave
cld
loope
movb
insl
lds
nop
aaa
fwait
xchg
jae
bound
xchg
movsb
cmp
cmp
in
jne
cmp
pop
out
movsl
adc
ljmp
bound
sbb
daa
andl
or
hlt
pop
xor
xchg
cmpsb
sub
sbb
or
push
xchg
mov
subl
jp
dec
push
ret
and
dec
mov
dec
cltd
xchg
cmp
xlat
inc
out
mull
into
or
xchg
lret
push
xchg
je
xor
scas
out
jle
jo
mov
std
xchg
popl
xchg
es
ret
push
sub
sarl
ret
negb
adc
popa
xor
mov
inc
push
xchg
jo
inc
int
dec
rorl
sub
leave
lcall
ds
xor
hlt
pop
fildl
jmp
fcoml
divl
adc
in
jl
xchg
out
aad
cld
add
push
and
es
jle
ds
pop
sbb
push
arpl
mov
sub
hlt
pop
mov
pop
xchg
addl
comiss
test
rcr
inc
adc
mov
sbb
mov
cmp
lods
push
out
scas
mov
call
clc
scas
xchg
push
or
jl
adc
rorl
lock
not
repz
aam
jne
bound
mov
push
insb
jnp
in
adc
adc
aas
sarb
or
loope
lret
in
xor
ret
cmp
or
mov
das
shrl
ja
sbb
sbb
xor
and
cs
dec
cmp
and
mov
push
cmp
movsb
add
cmpsl
mov
mov
ljmp
std
xchg
sbb
negl
mov
push
inc
pop
mov
roll
mov
sub
adc
bound
xor
je
lcall
test
push
mov
mov
in
pop
pop
cmp
int
cmp
roll
andl
nop
sbbb
pop
dec
mov
in
mov
cmp
imul
xor
int
leave
rcll
dec
xchg
aad
dec
insl
mov
cli
xchg
in
jne
xchg
inc
js
fwait
push
fimull
repnz
mov
mov
add
push
test
ljmp
sahf
jne
xchg
mov
mov
sbb
push
popa
js
out
xchg
rcrl
sarl
xchg
sub
or
repnz
scas
sbb
xor
xor
jnp
nop
dec
enter
clc
mov
jo
fsubs
inc
sub
jno
stos
push
push
push
jnp
test
xchg
push
mov
data16
jl
fs
loop
adc
push
int3
xor
adc
leave
bound
mov
nop
xchg
sbb
rcr
icebp
dec
ja
sahf
xor
and
fsubrs
out
movsl
mov
loopne
test
es
push
adcb
fistl
push
jb
cmp
push
add
dec
mov
sbb
in
mov
or
imul
rolb
pop
cmp
and
push
fbstp
dec
mov
push
fbld
adc
das
inc
fsubr
rolb
mov
testl
add
fiadds
xor
xchg
push
in
sbbb
rol
int3
pop
or
and
lahf
pop
jno
dec
sbb
jns
inc
push
test
inc
lret
inc
stc
pop
jmp
jo,pn
adc
add
insb
pusha
lods
repnz
adcb
lods
jmp
dec
and
push
rcrb
xlat
push
repz
dec
jno
into
push
movsb
call
test
test
in
mov
repz
jg
cvtps2pd
bound
sub
in
add
scas
insb
add
out
xchg
jecxz
jecxz
add
push
into
fistpl
sahf
test
pop
add
rorl
push
orb
fmuls
pop
inc
or
inc
std
stc
imul
fsub
mov
lret
insl
jno
add
xor
lcall
in
xchg
loop
jge
fidivl
xchg
pushf
inc
ja
adc
adc
xor
mov
ds
movsl
loopne
mov
int
icebp
mov
lret
outsb
fcomps
popa
cmp
lret
lock
xchg
icebp
dec
adc
sbb
adc
sbb
and
mov
fidivs
fisubrs
dec
adc
into
insw
adc
nop
push
or
cwtl
pop
push
insl
sbb
mov
addb
dec
push
jmp
adcb
into
push
xchg
out
mov
xor
ret
sbb
mov
das
cmp
outsl
push
lea
popa
xor
push
inc
sub
test
xor
out
pop
sub
clc
push
pop
pop
cmpsl
xchg
jg
lods
inc
in
or
jmp
insl
ljmp
loop
dec
cmp
pushf
inc
sahf
cmp
sbb
sbbl
andl
pop
adc
or
lahf
jmp
scas
int
push
cmp
repz
sub
and
mov
xchg
sub
dec
sub
int3
outsl
out
mov
xor
shll
ret
xchg
push
aam
fildl
dec
jle
rcrl
xor
dec
shl
icebp
daa
daa
je
lods
es
hlt
jae
sar
lahf
add
roll
mov
nop
lcall
and
int
fucomp
mov
test
or
popf
loopne
stos
popa
add
data16
in
dec
dec
in
cli
cltd
pop
mov
in
jae
jne
and
cmp
dec
in
loopne
mov
and
lcall
fwait
adc
pop
xor
popf
leave
pop
mov
addr16
mov
out
or
mov
adc
sahf
jg
inc
adc
or
mov
movsl
incb
cmp
mov
xchg
into
sbb
mov
mov
cmp
leave
test
ffree
xchg
mov
push
mov
inc
aam
push
mov
jecxz
loope
cmpsl
push
mov
jle
dec
rclb
push
xor
sahf
fwait
mov
jo
negb
or
in
bound
negl
xchg
lods
inc
lds
mov
jno
enter
push
lods
pusha
addr16
aaa
call
mov
mov
leave
lahf
mov
inc
add
sar
es
push
dec
mov
mov
xchg
jg
scas
or
push
test
jle
push
cmp
add
bnd
and
out
cmp
and
aad
mov
cmp
xlat
or
ljmp
sti
and
in
mov
andb
das
pop
adc
ja
fbld
js
mov
sbb
mov
push
xorb
scas
sbb
vphsubdq
insl
mov
dec
jb
adc
dec
jo
les
push
lret
xor
popa
jae
sub
jae
decl
ja
loope
leave
inc
push
lea
mov
fstpt
hlt
xchg
jne
add
popa
fwait
ret
pop
stos
mov
add
aaa
dec
arpl
mov
mov
jno
cli
sbb
inc
pop
frstor
jmp
ljmp
cmp
cmpsl
movsb
movsl
enter
pushf
mov
jecxz
lods
mov
gs
loop
in
inc
and
cs
popfw
push
mov
outsb
mov
push
ficoms
in
adc
js
stos
aam
sub
into
cld
dec
cmp
jbe
lock
andl
aaa
push
xchg
movsb
xchg
mov
lods
popl
rcrb
aad
or
cld
pushf
aam
aad
mov
into
cs
pop
fmulp
fildll
test
lahf
adc
lds
popa
mov
inc
sub
push
stos
jmp
sbb
stc
sbb
add
cmp
xchg
lret
andl
jns
xlat
mov
int
std
shr
negb
dec
ret
and
shll
pop
sbb
pusha
cli
sbb
sahf
pop
lahf
dec
das
cmp
lods
add
test
xlat
or
pop
jl
and
add
or
notl
rcll
pop
in
adc
gs
cmpsl
adc
pop
icebp
sarl
ret
and
lods
push
cmp
xor
add
pop
fmul
out
je
xchg
sbb
clc
pop
and
es
xchg
and
jbe
sbb
push
mov
mov
push
lcall
shrb
sub
pop
nop
ret
test
outsl
inc
jno
jg
jbe
idiv
pop
outsl
cmc
lret
xorb
mov
inc
pop
mov
lods
faddl
xor
add
out
cmp
or
jle
pop
jne
push
clc
cltd
loopne
adc
cmpsl
les
fucomip
pop
ja
jg
shrb
sub
cmpsl
test
mov
adc
fldt
clc
insl
adc
mov
and
and
xor
pushl
mov
push
mov
xor
push
dec
jae
pusha
sbb
scas
mov
pusha
cmp
shlb
enter
jg
jns
mov
xchg
fwait
cwtl
mov
dec
lock
int
xchg
mov
lock
movsb
sbb
pop
mov
push
popf
sbb
lret
cmp
jb
ja
pushl
mov
sbb
and
jle
popf
dec
mov
aaa
mov
push
xchg
mov
shrb
imulb
cmc
popf
cmp
add
add
cmc
loopne
icebp
pop
addr16
scas
cmp
in
stos
rcrb
jecxz
sbb
cld
mov
xor
mov
push
int
and
ret
mov
mov
ja
je
mov
testl
jne
aam
shl
out
jo
xchg
idivl
cs
mov
iret
popf
xchg
lret
inc
fdivrl
enter
nop
fmull
orb
js
pushf
stc
adc
stc
test
shll
mov
stos
jle
movsb
repnz
and
push
add
jl
pop
inc
pop
out
cmp
shrb
insl
cmp
inc
addr16
lret
aam
sbb
adc
xchg
out
movsl
aam
pop
test
dec
int
or
imulb
push
leave
jnp
push
into
ljmp
and
xchg
cli
ret
in
cmp
sbb
xor
ljmp
lret
pop
and
out
push
leave
inc
lret
scas
cmp
lods
in
pop
xchg
lds
jg
andl
out
cmp
xor
mov
loopne
adc
icebp
lea
xor
pop
sub
mov
mov
inc
cmpsb
xchg
jmp
sub
lahf
fcmovne
add
lods
sbb
rcrl
xor
xlat
enter
stc
mov
push
dec
test
xchg
das
repz
mov
call
xor
xchg
lea
test
rcll
and
loope
or
call
and
sbb
inc
jnp
lret
push
or
or
mov
ja
inc
pusha
daa
aaa
loope
cmc
push
add
fnstsw
movb
sub
lea
xor
jns
push
aam
insb
imul
xor
cltd
ljmp
fdivs
bnd
push
popf
xlat
in
cmpsl
sbb
pop
ret
int3
cmpsl
cmc
pop
xchg
cs
test
mov
cmpsl
lods
jne
xchg
cld
and
fld
cmp
std
push
gs
sbb
cmp
xchg
pop
mov
int3
mov
fucomp
pop
aam
xchg
data16
mov
imul
adc
lahf
jnp
testl
ret
and
bnd
mov
push
aam
or
bound
jbe
data16
mov
popl
cmp
push
dec
fnstcw
push
jno
adc
idivb
push
mov
sbb
jecxz
ss
and
mov
mov
ret
xchg
mov
jnp
out
pop
mov
aas
pop
aam
mov
xchg
jo
xchg
jbe
push
pop
jge
js
mov
stos
jns
push
xchg
aas
in
cmp
cs
pop
jge
stos
push
push
decb
cli
inc
iret
sub
lock
pop
dec
sbbl
and
mov
jge
gs
hlt
adcb
cmp
adc
rcrl
lcall
jbe
sbb
sbb
stos
dec
push
fnstenv
ja
ljmp
mov
jmp
mov
jno
sub
ret
lock
jae
mov
xor
shl
xlat
bound
inc
bound
lcall
inc
cmp
enter
sbb
sbb
inc
pop
lock
adc
xchg
cmp
sti
clc
sub
repz
dec
push
pop
jecxz
cli
sti
mov
sub
mov
fistpll
mov
jo
add
jecxz
mov
setne
inc
or
scas
icebp
movsl
rcr
lea
xchg
out
cmp
notl
iret
mov
psrlq
sub
cmp
inc
jno
lret
in
inc
mov
xchg
push
or
or
push
cmp
jecxz
push
jmp
push
mov
iret
push
nop
test
jbe
push
or
adc
dec
jle
pop
mov
and
mov
push
mov
lods
into
out
fwait
mov
mov
shrl
cmp
adc
adcl
dec
js
add
inc
add
inc
sub
mov
and
xchg
dec
xchg
stos
jno
out
push
push
lret
jb
mov
jecxz
fwait
gs
xchg
xchg
test
sti
xor
in
or
cli
dec
in
xchg
xor
push
dec
gs
or
mov
pop
out
pop
subl
in
fs
jl
sbb
mov
lock
xchg
push
inc
enter
dec
sub
or
scas
cmpsb
dec
jno
mov
mov
or
jne
imull
subb
cmp
les
lods
movsb
sbb
mov
cmp
pop
dec
mov
push
push
jecxz
stc
ret
pop
loopne
aad
in
lret
mov
pop
cld
lea
mov
imulb
cld
insl
arpl
movsb
xor
push
cmc
jge
add
adc
cmp
or
jbe
mov
sub
nop
call
jae
push
mov
xchg
mov
daa
jbe
jmp
nop
addr16
and
loop
mov
test
loopne
out
daa
sahf
stc
add
pop
push
mov
inc
cmpsb
sbb
add
mov
inc
add
pop
movl
or
arpl
xchg
mov
cmp
std
and
or
ficoms
xor
sub
xchg
loope
and
inc
push
pop
inc
or
mov
test
fs
mov
adc
mov
push
mov
jae
dec
sbb
aad
lods
enter
aam
aad
xor
mov
call
sub
std
add
jbe
adc
xor
dec
hlt
adc
push
mov
xchg
cmp
push
je
loope
int
push
add
xor
sbb
in
inc
call
and
jo
mov
cmp
mov
mov
xor
jne
xchg
pop
jle
into
xor
jp
mov
enter
sbb
mov
mov
inc
jb
loope
pop
xchg
push
fxch
mov
lods
outsl
adc
in
mov
jne
xor
adc
bound
out
aam
cmpsl
jbe
repnz
inc
out
push
imull
add
xlat
push
sbb
inc
fwait
and
lea
sbb
popa
daa
jp
ja
mov
or
out
cmp
arpl
lods
js
jns
mov
incb
sarb
or
ficomps
cld
jo
inc
pushf
add
jmp
mov
fcoml
sar
in
addb
lds
ja
andl
movsb
aad
movsl
pop
loop
js
inc
in
cmp
dec
push
cltd
push
mov
mov
push
cwtl
imul
mov
xchg
jge
push
push
push
push
sub
xchg
push
in
jp
pop
js
dec
repz
ja
xor
pushf
loopne
mov
out
lds
stc
jnp
mov
fdivs
adc
jb
pushf
add
mov
xor
or
fnstsw
lea
inc
adc
jp
push
shll
sub
div
int
and
sub
ficompl
sti
xchg
sarl
mov
movups
aas
push
mov
mov
mov
add
pop
scas
shlb
jg
mov
jl
clc
imul
adc
jg
adc
jl
lahf
lret
cltd
push
sbb
pop
push
xor
js
popf
adcl
adc
push
into
jnp
mov
xchg
pop
jne
mov
mov
ljmp
mov
or
sbb
xchg
fs
sbb
pusha
into
cmpsb
int
aaa
add
mov
jl
jo
or
mov
scas
xchg
mov
xchg
loopne
dec
cwtl
roll
xlat
sub
add
mov
push
sarl
pop
or
ljmp
xor
lcall
adc
mov
repnz
outsb
sub
inc
jno
jg
test
or
jecxz
adcb
pop
mov
in
jl
mov
cmpb
cwtl
insb
insl
xchg
mov
push
lahf
icebp
cwtl
sub
pop
pusha
or
leave
mov
pop
fisubrl
stos
insl
jp
mov
xchg
lods
ds
lods
aad
jg
cmpsb
in
mov
cwtl
cmp
das
and
pop
xor
popf
mov
adcb
es
adcl
outsb
test
mov
adcb
gs
jp
push
mov
leave
adc
mov
nop
jbe
loop
push
mov
push
mov
pop
inc
mov
cwtl
and
mov
inc
stos
sbb
or
idiv
inc
cmpsb
xchg
ret
fcomp
stos
push
fscale
dec
mov
fstps
mov
and
test
fstpt
xorl
mov
pop
and
jmp
push
mov
cmp
lcall
stc
repnz
test
out
ds
jl
lock
jl
sbb
mov
adc
in
or
pop
jge
ds
lea
mov
pop
pusha
lods
popl
mov
lret
dec
xchg
cmp
mov
iret
and
mov
xorb
and
or
in
jnp
loop
mov
adc
aam
nop
inc
adc
aas
mov
cld
push
hlt
ds
inc
mov
mov
lcall
int3
inc
mov
pop
es
mov
pushf
dec
call
ficoms
sub
fldenv
xlat
pop
movsb
std
lea
jmp
or
mov
cmp
and
mov
ljmp
or
arpl
inc
adc
mov
xchg
loope
enter
idivb
and
push
xor
cltd
jl
jecxz
xor
mov
pusha
enter
imul
lret
sti
imul
scas
sbb
aam
scas
and
enter
mov
jae
jne
jge
mov
mov
das
mov
div
icebp
in
inc
aaa
add
addr16
lret
clc
repz
movsl
mov
dec
cltd
adc
mov
and
cmpl
aam
dec
inc
adc
cwtl
adc
and
mov
sbb
filds
fstps
push
lea
cmp
into
adcb
sar
movsb
add
es
cmp
fwait
push
xor
rcl
stos
xor
loopne
bound
fnop
testl
mov
mov
fsubs
pop
sub
mov
mov
cmp
mov
shl
out
mov
popa
sub
ljmp
mov
repz
adc
shl
jle
xchg
add
push
stos
add
jmp
mov
jge
xchg
sub
mov
imul
fimull
push
aam
sbb
mov
cli
pop
stc
sbb
xchg
mov
add
sbb
subl
add
jg
stc
out
stos
outsl
shrb
pop
shlb
jge
pop
mov
cwtl
cmpsb
lret
and
in
mov
stos
insl
cmp
add
sahf
dec
fcomi
mov
xor
insl
jae
and
daa
test
cmp
data16
stos
or
loopne
dec
jno
lock
or
bound
movsl
notl
pop
xor
sub
jo
and
add
imull
cmp
rorb
pop
in
mov
xchg
in
fdivl
xor
add
fcoms
sbb
filds
outsl
ret
repz
mov
mov
ficoms
inc
mov
and
add
outsb
jb
jne
lods
std
fsts
jmp
imul
shlb
inc
lds
dec
pop
mov
jns
push
xor
ret
lcall
shl
rcr
push
mov
jecxz
mov
cld
or
push
push
cmp
rcll
mov
jnp
and
mov
cli
fwait
inc
pop
jl
lods
mov
aad
push
stc
out
or
or
sub
jge
mov
mov
stc
adc
loopne
xchg
loopne
sbb
cmc
outsl
mov
into
loope
cwtl
xor
mov
inc
jle
in
and
or
mov
fisttpl
add
add
outsb
lret
test
mov
loop
jmp
mulb
inc
pop
dec
sub
data16
push
inc
cltd
pop
or
jge
xchg
aad
sub
pop
fsqrt
test
add
mov
pushf
sub
mov
mov
mov
lods
mov
jbe
add
lds
fdivrs
stos
mov
push
aad
inc
call
push
fnstcw
push
fs
fwait
pusha
test
outsl
leave
daa
inc
cmpsl
cmp
sub
push
jnp
fistpll
jp
fbld
loop
sub
add
push
hlt
pop
cmc
cmc
xlat
dec
cmpsl
pushf
clc
push
mov
gs
into
aas
mov
cmpsb
fstpt
mov
jge
in
jge
loopne
test
add
setp
inc
mov
sbb
pop
jae
cmc
out
push
or
fldt
mov
sub
orb
mov
xchg
mov
out
fsts
mov
jl
cmp
fstp
fnstsw
pusha
popf
mov
dec
ret
mov
scas
and
roll
imul
mov
push
enter
imul
sti
pop
hlt
push
dec
lock
cmp
or
rorb
push
pop
hlt
pop
jne
jne
mov
inc
mov
jmp
test
icebp
cmp
fildl
dec
mov
inc
sub
in
dec
repnz
daa
mov
dec
ret
sub
mov
push
jecxz
or
shlb
ret
pop
xor
bound
xchg
repz
mov
test
or
fmull
push
dec
push
incl
int
in
sub
jbe
lahf
fildll
hlt
arpl
jp
push
inc
push
mov
adc
mov
gs
shlb
cwtl
lods
repz
mov
inc
sub
lret
sub
push
lods
iret
mov
adc
pop
adcl
jns
ljmp
xchg
dec
out
icebp
hlt
shl
mov
es
test
sbb
sub
rcll
pusha
sbb
sbb
jmp
rcl
ss
out
push
pushf
rclb
mov
into
mov
rorb
je
stc
ja
mov
mov
sbb
fwait
lea
scas
dec
sbb
xchg
xchg
shlb
add
sahf
mov
pop
cmpsb
insl
rcrl
or
mov
lcall
push
jb
iret
inc
pop
jmp
lea
and
imul
test
outsb
ss
sti
and
mov
inc
data16
and
aam
es
aad
sbb
addb
out
push
test
data16
push
gs
stos
xchg
out
in
pop
jne
cmp
sub
push
mov
std
cmp
jl
push
mov
stc
inc
cwtl
out
pop
and
repz
pop
sub
and
je
and
mov
cmp
loopne
gs
adc
adc
push
sub
in
jno
mov
push
or
notb
mov
mov
imul
ret
leave
dec
cld
jns
sahf
jle
loopne
adc
mov
xor
sbb
movsb
or
add
xor
xlat
or
data16
jbe
and
adc
hlt
orl
adc
dec
icebp
jne
jmp
dec
add
cli
mov
sub
cwtl
jbe
pop
adc
or
pop
cltd
pop
add
and
sahf
mov
int3
in
cmp
into
in
frstor
hlt
rcll
in
roll
inc
enter
mov
adc
xor
sbb
jno
hlt
fsubrp
xor
jbe
adc
push
nop
xchg
mov
hlt
sub
aaa
pop
sahf
lret
and
push
dec
loop
cltd
outsb
sbbl
in
cli
out
int
dec
mov
add
addr16
ret
clc
jne
and
push
and
pop
in
dec
adc
inc
dec
enter
mov
pop
sti
icebp
cmpsb
mov
cmp
mov
test
fiaddl
and
pop
push
inc
mov
ljmp
jne
xchg
push
push
scas
clc
fisubrl
cwtl
loopne
adc
sbbb
inc
jbe
stos
cld
mov
das
imul
pusha
add
mov
sbb
leave
pop
or
fmul
sbb
es
mov
pop
dec
stos
mov
icebp
push
int
out
outsb
sbb
in
mov
repz
sub
daa
push
cltd
mov
mov
push
lods
ja
and
sahf
inc
mov
lret
sub
jmp
push
sub
xchg
push
mov
push
sub
lods
aaa
dec
stc
or
push
jmp
xor
mov
decl
pop
imul
mov
mov
loop
mov
jno
xor
add
shrl
imul
mov
popa
and
in
mov
movsb
test
shlb
dec
dec
insb
xchg
xorb
std
pop
and
mov
cmp
dec
ret
cmp
adc
cltd
into
inc
je
mov
xor
ffreep
or
stos
mov
xor
clc
inc
icebp
sbb
sub
add
rorb
enter
daa
and
leave
jo
fsubs
mov
loopne
sbb
adc
mov
jnp
lock
jle
and
xor
jmp
mov
push
jne
pop
push
sti
in
into
and
cmpsb
scas
jmp
add
push
outsl
pop
adc
mov
pop
mov
cmp
divb
pop
push
arpl
mov
mov
adc
xchg
push
pop
mov
xchg
pop
hlt
or
mov
xchg
add
mov
stos
xor
int
rcrb
test
mov
push
lods
or
jmp
test
orb
jbe
fs
inc
adc
test
mov
mov
test
sub
lahf
int3
pop
and
outsb
dec
cwtl
jns
mov
adc
jns
call
and
loope
jne
cmc
mov
and
mov
daa
add
repz
cmpsb
push
pop
mov
mov
or
push
icebp
or
test
in
fsubrs
sti
xchg
jae
stc
mov
fstpt
add
jns
imulb
xchg
cli
jae
inc
ja
sub
mov
or
daa
xchg
jecxz
cwtl
mov
jae
test
xor
xchg
jnp
stos
or
cld
add
xchg
movsl
sub
inc
in
cwtl
mov
add
mov
inc
dec
js
je
sub
jns
mov
imul
rclb
cld
imulb
test
or
fisttpll
pop
xor
push
pusha
in
movsb
push
push
sub
sbb
dec
popf
dec
dec
mov
aad
je
add
or
addr16
add
xchg
testl
or
jecxz
repz
push
cltd
js
xchg
pushf
andb
repnz
flds
adc
mov
xorl
mov
cmp
xor
stos
fcoml
inc
jb
pop
inc
stos
je
pop
mov
inc
xchg
lds
push
testb
push
adc
mov
lcall
imul
int3
pushf
sbb
std
sbb
stc
push
dec
inc
test
mov
mov
mov
push
mov
adc
shll
sub
adc
sub
hlt
push
test
icebp
or
fs
fmuls
cmc
sub
jecxz
add
xor
xor
xchg
mov
cltd
jge
add
sbbl
daa
test
pop
arpl
xlat
mov
mov
aaa
add
les
in
cmp
dec
or
lds
aam
mov
inc
jl
sub
inc
lahf
pop
cltd
aad
xchg
les
cmp
test
fstps
pushf
cmp
bound
inc
jle
jp
les
jnp
pop
popf
xchg
cltd
fstp
lods
sbb
cmovbe
ja
jecxz
mov
mov
ret
or
jae
push
ljmp
les
push
jmp
inc
nop
lahf
out
cmpsb
out
xchg
shl
cmp
movsb
add
mov
or
or
inc
jnp
and
mov
mov
insl
mov
pop
or
xor
mov
jb
stc
dec
push
test
mov
stc
data16
sub
imull
enter
fsubs
sbb
xor
insl
pop
clc
jb
enter
loope
das
mov
or
dec
mov
test
pop
movq
sbb
js
or
cmp
clc
lret
mov
das
pop
ss
jno
adc
jne
mov
fcoms
xchg
and
pop
dec
fcomp
adc
adc
adc
inc
push
xorb
call
jmp
fstl
dec
mov
movsb
jne
fists
enter
out
leave
outsb
aam
pop
jno
add
or
ja
out
inc
neg
add
loope
cmc
mov
cmpsb
std
insl
movsb
jle
push
pop
mov
jne
adc
push
arpl
xchg
arpl
xchg
stos
lea
xlat
or
jl
inc
ljmp
movd
dec
aam
push
dec
les
jns
dec
stos
arpl
jmp
pop
std
sub
or
jns
stos
pop
or
xchg
push
pop
pusha
pop
aaa
stc
push
out
fs
mov
pop
xor
xlat
cmc
in
lret
test
push
jne
sbb
scas
bnd
mov
sbb
fldt
xor
push
sub
fdivl
cs
js
dec
lret
scas
push
repz
and
mov
add
sbb
and
push
movsl
xchg
dec
pop
movb
lret
push
pop
and
cmp
sub
clc
jle
dec
in
mov
loopne
test
cmp
jo
lret
sarl
and
lcall
mov
ret
xor
ldmxcsr
mov
mov
jg
rcll
repnz
mov
add
inc
add
sub
cmpsl
push
xchg
ret
ret
lcall
mov
fildll
shrl
arpl
mov
inc
inc
push
nop
xor
cmp
cmc
fdivr
cltd
sti
fstpl
jmp
scas
loop
loopne
out
dec
rorl
sbb
sub
pop
ljmp
call
nop
shrb
stos
cmp
and
or
pop
in
cs
mov
mov
dec
sti
xor
int3
lcall
adc
mov
mov
imull
jl
aam
ret
adc
mov
push
pop
fsubrl
xor
shlb
inc
cmpsb
dec
xchg
inc
xchg
jae
sbb
movsl
lret
or
ss
pushf
push
gs
push
jecxz
xor
inc
test
mov
mov
leave
sti
push
mov
mov
jmp
js
fnsave
loop
xor
movb
sahf
dec
out
inc
insb
stc
shrl
leave
jmp
mov
je
inc
jp
jns
jge
ret
mov
pop
cmp
dec
fsubrs
and
imul
xchg
xorb
push
and
push
mov
stos
inc
xchg
adc
test
and
ficompl
inc
jmp
test
loopne
xchg
rcl
repnz
inc
cmovp
in
add
enter
js
popa
ror
push
scas
jnp
inc
add
out
adc
pop
lahf
xchg
inc
xlat
in
and
push
mulb
shlb
xchg
adc
mov
push
lcall
dec
popa
xchg
insb
add
lods
xchg
rcrb
push
cld
jmp
movb
shll
or
and
insb
notl
ja
push
mov
outsl
fmul
ja
xlat
inc
dec
sub
scas
ss
insb
and
ljmp
mov
and
jns
cmp
cmpsl
aam
mov
sub
loop
and
rcr
jno
jl
jne
and
aad
sbb
enter
push
dec
andb
pop
inc
scas
push
push
pushf
clc
in
sub
lock
adcl
xchg
dec
lret
cmc
lahf
scas
mov
sbb
pushf
jbe
inc
xor
mov
setle
xchg
push
pop
int
rcrb
fmuls
out
out
js
or
and
sub
cltd
js
bound
pop
fadds
jl
mov
jnp
fistpll
test
bswap
dec
testl
lds
test
data16
out
jle
fbld
fldcw
adc
xor
int3
dec
xchg
fsubrl
push
mov
outsw
mov
sbb
lea
mov
fdivs
xchg
xor
inc
out
push
and
nop
sbb
add
inc
pop
sbb
test
cmp
test
xchg
ret
fsubs
imul
out
mov
jmp
das
cltd
and
jg
enter
notb
xchg
dec
shlb
insb
imul
mov
fdivrl
out
sub
or
repz
pop
mov
ret
stos
mov
scas
sub
outsl
fs
inc
and
jg
cwtl
mov
or
loopne
sub
loopne
add
fstl
pop
pop
clc
movb
pop
mov
inc
daa
cmpsl
movsb
pop
xchg
mov
mov
vpsubb
mov
sub
cmc
pop
shl
add
insb
mov
test
adc
xchg
imul
pop
mov
xchg
jecxz
and
cmpsb
dec
imul
inc
std
or
call
fldt
adc
lcall
sbb
out
add
idivl
pop
xor
inc
inc
add
sti
nop
or
fsubrl
insl
push
call
xchg
int
cmpsb
cltd
jbe
xor
add
pop
jecxz
pop
test
xor
dec
fmull
mov
xor
hlt
cmp
mov
dec
test
mov
inc
aas
and
dec
xor
adc
aam
and
sub
jbe
aas
xchg
js
rcr
scas
lcall
mov
cmp
jne
sbb
jo
xlat
mov
inc
call
imul
jmp
mov
div
or
fistl
and
jmp
in
lods
inc
mov
ret
dec
add
pop
and
stos
shlb
sub
ret
fdivrs
scas
arpl
xchg
mov
rcr
mov
push
or
xchg
cmp
cmp
xchg
nop
popa
jle
ficoml
and
cmpsl
jns
lcall
or
data16
lret
flds
dec
adc
mov
or
mov
cltd
push
out
sbb
pop
dec
sahf
xchg
sbb
mov
test
shl
rcll
jl
sbb
cwtl
pushf
sarl
pop
lcall
mov
idivb
or
cmp
sub
sbb
push
jnp
jecxz
and
aam
je
mull
cs
and
test
and
sbb
imul
into
addr16
call
xor
pop
jl
mov
addb
mov
mov
dec
addr16
push
scas
mov
sar
pop
bts
out
mov
or
mov
jne
pop
in
xlat
addr16
sub
cmp
mov
pop
sub
push
cli
inc
pop
jb
lcall
inc
lret
imul
or
enter
push
pop
adc
jno
dec
and
jle
xor
sub
mov
out
je
lods
push
out
cmp
aaa
mov
or
testb
stos
cld
mov
out
xchg
pushf
xchg
xchg
lahf
xchg
pop
add
fdivrs
das
les
clc
pop
sbb
pop
add
jmp
jmp
jns
shlb
inc
inc
pop
sub
cmp
xchg
dec
test
push
jne
cwtl
xor
mov
sbbb
jl
push
inc
pop
jne
xchg
fdivr
cmp
pop
mov
mov
cmp
xor
sub
cmp
sbb
inc
daa
fbstp
es
aad
pop
add
mov
fldt
int3
andl
insl
fwait
scas
call
xchg
dec
gs
push
jno
cli
sti
xchg
and
rolb
ret
sbbl
jg
int
xor
mov
add
push
loope
mov
xlat
inc
or
sti
fstpl
jbe
int3
ss
data16
inc
xchg
sbb
cs
int
sub
outsl
js
or
mov
mov
jne
xchg
xchg
and
lcall
jae
jmp
pop
sbb
addr16
and
sahf
inc
out
jg
mov
jle
popf
xchg
mov
mov
or
mov
mov
adc
mov
pop
push
imul
jle
sbb
leave
mov
sarl
and
shlb
lret
popa
outsl
xlat
lods
ss
or
jp
ret
mov
stos
add
add
cmp
pop
ret
les
stc
repz
repnz
add
jne
pop
add
xor
adc
sbb
inc
sub
je
outsb
repnz
in
jecxz
ja
je
and
mov
cltd
ror
lcall
cmpsl
movsl
mov
sbb
cld
cmpsb
enter
mov
pop
mov
ljmp
mov
lods
not
sbb
imul
jecxz
sbb
mov
cs
pop
cmp
pop
mov
pop
adcb
dec
pop
add
xchg
stos
fwait
test
int3
inc
push
inc
mov
pop
xor
dec
and
mov
or
mov
dec
sbb
aad
ret
cs
int
divl
jl
xchg
jmp
les
outsl
push
stc
mov
sbb
jae
test
or
out
gs
sti
out
pop
xor
xchg
movsb
xchg
dec
dec
push
testb
and
push
fwait
adc
jecxz
and
xor
cmpsl
mov
xchg
cwtl
andl
mov
scas
xor
fiadds
dec
sti
clc
pop
gs
incl
ret
stc
mov
fwait
sbb
mov
sub
popf
cmp
je
mov
pop
sbbb
push
data16
push
xor
xchg
bound
fldl
mov
test
pop
inc
sbb
pop
pop
dec
fldenv
mov
pop
imul
dec
rclb
dec
nop
dec
push
dec
in
push
cmp
adc
mov
inc
sbb
xchg
pusha
cmp
in
xor
data16
sub
in
and
adc
xchg
cmpsb
pusha
jl
repnz
sub
sbb
repz
nop
popf
lret
jle
sbb
push
fwait
in
push
sub
inc
test
test
fdiv
xchg
popf
add
cltd
push
jle
out
inc
cmp
stos
in
push
add
push
mov
jle
pop
bound
push
jbe
sub
xchg
mov
inc
pop
test
shrb
cs
mov
pop
out
or
adc
xorb
das
pop
xorb
inc
push
add
push
push
sahf
inc
push
fs
fcmovu
cmp
xor
mov
pop
add
shr
inc
testb
fstps
mov
xor
inc
jbe
in
mov
lcall
mov
ret
test
xchg
jns
adc
adc
add
fwait
lret
pop
mov
lret
mov
into
adc
loop
lock
loope
je
insb
into
xlat
out
jae
xor
in
je
pop
mov
ds
das
jns
add
cs
mov
fwait
mov
arpl
xlat
repz
pop
movb
push
cmpb
mov
xchg
push
rorb
mov
cmp
mov
jo
or
stos
cmc
in
xchg
out
sbb
scas
adc
cmp
stos
mov
rolb
xchg
shrb
pop
cmp
outsb
xor
aaa
movsb
idivl
mov
in
lret
push
cmp
push
repnz
mov
or
imul
mov
test
cmpxchg
jl
movsb
call
lock
call
fcoml
pushf
rcrl
xchg
inc
or
ds
inc
push
es
sbb
clc
mov
loope
pop
cmpb
repz
cmpsb
or
mov
bound
cld
divl
aas
cwtl
test
mov
sahf
test
in
sub
jmp
pop
cmpsb
ja
and
out
jne
xlat
mov
ja
and
jnp
stc
jge
dec
scas
rorl
rol
out
lods
cmpsb
cmpsb
jbe
pop
mov
mov
push
jge
ss
add
adc
add
mov
inc
lods
push
adc
dec
push
xchg
push
jmp
xchg
cli
sbb
leave
dec
stc
adc
movsl
or
xchg
rolb
push
mov
mov
popa
hlt
sub
test
mov
add
test
mov
test
aam
pop
es
ljmp
push
pop
aas
add
mov
mov
test
jb
jmp
sub
mov
fldcw
decl
call
pop
repnz
daa
add
int
xorb
lea
repz
fidivrl
ds
movsl
jo
cmc
fdiv
dec
outsb
pushf
sub
stos
shll
sbb
leave
mov
mov
shll
cmp
fiaddl
cmp
cmp
popa
insl
dec
jne
in
mov
mov
xchg
push
mov
xchg
lret
dec
inc
fmul
add
lea
sbb
les
aad
lods
cmpsb
fs
mov
cmp
xor
sbb
je
lods
cwtl
dec
and
push
call
rorl
mov
jnp
outsb
pop
pop
sub
cli
or
mov
in
bound
fisttps
imul
mov
cmpsl
add
dec
loop
lods
test
enter
aam
jecxz
cmp
fidivrl
loope
loop
pushf
xchg
fcomps
mov
lcall
lods
lock
fildl
push
cwtl
gs
into
mov
in
movsl
or
xor
fdivl
out
cwtl
test
or
iret
into
inc
imul
es
fimuls
loopne
xchg
out
jno
sbb
call
inc
inc
mov
pop
or
shr
add
sbb
imul
xchg
mov
test
imul
jp
mov
inc
or
mov
dec
rolb
push
pop
push
and
loop
popf
or
pop
das
xor
mov
enter
into
jne
sbbb
push
in
push
sub
shll
sbb
jle
cmpsb
mov
mov
push
cs
insb
sbb
stos
loope
sbb
xor
jecxz
hlt
in
es
daa
inc
cmp
and
cmp
cmpsb
iret
cwtl
popf
insb
xor
xor
repnz
arpl
adc
pop
jmp
lds
push
fists
xchg
cwtl
jp
std
xchg
jo
in
lret
sbb
into
loop
imull
dec
jle
inc
mov
add
mov
outsb
je
fistpl
icebp
xchg
in
aaa
iret
popa
inc
inc
in
mov
xchg
lcall
cld
movsb
movsb
in
push
mov
mov
xchg
aas
outsl
push
repz
cmp
int3
and
out
into
add
jnp
mov
mov
insb
pop
js
adc
adc
adcb
in
sbbl
adc
add
mov
aam
int
push
leave
fstpt
repnz
jmp
nop
out
sti
add
add
movsb
mov
loop
jp
jns
jb
loope
fxch
push
shlb
dec
je
test
lea
lock
movsl
or
mov
out
fistpl
rcrb
add
xchg
and
dec
je
out
mov
push
inc
push
test
sub
cmp
in
sub
nop
loope
daa
cs
xchg
jge
dec
int
stc
roll
adc
std
xor
mov
dec
xchg
or
sbb
les
mov
mov
jge
xchg
pushf
fsubrl
sub
shrb
mov
add
or
xchg
mov
fwait
sahf
pop
or
arpl
push
stos
xchg
mov
xchg
xchg
lea
jg
sub
pop
icebp
movsl
rcrl
adc
stos
lret
out
arpl
mov
sbb
mov
iret
ljmp
stos
dec
sbb
sbb
add
pop
add
movsl
outsb
call
mov
or
xor
adc
repz
rcrl
std
pop
add
in
ljmp
mov
lret
cs
pop
shll
xchg
stc
popa
in
outsl
inc
dec
repnz
gs
dec
into
insl
movsl
dec
jnp
push
mov
sbb
ret
insb
mov
dec
inc
push
inc
dec
sub
daa
lea
outsl
mov
pop
scas
lahf
fs
jo
mov
clc
mov
xchg
inc
loopne
push
arpl
xchg
pop
icebp
xor
cld
mov
out
cs
mov
addr16
xchg
jne
cmpsb
mov
xor
js
aas
scas
arpl
les
bound
inc
add
notb
inc
mov
imul
flds
pusha
jp
ljmp
ljmp
lods
ret
scas
and
enter
lcall
out
cmpsb
lahf
xchg
push
add
adc
push
rcll
jnp
rclb
mov
or
aas
ljmp
adc
roll
adc
adc
mov
or
aad
push
fdivl
pop
jno
pop
mov
sub
dec
cs
sub
into
xor
push
xchg
das
sarl
dec
call
fisttpll
daa
push
movb
rcpps
xchg
push
into
or
stos
pop
add
lods
dec
xchg
lock
pop
xchg
ffreep
ret
out
stos
adc
inc
out
mov
jmp
daa
out
fnstenv
mov
dec
push
iret
jnp
in
push
mov
push
aam
test
mov
repz
std
or
push
testb
les
jae
mov
mov
push
mov
loop
cmpsl
or
popf
mov
or
ds
and
ja
hlt
xchg
xchg
push
mov
and
sbb
mov
mov
std
shlb
dec
inc
aaa
adc
inc
notl
lahf
leave
daa
call
stos
loop
xor
test
fiaddl
jl
inc
adc
mov
ret
cs
loop
movsb
out
scas
mov
pop
aaa
cmp
jo
movsl
push
add
mov
sbb
loope
mov
pop
mov
push
sbb
pop
notb
lcall
fisubs
jle
rcll
repz
xlat
ret
jnp
cmpsl
scas
pop
jo
dec
mov
push
es
inc
inc
push
test
mov
jecxz
aas
jb
fstpl
shl
jmp
imul
inc
movsb
inc
cmpsl
iret
dec
xor
add
or
inc
pushf
out
movsb
arpl
imul
cpuid
inc
mov
sub
mov
nop
fsubrl
cmp
adc
ss
aaa
cwtl
push
pop
in
fidivrl
jno
out
fcmovbe
rorb
or
pop
mov
mov
mov
mov
aad
push
and
rclb
loopne
and
xor
inc
in
dec
pop
testl
jle
rcll
pusha
lahf
insl
push
stos
aaa
pop
jg
outsl
dec
jge
add
iret
cltd
aas
mov
movb
pop
fistpl
movsl
call
jge
jb
mov
outsb
sub
divb
xchg
xchg
inc
and
dec
pop
jg
jbe
movsl
cmp
mov
sbb
dec
outsl
mov
ret
mov
outsb
hlt
cmp
jbe
push
clc
std
sarl
jo
cmp
mov
imul
mov
insl
jge
test
xchg
fsubr
mov
and
adc
lds
movsl
mov
arpl
mov
and
ljmp
fcomps
add
cmp
sbb
xchg
push
jno
int3
stos
mov
enter
sub
lods
or
mov
sub
out
lds
mov
rorb
mov
sti
xor
gs
les
lahf
jae
movsb
cmp
mov
xchg
lods
rorl
mov
mov
xor
popf
mov
cmp
fbld
mov
lods
fdivrl
clc
lds
stc
xchg
add
cmp
sti
mov
dec
fld1
mov
loop
sub
mov
push
ficoms
adc
mov
jl
pushf
mov
hlt
jmp
cmp
adc
es
das
mov
pop
xchg
adc
aam
cmp
outsb
fcoms
scas
sub
sub
out
inc
imul
mov
cltd
ja
mov
pop
xchg
sbb
pop
pop
sahf
pop
stc
or
dec
xlat
and
xor
xchg
jno
ds
sbb
xchg
stc
xchg
mov
jb
lods
jno
shlb
or
jp
mov
xor
cld
push
sbb
dec
mov
mov
ds
je
xchg
lock
sbb
nop
rorb
arpl
ljmp
js
icebp
aad
adc
outsl
adc
imul
add
mov
cmp
jmp
mov
dec
and
mov
enter
jo
jle
push
sub
imull
push
inc
sahf
or
into
jb
adc
mov
sbb
jo
adc
cmp
push
add
sub
clc
sub
andnps
mov
loope
mov
mov
js
mov
hlt
sbb
in
pop
lcall
push
mov
xchg
mov
stc
mov
mov
or
jle
sub
adc
pop
scas
push
pop
std
sbb
mov
imul
push
lahf
into
aaa
add
test
fiaddl
and
pop
lahf
bound
mov
movsl
mov
jge
jnp
inc
pop
mov
inc
mov
or
adc
jns
jns
lods
and
stos
mov
sti
cld
add
xchg
testl
daa
in
lock
add
push
xor
push
in
xor
mov
shlb
imul
jo
push
and
pop
add
fsts
rcrb
jecxz
cmp
popf
adc
dec
in
loop
sub
cs
adc
adc
xor
dec
lods
ljmp
mov
cli
mov
rcll
jns
pop
adc
mov
jge
clc
out
xchg
xrelease
cld
fisttpl
and
mov
das
mov
sub
cmp
inc
mov
insl
icebp
sub
and
out
lcall
xlat
test
lahf
push
push
push
sbb
push
test
xchg
dec
xlat
hlt
adc
sbb
test
or
bound
jmp
fadd
cld
jmp
xchg
sub
ret
sub
jne
shll
xchg
add
push
cli
pop
test
mov
inc
push
xchg
pop
sub
xchg
cvtps2pd
cs
push
mov
mov
cs
insl
into
xchg
push
out
cwtl
mov
in
xchg
xchg
pop
test
xchg
nop
mov
iret
mov
xor
lcall
adc
cld
and
push
fldcw
xor
dec
dec
xchg
int
sub
mov
into
push
jge
fwait
cmp
inc
in
jnp
and
mov
in
mov
push
test
scas
sbbl
jmp
xor
dec
or
add
std
fstpl
data16
clc
leave
cmp
pop
jns
dec
pop
mov
add
inc
out
jae
push
jne
push
addr16
pop
rcll
cs
les
push
ret
icebp
and
insl
mov
movl
and
mov
ja
in
sub
pop
push
ljmp
rcl
cmp
xorl
loopne
dec
and
sub
jns
pop
rolb
cmpsb
pop
cmovp
inc
mov
cld
ret
lcall
fnsave
jle
mov
xor
add
shlb
fdivs
mov
push
scas
xor
dec
addb
inc
add
or
loop
adcl
adc
int3
bound
adc
out
push
test
pushf
std
add
dec
adc
xor
test
jle
sbb
sub
test
pop
xor
xlat
or
ret
pop
add
xchg
movsl
repnz
notb
fildll
and
mov
ftst
pop
cmpsl
shll
lret
mov
mov
pop
cmp
fistl
iret
dec
ss
jo
push
pop
ret
push
scas
jle
into
out
adc
mov
push
jns
lahf
sub
in
inc
and
push
icebp
xchg
and
push
es
js
push
es
fwait
and
xlat
jno
stos
and
int
push
xor
xchg
hlt
and
inc
stos
and
mov
insl
rcrl
xor
mov
fwait
movsl
stc
popa
dec
hlt
mov
scas
sbb
insb
mov
in
ret
xchg
out
and
scas
lock
lret
xor
cmpsl
test
pop
jns
lods
sahf
cmp
es
dec
and
imul
pop
lret
mov
inc
add
push
mov
movsl
scas
cmp
es
fwait
dec
push
push
jg
or
push
cli
mov
pop
mov
dec
sar
inc
sub
mov
sar
add
dec
sbb
mov
movsl
adc
push
push
cmp
inc
push
mov
pushf
add
dec
mov
movsb
lods
jmp
mov
ss
jo
pop
ljmp
xor
adc
int
cmc
sub
aam
xchg
sub
push
mov
scas
mov
xlat
push
mov
mov
cmpsl
mov
dec
pop
fidivrs
js
out
lahf
add
leave
lods
std
shlb
sub
js
add
cmpsb
cmp
adc
cwtl
xchg
push
sub
xchg
or
dec
jb
inc
addr16
jbe
popf
mov
and
inc
aam
shrl
cmpl
dec
ds
shll
stc
dec
push
mov
xchg
popa
aas
dec
andb
pop
push
fucomp
dec
in
cmpsl
pop
sarb
movsl
push
divb
xor
in
lret
rolb
lods
push
lock
xchg
sti
notb
lds
xchg
cmpsl
xlat
faddl
sub
add
std
dec
and
test
or
pushf
xchg
mov
sub
xchg
mov
bound
fldcw
stos
js
or
stc
adc
mov
xchg
xchg
and
test
pop
loopne
sbb
insw
push
mov
rcrb
adc
je
mov
fldenv
jne
xchg
mov
or
xchg
xor
lcall
jno
mov
std
test
popa
jecxz
clc
add
clc
in
adc
fwait
cs
insl
jecxz
xor
mov
lds
pop
pop
adc
nop
jmp
xchg
addr16
xchg
insl
int3
and
mov
inc
mov
mov
fmul
or
std
sbb
inc
mov
ss
lock
outsl
pop
dec
inc
inc
loop
and
lds
dec
adc
mov
lods
fadd
and
jge
fldl
out
push
add
dec
push
mov
cli
pusha
xchg
cmpsl
fdivr
push
and
lret
test
ljmp
imul
shlb
fsubrp
sbb
mov
in
in
xchg
sarb
push
mov
xor
inc
xor
and
fsts
test
dec
push
andl
sub
fdivrl
xchg
out
pop
xor
cmp
stos
jb
jae
and
or
push
xchg
dec
mov
insl
leave
das
aaa
push
andl
and
ret
movsl
outsl
adcl
and
or
pusha
cwtl
or
dec
sub
jae
ljmp
aaa
aaa
pop
std
jbe
hlt
cld
and
popa
jae
jp
aad
scas
xor
dec
fsubr
das
or
lods
dec
outsl
scas
jecxz
mov
jge
daa
fisubs
gs
les
jl
dec
adc
pop
pop
in
add
lahf
dec
jl
sbb
inc
or
ss
mov
lahf
das
xor
fadds
clc
pop
leave
mov
lods
cmc
adc
imul
test
nop
xor
aas
and
stos
lea
js
cld
adcl
popl
pushf
mov
into
fisubrs
insl
xor
sub
idivb
nop
xor
push
push
fwait
pop
dec
pusha
sub
fisttps
jnp
arpl
jecxz
stos
les
pop
clc
mov
jne
mov
cmp
mov
sbb
mov
and
movsb
and
incl
jge
imul
rorl
and
sub
lds
sub
cmp
xor
mov
stc
or
lret
inc
add
test
mov
pop
cmp
sub
dec
inc
out
rolb
das
sub
test
js
ja
test
outsb
cltd
aad
mov
rorb
in
flds
lds
jge
cwtl
scas
mov
pop
jae
pop
mov
pop
and
subl
cwtl
push
or
mov
xchg
sbb
js
sbb
xor
enter
out
es
fs
iret
jmp
inc
fst
in
data16
fisubrl
leave
cmp
popa
call
rolb
xchg
add
sub
mov
shrl
sbb
icebp
sbb
fcmovbe
pop
adc
jne
dec
pusha
repz
sbb
pop
clc
jp
cld
push
idivb
sub
inc
stos
rorl
pop
movsl
or
out
in
test
mov
push
cmp
sbb
dec
mov
pop
and
ror
adc
js
lret
adc
and
pop
mov
pop
shll
adc
jb
hlt
loop
out
arpl
sti
pop
pop
pop
inc
clc
lock
ret
cwtl
les
or
cmp
stos
mov
xor
fildll
and
fwait
inc
fs
cltd
cmpsb
mov
and
sbb
push
mov
enter
cmpsl
jnp
push
es
int3
pop
and
add
mov
jg
jmp
xchg
fmuls
movsl
mov
test
and
xchg
sub
outsl
aaa
adc
popf
out
outsl
notl
xchg
or
pop
mov
notb
lret
mov
in
pop
adc
cmp
pop
loope
xchg
push
sahf
aas
dec
pop
mov
push
add
push
pop
rcrb
push
je
in
int3
into
dec
cmp
repnz
add
sahf
into
mov
imul
decb
ss
push
add
jl
and
movsl
mov
and
repnz
shrl
nop
dec
repz
pop
repz
inc
lret
jg
push
xor
jo
xchg
or
rcrl
sub
sbb
lcall
mov
lahf
decb
adc
testb
push
push
adc
test
mov
daa
push
mov
fistps
cli
sbb
add
cwtl
icebp
in
inc
inc
outsl
lea
jp
and
mov
stos
jnp
icebp
cmp
cmp
negb
cltd
mov
sub
xchg
imull
popa
iret
mov
fcompl
sbb
mov
inc
and
fsub
mov
aas
push
data16
push
cltd
aaa
pop
cmp
out
or
in
outsb
fcmovne
xor
scas
push
invd
pop
sbb
sub
lcall
push
cmp
inc
mov
inc
adc
test
fcomi
push
aad
subl
scas
xchg
pop
inc
lret
aaa
popf
sti
jnp
orb
pushf
lret
adc
aaa
cmp
roll
adc
into
inc
add
mov
sar
mov
jb
cmpsb
xchg
jmp
sbb
pop
pop
mov
rorb
xor
mov
insl
mov
mov
push
push
mov
push
out
negb
js
push
scas
clc
cli
xchg
jge
dec
decb
ss
sub
pop
loope
push
out
loopne
mov
inc
mov
push
pop
cld
jnp
mov
aad
inc
loope
fcompl
dec
nop
xor
inc
jl
jo
mov
mov
imul
cs
insb
insb
jp
xor
push
mov
negl
jae
cmp
sub
dec
sbb
add
sbb
cmp
adc
iret
out
or
adc
adc
sbb
lcall
push
inc
popa
push
adc
ss
and
xchg
frstor
lock
xchg
neg
mov
mov
push
inc
div
out
fincstp
aad
lods
sbb
js
and
xchg
lea
sbb
and
cmp
sbb
cli
fistpl
loop
mov
xlat
inc
mov
and
les
jp
out
mov
cmp
inc
xchg
sbb
and
adc
inc
into
sbb
out
loopne
xor
movsb
push
into
jp
xchg
sahf
mov
cmp
or
xchg
ds
rol
fadd
adc
shl
arpl
mov
xorl
sub
mov
shrl
xor
or
push
clc
ror
xchg
xor
inc
dec
push
fisttpll
scas
daa
repz
test
add
mov
aas
lcall
push
pop
pop
jl
mov
add
adc
dec
xor
shll
out
stc
cmp
push
pop
cmpsb
and
int3
insl
inc
and
mov
lods
js
xor
lods
popa
pop
shufps
sub
adc
push
mov
aad
aaa
mov
ljmp
fimull
push
out
and
xor
movb
ret
loope
andl
movsl
aam
xchg
lcall
ret
ja
pop
mov
pop
push
pop
xor
int3
lds
outsb
dec
inc
jb
inc
push
cmp
xor
cmc
cmp
inc
dec
in
cltd
cmp
leave
faddl
lock
xor
cmc
insb
int
shrb
repz
push
test
int
xchg
and
sub
ja
stc
push
out
out
sub
push
rclb
sub
jge
cwtl
or
mov
cltd
jg
dec
inc
cli
xor
in
lods
jmp
cltd
test
sbbl
stos
pop
mov
sbb
iret
xor
fimuls
gs
dec
mov
insl
sub
xchg
cld
cmp
or
jmp
das
ret
mov
in
push
pop
cmpsb
repnz
mov
loope
pop
lea
add
xor
xchg
push
dec
ret
iret
adc
adc
and
insl
jp
inc
notb
mov
sbb
pop
add
nop
cmc
ljmp
fwait
ja
jno
mov
jno
mov
repz
jns
mov
in
test
mov
sub
mov
adc
dec
lahf
rorl
or
into
sbb
das
mov
mov
xlat
push
icebp
decb
jae
mov
pop
stc
dec
mov
ret
mov
mov
push
and
pop
clc
ljmp
cvtps2pd
aam
mov
xchg
xor
cmp
js
faddl
dec
xchg
add
int
cli
sbb
loopne
or
flds
push
xor
inc
in
movsl
dec
shl
cltd
sub
xor
insl
add
rcll
dec
xor
pop
push
and
mov
das
out
clc
cmp
xor
adc
inc
mov
cmp
ja
adc
adc
sub
inc
mov
lods
cmp
mov
pop
in
push
sbb
in
cmp
and
fildl
xlat
lds
fadds
into
pop
mov
push
sahf
lods
xor
gs
ret
rcl
sub
stos
and
dec
and
lret
inc
push
mov
insl
dec
fs
sbb
jp
cli
jnp
push
sbb
outsl
jg
aas
jne
mov
push
cmc
aad
jle
push
lods
sbbb
xchg
std
mov
sti
call
inc
enter
fdivl
subb
adc
ret
insb
xchg
sti
enter
or
and
ret
fdivl
and
xchg
adc
push
inc
add
cld
fwait
mov
pop
shll
stc
sbb
add
ss
and
addr16
pop
inc
fisttps
addr16
cmpsb
jno
add
jb
scas
loope
daa
dec
in
add
mov
ret
xor
or
nop
jg
in
push
data16
push
aam
lcall
popl
pop
daa
bound
pop
add
add
clc
push
xchg
outsl
mov
mov
push
loopne
je
mov
sbb
pop
repnz
sar
xchg
test
arpl
adc
fs
repnz
sub
test
das
int
push
divl
inc
mov
xor
sub
imul
outsb
icebp
pop
sub
adc
fdivr
mov
aas
jge
cwtl
iret
int3
test
jae
lcall
pop
pop
mov
lock
mov
inc
pop
push
jle
mov
imul
test
jno
xchg
and
adc
fwait
lret
scas
sbb
fcoml
dec
cmp
les
xchg
js
adc
addr16
fwait
add
cmp
jmp
in
insb
cli
out
jl
push
lods
push
pop
pop
nop
xchg
mov
or
xor
movsb
in
in
outsl
xchg
lcall
in
in
mov
les
cld
sub
xor
les
inc
fwait
mov
fwait
xor
fcoml
or
out
leave
imul
lods
ljmp
mov
cmp
cld
out
jle
add
dec
mov
das
pusha
jl
sub
jecxz
inc
mov
addr16
xor
rol
or
insl
dec
xchg
repz
jp
and
inc
loop
mov
repnz
repz
jb
push
sahf
sahf
je
fdivl
cmp
mov
dec
imul
out
hlt
push
jp
das
inc
js
and
sbb
scas
push
lock
inc
ja
sbb
or
lea
mov
in
fwait
repnz
aas
or
add
cmp
mov
mov
inc
outsb
xchg
pop
shl
jle
adc
pop
fcomps
push
popa
in
or
pop
pop
and
js
mov
mov
mov
xor
adc
cmp
and
xor
ret
fldenv
out
mov
or
dec
mov
in
cmpsl
pop
bound
jg
dec
pop
das
stc
jmp
sbb
ret
xor
testb
dec
aad
cmp
rcrb
test
lds
push
popf
push
sub
fadd
in
out
sbb
pushf
mov
jge
jne
cmpb
mov
aad
ljmp
in
pop
insl
fucomp
dec
mov
cwtl
repz
pop
xchg
popa
dec
loopne
addr16
inc
and
and
push
push
mov
frndint
sysexit
pop
dec
mov
dec
cmpsl
cmpsl
cmp
leave
lods
pop
fbld
mov
movsb
aas
imul
jne
aas
rclb
lahf
mov
fstps
add
cmpsb
cs
adc
sbb
mov
xlat
mov
xchg
wrmsr
iret
cwtl
stos
scas
scas
dec
sub
cmp
sarb
les
popf
mov
fldt
dec
mov
push
in
jb
adc
repz
sbb
adc
sbb
lods
clc
and
int
xor
in
sbb
inc
fsubl
xorl
sub
xchg
pusha
jb
sub
enter
aam
lea
push
lret
pop
out
fisubrl
xchg
sbb
xchg
or
pop
pop
jbe
sub
movb
jle
push
out
sarl
inc
scas
mov
xchg
xchg
std
shl
sahf
arpl
dec
mov
int
iret
scas
repz
inc
pop
imul
shr
adc
cmp
xchg
sbb
jp
or
add
fnstcw
jge
sub
ljmp
jecxz
loopne
andb
sbb
inc
bt
js
inc
sbb
mov
dec
mov
xchg
mov
fistl
xchg
and
andb
addl
and
pop
icebp
and
add
leave
adc
in
cs
lret
cwtl
mov
in
fisubl
push
add
ret
das
mov
mov
cld
lea
andl
add
mov
sbb
sbb
mov
cmp
in
sbb
mov
ljmp
or
dec
test
mov
fcmovb
mov
cmp
scas
or
sbb
mov
jle
xor
bound
adc
rol
nop
mov
or
fldt
adc
xchg
sub
mov
push
cltd
mov
mov
stos
add
jns
mov
pop
test
jecxz
push
xchg
push
add
mov
pusha
fnstcw
imul
out
in
dec
fldcw
jecxz
popf
loop
nop
or
leave
jp
fistpl
test
xor
adc
add
adc
movsl
outsb
aaa
cld
dec
adc
pushf
xlat
ds
ljmp
jg
adc
js
mov
in
jae
adc
flds
test
sbb
mov
xchg
cli
xor
int
subl
add
cmp
leave
mov
jnp
ja
pop
in
rol
sahf
gs
push
xchg
or
push
push
jp
cli
test
fisubl
rcll
add
mov
xor
or
fwait
xchg
cwtl
mov
or
into
push
xchg
std
push
das
movsl
sbb
ss
mov
sbb
inc
pop
decl
mov
arpl
lsl
or
shll
xor
dec
ror
dec
invd
jne
push
incl
dec
lods
test
loopne
sbb
test
mov
mov
add
mov
xchg
adc
pop
lods
xchg
pop
and
pop
cmp
cli
test
inc
or
xlat
inc
mov
and
or
jmp
jge
push
ficompl
int3
les
out
pop
cld
stos
push
ret
sahf
fnstenv
popf
shll
das
ja
test
mov
push
jl
lcall
mov
pop
push
inc
mov
movsl
test
add
jo
add
in
mov
mulb
fistps
cli
lds
mov
add
sahf
ds
ds
fwait
sbb
jle
mov
movsl
cmp
aaa
add
rolb
loopne
mov
dec
stos
cmp
clc
orb
and
push
into
xchg
jnp
lods
mov
cmpsb
pop
xchg
mov
imul
inc
sbb
std
pop
cmpl
lock
jmp
mov
pop
inc
gs
lcall
xor
test
sub
pop
je
into
push
in
push
adc
and
sbb
inc
lret
mov
rcrl
push
pusha
mov
xchg
push
push
mov
xor
inc
loope
cmpsb
mov
pop
push
sbb
je
mov
fs
lock
ficoms
sub
sbb
leave
jo
sbb
std
ret
andl
out
adc
push
subl
adc
xorps
push
inc
cwtl
out
adc
hlt
shll
and
ret
jnp
in
fdivrl
je
sbb
clc
add
ret
mov
mov
and
sbb
sti
inc
ja
mov
cltd
xor
push
repnz
dec
xor
fmull
lcall
mov
adc
push
int
sbb
aam
lock
punpckhwd
mov
push
dec
fldenv
out
mov
mov
mov
jl,pn
xchg
xor
repz
push
addr16
test
lea
cmp
sub
cmp
pop
test
sbb
outsb
addl
shr
clc
cmp
les
or
sub
jg
mov
mov
or
mov
gs
dec
fistps
pusha
dec
lds
mov
or
in
push
or
test
mov
jno
cmpsl
rcll
jge
adc
xchg
lods
inc
jmp
push
mov
mov
imulb
jo
add
int
bound
xchg
and
nop
test
or
movsl
arpl
adc
jne
rclb
fxch
and
subl
xor
test
pop
mov
xor
xor
fisttpll
dec
ss
ss
adc
lock
add
adc
std
sub
in
mov
popa
xchg
push
sbb
lcall
jbe
push
ljmp
sahf
or
pop
sarb
or
cmc
dec
mov
cmpsb
loopne
pop
repz
loop
mov
adc
fwait
sbb
mov
popa
mov
push
jmp
fimuls
mov
pusha
fstpl
fcmovb
dec
cli
xchg
xor
adc
imul
lods
xchg
push
test
mov
pop
js
sub
sahf
dec
in
sbb
call
mov
aad
cltd
sbb
lret
enter
cld
jmp
leave
test
adc
enter
in
cli
loop
popf
jns
outsb
cmp
pop
or
in
pop
daa
insl
loop
clc
mov
ja
sub
xchg
out
daa
mov
inc
push
cwtl
mov
xchg
xchg
xchg
dec
push
pusha
jno
sbb
cmp
pop
and
mov
push
xor
jle
pop
call
mov
arpl
subps
sbb
push
mov
into
mov
je
jge
ret
add
ficomps
xchg
cltd
insl
mov
imul
mov
adc
sti
jae
out
jge
call
loope
shll
mov
mov
push
lcall
add
mov
mov
aad
inc
push
pminub
inc
inc
jge
jae
fs
leave
insl
ds
lock
stos
or
gs
andb
sub
mov
xchg
out
insl
jmp
sub
and
push
xchg
add
and
arpl
xchg
adc
add
push
mov
loop
dec
or
test
lcall
jge
mov
cmp
and
int
ret
inc
mov
push
xchg
out
jno
xchg
test
or
nop
ds
popf
adcl
jg
lods
jnp
adc
dec
jle
sti
xor
les
mov
or
pop
fcmovu
cmp
popa
test
cmpsb
flds
sub
dec
mov
pop
mov
xlat
stos
mov
pusha
lret
scas
sbb
arpl
pop
inc
cmp
rcrb
dec
push
cmc
jle
cmp
cmp
push
sub
int
inc
and
adc
cmpsl
push
fs
leave
adc
and
into
paddd
inc
jecxz
clc
fnstsw
adc
ret
cmp
mov
push
mov
cltd
movsl
xor
rorb
jnp
ljmp
int
cmp
sbb
push
in
pushf
push
std
aad
adc
sahf
test
xchg
sahf
lret
push
nop
dec
es
push
stos
jg
cmp
scas
xchg
jno
test
push
jnp
mov
adc
xchg
into
icebp
sahf
outsl
lds
pop
rcr
pop
ljmp
or
vmovups
es
and
pop
mov
int3
jns
add
sbb
divl
nop
icebp
aas
popa
mov
mov
std
fsubs
xchg
cmp
hlt
jno
out
adc
jae
fwait
push
cwtl
nop
mov
ret
push
or
push
mov
pop
jg
xlat
lcall
fsubrs
repz
pop
cld
mov
inc
les
sub
pop
push
into
push
xor
push
add
dec
movsl
mov
inc
sbb
lods
xchg
lea
cwtl
stos
sub
add
mov
xchg
jns
shlb
mov
popa
subb
test
dec
ror
das
mov
sahf
movl
push
mov
mov
pop
inc
mov
in
ss
inc
pop
rcl
adc
call
clc
aas
lea
outsl
add
pop
mov
adc
pop
bound
aas
fbstp
jae
adc
and
hlt
cmc
out
inc
pop
subb
pop
aad
ror
daa
dec
in
pop
and
jno
inc
les
mov
fnstenv
push
xchg
mov
xchg
insl
vpermq
sbb
and
cli
lea
jmp
cmp
cmpb
xor
xchg
push
iret
outsl
jae
aam
cmpsl
inc
add
push
mov
pop
xchg
or
and
push
sbb
jnp
decl
xor
out
pop
in
ret
imul
push
sbb
cli
icebp
mov
xor
xor
xor
add
xor
jecxz
push
and
and
add
nop
sbb
gs
adcl
and
arpl
cmpsl
adc
mov
pop
or
cs
cmp
bound
pushf
sub
cwtl
add
out
or
outsb
jg
lock
sbb
mov
jle
lods
or
add
arpl
test
pop
jmp
cwtl
sbb
sahf
daa
int3
push
xchg
add
mov
or
jl
mov
fmul
sbb
imul
movsb
clc
sbb
imul
mov
xor
andb
push
jecxz
jb
out
int3
in
in
test
fcomp
fs
daa
push
mov
xchg
mov
adc
ljmp
add
cli
sub
mov
outsl
jl
or
movsl
jbe
mov
push
imul
jns
out
cmpsb
mov
mov
mov
inc
fists
sahf
push
mov
lcall
push
dec
pushf
or
or
push
pop
inc
cmp
lea
lods
pop
leave
mov
stc
lds
sbb
cmpsb
cmp
inc
xchg
loopne
out
mov
mov
lahf
insb
daa
loope
adc
xchg
pushf
stos
push
cmpsb
mov
dec
jne
cmpsl
dec
add
sub
xchg
test
adc
push
out
adc
pop
add
inc
clc
mov
arpl
aam
out
outsl
push
mov
adc
loopne
cmp
jae
cmp
xorl
xchg
movsb
or
mov
xor
pop
xchg
xchg
fadds
clc
movsl
adc
xchg
lcall
icebp
mov
xchg
add
xlat
push
mov
ss
cld
push
lcall
mov
jnp
loope
cltd
outsl
jae
lds
icebp
or
aam
jne
jno
test
jmp
push
xchg
fstl
insl
flds
repnz
into
sbb
jno
pop
dec
cmpsl
fdivs
mov
jae
repz
sbb
pop
mov
push
push
mov
xchg
fs
push
jae
orb
testl
push
insl
add
inc
pop
sbb
mov
fs
or
loopne
xor
push
idivl
shlb
popf
js
icebp
xor
test
or
imul
fwait
or
mov
ret
mov
popf
jg
movlps
test
rcl
and
fmulp
inc
clc
lods
or
sti
adc
cmp
int3
popa
or
inc
test
pusha
nop
cmp
in
push
mov
loope
pop
out
jmp
xor
mov
in
or
enter
scas
dec
jb
inc
in
sbb
fldl
ja
in
lret
clc
clc
stos
adc
or
xchg
lcall
inc
mov
dec
ljmp
std
jb
mov
cmp
cmp
sar
jmp
and
mov
push
test
cmp
or
rorl
push
push
mov
ds
test
stos
jbe
lret
inc
or
xchg
sbb
jle
movb
or
inc
fs
cwtl
cld
dec
inc
test
sahf
push
das
repz
call
xchg
jmp
jnp
pop
pop
fwait
idivb
lret
pop
add
pop
ljmp
xor
rorl
cmp
stc
adc
dec
or
xor
adc
sub
je
mov
xor
inc
adc
gs
lret
mov
icebp
hlt
mov
jbe
sbb
xlat
mov
and
mov
int
ja
sbb
adcl
fdivrl
icebp
in
leave
ret
push
mov
cmpb
jge
es
lods
leave
jmp
mov
pop
sub
out
clc
xchg
xor
add
movsl
jg
adc
stos
inc
imul
mov
adc
ret
xor
push
pop
jno
stos
imul
sbb
or
fists
mov
lods
insb
push
xchg
icebp
cmp
xchg
lods
sarl
out
idiv
sub
leave
mov
xor
add
in
sub
inc
incl
adc
out
xchg
add
xor
std
sahf
aad
or
lcall
int
add
pop
fcmovnbe
lcall
stos
out
pop
mov
je
negb
mov
jb
fcomp
arpl
rcrl
call
bound
inc
push
and
in
test
shlb
cmp
dec
cs
fldenv
jmp
lods
testl
mull
inc
lret
sbb
out
mov
dec
jae
cld
or
lock
faddl
adc
icebp
jbe
jle
lret
movsb
fcmovne
repz
int3
pushf
scas
adc
sarb
and
movsl
adc
and
fdivr
xlat
dec
imul
sti
xlat
cmp
jns
jmp
push
imul
add
mov
mov
add
xchg
jle
adc
sahf
and
mov
add
mov
mov
push
into
mov
adc
in
std
pop
fs
loop
in
hlt
loope
mov
push
fs
lret
push
cmp
mov
adc
and
lea
cmp
shrl
aad
or
out
dec
lahf
sarb
shll
add
loopne
cmp
pop
cmpsb
shr
pop
out
add
ds
std
dec
mov
sbb
add
inc
inc
es
xchg
pop
push
addr16
mov
dec
sbb
cmp
sbb
js
bnd
fs
and
inc
jnp
mov
inc
js
imul
mov
fcmovbe
jp
je
iret
mov
daa
xor
cmp
sbb
adc
sbb
scas
cli
hlt
test
xchg
lods
cmc
stos
pop
and
mov
push
je
fs
sub
pop
icebp
jecxz
pop
sub
push
push
icebp
outsb
push
insl
daa
repz
imul
mov
mov
mov
rcr
hlt
pop
jno
test
dec
lret
or
jno
imull
or
test
push
lret
dec
mov
mov
push
pop
int
les
fisubl
adc
or
pusha
gs
adc
dec
mov
lea
fidivrs
or
mov
jns
addb
les
xchg
ret
mov
in
push
mov
push
in
sahf
aaa
sub
enter
sbb
mov
popa
xchg
cmc
xchg
int
jmp
xchg
add
sbb
loope
dec
lret
dec
dec
xchg
mov
mov
mov
mov
shrl
push
rcr
dec
js
mov
push
jecxz
dec
shl
test
xchg
les
add
sub
into
inc
icebp
xor
mov
insb
scas
push
jl
fwait
or
mov
sarb
ret
hlt
dec
xor
mov
imul
loopne
xor
adc
xchg
test
inc
mov
dec
aad
into
loopne
push
call
push
xchg
push
clc
pop
push
sahf
cltd
mov
ljmp
adc
addr16
lds
push
dec
mov
mov
xor
call
xchg
int3
jmp
insl
push
cltd
pop
out
inc
or
lret
and
adc
gs
jns
sub
ljmp
mov
in
adc
or
jle
jl
cmc
push
mov
push
mov
xor
aas
data16
rcrb
inc
popa
xchg
jo
dec
stos
xor
or
inc
jno
testl
repz
xor
xchg
mov
call
cmpsb
idivb
xchg
mov
aad
mov
out
and
lea
mov
mov
pop
fwait
sbb
mov
cmp
inc
jmp
cs
sub
add
inc
sbbb
ljmp
jb
xor
in
xchg
push
inc
mov
sti
lock
dec
mov
pop
lcall
das
pop
addr16
test
mov
loopne
dec
sub
jl
mov
call
shlb
inc
jg
or
out
bnd
xchg
jp
cmpsl
push
adc
sbb
xor
testl
jmp
push
mov
inc
sub
fbstp
cmp
nop
inc
pop
push
fwait
insl
push
jae
and
adc
movsb
xchg
jno
cmpsb
adc
or
stc
ljmp
aam
mov
loopne
pop
insb
mov
std
sbb
xchg
in
add
daa
pop
xor
sbb
fidivl
pop
xor
dec
push
and
mov
into
cs
xchg
push
imulb
push
flds
mov
test
icebp
pop
or
or
popa
in
mov
xor
arpl
and
jbe
ja
aas
xchg
or
cmp
xchg
outsl
dec
dec
lcall
fiadds
call
movl
push
cmpsb
sbb
adc
inc
pop
js
lock
xchg
cmp
inc
push
arpl
fisubrl
lods
data16
sbb
mov
push
sbb
jle
push
push
mov
in
iret
add
fs
and
sbb
out
shlb
mov
jmp
cmpsl
pop
sbb
adc
fimuls
jns
cmp
and
test
int
jmp
dec
arpl
push
outsb
rcll
lods
push
sbb
and
and
cmp
pop
dec
mov
shlb
into
inc
dec
jnp
dec
sbb
fstl
sbb
stos
dec
or
js
int3
xchg
mov
int
sbbb
push
or
ss
pop
jle
fwait
lret
popf
pop
mov
out
orl
dec
out
rcll
dec
push
push
mov
mov
adc
pop
dec
mov
inc
add
mov
addr16
push
into
sub
fbld
dec
popa
das
and
pop
cli
or
fwait
sti
dec
push
in
sub
jns
and
int3
mov
mov
aas
aad
jge
or
xchg
lock
dec
mov
jne
vunpcklps
outsl
xacquire
or
xchg
add
and
push
movsb
shll
sub
jb
push
dec
xor
add
test
out
sti
sbb
fnstenv
ja
jnp
and
sbbb
jge
adc
outsl
jle
add
dec
jo
cmp
repz
adc
push
or
in
nop
xor
sub
ss
mov
bnd
pop
std
push
mov
pop
inc
test
jl
sahf
pop
ss
mov
scas
scas
mov
push
loopne
dec
pop
fld
nop
in
jp
int
fwait
mov
dec
repnz
test
pop
js
repz
les
push
pop
push
int3
xor
insb
scas
ret
push
and
mov
add
cmp
cs
pop
add
int
jo
cmp
rclb
add
cmp
stos
je
cwtl
push
sub
inc
clc
popf
dec
push
push
fiaddl
jne
cwtl
and
negl
cld
jne
pop
push
mov
or
cmpsb
jns
mov
push
adc
push
dec
ja
push
mov
mov
xchg
std
out
mov
push
xchg
xor
dec
outsb
sub
call
mov
addl
repz
lret
test
xor
pop
push
jg
xor
sti
in
or
add
fildl
lds
mov
sarb
and
out
jo
dec
or
rcl
add
add
add
mov
jl
clc
stc
in
fucom
shlb
mov
enter
cmp
pop
pop
xor
sar
jb
out
jbe
repz
test
dec
insb
nop
divl
stc
fidivrs
adc
xor
cmpsl
jl
pop
movsb
test
sbb
addb
adc
fmuls
out
sbb
pop
mov
mov
and
sub
mov
sub
xor
mov
lea
cmp
pop
add
lret
lods
popf
cld
pop
shll
push
lret
mov
jge
push
jecxz
push
js
xchg
in
loopne
shl
ror
inc
es
cmp
clc
mov
xchg
jns
jo
mov
sub
cmp
sub
xchg
mov
push
shlb
dec
int
fisubl
fcomps
fsubrl
sbb
sbb
sub
sbb
xchg
xchg
sahf
add
or
mov
out
mov
fistps
jne
mov
ja
adc
sbb
sarb
sbb
out
sarl
movsl
push
mov
mov
imul
loop
int3
sbb
xlat
adc
jge
push
das
cwtl
jb
sub
push
std
loopne
add
sub
jo
data16
sub
lret
sbb
data16
xchg
idivb
repnz
jmp
sbb
mov
enter
stos
insb
iret
pop
rorl
add
test
sbb
mov
enter
xchg
xor
add
addl
mov
out
jp
cwtl
sbb
ljmp
pop
add
scas
pop
adcl
xchg
dec
adc
loop
push
rcll
xchg
mov
aaa
pusha
popf
mov
and
icebp
repnz
sbb
rcr
jb
jo
int
pushl
repz
jmp
push
das
xor
dec
mov
jge
dec
adc
inc
xchg
sbb
outsb
js
or
fcomps
inc
dec
jb
sbb
mov
scas
test
pushf
stc
ficoml
xor
push
aas
and
xor
xchg
push
aam
daa
mov
pop
stos
pop
mov
leave
test
loopne
push
lods
mov
iret
pop
pop
adc
outsb
in
adc
push
lods
dec
mov
adc
daa
test
jl
and
leave
or
call
int3
push
pop
push
xor
loopne
cmp
les
adcl
xor
mov
fiaddl
xor
push
fldenv
das
aad
jmp
and
adc
jmp
xchg
aaa
mov
mov
cvtdq2ps
add
in
push
ficoml
push
test
fldcw
or
hlt
dec
push
sti
in
jbe
loop
jb
cmpsl
in
inc
adc
ret
push
adc
fimuls
mov
dec
adc
mov
mov
xchg
insl
fstpt
cmp
push
jne,pn
sub
subl
inc
mov
sub
jl
testb
loopne
mov
mov
mov
mov
jne
int
sub
cmp
and
cmpsb
dec
out
push
xchg
mov
add
push
inc
mov
pop
and
pop
jg
mov
lahf
pop
cs
lock
popf
fwait
cmc
cli
sbb
pop
jb
mov
xchg
ss
insb
xor
or
xchg
clc
pop
add
lcall
xchg
sub
sbb
add
jge
jmp
push
int
test
aaa
nop
lahf
ret
ror
mov
mov
fstpt
adc
push
or
jmp
into
push
popf
mov
jns
xchg
adc
xor
int3
add
ret
in
adcl
aas
mov
xor
jae
mov
jns
or
movsl
xor
or
ljmp
mov
sub
movsb
mov
call
es
or
mov
cmp
lret
fcoms
repnz
fsubrl
cmp
imul
jecxz
aam
leave
and
out
fidivrl
push
das
dec
mov
ret
jmp
ret
adc
xor
and
and
in
mov
xchg
mov
ret
lret
out
or
mov
sub
andb
mov
loopne
jge
in
movsl
ret
es
jbe
or
or
push
setge
dec
jb
and
xor
adcb
ret
mov
cmc
cld
push
sti
mov
jno
push
sub
jp
scas
test
xlat
subb
ffree
xor
xor
xchg
sub
jg
adc
ljmp
sbb
and
fiaddl
das
push
aaa
mov
mov
ficompl
cmp
out
jge
mov
mov
popa
cli
rorb
jbe
sub
push
inc
sub
stc
sub
arpl
push
jge
jg
scas
push
jecxz
mov
mov
movsl
add
popf
xor
cmp
movsl
dec
pop
rorb
lea
fsubrs
cs
shlb
outsl
inc
jmp
sbb
jo
mov
xchg
outsl
sbb
in
adc
mov
aas
inc
iret
dec
mov
mov
sub
add
rclb
imul
jnp
inc
dec
or
adc
cmc
inc
push
mov
js
sbb
in
cmpsl
dec
inc
lret
sbbb
fcmovbe
adc
mov
and
push
mov
push
repz
repnz
jle
jmp
out
sbb
lcall
xlat
cli
xchg
into
xor
adc
in
pop
pop
sub
loope
icebp
xchg
xor
sub
mov
es
repnz
in
popf
mov
jne
stos
ret
pushf
test
je
or
lcall
movsl
pop
loopne
jg
loope
push
xchg
cmp
add
push
mov
out
xlat
fwait
push
adc
push
xchg
sub
mov
inc
mov
mov
rorb
push
lods
out
addb
adc
cmp
stos
pop
mov
aad
xchg
push
jmp
cmp
xor
pop
and
push
addr16
xor
or
and
js
xor
jle
repz
adc
fcompl
adc
adc
iret
jbe
push
ljmp
lea
mov
je
fsubs
push
inc
sahf
das
fcoms
jl
aam
mov
cmp
lods
pushf
sub
mov
mov
out
stc
fs
cmp
and
or
fists
and
pop
push
mov
dec
leave
inc
push
push
inc
ret
pop
subl
mov
orl
sub
mov
cmp
scas
incl
cltd
mov
sahf
add
lods
xchg
sbbb
sbb
aas
jp
imul
or
sbb
mov
sbb
cmp
xchg
inc
stos
and
inc
jb
pop
xchg
faddl
adc
push
pop
jbe
popa
push
or
pop
sbb
imul
push
or
push
dec
dec
pop
and
shlb
imul
repz
out
ret
mov
adc
gs
out
jmp
and
cli
cwtl
jmp
mov
aad
imul
adc
mov
movsl
out
aad
mov
xchg
xchg
lock
mov
nop
push
rclb
or
subl
sbb
jge
fs
mov
inc
cmp
rorl
add
push
ja
mov
and
push
cmpsl
and
imull
pushf
cmp
add
popf
lds
decb
jno
mov
fistl
pop
xchg
lret
mov
jle
push
push
jae
cltd
or
testl
xchg
movsl
test
jg
lret
dec
sbb
test
jno
lds
dec
int
mov
repnz
mov
dec
push
sbb
inc
add
mov
xor
cmpsb
cmc
idiv
cmpsb
outsb
stos
pop
sbb
sub
cltd
sbb
test
in
push
mov
mov
sti
cwtl
mov
shrb
shlb
xchg
or
mov
xchg
mov
cwtl
push
mov
push
cmp
sub
mov
nop
mov
es
jge
mov
xor
js
xor
dec
mov
inc
xchg
insb
inc
add
arpl
dec
pusha
popf
shrb
cli
adc
cmp
push
in
mov
not
nop
push
mov
mov
in
and
pusha
aas
loope
outsl
fidivrs
fdivl
push
or
and
mov
or
or
xchg
adc
dec
mov
jb
jns
sti
sahf
bound
or
inc
push
or
pusha
movsb
and
jnp
dec
outsb
xorl
arpl
fdivl
xchg
ja
dec
push
cltd
mov
lods
cwtl
mov
popf
xorl
dec
mov
sub
add
inc
jle
cmp
lods
shrl
fdivl
fwait
lds
clc
inc
scas
mov
call
lret
lods
insl
pop
push
fdivs
ljmp
push
xchg
xchg
mov
cmp
mov
cltd
push
xchg
pop
fdivr
lahf
test
sbb
mov
xchg
xor
xchg
mov
push
add
daa
cmpsb
sbb
lods
xor
movsl
inc
rolb
clc
movsl
push
xor
fildll
sbb
mov
ret
mov
repz
sub
adc
sti
xlat
mov
sbb
pop
push
add
idivb
inc
stc
xor
orb
ss
or
jns
dec
scas
aas
roll
lods
xchg
pop
hlt
and
jmp
cli
sbb
pop
daa
pop
arpl
jge
sub
mov
fstl
lods
shr
lret
xor
xchg
adc
lcall
adc
movsl
ret
adc
push
dec
push
test
out
mov
or
rcrl
pop
sbb
dec
shrl
jle
cmp
ja
mov
jl
shl
lds
jb
lods
jne
jmp
aaa
xchg
aam
fwait
push
mov
test
cmp
icebp
push
clc
hlt
pop
add
clc
dec
scas
sub
mov
movsb
or
aam
or
movsl
insb
mov
cld
cs
push
xor
fcompl
fsts
and
mov
into
xchg
subb
xchg
or
loop
mov
mov
jl
mov
push
jnp
cmpb
xchg
pop
mov
dec
lret
inc
jae
fwait
xchg
shlb
pop
test
ljmp
pop
xchg
mov
push
ret
mov
pop
mul
stos
jge
popf
iret
xchg
mov
cmp
pop
mov
inc
jecxz
cmpsb
inc
fsubl
push
mov
nop
stos
lods
or
add
addl
xchg
adc
jle
xorb
dec
push
cld
or
mov
cltd
test
xchg
adc
pop
shrl
fimull
lds
mov
sti
filds
fwait
mov
outsl
fs
jle
or
in
int
push
dec
cmp
mov
push
ds
push
aaa
dec
pop
sbb
repz
in
fs
and
jg
jp
sbb
push
jae
xor
xor
fsubrs
in
andb
push
push
inc
and
rcll
int3
inc
seto
mov
aad
pushf
pop
lds
nop
mov
push
dec
roll
and
int3
aad
insb
mov
mov
sti
add
sub
push
mov
mov
shlb
ljmp
pop
cwtl
cmpsl
scas
notl
scas
xchg
data16
jl
jbe
stos
pop
xchg
bnd
scas
shll
enter
sub
lret
sub
jmp
dec
ret
lret
mov
xorl
insl
dec
shr
or
xchg
pop
push
xchg
mov
imul
lock
mov
ret
pushf
leave
cli
es
out
or
and
push
jl
in
stc
xor
add
pop
push
cmp
dec
mov
push
in
inc
sbb
test
xor
cmp
mov
in
adcl
xchg
div
mov
inc
adc
movsl
pop
into
loope
pop
hlt
cmp
mov
cs
cmp
repnz
testb
ret
pop
pushf
mov
fucom
lds
loopne
flds
mov
in
sub
cmp
dec
jb
push
rolb
test
push
cmpsb
je
sti
sbbl
or
ss
jbe
bound
cmp
cmpl
in
scas
or
aas
xchg
xchg
lods
inc
clc
sbb
fildll
movsb
in
xchg
mov
dec
push
leave
mov
jecxz
int
sbb
cs
testb
inc
sbb
and
or
je
in
xor
push
imul
dec
adc
loope
mov
and
or
lds
insl
idivl
shrl
or
pop
push
pop
test
fists
imul
sub
sub
fildl
add
pop
mov
dec
add
add
and
pop
mov
dec
add
pop
leave
std
insb
or
xor
or
dec
shlb
bound
add
inc
mov
fs
sub
xchg
out
enter
push
xchg
adc
enter
test
and
push
inc
xor
ficoml
sub
bound
sub
or
stos
daa
and
add
movsb
add
cmp
pushf
xor
jge
jp
mov
pushf
lret
xor
pop
xchg
out
in
aaa
andl
test
xchg
cmc
pop
leave
rolb
pop
pushl
popf
shlb
xchg
mov
lock
inc
imul
add
pop
outsl
adc
fbld
pop
sarb
ds
in
shll
fs
ds
mov
shll
rclb
ficompl
jne
xchg
mov
mov
or
sbb
adc
push
movsb
inc
sbb
lock
push
andl
push
xor
int3
pop
inc
mov
rorb
rcl
sbb
mov
mov
das
cli
mov
adc
pop
push
or
xchg
push
imul
mov
jp
out
mov
fcoms
lods
adc
xchg
lahf
dec
xchg
in
push
faddp
stos
pop
add
aaa
mov
xlat
dec
sub
sbbb
or
pop
aas
mov
push
mov
jg
insb
mov
in
or
xor
mov
or
push
mov
shlb
add
cld
nop
jmp
imul
sysenter
mov
jecxz
mov
adc
jne
pop
xchg
cmc
xor
xor
int3
js
dec
ljmp
out
mov
jmp
jg
pop
imulb
jne
mov
mov
push
outsl
loope
sbb
or
or
imul
lods
mov
cmp
lcall
mov
mov
sbb
push
testl
jecxz
xchg
sub
int
dec
ret
outsl
adc
test
jae
test
out
dec
push
pop
sub
push
js
pop
or
push
repz
shrb
fcmovnu
test
je
out
rcrl
mov
imulb
add
and
fcoms
inc
lcall
mov
je
scas
fs
pop
mov
lea
insb
movsb
in
inc
nop
sbb
cmp
jbe
mov
inc
sti
test
adc
sti
mov
sarl
xchg
xlat
je
and
jecxz
cmc
ret
cmp
push
rcrl
movsl
les
mov
add
push
sub
mov
call
sarb
push
sub
mov
clc
adc
jecxz
cs
inc
sbb
mov
push
cmp
dec
add
mov
cmp
mov
nop
dec
cmc
and
adc
fisubl
clc
or
jle
sbb
stos
cmpsl
xchg
jmp
xchg
jmp
jp
dec
mov
lret
dec
cli
testl
add
push
ds
cmp
int
inc
jg
xchg
jmp
add
inc
and
mov
push
xor
xor
mov
mov
push
inc
dec
enter
add
dec
rcrb
mov
js
stos
adc
out
mov
mov
adc
sbb
mov
inc
xchg
or
sti
adc
in
inc
push
loop
js
sub
xchg
loope
inc
aam
lds
cmp
cmp
and
inc
test
addr16
inc
shlb
loopne
outsl
fsubl
loop
xchg
outsb
push
movsl
xlat
andb
pop
jg
mov
enter
mov
mov
dec
jns
stc
pusha
test
fwait
or
add
xchg
lock
push
outsl
and
and
lret
rcll
shll
mov
lret
inc
hlt
xchg
cld
jmp
dec
je
sub
jno
cmp
cmpsl
ret
mov
mov
mov
sbbb
inc
and
mov
shll
test
pop
mov
outsb
lock
and
or
and
adc
push
rorl
clc
cmpsl
cwtl
pop
mov
cmp
nop
or
dec
mov
inc
pop
xchg
or
int
mov
jmp
in
xor
xor
rcl
sbb
in
jge
in
ret
pushf
out
and
xchg
xor
insl
scas
adc
mov
pop
add
gs
mov
push
loop,pn
insl
pop
jbe
and
inc
mov
pop
orl
dec
gs
sti
imul
repz
or
into
mov
mov
maxps
jne
sarl
and
addr16
lahf
outsb
mov
mov
sub
faddl
and
jo
sub
pop
loop
mov
or
les
xchg
inc
shrb
test
dec
bound
xchg
dec
fildl
or
rclb
pop
cld
push
and
out
sbb
pop
jle
and
sbb
push
mov
mov
js
adc
dec
icebp
test
scas
stc
adc
mov
and
gs
push
loopne
ret
test
xlat
stos
lods
loop
call
cmc
mov
in
repnz
adc
aad
rorb
adc
hlt
cwtl
scas
mov
int3
mov
jo
sti
hlt
jae
xor
data16
cmp
pop
cld
xchg
sbb
sbb
aad
push
jnp
cmc
pop
dec
repz
dec
in
cs
and
adc
adc
push
rol
push
mov
jae
iret
fwait
mov
lcall
mov
lahf
push
adc
or
jecxz
add
mov
in
adc
data16
lods
dec
mov
inc
adc
subl
mov
into
xor
hlt
pop
mov
jne
adc
xchg
shll
xchg
dec
xor
or
adc
popa
add
test
sbb
int
dec
xor
ret
in
jle
lock
dec
sbb
popf
cmp
lret
and
xlat
outsl
and
mov
xor
ret
and
rorl
cmp
fbld
ja
mov
fdivrl
mov
dec
jle
and
mov
jle
mov
imul
iret
xlat
and
pop
jg
mov
xlat
jl
gs
aas
insl
rcrb
cmp
or
sub
and
adc
daa
pop
enter
jns
imul
cmpsb
lock
sbb
call
jns
sbb
push
mov
notb
lock
cmpsl
push
xchg
arpl
cmp
sar
icebp
packssdw
outsl
add
inc
test
mov
ds
jge
sub
icebp
cmp
adc
adc
mov
out
rorb
add
xchg
int3
clc
xchg
sbb
mov
lds
xchg
leave
cmp
mov
sbb
sbb
xor
xor
push
test
xchg
scas
imul
fs
sub
pop
xor
sub
xlat
add
stos
leave
adcl
arpl
xchg
cmp
mov
rclb
mov
enter
gs
fstpt
cmp
idivb
mov
fstps
outsb
cwtl
fisttpll
daa
and
imul
out
in
scas
pusha
inc
xchg
adc
pushl
ret
imul
sti
pop
or
ret
mov
mov
jno
jmp
cmp
jno
out
cs
sbb
das
mov
push
inc
jnp
cmp
test
in
pop
add
clc
cmpl
vsubsd
xor
inc
pop
in
lock
dec
cmpb
adc
jo
push
mov
loope
popa
cmp
test
iret
ss
xchg
mov
cld
xor
jo
pop
in
and
sbb
adc
ret
imul
aas
popa
inc
rcrl
mov
orb
add
call
sbb
testb
push
cwtl
fcoms
stos
outsb
dec
stos
jl
sbb
jns
mov
cmpsb
insb
adc
sti
push
ret
xlat
push
iret
sbb
jbe
dec
adc
jo
mov
int3
lret
div
adc
or
js
sub
xchg
adc
mov
lods
inc
and
adc
adc
pmaxsw
sub
pop
imul
or
jecxz
stc
call
push
mov
sahf
lret
rclb
and
sti
pop
sub
pop
add
cli
pop
xor
xchg
dec
pop
loop
lods
xchg
mov
mov
mov
in
sub
mov
and
mov
lret
pop
push
pop
and
movsl
dec
cmpsl
pop
bnd
xchg
icebp
repnz
push
cmp
test
das
or
xor
lds
pop
repz
hlt
and
notb
loop
scas
adcb
fisubs
push
js
cmpsb
jbe
jae
out
mov
out
inc
lods
cmp
frstor
movsw
out
loopne
adc
mov
je
xchg
out
mov
cld
push
and
dec
repz
shrb
lahf
jb
inc
sub
mov
dec
xor
mov
gs
aaa
daa
jmp
and
popa
int
xor
push
and
xor
add
xchg
test
fcoml
mov
pop
outsb
stc
jbe
mov
xor
dec
fdivr
cld
iret
xor
leave
imul
fs
push
dec
inc
repz
mov
and
adc
add
mov
fstpt
cmp
cmpsb
mov
jbe
fisubs
mov
jnp
aam
mov
popa
adc
int3
lret
adc
bound
and
jbe
push
jno
cld
idivl
sti
addr16
xchg
scas
mov
sbb
push
lods
scas
jge
fimull
cs
in
xchg
in
das
mov
jecxz
pusha
sbb
mov
xor
push
stos
pop
loop
xor
es
leave
into
push
adc
int
cmpsl
mov
mov
loope
in
or
pop
fldt
cld
add
int
jge
stos
cmp
cld
fistpl
adc
push
scas
ftst
int
sub
mov
stos
push
push
jbe
cmp
push
sub
pop
dec
or
cmp
xor
mov
flds
add
out
aaa
repz
test
in
mov
mov
fists
pop
pop
clc
xchg
enter
or
std
mov
aad
jl
jnp
aam
xlat
fs
outsl
add
sub
adc
enter
jbe
add
and
lahf
loopne
push
xchg
loop
insb
cltd
mov
cmpsl
xor
jae
jno
ret
and
out
xor
cs
mov
sbb
fistl
mov
notl
out
add
icebp
or
sub
push
insl
rcr
add
pushf
xchg
jl
test
xchg
jecxz
cli
lods
xlat
loope
inc
mov
pop
lret
mov
add
loop
ss
or
push
cmpsb
cli
daa
fimuls
faddl
scas
push
int3
pop
loope
mov
cs
arpl
clc
fsts
or
shr
repz
or
inc
icebp
cmpsb
cmpl
ret
scas
fbstp
ljmp
pop
cmp
dec
nop
pop
adc
dec
sub
icebp
or
jecxz
xor
xlat
cmp
lret
fwait
or
insl
fs
cmpb
mov
arpl
int3
out
hlt
mov
mov
mov
fs
les
ja
mov
clc
sbb
mov
movsl
push
or
fisttps
mov
jp
xor
xchg
cs
jge
mov
mov
enter
lock
xchg
int
outsl
push
stos
xor
repz
jnp
cmp
push
lahf
or
push
mov
into
addr16
jl
fistl
addr16
xchg
fisubrl
int
adc
negl
pusha
fs
mov
jns
jbe
arpl
mov
insb
mov
pop
scas
pop
in
dec
movsl
sahf
push
xor
out
xchg
push
std
stos
notb
xchg
jb
jae
pop
sahf
clc
sti
leave
inc
xor
rorl
cmc
mov
push
shl
add
mov
jns
xor
sbb
sub
out
sub
adc
cwtl
and
dec
xchg
pop
das
fimull
iret
lcall
sarb
jae
dec
mov
dec
icebp
cmp
in
dec
adc
pop
or
mov
inc
ret
sub
dec
pop
xchg
loop
nop
leave
mov
jmp
and
mov
fistpll
pushf
adc
es
inc
in
cltd
cmpsl
dec
jp
arpl
adc
adc
xchg
cli
xor
and
scas
sub
inc
adc
pop
xchg
inc
or
xlat
aad
adcl
inc
mov
es
mov
push
pop
das
cld
imul
dec
insl
addl
es
and
ret
in
sbb
push
mov
sbb
jl
bnd
inc
sub
outsl
and
addr16
push
repz
daa
pusha
shlb
mulb
fcompl
aam
jge
imul
pop
and
mov
test
push
in
sub
mov
stos
adc
push
dec
and
insb
das
mov
pop
adc
aas
mov
out
add
dec
jo
out
mov
sub
or
fldt
std
add
xchg
xchg
or
jae
cwtl
xor
add
lahf
mov
neg
movsl
pop
pusha
scas
aas
mov
test
pop
mov
imul
jo
ret
xor
mov
sub
pop
test
sub
push
and
jecxz
cli
mov
sub
push
pusha
inc
sbb
sub
iret
fbstp
adc
jne
lds
adc
xchg
mov
dec
out
lock
dec
imul
pushf
popa
mov
ja
mov
shll
outsl
pop
fildl
aaa
ja
fldl2e
fldcw
ss
test
cs
jb
cmp
cli
push
sbb
jle
insb
xor
scas
dec
or
adc
inc
jg
lahf
repnz
movsl
pop
outsb
dec
cmp
ds
add
mov
cld
repnz
add
cwtl
mulb
loop
add
pop
mov
movsb
shrl
ja
adc
scas
pop
jb
adc
dec
xor
sub
lret
call
out
adc
push
mov
mov
mov
push
cmpsl
shlb
sub
cmp
pop
mov
fs
push
cs
xchg
adc
jb
lods
sbb
stos
imul
lods
mov
lods
out
addr16
fdivrl
jns
jo
popl
shrd
stc
mov
mov
gs
movl
outsb
lods
pop
push
sbb
pusha
dec
xor
inc
aaa
push
xchg
push
adc
lcall
mov
add
push
rcrb
neg
xchg
dec
fs
push
mov
pop
sub
dec
xchg
push
or
jns
sbb
jne
lea
inc
lahf
leave
shlb
fdivrs
mov
mov
mov
arpl
and
pop
pushf
lea
insb
pop
in
jae
inc
sub
mov
inc
add
and
lcall
test
mov
icebp
or
test
movswl
jle
sub
pop
dec
xor
dec
es
fsubrs
xchg
addl
jne
sbb
les
cmp
nop
in
cmp
jb
jns
pop
mov
and
pop
push
cmpsb
cmp
pushf
js
or
xchg
cltd
mov
cmp
cltd
mov
inc
int
lret
xchg
dec
je
pop
dec
push
lret
mov
vrsqrtps
mov
cld
sbbb
mov
mov
mov
inc
shl
out
pop
lret
in
jbe
or
adc
stos
push
mov
lods
fadd
subl
and
adc
lds
cmp
push
scas
mov
dec
pop
nop
lret
sub
std
xor
sahf
cmpsl
jg
ret
ficoms
xchg
adc
lock
mov
or
push
dec
inc
inc
pop
xchg
lahf
sub
cmp
pop
xor
xchg
out
clc
sbb
add
xchg
outsb
es
sub
adc
loop
dec
mov
faddl
lea
inc
inc
xchg
imul
lret
xchg
arpl
insl
jno
push
aam
sahf
sub
mov
push
push
sbb
fs
jo
insl
xor
sub
and
cmp
jmp
lcall
xchg
mov
lret
or
mov
fcoml
outsb
inc
jl
test
mov
pop
fdivrs
sbb
icebp
rcr
out
nop
cwtl
pop
sub
dec
add
push
int
lds
sub
mov
sbb
sub
mov
add
pop
xchg
out
rorb
sub
addr16
dec
mov
cmp
stc
jp
outsl
jl
push
xor
mov
pop
xchg
adc
mov
pslld
inc
adc
xchg
add
sub
aad
insl
fsubp
xchg
adc
jmp
cwtl
xorb
push
cmp
xchg
mov
out
sub
repnz
or
cld
iret
cmp
dec
daa
inc
adc
stc
daa
sub
into
or
and
int3
rorb
ljmp
mov
or
lods
xchg
and
inc
popf
xchg
sub
jb
insl
stos
test
jne
push
dec
das
scas
icebp
mov
outsl
jns
aad
add
ds
push
cmpsb
dec
jle
adc
cmp
shrb
add
cmp
jmp
aam
jmp
add
xchg
xchg
inc
cmp
jae
pop
fcompl
sbb
sbb
xchg
fs
int
pushf
mov
roll
xchg
ret
push
xrelease
add
ficompl
inc
mov
and
lds
popa
pop
data16
mov
cmpsl
lcall
rcrb
push
and
loopne
dec
xchg
and
int
add
mov
fidivrs
inc
add
mov
ret
shrb
sub
les
add
push
dec
cli
jns
lea
mov
sbb
into
in
popa
inc
cmc
sbb
mov
rclb
or
xchg
push
sbb
sbb
sub
int
xor
push
mov
xchg
loopne
sbb
daa
mov
push
scas
xor
add
decl
enter
add
dec
lds
into
pushf
inc
test
xchg
rcrl
xlat
push
fcomip
fldcw
gs
cmp
jp
push
stos
xlat
movsb
pushf
mov
dec
mov
jne
std
imul
outsb
sbb
daa
adc
jecxz
es
insl
insl
adc
add
mov
lahf
hlt
inc
ljmp
fcomi
flds
out
sarb
sarb
jge
mov
cs
or
jb
mov
mov
movsl
add
es
insb
pop
popf
mov
xor
sub
lcall
mov
movsb
test
imul
cld
daa
imul
stos
loope
xchg
sub
mov
imul
xchg
stos
les
lock
pop
ret
pop
dec
push
xchg
bound
sbb
ja
xor
dec
fidivl
es
andb
mov
push
out
iret
in
in
lea
sti
xchg
xchg
sub
mov
pop
int3
out
and
push
mov
mov
shll
xchg
imul
dec
sub
pusha
xchg
in
push
adc
sbb
bound
mov
outsl
xor
xchg
lods
imul
scas
outsb
adc
pop
or
fisttpll
push
jg
mov
add
cmp
arpl
and
les
mov
xchg
shll
aaa
sbb
into
sub
aas
cmpb
mov
outsl
sbb
jns
inc
arpl
repnz
push
and
mov
mov
stos
mov
hlt
test
cltd
dec
movsb
mov
jmp
mov
dec
clc
clc
fs
in
dec
loope
mov
push
fistps
jg
hlt
push
mov
mov
sbb
icebp
fwait
jge
jne
sub
repnz
out
cmpb
or
cmp
add
js
inc
out
fwait
jp
popa
cmc
add
dec
sub
fimuls
mov
cwtl
sahf
out
adc
mov
inc
mov
jns
or
dec
addr16
ja
scas
call
arpl
jmp
test
pop
div
mov
stc
stos
push
bound
lods
in
orb
or
cwtl
inc
xor
and
movsb
stos
psubw
gs
mov
adc
lret
or
imul
int3
dec
sub
inc
push
inc
test
fistpll
enter
neg
jp
add
dec
and
xchg
es
rcr
add
xchg
jg
xchg
jne
rcrb
aad
fildl
xlat
decb
push
push
push
xor
push
test
adc
daa
leave
pop
fbld
lea
pop
xchg
test
mov
sbb
jecxz
in
pop
je
push
mov
dec
fadd
lret
push
adc
cmp
push
push
xchg
xchg
lcall
cmp
xor
sarl
jb
test
in
decl
leave
add
push
in
xor
pushf
inc
mov
pop
mov
push
les
cmp
push
xchg
gs
inc
in
inc
rcrb
add
inc
sbb
lods
fdivrl
or
xchg
lods
cmpsl
nop
mov
mov
mov
xorb
mov
jle
sahf
ja
inc
and
cmp
sbb
cmpsb
sub
ret
test
test
mov
xchg
jne
jb
or
ret
adc
insb
fsubs
shlb
clc
enter
movsl
lea
adc
sub
lods
push
mov
push
adc
ja
xor
stos
cmpl
jns
xor
xor
adcb
sbb
xor
adc
mov
xchg
mov
aad
xor
out
in
jbe
push
insl
sub
jmp
xchg
xchg
inc
sbb
jp
dec
out
push
sbb
iret
cs
js
ja
cwtl
xchg
pop
leave
dec
les
aaa
pop
test
jae
adc
xorl
sbb
pop
lods
popa
arpl
jnp
pop
pop
sub
cwtl
fs
pop
jbe
cli
stos
lret
call
pop
testl
xchg
push
out
xchg
cmp
pop
mov
sbbb
sti
sti
test
mov
out
mov
xchg
xchg
icebp
and
or
test
popf
jg
mov
push
stos
in
pop
loope
xlat
cwtl
repnz
pusha
push
push
dec
mov
gs
lret
rclb
pop
xchg
jle
lret
xchg
adc
xor
push
in
and
fisttps
ljmp
jg
ds
push
movsb
inc
addr16
push
adc
popf
pop
ret
add
dec
xor
cmc
lret
pop
lahf
mov
mov
movsb
adc
push
cmp
arpl
jecxz
mov
add
outsl
jmp
xchg
push
cmpsb
jno
shl
lds
xchg
xchg
xchg
and
lret
or
and
mov
push
fdivs
leave
jle
cmp
outsl
ret
cltd
jae
push
icebp
pop
jne
ret
test
cmpsl
icebp
shll
sub
inc
divb
add
leave
mov
andl
femms
mov
stos
movsb
pop
xor
cmp
out
adc
ss
or
mov
mov
and
mov
or
push
rolb
push
loope
into
dec
add
sub
ja
sub
ss
je
in
xchg
imull
fiaddl
and
nop
scas
out
adc
repz
cmp
xor
leave
push
or
inc
js
out
sbb
js
loope
je
mov
arpl
mov
mov
and
adc
fnsave
js
mov
dec
xchg
lret
or
je
int
add
or
ds
or
in
out
dec
popa
or
mov
sub
pop
loopne
mov
sbb
addb
xorb
mov
push
loope
cld
insb
push
fimuls
adc
bound
push
inc
dec
scas
loop
test
inc
mov
out
and
jnp
js
lods
imul
jmp
inc
in
das
pop
scas
idiv
xchg
insb
mov
arpl
pop
gs
sahf
movsl
pushf
adc
lea
dec
pushf
loop
jmp
das
jp
adc
imul
sahf
fildll
mov
sbb
out
subl
mov
dec
inc
sti
push
dec
cmp
dec
mov
xchg
sahf
shr
mov
cmp
loope
sahf
sbb
sub
in
ljmp
stc
in
stos
cmpsb
movsb
cwtl
clc
inc
lea
rol
pop
adc
cld
sub
jbe
test
inc
pushf
popf
or
sub
popa
shrb
xchg
lods
mov
jne
push
inc
fst
sub
pushf
sbb
jns
js
fidivrs
adc
addr16
cld
ja
out
popa
cld
ret
adc
hlt
xchg
cmc
push
and
xchg
sbb
scas
cmp
mov
movsb
test
sub
xchg
cld
ficompl
ficoms
and
ja
push
jbe
mov
fs
pop
jl
cld
in
and
xchg
mov
mov
sti
out
das
mov
call
popa
nop
in
imul
sbb
jne
xchg
insl
cmp
cmp
repnz
inc
pop
cmpsl
cwtl
subb
je
arpl
push
cs
dec
lret
push
pop
pop
xchg
jno
pop
mov
cmp
in
xchg
pushf
idiv
pop
cmp
in
mov
nop
sub
xchg
scas
stc
push
xor
cld
or
out
fmul
fadds
sub
pop
cltd
mov
in
out
adc
inc
mov
int3
lahf
jecxz
fiadds
addl
cli
cmp
loope
push
test
imul
insl
push
dec
push
push
les
test
jmp
mov
xchg
jge
mov
aas
and
outsl
push
stc
int3
push
sbb
adc
shrb
stos
mov
mov
pop
mov
test
add
bswap
pop
mov
mov
stc
xchg
loopne
add
push
sub
shrl
cmpsl
fsubs
push
dec
call
imull
inc
mov
es
lods
inc
cwtl
xchg
add
pop
cltd
adc
or
out
dec
mov
loopne
dec
add
or
or
orl
pop
lret
iret
aaa
subb
fwait
clc
std
xchg
imul
jmp
dec
xchg
testb
lahf
jnp
and
jns
adc
mov
repz
ds
dec
sub
adc
iret
in
jne
jb
push
fs
insl
lret
jp
push
pop
push
insb
movsl
das
jne
or
sti
dec
jg
xor
in
into
scas
lahf
inc
push
jno
dec
add
dec
sub
enter
and
dec
fldt
xor
movsb
mov
adcb
adc
xor
mov
sub
jle
xchg
xchg
ljmp
cld
and
xor
mov
mov
mov
sub
mov
xchg
lcall
xchg
scas
mulb
pop
jle
jp
xchg
jnp
mov
ret
or
ret
jle
scas
insl
leave
in
add
popa
rolb
out
xorb
xor
dec
bsr
popa
add
jae
icebp
or
sub
add
sbb
adc
xchg
call
sub
and
bt
mov
icebp
and
cmpsl
test
sbb
xor
stos
inc
jo
out
stc
cmp
fsubrl
xchg
cld
outsb
dec
jae
jnp
repz
dec
cmpsb
mov
ret
adc
xor
jecxz
bound
dec
rcrb
or
mov
into
popf
dec
add
sbb
and
ret
or
aaa
sbb
add
jmp
pop
and
add
dec
mov
cmpsl
loope
pop
adc
jno
jl
dec
aaa
rorl
pop
mov
cld
xchg
sbb
fcoms
jg
js
test
stos
sbb
push
insb
leave
ja
xchg
add
mov
popf
mov
or
outsb
imul
sub
dec
enter
mov
cwtl
cmp
scas
jae
mov
and
rolb
adc
and
and
jno
push
stos
cmpsb
jmp
xchg
or
dec
mov
xchg
cmp
or
aam
scas
xchg
inc
scas
fldcw
dec
loopne
sbb
mov
adc
sub
xlat
into
inc
test
or
xchg
insl
insb
mov
add
or
nop
jbe
push
jge
inc
fiadds
xchg
lods
inc
fnstcw
movsb
xor
push
std
std
pop
in
jp
mov
pop
or
sub
push
sbb
lret
fdivs
enter
lods
inc
mov
lds
jge
andb
inc
jl
das
pop
mov
mov
mov
clc
and
sbb
adc
cmc
out
pcmpgtd
enter
lds
cld
mov
jbe
sarb
push
lods
ja
inc
imul
mov
inc
xchg
jp
cmpsl
into
add
in
outsb
cmp
sbb
fnsave
mov
add
fistl
pop
mov
loopne
lret
jmp
icebp
mov
and
ret
cmp
inc
lret
jecxz
nop
movsl
xor
int3
pop
rcll
sub
fcoml
aaa
mov
jae
ljmp
shrb
dec
repz
inc
sbb
cmc
out
daa
les
fldt
pop
lret
and
lods
adc
in
jle
inc
or
iret
ljmp
adc
std
rol
dec
mov
imul
aam
cmc
mov
xor
push
lds
std
pop
and
mov
cmp
movsl
fwait
ja
lds
jbe
cmp
add
add
jns
pop
cld
fldenv
mov
pop
sub
loopne
pop
xchg
test
jne
xor
cmpsl
ret
cmpsb
je
sahf
adc
out
movb
in
iret
iret
aam
or
dec
shll
stos
sbb
add
inc
pop
out
mov
xchg
std
fnstsw
in
mov
sbb
inc
outsb
push
in
adc
mov
xor
in
jne
sub
inc
push
jle
ja
sbbl
xchg
xchg
fcomps
and
cmp
out
inc
pusha
xor
ds
jne
jo
mov
add
push
mov
mov
cmp
das
cwtl
in
sbb
movsl
jnp
outsl
xchg
mov
push
sbb
inc
shrb
xchg
xchg
xor
icebp
jp
adcb
sub
cmp
jns
dec
pop
jmp
and
or
cmp
sub
mov
sub
scas
sbb
push
sahf
bound
adc
outsl
divb
js
lock
mov
das
cltd
out
pop
das
cmp
js
cmpsb
mov
push
fs
scas
cmc
jmp
adc
xor
in
xor
cmp
pop
sub
jecxz
dec
inc
sahf
inc
inc
mov
test
pop
or
push
out
fisubs
mov
fcmovb
xor
aam
mov
mov
pop
xor
mov
out
push
xor
push
adc
test
enter
ja
lcall
insl
jb
inc
icebp
jp
pop
add
mov
dec
ror
dec
adc
in
sbb
out
scas
neg
xor
push
or
nop
fstpl
jp
add
loop
mov
in
test
lds
rol
adc
imul
pop
je
enter
subl
inc
xchg
push
loopne
cmp
addr16
decl
inc
jnp
mov
out
leave
mov
sub
sti
mov
sbb
mov
jae
ljmp
pop
pop
daa
xor
mov
and
out
mov
enter
push
orl
mov
mov
push
mov
pushf
out
jl
jp
mov
sub
int3
es
mov
xchg
ret
jb
hlt
mov
pop
mov
outsb
jnp
test
cmp
mov
mov
sbb
mov
int
lret
adc
or
xor
ss
xlat
cmp
adc
hlt
out
loope
aas
lea
and
dec
loope
dec
and
mov
pop
add
pop
int3
bound
incl
lcall
out
repnz
pop
jl
push
mov
and
lret
dec
dec
jo
sbb
lods
push
mov
xchg
inc
iret
cmp
outsb
or
shl
mov
sbb
and
pop
xchg
lcall
out
rorl
inc
shll
es
nop
scas
jno
iret
repnz
push
push
ficompl
sti
sarb
inc
jns
adc
dec
popf
nop
cmp
xor
call
lea
push
insb
pusha
icebp
push
stos
fildll
jne
cmp
mov
pmulhuw
push
jo
hlt
jle
fcomps
push
fstpl
fstl
popf
ret
inc
mov
test
popf
lea
or
stos
in
testl
cmc
roll
mov
inc
xlat
in
push
lcall
sbb
inc
popf
pushf
clc
out
out
sbb
sbb
cmpb
mov
fisubrs
js
push
js
cmp
lret
lods
aam
es
cmpsb
sub
addl
and
pop
mov
and
add
push
dec
push
ret
mov
mov
dec
add
inc
push
push
scas
mov
jmp
mov
xchg
push
cmpsb
mov
adc
xchg
pushf
test
add
outsl
in
ds
mov
push
insl
sub
push
pop
cltd
fcmove
gs
ret
fimull
call
xchg
jge
cld
add
cmp
arpl
out
popa
gs
add
sub
pushf
xlat
pop
ficoml
inc
inc
pop
sbb
or
xor
sbb
jmp
subb
test
loop
jns
stos
ja
stc
sahf
imul
fcoms
sub
in
jb
jne
ffreep
pop
cltd
cld
or
mov
add
sbb
out
push
add
mov
stos
sub
js
cmp
rolb
xor
cmp
ret
pushf
ljmp
cwtl
sub
sub
sbb
add
xchg
push
jge
cmp
mov
loop
stc
enter
xchg
mov
mov
enter
sub
push
fwait
cmp
pop
pop
fistps
cmp
add
dec
pop
shll
es
xchg
cmpsb
arpl
adc
sbb
push
fs
inc
insl
jp
iret
das
fldenv
in
push
xchg
imul
push
stos
stc
popf
lods
lods
sub
mov
ss
pop
loope,pt
and
mov
rol
arpl
pushf
fcompl
xchg
icebp
jbe
ja
dec
pop
push
jnp
pop
xchg
fsubs
dec
enter
sub
fwait
xor
lock
cmp
xchg
scas
movsl
xchg
push
and
mov
mov
jb
xchg
imul
loopne
xor
xchg
fprem
lret
out
mov
sbb
movsl
mov
push
xchg
stos
arpl
jmp
fbld
cmp
cmpsb
mov
jnp
mov
int3
out
lcall
scas
sbb
leave
std
xchg
mov
inc
movsl
lcall
jg
and
lret
testb
pop
mov
inc
mov
pop
in
push
bound
daa
inc
pop
xchg
cmp
inc
loopne
inc
jmp
idivl
mov
mov
push
sub
xorl
repnz
loopne
nop
rol
ss
pop
or
push
xor
imul
add
jge
mov
cmp
pushf
int3
push
and
mov
mov
out
aaa
inc
sahf
and
xchg
sbb
imul
loope
jae
xor
test
mov
js
cmp
or
outsl
roll
pop
test
test
add
repz
xchg
fldenv
loope
push
xor
xchg
mov
push
in
mov
jb
outsl
adc
cmpsl
cmp
loopne
pop
adc
mov
cli
jecxz
leave
mov
adc
dec
clc
or
inc
std
mov
mov
cmpsb
mov
call
pop
jb
fidivs
pop
stos
cld
jge
push
loopne
xor
jb
pop
jl
inc
not
mov
and
xchg
mov
insb
sahf
lods
adc
data16
xorb
fwait
sti
cmpsb
pop
inc
xchg
dec
test
repnz
adc
test
fmuls
push
insb
lea
jp
ret
out
out
sbb
adc
cmp
cmp
das
rol
mov
pop
sti
sbb
push
mov
add
inc
fwait
dec
pop
scas
or
ficompl
call
icebp
in
test
xor
cmp
mov
cltd
sti
cwtl
jecxz
cmp
leave
enter
add
mov
hlt
cmp
add
in
jg
cmp
cmp
xchg
outsb
enter
testl
adc
clc
ds
jno
inc
mov
loopne
mov
mov
mov
add
clc
stc
xchg
cmp
pop
jae
test
inc
scas
xchg
sahf
push
and
and
arpl
dec
and
and
mov
mov
imul
lea
dec
dec
adc
int3
pop
int3
sub
iret
jns
repnz
jmp
sbb
ss
push
push
sbb
rcl
fcomps
jmp
jp
in
mov
mov
xchg
fcomps
cmpsb
dec
fs
outsb
mov
lahf
imul
pop
xchg
pop
jo
std
push
cmp
out
cmp
dec
sbb
push
addr16
sub
mulb
addr16
mov
dec
call
lahf
in
out
mov
cmpsb
cmp
cmp
fisubrl
dec
jne
mov
sub
loopne
push
xchg
int
push
sbb
add
fldcw
jmp
popf
sub
jo
pop
js
lea
jnp
jns
mov
in
enter
ret
mov
sub
into
out
lcall
ljmp
scas
sbb
mov
sbb
dec
pusha
mov
arpl
cmp
stc
aaa
adc
mov
jne
push
add
mov
adc
and
ljmp
lea
icebp
cmp
mov
fisubrs
pop
jb
mov
cmpb
sub
mov
inc
mov
cmp
mov
push
xchg
push
imulb
push
add
rclb
hlt
adc
in
adc
ret
sub
out
fstl
shlb
jnp
fisubrs
lods
jg
call
inc
or
jb
xchg
adc
rol
in
sbb
mov
and
mov
xchg
orl
fidivs
jle
sbb
jmp
xor
sbb
cmp
mov
outsl
xor
lret
sbb
pop
in
ss
out
jl
ds
jns
fsubrs
sub
adc
push
jbe
jle
dec
xor
cmp
push
mov
mov
jno
dec
push
ret
aad
xchg
insl
sub
cmc
mov
xchg
lock
adc
xor
mov
xchg
stos
das
popa
daa
sub
sub
jno
mov
mov
add
mov
adc
xor
adc
pop
mov
pushf
stos
sbb
push
push
pushf
aam
shll
lea
out
and
or
sub
lods
ret
inc
cmp
sbb
dec
jnp
adc
sub
pop
xor
sahf
sub
inc
lret
jbe
inc
insb
push
sub
xchg
xchg
pop
adc
and
mov
popa
adc
test
sub
int
les
in
cmp
pop
adc
movsl
push
gs
pusha
jo
inc
and
loope
pushf
icebp
adc
in
icebp
arpl
mov
sbb
loopne
adc
adc
scas
fwait
jmp
dec
adc
out
xchg
dec
inc
cmp
pop
inc
aam
out
xor
loopne
sub
add
scas
int3
into
mov
inc
adc
data16
cmpsb
or
fisttpl
inc
negl
jb
in
jecxz
sbb
and
or
fld
pop
and
jg
addb
inc
sbb
jmp
sub
mov
std
imul
push
andl
imul
fisttps
mov
cmp
repz
jno
mov
ds
paddw
pop
ds
sub
and
dec
sbb
imul
dec
int3
cmp
daa
shl
sarl
cmp
cwtl
or
or
scas
mov
add
dec
jg
out
aas
hlt
and
clc
fwait
sub
or
imul
add
push
pushf
adc
icebp
mov
jl
sbb
push
out
or
inc
jge
xor
fsubl
insl
xchg
adc
cwtl
lds
mov
mov
adc
std
mov
gs
add
inc
dec
xlat
fnstcw
pop
push
jbe
dec
stos
ret
xor
xchg
movsb
dec
and
repnz
jb
mov
dec
fdivs
call
xlat
clc
mov
dec
mov
and
sub
js
lret
jo
mov
sbb
ficomps
pop
sub
jne
inc
rol
in
lods
fs
idivl
mov
loop
scas
sarb
mov
sbb
ss
adc
loop
nop
dec
ret
xchg
push
clc
daa
mov
mov
pop
js
adc
dec
xchg
pop
fsubp
cmp
testb
jmp
aas
pop
cmp
out
or
fwait
push
push
pop
pop
lret
lahf
push
sub
sarb
stc
pop
scas
jno
test
xchg
xor
pop
call
cmp
test
jge
inc
push
or
cmp
fsubrl
std
lock
std
inc
mov
mov
jae
xchg
jbe
mov
add
out
mov
out
jmp
add
cmc
mov
scas
es
jb
xchg
fadds
loopne
daa
inc
enter
jbe
stc
lret
mov
data16
inc
loope
push
xchg
add
movsb
lods
lods
insl
adc
or
mov
enter
sub
shll
out
jle
pop
push
dec
les
adc
dec
or
dec
lds
add
mov
mov
jle
orb
jne
jmp
jo
mov
insb
scas
ret
jb
out
ret
mov
sbbl
adcb
nop
in
and
bound
pop
xchg
and
inc
lds
pop
sub
mov
rcr
rcrb
mov
inc
and
mov
inc
nop
and
cmp
inc
push
cs
jl
mov
inc
sbbb
add
mov
lods
inc
xlat
mov
dec
leavew
sub
cld
movsb
addr16
mov
test
or
fbstp
mov
add
cmp
pusha
or
inc
or
loopne
pop
pusha
push
xchg
fsts
pop
push
and
mov
mov
or
push
pop
cmp
sarb
mov
push
in
stc
jge
mov
jp
mov
sub
sahf
and
gs
mov
dec
out
dec
inc
mov
pop
cmp
xchg
fwait
dec
mov
lods
cmpsb
js
cld
inc
push
das
insb
notb
rcl
push
mov
fnsave
mov
adc
add
add
out
pop
rorl
subl
xor
retw
fldcw
and
sub
outsl
pop
add
insb
sbb
and
pop
outsl
mov
mull
fisubs
jge
imul
incl
fildl
mov
cmpsb
sar
sbb
sbb
mov
inc
fbstp
inc
inc
dec
lcall
fs
push
ficompl
fstps
notl
into
ret
testb
ret
adc
in
sti
mov
pop
mov
push
push
xchg
in
mov
popa
mov
pop
clc
cmpsb
jno
xor
orl
roll
or
aad
enter
je
and
in
cmp
mov
imul
mov
outsl
outsb
add
imul
lea
xchg
cmp
jp
imul
jge
imul
mov
out
iret
rcrl
lret
out
shll
test
nop
pop
xchg
xchg
rorb
cmp
jp
movsb
out
rorb
adc
sahf
aaa
lret
lcall
xchg
addr16
adc
pop
mov
std
and
aad
pushf
xchg
sub
enter
push
xchg
add
shlb
loop
push
jecxz
sub
push
mov
sub
lret
pop
adc
xchg
icebp
sub
shlb
lea
xchg
or
jne
test
jo
mov
xchg
test
dec
xor
gs
adc
jp
pop
es
add
inc
sub
sti
mov
jge
jae
jns
dec
cmp
push
mov
jns
leave
lds
in
sti
ret
test
pop
add
shll
or
out
mov
lods
mov
cli
jae
lret
adc
test
or
int3
aam
sbb
sahf
dec
cmp
mov
pop
jnp
adc
ret
push
jle
cmpsl
int
sbb
mov
push
and
mov
jae
inc
mov
jne
jb
inc
call
test
xchg
mov
mov
pop
mov
inc
out
mov
xor
push
push
pop
xchg
stos
add
xor
ret
adc
out
inc
clc
xor
mov
ret
fisttpl
mov
inc
popa
xor
je
adc
call
sarb
lea
call
lods
lds
dec
lods
cmp
push
xor
adc
loope
pop
ljmp
sahf
cmp
mov
dec
ficoms
out
repnz
dec
jl
cmp
lods
pop
add
or
cwtl
add
dec
loope
inc
add
dec
xor
int3
adc
dec
jb
xchg
sbb
cltd
ja
scas
or
xchg
mull
lea
cmovno
push
inc
enter
popf
dec
cmp
and
jecxz
mov
xchg
pop
xchg
mov
or
jg
int
outsl
sbb
mov
ss
cmp
lcall
mov
stos
mov
mov
aad
inc
and
jmp
dec
adc
sub
lret
mov
int
cmc
or
movsb
inc
mov
idivl
mov
pop
lods
leave
scas
pop
adc
pusha
jl
and
ss
andl
mov
test
in
mov
mov
push
cmpsb
or
movsl
sub
inc
mov
xchg
cwtl
mov
push
or
mov
add
push
stos
inc
pop
xor
or
mov
mov
iret
jns
bswap
sarb
stc
testl
xchg
into
xor
dec
pop
ficomps
movsl
insb
rorb
daa
push
shlb
inc
inc
ficomps
add
push
iret
push
iretw
dec
mov
dec
xor
and
jo
lahf
outsl
pop
out
mov
imul
shll
shlb
sub
cli
into
jmp
ret
stc
fldcw
rclb
lds
daa
cs
in
mov
in
jo
push
addb
jp
adc
jle
ret
mov
rcrl
and
pop
dec
prefetch
or
dec
add
cwtl
add
shld
rcrb
xchg
out
mov
subb
and
insl
and
js
sbb
push
out
add
mov
mov
fiaddl
iret
mov
mov
repnz
popa
fs
stos
fildll
or
stc
outsb
or
decl
add
mov
out
sbb
cmp
or
mov
push
lcall
adc
adc
and
xchg
push
xor
push
and
mov
jecxz
jge
nop
adc
cmp
outsb
sub
sbb
enter
and
sbb
shrb
nop
js
aas
mov
pop
mov
shl
cli
sarl
lcall
aas
xor
idiv
jo
aaa
outsb
mov
ret
push
push
jecxz
mov
push
xchg
sti
loop
addb
cmp
mov
imul
pushl
xlat
dec
mov
pop
add
stc
or
test
sub
lcall
or
out
xchg
mov
xchg
xlat
xchg
jo
mov
inc
push
adc
inc
hlt
aas
adc
mov
gs
repz
test
jecxz
rolb
stos
sbb
in
push
rcl
stos
cmc
pop
and
rcll
sub
out
cmp
int3
pop
test
js
cmp
mov
cmp
stc
sar
cwtl
popa
push
cmp
repz
lret
test
cltd
fmuls
fldcw
xor
mov
jb
and
sbb
std
pop
xchg
xor
mov
mov
mov
insb
fs
outsl
out
int3
fsubrs
mov
sub
loopne
sub
arpl
add
sub
sub
scas
test
dec
or
cmp
and
sub
xchg
shr
into
pushf
mov
sbb
test
xchg
add
push
xchg
ficompl
dec
add
jno
push
mov
popa
cltd
andb
lcall
push
fnstcw
fwait
les
js
xchg
lods
stc
dec
imul
dec
jnp
ds
cmp
and
nop
jns
jecxz
add
rcl
int
ret
sub
fiadds
and
xchg
loop
lret
data16
sti
sbb
out
and
push
in
call
iret
inc
ljmp
fcomip
sbb
inc
mov
adc
mov
pop
cld
scas
incl
fucomp
xchg
fnstsw
jbe
or
sarl
dec
mov
and
sub
mov
mov
push
sbb
sbb
or
push
test
xchg
idivl
mov
cld
cwtl
loope
cwtl
adc
clc
pop
add
cmc
test
mov
lahf
cmpsl
insl
clc
out
scas
xor
cwtl
nop
insl
repnz
iret
mov
pop
test
ja
rorl
mov
arpl
sub
lods
push
loop
pop
jge
mov
loop
fsub
ret
inc
sar
xchg
shll
push
push
sbb
dec
or
flds
call
mov
idivb
dec
sub
or
movb
sbb
cmp
leave
fwait
inc
les
sub
shr
add
inc
cli
and
and
lret
cwtl
mov
iret
xchg
dec
inc
and
movsl
fdivrl
fnclex
adc
or
and
xor
cmp
and
rorl
mov
pusha
int3
fwait
xchg
aaa
int3
or
insb
or
pushf
das
mov
add
in
jl
xlat
push
inc
jge
mov
xor
push
sahf
mov
jl
faddp
pop
adc
xorl
loop
jecxz
push
xor
cmp
je
mov
dec
cmc
mov
inc
sahf
mov
xor
int
out
dec
popa
add
sub
loope
gs
or
int
cli
sbb
sub
push
pop
gs
inc
ficomps
nopl
bound
repnz
cld
push
add
xor
js
shrl
imul
push
xor
fmul
inc
or
or
adc
mov
jl
jecxz
ret
or
xor
mov
xacquire
jo
out
insl
cmp
pop
ret
and
cmpsl
mov
je
stc
dec
jle
sub
stos
push
mov
mov
pushw
movsl
adc
mov
je
mov
nop
fimuls
adc
sti
sub
inc
test
ficoms
push
adc
fists
mov
push
out
pop
ficoml
jp
int
nop
push
xchg
fisttpl
mov
aas
jmp
push
sahf
xor
push
lcall
mov
fistps
xor
jnp
aam
mov
or
mov
jge
mov
cmp
js
jg
pop
mov
mov
mov
lret
push
cmpsl
xchg
gs
shl
push
shl
inc
cmp
pop
xor
sti
mov
sbb
sbb
repz
mov
add
fdivrp
pop
mov
addr16
in
orb
dec
sub
mov
stos
adc
test
cwtl
jae
stos
xor
lahf
aad
es
daa
out
adc
mov
inc
xlat
scas
loop
int3
ret
jge
fists
cmp
faddl
jp
vpshlb
jbe
mov
pusha
xchg
jns
mull
andb
iret
xor
addr16
ret
lea
fucom
nop
inc
cmp
mov
std
sbb
pop
push
mov
mov
cmp
push
popa
test
in
adc
push
mov
bound
cmpl
jno
pushl
repz
inc
xor
sub
loopne
jb
xor
push
pop
cmp
jo
sub
leave
or
fisubrl
stc
iret
push
mov
ja
push
ret
sub
mov
lea
addr16
in
add
cmpsb
add
mov
rorb
cmpsl
adc
push
adc
icebp
rcrl
mov
repnz
ljmp
pop
fcomps
stc
cmp
xchg
sub
mov
jae
and
es
sbb
dec
stos
add
mov
mov
push
les
sti
xchg
packuswb
sti
mov
jmp
push
insb
xchg
pop
outsb
iret
mov
jb
ss
je
lock
fdivs
out
icebp
das
test
loope
pop
ja
orl
jae
bound
in
or
addr16
ja
fwait
and
xchg
pop
push
jl
in
flds
or
shll
sub
xchg
sbb
lea
iret
push
xor
inc
adc
and
xor
addb
and
mov
out
jne
or
mov
insl
jmp
lret
arpl
psrlq
adc
cwtl
arpl
push
js
in
cmp
es
fcmovb
add
sub
push
sbb
xchg
jno
push
cmp
or
pushf
out
lahf
and
rcrb
gs
mov
into
sbb
aam
push
test
loope
mov
mov
in
xchg
es
scas
dec
xor
or
arpl
adc
insb
enter
and
loope
lret
pop
cmp
shll
adc
xor
fdivs
ds
push
pop
shrl
jl
enter
mov
adc
test
roll
jbe
lock
xor
inc
xor
adc
push
cmpsl
sbb
pop
inc
repnz
imul
mov
fwait
sub
push
test
or
dec
loop
and
fstps
aas
and
push
lock
mov
lahf
xor
mov
jp
roll
xor
das
sub
jecxz
mov
jb
add
xor
test
cmp
lea
hlt
sbb
cmc
xorb
adc
push
sbb
and
je
in
pop
mov
sbb
lret
aaa
fistps
inc
add
es
addr16
fisttps
sbb
cmpsb
sbb
mov
push
sbb
sub
fstpt
dec
adc
pop
push
popa
rcll
or
pushf
and
arpl
add
sub
loopne
les
adc
lock
into
sub
or
lds
nop
shr
xchg
rcrb
lret
adc
inc
pusha
loope
and
test
pop
sbb
jno
loopne
mov
mov
sbb
or
jne
push
dec
mov
push
lret
mov
aad
test
xchg
jmp
mov
xchg
jo
aam
lret
lock
jnp
fs
popa
push
shlb
pop
fcmovne
pop
hlt
add
and
dec
mov
push
mov
ret
mov
gs
mov
cmpsl
bound
ret
mov
mov
out
pop
xor
jb
add
jle
mov
stos
xor
ret
adc
push
movsl
add
rcll
rolb
adc
outsb
sbb
test
sub
ja
dec
cmp
pop
or
dec
stc
ljmpw
pop
test
and
jns
pop
adc
scas
rcl
mov
sbb
cwtl
fwait
es
movsb
cmc
adcl
cmp
cmpsl
mov
fistps
push
test
outsl
push
inc
mov
aaa
dec
fldt
ljmp
adc
mov
xchg
and
mov
mov
notb
lock
cs
rcrb
shrl
gs
ja
sub
xor
pop
addr16
mov
repz
lods
dec
adc
aaa
leave
lret
push
repz
or
inc
not
leave
arpl
divb
add
in
jl
dec
xor
stos
sub
cltd
pusha
dec
insl
pop
inc
test
dec
mov
xor
add
lret
imul
fcmovnbe
addb
sub
adc
lcall
mov
jbe
pop
mov
outsb
mov
pop
hlt
lods
out
adc
repz
jle
pop
and
enter
xchg
xchg
inc
rol
lods
lahf
test
scas
cmp
jno
rorb
add
xchg
out
push
stos
iret
fwait
cli
clc
jo
mov
sarb
mov
jp
aad
aad
mov
fsubr
imul
cmp
enter
add
fdivr
lahf
xchg
jg
jge
loopne
out
sti
movq
ret
mov
pushf
test
add
adc
adc
in
out
fistl
jmp
mov
imul
sub
sub
in
in
shll
mov
mov
dec
loop
imul
or
bound
scas
mov
aam
jno
inc
mov
cmpsl
push
xchg
es
push
out
lds
push
gs
inc
xor
scas
push
pop
inc
sub
push
fiadds
negb
cltd
pslld
add
daa
dec
inc
add
or
shlb
xchg
jns
and
sub
mov
scas
mov
ja
sub
xchg
dec
cld
xor
jp
arpl
mov
bound
fsubs
daa
out
iret
movsb
sub
scas
aaa
pop
into
pop
insb
dec
xorb
mov
xchg
ss
pop
nop
jne
call
sub
and
pop
mov
fimull
into
inc
in
cmp
fcomps
xchg
sub
js
jmp
cmpsb
push
fcoms
pop
ja
fstpt
or
lds
cmc
mov
pop
jnp
xchg
lcall
mov
and
jg
xchg
pop
ss
sbb
sarl
jmp
or
testl
cld
loopne
subb
jecxz
out
stos
in
arpl
sub
repz
sar
aam
adc
and
push
das
cli
push
and
js
testb
push
fwait
imul
int3
ja
das
cmpl
jle
dec
in
lret
enter
test
push
or
inc
int
lods
xchg
movsl
ljmp
add
inc
cmp
lock
aas
mov
cmp
or
mov
jl
in
mov
lret
aas
aaa
or
movsl
aas
sub
pop
int
jo
mov
test
xchg
pop
mov
or
mov
aaa
dec
adc
or
or
inc
cwtl
mov
mov
outsb
test
fcoml
loope
setns
pusha
mov
push
pop
out
or
add
cmc
cld
jns
enter
pushf
xchg
pop
repnz
scas
rolb
and
out
mov
rorl
outsb
cmc
jno
and
inc
fiaddl
mov
ret
xor
cmpsl
push
pop
lock
shlb
cmp
jp
inc
add
fildll
sbb
mov
mov
mov
sub
out
testb
push
add
fwait
cmp
fistpl
rorb
push
lahf
dec
add
jg
pop
or
mov
sbb
push
cwtl
pop
jmp
pop
test
and
out
je
dec
adc
lods
xchg
inc
andl
arpl
je
push
jp
nop
cmp
xor
repz
pop
sbb
or
sub
add
nop
stos
popf
jne
insb
jbe
sub
ds
lds
test
adc
fwait
out
lcall
pop
fistpll
mov
popa
pop
xchg
clc
or
test
loop
popa
jmp
arpl
jg
adc
dec
lds
aad
jg
in
fidivl
frstor
jo
cmp
out
idivl
lret
outsb
lods
add
mov
or
push
in
pop
dec
fs
sarb
scas
or
lcall
add
sbb
popa
sub
repz
movsl
rolb
in
and
cmp
insl
outsb
rolb
push
sti
xor
cmpsl
es
add
sbb
and
push
push
fidivrl
imul
or
cmp
stos
clc
push
aad
out
sub
sub
pop
push
push
dec
fwait
clc
push
jne
mov
lahf
add
xor
inc
repz
outsl
lea
js
lcall
lahf
arpl
mov
rorb
inc
popa
cmp
pop
pop
push
int3
add
xor
notl
jge
mov
in
inc
clc
pop
cs
sbb
lret
cmp
jmp
or
inc
lret
add
pop
cld
mov
xchg
mov
push
mov
pop
fstp
push
xor
sahf
sbb
enter
insl
sub
aaa
push
xlat
fcomps
inc
xchg
sbb
xor
and
add
mov
scas
jl,pn
adc
sub
shlb
xchg
adc
mov
jge
adc
pushf
jecxz
ret
xchg
mov
or
fsts
mov
rcrl
xchg
cli
arpl
or
fists
xor
or
lods
inc
push
dec
pop
cld
test
cli
jb
mov
repnz
jb
lods
or
mov
dec
je
int
gs
mov
shlb
xchg
test
test
mov
fisttps
jmp
jmp
leave
mov
insl
shlb
or
sbb
divb
imul
sbbl
pop
movsb
aad
and
mov
pop
jne
cmp
stos
push
jp
popa
jb
popa
mov
inc
pop
mov
loopne
mov
andl
das
ficomps
or
popl
adc
es
mov
mov
ret
outsl
mov
cld
jb
mov
xor
xchg
cltd
insb
adc
jae
rsm
mov
xchg
push
stos
adc
out
jle
loopne
fcoml
pop
mov
icebp
lds
das
loope
daa
fwait
sbb
test
in
pop
stc
sub
decb
cwtl
pop
loope
lahf
aam
xlat
xor
and
sbb
add
addr16
int
cld
xlat
inc
bound
mov
mov
sub
iret
dec
push
subb
mov
lods
jno
movsb
inc
flds
jmp
add
stos
jb
pop
xor
movsb
enter
pop
repnz
mov
jg
fistps
sub
add
or
xchg
jb
in
push
xor
ss
fmuls
stos
fs
ret
loope
std
icebp
and
lahf
or
push
sbb
lahf
mov
push
inc
pop
flds
mov
jp
or
aad
xchg
xchg
ret
add
arpl
xor
pop
fdivp
jae
or
pop
testl
outsl
jnp
sbb
push
out
shl
test
enter
mov
movsl
aas
or
out
sbb
mov
mov
mov
call
mov
xchg
fcoml
sub
inc
in
xchg
jno
dec
daa
nop
mov
stos
pop
jno
and
in
push
push
mov
pop
mov
push
sarb
lea
int
xchg
mov
fildl
iret
icebp
xchg
jbe
jno
mov
sub
movsb
mov
in
arpl
pusha
cli
dec
in
inc
xlat
xor
aam
push
mov
in
mov
adc
jno
test
movl
xor
adc
imul
pushf
or
das
pop
mov
push
jae
dec
mov
insb
sahf
push
cli
push
imul
adc
ss
lret
pusha
repnz
inc
cmpsb
mov
arpl
jbe
sbb
lds
inc
add
das
out
mov
xchg
jg
sbb
push
imul
lock
pusha
cmc
push
jne
xor
push
fidivl
inc
xor
adc
repnz
popf
dec
rolb
dec
push
addr16
and
icebp
push
jl
push
sub
jl
into
sbb
jle
mov
mov
cmc
fmuls
shl
or
xlat
jge
mov
pop
add
pop
loope
shrl
mov
fs
xor
data16
es
icebp
and
lods
aaa
and
dec
xor
gs
push
rol
push
xchg
mov
jno
add
and
xchg
std
jae
push
lahf
add
jmp
inc
je
and
nop
mov
popl
fwait
cli
std
outsl
mov
jbe
xchg
loopne,pt
fs
adc
insl
pop
outsl
inc
sub
and
notb
sub
aam
in
jle
add
stos
push
out
in
ret
pop
cmpsb
lahf
mov
xchg
and
mov
rcrl
data16
xchg
inc
jmp
lcall
cmp
in
sbb
add
repz
mov
jge
dec
iret
lahf
movsb
int
loopne
cmp
or
pushf
inc
hlt
pushf
loopne
inc
lods
stc
and
mov
sbb
push
push
subl
call
cwtl
lcall
dec
ja
andps
pop
shll
int
xchg
mov
loopne
mov
lock
in
lock
cmpsl
add
dec
cmpl
lret
ret
je
mov
xorl
addr16
pop
mov
imul
repz
repz
cmpsb
mov
ss
aad
sub
push
mov
sbb
loop
xor
jmp
pop
sbb
aas
or
dec
aaa
sub
pop
push
out
mov
dec
les
adc
mov
nop
icebp
xchg
shrl
mov
fs
imul
add
xchg
stos
push
ret
dec
sti
push
cmp
sub
or
mov
lods
mov
push
rorb
inc
pop
in
push
add
push
or
ja
mov
push
sti
hlt
xchg
int3
push
in
add
repz
fwait
iret
pop
andb
lret
adc
xor
test
mov
mov
and
divb
jbe
lahf
in
xor
push
mov
sbb
lret
adc
out
and
in
movsb
push
outsb
loop
sti
arpl
xor
int3
scas
pop
mov
xlat
dec
cld
push
sbb
stc
lcall
adcb
push
mov
dec
aas
cmp
pop
add
popa
or
pop
iret
cmp
mov
cmpsl
stos
xchg
lods
setp
insl
and
lret
pop
add
int
idivl
scas
outsb
int3
jge
fistpl
mov
xchg
pop
xor
xchg
sbb
ss
ja
test
daa
dec
mov
shlb
lds
xor
pop
xor
sub
dec
or
mov
mov
cmp
mov
adc
inc
fsts
stc
cmpsl
cld
pop
jmp
repnz
push
rolb
lea
inc
inc
inc
imul
fldenv
jne
outsl
xor
cli
add
inc
fsubrl
mov
xchg
inc
insl
sbb
xor
in
xchg
testl
mov
or
inc
mov
cmpsb
sti
dec
pop
daa
jmp
mov
mov
pop
call
mov
fstpl
int3
out
shlb
or
push
jb
rorb
jae
mov
test
push
mov
mov
cwtl
icebp
addr16
xor
lret
inc
divb
nop
sbb
popa
data16
fst
mov
clc
xchg
testl
jns
mov
insb
lahf
sahf
xor
fsubr
repnz
clc
mov
mov
mov
xchg
add
sahf
xchg
push
sbb
jl
addr16
lret
pop
aam
cli
mov
push
fidivrs
push
sbb
mov
clc
int3
jge
jns
mov
or
pusha
mov
xchg
pop
mov
loope
mov
orb
popa
leave
mov
xchg
test
mov
dec
nop
push
pop
test
add
icebp
scas
sti
pusha
jae
pop
in
aad
mov
inc
xchg
stc
sub
pushf
mov
xor
bound
sahf
gs
daa
lds
arpl
sub
pop
dec
aam
or
rolb
mov
push
inc
sti
adc
and
sub
in
push
xchg
inc
mov
pop
ljmp
incl
adc
fisubs
insb
sbb
ret
loope
push
sub
mov
sbb
stos
xchg
dec
xlat
call
negb
pop
fmuls
mov
inc
cmpsb
sub
mov
sti
cmpsb
sbb
dec
rcl
mov
or
mov
inc
jge
loop
or
adc
or
mov
and
xor
movsl
cmp
jo
add
stos
aas
mov
jle
mov
mov
ror
inc
pop
mov
or
mov
out
cmp
sarl
mov
lret
fidivrl
fisubs
loopne
add
inc
loop
xor
das
xchg
shrb
sbb
mov
int
bound
push
fldenv
pop
stc
inc
jbe
rcrl
push
mov
leave
or
pop
pop
or
sbb
sub
mov
shlb
pop
repz
mov
mov
xlat
cli
adc
sub
or
test
subb
inc
fwait
jecxz
lds
sbbb
mov
stc
pop
jecxz
iret
mov
aas
pop
insb
xor
clc
loope
aad
push
mov
into
dec
inc
mov
inc
push
fstpl
mov
ror
mov
mov
jae
test
aam
cmp
movsl
inc
rcll
adc
pop
imul
rcl
fucomi
or
stos
xor
arpl
mov
movsbl
push
xor
mov
addr16
arpl
push
jo
daa
pop
loope
mov
or
mov
enter
popf
loope
cmpsb
jle
or
and
ret
movsl
stos
loopne
mov
mov
imul
adc
mov
in
dec
xchg
mov
stos
rorb
repz
jbe
pop
test
and
dec
mov
scas
mov
cmp
test
cmp
cmp
push
add
cmp
push
cltd
push
dec
popf
rcll
mov
nop
loope
pop
sti
cmp
rdtsc
jp
in
xchg
imul
outsl
aam
dec
cwtl
imul
daa
and
pop
add
lret
flds
adc
xchg
cmc
cmc
inc
jle
cmp
popf
popf
adc
mov
roll
or
mov
popa
lea
xor
loope
imul
stos
stc
inc
push
nop
insb
mov
loop
adc
movsb
clc
pop
pop
testl
fdecstp
and
and
pusha
rorb
pop
sbb
fisubs
hlt
push
or
sbb
mov
lahf
out
cmp
repnz
scas
sub
pop
xchg
add
add
test
sbb
sub
pop
popf
popa
pop
arpl
inc
into
xor
pop
or
adc
test
push
test
jno
icebp
inc
xor
test
jecxz
push
test
cltd
push
icebp
adc
inc
and
adc
xor
mov
shr
xchg
jnp
pop
cmp
les
movsb
sub
push
addr16
pop
iret
sti
data16
push
inc
push
call
sub
cmp
inc
fdiv
dec
lock
cmp
jmp
lcall
lret
cmc
jnp
cmp
jb
lcall
mov
add
xchg
pop
dec
gs
test
push
xchg
mov
fnstsw
aas
pop
jmp
mov
scas
cs
js
divb
movsb
fsubr
push
aam
xchg
mov
inc
in
mov
jb
ja
stos
add
and
xor
mov
nop
shrb
add
leave
or
iret
jecxz
or
js
lret
or
and
jmp
jbe
and
pop
jnp
fwait
imul
in
push
call
xor
mov
jle
stos
dec
bound
mov
adc
mov
pop
shll
xchg
rcll
ja
fimull
dec
mov
sub
imul
lret
push
test
pop
xchg
aas
imul
in
xchg
cmc
outsl
scas
addr16
pcmpgtd
nop
lret
inc
push
mov
js
pop
sbb
je
cmp
inc
mov
add
dec
mov
jg
push
popf
cmp
add
xor
cmp
xchg
cmp
mov
mov
mov
sbb
bound
jnp
loopne
ret
and
cmp
pop
ja
outsl
add
arpl
ret
fcmovbe
push
shll
xchg
loope
mov
stos
pop
incb
mov
xor
push
or
inc
push
aam
dec
les
repnz
mov
or
daa
add
dec
adc
lods
ret
movl
mov
out
sub
cmc
jg
and
mov
xchg
cmpsl
mulb
jle
mov
push
jae
scas
mov
xchg
or
push
jbe
in
xlat
inc
scas
xor
cld
push
cli
lret
xchg
xchg
ret
push
aas
and
test
jecxz
and
pop
and
and
dec
or
mov
scas
sub
lods
in
jp
inc
cmp
mov
daa
jl
into
add
cmp
pop
push
imul
fwait
das
leave
nop
jb
xchg
or
jbe
mov
fisttpll
ds
lret
add
insb
fdivs
lods
ret
xchg
pop
jns
mov
lods
jbe
mov
xlat
sahf
or
aaa
rcll
in
js
cmp
dec
sbb
xor
and
aaa
or
jnp
rcrl
push
bound
aaa
ret
js
cs
les
mov
xchg
sbb
in
lcall
xor
int3
imulb
mov
js
fmuls
xchg
out
xor
in
enter
cmc
aam
test
jns
xchg
lods
pusha
mov
movsl
add
push
insb
xchg
mov
call
jge
inc
lock
dec
sub
adc
cwtl
test
nop
popf
stc
out
iret
leave
cmp
aam
js
arpl
fldenv
jmp
fnstenv
pusha
push
sub
add
jno
mov
push
inc
mov
xchg
dec
daa
inc
dec
push
daa
push
jmp
fldenv
or
dec
icebp
inc
icebp
shrl
roll
or
stc
iret
ret
jne
inc
je
bound
or
stc
lcall
mov
js
shufps
scas
cmp
gs
cmpl
cmp
jmp
xchg
dec
shrl
jg
sub
jae
xchg
or
sub
push
adc
mov
test
jp
xchg
sub
arpl
mov
mov
or
imul
popa
lret
stos
pop
loope
loopne
lret
std
arpl
inc
jmp
iret
jge
push
mov
insl
divb
pushf
sub
sub
aam
mov
jns,pt
inc
sbb
push
hlt
cli
mov
or
cltd
adc
adc
insl
push
dec
inc
mov
mov
pusha
ja
cmp
cmp
pop
iret
jg
push
das
inc
iret
enter
xlat
fldt
in
ret
jg
test
stos
dec
cmp
lret
int
xchg
push
out
pop
sarl
push
adc
push
stos
das
push
lcall
jl
mov
out
fldz
sti
sbb
rol
jnp
or
push
neg
sub
mov
ss
sub
adc
out
out
addr16
sub
jmp
pop
push
sbb
fwait
iret
adc
in
and
cmpsl
jecxz
or
xchg
nop
repnz
shlb
mov
icebp
sbb
mov
inc
adc
in
lea
mulb
cmp
cli
sbb
addr16
and
pop
fwait
push
ja
inc
ja
dec
add
cmp
jg
cmp
and
aas
shll
add
test
and
push
jo
je
mov
stc
and
subl
jp
xor
pop
stos
cmpb
popa
hlt
push
fldcw
adc
inc
xchg
rolb
sbb
xchg
loope
mov
hlt
add
add
shrl
shrb
and
xchg
cmp
xorb
sub
sub
xchg
push
test
sahf
dec
push
in
fdivr
mov
sub
xlat
pop
lret
xlat
int3
fnstsw
fcmovu
add
mov
cmp
lods
fwait
inc
imul
es
jnp
or
xor
push
fucomip
adcl
jg
cli
adc
subb
mov
mov
mov
xchg
pop
and
lahf
or
xchg
push
push
out
push
sbb
xor
lock
out
lods
mov
xor
inc
insb
nop
mov
outsl
dec
and
ret
ficoms
xor
out
push
jg,pt
shrl
lcall
lock
data16
mov
push
adc
fnsave
pop
insb
mov
fs
dec
outsl
xchg
jns
sub
dec
push
idiv
inc
or
lods
xchg
je
jne
aas
jp
jb
cmp
sbb
cmpsl
std
mov
loope
dec
cmc
pop
lock
sahf
inc
pop
mov
sarl
movsl
add
xchg
push
mov
sub
xchg
aad
repz
movd
stc
mov
push
nop
xchg
push
aas
lock
pop
jb
cmpsl
push
jno
rcrl
out
aam
test
dec
and
xchg
add
repnz
stos
or
test
mov
out
fimuls
jmp
sub
fcomip
add
and
mov
test
xor
push
cmp
fs
int3
and
xor
cmp
outsb
out
fisttps
adc
push
rorb
outsb
scas
mov
jno
notl
xchg
loope
or
shl
ds
andb
jp
xor
adc
and
insb
inc
call
stc
pop
add
andl
das
xor
fistpl
xor
adc
sbb
repnz
jnp
push
rcr
jge
fcmovnu
cmpsb
xor
fnstcw
xor
xor
xor
iret
aam
cs
cmp
jmp
xchg
mov
loop
mov
push
xor
ret
adc
dec
xchg
mov
cltd
rcrl
pushf
or
jbe
and
push
push
push
mov
orl
inc
ret
mov
mov
arpl
loope
inc
xor
mov
mov
pop
dec
mov
lods
popa
cltd
jg
or
movsb
int3
xlat
loopne
push
inc
add
mov
mov
rclb
cmp
xor
pop
insl
ss
mov
and
subb
push
loop
and
xor
inc
and
push
add
pop
ret
cmpsb
xchg
cmp
test
jle
ds
movb
sti
imul
or
mov
insl
fwait
mov
push
cmp
add
popa
sub
movsl
fdivrl
shll
gs
mov
inc
fdivp
gs
pop
outsl
enter
mov
mov
xchg
mov
fnop
daa
stos
loop
add
push
ret
mov
dec
fwait
mov
ja
push
adc
sbb
adc
std
xchg
mov
xchg
lods
jmp
call
dec
call
pop
and
add
xor
daa
pusha
jmp
or
fnsave
btcl
push
and
or
push
neg
or
loop
mov
xlat
mov
mov
push
in
out
outsb
dec
push
aam
xchg
clc
push
xorl
inc
adc
enter
add
add
stc
push
pop
dec
bound
scas
cmp
fstpl
dec
addr16
cmp
sub
mov
mov
sub
cwtl
push
les
jle
push
lea
sub
pushw
clc
loope
sub
push
dec
mov
and
popa
xor
sub
pop
shlb
inc
mov
or
inc
pushf
stos
nop
daa
push
icebp
fs
repnz
push
pop
insl
cmp
adc
insb
stos
dec
shr
xor
inc
jmp
jp
in
push
cld
xchg
mov
xchg
in
or
adc
in
bsr
and
mov
ljmp
and
mov
inc
out
cmp
mov
rolb
push
out
fsubrl
addr16
mov
or
shlb
cmpsb
jg
mov
ljmp
mov
push
fidivs
insb
loop
mov
inc
sahf
fwait
imul
jno
sbb
faddl
popf
and
mov
adc
iret
add
scas
dec
and
or
add
jle
push
jno
lock
les
mov
outsb
sub
adc
fildll
xor
fwait
mov
push
add
pop
je
scas
jns
pop
jp
jmp
jp
adc
mov
addr16
lret
jnp
sbbl
pop
xchg
xchg
inc
mov
ds
sub
add
inc
je
nop
mov
and
lahf
lahf
mov
pop
push
mov
shl
dec
and
addr16
dec
push
arpl
jne
ja
pop
rdmsr
icebp
and
mov
cli
sub
sbb
fwait
push
add
jge
and
sti
call
cli
popf
lock
loop
push
notb
adc
test
test
mov
inc
or
push
mov
mov
in
scas
in
pop
xchg
adc
arpl
scas
rolb
fisubl
loopne
mov
inc
lret
lcall
pushf
mov
jno
jb
pop
xchg
stos
push
cltd
cmpl
cltd
and
mov
adc
mov
xlat
cmp
xchg
std
xor
hlt
dec
add
push
mov
inc
jl
xchg
and
lods
push
inc
adc
push
lock
dec
cltd
je
and
xchg
xchg
or
add
xchg
clc
test
inc
aaa
shl
lds
shrb
sbb
jns
jp
jne
mov
sub
jmp
sbb
cmp
mov
mov
lea
fs
mov
pop
sbb
inc
insb
adc
xlat
mov
sub
xor
mov
nop
nop
sub
or
mov
mov
mov
jle
ficoms
xor
push
cli
iret
and
mov
stos
xor
jmp
pop
sbb
cmp
dec
inc
fstpt
add
cli
dec
stc
jmp
adc
outsb
mov
outsb
push
test
decb
pcmpgtd
xchg
pop
xchg
dec
xchg
cmc
jmp
pusha
jae
cmp
jle
sub
add
out
cli
cmp
and
inc
std
pop
cmpsl
cld
adc
dec
sbb
inc
cmp
das
adc
and
push
jmp
aam
je
loop
and
in
scas
add
adc
push
jge
insl
jl
dec
in
mov
push
sub
notb
lea
cs
cmpsl
cmp
xchg
or
cmp
into
ljmp
lret
mov
cmp
mov
xchg
fdivrs
aam
mov
push
dec
aam
dec
mov
jae
xchg
outsl
aas
in
popa
inc
lods
cmp
icebp
adc
scas
mov
jbe
test
cmc
mov
dec
pop
loopne
mov
jbe
das
sub
pop
cmp
mov
mov
out
and
js
aaa
out
dec
sbb
sub
test
std
insl
repnz
or
xchg
int
mov
mov
lea
mov
or
xchg
clc
fsubrs
imul
adc
adc
mov
aad
fildll
adc
popf
jecxz
insl
jg
leave
dec
outsb
add
mov
jecxz
insb
sbb
cld
pop
push
and
ret
hlt
push
in
add
fistps
xor
pop
orl
scas
lods
sbb
sub
jl
mov
xor
bound
stos
loopne
push
pop
test
insl
lods
adc
or
mov
fwait
inc
and
mov
mov
pop
sbb
daa
pop
push
push
lcall
fadd
mov
leave
int3
icebp
cmp
ss
mov
out
mov
xchg
xor
mov
xchg
bound
scas
xchg
fistl
ret
rcrl
add
bound
movsb
movsb
cmp
mov
sbb
jbe
inc
xchg
pop
add
ret
sarb
mov
and
stos
add
bound
mov
cmc
push
outsb
inc
inc
mov
bound
in
dec
popa
sti
mov
xor
cmpsl
sbb
lock
jmp
sti
add
mov
std
test
adc
ret
mov
lahf
adc
and
repnz
dec
rcrb
into
lea
popa
daa
aam
test
jo
sbb
int
inc
sbb
arpl
xlat
sahf
insl
dec
push
ljmp
test
and
xor
pop
sbb
lds
pusha
or
dec
jge
fisubrs
nop
push
adc
sti
loop
sub
lcall
or
jge
lret
add
test
imul
rclb
lret
xor
mov
add
sub
cmc
xor
dec
and
dec
daa
js
xor
pop
aad
inc
shrb
mov
add
lcall
ja
sub
inc
pop
and
push
jns
adc
xor
lea
cwtl
aaa
mov
ror
gs
pushf
imul
movsl
mov
aas
sbb
mov
outsb
sbb
sub
jbe,pt
outsb
fsubrs
ja
sti
xor
xchg
adc
mov
inc
dec
push
pop
xor
loop
pop
repnz
je
pop
out
nop
jle
lods
push
aam
aaa
mull
fld
stos
divl
out
std
xchg
pop
loope
cwtl
push
push
roll
out
rcr
aam
xchg
adc
int
inc
shrb
scas
and
jbe
xchg
cli
inc
mov
testb
xor
lods
outsb
bound
mov
js
mov
push
test
std
sti
mov
mov
shll
jb
inc
dec
push
sarl
push
subl
mov
daa
jns
divb
mov
cld
in
push
sub
or
lret
shlb
mov
rclb
pop
and
insb
jbe
lods
mov
adc
scas
aad
mov
mov
xchg
aam
add
xchg
ret
adc
sub
sbb
arpl
add
push
xor
xchg
add
cmp
add
pushf
ja
jb
inc
addr16
cmp
push
or
push
xchg
push
fbld
jecxz
mov
mov
pop
in
in
out
mov
adc
add
popf
std
shrl
repnz
rclb
test
jg
std
movsb
push
mov
dec
inc
fisttpl
outsl
mov
pop
out
ss
cmp
jae
xchg
ret
call
adc
xchg
pop
testl
ss
mov
rolb
adc
mov
mov
xor
add
sub
in
popf
pop
jmp
jg
fisubrs
sbb
jnp
mov
jae
xchg
mov
xor
cltd
push
mov
mov
cmp
add
ja
or
test
pop
jo
shlb
mov
fisubl
jbe
les
mov
leave
hlt
gs
dec
adc
push
jle
xchg
xchg
and
ficoms
outsb
inc
or
call
pop
inc
aam
push
in
xchg
nop
repnz
mov
adc
sarl
aam
xchg
mov
addl
mov
jl
dec
pop
jbe
lahf
clc
or
aad
pop
sub
or
xorl
sub
xor
mov
adc
or
stos
leave
pop
mov
adc
loop
cmp
icebp
xchg
and
push
lds
lock
push
fdiv
push
cmp
xchg
int
les
xchg
xchg
mov
xor
add
repz
sahf
loopew
decl
jg
cli
push
or
xchg
jne
mov
in
jns
mov
sub
pop
imul
sub
pop
xchg
sbb
pop
imul
repz
icebp
jle
call
dec
fnstcw
push
mov
cmp
sti
dec
xchg
setns
and
scas
and
int3
mov
jnp
test
test
sbb
add
dec
nop
mov
jle
in
pop
dec
push
mov
repnz
sarl
loope
cmpsb
mov
pop
push
xchg
jl
xorl
or
and
pop
int3
cmc
xor
in
rcll
ds
pop
xlat
cld
xor
jmp
insb
pusha
adc
dec
mov
hlt
mov
les
mov
add
in
divl
clc
adc
int
sub
cld
or
mov
jp
sbb
sub
xchg
movsl
test
mov
adc
les
fdivl
ja
hlt
int
pop
mov
addb
mov
jl
add
mov
jge
ret
or
int
and
mov
mov
xor
decb
xor
xchg
in
mov
cmp
mov
pushfw
push
mov
dec
out
jbe
icebp
lea
and
or
test
mov
cmpsb
sbb
sub
cs
sbb
mov
inc
out
dec
sub
mov
xchg
mov
push
test
pop
and
ret
roll
inc
mov
xchg
push
shrl
cmp
lock
shlb
int
jl
pop
lea
sahf
push
xchg
inc
test
sbb
cld
cli
adc
sbb
adc
gs
mov
ret
or
add
inc
fdivrp
mov
sbb
int
inc
jbe
xchg
scas
insl
je
inc
loopne
cli
push
sbb
xor
das
xor
into
xor
pop
pop
push
xchg
sub
les
mov
movsl
push
push
or
adc
imul
xchg
cmp
pop
ljmp
ss
or
mov
cmpsl
push
jecxz
dec
push
inc
xor
and
sbbb
cli
sub
popa
fisttpll
enter
repnz
cwtl
add
jge
mov
mov
xchg
and
push
and
cmp
mov
mov
mov
in
sbb
cmpsb
mov
test
xor
xchg
jo
das
mov
pop
aad
mov
mov
fwait
inc
xor
imulb
cmpsb
sbb
xor
cmc
or
int
cmp
mov
shl
imul
es
aaa
fwait
push
sbb
jg
enter
dec
mov
cmc
jne
insl
push
and
mov
dec
adc
es
arpl
aad
aas
repnz
jo
mov
adc
test
pop
dec
hlt
cmp
mov
fs
sbb
bound
pop
or
hlt
sbb
sarl
xor
stc
fstpl
movsl
and
nop
in
fistpl
push
clc
jno
pop
loopne
loopne
test
cmp
xor
and
xor
xchg
add
andl
push
frstor
idivb
sub
inc
cmp
jle
fmuls
jl
xorl
mov
sti
jmp
insb
add
lods
jbe
test
iret
inc
out
push
int
xor
and
cmpb
inc
imul
out
xlat
push
popf
mov
clc
jmp
cwtl
rorb
adc
fs
mov
push
aam
lods
xchg
mov
dec
je
iret
pop
push
shll
fmulp
fldenv
inc
test
cs
cmp
int
lods
push
push
and
rol
xchg
and
test
xor
pop
cmp
pushl
cld
sub
cwtl
push
addr16
jae
shll
or
pop
adc
cmp
mov
xor
xchg
or
dec
jg
lcall
pop
cmp
xchg
adc
mov
sub
in
mov
out
leave
fstp
pusha
push
fcmovu
test
imul
xchg
gs
insl
fdiv
out
push
or
insb
jne
loop
lods
xchg
pop
test
lret
dec
xchg
hlt
popa
push
mov
push
inc
mov
dec
cmpsl
mov
ds
sbb
push
lds
ror
jnp
sbb
xchg
ret
popf
hlt
pop
add
sti
lods
lods
push
sbb
mov
std
adc
test
or
jmp
outsb
movsl
xchg
sbb
fdivr
lods
lods
fiaddl
inc
sti
mov
fdivp
inc
push
adc
insl
ljmp
jg
insl
sbb
sahf
pop
scas
and
adc
insb
idivl
and
push
test
fwait
iret
imul
cld
or
jne
test
cmpsl
in
insb
xchg
add
aaa
lods
inc
daa
imul
fldt
pop
in
or
and
ficomps
or
push
sub
clc
inc
jbe
shr
cmp
jmp
aaa
int
shll
ficoml
jmp
popf
bound
mov
daa
stc
lods
ljmp
sbb
push
dec
insb
xchg
outsb
mov
xchg
and
mov
lret
es
inc
lods
lcall
mov
and
icebp
sub
ljmp
mov
scas
shl
sar
mov
ja
xor
fdivrs
cmpsl
add
mov
shr
ljmp
xchg
imulb
mov
lds
sub
jae
push
idivb
add
das
loopne
jno
lods
mov
cli
repnz
cmp
push
xchg
pop
pop
data16
add
out
xor
repz
push
mov
fidivs
setae
test
arpl
inc
mov
xchg
mov
pop
mov
push
scas
mov
shlb
push
sti
cli
leave
rolb
and
xor
mov
xchg
jbe
and
or
dec
push
clts
das
sub
mov
nop
mov
mov
inc
lahf
pop
xchg
push
bnd
repnz
pop
jmp
jecxz
add
dec
pop
shlb
clc
or
imul
scas
push
cmp
pop
popf
dec
jne
fsts
and
test
dec
stos
stc
pop
adc
ret
sub
mov
iret
jo
xchg
add
jae
aam
mov
add
mov
imul
popa
or
inc
push
sub
cmp
pop
lods
dec
sbb
xlat
fcoms
fucomip
pop
sub
inc
push
ljmp
cwtl
or
pop
jae
sub
cmpsl
adc
or
jne
mov
and
xor
dec
push
mov
push
add
ret
enter
outsl
xchg
sub
xorb
xlat
in
push
aam
xchg
mov
loop
xor
cmpsb
and
out
test
stos
pop
jecxz
or
jns
add
adc
sub
fidivs
sahf
mov
and
xor
jecxz
out
aad
jnp
je
jle
push
xor
fmuls
imul
fwait
pop
push
jbe
mov
add
mov
inc
fadd
jns
movsl
sarb
movsb
shl
inc
jg
pop
xor
movsl
mov
mov
cmp
xchg
cld
jle
inc
in
jo
mov
into
cwtl
adc
jmp
cmp
sahf
mov
push
or
test
fnstcw
fsts
push
fwait
add
push
mov
or
push
repz
shll
clc
push
aad
cs
loope
repz
int
shrl
icebp
inc
nop
scas
xor
stos
insb
mov
jns
fnstenv
mov
add
xchg
cwtl
push
stc
inc
icebp
push
adc
inc
cli
cwtl
pop
and
loopne
arpl
mov
and
inc
jmp
inc
test
dec
add
sahf
fucom
loope
lahf
jecxz
insb
mov
fucomp
or
xor
mov
jbe
out
push
test
inc
loope
add
sbb
js
mov
xchg
in
sub
dec
sbb
lret
negl
scas
inc
adc
cmp
push
inc
mov
test
scas
push
lds
aad
sub
rcrb
pop
sub
mov
adc
les
add
adc
cmc
push
mov
movsl
add
xchg
in
mov
mov
xchg
mov
je
xchg
or
cmp
sub
imul
loopne
lock
rclb
xchg
movsl
add
ret
sbb
add
adc
or
clc
adc
add
sti
mov
lds
repz
inc
xchg
inc
mov
iret
aam
sbb
push
cltd
icebp
mov
dec
add
and
inc
dec
add
icebp
adc
push
sbb
lods
pop
outsb
sbb
cmp
fsubl
popa
punpcklbw
cmp
fwait
std
mov
add
jns
inc
test
dec
test
cmp
cltd
andb
enter
incb
and
or
push
fistps
or
and
adc
add
adc
mov
mov
fldl2e
je
out
insb
aad
add
shlb
push
sbb
fstps
scas
out
push
jge
cmpsb
push
adc
xor
and
test
fisubrl
mov
cltd
push
sub
es
lret
mov
stc
sti
dec
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
enter
push
jno
mov
add
popa
push
jns
lret
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
repz
cwtl
sar
pop
scas
or
push
lea
movsbl
add
mov
adc
nop
scas
lock
jno
mov
xor
lods
xor
add
hlt
cmp
mov
shll
sbb
insb
push
mov
lods
pop
adc
jmp
or
mov
std
sbb
mov
and
cmp
mov
shll
hlt
mov
sub
jne
pop
int3
sub
sub
rolb
xchg
out
pop
jle
lods
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rolb
xor
mov
fwait
lret
mov
rclb
or
jne
xchg
push
pop
jno
pop
jge
lret
test
popa
rclb
mov
jns
ficoml
rclb
dec
mov
std
xchg
popa
aad
jo
mov
std
test
popa
rclb
or
xchg
std
test
lahf
aam
jae
stc
clc
dec
test
test
popa
rclb
sbb
xchg
std
test
popa
rclb
mov
std
test
rcrb
push
mov
testb
or
xchg
std
test
popa
rclb
or
xchg
in
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
jns
add
ja
rclb
or
xchg
std
add
aas
in
ss
xchg
std
test
inc
rclb
and
or
movl
mov
lcall
rclb
or
xchg
std
test
popa
lock
jno
xchg
or
popa
rclb
or
xchg
std
test
fst
push
jno
mov
std
test
popa
rclb
jno
jns
dec
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
xchg
std
test
popa
rclb
or
fcomi
test
popa
rolb
or
sub
insb
sahf
mov
and
aam
jmp
test
xor
push
sbb
add
add
dec
dec
mov
sub
stc
shlb
movsl
push
movsl
or
xchg
pop
xchg
jp
fmull
jae
adc
orb
cmp
inc
push
pop
test
test
popa
out
lock
pavgw
mov
outsl
ret
pop
mov
adc
pop
sub
out
pop
shlb
pop
lock
pop
and
out
in
mov
xor
inc
leave
fnstenv
adc
dec
and
jne
adc
popa
movsl
loopne
sbb
dec
fcmovbe
ljmp
scas
jo
cld
dec
movsb
rcll
mov
push
mov
mov
jne
loopne
sbb
out
out
insb
aaa
jl
ret
pop
mov
mov
adc
enter
cmp
test
mov
scas
or
es
adc
cmpsl
sub
sbb
add
mov
leave
mov
pop
dec
sbb
mov
xchg
and
dec
sbb
in
xchg
dec
mov
mov
nop
repnz
lock
push
xchg
hlt
jno
loopne
pop
pop
sti
test
jno
std
mov
pop
ljmp
movsl
sbb
lods
push
lahf
pop
int
das
push
dec
jmp
push
mov
mov
call
jbe
sar
pop
adcl
xchg
jecxz
ds
out
icebp
push
loope
leave
bound
jge
imul
cmp
cs
rorl
std
scas
and
scas
repz
adc
fmull
les
enter
pop
mov
ret
outsl
std
ljmp
xlat
sub
imul
dec
lcall
mov
inc
scas
and
sub
imul
in
dec
sbb
clc
pop
adc
or
out
dec
sbb
adc
fnstcw
das
cmp
into
cli
fcmovnb
jl
scas
popa
rorb
in
sub
mov
jb
mov
daa
mov
or
lret
ljmp
int
push
dec
mov
lea
loopne
cmp
test
or
xor
push
loop
mov
mov
mov
xchg
adc
cmpsl
jns
dec
jb
cmp
dec
push
shll
test
popf
aaa
outsl
pop
loope
or
xor
sbb
imul
in
or
and
mov
xchg
sub
add
ficomps
in
mov
lods
ljmp
loop
xchg
mov
jae
sub
popl
lcall
cmpsb
rol
pop
dec
fs
je
std
xor
sbb
out
fisttps
ja
dec
scas
rorb
mov
ja
jge
sub
out
dec
lret
or
dec
loope
neg
in
loopne
lock
cli
sub
dec
push
jle
push
add
jg
sub
jne
int3
mov
sub
inc
jmp
insl
inc
dec
aaa
mov
push
mov
cmc
pop
pop
or
lret
inc
jge
jle
outsl
pop
xchg
sbb
rcll
mov
lret
fadds
test
aad
movsb
mov
icebp
sbb
mull
and
jb
sub
or
imul
dec
sbb
pop
push
ljmp
push
stos
fildl
jle
out
lds
or
out
push
cmp
pop
insb
xchg
inc
cmp
or
jge
outsl
sbb
xchg
adc
add
out
idivl
das
test
push
mov
les
fildl
xchg
shlb
enter
popf
test
pop
aas
xchg
jbe
das
out
outsb
imul
lret
out
xchg
mov
imul
imul
or
adc
dec
int
mov
push
mov
cmp
mov
and
inc
inc
mov
xor
sub
xor
cli
movsl
das
jl
pop
lret
pop
inc
jg
es
sbb
ret
add
xor
popa
add
xchg
push
sbb
xchg
jle
dec
pop
sbb
push
shl
rorb
adc
dec
adc
xor
shl
lret
pop
xor
add
jl
mov
mov
xor
shrl
cmp
add
in
lock
push
xchg
ja
insl
jnp
push
jp
ficoml
mov
lds
repnz
or
mov
fbstp
xor
add
sbb
jg
lds
adc
rcrb
ja
test
scas
mov
aam
mov
mov
addr16
out
pop
jp
in
xor
push
push
sub
and
test
sbb
inc
into
out
frstor
adc
jno
sti
mov
mov
add
push
add
dec
fisttpl
das
jno
cmp
xchg
cmp
out
sub
testw
mov
cltd
mov
jo
test
popf
cwtl
push
xchg
dec
and
pop
adc
mov
sub
dec
dec
sti
scas
jle
add
fwait
pusha
mov
mov
scas
scas
loope
rcrl
pop
mov
leave
ss
popf
mov
int
mov
and
and
lcall
insl
mov
imul
ret
jo
cwtl
fld
ret
adc
scas
mov
leave
mov
aas
cmp
pop
sar
std
les
popa
jo
add
push
sbb
stc
js
sbbb
mov
push
aad
add
stos
negb
pop
sbbl
pop
fidivrl
in
push
je
subl
sar
in
cmc
pop
adc
mov
cmp
push
jecxz
xchg
mov
ds
add
or
and
out
fisubl
add
and
cmp
rcll
mov
mov
mov
mov
repnz
add
dec
push
xchg
inc
mov
sub
sbb
push
sub
adc
pushw
adc
cmp
xor
dec
test
mov
and
or
xor
jns
mov
jbe
xchg
push
lods
pop
loopne
and
movsb
stos
aad
aas
out
adc
or
sbb
inc
roll
xor
mov
test
add
jns
cmp
xor
inc
adc
lods
sbb
or
ljmp
hlt
jo
mov
push
insb
push
lret
sub
jp
and
or
mov
pop
iret
es
mov
pop
nop
data16
dec
mov
mov
mov
scas
iret
or
sarb
addl
jecxz
adcb
push
sbb
sub
rcll
cltd
sbb
cmp
pusha
push
xchg
mov
mov
sbb
je
mov
dec
pop
xchg
ljmp
push
dec
aad
test
xchg
das
sub
jns
xchg
add
testl
cld
and
into
add
xchg
xchg
enter
popa
aaa
xor
shlb
sti
xchg
aam
cmp
dec
fwait
enter
into
jl
xchg
cmc
dec
xor
jne
into
sbb
stc
idivb
sbb
addr16
cmpb
pop
icebp
mov
negb
add
out
add
lock
mov
mov
aam
cltd
lcall
shl
mov
lcall
xchg
xor
dec
xor
lock
test
xor
push
nop
sbb
pop
popa
xchg
outsb
push
fcomi
arpl
adc
push
mov
jecxz
or
cli
cwtl
lods
cmpsl
jmp
daa
adc
or
inc
xchg
outsb
popa
pop
xchg
lret
dec
ja
or
pop
push
leave
push
aaa
notb
inc
sbb
call
flds
inc
push
outsb
adc
stos
mov
cmp
repz
mov
mov
jge
int3
inc
mov
ds
dec
mov
jns
push
js
xchg
in
orb
or
mov
add
int
adc
mov
jle
adc
daa
push
aad
gs
adc
emms
adc
lret
inc
or
test
mov
inc
mov
sub
test
jp
std
or
lcall
mov
je
adc
test
mov
nop
mov
incb
jne
or
sbb
aaa
pushf
push
int
js
mov
xor
jge
mov
jne
aas
and
push
pop
sub
sbb
sarb
cli
out
cmp
out
mov
scas
loope
mulb
push
cwtl
mov
pop
cmpsb
mov
fmul
mov
sub
sarb
push
int3
pop
xchg
das
rclb
cmp
out
popa
test
inc
std
jge
mov
loop
jmp
insb
mov
push
jl
pop
mov
inc
arpl
mov
fs
sbb
popf
push
stos
aaa
pop
xchg
lcall
loop
repnz
bound
pslld
subb
sbbl
mov
ret
mov
nop
stos
pop
enter
aad
add
and
sub
stc
pushf
and
cltd
cmp
add
loope
arpl
pusha
fnsave
decb
mov
test
ficomps
popf
pusha
sarb
mov
cmpb
ljmp
cmp
std
lds
push
cmp
sub
add
enter
push
test
lret
adc
hlt
sbb
sbb
imul
dec
mov
out
dec
pop
je
xchg
jp
xchg
push
shr
lds
push
filds
jae
in
push
popa
mov
pop
jp
lds
mov
xchg
popf
rcrb
cmp
punpckhbw
jns
cmp
mov
out
cmpsl
lahf
popa
bound
mov
pop
push
lock
fs
mov
xlat
xor
mov
aad
jmp
mov
loop
dec
xor
insb
xchg
adc
std
add
xchg
mov
push
adc
push
cmp
mov
mov
movsl
mov
pushw
dec
or
rorb
xchg
push
out
dec
push
ficompl
push
sub
xor
lcall
adc
pop
test
mov
pop
sarb
mov
hlt
outsl
cmp
shrb
scas
mov
push
fcmovu
mov
and
fs
cwtl
xor
in
cwtl
movsl
addr16
fcoms
xchg
loope
andl
enter
inc
push
stos
cli
aam
jmp
xchg
xchg
outsb
pop
shll
xchg
jmp
mov
test
xchg
push
addr16
inc
dec
cmpsl
push
push
push
inc
mov
int3
repz
mov
mov
into
imul
cmpsl
sub
imul
lods
lods
shll
rcrb
int
adcl
lahf
dec
fistpl
push
cmpsl
loopne
cs
pop
dec
xor
test
xchg
sbb
mov
lods
pusha
daa
dec
push
or
stos
push
cli
in
mov
jl,pn
fisubl
insb
pop
or
scas
inc
icebp
lret
cmp
outsb
sub
cmpsl
nop
movsl
data16
shld
aam
add
or
xorl
dec
outsb
or
dec
xchg
push
dec
push
bound
xor
xor
es
sub
sbb
test
nop
subl
jmp
sarl
dec
shrb
dec
sub
dec
sub
in
dec
cmp
rcrl
sar
lods
call
cld
daa
sbb
or
mov
push
es
sbb
stos
jb
cmpl
hlt
or
sbbl
fs
mov
and
repnz
pop
and
xor
sbb
ja
xorb
lahf
fdivrs
dec
rcrl
xchg
fisttpll
ret
pop
sbb
cld
sbb
fdivrl
xchg
in
ds
xorb
sub
mov
bt
lods
ret
jo
inc
jb
jb
iret
inc
inc
sbb
movsb
or
mov
adcl
stc
pop
dec
mov
negb
stc
mov
cwtl
add
std
adc
testb
out
or
in
mov
xchg
stos
mov
pop
xchg
mov
iret
test
lret
or
cltd
imul
mov
adcb
flds
jmp
daa
push
add
lock
sub
xchg
pop
mov
sub
push
repz
lahf
dec
add
dec
imul
push
and
in
dec
bound
into
jae
pop
pop
or
les
pushf
xor
in
insb
push
xor
stos
lods
and
ror
adc
xchg
negb
and
jmp
scas
cmp
inc
ja
das
jmp
cmpsb
adc
mov
lods
iret
fnsave
je
and
sbb
xor
inc
jecxz
jge
jg
or
or
enter
cmp
test
sahf
jbe
negl
out
sbb
mov
call
fs
sub
ret
in
es
mov
lret
loopne
or
popa
or
enter
leave
xchg
rclb
sub
sbb
in
orb
cmp
call
ret
inc
sub
das
loop
mov
pop
adc
addr16
mov
dec
or
test
sbb
sbb
ljmp
rcrb
mov
jecxz
sub
mov
test
and
xor
js
inc
pop
fsubl
outsb
ret
das
adc
or
sbb
or
mov
addr16
push
push
fwait
pop
mov
sbb
mov
mov
jne
fldcw
lds
ss
scas
inc
dec
fstpt
push
mov
stos
sub
clc
hlt
sbb
and
pop
js
xchg
setne
xor
mov
push
or
or
lea
ret
mov
mov
push
enter
scas
and
xchg
xchg
insb
arpl
mov
orb
inc
pop
pop
adc
cvtdq2ps
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
