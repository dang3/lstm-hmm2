sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
jl
jmp
inc
test
das
sti
shl
sahf
into
inc
jg
scas
pop
push
stos
pusha
xchg
cmp
andb
sti
out
test
out
mov
xlat
add
jbe
dec
mov
fsubrl
mov
or
rol
scas
push
push
adc
aas
enter
cmpsl
imul
pusha
roll
orps
dec
mov
std
pushl
jmp
je
mov
jno
repz
jno
into
movsb
cmp
xor
xor
xchg
ret
mov
xlat
call
sbb
push
fimuls
nop
pop
dec
jmp
xor
mov
pop
fcoml
or
dec
or
push
sahf
imul
out
fs
cld
or
test
sub
inc
mov
sub
sub
mov
mov
int3
fidivrl
ror
out
xchg
push
loop
push
push
push
mov
and
into
mov
lods
pop
mov
fisttps
pop
push
das
fisubrl
xchg
push
push
push
lods
sub
sub
mov
xchg
add
lea
cmp
cmp
sub
out
mov
insb
mov
sarb
xchg
popf
fadds
orl
pop
fwait
pop
ljmp
pusha
push
push
pandn
out
test
sub
insb
aad
adc
sbb
jo
sbb
push
daa
mov
jl
mov
stos
es
xchg
jecxz
inc
cli
bound
mov
cli
stc
das
mov
testb
aas
leave
cmp
pop
cltd
into
mov
mov
test
mov
repnz
lock
jge
popf
mov
dec
jmp
outsb
sahf
dec
adc
sub
outsb
jbe
loope
push
push
test
test
es
push
cmp
aaa
subl
test
mov
int3
ret
les
insb
insb
xchg
inc
cmp
mov
in
addr16
dec
cmp
gs
loopne
addr16
jb
fsubr
or
sub
mov
scas
addl
pushf
stc
loopne
add
in
repnz
loop
stos
push
jae
dec
je
and
push
mov
iret
fnstenv
mov
push
fcoms
jo
mov
mov
push
jae
cmpsb
ret
out
in
pop
int
in
or
mov
pop
scas
sbb
mov
in
imul
in
mov
scas
mov
cmp
or
cmc
adcb
pushf
mov
sbb
mov
fs
aaa
pop
cmc
test
aas
das
cwtl
mov
jle
lea
std
push
add
fs
subl
pop
pop
lds
outsb
mov
mov
roll
xor
shrl
lcall
dec
mov
test
add
push
out
push
scas
insb
inc
mov
shlb
xchg
lcall
xor
add
sbb
hlt
inc
pop
in
xchg
bnd
scas
jecxz
mov
in
cld
mov
insb
jbe
decl
xor
cld
adc
or
aas
add
shll
dec
insb
data16
cmp
cmpsb
xor
mov
call
test
repnz
push
mov
mull
or
repnz
jo
out
xor
push
sub
std
dec
lret
pop
popf
jle
xchg
stos
inc
jne
fadd
in
push
inc
dec
dec
shr
cmp
fisttpl
adc
jl
mov
pop
sub
negl
push
pop
fwait
adc
mov
xor
mov
push
outsb
inc
dec
push
lahf
divb
adc
sub
mov
push
and
pop
mov
add
lods
div
andb
shl
fwait
aaa
outsb
ret
push
inc
in
xor
popf
xor
call
clc
fucomi
and
fcompl
ja
insb
clc
add
push
cmp
out
ljmp
int3
mov
pop
push
jo
lahf
lahf
and
sub
xchg
jbe
icebp
dec
push
push
cmp
add
mov
nop
push
scas
dec
xor
or
mov
test
push
out
jmp
pop
mov
out
aam
mov
or
mov
stos
jmp
mov
loopne
hlt
push
loopne
movl
mov
cmpb
addr16
inc
fsubrs
dec
sub
and
mov
into
push
mov
lcall
and
lock
and
cmovle
in
or
jp
js
lahf
add
das
in
add
mov
mov
int3
push
pop
xchg
in
lods
mov
dec
adc
les
out
fs
mov
mov
dec
and
xchg
les
inc
les
inc
jl
ss
mov
dec
outsb
jecxz
cs
push
clc
xor
jnp
push
xchg
and
in
repnz
stos
sub
jg
pop
aaa
cmp
nop
or
in
mov
jo
rcrb
pop
scas
les
test
jle
hlt
jae
dec
inc
and
mov
stos
push
bnd
mov
aam
xchg
cmp
or
or
fdivl
lret
cltd
aad
and
or
jp
jnp
xor
int
fcomi
rorl
jne
sbb
pop
or
inc
push
push
pusha
mov
push
fcompl
lods
cmp
dec
mov
cltd
aaa
xchg
daa
cli
icebp
mov
dec
pushf
addl
lret
dec
movsb
mov
gs
xchg
jmp
mov
movsl
aas
ja
lret
sbb
fldl
sti
jl
cmp
pop
mov
cmovb
test
imul
rcl
fmul
mov
out
jmp
push
lcall
hlt
jno
jl
arpl
add
cwtl
cmp
loopne
mov
and
in
stos
jb
dec
fldcw
in
outsb
cmpsl
cmp
pop
or
pcmpgtw
mov
dec
ljmp
pusha
mov
adc
loope
jmp
fisubrl
loope
cmpsb
cmpsl
jg
jns
xor
push
add
aas
mov
dec
adc
roll
mov
add
xchg
insl
ds
pop
insl
movsb
shlb
call
inc
mov
push
bts
mov
mov
das
out
clc
out
add
jb
lods
shrb
cmp
mov
popf
loop
das
xor
xchg
jnp
dec
fdivrp
test
insl
adc
mov
lahf
and
aam
sub
or
lahf
out
ljmp
bound
pushf
insl
loop
shll
jecxz
lea
out
fs
sti
xchg
in
ljmp
xor
js
and
sub
idivb
or
xor
dec
sahf
jb
cwtl
mov
cmp
imul
mov
fdivrl
hlt
imul
add
mov
adc
clc
dec
pushf
cmp
jnp
cmc
lret
add
imul
cmp
cmpsb
lea
jmp
mov
and
sub
jnp
stos
push
xchg
aaa
cli
jbe
add
cmc
pop
cmp
jge
or
mov
push
decl
jmp
arpl
js
mov
cmp
push
arpl
mov
lock
lahf
pop
push
jp
dec
dec
add
outsl
out
test
std
lea
jae
xor
adc
sbb
lcall
out
mov
push
sbb
loop
jnp
scas
inc
scas
in
fistpll
stos
cwtl
imul
movsb
sbb
or
dec
clc
loopne
test
les
lahf
jmp
mov
jg
stos
std
inc
fwait
add
or
sub
mov
movsl
ds
mov
push
sbb
movsl
imul
cli
std
add
data16
shrb
xchg
jmp
pop
cmp
jle
aad
loopne
std
mov
outsl
iret
fsubrl
adc
leave
pop
or
mov
ss
pop
stc
push
lods
repz
xchg
lock
jae
arpl
mov
out
inc
mov
push
cs
mov
adc
test
je
fs
inc
fldenv
in
or
adc
sub
jb
mov
loopne
pop
and
in
dec
cmp
add
stos
fnstsw
adc
adc
nop
cmp
fcmovb
enter
lret
cltd
mov
push
fstps
lcall
mov
jg
cmpsl
les
pop
jnp
ss
add
cmpsl
xor
lcall
xor
cmp
lcall
aaa
into
push
ret
fmuls
or
push
ljmp
mov
mov
bnd
imul
imul
popa
sub
cmpsb
dec
lcall
fldl
dec
adc
ds
lahf
xchg
fldl
imul
xchg
mov
popf
call
cmp
push
stc
inc
daa
pop
in
movsl
repz
std
lods
shlb
outsl
test
pop
divl
addr16
jno
mov
mov
sbb
imul
adc
movsb
and
notl
inc
sub
ljmp
fsubl
sub
aas
adc
ret
shlb
push
repnz
test
loop
not
push
subl
mov
out
js
cmpb
lea
or
xor
mov
fcmovb
xlat
imull
dec
imul
pop
cltd
popa
jo
cmp
mov
leave
jbe
pop
imul
inc
and
xor
into
push
in
out
add
push
fldl2t
mov
jnp
lret
cltd
adc
and
mov
and
cmp
mov
mov
popa
mov
dec
leave
or
into
ret
fwait
inc
pop
cwtl
pop
sub
pusha
cmpsb
sbbl
sub
popf
les
loopne
cmp
mov
jle,pn
jmp
lret
lods
loop
filds
dec
imul
sbb
out
scas
test
sub
cli
dec
cmpsb
inc
sub
push
incl
sbb
ret
nop
sbb
nop
mov
aam
test
xor
scas
imul
mov
dec
inc
mov
in
inc
lret
dec
adc
test
mov
mov
stos
mov
sti
inc
es
dec
adc
ret
pop
mov
mov
pop
ret
push
sub
jo
outsb
mov
or
or
push
mov
into
loopne
orb
decb
idivb
push
or
jae
add
fincstp
hlt
or
fistpl
or
inc
cmp
lea
push
pop
icebp
adc
insb
cmp
loop
in
lods
lret
imul
push
ljmp
pop
scas
rcrb
push
adc
push
bound
fwait
push
dec
push
push
fbld
test
inc
imul
adc
xor
jo
add
insl
xchg
cmc
dec
leave
adc
rcrl
dec
mull
push
cmpsl
fcmovnb
aad
jle
pop
jne
imul
sbb
sti
pop
push
sbb
jp
test
jle
inc
test
cmp
ljmp
cmpsl
dec
int
sbb
dec
gs
pop
mov
or
jo
mov
outsl
imul
sbb
and
int3
insl
cmpsb
jp
adc
std
and
pusha
xor
jle
inc
mov
inc
sbb
daa
jmp
fiadds
ljmp
inc
repz
aam
jge
cmc
jp
aaa
arpl
sbb
imul
mov
jg
clc
push
mov
xchg
imul
jle
xchg
xchg
xor
mov
jno
call
loopne
gs
mov
aaa
push
or
fadds
push
pusha
inc
push
pop
jnp
cwtl
lret
daa
or
xchg
mov
inc
das
aam
xor
mov
adc
out
and
sbb
dec
shrl
add
mov
cmp
or
sub
lods
sahf
fwait
cmp
insb
mov
daa
stos
push
cmp
pop
inc
add
push
push
pinsrw
cmp
push
dec
icebp
cmp
sub
pop
pushf
rcll
mov
xchg
out
and
aad
clc
arpl
aaa
pop
aas
push
inc
mov
stos
test
movsb
mov
inc
jb
jge
lcall
push
xor
push
lcall
out
mov
jo
jb
fsub
stos
mov
cmp
leave
lods
or
movsb
lock
xchg
cmpsl
jae
arpl
adc
pop
enter
out
pop
mov
or
lods
sbbb
pop
jne
add
das
adc
imul
std
stos
out
daa
fcoms
and
mov
inc
mov
pop
push
mov
mov
int
inc
inc
adc
pushf
out
mov
pop
push
into
inc
pop
cwtl
popa
sub
xor
mov
adc
data16
ja
rorl
out
je
mov
pop
ret
lds
aas
push
stos
fisubl
daa
bnd
mov
or
inc
sub
mov
xchg
sahf
out
pop
cmp
sahf
lret
jge
lret
pop
cmc
sub
jno
xlat
mov
push
repnz
arpl
scas
test
lcall
add
pop
jl
lret
lahf
adc
sahf
and
popa
push
aam
cwtl
lret
mov
or
movsl
pushf
inc
negb
xor
lods
popf
cli
pop
mov
dec
loopne
pop
dec
mov
int
mull
mov
imul
out
cs
mov
or
push
inc
lahf
cmpsb
mov
sbb
cmp
das
jp
scas
rcrl
dec
shlb
je
and
lock
cmpsl
clc
ret
jno
mov
push
xor
pop
movsb
ss
adc
lea
int3
xchg
or
push
dec
pop
jl
dec
lock
sbb
call
mov
dec
xor
ret
mov
gs
cli
cmc
movsb
pop
in
pop
inc
inc
lods
xor
lock
lret
in
scas
out
sub
inc
ret
cli
shll
icebp
inc
lcall
arpl
clc
and
aad
add
or
mov
pop
jg
push
pop
or
iret
mul
push
push
sbb
pop
xchg
push
in
mov
dec
jmp
shll
rorb
or
hlt
mov
in
adc
jle
cli
sub
adc
xor
insl
adc
mov
lret
icebp
mov
add
cli
pop
jne
cmp
add
addr16
xchg
aad
mov
insl
out
pop
cmp
inc
xor
inc
xchg
adc
jnp
mov
int
call
mov
adc
out
cld
xor
out
jmp
subl
xchg
ja
negb
mov
loop
cld
xchg
push
sub
adcb
xchg
data16
add
lret
mov
jp
std
xorb
cmp
dec
mov
jnp
lea
mov
jo
insb
and
jno
mov
ljmp
push
push
bound
push
cmp
and
shr
jb
mov
test
xor
shrb
in
pop
ret
out
jns
outsb
aas
sbb
or
pusha
xor
cmp
adc
mov
push
and
pop
jg
loope
pop
les
add
mov
addr16
rol
push
shll
sub
aas
mov
and
or
sbb
jmp
movsl
sub
lahf
xlat
xchg
divb
and
dec
das
mov
scas
adc
jb
adc
sbb
aam
adc
push
xchg
inc
les
cmp
jne
mov
inc
aad
or
inc
adc
sbbb
popf
in
bound
lret
rcrl
pop
sub
ret
add
cmpsb
inc
inc
mov
fistpl
les
fistpll
pop
inc
pop
loop
or
pop
mov
ljmp
add
mov
inc
dec
orl
outsl
adc
push
mov
movsb
fisubrl
mov
outsl
imul
nop
and
push
cmpb
scas
stc
xor
shlb
repnz
sti
xor
aaa
std
in
pop
dec
mov
cmp
mov
loopne
xor
jno
sbb
jle
cmp
mov
aas
and
pop
cmp
mov
enter
orb
sbb
imul
mov
fadds
icebp
lahf
jl
sahf
sbb
lcall
jecxz
scas
xor
ret
add
bound
sahf
mov
push
sub
test
jle
jl
lahf
mov
sub
fsubs
pop
jb
mov
in
daa
ljmp
sbb
push
jg
mov
mov
adc
filds
xlat
sbb
sbb
mov
lcall
int3
clc
jge
insl
xor
mov
cmp
push
mov
popf
or
and
in
dec
and
mov
scas
push
es
dec
jne
jno
inc
lds
setnp
add
fs
into
lret
ss
arpl
hlt
push
loop
pop
inc
es
jmp
clc
mov
sub
dec
out
in
sar
inc
or
std
xor
fsubs
add
jmp
ret
mov
pop
pop
cwtd
xchg
shll
es
adc
cmp
mov
or
imul
inc
es
and
sbb
rcrb
out
mov
int
fbld
loop
pop
fisubs
adc
aam
paddq
lods
jns
sub
or
insb
ret
and
sbb
les
test
jmp
xorb
ret
push
mov
and
mov
pop
fucomi
shlb
mov
icebp
push
dec
and
lea
clc
aas
imul
fistps
fists
sbb
out
jge
outsl
sub
cltd
imul
dec
push
xchg
add
bound
and
dec
in
sbb
add
ret
cmpsl
jo
imul
cltd
and
and
pop
or
mov
push
xchg
cmp
push
xchg
jae
sbb
mov
repz
xchg
mov
fstpt
stc
pusha
pushf
popa
mov
jmp
push
or
adc
sub
xor
popf
dec
popf
cmc
shll
sbb
loopne
sbb
imull
inc
xchg
pop
push
leave
inc
loope
popa
adc
pop
negb
test
mov
lret
mov
cmc
test
mov
jnp
cmpl
pop
mov
sarb
inc
sahf
xchg
das
mov
jp
push
dec
mov
adc
into
mov
js
push
mov
pop
mov
pushf
pop
push
lret
out
push
adc
clc
sub
fnsave
and
imul
js
loop
lock
sbb
add
in
pop
mov
orb
jmp
inc
into
cmp
mov
jns
in
mov
repnz
sbb
repz
ds
sbb
pop
lods
and
jmp
push
mov
and
inc
xlat
ja
add
xor
mov
dec
repnz
sub
jmp
add
dec
xchg
mov
mov
mov
jge
in
aaa
inc
inc
xchg
pop
fs
in
shl
cmpsl
sahf
inc
rorl
test
jmp
les
fs
jl
or
and
mov
stc
sbb
mov
jo
sub
in
add
mov
stos
jbe
jbe
jne
aas
xchg
fisubrs
insl
test
push
popl
cmp
pop
sub
es
scas
out
fidivrl
lret
inc
xlat
je
cwtl
adc
loopne
mov
sub
imul
xchg
jnp
scas
loope
pop
xlat
mov
pop
cmp
mov
std
iret
gs
pop
xchg
aas
leave
inc
pop
sbb
sbb
mov
push
int
enter
gs
pushl
loope
unpcklps
arpl
sub
push
cmc
ljmp
pop
push
rclb
test
fs
and
and
gs
movsb
and
push
jle
fisttpll
ret
sub
loopne
adc
roll
std
sub
lds
jnp
inc
stos
test
adc
cltd
inc
xor
cmpsl
adc
outsb
shll
lea
sahf
ds
jmp
das
sbb
pusha
lahf
pop
push
push
iret
dec
pop
incl
add
mov
mov
sbb
cmc
mov
rcll
jae
mov
jns
cltd
lahf
jecxz
inc
cltd
icebp
frstor
cmp
adc
xchg
mov
sub
enter
xchg
push
mov
adc
je
icebp
mov
xchg
pop
cltd
cmp
xchg
mov
mov
push
mov
push
test
scas
lods
jo
pop
xor
jg
lods
sbb
push
xchg
lret
es
shlb
stos
loope
mull
inc
or
pushf
push
mov
pushf
xchg
inc
cmpsb
ficoml
loop
sub
sub
dec
cmp
xor
stos
js
push
jbe
sub
xchg
test
push
scas
sub
mov
aad
movsl
int
add
dec
xlat
xchg
enter
ds
sub
js
pop
xor
pushf
mov
pushf
and
scas
repnz
xor
xchg
mov
jb
sub
inc
sub
push
or
dec
jbe
mov
adc
pop
xchg
cld
xchg
mov
fimuls
xchg
fbstp
ficoms
arpl
jns,pn
imul
loope
add
adcl
out
jp
test
push
dec
into
in
xchg
xchg
ret
sub
cld
sbb
call
sub
in
jnp
test
push
sahf
and
lahf
jecxz
decb
into
sbb
mov
mov
cmp
jno
xchg
mov
insl
push
ss
daa
inc
test
mov
scas
xor
jbe
push
jp
mov
dec
mov
imul
push
mov
jne
or
mov
dec
ljmp
dec
cwtl
and
dec
push
pop
dec
mov
pop
pop
and
adc
or
ficomps
imul
sub
pop
lret
ds
std
pop
adc
mov
scas
push
addl
adc
or
ja
cmc
push
and
dec
filds
sub
test
fwait
push
cmp
fisubrs
fpatan
mov
iret
rclb
jb
aam
or
xchg
sub
mov
push
push
pop
ficoms
push
cld
ret
push
adcl
cwtl
iret
jnp
out
jne
mov
pop
lahf
and
push
into
call
jecxz
fistpll
sub
in
shlb
mov
sub
cmp
inc
xor
sub
das
int
cli
adc
sub
fstps
xchg
push
scas
or
jle
addr16
mov
jno
js
mov
arpl
lock
imul
inc
movzwl
pop
jnp
dec
pop
cs
clc
mov
sarl
inc
adc
inc
push
cli
xchg
les
dec
inc
push
js
add
fwait
mov
je
shll
fsub
dec
iret
iret
push
inc
fisttpll
mov
adc
adc
mov
jbe
out
lret
mov
icebp
movsb
jo
and
cmp
add
sbb
ds
sbb
jg
dec
cmp
pusha
fsubrl
insb
movb
into
data16
xor
mov
and
test
dec
pop
shlb
push
je
pushf
push
fs
sbb
adc
subb
push
dec
inc
cmc
stos
pop
add
mov
dec
testl
xchg
testl
jbe
lds
or
inc
dec
jno
jmp
sbbb
mov
mov
jmp
mov
addr16
pop
mov
sub
inc
pop
repz
ja
popf
push
pop
cmp
xchg
mov
lcall
jl
xchg
fiadds
push
sub
lods
lcall
mov
jge
pop
inc
mov
movsb
dec
jo
rcl
ja
lods
mov
add
out
jmp
lret
out
out
mov
jne
xchg
mov
xchg
cmp
inc
mov
stos
out
pop
es
sbb
mov
lods
push
in
pop
mov
cmc
adc
cmp
movsl
ret
jbe
stos
into
mov
cmp
js
xchg
lret
mov
hlt
fcoml
adc
adc
sarb
dec
loop
jbe
xor
in
push
pop
sub
mov
out
or
xchg
or
cmp
sbb
pop
addr16
cmpl
int3
jnp
sbb
inc
jle
ds
pop
movsb
lret
inc
add
or
aam
pop
jecxz
aas
js
lcall
lcall
aam
imul
jle
fadds
mov
cs
test
xorl
std
xor
dec
mov
dec
enter
stc
in
mov
pop
ja
push
jl
or
jmp
push
sar
cmpsl
pop
add
in
or
pop
push
cli
dec
ret
incl
fbstp
out
sbb
and
ss
adc
sub
sbb
and
lcall
pmulhuw
inc
push
std
adc
dec
ss
mov
sbb
pop
out
pop
xor
dec
sub
and
bound
pop
sti
add
sar
mov
js
inc
les
lods
push
adc
dec
ficomps
jns
sub
addr16
adc
mov
xchg
xchg
lds
jnp
dec
pop
imull
inc
jb
in
mov
cs
jmp
sbb
sub
test
dec
arpl
mov
test
xor
sub
imul
aas
sbb
mov
sub
mov
pop
pop
stos
mov
push
dec
add
divl
or
sti
ret
sbb
loope
fs
sti
movsb
mov
mov
cmp
pushf
loopne
cmpsb
mov
bound
out
fcom
ss
and
stos
jns
mov
sahf
shrb
mov
mov
sub
scas
mov
es
sbb
and
enter
push
cmp
inc
adc
test
pop
sahf
stos
push
xchg
add
in
and
mov
mov
loop
test
shll
cmp
lds
xchg
sub
jnp
repnz
arpl
in
fiaddl
jp
xor
inc
rcr
out
pop
out
pop
sbb
iret
fwait
movzbl
push
lcall
dec
cltd
sbb
sub
dec
push
mov
mov
mov
inc
mov
lcall
mov
dec
xchg
pop
lea
sbb
fidivl
cwtl
popf
mov
pop
add
es
int
mov
shrl
push
pop
adc
loope
rorb
jo
adc
sti
popa
cli
mov
xor
sbb
mov
and
pop
and
ds
mov
call
fbstp
mov
mov
and
or
cmpsb
out
mov
test
popf
dec
fs
cmc
mov
scas
out
sti
andl
jecxz
lods
test
fldt
movsl
int
out
push
cmp
ja
aaa
dec
mov
in
mov
mov
les
jp
xchg
ja,pn
push
sub
stos
mov
xchg
pop
mov
or
cld
in
fdivrp
popa
sbb
cmp
loop
adcl
dec
mov
sbb
dec
mov
mov
push
jmp
into
sbb
into
mov
xlat
insb
sbb
ljmp
shll
loop
push
mov
sahf
gs
mov
pushf
pop
sar
push
cmp
je
jo
push
ss
ss
rcr
or
sbb
dec
xchg
fdivp
fmulp
push
stc
sbb
repz
fstpt
loop
mov
sarb
lods
sbb
aad
pop
adc
inc
mov
add
xchg
pushf
or
jnp
repz
mov
inc
and
out
mov
cltd
cmp
sbb
and
xor
or
dec
and
je
xor
inc
xchg
clc
mov
pop
xchg
jmp
jns
inc
addr16
mov
xchg
sti
popf
jno
xor
aas
dec
jl
insb
in
pop
mov
gs
xor
out
clc
popl
call
or
mov
sub
pop
iret
je
lods
mov
xor
addl
sub
mov
ljmp
lea
dec
jne
push
out
mov
jecxz
fmuls
mov
or
outsl
insb
repnz
and
in
or
mov
inc
xor
mov
mov
iret
add
test
inc
stc
sbb
lock
inc
cmp
or
out
mov
cmp
or
xlat
jge
sub
in
sahf
dec
aaa
lahf
sub
jle
loope
mov
and
icebp
stos
aaa
in
mov
test
cmp
ljmp
push
outsb
dec
mov
mov
sbb
cmp
sbb
sub
aad
jae
shr
push
pop
icebp
int3
pop
int
xchg
mov
xorl
add
ljmp
in
xchg
dec
std
xchg
lahf
jmp
ficoms
push
and
xchg
or
pushf
mov
inc
fwait
les
out
mov
push
xchg
fcmovnbe
inc
jge
popa
inc
int
or
ss
sbb
sbbb
scas
xchg
fnstsw
mov
pop
fidivrs
and
and
and
test
inc
addr16
mov
testb
fxch
ja
jae
out
sub
dec
dec
inc
fsub
lret
jl
jns
adc
xchg
push
dec
rcrl
sub
sub
push
pop
jmp
adc
cmpsb
adc
adc
push
xlat
insb
dec
dec
push
aaa
and
enter
ss
push
xor
clc
pop
pop
lods
jne
lods
ret
jnp
loop
cmp
mov
das
mov
cmp
cmp
pop
adc
add
adc
mov
sbb
iret
mov
stc
inc
fistps
pop
outsl
jns
mov
pop
outsb
stos
jb
incl
icebp
ss
adc
mov
loopne
ficoms
cmp
mov
mov
cwtl
popa
xor
mov
shr
mov
dec
nop
mov
mov
push
push
scas
add
fistl
shrb
jl
and
loop
nop
push
arpl
pushf
mov
call
cmp
push
imul
into
aaa
iret
sahf
dec
sbb
and
push
aam
cltd
cmpsl
rorb
or
shlb
pop
icebp
dec
fcomps
dec
mov
jo
rcl
dec
dec
jle
xchg
daa
dec
pop
mov
push
cmp
push
out
dec
or
add
stos
adc
inc
xchg
or
pop
popa
mov
inc
add
inc
repz
popa
popf
les
cld
xchg
adc
gs
loope
cmp
and
push
rcrb
aaa
or
xchg
and
mov
jne
jg
xor
inc
and
movsl
push
mov
cwtl
jmp
pop
sahf
xchg
pop
stos
stc
push
fsubrs
pop
aam
push
lds
mov
jns
sbb
jo
ds
icebp
pop
test
push
pop
mov
pop
xlat
je
mov
sub
adc
daa
push
outsb
xchg
adc
xchg
sbb
test
pop
daa
add
out
dec
leave
lods
cmpsl
xchg
stos
mov
xor
popf
sarb
insl
pop
lret
adc
test
notl
test
inc
push
mov
daa
or
stc
xchg
in
dec
sbb
in
dec
in
fdivrs
pop
repnz
and
int3
jle
xchg
inc
mov
add
dec
mov
sub
pop
outsb
and
or
jns
in
mul
pop
out
outsl
xor
test
push
jnp
xlat
lret
shlb
out
jmp
jle
push
and
xchg
xchg
push
imull
fwait
mov
xlat
mov
fmuls
pop
push
inc
dec
iret
repnz
lret
out
faddl
cli
ret
movsb
in
xchg
in
lret
lret
adc
js
das
mov
mov
and
mov
les
hlt
pop
les
sbb
mov
xor
cld
dec
adc
mov
clc
jae
mov
add
int
cmpsb
and
cmp
fstp
jp
cs
lods
addr16
aas
sub
pop
sbb
sub
clc
jp
or
or
adc
popf
dec
adc
int3
jo
jae
xor
testb
mov
mov
fcoml
pop
cmpsb
notb
stos
sbb
fwait
stos
fdivrp
std
fldl
sub
sbb
jne
mov
ret
inc
in
mov
xchg
mov
xchg
jecxz
xor
ljmp
lret
fs
jmp
pop
or
xlat
xor
ss
sbb
je
test
daa
adc
lods
cmpl
nop
push
repz
ja
mov
cli
cmp
or
cmc
aad
xchg
fnstenv
mov
sub
movsb
mov
mov
pop
aas
xor
fcomip
or
mov
cli
testl
mov
in
ds
xchg
test
scas
imul
sti
loope
lods
lock
xchg
xorl
sub
lds
loope
pop
mov
mov
les
xchg
jle
and
out
mov
aam
cmp
stc
lods
leave
xor
outsl
ja
push
push
lahf
sbb
xchg
addr16
addb
fldt
mov
lock
rorl
incb
and
adc
cmp
sub
dec
aad
test
push
popf
cmp
xchg
mov
lds
xor
sub
stc
lods
icebp
sub
xor
sbb
lods
rorl
push
idivl
sbb
insl
sub
jnp
xchg
pop
push
outsb
add
jb
hlt
inc
dec
dec
shl
jb
mov
scas
mov
je
sub
jbe
fnsave
shl
lods
es
sub
inc
insl
mov
push
icebp
add
mov
xor
cmp
scas
in
xchg
cltd
adc
addl
stc
sahf
dec
aam
aad
xchg
mov
shl
jb
jns
call
add
imul
rcll
mov
inc
xchg
mov
int
cmp
cmp
scas
clc
jecxz
push
dec
and
lods
shl
sbb
aad
lea
mov
dec
jmp
xor
push
sub
es
mov
in
push
ds
cmp
mov
xchg
je
out
subb
pushf
cmc
xor
mov
std
flds
call
mov
subb
cmpsb
jecxz
fldt
push
subl
sbbl
inc
lods
inc
xchg
cmp
inc
sbb
dec
je
mov
mov
outsb
push
lds
stc
push
push
xchg
jle
test
cmp
aad
add
pop
adcl
xor
sub
push
data16
insl
sub
mov
enterw
xchg
inc
dec
sbb
push
lods
scas
sub
inc
xchg
out
lret
pushf
je
jecxz
jne
lret
lock
sbbb
lods
cwtl
clc
jge
push
and
in
cmp
push
pop
inc
cmp
pop
inc
setge
sub
and
push
dec
adc
inc
push
and
pop
int
outsb
or
dec
xchg
outsb
pop
test
sahf
pop
hlt
arpl
pop
pop
dec
inc
adc
push
jp
mov
rcrb
loopne
sub
loope
pop
movsl
cmp
adc
sbb
scas
int3
cwtl
gs
mov
inc
add
repnz
xchg
cli
out
pop
xor
mov
jmp
add
lsl
mov
enter
aad
sbb
xor
fmulp
cmc
push
sub
xor
daa
jo
outsl
xchg
pushl
sub
popf
and
addr16
jnp
les
or
jl
iret
jbe
jae
dec
rorl
xchg
jns
dec
dec
sahf
stc
test
sbb
out
icebp
mov
dec
inc
les
xchg
lods
pop
xchg
stos
cwtl
mov
in
scas
jl
xor
mov
icebp
push
push
js
in
or
outsl
mov
out
imull
or
std
fldenv
sub
test
int
and
fdivp
mov
push
test
or
ljmp
jg
stos
mov
mov
outsl
fucom
mov
mov
sub
in
and
shr
lods
fwait
dec
inc
and
into
jo
push
fisubrl
das
mov
xor
arpl
dec
add
pop
sbb
lea
sbb
pushl
adc
test
ficoml
sbb
inc
push
dec
push
insb
xor
xchg
sbb
adc
shll
mov
sbb
popf
xor
das
in
xchg
fwait
lods
cwtl
ds
icebp
bnd
sbb
xchg
sbb
outsl
stos
enter
or
cmpsl
insl
inc
in
add
jno
leave
jmp
orb
jb
aam
dec
xchg
lods
push
shll
loop
jo
sahf
mov
in
sahf
mov
xor
and
aas
dec
mov
sarl
outsl
push
jbe
or
lds
bound
mov
dec
pop
cmpsl
insl
mov
sbb
punpcklwd
inc
lret
call
js
test
into
xchg
cmp
int3
add
xchg
sub
xor
aaa
cltd
adcb
xor
rcrb
test
adc
mov
out
fbld
jne
push
xchg
stos
into
and
push
sbb
repz
mov
jp
inc
push
ss
mov
enter
stos
push
inc
cld
jge
fwait
outsb
sub
cmp
lods
mov
dec
jg
lock
mov
mov
stos
push
or
inc
aam
push
sub
xchg
dec
jmp
dec
push
mov
sub
insb
outsb
enter
imul
dec
or
cmpsb
mov
pcmpeqd
test
inc
lds
dec
add
pop
jns
mov
jb
dec
testl
mov
jl
repz
rolb
js
adc
jae
mov
adc
mov
sub
cld
jmp
ss
ja
push
lods
inc
add
mov
nop
fcoml
leave
pop
sbb
cltd
and
mov
sbb
stos
mov
jg
loope
mov
in
xlat
insl
inc
pop
lock
jg
lds
hlt
xor
loop
push
adc
mov
sub
inc
add
int3
inc
push
lret
iret
mov
je
fisttps
out
shl
xor
bnd
mov
jns
lea
jnp
repnz
inc
push
incl
hlt
mov
mov
out
lcall
mov
ljmp
test
cmpsb
push
dec
outsb
roll
xlat
sub
cwtl
sarb
test
adc
mov
inc
cwtl
call
lret
inc
cmp
loopne
stos
pusha
lret
mov
pop
inc
icebp
cmp
jl
lea
aas
and
push
inc
or
jg
jp
outsb
bound
pop
repnz
out
push
adc
mov
je
lahf
fbld
loope
pop
mov
mov
in
movsb
dec
xor
fwait
pop
test
ss
and
sarl
lret
push
inc
nop
popf
and
sbb
rorl
into
lods
and
in
mov
subb
fsub
adc
arpl
cwtl
and
xlat
push
fwait
xor
dec
ss
push
lock
data16
in
or
dec
mov
daa
insl
dec
pushf
rcrb
mov
inc
sub
inc
dec
mov
lock
out
shrl
push
dec
int
stos
cmp
cmpsl
pop
fisubl
stos
das
or
and
jno
sbb
dec
xchg
mov
bswap
xchg
in
or
call
das
test
adc
repz
lret
xor
aam
adc
ljmp
pop
xlat
iret
sbb
mov
sbb
pop
xchg
mov
or
mov
dec
jmp
jge
xchg
es
pop
jb
int
dec
pushf
add
in
pop
xor
cwtl
enter
out
shll
inc
push
xchg
or
inc
pop
mov
fiadds
lahf
push
inc
sub
jge
mov
sbb
adc
adc
ljmp
inc
and
popf
and
leave
rep
int3
cmpsl
dec
mov
out
pop
leave
pop
mov
dec
mov
sbb
xor
lods
rolb
leave
stos
clc
push
adc
lcall
jle
cld
sbb
or
push
scas
jo
call
dec
sub
fs
fsubrs
dec
sbb
add
sbb
mov
ss
std
insb
in
add
mov
adc
std
js
jbe
or
cld
dec
adc
je
jne
mov
lret
and
daa
xchg
shl
push
inc
subl
mov
inc
jmp
shl
push
xor
out
push
pop
xchg
mov
in
mov
adc
test
movsl
int
into
sub
imul
xchg
sbb
push
into
imul
cmpsl
movsb
pop
push
mov
ja
pop
jae
add
jge
jp
push
pop
mov
add
aaa
add
add
xor
add
lds
aaa
std
fstps
push
mov
sbb
in
ja
cmp
and
enter
test
mov
jecxz
ret
ds
je
dec
and
mov
out
orl
adc
lahf
into
pop
cltd
mov
repz
pop
ds
fidivl
sbb
and
sub
inc
mov
pop
out
mov
jge
shlb
movsb
aas
into
rcll
dec
jo
pop
push
xchg
out
out
sarb
or
push
rorl
int3
lods
and
xor
enter
pop
js
stos
aas
and
fstps
xor
je
inc
mov
pop
fcomp
popf
push
leave
fstps
addb
lods
popa
je
loope
rol
add
jne
xor
add
xchg
int3
ss
je
xchg
inc
sbb
push
push
jg
jno
cltd
mov
js
cmpl
das
dec
cmp
mov
adc
hlt
rolb
lock
adc
mov
lock
fisttpll
jb
jge
xlat
es
xchg
test
sahf
aaa
mov
dec
jge
in
add
aaa
loopne
ret
pop
mov
push
shr
cmpsl
out
and
insl
mov
pcmpgtd
xchg
jns
test
fcmovnbe
xchg
xchg
ficompl
push
jmp
imul
cmp
mov
mov
xchg
pop
test
lea
mov
or
cmp
fcomps
xchg
notl
jmp
adc
movsl
repz
arpl
movsb
repz
add
cmp
sub
movsb
loope
out
adc
mov
jbe
cmp
jne
icebp
loopne
lods
test
mov
aad
push
stos
jp
mov
xchg
push
lea
js
roll
xor
in
jbe
int
mov
and
inc
inc
lods
mov
xchg
mov
scas
lea
sub
and
movsb
sub
addr16
sahf
int
push
cwtl
test
inc
pop
pop
pusha
mov
cmp
mov
in
adc
push
jl
xlat
std
divl
add
mov
in
inc
dec
cmp
mov
push
mov
aas
fwait
loop
or
lcall
mov
cmc
shlb
add
xchg
cmpl
int
sbb
inc
pop
add
mov
cmpsb
mov
scas
int3
es
movsl
repnz
fs
repnz
xor
push
inc
push
pop
add
cmp
adc
jo
xor
jbe
test
testl
lods
or
stos
jle
inc
roll
pop
std
or
sub
mov
shlb
cmp
jb
add
clc
inc
lds
cld
mov
fiaddl
lds
test
mov
sub
cmp
pop
fsubrl
adc
add
gs
repnz
inc
test
xchg
mov
cwtl
jnp
mov
das
fxch
lcall
fidivl
fcoml
xchg
jp
xor
xrelease
inc
cmp
xor
xchg
jg
fwait
cmp
out
cmp
sti
mov
lret
jbe
xor
inc
enter
adc
jmp
iret
gs
jmp
ljmp
jns
and
in
or
push
or
sbb
xor
jge
cmpsl
cld
movsl
jae
popa
jbe
out
sub
repnz
in
dec
hlt
mov
pop
dec
sbb
adc
jp
fnsave
adc
pop
daa
mov
sub
push
shlb
pop
lea
cwtl
call
push
es
add
mov
sbb
adc
xchg
jnp
insl
mov
sbb
mov
and
sub
mov
push
and
aas
push
in
pop
rcrb
sarl
subb
sbb
int
es
into
adc
mov
mov
repz
pop
cmp
jae
jge
cmp
cmpsl
int
cwtl
xor
inc
mul
gs
int3
decb
ficoms
push
push
pop
adc
jno
in
sub
std
cmp
divb
in
fidivl
cmp
lods
test
lods
xchg
pop
dec
lret
cmp
test
dec
ficoms
repz
loop
push
fimull
imul
and
add
or
push
mov
fistpll
pop
rcll
js
jo
cmp
sbbb
adcl
sbbb
stos
sbb
stos
xchg
in
xor
jg
sub
in
inc
cmp
jae
adc
lcall
cld
xor
xchg
fsubrs
xor
push
inc
dec
stos
nop
cltd
ret
cmp
mov
shlb
movsl
adc
addr16
negl
sub
cwtl
add
sub
fstpt
shlb
xlat
ja
add
xchg
pop
sbb
or
les
clc
shll
pop
xchg
mov
xor
mov
xchg
and
in
int3
xchg
mov
push
pop
gs
addr16
push
outsb
xchg
mov
insb
xchg
repz
add
mov
cld
mov
inc
or
out
mov
enter
das
iret
movsb
push
push
adc
movb
sahf
inc
dec
jg
xchg
dec
loope
call
lods
ficomps
pop
pop
cmp
add
movsl
cmpsl
pop
stos
popf
pusha
adc
pop
inc
xlat
hlt
clc
sub
push
shll
lcall
mov
sbb
stos
cmp
mov
sbb
nop
iret
jns
mov
in
aam
jmp
aad
add
enter
inc
push
outsb
pusha
out
aas
xor
dec
pushf
cmp
stc
jbe
pop
cli
ljmp
jbe
rdtsc
dec
mov
enter
pushf
cli
mov
shll
pop
push
in
and
inc
cmc
and
into
push
jb
movsb
inc
imul
jnp
js
addl
or
lock
cmp
mov
jl
mov
cmp
aaa
mov
lea
fwait
xchg
inc
jo
out
clc
jge
mov
push
addr16
cmp
jno
cltd
pop
sbbl
adc
or
xor
inc
in
inc
mov
mov
jmp
out
xor
xchg
add
ss
mov
pop
mov
div
in
rcrl
mov
mov
imul
das
in
xor
cmp
imul
mov
push
or
ret
push
aas
inc
leave
dec
mov
sub
xchg
cmpsb
push
sbb
inc
es
inc
sti
pop
xlat
sub
cmpsl
arpl
aad
int3
inc
pop
and
mov
inc
in
cmc
push
sbb
and
and
and
push
inc
cmpsl
fstps
sbb
xchg
jecxz
or
aam
push
dec
ss
ss
in
xor
mov
in
test
int3
les
push
cmp
inc
fs
cmp
stos
cmp
arpl
sbb
loopne
aad
rcll
sub
mov
add
push
sub
xchg
or
aaa
mov
jno
mov
fsubs
in
xchg
mov
cmp
mov
dec
or
xorl
dec
cmp
repnz
sbb
add
push
nop
icebp
dec
xor
and
pop
lds
adc
aad
inc
mov
imul
lods
mov
push
bound
adc
inc
cmp
fwait
xor
out
and
shlb
dec
in
icebp
jmp
jae
movsl
fiaddl
cs
in
sub
mov
loop
sti
test
cmp
test
pop
and
pop
cli
pusha
and
cltd
stos
inc
sbb
xchg
sbb
lret
idivl
stos
in
lods
ja
test
fnstcw
negb
sbb
cmpsl
sahf
mov
loop
imul
mov
xor
sub
pop
mov
outsl
leave
pusha
mov
bound
pop
mov
imul
ja
enter
jbe
lods
and
sbb
ret
adc
mov
cmp
cmpsb
movsb
test
mov
push
cmp
xor
xorb
xchg
jb
insl
mov
xchg
lods
adc
sti
add
aam
dec
ret
imul
mov
sub
cmp
ljmp
rorb
xchg
xor
shll
setle
mov
adc
pop
pop
pop
sub
mov
mov
mov
adc
add
call
aaa
std
cmp
scas
scas
pusha
fwait
call
lods
std
adc
xchg
fnsave
cmp
cwtl
jne
fcom
adc
inc
stos
out
daa
outsl
push
xor
mov
clc
push
and
add
inc
movsl
mov
xor
je
cmpsl
cmp
cmp
mov
jo
ss
pop
add
xchg
scas
add
sbb
orb
aam
adc
push
sbb
sahf
xor
movsl
pop
xor
push
add
cmp
add
sti
xchg
mov
or
pop
add
shl
dec
jbe
adc
and
jae
and
shrb
rcrb
lods
and
xchg
add
push
mov
push
dec
stos
or
mov
mov
mov
dec
ljmp
push
sbb
jns
ds
negb
cli
pop
push
cs
jge
fsin
push
ja
dec
loop
or
pop
mov
notl
xlat
js
pop
dec
test
out
adc
movsl
push
jp
jns
out
test
call
mov
add
xchg
fwait
mov
imul
mov
xchg
sub
fstpl
jmp
xchg
ficomps
repnz
cmp
push
xchg
push
mov
push
push
pushf
push
mov
ljmp
jle
in
mov
stos
and
sar
sub
stc
aam
inc
cmp
pushf
xchg
stc
movsl
add
sbb
je
shll
movsl
outsl
pushf
pop
loope
stos
lret
inc
test
jmp
std
cmp
stc
and
outsb
lea
or
out
loop
lods
jns
andl
sar
call
dec
movb
cmp
fs
add
push
lcall
cld
test
dec
insb
jbe
je
xchg
jnp
loopne
ja
insl
pop
sbb
inc
mov
dec
cltd
sbb
push
data16
inc
jnp
dec
sbb
jo
dec
test
lret
push
add
out
cmp
or
cmc
dec
fstl
ss
sbb
push
iret
ljmp
sub
and
xchg
sbb
inc
dec
pop
out
addb
sub
leave
push
lcall
mov
or
mov
xor
jecxz
fldt
xchg
and
daa
int3
or
adc
rorl
push
scas
push
sbb
pushf
insl
test
xlat
jo
movsl
les
cmp
dec
cs
mov
inc
sub
cmp
or
repz
add
cmp
jbe
add
dec
jp
xchg
cmpsl
popf
loop
imul
fistl
insl
mov
mov
inc
or
jb
out
mov
xchg
insl
jae
or
mov
fwait
pop
sbb
xchg
mov
mov
jbe
adc
enter
or
adc
mov
pop
int3
dec
jmp
pop
inc
addl
xchg
cmpsb
int
testl
add
iret
bound
jp
pushf
subl
mov
outsl
dec
cmpsb
push
and
xchg
mov
xchg
leave
xchg
loopne
sbb
in
mov
push
hlt
push
sbb
lock
jecxz
pop
scas
and
add
mov
fildll
xchg
dec
cltd
dec
shll
cmpsb
adc
jns
notl
scas
cwtl
sbb
push
fcmovu
jnp
nop
push
out
aaa
fists
push
cmp
jno
imul
xor
rolb
add
daa
mov
xchg
cmpl
sub
sub
cwtl
fisubl
and
or
and
std
mov
arpl
sbb
xchg
push
js
mov
dec
jae
add
out
sbb
push
adc
dec
ss
pop
pop
data16
loopne
cmp
jp
xchg
mov
push
push
cmp
jecxz
inc
sbb
jecxz
rcrb
dec
xchg
and
ud2
push
and
or
rol
cwtl
popa
mov
popa
jno
jl
ret
and
arpl
pop
sti
outsb
mov
mov
popf
push
loope
pop
iret
and
loope
mov
aas
lahf
or
mov
repz
mov
into
gs
jmp
mov
and
jp
jl
sub
pop
dec
pushl
sbb
lcall
push
aas
lahf
mov
outsl
jmp
push
pusha
mov
jb
dec
mov
fmulp
push
mov
mov
xchg
xor
pop
sbb
fdivrl
cmpsl
cmpsl
sub
pusha
ficoml
decl
jae
cmp
push
xor
cmp
sub
fisttpll
imul
adc
mov
or
mov
sub
xchg
sub
cmpl
sub
ja
add
ja
nop
imulb
mov
dec
imull
xchg
das
cld
scas
dec
test
and
add
mov
pop
sti
xchg
aad
mov
and
jle
or
in
jmp
push
add
adc
add
test
push
ficomps
xor
mov
sub
mov
pop
xchg
dec
andb
ffreep
cmpsb
push
and
push
push
sbb
adc
add
sbb
xor
aaa
enter
imul
stc
and
lods
mov
mov
cmpsl
filds
cli
jle
and
cld
pop
sahf
aam
xchg
dec
mov
jno
les
push
call
jecxz
stos
test
push
nop
fistl
jno
pop
lods
mov
mov
fnsave
mov
sub
repnz
dec
dec
in
cmpsb
mov
mov
mov
jp
subb
mov
add
xchg
sub
subl
add
xor
pop
or
insb
push
outsl
xchg
push
jbe
mov
jnp
cmpl
test
imul
xor
xchg
ja
sbb
mov
mov
shl
lret
adc
pop
in
sti
and
mov
xor
ret
xor
stc
imul
jne
xchg
lea
mov
add
int
add
lds
jne
xor
daa
xor
cmc
scas
jbe
sbb
dec
push
movsl
mov
mov
and
xor
fsubl
popf
dec
and
jp
in
test
mov
add
ljmp
and
fistpll
adcl
cmp
dec
cmpsl
adc
and
fists
jp
sub
scas
ror
push
push
mov
mov
in
add
pop
fwait
scas
cli
sarl
pop
xchg
lea
inc
ds
cmp
dec
fwait
popa
dec
stos
jb
fsub
xor
scas
stos
xor
aad
inc
daa
aam
pusha
push
inc
and
enter
and
ret
xor
in
in
scas
pop
dec
in
xchg
xorb
jp
rcl
hlt
mov
imul
in
gs
fcmove
jmp
cmp
and
push
and
jbe
pop
add
movsb
std
jmp
out
xor
cmp
dec
inc
adcb
mov
xchg
test
jmp
neg
and
pop
ds
xor
incb
sbb
lret
rcrl
sub
lods
push
mov
inc
aad
cmp
inc
adc
adc
mov
mov
sbb
notb
add
push
xchg
and
mov
ss
fsubrl
lock
sub
jp
in
aam
pop
sbb
and
in
data16
and
insl
data16
cmc
push
pop
pop
mov
xor
xchg
push
popa
jns
loope
xor
sbb
dec
ret
inc
ds
fbld
sbb
cmpsl
repz
fcmovb
popa
inc
stos
cmp
cmpsb
push
mov
fdivr
xchg
cmp
not
dec
mov
in
inc
lods
arpl
adc
add
mov
scas
jl
pop
mov
movsb
mov
dec
fldenv
subb
jl
inc
shrb
inc
lods
or
pop
jno
icebp
nop
flds
aam
push
out
xor
inc
mov
imul
enter
insl
xchg
lods
cmp
mov
das
andb
mov
mov
jne
push
fidivs
lods
sub
inc
outsl
mov
fucomip
push
xchg
ljmp
adc
pop
mov
or
addr16
ret
mov
pop
pusha
xor
xchg
aas
push
ret
fimull
mov
out
add
xchg
imul
add
mov
jle
xor
pop
rcll
cld
andl
adc
lret
jle
jmp
into
mov
jnp
sbb
push
sbb
lea
pop
bound
mov
add
inc
test
mov
jl
and
xchg
sub
inc
add
movsl
xchg
xchg
in
bound
adc
xchg
mov
int
popf
aaa
adc
cwtl
xor
arpl
xlat
in
jb
push
sbb
js
out
jns
cmpl
mov
lods
adc
data16
shl
adc
and
sub
adc
mov
in
addr16
int3
or
call
aaa
ljmp
mov
roll
and
fcmovu
ss
jg
xchg
jg
test
sbb
aas
xor
push
inc
and
lahf
les
sti
xchg
hlt
push
cmpsl
jno
add
jmp
cmp
scas
xchg
lret
push
mov
pop
jne
das
xchg
imul
dec
inc
mov
xchg
dec
jl
dec
or
leave
push
fwait
pop
rol
jg
sbb
std
int3
bound
and
xor
das
or
je
sti
sarb
mov
outsl
dec
mov
lods
scas
sub
or
lods
cld
in
repz
mov
mov
mov
jns
cwtl
jbe
push
fucomp
adc
fisubl
gs
dec
mov
rcll
jp
push
sarl
lret
push
jle
in
fnstsw
icebp
mov
je
mov
push
mov
jb
jo
sub
sub
sti
js
pop
sbb
pusha
dec
testl
pop
xchg
imul
push
sub
es
into
mov
dec
or
cmp
xchg
frstor
shll
arpl
fcomip
mov
inc
icebp
pop
pop
imul
stc
aam
jne
lock
xchg
lds
repnz
js
ljmp
stos
test
lock
mov
xchg
cmp
jne
mov
adc
inc
movsb
clc
in
fsubr
mov
adc
xchg
xchg
cmp
xor
cmc
rolb
cwtl
stos
negb
nop
aas
pop
je
out
xchg
mov
inc
movsb
das
dec
loop
mov
shrl
xchg
and
leave
arpl
xchg
into
outsl
mov
rorb
adc
add
mov
xchg
clc
and
inc
inc
dec
mov
xor
cmp
lcall
jle
enterw
fwait
or
add
scas
movsb
xchg
pop
das
ret
jle
cld
in
and
pop
jle
stos
jl
pop
rep
push
mov
call
js
lods
pextrw
mov
ret
push
and
ja
sbb
mov
ret
pop
push
das
cmp
push
jb
js
ja
push
push
push
jp
xchg
dec
jecxz
adc
xchg
mov
leave
fadd
out
sbb
jb
ss
add
insb
je
lea
lahf
fdiv
inc
or
mov
xchg
inc
jb
out
mov
xchg
mov
mov
dec
popf
clc
and
decb
sub
ret
inc
or
js
cmp
ds
sub
or
adc
es
andl
mov
in
mov
inc
adc
or
add
cmp
cli
mov
push
fs
xchg
or
int3
jns
cmp
inc
clc
mov
fists
decl
repnz
adc
pop
jae
mov
sbb
xor
cmpsl
push
fwait
std
xchg
std
jae
mov
add
mov
call
jnp
pop
jl
ret
outsl
sub
imul
jecxz
cltd
xlat
sbbb
mov
ret
xchg
movsb
jae
idivl
inc
adc
mulb
into
rcrb
lret
mov
or
push
or
mov
repnz
mov
aas
insb
jecxz
xlat
pop
out
sub
push
cmc
mov
fs
mov
pop
lcall
and
adc
cmp
sbbb
aad
sahf
call
divl
imul
xor
mov
or
fidivrs
dec
cltd
inc
jge
cmpsb
hlt
and
dec
bound
ss
push
roll
pop
xchg
adc
inc
aam
inc
mov
sbb
mov
inc
iret
xchg
sub
imul
out
hlt
das
rcrl
jne
dec
mov
sub
and
dec
and
dec
shrd
fucomip
sarl
and
filds
decl
lock
mov
sbb
mov
bound
inc
inc
out
xor
add
call
icebp
inc
push
ret
lds
test
xchg
and
int
cmpsb
pop
xor
imul
or
inc
shrl
pusha
or
repnz
js
add
popa
xchg
sbb
jo
push
ss
mov
or
ja
mov
jnp
mov
cltd
inc
jnp
mov
dec
push
popf
ljmp
jns
inc
scas
jecxz
adcb
std
add
push
notl
add
cli
jl
enter
xchg
jnp
or
out
test
jbe
test
pop
jne
ret
xor
mov
jmp
mov
inc
mov
pop
mov
sub
xlat
jae
jbe
pop
lret
repz
je
insl
mov
pop
cld
fdivrs
sub
or
shl
pop
imul
jns
inc
pop
sbb
cmp
leave
add
dec
popa
or
inc
dec
dec
scas
int3
or
xchg
dec
pop
rorl
sahf
xchg
jae
and
outsb
pop
int3
xor
shlb
jle
mov
lods
loop
out
mov
fimuls
lods
icebp
mov
pop
cmp
mov
inc
cmpsb
jns
into
jl
dec
shll
movsb
cs
push
lods
mov
lds
aam
mov
rcr
pop
xorb
mov
shlb
loope
cmpsl
adc
cmp
cwtl
rcll
fsts
fwait
and
jge
jge
add
lds
outsl
push
and
inc
cmp
and
mov
lret
jle
pop
outsl
lret
jp
out
or
mulb
xor
inc
mov
add
ret
fstl
cmp
add
cmp
add
jg
sbb
dec
mov
mov
sub
daa
into
add
in
cli
popf
scas
int
add
stos
ds
cmc
mov
jge
sarl
jae
ss
mov
lahf
fldt
imulb
adc
xchg
pop
ss
mov
icebp
xchg
rcll
cmpb
mov
add
in
cmpb
insb
sub
cmpxchg
add
sbb
clc
xor
movsb
repz
pop
inc
and
push
js
out
je
aas
pusha
fisubrl
xchg
xchg
out
mov
aas
inc
mov
lret
popf
dec
adc
jp
popf
adc
sub
lods
iret
cli
cmp
mov
fsub
adc
outsb
jp
call
mov
dec
test
pop
cmpb
les
addr16
flds
sarl
outsl
movsb
mov
dec
xchg
mov
je
clc
adc
gs
and
dec
test
sti
test
aaa
sbb
adc
sarb
frstor
add
out
vpsubw
sahf
shlb
hlt
mov
push
push
inc
in
mov
mov
cwtl
das
mov
push
dec
xchg
pop
subb
leave
popf
jle
cs
mov
jae
movsl
add
jae
mov
loopne
ds
fdivr
pop
mov
mov
xchg
add
jl
xchg
dec
repnz
push
out
xchg
fiadds
cmp
xchg
adc
dec
fcoms
push
sarl
and
popf
push
fsubs
push
adc
mov
in
lea
and
dec
pop
test
jecxz
jnp
push
out
inc
or
dec
aad
add
pop
clc
ficoms
and
mov
movsl
add
cli
cmpsb
pop
inc
mov
mov
cli
xchg
xchg
lret
xchg
aas
sub
push
cld
mov
mov
mov
movsb
loopne
icebp
jle
imul
rcrb
lock
pop
cltd
push
loop
stc
cmp
sub
xchg
mov
fs
call
fsub
cmp
mov
adc
cmp
cmp
mov
xchg
push
inc
out
sbb
rcrl
pop
or
mov
jp
push
je
adc
in
add
filds
js
cmp
dec
ds
push
dec
sbb
xchg
imul
icebp
shrb
arpl
mov
mov
shlb
mulb
cmp
xchg
icebp
lcall
add
jbe
push
add
divb
mov
test
jmp
movsb
or
outsb
out
cwtl
cs
xor
cmp
movsl
div
inc
leave
cmpsb
es
add
pushl
jl
cmpsl
sbb
pop
xor
pushf
cmc
mov
pop
scas
test
stos
cld
adc
dec
xchg
mov
push
fnsave
mov
cmp
les
xchg
xchg
add
push
fisubrl
jbe
fadd
cmpsb
popf
stos
fisubrs
mov
scas
add
lahf
dec
mov
sbb
push
enter
fnsave
dec
dec
sbb
sub
fadds
outsb
fnstcw
nop
arpl
pop
xchg
dec
ret
pxor
hlt
lea
sahf
jmp
sbb
xor
xlat
lret
aaa
and
popa
jb
test
lock
jle
adc
shlb
add
push
push
xchg
iret
push
mov
adc
shl
adc
xor
aad
ret
insl
mov
xchg
loop
icebp
sub
jne
enter
out
cmp
pop
jge
insl
test
or
mov
scas
sbb
inc
shlb
lock
std
ja
jo
cs
xor
mov
jnp
imul
pop
or
cmp
rcrl
inc
mov
jns
enter
pushf
add
imul
pop
dec
arpl
xchg
pushf
add
outsb
push
or
fst
cmp
push
cmc
data16
ljmp
jmp
insb
fdivrs
mov
call
dec
mov
pop
pop
sbb
ret
sti
in
stc
sub
and
mov
jle
adc
aaa
out
shr
rclb
xlat
insb
inc
daa
ja
es
inc
mov
mov
jl
fiaddl
jle
ret
enter
jnp
pop
cmp
in
rol
dec
lea
insl
loopne
inc
add
sbb
pusha
je
into
sahf
mov
push
push
cli
jle
shlb
mov
adc
dec
mov
add
flds
jmp
repnz
jmp
mov
call
aam
rorb
push
mov
and
xor
jb
lds
mov
shll
mov
or
es
sbb
xor
xchg
push
je
cld
inc
mov
push
sarl
lock
mov
jae
popw
fcoml
push
dec
out
les
pop
mov
pop
mov
test
or
lret
jb
cmpsl
out
inc
sub
xor
sub
loope
daa
mov
jae
push
lret
fdivs
aad
shll
aad
xor
out
sarw
lcall
jl
orl
outsb
lods
ret
out
pop
fdivl
pop
ljmp
dec
fcomps
mov
add
jle
cli
insb
xchg
cld
add
into
jge
push
fwait
loopne
pop
jge
mov
cs
inc
sbb
or
ds
ret
sub
int3
xor
nop
pop
and
push
mov
addb
push
pop
sbbl
shll
dec
aam
or
mov
outsl
test
sar
pop
pop
sbb
into
jg
sub
inc
test
lods
imul
jb
loope
lods
mov
ja
or
push
call
lret
xchg
mov
dec
or
mov
in
or
packssdw
pop
push
sbb
in
cmp
pushf
mov
out
loopne
stc
mov
add
sbb
mov
mov
ss
add
inc
mov
add
sbb
push
gs
imul
jg
je
xor
js
mov
cmp
cmc
cs
pop
push
mov
stc
jge
mov
lds
jmp
mov
daa
xchg
or
and
mov
addr16
push
test
sti
cmp
test
clc
arpl
jae
sahf
dec
and
sbb
pop
dec
scas
xchg
dec
andl
and
arpl
dec
lock
lods
mov
imul
inc
xchg
xchg
pop
mov
cmpb
mov
outsl
rcrb
pop
or
pushf
sub
pop
cwtl
mov
leave
sbbb
idivb
mov
inc
fbld
xchg
cmp
pop
xor
push
ja
popw
xchg
sti
popa
mov
popa
mov
lock
jb
mov
fisubrs
add
insl
scas
repz
out
sti
cli
pop
sub
pop
shrl
in
movsb
sar
jp
xchg
cwtl
repz
push
mov
cmc
adc
mov
mov
sbb
loopne
sbb
fwait
sbb
stos
ss
mov
lods
loope
or
movsl
push
mov
pushf
xor
outsl
or
rol
sbb
jmp
sub
popf
scas
mov
nop
orb
sub
sti
test
and
test
mov
or
and
rcrl
mov
or
jb
xchg
shr
sub
or
out
cld
repnz
adc
sbb
mov
mulb
lea
and
add
fdivs
push
adc
mov
lock
test
sub
dec
mov
in
imul
mov
dec
sub
mov
jo
sbbl
fildl
outsl
lret
ret
lea
andb
gs
push
into
nop
test
rorl
jl
fidivrs
int3
movsb
out
mulb
mov
test
or
add
xchg
push
xor
sub
popa
push
cmpsl
mov
fistpll
push
mov
add
lahf
add
push
dec
sub
andb
mov
bound
adc
cltd
xor
push
cli
into
pop
sbb
jmp
rcll
push
xchg
fwait
add
leave
lret
push
pop
xchg
push
daa
stc
outsl
push
das
rcl
sub
pop
jae
dec
sub
mov
mov
sbb
bswap
rorl
les
rcr
daa
cld
or
sub
sub
ss
push
or
leave
jmp
mov
mov
pop
insl
call
imul
dec
mov
pop
cmp
xchg
jns
pop
scas
xor
popf
addb
addr16
jmp
and
jo
lret
iret
jnp
into
outsl
xchg
jecxz
outsl
jo
jbe
mov
adcl
adc
mov
std
cltd
jns
or
dec
sub
fnstsw
and
insl
push
dec
aas
shll
clc
mov
das
add
lret
cld
outsb
xchg
push
adc
jb
cmp
mov
stos
fwait
iret
in
negl
mov
and
mov
shlb
test
push
out
adc
and
jge
or
jo
out
cmpsl
aas
push
inc
sbb
cmp
fs
ret
mov
or
cs
xchg
jae
push
ljmp
out
xchg
sahf
shll
adc
das
sub
inc
fwait
mov
in
mov
dec
push
mov
inc
rcr
test
dec
dec
sbb
fsubrs
test
inc
sub
cmp
jne
sub
push
andb
fdivr
dec
arpl
enter
inc
push
or
scas
ret
jp
mov
ds
scas
xacquire
pop
sbb
insb
mov
xchg
and
mov
cmp
mov
or
inc
pop
rcrb
addr16
xlat
xor
sbb
lock
test
pop
push
mov
mov
pop
lret
sbb
adc
pusha
sar
cwtl
sub
fbstp
sahf
arpl
cmp
xor
sub
seto
jmp
out
sbb
mov
add
and
push
daa
dec
mov
cmp
xchg
push
mov
adc
xor
ja
push
inc
ja
in
cld
xlat
mov
pop
pop
push
insl
mov
hlt
les
movhps
lret
sub
xchg
clc
nop
mov
inc
jp
push
insl
mov
dec
fisubs
jo
enter
in
mov
cld
mov
gs
repnz
cmpsl
xor
or
sub
bound
push
icebp
cmp
or
dec
out
mov
adc
aad
out
pushf
push
jb
xor
enter
cs
data16
and
and
lahf
xor
repz
cmpsl
mov
stos
dec
and
xor
pop
stos
push
movsb
lds
pusha
xor
cwtl
int3
nop
dec
arpl
xor
je
push
jnp
mov
sbb
repz
fwait
pop
mov
add
stos
jecxz
ret
adcl
stc
dec
mov
pop
and
inc
jb
mov
int3
lret
cltd
loope
lahf
andl
add
cmp
ret
adc
rolb
lret
inc
sub
hlt
mov
std
mov
xlat
pop
lods
popf
xor
xor
add
outsb
push
pop
dec
lods
sub
sbb
push
data16
out
push
sub
test
int3
fildl
testb
mov
rol
sbb
pusha
push
inc
out
es
in
mov
xchg
insl
lock
mov
imul
or
das
add
clc
sbb
movsl
xor
pop
adc
jno
insl
enter
out
scas
push
inc
mov
or
fbstp
pop
push
pushf
movsl
mov
sahf
push
cmc
add
mov
mov
and
cld
leave
std
lahf
xor
jp
sbb
mov
call
fwait
push
push
ja
adc
xor
xchg
aam
mov
scas
into
add
cmp
mov
add
aaa
mov
jno
and
jbe
fnstenv
jecxz
cmp
mov
fsubrs
or
stos
icebp
fisttpl
push
jp
rcl
cmpb
jl
scas
hlt
fidivrl
shrb
outsb
mov
bound
dec
fiadds
jmp
sbbl
int3
mov
push
fdivs
xlat
divb
xlat
add
xor
sbb
daa
and
cs
mov
ss
out
jnp
dec
dec
test
call
push
jno
and
dec
sbb
inc
inc
jo
mov
stos
push
hlt
pusha
adc
aam
lods
cmp
imul
dec
lahf
in
xor
out
xor
mov
pop
divb
push
icebp
xchg
stos
mov
insl
in
jne
cmp
shlb
ret
push
sbb
mov
cmp
mov
gs
mov
or
xor
push
pop
cmpsl
movsl
pop
pop
shr
adc
adc
cld
sbb
cld
bound
imul
movsb
mov
mov
ljmp
aam
lds
pop
cmp
jno
adc
xorl
mov
test
pop
inc
mov
pop
aad
ja
test
cmp
shlb
pushf
cmpb
jg
push
xor
scas
cld
or
lock
xor
insb
leave
adc
sbb
cs
xlat
out
mov
add
inc
ds
push
dec
gs
mov
out
xorb
and
jae
cmp
sti
push
jbe
sahf
push
inc
adc
xlat
sti
pop
aad
cmpb
or
mov
cmpsl
inc
pop
shl
in
xor
test
sarl
jle
cmc
outsb
dec
add
pop
arpl
and
fnstenv
pop
or
mov
daa
fimull
movq
cmp
or
out
int3
daa
sahf
out
jg
pusha
adc
out
shrl
or
stc
push
popa
dec
movzwl
dec
std
dec
dec
cli
mov
cmpb
xchg
dec
call
dec
test
js
stos
adc
bound
lret
inc
add
aas
xchg
pushf
aad
aam
and
sbb
xor
into
jmp
push
dec
mov
and
add
out
adc
je
cmpxchg8b
push
popl
filds
int3
loope
jne
fnstsw
cmpsl
repz
jo
jle
inc
in
mov
das
insb
mov
lea
push
aaa
jno
insb
pop
cltd
std
leave
imul
pop
and
xorl
adc
data16
out
imul
hlt
push
sub
test
inc
aas
ja
outsl
xchg
pop
mov
xchg
test
jnp
sbb
push
mov
mov
into
and
ds
push
fs
testb
in
test
daa
pusha
sbb
inc
subl
movsl
cmp
inc
cld
mov
leave
sahf
or
add
push
dec
pusha
dec
cmc
jle
sub
pop
pop
mov
pushf
add
xchg
outsb
and
das
pop
stos
xchg
fsubs
jb
scas
mov
adc
fistpl
xchg
lods
pop
dec
push
jmp
add
popa
adc
out
test
and
push
jp
lret
mov
cli
icebp
xor
push
fcmovu
dec
repz
les
outsl
test
div
das
xor
mov
scas
lods
or
push
aaa
cld
inc
lcall
repz
or
lret
push
icebp
or
push
enter
mov
daa
es
cmc
jge
add
dec
into
xor
pop
sub
popa
ds
je
mov
ss
popa
clc
mov
inc
ficoms
mov
jno
mov
jmp
inc
pop
mov
rorb
push
sti
mov
mov
dec
inc
test
mov
adc
mov
int3
cmp
and
lock
int
bound
in
lods
inc
xorl
mov
dec
lea
pushf
push
js
xor
cmp
je
xchg
popf
fidivrl
push
mov
and
xchg
dec
xchg
add
pop
inc
cli
mov
nop
mov
jns
pop
rcll
pop
mov
test
das
es
mov
pop
pop
dec
fsubs
fisttps
cmp
xchg
orb
stos
jle
xchg
and
fwait
cmp
inc
arpl
and
mov
sub
and
aaa
fstl
cmp
or
call
mov
mov
int3
nop
iret
mov
ja
jp
fidivs
mov
xor
inc
stos
daa
cmp
sti
in
adc
aad
jo
test
mov
and
cmpl
imulb
cmp
mov
cmp
sub
xchg
cmc
arpl
xchg
dec
push
push
sub
mov
cli
jne
rcl
insb
pusha
aad
jle
subb
adc
adc
fisubs
std
mov
mov
lret
mov
sub
pop
push
sub
aad
mov
mov
or
in
adc
inc
nop
sti
in
mull
das
mov
inc
outsb
imul
in
orl
rcr
xor
lods
mov
aaa
adc
jmp
addb
push
fildll
inc
fucomip
push
out
push
push
stos
sbb
movsl
dec
lods
dec
adcl
jge
xor
or
jl
les
xor
jecxz
push
adc
push
or
jle
sub
ss
xor
xlat
jg
mov
sbb
jl
mov
mov
cli
or
fucomi
add
in
and
push
lcall
mov
cmpsl
sub
add
cwtl
fnstcw
jmp
sub
pop
pusha
or
mov
sbb
pop
push
in
in
mov
cld
pushf
sbb
out
addb
sub
pop
mov
xor
outsb
std
pop
jle
push
loopne
xchg
cmp
and
outsb
pop
mov
nop
lods
jb
test
aaa
insl
sbb
xchg
sub
cmp
adcl
cwtl
cmp
and
incb
ror
fdivs
stos
pop
jne
adc
btr
nop
imul
sub
push
cmp
lods
mov
xchg
bnd
sbb
enter
insb
loop
lahf
iret
inc
xchg
lcall
aam
and
mov
call
flds
adc
movsb
inc
test
dec
pusha
sbb
pop
les
xor
outsl
pop
and
pop
adc
pop
stc
test
stc
and
and
aas
cmp
jo
dec
mov
cmp
mov
fcompl
jmp
adcl
and
clc
pushf
mov
out
mov
mov
or
push
loope
add
xchg
sbb
incl
bound
call
dec
fidivrl
pop
xchg
sub
sub
ret
movsl
cmp
push
aad
mov
cmpsl
test
pusha
mov
mov
or
ror
xor
cli
movsl
test
dec
mov
loope
fdiv
pusha
lea
aad
ficoml
cmp
jns
jne
test
push
hlt
and
andl
lret
cmpsb
ss
jp
xlat
fisttpl
jecxz
mov
pop
imul
xchg
fincstp
stos
je
mov
inc
add
shll
jbe
mov
fisttpl
cs
sub
sub
push
hlt
inc
xchg
rcr
xor
clc
shrd
and
scas
mov
mov
daa
inc
inc
cmp
neg
push
gs
les
ja
cmp
cmp
pushf
negl
adc
repz
pop
js
out
mov
ljmp
add
popf
xor
jns
sub
out
fwait
lods
adc
clc
cmp
pushf
sub
mov
fisttpll
push
fnstsw
out
jl
into
push
xor
mov
nop
dec
scas
push
scas
popa
xor
int
jne
fldcw
push
add
mov
outsl
sub
aam
xchg
pop
arpl
iret
dec
pop
iret
in
adc
sub
ret
insb
je
insb
add
add
nop
lods
jb
or
cmpsl
and
leave
lock
mov
push
mov
test
add
jnp
in
pushf
xchg
pop
or
inc
xchg
jb
iret
adc
insb
and
jmp
shlb
jmp
cmp
xor
or
enter
leave
stos
or
out
test
stos
out
cmp
dec
popa
cwtl
push
mov
sbb
lret
pop
popf
cwtl
and
sahf
xchg
testl
xchg
ljmp
test
mov
xchg
adcb
and
ret
cmpsb
add
push
hlt
or
push
sbb
fmulp
push
decl
pop
or
sahf
sbb
imul
cs
xor
add
loopne
xchg
popf
xor
xor
xchg
rol
dec
xor
cmpsb
hlt
cltd
lds
lea
dec
scas
xchg
cmp
dec
iret
sub
lcall
js
test
xor
pop
fisubl
mov
enter
out
add
idivl
xchg
dec
add
lods
mov
adc
jne
xchg
sti
lahf
ss
andl
stc
xchg
xor
push
mov
arpl
sbbb
out
ds
cli
and
sbb
push
xchg
xchg
js
cld
inc
pusha
shrl
or
sbb
xlat
sbb
test
dec
dec
dec
lds
int
roll
stos
sbb
dec
xchg
cmp
add
push
mov
mov
mov
in
dec
mov
es
mov
jmp
add
or
lods
mov
jg
inc
xchg
xor
and
sub
pop
rolb
push
xor
dec
lods
push
push
add
jl,pn
mov
test
in
jns
sub
push
clc
and
sub
add
mov
adc
push
repnz
cmp
pop
enter
or
jle
xor
mov
sub
and
dec
mov
stos
dec
sbb
jmp
das
inc
das
addr16
popf
popf
sub
lock
jne
inc
add
jno
int3
mov
mov
je
mov
xchg
sarl
lahf
ds
sub
inc
fwait
xchg
mov
jns
inc
cmp
out
arpl
add
mov
mov
mov
xor
or
int
scas
in
dec
scas
out
outsl
jg
out
push
or
mov
mov
jmp
pop
js
sahf
mov
add
inc
sub
pop
shll
pop
mov
mov
lods
inc
jno
add
mov
imul
mov
arpl
ret
push
mov
fadds
mov
jb
in
inc
xchg
jns
aad
shll
and
add
jl
icebp
adc
jmp
fwait
data16
ret
dec
xchg
jle
mov
jne
mov
out
mov
lods
push
push
xchg
sub
jae
cmpsl
inc
roll
lock
out
inc
mov
xchg
jbe
test
mov
cmp
fistl
lret
push
cmc
loope
in
outsb
fs
xchg
push
iret
jb
xchg
pusha
xor
dec
loopne
mov
es
dec
fiaddl
fcoml
in
push
dec
iret
scas
int
adc
ljmp
ljmp
lret
dec
mov
cmp
lret
xchg
jbe
inc
fsubl
cltd
sbb
sub
fwait
ds
and
cmc
mov
gs
xor
test
adc
gs
int
add
xchg
and
lret
add
adc
mov
xchg
sbb
xchg
adc
mov
add
cmp
adc
sub
fs
xchg
inc
cmp
cmpsb
pop
push
scas
adc
mov
aam
je
bound
mov
adc
add
ret
int3
in
mov
andl
mov
sahf
xor
dec
test
push
imul
gs
cmc
bound
pop
push
xchg
cmpb
out
dec
inc
mov
addl
mov
int
leave
lret
add
aaa
or
addr16
mov
out
cli
enter
dec
pop
addb
into
fisttpl
jnp
xchg
mov
out
mov
ja
daa
xchg
mov
cwtl
sbb
mov
mov
andb
pushf
test
fcomps
xlat
int3
and
dec
mov
daa
and
jg
repz
lret
daa
inc
or
nopl
adc
stos
cmp
js,pt
aam
jb
stos
mov
mov
pop
pop
mov
lock
push
add
xchg
fdiv
repnz
mov
mov
leave
pusha
mov
jae
and
sbb
sbb
mov
inc
leave
fwait
or
std
mov
insl
cmp
or
incl
jmp
jo
push
iret
add
dec
cmp
pop
mov
shrb
lock
jo
test
xchg
push
dec
and
xchg
add
movl
lds
sbb
popa
inc
add
sbb
mov
icebp
icebp
mov
call
mov
mov
push
push
mov
xchg
in
mov
inc
add
pop
add
sti
sub
or
jl
jl
outsb
xor
pop
inc
adc
insb
sbb
inc
push
pop
aas
cmpl
xor
xchg
sbb
xor
movsl
push
fs
es
jle
pusha
hlt
nop
cmp
fldt
xlat
mov
xchg
pop
adc
mov
xor
ret
xor
out
movsb
mov
test
out
ljmp
loope
fstpt
out
loop
repz
inc
clc
fcmovnu
lods
and
in
xchg
dec
jbe
fmul
loope
ficoml
jl
insb
cmpsl
adc
mov
mov
fisttps
mov
outsb
jnp
pop
mov
fsub
xorl
fisubl
movsb
movsb
loopne
pushf
in
xlat
cmc
push
push
outsl
pop
dec
shrb
hlt
jmp
adc
insl
lock
outsb
iret
or
in
mov
or
pop
and
xor
lods
sub
cmpsl
enter
test
cli
clc
or
out
mov
or
mov
inc
sahf
dec
enter
insb
mov
add
nop
dec
or
xchg
pop
leave
add
dec
xor
nop
mov
imul
adc
push
and
iret
mov
test
cmpsb
arpl
cmc
iret
and
cmp
jae
leave
mov
add
dec
push
lret
into
jnp
mov
dec
out
add
repnz
cmp
lahf
lret
inc
hlt
popf
into
sub
fildl
fcomps
mov
leave
pusha
pop
mov
decb
dec
or
aam
add
aam
push
push
sub
pop
je
enter
sahf
lret
lahf
fnstsw
outsb
popa
push
loope
daa
ss
shlb
jecxz
add
mov
in
in
push
cmp
mov
or
cmp
pop
dec
sbb
jne
jge
cmp
cmp
jle
addr16
pop
jbe
or
test
es
mov
dec
sbb
rcll
xchg
mov
out
push
ja
loope
inc
sti
add
sbb
out
adc
clc
cmc
push
outsl
mov
dec
mov
iret
or
pop
pop
out
pop
mov
mov
imul
push
push
imul
dec
sub
mov
lahf
adc
cs
aad
xchg
push
in
push
stos
sub
mov
dec
lcallw
int
into
and
inc
fnstenv
aad
loop
out
xchg
jns
add
jo
jg
sub
xchg
push
repnz
add
push
xor
pop
mov
fstl
pop
jb
and
pop
and
and
mov
mov
jl
bound
add
jle
enter
fs
lret
nop
jp
dec
cmp
and
sbbb
nop
decl
xor
xlat
stos
lret
cld
cmp
dec
movsb
pop
ficompl
fildll
loop
shr
sub
js
lret
lcall
int
sbb
pop
cltd
fimull
dec
and
inc
cmpsl
in
lds
imul
punpcklwd
mov
sbb
shl
jo
fistpl
mov
mov
orb
dec
movsl
push
orb
hlt
dec
push
pop
movsl
scas
mov
push
xchg
testl
push
cmp
mov
aam
dec
push
daa
inc
jb
jnp
iret
dec
dec
push
push
cwtl
aam
gs
pop
or
pop
pop
into
imul
push
loop
hlt
jmp
out
push
arpl
sub
fbld
jl
ret
push
divb
std
loope
xor
sub
leave
inc
test
xlat
mov
fiaddl
movsl
add
cmp
movsb
pop
dec
sbb
cmp
push
orl
mov
and
jle
push
mov
add
dec
jae
repz
cmp
fsubrl
push
xor
jno
fsubrl
imul
xor
loope
mov
movsl
adc
pop
or
popa
movsb
dec
mov
inc
pop
in
or
lret
adc
cmpsl
inc
or
sbb
jl
cmpsl
or
bound
mov
insl
int
jecxz
inc
sub
stc
fcmovne
sbb
add
push
sub
sbb
fwait
xor
sub
sbb
xor
jnp
pop
dec
mov
lcall
mov
jmp
push
aad
jae
cmp
stos
jge
mov
gs
dec
mov
inc
cmp
inc
push
jg
out
andl
jecxz
frstpm(287
ljmp
mov
pop
xchg
in
pop
inc
iret
jnp
hlt
out
and
mov
xchg
mov
mov
lock
addl
push
ss
nop
pop
mov
add
xchg
sub
dec
dec
sti
mov
mov
repnz
dec
loop
sub
push
aad
sbb
xor
stos
push
push
or
push
dec
loope
xchg
adc
popa
ss
push
jp
negb
jmp
inc
jbe
popa
nop
daa
sbb
popf
repnz
jbe
xchg
adc
mov
push
push
shrl
out
je
xor
popa
out
ret
push
orb
lcall
imul
int
out
jbe
enter
mov
mov
cwtl
xorl
fcompp
xchg
repz
out
cli
notb
fistpl
jle
mov
and
test
outsl
cs
xor
movsb
call
push
daa
int
xchg
les
pusha
xchg
stc
dec
sti
and
out
or
outsb
mov
daa
xchg
aas
call
call
push
incl
cwtl
jno
add
mov
adc
insb
cmp
out
mov
les
xor
mov
bound
int3
xchg
mov
fadd
add
cmp
sti
jg
xor
inc
dec
xlat
pop
pop
mov
or
jne
and
es
dec
lock
sbb
int3
jmp
add
popf
dec
sti
aas
jmp
and
cmpsb
pop
dec
xchg
cmp
jns
dec
insb
add
xchg
cld
sub
ret
sbb
dec
mov
inc
lret
out
pop
push
outsl
pusha
in
mov
cltd
sub
mov
xchg
rcrb
pop
stc
sub
and
gs
add
lret
jl
dec
outsl
loopne
adc
pop
xor
mov
enter
pusha
push
mov
jl
lock
adc
std
and
mov
add
lret
pushl
add
adc
jp
fnstcw
xchg
lahf
and
aas
adc
mov
push
arpl
or
sti
xchg
sub
imul
pop
inc
lcall
xchg
xor
inc
cmp
or
cmp
ljmp
or
mov
clc
cwtl
test
jmp
mov
xlat
push
fwait
scas
or
and
mov
enter
daa
fidivrl
rcll
and
xchg
out
xchg
pop
pushw
push
emms
inc
mov
call
call
or
in
popa
sbb
arpl
data16
shrl
adc
cmp
dec
or
loop
addr16
scas
test
and
fwait
loopne
gs
insb
or
xor
or
jg
push
xchg
mov
xor
shrb
je
lret
out
bnd
lods
push
inc
subb
sbb
test
cmp
mov
or
ret
mov
xor
nop
pop
mov
cmp
push
xor
mov
sarb
and
inc
pop
rorl
pop
lret
push
aam
cmp
cmc
js
in
in
lods
lock
testl
sarb
stos
adc
jge
jge
mov
mov
enter
add
int3
cmp
popa
ret
sbb
aas
loope
hlt
lret
jp
pop
les
mov
pop
mov
test
outsb
cmp
pop
lock
loop
test
xchg
ret
mov
mov
lret
nop
xchg
hlt
bound
pop
mov
out
in
cmp
sub
int
adcl
sub
sahf
mov
pop
pop
arpl
fisttpll
and
cmp
jp
inc
jle
sub
xchg
minps
or
pop
mov
push
pop
inc
push
int3
xchg
into
test
jecxz
dec
jge
aas
test
add
daa
insl
xchg
call
xchg
pusha
add
insb
or
fnstsw
mov
mov
fistl
xor
in
pmulhw
adc
dec
sbb
or
push
xchg
jo
mov
test
sbb
rol
imul
pushl
cwtl
pop
mov
and
jnp
sarl
fidivs
xchg
lea
mov
cli
adc
mov
pushl
adcl
fisttpll
dec
or
push
cmp
ror
sub
cmp
std
dec
adc
aad
pop
sbb
cmpsl
pop
push
out
imulb
jmp
aam
ficompl
data16
mov
sarb
leave
iret
stos
jb
rcl
push
xlat
mov
xchg
imul
out
jmp
sbb
fwait
inc
std
pusha
imul
pushf
ja
enter
lcall
imul
pop
mov
mov
mov
jno
pop
outsb
add
jbe
andb
orb
sub
lods
pusha
cmc
imul
imul
aaa
clc
cld
lret
and
sti
add
cwtl
rcll
cmp
cmp
loopne
mov
mov
mov
aas
icebp
mov
lods
jp
and
pop
lahf
cwtl
or
add
rcll
adc
jg
cmp
fbstp
movsl
ljmp
stos
xchg
daa
dec
ds
fldl
fs
aaa
sbb
or
cmp
movb
xlat
mov
cmp
notb
lods
popa
pop
pusha
jl
popf
adc
cltd
test
xchg
and
lea
xor
pop
mov
neg
addr16
xor
test
push
mov
lods
pop
adc
in
das
shrl
mov
stc
push
js
jl
add
mov
je
enter
clc
push
xchg
inc
and
in
das
jb
into
cli
stos
pop
sahf
rcll
push
dec
add
pop
ss
bound
rol
push
cs
cltd
rcll
and
shrb
notl
insb
sub
add
sub
xchg
dec
sbb
cmp
les
je
cs
loope
insl
stc
or
and
insl
out
in
push
mulb
pop
filds
xchg
js
add
sub
push
lea
add
jns
pop
jno
in
inc
loope
sub
subb
insl
adc
fwait
dec
or
xchg
sbb
mov
mov
and
sbb
aad
addl
push
pusha
pop
cmp
call
int
sbb
xchg
mov
push
mov
mov
mov
jne
jnp
and
mov
and
lock
lret
cmp
mov
cmp
mov
push
subb
mov
and
outsb
je
or
and
pop
mov
adc
and
push
pop
leave
scas
aaa
mov
push
sub
pop
int
xor
xchg
or
call
xor
popf
movsl
sub
repz
test
movsl
ds
shll
sub
ret
mov
test
dec
sub
fwait
mov
ret
mov
push
push
inc
and
sbb
mov
push
sbb
cmp
pop
ljmp
mul
lret
jns
daa
jp
sbb
shrl
mulps
js
cmp
adc
test
mov
in
mov
clc
cs
xor
aas
js
out
sbb
inc
cwtl
mov
sbb
imul
stos
jae
int
fisttpll
js
xchg
mov
dec
inc
inc
dec
and
sub
mov
sub
sub
mov
cmp
sbb
ss
inc
dec
jae
push
dec
xchg
inc
sub
mov
fisubrl
pop
pop
pop
xorps
cli
insl
push
adc
jnp
mov
or
mov
sbb
rclb
xchg
sub
or
push
cmp
inc
xor
test
fbld
jecxz
iret
stos
in
stos
mov
lods
push
orl
jnp
test
test
jge
push
sub
sar
out
sbb
stos
aam
mov
xchg
lea
or
stos
pop
dec
cmp
pop
xchg
gs
and
cmc
or
cmc
sbb
pop
push
gs
pop
fstpt
fscale
xchg
mov
xlat
mov
jle
test
mov
ljmp
xchg
and
push
sub
fiadds
rcrb
aas
adc
adc
mov
or
mov
stc
std
ja
lock
arpl
int
das
inc
leave
and
aad
mov
mov
mov
xor
dec
mov
repnz
add
xor
subl
loop
enter
cmp
push
cltd
mulb
push
jecxz
mov
adc
or
rolb
jae
mov
mov
xchg
push
sbbb
mov
es
xor
repz
frstor
xchg
jp
fimull
ficoml
test
pop
imul
outsb
jno
jno
lods
pop
inc
push
or
out
and
xor
mov
lea
mov
xchg
movsb
out
cmp
imulb
in
int
addb
push
dec
or
stos
std
mov
icebp
push
ficomps
jg
jbe
inc
xchg
ret
jle
popa
xor
mov
mov
lret
sub
out
inc
in
sbb
lcall
sbb
mov
ja
mov
lahf
xchg
out
icebp
ss
das
push
add
jle
mov
popf
stos
ss
push
in
and
mov
outsb
int3
add
lods
adc
aas
xlat
hlt
std
fcomps
mov
int3
jp
sub
cwtl
je
pusha
cmc
pop
pop
lahf
shrl
movsl
aaa
fsubrl
je
movsl
subb
test
or
lcall
cmpsb
mov
cmp
dec
dec
pop
insb
lea
mov
xchg
adc
add
or
lea
lock
push
movb
xor
jle
ret
das
in
push
sub
push
xor
cmp
cli
push
or
jl
imul
fmul
push
or
cmpsb
pop
andb
or
imul
xor
out
push
mov
xchg
movsl
mov
movsl
pop
adc
arpl
rdpmc
mov
jp
popa
jp
or
mov
outsl
ficoml
dec
sbb
push
outsl
repz
stc
jo
je
shlb
xchg
mov
add
lahf
popf
lods
psubb
dec
cmp
in
sbb
xor
xor
mov
fidivs
mov
testl
mov
dec
dec
xorl
cwtl
xor
pop
cmp
rcrb
mov
stos
push
lods
and
fisttpll
mov
inc
outsb
je
test
movsb
inc
negl
push
dec
mov
add
jns
ss
dec
in
pop
js
add
sub
pushf
xor
mov
in
pop
arpl
daa
mov
mov
loopne
notl
jb
iret
int3
mov
cld
mov
jae
sub
stc
enter
test
and
nop
sub
pop
je
imul
adc
mov
lea
rcrb
rol
pusha
jl
and
jo
mov
fisttps
cwtl
arpl
fwait
push
mov
mov
sub
mov
aaa
movsb
xchg
cmp
data16
pop
outsb
out
fs
add
call
add
push
and
clc
test
popf
bound
xor
xchg
mov
jb
adc
add
cmc
sbb
aas
jg
xchg
mov
push
mov
lcall
mov
or
in
inc
test
xor
in
hlt
cmp
test
cs
push
pop
int
dec
inc
popf
cwtl
addr16
pop
cmp
xlat
test
shrl
push
je
sub
push
insb
push
mov
xchg
aas
aas
in
adc
push
mov
xor
sbb
push
and
loopne
lea
mov
enter
jg
dec
push
fcoms
adc
sbb
lcall
add
push
and
popf
imul
shr
pop
divl
adc
loopne
int
mov
hlt
add
pusha
add
pop
test
cltd
fs
pop
push
mov
outsb
push
shl
add
shll
xor
sub
scas
and
xor
mov
stos
xor
add
jmp
orl
gs
push
pop
in
repnz
fisubs
mov
xor
inc
pushf
lahf
insl
cwtl
stc
pop
sub
mov
pop
rcrl
test
test
xorl
jae
lcall
scas
scas
ret
lea
mov
shl
leave
jae
pop
mov
xchg
cmp
adc
les
xchg
imul
adc
mov
dec
or
inc
cmp
add
mov
cmp
std
cmp
sub
lret
outsb
add
sbb
sbbl
push
ljmp
push
sbb
mov
in
fstpt
jg
repnz
cmpsb
clc
rorl
shrb
pop
test
ljmp
cli
pop
cmp
mov
sahf
xchg
movsl
insb
pop
add
jno
icebp
and
rolb
push
sub
mov
pop
xchg
daa
add
pop
push
and
insl
shlb
cli
mov
pop
popl
inc
pop
lods
subl
and
sti
sub
push
lcall
sub
imul
lcall
movsb
cmp
scas
insl
imul
xchg
pop
and
jno
or
add
aas
adc
cmp
adc
movswl
cmc
mov
and
mov
mov
das
das
mov
scas
push
mov
jp
int3
and
scas
cli
in
jmp
arpl
inc
movsb
xor
lock
leave
pushf
cmp
ss
out
push
mov
xchg
int
mov
bndstx
jbe
push
pop
repz
cli
int3
mov
sbb
loop
shlb
and
inc
call
pusha
adcl
jmp
insl
add
clc
lods
pushf
das
scas
fwait
sbbb
xchg
nop
pop
ds
dec
and
lret
imul
xlat
enter
addr16
ficoms
or
mov
dec
idiv
enter
sbb
pop
sti
lods
sbb
dec
and
insl
cmp
cmp
jecxz
cmpsl
lea
testl
pop
cltd
ret
mov
lret
mov
rcll
adc
or
mov
and
jno
int3
sub
stos
fwait
mov
push
lock
mov
dec
pop
jb
jb
add
sub
mov
fiadds
pop
scas
xor
pop
inc
and
adc
aaa
loop
mov
repnz
sub
loopne
clc
dec
lret
loopne
mov
adc
jne
push
sub
pushf
add
sahf
pop
fmull
out
stos
arpl
dec
mov
mov
addr16
ljmp
cli
ss
rolb
cmp
xchg
xchg
xor
jp
adc
pop
push
fsubl
pop
mov
shll
stos
lahf
into
fwait
mov
jne
insl
orb
cmp
cmp
fsub
aas
mov
add
std
inc
leave
xchg
sahf
sbb
jae
mov
fstpt
pop
mov
mov
fiaddl
cmp
outsl
mov
xchg
stos
pop
lea
pop
jae
iret
push
into
inc
pop
and
rep
sbb
fcmovnbe
xchg
lret
inc
lock
pushw
rorb
jmp
fwait
idivb
fcomi
sbb
dec
adc
imul
push
stos
sub
sub
xor
fisttpl
jp
add
rorb
lret
shlb
popa
cwtl
dec
sbbl
lock
aad
arpl
xor
dec
shl
cmp
push
test
push
push
in
notl
fsubrl
sub
out
mov
sub
cld
shrb
fldcw
dec
imull
ljmp
aaa
fstpt
mov
fcmovbe
ret
test
icebp
ds
sti
xchg
xor
cmp
pop
jl
test
push
pop
icebp
lock
sarl
aaa
sub
lds
aam
add
mov
es
push
cmp
lods
out
or
pop
push
movsl
sbb
sbb
outsl
jb
bound
jae
inc
jecxz
cs
stos
pop
xchg
jo
ret
mov
out
add
push
addr16
scas
sub
clc
xchg
nop
aam
mov
jns
dec
sub
cltd
daa
leave
iret
bound
rorl
adc
mov
sbb
mov
out
out
fnsave
in
and
scas
addr16
bound
fistpl
sub
imul
stos
mov
mov
cmp
and
sbb
push
push
push
ljmp
ljmp
mov
call
jmp
pop
sub
mov
mov
dec
sub
cmp
mov
inc
imul
mov
shlb
mov
adc
add
pop
mov
push
loope
stos
add
xchg
sbb
loopne
aas
mov
popf
push
imull
popa
adc
and
lock
sbb
fldl
mov
adc
inc
pop
mov
push
rclb
out
pop
adc
repz
or
push
setg
inc
rol
clc
pop
jle
test
in
loope
in
ss
sbbb
adc
je
pop
ljmp
icebp
lahf
mov
jg
movsl
inc
fcom
xchg
pop
aad
rcrb
mov
add
movsb
sbb
ret
jb
xchg
xchg
outsb
or
sbb
ficoml
arpl
jne
add
les
inc
or
aad
dec
and
adc
divb
adc
lods
sbbb
and
cmpsb
pop
fcom
mov
sbb
mov
idivb
pop
int3
mov
push
test
or
ljmp
ret
mov
and
dec
clc
xorl
enter
mov
xor
mov
mov
mov
jg
xlat
inc
pop
jmp
push
mov
push
and
loop
cmpl
xchg
scas
mov
dec
test
loopne
in
movsb
mov
jb
stos
loop
testb
pop
mov
inc
bound
cmpsl
test
enter
mov
aas
mov
sub
inc
adc
test
fisubrl
push
into
sbbb
movups
cmc
sub
xor
push
pushf
mull
loop
mov
mov
inc
cmc
ds
scas
xchg
sub
push
test
pop
sub
divb
aaa
inc
mov
add
push
jnp
jp
insl
outsb
push
and
add
lock
push
fistpl
add
hlt
pop
mov
fistpll
andl
ds
adc
cmp
ret
xchg
jp
shlb
mov
mov
jae
lods
inc
imul
dec
xchg
adc
cltd
inc
dec
jp
or
stos
shrb
mov
outsb
jge
jmp
inc
icebp
dec
cmpsl
cld
stos
mov
xcrypt-ctr
cmpsl
pop
fisttpll
jns
or
sbb
enter
das
imul
inc
int3
out
mov
jecxz
mov
fldt
pop
mov
pushf
sub
je
les
inc
cmp
scas
cmp
ds
mov
rcll
dec
mov
out
andl
pop
outsl
dec
out
jne
inc
cli
or
cmc
inc
mov
mov
xchg
aas
jbe
sbb
pop
cmpsb
test
adc
fsubs
dec
and
push
inc
jecxz
pop
mov
lret
aas
popf
jge,pt
jae
xor
cmpsl
pop
sbb
leave
out
fcmovne
negl
jecxz
xor
xchg
jge
sub
dec
sbb
xor
jno
cmpsb
mov
repnz
lret
icebp
dec
or
test
sub
testl
ds
call
movsl
das
xchg
cwtl
push
ret
push
xchg
mov
mov
aad
cltd
mov
lahf
push
ret
pop
sbbb
mov
inc
mov
mov
add
loope
cli
out
pop
enter
nop
add
add
adc
fwait
add
xchg
jmp
jmp
fsub
insl
scas
cmp
or
aam
cmp
inc
add
int3
or
mov
ja
or
sub
xor
inc
into
jge
push
dec
push
sub
inc
out
jae
cltd
cmpsb
mulb
rolb
adc
mov
stos
push
xor
add
cmp
cmp
hlt
mov
push
inc
aaa
xor
stc
inc
ljmp
pop
out
insl
fimull
mov
pop
lods
adc
and
out
xor
mov
sti
or
in
push
and
xor
xchg
mov
jbe
in
jnp
mov
or
pop
cwtl
cltd
arpl
loop
xchg
or
std
sbb
aad
xor
jbe
jge
inc
xor
xor
mov
push
and
jge
mov
ljmp
aam
popa
add
stc
push
cmp
imul
mov
mov
pusha
das
mov
nop
bound
dec
int3
sbb
mov
adc
popa
cmpsl
cli
lcall
sub
xchg
pop
xchg
fwait
in
cld
lret
adc
mov
ljmp
adc
fistpll
jg
or
push
aad
jne
out
cmc
sub
sbb
stos
test
notl
divl
jns
cmp
nop
mov
sub
test
fucomip
xchg
mov
outsb
data16
fdivrp
inc
fs
aad
ss
ljmp
je
rol
scas
jp
dec
cltd
jnp
add
inc
fcomip
jnp
inc
pushf
in
in
jle
popa
adc
in
movsl
mov
popf
cwtl
push
pop
cmp
lea
jo
push
stos
or
lcall
out
jle
sub
fldt
jo
push
fcmove
lea
push
mov
sbb
push
out
fstl
inc
imul
scas
repnz
sub
cwtl
in
dec
xor
push
aaa
pop
rorl
icebp
push
leave
push
addb
push
mov
push
push
gs
jnp
jae
sar
sbb
pushf
adc
dec
divb
sti
xor
test
or
xor
stos
mov
fbstp
or
insl
ret
mov
test
cmp
cmpsl
es
es
cmp
xor
push
xlat
dec
std
adc
aad
push
stc
ja
cmp
fimull
aas
call
pop
loop
in
loop
fiadds
scas
lods
pop
push
jbe
je
ret
dec
and
mov
push
out
shrb
push
imul
test
dec
cmp
call
mov
inc
or
jno
dec
mov
shrb
hlt
sub
cs
notl
sub
xchg
repnz
push
mov
rcrl
stos
clc
jmp
jne
cmp
dec
mov
les
pusha
jae
call
mov
xchg
std
pop
fcoml
in
arpl
cmp
cmc
jmp
jno
inc
adc
or
sbb
dec
mov
cmp
mov
push
aas
push
cmpsl
mov
push
shl
adc
out
or
mov
sti
mov
mov
jle
les
cmpsl
shll
inc
in
outsb
jl
adcb
call
pop
add
jnp
mov
imul
stos
xor
sbb
faddl
sbb
je
lds
jns
adc
jns
jnp
loopne
fisttpl
or
mov
imul
inc
push
lret
call
ss
inc
and
cmp
outsl
cld
divl
sub
cmpb
pop
mov
cmp
into
xor
mov
cmp
adc
mov
add
mov
sbb
pop
jne
push
fisttps
aam
push
add
and
sarl
fs
iret
sub
loopne
sub
push
pop
fsub
jo
jno
sbb
mov
popa
icebp
xchg
cmp
mov
xchg
icebp
test
cwtd
je
inc
fisubl
sub
clc
scas
rolb
dec
js
push
int
call
out
mov
lods
aam
mov
sbb
dec
outsl
dec
push
sarb
sub
xor
jb
pop
pop
pop
mov
shll
imul
sbb
cmpsb
ret
pop
lods
imul
cli
push
add
cmpsb
sbb
aam
gs
pop
rolb
xchg
in
sub
cmc
and
stos
adc
adc
js
aas
lret
mov
lds
pop
sub
movsb
out
rolb
out
in
add
cs
cmp
mov
sahf
xchg
aam
sbb
insl
dec
fsubp
in
mov
aad
jp
popa
xor
mov
pop
mov
and
inc
mov
xchg
inc
call
in
int3
movsl
xor
cmpsb
bound
jp
mov
adc
repnz
repnz
jmp
scas
push
jbe
stos
xchg
mov
mov
add
call
ljmp
adc
fdivrs
in
adc
add
xchg
in
insb
pop
aaa
mov
fs
lcall
scas
pop
inc
add
cmp
call
inc
adc
mov
cltd
push
push
bound
push
xor
jecxz
repz
scas
int3
mov
jg
loop
in
push
cmpsl
andl
cmpsb
mov
sti
mov
lret
stos
ljmp
test
push
aaa
mov
sbb
rcr
pop
js
inc
jae
xor
ror
mov
int
arpl
xchg
in
mov
xlat
mov
lahf
jp
lret
cmpsb
lret
jo
xchg
imul
pop
mov
adc
sbb
cmpsb
push
iret
pop
xchg
stc
jecxz
aaa
cltd
sahf
fistl
mov
xchg
pop
cmp
dec
lds
fistpll
sbb
mov
xchg
js
cmp
inc
jl
lahf
xchg
aaa
mov
out
lods
ss
jbe
inc
into
js
inc
jb
insl
mov
out
mov
mov
xchg
mov
lods
adc
mov
mov
xchg
lock
jg
or
mov
aaa
sub
cmpsb
orl
test
test
xchg
fsubs
rorb
xor
mov
outsb
mov
scas
rol
jl
stos
rcl
lods
cli
push
out
sub
xchg
jnp
xor
jecxz
sbb
fwait
or
cmc
cmp
mov
pop
and
and
cld
sub
fnstsw
popa
fdivs
adc
outsb
jns
adc
jecxz
fmulp
call
pop
jl
nop
gs
inc
jnp
or
lea
out
nop
fisubl
pop
movsb
arpl
and
aaa
dec
push
xor
cltd
icebp
mov
outsl
imul
js
cmp
mov
mov
pop
jne
mov
add
addl
add
cmp
jb
fidivrs
cs
pusha
nop
and
pushl
add
sbb
jl
andb
arpl
jno
dec
xchg
cvtps2pd
subl
bound
js
and
mov
pop
add
sbb
mov
jbe
fdivl
add
inc
push
inc
out
push
test
mov
imul
mov
call
insb
add
xchg
pop
es
mov
dec
scas
xor
rorb
inc
testb
inc
aas
loop
mov
outsb
movsl
repnz
cmp
cs
jae
call
dec
aam
sbb
insb
imull
hlt
push
mov
dec
inc
test
test
add
jmp
adcb
jne
insb
outsb
sbb
aas
dec
in
and
adc
jle
dec
shlb
push
cs
outsl
jmp
mov
cld
sarb
call
decl
test
outsl
push
stos
cmpl
test
mov
push
pop
cltd
and
mov
outsb
pop
cmc
adc
cmp
into
push
frstor
popa
insb
push
add
mov
cmpsl
jnp
stos
pop
test
repnz
data16
mov
popa
scas
sbb
and
mov
stos
lods
dec
or
and
orb
sbbb
cli
movsb
mov
mov
je
jl
mov
pop
mov
add
mov
notl
mov
shrb
or
push
insl
fwait
xchg
and
es
push
std
rorb
pop
iret
lret
adc
add
faddl
pop
push
lods
mov
push
mov
lods
movq
daa
jl
add
cmpsl
cmpsl
pop
jnp
push
adc
or
mov
shlb
xchg
decb
dec
ljmp
mov
repnz
jbe
jo
stc
dec
repnz
adc
push
push
cmc
push
xor
dec
or
in
ja
imull
in
or
dec
and
sub
dec
fwait
inc
lds
cmpsl
dec
cs
int3
cmpsb
add
cmp
movsb
xchg
and
scas
icebp
outsb
dec
imul
dec
mov
std
inc
push
lods
mov
cmp
push
das
popa
cmp
lret
sub
rcr
and
cmpsb
test
mov
movsl
loope
xchg
cmp
xlat
stos
jb
in
outsb
mov
dec
push
call
daa
add
incl
idivb
push
sub
sarl
shr
ljmp
mov
outsb
jbe
jp
gs
fldl
or
push
cli
add
bound
cmc
je
adc
fmuls
sub
leave
insl
sub
and
or
sub
adc
insl
jno
mov
lea
dec
outsl
ja
loop
ret
out
or
ja
cmc
or
cmc
mulb
sbb
adc
andb
icebp
icebp
sarb
cwtl
xchg
sbb
xchg
ds
imul
int3
mov
jle
cmp
cmpsb
mov
call
lret
addl
adc
test
out
stos
mov
add
sbb
lock
into
xchg
imul
loopne
xor
or
cli
subb
adc
lea
or
cmp
jl
imul
push
cmp
sub
jbe
iret
into
out
dec
int3
inc
dec
cwtl
push
imul
pushf
xor
popa
pop
dec
scas
lahf
cs
push
fisubrl
shlb
push
push
add
rolb
rcll
or
mov
xor
jbe
lds
enter
leave
push
je
xchg
or
lea
test
push
push
shll
jge
rcl
inc
xchg
jp
aas
pop
testb
fistps
add
mov
sbb
popa
mov
loop
push
mov
push
xlat
xor
stos
push
fs
das
sbb
inc
ja
in
daa
cmpsb
sti
cmp
int3
enter
aad
cmpsl
popa
mov
and
push
rep
xor
js
pop
cmp
sbb
cwtl
or
push
xchg
loope
adc
adc
mov
lods
std
xor
pusha
add
sahf
add
lds
in
das
pop
adc
into
jnp
jp
pop
dec
xchg
aaa
pop
add
lahf
xchg
push
dec
and
xchg
mov
xchg
fcomip
pop
mov
inc
push
jmp
and
jb
bound
aam
fadds
fldenv
test
data16
push
clc
push
cmp
pop
dec
aam
dec
dec
lods
and
shr
push
scas
sbb
scas
push
testl
inc
adc
or
aam
loope
stc
add
sbb
stc
cmpsl
jne
jae
add
mov
nop
in
insb
int3
decl
push
js
inc
inc
call
pop
movsl
sbb
inc
mov
xchg
ret
es
dec
clc
dec
stc
insb
inc
ljmp
outsl
adc
cs
mov
inc
out
lahf
arpl
sub
out
ret
xchg
dec
jle
pop
sbb
push
loop
add
cmp
cmp
call
or
enter
xchg
mov
in
cwtl
imul
mov
cmc
shr
sub
and
popf
cli
clc
jl
cmp
aam
insb
aas
imul
paddd
outsb
andl
repnz
mov
std
cmc
mov
pop
je
sbb
out
mov
mov
loopne
or
xchg
jnp
and
lods
xchg
test
and
jle
xchg
lods
negb
fs
jo
and
sub
mov
frstor
outsb
mov
sub
mov
jnp
xchg
inc
add
leave
or
pop
mov
mov
lds
frstpm(287
mov
sub
xlat
loope
jnp
popa
pop
and
aam
jecxz
adc
xor
popf
out
lcall
sbb
repnz
jg
imul
dec
out
ret
mov
fs
sahf
rcll
xchg
push
adc
fs
arpl
inc
xchg
cli
bound
xchg
cs
fstps
adc
or
divl
popa
xor
test
outsb
jg
pop
popa
push
jl
mov
add
rclb
inc
dec
pop
in
arpl
faddp
adc
mov
jns
adc
or
ja
jecxz
cmp
xor
inc
lods
xchg
orb
fistps
pop
ljmp
cltd
fbstp
pop
das
jo
sbb
inc
xor
imulb
popf
mov
outsl
int
mov
or
push
mov
negl
addr16
add
mov
subl
jb
jo
fcoms
sbb
arpl
mov
sub
adc
daa
push
cltd
push
xor
cmpsb
jle
push
out
mov
inc
in
lret
negb
mov
push
jg
rorb
xlat
addr16
popa
fiadds
push
mov
mov
mov
or
sahf
leave
jmp
sub
jb
mov
pop
xor
add
rol
mov
int
jmp
int
xor
cmpsl
xchg
jecxz
sti
aas
fwait
mov
or
lret
ud0
push
enter
sub
mov
call
mov
dec
dec
mov
fs
sbb
ficoms
dec
cmp
cmp
cmpsb
cld
dec
inc
rcrl
inc
and
sub
jle
fs
dec
leave
shr
jnp
mov
cli
mov
repz
fwait
push
adc
fiadds
jmp
cmp
inc
mov
or
sub
xor
das
xor
fisubl
xchg
ret
jbe
or
pushl
mov
cmpsb
mov
aaa
in
xor
psrad
aas
cmpsb
fistl
pop
push
fldt
lret
or
push
sbb
or
insl
and
mov
jmp
mov
pop
inc
bound
aam
int3
outsb
cmp
jecxz
mov
cmp
sbb
cmp
sahf
stc
test
clc
outsl
adc
jns
sub
push
ficoms
sub
loopne
popa
or
cvtsd2ss
inc
cld
outsl
aas
mov
or
insl
lret
and
int3
cvttps2pi
lret
outsl
mov
gs
mov
inc
jbe
outsb
mov
outsb
xor
repnz
cmp
push
outsl
xor
inc
imul
mov
nop
mov
xchg
cli
gs
insl
cwtl
mov
out
and
xchg
test
and
lock
int
xchg
sub
sub
mov
mov
jbe
sahf
into
pop
cmovl
popa
out
add
mov
mov
xchg
jecxz
cmpsl
add
jae
insb
push
sarb
mov
cli
andl
push
jnp
dec
shl
test
sub
dec
mov
or
jb
cmpsb
aas
sub
out
movsl
mov
js
sub
shll
mov
addr16
and
daa
jmp
loope
jae
dec
out
mov
pop
in
sub
sub
adc
popf
and
int3
xchg
orl
and
repz
xor
and
fcmovb
sahf
or
adc
fbstp
and
fldl
jne
adc
pop
add
mov
insl
adc
inc
inc
fidivs
stos
sbb
jae
pop
movsl
scas
lock
ss
cli
jp
in
int
and
out
arpl
mov
mov
mov
ret
lcall
fmull
add
jge
ffreep
mov
push
xorl
mov
daa
lcall
or
stos
int3
mov
pop
mov
lret
adc
mov
push
int
adc
scas
mov
movsb
dec
mov
cld
popa
pusha
mov
out
or
fists
dec
ret
or
fcoml
enter
mov
cmpsb
std
push
jbe
imul
popw
nop
push
adc
daa
imul
rclw
jno
jno
sub
sbb
xchg
iret
push
ss
xchg
filds
dec
rclb
sub
dec
adc
jg
push
or
lahf
sub
xchg
dec
push
loop
std
pop
xlat
pminub
pop
dec
or
ret
incl
sti
mov
mov
pop
test
testb
adc
fcomi
loop
scas
test
aad
mulb
xorb
cmpl
mov
push
inc
xchg
xchg
andb
arpl
mov
pop
jno
stos
xlat
pop
loop
sbb
jns
pop
jge
fidivrs
and
push
lret
add
xchg
or
push
imul
lock
pushl
lret
scas
or
repz
or
inc
push
jb
jo
mov
push
dec
inc
ret
adc
jle
add
and
xor
cli
lds
jle
ja
sbb
das
sbb
pop
mov
aad
rol
and
ja
dec
dec
sub
nop
je
jge
fimuls
lret
out
aad
pop
mov
mov
mov
loopne
jo
sub
mov
lea
bound
imul
or
cwtl
or
lahf
or
adc
push
xchg
or
inc
mov
out
int
jnp
fbld
loope
xor
rorl
mov
and
iret
subb
mov
push
xchg
mov
pop
push
pop
adc
sbb
or
jmp
subl
push
mov
and
adc
mov
orb
jecxz
cs
mov
mov
mov
xchg
fdivrl
dec
cmp
lcall
mov
or
cld
ljmp
ror
mov
lods
pushf
dec
das
push
data16
inc
testb
mov
pusha
mov
dec
outsb
push
pusha
inc
jo
pop
sub
or
and
inc
sbb
mov
add
pop
dec
fdivrs
lret
in
jl
fcoms
fwait
lcall
loope
push
cmpsb
sub
daa
dec
push
test
jno
mov
push
jl
and
fists
fistl
and
inc
int3
push
inc
cli
popa
jnp,pn
add
call
and
imul
inc
roll
pop
shll
shl
outsl
xchg
push
leave
fldcw
fistpll
mov
test
rcrl
or
cmpsl
mov
cmpsb
mov
mov
lods
ljmp
xor
fnstenv
decl
jl
stos
add
andl
pop
cmova
aas
pushf
sbb
insb
adc
cmp
pop
arpl
add
dec
int3
sarb
jo
mov
push
cld
cmp
lcall
inc
mov
dec
icebp
cld
and
and
jbe
ss
lock
add
xchg
and
icebp
fxtract
js
test
lea
sub
and
and
jmp
insl
mov
ja
lods
mov
xor
aas
sub
cld
mov
ljmp
mov
jbe
add
sbb
push
or
jo
cmpsb
mov
movsl
add
cwtl
fildll
jb
in
loope
push
nop
xor
push
fcoml
cwtl
inc
scas
xlat
jmp
pop
lret
jge
inc
lods
enter
adc
sbb
mov
add
cltd
pop
mov
into
mov
scas
cld
push
idivl
and
jbe
insl
mov
pop
cmpsb
lret
fwait
jl
adc
scas
mov
in
jns
int
std
mov
jl
mov
cmp
in
mov
cwtl
outsb
fsub
aas
sub
push
sahf
push
adc
inc
lods
gs
andl
xor
es
push
mull
mov
dec
test
mov
imul
lret
mov
mov
push
mov
push
jmp
inc
arpl
ret
shlb
pop
out
vphaddbd
mov
push
inc
cld
push
lods
insb
repz
dec
add
pop
cmp
popf
hlt
xchg
fs
ja
mov
leave
or
xchg
mov
test
imul
lods
xchg
ret
sbb
popf
jnp
dec
nop
dec
dec
jb
or
sarl
mov
pushf
in
jecxz
shll
pop
cltd
fmul
pop
out
jge
cmc
jge
mov
ds
sub
lods
xchg
out
flds
lods
jge
pop
aad
out
mov
mov
roll
aad
fidivrl
ret
rorb
hlt
adc
xor
jbe
dec
outsb
cmpsl
lods
jmp
xor
cmp
cmp
iret
pop
int
ss
cmpsl
mov
addb
or
or
testb
es
loop
mov
ja
fidivrs
arpl
xchg
sahf
clc
int3
mov
lock
mov
in
jl
jae
mov
sub
js
and
fsubrp
jl
pop
push
pop
pop
subl
lret
inc
pop
cmc
sub
stc
push
adc
fcomi
dec
mov
leave
stc
cwtl
sarb
fdivs
mov
mov
cld
stc
adc
int
mov
cld
test
jae
push
or
push
or
mov
in
jo
inc
lcall
ds
lds
pop
add
jl
xchg
outsl
in
ficomps
jge
push
and
sti
sbb
mov
mov
sub
jns
push
jne
pop
sub
push
mov
xor
insl
aaa
fcoml
dec
and
ljmp
imul
xor
fsubrp
xchg
mov
push
test
or
ret
add
mov
mov
fmull
mov
jae
mov
adc
cmp
or
jns
lea
push
inc
paddusw
adc
clc
adc
lds
lahf
add
mov
sub
stos
int
inc
popa
mov
rcrb
hlt
mov
ror
add
xchg
std
lods
xor
dec
filds
cmp
sti
adc
int3
lds
push
outsb
jmp
cmp
jb
xchg
dec
inc
in
dec
movsl
mov
mov
ljmp
cmpb
mov
fsubrs
setb
repnz
jg
and
das
jp
arpl
dec
ret
les
adc
hlt
jmp
fstpl
rclb
dec
pop
fsincos
sbb
dec
movsb
and
pusha
jp
fcoms
decl
movsl
jge
loopne
cmpsb
jne
inc
gs
testl
insl
enter
into
pop
icebp
jno
rcrl
mov
mov
mov
test
int
repz
add
into
gs
inc
ret
cld
inc
imul
mov
mov
outsl
or
and
mov
dec
out
push
adc
jmp
incb
sahf
jg
popf
sarb
shrl
clc
jg
into
pop
nop
hlt
push
jecxz
add
rcrb
mov
jp
xchg
sub
inc
mov
cmpsl
sub
mov
fstp
sub
xlat
int3
add
sub
rclb
xchg
jge
pop
adc
outsl
fwait
loope
lock
dec
jl
sbb
lds
mov
mov
mov
and
mov
subl
mov
ljmp
add
repz
jl
fistl
jb
pop
lods
stos
out
aad
mov
or
je
cmpsl
aas
jecxz
lods
and
cld
lea
dec
lret
sahf
dec
inc
lret
pop
mov
push
inc
into
and
dec
dec
leave
inc
and
cmp
out
and
mov
push
outsl
pop
pop
call
pop
ret
sub
xor
push
mov
sub
filds
in
dec
repnz
jnp
jo
daa
roll
and
sti
loopne
mov
pop
sbb
gs
loopne
rorb
jp
and
movdqa
orl
or
mov
push
jmp
xchg
stos
pop
aaa
aam
js
es
stos
out
js
adc
hlt
das
sub
pop
jbe
add
gs
js
push
pop
xlat
xchg
inc
cmp
outsb
mov
xor
sub
std
lods
inc
cmc
iret
xor
ljmp
pop
jbe
and
aaa
add
cmp
push
push
test
xchg
aam
cmp
sti
xchg
stc
shlb
test
add
stos
cwtl
dec
enter
adc
loope
aam
adc
dec
inc
mov
mov
cli
push
add
fisttpll
mov
cmp
mov
fildll
add
fimuls
xchg
into
loope
loope
clc
mov
jno
mov
in
mov
cmpsl
enter
mov
ret
cmpsb
jmp
jmp
iret
fldenv
out
push
jae
pop
xchg
scas
outsl
mov
repz
jae
cmc
addr16
out
mov
jae
cmp
inc
inc
or
inc
push
imul
push
ret
test
mov
jnp
xchg
xchg
xchg
rcll
xchg
daa
dec
xchg
pop
mov
push
test
mov
jo
js
outsb
punpcklbw
mov
cmp
int3
mov
iret
inc
imul
push
js
sti
mov
xchg
cwtl
sub
lea
and
jnp
insb
pop
dec
jmp
pop
pop
fwait
jle
fwait
out
jecxz
clc
dec
inc
dec
lret
pop
fistps
data16
push
in
xchg
stc
adcb
push
mov
fistpll
add
push
je
push
nop
call
fstpl
cli
loop
adc
adc
test
jo
lods
shll
push
ja
sub
in
into
rclb
jb
adc
dec
das
and
xchg
lea
outsb
sub
imul
arpl
insl
dec
jnp
arpl
mov
jmp
outsb
push
mov
fwait
pop
pop
iret
sbb
sbb
ja
ret
scas
dec
xchg
sub
xor
icebp
xor
sub
mov
mov
mov
std
call
and
jge
xchg
aad
test
pop
mov
jp
dec
lods
cwtl
clc
mov
sbb
cmpsb
sbb
add
and
jo
dec
jb
stc
out
cmp
repnz
sti
inc
cmp
fs
mov
pop
rol
pop
and
decb
mov
mov
movsl
into
jae
push
adc
int3
lock
pushf
arpl
pop
inc
icebp
push
xor
fidivrl
in
cmp
cmp
xorb
push
and
int
les
mov
push
lcall
inc
mov
lea
sahf
inc
sbb
mov
das
into
cmp
dec
xchg
mov
dec
imul
jbe
pusha
repnz
cmp
les
add
scas
jecxz
push
in
in
icebp
jge
adc
inc
inc
xor
adc
int
inc
mov
popf
iret
stos
dec
mov
fcmove
nop
inc
mov
in
jecxz
jo
mov
adc
xchg
inc
lea
mov
or
or
ret
movsl
lods
mov
pop
stc
adc
ja
mov
stos
sub
jo
loopne
push
test
dec
pop
push
mov
pop
mov
fs
int
in
sarb
lock
xchg
xchg
adc
in
int
aad
or
jnp
enter
jp
push
lods
icebp
dec
xor
icebp
cmp
call
mov
imul
lds
xor
imul
insl
cmp
jo
push
push
or
imull
divb
push
ret
test
je
movsl
pop
pop
or
cli
cmovne
adc
add
inc
sub
popa
push
lcall
sbb
sbb
mov
fbstp
les
je
jg
dec
mov
sub
out
xchg
xor
add
adc
int3
dec
call
std
xor
repz
pop
loope
fiaddl
mov
cld
or
xor
ret
xor
pop
jb
frstor
sbb
mov
mov
aas
jbe
mov
pop
mov
adc
loop
aaa
test
pushf
loope
jg
orl
mov
ret
clc
int
add
cmp
addb
test
adc
push
jne
lret
xchg
call
mov
gs
outsb
lea
divps
jmp
add
scas
and
sub
xor
push
mov
insb
lea
jmp
leave
enter
mov
mov
or
sub
dec
pop
pushf
jbe
fsubr
cmpl
neg
mov
mov
nop
dec
mov
xchg
cvtdq2ps
and
dec
call
dec
aaa
shll
in
cmp
jmp
cs
adc
subl
dec
icebp
jno
and
add
addr16
add
xor
or
xchg
sbb
out
dec
cltd
inc
jmp
ret
push
shlb
data16
dec
sti
in
imul
inc
cs
jle
cwtl
out
bound
mov
in
push
sti
bound
mov
and
xchg
jmp
pushl
pusha
mov
mov
jb
jbe
hlt
sub
outsl
dec
in
repz
jns
fdivrs
mov
and
pop
test
push
bound
imul
sub
fistpl
sbb
sbb
notl
into
sub
pop
cs
lahf
out
jno
lahf
adc
cmp
stos
icebp
imul
orb
dec
in
pop
adc
fildl
push
xor
inc
push
sub
sbb
int
pop
jbe
in
dec
addr16
mov
xchg
arpl
jno
add
xchg
fsubrs
test
fwait
icebp
mov
aaa
mov
cmc
pushf
adc
xorl
sbb
push
jl
xchg
mov
cs
cmp
loopne
mov
xor
insb
adc
lods
out
add
xchg
addr16
movzbl
adc
idivl
setno
ss
loopne
xor
les
and
pop
out
orb
mov
mov
dec
mov
add
mov
mov
stc
and
ljmp
cs
jae
pusha
ss
out
test
pusha
inc
loop
retw
push
jo
pop
dec
add
les
out
roll
push
mov
inc
pop
xor
lret
xchg
lahf
adc
dec
mov
add
dec
add
or
sbb
inc
test
cmp
loopne
out
js
fnstenv
pop
stc
cmp
jbe
jnp
pop
cmc
xorl
xor
aaa
inc
adcb
add
scas
mov
fstpt
stos
cmp
inc
inc
movsl
and
inc
and
or
xor
mov
lods
mov
add
mov
repnz
cli
cmp
mov
push
outsb
xor
cmp
add
arpl
jmp
fsts
adcl
pop
mov
lret
sbb
xchg
lock
add
lea
mov
jb
pop
pop
ja
adc
jbe
mov
fidivl
mov
cmp
pop
lock
shl
mov
jnp
sub
xchg
mov
insl
std
cmp
xor
add
jg
shlb
les
lahf
inc
cltd
pop
sub
and
inc
jge
daa
cmpsl
mov
mov
cld
out
lods
and
scas
sub
adc
ret
or
in
inc
sub
loopne
ja
fdivr
insl
lahf
daa
push
and
xor
xchg
cwtl
in
push
jge
das
dec
leave
jge
bound
filds
mov
dec
add
arpl
jl
jl
outsb
dec
push
bound
pop
imull
loopne,pn
cmp
dec
in
scas
out
pusha
xor
leave
xor
iret
inc
sbb
es
pop
push
pusha
ja
xor
dec
mov
xor
call
aad
pop
jg
pop
add
mov
jbe
and
dec
dec
dec
shrb
sub
hlt
movsl
clc
mov
inc
push
cmc
mov
dec
mov
add
jmp
or
mov
rcll
xor
push
push
ret
push
mov
ret
jo
ds
dec
loope
pop
cli
mov
inc
mov
xchg
mov
add
pop
sbb
iret
lcall
jne
mov
scas
insl
iret
mov
daa
ja
fmull
outsl
adc
sti
xchg
mov
push
adc
into
ljmp
in
dec
push
aas
add
outsl
out
lods
push
inc
movsb
into
push
aas
out
cmpsl
xor
ficompl
mov
adc
inc
stos
push
sub
repnz
mov
adc
scas
cld
mov
adc
rorl
pop
mov
jl
rolb
out
and
ret
or
iret
xor
fwait
sub
jmp
pop
cmp
pop
fucomp
jge
dec
outsb
cmc
and
mov
xchg
jg
scas
xchg
add
sahf
sub
inc
mov
stos
sbbb
jg
jno
aad
jo
adc
call
add
xor
js
xor
sbb
mov
scas
fisubrs
pusha
xor
in
in
mov
inc
loopne
jo
adc
lret
mov
push
cmp
or
hlt
stc
xchg
sbb
jo
into
lahf
fcoms
fdivr
add
mov
or
int
pop
fiaddl
mov
push
xchg
pop
das
je
and
fildll
xor
dec
push
xchg
sahf
ret
outsl
dec
sbb
outsl
push
lods
push
jae
inc
jl
mov
shrb
lods
add
push
cs
and
mov
iret
push
outsb
inc
adc
mov
aam
cmp
dec
push
mov
pop
add
jb
or
jno
add
sub
fistpll
jg
push
mov
cli
call
mov
mov
je
sbb
xchg
mov
push
lock
cmp
call
jne
mov
pop
mov
loope
mov
dec
jno
je
cmc
xor
outsl
xchg
push
push
mov
jmp
lods
jmp
outsl
loope
out
and
shrb
cmp
bound
imul
mov
je
cmpsl
scas
dec
xor
sub
in
divl
jl
mov
insb
fwait
push
shll
jnp
es
and
sbb
leave
xor
ss
or
lcall
push
dec
add
mov
in
mov
cs
jae
mov
scas
add
pop
xchg
arpl
mov
and
inc
movl
xchg
inc
dec
insl
movsb
out
out
dec
dec
call
or
sarl
jmp
sub
test
pop
and
scas
aaa
add
insl
jecxz
aas
in
xchg
int3
cmp
fisttpll
cld
sahf
dec
dec
jno
ja
pop
ljmp
imul
sub
nop
dec
call
mov
fisttps
scas
lods
test
pop
or
test
call
shr
mov
add
scas
mov
fbstp
inc
add
xor
mov
pand
or
dec
and
mov
loope
movsb
fs
cmc
mov
iret
test
sbb
jne
ret
lock
shrb
loope
and
fbstp
mov
dec
jns
in
and
addb
adc
jnp
pop
fstps
dec
scas
outsb
js
rolb
test
xor
fdivl
cmp
stos
pop
lahf
inc
insl
jne
pop
outsl
mov
mov
mov
ret
sbb
clc
call
cli
adc
nop
sti
fwait
lcall
shll
clflush
int3
mov
mov
in
lods
test
or
fists
pop
add
jmp
out
push
sub
jnp
push
mov
cld
ret
push
sbb
or
dec
int3
cli
lea
inc
ret
or
movsb
mov
fidivs
popa
into
jmp
fistps
mov
lea
xchg
shr
xchg
mov
dec
and
mov
push
mov
xor
daa
rol
pop
inc
in
test
mov
sbb
xor
imul
add
sbb
mov
push
mov
xchg
ret
movsl
inc
and
jb
ja
fcmovb
dec
daa
fwait
adc
hlt
and
imul
jo
cmp
sarb
xorb
cs
xchg
rorb
fdivs
adc
mov
aad
xor
xchg
add
push
ret
inc
and
pop
xlat
imul
cli
std
bound
fs
nop
push
pop
loope
xor
sub
sbb
scas
or
push
add
test
push
pop
outsl
pop
lods
outsb
jle
aaa
add
sbb
push
test
adcb
das
aad
int
int
fbld
jle
xchg
pushf
pop
push
sahf
xchg
lods
pushf
fldl2e
fsubrs
add
jnp
xor
adcb
dec
mov
sbb
pushf
or
xchg
jnp
xchg
cli
jno
rcrb
and
fs
adc
cmc
orl
mov
mul
pop
add
xchg
xorb
xchg
push
movsl
add
repnz
int
pop
addr16
push
nop
aas
xchg
lock
push
sbb
mov
jge
xchg
push
lcall
aas
jmp
jg
adc
aam
jge
jecxz
or
mov
sbb
mov
push
movsl
out
cs
mov
cmp
hlt
mov
int3
mov
sub
adcl
mov
adc
jae
push
adc
fadds
lds
mov
xor
xor
pop
jle
movsb
or
insb
or
add
xchg
sub
mov
outsl
fs
push
cmp
imul
mov
pop
cwtl
stc
int3
imul
aaa
loopne
imul
stos
ret
shrl
jnp
add
or
sub
sbb
xor
mov
push
lret
js
fstpt
bound
popf
cmp
out
cmc
lock
scas
movsl
xchg
mov
outsl
lock
or
sub
stos
xchg
cmp
push
mov
lcall
adc
cmp
sub
lds
inc
push
enter
test
mov
in
add
negb
ret
daa
daa
jno
and
rcrb
add
mov
ljmp
movsb
dec
jle
lcall
mov
in
cld
imul
adc
daa
dec
popa
lea
enter
in
mov
repz
sbb
stos
jb
rcll
cwtl
xchg
mov
js
out
pushf
les
adc
mov
pushl
jecxz
inc
mov
lods
mov
adc
pop
subl
or
out
dec
mov
ret
lret
inc
das
and
lods
mov
arpl
loopne
push
inc
aaa
push
addr16
mov
pop
fst
mov
ja
push
sub
stos
dec
mov
int3
das
sbb
imul
into
cwtl
add
sub
fsts
js
pop
test
mov
jmp
sub
push
xlat
les
movsb
std
ljmp
mov
jno
movsl
orl
pushf
in
into
jmp
std
pop
jl,pn
and
push
inc
mov
leave
jo
add
pop
jae
bound
dec
test
cld
xchg
sub
popa
xchg
mov
jo
dec
pop
outsl
cmp
out
xor
lahf
jp
xlat
movsb
xchg
repz
or
shll
xorl
dec
inc
imul
sbb
ret
ljmp
jmp
push
or
and
adcb
pop
jno
mov
add
shrb
js
test
mov
mov
clc
push
mov
and
mov
arpl
cmpsb
cmp
mov
test
addr16
inc
sahf
cmp
insl
outsl
into
sarb
jb
outsl
push
push
mov
sbb
push
fdivl
xchg
and
call
fists
or
ret
xchg
cmp
sub
pop
out
ljmp
fistpll
add
inc
cmp
jecxz
fisubl
xor
lods
xor
mov
filds
cmpb
add
int3
lock
jno
popf
jle
scas
aas
push
jnp
call
fcompl
mov
cltd
pop
std
sar
fs
pop
xchg
lret
add
sub
imul
mov
repnz
dec
mov
lret
jo
jnp
jl
pop
pushf
mov
cmp
pop
cs
cmpsl
pop
cld
sub
in
and
test
mov
push
testb
pop
fldt
imul
outsb
push
pusha
fisttpll
inc
pop
out
inc
addl
sub
test
loope
cmp
pushf
aad
mov
mov
aaa
adc
daa
idivb
movsl
scas
out
xlat
outsb
push
xchg
ds
sbb
movsl
mov
repnz
addr16
push
cmp
pusha
outsl
mov
push
jge
mov
add
sub
pop
repz
jl
mov
das
push
les
dec
mov
ret
fists
mov
dec
decl
fistps
jl
iret
ljmp
and
jae
rorl
sarl
jl
mov
inc
jmp
hlt
sbb
push
movsl
xchg
dec
push
pop
cmpsl
scas
std
xchg
cmp
sub
inc
lods
mov
pop
test
addr16
add
cmp
mov
imul
inc
das
jnp
xchg
sub
lods
sahf
aas
mov
push
cli
cmpb
stos
sub
cmp
add
bound
leave
in
sarb
testb
pop
mov
outsl
in
sub
push
jns
inc
leave
dec
aam
mov
pop
call
or
fsubl
jnp
mov
pop
pop
cmp
je
xchg
negb
inc
jae
sub
bound
lods
lods
adc
fs
mov
sbb
cmpsl
adc
loope
or
stc
sbb
or
cmp
call
pusha
push
mov
pop
lods
push
sbb
test
cmp
aam
movsb
xor
jmp
add
sub
dec
mov
push
dec
aam
cltd
dec
andb
lahf
hlt
mov
lret
outsl
or
cmp
enter
cmpsl
pop
jae
mov
add
movsl
aas
fstp
fstl
test
push
and
xor
sbb
lcall
mov
bound
jne
sub
dec
je
xchg
inc
inc
rclb
lds
sbb
add
sbb
sub
xor
cmp
add
cld
aad
sbb
scas
xor
clc
mov
add
sbb
into
lret
icebp
push
xchg
and
jmp
cwtl
loope
sub
inc
popa
paddw
mov
inc
xlat
push
xlat
movsl
test
pop
bound
mov
lds
pop
inc
out
das
cmp
push
call
adc
xchg
insl
pop
cmp
aam
inc
repz
push
jo
ret
sti
push
loope
mov
xor
int
sub
mov
cli
leave
xchg
mov
adc
add
hlt
gs
roll
pop
movsl
cmpb
idivl
cmc
jmp
inc
ss
sub
jns
js
lcall
dec
filds
in
push
xchg
or
mov
mov
jne
pop
dec
lea
and
dec
pop
push
cld
dec
mov
cmpb
call
add
cmpsb
inc
jbe
sbb
sysexit
sbb
pop
mov
sbb
and
mov
imul
jo
pusha
push
push
in
mov
inc
ljmp
lock
adc
and
sub
xchg
std
add
mov
mov
jle
jb
test
push
xor
fistps
sbb
sbb
in
push
popf
ficompl
and
ja
fbstp
adc
call
cmp
push
subb
loopne
fstpl
decb
scas
lret
shll
lods
sbb
mov
adc
fldt
push
push
loopne
sbb
or
push
mov
cmp
sbb
fistl
jnp
shlb
loope
inc
add
inc
mov
lods
subb
sbb
inc
addr16
adc
cmp
es
mov
aaa
sbb
or
int
orb
movsl
adc
insb
mov
cmp
mov
hlt
cmp
xor
mov
cmp
inc
aad
movsl
push
mov
mov
ljmp
sbb
jo
cmp
xchg
mov
out
sbb
pushf
movsl
stos
inc
xlat
jnp
ds
fcoms
pushf
sbb
xchg
idiv
and
add
arpl
sar
cmp
add
mov
out
imul
fsubr
loopne
ret
and
xchg
cli
gs
jnp
mov
push
mov
adc
adc
dec
mov
out
cmp
inc
push
insl
mov
add
add
gs
call
inc
jle
mov
lret
scas
scas
dec
out
push
and
mov
lods
lea
jg
mov
fldt
cs
xor
ficompl
leave
dec
mov
fsubp
addr16
clc
es
mov
pop
roll
js
ljmp
xchg
mov
gs
in
test
mov
test
mov
pop
mov
mov
mov
stos
addr16
mov
or
xchg
push
and
pop
jp
popa
int
jo
pop
cmp
fs
or
hlt
xchg
mov
lret
leave
cmp
mov
mov
test
scas
push
into
jns
and
add
add
add
data16
jnp
jl
push
adc
push
sbbb
adc
pop
pop
std
adc
int3
inc
out
pop
test
cmp
push
xor
dec
cwtl
dec
pop
mov
adcl
cmpsb
sub
jmp
pop
adc
sbb
pop
jl
xchg
add
stos
fisttpll
insl
sarb
fldpi
pop
pop
sub
scas
sub
pop
cmpsb
sbb
sti
add
mov
popa
jp
jle
xor
mov
dec
fiaddl
pop
pop
hlt
inc
xchg
pop
repnz
sbb
outsl
fstl
adc
mov
sub
add
je
std
sbb
mov
test
jecxz
pushf
movsb
stos
sub
daa
pop
xchg
rorb
dec
mov
jb
lahf
loope
insl
xor
loopne
stc
cli
imul
lahf
hlt
mov
fsub
push
cwtl
lds
in
xchg
pop
adc
shll
xchg
sti
repnz
pop
push
mov
push
das
mov
and
mov
jae
pop
push
enter
in
xlat
and
cmp
je
or
cmc
addr16
jecxz
cltd
pushf
or
ja
sbb
jmp
mov
clc
xorb
stc
test
or
sub
xor
loop
not
das
outsl
pop
sub
mov
loop
lret
push
push
push
mov
filds
gs
bound
popf
adc
adc
jmp
add
pushf
sti
pop
test
cmc
push
lret
xchg
arpl
sub
subl
cmc
out
xor
ret
cmp
fsubl
mov
lods
add
stc
push
pop
ds
lahf
pop
movsb
and
mov
mov
cmpsl
inc
mov
mov
sbb
fstl
sub
lret
repz
jmp
and
dec
inc
xchg
mov
scas
xchg
sub
push
dec
adc
mov
mov
or
push
mov
add
push
dec
mov
dec
xor
fs
daa
iret
clc
mov
int
push
test
inc
inc
jae
stc
xchg
repz
fwait
lods
test
pop
sbb
xchg
popf
adc
lds
repz
mov
test
das
nop
mov
pop
pusha
in
sub
mov
stos
repnz
mov
imul
es
bound
addr16
int3
inc
call
cmp
inc
jle
jb
in
lcall
out
popf
and
lret
jg
pop
jmp
mov
pop
sub
dec
ret
ret
mov
xchg
aad
mov
pusha
add
dec
es
sub
and
nop
and
mov
insb
test
iret
je
in
xor
xchg
and
sub
ja
jno
jge
cmp
fstl
lea
aad
out
and
add
xchg
ss
pushf
test
into
and
jl
fcomi
push
test
push
xchg
lahf
jne
sub
cli
imul
adc
out
push
push
or
fs
add
out
inc
xlat
jmp
fidivrl
or
mov
lods
std
pop
add
xor
xchg
not
adc
call
out
std
repz
jo
push
lods
jo
ficoml
mov
dec
xor
xchg
lods
cmp
sub
pop
pop
push
repz
lret
xlat
pushl
push
jnp
stc
adc
or
add
push
pop
push
movsb
inc
push
testl
mov
mov
repnz
cmp
gs
and
push
jecxz
push
pop
jae
sti
inc
mov
roll
insl
aam
lahf
sbb
andl
mov
mov
insl
outsb
add
shll
popf
sub
sub
xchg
addl
cltd
mov
mov
or
push
aad
cli
cld
add
jnp
dec
mov
shll
mov
fistps
jno
push
rclb
or
cltd
fwait
mov
cmp
cmpb
js
fs
push
xchg
jge
sbb
fwait
push
push
adc
xor
mov
dec
and
xor
or
pop
mov
cmpsb
xchg
cmp
outsb
pop
mov
les
mov
mov
xchg
imul
xor
mov
popf
nop
and
fs
or
stc
lea
mov
lcall
inc
mov
add
dec
mov
insb
push
sub
in
fistps
sbb
inc
push
mov
sub
insb
negb
and
leave
inc
push
add
test
fiaddl
add
addr16
pop
mov
dec
add
cmp
cmp
iret
jge
cwtl
rorb
push
notl
rcrb
or
sti
mov
xchg
jbe
cmpsb
stc
push
pushf
jnp
push
mov
and
shr
mov
out
dec
dec
dec
sarl
jae
fadds
insb
repz
mov
mov
mov
cmp
insb
or
or
inc
inc
jecxz
inc
or
cmovl
jg
dec
call
mov
insl
cmp
sub
pop
push
jmp
stos
je
mov
out
fsubrs
cmp
loope
ljmp
cmp
xchg
push
fwait
loope
sub
sbb
push
seto
test
and
inc
jg
jl
in
sbb
shlb
jae
or
add
push
xor
imul
jp
test
cmpsb
push
xchg
mov
inc
outsb
jmp
loop
popa
test
lods
and
int
dec
scas
popa
pop
das
fistpll
clc
jp
lcall
divb
mov
pop
sub
and
mov
sub
dec
sbb
mov
cmp
sahf
ljmp
ljmp
test
xchg
rcll
fildll
or
repnz
adc
in
push
or
popf
int3
addb
or
daa
movsb
mov
jo
pop
pop
fwait
cli
mov
pop
hlt
cmpsl
jmp
testl
mov
jl
lds
mov
sub
arpl
mov
rcll
add
and
imul
fists
in
push
inc
jnp
mov
or
je
and
rclb
xchg
icebp
jne
outsl
push
jbe
out
ret
lods
cmp
cmp
sbb
and
inc
sbb
adc
std
into
inc
sbb
sub
or
mov
dec
fs
or
in
pushf
popl
in
addl
add
xchg
movsb
pop
call
or
jmp
lret
arpl
or
mov
gs
xor
fisttpl
mov
sbb
sbb
dec
bndldx
imul
mov
mov
mov
xor
out
jle
sbb
sbb
stos
sahf
out
imul
add
xlat
rcrb
movsb
out
incl
pusha
rolb
stc
lcall
cmp
lds
int3
shll
xchg
push
stos
sbb
jg
loope
jg,pn
cs
cld
adc
lds
cmpsb
push
addr16
scas
or
repnz
mov
xor
out
out
cmp
mov
adc
dec
das
cmp
pop
scas
sbb
and
arpl
sub
test
push
ss
add
mov
sbb
xor
shlb
jne
addr16
ficompl
rclb
xchg
out
out
pop
sahf
jns
rcrb
pop
stc
loope
inc
icebp
cld
add
push
adc
mov
or
data16
xor
lock
in
frstor
shlb
iret
out
dec
lret
aam
movsb
push
xchg
and
jl
xor
xchg
xor
sub
lahf
xchg
in
bound
jne
je
arpl
stc
repnz
add
xor
xor
cmp
cmp
out
sub
adc
mov
roll
sbb
or
sub
cmp
and
out
leave
xchg
ret
mov
pop
add
outsw
push
or
fldl
cltd
or
jecxz
jnp
xor
push
and
fmuls
dec
jmp
xchg
es
dec
pop
mov
jmp
dec
lea
lods
or
adc
mov
sub
inc
and
int3
cmp
int
xchg
pop
adc
push
mov
jo
mov
insb
sbb
lods
shll
ret
xchg
test
mov
cmp
fcmovb
jp
hlt
and
mov
mov
push
mov
sbb
scas
inc
shl
int3
rcll
jp
dec
add
dec
test
clc
out
push
mov
cmp
testl
inc
push
sbb
arpl
scas
sub
cmc
in
jg
in
adc
or
movsb
mov
mov
jmp
mov
jne
rorb
inc
pop
pop
ret
mov
stc
mov
xor
push
arpl
cld
mov
jb
ret
sbb
movsb
bswap
xchg
shrl
out
std
pop
orb
je
cmp
cmpsl
out
ds
gs
popf
into
push
bound
mov
dec
pop
and
cmp
sbb
imull
loopne
cmp
rcl
cmc
fnstcw
push
out
shlb
addr16
dec
sbb
cmp
mov
dec
fldcw
mov
sahf
pop
fnstsw
jle
fsubrl
test
loop
in
cmovne
pop
cwtl
cltd
pusha
xor
rorb
out
in
xchg
imul
stos
es
jo
push
rorb
insb
je
adc
loop
lea
stos
imul
fcoms
sub
adc
lahf
xor
mov
fs
subl
sbb
stc
stos
adc
call
push
test
dec
mov
cmp
iret
ret
daa
mov
cli
imul
add
xor
daa
inc
stc
jns
popa
fmulp
lret
jnp
pop
lret
stc
aad
xor
lcall
mov
ja
out
aas
frstor
cs
lds
pushf
repnz
pop
sahf
pop
cmp
repz
out
jecxz
push
mov
int
std
add
adc
mov
mov
roll
clc
and
test
push
mov
jg
pop
fdivrs
and
xchg
pop
jl
pop
or
mov
lret
and
in
push
mov
aaa
fisubl
sub
jecxz
xchg
pop
ret
insb
call
mov
shl
mov
sub
inc
std
sahf
arpl
subb
dec
push
pop
outsl
movsb
xor
mov
cmp
dec
and
jecxz
mov
in
jle
xor
stc
mov
lret
and
lods
inc
push
inc
mov
pop
mov
dec
scas
inc
adc
sub
es
mov
les
gs
mov
cs
pop
mov
fidivl
mov
mov
mov
push
test
xor
daa
enter
inc
mov
cmp
or
hlt
fwait
sub
in
pop
mov
lds
pop
add
roll
sti
and
jnp
pop
popa
mov
push
cld
adc
add
stc
outsl
cmp
shrb
sub
je
addl
lret
cwtl
scas
sbb
fstpl
aad
dec
dec
sub
pop
in
jnp
xchg
int3
movsl
loope
and
loope
xchg
mov
xchg
adc
jge
loopne
negb
mov
outsb
push
pop
test
movsb
add
ficomps
bound
dec
in
test
add
aad
mov
enter
clc
fnstenv
orl
shlb
inc
stc
adc
mov
pop
jae
push
push
cmp
sbb
addb
lcall
lahf
add
xor
fildll
xchg
cmp
push
cmpsl
nop
lds
fmull
lcall
mov
xor
aaa
or
lds
gs
cmp
mov
jmp
popf
scas
cld
or
lods
push
adc
sbb
sbb
mov
or
je
pop
mov
dec
inc
hlt
adc
fiadds
sti
and
iret
fcomps
cmp
sub
mov
sbb
add
add
mov
jg
bnd
mov
pop
push
dec
xchg
xchg
ret
cmp
pop
adc
movsb
mov
pop
stc
in
pop
popf
ljmp
xlat
arpl
jmp
ja
fildll
cmpsl
ss
clc
add
xor
jl
cld
jae
add
jmp
add
mov
subb
les
xchg
sub
into
pop
enter
subb
cmpsl
stos
xor
pop
fimull
mov
inc
gs
inc
lcall
inc
mov
pop
inc
repz
pop
ret
ret
rclb
insl
loop
movsb
push
xor
cmp
sbb
testb
dec
lcall
and
mov
insb
in
cs
pop
inc
shll
xor
in
stos
or
xchg
incb
jbe
into
jg
scas
mov
cmp
sbb
lock
outsl
pop
insl
adc
cmpsb
cs
cltd
xor
cwtl
incl
in
cmp
inc
jge
test
imull
mov
pop
lret
inc
cmp
out
shll
lret
mov
pusha
push
cltd
sub
pusha
ret
imul
loopne
pushf
jns
sub
sbb
das
idiv
or
pop
pusha
inc
cwtl
pop
insb
mov
bound
jne
adc
adcl
inc
bound
jecxz
movsb
addr16
mov
or
adc
mov
ret
test
popf
stos
mov
push
xchg
mov
xchg
inc
sub
or
into
add
lods
test
and
dec
cltd
enter
ds
cli
xor
mov
adc
sbb
mov
lcall
roll
icebp
pop
ljmp
mov
add
mov
sub
cmp
jecxz
jno
mov
fdiv
dec
stos
cld
std
sbb
int
jae
hlt
gs
lret
out
js
bound
sub
shll
add
dec
mov
jb
icebp
ret
es
lods
jp
repnz
stos
adc
fdivrp
sub
imul
dec
imul
ret
or
mov
shlb
outsl
mov
mov
jmp
mov
jns
outsl
dec
es
adc
mov
mov
cmp
mov
in
sti
les
gs
mov
into
inc
mov
cmpsl
xor
ja
clc
push
das
stos
and
loop
jmp
jb
mov
cli
int
adc
push
push
sahf
mov
add
test
rorl
or
rorb
xchg
les
xor
jbe
cmc
jne
inc
adc
popf
jns
adc
jp
xlat
inc
test
imul
sbb
add
and
adc
ret
nop
jecxz
lahf
aam
std
jle
add
js
dec
fcomp
ja
or
lea
sbb
add
xor
sbb
jmp
icebp
jmp
jo
pop
neg
ds
pop
mov
in
mov
dec
scas
sub
mulb
mov
xor
aaa
cltd
scas
dec
mov
mov
adc
push
inc
cld
jge
hlt
dec
xchg
and
and
daa
test
imul
mov
adc
fldcw
ret
jae
cltd
int
aam
adc
sub
jo
inc
or
jno
bnd
loop
stc
stos
lcall
mov
nop
sbb
jno
rcrb
sub
ffreep
adc
rol
popf
imul
lock
rcll
xchg
je
in
cs
out
cmp
mov
das
call
push
scas
inc
lcall
ja
mov
into
aaa
add
sub
push
dec
fwait
and
jae
lcall
or
sbb
cs
sbb
lret
push
push
push
fists
push
popf
jnp
repnz
fldcw
gs
iret
add
and
aas
sbb
or
sub
repnz
sbb
test
addl
pop
jmp
push
fldt
sbb
loop
adc
ret
je
pop
aam
mov
into
stos
lret
sub
add
imul
bound
arpl
jno
add
lods
orb
jg
out
dec
xchg
mov
clc
test
push
jg
shlw
rep
in
mov
jno
mov
divl
stos
inc
pop
mov
inc
mov
and
or
jbe
lods
jbe
pop
popa
pop
mov
lret
scas
and
and
lds
sub
test
mov
xor
adc
popf
outsb
into
or
inc
andb
dec
mov
xor
push
cmp
stos
cltd
push
or
adcb
pop
movsb
cmp
jecxz
jmp
xlat
mov
roll
push
mov
aam
cmp
xorl
xchg
inc
jmp
fwait
leave
les
add
add
incb
sub
iret
scas
xor
or
mov
sti
bound
push
jp
mov
pop
and
inc
mov
dec
pop
push
test
data16
jnp
fistps
pop
adc
and
outsl
sahf
fists
cmp
mov
adc
je
pop
push
and
call
mov
sbb
mov
dec
pop
xor
lods
sbb
aad
add
jno
cmc
and
sub
push
sarb
push
jl
outsl
and
imul
sub
mov
add
ss
pop
imul
cld
mov
andl
mov
cmp
jl
les
sti
or
jo
cmpsl
enter
xor
mov
inc
xchg
lret
mov
or
jbe
xchg
and
xchg
arpl
or
inc
xchg
test
lods
jg
xlat
sub
sbb
xchg
out
jae
sub
adc
enter
sbb
add
ja
jecxz
add
add
xor
push
jns
aam
jae
push
inc
je
and
icebp
push
iret
inc
ljmp
dec
mov
sbbb
clc
fwait
gs
icebp
sub
jae
jle
xchg
sbb
inc
xchg
dec
mov
fidivs
jae
cmp
les
xchg
sbb
mov
pop
or
inc
or
outsb
pop
aam
int3
inc
cmp
in
jge
js
je
or
test
bound
add
lret
mov
aam
xor
andb
adc
and
jo
and
xchg
xor
or
push
cmp
mov
outsl
sub
fcoml
pop
lret
out
add
leave
inc
cs
popf
repz
or
mov
push
rep
mov
out
sub
imul
shlb
mov
pushf
mov
loopne
rcll
mov
shll
iret
push
or
in
add
jle
daa
mov
daa
movsl
jno
pop
fisttpl
sub
fwait
and
test
test
pop
lods
push
dec
mov
inc
xor
imul
mov
mov
add
jle
ja
adc
mov
sbb
mov
fwait
sub
lea
cmp
stc
incl
mov
into
adc
xchg
adc
pop
je
or
lcall
arpl
iret
nop
jno
xchg
scas
movsl
adc
jecxz
xor
ds
pop
scas
nop
or
leave
fildll
jge
mov
repz
xor
js
push
pop
inc
rcr
cmp
pop
ljmp
test
cmpsb
pop
pushf
aas
cmpsl
mov
mov
scas
push
dec
pop
xor
bound
cmp
clc
stos
in
sub
imul
push
pop
push
cmp
ja
mov
imulb
lods
pop
ljmp
pop
mov
xor
cmpsb
lahf
jg
aam
xchg
je
mov
cmpsb
arpl
fsubrl
inc
mov
jecxz
mov
xor
inc
shlb
dec
scas
jecxz,pn
add
mov
sub
test
es
mov
in
ljmp
cmp
out
test
arpl
fmuls
lock
adcl
lea
outsl
cmp
push
cmp
push
sbb
xchg
xchg
inc
mov
mov
idivl
leave
scas
xchg
mov
loopne
mov
pop
jns
int
adc
push
aam
in
imul
cld
lods
or
sub
scas
insb
xchg
int
xchg
out
dec
push
xor
xor
push
cvtdq2ps
enter
add
cmovnp
xchg
jp
adc
sbb
xlat
jo
stos
inc
aam
adc
int3
imul
addb
roll
fldenv
push
xchg
sub
push
mov
fsubrl
movsl
push
repnz
shlb
jns
sbb
leave
sbb
jae
jmp
pushf
ret
pop
inc
xchg
xchg
lcall
nop
jmp
ficompl
std
fadd
xlat
sti
sbb
in
add
dec
and
pusha
jle
aaa
mov
clc
scas
add
adc
jae,pn
jae
inc
inc
add
xchg
sbb
adc
cmp
dec
test
outsl
popf
fwait
xchg
mov
jle
lds
or
shrl
adc
sub
xor
sub
adc
out
hlt
dec
push
shld
subb
add
roll
add
mov
adc
aaa
dec
aad
or
stc
icebp
enter
or
pop
inc
in
cmpsl
shll
pop
or
inc
outsb
adc
test
lods
mov
sub
call
dec
push
xchg
mov
jecxz
js
repz
or
test
cld
or
dec
lods
dec
insl
push
or
mov
mov
add
fisubl
xchg
iret
xacquire
ss
in
push
jmp
mov
xchg
push
mov
push
rorl
push
add
int
cli
fdivr
dec
sbb
push
loop
lods
xor
call
cmp
mov
ret
lahf
jne
mov
repnz
cwtl
and
imul
mov
inc
adc
bnd
xor
pop
test
jecxz
mov
xor
inc
and
fimull
icebp
das
cmpsb
mov
jno
aas
das
ror
lahf
sbb
das
rcrb
das
adc
in
fnstenv
mov
stos
pop
add
inc
enter
xor
jne
adc
popf
inc
xchg
scas
into
xchg
mov
testl
jge
mov
int3
ret
addb
fmull
cli
sbb
lret
add
cmp
arpl
lock
in
enter
sbbl
les
xchg
jp
cwtl
xor
mov
and
fisttpll
pop
cwtl
movsb
out
adc
add
bound
repnz
cli
mov
gs
mov
mov
push
sbb
pop
imulb
clc
int
jno
in
mov
xchg
jne
cmp
aam
cmp
stos
xor
and
mov
push
add
and
jne
cwtl
cli
loope
inc
or
pushf
mov
jmp
dec
nop
cmp
push
fnstcw
cmp
mov
and
iret
mov
mov
sub
mov
cmp
imul
and
xchg
daa
cli
xchg
inc
outsb
pop
cmp
xchg
in
ret
pop
or
mov
sub
mov
sbbl
mov
add
int3
mov
or
movsb
aaa
stos
pop
fdivr
gs
xchg
inc
filds
inc
frstor
jp
ror
loop
mov
ret
test
cmp
pusha
jno
and
cmp
call
lods
or
insb
sar
pop
fildll
fs
in
push
adc
mov
je
popa
js
push
mov
sub
test
cwtl
arpl
inc
gs
cmpsl
push
repnz
xor
sub
push
insl
jmp
cli
cmp
mov
mov
xchg
xchg
sahf
jae
xor
push
enter
aam
push
test
ret
test
rcll
outsl
out
pop
fmull
ret
out
mov
pop
add
mov
or
rclb
loope
mov
je
leave
ret
and
mov
sarb
dec
mov
sbb
add
xchg
aam
jo
lds
mov
sub
push
leave
pop
cs
push
mov
mov
mov
fisubrs
fistpl
jecxz
test
pop
test
lret
leave
out
xchg
lods
test
std
xor
scas
sub
push
sub
cmp
jl
xchg
jmp
scas
lret
cmp
lcall
adc
jle
xchg
shr
adc
bnd
test
loopne
jge
xchg
out
cmp
cltd
js
sub
push
idivb
sbb
pop
bound
mov
mov
mov
lock
mov
dec
add
cmp
test
inc
ret
repnz
push
clc
in
or
insl
xchg
dec
ja
mov
mov
aaa
sbb
push
shlw
stos
lahf
popf
inc
repnz
imul
sub
je
in
ljmp
mov
movsl
test
mov
inc
aas
xor
mov
fimull
pop
popf
addr16
movsb
xchg
stos
cmp
das
rcpps
mov
jmp
dec
ss
out
sub
pop
cmp
sub
iret
lock
jge
aam
repz
pop
aam
dec
xor
cmpsb
add
mov
dec
xchg
mov
dec
sbb
icebp
and
fstpt
sub
jns,pt
jbe
stos
inc
out
aad
cmp
hlt
adc
rorl
ret
mov
shlb
imul
mov
pop
jge
test
stos
ret
push
pusha
sub
push
test
push
sbb
leave
mov
repz
inc
xor
pop
pushf
imul
dec
cmpsl
push
sub
data16
stos
mov
mov
sbb
push
arpl
mov
sub
in
hlt
sub
enter
jno
cmpsl
inc
add
stc
pop
mov
test
shll
pop
scas
pop
scas
scas
stc
pushf
or
cmp
mov
adc
lods
xchg
iret
loopne
mov
popf
or
in
jns
push
cmp
mov
jne
mov
cmpsl
inc
inc
xor
mov
push
xchg
pusha
jbe
popf
add
pusha
mov
jb
aad
mov
dec
popf
out
push
enter
inc
sbb
in
mov
cld
add
xor
cld
jge
xor
push
aad
ljmp
call
jmp
dec
call
push
mov
mov
stos
mov
push
notl
inc
sub
aad
lcall
mov
mov
and
ss
push
adc
flds
repz
shrb
mov
frstor
outsl
dec
add
ja
push
jnp
cmpsb
scas
sbb
dec
es
lcall
ljmp
iret
movsl
xchg
sbb
push
inc
or
lds
inc
int
in
push
cmc
inc
pandn
into
xor
sbb
xchg
imul
inc
out
jmp
add
out
je
xlat
shll
xor
mov
test
sub
lock
xchg
dec
shrb
fbld
jmp
inc
pushf
movsb
aas
mov
fdivs
sbb
push
in
insl
mov
and
inc
cmp
xor
xchg
pop
repz
repz
movsb
cltd
cmc
scas
mov
sbb
jne
cmp
adc
push
dec
inc
mov
sub
popa
mov
gs
push
mov
push
subb
mov
inc
cmpsl
jb
and
fdivr
jp
lds
mov
lods
stos
pop
xor
mov
lcall
adc
adc
push
xchg
push
xlat
push
and
fisttps
sub
dec
pop
pop
icebp
ret
jmp
mov
das
jns
and
sbb
fcomip
scas
adc
sahf
divb
mov
sbb
mov
je
fnsave
jbe
repz
dec
mov
pop
in
mov
adc
or
mul
mul
jmp
lret
push
insl
add
xchg
xor
mov
mov
clc
test
mov
imul
les
jecxz
cmp
pop
js
into
outsb
fmul
insl
push
test
jns
aam
cmpsl
cmpsb
push
filds
pop
popa
mov
dec
xor
mov
imul
sub
mov
pop
pop
in
xchg
ss
daa
in
out
out
cmp
das
movsl
sub
out
data16
adc
cmpsl
xor
jecxz
inc
icebp
jns
mov
mov
jle
fistl
mov
arpl
mov
push
int
mov
pop
xchg
ljmp
jl
mov
int3
xchg
lret
outsb
out
in
dec
push
inc
or
cmp
aaa
es
divb
pop
xor
and
adc
into
pop
cwtl
enter
dec
xchg
test
inc
in
mov
cmp
or
icebp
push
enter
jle
dec
bound
cltd
push
dec
xor
cltd
loopne
sbb
adc
or
scas
out
ja
out
jb
ret
mov
and
int
popf
pop
sbb
jno
mov
movsl
fimull
jnp
hlt
xchg
cmovae
rcr
stos
loope
pushl
shrb
jg
lods
sbb
xchg
push
push
mov
cs
adc
pushl
cmc
mov
mov
ficoms
clc
out
push
xor
test
js
add
mov
or
sub
adc
into
cli
fsubrs
addr16
jg
lods
mov
outsb
mov
push
in
ret
out
jnp
xchg
jo
xor
xor
push
pop
jo
adc
xchg
push
imul
jbe
stc
lahf
sub
push
cmp
test
imul
jl
pop
xor
adc
lea
mov
movsl
ljmp
or
cmp
shrl
jl
xchg
movsb
mov
shr
dec
pop
outsb
aas
mov
das
or
jl
ljmp
lcall
xchg
cmp
jns
aad
and
fildll
inc
in
test
jle
dec
pop
jae
divl
cli
adc
out
popa
dec
addl
cmc
jge
push
mov
dec
adc
jmp
adc
stos
movsl
pop
test
mov
mov
test
lods
in
cmp
es
push
filds
out
sub
jno
dec
push
lods
or
adc
aas
sub
aaa
sbb
add
xor
int3
pop
ffreep
stos
adc
xchg
dec
in
cmp
stos
or
insl
lcall
push
dec
dec
into
rcll
stos
loopne
push
divb
and
and
popa
mov
arpl
test
dec
xchg
pop
mov
mov
out
jmp
add
popa
cmp
mov
cmp
dec
out
sbb
inc
jmp
adc
inc
in
pusha
xlat
fs
fwait
sub
shr
add
btc
fs
test
rcrl
popf
xchg
mov
pop
sub
jmp
inc
and
lods
sbb
xchg
cmp
in
add
mov
push
lea
ret
mov
sub
dec
aas
mov
test
cmp
jno
sbbb
rorl
popa
outsb
pop
repz
nop
or
push
scas
mov
data16
or
sbb
push
repz
jmp
les
leave
mov
arpl
cli
jle
pushl
and
add
in
pop
push
fs
dec
inc
xchg
mov
das
push
jecxz
jl
jo
out
sub
inc
xlat
sub
out
cwtl
jne
mov
mov
imul
xor
fsubr
outsl
jecxz
out
stc
sbb
dec
xchg
push
mov
mov
pop
and
push
sbb
test
or
loope
stos
ret
das
ja
sti
sub
mov
int
push
inc
mov
fimuls
scas
adc
sub
pmulhuw
dec
push
ret
mov
mov
push
mov
cltd
or
push
andl
inc
rorl
jmp
mov
cli
out
sub
std
and
cld
call
push
push
add
mov
cli
lock
jnp
lea
pop
and
and
xchg
push
or
dec
aaa
mov
sub
sti
sbb
cmp
out
in
add
lock
pushf
jp
imul
mov
int
test
clc
sub
mov
jp
lahf
cmp
repz
xchg
inc
es
pop
lods
outsl
mov
repz
ja
dec
and
stos
mov
bound
add
xor
sbb
stc
inc
sarl
or
enter
fs
jp
ljmp
iret
stos
out
dec
or
mov
imul
faddp
pop
cmp
inc
and
dec
jl
insl
sbb
lret
dec
xor
mov
dec
pushf
hlt
call
dec
xchg
adc
or
cmp
pop
fdivrp
pop
daa
in
daa
fs
mov
xchg
aas
adc
cmc
xor
xor
arpl
mov
push
and
cltd
mov
jp
cmpsb
mov
xchg
iret
jb
xor
sbb
movsl
nop
pop
xchg
les
jle
mov
incb
clc
and
jge
adc
mov
jmp
dec
lret
shll
inc
mov
cmpsb
xchg
xchg
and
notb
mov
push
sub
fsubrs
les
cld
dec
pop
leave
test
rclb
mov
movsb
lock
and
push
push
cmp
push
mov
stos
dec
xor
lods
icebp
push
inc
int3
xchg
shll
xor
jle
jno
fidivs
sbb
fwait
push
punpckhdq
sub
das
cs
cmpsl
scas
shl
imul
iret
inc
jae
mov
sbb
popf
and
adc
cmp
scas
and
ja
and
jne
in
cli
test
out
dec
iret
sub
add
mov
test
lea
jnp
push
dec
movsb
or
inc
push
cmp
inc
pop
mov
mov
cmpsl
adc
lahf
jp
xchg
or
loope
sbb
push
push
addb
mov
xor
adc
lods
and
inc
mov
inc
inc
xor
roll
and
aas
sar
aaa
inc
fadds
xchg
mov
push
adc
and
or
in
rcrb
push
adc
mov
pusha
cmp
cltd
enter
call
stc
fyl2xp1
std
and
xchg
pushf
cs
loop
xor
xlat
pop
inc
pop
daa
fsubrl
daa
xor
popa
neg
lods
rorb
jmp
ret
rcl
pop
loop
into
and
jnp
mov
add
mov
mov
sub
js
cmp
shl
xchg
mov
scas
pop
mov
scas
repnz
flds
pop
fidivl
mov
popf
push
movsl
cmp
in
bound
or
sbb
popa
xchg
popf
push
xor
or
mov
in
inc
mov
rorb
call
aaa
jne
push
and
int3
cmp
pop
stos
pusha
fiadds
adc
test
pop
popl
push
loopne
std
xor
add
xchg
and
rorl
mov
loop
mov
leave
addr16
dec
push
inc
movsl
gs
aaa
fists
cmp
cmc
lods
je
test
rol
fnstsw
stos
lcall
push
in
fs
cmc
inc
ljmp
gs
cmp
bound
mov
lock
mov
mov
inc
rorl
shll
xor
or
repz
or
cli
push
bnd
mov
mov
mov
std
or
xor
cmp
mov
in
lret
subl
movsl
outsl
int3
inc
icebp
mov
inc
sbb
mov
add
cwtl
aaa
xor
scas
cs
jbe
pop
lcall
jge
mulb
lahf
shlb
cmp
xchg
adcb
and
lret
xchg
sbb
xchg
pop
cld
int
pop
push
add
test
lret
out
xor
in
repz
sbb
in
insl
popf
jns
sbb
pop
inc
ss
adc
inc
icebp
push
fidivrl
popf
and
mov
insl
jle
fbld
dec
popa
adc
cmp
in
lcall
sbb
mov
pop
mov
ds
sub
pop
mov
push
lock
lods
cmp
loop,pt
mov
and
loopne
sub
dec
xchg
ret
push
sbb
xchg
jl
aam
jne
and
xchg
shll
fistpll
insb
fwait
sbb
daa
inc
pop
mov
andl
add
cmp
push
fstpt
mov
dec
xchg
les
in
enter
imul
gs
inc
in
sbb
mov
sbb
lea
dec
cmpsl
sbb
test
pop
push
xor
outsb
negb
mov
mov
add
andb
dec
imul
cwtl
pushf
lods
mov
lret
xor
and
aaa
mov
mov
or
cmp
fistpl
cmc
cltd
sbb
mov
inc
imul
mov
mov
xor
clc
push
lret
or
adc
outsb
xchg
add
rcrl
sub
pop
pusha
lahf
and
inc
jl
cmp
adc
subb
mov
xor
inc
outsl
xchg
jnp
mov
jg
scas
push
xchg
push
inc
nop
adc
repnz
xor
icebp
rolb
mov
pop
xlat
cltd
jp
sti
mov
mov
cmpsl
fsubrl
push
rcrl
cmp
lret
sub
xorb
adc
sbb
jo
inc
pop
xchg
rolb
fildll
in
mov
enter
adc
fadds
push
loopne
call
inc
push
gs
xor
xchg
cmp
fnsave
sbb
push
pop
test
mov
sub
mov
xchg
adc
and
dec
dec
push
jo
sti
xchg
pop
stos
push
scas
cmp
es
movsl
mov
adc
pusha
dec
cmp
xchg
in
dec
in
lret
les
xchg
repz
mov
pop
loope
jecxz
les
mov
clc
fmull
icebp
mov
adc
rcr
jb
push
mov
subl
scas
xchg
mov
mov
and
in
sahf
or
addb
aas
jg
sbb
cmc
into
push
add
push
movsl
rep
xlat
popf
cld
test
not
jmp
out
xchg
stc
jg
lods
shrb
les
lret
loop
popf
adc
cmp
div
xor
or
jl
nop
jns
fmuls
mov
and
add
xor
mov
fnstsw
fdivrl
dec
insb
push
cmp
pop
add
lret
inc
dec
fwait
insb
push
inc
push
push
and
pop
jg
call
lcall
inc
popf
push
call
imul
jl
xchg
imul
es
xor
mov
mov
sbbl
add
gs
in
or
loope
bound
jp
negb
popf
push
or
iret
xchg
push
xchg
mov
in
fs
rcrl
jg
in
iret
dec
mov
mov
iret
lret
ds
dec
aad
push
hlt
adc
lea
jp
loope
fdivs
outsb
jmp
cli
popf
fistl
dec
popa
scas
sub
daa
test
sar
sahf
sbb
addr16
adc
loopne
in
btc
adc
ss
jb
sbb
mov
or
sbb
lods
add
mov
das
dec
int3
dec
and
les
les
mov
dec
mov
rclb
les
stc
mov
sti
jae
cmpsb
daa
aaa
ja
jl
jae
icebp
lock
sarb
icebp
les
jmp
and
lea
lcall
and
mov
ss
pusha
data16
pushf
fldenv
lcall
hlt
cltd
rorb
push
mov
es
jl
outsl
mull
xchg
sbb
and
add
push
jl
std
xor
pushf
pusha
xchg
and
and
jae
sbb
movsb
adc
cmc
test
in
push
bound
add
mov
sub
adc
roll
fdiv
std
dec
out
push
sub
cmp
ret
test
nop
mov
call
into
mov
adc
mov
repz
push
jo
sub
cli
cli
push
mov
cmpsb
mov
sub
xchg
sbb
mov
jbe
inc
mov
sub
cmp
push
in
cld
outsb
adc
aaa
loop
mov
pop
or
inc
lret
ret
les
out
stos
sub
jo
xor
push
add
and
test
test
cmp
mov
dec
cmp
jge
mov
mov
popf
sbb
sub
jle
xchg
aad
fldl
mov
xor
mov
in
inc
movsb
inc
jle
loop
cmc
or
das
inc
inc
adc
movsb
cmpsl
rcl
dec
xchg
xchg
sub
jae
repz
cwtl
in
pop
push
in
ljmp
sbb
test
inc
rcrb
mov
fists
mov
outsb
cmp
lds
imul
xchg
add
cmp
loope
push
jl
data16
sub
xor
xor
loop
jns
int3
incl
sub
mov
jecxz
nop
ss
enter
xor
sub
pop
xor
mov
sbb
imul
arpl
gs
ret
xor
sub
mov
scas
repnz
sti
lds
mov
outsl
xchg
mov
iret
adc
mov
test
xchg
mov
jbe
sbb
data16
jo
xor
jnp
popf
jb
insb
jo
pop
repz
mov
add
inc
bound
xchg
xor
lcall
adc
jecxz
shlb
sarb
mov
cmp
dec
lods
loopne
jno
adcb
mov
jle
jb
stos
dec
lods
xor
push
cmp
mov
and
sbb
lret
push
push
add
cmp
push
test
mov
sbb
inc
push
cmp
dec
cmp
or
js
pusha
adc
rorl
jo
jmp
shr
sarl
mov
push
ja
push
inc
push
jo
ss
dec
push
push
fisubs
fwait
jl
ljmp
sbb
sbb
out
xor
in
testl
and
cmc
cs
jg
mov
push
leave
mov
adc
push
cmpsl
lods
xchg
xchg
pop
pop
ja
outsb
mov
addl
fistpl
int
adc
in
test
jle
inc
xchg
inc
sub
add
in
pushf
fst
pop
push
imul
popf
jo
testl
out
or
push
adc
leave
mov
bound
addr16
sbb
mov
inc
and
sti
in
aaa
scas
dec
xchg
out
arpl
scas
pop
test
iret
xor
pand
push
jne
adc
pop
pop
and
sbb
stos
adc
outsl
inc
and
lret
cmp
loope
lret
mov
add
rcll
test
dec
jnp
lahf
xor
xor
mov
sub
enter
les
or
xor
arpl
adc
push
or
inc
or
cmp
ljmp
mov
dec
bound
popf
sbb
fnstsw
scas
xchg
and
or
insl
jae
repnz
movsl
sbb
je
add
add
cmp
imul
adc
outsb
int
pop
pop
mov
jne
fmull
push
incl
xor
mov
in
scas
test
fxch
movsl
or
mov
push
add
roll
pushf
aam
fimuls
aam
xchg
sbb
enter
imul
push
out
xlat
iret
std
out
rclb
sub
jge
ds
sbb
xor
mov
in
sahf
ret
adcl
out
dec
and
shlb
jle
hlt
push
pop
mov
push
fldcw
jnp
xchg
adc
daa
jg,pn
mov
ret
int
mov
dec
xor
sbb
insb
clc
int3
mov
jb
and
mov
fildl
pop
aaa
mov
xchg
inc
mov
and
fdivr
icebp
in
dec
jecxz
add
bndldx
push
scas
push
ja
ror
jmp
lahf
add
sub
stc
pop
and
ljmp
mov
mov
ficoms
ja
int
out
mov
pop
dec
loopne
popa
xor
in
pop
jae
mov
into
sarb
add
sub
xchg
push
dec
and
inc
mov
ss
sarb
sub
adc
clc
loopne
mov
dec
vrsqrt28sd
loop
mov
movsl
ja
push
cmp
subb
xchg
mov
test
clc
jno
add
aaa
cmp
fstps
das
ljmp
scas
push
loope
jg
xchg
es
mov
adc
dec
imull
inc
lds
insb
add
pop
adc
fiadds
pop
xor
shl
and
mov
xor
sub
mov
push
cmp
pop
scas
popa
push
shlb
jbe
mov
add
adc
andl
cmpsb
sub
xchg
or
push
stos
push
or
inc
ret
and
jl
dec
lahf
lods
jmp
ret
dec
fldl
and
out
out
push
fnclex
sub
cmp
xchg
inc
enter
add
jmp
addb
shrb
lahf
loopne
cltd
stc
xor
xlat
push
push
jo
fadds
xor
mov
stos
push
fstpl
faddl
inc
test
pusha
xor
adc
enter
in
clc
lods
rolb
lea
sub
push
out
and
sarb
wrmsr
xchg
mov
ljmp
xchg
push
pop
loopne
pop
sti
xor
or
mov
cs
mov
push
repnz
arpl
adc
rcrb
lds
cmp
fucom
sbb
sbb
lea
imul
out
jg
es
subb
testb
lea
dec
push
jnp
es
push
push
mov
das
push
xor
in
or
repz
pop
sub
sbb
pop
adc
xchg
push
sbb
pop
enter
sbb
repnz
cltd
lret
icebp
sahf
jecxz
sub
fnstcw
lock
outsb
lea
push
cld
and
xchg
daa
fcoml
ljmp
xchg
dec
mov
xchg
jg
imul
testb
dec
mov
sahf
xor
cmp
jnp
xchg
push
call
mov
and
jg
xor
out
sub
ret
mov
cltd
dec
ret
sahf
add
test
jb
shlb
sub
scas
mov
dec
dec
cmp
mov
pop
xchg
fimull
mov
mov
in
sti
push
mov
mov
inc
loop
jae
imul
mov
out
lock
ret
rorl
jecxz
mov
mov
loope
fnstenv
ljmp
push
or
sbb
sbbl
ja
inc
xor
lods
fdivl
cld
inc
push
lcall
ljmp
jmp
fwait
cmp
ss
jb
mov
pop
hlt
and
cltd
mov
fdivl
xchg
push
jmp
push
pop
lret
adcl
rcrb
rclb
out
pop
jecxz
loop
outsb
sub
std
push
es
popf
test
mov
xchg
negb
loope
and
in
jge
xor
cmp
dec
jnp
dec
push
loop
pushf
int
loop
test
jo
movsl
scas
inc
loope
lret
add
mov
jg
add
jno
test
xchg
xchg
push
fldenv
adc
xlat
push
xor
push
lods
leave
in
cwtl
push
in
jl
lret
mov
dec
fisubl
ret
and
ljmp
arpl
cld
mov
fcoml
cmp
mov
imull
sub
cmp
imul
clc
adc
lock
mov
mov
push
or
insl
bound
aas
push
stc
sub
push
mov
dec
subl
cltd
jb
sahf
mov
scas
scas
inc
mov
mov
sbb
jo
ror
sahf
cmp
mov
mov
scas
rcr
sbb
ret
aas
divb
ret
ss
xor
in
arpl
xor
pop
pop
in
mov
loopne
mov
sbb
out
cmp
loop
pop
pop
cmp
lock
int3
xor
cmp
cld
out
sbb
push
fstps
mov
imul
icebp
mov
lods
les
les
sub
imul
sbb
cmp
outsl
in
inc
push
cmp
push
aam
hlt
push
shl
lods
xchg
fstl
adc
stos
mov
xchg
xor
mov
push
push
pop
ror
rcl
mov
sbb
sbb
fsubrs
jmp
cmp
ds
int
cmpb
enter
dec
jb
pushf
daa
jnp
or
sahf
ficoms
push
jb
dec
add
fwait
sbb
icebp
incl
xchg
push
into
sub
ja
fsubrl
dec
imul
pop
in
aas
clc
jns
je
sub
xchg
les
fldlg2
xchg
jne
push
mov
cmp
in
imul
push
mov
inc
xlat
push
notl
outsl
push
idivl
addr16
dec
and
mov
jp
lahf
mov
lods
movsb
xlat
pop
fistpl
jo
ret
xchg
pop
or
mov
gs
cmp
stc
loop
mov
pop
cmpsl
subl
iret
mov
dec
cmp
inc
sahf
movsb
lret
dec
pushf
in
dec
and
in
stos
dec
or
adc
push
inc
xor
push
mov
mov
or
popa
xlat
test
scas
neg
xor
jmp
jecxz
xchg
sti
icebp
push
dec
fwait
ret
dec
cmc
sub
sub
lcall
mov
jg
scas
sub
flds
gs
lods
sbbl
jp
and
movsl
out
fcompl
sbb
mov
xchg
xchg
inc
filds
jecxz
mov
aas
xchg
push
pop
push
xchg
repnz
push
mov
ret
mov
aaa
mov
mov
ret
mov
mov
jb
out
fisttps
adcl
sbb
rorl
aad
imul
pop
icebp
ret
push
jno
and
adc
adcb
enter
dec
pusha
vmovd
push
movsb
push
subb
ret
pop
nop
and
int
out
ret
lret
inc
push
lods
xor
idivl
push
cmp
or
pop
add
in
push
nop
aas
mov
mov
mov
mov
test
shll
push
or
jl
icebp
test
pop
std
and
outsb
ljmp
divl
insb
negb
mov
push
stc
pop
fcom
and
lods
pop
or
out
add
aad
inc
or
mov
iret
rorb
push
sbb
push
repz
fucomip
call
fldt
dec
dec
loopne
dec
jecxz
addl
adc
sbb
or
inc
in
addr16
mov
popaw
adc
fmul
jmp
leave
movsl
inc
adc
inc
inc
sar
mov
or
push
fcmovnbe
jle
pop
test
and
sub
cmp
je
push
mov
pop
scas
in
bound
clc
push
in
mov
shll
jecxz
adc
testl
je
mov
pop
push
jge
sub
clc
jb
lods
jbe
add
fldl
jns
aad
int
fnstcw
inc
cmc
cs
lahf
xor
cs
lock
jl
sarl
into
out
adc
dec
fcomps
mov
mov
incb
lret
into
push
push
push
push
dec
add
js
push
inc
cld
cmpsl
bsf
or
mov
test
addr16
insb
mov
call
or
push
fwait
mov
sbb
jo
jne
xchg
movsb
xchg
push
mov
lds
in
adc
cmp
ja
sbb
mov
hlt
mov
xor
mov
sub
and
movsl
mov
inc
fstps
sbb
mov
and
mov
insl
sub
jecxz
fildl
fs
aad
adc
xor
stos
jge
lea
push
xchg
xor
das
out
outsb
push
mov
ficoms
dec
add
rorb
sub
ss
add
lods
mov
push
push
dec
and
dec
push
or
int3
movsb
cmc
dec
xchg
push
fbld
dec
loopne
mov
sbb
or
cmp
repz
inc
mov
or
pushf
cwtl
dec
dec
xlat
fiaddl
ja
and
mov
sub
roll
push
adc
push
push
fisttpl
push
test
sub
into
sti
and
test
jecxz
push
fdivl
mov
jg
pop
or
pop
enter
xchg
lret
dec
movsb
lds
hlt
mov
iret
iret
sub
daa
push
ja
cltd
enter
repz
outsl
mov
outsl
and
stos
insl
lahf
or
outsl
nop
dec
fs
fstp
sbb
gs
scas
mov
jmp
mov
push
popa
inc
in
jge
or
scas
iret
push
pushf
fsubrl
aad
int
in
aas
rcll
sahf
xchg
xchg
popf
mov
xchg
aad
je
inc
mov
scas
das
arpl
mov
xor
xchg
inc
or
cmpsb
imul
cmpsl
cltd
stc
cmp
adc
clc
out
lock
lock
test
pop
or
testb
in
cltd
xchg
iret
dec
aaa
cli
jge
dec
lret
pop
jmp
jp
shrl
and
sub
and
cltd
and
dec
add
push
add
clc
or
ret
pop
jecxz
fbstp
in
pop
jo
leave
lcall
cwtl
std
mov
jle
pop
or
orl
popa
pop
mov
push
mov
push
or
xchg
movb
scas
adc
push
or
insb
pop
daa
lahf
into
and
iret
mov
push
push
push
insb
mov
jnp
roll
js
mov
sub
pop
adc
adc
fldl2t
and
xor
xchg
mov
push
pop
insl
pop
inc
push
iret
xorb
fiadds
mov
out
xchg
popf
popa
popf
or
and
xchg
jns
add
xlat
inc
lods
shlb
push
xchg
andl
fisubrs
lcall
push
push
sbb
sahf
jbe
mov
sbb
push
push
hlt
mov
push
loope
ljmp
sub
add
movsl
inc
ds
add
push
or
cli
fmul
stc
inc
xor
xchg
arpl
rcll
sbb
sahf
mov
test
dec
xor
push
inc
mov
or
jne
sbb
cmp
pop
cmp
and
pop
jp
test
push
arpl
push
inc
ret
mov
rcrb
testb
push
popa
stos
jns
pusha
push
sbb
xor
or
and
cmp
test
add
enter
dec
stos
imul
fldcw
jno
aam
outsl
jecxz
and
push
mov
xchg
xchg
jge
jle
xchg
popf
out
inc
test
rcl
loop
cli
sub
mov
call
jo
push
jno
cld
rcrb
adc
xchg
mov
popa
out
cli
int
inc
lcall
loope
or
mov
out
inc
mov
push
jne
mov
ret
sarb
jns
enter
mov
xchg
or
loopne
data16
cmpsb
leave
stos
or
mov
stos
stos
jmp
aaa
jg
adc
or
add
add
test
jo
je
lods
cmp
call
notb
rol
push
adc
pushf
lret
ljmp
pushf
fistl
mov
lahf
and
mov
jl
jnp
fldt
mov
or
pop
pop
ljmp
jge
mov
nop
sub
sub
stos
or
mov
sbb
mov
in
jge
adc
aam
xchg
call
jb
lret
jl
fidivrs
xor
xor
push
testl
jge
fstpl
sbb
aad
aam
sbbl
inc
sub
int
inc
sub
jbe
sbb
repz
in
add
call
and
xchg
xchg
xchg
mov
mov
lock
decl
loopne
popf
popa
adc
out
repz
mov
hlt
insb
imul
mov
mov
cwtl
shl
mul
and
sar
dec
dec
jb
push
xor
shlb
pop
xorb
inc
mov
iret
std
outsb
test
loopne
push
sbb
pushf
dec
sbb
jae
inc
mov
cltd
jb
movsl
xchg
mov
pop
jb
cmp
inc
in
aaa
mov
js
out
ret
sbb
mov
stc
cltd
out
xchg
int3
sub
mov
cmp
rolb
out
or
sub
popa
loop
scas
mov
subl
lods
cmc
inc
ret
pushf
push
jne
xor
je
push
mov
or
cwtl
mov
dec
in
dec
xor
in
jae
cs
popf
mov
subl
xor
test
cld
into
lret
cltd
js
mov
and
sarb
fwait
cmp
pop
fsubrl
jbe
scas
lock
sub
popf
mov
inc
icebp
test
push
shll
cwtl
adc
xchg
dec
cmpsl
arpl
test
scas
cwtl
dec
sbb
insb
push
sbb
sub
test
or
aam
and
lret
inc
fisttpl
aaa
cmp
and
jmp
arpl
in
push
popa
int
movsb
stc
sub
cmc
xchg
test
xor
jo
cmp
imulb
lret
inc
push
mov
add
push
iret
loopne
mov
adc
idivb
cmpsl
or
sub
push
xchg
cmp
dec
movsb
push
or
inc
push
xchg
cs
jmp
push
add
mov
add
aas
sub
test
add
mov
adc
pop
xor
ret
jbe
into
sbb
and
fistpl
ret
testl
mov
mov
mov
cwtl
andl
cmp
mov
dec
clc
pop
xlat
aas
mov
xlat
cwtl
js
aam
ret
pop
jmp
cmp
push
andb
rcrb
mov
sbb
out
test
jecxz
das
in
fsubl
jo
adc
mov
clc
inc
int
push
sbb
xor
dec
out
dec
or
add
and
mov
rolb
repnz
jmp
or
outsb
ds
shlb
repz
ret
mov
mov
or
mov
and
in
clc
stos
and
cld
cmp
rolb
push
loopne
xchg
pop
fmull
rol
mov
mov
pop
jmp
dec
push
sbb
sub
jae
mov
pop
dec
inc
mov
xchg
and
pop
lcall
cmp
js
sti
mov
and
in
scas
insb
lret
sbb
fisubrs
cmp
adc
jmp
mov
xor
adc
sub
push
repnz
fsincos
int
push
xchg
fldl
int
movsl
jg
push
dec
push
popf
andb
jp,pt
push
mov
lods
inc
xchg
sbb
add
test
push
push
insb
sbb
adc
and
mov
lods
into
jl
outsb
push
push
jo
mov
pop
negl
mov
call
add
pop
xor
jp
xchg
mov
ret
pushl
bswap
mov
add
mov
scas
std
popa
push
mov
cli
cmp
out
and
imul
hlt
or
subb
aas
in
push
das
xlat
clc
cltd
jns
jo
xor
pop
scas
pop
sbb
incl
cmpsl
mov
mov
push
sbb
dec
add
or
adc
out
inc
outsb
ds
pop
cwtl
or
aad
sbb
mov
mov
and
data16
mov
jae
cmp
insl
mov
or
fdivr
adc
inc
out
mov
in
cmp
xlat
idivl
jmp
popa
mov
daa
fisubrl
xor
icebp
nop
fcoms
sub
addr16
repnz
and
fimuls
jge
jnp
mov
nop
icebp
adc
test
lock
pop
mov
mov
repnz
adc
jp
xchg
cs
dec
push
inc
dec
cmpsl
xchg
add
frstor
sti
inc
mov
push
dec
push
testb
das
into
mov
repz
imul
sahf
iret
mov
sbb
das
call
or
bnd
cmp
mov
fidivrl
adc
mov
xchg
dec
sti
insb
mov
outsb
mov
mov
sti
je
xchg
push
lds
imul
outsl
testl
ret
jge
loopne
leave
fnsave
push
add
and
sbb
fsub
mov
jmp
jns
adc
call
xchg
pop
out
mov
jns
push
test
je
das
aaa
lcall
mov
jb
and
daa
xchg
push
cmpsb
xchg
cltd
adc
shl
out
xchg
int
faddl
lret
aam
stc
jo
sub
mov
inc
pop
xchg
insb
outsb
and
jno
inc
mov
icebp
mov
fnstenv
repnz
insb
mov
stos
scas
imul
divl
mov
jmp
push
adc
sbb
out
fstpt
jge
xlat
xchg
dec
xchg
popa
or
jb
or
jns
mov
lea
and
mov
xorl
cmpsl
aaa
xor
int
je
fsubs
mov
test
sub
shll
mov
sub
pop
daa
pop
mov
test
sahf
push
bound
lods
mov
ficoml
mov
mov
pcmpeqb
mov
mov
cmp
jae
mov
xchg
rcrb
popa
push
cmpsb
mov
shll
fstps
imulb
addr16
test
aad
pop
scas
ret
sbbl
jne
sbb
push
mov
mov
add
jmp
popf
lret
lahf
testl
subb
cltd
dec
out
cmp
xchg
and
mov
xchg
xchg
mov
mov
adc
ds
repz
fwait
das
lcall
jae
in
adc
dec
pop
xchg
repz
jmp
and
in
aas
xchg
dec
mov
push
mov
add
mov
addr16
hlt
push
jmp
inc
lret
jp
sbb
enter
test
or
cmpl
cmp
clc
bound
mov
out
fisubl
mov
inc
adc
ja
adc
cmp
addb
push
xchg
sub
cmp
out
js
xchg
jnp
mov
lret
mov
scas
lds
mov
icebp
mov
popf
xor
divb
push
popa
cmp
sbb
lcall
insb
insb
dec
out
aaa
in
xchg
pop
add
ret
xchg
test
fucomp
mov
je
subb
inc
movsl
scas
xchg
xlat
and
inc
out
dec
ss
lods
adc
ret
popa
cmpsl
sti
sub
lahf
ds
pop
mov
das
pop
adc
or
lret
xchg
or
fwait
es
test
out
adc
cltd
or
sub
pop
pop
jecxz
in
add
sub
ret
or
repnz
ss
inc
dec
into
or
jo
test
push
adc
inc
cmp
test
data16
and
imul
cwtl
dec
repz
cmp
je
movsb
pextrw
mov
aad
out
push
cmpsl
mov
xchg
outsb
pusha
pop
pusha
mov
pop
sbb
cmp
test
scas
inc
lock
test
jb
adc
push
pop
sub
out
fcoml
mov
adc
lahf
out
pop
sbb
mov
test
add
in
jns
lock
xorb
in
setae
int3
loop
aas
adc
mov
in
push
sub
aaa
in
adcb
xor
pusha
enter
mov
push
cwtl
pop
test
mov
adc
imul
int
mov
mov
add
out
jnp
dec
dec
pop
xorb
mov
xlat
test
mov
mov
mov
movsb
lods
stos
push
adc
or
dec
mov
outsb
xor
scas
mov
cmp
cmp
push
xor
sub
orb
push
pop
jb
outsl
xor
aaa
ss
clc
cld
push
lods
jl
cmp
cmp
xchg
test
pop
mov
fnop
repnz
add
dec
jg
pop
add
cmp
repnz
adc
les
int3
outsb
std
mov
mov
xchg
xchg
imul
cmp
jo
cmp
xchg
sbb
scas
pop
fistpll
iret
cli
add
xor
inc
xchg
fildll
ja
shll
fwait
bound
icebp
enter
cmpsl
or
out
stc
jo
add
mov
enter
shr
outsb
push
cmpsl
fdivs
add
dec
test
popf
insb
pop
sbb
cmp
fadds
add
xchg
mov
mov
mov
inc
push
loop
aas
ljmp
roll
jno
sbb
adc
mov
cmpsb
mulb
arpl
rcrl
test
js
sub
jmp
inc
or
mov
jns
sbb
aaa
daa
sbb
sub
out
orl
or
aaa
inc
ljmp
stc
das
push
dec
dec
mov
fdivl
stos
xor
xchg
sub
sbb
mov
jle
scas
popa
bound
test
pop
mov
stos
stos
mov
xlat
inc
addr16
mov
mov
in
sarb
push
fwait
lds
iret
mov
lods
or
sbb
mov
shll
dec
outsb
xchg
scas
in
ljmp
mov
imul
inc
add
jne
scas
push
jno
xor
movsl
lahf
cltd
popa
mov
pop
and
repnz
jb
xchg
dec
sbb
insl
insl
inc
cmp
aam
addr16
push
or
mov
scas
aaa
jecxz
aad
dec
xchg
test
push
mov
xchg
dec
bnd
iret
fadds
bound
lods
popf
mov
je
sbb
jae
jno
shlb
sub
mov
adc
cmc
ss
loope
jl
sub
and
inc
rcrb
mov
pushf
push
cmc
add
sahf
push
jae
movsl
daa
daa
xchg
lock
pop
xchg
or
nop
mov
mov
xor
cmp
sbb
loope
sub
mov
aaa
movsb
lret
mov
loop
jmp
dec
xor
cmp
into
dec
call
sbb
jcxz
pop
mov
jmp
pop
push
xor
insb
movsl
push
cmpsl
xchg
outsl
popa
fildll
add
jbe
cmp
push
fucomp
adc
lods
lret
cmpsb
push
dec
or
xlat
sub
xchg
out
outsl
ja
mov
jo
repnz
imul
or
cmc
xchg
icebp
fwait
out
loop
xor
xchg
loop
int3
dec
dec
adc
mov
or
sbb
negl
je
add
xor
mov
lahf
pop
ret
loop
orl
pop
cmp
movsb
mov
pop
sub
or
jg
hlt
fcomps
sub
jno
ret
jmp
jae
xor
and
fiaddl
xchg
roll
dec
dec
imul
mov
sub
in
outsl
js
insb
cmpl
cmp
rolb
mov
in
push
sbb
mov
lods
fcomi
frstor
adc
sahf
fldt
out
ss
dec
inc
xchg
into
mov
or
cmp
scas
insb
jmp
pop
movsb
mov
xchg
movsl
push
adc
mov
fneni(8087
add
pop
and
push
jno
and
add
into
pop
and
sbb
loopne
mov
pop
aaa
stc
inc
jg
adc
cmp
and
bound
loope
mov
pushf
cli
adc
xchg
jno
fadds
outsb
pop
xchg
out
xchg
popa
jne
test
cmp
push
adc
out
jae
int3
or
cmp
sub
jmp
or
fldt
mov
sub
shrb
mov
out
stc
enter
inc
pop
iret
push
xor
dec
data16
or
cld
ljmp
fiadds
jp
popa
mov
cmc
cmc
leave
mov
dec
add
adc
xchg
dec
sahf
movsb
loopne
push
or
or
sahf
lods
cmp
xorl
mov
sub
adc
cwtl
push
push
jle
mov
add
out
push
scas
inc
or
jle
adc
and
sbb
xorl
cmp
std
shll
ss
je
mov
out
and
push
xchg
mov
inc
push
mov
std
aaa
pop
shr
sub
loopne
inc
gs
sti
add
cmp
pop
push
bswap
pop
mov
cmpsb
cmp
out
or
lcall
cmpsl
push
insl
mov
cmc
pop
jo
mov
add
xor
dec
push
mov
and
loop
ficompl
mov
in
inc
push
or
xchg
or
sahf
adc
xchg
mov
mov
cld
or
ja
repnz
dec
mov
enter
in
push
dec
popa
jp
ljmp
popa
or
sbb
and
xor
mov
and
pop
jg
jo
mov
xchg
cmp
out
pop
arpl
mov
enter
mov
xor
xor
cmp
rcll
push
stc
or
addl
ds
and
imul
rcll
and
ss
fldt
and
out
popf
pusha
mov
mov
test
and
cmp
inc
popa
dec
dec
cli
push
sarb
lret
rorl
push
mov
pop
pop
cmp
sbb
inc
pop
in
movsb
pop
cli
mov
add
ds
jbe
rolb
dec
inc
lds
add
xchg
test
mov
pop
mov
adc
and
insl
pushf
and
insb
and
and
mov
bound
mov
ret
sub
push
cmpsb
addb
orb
jmp
xor
frstor
add
dec
dec
pop
fistpll
negb
ret
pop
cmpsb
or
jns
fisubrl
out
sub
push
adc
cld
int3
rolb
or
movsl
sub
xor
bound
add
test
cwtl
das
mul
xchg
add
add
mov
roll
nop
lods
lds
pop
cltd
sti
leave
push
xchg
mov
push
int
and
jae
adc
clc
xor
fs
pushf
mov
adc
aas
popa
ret
xchg
cli
insl
aad
test
imul
add
je
pop
adc
xlat
inc
dec
leave
sub
js
enter
lods
popf
xchg
cmp
cmp
xor
xor
push
pusha
jns
fnsave
sub
loope
fisubs
mov
decb
cld
mov
xor
iret
cmp
adc
repz
shl
iret
inc
jbe
push
mov
mov
cwtl
outsl
aaa
jle
xchg
pop
dec
sbb
ja
adc
lods
adc
sub
mov
in
push
test
pop
pop
or
add
fwait
mov
mov
dec
mov
ret
push
xchg
sbbl
stos
repnz
lahf
dec
pop
stos
incb
and
ret
jmp
outsb
cmp
repnz
ret
and
in
and
push
cmc
aad
or
jmp
inc
iret
push
aam
pusha
xchg
jbe
int3
xchg
xchg
pop
and
mov
aad
pop
dec
jg
in
xchg
push
arpl
insl
fistps
xorb
push
dec
aad
js
js
and
sbbl
cltd
dec
test
out
test
jnp
mov
lods
or
jne
lcall
push
je
or
cmp
aas
cmp
movsl
mov
pop
popa
jae
cltd
aam
daa
xor
aaa
push
sbb
nop
ja
or
adc
jb
in
adc
xchg
js
xor
maskmovq
notl
cmp
push
pop
je
push
jecxz
mov
test
loop
sbb
mov
dec
cmp
mov
insl
sbb
bound
in
mov
in
addl
push
imul
add
mov
push
stc
or
idivb
inc
inc
jbe
push
mov
jnp
bound
cs
mov
fistpl
pop
mov
lcall
xor
rorb
fdivp
fisttps
mov
dec
stos
popf
fidivs
cmpl
nop
jecxz
pop
jo
cli
pop
test
and
add
pop
dec
ret
mov
das
movsb
cmpsl
addb
mov
mov
subl
fwait
fwait
mov
mov
xchg
cmp
fadds
jl
test
adc
pop
add
sub
cmpsl
adc
fimuls
and
pop
shl
int3
dec
imull
sbb
stc
jmp
aad
shr
jmp
insl
lds
std
cli
xchg
imul
shlb
shr
repz
in
mov
mov
aaa
xlat
adc
jecxz
push
cs
or
jb
aaa
or
rcll
pop
push
ret
jmp
imul
das
out
mov
sarl
xor
cmpsb
push
daa
idivl
ffree
clc
aaa
inc
and
out
mov
lcall
dec
push
mov
scas
mov
rorl
inc
xor
iret
lcall
add
aaa
push
add
xchg
popa
testl
sti
mov
clc
sbb
cld
int
cmc
movsb
push
or
icebp
mov
pushf
push
mov
cltd
inc
call
adc
mov
outsb
mov
std
or
je
jns
sbb
and
sti
mov
mov
int3
push
mov
inc
xchg
mov
aas
jg
ret
fadds
addb
mov
scas
ret
inc
xchg
hlt
pop
xor
ret
out
xchg
dec
push
std
mov
scas
dec
sbb
mov
mov
mov
adc
ljmp
ljmp
mov
in
xor
adc
shr
loop
sarb
xchg
cvtpi2ps
jnp
dec
mov
cmp
or
pusha
out
mov
adc
lods
js
scas
imul
es
ror
out
adc
xchg
dec
cltd
inc
mov
xchg
inc
aam
or
sub
xor
and
inc
fucom
dec
jo
pop
loope
push
mov
dec
fnstsw
and
adc
cmpsb
out
iret
pop
fstps
stos
adc
cmp
fistpl
adc
pop
lock
mov
mull
daa
jo
daa
enter
das
inc
out
in
stos
mov
fidivrs
bound
cmp
ds
adc
mov
lret
sti
lcall
in
jno
mov
out
and
jle
mov
hlt
es
jne
jle
adc
push
fisubrs
add
mov
shrl
adc
je
leave
pop
dec
fsts
push
add
add
inc
jb
sbb
or
push
jns
sbb
inc
cmpsl
jbe
loopne
or
mov
or
fstl
ds
xchg
out
arpl
ds
mov
mov
dec
sub
mov
imul
fnstsw
sub
or
adc
cli
adc
out
and
dec
iret
pop
int3
gs
pop
ret
iret
jecxz
add
fwait
imul
xchg
ret
dec
cmp
addb
nop
mov
xchg
add
or
sub
push
fnstcw
icebp
test
mov
mulb
pushf
mov
add
mov
stos
orb
xorl
sub
das
sbb
loop
pop
shll
in
dec
ds
test
push
andl
jnp
dec
jge
mov
xchg
jl
iret
fsubrl
jle
int
or
sub
fcoms
roll
sbbb
sub
xor
or
fldenv
sti
and
dec
mov
jne
mov
cmp
mov
and
test
pop
adc
pminsw
lcall
inc
add
ja
dec
in
xchg
add
hlt
cs
and
sbb
pop
and
fcmovnu
in
mov
xchg
fld
or
js
xchg
test
jl
cmp
cmove
sub
dec
pop
add
fsts
cmp
cld
test
xor
sti
push
dec
push
cwtl
les
cmp
test
or
sti
in
fcmovbe
rorl
out
stos
repz
and
out
and
mov
rorb
js
dec
lret
hlt
cmp
dec
cmp
inc
mov
mov
out
inc
push
adc
out
enter
data16
lea
shll
lock
sub
ljmp
mov
addr16
les
mov
ljmp
jmp
jo
dec
pop
xchg
pop
cmp
adc
mov
push
pushf
pop
or
stos
into
add
shrb
sbb
mov
lahf
fdiv
push
fnsave
mov
notb
dec
dec
popf
jno
inc
int3
push
pushf
xchg
push
xor
in
nop
add
add
xchg
movsb
jno
mov
jb
and
shrl
cmpsl
cmpsl
xchg
sub
jmp
xchg
insb
inc
add
jae
and
and
mov
into
fidivl
cmp
ficoms
push
daa
mov
dec
test
xor
pop
cmpxchg
movsl
inc
dec
adc
gs
push
xchg
mov
call
fldt
test
call
aad
insl
scas
sbb
mov
sub
add
jbe
adcl
fdivp
jo
sbb
pop
inc
test
stos
arpl
jmp
rcrl
fdivl
push
mov
mov
mov
pop
pop
stos
dec
imul
jno
call
mov
push
mov
mov
push
movb
fldcw
push
das
shr
mov
pop
mov
sub
loope
mov
sub
test
add
lods
fs
adcl
dec
pop
sti
addr16
cmp
mov
loope
fdivs
push
in
cmp
sub
nop
scas
inc
cmc
adc
push
sbb
ja
iret
lock
sub
cmp
lahf
push
mov
xchg
fstpt
xor
dec
lods
dec
jbe
push
nop
push
mull
or
je
lahf
xchg
cmpsb
movsl
std
loope
lahf
pop
mov
xor
lcall
imull
xor
mov
push
and
js
enter
mov
hlt
outsl
stc
add
pop
cli
cmp
testb
fdivrl
push
jb
lret
jmp
mov
adc
pushf
lds
mov
xchg
pop
cwtl
out
and
sub
dec
out
dec
outsb
cmp
mov
add
dec
mov
and
sub
cmp
aam
push
mov
add
and
ljmp
sahf
pop
out
fisubl
and
call
add
xor
outsl
int3
mov
xor
push
lcall
sbb
mov
es
mov
pop
leave
fcoml
cmp
popa
sahf
jns
and
dec
into
cmp
ja
imul
xor
hlt
inc
jnp
mov
cmc
lret
iret
and
and
in
mov
int
jg
mov
pop
adcl
inc
icebp
test
ds
pop
insl
sbb
repnz
cld
cmp
and
jo
push
dec
mov
or
icebp
mov
inc
dec
imul
lods
out
test
xor
mov
stos
clc
fimuls
loope
das
xchg
lcall
bound
mov
js
addb
out
xchg
xchg
pop
cmpsl
pop
sub
nop
rclb
mov
push
add
xchg
arpl
pop
push
adc
repz
xchg
xchg
pop
dec
dec
mov
mov
pop
out
cli
jmp
adc
mov
loopne
or
std
ficoms
std
inc
ret
in
sbb
mov
movl
bound
loopne
movsb
pop
xlat
xchg
bound
out
shlb
xchg
xchg
int3
xchg
add
sbbl
lret
jnp
shll
es
loopne
lock
push
xchg
loopne
test
or
movswl
dec
stc
xchg
outsb
jb
insl
inc
rorb
pop
stos
pop
cmpsl
add
es
adc
jb
or
scas
aas
cmp
dec
and
sbb
lds
gs
mov
push
test
sub
ffreep
js
sub
mov
adc
xchg
add
dec
xchg
jle
push
mov
add
adc
insl
mov
int
leave
mov
scas
std
cmc
enter
shlb
movsb
sbb
insb
lods
lock
and
shr
das
lds
push
mov
mov
or
add
adc
jo
mov
xchg
add
out
pop
push
fcomip
adc
xchg
mov
ficompl
cmp
aad
adc
jnp
fisubs
fcoms
and
jge
shrl
or
or
or
dec
mov
xchg
adc
xchg
xchg
pop
add
xchg
popa
inc
dec
jp
push
insl
scas
xor
mov
push
scas
cmpsb
and
in
push
mov
ret
int3
jl
mov
jge
imul
pop
ret
mov
xchg
mov
xor
subl
adc
les
imul
das
adc
xor
icebp
adc
pop
add
je
imul
out
dec
push
int3
pop
in
jo
dec
sbb
aaa
rcrl
push
not
push
sbbb
dec
ljmp
mov
xchg
sbb
mov
push
push
nop
mov
xchg
push
fidivs
push
call
data16
add
sbb
mov
xchg
or
stos
push
lock
mov
iret
in
mov
xchg
jae
fsubrs
adc
mov
data16
mov
scas
mov
push
je
fstl
les
daa
pop
xchg
scas
push
mov
lcall
out
lods
jno
sbb
pushf
jp
jb
lods
lods
sub
mov
ds
and
xchg
vcvtsi2sdl
cmp
lret
inc
push
cmc
sub
fs
sub
jb
push
out
mov
xor
loopne
xchg
addb
hlt
cld
or
mov
pop
aas
inc
mov
je
adc
lahf
mov
mov
adc
push
cmp
mov
andb
inc
sbbb
sahf
fwait
sub
add
sti
decb
shlb
mov
ret
mull
adc
aam
inc
hlt
sub
and
cmp
cmpsl
or
xchg
cli
push
push
add
sub
cmp
jne
push
mov
test
cli
jl
into
push
add
pop
outsl
arpl
sbb
mov
push
lcall
xchg
xchg
dec
loop
and
lret
test
cmp
cli
jns
xor
lcall
fisttps
fildl
push
adc
nop
stos
cmpsb
paddw
cmp
mov
adc
sub
add
jb
and
dec
mov
cwtl
jp
insb
or
adc
js
jmp
outsl
pop
pop
leave
push
xchg
jle
sbb
lret
mov
repnz
pop
and
add
or
push
pop
cs
cmp
incl
mov
test
and
add
out
xchg
xchg
negl
dec
add
xor
or
inc
push
fstps
mov
popa
fisubl
dec
hlt
cmp
sbb
jl
sti
push
daa
sti
cmpl
fmuls
mov
stos
inc
xor
xor
rcll
sub
push
adc
and
in
idivl
fnsave
sahf
dec
mov
movsb
push
mov
push
out
and
jns
adc
sbb
xchg
adc
pop
aaa
xorl
cmc
shlb
mov
into
pop
push
jmp
add
jge
popa
add
and
push
aam
bound
xchg
stos
or
lock
inc
mov
or
xor
mov
dec
leave
ja
mov
movsb
testl
mov
imul
mov
mov
fsubrs
sbb
leave
nop
or
jo
cmp
jne
les
cmp
faddl
push
lret
xor
xor
sub
mov
hlt
and
xchg
aaa
inc
ljmp
mov
mov
mov
push
movsl
int
mov
es
xor
shrb
fmul
mov
pop
rorl
ret
or
lret
sti
cmp
ret
nop
jns
arpl
clc
sub
xchg
xchg
sbb
pop
insb
push
pop
lods
es
jp
dec
idiv
push
add
and
call
call
cmp
pushf
jecxz
std
adc
fiadds
inc
insl
xor
nop
sti
fsubrl
insl
cli
and
mov
jle
ss
fimuls
and
or
clc
outsb
out
iret
jmp
movb
pop
mov
pop
pop
lods
and
outsb
sbb
push
adc
mov
jle
mov
movsb
into
pop
cmp
insl
ljmp
test
sbb
pop
add
xchg
add
test
in
pop
stos
dec
sub
enter
sbb
cmp
cli
data16
dec
sbb
xor
ljmp
popf
mov
mov
enter
jo
mov
cmp
repnz
sub
cld
mov
cmp
into
jecxz
je
and
rcl
scas
sbb
mov
or
in
lea
loope
test
ret
pop
popf
pop
lock
je
cmp
popf
shlb
dec
mov
cmp
addr16
mov
and
xor
push
ss
lcall
shrd
lds
jl
adc
call
inc
jns
sarb
divl
adc
int3
mov
mov
or
test
sbb
push
jecxz
outsl
test
ret
jecxz
mov
pop
inc
xchg
fcomip
pop
jmp
mov
roll
xor
stc
cmp
dec
int3
ret
nop
out
lcall
xchg
lret
ljmp
inc
and
add
sub
or
scas
jge
xchg
outsb
add
ret
pop
xchg
js
add
mov
xor
je
pop
dec
negb
int3
test
inc
shlb
fildll
xchg
adc
inc
mov
add
outsl
sub
sub
fwait
mov
xchg
ret
adc
jns
popa
and
insl
mov
aad
push
or
sub
and
mov
xor
jne
sbb
or
es
pop
and
push
xchg
cmp
loopne
into
push
cltd
inc
ljmp
cmpsl
ficompl
fimull
push
daa
sarl
je
lea
fdivl
jecxz
lea
mov
and
xchg
adc
inc
xchg
dec
inc
mov
jg
fdivl
push
inc
stos
ljmp
rcrb
lods
mov
inc
and
pop
cld
adc
pop
or
nop
std
dec
in
inc
lcall
sub
jns
in
pop
fsubrl
push
mov
pusha
sahf
inc
out
xor
jecxz
sahf
jbe
outsb
cmp
test
dec
xchg
push
loopne
mov
add
das
in
xchg
pushf
movsl
mov
cmp
mov
scas
mov
xor
xchg
lahf
jl,pn
lods
add
in
ja
test
jnp
jo
dec
mov
repz
mov
and
lcall
gs
push
inc
or
pop
loopne
jae
out
inc
push
in
inc
js
and
xchg
movb
std
call
mov
movsl
jno
pusha
inc
mov
outsl
add
sub
cmp
or
mov
push
shll
or
jne
cmp
dec
test
pop
lret
lds
imul
rclb
sbb
loopne
test
aas
insb
or
dec
push
jns
jno
in
outsl
fnstcw
adc
les
popa
out
loopne
sbb
imulb
popa
icebp
hlt
inc
mov
and
and
in
mov
test
ljmp
ret
ljmp
std
clc
cvttps2pi
lea
cmp
mov
das
imul
in
or
aad
push
les
imul
hlt
aaa
iret
sub
push
jle
push
add
lea
repnz
sbbl
rcll
or
sbb
and
test
mov
loope
insl
xor
scas
hlt
je
push
imul
push
add
ret
mov
inc
jge
nop
sbb
in
xor
adc
xor
vpsrlw
sbbb
mov
add
adc
sbb
shrb
jg
mov
in
cmp
in
xchg
aas
lret
arpl
loope
loope
out
dec
or
mov
xchg
ja
dec
mov
insl
sub
xchg
dec
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
call
mov
push
mov
and
movsb
mov
mov
push
mov
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
shll
je
loop
int3
pop
mov
jge
fcoml
push
pusha
pop
rcll
push
lret
cli
loop
mov
fs
push
scas
sub
mov
mov
and
idiv
mov
jecxz
lods
aam
roll
ljmp
xor
repz
rorb
or
push
xor
pop
cmp
stos
dec
dec
add
mov
jmp
stc
lods
aam
pop
pushf
bound
imul
xor
outsb
cltd
add
dec
and
xchg
scas
push
or
jno
push
push
mov
mov
mov
loope
push
cmovae
fimuls
movsb
push
push
jecxz
add
test
mov
movsl
mov
mov
inc
mov
fimuls
movsb
dec
push
jecxz
add
fisttpl
movsl
push
push
jecxz
add
fimuls
movsb
push
call
jecxz
mov
push
push
jecxz
adc
fimuls
movsb
push
push
jecxz
add
into
or
mov
mov
movsb
imul
call
or
mov
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
mov
int
push
mov
fimuls
mov
push
jecxz
add
mov
cmp
cli
mov
mov
fimuls
inc
and
mov
mov
fimuls
movsb
arpl
mov
movsb
push
push
jecxz
add
decb
movsb
out
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
add
fimuls
movsb
push
push
jecxz
out
xor
and
push
js
mov
sbb
shll
repz
and
sbbl
jbe
jo
test
adc
fistpll
and
xor
push
pushf
inc
sub
mov
add
shll
cltd
jbe
out
sbb
or
insb
and
push
xchg
mov
jl
and
sub
and
push
xor
out
js
pusha
popa
call
andl
add
in
mov
xor
pop
test
pop
jmp
repnz
pop
mov
add
test
push
pop
test
add
cmc
test
fs
dec
aas
adc
xlat
lea
repnz
movsb
sbb
sarl
pop
xchg
or
jo
stc
cwtl
and
and
in
js
jecxz
xor
jne
dec
dec
adc
sbb
pop
shll
ret
pop
inc
fldl
frstor
adc
mov
iret
mov
in
dec
sbb
pop
mov
mull
or
or
pop
cmp
pop
and
test
mov
std
or
pop
rcr
pop
mov
mov
xchg
xor
xor
and
sub
insb
lret
test
inc
arpl
sbb
mov
aas
loop
pop
out
pop
daa
lock
xchg
mov
dec
lret
test
jns
or
ljmp
inc
jno
dec
in
and
cld
or
cmp
push
mov
push
inc
iret
aad
stc
sub
aad
out
lret
mov
xor
je
sub
fs
pop
inc
mov
dec
js
pop
test
nop
push
xor
clc
lock
sbb
and
cmp
inc
push
fnsave
mov
pop
ljmp
cld
xchg
mov
subb
xor
sar
leave
movsb
std
inc
adc
cwtl
mov
or
mov
lea
int3
jl
mov
mov
std
mov
sbb
int3
fnstcw
out
imul
inc
subl
lods
out
jge
cmp
mov
xchg
loop
and
sbb
hlt
daa
insb
call
xchg
aas
pop
gs
loopne
push
xchg
cmp
jnp
in
movsl
lea
xor
int3
xchg
cmp
lcall
dec
cmp
rorl
and
push
fisubl
es
js
out
dec
shrl
adc
mov
pop
xchg
mov
popl
shlb
inc
mov
and
std
sbb
pushf
loope
inc
mov
mov
dec
jae
inc
pop
xor
mov
call
cltd
sbb
dec
inc
repnz
out
and
out
inc
loop
push
mov
je
sbb
shll
das
imul
mov
js
jge
pop
mov
mov
pop
xchg
mov
jmp
inc
std
add
inc
inc
cmp
jno
push
push
fwait
inc
cmp
test
mov
push
inc
mov
outsl
jecxz
dec
gs
leave
subb
scas
adc
test
shl
outsl
dec
sub
dec
ljmp
add
jno
add
cmp
jp
movl
cmpsl
xchg
jae
data16
loopne
lods
or
rolb
orl
pusha
xchg
loop
mov
out
or
scas
push
push
add
lea
mov
xor
push
adc
imul
push
pop
cmc
insb
sub
cmp
jb
push
add
gs
push
fcompl
sub
ficoms
mov
out
scas
jnp
jno
cmp
mov
adc
push
mov
sub
pop
xchg
stos
notl
sbb
xor
xchg
int3
loopne
mov
xor
jl
stos
nop
das
mov
pusha
sub
fisubrs
out
pop
sbb
enter
popa
cmpsl
pop
push
and
pop
dec
aaa
cmp
fsts
mov
stos
cld
leave
mov
rcll
lock
mov
add
leave
push
add
test
loopne
sbb
and
js
push
mov
cmpl
adc
jle
jecxz
rorb
jl
adc
xlat
loop
je
ret
mov
sbbb
push
test
fsubr
mov
cltd
jp
arpl
imul
and
cltd
mov
dec
in
adc
popf
or
adc
daa
mov
iret
cmpsb
mov
movsb
mov
mov
push
ror
xor
xchg
shrb
out
bound
mov
test
push
mov
jo
push
or
popf
jmp
mov
add
cltd
inc
or
dec
adc
aam
scas
push
jnp
arpl
movsb
and
mov
push
js
or
js
pop
cmp
jnp
or
or
mov
jae
daa
jno
fwait
adc
or
mov
jb
sub
and
push
ss
scas
and
mov
pop
pop
dec
pop
sub
loope
add
adc
push
imul
push
ds
aaa
jp
lock
enter
jb
lahf
aas
repnz
or
fldcw
xchg
dec
inc
jno
sahf
or
mov
je
adc
dec
addr16
push
push
pop
mov
lret
push
mov
push
out
popf
sub
pop
jl
mov
ja
aas
movl
xor
lods
shll
movsl
dec
lea
xchg
mov
movsl
add
cmpsl
jne
sbb
xchg
jnp
adc
cmc
aad
leave
or
xchg
out
aam
in
push
cmc
ret
jo
pop
inc
mov
mov
inc
adc
ficoms
div
sbb
jle
movsl
cmc
mov
push
mov
lret
leave
sbbb
stc
jp
rcl
inc
push
movsb
add
lods
sti
xlat
test
ds
sub
push
imulb
mov
dec
dec
fcomps
lds
shl
or
jecxz
push
test
int3
push
jo
jo
jb
incb
jbe
dec
outsl
xor
repz
imul
jecxz
mov
sbb
jo
imul
call
jb
ds
mov
test
jge
push
jmp
enter
dec
arpl
cmp
inc
xchg
push
test
ds
outsb
rclb
aam
mov
mov
push
ds
and
pop
mov
fwait
xor
rorl
divb
out
hlt
pop
insl
dec
fdiv
inc
rclb
jecxz
pop
push
xchg
adc
xchg
or
cltd
or
lret
dec
mov
into
add
out
and
bound
test
mov
fldcw
push
xlat
je
orl
lahf
lds
popa
mov
enter
add
push
jno
xchg
arpl
xlat
xor
repz
sub
mov
xor
xor
or
fidivl
je
pop
decb
inc
sbb
outsl
ds
xor
frstor
and
popf
and
adc
adc
loope
push
dec
push
dec
loope
add
in
ja
aad
loope
hlt
push
test
loopne
test
hlt
adc
cmpsl
fwait
adc
pop
or
dec
flds
pop
leave
xchg
pop
pop
push
fnstsw
imul
pusha
lahf
or
jne
sarb
and
jb
sub
cmc
jbe
jl
outsb
testl
fiadds
jb
xor
jl
aam
xchg
outsl
and
outsl
sbb
mov
cmp
popa
les
arpl
xor
sbb
or
int
add
out
jle
popa
out
cmp
sbb
out
cmp
xor
pop
pop
hlt
scas
jle
cmp
leave
out
cmp
int
dec
loopne
lahf
in
jmp
push
cmp
subl
cld
adc
movsb
fstl
out
mov
pop
mov
xor
out
fmuls
jo
mov
mov
add
push
insl
mov
fbld
mov
xchg
call
and
mov
hlt
jno
loop
fbstp
add
repz
iret
lahf
inc
mov
xchg
jbe
push
xchg
stc
and
mov
inc
xchg
xlat
dec
aam
stos
inc
xchg
popf
orl
jbe
loopne
sbb
mov
test
ss
cmp
inc
jmp
xor
inc
mov
pop
lret
cltd
mov
xor
cmc
sbb
dec
sub
push
cmpl
movsl
dec
jno
test
lds
clc
test
ret
add
or
mov
cmc
sub
popf
xor
sbb
mov
insl
in
lret
push
inc
gs
jbe
aaa
fdivrs
adc
and
test
adc
lea
jmp
xchg
xchg
lret
test
movsb
out
mov
or
jle
and
arpl
mov
xor
xchg
psubsb
loope
xchg
movsb
ss
or
dec
dec
cmp
sbb
add
mov
jne
mov
pop
call
dec
sahf
scas
lcall
andb
imul
and
lret
insb
pop
jg
mov
xlat
les
stos
js
xor
push
inc
into
jle
sub
mov
repz
subl
or
xor
inc
mov
fistps
and
jnp
roll
xor
scas
mov
or
std
xlat
or
int
jno
fstpl
shrb
mov
fs
popa
enter
xor
jmp
mov
ds
jno
mov
and
outsl
jo
sub
add
inc
iret
insl
test
popa
sub
mov
popa
inc
jge
mov
adc
outsl
ret
jecxz
mov
and
iret
or
adc
testb
push
xchg
push
lea
outsl
jae
xchg
jge
xlat
and
dec
mov
roll
roll
je
xorl
mov
fdivrs
or
loopne
jmp
jne
ret
push
dec
xchg
test
push
jns
jbe
cmp
lods
fsubl
xor
ret
aam
xor
js
xor
add
and
sbb
scas
mov
shll
or
out
xchg
mov
jns
dec
das
inc
sub
dec
repnz
fisttpl
sarl
push
dec
cmp
xchg
stc
push
nop
ljmp
call
in
cmp
push
pop
mov
add
mov
jno
rcl
adc
mov
fwait
adc
xchg
sbb
out
push
or
add
dec
sub
testl
inc
add
nop
add
jnp
in
inc
mov
add
aaa
icebp
cwtl
out
add
sub
jbe
fcomps
dec
les
mov
and
arpl
inc
lock
push
jno
push
shld
fisubs
aas
xchg
inc
fmull
lods
adc
cmpsb
adc
jmp
or
push
xchg
pop
daa
xchg
cwtl
mov
test
in
sbb
sub
sub
add
push
pop
push
fnstcw
je
push
std
jg
aam
or
mov
stos
jo
popa
push
enter
and
jge
test
xor
push
arpl
iret
push
in
sbb
sub
jno
inc
cmp
mov
sbb
lds
mov
or
add
fldl
or
sti
ljmp
in
add
dec
fwait
icebp
mov
mov
xor
pop
mov
xor
test
sub
sahf
or
pop
testl
mov
sbb
das
popa
cmp
cmp
dec
inc
inc
pop
xor
pop
ret
mov
push
xor
sub
dec
lahf
add
pop
pusha
movsl
dec
int
daa
enter
enter
sarl
fisubrl
push
insl
lea
aam
jp
push
jecxz
sub
xchg
mov
xor
or
rolb
fistps
shrb
cmp
xor
cmp
outsl
call
xchg
jecxz
gs
adc
insb
mov
sub
pop
mov
sbb
aas
and
popf
bound
adc
xor
sub
and
push
lods
scas
fcomip
push
pop
dec
jp
sub
and
xchg
out
mov
arpl
ret
mov
into
xorl
pop
cmp
fwait
in
subb
xor
and
cmpsb
btr
daa
std
jg
xchg
rorl
or
imul
out
test
mov
push
push
ljmp
fnsave
add
xlat
xchg
xchg
arpl
and
mov
paddusb
dec
inc
mov
ss
xor
rorl
loope
cmc
cmc
push
jp
ss
xchg
inc
xchg
push
fwait
add
bound
int
out
mov
fs
sbb
xor
sub
roll
mov
dec
push
aam
subl
stos
pop
mov
test
push
inc
ret
aas
cmp
mov
icebp
test
xchg
neg
sbb
jecxz
shl
dec
mov
push
dec
and
and
mov
push
cmp
cmp
mov
inc
dec
adc
out
popf
jmp
notl
or
jns
test
push
test
inc
js
jno
out
icebp
pop
inc
nop
insl
cs
jnp
loop
and
mov
mov
jmp
adc
xor
ds
ret
aam
mov
mov
addb
sbb
cmp
movsb
dec
mov
dec
insb
jecxz
jl
leave
loop
rcr
inc
pop
cmp
mull
mov
or
je
lea
push
outsl
insb
inc
ja
dec
dec
out
call
or
push
negb
xchg
mul
mov
mov
jl
cmc
nop
jecxz
and
jns
pop
or
cmp
adc
shlb
mov
je
push
movsb
sub
cli
inc
out
sbbl
outsb
adc
add
rcr
or
inc
push
mov
sbb
mov
mov
mov
lock
inc
pop
inc
and
jo
push
lret
cmp
mov
scas
orl
push
clc
adc
and
push
mov
dec
jb
push
incb
add
mov
data16
inc
inc
dec
pop
js
mov
lods
mov
jge
orb
lods
aad
mov
sbb
dec
jae
pop
bound
test
mov
test
test
dec
jp
cmpb
adc
idivb
leave
test
add
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
