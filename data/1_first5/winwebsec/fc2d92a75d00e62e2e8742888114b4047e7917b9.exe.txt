and
mov
repnz
out
xchg
and
mov
outsl
xchg
cld
aam
rcrb
lcall
lods
sbbl
add
das
loopne
add
lahf
stos
shl
negb
add
daa
and
add
cmp
pop
sbb
shl
bound
ror
aad
sub
ljmp
inc
outsl
xor
fildl
and
cmp
push
dec
push
mov
test
scas
addl
push
xchg
xchg
les
sub
daa
jg
xlat
xchg
je
cmp
xchg
sub
cmp
pop
pop
mov
dec
cmp
adc
sub
inc
or
and
mov
pop
js
inc
das
push
adc
rcrb
mov
stos
out
nop
pushf
and
dec
pop
and
jno
jno
stos
int3
bnd
int3
xlat
cmp
ljmp
sbb
das
lret
inc
aad
xchg
add
outsb
cmp
imul
call
jg
ss
lods
jae
and
lcall
aam
adc
fmull
fidivl
add
and
jo
insb
push
dec
push
sbb
lea
or
pop
sbb
sar
pop
shl
inc
xchg
insl
js
sbb
adc
or
lahf
and
insb
iret
xor
xor
mov
in
mov
out
mov
and
cmp
pop
adc
add
xor
cmpsl
dec
mov
xor
in
inc
pop
cmp
jno
xor
xchg
and
mov
lret
insb
lds
movb
mov
mov
roll
fnsave
pop
push
insl
cmp
inc
push
test
pop
fsubr
or
xor
adc
xchg
in
push
cmp
fstpl
clc
sarb
add
dec
sbb
jae
xor
pop
jg
adc
ret
sub
dec
inc
mov
gs
sub
and
jl
inc
pop
aad
dec
mov
fwait
inc
cli
sahf
and
dec
jnp
loope
enter
xchg
enter
xchg
enter
movsb
mov
insl
mov
push
out
ljmp
scas
dec
xchg
cmp
sbbb
lcall
ss
stos
bound
in
cmpsl
xchg
push
cmp
and
lods
test
pop
cmc
cmp
mov
xchg
xor
mov
jle
pop
push
rcll
jae
ljmp
adc
sub
adcb
sbb
mov
sbb
rcrb
sti
push
es
ret
hlt
nop
push
and
test
dec
lock
fwait
push
mov
lret
jae
int3
push
cli
cmp
clc
mov
data16
mov
xchg
push
out
add
cmp
mov
fnstenv
mov
lds
testb
sbb
lock
adc
into
cmp
cmp
add
cld
xor
mov
dec
cmpsb
sub
add
jnp
pop
sbb
dec
mov
in
out
jl
stos
addr16
sub
add
daa
sbb
mov
adc
xchg
xchg
xchg
ja
xchg
mov
jge
and
and
fdivs
mov
addb
or
dec
add
test
mov
jbe
mov
iret
mov
gs
scas
ret
xor
xchg
testl
push
lock
je
push
xor
int3
lret
fisttpll
mov
sub
stos
lock
pop
fwait
int
adc
movsl
push
arpl
bound
in
popa
int
push
xor
adc
jp
leave
and
xchg
cmc
sti
sub
dec
xchg
xor
or
shufps
addr16
dec
std
add
lret
pop
insb
push
push
movsb
gs
call
jno
cld
idivl
pushl
xchg
adc
inc
ret
pop
clc
sbb
test
jle
jmp
cltd
sub
add
sub
aas
mov
sub
jl
into
push
cmc
jb
scas
cmp
pop
outsb
fcom
out
xor
sbb
mov
insl
lock
cmpsl
add
mov
add
sbb
add
inc
das
sbb
cmp
into
push
insb
addr16
xor
jbe
mov
gs
adc
lods
daa
pop
dec
in
sub
push
mov
mov
rclb
int3
mov
mov
or
data16
mov
ds
sbb
enter
jno
hlt
adc
fistpl
mov
in
ror
push
xchg
les
mov
sub
outsb
pop
xchg
std
movsl
mov
dec
mov
movsl
xchg
das
mov
push
pushf
subl
bound
xor
mov
inc
or
inc
pop
addr16
js
mov
or
and
nop
sbb
and
xor
lret
cld
push
xchg
xchg
outsb
mov
add
mov
xor
push
xchg
clc
jmp
je
stos
xor
inc
es
push
stos
test
mov
sbb
cmpsl
ret
mov
xor
scas
aaa
add
mov
cwtl
int3
inc
mov
cmp
add
es
fiaddl
xchg
popf
jle
sbb
iret
aas
in
mov
jno
cmpsl
xchg
js
jp
aas
cmp
or
lret
sub
nop
movsb
ja
or
pushl
lcall
adcb
add
mov
shrb
sub
pop
rorb
sbb
leave
pop
dec
mov
out
sub
arpl
pop
dec
bnd
cmp
inc
dec
fisttpl
inc
xchg
stc
in
cmc
hlt
ds
stos
push
and
aaa
rcl
cli
sub
jl
stc
add
jbe
xchg
xor
mov
scas
mov
ret
dec
adc
pop
loop
adc
xor
popa
sub
inc
negl
add
push
in
sbb
mov
femms
pop
pop
lahf
inc
or
mov
xchg
jns
xchg
popf
xchg
shlb
mov
dec
lock
or
adc
and
or
sub
icebp
push
pop
lea
mov
pop
je
xchg
add
jp
test
fsts
sbb
xchg
pop
test
inc
arpl
sbb
mov
or
jp
lret
mov
int3
jmp
enter
cmp
pop
imul
in
lcall
cli
xchg
sub
xor
and
cmp
pop
jmp
ss
fwait
repnz
not
pop
push
sbb
es
push
sub
mov
arpl
stos
sbb
jge
add
shlb
stos
pop
lock
cmpsb
movsb
aam
out
mov
fcmovbe
lcall
xchg
out
out
ljmp
push
cmc
pop
cld
dec
repz
jp
scas
mov
cmp
in
adc
dec
popf
notb
pop
inc
jle
rcrb
push
mov
fiaddl
lds
or
out
adc
sahf
mov
mov
cmp
scas
or
mov
sbb
pop
out
push
ds
loop
cwtl
inc
mov
mov
or
cmp
pop
icebp
out
lods
pop
jno
inc
cltd
xor
sub
enter
lock
mov
cmpsb
jmp
inc
sub
cli
and
pop
mov
jl
outsb
mov
sahf
clc
outsb
lock
jb
aam
subl
popf
and
sub
pop
or
pop
loop
add
or
sbb
mov
jmp
in
xchg
inc
cmp
testb
movsb
int3
xchg
push
adc
pop
or
bound
mov
dec
ficomps
and
adc
out
popf
add
pop
adc
rorb
stc
push
lds
push
mov
jecxz
fnstcw
stos
test
rol
ret
fidivrl
or
sub
jl
scas
jl
fbstp
xor
add
iret
repnz
mov
mov
mov
lcall
jl
inc
aaa
inc
or
push
adc
mov
fwait
cmp
scas
cmp
lea
lds
adc
push
and
jne
inc
xchg
xchg
nop
addl
jle
rcrl
loope
push
gs
mov
xlat
outsl
pop
mov
mov
push
das
pop
inc
sub
fisubrl
in
lcall
in
sbb
icebp
cmp
adc
jne
movsl
xchg
std
push
inc
sti
pop
lea
mov
mov
push
pushf
add
repz
xor
push
mov
sysret
cmp
rorl
sti
fsubrs
push
into
movsl
pop
pop
adc
aam
mov
jecxz
rcll
push
mov
mov
sti
sarl
jne
xor
insb
or
fnsave
mov
ficompl
fadd
push
inc
repz
cmc
mov
xchg
popa
xchg
dec
fldl
push
push
into
fidivrl
inc
rcr
insb
push
mov
je
push
push
push
std
cwtl
aas
std
cmpsb
ja
ja
sti
xchg
insb
push
or
cmp
jg
lods
std
cmc
push
add
out
xor
popf
xor
stos
fxam
cld
mov
mov
xchg
lods
outsb
add
lcall
sbb
add
lds
ds
dec
xchg
in
and
jge
and
outsl
jae
pop
test
jns
mov
jge
lods
imul
push
or
mov
inc
sbb
mov
aad
lcall
jecxz
idivb
sbb
xchg
ror
adc
fisubrl
arpl
mov
jno,pt
lods
mov
xor
ret
insb
jg
jp
xchg
pop
cwtl
xchg
addr16
std
xchg
pop
xor
push
out
loop
mov
push
adc
arpl
idiv
inc
xor
push
and
dec
pop
push
test
jl
xorb
out
adc
push
mov
adc
lods
mov
nop
and
xor
cmp
push
push
lea
sub
rclb
sub
pushf
enter
lock
fstl
lcall
arpl
je
jl
mov
addr16
fcom
shrl
mov
popf
jge
arpl
push
cmp
rep
xchg
out
mov
inc
xor
jle
jns
sbb
in
addr16
sbb
mov
jno
je
andb
popa
add
orl
into
popa
xor
addr16
mov
in
cmp
outsb
pop
cmp
mov
mov
lret
sbb
stos
cld
stos
int3
shr
test
mov
addr16
push
lock
adc
daa
mov
fldt
add
int
mov
scas
xchg
in
pop
jnp
sbb
bound
popa
arpl
sti
inc
mov
mov
mull
sub
aaa
xor
xor
pusha
mov
and
je
pop
pop
cmpsl
in
fcmove
jb
sbb
add
ret
aaa
xchg
push
lods
jbe
inc
fxch
repnz
pop
sub
outsl
movsb
fsubrp
lret
pop
dec
insl
pop
push
adc
jb
add
cwtl
xchg
sahf
dec
fdivrl
xchg
jnp
cmp
mov
fsubrl
xchg
popa
mov
cmp
mov
cwtl
lret
aad
pop
and
not
negb
jmp
xchg
mov
cmp
xlat
push
and
test
xor
mov
cwtl
or
pop
fs
mov
leave
mov
bound
popf
in
lock
cmp
pop
or
in
cli
fs
jg
xor
push
adc
pushf
ljmp
mov
scas
mov
clc
and
out
dec
mov
cmp
or
lods
adc
inc
inc
icebp
es
push
jnp
push
iret
shlb
leave
or
mov
fs
mov
mov
in
popf
sbb
js
jns
xor
or
push
ret
rcll
cmp
or
mov
sub
cld
jl
and
mov
jg
mov
fimuls
jo
lcall
imul
jecxz
adc
inc
dec
xchg
xlat
clc
push
std
or
sbb
aad
pop
mov
gs
xchg
hlt
push
add
xchg
adc
cmp
mov
sbb
cmp
adc
xor
mov
mov
lods
cmp
sub
iret
xchg
ljmp
cli
imul
jl
scas
ret
iret
and
out
jecxz
cmp
add
or
cli
test
xchg
stc
arpl
loop
lahf
cmp
xor
push
negl
bound
add
out
arpl
or
and
inc
push
jne
pusha
xchg
inc
into
adc
and
js
or
sbb
inc
adc
aas
ret
insl
hlt
jae
scas
in
fstps
cmpsl
sti
hlt
mov
lret
mov
pop
cmc
xchg
add
int3
dec
cmp
sbb
in
push
idivl
jb
je
lds
mov
mov
xchg
push
or
sbb
xor
lea
pop
mov
pop
pop
movb
loope
leave
ljmp
xchg
repnz
js
mov
ja
inc
call
jecxz
popa
sbb
icebp
mov
loopne
jmp
stos
out
aad
and
jnp
insb
pop
pusha
out
outsl
mov
pop
cmp
add
sbb
push
and
push
dec
mov
mov
mov
lock
xchg
adcb
xor
jbe
mov
filds
inc
cmp
out
subl
cwtl
mov
out
jp
fdivs
adc
dec
push
fwait
arpl
fcmove
stos
into
mov
or
inc
pop
mov
dec
adc
jae
movb
push
and
out
mov
adc
ret
in
mov
pop
or
roll
rol
enter
mov
lahf
clc
inc
in
repz
test
gs
ret
popf
jle
sti
pop
xchg
in
setns
mov
push
aam
lcall
pop
mov
pop
shll
into
jecxz
pop
jae
loope
mov
push
push
mov
pop
aaa
daa
push
jo
push
dec
sbb
lods
shl
aaa
in
mov
pushf
icebp
cmp
sub
or
movb
pusha
pop
lods
adc
test
sbb
test
mov
scas
mov
pop
out
pop
dec
mov
mov
xchg
sarl
pop
sub
movsl
sti
push
icebp
ss
addr16
imul
inc
data16
add
shll
cmp
pop
sahf
mov
scas
pop
dec
or
popf
dec
call
mov
pop
int3
shrb
outsb
testl
lahf
es
rorb
outsb
fidivs
pop
inc
outsb
lret
ljmp
mov
jns
fwait
jnp
lcall
pop
stos
cs
push
popa
daa
es
sub
ja
and
jne
pop
xlat
repnz
dec
mov
movsl
adc
ficoms
dec
push
inc
mov
lahf
inc
push
dec
int
or
pop
mov
in
xor
jg
sbb
es
adc
mov
mov
sub
fxam
fsub
push
xor
outsl
and
insl
mov
sbbl
fcmovu
aam
jecxz
leave
sbbl
jbe
jnp
movsb
mov
jl
pop
add
adc
xchg
or
cmpsb
out
cmp
outsl
iret
fists
mov
xor
add
sbb
pop
shll
ret
out
and
out
loope
shl
call
repz
int
push
cmp
pop
sbb
aam
mov
mulb
daa
ds
push
jmp
mov
imul
mov
add
sbb
in
int3
xchg
pop
sub
mov
push
and
pop
aam
insl
ss
fwait
mov
inc
lock
int
jle
iret
aam
mov
sub
hlt
jbe
xchg
outsb
movsl
cmp
adc
xor
shr
mov
pop
rcrb
xchg
insb
stc
test
jns
mov
testb
dec
lret
jb
sbb
mov
jecxz
dec
push
in
xchg
lock
sbb
ja
dec
dec
loope
add
aad
lret
outsb
sub
add
mov
jle
ret
pop
mov
cld
in
and
add
arpl
push
arpl
arpl
mov
iret
cltd
lods
xor
xchg
ret
test
ds
shl
add
mov
cs
dec
or
daa
loop
xor
adc
jecxz
int
sub
push
lret
or
jns
std
stos
push
arpl
push
xchg
xor
addr16
das
add
jb
in
jle
out
fiaddl
rcrb
adc
add
cwtl
mov
fiaddl
or
adc
xor
mul
mov
mov
mov
cwtl
mov
jo
in
insb
mov
aas
ret
jno
outsb
jl
jle
or
xchg
adc
or
fwait
xchg
sbb
sbb
les
inc
test
ffreep
lret
gs
sub
mov
adc
jle
in
lock
pop
push
add
add
push
lods
pop
mov
cli
negb
xor
xlat
out
jle
mov
mov
daa
lods
insl
jle
sub
xchg
push
les
xchg
push
lock
mov
mov
nop
adc
insl
imul
and
push
push
mov
loopne
sub
pop
insb
cmpsb
popf
inc
push
xor
push
fwait
add
push
or
out
rorb
jecxz
pop
dec
pop
lret
adc
pop
adc
inc
sbb
sub
pop
icebp
pop
xchg
ljmp
lds
pop
mov
mov
and
insb
adc
xor
cmc
rol
out
lock
imul
jno
sub
xchg
stc
push
andb
cmp
add
jp
xchg
adc
xchg
arpl
xchg
inc
sahf
mov
mov
div
insb
inc
add
pop
mov
call
int
sbbl
adc
popa
push
xchg
push
sbb
cs
daa
and
nop
movsl
add
fcmovne
mov
mov
cmp
popw
inc
cmp
pop
push
and
mov
jns
mov
and
adc
shlb
jge
icebp
leave
sahf
imul
sbb
pop
lret
fnstcw
cmp
xor
std
std
fwait
clc
sbb
jno
push
in
adc
mov
adc
pop
mov
fcomi
test
pop
push
in
xlat
mov
enter
std
or
int
call
mov
mov
cmp
adc
and
or
insb
enter
or
push
cmp
decb
mov
cmc
cmpsb
inc
pusha
aam
and
mov
inc
lods
jb
mov
pop
pop
inc
cwtl
ret
pop
mov
jno
xor
dec
or
mov
pop
lret
mov
mov
mov
add
mov
das
inc
lcall
xor
xor
test
push
mov
sarl
mov
sbb
fcmovnu
sub
jle
inc
cltd
call
stc
cmp
das
mov
jp
push
cmpsl
mov
mov
add
mov
in
pop
rcr
cli
jl
lods
mov
xchg
mov
aam
orl
push
push
xor
call
ljmp
in
bnd
push
push
repnz
ja
dec
testl
outsl
add
mov
arpl
jnp
push
mov
jb
pop
inc
dec
jnp
add
mov
out
add
dec
pop
gs
dec
dec
fidivs
push
in
fisttpll
pusha
sbb
into
les
inc
cmpsb
cmc
pop
in
mov
cmpsb
jge
mov
pop
xor
and
push
or
sbbb
mov
data16
mov
sbb
xchg
ret
lds
loopne
imul
cli
and
popa
and
inc
inc
adc
loop
sar
mov
add
nop
push
clc
enter
xor
rcll
mov
and
mov
inc
addr16
inc
stos
push
push
loopne
mov
into
outsl
sub
jle
xchg
shll
or
ljmp
neg
xorb
rcrb
fs
or
mov
add
cwtl
lahf
push
ljmp
subl
adc
inc
jecxz
loopne
jnp
mov
iret
cltd
xchg
mov
and
pop
scas
xchg
adc
aad
repz
cmpb
adc
dec
mov
in
rcrl
add
jne
mov
scas
inc
xchg
imul
add
lcall
cmpsl
mov
aaa
insb
addr16
cs
mov
arpl
jb
in
mov
in
lcall
inc
mov
aas
aad
sub
or
pop
adc
push
or
jl
jb
inc
mov
and
aad
fcmovnu
rcr
arpl
xor
jge
loopne
jmp
nop
mov
cmp
mov
pusha
xchg
gs
rcrl
ret
xchg
cmp
mov
add
outsb
scas
sbb
add
gs
cmp
cs
mov
outsb
cmp
pop
or
ret
test
popa
in
push
scas
int3
inc
add
mov
dec
jle
jp
jp
or
jno
test
jnp
or
stc
iret
sub
xor
sbb
outsl
pop
push
mov
jo
push
xor
icebp
push
inc
ds
mov
aas
mov
fs
cld
sbb
jl
inc
jae
inc
gs
rorl
xlat
inc
jno
mov
sarb
xorl
out
call
pop
scas
mov
fsts
aas
mov
call
mov
addr16
pop
lds
mov
lds
clc
jns
popa
decb
fwait
mov
cmpsl
jp
dec
jmp
scas
fsubrs
cmp
popa
mov
faddl
xchg
mov
pop
cmp
pushf
in
cmp
xor
fimull
nop
fldenv
adc
rcll
mov
jnp
xlat
lret
insl
test
mov
cwtl
push
mov
fimull
cmpsb
pop
out
push
fdivl
or
sbb
test
mov
and
mov
in
sub
lea
dec
cmc
in
ret
mov
cld
test
add
mov
dec
subb
push
or
rolb
mov
jmp
bound
in
fdivs
pushl
mov
jmp
and
push
pop
and
fisttpll
jl
mov
daa
sti
mov
imul
cmovs
dec
cld
outsl
pop
dec
adc
jmp
mov
mov
cltd
ret
pushf
repnz
push
and
and
or
pop
iret
mov
sub
cltd
aaa
pop
lock
push
push
imul
addr16
cli
enter
mov
ds
js
sarb
lock
int3
js
jno
dec
pop
push
in
jl
das
orb
test
and
pusha
xor
fisttpl
faddl
pusha
xchg
xchg
xchg
movsb
add
add
mov
fdivl
subb
cld
imul
repz
daa
test
add
mov
es
js
pop
push
ret
inc
dec
mov
cmpsb
sbb
push
cs
add
in
test
or
test
stos
xchg
adc
pop
js
lock
mov
mov
lods
add
in
into
pop
adc
jge
push
test
ljmp
sub
dec
dec
xor
stc
pushf
fld
es
cmc
nop
movsl
xor
or
xor
cltd
js
add
sub
es
fsubs
pop
shll
iret
mov
aam
or
ljmp
and
jbe
icebp
rol
mov
mov
shlb
out
jge
sub
mov
dec
lahf
adc
mov
outsl
int
pop
dec
mov
jbe
imul
mov
mov
cs
or
dec
jmp
jmp
pop
movsl
jp
xlat
add
repz
ds
sbb
clc
nop
adc
mov
mov
inc
loope
adc
cmp
push
sub
das
and
cmp
inc
xchg
out
mov
daa
mov
jge
test
popa
test
sbb
jo
icebp
subl
jmp
and
pop
outsb
cmpsb
insb
push
out
mov
adc
sbb
fstpt
jns
add
mul
clc
inc
sub
inc
scas
cmpsw
pop
cmp
xchg
mov
insl
loop
and
out
and
addr16
sbb
pop
and
sbb
push
cld
add
inc
inc
push
sbb
lods
outsl
pop
jp
sti
fdivs
stos
decb
dec
jbe
popa
out
dec
xor
xor
inc
ud2
and
and
sbb
xor
dec
jne
sbb
iret
add
xor
sbb
cmc
lods
aad
roll
cld
mov
enter
scas
mov
js
xor
cmp
sub
fwait
xchg
xchg
and
add
outsb
fs
xorb
mov
iret
xlat
push
js
mov
mov
leave
out
mov
dec
push
dec
inc
ljmp
cs
mov
pop
loope
adcl
lods
mov
sub
movsl
shrb
pop
cltd
movsb
or
inc
mov
adc
adcb
icebp
sub
sahf
es
or
xor
push
in
jb
xchg
and
add
mov
or
inc
sbb
mov
inc
sbb
pop
mov
jns
add
fsubrs
mov
adc
dec
ret
aas
cmp
jae
out
call
lea
jmp
jmp
sub
mov
add
loope
sbb
adc
mov
ret
push
xor
pushf
and
cs
push
adc
hlt
fwait
add
lds
push
xor
aam
loope
inc
emms
mov
cmp
js
ja
push
mov
movsl
or
test
daa
push
xor
dec
pop
cmc
jns
fbld
fsubrs
or
lret
mov
int
sub
cmp
bound
mov
lcall
mov
loop
mov
imul
rcr
pop
scas
jns
std
or
ss
shrb
add
xchg
xor
aaa
shlb
push
mov
jmp
loope
or
outsb
xor
pop
fstl
xor
ss
ret
xorb
sbb
or
call
iret
shr
shlb
repnz
rclb
lahf
adc
sub
out
test
push
dec
orl
or
shl
mov
adc
adc
sub
push
sbb
mov
xchg
test
or
cmp
stos
cmp
fs
ljmp
popf
test
mov
dec
mov
fnstcw
xchg
nop
xchg
dec
popl
ja
sub
xor
adc
xchg
fdivrl
shlb
out
cmp
sbbl
aam
cmp
lods
add
aaa
in
sahf
test
cmp
xchg
dec
xor
add
add
jbe
sahf
mov
insl
and
scas
jle
loopne
and
or
mov
mov
ss
push
in
imul
enter
in
cmp
sbb
call
xor
jb
jl
push
or
or
movsb
dec
dec
adc
sarb
adc
lods
xor
bnd
inc
in
xchg
movaps
mov
adc
mov
mov
test
add
test
push
movsl
sub
jmp
flds
and
stos
jmp
xchg
in
or
stos
cmp
sbb
sub
fimull
fcomps
ss
fstl
fs
fistpl
subl
imull
inc
sub
push
cs
jmp
call
xchg
inc
stos
push
aaa
jmp
addr16
sbb
dec
outsl
xchg
pop
and
arpl
js
jecxz
pop
cmpl
dec
fmuls
mov
pusha
out
pushf
jne
pop
cltd
pop
mov
ret
mov
notb
cmp
mov
cmpsb
inc
add
adc
inc
rorl
xor
aam
jmp
lods
imul
ror
mov
push
sbb
push
bnd
and
sti
mov
mov
int3
mov
pop
jg
push
adcl
push
sbb
and
mov
mov
cmp
in
mov
lret
cmp
mov
loope
fs
hlt
dec
cmp
cmp
decb
ret
out
pop
ds
or
jmp
pop
popa
sbb
icebp
in
xor
scas
ret
sub
xor
cmc
roll
cmp
cs
bound
sub
xchg
das
mov
jne
dec
call
inc
dec
inc
jne
aas
mov
xor
mov
xchg
mov
repnz
loope
icebp
fidivl
mov
popa
jmp
leave
push
nop
movsb
popf
scas
push
mov
icebp
fwait
xlat
xor
ret
test
jne
inc
ja
and
gs
fdivl
pop
sub
jmp
aaa
jnp
cwtl
xchg
mov
out
add
dec
pop
push
bound
pop
mov
into
or
dec
rcrb
cmp
cmp
in
sbb
cmp
out
cmpb
in
sbbl
mov
imul
xchg
jne
xchg
pusha
aam
push
push
sbb
std
bound
repnz
faddl
adc
jge
mov
sub
insb
and
testl
mov
mov
add
inc
push
mov
pop
xor
je
dec
mov
add
loope
mov
cli
cmp
fmuls
push
mov
jg
ljmp
push
stos
test
insb
movl
insb
push
pop
enter
rcll
scas
pushf
sbb
notb
xchg
arpl
cmp
mov
aad
push
repz
mov
xor
pop
ds
rolb
js
mov
lcall
test
mov
out
or
stos
clc
sub
cli
or
leave
jo
and
ss
add
mov
aad
mov
outsl
and
ljmp
xchg
lret
outsl
hlt
jg
add
pop
sub
adc
stos
hlt
stos
xchg
jno
inc
inc
test
loope
mov
add
mov
xchg
inc
mov
and
dec
push
xor
dec
adc
out
cmp
repnz
movsb
inc
sub
xor
loop
clc
inc
pop
ja
ficoml
fsubr
pushl
mov
xchg
adc
cli
mov
pop
jge
dec
fiaddl
fldcw
daa
add
lods
jmp
es
and
aaa
ja
push
lods
cld
pop
xchg
ret
daa
dec
sbb
sub
lea
arpl
push
pop
mov
or
dec
cmp
mov
sub
loopne
ficoms
xchg
ret
inc
cltd
and
push
out
incl
enter
iret
imull
clc
aam
add
sbbb
test
lahf
lahf
add
and
pop
jmp
cltd
mov
push
mov
in
ljmp
xchg
and
in
pushf
test
dec
adc
sbb
or
repnz
je
cmp
lret
inc
cmp
dec
lods
aam
xor
sbb
pop
je
xchg
jns
ret
clc
jle
inc
mov
xorb
lds
jb
mov
push
fs
fimull
or
out
mov
jns
xor
pop
lock
or
push
out
lret
sbb
jbe
inc
xor
cmp
add
push
xchg
push
out
push
jne
lods
nop
pusha
lahf
jne
dec
lret
inc
add
pusha
sub
paddusw
adc
sbb
dec
sub
imul
fimuls
add
adc
rcrb
cltd
or
mov
inc
pop
std
add
push
xchg
ss
mov
adc
cmp
lret
jnp
out
scas
sahf
and
loop
sahf
mov
mov
std
js
ret
jmp
pop
and
jmp
inc
lahf
jo
and
das
cmp
mov
pop
fmull
mov
mov
jg
imul
stos
popa
ljmp
inc
sarb
inc
mov
jg
push
not
js
cmp
in
adc
or
jnp
jge
xor
aam
and
cmp
adc
mov
jle
jns
xchg
jne
scas
and
mov
lock
aam
xor
loop
or
out
ror
mov
mov
loope
js
mov
dec
cs
ja
sbb
shlb
jmp
cmp
inc
in
stc
lods
jle
enter
and
outsb
fdivr
sbbl
sbb
loope
cltd
jno
stc
inc
dec
lcall
insl
pop
filds
imul
sbb
loope
cmp
inc
pop
jecxz
daa
add
shrl
sbb
sub
in
imul
cs
loopne
inc
cmp
clc
es
push
dec
in
aaa
cwtl
lds
inc
lds
ss
pop
int3
shll
cmpl
adc
lahf
fsubl
jno
inc
insb
xlat
fdecstp
popa
jbe
fidivs
inc
xchg
xor
fs
test
fsincos
aaa
cmp
stc
push
sbb
xor
out
popa
cld
lcall
push
mov
mov
xchg
mov
mov
dec
xor
sub
ljmp
xor
arpl
outsl
lret
inc
xlat
mov
mov
shrb
mov
push
ss
xchg
mov
mov
fldl
and
inc
cmp
pop
mov
nop
iret
mov
sbb
iret
mov
into
lcall
mov
push
pop
ljmp
lods
mov
adc
out
test
dec
out
out
mov
pop
inc
add
in
rorl
in
dec
sahf
cmp
add
add
out
mov
lret
pop
fimuls
pop
inc
add
sbb
ficoml
cmpsb
nop
mov
loopne
cmpsb
mov
add
add
loopne
mov
loope
pop
lods
inc
jbe
shll
lods
mov
pushw
mov
repnz
outsl
or
in
inc
icebp
jp
push
popf
movnti
mov
and
xor
push
xchg
dec
jae
add
dec
mov
xor
mov
mov
sbb
mov
add
loopne
xor
adcl
dec
adcl
fisubl
bound
jecxz
cmp
int3
sbb
shr
test
in
mov
fcoms
jne
dec
inc
add
lds
xor
jae
xchg
fstp
mov
clc
mov
lea
shrl
mov
in
and
dec
icebp
push
icebp
sub
adc
jmp
out
jecxz
sub
sti
movl
mov
es
mov
xor
enter
jp
inc
add
cmp
ret
pop
movl
icebp
sub
sub
notb
dec
cmpsb
push
arpl
mov
xchg
dec
lock
sti
xchg
mov
aaa
xchg
push
dec
jno
movsl
inc
xor
sbb
addb
dec
rorb
leave
shlb
jae
imul
cmp
aad
ret
test
movsb
inc
fs
arpl
add
mov
cs
cmpsb
xchg
and
cmp
dec
and
mov
cmp
mov
sbb
or
fsubrl
cmpsl
jno
es
fdivs
push
fisttps
in
cs
popa
ja
sahf
lret
lcall
mov
add
testl
cmc
jae
pop
add
push
mov
leave
cltd
cmpsb
lret
mov
cmp
test
mov
js
mov
lods
leave
dec
sbb
cmp
sbb
fiadds
leave
int
stos
push
in
sub
sbb
push
fldenv
pop
adc
or
mov
mov
mov
std
jl
das
dec
rcll
movsb
adc
insl
inc
pop
sub
dec
ret
lods
sub
leave
dec
repnz
or
cmp
imull
shlb
setbe
and
mov
mov
jnp
neg
mov
addl
aaa
jnp
aas
imul
daa
sti
cmp
sbbb
or
ja
movsb
push
cld
jp,pt
xor
jp
mov
cmp
adcl
bnd
outsb
adc
iret
xor
add
inc
scas
mov
cli
jbe
jge
imul
filds
scas
imul
in
mov
jno
cmpsl
sbb
int3
into
inc
fisubs
mov
add
mov
mov
pusha
mov
jmp
aas
pop
and
stos
imul
push
dec
jns
js
das
cmpsb
adc
jnp
test
insl
mov
sub
test
inc
in
fcom
mov
dec
push
dec
test
pop
test
inc
cli
popf
aaa
lea
inc
inc
adc
add
mov
test
push
jge,pn
test
imul
xchg
das
jns
mov
pop
scas
sarb
popf
sub
outsl
or
inc
push
and
pop
sbb
gs
test
je
sti
add
mov
lret
inc
les
aam
push
adc
hlt
mov
imulb
cmp
push
pop
clc
addl
aam
in
repnz
xor
adc
push
or
gs
outsb
cli
cmp
int
jno
pop
cmpsl
cltd
pop
push
or
xor
sub
push
idivb
lds
xchg
mov
or
dec
mov
xor
cmp
jmp
test
in
cld
add
dec
nop
xor
rcrl
fldenv
incl
ret
mov
xchg
dec
jmp
dec
push
mov
cmpsb
bound
cmpb
dec
imul
imul
or
push
clc
leave
dec
test
and
mov
jmp
dec
sahf
inc
out
sub
aas
pusha
mov
sbb
aam
jno
fcomps
add
test
cmp
jle
push
mov
jle
int
push
jb
loope
sti
movsb
and
cmpsb
mov
inc
pushf
ret
fimuls
push
mov
mov
ljmp
pop
inc
inc
out
in
jl
mov
push
test
out
inc
push
icebp
mov
adc
fwait
xor
js
xchg
and
rclb
mov
cmp
int3
dec
xchg
sub
jecxz
jnp
push
pop
pop
mov
scas
mov
daa
mov
gs
pop
call
xor
cmpsl
test
movsl
mov
mov
and
jne
lds
add
cmpsb
adc
dec
mov
mov
dec
scas
pop
add
addl
pop
push
jnp
popa
cld
sahf
push
dec
pusha
idivl
or
add
popa
jecxz
popa
jecxz
xchg
test
dec
sbb
pop
dec
test
scas
std
in
lods
js
push
cmp
dec
jne
es
inc
sarb
fldt
dec
ror
lret
and
orb
add
sbb
imul
sbb
add
cmpsl
xchg
inc
mov
pop
imul
adc
pop
aad
or
loope
mov
aam
and
fwait
mov
mov
rcl
rclb
outsl
sbb
push
pop
xchg
mov
adc
mov
push
out
xor
cmc
xlat
js
out
cmpsl
cltd
push
mov
push
jmp
push
dec
push
jae
xchg
xchg
int
in
push
out
xchg
push
xchg
adc
cmp
pop
popa
gs
xchg
mov
mov
adc
repz
iret
loopne
dec
adc
inc
adcb
xor
stos
pop
lods
jo
mov
fbstp
dec
or
lods
mov
push
mov
inc
in
push
cmp
or
cld
movsl
out
mov
add
mov
lds
popa
rorl
push
pop
mov
jae
adc
repnz
ficomps
cmpsb
inc
aam
pusha
arpl
jmp
xchg
enter
test
mov
imul
cltd
or
push
pop
movsl
pop
xor
mov
rcrl
mov
arpl
aam
and
out
out
push
pop
std
mov
daa
push
mov
aad
cmp
mov
rolb
cmp
fidivrs
push
pop
dec
fwait
mov
test
sub
pop
mov
jae
dec
xchg
inc
lcall
subb
mov
pop
shll
mov
mov
xor
add
xchg
push
pushf
inc
ljmp
push
loope
add
xchg
xchg
test
shlb
fistpll
orb
dec
fwait
mov
jle
pop
aas
add
lea
xchg
adc
stos
sbb
je
out
mov
nop
jno
mov
in
push
mov
pop
or
test
pop
ja
insl
cmp
xlat
imul
pop
int3
sahf
iret
sbb
pop
out
push
daa
popf
xchg
lret
ja
rol
jmp
xor
and
dec
aaa
push
or
push
push
scas
mov
cmp
jo
cmp
jl
in
call
jbe
lods
xor
arpl
sub
enter
andl
sbb
aad
sub
in
ficomps
repnz
dec
cwtl
pop
imul
lods
in
sahf
pop
mov
insl
add
xchg
nop
sbb
arpl
divl
xor
inc
mov
call
int
in
lds
mov
adc
sbb
shll
cmp
cmp
jo
sub
das
add
ret
ja
dec
shlb
into
or
lret
pop
xchg
and
enter
cmpsb
movsl
cmp
lds
mov
pop
jg
es
roll
les
pushf
fisttpll
dec
jne
jbe
mov
movsb
push
in
test
lds
lods
arpl
jecxz
dec
addr16
pop
enter
in
pushf
or
cld
and
lret
leave
pop
add
add
cmp
out
out
add
in
mull
data16
bnd
test
mov
jge
jp
inc
push
lret
push
mov
fldcw
jno
inc
jns
stc
cs
push
dec
inc
loop
xchg
loop
xor
xor
mov
gs
mov
cmpsb
in
hlt
test
out
sbb
cmpsl
testl
push
cld
inc
shll
pop
lds
fld
cld
in
pop
sbb
mov
cmp
enter
and
or
sahf
sbb
aam
push
and
xchg
loopne
ss
inc
push
sub
sbbl
cmp
push
xor
fcoml
xor
and
fsubrs
call
sbb
xor
jo
mov
add
cmp
xchg
push
adc
or
fisubrl
cmpsl
jae
push
ja
push
fldt
add
aad
add
mov
shrb
sub
and
mov
repz
jae
jne
clc
add
int3
mov
mov
shl
sbbl
xchg
shlb
cmc
or
mov
test
push
insb
or
clc
add
aad
daa
dec
and
push
cmp
jge
shl
pop
loop
jge
scas
and
push
fstps
lahf
xchg
in
push
push
dec
cli
test
mov
jl
mov
mov
xor
shll
sub
dec
ja
les
mov
add
add
mov
fildll
imul
mov
je
adc
cmp
jno
jb
ja
mov
dec
adc
inc
lahf
les
sahf
xchg
cwtl
dec
aas
call
movsl
and
sub
out
arpl
mov
sub
xor
sbb
cli
enter
xchg
popa
aam
adc
sti
test
dec
xor
dec
mov
in
xlat
pop
pop
push
cmp
lods
adc
iret
and
mov
sbb
sub
adc
sbb
fimull
sbb
lods
pushf
vsqrtsd
inc
test
mov
and
add
mov
lret
xchg
sbb
lods
and
push
rol
ret
cs
ss
test
pop
mov
stos
neg
inc
into
adc
mov
addr16
add
inc
sbb
push
dec
test
push
lods
mov
dec
xchg
or
int3
fisttpll
icebp
int
test
mov
mov
test
lret
incl
test
lahf
jo
add
jbe
enter
pusha
dec
mov
fsubl
std
dec
push
sbb
out
pop
sub
hlt
mov
fsubrs
bound
and
call
pop
pop
mov
jp
pushl
xchg
pop
xlat
jnp
ljmp
push
stc
data16
cmpl
sub
dec
xchg
popf
shrl
stc
inc
test
rclb
clc
mov
mov
icebp
in
add
push
mov
inc
outsl
ja
test
mov
loope
push
adc
jmp
les
inc
ss
outsb
movsl
sbb
xchg
mov
rorb
xor
popa
mov
xchg
sbbb
cmpsb
xchg
leave
and
xor
aad
int3
sbb
icebp
mov
imul
xor
lods
inc
or
out
sub
or
mov
fimull
pop
jo
mov
lods
push
jecxz
cmpsl
pop
je
mov
and
cli
xor
std
mov
movsb
mov
scas
mov
and
test
sahf
cs
arpl
mov
cmp
inc
xchg
nop
adc
adc
cmp
sub
xor
cmp
mov
mov
push
hlt
sbb
sbb
mov
enter
sar
lods
cwtl
pop
jle
jg
mov
outsb
push
push
in
rorl
inc
mov
push
cmpsb
push
lock
xchg
jl
clc
int3
adc
inc
add
jbe
stos
fs
inc
and
das
and
aam
out
mov
ret
wrmsr
mov
loopne
and
xchg
add
aam
xor
aaa
xchg
push
pop
sbb
xchg
loope
or
stos
sub
stos
pop
mov
xchg
aaa
jne
xlat
jge
std
lcall
sub
loope
mov
jne
lods
pop
scas
lahf
xor
dec
cltd
test
push
fidivs
aad
jo
stos
jne
mov
sbb
mov
clc
dec
add
mov
popf
add
sub
shr
xchg
cmp
push
jl
insb
push
int3
jp
bound
xchg
mov
imul
xor
sbb
jo
gs
lea
cs
hlt
jo
or
pop
xor
xchg
add
sub
sahf
insb
dec
clc
pusha
mov
inc
mov
repnz
sub
je
pop
pop
scas
call
int3
fs
push
fsubrl
pop
adc
or
lret
shll
mov
notb
sbb
inc
sbb
lcall
sub
or
aam
fnsave
sbb
mov
loop
jge
mov
xchg
jae
adc
movsl
sarb
add
jbe
sbb
pop
decb
inc
aas
pop
out
dec
add
sbb
mov
xchg
inc
sbb
les
outsl
movsl
xchg
pushl
movsb
mov
ljmp
sbb
loop
mov
lcall
xor
outsb
and
lods
mov
jo
adc
adc
out
dec
sbb
dec
jne
pop
mov
mov
mov
shll
push
popf
xchg
pop
notl
cmp
idiv
movsb
imul
mov
xchg
jo
addr16
mov
outsb
jmp
pop
add
and
imul
lods
in
mov
mov
lds
outsl
roll
pop
std
aas
subl
xchg
decb
mov
jnp
aam
cli
sbb
mov
cmp
xor
xor
xchg
std
sub
movsl
dec
call
out
push
mov
xchg
mov
sbb
push
push
cmc
cmp
lret
enter
adc
out
daa
adc
mov
decb
mov
dec
mov
dec
pop
shlb
cwtl
insl
rep
xchg
rorb
imul
cmp
and
test
cmp
movsl
cmp
call
icebp
sti
xor
pop
subl
mov
push
xor
xchg
jg
xchg
push
lea
ljmp
gs
sarb
lds
sub
test
test
jg
mov
stos
and
and
nop
xorb
icebp
jp
cs
andl
mov
loop
cmp
mov
pop
rolb
outsb
jo
pop
into
jb
lretw
cmc
in
jbe
jbe
push
fimuls
rep
out
add
das
mov
addl
int3
inc
jmp
mov
stos
testb
lods
inc
dec
mov
jle
aad
stc
pop
cmp
inc
adc
inc
adc
lods
mov
jno
cmc
out
fldcw
mov
fucomi
pop
adc
xlat
rorl
sar
outsb
addr16
and
fcmovb
imul
inc
rorl
negl
push
aas
xlat
inc
sub
mov
dec
lea
call
loopne
jb
pusha
lock
es
xchg
popf
rolb
lods
push
stos
jne
lods
out
ficoml
js
xor
imul
cmp
jae,pn
scas
std
lahf
nop
and
jg
pop
pop
scas
push
or
fwait
cmc
scas
push
imul
call
mov
out
ljmp
jp
xor
jecxz
and
jnp
je
mov
aaa
outsl
mov
jmp
les
aam
lds
push
fisttps
out
fnsave
data16
imul
pop
xor
push
arpl
and
dec
inc
scas
int3
and
adc
lahf
xlat
jnp
xchg
or
adc
dec
bound
inc
pushf
sub
push
add
push
lret
mov
mov
jb
jp
pop
inc
inc
sub
push
xchg
add
popa
sti
fsubr
cltd
or
or
mov
sbb
or
push
test
mov
jne
ret
pop
icebp
cmp
and
flds
xchg
into
sub
out
outsl
push
cmp
xchg
jnp
clc
leave
lret
xchg
pop
popf
test
lds
pop
add
pop
inc
int3
insl
adc
xor
test
aaa
push
or
ss
les
aad
or
stos
in
lea
pop
scas
les
movsl
push
outsl
push
nop
div
cltd
fcoml
pop
dec
add
cmp
clc
je
or
scas
movsb
leave
enter
clc
adc
bound
stos
std
inc
inc
lds
mov
sbb
push
ja
fdivrl
cmp
ja
mov
adc
and
mov
mulb
leave
fisubrl
rclb
cmp
enter
push
sbb
dec
xchg
adcb
xor
sbb
jge
lahf
das
xorl
outsb
cmp
push
sarl
insl
pop
cltd
push
mov
xchg
popl
and
popa
jl
mov
gs
movb
stos
jle
ja
mov
fistps
aam
inc
ret
push
outsb
shrb
mov
mov
dec
xor
test
js
pop
fs
jo
mov
mov
and
dec
sbb
jmp
aad
inc
sti
and
add
jle
jbe
in
jp
cmp
iret
leave
xchg
fisttps
cwtl
stc
cli
mov
pop
test
push
mov
fcoml
aaa
mov
loope
loopne
daa
jnp
xchg
outsb
mov
fs
sub
xor
or
cmp
stc
ja
mov
pop
out
pop
cmp
jle
jle
jp
or
sub
inc
in
push
movsb
jb
out
out
leave
fldl
mov
scas
sbb
or
pop
jecxz
fildll
lock
push
inc
cmpsl
imul
aas
cltd
mov
fs
bound
das
lret
je
jne
push
add
jg
mov
sarl
mov
aad
nop
stos
cli
fcomps
cmpsb
shrl
dec
daa
arpl
sahf
cmpsl
gs
or
mov
arpl
add
sbb
xchg
mov
imul
fmulp
pop
add
and
pop
dec
lahf
test
out
sahf
shrl
pop
xchg
mov
pop
mov
enter
repz
mov
movsb
icebp
xor
subl
cmp
pandn
ja
leave
add
js
outsl
iret
shrl
loopne
mov
cwtl
out
fwait
aad
popf
mov
mov
and
pop
daa
daa
inc
inc
adc
mov
jp
jno
dec
repz
nop
and
sub
jle
outsb
mov
pop
pushf
inc
push
shlb
pop
lahf
xchg
mov
bound
mov
daa
jb
xor
push
fwait
mov
cmp
adc
out
jp
inc
inc
jge
lea
mov
das
inc
sbb
jno
add
dec
fmuls
rorb
mov
pushf
inc
and
and
aaa
sub
push
inc
pop
jp
sbb
xor
stos
mov
enter
jge
cmp
test
test
jge
outsb
or
mov
in
xchg
push
test
outsb
popa
mov
inc
and
pop
jl
sub
pop
mov
pop
in
stos
ret
or
jnp
ljmp
in
or
jp
push
push
outsl
ljmp
mov
clc
aaa
rcrl
add
loop
push
and
xchg
lods
icebp
out
int3
jl
xorb
ja
cltd
sub
jle
xchg
mov
cmp
data16
loope
test
inc
and
push
ss
mov
cmp
addr16
mov
or
insl
xchg
movsl
fcmovnb
in
call
movsl
popf
mov
subb
xchg
pop
push
fnstenv
adc
cmp
dec
ss
or
xchg
imul
add
push
fwait
adc
adc
call
sub
add
xchg
fcomp
or
sub
ja
jle
xor
sub
xchg
xorb
push
sahf
jle
jae,pn
jns
and
cmpsl
in
adc
scas
ficoms
mov
cmp
pop
xlat
push
jl
pushf
negb
add
jge
pop
mov
mov
xor
test
icebp
mov
push
mov
insb
mov
pop
sub
loope
pop
mov
mov
dec
mov
dec
lock
cmpsb
mov
mov
add
ret
lods
shll
cmc
divb
jl
xchg
call
int3
movd
repz
sbb
xor
mov
cmp
xor
mov
pusha
cmpsl
fcmovbe
lea
push
test
cltd
loop
sub
cmp
js
data16
add
xchg
mov
je
test
std
cld
jns
push
repnz
and
sbb
mov
push
in
add
and
in
outsl
hlt
mov
jge
sub
dec
out
and
stos
ror
sbb
add
xchg
or
add
addr16
pusha
jge
shlb
jge
and
rolb
mov
adcl
pusha
sbb
dec
inc
mov
jge
sub
add
xchg
mov
jo
sbb
mov
dec
cwtl
sub
push
dec
daa
test
xor
jle
imul
xchg
xchg
jb
sbb
js
insb
cmc
cwtl
push
adc
inc
rol
adc
ret
cmpsl
pop
lock
dec
push
mov
test
adc
int
xor
sub
out
mov
sub
das
hlt
shrl
cltd
std
int3
jb
jno
push
repz
add
sbb
add
insb
xlat
jp
leave
movsb
hlt
inc
fdivl
cwtl
and
sahf
shrb
shrb
imul
inc
sub
pop
sbb
gs
sub
mov
fsts
incl
and
fists
repz
lods
frstor
dec
and
xor
cmpsl
cltd
dec
and
or
lds
int3
test
std
xchg
rcll
jge
sub
mov
enter
outsl
pop
mov
jnp
xchg
insl
jg
cmp
xor
xor
jne
div
pop
push
popf
imul
jle
sti
add
in
jp
lock
jo
xchg
push
jns
cmp
ss
fwait
stos
outsl
jo
adc
andl
call
cmp
push
adc
cmpsb
leave
jmp
push
xchg
adc
inc
test
repz
mov
nop
leave
int
aad
test
pop
inc
rcrb
arpl
stos
scas
mov
shlb
add
aad
inc
mov
push
fisttpll
imul
jle
stc
fadds
lahf
jg
icebp
pop
movsl
fdivrs
insb
aad
nop
and
mov
mov
inc
loop
push
inc
mov
push
sub
jmp
push
or
sub
jmp
aas
pop
mov
dec
jno
sub
and
dec
jg
mov
sbb
repnz
mov
mov
rcrl
jmp
es
sbb
and
jp
loopne
testl
filds
push
and
loope
mov
sbb
stos
add
stc
and
ret
mov
test
into
push
ret
pushf
lahf
gs
add
adc
push
lock
ja
mov
and
sbb
mov
and
adc
and
sub
cmpsb
sub
repz
leave
jg
jno
jno
sbbb
push
cld
adc
aas
push
jb
pusha
cmpsb
shrb
xor
invd
jmp
sub
add
add
jne
sub
add
mov
xchg
and
push
sbb
pop
leave
flds
shlb
dec
mov
hlt
cmp
xchg
pop
xchg
test
push
sub
cmpsb
jmp
into
add
lret
dec
pop
jb
or
lea
pop
mov
outsl
shl
sbb
ret
sahf
divb
out
cmpsl
or
ret
push
mov
divb
mov
xlat
or
dec
add
push
or
gs
out
add
inc
inc
insb
test
add
andb
cmp
adc
and
lret
loopne
jge
sub
gs
xorb
inc
cmp
jmp
pop
mov
lods
jb
mov
je
lods
jo
ss
gs
xchg
push
scas
inc
nop
lds
negb
in
mov
nop
div
enter
imul
pop
sub
mov
sub
mov
adc
dec
inc
xchg
sub
or
pop
push
pop
cmc
mov
fidivrl
inc
int3
mov
dec
cld
jno
cs
andl
scas
bound
mov
test
mov
xor
fwait
popa
cmp
adc
mov
js
arpl
hlt
adc
pop
sub
pop
adc
pop
xor
dec
jb
push
mov
aas
jecxz
icebp
adc
int
xchg
pop
pop
loopne
lcall
das
mov
push
pop
int
fsts
adc
cmp
das
popa
rcr
mov
xchg
enter
xchg
movsb
push
cmp
mov
shrb
lods
cmc
mov
popf
mov
cmc
shll
cmp
fs
jmp
push
xor
aam
cltd
rclb
not
pop
scas
push
pop
xor
jmp
inc
xor
icebp
leave
leave
rcll
push
test
out
and
ja
cwtl
cld
dec
mov
popa
int
mov
and
aaa
push
jno,pt
orb
add
xchg
sub
gs
push
and
push
stos
dec
pop
mov
or
and
andl
std
sbbb
cmp
popa
lret
jle
jge
repnz
pop
cmp
out
inc
and
dec
sub
add
or
and
dec
movsl
xchg
push
sbb
scas
inc
jmp
xchg
cmpsl
mov
lahf
es
sarl
xor
movsb
pop
ds
lods
enter
xchg
add
dec
dec
and
stos
rcr
loopne
pop
and
inc
das
outsb
adc
xchg
sub
mov
xor
sti
push
cli
dec
sbb
dec
imul
mov
xchg
sub
sbb
pop
mov
cwtl
idivb
out
ja
push
push
mov
pop
push
dec
add
fdivrs
arpl
xor
mov
or
jns
sbb
adc
movsb
leave
or
add
fsts
insl
arpl
dec
mov
add
add
add
jno
arpl
pop
jmp
push
or
xadd
int
scas
xchg
pop
dec
andl
or
sahf
jae
xchg
pop
cs
loopne
pop
adc
sbb
add
outsl
mov
pop
int
test
addl
inc
jae
addl
bound
ljmp
push
sub
jb
pop
ret
xchg
and
imul
and
and
and
lahf
pushf
out
clc
mov
and
jle
add
mov
out
aad
pop
xchg
or
jmp
jnp
lret
sub
xorl
pop
lret
xor
popa
cmpsb
mov
daa
adc
pushf
int
icebp
xor
inc
sub
xlat
repz
cmp
stc
dec
and
sahf
outsl
mov
je
notb
and
test
int
mov
cs
call
adc
inc
cmp
fsubrs
enter
cmc
iret
fistpll
rolb
xchg
cmp
aas
cmp
fnsave
pop
ret
xor
add
inc
int3
jmp
mov
or
adc
or
xchg
jo
or
dec
and
inc
mov
cmp
das
subb
xor
out
inc
dec
push
movsl
in
test
inc
shll
fistpl
adc
ss
mov
aam
frstor
sbb
jg
mov
mov
push
jmp
rclb
jmp
loop
and
xchg
inc
adc
adc
jecxz
cmpsb
add
adc
adcl
pop
in
xchg
adc
dec
lds
mov
sbb
cwtl
cmp
cmp
cs
iret
pop
pushf
add
sub
xchg
mov
cmp
push
adcb
pop
add
loop
into
sarl
jo
jb
outsb
pop
add
hlt
fstps
mov
aad
popa
inc
and
jl
xchg
or
inc
imul
push
repnz
loope
out
mov
and
cmp
xor
arpl
mov
mov
loop
pushf
repz
orb
int3
push
aad
lods
sub
lea
cmpsl
jge
xchg
fbld
sub
fdivp
jle
cmp
inc
divb
xor
sbb
and
xor
cltd
test
cmp
jmp
nop
mov
sbb
outsl
sub
sbb
mov
adc
inc
sub
or
ljmp
ret
cmp
fldenv
dec
lds
inc
dec
or
jecxz
cmp
lret
adc
dec
sbb
stc
sub
dec
add
sbb
jecxz
push
dec
pop
and
cmp
icebp
inc
cmpl
or
mov
sub
and
lcall
shll
jp
mov
add
adc
repz
push
jecxz
lret
cld
jo
iret
or
stos
push
idivb
jle
inc
test
xor
scas
xchg
inc
add
shrb
jp
lods
mov
xlat
mov
cmp
sbb
rcll
stos
jg
xchg
fs
or
mov
pop
push
mov
repnz
repz
ljmp
inc
push
cli
inc
mov
pop
or
pop
inc
cmp
cmp
aad
lods
dec
jb
fxch
sbb
inc
fwait
jno
adc
addr16
jmp
cmc
aad
rclb
cmpsb
cmpsb
dec
push
mov
data16
ret
test
or
pop
mov
mov
inc
or
repz
and
stc
mov
out
mov
lahf
jnp
add
push
or
xor
mov
aas
xor
mov
popa
test
pop
sub
dec
fiadds
mov
sbb
imul
sarb
sub
jns
dec
sub
repz
mov
adcb
sub
subl
out
pushf
xchg
dec
jb
sbb
add
and
imul
dec
dec
ret
lahf
xchg
stos
lods
push
loope
sbb
subb
jnp
dec
leave
xor
leave
int
and
adc
sbb
jo
insl
push
pop
pop
fsts
cmpsl
aam
imul
adc
sbb
mov
mov
xor
stos
test
mov
pop
dec
push
xor
scas
cwtl
dec
call
mov
mov
mov
sbb
pop
mov
add
and
add
xchg
inc
or
scas
mov
or
insb
sub
lahf
sbb
ret
cmp
shll
xchg
inc
inc
push
cs
sbb
addr16
add
fwait
push
sbbl
jo
inc
jb
mov
cmp
sub
stos
mov
xor
sub
add
nop
pop
lcall
adc
or
gs
cli
mov
lock
js
xchg
aas
lret
jns
xor
or
dec
pusha
pop
sub
xor
cwtl
push
jmp
push
test
cld
out
xchg
inc
lds
cmpsb
cld
mov
mov
shrl
outsl
add
cmpb
out
mov
nop
lret
push
and
mov
adc
add
or
loop
dec
xor
sbb
std
xchg
push
adc
adc
and
cmp
mov
test
enter
mov
loopne
dec
inc
xor
add
inc
movsl
pop
xor
mov
or
mov
fcom
test
stc
mov
inc
and
aas
repnz
pop
adc
jle
fidivs
sar
xchg
cld
iret
jge
sub
hlt
pop
and
repz
es
insb
imul
or
movsb
ljmp
aas
jb
xor
ret
adc
loop
push
out
movsb
adc
adc
ljmp
sub
sub
mov
add
xchg
popa
pop
sub
mov
xchg
lock
mov
push
cmpsl
lock
mov
xchg
xchg
xchg
sub
decb
dec
mov
addb
or
xor
and
das
fmuls
call
cmp
fwait
jecxz
mov
or
icebp
fs
xor
or
xchg
push
mov
fs
movsl
jb
mov
bswap
mov
in
ftst
adc
mov
popa
sbb
cmp
out
or
mov
fwait
mov
mov
je
jle
mov
pushf
push
inc
push
prefetchnta
lock
hlt
pushf
push
lcall
pop
call
sub
xor
icebp
xrelease
out
arpl
cmc
cmp
js
inc
std
pop
repnz
or
jb
cmp
and
fbld
imulb
mov
jnp
icebp
xchg
sub
jnp
cwtl
jb
push
push
mov
or
insl
rcrb
movsb
cmp
mov
orl
pop
out
mov
jecxz
or
cmp
cli
add
or
jle
test
xor
xchg
mov
jno
test
cmp
bound
pop
xchg
jg
mov
mov
xor
in
xchg
sarb
movl
mov
mov
pop
or
push
sar
mov
adc
subl
push
xor
out
lcall
les
inc
xor
out
out
mov
fsubl
fisubs
xchg
push
in
lret
inc
fs
into
test
dec
out
mov
cmpsl
popa
dec
dec
les
addr16
mov
dec
xor
and
testl
sub
les
fistps
inc
scas
inc
or
cld
jl
popf
sbbl
adc
mov
fdivs
shll
pop
in
rolb
jnp
rcrb
imul
push
mov
ja
data16
repz
adc
in
jae
stos
push
mov
add
imul
jbe
cmp
inc
idivl
mov
pop
add
xchg
enter
jmp
lahf
mov
mov
adc
xchg
pusha
jmp
in
or
mov
pop
mov
hlt
jae
adc
sub
test
lret
andl
lock
stc
lock
repnz
cmpsl
mov
xor
inc
nop
shl
cltd
mov
add
and
xlat
inc
movb
or
lods
jecxz
jb
cmpsl
pop
mov
mov
sbb
cmpsb
and
sub
cltd
xchg
cld
insl
outsl
daa
js
push
insl
xor
or
outsl
lcall
jo
inc
sbb
sub
imul
xchg
mov
test
aaa
jnp
subl
push
xchg
loop
mov
stos
xlat
mov
ret
mov
sbb
out
movsb
loopne
lea
mov
mov
shl
sbb
inc
adc
mov
inc
jne
enter
test
lods
xchg
push
xchg
imul
dec
push
test
div
xor
in
test
or
fstpl
sub
ficomps
jbe
push
cmp
add
cmpsb
xchg
loopne
movsl
xor
mov
dec
rolb
aad
adc
outsb
in
inc
shll
iret
lea
call
pop
and
jbe
cli
fwait
xchg
scas
cld
dec
clc
addl
add
scas
xlat
ret
sbb
mov
sbbl
pop
or
int
insl
sbb
jge
imul
xchg
push
inc
js
imul
shl
xor
mov
ds
outsb
push
mov
insl
std
pop
xchg
ss
pop
mov
and
mov
mov
xlat
sti
ficompl
dec
repz
and
mov
add
jp
scas
mov
bound
cmp
mov
add
repz
pop
inc
and
cmp
fdivrs
pop
pop
and
outsl
mov
xor
ljmp
mov
or
pop
dec
or
lds
add
sub
cltd
inc
mov
push
gs
or
add
in
cld
mov
int3
sub
jp
sbb
or
fldcw
loope
adc
iret
mov
xchg
mov
fstp
lret
push
stos
insl
ret
ret
fucomi
lock
call
lret
out
ret
imul
in
js
lret
push
dec
jb
inc
out
pop
jmp
movsl
shl
or
inc
ret
jmp
ljmp
adc
sbb
repz
shrl
xchg
lea
push
das
imul
mov
xchg
lcall
sti
insb
push
jmp
push
fs
push
cmp
add
gs
xchg
sub
and
adc
test
sti
mov
pushf
insl
inc
ss
mov
sbb
mov
mov
pop
dec
mov
adc
and
jns
sahf
cltd
dec
loop
std
pop
cmp
lcall
std
add
jg
mov
sub
mov
mov
js
add
shl
push
and
xchg
sbb
xchg
sbb
mov
idiv
inc
ret
pop
test
in
dec
xor
sbb
push
xchg
jecxz
inc
aaa
jo
aad
dec
pusha
addr16
fstpl
pop
cmpsl
sbb
cmpsl
add
and
add
mov
pop
or
push
xchg
mov
in
xorl
jno
leave
mov
pop
sbb
cmpsb
in
icebp
mov
in
sub
push
or
jle
cmpsl
dec
int
xchg
js
or
fbstp
xor
jl
pop
mov
loopne
popf
sbb
inc
push
jo
mov
pop
push
and
fdivrl
inc
stos
pop
js
or
js
inc
test
iret
mov
jge
xor
aam
shll
test
in
sub
jp
cmpsb
cmp
mov
out
repnz
loope
arpl
mov
in
rcrl
cs
mov
dec
push
xor
subps
mov
inc
mov
std
mov
cmpl
ds
in
sbb
rclb
push
push
xor
data16
in
inc
add
xor
scas
mov
inc
in
arpl
andl
push
xchg
fildll
push
mov
test
ds
xorl
push
fisttpl
fldenv
xchg
and
ret
icebp
xchg
adc
sub
jmp
dec
or
lds
adc
cmp
fidivs
sbb
div
adc
repz
dec
in
add
fwait
shlb
rolb
push
mov
pop
jb
sti
dec
scas
pop
int
aad
shl
cmp
lahf
push
jnp
sub
retw
add
jecxz
xchg
cmp
iret
rcr
mov
stc
sbb
pop
sub
jecxz
dec
mov
cmc
adc
add
mov
jecxz
pushf
or
mov
mov
ss
scas
out
test
sub
insl
sbb
jmp
mov
add
insl
ss
and
jbe
xor
mov
ret
push
mov
pop
jge
pop
jg
mov
movsl
xchg
out
mov
sbb
cmpsl
fbld
mov
rorb
sbb
mov
inc
pop
fisttpl
push
sbb
lds
push
addb
sahf
adc
push
xorb
repnz
movups
jns
stc
pop
dec
ljmp
lods
movsl
xchg
cmp
shlb
jp
jmp
xor
mov
dec
jmp
punpcklbw
jns
nop
negl
mov
or
cmpsl
push
ret
sbb
pop
mov
jg
mov
cmpsl
inc
xor
loopne
mov
xchg
push
enter
mov
stos
dec
cwtl
sbb
inc
and
mov
gs
lock
pop
mov
stos
pop
pop
jne
sub
push
and
fadds
mov
lret
out
data16
cs
cmpsb
popf
pop
mov
jge
jnp
jp
mov
ret
mov
testl
jne
lods
stos
sub
mov
in
push
or
and
in
pop
mov
pop
bound
stos
daa
rorl
inc
cmpsb
popa
fs
fistl
mov
adc
mov
sbbl
out
inc
scas
cli
cmp
jp
outsl
std
fcompl
push
mov
and
ja
pushf
scas
pop
ret
xlat
lods
mov
mov
shrb
push
fnstsw
lret
out
nop
ja
push
or
cli
cmp
xor
popa
xorb
shrb
ja
shll
jl
lods
push
sahf
test
outsb
lret
push
cmp
mov
push
pop
sbb
lock
loopne
subl
lods
out
mov
sub
insb
jae
into
jge
push
cwtl
mov
pop
dec
fstpt
inc
jo
adc
inc
sbbb
nop
xchg
or
popl
loop
rolb
iret
push
or
jle
lret
adc
adc
or
inc
lea
xchg
movsl
call
arpl
shll
xchg
push
mov
fstl
adc
inc
pop
insl
aas
push
sub
xor
rcrl
jo
push
push
inc
inc
mov
mov
inc
cwtl
loopne
mov
icebp
cmp
ljmp
dec
scas
and
push
jecxz
sub
loopne
das
sti
orb
mov
sbb
dec
insl
mov
xchg
add
xchg
jbe
lods
dec
mov
pop
mov
add
repz
pop
or
cmp
and
push
pop
xor
cmpsl
mov
insl
sub
std
or
in
imul
pusha
enter
sub
loope
cmpsl
mov
dec
shl
loop
push
shll
sbb
inc
dec
orb
mov
stos
cwtl
loopne
in
jg
movsb
push
inc
pop
cld
in
lcall
insl
push
push
pop
adc
mov
push
int3
pop
ror
jb
or
cli
pop
mov
ja
in
jecxz
mov
jle
jmp
leave
jmp
xchg
es
mov
clc
dec
rol
in
movsb
mov
pop
rcr
sub
cs
in
mov
insb
lods
push
lods
adc
dec
stos
jg
bsf
cld
cltd
lret
shrl
lods
aam
je
leave
inc
xor
pop
mov
cwtl
fldcw
hlt
jge
sub
test
add
mov
call
or
out
test
subl
pop
push
scas
xor
mov
cltd
pop
popf
or
or
shll
cmp
cmp
pop
sub
shrl
fwait
xchg
push
adc
mov
mov
aad
mov
mov
dec
stc
mov
mov
mov
adc
movsb
jecxz
push
xor
cmp
mov
rcrl
icebp
add
jnp
push
jnp
lret
es
mov
xor
adc
jne
arpl
ret
jle
rolb
xchg
outsb
and
cmp
dec
mull
lods
push
push
je
pop
lea
imul
leave
repz
mov
mov
ljmp
stos
ss
cmpb
test
fistpl
mov
mov
mov
pop
pop
in
mov
fisubrl
push
or
cwtl
xchg
mov
sbbl
mov
or
test
or
pushf
pop
pop
jl
pop
push
inc
xlat
daa
call
sbb
fldcw
inc
xor
jne
std
sti
test
pop
test
push
testl
sub
adc
imul
mov
mov
jge
fucomip
fs
cld
sub
push
xchg
dec
lcall
mov
sahf
subb
cmpxchg
iret
ja
clc
decb
inc
cmp
cs
in
push
movsl
popa
outsl
imul
add
insb
jo
into
jmp
test
loope
xorps
pop
out
jae
fdivrl
repz
jge
pop
push
pop
in
inc
scas
loopne
lahf
repz
cmp
out
pop
push
cmpsl
and
push
test
pop
out
out
mov
call
subl
aad
mov
movsb
popa
lods
xor
cmovbe
xchg
pushl
add
jb
andl
jmp
pop
jo
ja
pop
mov
dec
push
loop
data16
divl
inc
shrl
lret
mov
aam
je
icebp
dec
out
addr16
fstl
adc
fnstcw
rep
sub
push
inc
fisubrl
negl
loop
sub
adc
and
mov
ficompl
dec
adc
jg
push
int3
dec
push
ret
dec
mov
xchg
pop
sbb
sbb
popa
fchs
mov
add
cmp
jbe
push
std
fmuls
dec
pop
into
sahf
add
add
or
adcl
cmc
add
sarl
adc
cld
jne
mov
jbe
add
mov
aam
leave
push
imul
enter
repz
ret
push
test
dec
lods
push
leave
jl
cmpsb
or
add
fnstsw
aam
pop
or
bound
xor
and
pop
xchg
loope
lods
movsl
int
insl
lret
or
xchg
notl
cmpsb
out
jb
in
dec
adc
lcall
scas
pop
add
in
push
sbb
into
dec
clc
sub
ss
test
xchg
das
xchg
push
push
inc
pop
std
fbstp
test
in
aaa
cmpsl
xor
cld
cmpsb
xchg
mov
push
jbe
xchg
mov
add
jo
lods
push
scas
mov
scas
ret
out
or
hlt
xchg
jae
push
bound
and
add
jbe
or
shrb
fdivp
pop
in
xchg
fidivrl
jae
xorl
ret
xor
dec
pushf
jbe
push
pop
or
push
ret
lahf
adc
xchg
jle
loopne
fidivl
mov
rcl
cmp
xor
enter
sbb
jns
fidivs
adc
xor
aad
outsl
negb
nop
icebp
ficoms
fsubrp
push
mov
imul
movsl
notb
test
mov
insb
arpl
push
stos
dec
fimuls
mov
sbb
mov
sbbl
rcrb
scas
inc
scas
das
movsl
add
jae
int3
sub
fstpl
aaa
adc
js
test
inc
scas
jp
dec
pop
or
mov
and
pop
leave
xchg
sbb
lret
rclb
mov
popa
scas
iret
pop
mov
iret
aam
rcrb
push
mov
std
dec
push
push
jae
subl
pop
and
in
cmpsl
stos
xchg
sbb
es
pop
out
push
inc
in
push
push
jbe
fsubs
cmp
cwtl
test
das
mov
leave
adc
push
jb
cmpsb
jbe
in
push
mov
mov
pop
mov
pop
push
roll
sbb
outsl
and
and
loopne
inc
popf
sub
sub
aaa
push
or
inc
add
adc
mov
dec
jl
mov
jno
out
dec
inc
jmp
stos
inc
sbb
mov
mov
pop
aas
fwait
nop
mov
and
and
sub
push
jb
sub
das
call
jae
fwait
scas
inc
lds
sbb
sbb
xchg
sahf
push
and
and
xor
dec
icebp
in
jnp
aad
stos
jmp
or
lret
inc
lret
push
mov
mov
scas
xor
or
and
jge
sbb
imul
and
jne
test
in
or
in
push
jne
sti
and
dec
jl
and
ja
cmp
and
sbb
aam
icebp
sub
aaa
rolb
push
cmc
fisubl
or
pop
sbb
xor
pop
arpl
rclb
sarb
lcall
dec
cld
mov
cmp
adc
jmp
cmc
icebp
lods
hlt
mov
popa
inc
mov
lcall
and
add
repz
add
add
sbb
shlb
push
lcall
jmp
mov
pop
pop
and
jge
in
push
push
mov
pop
or
jo
pop
repz
xchg
aaa
xchg
ljmp
xorb
lea
lcall
mov
mov
pusha
loope
ret
push
test
mov
repnz
jp
xor
mov
mov
mov
pop
pop
pop
push
lea
push
mov
in
mov
pop
scas
dec
cmc
dec
arpl
mov
mov
inc
idivb
subb
add
mov
dec
and
pushf
push
call
sbb
dec
mov
out
scas
scas
cli
adc
dec
add
daa
sub
js
adc
lods
icebp
mov
adc
pusha
movsb
fimull
lcall
add
in
jl
movaps
add
stos
lcall
movsl
mov
cmp
sbb
adc
xchg
xchg
pop
clc
lods
push
push
lret
push
scas
push
lea
sub
es
mov
hlt
xor
push
dec
mov
cmpsl
inc
loop
movsb
insb
push
cmpsl
mov
or
xor
data16
mov
sbb
lret
insb
jge
nop
push
push
cs
iret
cli
dec
or
scas
idivb
pop
in
cmp
xchg
pop
mov
or
xor
test
cltd
xchg
pop
inc
dec
ja
inc
push
xor
sub
push
or
subb
sub
push
loope
fistpll
cli
dec
cmp
lods
out
adc
sub
sbb
negb
push
push
test
ljmp
mov
aaa
out
mov
mov
ficompl
aas
jmp
sti
xlat
push
ret
lret
insl
xor
or
xchg
std
in
pop
mov
fld
cwtl
inc
inc
sub
push
pop
fdivrs
repz
push
cmc
rorb
hlt
nop
or
xchg
leave
add
sbb
mov
pop
sub
popf
insl
sub
inc
mov
mov
mov
pushl
push
mov
call
and
xlat
addb
leave
add
hlt
lods
in
lods
xlat
ss
mov
adc
shl
stc
mov
std
sub
sbb
mov
lret
ja
adc
stos
dec
push
push
mov
aad
into
cmp
jmp
sub
pop
popa
sbb
aad
repnz
sarb
mov
sub
movsb
stc
add
dec
sbb
jbe
add
fwait
mov
mov
loopne
and
stc
xchg
mov
xlat
xchg
xor
pop
hlt
mov
jns
cmpsl
sbb
or
fldenv
mov
sub
das
lcall
inc
loopne
fiadds
and
xchg
inc
dec
push
pusha
push
js
cld
movsb
fstpl
push
xlat
roll
leave
xor
adc
adc
and
or
xchg
notl
add
cmp
or
push
or
fnstenv
ret
xchg
inc
mov
xchg
jle
shlb
sbb
fidivs
or
lods
xor
add
inc
cld
pop
push
sbb
mov
pop
fwait
xchg
lahf
jmp
data16
mov
dec
sub
xor
ja
les
sarl
fcmovb
lret
mov
sbb
fistps
sub
mov
sub
subl
in
test
bound
test
add
in
adc
in
sahf
jmp
shll
cwtl
add
push
jb
lock
fisubs
add
adc
mov
in
cmp
std
mov
and
push
out
out
push
inc
sbb
jl
lds
stc
cmpsl
sbb
loop
dec
loope
cld
push
cwtl
jne
push
enter
das
mov
push
xor
jmp
mov
repnz
xor
call
test
lret
mov
dec
mov
shrb
or
rclb
nop
jae
add
adc
lret
call
mov
insl
pop
stc
call
loop
inc
push
mov
push
hlt
sbbl
pop
cmc
std
repnz
fcoms
mov
rclb
mov
insb
lds
rcl
inc
xchg
sub
lret
push
rclb
sub
jne
xor
cmp
mov
add
dec
out
sbbb
nop
clc
scas
sete
adc
pusha
mov
dec
cmp
jmp
mov
out
int
popa
dec
ss
test
sub
or
jno
mov
ret
xorb
or
insb
out
mov
dec
fmul
or
rcrb
out
mov
ret
stos
push
push
jb
xor
mov
rcrb
pop
push
pop
aam
stc
or
lock
stos
jl
das
adc
push
out
out
aad
les
pop
jmp
test
loopne
push
loopne
insl
cs
scas
jp
lock
mov
adcl
icebp
push
ret
aam
mov
xchg
pushf
adc
adc
jp
sub
popf
pop
sub
test
ja
out
out
nop
push
pop
push
push
and
rolb
jns
adc
xchg
fists
mov
popa
add
mov
nop
or
push
sets
ror
cmp
mov
pop
icebp
xor
lret
inc
pop
push
cld
fnsave
mov
xlat
push
xchg
repnz
mov
mov
mov
pop
imul
jbe
sbb
cmpsl
addr16
mov
and
push
pop
and
pusha
jp
mov
fsubrl
jns
cmp
sbb
and
dec
lahf
int3
mul
lods
pop
sbb
lods
pop
mov
enter
imul
mov
mov
cmp
int3
xsha1
cmpsb
mov
cwtl
mov
scas
int
push
mov
into
cltd
xchg
dec
into
cmpsb
sbb
push
iret
push
adc
and
pop
mul
loop
and
repz
jmp
push
jns
aaa
in
negb
cmpsl
lret
loop
lret
inc
dec
cmp
push
int
movsl
push
add
add
add
arpl
or
lods
sbb
sahf
mov
mov
pop
leave
push
out
shll
cmp
push
mov
push
lds
jmp
cmpsb
fiaddl
test
ret
pushf
fwait
xchg
aas
mov
mov
or
bound
pop
mov
adc
scas
dec
mov
inc
mov
lods
in
push
fcmovne
jp
mov
sub
fsubs
hlt
lods
jbe
mov
addl
lds
mov
mov
dec
fmul
push
mov
push
popf
pop
and
or
mov
arpl
call
lcall
popf
lea
lea
sahf
xchg
inc
xchg
popa
or
mov
dec
inc
nop
mov
pop
aas
and
jne
leave
fdivs
insl
mov
cwtl
jle
dec
inc
sahf
pop
repz
and
imul
xor
adc
repnz
cmp
add
imul
inc
ret
jecxz
inc
or
xor
faddl
dec
jmp
xchg
cltd
js
inc
jle
rolb
xor
fidivs
add
sti
jp
popf
ja
imul
insb
imul
add
jl
nop
in
subb
iret
sbb
jne
gs
arpl
aaa
inc
cmp
outsb
pusha
stos
jb,pn
insb
sub
cmpsl
cmp
lds
add
and
repz
jge
xchg
pushf
mov
xchg
xor
lods
jecxz
shll
lods
fldl
cmc
lock
lcall
or
add
push
mov
or
add
aam
sti
popf
jae
dec
mov
push
jge
cld
dec
or
stc
sahf
xor
imul
cmpsl
ror
push
mov
jb
into
xor
icebp
out
lds
je
sub
sarl
push
push
clc
aam
rclb
fsubl
cmp
and
ljmp
iret
test
ficoms
ljmp
mov
scas
mov
sbb
jnp
cli
and
and
dec
xchg
std
cli
aad
hlt
ret
push
inc
ljmp
mov
mov
mov
mov
push
adc
lods
addr16
flds
movsb
iret
cmpsl
pop
inc
cmp
adc
clc
popl
and
orb
stos
mov
cld
mov
js
push
and
mov
jmp
data16
lret
cmp
add
icebp
mov
or
mov
mov
cmp
sub
popa
mov
jge
in
cmpsl
and
mov
sub
loopne
xchg
dec
lods
pop
xor
lea
popf
jp
mov
or
inc
mov
mov
jb
adc
outsb
lea
imul
xor
inc
insb
aaa
mov
fisubrl
push
jns
dec
aam
pop
stos
xchg
aam
push
sarl
andl
movl
pop
pop
xor
mov
outsl
xchg
adc
cmp
xor
xchg
mov
jl
loopne
mov
mov
sbb
or
not
inc
mov
adc
push
daa
jns
sbb
sbb
fsubrl
lahf
shll
lods
ss
xchg
mov
and
adc
adc
push
lret
lods
nop
mov
push
sbb
dec
dec
out
cs
dec
pusha
jg
std
call
daa
add
insb
scas
popf
cli
rcrb
cmp
mov
pop
or
mov
sahf
adc
and
pusha
jno
dec
cmp
xlat
pop
sbb
into
lea
or
add
cmpsl
push
in
push
mov
inc
push
sahf
xchg
pop
das
pop
push
sti
inc
fdivs
inc
dec
in
push
leave
adc
scas
xchg
sbb
adc
lea
mov
mov
out
xchg
aam
seto
pusha
pop
nop
aam
sbb
jg
jmp
push
xor
notb
loope
push
mov
cmp
aas
leave
xchg
adc
movsl
jae
xchg
daa
repnz
and
and
mov
push
out
sub
stc
test
push
pop
cli
enter
xchg
or
and
pop
pop
fldcw
or
jae
and
jo
adc
mov
mov
ret
push
fmul
fwait
xchg
add
push
addr16
xchg
test
aaa
cmp
scas
ds
lcall
cwtl
push
addr16
js
and
push
dec
sub
dec
or
je
push
cwtl
pop
jbe
add
xchg
jl
push
dec
pusha
inc
xchg
into
fdivrp
xchg
push
sbb
add
movhps
shrl
cmc
pop
cmp
jns
stc
jns
add
pop
cmp
mov
mov
repz
enter
push
xor
and
mov
fisubs
test
fcomip
mov
dec
stos
add
movntps
out
sbb
pop
fiadds
cmc
lds
nop
sbb
test
mov
out
shll
cmp
xor
icebp
aad
sbb
mov
pop
sub
jl
mov
cmp
pop
and
subb
add
call
dec
lea
sbb
movsb
or
aam
mov
ss
fldl
ret
fsts
rcl
shrb
jg
push
sub
clc
mov
sub
and
add
mov
mov
out
pushf
bound
imul
adc
add
sahf
loopne
int3
jmp
xchg
add
pop
mov
pop
daa
mov
xor
adc
push
aas
cmpsl
adc
insl
add
clc
mov
jae
xchg
mov
adc
lret
gs
mov
cmpsb
adc
inc
jp
jg
jb
ja
dec
or
mov
stos
inc
movsl
add
cs
fstl
ds
mov
xchg
push
adc
cmp
outsb
bnd
int
jns
in
movsb
add
orl
sub
dec
inc
popa
lea
push
add
clc
sbbl
mov
or
inc
cmpsl
cmp
gs
test
push
nop
adc
add
or
outsb
adc
pusha
pop
int3
out
aas
push
enter
mov
pop
adc
cld
cmp
ret
pop
lods
add
cmpsb
in
shlb
pop
lods
cmpsl
ret
es
fldt
mov
cmp
sub
lea
inc
mov
sarl
or
imul
adc
mov
push
scas
iret
in
sarb
jns
insb
adc
subb
hlt
aaa
leave
inc
or
sbb
add
repz
jnp
adc
repz
sub
mov
inc
xor
rclb
test
mov
inc
pop
js
add
cs
lret
out
jl
push
xchg
dec
roll
sbb
fistpl
mov
dec
aas
imul
add
inc
mov
mov
pop
sub
jl
xchg
lods
mov
sub
mov
xchg
aad
or
cmp
addr16
ljmp
fildl
rcrb
mov
add
jo
stc
lock
imul
sub
arpl
fists
into
xor
adc
or
mov
cwtl
js
mov
aaa
mov
insb
jp
rcll
lea
and
orb
mulb
shlb
mov
add
in
sub
dec
push
mov
mov
mov
xor
test
add
or
dec
lea
pop
push
sbb
jbe
aas
bound
insl
in
jmp
mov
xor
out
mov
sarl
fdivp
push
jnp
jbe
lret
pop
loope
jle
xlat
pusha
xor
add
int3
xchg
cld
adc
das
jns
push
xchg
cwtl
dec
shll
pushf
jle
push
and
jae
mov
das
push
mov
cltd
or
stc
pushf
mov
or
nop
das
add
sub
fldl
cmp
loop
xor
adc
mov
out
add
aad
fucomp
sbb
pop
repz
mov
sahf
push
cmpsl
xor
inc
jmp
lret
cmp
xor
push
or
fdivl
jecxz
pop
lahf
cmp
pop
xchg
mov
sahf
and
lcall
rorb
je
add
loope
pushf
lcall
mov
call
pop
push
clc
jae
jns
cmp
jb
push
loope
dec
xor
or
out
aam
cmp
add
inc
orl
ret
add
inc
mov
sbb
adc
xchg
sub
out
and
pop
xchg
mov
ljmp
mov
jns
adc
scas
daa
xchg
inc
and
jbe
jae
inc
xlat
in
mov
pop
mov
mov
shll
pop
test
xchg
cwtl
mov
loop
inc
sbb
jo
inc
xchg
popf
fs
outsb
push
scas
lea
negb
cmp
pushl
xlat
pop
mov
jmp
lods
insl
out
sar
in
popa
dec
mov
shl
xor
flds
hlt
inc
push
dec
movsb
cmp
daa
inc
and
sbb
mov
test
mov
fisttpll
movsb
imul
inc
or
test
pop
and
imul
cmpl
sub
jmp
cmp
rcrl
push
bound
dec
out
cs
mov
addr16
mov
mov
cltd
test
decb
cmpsl
sarb
sbb
icebp
jmp
aam
xchg
imul
js
adc
inc
jne
les
ja
inc
mov
and
test
cs
adc
pop
incl
xlat
mov
fcoml
out
fsubrs
fcmovb
sti
daa
push
inc
mov
scas
inc
gs
jl
jbe
lret
mov
inc
cltd
jecxz
add
ss
sbb
call
or
pop
gs
imull
cmpsl
leave
test
jns
adc
mov
jle
sbb
and
outsl
mov
int
or
inc
in
push
mov
test
and
mov
pusha
xor
sbb
jo
scas
pushf
testl
and
push
mov
lahf
test
pop
repz
push
cmp
clc
dec
loopne
lcall
cmp
mov
test
hlt
or
daa
notl
lock
sub
mov
dec
cltd
lret
dec
mov
cmpsl
sbb
mov
adc
push
inc
clc
add
frstor
or
stc
sub
std
mov
pop
cmp
cmpsb
jp
shll
insl
in
shl
mov
xchg
mov
fcoms
mov
pop
test
cmp
test
dec
leave
cmp
dec
lcall
and
aad
gs
pop
sti
jne
bound
mov
iret
lea
cmp
outsl
cmp
aas
jns
jb
pop
orl
fs
jle
push
mov
dec
mov
jmp
and
sub
jmp
filds
hlt
xchg
jle
xchg
push
inc
dec
lock
rcl
es
popf
cmp
cmp
test
cmp
adc
nop
movsb
jno
fisttpl
in
stos
mov
xlat
adc
fs
push
fsubrs
int3
or
mov
enter
test
pop
sbb
test
xchg
and
jmp
xor
pavgb
adc
das
mov
dec
or
mov
xchg
int
xor
clc
cwtl
mov
lock
push
push
lock
addr16
dec
fstl
cs
sub
push
js
scas
mov
fwait
pop
inc
cld
mov
xor
les
pop
adc
addr16
adc
cmpsl
dec
and
add
adc
inc
fst
fcoml
aad
lods
adc
icebp
sub
shl
out
rolb
cmpsb
in
cmp
mov
pop
sub
add
ret
inc
nop
jecxz
das
mov
leave
lods
push
mov
dec
jle
mov
shll
pushf
ret
scas
xchg
cmp
arpl
cmpsb
add
in
fldl
pop
cmp
nop
jg
out
fstps
dec
test
and
lock
nop
and
imul
adc
mov
scas
push
push
cmp
push
je
call
mov
sub
pop
imul
or
sbbb
pop
mov
lret
push
fwait
aaa
outsl
mov
pop
cltd
sub
sarl
pop
sahf
push
jle
cwtl
rorb
pop
jb
xchg
aaa
in
imul
push
addr16
lahf
int
andb
rorb
mov
repnz
mov
xor
push
sub
pop
push
cltd
mov
mov
popa
cmp
fldl
inc
popa
push
fsubp
sahf
popa
sub
sbb
mov
test
adc
loop
mov
stos
add
int3
mov
aas
aaa
sub
cmp
es
shrl
xchg
mov
divb
cmpsb
inc
loop
pushf
inc
fsubrl
jnp
cmpsb
lods
sub
cmp
fs
fsubrl
enter
pop
sarb
pop
cld
lea
mov
out
xor
loope
dec
daa
clc
cmp
jb
xor
in
push
pop
mov
lcall
dec
das
mov
test
pop
movl
insl
popf
in
std
les
push
jp
lret
xor
out
sar
stos
push
jns
icebp
sub
cwtl
pop
jae
xchg
sbb
shlb
shrb
mov
cmp
or
and
pop
cmp
push
inc
sub
mov
add
ret
inc
bound
adc
xchg
arpl
jno
pop
scas
dec
mov
cmp
mov
sbb
sub
jno
icebp
in
rcr
nop
inc
add
ja
andb
adcl
test
push
xlat
rcll
dec
xor
cmpsl
icebp
inc
js
or
add
int3
idivl
mov
js
or
add
mov
adc
frstor
and
push
data16
aad
jnp
scas
inc
ret
stos
test
idivl
dec
mov
and
jge
or
mov
adc
enter
fabs
inc
or
add
mov
sbb
cmp
mov
jne
and
xchg
dec
or
jmp
or
push
mov
and
mov
cmp
dec
mov
es
inc
sub
add
and
roll
sahf
pusha
push
inc
inc
lret
test
imul
adc
and
es
subb
and
sub
rorl
pop
sahf
sub
ret
stos
lods
shll
mov
adc
ffree
outsl
sub
adc
movsl
cmc
jmp
and
inc
xchg
je
xor
push
dec
xlat
push
pusha
adc
inc
out
xchg
cld
mov
ret
inc
adc
cmp
inc
xor
mov
cs
mov
mov
std
cmp
je
jo
imul
cmpsb
fnstsw
inc
add
test
dec
aas
jge
es
jl
ljmp
cs
js
sbb
sbb
mov
in
sub
idivb
inc
repz
xor
inc
pushf
pusha
sti
mov
inc
xor
cltd
or
pop
iret
cwtl
fs
jg
dec
lret
ljmp
leave
lds
outsb
jmp
mov
in
and
adc
inc
sub
insb
popa
stc
sbb
adc
js
filds
push
pop
mov
std
outsb
sbb
dec
or
jb
iret
or
mov
ds
roll
xor
lods
inc
shll
inc
fwait
cmp
bound
mul
mov
mov
sbb
fdivrl
xor
jmp
andl
push
outsb
mov
cmpsl
xor
lret
mov
sub
mov
test
cmp
push
sub
dec
pop
add
and
add
xlat
test
sti
xchg
add
cmpsl
daa
aas
loop
mov
mov
fistpl
dec
pop
pop
adc
stc
shll
stc
les
mov
cs
aas
das
dec
mov
arpl
repz
gs
in
rcr
mov
mov
dec
lret
sahf
jge
jecxz
sbb
js
mov
add
mov
mov
incl
fucom
or
jne
sub
or
inc
aad
roll
outsb
xchg
adc
aad
adc
test
dec
jl
jns
arpl
inc
xchg
mov
add
xor
test
outsl
es
testb
sbb
dec
adc
dec
mov
push
sub
fs
mov
sbbl
lock
adc
insb
sub
push
loopne
popa
mov
sub
nop
mov
divl
lret
mov
xchg
mov
mov
jne
notl
adc
sub
inc
gs
mov
or
jne
dec
ds
mov
mov
xchg
ds
pop
in
rcrb
in
jecxz
in
mov
dec
ret
dec
mov
fnclex
mov
loop
sti
cmc
xor
loopne
test
dec
int3
mov
mov
add
movsl
cli
movsl
frstor
jg
test
xlat
pop
pushf
xchg
in
sbbl
jge
std
in
or
addr16
popa
out
int
sbbl
dec
add
pop
cwtl
cmp
test
sbb
addl
sti
cmc
cmp
shrl
leave
mov
mov
push
in
es
or
out
outsl
rorl
xchg
cmp
cltd
rcrl
ljmp
insb
or
scas
push
push
mov
enter
iret
inc
xchg
insb
in
mov
addr16
mov
dec
mov
add
inc
adc
movsb
push
dec
das
lock
push
push
cmp
mov
or
xlat
jbe
cwtl
pop
lret
inc
je
call
adc
mov
cld
cmp
outsb
dec
jae
out
and
aaa
pop
js
pop
adc
xchg
lods
jnp
movsb
mov
sbb
dec
cmpsl
xor
xchg
dec
rcr
mov
mov
sbb
jns
and
cmp
pop
jl
xchg
xchg
gs
or
ss
mov
inc
xchg
lods
jmp
pop
add
mov
pop
ficoms
stos
mulb
sub
pusha
cmp
loop
xor
ficoms
jl
mov
repz
repz
mov
fdivrs
inc
lret
stc
test
es
ljmp
lahf
dec
mov
pusha
outsl
ret
add
loop
add
xchg
inc
in
jne
and
mov
scas
inc
scas
push
or
out
xchg
pop
jl
into
fcom
dec
in
xchg
or
sbb
andl
inc
js
mov
pushf
cmp
jp
sub
rcr
jno
pop
mov
stc
out
pop
cld
stos
std
ds
mov
mov
pop
inc
fidivl
xor
aaa
xchg
jo
adc
mov
push
mov
arpl
jle
lcall
push
or
cmp
push
jo
fwait
jno
daa
sub
inc
out
add
int
ficoml
mov
insl
adc
data16
fistpl
cmp
std
jmp
cmpsb
ficompl
int
cmp
or
add
and
push
dec
sahf
insl
lea
push
jp
pusha
sbb
mov
test
fwait
scas
xchg
int3
or
or
fs
cmp
push
jg
mov
mov
les
movsb
xor
iret
dec
mov
push
push
loopne
pop
sub
fnstenv
pop
or
out
mov
mov
loope
mov
cld
or
sbb
cmp
dec
and
jnp
sbb
inc
test
push
mov
mov
jg
aas
mov
leave
int
jge
inc
inc
xchg
xchg
bound
mov
cmpb
xchg
mov
out
mov
pop
mov
movl
pushf
push
insb
aas
pop
addr16
add
shll
in
scas
jg
or
sbb
mov
pop
outsb
test
fidivrl
sti
pusha
sub
push
and
xor
sahf
push
clc
push
sarb
scas
divb
out
adc
cmp
mov
or
pop
rclb
mov
sub
mov
xchg
pop
or
jno
jo
loope
adc
cmp
mov
mov
or
sbb
dec
mov
cli
inc
sub
jnp
in
sub
mov
add
mov
in
pop
cmp
add
inc
sahf
ja
jbe
push
mov
mov
or
push
adcl
jbe
dec
sti
sub
mov
cmp
dec
mov
pop
fdivrp
mov
sbb
mov
flds
xor
rcr
shll
fstps
mov
sbb
repnz
jne
pop
shll
pop
jmp
cltd
and
xchg
mov
movsl
fmul
orl
in
mov
pop
orl
loop
ja
repz
test
ret
add
jae
jecxz
xchg
adc
pop
sub
and
inc
iret
pop
jne
inc
add
add
push
xchg
and
push
xor
adc
jno
adc
lea
es
je
mov
inc
andl
mov
add
add
sbb
jns
sub
mov
pop
adc
mov
push
mov
inc
xchg
dec
sub
data16
notl
in
out
gs
cwtl
mov
and
int3
iret
movsl
or
shrl
incb
jae
int3
daa
call
sbb
ret
and
push
pop
pop
ror
push
push
insl
xchg
ret
push
and
jecxz
sbb
xchg
xchg
push
push
or
ss
lock
inc
cmp
pusha
mov
sbb
push
mov
sub
inc
adc
icebp
lcall
cmp
ja
sahf
scas
push
push
hlt
insl
adc
and
pop
test
ljmp
add
jns
dec
push
fnstsw
dec
pop
pop
test
cmp
mov
push
xchg
dec
xchg
jmp
pop
testl
jecxz
rcrb
cmp
and
imul
lcall
inc
dec
add
filds
jmp
jge
scas
pusha
in
inc
and
or
add
std
stc
lahf
inc
incl
es
pushf
lahf
push
hlt
xchg
xor
inc
fwait
nop
test
sahf
inc
sub
das
lea
bnd
mov
pop
fsub
loopne
xorl
jge
leave
cld
xor
daa
out
jno
mov
mov
outsb
pop
adc
pop
mov
je
or
test
lahf
jnp,pt
and
mov
lcall
cwtl
movsb
push
stc
inc
sbb
or
int3
fmul
cltd
jo,pn
push
les
push
mov
sbb
cld
shrb
inc
xor
push
jecxz
and
fidivl
pop
in
xor
xchg
inc
adc
adc
sti
and
repz
test
and
cmc
push
dec
inc
sbb
sarl
push
push
jns
popf
pop
cwtl
test
jmp
push
sub
notb
imul
orl
cld
sub
test
cwtl
push
inc
cmpsl
roll
clc
ror
repz
add
mov
ja
hlt
dec
sar
sub
xlat
rcll
out
les
adc
xor
nop
test
pusha
mov
push
movb
jne
scas
jae
cmp
mul
jg
pushl
xor
xchg
mov
inc
popf
out
mov
out
arpl
push
push
cwtl
adcl
lds
mov
xlat
andb
mov
ret
lret
mov
sarl
xchg
sbb
jae
adc
iret
scas
adc
pop
adc
lods
push
mov
imulb
popf
mov
inc
lds
sub
out
ret
ja
imull
inc
inc
fiaddl
sub
shrb
and
lock
outsl
pop
testl
add
in
push
or
test
fsubl
push
lds
ds
lret
orb
inc
sub
cmp
sbb
sub
mov
jecxz
inc
push
cmc
sub
push
adc
pusha
daa
movb
mov
in
inc
shlb
test
cwtl
cmp
fisttpl
and
cltd
rcrb
pop
xchg
nop
push
cmp
inc
add
fidivrs
mov
ss
pop
arpl
fmul
nop
jmp
adc
std
scas
xchg
mov
stc
push
mov
inc
mov
inc
inc
in
jns
imulb
or
enter
push
add
loop
and
pop
sub
mov
xchg
sbb
xor
mov
pop
sbb
loop
cmp
test
push
jmp
mov
pop
stos
pop
dec
popa
insl
xchg
sbb
dec
jbe
fidivl
scas
fdivl
or
fnstenv
insl
push
aam
xor
fwait
lods
or
adc
into
test
mov
cmp
rcll
loop
sbb
push
adcl
or
cmp
xor
sbb
mov
lcall
lret
jno
mov
iret
xorb
mov
pop
out
lods
pop
mov
ds
jmp
inc
insl
xor
dec
push
imul
sub
xor
dec
add
push
inc
mov
out
add
jo
test
dec
jb
sar
mov
adc
xchg
xor
mov
pusha
adc
xchg
push
xor
mov
test
sbbb
inc
outsl
xor
inc
or
push
or
leave
xchg
pop
ret
int
ljmp
faddp
lods
rcrb
cmp
xchg
inc
and
jbe
jae
dec
inc
inc
fidivrl
ss
jns
scas
arpl
cmp
jecxz
jge
mov
mov
pop
xor
rorl
sbb
adc
call
jp
adc
pop
pop
inc
pop
push
je
adcb
cli
inc
int3
push
ja
je
dec
pop
fs
xchg
mov
xor
cltd
and
test
or
dec
jle
jns
setge
cld
cmpb
ret
call
lret
loope
add
cli
mov
push
adc
into
adc
loope
lock
sbb
pusha
loope
add
cwtl
mov
xchg
out
fldt
imul
les
xchg
cmpsl
xchg
adc
add
mov
mov
cld
cmc
addr16
sarl
subb
inc
sub
jle
xchg
fcom
jmp
pop
iret
stos
in
movsl
mov
test
jno
mov
cmc
shl
cs
push
add
and
sbb
rcrb
aad
js
ret
scas
pop
jae
xor
jl
les
lock
test
outsl
out
mov
test
lahf
xor
fs
jmp
or
inc
imul
mov
xchg
xchg
mov
push
or
dec
sbb
imul
daa
dec
dec
roll
ss
ret
mov
sbb
xchg
inc
xor
call
xchg
testl
push
fiaddl
sbb
out
out
or
or
xor
fidivs
nop
icebp
iret
and
xor
mov
pop
mov
jae
fwait
das
dec
mov
xchg
test
sbb
rcrl
fwait
cmp
pop
or
imul
icebp
cmpsb
xchg
mov
les
or
inc
int
lea
inc
sub
cmp
pop
es
mov
cmp
shlb
inc
xchg
or
movsl
inc
test
push
divl
fdivrl
inc
les
pop
jg
mov
xchg
add
mov
adc
jmp
mov
repz
xchg
cmpsb
adc
loopne
fnstsw
push
cmp
add
mov
aad
ss
lret
mov
movsl
insl
pop
in
inc
xchg
push
xchg
popf
pop
cwtl
cwtl
push
loope
sbb
xchg
scas
fcomip
or
shr
sbb
mov
push
cmp
repz
je
lret
jge
cmp
mov
fwait
and
sbb
ss
pop
loope
lods
out
bound
test
cmpsl
xor
mov
fldl
in
repz
adc
jns
pop
jb
les
int
mov
cmc
mov
in
add
arpl
pop
shl
cmp
hlt
mov
dec
inc
mov
sbb
jne
and
add
outsb
daa
fimuls
or
push
cltd
mov
test
stc
mov
sub
sub
jne
dec
xchg
sub
inc
lret
fs
aas
add
dec
fsubr
add
test
cmp
push
aam
mov
mov
jmp
xor
ret
cltd
xchg
jae
jb
loop
or
push
pop
dec
hlt
nop
mov
loop
cmp
out
mov
lods
test
lahf
xchg
js
orl
dec
fwait
gs
stos
mov
jmp
call
mov
bnd
or
loope
mov
cwtl
das
and
imul
faddl
pop
sub
jmp
les
shr
vmwrite
incb
push
clc
mov
andl
movsl
insl
and
mov
mov
bound
jmp
jecxz
cmp
lods
in
jmp
out
stos
lret
mov
push
inc
test
sub
sbb
in
lea
in
inc
ret
andl
rcrb
shlb
mov
push
mov
arpl
push
aas
and
addr16
pushf
js
clc
or
pop
and
mov
ds
bound
add
add
mov
xchg
in
addr16
mov
cwtl
mov
repz
cmp
nop
bnd
jle
mov
in
jle
or
dec
dec
in
add
ret
out
dec
mov
mov
mov
adc
outsb
mov
shr
aam
mov
xchg
rclb
cmpsb
push
movsl
cmc
out
mov
fldln2
sub
out
mov
adc
pusha
add
aad
pusha
push
fmul
mov
test
lret
xchg
jno
push
jne
mov
lods
xlat
cmp
or
out
sti
mov
sub
rcrl
ja
hlt
and
cmp
sbb
sbb
push
imul
xor
sahf
into
into
adc
insb
mov
jecxz
and
mov
sub
xor
xlat
sti
pop
data16
gs
xor
inc
jmp
dec
add
addr16
hlt
sarl
test
outsl
mov
aad
gs
mov
out
and
repnz
orb
xchg
addr16
mov
cmp
or
xor
fdivrl
and
loop
sub
cmp
jg
fbstp
sbb
dec
arpl
jmp
sbbl
addr16
inc
aad
jae
lods
lret
das
xor
xchg
jnp
pop
or
outsl
xchg
movsl
cmp
jle
dec
stos
mov
dec
xlat
sbbb
xchg
imul
lret
add
mov
inc
mov
mov
scas
jmp
aaa
cmp
xor
or
ljmp
lods
jge
push
or
cwtl
aaa
mov
dec
inc
push
cli
jmp
jle
or
jp
inc
inc
push
jo
data16
jne
add
rorb
jp
fstl
lret
and
and
dec
repz
lret
out
mov
rcrw
fwait
pop
pop
nop
das
adc
pop
and
loop
mov
or
jb
popa
push
test
mov
cwtl
inc
insl
imul
in
loope
jl
or
inc
push
mov
jl
into
out
js
gs
and
jmp
andl
cmp
icebp
pop
cmc
jno
enter
ljmp
aas
jmp
dec
adc
xchg
push
in
ret
lods
cld
arpl
inc
out
pop
in
imul
mov
imul
dec
sub
call
std
cmc
sub
mov
cmpsb
adc
iret
dec
lret
mov
xor
jo
mov
push
cmp
pop
out
mov
stos
adc
push
shr
shl
mov
push
adc
loope
cmpb
or
pushf
sbb
or
shl
cmc
cmpsl
adc
xor
lcall
subb
loopne
push
mov
pop
adc
stos
movsb
lcall
mov
rol
loop
sub
lods
out
loopne
outsl
or
loope
jne
rcrl
push
cld
mov
imul
push
or
push
jb
andb
and
push
mov
mov
sub
xchg
jo
push
xor
fcomps
inc
dec
xor
mov
mov
loope
pop
std
cmp
cmpsl
addr16
xchg
jo
cmpsb
mov
fisubl
sbb
leave
sar
jb
adc
stc
mov
jge
psadbw
and
fcmovne
dec
or
iret
fisubs
inc
repz
and
push
dec
decb
mov
popa
or
push
imul
jp
sbb
jae
dec
loopw
xchg
push
pop
pop
xlat
inc
or
loope
fdiv
pop
idivl
push
ja
out
ret
cmp
incb
xchg
dec
mov
stc
shlb
dec
add
inc
negb
lret
insb
and
mov
fistps
es
dec
xchg
aad
pop
outsb
scas
lods
in
inc
adc
xor
cmp
js
xor
sti
cmp
pop
call
and
pop
pop
push
ja
xlat
pop
dec
inc
cmp
in
push
into
iret
add
adc
jg
cld
out
and
pop
imul
fidivrs
sbb
fimuls
pop
fnstcw
out
in
xchg
aaa
cmp
fstpt
add
push
lock
pop
ljmp
roll
mov
add
adc
scas
mov
mov
jg
push
sbb
mov
sub
cmpsl
rorl
inc
push
daa
rclb
test
add
xor
jp
inc
xchg
aam
mov
cmp
enter
insb
lahf
xor
add
in
sub
cmp
xchg
jp
dec
add
outsl
xchg
and
jno
push
xchg
ret
repnz
sub
imul
inc
jne
cli
inc
je
shll
outsb
in
jb
xchg
and
je
jl
cmc
je
mov
or
outsl
sub
fs
int3
and
shlb
mov
adc
fildll
sbb
gs
ds
jb
adc
xor
adc
sbb
fsubrl
or
jle
icebp
jg
flds
ror
lods
or
int
mov
insb
pop
xchg
in
pop
jne
subb
or
xchg
jl
aas
rclb
mov
jmp
movl
jb
sbb
inc
ja
hlt
inc
inc
xchg
jne
out
stos
add
repz
xchg
pop
clc
pop
lcall
mov
leave
xchg
sbb
inc
lahf
arpl
add
adc
inc
xor
pop
add
scas
iret
lods
jecxz
add
jne
aas
push
push
aam
jecxz
lret
lods
inc
adc
mov
mov
cld
and
pop
add
and
fs
sbb
int3
sbb
out
repnz
ljmp
data16
mull
jbe
cld
sbb
jmp
and
dec
push
cmp
loopne
or
or
jmp
push
pop
out
jno
shr
pushf
cld
inc
pop
mov
lock
loop
cltd
fnsave
jl
insb
mov
out
pop
into
gs
jae
dec
fidivl
das
loopne
lock
dec
push
push
loop
push
stos
sbb
in
mov
ret
out
sub
and
sub
and
inc
push
popf
arpl
add
mov
testw
mov
xchg
int
movsl
inc
mov
lods
add
pushf
add
or
nop
fld
jl
jg
sarb
ror
or
jae
ja
pop
movsb
dec
push
push
sti
in
sahf
and
lret
popf
enter
dec
shll
int3
insl
mov
in
adc
dec
les
repnz
lcall
xor
clc
sar
cmp
jg
xor
dec
lahf
sbb
pop
add
xor
stc
imul
rolb
test
bound
xchg
xchg
movsl
mov
xchg
cmp
adc
and
jns
jo
inc
adc
icebp
mov
add
jnp
sub
insb
call
xchg
sub
or
cmp
mov
flds
lcall
mov
xlat
call
repnz
jb
fwait
jae
add
sarl
adc
imul
leave
mov
into
shlb
jnp
test
outsb
lcall
cld
push
inc
cmp
inc
jo
mov
arpl
popf
mov
push
inc
mov
jmp
mov
imul
dec
mov
in
inc
xchg
xchg
or
fmulp
pop
incl
int3
adc
xchg
je
add
ret
icebp
ret
sub
sub
out
push
or
pusha
cmpsl
cmp
test
ret
pop
icebp
mov
test
fmul
je
pusha
pop
outsl
sahf
test
icebp
aam
and
mov
bswap
in
popf
call
pop
xchg
and
cmovb
adc
mov
pop
pop
lods
push
pop
out
rclb
mov
int3
cmpsl
sbb
sahf
pop
sub
sub
fidivl
adc
sbb
push
paddsb
pop
mov
xor
loope
pop
lea
cli
aam
jno
xor
icebp
ret
add
xchg
push
mov
or
lock
push
xor
enter
int3
sar
lret
fdivrl
movsb
lock
bound
cmp
sub
rcrl
jecxz
mov
dec
inc
fwait
xchg
xor
ljmp
arpl
pusha
or
and
push
fists
pusha
xor
imul
or
xor
test
mov
jb
cmp
roll
popf
hlt
xor
test
rcl
dec
loopne
xchg
mov
cltd
sbb
push
or
std
int
stos
adc
or
jb
or
inc
les
ljmp
jns
jno
dec
jns
sub
mov
or
push
icebp
mov
stos
pop
sahf
bound
pop
jge
inc
int
add
add
stos
push
add
enter
dec
lock
push
ror
pop
imul
sbb
adc
out
insl
lret
xchg
sbb
nop
fcoms
mov
stos
mov
std
iret
clc
jecxz
cli
loope
dec
and
cmp
cmpsl
jae
ja
jb
jl
or
jnp
mov
shl
lock
outsb
outsl
jle
pop
inc
mov
dec
andl
or
test
loop
into
in
pop
test
lds
cld
fsubrs
xchg
rorl
sarb
test
mov
jle
scas
pop
xchg
imul
push
pushf
imul
inc
mov
sub
mov
xor
cmp
cmp
adc
mov
pusha
arpl
test
and
jg
sub
test
and
fwait
outsb
cmp
jg
or
lcall
mov
jp
inc
movsl
adc
std
cmpsl
in
jge
arpl
in
sbb
outsw
fmulp
or
jge
mov
dec
mov
add
sbb
xchg
dec
out
jne
fisttpll
nop
enter
mov
push
mov
lock
shlb
popa
cmp
fst
mov
sub
stos
mov
and
in
push
out
leave
inc
push
xorl
into
inc
push
inc
mov
sbb
jbe
mov
in
hlt
and
cs
sbb
cmp
xchg
xchg
xchg
movsl
sbb
pop
ds
mov
sub
mulb
xorb
or
cs
push
sub
xchg
and
push
pusha
xchg
xchg
mov
ficoms
mov
scas
insl
sbb
cmp
sbbb
aaa
arpl
mov
outsb
jnp
sahf
roll
loop
mov
dec
mov
inc
inc
cmp
popa
rcrl
iret
ret
sub
icebp
push
push
sbb
lret
hlt
mov
adc
ret
add
popf
test
cltd
dec
rcl
insb
push
popa
cmp
mov
and
addb
inc
mov
add
mov
add
sub
mov
data16
in
ljmp
cltd
stc
mul
jmp
xor
mov
cmc
mov
fucom
cmp
test
les
into
mov
lret
add
mov
mov
inc
je
testb
imul
call
add
push
pop
jle
push
test
sbb
iret
mov
dec
push
sarb
mov
cwtl
push
jns
std
fimull
inc
outsl
js
loop
hlt
lock
jne
cmc
ror
push
and
insb
and
testl
test
jns
jne
xor
dec
xchg
lock
sbb
insl
jnp
jnp
adc
test
xchg
rorb
out
xor
cmp
insl
dec
push
repz
sarl
in
pop
cmp
jmp
cli
and
dec
insb
in
xchg
mov
fbstp
sahf
mov
cltd
jecxz
jb
inc
mov
test
and
xor
mov
aas
mov
xchg
imul
cmpsl
outsb
jp
in
push
lods
push
cmpb
sahf
out
les
and
jecxz
xor
xchg
and
pop
xor
cmpb
shlb
mov
xor
inc
hlt
pop
fildll
stos
jne
or
and
mov
lds
gs
inc
and
addb
mov
sub
mov
sub
outsl
and
jmp
addr16
enter
aas
pop
adc
jbe
sbb
hlt
pop
mov
cmp
push
fbld
jb
mov
sbb
lea
rolb
enter
loop
or
cld
adc
mov
dec
ret
mov
push
cli
xchg
jmp
inc
aaa
adc
cmp
mov
xchg
dec
inc
sbb
sub
or
loope
icebp
xchg
or
adc
jno
or
mov
ror
lldt
in
mov
out
adc
push
mov
xor
inc
pop
icebp
or
adc
sahf
dec
sbbl
pushf
or
mov
mov
fidivs
fpatan
mov
inc
loop
aas
lods
adcb
scas
mov
mov
pop
out
xchg
jnp
jp
orb
and
inc
xchg
stos
or
mov
and
stc
notb
push
fs
adc
add
sbb
xchg
dec
ss
jl
in
test
ror
dec
ljmp
mov
pop
cmp
cmp
adc
pop
mov
sahf
mov
cmp
insl
push
xor
stc
sub
shll
jp
cmp
js
push
int
jbe
addl
inc
sub
lods
stos
mov
loopne
clc
push
gs
pusha
imul
int
fmull
mov
loop
and
mov
ds
and
es
je
out
jbe
shlb
mov
push
shll
and
addr16
lock
xor
std
cmp
pusha
ja
cmpsb
stc
mov
in
inc
cli
inc
cmp
pop
sub
inc
loop
cmpsl
pop
popa
cmp
jle
inc
fidivrs
push
adcb
fcom
adc
sbb
xor
in
or
adc
into
test
push
stos
pop
sub
pop
push
stc
inc
repnz
dec
cwtl
mov
test
push
pop
addl
loop
lahf
push
adc
adc
shl
push
xchg
bound
fldl
test
sbb
adc
sbb
mov
cld
es
pop
or
pop
andl
xor
mov
data16
in
lock
jecxz
mov
push
cs
jnp
hlt
test
fmuls
mov
popl
fsub
jo
mov
lods
stos
and
aas
cmpsl
or
jmp
fistpll
cmp
jo
ret
and
je
xchg
xor
shll
cmp
push
jo
imul
and
inc
orb
sahf
stos
enter
cmp
mov
mov
or
add
testb
loopne
leave
mov
rcrb
gs
decl
loop
xchg
xchg
loop
insb
cmpsl
popf
das
pop
test
movsb
push
xchg
xor
subb
lds
iret
test
popa
scas
add
pop
scas
fdivr
mov
popf
iret
pop
shll
xchg
adc
aad
outsl
xor
sbb
inc
repz
sbb
xor
scas
cld
add
das
test
push
enter
lods
and
and
mov
sub
movsb
adc
or
pcmpeqd
lods
sub
lret
shll
fsubs
xorl
lock
xchg
inc
sarb
popl
jle
fists
filds
lds
decb
icebp
jp
cmp
xor
sbb
mov
lods
jno
mov
xchg
dec
pop
xchg
xchg
add
or
popa
jl
inc
sub
xlat
pop
xor
inc
mov
cs
imul
mov
ja,pn
incl
sub
mov
adc
push
sub
or
insb
push
xchg
mov
sub
test
or
and
xchg
loopne
outsb
push
push
ss
and
jp
jbe
inc
adc
cmp
inc
add
fildll
js
fwait
fs
negb
xor
jg
rcll
xor
sbb
or
ljmp
int
jb
and
mov
jp
mov
ljmp
or
pop
leave
rorl
ror
cmp
cmpsl
stos
xchg
mov
cmp
inc
mov
fwait
out
nop
aaa
leave
push
lahf
mov
cltd
fcoml
jno
sub
scas
bound
call
lahf
push
idivl
adc
in
or
mov
sbb
scas
cli
xor
int
mov
add
iret
sbb
insl
xchg
lods
cld
adc
icebp
mov
xchg
int
add
sarl
inc
add
and
rcr
push
pop
or
mov
xchg
insl
jecxz
xchg
leave
add
aaa
shrb
or
inc
in
jge
into
jne
inc
mov
xchg
fcomi
jge
aam
int
xchg
jno
xor
mov
mov
xchg
mov
stos
pop
or
scas
fmull
lds
rorl
aas
mov
jno
adc
mov
and
add
inc
sbb
dec
push
mov
orl
sbb
mov
push
jae
add
mov
sbb
mov
repz
cwtl
int3
loop
push
fsubs
cmp
mov
push
xchg
fimuls
xchg
pusha
lods
xor
jecxz
ja
inc
imul
inc
rcrb
sti
nop
jg
aad
and
jge
das
out
lock
sbb
xchg
sub
les
popf
dec
push
xor
mov
mov
push
mov
mov
jno
ja
repnz
cmp
inc
pop
mov
loope
popf
and
mov
pusha
icebp
addr16
and
mov
sbb
ret
xor
mov
add
mov
mov
ret
pop
leave
mov
aaa
fistps
mov
aad
and
cli
push
adc
jns
out
add
sbb
fldt
dec
jno
pop
insl
lret
xchg
test
jmp
push
push
push
push
clc
dec
inc
scas
mov
xchg
mov
adc
adc
sbb
sti
or
add
int3
into
xor
bound
ror
sub
adc
sub
das
sbb
data16
movsl
cmp
pop
dec
mov
push
fcmovnu
mov
or
jne
adc
in
in
insb
mov
jp
inc
mov
in
push
add
cmp
jle,pn
mov
pop
leave
nop
in
adc
sub
inc
xchg
movsl
push
xchg
push
cmp
jns
xchg
rorl
adc
mov
mov
clc
jne
fwait
test
rcl
and
xor
inc
mov
fists
cli
lret
setge
sti
inc
cmpb
lret
lahf
xchg
jp
sbb
cmp
or
cmp
test
nop
cli
sub
mov
imulb
jmp
mov
lret
jmp
xor
jg
xor
mov
pop
popa
sti
jo
out
cmpsl
addr16
jno
jns
mov
lods
inc
xor
cmc
les
pop
xor
jb
out
cmp
pop
jns
ret
push
or
mov
cmp
neg
mov
adc
aaa
push
aaa
je
and
cli
mov
mov
gs
std
pop
jnp
nop
mov
push
jno
subl
jo
hlt
sarb
iret
aas
movsb
dec
in
mov
insb
mov
or
or
jmp
and
push
int
inc
jmp
sbb
inc
mov
push
mov
cmc
fisttps
sahf
jecxz
out
outsl
dec
mov
and
mov
pop
cmp
pop
mov
push
xchg
mov
xchg
into
push
aaa
test
fadds
mov
sti
mov
jno
mov
pop
test
icebp
cmp
sbb
jno
inc
rcrb
adc
imull
xchg
add
cs
add
repz
pop
cmp
adc
jae
cmp
jb
and
mov
test
pushf
clc
fnsave
outsl
cli
lds
int3
popa
adc
rcrl
mov
mov
dec
dec
dec
insb
dec
sub
push
mov
sbb
lcall
jbe
aad
jno
and
adc
cmpl
dec
inc
xor
inc
jl
sti
inc
ret
lret
sub
push
xchg
pushf
or
push
push
clc
loope
ja
or
lret
ljmp
in
addl
and
outsb
daa
movlps
pop
outsb
ret
data16
cmp
adc
loop
fnstcw
and
loope
cli
movsb
and
add
cmp
aas
imulb
ret
cmp
aaa
xor
mov
mov
call
or
mov
and
pop
in
dec
jnp
mov
or
mov
mov
ja
jae
mov
pop
scas
rorl
cli
int3
and
push
movsb
daa
gs
sbb
stos
mov
pushf
mov
fsubs
dec
xchg
xchg
sub
dec
testl
aad
inc
lods
addl
out
and
mov
stos
and
mov
stos
jg
imul
fadds
andb
or
ffree
in
movsl
les
sub
stos
sub
dec
outsl
adc
pop
lock
cmpsb
lcall
cwtl
outsb
clc
xor
dec
xor
das
adc
fmul
mov
pop
pop
lahf
fmull
jl
outsl
mov
dec
andl
iret
pusha
in
testb
das
repnz
add
cs
jmp
jb
inc
outsl
std
inc
fldl
mov
pop
cli
pusha
or
fdivr
mov
sbb
cmp
mov
scas
ljmp
shll
stc
add
cs
insl
mov
xlat
dec
dec
jmp
sbb
ss
fistpll
push
outsl
cmp
sub
mov
mov
adc
adc
sub
inc
in
xor
push
cli
jmp
test
mov
pop
adc
mov
mov
fwait
daa
xchg
mov
push
sbb
mov
adc
pushf
loop
pusha
mov
out
repz
sbb
push
les
pushl
pop
shll
sbb
cld
sub
shll
shlb
imul
dec
adc
jecxz
hlt
add
push
xchg
out
and
in
or
mov
cmp
imul
lret
cli
xchg
mov
push
daa
sbb
pop
fistl
or
bound
repnz
adc
lods
cld
inc
mov
add
mov
dec
mov
xor
adc
sub
insb
shll
adc
daa
rcrb
in
test
cmp
dec
push
push
jecxz
cmp
adc
out
pop
lods
or
push
xor
scas
mov
gs
jbe
add
adc
jno
xor
xchg
sbb
pop
mov
lock
mov
pop
test
push
sti
mov
scas
cmc
or
jbe
dec
icebp
sbb
push
sub
cmp
dec
xchg
data16
bound
mov
push
lock
add
repnz
out
sub
subb
notb
dec
aam
popf
in
in
scas
pop
ja
jo
fiaddl
shl
data16
lret
out
addl
imul
and
sbb
pop
sti
jae
rcll
dec
jne
xor
or
or
pop
aad
popf
repnz
aam
lret
push
mov
ljmp
rorl
es
jo
dec
mov
jle
out
inc
test
jg
bound
inc
and
mov
and
mov
or
jae
add
and
int3
mov
push
jg
lods
cmc
pusha
js
jne
ret
mov
mov
jne
add
inc
dec
mov
std
scas
push
pushfw
test
orl
xchg
arpl
test
add
add
mov
mov
push
push
pop
es
clc
jmp
push
push
xchg
xor
jmp
dec
push
sub
mov
lcall
or
mov
jno
inc
and
push
cmpsl
lods
jmp
jo
scas
jns
jle
jle
int3
jp
inc
fdivrl
iret
or
pop
out
adc
fisttpll
fisubrl
adc
fcmovne
cmpsl
bound
pop
sbb
int3
mov
push
xor
cltd
sbb
push
xlat
adc
jno
insb
or
cld
mov
jl
xor
sub
pop
insb
out
cmp
rolb
dec
in
ret
fs
int
rolb
iret
nop
and
push
aas
divb
and
push
or
and
flds
enter
push
xor
aas
xchg
pop
cmp
mov
dec
push
and
jns
inc
mov
psrlw
push
decb
inc
cltd
loope
dec
incl
pop
data16
cmc
test
push
xor
and
out
pusha
dec
sbb
shrl
xchg
dec
mov
mov
sahf
mov
jmp
les
mov
push
in
jbe
loopne
mov
and
push
push
mov
roll
pop
into
inc
mov
jns
xor
scas
and
lcall
lods
outsb
mov
fs
aas
jl
mov
cld
lods
dec
enter
jecxz
mov
inc
pop
inc
mov
xchg
fs
fistl
inc
mov
test
pop
sub
aaa
mov
pop
add
inc
mov
mov
lahf
cmp
mov
les
daa
addr16
mov
jl
into
xchg
and
inc
or
pop
movsb
cs
add
shlb
pop
ljmp
inc
movsl
addb
sbb
mov
xor
inc
push
mov
jg
out
adc
sbb
orl
sbb
sti
mov
and
gs
int
mov
inc
fsubrp
mov
imul
js
cli
enter
xchg
push
jno
adc
adc
fidivl
inc
sbb
xchg
pop
jae
push
sub
adc
imul
lcall
dec
cmpsb
and
popf
xor
inc
fwait
inc
movsb
icebp
sbb
cs
cwtl
sub
rol
inc
xor
cwtl
push
mov
xchg
sub
push
mov
iret
jge
or
sbb
dec
out
addr16
mov
mov
negl
fisubrl
mov
dec
out
mov
lods
cs
jecxz
mov
push
adc
pop
xchg
pop
aad
xor
adc
std
mov
mov
push
cld
addr16
cld
mov
icebp
mov
pop
jle
adc
jp
dec
lcall
divl
mov
add
mov
out
loop
sbb
ss
in
add
into
stc
adc
push
sbb
cmp
test
fdivrs
dec
popa
xchg
hlt
mov
call
cmpsb
mov
mov
add
cmpsb
imul
adc
ljmp
jno
in
push
sarb
int3
in
mov
adc
clc
stos
sbb
mov
cwtl
cli
jnp
mov
dec
mov
ret
pop
int
out
sub
adc
stos
cld
mov
cld
cs
ljmp
lret
cmp
jnp
push
jns
push
js
in
outsl
sbbl
pusha
mov
adc
cmpl
mov
jecxz
add
gs
cli
sahf
popf
ret
addb
mov
mov
inc
and
dec
into
adc
dec
push
arpl
es
jae
pop
inc
sub
xchg
push
fwait
stos
inc
add
pop
inc
inc
outsl
psrld
aas
arpl
push
lret
mov
jne
les
lahf
xor
addr16
sarb
rclb
ss
add
int3
jmp
dec
mov
xor
mov
lahf
outsl
mov
out
out
xor
shlb
sbb
sbbb
into
out
imul
push
scas
mov
nop
stos
loope
and
shl
mov
lret
inc
mov
fadd
int3
iret
fistps
or
fwait
ret
dec
sub
pop
push
xchg
jne
inc
in
fsubs
in
in
pop
aas
out
insl
fucomp
dec
aaa
xor
in
push
xchg
xchg
sub
shll
popa
or
xchg
dec
xchg
xor
mov
arpl
stos
inc
add
pop
sub
scas
cmc
inc
or
repnz
mov
dec
xor
add
mov
mov
imul
mov
test
xchg
rcll
cmp
fwait
xchg
pop
xor
sub
cmp
hlt
push
popa
cmp
mov
rorb
mov
push
insl
fs
cmc
and
fidivrl
mov
aad
sub
mov
test
lods
add
rcrl
in
test
icebp
sbb
ret
pop
icebp
add
jl
jge
daa
or
loopne
lcall
pop
and
xchg
jge
push
add
ja
ret
xor
fwait
xchg
lret
pop
dec
jae
mov
hlt
and
xor
pop
test
add
push
mov
add
jo
sahf
cmp
in
js
es
hlt
cmpsl
mov
mov
xchg
test
fstpt
mul
jecxz
popf
or
ret
mov
fst
insl
sbb
and
push
aaa
sub
mov
adc
xor
or
mov
setns
jae
and
call
int3
cmp
fwait
mov
adc
mov
push
mulb
inc
out
push
sets
hlt
dec
push
push
xchg
lret
xchg
or
xor
cmp
push
push
or
inc
jmp
xor
fmuls
mov
sbb
mov
ljmp
push
or
movsl
and
cld
mov
call
lahf
insb
icebp
int
inc
ja
mov
dec
push
lea
add
fdivl
bound
inc
cmp
loope
cmp
xchg
pop
mov
mov
mov
cmp
sub
and
test
pushf
fcoml
rorb
push
adc
mov
outsl
dec
push
sub
loop
pop
imul
pop
sbb
inc
es
int3
mov
pop
sbb
leave
mov
dec
jno
fwait
mov
mov
outsl
mov
xchg
xchg
clc
scas
je
adc
out
rcrb
push
lea
ret
and
dec
or
mov
adc
fisttps
data16
icebp
in
aas
push
addr16
add
icebp
in
cmp
movsb
js
fiaddl
push
das
inc
push
repz
xor
test
dec
or
test
inc
inc
test
sbb
aaa
jo
popa
mov
sub
int3
sub
jo
dec
rclb
in
ljmp
enter
sahf
pop
xor
add
fldenv
test
jnp
scas
cmp
aad
lret
inc
movsb
loopne
fldt
jle
nop
or
mov
adc
or
push
sbb
les
sub
xchg
scas
dec
sub
mov
jnp
imul
jp
add
mov
sub
es
pop
aad
std
hlt
fsts
aaa
lods
bound
iret
not
cmc
cltd
pop
ficompl
stc
lahf
jo
in
dec
nop
sbb
add
call
push
fmul
je
mov
push
cli
es
xor
push
cmp
adc
xchg
test
js
mov
lahf
adc
pop
fistps
mov
aaa
cmp
jp
push
sbb
sub
loope
push
shlb
in
mov
out
lahf
in
mov
jg
mov
jmp
xor
jp
cld
push
loop
cmp
xchg
or
inc
xor
xchg
mov
or
mov
in
or
or
dec
insb
cmpsb
dec
mov
sub
xchg
addb
popf
jmp
ficompl
in
adc
pop
push
cmp
aam
js
xchg
ja
or
shlb
es
mov
pusha
lahf
push
sub
sub
adcb
enter
cwtl
push
imul
stc
and
out
xchg
push
imul
gs
jne
leave
sub
xchg
and
mov
movsb
cld
cmp
out
rclb
inc
sahf
cwtl
or
pop
push
jbe
push
in
inc
icebp
outsl
add
int3
out
and
sbbl
incl
mov
dec
lds
stc
shrl
test
fiadds
lcall
pop
scas
in
jo
fnstcw
ja
inc
lret
stos
scas
jl
add
xchg
loopne
push
je
scas
inc
add
jae
cmp
mov
scas
or
xchg
fucomi
stc
sub
mov
shrb
loop
sbb
and
mov
insl
jae
test
mov
or
imul
ret
fsubs
sahf
mov
jge
cli
jno
outsl
and
fsub
out
pop
push
sub
cmp
imul
xor
movsl
test
pop
adc
scas
adc
jbe
lcall
inc
movsb
pop
mov
pusha
aad
std
add
adc
fsubrs
fs
add
dec
push
add
mov
inc
and
je
dec
js
mov
push
and
jg
pop
and
sti
ret
scas
pop
out
jge
imul
sub
scas
lcall
lock
xchg
jne
iret
xor
lret
sub
test
and
mov
jp
dec
fisubl
inc
sti
cmp
mov
je
stos
add
negl
cmp
repnz
pop
or
sub
sbb
leave
xlat
lea
adc
ret
mov
mov
xor
push
add
leave
incl
pop
inc
mov
mov
shl
push
adc
pop
incl
pop
faddp
shrl
repz
push
or
adc
loop
shll
push
mov
sbb
loope
hlt
xchg
cmp
lret
push
push
mov
add
in
mov
mov
jb
mov
movsl
icebp
mov
mov
cmpsb
mov
icebp
or
mov
pusha
notb
push
test
jmp
mov
stos
popa
inc
jg
lcall
lods
por
jo
fildl
ljmp
testb
in
mov
repz
sbb
or
add
sahf
sti
sub
dec
out
ljmp
lock
mov
dec
adc
jno
ret
push
pop
sub
test
fnsave
pop
in
pop
mov
jp
bts
clc
sbb
push
es
add
xchg
mov
push
pop
inc
mov
popf
cld
ss
dec
aas
cwtl
inc
xchg
es
sub
outsb
lods
lock
ds
push
jecxz
xchg
mov
and
or
push
pop
popf
pushf
lock
adc
fildl
adc
shlb
test
mov
repnz
mov
xchg
mov
mov
push
or
pop
imul
xchg
scas
or
ret
cs
pop
xchg
lret
out
repz
dec
mov
pusha
mov
or
inc
repz
ret
inc
idivb
cmp
jge
cmpsb
icebp
out
shl
icebp
mov
mov
pop
jp
mov
cltd
jle
push
sub
lock
inc
sbb
sbb
or
dec
in
in
mov
push
orl
cmpsl
enter
add
into
and
test
repnz
push
out
adc
xchg
or
andl
in
adc
imul
in
aam
dec
and
or
lret
imul
xchg
xlat
pushf
mov
in
and
add
cmp
push
xor
das
mov
leave
mov
mov
dec
mov
fisttpl
lret
sub
add
adc
add
xlat
rorb
inc
pop
ss
cmp
std
inc
xchg
xor
adc
dec
int3
cmp
and
inc
stos
or
mov
jne
dec
inc
je
cmp
mov
fucomip
fwait
out
frstor
mov
lock
push
cld
jecxz
add
push
push
and
or
pop
cld
stos
in
add
jl
lret
pop
movsb
fsubl
into
lret
test
decl
js
std
stos
lods
insl
mov
inc
stos
mov
and
cmpsl
sbb
sub
xchg
inc
into
bswap
mov
clc
pushf
lret
sahf
sbb
push
xor
jl
in
imul
les
repnz
mov
sahf
dec
or
jbe
orb
xor
xchg
loope
sub
aam
test
int3
xchg
test
add
sbbl
pop
lods
sarl
xchg
rsm
and
fistl
push
jne
push
test
dec
popf
push
adc
lods
fldenv
mov
mov
cmp
dec
sbbb
hlt
push
mov
std
fidivs
xchg
and
xchg
xor
sbb
or
fnstenv
sbb
mov
subl
les
hlt
mov
adc
call
mov
clc
sub
shr
xchg
loopne
mov
fcmovbe
aam
outsl
icebp
lock
xchg
mov
push
push
sbb
movsb
in
mov
in
and
cli
inc
mov
mov
mov
xor
les
scas
mov
hlt
sahf
es
loope
sti
in
dec
sub
popf
mov
roll
sahf
mov
inc
sbb
fdivrl
test
and
mov
sbb
cwtl
test
push
sub
lcall
mov
test
ret
adc
push
clc
outsl
leave
lods
dec
pop
or
inc
add
pop
ret
sub
jl
mov
movb
xchg
sub
insl
aam
shlb
fs
and
lock
mov
mov
push
cmp
int
mov
mov
and
in
push
out
push
movsl
mov
dec
mov
adc
mov
sbb
enter
add
cmp
cmp
cmp
aam
mov
add
mov
mov
stc
lock
xor
sbb
mov
and
jnp
into
cmc
jo
popa
cwtl
pop
dec
pusha
cltd
fisttpll
test
push
arpl
pop
test
mov
out
iret
in
arpl
xor
out
pop
sub
rcrl
dec
xchg
pop
pusha
clc
out
sub
lock
xchg
rolb
roll
shrb
shll
jmp
mov
aam
mov
movsl
mov
loopne
xor
push
sbb
fisttpll
ret
out
out
xchg
mov
or
addr16
in
movsb
adc
or
daa
repnz
cltd
pop
nop
fisubrl
jmp
and
out
fs
sub
mov
fwait
mov
pop
outsl
xorl
and
repz
movsl
mov
pop
xor
cltd
add
imulb
into
mov
jle
lods
aam
mov
aaa
movsb
jge
mov
scas
lock
pop
fstps
push
or
or
mov
data16
ja
inc
dec
mov
xchg
fwait
inc
jo
fs
add
scas
fwait
stos
push
adc
dec
movsl
xchg
push
jnp
sub
in
xlat
je
mov
xlat
or
sub
sbb
nop
lock
sbb
aam
test
jg
xchg
sti
lock
inc
scas
jno
jne
sub
adc
dec
pop
scas
movsb
jecxz
cltd
mov
mov
js
out
mov
jmp
in
inc
adc
cld
aas
push
xchg
addb
movsb
fstpl
addr16
pop
push
sub
fisubrl
xor
or
jmp
jmp
sub
mov
adc
cmpsl
popa
push
add
sahf
adc
sub
mov
ret
mov
pop
xchg
sbb
daa
bswap
jmp
cmp
cli
pusha
int3
pop
add
ret
filds
xchg
inc
mov
sub
test
mov
push
push
enter
out
sub
int3
insb
mov
xchg
pusha
jno
mov
xchg
mov
lcall
mov
ss
lahf
push
ja
xchg
fstpl
jmp
subb
jg
je
push
nop
dec
pop
push
popf
jmp
sbb
cmc
mov
daa
stc
in
push
mull
mov
mov
rol
xor
sbb
insb
xchg
into
hlt
mov
sub
push
mov
fs
test
daa
cltd
push
lods
xchg
ret
add
hlt
push
and
scas
fnsave
es
test
pop
sbb
andb
aam
aaa
rcll
cmp
add
pop
hlt
icebp
cmc
jbe
or
cmc
loop
lock
xchg
cmp
jne
jbe
fwait
add
jle
jmp
cmp
xchg
mov
or
push
mov
iret
insb
jnp
testb
sarb
icebp
outsl
push
dec
mov
rclb
adc
sbb
sub
into
or
ja
inc
pop
and
xchg
mov
int
lea
aaa
mov
movaps
outsb
popa
loopne
sub
cs
out
ficoms
in
pop
mov
roll
into
xchg
pop
ret
data16
shll
push
or
int
aas
cmp
ret
jg
xchg
inc
jge
fwait
out
in
stos
push
mov
sbb
je
in
dec
sbb
mov
pop
imulb
out
pushf
pop
je
loopne
cmpsl
mov
das
out
aaa
dec
pop
addl
loope
cld
mov
cwtl
jmp
or
jne
daa
sub
jge
out
in
sahf
callw
pop
push
fcompl
push
push
insl
outsb
lds
mov
stos
ss
mov
addl
sub
stos
sbbl
mov
push
insl
stc
cmp
mov
mov
mov
pop
xchg
out
mov
cmc
pop
mov
sbb
movsl
sbb
mov
cmpsb
lcall
add
int3
pop
orl
sti
xchg
ret
in
shl
cld
adc
rcrl
xchg
and
push
xchg
jns
orb
loope
call
lahf
pop
mov
sbb
orl
js
pop
inc
sub
jle
lods
mov
jns
popf
mov
push
clc
mov
aad
cmp
adc
adc
sti
mov
cwtl
rclb
xchg
mov
call
pop
sub
xchg
nop
dec
ljmp
adc
jno
data16
jl
or
ja
sbb
out
ret
push
cmc
daa
cmpsb
inc
mov
sub
jle
aaa
aaa
adc
jmp
pop
out
push
jnp
test
rolb
dec
jnp
add
imul
push
push
rolb
dec
addr16
jle
jmp
jbe
or
cmp
gs
pusha
stos
ret
inc
cmp
mov
testb
jg
cmp
jg
push
pop
push
decb
adc
shll
mov
popf
xchg
push
cmpsl
jno
jg
shrl
pop
jg
leave
clc
sbb
fistpl
stos
test
push
dec
je
scas
inc
movsl
or
push
stos
in
es
jge
sub
jne
sbb
das
adc
adc
out
es
ss
mov
xchg
repnz
jge
mov
mov
adc
pop
or
int3
or
mov
cmpsl
push
cmp
cld
xchg
in
std
adc
lea
jns
sub
je
call
mov
jns
cwtl
jp
loop
dec
into
mov
mov
mov
sti
or
daa
rcrl
dec
cwtl
cmp
add
test
push
insb
sbb
iret
mov
scas
or
into
daa
ret
aad
mov
or
or
clc
jne
aam
push
dec
jg
leave
jle
xchg
mov
push
xchg
inc
loopne
out
sbb
test
pop
and
jp
rcrl
rorb
inc
cwtl
cs
mov
inc
jp
clc
fs
test
test
mov
je
pusha
scas
pop
fdivrl
jg
fsub
inc
jl
loop
push
out
or
xor
inc
aad
or
dec
clc
mov
or
repnz
inc
popa
mov
sub
js
jle
push
mov
imul
pop
lods
xchg
adc
jnp
rorb
es
call
sbb
pop
pop
mov
mov
loop
mov
fmull
cld
daa
or
mov
sub
ljmp
mov
add
and
jae
ds
push
xchg
aad
jne
dec
cmp
lahf
and
dec
xor
mov
xor
das
in
ret
jae
inc
test
lret
lds
jge
in
push
js
pop
mov
or
arpl
stos
pop
xabort
xchg
pop
lcall
mov
imul
movsl
lock
mov
cmpsl
imul
dec
enter
mov
cltd
jne
sbb
cs
xor
add
inc
mov
cmp
adc
xchg
xchg
popf
add
int3
aas
push
jg
jbe
or
jg
add
jge
js
pop
pushf
enter
popa
ljmp
ret
nop
mov
xchg
andb
mov
adcl
int
test
push
jg
sub
xlat
mov
lret
sub
dec
cmpxchg
orl
adc
jbe
xor
dec
das
inc
pop
cmp
dec
rol
repz
testl
push
or
rep
cmp
xchg
sti
sbb
push
lods
dec
xchg
cmp
sbb
leave
xchg
es
push
fisttpll
xor
je
adc
out
sub
push
divb
call
lea
adc
push
repz
in
sti
xchg
hlt
enter
fwait
imul
mov
mov
out
lock
pop
lret
daa
mov
mov
mov
jne
inc
dec
data16
lods
imul
mov
pop
mov
out
xor
push
push
inc
push
gs
sti
stos
cli
loopw
add
push
cmpsb
shlb
outsl
add
push
mov
ret
mov
cmp
inc
js
iret
cld
cmp
cmp
imul
sbb
scas
dec
sti
shll
lcall
mov
call
mov
inc
fidivrs
and
daa
push
cltd
push
add
jge
ret
xor
dec
inc
imul
pop
fistps
mov
addr16
jb
lock
xor
adc
mov
add
add
jno
dec
add
jb
dec
push
clc
jecxz
add
rorl
test
sbb
ret
loop
imul
pop
jae
push
hlt
cmp
push
syscall
inc
ja
cmpsb
push
mov
push
cmp
jne
pop
mov
out
push
movsb
in
mov
cmp
xchg
or
aam
or
popa
or
sbb
sbb
lock
leave
loopne
testb
inc
lret
leave
imul
iret
sub
or
mov
int
push
mov
addr16
outsl
push
arpl
mov
hlt
cs
cwtl
xchg
pop
test
dec
adc
and
xchg
push
rcrb
adc
fsubrs
adc
cmp
pop
dec
mov
and
dec
pavgb
mov
cmp
loopne
add
mov
adcb
xchg
ret
dec
jecxz
lret
dec
add
xor
lods
pusha
sbb
cmpsb
xchg
push
mov
stos
cmp
fldt
jns
ds
popf
jnp
fwait
into
out
jmp
gs
push
cwtl
fcmovu
out
lock
ljmp
cmovbe
dec
pop
add
in
ds
ljmp
imul
push
repz
sbb
and
add
add
add
jg
lock
xor
out
movsb
and
dec
ret
mov
fdivrl
ret
xchg
inc
sub
sbb
call
xor
jg
dec
mov
lods
test
scas
ja
add
jmp
pop
test
add
aaa
mov
shll
or
cltd
and
test
mov
lcall
stos
cmc
xchg
ljmp
push
lcall
mov
jo
xor
jne
jae
andl
or
sbb
rolb
test
cmp
jns
pop
mov
neg
mov
mov
jae
xchg
push
jno
xlat
adc
stc
xor
jmp
aas
inc
jb
aaa
jb
pop
cli
int3
inc
subl
lcall
hlt
pop
sub
xchg
add
mov
decb
div
in
and
pop
aad
fs
pop
jo
fistps
mov
add
rclb
push
dec
ret
jle
adc
add
xor
lret
adc
adc
pop
cmp
add
pop
adc
xlat
outsb
repnz
int
push
fstpt
test
mov
call
dec
pop
adc
mov
data16
jb
test
mov
jp,pt
push
dec
aas
clc
inc
ds
mov
push
inc
insl
xor
pop
xor
ret
jecxz
test
mov
push
inc
stos
ds
mov
jle
fwait
sbb
add
das
stc
stc
cmp
pushl
js
pop
pmaxsw
ret
fstpl
fistps
jle
pop
jo
jp
mov
lods
cmp
shll
in
pusha
pop
push
mov
test
jb
ja
jbe
std
push
lods
es
imull
mov
notb
xorb
addr16
jae
cmpsl
push
pop
adc
push
dec
xchg
xchg
and
pop
sub
lret
mov
aam
mov
dec
inc
jge
outsb
aam
mov
sub
enter
sti
mov
pop
testl
vmread
lcall
bound
xor
ds
cmp
mov
mov
int3
jno
mov
cmp
sub
push
jmp
add
mov
adc
cmp
gs
xlat
ret
ja
leave
mov
ficoml
dec
mov
lea
test
sahf
pop
aam
imul
cmp
ret
push
std
imul
std
push
adc
aad
push
pop
sarl
cmp
insl
loop
dec
cld
mov
clc
popa
and
jp
jns
xor
inc
add
xor
xor
repz
adc
jo
mov
dec
popl
adc
jo
xor
enter
rorb
int3
nop
psubq
xorl
xchg
mov
dec
inc
sti
push
sbb
loope
dec
xchg
movsb
mov
sub
or
pop
xchg
dec
lcall
add
or
sbb
pop
and
add
push
dec
xchg
fisubrl
out
out
enter
negb
push
push
dec
and
jo
mov
push
imul
jg
fisttpll
insl
add
jnp
add
js
mov
pop
aas
daa
ret
addl
insb
mov
pop
sbb
aam
enter
mov
popf
rcr
sbb
mov
lock
and
sbb
pop
setb
rorl
jecxz
add
flds
rcrl
push
es
fmuls
inc
lock
dec
sub
pop
in
mov
jp
or
es
pop
dec
imul
subb
or
fs
aaa
paddd
fists
sub
data16
mov
inc
pop
jmp
xchg
mov
insl
mov
out
xorl
movsb
test
sub
push
cmpsl
push
lret
jge
sub
push
cmpsl
inc
push
test
dec
push
dec
mov
aaa
push
mov
and
xor
mov
jb
dec
jb
mov
push
loop
mov
cmpsl
fdivp
push
xor
xchg
rcrl
xchg
je
hlt
pop
stos
xor
mov
inc
insl
fistpl
cli
ljmp
daa
cmp
or
cmc
test
cld
loop
jg
xorl
sbb
sub
hlt
push
cmp
xor
push
aad
test
sbb
push
mov
jl
stc
dec
jge
cmp
sbb
dec
in
lret
inc
ficoms
and
sbb
jg
stos
push
jmp
dec
sbb
pop
popa
xchg
xchg
push
lods
out
das
xor
sarb
mov
addb
and
inc
inc
xchg
sbb
cmp
xor
aaa
insb
add
subl
xlat
push
cli
stos
and
int
ficompl
xchg
out
lcall
jecxz
and
mov
sahf
adc
inc
cmp
add
lcall
inc
in
cltd
add
and
lods
dec
enter
fs
lods
mov
scas
imul
popa
mov
stos
cmc
test
test
push
xlat
sbb
inc
and
imul
test
sub
xchg
dec
leave
stos
add
sarl
sbb
idivl
cmpsb
add
outsl
mov
ljmp
add
iret
push
orb
mov
cmc
sub
xchg
pop
inc
push
and
adc
pop
les
insl
loopne
adc
or
gs
pop
mov
lcall
fsts
jle
movsl
xor
imul
ja
or
pop
pop
pop
xlat
int3
and
push
ret
jge
add
push
dec
aad
xchg
stc
test
cmp
add
test
mov
cld
dec
bound
dec
mov
les
ss
mov
sahf
xchg
fucomp
xchg
sbb
and
int
push
lds
cmc
or
ds
fadds
jno
add
xor
inc
mov
mov
popa
inc
movsb
loopne
fwait
movsb
cmp
nop
shlb
sbb
cmpsb
out
popf
mov
fnsave
dec
int3
jp
mov
jmp
movsl
pop
pop
jno
fildll
fisubl
xchg
adc
clc
sbb
sub
lock
lods
push
push
decl
and
xchg
and
cltd
push
inc
push
je
je
std
ja
or
aam
and
mov
scas
je
lods
sbb
xchg
jmp
sbb
add
or
stos
in
loope
lahf
jge
clc
mov
adc
lea
ret
cmp
jmp
mov
mov
fstpt
jo
or
mov
mov
std
add
jmp
xchg
mov
rol
or
push
jbe
inc
outsl
mov
pop
es
dec
icebp
pusha
lret
fldcw
int3
sub
pop
xchg
mov
insb
lea
sbb
dec
sub
inc
mov
jle
jg
sub
mov
jmp
dec
mov
cmp
lea
ds
stos
xchg
xchg
mov
cltd
mov
into
dec
or
xor
inc
insl
cs
shll
ds
sub
jl
mov
mov
pcmpeqb
testl
sbb
mov
jo
sub
ds
std
aam
int3
gs
mov
fsts
icebp
ljmp
inc
into
add
xchg
test
add
test
andl
push
dec
ljmp
lcall
mov
shl
add
leave
inc
test
loop
lods
pop
aas
imul
movsl
push
mov
stos
xchg
stos
jbe
xor
mov
out
xchg
mov
push
mov
cmpsb
stc
pop
ret
push
repnz
popfw
mov
mov
fcomi
ret
in
mov
adc
mov
sub
jge
xchg
call
ds
pop
xor
dec
sub
cwtl
jle
addr16
outsb
cmpl
or
rclb
fidivl
out
cli
ret
test
loop
fnsave
mov
scas
loope
inc
das
arpl
repnz
test
aam
fistl
out
ljmp
cmp
or
pop
mov
xchg
mov
pusha
insl
stos
mov
xor
add
shrl
push
lahf
aaa
xor
mov
cmpb
mov
add
add
xchg
or
add
adc
inc
or
inc
jns
test
add
lods
nop
scas
add
inc
int
mov
scas
or
frstor
fnstenv
mov
mov
aaa
dec
out
dec
inc
xor
jo
out
fisubrs
jg
pop
fiadds
pop
jne
test
mov
xor
or
cli
lahf
aaa
mov
xchg
jae
sub
call
js
imul
jo
inc
pop
sbb
sbb
pushf
mov
jae
adc
movsl
das
cmp
sub
out
bound
mov
push
xchg
imul
sub
lcall
mov
test
fwait
push
mov
cmp
dec
inc
jns
inc
scas
lahf
inc
inc
mov
cs
cmp
mov
pop
flds
sub
mov
mov
xor
jmp
and
mov
or
dec
cld
xchg
jo
test
add
scas
jecxz
cmp
pusha
popa
aad
rcrb
inc
pop
push
stc
ljmp
in
xchg
xchg
lock
popf
lods
iret
jl
outsb
lret
movsl
es
mov
or
cmp
jb
stc
ss
cltd
add
pusha
dec
xchg
push
sbb
sarb
add
fstpl
repnz
cmpsl
jbe
dec
out
push
jb
fadds
inc
out
add
outsl
dec
gs
add
sbb
xchg
repz
pop
jns
mulb
mov
jnp
fsts
shrb
ja
leave
loop
mov
mov
jnp
int3
mov
mov
lcall
inc
sub
xor
test
mov
xor
sub
push
fsts
movsb
and
scas
fs
push
ss
je
pop
or
push
xchg
sbb
xor
sub
fmul
enter
stos
xorl
insl
mov
je
sbb
insb
add
iret
lahf
dec
into
xor
mov
cltd
add
mov
lock
push
cli
xchg
dec
mov
pop
adc
out
repnz
mov
std
push
lods
sub
pop
cmp
push
xor
mov
pop
xchg
jmp
xor
xlat
mov
imul
push
rolb
or
jl
add
xchg
sub
lock
jp
in
loope
jbe
pop
xchg
or
and
mov
loopne
sub
cmp
xchg
stos
je
je
pop
inc
mov
sti
jmp
push
ret
rcr
xchg
mov
std
push
xor
and
sbb
shll
push
adc
push
sub
dec
mov
lret
xor
fstpl
mov
cmp
mov
pop
mov
loope
cmpsl
or
loop
and
cmp
aaa
sbbl
sbb
sbb
mov
insl
add
shrl
notb
out
sub
push
mov
rol
sub
roll
aaa
clc
fnstcw
push
in
lods
rcll
xchg
push
jg
cmp
jbe
hlt
shrl
sub
dec
push
adc
add
hlt
test
cwtl
inc
dec
rcll
jp
add
add
loop
adc
dec
xchg
cmc
inc
outsl
xchg
cmp
out
jno
mov
je
jp
sbb
nop
lea
inc
aas
xchg
inc
rol
gs
and
lock
inc
mov
mov
or
mov
int3
sub
shll
mov
mov
ljmp
adc
xor
out
fdiv
popf
inc
aas
dec
adcl
mov
add
loope
or
jns
cs
les
gs
lods
cmp
in
xor
mov
jo
adc
pop
mov
pop
lcall
push
testb
cmp
pop
inc
add
std
sub
imul
sub
mov
mov
xchg
cmc
in
mov
and
mov
in
mov
stos
daa
imul
clc
add
stc
push
aas
mov
jl
jmp
sub
or
scas
pop
push
push
cld
mov
shll
push
movsb
cmp
xor
imul
xchg
or
mov
sbb
jl
pop
mov
leave
dec
inc
xor
loopne
xlat
xchg
xor
fstp
insl
adc
bswap
cld
pop
fisttpll
nop
ss
cmc
jmp
xchg
repz
mov
inc
cmp
jmp
filds
sbbb
pop
dec
xor
bound
in
daa
jb
mov
cmp
or
out
sbb
mov
sarl
xchg
test
test
js
pop
rcr
ficoml
pop
mov
xchg
cwtl
adc
sahf
arpl
or
movsb
sbb
adc
xor
mov
fldl
pop
outsl
lds
push
leave
or
push
imul
negl
cltd
icebp
pop
mov
sbbl
or
test
mov
shll
enter
mov
leave
mov
out
xchg
out
cli
mov
mov
jns
sub
lods
or
xor
sub
lods
repnz
cmc
ret
cmpsb
dec
mov
lahf
arpl
cmp
cmc
inc
jno
sub
repz
mov
lock
push
mov
out
jg
jo
adc
imul
das
out
dec
xchg
repz
arpl
pop
dec
cld
xchg
ss
dec
inc
and
loope
mov
cwtl
mov
jne
inc
jno
sti
popf
outsl
stos
and
aam
sar
jae
in
pusha
push
pop
mov
pusha
xchg
outsb
popf
sub
mov
andl
sub
ds
sahf
lret
gs
jb
imul
cmp
jl
aad
and
lds
xor
in
push
add
jle
jne
outsb
ficompl
enter
in
adc
mov
vmread
sub
jmp
jns
or
add
xor
cmpsl
inc
mov
iret
push
pushf
add
adc
sub
fsts
es
ret
push
lds
lds
ret
insl
imul
les
jmp
dec
xor
dec
aam
fldl
shr
mov
popl
fdiv
sbb
out
xchg
rcrl
and
in
je
imul
mov
add
mov
lock
mov
push
lcall
repz
test
xor
mov
lret
push
sar
test
test
xchg
loope
adc
push
inc
fisttps
dec
sub
stc
adc
jne
xor
dec
or
rcrb
or
lea
pop
mov
fnsave
movsb
inc
inc
aam
popa
clts
mov
and
mov
fadd
and
or
jb
jecxz
jmp
clc
outsl
xor
xor
shr
jmp
out
dec
dec
mov
in
xor
sahf
adc
lods
bt
cs
sbb
jg
roll
or
or
jne
mov
sbb
inc
flds
pop
pop
sbb
lea
add
andl
cld
ja
call
sub
push
into
and
fwait
mov
inc
mov
dec
pop
fisttpll
movsl
out
sbb
xchg
cmp
mov
jns
push
push
rorl
mov
mov
into
pop
push
dec
xor
or
fsubrp
push
or
xlat
mov
xchg
les
xor
push
cmp
sub
jp
mov
decl
std
lcall
out
insb
and
sbb
int3
add
outsl
iret
stos
int
insb
pop
cmp
mov
arpl
lahf
aas
xchg
lret
mov
dec
loop
shl
xchg
cmpsb
imul
data16
ret
mov
negb
sub
and
filds
lods
xchg
add
aad
andl
cli
ret
push
pop
jp
inc
movsl
dec
cwtl
xlat
and
fsubs
xchg
loopne
popa
adc
jo
pop
xchg
xchg
es
inc
jno
cmp
rcll
adc
rcpps
mov
add
add
push
pop
mov
mov
jge
inc
setb
test
xor
sbb
xchg
cmp
add
sti
fcmovnbe
adc
inc
xor
ljmp
pop
lret
loope
xor
das
arpl
ss
xchg
test
icebp
xor
cmp
mov
fs
stos
cld
pushf
cmpsb
xor
cli
xor
add
add
test
xor
or
jne
dec
mov
fcoml
add
push
shl
lods
faddp
cmp
mov
push
lods
pop
xlat
lods
and
mov
mov
inc
test
ljmp
pop
hlt
mov
repz
add
mov
cmp
sbb
lds
sub
outsb
sbb
mov
mov
mov
or
popa
jne
aad
repz
xchg
inc
outsb
push
push
dec
sub
scas
das
sarl
fisubrs
hlt
test
cmp
sti
inc
mov
and
loop
mov
xor
aam
add
inc
and
xorl
xor
fldl
subl
sahf
mov
es
xchg
lahf
mov
xchg
in
rcrb
xchg
sbb
adc
cmpsb
and
sub
in
push
sub
and
movsb
es
sbb
sar
dec
or
dec
je
or
push
pop
pop
insl
inc
cld
fistpl
in
cld
ljmp
fstl
ljmp
rorl
stos
fisttpl
push
repz
orb
mov
fcmovbe
test
lahf
dec
popa
pop
aad
push
ja
mov
dec
jge
jp
cmp
ret
test
pop
adc
imull
mov
out
mov
lock
inc
xor
movsl
or
mov
mov
dec
dec
lods
jecxz
in
mov
outsl
icebp
sarl
adc
mov
push
pop
mov
sahf
push
cmp
xchg
jle
out
mov
sti
scas
aam
mov
mov
inc
or
mov
fisubrl
add
in
orb
cmpl
pop
sub
jmp
pop
fisubs
iret
pop
lds
add
in
ret
pop
lods
inc
lods
and
adc
int3
xchg
out
andl
xchg
lods
sti
loop
mov
lret
sbb
lods
fs
push
mov
xor
stc
and
cmp
jbe
fwait
ljmp
mov
es
lods
inc
ja
or
mov
rcr
repnz
sub
sub
in
movsl
push
leave
fildll
idivl
leave
js
xchg
stc
sbb
shl
cli
pop
lock
ja
pusha
aaa
pop
js
iret
xor
push
add
outsb
arpl
and
fists
cmp
add
out
je
adc
aam
loopne
push
and
push
cwtl
sub
mov
mov
leave
outsl
jl
or
jo
mov
test
pusha
jnp
dec
push
mov
mov
std
xor
or
add
in
mov
test
and
pop
dec
mov
pop
insl
sub
lds
insl
out
in
and
mov
movsb
and
push
ja
ficoms
adc
jns
rorb
cmp
push
iret
arpl
cwtl
mov
pop
fsubr
dec
cwtl
cmpb
movsl
aaa
int3
mov
or
cs
repnz
jnp
cli
push
mov
orl
scas
mov
xchg
sti
in
and
sbb
and
pop
dec
scas
cmp
pop
ds
inc
sti
push
and
aam
clc
and
es
inc
arpl
xlat
cmp
sub
pop
sbb
sbb
shll
shrl
dec
mov
cltd
fidivrl
pop
es
aad
imul
jno
lds
pop
and
mov
cltd
sub
data16
outsl
icebp
push
out
out
or
pop
fs
cmc
mov
or
cmp
es
sub
pop
ffreep
adc
lret
in
dec
jl
das
mov
stos
fstpt
fistpl
dec
jb
shlb
mov
fdivp
xchg
loop
daa
mov
sub
enter
sub
xlat
mov
int
insl
imul
mov
shrb
imul
das
push
ret
lods
stos
pop
dec
adc
pushf
pusha
or
test
fsubrs
addl
jp
adcb
das
test
or
cltd
arpl
adc
inc
inc
popa
jecxz
jg
or
mov
sbb
push
jge
add
jnp
or
sbb
push
je
lahf
cmp
ficomps
add
jmp
sub
idivb
inc
xchg
cmpsb
jns
adc
mov
insb
inc
xlat
cwtl
jl
push
and
mov
out
push
xchg
xorb
ljmp
jo
jmp
aam
dec
pop
and
test
es
mov
call
jo
loopne
xor
aam
addr16
pop
scas
pop
or
jae
adc
sbb
cmpsb
lock
mov
std
push
lret
cld
fs
push
aad
stos
test
dec
dec
leave
in
lods
data16
jns
cld
mov
outsb
jmp
xor
jecxz
cli
push
push
cltd
adc
ret
test
test
mov
cmp
in
es
adc
mov
lea
imul
call
add
call
dec
loop
pop
pop
loop
add
mov
jle
icebp
jecxz
je
and
and
jp
xchg
xchg
mov
in
cmpsb
popa
xor
insb
mov
adc
mov
icebp
xchg
xchg
pop
cmp
into
adc
pop
adc
lret
mov
rclb
pop
mov
jbe
jmp
out
movsb
jns
rcl
loopne
and
aam
into
xchg
ror
test
mov
std
mov
sar
sahf
fidivrs
rclb
push
sbb
sarb
cmp
shll
pushf
adc
jg
pop
inc
inc
aam
or
ljmp
add
push
jmp
push
and
sub
push
jp
dec
test
mov
mov
ja
add
popl
mov
addr16
inc
adc
jmp
mov
add
icebp
and
dec
fldcw
push
inc
stc
push
cwtl
cltd
mov
sbb
outsb
push
roll
test
inc
add
and
push
insb
notb
mov
ret
aam
movsl
xlat
inc
mov
fnstsw
jno
xor
stc
jns
add
mov
or
cltd
dec
lods
orl
jg
jmp
pushf
push
test
cltd
xchg
repnz
out
mov
and
sbb
test
mov
sbb
lock
pop
test
mov
mov
dec
and
mov
mov
lahf
test
push
xchg
jne
adc
xor
icebp
gs
dec
sbb
sbb
push
or
jns
arpl
test
mov
adc
lds
mov
not
pusha
mov
pop
test
mov
sub
push
imul
repnz
outsb
jle
add
inc
aad
test
mov
scas
hlt
int3
push
outsl
pop
xchg
mov
cmc
jecxz
int3
lock
sbb
lmsw
mov
dec
jb
sub
addr16
lret
rorb
cwtl
dec
shrl
repnz
dec
jns
int3
pop
pushf
inc
data16
in
out
loopne
mov
pop
lahf
sbb
pop
jbe
ss
jne
add
popl
sub
mov
xor
jge
and
sbb
shlb
ss
cs
sub
xchg
jp
push
ret
les
lods
sub
mov
ljmp
cwtl
jae
sti
in
iret
arpl
stos
test
in
loop
jge
dec
adc
fstp
xchg
pop
inc
out
cmp
insl
aas
fsts
push
push
cs
es
pop
js
pop
pop
inc
in
lods
ficomps
loop
repz
add
adc
adc
add
outsb
cld
daa
add
mov
and
jg
shrl
mov
movsl
mov
add
pop
sarl
subl
xchg
loopne
dec
cmp
and
scas
mov
pop
mov
push
and
push
stos
add
jle
hlt
dec
lret
pop
dec
cmp
push
mov
out
dec
fsubp
sti
iret
mov
out
cwtl
sub
add
lea
mov
jg
dec
fstpt
push
insb
loopne
scas
inc
cmp
inc
test
popa
cld
or
dec
add
popl
push
cmpsb
dec
inc
xor
in
fstps
ffreep
cmpsl
lds
push
or
stc
scas
js
sarl
add
xchg
mov
and
pop
cmp
inc
xchg
push
es
in
push
mov
loop
mov
sbb
stc
pop
mov
aaa
icebp
cmpsl
neg
int
popa
arpl
mov
jne
call
mov
sub
test
and
es
and
jno
push
fs
ds
pop
scas
inc
std
popf
sbb
and
imul
xchg
push
out
fst
mov
xchg
pop
push
cmpsl
add
shll
sub
or
adc
sub
xor
mov
pop
leave
push
cmp
int3
sbb
or
add
lock
adc
adc
xor
sti
scas
adc
and
fcmovne
jo
cmp
adc
ss
hlt
fistps
and
lret
mov
adc
mov
in
leave
mov
in
out
rcrl
movsb
jmp
pop
jp
cmpl
mov
pop
inc
lods
push
jne
sti
xor
xchg
shr
imul
or
lret
cmpsb
testl
xor
xor
cmp
call
add
xorb
sub
test
repnz
lock
xor
push
and
cmpsl
jmp
aad
mov
shll
sbb
xor
test
shr
inc
inc
stos
pushf
dec
lock
jbe
adc
pop
push
sbb
or
sub
add
or
cltd
xor
jb
ss
fisttpll
outsl
iret
ss
xchg
stc
ja
mov
and
xor
ret
dec
ret
mov
mov
popa
pop
mov
push
imul
cli
or
ror
jge
xchg
stos
mov
add
popl
pop
mov
outsl
xchg
ja
lret
cwtl
insl
jl
popa
out
add
fs
cmp
repnz
ja
dec
aas
mov
ljmp
or
jmp
add
hlt
mov
or
dec
jne
inc
dec
aaa
inc
cmp
in
out
in
stos
lret
stc
std
popf
or
daa
cmp
mov
and
dec
in
cmpsl
out
xchg
cmp
out
sub
xchg
ffree
or
mov
or
arpl
xchg
repz
call
aad
inc
xchg
jb
loop
stos
je
call
addb
mov
pop
xchg
call
jae
cltd
insb
cmpsb
stos
dec
loop
clc
jnp
or
nop
out
adc
hlt
jae
jecxz
dec
pop
xchg
in
sbb
add
inc
add
clc
or
cmp
sub
cmp
sub
and
popa
test
push
sbb
mov
jns
jbe
cmp
pop
out
popa
das
add
push
inc
xchg
stc
or
cmpsl
adc
nop
scas
in
mov
cmc
or
xchg
fwait
push
popa
push
cmp
dec
rorb
repnz
lret
jne
push
sbb
scas
test
adc
cmp
pop
lea
lods
and
cpuid
pop
outsb
jbe
fsubs
and
aad
daa
das
repz
imul
orl
jmp
aad
pop
movsb
int
ja
add
jg
pop
inc
jl
inc
test
fmulp
sub
mov
stos
lock
stos
mov
sbb
pop
ds
stos
sub
cli
sbb
mov
jb
push
xor
mov
testb
outsb
xor
and
push
mov
xchg
js
dec
cmp
sbb
imul
shlb
lds
inc
stos
sbb
inc
fistps
jecxz
jge
rcrl
fnstsw
pop
jmp
lret
rcl
mov
xchg
aas
ret
inc
xor
dec
repnz
pusha
sub
mov
adc
sbb
or
pusha
shlb
outsl
or
or
insl
nop
lds
cmpsl
or
popf
int3
in
test
pop
push
stc
int
mov
pusha
enter
cmp
movl
mov
les
dec
arpl
xor
aad
cmpsl
shlb
sbb
pop
cs
testl
repz
pushf
clc
das
jmp
mov
xor
pop
orb
ljmp
popf
sub
jg
sbb
scas
mov
fcomps
jge
cmpsl
ret
mov
cs
sbb
fdivr
or
pop
in
sbb
dec
sub
adc
lock
mov
xlat
or
xchg
ret
or
out
jge
sub
mov
repnz
scas
sbb
sub
mov
jae
dec
pop
or
sbb
movsl
mov
add
pop
mov
insb
push
outsl
mov
popa
fimull
add
mov
enter
icebp
pop
sbb
imul
jecxz
xor
adc
jp
mov
lret
inc
mov
stc
cmpsb
sti
fbld
push
xchg
imul
in
sub
push
xchg
push
ds
push
mov
sub
popf
imul
test
inc
mov
push
mov
lock
imul
into
cld
jg
repz
pop
mov
or
out
push
mov
inc
mov
inc
repz
or
lcall
das
cmpsl
mov
mov
nop
ljmp
mov
dec
push
sub
jp
pop
stc
inc
out
insb
leave
jne
jg
mov
cmp
les
mov
pop
and
or
sub
dec
inc
xchg
pop
xchg
mov
cmp
sub
pushf
mov
cli
pop
jns
shlb
pop
inc
rcr
cmp
push
movsl
int3
dec
rcrl
bound
mov
pop
setge
outsl
push
imul
sbb
or
inc
mov
jne
arpl
and
inc
mov
test
popf
add
sbbl
push
pop
push
loopne
mov
cltd
fwait
jge
int
out
outsb
sub
jbe
sbb
sti
sub
leave
xchg
enter
or
sbb
sar
je
lods
cltd
out
push
mov
push
icebp
scas
jne
mov
addr16
jb
mov
stos
xchg
sub
outsl
and
lods
int3
or
shlb
iret
xor
xor
xchg
aaa
pop
in
mov
xchg
sub
dec
xchg
and
jo
add
lods
inc
cld
mov
mov
push
pop
mov
jl
sbb
inc
ret
mov
fmuls
add
xchg
popf
sahf
popf
imul
pop
mul
xchg
sub
out
dec
pop
ret
fidivrs
fwait
xchg
scas
int
cmp
jno
movsb
popf
loopne
fs
out
xchg
js
sub
stos
ret
mov
rcll
mov
or
popl
cmp
mov
shll
aaa
cmpsb
push
xchg
cmpsl
pop
xchg
inc
mov
push
inc
iret
cli
mov
add
xor
fidivl
sub
adc
sbb
lcall
enter
jp
pop
les
aas
repnz
or
sub
pop
pop
push
jp
mov
inc
imul
test
or
mov
rcrb
fwait
sbb
out
pushf
mov
mov
xor
cmpsl
enter
mov
aaa
dec
inc
shrb
push
mov
out
loop
sub
and
icebp
and
mov
test
jge
cld
add
pop
lock
sub
std
das
inc
rorl
pop
xchg
mov
ss
ja
sti
rolb
xchg
xchg
fsubr
js
iret
aam
cmp
mov
mov
mov
cmp
insw
jl
pushf
add
and
xchg
sahf
inc
cwtl
or
popa
mov
inc
pop
cmpsb
ja
cltd
lock
popa
fdivrs
jb
xor
test
lret
mov
outsl
mov
ds
adcb
cmpsl
out
jmp
push
xchg
scas
shll
push
std
fucomi
idivl
cmpb
mov
dec
mov
mov
les
sub
mov
push
mov
out
pop
repnz
popf
xlat
out
movsl
mov
popa
mov
or
pop
cmp
aam
sub
dec
repnz
sbb
jecxz
pop
inc
jmp
fcomip
scas
pop
and
cmpsl
cmpl
stos
sub
and
sbb
addl
sbb
adc
xchg
addr16
outsb
or
mov
dec
jns
loopne
dec
jle
adc
mov
and
cmpsl
cmpb
and
int
adc
inc
mov
mov
lods
adc
mov
in
add
fists
aam
push
mov
mov
mov
cmpsl
shl
jae
xchg
inc
mov
dec
push
sbb
mov
mov
cmpl
mov
icebp
lret
mov
enter
in
inc
xchg
adc
mov
push
xor
mov
stos
mov
faddl
mov
in
rcrl
or
and
pop
imul
xchg
pop
fisubl
arpl
imul
cmpsb
xchg
xor
imul
push
out
ret
xchg
lret
pop
cmp
ds
mov
shlb
sub
insl
mov
rolb
in
mov
test
js
mov
xlat
test
inc
leave
js
mov
inc
jbe
push
mov
add
addr16
stc
std
pop
mov
ds
sub
push
out
push
pusha
sub
cmp
jns
jmp
popa
mov
and
adc
mov
pop
push
in
or
push
das
repnz
mov
mov
nop
and
ja
xchg
je
in
mov
ss
leave
dec
ds
adc
fdivrl
lods
push
sahf
adcb
pop
imul
mov
fcoml
daa
cmc
xchg
mov
lcall
inc
stos
sarb
fldl
sbb
adc
pop
jne
test
ss
pop
jmp
push
mov
insb
loopne
mov
imul
dec
std
push
divl
or
cmp
adc
or
pop
shrl
cmp
inc
loopne
popf
es
xor
into
mov
jl
adc
popa
mov
mov
test
ret
ret
cli
pop
adc
add
pop
lret
fsubs
test
in
inc
jne
imul
outsb
hlt
nop
orb
ficompl
int3
in
sub
jb
hlt
shrl
or
and
cltd
xor
imul
jmp
testl
add
jp
sub
jmp
xchg
aaa
push
cmp
or
and
mov
jae
cmpsb
dec
pop
mov
inc
sarl
sahf
sahf
test
inc
cmp
lcall
pop
aad
insb
inc
push
mov
jno
test
inc
and
push
out
xor
push
push
mov
jg
scas
scas
jl
leave
jmp
push
dec
fldl
cmc
mov
daa
test
lret
hlt
andb
nop
enter
enter
jns
adc
lahf
mov
arpl
dec
enter
rclb
ret
gs
sbb
dec
lret
mov
mov
lock
icebp
and
repnz
lahf
ret
test
push
adc
addr16
cmc
popf
mov
into
jg
pushf
fstps
xchg
pop
test
push
sbb
cmpsb
sti
adc
add
hlt
sti
pop
sub
les
push
mov
repz
icebp
sbb
loop
or
das
sbb
imul
dec
clc
popa
ret
pop
pop
test
and
out
shlb
push
test
add
jle
imul
jbe
cmpsb
pushf
pop
sbb
mov
and
loop
test
movsl
lret
lds
and
cmp
adcl
pop
adc
daa
pop
inc
stos
lock
hlt
jg
addr16
mov
jl
xor
xor
stos
pop
mov
es
sbb
pop
sub
push
stos
inc
hlt
sub
adc
push
xchg
dec
add
mov
sbb
fucomp
sti
cmp
xchg
jb
lahf
adc
xchg
js
aaa
into
das
or
lds
inc
imul
data16
shll
sbb
cltd
inc
and
xorl
rcrb
and
mov
testb
and
int3
fdivr
test
mov
add
out
fxtract
andl
jnp
jmp
pop
cwtl
inc
sub
popa
sbbb
pop
push
popa
jl
insl
cld
orb
pop
ret
setl
mov
mov
movsb
bound
andl
adc
inc
daa
pushf
enter
or
repz
push
sub
or
adc
cmpsb
pop
dec
cs
arpl
sbb
les
test
fisubl
scas
in
idivb
xchg
rorb
inc
inc
inc
popf
mov
jns
cli
les
fdivs
mov
in
push
into
mov
mov
call
add
pop
jne
dec
shlb
jno
and
repnz
dec
xor
lods
xchg
imul
es
and
loop
mov
jecxz
fmul
std
adc
mov
ds
mov
incb
in
sbb
stos
movsb
jmp
idivb
fs
cmp
shl
mov
pop
adc
cli
and
aas
fcomip
mov
jne
rolb
fistl
lret
jns
test
lret
sub
pop
xchg
push
xor
xchg
mov
mov
icebp
lea
fisubl
jae
sub
pop
daa
mov
scas
ss
add
jg
sbb
lret
aas
cmp
cli
jp
pushf
push
jecxz
ljmp
aam
fisttps
sub
pop
push
test
imul
cmpsb
mov
cltd
arpl
sbb
outsl
or
hlt
push
movsl
std
sbb
lods
or
je
pop
cltd
ret
ljmp
dec
sub
ret
jae
adc
loope
leave
testl
inc
pop
sbb
jns
les
aam
push
test
loop
push
ljmp
rcl
pop
cmp
cmpsb
in
mov
out
and
popa
adc
repz
out
sub
mov
popa
xor
mov
fs
nop
and
aad
hlt
je
jmp
lea
mov
rcrl
or
and
lock
mov
loop
adc
xor
dec
xchg
mov
nop
cmc
adc
xor
inc
stos
mov
push
xor
pop
sub
cltd
push
dec
popa
xor
cmc
xchg
test
xchg
push
test
cs
sbb
inc
xlat
pusha
lods
gs
mov
or
jecxz
inc
imul
repz
dec
dec
jne
push
iret
mov
in
sub
aaa
jne
cmpsb
jge
push
mov
jg
popf
imul
dec
or
sub
cld
xlat
gs
push
inc
fsubl
push
push
cmp
pushf
push
ret
test
sar
or
jbe
xor
dec
aam
dec
in
das
adc
lods
test
ror
mov
into
mov
sti
mov
cltd
loopne
repnz
shrl
incb
test
jae,pn
inc
push
in
stos
xchg
mov
in
inc
jp
mov
lret
iret
les
xchg
adc
and
xor
outsb
fiadds
pop
out
adc
movsl
jmp
aam
daa
sub
notb
pextrw
jle
cltd
and
les
pop
jg
mov
gs
xlat
scas
sub
pop
ljmp
lret
lods
mov
ficoms
dec
inc
jmp
adc
sbb
push
mov
inc
rolb
in
mov
push
xchg
int3
cmp
inc
shr
mov
lret
call
mov
jo
and
jne
adc
iret
mov
adc
jnp
ljmp
int3
and
hlt
fsubrl
xchg
push
inc
mov
fwait
mov
dec
add
enter
dec
sub
pop
add
push
outsl
scas
repnz
cmp
and
cmp
inc
in
dec
insb
outsl
cmpsl
sbbb
mov
pop
loopne
or
fistpl
in
xchg
inc
nop
or
adc
ds
mov
in
or
clc
ja
jo
sub
loope
daa
sub
ja
arpl
ret
inc
jmp
test
and
push
xchg
xchg
cld
inc
push
sahf
add
shlb
sub
jns
jbe
and
pop
fldl
pop
daa
or
shll
aas
sbbb
cltd
xchg
outsl
sbbl
rcl
insl
mov
cmp
std
les
inc
dec
or
and
repnz
mov
pop
xor
jns
lds
push
jns
cwtl
cwtl
mov
jle
mov
fildl
fidivrl
cmp
cltd
sub
cwtl
mov
xchg
adc
or
mov
sti
add
in
or
sbb
or
leave
xor
movsl
jb
jg,pn
sub
sub
jg
nop
clc
sti
adc
aad
loopne
mov
cmp
mov
std
jno
test
out
sbb
xor
pop
lcall
fsqrt
mov
inc
jnp
adc
lea
cmp
imul
pop
add
add
popa
fildll
call
lea
fwait
inc
jmp
mov
cs
outsb
sti
pop
fdivs
mov
bound
push
dec
push
and
dec
inc
pop
cs
push
pop
mul
pushf
pop
mov
push
fisttps
nop
xor
cld
mov
loop
pop
aam
pop
mov
cmp
push
dec
push
in
jge
push
iret
jb
ret
icebp
out
lods
pop
hlt
sub
and
mov
es
xchg
mov
inc
imul
adc
aas
ds
sarl
lock
cmp
leave
mov
or
pop
lahf
out
inc
mov
int
sbb
addr16
or
fucomp
xchg
pop
jmp
dec
xorb
mov
sub
inc
jae
push
adc
popf
pusha
les
mov
sub
test
in
sub
addr16
fimull
fcomps
cmp
mov
dec
aam
data16
sub
cmc
adc
xor
mov
addb
xchg
add
rorb
sub
shlb
adc
fsts
iret
pop
sbb
ss
aas
jns
fwait
int
fisttpl
and
iret
ja
fisubrl
mov
inc
scas
inc
pushf
jb
pop
pusha
icebp
adc
lcall
jmp
lcall
fists
pop
add
jbe
pop
and
sbb
insl
stos
mov
out
mov
pop
outsb
inc
subb
or
push
leave
jmp
adc
imul
jbe
mov
insl
stos
movsb
xchg
xor
jnp
mov
out
mov
aam
scas
lret
sub
stos
into
rorb
shlb
int
xor
jge
mov
add
movsb
and
daa
cmp
fwait
inc
fld
or
test
jp
xchg
ffreep
cmpsb
out
cltd
pop
dec
xlat
les
sbb
inc
push
rclb
clc
mov
adc
jp
cli
mov
iret
jne
jb
in
push
inc
lods
popa
jmp
ds
out
push
pop
push
cmp
jp
xor
mov
mov
mov
push
cmp
ret
out
sbb
mov
dec
das
lahf
push
mov
cmp
rcrl
or
fldenv
and
iret
push
pusha
sub
nop
sub
sbb
mov
ret
lds
push
and
pop
xchg
lret
hlt
ja
push
test
lahf
push
pusha
scas
pop
fs
enter
sti
jmp
into
sar
and
lcall
daa
clc
adc
aam
shrb
and
dec
ret
jno
and
and
insl
not
into
ja
ret
das
pop
and
out
xchg
sbb
mov
xchg
int
mov
cltd
fsts
xchg
and
cmp
sub
and
loop
jno
sub
sbb
fcompl
popf
pop
mov
jae
push
arpl
fsubr
jo
sbb
sub
mov
mov
xchg
push
xchg
lret
mov
ds
dec
xchg
jbe
insb
cli
out
movsl
decb
cmp
inc
scas
popf
pop
mov
mov
lret
jae
push
jbe
xor
push
test
adc
sti
add
pushf
incb
jmp
dec
cli
sbb
inc
jno
pop
mov
adc
mov
jmp
push
sub
fucomp
push
out
mov
ret
or
jns
pop
stc
outsb
test
xlat
or
sub
dec
mov
scas
loopne
ja
mov
in
cli
mov
pop
scas
mov
or
push
inc
jbe
push
das
sahf
pop
jmp
and
adc
adc
cld
loope
dec
inc
cmp
hlt
in
pop
jns
or
jo
inc
add
mov
mov
aas
mov
cmp
push
jecxz
rcrl
rcrl
fldcw
dec
std
xor
inc
ficoml
inc
adc
js
cmpsl
imul
stos
jnp
cld
xor
lods
xchg
push
push
subb
cld
add
mov
mov
push
cmova
jl
in
mov
stos
dec
lock
dec
aas
mov
lods
les
movsb
dec
aad
mov
inc
out
lcall
daa
stc
or
xchg
pop
inc
or
cs
add
xor
pop
and
inc
mov
sahf
push
add
dec
ret
sbb
cltd
cmpsl
pop
sbb
dec
imul
add
cmp
dec
ja
lret
mov
frstor
or
push
dec
adc
jb
test
jle
push
fcoml
gs
outsl
pop
shll
testl
addr16
add
or
sbb
test
jne
inc
das
mov
js
pop
xchg
xor
xor
sysenter
or
xor
pop
scas
fildll
sub
fsubr
mov
push
push
jge
movsl
rcrb
lret
mov
push
ret
call
in
dec
pushl
fs
inc
jae
push
push
or
adc
jl
sub
xor
aad
pop
popa
cmp
in
add
mov
lret
inc
imul
sub
mov
inc
inc
and
aas
mov
sbb
lods
lahf
mov
jo
cmp
add
bound
cld
inc
mov
sbb
push
sar
pop
or
push
pop
sbb
jecxz
sbb
fcomps
imul
iret
cmp
mov
or
push
cs
loop
jb
test
push
addr16
inc
and
jb
icebp
insl
popw
out
nop
mov
scas
xor
int
mul
sub
movsl
cmpsl
imull
pusha
mov
sbb
push
dec
sub
sahf
xchg
xchg
and
in
cmpsl
ljmp
out
jno
push
push
das
mov
or
pop
es
push
or
subl
mov
cmc
push
xor
pop
js
mov
adc
jmp
ret
testl
mov
ficoms
mov
adc
lea
xor
push
sub
es
iret
lea
push
or
les
inc
leave
test
test
cmc
jmp
or
xchg
cmp
dec
xchg
scas
sbb
mov
inc
jle
dec
mov
mov
cltd
test
lret
xor
xchg
push
sub
pop
xchg
dec
xchg
add
movsl
add
sarl
fildl
cmp
les
xchg
or
push
or
bound
mov
lcall
xchg
scas
dec
sbb
push
cmp
out
pop
jno
mov
decb
push
repnz
stos
xchg
popa
cwtl
lods
adc
ffree
imul
lds
pushf
sbb
add
dec
pop
pop
icebp
out
leave
stos
cltd
push
push
sub
clc
fs
insl
iret
into
insl
inc
ret
fucom
or
push
add
dec
sub
pop
adc
mov
je
adc
inc
push
jl
xlat
outsl
mov
jb
and
loop
jae
scas
in
add
mov
add
push
popa
mov
and
iret
pop
pop
inc
fstps
xchg
sub
fs
cmp
jae
fcmovbe
mov
inc
adcl
sahf
and
sbb
mov
stos
sarl
lahf
jae
aad
xchg
cwtl
inc
push
mov
aam
lea
push
mov
out
mov
in
pop
xchg
pop
cmp
push
call
repnz
dec
jecxz
fwait
adc
icebp
jmp
xchg
push
and
negl
mov
cwtl
in
mov
push
push
cmpsb
lret
hlt
mov
sar
mov
jp
lcall
push
xchg
mov
pop
cmp
jns
dec
lock
popf
pop
pop
leave
lea
sbb
pop
or
add
movsb
js
ror
xor
ja
inc
cld
add
mov
into
clc
lret
push
insb
pop
dec
lods
cli
mov
fmul
pusha
lea
jnp
int3
adc
adc
insl
cli
xor
dec
fistpll
fs
fstpt
sbb
cwtl
faddl
sti
or
mov
dec
ss
fs
movsl
stos
rcrb
out
jb
pop
jmp
xor
xchg
sbb
test
sub
add
push
mov
mov
jae
mov
sub
fldenv
jmp
mov
pop
mov
std
cmp
orb
push
pusha
imul
push
jge
jmp
sahf
or
dec
shrl
and
leave
nop
and
shlb
mov
sahf
lcall
jno
or
pop
jno
xor
adc
imul
mov
pop
bound
xchg
pusha
or
stos
jns
adc
sbb
popa
mov
sti
loope
sbb
mov
ds
adc
lahf
xchg
rcrb
popf
insb
hlt
mov
test
faddl
into
xor
pusha
adc
or
push
popa
dec
cmpsb
jne
sarb
push
mov
push
jecxz
mov
pushf
or
inc
adc
mov
orl
cli
dec
push
sbb
cli
pop
pushf
in
hlt
mov
rcrl
xlat
mov
or
int3
mov
push
xor
leave
xor
cli
int3
sahf
out
sahf
and
cli
fistps
cmp
pop
sub
mov
fmull
lods
ret
pop
popf
loope
lcall
addr16
xchg
fcompl
xchg
std
inc
mov
mov
test
sti
push
decb
sbb
adc
jae
dec
and
repz
scas
dec
subb
pusha
pop
jb
rorb
xlat
jg
aaa
ja
dec
jb
in
fidivrs
jmp
ret
stc
xchg
xlat
cmp
inc
test
push
in
dec
inc
test
cmp
mov
data16
insb
pop
sub
cmp
lds
cmpsl
ds
dec
aam
mov
jb
mov
dec
lods
xor
or
mov
loop
mov
and
pop
es
mov
jae
sub
scas
std
xchg
mov
ss
and
jecxz
or
test
cli
rol
mov
clc
mov
push
popa
cmpl
push
movb
lcall
test
xchg
jmp
fcomp
shrl
inc
je
and
hlt
jle
dec
cwtl
dec
inc
lea
test
cmp
cmp
test
gs
addl
data16
mov
xchg
inc
mov
inc
mov
lea
dec
ss
mov
popf
xchg
or
sub
and
es
fsubrl
push
testb
rclb
mov
movsb
out
xchg
or
cmpsb
scas
sbb
clc
ds
xchg
jp
gs
adc
movl
fbstp
mov
pop
rcr
adc
push
jno
dec
cmp
es
lods
sub
popf
cld
out
mov
shrl
outsb
pop
push
mov
mov
ret
xor
xchg
sbb
jbe
cltd
mov
out
fsubrs
mov
aam
jle
cld
arpl
inc
dec
xor
and
and
adc
gs
mov
aas
xor
icebp
or
sbb
nop
xor
mov
dec
popa
adc
imul
and
xchg
lahf
dec
mov
cltd
icebp
add
leave
aas
cmc
popa
imul
out
dec
and
and
fisttpll
dec
mov
pop
xlat
lret
mov
fdivs
rcll
in
add
shlb
dec
jl
jbe
mov
cmc
cwtl
or
push
jo
or
or
dec
dec
repz
pop
sub
loop
sti
dec
adc
xchg
fwait
ret
push
xchg
cmp
sub
mov
xchg
adc
or
inc
adc
mov
ret
xlat
push
xlat
call
jecxz
out
and
dec
outsl
out
jecxz
int3
dec
xor
jno
cmpsb
inc
jle
sbbb
nop
lds
ja
ljmp
or
mov
ret
cmp
pop
adc
std
cmp
add
xchg
fdiv
ret
rorw
jl
mov
adc
dec
jp
cs
and
insl
lds
and
mov
pushf
adc
sub
cli
push
imul
ljmp
in
jg
insb
cli
push
imul
xchg
cmp
add
sbb
cmp
pushl
sub
mov
aaa
inc
das
jnp
fcoms
stc
inc
adc
data16
mov
sahf
lret
and
sbb
jmp
scas
ret
xchg
int
dec
adc
ss
pop
cmpsb
pop
jge
movsl
dec
pop
in
movb
lcall
cli
int3
jno
cmp
outsb
cmp
xor
adc
aas
sbbl
adcb
push
fmuls
in
sbb
and
mul
add
ds
cmp
inc
push
mov
sbb
scas
test
js
nop
test
das
mov
leave
jecxz
pop
mov
cmc
cmpsb
mov
dec
das
push
idivb
mov
sbb
lds
adc
adc
repz
js
pusha
inc
jge
lods
not
into
pop
fnstenv
mov
addr16
push
test
adc
int3
xchg
out
aaa
test
dec
inc
jo
aam
daa
pop
mov
ja
push
in
sub
movsb
xor
test
insl
sbb
insb
mov
clc
and
fxch
pop
movsb
dec
rol
dec
pop
cmc
adc
test
push
mov
and
mov
jl
iret
cmp
std
push
push
and
push
xchg
jae
adc
push
mov
sbb
or
test
sbb
add
jle
adc
jle
iret
scas
dec
push
mov
insl
or
es
push
inc
sub
xor
fcoms
cmc
stos
flds
cmp
out
jb
cmp
pop
fadds
cmp
mov
test
fsts
xor
popf
mov
int3
cmpb
scas
add
iret
ficomps
arpl
cmp
leave
daa
xlat
insb
add
sub
loopne
cmp
in
mov
sti
int
filds
xor
xchg
mov
push
leave
mov
push
push
adc
inc
lret
mov
jg
dec
scas
dec
pop
cltd
sbb
cltd
in
or
cmp
repz
fdivrs
in
imul
incb
pusha
sub
mov
test
fcompl
fs
xor
imull
cld
cmc
jae
clc
shlb
pop
inc
in
bound
push
pop
mov
lea
mov
iret
jle
mov
add
push
push
xor
loopne
inc
dec
movsb
jns
divl
mov
or
jmp
add
push
test
pop
push
fs
pop
mov
test
or
or
test
and
mov
pop
rcr
push
daa
lcall
jl,pt
inc
ud0
aaa
cmp
sub
pop
loopne
sub
cmpsl
in
inc
sbb
dec
mull
mov
push
inc
ret
mov
cmp
or
repz
sub
mov
mov
ret
xor
fdivr
movsb
and
and
fnstcw
push
push
add
imul
dec
push
pop
jle
out
cmp
outsb
ja
mov
popf
into
int
js
xor
ljmp
sub
sar
push
push
jns
push
lret
jo
cs
xor
mov
mov
pop
inc
rcl
push
push
xor
inc
fnstsw
push
xor
mov
rcll
scas
cmp
jecxz
lds
in
stc
fsubs
mov
or
outsb
push
repz
and
inc
mov
sbb
or
and
cmpsb
pop
hlt
testl
pop
repnz
ds
enter
and
xor
push
in
lret
sbb
xchg
pop
cmp
pusha
pop
gs
pop
clc
inc
jnp
cwtl
dec
cmp
into
mov
sub
cli
adc
push
cltd
mov
pop
pop
js
addr16
std
pop
push
cmpsl
dec
push
shl
mov
enter
fucom
test
and
push
int3
dec
js
add
pop
pop
adc
pop
dec
push
roll
push
dec
test
cltd
jecxz
jl
popf
imul
dec
mov
mov
and
gs
jmp
or
mov
and
xchg
xchg
jg
lods
inc
subb
and
popf
jbe
sbb
jo,pt
out
add
lds
mov
out
aas
adc
fcoms
mov
js
jb
push
pop
or
shrb
js
push
adc
int3
xor
and
push
imul
mov
movsb
lret
pushf
or
push
jo
jae
cmp
pop
hlt
mov
ds
jns
and
cmp
jns
stos
cmp
or
adc
xor
push
add
ds
cli
in
aam
dec
fstpt
in
test
into
ss
xchg
jl
aam
or
pusha
pop
mov
cld
cmp
jp
cli
addr16
pop
inc
xchg
ffree
cmp
ja
push
daa
scas
mov
clc
mov
xor
rclb
movsl
add
data16
sub
aam
or
ja
xchg
xchg
scas
pop
cmp
sub
cmp
dec
and
popa
push
cmp
mov
repnz
inc
bound
cwtl
mov
adc
or
pop
xchg
xchg
push
push
or
lret
idiv
dec
mov
pop
in
popa
xchg
and
js
or
mov
jne
xorl
mulb
jnp
push
mov
pop
pusha
xchg
adc
out
sbb
iret
call
shlb
adc
cltd
jno
and
pop
ss
insb
add
mov
xchg
cmc
outsb
fsubp
mov
or
in
xor
imul
in
js
mov
subl
push
sub
nop
insb
xchg
or
repnz
mov
jne
xchg
xorb
jns
das
or
imul
mov
out
add
std
mov
inc
pop
adc
call
fs
and
testl
mov
sub
popa
hlt
inc
or
arpl
add
push
int
arpl
imul
push
xchg
movsb
jbe
stos
pusha
leave
fistl
xchg
pop
jg
cwtl
jno
and
popf
in
stos
jl
sub
aas
mov
pop
out
fstpt
mov
inc
out
sbb
dec
int
jns
testl
mov
mov
or
jno
lret
push
xor
std
mov
sub
adc
pop
rcl
jge
ret
add
mov
int3
divl
and
les
fnsave
std
or
shll
mov
adc
and
lock
stc
gs
push
mov
push
mov
xlat
xchg
pop
leave
adc
es
hlt
jo
rolb
lods
ss
out
push
mov
jns
pop
mov
lods
call
sbbl
out
in
pop
mov
bound
mov
add
les
dec
xchg
inc
jge
mov
je
cli
sub
add
imul
rcr
mov
lea
adc
lods
ja
mov
rcr
ss
push
adc
add
mov
ja
test
and
daa
std
dec
and
insb
xchg
repz
add
sub
and
and
mov
adc
imul
lea
and
fwait
mov
fs
sbb
cld
std
subl
jnp
xchg
daa
adc
push
loope
pop
xchg
jp
dec
inc
lods
pop
or
pop
push
or
inc
sub
sbb
push
and
push
hlt
movsl
ss
inc
lahf
rclb
enter
and
fs
bound
popf
rorb
dec
hlt
je
cmc
sub
loope
or
push
call
xchg
ja
push
pushf
push
and
movsb
push
imul
add
pop
mov
clc
popf
fstps
mov
or
rolb
aad
in
aam
adc
mov
inc
or
imul
push
es
idivb
lods
repz
sub
xchg
jnp
cmp
xchg
jb
lret
jae
xlat
aaa
lret
or
adc
mov
into
sub
push
or
rorl
stc
sub
xchg
pop
jae
leave
outsb
cwtl
dec
sbb
push
or
xor
insb
inc
push
pop
push
mov
pop
lret
scas
mov
je
stos
cltd
push
insl
fidivs
imul
pop
outsb
stc
and
dec
and
mov
icebp
pop
lret
icebp
mov
int3
jae
jno
mov
rolb
xrelease
mov
test
mov
jo
mov
cmc
add
xchg
cmpsl
insb
mov
das
in
mov
jae
cmpl
fs
shll
jo
pop
mov
push
ja
pop
int
out
outsb
outsl
inc
icebp
leave
push
test
lock
jle
or
loopne
adc
mov
adc
and
pushl
mov
out
jmp
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
ljmp
dec
sbb
inc
imul
mov
add
std
inc
stc
packuswb
lea
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
xchg
std
inc
mov
mov
xlat
cld
push
je
xor
enter
das
or
jo
aad
stc
andl
popa
inc
js
fwait
int3
ret
add
sbb
lahf
mov
inc
mov
inc
sbb
add
insl
dec
call
shlb
daa
addl
pop
add
sub
or
in
dec
repz
sbb
cmp
testl
je
xorb
shlb
sub
xorb
aaa
cwtl
dec
mov
lahf
addl
xchg
outsl
dec
jmp
add
into
inc
sbb
inc
mov
mov
outsl
pop
xchg
rolb
adc
inc
std
inc
mov
mov
sar
inc
mov
push
mov
inc
mov
cli
mov
inc
mov
mov
push
inc
mov
mov
imul
mov
mov
jg
inc
test
stos
mov
inc
mov
mov
outsl
std
inc
mov
rorb
testb
adc
lea
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
iret
in
cmc
aad
outsl
std
inc
pop
add
adc
inc
outsl
std
inc
mov
mov
ret
outsl
std
inc
mov
xchg
cli
shll
outsl
std
inc
mov
dec
orl
popa
or
lea
outsl
std
inc
mov
pop
mov
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
inc
mov
mov
outsl
std
sub
lea
int
xor
lock
mov
and
mov
loopne
lret
insb
fistpl
cmp
lret
or
adc
pusha
and
inc
mov
mov
and
pop
dec
dec
movsl
dec
push
cmc
std
fxch
outsl
icebp
sub
aas
and
cmp
mov
and
outsl
roll
cmpsl
push
pop
pop
out
fstl
shlb
mov
add
mov
push
movsl
xchg
test
mov
mov
or
inc
cmovs
adc
jge
leave
das
mov
xchg
mov
push
jl
sub
push
cmp
mov
rcl
xor
push
pop
cs
sbb
jns
push
in
ljmp
xchg
dec
lock
in
push
mov
lods
jmp
stos
jl
inc
pusha
or
sub
mov
adc
xchg
xchg
dec
stos
rcll
aas
add
les
loope
jno
pop
fdivr
jle
jae
and
mov
mov
sbb
pop
lds
xchg
aad
loopne
inc
sub
test
idivb
ljmp
insb
sub
xchg
pop
lods
lret
sub
shrb
in
in
or
shlb
shlb
aas
lret
sub
int
dec
fists
add
mov
out
pop
test
inc
mov
inc
jg
outsb
cmp
fsts
dec
pop
popl
es
jmp
mov
sbb
in
enter
xor
flds
lock
xchg
in
xchg
lock
mov
enter
arpl
aam
push
sbb
fwait
icebp
fcmovnbe
sub
mov
push
shl
jns
sub
ret
es
push
call
je
sbb
cmp
aaa
inc
pop
fidivl
out
lret
pop
fmuls
or
loop
jg
jle
xchg
js
inc
cs
rcll
mov
fcoml
je
jecxz
cli
add
xchg
or
loopne
cld
fidivrl
cwtl
mov
push
jge
xchg
movsb
fisubs
mov
dec
adc
add
mov
arpl
or
clc
jo
stos
jbe
sahf
jge
test
repnz
icebp
jae
inc
divl
or
aam
jge
inc
xor
xor
sbb
jmp
cld
xor
and
or
mov
loop
rcll
loop
call
push
adc
lret
inc
mov
cmp
lret
les
adc
push
jb
adc
hlt
lcall
mov
ds
dec
sahf
in
in
mov
adc
leave
sbb
jle
push
and
push
or
inc
call
movsb
mov
cmp
imul
test
pop
cltd
scas
stc
xchg
rorl
nop
mov
sahf
lahf
xchg
iret
cmp
hlt
push
loop
inc
divb
scas
lcall
push
imul
fidivrs
sub
lds
cmp
popf
xchg
bnd
shrb
push
ficompl
dec
pusha
mov
repz
std
push
xchg
into
adc
inc
mov
push
and
jne
push
ja
addr16
cmc
dec
paddw
test
add
test
inc
aas
outsb
addr16
andl
mov
aaa
xchg
pusha
fs
inc
jecxz
sbb
xorb
cmp
scas
and
in
cmp
sbb
scas
pop
jg
lods
push
out
dec
rcrl
sbb
jnp
fwait
pop
sub
mov
jmp
push
xor
cmp
jne
jg
jnp
movsb
mov
vmwrite
mov
fwait
sub
fiadds
pop
cmp
mov
dec
out
js
gs
sbb
mov
test
stc
pop
jbe
sub
addr16
pop
cmp
es
sti
popa
mov
ja
jnp
dec
cltd
xorb
arpl
sahf
call
mov
mov
imul
mov
or
mov
fildll
pop
add
mov
pop
jecxz
dec
loop
jge
and
jmp
and
mov
mov
jae
daa
xchg
mov
aad
call
aam
in
push
push
xchg
push
shr
lods
enter
and
adc
out
lods
int
pop
cmpsb
insl
adc
adc
jmp
cmp
push
imulb
hlt
test
push
xor
fists
pop
lds
test
jns
pop
cs
loopne
leave
push
out
mov
inc
pop
jno
cmc
push
into
mov
push
sbb
into
into
fistl
outsl
fmul
sub
cmp
pop
lds
bound
push
or
call
imul
out
cmp
add
dec
pop
test
mov
aad
mov
mov
dec
jmp
call
lds
int3
or
fs
lock
idivl
scas
sbb
ret
dec
aam
rcrl
pop
hlt
clc
sti
mov
jl
dec
xor
or
in
in
jp
test
fsincos
cli
les
stos
dec
add
push
cltd
xchg
or
mov
adc
and
jl
xchg
lock
ljmp
adc
insb
push
shr
pop
dec
insl
push
push
sbb
xchg
or
out
add
stos
xchg
notl
shr
fadd
inc
mov
push
lds
push
jle
dec
sarb
or
out
sub
icebp
dec
push
mov
shrb
out
test
adc
hlt
xor
jbe
mov
sbb
shl
sahf
push
jmp
mov
andb
icebp
mov
test
mov
and
movsl
pop
aam
inc
inc
rol
das
or
popf
add
test
sarl
fs
xchg
sbb
pop
adc
xor
jl
xlat
cmp
fldenv
scas
in
mov
jmp
out
xchg
sub
cmp
enter
cmpl
dec
xchg
ret
or
jg
push
jo
cmpsl
mov
test
dec
rclb
pop
pop
inc
scas
sub
inc
loop
add
push
faddp
pop
mov
out
jl
sub
jne
fmuls
out
sbb
pushf
mov
xor
std
adc
push
jge
push
adc
dec
push
push
fisttpll
aas
mov
push
inc
jns
cmp
shl
popf
mov
mov
sub
pop
mov
sbb
jns
enter
call
mov
out
add
aad
or
xor
mov
out
out
mov
aas
in
sub
scas
push
test
jb
hlt
jns
cmp
andb
test
out
push
mov
loopne
int
xchg
rorl
movb
sub
jno
into
push
dec
mov
jle
add
adc
imul
sub
lods
inc
in
lods
fdivrs
add
test
outsl
sub
push
push
lcall
ficoms
pop
jae
push
outsl
jp
mov
pop
inc
testl
imul
adc
fstpl
pop
jb
nopl
xor
addl
in
sar
pop
xor
adc
sarb
and
cmp
sub
jp
or
mov
xor
cmp
sub
add
pushf
jp
and
enter
xor
adc
mov
pop
mov
push
fs
push
and
pop
mov
push
pop
movsl
pusha
xchg
or
loope
xchg
mov
adc
xchg
xor
push
and
iret
sahf
movlps
cmp
xchg
enter
fs
loope
dec
inc
movsb
push
sti
push
dec
mov
sub
jp
jg
mov
dec
sub
in
je
pop
lea
mov
rorl
dec
cmc
inc
fs
sbb
inc
mov
jge
out
aas
or
cmc
imul
and
xchg
inc
arpl
lret
lcall
adc
gs
push
mov
sbb
push
pop
es
outsb
ret
mov
shrl
rcll
or
mov
mov
dec
inc
int
into
mov
or
sbb
ds
xor
aas
mov
addr16
lock
gs
jl
xchg
pop
xabort
fisttps
or
sub
loopne
pushl
xor
lret
icebp
mov
movsb
and
aad
mov
inc
xorl
fnstcw
stos
data16
outsb
inc
std
mov
lret
aas
xchg
adc
clc
jne
push
jle
add
sbb
cmp
sub
rclb
mov
cs
lahf
scas
sarl
pop
mov
mov
add
ja
sbb
xor
shl
xor
dec
fwait
jp
push
adc
and
jb
adc
ds
in
mov
pop
shll
cmp
xchg
addr16
mov
inc
insl
mov
int3
xor
xchg
sahf
arpl
xchg
mov
in
push
mov
rclb
jle
mov
mov
xor
pop
push
int
dec
xchg
sbb
push
aas
mov
pop
and
dec
jns
js
adcb
cld
lock
xor
icebp
inc
mov
add
daa
idiv
adc
clc
in
iret
mov
into
sub
out
add
adc
xchg
inc
mov
enter
jno
xchg
ljmp
rcrb
lds
out
cmp
out
inc
mov
pop
cwtl
ljmp
hlt
cld
cmp
mov
add
or
jno
dec
test
mov
in
stos
or
icebp
rorb
call
addr16
fstp
sarb
jp
sub
inc
stos
sahf
scas
addl
cli
popf
xchg
cmp
dec
cmp
outsb
mov
cmp
leave
xor
pop
notl
xor
pop
aam
push
es
aas
mov
out
push
pop
sub
xchg
and
enter
outsl
stos
sub
cld
xchg
jbe
jo
dec
lahf
xor
cmpb
inc
cmp
sub
sbb
es
push
mov
ds
stos
daa
add
sbb
int
int
and
or
mov
and
cmpsl
dec
aam
lcall
in
cld
and
lods
inc
or
and
loop
and
out
xlat
mov
sbb
xchg
daa
fnsave
rcll
push
rclb
idivl
push
lahf
cld
mov
cmpsb
roll
jmp
out
inc
jge
jo
aad
hlt
add
lea
dec
leave
mov
jnp
test
xchg
push
xchg
lods
jnp
dec
cld
xchg
and
cmpsb
rorl
cmpsl
and
iret
orb
out
push
divb
jl
fistps
jmp
outsl
sbb
adc
shll
loope
cmp
ja
cmpsl
cmpsb
adc
inc
pop
cmpsb
mov
and
sbbl
enter
mov
jne
adcl
dec
shr
mov
adc
mov
and
xchg
pop
jns
adc
jmp
mov
mov
mov
mov
mov
daa
xchg
mov
pop
fildl
movsl
test
sub
and
rclb
xlat
test
cld
lret
dec
push
push
mov
pop
adc
loop
mov
inc
test
cmpl
sub
mov
mov
pop
push
ss
sbb
ja
mov
addl
ds
int
mov
outsb
inc
shrl
mov
mov
xchg
ljmp
cltd
inc
mov
sub
mov
out
imul
mov
scas
loope
push
adc
or
enter
xor
test
iret
sub
cmp
fwait
cmp
jne
sbb
cmp
xor
xorl
push
cli
add
movsb
fdivrl
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
