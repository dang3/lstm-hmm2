mov
pop
stos
adc
fidivrs
or
outsl
icebp
adc
jl
sub
ljmp
popw
aad
and
lret
sub
pop
add
pop
out
xchg
mov
push
out
lds
dec
pusha
test
xor
xchg
or
ja
in
add
sbb
in
call
decl
mov
iret
iret
lds
ficoml
shll
mov
mov
push
cwtl
loope
xchg
add
jge
pop
fidivl
icebp
hlt
xlat
mov
and
mov
js
in
gs
xor
xchg
jae
arpl
sub
pop
shlb
dec
mov
ljmp
iret
add
jl
popf
idivl
mov
push
mov
icebp
sub
cmp
mov
push
xor
pop
ret
test
xchg
jno
dec
mov
dec
call
cli
inc
jl
push
jg
push
mov
push
outsl
add
mov
jno
sub
loopne
incl
imul
jae
addr16
cmp
cmp
adc
xchg
ret
adc
add
cmpsb
das
lea
rcll
or
inc
gs
enter
and
repz
xor
rclb
lcall
push
loope
sub
rcrb
mov
pop
fwait
adc
xor
les
jo
das
xlat
mov
mov
rcll
mov
push
cmp
mov
ret
ror
add
in
fcoms
cld
dec
icebp
adc
add
jb
cmc
sub
andl
btr
mov
dec
cmp
pop
fnstsw
jnp
addr16
movsl
mov
xor
adc
popa
sbb
testb
cmpsb
cmp
jbe
ljmp
stos
fisubl
stos
pop
pop
or
lds
fwait
cld
mov
fwait
cmp
clc
cmpsb
xchg
jo
xchg
loop
jmp
add
pop
adc
xlat
xor
imul
in
mov
mov
test
jl
push
lahf
and
outsb
and
push
cmpsb
jle
xor
or
js
add
mov
xchg
aad
push
push
sahf
loop
outsb
or
xchg
icebp
xor
or
xlat
lea
xchg
in
jnp
sub
sbb
outsl
ljmp
pop
lock
xor
ret
fdivrs
lcall
pop
or
mov
fiaddl
daa
push
orl
adc
addr16
aaa
lret
out
stc
push
mov
dec
xchg
lock
in
mov
mov
ret
and
fwait
test
mov
imul
loop
push
ss
out
aaa
scas
lret
jb
in
mov
mov
xor
or
or
sbb
pop
pusha
sbb
mov
xor
jae
bound
sub
ficoms
or
xchg
push
ds
mov
aaa
adc
xchg
stc
mov
jmp
push
aas
pop
loope
sub
movsl
mov
jae
mov
dec
inc
test
je
mov
push
call
lock
cwtl
dec
xor
mov
jle
ss
test
mov
lods
popa
mov
ljmp
dec
test
push
xor
aaa
repnz
out
adcb
push
cmpl
sbb
loope
push
xlat
fnstenv
cmpsl
mov
aas
inc
ficoml
and
loope
icebp
pop
push
xchg
pop
push
pop
rorl
inc
int3
ljmp
stc
cmpsb
xor
fmuls
fistps
fs
leave
incl
sbb
aam
cmp
lahf
rcrl
mov
je
clc
cmp
aam
jno
xchg
sub
dec
cmp
and
nop
movsb
and
pop
jns
push
fs
jg
pop
popa
pop
push
push
cmc
rolb
cmpsb
sbb
outsb
dec
jo
lea
sti
aaa
or
repz
sti
stc
leave
inc
test
or
sbb
jecxz
and
push
cmp
in
call
jmp
daa
mov
and
ret
xchg
pop
arpl
mov
add
mov
mov
jge
fisubrs
out
lea
repnz
iret
aaa
mov
push
stc
stos
popa
cmpsl
xchg
nop
std
insb
stos
jmp
pop
or
testb
dec
jne
dec
add
lods
movsb
or
pusha
push
fistps
add
dec
cwtl
loopne
cmpsl
mov
xor
test
pusha
xor
push
sbb
in
stos
data16
jno
loop
sbb
pushf
lret
sub
jge
inc
btc
pop
pop
insl
in
jbe
filds
flds
scas
mov
int3
xor
adc
cs
or
push
icebp
mov
addl
int
and
dec
sub
add
push
mov
sbb
rcrb
or
out
cs
adc
adc
ret
mov
add
and
aaa
push
adc
mov
into
lea
stos
inc
pop
aaa
scas
pop
mov
jnp
imul
xorb
jb
frstor
loope
pop
and
cmp
and
jnp
outsl
mov
xchg
imul
mov
xlat
xchg
mov
xchg
imulb
movsb
scas
test
adc
sub
dec
sbb
sbb
add
or
mov
shll
cltd
and
push
mov
xchg
mov
sub
adc
aas
pop
clc
mov
jmp
shrb
scas
outsb
pop
mov
mov
inc
fwait
push
js
jge
fiaddl
xor
jge
dec
push
adc
stos
les
data16
idivl
sbb
leave
push
call
mov
add
push
aad
enter
mov
movsl
gs
call
mov
sbb
je
adc
and
in
ror
xchg
pop
jne
sbb
mov
fs
fwait
cs
test
push
mov
loop
mov
lahf
out
mov
jns
xlat
nop
fnop
mov
sahf
push
mov
lahf
rclb
stos
push
dec
mov
lods
mov
mov
outsl
pmaxub
sub
fstps
js
cmc
mov
mov
dec
mov
sar
leave
test
add
mov
cld
mov
adc
loopne
lret
lods
fldt
mov
ret
int3
std
jg
push
sbb
jmp
outsb
push
dec
mov
fistps
into
pop
cs
mov
ficoms
cmp
jae
mov
mov
stos
cmp
push
pop
push
dec
pop
jle
lock
push
ret
imul
insb
scas
cwtl
fimull
std
push
dec
imul
je
shlb
shlb
ficompl
dec
test
popf
in
mov
add
aad
cmc
repnz
pop
mov
xor
mov
pop
jb
daa
and
stos
push
bound
push
xchg
rclb
inc
pop
mov
imul
adc
jne
jo
jmp
jnp
inc
test
or
shl
mov
push
test
test
pop
ss
add
pop
or
sbb
mov
sub
lds
or
loop
cs
jecxz
fsts
xor
fsts
ja
xor
dec
mov
pop
loope
cmc
and
mov
inc
cltd
subb
jl
cmp
aaa
sub
mov
lods
jbe
aad
add
daa
test
fcomps
adc
and
lock
in
push
sbb
in
popa
mov
clc
repz
clc
mov
sub
lahf
fldenv
test
xchg
aas
pop
mov
sbb
in
add
mov
mov
popa
xor
scas
sbb
cmpsl
cld
ljmp
out
pop
addr16
aas
mov
divl
xchg
insl
dec
lods
rclb
xchg
enter
out
inc
int
pop
cltd
in
out
inc
lahf
int
fdivrl
mov
leave
jbe
fnsave
jne
push
jno
xor
addb
adc
or
ret
in
inc
jecxz
sbb
push
cmp
mov
insb
and
jbe
dec
leave
mov
les
push
mov
push
mov
sub
xor
cmp
pop
xor
xchg
cld
or
dec
jbe
adc
dec
push
jp
nop
data16
enter
fstpt
jge
cs
call
dec
pop
push
loope
inc
dec
daa
xchg
dec
jae
ret
xchg
push
int
mov
and
add
xchg
arpl
insb
xlat
aam
mov
mov
sahf
cmp
push
aas
jae
jge
inc
inc
inc
cld
cmpsl
sbb
les
hlt
inc
movsl
dec
push
xchg
fwait
daa
inc
push
out
icebp
cmp
pop
jl
int3
pop
test
push
and
lods
adc
outsb
cmp
xlat
ret
cmp
and
inc
fstps
pop
test
fdivrs
fcoml
xor
gs
adc
lock
into
cmp
mov
stc
cld
ss
xor
inc
sbb
cmp
cs
in
addb
sub
sub
int3
ret
xchg
mov
stos
fstp
jle
lea
mov
nop
xchg
inc
adcb
rcll
and
ror
cmp
ds
lahf
cmc
mov
sbb
cli
and
test
out
pop
mov
dec
cmp
or
or
inc
pop
jl
loope
aam
cmp
or
xchg
xor
adc
mov
xchg
inc
adc
sub
test
jb
out
add
addb
jae
push
in
sbb
mov
lahf
xor
ret
xchg
outsb
inc
lods
fldcw
iret
adc
pop
cltd
sahf
into
outsb
and
ds
mov
mov
add
inc
dec
aas
lret
ficoms
pop
add
jbe
lock
cli
ffree
xchg
shlb
hlt
je
cld
cmp
jmp
stos
rol
jns
and
icebp
lret
xchg
sub
ror
nop
stos
cmp
sub
mov
xchg
sbb
jge
cmp
push
mov
aad
sub
test
sub
push
jne
or
sub
adc
scas
sbb
jns
add
mov
push
pop
dec
lock
lret
clc
stos
enter
jecxz
mov
pop
cmpsb
ljmp
je
cltd
daa
stos
jl
ficoms
xor
imul
cli
inc
fbld
or
pop
mov
cmpl
gs
pusha
jmp
and
clc
push
xor
cwtl
rolb
jbe
ss
nop
rolb
jno
mov
add
sti
inc
subl
push
icebp
push
pop
decb
push
insl
lahf
outsb
cld
lods
repz
sub
movsb
retw
out
pop
pop
icebp
inc
push
push
cwtl
and
fsubrs
and
jae
cs
outsb
push
insb
imul
pusha
shrb
pushf
mov
cld
outsb
inc
push
test
mov
jp
sti
xor
bound
mov
mov
xchg
dec
into
jle
in
xor
insb
call
dec
hlt
int
pop
loop
addr16
dec
out
mov
xor
cld
mov
xor
xchg
ret
pop
push
mov
jae
fs
sti
jbe
pop
add
mov
rclb
jnp
mov
arpl
mov
je
sub
out
pop
jns
adc
dec
add
fcoml
in
jmp
adc
xchg
mov
mov
nop
push
fsubrs
and
in
scas
testb
fsubrs
mov
push
mov
mov
shlb
xor
add
sbb
pop
test
lret
fidivrl
sbb
adc
nop
sahf
adc
or
popa
push
or
push
hlt
mov
jo
dec
popa
lds
ficoms
stos
dec
jne
sub
add
out
stos
outsl
loope
add
add
stos
out
movsl
decl
lods
sub
mov
dec
mov
test
dec
fcoms
das
push
adcb
cmp
out
sqrtps
int
sbb
int3
in
nop
xchg
xlat
mov
mov
push
ds
mov
fiadds
movsl
aam
testl
jns
xor
es
fst
adc
std
fs
repz
add
arpl
dec
fcmovb
popa
cld
push
hlt
js
mov
out
out
repnz
xchg
dec
movsl
dec
fwait
pushf
je
repz
xlat
push
and
movsl
adc
out
std
add
outsl
mov
or
shll
pop
sbb
shll
fadds
mov
mov
xchg
insl
inc
out
ljmp
mov
xor
push
and
dec
sbb
xchg
push
imul
xchg
cwtl
jecxz
add
divl
into
cmpb
add
nop
fdivrs
popa
je
cmp
lret
jecxz
sbb
and
pop
xchg
and
xor
in
je
mov
push
xor
or
popa
pop
jp
sbb
lock
stc
aam
test
push
addr16
cld
inc
jle
xchg
repnz
adc
xchg
outsb
mov
js
lret
fadds
mov
inc
jnp
mov
jne
mov
lret
div
imul
cs
or
push
pop
mov
dec
pop
and
adcl
add
cmp
jecxz
xor
inc
lret
pop
mov
cmp
clc
cmc
cmp
clc
xchg
xchg
pop
gs
mov
xlat
jnp
mov
inc
and
push
push
push
adc
scas
bound
and
adc
jnp
das
xchg
subps
mov
fwait
out
int3
ds
test
xchg
incl
or
push
dec
pop
aam
pop
mov
jno
or
cld
std
add
dec
mov
xchg
mov
push
cmpsl
popf
jge
pop
ja
add
mov
inc
jns
call
arpl
dec
test
inc
pcmpgtd
dec
push
daa
lock
icebp
fists
loop
mov
pop
dec
fnstenv
enter
out
or
int3
shll
add
pop
out
push
call
jbe
int
mov
jp
push
push
int3
inc
je
push
push
xchg
cmp
dec
inc
negb
add
leave
cmp
pop
adc
push
aas
sub
mov
aam
ss
ss
insl
mov
and
jne
int3
jp
ja
pop
mov
lcall
in
sub
es
jbe
arpl
adc
js
jl
mov
ljmp
cmp
iret
aaa
cmp
sahf
inc
fidivrs
push
or
je
and
mov
mov
sbb
mov
aaa
ret
and
bound
sbb
cmp
and
jns
es
xor
adc
ret
bound
es
addl
pushf
pop
xchg
adc
mov
stos
add
ret
push
sbb
stos
rcrl
dec
sub
jg
cmp
inc
arpl
ljmp
lcall
arpl
fdivr
jmp
jge
jbe
fidivl
mov
xchg
dec
cmp
cmpsl
lcall
sub
jne
sub
cld
imul
dec
test
test
lods
push
jnp
inc
imul
das
dec
dec
ja
xchg
mov
into
jnp
icebp
leave
mov
repnz
in
es
inc
mov
xor
mov
cmp
inc
jno
cwtl
pop
add
mov
adc
adc
adc
jmp
fisubrs
aas
sub
das
mov
add
or
fbstp
adc
test
cld
cwtl
jo
push
aam
jae
xlat
daa
mov
icebp
push
sbb
in
sub
nop
inc
xlat
xchg
pop
xor
ja
sbb
imulb
bound
push
mov
mov
call
mov
das
sbb
dec
push
test
mov
add
pop
mov
iret
push
stc
gs
add
outsl
push
pop
or
cs
enter
es
sbb
jno
xor
pop
std
mov
dec
pusha
mul
pop
ljmp
dec
xchg
ror
inc
fidivs
jmp
das
frstor
jg
loopne
adc
or
addr16
sub
sub
jl
dec
jnp
and
loope
bound
insl
movsl
cli
dec
shlb
cmp
sbb
shlb
jne
mov
xchg
leave
ljmp
loope
jp
xchg
leave
stos
jno
jp
mov
xchg
mov
dec
das
mov
int
dec
dec
test
xor
sub
rcrl
dec
fsts
sar
push
adc
cmp
adc
setne
mov
outsb
mov
jle
sub
cmp
lret
jg,pt
das
mov
adc
ds
adc
sub
lock
dec
dec
lods
out
jl
sbb
cmp
jmp
and
add
jo
dec
repz
lods
inc
adc
lcall
out
jmp
out
lahf
xor
jmp
ss
loope
inc
insl
imull
ret
cmpsb
addl
mov
cmpsb
negb
mov
loopne
xor
sbb
in
and
mov
sub
or
mov
and
fs
push
fstpt
int
aam
inc
add
aam
mov
add
sbb
pop
aad
push
mov
ds
and
dec
pop
ds
jp
mov
jle
jecxz
gs
pop
in
sbb
loop
adc
stos
mov
cmp
push
cmp
test
mov
mov
inc
pop
popf
xchg
or
mov
int
inc
pop
in
arpl
fabs
jne
mov
push
lods
xchg
je
mov
sbb
dec
ret
out
pusha
leave
push
repnz
push
add
add
sbb
cmp
and
jmp
sbb
lods
pushf
test
dec
sub
ret
push
gs
std
rcr
pusha
inc
inc
sahf
out
and
xchg
sub
fidivs
int3
dec
xchg
sub
daa
std
aas
lahf
push
out
jl
sbb
push
inc
adc
dec
lcall
lret
gs
aas
fwait
aam
pop
jb
sti
dec
sub
mov
lea
clc
pop
mov
pusha
pop
test
out
fmull
push
je
push
pop
faddl
sbb
nop
loop
fwait
xchg
aas
mov
lods
mov
lcall
bound
xor
aad
pop
orl
imulb
and
push
pop
fidivrs
inc
pop
jle
pop
hlt
xor
xor
ret
ffreep
in
sbb
insb
cmp
aad
mov
dec
sub
pop
jl
adc
lret
jne
das
in
ljmp
sbb
xor
fwait
enter
popa
add
mov
cmc
jp
inc
sub
lret
mov
jp
in
pop
loopne
jge
pop
push
fwait
jno
and
js
adc
jbe
xchg
mov
sub
jnp
pop
lret
jns
adc
mov
out
pop
sbb
ds
pusha
outsl
stos
sarb
add
dec
inc
cltd
es
pop
pusha
push
pusha
pop
stos
addr16
test
in
rcrb
sahf
ret
sub
jg
push
or
scas
in
mov
dec
xlat
mov
mulb
or
mov
mov
aas
cld
xlat
into
ds
mov
mov
adcb
cwtl
out
push
and
repnz
loope
fnstsw
mov
adc
loopne
mov
imul
sarl
cmp
add
xchg
pop
mov
into
jae
scas
push
mov
mov
mov
jae
frstor
xchg
xchg
add
push
xlat
pop
pusha
or
jnp
pop
mov
in
xchg
push
test
xchg
scas
sti
and
lea
sahf
stos
xchg
fwait
push
aas
ret
shr
mov
xchg
xchg
shl
lret
sbb
rcrl
outsb
xlat
pop
scas
jmp
mov
xor
xor
les
mov
gs
dec
shlb
mov
mov
filds
icebp
adc
nop
sub
push
sbb
in
pop
sbb
adc
lea
es
cmp
mov
adc
into
dec
sub
icebp
mov
xlat
cmp
xor
nop
inc
and
test
add
ret
iret
mov
mov
push
sbb
loope
add
add
aam
cmpsl
push
ret
mov
test
mov
ds
ret
jne
add
mov
inc
mov
adc
cmpsb
mov
sahf
fsub
add
lock
and
and
jecxz
push
jns
pop
push
rcl
int
jb
mov
add
adc
push
mov
mov
jmp
arpl
xor
dec
and
inc
icebp
jle
or
jbe
pop
and
mov
and
fsub
mov
nop
xchg
adc
movsb
push
hlt
jmp
pop
ret
adc
divl
dec
push
mov
repnz
xchg
and
mov
adc
xor
das
xor
jmp
pop
mov
aam
jo
lods
sbb
test
or
test
mov
lahf
add
dec
enter
push
mov
popa
push
fucomip
fcoml
das
add
test
rcrl
loop
push
sub
xlat
xchg
mov
mov
mov
xchg
or
hlt
xchg
cmp
lcall
in
out
rolb
js
outsb
inc
insl
sbbl
or
mov
test
std
inc
xchg
push
loop
dec
and
mov
popa
cli
sbb
repz
addr16
das
dec
push
test
dec
bound
out
ja
jb
and
lcall
fnsave
pop
mov
divb
cmc
pop
cmp
sbb
popa
add
sbb
dec
idiv
sub
outsl
arpl
icebp
xchg
pop
pop
fiadds
cli
mov
jns
mov
mov
or
xchg
adc
jne
mov
adc
xchg
lahf
pushf
push
cmp
lods
jne
pushf
fldt
cmp
jbe
cmp
sub
in
in
popf
sbb
ds
jns
dec
cwtl
adc
and
mov
adc
xchg
xor
test
push
lds
js
sarb
notl
scas
test
mov
xor
push
pop
or
movsb
jle
cmpsl
out
push
or
cmp
inc
aas
mov
sbb
out
scas
mov
inc
shrb
test
mov
pop
jl
xor
movsl
icebp
imul
adc
das
inc
add
mov
ja
xor
out
jp
push
movsb
or
cld
push
cwtl
xor
inc
inc
xor
pop
jbe
push
jecxz
ds
iret
in
xchg
lods
into
jns
dec
lcall
adc
add
cmp
mov
loope
sbb
xor
loopne
ret
mov
outsb
sbb
pop
mov
jno
mov
mov
inc
xor
add
stos
push
in
sub
out
push
aam
out
xchg
imul
inc
out
push
stc
dec
dec
fwait
push
lea
mov
xchg
mov
inc
cmp
jge
inc
or
ret
jp
push
imul
mov
jae
add
fistpl
cwtl
add
or
sub
rorb
out
andl
mov
inc
pop
sub
add
inc
lahf
test
addl
xor
push
mov
xor
cmp
pop
pusha
decl
sbb
push
pop
lods
xchg
jne
and
and
push
popa
add
aad
mov
ds
pop
nop
adc
push
and
call
mov
stos
fcoml
xchg
inc
es
cltd
and
test
iret
sub
lcall
daa
sbb
jmp
aad
adc
push
daa
and
or
sub
ret
test
pop
xchg
fs
pop
xor
out
sti
cmp
bound
mov
sbb
loop
test
shl
fsubl
xchg
sub
xchg
mov
cmp
adc
loop
mov
leave
inc
faddl
jbe
out
inc
pcmpgtb
repz
cmpsl
bound
mov
in
adc
mov
loopne
pop
sbb
or
add
or
and
jne
aad
nop
insl
in
iret
jbe
or
lea
test
mov
divb
push
xlat
lret
fists
dec
cmp
xor
sbb
mov
or
push
ret
sub
xor
sbb
loopne
cmp
cli
cli
xor
fcompl
insb
mov
jmp
out
sarl
pop
mov
inc
sbb
movsb
mov
insb
and
aad
rcl
int
jae
push
lahf
mov
dec
pop
sub
mov
pusha
push
cmc
mov
push
sub
xor
sar
mov
and
sub
or
sub
subb
jne
ds
push
out
dec
in
jle,pn
rcrb
test
jg
lock
in
aaa
mov
divb
pop
dec
push
push
imul
jmp
sub
cmp
adc
pop
sbb
aad
std
dec
jae
xchg
fnstcw
pop
jbe
cmp
jae
add
mov
gs
scas
psubusw
call
push
and
fistpl
dec
xor
ret
sarl
dec
inc
inc
pop
adc
ja
mov
add
dec
pop
pusha
lods
cld
scas
dec
aad
mov
push
or
push
mov
int3
sbbb
popf
fldt
mov
push
pop
shl
popa
lcall
pop
and
ja
mov
push
idivb
mov
fcomps
es
pop
sti
rcl
fists
pop
nop
loope
loopne
pop
xchg
adc
fnstsw
ficoml
sub
out
inc
ds
mov
faddl
push
pop
dec
pop
adc
pop
ja
sbb
adcb
dec
sbb
insl
das
pop
push
aaa
mov
mov
int3
xchg
push
mov
arpl
or
adc
pop
pop
sbb
cwtl
and
adc
mov
add
in
mov
fsubl
lcall
repz
lods
jg
inc
adcb
xor
cs
push
pushf
test
adc
leave
pusha
pushf
shlb
adc
cmp
add
xor
pop
es
push
aam
sar
xchg
jnp
dec
push
shl
push
subl
into
xchg
stc
pop
jmp
push
push
fstps
in
sbb
dec
pop
jp
mov
jne
and
adc
cmp
dec
dec
add
mov
jmp
xchg
xchg
cmp
jno
cmpsb
xor
mov
push
xchg
jg
push
mov
pop
btc
repz
push
cwtl
cld
pushf
pop
movsb
pushf
pop
pop
jl
and
cmpsb
dec
push
enter
sbb
mov
jmp
dec
jnp
arpl
inc
push
sub
fyl2x
cmp
xor
fwait
jmp
dec
sbb
test
aam
in
mov
inc
cld
dec
dec
mov
ja
hlt
lret
mov
xchg
stos
cwtl
aam
inc
pop
jae
and
andl
pop
sbb
jo
test
fdivrs
iret
push
add
shl
mov
loopne
in
rclb
and
popf
imul
mov
dec
cltd
comiss
mov
movsb
int3
fidivl
push
in
out
jno
push
add
scas
test
test
xchg
sti
xor
ret
jns
jle
outsl
pop
push
pop
pop
mov
or
mov
mov
sbb
fdivl
or
xchg
lods
dec
stos
dec
add
add
xchg
dec
xor
jae
movsb
aaa
inc
push
add
adc
inc
hlt
cmpsb
mov
pop
xor
fwait
cwtl
xor
sbb
pop
out
les
cwtl
test
call
mov
mov
mov
mov
lret
pop
mov
push
sbb
sub
cmpsl
daa
cmpb
adc
or
add
sahf
xchg
enter
sbb
enter
cmpsl
mov
pop
push
push
mov
mov
and
pop
mov
popa
xchg
addl
cmp
shlb
or
shl
add
cli
movsl
out
mov
jge
pop
xchg
dec
and
enter
dec
pushf
inc
adc
mov
mov
pop
jb
mov
mov
outsb
adc
cmp
jle,pn
into
movsl
stc
movsl
cmp
jle
and
xlat
or
hlt
and
or
cmp
mov
mov
mov
and
sbbb
cmp
push
xchg
pushf
pushf
enter
sbb
xor
stos
leave
xchg
sub
imul
xchg
mov
daa
xor
or
jnp
push
in
mov
out
int
rolb
data16
int3
fldenv
jns
leave
imul
sub
aad
inc
insl
xchg
cmp
or
xchg
sbb
xor
aas
int
sti
dec
rcrb
iret
mov
loopne
inc
pop
ficoml
xor
sbb
lods
cmpb
or
cmp
roll
das
mov
sbb
jp
inc
jg
or
nop
xor
repz
mov
sub
popf
rcrb
jne
fnstsw
jl
push
mov
std
aam
mov
jecxz
out
lret
adc
and
cmpsb
sbb
loope
xchg
imul
out
adc
pop
push
enter
jl
push
lods
fndisi(8087
xchg
inc
stos
loopne
popa
cmp
test
dec
cs
into
pop
jp
shll
mov
or
mov
cld
pop
cmp
es
sbb
dec
dec
mov
in
cltd
outsb
arpl
inc
pop
xchg
cmp
mov
aad
cmp
lods
jnp
push
inc
insl
scas
outsl
imul
pushf
scas
ret
mov
sbb
repz
andl
dec
lock
fwait
mov
or
jge
popf
sarb
test
dec
add
sahf
push
cs
mov
sub
xchg
scas
leave
add
out
cltd
xchg
jne
sbb
xor
call
adc
cmp
and
xchg
sub
lods
popf
stos
mov
mov
push
enter
mov
cs
adc
lods
push
div
cmp
cmp
and
ja
pop
popf
push
mov
and
push
pop
cwtl
and
loop
pop
add
mov
ret
outsb
mov
out
xor
mov
rcrl
test
iret
xor
fcmovne
inc
movsb
into
cmp
inc
fs
fs
stos
add
fsubl
xchg
ficoms
pop
test
jno
sub
test
lock
incl
icebp
sbb
sbb
mov
in
inc
jbe
cmp
lods
clc
and
sub
jo
push
hlt
mov
test
outsb
scas
sbb
or
lds
pop
push
fs
add
imul
jg
cmpl
popf
test
aam
push
rcr
fcoms
movsb
pushf
and
rolb
lods
lea
cmp
jmp
leave
cmp
xchg
nop
test
bnd
dec
mov
xchg
add
add
lods
inc
xchg
stc
rol
adc
out
idivl
pop
loopne
sarl
iret
lods
and
in
push
jo
shl
push
icebp
cltd
jns
ss
mov
xorb
add
push
pop
pop
popa
mov
pop
fisttpll
xlat
js
push
and
or
dec
pop
int3
mov
inc
test
lcall
ds
mov
xchg
xchg
jbe
mov
insb
xchg
test
popa
jbe
in
test
mov
sbb
orb
add
lcall
dec
pop
and
pop
cmc
lret
dec
lea
outsl
mov
xor
jmp
fbstp
xor
dec
cmp
sahf
adc
xchg
gs
sbb
enter
sbb
adc
add
mov
mov
inc
repz
mov
cmpsl
fstpl
mov
sub
dec
xchg
mov
mov
shlb
pop
idivl
mov
inc
add
mov
mov
std
fmull
ds
scas
cwtl
xchg
or
pop
nop
xchg
cmp
inc
or
scas
push
icebp
cmp
clc
shl
shrb
inc
insb
push
pop
pop
xchg
cmp
lea
cmp
mov
lcall
cli
mov
clc
lahf
xchg
leave
filds
fdiv
jl
or
lods
insb
jmp
clc
outsb
aaa
enter
or
add
mov
dec
imul
loope
and
movsl
add
dec
pop
mov
ret
repz
inc
imul
mov
cld
arpl
mov
jnp
dec
xchg
adc
inc
scas
sti
ja
orb
hlt
ja
mov
sbb
pushf
push
fisubrl
insb
fsubrl
mov
ret
lods
mov
dec
adc
cmc
in
dec
out
es
pushf
add
fnstenv
leave
ret
adc
pop
mov
push
loop
mov
imul
lds
stc
mov
lret
cld
add
mov
shll
or
push
dec
lods
rcrb
xchg
jle
lods
aad
lcall
lock
roll
dec
fstpt
xor
fnsave
andl
xor
sti
adc
jbe
idiv
lock
in
orl
inc
push
movb
inc
testb
nop
test
sbb
inc
popf
dec
sbb
pushf
push
mov
inc
sbb
data16
lret
and
xor
enter
ficompl
rclb
mov
pop
fs
fldt
mov
cmpsb
lcall
ret
arpl
int
add
xor
fs
iret
add
ret
xlat
and
jae
sbb
out
mov
xor
jecxz
mov
sub
out
cmp
ljmp
jecxz
outsl
pop
inc
sbbb
pop
xchg
inc
cmp
mov
shll
rolb
pop
test
adc
lret
imul
or
mov
adc
mov
cmp
sarb
jl
popa
lods
stos
sub
out
pop
addr16
mov
sub
lods
cmp
or
rol
iret
and
fdivp
push
jg
dec
mov
push
and
pop
fnsave
adc
lods
xchg
mov
jg
push
std
add
dec
jl
mov
inc
adc
ss
xchg
add
sbb
inc
pushf
xor
arpl
jl
xchg
scas
push
jbe
pushf
mov
pop
lods
int
mov
std
daa
cmpsl
push
mov
xor
jb
out
or
scas
sub
std
scas
insb
ret
pop
aaa
adc
bound
lret
int
js
cmpsb
sbb
ja
test
cltd
xchg
leave
xchg
popa
sbb
cmovae
mov
or
jl
xchg
adc
inc
dec
lcall
bound
in
inc
push
push
mov
jnp
das
lock
push
xchg
add
xlat
roll
jmp
add
test
ds
push
pop
rcr
repz
and
jns
clc
hlt
cmp
mov
lcall
xchg
orb
scas
ret
add
pushf
sbb
dec
imull
movsl
addr16
adcl
add
pop
and
dec
lahf
ljmp
rorb
aas
and
or
jb
leave
ja
add
aam
imul
push
pop
ljmp
mov
pop
int3
cmp
sbb
pop
dec
jl
cltd
cmp
sbb
inc
leave
cmpsb
ds
adc
xorb
loop
sbb
and
shrb
add
sub
insl
pop
dec
notb
popa
jmp
jnp
outsb
cwtl
incl
sub
shr
dec
lds
sbb
lret
lea
lret
fldenv
pop
adc
nop
or
sub
pop
jmp
inc
mov
xor
enter
std
adc
push
ljmp
add
mov
pop
cmp
pop
stos
push
cld
inc
insl
movsl
adc
or
add
test
fdivs
inc
inc
mov
fwait
hlt
les
jns
daa
clc
mov
dec
jne
clc
iret
push
jle
adcb
push
imul
mov
mov
push
fcmovne
or
lods
xor
or
js
pushf
sub
popf
dec
sub
mov
mov
mov
orb
sbb
insl
ja
lods
cmp
add
test
add
pop
dec
add
daa
outsb
movsl
mov
ror
daa
inc
inc
divl
pop
pop
into
add
movsl
rcrl
fnstenv
jae
xlat
mov
sbb
xor
ja
inc
cld
push
and
and
jl
in
jne
sub
add
pusha
push
lcall
pusha
in
cltd
and
in
outsb
imul
mov
mov
into
pop
dec
outsb
imul
mov
xor
imul
cld
imul
aaa
mov
jbe
lods
aaa
jle
sahf
inc
hlt
jecxz
xor
loope
jbe
sbb
cmpsb
xor
xchg
out
jb
vmovaps
xor
or
or
out
sbb
add
pop
inc
sbb
cmc
or
stos
test
filds
aaa
sub
inc
pop
jecxz
dec
outsl
jge
mov
pmaxub
adc
fnstsw
xchg
loop
inc
cwtl
jo
test
and
out
and
outsl
inc
enter
xchg
inc
add
jl
pop
movsb
imul
add
jmp
xor
dec
add
lds
xchg
ss
mov
xor
out
cmc
pop
jg
jae
cmp
mov
mov
pop
inc
mov
scas
sarb
push
faddl
mov
popf
ret
rol
outsl
jle
mov
mov
push
daa
imul
or
mov
adc
cmpsb
dec
jg
aas
insl
test
jge
das
mov
scas
stos
xor
or
addb
outsb
sub
das
js
push
inc
sbb
insl
pusha
cmp
add
push
cs
push
sbb
dec
int3
clc
cmpsl
mov
pop
inc
test
mov
add
sub
xor
stc
dec
movsl
mov
push
xor
gs
inc
inc
mov
dec
jecxz
call
xchg
xchg
insb
add
lahf
and
stc
push
mov
or
push
repnz
or
cmp
mov
fcomi
jge
jno
popf
bound
int3
test
pop
lods
cmp
outsl
mov
push
hlt
cltd
repz
or
cmp
mov
leave
xchg
pop
xlat
add
push
fsubrs
and
shlb
ret
arpl
test
push
mov
loopne
sub
dec
lods
aaa
and
xor
xchg
popa
gs
mov
lret
shl
and
sub
int
les
mov
aad
adc
in
pop
jnp
ror
push
or
lcall
sub
pop
add
push
xchg
test
and
pop
rol
xchg
sub
push
mov
add
jmp
xchg
fld
pop
enter
jecxz
movsb
inc
push
scas
mov
rorl
dec
mov
jmp
jb
daa
into
xchg
jne
jae
dec
mov
sar
mov
movb
or
mov
lret
scas
xor
ret
adc
sub
fists
pop
inc
rol
jle
xchg
jecxz
pop
cmc
xchg
mov
call
jbe
test
cmp
cwtl
add
bound
mov
cmpsb
insb
outsb
in
in
out
push
sar
or
movsl
gs
lock
push
xchg
lock
cmpsl
sbb
aam
cmp
mov
subb
jg
push
push
rcl
push
movsb
push
cmp
push
and
inc
lods
sti
arpl
add
inc
pop
mov
popa
push
push
jo
xor
test
xlat
jno
stos
xor
mov
and
lea
add
sbb
mov
jo
lods
jp
and
jecxz
out
in
mov
pusha
cmpsl
loop
lahf
shlb
adc
push
pop
lahf
test
jmp
fmul
dec
jp
daa
ss
adc
jle
xor
insl
jae
push
mov
mov
repnz
sbb
repnz
pop
loope
xchg
mov
dec
jb
std
xor
dec
cmp
out
mov
jmp
fucomip
testl
leave
mov
cmpsb
mov
cmp
js
sbb
inc
or
ret
cmpsb
push
cli
fwait
jmp
dec
rorb
test
es
in
and
aas
rcrl
push
es
and
xchg
pop
add
rcrb
rcrl
pop
das
repnz
dec
mov
out
and
daa
dec
es
test
cli
pop
jb
int3
lea
movsb
ja
sbb
mov
mov
sub
cmp
pusha
cwtl
pop
cmp
mov
stos
lret
ljmp
sbb
inc
fcomps
push
inc
pusha
sub
mov
es
sahf
jecxz
test
jno
xor
mov
dec
cmpsb
imul
out
sbb
mov
test
movsl
xor
mov
out
jnp
sti
pop
jno
xchg
mov
sahf
loope
push
sbb
jae
xchg
pop
insb
pop
mov
sahf
xchg
xor
jns
jbe
sarb
lret
inc
imulb
cmp
jle
mov
bound
cld
daa
mov
sub
arpl
cmp
insb
in
ds
outsb
pusha
out
mov
in
mov
dec
cltd
mov
lret
pop
call
lret
xchg
pop
outsl
mov
adc
in
mov
sub
cmp
xchg
cmp
inc
cmpsl
rorb
cmp
add
sub
pushf
loopne
mov
jnp
popf
hlt
inc
add
dec
add
out
lea
andl
mov
sbb
inc
daa
pusha
push
roll
dec
jne
insb
ss
pmuludq
aas
xor
jnp
mov
stc
sub
add
loopne
sbb
cmp
lods
shrl
xchg
inc
insb
adc
cli
imul
int3
mov
cmc
out
adc
xchg
ss
mov
arpl
add
sbb
jecxz
sbb
xchg
mov
inc
jmp
xchg
js
and
mov
scas
je
or
mov
xchg
std
inc
push
push
inc
add
lods
cmpsb
clc
pop
xlat
dec
cmp
lock
or
les
push
enter
push
imul
push
adc
cmp
mov
mov
pop
aad
sub
pop
mov
mov
sti
jl
imul
loop
push
add
shr
xchg
cmc
push
aam
das
or
popa
add
lcall
mov
sbb
push
jbe
xlat
dec
imul
inc
dec
mov
aas
xor
mov
ret
icebp
xor
push
sbb
sub
or
pop
popf
lret
xchg
mov
cmp
push
dec
out
xchg
cmp
insl
daa
ljmp
scas
add
push
out
enter
and
pop
adcb
xchg
in
push
mov
ret
test
xor
rcrl
lock
xchg
mov
jbe
dec
lods
pop
cs
and
ret
sub
jmp
enter
sbb
jns
daa
adc
out
cmp
pushf
sbb
mov
aam
aas
xchg
and
lock
loope
cmc
aam
std
cmpsl
and
fdivr
enter
clc
or
fldl
test
mov
mov
pop
mov
cwtl
or
lds
nop
stos
dec
add
sbb
xchg
out
stc
stos
cmpsl
cltd
loope
sbb
push
mov
fsubr
popa
cmp
int
fs
stc
jecxz
shl
jge
or
je
pushf
mov
sti
sarl
xor
pop
inc
push
pop
sbb
lret
push
xor
xchg
jmp
repz
aad
adc
fidivrl
mov
or
fists
addr16
lret
jp
xchg
cmp
mov
inc
push
push
xchg
push
fs
fistpl
jno
sub
ficompl
xchg
pop
popa
sub
mov
sti
negl
add
sbb
sahf
ss
mov
and
repnz
sub
adc
or
fucomip
int3
inc
pop
inc
push
pushf
fmuls
jns
lret
ss
pop
sbbl
sti
clc
call
pop
xchg
js
and
aaa
mov
lret
jmp
es
xchg
lcall
xorl
dec
jmp
mov
mov
xor
fsubrl
inc
shl
lock
mov
cmp
movsl
out
test
cmp
je
jno
fistps
xchg
imul
cmp
push
jbe
fsubrl
into
andb
nop
add
repz
pop
push
sbb
cwtl
push
loop,pn
ds
sub
inc
add
xlat
push
loop
test
ss
std
mov
aaa
xchg
ret
mov
arpl
push
mov
or
das
or
inc
popf
cmp
mov
enterw
cmp
push
mov
aad
fwait
lock
push
xchg
adc
leave
cld
outsl
adc
sbb
pop
xchg
inc
out
icebp
xchg
decl
push
push
jle
jmp
sbb
push
sub
aaa
inc
xchg
mov
fmul
or
xor
jne
pop
xchg
mov
sub
and
jbe
mov
out
shrb
inc
sbb
or
bound
je
jmp
inc
and
pop
inc
dec
cmpsl
outsl
and
fimull
push
add
add
pop
pusha
sarb
dec
dec
sub
mov
stc
dec
inc
xor
cmp
call
in
sbb
inc
cli
cmp
stos
leave
dec
cltd
mov
repnz
shrb
into
jmp
insl
push
mov
sub
dec
pop
enter
pop
xchg
and
in
lea
jb
add
popf
dec
test
outsb
and
mov
push
cmpsb
dec
pop
sbb
push
dec
pop
ja
mov
inc
jecxz
sbb
pushf
repz
hlt
or
and
xchg
push
push
push
mov
adc
pushf
dec
out
cs
mov
mov
pushl
in
mov
sub
ss
sbb
in
xchg
inc
dec
mov
pop
lea
lea
push
or
loop
icebp
fimuls
sub
inc
xor
pop
in
cli
lcall
shrl
aas
or
xor
push
jb
or
xchg
mov
xor
bound
xchg
add
jns
bound
lock
mov
test
ret
dec
xchg
addr16
idivl
mov
inc
loopne
fisubl
mov
jmp
lret
das
hlt
mov
test
pop
mov
aad
ficompl
sahf
iret
pop
xchg
aam
mov
push
sbb
inc
adc
mov
and
mov
test
cld
mov
outsb
dec
ret
or
aam
lock
sub
cmpl
mov
pop
mov
sub
fabs
mov
lcall
pop
push
cwtl
sub
test
or
fsubs
std
push
mov
sbb
and
mov
mov
inc
es
push
loopne
sbb
add
ret
cmc
cmp
jnp
add
movsb
stc
clc
adc
cld
rcrb
in
or
sahf
test
push
dec
test
jnp
mov
data16
dec
fstpt
fucom
cmp
cmpb
shll
icebp
and
inc
cltd
call
adc
inc
scas
int3
mov
push
cli
sbb
out
adc
sbb
xchg
adc
adc
sub
mov
cs
add
jp
dec
or
add
in
push
addr16
and
sbbl
mov
movsl
pop
imul
or
xchg
and
and
xchg
lods
movsb
aaa
jno
int
scas
sub
add
adc
adc
ret
test
lret
lcall
add
add
inc
or
stos
out
jne
in
sbb
ret
cmp
dec
fisubl
push
xchg
or
scas
inc
and
icebp
in
push
and
hlt
sbb
out
sbb
sub
nop
dec
lcall
mov
push
or
mov
cmpsl
hlt
inc
push
inc
ret
cmp
out
ja
dec
gs
push
add
and
adc
mov
in
dec
sub
jne
orb
mov
add
xchg
js
pop
sub
notb
push
dec
stc
or
fistl
lock
outsb
jg
cmp
jge
clc
insb
add
daa
stos
pusha
out
ljmp
or
jb
lret
mov
icebp
repz
pop
stos
imul
jg
sub
mov
xchg
daa
adc
pop
cltd
xorb
xchg
hlt
cmpsl
cmc
adc
out
popf
rorb
enter
xor
dec
jbe
scas
sbb
mov
add
mov
xor
xor
ficoml
push
les
jl
imul
push
fldenv
mov
rol
or
xchg
pop
rcrl
push
fstl
xchg
mov
addr16
and
xchg
sub
imul
pop
ret
xor
pop
dec
dec
dec
pop
hlt
jb
add
pop
cmc
jmp
and
test
repz
add
sub
adc
mov
add
js
mov
mov
subl
add
ret
mov
sub
adc
fbstp
adc
mov
mov
adc
push
adc
mov
mov
insl
and
lods
cmp
jmp
xchg
inc
mov
cmp
rcr
xchg
sub
movl
xchg
mov
adc
lds
test
push
cs
pop
repnz
mov
loopne
xchg
cld
aas
jg
cmp
lcall
pop
stc
js
out
ret
out
shlb
fstps
or
and
sahf
mov
or
notl
pop
jmp
sub
jnp
sbbb
dec
mov
jg
push
or
inc
rolb
stos
ja
jecxz
inc
cmp
sbb
xor
xchg
movsb
les
bound
dec
dec
rorl
fcoms
adc
ret
pusha
fsubrl
inc
mov
sbb
xchg
add
dec
inc
insb
pushf
pop
testl
gs
loope
bound
push
ljmp
adc
mov
pop
cmp
out
pushf
pop
test
inc
dec
xlat
daa
cmp
lcall
std
sti
fadds
loopne
je
stos
inc
mov
cli
outsb
xlat
dec
das
ds
sub
jmp
inc
imul
mov
jo
shlb
push
fwait
inc
fwait
sbb
pop
pop
aas
dec
jnp
cmc
stc
or
loope
out
or
mov
push
mov
loopne
hlt
jmp
mov
mov
es
cmpsb
cs
add
xchg
inc
in
aam
jb
sti
pop
xor
dec
add
lods
aas
roll
aam
push
pop
subl
dec
add
add
pop
cmp
rcl
xorb
dec
push
loope
stos
jns
xlat
mov
pop
std
sbb
stos
pop
cmp
loope
aaa
cmp
sbb
mov
adc
nop
nop
cmp
in
ss
imul
icebp
loope
mov
mov
lea
mov
popa
fildl
loop
mov
ss
ljmp
cmp
or
jle
mov
loop
les
push
je
pusha
push
xor
jl
fsubrs
dec
mov
loope
mov
sbb
cwtl
mov
pop
ret
fs
mov
jge
or
fs
jp
cmpsb
mov
pop
add
sub
mov
insb
push
stos
add
and
mov
arpl
pop
dec
subb
pop
push
shll
xchg
lea
das
clc
pop
mov
adc
decb
aaa
mov
inc
fdivp
clc
pop
sbb
cwtl
arpl
fsubrp
insl
mov
mov
xchg
cmp
test
sqrtps
push
rcrl
test
and
xor
xlat
mov
pop
enter
jb
addb
push
cmp
xor
testl
lret
jne
fcmovu
mov
pop
roll
xchg
mov
hlt
imul
les
leave
jo
push
scas
ds
ss
mov
inc
and
out
mov
insl
in
jge
dec
pop
ret
pop
adc
pushf
and
mov
jae
lods
sbbl
adc
push
xchg
cwtl
xlat
sbb
lahf
fs
xor
fwait
pop
mov
int
cli
cmp
xor
or
out
aas
jae
pop
xor
cmp
stos
pop
in
jae
pop
ss
imul
lock
es
cli
shrb
jo
pop
inc
clc
das
ss
dec
aaa
pushf
push
insb
ret
jmp
xchg
mov
lahf
ljmp
pop
mov
jle
fidivrs
sbb
mov
int3
loope
xchg
sub
dec
xchg
packssdw
test
or
cltd
stc
call
mov
inc
nop
push
inc
hlt
rorl
testl
xchg
cwtl
add
xchg
adc
jb
ret
test
lods
mov
inc
push
rorb
cltd
popf
add
fimull
mov
xor
pop
dec
stos
inc
in
out
icebp
testb
shrb
shlb
push
dec
xchg
jge
mov
in
mov
into
imul
xorb
pop
fisubrl
xchg
ret
and
sub
push
lock
xorl
inc
dec
jae
xchg
or
mov
mov
in
lods
jle
push
cmp
inc
mov
ret
in
mov
stos
sbb
or
ret
xor
mov
sbb
fsubrl
cli
in
ss
inc
imul
pop
mov
je
lcall
jnp
lcall
pop
sbb
test
repnz
insb
dec
mov
mov
scas
cli
push
fidivrs
xchg
jae
mov
test
lret
mov
mov
adc
jb
jns
mov
cli
cmova
pop
roll
add
pop
mov
push
cli
sub
fs
outsl
xorb
ja
mov
in
jne
pop
xchg
insb
sub
je
xchg
add
das
mov
lods
cwtl
bound
xchg
subb
aas
sub
in
clc
mov
mov
mov
outsb
dec
push
cwtl
or
daa
cmp
sub
dec
fsubp
adc
sbb
jo
mov
aaa
imul
push
jo
jecxz
mov
pushf
sub
cmp
ds
rol
fwait
push
repz
sbb
adc
adc
lods
in
push
or
fwait
sub
out
mov
cli
add
xlat
lds
jp
mov
test
or
pop
sarl
test
and
cmpsl
add
fs
mov
shl
push
shrl
addr16
dec
sarl
or
in
fwait
add
sub
out
repz
xchg
push
test
loope
mov
lods
out
xchg
pusha
push
ret
add
pop
ret
addr16
out
cmp
cmovo
jae
fisttps
mov
cmp
bound
rcrl
enter
add
cld
cmp
imul
jge
loope
sahf
jl
popa
lcall
adc
scas
and
out
ss
imul
inc
jp
adc
cmpsb
jne
add
pop
mov
loop
jnp
xor
sahf
addr16
pop
mov
loope
in
mov
call
xchg
lods
outsl
fadd
cmpsl
and
jbe
test
ret
outsb
bound
push
dec
movsb
add
push
push
loopne,pn
cmp
and
mov
xor
dec
pop
lret
imul
lcall
and
ret
int
sub
mov
mov
dec
lea
add
mov
fidivs
lret
andl
int3
mov
or
jmp
jg
in
mov
xchg
sahf
xor
mov
xchg
push
ja
xchg
das
jg
mov
out
data16
xor
mov
js
lret
sbb
adc
insb
pushf
sbb
stos
movsbl
mov
sbb
cmp
inc
jae
aas
lahf
insb
int3
mov
leave
add
push
push
das
scas
jnp
in
addr16
loope
imul
or
pop
lret
dec
mov
shl
dec
jle
test
stos
stc
into
adc
jnp
jecxz
sti
pop
push
sub
loop
jno
popa
cs
mov
and
hlt
pop
sbb
negl
bound
push
push
imul
icebp
out
shl
or
pushf
fildl
stc
loopne
ss
add
mov
mov
jp,pn
sub
sbb
push
xor
cmp
inc
aam
pop
leave
icebp
inc
adc
aaa
or
aaa
mov
insl
loope
movsl
and
xor
xchg
movsl
and
and
cli
cmp
inc
ss
sub
inc
std
xor
inc
mov
das
fcompp
add
out
mov
mov
pushf
int3
rcll
mov
push
mov
pop
adc
and
pop
and
inc
subl
and
and
je
fdivs
add
xchg
jb
adc
jne
adc
cmp
sbb
sbb
inc
js
mov
test
jmp
jo
add
cs
pop
inc
pushf
cmp
int3
repz
fs
pop
xchg
mov
adc
add
daa
lahf
mov
push
stos
sbb
daa
lea
out
outsl
hlt
jmp
leave
loop
jp
aam
sar
fsubrs
dec
sbb
leave
push
or
pop
sub
add
mov
loopne
lods
mov
fdivrl
mov
std
sbb
divl
xchg
loopne
xchg
gs
pop
xlat
pop
leave
xchg
mov
inc
call
dec
popf
ds
sbb
pop
mov
xchg
lods
jmp
pop
jl
mov
push
loop
mov
sar
ljmp
jnp
dec
jg
sbb
inc
inc
sub
ss
inc
je
jbe
or
imul
push
pop
push
dec
dec
jo
push
sti
fsub
jmp
xor
in
push
xchg
jae
sbb
aaa
stos
pop
mov
cmp
and
inc
and
es
out
arpl
push
or
mov
cmp
dec
outsl
inc
pop
test
push
jo
out
sub
fcoms
out
xchg
sub
aam
jp
pop
push
je
push
fcomip
lods
hlt
sbb
or
jmp
cmc
mov
adc
fsts
lea
and
sub
sub
xchg
xchg
pusha
mov
and
push
sbb
call
rcrl
scas
in
ds
xbegin
push
ljmp
adc
xor
mov
rcr
les
icebp
out
sahf
and
inc
adc
stos
call
scas
aaa
mov
js
cli
insb
outsl
mov
xchg
jp
pop
imul
mov
je
add
or
lahf
add
mov
or
pop
cmp
inc
jbe
push
or
mov
jb
xchg
jmp
xchg
movsb
cmp
adc
inc
push
test
and
stos
outsb
xchg
add
cmc
xor
sub
pop
or
cmpsb
notl
loope
insl
pop
cltd
mov
leave
sub
sbb
sub
das
lds
shr
movsl
push
inc
orb
inc
popf
loope
sub
mov
sti
mov
daa
mov
and
or
scas
pop
pop
dec
fadds
ss
cld
push
mov
xor
stos
mov
mov
stos
clc
fdivrl
repnz
mov
mov
dec
mov
je
sbb
lock
pop
push
gs
clc
js
pop
ljmp
lock
xor
mov
xchg
fnstenv
inc
lods
mov
pop
lret
insb
mov
mov
mov
mov
sahf
dec
or
cmp
es
add
push
stos
lds
inc
fidivrl
clc
xor
and
add
std
mov
les
xor
jnp
xchg
mov
movsb
fisubrl
jmp
lret
add
xchg
adc
pop
adc
movsl
ss
dec
popa
adc
add
fildl
jp
ljmp
or
mov
icebp
mov
sub
mov
aad
call
test
push
pop
mov
inc
mov
push
or
clc
adc
inc
dec
push
test
sahf
mov
aad
xchg
fistl
sub
out
sarl
and
lahf
loopne
add
adc
xor
push
cld
xorl
dec
push
adc
data16
mov
test
lds
or
mov
dec
fwait
pop
clc
dec
mov
sub
dec
fisubrs
mov
mov
mov
add
xchg
sti
adc
adc
push
cmp
cli
mov
jbe
sub
rcrb
xchg
or
jge
push
or
jnp
or
call
je
add
test
js
pop
dec
testb
or
icebp
jno
dec
pop
or
mov
jae
jns
sbb
inc
loopne
cmpsb
leave
jmp
repz
jmp
pop
jnp
mov
xor
lahf
in
or
xlat
mov
sub
inc
test
lds
or
testb
push
mov
push
xchg
jl
and
clc
push
add
mov
pushf
xchg
push
push
lahf
xor
push
jno
or
adc
pop
arpl
clc
xorl
aam
pusha
jg
scas
div
sub
unpckhps
leave
lret
stc
lahf
dec
and
xchg
mov
push
adc
sub
add
jno
shll
add
aad
pop
jl
mov
mov
jo
test
loope
jae
aam
lcall
mov
and
pop
call
ret
add
int
jle
xchg
cmp
xchg
push
pusha
movsl
cmp
jnp
dec
sub
sbb
xor
pusha
out
loope
mov
ds
into
dec
daa
mov
mov
ds
sbb
inc
nop
mov
mov
sbb
jae
sbb
push
int3
lret
aas
xchg
arpl
and
and
pop
mov
or
mov
dec
lds
jle
lock
stos
jle
xchg
mov
sub
cmp
mov
testl
and
orl
andl
in
das
test
shl
mov
rcrl
cmpsb
into
out
nop
pop
or
std
icebp
xor
incl
cmp
mov
pop
push
jl
pop
inc
je
daa
cmp
test
dec
inc
sub
clc
test
push
jg
lds
xchg
jecxz
shr
loope
rcrb
out
pop
les
arpl
ljmp
mov
loop
mov
push
dec
cmp
testb
inc
mov
xor
int
dec
adc
sbb
cmp
jne
xor
das
call
stc
outsb
jb
and
mov
inc
ds
sub
xchg
lret
aaa
jmp
fbld
push
dec
out
movsl
mov
std
and
cmp
rorb
pop
push
scas
enter
xchg
lea
mov
adc
loope
adc
in
xchg
cli
ljmp
push
cltd
clc
mov
cmp
outsl
test
pop
popf
xorl
jmp
xchg
je
ljmp
sbb
jns
out
mov
mov
mov
stc
loopne
mov
in
les
add
mov
fs
sub
repz
add
adc
mov
mov
loop
sbb
stos
lock
push
sbb
inc
sbb
jp
cli
push
and
fucomp
or
in
sub
push
push
and
add
fsubrs
dec
mov
adcl
out
dec
rorl
shll
xchg
sub
aas
xor
out
fdivrs
scas
cwtl
jnp
mov
stos
fcos
ja
or
jle
gs
mov
cmp
movsb
repnz
push
fisubrl
dec
push
sub
mov
sbb
xchg
sti
sub
ljmp
popa
mov
mov
test
sbb
or
mov
pop
repnz
mov
and
stos
dec
das
mov
mov
js
adc
ret
popa
sub
scas
sbb
adc
pushf
add
sbb
mov
iret
pop
jnp
jmp
shr
xchg
xor
decb
bound
jae
scas
dec
repnz
je
lods
cmpsb
movsl
mov
and
mov
adc
dec
js
mov
mov
cmp
or
out
dec
popa
cwtl
add
xchg
fwait
xchg
aam
cmc
ljmp
dec
addr16
shrb
inc
pop
fistl
xchg
sub
lret
dec
cmpsl
cmpsb
pop
imul
mov
xlat
call
cmpb
jg
sub
clc
cmp
lcall
jbe
mov
into
jae
mov
mov
mov
jl
sbbb
sbb
popa
xor
xchg
jecxz
test
jns
cmp
xor
lret
cs
sbb
std
xlat
das
dec
insb
push
xlat
dec
popa
shlb
jmp
sbb
xchg
stos
mov
shll
andl
add
sahf
ret
adc
mov
pop
or
and
sbb
inc
dec
enter
pop
mov
add
or
jbe
cmp
add
les
pop
xlat
pop
adc
push
xor
adc
mov
or
and
jg
pushf
pop
jl
int
in
adc
aam
cmp
js
mov
pushf
lcall
or
lock
jge
insl
test
xchg
or
push
adc
cmp
mov
push
movsl
outsb
pop
repnz
lods
icebp
in
insl
cmpsb
scas
mov
mov
push
jo
lret
cmpsl
and
lahf
pop
sbb
loop
pushf
popf
clc
sbb
sub
adc
dec
cmp
fwait
mov
movsl
mov
xor
lods
or
dec
or
cmp
lret
cmpsb
ds
add
ss
jbe
or
out
dec
xchg
mov
outsb
jle
xchg
mov
xchg
pop
mov
test
xlat
and
sub
mov
mov
jae
je
inc
sbb
cmp
addr16
cmpsl
or
popf
cltd
adc
mov
push
add
repnz
mov
lea
xchg
lock
xor
xchg
jl
pop
xlat
js
jb
jg
push
jmp
cld
xor
jge
nop
jmp
in
in
imul
sar
std
jne
sub
jl
insb
into
push
icebp
pop
sbbb
cmp
mov
out
jne
fucomip
ret
xor
inc
or
scas
sbb
repz
imul
mov
jbe
aaa
cmp
sahf
sub
mov
sbb
dec
dec
fwait
sub
outsl
repz
gs
adc
jl
shll
sbb
test
sub
shll
mov
push
aad
xchg
repz
imul
arpl
inc
sub
mov
adc
mov
add
movsl
mov
push
xor
add
push
loope
cmp
scas
mov
push
push
loopne
push
loop
mov
fwait
test
aaa
xchg
hlt
pusha
fsubp
cmc
mov
add
mov
jp
into
rcrl
ja
pop
jbe
das
out
jmp
add
popf
loop
and
loop
jp
lcall
stc
jp
push
int3
xlat
pushf
mov
xchg
sub
inc
cmp
arpl
sub
or
push
jg
cmp
mov
repz
push
jge
aad
lret
sub
scas
push
mul
ljmp
sbb
adcb
adc
dec
movsl
and
xchg
out
jmp
loope
mov
subl
fadd
fadds
scas
cld
xor
cmp
jmp
mov
adc
inc
dec
imul
sahf
or
rorb
out
out
jbe
add
xchg
jo
push
mov
mov
stc
mov
push
movq
aaa
fmuls
ss
in
in
add
jne
cmp
in
xor
into
add
testl
xchg
nop
jecxz
xchg
fadds
pop
jnp
rol
imul
mov
repnz
inc
sti
stos
subb
enter
clc
mov
jns
mov
push
add
sbb
pop
lods
test
ret
cmp
push
inc
ljmp
insl
xchg
mov
push
out
cltd
ss
xor
popa
nop
cmc
jbe
dec
adc
inc
inc
stos
mov
push
sbb
mov
dec
enter
inc
les
mov
add
mov
sbb
icebp
cmp
test
cld
push
fldenv
ja
jne
add
data16
repnz
push
jbe
sub
ljmp
dec
sarl
jmp
push
iret
shrl
sbb
adc
shll
push
stos
stos
stos
nop
sbb
icebp
es
mov
inc
das
dec
and
inc
aaa
inc
repz
cmp
add
cmpsl
aas
out
dec
jg
nop
and
ds
mov
mov
aam
ds
std
mov
pop
in
sbb
xchg
mov
and
fisubs
fadds
pop
adc
aad
cmp
cwtl
je
pop
cwtl
push
cmp
pcmpeqd
lcall
in
addr16
sbb
xchg
ret
sub
outsl
or
mov
sbb
xor
add
pop
mov
xor
out
jns
movsb
jge
imul
xor
jae
mov
mov
gs
popf
mov
jle
or
push
test
cmc
movsb
adc
sbb
pop
pop
add
jbe
in
imull
mov
enter
mov
daa
dec
aaa
cld
imul
lock
jo
mov
or
test
call
sbb
mov
mov
mov
and
aas
iret
xor
and
cmp
cmpsb
jnp
pop
push
jae
inc
pop
inc
subl
adc
aam
test
idiv
pop
add
xor
jle
jae
cltd
out
call
icebp
adc
sub
mov
mov
rcl
adc
lods
mov
mov
jo
pop
clc
mov
jns
mov
xchg
mov
jno
movsl
cmpsb
pop
loop
test
mov
fcoms
adc
jb
fsubrp
pop
ja
arpl
jl
and
ret
aaa
mov
out
mov
shlb
out
pop
xorl
adc
mov
lea
xchg
mov
daa
xchg
adc
mov
outsl
mov
mov
out
cmp
lret
and
sbb
mov
mov
cmp
jns
jmp
xchg
mov
xlat
xchg
pop
push
and
add
in
lods
adc
cmc
jns
test
stc
add
cmp
add
negl
popa
in
scas
arpl
nop
and
xor
rol
ss
add
add
jo
jl
pusha
ret
aaa
pop
lods
lock
insl
repnz
sbb
add
pop
aad
push
testb
xlat
loop
inc
xor
and
xor
xchg
cs
hlt
outsb
outsb
cmp
mov
sahf
push
pop
sub
xor
decb
xor
cmp
outsl
fildl
pop
gs
sbb
dec
pushf
xor
insb
divb
inc
or
aaa
cmp
cli
fdivs
aad
shlb
test
add
xchg
lods
jo
hlt
push
add
ret
and
aam
push
int3
iret
aas
enter
sub
lcall
pop
push
pop
pop
pop
addb
in
leave
or
in
insl
xor
rcrb
in
imul
add
cmp
jne
imul
cmc
jno
sbb
xchg
inc
mov
push
push
rcr
or
jnp
gs
cmp
mov
mov
and
push
arpl
dec
das
mov
mov
in
lods
adc
outsb
or
loope
ficomps
stc
jo
lds
fcomps
subb
adc
mov
test
jg
jle
fistl
pop
ficomps
insb
jmp
jne
lret
scas
xchg
outsl
ja
fstpl
lret
jle
and
fscale
outsb
and
xorl
stc
daa
enter
jno
aam
sub
push
sub
mov
sahf
cmpsb
pop
adc
adc
jne
repz
xchg
ret
ret
pop
xchg
in
in
dec
aad
lcall
test
add
xor
fsubl
test
pop
xchg
mov
bound
roll
adc
int
cmp
jl
pop
repnz
fsubl
mov
cmpsl
fsubl
int3
jp
mov
rclb
loopne
mov
push
in
jno
ss
sbb
pop
cwtl
mov
inc
ffreep
pusha
cmp
sbb
gs
sbb
and
dec
daa
cwtl
incb
aad
jmp
inc
cli
into
mov
xchg
dec
xchg
inc
xchg
add
cmp
mov
xchg
cs
dec
xchg
pushf
push
scas
add
pop
adc
xlat
out
adc
aas
mov
out
mov
daa
arpl
cld
clc
inc
sbb
dec
push
insb
xchg
scas
je
inc
fcoms
testl
or
add
xchg
movl
jl
shl
call
cmp
inc
and
hlt
insb
push
pop
mov
pop
jb
addl
fwait
cmp
testb
aam
xor
ficoms
inc
push
out
xchg
ret
jb
push
insb
ret
iret
out
dec
leave
jg
push
dec
jo
cmp
iret
lret
popf
adc
jnp
ja
out
mov
pop
hlt
imul
shrl
ror
cmc
or
repnz
mov
outsl
add
push
pop
sbb
aam
popf
dec
inc
std
pop
mov
movsb
loopne
pop
or
shll
sbb
outsl
cmpsl
pop
out
aaa
imul
mov
aam
cmp
lods
jg
and
xchg
lods
sub
sub
dec
psllw
subl
in
xor
dec
rcrl
test
jae
push
xchg
mov
pop
cs
inc
lock
sbbb
out
xor
ret
fcompl
jge
outsl
pop
sbb
lock
sub
ret
xchg
lahf
fidivrs
mov
orb
and
sbb
dec
adc
lods
cmp
adc
sbb
fcoms
mov
dec
jnp
pop
insb
cld
mov
adc
mulb
jge
sbb
adc
pop
pop
adc
test
cwtl
enter
mov
pop
xchg
jge
je
out
test
insl
addb
cmpb
leave
in
out
mov
and
repnz
rorl
adc
aas
jl
test
dec
rolb
and
or
lahf
xor
mov
lods
jne
enter
mov
sti
cmp
jmp
sahf
cld
rorb
mov
aam
lahf
in
pop
adc
add
das
cmp
adc
sub
adc
sar
divb
push
leave
mov
push
lcall
repz
icebp
lods
das
xlat
pop
cltd
rcl
pushf
pop
mov
add
pop
inc
xchg
inc
das
xchg
jge
push
inc
pop
div
push
rorl
pop
imul
nop
movsb
les
leave
aaa
mov
push
xchg
into
jnp
int3
mov
ja
add
xchg
jb
sbb
hlt
aam
data16
mov
cmc
jae
jae
add
ljmp
push
mov
and
cmp
sub
int3
adc
ds
cmpsb
jmp
jbe
xchg
sbb
mov
pop
adc
xor
mov
or
mov
pop
mov
sub
movsl
push
xor
shl
sub
loop
out
popa
or
adc
int
pinsrw
xlat
jo
dec
daa
stc
inc
not
mov
mov
popf
mov
hlt
xor
mov
je
jl,pn
mov
sti
sub
sub
cli
cli
adc
cmp
notl
cltd
dec
jae
xchg
pop
inc
push
push
imul
in
inc
das
mov
dec
std
mov
lock
data16
cmp
fcomp
cmp
mov
mov
out
mov
daa
lods
xchg
ds
int
stos
inc
out
adc
subl
or
mov
add
push
pop
aam
push
cmp
js
xchg
es
sbbl
push
enter
push
adc
sahf
shll
and
pop
shrb
pop
xorl
cmp
push
divb
cmp
fwait
sub
les
fcmovbe
dec
fisttpl
leave
xchg
aad
or
xchg
hlt
stos
sub
shlb
xchg
js
cmp
inc
push
adc
add
fcomip
and
mov
cmp
jbe
mov
mov
mov
xor
stc
push
cwtl
imul
jns
xor
dec
test
cmovl
add
je
push
cmc
sub
xchg
cmp
mov
xchg
and
mov
sbb
jg
dec
xor
iret
cmp
testl
loope
test
add
fscale
mov
xchg
iret
jno
je
inc
sub
pop
jns
jge
mov
nop
lds
add
push
pop
xchg
pop
hlt
addr16
fnstsw
inc
shll
popa
mov
add
xchg
ret
sub
inc
inc
add
jg
shlb
cmp
ljmp
fwait
xchg
imul
sub
mov
ds
mov
js
adc
sbb
fidivs
mov
into
int3
lds
push
mov
daa
dec
lods
inc
lcall
cmp
ja
push
fisubl
mov
mov
dec
inc
fisubrs
xchg
inc
xor
xchg
cmp
xor
loope
fs
and
lahf
cmp
clc
sahf
sub
jl
fwait
inc
cmp
cmp
sub
add
sti
bound
lret
lret
int3
movsb
arpl
push
fsubrs
shrb
lahf
repz
xor
leave
test
lcall
cmp
cs
cmc
cmp
out
rorb
gs
notb
xchg
lods
loope
imul
add
fs
test
rcrl
lods
push
lds
mov
xchg
push
mov
xor
lret
outsl
inc
movsb
test
cmp
rcrb
arpl
jb
add
in
add
mov
outsl
lea
inc
roll
xchg
lahf
into
lods
adc
pop
inc
mov
rcll
test
outsl
jbe
and
xchg
or
add
jl
incb
popf
cmp
mov
ficomps
lods
adc
mov
hlt
or
sti
and
mov
lahf
sub
fwait
mov
jae
ficoms
loop
mov
dec
loope
call
imul
sub
das
adc
call
mov
int3
push
cmp
imul
adc
push
push
outsb
xlat
sub
add
push
xor
loop
dec
fldt
mov
push
fldenv
les
js
fcoml
pop
pop
adc
pop
pop
jg
pop
popf
outsl
inc
scas
dec
repnz
outsb
loopne
ljmp
add
lea
mov
pop
adc
lods
daa
test
loope
idivb
dec
adc
inc
jmp
insl
pop
and
push
cmp
fidivs
shl
data16
pop
ret
rcrl
lahf
mov
sbb
repz
repnz
xchg
int
cmpsl
xlat
aad
xor
pop
nop
insb
imul
xchg
mov
push
movsb
ljmp
sbb
mov
xor
cmp
cmp
mov
cmc
je
add
mov
out
lods
cli
hlt
clc
inc
arpl
jmp
jns
fistpl
sub
dec
push
xchg
idiv
out
fimull
shl
adc
cmp
jns
rcll
fs
jg
push
mov
jmp
imul
inc
shlb
icebp
loope
mov
fwait
xor
sbb
insb
out
jns
or
pop
and
popf
daa
jnp
aas
add
or
jl
loop
push
inc
mov
mov
pop
dec
cld
in
cmp
test
and
jg
sahf
xor
mov
or
push
repz
mov
aad
loope
jmp
and
test
les
sbb
jp
test
cmp
int
cmpsb
test
loope
xor
ficoms
or
bt
dec
add
je
orb
int3
dec
pop
mov
cld
cli
fnsave
mov
or
pop
incb
ss
insb
and
jno
xlat
pop
cmpsl
scas
sbb
fdivrs
xor
into
dec
bound
mov
add
mov
push
jno
jb
sub
jnp
test
sbb
roll
repnz
test
sti
add
inc
rclb
inc
enter
shrb
aad
jne
and
movsl
mov
imul
lcall
clc
gs
cmc
xchg
jl
ficoms
js
faddp
push
pop
cwtl
mov
cmp
cmpsb
mov
popa
rolb
add
inc
cltd
pop
mov
negl
and
pop
jnp
in
pop
icebp
jb
ds
lret
mov
loopne
jle
cmpsb
cmp
dec
dec
mov
push
lret
loopne
cmp
pop
loop
adc
jne
add
add
jne
cwtl
dec
shr
scas
ss
cmp
out
inc
add
aas
ljmp
mov
sbb
cmpl
dec
pop
imul
or
xor
out
or
mov
jbe
or
or
fildll
xchg
mov
fwait
push
inc
dec
fnstcw
dec
cmp
pop
dec
cmpl
ret
fwait
mov
imul
cs
sbb
in
dec
outsl
ret
push
call
ljmp
lock
repz
mov
mov
push
dec
loope
outsl
and
inc
mov
sub
sbb
xbegin
es
aam
push
push
ret
rorl
add
das
or
fistpll
sub
jmp
mov
mov
mov
lahf
mov
icebp
push
push
push
mov
ljmp
roll
dec
add
scas
jle
jb
jle
sub
or
xorl
cmpsb
jbe
mov
jecxz
stc
jg,pt
mov
call
insl
out
jbe
iret
adc
mov
push
mov
ljmp
shlb
cs
call
outsb
lock
inc
insb
jg
cmp
outsb
test
jg
rorl
cmp
fiaddl
add
lds
xchg
lcall
adcb
jle
and
cmp
shr
cmpl
push
and
test
pusha
dec
push
insb
xchg
xchg
leave
loopne
lea
inc
and
sbb
dec
mov
or
fistpll
ret
mov
enter
lock
sbb
jb
adc
xchg
test
out
mov
mov
mov
ja
aam
sub
add
enter
subl
iret
jmp
add
lahf
es
add
mov
xlat
xor
or
out
add
adc
lcall
or
ret
test
stos
cmp
leave
fstl
xor
dec
stos
mov
dec
out
cmpsl
xor
inc
mov
inc
cli
insb
outsb
gs
cmc
std
xchg
add
jecxz
scas
push
pop
xchg
sbb
jge
push
aas
xor
sbb
or
sti
lret
pushf
inc
and
ja
and
rcl
sarl
lock
and
jp
lods
data16
sub
pushf
mov
adc
mov
fisttpl
repz
jg
test
lea
add
jb
adc
mov
push
mov
push
sbb
imul
scas
push
jecxz
sbb
shrb
mov
shl
sub
pop
lea
xchg
dec
mov
and
mov
scas
ss
iret
test
mov
lea
jae
mov
jo
mov
fldenv
icebp
addr16
and
xchg
dec
jbe
adc
enter
outsl
pop
loope
jle
or
out
dec
sbb
cmpsb
int3
bound
jno
out
clc
push
cli
mov
or
mov
jbe
aam
xchg
sbb
mov
repnz
cmpsl
nop
in
sbb
call
add
mov
test
imull
ret
je
push
lods
lods
fcompl
cwtl
insl
add
fmull
adc
lods
adc
inc
outsb
das
lahf
ds
int3
push
aas
xlat
adc
push
add
aad
jae
mov
sbbb
cmp
sahf
adc
lea
sub
imul
jne
mov
cmpsl
lret
clc
add
mov
bound
push
rcll
ds
pop
dec
inc
repnz
add
ljmp
lods
dec
arpl
out
jae
adc
fisubrl
cmp
test
shrl
adc
subb
movsl
cmp
push
ficomps
shll
push
repz
lods
gs
xor
sbb
fnstsw
cmp
daa
test
rcrl
test
inc
lret
mov
repnz
into
or
jl
stos
xor
testb
adc
dec
inc
mov
bound
les
clc
ret
mov
jo
xor
mov
mov
lret
jmp
add
jg
aas
push
jp
je
sub
pop
sbb
push
nop
lods
shlb
push
xor
es
mov
aad
pop
push
push
imul
in
jp
adc
jo
movzwl
in
outsb
cld
clc
aaa
gs
in
sub
aaa
mov
stos
xor
insl
in
lret
jge
dec
loop
or
pop
xor
dec
mul
in
outsl
cmp
pop
xor
xchg
sbb
dec
xor
leave
pop
idivb
fcmovnb
cmc
cmp
loop
pushl
sbb
pop
iret
into
sbb
cli
push
aaa
inc
pop
insb
pusha
imul
scas
ret
dec
lret
cmp
cs
sarl
push
bound
xchg
or
cltd
sbb
cmp
jb
cs
mov
dec
xchg
into
into
or
imul
push
arpl
lods
inc
icebp
stos
inc
pop
into
fcomip
mov
arpl
pop
jmp
cld
ljmp
dec
adc
je
idivb
and
mov
fsubrs
inc
ljmp
xchg
add
push
sub
xchg
inc
dec
mov
mov
sbb
int3
push
arpl
pop
cmc
jnp
dec
mov
outsl
int3
dec
mov
fbstp
loope
inc
inc
cmp
ret
mov
gs
in
sbb
cmc
imul
mov
sub
xor
loop
jl
mov
cmp
iret
int
out
fdivrl
ja
sahf
xor
gs
push
push
mov
or
sub
mov
dec
insl
cmpsl
jbe
popf
mov
jnp
enter
or
leave
or
cmp
sub
xor
or
push
arpl
push
arpl
mov
or
insb
aaa
outsb
into
orb
xchg
lret
imul
insl
adcl
mov
jno
loope
test
sti
jl
into
insb
dec
sub
push
insl
int3
pop
mov
fstl
add
push
xor
mov
ret
or
jns
es
mov
test
mov
mov
fsub
stc
xchg
ds
sahf
clc
or
cmp
sahf
leave
xchg
adc
xor
jp
stc
inc
sbb
cld
fildl
xchg
lret
lods
mov
stc
imulb
rcr
cwtl
iret
jno
mov
imul
lock
mov
aam
mov
in
pop
pop
dec
mov
jno
nop
mov
xchg
into
test
repnz
das
mov
pop
mov
test
fsts
cmc
inc
mov
js
filds
sub
adc
fnsave
sti
jl
testb
lds
rolb
mov
lock
fnsave
scas
mov
mov
xchg
xchg
call
and
das
xchg
sahf
and
mov
jne
push
sbb
idivl
cmp
xchg
inc
sbb
ret
int3
sbb
fsubrl
das
fs
mov
fcoms
fbstp
repnz
dec
mov
punpckhwd
inc
cmp
sbb
and
ret
cmc
push
jno
ret
fstl
enter
ljmp
mov
lcall
cmpb
ret
and
out
dec
into
dec
inc
inc
test
mov
jno
pop
cmc
push
mov
mov
mov
in
mov
mov
dec
fists
cltd
popa
in
sarl
aas
ud1
dec
inc
sbb
inc
sub
fwait
sbb
hlt
movsl
push
test
mov
jo
ljmp
ljmp
pop
ss
es
dec
adc
add
dec
pushf
mov
lcall
jae
jno
jecxz
scas
stos
mov
mov
cmp
movsl
mov
sbb
inc
loop
mov
add
shrl
jb
outsl
lods
sub
inc
pop
and
icebp
dec
rorb
mov
or
call
mov
cwtl
cmp
imul
push
xchg
jno
pop
push
or
inc
cmpsl
cmp
das
pop
mov
pop
pop
sub
popa
out
push
loope
mov
addb
cwtl
jmp
fsubrs
xor
push
clc
inc
xchg
in
jl
fmul
imul
pop
xchg
or
pop
jb
push
xchg
in
ljmp
sub
lcall
aas
push
sbb
cmc
cmpsl
les
or
inc
into
xor
stos
sbbl
or
jae
jmp
hlt
mov
cmp
out
leave
xchg
inc
sbb
lods
hlt
out
adc
ret
lock
leave
or
mov
imulb
jge
cmpsl
cmp
pop
pop
sbb
mov
push
out
mov
aad
jg
push
push
push
pusha
mov
xorl
rolb
lret
arpl
or
enter
xchg
sub
addr16
out
stos
shlb
inc
and
inc
pop
adc
jns
data16
inc
repnz
ja
sub
je
insb
lret
pusha
repnz
jns
xchg
out
inc
ja
orl
lock
xor
movsl
jae
xorl
add
jg
xchg
fwait
sub
les
mov
cmc
mov
hlt
ret
fimuls
pop
sub
or
scas
push
add
sub
sub
jecxz
jge
loopne
sub
mov
dec
push
data16
jge
add
popf
rcll
pop
outsl
pop
pop
xchg
inc
nop
data16
sahf
pop
not
clc
dec
test
pop
jo
xlat
mov
jne
out
sbb
sbb
in
or
int
jle
inc
stc
push
cmp
mov
xchg
insl
push
mov
or
scas
mov
stos
add
add
lahf
xchg
aad
jns
adc
jl
fidivs
xchg
aam
pop
lret
pop
or
arpl
mov
les
sbb
jnp
lods
lods
push
stc
jg
sbb
call
subb
je
push
inc
int
jle
push
bound
adc
bound
popf
addr16
adc
xor
sbb
test
idivb
mov
pushf
add
addr16
cli
cmpsl
ret
movsl
fsubrs
mov
in
cvtdq2ps
fisttpll
jae
pop
and
and
xor
mov
popf
fbstp
xchg
test
add
adc
fistpll
xor
and
aam
push
push
loop
leave
lea
rcrl
xor
mov
out
pop
xchg
shll
popf
mov
sub
rorb
pop
pop
mov
mov
fs
call
bound
jge
imull
jo
inc
fadds
pop
sub
rcr
or
jnp
movsb
in
dec
es
repnz
faddp
sub
inc
cmp
xor
cltd
xchg
sub
in
fcomps
jnp
aaa
and
movsb
bound
insb
sbb
out
or
pushf
leave
rol
rcll
roll
push
sbb
insl
xor
addr16
and
roll
dec
dec
mov
pusha
xlat
lods
ss
sarb
inc
je
dec
jnp
adc
lret
sub
mov
and
mov
je
mov
xchg
jns
push
mov
push
inc
ss
sbb
lock
es
pop
dec
insl
idivl
subl
into
xchg
stc
cli
cwtl
mov
xor
int3
mov
repz
fldl
cld
aam
negl
pop
popa
sbb
dec
lods
or
fildll
movb
dec
dec
sbb
pop
or
out
mov
sub
lods
pop
stos
je
dec
xchg
rorl
mov
sub
xor
lods
inc
push
jmp
add
mov
jae
ret
cwtl
sub
pop
sub
movsl
pop
stc
inc
in
mov
test
js
mov
sub
xchg
or
jb
add
push
adc
in
push
leave
ljmp
shl
pop
add
ficomps
sbb
cmp
sbb
popa
cwtl
cmp
clc
test
adc
pop
jle
sbb
or
cs
cmp
addr16
aas
inc
pop
or
and
adcb
mov
into
jbe
pop
stos
jmp
jle
push
ss
ss
pop
mov
pop
sub
or
leave
add
shrl
mov
mov
xor
cmp
xchg
int3
mov
dec
jmp
fucomp
push
jne
aas
push
lds
std
into
pop
out
aaa
xchg
push
in
adc
cld
js
call
fcomi
mov
inc
mov
fs
inc
xchg
mov
cltd
fbld
imul
jne
rcrl
in
jne
in
mov
fs
sub
pop
rorl
cld
dec
mov
xorl
jl
insl
lods
test
push
or
jl
push
hlt
push
insl
shll
fdivrs
ret
fnclex
jp
es
movsl
repnz
or
cmc
es
dec
std
out
jl
cmp
jno
push
xor
and
es
in
mov
test
aaa
pushf
lods
pop
sbb
cmp
cld
shr
fadd
fldcw
mov
into
ds
dec
gs
or
xor
sbb
dec
pmulhuw
cmc
or
inc
mov
cld
cmp
aas
pushf
dec
sbb
push
dec
popf
mul
adc
mov
inc
dec
ja
xor
mov
test
cmp
mov
fisttpll
dec
cmp
lea
cmc
pop
pop
mov
orl
and
jno
and
mov
scas
scas
xchg
dec
xchg
loop
rcl
or
outsb
scas
pop
clc
test
adc
or
inc
push
inc
stos
cltd
dec
loop
stos
pop
pop
icebp
pop
mov
cltd
lahf
out
mov
pop
mov
daa
icebp
xchg
out
test
pusha
push
mov
repz
in
mov
inc
rcl
rcrb
xor
ficoms
pushf
cmp
jns
sbb
sbb
add
pop
stc
out
mov
mov
mov
jnp,pn
lcall
out
pushf
out
sbb
imul
add
frstor
jo
pop
lds
and
sbb
sbb
add
pop
sub
mov
out
das
push
mov
fcomps
push
minps
adc
cmp
pop
cmpsb
mov
ret
daa
xchg
hlt
lods
pop
in
xchg
jns
dec
sub
jne
push
push
scas
mov
mov
pop
leave
inc
jg
fimull
pop
mov
es
pop
bound
pop
xor
mov
test
add
dec
push
xchg
add
divl
mov
push
sbb
fsubs
mov
push
xchg
addr16
and
mov
push
adc
sub
or
outsb
mov
mov
shrl
jno
mov
dec
or
add
xor
cmpsb
out
jbe
loop
jo
sti
mov
dec
adc
push
fadds
cmp
loopne
data16
push
psubusb
adc
adc
sub
int3
sbb
fs
cmpb
xchg
adc
out
xchg
push
inc
inc
ror
jp
test
mov
fsub
out
inc
fidivrs
xor
cmpb
shlb
sti
jl
imul
scas
xor
mov
cmp
jp
movl
dec
jbe
pop
pop
adc
and
cmc
stos
pop
pop
fimuls
addl
rclb
cmp
mov
js
ja
aas
popf
jge
out
xchg
add
mov
and
cmpl
dec
add
and
dec
fistl
adc
pop
or
and
rolb
inc
clc
dec
and
xorl
jmp
sti
lock
test
shlb
in
stos
lds
cmpsl
jp
cmpsb
xchg
adc
or
sbb
xor
pop
in
or
out
cmp
adc
aad
in
ror
gs
cmpsb
das
aam
inc
add
mov
cmp
adc
insb
jge
imul
mov
pop
es
mov
pop
mov
test
jno
mov
or
xchg
adc
repnz
jecxz
and
cli
repnz
sti
push
jmp
and
xchg
adc
in
push
divb
or
fnstsw
mov
mov
in
stos
imul
xor
sbb
repnz
inc
and
sbb
repnz
push
mov
mov
and
cmp
hlt
shl
movsl
pop
push
xor
jl
mov
xchg
and
xchg
dec
out
sub
dec
mov
test
jo
cmp
iret
scas
repnz
adc
or
jg
popf
hlt
decl
or
sbb
std
std
fiaddl
lcall
dec
cmc
pushf
jb
out
xchg
test
cvtdq2ps
jbe
push
clc
sbb
pushf
repz
fists
imul
mov
div
in
pop
psubsw
xchg
mov
dec
add
sbb
je
testb
inc
popa
data16
push
jno
push
mov
lahf
and
jo
sbb
pop
sbb
testb
dec
push
sub
dec
cmp
cs
subb
xchg
xor
faddp
aam
pop
jl
aaa
adc
mov
sti
sbb
pop
jb
call
mov
push
mov
aaa
nop
sti
xor
mov
test
sbb
dec
fucomip
je
dec
shrb
xchg
lds
popf
xor
mov
add
dec
or
outsl
xchg
jge
dec
push
pusha
sub
mov
mov
push
cmp
push
xchg
sub
addl
jno
outsl
in
pushf
add
xor
faddl
shrl
cld
inc
cmp
dec
fwait
cltd
int
mov
out
push
mov
cmc
pop
lret
daa
pusha
mov
cmp
inc
mov
call
cmp
push
jl
sbb
sub
sbb
daa
std
inc
les
sub
push
movsl
xchg
in
out
add
imul
push
pop
mov
adc
hlt
pusha
or
and
ljmp
mov
jns,pt
xlat
push
or
sub
imul
or
ds
dec
pop
adc
jne
dec
in
push
xor
or
cmp
mov
mov
adc
stc
sbb
pop
add
cmp
push
xchg
mov
fwait
in
sahf
pushf
xor
into
cmpsb
mov
push
das
addr16
sbb
lock
jecxz
call
and
cmp
rol
mov
adc
xor
orb
sub
inc
jno
add
xor
in
pop
mov
or
push
xor
ljmp
adcb
clc
sub
jp
dec
dec
int
clc
shll
and
or
xor
mov
push
fsubrl
adc
pop
cmpb
push
scas
sbb
or
push
sti
sbbl
cmp
mov
lods
mov
shrl
leave
cwtl
pop
cld
das
jecxz
in
clc
push
mov
hlt
mov
push
lds
in
fcoml
lret
js
and
test
push
stos
xor
negb
inc
pop
cli
mov
popf
fs
mov
jmp
mov
mov
in
jb
sub
mov
jl
shll
push
sub
push
pop
std
mov
sbb
pop
pop
lahf
pop
aaa
xchg
mov
xlat
nop
fwait
rorb
es
sbb
pop
ss
imul
jle
scas
add
faddp
loopne
xchg
loop
jecxz
cld
pop
insb
cmpsl
pop
sbb
and
jecxz
int
lods
movsb
dec
cmp
lods
and
pop
adc
mov
rcr
xchg
pop
lods
jg
lahf
ja
sub
shlb
mov
pop
mov
xor
xor
enter
adc
repz
stos
call
adc
mov
mov
gs
mov
xchg
shll
and
lret
je
dec
push
punpckhdq
and
push
jmp
inc
mov
repnz
bts
sarl
sub
clc
fistps
cmc
scas
cmpsb
andb
int3
gs
sbb
push
ud2
popf
mov
sarl
pop
mov
sub
xor
jne
mov
int3
mov
mov
icebp
xor
mov
inc
mov
mov
adc
dec
popa
insl
lods
jl
lods
push
push
mov
mov
test
and
data16
pushf
bound
mov
cli
mov
or
ja
inc
shl
sbb
or
fldt
xor
shll
sbb
pushf
out
out
ficoml
push
jp
mov
inc
rcrb
addb
sti
iret
popa
jno
dec
inc
sbb
mov
stos
cmpsb
idiv
lods
mov
imul
inc
je
in
sbb
push
shll
mov
notl
sbb
rorb
push
in
shll
int
xchg
clc
jmp
or
push
sahf
repnz
notl
pop
xlat
mov
xor
out
jmp
inc
addr16
push
cmp
or
fsubl
xor
add
sbb
cmp
push
add
fildl
xorb
push
dec
push
lahf
js
scas
xor
sbbl
mov
inc
sbb
cmpsl
cli
sub
mov
aam
jl
cltd
lods
jno
cmp
pop
cmc
ss
add
cmp
or
pushf
ss
jno
lret
shll
into
push
push
xchg
add
fisubs
out
into
add
lahf
jle
mov
lock
push
into
cmpsl
cmpb
inc
je
ret
shlb
pushf
push
and
pop
push
scas
scas
jmp
scas
sub
outsb
in
icebp
jb
jge
sahf
xchg
out
popf
test
das
pushw
sbb
fstps
xor
sbb
cmc
xlat
mov
orb
in
xlat
out
pop
xlat
add
mov
fs
int
xchg
int
out
and
movsl
adc
ds
scas
cmp
shll
jecxz
cli
fistl
mov
sbb
or
xchg
sbb
sbb
fdivrl
sahf
jb
or
inc
in
frstor
or
mov
les
mov
out
xchg
ffree
mov
subl
sub
pop
pop
cmp
sub
jbe
add
push
and
add
mov
imul
out
push
ret
ret
adc
mov
push
add
and
jle
in
mov
jo
out
or
dec
dec
loopne
push
test
mov
mov
push
dec
push
out
adc
inc
shll
addr16
push
je
shrl
push
mov
out
push
fwait
pop
xor
hlt
xor
fbstp
cwtl
push
adc
fldl
aas
xor
cs
pop
in
inc
jbe
in
hlt
or
rclb
or
nop
and
cmc
mov
mov
out
lret
out
loop
loop
sub
xchg
mov
sub
mov
xor
add
jno
jne
popf
dec
xor
mov
shlb
stos
xchg
dec
stos
lcall
adc
icebp
call
push
in
outsl
mov
jne
dec
in
js
and
cmp
adc
gs
scas
outsl
test
xchg
popl
and
dec
mov
pop
out
and
xor
or
xlat
xchg
and
push
sbb
stos
jp
mov
push
xchg
xor
sbb
out
insl
lds
mov
test
xor
push
mov
mulb
jae
dec
jle
pop
adc
es
pop
leave
mov
sub
xchg
rorl
adc
dec
pop
cmp
xchg
mov
mov
xchg
sbb
push
bound
popa
mov
or
and
fdivrs
cmp
mov
jecxz
inc
dec
aaa
imul
mov
pop
pop
adc
cwtl
mov
mov
jge
in
inc
or
mov
ljmpw
lret
sbb
bound
pusha
and
mov
mov
fdivl
sti
mov
mov
std
aaa
inc
sub
push
jge
mov
and
dec
mov
stc
fs
paddusb
mov
in
icebp
iret
jecxz
mov
iret
inc
mov
jo
shlb
loope
shlb
movsl
xchg
dec
xchg
popf
push
jno
inc
std
mov
sbb
mov
inc
inc
fmul
call
jecxz
fimuls
mov
adc
sub
sub
xchg
pusha
push
sti
push
out
jp
neg
movsl
pop
dec
xlat
repz
adc
mov
inc
mov
dec
fwait
push
jnp
movsl
mov
or
ljmp
mov
mov
push
mov
push
sbb
adcb
bound
add
mov
cmp
icebp
mov
jbe
dec
jne
ret
fstpt
push
rolb
popa
mov
and
mov
mov
sub
xchg
add
call
cwtl
push
xchg
dec
ret
outsb
sbb
cmp
cmp
arpl
cmp
je
pop
sub
aam
cmc
sub
mov
testl
fs
ljmp
push
mov
jne
cmp
mov
cwtl
push
cmp
push
cmc
mov
test
mov
aad
loop
sbb
or
sbb
popa
ret
loopne
mov
mov
out
or
aaa
mov
fdivrs
sub
add
icebp
add
xlat
fs
xor
dec
ja
test
mov
stc
jb
popa
sub
mov
in
dec
cmp
and
add
lcall
jp
bound
sub
and
mov
loopne
inc
loopne
xchg
xor
mov
test
daa
insb
sbb
xor
movsl
repnz
int
mov
pusha
inc
pop
mov
dec
add
das
mov
lea
insl
jno
movsb
sbb
push
out
clc
jle
cmp
lods
orb
mov
call
mov
sbb
pop
popf
jmp
adc
mov
daa
ljmp
cwtl
nop
mov
aad
clc
cmp
pop
daa
mov
sub
mov
rcrb
rcll
inc
js
xor
push
popf
inc
lods
mov
scas
mov
imul
mov
pop
shll
pop
dec
std
jnp
cmp
leave
sbb
sbb
xchg
insl
insl
cs
pop
push
out
hlt
dec
mov
ret
pop
js
xor
cmp
leave
or
dec
fdivrs
jae
inc
push
cmp
cltd
or
lods
inc
fildl
leave
fwait
loopne
fistps
mov
popa
inc
mov
and
add
sbb
in
xchg
sarl
dec
in
and
mov
mov
lea
subb
fimull
je
lcall
adc
or
mov
push
pop
jg
mov
mov
stos
std
js
cmpl
in
xchg
mov
sub
push
clc
pop
fsubr
inc
test
pusha
shlb
lea
ret
push
shrb
mov
xor
clc
xchg
sub
or
push
mov
pop
add
or
sbb
jl
xchg
lcall
aad
add
jno
mov
orb
loopne
std
xlat
or
mov
mov
add
movsl
jl
loop
das
or
aas
movsb
dec
or
jle
adc
mov
mov
add
call
or
fwait
pushf
cmp
jle
add
xor
in
loope
push
add
jp
add
push
dec
call
in
mov
xor
and
push
mov
insl
aas
outsb
xchg
xchg
dec
in
inc
outsl
adc
push
and
sbb
movsl
xchg
test
in
mov
inc
cmp
jge
pushf
repz
lods
hlt
pop
xor
push
jno
aad
nop
idiv
jae
dec
jne
test
sub
jns
jmp
scas
push
cmp
cmpsl
pop
xchg
int3
stos
pop
shrb
repz
cmp
movsb
jae
cmpsl
ror
addl
mov
jl
xor
mov
mov
imul
or
test
and
popf
add
xor
xor
push
mov
dec
adc
jnp
mov
pusha
fisttpll
cltd
push
imul
rol
cmp
rcrl
in
inc
mov
call
subb
push
or
mov
sahf
call
fs
lcall
repz
sti
jnp
jg
pushf
sbb
fcoms
arpl
sub
cli
sub
xor
scas
sub
push
lret
ss
pop
cmpsl
or
nop
add
fistpl
test
call
xor
fcoms
aam
jl
lret
mov
push
mov
sbb
xor
dec
mov
js
sbb
gs
xor
pop
dec
adc
xchg
inc
outsl
mov
pop
dec
shlb
jne
div
out
fisubs
cmp
sbb
and
push
nop
cmp
mov
inc
inc
dec
ret
sub
dec
mov
scas
mov
int3
test
sbb
cmpsb
stos
mov
arpl
inc
adc
jmp
sub
aas
mov
mov
sub
movsb
outsl
xor
fcoml
inc
or
rorl
adc
lods
mov
enter
mov
fisttpl
je
add
xor
and
push
mov
mov
xchg
scas
pop
pop
xchg
js
add
xor
sbb
loope
pop
xchg
mov
shrl
and
jo
mov
sub
cld
fsubl
hlt
add
dec
pop
sub
cmpsb
fcomp
mov
scas
dec
cli
cltd
and
repnz
imul
movsb
pop
dec
push
out
push
dec
lods
bound
sbb
mov
fwait
es
stos
or
jp
jb
pop
jmp
stc
xor
mov
inc
mov
push
jno
mov
or
lods
lret
cmp
insb
movsb
movsb
push
lock
mov
adc
xor
jns
cmp
lock
scas
hlt
repnz
dec
sbb
cmp
addb
sub
in
xor
mov
je
push
insl
and
mov
jb
addb
fnstsw
sbb
in
scas
sarb
jne
jne
popf
push
repz
mov
mov
lcall
clc
xchg
fucomp
popf
es
mov
pop
notb
pop
movsb
sbb
das
jb
push
xor
dec
jle
sbb
push
mov
xorl
test
lock
insl
mov
mov
sub
mov
leave
repnz
push
xorb
push
mov
adc
xlat
out
pop
test
pop
leave
addr16
jg
xchg
int
adc
mov
or
mov
aam
cmpsl
mov
int
adcl
mov
xchg
inc
mov
sub
sbb
loope
cmc
xor
setl
fcoml
jae
loop
inc
enter
cmp
xchg
loop
outsl
inc
cmpsb
rep
rolb
xchg
lods
cwtl
mov
icebp
out
pop
out
push
movsl
cmpsl
in
arpl
aaa
leave
into
lahf
daa
js
and
mov
push
mov
orb
cs
add
cmp
inc
cmp
insl
aam
add
xchg
hlt
stos
enter
cltd
nop
fimull
nop
jae
add
jle
aad
out
adc
push
test
leave
pusha
aaa
jg
push
lock
inc
popa
out
testb
adc
xor
xchg
mov
popf
inc
push
flds
test
movsl
pop
insb
imul
lock
and
push
inc
mov
sbb
clc
inc
fimuls
inc
aas
imul
mov
adc
not
xchg
stos
inc
jg
outsb
or
mov
cmp
dec
out
inc
dec
dec
jb
or
fwait
lods
rorl
dec
sub
std
pop
sub
mov
std
imul
jbe
sub
pop
push
decb
int
lret
cwtl
dec
adc
je
pop
stos
pop
das
clc
ret
andb
ret
insl
add
ret
cltd
mov
loope
in
mov
dec
xor
and
lret
mov
mov
hlt
pop
pusha
add
mov
add
adc
jg
bound
outsl
adc
mov
fsubs
fidivs
xor
pop
ret
dec
ret
movsl
jae
cltd
rorb
push
mov
hlt
dec
cld
mov
fsubrl
xchg
jg
mov
clc
popf
les
jne
repnz
pop
mov
sbb
xor
xor
dec
cmp
clc
insl
pop
sub
adc
and
jmp
ficoml
mov
bound
repz
jecxz
jmp
adc
aad
scas
cli
jecxz
test
adc
xlat
sub
inc
sub
add
xlat
inc
xchg
pop
test
add
mov
pop
push
cmpsb
insl
cmp
lret
mov
jle
inc
and
push
adc
mov
fcoms
loope
cmp
push
fs
sub
enter
mov
hlt
stos
jo
xchg
pop
push
rcll
or
sub
aas
xlat
sbb
inc
stos
xchg
daa
jbe
cmp
shrb
mov
stc
mov
jo
add
loop
callw
fdiv
popf
ss
aaa
pop
add
and
insb
jns
inc
pop
cld
and
aad
adc
cli
jb
aaa
insl
lret
mov
test
add
daa
loope
in
rolb
jg
mov
adc
icebp
loope
adc
or
lock
jae
scas
add
jle
pop
stc
xchg
pop
add
lods
mov
xorps
pop
data16
or
pop
mov
lret
add
rclb
fs
cmp
adc
add
jg
mov
mov
mov
adc
mov
scas
cwtl
js
sti
dec
je
aas
leave
insb
pop
inc
lods
cmp
cmp
xchg
dec
cmp
inc
flds
mov
jl
dec
insl
lods
jns
outsb
fsub
pop
fstps
or
pushf
mov
pop
out
sbb
cmp
das
pop
leave
lret
fcoms
push
jno
jle
sub
push
push
cmp
nop
add
adc
pop
rcll
xchg
in
mov
sub
or
pop
in
rcll
inc
rcrb
in
scas
scas
lock
sbb
loop
into
imul
push
jge
mov
add
jae
inc
or
adc
adc
adc
out
out
or
cmp
loopne
or
jb
pop
cmp
and
nop
lods
stos
adc
icebp
js
dec
and
idiv
fidivrs
mov
xchg
les
or
mov
jmp
dec
aam
shl
push
inc
das
cmp
es
cltd
mov
push
mov
jp
xchg
out
arpl
movsb
pop
mov
fldcw
xchg
add
pop
sub
stos
xor
dec
jecxz
xchg
imul
mov
fbld
in
pushf
mov
fstps
cmpsl
fcmovnb
xchg
sub
mov
stos
and
and
push
xchg
push
pop
clc
into
inc
sbb
sahf
jne
adc
sbb
adc
jl
and
ljmp
or
in
xchg
pusha
push
jns
jmp
in
sbb
test
int
xor
pop
loopne
mov
pop
ja
in
cmpsb
pop
call
xchg
filds
pop
mov
pusha
or
outsb
mov
adc
rclb
popf
ja
sbb
movsl
add
sbb
lods
xor
decb
test
movsl
sub
lcall
add
or
bound
mov
inc
cmpsl
or
inc
jno
xchg
adc
pop
push
jg
sub
xor
bound
pop
sbb
loopne
push
cmpsb
mov
sub
insl
jp
pop
push
rcrl
sub
or
insb
pushl
jae
mov
add
adc
inc
test
cs
mov
push
mov
push
movsb
push
shlb
out
inc
sahf
insl
add
dec
out
into
rclb
loop
out
xlat
mov
xchg
xchg
sti
lret
jne
and
scas
mov
push
xchg
cmc
daa
daa
xchg
stos
int
shll
cmp
or
jecxz
jmp
jno
mov
and
jb
mov
mov
adc
cli
xchg
test
sbb
or
inc
mov
out
andb
inc
jb
mov
jmp
mov
push
int
and
cs
les
nop
xchg
int3
gs
mov
ficompl
push
mov
xchg
in
mov
jbe
jae
hlt
lods
or
push
lock
inc
sbb
into
ret
mov
vpsllq
jle
push
mov
lret
fcmovnbe
add
movsb
or
push
adc
out
or
aad
xor
inc
push
out
cmpb
std
loope
mov
mov
cmpsl
xchg
mov
xlat
fildl
sbb
inc
add
mov
mov
ljmp
push
and
mov
adc
and
sbb
lea
add
test
jg
or
mov
insl
and
lods
lahf
xchg
sbb
add
mov
mov
cmp
push
ret
ds
sub
and
adc
dec
sub
fstpl
add
ljmp
add
jl
fs
xchg
xchg
sub
add
mov
mov
ret
cwtl
xor
sbb
or
jl
xchg
or
sbb
jg
sti
fstpt
push
fldcw
loopne
nop
dec
arpl
mov
mov
movsl
divps
repnz
int
mov
mov
xorb
xor
mul
repnz
cmpsb
xchg
mov
pushf
mov
div
or
push
imul
adc
push
or
jbe
sub
mov
jns,pt
negl
cmp
dec
call
cmc
and
cmp
xor
loopne
cmp
cltd
pop
aad
outsl
in
cmp
mov
imull
xchg
fnstcw
jmp
scas
pusha
inc
xchg
xchg
mov
xchg
mov
sub
mov
dec
test
xchg
xor
jb
ret
push
mov
xor
inc
fs
dec
adc
mov
adc
mov
cwtl
fs
fisttps
repz
pop
sbb
lret
or
mov
ds
jmp
add
cltd
mov
pop
lea
outsl
mov
movb
cmpsb
xor
addr16
sub
adc
and
pop
xor
popa
dec
dec
jns
xchg
dec
ja
pop
repnz
int
aaa
das
jecxz
shlb
int3
movsb
imul
pop
and
ljmp
test
adc
loop
add
dec
loop
mov
inc
pop
and
fisubrs
add
mov
aaa
sti
xchg
lret
inc
pop
jbe
and
movsl
fstpt
mov
add
dec
das
lods
cmpsb
jbe
fldcw
pop
adc
ffree
mov
jg
and
test
push
push
mov
mov
testl
cmp
movsl
cld
aad
push
stos
mov
popf
and
xlat
dec
ja
std
sub
inc
pushf
inc
pop
cltd
push
pop
xor
leave
out
in
fwait
pop
xchg
psrlq
clc
das
clc
andl
movsb
ljmp
adc
sbb
push
in
push
cmp
in
add
lret
xchg
mov
xchg
shr
jle
test
pop
insl
xchg
in
psubsb
mov
xchg
add
testl
or
mov
mov
pop
dec
jbe
jge
mov
fs
cltd
jl
mull
stos
out
mov
movsb
pop
add
sub
cmp
xor
fiaddl
sbb
add
outsl
out
dec
test
add
push
ficompl
or
aaa
outsl
xchg
jae
repnz
insl
sahf
pop
jo
pop
out
inc
imul
pop
mov
mov
repnz
dec
dec
fwait
pop
scas
pop
mov
insl
imul
orb
fcmovbe
aam
push
or
jne
repz
popa
push
pop
call
fnstsw
xchg
das
movb
mov
pusha
shlb
lcall
mov
xchg
sub
push
cmp
jbe
xor
adc
sbb
shll
in
imul
pop
pop
sbb
test
inc
dec
mov
scas
cmp
jge
pop
fadds
adc
or
into
and
mov
jo
fs
adc
xor
sub
dec
cltd
lods
mov
sbb
sbb
xchg
fldcw
popa
xchg
push
mov
cld
sbb
pop
clc
and
sbb
and
xor
repz
push
jg
jo
shlb
mov
mov
scas
pop
movsl
repnz
cs
jle
js
mov
outsb
out
into
cmp
out
outsb
xchg
xchg
add
nop
insb
jno
adc
cmpsl
jnp
adc
xor
mov
aam
mov
xor
jbe
jge
and
cmpsb
jno
sub
fucomip
mov
pop
lcall
mov
data16
ror
and
jns
pusha
push
sar
popf
fsubs
sbb
mov
and
adc
stos
fstps
pop
pop
jle
or
dec
iret
ret
out
out
sti
mov
cmp
ret
mov
rorl
xchg
ljmp
idivl
jae
je
sub
loope
xchg
orb
lcall
mov
push
pop
inc
mov
in
in
xor
popf
bound
adc
lret
pop
mull
mov
lea
and
insl
lock
xchg
lret
cmpsb
movsb
iret
dec
stc
fsubs
add
pop
pop
lret
inc
dec
cmp
mulb
in
sbb
pop
xchg
std
add
mov
inc
dec
add
int
and
jae
mov
sahf
push
xlat
mov
fisubs
fldt
xchg
jmp
dec
pop
adc
adc
xor
cwtl
popf
push
pop
adc
sahf
rolb
adc
and
inc
sbb
dec
inc
xchg
sbb
testb
data16
xor
dec
adc
stos
in
call
cmp
mov
push
add
adc
scas
ret
or
cmp
push
pop
fimuls
pop
test
jae
push
or
lahf
push
mov
xchg
cwtl
xlat
repnz
daa
push
out
call
xchg
repz
adc
sbb
or
pusha
xchg
lret
loope
push
xchg
cmpsb
cmc
loope
sbbl
ljmp
shl
shrl
movsl
push
lds
test
arpl
mov
and
out
jne
cmp
cmp
pop
andb
mov
pop
not
mov
mov
push
fdivrs
mov
add
flds
pop
cmpb
add
aam
mov
movsl
ret
icebp
sti
lods
out
push
dec
cmpsb
xlat
inc
ficomps
jnp
fisttpl
iret
add
out
fsubs
popf
das
add
movb
pop
push
sbb
push
push
xchg
xchg
out
faddl
aad
fwait
mov
mov
adc
testl
stos
lcall
sbb
shld
xchg
arpl
inc
cmc
sbb
out
arpl
jo
sbb
mov
rorl
mov
dec
jg
leave
faddp
push
push
pop
ds
cmp
fsubs
or
mov
adc
clc
test
imul
lret
repz
in
dec
push
cmp
mov
scas
rcrl
adc
insl
scas
or
aad
insl
xchg
push
xchg
push
das
sub
iret
std
lds
lea
fisubl
add
mov
jnp
jb
xchg
mov
sub
xor
faddp
adc
mov
outsb
in
std
popf
jge
xchg
or
push
fbstp
cmpsb
push
in
stc
out
mov
mov
leave
bound
inc
pop
cltd
or
pusha
in
pop
js
out
jae
xchg
sbb
or
aam
sub
mov
xchg
iret
jge
push
aaa
add
sub
sbb
shll
ret
xchg
jecxz
inc
jo
adc
call
fnstsw
sbb
jns
xchg
sub
js
pop
and
mov
push
icebp
inc
subl
subb
and
dec
cmp
leave
mov
mov
xchg
mov
cmpsl
jns
xor
aam
adc
mov
out
pop
cmp
or
int3
adc
int3
test
pop
xor
loopne
iret
and
js
data16
pop
or
sub
sub
lcall
or
mov
mov
mov
das
test
out
xor
add
and
xchg
jmp
add
inc
movsl
push
or
rcll
mov
fildll
xchg
or
push
mov
or
xchg
mov
outsl
sub
sar
dec
sbb
scas
fcmovb
popa
mov
inc
sub
cmc
dec
lret
pop
adc
ret
or
or
or
jo
aam
mov
loopne
mov
jns
xor
push
mov
mov
loope
in
pop
mov
jp
pop
lea
add
fbstp
in
pop
pop
loop
push
mov
dec
add
dec
fcoml
sub
pushf
cwtl
lods
and
ret
cmpl
aad
pop
or
cmp
inc
jb
inc
mov
and
leave
scas
lcall
sbb
cmp
loopne
imul
adc
cltd
lret
daa
adc
repnz
rcl
pop
gs
clc
loop
mov
lds
lret
jo
ds
out
push
fs
inc
push
adc
xchg
sbb
daa
adc
adc
jmp
outsb
xor
leave
push
outsl
cmp
jmp
cs
js
arpl
add
dec
popf
ljmp
outsl
addr16
lret
xchg
loop
dec
pop
je
add
jno
outsb
shr
jmp
add
aas
lods
test
adc
push
jl
mov
sbbl
mov
push
cli
push
sub
flds
popf
test
movsb
jbe
hlt
clc
repnz
mov
incl
outsb
test
fdivrl
std
xchg
ja
xchg
divl
or
push
sbbl
xor
subb
stos
xchg
imul
xchg
xor
imul
jmp
shrl
clc
add
jno
inc
mov
inc
mov
xchg
jo
popa
clc
into
jb
inc
mov
fs
push
jb
rcrb
add
test
push
fidivl
mov
movsl
lea
mov
jnp
mov
das
shlb
pop
idivb
jns
int3
pop
ss
stc
out
leave
pop
adc
mov
jae
das
mov
jb
aad
jecxz
lds
sub
jbe
idivb
mov
daa
fsubl
cmp
sbbl
add
dec
push
dec
or
ss
pusha
clc
rorl
add
push
push
pop
divl
cs
xchg
cmp
sbb
repz
daa
ja
inc
xchg
scas
negl
pop
mov
rorl
adcl
in
mov
mov
and
aam
ficomps
idivl
jns
in
mov
jp
lea
mov
mov
in
ja
pop
sbb
jno
aas
loope
sbb
pop
xchg
jae
mov
test
inc
loop
xor
enter
add
out
xchg
push
sahf
mov
adc
push
sub
jne
lods
xchg
testl
or
pusha
push
mov
fwait
in
mov
mulb
fcomps
ret
mov
cmpsb
jns
loop
push
sti
testl
pop
call
and
add
push
jmp
mov
lcall
xchg
cmc
pop
jo
in
sbb
pop
sarb
push
leave
call
mov
sub
pop
insl
dec
dec
js
fistps
movsb
inc
test
lea
shll
jae
jp
push
aam
cmp
mov
fdivrs
jl
dec
scas
sub
cmp
out
xchg
jge
sub
test
mov
cld
sub
sub
pop
xor
insl
mov
or
inc
add
xchg
cmpl
ljmp
clc
fistps
jae
mov
xchg
mov
push
into
push
bound
mov
xor
lgs
sub
or
in
lret
int3
hlt
mov
testb
in
lcall
notb
and
jns
cltd
jp
sar
sbb
lods
jno
cmp
call
add
pop
mov
pop
inc
rolb
ret
jp
lea
lea
push
hlt
movsl
test
cmp
icebp
rorl
sub
jae
aad
sbb
js
jno
outsb
lret
and
js
pop
mov
pop
mov
out
jl
andl
shlb
pop
stc
mov
mov
xchg
outsl
ror
call
inc
mov
xor
in
sub
inc
testb
orl
out
insb
push
sbb
movl
mov
jns
sbb
mov
mov
xchg
mov
cmpsb
xor
xor
sahf
xchg
dec
inc
dec
lock
stos
adc
ret
movsb
out
aad
bnd
adc
insl
pusha
pop
xor
adc
sbb
mov
jle
fs
xor
adc
jb
sub
mov
add
sbb
es
scas
loope
dec
inc
andb
sub
pop
adcl
pop
or
and
outsl
fisttpll
insb
lods
sahf
notl
cmp
and
into
sbb
cmpsb
mov
int3
pop
jo
ficompl
jle
call
cmp
xchg
mov
adc
jne
inc
xchg
in
rcrl
mov
lcall
xchg
jno
jge
dec
js
jnp
stos
pushf
cmp
xchg
sahf
inc
cmc
out
mov
inc
push
rcrl
dec
mov
sub
leave
subb
xchg
ja
dec
addr16
jmp
mov
lahf
sarb
stos
pop
stos
notb
les
dec
ret
cmpsl
shr
mov
dec
sub
loope
jae
adc
mov
add
mov
dec
mov
mov
fmuls
pop
sbb
mov
mov
fdivl
scas
cmp
bnd
lock
sbb
push
pop
mov
notl
mov
mov
shrb
add
lock
cmp
outsb
xchg
adc
lea
pop
hlt
cli
xor
or
and
xlat
jnp
ds
cmp
imulb
push
cmp
lret
pop
add
sbb
xor
sbb
leave
js
lock
orb
push
hlt
inc
in
jne
mov
xor
daa
ljmp
in
int3
dec
lea
and
xchg
mov
clc
push
es
pusha
sbb
call
push
jb
xchg
jp
shl
fs
lock
mov
jae
shll
stc
push
or
cltd
movsb
xchg
je
dec
and
push
ja
pushf
cltd
pop
push
mov
test
aas
lcall
fbstp
and
imul
divl
or
adc
cmp
xchg
lock
xor
mov
adc
ja
cld
lds
xor
nop
test
dec
repnz
out
xor
cmp
ja
in
jge
adc
and
sahf
mov
je
ja
mov
mov
lahf
push
scas
addb
xchg
or
fbstp
cmp
dec
in
add
or
push
mov
mov
pop
pop
bound
mov
lcall
xor
fwait
push
mov
mov
dec
in
pusha
jb
imul
cltd
push
and
inc
pop
aad
jmp
repz
sub
sub
fidivl
fmuls
inc
mov
out
enter
pop
jl
xor
cld
fwait
mov
std
scas
fcoms
in
add
cmp
mov
mov
sbb
shl
orl
lods
push
cmp
mov
xchg
mov
jge
stos
sbb
pop
mov
int
push
add
pushf
mov
pop
rcrl
pop
jl
sahf
rolb
imul
test
lcall
mov
jecxz
rcl
and
in
lret
rcl
mov
cmp
adc
jbe
push
pop
pop
imul
lcall
adc
mov
xor
rorb
or
mov
sub
push
add
je
cmp
sti
mov
mov
mov
repnz
push
fwait
loopne
movsb
xor
jo
sub
mov
cmpsb
insl
call
iret
or
inc
mov
popf
aas
clc
pop
popa
fs
lds
pusha
imul
aam
push
insb
cmp
pushf
inc
arpl
add
push
jbe
adcb
sbb
or
das
xchg
sub
shl
and
fcoms
shl
or
ret
nop
and
mov
push
mov
sbb
sub
or
sub
ss
aad
paddw
jbe
adc
out
in
sbb
xchg
loop
test
mov
and
sub
dec
addr16
jg
lea
cmpsl
xlat
sub
call
sub
sub
mov
fs
lds
jno
cli
push
cmp
fidivl
sub
out
fwait
mov
pop
lods
adc
jp
push
push
xor
adc
mov
es
push
jle
jmp
out
xor
push
mov
inc
ljmp
in
and
dec
mov
movsb
xchg
xchg
dec
outsl
inc
jecxz
pushf
xor
dec
mov
inc
ja
and
dec
sub
test
jge
insb
sub
aas
cmp
sbb
sbb
ret
sbb
repz
test
rorb
jne
push
sarl
popa
into
jge
shrl
xor
in
xchg
in
arpl
shlb
test
xor
in
addr16
movb
jb
dec
stos
insl
pop
jg
dec
mov
out
inc
leave
mov
jne
mov
idivl
inc
add
adc
and
sahf
push
mov
sub
insl
jne
fidivrs
pop
fwait
mov
dec
mov
xchg
push
xor
jae
les
bound
mov
xor
pop
adc
fcmovu
es
out
int
fidivs
test
gs
and
lods
jge
cmpb
pop
add
rcll
leave
jns
iret
xchg
add
test
popa
cmpsl
push
mov
mov
fmul
sub
lret
ljmp
xchg
xchg
mov
fdivr
lods
lret
mov
fcompl
mov
cmp
xor
sub
push
xchg
fmull
cwtl
mov
jo
test
cmp
lahf
xchg
movsb
and
xchg
sbb
sbb
sub
push
mov
xchg
jg
rorl
rcll
mov
mov
fsubp
outsl
push
jne
aas
add
ficoml
es
push
cmpsl
idivl
ja
hlt
mov
icebp
mov
fwait
mov
addr16
mov
outsb
adc
mov
shl
mov
pop
add
mov
push
xlat
mov
ds
xlat
mov
pop
jno
test
ret
xchg
mov
loop
nop
out
nop
mov
mul
pop
daa
add
push
or
cmc
scas
mov
mov
adc
fsubrl
mov
push
rol
xor
push
pop
pop
xchg
jl
cmp
jb
sub
lods
mov
mov
adc
push
add
insl
or
jg
cmp
mov
mov
leave
iret
ljmp
push
lcall
mov
in
add
or
es
push
add
mov
test
aas
ds
adc
aas
mov
aad
xchg
xor
into
stc
and
pop
test
lods
out
push
add
xchg
fmull
cmc
inc
inc
test
andl
xor
inc
fiadds
jmp
es
int
fdivs
dec
cwtl
jo
sub
mov
xchg
adc
xor
add
cwtl
fimull
mov
jge
and
push
jo
out
jmp
fisubs
cmp
jg
cmp
outsl
aas
fwait
add
lods
and
scas
mov
pop
inc
sbb
cmp
xchg
mov
pusha
movb
fwait
and
mov
lock
push
leave
dec
dec
dec
sub
jns
jo
repz
pop
and
sbb
adc
test
imul
arpl
movsl
shr
nop
sbb
movsb
addr16
push
cs
adc
jmp
aam
fs
outsl
loop
xor
jmp
cmp
das
out
popa
add
push
xchg
outsl
ss
dec
mov
sub
nop
out
inc
outsl
dec
push
scas
ljmp
adc
std
rcl
sub
jb,pn
and
jb
fists
mov
or
fcomps
xor
and
lcall
loope
movsb
xor
mov
mov
lea
divb
and
and
call
ror
mov
add
adc
xor
jne
dec
jl
insb
movsl
mov
dec
sahf
push
add
cmpsl
jnp
jp
mov
dec
jl
fsubl
pop
iret
inc
pop
stc
adc
add
inc
sarb
sarb
add
lods
pop
fistps
dec
ja
out
movsl
add
in
int3
mov
cli
in
testb
aaa
pop
addb
mov
mov
xor
insl
xchg
pop
aad
cmp
or
jle
and
xchg
mov
dec
push
xchg
sub
les
adc
inc
scas
lcall
scas
out
sub
lahf
js
adcb
jnp
lret
cmpsb
xor
sbb
pop
mov
xor
hlt
test
cmp
lock
ret
out
lahf
fists
pop
xor
xchg
sub
movsb
xor
jg
int3
push
adc
mov
jo
int3
xchg
in
sti
fidivrl
mov
jo
and
fwait
mov
aam
mov
fimull
jns
mov
cmp
xlat
add
inc
cmpsl
outsb
sarb
cmp
ud1
sbb
cmc
jns
push
ss
fldcw
cmp
or
pop
movsb
pushw
lret
mov
jecxz
jbe
std
push
aas
sub
in
dec
aas
cltd
lds
mov
or
leave
sub
jecxz
mov
dec
add
sub
xor
pop
icebp
xor
stc
xor
mov
mov
out
pop
pop
shrl
fistl
call
fisubrl
stc
cmp
test
dec
in
xchg
xchg
or
in
adc
loopne
mov
add
ret
es
sbb
into
mov
jg
dec
fwait
in
clc
and
lret
stc
pop
push
aam
sub
pop
add
popa
cltd
adc
je
inc
mov
shlb
jo
insl
sbb
dec
add
inc
mov
sub
inc
pop
push
das
xchg
test
push
cmp
sub
mov
test
dec
mov
mov
fnstsw
dec
dec
movsb
clc
jmp
pop
cmc
inc
lea
in
cmp
fs
push
adc
aam
mov
iret
rcrb
xchg
pusha
sub
cli
rcll
iret
lret
stc
mov
pop
ds
mov
sub
jmp
into
ja
ftst
xchg
arpl
sarb
pop
or
add
bound
jne
pushf
call
push
jg
or
xor
hlt
push
das
test
push
push
scas
sbb
xchg
mov
ficompl
lds
cmpsb
fstl
fists
jnp
dec
push
jae
ret
push
xchg
inc
push
inc
es
jns
loope
adc
scas
ds
outsb
jmp
mov
sbb
imul
mov
inc
ficoml
push
mov
test
and
popl
adcb
mov
push
mov
or
insl
and
xchg
and
jecxz
popf
jne
jne
mov
sahf
aad
xchg
imul
in
jmp
xchg
addr16
insb
mov
rolb
pop
sub
imull
sahf
cmp
stc
les
bound
mov
int3
cld
pop
lock
cmpb
mov
fs
sbb
leave
add
jmp
mov
pop
and
pop
loope
inc
loop
cmp
mov
ss
cmc
je
test
or
adc
in
ror
push
inc
jnp
push
mov
jmp
jmp
cld
mov
push
sub
fistps
aaa
xchg
and
or
ja
cmc
xor
fadd
add
enter
xor
outsb
push
or
xor
xor
aad
rolb
and
mov
mov
inc
scas
inc
push
sub
cmp
cmc
mov
add
inc
movsb
sbb
fsubs
inc
sbb
mov
mov
rcrb
xor
iret
popa
cmp
xlat
out
iret
mov
mov
lea
test
js
jns
gs
mov
sbb
jo
mov
push
sbb
xchg
sub
mov
xchg
ljmp
jp
pop
hlt
pop
lds
jo
or
sbb
fldl
pop
adc
movsl
lcall
out
mov
add
dec
bnd
lods
test
add
push
popa
divb
mov
inc
push
inc
jb
lret
xor
jp
mov
mov
mov
movsb
fists
lcall
cs
leave
into
inc
pop
push
dec
xor
cmc
rcr
xorb
mov
adc
mov
xchg
mov
fs
addr16
xchg
cmpl
xchg
fcoms
cmc
fildl
push
xor
and
mov
adc
mov
cmc
inc
mov
cmp
inc
enter
fadds
lea
mov
mov
pusha
push
cmpsb
lds
dec
sbb
add
push
adc
lret
dec
jmp
adc
les
decb
cmp
mov
in
loop
test
cs
fcmovnbe
xchg
push
clc
sub
push
aad
cltd
cmp
call
insl
xchg
jecxz
daa
setb
pop
inc
rorl
inc
fstpt
imul
cld
pop
pop
xor
pop
in
mov
mov
ja
shrb
lcall
incb
dec
mov
pushf
sbb
pop
lds
mov
mov
test
gs
mov
js
call
imul
add
mov
pop
popf
cwtl
mov
push
adc
movsb
pop
clc
mov
leave
xor
push
and
sbb
sbb
imul
and
jg
imul
dec
repz
scas
lcall
jecxz
add
orl
mov
das
mov
adc
cli
xchg
pushf
inc
pop
lods
push
enter
push
scas
jl
pushf
fadds
idiv
adc
mov
pop
fistl
enter
jg
push
lock
les
dec
faddl
scas
dec
pop
jmp
loop
xor
pop
or
mov
adc
mov
lahf
cmp
mov
mov
shlb
mov
call
lcall
mov
lds
mov
jmp
adc
shlb
lods
lds
stc
xor
lods
sbb
sbb
lret
xor
sub
lret
arpl
iret
ror
cmp
sbb
inc
mov
insb
cs
cmp
adc
lahf
popa
enter
fdivrl
pop
pop
xor
pop
mov
xchg
ja
mov
or
ljmp
enter
sub
in
out
sub
in
add
inc
jg
mov
subb
out
lea
int
les
add
or
jbe
mov
xlat
xor
imul
mov
sub
sbb
sub
std
iret
loop
test
call
and
mov
cmp
sbb
sbb
jnp
dec
mov
mov
cmc
inc
imul
addl
int
enter
imul
dec
sbb
inc
out
sbb
in
outsb
fwait
sbb
sub
push
iret
cmpsb
mov
sbb
test
into
pop
cmp
add
insb
in
lea
arpl
rcr
fidivrl
ss
mov
enter
push
loope
jecxz
push
jbe
lods
add
in
cmp
and
add
test
or
outsl
mov
cmc
cmpsb
inc
std
xchg
les
push
daa
push
pop
jmp
or
dec
cmpsb
aam
xlat
subb
sub
pop
push
add
cmp
dec
add
adc
xor
out
popa
cmp
push
push
fs
add
sub
into
in
lods
out
mov
add
rcrb
xchg
cmp
out
jl
sbb
dec
sbbb
movsl
repnz
sub
stc
nop
inc
data16
lcall
cs
dec
and
icebp
mov
xchg
stos
cmp
or
dec
push
cmp
es
iret
in
fabs
mov
fisubs
fildl
cltd
pop
lret
xchg
ljmp
pop
pop
inc
mov
add
shlb
push
in
in
cmp
lcall
cld
inc
push
lcall
pushf
inc
cmpsl
mov
and
push
or
jnp
and
cmpsb
outsb
or
roll
mov
mov
and
jae
sti
fnstcw
repnz
lock
outsb
rcrl
push
jp
fbstp
push
mov
test
jne
pop
sub
pop
test
mov
sarb
sbbl
scas
push
jbe
lods
cmp
mov
dec
rclb
repnz
jb
pop
imul
adc
xchg
dec
or
dec
test
sbb
into
lcall
std
mov
popf
mov
lods
scas
mov
inc
mov
inc
or
dec
ret
call
pop
outsb
lods
mov
lret
cmpsl
add
std
outsb
sbb
mov
movsl
lea
pop
daa
pop
rcrl
and
add
inc
roll
sub
push
sub
xchg
xchg
cmp
jl
cmp
add
movsl
dec
lcall
or
xchg
push
add
lods
inc
stos
out
leave
clc
mov
jp
mov
mov
adc
and
sbb
lea
or
aas
sar
dec
js
data16
clc
sub
mov
adc
sarl
lods
xchg
mov
jnp
mov
aam
mov
mov
call
les
cmpsl
or
lcall
aad
mov
pop
je
stos
popf
popa
dec
dec
inc
nop
shrb
stos
in
lahf
out
sbb
in
sbb
repnz
loope
adc
dec
adc
dec
rclb
xchg
lret
loop
in
call
sbb
mov
mov
sub
xor
jl
lret
fcmovnu
lods
rcrl
jecxz
inc
pop
pop
xlat
mov
loope
aas
insl
in
mov
add
jbe
mov
xor
ljmp
adc
pop
aad
fstp
pop
setne
sbb
inc
and
lea
mov
bound
dec
daa
pop
rcrl
jge
and
mov
test
or
jp
adcl
out
repnz
push
icebp
adc
dec
pop
int3
imul
lret
sbb
fisttpll
popa
rorl
insb
popa
add
fwait
test
mov
outsl
int3
fwait
enter
sbb
movsb
in
lods
arpl
ja
mov
stc
sbb
cmp
subb
mov
mov
jns
inc
adc
xlat
dec
cmp
pop
shr
out
addr16
int
aaa
cmpsl
jmp
hlt
inc
xor
xor
pop
faddl
fisubl
push
jge
cmp
and
mov
inc
or
sbb
fsubr
arpl
js
cmc
movsb
outsl
sub
lret
and
mov
mov
and
push
xchg
mov
ret
jo
insb
mov
and
idivb
mov
aaa
xlat
ds
mov
rcrl
rcrb
in
push
inc
pop
push
mov
sub
aas
in
pop
mov
cmpl
mov
inc
leave
mov
mov
fimuls
hlt
sub
xchg
mov
xchg
mov
mov
push
ret
insl
stos
sahf
mov
inc
or
sti
shr
ret
popf
ljmp
dec
jbe
nop
and
fcomi
mov
dec
imul
popa
popl
sub
sbb
adc
rolb
mov
pop
pop
xor
xchg
test
inc
les
mov
push
imul
data16
add
mov
imul
mov
jle
in
repnz
fcompl
xchg
es
stc
and
sti
adc
push
push
aas
add
gs
or
pop
jne
xchg
and
mul
scas
aad
cwtl
jno
jg
push
jl
pop
lock
mov
sti
xchg
jmp
pusha
xor
mov
xchg
push
lods
inc
inc
in
mov
sbb
push
mov
sub
cmp
das
mov
repz
shlb
pushf
rol
divl
ja
mov
cltd
push
scas
mov
repz
jo
sbb
mov
pushf
jae
push
sbb
xchg
cmc
cmp
bound
adc
or
push
jge
nop
jbe
and
cltd
mov
lods
push
jns
into
sub
rclb
js
sbb
in
pop
and
cli
in
fsts
sub
andb
dec
adc
aaa
cli
jno
dec
jle
inc
jbe
addr16
lret
push
push
mov
mov
sub
pop
pop
adc
cmp
jge
inc
fnstcw
insb
pusha
or
mov
push
stos
scas
adc
pop
jb
js
sbb
repnz
push
test
and
xchg
ds
xchg
lcall
jp
xor
ljmp
lcall
and
push
dec
dec
push
mov
test
sub
outsl
or
popa
fiadds
cld
mov
dec
lea
mov
cmp
jmp
pop
icebp
jns
loopne
aad
xor
or
dec
or
in
mov
pop
lret
mov
pop
es
pusha
ror
add
lods
lahf
push
xchg
pop
add
negl
shll
ljmp
xchg
push
jge
or
daa
pop
push
test
xor
jecxz
jmp
in
and
push
adc
cmp
inc
sub
add
call
stc
jnp
jbe
xchg
adc
adc
lods
insb
inc
out
pop
inc
jno
cmp
jns
and
aad
lods
pop
lret
iret
and
dec
sub
outsb
add
mov
loop
mov
mov
lret
jmp
xchg
lds
pop
dec
negb
mov
daa
sub
jg
or
push
movsb
out
or
nop
fistps
mov
or
mov
dec
mov
mov
pop
add
pop
insl
cmc
push
scas
sbb
jbe
dec
xor
push
mov
icebp
or
insb
push
fbld
aam
jecxz
scas
js
lods
and
pop
in
out
cwtl
mov
lods
test
outsb
add
or
aad
mov
xor
dec
dec
call
data16
pop
aas
cmpsb
bnd
iret
and
mov
cwtl
xchg
out
mov
dec
shrl
jmp
sub
test
dec
scas
les
push
add
push
loop
and
cmp
bound
std
pusha
rcl
mov
out
stos
in
insl
sahf
mov
cmpsb
cwtl
pop
das
stos
shrb
or
mov
faddl
fnsave
fwait
sbb
cmpsb
popf
inc
out
rcll
and
insb
test
inc
nop
jl
fwait
cmc
out
xlat
cmc
jmp
sti
call
data16
mov
sbb
adc
repnz
cmp
pop
fmull
push
pusha
adc
and
sub
cmp
cs
je
rcrb
test
lock
incb
stc
in
pop
xor
add
inc
sbb
xlat
pushf
jno
and
inc
insl
clc
lods
xor
data16
mov
outsb
add
fldenv
and
insb
pop
push
push
out
rcll
bound
pop
push
std
in
icebp
xor
int3
ja
in
mov
in
cmpsl
push
ss
lcall
dec
jmp
xchg
sti
jg
sti
repz
mov
and
jbe
push
ds
cmp
subl
sbb
xor
fs
or
mov
add
sub
sbb
cld
sbb
ds
xor
pop
xchg
hlt
imul
rcl
inc
xor
jo
dec
ds
pop
jno
mov
push
lock
ret
push
sbbl
shll
mov
and
aas
adc
dec
lret
dec
outsl
xchg
in
sub
inc
jecxz
dec
cmc
inc
xor
hlt
push
adc
push
lret
imul
jns
sub
cltd
inc
adc
mov
call
mov
dec
repnz
popa
or
scas
aam
movsl
loope
imul
jecxz
cli
sbb
cld
dec
cmpsb
aaa
push
js
lea
cmp
fildll
incl
adc
pop
xchg
xor
test
inc
hlt
loop
jmp
test
loopne
ficoms
and
lods
lahf
divl
mov
lds
xchg
adc
mov
loope
push
subb
adc
sbb
pop
mov
cmc
cld
lds
jno
add
push
xchg
jg
lods
loope
xor
xor
add
cmpsl
sub
imul
xchg
mov
sbb
lcall
sbb
adc
out
call
in
test
cs
cmp
fst
cmpsb
add
jg
imulb
xlat
lea
repz
jl
xor
or
jp
dec
push
dec
cmp
pop
push
shll
add
adcb
mov
xchg
and
pop
add
int
sub
or
mov
arpl
adc
mov
push
loop
mov
inc
mov
shlb
bound
dec
dec
sub
outsl
add
test
lret
inc
cmovb
pop
inc
add
cmpsb
pop
pop
leave
push
aam
out
aaa
jle
sub
sub
jle
inc
inc
jne
fs
rcl
adc
movsb
xor
aam
xor
fsts
ja
arpl
sub
sub
lock
lock
in
stc
popa
ret
dec
leave
nop
jge
pop
add
cmp
imul
and
andb
idivb
sub
jl
sbb
cmp
push
cmp
jle
imul
into
out
gs
push
jmp
sub
sahf
pushf
cs
push
testl
cmpsb
sub
lret
jp
sahf
lods
sub
sub
test
out
xchg
adc
adc
sub
fdivs
test
adc
push
push
lret
adc
adc
call
fyl2xp1
jnp
or
loop
inc
nop
pop
in
cmpsb
outsl
aad
add
lds
mov
xlat
in
cmp
cltd
loop
ret
and
sub
lahf
arpl
jmp
flds
hlt
cld
cmp
lret
pop
push
and
xorb
pop
jnp
jl
push
inc
adc
imul
mov
xchg
scas
or
inc
jae
lock
in
imulb
pop
sbb
lret
jle
ds
jg
les
push
ss
je
fidivrs
mov
mov
jmp
sub
jecxz
xchg
push
ds
fwait
das
lods
xchg
inc
push
mov
bound
and
dec
xor
negl
lods
in
dec
aas
inc
jbe
and
popa
gs
or
aaa
imul
test
outsb
es
inc
push
test
mov
push
pop
rorb
fnsave
xchg
cld
cli
push
sbb
inc
mov
or
and
xchg
insb
jmp
cmp
sub
in
fnstenv
mov
loope
out
fsubl
je
cli
xchg
sbb
push
lret
sti
xor
sbb
sbb
icebp
ja
adc
dec
outsl
xchg
lret
xor
jmp
or
subb
lret
popf
gs
jge
rorb
aas
xchg
ja
cli
mov
push
adc
jl
add
push
jbe
sub
jbe
mov
push
mov
bound
imul
call
or
jne
js
pop
or
push
adcl
xor
sti
insl
xorb
xchg
sahf
or
xchg
lods
xor
mov
aas
adc
aaa
mov
out
out
mov
or
jge
sbb
fs
add
mov
andl
mov
stos
cmp
aam
pushf
in
xchg
mov
int3
out
aaa
push
fldt
jmp
cltd
imul
arpl
xchg
dec
flds
inc
loopne
jmp
in
repnz
and
nop
stc
call
sahf
imul
aam
xchg
dec
andb
jecxz
iret
int3
cwtl
fiadds
adc
inc
pop
mov
sti
jl
aas
dec
jg
outsb
push
xor
lds
into
in
mov
inc
fsubr
sbb
sbb
add
and
sub
les
fs
lret
xchg
shl
sbb
rcr
jg
mov
ja
cmp
pushf
fnstcw
cmp
mov
mov
andb
sarb
jmp
pop
pop
js
fcomip
and
xchg
sub
arpl
jg
inc
lcall
pop
cmp
mov
mov
adc
mov
lods
sbb
mov
jmp
mov
andl
cmp
add
pop
les
out
outsb
movsb
sti
mov
jle
xchg
pop
cmpsl
mov
xchg
jno
inc
cld
jg
std
push
mov
xchg
mov
mov
ds
loop
mov
sub
adc
cmp
faddl
adc
mov
lock
mov
lret
push
inc
dec
sbb
sarl
jo
out
mul
mov
addl
shlb
test
xchg
mov
lods
push
mov
in
movsl
cmp
fwait
push
into
aam
cld
inc
mov
repz
lcall
and
and
cld
pop
pop
cmpsb
xchg
shlb
fiaddl
nop
lods
pusha
push
pop
std
mov
pushl
leave
bound
loopne
xchg
fists
nop
fcom
add
sub
and
imul
and
repz
test
shlb
mov
daa
es
cmc
fwait
or
jmp
lea
pop
leave
fdivrl
loopne
in
sti
inc
ret
out
in
push
cmc
mov
ds
negl
and
es
mov
je
popa
jmp
add
outsl
mov
pop
outsl
mov
and
addr16
cmpsb
and
pop
es
mov
mov
mov
cwtl
xor
lcall
sbb
rcrl
in
lret
das
add
fsubl
xor
into
mov
push
xchg
in
pushf
in
and
iret
add
enter
mov
idiv
mov
and
dec
sahf
cmp
jns
les
inc
push
mov
push
mov
jp
xor
sub
push
mov
cmp
mov
or
inc
add
lods
rcr
jae
mov
add
xchg
pop
mov
into
sub
cmpb
jg
pop
loope
xor
add
je
insb
ret
pop
add
jb
and
stos
and
pushf
inc
mov
leave
and
jns
inc
xchg
lcall
pop
lcall
lcall
inc
cmpsl
mov
pop
xor
sbb
add
cld
add
pushf
out
xorb
iret
mov
pop
subl
jl
fnsave
xchg
repnz
xchg
jne
negb
xchg
xlat
mov
popf
mov
stos
xchg
sbb
mov
es
pushw
jae
add
jb
in
xor
pop
mov
pop
xlat
dec
sub
pmuludq
sub
mov
ljmp
push
xor
insb
push
xchg
inc
subb
dec
cli
subb
sbb
mov
push
pop
lock
ds
pop
jo
loopne
ljmp
pop
inc
inc
ljmp
jb
and
mov
aas
lea
pushf
data16
pop
popf
push
sub
inc
mov
int
inc
mov
out
fsts
loopne
inc
sahf
out
subb
sbb
daa
fnstcw
pop
jmp
jp
cmc
cmp
in
and
or
repz
sub
ja
call
inc
push
jmp
std
popa
shrl
mov
mov
push
sub
out
add
dec
out
push
mov
sbb
push
push
lea
xor
jecxz
ljmp
jg
xor
jb
stc
movsl
jge
pop
loope
pcmpgtb
mov
sbb
add
fadd
leave
sub
mov
js
repnz
fs
dec
lcall
mov
lds
jg
pop
out
jne
inc
adc
push
loope
mov
xor
subb
lock
jl
add
xchg
sahf
xchg
cmp
push
push
xchg
mov
mov
aam
jmp
call
lcall
sbb
test
push
cmc
cmpl
cmp
addb
fmul
pop
cmp
ljmp
scas
mov
rcrl
mov
daa
loope
pop
pop
rclb
insb
jge
pop
mov
mov
dec
in
shlb
jo
movsb
out
arpl
in
push
dec
sahf
push
lcall
sbb
ss
pop
sbb
cmp
mov
clc
or
fucompp
mov
icebp
pop
mov
inc
adc
jae
ret
leave
pop
cli
hlt
lods
ficoml
das
mov
pop
pushf
cmpsb
imul
xor
inc
setbe
inc
add
stos
fisubl
daa
inc
dec
pushf
lea
lcall
cs
jle
inc
repnz
mov
sub
cmp
js
movsb
lret
cmp
dec
mov
scas
imul
mov
push
fdivrs
in
lcall
cmpsb
js
inc
repnz
mov
mov
fdiv
fwait
cmp
inc
sbb
mov
xlat
pop
ds
mov
imul
fwait
int
inc
adc
iret
loope
movsb
cld
lds
scas
int
insb
nop
icebp
pop
nop
dec
lahf
push
pop
and
xor
adc
add
adcl
mov
popa
nop
lock
rcrb
xor
push
dec
pop
cmp
idivb
inc
pop
stos
push
cmp
ret
jg
jmp
or
pop
xchg
inc
sbb
pop
and
ja
es
xor
sbb
insl
divl
adc
jb
inc
movsb
shld
xor
fwait
adc
nop
xor
add
arpl
sbb
outsb
sub
ds
push
sbb
sub
jo
xchg
fucomi
into
ret
xor
and
push
call
ret
das
sbb
pop
stos
fs
jle
sub
fnstsw
xchg
or
mov
push
andb
rolb
addr16
xor
mov
roll
daa
mov
rolb
pushf
add
ror
mov
push
add
das
pop
mov
jne
push
pushf
pop
test
xchg
shrb
inc
rcrb
push
push
xor
addb
fsubr
xchg
dec
mov
mov
rclb
mov
push
out
and
mov
push
pop
or
xchg
inc
jb
cmp
adc
push
inc
push
xchg
das
jne
cmp
nop
repz
dec
shll
adc
lcall
and
push
das
and
xchg
xor
push
loopne
cmp
xchg
jne
or
jl
mov
pop
push
icebp
aam
popl
scas
push
pop
pusha
add
pop
into
and
stos
jp
or
pushw
xor
add
jle
pop
pop
pusha
mov
test
punpckhbw
popf
cs
inc
hlt
fnsave
in
insb
add
out
shr
jbe
cs
ja
ljmp
mov
addr16
test
mov
sub
pop
lret
mov
dec
mov
xor
movsl
lcall
jle
jl
mov
dec
xchg
jecxz
pushf
or
or
push
into
pop
in
das
mov
dec
sub
lcall
mov
sbb
push
js
test
pop
add
add
mov
pop
lcall
lret
cmp
je
inc
incl
inc
mov
push
mov
gs
mov
cld
js
nop
inc
jg
aad
xorl
pop
xor
cmp
loopne
cmpsb
cltd
sub
dec
mov
mov
test
inc
and
fldcw
mov
test
jb
mov
jl
lds
fs
pop
rclb
fisttps
int
jl
mov
inc
pop
add
sbb
push
mov
pop
fsub
repz
into
push
test
mov
adc
mov
in
outsb
dec
test
ret
inc
addr16
dec
in
andl
push
inc
jg
mov
sub
cmp
int
test
cmp
mov
sbb
fists
jno
lods
cli
enter
lds
push
lret
cld
int3
loope
mov
in
dec
cld
inc
ljmp
loope
cmp
mulb
cmp
cmp
repnz
push
push
sub
inc
mov
inc
xchg
cmp
mov
add
out
rorl
out
repz
mov
mov
shll
not
adc
mov
rcrb
mov
ljmp
inc
pop
sbb
hlt
pushf
mov
push
addb
and
mov
dec
rcrl
divb
or
mov
cs
fildll
imul
ret
mov
or
pop
arpl
and
dec
fwait
ja
ss
sub
sbb
mov
push
cmp
mov
xor
push
push
mov
stos
mov
sub
je
shll
jnp
arpl
cltd
stos
mov
mov
dec
sub
xchg
insb
dec
lds
bnd
push
jno
out
adc
imul
adc
cmc
jecxz
and
or
and
dec
xchg
jne
xchg
lds
push
mov
push
mov
hlt
in
mov
add
mov
push
jnp
lea
adc
sbb
lods
or
add
cmp
ret
daa
mov
jge
daa
dec
stc
adc
lea
clc
pop
cmpsl
movsb
mov
xor
hlt
inc
arpl
lahf
mov
xor
dec
movsl
adc
stos
lock
xchg
sub
dec
mov
rorb
or
mov
mov
mov
mov
shrb
pop
mov
sti
mov
and
ja
xor
notb
call
cmp
cmpsl
or
and
or
mov
pop
jl
sbb
pop
xlat
adcb
ljmp
adc
movsl
xor
bound
and
int
xor
cmpsb
ret
scas
mov
test
aaa
imul
sbb
mov
lods
in
mov
out
xchg
mov
cmc
add
ja
xchg
lea
xlat
and
popl
gs
jbe
and
push
lock
xorl
xchg
xor
ss
add
dec
aaa
mov
sarb
ss
iret
pop
lds
fcomps
lret
jle
dec
lea
xor
int3
in
push
push
sbb
jp
imul
pop
dec
sbb
loopne
sbb
mov
cmp
sub
adc
in
jg
popf
pop
mov
inc
push
inc
inc
push
ss
or
imul
mov
xor
adc
je
movsb
sub
aam
xchg
fcmovnb
mov
push
cltd
pmulhuw
xor
cs
mov
mov
mov
jns
add
movsl
lock
cmp
fld
inc
ja
cmpsl
mov
aas
adc
test
push
int3
pop
out
in
sarb
sub
fwait
ljmp
cmp
rorl
jmp
js
pop
cmp
mov
inc
ds
test
xlat
ret
aad
addr16
pop
inc
imul
imul
out
cld
pop
cmp
mov
push
enter
in
push
adc
lret
mov
leave
cmpsl
push
pop
cld
loop
dec
ja
ficomps
jmp
out
bnd
mov
popf
imul
fidivrs
mov
jp
js
xor
add
mov
test
shr
xlat
mov
ret
jmp
call
aaa
dec
pop
inc
fcmovnb
mov
popa
loope
inc
xchg
movsl
jbe
sub
test
insb
test
enter
push
sbb
jg
cmp
pop
test
sbb
out
push
push
aam
not
xor
lea
dec
fwait
adc
xor
lds
cmp
gs
cmp
ja
mov
jmp
or
pop
fnsave
inc
push
push
addr16
cwtl
inc
lea
repz
inc
aas
fs
sbb
nop
sbb
movsb
cli
sub
fs
jno
inc
sahf
mov
adc
sub
div
jp
popf
stc
pusha
fcmove
stos
mov
scas
lods
scas
adc
pop
sbbb
inc
jecxz
push
pop
add
aas
or
in
fwait
arpl
das
adc
and
lods
sub
mov
pusha
out
in
mov
test
push
jbe
test
decb
adcl
clc
and
push
icebp
int
inc
sbb
xor
and
je
push
movsbl
in
test
test
xchg
test
mov
xchg
cmpsl
je
sti
ret
rcl
int3
jecxz
neg
xor
pop
mov
cli
lock
movsb
test
mov
cmp
cmpb
clc
imul
es
fstps
xor
stc
aad
pop
movsl
pop
call
cmp
or
jmp
mov
add
add
sub
scas
nop
or
adc
ljmp
jbe
jne
mov
enter
xor
shr
cmp
mov
push
into
mov
aas
mov
xor
xlat
push
jns
push
push
loopne
or
cld
mov
inc
scas
cmp
ljmp
ret
inc
push
aas
es
loopne
lret
loope
lcall
mov
mov
movsl
sbb
jo
cmp
inc
pop
xor
pushf
pop
fstps
aas
dec
xchg
xchg
mov
sbb
testb
mov
cli
aad
out
mov
adc
stc
xchg
mov
mov
pusha
aas
jge
sbb
in
xor
fadds
mov
and
je
sbb
and
movsl
int3
sbb
sbb
pop
dec
negl
ljmp
aad
cmp
in
pop
imul
subl
jnp
mov
adc
inc
cltd
sahf
pop
mov
into
mov
and
jo
aaa
or
mov
lret
jmp
insl
mov
inc
inc
and
scas
and
lret
add
mov
cmp
cmpsl
sahf
hlt
fsubrs
cwtl
pusha
mov
push
shll
xlat
gs
add
gs
push
jp
mov
mov
sub
push
mov
ret
lret
sub
std
stc
mov
jecxz
jecxz
clc
pushf
fwait
sbb
rcrl
lds
sar
pop
jg
push
add
nop
movsb
xchg
add
outsl
test
xchg
fimuls
out
test
mov
mov
lcall
push
mov
jl
dec
les
roll
pop
xchg
std
pop
shlb
pop
dec
mov
cli
mov
xor
ljmp
mov
rclb
dec
imul
dec
push
fdivs
mov
ja
inc
xlat
dec
push
push
in
xor
cli
in
xchg
out
xchg
cli
addl
mov
push
movb
xlat
sbb
pop
push
ret
push
fmuls
fcompl
cmp
shrb
jnp
mov
aas
into
jb
es
mov
jg
out
jno
push
mov
fnsave
addr16
jg
sarl
add
mov
bound
shll
add
pop
cmpl
fcom
fldt
cli
out
sub
jno
push
push
hlt
lods
lcall
push
mov
and
pop
lock
or
and
inc
cmp
push
and
add
loope
imul
inc
mov
add
out
add
dec
lcall
jecxz
stos
test
in
dec
loopne
aas
cmp
xor
mov
or
in
sub
shrl
cltd
inc
sbb
in
xchg
mov
mov
add
jno
das
jne
pop
ss
cs
out
xor
ss
cmp
xchg
jno
xor
stos
test
fxch
lods
cmp
adc
dec
mov
pop
xchg
neg
aad
pop
fstpt
clc
mov
cmp
cmc
or
test
sbb
jg
adc
dec
imul
pop
lds
sub
loop
pop
out
xor
fs
jo
aad
insl
iret
jbe
mov
mov
or
mov
scas
and
divl
xchg
push
into
mov
mov
jne
aaa
fsubs
mov
js
lods
pushf
out
cmp
dec
lcall
cmpb
bound
pop
mov
test
push
mov
scas
sti
mov
jmp
push
push
pop
loope
fs
dec
add
pop
cltd
add
xchg
ds
es
pop
out
bound
and
lods
sbb
xchg
add
lods
push
loopne
iret
sbb
sbbb
out
and
inc
mov
pusha
jmp
push
or
sbb
aam
sahf
mov
push
sbb
sti
dec
outsl
jae
push
push
fdivrl
cmp
scas
dec
cmp
sub
stos
dec
cmp
test
loop
fnstcw
sbb
push
dec
mov
femms
sub
ds
roll
mov
pop
enter
xchg
repnz
mov
cs
ret
ds
enter
cwtl
sub
pop
cmpl
adc
pop
jb
mov
xor
outsb
or
cmp
or
int3
adc
mov
xchg
dec
mov
push
addl
mov
ljmp
je
in
scas
mov
jae
das
jp
sahf
mov
push
fsubrl
loop
ds
jecxz
mov
jge
dec
js
push
mov
lock
mov
or
push
push
ret
testb
out
push
sti
outsb
pusha
leave
xchg
xchg
cmp
lahf
mov
dec
add
mov
das
pop
xchg
fsqrt
outsb
mov
cmp
or
out
push
mov
cmpsb
sbb
or
push
fsts
enter
jp
xor
ds
pop
xor
and
push
pop
sub
lock
jl
and
fisubrl
scas
icebp
mov
lret
outsb
mov
xchg
push
aam
and
cmp
dec
pop
sbb
addl
inc
loop
fucomi
movsl
jge
idiv
test
loop
jge
or
xorb
mov
pusha
sub
jno
cltd
outsb
xchg
pop
loope
test
cmp
enter
gs
ret
and
cs
xchg
scas
int
jmp
lea
pop
insl
ljmp
arpl
clc
in
insb
shll
aas
arpl
sbb
mov
mov
repnz
into
adc
pop
out
pop
repz
div
and
mov
lds
mov
mov
add
addb
jno
test
sbb
dec
addr16
sbb
cmp
push
push
push
jle
shlb
jp
xchg
mov
cmpsb
sbb
adc
loop
mov
popa
call
arpl
cmp
imul
outsl
and
dec
xor
inc
fs
and
pop
pop
mov
inc
mov
pop
test
mov
pop
add
inc
cltd
nop
xchg
add
mov
inc
ret
sub
enter
mov
fisttpl
call
mov
jp
sbb
and
sbb
mov
dec
out
mov
out
std
mov
inc
enter
sbbb
stos
into
push
dec
jne
and
mov
xchg
leave
sbb
push
lds
add
in
push
mov
jne
lds
or
cmp
or
repz
aas
jmp
xor
mov
aam
int3
adc
into
movsb
cmc
mov
repz
add
imul
jae
push
sub
lods
dec
cmc
inc
scas
sbb
jge
decb
aas
loopne
in
sbb
lcall
pop
sub
test
inc
pop
sbb
fisubl
iret
fsubl
sahf
ret
xchg
clc
inc
clc
in
xchg
and
cmpsb
out
pop
sahf
mov
xor
add
fidivrl
and
pop
dec
mov
lods
fistpll
leave
pop
cwtl
sub
push
data16
jns
popa
test
dec
in
lods
push
mov
cmc
in
lock
repnz
imul
cmpsl
mov
jno
repz
mov
jb
sub
push
out
xchg
repnz
cmpsb
mov
xor
jmp
out
ss
dec
das
adc
or
adc
push
pop
idivl
hlt
int
shll
into
mov
movsb
xchg
popf
cs
mov
and
cmp
push
jmp
pop
imul
imul
or
sbb
pop
out
lea
jle
mov
inc
test
mov
ja
enter
xor
and
adc
cmp
sbb
inc
into
cmp
jno
cmpsl
cmp
stos
sub
ss
adc
stos
sbb
arpl
scas
or
jnp
push
and
sbb
dec
ret
add
shr
mov
xor
fwait
pop
loop
std
fsub
and
leave
xor
push
jmp
sub
or
imull
ds
pop
inc
xor
dec
push
ja
in
dec
repz
in
repz
cwtd
frstor
clc
add
stos
adc
push
imul
je
sar
stos
sbb
popf
cs
fstpt
jmp
push
js
lret
sub
lods
gs
push
scas
sub
mov
in
decl
fimull
push
or
or
adc
pusha
xlat
pusha
or
sub
fchs
sub
xchg
cmp
sbb
insl
jb
mov
xchg
fnsave
pop
jne
stc
or
or
je
jmp
add
push
insl
icebp
dec
jle
push
int3
dec
push
mov
or
stos
paddq
push
ds
out
jbe
and
out
rcrb
ror
and
bnd
pop
cs
out
xchg
sub
scas
adc
adc
mov
cs
jnp
and
or
push
rorb
int3
mov
or
mov
adc
xchg
lret
daa
leave
sub
xor
aam
xchg
lock
mov
out
roll
orl
in
faddl
ljmp
mov
es
mov
roll
enter
loope
test
or
gs
ljmp
adc
adcb
sub
jmp
fcmovne
push
adc
or
imul
cmpl
out
std
dec
js
fdivl
pop
out
inc
push
mov
jg
loope
leave
or
xor
xchg
jns
popa
scas
fwait
push
cmc
or
fcoms
dec
loope
in
dec
repz
test
push
fcoms
add
clc
xor
clc
popf
into
jg
repz
and
push
add
xchg
in
mov
xchg
aaa
xorb
popf
sbb
mov
aad
mov
pop
pop
outsl
push
cltd
lock
pushf
test
notl
fistps
jns
mov
dec
cltd
mov
fists
call
xor
fwait
arpl
dec
mov
ja
adcb
fiadds
fwait
stc
gs
addb
sbb
jo
stos
adc
mov
out
repz
stc
in
mov
dec
dec
xorb
sbb
rcrl
shrl
out
cltd
adc
cwtl
cmp
test
icebp
in
adc
loope
hlt
mov
aam
push
dec
dec
andb
xor
popf
fucom
inc
or
jge
sbb
mov
pop
insb
dec
rol
mov
mov
scas
idivb
xchg
pop
out
ret
dec
or
and
bound
cli
cmpsb
xor
rcrl
fs
ficompl
test
into
das
add
notl
dec
cmp
pop
fstps
lea
movsb
mov
jbe
mov
or
popf
pop
fists
or
pop
add
xchg
ds
xchg
push
lock
mov
sbb
fs
mov
das
and
data16
inc
mov
in
sarl
roll
lea
or
stos
mul
out
aad
push
mov
rcr
out
bound
notb
xchg
sahf
add
jmp
imul
int
jne
dec
imull
dec
pop
xchg
sbb
shll
in
mov
or
int3
jle
imul
fnstcw
mov
mov
sbb
pop
push
mov
and
or
loopne
cmp
mov
jnp
js
or
pop
lret
loope
mov
sbb
call
jl
mov
add
fsts
iret
inc
xlat
icebp
rorl
test
subb
cmp
movsb
adc
movsb
and
out
inc
dec
mov
out
out
stc
test
lock
mov
sbb
in
sub
fdiv
scas
ret
xchg
cmp
cmc
mov
mov
xor
mov
stos
sub
hlt
repnz
push
icebp
sar
push
stc
push
push
cltd
cmp
repnz
fwait
js
cmp
loop
or
dec
sub
js
adc
push
stos
pushf
repz
aad
xlat
cwtl
jae
loope
cmp
out
aam
shl
pop
cmp
std
cmpl
int
sbb
sti
mov
xor
sub
test
cld
daa
or
mov
mov
sbbl
or
int
pop
pop
or
movsl
test
scas
adc
insb
lcall
and
xchg
mov
mov
cmp
fistpll
movsb
ret
fcompl
push
add
inc
mov
mov
mov
lret
pop
jno
imul
sarb
pop
xor
pop
adc
ds
and
scas
cli
iret
cmc
ja
inc
xchg
mov
lahf
or
hlt
mov
insb
sbb
dec
out
add
xor
lods
push
mov
and
push
xor
sub
hlt
cmp
je
imul
jbe
push
addl
mov
sub
sub
cli
jg
xor
insb
adc
ja
sbb
jae
xor
xor
sub
add
dec
cmp
inc
mov
js
push
outsl
hlt
push
mov
dec
insb
and
jo
dec
inc
sub
push
jp,pn
fstpt
push
insl
lods
arpl
inc
inc
je
sbb
xchg
sbb
mov
enter
insb
pop
sub
cmp
or
mov
lods
leave
xchg
lea
fs
int3
fdivr
call
mov
mov
push
sti
hlt
mov
loop
pop
test
mov
adc
xchg
sbb
cmp
and
jg
dec
mov
test
jmp
cli
mov
sbb
jge
adc
ja
enter
gs
cmp
adc
dec
sub
ja
subb
inc
push
mov
sti
je
inc
mov
nop
clc
pop
lds
jnp
es
mov
push
cmp
cmp
outsb
imul
test
adc
jle
fs
aas
or
xchg
enter
cmpsl
rol
stos
sub
mov
mov
lock
fistpl
sub
mov
icebp
idiv
lds
mov
adc
stc
or
repnz
lods
or
neg
sub
mov
fdivrl
int3
mov
fisttpll
enter
xchg
mov
int
rorb
shl
aaa
add
sahf
adc
sti
dec
pusha
popa
cmp
fisubrl
stos
andb
aam
shrb
iret
movsb
add
loop
xlat
rol
lret
outsl
aad
lret
xor
and
hlt
lods
lods
lods
pushf
lds
mov
pushf
xor
or
outsl
jmp
mov
xor
in
bound
repnz
jb
xor
int
insl
xchg
outsb
push
mov
imul
xchg
jl
dec
xchg
enter
pop
scas
sbb
pushf
or
xor
cmp
fdivrl
lret
pop
fwait
mov
rcll
sub
in
jg,pn
imul
imul
lret
out
test
xchg
inc
sub
adc
jbe
pop
mov
es
movb
jno
lret
jle
pop
jl
adc
dec
cmp
xchg
add
leave
push
incl
jae
mov
fidivs
pop
cwtl
stos
lcall
int3
dec
lea
inc
add
in
jns
dec
in
push
xor
aas
stc
push
mov
mov
add
inc
cltd
into
dec
fildl
mov
int3
sub
sti
sub
aad
jl
xchg
dec
sbb
pop
leave
mov
cmpl
adc
jmp
cmp
faddl
xchg
xchg
daa
adc
push
xor
call
dec
cld
das
sub
xchg
inc
adc
dec
int
xlat
mov
jmp
lret
js
push
mov
loopne
cld
mov
pop
mov
push
xchg
mov
jae
outsb
rclb
fidivs
xchg
out
movsb
hlt
mov
inc
fwait
and
adc
out
xchg
jp
call
loope
sub
sahf
push
xchg
cmp
popa
rolb
xor
mov
inc
push
into
arpl
sbb
test
stos
cmp
sbb
cmp
push
movsb
aad
inc
test
inc
xchg
xchg
scas
jge
inc
push
mov
jns
test
xchg
mov
dec
jnp
hlt
push
test
sub
jbe
es
aad
or
push
mov
repnz
lods
mov
loop
sub
lcall
or
cmp
mov
xor
cli
aam
rol
imul
jno
mov
xchg
jno
hlt
mov
loope
jle
out
jne
jbe
add
out
sbb
insb
inc
nop
in
and
jns
cmp
out
pushf
out
in
repnz
pop
or
xor
cmpsb
sub
inc
mov
sahf
mov
mov
jb
push
dec
adc
int
stos
cmc
in
and
sub
xchg
shr
mov
mov
add
pop
roll
inc
cld
xchg
mov
xchg
int
cs
hlt
pop
imul
mov
and
push
test
inc
push
pop
push
sarb
outsb
les
insb
fildll
cli
or
ret
lock
dec
dec
insl
pop
jbe
pop
pop
jne
cmpsb
jns
dec
cmp
pop
cld
faddl
fsts
sub
mov
mov
push
repz
lret
daa
pop
push
hlt
outsb
lods
loopne
mov
mov
into
xor
sub
cwtl
aad
pop
jecxz
adc
loop
sub
xchg
add
dec
cli
pop
insb
mov
repz
pop
fisttpl
push
dec
xlat
inc
add
or
mov
ret
xor
pop
sub
mov
mov
bound
stc
mov
jle
jp
std
mov
pushf
inc
insl
sbb
jg
or
pop
cmp
jns
sub
sub
arpl
enter
daa
popa
js
loop
inc
daa
mov
aad
shl
data16
adc
into
mov
daa
les
mov
pusha
or
mov
xchg
dec
jae
insl
imul
sbb
popa
scas
xchg
lods
lods
dec
outsl
pop
je
data16
shlb
mov
loopne
jns
xchg
mov
lcall
fnstcw
mov
xor
mov
push
pop
and
pushf
pop
test
or
fsubrl
mov
insb
dec
cmpsb
and
jnp
sahf
out
das
inc
xchg
push
pop
idivl
ss
xor
addb
inc
cmpsl
mov
scas
xor
mov
push
xchg
xchg
fs
dec
negb
inc
cld
mov
xchg
das
or
dec
mov
xchg
int
popa
mov
mov
push
mov
push
push
hlt
and
and
inc
mov
xchg
jae
inc
dec
cmpsl
out
pop
or
mull
cmpsl
in
fnstsw
lcall
and
xorb
mov
cld
dec
inc
or
xor
movsb
sbb
push
and
fcomps
push
mov
xchg
mov
insb
fnstcw
shr
mov
jbe
cmp
cltd
enter
cmp
inc
popf
xchg
dec
mov
imul
icebp
sar
sbbb
jl
ja
imulb
aad
cmp
pusha
hlt
mov
pusha
gs
push
pop
lret
inc
ret
push
dec
or
ret
pop
xor
or
inc
cld
std
inc
std
dec
or
bound
out
and
cmp
insb
jl
adc
in
xchg
lock
inc
std
sbb
adc
push
xchg
sbbl
movsl
adc
jmp
je
aam
or
dec
imul
sub
lods
fdivrl
outsl
adc
stc
sub
into
jp
dec
dec
mov
rolb
dec
or
mov
imul
xor
in
or
and
insl
sarb
filds
dec
add
xchg
xchg
pusha
repz
adc
mov
jno
push
xlat
movsb
lock
outsb
cwtl
or
nop
dec
jl
mov
rcrl
add
fcmovnbe
aam
out
ljmp
pop
push
inc
pop
insl
and
das
stc
mov
stos
loopne
gs
sbb
stos
pop
push
xor
inc
pop
into
mov
jae
cmpsl
fildl
push
icebp
dec
pop
cmp
cmpsl
jmp
add
xlat
sbb
dec
cmp
mov
and
push
sbb
out
out
int
push
mov
mov
and
sahf
push
rcr
outsl
outsl
cmp
adcb
ficoml
negb
std
int3
imul
add
ljmp
mov
mov
jg
sbb
jae
jb
stos
push
ficomps
xor
cwtl
lods
cli
loope
mov
push
addb
push
pusha
inc
adc
adc
dec
or
dec
enter
ret
ror
stos
dec
sbb
xchg
mov
les
cmc
lahf
sbb
sbb
cmpsl
bound
adc
or
mov
push
xor
in
jne
lret
jae
dec
es
pop
call
pop
pop
test
sub
push
mov
add
jg
leave
clc
int3
cmp
inc
loope
jne,pt
cmpsb
pop
adc
loope
pop
pop
cli
dec
inc
sub
std
lods
pushf
dec
sub
popa
in
sbb
add
sarb
pusha
int3
push
data16
int3
adc
pop
call
scas
jb
gs
cmc
and
inc
cmc
jo,pt
insl
inc
sbb
inc
xchg
or
push
mov
iret
out
mov
outsb
sub
add
test
pop
outsb
test
mov
inc
push
mov
sti
mov
cld
bound
bound
inc
add
fwait
sub
pop
push
lret
clc
push
mov
fwait
mov
cmp
pop
cmp
lret
fistpl
add
sub
fsubrl
fdivp
or
inc
and
cmpsl
add
mov
push
int3
and
scas
inc
arpl
clc
sarl
cli
pop
ret
jns
or
dec
lock
out
jnp
sbb
imul
inc
and
or
mov
inc
cmp
arpl
inc
xor
arpl
adc
sti
cmpsl
sbb
aam
cmp
js
insb
and
jl
push
and
xlat
and
icebp
aas
pop
mov
lds
inc
xorb
pusha
mov
movsl
aaa
jge
fidivrl
stos
push
shll
lock
jmp
loopne
sbb
sub
mov
hlt
int
daa
cmp
add
cmpsb
fiaddl
idiv
loope
in
mov
pop
mov
sbb
dec
xchg
loope
cmc
or
dec
fs
lea
push
movsl
xchg
clc
cmp
gs
push
mov
shlb
sub
insl
jle
cmp
mov
mov
adc
mov
mov
lea
push
fisubl
in
jg
testb
inc
dec
frstor
dec
jmp
cmpsb
xor
mov
mov
xchg
cmp
mov
add
jne
xchg
or
jae
mov
pop
popf
out
mov
loopne
ds
inc
push
add
inc
or
adc
ret
adc
cmc
add
xor
rclb
and
rcrb
scas
nop
adc
insb
pop
sub
push
sarb
pop
pop
sub
in
sbb
or
aad
fcmovnbe
pop
jne
icebp
insl
jmp
sbb
xchg
push
cmp
mov
push
cmp
ret
scas
out
aam
lods
stc
mov
lods
xchg
popa
leave
and
and
xchg
aas
stos
ss
arpl
mov
adc
je
or
sti
pop
adc
xchg
push
clc
xchg
jmp
pop
adc
or
lahf
and
in
hlt
and
out
das
dec
addr16
mov
push
jl
adc
nop
aas
jmp
lcall
lea
mov
outsb
les
push
jbe
repz
aam
add
jge
aad
inc
and
xchg
scas
mov
adc
and
xchg
sub
cmp
and
or
and
sarb
mov
movsl
xlat
jp
dec
push
xchg
test
sbb
jno
cmp
sahf
int
lds
sbb
or
test
push
dec
scas
cld
push
or
js
push
shrb
sti
xchg
test
and
in
lea
xlat
jae
mov
bnd
push
xor
popf
fidivl
push
mov
mov
xor
xor
scas
jmp
cmp
cld
std
iret
inc
shll
dec
ret
loop
das
lea
adc
test
out
inc
mov
add
push
or
js
out
xchg
mov
xchg
test
scas
mov
outsl
movsl
mov
mov
mov
mulb
mov
xchg
out
test
sub
inc
sub
xchg
push
sub
cmp
pop
inc
shll
dec
mov
cmp
pop
xor
xchg
and
addl
andb
shll
arpl
jge
mov
sub
les
jno
sbb
cmpsb
ds
scas
fldcw
daa
adcb
fbstp
inc
test
sub
add
out
push
cmp
scas
cli
movsb
lea
xor
lahf
ret
cs
imul
jb
loope
mov
inc
and
divl
pminub
or
jp
bt
loopne
sub
push
nop
or
test
shr
cmc
nop
lods
xchg
iret
sbb
inc
and
xor
mov
jmp
movsl
dec
and
pop
cmp
movsb
out
xchg
loopne
xlat
nop
fsubrs
rorl
clc
cwtl
gs
mov
sar
ret
push
xor
pop
cmp
xchg
adc
leave
push
xor
add
arpl
iret
sbb
aas
js
jo
add
cld
leave
add
or
mov
into
pop
stos
dec
mov
lret
imul
adc
inc
dec
negb
jmp
pop
pop
stos
or
add
in
pop
ficompl
jnp
mov
pop
fcmovnu
mov
repz
jae
out
push
mov
add
dec
add
outsb
and
cmc
ljmp
push
xor
and
iret
mov
inc
adc
adc
out
dec
je
add
movb
hlt
pusha
fistpll
outsl
cs
mov
dec
scas
bound
jge
mov
mov
mov
pushf
into
xchg
arpl
fimull
dec
cmp
and
mov
dec
popa
jnp
pusha
mov
hlt
repnz
push
jecxz
or
or
psubsb
inc
and
xchg
popf
stos
or
push
cmp
inc
ret
pop
jle
fucomip
rorb
mov
push
fdivrp
jle
push
movb
jge
shll
call
sbb
mov
ret
inc
mov
jecxz
in
loop
mov
adc
iret
pop
mov
test
push
or
imul
adc
cmpsl
push
xlat
lret
dec
in
lret
sub
mov
loope
and
lcall
or
mov
sub
xchg
popf
xchg
push
dec
in
iret
xor
and
or
or
popa
loop
popa
fwait
subl
inc
das
fxch
xchg
rorl
test
mov
inc
aad
push
sbb
cltd
adc
jae
xor
dec
inc
xor
jl
sahf
outsl
sub
lret
frstor
clc
les
ss
outsl
ret
jbe
jae
or
int3
sti
xor
adc
pop
mov
mov
out
es
xchg
pop
xchg
or
cli
and
aaa
imul
xchg
lods
imul
push
xchg
push
or
arpl
pop
sbb
xor
mov
lds
je
popf
add
xcrypt-ecb
cmpsl
mov
in
aam
nop
push
mov
xor
and
jno
xchg
inc
rorb
sbb
pushf
outsb
je
xor
xor
inc
leave
pop
jbe
lret
sbb
adc
push
and
lahf
sti
sub
jp
dec
mov
xlat
ds
xchg
orl
mov
cs
push
call
dec
push
adc
pop
jg
out
mov
jnp
push
xchg
lcall
pop
mov
imul
fwait
and
xor
cmp
xor
mov
lods
dec
into
inc
adc
lret
mov
mov
leave
loop
jp
pop
shrb
scas
sbb
imul
cmpsb
or
shrb
and
mov
xor
mov
stos
push
fcomps
cmp
fdivrs
cwtl
or
inc
push
fisubrs
sub
loop
in
mov
idiv
lock
mov
leave
add
sbb
mov
xchg
mov
outsl
dec
cmp
mov
sub
test
icebp
scas
lods
pop
sbb
add
lock
pusha
mov
or
mov
aas
or
sub
dec
sub
stos
bound
cmp
in
jmp
mov
push
sbb
mov
cwtl
popa
xchg
or
iret
mov
dec
and
jg
push
push
xor
ljmp
xchg
push
stos
mov
push
les
jne
dec
mov
xchg
jb
inc
push
mov
lock
mov
sarl
jnp
add
mov
arpl
push
int
inc
lea
xor
bound
outsl
sbb
mov
sub
cmp
adc
inc
inc
push
in
in
mov
fcmovu
sub
add
xor
jge
dec
inc
push
popa
xor
repz
lret
mov
imul
in
xor
in
roll
inc
push
call
test
xchg
xchg
cmpsl
fsts
mov
sbb
out
lea
jecxz
clc
pop
stos
sahf
fs
mov
push
nop
pop
std
data16
xchg
imul
push
jp
push
leave
and
or
jecxz
xchg
bound
stos
pusha
shl
cmp
push
and
pop
cltd
mov
dec
adc
aas
lcall
sbb
neg
jne
xor
jae
rcrl
pop
mov
ror
test
jo
push
sub
xchg
xor
mov
pop
sti
shrb
or
mov
adc
mov
pop
ret
imul
lods
test
add
or
dec
mov
out
out
lret
ljmp
push
bound
in
or
dec
mov
dec
and
clc
jg
jno
addr16
addr16
jecxz
pop
fldenv
xchg
je
stc
out
clc
jb
cwtl
xchg
jecxz
mov
jge
loope
pop
andl
push
mov
xchg
data16
into
insb
stos
pop
test
xor
loope
std
ret
lcallw
xchg
add
icebp
test
cmp
cld
stos
inc
lret
ja
jg
lcall
stos
mov
addr16
mov
loop
add
xchg
movsl
pop
dec
sahf
jbe
jmp
call
imul
arpl
aaa
dec
insl
mov
dec
sbb
int
cmp
mov
in
adc
jae
jmp
ss
loop
enter
jae
mov
adc
inc
sbb
bound
push
fsts
pop
pop
push
aaa
mov
mov
dec
pop
std
rcr
ret
das
mov
repz
ja
mov
mov
mov
add
scas
nop
jmp
stc
push
mov
mov
adc
add
and
outsl
mov
out
mov
popf
packsswb
xchg
and
pop
mov
testl
cs
push
lods
sbb
icebp
mov
jne
fildl
adcl
aas
das
xchg
cmc
movsb
cli
jp
pushf
sarb
fsubl
lock
jge
loop
mov
ficomps
and
mov
outsb
xchg
add
sbb
pushl
push
loop
mov
cmp
push
test
adc
jmp
adc
mov
push
inc
ret
filds
in
add
jo
lds
gs
push
xchg
adc
fisubrs
int3
jecxz
xchg
fstps
fistl
mov
add
inc
dec
push
imul
out
mov
popa
push
cli
sub
cli
test
add
push
adc
inc
sbb
pop
push
mov
clc
jb
adcb
pop
sarb
mov
in
xchg
dec
mov
int3
and
dec
jbe
pop
fisttpl
ljmpw
xchg
cmpsb
jo
add
fnstenv
lods
mov
loope
xor
mov
cmp
jne
or
in
xchg
cmpsb
packuswb
xlat
in
pop
stc
fsubr
xlat
dec
or
out
pusha
das
xchg
and
dec
nop
ljmp
mov
and
ss
aad
xchg
fs
jo
add
push
stos
aaa
aas
cmp
daa
sbb
xor
decl
ss
dec
shll
stos
scas
add
sub
pushf
call
sbb
mov
ret
inc
dec
sahf
or
jg
push
pop
sbb
add
push
push
pop
mov
call
dec
lods
shll
fmuls
pop
inc
mov
jp
jnp
ss
push
mov
loope
mov
and
cmp
into
imul
mov
lcall
iret
lds
sub
jl
in
arpl
xchg
pop
iret
sbb
test
leave
push
aaa
jns
mov
cmc
lds
ret
add
loop
outsb
push
xchg
push
mov
in
push
sbbl
mov
test
loop
inc
ds
sub
xchg
lret
xor
ret
and
cmp
stos
popf
sti
pop
dec
loopne
adc
sti
ds
imul
out
fcomps
test
js
push
aam
mov
pop
lret
scas
push
into
add
push
stos
leave
xor
mov
inc
pop
adc
aam
inc
adc
mov
into
stos
arpl
movsb
dec
leave
enter
mov
push
sbb
out
pop
dec
add
jmp
jmp
scas
enter
or
pop
daa
inc
mov
fstpt
mov
mov
repz
mov
divl
inc
shlb
ret
sub
mov
mov
call
sbb
jmp
jge
test
lcall
in
mov
pop
sahf
xchg
mov
cli
out
lods
loope
fdivl
inc
ret
cwtl
data16
cmp
xchg
insw
cmpsb
pop
rorb
fsubrs
inc
and
add
push
cmp
stos
stos
into
imul
aam
popf
ds
pop
xlat
out
pop
xor
cmp
nop
xorl
cmp
push
or
insb
repnz
fcomi
jbe
arpl
lods
push
or
int
xchg
movsb
mov
inc
dec
xchg
add
clc
jno
cmp
dec
test
sbbl
insl
pop
hlt
add
pop
dec
test
mov
iret
out
sti
xchg
cmc
scas
lcall
out
xorl
jae
jne
scas
add
mov
test
jno
stos
push
xor
int3
loope
popf
in
out
cmp
scas
movsl
sti
lahf
js
adc
xor
pop
push
lock
xorps
repnz
arpl
jo
stos
es
dec
xor
loope
fcomp
inc
sysexit
outsl
leave
fimull
mov
pop
xchg
ja
xchg
loope
outsb
sbb
dec
inc
roll
mov
aam
cli
xor
sbb
jns
setp
push
add
jne
xchg
sbb
cli
repnz
sbb
dec
std
int
dec
aad
cwtl
ret
xor
movb
mov
scas
dec
dec
mov
or
jecxz
mov
in
lret
mov
insl
dec
push
out
repnz
jb
sub
mov
lds
stos
js
pushf
stos
mov
mov
cmc
mov
mov
mov
leave
mov
jo
movsb
cmp
push
fmuls
jp
lcall
xor
xchg
pop
aaa
int3
mov
adc
or
xchg
aam
test
inc
jne
jno
mov
call
movsb
outsl
xchg
xchg
outsb
dec
inc
dec
fildl
jbe
fisubs
push
ljmp
mov
xor
push
je
pop
and
aad
arpl
pushf
and
cmpl
cs
mov
je
xorl
aaa
sar
enter
inc
imul
cli
lock
arpl
popf
or
pop
test
sub
sarl
data16
into
add
stos
inc
test
xchg
test
lcall
sub
mov
test
mov
popa
fadds
push
adc
lret
dec
mov
insb
cs
pop
cmp
inc
loop
sahf
fcoms
jmp
adc
andl
jbe
cmp
popf
out
adc
mov
rcl
inc
jl
add
leave
push
enter
dec
cmc
pushf
mov
add
roll
pop
jecxz
shr
jae
mov
inc
xchg
arpl
out
xchg
pop
pop
jecxz
and
inc
pop
pop
xchg
xchg
mov
aad
dec
imul
fisttps
push
adc
cmp
aad
lds
inc
test
std
popf
push
lea
std
sbb
sub
push
ss
mov
in
mov
jne
loopne
xchg
xor
mov
scas
loop
ss
scas
or
gs
mov
jb
out
repz
fsubl
icebp
push
popa
add
xor
out
jo
jge
sub
pop
xchg
outsl
mov
sbb
push
cmp
pop
push
test
or
dec
cltd
je
or
insl
test
fwait
movl
ds
pop
or
sarl
pop
psubusw
sub
jbe
mov
and
mov
aam
sbb
xchg
lret
jb
sub
mov
add
or
xchg
loopne
mov
cmp
imul
push
xor
push
out
out
mov
ret
dec
xchg
or
lret
mov
mov
and
lock
fidivrl
fs
inc
sbb
mov
ss
aad
sbb
mov
mov
cmc
sbb
push
roll
fwait
aam
sub
mov
pop
pop
insb
push
cmp
bound
mov
ror
jnp
dec
mov
jg
repnz
sub
gs
cli
xlat
test
mov
adc
scas
cmp
cmpsb
popa
idivb
test
cmp
sub
dec
cmc
adc
popa
fcmovnu
push
mov
push
ret
add
dec
das
and
les
push
fwait
xchg
outsb
cmpsb
fcompl
xchg
out
lds
shrb
xchg
push
inc
push
xchg
pop
sub
add
cmpsl
dec
data16
sbb
mov
dec
mov
push
loope
or
fisubrl
cmp
out
in
sti
les
sahf
lret
addb
push
ficomps
sub
lods
mov
jo
ja
jmp
dec
loop
testl
inc
test
sub
mov
cmpsl
xchg
mov
xor
jbe
cmp
jmp
jle
in
movsl
xchg
jae
mov
xor
inc
push
push
ljmp
clc
mov
repz
ret
loope
leave
movsb
push
pop
icebp
and
fstps
pop
mov
cmp
cmp
jno
loop
dec
lea
add
xchg
mov
int
mov
aad
jmp
insl
inc
pop
jle
ja
cmp
repnz
fisubs
stc
aad
movsb
js
xor
pop
jle
sbb
fsub
mov
pop
cmp
rcrl
sahf
sub
push
iret
xchg
hlt
jp
test
mov
mov
add
ret
pop
in
or
in
xorb
xor
sub
stos
xchg
rolb
mov
sbb
mov
outsl
jno
push
push
pop
sbb
mov
or
xor
push
lcall
lods
mov
dec
pusha
xchg
push
rclb
push
pop
push
shrb
mov
jae
xchg
pop
incl
or
fsubrp
adc
mov
cmp
xchg
lahf
cwtl
push
ljmp
and
xor
adc
pushf
lock
subb
mov
mov
hlt
stos
js
rolb
add
pop
mov
scas
ss
cltd
inc
fsubr
dec
dec
sbb
xlat
arpl
aad
pushf
pop
divb
fsts
test
imul
sbb
mov
lret
pop
xchg
add
outsb
mov
loope
sub
ret
into
cs
movl
inc
and
lret
mov
push
xchg
dec
xor
sbb
addb
loopne
fmull
push
cmpsb
cwtl
inc
pop
inc
mov
mov
dec
pop
je
fldcw
ljmp
cmpl
shrl
mov
lret
mov
mov
imul
add
loopne
pop
hlt
push
mov
sbb
mov
and
xor
clc
jno
xlat
nop
xor
fisubs
sub
pop
xor
inc
add
fisttpl
gs
in
subl
xchg
negb
call
mov
repz
aam
mov
int
mov
loop
and
call
mov
add
arpl
sbb
sbb
and
push
push
cli
mov
cmp
gs
addr16
cmp
movsb
cltd
insb
stc
in
mov
mov
lods
jge
popf
bswap
mov
aam
out
iret
fadd
push
sti
sub
push
xlat
xor
or
in
data16
push
dec
pop
push
das
sub
jge
popf
out
popf
mov
nop
jno
xor
add
inc
mov
sysenter
das
jne
sarb
and
adc
push
pushf
cmc
stc
add
xchg
pop
and
pop
mov
es
inc
mov
test
addr16
mov
insb
lock
ret
cmpb
addl
ds
jb
or
or
inc
icebp
test
dec
mov
incb
subb
jb
adc
jge
or
xor
pop
add
dec
andl
xor
lcall
test
scas
mov
aad
cmc
sub
cwtl
mov
jl,pt
mov
ljmp
in
sbb
iret
arpl
push
xchg
xchg
pop
cli
imul
in
fdiv
loop
movsb
xor
mov
pop
inc
pop
push
xchg
push
jg
pop
subl
loop
fucomp
xor
add
in
sub
jbe
leave
outsl
stos
mov
enter
sub
adc
push
adc
push
mov
pop
in
mov
push
cmp
dec
mov
fsubl
loopne
stc
xor
rorb
and
xchg
pushf
inc
lcall
add
pop
inc
push
enter
mov
imul
fstp
pop
mov
fadd
xchg
repnz
add
inc
mov
pop
sub
dec
cmp
xor
subl
fsubrp
xor
add
xor
ss
cmc
cmc
xchg
stos
cmp
dec
fucomip
pop
push
mov
cltd
push
adc
dec
xchg
fistl
xchg
mov
movsl
shrb
add
add
insb
xchg
adc
negl
xchg
and
inc
lods
inc
lods
int3
xor
out
sbb
jo
fnstsw
pop
cmpsl
mov
mov
int
add
ljmp
loop
daa
subb
push
popa
add
pop
gs
repnz
mov
jns
inc
fwait
mov
mulb
push
sub
scas
lock
add
pop
mov
dec
jo
xchg
push
or
sub
test
dec
cmc
shlb
jmp
movsl
mov
imul
jae
rol
pop
lret
fiadds
push
iret
sbb
mov
popa
cmc
fs
insb
jae
jmp
sub
jl
jmp
inc
xchg
das
lock
out
cld
xlat
adc
out
aad
in
shl
sbb
jb
sar
add
js
out
mov
movsb
out
in
push
inc
fdivl
imul
and
jg
or
dec
inc
aam
and
loopne
mov
bnd
sub
and
push
mov
xor
and
mov
mov
lret
cmpsl
jge
sbb
xor
jns
daa
cmp
inc
pusha
and
cwtl
xchg
or
mov
cmp
rorb
mov
fldcw
pop
sti
xchg
fsubrs
mov
push
test
xchg
rcrb
fdivr
lret
mov
xchg
cltd
rcr
jp
jnp
outsb
or
lds
add
cmp
lods
clc
jg
aad
mov
loop
push
pop
add
mov
call
adc
mov
jmp
sub
or
xor
in
fcomps
pushf
push
mov
mov
cmpb
push
fidivs
mov
pop
std
shlb
xchg
mov
inc
or
in
sti
cs
jp
jo
jmp
push
jb
jb
cmp
mov
xchg
movsl
mov
jp
xchg
jbe
sbb
hlt
dec
xor
jmp
out
lcall
dec
push
xchg
cmp
into
mov
pop
stos
in
mov
jmp
mov
test
popf
outsl
and
inc
pop
mov
mov
insl
imul
mov
jecxz
shrl
jne
xor
xorb
hlt
lods
cmp
mov
jl
daa
xchg
push
test
int
negl
mov
insl
cmpb
xor
push
adc
repz
dec
adc
push
xor
mov
mov
fiadds
std
xchg
addr16
push
dec
js
test
add
addr16
add
mov
aaa
dec
dec
sbb
xor
scas
adc
xchg
lea
pop
pusha
cltd
adc
out
int3
fcoml
outsl
pop
cltd
test
fldcw
mov
push
xchg
or
dec
les
adc
adc
jb
in
in
stos
sub
mov
push
call
adc
lods
pop
fwait
cmp
pop
or
js
lcall
push
add
hlt
jbe
inc
dec
cmp
dec
pusha
ret
arpl
push
pop
test
dec
fisttpl
clc
jg
mov
push
mov
mov
mov
mov
enter
cwtl
sub
out
mov
cwtl
sti
lods
and
lahf
lds
bound
xchg
and
mov
sbb
aad
sarl
adc
pop
mov
cmp
jmp
out
repnz
jbe
aam
aad
mov
testl
rclb
mov
shll
popf
cmp
mov
cmp
dec
mov
icebp
jnp
stos
dec
ret
shlb
inc
or
push
popa
in
arpl
cmpb
sti
inc
cmp
jns
dec
mov
aam
add
push
test
test
jo
popf
jo
es
int3
adc
jg
push
jle
clc
push
inc
dec
loope
shrl
jns
int3
stos
add
outsl
ljmp
jl
push
push
mov
adc
inc
dec
ffreep
push
push
sbb
test
in
mov
mov
adc
dec
xchg
bound
rcrb
lcall
mov
out
mov
rorb
lods
addr16
xor
cmc
mov
jp
sbb
cmpsl
das
jmp
adc
push
sbb
push
fisubrl
lea
xchg
sahf
xchg
stos
jno
xchg
and
jnp
lods
fldenv
rcrb
sbb
sbb
jno
xchg
mov
xor
cmp
cmp
jmp
pop
pop
xchg
divb
jecxz,pt
jae
adc
sbb
aad
dec
aam
xchg
iret
into
dec
or
jmp
stos
test
mov
cmp
and
cli
adcl
add
lcall
sbb
push
out
test
sbb
negl
or
test
pop
inc
sbb
push
lret
scas
pushf
loopne
adc
roll
push
inc
and
xchg
imul
sahf
jo
movsb
subb
cmpsl
orl
jne
push
jno
cmpsb
ds
add
je
std
stos
aam
sbb
sbb
out
lods
pushf
shlb
xchg
pusha
fbstp
lcall
jle
sub
push
loopne
mov
pop
add
outsl
xor
lods
mov
enter
add
add
out
mov
movsl
mov
pop
cmpsl
mov
in
xor
data16
mov
add
jns
jne
add
mov
jbe
jns
jo
mov
repz
test
add
or
adc
je
pusha
loop
inc
push
sub
nop
loop
pop
icebp
push
ljmp
xchg
mov
pop
ret
ja
ss
int3
pop
add
addr16
mov
cmp
dec
mov
mov
aam
in
lret
negl
cmp
or
push
aas
pop
setl
mov
xchg
iret
leave
jae
je
mov
xchg
out
mov
xchg
std
cli
lcall
insb
xor
stc
cwtl
cmp
sub
push
cltd
mov
adc
leave
pop
push
push
add
cmpsb
shlb
popf
icebp
pop
ret
out
hlt
or
stos
mov
scas
inc
mov
dec
sub
cmpsb
xchg
aas
adc
inc
pop
or
add
mov
scas
xchg
push
xor
addr16
popf
dec
sbb
pop
fcmovu
push
jl
or
dec
xlat
inc
push
fimuls
sub
dec
or
cld
inc
lock
sbb
out
aad
repz
and
push
sub
lcall
push
int3
stc
or
iret
push
adc
pop
popa
pop
test
or
and
pusha
cmp
lods
push
aaa
call
sbb
jle
in
jmp
out
call
adc
or
mov
loope
gs
ljmp
push
xchg
cmp
dec
adc
mov
lds
xchg
iret
mov
mov
and
icebp
test
sub
adc
mov
outsl
sbb
movsb
jo
pop
in
or
xchg
push
inc
sti
les
filds
addr16
lea
or
sbb
jecxz
mov
and
add
push
ret
andl
test
xor
pop
xor
mov
ror
xor
jnp
adc
xchg
or
enter
mov
sbb
add
addr16
aam
xchg
xor
sub
mov
push
or
shr
and
repz
add
sub
rclb
and
mov
inc
dec
mov
inc
jbe
sbb
dec
or
mov
jmp
cmp
fwait
jne
or
pop
pop
adc
fcomi
push
stc
dec
stc
lahf
mov
rorl
add
xchg
inc
push
xor
xor
jmp
je
imul
das
xor
gs
mov
in
mov
repnz
push
jno
cmc
mov
adc
jp
pushf
ficoms
and
xor
loope
sahf
stos
clc
pusha
jmp
xchg
pop
out
cmp
dec
fcoms
inc
cli
push
fwait
js
shll
pop
cwtl
pushf
test
fldenv
mov
jg
lret
push
insb
xor
dec
rcrb
push
test
mov
lret
out
mov
lret
cmp
movsl
xchg
imul
xor
xlat
push
add
out
mov
sub
sub
int3
xor
xchg
jo
sbb
push
nop
jo
movsl
cmp
mov
mov
lods
imul
rcl
stos
dec
insb
adc
hlt
inc
mov
lods
std
xor
rclb
xchg
mov
ret
sbb
shrb
inc
fdivl
push
pop
in
scas
jno
jnp
jne
paddsb
xor
pop
lret
call
dec
fsubp
ss
jle
xor
ret
xlat
enter
fists
push
ss
les
dec
pushf
mov
flds
daa
testb
mov
mov
cwtl
sbb
daa
pop
cmp
pop
pop
jns
xor
pop
mov
loop
test
mov
push
cmp
shrl
lds
aaa
inc
pusha
xlat
cmp
cmp
mov
fdivl
call
sub
add
mov
shl
out
push
mov
dec
sub
js
sub
sti
xchg
inc
out
iret
mov
sub
or
sub
mov
cmpsl
aam
jecxz
mov
imul
loopne
or
cmp
jne
ljmp
int3
add
adc
mov
sti
mov
stos
in
sbb
mov
jp
push
out
rcll
mov
mov
mov
pop
jl
test
pop
mov
mov
cmp
sub
add
add
mov
xor
daa
lds
pop
mov
hlt
inc
mov
adc
dec
and
xchg
imul
enter
xchg
movsb
es
or
inc
jge
pop
push
out
imul
rcrl
fisttpl
push
pusha
repz
pop
daa
xlat
mov
aad
stos
add
out
mov
cmpsb
sub
pop
push
pop
jno
daa
push
sbb
xor
mov
lds
mov
mov
pop
daa
je
inc
repz
ljmp
jae
sbb
aas
pop
popf
xchg
aad
pop
int
jae
filds
in
xlat
xor
lea
stc
xor
mov
insl
cltd
push
cmp
xchg
jae
sub
cmpsl
loope
and
push
jge
sahf
ljmp
ret
add
push
fstpl
rolb
fsubrl
js
adc
pusha
lds
rclb
adc
mov
or
pop
jge
add
loope
xchg
outsl
scas
pop
fcomps
mov
das
jg
push
cltd
push
cmp
and
lods
fisubl
sbb
test
mov
xchg
iret
lahf
daa
mov
lret
pushf
inc
dec
xchg
icebp
dec
or
pop
add
int3
not
mov
or
mov
mov
add
mov
xchg
arpl
hlt
mov
xor
and
rcl
sub
mov
test
jnp
xchg
xor
push
xor
cmp
pop
mov
and
push
aam
aaa
pushf
jb
adc
ds
sbb
hlt
je
cmp
push
xchg
les
orl
dec
inc
movsb
push
leave
xor
cli
push
insb
mov
je
mov
bound
aad
out
add
testb
stos
adc
mov
rol
test
shlb
divl
aas
fcomp
sbb
insl
shl
or
and
sbb
addl
add
inc
call
incb
cmpsb
pop
add
dec
adc
hlt
jmp
or
jle
outsb
cwtl
add
sbb
jb
cmc
shll
icebp
push
xchg
sbb
pushf
mov
shlb
jne
cmp
loop
fisubs
dec
insb
pushf
mov
shrl
adc
stos
je
outsb
cmp
add
xor
mov
sub
jmp
xchg
shll
insb
sbb
pop
or
aaa
clc
mov
mov
ljmp
loop
in
mov
sbb
cmpsb
xor
sbb
lods
hlt
movsl
add
push
cltd
jae
sbb
mov
out
cmp
dec
adc
adc
mov
mov
cmpsb
aad
mov
xchg
adc
pop
add
js
in
and
jae
or
movsl
mov
lods
test
repz
leave
dec
fstps
aam
je
inc
gs
fldenv
popa
mov
inc
aam
js
sub
xor
xchg
pop
inc
popa
in
pushl
jecxz
enter
cmp
or
mov
push
daa
dec
popa
mov
dec
sbb
adc
inc
in
mov
addr16
xchg
leave
cmp
dec
scas
aad
push
mov
mov
lods
dec
enter
jle
lock
call
shl
push
adc
push
jbe
jnp
add
dec
vpsubsw
mov
bound
pop
mov
shll
jp
out
jae
or
bts
xor
jl
mov
xchg
cmp
mov
jae
mov
je
repnz
dec
aad
lea
das
mov
lret
mov
negb
jmp
lea
xchg
sbb
addr16
scas
loope
jne
sbb
nop
mov
setne
push
mov
jmp
push
jns
mulb
mov
xchg
lret
imul
or
mov
addr16
xorb
or
mov
rcrl
adc
aaa
pop
ficoms
cwtl
andl
cmp
out
mov
in
int
jo
outsl
in
mov
inc
std
sti
inc
fcoml
mov
push
test
cli
popl
imul
and
nop
pusha
xchg
shll
scas
lret
sbb
sub
cwtl
push
scas
popa
ss
aam
rol
stos
repnz
loopne
mov
loopne
test
xchg
dec
push
test
mov
out
aam
nop
cli
fcoms
dec
push
dec
mov
xchg
lret
arpl
subl
pushf
xchg
into
rcll
cli
cmp
scas
orl
cmpsb
pushl
mov
out
cmp
xlat
add
add
test
push
arpl
mov
in
pusha
repnz
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
cmp
test
xchg
lock
hlt
push
xchg
test
test
xchg
lock
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
insl
lock
dec
sbb
sbb
gs
sub
and
sbb
and
loopne
xchg
js
movl
popf
js
in
mov
out
out
jnp
sbb
test
test
xchg
lock
lods
push
xlat
cmp
jmp
pop
cli
shrl
mov
test
insl
lret
test
std
or
pop
in
clc
int
imul
mov
cmp
pop
scas
test
cli
shrl
mov
mov
xchg
sub
int
mov
mov
ja
clc
mov
pop
test
cmp
test
xchg
lock
movsb
push
das
test
test
ds
jbe
push
das
test
test
jne
adcl
repz
sub
adcb
hlt
pop
xchg
test
test
xchg
lock
hlt
push
outsb
test
mov
push
shlb
das
test
test
nop
lock
hlt
push
das
clc
sti
test
xchg
lock
adc
test
test
test
addb
hlt
push
aas
test
mov
push
shlb
das
test
test
xchg
lock
clc
push
inc
stos
imull
sbb
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
cmp
fdivl
lock
test
jl
xchg
lock
es
sbb
xchg
lock
hlt
testb
test
adc
lock
hlt
push
fbld
lock
test
test
xchg
lock
hlt
push
iret
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
hlt
push
das
test
test
xchg
lock
std
lret
jbe
push
das
mov
sub
xor
pop
push
jg
roll
gs
inc
sub
cmpsl
cwtl
mov
lods
aaa
push
dec
int
pusha
sbb
mov
push
or
xchg
sbb
adc
sbb
lcall
cmp
ss
inc
adc
pop
mov
imul
fcos
enter
adc
mov
jecxz
mov
add
jecxz
stos
push
cltd
or
mov
push
xorl
push
dec
xchg
test
in
mov
mov
adcb
mov
outsb
inc
adc
aad
lcall
ds
daa
sbb
mov
push
cmpsb
adc
xor
mov
xlat
stc
xorb
pop
ret
ds
rcl
leave
loopne
out
add
fs
pop
aas
ret
test
in
jae
insl
add
ds
sub
imull
jno
cmp
sub
pushf
push
mov
xor
ds
dec
bnd
mov
imul
mov
das
jl
shrl
adc
xlat
push
push
jge
repnz
gs
xor
data16
add
sbb
and
add
frstor
mov
sub
shl
hlt
sar
in
jmp
aaa
aas
jmp
sub
add
mov
and
call
add
mov
stos
mov
mov
jg
addb
push
lea
dec
jp
cld
in
test
fnstenv
mov
push
clc
mov
mov
imul
mov
push
test
shl
mov
xor
loope
in
sub
pop
push
scas
push
dec
jl
repnz
rolb
or
jge
out
sti
jge
jnp
mov
sbb
dec
cmp
pop
cmp
mov
stc
outsl
pop
or
cs
nop
inc
outsl
cmp
in
out
arpl
int3
sub
rclb
ss
jge
stc
aas
sub
xchg
movsl
decl
out
pop
ret
scas
lods
mov
ljmp
gs
jmp
mov
mov
aad
imul
or
pushf
cwtl
push
adc
cmp
bound
sbb
enter
pop
cli
inc
mov
in
gs
jle
push
xchg
xor
std
js
pop
sbbl
pop
mov
fildl
adc
push
int
and
shrb
movsl
lods
add
iret
out
jno
icebp
cmp
mov
subb
or
ret
in
jae
scas
pop
push
xchg
dec
idiv
mull
notb
push
or
sahf
sbb
inc
sub
mov
negb
mov
subb
cmpsl
aam
jmp
mov
insb
jle
cmp
sbb
dec
pop
mov
stos
pop
in
or
fxch
or
ja
mov
cmp
cmp
flds
syscall
aad
stos
sub
nop
ljmp
clc
jecxz
js
push
hlt
push
jle
sahf
and
xor
mov
mov
pop
mov
and
pushf
es
lock
or
dec
pusha
add
repnz
xchg
mov
push
add
mov
cmp
arpl
cmp
lcall
jecxz
pop
test
addr16
xlat
mov
jp
pop
jp
or
aad
dec
pop
push
lret
jns
shl
jmp
jb
pop
mov
cmc
cs
loop
xchg
rclb
out
iret
mov
sbb
inc
xchg
mov
aaa
xor
insl
sub
or
or
sub
movsl
jns
and
or
xor
out
xor
outsb
enter
jb
mov
sbb
dec
arpl
pop
push
js
sub
dec
fistpl
mov
sub
pushf
data16
js
out
dec
sub
cmpsl
call
cwtl
ret
fs
daa
dec
inc
movsb
cwtl
pxor
xchg
jmp
push
sub
pop
stos
mov
in
stos
and
jecxz
cmp
into
cmp
mov
push
sub
dec
dec
test
fcoml
pop
repnz
out
in
int
movsb
cli
xor
lea
in
sbb
sub
mov
cld
inc
add
xchg
sbb
loopne
aam
inc
iret
stos
ds
xor
dec
and
sahf
xchg
fdivs
clc
lcall
decb
or
ret
push
pop
jb
std
pop
out
mov
or
test
in
scas
push
jno
inc
sbb
inc
jmp
mov
popa
inc
sub
mov
pop
cli
inc
sub
dec
add
dec
pop
xchg
hlt
test
inc
sub
in
mov
in
jne
imul
inc
cmpsl
sub
jl
or
xor
and
iret
add
cltd
daa
fsts
add
or
pop
movsl
inc
ror
add
stc
inc
adcl
lret
or
jno
out
lods
xor
push
add
sub
xchg
sbb
into
pcmpeqd
inc
adc
fucompp
fsubrl
stc
jl,pn
sub
nop
outsl
and
xchg
lock
sbb
push
lods
sbb
mov
roll
mov
pop
aaa
fisttpl
ret
aaa
icebp
into
push
dec
sub
inc
xchg
cmpsb
mov
xor
mov
push
lea
stc
data16
sbb
add
daa
cmpsb
push
inc
or
adc
mov
xor
aas
push
stos
pop
xchg
jle
mov
adc
outsb
test
repnz
fdivrl
popf
dec
test
mov
sbb
push
insb
sbb
scas
jne
sub
cmp
mov
pusha
pop
cmp
xor
and
add
or
inc
mov
pop
inc
xchg
xor
int
mov
repnz
lods
mov
ja
mov
mov
mov
lss
enter
mov
roll
nop
fisttpll
popa
sub
pop
lea
pop
testb
adc
and
out
ja
lods
jp
pop
sbb
push
add
aad
push
sbb
js
sub
pushf
sbb
jl
sub
cmp
cmp
fs
mov
jl
fisubl
out
jmp
in
loopne
xchg
mov
xchg
dec
sub
mov
das
outsl
dec
push
sub
or
sbb
call
mov
pop
push
xchg
std
dec
sbb
jb
dec
cmp
xchg
pop
xchg
stc
adc
cmp
stos
add
out
mov
xor
pop
inc
es
stos
xrelease
add
xor
sbb
cmpsb
cmpsb
icebp
sarb
fwait
mov
insl
dec
push
xchg
leave
inc
pop
rcr
xchg
mov
and
jmp
loope
inc
hlt
out
popa
iret
adc
mov
out
lock
jecxz
sbb
cmp
out
jne
push
lret
imul
in
cmp
movsl
in
icebp
sub
notl
xor
les
sub
out
xchg
mulb
mov
mov
inc
mov
fs
repz
loope
add
sbb
pop
and
mov
mov
leave
sub
vmaxss
ds
mov
xor
into
lahf
pusha
lods
cmp
lahf
mov
push
jle
add
inc
pop
adc
adc
sbb
fs
cmp
clc
sahf
cmpsb
and
xchg
into
outsl
out
inc
lea
in
int3
in
gs
pop
fidivs
mov
mov
movsl
orb
in
call
stos
xor
xchg
and
or
out
sub
jae
aad
add
icebp
and
hlt
mov
out
dec
push
out
push
fidivrl
inc
bound
cld
xchg
out
mull
sub
cmp
outsb
aas
orb
in
dec
pop
fisubl
ret
fldenv
mov
jne
fstps
mov
push
imul
inc
add
pop
add
cmp
fisubl
push
imul
test
dec
cmp
mov
cmp
push
adc
into
scas
fists
add
adc
and
adc
jo
incb
xor
popa
jmp
sub
xchg
mov
jle
push
push
imul
mov
cmpsl
inc
test
lds
cmpsl
lds
or
push
lds
test
and
push
and
mov
mov
mov
or
lahf
imull
ret
lock
fisubrs
mov
pushf
lcall
jae
daa
xchg
push
bound
rol
push
xlat
stos
arpl
jecxz
push
fs
mov
jne
pop
test
xor
in
and
stos
push
fdivrl
call
xor
and
gs
pop
jno
cmova
and
inc
out
add
roll
in
and
cli
xor
icebp
aaa
pop
into
xchg
pop
fidivrl
sbb
pushf
iret
dec
mov
add
dec
les
or
push
or
stos
test
pop
mull
push
cmc
sub
outsb
add
sub
out
push
repz
sbb
pop
mov
ja
stos
adc
popf
enter
jle
dec
ja
arpl
adc
test
jle
mov
cltd
popa
push
rol
xchg
dec
mov
cli
jle
aaa
adc
mov
or
mov
cmp
mov
sarb
out
add
mov
xchg
fsubs
leave
push
and
gs
adc
testl
xor
mov
lods
test
xchg
loopne
dec
mov
icebp
enter
les
xor
jo
fstp
adc
mov
cwtl
dec
xchg
movsb
fcom
xor
or
xchg
int3
stos
push
into
arpl
mov
jne
lret
sub
fldcw
int
test
mov
loopne
repnz
or
or
jge
mov
mov
sahf
imul
sbb
sbb
adc
pop
aaa
les
cmc
mov
inc
call
pop
cs
repz
in
inc
in
pop
jg
cmpsl
adc
xchg
outsb
sub
xor
push
loopne
cmpsb
dec
sub
dec
ret
mov
add
fdivs
push
xor
push
arpl
enter
sbb
push
pop
cmpsl
mov
cwtl
sbb
mov
or
enter
xlat
or
or
ret
pop
add
data16
adc
jo
gs
dec
add
cmp
in
sbb
xor
mov
dec
push
inc
mov
pusha
pop
add
jl
lcall
add
repz
adc
lcall
add
xor
push
fidivs
dec
pusha
dec
loop
jnp
sbb
jp
sbb
push
mov
out
mov
jge
mov
mov
xchg
xchg
sub
fwait
push
dec
mov
jb
push
add
jg
loop
pop
mov
roll
mov
pop
push
add
pop
les
pop
scas
xchg
mov
xor
lahf
andb
push
sbb
in
push
les
js
inc
lret
ss
int
movsb
mov
std
ds
mov
jnp
addl
sahf
sub
pop
jno
dec
out
xrelease
stc
or
stos
daa
mov
aad
pop
xor
daa
cmpsb
and
add
inc
jle
cmp
gs
lock
push
mov
push
call
in
cmp
mov
xor
mov
dec
dec
or
mov
fisttpll
push
push
pop
in
insb
sbb
jecxz
mov
fsts
or
int
lahf
push
jmp
mov
sub
sub
sbb
jne
sbb
jp
daa
jg
shll
out
in
pop
loope
sub
aaa
mov
lea
mov
dec
popa
push
cld
popa
mov
movsl
xchg
das
repz
ja
push
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
