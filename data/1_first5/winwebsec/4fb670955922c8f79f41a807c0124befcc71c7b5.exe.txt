push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
loop
sub
xor
jb
mov
ja
roll
xor
jne
add
shlb
xchg
jg
xchg
stc
jne
rorb
pop
pop
cmp
in
cmp
call
in
mov
mov
test
cmp
jp
jo
pop
cmp
mov
pop
lret
ror
adc
jbe
sub
jg
mov
adc
fisttpll
jp
testb
les
in
or
test
push
push
notb
cmc
cli
movsl
mov
and
xorb
addl
iret
sbb
fistl
xor
push
mov
cmp
cwtl
push
es
cltd
mov
lret
inc
inc
xor
add
leave
jbe
bound
add
outsb
push
aaa
mov
ja
iret
in
leave
out
shrl
xchg
xor
push
add
add
pop
test
enter
add
cli
xlat
stos
mov
cltd
ret
movsb
popa
js
jno
xchg
inc
dec
cld
push
jb
xchg
pop
mov
or
jmp
loop
outsl
cmp
outsl
xor
fisttpl
fildll
dec
xchg
shrl
fucomip
call
lret
shll
sbb
sub
pop
push
loope
jae
daa
icebp
cwtl
add
and
sub
cmp
or
dec
xchg
jp
add
mov
mov
pcmpeqb
jns
mov
cmp
inc
or
fwait
xor
mov
lcall
adcl
xor
adc
cli
push
push
enter
in
int
and
pop
adcl
inc
mov
mov
out
fcmove
and
add
pusha
push
and
inc
or
cmp
addr16
popf
sbb
sbb
inc
les
mov
sbb
bound
rorb
jns
pop
adc
sub
outsl
test
loope
add
xor
dec
pusha
in
imul
jecxz
fidivl
jp
or
shll
sbb
mov
cmp
rorb
js
popf
popf
test
sub
mov
add
jne
call
rolb
pushf
dec
cmp
mov
fists
xchg
xchg
call
inc
jne
mov
aam
imul
test
cmp
mov
push
and
add
insb
aad
sub
outsb
push
xchg
ljmp
xor
adc
jns
insl
testl
add
and
sbb
sbb
mov
dec
lahf
jbe
inc
lcall
clc
sbb
mov
addb
lock
das
adc
inc
popl
push
inc
arpl
and
pop
push
popa
mov
mov
push
push
insl
and
imul
in
sbb
xchg
leave
test
std
pop
ss
adc
lock
enter
inc
shrl
call
test
mov
imul
sub
mov
shr
fadds
pop
xchg
push
iret
lods
push
and
mov
mov
xor
mov
jnp
hlt
inc
adc
sub
mov
dec
pop
lahf
add
sbb
jl
sub
icebp
cmp
out
jge
iret
repz
xchg
cmp
push
adc
jl
hlt
jmp
push
pop
pop
icebp
wbinvd
scas
xor
insl
insl
fisubrs
sub
mov
fstpt
dec
adc
fisttps
adc
cmp
aam
pop
leave
cmp
popa
fincstp
fcoml
or
and
mov
mov
sahf
das
mov
pop
mov
inc
push
loop
mov
sar
mov
mov
push
shlb
mov
enter
fdivs
jns
arpl
lods
cmp
call
cmpsl
xor
addr16
insb
push
or
xchg
add
pop
das
in
lahf
fisubrs
inc
xchg
dec
lahf
leave
loopne
jb
push
and
lcall
dec
jo
jg
test
push
cwtl
xchg
sbb
inc
faddp
js
fs
stos
ss
stc
mov
jns
inc
in
add
fisttps
mov
ss
pop
jp
mov
mov
sbb
pop
push
fists
jg
jbe
cmp
andb
push
dec
lea
sbb
sub
cmpsl
lods
sahf
adc
test
adc
cmp
sbbb
inc
andb
jno
cmp
movsl
cmp
je
xor
enter
fcoms
pop
push
xchg
mov
mov
dec
dec
cmp
scas
jmp
mov
cwtl
imul
inc
les
rcl
stc
dec
inc
repz
jnp
jnp
stc
jbe
icebp
jne
inc
xor
sbb
insl
roll
or
jg
loop
ja
fmull
xchg
mov
test
sub
mov
mov
mov
shrb
push
push
dec
cmp
inc
adc
insb
cmpsl
dec
mov
into
add
sub
sarb
mov
cli
mov
mov
scas
cmc
in
js
sbb
jmp
outsb
cmp
movsb
out
scas
ret
pop
hlt
ljmp
int
bound
lret
scas
xchg
test
mov
jge
mov
add
js
fdivrl
inc
rorb
movsl
pusha
and
loopne
sbb
into
inc
mov
mov
lcall
jle
sub
test
sahf
movsb
popf
jl
xchg
adc
ss
adc
jg
aam
fldt
test
dec
jecxz
fldl
ret
adcl
inc
in
xchg
int3
rorb
jne
jb
or
jmp
pop
aam
mov
in
insl
pop
mov
dec
roll
gs
and
jnp
cmc
cmp
adc
enter
rcll
mov
scas
and
loop
mov
mov
cmp
out
mov
push
aaa
mov
aas
jnp
test
out
pop
add
je
jne
mov
rcll
daa
out
fmulp
lods
call
imul
iret
mov
adc
arpl
sbb
sub
hlt
stos
dec
push
in
or
fcoms
dec
add
push
les
je
mov
xchg
imul
test
sub
cmp
test
push
push
mov
fidivrl
mulb
and
and
xor
sbb
in
xor
dec
loope
mov
sub
ljmp
mov
movsb
mov
fcoms
test
push
int3
mov
sub
fsubrl
aad
lods
mov
mov
inc
pushf
jp
mov
or
add
pop
and
std
pinsrw
sbb
rorb
jmp
jmp
pop
cs
pop
push
inc
inc
into
cmp
mov
jecxz
gs
insb
int
fmull
pusha
push
cmp
mov
mov
adc
lea
jnp
adc
imul
sti
outsl
dec
int
mov
jge
shrl
sbb
inc
sub
add
jb
push
les
or
dec
push
pop
or
repz
psubsw
and
test
js
sahf
inc
lea
daa
mov
movsb
pop
into
movsl
jo
ja
jg
xor
scas
into
push
dec
les
add
inc
or
dec
inc
xchg
loope
mov
or
push
fwait
cmp
fimuls
cmp
insb
pop
rorb
pop
adc
lds
push
mov
pop
into
xchg
lret
add
cmp
test
out
cmp
or
inc
pusha
inc
and
inc
stc
out
xchg
push
pop
pushf
and
inc
sbb
test
push
mov
outsl
jne
scas
or
add
or
adc
xchg
hlt
inc
mov
mov
adc
push
pop
or
dec
xor
add
outsl
pop
xchg
cmpsb
lahf
jo
xlat
in
jle
lahf
add
mov
outsb
outsl
add
cmp
neg
xchg
filds
push
adc
loopne
mov
pusha
pop
outsl
xor
or
fs
push
mov
mov
mov
pop
pop
out
dec
and
outsb
fwait
cmp
push
shll
xor
mov
fucomp
mov
dec
lar
addl
lret
inc
cmp
ret
push
movsb
inc
test
imul
and
sbbb
cld
rorl
adc
push
imul
inc
and
rcrl
jl
xor
and
outsl
addl
jmp
das
test
js
xchg
mov
mov
cmpsl
pop
scas
mov
test
fwait
sbb
test
nop
into
int3
lea
mov
xchg
das
fsubrs
cmpsl
cmp
add
aad
or
mov
pop
inc
jns
mov
mov
xchg
xor
addr16
test
cmp
aam
out
xor
jbe
mov
xchg
inc
inc
setle
imulb
aam
dec
stos
jns
hlt
inc
test
xchg
sahf
xor
gs
adc
jle
in
gs
scas
aaa
xlat
faddl
push
mov
sub
and
or
cmp
jmp
nop
sub
xorb
add
mov
pop
shlb
jno
and
push
pop
jns
mov
mov
jno
jne
mov
jb
mov
imulb
inc
inc
jp
lret
push
fsub
test
xor
sub
cmp
outsl
sbb
or
stos
sahf
fdivrl
mov
vpsllq
xchg
negb
mov
cmp
mov
fwait
movsl
daa
adc
push
cs
fadds
fisttps
jne
shrl
mov
sub
sbb
push
sahf
repz
mov
hlt
add
jecxz
out
mov
sti
fwait
lcall
mov
jnp
lock
jmp
adc
ja
cmp
mov
fcmove
cmp
and
int3
int
sarb
mov
jne
lret
getsec
out
jl
sbb
add
std
cmpsb
mov
inc
cmc
dec
jne
outsl
fstp
add
pop
and
mov
mov
inc
push
and
push
push
jb
hlt
jo
add
imul
push
xchg
pop
mov
xchg
mov
sbb
addr16
loope
inc
add
pop
pushf
imul
aaa
enter
aas
cmpsl
xchg
push
xor
pop
imul
push
lcall
lods
and
stos
stos
hlt
inc
jbe
push
and
add
add
adc
cs
xacquire
int
lods
cmp
sub
fs
adc
shrb
stc
or
ret
push
inc
in
jns
dec
cmp
dec
xchg
leave
mov
test
jl
leave
test
enter
inc
xorl
inc
repz
flds
add
inc
into
pop
out
jne
out
out
icebp
mov
imul
pushw
sub
adc
push
pop
mov
dec
mov
jne
xor
xor
bound
shrl
ja
lods
push
iret
cmp
call
jnp
inc
mov
loop
lcall
ja
dec
or
repz
popf
sub
mov
jmp
push
push
lret
mov
js
jmp
xchg
mov
loope
mov
clc
xlat
fmull
mov
inc
pop
into
and
inc
cmp
nop
ss
decb
loopne
jp
pop
mov
je
mov
add
mov
in
or
and
gs
mov
gs
push
fwait
cmp
and
daa
in
pop
js
int
push
fwait
sub
jae
cmp
adc
jmp
fisubl
xchg
mov
or
cmp
xor
arpl
sbb
mov
cmc
adc
push
push
mov
mov
jl
mov
mov
jae
jp
outsb
lcall
dec
inc
pop
sub
fstps
fwait
testl
and
adc
js
bound
jecxz
es
push
jno
int
ljmp
mov
sub
push
fcoml
push
btr
mov
pop
xchg
cmc
mov
out
dec
cmpsb
fimull
pop
ret
jecxz
aam
mov
dec
clc
and
fdivrs
jmp
or
dec
adc
ljmp
mov
mov
xchg
and
add
gs
push
pop
test
je
jecxz
int
sbb
das
mov
mov
insl
int
aam
inc
loopne
push
cld
repnz
test
push
mov
mov
mov
cmpsb
daa
imul
ja
subb
mov
dec
cmpsb
cmp
inc
out
pop
cs
data16
mov
test
sub
dec
xor
loop
dec
or
mov
es
lret
jns
push
das
rcr
lahf
ljmp
mov
aas
mov
call
outsb
fnstcw
xchg
push
insl
xchg
sub
mov
fstps
push
popa
mov
cli
or
jp
pop
sbb
cmp
or
mov
cmpsl
dec
sbb
sub
cmpsl
xchg
call
fcomi
loopne
xchg
sub
sbb
std
mul
hlt
cmpsb
add
je
mov
subb
xor
pop
in
fistl
out
mov
adc
ficompl
adc
das
cmpsl
test
sub
pushf
cwtl
aam
shlb
add
lret
fsubl
push
pusha
icebp
inc
les
or
add
dec
sbb
cmp
fs
out
test
pop
into
cmpsb
stc
repz
aaa
cltd
xchg
or
push
popf
fldcw
dec
push
jae
test
outsl
cmp
fsubp
jns
pop
mov
mov
stos
cli
cltd
cmpsb
and
jb
or
cmp
add
xchg
jne
in
dec
jae
scas
popa
sub
adc
into
adc
mov
adc
hlt
hlt
xor
js
sbb
xor
stos
ficomps
xchg
loopne
std
fs
fdivrs
mov
leave
or
icebp
or
inc
shr
aad
jne
mov
or
jns
push
lock
xlat
pop
add
fisubrl
icebp
mov
out
push
in
nop
icebp
rorl
imulb
cmp
popl
imul
xor
lahf
push
dec
cli
ret
cld
aad
nop
jge
cwtl
cmpl
stos
or
fsubr
imul
inc
nop
push
dec
aad
jmp
or
cmp
jns
in
popf
loop
rcrb
fdivs
ret
adc
in
out
mul
out
cwtl
pop
movsl
mov
lds
scas
fists
dec
cld
pop
test
aam
add
je
sub
push
pop
xchg
push
dec
mov
sbb
fcoms
out
xrelease
iret
cmp
sub
cmp
xlat
fmuls
pop
mov
pop
lret
mov
xor
data16
into
or
addl
jmp
dec
clc
cmovns
or
adc
out
inc
aam
mov
lret
push
hlt
out
stc
ss
xchg
cld
in
scas
sti
test
mov
jae
or
or
insl
sub
rcrb
mov
out
loop
cmp
cltd
ficompl
jmp
or
das
mov
mov
mov
aaa
cmp
sub
sbb
pop
and
mov
mov
cmp
mov
js
aaa
cmp
inc
jne
je
mov
repnz
test
outsl
and
cmp
jb
sbb
add
or
pop
or
es
mov
inc
or
sub
inc
ljmp
ja
push
sbb
loope
je
and
push
insb
test
inc
pop
repz
gs
cmp
pushf
arpl
lcall
cmp
ret
iret
out
xchg
and
and
lcall
leave
mov
push
add
sbb
jo
sub
and
rcll
dec
das
cltd
inc
addr16
cmc
mov
movsl
sbb
lods
mov
jp
les
out
mov
dec
cmp
sarl
aam
and
fs
xor
adc
xorl
cld
fnsave
loopne
lods
jno
ljmp
repz
inc
insl
fwait
cli
xchg
shrb
icebp
mov
or
lock
cmpsl
pop
push
lock
cmp
jo
dec
mov
stc
addr16
xor
xchg
cmpsl
xchg
aam
sbb
jmp
fbstp
push
repnz
ja
in
std
sub
out
dec
clc
frstor
inc
add
loopne
lret
push
shlb
js
cli
int
lods
pop
aad
dec
inc
loope
ret
dec
xchg
mov
cmpsl
dec
popa
iret
and
pop
push
xchg
shrl
jno
and
dec
mov
xchg
cwtl
test
push
cmp
add
or
insb
aas
outsb
sarl
inc
rolb
inc
setae
aam
xchg
and
pop
cmp
cmpb
hlt
ljmp
inc
out
xchg
pop
int3
xchg
fldl
pop
fwait
ret
bound
and
jbe
push
xchg
dec
push
hlt
sbbb
fstpt
sub
jg
mov
and
add
fwait
int
and
mov
mov
jle
leave
out
out
test
xlat
push
out
inc
in
dec
jl
xchg
pop
je
jnp
stc
ds
repz
clc
inc
sbb
inc
cmp
je
and
pop
fs
dec
loop
cli
mov
dec
add
adc
cmp
sbb
push
xor
lods
aad
clc
mov
rcr
movsl
sbb
shll
mov
out
add
xchg
mov
pop
add
pop
jb
or
adc
dec
outsl
sahf
popl
mov
pop
imul
add
addr16
push
cmp
fwait
scas
mov
dec
pop
scas
push
mov
jns
push
mov
pop
or
mov
cmp
add
push
out
nop
loope
adc
pushf
add
dec
insb
mov
dec
xchg
jl
nop
popa
movsl
mov
out
sbb
test
mov
sub
or
push
sbb
pop
cmp
push
jl
or
aas
or
rolw
xor
cli
xchg
sub
lods
mov
jno
cwtl
inc
and
adc
lret
mov
mov
mov
xor
push
add
xchg
adc
test
mov
lods
inc
test
andl
push
xor
pop
cmc
sarb
add
movb
or
mov
fidivl
xor
jge
jbe
mov
divb
lods
push
pop
adc
push
mov
dec
data16
lods
mov
addl
cs
sti
repnz
mov
iret
enter
add
je
sbb
add
in
std
add
lret
sbb
dec
jnp
adc
retw
xor
cmp
arpl
or
sbb
sub
adc
jl
add
xchg
fists
mov
mov
mov
sbb
out
test
cmc
add
cmc
sub
add
jne
sbb
ror
ljmp
int3
ret
mov
xchg
gs
cmp
push
xor
into
sub
in
pushf
sub
iret
push
xor
aam
icebp
insl
dec
mul
jnp
mov
cmp
sbb
xlat
inc
es
pop
xor
cmpl
int3
stos
add
andl
outsb
jae
fs
sahf
jo
loopne
sbb
push
ja
movsb
lock
insl
or
aas
rclb
ja
jmp
sahf
dec
push
leave
cli
or
mov
inc
lods
dec
loope
jns
jne
mov
movsb
mov
add
shrl
mov
lods
push
jb
mov
mov
mov
jp
push
mov
les
mov
bswap
stc
iret
jne
push
or
lds
add
adcl
lds
std
push
icebp
dec
jns
outsb
pop
sarb
rcl
out
imul
dec
xor
mov
je
insb
or
lock
mov
push
loop
inc
nop
xchg
ss
mov
sub
sti
ja
movsb
rcrb
loope
subl
lock
sbb
pop
testl
test
xor
popf
cli
out
insl
xchg
in
push
mov
in
aad
fdivs
in
in
and
jb
jecxz
dec
pusha
in
and
push
jns
adc
jb
and
out
cli
and
adc
loop
insb
jmp
testb
pop
outsl
lods
mov
xchg
in
ss
jmp
imul
jns
sarb
adc
test
pop
jle
call
loop
mov
jp
stos
call
mov
cmc
in
inc
and
dec
sub
mov
pop
in
out
and
push
push
xchg
movsb
cmpsb
jle
jmp
imul
in
and
ja
xlat
icebp
popa
cmp
mov
clc
sbb
jp
xor
cmpsb
mov
add
add
idivl
xor
sbb
data16
inc
fs
enter
lds
mov
addl
ss
mov
sub
push
mov
inc
add
xor
out
rol
aas
mov
imul
lods
dec
jae
sub
inc
xchg
fstp
jg
loopne
loopne
cld
orl
out
mov
cmp
sbb
lods
or
fisubrl
or
mov
dec
and
jo
inc
ljmp
mov
rcll
lahf
sbb
cwtl
mov
sbb
xchg
mov
mov
movsl
lods
lahf
or
sub
mov
mov
testl
sub
and
mov
ja
and
mov
push
jp
mov
out
mov
mov
mov
dec
into
notb
out
mov
cwtl
lcall
gs
mov
push
sub
xor
fadds
aaa
xor
aaa
jnp
ss
mov
xor
cmp
pop
insl
jp
fbstp
in
andb
out
pop
dec
ss
loopne
pop
dec
scas
add
ljmp
stos
jo
adc
or
adc
lds
fsts
bound
mov
ror
xor
hlt
mov
into
sbb
mov
adc
arpl
xchg
insb
add
loopne
adc
scas
in
loope
cmc
sbb
pusha
fsub
add
xor
ljmp
repz
and
in
pop
in
ljmp
push
mov
test
sub
jle
inc
lds
cmp
xchg
lea
mov
ja
movsb
push
scas
xor
mov
inc
and
dec
insl
data16
repnz
adc
sar
dec
pop
movsl
scas
aaa
mov
aam
cltd
mov
jp
jge
jp
into
ffreep
jg
xor
mov
and
xor
mov
imul
push
dec
xchg
cmp
cmp
stos
sahf
jbe
enter
jp
out
cld
lcall
enter
sbb
mov
daa
xchg
adc
pop
gs
mov
int3
pop
negl
sbbl
inc
das
inc
xchg
pop
lods
dec
add
mov
aaa
daa
movsl
pop
and
xor
call
outsl
js
inc
adc
out
scas
addb
or
mov
popf
push
mov
pop
js
call
xchg
and
cmp
mov
stos
dec
sub
loopne
out
sahf
pop
push
mov
cmp
sbb
in
rorb
std
jle
jae
lock
lock
je
lds
aam
outsb
outsl
inc
cltd
fwait
in
dec
cwtl
ficoml
in
cli
jb
les
popa
cli
inc
pop
xchg
xor
mov
jnp
sbb
andl
outsl
jl
lret
cmp
out
lods
push
std
jmp
mov
loopne
adc
sbb
les
or
aas
orb
in
xor
jnp
outsb
imul
or
fnstsw
cld
and
mov
xor
jmp
and
push
mov
pop
add
cli
repz
jnp
and
in
sub
push
jg
aam
lahf
xchg
inc
aas
popf
mov
xchg
sti
in
fs
cli
or
daa
mov
ficomps
divb
outsb
pop
xchg
subl
jo
dec
movsb
push
in
mov
aas
call
add
mov
pop
imull
cld
out
inc
sbb
mov
mov
xchg
xor
push
out
xor
dec
fisttpl
sbb
imul
xlat
cmp
push
jo
and
pusha
cmp
xor
test
stc
test
lcall
cwtl
and
and
fwait
adc
shlb
cmp
mov
mov
push
jmp
push
add
in
sub
push
jae
lret
outsb
xor
add
roll
mov
push
ficomps
nop
sbb
clc
loope
inc
out
add
enter
mov
incl
shll
scas
jae
xor
aas
dec
sub
cmp
xor
push
in
ret
lcall
mov
in
pop
inc
sbb
setae
cmp
add
popa
rcr
pop
addr16
movb
js
lahf
push
pusha
mov
xlat
mov
inc
cmp
mov
adc
scas
aam
sbb
push
mov
in
mov
out
js
jl
push
inc
cmpsb
push
add
fdivs
stos
repz
cld
shl
lcall
push
sub
loop
jecxz
cli
xchg
mov
push
in
fsubp
push
insb
mov
testb
jp
clc
cmp
pop
pushf
fcomi
xor
jbe
jl
cmpsl
in
aas
xchg
movsb
call
lcall
lret
idivb
push
les
mov
fstl
inc
jmp
mov
iret
push
sub
jbe
push
call
das
stos
lock
movsl
mov
inc
add
stos
and
addl
mov
rep
add
fs
xor
shl
xchg
cmc
ljmp
sti
std
rorb
dec
jp
imull
and
fisubl
xchg
cli
pop
jne
mov
int
aaa
inc
das
mov
loopne
pusha
sbb
enter
out
pusha
dec
pop
jmp
sti
inc
fcomp
push
push
sbb
dec
cs
xor
std
sti
stos
movsb
hlt
pushf
fwait
popf
les
jg
jns
pop
in
cmp
xchg
fmuls
mov
jl
decb
rcr
jecxz
push
les
cmp
stos
outsl
dec
sub
push
stos
loope
lret
push
mov
dec
pop
lds
mov
xchg
sub
int3
popl
test
mov
pop
jmp
jno
push
cmp
iret
and
sbb
sub
adcb
adc
imul
or
push
xor
sahf
frstor
add
pop
push
sbb
clc
inc
sbb
ljmp
cs
sub
pop
stos
cmp
mov
inc
mov
xchg
mov
or
or
push
fxam
loopne
or
mov
ljmp
or
add
jae
pop
fcomi
adc
nop
cmp
jno
pop
inc
cs
out
into
cmp
push
mov
push
mov
std
outsl
out
pop
pop
add
pop
mov
mov
shrl
pop
cmp
data16
data16
xchg
aaa
loop
cmp
inc
cltd
xchg
movsb
aam
test
push
test
mov
jnp
test
addb
leave
arpl
arpl
push
stos
arpl
daa
adc
pusha
push
sbb
xor
adc
fwait
xor
jae
icebp
xchg
fmull
popa
add
cmp
and
add
orl
in
les
aad
lock
aaa
adc
mov
das
push
hlt
inc
leave
xlat
xchg
popf
xchg
mov
jle
mov
stos
out
dec
push
movsb
sbb
mov
divb
adc
insb
push
sbb
mov
test
test
or
fistpll
mov
xchg
hlt
repz
fidivl
jne
adc
iret
xchg
insl
xchg
push
or
push
ret
sbbb
mov
add
xchg
inc
push
ds
fmul
cli
sarl
and
push
xchg
jl
les
push
cmp
daa
xlat
sub
movsb
push
cmp
inc
es
adc
xlat
nop
mov
fwait
mov
out
dec
add
push
lods
mov
cld
fwait
out
mov
out
lret
xchg
out
pop
xchg
stos
rclb
fs
lds
roll
sbb
fldl
test
test
imul
hlt
fildll
call
mov
scas
nop
pop
add
dec
aad
add
mov
sub
js
cmp
ds
stc
test
fwait
lea
test
pop
sahf
mov
cwtl
jl
jns
lock
xchg
xchg
aas
popa
lods
pushf
mov
mov
adc
outsb
add
aaa
adc
add
stc
mov
fsub
adc
es
js
lea
or
jno
xchg
sahf
pop
aas
or
mov
mov
xchg
gs
xchg
xor
enter
in
stos
int
loopne
and
pop
xchg
xchg
jo
xor
cltd
std
and
fiadds
adc
or
xor
add
mov
gs
inc
and
inc
xchg
pop
pop
dec
push
aas
rorl
add
push
dec
cltd
lret
dec
xchg
adc
jle
push
push
ljmp
pop
testb
xchg
in
mov
aam
jp
mov
jns
cmp
es
sub
sub
adc
inc
mov
add
adc
out
and
daa
or
pusha
cmpsb
jl
daa
iret
icebp
and
and
cs
mov
les
mov
mov
rcr
mov
dec
lcall
sbb
inc
and
or
push
test
mov
iret
test
lea
push
in
dec
pop
or
xchg
fadd
and
int
aas
inc
jns
jle
pop
pop
insl
xor
out
xchg
mov
dec
mov
or
rcrl
adc
mov
lds
xor
xor
and
sbb
dec
jg
cli
adc
ljmp
aaa
xchg
fbld
pushf
dec
xchg
jne
mov
push
aam
in
dec
loop
stos
gs
mov
out
lcall
jns
jmp
lds
inc
sub
out
jg
iret
clc
mov
push
push
and
in
fwait
in
mov
dec
stos
cs
call
stos
lea
inc
icebp
pop
mov
jp
inc
push
adc
lods
pushw
outsb
out
icebp
mov
sbb
sahf
repnz
jle
jecxz
mov
out
js
and
cmpsl
loope
sub
cli
jnp
xchg
pop
je
outsb
xchg
pop
mov
aaa
adc
call
fwait
and
cmp
jno
das
pop
fwait
int
cltd
cmpsb
pop
mov
into
push
pop
or
dec
filds
pop
jnp
xchg
jb
cmp
pop
lret
pop
test
push
scas
xor
leave
xor
cmp
cmc
mov
pop
dec
jno
or
cmp
sbb
push
jle
std
fwait
outsl
stos
jmp
pop
sub
lea
pop
mov
int
jecxz
or
dec
dec
sbb
ror
and
lret
xor
loope
jmp
cmp
fldenv
ficoml
fidivl
dec
mov
add
test
jmp
jns
mov
fsubrs
lcall
mov
push
xchg
dec
pop
loop
mov
daa
movsl
sbb
cmc
scas
outsb
mov
jge
cs
mov
pop
mov
sbbl
inc
pop
push
in
out
shl
inc
cmp
push
xchg
daa
pusha
xchg
fisubrs
int
jmp
rorl
mov
inc
inc
push
loope
cmpsl
outsb
sbb
xor
cwtl
outsl
popf
adc
movsl
sbbl
mov
lds
insb
arpl
cmc
push
sub
into
mov
jmp
cld
outsl
hlt
shll
add
inc
or
adc
das
arpl
daa
in
mov
in
pushf
gs
callw
xlat
cmp
outsb
fimull
loop
repnz
push
sub
test
inc
push
sub
pop
aad
fidivrl
jne
push
mov
addl
out
clc
push
push
sahf
stc
fcmovb
imul
in
mov
and
sti
inc
mov
jno
push
adc
cmp
lahf
int3
dec
movsb
sarl
lds
push
sub
add
pop
mov
and
push
dec
dec
sbb
lea
lretw
and
bound
shl
mov
and
repnz
fstl
stos
jbe
inc
js
sbb
ljmp
popa
inc
hlt
outsl
repnz
aaa
adc
adc
arpl
push
xchg
sbb
scas
enter
cltd
addr16
jecxz
push
push
and
mov
xchg
stos
aaa
fistpll
stc
or
jp
mov
xor
sahf
pop
xchg
call
push
callw
push
sbb
sbbl
push
or
ds
dec
icebp
lahf
pushf
in
pop
in
shrl
inc
adc
and
add
sub
mov
inc
scas
fs
lock
imul
repnz
mov
sbb
sbb
pop
mov
jbe
insb
rcll
rorb
mov
rcrl
fwait
or
popa
or
stos
xchg
adc
sbb
bound
cwtl
flds
and
push
dec
mov
out
xlat
xor
imul
imul
jle
mov
adc
mov
mov
xlat
lret
or
mov
fbld
dec
arpl
mull
mov
mov
cmp
cmp
jns
pop
in
and
pushf
mov
add
gs
jge
mov
sub
repnz
jl
imul
pop
xchg
mov
add
test
xchg
leave
cmp
dec
push
inc
dec
sub
xchg
ficoms
cmpsb
pushf
out
fsts
aas
inc
les
pop
mov
mov
fstl
rcll
push
int3
fiadds
xchg
ljmp
dec
add
fs
cmc
dec
ljmp
add
mov
jge
stc
scas
rcrl
dec
jle
xorb
movsb
test
fsubr
xor
cli
pop
imull
mov
jns
mov
in
push
insl
xchg
sbbb
sbb
fnstcw
mov
mov
mov
xchg
push
out
shl
push
nop
test
add
cmp
push
jae
and
into
push
xchg
push
fldt
cwtl
cmp
movsb
mov
sbb
dec
mov
push
bound
xor
cmpsl
js
add
sbb
nop
dec
and
push
adc
nop
mov
xchg
and
mov
dec
std
clc
sbb
pop
std
shl
mov
xchg
mov
shlb
insl
rcrb
dec
mov
cmpsb
fidivl
jb
insb
push
dec
cmp
mov
jae
shl
jne
push
test
pop
sub
cmp
cld
mov
and
mov
out
scas
das
out
jecxz
mov
pop
test
push
mov
loope
lea
arpl
cmp
pop
orl
xchg
xorb
test
dec
leave
dec
ljmp
ljmp
movsl
push
jmp
push
jmp
mov
fimull
adcb
push
push
adc
test
xchg
aaa
gs
mov
lahf
in
inc
and
cld
aad
cld
jp
pop
xor
and
push
les
cmp
and
out
mov
jbe
sahf
hlt
mov
add
repz
jmp
mov
inc
insl
popf
cmp
ret
pop
ds
jne
fisubrs
loop
popa
call
imul
mov
lea
enter
lret
mov
sbb
jg
sbb
rcrl
adc
outsb
cmp
sub
in
arpl
lea
xchg
ret
scas
push
test
enter
insb
xchg
rolb
rcrb
popf
push
jge
pop
lods
decl
adc
int
in
inc
add
das
xlat
sub
inc
jnp
icebp
dec
dec
out
mov
fstpl
and
jp
xchg
ret
cmp
xor
fwait
divb
lea
nop
pop
outsb
mov
jmp
in
add
cld
mov
icebp
jnp
and
xchg
cltd
dec
dec
aaa
pop
pusha
and
xlat
push
jo
test
push
mov
cmc
dec
movsb
mov
push
push
rorl
xchg
inc
jg
or
daa
or
iret
and
add
or
jge
gs
pop
aam
mov
and
xchg
cli
cmp
loope
imul
bound
mov
jmp
ds
mov
mov
cmc
or
mov
aas
pop
movsl
mov
scas
push
lret
divl
nop
dec
pop
adc
std
cwtl
into
pop
sub
jns
outsl
add
icebp
or
and
ss
xorl
fs
pop
idivl
js
sarb
push
inc
mov
add
fs
cs
sub
sub
xlat
ja
cld
cli
sub
push
popa
adc
xchg
sub
andb
ds
sbb
decl
mov
pop
and
pop
aas
stos
in
cmp
lods
mov
dec
inc
adc
cmp
sbb
add
mov
das
icebp
mov
adcb
lods
nop
mov
sbb
insl
jmp
cltd
jl
jns
cmp
push
inc
jge
notb
lock
in
sub
fyl2xp1
and
sahf
lods
addr16
rcll
scas
in
inc
lea
cmpb
jle
mov
xor
daa
cs
out
andb
sub
and
pusha
inc
in
mov
nop
xor
cmp
inc
sbb
jp
shr
push
scas
xchg
adc
out
mov
mov
xchg
mov
mov
hlt
pop
aad
pop
dec
in
out
push
fimull
sub
shrl
in
adc
push
sub
fdivs
inc
pop
jl
mov
xchg
clc
loopne
cmpsb
pop
push
mov
loop
retw
out
std
dec
jno
fldln2
test
repz
lcall
xor
cmp
cmpb
and
dec
shl
pop
int3
js
jbe
adc
inc
xor
dec
lock
xor
dec
lock
out
sbb
loopne
lret
push
int3
pop
nopl
stos
and
inc
add
jne
fs
or
inc
decb
lds
cwtl
add
mov
imul
xor
mov
hlt
push
or
mov
call
fidivrs
insl
inc
ficoml
mov
nop
xchg
xlat
inc
fcoml
ss
ret
pop
mov
ja
xlat
and
pop
je
das
lret
shll
int
scas
xchg
jnp
add
fldl
je
sti
or
inc
pop
mov
mov
or
xchg
push
push
popf
mov
mov
mov
sbb
fiaddl
decl
int3
lods
imull
rol
in
cmc
and
imul
in
push
mov
stos
dec
into
xchg
or
inc
aas
adc
sbbl
inc
sub
pop
call
cld
push
jno
add
cwtl
test
jne
lods
and
cmp
mov
sub
sti
mov
xchg
mov
push
mov
dec
or
into
loopne
dec
jns
cmp
lods
mov
jl
and
ret
jno
adc
mov
faddp
sbb
add
xchg
dec
or
mov
jbe
test
bnd
int3
mov
lret
jb
inc
or
nop
xchg
cld
mov
jbe
sub
or
arpl
cmp
stos
subl
sbb
dec
pop
mov
fnsave
dec
cmp
jg
call
cmpl
mov
das
sub
mov
jne
roll
xchg
add
xchg
push
and
scas
stos
in
iret
pop
push
into
in
out
xlat
aas
and
xor
adc
pop
push
pop
mov
push
pop
sahf
cmp
pop
pop
fxch
insl
dec
jae,pt
aad
test
stc
pop
pop
xor
mov
add
inc
mov
data16
adcb
cmovp
clc
or
loope
sub
aad
clc
inc
and
cltd
or
enter
add
mov
jp
loopne
out
add
hlt
shr
push
fidivrl
mov
andl
ja
sarb
jp
popf
pusha
cmp
ljmp
add
dec
or
negb
dec
lret
shll
sub
and
pavgw
lds
pop
add
out
cmpsl
loop
sbb
mov
jns
ret
adc
fcoml
popa
and
loope
movsl
and
or
adc
negl
mov
adc
negl
cwtl
fisttps
pop
xor
repnz
outsb
lea
push
mov
clc
sub
sbb
loope
jno
mov
push
cmc
sub
iret
push
sbb
ret
or
imul
aas
cld
or
add
adc
mov
out
ja
jmp
push
push
jp
sbb
xchg
out
sub
sbb
pop
jbe
adc
ja
daa
mov
fcomip
pop
sub
jmp
push
stc
adc
fcompl
sbbb
and
in
loopne
movsb
out
xlat
out
mov
mov
mov
push
fadds
and
pop
push
outsl
call
add
std
lret
mov
lods
int3
dec
cli
loopne
fidivs
or
jmp
mov
xchg
pop
mov
mov
mov
bound
inc
pop
xor
and
or
scas
xchg
bound
jg
jp
push
mov
mov
movsb
mov
or
cmpb
adc
int
add
leave
arpl
cmp
push
jmp
add
adc
add
dec
mov
iret
or
cmpl
xchg
rolb
stos
dec
and
pop
xchg
out
and
fistl
aaa
sub
sbb
or
lahf
les
inc
inc
out
push
mov
inc
jg
sub
fdivs
les
sbb
and
and
xlat
mov
ljmp
push
add
xchg
mov
ss
jle
sub
cmp
ss
mov
push
mov
sub
popf
loop
repz
icebp
push
xchg
mov
or
fidivs
xor
addr16
or
push
stos
add
and
inc
ficompl
cld
aaa
test
fwait
mov
push
test
mov
test
jbe
jb
xor
pop
push
xorl
fcmovbe
loop
not
stos
and
xchg
or
xor
sub
mov
call
popf
int3
xorb
repnz
inc
leave
adc
repnz
mov
inc
pop
imul
jg
lret
addr16
jmp
into
in
daa
add
js
fs
in
aaa
fiaddl
and
sbb
jae
out
aam
mov
stos
xchg
jp
push
sbb
mov
xchg
movsl
push
out
cli
mov
jge
or
dec
dec
add
or
hlt
std
pop
mov
pop
adc
es
xor
cmp
or
adc
xor
jg
jp
sub
mov
rorl
push
insb
outsl
stc
sub
fdivrs
fld
xlat
sahf
dec
xchg
xor
dec
push
add
xchg
add
in
xchg
popa
cmpl
xchg
pop
and
out
shl
iret
call
mov
xor
inc
xor
cld
xchg
out
repz
xchg
mov
movsb
mov
push
pop
aad
shlb
adc
cmp
pop
repnz
leave
cmp
lds
cmp
and
call
inc
into
test
jmp
xchg
pop
movl
in
fs
mov
loop
dec
push
shl
or
fprem1
aad
gs
push
lock
mov
xchg
ret
adc
mov
mov
sub
jle
jmp
sub
int3
mov
mov
fstp
leave
mov
or
push
add
sahf
and
orl
dec
dec
out
mov
sbb
xchg
inc
or
outsl
jp
jge
adc
shll
nop
push
add
loop
loope
add
xor
pop
lret
push
daa
test
pusha
lret
leave
jo
pop
out
jb
rorb
shrl
dec
popf
scas
fnsave
ja
pop
and
es
pop
enter
in
pushf
mov
fs
cmp
pop
negb
adcl
cmp
testl
cmpsb
sbbl
mov
dec
test
xor
cmpsl
xor
arpl
push
mov
inc
and
andb
fsubs
and
mov
dec
rcl
xchg
push
es
mov
sbb
sti
or
sbb
lret
sub
adc
push
mov
or
inc
and
cmc
je
adc
sahf
sbb
mov
in
xor
jp
add
inc
cli
push
add
negb
pop
dec
mov
adc
mov
out
jns
mov
mov
mov
in
lock
leave
jg
xchg
in
and
jmp
dec
inc
mov
dec
sahf
mull
stc
xchg
ror
cmp
loop
mov
jl
test
in
jbe
pop
lock
es
vmwrite
jae
adc
js
mov
inc
pushl
ljmp
imul
sbb
cltd
sub
push
jecxz
adc
int
sbb
sbb
pop
push
xor
dec
mov
sub
jno
jnp
mov
repnz
inc
test
push
nop
lods
inc
push
sub
pop
imul
sbb
addl
inc
scas
cli
vpackssdw
lret
xchg
add
push
cmp
cmp
cmp
fisubrl
dec
push
rcr
inc
pop
repz
shll
lahf
pop
lahf
sbb
mov
dec
xchg
fnstsw
jmp
ljmp
push
fwait
cmp
std
mov
mov
lods
push
seta
lock
lods
jecxz
leave
jg
mov
test
mov
xchg
mov
lds
jl
ljmp
pop
sub
shll
adcl
dec
cmp
test
mov
cwtl
cld
dec
and
mov
cmp
push
outsb
or
sbb
js
cmp
mov
enter
jbe
ret
stos
int3
sbbb
fwait
pusha
and
dec
adcb
outsl
xor
jmp
jae
inc
mov
jl
mov
cmpsl
dec
loopne
mov
inc
sti
sahf
jle
out
repnz
arpl
roll
mov
or
mov
jmp
jns
ja
pop
cld
sti
push
cs
dec
test
int
aas
dec
mov
mov
int3
mov
adc
subl
fisubrl
rcrl
jp
nop
push
mov
xorl
pusha
insb
dec
repz
jne
icebp
or
xchg
jae
and
fcmovu
sub
adc
or
or
mov
mov
xchg
dec
out
call
add
push
lds
jle
dec
leave
insl
xchg
fisubrs
or
xor
push
sub
fldl
lea
pusha
xor
mov
leave
jb
or
xor
test
push
std
ljmp
add
out
pop
pop
shll
lds
dec
jne
repnz
mov
mov
jnp
and
call
jne
xchg
jnp
daa
mov
xor
fcomip
mov
or
data16
rclb
into
imulb
mov
sub
sahf
pop
dec
scas
and
mov
push
int3
adc
push
fmull
repz
cmpsb
sarl
xor
sub
lock
insl
sbb
add
fcmovnbe
adc
ljmp
insl
cmp
push
add
push
jne
ret
stos
fcomi
subb
loop
cmc
adc
xchg
adc
pop
ljmp
in
mov
aad
sbbb
sahf
xchg
push
sahf
mov
mov
xlat
scas
lcall
sbb
test
xor
loope
or
or
loopne
mov
js
pop
push
outsl
jmp
jbe
sbb
fs
or
push
or
xor
inc
push
inc
jl
mov
sbb
dec
xchg
aas
adc
stos
fs
idivl
mov
push
jbe
int
inc
aas
dec
test
imul
jae
out
sbb
fmulp
inc
ja
movsb
mov
cmpsl
stos
push
scas
scas
pushf
int
lods
fcmovu
or
addl
lahf
mov
adc
mov
loope
mov
scas
lods
popf
pop
cs
leave
add
lret
movsb
mov
or
push
mov
xor
sub
pushf
inc
insl
incb
cmpsl
adc
aad
out
insl
in
stc
mov
or
call
arpl
cwtl
jle
call
cmp
push
mov
lret
adc
sti
lret
sbb
les
jb
sub
pop
mov
xor
fcmovnu
cmc
mov
mov
lcall
xorb
lahf
and
dec
jl
push
les
mov
dec
hlt
imul
cmc
movsl
loope
jns
or
or
mov
ret
jg
xchg
mov
mov
incb
ss
sbb
inc
lds
mov
stos
cmp
push
stc
lock
xchg
icebp
and
arpl
sub
in
fldt
xchg
lea
lcall
subb
ds
lds
xchg
xor
xchg
in
pop
fdiv
lds
mov
call
pop
sbb
das
and
jno
sti
inc
jg
adc
pop
insb
lret
cmpsl
std
and
dec
push
pushf
gs
jae
xchg
pop
jge
xchg
xor
mov
inc
ja
cmp
shll
inc
test
or
cmpsb
std
cwtl
add
jbe
leave
inc
psllq
mov
dec
sbb
mov
sbb
jmp
mov
sub
pop
xlat
cli
dec
stc
or
jno
pop
fld
ss
dec
out
add
lods
xchg
test
cmp
and
pop
mov
push
cmp
xchg
xlat
ret
stos
loop
ja
movsl
dec
jle
pusha
push
dec
in
sub
and
out
jle
ja
ret
imul
rcr
push
std
loop
rcll
jmp
mov
call
fsts
add
push
push
xchg
dec
xor
ret
mov
aam
ljmp
aad
dec
mov
test
jo
aaa
pushf
pop
pop
std
sbbb
insl
call
sub
adc
sbb
xchg
into
sarl
cmp
or
sub
into
or
cmpsl
out
popa
dec
adc
or
out
testb
sti
subl
cmpsl
je
mov
jne
dec
xor
and
cmp
mov
leave
mov
adc
mov
xchg
je
call
sar
lea
jle
pop
iret
repz
jp
inc
and
mov
mov
add
xchg
jne
bound
push
lods
div
jmp
cmpsb
xor
loope
sahf
mov
adc
repz
arpl
xchg
push
ljmp
xlat
enter
cmp
js
cmpsb
in
push
inc
xchg
js
add
jo
ss
test
jno
jge
lods
dec
sbb
repz
sbb
dec
inc
ds
rorl
pop
add
loope
inc
mov
cwtl
mulb
out
iret
adc
nop
cmp
ss
sub
scas
js
sub
adc
xor
pop
ljmp
cmp
dec
adc
mov
push
enter
fstpt
push
mov
lcall
add
pop
bound
dec
fdivs
push
ljmp
cmp
gs
pop
xor
mov
cmp
mov
mov
push
lret
imul
stos
sahf
cmpl
scas
sbb
xor
mov
test
stos
jno
insb
imul
in
jno
jno
daa
outsl
adc
or
jne
pop
mov
or
or
fnstsw
push
aas
mov
inc
cmp
push
mov
mov
divl
mov
xor
in
dec
divb
sbb
adcl
sbb
pop
mov
inc
test
ja
dec
push
jg
std
or
jae
jno
cmp
fbld
push
xlat
pop
push
std
pop
sbbl
outsb
cmp
adc
sub
in
lea
jb
icebp
movsl
clc
dec
sub
adc
jae
jle
cmp
mov
out
cs
stos
pushw
psubsb
sub
fidivrs
dec
adc
xor
cmp
pushf
movsl
out
je
inc
jl
mov
sub
xchg
cmpsb
and
xchg
push
pop
xchg
daa
adc
lret
adc
loop
clc
mov
mov
out
mov
out
push
ljmp
iret
xlat
dec
xchg
push
inc
pop
lock
pop
std
mov
inc
fisttpl
dec
addr16
and
std
outsl
push
dec
xchg
in
dec
cmp
sub
popl
pop
repz
fnstcw
shl
pop
sbb
and
inc
jno
adc
push
fcoms
ja
mov
xchg
in
xor
pop
nop
hlt
jo
xchg
arpl
pop
sbb
sbbl
lcall
jo
data16
fwait
test
ja
mov
mov
enter
xchg
mov
sbb
xchg
pop
mov
inc
or
cmp
adc
scas
push
sbb
mov
lret
lcall
inc
out
aaa
sub
insl
push
sub
dec
sbb
ss
fidivrs
pop
adc
push
inc
ljmp
rol
sub
jle
sbb
in
xchg
test
mov
push
inc
jmp
dec
mov
mov
adcb
mov
enter
in
stos
push
fcmovnbe
ljmp
add
mov
cltd
cmp
aad
or
out
pop
pop
movsl
testl
adcl
or
es
out
insb
cmp
gs
jp
cld
test
cmpsl
mov
incl
cmc
aaa
add
jae
les
inc
mov
jne
gs
jecxz
mov
out
aas
push
sub
int3
sub
push
lock
insl
jno
fbstp
gs
iret
dec
inc
push
or
dec
xchg
push
outsb
cmpsb
cwtl
push
fwait
imull
jns
pop
add
add
cmp
cwtl
inc
cmp
sbb
or
dec
sbb
jp
or
mov
add
mov
mov
movsl
int3
sub
jge
pushf
jecxz
andb
push
in
cmp
call
add
mov
stos
lock
adc
jno
sub
xor
xchg
cmp
mov
fsubrp
js
test
popf
mov
fcomi
mov
pop
mov
add
sbb
test
movsl
push
dec
insb
pop
mov
nop
mov
mov
loop
fsubrs
mov
lcall
rorb
in
mov
idivl
push
push
mov
std
mov
add
addr16
pop
add
ret
std
mov
scas
jp
mov
mov
sbb
push
test
or
js
mov
mov
sub
pusha
push
jae
cltd
lret
pop
and
cmp
or
or
fwait
adc
pop
sbbb
ret
ds
test
and
addr16
rolb
push
cmp
cmp
std
cmp
jae
les
sub
sub
int
push
adc
push
ja
out
lds
jo
movl
push
push
pop
enter
jns
mov
popa
leave
test
mov
inc
dec
push
ss
in
and
xlat
inc
jl
test
cmp
jo
push
aas
out
push
fwait
push
les
pop
jl
adc
or
dec
xchg
add
loope
sbb
out
sbb
jo
xchg
fmul
cmp
jg
je
or
and
push
pop
adc
xchg
push
ljmp
xor
pop
es
adc
out
sbb
popf
pop
in
xor
je
mov
cld
pusha
xchg
xor
stos
xor
push
fdivrs
jecxz
das
gs
xor
xchg
ret
out
shll
ljmp
inc
adc
push
mov
xor
pop
mov
stos
pop
ljmp
nop
add
jmp
mov
daa
pop
mov
pop
jno
jge
jg
push
dec
pushf
fstl
cmp
and
jle
push
inc
loopne
cmp
mov
lcall
cmc
push
outsb
pop
rorb
lds
pop
mov
pop
shrb
dec
xor
hlt
lahf
inc
push
imul
inc
sub
ret
popf
jno
cmp
adc
dec
adc
adc
iret
aam
sbb
in
cltd
gs
push
jle
pop
mov
adc
rorb
cmpsl
mov
xchg
pop
test
xor
lods
sti
inc
push
filds
sbb
data16
jnp
in
push
sbb
ljmp
push
sbb
jl
inc
cmp
adc
loopne
jmpw
mov
adc
hlt
cmp
cli
je
fcomp
mov
aaa
dec
jns
pop
xchg
lods
push
div
loop
stos
mov
cmp
das
pop
ss
ds
into
cmpsl
xchg
stc
pushaw
xor
loope
add
mov
mov
cmp
xor
mov
movsl
mov
jl
in
sbb
mov
adc
mov
xchg
and
stos
out
dec
stos
fsubrs
pop
hlt
ficoml
add
sub
inc
lods
lret
push
push
pop
scas
call
pop
test
fists
dec
rcrl
jo
in
movsl
icebp
ret
jno
fucom
test
inc
pop
enter
scas
shrl
inc
out
je
addr16
push
push
outsb
ljmp
add
movsl
push
dec
popa
inc
add
in
lea
fimuls
aaa
xor
mov
sti
xchg
stc
std
sbb
cmp
or
jno
sbb
les
int3
push
int3
mov
sbb
inc
shlb
inc
call
jl
push
dec
outsb
jae
jp
xchg
lcall
popf
cmp
ljmp
repnz
test
adc
es
leave
aam
xor
call
imul
and
aaa
std
pop
xchg
xchg
adc
aam
mov
aaa
adc
push
je
dec
test
mov
xchg
jne
xor
orl
mov
enter
cltd
or
fs
jg
aam
sbb
pop
lret
pop
loop
shll
std
aas
xchg
decb
xor
add
std
push
insb
pop
cwtl
pop
les
xor
sbb
xchg
mov
xor
lret
jp
adc
jbe
stos
jmp
jb
mov
cmp
mov
int3
cmp
mov
mov
int3
fisubrs
cmp
std
and
or
mov
sub
sub
dec
aaa
mov
add
aas
add
popa
adc
adc
xchg
shl
leave
mov
mov
mov
sbb
cmpb
loopne
dec
shrb
inc
loopne
mov
adc
outsl
cmc
movsb
in
popl
daa
xchg
sub
mov
aad
dec
mov
andb
xsha1
cmpsb
dec
dec
gs
pop
imull
outsb
pop
roll
shr
cmp
mov
add
adc
mov
or
pop
jg
sub
xor
mov
iret
adc
xchg
dec
dec
mov
and
nop
push
out
push
jbe
mov
shrl
shrl
rolb
lock
sub
clc
rcll
mov
loop
icebp
mov
pop
mov
addb
push
sbb
adc
cmp
jo
repnz
fmul
xlat
jecxz
in
mov
imul
xchg
jge
sbb
push
push
pop
cltd
xor
loop
jmp
add
mov
xchg
sub
jns
inc
jg
aaa
das
mov
js
mov
dec
fs
rcrl
adc
ret
mov
jne
mov
and
xor
push
idivl
adcb
xchg
or
mov
cs
neg
mov
sub
fsts
pop
int
out
xchg
add
or
lret
mov
add
pop
outsb
hlt
in
or
mov
outsl
push
adc
jo
out
add
add
jecxz
popf
adc
and
out
into
xchg
repnz
leave
xchg
pop
mov
jge
jmp
movsb
insb
push
ret
ljmp
jmp
shll
push
fidivrs
shlb
sub
iret
outsb
adc
in
or
adc
xchg
and
jmp
mov
mov
pusha
sub
je
test
mov
icebp
fs
inc
mov
sbb
cs
enter
push
test
push
lahf
fsubs
jge
cli
jge
icebp
mov
sub
int
mov
cwtl
idiv
push
shlb
cmp
dec
movsl
rorb
rcrl
les
movsl
inc
lods
inc
fnsave
xlat
jmp
test
aam
movsl
jb
stos
xchg
xchg
lret
hlt
and
clc
push
nop
loope
insl
mov
mov
hlt
jle
dec
aam
popa
ss
jbe
arpl
icebp
mov
sub
cmp
and
inc
and
stc
xchg
xchg
sbb
jl
inc
inc
std
mov
shl
dec
imul
cmp
lea
push
lods
stos
out
je
mov
repz
decb
fcomp
dec
in
sbb
dec
add
xchg
add
out
data16
lahf
notb
jo
imul
outsl
mov
mov
cmp
pop
lods
sbb
inc
shl
out
sbb
dec
jge
or
inc
mov
add
mov
fnsave
lea
daa
imul
lock
jg
movl
popf
dec
or
pop
fsts
xchg
mov
push
popl
mov
mov
ficoml
movsl
aam
shrl
push
imul
pop
les
or
into
xor
repnz
mov
pop
insl
cmp
add
add
es
pop
lock
push
pop
mov
jae
dec
out
push
push
lock
and
mov
ret
insb
jae
xchg
mov
mov
fs
push
add
sarl
mov
lret
jle
pop
cwtl
jns
jb
test
cmp
lock
inc
stos
pop
dec
mov
jns
xchg
dec
jns
ja
jns
mov
loope
pop
test
clc
inc
ljmp
pop
inc
enter
add
out
dec
pop
jge
inc
push
mov
insl
fmul
xchg
cmp
pop
add
mov
cmp
push
inc
mov
add
mov
pop
pop
scas
bound
in
dec
xchg
sub
dec
adc
fcoml
mov
cs
xchg
inc
xor
pusha
insl
sbb
std
inc
pop
push
add
in
sbb
xchg
or
mov
jl
scas
hlt
imul
repz
mov
arpl
push
into
adc
rcl
or
and
sbb
out
in
rclb
mov
jne
push
jne
and
pusha
pop
test
scas
push
push
dec
lds
fwait
cltd
mov
dec
es
inc
addr16
mov
cld
fxch
ljmp
test
stc
mov
movsb
lret
fnsave
pushf
lods
leave
dec
dec
hlt
dec
push
push
cmpsb
adc
lahf
repz
sub
inc
pop
aam
fwait
xor
pop
adc
and
xor
xchg
scas
pop
or
leave
cs
stos
push
iret
push
push
loope
sub
lcall
aas
sti
xor
xor
mov
dec
inc
lds
fcmovu
pushf
jecxz
stos
pop
loopne
in
xor
sti
mov
push
push
iret
mov
nop
xchg
insb
adc
xchg
push
aaa
les
sub
cltd
jecxz
mov
xchg
push
stos
mov
and
xor
push
cwtl
push
mov
adcl
pusha
dec
cmp
loop
xchg
mov
add
sbbb
fwait
sub
cli
cld
add
lods
cmpsl
aam
lret
cmp
mov
and
xor
repz
arpl
jo
mov
lods
mov
adc
mov
push
add
sbb
test
mov
inc
das
xor
cld
icebp
rol
mov
popf
inc
insb
mov
xchg
in
cmc
adc
fnsave
jl
or
jbe
cmpsl
mov
sar
or
xor
adc
mov
pop
cltd
mov
and
dec
adc
inc
mov
iret
and
or
stos
cld
nop
mov
data16
jnp
arpl
lret
add
jmp
xor
adc
pop
or
arpl
gs
or
and
inc
xchg
dec
cmp
push
mov
push
stc
fdiv
add
test
popa
sbb
or
mov
subl
mov
cmc
sub
arpl
jmp
jbe
fidivs
mov
mov
jle
sbb
pop
int
scas
jno
cmc
pushf
jo
or
repz
mov
mov
xor
add
cmp
pop
xlat
push
and
jecxz
inc
mov
jle
mov
adc
push
mov
jno
imul
and
arpl
mov
mov
lcall
imul
es
jno
aas
xor
data16
loop
cltd
pop
cmp
test
into
cmp
cli
or
notb
xchg
popf
loope
rep
pop
out
adc
xor
push
idiv
in
pop
ror
mov
nop
scas
enter
jl
sahf
inc
cwtl
adc
add
insl
push
js
add
pop
lahf
insl
dec
lock
sub
lods
add
in
jo
inc
inc
and
mov
leave
xor
inc
xor
int
lods
daa
xchg
lock
mov
ljmp
imul
ljmp
fcos
dec
sbb
test
inc
add
and
mull
js
jecxz
add
and
mov
sbb
out
lds
mov
mov
mov
mov
dec
xchg
and
cld
mov
hlt
sbb
in
popf
cld
cmp
lods
das
xor
xchg
rorl
add
dec
push
xchg
or
mov
lea
lods
inc
mov
cmp
inc
popl
cmp
push
xchg
fldenv
inc
fisttps
or
enter
mov
cmpsl
xchg
les
mov
push
mul
mov
call
ja
es
jecxz,pn
jl
repnz
movsl
push
sahf
cmpsl
icebp
popa
fcoms
gs
mov
pop
lcall
pop
cmp
cmp
mov
ja
xchg
pop
fildl
push
stos
dec
cmp
fstpl
adc
loop
push
les
cwtl
sbb
adcb
daa
mov
scas
js
ljmp
add
mov
mov
mov
sub
push
mov
dec
sub
pop
pop
cmp
jmp
pop
loope
sub
aad
pop
ja
inc
cmp
lret
sub
cld
jo
arpl
sbb
jle
lret
push
adc
cltd
sub
jl
pop
and
dec
repnz
in
cmc
xor
xchg
daa
cli
iret
xor
jb
cwtl
jmp
sbb
jb
ret
dec
cmp
int3
or
cmp
push
sub
adc
add
inc
pop
sub
iret
fwait
mov
mov
inc
push
inc
aas
sbb
dec
dec
sub
pop
or
aam
and
pusha
inc
push
call
pop
mov
sbb
inc
fmull
or
jmp
loop
repnz
ja
xchg
mov
test
or
and
daa
in
out
iret
repnz
repz
mov
sahf
cmp
pop
and
lret
mov
mov
cmc
imul
push
dec
push
fiadds
pushf
push
jmp
add
xchg
xchg
leave
sub
js
aad
sub
cli
push
aaa
fdivp
fsubrl
test
push
leave
xchg
mov
stos
cs
jno
xchg
out
push
xor
fisttpl
outsl
in
inc
outsb
enter
or
cmpl
sub
cmp
movsb
jle
cmp
cmp
cltd
rol
push
arpl
jbe
addr16
sbb
test
inc
push
pop
ja
jo
enter
or
daa
push
pop
push
test
mov
addr16
push
imul
jmp
lret
cli
and
test
lock
std
push
push
adc
lods
dec
arpl
ret
or
cmpsb
push
testl
push
xor
and
call
xchg
out
sub
les
xor
aas
aam
add
mov
fistpl
aam
mov
jbe
scas
dec
lret
xor
xchg
push
mov
les
mov
adc
ds
jg
push
and
repz
sub
jg
pop
movsl
adc
and
mov
xor
adc
int3
fucomp
out
jne
dec
inc
push
cld
data16
cmp
pop
mov
out
gs
push
pop
in
push
mov
ret
shll
xchg
sbb
add
dec
fwait
cmc
ret
clc
push
shll
xchg
sti
adc
dec
sub
sub
xor
dec
push
xchg
cmp
jae
lret
jg
in
dec
loop
rcl
aam
leave
lea
mov
sbb
xlat
or
xlat
lock
xchg
es
shll
ror
xchg
jg
popf
stos
sti
jno
mov
cmp
xchg
mov
insb
fucomp
cmpsl
ljmp
adc
lcall
adc
and
jno
aas
push
dec
xor
inc
jnp
scas
fs
xchg
stos
sahf
adc
insl
das
je
aas
arpl
mov
in
je
lcall
add
pop
mov
call
int
jns
mov
add
add
lock
adc
mov
out
xchg
xchg
lret
mov
or
pushl
sub
xlat
std
andl
mov
mov
jge
pop
xlat
test
lret
sbb
test
das
int3
clc
cltd
xchg
sub
ret
pop
xor
mov
mov
jo
mov
mov
ret
ss
jmp
cs
push
mov
mov
mov
cmpb
xchg
enterw
fnstenv
sbb
add
orl
nop
mov
iret
mov
or
xorl
aas
outsb
rcl
sub
stos
aaa
dec
imul
lods
add
das
add
les
ljmp
dec
sub
rcr
lods
cmp
cmpsl
jg
ds
daa
xchg
fistpl
les
fnsave
cltd
cmpsb
je
xor
insl
ds
fwait
repz
jmp
mov
rorb
pop
loopne
imul
push
inc
pop
xor
lods
add
les
lods
jno
iret
xchg
ds
xchg
push
fs
mov
add
inc
lcall
mov
repz
andl
add
mov
divb
jp
lds
sarl
sbb
test
in
mov
inc
cmp
shrb
sbb
cmp
sub
add
pop
push
or
jbe
mov
and
data16
add
add
mov
in
and
lahf
push
dec
mov
jb
pop
and
pushf
int3
lds
fsubrl
imul
jmp
xor
gs
lcall
lock
cltd
add
ja
or
mov
popf
inc
sub
sub
not
mov
push
jmp
es
les
jmp
jle
and
js
jge
outsl
pop
sub
cli
mov
into
daa
xchg
cmp
mov
add
roll
xchg
mov
addr16
inc
add
aad
lahf
cmc
add
rcl
xchg
jg
add
aaa
lcall
add
nop
and
fadds
mov
jg
cmp
xchg
daa
lret
xchg
lds
and
test
or
push
popa
cmp
stos
mov
xchg
sbb
repnz
inc
pusha
adc
jb
xchg
adc
inc
shlb
or
or
iret
fwait
sbb
stc
add
std
dec
nop
cmp
dec
pop
lods
fbld
push
adc
add
sub
bound
in
add
loopne
adc
psubw
shl
repz
push
ret
mov
adc
rorb
inc
dec
int
les
pop
dec
push
ss
ljmp
or
xchg
rcr
cmc
gs
fxch
xor
popf
scas
push
out
cmp
out
pushf
sub
movsl
fdivs
fstpl
cmp
arpl
mov
pop
dec
dec
xor
scas
mov
in
lods
leave
fisttpl
int3
sub
stos
repz
dec
sub
out
mov
icebp
mov
jg
clc
outsb
jb
dec
cmp
mov
mov
punpcklwd
das
add
xchg
shl
adc
mov
cmp
jge
testl
inc
jecxz
insl
xchg
pop
sub
fstpt
std
insl
pop
or
jle
ss
fwait
imul
je
sbb
xchg
and
pop
repz
adc
in
jae
repz
imul
clc
outsb
int3
push
push
xchg
pop
pop
in
add
stos
pop
cmpl
and
out
pop
into
popa
idiv
lds
xchg
push
rol
pushf
push
aad
hlt
stos
outsb
push
test
bound
shrl
xchg
and
jle,pn
jle
nop
push
add
push
or
lods
inc
push
sbb
mov
jae
int
jo
adc
ss
dec
inc
xchg
aad
push
inc
mov
fildl
jbe
sub
adc
cmc
jmp
imul
jle
mov
push
and
cwtl
mov
mov
or
xor
cli
mov
xchg
push
mov
aam
sub
adc
jbe
mov
ds
or
in
nop
or
xlat
mov
popf
ljmp
sbb
inc
leave
je
insb
insl
idiv
fs
es
cmp
and
mov
stc
fcoms
mov
nop
push
cld
xor
inc
ret
mov
out
fimuls
adc
cmp
add
outsb
fsub
or
push
add
shrb
mov
test
jge
pop
mov
adc
iret
decl
pop
arpl
adc
xor
xchg
pop
cmpxchg
dec
jo
xchg
inc
cmp
fisttpl
jne
jns
orb
cld
enter
pop
in
insb
add
dec
mov
imul
add
jb
adc
jle
sbb
or
and
dec
cltd
mov
pop
ss
add
xor
xchg
jb
fisubrl
add
sbb
es
xor
push
lods
push
les
in
mov
repz
movhps
cmpsb
ret
shlb
jmp
mov
imul
push
jge
fst
inc
loop
pushf
inc
stos
pusha
test
imul
xchg
sub
dec
cmp
sub
inc
data16
push
pop
test
pop
negl
sbb
fisttpl
cmpb
mov
ret
mov
mov
xor
push
sub
lock
sub
adc
xor
inc
fnstenv
repz
or
cmpl
mov
sbb
clc
and
pop
ffree
xor
jno
int3
rcrl
dec
cmpsl
add
leave
dec
loop
shlb
mov
push
cmp
pop
lods
repnz
pop
adc
or
popa
shrl
or
sub
movsb
call
jo
out
lds
lret
test
mov
out
pop
mov
cmp
es
cld
into
jl
je
insb
push
fiadds
mov
and
jl
in
and
ret
mov
push
pusha
data16
aaa
lea
aaa
je
xchg
xor
and
shr
nop
xchg
push
adc
enter
push
aam
fisubs
cmpsl
mov
xchg
push
int
cmp
shlb
popa
jae
inc
std
pop
xor
xchg
gs
fcoms
iret
aam
sbb
sub
inc
jnp
push
xchg
mov
js
out
pop
jnp
and
sub
rcl
adc
push
xchg
xchg
pop
xor
imul
data16
popf
and
testb
mov
shlb
inc
push
push
hlt
subb
mov
outsb
inc
ljmp
and
cmp
cmp
xchg
sti
pop
imul
push
lcall
push
in
imul
and
inc
xor
movsb
mov
mov
ret
movsb
clc
outsb
loop
sbb
sbb
call
imul
jle
fwait
dec
in
and
cmp
inc
sub
cld
repnz
cli
daa
sbb
mov
inc
out
and
add
ljmp
mov
jp
push
jnp
xchg
fsts
call
inc
faddl
jle
lds
sub
sub
lcall
mov
mov
mov
sub
dec
lock
pop
jno
jb
mov
jb
enter
sbb
push
shl
daa
sbb
pop
out
fsubrl
cltd
add
xor
fwait
cwtl
inc
daa
mov
rorl
cmp
jg
mov
fstpt
mov
lcall
mov
inc
mov
pop
and
cmpsb
repnz
push
inc
in
leave
jmp
push
outsb
jmp
int3
bnd
mov
jle
jecxz
lret
jbe
or
xor
mov
mov
xor
mov
xchg
sbb
dec
or
addl
lcall
mov
mov
jae
xchg
fstpt
imul
jmp
cmp
add
xor
add
add
rcrl
sahf
ficoml
mov
mov
jg
cs
inc
dec
jmp
adc
jmp
cmpsb
iret
push
xor
fimull
lret
push
and
xchg
test
jno
xchg
xchg
out
adc
xor
shll
mov
loope
int3
je
mov
xchg
cmp
inc
adc
in
add
js
repz
roll
out
sti
mov
fnstcw
xor
mov
std
leave
dec
ljmp
lcall
or
testb
mov
data16
iret
sbb
sti
xchg
mov
push
shl
or
push
int3
rorl
out
mov
push
mov
in
outsl
xchg
jae
cwtl
stc
cmpsb
subl
popa
in
jae
inc
push
fs
sbb
enter
cmpsl
jns
adc
inc
xor
loopne
dec
cmpsb
cmpsl
sub
cmp
imul
adc
and
push
jae
lock
mov
jns
xchg
sub
cmp
or
cmp
mov
xchg
scas
es
adc
lods
xchg
in
out
scas
popa
lahf
pop
xchg
lea
ret
nop
test
xor
testl
adc
jle
inc
or
cwtl
push
mov
push
mov
data16
sbb
lea
imul
imulb
cs
xchg
es
sub
mov
push
inc
in
and
push
cmp
sti
fdivrs
in
leave
lds
jecxz,pt
add
add
jmp
gs
fs
push
sbb
scas
inc
rcll
cmpsb
outsb
aad
xlat
and
mov
xchg
lret
cltd
cmpsb
insl
pushl
xor
pop
pop
in
mov
cld
jne
iret
lea
xchg
push
mov
adc
mov
jnp
neg
xchg
push
cmp
cld
xchg
iret
and
in
ds
daa
mov
push
int3
mov
mov
outsb
add
and
dec
lret
cmp
push
lock
xchg
int3
pop
js
std
popa
dec
insb
inc
lret
sub
jo
jle
sbb
mov
pop
pop
imul
lret
scas
int
adc
xchg
jo
out
in
daa
hlt
inc
cwtl
dec
dec
cmpsb
lock
test
mov
push
sub
cwtl
lcall
add
add
inc
add
fidivrl
inc
cmp
or
add
inc
popa
sbb
cmp
inc
push
ret
mov
mov
cmpsb
ds
adc
inc
mov
cmp
loop
fisttps
mov
sbb
ret
lcall
leave
lock
cli
popf
ret
jb
and
add
into
pop
sub
sti
fistpll
ja
add
jg
dec
jne
dec
inc
pop
mov
pop
inc
rolb
aaa
and
lret
sbb
pop
out
and
dec
ja
jbe
mov
insl
dec
inc
sbb
dec
in
lods
insb
movsl
ds
pop
bound
inc
cli
jle
sar
fstpt
movsl
add
sahf
lret
adc
inc
inc
aad
or
jae
sub
xchg
lods
add
xchg
xor
xor
jno
ret
adc
sbb
xchg
sbb
mov
push
xchg
rcll
das
cmp
daa
or
leave
push
add
repz
shl
mov
int
out
mov
xor
adc
lcall
inc
dec
ss
mov
cmpsl
mov
pushf
or
cmp
nop
cmp
fs
adc
in
lods
shlb
inc
cmpsb
in
dec
add
outsl
je
or
mov
mov
add
outsb
or
adc
in
xchg
xor
pushf
pushf
cmp
cmp
aam
dec
inc
push
popf
jmp
leave
js
iret
lret
in
idivl
mov
loop
sub
jns
out
sbb
mov
popf
lea
out
fstpt
aam
mov
jl
dec
lds
and
iretw
pop
push
sub
jno
sub
and
int
dec
outsl
in
loope
jmp
stc
ss
leave
add
sub
cld
add
test
das
push
cmp
aaa
andb
enter
lret
xchg
ljmp
sub
mov
inc
cltd
inc
mov
xchg
sbb
push
push
inc
xlat
jo
fwait
xchg
out
aaa
sahf
aad
stc
adc
jg
jl
test
test
xor
xchg
stc
mov
dec
loopne
adc
stos
mov
xchg
xchg
xor
scas
dec
mov
adc
loopne
jecxz
in
lcall
mov
and
xchg
jl
jmp
popa
scas
pop
bound
loop
inc
mov
xor
inc
mov
xchg
dec
xchg
cmp
movsl
push
cmp
sar
mov
jb
or
add
dec
hlt
mov
insl
in
out
lret
jbe
inc
xor
xchg
and
ret
and
inc
insl
mov
lret
inc
adc
fisttpl
sahf
jl
data16
daa
mov
xor
lret
rcll
int
push
int
xor
int
sbb
outsl
repz
mov
into
sahf
test
scas
idivb
out
testl
dec
movsb
out
lret
push
fisttpll
fiaddl
aaa
sub
or
fisttpll
loop
xchg
sub
inc
mov
and
or
lcall
out
mov
enter
imull
aaa
xchg
lock
icebp
lahf
mov
jl
sbb
xor
xor
mov
or
loopne
sub
dec
lret
insl
pop
add
addr16
push
pop
lahf
in
in
shll
cmp
sbb
push
jo
and
inc
sbb
sub
inc
das
adc
mov
pop
push
in
push
and
cs
or
aad
rclb
rcl
mov
xchg
stos
pop
lds
repz
loop
loope
mov
in
pusha
cmc
add
dec
push
push
jne
dec
stc
jbe
xor
inc
or
and
jecxz
lods
fidivs
add
add
add
push
cltd
imul
cmp
inc
jge
subb
nop
cwtl
dec
lea
push
xor
jb
xor
and
mov
ret
push
pop
pop
popf
test
addr16
mov
shl
lock
adc
jmp
inc
dec
dec
push
shl
inc
sbb
xchg
dec
clc
adc
loopne
mov
mov
cwtl
mov
test
cmpsl
inc
push
sub
mov
jmp
xchg
js
xor
adcb
jl
imul
movsb
rcr
cmc
pushf
aaa
xor
jb
leave
pop
jmp
pushl
sbb
cltd
dec
mov
inc
lret
inc
xorl
sub
popa
xchg
rorl
loope
insb
fcomi
dec
mov
pop
dec
dec
jmp
mov
jl
dec
ficomps
pop
jno
loop
sahf
xorl
out
inc
shlb
test
fstl
mov
pop
ja
adc
fcoms
call
inc
int
cmpsb
repnz
push
and
dec
fbstp
mov
mov
int3
pushf
xchg
shll
mov
fstpt
sub
add
push
xor
arpl
out
std
add
add
out
movsl
push
int
ja
push
jp
pop
or
jno
in
aam
aad
loope
lret
lods
dec
cmc
adc
jle
imul
ret
pop
xor
push
pop
inc
add
lock
push
addr16
cwtl
xchg
jmp
fnstsw
mov
adc
cmp
dec
cli
cmp
mov
mov
push
leave
scas
add
int
repz
js
inc
add
push
lahf
xchg
adc
dec
or
aam
mov
pop
jbe
std
cltd
fldt
jg
inc
push
pop
ja
and
pop
cmpsb
test
or
adc
fbld
push
gs
cmpsb
mov
adc
xor
das
bound
sbbl
popf
mov
mov
arpl
fsubrl
or
cmp
dec
fxch
sub
insb
adc
xor
cs
and
out
cmp
or
test
call
imul
add
loop
stos
jge
aaa
cltd
in
nop
and
stc
mov
inc
les
in
cmp
jb
int3
bnd
xor
leave
leave
mov
jno
fimuls
push
pop
gs
xlat
add
push
xor
mov
and
add
sub
movsl
jb
es
inc
gs
test
mov
xchg
xlat
pop
lret
xchg
mov
in
cltd
xor
xor
push
aam
dec
xorl
jno
std
into
daa
jo
push
or
mov
arpl
push
in
add
dec
mov
insb
cmpsb
adc
shrb
iret
xor
xor
dec
push
jbe
loope
vmovntpd
xchg
jb
jg
push
mov
mov
clc
test
add
lods
pop
icebp
jne
mov
pop
inc
pop
out
jp
jp
std
jo
mov
and
mov
push
les
push
repz
ret
mov
jae
int
inc
and
xor
inc
test
or
mov
das
les
cmpsl
imul
inc
ja
mov
dec
mov
xor
shl
and
imul
std
xchg
jo
xor
mov
stos
jnp
lds
sbb
cmp
sub
inc
mov
push
sti
xor
sub
out
scas
sub
out
xchg
or
dec
adc
mov
or
inc
pop
jb
insl
dec
sbb
inc
insl
loopne
or
insl
sbb
enter
lods
scas
lds
jmp
iret
int3
iret
seta
mov
xor
lret
orb
inc
pop
data16
dec
push
js
push
ljmp
sbb
rcl
xor
cmp
push
push
out
or
and
mov
xchg
dec
xor
int
mov
popa
or
stos
inc
xchg
pusha
imul
ds
loope
lods
enter
mov
mov
scas
sahf
mov
loopne
xor
push
cwtl
mov
mov
jbe
bound
xchg
cltd
movsb
mov
arpl
jb
push
and
das
mov
xor
lock
je
adc
lret
jg
xchg
fmull
loop
jp
jl
faddp
push
push
pop
pop
mov
mov
lea
sbb
fwait
mov
sub
mov
push
push
dec
aad
pop
mov
out
jl
and
aas
dec
clc
popa
add
shlb
pop
sub
jns
dec
mov
add
popf
loope
outsb
cmc
mov
lock
icebp
or
adc
inc
sbb
imul
sbb
dec
add
loope
lahf
fisttps
addr16
pusha
lock
and
add
pop
cmc
lahf
inc
xor
subb
call
adc
lds
push
insl
mov
cli
adc
or
xchg
stos
jg
xchg
lods
fadds
xor
les
shrb
jns
ret
jns
jne
fdivs
loope,pn
idivl
fld
and
mov
mov
add
dec
jmp
out
test
pop
dec
stos
dec
ljmp
jo
jge
es
pop
cmpsl
lahf
cmpsl
mov
push
daa
pop
leave
test
mov
cmp
jo
inc
ljmp
cld
test
pop
jp
pop
pusha
gs
jp
cs
fwait
es
and
mov
adc
repz
loope
and
scas
jbe
movsl
fsubrl
mov
jnp
and
notl
jp
inc
out
sbb
push
mov
push
mov
mov
pop
jmp
and
jecxz
and
lret
pop
adc
lock
mov
dec
incb
ljmp
fwait
sahf
mov
inc
xlat
add
cmp
mov
mov
or
mov
add
jnp
push
jo
idiv
dec
inc
cltd
nop
imul
subl
push
adc
dec
adc
inc
pushf
cmp
add
sbb
out
mov
pusha
dec
or
sub
test
xchg
xor
and
mov
push
insl
aam
mov
xchg
loope
fstpt
test
std
xor
arpl
dec
xchg
lahf
mov
adc
aad
sub
mov
push
test
xor
cmp
in
lods
out
popa
clc
enter
dec
jnp
sbb
sti
das
aas
sbb
fcoms
out
xlat
adc
out
fistl
push
repnz
sub
scas
imul
aad
imul
clc
cltd
test
cmpsb
imul
and
mov
pop
ljmp
sub
sti
jp
jb
inc
jno
xor
jnp
out
aam
mov
insb
enter
jnp
mov
into
ficoml
out
push
mov
daa
fsts
bound
and
stos
push
in
xor
lea
add
mov
xchg
loop
mov
jns
dec
and
xchg
das
insl
add
and
lods
pop
cld
inc
pop
int
daa
test
pop
xor
jae
cmp
ret
notl
or
jmp
mov
and
push
loop
adc
call
mov
push
insl
leave
outsl
mov
inc
mov
pushf
daa
das
leave
cmc
sbb
bound
xor
add
data16
dec
and
add
shl
out
jo
cmpsl
mov
stos
aam
pop
pop
and
sbb
test
std
xchg
dec
or
mov
fistps
pop
jmp
push
sbb
sarl
pop
cwtl
sbb
cs
jne
aaa
push
pop
sbbb
das
pop
jb
repnz
loop
pop
popa
sbb
rolb
xchg
mov
mov
imul
les
loope
push
mov
or
xorb
jp
or
into
jb
push
xchg
push
nop
les
int3
pinsrw
enter
pop
ficomps
xchg
inc
push
mov
int
pop
test
fisttpl
pop
push
int3
repz
dec
loop
cmc
test
into
pop
cli
out
mov
repnz
jbe
rorl
push
ds
or
in
mov
insl
push
pop
pop
in
call
sub
or
add
inc
dec
fidivl
jge
ffreep
mov
cmpsl
push
movsb
jae
mov
les
out
es
iret
inc
adc
out
das
enter
inc
mov
ja
xor
or
or
sbb
push
jge
mov
inc
sub
ss
bound
fiadds
stos
lods
and
push
xor
and
cmc
mov
sub
fiaddl
das
int3
ss
sub
ds
ljmp
ja
arpl
insl
sbb
test
out
leave
fstp
ret
cmp
mov
insl
adc
incb
dec
dec
jno
insl
xchg
mov
or
test
imul
xor
mov
insb
lods
scas
push
rolb
repz
mov
rcll
jp
push
xor
or
pop
sbb
cmp
dec
and
ljmp
ficompl
test
es
int
push
dec
xor
imul
aad
xchg
xlat
cmp
test
addl
lods
cmpsb
sub
adc
sub
push
mov
xor
adc
into
mov
loopne
mov
pop
push
popf
or
push
rcr
outsb
dec
sahf
or
xchg
jmp
cmp
or
jg
sbb
loopne
dec
sub
dec
mov
adc
add
arpl
push
out
std
and
inc
xchg
push
lods
adc
push
ja
aad
shlb
and
push
add
dec
shlb
jecxz
mov
push
loope
push
stc
out
frstor
sbb
popf
cmpsb
mov
in
mov
and
push
dec
mov
imul
dec
xor
hlt
mov
lahf
mov
lea
and
lret
inc
sbbl
cmpsl
out
lods
inc
mov
push
in
and
inc
mov
lods
aad
repz
inc
cmc
push
cmpsb
stos
stc
push
aam
inc
and
mov
cld
lock
dec
add
mov
lret
pusha
popf
loop
jmp
mov
sbb
add
fadds
insl
sub
or
out
xor
xchg
mov
repnz
mov
iret
ficoms
mov
xchg
xchg
sub
dec
sahf
sbb
in
fildll
mov
lods
sbb
cwtl
icebp
sbb
aaa
push
sub
lcall
dec
pop
dec
cmpsb
loop
push
ljmp
arpl
pop
mov
push
mov
sub
jge
std
mov
imul
loop
in
fsubrs
inc
data16
xchg
gs
fcmovnb
fs
test
mov
and
sbb
fs
in
lcall
rcr
test
sarl
adc
mov
mov
call
lret
xor
sub
dec
sub
lahf
test
mov
pop
cmp
and
push
sub
adc
rcll
and
sti
in
adc
cltd
jecxz
or
jle
sub
xchg
rcrb
out
popa
mov
xchg
testl
sahf
push
ja
ja
out
inc
sbb
sub
fadds
or
dec
add
cmp
aas
or
loope
fwait
cmc
inc
sub
popf
xchg
test
clc
add
lods
out
mov
pop
xor
mov
out
xchg
std
xor
cwtl
inc
icebp
lahf
dec
xor
nop
loope
jge
sub
pop
sbb
ficoml
push
or
adc
push
inc
das
aaa
outsl
jmp
or
dec
gs
icebp
mov
jmp
fimuls
mull
mov
xchg
icebp
cmp
jo
jno
jne
xchg
andl
loope
clc
cpuid
orb
mov
orb
xchg
jne
xlat
out
adc
adc
addr16
dec
imul
nop
in
mov
bound
mov
push
shlb
out
dec
fldenv
push
cs
push
aas
popa
push
mov
cmp
out
push
and
adcb
mov
lds
pop
pop
inc
inc
mov
add
cmpsb
dec
sub
push
add
push
mov
out
sbb
call
xchg
mov
int3
xchg
fildll
push
fcos
daa
call
sub
mov
imul
int
scas
cld
jp
add
push
sub
test
daa
rclb
int
jo
xchg
pop
testb
fwait
xchg
popf
xorl
jnp
adc
pop
pop
fcoml
movsb
add
push
enter
cmp
xlat
sti
fisubs
cmpsb
je
xchg
fiaddl
adc
and
scas
hlt
mov
mov
jbe
sub
jns
add
movsb
add
in
mov
push
mov
adc
fnstsw
dec
sbb
adc
addl
arpl
ret
xor
imul
sarb
scas
jle
xchg
mov
or
cmp
out
pop
movsb
xchg
jmp
pop
mov
fs
dec
fcmovb
into
andb
mov
cmpsl
mov
adc
mov
mov
sub
fadd
jo
lret
filds
sbb
mov
cmpsl
mov
jns
ret
aas
jecxz
mov
test
icebp
cli
fiadds
mov
adc
dec
mov
mov
aam
mov
mov
jge
cmp
fcoml
call
lahf
dec
pushf
stos
inc
loop
jae
scas
cltd
or
push
hlt
mov
roll
sbb
test
mov
notl
fs
stc
lcall
lret
sub
movsl
test
lods
push
les
dec
jns
jo
xchg
je
popf
aaa
xlat
std
pop
mov
outsl
and
mov
mov
repnz
ret
cmpb
ds
xor
jl
dec
mov
fs
or
mov
subb
mov
addr16
cmp
loop
cmpsl
mov
cmp
jmp
push
mov
adc
or
jae
ret
sahf
imul
sar
pusha
sub
cmp
push
in
pop
int
jmp
dec
pop
pop
push
ret
icebp
and
and
or
dec
or
and
push
mov
cltd
shlb
movsb
sbbb
outsb
stos
cld
shrl
out
mov
mov
sarb
test
sbb
sbbl
mov
pop
cmp
call
sbb
enter
cmp
pop
cmpsb
gs
into
enter
mov
aad
or
ret
mov
or
inc
hlt
pop
inc
decl
iret
les
and
cmpl
cwtl
movsl
pop
outsb
movzwl
push
dec
add
lods
aaa
outsl
inc
jnp
inc
arpl
inc
sar
push
mov
mov
je
fdivrs
add
cmp
fisubrs
add
sahf
pusha
mov
jmp
hlt
jmp
lock
loopne
and
push
add
repz
jae
es
addr16
mov
jmp
jns
push
test
pop
pop
inc
add
int3
stc
arpl
testb
cmp
xor
inc
push
jge
xor
lods
xor
xchg
push
mov
mov
in
bswap
ss
dec
cmp
dec
mov
int3
pop
nop
rorb
iret
pop
dec
jecxz
mov
sub
fwait
and
xor
xor
jne
sbb
mov
insl
sahf
or
rorl
adc
cmp
xor
daa
inc
lret
movsb
mov
addr16
shlb
pop
inc
inc
sbbb
push
dec
push
int3
and
scas
and
insb
addr16
sarl
leave
mov
mov
iret
stos
cmp
test
xchg
std
repnz
push
cld
pop
lods
pop
fs
pop
xchg
sbb
pop
push
sub
insb
adc
in
and
pop
icebp
sbb
fiadds
jnp
mov
xchg
mov
xor
test
adc
mov
fcomp
popa
or
scas
mov
add
ret
dec
popf
bound
lods
adcl
pop
bswap
push
mov
push
jle
mov
jp
mov
out
or
aam
call
sbb
fs
xor
cmpsb
bound
xchg
mov
fisttpll
or
pusha
cmpsb
jo
cld
imul
dec
outsb
or
les
repz
andb
daa
cld
lds
lahf
mov
and
lret
inc
inc
push
mov
push
and
adc
icebp
xchg
xor
and
inc
mov
jnp
movsl
jae
push
ds
pop
add
cmp
push
stc
test
add
inc
add
push
fistps
xor
mov
sti
pop
cmpl
out
sub
pop
inc
or
negl
or
xchg
sbb
mov
loopw
jge
xor
aam
sbb
and
cmpsl
ret
add
cmp
jge
cmp
repz
aas
dec
pusha
cs
mov
mov
dec
fisttpll
addl
lcall
outsl
inc
bound
ja
enter
push
xchg
cmp
jp
mov
je
lock
cli
ds
mov
dec
aad
mov
xor
dec
int
and
jnp
and
fstpt
hlt
ret
mov
leave
js
jns
mov
pop
sub
fnstsw
in
es
add
mov
sbb
fsubp
addb
sub
jmp
add
sbb
xor
mov
loope
ds
fldt
scas
add
xchg
push
jl
xchg
out
outsl
sub
jno
enter
jnp
shlb
adc
sbb
xchg
mov
aam
popa
aas
adc
xor
call
cmp
inc
call
mov
mov
insb
push
xor
mov
or
aaa
out
daa
xchg
mov
jp
test
imul
jb
ret
inc
in
in
fdivr
xor
jo
sub
ret
fistpll
ret
icebp
mov
mov
aad
stos
jp
mov
push
adc
mov
sub
ret
in
lret
call
push
pop
and
mov
sub
out
adc
out
xchg
xchg
dec
cmp
sbb
aaa
pop
sarb
nop
orl
inc
push
cmp
das
xchg
xor
mov
xor
and
loopne
mov
pop
xchg
rcr
jno
cs
pop
dec
mov
out
rep
mov
mov
sbb
or
sub
adc
sbbl
add
in
sahf
inc
pop
scas
mov
cwtl
push
dec
les
mov
push
dec
pop
pushf
xor
test
outsb
stos
mov
jb
out
mov
push
jo
in
test
mov
mov
and
nop
sbb
gs
jno
cmp
out
cmp
mov
in
sbb
dec
mov
mov
pop
adc
pop
ret
add
push
aas
mov
sbb
call
jecxz
jnp
push
test
jle
insl
jne
icebp
addb
flds
mov
jl
ret
or
or
scas
sbb
mov
push
data16
mov
jecxz
shl
in
out
pop
ret
out
sbb
imul
dec
add
mov
roll
jle
pop
mov
push
ret
arpl
mov
push
popa
and
hlt
lahf
mov
nop
movsb
adc
jne,pt
cwtl
fwait
icebp
dec
push
xchg
pop
sub
add
fs
mov
cmp
mov
pop
mov
mov
jae
fwait
push
add
outsl
lods
push
xchg
shr
divb
or
mov
shrb
mov
inc
movsb
sarl
sbb
lock
insb
xchg
mov
movsb
push
pop
mov
mov
inc
xchg
cmp
out
call
fcomps
xchg
push
dec
and
inc
aad
bound
adc
jnp
and
scas
addr16
xchg
fsubrl
div
jmp
adc
push
or
ja
jnp
std
pop
cmp
iret
pop
fs
in
lds
cmove
inc
repz
bound
mov
xchg
mov
cmp
adc
cli
out
adc
mov
xor
and
mov
test
inc
xchg
fwait
imul
popf
mov
mov
xlat
mov
dec
dec
js
test
mov
push
orl
cwtl
mov
adc
ficoml
mov
sahf
xchg
aam
inc
cmp
iret
popa
lds
jno
sub
std
add
add
int
sbb
roll
push
lcall
xchg
ffreep
xchg
testl
lods
dec
and
or
dec
call
ljmp
pushf
sbb
cmpsl
cwtl
sbb
xchg
and
popa
cmp
jne
mov
insl
mov
mull
mov
in
lods
push
or
lret
sub
sbb
movb
stos
insb
or
jno
sbb
mov
popa
sub
jge
cld
rorb
mov
mov
push
add
cmp
push
mov
mov
mov
fwait
ss
insb
inc
fiadds
cmp
or
sbb
push
int3
and
xchg
sti
js
fstl
cmpsl
insb
push
or
cmpsb
cmp
mov
lea
negl
xchg
and
cmp
nop
adc
jge
jbe
push
xchg
pop
or
mov
outsl
pushf
and
jmp
jns
ja
and
jecxz
sbb
dec
scas
dec
loop
cmp
jmp
inc
mov
xchg
jno
dec
subb
mov
and
mov
cmc
daa
fsts
jg
mov
ds
lret
cmp
test
xchg
mov
ret
inc
ret
and
scas
or
or
rolb
out
lret
test
inc
lea
sub
repz
test
xchg
hlt
cld
cmp
cmp
insb
adc
sarl
adc
test
int3
les
hlt
daa
push
lock
inc
pop
insb
fs
rorb
jo
out
insb
jle
push
out
add
or
and
sub
xchg
cmc
xor
in
das
add
or
mov
jl
idivl
cmp
outsb
sbb
fildll
lods
out
jle
orb
das
fs
stos
xor
sub
mov
jnp
jmp
xor
clc
jg
test
sub
aad
mov
push
cltd
imul
mov
push
mov
xor
mov
negb
xor
push
or
push
mov
mov
test
inc
stos
roll
inc
fldt
push
and
jp
mov
dec
jle
les
xor
pop
data16
push
cmpsl
xchg
ja
push
jle
movsl
scas
lods
test
jb
cmp
sub
xlat
push
push
imul
fwait
push
inc
aaa
mov
mov
mov
ror
repnz
xchg
aad
or
add
clc
inc
pusha
dec
in
ret
subb
or
dec
insl
scas
lods
out
xor
mov
xlat
push
pushf
int3
push
inc
loop
aam
out
ss
int
enter
mov
sar
adc
sbb
sahf
aam
loopne
int3
inc
cmpsl
jo
fdivl
clc
stc
cmpsb
xchg
jmp
sub
mov
in
cs
rcll
sbb
pop
test
shll
mov
ja
xor
sbb
pop
scas
push
imul
inc
push
bound
sub
xor
movsb
mov
jp
shll
adc
addr16
pop
cmp
add
enter
cli
push
mov
sub
dec
popf
fcompl
mov
jle
sub
icebp
push
mov
push
sub
mov
xor
xchg
aad
and
add
inc
ret
cld
and
jbe
adc
jae
loopne
cmpsl
xchg
mov
lret
pop
popl
dec
int3
imul
dec
cmp
out
lcall
add
mov
or
or
add
fcoms
sub
mov
mov
rclb
adc
xor
mov
or
sbb
pop
jb
xchg
popf
dec
cs
ss
mov
lahf
out
jl
xlat
sbb
scas
fmuls
stos
xchg
or
xchg
dec
cmp
pop
mov
mov
mov
lods
imul
sbb
sub
mov
pop
std
test
test
mov
shr
scas
mov
push
add
test
cmpsb
adc
xchg
push
shll
mov
add
ljmp
gs
fidivrs
dec
mov
fimuls
clc
mov
dec
ss
xor
pop
in
add
pop
jl
mov
adc
mov
ret
andl
movsl
lret
add
pop
das
and
ret
push
mov
popa
aam
fwait
les
imul
test
xchg
jle
sti
mov
cmpsl
cmp
test
xor
sbb
and
push
inc
mov
and
dec
and
out
jmp
bound
not
xchg
std
das
pop
jno
shrl
fs
sbb
test
push
adc
bound
outsb
int3
adc
adc
inc
push
add
and
rcrl
mov
dec
pop
inc
add
cmpsb
add
jnp
cs
push
xchg
bound
popa
rcrb
xor
into
jns
sub
mov
sbb
cmpsl
fs
stos
enter
lock
dec
sbb
xlat
test
sbb
icebp
and
rorl
nop
pushf
imul
cmp
and
or
dec
or
xchg
faddl
in
jb
loop
mov
cwtl
inc
enter
cmp
sbb
lock
je
dec
xchg
pop
dec
aad
jnp
jmp
fnstenv
xor
xchg
cmp
fstpl
pop
mov
push
cli
stc
cltd
cmp
add
stos
sbb
and
jmp
and
hlt
sarl
stc
xchg
jo
inc
or
es
mov
stos
or
outsl
sbb
pop
push
pop
xchg
fldt
mov
addr16
and
call
lock
iret
scas
cmp
push
in
push
push
nop
add
cmpl
das
loop
test
adc
and
int
or
lods
xchg
out
pushf
loope
inc
mov
push
cmpsb
sarb
scas
popf
shll
or
das
jmp
out
ret
div
jle
orl
rorb
xor
scas
sbb
mov
push
mov
scas
sbb
cmp
cmc
and
or
shll
sbb
aaa
add
cmpsl
xchg
popa
ret
arpl
daa
and
inc
mov
clc
fiadds
pop
add
mov
add
imul
jle
xor
inc
mov
adc
jbe
push
sbb
sub
in
mov
push
bound
pop
fsubrs
sub
jmp
sbb
mov
movsl
jmp
xor
jp
into
cmpsb
sub
lods
rcrl
gs
stos
test
jne
dec
inc
mov
shl
jge
adc
jne
push
lret
enter
icebp
xchg
loop
xor
push
pop
push
inc
cld
lret
jno
out
stc
add
je
lock
jge
dec
mov
call
and
stc
bound
loopne
nop
loopne
sub
aad
or
pushf
gs
enter
jge
aaa
stc
bound
ss
xchg
outsb
sbb
xor
xor
repnz
dec
aaa
lret
ret
xchg
lea
pop
jne
pop
ret
push
mov
pop
add
nop
xchg
out
fs
sar
cbtw
sub
sbb
xchg
ljmp
pop
icebp
outsb
xor
mov
lock
cmc
dec
ss
inc
inc
loop
int
jne
or
neg
out
push
inc
scas
loopne
icebp
xorb
push
inc
ja
xor
push
fwait
dec
jg
cmp
sarb
je
cmp
mov
scas
mov
mov
aad
ret
es
out
ljmp
insl
pop
pop
cmpb
shlb
fidivs
ljmp
cmp
push
cwtl
movsb
cs
jl
mov
push
push
lret
sbb
xchg
into
lods
mov
inc
movsb
dec
jle
lahf
mov
in
adc
je
jbe
fucomi
push
repnz
mov
add
mov
xchg
xchg
jns
insl
out
xchg
mov
or
inc
fyl2xp1
loopne
in
push
imull
mov
adc
repz
ds
aad
sub
adc
cmpl
loopne
mov
fwait
aam
stc
enter
pop
inc
push
and
out
sub
fnstcw
xor
jne
jb
enter
mov
cmc
sbb
cmpb
lea
mov
test
pop
stc
adc
inc
out
adc
mov
test
sub
test
ret
inc
pusha
push
mov
add
xor
lock
hlt
push
sub
ljmp
cmp
xchg
imul
mov
add
pop
rcll
cli
or
std
xor
sub
adc
dec
les
cmp
repz
add
nop
fnsave
lret
lcall
ret
jnp
addr16
aas
inc
fistpll
mov
pop
jnp
gs
jl
xchg
cmp
fnstcw
lret
adc
subl
dec
int
sub
push
fisttpl
xchg
sbb
in
xor
pop
dec
cs
fldenv
cmp
ljmp
push
in
xlat
pop
adc
imul
mov
aam
mov
inc
xchg
mov
dec
mov
mov
das
loop
inc
xor
stos
add
adc
mov
sub
popa
insl
or
cld
nop
xor
rcrl
mov
es
xor
mov
lods
sub
dec
dec
mov
call
movsl
sub
cmp
mov
jbe
cmp
or
xor
fs
ss
aam
das
scas
shll
and
and
int3
in
xchg
fidivs
negl
mov
iret
push
ret
sti
push
testl
or
push
iret
fwait
cmp
add
js
shlb
adc
icebp
dec
subb
outsl
xchg
fldcw
fnstenv
xlat
aad
cmp
jecxz
imul
mov
mov
push
xor
inc
or
ficoml
mov
pop
mov
add
shr
fcoml
fs
adc
push
or
push
mov
fcomps
add
jmp
mov
mov
inc
push
mov
lods
pop
mov
aaa
and
fldcw
pushf
xchg
cld
pop
xchg
mov
mov
or
repnz
loop
push
cmp
and
outsb
mov
sub
imul
stos
inc
popf
insl
dec
cltd
loope
jns
daa
fisttpl
inc
and
jns
lods
sar
cli
aas
mov
and
daa
pop
pop
icebp
jg
xchg
dec
dec
or
ret
gs
or
xchg
cmp
stc
dec
sub
mov
jb
mov
dec
imull
pop
scas
shlb
lds
or
inc
fmull
push
lds
inc
cmp
xchg
mov
xor
mov
stos
jne
pop
pop
in
sbb
sbb
ret
mov
fdivs
inc
dec
out
loop
mov
mov
mov
jge
stos
in
push
data16
jmp
icebp
pop
xor
or
mov
pop
mov
pushf
xor
insb
test
stos
pop
dec
pop
cmp
iret
or
cmp
in
mov
lret
lret
lods
sarb
add
imull
xchg
ret
leave
push
adc
cs
adc
lret
and
lret
xor
lahf
mov
imul
sub
mov
push
pop
les
jo
dec
add
sbb
push
mov
movsb
xor
test
aad
cmp
jbe
sbb
xchg
fnsave
mov
sahf
stos
xchg
xchg
dec
daa
cmp
data16
mov
ja
jnp
or
into
sahf
mov
bound
adc
or
inc
flds
cmp
push
ss
push
das
and
jmp
rcrb
popa
lea
cmp
repz
call
mov
es
add
movl
inc
fidivs
and
test
ds
adc
sub
js
lret
mov
int3
fwait
lods
jmp
cmp
lcall
pusha
icebp
iret
testl
push
push
inc
shlb
push
fstpl
pop
or
mov
imulb
adc
inc
scas
hlt
push
mov
jbe
and
inc
in
sbb
out
scas
nop
scas
cld
inc
cmc
movsl
jp
inc
xor
sub
jmp
out
fs
jecxz
js
mov
pop
imul
sbb
cmp
pop
fwait
adc
sub
dec
lcall
pop
jmp
bound
dec
das
sarl
lods
and
mov
dec
push
jne
notb
insb
push
xchg
mov
mov
mov
sub
jo
fdivr
mov
xchg
mov
cs
mov
aam
call
nop
repz
sbb
inc
cli
pop
and
xchg
cmpsb
dec
and
cmp
push
inc
and
pusha
inc
gs
insl
jl
shlb
and
pop
inc
ds
and
push
push
iret
xor
push
fs
inc
xor
and
cmp
icebp
sbb
dec
icebp
stc
dec
fcmovb
mov
shll
xchg
repnz
push
subl
rcll
lods
clc
xlat
inc
xchg
outsl
jae
xor
pop
inc
mov
das
ljmp
aad
pop
sti
jno
mov
ffreep
xor
loope
shl
dec
clc
and
pushf
mov
xor
outsb
dec
fwait
ja
mov
cmp
cltd
negl
xchg
ret
into
popf
mov
lock
lahf
jbe
pop
pushf
push
xchg
xor
add
jno
pushf
imul
movb
dec
popf
cmp
sub
push
rorb
aad
lea
in
mov
mov
pop
jnp
mov
ljmp
xor
les
mov
cld
xchg
jmp
sbb
lods
xchg
push
mov
sub
pop
adc
std
in
or
jg
dec
in
nop
sub
push
fwait
repz
incl
addr16
or
inc
ds
jae
iret
inc
add
sbb
shlb
push
sti
xchg
or
daa
aas
xchg
xor
push
bound
sbb
fimull
nop
outsl
sti
push
sub
fdivl
jmp
and
loop
xlat
sbb
fisubrl
fcom
lahf
scas
dec
cmpsl
push
out
lock
ret
inc
test
outsb
xchg
lahf
cmp
push
pushf
test
das
push
test
fwait
cmc
rolb
cltd
leave
xor
aam
jnp
or
frstor
enter
mov
stos
add
jp
adc
fisttpll
ss
xor
repnz
fmull
testb
add
cmc
cmovae
loop
sbb
fistpl
dec
sarb
mov
arpl
mov
divl
cmpsb
pop
popa
movsb
jmp
ds
fwait
imulb
std
push
icebp
push
shll
cmp
fildl
cltd
jnp
and
adc
inc
mov
ficomps
or
adc
stos
pop
ficoml
clc
push
mov
mov
and
fstps
popf
aad
cmpsl
push
mov
push
ja
jb
mov
or
mov
jmp
cwtl
xchg
stc
jmp
adc
aad
sub
jl
xchg
out
inc
jge
enter
xchg
fiadds
negb
lret
jb
mov
ss
ljmp
and
js
inc
bound
int
cmpb
nop
in
xchg
cmp
call
push
add
pop
aad
mov
xchg
call
fmulp
mov
jbe
sub
push
leave
outsl
std
or
xchg
dec
and
add
fs
daa
xchg
or
push
or
aaa
not
arpl
mov
jae
lds
fsubp
xchg
outsl
xchg
addl
jmp
pop
leave
pop
mov
pop
loop
pusha
cs
jno
mov
adc
pushf
shrb
inc
mov
movsl
lahf
cmc
mov
mov
pop
aas
rcl
mov
popa
jecxz
mov
stos
xor
bound
or
insb
mov
mov
in
mov
insb
fwait
mov
xor
pop
aaa
adc
mov
pop
cmpsb
push
test
adcl
pop
in
xorb
jae
xchg
cmp
mov
movhps
cmp
ret
push
mov
sbb
lea
cltd
push
sahf
arpl
adc
push
popa
shlb
arpl
push
pop
add
jecxz
jne
rcrb
sbb
pop
mov
shrb
daa
test
mov
addb
stos
inc
lcall
mov
arpl
fidivrs
jle
ret
dec
push
pop
push
test
sub
fnstsw
enter
adc
push
rcl
sbb
lret
mov
aam
std
clc
jmp
push
push
movsb
mov
stos
push
and
mov
leave
pop
mov
jb
sub
mov
aaa
call
call
or
and
stos
dec
je
mov
pop
jp
dec
xor
mov
push
js
xchg
ret
xchg
lahf
data16
inc
hlt
ret
fldl
lea
test
xchg
cmp
mov
sub
test
push
add
mov
scas
cmp
les
lods
aad
ja
das
loopne
loopne
dec
les
ret
imul
push
jmp
popf
mov
out
ret
jbe
cmp
or
add
adc
push
movsb
enter
push
adc
mov
in
cmpsl
cli
out
mov
xchg
mov
sbb
or
sub
in
ds
cmp
call
repz
mov
sbb
fiadds
mov
jl
das
das
dec
inc
loope
push
jae
adc
ds
adc
fdivl
daa
adc
xor
adc
enter
scas
fsubl
call
lea
cwtl
stc
int
ja
sub
cmp
pop
sti
jae
loope
add
inc
loop
or
in
test
subb
mov
push
popa
rorb
int3
outsl
das
push
sub
sbb
cmp
or
jg
enter
std
dec
js
xor
jl
mov
fsubrs
pop
std
sbb
enter
mov
outsl
sahf
lods
push
lods
jle
jne
nop
test
les
popf
int3
insb
bound
cmp
sti
inc
insl
cwtl
loop
jp
ret
sub
push
cmp
jmp
and
pop
das
int3
popa
push
pop
cmp
bound
stc
dec
dec
cmp
fsubrs
pop
insl
xchg
cltd
sub
sub
idivb
gs
add
dec
or
xor
test
or
pop
jnp
mov
push
in
pop
dec
push
mov
mov
call
inc
or
or
pop
in
jns
aaa
lahf
into
imulb
jge
add
cmpsb
jmp
rcrb
rorb
lods
lahf
push
cmc
push
push
jne
scas
sub
inc
gs
std
movsb
iret
cmp
call
and
sbb
mov
aam
sahf
rclb
hlt
les
sub
jbe
daa
mov
ret
loop
xchg
pop
js
and
lea
leave
jle
xchg
imul
cmp
push
dec
pop
xchg
push
cmp
out
outsl
repz
in
jmp
dec
mov
sub
test
lret
inc
push
add
loop
dec
mov
push
test
jge
out
shrb
in
or
dec
loop
aaa
pop
stos
mov
adc
test
xchg
pop
xchg
xchg
cmp
pop
gs
sub
adc
or
lret
out
lock
cli
adc
iret
cld
aaa
je
mov
mov
mov
out
pushf
popa
fistpll
fs
hlt
or
out
daa
mov
xchg
rorl
and
mov
sub
ret
inc
push
push
jno
xchg
dec
adc
iret
xor
push
pop
adc
pushf
cmpb
dec
mov
mov
test
jns
sub
cmp
fisttpl
loop
xor
mov
stos
std
xor
jae
in
ljmp
add
lret
jb
rdpmc
or
fmuls
xor
xor
stos
out
ss
add
xlat
sbbl
lret
lock
push
lahf
push
dec
jge
dec
in
ficoml
addr16
cmp
dec
xor
mov
clc
mov
repnz
cmpsl
roll
je
loopne
cmp
mov
movb
imul
dec
adc
sub
or
repnz
sbb
cmpsl
or
push
mov
mov
js
inc
push
push
jle
sbb
jle
hlt
ret
cmp
subb
push
xor
or
pop
rcl
add
aam
dec
insl
lds
push
test
jecxz
mov
inc
in
sbb
popa
jecxz
fisttpl
test
test
cmp
dec
addr16
pop
add
mov
sar
mov
out
outsb
cmpsl
das
nop
and
pop
jo
imul
lea
jae
enter
push
mov
mov
adc
push
pop
ljmp
fcoml
jmp
aaa
jnp
mov
call
jo
imul
popf
imul
push
femms
mov
adc
lock
test
cmp
add
jge
inc
dec
pop
sbb
push
push
xchg
fcoms
mov
jo
mov
mov
adc
dec
push
sub
insb
sbb
mov
xor
test
inc
insb
jns
push
les
imul
mov
sub
ss
cmp
test
mov
ja
push
xchg
aam
scas
loopne
mov
jmp
nop
pop
fucom
jne
ljmp
sbb
testl
jp
out
das
and
push
mov
std
imul
pop
mov
aas
shr
sbb
mov
mov
sub
fldcw
outsb
cmp
sbb
cmp
fistps
aad
shl
add
lret
mov
les
insb
push
ja
push
add
das
xchg
jl
addb
mov
and
fisubs
push
jle
icebp
icebp
addl
scas
insb
imul
cli
mov
xchg
jg
push
and
sub
movsb
loopne
das
cmp
in
mov
xor
orb
mov
sbb
scas
out
xchg
daa
jp
cli
cmp
add
lock
aam
aas
movsl
pusha
fwait
outsb
lock
popl
jne
test
add
fbld
xor
jbe
fdivrl
test
testl
lcall
pop
loop
fnsave
out
sub
mov
or
movsb
js
xchg
loopne
jge
rcll
sahf
sarb
in
dec
sbb
lret
leave
ret
ss
andb
push
dec
incl
scas
ret
mov
push
push
lea
pop
imul
adc
push
dec
pop
fcoml
aaa
mov
push
pop
mov
pop
aad
xor
test
mov
cwtl
mov
sbb
shlb
decb
sbb
mov
push
movsl
jns
mov
into
pop
jmp
mov
icebp
in
inc
das
loopne
nop
dec
repz
sbb
ret
mov
imul
fstpt
cltd
xchg
push
push
in
sti
add
inc
in
add
adc
jmp
stos
sub
orl
lahf
xchg
lcall
insl
xchg
dec
ljmp
mov
movsb
sbb
popf
or
xchg
andl
push
xchg
stos
enter
cltd
insl
and
push
mov
ffreep
push
clc
and
ja
mov
sar
inc
fistpl
es
test
mov
jge,pn
int
hlt
xchg
loope
les
lcall
push
push
dec
jno
dec
mov
sub
inc
iret
mov
arpl
push
mov
inc
aad
mov
imul
ljmp
movsl
movsb
sub
inc
inc
lock
sbb
and
sbbb
push
into
in
pusha
jle
loop
je
add
xchg
or
vpshufd
xor
pop
fdivrl
dec
lods
mov
jg
or
ja
cs
sub
xor
push
sbbl
pop
mov
leave
pop
cs
or
ds
jecxz
push
ljmp
aam
subl
or
insb
fwait
dec
ss
gs
sub
add
sbb
adc
sub
push
cmpsb
add
outsb
push
and
inc
push
mov
pop
jno
dec
push
and
out
push
sbb
insl
xchg
jecxz
inc
out
lcall
out
nop
sbb
gs
je
stc
fnstsw
sbb
sarb
loop
push
incb
add
sbb
adc
ret
movsl
addr16
or
stc
adc
leave
mov
cli
dec
add
jmp
pop
ss
dec
mov
push
mov
or
push
fistps
inc
mov
mov
sbb
sbb
jno,pt
jecxz
xchg
sbb
dec
aam
push
sbb
pop
aaa
adc
push
in
rcr
push
push
jno
xchg
or
nop
sbb
in
mov
or
sbb
into
dec
movsb
add
popl
pusha
push
nop
lods
enter
add
lret
and
ljmp
adc
cltd
dec
xlat
sti
int3
inc
pop
inc
in
jno
scas
sbb
ljmp
mov
stos
lea
loope
sub
aad
jmp
add
xor
ljmp
outsl
push
rorb
pushf
rcll
cmc
ret
lods
sub
pop
mov
cmpxchg
push
cmpsb
out
and
hlt
sub
mov
and
push
xor
xor
add
inc
mov
movsl
cmp
mov
lahf
cmpsl
dec
loope
stos
adc
jb
fistps
insw
inc
dec
into
outsl
das
addr16
dec
push
sbb
add
push
mov
adc
and
insb
call
fldt
lret
adcl
scas
fisttpl
adc
enter
dec
push
hlt
stos
int3
lods
js
push
mov
ret
leave
movsb
pop
xor
test
addb
pop
rcrb
and
movsl
push
aam
lret
push
mov
pop
out
mov
ret
mov
sbb
clc
pop
mov
pop
cwtl
stos
add
xchg
cmpsl
pop
sahf
shll
cwtl
jecxz
inc
xlat
cs
xchg
outsl
cmp
and
pop
mov
loop
jge
cmpsl
lahf
mov
ja
lea
adc
in
pushw
mov
jecxz
cmp
das
and
cld
mov
and
pushf
or
inc
inc
shl
or
push
leave
inc
cmp
daa
mov
sahf
lock
imul
xor
aaa
repz
cmp
icebp
dec
add
lret
and
arpl
xor
es
subl
jae
into
ret
in
and
cltd
and
repnz
test
xor
daa
fidivl
inc
lds
mov
leave
sub
pop
mov
pop
dec
jbe
ds
aam
imul
push
sbb
fnstsw
dec
jns
mov
test
cltd
mov
sub
in
dec
aad
scas
icebp
xchg
jmp
mov
aas
adc
in
mov
mov
mov
or
ficompl
out
adcb
fstps
pushf
lahf
and
iret
xchg
notl
xchg
rorb
sbb
imul
mov
shlb
movsl
xchg
dec
out
aam
sti
mov
scas
push
mov
adc
ret
and
push
add
mov
in
cltd
shll
dec
divl
inc
out
int
xchg
or
lods
jnp
mov
fwait
icebp
xchg
sbb
rclb
test
mov
mov
or
out
hlt
mov
mov
outsb
pop
shlb
cmp
add
out
sub
jo
ja
xor
outsl
lock
inc
xchg
push
xchg
dec
mov
hlt
rcrl
adc
and
add
jp
imul
xor
shlb
cltd
orb
test
stos
in
cmc
int3
les
mov
mov
mov
cmpsb
in
loope
daa
cs
or
leave
subl
inc
inc
xor
inc
fists
jmp
in
xor
pushf
and
and
addl
pop
outsb
xorl
jns
aaa
repz
aam
jp
dec
fdivs
lds
subl
aad
subl
pusha
sahf
mov
movsb
sbb
jne
jp
mov
or
mov
mull
pushl
adc
sahf
push
or
orl
outsl
or
jmp
ljmp
out
cmpsb
add
mov
mov
mov
test
mov
or
rcl
es
pop
add
icebp
sub
lret
lea
pop
inc
xlat
xchg
stos
or
inc
xor
insb
push
das
cmp
rolb
aam
mov
cmp
andb
out
sub
cmp
xorl
jae
iret
sbb
int3
int
adc
adcl
xor
sahf
dec
xchg
sbb
lret
add
pushf
add
fnstenv
adc
lret
imul
xor
jnp
incb
adc
or
stos
sub
and
push
inc
int
lock
jl
mov
leave
sti
in
push
repz
dec
ret
adc
xor
cmp
cmpl
dec
lcall
out
jb
adc
push
mov
adc
pop
push
dec
sti
repnz
ret
ror
xchg
imul
push
mov
jns
sub
jae
repnz
ret
add
outsl
out
mov
cmp
sub
adc
mov
adc
pop
push
hlt
pop
into
in
xchg
sti
adc
pop
pop
pusha
enter
pop
cltd
rol
xchg
mov
out
sahf
shrb
int
mov
aad
nopl
and
movsl
xchg
clc
sbb
aad
add
out
lahf
sub
mov
pop
scas
cmp
mov
mov
mov
lods
pop
and
repnz
jnp
inc
fidivs
je
cmp
mov
shll
test
mov
aaa
aaa
dec
insl
add
jp
movl
xchg
shl
pop
popa
dec
shl
jne
xchg
add
cwtl
imul
cmpb
mov
push
ljmp
movsl
adc
mov
in
in
fistpl
ljmp
push
mov
daa
out
jp
rorl
dec
data16
in
lods
out
push
or
mov
jno
xor
jp
add
lcall
pop
and
subl
or
roll
lret
cmp
into
mov
in
push
push
icebp
and
adc
jmp
js
or
iret
xchg
cmp
dec
movsb
jo
les
ja
mov
int3
sar
daa
mov
or
and
lea
push
icebp
and
aas
cltd
add
sub
sbb
jmp
imul
mov
aad
pusha
pop
pusha
dec
mov
icebp
jmp
clc
sahf
lahf
adc
imul
out
cld
push
das
inc
jge
sub
jns
push
ja
fldcw
adc
adc
push
testb
cltd
push
mov
in
sahf
push
stos
out
mov
mov
icebp
adc
mov
cltd
pop
jge
add
pop
test
jo
adc
mov
outsb
adc
dec
fisubrl
movsl
sbb
fs
sub
mov
sub
mov
xor
adc
icebp
xchg
push
dec
add
jo
xor
movsb
adc
xlat
pop
mov
movsl
mov
pop
das
lret
out
jecxz
je
push
rclb
adc
inc
jo
cmp
bound
or
testb
and
or
daa
aaa
outsb
dec
repnz
ss
sbb
add
cmp
pop
aad
adc
xchg
lock
push
shl
pop
scas
sarb
test
iret
dec
adc
lods
and
jp,pn
xchg
inc
mov
sti
push
xchg
pusha
xchg
jecxz
pushf
jo
push
addl
fcmovnbe
ljmp
cwtl
inc
sub
sbb
int
movsb
sub
pop
xor
or
mov
pshufw
fdivl
lods
mov
mov
pop
cmp
movsl
cmc
daa
addr16
aaa
inc
addr16
scas
sub
xchg
lock
jb
pop
and
sub
or
sbbb
dec
pop
mov
or
or
loope
les
aad
jmp
jo
inc
adc
mov
idiv
leave
andl
xchg
jmp
aaa
scas
inc
mov
in
clc
dec
mov
mov
jno
mov
outsl
in
enter
sub
sbbl
rorb
aad
sub
lea
jae
pop
mov
arpl
in
pop
ret
sub
or
icebp
mov
outsb
inc
mov
shlb
nop
fidivl
ds
inc
imulb
jl
cmp
lods
in
cmc
sub
xor
scas
and
stc
out
ds
jecxz
lret
jecxz
test
xor
cmp
sti
inc
pop
rorl
dec
jo
add
test
std
aad
and
mov
arpl
out
decb
lahf
lret
xor
loop
pop
cwtl
idivl
xor
mov
jb
aaa
mov
aas
jle
mov
cmp
push
imul
popf
nop
and
mov
push
in
out
adc
mov
rorb
dec
loop
push
leave
fsubl
mov
iret
fimuls
fiadds
push
lock
aad
xchg
std
lods
xor
mov
mov
add
sbbb
insl
iret
mov
mov
add
xchg
fisubrl
int3
mov
cmp
lret
call
dec
jae
rolb
inc
add
sarb
or
gs
fmull
xor
lea
loope
movsl
jbe
stos
insb
xchg
mov
jmp
mov
adc
movsl
push
test
add
mov
and
adc
push
es
inc
call
in
stc
jg
push
cmp
shrl
repz
popf
xorb
mov
push
add
mov
js
out
mov
fildll
cmp
pop
adc
add
and
repnz
incb
or
xor
pusha
mov
mov
adc
ljmp
cmp
ds
or
sub
sub
inc
cwtl
push
mov
fidivrs
xchg
jg
sub
adc
jnp
cmp
nop
cmp
mov
in
sub
out
xchg
stos
loope
mov
fimuls
shll
stos
mov
push
jge
test
dec
and
mov
lcall
xchg
cmpsb
aad
dec
adc
xchg
insb
inc
sti
stos
dec
push
aas
jg
incb
sub
mov
mov
rcl
inc
xlat
dec
test
pop
push
inc
jge
dec
in
add
adc
inc
mov
add
cmc
cmp
xor
xchg
out
pop
stc
imul
insl
fwait
test
leave
push
xchg
nop
divb
sbb
aas
adc
out
rorb
mov
mov
outsb
pop
or
insb
add
sbb
lods
push
aas
dec
push
outsl
jmp
dec
mov
insl
shlb
push
push
mov
into
xor
mov
lea
add
jo
mov
dec
imul
sub
pop
pop
xchg
mov
dec
push
add
imul
mov
fdivrp
xchg
pop
and
jmp
pop
adc
push
mov
je
daa
cmp
xor
lds
and
fimuls
enter
enter
mov
inc
jp
mov
pop
pop
push
cmp
rcl
and
ret
push
xor
test
test
mov
jns
clc
mov
rcrb
mov
aad
add
jg
imull
mov
std
inc
sub
push
sub
jne
mov
fstl
pop
test
cmp
lret
out
jl
dec
push
add
cmpl
insb
adc
test
sub
push
icebp
and
ret
jb
out
pop
mov
xor
dec
pop
cmc
imul
ret
leave
push
lret
adc
pop
imul
leave
cmp
mov
fsubl
mull
scas
cmpsb
add
xchg
test
cmp
movsb
pop
popa
inc
xchg
repnz
inc
popf
pop
es
jmp
ljmp
pop
adcl
imul
mov
stos
xchg
mov
xor
fcmovnbe
rolb
xchg
push
xor
and
test
xchg
xor
mov
add
aam
repz
scas
push
sti
pop
lahf
xor
adc
sti
ja
fmull
xchg
adc
mov
adc
xor
sbb
test
xlat
mov
popf
sbb
jmp
cltd
cmc
fiadds
clc
jmp
xor
out
or
fisttpll
lahf
clc
ret
push
shlb
js
je
xchg
or
imul
shl
call
mov
imul
imul
outsb
mov
cmp
sub
ret
pop
mov
mov
xor
data16
nop
ja
out
mov
jb
ds
xchg
aaa
xor
loop
inc
xor
xchg
mov
push
push
aad
cld
dec
addr16
insl
mov
xor
fidivrs
cmp
xor
or
loope
dec
push
lds
ja
xlat
cltd
mov
mov
mov
cld
int
mov
inc
pop
mov
dec
ror
and
pop
mov
dec
pop
das
test
shr
lods
xor
mov
sub
jne
cltd
outsb
push
cmp
cmp
mov
xor
ss
mov
jno
jmp
aas
cmc
mov
sbb
mov
dec
sbb
mov
xchg
stos
lods
clc
xor
orl
jp
aam
sub
and
mov
xchg
mov
imulb
insb
aaa
jb
mov
fildl
mov
mov
jns
mov
mov
mov
cld
jl
mov
pop
push
push
jbe
push
sbb
mov
jb
movsb
outsb
mov
rcl
mov
dec
aam
push
in
test
xchg
pop
and
sti
xchg
clc
sarb
and
shll
lret
or
fistpll
inc
repnz
loope
mov
idiv
pop
fneni(8087
cmp
cld
loope
pop
loopne
xor
sub
mov
push
or
push
icebp
stos
ljmp
push
in
cmp
sub
mov
mov
and
or
stos
inc
xchg
mov
jmp
xchg
cmc
ss
add
jl
mov
js
mov
dec
les
jp
mov
test
dec
push
loop
fdiv
cmc
push
cmp
sti
xor
in
push
lahf
in
je
push
cmp
int
ja
cwtl
jo
mov
push
lds
xor
pop
lods
mov
mov
repz
or
rcrl
push
and
sbb
cwtl
xchg
es
or
sbb
cmp
cld
or
ja
xchg
movsl
int3
hlt
add
and
repnz
mov
imul
into
push
pushf
xor
mov
test
cmp
daa
mov
sbb
lcall
arpl
cmc
dec
bound
js
xchg
xchg
jmp
push
xchg
push
rolb
je
dec
ds
negb
sbb
clc
sub
mov
jno
jge
jmp
dec
and
mov
lret
movb
xor
mov
cmp
jle
jl
and
stos
push
inc
xchg
mov
dec
cmpsb
sub
nop
out
mov
mov
lea
test
mov
jmp
jno
sbb
cmpsb
cmp
cmp
fcmovne
jp
or
fildll
iret
nop
push
test
addr16
adc
mov
aad
adc
les
cmpsb
outsl
pushf
add
sub
popa
in
es
mov
or
jae
sti
aas
pop
adc
cli
ljmp
xor
jno
sbb
mov
mov
fsub
xchg
test
out
lock
cmp
adc
divl
outsl
out
jae
testb
mov
dec
mov
imul
mov
jge
mov
in
test
mov
sub
aas
dec
data16
mov
push
xchg
lret
ret
iret
int
aam
lds
push
sbb
pop
sarb
sbb
push
js
jb
add
cmp
dec
jle
adc
push
pop
xor
lcall
stos
sahf
mov
lea
imulb
pop
sbb
fdivrl
fcompl
xchg
outsl
popf
pop
inc
mov
testb
int
adc
jb
add
add
inc
jl
fimuls
ljmp
jae
mov
add
adc
inc
dec
and
cmp
push
ficoml
mov
jl
lock
cmp
sbb
int
popf
mov
sbbl
rcrl
push
inc
popa
cmp
xlat
jne
aam
push
jge
mov
call
movsl
push
push
cmpsl
push
lods
cwtl
or
roll
xor
loope
xor
jno
fs
mov
xor
inc
out
inc
xor
cmpb
xor
stos
gs
add
adc
test
fwait
jae
mov
out
mov
push
xchg
test
clc
push
dec
inc
jb
lods
xor
lods
loop
dec
in
lret
sbb
or
jns
push
mov
add
add
nop
adc
dec
hlt
mov
inc
cmp
sub
fisubrs
pusha
test
dec
xchg
push
xchg
jge
imul
stos
adc
scas
mov
jge
xlat
adc
xor
xchg
test
sub
pop
gs
cwtl
into
or
dec
jmp
pushf
mov
mov
and
mov
pop
fidivrl
aam
jle
jns
aam
scas
xor
jo
jl
jbe
aad
rcpps
aad
pushf
cmp
icebp
ja
cmp
mov
jp
in
lods
jno
adcl
movsl
les
cli
mov
pop
mov
xor
loope
nop
insb
push
cmpsb
test
test
push
pop
jmp
daa
mov
pushl
shrb
dec
pop
jmp
iret
mov
cmp
stc
cmp
jle
sbb
lock
loop
xor
mov
popa
orb
int
rolb
imul
xchg
in
push
lods
mov
xlat
mov
imul
mov
inc
push
pop
jae
outsl
lret
jmp
adc
sub
push
sbbl
push
mov
jg
pop
sti
and
jmp
sub
aas
jns
jge
jl
cmp
daa
add
pushf
mov
leave
stos
lock
pop
nop
popa
inc
pop
fimull
imul
rolb
outsb
inc
icebp
std
adc
ror
dec
xor
leave
sub
xor
cmc
shr
sbb
inc
add
mov
push
daa
adc
dec
in
sbb
sbb
shlb
cmp
mov
sbb
xor
and
cmc
or
popa
and
cmpsl
repz
inc
mov
rorb
pushf
mov
lock
sbb
mov
cs
pop
mov
lock
pop
aas
leave
lock
jp
xchg
je
inc
lods
pop
cld
xchg
jae
cli
push
lea
scas
push
adc
scas
test
jmp
in
js
addr16
pop
adc
mov
stc
outsb
mov
loopne
cld
out
test
sub
subl
inc
xor
or
stos
jmp
xchg
shlb
sahf
push
scas
stc
out
inc
lcall
xchg
xorb
pop
add
cmpsl
test
mov
cwtl
lret
sub
xor
dec
xchg
outsl
mov
enter
test
jae
mov
sub
inc
mov
stos
dec
cmp
mov
mov
movsb
xchg
pop
arpl
inc
mov
out
or
jl
dec
push
dec
sbb
in
pop
add
aaa
add
cwtl
xchg
cli
lahf
rorl
sbb
int
mov
pop
push
push
stos
mov
sub
and
mov
ret
sbb
repz
inc
mov
out
mov
stos
mov
mov
pop
mov
sbb
sub
xor
sub
mov
frstor
fstps
or
es
jge
scas
lods
mov
jp
push
outsb
mov
cmp
add
lret
mov
movsb
mov
imul
lahf
call
push
pop
in
fbld
adc
aaa
cld
lock
mov
loop
lock
adc
scas
dec
shrb
cwtl
subb
cmp
out
shlb
sbb
adc
xlat
push
jecxz
pop
lret
sbb
jbe
adc
push
enter
sbb
andb
cs
rcl
popf
sub
mov
sbb
push
lods
data16
dec
jl
jo
leave
jo
sahf
and
rol
aam
dec
loop
popa
jge
mov
js
inc
sub
mov
pop
cmc
jo
out
bound
pop
pusha
shll
push
mov
or
loop
loop
pushf
mov
push
jne
in
not
enter
push
sahf
inc
pop
mov
fwait
jmp
std
xchg
xor
insl
sbb
jb
mov
mov
pop
clc
aaa
imul
ret
and
imull
inc
add
mov
out
leavew
push
mov
and
xchg
jns
push
push
sub
cmp
insb
mov
loop
imul
lret
jb
mov
fmulp
xlat
out
aam
lret
lock
out
push
std
scas
push
pxor
and
adc
mov
inc
shlb
cmp
sbb
mov
inc
jae
or
test
mov
pop
cld
push
jae
push
xor
repz
pop
sbb
dec
fidivs
jle
xchg
mov
movsl
cmp
cs
mov
xchg
push
xlat
push
or
dec
pop
add
repz
mov
hlt
mov
add
and
sub
insb
pop
out
mov
mov
ret
jno
inc
push
outsl
popf
gs
pop
stos
xor
pop
imul
into
add
data16
add
andl
add
mov
insb
fwait
or
mov
adcb
lea
dec
fistpll
shll
pop
loopne
sbb
test
jns
sarb
mov
shrb
imul
pop
out
leave
sbbb
imul
push
pop
inc
mov
arpl
das
jg
cmp
dec
inc
aad
dec
xor
in
dec
jb
xor
dec
and
data16
jne
adc
lods
jo
adc
mov
cs
fisttps
insb
xchg
mov
or
out
scas
cmp
cmp
imul
mov
sahf
pop
jne
sub
dec
xchg
aaa
loop
ffreep
sbbb
pop
loop
popf
cld
das
imul
mov
scas
add
adc
aam
stc
push
xor
into
lahf
in
lds
lret
gs
shll
mov
je
push
xchg
xor
orl
inc
ficoms
lock
xchg
and
or
scas
xchg
sbb
popf
push
ljmp
jo
pushf
pop
push
xchg
roll
aam
mov
cli
xlat
jae
jl
mov
push
lret
inc
and
adc
pop
pop
add
cltd
mov
fadds
or
aam
add
aas
filds
pop
in
sbb
sub
mov
fimuls
out
and
pop
ja
push
sti
pop
xor
test
cmp
lea
mov
ffree
pop
pop
add
push
jmp
xlat
jecxz
dec
jae
and
and
addb
mov
cmp
push
cmp
pop
cmp
sbb
and
xlat
sti
sub
add
fstpl
and
inc
std
in
and
inc
mov
int
repz
sbb
fildl
mov
and
add
add
lret
xchg
sub
adc
in
inc
push
out
mov
add
mov
inc
in
mov
bnd
and
imul
roll
jp
ret
orb
pop
xchg
js
xchg
cmpsb
ljmp
insb
rorb
fldl
mov
cltd
mov
cwtl
inc
nopl
cmp
arpl
or
std
mov
fidivrs
iret
test
pushf
push
js
sti
sub
aad
imul
jmp
sbb
or
jg
lock
mov
sahf
add
xchg
ret
leave
dec
cltd
fcomi
mov
loop
int
lock
mov
pop
lods
popa
in
stos
cli
jo
std
xor
pop
loope
shrl
aas
subl
je
dec
cmp
cmp
int
hlt
mov
loopne
mov
test
add
sbb
sbbb
test
xchg
sar
sbb
ss
xchg
or
jle
add
mov
out
movsb
pop
add
ljmp
sbb
stos
test
pop
fwait
mov
ljmp
xchg
jns
add
push
and
dec
stos
ss
in
or
mov
and
or
xchg
outsl
add
xchg
pop
mov
mov
test
aam
mov
jp
inc
cmp
cld
mov
lods
xor
jno
or
mov
test
mov
outsl
aaa
push
or
add
mov
stos
sub
adc
cmc
loop
dec
aad
js
jge
mov
imul
daa
lods
insl
mov
loope
mov
push
lea
xlat
loope
fistps
rorb
xor
mov
jl
and
sbb
test
loop
push
in
mov
mov
stos
add
mov
cmp
dec
dec
and
sub
cmp
in
mov
mov
xchg
pop
dec
dec
fs
lahf
add
loope
cmp
inc
cmp
pop
mov
enter
insb
cs
test
pop
xchg
mov
in
je
jg
incb
push
aam
cmp
fwait
lods
sbb
xor
sub
test
mov
push
dec
popa
cmp
inc
bound
pop
pop
faddl
incb
pop
xchg
xchg
testb
cltd
jle
outsl
sub
mov
and
fdivs
cmc
repz
mov
pop
in
and
insl
inc
je
mov
leave
aad
mov
cli
pop
enter
jae
dec
push
adc
xchg
stos
popa
dec
dec
mov
es
dec
sbb
inc
add
xlat
jge
inc
enter
sub
add
pusha
jae
sub
mov
incl
test
mov
cmp
add
xchg
xchg
rcll
fisubrl
inc
js
aad
and
lods
mov
mov
notl
insb
inc
xor
daa
inc
inc
or
enter
mov
scas
leave
mov
inc
gs
push
repnz
mov
fwait
cli
dec
add
lcall
mov
lahf
cmpl
mov
adc
loop
push
loope
jecxz
xchg
aad
int
xor
sar
shr
inc
clc
mov
push
shll
test
in
sub
mov
scas
pop
mov
dec
cmp
pop
arpl
sbb
cmc
or
xchg
pop
ljmp
mov
jge
xchg
scas
cmp
xorb
push
fidivs
test
dec
nop
mov
push
adc
arpl
inc
in
jle
push
jp
call
cmp
clc
rclb
cld
xor
jecxz
and
lret
add
shrl
mov
mov
or
add
jae
out
ret
mov
out
clc
inc
cmp
leave
cmp
dec
xchg
jp
lods
daa
mov
sub
jmp
lods
cmp
and
sbb
xor
adc
shll
cltd
push
test
sub
cmc
out
inc
cmpsb
pop
sbb
rcll
cltd
cmp
shrb
iret
xchg
jg
lock
out
or
stc
outsb
push
pop
mov
es
imul
and
jle
stos
push
imul
aaa
xor
and
ficomps
sbb
adc
pop
or
cmovl
imul
sarb
adc
testb
arpl
cmpsl
add
lret
cmpsl
jo
stos
jns
fs
dec
cmp
jp
fldenv
xchg
sarl
icebp
pusha
jae
push
mov
imul
xchg
and
std
and
ror
ficoml
stos
jne
or
aam
bound
stc
lahf
jge
sub
out
jno
out
xor
test
jl
inc
sarl
testb
dec
and
aaa
dec
gs
dec
cmp
lea
roll
in
out
cmp
sub
pop
stc
sub
fists
mov
je
dec
sbb
pop
sub
rclb
shlb
push
sub
lret
and
cmp
sub
fnsave
test
dec
in
subb
jnp
jno
roll
lds
and
pop
cmpl
mov
sub
or
loop
adc
mul
cmc
xor
and
std
dec
lods
mov
nop
imul
dec
lea
or
lds
fistpl
pop
mov
popf
dec
sti
mov
test
aad
nop
or
aam
aaa
add
dec
shrl
mov
or
lcall
decl
mov
push
mov
cmp
outsb
fld
jl
idivl
aaa
lods
test
jmp
mov
add
mov
mov
jns
loope
cmp
lret
mov
mov
sbb
lcall
and
or
fwait
push
enter
push
mov
and
fstpt
leave
sub
subb
jmp
movsb
in
or
repz
fimull
int3
sbb
or
pop
pop
hlt
movsb
mov
int3
inc
cmp
mov
adc
stos
adc
jl
pop
lock
cld
push
outsl
lcall
mov
push
jae
mov
pop
cmp
pop
aaa
add
jb
out
inc
inc
cmp
or
inc
push
vpandn
xchg
rcr
sub
int
ljmp
jbe
subl
xchg
pop
pop
jge
push
stos
push
in
into
test
add
mov
icebp
fdivs
mov
sbb
push
fcmovb
test
mov
pushf
fcoml
aas
add
aam
mov
xor
insl
adc
cmp
mov
dec
andl
imul
mov
leave
xor
cwtl
cs
int
mov
dec
out
xchg
xchg
mov
jp
lret
shlb
ret
cmp
test
fimuls
dec
lcall
cld
mov
sahf
sti
adcb
sti
cmp
and
insb
and
cwtl
out
pushf
mov
ss
and
push
xor
push
in
loope
xor
daa
pop
mov
iret
pop
cs
mov
nop
xlat
lods
pusha
adc
aad
incb
push
pmullw
imul
cmp
push
adc
jl
incl
aad
lock
mov
call
xlat
cmpps
xor
add
daa
fcoms
mull
push
pop
cmpb
stos
ljmp
ja
in
test
int3
clc
imul
mov
xor
jnp
mov
sub
mov
xorb
imul
cmp
leave
xchg
mov
cltd
scas
divl
mov
jo
das
imul
push
jle
test
lods
lods
imul
inc
xor
xchg
add
push
arpl
xor
mov
loop
mov
sbb
pop
les
sahf
adc
pop
popf
xchg
mov
popf
sbb
int3
push
mov
fsubp
mov
xchg
and
stc
jae
xchg
arpl
add
js
lret
hlt
xor
pop
pop
sbb
ret
jmp
mov
shl
out
into
test
outsl
push
scas
lahf
jmp
mov
arpl
push
sbb
fiaddl
repz
ffree
inc
addr16
les
or
aad
cmpsb
cmc
push
popa
push
call
sbb
pop
add
fs
xor
jle
ja
sub
pop
popf
sbb
loope
cs
inc
lods
or
jl
popf
jo
in
sub
pop
aas
ss
push
sbb
and
test
mov
stc
sbb
push
or
data16
std
xchg
jbe
mov
popa
mov
stc
xchg
or
daa
or
test
test
aam
mov
scas
sub
mov
jge
gs
adc
cmpl
repz
jo
xchg
ret
pop
aam
pop
fimull
dec
mov
push
xchg
adcl
mov
push
hlt
sub
adc
push
cmp
sbb
loopne
jnp
dec
mov
adc
inc
push
inc
push
aas
pusha
jne
mov
popf
xlat
sbb
mov
sub
xchg
add
sbb
dec
adc
and
ljmp
xor
movsl
into
inc
mov
aam
mov
fiadds
jg
cmp
movl
rcrl
decb
sbb
sbb
mov
fsubl
in
movsb
outsb
pop
iret
scas
push
clc
or
mov
stos
bound
rcr
enter
xor
push
mull
and
xor
pop
sub
xor
pop
fistps
cmp
aad
aas
dec
adc
push
loope
sbb
into
push
mov
fnsave
out
fdivp
cld
sarb
adc
push
sbb
cmpl
lock
lods
xor
adc
xchg
das
mov
push
xchg
xchg
and
fistpll
mov
and
xchg
xor
mov
pop
mov
pusha
out
mov
xor
and
sub
sbb
jecxz
stos
or
decl
cmp
or
and
xchg
cmp
hlt
loop
mov
outsb
aam
pop
add
ljmp
test
jle
outsb
and
fs
neg
cmp
xchg
mov
daa
add
andb
test
ljmp
jp
cmp
int3
popa
inc
xor
imul
push
bound
dec
xchg
jnp
mov
sub
inc
fdivs
pop
outsb
jnp
cmpsl
mov
clc
jp
mov
adc
sub
dec
and
sahf
pmaxsw
jmp
outsb
shll
fcoml
or
inc
cmp
stc
mov
enter
or
cmpsl
in
inc
xor
jle
loope
mov
repnz
xchg
pop
mov
insb
loop
jl
repnz
jnp
push
and
xor
cmp
mov
add
pop
pop
inc
xor
popa
jae
stos
jo
sarb
ficompl
mov
sbb
insb
insb
repnz
push
and
fsubrs
cmp
push
mov
xor
popa
adc
dec
cmp
jne
or
dec
cmp
or
mov
test
test
sub
mov
xchg
dec
sub
je
inc
inc
shll
add
mov
xor
shld
pop
pushf
rcl
dec
sbb
lods
xor
out
clc
fs
mov
xor
mov
ljmp
shll
int3
mov
xchg
add
adcb
inc
int
and
popa
pop
xchg
fs
or
inc
mov
loopne
adc
mov
in
pop
call
inc
icebp
add
cwtl
repnz
mov
ja
stos
test
nop
roll
push
mov
dec
aas
scas
cmp
std
sbbb
jmp
inc
dec
enter
cmp
frstor
cs
inc
into
mov
xchg
sahf
push
pop
xchg
push
mov
loopne
jo
in
inc
aas
push
cmp
movsl
push
dec
out
into
aas
cmp
popf
or
add
push
stos
data16
pop
sbb
addl
sbb
adc
imul
rcrb
mov
pop
in
sbb
mov
push
inc
mulb
dec
and
add
xchg
pop
mov
sub
ja
xchg
test
orl
dec
sbb
jg
push
outsl
xor
sbb
mov
push
call
es
fs
cmp
adc
rclb
das
add
xor
pushf
clc
mov
sbbb
pop
and
int
test
push
xor
mov
inc
fbld
divl
scas
shlb
adc
in
ds
xchg
cltd
inc
std
mov
push
test
fstpl
pop
adc
insl
adc
add
out
pusha
rcrb
sti
shlb
lret
insb
xor
inc
sbb
mov
push
shl
push
das
pop
jp
dec
in
call
jge
or
or
jnp
ret
ficoml
or
xorl
stc
xchg
or
scas
xor
sub
jmp
sbb
rcpps
push
jp
xchg
inc
bound
push
jl
add
sbb
stos
sbb
mov
jmp
xchg
rcr
icebp
sbb
cwtl
sbb
fwait
in
xchg
mov
out
enter
dec
mov
cwtl
mov
sbb
les
push
nop
leave
fidivrl
pop
adc
push
mov
xchg
inc
push
push
aad
repnz
mov
test
test
jge
into
xor
int3
es
mov
dec
ret
popf
arpl
stos
and
mov
and
xchg
xchg
sub
and
ss
dec
or
cli
jno
movsl
mov
pop
adc
xor
and
xrelease
add
jbe
stos
std
sub
call
xchg
or
jbe
movsb
pop
adc
add
loope
adc
xor
sbb
aaa
movsl
and
pop
or
mov
add
lock
sbb
jno
fs
jne
lret
add
dec
into
cmp
gs
push
fxch
adc
dec
jl
mov
inc
call
mov
clc
stos
push
mov
pusha
adc
add
call
nop
fnstenv
mov
clc
push
movsb
cmp
loope
repz
mov
jmp
sub
xchg
sbb
and
pop
pop
pop
addr16
push
pushf
cs
inc
xor
mov
cmpsl
jbe
mov
leave
xchg
mov
cmp
and
and
jge
cli
xchg
cmpsl
inc
sbb
add
dec
cmp
pop
roll
cmp
daa
test
jns
add
cmp
std
cmp
cs
bound
test
push
lret
lods
or
clc
add
and
or
fsubl
fadds
cmp
xor
inc
fimull
jnp
stos
sbb
sbb
pop
aad
aaa
popa
imul
xchg
mov
push
mov
push
jle
int3
fimull
sub
sub
filds
jl
jne
icebp
cmc
pop
or
clc
aaa
arpl
clc
push
cmp
adc
aam
sub
or
pop
add
push
aaa
mov
xchg
ss
movsb
mov
in
lret
adc
stos
mov
in
push
hlt
sub
popa
jb
xchg
fidivs
pop
inc
decb
sbb
test
mov
jg
lret
nop
jle
push
mov
shll
test
scas
nop
popf
add
or
notl
mov
stos
movsl
mov
adc
pop
jne
fldenv
leave
dec
jb
outsb
lods
jo
add
cmp
cmp
loop
stos
pop
fs
lea
jge
jmp
dec
sarl
call
push
mov
pushf
jo
add
stos
mov
ret
adc
faddl
mov
jns
mov
mov
daa
int
outsl
mov
xchg
xchg
rcrl
push
mov
or
mov
lods
jbe
push
cmp
mov
push
fdivrs
clc
cmp
movsl
outsl
pop
repz
jae
xchg
pop
cld
push
dec
jle,pn
test
add
ljmp
and
aad
lret
leave
jmp
add
test
xchg
push
mov
dec
imul
call
outsl
iret
stos
ret
imul
sub
enter
es
or
mov
jno
divl
sub
cmc
adc
push
scas
or
test
pop
inc
imul
inc
in
popf
push
fs
movb
sbbl
fisttps
or
inc
hlt
fbstp
lock
or
pop
movsl
pushf
mov
jl
repz
dec
imul
movsl
cs
ficomps
or
inc
adc
jne
push
inc
jp
ret
scas
in
setg
xor
and
sbb
mov
nop
daa
sahf
push
inc
movsl
testl
fcompl
shlb
xor
daa
ljmp
cltd
and
xchg
loopne
in
push
xchg
cmpsb
loope
dec
loope
cmc
jle
insb
dec
mov
ja
jno
adc
fcoml
xor
and
jmp
stc
lds
sbb
push
out
or
test
mov
test
imul
lahf
xor
mov
inc
negl
push
mov
sbb
sbb
pop
mov
incl
xor
and
in
cmp
push
pop
push
jb
cmp
pop
mov
xchg
in
je
add
push
cmc
repnz
xor
jl
dec
lret
leave
mov
je
rcl
int3
pop
lret
xor
jmp
das
data16
js
jecxz
pop
pusha
outsl
icebp
sbb
dec
int3
and
xor
iret
insl
mov
jns
push
test
mov
mov
out
pop
cli
dec
lret
add
pop
in
mov
xchg
loopne
xorb
mov
sub
sub
cli
xchg
aam
dec
rclb
ja
je
das
imul
mov
adc
sub
orl
rolb
stos
frstor
data16
rcll
adc
inc
arpl
cmp
pop
arpl
jecxz
and
cltd
sbb
push
sti
ss
lahf
int
vrsqrtss
mov
jae
loopne
dec
xchg
and
repz
push
mov
push
sbb
xlat
inc
fmuls
cmc
mov
inc
push
dec
bound
mov
pop
cwtl
mov
or
pop
add
mov
test
aam
mov
push
sbb
movsl
xchg
jl
lret
xchg
mov
sti
xchg
dec
mov
xchg
inc
jmp
or
arpl
shrl
call
and
lock
xchg
imul
mov
idivb
iret
addb
std
xchg
or
aam
imul
xchg
pop
cltd
adc
jns
std
sub
cwtl
pop
outsl
add
movsl
lods
jno
loope
inc
fs
or
adc
stos
or
inc
movsb
sbb
ret
pop
icebp
cmp
pop
addl
mov
sub
jbe
fnstcw
mov
jg
insl
push
inc
js
outsb
stos
js
push
and
aam
negl
mov
dec
mov
out
cmp
sub
sbb
pop
into
pop
in
xor
cmp
mov
dec
fisttps
lock
popa
and
pop
out
dec
movsl
shrl
inc
xchg
add
es
pop
movhps
mov
lods
push
xchg
fisubl
cmp
lret
repz
add
mov
jae
xor
fmuls
inc
das
and
rcll
fcmovnb
popa
das
pop
cmpsl
data16
mov
pop
pop
or
je
mov
mov
das
adc
mov
sbb
popa
fsubs
aam
push
jge
xchg
scas
loope
mov
mov
add
and
dec
bound
dec
xchg
icebp
xlat
jns
notb
xor
lds
pusha
sti
int3
push
push
fs
adc
mov
stos
insl
adc
enter
rcrb
pop
xor
das
jae
daa
add
mov
scas
mov
test
scas
push
movsb
mov
jg
add
test
jl
or
orb
inc
cmp
movl
or
adc
iret
sarl
inc
and
lret
dec
loop
inc
shll
std
dec
and
sbb
jg
jb
push
sar
rol
jmp
aas
lea
add
mov
scas
cwtl
xchg
lcall
iret
orl
imul
out
sub
xor
pop
or
sub
neg
adc
xor
push
aas
adc
or
in
shrb
shlb
pop
dec
inc
into
aaa
cmc
xchg
xchg
jl
xchg
and
dec
sbb
inc
mov
xor
dec
aad
add
xchg
sbb
enter
push
mov
ljmp
mov
push
push
imul
dec
lods
call
out
dec
in
mov
es
mov
xchg
in
push
std
mov
add
in
xor
insl
cmc
notl
jnp
enter
nop
sub
inc
cltd
int3
out
stc
add
jecxz
insl
pusha
inc
xchg
stc
mov
pop
dec
mov
add
push
add
data16
aad
scas
test
insb
add
pmulhw
loope
bound
out
rorb
out
cwtl
add
xor
cltd
push
or
xor
mov
fdivl
aas
loop
push
call
imul
jnp
pop
fmull
les
sub
inc
jp
mov
clc
gs
push
lcall
push
hlt
push
dec
mov
jb
sti
inc
adc
cld
cld
movsl
out
and
mov
sub
lock
fisttpl
das
xchg
cli
dec
push
xchg
mov
popa
cmc
popa
pop
dec
or
call
scas
pop
push
aaa
outsl
pop
mov
inc
shlb
dec
jg
sbb
cmp
and
push
push
mov
cmpsl
sub
dec
pop
mov
cmp
cwtl
and
js
fisubrl
add
cmp
mov
and
push
into
dec
mov
repz
jmp
push
dec
add
scas
lret
sahf
jno
test
lret
cmp
cmpsb
imul
pusha
roll
mov
testb
fmulp
dec
jecxz
jnp
insl
add
loope
cld
sub
out
mov
shlb
cmp
ljmp
mov
push
mov
mulb
pop
mov
push
aad
out
xor
sub
aas
popf
inc
gs
mov
dec
roll
cli
mov
jns
repnz
lret
pop
xchg
out
mov
out
jb
loope
fbld
mov
shl
sub
sbb
pop
test
add
push
mov
adc
rcll
xchg
mov
jmp
out
jge
inc
cmp
cmp
inc
xlat
jg
subb
pop
push
push
mov
cltd
inc
jecxz
pop
mov
sub
aaa
fs
pop
or
mov
lret
push
jb
inc
inc
cmp
mov
subb
fdivrl
clc
jnp
fnstenv
mov
mov
xchg
push
sbb
jnp
int
mov
ret
xchg
repnz
push
mov
in
jo
push
and
jne
sub
sub
inc
push
push
pminsw
jne
std
in
pop
and
add
es
and
mov
jno
add
sbb
aaa
add
stc
ja
and
das
ljmp
xchg
push
push
xor
repnz
push
cli
sbb
adc
lahf
sbb
mov
popa
and
aaa
adc
xchg
stos
lret
sub
sahf
int3
je
add
fwait
adc
movsl
dec
dec
mov
cmp
inc
test
out
mov
adc
add
or
dec
or
sar
jbe
mov
mov
push
adc
xlat
push
test
sbb
cmpsl
mul
notb
outsl
xchg
xchg
adc
push
adc
add
mov
sti
inc
sub
push
xor
testl
daa
xor
mov
gs
lret
jb
adc
add
and
mov
or
xor
inc
xorb
and
sub
xlat
jle
scas
icebp
lahf
mov
jle
cmp
sub
mulb
cmp
int3
sub
sahf
and
mov
push
xchg
xchg
pop
pop
xchg
mov
add
pop
nop
sbb
cmp
sub
aaa
xchg
jmp
adc
pop
adc
ret
ss
popa
push
fdecstp
adc
push
mov
mov
loop
add
pop
push
test
stos
mov
pop
mov
pop
pop
mov
and
mov
add
loope
test
mov
add
fisttpl
cmpl
ss
mov
push
sub
sub
fnstcw
adc
inc
int
sbb
sahf
cs
xor
cltd
dec
mov
test
imul
mov
dec
jp
ds
lock
adc
cmp
add
sahf
das
in
out
pop
and
cs
push
lods
add
pop
xchg
xor
inc
jns
loopne
lods
add
fiadds
adc
fnstenv
and
mov
mov
mov
test
ss
xorl
jg
insb
dec
xchg
sarl
mov
dec
pop
mov
mov
js
xchg
jnp
xchg
mov
fnsave
lret
xor
cmc
in
loop
ret
ja
lcall
sbb
ja
hlt
lods
jle
out
mov
repnz
fbld
adc
push
mov
jns
push
sub
adc
addl
pop
clc
xchg
jmp
lcall
and
sarl
mov
jno
sar
cmp
mov
xchg
mov
add
inc
jecxz
mov
push
cmp
pop
cmp
dec
dec
fimull
add
popf
popa
rol
or
shll
inc
icebp
push
cltd
js
jl
in
repnz
fwait
sbb
inc
adc
flds
jmp
jecxz
dec
dec
add
fsubl
fwait
and
aad
xlat
rorl
call
imul
cmp
and
jmp
jmp
adc
addr16
jnp
push
xor
mov
dec
xchg
inc
fdivs
aaa
sbb
push
mov
add
push
xchg
out
fimuls
outsb
push
mov
and
cmpsl
stc
mov
in
outsb
mov
xor
jmp
push
mov
sbb
hlt
add
jl
jns
cmc
loop
out
mov
mov
and
enter
jg
cltd
xchg
mov
sub
inc
push
cmp
and
inc
jae
aas
inc
xchg
add
movsb
fcmovbe
cltd
cld
fists
pushf
ficompl
lret
notb
mov
inc
aam
xchg
add
xchg
xor
cmpsl
xchg
add
dec
shr
imul
xchg
rclb
mov
pop
cmp
out
jmp
dec
pop
push
stos
shr
add
sub
pop
and
fbld
dec
add
adc
aad
add
mov
dec
sarl
or
jl
int
pop
jo
xchg
xor
mov
xchg
cltd
das
xor
fcoms
hlt
inc
or
ret
add
and
xchg
es
loopne
adc
sbb
stc
rcll
jbe
add
cmpsb
fs
mov
ja
test
and
jecxz
pushf
xchg
push
shr
mov
fstpl
dec
and
test
hlt
fptan
loope
add
dec
and
pusha
pop
sub
fs
xorl
pop
fnsave
fucomp
xor
jge
dec
iret
inc
daa
mov
push
jmp
xor
jmp
movsl
sbb
andps
nop
cmpsl
int3
into
inc
in
jl
jns
ret
in
xor
mov
lcall
jle
in
dec
jns
push
jnp
or
xlat
and
push
sar
fstpl
xchg
mov
xchg
in
or
fcomip
mov
mov
in
push
subb
jb
addr16
mov
cmpsl
cld
push
mov
add
pushf
sahf
push
orb
jbe
mov
dec
pop
outsl
jmp
jns
jno
adc
fnstsw
mov
mov
in
hlt
scas
jb
adc
inc
mov
add
jmp
dec
loopne
sbb
adc
xchg
sub
inc
je
nop
xchg
not
aad
jmp
loopne
outsl
cmp
int3
adcb
movsb
mov
jne
dec
pop
pop
mov
test
mov
xchg
xchg
js
scas
mov
addl
movsb
repz
inc
aas
pop
and
push
add
inc
aam
add
movsl
fldenv
xor
shrb
scas
pop
inc
dec
xor
leave
fucom
push
ret
inc
in
sbb
mov
xlat
popa
or
adc
xchg
es
es
adc
add
xlat
outsl
push
pop
jl
sahf
cmpsl
cmp
lcall
js
cld
pop
je
sub
xchg
mov
dec
mov
loop
outsl
mov
jmp
add
fadds
enter
dec
hlt
std
mov
mov
push
es
imul
adc
cwtl
and
mov
sbb
inc
aaa
inc
sub
sbb
cmpsb
push
dec
insb
fs
xchg
cs
add
adc
mov
je,pt
stc
mov
dec
dec
insl
and
std
jb
mov
mov
or
inc
into
mov
enter
loopne
sub
idivl
inc
shrb
push
sti
jae
jb
pusha
fidivl
pop
pop
les
push
mov
jmp
jp
mov
ret
inc
push
testl
out
jmp
sahf
and
jge
jge
add
cmc
cmp
or
daa
push
jle
icebp
iret
aam
inc
stos
out
mov
jmp
sub
divl
je
sbb
sbb
cmp
and
xchg
pop
jmp
outsb
orb
dec
adc
pop
stc
xorb
xchg
dec
push
dec
sub
sbb
jb
adc
into
sbb
hlt
dec
pop
int3
ja
call
or
mov
out
lahf
sti
jne
addr16
inc
movq
inc
mov
jp
adc
jl
push
jmp
rclb
cmc
xchg
sahf
sbb
jge
lcall
jmp
and
sbb
pop
mov
push
nop
shll
fwait
stc
insl
dec
in
pusha
push
jmp
pop
fbstp
and
and
cmpsb
negl
adc
inc
or
xor
dec
push
dec
aas
int3
into
pushf
xchg
test
sahf
xor
adc
xchg
adc
sbb
sub
dec
mov
cwtl
adc
sarl
add
iret
or
cmp
out
mov
subl
cmp
mov
jae
cmp
sarl
adc
popf
insb
cmp
call
jbe
icebp
test
in
iret
test
gs
into
repz
aam
push
cli
sbb
pushf
pop
mov
into
loop
jno
mov
es
sbb
mov
mov
addb
std
sub
fwait
cltd
aaa
adc
mov
icebp
jge
stos
xor
push
aad
frstor
ds
mov
mov
stc
jmp
push
fistps
fadds
jmp
test
xchg
dec
dec
mov
sahf
cwtl
xchg
in
aam
pop
or
movsb
icebp
movsl
mov
inc
jl
popa
lods
scas
jge
cmpb
xchg
rolb
cmpsb
lods
mov
sahf
pop
cld
and
sbb
mov
insb
push
mov
adc
out
xchg
adc
mov
jle
sub
xchg
sbb
scas
sbb
cmp
insl
inc
mov
test
addr16
inc
dec
jg
out
add
cmpsb
push
mov
rcrl
mov
adc
test
stos
dec
lds
je
dec
cmc
aam
and
inc
sbb
into
cltd
jae
std
jae
ror
mov
mov
nop
xchg
cmp
push
les
mov
adc
push
iret
jp
fcomps
jns
stos
es
mov
iret
sbb
mov
push
ja
jmp
push
insl
push
outsb
popf
inc
jo
test
cmp
test
leave
test
mov
cmp
mov
mov
adc
inc
in
adc
and
cmp
adc
imul
cwtl
xchg
repnz
sbb
adc
fwait
test
pop
jae
and
pop
inc
jnp
int
int3
sub
xchg
push
mov
mov
incb
sbb
dec
fucomp
cltd
push
outsl
and
xchg
xchg
stos
or
jno
pusha
lret
mov
arpl
mov
aad
pop
repnz
xor
inc
jp
xchg
fimull
mov
test
out
mov
imul
cmpsb
xchg
mov
sub
xchg
pop
inc
or
inc
mov
lds
ficomps
cmp
mov
cmc
xlat
in
pop
ficoms
popl
mov
mov
pop
ret
mov
and
push
lods
pusha
mov
and
sbb
jbe
lcall
loope
push
adc
push
sbb
lahf
std
sub
jl
push
addl
pop
fs
sub
adc
inc
pushf
adc
pushl
enter
lret
enter
mov
cmc
lods
mov
add
or
das
inc
pushf
out
repz
jmp
and
mov
ja
pop
and
jb
sarb
sbb
add
and
repnz
xor
adc
sbb
mov
push
aam
aad
pop
push
cmp
test
out
lcall
imul
cs
fcoms
lock
pop
pushf
jecxz
push
jbe
sub
fdivrl
pop
dec
rorb
adc
outsb
incb
mov
frstor
mov
movsl
sub
iret
pop
push
iret
pop
push
rcl
adc
adc
cmp
hlt
or
dec
lahf
subl
xor
leave
loopne
and
fwait
and
setb
test
sbb
inc
mov
outsb
pop
cli
inc
inc
scas
cmp
test
loope
xchg
or
incb
in
jb
into
je
popa
sbb
mov
mov
pusha
jb
fcomps
or
stos
stos
dec
mov
mov
push
scas
mov
iret
fwait
ret
loopne
adc
imul
icebp
mov
fs
dec
push
call
jl
lahf
jnp
cmpb
mov
mov
push
pop
inc
cmpsb
rcrb
ljmp
mov
loope
es
pushf
popa
rcrl
pusha
and
shlb
test
cld
push
test
out
inc
mov
mov
insl
sub
icebp
insb
icebp
movsl
das
dec
mov
xchg
mov
adc
cmp
rorl
adc
stos
lahf
and
push
add
fildl
aad
test
mov
push
inc
sbb
push
or
fimull
pop
dec
dec
sub
xor
leave
inc
sbb
fidivrl
sbbb
add
cmp
and
add
mov
fimuls
movsl
out
popa
fidivrl
fwait
repnz
aaa
adc
pop
cmp
jbe
ljmp
inc
cmc
xlat
enter
stos
xor
jle
jp
sbb
push
fs
adc
shlb
test
nop
pushf
daa
icebp
or
jns
movsb
mov
rorl
jb
pop
pop
jp
scas
mov
inc
lcall
or
mov
gs
pop
lahf
std
and
movsb
mov
test
insb
lods
dec
popf
jno
add
into
out
push
std
ficompl
add
inc
popf
popl
test
jmp
mov
xor
shlb
cmc
and
int
dec
dec
mov
push
cmp
cmp
dec
sub
outsl
jno
push
cmp
add
popf
pop
fstps
dec
idivl
xor
sahf
sub
mov
into
mov
inc
adc
call
sbb
sbb
lret
xchg
testb
popf
xchg
addb
push
pop
pop
sub
scas
mov
inc
inc
jbe
pop
xor
int3
and
pop
mov
xor
sti
movsl
pop
jb
xchg
cmp
bound
es
adc
mov
call
cmc
outsl
dec
cmpb
out
dec
mov
lds
sub
adc
int
jae
and
xchg
push
sub
or
cld
pushl
lods
test
jp
fwait
pop
cmp
imull
and
scas
in
push
sbb
cmp
adc
jae
movsb
jg
push
lds
mov
rcrl
fldt
adc
jp
sbb
stos
sbbl
ret
stos
xchg
movups
xchg
and
push
xchg
push
je
scas
test
test
pop
dec
outsb
flds
in
rcl
jecxz
sbb
pop
jmp
sbb
xor
push
sbb
xchg
dec
push
aad
xor
xor
mov
sbb
insb
outsl
sub
adc
jns
dec
sub
add
cmpsb
add
movsl
sub
sbb
insb
and
inc
das
js
pop
imulb
jbe
hlt
and
dec
aad
push
stos
xor
mov
stc
adc
sbb
test
imul
mov
mov
icebp
bound
std
pop
mov
xor
or
imul
nop
les
xbegin
mov
out
subb
lods
push
addr16
jno
fimuls
dec
aaa
mov
das
repnz
or
sti
inc
xor
hlt
pusha
push
mov
mov
gs
push
sbb
rolb
repnz
rcrb
scas
test
xchg
outsl
pop
mov
push
jo
pop
sub
mov
sub
fbld
xchg
ljmp
rclb
sbb
cltd
adc
push
and
repz
mov
mov
aad
xlat
mov
movsl
sub
jle
insl
cmp
dec
inc
xchg
cltd
add
inc
lods
xchg
push
flds
shll
inc
in
jecxz
jne
xchg
int
sub
mulb
out
test
push
test
jl
mov
seto
pop
lcall
mov
int
cmp
push
out
cs
frstor
dec
lret
stc
repnz
fwait
push
lret
daa
pop
sub
dec
sbb
add
cmpsb
jns
mov
mov
jae
int
popf
xchg
cmpsb
rolb
cmp
mov
push
in
js
push
ds
jo
dec
in
imul
icebp
adc
mov
movsb
fsubr
and
cmp
mov
xchg
aas
xchg
sbb
fcompl
popf
jl
sub
sbb
jno
jnp
lret
lods
iret
mov
xchg
andl
addl
cmp
lods
sbb
push
cltd
or
jae
out
jae
jecxz
repz
push
repz
pushf
xchg
or
mov
xchg
mov
jmp
jmp
xchg
push
jae
pop
repz
mov
sbb
pop
int
push
and
jecxz
xor
pusha
leave
mov
hlt
sbb
je
lret
mov
scas
mov
mov
add
iret
or
mov
subl
mov
jb
mov
inc
leave
xor
test
xorl
scas
mov
mov
and
pusha
aas
and
rclb
mov
jmp
loop
mov
push
test
les
shlb
add
ja
dec
inc
jge
stos
pushf
data16
push
stos
sub
ret
int
lcall
cmp
inc
pop
shlb
sub
pusha
sbb
pusha
out
xchg
jp
fsubrp
mov
scas
shl
in
mov
xchg
mov
movsl
and
repnz
sahf
add
and
xchg
pop
dec
xor
bnd
mov
mov
jnp
mov
jb
jae
add
loopne
mov
int3
arpl
div
js
pop
stos
cli
andl
aaa
push
or
xchg
sub
cli
xor
leave
inc
add
push
jno
mov
jmp
sbb
imul
loope
ret
jnp
mov
ds
leave
sub
mov
das
and
fistps
jmp
push
mov
call
sub
add
faddl
pop
inc
pop
fisttpll
xchg
dec
fildll
mov
mov
ljmp
jne
xchg
rep
jo
sti
lods
dec
push
adc
or
clc
cmp
add
push
dec
cmpb
jle
or
push
int3
out
push
lods
jae
add
cmp
cwtl
lods
ret
out
add
ror
fistps
les
inc
test
pop
inc
xchg
sahf
sub
leave
out
outsb
jns
in
cmp
inc
repz
fiadds
xchg
xor
ss
out
enter
xchg
and
mov
dec
js
mov
js
inc
push
xor
push
adc
stc
rclb
mov
mov
leave
and
jb
and
cld
or
mov
sub
adc
int
pushl
jge
xor
iret
cmovg
lret
iret
rcrl
sbb
inc
bswap
in
test
cmp
mov
xchg
push
cltd
sbb
mov
pop
stos
inc
and
sti
pushl
xchg
dec
jbe
repnz
sahf
das
dec
push
mov
shrb
dec
mov
test
das
push
dec
insb
outsb
pushf
lods
push
sub
loope
add
or
adcl
and
addl
and
stc
xchg
gs
ret
movsb
int3
out
mov
and
test
out
inc
fldcw
movsb
mov
aaa
jge
cmp
mov
mov
outsl
and
and
push
sub
jecxz
jp
gs
or
mov
xor
cmp
xchg
pop
dec
fldl
push
imul
jg
je
push
lods
daa
pop
xchg
lret
xchg
js
repnz
add
out
and
stos
test
cmpsb
push
outsl
insl
adcl
pop
in
or
pop
mov
xchg
sub
push
mov
and
imul
mov
stos
je
sbb
divb
aas
aaa
das
cmp
into
js
pop
rclb
stos
clc
adc
mov
aam
jnp
pushf
mov
aam
adcb
test
mov
out
push
fldt
pusha
add
pop
pop
scas
imul
in
cld
or
pop
pop
and
ss
push
inc
stos
call
mov
xchg
ret
pop
xor
les
repz
out
pusha
sub
xchg
test
sahf
jb
sub
xor
andb
popa
aad
inc
cli
lcall
and
loop
xchg
xchg
xorb
ja
pushf
xchg
call
mov
inc
cmp
mov
arpl
mov
cmpsb
cli
or
xchg
jl
mov
inc
jl
xor
in
je
test
movsb
iret
push
push
pushf
xor
push
push
or
ss
lcall
sub
popf
xchg
jp
gs
cmp
clc
std
inc
dec
pop
xor
dec
aaa
in
outsb
insb
aas
sub
call
movsb
outsb
dec
lret
mov
pop
cmp
push
ret
add
sbbl
mov
test
popa
mov
daa
ljmp
nop
push
loop
adc
jns
push
cmp
testb
xor
frstor
push
stc
push
lds
adc
pop
inc
mov
je
fs
push
or
adc
dec
popf
insb
lea
lods
inc
into
loopne
test
or
dec
mov
cmp
jp
jle
out
and
xchg
jg
dec
or
fisubs
mov
sahf
jecxz
sub
into
les
xor
sub
mov
add
add
sbb
jne
push
mov
inc
add
xchg
call
jns
mov
push
sub
ret
or
push
sbbb
push
cli
jmp
leave
inc
push
cli
insb
data16
sarb
sub
cmp
aaa
dec
push
cmp
divb
mov
mov
clc
and
stos
or
mov
jb
enter
fldcw
xor
rclb
stc
adc
into
push
xor
push
les
push
mov
push
xor
lcall
inc
pop
scas
andl
jne
and
iret
mov
mov
fiaddl
sbb
add
outsl
xchg
mov
push
mov
push
pop
and
push
and
div
aam
rolb
ja
lret
lret
psubd
mov
xchg
xorb
jnp
xchg
std
add
or
adc
pop
sbb
loopne
xor
push
mov
cli
roll
adc
idivb
imul
outsl
add
fs
insb
fwait
push
jecxz
push
jle
add
xchg
arpl
cli
sub
mov
mov
aaa
jecxz
sbb
xchg
scas
ljmp
xchg
or
mov
rcr
rcl
cmp
mov
cwtl
xchg
sahf
sbb
mov
outsb
imul
and
push
inc
ljmp
xor
jb
push
loop
mov
fcomp
repnz
mov
pop
push
push
push
test
je
mov
cmp
xchg
xor
and
ljmp
jp
sbb
dec
mov
fcomps
mov
subb
push
inc
jmp
outsb
cs
clc
add
inc
jecxz
test
xchg
mov
jl
shlb
insb
jge
push
xor
cmp
in
fmuls
sbb
cmc
pop
pushf
loop
cmp
mov
adc
adc
mov
adc
jo
jmp
cmc
dec
jg
sub
xchg
cmpsl
mov
out
adc
testb
pop
daa
in
jnp
cltd
shll
jbe
xchg
jl
inc
testb
sarl
out
inc
call
mov
push
fldt
xchg
adc
adc
fdivrp
shrl
jp
cld
fimull
aad
idivb
adc
ljmp
xor
jb
inc
inc
idivl
icebp
mov
mov
and
fisubl
ficoml
ret
jnp
jge
fisubrs
call
xchg
push
push
sbb
repnz
bound
lods
inc
dec
jp
pop
push
xchg
xchg
mov
aam
and
psubq
ds
cltd
adc
sbb
xchg
test
sbb
sar
inc
jl
fildll
icebp
loope
iret
je
dec
int
and
fildll
mov
orl
jo
fstp
sbb
and
or
cli
mov
or
ja
cltd
in
stos
lret
mov
insb
jne
pop
sbb
dec
dec
jno
fsubl
jns
pop
data16
out
clc
push
int
incb
cmpsl
fwait
in
inc
or
mov
addr16
pop
pop
out
movsb
and
adc
mov
jne
pusha
lahf
scas
xchg
sarb
cwtl
xor
push
and
pop
pop
adc
inc
mov
roll
movsl
and
mov
mov
sbbb
frstor
pop
insl
dec
mov
roll
mov
jl
ss
fdivrl
inc
cmc
mov
add
inc
and
push
cmp
mov
notb
push
jbe
rcrl
nop
and
push
scas
pop
mov
or
rcll
out
out
lea
aas
cmp
add
jge
loop
push
mov
pop
std
adc
dec
dec
daa
fdivrs
mov
xchg
sahf
jno
pop
aad
sub
cmp
xchg
xchg
stc
in
or
xor
ucomiss
mov
inc
pop
pop
or
dec
cmp
cmp
arpl
test
mov
loop
mov
mov
in
jae
or
push
roll
xorl
push
movsl
mov
sbb
das
loope
imul
dec
jmp
jmp
cwtl
xor
jge
in
test
popf
cmc
add
daa
sub
xor
jb
arpl
dec
pop
mov
pop
ds
lods
insb
or
cmp
mov
subb
cmp
sarl
test
fmulp
popf
mov
fmul
push
rcrb
bswap
jae
add
pop
aaa
add
pop
stos
mov
or
aaa
inc
iret
icebp
sahf
sbb
xchg
aaa
lcall
dec
and
cmc
and
movsb
and
movsb
test
in
inc
in
bound
mov
leave
iret
push
cmp
test
rcrb
inc
aad
int
js
cwtl
pop
sub
add
xor
movsb
clc
addb
out
ljmp
out
rclb
dec
mov
jge,pn
addr16
and
leave
jl
addr16
xor
add
idivl
mov
ja
pop
jns
fs
lock
sarb
cmp
stos
jp
popa
out
xchg
sub
push
or
mov
inc
js
outsl
pop
divb
repz
and
mov
cmp
ja
mov
je
mov
idivl
out
sbbb
dec
dec
test
lds
fistpll
adc
outsl
pop
repz
movsb
push
in
lea
xchg
ss
iret
roll
mov
xchg
ret
out
icebp
sbbb
inc
pop
mov
sbb
xchg
test
nop
inc
enter
mov
and
inc
mov
xchg
dec
xchg
and
dec
push
div
pop
lret
mov
sub
inc
ficomps
jecxz
sbb
lcall
inc
mov
dec
xchg
mov
push
xor
lods
xor
lock
xchg
pop
int3
jmp
fcom
adc
push
mov
popf
mov
das
jmp
loopne
test
call
cli
js
adc
lret
sub
cld
mov
mov
loopne
and
fdivrl
push
insl
stos
cmp
out
mov
xor
mov
pop
xchg
addr16
sbb
aas
xchg
mov
adc
mov
sub
mov
sbb
sbb
pop
jle
xor
and
mov
arpl
xor
xor
cmp
xchg
inc
mov
nop
inc
clc
sub
inc
inc
into
js
adc
adc
shlb
xchg
repz
sbb
std
jp
cmp
or
cmp
fstp
mov
jecxz
mov
out
lods
xchg
pop
push
xor
mov
sub
mov
adc
push
mov
negl
lods
mov
and
js
repnz
adc
repnz
pusha
cmpl
mov
fwait
inc
jl
mov
mov
pusha
and
mov
xor
imul
divl
scas
mov
ljmp
xor
pop
ficompl
jns
dec
call
dec
xchg
xor
popf
mov
fwait
aaa
jnp
pusha
jg
sarb
jno
xchg
repz
arpl
mov
icebp
stos
shrb
cmp
dec
outsl
pop
pushf
pop
jne
inc
bound
fs
sub
daa
icebp
stos
cmp
fsubs
push
dec
mov
inc
icebp
iret
sbb
je
inc
jae
mov
mov
cmpb
int
lcall
lds
pop
pop
xlat
gs
ss
sub
nop
mov
popf
mov
faddl
testb
and
jne
push
inc
pop
test
js
test
dec
jle
int
and
push
jb
fsubrs
xor
cld
ss
jns
in
dec
inc
mov
inc
cmp
inc
bound
dec
and
push
jnp
pop
jmp
sbb
cmpsb
dec
ficoml
js
popa
jns
mov
sbb
sub
xor
ja
mov
leave
lock
aaa
cltd
mov
xchg
sbb
fmul
cmp
cmp
inc
dec
movsl
and
sbb
roll
sbb
xor
icebp
or
jbe
add
scas
adc
or
push
xchg
mov
shl
dec
add
and
add
int3
dec
mov
aad
out
movsb
pop
scas
stc
pop
push
xor
out
test
push
das
inc
mov
xchg
pop
das
leave
dec
addb
in
icebp
push
mov
or
sahf
nop
xor
or
mov
and
les
shr
iret
movsb
inc
addb
push
jp
divl
test
push
mov
cmp
cs
cmpb
das
cmp
cmp
jns
mov
out
sahf
mov
sahf
dec
push
jbe
filds
mov
out
cmp
rorl
or
add
jae
xchg
pusha
xor
pop
xlat
or
push
or
xchg
ret
dec
out
loopne
jnp
xor
subb
adc
push
out
sti
mov
jge
das
jecxz
push
cmp
movzwl
int
adc
jbe
sbbb
ds
mov
ss
inc
pushf
imul
scas
push
pop
pop
jle
pop
fnstcw
sti
nop
inc
scas
loop
cmp
out
lea
jno
movsb
aas
mov
and
jae
cmp
pop
out
mov
mov
mov
or
sbb
xor
push
cmc
in
fcompl
xchg
sbb
inc
and
loop
jnp
mov
out
arpl
and
pop
dec
aas
movsl
jg
scas
loope
xchg
xchg
jno
inc
jp
cmp
sbb
pop
jbe
ret
mov
inc
test
mov
jns
sub
xor
jnp
sub
es
mov
mov
jns
xchg
push
stc
int3
arpl
mov
add
es
jb
daa
cmp
jg
mov
push
xor
inc
shlb
mov
test
popf
in
jnp
test
rorl
pop
adc
ss
jmp
mov
iret
sub
shr
sub
sbb
mov
pop
imul
ret
test
adc
bound
mov
or
mov
push
jmp
push
repz
mov
jo
ja
jmp
mulb
pushf
pop
in
sbb
or
push
push
push
sbb
inc
sbb
xor
mov
jmp
lods
ljmp
cmp
and
mov
xor
add
in
pop
dec
bound
cltd
mov
push
daa
enter
push
divb
testl
mov
inc
rcrb
sub
xchg
push
shrb
movsl
fmuls
lret
bound
cmp
mov
jo
sbb
pop
test
mov
daa
decb
cmpsb
xchg
mov
sbb
scas
lods
pop
sub
sarl
pop
lret
lods
in
out
in
jle
syscall
adc
add
jmp
sub
adc
ds
inc
lock
mov
cli
popa
popa
insl
scas
pop
xchg
movsb
inc
in
jo
xchg
cwtl
lahf
xor
jl
int
xchg
xor
ja
mov
push
mov
push
add
cli
sar
negl
or
push
dec
and
sbb
adc
daa
dec
xchg
jecxz
out
fcmove
lods
aam
and
das
add
push
imul
inc
push
jae
xor
sub
mov
cli
jbe
outsl
inc
adc
orl
add
enter
add
mov
xchg
fdivr
xchg
insl
lds
lods
popa
pop
sub
je
cli
imul
jg
cmp
outsl
pushaw
stos
mov
es
dec
jp
mov
fnstenv
pop
rol
ss
shrl
xchg
or
inc
dec
xchg
sub
cmpsb
mov
into
inc
xor
jge
lcall
addr16
fs
sarl
fisttps
dec
addb
lods
and
xchg
sbb
jns
lret
and
sbb
mov
xchg
jb
in
add
inc
add
jp
xchg
cmpsl
cmp
iret
jae
mov
jge
scas
fbld
cli
imul
xchg
out
mov
pusha
push
out
cmp
dec
xchg
loop
movsl
test
mov
inc
sbb
or
push
sbb
lds
leave
imul
iret
jne
int3
stc
in
xor
bound
pop
and
cmp
and
hlt
sysenter
adc
and
push
adc
cmp
lret
adc
stos
xchg
dec
or
dec
adcl
scas
jl
fcomps
fcompl
mov
scas
inc
outsb
or
fisttpl
xor
xor
pop
or
fistps
xor
arpl
das
mov
adc
mov
in
xor
dec
mov
pop
repz
jmp
es
xchg
xlat
mov
cmp
mov
sbb
adcl
pusha
xchg
stos
xchg
push
mov
adc
xlat
dec
cmp
dec
sub
push
xor
in
inc
loope
std
pop
pop
lea
cmpsb
xchg
sub
sub
push
movsl
mov
add
clc
daa
fidivrl
sub
push
dec
lret
popa
insb
mov
inc
out
pop
ljmp
nop
mov
cmpsb
mov
inc
scas
or
mov
mov
lret
mov
test
loopne
mov
and
sub
sbb
cmc
in
mov
and
repnz
outsl
cli
aad
iret
fisttpl
or
sub
clc
jns
in
repz
jo
mov
jecxz
jmp
outsl
in
mov
pop
mov
or
scas
xchg
pop
and
in
lahf
mov
jne
lods
jno
dec
mov
mov
pop
ss
xor
scas
stos
push
cwtl
sbb
mov
fdivs
jbe
xchg
psubw
xlat
aaa
add
mov
and
push
or
lret
pusha
ljmp
dec
arpl
ljmp
repz
fidivrs
fisubl
xor
mov
repz
push
imul
jle
xor
adc
xchg
pusha
enter
cltd
nop
jg
test
sbb
inc
outsl
and
test
jnp
loop
sbb
andl
cli
xor
adc
pop
push
popf
andb
std
mov
mov
mov
pop
add
adc
lods
mov
sub
push
push
stos
bt
sub
inc
aas
imul
mov
test
mov
adc
ss
loop
cmpsl
mov
ret
jmp
mov
fldt
imul
mov
shl
pop
and
fdivs
insl
leave
out
subl
push
pop
ficoms
pushl
and
pop
cltd
push
and
sub
gs
and
xorb
addr16
sub
xor
sub
sub
mov
gs
xchg
int3
mov
sub
mov
sub
fwait
je
xchg
mov
outsb
pop
mov
jnp,pn
inc
dec
orl
xor
jecxz
push
cld
mov
mov
ret
jle
add
push
jge
mov
and
aad
jmp
daa
popa
sahf
sub
dec
cmpsb
outsl
push
nop
loopne
dec
inc
stos
sub
xchg
cwtl
jecxz
fistpll
adc
outsl
cmp
push
int3
fbstp
stc
cld
mov
lahf
xchg
fs
stos
push
stc
cmp
out
add
in
mov
xchg
sub
addr16
filds
cwtl
outsl
loope
dec
add
sti
cwtl
out
sub
dec
adc
cmp
loop
mov
inc
ljmp
out
and
sarb
pop
mov
test
adcb
aad
and
testl
push
test
fidivrs
xchg
push
loopne
pop
lock
inc
sbb
mov
mov
out
push
jbe
mov
xor
jb
push
inc
lock
or
xor
sub
div
loope
je
pusha
std
push
and
leave
sub
xchg
mov
jecxz
inc
pop
shl
subl
adc
ljmp
mov
lock
push
dec
cmpsb
push
call
shll
mov
jp
addr16
inc
ret
xchg
fsubr
cmp
sar
popa
mov
movsb
push
pushf
mov
es
mov
shll
jbe
xchg
xor
loope
xchg
mov
xlat
push
clc
adc
cmp
cwtl
int3
xchg
sbb
xchg
jmp
insb
inc
jnp
outsl
movsb
js
cmc
sbbb
cmp
sbb
in
ja
lds
add
jo
inc
pusha
mov
stc
ret
out
xlat
inc
into
lret
push
or
sub
xor
jne
popa
and
inc
addb
mov
inc
pop
lret
cmc
cmp
aaa
push
dec
mov
adc
jecxz
test
ljmp
pop
jmp
pop
mov
inc
mov
mov
data16
mov
push
push
pop
mov
es
dec
ja
jno
add
xor
ss
dec
sub
push
xlat
inc
add
mov
xor
repz
push
push
sbb
and
pop
aaa
clc
mov
stos
insb
pop
mov
xchg
mov
ja
mov
jecxz
jecxz
push
sbb
rcll
sti
mov
in
addr16
repnz
or
out
and
imul
dec
dec
xchg
lcall
sub
sarb
add
sub
out
sub
fsts
pop
in
out
and
movsb
iret
ret
inc
shr
push
push
or
pmaxub
xor
cmp
and
xchg
iret
lds
enter
mov
fisubrl
js
mov
pop
sbb
adc
ret
out
and
push
out
sub
jo
mov
xchg
fstpt
inc
inc
sub
cmp
cs
xor
mov
in
xchg
stos
pop
stc
lret
pop
xchg
rclb
lods
dec
adc
out
scas
sub
sbb
or
mov
testb
and
aam
inc
pusha
in
enter
or
test
icebp
mov
pop
pop
mov
xchg
jne
push
and
xchg
sbb
lds
xchg
sub
fs
xor
nop
xor
cmp
push
add
jbe
js
stc
xorl
jb
mov
sbb
xchg
mov
push
and
pushf
jb
or
cmp
push
gs
iret
jle
fsubs
lret
adc
test
xchg
or
sub
and
sbb
aam
push
and
cmpsb
xor
ljmp
xchg
push
fmuls
jnp
mov
sbb
cmpb
adc
jnp
xchg
xor
test
pop
adc
mov
mov
pop
xchg
and
dec
mov
cs
add
sbb
fisttpl
xor
es
movsl
ret
fiaddl
je
mov
xor
mov
roll
mov
repz
inc
shl
push
sbb
loope
push
lods
fcoms
xchg
imul
ret
sbb
adc
mov
dec
in
pusha
aad
xor
xchg
mov
sar
jmp
pop
jne
lods
jle
xor
mov
mov
mov
rol
popa
paddd
rcll
aam
jns,pt
incl
mov
adc
inc
fnstenv
fmuls
je
in
pop
pop
dec
cld
add
xchg
and
outsl
das
push
jnp
cmp
inc
sub
inc
cmp
in
aas
int3
xchg
ret
xor
flds
mov
or
pop
sub
push
and
fnsave
fwait
add
test
mov
cmp
xorl
daa
xor
push
mov
add
and
lock
rcrb
pop
cwtl
xchg
adc
ljmp
jae
mov
call
dec
jnp
xchg
repnz
push
push
int
in
mov
pushf
mov
mov
adc
lock
inc
inc
fisubl
sbb
mov
pop
cmp
pop
imul
cltd
pushf
in
ja
push
lea
daa
inc
lret
fldenv
pop
out
std
aam
pop
xor
popf
aam
mul
ret
cmpsb
popa
cmp
pop
mov
movsb
das
mov
xchg
out
enter
or
mov
test
adc
or
cmp
push
popf
in
sub
stc
lods
cs
xor
cmpsl
daa
test
leave
clc
jle
sahf
test
xchg
repz
dec
clc
shrb
xchg
xchg
cmp
xor
inc
mov
js
xchg
out
gs
or
sub
call
xchg
pop
leave
jno
pop
xor
out
out
pop
adc
js
and
pop
jl
mov
mov
lods
cmp
add
insl
sbb
fnstcw
push
xchg
fildll
push
xor
repz
and
mulps
cltd
ljmp
in
mov
cli
mov
sub
push
jecxz
and
mov
in
out
in
jae
stos
ds
and
dec
cmp
ds
inc
push
mov
adc
stos
cmpsb
loope
notb
cmp
or
shll
push
pop
sbb
pop
jnp
sub
mov
out
fwait
jno
cmp
push
jle
stos
aaa
push
pushl
inc
or
loop
adc
cmp
nop
sub
or
adc
shrb
mov
lahf
test
clc
adc
pop
sub
or
iret
xchg
inc
in
das
pop
mov
add
mov
jo
pop
pop
or
int
inc
xchg
xchg
fildll
push
mov
jb
out
fs
adc
mov
mov
imul
js
in
shrb
in
popf
sbb
sub
inc
cmp
pop
cmc
jnp
les
inc
xlat
loope
pop
fisubrs
lea
lea
rolb
xchg
outsl
in
or
push
outsb
jbe
in
scas
inc
adc
aaa
xor
roll
cmp
jb
idivl
cmp
stos
jne
mov
sti
enter
inc
imul
jns
les
lods
ret
cmp
cld
mov
and
out
sbb
xlat
inc
sbb
fdivs
aaa
push
pop
mov
xor
dec
out
push
leave
cmp
or
add
jmp
mov
dec
lea
insl
mov
js
icebp
sub
int3
movsb
rcll
and
xor
fsts
adc
scas
cmp
lahf
xor
mov
into
or
push
push
pop
mov
es
pop
lret
add
dec
jge
pop
inc
mov
sbb
sbb
jmp
jno
adc
mov
sahf
or
or
add
push
pop
sub
insb
and
shlb
sti
ret
fcoms
xor
or
or
outsl
pop
dec
fs
sbb
loopne
js
fldcw
out
orl
in
ficompl
jecxz
insl
aas
jno
fisubrl
sub
movsb
out
lods
sbb
cmpl
or
jl
adc
push
adc
sub
push
ja
loopne
jge
andl
xchg
jb
xchg
dec
jle
int
xchg
adc
adc
jne
mov
xchg
shl
inc
cmp
ss
jno
sbb
ret
ficoml
push
pop
call
cs
mov
xor
mov
push
push
popf
xchg
xchg
bnd
push
pop
mov
test
or
fs
lods
mov
mov
out
mov
cmp
cmp
imul
mov
test
inc
jo
inc
mov
int
out
in
in
jp
jnp
loop
mov
mov
cmpsb
mov
inc
out
or
fisubl
mov
push
or
inc
mov
xor
jle
and
mov
mov
out
push
xor
jge
dec
lds
shll
pop
iret
test
fcmovne
xor
adc
jge
leave
mov
pop
push
rcrl
bswap
pop
hlt
imul
lods
mov
fidivs
sti
fidivl
pop
pop
adc
sub
repz
dec
jmp
leave
adc
cmp
lahf
repz
mov
jo
xchg
mov
aad
scas
fisubl
bound
mov
mov
movsb
and
push
mov
jecxz
test
push
arpl
push
add
lds
lds
pop
filds
mov
mov
and
pop
out
jmp
mov
dec
fidivrl
mov
and
xchg
arpl
loope
fnsave
shlb
push
mov
sbb
test
xor
fdivs
mov
fwait
push
pop
imul
xor
jecxz
jb
sub
out
lods
or
push
popa
movsl
ret
test
out
imul
ljmp
xchg
popa
idivl
int
and
insb
add
test
dec
lcall
sarb
out
leave
in
xor
ja
sub
add
sar
push
mov
rcrl
aaa
mov
jns
inc
hlt
cwtl
mov
and
mov
repz
cwtl
mov
cli
and
add
mov
scas
fldcw
cmpsb
pop
mov
xchg
popl
and
imul
xor
rcrb
clc
orb
sbb
add
fcmovbe
sti
xor
dec
xchg
in
pop
ds
mov
in
outsl
push
outsb
inc
cmp
mov
loope
cmc
jb
and
xor
cmpsl
scas
out
and
lock
mov
outsl
xor
push
cmc
push
in
mov
mov
int3
adc
mov
adc
mov
ret
xor
inc
jl
cmp
vpminsw
sub
cmpsl
push
aam
adc
rcrb
fdivl
mov
fsubp
jle
inc
and
ffree
loope
aam
mov
out
jecxz
test
add
call
shrb
push
add
fmull
pop
scas
out
hlt
dec
js
popa
jecxz
cmp
adc
inc
jb
jae
clc
inc
push
test
out
mov
loope
adc
cmc
inc
roll
and
test
add
outsb
lahf
add
xchg
or
cli
mov
pop
mov
xor
adc
cld
outsl
in
cmp
aam
fnstcw
add
mov
test
clc
popf
lcall
pop
aad
pop
sub
test
cmc
sub
push
jbe
lret
cmp
add
test
cld
call
push
loope
add
insl
in
and
adc
and
cwtl
xor
sbb
int
jp
push
int3
mov
scas
ljmp
sub
lcall
div
mov
pop
iret
icebp
fstpt
aas
or
movsl
jbe
into
ljmp
lret
cmc
jnp
test
out
push
adc
fildl
movsb
adc
stc
sub
in
mov
add
ljmp
dec
mov
scas
int3
test
aam
stc
mov
shrl
and
mov
movsb
bound
lods
arpl
gs
icebp
fsubrs
sbb
xor
lds
inc
mov
sarb
inc
sahf
or
mov
jb
testl
daa
lcall
mov
sub
xchg
xorb
push
aam
adc
aad
add
movsb
sub
pushf
addr16
in
or
in
adc
cs
push
xor
and
sub
shl
mov
xchg
fbld
pop
sti
add
in
fcmovu
lret
out
cmp
push
inc
imul
aam
or
jp
mov
aas
notl
std
jnp
testl
andb
lds
xor
mov
and
pusha
and
lea
mov
sbb
movsb
roll
cmp
and
repz
rclb
inc
lret
mov
mov
xorb
mov
mov
aaa
repz
lds
jo
push
mov
shrl
mov
cmp
adc
shlb
mov
or
mov
xor
mov
and
pusha
in
or
iret
stc
add
sub
test
or
ret
pop
jecxz
push
test
and
leave
roll
insb
adcl
and
adc
add
scas
mov
stos
xor
fisubrs
fnstsw
mov
bound
sub
xchg
or
scas
add
add
aam
hlt
fldt
in
loopne
fcomi
lds
les
xchg
push
xor
push
lcall
jl
xchg
cmp
adc
mov
sbb
xor
pop
mov
lods
sahf
sub
push
imul
and
add
jbe
inc
ret
cwtl
lcall
fs
cld
leave
sub
int
imul
stos
imul
mov
push
sub
and
daa
inc
sub
lods
outsb
xor
mov
in
incl
adc
xchg
cs
sbb
and
sub
stos
insl
sbb
outsl
xchg
push
stc
addr16
sub
xor
jmp
fxch
mov
xor
sbb
push
pop
pop
cmp
pusha
xor
mov
mov
pop
jnp
arpl
push
fldt
lods
jmp
jns
mov
sbb
jns
int
test
lret
popf
pop
aad
push
lret
xor
jo
les
sbb
mov
xor
and
or
xor
xor
xlat
dec
es
mov
pop
rorl
add
inc
push
rolb
sub
iret
jns
jg
dec
xchg
xchg
int3
add
mov
lock
xor
js
sub
xchg
fwait
xchg
jge
sub
insl
sub
inc
in
fnstcw
jg
jbe
cli
xor
stos
sbb
inc
ss
mov
or
adc
pushf
stos
mov
adc
mov
or
stos
xchg
cltd
enter
cs
outsl
mov
xor
jb
cmpsb
imul
mulb
test
movl
dec
cld
cmp
sahf
push
cltd
lods
add
sub
push
pop
dec
mov
sub
mov
adcl
cmc
rorb
xchg
adc
xchg
adc
sub
mov
movsl
xorb
xchg
mov
rcll
sub
mov
movsl
xchg
cmp
mov
dec
xchg
sub
scas
das
fbld
cli
sti
pop
mov
scas
xchg
or
div
movsl
jecxz
sub
xor
xchg
cmovae
test
mov
dec
jno
cli
imul
xchg
mov
aas
push
xchg
repnz
sbb
ret
mov
pop
insb
jns
andl
aad
jb
daa
jno
sti
aad
bound
inc
inc
adc
cltd
jp
jg
fwait
sub
push
push
gs
xor
push
cmpl
out
sbb
pushf
mov
pop
sar
mov
jle
xchg
test
add
mov
and
scas
and
xor
dec
and
pop
inc
adc
in
mov
sarb
out
mov
lods
xchg
aas
negb
xorl
mov
decl
dec
daa
cli
add
pop
jb
call
xchg
leave
cmc
push
lret
cmp
sbb
or
sub
sub
rcrb
incl
in
adc
inc
popf
xchg
into
cmp
mov
fimull
mov
mov
scas
lds
pop
sahf
lea
or
int
mov
jns
enter
pop
or
xor
fdivl
lret
das
rolb
rcl
shrb
mov
lret
mov
leave
adc
mov
arpl
andl
and
inc
mov
addr16
sub
push
dec
cmc
dec
or
cli
frstor
orl
loop
fs
xchg
in
pop
ds
pop
test
shlb
sub
lret
sub
stos
loope
xor
cmp
add
xor
sbb
xchg
bound
inc
ret
push
popa
jge
test
mov
sbb
ret
cmp
jbe,pt
hlt
and
pop
and
inc
push
movsb
cmp
pop
das
pop
xor
sbb
mov
mov
int3
sbb
xchg
cmp
lret
inc
inc
negl
mov
jns
je
push
repz
fldenv
idivl
jp
mov
push
fdivrs
dec
cmpsb
popa
inc
enter
and
rclb
repz
sti
repnz
sti
test
xor
jae
mov
gs
pop
sub
add
fdivs
sub
test
mov
jle
cld
dec
sbb
sbb
movsb
ret
mov
mov
int
pusha
cld
mov
stos
jne
movsb
dec
movsb
cmp
stos
push
out
xor
jmp
add
adc
mov
jl
mov
arpl
xor
xrstors
cmp
cmpl
mov
cmp
push
je
and
adc
fistps
push
mov
add
repnz
dec
or
mov
aam
fidivl
and
dec
das
into
dec
popl
mov
xchg
dec
out
mul
sbbb
lret
mov
cmp
jl
sub
fisubs
shrl
push
push
adc
ljmp
pop
jbe
test
movsb
mov
pushf
pop
inc
movsl
movsl
ljmp
mov
jae
lock
cmpsb
aad
mov
jo
out
xorb
mov
popa
add
clc
ret
xor
andb
add
lea
imul
mov
sahf
inc
xor
adc
out
aad
fwait
xchg
test
mov
xor
inc
ret
push
pop
inc
inc
sbb
push
inc
pop
loope
cli
jmp
fsubrs
ret
iret
add
mov
pop
jle
xlat
jne
jbe
insl
shl
testl
fucom
shrb
push
andb
sub
mov
sahf
pop
mov
movsl
mov
xchg
bound
jl
imul
jmp
pusha
sysexit
push
cmp
mov
xor
sti
pushw
sar
repnz
mov
and
jns
pop
dec
push
mov
iret
insb
xchg
or
dec
inc
and
xchg
xor
xchg
add
inc
ljmp
shl
push
xchg
mov
jno
cmp
imul
mov
movsl
shl
mov
xchg
ljmp
xchg
cld
and
enter
pop
repz
mov
iret
pop
jmp
push
leave
int3
popf
or
mov
hlt
ror
push
andb
jb
sti
push
sbb
mov
and
jp
loope
daa
inc
in
mov
insl
fmulp
jl
dec
push
dec
mov
ret
pop
jnp
ret
sbb
mov
adc
movsl
inc
aas
mov
mov
jp
dec
insb
inc
clc
or
test
jge
xchg
pop
lea
xchg
and
sub
jne
or
fsubr
rclb
mov
sarb
mov
repnz
aaa
jne
test
inc
ljmp
lret
cmp
push
fbld
mov
imul
sarl
lahf
js
jge
dec
jge
subl
stc
inc
rep
or
filds
mov
stos
dec
int3
jne
ret
dec
jle
adc
out
xor
inc
xor
inc
jl
sbb
insb
push
jl
mov
mov
sub
icebp
xchg
mov
sbbl
das
jb
mov
and
push
pusha
mov
push
sbb
xor
mov
lds
adc
add
mov
jmp
jmp
js
jne
inc
test
jle
cmc
dec
add
lahf
pop
push
push
aas
mov
cmp
and
pop
add
cmp
popa
lock
repz
cld
xlat
imul
lods
int3
and
mov
pop
or
test
jmp
pop
mov
js
adc
sub
imul
xchg
stos
push
inc
out
mov
and
scas
or
inc
or
mov
xchg
out
mov
bound
scas
loope
fbstp
cltd
sub
negl
push
neg
jl
loopne
pop
loopne
pcmpgtw
and
shll
jle
add
jb
fwait
xchg
loope
mov
sbb
inc
cmp
daa
test
je
ret
adc
dec
dec
jne
call
faddp
inc
rcll
jge
jmp
lret
lret
adc
rcr
dec
outsl
dec
push
enter
clc
shlb
mov
insb
sub
mov
lds
sarl
fcoml
ja
les
ja
xchg
aaa
paddd
pop
cwtl
mov
sub
adcl
mov
sbb
jb
pop
fsubp
xchg
out
mov
or
cmpsb
mov
fisttps
xor
mov
addr16
icebp
mov
xlat
or
xchg
push
jns
iret
addl
cltd
xchg
nop
test
andb
mov
mov
pop
fldt
and
sub
mov
sbb
push
inc
fmull
loopne
lcall
lods
idiv
icebp
jno
xor
fldl
adc
scas
add
push
xor
mov
hlt
int
lea
jge
shrl
jb
add
pop
orl
mov
sub
push
rolb
mov
fsubl
cmp
cmp
jecxz
cli
mov
mov
jb
sbb
inc
jmp
aas
mov
mov
mov
push
cmp
pop
dec
push
add
shrl
pop
dec
jno
cmp
pop
adc
xlat
cs
loope
cmp
leave
dec
stc
xchg
cld
loop
aaa
mov
pop
test
or
ljmp
jmp
xor
sbb
arpl
pop
sub
inc
mov
mov
testb
push
push
fsubp
lock
mov
mov
addr16
lcall
lds
push
and
inc
dec
and
outsl
enter
mov
jns
mov
scas
and
sahf
sub
sbb
mov
mov
ret
xchg
mov
fidivl
fs
xor
jns
pop
cwtl
rcrb
sti
sbb
rorb
push
jne
add
xchg
int
dec
mov
and
fistpl
scas
ror
mov
mov
mov
mov
inc
aaa
mov
outsl
add
push
shlb
aas
out
fcomip
xchg
dec
lods
rolb
mov
pop
add
mov
and
cmp
pop
push
and
mov
lock
into
arpl
out
test
mov
or
jmp
push
cmc
daa
xchg
inc
scas
shrb
mov
es
nop
jge
inc
lcall
jbe
mov
sbb
add
pop
pop
sbb
ja
ds
popa
cmp
clc
dec
je
mov
leave
or
and
imul
in
popf
vmovaps
xchg
cs
nop
push
in
xor
push
insb
test
dec
and
push
push
rolb
jo
or
test
shll
nop
xor
push
test
mov
test
mov
pop
mov
cmp
cmp
sub
add
cltd
out
adc
repz
call
ja
add
cmp
leave
xor
pushf
push
insl
icebp
mov
andl
in
dec
dec
jb
jg
inc
shlb
cmp
dec
lret
addl
lock
shl
addl
cmc
mov
push
popa
push
push
xchg
movl
call
sbb
repz
jo
push
out
ficoms
lock
and
mov
test
enter
add
xor
adc
int3
rcl
cli
inc
ljmp
inc
test
push
xchg
cmp
fxch
call
mov
mov
inc
jb
inc
cmc
inc
arpl
pop
mov
sti
jns
movsl
stc
mov
or
ret
mov
test
push
imul
fwait
adc
pushf
cmp
outsl
and
dec
fnsave
pop
cli
in
inc
jnp
dec
jge
or
pop
xchg
and
scas
and
add
pop
jmp
aam
cltd
cmc
test
rorb
js
mov
pop
jmp
mov
push
push
jl
test
sbb
xchg
or
mov
call
outsl
mov
jbe
xchg
shll
or
shll
mov
mov
std
call
lock
push
and
and
add
mov
fildl
cld
cmpsl
jb
push
je
leave
cmpl
imul
push
test
xorb
sbb
cmp
jg
or
jno
jge
out
mov
rol
pop
xchg
out
or
add
aad
add
dec
jo
adc
mov
jecxz
or
and
icebp
jecxz
test
jne
test
jl
stos
pop
adc
lret
movd
or
inc
push
pop
add
lods
pop
pushf
test
es
or
fs
mov
hlt
push
xchg
push
pusha
xor
adc
ss
adc
adc
push
mov
pop
lahf
cmp
push
sahf
cld
mov
in
ret
xor
adc
push
fucomip
mov
mov
add
addl
cli
imull
test
xchg
sahf
adc
xor
jbe
cmp
enter
in
dec
gs
pop
sarl
test
xor
repnz
cmp
cmp
add
cmp
iret
xchg
or
shrb
mov
xchg
aas
or
jl
mov
leave
pop
enter
push
sbb
add
jns
mov
iret
push
es
and
mov
jns
inc
divl
xlat
fisubrl
push
jo
aad
add
mov
mov
mov
xor
add
sbbb
jne
test
cmp
lcall
stos
pop
mov
cmp
or
or
mov
push
enter
jbe
notb
lahf
nop
stos
mov
push
adc
pop
or
shl
pop
inc
out
sub
movsl
xchg
aad
std
dec
addl
in
pop
pop
int3
jge
std
arpl
leave
add
popa
clc
lea
jae
cli
popf
in
inc
test
jecxz
jp
repnz
cmpl
xor
fs
jp
xchg
xchg
and
adc
fiaddl
sub
lcall
jge
mov
stos
loopne
or
mov
in
nop
gs
stc
xor
pop
pushf
push
mov
outsb
jecxz
xor
in
lea
pop
mov
jge
dec
mov
stos
push
adc
dec
xchg
call
push
lahf
and
sub
setle
xlat
je
mov
sbb
or
fbstp
jne
push
jg
sub
les
imul
fxam
push
fimuls
xchg
fisubl
repz
fisubl
inc
call
mov
popa
jge
stc
rclb
cmpsl
leave
xchg
or
lret
add
push
add
ja
mov
filds
mov
adc
dec
mov
mov
stc
jnp
outsb
inc
jg
push
mov
dec
notl
xchg
in
bound
push
xchg
or
xchg
lds
adc
pop
and
mov
inc
cmpsb
call
dec
and
clc
or
cmpsb
pop
xchg
xor
aaa
fcmove
rorb
decb
test
mov
sub
rcrb
icebp
xchg
mov
adc
cmp
cmpsl
ret
subl
movsl
inc
fists
scas
lods
sub
out
leave
mov
popf
ja
lcall
adc
sub
scas
push
int3
mov
pop
sub
pusha
jl
and
fsts
fwait
bound
loop
fcom
sub
cmp
push
jle
lret
call
leave
xlat
adc
xlat
out
stos
into
clc
dec
cmp
mov
jmp
sbb
xchg
push
shrl
pop
mov
jne
fcompp
pop
sub
or
decb
push
mov
ds
fimull
scas
mov
mov
mov
xor
stos
fcmovu
pop
mov
xchg
pop
mov
push
xor
fsubs
sti
hlt
in
movsl
pop
dec
mov
jp
lcall
ret
mov
orb
pop
push
popa
mov
fcoms
sub
lock
lahf
push
fdivrp
lea
movsl
mov
int3
cmp
jo
add
fidivs
mov
test
shrb
mov
mov
push
shrl
std
xchg
cltd
stc
loop
mov
mov
je
inc
add
movsb
xchg
aas
mov
cmovnp
lret
xlat
xchg
lods
addl
sub
fmuls
out
aad
loope
aas
xchg
mov
sahf
outsb
xchg
inc
sbb
and
lea
push
in
into
xor
aad
inc
out
fimull
mov
orb
mov
insl
test
xor
sbb
fstpl
shll
xor
cwtl
test
insb
push
jo
pop
fdivrs
add
int
push
repz
mov
arpl
stos
push
and
jmp
mov
inc
inc
push
incl
sub
sbb
adc
icebp
or
jnp
shr
call
addr16
cmp
ljmp
mov
push
dec
pop
stc
lret
jg
xlat
and
in
lcall
iret
mov
mov
loopne
pop
popa
cwtl
pop
insb
icebp
jle
inc
cmc
push
sub
mov
mov
iret
loopne
push
inc
or
lods
or
pop
push
in
jno
and
xchg
xor
fsubs
cs
xor
loope
test
pushf
ror
push
pop
or
repnz
pop
lahf
cmc
mov
insb
in
inc
mov
into
scas
jne,pn
xchg
push
mov
mov
mov
imul
shl
lods
cmp
mov
mov
daa
push
pop
jne
dec
xchg
nop
push
mov
jge
aas
jp
cmp
dec
push
sbb
dec
mov
and
lods
nop
sbbl
xor
imul
sub
mov
or
inc
add
mov
lahf
fimull
cmpsb
xor
aaa
mov
sbb
shrw
mov
mov
pop
cmp
cltd
mov
pop
lods
add
jne
push
int
mov
mov
outsl
jb
cmp
aad
jb
sbb
and
xor
leave
pop
pop
pop
push
inc
js
out
inc
jge
mov
fsts
pop
sti
fisttps
daa
jo
dec
pushf
sub
mov
ja
mov
mov
sbb
aas
aam
rcrb
ljmp
in
leave
sbb
aam
push
sbb
decl
test
xchg
sbb
lods
adc
loopne
xlat
push
icebp
mov
xchg
stos
les
dec
mov
jne
xor
mov
out
in
lock
ret
pop
cli
jmp
lods
insl
jecxz
call
dec
mov
pusha
inc
stos
ja
xor
test
test
test
pop
test
xor
or
jmp
dec
aad
pop
jno
push
fmuls
in
roll
inc
xchg
dec
push
pop
shrl
add
push
jo
push
dec
and
lock
dec
call
lahf
cmp
scas
stos
adc
enter
arpl
push
clc
xchg
cmp
adc
jge
fnstsw
ljmp
aam
lods
jb
pop
daa
in
dec
lds
sbb
add
outsb
lret
les
and
push
bound
aam
or
aaa
jne
shll
stos
scas
push
add
sbb
popa
jge
pop
mov
ficoml
loopne
pop
adc
pop
cmc
and
inc
xchg
pop
in
push
mov
push
neg
xor
jge
mov
mov
mov
or
dec
mov
mov
in
out
scas
inc
inc
iret
xchg
sbb
mov
pmaxub
push
das
push
iret
sbb
imul
jmp
fwait
mov
fcmovnbe
xchg
xchg
push
jmp
xlat
imul
test
out
ja
movsl
hlt
int
sbb
xor
dec
sub
xlat
orl
and
cld
shrl
xchg
mov
inc
f2xm1
add
mov
push
mov
inc
lds
test
xor
xchg
out
fmuls
and
ljmp
mov
hlt
stos
inc
cld
in
insb
and
aam
xor
xchg
add
lahf
push
xlat
rcrb
adc
ja
ret
js
pop
pop
fistpll
add
sub
jns
movsb
mov
jns
pop
or
xchg
lcall
push
xor
int
into
popf
out
push
mov
push
cmpb
dec
sub
push
cwtl
ss
mov
add
or
jbe
inc
daa
dec
cmpsb
test
les
cs
out
and
push
imul
cltd
mov
leave
mov
lock
and
xchg
sub
rcrb
and
mov
repnz
xor
arpl
inc
int
dec
push
jge
sub
fldl
xor
cli
jecxz
and
dec
clc
adc
sub
mov
lock
pop
imul
sub
in
push
push
jo
add
lret
std
pop
push
cli
xlat
mov
std
jge
insb
or
inc
adc
gs
daa
rorb
mov
push
into
je
pop
pop
and
jle
xchg
inc
movsb
xchg
xlat
ret
int3
fdiv
mul
test
in
imul
jo
jne
mov
out
sti
in
mov
adc
outsb
mov
test
shrb
add
push
out
sbb
dec
jae
repz
outsl
add
sub
add
push
push
mov
xchg
notb
add
xor
xchg
cld
cs
sub
aaa
inc
ficomps
out
push
xor
stos
fdivl
or
sub
mov
push
and
lcall
movsl
xor
mov
mov
out
popf
in
imul
pop
in
adc
pop
inc
movsl
pusha
jmp
cmp
xchg
dec
mov
cmp
insl
mov
push
enter
or
ds
cmc
loopne
mov
mov
aaa
cmp
imul
pusha
cwtl
cmp
mulb
cli
adc
lcall
push
cmpsl
movsl
cmp
call
mov
shl
clc
sub
or
clc
out
sub
push
lret
clc
cwtl
cld
hlt
fisttps
add
shlb
push
push
dec
and
iret
sub
xchg
lret
mov
mov
rcl
jmp
aaa
gs
adc
pop
mov
aas
fsubrs
cs
pop
icebp
jg
loop
jp
je
inc
sub
inc
jp
and
dec
ret
or
cs
push
pop
push
in
or
fists
or
loope
aam
jo
mov
sbbb
xchg
jns
ss
dec
movsl
jo
int3
jns
jae
add
push
jno,pn
jmp
sti
mov
pop
sbb
or
ret
xchg
lds
out
mov
iret
xchg
push
pop
lock
jl
jl
push
push
inc
xchg
into
jecxz
lcall
pop
out
out
ds
dec
xlat
psubusw
mov
sbb
rcrb
ret
jmp
fstpt
mov
notl
and
jne
shll
bound
inc
push
dec
jmp
mov
push
stos
mov
arpl
push
ficompl
iret
sub
cltd
loop
lcall
repz
cmpb
push
xor
xchg
int
mov
mov
sbbb
mov
jl
sarl
jp
pop
xchg
gs
pop
mov
insl
pusha
jb
lret
jmp
dec
sub
aam
cmc
or
mov
int3
inc
lret
jg
gs
add
sti
movsl
sahf
or
aad
pop
sub
sbb
push
push
arpl
call
pusha
jp
xor
push
mov
xor
sub
push
and
pop
testb
or
push
sbb
push
push
fcomps
cmpsb
hlt
pop
lcall
inc
push
adc
cmp
lods
jp
cli
dec
out
lret
idivb
add
ret
pop
sbb
xlat
push
fstpl
idiv
push
add
in
lock
xor
push
sbb
adc
mov
jbe
lcall
or
loope
addr16
mov
xor
das
lret
add
adc
push
test
push
clc
lret
pop
les
fldl
leave
xor
pop
sbb
fiaddl
push
lock
jp
dec
test
pop
xchg
pop
fcmovnu
ret
nop
jecxz
push
sub
arpl
lret
jbe
bound
arpl
stos
mul
leave
sbb
fwait
cwtl
pop
push
out
jecxz
in
aaa
cmc
mov
pop
in
xor
sub
insb
mov
js
and
shll
lret
fldenv
cwtl
jmp
xchg
les
push
sub
fwait
mov
pop
test
pop
or
pop
jne
sbb
mov
add
xlat
dec
ja
xchg
jb
aaa
stos
ljmp
and
pop
push
adc
mov
xchg
pusha
shrl
imul
mov
adc
mov
gs
fwait
sti
jnp
pop
test
inc
lret
xchg
jnp
pusha
xchg
inc
rcl
cmp
fcompl
push
nop
cmpsb
xchg
jnp
jbe,pt
dec
mov
adc
cmp
mov
rcrl
loope
sti
mov
jmp
add
lds
add
out
clc
xchg
mov
clc
testb
ret
mov
and
rclb
sbb
push
sub
sbb
pop
xchg
sub
repnz
cmpsb
ret
mov
pop
sbb
addb
punpckhwd
std
dec
xchg
push
pop
aam
xchg
daa
ret
nop
adc
push
mov
into
stos
in
or
mov
sbb
xchg
rcll
iret
push
push
out
arpl
push
fwait
push
int3
pop
dec
ljmp
mov
into
mov
mov
inc
pop
andl
call
mov
xor
out
jns
sub
jb
jb
ja
add
outsb
cmp
mov
mov
addr16
xor
pop
dec
push
lahf
daa
cli
jge
pop
add
ficoms
push
call
cwtl
mov
jecxz
outsb
into
xor
inc
jnp
xchg
sub
push
inc
fdivrl
in
xchg
mov
jecxz
add
popa
outsl
xor
aam
pusha
add
outsb
out
rol
daa
add
int3
mov
push
dec
push
mov
call
shlb
popf
push
push
out
xchg
xchg
mov
rolb
push
or
leave
hlt
shll
mov
dec
push
rol
ljmp
enter
das
lods
push
push
xor
repz
mov
cmp
adc
mov
jae
fbstp
and
in
nop
test
dec
lret
push
addb
pop
pushf
stos
cmp
sub
std
int3
fsubrs
and
cmp
jne
jb
rcrb
dec
icebp
sbb
cld
insb
push
pop
adc
dec
or
repnz
fsubrp
add
movsb
into
data16
stos
sbb
cmp
in
in
data16
lock
lret
enter
cmpsl
mov
pop
xor
out
ret
adc
call
in
pop
out
push
ja
shrb
in
sbb
adc
lods
xchg
loopne
dec
sti
pop
call
lds
cmp
daa
hlt
out
ret
sub
imull
adc
lahf
in
clc
or
fcmovbe
frstor
loope
pop
adc
mov
mov
out
movsl
or
popa
jnp
out
roll
sar
pop
mov
sub
jl
add
fisubrl
push
pop
cmp
xor
cli
dec
mov
popa
stc
sbb
inc
push
cmpsl
aas
dec
cltd
jb
sbb
in
xchg
and
jge
lock
lahf
outsl
jp
add
push
inc
es
and
pop
popl
es
outsl
movsl
in
push
in
mov
add
orb
jae
fldt
or
arpl
out
jnp
fisubs
xor
add
loop
jecxz
xchg
cwtl
pop
adc
out
push
push
mov
outsl
adc
mov
cmp
sub
mov
and
mov
and
cltd
les
pop
std
push
jecxz
jne
mov
aad
mov
out
mov
mov
and
mov
xor
and
add
lret
jmp
inc
imul
repz
push
mov
loopne
es
into
or
inc
iret
stc
repnz
and
push
adc
mov
cs
insl
and
sarl
dec
cmc
ss
insl
add
push
pop
dec
adc
rorb
or
mov
fiadds
imull
or
aas
into
out
mov
leave
add
adc
aad
mov
dec
int
sub
into
fs
lods
and
cmc
push
or
jb
mov
xchg
imul
sbb
xchg
mov
push
inc
cmc
aad
faddp
pop
out
scas
cmpsb
sbb
ljmp
popf
mov
cmp
orb
mov
call
es
dec
mov
and
lret
imul
and
data16
sub
adc
and
repnz
dec
dec
fstl
inc
call
inc
or
stos
mov
outsl
add
and
add
imul
sti
out
gs
loope
dec
xor
xor
pop
fsubr
aad
push
pop
mov
iret
stc
fsubl
fisubrl
rcl
lret
sbb
mov
xor
adc
mov
adc
outsl
pushf
rcll
push
movsl
lahf
call
clc
rcrb
cmp
js
dec
push
imul
aaa
in
movsb
sub
lcall
movsl
adc
fisubrl
aad
jo
sub
xor
cmp
cmp
cmp
mov
lods
mov
sbb
mov
arpl
cmpsl
inc
or
push
dec
or
add
and
xchg
sub
mov
pop
adc
mov
jo
loop
outsb
addr16
popf
jmp
mov
xchg
sub
imul
in
xchg
mov
addl
lds
into
cmp
cli
dec
filds
mov
call
and
repnz
enter
cmp
push
fsubl
and
sub
dec
push
cmp
lea
out
mov
mov
js
fwait
cmp
or
jnp
mov
pop
adc
lahf
fisttps
mov
push
xchg
or
int
fdivrs
or
cmp
pop
add
xchg
mov
mov
adc
mov
ret
repnz
addr16
ss
fsave
arpl
inc
scas
test
mov
int
mov
add
movsl
lods
out
ret
outsb
and
ljmp
dec
jge
and
clc
je
loopne
iret
push
lods
inc
cli
mov
sbb
in
je
cmp
fdivrl
inc
pop
cli
cmp
bound
push
imul
scas
mov
or
xor
cli
loopne
cmpsb
mov
ljmp
addr16
test
std
mov
sub
dec
dec
mov
aad
cmp
loopne
leave
pop
out
loope
cmp
jmp
push
pop
jl
xor
cmc
sub
jp
cli
jno
fldcw
leave
pop
inc
dec
cmpsl
jg
lods
in
mov
cwtl
and
into
or
std
repnz
sbb
jg
mov
fcmovnu
cltd
mov
and
xchg
push
pop
mov
xor
out
dec
mov
call
mov
outsl
pop
js
xor
gs
or
sbb
out
sub
hlt
xorb
sti
add
ret
or
xchg
sub
out
mov
testl
and
mov
pop
mov
push
daa
scas
sbb
or
pop
jb
out
mov
cmp
call
cmp
iret
xchg
rorl
mov
cmp
xchg
jnp
loop
dec
sub
mov
sbb
test
aam
addl
add
int
push
ja
add
push
jecxz
sub
xor
fimuls
sbb
insl
pop
adc
jns
in
jmp
add
mov
pushf
push
adc
fdivrp
push
jo
nop
add
add
scas
sbb
or
arpl
fnstcw
dec
inc
or
jne
cli
les
xchg
test
fstpt
rcll
mov
mov
clc
out
lahf
or
mov
push
cmp
inc
in
fwait
and
cmp
add
sub
out
jg
mov
push
and
add
xor
loopne
xor
iret
ja
xor
cld
repz
popf
adc
pop
cmpsb
jl
das
xor
aad
mov
mov
lret
loope
jle
sub
call
stc
out
or
out
out
add
push
lahf
ljmpw
xchg
packssdw
cmpsb
adc
outsl
push
push
lods
mov
test
xchg
push
mov
cmp
mov
fidivrl
jnp
pop
fcompl
in
cwtl
andl
xchg
scas
movb
xlat
fdivrl
jl
jp
mov
movsb
sbb
scas
adc
lret
aam
dec
aam
pop
shll
xor
sbb
or
jo
or
or
inc
iret
jle
adc
xchg
bound
lea
dec
add
out
or
sub
fcmovb
insb
push
repnz
push
pusha
aam
and
xlat
xor
popa
lret
test
jae
cmpsl
jle
pavgw
insb
in
cmpsb
add
jae
sarb
ret
cmp
add
repz
mov
mov
push
mov
les
cmp
test
mov
cmpsl
shl
cmp
ficomps
mov
mov
int3
jae
jne
popf
adc
xor
rorb
je
or
leave
lds
in
pop
and
inc
cmp
jle
pop
and
xor
ret
adc
stc
rorl
adc
jl
outsb
ret
xor
ljmp
scas
stos
sbb
dec
arpl
or
loopne
dec
imull
clc
dec
fwait
jle
jo
in
sbb
daa
push
xchg
enter
adc
pop
inc
xor
cmp
push
or
push
add
outsb
setge
cs
call
lds
and
fistps
jb
pop
dec
pop
ljmp
mov
lods
js
mov
outsb
cmp
xor
adc
sar
sahf
sbb
popf
pop
mov
sarb
dec
fisttpll
cmpl
roll
sahf
outsl
fnstsw
or
call
sbb
cld
mov
into
iret
andb
cld
icebp
adc
imul
sub
dec
jge
push
lret
insl
mull
cmpsb
sarb
mov
jns
gs
mov
ss
ret
mov
shll
adc
jp
sahf
popa
mov
in
scas
mov
mov
mov
sbb
mov
cltd
push
in
push
jbe
popa
cltd
mov
pop
lret
stos
arpl
jecxz
aas
loope
fadds
gs
and
decb
cmp
and
into
aad
inc
mov
call
loope
dec
dec
mov
jae
sarl
xchg
mov
xor
adc
repz
popa
inc
dec
add
sbb
add
mov
and
movsl
loope
jae
inc
imul
add
mov
xor
mov
add
scas
movsb
mov
mov
jno
fwait
leave
jns
mov
orb
or
cli
iret
adc
icebp
in
mov
rcrl
cmovg
xchg
pop
xchg
test
mov
xor
sti
mov
test
cmp
popf
sbb
adc
mov
mov
xchg
mov
mov
or
xor
insl
jne
push
mov
cmp
lcall
mov
adc
testb
push
fidivrs
inc
inc
xchg
clc
mov
out
jle
mov
aam
jns
and
or
mov
scas
push
jg
mov
outsb
jp
push
fwait
adc
cmp
add
xor
fstps
subb
lahf
imul
pop
adc
js
imul
mov
mov
mov
fucomi
je
sbb
jg
xchg
mov
adc
dec
mov
add
sahf
lods
jnp
in
in
hlt
push
mov
dec
push
pushf
xchg
outsl
fbld
inc
sbb
push
mov
jb
loop
insb
and
int
fucomi
jmp
dec
daa
insl
xor
add
rolb
mov
cmpsl
ror
fsts
mov
push
cmpsb
ret
mov
jecxz
cli
js
pop
pop
cli
jecxz
xchg
dec
shlb
movq
and
pop
fbld
pusha
sub
mov
mov
aaa
popf
jno
jae
mov
cltd
jmp
test
mov
mov
jp
ds
loope
mov
lods
push
add
push
jge
js
adc
sub
loop
icebp
inc
inc
sub
fiadds
lret
xor
push
in
inc
push
inc
jg
cli
pop
dec
cmpb
xor
addr16
lret
bound
push
inc
fistps
push
into
aas
arpl
aaa
cs
xchg
lcall
mov
popa
lods
sub
sbb
pop
std
lcall
iret
jo
rorb
add
sarb
adc
in
int3
jne
ss
inc
in
sarl
scas
xchg
lcall
adc
add
sbb
push
or
dec
pusha
mov
dec
test
addr16
inc
iret
cmpsl
into
out
cli
popf
repnz
mov
cmp
jbe
cs
push
pop
or
lret
inc
int
clc
inc
sahf
fldl2e
push
in
dec
cld
test
lret
xor
jo,pn
cmp
sub
mov
int
add
rolb
arpl
inc
push
addb
dec
push
pop
adc
shr
fs
lods
xchg
xor
gs
sub
sahf
test
jp
repnz
push
ffree
and
cmp
fiadds
pop
adc
ljmp
jl
hlt
insl
sbb
mov
cmpsb
leave
sti
push
stos
dec
lret
int3
xor
ja
lds
lock
dec
test
push
loopne
add
sbb
adc
loopne
mov
push
stc
das
dec
inc
sub
xchg
loop
sub
lret
sbb
data16
test
test
dec
jo
add
std
loope
rcl
ret
out
jb
rcrb
cmp
pushf
and
rcl
xor
icebp
cmp
jg
dec
in
mov
cmc
test
in
dec
jg
stc
dec
scas
mov
inc
imul
mov
and
adc
ret
insl
fsubrs
or
fldenv
mov
fwait
or
ret
pop
adc
and
cld
clc
cmpsl
jmp
push
inc
lcall
dec
les
in
jbe
mov
add
xlat
fnstcw
pop
dec
movsl
mov
sbb
mov
xchg
loope
cmp
loope
outsl
pop
popf
adc
in
mov
mov
scas
push
jecxz
adc
imul
out
pop
cmp
testb
dec
pushf
lcall
into
mov
cmc
and
fcoms
sbb
dec
rorb
push
jbe
and
pop
mov
jne
mov
xchg
adc
mov
and
lock
and
loopne
aad
ja
in
outsl
mov
dec
jne
subb
inc
cli
maxps
call
nop
mov
das
je
mov
lahf
in
test
lods
jns
test
adc
inc
cmp
test
jns
mov
mov
xlat
test
cmpsb
add
mov
dec
fdivrl
neg
inc
mov
mov
data16
mov
shr
mov
pop
mov
push
sbb
add
cmp
inc
repz
jle
pop
orb
add
adc
test
xchg
push
adc
lret
bound
pop
mov
adc
movsb
sti
je
popa
cmpsl
lock
out
sub
shlb
push
mov
out
nop
scas
adc
hlt
mov
xchg
in
or
ret
neg
pop
pop
jo
repz
mov
mov
lock
add
sbb
sbb
movsl
ljmp
enter
or
mov
cld
rorl
xor
cld
jbe
jl
push
popa
es
sub
sub
addr16
push
icebp
add
and
dec
pop
xor
and
pop
stc
sub
sub
into
mov
jg
xor
sbb
pop
in
xchg
ret
hlt
sbb
push
mov
out
out
ss
xor
icebp
ret
addr16
test
adc
rcr
adc
push
std
jg
mov
in
imul
or
icebp
sti
push
rcl
xchg
cmpsl
jle
dec
data16
mov
ret
lahf
and
or
sbb
dec
fnstcw
push
pusha
insb
mov
cmc
push
push
lea
inc
dec
cmp
aas
or
mov
xor
or
fisubs
and
mov
sbb
jp
xchg
lds
xor
sub
sti
xor
dec
xchg
xor
icebp
mov
mov
cmp
xor
mov
pop
adc
filds
bnd
pusha
in
das
push
hlt
in
stc
sbb
pop
adc
aad
lret
out
or
or
and
shrl
xor
mov
push
mov
addr16
add
pop
outsb
cmp
xchg
xchg
jae
ja
sbb
dec
adc
add
jl
cmpsb
loopne
testl
or
dec
call
outsl
fwait
outsb
test
insl
cmpsb
sbb
inc
or
sbb
test
rorl
mov
enter
fs
jmp
out
fwait
push
in
sub
mov
stos
inc
in
mov
fnstsw
shrb
mov
dec
out
sti
sub
push
js
cmp
pop
sbb
rcll
pop
cmp
imul
int3
pop
jne
popa
rolb
cmpsb
jno
lods
xchg
test
or
jns
sbb
in
xor
sahf
mov
add
imul
mov
xchg
divl
sub
or
push
cmp
xchg
clc
sub
repz
hlt
pop
mov
or
push
test
shrb
push
cmp
je
out
out
hlt
popa
push
push
sub
xchg
je
adc
jecxz
and
loop
fistl
mov
fucom
pop
icebp
aam
subb
xor
in
inc
outsb
into
dec
sub
cmpsl
mov
push
or
adc
inc
cmpsb
divb
or
ror
lea
sub
and
adc
jbe
cli
mov
rolb
xchg
cmp
pop
push
mov
push
das
rol
call
jmp
lock
xchg
sbb
sub
push
push
adc
orl
insl
jae
dec
mov
in
in
ss
jecxz
in
cmpsb
bound
push
xchg
fimuls
insl
xor
jbe
frstor
cld
out
dec
cmc
add
and
mov
and
movsl
mov
inc
lret
cld
cld
outsb
cmp
and
popf
add
xlat
movsb
mov
dec
xchg
in
pop
scas
fldt
outsl
xchg
add
ljmp
aam
int3
into
cmpsb
inc
lret
add
ror
lahf
inc
or
cmp
mov
jg
addb
sarl
std
addb
imul
adc
jge
and
sub
out
int3
insb
testb
ret
and
cmp
push
xor
and
insl
sbb
bound
cmp
loopne
pop
mov
xorl
push
fisttpl
hlt
cmp
mov
out
dec
and
movnti
jo
aas
add
and
push
sahf
rclb
pop
test
sbb
icebp
sub
xchg
popf
jmp
cwtl
es
test
inc
dec
inc
mov
push
fcompl
mov
push
and
jecxz
sub
js
xor
loop
lea
daa
sbb
mov
mov
push
mov
int
lea
push
and
mov
add
xor
mov
insb
hlt
daa
fdivr
sbb
jle
aam
push
pop
cs
and
aas
jmp
add
push
dec
sarb
sub
xor
bound
ds
inc
add
sub
inc
jne
cmp
mov
lods
aas
lds
inc
fcom
mov
test
cmp
in
dec
dec
push
xchg
jo
push
mov
push
xchg
popf
loop
jno
add
jge
testb
nop
fcmovbe
xor
fsubrl
repz
outsl
mov
cmpsl
lods
fcmove
push
ja,pt
and
fistps
mov
addr16
je
out
sbb
bnd
lret
test
adc
neg
xor
lcall
adc
shll
mov
pop
sahf
lret
pop
jae
repz
adc
test
xchg
push
dec
jge
and
mov
mov
popa
int3
rorb
dec
popf
in
sarb
int3
js
ret
inc
lcall
and
push
mov
rcll
pop
and
mov
fwait
test
pop
ret
adc
in
sub
loopne
xor
aam
pop
cli
xchg
nop
sbb
push
mov
call
lods
lea
int3
jl
cltd
cmp
push
rorl
sbb
imul
loop
and
jb
lret
push
pop
je
jmp
dec
lods
ljmp
cmpsb
pop
push
mov
in
call
mov
or
adc
in
in
insl
and
lahf
aad
out
mov
cli
ja
int3
push
pop
repnz
push
pusha
mov
mov
sbb
cmpsb
cmpsl
aas
out
test
inc
jl
and
jge
in
dec
inc
pop
aad
cmp
push
or
pop
aas
xor
out
dec
pop
dec
xchg
jo
push
cld
mov
sub
enter
jb
sub
add
in
jns
add
test
ror
xchg
mov
filds
out
mov
pop
inc
outsl
push
xchg
inc
lgs
or
ja
cs
jmp
addr16
sbb
int3
loop
push
fs
cli
fstl
addr16
sub
cmp
xchg
fstpl
jl
jb
xchg
in
js
pop
clc
jno
bnd
loope
std
shll
out
je
push
adc
xchg
adc
dec
or
sbb
push
mov
stc
xor
out
xchg
pushf
pop
dec
orl
xchg
scas
add
xchg
out
mov
mov
movsl
out
pop
out
xchg
out
popf
rcll
pop
mov
mov
inc
fmulp
outsl
cltd
test
xor
sub
or
adc
mov
popf
pop
and
xlat
cmp
mov
mov
leave
push
fimull
lcall
and
add
jae
dec
and
cmp
std
push
pusha
mov
cmp
pop
cmpsb
sbbb
pop
stos
push
add
jge
mov
pop
mov
aas
xchg
or
mov
push
xchg
sub
add
sti
ret
mov
and
push
inc
push
ror
in
xor
mov
mov
mov
sbbl
insl
sub
mov
outsb
mov
insb
in
int3
and
push
iret
jb
cli
addl
pop
fldl
testb
push
movsl
add
cltd
in
rcrb
dec
aad
and
ljmp
or
repnz
mov
dec
sar
test
sahf
ret
adc
and
add
xchg
mov
mov
fcmovnb
jle
dec
xchg
dec
repnz
push
inc
add
inc
loopne
in
dec
mov
insb
push
ljmp
pop
ret
mov
push
xor
xchg
mov
out
cmp
mov
pop
jge
and
fidivl
pushf
push
and
dec
in
in
cmp
jno
fisubl
and
xor
or
js
fidivrl
xchg
push
mov
leave
xchg
cmpsl
dec
mov
inc
or
lret
jl
daa
dec
ror
mov
outsb
outsl
inc
add
les
sub
and
cmpsb
add
mov
fs
test
daa
icebp
mov
jp
sahf
and
jb
fdivrl
add
pop
sahf
mov
mov
sbb
fs
out
scas
jg
inc
push
insl
into
insb
or
in
test
push
jbe
aas
pop
pop
fdivs
and
ret
stc
cltd
stc
in
sub
int3
fldl
rcr
xchg
in
push
std
add
mov
mov
mov
pop
outsl
pop
ljmp
xor
jbe
or
cltd
pop
dec
push
mov
lcall
add
pushf
test
xchg
shll
push
cmp
dec
pop
jmp
push
push
lahf
stos
je
push
out
ret
dec
push
sub
mov
cmp
xchg
jo
sub
data16
xorl
clc
mov
insb
jns
xchg
mov
es
or
xlat
inc
jecxz
mov
shr
mov
rorl
push
les
sbb
lcall
cmp
stos
leave
dec
add
push
push
mov
push
aas
rcrb
cmp
mov
fs
mov
movsb
jecxz
addr16
mov
mov
adc
test
mov
shll
and
fcmovnb
mov
outsl
test
lea
adcl
ja
dec
imul
sahf
pop
and
xor
push
sub
jmp
loopne
icebp
jnp
test
mov
inc
rclb
mov
je
and
mov
aam
hlt
stos
adc
cmp
mov
mov
dec
jne
mov
pop
pushf
xchg
fs
dec
mov
call
mov
je
sub
cltd
push
aaa
je
mov
push
lds
push
xor
mov
pop
adc
shl
adc
rorb
fistl
and
push
out
outsb
pop
lahf
lret
out
aaa
adc
pushf
pop
xchg
jnp
repnz
into
inc
out
lods
xchg
movsb
xchg
jmp
lret
shll
xchg
std
mov
push
nop
mov
sbb
loopne
jmp
loop
jmp
int
and
inc
mov
stos
and
cmp
mov
push
fstpl
fiaddl
jne
pop
mov
sahf
jg
cmpsl
push
lds
mov
lret
ljmp
nop
cli
scas
pop
mov
xchg
scas
fcoms
pop
dec
or
jb
into
fwait
pop
into
jne
mov
mov
mov
addb
sub
incl
in
enter
sbb
cwtl
shrl
pop
xlat
call
js
lods
imul
xchg
and
jmpw
lcall
clc
ljmp
lcall
jl
repnz
jg
ror
pusha
ja
pop
xchg
add
imulb
lcall
mov
and
adc
mov
mov
cmp
adc
scas
aaa
or
lods
and
cmp
mov
jnp
mov
test
stc
dec
mov
jge
cltd
inc
roll
popf
xor
jecxz
cmp
js
sub
and
sub
inc
jno
popf
js
cmp
or
mov
aad
iret
cmp
in
sub
lcall
inc
xchg
imul
aas
jns
fsubrl
and
movsl
mov
movsl
cld
incb
stc
test
sub
xchg
adc
mov
cmp
lret
push
enter
sub
lock
pop
cwtl
inc
outsb
shll
jg
scas
sub
push
xor
dec
and
jo
pop
hlt
mov
mov
rclb
mov
and
or
adc
mov
aaa
pop
xchg
inc
inc
dec
inc
push
xor
or
add
xchg
xor
es
cwtl
stos
xor
cmp
push
testl
dec
andl
pop
inc
mov
orl
mov
cmp
imulb
sub
pop
add
fcoml
mov
test
int3
frstor
fcmovnu
or
mov
push
loopne
ljmp
mov
adc
mov
push
xchg
cmovne
push
and
clc
jbe
pop
push
inc
mov
dec
jle
push
jecxz
adc
sbb
mov
repz
lcall
fldt
jne
sbb
lea
outsb
pusha
push
hlt
les
xchg
test
push
sbbl
add
sub
movsb
sub
or
adc
loop
fnstsw
inc
push
addl
pop
movsl
std
push
test
or
cld
add
das
stos
daa
movsb
test
mov
mov
lods
sbb
lcall
outsb
pop
jg
pop
jecxz
push
fidivs
mov
cmp
enter
mov
cs
pop
mov
addr16
insb
jg
inc
popa
lret
xor
ret
nop
pop
xor
xor
fs
lods
adc
popf
psrad
lret
test
mov
dec
movlps
sub
icebp
or
loopne
loope
cwtl
cmpsl
xchg
stos
inc
inc
xor
and
imul
shl
stc
in
add
xor
mov
roll
stc
dec
dec
inc
cwtl
jl
mov
sub
add
jge
add
aas
js
add
xor
jp
jecxz
repz
enter
and
lea
insb
movsl
mov
dec
movaps
and
sbb
cld
shrb
out
lea
push
xor
out
into
dec
cltd
jmp
dec
cld
push
in
and
les
fwait
pop
xchg
add
xlat
mov
divl
mov
das
xchg
nop
shl
out
movsl
nop
lods
inc
lret
add
cmp
sbb
enter
outsb
fwait
xor
mov
sbb
and
add
scas
add
dec
jns
jmp
inc
imul
sarl
mov
sahf
sbb
jle
shll
cmp
mov
push
sti
jmp
pop
imul
popl
mov
leave
jb
test
stos
mov
push
mov
rorb
sub
mov
fidivl
push
adc
repnz
es
xor
fisttpll
add
int
mov
cmp
imul
in
mov
jb
fs
inc
ret
movsb
imul
or
sbb
int
mov
rcr
nop
mov
fdivrs
mov
call
cmp
jle
js
sub
ss
leave
shll
insl
insb
adc
and
call
test
lret
and
leave
xchg
dec
pop
jo
and
mov
jg
stos
ret
add
xchg
int3
pop
shlb
mov
out
xchg
clc
sub
jmp
push
mov
push
sbb
aaa
enter
adc
adc
test
pop
test
std
xor
cmpsl
push
andb
pusha
cwtl
mov
stc
daa
mov
xor
sarb
out
adc
leave
xchg
ror
pop
shlb
mov
ficoml
adc
cmpsb
dec
sbb
dec
pop
add
xchg
dec
fwait
xor
ja
mov
jl
enter
jle
test
dec
fsubrl
addr16
cmp
cmp
sti
pop
pop
in
cmp
enter
adc
xchg
pushl
stos
jp
jmp
movl
add
and
enter
loopne
sub
js
sbb
lea
pop
xlat
xchg
cmp
jmp
sub
stos
xchg
or
iret
iret
push
cmp
xor
or
dec
cld
mov
bound
stc
scas
ret
push
cmp
add
aad
sbb
jp
sub
fwait
xchg
cmp
cld
push
aam
pop
in
add
push
aas
inc
mov
or
js
mov
jnp
add
cmpsb
movsl
mov
and
cmp
cmpsl
lret
filds
xor
xchg
je
leave
lods
and
aam
xchg
fbstp
or
adc
xor
movsb
in
or
jp
cmp
and
enter
outsl
lahf
xchg
sbb
ret
fidivs
pop
les
jbe
mov
or
imul
pop
imul
testb
in
mov
dec
xor
fsubs
ja
jl
mov
sbb
lret
pop
aas
lret
ret
cmp
push
es
inc
mov
roll
xchg
bound
outsb
adc
sbb
push
push
pop
arpl
incb
and
sahf
lret
push
sbbb
in
scas
into
testb
pusha
arpl
xchg
clc
inc
dec
cmp
sbb
clc
mov
xor
cmp
pop
test
lret
inc
sbb
mov
push
lds
mov
or
adc
icebp
and
leave
cwtl
mov
jl
js
adc
sti
pusha
adc
pusha
out
mov
jns
and
dec
rcrb
jo
push
mov
pop
xchg
cmp
lahf
xor
subl
and
pop
mov
lods
sbb
add
ljmp
sti
push
or
jp
call
xor
enter
mov
mov
bound
leave
pop
sub
dec
lods
pop
clc
push
shlb
mov
mov
ret
mov
lcall
mov
aaa
movsb
push
lret
jl
sub
dec
ret
mov
scas
push
fstps
dec
fcmovnb
xchg
xchg
gs
testb
es
and
or
ds
pusha
cmc
leave
popf
aas
sbb
cli
fcompl
in
out
aas
or
insb
test
pop
icebp
imul
or
xchg
mov
fsubr
sti
icebp
cld
mov
mov
fnstenv
add
sub
test
push
cs
adc
dec
xchg
cmpl
fcomps
fistpll
mov
cmc
lock
imul
pop
inc
pop
inc
xchg
jo
add
test
dec
test
cmp
xchg
add
ja
out
mov
mov
sub
lret
push
mov
and
dec
in
mov
leave
fisubs
xor
inc
lds
inc
sub
add
call
and
and
mov
in
mov
nop
jbe
out
mov
push
dec
adc
sub
add
fwait
pop
out
mov
aad
mov
dec
or
or
adc
and
sbb
inc
jo
decl
repz
dec
sarb
in
xchg
mov
cmp
mov
repz
loope
in
cli
mov
xchg
push
xlat
and
jnp
addl
in
cmp
jbe
cmp
cmp
add
std
loop
ret
je
add
sti
mov
or
pop
push
cmp
test
sbb
repz
test
sub
adc
bound
aam
sub
sahf
push
pusha
xor
fistps
sub
outsb
sbb
cli
stc
bound
jp
mov
adc
xor
mov
ds
jns
jnp
add
adc
add
jae
or
fcompl
stc
add
xor
dec
test
sbbl
in
pop
add
mov
movsb
mov
dec
push
jg
out
push
aam
and
das
cmp
mov
add
xor
fistps
mov
das
testb
aaa
fxch
ss
push
scas
adc
aam
dec
mov
mov
int3
test
jnp
popa
mov
inc
or
lcall
xlat
pop
mov
sbb
fwait
xchg
pop
daa
out
xor
cmp
gs
out
rolb
mov
mov
mov
dec
jl
mov
pop
rcrl
stos
ficomps
repz
xchg
jne
mov
filds
pusha
ds
xor
shlb
shl
mov
push
out
int3
push
push
cmp
sub
jmp
jl
xchg
movsl
movsl
xchg
pop
clc
jae
adcb
and
leave
enter
andb
or
scas
add
daa
cmp
cltd
stos
dec
sbb
fstps
pop
jne
les
and
popa
adc
mov
ljmp
test
adc
xchg
xor
sub
adc
fcomi
mov
jno
xor
add
adc
xor
sti
test
jae
cmp
and
xchg
jge
mov
arpl
test
lds
scas
inc
inc
xlat
add
aas
les
mov
and
cmp
or
cmc
or
mov
lret
push
addb
jecxz
dec
sub
inc
movsb
and
lret
shlb
std
pop
mov
add
sub
add
ret
test
in
decb
or
rcrb
loopne
jmp
cwtl
jb
mov
test
push
test
or
adc
fcmovbe
movsb
xchg
xlat
outsb
pop
hlt
xor
repnz
sar
pop
push
push
je
pop
xchg
ret
push
jb
sbb
cmp
cld
pusha
pop
ja
mov
rolb
test
pop
loop
jecxz
lret
jnp
push
popa
dec
and
dec
into
in
cltd
inc
adc
or
jmp
adc
mov
mov
lcall
lds
mov
bound
aas
mov
mov
dec
inc
daa
cmpsl
fcomps
rolb
mov
iret
dec
mov
cmp
fcoml
lcall
cmp
and
mov
jno
lcall
stc
jb
jnp
mov
imul
icebp
and
ss
testb
jle
pop
ss
mov
stos
push
adc
mov
insb
cmp
out
ds
adc
mov
rol
repnz
push
int
orb
cwtl
push
aad
das
frstor
jp
sbb
int
or
stos
inc
callw
imul
cmp
push
hlt
hlt
cmpsb
inc
mov
shrl
sbb
ljmp
mov
mov
fists
notl
mov
pop
mov
inc
mov
mov
inc
lods
mov
movsl
and
aas
xlat
mov
jl
adc
lods
pop
stc
repnz
cmp
cltd
scas
cltd
xchg
mov
andl
stos
scas
fistpl
pop
mov
xlat
mov
imul
pop
sub
sbb
add
dec
jl
neg
mov
fnstsw
enter
cmpsb
rcrl
mov
subb
mov
jae
sub
mov
mov
pop
mov
repnz
adc
fisubl
decb
or
pop
cmpsl
dec
mov
mov
lock
and
in
adc
jmp
imul
jno
add
jne
add
dec
repnz
repz
movzwl
cmp
sbbl
roll
inc
enter
fnstcw
js
dec
sub
in
jl
pop
adc
pop
dec
rorl
mov
jge
mov
jp
daa
call
add
data16
scas
arpl
sub
xor
jae
andb
xchg
in
aad
jae
out
cltd
push
mov
xor
mov
jo
jno
cmp
inc
popa
push
out
cmp
daa
xchg
cltd
or
scas
dec
sub
int
jne
xchg
fmull
sbb
mov
jmp
stos
cltd
pop
orb
pop
xchg
pop
mul
test
cs
push
ja
out
call
mov
or
cmp
push
in
pop
fstpl
ja
pop
adc
sbb
mov
mov
xchg
adc
aaa
test
pop
or
gs
js
mov
cmpsl
mov
mov
dec
and
cmpsl
mov
or
mov
mov
push
daa
fimuls
icebp
or
stos
jecxz
pop
add
adc
orb
push
mov
jg
in
adc
hlt
sub
hlt
xor
jg
outsl
jo
lods
test
out
std
lret
xor
pusha
stos
jnp
das
fstpt
das
sbb
ss
or
mov
clc
lret
lcall
addl
lcall
xchg
jnp
cld
add
popa
add
mov
and
cmp
mov
enter
call
inc
jl
in
mov
stos
push
insl
lret
pop
adc
pop
mov
xchg
jno
aaa
dec
fisttpl
in
sbb
inc
mov
loope
mov
lds
pop
jle
pop
mov
pop
pop
mov
adc
push
adc
jb
mov
addl
dec
mov
sub
mov
lret
aaa
les
testb
and
xorl
and
movsl
jae
call
xor
pop
fildl
mov
js
pop
in
hlt
stc
shll
push
cmp
sub
or
jne
lods
xor
xor
stos
popf
mov
inc
cmp
lock
cmp
adc
xchg
and
cwtl
popf
inc
fidivrs
lds
mov
repz
jmp
mov
add
das
mov
cwtl
test
jecxz
cmc
je
jmp
add
stc
je
xlat
in
in
pop
lret
push
mov
or
outsb
jp
push
sub
je
jg
aad
sub
les
mov
shl
iret
mov
dec
cmp
int3
lods
pop
leave
ja
repnz
xchg
popf
inc
jnp
lahf
cmp
daa
cmc
test
mov
fwait
pop
dec
loop
adc
dec
or
popa
mov
or
pop
and
ss
or
adc
sbb
mov
in
xchg
mov
or
test
jbe
and
sbb
pop
cmp
xor
stc
nop
sub
push
mov
push
add
insb
mov
and
cmpsb
inc
mov
push
lahf
mov
or
daa
mov
cmp
je
aas
pop
lahf
mov
xor
scas
sbb
push
jle
mov
mov
daa
push
lret
fdivr
sti
cs
pushf
or
popa
nop
call
adcl
jl
dec
push
addl
xor
movsl
ds
in
sbb
adc
and
xchg
add
adc
push
mov
xchg
ljmp
sbbl
lds
pop
sti
sbb
int
mov
sbb
fistpll
test
mov
lea
or
sbb
outsb
inc
out
testl
jae
mov
xor
shlb
test
lcall
xchg
push
in
aam
add
push
je
lock
subb
dec
jbe
sub
xchg
lods
xor
movsb
xchg
movups
enter
lock
and
push
push
inc
cmp
mov
push
mov
add
out
sub
sbbb
xchg
push
int
xchg
stos
jbe
dec
sub
into
mov
rcrb
pop
push
sti
or
fcoml
fmul
into
shrb
in
cmp
ja
push
cmp
xchg
int3
mov
xchg
push
leave
jge
push
mov
outsl
cwtl
ja
jno
pushf
fwait
stc
mov
out
push
mov
pop
cltd
jns
aas
testl
jbe
ljmp
fistpl
out
lret
fsubr
jns
xlat
and
js
movsb
xchg
aas
and
out
das
cmp
inc
loop
notb
lmsw
hlt
rcrl
push
push
lock
icebp
mov
lahf
insb
imul
or
inc
sub
jmp
scas
ret
push
divb
mov
xor
cmp
lock
add
loop
mov
leave
mov
push
movsb
and
and
xchg
and
sbb
mov
jl
stos
jno
mov
subl
shrl
es
or
push
pop
lock
push
loop
clc
mov
repnz
mov
nop
sub
or
mov
mov
rclb
mov
insl
push
sbb
jecxz
pop
cli
fmull
lds
ficoml
add
add
sub
mov
mov
xorb
inc
rcll
sub
push
scas
fwait
push
fwait
bound
sbbb
and
loope
jne
mov
decl
add
enter
shl
pop
jl
rcrl
aad
push
sti
push
mov
lock
cmpsb
jecxz
pop
adc
xchg
pushf
dec
dec
fs
sbb
roll
add
jae
test
push
xor
push
fwait
mov
xor
inc
test
xor
sub
clc
inc
pusha
gs
dec
mov
sub
or
insb
dec
enter
mov
test
mov
ret
les
or
add
addr16
mov
inc
out
movsb
push
adc
cmp
or
sub
mov
push
fidivrl
out
adc
xchg
aam
mov
lret
jl
lahf
add
loope
loope
or
pop
cmpb
shll
add
popa
paddsw
arpl
jb
inc
daa
cmp
or
stc
popf
leave
jmp
dec
inc
loopne
scas
xchg
or
jmp
cltd
aad
js
outsb
cmp
stc
and
xor
dec
addr16
fstps
push
mov
sti
adc
gs
outsb
jno
in
cwtl
fdivp
push
xchg
cmp
cmp
add
push
loop
and
cli
adc
adc
and
cmpsl
jb
mov
or
xchg
pop
and
in
push
fsubrl
mov
inc
jo
cld
sub
push
addr16
rorb
jle
fists
mov
in
aam
mov
pop
std
add
mov
mov
loop
aas
and
inc
int3
dec
ss
mov
cmpsb
add
movsb
lret
mov
mov
add
imul
popa
scas
es
push
addl
push
push
call
mov
xor
test
lcall
adc
cld
daa
iret
mov
push
adc
test
xchg
dec
test
lret
arpl
jmp
dec
inc
sub
out
dec
inc
fildl
push
sbb
inc
xor
mov
adc
loopne
shll
in
mov
inc
cmp
xchg
mov
rcl
call
jmp
lea
enter
add
push
out
add
adc
loopne
jecxz
jb
pop
inc
ror
cmp
insb
or
mov
push
or
shl
or
stc
push
into
jne
pushf
mov
stos
inc
inc
dec
or
mov
xor
rolb
outsb
inc
pop
and
imull
mov
push
xchg
jne
nop
xchg
sbb
mov
add
in
push
inc
pop
sbb
repnz
lea
es
repnz
fcmovbe
and
mov
jnp
mov
test
loope
movsb
inc
cmovo
hlt
add
fsubl
xchg
add
jne
dec
push
mov
jp
popf
std
push
in
sub
subl
push
mov
cmp
int
outsl
mov
adc
push
decb
pop
and
or
inc
cmp
insb
daa
mov
adc
xchg
ret
stos
stc
std
int
mov
cmp
sub
inc
pop
dec
xchg
cli
xor
out
push
mov
cmp
dec
fnstsw
xor
xchg
and
cmp
jge
pop
mov
decl
push
sub
and
in
sbb
hlt
push
fisubrl
into
loopne
ss
in
push
push
fstps
fcmovnb
ret
movsl
adc
test
xlat
xor
push
and
jge
test
ret
and
js
xor
int
data16
insl
fwait
sti
out
or
out
outsb
leave
dec
mov
and
shll
push
in
inc
push
stc
cmpb
xor
pop
dec
mov
lcall
lock
mov
in
dec
adc
cwtl
or
sbb
aad
inc
scas
cwtl
or
xchg
cmp
fstpl
ds
inc
into
mov
inc
sbb
mov
not
and
adc
mov
jno
andl
aam
aas
leave
clc
ret
shlb
push
sub
mov
push
inc
mov
aaa
fcomps
popf
add
mov
iret
cli
push
sub
pushf
ret
in
mov
push
lods
adc
mov
rolb
push
jb
mov
lea
jmp
lret
pop
mov
loope
sahf
or
inc
inc
into
pop
cmp
pop
js
dec
pusha
lock
xchg
or
sbb
mov
inc
cmp
pushf
pop
xchg
mov
test
push
pop
insl
out
mov
ss
stos
das
bound
les
cmpsl
push
stc
add
jno
jne
ljmp
cmp
xchg
aas
scas
je
xchg
divb
out
mov
into
arpl
ret
add
jb
sbb
xor
movsl
pop
fs
jle
mov
xor
fistl
ja
mov
nop
sbb
arpl
cmp
insl
sub
insl
cwtl
sub
xor
ja
pop
lock
pop
movsb
insb
dec
icebp
xchg
fidivrl
xchg
add
out
cltd
ja
scas
out
add
popa
xchg
and
sub
sub
mov
adcl
int
subl
xorl
add
sub
dec
shll
stc
test
pop
pop
or
inc
in
fs
xor
add
mov
sbb
mov
mov
cmc
ss
cs
pop
mov
mov
cmp
pop
push
bound
aaa
test
loopne
sbb
pop
xor
add
dec
cmp
sub
imul
mov
push
mov
sahf
adc
movsb
mov
outsb
xor
push
out
xor
aam
cmpsb
test
stos
fcompl
loop
mov
jns
cmp
cmp
mov
mov
adc
xor
inc
fwait
ret
popa
mov
xchg
xchg
xlat
add
add
xorl
scas
xor
push
jp
les
push
test
xor
adc
test
mov
mov
jns
add
jp
cmpsb
xchg
dec
sub
xor
xchg
mov
stc
pop
push
icebp
lods
mov
clc
mov
pop
test
and
add
inc
mov
push
aaa
mov
iret
lods
add
rcrl
pop
inc
scas
add
xchg
test
fnstcw
icebp
dec
mov
and
push
mov
cmp
addr16
out
mov
mov
inc
mov
jb
add
dec
fistps
mov
jne
fbstp
sbbb
sub
stos
jb
mov
or
pop
js
sub
ds
ljmp
mov
lock
mov
sti
or
push
jmp
inc
mov
jmp
subb
mov
or
xchg
and
mov
jnp
mov
push
sbb
mov
mov
pop
inc
cmp
aas
ret
rorl
ret
in
dec
adcb
std
add
sbb
inc
ftst
adc
lea
jbe
loope
mov
and
jb
cwtl
pop
shrb
sub
dec
arpl
call
in
aas
test
pop
jge
jns
pop
and
sub
pop
loope
jo
subl
mov
or
insb
fsubr
outsl
add
adc
cli
jge
adc
std
in
and
xlat
aad
jae
sub
ret
fmuls
and
cmp
popa
sub
out
and
jg
in
pop
mov
sbb
addb
inc
aam
mov
aam
cmp
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
shlb
aad
sub
jb
mov
mov
mov
xchg
movsb
sbb
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
cltd
movsl
sbb
xchg
xchg
xchg
or
movsl
push
ret
mov
lods
movsl
ret
jns
mov
jecxz
nop
dec
hlt
test
repnz
push
fsubs
lcall
mov
xor
xchg
movsb
sbb
mov
out
hlt
or
mov
cmpsb
push
negl
push
dec
subl
into
popf
test
or
int
out
imul
insl
pop
inc
pop
lds
xor
loope
xchg
or
jns
mov
cmp
ds
dec
xchg
mov
inc
test
popa
popf
cmc
jnp
cmc
mov
cli
shll
mov
fadd
pop
cmc
out
push
mov
hlt
or
push
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
fcoml
sbb
cli
ret
jno
inc
mov
mov
xchg
movsb
sbb
pushf
cmp
mov
xchg
movsb
sbb
inc
mov
or
pushf
lea
inc
mov
lock
cmp
inc
mov
mov
xchg
movsb
sbb
pushf
mov
inc
mov
mov
popf
movsb
sbb
pushf
lea
dec
inc
mov
mov
adc
mov
mov
mov
push
pushf
lea
push
mov
mov
xchg
movsb
sbb
pushf
lea
inc
adc
sub
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
test
test
aad
sub
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
les
rcrb
push
pushf
lea
sub
mov
adc
xchg
cmpb
push
pushf
lea
inc
mov
jnp
pushf
lea
inc
mov
jo
xchg
movsb
dec
push
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
pusha
mov
push
push
jecxz
je
decl
aad
or
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
int3
aad
call
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
sbb
pushf
lea
inc
mov
mov
xchg
movsb
mov
xchg
lea
mov
pushf
aad
add
jle
mov
mov
cmp
incl
das
icebp
jnp
or
loop
or
jecxz
add
mov
pop
pop
adc
sub
mov
repz
jecxz
xchg
dec
ret
mov
int3
cmpsl
pushaw
divb
jnp
mov
xor
call
fldt
push
ds
bound
adc
mov
xchg
shrb
rclb
inc
xchg
inc
mov
jle
and
mov
mov
sub
dec
sbb
jg
cmp
fldt
mov
fwait
cmp
dec
jmp
sub
jb
jno
inc
mov
sub
das
cmp
pop
pop
hlt
mov
push
les
lret
in
xchg
ja
pop
outsl
add
pop
in
mov
adc
pushf
mov
shl
add
push
imul
jo
lock
jg
out
test
mov
mov
movsl
jle
pushf
push
fcoml
loop
xchg
in
aam
mov
cmp
pop
insb
pop
push
fucom
fdivp
mov
filds
add
jns
fwait
mov
clc
insb
loope
arpl
data16
sbb
call
jnp
push
movsb
sub
enter
push
sub
data16
in
cmp
adc
sti
gs
cmp
jae
adc
adc
inc
out
ret
sub
in
hlt
sub
js
adc
jae
lret
cld
sub
jne
les
jge
adc
jmp
stos
xor
jnp
inc
lock
aad
ret
add
ljmp
cltd
xchg
inc
movsl
and
jb
daa
fsts
pushf
jle
xchg
push
push
add
inc
xchg
rorb
int
ss
aas
mov
mov
fisubrs
jne
jb
lret
mov
popa
xor
xlat
inc
jnp
mov
xor
loope
xchg
add
lret
test
xlat
aas
mov
sarb
jle
int
jo
int
or
popa
sbb
mov
adc
lcall
pop
lret
mov
lock
and
icebp
in
cld
ret
adc
cmp
ljmp
clc
cltd
and
jnp
mov
lods
fisttpll
je
insb
int
pop
jns
mov
xchg
sahf
xor
push
xor
enter
dec
adc
xchg
jp
ljmp
inc
xchg
mov
and
data16
lret
popf
pop
cmp
out
adc
add
pop
xchg
fidivl
pop
xchg
cltd
dec
std
and
scas
mov
loopne
inc
mov
stc
pop
js
xor
xor
jno
jl
xor
pop
pop
mov
add
sub
mov
in
jno
inc
sbb
repnz
mov
sbb
mov
inc
inc
out
loop
mov
ficompl
push
dec
data16
pushf
xor
sub
cmp
dec
dec
add
sbb
sub
mov
pop
xchg
lock
mov
lret
mov
dec
lods
pop
push
aam
rcl
pop
pop
jmp
add
idivb
loope
push
in
mov
stos
cwtl
add
xchg
out
jbe
mov
popf
jge
insb
pop
ss
push
and
pop
or
out
jno
xor
into
stc
loope
addr16
push
mov
adc
clc
mov
popa
push
mov
pop
bound
insl
dec
shlb
jge
ljmp
fimuls
inc
adcb
mov
call
rcrb
mul
inc
cmp
int3
rorl
adc
insb
add
sbb
repnz
lahf
pop
rclb
shrb
sbb
inc
pop
mov
or
cmp
sbb
jge
and
sub
add
sbb
xor
inc
sub
xor
stc
cmp
adc
jbe
movsl
inc
test
subl
repz
mov
jnp
in
xor
mov
add
push
pop
js
or
in
add
insb
psadbw
mov
pop
cmp
pop
sbb
inc
cmc
movsl
xchg
lahf
push
inc
jp
popf
jge
in
jl
dec
push
xchg
mov
out
lahf
imul
sub
cmc
sti
movb
mov
add
cmpsb
fsubrp
jle
int
jns
or
jecxz
ror
gs
sub
jbe
fldt
inc
outsb
pusha
bound
push
ljmp
jae
lea
aad
rorl
cmp
jge
mov
or
popf
xchg
lods
mov
mov
outsb
adc
or
add
leave
mov
fimuls
ds
arpl
cli
jecxz
push
out
mov
test
dec
or
or
add
testl
pop
mov
xchg
xor
push
mov
mov
dec
loop
xor
cld
mov
popa
repnz
xchg
push
aad
push
push
xor
lods
fdivl
add
stc
test
mov
bound
leave
xchg
repnz
jle
mov
and
stos
cltd
sbb
fildl
aad
dec
push
movsl
out
adc
ret
fmuls
mov
inc
adc
inc
fmuls
xchg
inc
fildl
jae
fs
stc
push
imul
lock
in
icebp
push
and
stos
jl
inc
les
pop
ja
pop
ljmpw
cmp
outsb
punpckhdq
idivl
mov
fsubl
sub
lods
std
cmp
xlat
sbb
testl
push
ss
pop
lahf
loope
mov
fcompl
lret
subb
push
call
insb
adc
js
push
push
sbb
in
roll
es
leave
stc
cmp
sbb
adc
addr16
xor
mov
sub
push
xor
mov
jo
jae
pop
cwtl
fstps
adc
mov
xor
add
pop
lock
movsl
aad
cli
lea
sarl
mov
arpl
xchg
xlat
push
sub
imul
xor
stos
test
dec
jge
fisubl
popw
dec
popa
sbb
inc
fs
sbbb
es
pusha
outsl
mov
aam
xor
xchg
stos
fiadds
jb
sbb
add
int3
out
mov
jle
fwait
adc
push
adc
lock
jg
adcl
dec
lds
inc
pop
xor
add
es
call
mov
stos
fstpl
add
push
hlt
push
fistl
sti
lds
xchg
ljmp
cmpsl
or
addr16
divl
dec
mov
cli
pop
shl
cmp
sbb
cs
mov
or
imul
pushf
add
inc
and
mov
mov
pop
inc
dec
stos
pop
xchg
xchg
ret
xchg
xor
mov
dec
pop
test
jmp
leave
jnp
jl
inc
lret
mov
loop
lods
inc
adc
fdivrp
cld
adc
test
out
ret
xor
xchg
or
fs
shl
jae
loop
loop
iret
shl
ficoms
repnz
inc
xchg
mov
out
cmp
xor
adc
add
or
push
popa
pop
mov
or
daa
jbe
rorl
pushf
test
ljmp
adc
cmp
mov
dec
ljmp
inc
mov
pop
fiadds
mov
bound
xchg
addr16
pop
in
imul
nop
ss
dec
ret
sbb
push
push
xor
or
xchg
inc
gs
push
call
loop
xchg
or
jle
into
jp
mov
sbb
int3
das
adc
insl
add
ret
clc
mov
out
inc
ficompl
jo
jne
or
ljmp
xchg
mov
out
test
mov
xchg
int3
lods
xchg
sbb
sub
adc
out
mov
adc
lcall
sar
mov
inc
push
mov
and
add
cmp
sbb
popf
pop
lock
repz
jne
fistpll
inc
repz
popf
pop
mov
push
jb
out
jnp
div
iret
mov
popf
out
sub
jle
xor
lcall
les
sbb
xchg
and
dec
nop
test
lcall
int3
stos
xor
mov
test
sbb
dec
add
sub
dec
fsubrs
test
mov
cmc
adc
add
addr16
pop
lret
and
cmpsl
mull
js
rcrl
adc
repnz
xor
ret
mov
add
jbe
lahf
mov
loopne
mov
sub
les
stc
mov
jb
pop
popa
loopne
vdivps
add
pop
test
decb
shl
cmp
mov
push
jge
iret
lcall
fwait
xlat
cli
jns
loope
addr16
popa
jg
test
mov
lea
loopne
push
and
xor
jns
sub
inc
or
xor
xchg
sbb
mov
std
add
out
jo
pop
cltd
mov
cmp
push
mov
rcrb
stos
cmp
mov
xor
sarb
cmp
push
sub
hlt
hlt
jg
or
outsl
sti
push
repnz
pop
push
xchg
outsb
rcll
push
adc
jnp
inc
jns
fwait
pop
in
cmp
or
cmc
mov
xchg
fsubl
and
xchg
sbb
bound
push
pop
sti
push
shrb
dec
into
and
loope
dec
inc
mov
xor
sbb
loopne
in
cmp
jl
inc
sahf
lahf
stc
aaa
insb
and
adc
mov
push
add
popa
xchg
cs
pop
shl
ret
popw
iret
mov
xchg
or
fnsave
lods
xor
ficoml
inc
xor
and
mov
dec
fwait
xchg
rcll
jp
scas
jb
les
xchg
xchg
popa
sub
jnp
mov
adc
and
fcmovnu
push
pop
lock
pop
mov
paddq
xchg
mov
adc
mov
and
push
mov
cwtl
leave
sbb
scas
mov
fcmovb
jg
mull
mov
jle
push
into
fisubl
or
and
push
dec
call
in
sub
enterw
into
mov
jmp
hlt
inc
mov
adc
mov
pushf
mov
insb
jo
inc
mov
pusha
inc
add
or
push
jge
inc
jno
daa
fsts
xor
sub
les
imul
cltd
insl
mov
jp
loop
call
leave
jg
icebp
js
push
and
dec
mov
ret
pushf
xlat
dec
mov
adc
or
xor
cmpsb
roll
nop
insl
adc
lret
dec
jbe
push
push
push
nop
fs
xchg
in
outsl
int
testb
test
in
mov
mov
pusha
pop
push
imul
addr16
lahf
dec
mov
movsb
adc
jmp
mov
movsb
mov
push
hlt
xor
sub
movsl
lock
lods
in
push
inc
inc
sub
orl
mov
add
or
sbb
xchg
rolb
inc
ds
mov
xlat
dec
adc
call
or
fs
popa
mov
hlt
mov
in
jmp
int
and
xchg
mov
ret
cmp
push
mov
xchg
add
pop
stc
scas
js
dec
out
imul
adc
loope
in
pushf
fstpl
dec
dec
sbb
and
and
ja
xor
insb
push
mov
adc
pop
lock
inc
lcall
sti
jb
shl
lock
outsl
cli
dec
cs
test
idiv
mov
mov
rorb
fldt
lock
jmp
aas
enter
lcall
dec
arpl
cmc
ret
adc
add
sbb
xor
adc
mov
sub
imul
jne
lcall
dec
incb
mov
adc
aas
dec
mov
loop
imul
icebp
loope
add
in
fidivrl
add
sbb
adc
test
iret
cmpsl
in
insl
mov
lea
sahf
sbb
add
push
lds
pop
push
fdivrl
xlat
xor
push
and
ret
testb
ja
push
daa
add
loope
add
adc
adc
sahf
push
insb
jns
jnp
sub
ret
ja
xchg
mov
xor
in
xor
jns
adc
cs
jb
mov
push
dec
add
fucomip
mov
fdivrs
fwait
repnz
out
ds
mov
xchg
cmpsl
out
adc
push
pop
cld
ret
xchg
adc
sti
mov
inc
add
je
sbb
and
xlat
add
daa
mov
dec
push
ds
faddp
dec
sub
ja
sti
in
mov
pop
inc
push
push
push
adc
sub
lods
sub
mov
out
ja
fisubs
xchg
loope
sbb
ja
fdivrl
pop
adc
jne
aad
pop
stos
or
ja
mov
xlat
inc
mov
iret
dec
es
dec
psrlw
mov
lods
pop
jle
and
mov
mov
inc
xor
add
jb
add
or
dec
shlb
test
dec
or
inc
inc
inc
pop
enter
aad
dec
int3
pop
push
fdivrp
add
outsl
call
mov
push
jns
int3
pop
push
out
mov
push
mov
push
add
cmp
push
cmp
lret
cmp
jnp
add
dec
or
inc
sub
arpl
sbbb
sub
rorl
xor
inc
in
mov
cmp
xor
es
push
je
mov
arpl
rol
lcall
pushl
iret
pop
rcll
cmp
jnp
sahf
cmc
lods
mov
push
sbb
sbb
icebp
mov
inc
cmp
clc
jp
loopne
jo
inc
lahf
dec
cmp
lahf
mov
imul
adc
mov
or
cld
adc
inc
cwtl
test
clc
jecxz
jo
leave
push
sahf
cmc
xchg
mov
outsb
mov
aaa
push
or
dec
mov
outsl
inc
cmp
shlb
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
