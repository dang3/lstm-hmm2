es
mov
sub
sbb
imul
out
out
jg
cltd
repz
xlat
addb
aas
roll
imull
data16
jg
mov
lahf
icebp
xchg
rep
jnp
repz
jle
mov
push
call
popf
mov
cmp
pushaw
bound
hlt
shr
sbb
outsl
in
imul
or
mov
cmp
das
int3
lods
fwait
adc
or
push
inc
jg
mov
rcll
adc
pop
adc
jo
repz
ret
or
mov
aas
sahf
jo
inc
mov
cli
inc
adc
gs
jbe
mov
pop
mov
pop
pop
lods
sub
pop
fwait
push
clc
dec
inc
push
daa
pop
cmp
scas
aaa
idiv
mov
push
rclb
mov
dec
int3
fisubrs
das
adc
sbb
add
add
cld
rcrl
ret
ja
and
xlat
nop
lret
insl
inc
rorb
pop
cmp
inc
shrb
cli
cmpsl
in
cmp
imul
bound
push
sub
aad
data16
ficomps
shll
rol
jmp
inc
adc
loop
add
sub
and
and
sbb
lret
mov
test
into
lret
das
ljmp
xchg
dec
out
arpl
mov
add
imul
adc
dec
xchg
xor
addb
mov
test
popf
mov
inc
rol
cmpsl
les
inc
xchg
call
xor
xchg
movb
push
movsl
adc
and
cld
cmpsl
lahf
mov
cmp
push
aas
mov
fldpi
in
je
push
pop
daa
out
mov
jl
xchg
xchg
das
negl
push
lahf
sti
push
sub
push
decb
mov
add
repz
arpl
sbb
leave
cmp
xor
xor
pop
mov
sti
fisttpl
and
mov
inc
dec
rcr
sub
sbb
cs
int3
jns
lods
mov
popa
int3
clc
icebp
cld
xchg
cmp
or
cltd
xchg
sarl
lods
out
movsl
lods
fcoml
mov
pop
into
jno
loop
in
mov
popf
imul
lret
dec
inc
je
cmpsb
cli
out
add
fsubp
pop
leave
cld
push
push
cmpsl
or
and
add
add
rorb
or
daa
leave
popf
pop
xchg
dec
sub
push
cs
push
fs
and
mov
cmc
mov
out
call
and
mov
stos
adc
push
xor
repnz
rcrl
outsl
push
pop
dec
scas
insl
test
cltd
sbb
inc
cmp
fisttps
mov
imul
cmp
add
repz
fildl
hlt
xor
jecxz
out
pop
fisubrl
int3
jmp
hlt
sub
dec
jmp
inc
push
push
lret
mov
int
sahf
sub
xor
adc
jns,pn
dec
inc
test
mov
bound
adc
push
mov
sbb
push
lods
ss
push
pop
push
lahf
out
popa
xchg
outsb
jae
xchg
push
cmpl
mov
pop
cwtl
xor
and
out
mov
add
lods
pop
adc
out
or
orb
mov
mov
and
sub
sbb
jbe
sbb
jg,pt
hlt
mov
jbe
push
lret
lahf
ss
sbb
ds
mov
ret
mov
pop
xchg
cmpb
push
orl
scas
or
cld
out
dec
outsl
test
mov
fildll
sahf
cmp
mov
push
push
adc
pop
jp
dec
pop
cwtl
inc
or
fwait
xor
nop
jae
mov
pcmpgtd
das
inc
mov
loopne
sbb
push
push
lods
loop
mov
xchg
mov
add
sbb
leave
ljmp
xor
movsb
mov
insl
adcb
cmp
jbe
lods
into
push
dec
sub
pop
cmpb
fbld
mov
rclb
cmp
push
pop
cmp
js
clc
lods
pushf
mov
add
pop
hlt
and
xchg
and
add
mov
sub
pusha
sbb
das
pop
push
push
add
jg
xorb
adc
jmp
pop
adc
inc
lea
sub
jo
icebp
jno
sub
or
repnz
push
push
mov
jno
in
add
dec
dec
cmp
int
xorb
mov
fldcw
pushf
mov
jne
lahf
inc
jnp
nop
stos
mov
scas
cmpsb
push
fists
data16
pusha
fwait
popf
outsl
inc
ror
scas
loopne
adc
ja
out
mov
mov
dec
and
lods
int
and
in
mov
jge
jbe
xlat
cmp
mov
mov
push
movsl
loop
stc
cmp
xorl
cmp
stos
in
lods
sub
jbe
out
or
inc
mov
dec
mov
and
xchg
jbe
mov
enter
xchg
inc
push
push
push
xor
or
dec
insb
enter
xor
mov
inc
popf
add
cmpsb
xchg
mov
imul
mov
stos
sbb
dec
adc
jne
movsl
jae
mov
mov
test
jle
cmp
out
repnz
pop
ds
ljmp
xlat
mov
push
cmp
pop
iret
std
xchg
sub
stos
adcl
out
add
add
adc
mov
out
inc
mov
dec
out
mov
xchg
test
pop
cmp
fs
adc
mov
dec
adc
xchg
mov
xchg
pop
add
scas
sub
push
push
lock
push
daa
or
cmp
add
movsb
push
fbld
pop
stc
mov
out
jne
sahf
xchg
scas
repz
or
popf
roll
push
test
mov
cli
pop
shr
in
aad
cld
adc
push
out
jp
mov
adc
xor
pop
fs
movsb
push
fisttpl
push
ror
bswap
repnz
jecxz
jae
loopne
mov
frstor
sarb
cmp
out
and
bound
sub
or
sarl
sub
pop
mov
sbb
pop
jmp
mov
arpl
pushf
test
jge
mov
push
call
fwait
jo
mov
in
push
inc
xchg
shlb
push
jmp
arpl
mov
push
mov
push
shll
cltd
push
scas
jecxz
cs
jb
sub
pop
aad
jb
imul
test
jl
int3
add
lods
es
je
test
push
sarb
lock
test
mov
adc
and
loop
lahf
shl
lods
mov
mov
jle
stos
and
dec
aam
sub
call
push
jl
mov
xor
cwtl
sub
lret
push
clc
xor
pusha
jae
mov
push
mov
add
pop
test
fldcw
nop
in
mov
xchg
ret
int
adc
enter
sbb
sbb
dec
mov
mov
insb
fs
cmpsb
lret
aaa
inc
test
insl
js
fwait
ret
inc
repnz
stc
cmpsl
cmp
pushf
cmp
lock
jnp
lock
adc
inc
jmp
in
mov
pusha
ret
mov
xchg
mov
jge
jns
arpl
dec
sbb
notl
cmp
or
scas
lcall
jmp
xchg
jae
or
push
xor
test
cmp
ss
mov
xchg
loop
scas
fs
cs
inc
mov
pop
rcl
adc
stos
insl
out
std
lds
jl
and
mov
cli
pop
push
push
and
insb
aaa
addr16
jle
and
xor
dec
and
scas
or
faddl
pushf
pushf
ja
imul
fistpll
jp
push
stos
dec
jp
lret
mov
sbb
mov
call
push
out
mov
aas
stos
mov
xchg
outsb
shlb
jecxz
pop
push
aam
sub
test
sub
mov
xor
pushf
xchg
loop
or
lods
lahf
es
push
jno
inc
call
push
insl
test
xor
scas
inc
rcll
mov
push
pop
roll
aad
or
dec
sbb
popf
fists
rorl
cmpsl
adc
cmp
insl
movl
lret
inc
mov
sbb
add
push
jns
pop
dec
or
mov
add
sub
cmp
adc
lahf
push
sub
mov
dec
mov
int3
add
mov
push
mov
lods
sbb
jl
mov
cltd
or
mov
or
xor
je
loope
out
sbbl
cmc
jns
das
push
xchg
sbb
inc
lods
mov
mov
call
sub
cli
push
int3
les
xchg
cmp
xlat
add
push
dec
les
data16
fistl
mov
adc
adc
test
add
outsl
andl
dec
loopne
pop
aaa
xor
lret
out
sbb
mov
flds
insl
xchg
add
shlb
jns
scas
popf
shrl
inc
mov
xrelease
rorl
add
xor
cli
stc
xchg
xlat
push
ret
sub
sbb
cmp
mov
js
xor
dec
test
loop
rorl
shrl
repnz
xor
cmc
imul
xchg
cmpsb
pushf
adc
jnp
mov
cmp
mov
loopne
rorl
pop
ret
inc
add
shlb
divl
dec
icebp
dec
ret
inc
lret
jmp
adc
arpl
ret
in
cmp
cmp
in
cmp
jle
fnstsw
jecxz
loope
aad
jl
vprolvd
pop
pop
adc
jb
mov
xchg
mov
sbbb
jns
xor
sbb
aam
push
fisubl
sbb
out
dec
imul
inc
enter
pop
in
hlt
std
in
sub
xchg
rcll
sub
arpl
imul
push
sub
cmpsb
movsb
mov
pop
lcall
jl
sub
cmp
cmp
push
sti
xor
adc
test
adc
dec
lcall
inc
ret
inc
inc
aaa
sub
push
xor
cmp
nop
sbb
jmp
rorb
dec
adc
xchg
and
adc
arpl
push
pushf
xchg
add
jg
insb
fsubrl
aam
jg
sbb
inc
adc
inc
mov
inc
in
arpl
jg
fucomp
and
push
mov
outsl
sub
and
push
dec
push
mov
fistps
xchg
testb
push
orl
js
ficomps
push
inc
pop
int
ja
cmp
pop
pop
mov
nop
imul
sbb
mov
bound
xchg
dec
repz
pushf
adc
jmp
cld
cmp
outsb
pop
pushf
scas
push
ret
jmp
gs
or
subl
or
ficoms
xlat
add
or
fdivrp
cmp
add
xchg
andb
and
xor
mov
mov
mov
cmp
shll
repnz
jno
sub
or
push
pusha
inc
jle
cmp
addl
fiadds
xchg
call
jmp
jne
movsb
add
push
aaa
pop
out
add
arpl
sbb
sub
add
pop
or
cmp
lds
call
subb
cli
bound
fdivrs
aad
and
mov
test
lcall
push
add
in
lahf
out
in
aam
inc
test
jge
aaa
pop
push
aam
js
imul
sub
es
or
mov
je
xor
push
sub
sarb
mov
xchg
rcrl
sub
movsb
add
stos
aam
adc
and
mov
inc
mov
push
mov
shll
pop
push
bound
outsl
inc
ret
dec
add
mov
je
leave
jge
push
aam
ja
push
aaa
fwait
shrb
sbb
data16
lret
jno
adc
or
dec
outsl
mov
enter
jo
or
dec
pop
movsb
sbb
in
and
mov
ss
lret
add
nop
inc
add
mov
jp
inc
mov
cwtl
xchg
jl
pusha
scas
add
js
shrl
shr
mov
add
das
inc
jb
sub
push
jno
ljmp
and
push
xchg
jae
aad
cmp
mov
dec
in
test
push
cmp
aas
jae
adc
xor
out
decb
mov
out
add
lret
insl
mov
testb
iret
push
decl
mov
xchg
iret
lea
leave
adc
xchg
test
adc
and
lcall
decl
lods
sbb
aaa
das
inc
mov
loopne
aaa
xchg
push
xor
fldt
dec
adc
xor
mov
dec
pop
inc
mov
add
push
xor
sub
ljmp
mov
inc
fistl
dec
cmp
xor
pop
sub
sbb
push
mov
lahf
call
pop
jle
mov
xchg
sbb
add
decb
cwtl
adc
xchg
jo
cmp
pop
lcall
cmpsb
and
sbbl
shl
sub
imul
leave
ss
xchg
jnp
mov
rcrl
dec
call
jae
mov
std
les
int3
ja
loope
test
loop
js
xchg
outsl
pusha
jnp
pop
add
add
popa
notl
jae
pop
lcall
xchg
mov
inc
add
cmpsl
xchg
xchg
lods
mov
outsb
push
xor
push
mov
repz
inc
fldenv
add
inc
lret
ret
xchg
icebp
mov
mov
jo,pt
cltd
xchg
jle
sub
inc
mov
shlb
into
add
hlt
popf
insl
mov
lods
out
shrb
aaa
inc
fwait
out
adc
data16
cmp
and
pop
add
fisttpl
dec
loop
in
push
xchg
sbb
imul
push
cmc
or
mov
or
imul
rclb
nop
mov
sahf
fs
outsl
mov
sbb
imul
mov
jg
or
push
xchg
arpl
dec
inc
and
sbb
fdivl
push
or
shll
es
sbb
rcrb
lods
add
adc
shlb
out
outsl
sub
cltd
stc
jg
enter
movsl
add
pop
sub
pop
aaa
les
pop
cmpsl
jge
int
int
pop
sub
dec
sbb
cltd
lea
in
pop
pop
movsb
inc
jmp
push
cmp
dec
enter
jnp
es
dec
js
lret
mov
fimuls
fstps
fistpll
mov
movsb
cli
cmpl
sbb
mov
call
inc
add
fwait
into
push
cmpsb
in
mov
mov
mov
mov
pop
inc
inc
jecxz
jne
dec
inc
xor
ss
ljmp
mov
mov
or
pusha
ficoml
sbb
xchg
sbb
cltd
movsl
fwait
and
addb
rcrb
adc
jne
ret
push
cmpsb
cmpsb
jg
mov
jecxz
repnz
xchg
mov
mov
and
xchg
lret
pop
push
xadd
push
pop
pop
lea
jns
cmc
jmp
or
xor
mov
xchg
sub
xor
push
andps
sbb
pop
cwtl
test
and
jecxz
std
mov
orl
shlb
js
gs
mov
insb
or
xchg
mov
add
adc
es
pop
rorl
mov
out
cwtl
stc
mov
add
adc
fsubrl
fmuls
adc
inc
mov
add
mov
xchg
or
pusha
jmp
negl
xor
scas
jp
das
jbe
popf
pop
xchg
inc
push
aad
cld
fildl
lock
dec
fsubrs
adc
imul
add
xor
jl
je
mov
js
or
in
cmc
cmp
mov
inc
scas
nop
cmp
in
mov
out
sbb
mov
push
lods
out
and
push
mov
pop
out
rclb
sarb
es
movsl
sub
pusha
pop
sarb
jge
mov
or
cwtl
and
dec
popf
dec
loopne
mov
popf
sub
inc
push
dec
mov
lods
adc
lret
lds
xor
icebp
cmp
cmp
and
pop
adc
mov
loopne
jg
bound
repnz
pop
and
add
jge
xchg
rorb
je
aad
or
mov
leave
adc
das
sbb
or
sahf
fnstcw
push
shll
sub
add
jg
das
lret
test
idivb
outsb
pop
push
fdivs
shrb
fcmovbe
mov
push
cmp
sbb
adc
outsb
jne
loope
mov
adc
popf
out
pop
lahf
add
out
testl
and
imul
andl
sbb
fstpt
push
outsb
xchg
jp
repz
dec
int3
inc
mov
push
je
aam
lods
xchg
adc
xor
ja
leave
pop
sub
pop
mov
stos
movsb
adc
adc
dec
mov
fsts
push
ljmp
imul
cmc
push
mov
dec
push
mov
pushl
and
push
pop
jmp
inc
mov
and
inc
adcb
pop
fmull
xchg
xchg
xor
inc
xor
jle
push
adc
xchg
mov
and
jl
jno
cwtl
adc
call
test
cmp
roll
add
jnp
lea
repz
rclb
fwait
inc
out
shlb
out
pusha
inc
and
mov
cs
addr16
fs
push
fcmove
lret
or
lcall
xor
incb
sbb
fwait
sbb
cmp
rcrl
and
xchg
sbb
leave
sbb
and
cmpsb
loope
call
sbb
jae
mov
test
ret
in
jmp
les
out
or
mov
jle
pusha
pop
jge
dec
cs
es
subb
mov
mov
sbb
add
fsubrs
test
lret
jecxz
stc
push
lahf
jge
xor
and
das
dec
fistl
mov
xchg
loopne
rorl
or
test
movsb
dec
xlat
adc
or
scas
js
adc
fwait
cmp
mov
mov
mov
fcmove
notb
cmp
ds
fisubl
pop
mov
mov
cs
test
sahf
out
mov
cmp
mov
inc
pop
aas
into
sarl
xorl
sarb
add
jno
ret
pop
mov
arpl
pop
das
inc
call
inc
xlat
out
or
xlat
aad
pop
test
pop
push
fildl
mov
or
inc
jecxz
shll
cmc
cmp
pushf
stos
jb
pop
leave
xor
push
pop
in
fldcw
xor
xor
xchg
or
mov
xchg
lret
out
jle
adc
stc
sbb
out
lea
out
testl
jecxz
cmpsl
jg
mov
std
std
addr16
cmpsb
ficoms
aas
and
fidivrs
sub
cmpsb
xor
mov
je
movsl
mov
jne
sbb
orl
xchg
dec
add
loop
xor
xchg
shll
add
mov
cmpl
sub
mov
orb
jecxz
cmp
into
dec
cld
popa
jge
mov
mov
or
cld
xchg
push
cwtl
mov
mov
jmp
and
cmc
or
frstor
iret
mov
sub
clc
adc
loopne
pusha
and
mov
scas
enter
iret
ret
xchg
test
cmp
mov
xchg
push
ss
cmp
in
aad
sub
mov
mov
ficomps
inc
xchg
outsb
daa
mov
popf
adc
ja
or
movsl
mov
adc
cmc
clc
pusha
ret
pushf
and
ljmp
pop
push
test
add
push
inc
enter
add
rorb
popf
shr
clc
pop
xor
jae
stos
test
mov
leave
int3
std
daa
inc
pop
mov
cmp
aaa
lahf
dec
mov
push
pop
pop
mov
ljmp
or
bound
jge
inc
sub
sub
in
pop
mov
xor
in
jg
mov
add
test
popa
pop
mov
dec
dec
sub
pop
adc
popf
dec
fisttpll
xchg
inc
sti
into
pusha
test
adc
jae
insl
repz
or
insl
imul
inc
mov
mov
xchg
inc
mov
add
sbb
xchg
mov
sbb
mov
sbb
pushl
lods
sar
addr16
xchg
cmp
pushf
mov
dec
mov
cmpsl
repz
outsl
mov
and
cwtl
out
stos
mov
mov
jle
adc
cld
mov
cmp
ja
imul
sub
stc
inc
enter
xchg
cmp
jo
jg,pt
lcall
sub
les
ficompl
cmpsl
mov
jns
pop
adc
lcall
mov
insb
mov
dec
mov
daa
mov
loope
enter
cmpsb
test
fdiv
add
and
xor
xorb
cld
gs
adc
subl
xchg
ficoms
imull
jb
pop
insl
push
mov
mov
movsb
lcall
insl
sub
pusha
push
clc
cwtl
adc
mov
inc
mov
psadbw
aas
pop
mov
or
mov
or
hlt
mov
in
cmc
mov
stos
inc
mov
dec
and
or
sbb
jge
rorl
imul
or
cli
cltd
push
ret
dec
lcall
sub
fdivr
icebp
pop
aas
cmp
cmpsl
cmpsl
xchg
std
ret
cli
rclb
int3
test
sahf
movb
mov
cs
stos
pop
arpl
inc
sub
shl
div
mov
stos
sub
xor
adc
into
ljmp
sub
adc
cltd
loopne
mov
sbb
jg
mov
mov
shll
cltd
fstl
mov
adc
shll
popl
test
fcompl
push
sub
lea
jecxz
adc
outsl
fdiv
mov
sub
lods
pop
jg
xchg
adc
sub
jmp
add
and
popf
mov
and
stc
imulb
mov
imul
jle
xchg
mov
mov
popa
pushf
sete
fwait
add
mov
fistpl
andl
cmpsb
and
fcmove
cmpsl
adc
dec
outsl
mov
cmc
outsb
loopne
xchg
xorl
xor
shrl
in
adc
jno
popa
add
jle
and
test
inc
js
aas
or
into
mov
mov
mov
pusha
mov
mov
in
adcb
mov
sbb
das
dec
jle
pop
add
adc
mov
and
mov
fwait
cmp
cmpsl
lret
call
fistps
stos
push
popf
pop
or
sub
out
cwtl
shrl
inc
push
cmpsb
inc
cli
test
mov
pop
and
cmpsl
sub
dec
mov
sbb
sbb
lods
mov
xchg
and
adc
mov
cld
shlb
pop
xchg
cmp
lret
aam
and
jae
add
ja
mov
loop
imul
popf
push
push
iret
inc
push
xor
jge
adc
sbb
fcom
mov
jnp
adc
inc
push
cmpsl
clc
pop
mov
mov
pop
arpl
pusha
inc
int
ret
push
and
and
testl
sbb
test
call
xchg
imul
jmp
movsb
add
lret
fadds
jmp
mov
xor
bound
mov
inc
test
call
sub
mov
pop
cmp
loopne
cmp
test
or
sar
sub
nop
cmpsl
shlb
jge
lods
dec
cltd
pop
not
ljmp
push
mov
lahf
scas
std
sub
xchg
in
testb
pop
mov
in
pop
insb
push
int
stos
adc
popa
je
repz
mov
push
test
aas
arpl
sub
ljmp
mov
and
cld
or
xchg
inc
outsl
out
pop
mov
les
data16
imul
cwtl
fdivl
shlb
adc
in
xchg
add
icebp
les
and
dec
push
aaa
call
pop
cli
mov
enter
adcb
jae
imul
rol
rol
pop
call
xor
pop
sub
jecxz
dec
jecxz
je
addb
xchg
dec
inc
shll
xor
pop
fwait
mov
inc
adc
jns
jne
pusha
sub
pushf
add
in
xlat
sub
xchg
jmp
repz
xchg
lcall
add
and
adc
xchg
inc
orb
loopne
es
leave
adc
mov
mov
in
pop
imul
decb
ret
out
push
out
rcrb
fldt
jo
scas
fdivrl
push
sub
cld
dec
or
pop
inc
pop
gs
xchg
dec
sahf
pop
imul
push
test
movsb
movl
xor
jbe
xchg
cmpsb
jae
dec
jg
cli
cmp
dec
add
push
or
inc
pop
cmp
or
cwtl
dec
je
push
repnz
das
cltd
cmp
push
inc
dec
push
sahf
mov
mov
rol
aas
insb
jno
shlb
mov
in
lahf
ss
sarl
or
ret
cmc
dec
mov
scas
outsb
jne
inc
loop
push
insb
or
fwait
push
xchg
mov
or
mov
dec
aad
insb
test
xor
inc
hlt
jae
cmp
xchg
and
jg
pop
or
xchg
jnp
scas
icebp
adc
and
pusha
popf
adc
ror
pushf
les
sbb
pop
mov
and
jo
and
sahf
sub
inc
lret
xchg
out
cmpsb
inc
mov
outsl
movsl
arpl
cmp
lret
pop
xchg
loop
jecxz
xor
push
add
mov
es
mov
lds
xor
cmpsl
push
std
push
add
cmp
cmpsl
xor
mov
adc
push
jae
stos
mov
mov
pause
int3
gs
js
pop
push
and
sbb
mov
mov
xor
jmp
enter
test
or
test
outsb
outsl
xchg
fbld
idivl
insb
cmp
lods
dec
loope
mov
imul
xor
add
or
pop
sub
imul
inc
cmpsl
inc
mov
test
push
mov
cmp
cmp
scas
mov
nop
pop
fs
out
sub
notl
inc
cmp
in
lods
pushf
jnp
mov
lods
jg
int3
lods
xchg
xchg
shl
arpl
xchg
pop
mov
mov
adc
sbb
adc
jge
mov
out
mov
into
movsb
sti
mov
into
mov
cmp
mov
add
push
negb
add
imul
mov
or
and
pop
ret
stc
jp
pop
or
out
and
xchg
inc
cmp
cmp
sub
imul
xchg
addr16
lahf
xor
sbb
mull
push
mov
mov
xchg
rep
sub
and
stos
and
xchg
sti
lods
rclb
ds
adc
nop
and
mov
mov
xor
lods
rol
mov
adc
cmc
insb
xchg
xlat
shll
stos
mov
adc
lea
mov
lea
addr16
sub
int
lahf
fnstsw
push
shll
and
xchg
push
icebp
sbb
sub
adc
push
out
aam
mov
ss
insb
out
push
pushf
addb
cmp
data16
jnp
out
std
adc
outsl
add
push
cmc
test
mov
mov
sub
scas
popf
in
and
dec
sahf
ret
inc
jb
repnz
pop
icebp
pushf
nop
test
in
sbb
add
fists
pop
jl
sbb
daa
dec
mov
sbb
lods
enter
push
decl
ret
scas
loop
jp
cwtl
ja
movsb
iret
into
test
sub
add
ljmp
and
dec
icebp
leave
xchg
inc
sub
lcall
data16
lret
arpl
cwtl
enter
jnp
ss
xchg
cmp
imul
repnz
cmp
lahf
es
stos
lods
aaa
addr16
push
adc
lds
xchg
dec
mov
scas
cltd
dec
jp
aas
outsl
jmp
outsl
adc
testl
mov
mov
lock
out
mov
xchg
push
push
sub
mov
pop
and
fildl
in
repz
rcll
xchg
and
pop
pop
lds
cmp
sub
mov
jo
ss
ret
popf
scas
enter
pop
mov
sarb
insb
xchg
dec
xor
filds
pop
es
xchg
fcoms
mov
xor
cmp
fs
inc
lahf
aas
sbb
xchg
mov
test
mov
sbb
push
push
insl
push
dec
je
and
push
add
aam
ja
fidivrl
in
aam
cmp
xlat
or
adc
sbb
pop
fstpl
pop
add
jnp
enter
test
cmpsb
aad
sahf
cli
fs
cmpsb
mov
lods
int3
stos
fdivrs
sub
andb
lods
shlb
and
dec
jge
add
inc
xchg
mov
popf
sbb
ficoml
inc
push
push
jo
push
scas
bound
sub
int
adc
and
push
imul
lods
hlt
loopne
lret
add
inc
es
icebp
xchg
sarl
pop
lds
xchg
push
iret
xchg
xor
mov
andl
test
sbb
or
aad
cmp
push
mov
popa
pop
mov
sbb
stos
test
push
inc
xor
stos
fiaddl
mov
shlb
pop
adc
add
movsl
add
and
out
push
and
imul
orl
sbbl
xchg
and
pop
lahf
adc
lcall
movsl
sahf
lds
lds
xchg
pop
adc
pusha
and
xchg
pop
inc
lods
lret
shrb
cmp
xchg
jmp
cmp
xchg
ficomps
mov
add
mov
adc
in
clc
mov
mov
fistpl
js
jecxz
ror
test
std
pop
xor
movsb
adc
and
repz
xor
jae
push
xor
inc
aaa
and
rcll
sub
out
xchg
pop
or
dec
inc
fdivl
ret
shll
sbb
jl
mov
push
push
out
jb
pop
mov
mov
loop
or
mov
add
lea
repnz
ret
cmc
xchg
or
rol
jo
mov
mov
test
test
pop
in
dec
push
adc
adc
shll
fisttpll
and
and
dec
jmp
data16
leave
push
out
cmpsb
or
pop
popl
aas
fwait
sbb
sub
push
shrb
xor
push
filds
fcoms
scas
jo
subl
or
inc
or
stc
sub
or
insb
cli
xchg
dec
and
dec
mov
jecxz
loopne
out
sub
sbb
cmp
ss
ret
sti
out
insl
jle
jb
adcb
push
add
test
push
call
mov
mov
imul
add
shrb
cmp
fwait
sub
scas
or
fucomip
jns
or
fstpl
jne
leave
shll
xchg
xchg
neg
pop
sub
fucomi
xchg
cmp
jp
xchg
push
addr16
jg
ret
inc
jecxz
or
daa
imul
inc
pop
push
xor
rclb
sbb
and
cmp
js
imul
fwait
cmc
imul
test
enter
outsb
sbb
cmpl
imul
dec
jp
out
imul
sbb
mov
cmp
outsl
out
andl
lds
pushf
sbb
sar
add
fsubrs
sub
cmc
stc
sub
lea
dec
or
xor
xchg
subl
ja
inc
fnstsw
mov
adc
adc
push
stos
sub
jnp
shr
rcrb
inc
test
mov
dec
stos
mov
mov
int3
ret
les
pop
stc
aaa
push
aas
and
pop
inc
pusha
out
or
call
push
sti
jne
and
test
in
popf
hlt
cmpsl
or
stos
cli
cmp
pop
imul
pop
addl
hlt
test
mov
sbb
cltd
and
roll
pop
push
stos
mov
dec
mov
or
scas
and
xchg
incb
xor
jg
stc
cmp
mov
inc
jmpw
add
mov
xor
test
addr16
movsl
or
jmp
insl
mov
iret
or
movsb
daa
int3
mov
cli
and
pop
subb
mov
lods
std
fnstsw
int3
icebp
xor
pushf
dec
cltd
xchg
push
sbb
jge
pop
adc
outsb
hlt
dec
mov
pop
jbe
inc
jp
inc
sbb
pushf
add
xor
sub
inc
iret
iret
mov
imul
add
out
inc
hlt
adc
addr16
xchg
jo
mov
enter
cli
jb
sbb
and
imul
loop
mov
pop
jl
inc
inc
and
jmp
cmc
pop
or
fisttps
sbb
sub
push
push
or
loopne
sbb
bsr
fbstp
lahf
adc
enterw
dec
adc
adc
outsl
inc
add
aad
mov
pushf
inc
scas
add
enter
ud0
adc
mov
jge
loope
pop
and
lods
xor
inc
mulb
dec
cs
lahf
loop
mov
inc
addr16
and
pop
mov
pop
cmc
adc
xor
sahf
lret
push
imul
sbbl
iret
pop
inc
lea
jne
loope
sub
mov
mov
lock
stos
sbb
push
mov
sub
dec
repz
xchg
cmpsb
filds
mov
mov
sbb
movsb
xchg
mov
xor
stos
mov
add
inc
fs
xchg
sbb
xchg
and
mov
adc
movsl
push
popf
sarl
in
inc
xchg
mov
cmp
data16
mov
dec
or
int3
adc
push
ss
mov
or
imul
cmp
sbb
sti
jne
sub
mov
dec
xor
fldenv
nop
cli
dec
xor
enter
inc
mov
outsb
push
sub
mov
mov
lcall
push
cmpsb
lcall
add
and
cmp
or
inc
and
scas
in
and
movsb
les
xor
xchg
push
mov
add
jb
enter
loope
pop
cmpsl
or
sarb
adcb
inc
sub
cmp
call
mov
push
lods
jo
out
mov
inc
rcr
mov
test
inc
and
sub
add
cs
add
dec
inc
je
pusha
mov
leave
ljmp
fnstenv
mov
in
inc
mov
jo
stc
inc
dec
inc
cld
aam
xchg
push
push
mov
pop
sub
adc
jne
add
adc
jae
push
pop
cmpsl
aad
xor
cwtl
mov
mull
push
fpatan
or
jecxz
cs
ja
pop
xchg
inc
call
aas
mov
leave
leave
mov
int3
rorl
mov
jmp
call
push
push
xchg
fidivl
call
inc
scas
in
push
in
xchg
lahf
xlat
jb
jmp
push
sub
xor
es
cmp
test
pop
stc
xchg
push
popf
xchg
cli
push
mov
cltd
or
pop
cwtl
jae
aam
push
sub
lret
mov
push
push
add
sub
mov
int
testl
test
daa
sub
ret
ss
or
testl
shrl
jae
repnz
cmpsl
jmp
xchg
mov
mov
jbe
into
mov
rclb
push
or
loope
sbb
std
add
insb
mov
adc
cmp
inc
adc
enter
in
jg
jp
push
popa
sub
sub
pop
daa
dec
jmp
enter
das
mov
mov
cmc
pop
and
out
jle
vcvtss2sd
add
popa
sbb
sub
mov
scas
out
int3
jnp
adc
pop
in
leave
inc
dec
xchg
jmp
test
sbb
or
mov
dec
rorb
cmp
sub
xchg
push
cltd
int3
mov
aam
dec
add
mov
lea
and
jbe
push
xchg
subb
fdivrs
pop
push
or
mov
movsb
xchg
push
and
data16
xchg
ret
hlt
xchg
pop
push
mov
inc
aad
and
js
lds
addb
xchg
sub
dec
daa
loopne
inc
fistpll
cmp
das
jno
pop
pop
pop
and
mov
mov
repnz
hlt
fidivs
xchg
sbb
push
inc
lds
and
xor
inc
nop
push
rorl
mov
pop
and
mov
fwait
stos
sbb
inc
fsubl
jae
sti
mov
push
push
jg
bound
xchg
push
sar
movsl
enter
sub
packssdw
cmp
push
or
fstpl
icebp
test
sti
add
daa
or
scas
sahf
sbb
dec
movsl
icebp
jmp
and
cwtl
repnz
jbe
cmp
outsb
pop
pop
out
xchg
mov
mov
sbb
ss
ret
jae
cmpsl
mov
jbe
inc
jne
sti
lods
and
repnz
dec
gs
in
fisttpll
pop
push
mov
jle
cltd
add
loopw
mov
add
in
dec
xor
scas
push
or
fsin
pop
inc
shl
xor
jbe
jecxz
mov
push
xor
repnz
add
es
or
ss
inc
sbb
xchg
pop
adc
ret
in
sbb
push
cli
mov
ffreep
fistpll
sbb
leave
insb
shlb
mov
mov
iret
insl
repnz
sbbl
insb
xor
js
cwtl
push
in
adcl
loopne
sub
sbb
mov
sbbb
lea
cmp
sub
add
push
out
fnsetpm(287
jge
daa
mov
imul
lret
cmpsl
mov
xchg
aad
jno
fdivs
lods
shll
sarb
sub
mov
dec
inc
cmp
frstor
mov
push
dec
or
mov
jb
mov
xchg
lods
repz
pop
in
out
sub
nop
jnp
push
push
jg
push
push
jnp
in
mov
out
pop
xor
popf
cmpl
aad
add
into
add
repz
aad
mov
mov
gs
mov
testb
insb
jle
mov
imul
out
test
mov
loope
adc
lods
cmp
jns
push
dec
rorb
stos
cltd
push
mov
es
cmp
pop
xor
insl
mov
pop
insb
mov
adc
lock
xor
lcall
push
dec
and
jmp
insb
adc
pop
pushf
movsl
ja
subb
mov
sub
adc
rolb
mov
jbe
lcall
clc
int3
sub
jnp
test
dec
adc
sbb
sarl
xchg
imull
push
xor
lea
imul
test
push
mov
xor
inc
dec
mov
inc
jecxz
mov
adc
lock
aam
jmp
pop
lea
arpl
mov
add
mov
pop
inc
push
cli
xchg
cs
xchg
shrl
lcall
repnz
push
push
jb
shrl
loop
rcrb
mov
daa
out
das
stc
fistl
arpl
mov
inc
repz
or
sbbb
imul
bound
sbb
mov
div
movsb
orb
pop
and
cld
inc
cwtl
pop
push
mov
leave
lahf
fcompl
aas
and
push
adc
inc
pop
pop
lea
test
adc
lret
cwtl
mov
push
gs
push
pop
repz
insb
dec
and
push
mov
sahf
je
scas
cmp
cwtl
call
pushf
sub
adc
in
in
int
mov
sbb
sbb
xchg
and
mov
mov
cmp
dec
xchg
and
call
movsb
fwait
imulb
inc
push
jae
in
mov
sub
jne
aaa
js
scas
movsl
lds
cs
inc
or
xor
cld
in
mov
imul
cmc
enter
insb
pop
adc
aaa
jo
cmpsl
inc
ds
jae
ret
mov
lret
mov
and
stos
outsl
jle
add
loopne
je
mov
aas
dec
into
xacquire
mov
xor
mov
xor
out
lea
mov
dec
or
cmpsb
mov
inc
jne
mov
xlat
scas
ss
mov
sub
loopne
in
stc
xorl
jecxz
mov
addr16
cmc
ret
js
jns
js
inc
je
icebp
adc
jnp
push
cmp
jae
inc
jne
xchg
mov
xchg
mov
ret
cmp
pop
cld
xlat
adc
out
cmp
xchg
cmc
ljmp
pop
es
xchg
pushf
jne
inc
lret
cs
and
scas
out
and
filds
mov
dec
call
es
pop
dec
orl
mov
rcl
rcrb
adc
fdiv
sarw
repnz
mov
or
cmp
rcrb
pop
clc
cmp
pop
scas
sbb
ds
test
outsl
cwtl
xor
push
jg
lods
push
mov
sbbl
inc
test
rcll
cmp
or
jnp
mov
rcrb
lahf
mov
lret
xchg
addr16
jp
xlat
sahf
cli
cmp
cmp
pop
ljmp
and
or
xchg
xor
pop
mov
xchg
hlt
stos
xchg
lcall
jecxz
xor
pusha
xor
dec
lcall
imul
jo
data16
xor
sarl
push
mov
cmp
jge
dec
jb
xor
push
mov
jno
mov
fcmovne
in
mov
mov
out
pop
inc
lahf
jns
loopne
je
mov
pop
jo
cwtl
in
into
push
out
shlb
adc
aam
sub
jno
push
sub
scas
loope
lock
cs
push
mov
pop
call
movsb
lods
or
or
dec
gs
inc
ds
cmpb
outsl
data16
sbb
jp
lret
xor
out
aam
ret
cltd
push
call
mov
in
mov
loop
jbe
cld
loope
movsl
and
ljmp
or
lods
mov
push
pop
ss
push
jbe
popf
popf
jb
mov
shrl
cmp
mov
mov
cmpsb
add
roll
aad
insl
inc
outsb
movsl
or
fimuls
dec
mov
mov
jb
cmp
jo
mov
xor
or
sahf
xor
dec
and
into
xor
ss
jo
adc
ds
cmp
mov
mov
xchg
loope
rcrb
mov
outsl
pushf
into
cmp
in
lahf
lock
push
loop
popa
xorb
push
pop
stos
psraw
rcrb
mov
jecxz
mov
enter
or
fdivrl
adc
add
repz
pop
sbb
outsl
xor
sbb
mov
adc
lds
xchg
mov
jnp
outsl
xor
xchg
mov
iret
pop
aas
or
insb
je
cmp
ret
fcmovu
mov
repz
cmp
andl
jns
nop
insl
lods
add
mov
jns
pop
daa
or
push
lds
mov
pop
or
out
pushf
addl
inc
xchg
daa
sub
adc
pop
into
jne
mov
aam
push
sbb
imul
sahf
pop
xor
push
sbb
js
imul
xorb
push
ja
cmp
mov
dec
cmpsl
js
into
push
jp
loope
xchg
push
jp
loopne
stos
dec
fwait
cmc
es
sbb
pop
dec
std
cmpsb
jae
push
sarl
bound
or
lret
push
dec
rcrl
inc
mov
mov
scas
flds
movsl
lret
pop
xchg
fcoml
mov
fisubrs
sbb
je
out
xlat
shr
lahf
push
jle
sti
xor
mov
loope
stos
sbb
sti
rcrl
cwtl
mov
scas
loopne
or
shrb
inc
imul
xchg
daa
es
std
cld
or
or
sbb
cli
mov
sub
outsb
insl
sub
stos
arpl
rclb
jmp
mov
mov
ss
jmp
in
sub
xor
jb
data16
cmc
aaa
sarb
mov
sbb
mov
fstl
mov
xor
jae
sub
ja
xor
int3
test
cmc
dec
in
in
sub
out
jle
repnz
inc
lahf
or
sbb
lcall
in
subb
imull
jmp
or
pop
mov
or
mov
push
xchg
pop
out
pop
pop
icebp
inc
push
in
xchg
or
lea
dec
push
fisttpl
inc
inc
or
cmp
pop
push
outsl
int3
gs
mov
or
ret
pop
mov
gs
hlt
leave
push
or
push
jge
adc
test
in
cmp
repz
dec
movb
out
lret
out
xchg
xor
mov
mov
xchg
es
dec
lock
sarb
adc
jmp
lock
inc
dec
mov
inc
cmc
in
mov
sbb
add
test
sti
jne
nop
inc
mov
add
nop
mov
and
shlb
bound
mov
sbb
xor
adc
in
lcall
into
jo
out
dec
and
cmpb
dec
fimull
ret
or
aam
nop
stc
jb
jmp
arpl
lea
lods
ljmp
enter
fsts
lods
cmc
fwait
stos
clc
mov
stos
sbb
loopne
les
outsb
rcr
sbb
cld
cmpsb
push
ficompl
push
mov
sbb
in
mov
in
sub
lahf
testl
adc
hlt
inc
and
cltd
adc
mov
xchg
pop
aas
int3
xor
cmp
cwtl
add
pop
addr16
mov
mov
sbb
xor
lds
pusha
push
cwtl
or
dec
push
lds
ljmp
lods
or
push
mov
adc
inc
les
aad
xchg
jne
xor
test
push
es
fwait
cmpsb
pop
jns
inc
inc
mov
adc
gs
enter
pop
out
push
sub
push
imul
mov
outsl
pop
out
push
sub
fisubrs
sub
aad
lods
xor
mov
jns
pop
pop
jnp
mov
test
bound
ror
pop
push
jmp
mov
add
jl
arpl
inc
push
xchg
mov
adc
inc
aam
sbb
out
sbb
test
sbb
jo
ret
in
pop
sub
imul
xchg
push
push
cli
sub
mov
jg
mov
stos
cmpb
push
sbb
sti
insb
xor
rcl
sbb
loop
int
pop
aas
xchg
fnstcw
test
sahf
mov
sbb
test
pop
test
jmp
sbb
shlb
cmp
sbb
ret
jne
in
push
jmp
loope
adc
push
hlt
stos
stc
and
shll
mov
test
mov
jbe
js
scas
ja
and
lahf
sub
in
pusha
xor
sub
and
dec
iret
test
fists
push
popf
mov
xor
or
loopne
sub
sbb
or
mov
lret
pop
push
roll
cld
stos
push
in
jae
pop
mov
cld
jge
cmpsb
sti
sbb
jbe
cmp
push
arpl
pushf
xchg
imul
nop
and
lds
outsl
mov
popf
or
jecxz
mov
add
push
ja
fists
dec
mov
pop
push
xchg
jbe
mov
mov
xchg
insb
jnp
xchg
sahf
jle
sbb
enter
mov
mov
dec
mov
mov
push
mov
adc
lea
fcomp
cmpsb
arpl
fwait
xchg
push
movsl
add
sbb
sub
sub
adc
in
repnz
clc
xchg
data16
data16
loopne
jbe
int
pop
xchg
insb
test
mov
icebp
pop
jb
je
sbb
adc
in
mov
jge
inc
cmp
dec
push
repnz
sbb
add
xchg
inc
mov
out
scas
lahf
shrl
cmpsb
sub
mov
mov
ret
adc
shlb
ret
addr16
loope
scas
pop
or
push
dec
adc
popf
lea
cli
pop
ret
shlb
inc
mov
xor
add
stos
add
test
int
sbb
mov
sub
add
adc
add
mov
ret
push
ficoms
loop
fsub
xchg
and
gs
sub
sub
jg
fwait
imul
mov
and
popa
jg
pop
daa
push
negl
xor
mov
pop
cmp
popf
adc
xor
sub
shl
jnp
fstps
icebp
icebp
jp
push
jne
mov
mov
out
xchg
test
int3
cmpsl
outsl
jmp
mov
in
nop
out
sti
cld
add
xchg
and
inc
mov
inc
shrl
lret
xchg
sub
fcmove
inc
pop
cmpl
push
fwait
push
jns
lret
mov
xor
ljmp
outsl
xadd
adc
add
xchg
in
add
jbe
jle
adc
test
mov
add
gs
push
aam
pop
push
or
or
in
js
fwait
push
dec
negb
loope
push
flds
in
fwait
out
imul
pop
add
fwait
rcrl
lods
cmp
mov
iret
mov
imul
mov
pop
sbb
andw
pop
aas
cmpsl
les
imul
out
mov
cmp
push
mov
fsubrs
adc
stc
dec
inc
sti
inc
test
mov
pop
xor
ljmp
repnz
add
lods
gs
imulb
rol
jbe
inc
mov
adc
int3
xchg
jg
mov
dec
dec
ss
jae
jno
dec
shrb
mov
leave
mov
or
dec
aas
out
nop
push
imul
mov
inc
loop
add
sub
test
ja
push
dec
sbb
mov
push
or
lods
insl
icebp
dec
mov
mov
pop
jge
in
nop
mov
adc
ret
add
aas
jno
pop
sbb
inc
mov
out
add
mov
lea
adc
shrb
out
sub
cmp
data16
rcl
inc
lea
sbb
push
add
subl
mov
sub
and
inc
nop
daa
xor
dec
push
jg
fwait
dec
fidivs
out
pusha
cwtl
popf
out
sbb
mov
sbb
pop
adc
sahf
negb
aaa
in
inc
sub
insb
mov
lret
or
outsl
or
xchg
aam
push
and
pusha
or
daa
adc
rcrl
mov
pusha
and
cmp
aad
cmp
sar
add
or
into
xlat
mov
adc
adc
sbb
add
icebp
sbb
hlt
inc
and
les
aas
pop
xchg
or
ljmp
cld
xchg
lahf
or
pop
pop
mov
xorb
lret
aam
enter
dec
scas
pop
out
lcall
cmp
push
xchg
daa
sahf
and
push
mov
lcall
jb
insl
sti
popf
lahf
xchg
jnp
loop
testl
sarl
movsb
ja
push
bnd
sarl
test
aaa
cmp
out
lds
inc
imul
push
ds
cli
fldenv
movsb
jno
add
pushf
ljmp
je
fdivrp
cmp
cmp
fnstenv
pop
loopne
mov
stc
or
mov
mov
push
or
inc
popa
or
bnd
dec
sub
cmp
push
push
cld
lcall
and
pushf
sbb
push
xlat
dec
rcl
mov
or
pop
lcall
andl
loop
sbb
frstor
mov
std
cld
pusha
dec
mov
sub
pop
imul
adc
lea
xchg
push
pushf
jns
sub
cltd
dec
mov
int3
pop
add
in
dec
stc
mov
sbb
jno
mov
dec
nop
out
inc
divl
in
mov
pop
dec
cld
lahf
adc
inc
dec
xor
cmp
cmp
dec
stos
pusha
ret
sub
cmp
or
ret
mov
ds
mov
lods
push
cmp
jle
sbb
and
popf
out
and
or
mov
lds
add
mov
xor
mov
fs
add
mov
cmp
es
adc
sbb
mov
cmc
shlb
jle
outsb
rsqrtps
data16
movsl
mov
sub
jp
and
cmpsl
cmp
fstl
jae
out
jge
cli
or
mov
add
jne
adc
popa
hlt
lods
jae
or
bound
in
stos
xchg
in
mov
int
mov
adc
and
sti
call
xchg
and
pop
stos
pop
int
sbb
jl
cmpsl
cmp
cmpsb
mov
push
sbb
add
sub
es
scas
mov
sub
call
lcall
repz
rcr
xchg
and
lea
fisttps
cmpb
rcrl
xchg
je
into
daa
pusha
inc
jmp
ja
jge
and
xor
adc
in
or
inc
movsb
jmp
pop
and
lods
xchg
and
sub
stc
ja
addr16
out
imul
mov
push
jl
ja
dec
push
mov
push
mov
fs
pop
repz
mov
sub
test
repnz
in
daa
inc
xchg
push
int
cmp
add
mov
jae
mov
fisttps
sbb
sbb
stos
lret
mov
sbb
fimuls
sub
outsl
dec
imul
addr16
fstps
stos
mov
insb
add
addl
push
dec
cmp
mov
or
add
xor
dec
inc
fnstenv
mov
test
adc
insl
add
jg
inc
nop
lods
imul
lods
icebp
xor
adc
sub
pop
cmp
ss
cmpsl
shl
sub
adc
addb
cmpb
les
pop
add
leave
int3
and
movsb
jns
sub
jmp
lods
pop
and
test
adc
gs
mov
flds
dec
sbb
xlat
scas
jne
jo
inc
pop
hlt
add
cmp
cmc
add
inc
sbb
je
cmp
cmpl
popa
xchg
aam
mov
aas
adc
xor
sahf
aam
lret
pop
jl
pop
dec
mov
mov
leave
loopne
lds
lcall
jo
orl
lock
les
xchg
je
mov
sarl
divb
mov
das
sbb
pop
daa
pop
test
mov
mov
push
es
jb
xchg
daa
repz
and
push
adc
imul
daa
or
jle
fsubl
stos
movsl
insl
add
xor
push
push
rorb
adc
in
pop
cli
movsb
sub
cmp
sub
mov
mov
xchg
test
movsl
int3
aaa
repz
sub
push
cmpl
ja
xchg
jg
push
ljmp
mov
xor
aam
lods
rcl
mov
mov
cmpsl
cmp
arpl
movsb
mov
inc
add
dec
pop
imul
cmp
sarb
or
and
sbb
adc
int3
loope
sbbl
sbb
xor
test
jb
mov
lea
das
loope
inc
xor
jge
outsb
mov
fdivr
push
adc
inc
shll
xchg
push
push
sbb
lret
scas
pop
std
int
add
rcll
popf
add
inc
and
mov
out
push
jle
sbbl
dec
imul
loopne
in
movsb
scas
sbb
push
stc
push
mov
or
adc
mov
add
push
lcall
mov
xchg
dec
hlt
sbb
inc
mov
and
out
add
pusha
mov
lret
imul
pop
aaa
mov
ror
xchg
sub
xor
repnz
fcmovnb
jg
inc
mov
test
repz
cmpsl
std
cmpsl
ss
lds
out
inc
int3
movsl
icebp
push
bound
or
in
clc
popa
sub
xlat
and
enter
sub
sbb
dec
xchg
testl
stos
jne
jne
sub
or
sbb
push
div
xchg
jmp
pop
int
in
mov
scas
cwtl
mov
cmp
lock
jo
push
push
popf
inc
fiadds
inc
dec
pop
fwait
outsl
sahf
sbb
xor
or
pop
jae
push
out
add
dec
dec
cld
jmp
cmp
fidivrs
add
iret
int3
pop
xchg
push
imul
cmp
icebp
stc
inc
inc
xchg
call
add
sub
sbb
imul
inc
mov
inc
incl
push
mov
iret
cmc
jg
icebp
pop
loopne
xor
out
add
repz
daa
sahf
xor
sar
jle
testl
jne
jl
inc
adc
insb
push
cmp
pop
push
mov
nop
xor
loop
xor
jns
xchg
mov
xor
gs
sbb
ljmp
xchg
mov
inc
scas
test
imul
pop
xchg
data16
gs
pop
mov
int3
pop
jmp
pop
test
mov
movsl
sub
mov
mov
out
pop
fucom
dec
sub
sub
fisubrs
push
loope
xlat
adc
pusha
jmp
push
lcall
sub
lock
jg
cltd
and
fimull
out
mov
loop
pop
das
cwtl
mov
ret
add
mov
and
into
ret
js
and
addr16
in
clc
iret
mov
mov
dec
jmp
mov
pusha
inc
xchg
aaa
cmp
outsl
pop
xchg
loop
xlat
jle
test
pop
cmp
mov
and
mov
test
scas
mov
pop
cld
je
jmp
in
sub
rclb
cmpsb
lods
dec
and
push
lcall
mov
les
leave
push
iret
insl
add
je
sbb
or
clc
push
push
mov
pop
dec
pop
cmp
push
aam
loop
pushf
push
repz
sbb
js
push
adc
cmp
gs
xor
mov
sarb
jo
fs
fistps
xorl
int3
mov
sub
cmpsl
inc
cmp
push
xchg
popa
rol
dec
stos
je
or
adcl
shll
pop
cld
and
idivl
mov
fimuls
xor
jl
pop
lahf
cmp
mov
cltd
subl
std
in
stos
les
push
sbb
fbstp
fs
repz
jl
mov
inc
movsb
push
pop
pop
out
mov
loop
lcall
mov
popf
rorb
pushf
leave
mov
lret
mov
sar
xchg
stc
add
pop
int3
testb
aas
mov
arpl
shrl
lods
xchg
sub
test
outsb
mov
mov
jno
push
ss
fcmovne
and
push
add
mov
jno
dec
loopne
popw
xchg
jmp
int
into
andl
bnd
jne
daa
int
jo
cmp
fdivs
orl
mov
jge
or
popa
jns
rclb
cs
loope
jg
ljmp
mov
aas
mov
inc
cmpsl
gs
mov
cmc
lock
clc
add
pop
lcall
mov
fldt
les
pushf
dec
mov
cmpsl
jb
xchg
stos
push
in
imul
ret
add
insl
jge
mov
inc
add
xor
inc
fwait
lret
aas
jno
add
xchg
xor
push
outsb
push
mov
mov
ja
mov
mov
cmp
jnp
adc
cmpsb
push
jae
imul
or
jne
xor
push
das
sbb
cmp
mov
xchg
jp
nop
test
jnp
sahf
push
shll
sub
and
jmp
mov
jl
cmp
scas
pop
pop
mov
pop
dec
in
cmp
xchg
iret
push
das
lods
mov
cmpb
repz
xor
aam
lock
adc
and
sti
push
mul
cwtl
cmp
push
or
jmp
lcall
mov
mov
xchg
xorl
xor
stos
psrld
dec
push
scas
adc
out
das
sarb
mov
in
icebp
dec
fisttpll
test
jecxz
cmp
lret
mov
aaa
xor
outsb
mov
pop
mov
enter
pop
negl
xor
in
icebp
mov
fstpt
dec
ficoml
cli
sbb
sbb
xchg
lahf
movsl
push
imul
imul
or
pop
sub
loopne
and
pop
movsl
add
or
in
jo
or
ljmp
arpl
scas
mov
fstl
jno
pop
je
flds
add
adc
mov
stos
in
xchg
repz
nop
xchg
mov
jae,pt
ret
mov
or
inc
fs
iret
mov
fstl
repnz
rcr
jmp
movsl
xchg
sti
xor
shl
pop
adc
dec
out
int3
xor
dec
push
lcall
lahf
imul
xlat
rcll
and
fistpl
aaa
xchg
loop
lahf
inc
adc
movsb
mulb
cmc
or
out
aas
aas
fnstenv
and
push
xchg
dec
cwtl
jb
push
pop
andl
mov
pop
out
adc
cwtl
cmp
out
mov
push
sub
mov
ds
bts
jns
std
lcall
outsl
add
int3
leave
dec
pop
cli
mov
leave
jecxz
inc
in
xchg
int3
loope
ljmp
lahf
jnp
test
push
sbb
mov
into
jnp
and
loope
push
cltd
cmp
ss
dec
fsubp
idivl
push
aaa
scas
xchg
dec
dec
xchg
pop
inc
je
pop
and
imul
mov
out
cmp
mov
or
fisttpll
lret
xchg
ja
lods
or
push
push
mov
xlat
dec
clc
jo
sub
mov
xor
and
pop
je
lea
mov
push
cmp
xor
out
leave
or
pusha
dec
jmp
push
jae
enter
orb
gs
loop
xor
lea
cmc
xor
mov
out
jb
cmp
out
in
dec
mov
push
jnp
xchg
nop
ficoms
adc
ja
lea
pop
cmpl
push
sub
pop
xlat
jbe
push
test
je
pop
jne
push
add
or
rorl
mov
shll
sub
fisttpll
lret
xor
jb
int3
pushf
movsl
and
cmpsb
aam
les
mov
or
dec
aaa
lods
mov
or
inc
aaa
lea
dec
pop
jno
fwait
sub
lds
repnz
adcl
test
call
js
ja
mov
decb
lahf
xchg
out
jmp
cmp
pop
inc
dec
hlt
jno
fistpl
popf
enter
lea
dec
push
push
cmp
dec
repz
jnp
cmpsb
movsb
jp
loope
fabs
repz
ss
cwtl
push
jns
jo
mov
outsl
outsl
jno
cwtl
push
pop
leave
mov
aaa
fwait
push
inc
inc
adc
mov
dec
dec
xor
test
aam
ret
adc
sub
lcall
imul
push
pushf
add
popf
add
insl
inc
sub
mov
call
out
fildll
in
sbb
sti
icebp
imul
xlat
push
mov
inc
repnz
fcoms
arpl
pop
mov
cmc
xor
loop
cmp
dec
in
gs
push
mov
xor
jl
jl
gs
pop
shlb
lret
jo
imul
inc
xchg
mov
mov
cwtl
cs
in
sbb
mov
les
addr16
push
mov
mov
cs
jg
sub
pusha
inc
jp
cs
or
fwait
repz
les
ret
leave
mov
testl
rorb
and
aaa
idiv
push
mov
mov
fsubrl
dec
add
outsb
arpl
call
jb
inc
add
push
mov
adc
mov
lcall
inc
dec
imul
adc
arpl
lock
scas
jle
jnp
push
lret
clc
arpl
jb
pop
mov
pushf
sub
bound
psrlq
push
mov
xor
xchg
lock
js
iret
out
pop
movl
mov
rolb
push
addl
icebp
dec
fsubrs
push
enter
nop
cmc
loopne
ret
push
cld
in
mov
es
cmp
xchg
out
fimull
xchg
sbb
lods
bound
mov
std
and
mov
shll
cltd
movsl
psubusb
mov
por
subb
pop
stos
or
dec
mov
xor
or
or
dec
sub
aas
push
lret
xchg
test
sbb
xchg
mov
shrb
and
or
sahf
sahf
and
sub
in
push
cmpsl
lahf
cmp
ficompl
mov
mov
xchg
gs
aam
addr16
mov
sub
push
push
jo
mov
int
int3
mov
loopne
fxam
fs
mov
incb
inc
xchg
adc
dec
lea
mov
inc
add
aas
mov
push
push
mov
inc
popa
sub
mov
mov
fildl
cmpb
pop
xor
in
aaa
xor
aad
scas
clc
leave
mov
jbe
jbe
mov
je
aaa
repz
neg
addr16
pop
mov
lahf
xor
cmpsl
xchg
adc
lahf
loopne
int
inc
mov
stos
sbb
imul
xchg
push
push
enter
aad
adc
popa
mov
gs
jl
icebp
jo
jl
repnz
or
mov
inc
mov
roll
out
sub
push
es
test
fs
pop
cmp
mov
cmpl
bswap
pop
xchg
fistpl
ja
or
jge
stos
idivb
aas
testl
je
and
or
push
repnz
xchg
jns
mov
mov
sub
pop
std
rcrb
mov
enter
aam
lahf
add
push
and
mov
jge
mov
bswap
pop
jb
movsb
les
incb
cwtl
push
dec
loop
ficomps
mov
lret
dec
jo
shr
gs
pop
fstpt
test
mov
add
pop
ss
nop
sub
lds
pop
pop
or
jmp
mov
das
pop
out
pop
in
xchg
sub
daa
inc
inc
sbb
dec
dec
mov
xor
inc
pusha
pusha
aad
int3
sbb
inc
in
dec
sub
mov
fistpll
mov
and
add
loopne
test
fadds
jecxz
adc
arpl
mov
inc
pop
mov
adc
dec
aam
add
hlt
aam
in
fs
pusha
jb
cltd
pop
and
arpl
or
jb
cmp
add
sbbb
mov
in
jb
sahf
call
in
loop
daa
shrb
js
push
xor
imul
ja
push
popf
inc
sbb
push
pop
daa
sti
add
les
je
push
negl
xlat
jp
mov
lods
cmp
fwait
mov
dec
xlat
outsb
addb
fs
je
xor
inc
rorb
xchg
xor
cmc
xchg
fildl
repnz
cmpsb
add
sbb
inc
mov
cmp
cli
xchg
cmpsb
aaa
sahf
repz
jnp
aad
push
jmp
or
in
test
dec
jo
or
rcrl
and
hlt
add
stc
jns
inc
sbb
xchg
and
sbb
into
mov
add
mov
ds
cmp
push
stos
adc
pop
divb
lahf
in
lret
sub
sub
adc
cmpsb
mov
mov
mov
xchg
pop
imul
push
int
fldcw
popa
in
add
add
xor
scas
sbb
xchg
aad
jg
lret
mov
pop
dec
xorl
jbe
lock
dec
jl
inc
adc
push
popf
xchg
pop
dec
cli
mov
in
roll
in
push
xchg
enter
push
lods
aaa
fistps
mov
pushf
subl
test
fnsave
jno
int3
xlat
xchg
or
sbb
outsl
cmp
xchg
xchg
sahf
add
leave
scas
jle
jg
mov
call
mov
leave
mov
pop
movsl
lea
mov
jp
push
inc
mov
xlat
push
xchg
sbb
and
in
scas
pop
je
sub
cmp
rorb
add
inc
daa
sub
pop
sub
mov
and
mov
cld
add
scas
adcb
cmp
popf
lock
jb
mov
aas
xlat
xchg
and
mov
jns
insl
notl
mov
adc
jp
es
mov
into
in
mov
lret
lods
dec
lret
mov
xchg
mov
out
add
ret
mov
xor
jo
sub
pop
sbb
les
adc
cli
repnz
xchg
dec
icebp
or
jo
es
out
int3
dec
cs
std
cmp
pop
pop
in
movsl
push
es
pop
ret
jbe
fsubs
repz
xor
lea
in
mov
lahf
mov
mov
xor
mov
xor
repz
sbb
test
bound
sahf
sbb
insl
cld
xor
test
pop
gs
pop
push
mov
js
cmc
push
and
repz
cmp
fs
mov
loopne
mov
subb
pop
aam
ja
xchg
mov
xchg
lds
jo
movsl
dec
in
ss
jne
orl
jb
movsl
add
jp
aad
or
popf
call
lret
mov
movsl
adcl
out
jbe
sbbl
stos
imul
mov
loope
stc
cwtl
sbb
pusha
mov
mov
push
push
xchg
push
aam
loopne
bound
cmpsl
frstor
rcll
push
cmpsb
xchg
mov
mov
xor
mov
out
mov
loop
xchg
cmp
movsl
popa
fsubrl
mov
insl
xor
popf
imul
out
stc
cmpb
xlat
test
scas
stc
sti
inc
pop
testl
pusha
push
add
mov
addr16
fnstsw
cmpsl
inc
mov
inc
dec
dec
mov
mov
js
stos
mov
or
jle
loop
andb
inc
mov
sub
loopne
fldenv
cld
pop
push
cli
imul
fcoms
pop
xor
lea
mov
adc
int
loopne
push
mov
push
icebp
shlb
fld
arpl
ja
cld
out
push
mul
sti
push
jns
mov
xor
pop
mov
xlat
push
into
insl
pop
mov
rolb
imul
fcomip
sbb
pop
and
std
sub
mov
pop
or
pop
fidivl
inc
jl
inc
jno
xchg
int3
call
mov
gs
leave
pushf
xchg
xor
sbb
dec
mov
xor
pop
jecxz
lock
push
cmp
dec
ficompl
xchg
lods
mov
mov
and
push
das
or
inc
or
or
mov
xchg
and
lretw
outsb
sbb
insb
loopne
dec
dec
sbb
inc
sbb
cmc
inc
bound
popa
jp
dec
movsl
inc
outsl
xchg
mov
sbb
xchg
sbb
jp
push
out
mov
push
in
lods
mov
lahf
test
add
jne
call
inc
fwait
xchg
jo
pop
data16
lret
clc
pop
lahf
cmc
insl
adc
sub
movsb
mov
cld
jp
sar
out
cmc
es
mov
xchg
fimull
lahf
scas
rcll
or
cmp
add
aad
mov
pop
adc
mov
stc
dec
rorl
dec
push
pop
dec
push
and
lea
sbb
popa
fstl
xor
jne
fidivs
sti
push
out
adc
cltd
adc
pusha
add
mov
jb
mov
scas
movsb
mov
out
sahf
adc
jno
jo
aaa
dec
in
test
push
inc
and
pop
jle
fidivrl
inc
or
jno
xchg
and
mov
pusha
insb
mov
aas
stc
rcrl
in
imul
jb
jl
dec
shl
out
jb
pop
xchg
jge
clc
add
js
cmp
int
testb
xchg
mov
pop
and
inc
and
jle
mov
push
scas
mov
mov
pop
add
push
or
mov
mov
lret
fs
lock
insl
push
out
xor
and
mov
jno
adc
xor
mov
dec
or
adc
inc
push
fs
or
hlt
adc
fwait
xlat
mov
loopne
out
loop
mov
fiadds
mov
push
adc
inc
push
shl
loop
xor
cmp
mov
ds
sbb
xchg
fdivs
fists
push
call
fisubrl
ficomps
xchg
sarb
inc
sub
sbb
push
cmp
pushf
dec
lods
mov
jns
jns
aaa
cld
stc
outsl
cmp
jne
cmp
fstpt
das
in
mov
out
sahf
jge
cmpsl
fldl
jmp
aas
xor
nop
mull
arpl
arpl
pop
push
cld
dec
arpl
adc
mov
scas
add
pushf
sub
mov
add
sar
or
cmp
xor
mov
insl
cmp
mov
push
aad
cli
pop
iret
loop
test
xchg
cmpxchg
inc
rorb
ret
xor
xchg
xchg
cmpl
fidivs
in
add
fldcw
mov
push
xor
sub
xchg
push
adc
out
and
mov
repnz
mov
js
sub
push
pushf
push
inc
push
pop
mov
imul
les
pop
mov
pushl
mov
out
bound
push
scas
gs
add
mul
pop
mul
dec
lds
mov
scas
sbb
cmp
xchg
cmc
xor
adc
and
daa
mov
mov
ss
pop
fisubl
fldcw
dec
xor
movsl
push
out
mov
aam
jle
les
popa
push
test
push
lds
pusha
les
mov
mov
sbb
cmp
sbb
enter
dec
jae
sbb
mov
xchg
lock
mov
mov
mov
pop
out
mov
push
dec
mov
cltd
nop
addb
jg
pop
and
pop
in
jo
sub
imul
ja
xor
pop
and
push
and
lea
rcrb
xlat
jge
or
in
imul
pop
out
cmpsb
lods
xor
dec
lcall
and
fsubrs
mov
dec
jns
ficoms
xor
iret
addr16
scas
arpl
stos
out
mov
sbb
jns
or
add
cmp
shll
jge
cs
out
pop
pop
je
lret
and
sbb
xor
incl
sub
mov
jae
out
scas
or
xor
sti
test
jp
sahf
pop
insb
xchg
aaa
rcll
mov
add
les
xchg
push
repz
fldcw
pop
push
sub
test
jge
test
jmp
push
iret
loop
sub
iret
cmp
sub
aaa
js
sbb
imul
into
lods
test
xorl
pop
ljmp
in
and
push
aam
add
jnp
repnz
icebp
lret
enter
cmp
loop
or
popf
fistpl
aas
pop
pop
add
cmc
lret
jo
subl
fimuls
in
sub
mov
xlat
mov
mov
or
push
cld
and
jno
lcall
pop
fldenv
enter
sub
int
pop
sti
mov
orl
testb
inc
jle
pop
ljmp
arpl
mov
xor
mov
cmp
push
xchg
sbb
jl
adc
pop
ss
in
sub
jg
leave
cwtl
pushf
mov
enter
and
dec
jl
aas
pop
jmp
add
xchg
jns
mov
mov
mov
add
inc
xchg
test
test
insb
scas
jg
inc
dec
sub
mov
sar
sbb
xchg
je
cmp
push
pusha
into
mov
fsubr
fs
and
daa
adc
cmp
mov
fcmovne
and
push
cmpsl
xor
adc
adc
insb
and
push
pop
xor
int
stos
inc
imul
out
jg
test
out
lahf
out
fdivrl
cmp
popa
xor
movsb
push
fcmovnu
hlt
mov
dec
cmp
loopne
add
mov
inc
popl
and
mov
push
lret
out
mov
sub
inc
mov
enter
jmp
mov
adc
shl
adc
lods
movsl
aam
test
inc
popa
dec
cmp
mov
iret
mov
push
sub
jecxz
pop
popa
leave
mov
adcb
jne
lahf
xchg
cmpl
cmp
je
in
sti
sub
lea
pusha
inc
mov
and
pop
out
out
mov
pop
sub
mov
push
xor
loopne
add
jo
int3
aas
xchg
sbb
iret
in
pop
cld
leave
jecxz
push
add
popa
imul
mov
push
rcrl
jmp
ss
add
shr
andb
adc
sub
in
test
and
int
notl
xchg
icebp
mov
repz
jno
mov
dec
fcomp
sbb
and
push
adc
mov
pop
faddl
loope
sbb
bound
jp
sbb
test
cs
xorl
fmull
jb
insb
dec
sahf
push
out
mov
std
cld
stc
enter
ret
ja
cmp
call
adc
lahf
fbld
add
ficoml
test
jbe
movsb
scas
sbb
iret
je
dec
leave
inc
sub
xor
sbb
and
add
jl
lea
push
add
dec
test
sbb
fildl
mov
xor
leave
shlb
int
in
and
in
dec
leave
xchg
cmp
into
and
mov
stos
inc
add
xchg
jmp
lea
pop
arpl
repnz
jmp
mov
xchg
xor
int
out
in
pop
loopne
test
sahf
cmpsb
mov
in
push
imul
xor
sti
cmc
dec
and
std
insl
dec
inc
aam
cltd
movsb
cli
out
mov
inc
add
aam
cmp
mov
sbb
fldcw
adc
outsl
push
pop
mov
in
hlt
sbb
loopne
ljmp
loope
test
dec
jbe
mov
ds
fmull
sub
ja
dec
pop
push
fsub
push
cmp
and
push
or
es
mov
repz
add
cmp
and
lds
sarb
xorb
xor
pushf
bound
ljmp
xchg
inc
add
cmp
xchg
mov
inc
cmp
mov
pop
lods
shrl
jne
push
jl
pop
mov
xchg
pop
jmp
mov
dec
int3
push
push
add
adc
push
add
fsubl
push
pop
xor
aas
scas
sbb
xor
mov
dec
scas
inc
das
add
hlt
and
pop
add
int
xor
les
push
fdivrs
cmp
xor
ljmp
lea
clc
xchg
lods
je
lret
ds
dec
scas
pop
movsl
repnz
imul
scas
int
jg
leave
mov
and
fistpll
push
in
and
test
negl
xor
sbb
jo
dec
push
jb
loopne
push
jle
inc
push
add
inc
adc
lods
mov
push
fsubl
push
outsl
imul
sbb
lds
sbb
ret
add
imul
popa
or
dec
stc
fisttpll
adc
push
jmp
inc
outsb
pop
pop
or
mov
repnz
sub
les
push
sbb
icebp
mov
jo
data16
rcl
push
out
into
ja
cltd
pop
mov
pop
cmp
pop
xchg
out
or
insb
cmc
fistl
movsb
jle
test
jg
rcrl
pop
inc
push
sbb
xchg
xor
jmp
adc
dec
in
test
cld
mov
testb
lahf
repnz
cs
cmp
lock
pop
xor
pop
es
fdivrl
loope
add
fmuls
outsl
mov
orb
shlb
aas
mov
arpl
dec
icebp
and
sub
call
pusha
lea
xor
pop
out
mov
mov
or
mov
xchg
mov
or
fnstenv
int3
std
push
mov
add
je
jnp
std
mov
sbb
xchg
inc
inc
or
daa
xlat
cmpsl
je
push
outsl
add
push
cmp
arpl
xorb
ljmp
mov
int
rcrb
movsb
or
call
mov
adc
repz
pop
cltd
jns
loope
add
incl
cmc
add
ljmp
mov
out
pop
pop
mov
dec
pop
lret
sahf
push
mov
inc
dec
push
sbb
or
sub
js
mov
push
rol
or
iret
jp
iret
mov
fcmovb
mov
or
xor
sub
ljmp
ja
and
cmp
test
in
in
cs
add
xchg
sub
and
sbb
in
cltd
inc
je
stos
sub
out
test
out
mov
divl
and
or
mov
dec
add
jne
loop
sub
jbe
jp
cltd
std
push
jae
pop
test
mov
shl
xor
in
xchg
in
outsb
pop
test
xchg
stc
cmc
cmp
loopne
rcrl
pop
mov
mov
faddl
mov
cmpb
ret
or
push
jnp
pop
jmp
lods
ljmp
cmpsb
xchg
sub
popf
inc
aam
ljmp
mov
mov
push
inc
cmp
movsb
xchg
call
add
mov
mov
fwait
sub
xchg
mov
push
shlb
adc
bound
insl
sahf
add
inc
ss
insl
xchg
cmpsb
inc
leave
jne
wbinvd
inc
sbb
fldcw
push
push
xor
inc
xchg
dec
lret
test
lods
test
sub
in
in
mov
jle
std
dec
insl
lret
roll
adc
xchg
outsl
sarl
in
xchg
inc
mov
dec
and
sub
xchg
dec
sub
aam
push
data16
mov
mov
and
sahf
xor
adc
sbb
adc
jmp
jl
cmpsb
sahf
xchg
pusha
dec
hlt
pop
stc
pusha
leave
lea
stos
sub
testb
repz
lret
icebp
or
mov
dec
or
adc
or
imul
fsubs
cld
or
lods
push
add
out
shlb
int
xchg
pop
pusha
lret
pop
icebp
inc
cmp
roll
xchg
push
jmp
pop
mov
dec
push
and
sub
inc
pop
push
jge
das
stos
xorl
push
push
shrl
inc
lods
fdivs
ret
int
lds
sbb
mov
mov
inc
mov
pop
ret
rol
inc
sub
dec
dec
out
das
lock
mov
inc
js
cmpsl
fisttpll
in
inc
stc
dec
std
adc
sub
dec
dec
clc
cmpsl
pop
jnp
ljmp
ss
lahf
pop
movsb
je
movsb
test
or
add
cwtl
in
sarl
mov
mov
push
in
push
mov
push
xchg
cltd
inc
mov
cmc
fs
enter
or
je
fwait
hlt
leave
add
cli
lcall
xor
adc
jae
or
cmc
out
leave
dec
xlat
or
aaa
clc
or
fldt
jmp
cmp
or
and
ffreep
pusha
jp
aam
scas
push
jo
push
push
and
sbb
push
minps
jnp
cld
cmp
ret
jge
xchg
xchg
cltd
out
xchg
and
in
shl
in
je
xchg
mov
jne
mov
cs
xor
mov
out
cmp
sub
xchg
arpl
test
repnz
xor
sub
popa
adcl
call
call
dec
xor
add
daa
jecxz
nop
lret
dec
rcll
inc
lahf
int
cmc
xchg
adc
sub
xchg
out
rcrl
sbb
xchg
or
icebp
clc
adc
in
int
loop
inc
stc
aam
shrl
rol
lahf
sti
push
push
fisttpl
dec
sbb
push
insb
cmp
mov
adc
or
sbb
jnp
gs
popf
fisttpl
mov
add
or
outsl
daa
das
xchg
xor
mov
cmp
mov
xchg
aam
ds
jo
jecxz
into
popf
mov
mov
or
stc
push
mov
daa
inc
lret
push
imul
jno
call
popl
stc
or
pop
xchg
cmp
adc
inc
sub
push
adc
imul
add
jle
xchg
mov
lcall
jecxz
mov
jecxz
cmp
add
inc
cltd
pop
jb
ss
mov
sbb
pop
add
sti
nop
clc
adc
mov
ljmp
mov
out
xor
pop
push
fsubl
push
and
mov
xor
aaa
int
stos
push
cs
pop
push
lea
mov
sbb
flds
in
push
push
add
jbe
xor
aam
test
cltd
push
mov
hlt
cmp
lahf
fadds
loopne
push
and
cmp
inc
sub
xchg
push
mov
fisubrs
dec
sbbl
sbb
mov
fsubl
jmp
cmpsl
cmp
pushf
dec
push
addb
repnz
jp
lahf
lods
addr16
jb
mov
iret
sbb
or
adc
sub
out
lahf
jg
testl
ds
jb
pop
mov
adc
pushf
pop
sarl
mov
xor
xchg
mov
fxch
mov
aad
fsubrl
dec
push
std
mov
ss
sub
loop
sub
add
in
cld
and
push
and
lea
ret
in
pushf
dec
and
outsl
mov
sbb
in
pop
popf
hlt
pop
pop
loope
ja
daa
xor
div
int3
imul
leave
xor
lea
inc
sti
clc
frstor
cmp
iret
mov
hlt
dec
dec
xor
orb
cmpsb
sbb
and
scas
adc
insl
in
pop
or
jne
xor
inc
cwtl
xlat
outsl
setbe
sub
inc
mov
dec
push
cmp
insl
call
sarb
push
mov
push
or
jmp
pop
sbb
dec
xchg
mov
inc
jne
and
test
dec
fs
insb
leave
mov
mov
lods
shrb
out
gs
jno
sub
sub
sub
in
cmp
add
mov
test
sahf
scas
loope
mov
dec
js
subl
sahf
inc
sbb
mov
subb
repnz
inc
daa
cld
leave
add
fs
cltd
cmpsl
rolb
xchg
add
cmp
int3
lods
push
add
mov
mov
addr16
sar
or
add
push
repnz
jae
push
out
xor
pop
out
mov
add
jecxz
cmc
mov
and
stos
xchg
xchg
push
dec
icebp
sbb
lcall
push
pop
lcall
jecxz
push
push
jmp
sbb
mov
test
adc
mov
cli
jg
mov
fdivr
dec
insb
mov
addr16
ss
in
aam
inc
pop
inc
pop
inc
mul
mov
jle
shrb
sbb
jmp
sub
mov
pop
pop
dec
xchg
xchg
adc
cmp
ja
fdiv
lock
jo
mov
mov
and
mov
into
pop
cmp
lods
and
jmp
mov
imul
pushf
test
cmpsl
jg
or
popl
out
cmc
inc
and
mov
aam
icebp
nop
cmp
negl
mov
subb
mov
lahf
or
xor
and
xchg
fimuls
push
xchg
cltd
orb
insb
fcoms
mov
aaa
cmp
repnz
sbb
data16
outsb
popf
add
lahf
aas
sarb
fadd
and
aas
mov
pop
sahf
adc
sbb
mov
xor
pop
aam
pushf
xlat
loop
mov
and
popa
and
into
xchg
jnp
sub
jg
dec
data16
xor
pop
jge
lods
scas
lret
das
fwait
xchg
ja
sub
out
stos
xchg
jns
mull
push
pop
enter
dec
add
in
inc
outsl
xor
in
mov
jo
lock
iret
pop
fucomp
mov
push
pop
pop
xor
clc
mov
fwait
dec
leave
sub
mov
outsl
jl
jl
mov
scas
inc
cwtl
stos
adc
sub
in
pushf
jno
ja
and
or
lods
xchg
int3
jnp
out
cs
rcrb
lock
inc
dec
sar
cmp
mov
xlat
aaa
mov
pop
mov
and
and
enter
push
pop
ja
int
out
xchg
lods
cwtl
pop
pop
enter
imul
in
inc
dec
stos
ret
loope
daa
fwait
fwait
into
aad
add
and
pop
xchg
test
iret
ffreep
outsb
ret
cmc
cli
jmp
in
into
movsl
push
push
lea
adc
rorb
push
push
mov
jg
inc
xor
pop
mov
test
dec
bound
push
xchg
scas
shrl
inc
lock
gs
jmp
data16
push
pop
xchg
push
dec
shl
mov
shll
adc
push
mov
pop
into
daa
mov
sub
pop
xor
daa
and
sbb
adc
cmp
add
adc
scas
lock
negl
inc
or
sarl
dec
mov
stos
push
sarl
lods
stc
adc
pop
and
imul
inc
add
fldl
pop
mov
push
inc
inc
jge
movsb
lds
xchg
xchg
mov
cmp
pop
lods
sbb
scas
pop
mov
xor
ret
lret
add
adc
fdiv
push
mov
mov
in
add
xchg
sti
jge
and
sub
pop
mov
sbb
mov
cmpsl
pop
daa
pop
hlt
jb
jnp
jmp
jnp
mov
or
xchg
mov
ljmp
loope
cmc
arpl
sarb
lea
and
test
or
arpl
add
xchg
mov
imul
jg
imul
hlt
iret
xor
fcompl
push
fsubr
push
push
data16
gs
es
fcomi
inc
filds
test
outsb
jns
imul
mov
adc
jmp
mov
or
pushf
fiadds
cmc
dec
mov
scas
das
into
pop
hlt
xor
stos
jb
add
cmp
mov
xchg
pusha
lret
add
mov
jns
sti
adc
aad
imul
jne
or
ret
test
xchg
je
dec
addr16
aad
pop
inc
cld
dec
imul
test
xchg
das
outsb
in
and
push
cmpsb
adc
aad
mov
lock
jecxz
pop
dec
jl
aad
ja
bnd
jecxz
inc
xor
push
jbe
cmp
mov
pop
mov
fs
repnz
data16
jmp
xor
aas
mov
dec
cmp
in
and
loop
std
lea
mov
push
sub
mov
push
ret
xor
test
push
lret
cld
push
push
sub
adc
call
mov
cs
les
fisubrs
sbb
arpl
add
xchg
sub
stos
rcr
xor
and
loope
inc
sub
cmpsb
dec
push
dec
mov
dec
mov
sbb
int3
mov
aam
pavgw
push
in
hlt
or
in
push
popa
sbb
sbb
mov
fisttpl
dec
mov
cltd
and
sti
xor
loopne
xor
sti
sub
out
lret
and
fsubp
mov
ds
sbb
mov
arpl
sbb
jbe
jne
add
jp
pushf
jp
mov
dec
inc
clc
lret
and
out
movsb
mov
xchg
rcll
fbstp
sbb
scas
andb
bnd
les
pusha
or
jmp
mov
stc
sub
cmc
and
sub
mov
add
mov
repnz
mov
mov
shrb
sub
mov
aam
loope
and
cmp
jl
xlat
mov
pop
fcoml
movsb
idivb
lret
adc
std
and
inc
testl
mov
movb
xorl
cmpsl
push
mov
ret
ss
push
popf
adc
and
pop
mov
adc
ljmp
inc
mov
push
push
pop
out
out
push
pop
fprem
dec
nop
imul
out
or
ja
push
cli
stos
cmp
repz
mov
jmp
daa
in
cltd
test
int
or
lret
scas
cmp
inc
cltd
pop
jbe
stos
shll
or
sub
arpl
push
push
in
ja
or
cmpsl
pop
mov
pop
mov
inc
push
adc
push
negl
jns
popf
adcb
adc
test
sub
leave
cmp
fisubs
andl
dec
movsb
jle
btsl
loop
jl
cmp
sub
cmpsl
and
shl
or
enter
xor
repnz
mov
cltd
loope
mov
mov
ret
and
adc
neg
popf
and
adc
dec
xor
dec
lods
xor
xchg
sub
rclb
int3
inc
hlt
jl
int3
mov
pop
test
jno
and
int3
mov
jmp
xchg
lds
arpl
push
lods
mov
mov
jb
adcb
test
std
ss
push
andb
pop
inc
sub
jnp
xchg
mov
mov
mov
data16
push
xchg
and
sbb
test
js
sbb
cltd
ss
xor
enter
lea
mov
xchg
xor
pop
aam
cmp
mov
xlat
aam
cld
test
sti
data16
mov
push
push
loop
push
inc
xchg
jmp
gs
aad
test
fmull
clc
out
movsb
out
ja
stos
stc
fcmove
out
repnz
fisttpl
shrl
mov
sahf
jl
mov
shl
test
jb
adc
ret
fistps
push
adc
mov
jne
sbb
jge
jns
mov
repnz
arpl
lock
and
fcom
or
ret
rorb
hlt
nop
dec
pusha
dec
into
imul
sbbb
sarl
mov
mov
sub
in
cwtl
pop
adc
xchg
sbb
dec
push
lea
movsl
lods
daa
cmp
jle
dec
mov
and
aaa
mov
mov
cltd
pop
pop
fstps
push
inc
dec
xchg
lahf
cmp
rcll
sub
push
push
lret
mov
inc
inc
stos
adc
test
dec
adc
les
mov
pop
fwait
jp
mov
mov
loop
cld
adc
scas
mov
mov
ret
les
out
test
push
push
inc
call
lods
dec
nop
inc
xchg
adc
fs
stos
mov
dec
xor
and
or
mov
push
xchg
and
mov
outsl
mov
push
fists
xor
mov
ds
clc
inc
shl
mov
push
xlat
call
pop
mov
jne
psrlw
xlat
mov
mov
repz
adc
cmpsb
popf
pop
fcmovb
inc
or
jne
imul
mov
pop
in
pop
push
mov
mov
insb
mov
xlat
cmp
adc
sbb
pushf
jl
mov
pop
inc
or
push
mov
mov
ficoms
subb
cmpsl
imulb
push
xchg
xchg
mov
cmp
ret
dec
inc
jno
lea
das
in
pop
aas
leave
ret
insl
pop
jp
jg
sub
fsubrs
popf
pusha
cli
mov
leave
sub
cmp
mov
cmp
test
lret
adcb
ja
jg
inc
out
add
and
sbb
pop
pop
sbb
daa
cmp
repz
sahf
or
ljmp
cli
dec
sti
out
dec
js
adc
sbbl
jle
cmp
inc
pop
push
cmp
jg
jmp
mov
mov
fimull
popf
ret
icebp
dec
or
push
push
push
outsb
and
outsb
push
mov
jno
push
scas
out
imul
icebp
push
into
js
call
sbb
out
add
cltd
scas
mov
xchg
outsl
into
mov
lahf
mov
cmpsb
xchg
pop
and
test
xchg
sbb
mov
enter
pop
sub
lods
aad
or
fisubs
fstps
nop
add
xlat
clc
mov
inc
and
pop
jno
addr16
pop
inc
inc
and
push
and
cmpsl
jg
xchg
dec
push
jp
movsl
loope
leave
aad
inc
lock
push
push
mov
stc
ja
enter
sbb
add
jle
push
das
inc
cwtl
in
mov
mov
adc
sbb
lock
es
sbb
jecxz
add
test
xchg
sahf
mov
shr
sbb
in
jbe
adcl
inc
and
jp
xchg
aam
mov
in
mulb
and
xor
or
lret
pop
sub
int3
inc
dec
lahf
outsb
sahf
mov
pusha
leave
pop
std
mov
mov
and
cld
sbb
enter
inc
int3
and
xchg
adc
jp
pusha
cmpsb
mov
jne
les
or
leave
jp
movsb
rorl
ret
inc
sub
in
cmpsb
mov
jge
inc
lcall
imulb
sbb
sarb
andl
lods
inc
mov
popa
xchg
xor
xor
sub
scas
adc
ret
ljmp
es
sub
sub
mov
sub
aam
and
icebp
popa
push
xor
hlt
rorl
loop,pn
and
ds
mov
dec
ja
dec
and
dec
daa
push
rorl
xor
cmp
inc
lret
pop
sbb
xorb
insl
aam
xchg
dec
shll
push
addr16
cmp
jno
xor
fnstcw
movsl
push
subb
sbb
loop
sub
mov
pusha
mov
out
push
lret
push
lahf
pusha
lcall
out
mov
std
pop
push
stos
aas
mov
movsb
cmp
fwait
cmp
push
mov
sbb
mov
mov
stc
and
jmp
mov
mov
xchg
loope
cmp
sti
push
int3
imul
cmpsb
jge
lcall
mov
add
call
repz
mov
jp
sbb
adcb
xchg
jmp
mov
cmp
daa
mov
xchg
mov
mov
jecxz
movsb
mov
test
and
xchg
xchg
ret
in
les
jo
std
pop
or
rorl
xor
mov
push
and
or
pop
dec
cmp
mov
lret
xor
cwtl
xchg
xor
or
sbb
movsl
out
push
fiaddl
push
pop
inc
scas
push
popf
mov
out
sub
jnp
fsubl
push
mov
movsb
mov
popa
add
and
push
rorb
ds
in
add
and
mov
jp
pop
adc
imul
mov
outsb
pop
mov
add
sbb
fwait
sarl
adc
pop
mov
dec
adc
push
shl
repnz
imul
sub
cs
lea
repnz
add
movsb
lea
cmp
pusha
repnz
jns
stos
repnz
xchg
cmpsl
cmp
push
mov
sub
cld
mov
fdivrs
lods
cmp
mov
lcall
jne
repz
mov
jae
xchg
sti
adc
dec
outsl
jnp
andb
jmp
mov
push
mov
fmuls
cmc
lea
fstpl
rcrl
inc
stos
dec
push
and
and
xchg
and
cld
cwtl
push
add
rol
mov
pop
add
dec
or
sub
fldl
or
std
mov
ss
daa
dec
mov
push
daa
pop
push
push
sarb
mov
dec
or
add
lods
clc
pusha
add
roll
mov
mov
aam
add
shlb
sti
mov
repnz
xor
pop
test
xchg
sub
aad
fstpl
cmp
mov
sub
pop
push
fsubl
daa
shll
scas
push
aad
jge
shrl
cmp
flds
stos
jle
mov
lcall
jge
jl
jecxz
xchg
inc
inc
jl
adc
jle
jns
adc
mov
push
sbbl
inc
xchg
push
sti
je
xor
iret
data16
stc
aas
mov
pop
mov
div
test
xor
adc
lahf
cmp
out
js
call
clc
sbb
adc
or
xchg
add
sbb
out
test
adc
leave
ljmp
sbb
rcll
mov
jno
leave
mov
js
bound
insb
pusha
add
dec
aas
cmpsl
pop
mov
movsb
sub
jnp
xor
add
loope
loope
and
adc
std
sahf
data16
jb
es
incl
les
test
push
cvtps2pi
gs
mov
add
jmp
xchg
inc
jbe
dec
or
mov
xchg
repnz
shll
inc
xchg
xchg
and
notb
or
jae
ss
mov
push
mov
lods
enter
cmpsb
repz
ljmp
stc
and
iret
mov
dec
mov
popa
cs
aas
push
mov
add
out
aas
push
leave
pop
icebp
jle
cmp
pop
sub
xor
movsl
jnp
sub
add
cmc
roll
cmp
fistps
xchg
push
inc
mov
adc
jl
inc
sub
sub
cmpl
out
and
adc
mov
adc
add
call
push
cmp
shlb
aas
lds
in
orl
out
lods
sar
inc
cmpsl
pop
xor
push
sub
pop
cmp
cmp
mov
pop
and
fstpl
mov
loope
lds
mov
push
fbstp
loopne
lcall
cwtl
mov
sbb
std
or
or
fwait
arpl
cltd
xor
jmp
loope
jle
ljmp
daa
cltd
std
or
loop
jae
inc
aas
dec
mov
cmp
mov
jg
loopne
mov
in
sbbb
pop
and
lea
jle
sub
xchg
sbb
pop
or
jl
xor
push
adc
out
dec
faddl
pop
out
aas
scas
jle
sbb
mov
ja
sub
pop
arpl
inc
nop
pop
and
das
movsl
xlat
add
call
mov
lahf
popa
jmp
push
pop
loopne
sbb
in
roll
ss
or
fcmove
arpl
dec
aaa
mov
loopne
push
aas
xchg
loop
and
xor
fistpl
add
lods
cwtl
push
inc
subl
lods
std
stc
pop
mov
repnz
lret
pop
xchg
xchg
loop
leave
in
lods
add
jp
dec
pushf
icebp
loop,pt
les
jno
fcmovbe
test
rolb
test
pop
sbb
cltd
jb
int
adcb
les
xor
mov
fwait
pushf
mov
aas
add
inc
cltd
jg
jbe
mov
or
jno
scas
aas
outsb
stc
out
mov
xchg
test
mov
int3
cmp
ja
sbb
xchg
xlat
xchg
arpl
xor
das
mov
ljmp
xlat
lock
add
pop
add
jno
mov
and
scas
cmc
leave
imul
lea
ret
xor
jns
out
repnz
mov
fwait
clc
jp
jb
lret
cmp
xchg
jle
xor
out
cmpsl
insb
aam
pusha
xchg
sub
jmp
sahf
push
xor
stc
into
jae
imul
loopne
inc
mov
add
pop
mov
in
or
cmp
mov
sub
xchg
mov
and
movsl
cmpsb
inc
movsl
outsb
pop
out
ror
test
fiadds
xorl
scas
imul
scas
jae
xchg
dec
pop
pop
jmp
out
xor
loopne
push
es
ja
inc
aam
stc
call
ljmp
or
mov
add
xchg
pop
sahf
xchg
adc
dec
jo
insl
aaa
dec
mov
dec
mov
mov
mov
inc
rcll
sub
add
fmull
bound
xchg
mov
imul
fistpl
roll
xor
loopne
mov
shlb
and
hlt
test
sti
mov
or
add
shll
pop
mov
inc
pop
jae
jl
inc
imul
add
lcall
mov
popa
lret
inc
in
jne
jge
iret
mov
repnz
neg
mov
mov
inc
jbe
push
les
repnz
xchg
sub
mov
std
jecxz
fsts
leave
int3
movsl
inc
stos
out
cmc
or
cs
aaa
mov
pusha
gs
or
add
dec
jb
adc
push
jbe
mov
sub
js
lahf
push
nop
dec
vaddsd
pop
shrb
sbb
popa
clc
clc
inc
lods
jle
les
inc
es
push
push
adc
mov
adc
loope
andl
mov
adc
scas
arpl
xchg
lcall
push
jl
daa
sbb
inc
bnd
mov
in
and
jecxz
jno
stos
cmpsl
and
fidivrl
push
add
lds
xor
sbbb
inc
jge
gs
cltd
and
mov
iret
and
sub
xorl
mov
add
std
cwtl
xor
arpl
les
loop
hlt
jmp
adc
pop
pop
xor
jle
mov
je
jecxz
xor
lods
and
mov
or
js
cs
lock
dec
int3
xor
sub
lods
cltd
in
stos
ret
mov
inc
hlt
jnp
sub
call
cmp
dec
inc
icebp
and
ret
add
imul
mov
enter
mov
and
aad
std
pop
ret
lea
mov
pop
outsb
cld
cmp
sbb
out
loope
inc
dec
dec
adc
xchg
flds
xor
aam
ret
xchg
mov
test
add
xor
mov
inc
insb
push
mov
jb
cltd
inc
mov
add
jne
fdivr
or
in
shll
jmp
cmp
lret
cmp
pusha
out
mov
les
sbb
unpckhps
pop
shl
mul
xchg
add
iret
scas
inc
fsubr
pushf
cmp
mov
cmpsl
scas
pmuludq
adc
xor
movsl
and
sub
adc
daa
jnp
sub
std
jne
iret
js
out
out
notl
xchg
mov
ss
jne
mov
loop
fldenv
movl
stos
sub
cmp
sub
mov
xchg
outsb
mov
jno
imul
mov
int3
jae
insb
ror
pop
cmp
addr16
push
xor
sbb
push
cmpsb
mov
add
sub
xor
adc
das
pop
mov
mov
pop
xor
or
lret
and
xchg
addr16
int
scas
cmp
mov
call
cmpsb
pushf
or
rolb
mov
xor
adc
pop
adc
cs
mov
dec
and
push
daa
cmpsl
call
cmp
and
je
insl
lea
xor
lret
mov
sbb
pop
loopne
inc
mov
pusha
daa
xchg
jge
loop
fs
int
leave
cli
aas
xor
sbb
or
in
pop
sub
mov
mov
lret
jns
sub
add
add
out
popa
orb
lock
into
push
sbb
jmp
add
add
pusha
inc
lea
mov
pop
jns
add
int3
cli
and
pop
lods
inc
dec
daa
add
dec
sub
mov
xchg
iret
out
aam
aas
cmp
xor
ffree
mov
xchg
and
mov
mov
xor
fcompl
dec
jbe
stc
clc
ss
or
sub
add
int3
cltd
add
jnp
ljmp
rcrl
adc
shrl
xlat
insb
stos
icebp
rclb
mov
pop
pop
out
in
faddl
lcall
std
push
sbb
sbb
jp
push
xor
or
in
pop
jbe
inc
and
test
mull
mov
pop
xor
mov
jbe
mov
fmull
fidivrl
cmpl
cli
inc
mov
inc
das
sub
outsb
lcall
and
loopne
pop
mov
fnstsw
inc
and
xchg
lds
sub
mov
sub
es
movsb
jbe
add
inc
fidivrl
push
dec
mov
mov
sbb
enter
mov
mov
dec
sbb
mov
jge
in
xor
movsb
or
fisubl
mov
shl
mov
mov
mov
jae
idivb
adc
leave
stos
roll
les
loopne
aam
in
adc
subl
in
nop
aas
sbbb
adc
push
xor
in
fmull
or
cmp
inc
xchg
int
dec
inc
out
cmp
imul
pop
and
aad
out
mov
shl
push
shlb
push
in
push
push
sub
jle
lahf
stos
cwtl
lock
js
mov
fiadds
cli
les
push
push
push
sbb
push
xor
jle
or
ror
or
inc
adc
outsb
pop
cmpsl
sub
push
js
rorb
test
aam
fbld
lds
and
cmpsb
pop
fwait
sbb
loope
mov
xor
nop
int3
pop
add
in
scas
ret
pop
push
mov
push
cwtl
std
leave
std
xchg
pusha
cmp
pop
xchg
add
xchg
cmp
sti
xchg
fisubrs
cmp
cmp
fstp
stos
adc
fcoms
sti
add
sbb
pop
xchg
xchg
add
cltd
aam
xchg
test
enter
sbb
call
jns
clc
ss
cmp
aam
sbb
jmp
inc
push
das
dec
fldenv
aaa
outsb
mov
and
pusha
xchg
stos
ds
aam
repz
cmp
popf
mov
pop
je
jno
imul
fnsave
or
addr16
ds
sti
add
pop
jge
mov
or
or
or
mov
push
mov
cmpsl
push
mov
xchg
int3
push
adc
mov
dec
loope
jmp
jp
cvtps2pi
push
lods
dec
lcall
add
inc
mov
js
aaa
sub
xchg
imul
push
notb
jp
test
mov
leave
xor
push
shr
test
pop
push
xor
push
rcrl
outsb
lds
and
pop
push
in
dec
andl
sub
mov
out
in
in
fisttpll
sub
dec
js
jl,pt
add
fdivrl
test
pop
add
out
sbb
jecxz
subl
mov
js
fidivl
inc
add
jne
fsts
loope
add
in
xor
or
movsl
insl
mov
mov
fdivrs
sti
xor
adc
adc
inc
add
jle
xor
insl
jns
mov
xchg
adc
xchg
aad
lock
xor
je
cmp
inc
or
iret
ret
cmp
xor
xchg
aaa
cmpsl
inc
push
or
repz
mov
hlt
jne
xchg
repz
imul
cmp
mov
loop
ret
mov
es
cmp
add
jb
mov
xorb
repz
pop
mov
mov
xor
cmp
mov
imul
add
sti
or
fwait
lcall
pop
test
pop
and
sub
inc
dec
push
sbbl
data16
xchg
inc
jno
es
jge
dec
fsubl
inc
add
xchg
adc
fadds
sti
cltd
addl
cmp
jecxz
dec
mov
inc
call
adc
arpl
sar
add
mov
xchg
xchg
in
xchg
lds
insl
dec
loop
addb
push
js
dec
dec
xchg
pop
xchg
xchg
xor
mov
pminub
dec
mov
and
mov
pop
cli
inc
mov
fsubrl
in
aam
mov
dec
mov
test
cmp
add
sub
push
fcoml
pop
pop
sub
xchg
push
call
jmp
rol
pop
adc
cmpsb
lret
sbb
loopne
adc
nop
std
or
cmp
jb
sub
loop
xchg
dec
int3
mov
jle
push
nop
and
repnz
pop
sub
lret
pop
inc
xor
pop
sub
or
or
add
add
sbb
inc
add
jnp
mov
test
push
ds
ficompl
movsl
int
das
daa
xchg
or
insl
insl
scas
push
sbbb
xchg
xchg
std
mov
adc
fcom
push
dec
sahf
mov
movsl
and
fs
xor
lods
xor
jae
lods
mov
ja
cltd
fildl
std
out
sub
lds
xor
std
mov
dec
adc
mov
and
stos
inc
mov
icebp
mov
or
push
decb
dec
arpl
mov
jmp
popa
mov
sub
aas
cmpsb
arpl
pop
data16
mov
mov
js
add
leave
jnp
fimuls
cs
ja
xor
int3
xchg
cmpsl
es
xchg
mov
inc
addr16
cmp
inc
icebp
adc
int3
aad
xlat
push
adc
cmp
jno
jbe
icebp
test
mov
shll
lcall
imul
es
insb
pushf
lods
in
subb
fidivrl
repnz
sbb
sbb
in
sub
mov
cmc
ds
push
es
dec
in
cmp
mov
cld
mov
mov
jecxz
loopne
sbb
dec
sbb
adc
aad
mov
out
pusha
out
pop
dec
dec
inc
sbb
jbe
popf
insl
nop
push
jbe
and
mov
xor
pop
jno
addl
das
sub
div
add
lods
sbb
notb
lcall
decl
mov
aam
inc
xchg
mov
sbbl
flds
std
mov
ffreep
mov
dec
inc
jno
out
cmc
xlat
push
fsubrs
dec
sub
andl
inc
outsl
stc
stos
inc
sub
cmp
pop
and
mov
sbbl
mov
xor
sbb
dec
add
arpl
sub
pop
mov
mov
jg
mov
rorb
sub
pusha
in
pop
pop
movsb
loop
js
sbb
sarb
and
mov
adcw
dec
mov
aad
push
repz
mov
or
jo
frstor
mov
mov
push
mov
pop
jns
mov
icebp
inc
in
push
cwtl
dec
jne
pop
lods
sbb
ficoms
rcll
dec
clc
push
fidivrs
push
out
add
shll
nop
test
loope
jo
xchg
jle
jl
xor
xchg
insl
repz
and
inc
sub
imul
lods
je
push
ds
rolb
rcll
bound
pop
add
push
cmpsl
daa
jns
mov
mov
ljmp
lret
and
jl
cmp
bound
or
lock
pushf
adc
adc
jne
xorb
xchg
and
sub
xor
arpl
xor
or
mov
or
andb
loopne
cli
sti
xchg
js
mov
call
pop
sub
mov
jb
and
push
cmp
call
mov
popf
ret
mov
mov
aam
movsb
mov
xor
push
arpl
js
push
xchg
add
xchg
xchg
shl
dec
cltd
and
test
stos
mov
mov
scas
and
sub
or
out
call
inc
xchg
add
rcrl
mov
stos
data16
jge
cmpsl
pop
dec
inc
adc
jno
call
push
lahf
in
mov
fwait
icebp
sbb
icebp
gs
jge
jp
xchg
mov
inc
gs
shlb
mov
inc
jae
adc
or
das
mov
ljmp
pusha
xor
inc
jmp
sbb
xchg
lret
inc
jo
lods
ret
adc
mov
mov
sar
fs
pusha
insl
push
pop
mov
mov
sbb
movsb
insl
mov
xor
arpl
mov
xchg
div
mov
adc
xlat
vpmacsdd
add
cld
sbb
mov
inc
fildl
xor
mov
in
lahf
xchg
in
arpl
subl
mov
enter
jno
loope
pop
int3
test
lcall
inc
mov
insl
lahf
jmp
bound
cmp
test
arpl
dec
sub
fmul
arpl
xor
cld
sub
in
xor
add
addb
or
and
fstl
lea
sub
inc
insb
inc
dec
xchg
test
repz
imul
xchg
lods
sbb
lret
dec
aad
int
pop
lret
mov
mov
loop
and
inc
sub
js
or
jno
push
insl
sarb
call
sub
cmp
insb
jns
mov
push
out
iret
sbb
sub
lahf
mov
lock
cmp
rolb
sbb
jmp
sub
stos
cmp
dec
mov
sarl
xchg
cltd
outsl
sub
popa
rclb
push
popa
mov
jae
stc
dec
cmp
out
rcr
insb
sub
jge
lock
or
jo
add
push
dec
cmp
inc
jbe
pop
aad
pushf
adc
mov
popf
lret
xchg
adc
add
mov
popf
dec
cmpsl
mov
adc
iret
flds
popa
adc
mov
jmp
out
or
xlat
idivb
in
in
push
aad
loop
mov
pop
and
mov
popa
jecxz
rorb
xchg
dec
mov
out
scas
call
inc
push
mov
cmpsb
stos
mov
rol
push
mov
in
xchg
aas
lds
cld
bound
adc
lret
jo
out
insb
aaa
repz
mov
push
pusha
push
out
data16
xchg
call
mov
lret
add
out
and
cmp
push
lcall
sub
shl
cwtl
cltd
fcom
xor
imul
fs
subl
cltd
mov
jb
decl
xchg
adc
xchg
adc
outsb
add
pop
fisttpl
push
orb
stos
out
lcall
push
lods
out
add
outsb
fs
test
fsubrs
pop
xor
fists
add
inc
jmp
int
sti
or
test
mov
mov
push
test
jo
fnstcw
add
xor
jae
xor
icebp
add
and
sahf
xchg
hlt
hlt
push
mov
sub
sahf
push
cmp
movsl
or
jno
xchg
pop
jno
dec
push
out
fnstcw
cltd
fdivr
push
mov
test
mov
mov
loop
xchg
popf
cmp
cmp
mov
stos
movsl
jg
mov
mov
mov
mov
mov
hlt
pop
out
jae
popl
idivb
mov
sub
push
mov
shrl
jmp
pop
test
aaa
in
jge
adc
adc
sub
push
pop
adc
push
sahf
iret
mov
orl
iret
inc
int3
push
mov
xor
aad
xor
xchg
xchg
scas
or
cmp
xchg
mov
imul
xor
orb
pushf
jmp
js
jecxz
sbb
pop
subb
gs
fs
add
push
cltd
add
pop
lret
xlat
add
and
mov
dec
mov
ret
sub
add
jbe
mov
loope
cli
mull
cmp
push
push
imul
mov
fadd
xchg
imul
stc
cli
xor
out
data16
jmp
mov
imul
mov
scas
sub
mov
pop
adc
sti
dec
cmc
ror
jl
enter
jmp
mov
push
mov
dec
dec
out
adcb
jno
clc
mov
das
mov
mov
orl
pop
lret
mov
xchg
jbe
cld
pop
jg
push
cli
cltd
aad
or
or
inc
sti
push
sbb
jb
movsl
jp
dec
out
mov
pop
outsb
sub
inc
loopne
es
inc
inc
inc
addr16
sahf
jnp
xlat
mov
lods
or
pop
or
inc
inc
int3
or
and
stos
aam
pushf
mov
xchg
jnp
mov
in
movsl
sbbb
fistps
xorb
mov
mov
mov
or
repnz
push
add
insl
divl
sbb
into
xchg
mov
mov
les
leave
subb
fdivr
dec
adc
ror
mov
test
aaa
jl
popa
pop
scas
fldl
adc
icebp
in
sbb
xor
hlt
stc
push
lret
sub
ss
cmp
mov
mov
xor
ljmp
int3
lret
adc
mov
ret
mov
hlt
call
divl
cmp
lods
sub
cld
cmp
cltd
push
inc
repnz
bound
cmc
push
xchg
lcall
insb
hlt
sbb
notl
xchg
jg
lret
sarl
xor
add
mov
repz
jmp
sub
lret
scas
arpl
xlat
jne
les
push
hlt
and
jl
nop
out
mov
and
cmpl
repnz
aam
int
mov
or
jb
and
mov
push
pop
push
xor
insb
stc
sahf
ret
and
xor
ja
divb
daa
cltd
sub
dec
fisubrs
fwait
mov
addr16
pop
dec
mov
sub
push
popf
repz
les
shll
push
mov
ss
jl
mov
push
and
nop
adc
fnstsw
js
jge
lahf
bound
pop
mov
frstor
adc
ja
mov
mov
mov
imul
sahf
out
or
movsb
inc
scas
push
popf
leave
jno
sti
push
mov
mov
mov
cld
mov
pop
dec
mov
pop
sbbl
sbb
mov
pop
and
mov
xchg
xorl
and
jmp
pop
mov
fidivrl
and
mov
xchg
loope
jg
jg
jg
sub
pop
loopne
inc
call
add
push
xchg
xchg
shlb
pop
jp
shr
mov
fldl
jge
adc
inc
sub
cltd
cmp
js
fisttpll
rclb
iret
add
insl
fs
dec
scas
shr
jmp
inc
repz
jae
jns
enter
mov
and
sahf
imul
mov
inc
xchg
or
jmp
in
push
les
pop
lds
add
in
js
cmp
bound
push
cmpsb
add
mov
mov
adc
push
nop
xchg
test
std
int
push
sbb
lret
add
repz
sub
xor
daa
gs
add
ror
lods
mov
or
scas
push
adc
mov
sbb
add
aaa
adc
iret
popl
cmc
pmaxsw
and
cwtl
sub
sbb
dec
pop
jae
xor
mov
jae
hlt
inc
lret
test
out
push
adc
in
lea
test
mov
mov
call
add
sbb
mov
xchg
insl
or
movsl
daa
icebp
imul
lcall
adc
xchg
ficompl
xchg
ss
sbbl
jge
notl
movntq
loopne
int3
xchg
push
into
and
out
int3
mov
test
sub
sub
sbb
mov
lcall
arpl
mov
push
sti
je
repz
loop,pt
add
xor
mov
sbb
insb
hlt
push
cwtl
lods
sub
fldcw
sub
adc
push
jbe
repz
dec
cwtl
jo
jno
mov
es
shrd
aam
in
xchg
dec
imul
insb
rclb
adc
out
xchg
cmp
scas
push
pop
call
add
dec
mov
insl
insb
scas
popf
jne
mov
lock
addr16
cmp
cmp
outsb
or
stos
or
mov
adc
fstpt
subl
aas
popf
add
hlt
mov
ficomps
popf
mov
das
loopne
cld
scas
jge
dec
mov
lods
xchg
loop
imul
jb
or
jle
cmc
mov
out
inc
rolb
call
psubb
lods
fxch
cltd
andb
push
jnp,pt
loopne
scas
mov
repz
js
lret
mov
add
add
mov
sbb
sbb
fdiv
xor
xor
aas
int3
sbb
hlt
cmp
ds
ficompl
ljmp
mov
mov
enter
jecxz
nop
prefetcht1
and
cmp
popa
fdivs
and
sbb
xlat
in
daa
fdivrl
aam
loope
xchg
cmc
push
xorl
mov
jnp
sub
mulb
jge
popa
cmpsl
imull
sbb
outsl
push
iret
cli
sub
inc
das
mov
mov
push
ds
pop
or
jle
in
push
mov
ds
sbb
fimull
push
subb
pop
sub
out
ret
sub
imul
push
jecxz
cs
mov
sbb
mov
jg
xchg
ds
cmp
sbb
nop
mov
fs
pop
jg
sub
mov
fcmovb
adc
cmpsb
stos
jne
mov
in
pop
sub
or
mov
or
shlb
inc
lret
adc
and
adc
mov
jecxz
xchg
insl
mov
arpl
inc
cmp
es
ror
jae
imul
loopne
jb
prefetchwt1
sub
movsl
fs
jecxz
pop
test
in
jae
out
in
lcall
xchg
push
push
lret
ret
lods
inc
pop
jle
fucomip
mov
inc
or
or
and
mov
push
andb
sub
dec
xchg
aas
lcall
and
sub
xchg
mov
or
mov
inc
aam
push
movsb
push
sbb
icebp
and
xchg
pusha
push
loopne
dec
adc
aad
lods
dec
fwait
mov
pop
call
aad
rol
or
inc
lds
in
cld
mov
push
mov
sub
adc
pop
insl
mov
test
shrl
push
aam
mov
ljmp
push
sub
xor
test
sub
daa
subb
es
xchg
lret
popf
ret
in
add
movsl
dec
xchg
in
inc
test
fs
jo
push
outsl
lock
push
lahf
repz
dec
aam
dec
push
fisttps
out
push
jne
scas
xchg
lcall
fidivs
inc
add
push
xorl
xor
dec
cmp
cmp
add
data16
sub
xor
push
call
add
loopne
xor
movsl
inc
ret
lret
arpl
pusha
pop
out
jno
adc
jns
jnp
xchg
jb
pop
adc
js
cmp
test
sub
fwait
rcrb
add
cs
shlb
adc
sbb
jne
pushf
jge
mov
jecxz
dec
pop
push
mov
mov
jnp
adc
push
jp
ret
rcrb
mov
aaa
jb
mov
mov
leave
clc
insb
pop
mov
ljmp
mov
sbbb
jge
mov
and
mov
xchg
shll
cmp
mov
xor
mov
int
jns
aad
lds
and
mov
ss
lock
mov
ja
clc
aas
adc
ds
loopne
enter
stos
test
nop
xchg
jae
clc
clc
mov
mov
cltd
movsb
sbb
pop
xchg
mov
int3
xor
mov
sbb
adcb
mov
jmp
push
fidivl
arpl
jb
addr16
inc
add
mov
xchg
inc
pushf
mov
add
push
nop
add
aam
pushf
popa
sbb
inc
jecxz
shrb
loope
jp
lret
das
jb
and
xchg
fxch
push
mov
push
inc
cmp
jns
xchg
mov
push
into
sti
dec
leave
cmpsl
fists
mov
mov
adc
imul
rclb
aaa
add
pusha
clc
ja
jp
add
jne
pop
fbstp
cld
dec
mov
rol
and
jns
add
dec
out
adc
mov
and
fnsave
sub
push
push
mov
pushf
xchg
push
jl
repz
inc
xchg
cmp
mov
es
test
and
sahf
in
int3
inc
xor
fimull
sub
jg
jns
sub
push
pop
or
aam
inc
pop
push
inc
add
out
scas
add
lds
pop
inc
lods
mov
int3
mov
mov
jp
pop
int3
push
data16
daa
mov
dec
aas
push
jecxz
mov
mov
pop
jae
push
mov
or
mov
cmpsl
dec
movsb
mov
dec
inc
adcb
icebp
imul
insb
icebp
fmuls
xor
xchg
and
jnp
jl
cmp
jecxz
mov
ljmp
shlb
enter
push
and
inc
inc
fists
mull
add
mov
mov
std
inc
dec
and
imul
in
stc
sarl
cmpl
dec
leave
cmp
adc
pop
pop
push
jnp
mov
mov
iret
xor
inc
inc
cmpsl
test
add
in
xchg
jne
xor
lret
inc
nop
adc
addl
aaa
cmc
push
fs
aas
pop
in
std
shl
sub
jg
mov
loop
fidivs
dec
xorl
shl
xor
std
xor
pusha
pop
xchg
lret
out
add
adcb
sbb
dec
mov
rolb
jg
pusha
push
rcl
push
adc
fisubrl
pop
push
dec
es
adc
sbb
inc
or
inc
movsb
mov
sbb
test
fmull
sbb
mov
out
mov
mov
inc
push
nop
repnz
or
cmpsb
inc
lods
inc
push
stos
jl
mov
std
sub
cld
push
push
xchg
lds
arpl
jp
aam
dec
and
fsts
lret
dec
mov
arpl
push
repnz
xor
xchg
lea
in
cmovg
lock
pop
adc
xor
cmp
out
xchg
adc
in
and
out
shll
mov
jbe
sub
and
lret
xor
xor
daa
arpl
gs
loop
xor
imul
jge
cmpsb
add
inc
int3
rolb
mov
inc
sbb
cmp
clc
sbbl
sti
xchg
pushf
ret
ror
pop
mov
fisttpl
pop
test
xorb
pop
and
or
repz
lret
xchg
stc
sbb
sub
test
dec
mov
xor
lahf
jno
lods
jb
mov
inc
sub
shl
xchg
pusha
or
pop
test
rorl
dec
lods
cmc
call
and
mov
mov
pop
cmp
lds
cwtl
test
shll
pop
xlat
mov
neg
shrw
adc
or
fstl
shrl
push
fstpt
repz
bnd
ja
incb
das
std
popf
bnd
test
pop
fs
faddl
inc
push
ja
and
mov
cld
adc
mov
iret
hlt
cli
jle
jb
inc
in
dec
dec
mov
aam
fistl
jl
icebp
adc
mov
arpl
fadds
xchg
xchg
sbb
inc
mov
xchg
xor
leave
popf
jo
insl
std
sub
test
pusha
or
js
cld
push
cltd
das
jmp
jne
sub
movups
popa
sbb
aaa
sti
pop
dec
adc
jp
sarb
out
push
lods
sub
outsl
mov
dec
dec
xchg
inc
xorb
sub
rolb
sbb
jne
lock
outsb
scas
xlat
out
in
sbb
ja
outsl
out
clc
push
mov
cmp
rcrl
stos
cmp
outsl
gs
arpl
lret
bound
xchg
or
out
add
icebp
inc
mov
das
loopne
stos
or
dec
popf
dec
ret
scas
mov
xchg
ret
lahf
repnz
push
popf
xchg
sbb
hlt
push
sub
sbb
test
inc
xor
adc
jle
roll
inc
mov
xchg
aaa
dec
pop
adc
push
out
jbe
test
adc
repnz
sti
popf
repnz
mov
ja
bound
mov
mov
mov
and
adc
mov
test
jns
loopne
jge
into
push
inc
clc
test
sti
xchg
sub
pushf
icebp
jp
movsb
inc
sub
and
pushf
aaa
out
add
in
int
sbb
mov
sbb
xchg
aad
push
arpl
scas
loope
cmp
ss
stos
adc
notl
or
cmp
cli
xlat
and
jns
sbbl
lret
stos
sbb
test
push
inc
jge
rclb
and
jno
stos
insb
mov
dec
mov
pop
mov
hlt
dec
andl
ret
test
add
ljmp
xchg
stc
cmpsl
cmc
hlt
decl
aas
adc
pop
outsb
jo
push
aas
mov
mov
mov
loope
aaa
shl
outsl
adc
jecxz
aad
push
cli
mov
and
int3
les
inc
jnp
inc
sbb
gs
out
aaa
mov
outsb
rolb
jno
aam
ja
daa
stos
out
sub
test
and
popa
mov
adc
mov
mov
mov
in
sar
mov
roll
mov
adc
adc
push
int
clc
jno
nopl
in
cmp
ja
xrelease
lret
push
data16
loop
sub
cmp
push
adc
lahf
ljmp
and
mov
jl
mov
jns
xchg
xlat
fisubrs
mov
dec
add
sahf
push
or
dec
sub
lods
lcall
xor
xor
adc
lret
sub
sbb
adc
in
cli
in
pop
sbbl
xchg
pop
cmp
ror
jne
inc
mov
cmc
xor
or
jp
stos
dec
leave
imul
sub
and
sub
testl
pop
adc
pop
xchg
add
test
pop
pushf
rcll
jl
in
cwtl
pop
mov
gs
mov
sbb
stc
test
mov
and
iret
adc
mov
or
sub
cmp
rolb
cmc
add
and
dec
out
testl
jbe
outsl
into
mov
out
or
movsl
dec
push
push
dec
or
clc
lahf
pop
mov
pop
adcb
rep
dec
mov
jbe
cltd
mov
cmp
pop
dec
push
ret
xchg
push
popa
in
push
call
sbb
pop
scas
fisubs
fwait
mov
das
lods
xchg
cltd
xchg
mov
mov
fs
dec
divl
xchg
push
in
sbb
mov
fdivs
push
mov
test
fwait
pushf
dec
sub
in
fwait
sbb
cmc
icebp
es
dec
lock
stc
dec
loop
adc
dec
fstl
sbb
mov
sbb
add
enter
movsb
shrb
int
popa
add
add
ficompl
pop
outsl
mov
subl
jne
jle
dec
lock
xchg
lret
mov
in
lret
dec
or
mov
clc
xor
adc
jae
dec
and
pop
mov
daa
setle
sub
sbb
xabort
lret
in
adc
add
mov
add
aam
in
lahf
lock
test
sbb
ss
fs
dec
loope,pn
into
out
cmc
xor
repnz
sbb
repz
mov
pop
test
pop
aam
xchg
and
mov
cmp
jecxz
insl
sbb
inc
in
sub
adc
xlat
mov
xchg
dec
jecxz
ror
icebp
cwtl
dec
jecxz
mov
push
movsl
pop
aam
cmp
mov
mov
mov
xchg
aaa
aas
and
sub
and
cltd
and
sti
addr16
mov
push
mov
movsb
loopne
mov
sub
xor
ds
icebp
or
xor
mov
add
daa
out
mov
es
je
popa
dec
fcompl
rorb
js
push
mov
and
leave
loopne
adc
addr16
sbb
ja
and
test
lahf
xchg
aas
push
daa
push
sarb
scas
out
sbb
scas
mov
movsb
xchg
imull
adc
mov
jne
pop
lods
push
cs
test
fwait
pop
cltd
arpl
repnz
sti
jmp
aam
shll
and
fs
daa
pop
int
fiaddl
popa
out
push
cld
xchg
flds
dec
push
pop
insl
pop
push
int
sub
sar
fcoml
jae
adc
jb
or
rol
sub
fstps
jb
ljmp
adc
cmp
call
stc
xor
es
iret
inc
mov
ds
cmp
scas
push
cmc
push
and
addb
punpckhwd
push
dec
mov
fmull
insb
adc
xor
ja
sbb
push
add
in
jo
push
mov
jmp
xchg
sub
out
mulb
cmp
xor
xor
sbb
xchg
mov
int
pop
sub
outsb
jb
aas
jl
mov
arpl
jmp
test
scas
fsubrs
repnz
xor
movsl
shlb
mov
daa
test
pusha
mov
scas
dec
insb
mov
in
cmpsl
mov
into
sbb
jno
insl
xor
jb
mov
pop
das
or
adc
ds
sahf
ja
jmp
mov
mov
fldln2
pushf
movsl
mov
and
cmp
xchg
xchg
outsb
cmc
and
sub
mov
jle
pusha
insb
imul
pusha
imul
int3
jbe
xor
iret
dec
mov
fnstenv
stc
sbbb
mov
addr16
cwtl
stc
in
inc
push
sub
cltd
out
call
stos
mov
scas
mov
cmc
push
test
call
jl
stc
out
sbb
fldcw
aad
insl
xor
das
jmp
fnstenv
das
mov
xchg
cmp
xor
popa
repnz
xchg
pop
xor
pop
les
add
push
out
mov
popf
add
vpavgb
lds
cwtl
addr16
popf
js
pusha
xchg
sbb
cmpsl
dec
in
sub
inc
inc
pop
cmp
test
fidivrl
fwait
cmc
int3
mov
pop
adc
repz
xchg
xchg
ret
push
add
loopne
fst
or
fidivrl
mov
mov
outsl
mov
jmp
decl
test
fs
fwait
jg
vpaddd
popa
push
out
movsl
imul
xchg
shl
jo
xor
push
cmp
cmp
sbb
test
mov
sbb
imul
and
jno
pop
nop
test
fstl
pop
call
add
int3
cmpl
insl
jecxz
dec
inc
mov
mov
loope
adc
sub
mov
xchg
std
mov
in
filds
mov
add
movb
leave
fnsave
xchg
cwtl
imul
sub
inc
push
jns
inc
mov
xor
test
push
mov
push
dec
es
movntq
mov
jne
outsb
outsl
test
add
mov
vmwrite
fnsave
sub
mov
test
and
lods
dec
adc
popf
jp
jl
andl
cmp
out
cmp
jmp
je
aaa
jecxz
ja
aaa
popf
mov
pop
int
sub
inc
push
ss
ret
mov
inc
scas
xchg
jecxz
loopne
mov
jmp
shll
jmp
mov
faddl
sbb
rol
push
icebp
addl
sbb
dec
xchg
xlat
mov
pusha
pushf
arpl
stos
in
xor
std
out
sub
mov
push
adc
dec
push
in
scas
cmpsl
lods
push
cmpsb
lods
or
mov
jmp
pushf
mov
lcall
enter
scas
shrl
mov
add
lods
mov
jbe
pop
mov
out
cmc
pslld
mov
inc
xchg
aas
xchg
xor
sub
pop
dec
dec
pop
adc
mov
push
test
cmp
test
inc
adc
inc
cmpl
adc
pop
lods
sbb
jmp
scas
cmpsl
push
inc
pop
mov
mov
jb
mov
jle
cmpsl
add
lret
cmp
pop
pop
push
iret
loope
dec
jb
push
jne
jno
test
rorb
sbb
xchg
test
pushf
lret
mov
loope
sbbl
in
test
mov
lds
scas
xor
das
cmp
inc
mov
add
inc
adc
fwait
shr
cmp
sub
xchg
mov
cmp
mov
xchg
nop
xchg
and
and
jmp
divb
das
sbb
or
mov
dec
jp
je
aad
cltd
xlat
and
add
ss
mov
aam
pop
pop
or
std
outsl
das
shll
jnp
dec
cwtl
jp
inc
mov
ficoml
mov
mov
or
xchg
mov
cmp
jmp
addr16
jmp
jp
nop
call
jp
leave
add
ds
add
xchg
insl
inc
pop
and
jmp
xor
shrb
mov
jecxz
stos
out
insb
gs
mov
cmp
adc
in
insb
sbb
clc
insb
adc
dec
pusha
xor
je
daa
movl
gs
std
mov
rcrl
ret
gs
pop
scas
cs
fidivl
adc
pop
hlt
scas
jne
loopne
int
cld
add
out
mov
out
add
xchg
in
or
sub
enter
inc
stc
jo
or
inc
push
jae
mov
test
lods
lret
pop
xchg
pop
test
xchg
push
mov
adc
pop
pop
inc
push
clc
xchg
mov
dec
lcall
shrb
scas
cmp
sbb
cmp
out
dec
shlb
or
add
jno
loope
sub
lods
dec
in
into
mov
sub
push
sar
inc
out
cmp
jbe
roll
xchg
mov
cmpsl
or
rorb
dec
jae
mov
jbe
loope
mov
aad
aas
addr16
ret
sbb
sbb
mov
cwtl
adc
iret
and
jp
mov
or
jne
popl
or
movsb
repnz
mov
insl
ja
cs
sub
adc
mov
inc
mov
xchg
xchg
push
rol
mov
icebp
jbe
daa
push
aaa
flds
sbb
jno
in
dec
dec
xchg
pop
inc
adc
mov
inc
fistpll
in
mov
pop
ret
inc
fwait
inc
out
pop
jp
xchg
pop
addr16
xor
sbb
js
jno
rclb
mov
andb
adc
repnz
cmp
sbb
dec
jle
outsb
adc
cwtl
pop
cld
test
aaa
outsl
inc
dec
repz
adc
fs
jns
loop
push
call
imul
mov
and
imul
xchg
jbe
arpl
lock
ja
cmp
pop
sub
clc
mov
cwtl
fmul
cmpsl
adc
ja
push
mov
adc
cmp
cltd
mov
lcall
push
pop
cmpsl
outsb
pop
inc
inc
imul
cmp
inc
mov
mov
pop
mov
loopne
xlat
test
out
insb
popf
push
sbbl
or
push
push
xchg
and
popf
addb
xchg
push
ja
out
dec
enter
pop
pop
fnstenv
sbb
mov
mov
adc
mov
sub
enter
mov
add
dec
inc
adc
or
fldt
pusha
loope
aam
adc
sub
jno
xchg
pop
jmp
mov
xor
imul
ficomps
in
xor
insl
ficomps
inc
mov
inc
cmp
ljmp
mov
push
in
push
fcomip
hlt
push
inc
add
mov
fs
outsl
aam
and
data16
inc
pop
stc
mov
outsl
ficoms
inc
rorb
aam
or
std
sub
push
fldl
insb
or
daa
je
lcall
adc
rcrb
mov
cld
lds
scas
js
filds
repz
mov
fldl
mov
repnz
mov
imul
sahf
dec
stos
xor
fdivs
pop
rorb
pop
push
inc
lret
sbb
add
repz
and
lods
aam
mov
hlt
popf
inc
jno
imul
enter
mov
pop
js
rolb
mov
mov
frstor
or
xor
imul
push
loope
pusha
jle
fs
inc
ror
pop
dec
outsb
add
ljmp
mov
jmp
lret
and
xchg
jne
adc
int3
sub
xchg
out
push
dec
or
fwait
xor
push
adc
mov
clc
jno
mov
jle
xchg
nop
popa
push
and
xchg
add
rcr
fmul
data16
cmp
enter
or
xchg
je
std
scas
enter
cmp
lea
pop
mov
pop
add
push
xor
pushf
imul
mov
rcrb
lret
add
cmp
mov
fidivs
fwait
adc
movl
inc
into
push
scas
or
jp
mov
adc
pop
mov
sarl
testb
sbb
ds
cmc
outsb
xchg
jge
andb
add
sub
sbb
shl
sbb
es
lea
clc
inc
popa
and
fsts
jp
sbb
and
aas
or
dec
aaa
call
jnp
pop
cltd
leave
cmp
jbe
fldenv
inc
inc
roll
aas
enter
adc
mov
pusha
sbb
stos
cmc
sbb
inc
fdivl
and
jecxz
push
int
shr
fcmovu
xchg
cmpsl
mov
push
test
push
mov
mov
loop
jo
into
cli
inc
je
xor
and
or
dec
xchg
inc
stos
fs
mov
out
inc
stc
and
mov
rcr
fsubrs
mov
ja
mov
push
cmp
jle
xchg
decl
testb
popf
rclb
sub
and
test
or
subl
or
and
stos
dec
pinsrw
imul
push
lret
daa
mulb
pop
inc
sbb
rolb
cld
into
testl
imul
and
mov
subb
in
sbb
jg
or
xor
mov
fsubrs
orl
dec
sbb
xor
xchg
out
adc
adc
loope
call
mov
push
lcall
loop
mov
xchg
in
sbb
test
add
xchg
pushf
fwait
inc
pop
shlb
int3
icebp
clc
loope
sbb
fsubr
mov
pop
int3
xchg
mov
andl
pusha
and
cmp
lret
jl
out
pop
fs
test
dec
xor
sub
ss
push
ret
cmc
inc
adc
push
loop
arpl
mov
add
inc
rorl
ljmp
ljmp
push
inc
mov
pop
inc
je
hlt
sbb
mov
cltd
out
into
mov
jbe
fwait
xor
std
inc
imul
cmc
sub
mov
sahf
pushf
xchg
mov
xchg
xor
cmp
cmp
add
jl
cmpsl
scas
scas
sub
dec
orl
cs
sbb
push
pop
mulps
lock
pop
test
test
sub
fists
mov
aad
rcrl
aam
adc
adc
sti
leave
push
mov
lock
lock
aas
push
out
fildl
push
imul
sbb
pop
fcmovu
xchg
adc
ret
sub
push
jne
imul
adc
enter
add
mov
insl
xchg
pop
mov
test
dec
jo
adc
test
add
mov
push
int
mov
cmpsl
js
imull
mov
fists
fiadds
cmp
or
mov
mov
sub
or
add
sbb
mov
mov
mov
sub
ljmp
pop
aam
std
jbe
repnz
sbb
stos
popa
xor
and
and
xor
xchg
inc
aad
ret
jno
push
mov
ljmp
repz
jl
add
adc
jge
push
out
call
neg
dec
mov
jnp
push
fucomi
lea
rcl
pushf
addr16
out
sbb
lahf
jecxz
es
stos
lret
or
mov
mov
pop
aad
push
in
push
das
add
pop
test
addl
scas
mov
mov
idivb
daa
je
and
int3
add
in
inc
xchg
jmp
ljmp
aam
insl
je
push
mov
jbe
mov
pop
lret
pusha
stos
mov
push
shll
cmpsb
xor
idivb
mov
scas
cli
sbb
cmp
call
jle
inc
sahf
stos
add
repnz
jl
xchg
jmp
lret
push
fnstenv
or
rorb
add
jl
push
addr16
xchg
divl
cld
rorl
das
push
mov
jne
pop
mov
ja
push
mov
xchg
cmp
pop
ret
mov
pop
pop
repnz
and
leave
add
lods
ret
ja
fs
adc
cli
call
nop
aam
nop
jo
in
stos
into
dec
sub
lcall
xor
push
shrl
ja
insb
inc
jl
mov
fisttps
push
aas
lret
push
lretw
adc
xor
pushf
inc
sub
pop
imul
aad
push
pushf
adc
fyl2x
pop
xchg
jp
cs
ss
lods
addr16
mov
jno
arpl
adc
je
and
sahf
mov
test
pushf
xor
das
jnp
clc
lock
add
mov
jecxz
xchg
xchg
jo
and
dec
inc
pop
push
mov
sub
fs
in
mov
add
mov
add
add
int
lret
test
mov
ljmp
hlt
xor
mov
fadd
rcrl
sbb
or
ljmp
jmp
and
jp
js
cmpsb
xor
xlat
jl
lods
mov
jnp
adc
mov
xchg
jne
pop
add
jnp
mov
scas
testb
mov
lcall
inc
sbbl
inc
mov
mov
ja
ret
mov
push
jle
imul
cld
inc
and
sub
mov
flds
cwtl
pop
jge
je
and
cmp
pushf
lret
js
xor
fwait
lcall
push
mov
les
dec
scas
movsb
sub
sbb
lcall
das
aaa
xchg
add
es
push
adc
into
jmp
cld
or
fdiv
add
push
xor
cmp
jnp
repnz
arpl
push
pop
xchg
fimull
mov
push
or
and
lea
jmp
clc
in
stc
fs
xchg
fs
out
mov
xor
int3
mov
ss
subl
pop
and
mov
or
sti
imul
andb
push
mov
cmpsl
xlat
cld
pop
loopne
rcll
mov
je
mov
pusha
or
femms
fists
adc
sbb
adc
sbb
stc
nop
push
das
cwtl
xor
rolb
adc
dec
jns
scas
inc
ss
xchg
pop
out
je
popa
pop
jle
push
aad
add
nop
hlt
xchg
fildll
pop
jmp
test
ds
test
pop
mov
or
jle
inc
mov
ja
gs
dec
popa
jno
pop
shl
shlb
pop
mov
and
aaa
dec
cmp
insl
loop
subb
ret
mov
and
and
sbb
daa
loop
adc
add
inc
aam
aaa
hlt
fadds
mov
out
ds
push
cmp
dec
xor
or
inc
aaa
add
outsb
in
mov
and
add
imul
ficoml
in
je
push
xchg
mov
mov
mov
mov
mov
xor
jge
pop
jg
pop
inc
icebp
les
sarl
pop
jmp
imul
jmp
ret
inc
dec
add
loope
in
fdivr
sbb
push
or
pop
into
in
insb
leave
sub
test
lcall
mov
daa
jmp
jle,pn
mov
pop
xchg
jae
inc
pop
outsb
cmp
add
js
push
loopne
imul
jecxz
jo
test
sbb
pop
inc
and
push
rorl
das
adcl
lcall
and
leave
and
adcb
or
in
and
daa
aad
cwtl
sbb
cmp
push
mov
dec
daa
ja
loope
repnz
xchg
in
dec
and
sub
push
mov
dec
into
push
mov
jne
sti
insl
sub
int
inc
add
mov
std
jne
pusha
cmp
sarl
mov
arpl
push
leave
test
add
sbb
scas
notl
jle
and
mov
push
popf
fmull
arpl
mov
loope
fdivs
adc
mov
xor
orb
cmp
adc
arpl
mov
stos
insl
jne
xchg
mov
mov
mov
cmp
loop
and
mov
imul
dec
sbb
ss
scas
inc
arpl
adc
adc
insb
lds
mov
nop
pop
mov
bound
fcomp
xor
cld
sar
ljmp
jmp
pop
pop
stc
mov
shl
insb
sbb
cmp
leave
mov
and
mov
add
pop
jge
xchg
mov
ds
sbb
popa
or
mov
xor
jg
lock
push
cltd
or
add
jle
adc
cwtl
dec
xor
lea
inc
and
lea
push
subb
ja
or
nop
sub
imulb
jge
mov
adc
mov
call
testl
xchg
add
inc
sub
push
and
lods
push
mov
mov
xchg
popa
jp
out
mov
fst
pop
jmp
mov
mov
inc
fdivl
add
pop
lret
mov
shrb
pop
pop
sti
sub
mov
jno
jnp
lods
cs
sbb
mov
es
rcll
xor
aaa
loope
adc
or
cld
pop
mov
push
dec
pop
sub
cmp
jg
sub
inc
xor
or
xor
add
fwait
rorb
fwait
sahf
lods
sti
stos
xchg
push
mov
cmp
mov
pop
jb
or
mov
cmp
fcompl
cmp
out
call
mov
or
pusha
popa
cmp
stos
imul
ret
in
xchg
hlt
cmpsl
inc
xchg
es
adc
xchg
cmpb
adc
xchg
jnp
jbe
pop
int
mov
loop
jo
inc
push
out
scas
testl
into
inc
mov
roll
jl
mov
es
xor
mov
orl
add
cltd
fsubrl
imull
push
cmpb
test
inc
ror
lock
es
and
cmp
and
shrb
lret
sbb
pop
inc
ja
jo
inc
xchg
test
mov
add
fcomip
add
jl
add
sbb
into
cmp
orl
repnz
popa
popa
mov
or
add
sbb
outsl
addr16
push
sbb
cwtl
add
cmc
xchg
or
mov
popf
leave
jecxz
and
pop
pop
inc
push
cmp
jg
cmp
jae
inc
scas
insl
sarl
imul
or
mov
push
push
dec
push
sub
stos
into
cmp
xlat
inc
stos
dec
sbb
jp
sub
int3
arpl
lahf
xor
push
lea
jns
out
mov
add
jnp
xchg
mov
cmp
sbb
cmp
sahf
push
aas
cmp
pop
mov
lods
mov
mov
mov
rcl
out
pop
jp
cwtl
icebp
out
inc
dec
out
adc
popf
clc
dec
jnp
jmp
das
lahf
movsl
or
shrb
ret
adc
or
sbb
sbb
scas
int
fnstcw
fdiv
add
repnz
add
mov
div
loop
pop
jg
xchg
add
sti
leave
sarb
cmp
xor
lret
mov
pop
jae
mov
mov
inc
sbbl
inc
inc
pop
sahf
ret
cltd
push
cli
decb
cmp
or
icebp
cmpsb
in
xlat
adc
inc
add
xchg
sahf
xor
mov
or
movsl
lea
fcompl
xchg
clc
dec
sbb
arpl
scas
lahf
shrb
sbb
add
mov
mov
xlat
mov
out
imul
push
je
outsl
rorl
xor
daa
ljmp
adc
jb
pop
add
movsl
dec
nop
insl
jnp
mov
mov
adc
xchg
mov
adc
outsb
xchg
out
mov
jecxz
sbb
es
dec
stos
in
test
adc
lahf
and
mov
sub
popa
sbbb
ret
adc
in
faddp
mov
add
push
adc
out
add
movsb
out
mov
lea
or
xchg
outsl
ss
sub
hlt
mov
xchg
sub
mov
jae
xchg
lock
dec
sub
push
into
movsl
push
into
dec
rorb
dec
outsb
xlat
icebp
jae
cmc
into
sub
dec
popa
push
pop
jne
jge
sahf
ja
xorl
fistps
sbb
ja
pop
stos
mov
push
notl
aaa
sarl
mov
fistl
pop
add
mov
in
popa
xor
in
js
mov
je
das
add
js
xor
adc
insb
dec
or
mov
push
push
dec
jns
sbb
pop
ljmp
fbld
cmc
shrb
jnp
aad
jmp
cld
lahf
cmp
fcoms
out
mov
icebp
mov
jmp
xchg
shlb
repz
xor
cmc
pop
inc
jae
or
fprem
jmp
rcl
mov
cmpl
ret
mov
into
or
push
rorb
and
inc
bound
mov
aam
mov
addr16
mov
gs
cmp
inc
jb
cmpsb
sbb
mov
sub
xchg
lea
or
shrb
stos
inc
dec
mov
sbb
jl
cmp
lahf
xchg
sub
leave
cmp
fisubl
lock
bound
or
ret
test
pop
jecxz
xor
ret
push
subb
jecxz
or
jle
xchg
jae
add
iret
cli
inc
sbb
or
xchg
xchg
cmpsb
pop
lea
mov
jmp
adc
rolb
fwait
loope
inc
in
xchg
jg
ret
jnp
mov
outsb
dec
mov
out
daa
pop
mov
cmpsb
add
jo
and
or
icebp
or
filds
mov
push
repnz
scas
pop
lcall
sbb
lret
xchg
push
xor
movsl
cmc
arpl
ljmp
xlat
outsl
pop
push
rcl
inc
push
sub
mov
ds
sbb
imul
pop
aas
jb
mov
jnp
inc
push
gs
mov
push
jle
imulb
pushf
inc
sbb
cmp
mov
insl
out
mov
pop
lret
sbb
aas
xor
test
cmp
mov
mov
addr16
jp
dec
and
loope
les
sarb
xchg
jg
mov
fcompl
imul
in
inc
dec
out
or
dec
xchg
fadds
and
or
outsl
shll
jns
clc
clc
inc
fists
not
pop
sub
fistps
out
stos
in
mov
not
pop
and
or
mov
or
jge
mov
sub
xor
inc
arpl
xchg
mov
dec
lret
mov
xchg
lea
mov
xor
stos
and
shll
mov
lock
mov
aad
nop
cmpsl
adcb
adcb
add
dec
cld
pop
mov
sbb
fistpll
and
or
out
or
pop
ja
mov
imul
outsb
or
or
js
arpl
addl
mov
outsl
insl
cmp
bswap
add
lcall
mov
xchg
adc
lret
xchg
cmp
mov
push
test
repnz
test
andb
outsl
inc
xchg
dec
pop
inc
xor
testb
stos
mov
xor
xor
loop
imul
sbb
push
in
sub
pusha
fcmovb
jp
cmpb
ret
aam
cmp
ret
imul
xchg
cwtl
pextrw
mov
cwtl
pop
lock
sbb
insl
xchg
lods
mov
push
pusha
rcll
push
mov
jg
sub
pusha
test
arpl
adc
inc
lahf
js
adc
scas
jmp
jae
cmpsb
mov
mov
jno
arpl
and
test
dec
xor
push
popf
mulb
jbe
dec
movsb
mov
ja
cli
xchg
and
mov
cmp
mov
icebp
pop
xchg
or
stos
sub
sbb
pop
mov
loop
scas
lcall
lcall
adcl
outsb
push
push
ja
in
inc
popa
and
lock
cld
arpl
dec
inc
sbb
hlt
repnz
lods
or
mov
xor
jmp
idivb
pop
dec
daa
lock
jle
test
mov
or
push
xor
ret
sbb
insb
jp
sahf
loopne
fldl2t
pop
push
mov
mov
xor
mov
int3
stos
xlat
sub
insl
mov
mov
mov
jbe
cltd
fcmovb
int3
or
ret
in
icebp
sbbb
subb
es
push
mov
dec
data16
xor
lahf
in
test
jb
adc
mov
push
out
pop
lahf
scas
mov
mov
cltd
adcb
sbb
cmp
in
mov
jg
rcrb
sti
and
mov
icebp
push
jl
out
sbb
cltd
andl
dec
ja
or
inc
pop
add
push
dec
cmpsl
testb
cmp
ja
lret
push
fld
leave
sarl
dec
cmp
mov
xchg
rcrb
xor
dec
ret
dec
vhaddps
jae
add
mov
push
mov
mov
sbb
dec
jae
pop
push
rolb
sub
cmpl
je
jmp
or
jae
mov
icebp
pop
call
adc
or
sub
sub
pop
push
xlat
adc
jle
push
clc
lahf
fiadds
hlt
mov
sub
or
mov
mov
add
dec
enter
mov
mov
mov
outsb
jno
mov
mov
cmp
test
jg
adc
movsb
stos
pop
jo
mov
test
int
mulps
pop
insl
aas
daa
lret
cld
mov
mov
es
andb
pop
and
mov
leave
popf
and
dec
sub
ja
dec
cmp
push
push
dec
pop
inc
repz
mov
xor
std
loopne
add
cmp
sbb
std
lcall
in
xchg
out
mov
jp
and
ljmp
shlb
inc
xchg
push
add
dec
sbb
cmpsl
mov
arpl
cmpsl
in
cmpl
insl
fidivs
out
push
rolb
jl
aad
fs
scas
mov
rcll
fnstcw
push
mov
push
xchg
in
aas
popf
jnp
int
pushf
shl
sbb
sub
xor
push
add
sbb
push
push
fstps
push
imul
push
push
xchg
jmp
and
test
adc
cmp
add
aas
push
add
dec
sub
push
insb
mov
push
cltd
push
xor
pop
scas
jnp
inc
enter
add
jno
pop
cwtl
xchg
pop
push
fsts
leave
ret
nop
insb
cltd
addr16
flds
lods
pop
fcompl
fnstenv
mov
mov
lods
jp
das
xchg
cmp
pop
clc
repnz
xchg
add
fdivs
mov
icebp
mov
xlat
repnz
mov
inc
mov
sbb
int
mov
mov
lods
in
jb
dec
push
dec
mov
mov
roll
dec
pop
dec
pop
pop
dec
push
mov
int
shlb
aaa
mov
cs
push
xstore-rng
cmpsl
xchg
cwtl
push
adc
cmp
push
in
imull
test
pop
cmp
lea
ficompl
jmp
or
sbb
mov
mov
sbb
lahf
or
mov
cs
movb
lret
insb
in
inc
adc
imull
pusha
pop
jnp
addr16
inc
inc
xchg
pop
inc
lock
lods
sub
push
mov
test
out
pushf
push
sbb
inc
movsb
push
adc
mov
nop
in
push
aaa
in
dec
jb
stc
sti
shlb
ja
mov
adc
mov
cs
xor
adc
roll
mov
into
mov
or
adc
dec
dec
int
stos
sub
test
mov
lods
push
dec
inc
mov
fdivr
jge
nop
push
push
sub
fnstcw
push
push
movb
xor
lret
jecxz
fadd
adc
push
cmp
mov
sub
int3
mov
mov
add
sbb
sbb
jbe
sbb
jmp
pop
sti
filds
mul
and
pushf
in
int
xor
cmc
and
stc
aaa
sub
ret
test
lret
pop
ljmp
jge
sub
push
test
fsub
jae
mov
and
push
ret
inc
mov
fstps
push
call
or
and
inc
in
out
push
xchg
jp
add
pop
mov
loop
addl
out
add
mov
xorb
mov
in
aad
test
ror
mov
jbe
pop
inc
aad
jle
mov
outsb
xor
xchg
xor
dec
leave
hlt
int
enter
mov
sub
mov
and
sbb
insb
out
inc
jmp
pop
imul
xchg
jmp
aam
subb
lcall
cmpsl
xbegin
xchg
loope
jns
adc
xor
mov
inc
jns
mov
leave
out
inc
pop
xlat
inc
or
movsl
jnp
add
push
in
sbb
pop
data16
shrl
or
mov
sbb
push
cwtl
sarl
sti
jo
and
hlt
xor
mov
jle
mov
push
outsb
add
mov
sbb
mov
pop
push
xchg
sub
xlat
les
setle
inc
push
std
cmp
mov
xchg
sbb
lock
fisttps
cld
push
aad
push
xor
xchg
es
add
je
jle
hlt
pop
aas
insl
out
xor
mov
mov
push
dec
popa
dec
or
adc
int3
je
jg,pt
and
movsb
push
cmpsb
orb
repnz
jmp
jo
cli
addr16
repz
xchg
test
mov
inc
and
pusha
iret
jge
xchg
lahf
in
dec
test
fs
dec
xlat
out
fisttpll
out
insl
dec
popf
push
rcll
loope
in
out
jle
push
and
daa
sbb
cmp
ljmp
andl
sub
bound
int3
data16
shl
ss
or
xchg
int
pop
dec
fcompl
mov
call
cmp
fwait
mov
push
sbb
cmc
dec
xchg
cmp
pop
rorb
adc
icebp
imul
sub
insb
inc
out
add
xchg
in
adc
inc
mov
or
xchg
pop
ret
repz
rorb
fs
orl
stc
scas
fildl
test
mov
cmp
clc
icebp
enter
insl
cltd
and
outsb
std
sub
js
aas
enter
subl
sti
dec
mov
dec
out
clc
add
icebp
sbb
adc
sarb
or
xchg
out
cmpsb
or
lret
mov
and
icebp
and
pop
lods
sub
add
rorb
outsb
cmpsl
cmp
or
xchg
cmp
outsl
loop
fs
jmp
out
sbb
mov
mov
lret
loope
xchg
dec
cmp
adc
dec
in
movsb
out
xchg
mov
pusha
pop
fidivl
xor
mov
pop
pusha
stos
mov
or
sbb
mov
insb
lods
bound
xchg
andb
scas
outsb
les
and
movsb
cmp
mov
cmpsl
cmp
sarl
movsb
pop
test
fcoml
nop
in
jo
inc
push
ret
mov
mov
in
popf
mov
movsl
sarb
ficoml
adc
mov
dec
cmp
in
mov
cmpsl
fsubrs
add
dec
cltd
dec
jp
jne
test
outsl
push
inc
stc
addl
shl
iret
stos
sbb
mov
mov
adc
cmpsl
sub
ds
mov
cmp
sbb
jecxz
ret
lods
jl
push
push
pop
xor
pop
in
mov
add
jge
jbe
outsb
jae
out
jmp
test
xchg
mov
and
sbb
adc
cmp
fcmovb
outsl
ficoml
mov
fisubs
mov
mov
sub
imul
and
mov
lea
dec
pop
cmc
or
pushf
arpl
movl
mov
mov
mov
adc
dec
xor
cmp
bound
icebp
repnz
dec
xchg
aad
xchg
and
push
pushf
cmp
popf
lret
insb
jp
psubd
repnz
scas
or
hlt
jmp
sbb
mov
stos
jp
int
inc
jp
je
inc
loop
xacquire
jbe
sub
mov
mov
xchg
jb
pop
js
fisubs
push
push
lods
cmp
dec
hlt
mov
sbb
sub
xchg
inc
mov
or
jl
mov
pop
xchg
adc
incb
cmp
push
lock
jb
mov
and
xchg
push
sbb
pop
xor
imul
adc
ret
ss
sti
sub
pop
inc
jns
lret
sbb
xchg
scas
cmp
pop
jns
sbb
sti
aad
push
mov
xchg
popa
or
inc
sub
mov
getsec
and
icebp
adc
dec
cmp
jl
dec
cltd
movsl
jns
shlb
scas
enter
sbb
es
push
hlt
arpl
sub
xchg
pop
dec
xlat
out
cmp
nop
xor
enter
pop
jbe
fstps
icebp
pop
cmp
jo
int
push
mov
sbb
icebp
xorps
push
fmulp
and
loope
xchg
add
pop
sub
rcr
lahf
rclb
xchg
cmp
add
dec
ret
mov
addr16
mov
stos
insb
addr16
ljmp
adc
shlb
push
mov
cmp
cmpsb
arpl
ja
pop
movl
data16
and
jg
jg
in
xchg
les
push
out
mov
int
fidivl
loop
aaa
jnp
mov
mov
inc
gs
cli
xchg
arpl
stos
in
movsl
sbb
pop
or
add
ret
outsl
push
dec
test
jb
xchg
dec
mov
dec
inc
stos
inc
int3
jge
mov
jecxz
jae
cmc
mov
mov
jg
jne
sub
xchg
test
cmpsb
ljmp
pop
andl
in
jae
xchg
xor
arpl
jp
sub
jns
cli
std
adc
dec
xchg
cmp
test
mov
out
push
cmc
lods
je
xor
shlb
xchg
mov
xchg
dec
insb
push
cwtl
mov
sarb
aaa
mov
pop
sbb
inc
push
cli
add
push
mov
inc
sub
mov
mov
mov
xchg
or
arpl
push
cld
mov
sub
cli
pop
aad
inc
iret
adcb
xchg
ficompl
xor
lods
and
repnz
sbbb
mov
jg
into
jle
loopne
lcall
sbb
sti
fisttpl
push
jnp
push
xchg
mov
sbb
sbb
push
or
sbb
cld
test
jecxz
mov
add
repnz
int3
or
ds
xchg
mov
adc
or
jb
ficompl
imul
pop
movsl
push
mov
stos
popf
and
loope
les
imul
sub
mulb
mov
leave
add
mov
jbe
xchg
and
or
inc
lcall
xor
ja
mov
les
lret
or
mov
dec
ret
mov
fdivl
xchg
xchg
or
fisubrs
dec
lea
fsubl
out
and
scas
xlat
add
push
xchg
std
sbb
and
mov
xchg
mov
ljmp
movsb
cwtl
gs
inc
insb
fs
js
dec
inc
dec
cwtl
mov
stos
loop
repnz
xor
adc
push
scas
push
pop
loop
cmpb
ds
mov
or
shll
insl
jne
jmp
ret
inc
je
mov
add
xchg
movsl
std
in
rcll
xor
and
jne
cli
call
mov
fcomp
sbb
testb
adcl
nop
or
mov
add
jmp
push
jg
in
dec
inc
sysenter
pop
jecxz,pn
daa
dec
push
daa
inc
mov
jmp
pop
gs
int
push
cmp
mov
push
test
fnstcw
outsb
mov
dec
push
cli
adc
lcall
stos
and
loopne
pop
inc
aas
js
and
mov
add
subl
test
inc
les
cmp
xchg
sbb
mov
lahf
in
mov
adc
mov
add
xorl
leave
aas
mov
decb
xor
sub
jge
insb
mov
xor
add
out
and
mov
cmc
mov
sub
adc
add
pop
jge
sub
movsl
out
cmp
xchg
jae
pop
xor
mov
mov
mov
cmpsl
mov
sbb
ljmp
inc
cmp
into
sub
cmpsl
imul
pop
push
jl
inc
push
int
out
fisubrl
jns
fnstcw
mov
mov
mov
or
ja
mov
jg
or
jl
sbb
pop
pop
push
jecxz
push
xlat
orb
add
aad
cmpsb
ljmp
outsl
in
insl
mov
loop
add
pop
xor
lahf
test
nop
jae
stos
iret
xor
add
inc
lret
dec
jns
mov
js
das
jp
or
enter
push
mov
dec
cmc
xchg
mov
adc
and
scas
cmp
sbb
inc
fstpt
loopne
adc
fwait
mov
mov
sbb
xchg
adc
jg
aam
aaa
mov
xlat
jle
leave
insl
idivl
ficoms
sub
sbb
adc
xlat
mov
push
cmp
inc
dec
jae
cmc
das
jne
pusha
dec
sub
push
fisubl
jl
adc
inc
jp
xchg
mov
jmp
pop
pop
mov
loope
movsl
insb
aaa
lret
les
in
aad
shrl
je
sbb
xor
sub
bswap
jge
lret
xlat
fdivrs
outsl
xchg
sbb
xorb
mov
je
xchg
das
dec
scas
stc
and
and
pop
in
test
mov
or
inc
mov
imul
dec
lcall
movsb
icebp
and
out
pop
push
push
cmpsl
mov
adc
push
mov
adc
inc
imul
xlat
aam
lret
aas
int
movsl
push
push
test
cltd
mov
add
lret
sbb
lret
cs
leave
lcall
insl
pop
outsl
pop
or
sbb
push
jae
cmpsb
pusha
jno
push
pop
sti
out
mov
xchg
xchg
cltd
lods
add
cld
push
xor
mov
ret
pusha
lock
popa
in
fsubrs
cs
outsl
xchg
sti
jmp
outsl
and
mov
jecxz
inc
sbb
push
call
xor
repnz
jmp
mov
sbb
in
in
and
mov
outsl
shrb
movsl
mov
xchg
or
dec
pop
mov
or
aas
es
ljmp
lods
jne
mov
cmp
mov
bound
aaa
and
hlt
jmp
jnp
jmp
sbb
mov
call
xchg
push
cmc
adc
jns
neg
or
fwait
in
data16
inc
xor
pop
pop
xlat
leave
pop
jne
mov
jge
sbb
movsl
out
add
sub
cmp
cmp
adc
call
add
mov
dec
out
scas
or
dec
data16
leave
movsl
lahf
cmpsb
sub
cmp
fs
daa
es
sub
std
xchg
lods
call
loopne
dec
lock
pop
int3
in
pop
fldl
push
or
daa
dec
jmp
and
mov
xchg
movl
mov
pop
ret
je
and
add
xor
inc
cli
fwait
jge
inc
int3
sti
cmp
das
jmp
adc
sbb
adc
insb
rcrb
or
cmp
test
mov
or
or
xlat
mov
sbb
mov
lcall
lock
dec
jl
mov
xor
and
mov
mov
es
iret
cmpsl
adc
mov
xchg
push
orl
cmp
and
jmp
movsl
call
insb
pop
xchg
insb
lods
je
jbe
pushf
jmp
mov
mov
in
mov
ja
push
movsb
pop
test
repz
push
push
in
push
push
test
cmp
inc
lds
xchg
xchg
std
and
outsb
add
inc
inc
popa
fcomps
push
pusha
sbb
jp
ret
imull
test
leave
xor
icebp
cwtl
out
sbb
jo
pushf
push
pop
cmp
mov
push
sbb
movb
ret
test
mov
adc
mov
mov
fildl
fisubrs
mov
push
and
jbe
pop
dec
sbb
mov
orl
adcb
adc
pop
sti
jno
mov
ficoml
repz
icebp
push
xchg
clc
test
mov
sub
pushf
mov
sti
pushf
leave
nop
jecxz
js
div
pop
sub
fwait
xchg
sti
int3
bnd
inc
sti
fistps
xor
stos
leave
loopne
cwtl
add
testb
pop
aad
mov
data16
inc
out
or
and
add
jnp
dec
xchg
mov
rclb
mov
faddl
test
rclb
lea
fistps
movsb
shll
lods
stos
lret
pop
in
cmc
jmp
xor
jle
stos
and
jmp
in
idivb
pop
ds
sti
or
pop
ficoml
out
xchg
fwait
dec
cld
test
pop
and
js
push
fsts
in
or
arpl
rol
mov
jle
shlb
loopne
and
sti
cmp
push
mov
dec
and
jmp
imul
jl
cmp
pop
push
mov
mov
dec
add
ret
inc
adc
xchg
pushl
testl
leave
cmp
mov
push
and
xchg
fisttps
out
inc
notb
jne
lods
xorb
ss
lock
scas
stc
mov
loope
xchg
push
hlt
adc
insb
nop
sbb
and
arpl
push
cmp
cmp
adc
sub
add
leave
pop
cmp
ret
lds
or
push
mov
bound
lahf
out
mov
mov
movsb
es
jle
shlb
adc
add
int3
scas
leave
inc
je
push
and
push
test
fwait
mov
stc
inc
sub
dec
movsb
fwait
mov
adcl
daa
lahf
repz
and
lds
icebp
xchg
jge
ss
sub
call
test
scas
ret
inc
push
hlt
insl
dec
cmp
xchg
xor
xor
xor
jbe
pop
xchg
mov
inc
cld
mov
cmp
outsb
es
scas
add
and
xor
sub
movsb
cmp
inc
sti
leave
jns
out
mov
fisubrs
imulb
xchg
pop
push
push
lods
pop
mov
xor
inc
or
xchg
mov
mov
pop
fldenv
mov
idivb
xchg
adc
mov
xchg
sub
mov
dec
sbb
inc
sub
jl
mov
ljmp
ret
add
stos
xor
xchg
out
ljmp
cmp
pop
fs
test
lcall
push
ret
sbb
xchg
cmp
mov
ja
pop
mov
sbb
inc
daa
cmp
mov
out
aaa
xor
imul
leave
pusha
test
lret
lret
xor
movsl
mov
pop
xchg
inc
push
add
add
icebp
popa
das
jmp
pop
jo
les
daa
in
add
into
ret
je
insb
sub
in
loopne
jbe
sub
imul
in
out
jp
mov
jg
dec
aam
mov
in
or
inc
std
shl
mov
shrl
cmp
xchg
jg
xchg
dec
jmp
push
adc
sub
mov
cwtl
call
push
push
addb
and
and
jb,pn
int3
inc
push
push
dec
popa
aad
sbb
int
jmp
adc
orb
mov
enter
xor
lock
mov
push
clc
mov
cs
sti
mov
sub
sbb
in
aam
push
fimull
iret
mov
mov
in
es
in
mov
dec
fcoms
xchg
mov
ret
and
pop
out
data16
sbb
in
and
mov
cltd
sub
mov
les
imul
cwtl
sbb
push
dec
js
icebp
inc
xchg
movsb
das
aad
sbb
inc
xchg
pop
mov
sbb
xchg
in
push
and
sub
orl
sbb
cmp
xor
rcr
nop
lods
aaa
lds
movsl
in
out
xor
pop
dec
mov
lods
xchg
or
dec
imull
es
pop
fimull
addr16
sar
xchg
pop
add
cmp
pushf
scas
lods
xor
cmc
sbb
cmp
out
imul
scas
cmp
xlat
int3
out
cmpsl
imul
adcb
iret
adc
aam
stos
pop
scas
xor
mov
iret
mov
gs
or
sub
cltd
stos
stos
adc
addr16
lcall
pop
mov
push
bnd
jbe
pushf
je
fldenv
cmpsb
stos
jo
test
popf
add
sbb
in
mov
out
sub
mov
inc
cwtl
ljmp
pop
movsb
dec
pushf
jb
les
movsb
outsb
jl
pmullw
cmpsb
xchg
jnp
js
int
jns
mov
jle
xchg
jmp
mov
in
stos
mov
clc
push
inc
outsl
scas
mov
pop
push
sub
dec
test
sub
push
push
adc
popa
adc
push
push
hlt
je
cmc
jmp
xchg
mov
inc
pop
pop
pop
mov
sti
sbb
mov
nop
shll
sub
jmp
pop
nop
repnz
xchg
sub
test
fs
fmuls
std
rcrb
rcrb
jne
add
cmc
insl
mov
shll
shrb
rcll
dec
addr16
test
mov
lcall
scas
movb
sbb
js
popf
jecxz
xchg
dec
daa
subb
cmpsb
loope
mov
out
ret
sbb
mul
xchg
lods
loop
ret
mov
popa
pusha
mov
pop
sti
clc
aaa
push
mov
hlt
or
cmpsl
les
xor
jmp
cli
test
std
movsb
mov
sub
pop
popf
sbb
insb
sbb
fmuls
sbb
or
xor
xchg
mov
or
fidivl
jg
aam
lret
das
mov
stc
aas
xlat
mov
pop
bound
mov
or
cltd
cwtl
jae
call
lods
sbb
or
mov
xlat
imul
out
hlt
mov
cltd
sbb
ljmp
jg
jnp
inc
pusha
loop
mov
scas
aas
mov
shll
mov
dec
nop
sbb
cli
pop
out
dec
pop
outsl
jecxz
sbb
test
ficompl
mov
xor
js
jno
ds
test
fstpt
push
cltd
mov
cli
sbb
lds
loopne
mov
dec
fisttps
ss
sbb
movsb
or
mov
or
or
mov
fdivr
mov
jnp
dec
jae
or
cmpsl
in
jge
xor
and
jo
pop
sahf
xchg
xchg
jge
jge
and
stc
ret
in
lret
cmp
sub
push
sahf
outsl
xor
aad
roll
mov
sub
in
addl
xorl
push
in
test
insl
mov
pop
insl
mov
popa
test
xlat
jmp
mov
push
xor
xor
fs
in
mov
cs
cld
subl
pop
loop
enter
or
fadds
ret
inc
push
ss
mov
jnp
dec
out
sub
lods
into
add
test
inc
sbbl
hlt
add
addr16
sub
mov
mov
jb
sub
insb
dec
cmp
in
push
adcl
dec
addl
push
call
popa
imul
movsl
movsl
lret
push
pop
mov
xorl
out
mov
pop
outsb
or
out
inc
mov
and
mov
shlb
lret
or
adc
add
gs
cmpsl
or
inc
aaa
and
pushf
mov
add
nop
js
loope
out
jg
pop
fsubl
add
test
test
mov
jmp
xchg
int
int3
daa
pop
mov
and
pusha
pop
or
sub
ficompl
mov
sbb
xchg
leave
jmp
or
push
dec
mov
mov
repnz
lret
push
loop
fidivs
xchg
shll
mov
arpl
push
mov
inc
insl
iret
fprem
lds
jg
jo
insb
fcmovbe
dec
mov
mov
out
enter
push
lcall
mov
and
icebp
jl
and
inc
push
dec
or
push
cmp
sbb
add
xchg
je
pop
jo
xchg
add
or
lods
sbb
pop
push
imul
aad
pop
mov
and
add
mov
sbbl
nop
pop
punpcklwd
xchg
imul
mov
adc
push
loopne
or
jmp
xor
outsl
push
rcrb
mov
ja
add
pop
xor
shll
sub
and
lods
jne
dec
dec
push
mov
jmp
adc
imul
adc
add
push
call
popf
into
jmp
cmc
sub
xor
xchg
arpl
lahf
cmp
stos
and
mov
rorl
dec
cwtl
jae
sbb
into
stos
xchg
sbb
out
fisubrl
push
lahf
icebp
aad
fidivs
lret
sahf
push
orl
bound
imul
add
int3
and
roll
push
adc
mov
enter
pop
loope
hlt
cld
jne
gs
stc
mov
xlat
int3
xchg
int
cmp
aaa
xchg
and
mov
dec
pop
aaa
mov
movsl
inc
iret
inc
jle
loope
pop
or
sbb
das
enter
jl
pop
xchg
inc
lcall
mov
arpl
mov
fwait
mov
daa
sub
arpl
pop
enter
in
ret
mov
in
mov
adc
push
xor
fcompl
xor
push
push
aaa
or
xchg
mov
cwtl
mov
jg
mov
ds
mov
inc
jns
or
cs
mov
push
cs
dec
and
imul
mov
push
subb
dec
inc
ja
xlat
shr
aad
arpl
lds
subl
mov
push
push
ret
sbb
cmpsb
cs
fadds
inc
add
push
jecxz
lea
popa
xchg
jbe
fcompl
getsec
popf
mov
dec
inc
std
dec
mov
pop
fnstenv
ss
sbb
xchg
inc
jl
and
mov
cmp
and
repz
cmp
stos
inc
lcall
push
jl
xor
push
xchg
lods
push
cs
sti
stos
hlt
jg
pop
lea
pop
mov
cmc
jnp
xor
jno
inc
xchg
push
ljmp
inc
pop
xchg
loop
add
gs
or
cmpsl
adc
mov
push
inc
xchg
iret
sti
flds
notb
int
in
xor
iret
xor
adc
negl
add
ljmp
and
aaa
shrb
sbbl
mov
sub
push
pusha
push
pop
jnp
push
xor
cmp
ss
lret
nop
pop
popf
dec
push
lds
pop
mov
fwait
rolb
pop
rcl
inc
pusha
aas
addr16
sbb
xchg
fs
ja
push
jb
lea
adc
out
mov
and
xchg
pushf
jp
out
cld
ss
mov
enter
out
dec
stos
fidivs
push
dec
movb
mov
rclb
aam
cmp
sub
mov
dec
sub
xchg
arpl
jne
gs
lods
loope
hlt
test
xchg
jno
mov
sbb
mov
add
test
mov
aaa
sbb
aas
mov
mov
inc
or
repnz
cltd
mov
adc
aam
call
push
lock
jno
adc
fstl
les
cmp
fimuls
push
cmpsb
mov
outsb
jge
lea
and
popf
jge
add
pop
push
andb
mov
fidivrl
pop
mov
and
enter
lret
fcomps
out
or
lret
cmpsl
jp
out
movsl
in
jb
or
xlat
jg
mov
cwtl
ss
in
xor
in
ret
bnd
xchg
bound
rorb
push
dec
clc
adc
add
out
adc
pop
aaa
inc
lea
push
call
and
dec
xor
test
out
jg
sahf
add
inc
cmpsb
test
jno
xor
jmp
lret
int
lock
int
sahf
adc
es
sub
cmp
sbb
lret
mov
push
push
fidivl
xchg
xor
clc
call
or
sbb
mov
iret
movsl
das
fisubrl
push
insl
std
pop
negl
jp
mov
dec
aaa
repz
mov
lods
push
ret
add
push
rol
flds
aas
ds
jle
cmpsb
mov
scas
aad
pop
fcoms
or
cltd
stos
sub
pop
jb
and
leave
fmul
cwtl
add
outsb
xchg
insl
dec
sub
add
mov
fnstenv
mov
out
xchg
sbb
stc
sub
movsb
xor
mov
push
fcmovbe
inc
test
fistpl
sbb
sbb
dec
fcompl
in
push
cmp
sub
and
xchg
inc
ss
dec
or
mov
addl
sarb
xchg
lret
xor
daa
mov
jno
add
jle
push
shrb
mov
add
and
cs
fimuls
ljmp
rcl
mov
dec
sbb
pop
aaa
lods
sub
shll
out
xor
adc
mov
lods
inc
cwtl
dec
inc
xchg
sbb
aam
or
or
ret
jbe
fistpl
and
aam
rcrl
call
ljmp
fstps
adc
ja
jo
sub
lock
and
adcb
and
push
xchg
insl
mov
cli
mov
addb
mov
enter
std
inc
ss
sub
notl
or
lods
data16
mov
pop
mov
outsb
rorb
sub
pop
inc
push
rcrl
mov
mov
cmp
inc
or
cmp
cmp
pop
movsl
dec
ret
shl
cltd
stc
inc
stos
dec
cmp
mov
add
dec
test
inc
loopne
adc
arpl
ret
add
repnz
sub
cmp
inc
sub
mov
aas
aas
movsw
ds
cltd
pop
inc
les
adc
out
loope
lahf
cwtl
popa
mov
notl
xchg
ss
in
dec
ret
xor
mov
and
inc
ss
adc
ja
and
mov
mov
hlt
pop
cli
push
jnp
push
jno
lea
push
adcb
xor
movsl
fs
add
jno
jae
into
addr16
mov
test
jnp,pn
ror
outsb
cmp
les
aam
and
imul
mov
mov
arpl
jo
lock
sub
imul
inc
movsb
daa
xchg
inc
call
outsb
addr16
das
jno
fs
shll
dec
mov
mov
inc
idivb
mov
loope
loope
lds
call
xor
xor
sub
pop
insl
clc
in
pusha
cltd
gs
stos
imul
and
scas
push
push
stos
cmp
mov
inc
sbb
cmp
fiaddl
xchg
xchg
sbb
in
imul
andl
fs
cmp
mov
cmp
shlb
sbb
push
add
xor
mov
loop
cmp
outsb
jo
cmp
mov
lret
sub
jl
test
adc
aas
jmp
ljmp
arpl
cmp
out
push
sbb
rep
in
lret
popa
mov
cmpsb
mov
mov
sbb
cltd
mov
cmpsb
into
iret
dec
or
in
pusha
sbb
in
shl
rol
xchg
inc
ret
iret
out
and
cmp
popf
mov
xchg
nop
sarl
adc
rcr
in
xchg
cmovne
sub
js
cmp
sahf
dec
mov
or
jle
in
pop
or
dec
pop
jecxz
pop
cmp
xorl
inc
push
or
pop
cmpsl
cmp
sbb
xchg
sub
push
shl
sbb
mov
jnp
das
aas
pushf
fs
xor
jmp
push
ficoms
xchg
sbb
inc
or
jo
inc
das
push
xor
movsb
sbbl
orl
mov
in
das
aas
in
inc
mov
dec
sub
pushf
push
sbb
mov
push
sub
cmpsb
push
jne
xchg
adc
ljmp
mov
clc
push
add
jnp
dec
dec
xorl
and
mov
mov
mov
cmpsl
idivb
and
scas
pop
ss
jae
dec
xor
insb
fadds
xor
xor
push
mov
lcall
in
pop
pop
fcmovu
and
inc
nop
stc
pop
cmp
mov
xor
repnz
mov
and
push
mov
dec
dec
sub
xor
int
icebp
pop
daa
dec
xor
repz
xor
and
mov
jle
movsb
fdivrp
movsb
out
ss
xchg
pop
cmp
lcall
stos
push
lods
add
loopne
add
xchg
dec
cmpsl
add
shrl
fsts
shlb
cmp
adc
sbb
cltd
mov
dec
lods
sbb
mov
mov
enter
test
mov
jb
loope
inc
jb
cmp
xchg
push
push
xor
jbe
xchg
scas
dec
fcomps
inc
cmpsb
mov
adc
inc
inc
mov
popf
sbb
jae
inc
test
insl
cmpsl
stos
pop
sahf
roll
mov
test
movsl
insl
les
xor
rcrb
mov
lock
cmc
mov
mov
sbb
mov
sub
rcr
pop
or
jp
test
mov
shrl
sarl
aaa
inc
jg
fidivl
sub
ret
fwait
daa
pop
cmpsb
and
lcall
pop
xorl
pop
pop
mov
inc
ss
mov
and
pushf
rcll
and
push
fdivrl
adc
push
and
aam
or
push
stos
lock
shrb
xlat
mov
push
inc
or
loop
cld
scas
movsb
mov
sub
out
mov
insb
xor
dec
je
dec
pop
mov
test
ja
cltd
mov
pop
cmp
outsb
sahf
sbb
and
cmpl
enter
in
rclb
cmp
movsb
jno
stos
subl
pop
aam
mov
data16
adc
stos
outsl
add
jmp
add
fadds
arpl
in
or
fisubs
das
xchg
xor
enter
iret
sbb
pop
in
fstps
inc
test
inc
lcall
jg
jecxz
pop
mov
sbb
xchg
andb
pop
xor
xchg
out
hlt
in
inc
test
ret
jb
lcall
je
imul
mov
fcomps
std
push
mulb
ret
repnz
int3
sbb
mov
mov
stos
clc
insl
out
int
imul
pop
test
int3
push
mov
mov
mov
cmc
jbe
or
xchg
and
cmc
xor
loopne
data16
pop
sahf
adc
shrl
push
push
xchg
movsb
mov
test
hlt
test
push
ja
and
stos
test
and
inc
hlt
test
sub
pop
xchg
xor
pop
pop
pop
mov
or
and
sarl
cmp
mov
int3
mov
ret
or
xchg
out
sbb
popf
xchg
fidivrl
dec
dec
mov
xchg
jl
and
and
out
inc
sub
push
mov
cmp
push
xlat
inc
movsl
ja
andb
fsubs
js
adc
aaa
loop
sub
ror
lea
sbb
insb
stos
sbb
js
iret
pop
and
fsincos
mov
rsm
sahf
dec
push
add
add
adc
mov
andl
out
xchg
pop
push
or
jae
jbe
add
aaa
pop
add
sub
dec
mov
pop
jo
jns
adc
hlt
dec
insb
sbb
inc
nop
jno
pop
stos
subb
or
std
mov
subb
mov
inc
leave
subb
xchg
jg
push
sub
push
xchg
enter
jnp
xchg
clc
inc
arpl
sbb
jecxz
testb
lods
shlb
out
lods
xchg
imulb
jne
negb
mov
xor
scas
mov
ficoml
pop
sbb
lret
add
in
cmpsl
push
push
cmpsb
dec
daa
lods
mov
mov
lods
xchg
out
sub
mov
mov
in
je
sub
leave
mov
mov
hlt
out
dec
mov
rolb
push
aas
cli
mov
push
fidivrl
or
sbb
mov
and
inc
xor
adc
int
mov
add
add
stos
or
inc
xchg
jns
cmpsb
adc
stc
fisubl
pop
inc
fs
cmp
mov
shlb
rcl
and
mov
mov
and
mov
jns
dec
lret
add
addr16
jnp
push
push
pop
mov
push
cld
clc
das
add
int
inc
aad
je
ret
fstpl
add
mov
inc
fmuls
testl
jno,pn
jmp
daa
sarb
pop
roll
inc
sbb
cmp
or
mov
adc
in
adc
mov
mov
xor
dec
hlt
out
aad
scas
addr16
in
ret
out
int
imul
fdivrl
out
mov
scas
jge
xor
ljmp
mov
xchg
es
pop
mov
mov
add
mov
test
add
push
and
add
pop
cmp
int3
movsl
ja
mov
fcmovnb
es
pop
testl
and
data16
fisubl
mov
push
inc
dec
add
ret
imul
dec
cwtl
mov
mov
jl
push
xor
add
imul
inc
dec
in
test
in
pop
aas
jb
jecxz
inc
push
jae
add
sahf
cmpsl
scas
inc
mov
les
or
test
rcrb
hlt
mov
mov
inc
rcll
mov
addr16
dec
in
aaa
rcrb
xor
mov
cmpsl
or
popa
push
xor
insb
xchg
icebp
push
lods
aam
dec
lahf
shlb
push
jge
dec
fld
dec
fimull
mov
mov
adc
addr16
nop
jmp
adc
xchg
adc
fisubrs
push
shl
cmp
mov
fcoms
icebp
or
add
push
jmp
jns
test
inc
xlat
call
icebp
popf
enter
mov
cmp
testl
jg
lret
into
movsb
out
sti
pop
mov
lods
pop
aam
shr
cwtl
cmc
mov
xor
xor
out
jno
or
push
fs
jmp
outsl
fstp
inc
adc
jo
in
bound
hlt
xchg
popa
into
xchg
mov
stc
out
and
inc
pop
mov
and
ds
ljmp
jo
jge
roll
inc
cmp
in
xchg
idivb
popa
rol
pusha
sub
ja
clc
and
jmp
lahf
mov
mov
lds
mov
mov
adc
push
aad
icebp
xor
call
aad
mov
out
lea
ds
xor
out
xchg
xchg
lcall
lret
loop
daa
and
push
iret
shll
xchg
outsb
or
idiv
fsts
bnd
dec
leave
js
jge
cltd
push
sbb
out
popf
sub
pop
enter
nop
pop
xor
jb
pop
stc
jg
shr
push
push
and
aad
cli
xchg
mov
dec
addr16
mov
aaa
rol
pop
lock
jge,pt
push
daa
in
push
cmp
dec
push
ss
cmp
xchg
cmp
lods
jmp
xor
fdivs
cli
mov
cs
push
mov
decb
mov
xor
cmp
stos
test
outsl
or
pop
cmpsl
mov
dec
cmp
loope
jb
sbbb
adc
in
push
sbb
shlb
push
sbb
sub
mov
lret
cld
iret
push
repnz
adc
stos
dec
cld
lea
rcrb
scas
bound
push
lock
loopne
xchg
shlb
dec
dec
fdivrs
in
sub
mov
cs
lea
lods
mov
fdivrs
movsb
stc
cmp
cwtl
pop
jecxz
shrb
mov
mov
mov
cmp
cmp
cld
and
sbb
data16
mov
mov
fwait
mov
adc
aas
jns
mov
cmp
fsubs
push
dec
outsl
test
shll
add
pop
mov
inc
xchg
sub
jae
adc
pop
in
pop
scas
and
sarb
cld
add
sbb
loope
xchg
xor
sub
or
and
fwait
enter
xorb
outsl
push
shrl
add
lret
mov
adc
insl
and
xchg
fiadds
lret
xorb
fs
or
xorl
or
dec
xor
mov
inc
mov
mov
ljmp
xchg
xchg
gs
inc
in
xlat
add
testb
push
imul
xor
jae
notb
rcr
push
test
loope
sbb
add
jle
xchg
mov
ja
dec
dec
out
sub
push
in
push
gs
mov
lret
or
xchg
cmpsl
ror
adc
inc
addb
sarb
pop
outsl
int3
jo
sti
out
movsb
xlat
xor
shll
sub
push
gs
sub
movsl
idivb
stos
sub
jns
imul
leave
cmpsl
lahf
aad
jmp
lods
xchg
imul
jle
shll
inc
out
lahf
mov
jge
fiaddl
pop
jb
push
in
xor
fimull
jns
jnp
xor
mov
push
shlb
data16
mov
daa
dec
xlat
out
xor
xor
ss
test
sbb
xchg
in
sti
mov
xor
pusha
dec
adc
notl
sbb
add
and
movb
jne
popl
cld
jo
and
int
or
mov
mov
mov
call
cli
outsb
pop
insb
xchg
cmpsl
out
cmp
sub
cmp
jl
shll
out
cmp
bound
or
std
mov
and
push
pusha
xchg
rol
sti
arpl
mov
xchg
aam
lds
push
cmp
dec
sbb
sub
mov
aaa
xor
out
add
sbb
and
dec
fnstenv
addl
lock
rcrl
adc
xchg
mov
faddl
inc
jle
jno
adc
je
pop
pusha
xor
sahf
inc
shlb
push
mov
mov
or
lret
rcl
sub
mov
xchg
movsl
pop
and
mov
adc
pop
jge
or
cmp
and
mov
js
pop
xchg
mov
mov
dec
inc
bndmk
fs
push
mov
push
push
pop
lcall
and
mov
sbbb
ret
mov
movsl
imul
out
mov
imul
lret
xchg
inc
push
cmp
cmpsl
sub
stos
push
movb
sub
into
ret
push
popa
cli
fbstp
cmp
mov
mov
ret
jmp
and
fldl
dec
das
add
bound
fildl
aam
adc
les
or
insb
pop
sbb
ljmp
dec
sub
clc
lret
lock
xchg
mov
cs
out
cmp
mov
clc
mov
leave
sub
mov
xchg
sbb
test
rolb
jae
mov
or
sbb
xor
and
mov
mov
fwait
sub
push
inc
icebp
fwait
scas
scas
cmp
mov
mov
push
cmp
xorl
cmp
push
insl
dec
sahf
mov
nop
adc
sbb
int3
xor
dec
dec
clc
hlt
push
push
mov
shll
mov
test
scas
sar
mov
push
cmp
fstpt
outsl
add
jmp
and
int3
outsb
jne
icebp
lods
cmpsb
and
les
pop
int
test
popf
and
jecxz
mov
push
roll
jmp
and
sarb
lcall
outsb
adc
stos
cmpsl
and
cltd
fidivs
popf
pop
lods
sub
mov
cltd
and
aas
test
fnsave
jae
loopne
push
fsubrl
ss
mov
pop
lret
add
mov
xchg
and
dec
and
dec
mov
jmp
push
push
xchg
andb
popf
push
mov
push
push
incl
xor
shrl
inc
sub
push
add
les
push
mov
mov
out
mov
sub
push
sbb
cltd
pop
js
cmp
fimull
mov
sub
rcr
movb
jo
inc
stos
sbb
jge
out
adc
and
icebp
mov
pop
jne
or
daa
xchg
pop
pusha
cmp
daa
mov
and
xchg
iret
psubsw
jnp
inc
pop
out
fbld
cmp
xor
push
sub
fldcw
ficompl
in
jl
or
rolb
mov
jne
negb
jg
inc
in
ja,pt
bound
push
lods
test
ret
push
loop
hlt
inc
out
imul
mov
loopne
xor
filds
mov
fmull
mov
mov
sti
stc
movsb
push
pop
test
mov
call
jbe
jno
push
jmp
and
push
pop
push
mov
int3
loopne
pop
pop
lahf
mov
cwtl
jb
fbstp
data16
js
jo
ror
ret
loop
test
aaa
test
pusha
pusha
adc
mov
mov
or
or
pushf
cmp
add
jnp
jbe
mov
pop
jnp
pop
cwtl
mov
sahf
xorl
xchg
inc
pop
adcl
outsl
mov
enter
pop
xchg
je
mov
cmp
adc
or
subl
mov
daa
pop
mov
sbb
cmpsb
mov
mov
jg
xchg
push
stos
or
push
mov
push
fdivrp
mov
xor
jns
mov
push
jne
jnp
cmc
xor
lahf
mov
add
xchg
aam
insl
xchg
cwtl
ret
mov
xlat
stc
sarb
sbb
insb
add
add
sbb
xchg
test
sub
jle
iret
pop
xchg
jmp
stos
xor
js
or
push
stos
push
outsl
nop
push
es
sub
es
and
sbb
mov
mov
push
pop
pop
lcall
addr16
in
fadd
pop
les
jnp
daa
jae
dec
inc
add
dec
fs
aas
rcll
mov
push
ss
jb
fcom
clc
aam
xchg
sub
pop
fs
popf
cwtl
cwtl
imul
cld
test
mov
jne
pusha
scas
inc
rorl
repnz
out
ljmp
in
sbb
sbb
cmp
push
pop
mov
nopl
adc
push
outsb
inc
aaa
ss
dec
icebp
test
cmc
adc
ds
mov
fwait
lods
insl
insb
ljmp
mov
repnz
mov
mov
std
iret
test
lock
inc
call
add
stos
xor
dec
ret
inc
dec
stos
pop
sub
fwait
push
and
mov
ds
push
enter
popa
cmp
sub
outsl
dec
xchg
sti
hlt
mov
lcall
mov
lods
push
adc
mov
leave
lods
mov
sbb
arpl
add
sbbl
or
ja
jmp
dec
mov
sar
push
orl
inc
stc
xchg
jecxz
jle
push
dec
mov
and
movl
outsb
stos
int3
sbb
int
incl
jmp
jae
inc
lea
push
subb
loopne
or
pop
popf
sbb
mov
jne
out
daa
sbb
inc
dec
adc
jecxz
int
fwait
sahf
adc
fidivs
outsl
cmp
ss
pop
outsb
push
test
add
mov
mov
cmp
jmp
stc
loop
push
jp
mov
sub
and
mov
iret
and
dec
pop
loopne
add
and
shlb
sub
adc
js
or
jne,pn
jmp
xchg
les
call
jecxz
push
pop
mov
xlat
movsl
push
jmp
lahf
repnz
jnp
jno
cwtl
pop
loop
jns
dec
roll
adc
jo
lret
mov
adc
pusha
pop
shll
sbb
icebp
pushf
call
sbb
push
adc
mov
push
jnp
test
bound
lds
xor
sbb
pop
pushl
mov
sahf
cmpsl
stc
mov
fxam
push
xor
pop
push
out
sub
scas
jnp
add
lods
int
push
lahf
pop
popa
adc
aas
stos
pop
lds
xchg
inc
dec
xor
ret
cs
popf
negl
or
push
pop
subl
lock
or
daa
int3
in
jbe
ficomps
sarb
out
repz
movsb
xor
jns
pusha
inc
iret
pushf
xchg
out
sbb
out
sbb
arpl
mov
rcr
int
enter
add
lcall
push
enter
inc
inc
addr16
pop
test
xlat
add
xchg
in
jne
sbb
cltd
stc
aaa
adc
sub
pop
mov
movsl
inc
jecxz
cmp
repz
sbb
push
push
in
mov
pusha
orl
push
daa
mov
mov
dec
xchg
shr
push
dec
mov
out
mov
jg
cmp
out
in
add
vsubss
lods
das
les
idivb
loop
and
in
leave
int3
mov
mov
mov
inc
add
push
ret
popa
lret
and
and
scas
or
inc
or
push
cmp
mov
scas
gs
movsb
and
pop
add
push
out
mov
daa
pop
jno
push
inc
xchg
sti
das
mov
subb
jne
leave
pop
repz
or
cwtl
sub
mov
aas
outsb
mov
jno
mov
inc
cmp
sbb
rorl
loopne
in
add
in
jg
push
shr
pop
mov
lahf
aas
lahf
or
inc
lret
cmp
mov
cmpsl
xor
jo
imul
push
mov
cld
xchg
bound
sti
add
push
call
cld
mov
cmpsl
xchg
jle
mov
pop
stc
xchg
cwtl
fisttps
sub
lods
mov
mov
mov
and
inc
inc
mov
mov
in
mov
mov
add
add
or
pop
std
jae
xchg
sbb
lods
shlb
sbb
ret
jecxz
and
mov
mov
fs
sbb
stos
ljmp
mov
jbe
mov
jns
pusha
sub
mov
jno
clc
mov
adc
js
outsb
push
jb
push
and
dec
aaa
xchg
movsb
lret
fisubrs
stc
jge
mov
mov
xchg
leave
enter
jge
and
jge
repz
jmp
clc
daa
mov
mov
gs
pop
stc
cmp
lock
pop
pop
adc
xchg
repnz
je
pop
ret
popf
test
mov
xchg
adc
mov
xchg
add
std
xchg
push
xchg
mov
dec
xchg
mov
dec
or
dec
dec
or
fidivrs
adc
pop
ds
push
push
pop
jge
addr16
aas
out
jl
cli
test
jg
lock
pop
out
sub
in
inc
jnp
push
jmp
in
cmp
inc
bound
add
pusha
jle
popa
or
out
nop
mov
sub
sbb
pop
je
xchg
dec
push
cltd
das
stc
adc
mov
or
sub
lret
and
adc
pusha
rcrl
inc
cmovae
mov
xor
inc
push
xor
push
add
jecxz
fsubr
sarl
mov
and
xchg
lret
mov
xchg
outsl
pop
push
or
mov
xchg
inc
or
sbb
fadd
sbb
sbb
xchg
xor
icebp
cmp
mov
nop
mov
psrlw
test
lds
dec
and
ret
xchg
xor
lds
xchg
dec
or
sbb
xchg
test
dec
std
enter
mov
enter
cmp
fsubrl
mov
xchg
out
or
jo
push
cmp
xchg
popf
in
pop
xorl
mov
add
mov
subl
push
jge
sbb
call
pop
pop
sub
data16
or
mov
into
pop
inc
bswap
into
imul
fsubs
pop
imul
add
aaa
fistl
cmpsl
inc
bound
scas
repz
les
push
fwait
fwait
loop
out
into
mov
pushf
xchg
mov
mov
ljmp
and
daa
xacquire
inc
sbb
mov
dec
cld
scas
stos
mov
out
push
int
pop
stos
dec
js
sub
iret
in
movsb
sub
push
jno
sub
cmp
mov
out
stc
cmp
mov
into
xlat
adc
mov
pop
xchg
inc
lock
loopne
ficomps
stos
enter
add
mov
mov
add
lret
es
data16
lds
mov
jnp
mov
insl
fisubs
aaa
mov
popa
push
shlb
mov
pusha
lock
std
es
iret
pop
mov
repz
ret
test
add
push
lahf
scas
jmp
and
mov
cmp
cmp
adc
sbb
xor
inc
xchg
int
sub
iret
sbb
outsb
sub
sbb
inc
push
pop
mov
xor
in
scas
cmp
mov
ljmp
pop
adc
xchg
pop
or
in
out
int
jecxz
mov
or
iret
sub
inc
mov
loope
into
pop
jp
es
iret
mov
cmp
xor
repz
repz
fstp
xchg
call
jg
jg
xchg
xchg
dec
loop
xor
inc
sbb
jle
ret
dec
mov
cltd
cmpsl
pop
in
rcrl
dec
sub
inc
cmp
xor
out
hlt
fwait
in
xlat
cltd
sbb
jp
ret
lock
pop
fldl
xor
stc
mov
call
adc
or
mov
aas
ss
shll
xchg
adcb
sar
movsb
push
jns
stos
mov
dec
idivb
loope
jns
xorl
sbb
push
inc
arpl
ds
cmp
sbbl
fisttps
push
icebp
adc
push
and
push
or
xchg
fdivl
xor
mov
add
jp
inc
outsl
ds
in
aas
mov
je
movsb
lea
fidivrl
scas
push
mov
ljmp
xor
pop
dec
std
mov
aas
adc
mov
pop
pop
ficompl
enter
cmp
xor
inc
test
dec
int3
lret
int
add
nop
push
xor
sub
mov
mov
into
sbb
popa
dec
and
lcall
ret
add
enter
sbb
mov
xchg
ja
lock
sub
subb
xchg
lcall
ds
idivl
lea
icebp
mov
xchg
push
pop
les
hlt
notb
sub
mov
pop
mov
adc
dec
lods
push
xor
sahf
test
xor
cld
xchg
push
sub
add
push
pop
and
aam
mov
enter
scas
repz
adc
push
jbe
movsb
out
sahf
or
inc
push
mov
pop
faddp
loope
fucomi
cmpsl
jae
mov
or
mov
mov
or
ret
je
pop
fwait
pop
jnp
pop
sbb
gs
cmp
mov
out
mov
loopne
jp
stos
inc
inc
mov
jne
mov
jae
dec
or
or
frstor
mov
inc
iret
xor
jg
fucomip
or
push
stos
add
cltd
mov
mov
or
gs
leave
sub
xor
dec
xor
adc
pop
jae
jbe
imulb
sti
fwait
push
lea
or
jmp
cmp
js
inc
sub
aad
les
xor
add
int3
pop
pop
ss
pushf
dec
cmp
mov
ds
fisubl
xchg
mov
xchg
ret
or
or
mov
nop
push
sbb
dec
xor
add
fbstp
popf
and
xor
ss
das
and
jno
mov
mov
cmp
adc
pusha
lcall
aaa
and
mov
push
int
mov
loope
into
scas
insl
in
pop
ret
inc
repz
andb
movsl
xor
movsl
je
mov
aam
andb
ljmp
lods
adc
dec
arpl
stc
fnsetpm(287
mov
jp
mov
in
jb
jae
add
and
xchg
cmp
movsl
push
adc
pop
test
jae
daa
subl
mov
pushf
sbb
dec
xor
out
jle
shlb
sahf
mov
mov
hlt
fildll
xchg
scas
adc
aaa
call
xor
stos
jnp
aaa
int3
loop
push
jl
xchg
sub
fwait
test
stos
mov
imul
dec
add
cmp
add
sub
mov
fidivs
cmp
lods
mov
jl
jo
dec
add
add
pop
out
hlt
insl
jp
sbb
dec
and
xchg
enter
and
sar
out
sub
scas
dec
pop
cmp
push
hlt
and
add
ss
fildl
pop
push
stos
mov
push
lret
fldenv
scas
xchg
jnp
cmc
divl
sahf
pop
push
into
jmp
stc
sub
add
sub
mov
out
leave
mov
mov
das
testl
add
call
aaa
mov
add
fstpl
dec
mov
mov
xorb
fsubrl
icebp
push
ss
loope
std
ficomps
jge
cmp
adc
sbb
sub
pop
loope
lahf
cld
mov
pmullw
bound
lahf
mov
push
or
subb
mov
mov
in
aad
mov
jle
loope
sub
lcall
cmc
push
mov
mov
test
push
and
ss
mov
push
fadd
dec
or
addr16
xchg
and
psubb
pop
in
loope
subl
adcl
push
jbe
inc
cmp
jae
push
pop
dec
xchg
add
mov
lret
dec
xchg
lret
mov
int
es
push
sub
mov
xchg
xchg
mov
or
jge
mov
push
and
lcall
subb
cld
push
fcmovne
xchg
jmp
imul
jle
sbb
adc
lods
sahf
xchg
sub
mov
xchg
scas
and
scas
stc
sahf
cmc
icebp
jnp
push
out
mov
dec
jecxz
jge
insb
test
or
lret
test
outsb
cwtl
fsubr
divl
int3
xlat
icebp
mov
scas
in
das
fisubrl
test
cmp
outsb
loop
rclb
dec
imul
fadd
mov
or
in
jno
adc
xchg
sbb
test
sbb
out
push
push
je
bnd
repz
inc
out
fdivrp
mov
nop
inc
data16
icebp
xchg
jae
stc
cmp
nop
jecxz
es
push
jg
mov
dec
xlat
sbb
repz
mov
addb
adc
pop
cld
aad
je
in
add
push
loop
popf
and
dec
lea
mov
pushf
pusha
stc
lods
push
sub
xchg
mov
idivl
add
add
lcall
je
mov
ret
mov
and
cmp
fnstsw
insb
xor
jmp
ljmp
xchg
mov
test
cmp
dec
add
mov
popa
lret
xchg
das
push
loop
cmpsb
scas
cmp
dec
xor
daa
push
inc
movsl
ds
nop
shrb
lock
fists
loope
repnz
mov
adc
in
dec
rclb
sbb
and
push
out
cwtl
xchg
or
clc
inc
test
and
and
call
das
dec
push
daa
shrb
test
lret
mov
pusha
mov
cmp
and
int
je
add
jbe
cld
filds
rcl
aam
addr16
lret
or
ja
pop
pop
repz
xchg
cmp
sub
mov
aad
xchg
adc
push
jno
ret
xor
sarl
xchg
xchg
and
xor
mov
int3
mov
pop
adc
std
out
xchg
dec
dec
pshufw
leave
cmpsb
inc
mov
adc
outsb
js
mov
loop
lods
and
or
or
xchg
jnp
jnp
jns
add
pop
sbb
dec
mov
cltd
pop
sbb
rcrb
xor
xor
jno
pop
andb
add
pop
dec
out
aam
std
cmp
insl
mov
mov
sub
shll
int3
test
add
out
inc
xchg
inc
dec
pop
jp
mov
add
icebp
mov
mov
ss
pop
in
out
push
dec
cld
fsubrl
repnz
mulb
mov
packsswb
std
sarl
fimull
mov
jnp
ret
lcall
test
lcall
and
adc
icebp
add
or
and
outsl
cmp
xchg
adc
icebp
dec
movsl
repnz
out
cwtl
rclb
mov
cmc
dec
ss
jno
cmp
rcrl
pop
lcall
dec
call
xor
fcomps
jl
ja
mov
sub
inc
test
ljmp
xor
xor
push
mov
shlb
adc
mov
push
mov
push
cmpsl
sub
mov
lcall
add
out
mov
call
fcoms
push
dec
movsb
sub
sbb
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
ljmp
mov
mov
sbb
add
ljmp
sbb
js
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
cmc
jl
xchg
jo,pt
cmp
add
fidivl
and
stos
or
add
add
int3
jg
and
sbb
inc
and
into
ss
or
outsb
out
sbb
add
bound
jae
in
or
xchg
imul
adc
push
pop
sbb
sbb
sbb
pop
je
ljmp
jb
out
pushf
adc
add
loopne
mov
mov
cmp
lods
add
popf
push
dec
cmp
cmp
jle
inc
data16
mov
out
jbe
pop
in
jb
xchg
add
in
sbb
sti
arpl
in
pop
sbb
test
mov
ljmp
cld
add
lock
loopne
ds
sbb
sti
arpl
cwtl
orl
js
arpl
mov
jns
sbb
sti
ljmpw
in
sbb
sti
arpl
mov
fidivl
sbb
pop
ljmpw
in
sbb
sti
arpl
mov
mov
sbb
sti
jae
mov
mov
sbb
cvtps2pd
mov
jns
sbb
mov
ljmp
sbb
js
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
cmpsl
dec
out
add
mov
arpl
cltd
mov
sbb
jl
sti
xor
in
sbb
imul
sbb
js
fwait
arpl
mov
cmpl
mov
arpl
mov
mov
sbb
sti
inc
ljmp
sbb
js
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
sti
arpl
mov
mov
sbb
lock
mov
lcall
dec
je
outsb
addr16
add
test
push
sbb
stc
cmp
popf
lds
imul
cmp
sbb
stos
push
inc
mov
jge
fstpl
mov
cmpsb
adc
add
mov
scas
icebp
js
cmp
lods
pop
sub
mov
cmp
fldenv
push
cmpsl
cli
and
lods
xor
loop
xor
andl
negl
jo
push
push
enter
xor
jb
stos
jnp
xchg
rorb
inc
dec
mov
adc
arpl
push
push
outsb
mov
sbb
add
mov
cli
stos
xlat
leave
xchg
push
test
xor
in
sbb
jg
int
dec
push
xchg
scas
pusha
mov
leave
repnz
or
fwait
bound
jle
or
dec
xchg
add
dec
lcall
and
shll
into
dec
rclb
scas
add
fists
ds
js
inc
lret
repnz
data16
cs
psllw
cwtl
pop
jb
inc
and
cmp
sub
sbb
push
aas
fsubrp
hlt
lea
fwait
ret
dec
xchg
movsl
test
mov
fisubs
aas
das
into
insb
in
jbe
pop
sbb
mov
jle
lahf
shr
aas
mov
xchg
dec
cmp
cmc
ljmp
sbb
jo
xchg
mov
xchg
aas
scas
les
mov
and
pusha
and
in
rclb
sti
jle
jne
add
lods
jmp
test
divl
scas
sbb
sub
lcall
in
pop
in
outsl
mov
insl
xchg
or
rolb
stc
imulb
cmc
cmp
outsl
roll
sbb
adc
inc
test
outsl
xchg
jnp
movsl
add
or
mov
sbb
sbb
scas
ret
xchg
std
or
arpl
push
sub
movsb
mov
sub
cmp
xchg
mov
inc
or
sbb
inc
scas
je
cmpsl
mov
ljmp
mov
js
rcll
jmp
mov
jb
out
pop
pusha
inc
mov
rcrb
sub
xchg
and
cmp
es
jge
sbb
out
mov
xchg
jl
push
shll
adc
sbb
xchg
mov
cmp
jl
adcl
fwait
xchg
push
mov
mov
leave
xor
dec
scas
dec
ret
setle
mov
jo
dec
mov
adc
jnp
movsl
addr16
add
sti
mov
adc
xabort
mov
adc
movb
popf
jno
std
adc
jmp
add
push
jmp
dec
imul
scas
aas
xor
jns
lahf
sub
int
xchg
jp
rorb
push
xor
mov
pop
addl
sub
sub
test
dec
outsl
pop
lahf
push
mov
xchg
jne
sub
mov
insl
nop
and
stos
add
cmp
dec
adcl
cmpsl
xor
loope
xor
mov
jbe
sbb
cltd
xor
xor
cmp
pop
shlb
push
push
push
repnz
pop
test
push
sbb
mov
mov
jg
cltd
stos
enterw
popa
inc
add
ffree
xor
sbb
std
int
divl
jge
ss
xlat
inc
push
leave
adc
mov
je
outsb
imul
fidivrl
mov
xchg
push
fs
sbb
mov
mov
pop
ss
xchg
mov
add
mov
cmp
dec
and
jo
pushl
or
jcxz
jbe
add
lahf
dec
sbb
shlb
jbe
inc
mov
mov
xchg
out
inc
lock
xchg
rorl
inc
lods
push
adc
push
pop
rolb
arpl
lret
push
bound
aam
sbb
clc
jae
ret
fucomip
arpl
and
adc
insl
sahf
sbb
in
mov
xlat
xchg
cmpsb
pushf
mov
mov
push
cld
out
sbb
nop
mov
cwtl
lcall
adc
adcb
lods
or
add
das
insb
es
pop
jne
pop
divb
movsl
and
cld
pop
mov
push
jmp
dec
in
push
cld
sub
ficoml
aas
mov
fwait
jp
les
hlt
popa
dec
push
jecxz
dec
int3
das
sbb
sbb
repnz
xchg
mov
imul
mov
shrb
stc
jmp
push
fstpl
cmp
sub
fistl
mov
and
sbb
jp
adc
mov
nop
sbb
out
dec
jno
lahf
int
neg
cli
pusha
mov
jecxz
jmp
xchg
aaa
dec
das
jmp
sbb
mov
aaa
sbb
jns
dec
cwtl
adc
pop
jle
xchg
xchg
cmpsb
mov
add
add
jbe
jne
rcrl
adc
mov
mov
adc
xor
jmp
fisubs
or
push
inc
loopne
push
sbb
outsl
das
xchg
add
pop
out
mov
ljmp
mov
out
sbbb
lahf
in
inc
xor
sbb
test
in
fisttps
inc
xorb
aam
pop
mov
xchg
cld
out
and
mov
xor
mov
add
push
imul
push
adc
inc
icebp
cli
dec
icebp
pop
aad
aas
adc
cmc
cmp
mov
pop
and
pop
cltd
cmpsl
popf
jg
es
aam
jecxz
notb
inc
cmpsb
pop
lcall
sub
dec
lcall
and
outsl
movsb
ret
push
das
cwtl
cli
sahf
lods
sbb
push
cwtl
lcall
jle
iret
adc
mulb
jne
adc
xor
leave
mov
and
and
sub
stos
jecxz
dec
call
xor
push
fdivl
adc
or
cmc
mov
fnsave
insl
stos
repnz
rcll
adc
cmpsb
pusha
cwtl
inc
xor
cmpl
xchg
sub
mov
loopne
adc
lods
out
std
cmp
adc
es
and
loop
mov
mov
shll
cmp
sbb
inc
in
adc
cmp
jbe
insl
sbb
sbb
fcomps
ds
loopne
cwtl
jp
pop
outsl
jno
push
leave
fwait
scas
test
shl
cmpsb
pushf
mov
adc
jg
orl
cmp
sbb
inc
addr16
push
shrb
jo
mov
adc
xor
or
and
sub
adc
push
iret
mov
mov
out
js
popf
in
and
icebp
xor
jp
sub
push
xchg
xchg
jno
xor
insb
test
lock
jbe
mov
fisubrl
imul
inc
push
pop
aaa
or
mov
repnz
call
dec
and
pop
imull
push
fs
loope
push
mov
push
pushf
mov
fisubrs
inc
jnp
mov
mov
sti
clc
nop
movsl
xchg
jle
or
jge
test
enter
sti
sub
jle
and
out
add
mov
inc
jne
nop
add
and
xor
mulb
mov
mov
pop
mov
shrb
iret
mov
add
pusha
out
mov
lret
xchg
pop
push
fcmovnu
mov
les
lock
xchg
hlt
mov
fnstenv
xchg
fsubrl
je
jl
sub
add
add
and
dec
mov
mov
xor
xchg
cli
add
in
pop
negl
int
jae
imul
nop
jo
iret
popa
repnz
inc
xchg
mov
comiss
add
push
add
and
mov
push
imul
int3
add
js
cmpsb
faddl
mov
inc
imul
mov
ret
add
in
mov
std
lret
mov
test
pop
aaa
les
cmp
push
pop
mov
scas
testb
sub
or
es
inc
pusha
cmp
xor
ja
lret
outsb
lcall
outsl
mov
dec
lods
xchg
ja
pusha
sub
push
xchg
fstps
lcall
rcll
cld
mov
aam
and
push
add
xchg
xor
push
cli
imul
cmp
stos
push
push
jnp
popa
xchg
push
daa
cmp
dec
outsb
add
daa
pop
or
xor
test
sbb
sbb
cld
in
out
outsl
pusha
cli
dec
stos
mov
stc
xchg
xchg
mov
mov
out
push
mov
in
xchg
mov
mov
sarw
lret
jae
or
push
je
mov
sti
rorl
leave
adc
sbb
mov
and
cmpl
data16
and
xchg
dec
lea
dec
jle
cmc
addr16
adc
repnz
jle
cmpb
pop
push
and
push
pop
push
pop
lret
mov
int3
fidivs
cmp
dec
mov
xor
repz
shr
ljmp
lock
sub
bound
into
mov
shl
or
cmpsl
stc
mov
test
mov
mov
mov
sbb
pop
jge
mov
dec
dec
mov
add
xor
pop
arpl
mov
stc
mov
arpl
and
std
stos
jg
lea
imul
dec
push
aad
push
mov
out
rcrb
lcall
mov
lahf
int
scas
xchg
call
pop
test
cwtl
je
in
outsl
loope
sub
shlb
push
mov
and
adc
fcomps
adc
adc
into
fwait
add
mov
test
lock
loop
fcmovnb
cmp
loopne
dec
fadds
aad
jnp
jl
sbb
roll
cmc
sbb
jns
adc
xlat
dec
popa
push
mov
pop
sub
pushf
push
dec
das
lods
pop
ret
movsb
cmp
sub
pop
fsubr
push
scas
mov
dec
push
xchg
xor
daa
inc
aad
and
stos
mov
aaa
mov
jmp
and
fwait
pushf
movsb
daa
push
mov
dec
cmpsb
inc
or
push
sbb
dec
inc
push
in
out
xor
in
push
and
lock
cli
or
mov
jle
adc
repnz
or
jbe
xchg
lret
ljmp
loop
push
jae
fwait
inc
lcall
shr
insl
out
or
pop
aad
in
ds
inc
fidivl
mov
push
stc
popf
push
clc
mov
cltd
cmp
adc
cld
movsl
test
and
adc
test
inc
push
int
push
shll
les
cld
jns
inc
mov
dec
sti
jo
adc
aas
xor
jecxz
sbb
xchg
jl
push
mov
mov
pop
xor
faddl
testl
mov
in
popf
loop
jne
push
or
shll
push
push
xlat
or
sbb
xor
das
dec
sub
dec
and
test
mov
cli
repnz
or
jg
imul
pop
cmp
rol
mov
mov
push
aad
pushl
cld
dec
repnz
ljmp
and
pop
jb
out
popf
fstpt
pusha
stc
mov
movsl
lahf
cld
mov
lods
adc
repz
repnz
jns
idiv
sub
fsubr
ret
push
inc
aad
push
or
scas
divl
mov
scas
xchg
push
je
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
