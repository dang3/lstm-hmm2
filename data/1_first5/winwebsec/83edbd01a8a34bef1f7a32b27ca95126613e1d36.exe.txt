push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
jp
hlt
ret
dec
pop
push
xor
pop
push
dec
push
leave
mov
aaa
sbb
je
jb
fsub
lret
ss
sub
filds
iret
cmc
repnz
andl
out
addr16
ret
mov
out
leave
mov
std
pop
sar
test
add
movsl
mov
add
movsl
icebp
popf
sbb
adc
shlb
cmp
jl
mov
xchg
push
dec
push
xchg
inc
cmp
aad
jae
jmp
aam
shrb
stc
out
mov
adc
das
mov
mov
jno
mov
adc
ret
sbb
pop
cmp
xchg
scas
mov
xchg
mov
xor
fsts
je
add
sbb
push
sub
xchg
pop
imul
inc
and
sub
push
movsl
cmp
and
push
push
or
mov
clc
lea
cmc
cli
icebp
mov
adcb
mov
cmpsl
test
repnz
sarl
outsl
jge
movsl
insb
lock
fcmove
and
mov
push
sbb
into
out
in
mov
imul
inc
dec
stc
adc
and
pop
out
and
ljmp
scas
inc
fsubs
shll
cwtl
loop
cmp
int3
std
ret
rcll
sbb
int
shrb
and
iret
lea
sti
movsl
jne
divb
cmc
pop
mov
jb
xor
loop
rorb
xchg
pop
clc
add
xor
test
push
mov
adc
cld
pop
mov
dec
pop
mov
mov
fcmovnb
insb
xlat
fsubs
and
fidivs
ret
sub
adc
in
gs
xor
mov
or
loopne
lcall
lret
mov
cmp
scas
or
in
movsl
not
callw
pop
mov
jnp
nop
push
je
repnz
es
lea
mov
lds
ljmp
push
iret
pop
mov
xor
jae
imul
movl
lahf
nop
imul
loop
rcll
mov
push
fildl
pop
imul
imul
cld
sub
push
shll
fdivrl
add
inc
mov
sarl
mov
mov
popa
stos
push
xor
dec
push
stos
jb
cmp
les
dec
fcoms
stos
mov
dec
xor
sub
adc
add
call
push
aaa
rorb
mov
icebp
out
int3
xchg
in
mov
ja
mov
mov
repz
pop
and
adc
jo
ds
sub
ljmp
imul
push
inc
adc
in
lods
xlat
xchg
xchg
sbb
nopl
sbb
fs
xor
sub
xchg
or
xor
enter
gs
stos
fidivrs
bound
aaa
sti
aad
push
das
inc
xchg
push
adc
mov
jbe
mov
scas
jne
sti
stc
xorb
fsub
push
sub
or
xchg
test
cld
push
stos
clc
les
adc
in
lcall
pop
mov
fidivrl
bound
idivl
cs
mov
mov
movsb
aas
lahf
adc
call
dec
fs
or
xchg
push
adc
or
movups
and
data16
lahf
mov
fstpl
fsubrs
pop
js
xor
xor
mov
leave
leave
mov
notb
mov
inc
nop
jnp
ljmp
xchg
and
stc
cmpb
jg
addr16
sbb
push
jo
out
add
loopne
mov
inc
shll
dec
and
xor
mov
lods
les
lret
cld
cmp
scas
mov
int3
movsl
push
out
or
popf
and
lcall
cmp
or
jp
fwait
mov
or
lods
adc
bound
xor
add
mov
pop
aas
jge
mov
mov
mov
mov
push
cmpsb
add
cmp
pop
incl
orl
xchg
xchg
mov
lock
cmp
sbb
xchg
xchg
or
xchg
shrb
das
test
push
lods
cmpsb
jp
mov
je
adc
sbb
xchg
jbe
sub
add
pusha
or
js
movsb
dec
in
in
das
or
ja
lea
adc
ss
add
divb
lret
cmp
hlt
ss
dec
filds
aaa
xor
push
test
or
insl
mov
test
push
cwtl
sbb
xchg
and
and
rorb
or
outsb
pop
xor
in
xchg
movsb
push
inc
mov
call
cmc
ret
dec
sub
push
neg
and
and
aas
xor
mov
lahf
frstor
xchg
das
xchg
movsb
mov
cli
add
gs
sbbl
push
lock
sbb
fwait
in
xchg
or
jp
sbb
iret
movsb
aaa
negl
cmp
cmc
test
cmp
enter
xchg
jnp
aam
aas
gs
dec
loopne
aaa
mov
xchg
mov
fsts
sbb
inc
xor
sub
shlb
or
mov
stc
sub
shrb
les
push
pmaxsw
pop
add
push
jle
xchg
xor
gs
and
mov
cltd
test
sub
pop
shrb
inc
mov
lods
dec
push
adc
mov
sub
mov
xchg
ret
mov
lds
outsb
out
dec
ret
xor
into
mov
adc
loope
dec
xchg
mov
ja
jns
adc
xchg
nop
fxch
aad
jmp
cmp
fldt
es
push
mov
daa
mov
fnstsw
mov
lcall
stc
aad
cwtl
sbb
sub
out
jbe
jo
cmpsl
inc
and
xchg
pop
ja
dec
xchg
stos
inc
fisubl
push
mov
daa
cmp
sub
fmulp
dec
mov
push
sub
jecxz
pop
aam
pushf
arpl
std
cmp
jmp
pop
push
test
jnp
sbb
jns
inc
cwtl
pop
adc
adc
sbb
jbe
iret
and
test
std
xchg
inc
or
bnd
rcrb
or
add
dec
mov
test
adc
add
push
mov
ljmp
pop
mov
divb
and
add
mov
aam
cli
icebp
ljmp
fdivl
lcall
movsb
lcall
inc
mov
jbe
iret
mov
push
mov
mov
cltd
add
cld
aam
jl
mov
ljmp
into
cmp
sub
push
or
clc
shrb
cli
xchg
nop
insl
mov
inc
aam
inc
cwtl
popa
nop
push
dec
xchg
aad
mov
out
lock
lock
mov
ja
push
sarl
stos
jb
negl
addr16
in
adc
pop
repz
lretw
inc
mov
imul
jb
aas
sub
imul
in
pushf
mov
add
jo
aaa
sbb
mov
lea
out
addl
xchg
loope
cmp
imul
pushf
or
fldcw
lea
push
testl
dec
inc
pop
out
aam
inc
mov
jns
movsl
xchg
sbb
mov
fs
xchg
aam
pop
cmpsb
add
xor
dec
incb
sbb
test
addr16
cmpsl
out
xchg
jo
pop
insl
loopne
and
jb
mov
and
or
scas
push
aad
jo
mov
outsl
jo
call
mov
xor
cmc
test
fucomp
sbb
fwait
dec
addr16
loop
push
push
or
pop
lods
fs
sbb
fdivrs
in
xchg
mov
aad
adc
mov
sbb
insl
jae
addr16
lds
push
in
mov
psrad
and
in
into
cmpl
pop
sti
push
adc
shlb
stc
fs
sub
pop
adc
in
pop
pop
xor
adc
cmp
or
loopne
popa
jecxz
popa
mov
xlat
lret
mov
lret
inc
pop
xor
icebp
leave
jmp
mov
shll
gs
rol
dec
jmp
icebp
jl
insb
xchg
sub
pop
sbb
fwait
ds
xor
lock
scas
ljmp
cmc
fstpt
pop
jge
js
mov
int3
aas
imul
adc
jae
test
scas
loope,pt
or
sbb
push
inc
call
flds
and
jle
dec
fs
testb
jae
jge
mov
insb
pop
fcomps
sbbb
aas
fisubrs
lcall
sub
stc
sub
mov
jne
in
dec
clc
loope
popf
mov
lods
xchg
pop
dec
push
test
xchg
dec
test
push
mov
sbb
fucomp
mov
push
int
push
xlat
lcall
adc
mov
dec
and
sub
rcrl
mov
mov
fstp
pop
mov
call
loop
mov
mov
pop
jbe
cwtl
pop
cmpsl
jcxz
jge
fs
push
and
enter
sbbl
repz
lret
test
insb
sbbl
pop
mov
mov
fmulp
into
stos
aas
movsl
mov
mov
dec
test
inc
adc
xchg
das
ret
mov
in
jo
adc
push
xchg
mov
jecxz
pop
push
mov
loope
aad
and
mov
mov
loop
imul
mov
cmpsb
jle
clc
mov
cmp
push
sarl
pushf
dec
les
adc
xor
mov
and
sub
pop
aam
push
test
fisttpl
jg
mov
rcrl
subb
mov
push
xchg
mov
xlat
push
mov
jle
cld
shrl
int3
and
iret
mov
cmp
inc
bound
jmp
mov
test
xor
pop
jp
push
xlat
or
mov
ror
aad
lcall
std
and
addb
xchg
sub
mov
sbb
cmpsb
mov
sub
pop
popa
push
and
cmp
lods
xchg
and
sub
jl
clc
push
stos
ja
sub
std
test
xor
or
push
adc
jle
add
mov
fcomp
cmp
xor
inc
and
sbb
popf
and
les
mov
cmp
push
cmpsb
push
and
dec
xchg
jp
mov
pop
pop
xor
push
dec
sub
fnsave
or
inc
imul
jno
xchg
xor
lcall
push
dec
sub
xchg
insl
add
test
test
jl
repnz
pushf
sub
cltd
push
in
out
pop
push
scas
jge
xor
lds
mov
loop
or
test
add
mul
outsb
dec
xor
aaa
cmpsl
sbb
mov
cmpsl
std
xor
ljmp
in
in
mov
sbb
stc
cwtl
mov
pop
ret
adc
mov
clc
out
dec
std
js
lret
pop
jae
dec
dec
or
add
cmp
mov
xor
hlt
fxch
vaddps
mov
xchg
mov
mov
mov
cmp
pop
or
sub
xor
push
in
test
pushf
pusha
cmpsl
or
jb
scas
data16
repnz
sub
icebp
aas
and
shl
in
xchg
fdivrp
xchg
xor
das
jmp
jle
fisttpl
lds
xor
cmp
and
jle
rep
xor
adc
push
cmp
pop
jbe
jl
sarb
lahf
rorb
jb
aas
and
or
adc
add
daa
push
in
out
fstpt
mov
add
push
xchg
mov
and
jns
push
pop
push
movsb
push
or
push
pop
pop
in
fs
repnz
lret
stos
fcom
mov
jmp
lret
pop
mov
mov
ja
scas
push
sbb
dec
mov
cmp
pop
popa
sti
mov
sbb
push
pop
jecxz
mov
ss
testl
leave
mov
sahf
inc
pop
xlat
sbb
cs
mov
cmp
dec
xor
push
movsl
cmpsb
imul
lock
cwtl
push
outsb
pop
jnp
imul
stc
mov
js
orl
jge
fists
push
shlb
cmc
lcall
push
shll
dec
or
fisttpll
mov
aam
inc
mov
adc
push
cmp
dec
ljmp
imul
cmp
cmc
sub
mov
push
adc
in
jle
mov
mov
or
std
stos
fucomp
adc
add
addr16
pop
ja
or
or
fistpl
add
cmpsb
nopl
mov
rcrb
rorl
das
in
dec
or
data16
adc
pusha
mov
push
loop
inc
inc
adc
outsl
andb
popf
xor
push
sub
inc
jmp
dec
push
mov
mov
push
xor
subl
add
xor
insb
add
add
jnp
inc
leave
cmp
sbb
test
cmp
pop
in
cmp
rcrb
pusha
lds
jle
adc
inc
dec
lahf
inc
ja
inc
ret
in
xor
test
lds
stc
xor
xchg
jno
lcall
test
shlb
adc
out
ds
adc
dec
push
xchg
ljmp
lock
sub
jp
into
jae
in
bound
or
lcall
mov
xor
rcrl
mov
lcall
loope
sbb
mov
addr16
push
lods
adc
mov
dec
data16
add
adc
mov
fs
pop
jmp
or
xchg
ds
loopne
pusha
shr
adc
jp
mov
das
xor
mov
daa
cmp
push
pop
aam
popf
mov
cmpsl
aaa
jmp
pop
stos
in
pop
push
cmp
sbb
imul
rclb
mov
ficoml
stc
dec
push
andb
stos
and
in
pop
jbe
js
mov
into
push
mov
ja
addb
pop
jo
sahf
jmp
xlat
stos
jno
into
dec
mov
mov
cmp
mov
pop
mov
fbld
xor
add
repnz
push
dec
sarb
test
dec
aam
jp
dec
insl
mov
dec
enter
rcrl
cmp
test
xchg
repnz
xchg
into
or
int
stc
push
popa
jae
sub
inc
add
scas
sbb
fwait
and
popf
ret
popa
ljmp
sbb
sbb
mov
repz
push
fcoml
ret
jo
loopne
mov
xchg
insb
int3
cwtl
ret
test
push
fldt
dec
call
orl
nop
fdivr
mov
sbb
rcrb
cli
pusha
cmpsb
push
in
out
iret
int3
push
sbb
sub
sub
pop
int3
cmp
dec
jmp
aaa
call
stc
fwait
out
and
fbld
fs
adc
jne
cmc
adc
sbb
loopne
add
clc
and
test
xchg
push
aaa
xchg
xchg
pop
in
pop
f2xm1
lcall
ss
dec
pop
mov
ljmp
bound
mov
jnp
lret
xor
pop
or
push
add
scas
mov
adc
dec
scas
mov
out
test
mov
sub
js
xor
inc
test
inc
stc
addr16
mov
imul
mov
mov
shll
popf
jmp
dec
dec
mov
mov
sbb
loope
dec
cs
jmp
jns
in
filds
andl
mov
repz
shrb
jno
lret
sahf
pusha
jb
jae
aaa
ja
jg
cmp
inc
sahf
add
cltd
outsl
push
xchg
xchg
test
mov
stos
jns
lods
test
arpl
cmpsl
adc
cmp
sbb
adc
push
lds
or
cmpsb
and
lods
aas
and
jno
mov
mov
push
mov
imul
testl
js
lds
in
mov
popa
mov
int
xchg
dec
push
int3
js
cmpsl
popf
popa
mov
lods
into
ret
mov
hlt
cmp
push
sar
ret
mov
mov
pop
fcompl
adc
insl
dec
nop
cli
mov
mov
sbb
pop
testl
fsubrs
or
pop
cltd
cli
pop
push
xchg
mov
xlat
or
xchg
ret
lds
push
xchg
sub
movsl
jae
push
xlat
pushf
mov
push
xchg
sarb
jno
adc
ljmp
lds
adc
inc
imul
xor
pop
das
aas
dec
iret
cmp
imul
cmpsb
mov
dec
out
cld
mov
and
ret
scas
fstpl
push
jle
mov
lods
inc
movsb
stc
pusha
in
stc
add
xlat
gs
out
cmp
dec
popf
mov
jmp
jo
pop
inc
aad
pop
jno
shlb
jl
sbb
pop
pop
fbld
stos
ss
imul
mov
sbb
jbe
add
cmp
fwait
mov
es
pop
mov
bound
mov
std
je
sub
inc
into
jecxz
test
or
fs
enter
stos
xlat
jge
sti
mov
adc
out
or
sub
jne
nop
mov
imul
sarb
repnz
daa
cmp
sbb
or
fnclex
out
mov
inc
pop
inc
jo
sub
sub
jle
scas
or
mov
cmp
mov
and
and
xchg
xor
sub
cld
cwtl
jmp
dec
cs
or
je
mov
dec
insl
es
insl
dec
aas
cmp
iret
sahf
adc
inc
add
adc
js
cld
pop
pop
ss
jle
and
cltd
adc
pushl
mov
and
jle
mov
rolb
dec
push
push
xchg
imul
pop
jbe
lcall
or
aad
pop
mov
adcl
xchg
cld
push
popl
ljmp
inc
fwait
in
mov
mov
and
xor
pop
data16
cld
outsb
pusha
leave
bound
pop
cld
mov
scas
loopne
add
inc
out
ret
dec
pop
cmp
repnz
pop
shl
jbe
adc
das
inc
sahf
nopl
ffree
shr
mov
sbb
and
hlt
cltd
aaa
cmp
xchg
sbb
jp
mov
push
sbb
adc
inc
mov
jb
sbb
aaa
mov
test
sbb
lock
push
inc
inc
push
mov
mov
rcrl
jnp
les
testl
fidivrl
stc
jp
mov
pushf
loope,pt
cmc
cmpsb
xor
pop
popl
jle
lods
ljmp
lea
jno
and
xchg
lods
test
movsb
in
dec
jp
add
push
dec
stos
ljmp
fs
cmp
scas
mov
daa
xchg
jge
stc
xchg
fwait
inc
testb
push
rcll
adc
sahf
pop
dec
dec
xlat
das
repnz
dec
cwtl
mov
loope
mov
fildll
dec
shlb
jo
scas
jmp
jae
cmp
test
not
xor
ror
loopne
add
pop
es
mov
xor
jp
mov
inc
inc
outsb
scas
dec
pop
dec
cmp
lret
adc
sub
push
xor
mov
imulb
js
push
sbbb
jae
sbb
repnz
in
das
lret
call
nop
jns
lea
add
cmp
xchg
xor
xor
pop
repnz
mov
push
stos
cmp
imul
test
cmp
jnp
out
inc
daa
mov
mov
push
mov
les
psubsb
mov
push
gs
clc
mov
push
jo
sbb
fcom
lea
push
insl
nop
out
jecxz
test
fldt
sub
mov
lret
leave
bound
push
pop
aad
idivb
dec
and
test
mov
lret
cld
xor
popf
enter
mov
out
xor
push
ds
add
es
xor
add
xchg
popf
in
sub
call
outsb
fistps
repz
test
cmp
mov
stc
or
xchg
xchg
mov
push
div
data16
jb
int3
inc
insl
mov
push
mov
imul
aas
jl
xchg
lods
mov
lretw
dec
ds
pop
int
das
daa
pop
mov
mov
ja
iret
cmp
pop
int
insb
adc
orb
rolb
imul
inc
or
sub
and
mov
cwtl
jno,pt
add
inc
add
nop
sub
shrl
outsb
push
cmp
or
push
dec
sub
insb
lods
popa
fisubs
mov
lods
xor
fistpl
pop
clc
push
or
cmp
ljmp
mov
mov
mov
sub
or
mov
adc
mov
mov
inc
xchg
fimuls
mov
lret
std
rcrb
adc
cmp
gs
pushf
stos
shl
fcoml
gs
out
inc
pop
pop
mov
or
cmp
rorb
in
xchg
or
xor
test
jge
ret
and
jecxz
int
push
mov
bound
out
gs
insb
ffreep
addr16
imul
dec
imul
push
aam
jecxz
sbb
xor
push
push
jne
push
sahf
imul
dec
mov
fdivr
mov
mov
sub
mov
sar
stos
rcl
shrb
lock
cmpsb
daa
jle
mov
insl
jo
sahf
das
ret
dec
aad
push
add
add
inc
jmp
addr16
push
int
lods
or
xchg
out
inc
mov
lock
jae
mov
add
cmp
push
mov
sahf
imul
fwait
push
test
and
aas
icebp
xor
notb
mov
fimuls
sbb
call
bound
jge
rcrl
mov
sarb
mov
in
in
mov
mov
pop
ret
xorb
dec
shlb
mov
adc
jae
or
pop
mov
repnz
xor
in
ror
push
and
arpl
mov
jnp
into
lods
sti
and
xchg
pop
and
and
sub
arpl
add
insl
int3
into
inc
lret
aad
mov
inc
and
jmp
clc
loop
inc
sub
push
push
mov
roll
jg
mov
jle
xchg
call
xor
push
sub
lock
inc
ss
stos
movsb
mov
add
sbb
rorl
in
scas
mov
xor
ficompl
mov
std
mov
add
xchg
push
xlat
cmp
clc
test
lea
inc
outsb
xchg
gs
pop
pop
imul
adc
cs
out
mov
arpl
es
xchg
push
xor
dec
test
jb
pop
sbb
pop
ss
es
ret
dec
sbb
popf
add
or
rcrb
test
or
mov
cld
xor
cwtl
push
jae
bound
cmp
andps
jge
imul
loopne
xorl
in
mov
push
insb
jns
mov
sub
shl
xchg
jp
jae
popa
sub
inc
or
push
dec
fs
mov
aas
loopne
jae
push
aad
je
mov
cmp
push
sub
loope
insb
push
rcll
test
xchg
ljmp
popa
mov
inc
push
sbb
pop
add
adc
ja
inc
jne
jle
fs
xor
stc
inc
cld
insl
adc
jmp
in
xor
jb
into
cli
push
dec
fwait
jl
addr16
and
jl
mov
aas
dec
or
inc
pop
push
jne
xor
xchg
jle
gs
jecxz
sbb
shl
ljmp
lret
dec
mov
pop
aas
shll
cli
icebp
cmpl
jne
in
pop
mov
or
mov
pusha
out
imul
in
jnp
lret
pop
add
cld
fucom
sub
pushf
pop
xor
jno
push
sbb
or
dec
jp
and
xlat
mov
js
ja
adc
out
push
mov
movsl
dec
xchg
mov
lcall
mov
sti
setle
inc
nop
dec
pushf
pop
or
out
adc
adc
jle
jo
clc
gs
or
lds
xchg
popa
xchg
les
dec
mov
lods
push
push
add
out
fs
adc
out
pusha
pextrw
es
mov
pop
push
adc
scas
les
insb
inc
and
or
jae
inc
das
pop
dec
push
loope
dec
push
sti
lret
jno
mov
rol
jo
mov
xor
int3
loopne
mov
mov
pusha
jb
push
xlat
inc
in
sub
jnp
insl
lods
xor
clc
push
imul
in
scas
lahf
sub
mov
std
lahf
mov
mov
adc
out
scas
fisubs
jo
pop
into
fwait
in
or
adc
sbb
shr
xchg
cmp
scas
sub
mov
inc
outsl
pop
data16
sub
fcoml
xchg
jecxz
mov
xchg
enter
sub
add
cmpsb
push
sarb
mov
add
xor
and
ret
mov
add
outsb
cltd
and
es
mov
or
mov
push
data16
push
or
insb
call
jge
add
add
xchg
rcl
sbb
data16
shll
aaa
repz
jnp
cld
mov
sub
push
testl
cltd
ret
out
cld
push
dec
jns
jne
icebp
jle
dec
xchg
in
mov
add
pop
fcom
xor
sbb
iret
inc
add
test
sbb
cltd
inc
cmp
jmp
gs
xor
xchg
jns
sub
stos
dec
sbb
jp
pop
pop
cli
push
test
cmp
inc
and
ljmp
mov
or
jp
aaa
sub
roll
inc
sbb
aam
or
test
dec
cmp
in
test
jnp
mov
insl
stos
sub
das
inc
test
lods
cmp
push
mov
mov
dec
dec
in
mov
mov
adc
shrl
pop
lret
leave
addl
or
dec
gs
xor
add
or
in
shl
outsl
cmp
inc
imul
dec
in
and
and
je
subb
xchg
inc
subb
outsl
adc
and
stos
shlb
lret
mov
test
fimull
sub
push
pop
mov
insl
aam
lods
stos
jnp
scas
xor
je
arpl
xchg
mov
jbe
leave
fcomp
test
incb
sbb
push
sbb
lds
inc
popw
cltd
lock
fistps
sbb
scas
push
fstl
fidivl
and
mov
gs
cld
cmp
add
jmp
cmp
jle
outsb
int
lock
daa
lcall
test
mov
fs
mov
xchg
pop
mov
mov
adcb
mov
inc
pop
dec
sub
stc
dec
or
sub
adc
adc
insl
xorl
orl
fndisi(8087
mov
vshufps
xor
push
sarb
iret
jno
mov
std
imul
jb
xor
jg
fcoml
icebp
data16
jg
sub
xchg
inc
inc
jo
mov
or
rcl
shll
gs
lock
icebp
mov
das
inc
inc
and
popf
sbb
es
xor
add
aad
icebp
lret
push
sbb
fldcw
dec
jmp
mov
or
jmp
popf
and
jns
rorb
out
lcall
adc
mov
and
jp
mov
mov
fistpll
das
out
or
push
jmp
outsb
xchg
or
out
mov
fists
mov
movsl
mov
add
pushf
stc
dec
fsubs
inc
xor
dec
cld
bound
aaa
adc
xor
nop
addb
xor
and
stc
lcall
repz
add
xchg
std
mov
imul
xchg
jb
xor
xor
ss
testb
sub
jns
fdivrl
popf
adc
push
xchg
pushf
xor
pop
subl
sub
lahf
and
orl
decb
lods
cmpsb
loope
push
cmp
bswap
mov
inc
sub
xchg
lret
mov
cld
cmp
rcrl
and
test
lods
pop
ficompl
jne
sbb
mov
sub
pusha
pop
pop
mov
sbb
stos
les
clc
sub
sub
jae
push
lcall
je
popf
sbb
movsl
pop
jns
mov
xor
lods
jecxz
jp
jb
sti
jnp
insl
call
es
outsl
xchg
pushf
ret
and
in
xorl
dec
in
or
cmpb
mov
fcoml
sbb
out
push
xchg
xor
mov
adc
push
cwtl
ret
or
lock
dec
mov
add
add
sub
repnz
std
stos
negl
cmp
call
cs
out
je
lcall
pop
cmp
testb
call
dec
lds
inc
fldenv
jl
dec
lods
mov
test
nop
les
stc
pop
in
sub
xchg
mov
fldl
mov
mov
out
adc
sti
dec
ja
push
rcrb
mov
jno
daa
in
jecxz
sbb
call
dec
mov
xor
mov
scas
jecxz
mov
jecxz
cmpsl
xchg
mov
push
int3
loope
and
bt
xlat
mov
in
cmp
mov
mov
test
adc
lcall
frstor
cli
cmp
test
pop
mov
sub
mov
dec
sti
fwait
in
aad
inc
es
xchg
stc
and
add
jo
stos
das
into
dec
push
and
sbbb
mov
insl
add
cmc
mov
rol
das
cmp
hlt
iret
xor
outsl
adc
testl
stos
dec
ret
cmp
sbb
sbb
mov
or
mov
lds
mov
js
shll
bound
insl
xchg
mov
add
dec
es
std
ja
add
outsl
jne
mov
pop
adc
andl
ljmp
aad
insb
dec
das
sarb
xor
test
xor
lods
xor
mov
pop
push
int3
push
xor
fisttpl
xchg
push
xchg
clc
cmp
sbb
add
push
add
inc
xchg
adcl
jne
and
xchg
aas
or
imul
int
aas
lret
sbb
dec
sub
and
outsb
cmp
pop
sbb
push
jns
jbe
push
int
lods
test
sti
adc
cli
loopne
jb
push
push
enter
jb
test
pop
pop
call
sub
test
out
jne
pop
test
jge
mov
dec
sub
jle
repz
and
cld
fcoml
xchg
ljmp
call
push
daa
mov
stos
cmp
mov
rcr
push
mov
xlat
imul
pop
mov
fwait
rcll
and
hlt
sbb
or
cli
test
push
les
sub
test
or
and
arpl
lcall
cmpb
fwait
sbb
xchg
mov
test
sahf
mov
pop
lock
fwait
mov
es
lods
mov
pop
rcll
jle
mov
pop
xchg
outsb
xor
outsl
mov
lods
xor
push
ljmp
adc
pop
int3
sarl
xchg
pop
xchg
inc
add
push
add
loopne
pop
test
ret
test
or
mov
pop
mov
push
movsb
cmp
mov
rclb
shlb
jb
jae
push
sub
and
push
xor
cmp
sbb
cs
inc
push
fstpt
lds
and
fsts
icebp
xchg
jno
and
cmp
arpl
xchg
mov
mov
loop
imul
cwtl
and
mov
xchg
xchg
cmp
std
xchg
or
inc
scas
xor
ret
ret
or
adc
mov
xor
mov
cmpsb
lcall
push
mov
xor
inc
mov
pop
into
lcall
inc
test
push
bound
mov
out
xchg
sub
xchg
and
dec
scas
scas
mov
mov
or
xchg
test
fdiv
push
sbb
cs
and
add
imul
add
push
inc
movsb
cmp
sbb
popa
and
inc
mov
mov
push
ret
pop
and
sub
mov
test
jmp
xor
push
or
orb
adc
or
je
ja
xchg
data16
xlat
jno
jno
scas
mov
mov
jle
jl
jno
leave
mov
cmp
sub
mov
jecxz
fisttpl
mov
push
fs
arpl
inc
add
add
es
icebp
int3
cmp
cmp
fidivrl
ja
lods
mov
jge
add
push
jp
popa
loope
lahf
mov
adc
mov
push
pop
cmp
stos
sub
dec
in
stos
dec
xchg
cmc
clc
pop
jns
adc
mov
adc
add
sbb
aaa
xchg
fistps
sub
fs
fimuls
fdivrl
mov
mov
pop
jl
divb
pop
fbld
mov
fld
out
push
cmp
je
ds
mov
mov
mov
adc
out
je
inc
and
mov
inc
jno
mov
pop
and
fidivrl
xchg
dec
lods
leave
das
call
lcall
nop
add
xchg
pop
xchg
add
cmpsb
mov
lods
sti
or
ret
push
cltd
pop
inc
cmp
jbe
imul
fidivrl
pusha
out
in
sub
pop
jg
gs
mov
out
push
lcall
xchg
lea
movsl
cltd
out
lods
inc
add
mov
fs
pushf
xlat
dec
rclb
fdivp
push
and
ret
je
div
mov
push
cmp
mov
test
cmp
iret
cmp
lahf
pop
dec
jp
scas
outsl
sub
mov
repz
mov
sqrtps
arpl
mov
jo
movhlps
fisubrs
and
mov
dec
dec
jge
sbb
dec
scas
sub
es
lock
sub
cmc
clc
sub
mov
in
lods
shll
lods
sub
arpl
pop
into
ret
add
in
push
outsl
mov
add
daa
mov
xor
xor
mov
ret
inc
in
arpl
adc
inc
in
adc
inc
cltd
mulb
mov
sbb
mov
dec
imul
lret
das
push
and
cs
clc
lods
in
mov
or
fbstp
pop
push
sarb
lret
pushf
imul
mov
push
push
mov
popa
sarl
mov
mov
jnp
rcl
aas
cwtl
in
imul
pop
ja
cmp
sbb
dec
mov
or
in
jp
sbb
pusha
outsb
pop
test
jl
or
jb
dec
jmp
mov
fistpl
daa
mov
jl
rcrl
sbb
sbbl
jno
mov
or
push
mov
fs
insb
sarl
cmc
lods
sub
dec
inc
dec
jg
cmp
mov
jae
out
test
jle
lcall
aas
mov
dec
sbbl
xchg
dec
fdivrs
movsb
push
fwait
jno
mov
and
rcrl
es
pusha
scas
int
movsb
aam
mov
sbbl
sub
push
xchg
loopne
xor
popf
icebp
xchg
jae
nop
mov
pushf
mov
insl
and
mov
push
les
fldcw
sti
pop
decb
jl
jb
push
xor
add
fwait
mov
in
iret
jg
cli
andb
fisubs
dec
mov
mov
dec
leave
loop
mov
pop
push
jmp
gs
ds
in
dec
push
or
pop
mov
push
jb
push
int
dec
xacquire
xor
call
shrb
adc
ret
xor
push
inc
dec
movsb
add
sub
push
jmp
push
sub
mov
insb
stc
mov
xor
and
jl
rorl
data16
test
ljmp
mov
and
cmp
or
inc
pop
jp
xchg
nop
or
outsl
imul
fdivp
std
mov
roll
in
add
xchg
jp
loop
aam
ds
xor
lock
dec
js
test
imul
mov
push
mov
mov
mov
pop
stos
dec
mov
inc
ss
jmp
ss
nop
lods
shld
nop
mov
loopne
cmp
dec
sti
shll
lods
or
cmp
popa
mov
movsb
mov
lea
xlat
sub
out
jo
sbb
roll
test
lods
cmp
mov
das
cmp
push
fildll
sahf
arpl
ljmp
scas
lock
pop
popf
imul
shrb
out
loopne
mov
jge
adc
addr16
stc
fadds
push
mov
sub
jbe
mov
cli
mov
test
rcll
push
enter
aad
sub
adcl
mov
inc
inc
push
je
fbstp
push
adc
sbbl
inc
and
adc
push
stos
adc
and
icebp
add
lahf
mov
mov
xlat
lret
pop
cmp
iret
cld
push
cld
lea
jns
mov
jbe
sbb
cmp
addb
jbe,pn
jno
adc
fists
sti
outsb
outsb
jp
sub
add
int3
sub
jb
repz
xchg
pop
xor
lret
inc
cmp
mov
clc
add
sbb
cmpsb
aad
and
aaa
fcmovb
pop
sbb
xchg
ret
fdiv
stc
loope
cwtl
mov
jge
xchg
and
jmp
sti
fs
repz
cmp
in
add
sub
and
dec
and
pop
or
test
rorl
pop
aas
jo
scas
addr16
mov
and
or
in
inc
mov
jp
leave
int3
adc
adc
and
std
loop
in
mov
into
sbb
out
cmpsl
add
and
nop
fisttpl
insl
jge
jge
jge
dec
pop
dec
clc
add
adc
ret
jno
mov
lea
xor
jecxz
push
adc
mov
pop
xchg
inc
and
test
stc
push
cmc
mov
mov
and
sub
scas
inc
fstpt
loopne
popa
movsl
and
and
pusha
stos
fidivrs
jo
call
push
xchg
push
jne
mov
ret
dec
cli
divl
aam
stos
cmp
adc
in
pop
cmpps
push
adc
jl
jae
push
mov
outsb
xor
loope
inc
inc
adc
rclb
xor
inc
insb
fnstsw
xor
sbb
pop
lds
inc
stc
xchg
test
and
adc
test
xchg
sub
pop
jge
fstps
adc
push
std
je
leave
lret
out
lahf
mov
and
int3
pop
add
iret
shlb
sub
xchg
adc
dec
popa
mov
insl
mov
mov
inc
mov
out
push
mov
cmp
mov
imulb
scas
test
push
xchg
xor
cmp
repnz
je
xchg
push
fcoms
stos
fisubl
ja
ret
sbb
outsb
and
jae
sbb
jle
mov
adc
adc
repz
imul
cmp
push
dec
cmp
and
sar
rclb
or
jne
sub
pop
pop
or
xor
mov
cs
jo
add
iret
test
pop
sub
icebp
xor
inc
insl
test
pop
popl
cmp
mov
cmpsb
movsl
pop
xor
cmpsl
das
jno
xor
xchg
fdivrs
enter
roll
stc
xchg
psubw
add
and
inc
xchg
push
mov
dec
sub
xchg
adc
imul
jmp
nop
and
out
fistl
sub
mov
dec
mov
je
insl
test
mov
insb
mull
and
xor
test
jo
sbb
cmc
je
fstpt
dec
mov
mov
scas
jae
pop
lods
pusha
aaa
jge
cmpsb
fsubr
dec
cmp
dec
repz
mov
add
push
jae
shl
fsubs
dec
loop
mov
inc
in
xor
mov
je
or
jecxz
dec
insl
icebp
daa
add
imul
mov
outsl
jnp
mov
mov
daa
shll
pop
pop
int
inc
jns
mov
rolb
sbb
mov
or
push
pop
jns
cmp
test
adc
sbb
ja
cmp
sub
pop
std
gs
or
cs
inc
add
push
ja
jp,pt
adc
and
mov
ret
xchg
mov
mov
adc
std
sub
mov
cwtl
jne
leave
cmp
xchg
mov
add
jo
cs
jg
inc
sbb
and
mov
push
push
stos
jp
clc
dec
ret
jmp
cmp
add
inc
jbe
in
inc
xor
out
data16
or
inc
lahf
int3
mov
aam
mov
ret
and
ja
out
cs
pop
rorl
push
stos
sbb
shll
negb
pop
daa
mov
pop
maxps
jbe
xchg
sub
pop
mov
push
sbb
pop
push
mov
lock
cwtl
pop
imul
in
pushw
enter
rep
int3
adc
insl
je
xor
inc
js
fwait
fs
sbb
push
sbb
inc
or
ja
lods
xor
adc
aas
sub
subb
movsb
scas
fwait
cmp
andb
call
push
jg
aas
int3
and
insb
jae
add
pop
aad
mov
fwait
movsl
setle
rcr
fwait
scas
fwait
int
insl
cmp
popf
push
xor
shr
movsb
mov
loopew
push
jp
inc
pop
enter
cwtl
insl
pushf
arpl
imul
mov
pop
inc
addb
pop
jle
pop
test
loope
shrl
ret
pop
mov
dec
or
mov
and
ljmp
jmp
decb
inc
jbe
xor
jle
cltd
sahf
mov
sti
out
test
cmp
out
push
sahf
pusha
xor
add
mov
movsl
jno
xlat
stos
gs
icebp
mov
loopne
es
in
xchg
ljmp
movsb
dec
stc
mov
out
mov
pop
or
push
jge
fs
cmp
jb
mov
add
dec
js
cmp
push
adc
in
lret
loop
pop
push
int
inc
testl
and
jae
mov
sbb
add
js
adc
into
je
push
pop
inc
lods
lods
and
xchg
and
jge
and
fildll
shlb
mov
andb
jno
dec
ret
sbb
sahf
cmp
push
sbb
and
mov
push
mov
in
stos
imul
jecxz
cmpsb
push
loope
jo
mov
dec
mov
lahf
repz
sub
xchg
or
sub
test
mov
das
rolb
pushf
pushf
loope
fnsave
dec
cmp
jg
ficoms
cs
cld
xchg
xchg
sub
push
out
cmp
sub
icebp
fninit
loopne
mov
loope
test
jle
dec
rcrl
push
outsb
lea
inc
imul
je
ret
push
cmp
add
sbb
push
nop
dec
sbb
out
xor
ljmp
dec
cs
shlb
cmpsb
mov
stos
pop
pop
push
dec
lds
mov
mov
cld
fwait
cmp
fidivs
dec
fistpl
in
and
or
or
push
pop
cmpsl
out
popf
std
daa
les
inc
fdivs
pop
lret
inc
sub
test
das
inc
pusha
add
cmc
and
mov
idiv
adc
cmp
sbb
imul
mov
pop
jmp
dec
mov
mov
jnp
fsubrs
repz
pop
mov
mov
daa
test
mov
jp
sbb
jmp
flds
repnz
loop
pop
mov
pop
repnz
or
shl
dec
jno
jo
pop
jae
clc
mov
jmp
add
aam
popf
mov
icebp
sbb
ds
out
dec
xor
movsb
imul
pop
cmpsl
jp
pminub
sub
popf
pushf
lods
icebp
jge
mov
shl
and
dec
int3
push
or
mov
mov
mov
aad
cmp
movl
je
cmp
xor
or
sbb
lahf
cwtl
dec
xor
pop
add
into
ret
test
fisttpll
loopne
jmp
mov
xchg
xor
rolb
fwait
pusha
mov
xchg
out
mov
add
dec
mov
cmpsb
shll
mov
pusha
pop
push
push
pop
mov
push
inc
clc
jmp
dec
shll
jge
xor
dec
cmc
loope
out
push
push
jns
and
lret
sub
inc
adc
hlt
pop
push
gs
movsl
fiaddl
add
sub
or
out
cmp
ds
rcrl
outsl
cmp
pop
shrb
inc
dec
or
scas
bswap
aad
sub
stos
aam
cmpsb
out
xchg
loopne
push
inc
in
xchg
mov
lods
add
test
jne
scas
mov
mov
dec
pushf
fcompl
lret
push
pop
add
imul
fmuls
cmpsl
imul
sbb
popf
insb
xor
push
mov
hlt
pop
xchg
leave
scas
in
add
or
mov
jecxz
pop
jecxz
stos
outsb
and
rcll
pusha
pushf
push
pop
hlt
lret
push
push
cwtl
out
pusha
fisubrs
ret
rcrb
popl
mov
xchg
jecxz
xor
lret
repnz
imul
arpl
cmp
mov
push
das
mov
jb
adc
sbb
jmp
fldenv
add
lods
js
out
add
sti
test
into
in
sub
xchg
popl
push
lock
pop
lret
inc
icebp
dec
jl
inc
dec
fstps
pushf
repnz
cmp
popf
push
sub
jge
adcl
jbe
fsincos
ds
jmp
or
lcall
cmp
out
push
xchg
es
adc
fbstp
scas
or
or
rcll
data16
jo
into
outsl
fiadds
je
mov
dec
adc
jge
aam
testl
jg
dec
orb
lret
lds
push
daa
pop
pop
scas
fwait
ret
lea
pop
lods
out
mov
or
inc
daa
in
mov
cmc
pop
mov
ret
out
cmp
loope,pn
pop
movsb
movsl
mov
push
dec
loopne
dec
incb
fwait
js
mov
insl
pop
push
je
and
xor
or
es
mov
aam
and
dec
in
idivl
jecxz
insl
push
xchg
shll
out
daa
pop
xor
stos
mov
mov
data16
pop
pop
loopne
push
sbb
push
add
hlt
ja
adc
jb
add
loopne
out
push
ljmpw
or
xor
sarl
pop
popl
xorb
xchg
in
pop
pop
xchg
repz
lock
and
enter
dec
mov
inc
enter
mov
icebp
movsl
xchg
adc
sbb
push
imul
sahf
push
jmp
stos
xchg
arpl
inc
or
jecxz
aad
xor
nop
jns
push
mov
addb
aam
icebp
popa
add
inc
push
test
sub
ds
or
mov
aad
push
arpl
into
push
jae
arpl
cltd
stos
stos
pop
sahf
xchg
pop
lock
scas
mov
dec
testb
aad
mov
enterw
sub
sub
cltd
sbb
in
sub
mov
mov
inc
fwait
sbb
xchg
mov
out
sbb
xchg
fisubrs
add
cmp
push
leave
imul
ja
cwtl
in
cltd
and
mov
mov
test
pushf
sarl
cmp
shlb
jno
into
stos
out
lods
scas
out
gs
negl
jbe
sub
out
lock
push
insl
xor
inc
dec
xchg
dec
cmp
or
dec
sbb
pop
mov
movsl
xchg
fstl
and
cmp
hlt
xchg
fildl
fstpl
xor
scas
jbe
inc
add
mov
xor
and
lcall
repz
icebp
sbb
or
ja
iret
insl
daa
cmp
aad
adc
and
jmp
xor
mov
sub
jns
cmpsl
sbb
sub
inc
shll
cli
xlat
sbb
mov
dec
sub
scas
aas
pop
das
movsl
xor
jmp
ljmp
out
addr16
sub
and
nop
str
xor
xor
add
fwait
nop
push
lret
jge
bound
jp
pop
push
icebp
push
mov
je
rclb
cmp
add
pop
andl
push
xchg
jno
into
out
jns
es
test
adc
xchg
movsb
add
push
std
xor
lcall
bound
add
xchg
adc
or
lds
lds
push
fcoms
loop
aas
fwait
std
push
aas
aad
jle
call
in
dec
insl
scas
ret
xor
inc
pop
dec
lret
addr16
pop
xchg
jns
xchg
jbe
and
sbb
push
call
fbstp
xlat
les
out
adc
pop
add
push
xor
outsb
clc
jmp
and
push
jmp
push
lahf
ds
push
jg
push
xchg
rcrl
pop
xchg
cmp
pop
inc
iret
adc
adc
jae
aam
ja
jp
jne
in
leave
mov
add
lods
cld
adc
imul
pop
ret
xor
inc
inc
adc
jo
repnz
mov
xchg
pop
inc
xor
cwtl
out
push
aas
rep
test
adc
dec
call
or
push
add
repnz
cmp
loope
repz
mov
sub
cmpsb
pushf
jl
cld
rorb
and
cmp
cwtd
pusha
imul
push
andl
mov
jmp
jle
and
fstpt
push
or
cltd
push
add
clc
cltd
mov
xchg
movsb
cmpsb
movsb
inc
lret
icebp
out
or
stos
mov
xor
test
jae
add
add
add
push
xchg
syscall
push
sti
dec
xor
push
push
into
cmpsb
pop
sub
inc
sbb
add
fstpt
jp
sbb
outsb
inc
mov
cmp
incl
enter
loop
out
jb
dec
cmpsl
out
pop
jae
ficomps
je
dec
test
cmp
mov
cmpsl
leave
lea
jnp
leave
scas
es
sahf
or
leave
jle
mov
mov
fucomp
xor
mov
mov
and
dec
rcll
cmp
mov
cmp
into
cmpsl
cld
enter
cmp
mov
gs
rcll
push
outsl
aad
add
jns
movsb
into
enter
aas
test
or
sarb
adc
mov
xorb
pusha
push
and
adc
fcmove
sub
movsb
mov
rolb
popf
arpl
xchg
jnp
js
scas
xor
pop
mov
loopne
fnstsw
or
dec
cmpsl
dec
insb
push
inc
xchg
test
lods
sti
adc
out
popa
es
mov
insb
into
stos
enter
ljmp
pop
pop
das
mov
les
sub
lds
push
cwtl
push
cmp
jl
fwait
iret
repz
popa
in
mov
mov
scas
jl
push
repz
inc
test
mov
fwait
or
pop
jl
or
rcrl
imul
push
scas
xchg
mov
sub
and
shll
fldenv
dec
out
std
xchg
jbe
test
leave
mov
push
push
hlt
inc
cmc
cmp
test
enter
mov
inc
mov
enter
imul
mov
aas
mov
dec
imul
cmp
lcall
int
je
dec
dec
es
loope
je
test
add
pop
std
jnp
aas
jp
ror
ss
push
cmp
loop
lods
mov
and
mov
idivl
test
add
cmp
out
aaa
aad
into
add
push
sub
mov
leave
lods
insl
jb
dec
fwait
bnd
scas
sbbl
cmp
adc
push
cs
fucomp
jge
xchg
test
mov
dec
stos
pop
xchg
jg
dec
mov
subb
jne
cwtl
pop
cltd
mov
repz
inc
xchg
loope
nop
mov
push
adc
push
sub
stos
xor
fs
lea
cmp
jecxz
xchg
sub
inc
mov
shrl
cld
stc
leave
popa
lret
inc
push
jno
ds
jp
or
pop
out
shrb
pusha
fbstp
adc
push
loopnew
in
or
add
jmp
cmp
jmp
or
into
mov
jecxz
int
push
incl
jge
jne
fimull
daa
inc
test
push
push
imul
imul
and
cltd
add
and
xor
xor
cmp
mov
ss
rclb
je
add
pop
int3
push
stos
xchg
aaa
mov
push
push
fisttpll
xchg
loopne
jl
loop
idiv
xchg
push
call
test
mov
and
and
test
cmp
mov
out
and
mov
cmp
mov
in
dec
cwtl
cmp
xor
sub
cwtl
mov
mov
mov
popf
testl
mov
out
or
into
jns
jnp
pop
ret
mov
add
call
lods
mov
mov
and
addr16
insb
test
aaa
divb
popa
jno
jmp
movsl
sbb
sbb
inc
cs
insl
add
add
mov
sbb
pop
mov
popf
pop
push
sbb
hlt
std
int3
notl
dec
mov
out
jg
pop
jne
shll
iret
aaa
popa
fsubrl
mov
into
data16
lock
lret
push
xor
jle
dec
cmpsl
mov
lods
adc
imul
pop
pop
mov
ret
xor
and
cltd
imul
and
and
push
outsb
fsubs
es
loopne
inc
push
push
rolb
imul
jb
jno
fisubs
int3
sub
xchg
imul
stos
pop
xchg
jnp
pop
mov
xchg
shl
mov
pop
scas
mov
push
fwait
sub
mov
mov
xchg
stos
push
dec
adc
fsubl
cmp
sbbb
cli
mov
sbb
lock
aaa
inc
je
or
pop
xchg
popf
xor
xchg
fcoml
out
hlt
sbb
jp
inc
ficomps
ja
mov
fnsave
xor
daa
aaa
xor
mov
and
cmpsb
add
icebp
ja
lahf
call
int3
out
int
push
popa
rcr
jp
cmpsl
int3
push
mov
outsb
pop
sbb
sub
pop
fbld
adc
jp
sti
fstpl
rcrl
je
jnp
pop
push
hlt
mov
clc
add
ficomps
je
orb
test
or
sub
or
xor
push
jmp
sub
add
jo
ljmp
jne
orl
subl
icebp
pop
in
enter
scas
movsb
xor
push
ds
ss
call
mov
sub
fdiv
pop
mov
mov
ror
mov
daa
addr16
je
sub
cltd
roll
es
loop
popf
push
test
add
jbe
fsubs
vorps
jae
add
and
cmp
push
mov
lock
dec
sbbb
hlt
mov
movsb
gs
jl
shll
loope
push
or
mov
nop
xorl
push
outsl
add
pop
adc
jecxz
insb
push
sub
adc
cmp
loope
lods
js
jo
jp
mov
dec
cmc
sbb
jb
and
push
adc
lea
cmp
mov
xchg
imul
cmp
pop
in
inc
adc
inc
cmp
mov
mov
adcb
dec
repnz
dec
test
shrb
or
push
push
or
test
scas
push
sub
mov
ljmp
fsubrl
rcr
pop
adc
or
sbb
in
push
sbb
decl
repz
mov
xchg
in
leave
inc
sub
mov
inc
sub
bound
add
pop
sbb
pop
or
outsl
and
pop
lahf
pop
or
sbb
inc
dec
jb
jnp
jbe
cmp
or
inc
addr16
xchg
mov
mov
sub
daa
dec
ret
pop
leave
xor
jle
dec
int
adc
push
push
pop
adc
roll
mov
inc
insb
out
xor
and
adcb
stos
add
pop
pop
inc
sbb
bound
mov
jne
mov
cmp
add
daa
sub
and
inc
inc
repnz
cmp
cltd
pop
xlat
sub
in
and
nop
push
pop
imul
jb
push
mov
push
push
inc
add
in
aad
xor
cld
mov
lret
pop
mov
push
mov
ljmp
add
insb
fldt
inc
outsb
cltd
adc
add
sub
push
mov
adcl
inc
push
cltd
shlb
dec
push
imul
inc
packsswb
sub
rcrb
negl
shll
ja
and
mov
mov
jmp
xchg
popf
pop
in
ljmp
out
inc
push
cmc
sbb
and
xchg
aaa
adc
dec
inc
adc
adc
arpl
sbb
jmp
mov
ja
int3
aad
cmp
lods
cmp
ss
ftst
adc
cmpsb
or
aad
shl
out
push
mov
rcr
lods
popf
mov
inc
or
or
mov
addb
lock
mov
push
cmp
cli
imul
roll
sub
and
jbe
call
and
lods
and
adc
jmp
add
xor
mov
xor
popa
mov
xor
out
lea
xorb
xlat
bound
fdivrp
stc
jecxz
mov
inc
mov
daa
lea
icebp
or
xchg
and
popw
mov
pcmpgtd
gs
mov
jns
or
mov
out
mov
dec
outsl
psubusb
loope
adc
repz
and
hlt
out
jb
cld
fsubrl
mov
dec
roll
sbb
mov
adc
push
sub
in
sub
cmpsb
aas
adc
mov
push
out
or
icebp
loope
mov
mov
lods
movsb
sub
cmpsl
add
cmp
push
sbb
packuswb
adc
pop
push
dec
out
dec
insl
std
out
dec
push
dec
jo
xchg
scas
addr16
jecxz
fnstenv
cmpsb
imul
add
out
lea
push
out
shlb
push
cmp
pcmpgtd
cs
aas
out
popf
orb
lcall
and
xor
xor
stc
xor
xor
sbb
div
jns
into
cli
scas
icebp
js
dec
lock
pusha
add
or
sahf
dec
cmp
jno
dec
add
ficoml
xchg
xchg
sbb
xchg
inc
push
inc
pop
insl
ja
es
jmp
cwtl
outsl
test
and
inc
inc
insb
les
inc
cmp
jbe
lds
je
iret
pop
xchg
pop
hlt
dec
test
mov
and
sar
push
rcl
imul
mov
incl
out
mov
dec
mov
test
sub
repz
adc
dec
dec
movsb
push
rcll
push
inc
jne
push
xchg
rorl
inc
mov
xchg
mov
xchg
stos
add
loop
daa
dec
pop
sbb
xchg
jecxz
sbb
mov
mov
pop
mov
sbb
adc
xchg
loope
outsb
jecxz
in
fidivrl
adc
arpl
jo
sbb
sbb
jmp
iret
out
mov
fwait
lock
jbe
fs
and
adc
mov
popf
into
mov
and
inc
xchg
test
in
mov
jge
cmc
out
aaa
inc
sbb
arpl
xchg
mov
movsb
xor
xorb
sbb
imul
mov
lods
cmp
dec
xor
jnp
stos
fcoms
pop
adc
xchg
xchg
jno
jle
jne
dec
cmc
testl
popa
orb
mov
mov
sbb
dec
sahf
repz
pop
sub
mov
std
sub
mov
cmc
shl
push
jae
dec
mov
sub
in
aas
lods
xchg
outsb
jnp
push
mov
mov
sbbb
jne
dec
mov
xchg
fiadds
and
xor
and
nop
inc
mov
js
stos
inc
cld
mov
lcall
mov
and
fdivrl
mov
mov
or
int
xchg
lock
xor
pop
jae
ss
xor
and
adc
loopne
dec
sbb
jmp
fistpll
fwait
mov
les
nop
bound
add
xchg
and
je
sti
fcmovb
lods
inc
cmpsb
aad
lcall
jl
jno
lahf
outsl
and
jl
add
roll
faddl
dec
sti
aaa
cmp
imulb
aad
mov
mov
cmp
push
adc
or
mov
insl
xchg
and
jge
addb
cmpsl
ret
imulb
lods
xor
add
and
fs
jmp
or
ljmp
pop
dec
dec
aam
xchg
jno
or
loope
js
inc
jns
mov
daa
scas
adc
xchg
mov
cmpl
dec
lret
jp
sub
jle
sahf
in
pop
fisttpll
add
jecxz,pt
pop
xchg
dec
push
jecxz
ljmp
movsl
std
xor
cmpsl
or
lret
push
push
lret
ds
pop
rorb
sti
stos
adc
pop
add
cmp
pop
aas
cs
xchg
xor
push
xchg
lock
mov
inc
push
pop
daa
mov
jg
jnp
pop
in
jp
sti
push
mov
sub
test
adc
ds
dec
int3
or
push
mov
add
fcomi
jb
or
cmp
stc
mov
xor
lret
adcl
inc
test
sub
pop
fimuls
pop
lock
enter
jl
push
lods
mov
lods
cmp
fnstenv
loop
add
mov
int
pusha
cmp
lret
inc
push
and
rolb
push
and
loop
push
mov
rcll
pop
out
jmp
inc
fwait
sub
jb
roll
jb
pop
call
in
pusha
mov
xor
pop
xorl
jmp
outsl
outsl
movsb
mov
jge
dec
addl
pop
in
mov
test
pop
stos
push
fldt
sub
or
in
xor
das
push
out
xchg
dec
aaa
mov
pop
jb
jae
xlat
mov
mov
fildll
sbb
xchg
mov
shlb
bound
or
out
das
sub
imul
add
adc
int3
hlt
cmp
push
aam
ss
mov
mov
iret
inc
push
xor
test
enter
loope
ljmp
mov
or
adc
lret
xor
sysenter
call
repnz
mov
enter
jmp
and
mov
jecxz
dec
push
mov
ss
subb
fwait
and
mov
xchg
test
mov
xor
adcl
inc
cmpsb
jecxz
call
ja
sub
jb
les
xor
dec
mov
das
xlat
pop
pop
push
mov
pushf
subb
cmpsl
out
aam
push
cmpsl
test
nopl
test
or
bound
into
jae
movsl
push
and
xchg
lcall
push
in
test
out
pop
nop
sbb
insb
loop
imul
push
xor
and
fbld
push
jp
lds
repz
jns
popa
les
adc
inc
mull
xchg
insb
pop
cwtl
ret
push
mov
and
jno
sbb
leave
dec
in
xor
jg
rorl
repz
sub
fldl
rcrl
fstpl
add
dec
sub
sbb
aas
push
sti
xchg
cmpsb
fwait
xchg
xchg
sahf
rcr
in
push
adc
pop
hlt
out
stos
inc
mov
ljmp
mov
jne
cmp
push
jno
aad
lods
jg
imul
mov
loop
fisttps
das
or
shl
sbb
into
adc
or
xlat
cmp
mov
test
push
add
mov
std
outsb
sub
jge
inc
popa
mov
jle
xchg
cltd
adc
xchg
push
mov
cmpsb
sarb
mov
mov
mov
clc
dec
repnz
inc
push
sbb
cmp
out
mov
test
sub
jmp
push
push
xchg
ss
sti
divl
jno
xchg
mov
add
xor
shll
sub
add
dec
inc
call
pop
dec
dec
imul
sub
pop
and
fs
es
jle
mov
cmp
pop
enter
cmp
test
jb
adc
cmpl
mov
imul
jb
mov
inc
sub
mov
mov
mov
shlb
and
or
jecxz
mov
and
sahf
imul
xchg
iret
sbb
mov
cmp
adc
cld
aam
pop
pusha
push
jno
leave
mov
cwtl
nop
mov
or
fwait
sbb
rol
mov
cmp
int3
jno
lods
lcall
mov
stos
outsb
popf
aaa
xor
loop
mov
rolb
imul
test
stc
inc
jno
lcall
or
xlat
sbb
add
cmp
sub
push
ljmp
into
cli
ret
cs
movsb
mov
lea
mov
outsb
jmp
xor
in
out
js
stos
inc
mov
loope
enter
push
popf
mov
dec
dec
cmp
aaa
loop
jmp
adc
jno
jmp
push
in
outsb
imul
push
stos
inc
jmp
mov
xor
into
add
cmp
pop
xor
inc
sbb
mov
pop
lahf
push
pop
and
and
mov
in
in
dec
or
mov
in
xchg
mov
sahf
arpl
inc
sbb
sbb
push
pop
roll
inc
pop
jmp
mov
xor
icebp
dec
mov
jp
popa
iret
std
fimull
cmp
add
insl
ret
inc
jns
stc
cmp
jae
aaa
into
outsb
data16
jbe
arpl
daa
into
movsb
sbb
inc
jecxz
ret
ljmp
mov
push
adc
shr
cmc
cmp
cld
lea
jl
add
xor
and
daa
out
shrl
pop
out
adc
pop
add
mov
ds
jmp
cmp
mov
push
loopne
lret
cmp
mov
sarl
sbb
aaa
rcrb
jo
scas
div
cli
pop
dec
jno
jl
jns
loopne
push
xor
loop
scas
lods
or
repnz
loop
mov
into
push
fstpt
in
shl
mov
fdivl
negb
call
idivl
fsubrl
xchg
stc
repnz
push
pusha
int3
sub
addb
in
pushf
dec
sbbl
ret
adc
adc
lods
sbb
ror
jge
dec
insb
pop
in
dec
or
or
pop
popa
mov
in
or
ret
ficoml
mov
aad
scas
test
cmc
stos
push
inc
mov
ret
or
cmpsb
push
stos
inc
sbb
pop
mov
inc
add
dec
jnp
mov
rol
or
gs
out
sub
push
out
cli
mov
cmp
out
mov
and
mov
sub
arpl
dec
xor
test
add
jg
fsubrs
ret
sbb
pusha
jge
in
mov
je
outsb
std
pop
insl
push
cmc
test
data16
stc
and
or
loop
filds
jle
and
cwtl
add
adc
mov
xchg
data16
mov
mov
pop
jo
xorl
cltd
cs
sub
mov
cs
imul
cmp
jg
xor
lds
test
push
xchg
sub
into
pop
and
loopne
cmp
push
daa
jae
lea
ss
nop
jl
mov
mov
jmp
cmp
int3
aad
mov
mov
mov
out
mov
nop
inc
mov
ljmp
cmp
or
shl
sti
mov
add
es
or
or
dec
rcl
mov
sbb
xlat
pop
xor
scas
mov
add
add
mov
ljmp
gs
jg
fs
jmp
add
fidivrs
dec
aad
popf
lret
cmpsb
insl
xchg
and
imul
fwait
test
dec
lret
pusha
adcl
clc
and
loopne
cmp
inc
movsl
sahf
mov
icebp
shll
out
pop
cmpsb
hlt
mov
nop
cld
xchg
clc
sub
push
subb
sbb
adc
mov
mov
add
add
lock
pop
daa
pop
push
icebp
es
addr16
shr
mov
and
cmp
cmc
rorb
in
lds
fbld
cmc
jecxz
sub
arpl
mov
xchg
jne
or
stos
mov
push
adc
mov
je
je
mov
xchg
in
push
test
xorb
out
movsb
inc
mov
mov
cli
jb
mov
mov
mov
fmull
xor
call
jns
and
sbb
lcall
loop
sub
pop
sub
jge
and
mov
sbb
inc
scas
push
jnp
sahf
push
testb
or
xor
xchg
test
jmp
xorl
dec
adc
icebp
jp
clc
lods
adc
roll
je
dec
inc
pop
adc
sub
xor
jp
mov
dec
push
ss
andl
fidivs
xlat
outsb
mov
cmp
xchg
loope
cltd
adc
push
sbb
or
notb
jp
ret
cmp
jp
jl
sub
inc
nop
aam
vmovhps
inc
adc
scas
loop
sbbb
dec
jbe
jnp
mov
push
pop
jo
push
adc
sub
inc
pop
notl
fdivs
ss
cmp
stos
std
and
arpl
add
jge
xor
js
gs
loopne
or
mov
pop
jne
or
jle
aam
test
call
and
out
sbb
test
bound
sbb
fsubs
mov
lahf
aas
jb
jns
jecxz
add
or
inc
push
add
sbb
inc
jmp
push
lock
push
sbb
movsb
scas
push
add
pop
test
ds
je
scas
push
cmp
sbb
pop
lock
movsl
and
push
mov
mul
int
hlt
lret
mov
fsubrs
and
jnp
add
xchg
push
xchg
inc
pop
jb
push
out
mov
lret
jmp
in
int
into
out
ret
enter
lock
test
movsb
or
in
add
inc
repnz
add
movsl
repz
ja
inc
and
sbb
shll
jecxz
inc
adc
in
pop
jmp
sbb
pop
xchg
dec
mov
xchg
and
popa
xchg
addb
mov
bt
push
insb
je
pop
cmp
sbb
push
adcl
int
add
push
cmp
dec
pop
fstpl
xor
mov
mov
jecxz
cs
aam
scas
dec
adcb
iret
pop
pushf
ljmp
jl
das
jl
inc
adc
mov
jnp
cmp
outsb
jae
aaa
int3
jg
dec
enter
adc
xchg
test
xchg
adc
cld
or
pop
push
mov
call
jmp
mov
pop
sub
test
bound
mov
sub
inc
mov
sahf
and
xchg
sbb
mov
and
pop
pop
inc
and
xor
dec
mov
lahf
add
dec
nop
dec
stos
jnp
xor
add
lea
movb
addr16
int3
loope
mov
mov
lcall
popa
add
stos
in
fnstcw
pop
push
hlt
dec
ret
add
fs
inc
inc
fiadds
pushf
jae
sub
jo
imul
les
jae
adc
roll
cmp
fisttpll
sbb
push
bound
or
sub
sub
cmpsb
js
shlb
inc
and
sbb
cmc
dec
push
sub
insl
sahf
mov
xor
out
das
xchg
add
shrl
ficoml
outsb
fistpll
jb
test
mov
cltd
jno
pusha
xor
xlat
jle
and
aam
movsb
lea
mov
lcall
arpl
and
mov
cmpsl
scas
lcall
cmp
xchg
mov
xchg
sub
or
push
jle
pop
pop
pushf
add
enter
or
pop
mov
outsb
and
jp
outsb
in
out
mov
es
mov
cmpsl
dec
inc
push
inc
xchg
popa
imul
xor
imul
mov
add
dec
push
ret
sub
repnz
and
mov
lods
das
pop
push
in
loop
test
dec
sub
inc
adc
call
std
ret
sbb
mov
mov
xor
ss
sbb
xchg
pop
js
sti
cwtl
sub
lea
xor
out
jnp
out
jecxz
dec
xchg
mov
inc
xchg
outsb
jnp
pop
stos
pusha
fsubr
arpl
aad
xchg
enter
pop
jmp
xchg
xor
jle
sti
inc
mov
sbb
inc
mov
inc
pop
shrb
jo
dec
sbb
jg
movsl
xchg
pop
movsl
jns
in
inc
fcompl
shr
push
cmp
mov
fwait
push
xor
nop
lret
adc
bound
lcall
sbb
cmpsb
pop
out
call
in
push
mov
in
fwait
add
int
adc
sbb
ret
repz
pop
push
mov
clc
cmc
xor
int
ss
iret
filds
js
cmp
mov
nop
daa
lods
jp
or
imul
sbb
mov
push
mov
mov
jge
fneni(8087
fmul
insb
jle
push
jmp
loope
je
call
or
pop
pop
jecxz
dec
lods
cmp
movq
in
push
aas
xchg
les
rolb
jae
push
inc
je
stos
and
ss
adc
jns
insl
jne
and
imul
stos
push
jb
aad
push
in
into
ja
out
mov
sub
mov
mov
cwtl
adc
ljmp
add
cmp
in
jmp
jge
int3
lahf
scas
and
cmp
les
push
rorl
push
push
and
nop
loop
in
sahf
mov
sti
xor
mov
lcall
pop
adc
pop
bound
call
fsubp
jno
ret
popa
test
adc
mov
mov
mov
icebp
pop
xor
pop
or
add
aas
rolb
sbb
xchg
jnp
fsub
mov
dec
into
push
call
jp
jle
mov
dec
add
jecxz
pmuludq
shl
push
sub
mov
xor
fadd
mov
xor
loope
mov
jne
push
adc
lcall
pop
xlat
add
push
lret
imul
lret
mov
nop
mov
xchg
dec
adc
dec
leave
pushf
inc
shlb
fadds
inc
jbe
int
dec
mov
xchg
and
jne
scas
stos
xchg
sub
push
xchg
mov
movsl
les
inc
and
push
je
mov
jecxz
pop
mov
in
fisttps
popf
loopne
shrb
jge
leave
add
shlb
cmpsb
fs
cs
or
test
add
lods
push
jg
sbb
call
push
sti
xor
xchg
mov
pop
pop
xor
cltd
and
dec
scas
or
icebp
fistps
and
mov
mov
jbe
xor
push
xchg
push
lret
inc
mov
adc
mov
jg
fst
icebp
lcall
out
testl
mov
enter
ljmp
stc
adc
movsb
lcall
ds
push
dec
ljmp
lcall
mov
or
push
sahf
lea
or
fldenv
push
mov
inc
cmpsb
cmpsl
repnz
test
and
xchg
mov
xchg
pop
into
jp
add
xchg
cmc
loope
sub
push
hlt
pop
sarb
cs
mov
sahf
cmp
inc
and
getsec
xchg
ljmp
sub
adc
xchg
add
mov
mov
leave
sub
rorb
mov
sub
lea
adc
xchg
xor
xchg
std
mov
inc
repz
out
roll
scas
mov
aaa
pop
test
dec
inc
shl
adc
fmuls
inc
cmp
mov
repz
outsl
push
and
mov
dec
int
pop
adc
cmp
and
dec
xchg
jl
cli
imulb
lret
outsl
rcll
and
jecxz
loopne
lret
ret
mov
pop
push
popa
adc
enter
inc
mov
pop
sbb
pop
ljmp
icebp
das
cld
iret
ss
mov
cli
mov
add
das
repnz
xchg
jbe
sbb
sbb
mov
and
roll
fimull
jns
xchg
lret
das
mov
dec
xchg
inc
mov
daa
pop
mull
sbb
push
rcll
lock
shlb
jo
test
mov
lahf
add
out
pop
mov
add
sub
jne
mov
xor
push
add
or
ret
int
sub
shlb
add
fcoml
sbb
mov
push
adcl
scas
jno
cmp
sub
cld
cmp
push
stos
clc
je
fs
js
push
out
filds
push
adc
xor
xchg
dec
xchg
xor
lret
sbb
roll
xor
add
sub
push
cwtl
out
int3
popf
cmp
sbb
aad
out
push
aaa
cmp
sbb
adc
jo
fwait
dec
fcmovnbe
inc
xchg
jo
bound
xchg
xor
lds
jae
fcomip
mov
cmc
in
mov
call
pop
push
mov
inc
dec
cmp
jge
fdivrs
mov
mov
hlt
out
cwtl
xchg
pop
push
jbe
ret
in
std
mov
xchg
xchg
push
daa
add
loop
sti
cmp
aad
xor
sarb
push
imull
adc
jg
mov
stos
sub
clc
push
out
mov
xor
mov
jmp
dec
xchg
bound
and
aam
xor
dec
mov
fistpl
push
fsubs
loopne
es
add
clc
ret
inc
jl
sbb
hlt
fistl
sub
mov
add
iret
repz
arpl
popa
mov
and
inc
fmuls
fldt
push
outsl
call
xchg
inc
mov
sbb
or
outsb
mov
xchg
dec
cmc
pop
andb
xor
movsl
test
or
aas
cmp
stos
or
jmp
mov
xor
add
scas
dec
cmp
jne
test
push
movsl
scas
cmpsb
negb
mov
adc
std
mov
xchg
xor
out
fstpt
xor
jnp
add
sub
je
mov
adc
pop
sahf
xchg
pop
cmc
add
xchg
clc
lea
mov
xor
cwtl
jecxz
mov
and
cmc
mov
xor
cmp
fisubrs
mov
fcmovb
enter
pop
insb
test
in
enter
clc
ds
and
loopne
push
fwait
ret
adc
arpl
xor
addb
lcall
xor
lds
imul
int3
mov
test
les
cmpsb
dec
imul
xchg
cmpsl
pop
cmp
lods
pop
loop
shrd
popf
repnz
push
aad
sub
mov
test
jmp
js
pop
pop
jmp
sahf
inc
sub
bound
daa
push
add
mov
fs
rcr
stos
jmp
inc
outsb
dec
mov
or
add
add
in
dec
insl
mov
aaa
aaa
jg
aad
push
cmp
push
push
add
adc
test
jg
adc
ss
sbb
push
dec
test
jae
inc
push
mov
jge
xchg
xor
arpl
inc
inc
mov
std
mov
aad
not
fsincos
test
mov
pop
cld
ret
jb
add
out
aam
lea
stos
jmp
fmulp
sti
adc
adc
stos
xchg
das
xlat
cmp
in
ret
call
mov
mov
cmp
and
xchg
insb
xor
fcom
push
enter
xor
xor
push
loopne
xor
sub
xlat
scas
popa
cmp
fs
jmp
add
xchg
xchg
inc
push
pop
cld
movsb
outsl
jmp
push
and
inc
cmp
addr16
popf
sub
add
sub
fadds
mov
xor
push
repz
xchg
inc
xchg
sub
mov
rorl
sbb
push
aas
sbb
pop
loopne
sub
gs
imul
mov
and
cmp
test
add
push
push
fdivs
push
mov
push
mov
loopne
ret
mov
out
mov
inc
mov
lea
xchg
movl
mov
dec
sub
nop
sbb
pop
out
insb
fidivs
or
add
sub
fsubs
je
and
cs
cwtl
mov
jb
les
lods
rcrl
mov
push
outsl
out
pop
and
in
adc
cmp
mov
push
adc
cmpsl
adc
or
aaa
std
out
pop
ret
add
repz
mov
mov
ds
jns
jb
sbb
or
mov
das
in
dec
jle
mov
dec
fnsave
outsb
rcl
xor
dec
rcl
in
xchg
cmp
or
adc
test
test
popf
lods
push
aad
adc
in
jg
in
or
xor
push
les
push
in
fiaddl
push
lods
adc
inc
mov
fsubrl
adc
sub
loop
ret
into
push
push
push
jmp
stc
jnp
inc
xor
dec
ja
mov
in
test
adc
dec
mov
jle
or
int
push
inc
sub
lret
and
adc
sti
outsb
adc
mov
xchg
xchg
xor
mov
shll
push
and
add
push
hlt
and
bound
push
xchg
dec
jnp
push
cli
hlt
pushf
add
popf
outsl
in
sti
pop
mov
adc
lods
mov
or
cmp
lea
adc
jns
cmp
xorb
shr
hlt
aaa
test
jns
or
enter
subb
push
std
or
push
inc
xor
data16
cli
mov
mov
push
push
and
popf
pop
in
dec
xorl
fsubs
fisttpl
insl
cmc
jg
cltd
dec
ss
push
adc
outsl
inc
mov
rcrb
or
leave
add
xchg
fwait
xchg
pusha
es
mov
insl
push
ja
inc
stos
ret
daa
int3
xor
fildl
insb
sub
xchg
mov
ljmp
xchg
jecxz
mov
fstpl
mov
pop
mov
mov
xchg
repnz
les
xlat
test
dec
mov
lret
hlt
push
inc
adc
movsb
xchg
daa
adc
test
popf
sub
lods
jl
jg
negl
dec
das
xchg
xchg
test
insb
push
mov
xchg
xchg
add
cmp
lret
mov
dec
add
lods
mov
push
test
push
mov
adc
icebp
mov
jle
jmp
cs
add
sbb
push
fidivrs
addl
or
dec
imul
out
xchg
testl
cmovg
jp
pop
sahf
mov
or
add
or
dec
fcomps
test
mov
xor
fcomp
push
mov
push
sarb
adcb
aam
lds
and
cmp
ds
mov
daa
jae
inc
and
push
test
rclb
pop
mov
lods
in
ds
xchg
in
lcall
rclb
inc
imul
in
gs
fistl
cmc
repz
dec
jp
insl
cmp
xlat
inc
xchg
cmpsb
lcall
scas
add
mov
cmp
push
loope
clc
fldl2e
outsl
cmp
and
sub
xor
adc
in
add
push
negl
sub
xor
cmpb
adc
dec
out
xchg
das
in
iret
aas
cwtl
ret
jg
push
subl
ret
cmp
jle
cmpsb
ljmp
add
test
push
dec
mov
or
adc
popa
xor
inc
jmp
and
movsb
dec
ja
dec
test
fstps
xchg
and
test
sub
stc
outsl
adc
mov
xor
das
sbb
pop
fwait
push
dec
and
iret
pop
push
pop
pop
mov
mov
mov
vpsrlw
push
or
push
sbb
pop
mov
je
movl
xor
std
add
sub
sar
mov
nop
dec
xchg
cmpsb
shl
fcmovnbe
cmp
pop
popf
and
test
in
les
push
jnp
adcb
inc
cltd
leave
pop
pop
adc
mov
adc
hlt
clc
lods
outsb
push
daa
push
insl
sbb
test
out
scas
insb
shrb
and
outsl
jae
dec
push
jnp
imul
cmpsb
add
subl
pop
pop
mov
div
rcrb
cli
sbb
fwait
adc
jae
ds
cwtl
data16
inc
inc
add
aam
or
mov
cmp
iret
fs
add
cmp
mov
jno
mov
loopne
aam
lock
out
mov
jnp
pop
das
xchg
out
jno
pushf
dec
int
dec
dec
push
lods
cmp
popa
xchg
mov
jo
fs
lock
int3
sbb
cwtl
sahf
xchg
push
sti
sub
sub
mov
jo
add
mov
sub
mov
std
cmpl
movsl
jmp
ja
or
data16
pop
call
test
pop
and
mov
jae
rorb
push
pusha
xchg
cld
adc
mov
out
pop
xchg
mov
data16
inc
push
xor
mov
movsb
push
inc
popf
push
adc
sub
mov
int
pop
pop
jns
cltd
imul
rcrl
or
outsb
es
inc
imul
cmp
mov
adc
mov
divl
stos
xor
cmpsl
adc
subl
pop
adc
jle
hlt
pop
inc
adc
out
pop
push
xchg
push
jae
lret
fstps
cmp
sub
shrb
push
leave
cltd
shl
roll
sarl
xor
sub
lret
mov
out
aam
sbb
add
add
test
out
icebp
push
test
mov
adc
push
ss
adc
cmp
xchg
cmpsb
aas
xchg
ljmp
lret
cltd
mov
ja
test
aaa
adc
pop
and
pop
add
fwait
pushf
xchg
dec
icebp
negb
scas
lret
rcrb
pop
lcall
pop
sarb
mov
sarl
sbb
dec
add
outsl
lods
inc
sbb
pop
movsl
mov
jnp
sub
sub
push
in
jo
or
bound
push
shl
ja
iret
popf
outsl
loop
jne
add
pusha
and
lret
out
dec
push
dec
push
inc
mov
pop
cltd
lret
adc
pop
push
roll
pop
push
adc
imul
xlat
push
hlt
int3
mov
popa
cltd
adc
movsl
lret
push
arpl
ret
jp
std
cmpb
jmp
cmp
pop
jb
scas
add
jo
js
jmp
push
rorl
lret
or
xor
add
and
xlat
pop
jecxz
sub
pop
push
add
sarb
es
add
loope
xor
cltd
mov
mov
popf
out
push
ret
mov
fnsave
sbb
gs
jae
das
in
fcompl
push
jp
push
cs
mov
loopne
call
fldcw
sbb
xchg
jmp
in
or
lods
iret
lea
ret
xor
test
pop
mov
mov
fistpll
mov
adc
and
cwtl
lods
insb
imul
xor
dec
lcall
dec
dec
pop
jp
cwtl
dec
mov
popa
jae
iret
sbb
leave
nop
jmp
sub
out
mov
outsl
nop
add
pop
lds
sbb
xchg
aam
add
mov
rcr
repz
and
clc
xlat
xor
adc
push
jl
xchg
jnp
repz
repnz
in
pop
or
outsb
add
ljmp
test
bound
sbb
jmp
inc
adc
lahf
sar
mov
and
mov
xor
insl
outsb
push
xlat
jno
xchg
sub
dec
sub
xchg
ficomps
dec
loop
jle
ss
dec
and
push
das
mov
bound
mov
call
mov
mov
stos
and
clc
lock
int3
or
dec
mov
test
loop
jmp
stos
push
add
pop
test
iret
lock
jmp
xor
and
shlb
shlb
add
pop
jbe
xor
testb
out
xor
mov
mov
inc
out
mov
cmpsl
cmp
stc
inc
stc
movsb
jg
xchg
cmp
push
sub
shrl
mov
pop
mov
or
lcall
lahf
rorl
xchg
out
imul
mov
add
test
xchg
int
ret
lock
fwait
stos
jle
adc
dec
dec
pop
out
idivl
adc
scas
adc
les
mov
xor
loopne
or
in
test
pop
or
add
pop
insl
adc
repz
outsl
and
fwait
jp
rcll
pop
mov
or
out
cmc
mov
les
fstl
dec
mov
cltd
or
jno
or
sbb
addl
repnz
lods
insl
jno
jmp
push
shlb
mov
cmpsl
and
jmp
mov
cmp
mov
add
cmpl
frstor
lds
inc
sarl
sbb
orb
stos
push
stos
jge
or
mov
add
inc
lahf
loopne
scas
fwait
mov
sbb
popa
inc
aas
leave
jne
repnz
or
testl
mov
lea
sub
ds
dec
sub
lods
add
es
dec
adc
mov
aas
mov
lods
lea
scas
test
dec
pop
scas
loopne
adc
adc
mov
das
inc
dec
or
push
or
pushf
dec
inc
inc
push
rcrb
xor
mov
adc
in
jne
mov
popa
sub
xchg
jl
adc
daa
sarb
mov
rol
ss
lret
mov
mov
push
xchg
push
mov
xlat
mov
scas
outsb
sub
decl
dec
dec
jnp
fdivl
dec
test
sub
xlat
mov
aas
xchg
jns
pop
xchg
pop
add
and
and
test
roll
dec
loopne
push
xchg
btr
pop
inc
push
cmp
add
xchg
pop
repnz
loop
and
pop
lods
mov
and
mov
sbb
push
sbb
dec
pushf
mov
out
add
fs
dec
je
pushf
mov
jmp
sti
sbb
out
andl
int
or
cmpsl
imul
add
sub
dec
ret
dec
jnp
dec
data16
mov
dec
sbb
out
scas
add
xor
out
add
js
cld
dec
loopne
aaa
mov
test
fmull
xor
sub
jp
outsl
and
std
push
mov
mov
sub
addr16
push
in
sbb
push
icebp
inc
outsl
cmp
jns
enter
inc
pop
add
int3
loope
cltd
xchg
sbbl
mov
adc
inc
lahf
xchg
jmp
mov
lods
int3
push
mov
jl
jne
and
sbb
jecxz
inc
cmp
pop
sbb
xorb
adc
into
pop
add
js
xchg
push
lcall
ljmp
test
scas
dec
outsl
iret
add
pop
inc
adc
jo
bound
sti
xchg
fsubr
inc
pop
inc
pop
fldl
in
mov
sub
mov
pop
xorb
push
movsb
je
xchg
sub
mov
xchg
cmpsb
jecxz
test
ja
das
bound
sbb
test
je
scas
in
ret
adc
movsl
fadds
je
mov
nop/reserved
cmp
imul
ficompl
inc
and
adc
and
sub
xor
loope
jnp
dec
jns
pop
dec
mov
rol
jnp
mov
lods
adc
mov
insb
and
pop
shll
sub
pop
jno
cmp
in
or
push
call
cmpsl
fldenv
mov
fs
pop
mov
daa
cmp
out
jl
add
fcmovne
fisttpl
add
cs
mov
dec
xor
push
movsb
stc
jl
jmp
mov
stos
push
mov
jne
shlb
mov
sbb
xchg
leave
movsl
insb
pusha
jne
push
hlt
inc
jmp
dec
lods
sub
ss
adc
or
test
pop
or
rcl
test
sbbl
add
insl
aaa
aam
icebp
fidivs
arpl
imul
lcall
fsubr
lret
pop
xor
pushf
push
push
push
pop
sub
or
adc
add
mov
mov
les
xor
hlt
or
xorl
mov
mov
mov
jge
xor
lahf
es
lret
loope
push
add
jnp
mov
adc
mov
xor
mov
jp
sti
lea
jl
jecxz
cmpsl
aaa
ret
pushf
stc
and
in
cmpl
jno
sub
add
sbb
and
cld
push
divb
sarb
mov
xchg
sti
mov
add
js
inc
and
pop
sub
xor
leave
push
rorb
lcall
inc
pop
rcrl
into
cltd
sti
rorb
pop
fsubrs
arpl
cmp
add
pop
dec
mov
lahf
push
clc
and
cmp
js
and
pusha
mov
dec
pop
xor
clc
fstpl
sbb
jle
xchg
mov
add
in
mov
fidivl
pop
mov
sti
and
iret
inc
daa
test
int
dec
in
das
aad
jns
add
cwtl
and
push
sub
test
orb
pushf
clc
pusha
mov
std
push
push
pop
das
fstl
andl
add
shl
in
std
mov
repnz
adc
cld
nop
adc
xchg
stos
mov
mov
pop
stc
sbb
mov
mov
or
push
out
mov
pop
sub
cmpsb
inc
sarl
sbb
or
cmp
jg
popa
and
cwtl
hlt
jecxz
test
rcl
dec
fistpl
cs
jmp
xlat
sbb
inc
pop
xor
cmp
lds
imul
or
addr16
movsl
in
push
sahf
lock
js
je
fldt
cmp
sbb
add
and
ret
lods
or
pop
xor
into
lret
ficoml
mov
cmpsl
adc
imul
mov
decb
push
xchg
mov
mov
push
shll
dec
popa
icebp
cmpsl
lock
mov
push
mov
sbb
xchg
test
sub
test
outsl
jl
mov
int3
jbe
lret
mov
xor
adc
cwtl
ret
out
sbb
sbb
and
movsb
mov
xlat
inc
stos
sbb
call
sarb
hlt
push
aas
scas
and
jns
xchg
sub
sarb
aaa
in
fiadds
out
xchg
fucomi
sub
pop
enterw
sub
scas
sub
test
outsb
jne
out
pop
sbb
pop
fmuls
mov
pop
xor
pusha
bound
sbb
inc
cmpsb
adc
xchg
and
mov
enter
sbb
cmp
cmpsl
sarl
mov
cmpsl
ss
pop
popf
pop
pop
jg
mov
sbb
pop
leave
lods
sbb
adcl
sub
push
or
call
mov
cmp
cli
inc
lret
dec
push
cmp
aad
mov
xchg
bound
lret
inc
sbb
sbb
mov
cmp
test
fsincos
xchg
aad
or
outsb
cmp
inc
test
mov
imul
cmp
shrl
fisttps
hlt
mov
sub
repnz
xchg
mov
push
cli
fldl
fucomip
into
in
cwtl
mov
aaa
ljmp
sbb
xchg
mov
cwtl
mov
shlb
mov
push
pop
leave
ret
in
pop
mov
cmp
sbb
test
add
popa
sub
ds
negb
aas
sbb
sbb
in
jne
adc
jb
fistpl
mov
sub
std
lcall
jmp
mov
into
out
cwtl
push
dec
loopne
jge
jae
sti
inc
inc
mov
fdiv
add
insl
push
xchg
cmp
jle
dec
ret
nop
test
lods
and
xchg
pusha
fdivs
jo
sarl
mov
fdivs
add
dec
jg
ret
inc
inc
out
xchg
out
adc
test
jno
mov
dec
inc
pop
or
lods
jbe
mov
mov
stc
test
jge
scas
icebp
cmpb
shlb
dec
xchg
pop
sti
movsl
xor
aas
jl
push
out
clc
sub
fwait
pop
push
xchg
outsl
mov
pop
add
sbb
add
daa
out
jnp
add
stos
or
and
outsb
mov
call
ret
sbb
jge
dec
xchg
cmp
nop
push
pop
or
push
lods
sti
jl
push
mov
jp
push
out
mov
pmulhw
out
xchg
shll
push
arpl
push
in
mov
push
push
dec
lea
fldenv
push
rcrl
daa
jmp
loop
imul
pop
mov
pusha
rclb
mov
jmp
pop
xchg
cwtl
dec
daa
cmp
mov
shlb
adc
mov
push
and
dec
pop
mov
fmul
aam
shrb
fnsave
jmp
dec
mov
stos
xor
ffree
xorb
cmp
movsb
dec
aaa
mov
xchg
add
mov
imul
lods
jne
xor
add
cmp
dec
sub
sub
mov
gs
dec
lcall
push
jg
xchg
jb
clc
shlb
jmp
adc
sbb
jns
lock
les
popa
and
inc
dec
push
xchg
cld
mov
inc
and
xor
push
jmp
mov
int3
test
test
jo
pop
jmp
push
addr16
into
mov
xchg
test
inc
xor
mov
mov
adc
movsb
fimull
sub
push
addr16
aaa
adc
stos
cmp
ret
adc
add
adc
gs
shlb
jns
cmp
aaa
idivl
pop
fiaddl
ss
aas
adc
out
cmp
out
aaa
dec
mov
adc
shlb
enter
add
mov
fistps
push
in
add
std
loop
lods
or
icebp
stos
mov
stc
add
js
outsb
pop
rcr
icebp
mov
subl
add
scas
mov
in
in
pop
cmpsb
mov
cwtl
jbe
mov
pop
imul
xorl
or
adc
mov
sbb
lods
sti
jno
jae
popf
push
xchg
sbb
scas
shll
mov
loop
dec
aam
pop
mov
scas
or
scas
je
jecxz
imull
stc
lods
inc
lret
xlat
loopne
lret
rclb
sahf
fisubl
cmp
fdivrs
sub
repnz
sub
mov
pop
add
push
cmpsb
add
out
addr16
sbb
int3
clc
fdiv
enter
and
xor
sbb
cmpsl
sub
pusha
or
insb
sub
pop
out
in
out
inc
ret
dec
ljmp
sbbb
dec
sbb
or
popa
fnstcw
lret
push
in
sbb
lret
outsl
stos
add
push
sub
lcall
enter
leave
pop
rcrb
cmc
dec
xor
stos
loop
xor
and
cmp
mov
aaa
xor
adc
and
ja
out
cld
pop
jnp
jle
movsl
lea
das
pop
push
sbb
sbb
mov
sbb
lret
out
lea
adc
aas
push
jns
mov
and
hlt
cmp
cmpsb
pop
insl
or
stos
mov
ss
mov
fisubrs
shl
repz
add
imul
clc
stos
adc
inc
incb
xor
add
pusha
cli
mov
lret
lods
mov
push
jb
call
in
add
inc
int
jbe
movsl
daa
ficoms
add
dec
push
dec
inc
je
mov
push
jbe
jmp
dec
mov
push
ret
push
inc
cmp
push
ss
sahf
or
push
jnp
scas
test
inc
repnz
push
jo
sbb
inc
fistpll
repnz
jo
insl
test
scas
adc
gs
pop
outsl
lahf
pop
fdiv
int3
icebp
sub
push
lds
test
adc
and
mov
lods
xchg
incl
enter
pop
and
repnz
mov
mov
jp
and
arpl
dec
imul
gs
test
push
adc
jno
and
shll
dec
movsb
jb
mov
lahf
fstp
cmp
popa
push
rclb
repz
xchg
icebp
bound
mov
sub
dec
dec
mov
cmp
xlat
add
bound
or
add
addr16
jne
xor
jae
mov
add
sbb
lahf
mov
xchg
push
mov
pop
push
outsb
popa
int3
lods
mov
lods
insb
sub
mov
lcall
and
fsin
mov
mov
sub
lods
cmp
lock
xchg
sub
enter
div
jne
test
out
cmp
push
hlt
push
adc
scas
add
and
jb
lea
push
insb
xchg
jge
push
popa
dec
dec
push
sbb
inc
sarb
mov
mov
cli
cmp
adc
dec
popa
cli
arpl
lret
and
cli
add
mov
jns
adc
loope
lds
nop
dec
push
mov
shlb
roll
mov
in
dec
stos
and
mov
inc
cltd
cmpsb
enter
xchg
test
jb
pop
xchg
cld
add
test
bound
pop
jnp
inc
inc
pushf
adc
fmuls
mov
stc
mov
lahf
lahf
mov
incb
shl
dec
mov
jns
faddl
xor
mov
cmpsb
pop
or
sub
jns
inc
in
roll
fisttpl
jecxz
xor
push
sub
xor
rcll
cld
cld
fmuls
mov
jp
nop
dec
je
test
push
loopne
fildll
sbb
repz
sub
and
jge
call
jl
shll
and
sub
jns
shrl
shl
cmp
std
adc
xor
or
gs
pop
push
ss
mov
pop
pop
idivb
mov
lret
pop
loop
iret
push
or
inc
decl
sub
sub
ja
pop
sahf
add
addr16
sbb
mov
inc
dec
pop
lret
sbb
mov
fs
test
mov
ficomps
imul
push
xchg
push
or
test
mov
cld
mov
jp
pop
ja
aad
xchg
stc
fsubr
sti
movsb
loop
and
in
addb
stos
fnsave
sahf
push
xor
xor
mov
mov
jg
das
aad
pusha
pop
pop
and
mov
dec
scas
sub
mov
xor
dec
lock
ljmp
imul
repnz
stc
mov
add
movsb
into
movsl
fistl
shll
dec
push
push
mov
je
cmp
and
test
negb
jae
xchg
and
jne
and
insb
xor
xor
push
and
sub
stos
arpl
scas
sub
adc
popf
xchg
pushf
xor
test
cld
sub
ror
aaa
sbb
call
inc
nop
movb
xchg
addr16
leave
xorb
sbb
sbb
cmp
andb
xor
cmp
xchg
and
jno
xor
addr16
push
shl
les
xlat
das
cwtl
xor
mov
ss
ljmp
mov
mov
xchg
push
test
in
ret
push
lahf
cmpb
les
add
and
in
addr16
mov
cmpsl
test
jnp
xchg
jne
mov
mov
mov
inc
cmp
mov
cmpl
das
ljmp
mov
push
jl
sub
sub
lods
xor
insb
cmp
sbb
sbb
popf
in
imul
mov
rcrb
jbe
ret
fadds
push
and
cmp
in
dec
dec
outsl
mov
jmp
lret
mov
cli
pushl
mov
push
in
dec
sub
sbb
daa
enter
sbb
scas
leave
xlat
jne
push
dec
pop
test
jns
in
enter
aam
sub
iret
sub
shl
mov
sub
ds
sub
dec
push
dec
ds
lret
fdivrl
fbstp
xor
xor
pop
xchg
jae
pop
add
imul
add
mov
add
lret
out
ror
out
xor
adc
pop
outsb
mov
fs
jne
cmc
ret
shll
jg
in
jns
push
out
es
stos
push
xchg
js
dec
xor
add
push
xor
daa
dec
and
jo
call
push
stos
stos
ret
jmp
test
sub
or
and
sarl
ret
ja
int
pop
imul
lret
dec
bswap
jo
rcl
jns
mov
xlat
mov
scas
fidivrs
notb
sub
mov
mov
fidivs
xlat
add
insl
pop
cmpsb
in
cmpsl
lods
les
xor
cmpsb
push
jne
in
cmpsb
movsl
data16
sbb
or
cmp
cmp
arpl
lret
xor
inc
sub
jle
inc
sti
je
fisttps
sbb
js
dec
addr16
xorb
and
arpl
data16
pop
jbe
sub
testl
sub
or
sub
mov
adc
in
or
jp
hlt
sub
pushf
les
xchg
ds
add
add
mov
stc
or
leave
adc
add
repz
loope
lods
insb
sahf
aaa
mov
and
push
xchg
mov
or
sbb
jae
out
xor
cld
inc
cli
fistpl
inc
jmp
lods
test
xchg
adc
push
popa
notl
ret
dec
out
movsb
cld
repnz
repnz
ja
mov
mov
cmp
mov
es
mov
jmp
lods
cmp
iret
and
xor
dec
movsl
push
and
or
pop
cltd
mov
movsl
sub
and
pop
pop
rolb
cwtl
jae
mov
sbb
cmpxchg
fs
xchg
aaa
jecxz
loop
xchg
inc
stc
and
int3
nop
mov
push
dec
insl
jo
xor
lcall
adc
jg
or
jbe
repnz
sub
stos
mov
sub
push
stos
loope
fwait
incl
mov
bound
push
dec
or
jno
fcomi
jo
rclb
push
lcall
jo
push
mov
ffree
mov
dec
lods
hlt
dec
lea
add
add
or
insl
lods
xchg
jnp
pop
or
fs
int
dec
in
pop
out
sbb
stos
fcomi
xor
daa
lods
jo
push
xchg
popa
mov
pusha
mov
mov
xchg
mov
or
mov
and
ja
inc
sbb
stos
bts
mov
dec
rcll
daa
jl
scas
and
and
cmp
sahf
sbb
pop
icebp
sbb
cmp
mov
adc
push
out
insb
sbb
jnp
add
push
sub
out
xchg
in
cmp
push
and
and
stos
out
add
nop
inc
adc
and
ret
andl
mov
pushf
mov
jo
push
in
or
sub
insl
and
out
dec
ljmp
decb
jp
jo
das
repnz
adc
cli
push
js
mov
jg
aam
and
xor
sti
mov
mov
jecxz
add
js
push
or
adc
mov
int
jno
insb
stos
add
loopne
jae
loope
pop
jl
and
inc
and
push
pusha
mov
js
ja
gs
xchg
in
cltd
xchg
jecxz
mov
stos
push
nop
xchg
cmpsl
mov
movsb
dec
leave
pop
lret
ss
cmp
shlb
arpl
mov
mov
pushf
push
and
jecxz
aad
adc
push
mov
mov
pop
mov
inc
xchg
cld
add
dec
lods
mov
pop
jnp
xchg
xor
mov
int3
pop
out
mov
imul
and
mov
pop
jnp
add
mov
fsubp
js
mov
mov
push
push
xor
sub
sub
jecxz
push
jno
call
icebp
scas
je
jge
cmp
sbb
aad
xor
mov
dec
jne
int
fwait
cmp
mov
dec
cwtl
adc
xlat
sbb
or
add
pop
pop
cld
mov
mov
stos
inc
orl
or
pop
fbstp
push
add
dec
imul
fucomip
xchg
das
ds
cmpsb
jne
fsub
xor
add
mov
mov
pop
or
push
sbb
imul
lds
and
aas
insl
popa
ds
dec
xor
fadds
pushf
mov
cs
sub
lret
inc
movsl
outsl
or
mov
rorb
insl
loopew
pop
mov
data16
insl
inc
dec
jg
pandn
jecxz
aaa
call
adc
icebp
mov
js
inc
cwtl
in
mov
xchg
in
inc
and
cmp
loope
inc
or
out
sbb
inc
pop
pop
adc
in
ret
shlb
inc
xchg
cltd
xchg
jne
jecxz
daa
jne
dec
fistl
mov
out
sbb
adcb
jmp
js
fs
inc
xchg
and
in
test
cmp
push
or
lret
sub
sbb
in
mov
inc
xchg
push
outsb
xor
mov
pop
push
lcall
out
test
sub
cmp
adc
or
je
ds
and
cmc
add
jne
cmp
mov
aaa
imul
movsl
addr16
sub
pop
mov
data16
push
cmp
xlat
addr16
jp
or
rcl
imul
movsl
xchg
out
out
sbb
testb
movsb
sbb
or
into
push
sub
push
movsl
inc
clc
lret
fs
ja
jne
insb
shll
sarl
xor
outsb
aas
jbe
loope
fnstcw
fisttps
xor
mov
sub
adc
test
fnstcw
imul
mov
add
inc
and
xor
stc
xchg
jns
or
pop
adc
stos
fnstenv
outsb
push
adc
xorb
outsb
pop
dec
adc
jle
mov
push
xor
lods
in
lds
out
fcoms
xchg
subb
mov
push
lret
jecxz
hlt
cwtl
and
pop
mov
lods
pop
int
or
cli
add
xor
jno
xchg
inc
cltd
popa
out
cmc
pop
movsb
sbb
jp
testl
mov
dec
adc
hlt
pushf
jo
pop
lock
push
lret
mov
stc
ret
push
mov
ret
int3
sbb
xchg
adc
test
outsb
and
jmp
int
and
dec
fcmovnu
jle
mov
out
xor
mov
movsl
in
push
rol
in
fdivl
fdivr
movsl
cmp
sti
jecxz
push
insb
rcr
sti
cwtl
inc
aaa
insl
mov
jne
cmp
adc
xor
scas
test
aad
push
pop
movsb
xor
int3
enter
test
je
jecxz
push
sub
leave
mov
into
stos
dec
adc
push
xor
icebp
adc
loope
inc
leave
rcr
movsl
adc
add
sub
cmp
mov
jbe
push
jno
cmp
ret
mov
rcl
jecxz
mov
mulb
repz
dec
jp
cwtl
adc
rclb
pop
jo
sbb
cmpsl
andb
xlat
mov
and
test
das
cwtl
mov
xor
stos
sub
pop
mov
mov
pop
add
xor
jle
ja
sarl
fs
push
ret
sub
sbb
popa
test
pushf
fiadds
int3
dec
mov
sbb
lcall
pop
sbb
pop
sub
inc
jbe
xor
push
rcl
mov
in
xor
xor
add
xlat
xchg
rol
clc
gs
push
jbe
mov
mov
out
stos
pop
push
push
ss
pop
loopne
test
sbb
les
jecxz
xchg
mov
dec
xchg
enter
push
je
dec
dec
mov
rcrb
test
fdivl
fchs
cmp
push
and
imul
sub
push
mov
cmp
and
push
in
les
mov
jb
enter
insb
pushf
sub
xor
add
shlb
sbb
pop
loopne
xor
bnd
notb
push
xor
mov
movl
scas
xor
push
inc
rcrb
lcall
lods
ret
leave
jg
inc
lahf
mov
jmp
clc
jne
add
push
mov
cmp
inc
cwtl
cmc
movsb
fdivrs
jle
mov
sub
inc
lea
mov
inc
out
pushf
push
sub
cmp
ss
xor
in
jecxz
stos
subb
jo
xchg
test
pop
inc
dec
mov
push
int3
jmp
or
ja
xor
pop
sub
pop
inc
test
adc
push
xchg
adcb
popf
pop
push
pop
movsb
in
xchg
jg
jo
jmp
adc
fs
and
or
lcall
and
jge
pop
sahf
fmul
jp
jne
push
mov
in
mov
je
xchg
pop
clc
lret
test
sub
cwtl
lds
test
xchg
imul
fcoml
sbb
std
xchg
js
dec
jg
cmp
roll
xchg
jbe
pop
pop
push
push
push
les
paddd
cmc
imul
aas
push
inc
insb
leave
rorb
mov
les
push
movsb
call
fcoms
roll
push
les
mov
imul
jno
jmp
stc
cmc
lahf
lcall
dec
inc
loop
fwait
jg
and
js
arpl
mov
movsl
loopne
jbe
aaa
das
fistl
cmp
mov
data16
pop
dec
sbb
add
mov
mov
mov
ja
fistl
and
pop
pop
adc
rcrl
imul
push
inc
aad
sbb
dec
pop
sub
jl
lods
lods
mov
ret
xlat
lock
push
and
insl
ret
rcr
cmp
or
jle
jle
shll
mov
inc
and
adc
jmp
test
lret
cmpsl
loope
sbb
cmpsl
xchg
rcl
fucomp
dec
daa
in
aas
adc
mov
sub
in
and
lock
or
pusha
mov
ljmp
cli
ret
out
cmp
clc
imul
mov
lock
inc
or
fs
inc
sbb
addr16
gs
push
add
andl
pushf
scas
cmpsb
adc
rolb
add
xorb
data16
out
sub
mov
std
or
hlt
mov
stc
xchg
xchg
mov
movsb
loop
mov
in
sti
xorb
mov
je
nop
jbe
adc
mov
inc
inc
mov
and
pop
sbb
mov
xchg
cmpsb
add
or
xchg
popf
mov
push
mov
ljmp
in
cmp
push
add
inc
cs
je
push
movsb
sub
mov
pop
rorb
out
push
inc
dec
loop
mov
cmp
int3
push
lods
mov
call
mov
loop
sahf
fmull
lahf
decl
aam
pop
mov
and
and
scas
jae
std
insl
push
pop
inc
jno
adc
and
pop
pop
fsubrs
cmp
mov
mov
jns
mov
mov
imul
pop
sub
fildll
xchg
or
sub
out
mov
icebp
lods
mov
or
or
mov
shll
lods
mov
loopne
xchg
xor
xchg
sub
arpl
adc
imul
out
jle
insl
gs
lahf
je
pop
xor
shlb
jae
mov
adc
add
movaps
negb
push
mov
inc
push
lret
into
mov
dec
cmpb
inc
out
sti
lgs
and
adc
pop
dec
out
sub
pop
cwtl
dec
inc
insl
or
cmp
mov
or
pushf
mov
call
push
ss
shrl
mov
xchg
add
jns
ja
or
pusha
jno
push
pop
and
ret
xchg
imul
pop
jecxz
inc
sub
mov
adc
lea
xchg
mov
mov
pop
mov
add
les
sbb
mul
out
jl
inc
add
cmp
mov
sahf
lods
jl
push
pop
nop
cmc
sbb
mov
xchg
and
aad
sub
in
fadds
int
mov
mov
in
and
fnsave
lock
cmp
cmp
xchg
test
sbb
popa
imul
imul
out
pop
sbb
jo
dec
or
jnp
mov
dec
out
inc
mov
pop
add
jl
roll
or
mov
sti
dec
fsubrs
push
jp
xchg
les
pop
and
adc
ja
lock
pusha
hlt
lds
jmp
jns
std
shlb
inc
mov
imul
inc
sti
lcall
inc
aaa
rol
pop
sub
imul
sbb
aas
mov
les
lock
sub
popa
dec
sub
push
movsl
je
jns
scas
xchg
mov
data16
sub
ja
lret
mov
stc
cmp
insl
repnz
add
fidivrl
mov
pop
out
cmc
call
in
aam
popa
in
stos
inc
add
inc
aaa
pop
outsb
lock
or
rcll
mov
cli
push
scas
jmp
fcoms
mov
xchg
xor
not
xlat
cmp
ret
mov
outsl
jp
lods
out
out
lock
std
cmpsl
jge
dec
or
dec
shl
out
sbb
mov
enter
into
sbb
lea
je
jp
pop
or
sub
dec
pop
stos
xchg
stos
or
in
pushf
rolb
mov
std
mov
and
xchg
leave
jno
cltd
rcrb
hlt
pop
mov
mov
xchg
fs
xor
mov
pop
loop
mov
incb
imul
test
add
nop
add
xor
addr16
and
inc
add
inc
inc
mov
imul
cmp
dec
xor
xchg
add
neg
xor
fidivrl
cld
in
cmp
sbb
add
add
push
mov
aas
mov
push
fidivs
std
clc
scas
mov
pop
testb
imul
fidivrl
ficoml
push
imul
fsubr
out
repnz
les
xor
mov
inc
xor
lcall
pop
or
push
or
mov
das
outsb
imull
aam
mov
adc
out
push
scas
data16
adc
sub
xchg
scas
jge
jb,pt
arpl
xchg
into
dec
push
xor
push
adc
inc
aad
mov
and
outsl
mov
mov
push
negl
shrb
cli
adc
or
rorb
xorb
jg
jnp
call
dec
add
fmul
xchg
xor
fldl
sbb
int
loope
scas
sub
mov
ficoms
jge,pt
outsl
jmp
inc
dec
dec
xchg
push
jmp
clc
into
out
movsb
cmc
mov
mov
xchg
jmp
xlat
or
inc
nop
imul
les
jae
orl
aas
insb
jns
mov
mov
cli
xlat
mov
sbb
cmp
mov
cs
js
outsl
push
xor
sub
mov
dec
lds
jbe
adc
sbb
loop
inc
in
lahf
xorb
and
mov
cwtl
out
inc
mov
adc
pop
in
mov
xor
sbb
jge
dec
sbb
mov
adc
hlt
fwait
inc
mov
std
inc
add
jns
add
jne
jmp
in
and
inc
cmp
and
pop
jle
mov
cmp
xlat
popf
jp
adc
sbb
cmpsb
dec
lret
or
fisttpll
mov
push
push
sub
jne
mull
hlt
dec
and
fsubs
inc
stos
mov
add
mov
pop
adc
jns
pop
jecxz
lcall
movsl
js
out
sahf
sub
sub
setle
push
push
arpl
cmc
mov
vmovss
adc
call
xor
xor
test
sub
add
mov
ds
inc
mov
adc
cmp
and
rclb
and
sub
cs
fsubl
or
push
sti
and
mov
adc
sub
out
jne
out
push
mov
xor
and
mov
jge
xor
in
dec
adc
movsl
loopne
sbb
and
movsl
mov
push
jns
imul
cmp
ss
stos
cmp
push
sub
inc
xchg
sbbb
lock
icebp
inc
daa
dec
pop
repnz
mov
leave
or
out
adc
jo
pop
ret
mov
cmp
lock
mov
test
aaa
mov
stos
jmp
test
or
ljmp
dec
cli
bound
fnstcw
leave
ljmp
xchg
jnp
outsb
sub
dec
clc
leave
sub
aas
push
jg
repnz
ds
push
test
arpl
roll
xor
out
ror
inc
mov
cmpsl
mov
icebp
fs
xlat
popa
mov
gs
jbe
outsb
fcoms
jmp
dec
add
lock
bnd
pop
leave
loopne
fs
sbb
mov
cmp
aas
xchg
ja
mov
push
in
sub
lret
sub
cmp
xor
and
mov
adc
cmp
mov
loop
sbb
push
aad
in
push
shl
and
pop
jmp
mov
lahf
xchg
inc
mov
lret
aaa
in
leave
rolb
push
sbb
adc
stc
dec
test
lods
imul
pop
mov
test
lcall
les
pop
xor
xchg
les
clc
mov
and
test
sub
push
dec
mov
ja
dec
call
int3
sub
xchg
cmp
pop
ljmp
and
pop
int3
hlt
cmp
mov
mov
jae
popa
mov
mov
cli
adc
shlb
jecxz
fmull
jmp
pop
mov
dec
or
pop
jb
jge
fidivs
pop
addl
inc
and
loopne
push
insb
arpl
mov
mov
xchg
insb
fiadds
push
fidivs
xchg
fwait
stos
orb
inc
fs
inc
lret
pushf
cld
jg
inc
mov
add
dec
int3
cmp
mov
and
xor
lret
mov
pop
sti
daa
mov
popa
pop
outsb
push
cmp
add
hlt
sbbl
es
push
iret
or
cwtl
test
sbb
push
ds
xchg
outsl
push
sbb
test
aas
jg
or
cmp
test
call
inc
leave
xor
mov
sub
lret
repz
std
mov
pop
and
cmp
movsl
pop
faddl
sub
mov
adc
pop
sbb
out
mov
mulb
xchg
add
stc
jne
in
jae
cmp
mov
mov
fwait
aam
push
mov
or
cmpsb
clc
fdivrl
mov
push
orb
xor
xor
lret
outsl
jp
mov
mov
ret
mov
add
addr16
push
scas
ja
hlt
ret
mov
stos
jns
faddl
jmp
mov
mov
test
adc
in
cmpsb
mov
mov
cs
jbe
add
xchg
addr16
dec
cltd
dec
fiadds
jl
fmull
rorb
jg
pop
lcall
sbb
pop
lock
xchg
xchg
push
mov
or
stos
pop
mov
xchg
test
test
iret
xor
cmp
push
and
mov
sarl
adc
jno
mov
or
jne
jae
cmp
jne
mov
pusha
adc
cmpsl
lods
mov
pop
xor
sub
xchg
mov
rolb
xor
shl
xchg
loop
icebp
ret
stc
push
sbb
xchg
jno
jp
enter
fisttps
enter
sub
scas
or
mov
decb
push
xchg
push
test
or
or
pop
fwait
loopne
cs
adc
cs
and
fdiv
fistpl
mulb
sbb
fisttps
lock
xchg
xor
insl
out
dec
jo
mov
lock
lock
out
or
insl
imul
xchg
es
das
jb
mov
les
cmp
pop
inc
mov
sbb
dec
movsl
scas
mov
jg
mov
xchg
icebp
sub
gs
xchg
out
ja
sub
test
cwtl
push
sub
out
adcb
and
push
inc
push
outsb
gs
jb
jecxz
sahf
jmp
imul
pop
insb
imul
mov
mov
dec
frstor
push
mov
adc
fwait
push
and
pop
fwait
in
jne
lock
adc
xchg
fstl
or
inc
dec
repz
mov
cmp
xchg
dec
es
jmp
std
cwtl
mov
test
lods
test
mov
aaa
lret
enter
fildll
sub
dec
shlb
mull
imul
cltd
pop
bound
mov
popf
sahf
int
jle
dec
dec
lods
adc
mov
cmpsb
in
stc
xor
add
xchg
jno
push
shl
xchg
mov
lret
es
lds
out
xchg
push
inc
mov
insl
cwtl
ljmp
and
mov
mov
cmpsb
fcoms
shrb
cmp
cld
jbe
stos
sti
cmp
lds
das
add
xor
and
add
push
cmp
sbb
call
fldcw
and
inc
xchg
push
mov
sub
stos
mov
jmp
repnz
add
mov
in
cmpl
lods
stos
stos
jg
push
jb
xchg
xchg
aam
or
push
mov
xor
cmp
cli
pop
cmc
fistps
lahf
idivb
test
fwait
mov
int3
test
push
mov
outsb
fidivrs
mov
mov
push
incb
mov
adc
test
fistpl
loopne
ret
cmp
xor
jmp
and
in
fdivs
int3
push
inc
fdivrl
mov
xchg
js
jge
and
push
ja
sbb
sahf
mov
in
jns
negb
push
lock
pusha
shr
inc
and
xchg
mov
dec
stos
push
adc
jnp
pop
fcompl
inc
movsb
push
rclb
mov
lahf
imul
mov
imul
es
mov
lea
add
sbb
and
cmp
inc
push
cli
jne
push
jp
mov
sub
ret
lock
sub
push
rorb
xchg
jno
je
jle
inc
sahf
inc
dec
scas
mov
jno
mov
in
xchg
test
cld
inc
int3
sahf
gs
rcl
mov
gs
jo
daa
into
fistl
mov
sti
loop
in
cmp
dec
nop
cld
xchg
stos
adc
or
nop
jns
shll
mov
mov
or
pop
xchg
and
int
pop
iret
insl
lea
imul
dec
xchg
and
ret
push
dec
pusha
incb
decl
adc
push
push
fs
mov
xchg
adc
dec
xchg
test
adc
gs
pop
and
pop
cmpsl
sti
sbb
inc
shrl
xchg
inc
adc
mov
test
nop
jnp
jmp
hlt
fidivrs
xor
cmpsl
sub
and
push
sbb
pop
lock
xchg
xchg
shrb
adc
rol
scas
cwtl
leave
inc
pushf
icebp
aam
xchg
mov
inc
rolb
mov
xchg
inc
lds
pushf
push
mov
mov
ficoml
into
das
xor
xor
add
sbb
ss
dec
filds
enter
and
stos
fisttps
insl
and
dec
sub
and
xorl
insl
mov
push
roll
or
fwait
push
sbb
jmp
mov
stos
mov
mov
aad
addr16
xor
bound
scas
push
mov
repz
jo
xor
cmp
sahf
jno
xchg
jb
push
pcmpeqw
xor
sub
clc
fnsave
xchg
call
pop
and
jno
insb
xchg
jp
cmp
mov
aad
push
lahf
test
or
sub
mov
mov
pushl
rcrb
xchg
push
vmptrld
sbb
xchg
mov
push
sarl
movsl
dec
mov
mov
push
inc
jg
outsl
mov
mov
xrelease
sbb
adc
es
sub
xchg
int
scas
shlb
js
mov
mov
and
hlt
jns
rorl
fwait
mov
in
movsb
mov
push
push
xchg
pushf
push
leave
sub
mov
mov
add
add
pop
xor
xor
mov
out
pop
jl
movsl
insb
jae
pop
in
xchg
inc
xchg
fisttpll
mov
mov
popf
adc
call
faddl
add
add
mov
loopne
ficomps
mov
andl
mov
push
popa
movsb
gs
inc
stc
adc
sti
xlat
js
sub
jle
pop
pop
jnp
push
mov
in
and
js
mov
imul
mov
mov
dec
cmp
fcoml
sbb
test
pop
pop
jo
add
adc
aam
shlb
jne
xchg
rcrb
stc
push
mov
mov
mov
adc
sub
fimull
cmpsb
xchg
dec
sar
or
mov
jmp
popf
xchg
fwait
jnp
dec
sarl
aad
push
mov
mov
dec
ja
xor
popa
adcb
adc
xor
shrb
stc
sbb
cmp
cmp
ja
stos
iret
sbb
or
fists
xor
cli
sub
cmp
cmp
loope
push
xchg
add
jl
mov
out
pop
sti
sbb
stos
or
mov
es
adcl
and
mov
pop
xor
mov
dec
in
mov
sub
pop
mov
cmpsb
mov
dec
add
pop
shlb
cmp
nop
mov
cmp
adc
test
cmp
clc
jns
gs
sbb
lds
jne
pop
pop
int3
mov
sub
push
push
push
fs
mov
mov
add
imul
enter
or
js
jo
fnstenv
mov
mov
fdiv
xchg
mov
xchg
cmp
sbb
enter
repz
leave
imul
push
gs
mov
nop
sbb
push
cmpb
sbb
int3
mov
std
stc
test
push
into
xchg
subl
cli
adc
daa
push
jg
xchg
push
jge
das
mov
pop
pop
sbb
cmp
shlb
movsb
dec
mov
cli
ret
mov
adc
mov
jecxz
stos
rcrb
xor
js
cwtl
inc
rorb
or
insb
jbe
shrl
nop
popf
sbb
imull
push
fwait
pop
dec
mov
push
and
and
mov
loopne
test
aad
test
add
scas
xchg
in
mov
adcb
daa
imul
lcall
out
jmp
mov
or
xchg
push
fiaddl
jnp
or
or
adc
cvtpi2ps
mov
adc
ds
mov
cmpsb
add
lods
leave
pop
mov
out
inc
sahf
loop
or
inc
add
out
xchg
inc
adc
sbb
lods
dec
mov
movsl
pop
lret
outsb
add
pop
jae
push
int
jmp
cltd
jg
rolb
adc
stc
inc
mov
movd
push
mov
mov
xchg
jb
leave
or
push
and
cmp
in
dec
je
pop
mov
mov
mov
xor
cmp
jo
punpckhwd
xorl
add
or
rclb
and
data16
cmc
cmp
and
mov
sbb
in
ret
cmpsb
jns
push
mov
into
xchg
pop
or
xor
icebp
push
add
arpl
pop
xor
cmp
pop
insl
hlt
cmc
push
loop
inc
xchg
insl
popf
ljmp
push
pop
test
xor
pop
pop
fnstenv
push
in
cmpsb
sub
xchg
inc
xchg
outsl
jp
adc
testl
mov
add
out
push
in
fsts
and
or
adcb
cmpsb
je
ss
dec
cmpsb
sahf
adc
pushf
mov
bound
loope
pop
loop
lea
sbb
jae
cmpsb
jb
stos
fs
subb
iret
add
dec
jp
pop
stc
push
pop
fs
sbb
mov
push
arpl
in
adc
loope
mov
cmp
mov
xchg
bound
sbb
aam
ljmp
loopne
dec
nop
mov
int
scas
and
fsubrp
loope
jge
addr16
loopne
mov
xlat
mov
mov
sub
mov
mov
and
xchg
repz
gs
sub
gs
enter
aas
dec
and
les
xchg
scas
pop
pop
ret
cmpsb
push
xlat
pop
adcl
mov
push
outsb
pop
push
push
in
sahf
push
insb
ficoms
mov
or
mov
stos
pop
inc
pop
xor
inc
popf
shrl
cmp
pop
push
lods
scas
sub
orb
int
jno
xchg
add
mov
xlat
enter
test
sbb
cmpl
mov
jb
cli
icebp
sub
iret
inc
mov
adc
mov
dec
nop
sub
or
xchg
push
xor
aad
cmp
mov
into
jle
rorb
sbb
add
out
fnstsw
mov
jae
divl
pop
xchg
mov
enter
cmp
popf
roll
xor
gs
add
mov
xchg
es
push
sub
mov
sub
xlat
test
enter
pop
mov
add
mov
adc
ss
or
push
xchg
or
sbb
cs
xchg
dec
fs
cvtps2pd
in
or
mov
sbb
push
fildll
dec
int
pop
shl
clc
xor
hlt
dec
lods
dec
fldl
jo
jo
push
xchg
add
in
mov
movsb
pop
push
mulb
mov
xor
lea
sahf
mov
xlat
xchg
arpl
inc
cltd
lret
enter
xchg
xor
xchg
ja
dec
daa
dec
scas
cmp
dec
pop
xchg
mov
jp
mov
xchg
out
fdivs
rclb
inc
in
mov
cmp
sbb
mov
cmp
fistpll
outsl
movsl
je
lock
loope
mov
pop
mov
push
int3
push
cmp
xor
mov
jmp
sbb
in
and
sbb
inc
mov
shrl
ficoml
jl
push
push
fwait
shlb
mov
pop
mov
jmp
test
push
adc
popa
sti
pop
ja
es
push
dec
xor
in
stc
andb
aad
jp
and
test
mov
sub
clc
dec
testb
lret
dec
xor
pop
xchg
rcrb
mov
test
push
pop
adc
adc
jp
sub
ficompl
daa
add
stc
enter
stos
inc
xor
clc
push
xchg
mov
in
rolb
aaa
sbb
adc
xor
cmpsb
pop
std
and
sbb
mov
sub
pop
lods
inc
xor
aam
jge
push
xchg
xor
test
dec
into
or
repnz
push
sbb
sub
lret
pop
add
cmpsb
sarb
pop
nop
pop
lea
sbb
and
xor
xor
jbe
jg
dec
out
fiaddl
test
push
clc
outsl
lahf
clc
popf
xor
ret
aaa
sar
int
ja
cmp
jg
cltd
scas
and
outsl
fs
mov
inc
lret
fistl
jno
xchg
sub
aas
jmp
mov
leave
dec
or
movsb
int
mov
xchg
outsb
fisubs
xchg
or
fs
dec
pop
scas
adc
out
pop
push
xor
cmpsl
scas
and
pushf
gs
and
sbb
ss
outsb
inc
pop
stos
jno
sub
fidivl
lahf
push
aam
pop
enter
clc
or
mov
movsl
clc
mov
or
xor
push
or
outsl
iret
add
popa
stos
addr16
sub
mov
sbb
jnp
lret
pop
mov
fcmovnbe
jns
fwait
sti
dec
sti
or
sahf
sub
das
cld
xchg
mov
push
aas
cmp
out
loopne
cwtl
pop
les
xchg
sbbl
rcll
inc
sub
mov
and
imul
test
pop
int
roll
and
std
add
aam
fs
enter
push
mov
jl
aam
or
dec
imul
xchg
mov
jmp
subb
pusha
mov
push
inc
sbb
aad
xchg
jge
imul
jb
mov
jo
je
outsb
xchg
fucomip
jge
xchg
rorb
jns
popa
mov
push
sbb
push
jl
dec
loope
gs
mov
lcall
lods
xchg
pop
mov
dec
dec
imul
es
fwait
inc
mov
xor
inc
fbld
sub
adc
push
push
out
jp
xchg
mov
jp
xchg
icebp
push
cmc
sahf
lea
sbb
adc
sti
add
sbb
mov
test
xchg
xchg
cmp
mov
jecxz
scas
stc
inc
icebp
dec
lret
adc
lods
loopne
bound
pop
enter
jp
push
mov
adc
push
je
jg
add
ljmp
sub
xor
push
andb
mov
pop
xchg
cs
sbb
push
adc
jg
inc
jns
inc
adc
pop
dec
pop
xlat
outsb
inc
mov
aas
adc
sbb
fistps
lcall
dec
xchg
sarb
rcl
std
sbb
stos
xchg
test
sbb
and
mov
fs
jmp
leave
nop
jo
xchg
repz
pop
dec
ret
bsr
xor
out
out
push
push
xchg
dec
xchg
pop
fsubl
ficoms
push
cmp
fldt
jo
mov
jo
movsb
pushl
insl
add
insl
aas
push
nop
aam
xchg
add
pop
pop
cli
lea
fsubp
gs
xor
jb
sahf
jecxz
jno
ss
addr16
movsb
pop
pushf
stos
cmp
pop
mov
es
jnp
xor
mov
adc
fs
decl
out
mov
int3
cmp
or
mov
or
lds
lea
daa
and
xchg
sub
lret
faddl
sbb
lahf
jp
mov
xchg
mov
pop
scas
lahf
sahf
adc
arpl
xchg
lret
sahf
jns
cwtl
cltd
popf
push
daa
adc
daa
dec
cmpsb
and
jle
jne
ret
lods
sbbl
mov
rcrl
push
shll
jg
das
repnz
cmp
mov
or
push
or
push
in
add
cmpsb
stc
mov
mov
shrb
cmp
cmc
jmp
ficomps
lcall
dec
flds
lea
or
jecxz
inc
hlt
push
test
mov
sbb
fsubrl
mov
and
pop
xchg
outsl
popf
insl
xor
test
and
mov
clc
bound
sub
pop
push
jg
xchg
pop
push
dec
and
repnz
dec
cwtl
push
bound
cmpsl
dec
sub
push
rep
data16
fdivrs
xlat
pop
rol
bound
dec
xor
fwait
pop
out
sub
in
lock
cmp
mov
mov
xchg
mov
push
sub
scas
mov
popa
or
sbb
pop
out
loopne
ror
outsl
sub
ljmp
pop
fldcw
leave
dec
test
jb
push
stc
in
popaw
add
sub
and
inc
push
dec
add
adc
mov
inc
dec
mov
cmc
shll
and
mov
xchg
ret
andl
push
into
jae
cmp
ficoms
leave
in
cmpsl
data16
add
loop
imul
jnp
fsubrs
lock
bound
sub
das
mov
in
mov
movsl
add
movsl
pop
lret
cltd
insl
cmp
fcompl
sbb
fisttpll
insb
pop
push
and
movsb
cli
insl
lea
or
bswap
sub
jp
sbb
push
adc
mov
jge
xchg
ja
mov
sti
popf
jo
inc
aas
cmp
pop
adc
inc
xorl
pop
js
or
adc
lock
movsb
push
and
mov
mov
lret
mov
cmc
aad
rcr
dec
shll
shlb
jno
mov
add
push
add
xor
inc
movsl
test
out
mov
outsl
or
push
push
loopne
es
adc
stc
xor
mov
mov
js
dec
rorl
repnz
jne
jno
pop
xorl
aam
aaa
fcomps
daa
aam
je
divl
fisubrs
jnp
and
jne
jne
xor
xchg
ds
mov
pop
and
cwtl
shll
fildll
sbb
push
pusha
add
bound
aas
push
pop
sub
adc
lcall
mov
shll
icebp
outsb
jo
pop
xchg
notb
pop
movsl
in
mov
push
xchg
imul
loope
and
mov
jl
push
sub
push
roll
mov
push
push
push
ret
push
cmpl
andb
pop
sbb
dec
xlat
add
inc
adc
cmp
push
pop
cld
sarl
xchg
jb
sub
lods
xchg
call
xchg
mov
sub
cmpsb
fcmove
push
mov
es
in
out
push
outsb
ret
push
sub
subb
push
xchg
in
xchg
push
cmp
test
push
lock
push
cmp
dec
pop
pop
loop
xor
leave
scas
scas
push
out
mov
jae
lahf
sbb
inc
mov
call
sbb
inc
pop
out
movsl
mov
iret
jo
loop
pop
cwtl
push
mov
push
dec
out
clc
pop
mov
filds
mov
adcl
out
push
movsb
hlt
and
or
lds
ss
push
mov
sub
xor
cmp
jne
jmp
push
pop
in
cmp
and
popa
ret
imul
mov
or
cmp
aaa
test
cmc
sbb
cmp
xchg
dec
inc
xor
pop
pop
lcall
popa
xchg
lahf
stos
lcall
outsl
cmp
fwait
mov
xor
inc
xor
or
xchg
jge
cltd
stos
add
adc
mov
hlt
out
mov
mov
xor
xchg
fcompl
pop
and
pusha
cld
movsb
out
push
aam
jno
xchg
jo
jp
xor
negl
xchg
aad
into
mov
pop
adc
stos
and
outsl
dec
decl
jle
and
dec
pusha
pop
loope
xor
xchg
movsl
dec
aas
cmpsl
fs
mov
fcos
cmp
jno
movsl
xchg
test
xchg
popf
jb
or
jae
xchg
cmpl
inc
or
xchg
rol
stos
insb
subb
xchg
push
lock
movsl
add
push
jmp
jp
sbb
leave
lods
adc
test
into
inc
jno
pop
push
and
mov
repnz
lahf
fwait
int
lods
push
nop
or
mov
test
enter
sub
and
in
mov
mov
xor
in
inc
cwtl
test
dec
xchg
mov
lds
cmpsb
imul
cmc
dec
mov
mov
divb
adc
lods
sub
inc
stos
jb
mov
mul
aam
push
inc
and
xchg
cmpsl
mov
into
ja
gs
mov
and
ljmp
push
add
std
inc
aas
jmp
add
frstor
xor
fnstsw
sub
lods
decb
std
xor
roll
into
mov
or
stos
in
pushf
test
push
jo
shll
mov
add
mov
pop
aad
push
push
inc
stos
sub
ror
adc
in
cmp
loopne
inc
dec
sbb
push
inc
push
cmpsl
shrl
jecxz
xchg
inc
into
lock
aad
xlat
pop
out
gs
and
fisttpll
push
or
pop
stc
dec
ror
sub
or
dec
cmp
xor
test
lea
inc
into
push
ficomps
lea
sub
sar
sub
cpuid
push
cmp
pop
outsb
mov
push
xor
push
inc
lret
lret
jg
xor
xor
jg
sbb
dec
push
lea
std
xchg
mov
enter
std
aam
test
pop
jge
nop
cltd
jl
xchg
pushf
sbb
xchg
fstpl
push
test
loope
cmpsb
pushf
add
dec
mov
clc
and
mov
or
imul
not
jg
outsl
std
rcrb
mov
movb
pusha
sub
sub
lea
movsl
mov
and
jae
mov
daa
sub
stos
rorb
adc
lcall
mov
ss
movsl
or
shrl
mov
ljmp
inc
lret
insb
mov
mov
xor
pushf
jle
ja
or
push
add
cwtl
rcrl
mov
or
ficoml
xchg
rcrl
mov
loope
inc
lret
imul
in
ljmp
ret
xchg
into
int
push
lods
xor
xor
imul
pop
movups
adc
adc
jo
cmpsl
in
xchg
or
mov
gs
push
cmpsl
mov
push
fistps
sbb
xchg
lods
or
cwtl
je
cs
andl
jno
imul
jbe
or
arpl
addb
insl
mov
addr16
inc
mov
jecxz
in
sahf
scas
push
or
push
ret
or
mov
mov
insb
imul
aam
cmp
dec
out
mov
into
pushf
enter
out
or
sbb
fstp
adc
clc
jp
sti
lods
outsl
out
push
mov
shl
out
inc
adc
mov
mov
mov
jecxz
fdivs
stos
pop
sbb
sub
out
adc
enter
pop
and
ljmp
and
push
mov
lods
mov
data16
daa
xchg
adc
cltd
adcl
rcrl
sub
sub
std
push
push
ljmp
out
or
push
push
inc
sub
dec
sbb
xchg
fbld
clc
pushf
lahf
pop
mov
imul
xor
sbb
mov
ss
mov
leave
mov
xor
decb
mov
xchg
ret
cmp
jmp
and
or
pop
cmp
pop
pop
push
xor
out
mov
cmp
or
sbb
cmp
cmpsl
int3
fcomps
fisubrl
jbe
jl
mov
mov
int3
add
shlb
jne
inc
adc
es
pop
fdivs
stos
or
adc
cmpsl
adcb
push
stos
inc
inc
push
push
repz
rorb
xor
gs
lods
jl
sbb
jge
add
mov
gs
mov
lds
sub
fwait
scas
mov
sbb
ja
xchg
mov
jp
shll
sub
jb
inc
xchg
ljmp
jle
and
leave
cmp
jge
scas
out
mov
fld
or
out
add
popa
ja
xchg
mov
dec
and
push
jmp
stos
xchg
lcallw
jne
inc
sub
in
daa
outsl
outsb
mov
mov
mov
push
xor
sub
jo
test
or
frstor
sbb
sub
pop
and
or
pop
test
inc
push
pop
mov
mov
cmp
leave
and
sti
jnp
push
push
and
sub
fidivl
jl
lret
mov
and
nop
lret
fistl
dec
jns
leave
nop
arpl
pop
rclw
cmp
lahf
adc
xchg
xchg
inc
scas
ret
adc
sbb
and
jg
pushf
je
adc
shr
and
adc
std
sbb
add
popa
cmp
cmp
dec
sbb
xlat
mov
jnp
mov
stos
push
push
sub
adc
mov
into
sub
out
sbb
adc
pop
scas
sahf
and
inc
xchg
sub
dec
stos
scas
pop
jnp
or
sti
push
adc
cmp
jne
movb
insl
std
in
pop
cmp
push
es
pop
mov
cmpsl
clc
xor
roll
ret
pop
jmp
popa
movsb
pop
popf
adc
sahf
cld
xor
jb
icebp
repz
jno
fs
dec
push
sbb
pop
jle
fwait
es
mov
adc
shrl
jl
js
popa
imul
sbb
mov
mov
stos
adc
xchg
add
pop
xor
dec
mov
pop
mov
sahf
in
lret
mov
ds
ret
bound
mov
enter
pop
jns
pop
dec
arpl
aas
pop
mov
movsb
int3
sbb
lds
stos
mov
and
enter
cmpsb
out
sub
call
and
call
mov
sub
fisubrl
mov
mov
sbb
jp
xor
bnd
jmp
mov
mov
lds
jo
mov
sbb
test
fidivs
arpl
out
pop
insb
rcrl
sar
mov
sbb
dec
push
popa
or
jmp
dec
mov
loop
cmp
push
jb
or
mov
sub
cld
jp
clc
jns
mov
movsl
mov
and
cs
es
mov
js
jns
pop
jp
mov
stos
pop
imul
jp
int
rcl
les
dec
xor
xchg
xchg
insb
fistl
add
and
pop
push
mov
push
jl
push
dec
mov
sbb
push
into
sbb
add
arpl
loope
jge
and
cmpsl
pusha
popf
xor
jge
icebp
or
xor
push
stos
das
cvtpi2ps
push
scas
inc
arpl
sbb
or
hlt
int
pop
add
inc
xor
or
push
xchg
mov
out
movsb
out
fucomi
add
sbb
cmpsl
push
dec
mov
or
clc
mov
or
mov
push
xchg
fistl
mov
add
rorl
sub
fcmove
dec
test
js
push
mov
dec
adc
ret
sbb
repnz
dec
psubb
shrb
faddl
add
into
out
fstl
push
aaa
cmp
inc
out
sar
dec
sbb
dec
or
ds
and
jae
pop
nop
lcall
int3
enter
movsl
pop
loopne
adc
fsts
pop
loopne
cli
pop
pop
outsl
lcall
test
das
test
mov
jo
mov
mov
loope
inc
inc
cmp
cmp
sbb
inc
imul
push
int
int3
repz
jo
daa
or
sbb
int
test
pop
sahf
xchg
xor
scas
and
jmp
cmp
lock
gs
cwtl
add
inc
inc
nop
mov
or
or
mov
fcoml
testl
add
sbb
xorl
inc
ret
fisttpll
dec
std
arpl
arpl
pop
or
xchg
inc
push
notb
or
cmp
mov
adc
sbb
lods
jmp
dec
addr16
jp
popf
int3
fwait
insl
and
mov
mov
sarb
ret
push
pop
jl
les
mov
dec
mov
adc
push
ret
sarb
add
outsb
cld
push
jbe
push
aam
cmp
mov
adc
ss
xchg
fdiv
pop
xchg
pop
rorl
fnstsw
sbb
pop
inc
pop
movsb
popf
push
mov
sbb
ret
sahf
pop
scas
and
in
test
shrb
out
idivb
pop
out
lret
lret
cmc
inc
inc
pushf
mov
sbb
cwtl
ret
pushl
cmpsl
in
daa
mov
cmp
adc
aam
and
inc
xchg
in
pop
dec
jno
adc
mov
inc
out
and
mul
xor
mov
pop
popl
mov
mov
cmp
mov
pop
xchg
in
icebp
mov
lret
fisubrs
fnsave
into
jne
or
pop
pop
pop
pop
sbb
sub
js
fstl
pop
fimuls
in
xchg
loopne
lods
adc
add
js
xor
sbb
movsb
test
cmp
mov
inc
dec
jbe
cmc
test
ljmp
push
pop
jae
mov
in
or
add
loopne
fwait
mov
mov
xchg
xchg
out
push
pop
sub
stc
enter
cld
insb
add
lcall
xchg
outsl
into
mov
das
jne
pusha
movsl
push
mov
jns
test
or
sarb
int3
mov
cs
repnz
xchg
les
daa
dec
ljmp
movsl
imul
sar
cmp
int3
pop
push
xor
push
fstpl
cmpsl
movsl
aaa
xchg
xchg
sub
les
in
stos
add
lea
jbe
das
lods
lds
je
lret
xchg
dec
push
xor
pop
lret
add
stos
in
adc
cmp
and
orl
mov
js
dec
xchg
cmpsl
sbb
fld
dec
into
in
push
adc
in
arpl
push
jb
lahf
push
jge
mov
jg
push
subb
inc
sub
fcompl
ret
adc
js
sub
aad
adc
and
sub
repnz
push
pop
adc
decb
pop
into
mov
fisttpl
pop
outsl
adc
adc
jbe
test
test
cld
sub
sbb
ja
or
or
lcall
sbb
or
hlt
sub
loopne
ja
add
adc
fstps
in
mov
sbb
popf
mov
adc
fidivs
push
mov
pop
hlt
xlat
shrl
out
push
ds
or
sbb
pcmpgtd
es
fnstcw
js
add
add
push
dec
push
sub
ret
mov
in
jl
pop
inc
mov
pslld
pop
xor
jbe
repnz
mov
arpl
pop
into
and
aad
pusha
repz
aam
stc
lcall
enter
jno
mov
push
loopne
jg
add
sub
sbb
pop
push
ret
mov
pop
inc
pushl
inc
dec
jge
xchg
insb
xor
aam
insb
and
test
subb
mov
js
sub
in
inc
fs
xchg
pusha
std
mov
add
test
mov
fisttps
addr16
outsb
stc
dec
pop
movsb
jmp
push
cmp
sti
mov
xchg
mov
mov
repz
stos
cmp
enter
imul
mov
lds
mov
loop
cmpsl
mov
or
push
insl
pop
and
rorl
stos
add
pop
lret
orb
shrl
imul
push
les
cmp
add
lret
clc
divb
cmp
fwait
cmpsl
add
in
and
rcll
lret
subb
lods
dec
adc
fsubrs
lahf
or
test
insb
xor
insl
fsubl
daa
orb
mov
bound
jmp
mov
movsb
inc
hlt
ss
pop
sbb
mov
in
adc
and
mov
in
xchg
test
cs
or
mov
cwtl
jno
leave
xchg
mov
movsl
cs
call
out
stos
add
fmul
ss
dec
or
les
fstp
adc
clc
arpl
mov
add
dec
dec
scas
aas
cmp
imul
push
insl
mov
cmp
mov
mov
test
cwtl
cli
xor
lods
decb
popa
jnp
outsb
aas
add
sbb
cwtl
jo
loope
loop
inc
adcb
hlt
lret
js
repz
sub
fcomi
in
arpl
dec
xchg
sti
shrb
dec
mov
movntps
imul
push
xchg
jl
frstor
enter
mov
ret
cli
jle
sub
daa
sub
cmpsb
cwtl
mov
lea
pop
add
shr
adc
mov
fsubs
jbe
std
imul
adc
lds
fwait
push
stc
enter
arpl
mov
mov
imul
popa
iret
lea
or
pushf
test
sub
mov
jmp
int3
pop
test
shrb
inc
lahf
loope
sti
push
adc
popl
nop
jb
sub
mov
sbb
or
outsb
xor
dec
aam
dec
pop
inc
jne
ss
pusha
pop
pop
cmc
mov
jno
daa
adc
shl
mov
lds
cmp
jle
cli
sarb
dec
lock
push
outsb
xor
ret
into
inc
sub
xor
fnsave
pusha
ret
push
add
sahf
adc
scas
fcomps
pop
popf
pop
sahf
push
das
fildl
fldt
les
pop
ss
xchg
mov
mov
sub
push
or
pop
js
add
push
hlt
data16
dec
daa
pop
sahf
pop
les
add
push
jge
or
add
pop
mov
add
fcoml
xor
inc
mov
pop
in
aas
andb
adc
fwait
pop
pextrw
sbb
or
inc
movsl
mov
test
push
ds
dec
adc
push
mov
sub
out
add
sub
xor
mov
sub
adc
mov
gs
sub
dec
fisubrl
xchg
add
roll
jae
jg
scas
cmpsl
das
sbb
in
ss
push
mov
inc
mov
in
cmp
sti
push
orl
bound
pushf
lret
pop
movsb
sub
cmp
adc
imul
cmp
inc
dec
ds
inc
icebp
adcb
pushf
mov
roll
mov
outsl
mov
mov
add
pop
inc
ss
xchg
into
cwtl
and
sbb
negl
mov
push
testb
push
sbb
popa
xchg
mov
jbe
push
dec
lret
xchg
in
and
mov
cmp
sahf
sarl
in
data16
sub
and
dec
pop
gs
aam
mov
mov
add
sub
jl
int
cmp
sbb
in
out
ret
add
bound
repz
lcall
sub
mov
xor
mov
in
add
ss
and
and
or
pop
je
fisubrs
call
popl
dec
arpl
xor
dec
pop
dec
xchg
rclb
mov
or
mov
adc
fnstsw
lret
cld
dec
dec
movsb
test
push
rolb
sub
dec
mov
test
cmpsb
inc
push
mov
xchg
int
or
push
mov
adc
add
xchg
movsl
dec
inc
das
rcl
repz
cmp
or
jecxz
push
int
mov
add
pop
mov
cmp
loopne
jl
repz
and
jnp
adc
push
orl
push
push
in
pop
push
mov
xchg
cltd
mov
in
jmp
dec
jns
or
arpl
xor
push
fsubs
rcrl
ja
inc
daa
dec
add
testb
mov
jns
inc
dec
push
mov
mov
insb
scas
inc
mov
pushf
imul
cmpsb
mov
arpl
xor
mov
mov
sarl
loopne
stos
cmp
jle
loope
mov
xorl
dec
ljmp
fistl
xchg
fistpll
sbb
jnp
adc
jns
mov
test
lods
mov
pop
jne
push
push
lret
insb
adc
mov
movsb
out
adc
add
jae
std
fmull
enter
xor
imul
jg
push
dec
mov
xlat
sub
aad
sub
push
adcb
add
dec
aam
adc
adc
add
mov
cmp
stc
xlat
push
inc
imul
clc
mov
or
xlat
aas
sahf
clc
movsl
mov
sub
ja
xchg
mov
xchg
les
pop
push
cmp
jg
dec
jecxz
ss
int3
movb
fdivrs
test
jecxz
jne
gs
mov
outsb
stc
xchg
lea
jb
push
fwait
add
push
test
pusha
dec
rclb
pop
dec
in
arpl
js
xchg
push
out
scas
imulb
test
sbb
xchg
sbb
mov
jae
ljmp
lea
mov
movl
xor
lret
jns
pop
jo
test
adc
outsl
sbb
in
push
lods
mov
cmp
jp
in
ds
pop
sarl
lahf
ficompl
lret
sarb
fadd
adc
mov
and
push
enter
insb
icebp
pusha
inc
jle
push
jno
lds
cmp
mov
jne
dec
mov
xchg
jo
test
sbb
call
inc
mov
out
fwait
xchg
enter
push
cmp
jns
sub
js
fistps
push
jmp
cmp
imul
fbld
sahf
cmp
gs
stos
sbb
hlt
push
pop
mov
and
push
mov
repz
jae
adc
cmp
mov
mov
cmp
sub
jno
dec
daa
dec
ljmp
outsb
ss
aas
pushf
dec
jecxz
dec
push
les
outsb
je
arpl
sti
int3
mov
mov
jnp
mull
jp
sub
add
test
inc
xor
adc
leave
pop
mov
ljmp
or
rcrl
adc
roll
rorl
mov
movsb
jo
cmc
xor
iret
and
pop
mov
inc
pop
cs
jecxz
jl
shrl
rcrb
xlat
in
push
add
out
sbb
aaa
cld
pushf
clc
mov
outsl
push
insl
push
aam
lods
adc
sbb
bound
js
movb
shrl
add
dec
mov
and
xchg
mov
add
push
cmp
andb
xchg
fbld
xchg
cmpsb
push
sbb
enter
repnz
adc
insb
dec
xor
insb
into
sbb
xor
aaa
and
push
mov
dec
mov
mov
sbb
and
lahf
mov
mov
adc
mov
icebp
int
lcall
aad
cli
cwtl
jne
dec
sbb
cmp
imul
sub
repnz
rolb
add
dec
inc
dec
lds
push
testl
mov
adc
push
push
ror
adc
xor
divb
scas
sarl
lods
lret
sbb
sahf
inc
jno
mov
push
mov
sub
lods
add
popa
xchg
mov
mov
lock
sbb
or
jo
fldl
push
outsb
mov
imul
repz
sbb
mov
add
cli
mov
lds
push
out
out
out
idiv
mov
shrw
sti
int3
or
pop
or
mov
adc
mov
lods
dec
dec
add
push
data16
outsl
mov
in
adc
lock
jbe
xchg
inc
cs
hlt
pop
xchg
outsb
pop
jmp
mull
adc
xchg
ret
cmp
outsl
negb
shr
mov
sahf
js
cmp
mov
gs
adc
movsl
cli
inc
incl
inc
sub
xchg
fcmovne
push
mov
cmp
pushf
aam
mov
inc
lock
clc
mov
sbb
jmp
sbb
push
movl
pop
lahf
jns
stos
jl
xor
lcall
push
shr
mov
xchg
pop
xlat
mov
aaa
pop
dec
lea
jno
in
sbb
out
sub
fidivrs
mov
mov
mov
enter
adcl
pop
sar
fiadds
jo
gs
or
subl
dec
outsl
stos
or
pop
jns
dec
mov
cmc
lcall
nop
xchg
lods
pop
ja
pop
std
fmulp
cmp
ret
lds
outsb
fldt
xchg
pop
dec
cmp
enter
bnd
idiv
fisubs
pop
mov
or
push
inc
movsb
sbb
mov
iret
leave
push
scas
das
push
adc
ror
rcrl
xor
nop
lods
mov
cltd
pop
xchg
sbb
mov
jne
or
pop
pop
cli
sbb
into
cmpsb
pushf
inc
imulb
rorl
jg,pt
cmp
ds
cmp
bound
imul
inc
mov
xor
xchg
cmp
negb
shrb
jae
cld
jge
adc
inc
das
fadds
sbb
addr16
sub
xlat
hlt
sub
xor
jmp
xchg
lea
adc
mov
mov
cmp
pop
cmp
mov
out
and
xchg
shl
xor
sbb
dec
decb
push
and
xlat
je
push
add
mov
lea
lds
cmp
cld
mov
jp
test
push
movsl
lcall
and
call
incb
mov
xor
pop
sbbb
or
xor
sub
push
or
dec
or
imul
and
pusha
jae
dec
xchg
cmpsb
or
push
hlt
sub
movsl
sub
nop
push
leave
out
mov
cmpsl
pusha
adc
jnp
pop
cli
sub
fimuls
pop
and
bound
popl
cmp
add
cmp
pop
sbb
cltd
imul
pop
sub
mov
aas
jge
test
icebp
sub
adc
xor
js
or
pop
pop
cmp
jb
push
push
dec
mov
cld
or
js
mov
pusha
jp
repnz
jmp
scas
xchg
push
movl
imul
in
arpl
les
dec
popf
add
repnz
clc
shll
xchg
adc
jle
idivb
push
sbbb
push
jecxz
mov
ss
add
and
mov
loopne
sbb
in
scas
aas
inc
rol
in
in
mov
or
inc
nop
dec
dec
movsl
xchg
je
ret
mov
incb
mov
fs
xorb
adc
pop
adc
out
lds
sub
ror
repnz
test
orb
dec
sub
in
shll
mov
or
scas
scas
loopne
incl
lcall
lret
addl
adc
lods
inc
jo
adc
movsl
inc
insb
xor
lret
push
rolb
in
dec
jns
xchg
push
push
xchg
ret
ljmp
jmp
rcrb
jg
loopne
test
inc
mov
aaa
push
jge
fldt
pop
in
int3
push
movsb
push
push
cltd
dec
imull
xor
xor
lods
test
xchg
push
in
fstps
jl
sub
cmp
mov
sbb
repz
sbb
pop
test
fwait
ljmp
pop
cmc
ss
in
inc
add
mov
adc
out
mov
jbe,pn
pmulhuw
pushf
mov
pop
xadd
inc
aam
and
adc
push
and
movsb
enter
sbb
dec
push
lea
lock
sbbb
ljmp
sbb
stos
dec
mov
adc
les
mov
cmp
rcrb
pop
jl
loope
push
mov
orb
xor
add
rclb
test
fdivrl
mov
dec
pusha
insb
ret
fcoms
mov
stos
daa
cmpl
aaa
jnp
out
cmp
sbb
pop
fcompl
mov
ja
popf
pop
icebp
jne
test
gs
xchg
and
in
popa
pusha
pop
sbb
test
push
or
das
mov
cmp
sbb
aam
in
mov
or
dec
fcoml
fidivrl
pop
pop
fiadds
sar
push
rcl
ss
rcr
cmp
testb
mov
data16
mov
dec
in
aaa
push
lds
pop
cmp
lds
cmp
call
sub
ret
iret
outsb
dec
add
xlat
xor
shr
sub
mov
and
lods
jl
outsb
dec
jl
push
jmp
inc
out
mov
mov
sbb
xor
shll
rcrb
nop
cmc
sbb
and
xchg
dec
outsl
mov
xchg
dec
ds
jae
fwait
in
jo
scas
shr
cld
mov
enter
jmp
cmp
out
jmp
and
sti
mov
enter
je
dec
xor
hlt
out
int
mov
nop
pop
and
push
int3
cmpl
iret
lret
jbe
or
jl
mov
push
imul
inc
dec
fdivrl
andl
pushf
push
add
insb
inc
and
add
sbb
and
lods
add
std
xchg
jl
inc
stc
fs
push
lods
cmp
loop
jmp
xor
shr
mov
add
mov
mov
adc
push
fisttpll
sbb
xchg
test
sbb
inc
imul
xor
xor
hlt
nop
mov
dec
mov
mov
ret
add
mov
mov
add
out
xor
xlat
mov
pop
xor
add
hlt
imul
adc
sbb
stos
pop
lahf
loop
cmpsb
insl
jnp
pop
mov
mov
xchg
mov
mov
imul
jo
enter
out
sahf
js
icebp
jmp
jmp
add
bnd
push
mov
jp
push
adc
jo
fbld
jp
imul
inc
out
aad
push
mov
pop
xor
or
aam
stc
imul
jno
add
mull
movsb
sahf
lcall
shll
out
stos
rol
repnz
xchg
sbb
in
adc
xchg
dec
incb
pusha
dec
movl
in
mov
cld
test
adc
fsubl
aam
fmuls
pop
cld
jg
add
push
pop
cwtl
cmp
add
loop
push
jmp
icebp
outsb
cli
in
pop
sub
xchg
jno
and
mov
sbb
jmp
adc
leave
and
xor
in
inc
pop
cs
movsb
dec
pop
sti
add
stos
jl
repz
add
adcb
adc
xor
fnstcw
xor
loop
js
in
mov
adcb
loop
xchg
mov
icebp
loop
jns
push
sub
gs
outsl
into
popf
idivb
mov
stos
lock
movsb
mov
imul
xlat
cwtl
pop
push
mov
cwtl
stc
or
fs
mov
imull
data16
mov
in
push
adc
jecxz
out
rolb
clc
pop
cmpb
xchg
cmp
xchg
sbb
scas
lret
addr16
xor
push
jnp
cli
sub
or
jb
lods
movsl
jne
scas
imul
cmp
ja
xchg
aam
cmc
add
jbe
xor
aad
xchg
lods
adc
push
push
std
shll
fidivrs
xor
or
cmpsl
outsb
lock
out
gs
push
cs
mov
nop
cltd
je
xchg
call
sbb
or
stc
cli
out
mov
pop
xchg
test
aam
out
ret
popf
jge
in
mov
lret
aad
sub
jns
jg
cltd
sbb
jbe
into
sahf
nop
jge
sbbb
and
and
fisttpll
cs
jae
out
pop
nop
mov
lret
fstpt
movlps
dec
mov
int
inc
cwtl
mov
ja
add
xchg
lods
and
shrl
inc
out
ljmp
mov
fcompl
add
jmp
call
add
gs
mov
je
xor
clc
mov
cmpsl
in
cmp
testl
test
add
or
data16
and
jns
xchg
jmp
push
sar
or
jns
in
aam
inc
cld
mov
popa
inc
rcrb
mov
inc
pop
cs
stos
pop
cli
mov
mov
push
cmpsl
fs
ss
push
fists
xor
icebp
mov
les
xchg
dec
icebp
jge
out
pusha
je
cmp
les
push
lret
jle
sbb
mov
jle
iret
add
jmp
lahf
test
loope
imul
pop
xor
dec
dec
pop
or
mov
adc
and
out
insb
test
out
sub
sbbl
fbstp
movb
or
mov
and
pushf
and
aam
pop
loopne
jmp
push
fsubrl
xchg
mov
add
push
les
mov
stc
shl
rclb
add
sbb
test
push
lock
ret
cmp
inc
stos
mov
mov
pop
movsl
and
and
icebp
fcoms
dec
jne
fcoms
mov
xchg
sub
add
outsl
lods
inc
aad
dec
mov
xchg
sub
sbb
mov
cmp
or
lods
sub
js
dec
ss
mov
pop
ret
push
or
movsl
inc
cli
cli
pop
push
fwait
pcmpgtb
je
cmp
adc
sbb
or
sub
mov
imul
xor
mov
out
jns
jl
mov
adc
pop
cmc
sahf
jae
js
cmpsl
roll
movsl
mov
or
sub
push
int
pop
add
popa
insb
out
sbb
pop
inc
je
pop
cmp
mov
fistpl
mov
adc
lods
outsb
fs
mov
mov
in
pop
push
es
and
mov
stos
adc
dec
fsub
fcmovu
push
leave
fs
call
mov
pop
lret
stos
adc
add
add
dec
push
dec
daa
aad
add
fs
sub
pop
mov
push
mov
add
hlt
cmp
inc
icebp
xor
int
dec
ror
enter
mov
mov
push
and
fidivl
addr16
imul
ljmp
test
insl
cs
shlb
fstps
testb
in
outsl
jg
enter
or
inc
xchg
nop
mov
sbb
leave
jg
mov
mov
fs
and
pop
loope
adc
outsl
jnp
dec
cld
cmp
ja
mov
cmpb
inc
sbbl
pop
cs
insb
ss
icebp
ja
dec
pop
dec
or
les
dec
cmc
lods
and
mov
jnp
call
sub
jnp
and
pusha
cmp
jbe
inc
or
or
push
inc
jne
es
dec
adc
shl
sub
sbb
rcrl
out
pop
mov
je
or
push
les
test
and
dec
loopne
xchg
ja
jle
cmp
sti
lods
test
negb
lock
push
jp
mov
jnp
pushf
jnp
cmp
xor
push
cmp
add
loope
fsub
scas
push
push
out
test
loop
inc
mov
jecxz
dec
or
or
les
xor
fisttpll
negb
loop
cltd
push
sbb
mov
jle
es
push
hlt
cltd
lahf
hlt
mov
sahf
and
mov
cmp
xor
insl
jbe
adcl
pop
clc
pop
add
das
jno
dec
cmp
outsl
cmp
divl
outsl
scas
pop
xchg
jb
mov
pop
xchg
inc
into
test
insb
and
lret
dec
mov
call
js
jae
incl
push
adc
xchg
push
pusha
shrb
ret
add
xchg
data16
dec
int
adc
pop
hlt
hlt
sbb
mov
mov
sbb
out
push
push
lahf
aam
lahf
into
cld
mov
imul
inc
sti
sarl
movsb
loope
sub
stos
stos
xchg
mov
xor
mov
hlt
sub
aaa
shr
fsts
xor
sti
dec
and
imul
pop
fwait
or
scas
jae
xchg
add
popf
inc
sub
jecxz
cmp
inc
push
jge
aam
mov
or
movsl
mov
mov
xchg
mov
cmp
jnp
and
jmp
add
mov
rcrb
sub
inc
cli
cli
dec
popf
mov
icebp
mov
jmp
lds
add
xor
push
push
push
cwtl
or
push
jecxz
sub
mov
sub
cmpsb
jg
js
aaa
adc
jno
adc
fstl
rclb
pop
idiv
mov
rolb
imul
push
fadds
imul
shlb
arpl
xchg
lock
dec
jmp
jl
jle
rcll
jp
adc
or
inc
jmp
or
xchg
add
arpl
sub
daa
sbb
out
repnz
jae
xchg
push
lods
add
or
jge
mov
in
and
outsb
xchg
or
rorb
or
fwait
xlat
sbb
sbb
and
lock
push
sub
xchg
subb
dec
pop
xchg
mov
stc
jb
inc
mov
ds
inc
leave
xor
pop
or
adc
cmp
xor
aad
gs
xlat
nop
xchg
test
adc
stos
cbtw
movsl
xlat
test
inc
cmpsb
xorb
xchg
loope
lahf
jmp
push
push
xor
add
lahf
out
pop
xlat
push
jp
mov
push
jle
mov
pop
or
daa
pushf
mov
mov
lret
xor
adc
loopne
pop
jo
mov
cs
lock
dec
mov
call
stos
loopne
pop
addb
or
nop
adc
pop
add
add
jecxz
cwtl
je
ja
adc
sub
sbb
push
test
pop
lds
push
xchg
mov
pop
out
sti
roll
jge
stos
add
cltd
jb
pcmpeqb
clc
and
shll
jmp
jecxz
mov
add
inc
lds
sbb
mov
jecxz
popf
je
sar
dec
popa
imul
outsl
clc
pusha
sbb
or
sbb
popf
inc
pop
mov
and
hlt
mov
int3
imul
stos
and
into
xor
repz
xlat
and
xchg
divb
test
push
lret
call
int
sub
push
mov
stos
movsb
loope
mov
inc
xchg
xchg
dec
push
push
mov
dec
leave
inc
pusha
dec
xchg
aaa
insl
test
mov
push
pop
sbb
jp
lock
adc
mov
shr
dec
xor
dec
mov
pop
aam
mov
xor
pop
mov
lock
and
push
inc
xor
out
fwait
mov
shlb
inc
fiadds
lret
arpl
popf
jmp
and
mov
inc
ficoml
push
stos
push
jl
cmc
and
lds
test
fnstenv
xor
stos
call
push
scas
or
push
pop
iret
sub
arpl
push
fisubs
shrl
mov
fcmovb
gs
sarl
lods
mov
aaa
cmp
mov
jo
xor
stos
rorb
inc
fcoml
push
stc
push
out
xchg
subb
icebp
lret
inc
gs
or
xor
adc
mov
cmp
jbe
out
or
mov
arpl
in
mov
imul
mov
mov
fs
pop
fsts
or
ja
sub
lock
lea
cmp
iret
xchg
xchg
mov
xchg
xlat
sbb
dec
sub
mov
jb
adc
dec
xor
repz
fwait
xchg
mov
in
push
into
cmpsl
imul
fildl
iret
aaa
mov
add
out
fs
mov
shl
ljmp
sbb
add
xor
pop
jmp
cmpsb
dec
or
mov
sub
inc
ficomps
cmp
loopne
sbb
clc
push
push
test
xchg
mov
xchg
mov
pop
xor
jne
mov
test
xchg
xor
pop
cmp
xchg
xor
mov
mov
std
pusha
xchg
into
mov
ds
jecxz
and
sbb
cmp
jmp
xor
int3
xor
lcall
js
fdiv
unpcklps
and
sbb
mov
leave
or
movsb
mov
aam
out
jp
fnstcw
lds
sub
sbb
out
test
cmp
mov
dec
fmuls
inc
insb
test
add
cmpsl
loopne
mov
cmp
and
bound
nop
mov
out
jns
dec
xchg
outsb
loopne
mov
loop
aaa
cmp
std
dec
jae
out
lds
mov
test
mov
sbb
mov
popf
ret
incb
pop
sub
out
or
repnz
dec
pmullw
in
jbe
push
jae
jg
data16
cld
arpl
int3
xchg
pop
ret
into
mov
ds
movsb
faddl
jge
loop
adc
sbb
iret
lock
jae
jns
xor
ss
inc
lods
stc
les
cmp
enter
call
dec
data16
cmp
popf
addr16
outsb
out
xor
aad
add
sahf
repnz
loop
scas
mov
add
xor
or
imul
fdivrl
sbb
sub
nop
inc
inc
sbb
push
mov
jmp
fildl
dec
inc
loop
sbb
cmp
adc
jb
inc
in
add
jmp
cmpsl
xor
mov
mov
iret
int3
and
popa
inc
ja
or
add
push
jbe
inc
jns
add
and
xor
insb
cmp
push
insl
loope
stos
jp
call
xchg
xlat
add
add
outsl
mov
adc
in
and
imul
cmp
push
and
xchg
hlt
rorl
dec
add
pop
sbb
push
cmp
mov
sbb
and
cmp
and
decb
call
xchg
sub
and
add
rorl
jno
test
push
call
das
call
cs
mov
sub
jnp
push
mov
aam
ja
xlat
jge
pop
add
and
out
sbb
mov
popf
stos
dec
xor
add
in
or
or
xchg
xlat
push
pop
hlt
int3
sub
mull
xor
or
dec
xor
cwtl
mov
mov
inc
mov
inc
jne
cmp
lret
dec
cmp
or
idiv
pcmpeqw
adc
inc
and
ret
mov
das
xor
loope
gs
stos
pop
cld
or
dec
xchg
std
sub
int
xchg
dec
adc
cmp
xor
aas
loope
sbbl
in
xchg
or
xchg
dec
fiaddl
and
add
sub
jne
gs
clc
int
sbbl
fisttps
adc
or
stos
ror
jae
insl
repnz
or
ss
xlat
inc
cmp
sbb
das
push
shll
jno
or
inc
add
mov
dec
add
nop
xorl
int
jne
sbb
lods
aam
ss
rcrl
jbe
mov
pop
std
fsts
sbbb
sub
ret
sub
lcall
jl
loope
gs
add
sahf
out
jae
pop
sub
and
lcall
and
adc
pop
fucom
cltd
dec
mov
mov
jle
test
or
out
or
mov
push
into
scas
out
adc
lret
aas
xchg
mov
pop
lods
fists
push
xchg
out
jecxz
or
xchg
and
sbb
push
addr16
inc
cli
int
mov
cmp
in
or
and
movsb
mov
notl
leave
ficoms
add
idivb
and
repz
clc
mov
mov
enter
daa
das
stos
dec
pop
cwtl
cli
add
inc
xchg
push
adc
jmp
dec
test
popa
iret
pop
fcomps
outsb
adc
shrl
std
out
call
dec
and
cmp
and
arpl
jns
call
popa
add
pusha
jno
push
fsubl
mov
mov
inc
movsl
pusha
sbb
lahf
and
push
int
jbe
popf
mov
psubsw
or
bound
dec
rcrl
fdivl
and
adc
mov
inc
ja
arpl
mov
fs
mov
dec
xor
lahf
jae
mov
mov
inc
bound
testb
mov
mov
push
xchg
sbb
pop
repz
mov
push
fidivrl
push
adc
data16
in
push
cmc
in
sub
in
and
jecxz
aad
jno
push
mov
push
jb
and
xchg
mov
arpl
int3
loop
mov
scas
fs
dec
les
decl
jmp
div
xor
stc
es
jo
or
cmpsl
sub
stc
decl
xorl
mov
in
jg
push
jmp
sub
out
popa
aam
bound
test
xor
or
adc
pop
mov
bound
loop
mov
jbe
dec
push
or
mov
outsb
je
dec
fwait
out
in
mov
cmp
adc
les
sbb
aas
ret
adc
iret
xor
in
mov
movq
jo
jno
adc
jl
mov
rcr
dec
sahf
or
xchg
test
sub
or
shll
push
sti
adc
mov
inc
and
je
pop
jle
dec
test
ss
mov
adc
add
mov
int3
pop
lods
mov
ds
aas
outsb
mov
lds
jge
andb
xor
mov
dec
cmc
clc
pop
push
mov
xor
ret
and
xchg
loopne
sti
ret
mov
imul
jge
mov
scas
push
sbb
fcoms
add
pop
add
aaa
dec
mov
popw
ds
arpl
rcrb
sbbl
add
mov
test
insl
adc
pusha
shl
sub
cli
push
fwait
int3
cltd
dec
jo
sbb
jmp
fcompl
into
mov
dec
fsubrl
adc
push
sbb
mov
rcl
adc
sbb
dec
push
sub
repz
shlb
jp
stc
jno
mov
mov
cmpb
mov
cmpsl
sub
mov
fwait
sub
mov
call
arpl
mov
add
in
leave
mov
mov
sub
jmp
dec
stc
sub
leave
pop
push
mov
inc
jg
pop
jb
xor
mov
mov
adc
iret
popf
mov
xlat
xor
and
sbb
pop
jno
push
ds
mov
or
pop
or
sbb
xlat
icebp
push
adc
jmp
filds
fs
shrb
xchg
jb
in
mov
pop
xchg
ljmp
push
and
and
jmp
sub
data16
mov
lods
add
fdivr
fwait
push
cmp
xchg
lcall
gs
xchg
jge
mov
into
jmp
dec
repnz
inc
adc
sahf
enter
xchg
jl
xchg
jmp
mov
pusha
daa
rolb
or
jl
push
mov
in
sbb
push
rcrb
mov
fldcw
in
push
scas
pop
mov
std
mov
movsb
int
lock
xchg
aaa
mov
das
hlt
jne
sbbl
jmp
jno
stos
cld
and
and
adc
sub
cmpsl
jle
jnp
lods
loopne
cmp
aaa
push
pop
mov
jg
lods
rorb
sbb
xor
jnp
shll
mov
jle
sub
leavew
rcr
movsb
lock
sub
sbb
repnz
daa
in
or
cmpsl
pusha
mov
xchg
adc
xor
dec
lea
xchg
gs
jae
aaa
mul
sbb
cmpsb
insl
mov
add
clc
ja
negb
das
je
pusha
imulb
imul
repz
lods
dec
mov
test
lahf
into
stc
and
ja
jl
jecxz
imul
adc
mov
je
lahf
mov
mov
and
lcall
add
into
dec
fcomi
les
clc
mov
aaa
daa
jp
cmpsl
mov
xchg
arpl
lret
mov
push
or
popa
mov
jmp
hlt
lahf
jge
movsl
mov
shlb
push
push
mov
setl
sti
jo
xchg
jecxz
ret
outsl
cld
mov
insl
mov
or
xchg
and
sbb
mov
xor
sbb
js
inc
inc
pop
mov
dec
inc
ret
addr16
mov
shll
ret
mov
xor
lock
test
mov
mov
fmul
into
jge
or
stos
mov
dec
int
add
and
pop
scas
jno
lea
addr16
popa
inc
pop
outsl
mov
data16
mov
enter
orb
push
inc
aaa
arpl
out
xlat
inc
cltd
push
mov
push
aad
ret
ret
dec
push
xchg
xorb
jae
insl
or
shll
push
pop
adc
data16
push
mov
jnp
addl
mov
das
cs
adc
mov
repz
or
cmp
fistpll
and
out
stos
insl
and
xlat
clc
add
mov
inc
in
stos
clc
xor
das
jb
daa
xchg
mov
mov
pop
jo
popf
jge
pop
adc
in
dec
loope
mov
insl
add
pop
les
insb
jo
and
mov
pop
jecxz
xor
mov
test
enter
loop
testb
faddl
mov
xchg
pusha
fs
or
mov
mov
cld
push
sbb
push
mov
and
cmp
add
outsl
repnz
inc
mov
fiaddl
adc
add
xchg
cltd
mov
xor
loopne
mov
pop
push
pop
iret
sti
jl
mov
lods
cmc
or
stc
or
mov
popa
stc
lds
lcall
or
int
xchg
push
andl
xlat
push
or
mov
shll
cmp
cld
and
ret
fs
ss
sbb
inc
pop
sbb
dec
cmp
js
xchg
xchg
outsb
mov
aaa
fisttpll
dec
scas
xchg
add
in
int
cmp
xchg
cli
pop
sub
out
bswap
mov
or
lods
mov
icebp
pop
fcmovu
lea
lds
jg
mov
mov
inc
jbe
sahf
stos
sbb
sbb
jge
dec
or
push
jne
add
adc
das
sahf
dec
mov
inc
xchg
lods
push
and
adc
in
imul
mov
les
loope
cltd
mov
clc
mov
inc
add
jp
dec
sar
arpl
mov
jmp
inc
push
fld
push
rorl
cmp
jb
dec
lret
or
or
mov
out
out
or
mov
adc
mov
outsb
jp
aam
scas
pop
inc
leave
mov
dec
add
mov
inc
stos
cwtl
mov
pop
xor
shlb
stc
and
fmulp
lds
sbb
mov
inc
mov
std
test
mov
repz
das
into
in
cwtl
aad
movsb
dec
or
adc
or
testb
loope
mov
sub
xlat
and
mov
repnz
mov
xor
push
xor
out
push
jmp
movsb
loope
shrb
cmp
xchg
pop
and
xor
sar
mov
and
iret
jl
and
xlat
pop
sti
insl
pop
loope
adc
fimull
int3
add
adc
fdivs
sbb
test
call
mov
lret
sahf
push
imul
mov
leave
gs
or
or
sbb
fildll
push
inc
mov
cli
and
dec
jo
aas
scas
pop
shll
adc
iret
loop
mov
cmp
stos
add
jp
mov
fisubs
and
movsb
hlt
sarb
and
sbb
xchg
mov
int3
int
repnz
sub
jno
jns
cwtl
arpl
or
push
mov
mov
mov
pop
test
repnz
pop
mov
cmovbe
jmp
cs
int
inc
pop
mov
call
dec
arpl
test
js
out
inc
fcomps
test
test
push
xchg
push
jl
fsubrs
fdivrs
ret
ss
inc
pop
mov
fistpll
push
and
mov
repz
inc
pop
insb
gs
mov
jns
cltd
and
dec
mov
inc
dec
fisubs
or
pop
jmp
fistpl
ret
jo
cmp
push
ds
xchg
sbb
sub
push
cmpsb
xchg
aas
test
icebp
cmp
cmpsl
lds
pop
push
push
and
fisttpll
jo
add
shrl
in
outsl
cmpsb
popa
out
shr
push
cltd
lahf
mov
push
xchg
and
pop
lea
lods
cmpsb
adc
inc
add
mov
push
mov
faddl
outsb
int3
push
lock
fisubrl
mov
or
movsl
mov
negl
bound
cmp
push
push
addl
int3
inc
inc
xchg
les
aaa
push
lret
xor
sbb
add
xchg
jnp
pop
dec
pop
xchg
jp
add
shrl
sbb
or
adc
cmc
insb
test
loop
stos
pop
fs
add
mov
xchg
popf
pop
lcall
push
into
mov
notb
int
test
lods
sub
scas
insb
rorl
xchg
push
outsl
jne
xchg
xchg
jb
aam
push
clc
cmc
daa
int3
shl
negl
cltd
inc
and
inc
into
push
mov
loopne
popa
movsb
shll
ja
push
add
or
inc
xchg
xchg
push
fs
sub
sbb
add
jecxz
mov
pop
frstor
add
incl
cwtl
pop
lahf
lods
popf
sbb
aas
pop
pop
push
loop
call
int3
mov
xchg
daa
cld
loop
xor
mov
movsb
inc
mov
cmc
loop
pushf
pop
xchg
inc
std
xchg
mov
icebp
push
jg
nop
cwtl
test
jnp
fldenv
stos
xor
outsb
pop
gs
pop
sbb
push
push
inc
test
jae
xchg
aad
mov
and
das
fimuls
jb
repz
out
mov
adc
sbb
adc
add
push
addr16
enter
mov
rcll
mov
sub
inc
adc
jmp
xchg
das
icebp
or
xor
sarl
sub
adc
cmp
add
stc
ljmp
cli
mov
jns
out
push
in
jmp
jmp
pop
inc
push
movsb
cmp
cmp
mov
inc
cmp
pop
sti
insl
arpl
adc
mov
arpl
fcoml
jl
pop
incl
addr16
adc
test
add
adc
enter
pop
enter
mov
xchg
fimull
mov
ret
inc
xchg
sub
cmpsb
xor
lock
fwait
pop
pusha
xor
insb
xchg
adc
les
das
mov
push
das
pop
cld
and
pop
push
sub
jo
ret
rcrb
fiadds
mov
xor
aaa
inc
shlb
data16
mov
ja
push
pop
xchg
call
add
mov
imul
andb
jp
scas
nop
bound
call
push
and
push
and
or
fwait
adc
pop
and
dec
xor
mov
jmp
xor
push
or
and
hlt
pop
add
lret
xor
mov
int
stos
mov
and
cwtl
adc
pop
or
mov
and
stos
mov
mov
lcall
dec
push
or
xor
mov
enter
inc
adc
das
mov
or
add
aad
stos
inc
add
xchg
push
mov
aaa
jle
scas
mov
lahf
call
andl
jle
stos
sub
stc
pop
cmpsb
xchg
and
ret
sbb
or
pop
fs
sahf
shr
pop
rcl
mov
sub
and
jnp
push
cmpsl
dec
fists
and
sti
std
ljmp
and
sbb
lods
push
sub
push
insl
sub
dec
mov
mov
lods
cltd
cli
push
sbb
inc
ret
int3
pop
enter
mov
jno
sub
sbb
lods
lock
repnz
inc
incb
hlt
divb
push
mov
adc
push
mov
lds
adc
data16
dec
rcl
ljmp
js
mov
cmp
scas
pop
jle
mov
jo
push
sub
or
cmpsl
movsl
js
test
iret
sbb
pop
mov
cli
stc
insl
scas
xchg
sahf
adc
or
mov
xlat
sub
xor
dec
adc
daa
dec
shll
pushf
sub
mov
cwtl
and
add
xchg
jae
cmp
aad
pop
pop
push
stos
stos
dec
js
add
mov
hlt
fnsave
aad
mov
pop
lds
out
ret
and
mov
and
cwtl
add
push
push
mov
js
add
and
dec
es
popa
mov
cmc
mov
mov
in
es
or
xor
lock
mov
pusha
and
fwait
ret
pop
and
imul
scas
fucom
push
vpminub
aaa
test
mov
mov
add
popf
xlat
arpl
repnz
cmp
jp
xchg
jne
xor
es
jo
outsl
lret
out
outsb
add
aam
xchg
adc
push
mov
pop
mov
sbb
ud1
lods
imul
addr16
xor
push
xor
shrl
mov
enter
pop
add
push
push
add
test
loopne
push
inc
nop
inc
adc
sbb
mov
adc
fimull
pop
shll
mov
inc
xchg
pop
jns
and
push
movsl
stc
mov
fmul
scas
jg
pop
out
dec
push
clc
xchg
nop
dec
xor
push
pop
inc
lahf
dec
sub
adc
mov
loop
rorl
mov
sbb
insb
out
and
icebp
ret
inc
rcrl
cmp
setae
mov
movlps
mov
jnp
ds
dec
ret
push
adc
ret
mov
dec
call
out
xor
aad
cmp
xor
push
jmp
jbe
sub
test
mov
and
dec
js
push
aas
fsubrl
push
out
and
inc
sub
aaa
mov
fimull
mov
lret
out
xlat
out
cmpsl
inc
into
dec
pushf
xchg
insb
sub
or
gs
addl
rcrl
imul
lods
or
push
leave
xchg
setb
xchg
pop
mov
icebp
rcll
cmpsb
or
xor
lods
lds
lock
sub
js
inc
sub
stos
lock
scas
mov
test
dec
jecxz
mov
sbb
lahf
arpl
xchg
addr16
testl
shlb
jmp
inc
mov
ja
adc
jg
lahf
add
cmc
adc
sbb
add
lock
negl
or
jnp
jle
xlat
ds
pop
xor
mov
xchg
loopne
aad
dec
adc
push
inc
testl
or
adc
sub
mov
nop
sbb
mov
dec
fiaddl
push
int3
cld
jg
cwtl
xchg
pop
rcr
repnz
sarl
add
scas
and
sahf
cmp
sahf
push
ss
inc
pushf
test
sub
jae
mov
xchg
pop
jns
add
aad
icebp
pop
push
cmp
daa
dec
sbb
fisubrs
or
fidivl
data16
push
cmp
sbb
push
stos
mov
shl
sti
xchg
fstps
out
scas
add
xchg
inc
fsubrs
mov
idivl
jnp
sub
or
in
mov
mov
cmp
cmpsl
xchg
loope
cmp
dec
and
mov
aam
fcompl
ja
mov
test
mull
lock
jl
cld
mov
pop
mov
xchg
mov
mov
mov
adc
pop
ja
je
js
daa
out
cmp
frstor
fwait
dec
adc
jb
hlt
xchg
sub
push
out
mov
mov
sbb
addr16
dec
fldcw
sbb
lahf
xor
cmpsb
insl
inc
loop
mov
pop
inc
popa
inc
ret
mov
lds
divl
pop
push
mov
cmp
es
jmp
mov
jle
mov
inc
jo
fiaddl
lods
das
ds
rcll
dec
or
sbb
cmpsb
pop
sbb
fiadds
xor
add
loopne
je
imull
into
ficompl
lret
and
sub
dec
scas
jno,pt
add
cmp
xchg
dec
pop
xlat
inc
movsl
mov
push
adcb
test
dec
gs
addr16
adc
rcr
cmpb
sbb
lret
add
addr16
test
push
iret
fistps
loope
test
ds
mov
cmp
and
pop
jne
dec
sub
adc
dec
jg
adc
insl
fs
push
js
fbstp
test
push
shlb
or
pop
lret
aas
or
inc
dec
loop
sbb
xor
jle
jp
ret
xor
movsb
inc
xchg
mov
pop
insl
fs
jecxz
mov
div
xor
pushf
push
popl
loopne
scas
sbb
ret
data16
sbb
mov
mov
movsb
adc
xchg
insl
repnz
cmp
cmp
and
stos
je
jmp
add
sbb
mov
pop
mov
ficoml
xor
nop
aas
jns
jecxz
lcall
push
addr16
jge
mov
push
lcall
lret
mov
clc
dec
dec
sub
imul
mov
mov
mov
mov
mov
pop
pusha
in
and
cmpsb
sbb
xchg
adc
lea
mov
lret
out
aad
inc
jae
lea
in
xor
add
pop
inc
sub
xchg
out
out
call
inc
rorl
adc
shl
mov
pop
andb
xchg
inc
je
lret
push
fisubrs
mov
dec
mov
xchg
in
insb
clc
int3
xlat
popf
ja
dec
fisttpll
ljmp
jmp
push
xor
xor
dec
adc
adc
ja
adc
addr16
mov
loope
fadd
int3
movsl
push
add
lods
scas
or
shl
and
shlb
mov
movsw
cld
or
xchg
cmp
jp
jno
and
sub
fs
stos
or
mov
inc
test
int
ss
mov
inc
push
mov
lret
iret
jbe
and
pop
sub
xor
int3
inc
mov
add
faddp
mov
loopne
pop
mov
mov
xchg
mov
or
push
out
adc
ss
in
out
or
dec
lahf
mov
int3
sbb
dec
cmp
xchg
jb
xchg
daa
cmc
xchg
loop
adc
lea
mov
in
nop
shll
pushf
out
icebp
sarb
inc
and
pop
jb
cmc
push
imul
cmp
andb
dec
xchg
jnp
dec
mov
enter
test
xchg
push
insb
pop
xor
hlt
xchg
cmp
aaa
pusha
ja
push
jecxz
imul
outsb
std
adc
xchg
xchg
sub
cmpsb
ds
mov
pop
fucomp
push
repnz
pushf
and
hlt
movsb
cmp
pushf
push
pop
ret
bound
ljmp
or
leave
movsl
jne
dec
sbb
dec
and
add
or
movl
sbb
fisttpl
lahf
mov
sbb
sbb
add
nop
icebp
sti
call
pop
je
adc
cwtl
stos
pop
push
imul
mov
addr16
jecxz
mov
cmp
lods
xor
mov
mov
and
movl
in
scas
lock
sbb
lahf
rcrb
push
sbb
cmp
lret
pushf
stos
out
mov
dec
jmp
mov
adc
int
xchg
shrl
mov
push
mov
and
ret
jle
jae
xchg
loopne
inc
push
add
je
pop
arpl
push
jg
into
or
mov
sti
lods
inc
mulb
lahf
lock
call
dec
mov
mov
or
popa
pop
inc
nop
sti
pop
test
mov
dec
mov
pop
pushf
js
in
sub
xchg
dec
xchg
jle
nop
es
nop
adc
or
push
push
in
pop
fcoms
lcall
sub
xchg
clc
and
inc
jbe
test
cmc
xor
ljmp
push
adcl
lods
mov
mov
ja
clc
add
iret
inc
mov
mov
lea
mov
stos
nop
stos
dec
fnstenv
sti
aaa
cmp
ficoms
mov
sbb
inc
pop
inc
mov
les
push
sbb
jo
clc
nopl
lods
movsl
stos
pusha
xor
ljmp
sbb
fnstenv
push
pop
insb
pop
push
shl
jg,pt
mov
arpl
loopne
lds
pop
sahf
sub
mov
aas
sbb
mov
mov
pusha
mov
adc
xchg
push
test
adc
pinsrw
lret
xchg
sbb
mov
std
mov
pop
adc
push
pop
mov
dec
stos
sub
pop
or
shlb
pop
rcll
rorb
mov
ljmp
sub
fldenv
test
loope
push
test
cmovns
add
xor
or
test
jecxz
dec
mov
loope
lcall
mov
shlb
add
xchg
jb
js
mov
movsb
adc
popa
pop
pop
jno
jmp
jecxz
cmp
jae
push
sahf
xchg
mov
bound
mov
and
cmpsl
or
inc
pusha
pop
sbbb
out
arpl
pop
iret
out
data16
dec
addb
test
out
sbb
fwait
jo
sub
testl
nop
jns
lea
bound
xchg
stos
negl
inc
mov
lea
push
ja
pop
cli
mov
pop
mov
test
cs
or
fcompl
xchg
sub
lret
dec
and
push
pop
pushf
jmp
fwait
enter
lret
popf
inc
sbb
loop
repnz
and
sub
mov
pop
fwait
push
ljmp
lea
imul
incl
push
dec
push
xchg
push
add
out
aam
shl
fnstcw
push
or
arpl
xor
ret
add
mov
popf
adc
imul
insb
jne
fs
scas
pushf
xchg
shrl
or
stc
movsb
nop
data16
js
jbe
cmp
push
pop
sti
xorb
mov
mov
inc
mov
pop
cmp
xchg
cs
in
cmpsl
xchg
stos
dec
or
in
jp
add
mov
push
aad
and
add
shrl
decl
jle
into
sub
shrl
inc
subl
lods
mov
pop
ja
cmp
enter
popa
sahf
cltd
pop
add
loope
push
inc
cmp
lds
adc
adc
popf
xor
movq
cwtl
int
cld
jnp
icebp
push
aaa
sbb
pop
in
clc
fs
mov
test
sub
notb
ret
adc
adc
and
and
popa
out
out
push
push
lods
in
adc
popf
pusha
lret
push
jno
jb
pop
popa
mov
sub
mov
out
inc
test
daa
fisubrl
test
enter
mov
aad
out
push
adc
das
imul
push
iret
mov
jmp
or
out
pop
dec
jnp
test
push
pop
dec
or
mull
shlb
enter
xor
out
jnp
mov
mov
addr16
xlat
cmc
push
push
in
addr16
jg
jns
pop
pop
ds
popa
ja
cld
mov
fs
jae
into
push
push
popa
jmp
fcompl
add
in
fs
shll
xor
adcb
push
inc
out
int
pop
dec
ficoms
mull
lea
in
mov
cmp
insl
mov
loope
sub
lahf
and
test
cwtl
in
scas
push
fnstcw
push
arpl
inc
repz
inc
fcoml
add
jb
jp
test
lods
stos
xchg
inc
aas
push
xor
es
sub
or
inc
mov
mov
std
cwtl
add
xor
jecxz
insb
mov
push
in
push
dec
int
cmpsl
push
mov
ja
std
or
ret
cmp
repz
idivl
shll
xor
aad
ret
sbb
cmpsl
test
movsb
bound
add
cs
cld
xor
ljmp
push
xchg
fwait
dec
adc
jecxz
into
xchg
sbb
adc
sub
jle
icebp
inc
call
loope
lods
dec
push
fcoml
xlat
lahf
pop
sbb
xchg
mov
outsb
pop
arpl
dec
mov
out
out
inc
leave
lds
int3
sub
add
sub
adc
mov
mov
jle
insb
dec
loope
ss
loope
adc
add
insb
movsl
pop
mov
jmp
sub
outsb
jnp
mov
sub
icebp
and
aad
call
enter
dec
cld
jmp
js
out
mov
in
ja
lods
cmc
pop
fnstsw
out
cmc
pop
xchg
ja
add
nop
pop
mov
xor
fiadds
mov
pop
dec
jmp
decl
ss
xor
pop
cli
jnp
push
mov
inc
add
dec
xor
pop
and
inc
xchg
or
es
fldt
ss
orl
cmc
gs
imul
mov
jecxz
std
inc
inc
xor
cltd
adcl
out
out
pusha
sub
dec
xchg
xchg
add
or
cmp
jl
test
mov
sbb
pop
jbe
mov
je
orb
jmp
add
jnp
mov
je
or
mov
in
loop
add
mov
push
mull
aam
es
fst
mov
inc
dec
loope
cltd
jle
push
jnp
cmp
cmp
aaa
mov
xchg
addr16
and
xor
jae
or
mov
push
push
inc
xchg
rorb
or
dec
int
mov
pop
sub
xor
sbb
inc
sbb
aam
iret
dec
lcall
fisubl
xor
dec
arpl
mov
das
sub
xchg
fwait
mov
sub
ret
dec
push
insl
adcb
mov
stos
cld
movsb
popa
movsb
in
or
out
pop
dec
adc
addr16
sbb
add
sbb
jle
xor
adc
jae
mov
adcb
test
inc
jle
xchg
mov
ss
insl
add
movsb
dec
mov
into
push
int3
jmp
sub
icebp
xchg
jno
jns
in
mov
lea
mov
lods
jns
movsb
ljmp
xlat
rol
push
into
xor
fld
pop
imul
or
inc
popa
popa
lds
fwait
push
xor
ja
pop
mov
stos
hlt
jl
jno
jecxz
iret
div
xor
and
mov
out
int
femms
pop
negl
aam
ss
in
mov
xor
sti
fstp
andl
out
cmp
in
test
outsb
adc
repnz
std
lret
insl
inc
mov
xchg
pushf
jge
ds
rclb
andb
sbb
pop
insb
rcrl
dec
sti
test
sarl
push
rolb
in
inc
jne
push
xor
cmpsb
push
pop
inc
or
sub
fcomp
imulb
out
lds
test
and
sub
pshufw
xor
xor
mov
lock
jae
out
movsl
adc
xor
xchg
enter
pop
fldl
cmc
pop
ret
mov
mov
lods
cwtl
sti
mov
pcmpgtd
xor
push
hlt
iret
pop
pop
scas
xchg
pop
lods
mov
mov
sti
outsb
xor
jne,pt
add
pop
stc
outsl
fwait
loopne
repnz
xchg
mov
cld
push
sahf
testl
mov
pop
ret
mov
mov
scas
mov
push
sub
mov
repz
pop
fmull
xor
mov
testb
and
pushf
push
jmp
dec
fsubp
test
js
jecxz
mov
lods
aad
adc
sarl
mov
fisubl
bound
out
test
loop
imul
sbbl
lret
mov
push
add
mov
leave
jecxz
ss
dec
aad
popa
setbe
test
imul
repnz
int3
scas
pop
fwait
dec
lret
or
sub
dec
mov
adc
jo
mov
pop
mov
aam
pop
add
xlat
je
mov
mov
mov
sbb
lahf
sub
push
sub
dec
dec
push
cmp
jecxz
xlat
clc
add
lds
push
or
add
divl
pop
sbb
out
pop
lds
xchg
mov
sub
add
jns
pushf
daa
popa
sbb
push
xchg
pop
stos
xlat
xchg
cwtl
fnsave
shrb
or
in
insb
bound
aaa
je
and
cld
xlat
jne
jbe
sbb
shl
lret
push
fnsave
rorl
dec
add
sti
jbe
sbb
loopne
mov
sub
dec
xor
aas
pop
dec
mov
mov
sbb
cmc
cmp
xor
iret
lret
pop
lock
jg,pn
jns
sahf
mov
jmp
rorl
data16
das
or
jnp
shll
sbb
mov
shlb
pushw
arpl
sbb
pop
test
mov
xchg
add
xchg
mov
adc
ljmp
hlt
sub
or
push
data16
das
or
and
shr
stc
dec
xchg
or
dec
cld
sbb
jecxz
fcoms
ljmp
xchg
outsb
and
mov
imul
fsin
jge
push
xor
and
cmc
add
adc
test
pop
adc
test
in
roll
fidivs
push
xchg
clc
cltd
pop
fnsave
inc
push
adcb
dec
sub
out
jecxz
loope
movsl
cmp
xor
cltd
test
mov
loope
daa
adc
dec
fiaddl
ss
add
stos
fmul
cmp
cwtl
fldl2t
das
daa
cwtl
daa
frstor
push
fdivr
mov
sub
loope
rcll
insb
mov
jbe
imul
lret
imul
push
stos
inc
js
fwait
test
pop
call
pop
push
pop
xorl
xchg
pop
or
insb
in
dec
leave
je
add
adc
push
mov
jp
inc
aaa
in
xor
mov
aam
int3
daa
adc
pop
sub
fadd
xchg
arpl
pop
cmpsl
and
mov
push
shll
movsl
or
mov
enter
cmpsb
fnstenv
stc
push
or
addr16
xchg
mov
jb
push
fdivrl
jae
jecxz
hlt
repnz
dec
mov
xor
cmp
insb
add
lahf
aad
push
push
pop
fwait
push
iret
shrl
rolb
xor
jae
in
xchg
in
insb
movsb
cmp
add
and
xchg
lret
jp
mov
mov
jno
fstps
inc
mov
sbb
and
imul
mov
inc
add
cmc
pop
pop
dec
xchg
sbb
loope
les
movsb
xorb
cmp
loope
ljmp
inc
push
mov
dec
sub
and
xchg
imul
je
lods
test
addb
test
mov
add
adc
in
adc
test
cmpsl
in
pop
inc
pushf
test
jnp
sbb
ret
sarb
loope
add
pusha
xor
sbb
mov
xchg
sub
pushf
cs
out
xor
push
push
fistps
or
push
jae
push
mov
outsb
fwait
adc
xchg
mov
sub
xchg
add
sub
pop
pusha
int
insl
jecxz
ss
orl
sub
push
arpl
test
lea
rorl
push
pop
lea
sub
pop
inc
loop
lock
mov
jo
or
xchg
mov
leave
push
in
sub
jnp
movsl
adc
gs
jl
ljmp
ja
mov
push
mov
xchg
ret
jno
xor
or
andl
mov
push
cmp
das
pushf
dec
and
mov
mov
xor
ds
lret
cmpsb
inc
jno
loop
cmp
imul
lods
dec
mov
mov
call
inc
and
push
mov
xchg
inc
cmpsl
sbb
ficomps
lret
mov
cmp
out
add
icebp
push
in
andb
in
rolb
daa
cmpsb
dec
sbb
xchg
shlb
sub
inc
movsl
fwait
xchg
sub
movsl
aaa
pop
leave
ss
sbb
jb
sbb
xlat
push
pop
enter
jle
inc
lahf
sub
out
sub
cmp
jo
adc
dec
out
push
xchg
pop
adc
ljmp
frstor
push
in
push
xor
jmp
adcb
shrb
shrb
mov
push
add
and
mov
rol
ja
testb
add
les
or
fwait
dec
inc
xchg
ret
lea
insb
pop
movsb
cs
cld
inc
in
dec
cld
dec
icebp
push
adc
dec
xchg
adc
jo
xchg
sahf
test
ja
fld
scas
xor
cmc
and
cmp
popf
aas
shrb
div
aad
fsubl
sbbl
test
mov
push
in
push
pop
jecxz
push
adc
sub
ret
lret
stos
pop
xorl
lret
lcall
push
mov
sub
push
and
popf
inc
jmp
sbb
push
ss
sbbl
cmpsl
or
sarl
sub
mov
mov
js
rcll
inc
lahf
xor
rcl
bnd
lods
xor
mov
stos
std
test
xchg
scas
lea
loop
clc
pop
arpl
fiadds
jp
lods
xchg
mov
sahf
sub
jp
test
inc
aaa
xor
sti
in
adc
es
js
into
je
fwait
cmpsl
rorb
pop
lahf
lock
repz
je
cltd
insb
push
xor
clc
cmp
jne
movq
cs
jo
jne
dec
fcmovu
sub
or
mov
jbe
addl
cmp
nop
mov
lret
jne
mov
out
cld
bound
lret
jns
pop
jns
fistps
data16
inc
pop
pop
xchg
mov
add
js
sub
in
jae
les
mov
sbb
xchg
data16
jne
fisttps
aaa
xor
xlat
es
xor
dec
xor
das
push
mov
das
pop
addr16
jge
xor
and
inc
pop
and
lahf
or
mov
or
mov
xchg
ret
cs
jg
addr16
dec
pop
movb
outsb
test
mov
fstl
fmull
stos
mov
mov
lcall
push
or
sub
xchg
cmp
inc
inc
lea
jb
push
and
adc
fnstenv
pop
mov
callw
mov
imul
push
cmp
imulb
xchg
shrl
cmp
adc
test
lahf
rcll
pop
pop
push
add
xor
rcrl
iret
dec
push
sub
ljmp
lds
mov
mov
test
cld
mov
mov
fisttpl
repz
dec
insb
clc
mov
lods
or
and
xor
cmp
cmpb
lock
xor
cltd
xor
xchg
imul
fcmovu
xchg
in
notl
push
xchg
inc
xchg
xchg
ja
xchg
fldt
pop
lods
shlb
adc
fcompl
mov
imul
adc
sbb
fsubrl
dec
shr
repz
not
lods
mov
push
inc
sub
add
idiv
mov
dec
test
stos
jecxz
xchg
push
int3
je
sub
push
and
das
aaa
fistl
push
orl
das
mov
stc
flds
jp
fstps
or
dec
addr16
push
pop
xor
orb
es
cmp
jmp
cmpsb
out
lods
loopne
cwtl
ret
cmp
pop
push
outsb
test
push
pusha
or
mov
fiaddl
and
mov
mov
stos
xchg
out
pusha
movsb
cmc
stos
mov
adc
pop
sbb
mov
inc
xchg
into
lea
iret
inc
aas
stos
push
inc
push
lret
in
or
adc
movsb
xor
nop
adc
pop
mov
hlt
sub
mov
jns
sbb
cmc
shll
je
mov
cmpsl
lret
cs
xchg
cltd
xor
loop
cmp
jl
pop
test
sub
loopne
je
inc
push
pop
mov
leave
push
jae
jge
ljmp
dec
and
pop
je
outsb
cwtl
cwtl
xor
movsl
int3
cmp
movsl
jns
cmp
cs
imul
dec
insb
mov
cmp
cmpsb
or
mov
test
fs
dec
in
lods
jae
mov
int3
sbb
or
push
jl
cmp
cmp
arpl
mov
test
add
push
mov
es
ret
gs
jge
xchg
leave
enter
push
mov
pop
or
xchg
dec
je
in
shr
shlb
add
push
or
xchg
imul
mov
xor
add
mov
outsl
lea
jne
mov
jg
jne
lds
fmull
xchg
popf
cwtl
lods
je
jns
jbe
xlat
pop
mov
sbb
repnz
cld
jne
shll
mov
pop
inc
test
and
mov
mov
cwtl
jmp
sbb
sti
jo
mov
aaa
xor
mov
push
divl
iret
fldt
stos
pop
mov
loopne
jg
mov
sti
xor
xlat
fnsave
push
ret
add
mov
outsb
or
pusha
jp
movsl
adc
mov
insl
xchg
adc
push
or
repnz
loope
fsubrs
dec
cwtl
es
mov
test
testb
inc
and
xchg
scas
sub
in
pop
cs
adc
enter
lcall
in
int3
jecxz
je
mov
int3
data16
add
xchg
fdiv
dec
fdivrs
lcall
jns
stos
mov
cmp
insl
pop
jns
and
cmp
mov
push
iret
or
mov
ficompl
cmpsb
sbb
jbe
xchg
cmp
stos
insb
jg
pop
add
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
lea
push
call
test
je
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
call
movl
jmp
movb
movb
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
push
call
movb
mov
add
mov
mov
pushl
pop
mov
movl
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
movl
call
mov
push
mov
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
push
push
call
lea
push
call
push
call
cmpw
mov
push
je
call
push
call
add
jmp
push
push
push
call
incl
xor
adc
pop
xor
dec
xor
adc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
not
out
dec
imul
jecxz,pn
xor
cmp
sbb
xchg
lods
mov
mov
add
mov
cmpsb
xchg
in
cmp
mov
xchg
mov
rcrb
dec
xor
adc
popa
xor
mov
sub
or
addr16
push
push
loope
ja
repnz
push
push
fcmove
or
inc
insl
dec
sub
imul
push
jmp
aas
mov
sub
jl
stc
inc
mov
inc
loope
ljmp
inc
int
enter
fnstcw
sub
jmp
adcl
jmp
adc
clc
int
add
jns
shr
icebp
mov
dec
xor
adc
repz
pop
inc
imul
adc
clc
int
inc
dec
xor
adc
std
int
inc
sub
repz
adc
clc
enter
dec
xor
adc
clc
int
inc
imul
jecxz
out
xor
outsb
leave
enter
dec
mov
ret
adc
clc
int
inc
jnp
xor
adc
clc
fstl
dec
xor
adc
jl
pop
inc
add
jecxz
fstpt
adc
dec
xor
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
push
sub
ret
adc
repz
push
imul
jmp
push
sar
popf
adc
pop
sbb
ret
adc
fmul
push
movsb
inc
cmp
xchg
mov
test
push
inc
pop
inc
xor
adc
cld
int
inc
imul
ret
adc
clc
in
push
inc
mov
jecxz
jmp
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
adc
clc
int
inc
imul
ret
push
cmp
imul
call
pop
loopne
ret
cmp
mov
inc
cmc
fcompl
pop
dec
push
cmp
push
jmp
rol
xchg
lcall
xchg
and
sti
outsl
xor
pop
movsb
cmc
sub
lret
xor
dec
mov
punpckldq
iret
pushf
sub
cmp
fidivs
inc
push
mov
sub
pop
mov
inc
xor
mov
adc
add
out
repnz
xchg
sbb
cmp
stc
mov
or
imul
imull
jbe
inc
or
adc
loope
xor
iret
insl
test
sub
shr
bound
loopne
jbe
pop
mov
mov
in
add
sti
mov
imul
jo
pushf
mov
daa
cmp
xor
je
jno
test
fldt
xorl
je
pop
push
mov
cltd
stos
leave
push
jp
cmp
jl
fcomi
jg
ss
and
lcall
inc
sub
sub
inc
cmp
out
cmp
push
add
out
adc
out
pop
xchg
push
and
push
mov
sarl
and
mov
aam
xorl
xchg
addr16
mov
outsb
dec
xlat
fnsave
loope
out
and
or
sahf
and
mov
movsl
insb
std
loop
dec
xor
cmpsl
stos
repz
xchg
xor
fsub
push
add
and
jne
clc
cmp
adc
insl
mov
test
sarb
push
jl
stos
loopw
stos
xor
mov
sbb
mov
xrelease
into
outsb
pop
pusha
mov
je
xchg
inc
mov
sarb
jge
scas
iret
cmp
outsl
pop
mov
lods
inc
jnp
cmp
imul
xor
adc
and
mov
push
inc
fdiv
pop
movsb
cmp
lret
inc
cmp
ljmp
enter
cmc
and
std
cmp
push
sti
inc
test
ret
push
mov
cld
sti
shlb
das
adc
mov
ret
xlat
lods
cmp
xchg
sub
subb
imul
repnz
enter
cmp
add
adc
dec
or
xchg
cwtl
repnz
inc
cmp
es
fwait
imul
or
imul
rclb
mov
jb
das
push
call
dec
dec
int3
ss
xchg
jne
shr
sub
adc
fs
push
sub
cmp
sahf
mov
mov
orl
xlat
mov
loope
jae
out
adc
pushf
xchg
inc
fs
popf
mov
imul
dec
jo
dec
das
push
mov
je
push
mov
pop
int
adc
push
pop
push
ret
add
lret
xchg
mov
inc
lret
cld
lret
popf
push
adc
ficompl
fnsave
in
xchg
test
out
add
fidivl
iret
ljmp
fldcw
sub
movsb
mov
mov
jge
sbb
cltd
mov
pop
push
mov
jno
shll
data16
adc
push
xchg
repnz
sbb
mov
push
std
cmpb
les
jmp
mov
add
push
xchg
daa
mov
cmp
mov
mov
pop
xchg
fadds
scas
mov
inc
gs
and
jmp
fnstcw
lret
and
pop
loop
loop
nop
mov
cmp
jne
sbb
mov
xchg
add
xchg
cmp
iret
rcll
daa
push
es
dec
pop
mov
data16
sbb
popf
add
or
xchg
dec
jge
cld
in
or
jb
andb
adc
mov
mov
insl
out
xchg
imul
pop
pop
out
ss
int3
cs
test
and
out
nopl
int3
cld
mov
adc
nop
test
out
imul
jle
cmc
in
xor
movsb
std
inc
das
int3
mov
xor
stos
push
ret
jne
inc
mov
jecxz
adc
jo
or
jg
cmp
dec
adc
xchg
out
jb
pop
push
sub
sbb
mov
dec
cmp
push
clc
adc
jne
and
fwait
movl
rcl
dec
hlt
sub
mov
rcll
ja
cltd
mov
push
cmp
sysret
sbb
xor
xor
pop
aad
mov
pop
clc
into
inc
pop
mov
mov
fcmovb
daa
xchg
lods
inc
inc
jns
test
inc
es
pop
jmp
jbe
xchg
or
lret
sub
sub
dec
in
mov
sbbl
jmp
popf
pop
lods
and
test
mov
hlt
into
loope
push
lock
sbb
mov
test
idivl
inc
ss
mov
loopne
leave
fstps
test
insb
or
ret
and
cli
xchg
out
hlt
repnz
or
ds
lret
push
mov
imul
mov
lahf
andl
push
in
rcl
dec
mov
add
cvtdq2ps
adc
rcr
sub
xchg
add
sti
xchg
lea
push
inc
dec
loopne
call
in
icebp
push
ret
xor
les
cmp
insl
push
adc
push
stc
xor
cli
loope
xor
leave
cmpsl
aam
in
pop
mov
xchg
inc
and
adc
fs
fdivs
and
xor
cmp
adc
xchg
sub
bnd
push
movsl
mov
in
xor
cmpl
icebp
stos
mov
fsubs
dec
rorb
or
test
rolb
ss
icebp
sub
loop
jnp
imul
mov
lret
add
dec
addb
xchg
mov
adc
xchg
and
dec
xchg
pop
gs
or
mov
xor
sbb
movsl
into
pop
mov
je
scas
pop
in
cmp
pop
push
fdivr
out
mov
sbb
outsb
stc
xchg
dec
call
and
xor
cwtl
bound
fstpt
lcall
mov
insl
sub
push
add
aad
ljmp
jo
outsl
int
lcall
dec
popa
aad
jbe
sbb
xchg
jge
sbb
xchg
bound
mov
addl
fimull
mov
iret
fucomi
xchg
test
fldl
mov
out
jmp
cmp
dec
jg
cmpsb
addr16
aam
dec
jge
testb
push
and
inc
add
push
daa
xlat
inc
push
add
or
and
and
mov
and
daa
inc
shl
adc
jnp
and
rcr
incl
lods
sbb
push
icebp
cmpsl
test
mov
int3
pop
adc
jge
clc
push
addl
push
popa
mov
mov
mov
mov
and
sub
mov
popa
mov
pop
aas
repz
rclb
adc
mov
shrl
dec
inc
cmp
sub
mov
roll
cmp
inc
xchg
es
int
pop
mov
add
sub
sbb
movsl
fsubs
lock
int
inc
sub
imul
jne
repnz
mov
pop
test
jb
jno
test
aaa
scas
xchg
xor
xchg
and
nop
mov
push
pop
mov
call
pop
cltd
xor
sbb
maxps
into
fwait
xor
sub
push
mov
out
es
mov
cmp
adc
xchg
mov
in
bound
and
or
outsl
inc
icebp
jge
inc
or
mov
ret
inc
push
ret
dec
sbb
clc
add
jb
pop
cmp
and
mov
cmpsb
jb
aam
mov
ss
push
xchg
push
repnz
fisttpll
xchg
pop
loop
loop
jmp
xor
or
cmp
out
into
das
cli
arpl
data16
and
push
aam
jnp
mov
pop
aaa
das
repnz
stc
rol
dec
xor
push
pop
sbb
push
mov
push
je
testb
jmp
out
push
xchg
sub
arpl
jbe
xorps
xchg
loopne
arpl
mov
or
xchg
insl
xchg
inc
sbb
ss
imul
cmpsb
jnp,pt
cmp
jmp
and
in
sbb
xor
dec
inc
lods
shrl
inc
into
in
mov
adc
in
mov
lcall
xchg
add
pop
sub
outsl
xor
mov
or
or
scas
incb
sti
cld
into
xor
data16
in
pop
and
insb
out
xchg
jp
xlat
mov
xor
xchg
outsb
push
dec
insl
scas
fldenv
ss
inc
bound
int
lods
add
scas
gs
popa
bound
cmpsb
gs
cs
push
std
or
incb
fldl
call
jecxz
out
ja
dec
lds
int
sahf
pop
in
fimuls
loop
stc
out
jbe
neg
sbb
fmul
into
out
adc
insb
jbe
inc
popa
or
mov
loope
xchg
fsubs
dec
add
jns
jnp
push
aaa
inc
xlat
ljmp
lock
lock
rclb
sahf
loopne
inc
scas
out
mov
sub
dec
sbb
outsb
lahf
mov
xor
aad
cmpsl
fisttpl
aas
pop
adcb
or
popa
call
cmp
in
test
es
xor
pop
push
icebp
sbb
dec
int3
or
fs
add
or
arpl
xor
out
rclb
inc
popf
fwait
xchg
lds
lret
mov
jno
lcall
mov
lret
icebp
mov
fs
jns
mov
popf
push
push
loope
in
inc
and
push
fstps
es
pop
adc
sahf
and
pop
mov
and
push
ss
mov
repnz
adc
add
push
lods
xchg
sub
push
movsb
das
fbstp
sub
adc
insl
jns
addl
sub
js
sahf
xchg
push
scas
dec
flds
arpl
fiaddl
push
out
inc
movsb
outsl
jmp
xor
sbb
mov
add
aaa
push
pop
out
and
and
or
sti
hlt
push
inc
push
call
mov
lea
fcompl
aam
cmp
fmul
ja
in
lock
and
cmc
and
cmp
xor
jno
jns
out
jbe
aaa
xchg
fucom
loope
jae
bound
inc
mov
dec
pusha
enter
xchg
mov
mov
out
xchg
inc
sbb
sahf
loop
sarb
jg
movsl
pop
and
out
stos
jns
loope
aaa
shlb
jno
cmovg
stos
sub
xor
dec
push
in
jge
push
push
icebp
push
loop
push
dec
data16
bsf
or
push
mov
sbb
out
les
fsqrt
out
daa
mov
add
mov
ja
out
jecxz
mov
xlat
in
mov
jl
inc
shlb
and
ja
lcall
ja
push
lea
push
push
pushf
dec
inc
sbb
pop
fldt
sbb
rclb
das
dec
sarl
shlb
xor
mov
adc
push
gs
fnstenv
mov
lcall
sub
out
mov
lcall
hlt
push
addr16
ja
and
xchg
shlb
movsl
ds
sahf
cmc
mov
lods
pop
popf
push
xchg
sbb
test
sub
cld
xchg
test
or
rcl
or
push
xchg
in
cmp
pop
icebp
ds
mov
lret
mov
push
push
push
push
call
push
call
xor
pop
add
ret
nop
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
add
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
imul
test
inc
add
imul
mov
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubrl
add
imul
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
