popf
mov
push
out
mov
int3
ss
cmp
or
adc
pushf
and
mov
incl
fwait
inc
add
inc
lods
scas
and
jb
call
dec
fninit
nop
mov
std
sahf
adc
neg
mov
push
gs
es
cmp
addb
loop
push
mov
push
push
in
outsb
mov
rcl
outsl
fst
jb
cwtl
add
or
test
fwait
out
xlat
sbb
mov
cmp
adc
movsl
daa
add
test
mov
test
les
sarb
lret
add
scas
dec
jnp
int
fmull
je
dec
lods
das
repz
and
test
lods
clc
push
and
jae
cmovo
adc
mov
mov
mov
or
inc
pop
ja
lods
and
add
sbb
or
punpckhdq
loope
insl
pop
cmp
and
jnp
inc
stc
mov
cmp
jb
dec
cltd
adc
inc
mov
mov
mov
inc
sahf
push
cmpl
rcr
xor
and
inc
ljmp
sbb
jbe
sti
inc
repnz
arpl
cmpsb
xchg
stos
aas
jmp
popf
and
mov
xor
into
rolb
decb
ja
lahf
lret
push
mov
push
pushf
fidivl
dec
fisubrs
and
add
out
xchg
lahf
cli
out
clc
popf
shl
pop
lods
dec
arpl
loop
fstpt
cmpsb
lock
pop
bound
insb
sub
mov
dec
mov
jo
gs
in
movsl
ficompl
shll
outsl
cwtl
pop
or
ds
adc
mov
imul
cmp
insl
mov
jo
dec
xor
pop
push
jmp
cwtl
pop
mov
sub
mov
sarb
roll
cwtl
push
or
or
xchg
mov
lock
jl
cld
and
cmp
or
dec
lock
decb
das
push
mov
push
dec
xchg
idivb
jne
adc
outsb
and
adc
pop
sarb
and
test
movsb
leave
das
dec
adc
push
mov
shrb
mov
push
loopne
push
pop
ja
jg
cmpl
test
inc
dec
adc
test
jl
cmp
mov
repnz
or
fildll
int
jge
cmp
jecxz
xlat
mov
bound
mov
addr16
sub
dec
stos
sti
or
sbb
arpl
fisubl
repz
in
cli
js
fwait
xchg
in
orb
xchg
out
adc
test
xchg
movsl
daa
sub
stos
push
mov
inc
dec
hlt
adc
rolb
pop
xchg
adc
lods
add
mov
sar
xor
push
mov
cmp
fdivl
call
hlt
sbb
ds
pop
mov
aam
mov
cld
add
inc
jo
jns
xchg
iret
pop
jae
or
ret
icebp
call
pop
enter
push
sub
inc
add
ret
pop
xor
dec
push
cmp
mov
insl
xor
adc
cmp
scas
dec
or
cmp
stos
mov
fstpt
sbb
movsb
xchg
mov
adc
mov
mov
push
dec
mov
pop
push
mov
pop
inc
add
mov
mov
lea
add
loope
cmpsl
cltd
ucomiss
lahf
ret
iret
mov
daa
shll
icebp
aad
push
inc
mov
cmp
push
mov
and
mov
pop
icebp
js
lcall
xor
or
jg
adc
lods
dec
push
push
cmc
mov
xor
cli
xchg
sub
lea
cld
sahf
pop
mov
in
mov
es
sbb
out
pop
lods
xlat
mov
dec
xchg
or
pop
mov
and
xchg
push
outsl
cmp
mov
fwait
adc
jo
test
sbb
lahf
jmp
cmp
cmp
xchg
jg
or
pop
push
sbb
in
js
mov
jns
push
fxch
cmp
sahf
fldcw
xor
out
pop
mov
flds
fcos
aad
dec
pusha
mov
lods
aaa
int3
push
add
shrl
push
jno
pusha
xchg
pmaddwd
xor
imul
mov
xor
leave
je
cs
cwtl
insl
dec
rclb
repz
insl
stc
pop
mov
push
and
gs
aad
fwait
sti
pusha
sub
mov
sahf
mov
sub
add
xchg
push
pop
mov
or
inc
jae
jecxz
jns
pop
jecxz
jnp
fs
sbb
aam
dec
dec
cmc
dec
scas
dec
jnp
lock
inc
xchg
cmc
ret
sbb
frstor
inc
or
fdivp
shlb
jl
ljmp
jns
aaa
sub
sub
cmp
das
jne
push
jno
sub
xor
insb
adc
movsb
xchg
fldenv
dec
insb
xor
je
out
mov
jmp
out
inc
fadds
out
push
scas
jae
pop
pop
loopne
ja
lahf
xor
sub
lods
sbb
test
add
mov
arpl
and
pop
or
rclb
add
inc
xor
jl
outsb
insb
bound
xlat
sbb
xchg
into
sub
mov
pop
adcb
les
cld
xor
xchg
icebp
dec
into
clc
ret
dec
xchg
ds
jg
loope
fcomp
xchg
leave
mov
xchg
in
push
shrl
lods
or
jg
mov
fadds
data16
cmp
faddp
dec
xor
movsb
push
pop
cmp
popa
inc
dec
fistps
adcb
lea
add
lahf
mov
inc
aad
ret
xchg
jae
enter
in
add
adc
push
fdivrs
push
nop
lea
mov
push
insb
lods
sub
and
and
mov
std
cli
sub
sub
cwtl
add
or
in
mov
sub
inc
cmp
push
fldl
addr16
or
andb
dec
orl
push
mov
xlat
gs
js
dec
lret
and
movl
jl
inc
iret
icebp
lods
out
jge
pop
lds
jae
dec
mov
or
imul
pop
cmc
pop
and
mov
fdivrl
sbb
in
aaa
sbb
adc
xchg
fadds
in
adc
pop
cmpsl
fldt
stc
lock
out
push
fdivrl
inc
popa
xor
mov
loop
in
adc
adcb
in
test
in
or
cmp
test
xchg
filds
faddl
leave
xchg
pop
mov
and
mov
mov
sbb
or
in
fbld
sarb
mov
clc
out
add
push
aam
mov
fwait
inc
mov
mov
mov
or
ljmp
and
cmp
data16
mov
push
rcr
in
and
mov
mov
fildll
mov
sub
xchg
mov
enter
jmp
addr16
jb
mov
iret
jl
mov
mov
or
xchg
sbbl
xchg
popf
clc
mov
jg
sub
fldenv
je
ja
fbld
mov
lock
xchg
in
mov
add
lcall
bound
out
jge
arpl
hlt
adc
cs
push
push
stc
push
test
stc
rol
mov
push
push
data16
cmc
add
imul
icebp
cmp
or
leave
popf
mov
add
jg
shr
dec
or
lods
int3
dec
dec
jp
pop
sbb
std
test
jmp
dec
xchg
fisubl
push
lret
scas
adc
ret
aaa
cmpsb
aas
arpl
out
out
mov
dec
jle
jae
xor
mov
jecxz
dec
cmp
push
bound
and
outsl
sbb
loope
js
inc
cmp
push
daa
lcall
repz
sbb
daa
test
inc
and
stos
mov
mov
lock
inc
or
push
stos
cmp
adc
in
push
gs
push
scas
hlt
pop
xor
mov
mov
es
mov
sub
iret
jmp
jg
lock
inc
pop
imul
xchg
insb
push
loope
sub
lods
pop
mov
nop
push
add
inc
into
ss
xor
mov
repnz
xchg
in
sub
fldl
dec
arpl
jmp
cli
jno
ret
je
lods
in
mov
shlb
mov
pop
pop
popf
mov
and
std
inc
jmp
xor
inc
test
lock
sub
sbb
movsb
mov
mov
push
subl
test
imul
jmp
out
pushf
fidivrl
shl
jne
pop
stos
add
ffree
mov
loope,pn
jp
fdivrl
inc
sahf
pop
cmpsb
add
std
push
mov
push
inc
mov
cmpsb
pushf
xor
mov
push
fimull
scas
and
insl
jl
insb
xchg
xchg
push
jbe
cltd
add
mov
rorl
and
cmp
jge
ffree
decb
mov
jg
or
push
jp
fwait
repnz
add
out
xchg
push
or
hlt
mov
mov
xchg
mov
jl
and
cmp
fisubl
insl
fcompl
ret
rolb
dec
mov
orb
popa
scas
jmp
xor
push
push
leave
xchg
and
in
aaa
iret
rcrl
cmp
pop
popa
ss
xor
xchg
push
aaa
dec
sbb
lcall
xor
sbb
int
pusha
test
pushf
xchg
jno
incl
out
scas
das
fs
jmp
and
jle
mov
and
dec
jecxz
gs
and
mov
cmp
push
clc
sub
fimull
push
jnp
jmp
fsubrs
lods
push
nop
xor
push
addr16
js
fimull
cmp
sub
jns
xchg
xor
or
mov
jb
insb
leave
pop
rclb
fsub
mov
xor
sub
cmpsl
fdivl
dec
fisttpll
fcomp
and
jb
js
std
lcall
addb
xor
or
into
fists
repz
cmp
add
push
add
pop
mov
push
push
aam
movsl
les
sti
xor
inc
xor
sub
pop
fsubrp
ds
stc
pop
pusha
ds
mov
xchg
adc
fistps
addl
jle
int
dec
or
add
test
or
jae
out
test
push
mov
ds
daa
testb
cmpsl
xchg
push
add
jp
sbb
xchg
bound
in
es
cmpsb
sbb
mov
xchg
aas
xchg
and
mov
push
popa
jle
adc
fcoms
mov
push
insb
mov
aam
inc
insb
shl
pop
pop
outsb
xor
xor
daa
andb
xchg
and
cltd
nop
fbstp
mov
ja
cli
mov
pop
loop
cmpsl
lods
sub
dec
in
inc
ror
stc
inc
adc
outsl
add
and
lock
daa
std
mov
das
shrb
dec
fwait
pop
inc
shrl
pop
stc
push
addr16
mov
aaa
add
ljmp
or
mov
xchg
int3
stos
dec
lock
test
mov
fidivrl
mov
xor
aaa
sub
in
pop
mov
pusha
faddl
cli
fstl
mov
inc
xlat
repnz
mov
aaa
push
lret
gs
lds
popa
cmpsl
fcoml
xlat
dec
call
xor
ret
sbb
pop
jnp
ret
inc
adc
inc
scas
or
xchg
icebp
ret
add
or
mov
mov
pusha
pop
inc
js
adc
jecxz
aas
jp
inc
cmp
jns
test
cld
dec
push
xor
and
iret
std
pop
ds
repz
mov
fisttpl
js
ja
sbb
jecxz
push
jl
xchg
pop
mov
pop
xchg
out
mov
sbb
movsb
fmul
and
loop
add
push
fldl
sub
aas
ficompl
sbb
out
and
insb
lock
lock
scas
loopne
sbb
lret
mov
push
jp
testl
out
dec
add
xor
cld
int3
stos
mov
das
enter
scas
in
mov
aas
std
adc
movsl
mov
dec
jbe
call
popa
mov
or
push
notl
roll
cmp
fists
add
mov
adc
ja
jo
icebp
aas
cmp
dec
cmp
mov
sbb
gs
movsl
push
mov
je
dec
sub
push
inc
rcrb
sahf
push
adc
pop
out
aam
divb
mov
lret
sbb
xor
in
xlat
or
adcb
jo
iret
pushf
add
mov
add
rcrl
ljmp
std
and
enter
mov
pusha
std
sbb
inc
movsb
jge
lret
jmp
push
ret
mov
push
cld
or
fsubs
jmp
cmpsl
mov
push
subl
push
fldcw
sbb
ss
pop
in
aad
rclb
les
xor
or
es
jnp
or
xchg
xor
mov
arpl
pop
xchg
add
outsl
push
test
cs
lret
in
roll
mov
icebp
popa
repz
xchg
pusha
mov
scas
sbb
xchg
sub
fmull
cmp
sub
sub
xchg
cltd
lds
mov
filds
lds
xor
ja
jo
lods
aaa
arpl
mov
rcll
pop
mov
xchg
add
pop
pop
xchg
lods
in
pop
push
pushf
mov
in
shll
clc
cs
xor
inc
test
jnp
pop
jns
out
fldpi
test
pop
movsb
add
jne
xor
repz
stos
add
push
pop
dec
mov
fs
daa
sbb
push
pop
outsl
scas
and
xchg
int
lods
clc
sbb
jp
sti
dec
or
rcrl
shll
cli
movsb
jno
cs
test
dec
mov
lea
xchg
mov
jb
xchg
out
inc
sub
xlat
in
and
addb
aad
stos
das
loopne
jbe
mov
sub
gs
pop
lcall
or
out
pop
pushl
mov
bndcu
in
sbb
sti
xchg
dec
xor
mov
popf
rcr
mov
ss
rorl
mov
mov
cs
pop
adc
push
cmp
leave
cmpsl
mov
dec
push
jmp
mov
jecxz
xor
mov
out
mov
xchg
in
inc
jo
loopne
fs
cmp
out
lret
mov
inc
in
in
push
adc
fadds
and
lock
xchg
mov
push
inc
or
jbe
in
add
pop
idivb
out
in
or
pop
loopne
js
call
mov
testl
sahf
popf
pop
jae
push
in
inc
lods
test
cwtl
out
mov
push
ret
pop
stc
inc
sub
push
pop
enter
xor
xlat
daa
sbb
pop
jb
sub
daa
test
scas
mov
inc
adcl
lds
and
xor
cmp
test
mull
pop
pop
and
pop
xchg
std
push
cmp
cmp
fidivrl
jle
sub
or
mov
pop
sub
data16
decl
popa
add
dec
cltd
fcoms
sub
aad
pop
out
sub
int3
push
and
arpl
sbb
push
cmpsb
in
xchg
cld
push
mov
popa
jno
jle
int
shlb
loope
inc
jo
ja
push
ret
bound
xchg
shrb
arpl
aaa
ja
push
adc
and
int
mov
add
loope
popw
cmp
inc
inc
pop
mov
inc
imul
jbe
imul
push
aas
aam
subl
repz
test
add
xchg
inc
xor
jno
or
int
rcrb
int3
dec
stc
cmc
jp
jno
jecxz
out
pop
or
fs
pop
xchg
movsl
cli
mov
sbb
or
mov
mov
fstpt
dec
push
or
mov
aam
adc
insb
xchg
ja
outsb
add
mov
xchg
mov
lods
js
mov
aad
jns
cmpsb
cmp
repz
sbb
sahf
mov
icebp
sbb
xchg
sbb
icebp
xchg
shrl
mov
lret
xor
outsl
add
mov
push
sbb
stc
nop
fwait
sub
lret
stos
mov
inc
lea
in
push
out
addb
mov
mov
xchg
je
xorb
ret
adcb
sub
shll
xor
and
xchg
jg
bound
dec
lds
mov
cld
xchg
add
aas
in
mov
stos
in
push
push
fld
data16
fdivl
jp
mov
sbb
dec
loopne
mov
add
bound
cld
mov
dec
gs
in
adc
insb
jnp,pn
sbb
loope
movsb
or
add
in
push
je
aam
rorl
sbb
adc
or
cwtl
mov
test
sub
and
shll
fsubs
test
aas
lcall
fsubrp
jne
dec
int3
out
jnp
dec
je
xorb
xor
push
pop
push
mov
add
jbe
icebp
data16
sub
pop
ja
call
aas
pop
jg
pop
cwtl
popa
mov
and
imul
in
lods
lret
icebp
mov
or
cli
sti
insb
aam
add
fwait
movsb
jae
pusha
and
les
sub
xor
add
scas
xor
stos
add
pop
scas
add
rorb
pop
sub
repnz
inc
stos
gs
dec
stos
fldl
lods
shll
adc
pusha
jmp
xchg
loop
rorb
pop
adc
push
ret
push
cmpsb
cmp
scas
rorl
mov
mov
xchg
aad
ljmp
mov
and
sub
mov
sub
bound
pop
outsb
xor
lahf
fwait
pushf
fidivrl
lock
mov
pop
add
sbb
bnd
mov
dec
and
enter
pop
sbb
outsl
das
imul
sub
jb
sub
jmp
lcall
xchg
pop
dec
test
sbb
mov
dec
out
sbb
jae
inc
adc
cmp
and
xchg
mov
movl
shll
aas
insb
test
and
fiadds
jne
dec
cmpl
fwait
aas
inc
in
jnp
or
adc
push
mov
ud2
lret
lods
es
mov
cmp
mov
lahf
mov
insl
in
cli
pushf
mov
jmp
jp
nop
or
mov
aad
adc
add
mov
push
in
aaa
dec
dec
in
insl
scas
jo
js,pn
shlb
shrb
xchg
inc
cli
mov
mov
rclb
mov
push
inc
mov
scas
push
push
out
fldln2
outsb
mov
mov
cmpsb
xchg
xor
or
jne
pop
notb
cmp
bound
repnz
fsubrl
xchg
fldl
lahf
pop
aaa
dec
inc
fistpll
push
insb
pop
push
loope
loop
add
bound
es
xchg
pop
shll
imul
sbb
shlb
xor
mov
or
lcall
mov
enter
push
fdivrs
or
mov
and
out
jmp
push
xor
outsb
pushf
int
cmpsb
adc
dec
push
mov
daa
lods
scas
push
iret
add
or
ficoml
mov
ret
jp
leave
fxch
ret
xchg
es
imul
in
nop
mov
cs
addr16
fdivs
leave
xor
pop
mov
xlat
cmp
sub
xor
mov
clc
jmp
out
mov
xchg
add
mov
loope
jge
sti
push
pop
lods
add
lret
and
or
mov
xor
out
mov
dec
test
es
sub
add
sub
hlt
clc
sarb
jns
sahf
sbb
lcall
mov
scas
scas
xchg
dec
lcall
xchg
sbb
cmp
pop
jg
cmpsl
rorb
rorl
fs
pop
jmp
lods
fnstcw
push
movsb
xor
pop
or
sub
ret
sub
mov
or
xchg
test
sub
imull
jae
sub
sti
incb
xor
adc
dec
mov
pop
mov
scas
insb
pop
lret
sbb
fisubl
jne
mov
repz
aam
daa
fld
fcompl
call
sti
adcl
aaa
cli
lock
sub
shlb
push
and
std
test
add
inc
dec
and
sub
cmpsb
mov
sarb
push
or
mov
mov
js
push
fcompl
dec
adc
lcall
inc
imul
add
jmp
shlb
mov
mov
xchg
dec
pop
pop
aam
mov
sbb
add
mov
sub
dec
pop
lcall
ret
jle
dec
jg
and
jle
xor
scas
xor
push
xor
daa
pop
pushf
cmpsl
inc
push
sbb
lcall
jb
mov
xchg
and
add
fsubrl
dec
sub
jg
mov
sbb
insb
or
cmpsb
mov
adc
jns
int
or
dec
and
pop
mov
jae
aad
push
cmp
test
ja
ljmp
push
inc
ljmp
mov
int3
bound
fisubrs
leave
xchg
add
jo
fidivs
out
loop
xchg
dec
repz
dec
imul
sbb
jecxz
fisubl
scas
xchg
sbb
mov
mov
inc
clc
jae
iret
mov
push
jae
loope
dec
stos
insb
movsb
sub
mov
or
add
cmpsb
lds
jns
jbe
inc
icebp
lret
cmp
sbb
enter
ja
mov
fwait
jns
adc
add
mov
jae
movsl
shrl
call
idivb
mov
in
out
decb
pop
in
jnp
pop
mov
cld
lock
fcomi
repz
jo
cmp
fisttpll
in
andl
add
push
mov
aad
push
leave
push
sbb
out
in
jge
dec
or
cmp
sub
xor
pop
cmp
shrl
leave
mov
mov
adc
stos
lea
ja
mov
xchg
and
pop
xlat
aam
shll
cmc
xchg
outsl
mov
cwtl
xchg
cltd
popf
push
jle
cmpl
outsl
sub
xchg
xchg
lcall
mov
sti
mov
insb
inc
rolb
roll
or
fsubl
test
push
daa
inc
sub
out
inc
sbb
mov
push
loop
cmp
xchg
jno
mov
test
ja
pop
jg
mov
out
jns
loope
fadd
fsubr
rcl
and
mov
push
lea
mov
inc
dec
dec
xor
mov
mov
mov
leave
dec
aad
addl
int3
and
repz
bound
sbb
jbe
jne
roll
pop
fistl
or
push
mov
add
notl
test
xchg
imul
test
xchg
insb
push
out
jmp
sahf
lock
lods
bound
inc
jmp
push
dec
fdivrs
cmp
dec
mov
adc
out
adc
repnz
sub
xor
jo
out
sbb
mov
repz
jns
mov
pusha
loope
fidivs
hlt
das
xchg
xor
pusha
xor
jns
xor
add
jmp
lds
cwtl
fcomp
addb
cmpb
jecxz
cmp
pop
and
ret
sahf
mov
fcomps
lock
jl
or
sbb
xchg
repz
stos
pop
insl
mov
ss
outsb
enter
inc
jb
js
push
insb
sahf
inc
push
dec
mov
sbb
movsb
or
stos
out
xor
pop
fs
fcom
lds
dec
dec
mov
arpl
sub
lds
sub
xchg
add
add
mov
pop
insl
test
test
sub
mov
rclb
xorl
mov
int3
sub
mov
dec
js
jae
mov
pop
push
ljmp
sub
sub
xor
inc
push
sub
stos
insl
enter
xchg
insl
cmp
cmp
das
cld
mov
jecxz
mov
test
sub
inc
xchg
subl
mov
dec
mov
xor
xchg
out
adc
cmp
ljmp
sub
insb
sbb
out
dec
mov
mov
push
jmp
and
mov
dec
mov
mov
pop
into
and
sub
adc
in
jecxz
es
add
fisttpll
mov
add
xchg
inc
lds
xchg
sub
outsb
mov
scas
push
push
fmull
adc
lcall
pop
inc
add
push
push
int3
add
not
test
daa
jnp
aaa
mov
push
inc
adc
in
sbb
test
in
popf
sub
dec
adc
dec
xor
sub
inc
leave
loopew
cltd
ret
pop
mov
xor
orl
and
or
rcrb
mov
mov
mov
jecxz
or
fcomp
push
pop
mov
dec
or
jle
nop
out
or
loop
inc
bound
jae
sub
into
fnsave
hlt
add
movsl
dec
shl
fs
dec
cmp
inc
cld
imul
xor
push
adc
sub
push
dec
xor
icebp
mov
dec
jge
adc
add
push
jb
in
mov
iret
sub
fidivl
in
adc
xor
popf
fwait
and
dec
ljmp
add
mov
lods
outsl
mov
pop
xlat
inc
and
ficompl
xchg
add
adc
in
mov
je
les
imul
outsl
mov
jno
outsb
push
pop
jae
pop
lret
dec
jg
xchg
inc
call
rcrb
popa
movb
ljmp
lds
push
mov
popa
sbb
cmp
fucomip
pusha
es
ja
js
or
cmpsl
push
rcl
pop
insb
jnp
xor
add
mov
lret
or
push
into
mov
dec
cmp
inc
outsl
sbb
scas
pusha
rcrl
add
pop
add
sahf
pop
xchg
cmp
xor
mov
xchg
aas
popa
out
insb
faddp
pop
cmpsl
lcall
fsubs
and
xor
insb
jae
add
sub
hlt
or
loope
out
pop
sbb
fiaddl
fstpl
or
xchg
cmp
dec
fimuls
dec
divl
lret
lods
loop
ss
arpl
xchg
push
and
cmp
subl
outsl
jmp
aas
lea
into
insb
lahf
scas
or
dec
xchg
xchg
pop
in
insb
jle
xchg
repz
pop
cmp
or
cs
sub
mov
iret
mov
ret
xor
dec
sub
clc
push
push
je
jne
push
stos
shl
shlb
jecxz
and
pusha
xchg
cvtps2pd
sbb
mov
or
and
xchg
enter
daa
and
das
test
push
xor
sbb
jecxz
ret
insl
or
cwtl
cli
dec
test
cld
arpl
sbb
inc
jb
add
pushf
int
jge
in
and
adc
mov
js
fldenv
imul
dec
pop
sbb
adc
mov
add
sub
lods
lds
push
cmp
jecxz
push
call
sub
xorl
lds
inc
dec
mov
std
arpl
mov
repnz
dec
loopne
sbb
iret
jb
mov
or
shrb
jecxz
mov
or
pop
testb
or
hlt
das
outsb
shr
add
inc
pop
pinsrw
dec
cmp
xchg
fwait
mov
aaa
dec
cli
or
insl
cmp
bound
insb
je
imul
fcoml
mov
and
sbb
ret
pushl
leave
call
pop
cmp
jb
push
sbb
mov
sbbl
into
dec
mov
and
push
add
daa
push
lods
jmp
push
mov
rcll
inc
iret
and
sbb
in
leave
push
pop
stos
mov
jne
aam
pop
dec
mov
mov
pop
sub
pop
push
or
sub
jbe
rdpmc
pop
andl
mov
sbb
in
inc
mov
hlt
icebp
jp
cltd
add
and
leave
jbe
pop
stos
dec
lock
or
in
popa
cs
jb
dec
bound
xchg
lods
jle
fs
jb
lcall
sbbl
dec
std
dec
jmp
mov
pop
stos
jae
clc
pop
pushf
pusha
push
xchg
enter
mov
add
push
mov
leave
mov
scas
adc
int3
push
xchg
xor
pop
xchg
pushf
adc
sbb
jecxz
mov
jp
test
and
xchg
stos
mov
mov
fdivrs
pop
pop
or
inc
push
xchg
mov
lods
sbb
push
adcl
insb
adcb
test
loop
cmp
adc
mov
test
push
push
dec
xor
pop
call
rcrb
or
std
aaa
adc
movsb
lea
fldenv
and
int3
fistpll
pop
jne
arpl
mov
jmp
rcll
pop
arpl
icebp
pop
movsl
inc
xor
popa
or
cmp
cs
insb
inc
or
hlt
idivl
cwtl
int3
jle
rorb
ret
insl
jmp
add
fldenv
pop
ja
repnz
jns
aam
ja
popf
movsb
scas
dec
or
les
and
scas
cmp
leave
push
mov
enter
pop
adc
mov
push
cltd
push
aaa
imul
or
sub
mov
in
pop
push
sbb
xor
popa
jp
cmp
jle
or
mov
andb
and
and
jle
push
mov
rorb
push
mov
jl
outsb
dec
dec
insb
sub
or
adc
mov
stos
dec
lcall
pop
jge
sub
mov
jb
dec
clc
xchg
sub
sahf
xchg
xchg
sub
scas
mull
xor
jl
dec
outsb
mov
nop
mov
inc
out
popf
pushl
jbe,pn
gs
inc
daa
lods
cltd
cmpxchg
mov
mov
adc
dec
insl
fs
incb
adc
in
es
mov
xor
jne
stc
pushf
push
xor
enter
add
repnz
mov
pushf
or
sub
int3
mov
mov
adc
lret
cmp
lods
loope
out
xchg
sub
or
popf
push
sub
jge
xchg
inc
push
fstps
cs
pusha
and
pop
int3
mov
into
call
je
mov
mov
adc
cmc
xor
mov
test
mov
sbb
jge
cs
dec
cmp
mov
popf
pop
pop
jge
popf
arpl
pop
pop
call
bound
adc
iret
addr16
clc
subb
dec
ret
insl
push
ret
mov
and
inc
dec
adc
pop
jp
fldenv
xchg
inc
sub
and
js
fcomi
and
xchg
mov
add
inc
jns
xlat
cmpsb
jnp
in
dec
loope
push
lret
cmp
cmpsl
scas
lds
push
xchg
pop
pop
mov
mov
inc
mov
push
dec
xchg
push
insl
scas
and
adc
mov
add
repnz
stos
dec
push
mov
adc
ljmp
pushf
lea
mov
jnp
fsubrl
xchg
aam
jle
xor
or
ret
adc
push
jle
inc
jbe
jg
add
xor
mov
fcmove
insb
and
dec
mov
in
mov
dec
addl
xchg
popf
je
rorb
test
sub
jmp
movsl
jle
mulb
dec
adc
cli
call
rclb
mov
sbb
adc
and
dec
pusha
or
lcall
mov
aaa
dec
lock
lods
mov
mov
mov
cmp
sub
aad
add
arpl
jmp
scas
sti
adc
popf
popf
jl
dec
adc
xorb
nop
jl
xchg
mov
mov
push
mov
out
sar
lret
push
jne
les
shl
and
mov
sub
sub
push
loopne
sbb
mov
mov
jg
jbe
lds
test
adc
repz
iret
jmp
mov
mov
adc
add
cmp
mov
or
rcr
lret
inc
add
add
jnp
xchg
fbld
faddl
aas
mov
dec
lret
mov
pop
inc
jmp
push
gs
ds
jae
arpl
push
cld
dec
imul
pop
push
xchg
popf
aas
aas
sub
fiadds
repnz
int
repz
outsl
fistpl
sub
adc
out
pop
dec
dec
sub
mov
pusha
inc
stos
shll
testl
js
sub
pop
rcll
mov
pop
sub
ffree
hlt
fsubrl
outsb
out
in
data16
dec
outsl
sbb
or
sahf
in
mov
jmp
add
sub
pop
shrb
push
mov
nop
stc
int3
push
mov
enter
aaa
enter
scas
cli
push
pop
xlat
pop
adcl
stc
lret
jne
cmp
shlb
mov
mov
dec
jecxz
std
repnz
dec
ret
xchg
jl
adc
popa
jns
add
jg
mov
pop
inc
js
int3
in
mov
imul
add
out
fbstp
in
jnp
xor
xor
loope
and
xchg
dec
pop
das
xchg
cmovs
fldt
dec
rcrl
mov
jo
push
fstl
pop
push
inc
hlt
add
jo
dec
dec
out
sbb
add
pushf
inc
pop
leave
mov
mov
xorb
aad
mov
jecxz
sub
repz
sarl
inc
jne
ret
fcmovbe
aaa
ret
movsl
enter
popa
xchg
int3
fbld
add
fstpt
mov
jnp
shll
sahf
or
mov
adc
loope
add
ds
cs
es
ds
cmpsb
mov
lods
shrl
push
xor
dec
dec
cmp
add
mov
ret
and
mov
fnstcw
lods
cpuid
mov
mov
push
push
pushf
mov
pop
mov
fists
mov
das
test
push
push
mov
rclb
jle
inc
xor
mov
mov
ljmp
add
scas
lret
add
in
mov
rcll
mov
mov
sub
or
xor
push
das
jo
adcb
pop
icebp
out
sub
pushf
inc
int3
add
shrb
cs
push
cmpsb
clc
dec
mov
mov
cli
mov
xchg
fs
dec
into
and
iret
inc
add
adc
outsb
jns
dec
mov
enter
inc
mov
cli
enter
pop
stos
and
jno
inc
inc
jg
jno
imul
push
lods
pop
in
fisubs
inc
xchg
xchg
push
mov
loopne
add
lcall
fcompl
dec
fisubl
lret
or
mov
push
test
sub
pop
mov
jge
pop
pusha
enter
xchg
pop
mov
jge
push
pop
add
dec
out
mov
es
les
out
pop
sub
out
cmp
dec
pop
xchg
pop
mov
fiaddl
jecxz
shll
rcrl
imulb
je
push
aam
out
or
add
xchg
cwtl
add
dec
jo
insb
pop
rclb
decl
xor
popf
xchg
jne
pop
inc
sbb
cmp
push
add
push
stos
xchg
lret
movsl
sbb
or
xchg
dec
jge
in
adcl
cmp
sub
cltd
addr16
cli
adc
push
imulb
pop
add
sbb
dec
in
mov
cmp
loopne
mov
cwtl
lret
cmp
jge
cld
ja
movsl
inc
xor
xchg
sub
stc
mov
inc
inc
cmpsb
cmp
jmp
je
mov
into
lea
add
stc
xchg
xor
and
mov
xor
pop
mov
mov
adc
mov
mov
sbb
adc
and
ds
cmpsb
bound
mov
xlat
mov
leave
xor
popa
add
add
inc
out
mov
andl
add
es
sbb
cmpsl
cmp
adc
dec
jne
sub
mov
or
addr16
or
cmp
mov
int3
std
lret
pushf
sbb
fcomi
cmp
or
add
rorb
js
ds
test
adc
mov
xchg
add
jle
mov
scas
jns
aas
mov
repnz
into
push
cmp
mov
sti
cmp
jg
dec
jecxz
decb
xchg
sbb
fstpl
dec
and
fs
adc
shll
lret
pop
lret
add
divb
and
loope
cltd
cwtl
and
mov
cbtw
cwtl
xchg
xor
jnp
mov
mov
pop
inc
inc
inc
push
or
sub
in
sub
scas
mov
es
mov
int
pop
inc
jmp
xchg
movsb
mov
xor
icebp
rclb
lods
xchg
sbb
add
repz
adc
cld
ja
lods
sbb
in
mov
xchg
jecxz
icebp
fsubs
mov
clc
fs
cmp
sbb
scas
add
push
cmpsl
fwait
push
xor
mov
inc
scas
and
adc
add
cs
adc
dec
cmp
push
mov
scas
xlat
rcll
mov
cs
sbb
mov
cmpsb
lea
pop
rorb
cltd
imul
out
and
jo
sarb
lea
fildl
xlat
fnstsw
stos
or
je
pop
and
lret
aas
cmpsl
or
inc
mov
pop
add
dec
xor
inc
dec
insl
xor
mov
inc
movsb
pop
popa
test
fs
mov
jmp
cmp
sahf
jecxz
enter
add
gs
out
push
dec
stc
cmp
and
aas
adc
mov
outsl
insb
and
cmpsl
in
xchg
fwait
out
fwait
mov
lods
shl
mov
cld
push
push
mov
dec
dec
xchg
jne
or
sbb
mov
js
pushf
dec
addb
insl
lock
movsb
xor
mov
mov
aaa
dec
lret
ja
imul
adc
mov
sbb
add
pop
inc
addl
pusha
inc
scas
push
fistps
aaa
std
push
adc
stos
sub
or
mov
xchg
or
cmp
pop
jecxz
pop
loopne
jp
lret
adc
mov
mov
jnp
in
fisttpl
lret
aad
dec
andl
mov
jb
loop
ret
lock
pop
orl
fs
stos
fdivl
dec
bound
jge
pop
clc
xor
inc
and
aam
cmp
push
cmp
ja
ds
aad
sahf
inc
mov
push
dec
push
cmp
stc
leave
cmp
pushf
push
fbld
pop
mov
gs
sub
dec
pushf
adc
int
sbb
into
jo
sbb
pusha
jb
cmp
inc
in
test
data16
sub
mov
sub
fcmovu
mov
push
andb
int
repnz
cmc
nop
inc
mov
lret
sub
fwait
add
mov
push
aas
cmpsl
aas
cmp
rorb
out
mov
les
add
jns
cmp
or
push
cmp
popf
scas
jo
int
ret
daa
dec
gs
dec
adc
jp
mov
sbb
mov
test
es
fidivrl
dec
out
pop
mov
mov
push
popf
call
sub
icebp
inc
imul
cmovns
mov
or
jb
aad
shrb
ss
pop
aaa
pop
data16
mov
fsubrl
sub
mov
test
jb
lea
adc
mov
jl
imul
out
pop
clc
xchg
or
add
repnz
add
sbb
xor
test
sti
hlt
gs
shrb
int3
inc
dec
stos
jo
mov
ret
lea
sub
or
outsb
xchg
pop
xchg
ret
push
jp
mov
jle
sub
clc
sub
dec
xchg
pop
out
rclb
aas
jno
push
jecxz
jg
sub
mov
das
dec
mov
hlt
and
pop
add
pop
xorb
mov
push
clc
repnz
pop
pop
lcall
sbb
adc
ret
mov
out
fdivrl
xchg
mov
pop
iret
test
mov
aam
dec
cmpsb
fimuls
and
into
cmpsl
cmp
cli
jl
jl
arpl
jmp
pushf
sub
pop
adc
clc
out
push
mov
jl
mov
mov
add
sub
loopne
notl
mov
out
lcall
inc
or
bnd
push
xor
mov
mov
mov
insl
mov
stc
repz
mov
pop
mov
popf
jne
jbe
mov
shrb
xchg
xor
add
outsl
fsubl
loop
inc
sti
xorb
cld
loopne
adc
sbb
inc
mov
add
pop
cmp
orl
lock
repnz
jl
pushf
gs
lret
addr16
lahf
outsb
in
adc
adc
jecxz
add
cmpsl
sbb
inc
sbb
mov
pop
ja
shrb
cld
fs
aad
lds
mov
and
addr16
push
push
testl
or
mul
mov
jp
sbb
and
push
std
push
mov
pop
das
xchg
xchg
lods
or
sbb
push
add
xor
xchg
or
jecxz
inc
out
fnstenv
lea
lds
inc
jg
ds
js
or
sbb
mov
daa
and
adc
sbb
mov
push
loope
test
dec
inc
aam
cmp
dec
cwtl
out
mov
fcmovnb
rol
dec
pop
mov
inc
cltd
mov
les
add
lea
cmp
or
mov
mov
gs
loope
mov
in
fidivrs
jae
cmp
xor
push
push
mov
daa
pop
in
push
pop
mov
inc
mov
bound
dec
add
add
xor
mov
sub
jae
dec
fdivrl
shl
xchg
iret
push
sub
ficoml
imul
insb
rcll
fmulp
mov
inc
movsl
nop
lret
push
pop
aad
mov
fwait
repnz
mov
addb
jmp
xchg
adc
loop
lods
and
pop
push
mov
mov
out
inc
loope
dec
add
mov
fisubrl
arpl
test
ret
fsub
mov
adc
data16
das
dec
mov
arpl
out
pop
shl
and
dec
jle
insb
push
xor
adc
sbb
fisttps
push
sub
subl
sub
fmuls
mov
xchg
je
xor
cwtl
pmulhuw
stos
pushf
sbb
cmp
xor
enter
sti
push
cmp
mov
inc
sbb
mov
jp
bnd
jmp
shll
jae
mov
mov
lahf
fldcw
frstor
pusha
and
pop
movsb
pop
pop
mov
rclb
ja
outsl
cmc
dec
xor
adc
mul
clc
sarb
xchg
popa
hlt
ds
add
pushf
mov
lret
xchg
jnp
insl
out
push
aas
and
je
sbb
shrb
mov
jp
xor
lods
rcrl
or
data16
je
ljmp
nop
push
cli
jmp
push
stos
add
inc
stc
test
cwtl
jge
inc
dec
pushf
and
mov
loopne
and
movb
mov
sti
dec
cmp
hlt
dec
stos
dec
in
inc
loop
fsubl
je
push
push
jnp
fmuls
daa
out
adc
cli
push
icebp
cltd
aaa
jns
aad
icebp
rcll
jbe
mov
shl
loope
fstl
sbb
in
int
xchg
lods
and
inc
pushf
pop
mov
mov
cmc
lahf
enter
into
scas
popf
and
add
leave
mov
subl
jmp
test
into
shl
cmp
push
cs
xchg
imul
out
stos
push
cmp
stos
push
pop
cli
js
flds
and
rcl
push
mov
add
ljmp
loope
lock
inc
fisttps
sbb
fsubr
sub
jno
movsl
mov
into
mov
cwtl
add
mov
xchg
cmc
mov
shll
test
stos
ss
inc
out
mov
xor
aaa
sub
cmpsl
inc
dec
stc
push
add
inc
inc
enter
pop
repnz
popa
mov
scas
into
bound
fwait
es
pushf
jb
loope
push
xorb
xor
or
leave
push
dec
jo
ficoms
mov
pop
andl
and
add
mov
add
movsl
iret
lock
push
add
sub
push
jo
popf
pushf
inc
dec
mov
cmp
clts
pop
jne
loopne
cmp
xchg
in
gs
pop
pop
inc
loopne
and
or
mov
sbb
or
lar
out
ss
cld
and
gs
mov
push
push
push
enter
push
mov
push
mov
and
out
xchg
roll
pop
inc
sub
out
mov
and
fwait
adc
ret
mov
sub
cmp
fnsave
sub
pop
jnp
in
xchg
icebp
adc
push
gs
dec
jne
jg
leave
sub
jo
jg
dec
push
xchg
dec
add
adc
push
and
pop
mov
out
add
jae
lahf
stc
repnz
push
stos
dec
jl
add
divl
lods
and
in
lret
stos
fnstenv
sarb
sbb
add
sbb
aam
adc
jg
pop
cmpsl
pop
xchg
int
bound
cs
xchg
mov
sub
mov
sti
ret
xor
enter
inc
sbb
mov
fcmovnb
lock
xchg
xor
xchg
push
lods
jb
notl
mov
push
mov
test
cmp
je
push
out
push
jns
sbb
mov
add
or
stos
xchg
sub
shr
jmp
rol
cld
sbb
das
pop
pushf
push
jae
adc
sti
test
popa
push
or
cli
movsl
loop
addr16
xchg
cwtl
sbb
mov
inc
sarl
and
xor
std
daa
cwtl
icebp
or
popa
cltd
jmp
mov
in
jne
out
mov
data16
shll
cmp
aaa
dec
ror
xor
vpsubd
mov
mov
sub
and
and
dec
fdivs
ret
mov
sbb
cmp
xor
shl
dec
mov
jmp
push
shrl
cli
ret
fwait
dec
and
jecxz
mov
mov
sahf
int
cmpsl
mov
sub
insb
mov
mov
and
ret
cli
push
aas
jne
shrl
xchg
aaa
ds
movb
fcomps
inc
incb
jmp
pushf
imul
adc
add
dec
clc
nop
mov
nop
outsl
or
xchg
gs
xchg
adc
aas
mov
je
mov
mov
or
sub
lahf
movsl
or
jns
imulb
cmp
push
call
or
add
mov
ret
mulb
mov
into
inc
and
mov
dec
pop
sbb
or
adcl
bound
les
xor
out
sub
adcb
test
cmp
test
pop
subb
sub
fs
sub
pushf
lret
pxor
lea
sbb
cli
fiaddl
cmpsb
fisubrl
xor
mov
push
push
cli
push
jnp
adc
lods
loop
cmpsb
push
pop
subb
mov
xor
mov
mov
jns
and
test
adc
not
inc
xor
insl
cmpsb
out
rcrl
mov
push
lret
mulb
push
enter
jo
push
stc
dec
inc
in
jmp
in
rorb
ja
sbb
dec
test
fwait
iret
rolb
mov
push
pop
lods
push
push
test
xchg
mov
jmp
xchg
test
jne
xlat
adc
les
inc
popf
xor
add
cmp
jle
ss
jns
aas
add
or
inc
out
dec
daa
cmp
xchg
mov
jmp
xchg
ret
clc
mov
lds
adcl
call
mov
sbbb
hlt
ror
push
jae
lea
push
cs
inc
test
pop
sub
inc
xlat
aam
adc
push
pusha
adc
dec
insl
cmp
popa
loop
inc
sub
aam
pop
aam
inc
ja
pushf
xor
pop
mov
push
cld
enter
xor
fisubrs
dec
mov
mov
pop
jns
push
imul
push
xchg
push
subb
decb
inc
mov
mov
adc
out
out
lahf
mov
movsb
ds
outsb
call
mov
leave
mov
sub
daa
mov
pop
adc
imul
sbbl
cmp
int
ds
or
mov
adc
sahf
mov
mov
sti
scas
pop
adc
jbe
repz
mov
sub
jmp
sbb
test
sbb
jns
jp
adc
xchg
loop
adc
push
mov
daa
cmp
mov
divb
cmc
ffreep
cmp
les
mov
pusha
repnz
mov
rcr
mov
or
and
pop
adc
dec
jle
push
mov
shll
mov
loopne
adc
mov
xor
jmp
mov
cmp
imul
jae
lds
pop
cmpsb
xchg
adc
incl
pop
sbb
lret
or
add
mov
arpl
and
cmp
pop
mov
fwait
jecxz
mov
pop
lret
mov
or
lret
and
push
sar
out
in
shll
je
imull
test
mov
je
pop
mov
mov
mov
push
movsb
test
aas
cld
xchg
push
popf
jb
adc
pop
mov
movsl
jge
pop
sbb
aam
cmp
xchg
inc
scas
mov
xchg
mov
call
mov
push
neg
es
clc
dec
or
das
pop
jl
push
js
lods
inc
push
enter
in
inc
jnp
lret
ljmp
dec
cltd
cmc
fistl
movsb
jbe
in
mov
xchg
das
sub
mov
sbb
mov
dec
dec
out
jae
scas
fldlg2
push
outsl
addr16
adc
lods
or
imul
adc
sub
dec
mov
jae
mov
insb
push
sbb
int
movsb
cli
je
in
jno
sub
addr16
mov
or
or
push
orl
push
rcrl
ret
fidivl
insb
popf
push
loop
mov
sbb
jmp
insl
sbb
repz
sbb
mov
imul
cmpb
loope
xchg
sub
adc
jno
hlt
loopne
loopne
outsb
add
or
insl
lahf
in
push
jge
adc
aam
push
inc
push
push
ret
arpl
cmp
sub
data16
and
iret
pop
test
cmp
mov
sub
xlat
lock
iret
dec
adc
dec
sti
dec
and
aaa
stos
fistl
mov
rorb
enter
mov
dec
xchg
rcll
jg
dec
push
push
into
mov
pop
adc
imul
or
out
clc
fsubrl
adc
xor
sti
lahf
sbb
dec
sub
cmpsb
inc
enter
inc
xor
mov
movl
std
je
out
imul
or
sbb
dec
and
adc
enter
add
cwtl
dec
sub
adc
sbb
loop
pushf
enter
pushl
in
sbbb
daa
mulb
add
sarb
sbb
inc
adc
pop
sub
mov
and
dec
push
div
les
or
xchg
sbb
in
mov
push
and
ret
add
negl
shlb
mov
inc
inc
cmp
add
lret
movsb
push
repz
pop
pusha
test
rolb
cmp
negl
adc
and
adc
cwtl
dec
gs
xchg
into
push
dec
adc
push
ficomps
in
and
pusha
and
cmpsb
sbb
pop
xlat
in
repnz
and
cld
fstps
mov
aam
addb
js
inc
jnp
mov
add
cmp
stos
sahf
inc
pop
pop
inc
mov
scas
mov
sbb
ljmp
mov
mov
jne
icebp
push
ljmp
dec
inc
nop
clts
sub
cmpsl
mov
or
xlat
gs
rorl
lods
lahf
ret
in
cmp
and
sbb
lret
push
insl
lods
push
rcll
adc
cmp
jb
loopne
pushf
add
mov
cmp
or
pop
mov
clc
xor
int3
sbb
ja
mov
mov
sub
aad
ja
xor
mov
arpl
pop
push
out
xorb
dec
xlat
scas
clc
dec
sub
leave
call
fstpl
jmp
lahf
xchg
dec
enter
mov
mov
cmp
pop
dec
mov
js
dec
mov
pop
and
sbb
scas
jne
mov
adc
inc
add
or
jmp
sbb
lahf
jo
push
or
xchg
scas
jle
mov
cs
mov
xchg
xchg
aaa
icebp
cltd
and
mov
push
stc
adc
lcall
pusha
sub
fisubs
mov
popf
mov
ljmp
jb
pop
push
cmp
aas
and
xor
stc
mov
push
test
jnp
mov
cltd
push
pop
ret
inc
popf
push
and
dec
das
gs
cld
mov
outsl
negl
adc
and
jns
inc
push
mov
cli
out
add
lret
pop
xor
neg
jl
cwtl
xor
mov
clc
push
repz
xlat
push
jle
mov
enter
and
and
dec
sahf
adc
cwtl
rclb
int
dec
jbe
dec
lret
rcrl
lds
repz
aam
enter
mov
mov
add
mov
cld
imul
int
sbb
sbb
cmp
push
lcall
and
and
dec
xor
fisttpl
mov
push
cmp
jmp
mov
and
pop
arpl
dec
stos
ret
add
cmpsb
sbb
sarb
adc
push
cmpsl
bound
pop
ror
cmpsb
sub
adc
ficompl
jno
dec
add
data16
pop
xchg
pop
push
ret
popa
jl
xchg
or
cmp
and
mov
int
xlat
mov
hlt
lock
dec
cwtl
mov
xchg
in
daa
cwtl
scas
test
or
ja
hlt
mov
stos
jp
push
scas
cmp
xor
adc
call
loope
dec
out
movsb
movsl
pop
stos
sbb
outsl
in
loop
xchg
test
cmp
loope
adc
pop
mov
add
fwait
or
orl
adc
add
cmp
aaa
inc
cmpl
sub
ljmp
shr
add
adc
xchg
div
push
mov
pop
jl
shrb
inc
xchg
add
repz
and
add
mov
pushf
jo
repz
xor
adc
and
lret
mov
mov
or
xor
aas
scas
mov
jno
pushf
hlt
lahf
inc
mov
dec
jo
cs
fstps
add
fwait
xor
mov
mov
sarb
test
xor
scas
popf
in
dec
es
mov
pop
dec
outsl
scas
ficoml
movsb
repz
shl
mov
cmpsb
push
push
pop
push
cmp
jecxz
fimuls
int
lcall
pop
xor
xor
push
xchg
ds
sub
sbb
ljmp
lea
lds
aaa
repnz
pop
cmp
sahf
sbb
je
push
js
sbb
out
bound
divl
into
or
mov
lea
inc
and
test
sub
push
mov
or
scas
out
inc
rorl
loop
pop
sbbl
addr16
std
mov
aas
fldt
repnz
adc
jae
xchg
lcall
jecxz
imul
or
pop
mov
scas
icebp
out
popf
jecxz
rcr
sub
pop
ja
cmpl
mov
inc
push
jl
cwtl
sbb
lahf
mov
xchg
cmpsl
adcb
and
mov
sub
js
xchg
or
pop
test
sub
cmp
and
mov
jmp
clc
out
in
inc
lret
cmp
lods
mov
loopne
mov
inc
lock
ss
jo
dec
loop
in
add
test
push
aas
iret
push
scas
jmp
insb
sahf
fcmovbe
sub
mov
fsincos
sub
call
bnd
jge
divb
xchg
dec
pop
test
xchg
cmpsl
ficompl
dec
inc
dec
addr16
and
dec
cmpsb
aam
shrb
into
fldenv
in
sbb
push
adc
sbb
leave
jle
rol
mov
call
test
xchg
adc
add
mov
gs
sbb
jmp
push
cld
xchg
popa
pop
into
xchg
hlt
nop
pop
jbe
inc
dec
and
inc
pusha
outsb
fs
mov
sub
jge
cmp
xchg
sub
jle
mov
add
lock
int3
std
pushf
mov
shlb
insb
dec
ficomps
lock
daa
fs
pop
add
cmp
icebp
fadds
test
lock
inc
hlt
xor
aaa
cmp
dec
mov
mov
mov
sbb
mov
lock
clc
xor
shr
out
mov
das
cmp
int
cmp
cmp
jle
mov
add
adc
and
aad
jle
pop
repnz
mov
lods
int
mov
lret
test
flds
cltd
push
fs
mov
loop
fists
jb
loopne
in
cwtl
xchg
rcrb
push
push
lods
push
mov
lods
sub
in
js
loop
xchg
jl
jecxz
aad
mov
xchg
cld
mov
sahf
mov
mov
push
or
xchg
and
push
test
jmp
addr16
push
pushf
idivl
imul
shll
xchg
jne
popf
fmul
mov
adc
test
xor
lret
int
div
jno
loop
mov
aaa
loopne
loope
inc
jo
js
insl
push
les
sub
dec
test
cld
fidivrl
inc
jo
cmpsl
aam
stos
lea
jno
mov
adc
jge
cmp
mov
cmp
or
jo
leave
inc
in
cmp
out
or
jnp
push
push
xchg
mov
jg
push
and
push
pop
hlt
add
jae
movsb
cmc
popf
jne
xchg
pop
add
test
push
loope
cmp
mov
push
jp
sbb
jnp
or
jns
cmpsl
jns
idiv
in
cmp
in
nop
lea
data16
xor
mov
push
shll
jbe
inc
and
dec
add
std
aam
mov
dec
filds
outsl
dec
into
jo
mov
mov
dec
fmuls
in
sub
stc
mov
rorb
testl
adc
push
je
adc
ret
test
dec
ret
rorl
mov
shrl
sub
mov
add
mov
xchg
push
lods
inc
pop
jno
sbb
loop
mov
aas
in
pushf
leave
and
mov
mov
movsb
mov
and
ret
cmp
mov
xor
and
ljmp
cwtl
xchg
je
xchg
dec
into
mov
aaa
loope
and
inc
out
jbe
xchg
or
sbb
dec
jne
fcomip
outsb
mov
imulb
push
mov
mov
frstor
lock
pop
mov
mov
inc
mov
or
adc
jg
fwait
xchg
fisubrl
jno
bound
or
xchg
xor
test
xor
mov
xor
negb
pop
xor
sub
jg
xor
shll
sar
movsl
fwait
push
pop
cmp
dec
ds
scas
xchg
dec
mov
xchg
loope
mov
dec
or
cmp
sub
call
push
cmp
pop
outsb
add
leave
add
ljmp
jo,pt
pop
xor
jne
jnp
mov
lret
inc
ret
test
jo
mov
sti
aaa
dec
xor
adc
mov
adc
fwait
subl
lret
pop
stc
mov
sbb
lods
out
aam
push
stc
mov
jb
ss
popf
add
xor
jle
add
sbb
lock
jecxz
jae
xlat
ss
out
cmp
lods
in
xchg
mov
dec
js
jmp
adc
mov
outsl
xchg
mov
pop
roll
and
and
fwait
push
jmp
dec
mov
add
cmp
out
inc
sub
call
adc
pop
jne
mov
loope
dec
cmpsl
clc
aam
subl
popf
pop
adc
xchg
movsl
cs
std
mov
dec
xchg
sti
mov
jns
push
popf
mov
jae
ret
stc
xchg
or
sbb
out
cwtl
mov
dec
or
inc
adc
cmp
xchg
jb
aaa
jle
adc
inc
repnz
movsb
rorl
call
inc
fs
dec
mov
gs
out
dec
in
icebp
push
mov
loop
dec
cli
xor
mov
cmpsl
push
out
mov
push
movsl
out
test
cmp
cmp
sbb
sub
sbb
fsub
cs
add
scas
lret
xchg
sub
ss
sub
bts
int3
dec
jp
push
fldl
sbb
ljmp
mov
mov
insb
add
aaa
sub
dec
push
sbb
mov
push
adc
fdivrl
sti
lahf
pop
cwtl
jmp
pop
jae
pop
pop
sub
xor
fdiv
and
xor
aam
fisubrs
push
rcll
xchg
out
xchg
mov
inc
loopne
pcmpgtw
aad
aam
sbb
jo
mov
or
sahf
cli
cmp
or
and
sbb
mov
sub
sbb
ret
jmp
or
xor
cmpsb
push
daa
cli
clc
or
shrb
sbb
popf
xchg
pop
cmp
cli
push
mov
call
sbb
test
js
jge
push
leave
ss
pop
or
dec
movsb
adc
cmpb
out
hlt
shl
sbb
cmp
ljmp
les
std
and
push
pushf
rolb
jo
jno
lods
leave
out
xor
and
outsl
aad
add
loope
lcall
cmp
rcl
fcomip
stc
mov
jp
jo
in
pop
enter
sub
pushf
inc
popf
sub
mov
dec
adc
mov
int
cmpsl
lods
push
dec
test
push
test
daa
std
aam
out
xchg
sahf
lcall
std
mov
sbb
mov
jg
shrl
xchg
jg
mov
jmp
jb
push
call
mov
outsb
lds
dec
pop
inc
sbb
lahf
mov
jecxz
pushf
inc
add
mov
fwait
lret
lret
out
bound
jne
ljmp
ja
or
mov
xor
jae
cmpsb
cmp
imul
leave
dec
push
enter
cmpsb
cmp
cmpsl
mov
cmp
xchg
jno
repnz
sbb
popa
push
jecxz
lcall
jg
out
push
xlat
aad
popf
shl
pop
push
mov
les
jle
in
clc
in
int
sysexit
ds
push
dec
pop
xchg
test
repz
adc
arpl
mov
and
xchg
inc
sub
xchg
dec
aam
push
inc
push
mov
dec
out
push
popf
mov
in
jge
mov
cmpsb
jl
and
pop
lods
es
mov
aam
mov
adcl
sahf
fwait
rclb
scas
in
or
cmovo
andb
cmp
xor
lds
push
push
dec
out
mov
out
imul
cmp
mov
lret
mov
sbb
mov
or
fs
adc
ja
mov
pusha
nop
out
pop
es
push
jb
jb
or
sbb
stc
dec
stc
ljmp
lret
out
dec
pop
lahf
pop
data16
lods
pop
scas
nop
cmp
fucom
ror
sbb
mov
sub
push
idivl
rcrb
push
pop
inc
jmp
lcall
mov
ffreep
cmpb
out
pop
aaa
stc
popf
jb
sub
sbb
outsb
jnp
mov
mov
jmp
scas
mov
pop
push
jno
jbe
push
add
scas
imul
jb
add
mov
dec
cmp
mov
fmuls
mov
pop
inc
sub
push
xchg
or
sbb
test
xchg
jle
lret
xor
repz
xor
mov
mov
adc
jne
cmp
scas
aam
mov
das
sub
sub
movsl
ljmp
lcall
cmp
push
jl
sbbl
aad
pminsw
adc
jbe
and
mov
in
pusha
repnz
sub
dec
adc
adc
sarb
movl
arpl
fdivr
fxch
jp
aad
xor
data16
jge
sbb
push
out
jge
mov
or
xchg
inc
aam
jecxz
fdivrs
inc
sbb
xchg
data16
sahf
leave
shrb
xlat
add
imul
jb
push
lods
xor
and
sub
into
push
mov
inc
lret
lods
and
stos
repnz
aas
dec
iret
mov
xchg
je
icebp
out
mov
addr16
les
pop
mov
xor
or
cld
aaa
idiv
into
adc
adc
lock
fstpt
data16
jno
cmp
push
add
inc
dec
xor
or
push
sub
xchg
sub
sub
xchg
sub
insl
fsubrs
and
jecxz
pusha
scas
pop
and
mov
lock
notb
lcall
push
push
sub
add
and
sbb
cmp
xor
dec
mov
sbb
out
mov
movsb
ds
sti
loop
pop
xor
push
lahf
lret
fcomps
enter
mov
test
mov
mov
popf
cmp
movsb
lcall
lret
mov
xor
push
and
jnp
jo
in
sub
pushf
loope
dec
lods
pop
mov
lret
out
lcall
fs
je
add
jb
ljmp
fmulp
pop
or
roll
outsb
repz
cmp
add
and
push
push
push
xchg
divl
in
jl
test
aam
test
in
jp
daa
sbb
scas
into
repz
push
imul
push
icebp
les
or
push
cmp
mov
cwtl
adc
xorl
aas
mov
push
loop
dec
out
aas
lret
jae
push
inc
insb
repnz
loope
add
lea
mov
mov
cmpb
jo
mov
push
push
or
iret
aad
clc
inc
jle
push
enter
xor
xchg
cld
ret
ljmp
into
mov
mov
mov
sub
cmp
ficoml
out
and
mov
insl
notb
fisubrl
mov
lods
enter
inc
mov
fisttps
add
outsl
mov
mov
push
adc
or
sbb
mov
iret
inc
in
xchg
loope
mov
sbbb
xchg
adc
hlt
shl
outsl
add
icebp
jne
outsb
dec
xchg
in
gs
lahf
pop
std
add
stc
std
rol
outsl
mov
fimuls
jne
int
sarl
pop
jecxz
mov
xchg
push
dec
movsl
push
or
pop
mov
or
std
sub
ds
sbb
rorl
aaa
aad
dec
je
flds
jmp
jbe
push
fcmovnu
cmc
mov
dec
mov
loope
stos
pop
jg
lea
inc
mov
cwtl
leave
mov
testl
fdivrl
out
xor
add
pop
xchg
lock
in
add
jmp
faddl
adc
cli
cld
cli
je
daa
xor
and
fbstp
sub
scas
sbb
std
or
xor
mov
inc
add
push
jge
fcomip
in
push
push
insl
jge
lock
and
les
sbb
mov
mov
orl
rolb
add
rcll
aaa
mov
outsb
mov
call
cwtl
xchg
inc
mov
inc
cmp
dec
jmp
mov
cltd
pop
mov
in
ja
test
pop
pop
sub
pop
inc
inc
testb
dec
inc
fcoms
ljmp
in
jns
cltd
jmp
add
mov
or
mov
pop
and
in
xchg
sbb
mov
sbb
mov
sub
je
ja
mov
pop
jg
pop
xchg
test
and
sarl
insl
test
adc
mov
jne
mov
icebp
cmpsb
inc
lods
fs
scas
outsb
fnstenv
ret
cltd
data16
iret
pop
fildl
mov
adc
mov
mov
pop
out
subl
arpl
andl
sub
xor
lret
xor
lcall
repz
push
sbb
leave
aaa
scas
sti
jl
aad
out
adc
push
adc
mov
insb
mov
sbb
ja
fstpl
pop
xchg
mov
enter
ss
lock
out
xor
or
out
mov
jns
add
outsl
je
push
or
mov
out
or
jnp
dec
aam
xchg
inc
pop
fmulp
fdivr
xchg
jne
pop
bound
or
aaa
xchg
fsubl
pop
repz
xor
dec
dec
loope
or
sub
xor
test
mov
shrl
sub
arpl
insl
lock
inc
icebp
cmp
imul
cmovns
div
repnz
std
movsb
adc
xor
lock
ret
into
sub
pusha
xchg
pop
test
sub
std
cmpsb
push
shr
cmc
xchg
mov
mov
negb
in
add
mov
cmp
pop
ret
lea
push
fldl
mov
pop
jne
push
mov
orl
jne
lods
clc
xchg
and
mov
jecxz
movsl
mov
jge
or
aas
movsl
nop
sbb
push
inc
xor
and
xor
fmull
js
jge
mov
dec
push
mov
mov
outsl
mov
mov
lds
bound
out
push
xchg
mov
add
push
push
add
jns
repz
sbb
dec
mov
insb
insb
cli
pop
aaa
add
push
cli
mov
in
cmpsb
dec
out
sub
pop
clc
hlt
shlb
mov
call
xchg
add
jae
outsl
sbb
dec
sub
imul
sti
mov
dec
fimull
mov
rol
push
cld
and
xlat
mov
xchg
mov
dec
aam
mov
inc
movsl
stos
cmpsl
jae
and
ret
push
inc
pop
fidivl
out
xor
mov
clc
pop
push
jbe
out
nop
data16
mov
jbe
add
sbb
or
mov
insb
or
out
sti
lahf
outsb
aam
pop
sbb
mov
jo
jbe
lds
push
xchg
hlt
mov
pushf
idiv
in
mov
and
dec
push
xchg
sahf
fdivl
and
fs
push
xor
xchg
je
jae
dec
sub
mov
scas
mov
sub
xchg
in
mov
in
jae
nop
hlt
data16
pushf
nop
pushf
push
out
sbb
jl
mov
sbb
ss
sbb
jl
push
mov
rcrb
aad
cmp
mov
imul
imul
sahf
jg
push
sbb
sub
mov
mov
cld
loope
push
outsl
mov
int
push
push
pusha
hlt
cli
lods
inc
xchg
fistpll
stc
sarl
mov
andl
fisubrl
in
xchg
addb
mov
adc
mov
repz
ficoms
lods
add
xchg
push
loopne
mov
lea
movsb
fidivl
mov
cmpsl
mov
lret
xor
mov
xor
cmp
jp
xor
mov
push
fistps
ret
push
ret
pop
int
in
enter
jg
pop
aad
test
inc
adc
jae
lret
in
jno
js
sbb
push
pop
xchg
stos
pop
std
hlt
rorl
aaa
dec
jl
cmp
shlb
lds
ss
cmc
or
dec
aam
push
dec
sub
shll
pop
ret
mov
jg
pop
and
lea
popa
adc
fildll
jge
inc
popf
sbb
dec
mov
fildl
dec
xchg
cmp
rcrb
aam
arpl
fmul
mov
fdivs
dec
in
mov
dec
ljmp
xor
dec
jbe
push
outsl
insl
into
push
aad
jp
dec
repz
mov
sbb
ja
loop
in
sub
test
pop
sbb
repz
or
addr16
jecxz
jmp
gs
out
cmp
decb
cmp
lock
jg
jnp
xor
or
push
pop
mov
sbb
cld
rcrb
gs
or
xchg
sbb
sbb
es
popf
data16
xor
rol
nop
mov
cmp
push
pop
shll
lods
popf
inc
mov
or
lret
mov
inc
outsb
mov
adc
xor
mov
popf
test
lahf
adc
dec
xor
push
iret
int3
nop
movsl
cmpsl
and
and
inc
pop
mov
add
aad
sub
test
adc
lret
ret
call
add
sti
ss
ja
enter
dec
stos
cwtl
loopne
into
inc
int
out
repz
fsubr
test
mov
clc
push
sbb
mov
adc
cmp
mov
jnp
scas
xchg
in
aas
add
cmc
fnsave
cmp
push
and
lock
push
push
in
mov
enter
popa
mov
and
daa
leave
out
jnp
fisubrs
dec
loope
sti
xchg
xor
out
insb
xchg
inc
cmpsb
pop
sbb
mov
mov
outsl
out
sbb
call
pop
xor
repz
jne
xchg
or
jb
scas
mov
pop
fcompl
out
dec
jg
sbb
inc
mov
pop
bound
out
test
stc
adc
imul
out
cmpsl
int3
xor
clc
fbstp
xor
cwtl
jg
mov
pop
pop
jecxz
in
rcr
sub
jge
push
jae
stc
sti
or
popf
inc
mov
lds
bound
sidtl
ds
rclb
or
fdivrl
jge
fstpt
stos
insb
andb
jp
icebp
loopne
adc
pop
jns
pop
jnp
sub
cmc
lret
mov
into
inc
add
sbb
push
cmpsl
push
cmp
negb
das
mov
iret
xor
jl
jb
xchg
mov
mov
pop
test
imul
dec
test
adc
out
lahf
add
jmp
push
dec
xchg
xlat
push
rclb
jle
loope
pop
jns
pop
mov
enter
mov
mov
jo
sbb
mov
test
inc
out
or
pop
rorl
sbb
sub
cmp
inc
mov
mov
and
sbb
xor
movsl
in
push
xlat
xor
xchg
testl
push
mov
lcall
cltd
out
mov
sahf
and
jae
shl
int
inc
mov
mov
enter
cmp
sti
push
mov
xchg
andb
call
sub
adc
shr
mov
xlat
xchg
jecxz
fiadds
cmp
pop
lret
insl
adc
push
and
mov
test
in
xchg
inc
mov
daa
mov
inc
fcomps
cli
push
dec
push
inc
mov
sub
pop
dec
cmpsb
outsb
addr16
jno
mov
push
int3
movb
xlat
sub
scas
pop
call
orb
aas
loop
jns
ja
mov
sub
es
xor
rorl
dec
daa
aad
in
sbb
std
shll
clc
into
mov
or
out
arpl
push
cmovno
fisubs
xchg
cmp
xor
sbb
dec
push
loop
pop
int
cmp
push
pop
pop
leave
shl
xchg
fnstsw
lods
cmpsb
rol
dec
xchg
iret
lret
call
push
jmp
ret
lret
jge
loop
cld
subl
push
adc
adc
pop
pop
mov
cmp
iret
sub
in
and
xchg
mov
fisttpl
fbstp
xlat
jb
push
pushf
out
into
mov
mov
dec
inc
lea
xchg
aas
and
shll
test
xor
and
pop
mov
xor
xor
das
pop
xor
loop
test
pop
cmp
mov
loopne
test
jno
or
test
cli
add
adc
and
cmp
push
fstpt
jp
lcall
iret
adc
mov
leave
push
or
loop
or
jmp
out
jmp
pop
call
dec
in
adcb
mov
pop
setg
aaa
outsb
scas
out
adc
dec
jp
cmp
mul
adc
movsl
inc
xor
rorb
sti
dec
mov
add
ljmp
cwtl
adc
jg
dec
xlat
add
stos
out
int3
inc
fstl
sub
push
mov
outsl
lret
mov
outsl
repnz
xor
ljmp
adcb
loopne
push
inc
js
mov
mov
movsl
inc
insl
into
jmp
mov
aam
mov
adc
nop
pop
scas
jecxz
inc
inc
in
mov
xor
adc
or
popl
in
mov
pop
add
mov
push
and
test
call
out
fisttpl
cltd
sub
mov
imul
sub
pop
xchg
in
in
xchg
mov
pop
movsb
mov
repz
movsl
jo
add
lods
pushf
or
lea
rcrl
jl
and
xorl
cld
pop
jle
data16
in
stos
cmp
jb
cmpsl
pop
xor
jns
xor
mov
mov
rclb
lock
mov
ja
xlat
mov
push
sub
inc
and
in
outsb
add
mov
dec
test
les
jecxz
aas
mov
and
push
mov
sbb
mov
imul
cmpsl
mov
fwait
pop
inc
and
add
xchg
mov
mov
jle
hlt
push
lahf
cmpsl
mov
cmp
nop
daa
insl
add
mov
cmp
jnp
test
dec
fisttps
cmp
xor
ffreep
or
lods
sbb
repnz
jne
adc
nop
sub
xchg
sub
cmp
jle
push
xorb
mov
mov
cld
push
adc
add
xchg
push
lods
es
stc
xchg
push
aaa
adc
ret
push
js
jnp
xchg
jmp
xchg
clc
fwait
jno
int
sub
mov
cmc
outsb
inc
pop
inc
cmp
cli
cmp
dec
fstpt
hlt
aad
lds
ja
cld
xor
fcomps
pop
pop
dec
and
and
stos
push
dec
xchg
push
sbb
imul
out
lock
mov
fdivl
mov
ret
test
and
int3
inc
push
xor
push
push
rcr
icebp
cld
pop
mov
push
out
and
add
rcll
test
or
mov
shrl
lods
int3
sbb
jns
sub
push
mov
insb
xchg
pop
pop
cltd
ret
stc
inc
pop
shll
scas
das
rcr
aad
sbb
push
mov
mov
inc
adc
insl
mov
sbb
push
stos
cmp
dec
pushf
bound
fs
and
idivl
mov
mov
addb
nop
xchg
add
int3
dec
jmp
xor
fwait
cmp
inc
dec
sbb
push
inc
add
push
inc
loop
loopne
in
out
pop
imul
jecxz
lar
lock
push
xor
pop
pop
das
sbb
lahf
cmpsl
repz
dec
cmp
mov
inc
daa
xor
stos
imul
fs
jns
dec
xlat
dec
insl
gs
pop
xchg
mov
dec
xchg
cmp
mov
aas
push
pop
pop
mov
nop
cmp
nop
xorb
shrl
cmpb
xchg
ja
pop
pop
jno
fs
icebp
idivl
insl
adcl
out
sarb
sbb
mov
cli
addr16
jnp
call
sub
or
pop
and
cs
add
push
jle
hlt
adc
adc
into
nop
out
popa
clc
cmpl
dec
sub
ss
push
adc
nop
push
std
sbb
in
push
sbb
sbb
jg
pop
daa
xchg
xor
fsubs
jle
push
lcall
stc
jmp
xor
pusha
push
lea
pop
orb
inc
out
and
adc
add
cmpl
jbe
sub
imul
test
ret
mov
add
push
and
sbb
sub
mov
in
mov
mov
pop
jbe
test
ds
inc
pop
lcall
jecxz
xbegin
ss
push
sarl
pusha
add
adc
xor
out
lods
jmp
lods
jo
xchg
cmp
push
mov
mov
hlt
int
fnstsw
sbb
adc
dec
cltd
mov
sub
adc
and
out
imul
subb
and
fmul
sbb
test
out
sbb
mov
xor
cli
mov
sbb
cmp
leave
stos
xor
inc
leave
rcr
lock
jl
pop
add
cli
push
sti
cmp
inc
pop
fistps
test
mov
js
push
daa
pop
jo
xor
mov
and
jbe
dec
je
je
xchg
sub
jo
mov
pop
jno
lahf
and
lock
jnp
pusha
sbb
ljmp
inc
imul
hlt
in
adc
mov
push
xchg
cmpsb
add
outsb
add
push
dec
ds
loope
xchg
jecxz
out
mov
inc
jg
jnp
outsb
iret
lds
jge
and
xorb
fnstsw
mov
xor
cwtl
inc
and
xchg
test
mov
xchg
inc
cltd
andb
inc
js
je
idivb
add
das
or
sub
or
mov
xchg
lds
insl
and
dec
or
pop
push
in
sti
xor
xorl
rcrb
out
or
cwtl
in
dec
test
ret
ret
lods
icebp
push
jg
or
shll
xchg
cmp
inc
push
dec
das
mov
setae
mov
sbb
cmpb
imul
jae
pop
aam
fdivrs
test
clc
and
jg
pop
fstl
mov
in
sub
or
pop
test
lods
xor
cmp
aaa
mov
inc
jle
and
mov
mov
jno
hlt
pop
andb
les
xlat
mov
out
sub
add
jne
mov
inc
imul
push
int3
push
and
insb
dec
mov
ja
ja
in
xchg
inc
fstpl
test
adc
inc
xchg
arpl
adc
bound
loop
hlt
in
xor
jno
clc
sbb
or
cld
out
lods
pushf
pop
inc
xchg
daa
int3
cmp
jnp
outsb
xchg
insl
insb
xchg
int
popf
push
jecxz
sbb
mov
jbe
mov
cmc
les
and
test
fsubrl
and
enter
xor
cltd
roll
mov
xchg
daa
jp
push
xor
mov
add
xchg
or
adc
xchg
ljmp
pop
ljmp
repz
pop
nop
pop
xor
es
or
adc
or
fistpll
or
mov
jecxz
xchg
pop
sbb
jns
push
clc
mov
mov
sahf
addb
stos
mov
sbb
mov
shll
cmp
inc
xchg
fimuls
fldenv
pop
dec
mov
mov
mov
mov
and
subl
test
xchg
in
pop
mov
xor
scas
mov
mov
leave
or
ror
lcall
add
lods
add
in
sahf
and
leave
cmpsl
setb
dec
lods
and
mov
and
mov
adc
shrl
or
das
mov
dec
pop
rcl
mov
clc
lahf
call
jl
pushf
in
mov
jg
outsl
dec
mov
pop
adcl
bound
pop
xor
scas
mov
or
pushf
js
sub
aas
inc
mov
push
daa
repz
add
mov
inc
cld
jle
ja
mov
sbb
std
and
jmp
out
sub
call
or
cli
mov
ljmpw
adc
imul
sarl
bswap
jmp
fdivp
pop
in
aam
aas
push
loope
outsl
jge
sbb
es
lcall
sub
and
neg
xchg
idivb
outsl
int3
mov
and
enter
pop
ficoml
jge
arpl
and
jnp
xor
leave
mov
in
test
add
mov
pop
iret
dec
int
xchg
jo
lods
cmpsb
adc
or
push
cmpsl
mov
pop
fistl
out
jb
xchg
fwait
cmp
add
sbb
mov
inc
mov
pushf
sub
xchg
ss
in
or
insl
jg
cmp
lods
add
dec
add
sub
insb
out
jmp
dec
push
adc
scas
inc
inc
aam
cmpsb
mov
mov
sub
js
mov
mov
ret
cld
out
call
shrb
out
aaa
pop
insl
adc
cmp
popa
lahf
inc
xchg
and
xlat
test
mov
cmp
xor
push
jmp
out
aas
cmc
or
adc
loop
stc
adc
xchg
das
scas
jl
leave
insl
scas
mov
fsts
jnp
jb
sahf
jne
dec
mov
and
cli
cmp
test
cmp
icebp
push
out
pop
mov
scas
or
roll
cmpb
insl
jo
vmread
or
jg
and
or
fidivl
mov
insl
je
repnz
loop
in
and
fimuls
xor
and
in
xchg
jl
xchg
popf
cli
pop
push
lods
lods
add
rclb
dec
or
xchg
jle
push
lret
xor
inc
sbb
mov
cltd
jb
ss
mov
cmp
imul
mov
rol
mov
ja
sahf
mov
pop
rorl
negl
cld
cmp
or
sub
movsb
adc
repnz
cmp
repz
loope
xchg
add
mov
mov
hlt
and
mov
pusha
loope
dec
lret
test
pop
fisttpll
fwait
and
sbb
dec
mov
push
sub
push
lods
insl
cmpb
adc
sub
jbe
or
jp
fwait
and
fwait
dec
inc
roll
add
ss
jno
jle
adc
mov
and
roll
dec
dec
test
dec
and
fbld
repnz
cmp
xlat
cmc
arpl
cltd
pop
testb
add
cld
popa
iret
mov
or
test
cmp
xor
lret
push
call
scas
mov
dec
stos
or
mov
or
popa
test
div
sub
or
movsl
repz
lahf
add
rcrb
cmp
popf
sub
sbb
hlt
dec
mov
sub
sub
pop
mov
xor
xchg
mov
adc
and
and
pop
push
add
add
scas
icebp
orl
push
imul
incl
adc
in
push
sub
xor
jno
shlb
mov
sbb
or
in
fstpt
cmp
and
xchg
arpl
jle
int3
jno
mov
lcall
xor
mov
loope
pop
mov
xchg
or
or
lea
xchg
cmp
into
out
and
adc
fcoml
xor
push
rorb
mov
outsb
pop
jns
lahf
or
and
dec
pop
xor
sbb
fldt
aas
mov
cmpsl
ljmp
icebp
sbbl
jg
outsl
ljmp
aas
add
xchg
pop
mov
sbbb
testb
mov
test
mov
lret
fwait
sub
xor
lods
adc
jmp
mov
jb
cmc
mov
arpl
stos
xchg
inc
test
inc
add
aas
jg
adc
add
enter
jnp
xor
add
sub
xorl
dec
pop
es
sbbb
decl
xor
cwtl
popf
fsubrl
stos
rcrb
popa
jb
mov
out
fidivl
mov
iret
and
andl
or
adc
sarl
mov
movsl
push
adc
or
xor
inc
notb
cmp
outsb
stc
push
xchg
sbb
addr16
es
inc
mov
out
jp
jo
daa
fstps
stc
or
fwait
sarl
test
pop
fistpll
cmp
xchg
pop
shrb
xor
mov
cmp
jecxz
call
inc
pop
xchg
mov
popa
dec
dec
jmp
scas
pop
sbb
dec
xchg
adc
ret
adcb
sbb
mov
cmpb
push
xor
lahf
dec
jmp
sbb
sbb
xor
data16
fsubrs
sbb
rol
adc
nop
test
cli
jb
jb
jecxz
stos
xchg
and
andb
and
pop
je
int3
cmp
pop
mov
addr16
ret
inc
or
mov
or
cmp
fsubr
sbb
sub
xchg
and
push
mov
in
loop
std
xchg
adc
sbb
enter
mov
and
dec
in
xor
push
cmp
cwtl
adc
test
movsl
mov
mov
mov
faddp
fwait
pop
ficoml
pusha
hlt
jb
insl
gs
jmp
rcrb
adc
mov
cwtl
jno
testl
mov
ljmp
fwait
xlat
lahf
xchg
scas
lods
push
sti
sbb
sbb
xchg
or
test
rep
xchg
push
scas
cmp
mov
iret
pop
mull
sub
add
mov
sbb
fs
mov
xchg
dec
jecxz
xor
daa
orb
int
pop
adc
adc
imul
mov
lret
lods
mov
push
cmc
shr
push
push
dec
arpl
dec
add
popa
shrb
push
add
call
sub
adc
sbb
fbstp
sub
pop
lahf
stos
mov
scas
leave
test
push
in
mov
push
pop
cmp
sahf
movsb
das
jbe
pop
or
out
test
cli
imul
hlt
mov
rclb
sti
cmp
out
sbb
sub
mov
sub
add
lahf
sub
push
and
sbb
xor
rcl
mov
and
nop
pop
mov
fdivrl
data16
push
out
aas
lret
insb
dec
sbbl
ficoms
dec
pop
mov
cmpsl
insl
pop
or
pop
ret
out
and
lods
adc
movsb
scas
pop
sub
xchg
out
imul
and
xor
repz
inc
in
lahf
inc
adc
lods
mov
test
cld
test
or
stos
cli
sbb
xchg
mov
test
pop
mov
test
xchg
imul
inc
mov
push
mov
repz
repnz
daa
outsl
ja
mov
cmp
movsl
iret
repnz
out
idiv
ret
lock
xor
push
xor
loopne
xchg
leave
clc
movb
imul
mov
push
mov
stc
or
push
movsb
fldt
orl
out
sbbl
push
cmp
mov
popa
mov
ljmp
xor
mov
mov
inc
jmp
loopne
pop
rcrb
add
push
mov
sbb
xchg
inc
cmpsl
rcr
in
xor
adc
xchg
xchg
fiadds
sbb
or
pop
and
cmp
stos
pop
repnz
xchg
sub
shr
cmpsl
add
cmp
or
pop
pusha
aaa
mov
xchg
xor
xor
sbb
testl
push
test
pop
fidivrl
fistps
xchg
and
dec
pop
xor
test
pusha
test
pop
jae
sbb
mov
loop
push
mov
pushf
inc
xchg
sub
jmp
push
cmpb
inc
jl
aam
test
mov
or
lea
dec
push
dec
pcmpeqd
xchg
xchg
inc
mov
pushf
push
pop
xchg
pop
loope
cmpsl
adc
inc
dec
adc
notb
adc
cmp
and
xchg
jno
cld
stos
push
sbb
jns
jns
stos
in
fbld
inc
pop
sub
in
mov
xor
cs
mov
test
mov
andb
xchg
stos
fnstenv
adc
std
pop
popf
mov
into
inc
pusha
test
lods
sub
fadds
ss
jns
insb
fs
int3
rorb
pop
in
leave
insl
sbb
std
sarb
add
jne
sub
pushf
cmp
aas
sbb
mov
cmpsb
jge
cmpsl
or
outsl
repz
mov
mov
jg
push
dec
in
dec
inc
xchg
in
mov
mov
dec
inc
rcr
jge
mov
pop
jns
popa
aas
scas
ljmp
in
ffreep
cli
insl
ds
ljmp
mov
mov
aas
pushf
pop
fmulp
mov
dec
in
int3
mull
jae
add
or
jbe
pop
or
inc
sbb
mov
in
jmp
sbb
mov
shl
push
fcompl
and
mov
push
mov
cld
fnstenv
mov
shr
jno
sub
shl
into
rcrb
cmp
push
fnstsw
sbb
inc
pop
mov
nop
adc
and
sbb
insb
push
pop
sbb
mov
inc
jmp
or
cld
scas
sbb
pop
ret
pop
mov
jbe
dec
insb
push
jecxz
xor
arpl
push
sub
jp
dec
xor
ss
jmp
outsb
mov
jns
mov
jb
adc
insb
arpl
lret
fidivrs
call
in
int
stos
into
push
pop
jmp
pop
enter
pop
sub
sbb
xlat
mov
mov
pop
es
add
and
mov
mov
mov
xor
ret
cmp
ss
push
arpl
mov
sbb
stc
fcom
lea
leave
mov
in
mov
aaa
dec
push
push
repz
dec
pusha
pop
push
mov
push
mov
push
cmp
gs
scas
clc
dec
adc
adc
add
mov
mov
pop
insb
xor
in
sbb
adcl
lock
dec
fldt
ljmp
movsl
jp
je
imul
fistps
push
pop
mov
fnstcw
jl
push
inc
jp
icebp
mov
mov
iret
jecxz
add
scas
aas
inc
xor
jmp
neg
add
inc
lds
ljmp
test
and
call
pop
jbe
and
jecxz
rcrl
adc
sbb
inc
add
int3
fs
mov
scas
cli
or
and
repnz
mov
push
inc
jb
sub
add
cmc
loop
daa
sub
push
cmpsl
sub
ss
xor
mov
mov
push
cmc
addl
pop
push
sub
mov
jge
push
jo
fs
js
dec
nop
in
mov
pop
ret
inc
pushf
sub
cltd
out
daa
lods
mov
jne
aaa
jo
push
pop
subl
xchg
stos
loop
push
xlat
jl
push
push
je
mov
loop
sbbl
lock
in
add
mov
or
loope
daa
mov
data16
and
xchg
and
inc
test
sti
xor
cmc
jl
sbb
daa
out
mov
lahf
or
inc
popf
out
insl
lret
in
fisubs
test
push
xchg
add
cmc
cli
cmp
dec
lret
jb
inc
movsb
pop
out
int
dec
dec
mov
dec
incl
cmp
testb
aam
dec
aaa
cld
mov
and
dec
add
lret
mov
or
sbbl
cmp
outsb
notb
xchg
inc
iret
jg
add
cwtl
xor
rcr
aas
js
jno
cltd
lods
rcrb
adc
mov
rcll
jb
pop
xor
clc
xchg
aam
cmp
movsl
jl
in
lods
xor
aad
popl
leave
pusha
pop
jb
jl
xor
lods
and
in
mov
daa
mov
fnstsw
inc
cmpsl
mov
sbb
dec
je
jp
mov
fs
adc
ffreep
cwtl
das
jns
adc
mov
in
clc
in
or
mov
imull
jp
mov
stos
lds
testb
in
add
lcall
cwtl
xor
repz
jbe
sbb
out
pop
mov
adc
nop
sub
in
xlat
add
and
pop
lcall
lods
xor
fmul
cli
mov
and
aad
xchg
enter
cmp
jae
add
or
cmp
dec
int3
pslld
cli
in
or
pop
insl
pushf
js
fists
add
mov
mov
mov
and
sar
iret
mov
mov
jle
or
xor
mov
mov
or
jo
push
insl
cmp
adc
out
push
lahf
pop
cmp
fcmovbe
cmp
popa
pop
fmull
shll
loope
xchg
lahf
and
imul
and
mov
cmp
imul
in
xchg
clc
je
push
fucomi
sub
incl
jae
pop
testl
xchg
insl
jl
and
icebp
push
fs
xchg
push
dec
add
roll
push
outsl
sub
cmp
js
int
jnp
push
sub
sub
pop
cmpsb
dec
mov
fwait
arpl
sub
out
shlb
xchg
adc
mov
pop
xor
or
jg
sub
arpl
sub
in
mov
fsub
push
push
push
leave
mov
cmp
mov
pusha
movsl
into
inc
fisubl
in
add
aas
loop
hlt
xlat
jmp
mov
lcall
mov
je
lsl
mov
aam
push
fcmove
es
mov
inc
aas
fbstp
jns
loope
mov
mov
mov
sub
repz
movsb
imul
fiadds
inc
popa
jge
sub
mov
push
push
xor
jnp
sbb
cmp
mov
adc
sets
sbb
aaa
arpl
cmp
inc
adc
sti
arpl
xor
pop
or
fstl
mov
xor
xchg
adc
add
xchg
add
pop
test
xorl
xor
out
add
jg
mov
enter
cmp
adc
sbb
jle
mov
in
cmc
fsubrl
imul
jle
xor
data16
cmp
add
gs
scas
clc
add
jae
int3
lds
movsl
lahf
mov
or
mov
inc
xchg
lahf
push
jge
pop
xchg
stc
lods
add
mov
xchg
mov
test
subl
add
popa
movsb
mov
jo
and
dec
xchg
cmc
fcompl
ds
sbb
out
sti
call
xchg
and
mov
out
in
test
xchg
cmp
mov
push
push
mov
cmp
mov
fiadds
rorl
lahf
fstpl
xchg
push
jnp
inc
fnstsw
lahf
out
mov
ficoms
movzwl
push
xor
loope
mov
addr16
sahf
negl
and
sbb
pop
out
add
xor
cmp
lea
ss
jp
sub
pop
aam
daa
add
add
push
aam
jl
dec
add
mov
cmpsb
loope
jp
sbb
push
push
push
push
mov
and
pop
outsl
dec
ja
in
jg
pop
dec
inc
add
loopne
mov
or
pop
mov
pop
xchg
out
subl
pop
adc
test
bound
ss
fs
and
sub
jnp
xor
adc
inc
ret
jbe
sbb
test
fnstenv
rcll
mov
inc
xchg
dec
loop
loop
nop
popf
pop
nop
jo
jb,pn
hlt
and
add
pusha
aaa
stos
dec
xor
addl
mov
sbb
add
scas
mov
loope
into
adc
pusha
inc
mov
or
dec
pop
inc
hlt
jne
out
out
cmp
pop
sbb
sub
dec
cs
movsb
rcl
psubusb
mov
mov
push
add
push
popf
sub
fcompl
add
outsl
push
jp
adc
add
sahf
leave
out
jns
js
repnz
jbe
rcrl
rcl
ret
mov
imul
sbb
std
bound
flds
xchg
sbb
xchg
sub
inc
mov
adc
cmp
ljmp
adc
imul
fstpl
xor
inc
xor
jmp
sbb
popa
ljmp
testb
push
adc
push
or
call
pop
or
sbb
std
hlt
cmpb
sar
lea
repnz
subb
adcb
shr
stos
cmp
bound
add
adc
or
inc
jb
in
add
addb
cld
push
imul
loop
das
dec
gs
sti
jmp
pop
pop
xlat
inc
cmpb
stc
js
cmpsb
loope
stos
ret
mov
xchg
xor
dec
adc
sbb
fnstenv
push
push
ficomps
sub
lret
pop
xchg
cmpsb
iret
jl
pop
loop
ret
loope
cmp
lock
xchg
aam
push
mov
sub
sti
cwtl
sahf
stos
sbb
push
leave
push
inc
jbe
movsb
lea
sbb
lods
inc
sahf
iret
mov
mov
mov
push
xor
lret
pop
jo
xlat
shl
bound
adc
and
xchg
jmp
jnp
add
pop
aam
lods
pop
or
mov
inc
xchg
xlat
insl
dec
inc
jae
inc
stc
mov
pusha
mov
icebp
jg
and
push
cs
or
mov
sub
in
stc
test
frstor
add
andl
cmp
dec
lods
sti
loopne
push
push
ror
sub
adc
xor
arpl
outsl
adcb
imul
in
dec
into
sti
data16
jno
lds
popf
adc
insb
cs
shll
mov
push
pop
add
pushf
test
push
bound
sahf
jmp
call
jmp
cmpsb
xchg
and
mov
es
test
jne
inc
cmpsb
add
dec
pusha
fistps
cmc
andl
rorl
push
stos
cwtl
cli
lds
out
mov
inc
cmc
test
insb
pushf
and
jae
mov
adc
and
jae
sbb
lret
in
xlat
mov
lods
sti
dec
test
insb
dec
dec
call
ja
jbe
xor
jnp
adc
sbb
push
stos
shlb
xchg
pop
je
adc
sub
push
sbb
pop
jnp
into
cmp
stc
mov
sub
fcoms
xchg
or
push
faddp
sub
and
pusha
hlt
cmpsb
inc
mov
js
cmp
jmp
jns
test
cs
aas
or
cmp
xchg
sysexit
lds
inc
test
sbb
dec
xchg
jno
cmpsb
cmpsb
js
cwtl
jno
mov
dec
pop
ss
mov
inc
inc
xchg
in
xchg
popf
cmp
xchg
fs
xlat
or
mov
adc
test
push
lea
lea
mov
xchg
insl
jae
stos
jo
mov
fwait
mov
jle
in
outsl
sub
iret
mov
xchg
cli
in
pop
fisttpll
and
imul
cmp
cmp
pop
daa
and
add
iret
es
out
stos
pop
add
xor
cli
mov
push
test
shl
inc
ret
enter
mov
cld
or
data16
push
out
jb
cmpsb
lock
in
push
jae
xor
xor
in
inc
fxch
mov
sub
push
ja
jbe
movsl
or
sbb
push
pop
out
daa
ja
pop
enter
and
cmp
es
mov
lea
dec
movsb
sbb
pop
add
ja
icebp
sub
push
jns
in
or
sahf
xchg
mov
xorl
loop
insl
dec
decb
roll
mov
jg
xchg
in
xchg
ficoms
repnz
repnz
adc
xor
int
test
jns
jl
push
pop
ss
xchg
push
xor
inc
lahf
addr16
pop
cmp
adc
inc
lds
mov
pushf
add
call
mov
leave
icebp
xchg
xor
mov
mov
mov
mov
int3
pop
jns
addr16
lods
scas
pop
xchg
sbb
cmp
xchg
inc
xchg
mov
cmpsb
ror
sub
adc
dec
cmpsb
aaa
jb
stos
sbbb
movsl
insl
add
mov
imull
xchg
add
push
test
push
popa
test
jecxz
mov
stos
lea
imul
mov
insb
out
cld
decb
sahf
fidivl
imul
aam
dec
jne
leave
fwait
test
pushf
lret
or
faddl
adc
add
lods
popf
lock
aam
cld
je
xchg
push
push
out
cmpsl
push
push
sub
mov
push
sbb
ds
and
aam
fidivs
shr
js
sub
outsl
sbb
pop
out
int
roll
fnstsw
cmp
mov
cmpsl
jmp
or
imul
bound
cmpsb
js
jno
out
stc
inc
fisttpll
mov
scas
test
jae
dec
cwtl
sbb
jmp
dec
in
repnz
mov
test
les
cmpsb
or
push
xor
pushf
loopne
or
xchg
ss
add
jl
pop
push
imull
pop
mov
dec
in
adc
lcall
into
xchg
mov
pop
dec
sbbb
jle
mov
add
je
xchg
pop
jl,pn
outsl
stos
sbb
fsts
sbb
xlat
out
data16
in
push
push
add
adc
sub
ja
dec
ljmp
and
add
popf
aas
xor
cld
inc
cmpsb
dec
jecxz
pop
daa
add
jmp
jge
enter
fldl
cmp
sbb
pusha
adc
stc
mov
xchg
or
mul
xchg
lods
dec
fcomi
or
xlat
stos
adc
mov
adc
nop
dec
jl
jle
and
push
cmpsl
hlt
in
mov
mov
xor
fsts
sub
inc
or
cmpsb
push
lahf
push
dec
sbb
xchg
jbe
stc
in
jecxz
dec
rcrb
jbe
inc
adc
out
aas
inc
push
mov
lods
test
mov
lahf
ss
prefetchw
add
push
push
repnz
stc
out
into
sti
jno
pop
iret
xor
add
test
lret
jl
imul
and
mov
mov
cltd
sti
cld
sbb
stc
test
jg
dec
and
jl
jbe
out
lret
xchg
pop
hlt
mov
ret
jb
jbe
inc
leave
subl
and
jb
aad
cwtl
filds
call
xchg
push
das
pusha
mov
in
icebp
mov
xor
or
in
js
decl
pop
sbb
mov
pusha
or
fildll
fdivr
shr
adc
xor
loop
mov
fldcw
push
cli
jle
dec
xchg
test
lods
in
dec
fsubrs
lret
add
mov
add
mov
loope
sbb
loope
test
lahf
fdiv
jl
pop
mov
arpl
dec
outsb
sub
sahf
mov
push
mov
jg
pop
inc
aad
mov
sbb
lea
adc
adcb
mov
push
jge
add
iret
pop
jns
test
mov
fcoml
ja
push
idivl
sbb
scas
mov
daa
sub
mov
adc
xor
idivl
dec
add
mov
pop
out
fcmovu
fs
loope
lahf
daa
xchg
movsb
mov
xor
add
test
xor
movsb
add
aad
pop
sbb
sub
pop
mov
loop
shl
ja,pt
mov
sub
and
xor
mov
out
fstps
mov
fbld
mov
frstor
in
mov
lea
movsb
cltd
imul
lret
pop
test
fwait
cmpsl
jne
and
add
sahf
mov
add
push
pop
and
in
movsl
inc
pop
inc
pop
lock
cs
sub
pop
out
nop
or
es
jecxz
fs
or
imul
dec
cli
sub
xor
cld
or
subb
popa
push
cmp
clc
aam
repz
jle
dec
cld
scas
arpl
fcmovnb
int3
pop
movsl
roll
jmp
sub
movsl
mov
inc
scas
inc
sarl
jne
in
and
cmc
mov
adcb
pusha
test
xlat
inc
stos
lods
push
cltd
mov
repz
mov
jecxz
ret
dec
jns
sahf
fidivrl
lahf
push
push
mov
iret
push
pop
into
fsubs
and
push
test
push
mov
out
sub
and
in
push
or
mov
dec
lock
adc
nop
dec
mov
je
cmpsb
mov
xor
in
mov
xchg
inc
jecxz
dec
stc
pop
rclb
ficomps
mov
push
dec
je
dec
push
pop
xorl
data16
inc
inc
iret
and
dec
dec
push
inc
xchg
xlat
fcom
pop
dec
dec
push
and
daa
js
push
fs
push
scas
cmc
jg
pop
mov
arpl
add
mov
pop
mov
mov
sub
push
hlt
add
cwtd
jl
iret
imulb
mov
lahf
shl
sbb
jl
test
jnp
out
jnp
adc
jmp
push
mov
lods
sbb
fs
mov
cmpb
icebp
inc
cmp
imul
push
test
sub
inc
cmp
xchg
push
std
mov
out
jbe
inc
sarb
pop
jae
dec
jp
push
or
jp
aas
xchg
sub
mov
xor
xor
je
adc
dec
dec
aaa
add
mov
cmp
punpckhwd
lock
into
push
xorb
hlt
inc
jmp
ds
sub
enter
ret
daa
inc
popf
cltd
push
xor
sub
push
roll
cli
add
pop
push
or
aad
or
push
imul
xchg
lods
hlt
fisttpll
mov
movsl
aas
xor
jl
lret
adc
cmpsl
nop
sar
imul
sbb
mov
xlat
or
popf
push
sbb
pushf
add
enter
jns
in
inc
pop
and
push
fcoms
cmp
adc
pop
jo
jnp
ljmp
imul
cmc
mov
std
jg
add
fists
jo
ljmp
in
je
shlb
jp
inc
out
iret
xchg
adc
js
pusha
imul
rorb
mov
jae
mov
xor
ficoml
pop
out
lods
test
cmp
xor
and
cmp
sbb
add
leave
and
icebp
push
sub
ljmp
mov
test
jg
mov
inc
sti
xor
cld
push
adc
stc
movsb
jne
push
sahf
stos
fisttpl
inc
outsl
dec
sti
sbb
shrl
mov
xchg
aad
add
xor
in
aaa
rclb
push
xor
xchg
filds
mov
dec
xor
mov
cmpb
mov
cmp
incb
lods
xchg
jp
jg
out
sbb
add
jmp
mov
sbbl
pop
xchg
es
adc
xchg
push
out
pop
rolb
pop
xor
xchg
cmp
fwait
loop
sbb
sbb
jmp
call
dec
je
js
adc
jecxz
ds
sub
sbb
push
cmp
std
adc
add
sub
cmp
jp
or
test
pop
int3
in
lods
add
inc
inc
mov
mov
enter
and
mov
sarl
mov
sbb
sub
inc
lods
or
sub
add
scas
fstps
fistl
pop
mov
out
cmp
sarl
fwait
movsl
jnp
xor
or
dec
repnz
sbb
fwait
mov
pop
xor
push
int3
cmp
xchg
popa
nop
jnp
stos
sub
pushf
or
cmc
std
movsb
ja
leave
daa
lods
mov
xchg
lret
xchg
call
lcall
mov
js
ds
push
cmp
aas
push
push
pop
add
fnstcw
outsl
std
jl
sarb
fisubs
clc
dec
fidivrs
mov
cmp
std
push
loopne
cmp
repz
jnp
jg
sbb
pop
fwait
movsl
pop
testb
inc
mov
jp
stos
push
adc
mov
inc
mov
popa
test
push
mov
into
std
dec
push
sub
insb
push
movsl
xorl
hlt
jg
mov
pop
call
in
sbb
and
insb
das
add
add
stos
xor
or
push
add
lea
into
sbb
int
sub
cmp
cmp
in
stos
lods
int
add
add
je
ljmp
inc
mov
pusha
test
data16
ljmp
stos
inc
mov
movsl
jb
enter
ds
in
ret
pop
lret
or
dec
lcall
imulb
sub
lods
dec
xor
mov
ds
roll
nop
mov
add
adc
push
pop
mov
or
ljmp
lock
inc
push
jmp
jmp
mov
imul
and
adc
push
cmp
push
pop
not
mov
std
ljmp
mov
jle
pop
pop
or
stc
movsl
inc
and
leave
daa
mov
xor
ficoml
jl
dec
mov
add
cmpsb
lahf
sub
adc
push
sub
mov
push
inc
pop
cmpsb
pop
fisttpl
cmp
inc
jnp
push
stc
xchg
stos
push
mov
push
push
fwait
pushf
dec
xchg
xchg
sub
stos
mov
aad
push
xchg
push
jl
aam
push
jno
imul
in
in
dec
lret
mov
push
adc
add
dec
push
push
inc
jns
lcall
cltd
jnp
cmpsb
movsl
jo
rolb
mov
push
push
dec
stc
testb
pop
adc
sub
pop
ret
sbb
arpl
cwtl
mov
jmp
push
mov
lods
push
cmpsb
fnstenv
pop
xor
add
adcl
fwait
iret
pusha
push
fdivrl
lret
inc
fmuls
jne
dec
jecxz
clc
sahf
test
dec
mov
pop
lret
test
cli
out
notb
movsb
pushf
xchg
fcoml
in
sbb
dec
sbb
push
xchg
in
push
std
ffreep
decl
cmp
iret
ljmp
cli
inc
repnz
push
cmp
fimuls
xchg
cmc
push
out
sbb
mov
sbb
mov
les
out
xchg
fmuls
mov
test
inc
mul
mov
and
in
in
xchg
lea
fldenv
adc
in
mov
cmp
xchg
rcr
mov
into
or
lock
das
add
in
test
ds
mov
inc
jge
mov
es
adc
inc
rcr
shl
jno
shll
outsb
xor
xor
and
adc
jo
push
xor
add
leave
xor
scas
push
jno
ljmp
lret
dec
dec
sahf
inc
lcall
imul
sbb
sub
icebp
scas
add
ja
lds
sbb
nop
popf
pushf
into
xchg
and
lea
inc
lcall
cmp
lcall
xchg
jecxz
mov
fucomp
xchg
stos
ljmp
dec
in
or
adc
xor
sub
inc
cmp
dec
orl
or
sbb
leave
test
in
mov
or
movsl
cmc
aaa
mov
mov
mov
mov
push
movsb
xchg
bnd
or
and
leave
or
and
sub
insl
pop
jne
cs
and
or
mov
ret
mov
and
pop
sub
mov
add
in
inc
push
mov
cmp
dec
mov
mov
pop
dec
xor
out
mov
xchg
or
cwtl
push
pop
mov
out
jo
jecxz
cmpb
mov
jge
push
jnp
data16
push
out
mov
jbe
popa
push
add
mov
cwtl
pop
out
test
pop
and
aas
mov
mov
je
mov
jle
iret
mov
xor
test
ds
adc
insl
movsb
sti
push
and
xor
nop
or
stos
dec
dec
cmp
dec
insb
sub
jae
jns
mov
hlt
mov
cmpsb
xor
or
mov
pusha
pop
imul
jge
jl
or
xchg
pop
mov
push
mov
fisubl
into
cmp
inc
push
iret
fsubrs
sub
lret
fistpl
cld
push
inc
int3
cmc
arpl
push
lret
adc
in
jecxz
jo
adc
sub
add
clc
int
add
insb
shrl
push
dec
imul
into
xor
mov
loopne
stos
xor
add
aas
lock
loope
fdivrs
cmpsb
repnz
or
push
push
jmp
cwtl
mov
fildll
lcall
test
pop
cwtl
xchg
clc
push
mov
sti
aas
xor
xchg
adc
stos
call
adc
sahf
push
push
push
inc
loope
daa
mov
inc
sbb
mov
shlb
push
and
orb
mov
pop
and
mov
inc
fs
or
jbe
imul
in
out
jg
cmp
xchg
nop
adc
popf
adc
xor
divl
xor
cmc
out
adc
in
push
cmp
ja
mov
lret
push
es
ret
ja
clc
or
leave
loop
add
fxch
push
stos
lods
int
pusha
jl
adc
daa
mov
cltd
pop
push
dec
mov
dec
fwait
das
mov
outsl
push
jb
movsb
dec
adc
addr16
cmpsb
nop
xrelease
les
call
inc
or
push
pop
adc
stos
sub
sbb
mov
sahf
sarb
cld
jo
sbb
adc
lock
xlat
mov
pop
pop
lock
mov
popa
add
js
pop
hlt
mov
or
xor
repz
or
add
enter
dec
loop
jo
lret
dec
jg
jmp
push
es
pop
xor
inc
cmovae
sbb
add
sbb
dec
iret
mov
clc
int
pop
fs
ffree
loopne
cmp
and
sbb
iret
pop
popf
cmpb
and
jecxz
sub
cmp
out
add
lret
lahf
and
sti
push
stos
sbb
aad
js
add
popa
insb
lock
xchg
fisubrl
out
pop
pop
outsb
and
fdivrl
divb
movsl
push
adc
arpl
pop
adc
mov
jbe
ret
nop
cmp
xor
dec
aad
xchg
lret
xchg
iret
lea
lods
enter
cmc
add
or
call
mov
inc
test
cwtl
repz
ss
fisttpl
ljmp
scas
adc
loopne
pop
int
xor
adc
pop
aam
pop
push
orb
adc
bound
pop
or
mov
aam
pop
leave
mov
fwait
inc
dec
sbb
fmull
mov
inc
mov
mov
lahf
mov
stos
xlat
mov
push
jbe
mov
imull
repz
mov
mov
or
and
dec
pop
jb
adc
dec
pop
repnz
sbb
popa
ljmp
sahf
jg
adc
int
ficomps
les
xorb
mov
mov
inc
jns
adc
adc
shll
mov
pop
cmc
pop
je
pop
mov
test
in
inc
dec
sti
out
arpl
into
mov
js
repnz
arpl
pop
inc
fisubs
mov
xchg
add
mov
mov
jecxz
fadds
inc
adc
les
icebp
pop
and
add
xor
in
stc
jns
mov
movsb
adc
cli
pop
jnp
out
xchg
add
pop
sar
shll
push
add
iret
sbb
sbb
dec
and
jne
or
dec
add
xchg
add
push
dec
sub
push
out
jbe
out
xor
pushf
test
aad
add
enter
mov
push
insl
test
ret
repz
xor
pop
nop
sbb
xchg
xchg
mov
push
sbb
push
mov
jmp
cwtl
rcr
jae
cmp
icebp
add
lret
mov
lods
inc
pop
push
int3
popf
push
or
in
outsb
xchg
pop
rorb
movsb
add
pusha
dec
mov
lret
cmp
out
je,pt
nop
por
dec
jne
and
in
sub
data16
dec
cld
cmp
icebp
mov
sub
push
mov
xor
xor
or
adc
dec
add
popf
in
add
mov
loope
in
xor
dec
cmpsl
ret
in
cld
mov
xchg
ret
data16
dec
mov
std
fstpt
mov
or
rcl
sbb
sti
adc
out
clc
jbe
pop
fmull
sbb
mov
xor
dec
ret
mov
enter
jb
outsl
rcrb
fdivrl
mov
or
les
xor
imul
lods
std
hlt
leave
sbb
xchg
xchg
int
mov
xor
or
jno
stos
and
or
sbb
sbb
xchg
mov
js
out
data16
into
rorb
jne
nop
std
xor
adc
fs
idivl
push
cmp
into
mov
insl
push
mov
and
and
mov
iret
dec
push
sbb
mov
add
cwtl
dec
es
or
enter
and
enter
sub
cmpb
nop
jns
sub
ja
sarl
adc
adc
stos
popf
imul
push
xchg
dec
nop
inc
mov
rclb
rclb
fsubl
push
dec
dec
inc
rsqrtps
insl
enter
dec
fisttpll
in
dec
xchg
fs
imulb
mov
mov
sbb
mov
pop
ljmp
inc
sbb
xor
sbb
mov
lcall
test
loopne
aam
dec
cmp
loope
hlt
cmc
mov
pop
scas
mov
ljmp
mov
pusha
dec
faddl
inc
push
mov
popa
arpl
or
in
sub
pusha
sbb
or
jns
lods
inc
push
xchg
sub
xchg
insl
dec
push
dec
clc
or
loopne
or
test
xchg
and
aas
insl
lea
adc
add
add
add
xchg
pop
sbb
imul
cli
xchg
mov
data16
xor
out
sub
je
pop
in
mov
inc
adc
xor
dec
inc
hlt
insl
xor
push
mov
rorb
or
iret
dec
cmpsl
pop
xor
mov
fwait
inc
test
int
mov
ret
cld
pop
aam
inc
iret
mov
in
addr16
jne
mov
ljmp
sbb
dec
sbb
mov
stc
xor
leave
lds
or
push
inc
cmp
mov
or
cmp
and
adc
jne
mov
mov
imul
xlat
cmp
mov
fists
arpl
mov
in
lret
or
movb
add
ljmp
lds
and
xor
adc
std
mov
mov
and
daa
mov
lcall
outsl
shll
add
mov
std
cmpsb
xor
or
adc
sar
arpl
mov
push
les
andb
scas
jg
mov
or
push
xor
aad
int3
dec
xchg
adc
into
push
xor
sub
mov
clc
xchg
xchg
jl
pop
pop
leave
inc
shr
jmp
and
or
fnstenv
xchg
loope
inc
iret
sub
cmpsb
xlat
pusha
js
mov
test
jg
mov
loopne
enter
xchg
add
push
iret
sub
jle
xor
cmp
popa
daa
addr16
stos
xchg
sub
fidivrs
mov
mov
cld
in
aaa
cwtl
xchg
js
std
andl
push
or
xchg
cmp
ljmp
push
cmp
loop
fs
insl
mov
mov
mov
add
jnp
cld
xor
inc
cld
stos
xchg
lcall
mov
jecxz
stc
mov
iret
cmc
cmc
mov
pop
and
out
and
jmp
lock
or
push
subl
xor
push
adc
daa
xchg
ljmp
dec
pop
push
orl
sub
adc
mov
xchg
shlb
push
jl
movsb
iret
test
jae
fcmovu
cmp
int3
into
aam
loop
dec
es
test
frstor
mov
stos
jne
out
jae
dec
stc
and
scas
pop
into
js
inc
mov
shl
cmp
and
je
xor
adc
cmp
hlt
dec
test
inc
test
mov
into
jmp
js
cmp
rol
cmp
pop
es
mov
adc
xchg
inc
mov
ja
mov
mov
mov
xchg
jl
and
fisttps
cmp
pop
mov
fisttps
test
mov
mov
mov
insb
and
push
stos
outsl
push
je
or
and
mov
jmp
imul
rcrl
test
out
xor
adc
inc
popa
movsb
sub
mov
pop
mov
ret
xchg
lds
ja
loope
icebp
dec
inc
sub
push
push
add
ffreep
mov
mov
mov
push
cmp
add
stos
sarb
xchg
cmp
shlb
jae
scas
aam
inc
das
sub
mov
ds
xor
sub
mov
fsubl
and
aam
fcomps
dec
mov
xchg
mov
push
insl
stos
dec
add
sahf
inc
ss
loop
add
lret
xchg
movsl
das
clc
icebp
outsl
js
and
xor
daa
call
loopne
xchg
fildll
popl
pop
pop
scas
mov
repnz
test
jne
pop
lret
sbb
out
jg
in
jl,pn
rorl
ljmp
mov
push
or
dec
mov
jg
pushf
adc
xchg
fsubp
popf
adcb
jbe
pushf
sub
xor
cltd
ja
rcll
sub
dec
xchg
xorl
inc
mov
call
mov
test
ret
cmp
push
add
std
xchg
imul
mov
mov
mov
rcll
fists
mov
xchg
pop
adc
rolb
xchg
insl
mov
sbb
loopne
lods
sbb
and
xor
cwtl
lods
lret
push
dec
mov
mov
push
loop
aam
and
push
push
test
loopne
push
jo
pop
shll
jns
and
mov
icebp
cmp
adc
rcl
sub
inc
xchg
jo
adc
mov
or
push
pop
mov
push
mov
inc
aaa
fldcw
jne
clc
out
xor
pop
and
cmp
sub
ss
mov
mov
dec
sub
movsl
aaa
or
stos
aas
push
xchg
stos
jp
and
mov
push
jge
dec
xchg
scas
push
dec
push
cltd
and
jne
popf
dec
test
xor
mov
mov
ret
fisttpll
mov
into
push
xchg
in
adc
rclb
enter
popf
lods
mov
sbb
inc
adc
xchg
ljmp
sub
dec
gs
inc
cmpsl
addl
mov
aam
lcall
pushf
mov
mov
andl
inc
scas
or
cmpsl
mov
sub
xchg
pop
loope
sbb
in
dec
ret
push
shll
fwait
pop
test
enter
fcomps
js
inc
pop
xchg
cmp
pusha
in
fdivrs
inc
mov
iret
push
sub
inc
cmc
jae
sbbb
mov
adcb
inc
out
adc
imul
mov
rorb
loop
std
scas
nop
sbb
jno
in
nop
pusha
mov
rcrl
adc
loopne
test
out
mov
movsl
push
sub
sarl
xlat
lock
mov
xor
test
shl
sbb
fadd
cmp
das
fs
mov
push
lods
cwtl
test
xor
pop
test
imul
pop
inc
out
or
jae
push
mov
shr
sub
mov
cmp
loop
aas
out
mov
xchg
stos
repz
xor
jbe
push
ret
sahf
ja
adc
mov
loopne
lods
dec
cmp
std
dec
repz
pushl
dec
sub
mov
pop
dec
stos
arpl
sub
mov
push
mov
push
iret
dec
cmp
stos
aam
mov
das
adc
fmulp
in
test
mov
mov
sbbb
xchg
roll
ficomps
mov
in
push
mov
dec
mov
lods
test
xor
outsb
sbb
or
test
inc
jle
filds
popa
scas
jae
outsl
int
cmp
inc
inc
inc
pop
jg
jl
mov
leave
mov
loopne
inc
mov
gs
imull
dec
sub
mov
mov
shrl
dec
dec
xchg
mov
inc
mov
cld
sbb
push
pop
das
mov
icebp
fsubs
xor
jbe
add
call
inc
fsubrp
cmc
adc
push
ja
imul
rorb
pop
sti
cmpsb
jb
push
push
ljmp
bound
js
or
ljmp
daa
insl
inc
aad
mov
mov
jmp
pop
pop
xchg
cli
pop
cmp
aad
mov
adc
nop
mov
mov
stos
cmp
insl
das
inc
mov
hlt
mov
sti
inc
add
les
test
jne
ffree
push
sti
pop
sbb
js
fbstp
fisttpl
pop
ds
rolb
mov
fld
adc
cwtl
arpl
fiadds
add
xchg
cmp
divb
push
mov
addr16
cltd
sub
push
pusha
imul
popf
gs
or
mov
cmp
adcb
xor
adc
pop
in
mov
pop
cmp
xlat
lods
mov
push
adc
or
popa
and
outsb
insl
jbe
leave
iret
mov
stos
push
ss
mov
mov
adc
inc
push
bound
xchg
or
notb
jecxz,pt
sub
hlt
jne
pop
cmp
movsl
jl
pop
jmp
ja
or
call
pop
lret
fisubrl
pop
flds
mov
xor
mov
out
ror
ficoms
pop
or
mov
pop
pop
insb
sub
das
add
addl
xchg
xchg
sar
loop
sub
inc
aad
js
fdivs
movsl
sub
movsl
scas
cmp
mov
lods
xchg
fxch
decl
sub
mov
orb
rcll
mov
push
inc
cld
add
fiaddl
fsubrl
pop
dec
jg
pusha
cli
jns
cmp
iret
dec
jnp
adc
sbb
sub
test
imull
dec
mov
dec
scas
push
or
div
mov
push
push
or
mov
popf
aad
ss
repnz
add
jns
xchg
inc
decl
or
xchg
lds
jl
mov
adc
pushf
ucomiss
push
jno
xor
cmpl
out
push
mov
jnp
leave
lcall
inc
mov
xchg
pop
lods
test
stos
imul
divl
inc
xchg
mov
jmp
or
sarl
js
jb
push
repz
xchg
xchg
gs
les
imul
mov
std
mov
xor
cmp
xor
mull
call
in
cmp
sti
fisubl
xor
ret
fistpll
pop
and
mov
fdivrl
cmpsb
addb
jnp
testb
enter
push
jns
add
std
addl
fs
filds
movsl
test
clc
adc
or
push
jge
aas
pushl
fs
add
fucomi
outsb
or
iret
mov
int
rcl
cmp
jbe
fistpl
push
outsl
cmp
out
cmp
xchg
pusha
iret
imul
lret
push
jl
in
loope
std
push
imul
dec
dec
inc
push
xorl
pop
fnsave
mov
jle
and
mov
shl
cmp
fdiv
inc
jp
and
lahf
je
lods
cs
or
mov
and
push
data16
dec
xor
mov
pmaddwd
jae
aam
outsl
stos
fsubs
lret
dec
cltd
loopne
mull
jno
ret
xchg
xchg
test
aad
repz
push
fmuls
push
pop
cmpsb
popa
orl
cwtl
repnz
mov
xchg
addr16
xchg
cmc
cmpsb
out
mov
bnd
ja
lea
sbb
dec
lcall
ljmp
sar
insl
scas
mov
jge
mov
test
and
push
cmc
mov
lds
push
leave
dec
shrl
or
pushf
lcall
in
xor
fildl
xchg
mov
dec
xor
mov
in
xchg
pop
mov
mov
sub
ret
jmp
lods
sub
subl
add
lahf
jl
jae
pusha
sti
call
fs
rolb
in
test
lds
lcall
and
xchg
test
stc
ss
mov
pop
ss
cmp
in
cld
bound
jg
pusha
xor
rol
testb
or
mov
cld
in
daa
enter
insl
add
pop
std
push
decb
inc
cmp
pop
mov
movsb
test
pop
fs
lods
mov
or
sbb
or
mov
lds
adc
in
pusha
add
test
push
stos
or
mov
in
test
icebp
xchg
scas
movsb
mov
pop
jmp
mov
mov
adc
outsl
ljmp
pop
aas
repz
add
push
cwtl
pusha
sbb
jge
ret
addr16
out
int3
sub
add
insb
jg
adc
mov
pop
dec
jns
pushl
inc
push
sub
inc
adc
sub
rcll
push
jne
cld
fisubl
pop
mov
mov
mov
mov
inc
js
add
stos
pop
and
lods
shrl
cmc
jno
in
aaa
push
stos
and
dec
mov
push
out
push
or
jne
cmc
add
dec
pop
lock
jl
int3
and
daa
sbb
pop
push
rclb
aad
lret
mov
push
popf
sbb
fs
pop
push
sub
test
push
insb
fdivrp
fwait
rol
push
and
roll
test
cwtl
insl
push
and
test
call
sbb
lahf
cwtl
stos
or
ljmp
push
subb
sub
lock
mov
movsl
shrb
pop
jbe
sbb
push
xor
or
inc
insb
cmp
sarb
addr16
sahf
into
cmp
stc
out
sti
push
inc
add
fcoml
jo
nop
or
lea
sub
aad
leave
add
sub
repz
mov
add
mov
push
hlt
mov
adc
stos
xchg
sbb
jno
push
mov
and
fcompl
pop
mov
dec
jno
and
and
jmp
jge
mov
pop
idiv
movsb
sub
xchg
jbe
ret
push
jo
popf
cmp
mov
test
adc
jp
adc
mov
mov
je
or
popa
stc
int
pop
movsl
mov
sbb
ljmp
adc
inc
cwtl
addr16
orb
push
aaa
xor
or
mov
or
adc
and
leave
stos
and
idivb
or
scas
xchg
cs
std
add
sti
repnz
xor
cmp
jo
nop
push
adc
cmpsb
inc
imul
add
adc
xor
mov
ss
cmp
rcrl
enter
pop
or
sub
jle
push
mov
mov
pop
push
sbb
fs
addr16
add
pop
inc
fsubs
mov
add
jnp
sub
dec
mov
imul
dec
cwtl
cmp
das
push
sbb
push
cmp
rcr
pop
test
imul
or
shlb
sub
dec
adc
mov
dec
negb
dec
fdivs
xlat
mov
cmc
jb
xchg
cltd
add
cltd
jp
ret
stos
flds
pushf
mov
sbb
xchg
stc
push
roll
cld
sbb
push
xor
insb
sub
jp
popa
leave
cld
sahf
push
movsb
jl
add
add
jo
or
dec
adc
inc
cmp
mov
inc
push
or
mov
push
jns
stos
rcrb
cmp
xor
pop
mov
in
mov
or
cmp
mov
repnz
lds
jbe
add
jmp
dec
add
inc
in
cli
in
sarl
mov
fs
scas
adc
mov
pop
popa
cmp
inc
mov
enter
scas
hlt
hlt
add
cli
jns
aaa
jo
mov
clc
xchg
add
aas
sbb
sub
jecxz
push
mov
dec
movsb
mov
pusha
lds
xchg
push
incb
ljmp
xor
cmc
jle
pushf
fcompl
rcrl
int3
push
ret
clc
cmp
jl
shrl
or
jb
mov
add
and
mov
sub
mov
mov
push
mov
cltd
movsb
leave
xor
imul
loopne
adc
mov
xor
push
je
mov
lds
mov
gs
and
push
js
pop
fadds
or
in
adc
in
mov
lea
cmp
pop
cld
in
shl
in
fdivs
mov
pop
imulb
in
test
lret
xchg
imulb
imul
and
mov
jb
xchg
and
lret
cmp
push
scas
add
clc
push
or
in
xchg
adc
ds
out
into
and
repnz
add
popf
jbe
inc
out
outsb
pop
imul
mov
xlat
or
mov
jne
xor
rcrb
jne
call
dec
ret
jnp
iret
mov
cmp
inc
pop
and
sbb
push
mov
fildll
and
pushf
inc
addl
movsl
mov
mov
test
into
sbb
fstp
mov
arpl
push
iret
cmp
xchg
dec
aam
push
cli
sub
ja
insb
cli
pop
add
cld
cmp
popf
mov
test
sub
mov
aam
lods
repz
stc
jns
jae
add
dec
jno
jmp
andl
daa
daa
inc
inc
jmp
stos
jg
loopne
dec
cltd
xchg
push
sbb
fwait
rorl
mov
pushf
jge
jne
ss
popl
int3
xchg
fs
in
sti
inc
js
std
lea
outsb
pop
stos
je
mov
cli
or
xchg
sbb
es
in
sti
and
or
test
scas
lahf
pop
shrl
xchg
dec
rclb
jbe
adc
xchg
std
push
fistpl
cmp
pusha
push
jbe
outsb
filds
inc
mov
int3
mov
orl
jg
jl
lcall
loope
adc
jecxz
add
fidivl
push
test
dec
shll
shll
adc
pop
mov
cmp
leave
mov
shlb
js
mov
cmpsb
fldl
pop
sbb
push
and
push
mov
repnz
dec
xor
fsubrs
pop
jno
cs
cli
scas
dec
insl
xchg
xchg
sbb
adcl
je
addb
mov
sub
mov
cmp
testl
dec
xchg
movsb
pop
movsb
jle
or
mov
pop
dec
or
and
mov
ja
mov
test
cmp
fs
subl
ljmp
sbb
ds
sub
cmpsb
or
jae
int
and
dec
pusha
pop
push
fsts
pop
pop
sub
das
aam
lret
add
lcall
pop
xchg
xor
pop
cli
outsb
adc
sbb
int
mov
xlat
stos
inc
stos
adc
mov
sub
xchg
inc
jae
fs
sbb
test
push
insb
inc
sti
aad
in
shlb
jecxz
insl
mov
push
and
or
mov
mov
mov
xor
aaa
popf
outsl
mov
out
into
jnp
push
int
imul
push
cld
insb
inc
xchg
sub
mov
out
pop
inc
xchg
sti
arpl
gs
insl
inc
adc
imul
and
mov
pushw
ficoms
ficompl
push
push
fstps
insl
mov
addr16
mov
addr16
mov
cmp
pusha
cmc
jl
cld
out
cltd
icebp
and
mov
mov
mov
add
bnd
or
sub
test
inc
jp
lret
nop
xlat
xchg
xchg
out
lods
ret
arpl
mov
hlt
and
or
and
dec
and
ffreep
xor
jae
mov
mov
lret
leave
add
mov
add
addl
in
je
ljmp
pop
cmp
push
xchg
lds
fidivs
jb
mov
jo
pop
repz
pop
mov
lcall
lret
xor
inc
cmp
inc
mov
sbb
loope
bound
lret
lcall
in
sbb
lahf
lret
hlt
xchg
push
dec
lods
mov
mov
jae
in
pop
aam
xor
in
dec
inc
push
lea
push
jle
insb
xor
add
scas
je
jp
and
xor
pop
jbe
fists
fidivl
cld
cmpsl
mov
xor
pop
dec
aaa
jle
rolb
jns
adc
push
jl
shrl
jb
bound
xchg
std
inc
xor
enter
aad
xchg
xor
cmp
insb
and
data16
into
inc
inc
jno
adc
push
in
inc
icebp
ficompl
jg
hlt
or
mov
xchg
sbbl
cmp
pop
repz
mov
jmp
mov
push
shll
sbb
in
xor
xor
pushf
stc
adc
lock
jo
sub
aaa
jl
ljmp
adc
mov
out
sbb
mov
nop
mov
push
or
dec
sub
je
mov
stos
lahf
movsb
aam
dec
pop
mov
fdivl
jne
xchg
sub
lret
inc
lock
sbb
pop
lret
sbb
jno
mov
hlt
push
or
cltd
dec
mov
subb
jb
int
cs
xlat
xorl
fcoml
push
outsl
mov
je
jnp
mov
mov
stos
fcoms
xchg
or
pop
pop
jae
mov
das
nop
push
add
nop
mov
and
loopne
cli
dec
xlat
std
out
xlat
arpl
fbld
loop
enter
push
push
push
inc
dec
mov
out
mov
std
orb
jne
aad
push
jns
xor
jo
sahf
mov
enter
negl
lret
std
push
or
push
aad
cmp
mov
mov
shr
xorb
dec
fsubl
cltd
sbb
add
pusha
mov
inc
pop
mov
jg
aad
mov
jle
adc
push
jnp
dec
xchg
insb
in
fwait
inc
das
mov
loopne
jbe
add
scas
dec
jno
and
mov
pop
add
call
pop
inc
sbb
adc
fcomps
shl
leave
mov
mov
push
push
inc
aad
mov
mov
or
in
sbb
pusha
test
sbb
lods
ljmp
dec
dec
shll
arpl
aam
sbb
xchg
add
dec
inc
hlt
add
test
jge
dec
dec
inc
fnstsw
and
fnstcw
test
jl
push
or
pop
dec
mov
sub
mov
xlat
js
cmp
enter
inc
pop
push
xor
mov
fcomps
arpl
push
lahf
pop
test
xbegin
pop
mov
out
push
and
sbb
inc
pop
pop
fcomps
leave
dec
leave
jbe
pop
sub
xchg
clc
push
ds
fs
mov
sub
stos
lret
push
cmp
xor
dec
add
or
shll
mov
shlb
adc
lds
inc
sarl
out
mov
jo
int
and
test
add
lahf
xchg
int
xor
xchg
adc
jbe
fidivrs
fiadds
test
dec
sub
das
push
mov
fistpll
pop
xchg
push
mov
xchg
dec
mov
out
cmp
js
or
cwtl
aad
dec
mov
negl
or
test
inc
fxch
f2xm1
mov
ret
mov
or
adc
fstpt
jbe
jno
pop
mov
fstpl
iret
and
dec
cld
subb
stos
mov
add
jp
push
fstpl
fst
pop
inc
push
stos
jo
arpl
nop
mov
xchg
les
nop
outsl
push
shl
lds
sarb
das
jmp
add
ljmp
sarb
add
mov
shlb
and
in
pop
push
inc
roll
inc
fcoms
addr16
sbb
push
scas
jmp
cmp
or
in
ss
lock
pop
cltd
push
lcall
and
dec
add
cs
mov
repz
jne
mov
jecxz
cmp
push
cld
jb
jg
repnz
cmc
pusha
pusha
sub
cli
sub
movsb
dec
mov
mov
cmp
sbb
pop
jae
cmp
in
ret
subb
mov
xchg
cli
sub
or
add
aad
pop
stos
or
into
jae
inc
or
repz
dec
in
push
sbbw
sbb
ds
xchg
mov
and
mov
shll
test
and
xor
outsl
dec
out
mov
push
lret
fiaddl
sub
dec
fmuls
mov
xor
aam
mov
stos
add
xor
inc
sbbb
scas
xchg
lcall
xor
sub
fistpll
jmp
subb
or
out
imul
jne
daa
push
aad
test
mulb
inc
outsl
push
push
stos
ja
jle
and
movsl
imul
sub
lret
test
adc
jae
add
xor
imul
loopne
mov
mov
lret
jno
das
cltd
ljmp
dec
push
mov
bound
cmpsl
rcrl
sahf
inc
sarb
rorl
js
and
mov
cmpsl
insl
bound
mov
mov
lds
sub
inc
jb
das
repz
add
fistps
xchg
movsl
add
cwtl
adc
jno
or
or
pushf
cmpsl
hlt
xchg
or
test
push
fisubl
fdivr
xchg
pop
adc
lret
scas
push
js
nop
insb
dec
outsl
add
addr16
cmp
fimuls
push
jb
sbbb
add
std
inc
push
jb
xchg
in
adc
xor
lcall
mov
inc
add
test
lcall
mov
mov
in
lods
shlb
inc
pop
fildll
sar
dec
test
sbb
sub
cmp
movsb
mov
lods
jmp
push
je
test
mov
test
jno
xor
dec
out
pop
loopne
pop
sar
data16
sub
mov
xor
rorl
mov
sbb
push
lcall
sbb
xor
jmp
or
fcmovb
inc
inc
xchg
cwtl
sbb
pop
cmp
shlb
int3
lods
test
movsl
movsb
add
mov
xor
call
testl
dec
xchg
pop
and
jl
dec
in
cmp
or
arpl
push
test
adc
jbe
jmp
sub
out
sbb
jl
push
sbb
xchg
icebp
stos
clc
inc
and
stos
jmp
daa
popa
nop
pop
in
in
mov
and
lret
sbb
lahf
loopne
and
je
cmpsl
inc
push
sbb
mov
mov
mov
lret
push
je
scas
mov
cmc
pop
int
mov
inc
sbb
mov
pop
sti
cmpsl
adc
adc
fcmovnu
dec
lods
mov
addb
mov
xor
push
or
adc
add
or
test
push
jae
sbb
push
jg
jge
loopne
sub
push
data16
jle
fsubrs
xchg
pop
xchg
and
jge
or
or
std
sub
add
out
push
lahf
mov
and
jne
mov
lsl
insb
fucomip
insb
cmpsb
fstps
mov
cmpsl
cmp
cld
cmp
cmp
loopnew
push
xlat
mov
lock
mov
minps
pop
in
mov
mov
sbb
jns
fidivrl
dec
sti
xchg
mov
int
lahf
mov
into
ret
movd
andps
lret
mov
leave
cs
daa
sarb
or
mov
xor
xchg
inc
rolb
scas
xchg
out
scas
test
iret
sbb
jecxz
sub
add
jmp
mov
xchg
out
shll
jp
cld
cmpsl
sbb
dec
mov
pop
xor
call
xor
mov
sbb
sbb
mov
out
cld
stos
mov
fcoms
out
push
mov
jns
push
adc
call
mov
pop
into
inc
stos
mov
or
negl
mov
mov
and
pop
dec
subb
test
cmp
mov
call
pop
int3
mov
dec
data16
inc
mov
jno
dec
scas
imul
xchg
lahf
loope
adc
pop
mov
lcall
ret
mov
xchg
insl
dec
xchg
push
dec
mov
mov
test
test
sbb
lods
mov
std
loopne
ret
lahf
aad
rcll
cwtl
push
jle
dec
int
xchg
loop
xchg
daa
mov
or
cmp
xchg
loop
lahf
lea
jle
and
bound
inc
adc
or
jg
xor
jno
dec
aad
sub
in
ret
rcrb
and
fisubrl
mov
inc
xor
mov
pop
cmp
iret
out
daa
xchg
test
jno
jns
push
push
xchg
lods
dec
mov
lea
sub
jne
jne
fadds
and
pop
testl
loop
inc
jge
fimuls
xchg
push
dec
push
xchg
or
mov
mov
sub
popf
rcrb
fidivs
mov
add
loope
mov
push
cmp
dec
cmp
push
xchg
add
and
fdivs
mov
mov
into
sbb
out
push
sar
inc
repnz
rorb
arpl
sbb
jae
in
or
pop
pop
mov
cmp
sbb
call
faddp
and
jle
std
jnp
or
push
or
jmp
push
movsbl
or
sbb
in
das
push
adc
arpl
jbe
out
sarb
ret
rcrb
outsl
push
rclb
divl
pusha
ds
outsl
adc
lcall
or
pop
addl
cmp
add
lds
cltd
inc
pop
lahf
cmpsl
jno
mov
sahf
xchg
add
std
pop
int3
aaa
jnp
mov
pop
or
xlat
lahf
bound
shll
cmp
imul
and
push
mov
mov
jb
out
jae
xor
and
xchg
push
fidivrl
fisubs
iret
cmpsb
test
pushf
jp
jne
mov
mov
lods
xchg
sti
loop
mov
and
sub
roll
push
mov
int3
fistps
fnstenv
lret
outsb
push
lea
mov
sub
std
sbb
push
scas
cmc
int
aas
and
sub
mov
mov
dec
sbb
lods
cli
lds
and
sub
push
mov
cli
push
cmc
dec
lods
or
jle
pop
mov
addl
xlat
imul
fisttpll
mov
add
insl
xchg
mov
jb
std
jmp
mov
outsl
or
lcall
and
loop
push
dec
insl
in
out
data16
loope
inc
jne
adc
inc
aad
addr16
xchg
insb
sar
fadds
mov
stos
insl
pop
sbb
scas
call
frstor
cmp
add
pusha
negl
and
xor
cmpsb
sub
xchg
lds
and
or
sub
adc
jge
sub
pop
out
add
or
and
mov
add
mov
iret
jae
pop
xchg
sahf
repz
xchg
xchg
add
mov
test
icebp
xchg
insb
push
mov
mov
outsl
ljmp
or
and
pop
jne
dec
scas
cmp
cltd
insl
push
xchg
mov
repz
je
imul
fwait
jo
in
fwait
mov
push
mov
push
outsl
xchg
rolb
cs
mov
fcoms
jp
jmp
sbb
jne
cmc
aaa
pop
iret
add
stos
ds
pop
push
mov
les
fdivp
js
mov
cmp
dec
sbb
popf
xchg
out
cltd
push
cltd
mov
xor
frstor
add
sub
pop
mulb
in
mov
xor
push
std
xchg
aam
dec
push
cwtl
fnstcw
or
and
je
sub
jnp
popf
mov
add
dec
pop
loope
out
xchg
ret
and
aam
or
fstl
push
push
rcrb
mov
testb
cwtl
das
cs
movsb
dec
sahf
pushf
mov
dec
ljmp
cmpsl
mov
cmp
sub
je
imul
insl
dec
jae
adc
notl
rolb
push
test
dec
repnz
popf
inc
jg
pop
inc
push
out
lods
rorl
sub
filds
outsl
xchg
lock
imul
mov
pop
add
and
add
fisttps
notl
pop
pusha
sbb
xchg
jg
cmpb
push
sub
xchg
push
sub
pop
inc
clc
mul
inc
add
mov
mov
data16
add
sub
stc
sbb
dec
scas
jae
mov
dec
pop
and
push
push
sub
pop
pop
aas
and
inc
mov
inc
daa
aad
popf
cli
je
mov
mov
jl
pop
imul
dec
mov
aad
outsl
stos
outsl
fistl
mov
add
js
mov
xchg
popf
je
shl
jae
incl
or
ds
add
andb
call
xchg
fcmovb
enter
push
adc
imul
lret
inc
ret
and
cmpsl
inc
fldt
jo
ljmp
xchg
xor
jae
or
movsb
jg
push
nop
aaa
cmc
xchg
jmp
xlat
sub
mov
ret
xorb
loopne
stc
fwait
das
jg
push
sbb
mov
enter
cmpsl
popa
pop
mov
sarl
jns
pusha
mov
aam
ja
iret
enter
and
iret
int3
adc
cmp
adcb
ret
mov
push
xor
arpl
xchg
cwtl
enter
dec
test
mov
ror
cld
jp
xlat
jns
push
sub
sbb
bound
adc
sub
dec
fmull
mov
cmp
or
pop
jno
inc
xchg
shlb
add
or
jns
jge
xor
sub
test
dec
xchg
sub
mov
cmp
hlt
pop
add
xor
pop
sub
pop
cwtl
popf
stc
pop
xor
cmp
mov
repz
cmpsb
ja
cld
cmp
mov
daa
or
add
pop
aaa
cs
xor
outsl
or
inc
mov
xchg
adc
js
sbb
aam
and
add
fadds
or
enter
clc
fucom
or
sbb
fmulp
in
loopne
ss
shll
cmp
movsb
push
xor
rorl
clc
inc
push
push
add
adc
cld
cmp
xchg
dec
cs
insb
or
fdivrs
xchg
out
rolb
out
movsl
xor
push
xor
fwait
pop
cmpsb
lods
jae
bound
fidivrl
icebp
cmp
popf
out
mov
jecxz
clc
fucomip
mov
aas
jne
mov
sub
std
popf
shl
cld
aad
lahf
and
adc
mov
adc
cmovs
add
or
stos
sbb
cld
and
mov
mov
clc
imul
js
inc
inc
mov
aaa
mov
or
xor
roll
adc
pop
add
cmp
push
sbb
inc
mov
pop
popa
lock
std
pop
lods
mov
mov
xor
jle
inc
roll
mov
and
mov
and
shlb
aas
cmp
iret
repz
xor
sbb
mov
bound
sbb
scas
imul
fs
imul
subb
aad
push
pop
dec
ret
pop
test
mov
sub
jg
fildll
rclb
sahf
popa
daa
sbb
sbbb
fisubrl
stos
sub
jmp
xor
xchg
shl
mov
mov
sbb
sub
loope
lds
lods
into
dec
shlb
arpl
push
cmpsl
imul
lds
and
xor
ljmp
mov
lds
ret
sub
icebp
aad
imul
mov
add
mov
repz
push
mov
and
or
movsl
jno
inc
push
mov
rcll
mov
gs
and
or
and
jmp
mov
pusha
shlb
mov
cmp
jle
jns
sbb
fs
sub
dec
lret
fisubrl
adc
daa
adc
add
popf
cltd
sbb
adc
mov
mov
add
adc
pop
cmp
push
xchg
in
mov
pop
test
scas
or
notl
xlat
movsb
das
add
inc
xchg
push
adc
xchg
mov
and
xor
js
xchg
lret
dec
imul
jb
sub
lock
test
mov
cli
es
dec
out
push
scas
ja
mov
fidivrs
repz
into
aaa
test
fsubp
xchg
push
shll
es
or
cmpsb
bound
leave
je
imul
nop
sub
cmp
cmpsb
mov
cmp
sbbb
adc
arpl
mov
jl
test
inc
dec
daa
std
mov
xchg
popa
sub
js
insb
insb
daa
inc
gs
and
xchg
vpsubw
rorl
push
out
jge
daa
lret
dec
inc
pop
xchg
sti
push
mov
pop
or
imul
and
pop
jmp
or
daa
pop
and
pop
lea
add
in
xchg
test
mov
adc
sbb
add
lods
and
les
cmpsl
xlat
jne
mov
sbb
mov
mov
ljmp
jno
mov
sub
lahf
int
es
aad
xlat
mov
xor
and
dec
sub
mov
adc
and
mov
sarb
cmp
gs
stc
cld
mov
adc
jmp
pop
adc
addr16
aaa
jns
out
push
lods
sbb
jns
dec
invd
cmp
test
xorb
mov
xchg
mov
popf
mov
xchg
push
icebp
cmc
xchg
mov
enter
cmpsb
pop
xor
jl
leave
mov
sub
push
imul
mov
repnz
cld
mov
mov
gs
and
icebp
loopne
add
jae
xchg
mov
cmp
push
dec
insb
not
inc
sub
and
xor
or
test
sbb
mov
lds
cmp
or
in
mov
pop
int3
mov
sub
test
push
lds
aas
dec
mov
data16
scas
push
lds
in
ljmp
insl
nop
jl
out
cmp
in
in
jp
aam
das
push
mov
or
add
inc
inc
xchg
xlat
movsb
bound
xchg
rcl
fstpt
push
push
into
add
jne
sub
jg
push
sub
add
mov
pushf
int
xor
bsr
pop
push
ret
jmp
xor
dec
fsubr
dec
clc
out
dec
repnz
incl
and
mov
out
pop
outsl
xchg
fs
dec
mov
arpl
jns
std
sbb
inc
imul
aam
repz
mov
lods
inc
icebp
push
mov
adc
xlat
shlb
jl
test
cmp
dec
adc
cwtl
jno
xchg
jnp
cmp
push
and
adc
jl
test
pop
cmp
pop
clts
daa
xor
jle
sub
mov
sub
xor
xor
adc
gs
scas
shrl
lret
add
pop
inc
adc
add
jne
cmp
mov
push
push
push
mov
add
fsub
adc
es
imul
insl
xor
pop
sbb
and
mov
subb
add
icebp
js,pn
cmp
ret
pop
lcall
clc
sahf
jns
push
dec
repz
push
jmp
data16
insl
stc
and
loopne
test
fs
dec
xor
mov
push
sub
fidivrl
sbb
nop
inc
mov
int3
ljmp
mov
xor
mov
in
xchg
in
aad
repz
loop
jle
jp
in
daa
in
inc
movsl
fimuls
mov
sbb
nop
dec
pop
sub
add
mov
in
cmpsl
int3
repz
and
andl
xchg
mov
shlb
fistpl
pop
out
lock
je
icebp
and
sub
dec
scas
fidivs
mov
pop
mov
int3
ret
adc
subb
push
pop
roll
jne
or
sbb
scas
int
iret
xor
int3
sbb
sub
subl
arpl
mov
lods
dec
mov
push
cmpb
adc
push
cmp
fiaddl
repz
fs
gs
data16
xor
adc
lds
xlat
adc
xor
stos
ud2
ret
inc
out
add
cs
xor
fnstsw
add
lcall
fldcw
xor
pop
shrb
jns
rcrl
movsl
push
jp
in
or
xor
xchg
jne
movb
add
jge
wrmsr
in
jo
lahf
jns
ror
fcoms
cltd
pop
or
and
daa
xor
stos
test
cmpsl
mov
insl
cmp
fdivrl
push
imul
jp
out
sahf
and
mov
lcall
int
mov
jmp
sbb
fwait
sub
cmp
pop
and
or
fwait
cli
mov
cwtl
out
ljmp
scas
mov
ficompl
xchg
fwait
sti
xchg
jne
pop
push
mov
ljmp
mov
loope
and
imulb
add
leave
sub
xchg
leave
or
fsub
inc
pushf
push
add
push
stc
imul
or
mov
push
fwait
cwtl
jnp
cmp
xchg
js
iret
xchg
fidivs
mov
and
rorl
inc
fcoms
std
and
out
adc
mov
add
mov
sbb
repz
call
movsb
push
mov
jae
mov
jmp
scas
addr16
push
inc
push
add
jae
mov
jo
jle
cmp
insl
xchg
test
aam
push
mov
rorb
and
mov
jmp
mov
in
jnp
loop
push
jmp
stos
adc
dec
incl
lock
add
mov
cmc
lods
mov
mov
inc
enter
xchg
adc
lds
repz
vpmaddwd
scas
push
rcrl
adc
inc
pop
lods
xchg
rcrb
cmp
sbb
in
insl
cmp
pop
lahf
mov
rcl
push
or
sar
into
xchg
push
js
test
mov
adc
xor
aaa
sbb
adc
nop
ljmp
ljmp
sahf
push
mulb
jl
mov
and
mov
int
imul
stc
into
loop
inc
ret
clc
cs
lcall
inc
loop
xor
sub
loope
sbb
pop
pop
inc
cld
lcall
add
xchg
into
mov
or
cmp
jmp
movsb
outsb
das
mov
push
xor
imul
out
xor
xchg
mov
rcrl
or
dec
jbe
in
fs
cmp
mov
mov
int3
mov
test
rol
mov
inc
fisttpl
dec
nop
testb
adc
cmp
mov
nop
mov
lock
enter
in
mov
fldcw
and
pop
bound
cs
ret
inc
pop
out
xchg
cld
jle
das
test
scas
test
fdivr
leave
push
leave
test
xor
add
cmp
or
out
andb
cwtl
test
jmp
loopne
int
das
and
xchg
mov
fs
push
sub
inc
xor
dec
fdivrl
dec
les
call
or
dec
dec
xchg
mov
gs
insb
nop
jg
mov
push
jmp
and
shlb
mov
in
push
pop
mov
add
sbb
mov
repz
pop
ds
les
jge
mov
pop
xchg
pushf
adc
shl
pushl
push
repz
xor
leave
or
popf
je
xchg
aaa
pushf
insb
out
sbb
mov
mov
sub
in
jns
cmpsb
dec
mov
loop
xor
cmc
cmp
xchg
jbe
mov
cltd
movsb
jmp
dec
mov
or
inc
pusha
icebp
cmp
push
fwait
stos
push
adc
mov
add
roll
in
sbb
mov
cwtl
or
sahf
xlat
lods
mov
fisubrs
cli
fxch
add
sbb
push
mov
mov
test
mov
pop
cwtl
cmpsb
sbb
lods
jl
aas
sub
and
xlat
adc
adcb
jg
aas
in
aam
js
mov
mov
cmp
mov
in
jns
mov
repnz
or
pop
jno
scas
jecxz
dec
addl
xor
push
jl,pn
adc
add
inc
ds
stc
pop
mov
data16
lock
cmp
cmp
cmc
out
xor
sbb
frstor
cmpsb
push
lods
popf
mov
and
aas
iret
lret
xchg
lods
inc
scas
mov
inc
pop
pop
loopne
push
in
das
int
jb
cmp
pop
sbb
mov
setp
cmpsl
and
testl
jl
cli
stos
sub
sub
pop
and
push
xchg
pusha
cmp
and
arpl
mov
out
nop
mov
or
movsl
cmpsb
xchg
test
jae
sbb
cmp
inc
ds
pop
addr16
out
inc
push
xor
mov
mov
loopne
lcall
lret
clc
loopne
fmull
cmpsb
push
mov
fsubrs
add
mov
test
inc
adc
push
adc
add
imul
repnz
fsubrl
data16
loop
adc
mov
sti
roll
lcall
dec
push
daa
adc
or
sub
xor
xchg
int3
iret
lods
idiv
cmpsb
push
fimuls
mov
push
mov
lock
lret
cmp
cmp
test
cmp
cmp
sub
lock
mov
and
loope
je
cli
add
rcr
repz
out
add
rolb
inc
or
mov
mov
movsb
xlat
push
add
mov
inc
mov
xor
jo
cmpsl
movsl
loope
dec
inc
in
mov
mov
dec
fdiv
mov
adcl
bound
pavgb
das
inc
pop
push
ss
mov
xchg
sub
out
fdivr
test
popa
mov
cmp
add
cmp
jns
scas
cmp
addb
jmp
adc
dec
push
mul
call
xchg
lea
cmp
bound
cmp
dec
inc
push
sbb
or
or
xchg
fsubrs
gs
lds
pop
out
lahf
push
push
add
fstl
fs
add
orb
cmp
adc
push
ss
dec
mov
adc
xchg
lret
enter
ss
sti
cmp
out
push
popf
ret
sub
pop
sbb
xor
ss
jg
mov
jne
ljmp
ds
negl
icebp
fiadds
mov
jae
inc
imul
xor
mov
addr16
cmpsl
adc
lret
dec
inc
movsl
and
es
lods
nop
pushf
ljmp
or
and
scas
lret
sahf
lods
dec
movsl
lock
addl
ljmp
jne
cli
jmp
sar
sbb
adc
in
pop
and
aam
stos
dec
jae
mov
adc
fstpl
shll
call
xor
sub
iret
gs
cmc
cmpsl
mov
loop
subb
inc
rcll
les
and
adc
lock
or
xchg
mov
call
sbb
push
dec
outsb
mov
ds
xchg
push
sbb
mov
xor
pop
add
out
ljmp
add
jge
subl
cmp
icebp
and
mov
xchg
addr16
popa
sub
test
sbb
sub
mov
jne
lods
dec
mov
mov
in
aam
dec
pop
popf
out
sub
or
out
imul
loopne
sub
adc
xchg
in
ja
movb
leave
mov
add
popf
lods
mov
test
cltd
jno
std
xchg
mov
clc
test
xchg
stc
je
add
dec
aaa
add
mov
push
cs
push
sbbb
rolb
mov
sub
adc
xchg
xchg
sub
dec
jns
leave
jmp
les
add
push
negb
js
mov
xchg
xor
xchg
pop
xchg
push
xor
dec
push
add
jmp
xchg
cmp
aam
xchg
sbb
or
insb
lods
jnp
mov
test
sti
inc
stos
cmp
add
push
push
mov
mov
xchg
push
stos
jl
add
adc
push
and
cmpsb
push
cmp
out
mov
std
scas
lret
in
rcll
aam
popa
inc
adc
mov
flds
sub
inc
dec
adc
or
mov
sub
je
pop
in
lcall
add
mov
stos
mov
push
fstl
movsb
testb
arpl
test
xchg
lds
call
addr16
std
in
popa
sbb
fmull
mov
sbb
mov
leave
enter
imul
iret
sbb
repnz
mov
pop
pop
movsb
roll
xchg
dec
lahf
push
jns
xor
dec
sub
xor
mov
cmp
add
dec
ror
cmp
add
loope
les
repz
or
jb
lods
sub
outsl
jge
shrl
dec
push
jp
les
jae
fnsave
mov
call
iret
or
pop
mov
xor
addr16
push
jb
scas
or
scas
cmp
hlt
pop
lahf
cli
fwait
push
mov
aas
push
cmp
cwtl
sub
mov
and
fwait
clc
inc
pusha
xchg
call
std
mov
and
lods
fwait
ljmp
xchg
jle
enter
in
inc
mov
cmovns
cmp
call
cmp
or
out
xorl
scas
insl
out
xchg
xor
cmp
and
lock
jne
into
ret
mov
out
dec
jno
sbb
sub
or
jmp
pop
push
out
mov
imul
xchg
imul
add
hlt
aad
outsb
dec
pop
mov
bound
mov
jle
int
push
fs
mov
repnz
mov
faddl
xchg
pop
sbb
mull
das
pusha
cmp
dec
mov
jo
mov
les
and
out
in
icebp
add
fiadds
sbb
imul
push
mov
pop
lret
cld
mov
lret
pop
scas
fstpt
sbb
mov
fstp
or
mov
xor
pop
sbb
imul
leave
inc
mov
stos
or
popf
mov
inc
shlb
mov
pop
out
aas
jmp
dec
loop
mov
or
fs
cwtl
sub
lret
push
out
xchg
mov
push
and
fcomip
repnz
pop
iret
daa
out
or
adc
pop
jp
daa
popf
mov
lahf
sub
adcl
push
sti
or
dec
addr16
add
mov
and
mov
jns
sub
nop
sbb
mov
cmpsb
xchg
or
add
dec
pop
mov
inc
cmp
jmp
adc
jns
in
sahf
hlt
mov
ljmp
inc
push
jnp
jae
je
arpl
pusha
xor
movsb
call
and
aam
test
inc
adc
scas
pusha
rorb
inc
dec
push
xchg
in
fwait
mov
cli
sti
dec
pop
mov
in
pushf
mov
idivb
xchg
cltd
jmp
mov
pop
jns
mov
fcomps
and
xchg
sub
hlt
jae
xor
cmp
lea
fidivrl
js
or
mov
addr16
push
lods
push
inc
and
mov
inc
jns
icebp
ret
push
pop
jp
adc
jg
addr16
cmpl
push
fs
sar
push
xchg
cmpsl
cmp
add
pusha
mov
hlt
sub
jns
pushf
cmp
loopne
in
mov
dec
movsb
jbe
dec
jne
inc
sub
addr16
aas
rcrb
mov
sbb
jmp
inc
adc
mov
jns
ss
mov
ja
stos
insl
xor
testb
pop
test
jge
mov
jnp
and
push
xlat
mov
aas
das
sti
ret
and
sub
pushf
outsl
andb
mov
mov
xor
aad
jns
aas
and
jecxz
jb
mov
in
mov
cwtl
xchg
mov
divl
mov
xor
and
mov
push
lods
sbb
lock
inc
sbb
adc
dec
xchg
jle
daa
popa
cmp
pusha
mov
cmpsb
add
push
stos
mov
xchg
push
xor
movsb
mov
lret
das
pop
loop
adc
inc
stos
enter
fistps
mov
pushf
sbb
push
add
fs
pop
xchg
testb
lahf
mov
mov
push
hlt
xor
stos
loopne
pop
inc
xchg
push
jns
cmp
jb
and
sahf
call
mov
pusha
xchg
push
fcmovnbe
loope
out
popf
ret
and
pushl
sbb
and
mov
and
pop
inc
dec
sbb
or
daa
sbb
rcrl
push
jne
shll
xor
lahf
fsubrp
mov
inc
imul
out
movsb
repnz
insb
adc
pop
arpl
imul
icebp
gs
adc
jns
xchg
fsubrs
mov
add
int3
cmp
adc
inc
dec
adc
sub
pop
pop
inc
stos
push
insl
outsb
jmp
aam
mov
mov
pop
push
lret
mov
cmp
sbb
pushf
adcb
add
adc
and
fsincos
psrad
and
dec
pop
pop
stos
xchg
lret
lods
in
pop
cmp
mov
mov
mov
cmp
lcall
ret
das
dec
cmpsl
arpl
mov
aam
hlt
stc
inc
jg
rorl
jl
loope
add
bound
dec
ljmp
sbbb
pushf
mov
cld
jns
das
outsl
lcall
mov
stos
ret
mov
shrb
pop
mov
adc
sbb
lock
fistl
push
test
inc
icebp
jo
inc
cmc
dec
add
adc
jbe
sbb
or
xchg
inc
and
daa
or
dec
repnz
stos
add
mov
fs
xor
hlt
cltd
rolb
pop
xchg
jae
push
sub
cmp
je
sub
and
ds
cmp
cmp
add
push
mov
out
sub
fwait
xchg
in
jno
popfw
sub
jp
subb
lods
ret
inc
push
dec
sbb
inc
hlt
mov
push
cmp
rcr
cli
mov
mov
or
testl
xor
fstp
movsl
jbe
cmp
dec
stos
ret
adc
enter
rolb
mov
jb
add
mov
pop
dec
icebp
cmp
xlat
push
dec
adc
mov
add
push
out
mov
test
psrlq
clc
or
aaa
test
mov
mov
mov
sub
mov
cltd
pop
test
int
daa
data16
add
jg
gs
fld
mov
in
sub
mov
sub
dec
xor
divb
add
mov
out
test
call
push
popf
call
dec
pop
sbb
xor
and
xlat
lock
arpl
in
mov
push
and
or
sbb
pop
jmp
sub
push
mov
scas
pop
mov
insl
lock
jge
push
ja
mov
inc
inc
pop
fadds
shr
sub
iret
or
sub
push
icebp
repnz
data16
aaa
nop
leave
cmp
mov
icebp
inc
mov
push
adc
xor
popf
mull
dec
push
mov
or
in
xlat
jne
xor
adc
dec
pop
aas
push
xchg
cmc
add
pop
xor
sub
fwait
mov
inc
popa
fidivl
xchg
in
dec
pop
mov
insl
or
jo
cmp
add
inc
and
cmpsl
lea
mov
outsl
movsl
test
dec
push
negl
cmp
stc
repz
dec
pop
mov
mov
xchg
pop
bound
ret
roll
out
dec
fcomps
imul
or
ret
das
rcrb
pusha
insl
dec
pop
in
inc
bound
testl
push
sbb
cmpsb
push
lds
lock
xor
push
adc
mov
mov
addr16
mov
pop
inc
aaa
mov
incb
or
dec
mov
sub
adc
and
jg
jno
inc
movsl
jmp
push
out
ret
adc
iret
fdivs
leave
and
dec
xchg
inc
add
sti
xor
cmpsl
out
negl
xchg
cmp
mov
lcall
jmp
mov
or
adc
mov
test
mov
cmp
adc
je
arpl
leave
jmp
xchg
and
xchg
sbbl
jo
enter
movsl
hlt
ljmp
mov
dec
jb
dec
xchg
in
and
mov
movsl
inc
shlb
or
push
xchg
shl
mov
ljmp
pop
loop
xorl
cltd
xlat
clc
sbb
mov
and
in
je
dec
in
sub
xlat
sbb
enter
les
add
adc
clc
jecxz
mov
and
jecxz
cmp
pop
inc
mov
and
mov
xor
das
dec
stc
sbb
out
scas
nop
lock
aam
cld
popa
jns
aaa
lds
cmp
inc
or
and
push
push
sub
adc
js
clc
sub
sbb
ss
fcmovbe
insl
cwtl
xor
jno
pop
cli
mov
push
cli
mov
mov
fcmovnb
add
sbb
cmpl
aaa
lods
leave
sbb
enter
icebp
inc
jo
pop
cs
movsl
or
leave
sbb
shrb
pop
sub
inc
shlb
outsb
and
and
jmp
xchg
int
mov
jp
or
add
sbb
mov
fstps
pop
xor
divl
sahf
fidivs
repnz
and
inc
lahf
hlt
dec
adc
push
mov
pop
testb
addr16
cli
icebp
sahf
push
js
lea
sbb
ljmp
test
lods
pop
mov
out
mov
sbb
cmp
loope
pushf
xor
fs
sar
out
jg
aam
jl
sub
cmp
and
dec
out
pop
push
inc
push
es
lret
pop
xlat
pusha
sbb
cmc
pop
movl
inc
and
cmp
push
nop
cmp
inc
jno
test
inc
fwait
or
push
mov
mov
jecxz
lods
sub
lods
popf
and
clc
and
ret
mov
sbb
sbb
mov
fmuls
jl
adc
add
mov
pop
clc
or
pop
or
cmp
mov
mov
lods
push
ret
xor
mov
movl
scas
jp
dec
mov
mov
lea
cmp
jbe
leave
addl
cmp
popf
inc
std
sbb
call
mov
scas
add
into
sbb
cltd
dec
call
jecxz
loope
mov
xchg
or
out
in
dec
add
push
sbb
jb
into
sarl
cmpsb
aad
pop
adc
cmpsb
dec
dec
out
test
imul
push
inc
fs
enter
or
out
outsb
hlt
cmp
sbb
mov
sub
and
hlt
test
dec
mov
es
xlat
out
xor
add
xchg
cmpsb
sbb
in
or
icebp
or
insl
out
inc
int3
bnd
sub
shr
cmpsl
inc
lcall
cs
hlt
lock
adc
sbb
int
pop
bound
xchg
jmp
repz
jnp
xor
addl
sub
rclb
and
rorl
pop
scas
and
cmp
jno
insb
call
or
jnp
jle
push
shl
arpl
sbb
jo
js
lea
xchg
add
xor
xor
mov
push
or
pop
dec
lods
mov
mov
mov
xorb
xor
fs
lret
push
idivl
dec
frstpm(287
mov
cmp
or
gs
sub
cwtl
shl
stos
fidivrs
std
out
repnz
aad
jl
mov
xor
sbb
jnp
icebp
push
shrb
cwtl
sub
ret
jne
dec
adc
adc
adc
mov
dec
call
rol
std
roll
ja
xorb
in
mov
call
and
int3
dec
iret
mov
out
push
outsl
fcompl
scas
sub
cmp
je
ljmp
addr16
das
xor
inc
dec
roll
mov
cmc
arpl
sar
sub
pop
sub
cld
dec
add
cld
jmp
les
and
mov
dec
fbstp
movsl
ljmp
jns
clc
cli
adc
inc
stos
pop
inc
sti
daa
adc
stc
sti
jb
add
js
xchg
lods
mov
add
test
or
cmpsl
lods
and
add
insb
mov
pop
jl
imul
les
loop
inc
lea
repz
mov
pop
jmp
subb
cli
sbb
popa
xchg
icebp
mov
adc
jle
test
call
and
push
addr16
xchg
adc
or
mov
push
or
sti
in
aas
cwtl
cmp
mov
sub
addl
mov
and
jle
push
push
orl
add
or
inc
push
push
sub
mov
iret
mov
hlt
adc
pop
dec
jbe
push
cmc
pop
cmp
pushf
and
sarb
es
add
fldcw
sbb
or
in
sbb
adc
int3
insl
xor
push
sarl
stc
in
mov
fimull
arpl
xor
pop
dec
loope
movsb
pcmpgtb
shr
clc
jae
adc
adc
cmpsb
jae
imul
dec
cmpb
xor
lods
repz
ret
test
ds
push
outsl
aam
or
and
jp
outsl
cmp
inc
and
xor
clc
or
call
mov
dec
mov
clc
sub
push
aam
add
mov
push
add
sahf
dec
ds
cmp
xchg
cli
cmp
repnz
pop
pop
sbb
inc
jl
push
xchg
fisttpl
aad
mov
scas
fdivrs
xor
fcomps
aas
pop
cmp
mov
mov
cltd
es
mov
popa
mov
out
mov
out
and
mov
jmp
icebp
mov
and
sahf
mov
iret
xchg
pop
dec
mov
jle
repz
in
pshufw
mov
jno
mov
in
lret
xorb
xchg
iret
mov
ljmp
cmp
mov
mov
jae
sub
xor
es
or
imul
mov
fstp
push
test
or
cmp
mov
dec
es
mov
mov
int3
in
imul
cmp
lods
sbb
test
pop
das
inc
hlt
push
xchg
cmp
test
sbb
in
inc
idiv
ret
bnd
and
sub
dec
mov
repz
pop
jg
mov
sti
cmp
pop
push
mov
es
jl
adc
pop
xchg
pop
inc
jmp
stc
cmpsb
repnz
mov
mov
imul
pop
enter
mov
push
dec
ljmp
sbb
in
sahf
daa
pop
push
adc
je
addr16
in
ret
pop
dec
cltd
cmp
and
ret
pop
pop
jl
xor
in
sub
popf
and
xchg
and
sub
add
sbb
pop
mov
dec
pop
cwtl
pop
sbb
sti
jb
lds
push
adcb
stos
dec
or
popa
cltd
pop
and
cltd
add
pop
test
pop
lahf
xchg
sarb
jnp
mov
mov
adc
or
jae
xchg
test
push
in
cmc
push
nop
int3
push
in
in
andb
out
dec
or
sub
jmp
mov
jg
mov
dec
and
lock
daa
cs
sbb
pop
fwait
cmp
pop
lods
dec
xchg
dec
negb
add
add
xlat
aaa
notb
sub
mov
mov
add
cs
mov
inc
xor
insb
mov
dec
aaa
and
mov
add
add
push
loopne
xchg
cwtl
out
mov
xlat
mov
fnstenv
sbb
adc
jo
insb
es
inc
inc
xchg
lds
pop
xor
dec
xchg
loop
mov
rorl
jmp
dec
add
ljmp
push
cmpsb
xor
clc
jle
scas
lds
mov
mov
rcrl
add
xchg
fiadds
mov
mov
into
push
lock
rolb
jo
cmp
decb
jecxz
sbb
push
xor
je
std
stos
mov
cmpsb
mov
iret
shlb
xchg
mov
pop
push
sbb
notb
push
xchg
add
jge
nop
pop
inc
push
aaa
or
adc
xor
lea
push
movsl
lods
ja
aas
xor
into
repnz
movsb
sahf
adc
or
cmp
movsb
psllw
mov
gs
ljmp
pushf
pop
fcompl
sub
mov
jae
pop
add
out
push
fmul
xchg
mov
mov
add
loop
movsb
xor
mov
cmp
ss
hlt
xchg
or
loopne
pop
mov
inc
mov
mov
xchg
mov
mov
int
inc
push
pop
and
push
dec
out
pop
sbb
clc
cmp
scas
pop
xchg
cltd
push
mov
cmp
push
mov
sbb
jno
mov
xchg
and
ja
inc
adc
movl
cmpsl
push
mul
test
fisubrl
adc
jne
or
jne
insb
ljmp
aam
xchg
bound
push
mov
orl
or
jno
mov
insb
iret
dec
adc
sbb
fmuls
int3
repnz
jp
dec
jns
jle
mov
or
pusha
fwait
addb
out
out
adc
icebp
mov
sahf
rclb
mov
stc
hlt
lahf
in
inc
out
adc
loopne
pop
sbb
repz
mov
mov
fidivs
dec
cmpsl
clc
pop
inc
aam
jl
std
int
movsb
into
or
jbe
stos
mov
lea
imul
fmuls
push
dec
xchg
sub
ret
sub
subl
push
mov
mov
das
cwtl
jo
jge
push
out
mov
imul
stos
enter
xor
adc
addr16
decb
mov
ret
or
je
std
and
ljmp
fwait
lret
aam
xchg
fidivl
sub
xchg
xor
shl
add
iret
popf
cltd
mov
mov
cmc
pop
lds
cmp
fsubr
mov
sub
mov
repnz
adc
das
js
sub
rclb
pop
push
gs
stos
lret
addr16
cmp
loop
test
mov
inc
ljmp
jl
sbb
sub
push
clc
adc
pop
mov
das
in
mov
jg
and
push
mov
dec
lods
xchg
fisubs
adc
ficomps
outsl
cmpsb
sbb
mov
add
xchg
call
xor
push
add
ds
or
fxch
call
ja
push
dec
aaa
test
std
mov
int
adc
or
lcall
mov
popf
test
inc
inc
pop
push
stos
ret
cmp
repz
and
mov
jno
jae
orl
inc
aam
icebp
movsb
push
jae
out
pop
ljmp
sub
and
or
daa
das
add
scas
shll
xchg
pop
icebp
and
mov
mov
pop
xchg
scas
aas
cmp
stos
add
rcll
jmp
cmpsl
div
inc
xor
fnstenv
gs
stc
or
test
jle
jb
test
push
cwtl
inc
cld
pop
xchg
push
pop
jb
clc
mov
sbb
ja
or
cmp
push
notb
inc
scas
das
sahf
cld
push
sbb
nop
pop
stc
or
call
pop
lret
decl
andb
repnz
sbb
daa
aad
movsb
ret
jecxz
sub
xchg
sub
in
cmp
sbb
aaa
cmpsb
push
pop
outsb
mov
les
jl
jae
jecxz
xchg
or
out
into
and
test
mov
jb
aaa
dec
inc
shll
int3
jno
pusha
fbld
outsl
lods
shrb
push
xor
test
mov
in
test
inc
mov
mov
movsl
jns
scas
jnp
shl
add
imulb
and
lahf
sub
clc
mov
mov
popf
aam
andl
pop
cmp
pop
mov
bnd
sub
push
insb
and
stos
push
ret
out
xor
dec
push
sub
mov
push
shll
ja
add
mov
mov
pop
push
sub
pop
cwtl
mov
lcall
push
sbb
sbb
cltd
push
mov
hlt
sub
jnp
push
in
outsb
scas
stos
sbb
stos
sti
push
pop
das
insl
xlat
jmp
or
xor
pushf
mov
mov
fsubp
mov
scas
xor
dec
mov
mov
cmpsl
and
bound
sbb
fimuls
aas
test
mov
dec
mov
jno
in
push
pusha
cmp
scas
movsl
mov
mov
shl
jmp
pop
push
dec
cmc
lret
lahf
out
mov
push
movsb
mov
dec
js
jg
mov
push
xlat
loop
pop
test
inc
fbstp
leave
mov
dec
lods
dec
push
movsl
sahf
loop
dec
mov
std
js
rcll
mov
mov
leave
popf
icebp
js
jmp
jnp
fucom
rclb
adc
lcall
aas
and
adc
fs
xchg
nop
pop
mov
in
outsl
lahf
aad
dec
jmp
xchg
adc
not
push
jbe
xchg
inc
aaa
push
std
sbb
out
pop
pop
lods
mov
push
subb
and
es
push
dec
clc
jge
movsb
xor
sti
dec
dec
movsb
scas
loope
sbbl
mov
int
dec
adc
xchg
or
push
mov
push
fdivl
fisttpl
sub
sbb
bound
popf
sub
cmp
mov
es
enter
loop
outsl
push
cmp
dec
outsb
push
and
mov
out
cs
cld
pop
mov
dec
repnz
pop
push
inc
shl
inc
shlb
add
mov
push
sub
popf
cwtl
mov
fdivrs
push
loope
aaa
and
ljmp
inc
cmp
add
das
and
add
mov
fucom
sbb
mov
sbb
in
or
outsb
cmp
jae
mov
fnstenv
xchg
dec
xchg
mov
and
adc
pop
aas
mov
lock
out
xor
sti
jno
push
div
fimuls
inc
dec
mov
cmpsb
dec
es
jecxz
jne
je
aas
movsl
scas
ret
int3
out
xchg
mov
aam
pushf
scas
jb
cmp
or
xchg
imul
mov
icebp
js
xor
mov
cmc
imul
int3
xor
pop
data16
mov
jle
rcrl
push
jne,pn
jae
popf
arpl
out
inc
jmp
stos
es
xchg
jmp
insb
jb
andb
fbld
add
and
leave
xchg
hlt
scas
mov
push
lds
dec
out
pop
add
mov
adcl
sbb
xchg
jo
jmp
and
mov
lods
rcl
in
pop
into
dec
sti
add
push
iret
out
mov
bnd
inc
sub
lahf
cmp
mov
test
jno
jbe
xor
icebp
mov
push
movsl
push
adc
inc
cmp
pop
fcompl
lds
repnz
mov
add
mov
inc
pusha
enter
mov
mov
sbb
fldcw
inc
stc
xchg
lea
jno
les
ret
fcmovnb
sub
xor
add
ljmp
adc
pop
fsts
stos
loop
lods
test
sub
cltd
cmp
sahf
rol
ror
sbb
enter
out
arpl
aad
fidivl
movsb
shlb
xchg
xchg
add
rclb
adc
mov
add
out
mov
out
decl
dec
out
jo
xchg
mov
jnp
or
loope
fildll
out
aam
aad
sbb
jbe
mov
aam
xchg
sub
inc
dec
cltd
adc
dec
lahf
pop
or
and
inc
dec
stos
xchg
cwtl
cmp
mull
insb
les
imul
aaa
inc
mov
insl
xchg
fmuls
dec
mov
lret
dec
push
dec
mov
out
push
stc
mov
add
ljmp
in
popa
jmp
inc
jp
pusha
pushf
fisubl
cs
cmp
mov
fistps
daa
mov
push
pop
push
scas
mov
leave
dec
test
out
sub
pop
stc
push
inc
dec
push
push
and
cmpsl
xchg
xchg
rcrl
or
mov
imul
pop
addr16
in
test
mov
jmp
jg
stos
lcall
push
xchg
addr16
mov
shl
in
sbb
cmpsb
imull
add
adc
mov
push
xchg
mov
adc
sub
cmpsl
mov
sub
push
xor
sbb
adc
mov
fists
enter
xor
dec
mov
push
gs
cmp
mov
or
push
xchg
mov
jmp
scas
mov
or
adc
jbe
dec
mov
xorl
sbb
pop
cli
ljmp
adc
enter
rolb
stos
mov
dec
mov
and
or
jmp
aad
inc
es
adc
sarl
in
lahf
repnz
lret
js
fwait
pop
sub
inc
cmp
js
cltd
push
mov
dec
pop
push
and
sub
dec
dec
gs
movsb
lock
sub
test
sbb
fwait
lret
xlat
mov
adc
mov
push
mov
mov
pop
pop
xor
pop
mov
clc
sub
fcmovbe
jnp
out
inc
xchg
test
outsl
push
loop
das
gs
aas
xchg
inc
mov
xor
cmp
jno
inc
jp
mov
and
cld
sbb
and
jge
and
xchg
je
lock
fadds
mov
mov
test
jae
out
dec
jp
jbe
xchg
in
inc
pop
jns
popa
das
push
xchg
jnp
outsl
dec
mov
int3
fnsave
push
sbb
sarl
movsb
loopne
clc
popf
scas
xor
jg
mov
mov
jns
mov
mov
movsb
arpl
jnp
enter
and
mov
push
dec
xchg
sbb
push
ja
cmp
cmp
jo
pop
stos
into
insb
icebp
pusha
js
push
adc
loopne
lcall
out
push
ret
and
mov
insl
cli
popa
mov
fcomps
xor
sbb
jle
andb
mov
mov
mov
and
test
lock
add
push
inc
add
scas
cwtl
in
mulb
add
and
mov
out
and
or
negl
xchg
mov
mulb
mov
fs
fwait
je
loopne
divb
popf
xchg
mov
data16
and
and
add
nop
push
lcall
ret
pop
cmp
push
ss
or
xor
adc
jbe
mov
push
xchg
dec
cmc
adc
xor
pop
dec
xchg
cmpsl
adc
dec
dec
lods
mov
mov
je
cmp
leave
pop
movsb
cltd
fwait
mov
aam
xor
push
scas
nop
jae
ret
inc
jle
and
dec
jl
jge
out
lock
rcrl
scas
mov
ret
mov
mov
gs
cmc
je
sbb
jecxz
xchg
jb
movsl
hlt
imul
add
or
xchg
shlb
or
jo
insl
dec
clc
add
in
stos
fcompl
rcl
test
and
outsl
ret
adc
loope
add
mov
sbb
or
xor
push
inc
sbb
dec
xor
lcall
xchg
xor
rcl
cmp
shrl
xchg
int
sahf
cmp
and
mov
mov
mov
mov
mov
das
mov
imul
call
pop
cmp
sti
data16
or
push
or
adc
and
jne
hlt
inc
scas
adc
int
bound
mov
fdivs
add
fdivr
push
or
jnp
divl
pop
imull
xchg
pop
pusha
lods
loope
inc
mov
xor
pop
push
xor
cmpsb
inc
mov
aaa
mov
sbb
into
insl
sbbb
xchg
inc
ret
xchg
xchg
in
inc
inc
cwtl
lods
leave
test
push
sub
sub
sub
cmp
clc
fsubr
sub
scas
dec
xchg
push
bound
movsb
call
sub
jg
dec
addl
outsl
xchg
jmp
adcb
or
pop
xor
inc
push
mov
add
hlt
mov
add
mov
jb
fdivrs
icebp
ja
repz
mov
mov
adc
subl
jecxz
rolb
mov
sub
jae
cmp
mov
push
or
sbb
push
pop
rcl
aaa
aaa
mov
mov
hlt
lret
faddp
scas
cmp
and
and
pop
popa
adc
shrl
inc
jb
into
mov
repnz
int3
sahf
jmp
adc
sbb
jp
aas
inc
cltd
dec
push
orl
stos
inc
push
sbb
lcall
les
orl
dec
mov
aaa
pop
xchg
jl
out
js
js
mov
lds
cli
cmp
ljmp
fisubs
fadd
test
in
test
add
mov
mov
insl
mov
fiadds
or
xor
sub
pop
or
leave
imul
xchg
xlat
xchg
jmp
cmp
imul
dec
pop
test
lcall
ds
push
inc
in
xchg
mov
outsl
call
test
shl
arpl
into
insl
sbb
sub
insl
xchg
in
cmpsl
roll
bound
sub
aam
pop
sbb
scas
adc
push
inc
sbb
jg
fdivr
mov
push
fprem
das
dec
pop
xchg
into
jno
sub
mov
push
mov
inc
ficomps
out
divl
mov
push
or
loope
aaa
sub
in
add
fists
cmp
stc
push
outsb
fwait
push
sbb
dec
add
xchg
lds
xchg
dec
and
popa
add
mov
jecxz
inc
sarl
or
sub
mov
dec
add
adc
imul
int3
arpl
cli
fdivr
pmaxsw
mov
jl
outsl
mov
lock
je
lret
aam
push
popl
sbb
icebp
jge
loope
cmpsl
cltd
push
in
lcall
mov
cmpb
inc
sarl
fwait
lods
cmc
loope
xor
sub
daa
fs
daa
inc
lock
cmp
mov
mov
mov
leave
sbb
push
ret
mov
or
movsl
adc
nop
and
add
stos
xor
repnz
cmpsl
fdivl
insl
dec
cmc
rolb
push
pop
mulb
aad
push
push
lcall
mov
xchg
into
dec
jnp
pop
or
xor
lea
movl
test
out
cmp
data16
inc
jg
xchg
jg
fisubrl
add
lods
mov
adc
insl
loope
xchg
aaa
mov
push
inc
sti
adc
xor
push
mov
jmp
nop
sub
popf
mov
xchg
pop
sahf
sub
mov
mov
sti
jae
out
or
aaa
lret
inc
repz
imul
sbb
pop
mov
lock
std
loop
xchg
fisttps
imul
mov
jns
shlb
std
and
stos
pop
pop
xor
cmp
rorb
rorl
and
cmp
mov
sahf
ljmp
out
adc
mov
pop
lcall
mov
loop
or
insl
movsb
jp
push
loopne
mov
pusha
lods
popa
cs
mov
cwtl
pop
dec
mov
xor
int
ret
scas
mov
notb
sub
mov
push
jbe
addr16
add
jno
out
fdivr
negl
mov
jp
lea
iret
andl
popa
push
mov
add
gs
test
push
fs
cmp
xchg
fisubrl
mov
and
sub
mov
mov
or
pop
sbb
lahf
sbb
mov
inc
les
into
push
or
mov
movsl
outsb
xchg
dec
cltd
daa
test
adc
xlat
sbb
lret
sub
gs
jno
js
test
inc
movsl
jecxz
or
mov
pop
and
test
mov
addr16
jl
clc
pop
in
mov
xchg
clc
sub
clc
fists
out
xchg
adc
repnz
pop
jns
or
cmp
inc
aam
inc
ds
mov
fnstenv
sbb
add
sbb
push
cld
scas
xor
push
jbe
jl
add
jne
inc
add
fistps
add
outsb
xor
movsl
movsb
adc
sub
xchg
mov
push
mov
push
fdiv
add
push
inc
adcl
gs
add
mov
jl
lahf
lds
fidivs
jecxz
push
out
repz
sbb
xchg
and
rolb
imul
cmp
out
and
in
push
dec
xchg
shll
add
nop
cmp
add
outsl
adc
out
sub
cmp
loop
mov
pop
jg
out
cmp
jg
dec
popf
push
push
adc
dec
dec
int3
push
and
cld
push
mov
jb
mov
jg
xor
sbb
int3
loop
cmp
std
data16
xchg
xchg
xchg
repnz
outsb
or
sbb
test
add
xlat
lret
mov
jmp
pop
loop
adc
xor
xchg
or
pop
int
xorb
mov
outsl
pop
adc
fwait
sbb
inc
push
in
aaa
add
jnp
lret
roll
or
ficompl
lcall
scas
add
fstpt
inc
arpl
popa
dec
and
fldl
jae
fs
ljmp
pop
and
xchg
cmpb
in
pushf
pop
cmpsb
dec
push
xchg
out
dec
nop
dec
loop
push
nop
mov
jmp
jl
cltd
roll
sbb
in
daa
or
cmpsl
ret
and
dec
lods
add
popa
and
lret
das
mov
leave
sub
cmp
fcoms
jg
dec
cmp
decl
jge
pop
pop
or
inc
lahf
lret
adc
sbb
aas
in
lret
add
fldcw
adc
jp
int3
sub
imul
lods
insb
test
pusha
test
mov
dec
es
je,pt
add
bound
pop
out
aam
jle
out
inc
mov
jnp
lret
mov
jo
jnp
pop
mov
fsubrs
dec
xor
sbb
add
dec
cmc
push
nop
fistpl
cwtl
and
push
pop
mov
dec
xchg
pop
sub
ja
cmpsb
mov
loopne
sub
in
lret
lods
into
aam
push
dec
xchg
bound
dec
lret
stos
out
frstor
enter
ret
aas
sub
lahf
in
pop
scas
push
pop
push
and
dec
adc
int
fwait
mov
call
push
jo
cmp
adc
fstp
loope
loope
aas
fsubr
sti
pop
mov
popa
or
popf
dec
pop
push
popf
lahf
inc
ret
and
outsb
mov
ret
inc
sahf
imul
loop
imul
aad
ret
cmp
into
fisttpll
jo
sbb
mov
xor
xor
out
xor
xchg
popa
ret
jmp
pop
subl
cmp
cs
out
and
add
xchg
add
inc
fisubs
mov
xor
cltd
xor
int3
arpl
fwait
add
inc
and
or
cmp
addl
inc
lods
scas
fucomi
add
inc
push
xchg
cmp
pop
cltd
imul
add
roll
sbb
loope
sub
inc
dec
cld
inc
pop
mov
mov
call
fstl
test
push
or
dec
or
scas
int3
repz
pop
daa
jnp
arpl
xchg
sti
nop
xchg
sbb
in
std
push
and
jge
sub
add
fwait
outsb
pop
push
or
adc
jns
mov
dec
decb
ret
fcoms
pop
inc
aad
jl
in
addl
xchg
mov
pop
push
aas
mov
xor
xchg
jecxz
push
lret
cmpb
outsb
aaa
mov
jecxz
cmc
int3
xor
cld
mov
in
lret
jnp
clc
cmpsb
aam
inc
xchg
sbb
in
pop
pop
adc
or
push
pop
cmpsb
mov
daa
aas
and
add
mov
inc
push
jl
insb
cmc
push
xchg
scas
jne
scas
sub
ficomps
sbbl
mov
fisubs
out
or
xchg
jg
jecxz,pt
ljmp
cli
fisubrl
push
enter
and
popf
mov
mov
mov
mov
sbb
jle
jecxz
dec
enter
js
add
jmp
or
xlat
and
mov
lahf
call
pop
xor
mov
out
dec
xchg
lahf
dec
lock
inc
pop
dec
jne
adc
push
loopne
cmp
addr16
rol
fsubl
incb
mov
add
mov
push
pop
jge
pop
jp
enter
fld
add
lea
or
xchg
mov
daa
push
arpl
jecxz
mov
jl
repz
movsb
outsb
ret
mov
mov
mov
jecxz
divb
lods
pop
fimuls
jmp
mull
sahf
popl
lcall
xchg
fmull
fcmovbe
add
adc
sub
insb
into
daa
mov
cmpsb
orb
cmp
mov
dec
daa
mov
add
pop
inc
push
call
test
push
jno
mov
test
or
cs
pop
mov
into
xorb
mov
repnz
cmp
loope
xchg
fstpt
pop
xlat
mov
jbe
dec
jecxz
pop
es
sub
gs
shrb
push
pop
xor
adc
loope
lahf
rolb
inc
fwait
pop
mov
aam
rorb
cmp
lea
sub
dec
dec
dec
stos
ret
xor
dec
mov
rcrb
add
xor
cmp
mov
push
mov
jae
xor
adc
out
lods
jns
mov
jg
sbb
popa
xor
sub
mov
test
mov
inc
repnz
popa
fs
cmpsb
or
xlat
fildll
inc
pusha
dec
add
outsl
mov
pop
cmpsb
sub
sub
mov
push
push
or
cmc
dec
adc
mov
add
nop
jns
fsts
sbb
aad
push
jno
dec
movsb
cmp
push
mov
inc
mov
cli
push
shl
data16
mov
les
push
mov
push
jecxz
fidivs
cltd
pop
jp
cmpsb
imul
repz
cmp
popa
cmp
es
dec
fisubrl
or
into
xchg
mov
fmul
jbe
in
and
add
inc
jle
leave
fmulp
and
out
mov
into
ret
lcall
push
xor
imul
mov
xchg
test
jne
nop
push
fdivrl
sbb
je
push
xchg
ss
ja
sbb
pushf
hlt
cmp
fcomps
shl
jbe
mov
push
xor
cmc
dec
pushw
ds
xor
pop
cmp
push
cmp
cmp
pop
xchg
lods
out
imul
insl
jmp
pop
in
cmp
dec
adc
and
jb
lahf
in
mov
sub
movsl
jecxz
xor
jo
loopne
repz
or
xchg
aaa
and
sub
pop
adc
sub
movsb
aas
adc
adc
xor
repz
fnstcw
pop
rolb
idivl
or
out
mov
push
add
repz
mov
pop
filds
sbb
push
fimull
jno
sti
incl
out
sahf
fimull
lods
repz
scas
push
jno
xchg
jle
pop
shlb
imull
add
in
mov
sbb
add
das
mov
jo
test
negl
pop
into
pop
jl
adc
hlt
int3
jbe
inc
pop
pop
xchg
mov
imul
cmp
pop
xchg
mov
les
mov
lcall
pop
mov
pop
bound
xchg
outsb
dec
icebp
xchg
adc
pop
int
lock
stos
sub
scas
std
adc
repnz
xchg
mov
js
out
jl
fldt
in
push
jo
sub
jecxz
lods
mov
xchg
jae
add
gs
xchg
js
xchg
stos
movsb
xchg
cmpb
ret
imul
std
xor
cwtl
scas
inc
stos
xchg
bound
sub
bound
push
loopne
in
repnz
pop
sahf
sub
inc
ss
loopne
push
shr
or
fmuls
dec
leave
vpavgb
pop
mov
fimuls
scas
mov
lret
and
and
popf
in
push
into
xchg
xor
jl
rclb
mov
lock
xor
rcl
mov
repnz
or
jmp
adc
fistl
xor
loopne
inc
dec
enter
out
xchg
arpl
fisubrl
psubsw
icebp
mov
bnd
and
add
push
test
cmc
cmp
je
sbb
mov
test
jns
jb
icebp
sbb
sbb
or
push
and
in
mov
js
sahf
ret
lock
add
cmpsb
jle
scas
in
dec
add
insl
sbb
imul
cwtl
out
enter
sbb
aas
into
jbe
gs
inc
pusha
jb
ret
das
lods
sub
shr
jle
ljmp
negl
test
jns
arpl
mov
and
xchg
mov
jecxz
dec
add
push
pop
inc
mov
fisubrl
sbb
pop
lds
fcmovu
xchg
pop
mov
not
xorl
outsl
fs
jle
dec
filds
leave
xor
xchg
sbb
cmp
inc
out
xchg
icebp
xchg
mov
or
mov
jge
mov
fmull
push
cmp
aam
mov
js
ret
js
inc
ret
xorl
icebp
icebp
mov
or
les
add
adc
popf
xor
loopne
cmp
idivb
dec
xchg
push
adc
ret
aam
pop
out
int
mov
hlt
fiaddl
hlt
jle
lahf
cld
stos
insb
pop
test
push
lahf
push
mov
lcall
stc
out
sub
jne
jns
jp
jecxz
or
add
fsubl
mov
jmp
cs
bnd
test
ds
mov
adc
test
dec
push
pop
loop
pop
lods
jge
iret
loopne
jg
in
and
test
ds
sbb
test
bound
fwait
mov
insl
adc
cld
hlt
movsb
lds
lret
push
movsl
pop
xor
nop
mov
jb
xchg
inc
dec
or
dec
aad
sbb
lcall
jmp
and
cltd
dec
inc
bound
sbb
or
inc
movsl
jnp
out
inc
sahf
cmp
js
sub
mov
insb
mov
clc
push
dec
xchg
adc
jns
inc
or
mov
daa
jo
mul
pop
ja
loopne
pop
sub
std
ret
or
xchg
dec
sbb
pop
fisttps
dec
push
outsl
repz
cmp
pop
sahf
movsl
cwtl
or
jnp
add
and
fiadds
iret
outsb
hlt
pop
and
cli
push
leave
pop
adc
mov
sbb
sahf
insb
ficoml
mov
sbb
out
outsl
ljmp
xor
fidivrs
dec
lcall
adc
aaa
outsb
jg
int3
movsb
dec
lods
out
xor
mov
jmp
add
xlat
add
push
icebp
dec
mov
roll
jnp
xchg
in
sbbl
mov
add
mov
lods
add
pop
loopne
in
push
imul
mov
clc
leave
pop
xchg
cmp
mov
ja
out
and
mov
push
add
es
push
pop
xchg
into
jecxz
inc
and
sbb
jl
ja
jno
mov
fsubl
je
jae
loopne
loopne
cltd
ret
push
test
sbb
nop
aas
push
imul
test
mov
out
pop
lret
call
std
dec
cmpsl
scas
daa
popa
shl
das
addr16
les
pop
mov
test
and
stos
jl
ret
adc
mov
xchg
xor
cmc
xchg
sbb
into
push
jmp
lret
out
fnstsw
xchg
xor
sbb
xchg
aad
clc
mov
lcall
xor
sbb
xor
nop
xchg
dec
xchg
mov
cltd
sti
xlat
out
scas
pop
push
dec
pop
imul
inc
inc
add
pop
xor
fmul
and
xchg
out
cmp
fildll
sti
decb
icebp
mov
inc
imul
les
fnstcw
and
cli
fs
mov
push
popf
lock
outsb
lret
aas
cmp
push
jle
ljmp
pushf
jl
loop
jns
cmc
jle
xchg
movsb
lock
ljmp
adc
cmp
and
jbe
cmpsb
mov
roll
shr
mov
inc
ret
stc
ficompl
addr16
das
fistpl
aam
mov
ljmp
enter
jecxz
stos
cmc
adc
mov
lahf
jl
ljmp
jg
sbb
out
out
cmpsl
pop
sub
mov
and
sti
cs
popa
xchg
lret
sub
mov
negb
sti
mov
pushf
popf
idiv
jno
fidivl
inc
mov
mov
cmp
sub
ss
test
cmp
fbld
mov
lds
sbb
push
xchg
xor
jp
add
leave
mov
sub
lods
mov
test
mov
mov
pusha
iret
imull
mov
fldcw
movsb
cmp
aad
mov
popf
imul
lods
jo
loope
lea
ja
movsl
xchg
outsl
mov
negb
sbb
or
sbb
mov
inc
sub
push
sub
cmp
stc
fisubrl
out
mov
mov
adc
dec
repnz
mov
sub
cmp
push
push
add
push
add
je
mov
xchg
into
nop
mov
inc
mov
stos
mov
xor
mov
jae
clc
sbb
push
inc
mov
pop
or
js
cmpsb
pop
inc
shlb
int
xchg
loope
fdiv
daa
cs
cmp
jbe
lock
adc
je
pop
enter
add
pusha
xor
pop
lds
aas
lock
push
in
mov
and
mov
xchg
sbb
pop
es
mov
inc
mov
pop
ja
fwait
lds
ret
repz
inc
imul
fldcw
adc
mov
cmp
or
mov
add
stos
das
stc
add
pop
xchg
nop
cmc
mov
stos
inc
push
ja
lcall
push
icebp
jg
add
cmp
imul
scas
mov
sbb
fnstcw
mov
xchg
clc
mov
jbe
mov
dec
gs
xlat
pop
outsl
pop
ja
fdivp
es
push
or
mov
jae
jae
push
aad
daa
pop
mov
push
pop
or
xchg
call
fldt
mov
mov
push
lcall
add
popa
adc
pop
int3
or
imul
in
sub
das
icebp
bound
loope
es
stos
xchg
mov
dec
lret
cmp
fcomip
inc
sub
ret
sbb
jno
rcl
data16
mov
movsb
add
lret
ds
adc
imul
jbe
mov
ljmp
daa
icebp
cld
pop
cmp
ret
sbb
repz
ja
scas
push
and
push
in
lret
push
lock
fsts
imul
cltd
clc
test
aas
in
add
mov
mov
cmp
mov
cwtl
clc
addr16
xchg
sarb
stos
sahf
push
imul
aas
inc
add
int
mov
movsl
movsl
jno
cmp
jecxz
shr
mov
in
adc
xlat
and
fidivl
mov
mov
in
in
jne
dec
mov
push
pop
sub
cmp
fildll
xor
xor
jle
jb
cmpsb
cwtl
ficoml
fidivrl
out
cmp
jnp
aaa
sbb
out
jns
fcom
faddl
imul
and
cmp
jmp
fmul
pop
in
add
lahf
mov
pop
jb
cld
jge
orb
xchg
daa
pop
mov
cmp
sbb
pop
adc
pusha
stos
adc
fs
push
mov
and
rcll
push
stos
lds
push
sub
cmp
out
push
aaa
or
sub
mov
adc
test
rcll
jbe
movsb
mov
ja
movsb
sar
mov
add
fdivr
mov
xchg
inc
lock
mov
pop
xor
mov
xchg
sub
push
or
or
mov
outsl
sahf
jecxz
dec
sbbb
inc
lds
imul
aaa
fsubl
imul
push
into
xor
movsl
je
or
add
jl
cmp
push
jb
or
imulb
lods
pop
pop
popa
sets
dec
inc
mov
ds
lock
jns
push
rol
mov
cmp
mov
test
jg
push
test
mov
dec
cs
jmp
add
imulb
nop
pop
push
les
inc
mov
mov
xor
dec
mov
int3
cmp
adc
pop
push
dec
cmp
mov
fstpt
mov
out
sub
push
mov
lock
pop
sahf
sti
mov
test
fildl
cmpsl
insl
mov
stc
cld
repz
movups
inc
xor
pusha
xor
inc
dec
ffree
shl
call
and
cld
cmp
cs
gs
xchg
and
arpl
bound
scas
mov
rcr
push
push
mov
movsl
mov
fcompl
test
lret
fcompl
iret
mov
xchg
mulb
out
mov
jecxz
xor
jecxz
mov
push
cmp
clc
cmp
icebp
push
jecxz
es
dec
popa
loopne
dec
inc
mov
inc
sbb
mov
mov
cmp
in
mov
shrb
sub
xchg
les
jno
iret
in
leave
inc
jg
popf
pop
nop
aas
inc
imul
jo
int3
xchg
icebp
push
bound
in
ja
push
iret
movl
fs
jns
jae
lods
out
mov
mov
mov
bound
mov
dec
jo
inc
jbe
xchg
cmp
addr16
sub
xchg
cwtl
pop
ficoml
out
jb
mov
insb
jle
daa
sbb
outsl
sti
in
add
sub
lods
in
adc
testb
orb
dec
pop
mov
dec
and
in
push
out
rdpmc
loope
pop
dec
jb
js
dec
pusha
mov
adc
dec
aad
cmp
int
push
add
inc
cmp
adc
ret
sahf
fdivrs
jecxz
cmp
pop
ficompl
push
ljmp
fwait
std
jecxz
gs
or
sub
push
outsl
jns
xchg
pop
fldcw
jnp
enter
or
mov
shl
aaa
fs
out
ja
jp
insl
bound
jno
outsl
in
push
pop
shlb
dec
outsl
icebp
mov
cs
or
lods
cli
push
push
dec
subb
out
shrb
mov
dec
add
imul
lret
outsb
icebp
out
shr
movsl
outsl
push
cwtl
adc
daa
jne
inc
inc
sbb
sub
pusha
cmp
adc
out
cli
xchg
sbb
sbb
xorb
sub
adc
flds
pushf
jbe
cwtl
pop
shll
je
mov
fisttps
pusha
stos
pop
jecxz
mov
xchg
sbb
add
dec
xchg
mov
mov
xchg
and
aam
lea
pop
mov
add
loope
aaa
int3
xchg
sbb
jmp
inc
mov
push
adc
imul
xchg
add
std
pushf
pop
and
dec
aaa
adc
mov
add
test
push
sub
dec
lds
adc
lahf
lods
test
cld
leave
inc
cmp
imulb
xor
arpl
inc
andl
fmul
mov
sbbl
mov
jle
dec
and
jbe
daa
popf
jnp
dec
das
or
inc
lea
cmp
stos
mov
and
mov
and
ret
push
repnz
clc
stos
xchg
adc
push
aam
push
xor
imul
dec
or
pop
loopne
popf
jl
dec
pop
lods
inc
dec
leave
push
movsl
les
cmc
mov
in
imul
xor
cltd
adc
xchg
cwtl
xchg
sahf
lret
mov
xor
fsubrs
mov
add
mov
mov
cmp
mov
mov
sti
imul
or
cli
scas
cltd
hlt
sbb
add
test
mov
push
fcmovnbe
aam
in
fiaddl
xor
and
lock
xlat
adc
lock
lock
lea
xchg
sar
adc
nop
xchg
jo
arpl
jno
mov
lods
dec
adc
pop
mov
nop
mov
jae
data16
aaa
adc
and
js
fwait
ljmp
push
outsl
shlb
in
mov
in
icebp
rorl
daa
sbb
sub
pop
jecxz
xor
add
inc
pop
testb
loop
mov
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
ljmp
addr16
and
adc
cltd
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
jg
inc
push
xor
cmp
sbb
bswap
pop
xor
mov
loopne
and
add
push
pop
jno
sub
push
pop
repz
sub
ljmp
cmp
scas
and
adc
lcall
jmp
pop
add
lods
insb
gs
fbld
push
es
lds
sbb
cmc
rorl
call
mov
pop
pop
sbb
dec
hlt
aaa
js
scas
cs
adc
insb
adc
mov
xchg
xor
pop
psubusw
push
scas
cmp
jg
dec
push
push
add
jns,pn
xchg
insl
ja
scas
push
xchg
insl
jno
cmp
jns
addr16
aaa
xor
inc
and
cmp
inc
push
ds
scas
and
add
cmp
scas
and
adc
arpl
jns
orb
xor
ljmp
jns
orl
xor
scas
movsb
jns
xchg
or
cmp
imul
jbe,pt
xor
scas
and
adc
pop
xor
mov
ja
inc
dec
ja
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
or
out
cmp
scas
and
pop
xchg
js
loope
imul
or
cmp
or
or
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
cmp
jns
xchg
adc
sarl
xlat
xor
dec
mov
xchg
add
cwtl
and
andl
cltd
push
lret
insl
fs
pop
add
pushf
push
xor
mov
or
jae
shll
jb
clc
sbb
ja
scas
dec
notl
addr16
shll
mov
sub
std
and
xor
or
hlt
mov
fdivrl
test
push
in
mov
mov
or
cmp
adc
pop
jne
mov
in
js
scas
stos
decl
outsl
jle
xor
in
arpl
mov
idivb
sbb
dec
or
out
out
mov
rol
rcrb
fnstsw
idivb
rol
lahf
xchg
sub
fucomp
rcr
add
xchg
mov
pusha
fisubl
ss
push
into
out
dec
fld
pop
clc
cwtl
xor
rcrl
inc
sub
push
push
ja
dec
inc
add
icebp
lcall
out
inc
sub
xchg
mov
fdivs
xor
jg
inc
sub
stos
sarl
adc
cld
aam
mov
push
scas
mov
sub
and
subl
xor
ss
repnz
call
xor
hlt
push
dec
inc
xchg
dec
mov
rcrb
sub
xlat
or
sub
add
ljmp
jo
xchg
jmp
or
push
loopne
inc
mov
out
popf
scas
popl
jle
clc
dec
cs
test
jo
sbb
jg
inc
cmp
icebp
int3
cmp
cmp
ja
fisubs
cmp
call
into
cmp
mov
js
stos
scas
jno
xchg
inc
in
cmp
cmp
fiadds
push
push
xchg
cmc
pop
mov
cltd
insl
push
les
fdiv
iret
cmp
fsubrl
scas
pop
popa
cmc
add
jne
lret
hlt
mov
lods
dec
lea
adc
pop
jg
adc
out
imulb
xchg
sub
std
sti
stc
xor
hlt
adc
cs
inc
or
dec
jnp
push
add
xchg
dec
xchg
sbb
mov
sbb
sbb
cmpsb
add
dec
mov
and
shlb
xchg
add
seto
jb
pushf
outsb
jl
mov
fisubrl
adc
ret
in
push
dec
das
adc
mov
sbb
into
jmp
jle
loop
fidivrs
enter
xchg
outsb
stos
xor
mov
cltd
popf
test
jg
pop
cli
daa
in
insl
ret
mov
fsubs
jle
inc
lea
test
es
mov
push
xchg
std
imul
insl
push
shrb
cmp
inc
insb
icebp
shrb
pop
out
xor
das
cmp
in
dec
and
shll
testl
mov
ret
fucomi
pop
dec
cmp
mov
pop
icebp
into
aam
and
hlt
or
out
cmc
mov
mov
sub
xor
out
in
add
inc
daa
xchg
loop
push
xchg
imul
call
cmp
sti
es
inc
cmp
sbb
repz
je
inc
fsubs
fmull
fisttps
imul
loop
mov
pop
and
cmp
pop
icebp
sahf
leave
imul
inc
xchg
xor
fwait
xlat
in
ja
les
mov
xchg
push
test
lds
adc
mov
flds
lret
xor
cmpsb
rol
and
cwtl
xchg
add
push
pusha
push
mov
fildll
subl
dec
ja
mov
jecxz
or
sbb
and
sub
rolb
shrb
daa
mov
adc
mov
push
or
outsb
jmp
or
sti
pop
mov
daa
imul
aaa
pop
sub
inc
outsl
sub
push
pop
pop
pop
adc
mov
push
lea
adc
aam
push
mov
int3
mov
adc
fdivp
jns
mov
jecxz
xlat
mov
dec
or
mov
or
dec
and
lods
adc
inc
jne
daa
test
dec
xchg
lods
cli
mov
mov
inc
lcall
das
xchg
imul
dec
lcall
xchg
stos
mov
pop
jmp
inc
cli
xchg
lods
ja
dec
push
sub
xor
mov
lods
mov
jnp
sbb
mov
inc
cmpsb
jmp
sub
xchg
push
mov
sarb
xchg
jg
arpl
and
sub
in
sbb
xor
pop
sub
push
in
nop
mov
push
inc
mov
xor
loop
jo
push
mov
ja
int3
rclb
mov
push
mov
adc
mov
push
add
loop
je
aad
rol
mov
xor
adc
add
out
icebp
mov
adc
frstor
lcall
std
cli
xchg
push
filds
jl
sti
and
loopne
sub
add
jnp
push
cmp
add
mov
leave
xchg
add
fnstsw
mov
in
lods
popf
imul
das
mov
sub
push
pop
in
jmp
dec
or
cmp
adc
sbb
adc
cmp
fucomp
inc
push
test
test
data16
inc
aad
xchg
xchg
dec
in
sbb
shlb
out
scas
push
popa
lods
outsl
inc
push
out
cli
pop
testb
mov
insb
andb
and
xor
xchg
cmp
inc
cld
jecxz
add
sti
ja
mov
mov
dec
mov
jne
jl
fwait
dec
loopne
jl
popa
aas
int3
jmp
xchg
sub
jae
inc
imul
out
cmpsb
sub
adc
and
pop
repz
scas
xchg
sub
sbb
cmpsb
push
pop
add
xchg
in
jo
movsb
xor
jmp
push
imul
fldl
add
jbe
insb
xchg
xchg
ljmp
orb
mov
push
nop
pop
stc
mov
dec
mov
pop
add
movsl
popf
xchg
mov
push
mov
inc
and
cmp
pop
jo
jl
mov
ds
ja
mov
sub
or
fwait
mov
pop
dec
clc
insb
xor
stc
cmp
sbb
repnz
add
lock
mov
out
sub
je
push
push
push
aam
push
and
lods
inc
ljmp
ret
xchg
and
xlat
adc
jge
mov
bswap
jl
mov
subl
inc
mov
jmp
lea
loope
out
sub
jae
mov
adc
hlt
mov
xor
imul
inc
xlat
icebp
push
sub
inc
cmc
pop
loope
sahf
sbb
xor
stos
adc
adc
jge
sub
sub
cmp
and
stos
test
push
sbb
mov
imul
or
jmp
int3
xchg
sub
stos
loopne
dec
cmpsb
les
out
cmpb
repz
or
sbb
or
jo
int3
rclb
cs
aas
repz
inc
out
lods
lods
dec
dec
jl
pop
jg
cmc
push
mov
jp
out
fwait
pusha
jae
mov
adc
ficomps
dec
dec
in
push
pop
jns
xor
push
cmp
jbe
or
bound
lods
out
push
lods
inc
gs
orb
jge
dec
pop
inc
pop
cli
outsb
fsub
gs
out
iret
pushf
mov
mov
inc
mov
xchg
loope
xchg
jmp
sbb
lds
or
add
sbb
xchg
movsl
inc
ret
shlb
push
push
sbb
cltd
aaa
cltd
adc
arpl
sub
ds
cmp
push
mov
rcl
movl
ljmp
cmc
lods
stos
pop
cltd
lret
mov
cld
or
pop
rorb
or
sub
shl
mov
or
fwait
jbe
pop
cmp
or
pop
sahf
cmpsl
ljmp
gs
movsl
nop
addr16
or
cld
inc
movsl
xchg
loope
push
cmp
xchg
aad
adc
xor
add
pop
or
jns
cmp
lds
fiaddl
aad
shrb
movl
sub
adc
add
loopne
cltd
in
cli
lock
and
int3
pop
cli
xchg
mov
xchg
xchg
test
add
xchg
cmp
push
jbe
xchg
push
cwtl
xlat
popa
adc
stc
stc
pop
cmpl
jge
out
icebp
pop
cmp
cmp
jnp
inc
mov
inc
in
mov
jne
outsl
scas
imul
xchg
neg
pusha
lahf
in
xor
ds
icebp
imul
add
mov
pop
xchg
mov
xchg
div
or
mov
rcrb
xchg
aaa
mov
jns
and
add
cmp
push
jge
bound
xchg
pop
test
mov
push
in
repz
leave
ror
sbb
testl
ljmp
sbb
mov
repz
push
jo
lcall
add
fwait
sbb
mov
inc
inc
or
jo
adc
imul
andl
add
push
test
cmpsb
fwait
mov
xchg
xorb
into
jno
shll
int
cmp
out
lods
cmp
push
or
inc
sahf
fnstsw
cltd
push
add
pop
adc
scas
pop
and
cmp
ds
sbb
ss
add
mov
jo,pn
js
imul
fldt
and
loope
outsl
sub
dec
clc
fcomps
ja
das
mov
sub
les
dec
in
jb
inc
jno
mov
cmp
enter
mov
fldenv
fcmovb
outsb
out
aad
mov
pop
enter
stos
mov
jmp
cli
out
mov
pop
ljmp
cli
xor
adc
mov
bnd
leave
mov
pop
or
fldt
inc
andl
mov
out
pusha
sub
iret
sbb
call
xchg
adc
and
imul
pop
adc
xlat
pop
std
test
adc
mov
test
mov
repz
dec
clc
pop
repnz
ja
aas
ss
inc
adc
or
mov
roll
mov
pop
lret
and
aas
lods
aas
dec
ds
repnz
push
cli
add
call
push
jbe
mov
fiaddl
mov
out
neg
adc
fs
ljmp
fadd
mov
adc
sub
in
loop
call
dec
mov
scas
dec
xchg
ret
mov
hlt
mov
xorl
xchg
mov
inc
pusha
sub
pop
push
movsl
dec
mov
xchg
xchg
dec
lcall
xlat
aam
sbb
cmpsl
cmpsb
sub
insb
xchg
enter
cmp
dec
mov
lret
mov
xchg
sub
or
out
and
push
push
insb
lret
dec
fildll
mov
sarl
pusha
pop
xchg
loopne
adc
fcompl
mov
cwtl
sti
cwtl
push
mov
clc
scas
cmp
cmp
das
adcl
jmp
cltd
sub
xlat
repnz
push
mov
xchg
or
arpl
fisubrl
jbe
sahf
mov
jne
jmp
sbb
sub
ret
and
and
gs
sub
pop
and
movsb
pop
inc
jno
add
iret
mov
aad
int
shll
outsb
mul
arpl
pop
xchg
xchg
push
cmp
dec
loopne
xor
add
sbb
dec
xor
testl
xchg
in
es
or
test
adc
call
xor
dec
dec
aad
fs
shlb
clc
or
mov
add
jno
cmp
xchg
cld
and
movsw
arpl
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
