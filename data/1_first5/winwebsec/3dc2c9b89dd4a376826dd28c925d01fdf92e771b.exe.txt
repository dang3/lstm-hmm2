lods
ror
pop
xor
popl
sbb
xchg
inc
cltd
lods
sub
fildll
out
sub
call
mov
jmp
mov
aaa
push
sub
mov
aam
mov
js,pt
iret
push
xor
dec
pop
arpl
add
jecxz
rcrl
imul
and
pusha
lahf
and
mov
subl
dec
lea
inc
push
pop
enter
or
icebp
or
outsl
pop
out
cwtl
movsl
jmp
sahf
push
lahf
lret
lds
pop
inc
clc
push
xchg
sbb
idivl
adc
jns
xchg
incl
aad
mov
and
sbb
das
mov
jnp
xlat
aas
sbb
xchg
mov
loope
xchg
jmp
sbb
xchg
jl
adc
push
mov
mov
stc
popf
popa
fwait
out
jge
fnstenv
adc
xrelease
stos
je
out
pop
add
inc
inc
jge
test
xchg
jne
xchg
cmpsb
jns
pop
nop
mov
test
adc
dec
test
xchg
popf
ljmp
loope
xor
push
pop
push
jmp
inc
ljmp
sub
daa
sub
sub
loopne
test
jge
xchg
iret
imull
aam
cmc
jmp
jae
pusha
lret
adc
xor
add
aad
movsb
pop
xchg
sbb
cs
lods
pop
shrl
mov
adc
add
jbe
sti
push
adc
push
sbb
scas
mov
mov
mov
mov
sar
sub
mov
adc
or
sbb
sbb
mov
int3
dec
loop
sub
js
idivb
aas
int
or
orl
icebp
sub
insl
or
imull
cmp
jl
xorl
pop
in
mov
lods
cli
outsb
cmp
pop
repnz
dec
test
fists
inc
stc
push
ljmp
jne
lds
adc
mov
test
out
inc
sub
shll
or
pop
popa
xchg
adc
xchg
cmp
or
cmp
jns
data16
mov
lds
add
dec
or
stc
and
jmp
inc
test
jle
mov
imul
sbbb
or
insb
mov
sbb
inc
sub
adc
test
repz
sub
and
xchg
addr16
xchg
imul
les
outsl
test
and
rcr
jo
pop
mov
mov
jle
sbb
and
pop
jl
fwait
mov
movsb
jae
inc
or
mov
test
xor
ror
add
push
shll
jns
mov
cmp
lock
mov
sbb
push
inc
and
lret
sbb
jl
inc
dec
push
pop
andl
fstpt
arpl
sbb
pushf
sub
push
push
add
sarb
outsl
adc
es
enter
in
sub
lcall
push
ljmp
mov
xchg
dec
sahf
pop
xor
or
inc
cltd
add
inc
in
xchg
lret
cmp
adc
int3
insl
inc
ds
sahf
adc
and
fdivrs
pop
mov
add
aas
ss
movsb
mov
push
jmp
in
lahf
clc
js
inc
jmp
adc
pop
es
addl
mov
xchg
fsubr
out
adc
mov
cli
push
pop
jg
or
les
sub
inc
sahf
xor
adc
xchg
std
sysenter
testb
xor
shl
stc
push
adc
add
in
sub
xchg
aad
mov
sub
out
cmp
popf
sub
push
bound
sbb
and
vaddsd
sbb
inc
jg
mov
icebp
jne
pop
push
ds
jecxz
add
fnsave
xchg
out
and
inc
jmp
mov
scas
and
or
or
mov
popa
or
out
jmp
mov
mov
jle
xor
mov
popa
test
stos
push
ret
push
imul
jne
sbb
not
lods
pop
lret
arpl
std
pusha
aam
nop
out
jmp
cmp
mov
push
xlat
aaa
add
fnsave
std
mov
jmp
mov
xchg
and
aad
and
sub
ss
jecxz
fcoms
fs
pop
mov
xor
dec
test
cs
arpl
jnp
movsb
jmp
pop
mov
mov
ret
add
add
xchg
lret
cmp
int3
mov
mov
pop
std
test
sbb
test
push
xchg
nop
add
mov
and
enter
pop
adc
mov
push
mov
sbb
cltd
ja
insl
jb
mov
jns
nop
adc
xchg
adc
aas
cvtpi2ps
idivb
int3
cmpsb
dec
jns
mov
cmpl
flds
push
jbe
movsl
int
add
pop
mov
push
xor
lret
pop
fsubrl
jo
pop
ja
mov
pop
or
loopne
xchg
mov
jbe
and
xor
xlat
sub
clc
push
jge
pop
xchg
add
jnp
inc
in
dec
dec
inc
mov
inc
jmp
dec
jge
cmp
pusha
leave
scas
mov
sar
xor
jg
stos
lds
xor
in
imul
xchg
xor
xor
xor
pushf
jno
js
adc
insl
sbb
pusha
dec
push
mov
fistps
sub
adc
ds
xchg
dec
leave
sarl
mov
mov
aas
js
pusha
mov
aaa
mov
xor
arpl
aas
movsb
add
incl
int
cmp
push
les
dec
mov
mov
mov
data16
mov
sahf
ret
push
ds
push
or
push
ret
lds
push
xlat
inc
push
ja
jno
mov
sub
loopne
push
mov
test
or
xchg
jne
inc
cmp
mov
and
cmp
ds
fisubl
lcall
xchg
mov
dec
out
bound
rcrl
adc
and
add
sub
loop
outsl
mov
jb
sbb
and
add
cs
adc
test
icebp
arpl
gs
mov
mov
orl
repnz
pop
lock
push
popf
call
pop
pop
jo
jge
shlb
test
movsl
xor
mov
xchg
dec
mov
sar
je
pop
pop
cld
mov
sub
or
mov
enter
sbb
sbb
aad
or
mov
dec
ja
fldenv
dec
lret
pop
jle
push
jbe
les
jp
dec
lock
imul
std
in
pusha
mov
lock
fisttpll
sbb
sbb
add
arpl
pop
sbb
and
mov
insl
adc
call
jge
xchg
or
dec
ret
xchg
inc
icebp
adc
das
repz
pushf
adc
mov
cmpsl
push
xorb
sahf
das
mov
inc
fwait
bound
loopne
sbb
jb
icebp
inc
and
and
cmp
jns
test
loop
mov
or
pushf
and
notb
pop
sbb
push
mov
loope
mov
loopne
inc
jo,pt
push
dec
add
mov
fs
leave
pop
fsubr
cmp
xor
mov
notl
and
shrl
or
hlt
add
xchg
cmpsl
and
mov
push
lds
stc
loope
sbb
or
shrl
cltd
fdivs
mov
sbb
sub
in
jmp
scas
adcl
sbb
cld
jl
int3
xchg
sub
and
cs
mov
xlat
lock
adc
sbb
fucom
pusha
mov
iret
sbb
pop
sbb
daa
or
cmpsl
jmp
and
xchg
jmp
mov
jbe
sbb
mov
xor
add
rorb
xchg
call
xchg
in
inc
jno
icebp
imul
xor
xlat
andl
xlat
pusha
xor
bound
pop
cwtl
inc
push
js
dec
ret
and
arpl
mov
pushf
insb
cmp
mov
mov
mov
xchg
addr16
pushf
das
cwtl
test
andb
out
dec
mov
lcall
pop
in
ret
add
sbb
xchg
pusha
pop
adc
xchg
stos
loopne
subb
inc
pop
insb
inc
hlt
shll
push
mov
mov
cltd
sub
dec
or
ret
push
ficoms
or
xor
xchg
fistpl
pop
sbbl
in
fiadds
test
add
jp
push
repz
stc
push
aad
iret
xchg
push
scas
faddl
sub
test
and
inc
bound
mov
lods
aam
mov
aam
mov
js
lahf
and
push
scas
sbb
and
sub
sub
mov
cmpsb
push
or
loop
mov
or
les
jb
ss
dec
dec
jecxz
fcompl
and
adcb
jno
dec
hlt
in
cwtl
mov
mov
sub
cmp
dec
xlat
scas
pop
js
add
jmp
in
push
roll
out
add
rcll
and
add
adc
mov
movsb
cmpb
xlat
xchg
pop
lret
and
addl
jbe
dec
int3
cmc
cmp
arpl
iret
and
fs
aam
in
shl
inc
out
imul
hlt
add
sarl
or
inc
lods
dec
or
pop
adc
push
adc
inc
sub
pop
lcall
sbb
mov
fiadds
jnp
push
cli
dec
jecxz
shll
ds
jge
insl
aad
cld
mov
jg
ljmp
sbb
mov
xor
dec
and
cli
fisubl
jne
jle
dec
sub
pop
fsubrp
fistpll
sub
mov
imul
add
adc
mov
mov
mov
loope
xchg
and
mov
jl
shll
pop
sub
fldt
fwait
add
mov
add
in
xchg
sahf
dec
lods
sub
sub
inc
jmp
add
jge
in
clc
inc
out
xor
mov
loop
cmp
sbb
push
pushf
and
lret
mov
lret
fidivs
idivb
pop
fldt
lret
pusha
xchg
xchg
hlt
mov
dec
and
aaa
sbb
push
and
jno
loop
mov
xor
dec
incl
iret
sbb
push
call
inc
pop
mulb
insb
std
adc
stos
mov
mov
fnstcw
aad
enter
gs
mov
pop
cmc
out
xchg
xor
icebp
jns
nop
popl
push
jl
inc
mov
das
mov
jle
cmpb
inc
xlat
lret
or
iret
bound
dec
loopne
movsb
adc
push
pop
jle
addl
jmp
and
sahf
pop
cmpsl
in
pop
test
sbb
repnz
aas
outsl
mov
push
pmaxub
sub
jae
xchg
subb
clc
jne
push
popf
in
pop
into
jmp
out
xchg
int
cld
push
pop
stc
pop
popf
fisubl
faddl
loopne
cli
imul
mov
mov
jle
pop
cltd
sbb
sbb
jmp
aam
mov
inc
aaa
mov
test
fadds
lea
nop
arpl
adc
xor
dec
in
xchg
fstpl
dec
push
pusha
cmpsl
cltd
mov
movsl
jne
push
adc
bound
cmc
dec
subl
inc
inc
dec
mov
push
dec
sbb
xchg
dec
mov
mov
movsl
sub
lods
push
pop
popf
jg
push
jne
bound
out
outsl
in
jbe
data16
xchg
pop
dec
push
mov
jmp
mov
mov
ret
test
enter
jo
enter
add
pushf
mov
push
sbb
loope
sbb
and
inc
int
mov
mov
mov
cmpl
xchg
jne
ret
push
aaa
lods
xor
rorl
cld
movsb
mov
add
inc
cld
aam
xchg
sbb
mov
xchg
cmpsb
sar
test
movsb
pop
and
sbb
or
pop
xchg
fistps
pop
pop
mov
jo
pop
imul
jge
mov
cmpsl
and
push
cltd
fsubs
aas
repz
adc
inc
jl
pop
inc
sbb
sbb
cmpsb
inc
xchg
xor
aad
sbb
ret
xor
ljmp
mov
mov
cwtl
jne
aam
outsb
jp
dec
aaa
add
add
pop
test
test
pop
cmpb
sub
testl
xchg
adc
clc
shrb
mov
xor
and
or
repz
pop
mov
repz
xor
xor
fs
sbb
mov
loope
xorl
shll
pop
cwtl
shlb
and
out
test
insb
push
inc
lcall
outsl
cwtl
xor
xor
mov
mov
pop
loope
sub
mov
andb
cwtl
push
loope
inc
mov
hlt
iret
test
sbb
in
push
data16
pop
fstpt
lret
sbb
adc
ret
inc
mov
sbb
dec
jo
pushf
sahf
pop
or
mov
jg
mov
aam
popf
fimuls
adc
cmp
lahf
mov
mov
mov
adc
xor
lret
loope
xchg
jl
adc
js
jle
jbe
xlat
fldl
adc
bound
cmp
test
repnz
mov
rep
mov
sbb
inc
dec
cmp
add
loopne
mov
xchg
movsb
dec
ss
pop
hlt
jge
fnstsw
xchg
jle
stos
je
je
mov
mov
iret
iret
add
jp
sub
negl
loop
pop
repz
sub
pop
dec
int
scas
fcmove
xlat
hlt
or
rcrl
inc
pop
int3
rcll
lock
mov
mov
push
fcmovu
dec
add
mov
out
ret
pop
out
lret
in
jo
in
pushw
scas
in
sbb
movsb
shl
xor
xlat
or
sub
mov
dec
pop
push
add
mov
outsl
cld
push
inc
cmc
jecxz
mov
jnp
cmp
add
inc
dec
pop
or
xchg
jmp
lcall
mov
outsl
mov
sti
jnp
aam
movsl
lea
xchg
xchg
jge
pusha
movsl
out
stc
xor
add
mov
sbb
lds
adc
push
cmpsb
mov
aad
mov
popa
out
adc
call
dec
add
out
sub
imul
popf
and
dec
adc
lods
pop
pop
pop
cs
outsl
jge
pop
mov
mov
aas
dec
add
jecxz
fs
cltd
add
xchg
inc
mov
rcl
push
scas
rolb
les
or
adc
aad
je
mov
out
in
fadds
scas
adc
dec
sub
bound
mov
xchg
lods
ds
mov
fucomi
mov
push
popa
jle
out
sub
add
sbb
scas
scas
pusha
outsl
sbb
push
xlat
mov
dec
ret
nop
inc
test
jbe
pop
popf
ss
insb
movsb
mov
fisubl
hlt
mov
inc
iret
sub
in
mov
fcompl
sub
sbb
stc
dec
inc
in
sub
outsl
stos
inc
andl
popf
addr16
popf
clc
push
xor
jns
inc
dec
cmp
movswl
test
lea
int
pop
pop
adc
out
jbe
inc
outsb
por
xchg
mov
add
ss
xor
cmpl
add
add
stc
scas
dec
add
jo
bound
pop
jbe
jno
addl
paddb
mov
add
xchg
add
cmpsl
or
int
mov
xor
xlat
idiv
mov
xchg
or
shlb
jnp
push
outsb
lods
pop
popl
imulb
imul
iret
cmpsb
fwait
sub
mov
mov
sbbb
jnp
mov
sti
mov
bound
in
push
sub
dec
and
stc
jne
popf
int
push
outsb
sub
dec
pusha
mov
cmpsl
sti
ret
loope
aam
dec
andl
pusha
cwtl
pop
or
call
daa
lods
or
addr16
add
insl
jno
jae
outsl
fcomi
cli
mov
scas
enter
sub
xchg
mov
call
dec
dec
fldz
ja
je
lock
mov
sbb
or
jne
addb
int3
jl
cmp
cwtl
pop
icebp
adc
mov
cmc
rolb
cmp
idivb
lret
cltd
mov
int
mov
cmp
sbb
sub
out
ffree
inc
push
lret
lods
das
fbld
imul
push
mov
xor
div
add
jne
inc
mov
or
xor
clc
cmpl
jo
in
cmp
mov
mov
call
lret
out
mov
mov
in
mov
mov
mov
repnz
imul
inc
mov
xor
popf
ret
add
das
push
push
enter
xor
mov
aam
adc
push
scas
outsl
jns
mov
and
xchg
fs
daa
xchg
push
stc
pop
ret
jno
add
daa
pop
or
in
imul
aas
sub
xchg
adc
sub
xchg
xor
stos
cs
jnp
push
mov
or
sbb
bound
mov
hlt
pop
scas
lret
and
mov
imul
or
jno
jns
sub
cmp
adc
jecxz
rol
insl
js
adc
dec
popa
inc
or
out
sbb
mov
and
arpl
popa
jecxz
std
test
add
test
cli
push
sub
jg
fcmovnu
mov
nop
int
das
sbb
dec
cmp
ds
sbb
test
idivb
push
mov
out
jbe
inc
imul
or
xchg
mull
pop
xlat
mov
rclb
pop
decb
test
adc
lea
dec
mov
sahf
nop
push
enter
pop
gs
cltd
outsl
data16
mov
and
sbb
fcmovnb
movl
inc
cwtl
jae
in
fsubrl
and
stos
sub
ficoms
addl
mov
shrl
shll
fists
fists
bound
mov
loop
divl
out
mov
imul
adc
daa
stos
es
movaps
ja
add
std
ljmp
xchg
lock
adc
add
mov
mov
add
pop
ljmp
mov
adc
daa
sahf
cmp
lock
ss
or
push
mov
adc
pop
mov
mov
xor
movl
leave
or
outsb
mov
je
cmp
popa
scas
clc
icebp
mov
loopne
xchg
xor
inc
cmp
cmp
mov
hlt
and
jg
shr
lea
mov
pusha
fs
jnp
add
adc
stc
push
sbb
movsb
mov
push
push
mov
or
data16
insb
pop
ja
or
divb
inc
sahf
xor
imul
sub
push
xchg
cmp
xchg
pop
fcmovbe
inc
sub
or
div
adc
lods
bound
rorb
pop
ja
xchg
pop
clc
xor
or
and
inc
leave
cmpsb
sbb
inc
lds
mov
xor
fwait
cmc
or
repz
jns
xorb
jno
add
jecxz
arpl
ljmp
ret
arpl
aam
je
xchg
test
out
push
xchg
xlat
aad
int
sbbl
jle
xchg
outsl
jmp
mov
test
xor
into
pop
push
loop
test
ret
xchg
out
or
sbb
mov
pushf
popf
js
in
sub
jnp
daa
xor
daa
add
inc
ficomps
imul
sbb
xlat
imul
fwait
dec
push
mov
pop
or
nop
loop
or
sarl
leave
push
push
sbb
xchg
pop
loope
add
inc
stos
lods
repnz
jno
mov
dec
or
hlt
iret
loop
mov
or
jle
shlb
andl
or
or
repnz
out
mov
movsb
pop
cltd
sti
je
xor
shrl
in
outsb
movsb
dec
jg
lret
lock
outsl
orl
adc
aam
mov
or
xor
cli
pop
mov
jnp
insb
aad
call
mov
ret
cmp
xor
mov
push
cltd
and
int
out
inc
or
push
repnz
ss
mov
xchg
push
aad
out
loopne
push
adc
scas
dec
add
popf
fistl
cmp
nop
call
shrl
and
mov
repnz
notl
sbb
jge
jmp
mov
mov
in
iret
inc
iret
pop
nop
test
mov
loope
jmp
testl
push
lock
scas
jl
mov
sub
pop
jo
loope
cmp
pusha
pop
das
ljmp
jns
inc
jb
rol
out
pop
aaa
lahf
cmp
or
xchg
lahf
je
lods
test
cmp
mov
cs
push
adc
insl
cmp
loop
loope
mov
xchg
adcl
fdivr
repnz
fimuls
adc
enter
ds
push
or
daa
sbb
mull
adc
lcall
mov
in
or
into
xchg
insl
adc
sbb
dec
xor
rcll
mov
adcb
das
push
inc
mov
out
repz
adcl
inc
rolb
mov
popa
sahf
adc
aas
mov
push
ja
sub
sub
ret
jmp
insl
in
inc
xchg
in
add
push
pop
jecxz
fistps
push
mov
notl
std
ja
jbe
aad
and
pop
dec
out
pop
sbb
jg
mov
es
sub
xchg
or
sub
fistps
and
cmp
or
pop
fwait
subb
repnz
push
and
and
fwait
add
push
push
xchg
test
call
inc
dec
lods
std
dec
loope
repnz
stos
insb
inc
and
ss
cmp
cmpsb
mov
mov
mov
add
pop
fidivrl
mov
testl
mov
mov
pop
movsb
jns
insl
push
imul
imul
addr16
xchg
out
je
rcrb
addb
dec
fwait
xlat
leave
daa
mov
dec
fcoms
pop
enter
loop
dec
mov
mov
pop
push
shll
test
lret
jno
and
out
aas
iret
dec
scas
adc
ss
lcall
imul
jmp
sbbl
cmp
push
jle
std
add
imul
int3
je
sub
pop
push
jno
hlt
jmp
lahf
popa
in
fisubl
push
shrb
fadds
pop
sub
lea
lcall
mov
lret
imul
xlat
fildl
adc
cld
mov
jge
push
arpl
jmp
out
jl
push
js
push
gs
xchg
mov
xchg
jns
call
add
xchg
adc
and
jb
adc
outsl
aad
pushf
push
cmpsb
dec
and
jle
or
jo
xchg
jg
movb
iret
jnp
cmpsb
mov
decl
pop
dec
fisttpl
gs
mov
mov
out
daa
cmp
insb
shl
out
pop
negl
and
ret
pop
add
cs
mov
inc
sbbb
jbe
ret
std
adc
aam
imul
sbb
xchg
mov
jl
add
cmp
repz
mov
or
mov
mov
fcomps
jmp
repz
das
shrl
mov
stos
mov
sub
hlt
mov
mov
out
lds
mov
icebp
dec
mov
inc
lret
fwait
and
pop
faddl
inc
call
jecxz,pt
adc
aaa
pusha
roll
aas
mov
dec
inc
sub
xchg
mov
and
dec
daa
rclb
cmp
fwait
popf
mov
mov
negb
pop
adc
mov
daa
out
lahf
or
xor
sbb
mov
pushf
xor
ljmp
out
inc
pop
lahf
lods
inc
xor
sbbb
xor
xor
jmp
icebp
rcrb
mov
mov
xor
xchg
dec
cmpsl
inc
push
rcll
repnz
adc
imul
push
ss
mov
dec
data16
fdivs
cmp
xor
lea
iret
cmpsl
fs
mov
mov
sti
or
push
fbld
rorl
cmp
pop
movsb
sbb
inc
loop
push
inc
add
jge
inc
std
int
cmc
lahf
fidivrl
xor
cmpb
jp
mov
dec
dec
call
sbb
and
and
leave
stos
fadd
add
iret
cmp
push
sbb
ret
inc
sbb
enter
cmp
ja
cltd
lods
inc
aaa
js
sbb
orl
cmp
sub
mulb
and
pop
into
into
jle
ret
jmp
dec
dec
cmp
inc
mov
int3
pop
mov
icebp
dec
aad
jo
xor
sbb
sub
fcompl
lcall
faddl
dec
or
lcall
mov
or
adc
es
cmp
jb
adc
jp
ja
daa
add
fcompl
ss
dec
cwtl
or
js
test
subb
shll
mov
jl
dec
push
jp
int3
mov
xchg
xchg
adc
roll
or
adcb
dec
pop
iret
ljmp
sbb
or
loopne
int
fadd
js,pt
fldt
cs
addr16
aas
jae
push
in
mov
mov
pop
mov
inc
mov
jg
fs
add
js
test
mov
or
dec
adc
xchg
leave
idivb
notb
dec
outsb
or
cmpsl
sbb
sub
les
popf
cmp
incl
pop
lods
pop
lock
enter
fisubl
shl
cld
sarl
jno
lods
cmp
xor
nop
iret
push
jno
clc
addb
xchg
pop
mov
sar
movsb
sub
lods
adc
pop
in
pop
daa
insl
ret
pop
enter
sti
inc
dec
mov
push
repz
jle
iret
xorl
mov
in
rcrb
mov
cmc
lock
pop
loopne
je
mov
cmc
ret
xchg
in
mov
pop
ljmp
insb
xchg
jp
arpl
loopne
xor
push
mov
pop
nop
fistpl
add
xchg
in
repz
push
and
mov
sahf
outsb
loope
test
push
outsl
movsl
mov
lea
mov
sbb
mov
mov
mov
adc
scas
popa
jo
jae
scas
mov
and
in
adc
movsb
in
push
xchg
sbb
les
mov
inc
inc
lret
mov
in
ja
dec
fnstsw
andb
addr16
outsb
movsb
pop
cli
mov
idivl
xor
dec
or
dec
fdivrl
dec
xchg
fcomi
pcmpgtb
pop
mov
aaa
dec
dec
pop
mov
mov
add
je
xor
sbb
outsb
inc
rcpps
in
dec
push
and
and
or
push
jns
in
pop
movsl
jnp
insl
mulb
sub
outsb
decb
jge
mov
push
into
adc
cld
adc
push
outsb
std
xlat
mov
insl
jl
jo
add
pushf
idivl
push
int
add
js
das
aam
hlt
mov
dec
test
mov
popa
lahf
mov
rclb
lret
xchg
test
jle
inc
jge
into
xor
mov
push
ret
mov
adc
fdivrl
jge
rcrl
push
test
nop
lock
xorb
cs
in
lock
adc
cmpsb
andb
pop
xor
adc
inc
add
es
mov
int
cld
sbb
jmp
addr16
negb
nop
push
sbb
sub
mov
shr
xchg
cmp
lods
mov
sub
sub
out
mov
jl
cmc
push
push
sub
jno
mov
int3
cmp
pop
sbb
adc
testb
repz
rorb
push
ds
mov
add
lret
cmpsl
mov
ret
cmp
cmp
fbstp
mov
bound
stc
out
and
lods
mov
adc
adc
push
fimull
mov
lret
cwtl
xchg
loop
jne
pushf
mov
gs
sbb
add
mov
fldt
paddusb
insb
push
jno
adc
in
jae
dec
jne
std
or
mov
ret
call
cmp
outsb
jb
cli
inc
push
movsb
sbb
mov
ljmp
mov
jnp
stc
sub
test
adc
sbb
stos
lods
int
insl
xlat
dec
mov
mov
xchg
ja
inc
ror
xor
dec
mov
int
out
fwait
jl
vmread
sbb
iret
inc
iret
shlb
dec
pop
insb
stos
sbb
push
inc
or
push
stos
out
fsubrs
mov
addl
clc
je
xchg
out
aad
fwait
jns
push
mov
xchg
std
jnp
test
dec
outsl
adc
inc
xchg
mov
sbb
adc
mov
movsb
out
dec
in
mov
xor
aam
idivl
stos
sbb
mov
push
jp
dec
data16
lods
push
das
adc
fld
lea
pop
in
mov
inc
cli
adc
stc
mov
shll
pop
cmpsb
push
sahf
addr16
mov
mov
add
inc
fistpll
scas
pop
and
repnz
ret
push
mov
loope
adc
cld
test
or
imul
in
mov
lods
pop
dec
pop
and
test
cmpsl
inc
or
loop
jmp
xchg
outsl
cmp
jle
and
nop
push
pusha
xlat
cli
loop
inc
repz
ret
sbb
adc
push
sbb
in
pop
xor
leave
fbstp
and
ret
mov
sub
jle
jge
mov
mov
jne
rcl
in
adc
lahf
mov
xchg
cli
insl
insl
sbb
loop
dec
repz
add
insb
push
stos
add
mov
cwtl
jbe
jecxz
xor
xlat
aaa
test
push
cmp
fcomp
jb
mov
rcl
or
sbb
jg
and
aad
int3
cmp
test
lods
movsl
daa
in
lea
es
es
push
out
jae
sbb
mov
dec
cmp
pop
rcll
cltd
mov
jecxz
jae
aad
mov
adc
adc
jns
movsb
or
cmp
and
xchg
ret
in
popa
or
sbb
jecxz
stos
inc
inc
in
and
fcoms
fists
out
mov
nop
repz
pop
push
xor
and
popf
leave
jbe
dec
fldcw
mov
stc
sbb
cmp
sbb
pop
fstpt
xchg
sub
dec
xor
push
stos
mov
push
lcall
fnstsw
pop
xchg
pusha
push
mov
lahf
jnp
mov
cmpsl
mov
push
push
jns
pushl
jnp
outsl
jae
enter
shlb
and
jns
inc
popa
ljmp
bound
jb
pop
popa
mov
push
pop
jp
imul
or
cmp
cltd
dec
insb
dec
pop
adc
in
mov
sub
inc
mov
xor
shll
inc
repz
jle
stos
imul
mov
test
mov
dec
sbb
jl
add
or
lret
adc
and
punpcklwd
daa
sub
xchg
test
mov
dec
cmp
mov
lcall
dec
dec
outsb
mov
pusha
into
mov
popa
les
lgs
cmc
adc
cld
fstpl
pop
aaa
cmp
mov
or
ljmp
stos
pop
addr16
mov
icebp
outsb
shl
jecxz
dec
push
and
xchg
ficoml
or
and
call
fimull
loopne
jno
xor
mov
sbb
push
es
add
mov
lods
cli
in
dec
cmc
outsl
arpl
push
daa
sbb
int
lods
pop
sub
jmp
push
xchg
pop
iret
add
adc
mov
bound
inc
adc
imul
jae
jge
pop
adc
cmc
inc
pushf
loopne
jb
mov
inc
cmp
mov
and
mov
fwait
sbb
xchg
into
mov
pop
loope
dec
pop
jge
scas
loop
jne
roll
mov
ret
dec
aad
pop
dec
jl
push
int
repz
push
sbb
push
or
in
rolb
xchg
aam
cwtl
dec
nop
div
out
mov
ljmp
xor
loopne
mov
and
xor
sub
int3
ror
or
popf
xchg
call
sarb
shr
push
xor
outsb
icebp
xchg
pop
and
fmulp
xlat
xchg
push
outsb
sbbb
add
ljmp
imull
adc
xchg
xchg
adc
push
divb
sarl
dec
add
in
xchg
lods
mov
jle
mov
add
ja
aad
sbb
adc
cmp
ljmp
mov
cmpsl
sub
ja
xchg
lods
lea
test
out
mov
sbb
and
mov
cwtl
jge
jl
and
pop
or
xchg
das
iret
cld
mov
and
cltd
and
leave
dec
dec
push
repz
inc
sbb
popa
cmp
cmpsb
xlat
enter
jecxz
pop
int
xchg
jbe
scas
push
jns
jmp
xchg
mov
sbb
or
cltd
dec
gs
pop
popl
call
pusha
loopne
int
pop
icebp
jecxz
sti
mov
mov
daa
in
mov
iret
stos
in
fstps
in
mov
sbb
repz
insl
jb
roll
loop
fcoms
mov
or
add
mov
data16
nop
xchg
lret
fsubrs
xlat
orl
sbb
jp
adc
loope
jle
push
mov
push
into
dec
jl
sub
adc
mov
jbe
xchg
mov
nop
das
iret
mov
pop
cmc
jmp
cmp
ljmp
out
xchg
movsb
inc
imul
mov
test
sub
add
cld
xor
xor
inc
jecxz
pop
std
jbe
out
hlt
jbe
stc
loope
out
outsl
inc
jmp
popa
in
pop
ret
cmp
jae
or
sub
ret
jno
test
call
or
fildl
cwtl
iret
rcll
or
mov
cmp
sbb
mov
lods
ret
adc
or
lds
add
mov
popl
adc
pushf
dec
and
push
daa
pop
mov
aas
add
adc
and
mov
jle
adc
jmp
push
mov
stc
popa
out
and
dec
dec
or
imul
mov
jl
mov
dec
dec
adc
shll
cmp
add
lcall
cs
aas
mov
negb
inc
xor
dec
cwtl
imul
test
and
addr16
mov
push
mov
outsl
jb
mov
jge
stos
fistpll
push
ljmp
mov
push
mov
insb
inc
mov
in
dec
movsb
push
nop
lret
cs
mov
test
dec
xchg
arpl
bound
bound
test
and
loopne
inc
ss
sbb
mov
in
insl
lock
push
pop
nop
pushf
dec
sbb
in
imul
or
push
jmp
mov
lods
sub
jns
xchg
negl
sti
mov
cmp
test
out
push
pop
mov
aad
mov
addl
scas
rolb
sbbl
loopne
and
pop
xor
add
mov
mov
add
jge
dec
mov
jnp
xchg
mov
jp
rol
inc
sbb
push
or
xchg
xchg
mov
push
arpl
sub
movsl
pop
nop
cld
sahf
and
sub
push
stos
and
lock
das
es
cmpsl
sub
pusha
decb
les
inc
xchg
jmp
int3
pop
xor
xchg
inc
dec
mov
xchg
xchg
andb
fmull
xor
scas
sbb
test
mov
pop
mov
mov
sub
repnz
mov
rorb
lret
mov
test
sub
in
mov
ror
xlat
mov
jns
adc
or
gs
cs
mov
stc
pop
sub
leave
popf
enter
rcrl
test
test
cmp
daa
insb
gs
push
dec
pop
jb
push
mov
mov
jmp
xchg
insb
in
push
add
xor
adc
jno
add
jb
data16
pop
mov
fnsave
jbe
xor
xchg
or
mov
mov
adcl
lock
mov
jp
jge
mov
adc
cmpsl
lock
sub
push
cmp
ss
sbb
mov
jnp
test
mulb
in
xchg
loop
jge
sub
push
cwtl
dec
xchg
fsubrl
mov
bound
fsub
mov
mov
sub
push
mov
sbb
pushf
push
or
cli
data16
push
idiv
pusha
outsl
or
sbbb
sub
mov
dec
ret
bound
mov
into
subl
ret
sbb
dec
andb
jmp
push
subl
sub
mov
sbb
hlt
jecxz
xchg
test
jge
push
stos
mov
add
push
pusha
xchg
cmpsl
mov
leave
stc
cmc
pop
mov
and
cltd
gs
lret
rcrl
mov
add
dec
adc
push
pop
and
popf
adc
test
mov
inc
xor
cmp
pop
mov
clc
mov
dec
mov
repz
dec
jmp
ja
loope
add
xchg
pop
mov
out
scas
push
sbb
jl
pushf
add
pop
jnp
mov
ret
test
aas
jge
xchg
mov
adc
xor
sti
jns
imul
aas
addl
push
int3
jo
ljmp
cs
or
pop
nop
call
mov
lea
fwait
popfw
xchg
pop
adc
sub
push
or
in
loopne
je
adc
mov
je
xor
or
push
ret
mov
addb
xlat
mov
sbb
xchg
insb
cmc
mov
aad
pop
adc
pushf
push
movzwl
shll
mov
xchg
sbb
loopne
mov
dec
test
xchg
cwtl
clc
jnp
lret
cmpsl
movsb
iret
aaa
out
dec
adc
stos
popl
xchg
push
inc
xor
add
sub
jmp
xchg
xor
shlb
mov
sbb
jno
or
ja
adc
imul
sarb
inc
mov
in
cmp
je
lds
fdivp
mov
cltd
lds
iret
xchg
push
mov
mov
sbb
push
sti
fldt
xor
add
jne
sub
sub
mov
outsb
stos
mov
push
sub
lahf
adc
cmpsb
dec
adc
adc
cmpsl
out
jg
aaa
mov
inc
push
mov
xchg
scas
sbb
nop
fadds
cmp
scas
rclb
dec
imul
xorb
mov
dec
cmp
adc
xchg
rcl
shlb
xchg
es
mov
inc
xor
sahf
sbb
das
xor
gs
xchg
xor
cld
insl
rcr
push
imul
jg
fiadds
lcall
outsb
into
aaa
lds
inc
int
push
jmp
sysexit
push
mov
or
es
adc
push
pop
xor
repnz
xor
in
jl
arpl
fmul
inc
jns
into
movsl
xchg
int3
cmp
jp
jle
adc
xor
idivb
cwtl
add
test
dec
mov
mov
sbb
out
lahf
mov
adc
jmp
sbb
jl
jl
stos
nop
mov
in
in
adc
insb
mov
idivl
and
js
add
xchg
add
jge
scas
imul
js
in
aaa
in
add
addr16
push
sarl
mov
movsl
dec
xchg
xchg
pop
xchg
pop
adcb
and
in
lods
sbb
movsl
ret
pop
outsl
inc
inc
pusha
or
mov
adc
mov
lahf
xchg
mov
mov
int
sub
movsb
inc
jno
mov
outsb
outsb
test
scas
jbe
pop
push
sub
xchg
std
cmp
pop
int3
xchg
dec
xlat
xorb
and
nop
scas
xor
hlt
mov
mov
imul
std
sbb
xchg
mov
adc
pusha
cmpsl
dec
mov
mov
sbb
pop
adc
outsb
fsubp
push
outsl
aad
jno
int3
and
dec
fsubs
repz
xlat
scas
dec
lods
out
xor
adc
cltd
sahf
mov
and
adc
lock
push
pop
hlt
dec
sbb
mov
jg
xchg
push
cmp
add
or
mov
mov
inc
out
mov
cli
xor
jg
sub
out
mov
pop
add
sub
cmc
add
xchg
aad
leave
sbb
push
xchg
subb
sti
pop
and
lret
jl
cmp
movsl
pop
or
imul
cwtl
push
lret
outsb
adc
aad
loop
lret
js
cwtl
and
popa
in
stc
enter
das
mov
jp
mov
loop
dec
sbb
iret
aas
sbb
sbb
or
mov
or
jmp
pushf
and
imul
xor
xor
and
or
arpl
dec
mov
stos
lret
pop
mov
repnz
repz
out
cmp
fadd
push
inc
out
xor
leave
dec
pmullw
or
mov
jle
stos
mov
mov
sub
push
sub
adc
xchg
add
cli
adc
and
movsb
outsb
shr
pop
mov
outsb
or
xor
scas
inc
ljmp
ficoml
hlt
je
pop
les
fs
stos
arpl
loopne
xor
jne
jno
rolb
ret
sbb
adc
shl
lret
data16
test
inc
shl
jno
bound
add
fistpll
filds
lods
adc
xor
hlt
sbbl
dec
lret
mov
mov
mov
mov
mov
scas
aas
push
out
loop
enter
mov
add
mov
jns
push
std
aas
pop
push
inc
jmp
les
pop
out
rcrb
outsl
mov
fldcw
aas
mov
mov
pushl
imul
mov
mov
inc
shlb
add
mov
loop
movsb
in
loope
mov
mov
ja
les
imul
xor
mov
mov
shrb
call
scas
dec
mov
mov
out
xor
push
xlat
les
inc
icebp
xchg
mov
mov
mov
fcmove
loope
dec
ja
fmull
nop
add
xor
jmp
cmp
or
insl
lods
mov
lods
sbb
rcl
rcl
add
xchg
out
inc
lret
push
sub
jns
adc
add
pop
xlat
fiadds
lea
jle
add
dec
jb
in
mov
ret
add
fdivrl
jge
loope
mov
jp
mov
cld
push
jns
and
xchg
aas
mov
inc
xchg
fidivl
xor
dec
ret
pop
mov
or
mov
mov
je
push
fwait
adc
mov
xor
mov
jns
pop
mov
int3
mov
mov
sbb
jb
dec
pop
or
stos
mov
fadds
xor
icebp
mov
and
mov
scas
jmp
xchg
not
repz
std
sbb
jg
and
cmp
push
scas
call
push
rorb
jmp
sub
mov
popa
test
das
loop
mov
adc
mov
xor
cmp
mov
xor
hlt
adc
and
popf
aad
ficompl
and
and
test
sahf
xchg
mov
push
lods
repnz
loope
fildll
stos
sub
ja
mov
mov
out
push
mov
inc
ljmp
popa
ficoml
lea
jg
mov
int
ljmp
cmpsb
sahf
xchg
adc
cli
xchg
test
fdivrp
pop
sbb
xor
ffreep
popaw
dec
xor
mov
lcall
push
or
sbb
cmp
mov
aas
call
pop
mov
mov
lods
ficompl
call
jmp
jo
adc
cmp
pop
sub
repz
popf
fimull
jmp
test
sbb
fidivrs
adc
adc
mov
sbb
int3
idivb
pop
mov
sbb
push
push
cmpl
mov
push
imul
cmc
xchg
xor
ss
iret
sbb
out
popf
pop
cmpsb
jmp
xchg
in
popa
mov
stc
xor
int3
jnp
adc
nop
sbb
enter
icebp
dec
sub
mov
mov
jnp
insb
mov
xchg
push
sbb
mulb
push
jle
inc
or
inc
xchg
pop
or
es
shrb
or
mov
jns
int
loopne
push
imul
bnd
movsl
ja
mov
inc
cmp
sbb
mov
lret
pop
fisubrs
ds
int3
cltd
cltd
ss
mov
add
push
dec
call
mov
cmpsl
pusha
popf
bound
inc
mov
mov
and
and
cltd
mov
adc
int
notl
sbb
pop
lods
out
mov
mov
int
call
cmc
stc
es
cmp
add
push
sub
jo
cs
jle
ret
call
pop
ds
inc
xchg
pop
mov
dec
jp
in
fiaddl
ret
adc
daa
clc
lcall
in
fisttpl
push
lds
or
dec
outsl
inc
pop
xchg
fsubrs
shlb
jno
push
adc
push
sub
outsl
cmpsl
ret
cmpl
adc
dec
outsl
aam
clc
jb
xor
jge
repnz
push
adc
and
fwait
cmpsb
jnp
push
fs
jle
jl
lods
dec
jmp
test
jae
cld
cmp
mov
mov
out
inc
xlat
ds
inc
cmp
adc
xor
mov
jp
lret
inc
dec
addb
and
inc
cltd
mov
cs
addb
add
xchg
mov
ret
iret
xchg
mov
cs
mov
cmpsl
sub
add
jns
cmpsl
jp
ljmp
push
xchg
fnstenv
lods
xchg
or
sti
xor
test
push
jg
xchg
imul
addr16
es
loopne
sbb
daa
cmp
into
sbb
jmp
adc
addr16
in
popa
clc
daa
ret
mov
push
shl
ret
jmp
push
add
loopne
adc
add
cmpb
mov
lret
lea
jno
push
cwtl
jmp
rcrb
sbb
int3
jo
cld
daa
ds
les
jle
sub
fstpl
lret
push
and
popf
testb
test
push
fstl
pop
mov
lods
adc
out
lds
push
into
mov
adc
shrb
sahf
dec
clc
cli
and
and
std
aas
xchg
mov
mov
pushf
andl
mov
mov
push
test
cmp
push
lgs
ja
inc
fiadds
sub
mov
fldcw
and
pop
xchg
adc
outsb
mov
testb
adc
pop
sub
pop
sbb
fmuls
add
cmp
daa
insl
pop
sahf
and
stc
dec
sbb
dec
mov
push
data16
rorb
imul
scas
adc
pop
xrelease
inc
push
ljmp
mov
pop
fiadds
jnp
push
mov
dec
inc
mov
int
mov
add
and
dec
or
mov
or
fcoms
daa
xchg
insb
mov
scas
mull
xchg
xor
test
and
inc
dec
xor
scas
sbb
cmp
lret
dec
jl
call
cmc
mov
mov
inc
add
out
cmp
xchg
pop
stc
ficompl
iret
xchg
mov
cltd
shll
int
jge
mov
mov
lock
dec
sub
adc
jmp
cmpsb
mov
loopne
xchg
lock
sahf
or
inc
std
push
ds
pop
orl
je
hlt
sbbb
gs
pop
dec
add
dec
and
sbb
pop
fs
dec
ficoms
jp
inc
mov
lret
push
mov
es
xor
stos
lret
fnstcw
clc
cs
outsb
repnz
adc
fucompp
jge
mov
stc
push
or
xchg
and
inc
adc
and
fcomp
inc
dec
add
ja
andb
leave
addl
arpl
cmp
popa
out
jb
aaa
xchg
xor
hlt
jbe
inc
lret
pop
gs
dec
xchg
clc
push
jge
push
or
push
inc
sbb
pop
es
add
and
pop
jecxz
sbb
mov
mov
bound
gs
fucomip
add
in
stos
cmpsl
shll
sbb
mov
xchg
dec
bound
xlat
mov
mov
lcall
fcoms
mov
dec
mov
pop
jmp
xchg
adc
enter
dec
push
lds
inc
movsb
scas
mov
icebp
push
scas
andl
push
xchg
xchg
jbe
pop
lock
into
mov
and
pop
int
or
sbb
in
outsb
fnstcw
adc
inc
mov
leave
fsubrl
fs
mov
daa
fimuls
pushf
push
aas
adc
lret
lret
jb
adc
cli
cmp
push
push
jle
push
pandn
test
fists
in
mov
repz
adc
mov
andl
lock
cmpsl
cwtl
arpl
scas
inc
repnz
rep
mov
fs
xor
adc
mov
mov
aad
and
test
cmpb
jge
shlb
or
fistl
pop
push
cli
mov
out
movsb
inc
sbb
cmpsl
jl
in
mov
or
mov
push
push
sub
andb
push
or
mov
jle
sub
dec
lret
imul
xchg
jae
add
shl
cmp
popf
aaa
pop
push
jnp
jo
rcrl
sbb
insl
pop
arpl
mov
jge
mov
rclb
out
out
scas
push
cmpsl
sti
je
mov
lret
iret
add
xchg
loop
and
mov
lds
mov
xchg
out
test
xor
test
aaa
in
incl
sbb
xchg
mov
dec
adc
sub
adc
cmpb
cmp
movsl
pop
sbb
push
aad
xchg
mov
mov
stos
fistl
jle
call
ss
cwtl
mov
cli
enter
pushf
movsb
push
fsts
movsl
bound
inc
jecxz
lock
sbb
notl
sub
xor
movsb
clc
fidivl
xor
sub
inc
dec
cs
enter
lcall
ja
mov
mov
bound
cmp
mov
jae
icebp
cs
stc
movsl
loopne
subb
mov
addr16
dec
inc
mov
fimull
jecxz
sbb
xchg
cmpsb
jnp
in
imul
pop
inc
aaa
daa
push
lret
aaa
ret
ror
lds
rcpps
xor
xchg
cmp
or
push
push
cmpsl
outsb
mov
arpl
stos
es
fstps
cltd
add
adc
push
or
push
pop
jg
adc
ljmp
in
mov
inc
mov
das
mov
insl
sbb
daa
ss
out
rorl
jg
xlat
sub
gs
jl
mov
push
aam
mov
jbe
test
inc
shrb
mov
sbb
and
xchg
dec
clc
mov
fdivp
mov
lcall
sarl
mov
xchg
inc
adc
xor
adc
stc
xchg
or
stos
push
push
test
sbb
scas
jmp
clc
dec
mov
mov
popf
mov
jl
cmp
sub
jge
jae
es
loop
inc
lock
hlt
adc
mov
xchg
repnz
out
mov
jae
testb
test
lods
out
jae
jecxz
mov
stos
push
rep
aad
xor
pop
inc
pop
xlat
mov
mov
outsb
fisubrl
int3
ds
test
rorb
loop
popf
dec
loop
and
cmpb
lahf
test
inc
pop
jo
lods
fidivs
adc
xchg
xchg
out
inc
aas
mov
mov
mov
push
jo
adc
sbb
cmp
jo
fs
dec
rolb
vhsubps
push
fcomps
arpl
sbb
mov
cmc
or
fcoms
dec
lcall
shl
bound
sbb
dec
jns
cmc
cmp
push
ret
ljmp
xchg
cli
cltd
addr16
jne
test
pop
outsb
sbb
out
mov
loope
cmpsb
leave
lcall
mov
jbe
ss
jl
cli
or
or
mov
cmp
xchg
sub
ss
cmpb
sbb
mov
mov
fidivl
out
int
out
cmpsl
pop
jns
or
fwait
loopne
xorb
test
leave
clc
lret
jno
inc
into
aaa
mov
sub
mov
jmp
add
hlt
das
out
stc
jecxz
nop
roll
cmc
movsl
pop
aaa
rclb
iret
shrl
mov
jl
inc
lods
fwait
mov
shrb
mov
rcl
push
push
fisubrl
rcrl
pusha
or
adc
or
and
and
or
xor
jo
out
pop
sbb
stc
or
imul
stc
push
movsl
into
fwait
xchg
mov
xchg
hlt
and
repnz
les
cld
jbe
pop
roll
cmpsb
mov
mov
mov
cltd
dec
and
jo
cli
push
cmp
lds
pop
hlt
or
out
jg
insl
out
pushf
xlat
ja
push
testb
push
xchg
jns
inc
or
and
jg
jno
std
xlat
jmp
es
cmpb
or
mov
ss
scas
adc
xor
je
lods
mov
add
ja
aam
xchg
mov
frstor
sbb
addr16
xlat
dec
adc
shll
imul
ret
gs
in
pushf
lods
stc
clc
push
mov
js
mov
mov
cmp
les
insl
dec
repz
inc
xchg
jl
arpl
sub
mov
rcr
mov
jnp
pop
imul
push
das
cmp
add
sub
fs
mov
outsb
mov
xor
ss
mov
inc
or
mov
mov
in
push
pop
stos
fcmovbe
mov
sbb
sarb
push
and
lods
outsl
sub
ficoms
sahf
dec
xchg
push
or
mov
add
repz
cli
cld
mov
pop
pop
xchg
or
cwtl
mov
cmp
dec
pop
or
pop
das
lds
cmpsb
repnz
push
mov
or
push
xchg
andb
in
jo
mov
movl
lcall
pop
ja
lret
fstl
into
mov
int
mov
pop
xor
scas
jmp
mov
stos
lods
flds
or
addr16
inc
pop
loopne
lcall
xor
test
xor
xchg
nop
inc
push
mov
and
xor
pop
dec
rcr
pop
nop
stc
jbe
icebp
and
dec
jmp
sub
cli
in
and
cmp
xchg
mov
jp
addr16
movsb
lods
test
test
addl
dec
mov
cmp
and
stc
aaa
jmp
dec
sbb
std
sbb
insb
lret
push
adc
push
nop
cli
shrb
cmp
data16
fucomp
jmp
or
imull
push
and
lock
mov
movl
dec
cmp
in
orl
mov
push
xchg
mov
rorb
add
xor
out
push
cmp
dec
xchg
cmp
push
test
push
loopnew
fmul
arpl
pcmpgtd
ja,pn
pop
push
dec
and
push
inc
cwtl
stos
or
pop
pop
pop
mov
arpl
ss
loopne
mov
ljmp
pop
ret
orl
dec
push
push
and
cmp
cmp
popa
xchg
roll
out
mov
lahf
std
push
dec
jecxz
mov
lret
repz
mov
mov
xchg
cmp
scas
sub
mov
enter
ud1
cmp
mov
jg
inc
fwait
and
ljmp
jbe
and
repnz
pop
fwait
aam
cltd
lahf
mov
dec
xorl
scas
test
call
jge
cs
xor
mov
mov
jle
sub
insb
adc
dec
adc
mov
stos
sbbl
out
add
rolb
xor
mov
daa
test
adc
inc
addr16
xadd
scas
add
mov
and
sbb
adcb
scas
sub
shrb
pop
xor
adc
sub
jp
jl
jp
loope
std
add
xchg
pop
inc
dec
incb
dec
xor
jle
sbb
gs
adc
jecxz
fsubs
mov
shll
cmp
loop
jecxz
imul
rcl
std
mov
mov
jae
int3
into
cmp
aad
scas
inc
mov
adc
dec
mov
sbb
mov
and
movsl
mov
mov
gs
clc
test
xor
lea
stos
inc
lahf
xchg
lods
test
mov
dec
xor
inc
aas
decb
mov
les
push
leave
insb
int
adcl
pop
add
sub
cmpsl
pop
and
or
sub
arpl
inc
mov
sbb
daa
cmpsb
stos
pop
jno
jecxz
mov
movsl
cmpb
fisttpll
bound
call
mov
push
aam
dec
cmp
dec
inc
xchg
or
fdivs
pop
shlb
sahf
mov
jmp
pop
enter
scas
lret
aaa
int3
mov
ja
adc
outsl
fcoml
or
or
mov
imul
jnp
adc
jo
nop
mov
js
pop
iret
sbb
push
ret
fcompl
ljmp
sub
movsl
movsl
inc
out
das
enter
xor
rolb
stc
dec
insl
cmp
lcall
movsb
das
lret
rcrb
idivb
xorb
in
jecxz
push
call
cli
cld
in
xchg
nop
mov
and
imul
mov
fistl
arpl
or
mov
ljmp
fnsave
push
xorl
mov
aas
mov
ret
movsb
and
and
mov
sub
mov
sbb
or
xchg
je
xchg
mov
adc
and
leave
dec
pop
aaa
dec
cmp
mov
push
test
shlb
cmp
shlb
pop
push
mov
bsf
and
adc
in
scas
pop
pop
cs
inc
sub
icebp
aad
movsl
idivb
xchg
push
push
xor
jp
jbe
pop
adc
mov
jnp
pop
push
xchg
cs
mov
mov
test
in
addl
fnstcw
sbb
and
or
mov
sub
mov
pop
or
inc
fisttps
mov
pop
push
sub
mov
stos
enter
mov
push
stos
ror
ljmp
inc
imul
sub
insb
mov
cmc
movsb
test
aas
or
or
xchg
add
pop
and
mov
aad
cld
lods
aad
insl
ret
jmp
and
xor
leave
pop
mov
mov
out
adc
in
outsl
mov
jns
rcl
jg
pop
dec
xchg
mov
pop
or
sub
les
pop
add
pop
or
test
stos
mov
std
push
pop
jnp
mov
xchg
hlt
test
xorl
dec
pop
out
mov
pop
xchg
jmp
sub
add
jmp
fsubrs
pop
push
leave
pop
scas
ds
jnp
pop
ret
cmpsb
stos
insb
leave
add
ja
fs
sub
jno
icebp
icebp
pop
inc
push
inc
xchg
xor
sahf
mov
adc
lock
shlb
ja
mov
jb
pop
int
mov
out
stc
jns
sbb
push
je
xor
mov
push
je
scas
insl
sbb
push
add
mov
imul
xchg
xbegin
outsl
bound
and
aam
loopne
sahf
pop
insb
loopne
dec
out
xchg
push
pop
ret
stos
lea
in
inc
push
jmp
stc
jae
xor
movsb
jecxz
filds
xor
add
xchg
sub
jmp
sub
inc
in
cmpsb
add
inc
movsb
xchg
test
call
idivl
rolb
out
andl
inc
adc
fnstenv
lods
or
test
pop
xor
pop
movb
dec
add
dec
adc
jnp
ljmp
sbb
add
inc
mov
jbe
jge
movsb
ja
and
fnstenv
or
hlt
jp
movsl
xor
hlt
imul
jl
push
subl
mov
mov
loopne
mov
xchg
add
fstps
cmc
call
xor
push
push
js
push
jnp
push
jnp
pop
vaddsubpd
cmp
fisubl
jbe
mov
sub
popa
gs
movsb
mov
repnz
movsl
aaa
jle
mov
enter
sbb
jnp
repnz
pop
rcll
fldcw
sub
into
or
sbb
cmpsl
bound
mov
invlpg
xor
lahf
xchg
fiaddl
sbb
pop
aam
sbb
into
pop
mov
add
shll
inc
sbb
ljmp
rcll
jmp
loop
pop
sbb
jnp
inc
ficoml
cmp
mov
inc
dec
dec
aam
cmpsb
mov
aas
sub
mov
cld
popa
ret
rclb
pop
mov
cmc
les
in
out
jno
xchg
or
out
jb
sbb
xchg
into
mov
aas
sbb
add
call
jnp
stos
fnstsw
int
or
mov
mov
je
orl
and
cltd
leave
lret
dec
into
int3
ja
mov
push
sahf
push
or
pop
mov
add
shl
jo
imul
aaa
or
subl
jecxz
adc
iret
pop
sub
ret
push
fwait
sahf
sarl
cmp
push
stc
ficoml
push
mov
fldt
or
push
dec
or
icebp
jl
pop
cmp
adc
cmp
jle
cmp
xor
inc
jmp
pop
sti
cmp
pop
inc
mov
aaa
scas
test
mov
jp
scas
mov
fimull
je
sub
mov
cmc
xchg
push
lods
adc
xchg
jae
jno
mov
sbb
xor
repz
jp
pop
in
subl
mov
mov
jl
aaa
pop
out
mov
mov
push
scas
pop
sub
and
fwait
dec
sbb
test
dec
out
or
mov
imul
cmp
lods
out
fwait
push
cmc
sbb
out
dec
idivl
adc
inc
mov
and
adc
orl
fadds
adc
sub
call
mov
xor
pop
lds
arpl
inc
jge
cld
pusha
rcrl
dec
stc
inc
cs
and
or
test
arpl
add
loop
inc
xchg
jbe
cltd
push
test
jmp
scas
lock
jb
stc
xor
cmp
fstpt
popf
mov
stos
inc
pusha
jge
jne
xor
cmp
notb
sbb
pop
push
adc
in
js
out
inc
dec
rolb
in
in
cmp
sarb
add
lock
pop
push
jg
jmp
into
push
and
insb
mov
in
xor
mov
and
cltd
xchg
push
inc
xor
mov
inc
jnp
not
mov
insl
enter
dec
das
jle
inc
add
and
lcall
iret
out
and
in
cltd
ret
sti
dec
add
jae
jns
sbb
in
stos
push
xchg
mov
incb
jle
cwtl
mov
es
xor
cmp
jns
bound
orl
jl
sbb
push
inc
dec
call
xchg
fadd
push
sahf
filds
jnp
dec
fisttps
movsl
mov
mov
ss
sub
jge
mov
push
test
cmp
sahf
sahf
or
xorb
or
data16
movl
pop
icebp
sub
mov
fisubrs
and
ja
imull
mov
mov
mov
lods
addl
push
inc
adc
es
mov
aaa
shrl
adcb
popa
sbb
cmp
movsb
and
cmpsl
out
mov
adc
aaa
in
or
into
cmpsl
mov
lret
lods
cltd
ret
pop
cmp
add
ret
fidivrs
imull
mov
jl
push
push
mov
and
lods
mov
fidivl
mov
mov
ljmp
dec
xchg
mov
push
insb
daa
pop
sub
test
cli
daa
sub
mov
mov
pop
std
pop
pop
repz
shlb
mov
js
xchg
fisttps
repz
push
mov
rep
fsubl
sub
shll
iret
jmp
into
sbb
je
rep
stc
cmp
jbe
push
xor
sub
cltd
mov
ja
sbb
mov
or
inc
rcrl
push
dec
test
push
js
scas
xchg
popf
cmp
xor
and
dec
aaa
and
jg
pop
mov
jo
jp
mov
ret
gs
cltd
stos
push
int3
mov
lock
pop
sub
repz
out
push
push
test
mov
in
pop
int3
push
or
sub
mov
and
jmp
je
cmp
je
mov
push
data16
fstpt
es
cmp
jae
in
imul
test
sub
sarl
je
int3
sbb
int3
jno
jbe
xor
mov
rcll
push
hlt
pop
mov
adc
out
mov
pop
or
std
and
add
lcall
sub
and
pop
das
inc
mov
inc
rorb
inc
fcoml
or
cmpsb
mov
repnz
repnz
idiv
jp
addb
movsl
or
js
int
shrb
sarl
rolb
jl
xor
mov
push
jne
subb
mov
cmc
sbb
das
mov
cld
test
iret
xchg
sbb
add
mov
loop
adc
out
les
push
push
or
in
add
adc
ret
test
fidivl
imul
psrlw
fsubl
add
xor
push
lret
mov
dec
hlt
pop
inc
inc
stc
aad
adc
xchg
sub
adc
aam
cs
movsb
fsubs
popa
mov
fs
adc
scas
repz
sbbb
fimuls
push
or
pop
fwait
rorb
mov
addr16
sbb
das
sbb
push
mov
xchg
xchg
in
sarl
mov
repnz
mov
arpl
loopne
push
loopne
pop
inc
and
test
jbe
mov
in
mov
cmp
inc
cmpsb
clc
pop
mov
ffree
adc
mov
push
movsb
mov
or
cwtl
xchg
sbb
push
cmp
movsb
into
inc
mov
xchg
xchg
or
test
pushf
adc
stos
aad
outsb
std
aam
cmp
mull
int
repz
xchg
or
dec
xchg
lret
xor
fmuls
push
sbb
xor
fisubrl
mov
cmp
das
adc
fisubrl
into
addr16
fmull
xor
push
adc
sub
pop
mov
in
sub
add
je
pop
pop
sub
pop
push
jg
or
cli
hlt
icebp
rcrb
into
and
sbb
icebp
or
dec
or
jg
xor
xchg
pop
sub
mov
lods
sub
dec
mov
in
mov
xor
stos
mov
pop
cmp
imul
jge
inc
rcrb
push
ret
sbb
fcompl
jecxz
add
bound
test
stos
add
lahf
cltd
and
lcall
fcmovb
movsb
jl
enter
fsubp
pop
pop
xchg
clc
ficoms
in
pop
mov
and
adcb
push
inc
repz
or
ljmp
xchg
add
pop
xchg
movsb
movsl
out
and
mov
sbb
dec
cmp
iret
bound
jb
cmp
push
push
mov
pop
and
pop
addr16
jp
mov
aas
inc
mov
out
sbb
push
fisttps
jbe
out
push
inc
inc
pusha
out
mov
fimull
loopne
jns
xchg
gs
mov
adc
sbb
mov
call
add
cmp
nop
push
test
lock
jmp
out
jnp
sahf
lods
push
adc
jg
mov
sub
xchg
orb
loope
ds
sub
stos
fildl
sbb
push
imul
jg
int
ja
cmp
loope
pop
lahf
cmc
dec
sub
jecxz
add
jnp
nop
imulb
lock
stos
out
in
sahf
cmp
jp
repz
cltd
jae
shrb
fdivr
mov
movsb
insl
xchg
adc
xor
cmpsl
daa
adc
mov
mov
mov
fldenv
call
je
popa
mov
cmpsb
xchg
lods
sbb
mov
sbbl
dec
or
add
push
push
lea
and
aaa
stos
imul
mov
icebp
imulb
lods
dec
repnz
lahf
cmp
jbe
jno
push
xor
js
cmp
cmpsb
push
push
jbe
out
cltd
or
mov
push
add
or
pop
int3
aas
inc
xchg
cmp
mov
pop
lods
and
stos
and
imul
popf
inc
pop
and
add
fildl
mov
mov
mov
jl
adc
xor
and
mov
xor
sbbl
mov
adc
xor
cs
xchg
cmp
xchg
cmp
lock
lea
xchg
mov
pop
notb
fdiv
clc
sub
fstps
sub
xchg
aaa
mov
dec
adc
rcrl
dec
fst
xor
xchg
dec
loopne
js
or
push
adcl
imul
xor
mov
pop
cmp
and
call
std
clc
add
xchg
adc
or
jne
mov
sysret
dec
cmpsl
hlt
popa
sbb
and
xchg
sbb
jmp
push
dec
mov
xchg
out
lret
jne
sarl
xor
mov
and
in
popl
les
mov
cmpsl
testb
adc
mov
push
dec
sub
jae
or
add
push
mov
popf
dec
cmp
iret
shrb
enter
push
dec
incb
fdivl
push
cwtl
pop
test
fiaddl
sbb
hlt
in
lock
add
lret
fisubs
push
lret
popa
fists
sti
inc
mov
adc
les
in
push
mov
push
rolb
outsb
dec
adc
xor
mov
sub
push
pop
mov
and
lcall
pushf
rorl
xchg
fistpl
sahf
das
xor
mov
test
xor
fmuls
dec
push
mov
popf
inc
mov
ss
stos
xor
insb
cmp
fildl
pusha
and
lret
push
cmp
rcll
int
pusha
adc
pop
pop
jle
icebp
out
rcrb
sub
dec
int3
mov
xor
popl
push
cli
lret
rol
scas
les
imul
inc
xchg
test
lds
jmp
add
dec
popf
test
test
mov
mov
in
add
loope
cmp
daa
popa
icebp
push
add
repnz
ljmp
fdiv
test
add
bound
shlb
sub
movsb
push
dec
pusha
dec
dec
insl
in
jle
out
push
sarb
out
xchg
xor
lret
inc
aad
add
xchg
jns
pop
arpl
sub
outsb
enter
sub
in
dec
and
aad
sub
arpl
inc
sbb
jae
cs
mov
jle
in
inc
popw
inc
dec
shll
sti
cwtl
push
call
lret
jbe
imul
cmpsb
push
xor
in
or
loope
or
cmc
lahf
lahf
push
test
dec
dec
add
out
adc
add
jno
data16
dec
cli
push
daa
andb
pop
adc
mov
xor
add
and
xor
aas
lcall
add
dec
outsl
pop
fsubrl
sbb
push
mov
shlb
sub
out
mov
adcb
es
sahf
cli
and
shlb
jmp
jbe
data16
jl
pop
ljmp
shlb
add
mov
mov
push
adc
mov
rcrb
lds
xchg
pop
test
sub
aaa
add
icebp
ror
fwait
xor
not
adc
sbb
je
sub
dec
or
sub
pushf
sti
out
jae
pop
sub
mov
negl
push
xchg
shll
xor
mov
mov
sbb
mull
push
pop
nop
inc
in
mov
adc
test
and
insl
mov
into
in
movsb
or
mov
test
inc
cltd
xlat
cmp
add
jo
js
and
push
in
jo
sbb
cld
push
add
sbb
dec
xchg
xchg
repz
pop
push
xor
cmp
into
sahf
lahf
pushf
hlt
cltd
dec
lret
mov
int
sbb
mov
and
outsb
fnsave
mov
test
movsl
add
sahf
fdivs
test
loopne
adc
leave
inc
jecxz
fcoms
jo
push
push
je
push
mov
cmp
add
clc
outsb
sahf
or
jmp
xor
mov
add
mov
mov
dec
jecxz
andl
push
call
in
leave
clc
mov
mov
mov
pop
cmp
arpl
sbb
mov
adc
xchg
jno
inc
adc
mov
pop
pop
push
mov
mov
pop
mov
lcall
pop
rcll
or
mov
sti
and
daa
inc
pop
push
mov
cmpsl
fists
faddp
xlat
sti
addl
adc
stos
xchg
mov
jno
daa
outsl
test
xchg
lock
rorl
lods
mov
mov
sub
fidivs
inc
out
addr16
stc
imul
mov
sbb
mov
adc
int3
mov
roll
dec
movsl
stos
or
sbb
pop
jg
xor
ficomps
mov
cs
sahf
mov
xchg
ret
sbb
inc
cmc
pop
cli
out
loop
and
cli
jecxz
scas
fisttps
scas
daa
aas
fbstp
loopne
xlat
sub
inc
push
sub
fimuls
movsl
mov
cmp
mov
mov
mov
out
loop
sbb
and
mov
rclb
bound
sti
std
sbb
subb
mov
pop
out
lcall
pop
mov
push
mov
fstpl
mov
sbb
stos
pextrw
and
pop
hlt
mov
inc
xorl
and
icebp
jmp
test
ficoml
or
adc
mov
pop
adc
icebp
loop
hlt
pop
jge
jnp
jne
mov
or
mov
xor
out
push
sbb
inc
or
xor
roll
push
adc
cli
jecxz
sbb
ljmp
lret
add
fisubrl
xchg
add
shlb
sti
cmp
lret
inc
fs
add
xchg
fwait
rclb
adc
ficompl
int3
pushf
stc
inc
push
or
popa
pop
lods
paddsb
int
roll
xchg
sbb
push
insb
out
add
mov
ds
jle
mov
in
jne
repz
repz
repnz
scas
mov
sbb
cmp
outsb
cli
test
ds
dec
jno
xorl
in
jno
out
mov
add
xor
push
or
push
inc
inc
and
cmpsl
rorl
idiv
test
loopne
sbb
lret
test
add
dec
lock
xor
int
fmuls
mov
sub
adc
mov
xor
lds
inc
inc
daa
push
mov
xchg
rcll
test
je
push
inc
push
dec
mov
adc
into
mov
mov
rorb
stos
fwait
mov
movd
xchg
js
jle
dec
mov
aam
add
imul
addr16
jne
cmpsb
jns
in
sbb
dec
mov
lret
dec
dec
ja
cmp
mov
sbb
add
lods
out
dec
test
mov
mov
std
imul
daa
dec
cmc
sub
and
inc
xchg
dec
stos
test
xchg
jb
mov
lea
inc
insb
mov
xlat
xor
int
mov
mov
fdivrs
ljmp
inc
dec
fldcw
add
ret
sub
dec
dec
lret
mov
sub
xchg
adc
gs
shlb
or
mov
and
dec
gs
sbb
test
sub
cltd
ljmp
adc
fidivl
pushf
mov
in
xor
flds
mov
aad
adc
jmp
push
add
jae
mov
ret
lods
mov
ss
mov
adc
mov
cmc
xor
adc
or
inc
pushf
push
lds
ja
mov
mov
icebp
mov
jle,pt
rcrb
mov
clc
mov
aad
ja
xchg
mov
pop
in
inc
mov
pop
push
push
loope
mov
inc
push
mov
dec
stc
out
sbb
icebp
ja
dec
movsl
ljmp
jnp
icebp
cli
cmp
xchg
ljmp
clc
adc
cmpsl
enter
std
outsb
xlat
mov
rcll
sub
bound
push
sti
cmp
jg
daa
psubusb
xchg
out
out
pusha
add
outsb
loope
leave
push
jb
cmc
cmpsl
or
notl
test
mov
xor
cmpsb
fldcw
sub
jmp
ja
adc
or
shrl
test
add
movsb
mov
stos
dec
rol
jno
xchg
pop
cli
loopne
mov
loopne
jo
scas
xor
dec
inc
out
push
xor
lret
push
shll
in
or
dec
add
popf
push
jb
adc
fsubrs
push
out
push
loope
dec
xchg
ret
xchg
dec
hlt
dec
mov
scas
movsl
and
mov
sbb
rorb
sarb
aad
loopne
mov
mov
std
inc
inc
xor
rorb
cmp
sbb
fwait
sahf
push
arpl
xchg
pusha
ror
movsl
int
inc
xchg
mov
or
test
pop
xor
pop
xchg
lret
xchg
push
jbe
and
pushf
lods
pushf
dec
popf
lock
insb
ja
in
mov
repnz
cmp
push
shlb
fcomps
mov
jp
lds
ss
fs
outsb
inc
sub
jmp
push
cld
mov
xchg
dec
fiaddl
xlat
add
hlt
adc
adc
add
inc
seta
mov
dec
fs
and
push
push
sbbb
incl
or
and
imul
mov
dec
inc
out
pop
mov
int
inc
mov
jo
mov
ret
cltd
mov
test
mov
lods
inc
lea
scas
fdivs
fimuls
dec
scas
arpl
ret
dec
add
les
out
xchg
adc
movl
bound
cld
xor
cld
adc
nop
pop
push
push
aaa
mov
fs
cmp
fwait
sti
mov
jo
cmc
pushf
xor
xchg
add
mov
jmp
mov
movsb
in
mov
xor
sbb
mov
scas
std
scas
in
out
and
dec
cltd
lods
jb
insb
test
push
icebp
or
ja
adc
mov
rorl
adc
outsl
fcoml
in
pop
inc
push
pusha
push
outsb
ljmp
push
ret
call
out
lret
test
cmp
sub
jg
stos
and
ds
mov
cmp
insl
jno
mov
sub
add
jle
out
icebp
rcll
mov
outsb
aaa
loop,pn
jnp
sbb
cmp
les
inc
cmpsb
mov
adc
clc
fisubrs
fldenv
push
and
xchg
sub
cs
out
fdivs
or
or
call
cmp
pop
cld
and
popf
loop
and
mov
xchg
popa
ljmp
leave
jbe
dec
mov
cmp
test
mov
outsb
pop
in
rclb
neg
fwait
sub
jns
inc
inc
mov
loop
and
lea
shrl
xor
movsb
mov
cmp
repnz
jl
out
xchg
loopne
aas
adc
inc
fists
mov
xchg
aam
mov
add
push
std
pop
ror
jg
xor
add
stc
mov
div
je
push
mov
xor
or
clc
jmp
pop
test
scas
call
jecxz
push
icebp
mov
jo
movsb
jns
pop
or
rcr
fstl
int
movsl
mov
mov
jae
jne
pop
call
stos
jp
xlat
jo
pop
dec
cmp
cmp
cmpl
test
inc
push
mov
mov
js
mov
test
loopnew
and
add
or
lcall
dec
mov
jno
movsb
sub
pushf
sub
lods
pop
dec
js
leave
fistps
xor
in
and
cmpsl
xchg
arpl
xor
out
notl
push
sbb
cltd
sbb
stos
in
inc
sbb
or
repnz
push
push
icebp
mov
push
push
cmpl
mov
icebp
or
add
lea
fstpt
mov
mov
movsl
pop
add
pop
adc
xchg
push
mov
call
sub
daa
push
outsl
cmpsb
pop
inc
jb
sbb
mov
cli
imul
push
orb
lods
bound
daa
pop
aad
mov
stos
out
std
adc
lret
push
mov
sbb
int3
sub
inc
cwtl
out
mov
dec
mov
imul
xchg
add
cltd
pushf
je
cwtl
fcomps
filds
mov
mov
cmc
adc
lods
push
fs
push
xchg
cwtl
or
sbb
test
adc
mov
andb
subl
push
mov
les
popf
sbb
sbb
iret
imul
mov
shlb
subl
cmp
movsl
dec
pusha
in
movsb
xchg
inc
push
mov
xor
push
or
mov
xchg
out
arpl
adc
pop
adc
test
dec
pushf
stos
ret
and
adc
xchg
clc
dec
xchg
xor
xor
xchg
mov
jmp
pop
or
jecxz
sub
pop
inc
mov
mov
sub
mov
sbbl
sub
les
stos
dec
jmp
mov
mov
loop
pop
shlb
push
inc
mov
jmp
cmpsb
mov
xchg
pop
push
stc
je
or
dec
mov
sbb
xchg
es
add
aad
aas
xchg
inc
int
push
out
imul
rcrb
jg
mov
in
clc
fdivrl
and
mov
push
adc
pop
je
or
inc
loopne
push
jmp
mov
iret
push
mov
adc
mov
inc
mov
icebp
jo
push
dec
mov
outsl
iret
cltd
push
cmpl
pop
pusha
sbb
push
bound
push
jb
mov
add
inc
sbbl
insb
ja
push
clc
ss
push
lds
out
ret
jmp
adc
negb
addr16
shr
int3
xchg
jbe
leave
mov
xor
sbb
jl
sub
add
fs
das
pop
in
cmp
ja
jmp
jg
pop
inc
pushf
dec
xor
sbb
sub
lods
aam
insl
push
mov
pop
aas
jl
dec
inc
jle
jl
out
pop
mov
sbb
lret
lahf
push
dec
test
icebp
adc
testl
inc
popf
jnp
in
popf
mov
cmp
andl
pusha
add
xchg
adc
lret
js
xor
int3
addb
push
and
inc
loope
pop
sti
int
or
xlat
pop
mov
jmp
cld
mov
clc
mov
mov
aas
mov
hlt
dec
mov
pop
pop
nop
add
and
pop
std
daa
pop
mov
lods
movsl
scas
push
sbb
dec
pop
xchg
repz
aas
lods
test
ja
ss
add
push
push
loope
std
pop
imul
in
pop
mov
or
push
ljmp
push
popf
lock
test
mov
es
inc
mov
xchg
ja
jns
test
insl
sub
sbb
jb
pop
xchg
outsb
pop
mov
in
sbb
ret
mov
xchg
push
cmp
ret
cwtl
adc
cmp
jp
jmp
pop
out
rorb
sub
arpl
push
cmpsl
jnp
mov
sub
add
pop
or
cli
fcmovbe
stos
addb
fs
outsb
ja
sbb
jge
ja
push
sub
fistl
mov
mov
dec
mov
add
loope
xchg
outsl
mov
mov
cmp
push
inc
xor
jne
pop
add
pop
mov
fnstenv
jne,pt
sbb
adc
ja
in
sti
jecxz
and
int3
rorb
in
aaa
mov
xchg
pop
movsb
repnz
ret
aas
sbb
push
cmp
lods
popa
mov
mov
jg
jo
inc
mov
fists
test
sti
mov
out
notb
xlat
push
pcmpgtb
movsl
and
add
pop
inc
lock
jmp
and
xor
inc
test
jecxz
data16
jmp
xchg
cld
adcw
test
push
adc
cmp
jecxz
sarb
daa
push
in
fcompl
popf
pop
arpl
fisubrl
repnz
jno
jle
pop
jge
sub
and
pop
adc
out
shl
push
sbb
cmp
pop
xlat
ret
dec
jno
xchg
sub
cmp
sub
bswap
lcall
pop
push
sahf
pop
cli
ret
or
inc
les
fisubl
xchg
ret
das
cmp
push
loopne
lods
xor
adc
out
pop
cwtl
fidivl
icebp
outsl
out
jmp
int
call
aad
adc
lods
dec
icebp
mov
cltd
push
cmp
xchg
ss
inc
mov
scas
and
dec
ret
adc
inc
dec
mov
ljmp
pop
cmpsb
les
cli
sbb
sbb
es
imul
cli
ss
mov
cmp
cmc
push
int3
out
and
or
cmp
cmc
inc
sbb
and
push
lods
iret
enter
stos
adc
test
push
and
sbb
xor
insl
jge
scas
rorl
aam
add
das
jge
adc
xor
cmp
mov
xor
pop
cmp
push
sahf
xor
fnsave
mov
jne
jp
sub
push
jmp
ret
outsb
and
inc
push
outsl
mov
adc
rcr
addb
mov
sbb
cmp
clc
fnsave
sub
cli
sub
aam
lods
es
push
pop
push
jae
xchg
push
test
jl
adc
clc
inc
mov
addr16
out
mov
mov
xchg
sbb
sbb
test
mov
jbe,pt
std
arpl
sarb
mov
xor
mov
inc
cmp
cmp
push
dec
jmp
fmull
cmp
xor
jmp
cmp
and
xchg
repz
and
inc
jg
jo
add
mov
dec
jle
loop
pop
mov
test
pop
push
jmp
lods
pop
loope
dec
xchg
mov
mov
pop
test
mov
dec
arpl
push
out
lea
js
mov
fs
subl
imul
data16
and
decl
mov
loope
sar
loop
sbb
repnz
add
rcll
ret
dec
sub
aas
sub
rolb
pop
adc
icebp
icebp
inc
arpl
and
fcmovnb
gs
loopne
mov
xor
mov
push
int
xchg
cmp
push
xor
leave
add
pop
mov
dec
push
jmp
pop
adc
movsl
sbb
loop
and
cli
push
shr
push
dec
lret
sub
or
sbb
rcrb
sub
imul
clc
xor
xor
jns
faddl
mov
aad
aaa
xor
mov
mov
push
push
jecxz
lret
cmc
in
mov
femms
int3
sub
aam
es
mov
loop
ljmp
in
fnstcw
pop
and
xchg
adcb
mov
out
test
out
add
fnstenv
dec
insl
test
inc
mov
cmp
mov
xchg
mov
jge
mov
dec
xchg
sub
inc
lret
push
sub
cmp
movb
cli
xor
cmp
sub
sti
orb
push
lock
sub
daa
cmpsl
adc
push
in
or
insl
ja
adc
mov
pop
jp
push
ds
aas
lret
mov
mov
fnsave
jae
repnz
fmuls
xchg
adc
test
mov
les
push
dec
popa
outsl
popa
sub
mov
sub
frstor
repz
mov
mov
lods
mov
fwait
popf
adc
div
lcall
pop
push
lds
popa
dec
imul
pop
sub
or
movl
sub
ja
pop
mov
or
rcrb
mov
push
into
push
dec
jp
popf
insl
mov
in
hlt
jne
hlt
push
bound
rcll
xchg
and
outsl
or
inc
inc
bnd
fdivr
lret
outsb
in
jae
dec
mov
push
jno
enter
std
mov
lock
loop,pn
xchg
inc
int
xlat
fsubp
lods
mov
jge
mov
push
add
inc
pop
es
xor
xchg
dec
jbe
les
lret
inc
inc
cmp
or
pop
fisttpll
outsl
lods
fldcw
dec
push
ds
adc
int
cmp
adc
xlat
pop
incl
cmpsb
push
mov
popa
mov
mov
in
add
inc
test
pop
mov
popa
jbe
test
ds
scas
push
or
cmp
pusha
sbb
push
pop
sbb
insb
adcb
imul
lock
pop
movsb
dec
repnz
mov
cltd
xlat
jo,pt
int
mov
int3
dec
sbb
repnz
mov
clc
sbb
outsl
inc
mov
dec
xorb
jne
popa
inc
mov
pop
lret
inc
sub
es
mov
mov
sbb
jge
jo
sarl
sub
sahf
outsb
addr16
cmp
jg
mov
and
and
push
push
leave
jno
cwtl
cmp
mov
rol
push
push
mov
and
add
imul
aaa
mov
sbb
dec
mov
aad
mov
jb
xor
ljmp
es
int3
sub
pop
popf
rcll
outsb
mov
cmpsl
jle
sbb
cmpsl
dec
xchg
es
jo
test
call
lcall
push
jb
sub
pop
sub
add
mov
aas
test
je
inc
mov
ja
imul
jo
stos
test
mov
pop
sbb
push
sbb
and
fisttps
sub
leave
xchg
loopne
mov
or
call
movsb
pop
sub
xchg
stos
mov
xor
mov
scas
push
cs
in
fcmovnb
in
roll
jecxz
adcl
sub
test
dec
int3
enter
pop
pop
mov
ljmp
cmp
dec
cmc
pop
push
adc
cmc
sar
or
dec
ds
mov
dec
adc
or
push
add
lret
cmc
jecxz
jae
cmp
hlt
push
xor
cmp
cltd
pop
pushf
add
aam
test
cmp
arpl
mov
xlat
mov
adc
sbb
mov
xor
rcll
outsb
cmp
pushf
aas
xchg
adc
xlat
ffreep
xchg
inc
popf
push
cmp
mov
mov
adc
xchg
add
or
lret
pop
cli
test
or
mov
and
lods
xchg
rcrl
dec
mov
dec
push
pop
xor
test
xchg
xchg
imul
ffree
cmpsb
xchg
mov
mov
mov
mov
xchg
and
adc
pop
or
repz
xchg
sbb
aam
pop
fst
xchg
push
xchg
lcall
aam
scas
pusha
clc
mov
adc
add
andl
and
push
ljmp
mov
pop
mov
mov
xchg
pop
iret
cmpsl
pop
lret
cmpsb
adc
mov
popf
cs
cmpsl
dec
arpl
ljmp
or
pop
adc
add
ljmp
cmpsb
add
pop
mov
sti
jnp
mov
rdpmc
xor
fistpll
mov
mov
add
xor
fists
dec
mov
or
fs
lahf
pop
call
in
in
adc
popl
loopne
and
xchg
stos
pop
scas
cmp
in
std
xchg
sub
cmp
xchg
pop
xor
inc
lcall
sbb
lret
xchg
ja
jae
je
aad
xchg
mov
shll
cwtl
xor
cmp
mov
jo
adc
push
cmp
sub
rorb
xchg
addl
std
xchg
fs
mov
pop
dec
mov
movsb
arpl
jo
xchg
sbb
xchg
std
ficoml
test
loopne
xchg
cwtl
shll
call
jae
shl
push
outsb
mov
mov
mov
repnz
arpl
sub
out
outsb
cltd
leave
xchg
or
mov
test
xchg
inc
fnsave
push
popl
ret
or
sbb
pop
mov
js
pop
std
ljmp
dec
jb
ljmp
sbb
dec
or
lcall
das
or
mov
pop
addr16
or
cli
xor
addr16
aas
adc
iret
fsub
std
outsl
negb
pop
data16
popf
sbb
or
call
dec
mov
jge
or
or
mov
xchg
push
push
lret
mov
subb
xchg
and
jge
xchg
sti
push
mov
scas
sbb
ljmp
std
push
outsl
fstpt
inc
or
inc
ds
mov
clc
popf
pusha
lahf
pop
inc
pop
int3
cmp
add
xor
lahf
idivl
or
inc
sbb
xchg
stos
push
pop
push
andl
pop
mov
or
mov
stc
jecxz
popa
pop
das
scas
mov
inc
ljmp
adc
mov
ja
sbb
shlb
das
inc
mov
leave
movsl
mov
push
fidivs
stos
clc
lods
mov
jl
repz
lsl
push
fsubrs
mov
rorb
adc
sbb
pop
scas
mov
mov
add
push
push
xchg
mov
or
into
add
jmp
js
adcl
es
inc
shlb
test
push
sub
sub
jnp
scas
cmp
cmp
cmpsb
sbb
or
cmpsb
out
mov
push
dec
xchg
sub
loope
sbb
push
push
cmp
stos
jb
sbb
xor
lock
enter
cmp
shrb
sahf
enter
inc
fwait
pusha
aas
mov
clc
mov
push
adc
mov
mov
sub
cs
pop
and
sub
out
iret
lret
ss
rcl
rorb
ds
cmp
imull
push
imul
popf
cmp
dec
mov
ss
test
insl
xchg
cmp
pop
mov
or
mov
fsubrs
les
sti
lret
mov
xor
sbb
jle
lods
adc
call
adc
sarl
jle
fnstenv
rol
mov
jns
cltd
aam
fdivr
cs
add
push
arpl
nop
imul
fcmovnb
mov
push
daa
pop
xchg
or
pop
lods
lret
shl
inc
movsb
pushf
pop
xlat
or
daa
dec
sbbl
pop
jg
ret
icebp
xchg
inc
addr16
sbb
jecxz
sub
sub
addr16
ja
jno
pop
xchg
es
mov
ja
ss
out
test
cmp
imul
out
decb
mov
int
je
mov
imul
es
mov
loopne
adc
cli
fidivl
sbb
cmp
xchg
mov
xor
aas
ja
insb
mov
push
jbe
sti
mov
adc
ja
mov
jl,pn
xchg
jnp
unpckhps
sbb
xchg
add
scas
in
fldt
enter
mov
push
jbe
adc
ret
inc
jne
fisttpll
sbb
adc
and
cmp
sar
mov
pop
popa
outsb
ret
adc
add
jge
add
jge
pop
mov
fistpl
fistpl
mov
test
test
push
add
dec
push
push
and
pop
xchg
adc
dec
iret
sbb
push
xor
imul
sub
daa
xacquire
daa
bound
pop
sarl
pop
xor
xchg
daa
jge
lret
push
and
mov
lcall
test
dec
in
cs
cltd
jg
xchg
mov
scas
outsl
je
or
jp
insb
mov
push
mov
and
adc
lret
jns
adc
sub
leave
mulps
sub
in
add
inc
cmp
icebp
rorb
or
std
cltd
es
push
cmp
inc
and
int
mov
sarl
stos
insl
cmp
sbb
rol
fsubrs
inc
cltd
push
ficomps
sbb
mov
sub
divb
lea
mov
mov
push
inc
test
test
pop
in
lret
in
pop
mov
popf
sub
imul
mov
jae
fs
cli
out
mov
xchg
loop
dec
xchg
mov
stc
stc
aad
call
pushf
loop
mov
push
or
ficoms
sbb
adc
or
adc
mov
ljmp
lret
adc
test
ret
jb
and
les
push
jae
jo
dec
xor
pusha
push
pop
cmp
iret
dec
mov
and
daa
imul
repnz
in
xor
push
pop
insl
lods
xchg
and
leave
xchg
mov
nop
cmc
push
arpl
mov
cmp
push
or
and
stc
out
adc
iret
mov
xor
stc
lods
pop
xchg
std
insb
xchg
nop
jle
add
cld
push
in
lock
xchg
dec
inc
imul
stos
sahf
lds
jmp
inc
iret
or
in
jns
jo
out
test
or
inc
scas
fadd
inc
mov
aad
call
fidivrl
arpl
adc
push
arpl
adcl
mov
dec
inc
out
push
jae
push
int3
scas
mov
pop
loopne
popa
sti
mov
jno
fidivrl
xor
repnz
push
sub
mov
fidivrl
adc
mov
in
push
popa
adc
repz
pop
and
dec
or
xor
cld
inc
cmp
shl
mov
push
adc
mov
popa
cli
pushf
gs
insl
loop
call
fiaddl
push
xchg
fldenv
cmpsl
or
scas
pop
jo
jle
mov
xchg
out
or
pop
lods
mov
cmp
cmp
sarb
xorb
nop
mov
jle
aad
mov
mov
cltd
movsl
jmp
fisubs
or
and
xor
push
or
or
repz
fistpl
sbb
test
rcl
arpl
mov
dec
sub
hlt
testb
xchg
fdivl
mov
jae
lret
hlt
adc
ret
mov
pop
jmp
les
mov
adc
clc
lock
ret
insb
fs
inc
mov
add
or
cwtl
cmc
aas
push
sub
jno
sbb
dec
push
insb
stc
mov
or
icebp
jo
sub
xchg
into
shll
adc
cs
inc
and
mov
stc
push
mov
mov
mov
loopne
push
repnz
cmp
push
popf
insb
push
jecxz
idivb
mov
loop
or
in
shll
pop
das
imul
or
in
scas
mov
xor
push
inc
pop
xor
and
and
lea
xor
repnz
xor
cli
inc
popf
popf
test
stos
jbe
sub
lods
cmp
mov
decl
and
push
xor
xchg
cmp
ret
and
inc
push
xor
dec
fcomps
mov
cmp
sub
sub
sti
sub
mov
je
pop
or
jns
sbb
sbb
xchg
aas
push
mov
mov
test
or
scas
or
rolb
in
adc
jns
pop
ds
add
call
push
xchg
xchg
xchg
adc
ss
mov
xor
cwtl
dec
fadd
aaa
jae
repz
fsubs
ljmp
fwait
mov
add
cmpsb
xor
repz
insl
icebp
cmpsb
arpl
pop
fistpll
ja
aad
push
cmp
int3
push
or
outsb
mov
adc
push
loope
and
lock
leave
icebp
adc
jb,pt
fcoms
addr16
int3
sbb
scas
das
or
cmp
mov
cmp
sbb
repz
stos
and
ret
pop
xchg
jbe
loopne
lds
xor
cs
fs
sub
mov
and
arpl
adc
mov
pop
fwait
xor
and
push
f2xm1
mov
push
addr16
adc
clc
out
fwait
fs
nop
pop
mov
mov
dec
xchg
pop
inc
jbe
push
mov
in
mov
xchg
decl
jl
dec
addl
subb
mov
negb
xor
stos
in
inc
jns
std
jae
pushf
dec
sahf
sbb
mov
lret
js
dec
test
adc
mov
aam
ficoms
pop
fmul
xchg
fsubrs
outsl
lahf
mov
pop
cltd
adc
adc
cmpsb
xchg
push
fs
ja
adc
push
xchg
mov
stc
enter
or
mov
arpl
aas
aas
stos
push
ds
fidivrl
cli
lock
shll
lock
jnp
xor
mov
fsubrl
adc
ret
aas
push
lds
jns
stc
lock
lret
mov
ret
popf
mov
pop
jns
push
mov
jp
jle
mov
lahf
push
aad
mov
adc
aas
es
dec
sbb
xor
rorb
dec
sub
dec
stos
dec
sub
lock
push
out
out
xorb
cli
add
div
fs
outsl
pop
add
jno
leave
out
ds
mov
cmp
aaa
mov
rcll
mov
mulb
js
mov
adc
mov
cmpsl
into
jno
push
cs
jmp
popa
xor
fstl
lret
cmpsl
inc
pop
pop
imul
push
aas
mov
push
push
xchg
addr16
out
rcl
jo
cmpsb
mov
sbb
sub
mov
pop
xor
jl
shl
sahf
jnp
sbb
xchg
or
or
or
test
movsl
xchg
cmp
mov
push
add
scas
push
and
mov
sub
stos
loop
and
shlb
rcll
mov
mov
jbe
cmpsl
push
xor
movsb
je
popa
adc
out
sbb
mov
xor
jo
inc
lock
mov
xchg
cmpsl
fnstsw
add
pusha
mov
xchg
push
int3
sub
fidivs
scas
cmp
rolb
cmpsb
mov
adcb
jae
addr16
sbb
das
icebp
mov
cmp
or
faddp
sub
mov
pop
shll
pop
jns
add
movsl
aam
enter
repz
iret
aad
push
ss
inc
andl
repnz
xlat
dec
mov
mov
cvtps2pd
push
nop
mov
jmp
bound
out
mov
xor
rclb
stos
ret
test
mov
test
bound
dec
movsb
jnp
test
out
and
insl
xor
adc
mov
fbld
imul
ss
jo
cmp
inc
nop
clc
push
imul
cmovge
sub
mov
push
jns
mov
addr16
pop
cmp
mov
dec
mov
test
clc
out
inc
out
sbbb
popa
pop
scas
xor
and
and
fistpll
lcall
into
pop
jl
icebp
loopne
daa
mov
testb
shll
lods
stc
ja
rcrb
and
pop
rclb
mov
adc
push
jg
mov
and
scas
scas
hlt
lods
or
inc
sub
ljmp
push
sbb
jmp
adc
dec
cs
jns
sti
push
adc
dec
loopne
jns
mov
daa
add
daa
ret
es
in
int3
popf
sub
mov
jo
add
iret
cs
sbb
adc
jmp
jbe
sbb
adc
jbe
pop
aaa
ss
cmp
or
cld
into
xchg
inc
icebp
clc
pop
inc
shlb
add
movsl
lcall
jo
test
sti
or
repnz
test
mov
mov
mov
clc
aas
es
cld
and
movsl
mov
cmp
stc
mov
sub
lret
jae
push
mov
mov
mov
xchg
cld
sub
mov
je
xchg
push
cltd
rcrb
gs
adc
and
add
xor
mov
out
xor
xor
ret
movsl
inc
aad
push
ja
mov
pop
push
rcll
movsb
pop
scas
xchg
loop
loop
xchg
testl
hlt
imul
pusha
js
ret
popf
xchg
rorl
outsl
mov
enter
pop
movsb
sub
adc
or
add
xor
push
rorl
dec
dec
or
flds
push
sub
sub
hlt
xor
xor
shrb
dec
sub
outsb
jge
mov
cmp
xchg
leave
movsb
mov
insl
test
es
mov
enter
pusha
int3
pop
inc
xchg
bound
xor
rcrb
pop
movsl
add
fstps
ret
mov
pop
sbb
addr16
cwtl
adc
push
mov
push
fsts
nop
or
lods
jp
std
pop
push
jg
les
shl
dec
out
jno
int3
cmp
push
sub
cmp
lea
add
into
insl
or
fidivs
jo
in
ds
jge
sahf
or
jne
scas
insb
mov
mov
leave
pop
sbb
ss
or
popf
xchg
inc
fisubrl
outsl
fidivrs
push
and
pop
xchg
and
fwait
mov
insl
cmp
sbb
mov
cltd
jne
cmp
rorb
lahf
ret
call
es
adc
lret
dec
xchg
imul
mov
inc
cmp
mov
inc
jg
mov
shll
xor
fldenv
jbe
ja
fnstsw
or
jmp
xchg
mov
aad
stc
sbb
xor
test
xor
cmp
repnz
loopne
sahf
clc
jle
sbb
jle
mov
repz
cltd
cs
dec
push
adc
popf
pop
xchg
push
ss
adc
push
jne
inc
and
xchg
ljmp
fidivrl
out
insl
inc
or
int
fdivp
in
decb
mov
sbb
push
sbb
scas
loop
xor
sub
insb
dec
in
jmp
xor
mov
rorl
notb
call
mov
insb
mov
cld
xchg
pop
cmp
sti
lods
in
xchg
and
setg
push
push
add
jl
das
loope
and
add
pop
in
outsb
scas
lret
inc
fst
xor
mov
pushf
fcmovne
xor
in
add
push
fwait
jno
lret
data16
push
mov
js
mov
fwait
inc
repnz
mov
mov
add
jmp
scas
push
mov
jmp
test
dec
leave
or
jle
xor
push
out
fcomps
mov
in
jo
push
jo
xchg
pop
or
mov
hlt
sti
test
test
pusha
ret
loopne
idivb
sub
pop
imul
push
mov
ret
fldenv
clc
push
inc
jmp
daa
mov
fsubrp
add
cmp
push
push
sbb
sbb
inc
test
imul
xor
outsl
fisubrl
vpmovw2m
dec
xchg
push
add
xchg
ret
and
add
arpl
jmp
xchg
or
push
mov
jo
repz
adc
jnp
pcmpeqb
les
jle
pop
lds
fwait
mov
jbe
out
idiv
dec
xor
pop
adc
ljmp
lahf
sahf
dec
scas
pop
data16
xchg
pop
xchg
shl
mov
aas
mov
nop
in
aaa
in
out
call
iret
xorb
cmp
dec
cs
cmp
dec
scas
dec
jl
fistps
test
cmp
and
cld
jecxz
mov
mov
sarb
repz
fisubs
sbb
pop
inc
leave
pop
lea
xchg
loope
cmp
imul
dec
push
flds
add
and
test
mov
jl
push
adc
sbb
jns
xchg
fnstsw
scas
adc
or
pop
lahf
scas
and
adc
or
xor
fmul
push
rolb
add
test
mov
jb
xchg
stos
cmp
jg
xor
clc
lds
or
jb
repz
call
lahf
or
and
dec
add
mov
push
lock
ja
mov
mov
daa
lahf
out
mov
sbb
sbb
add
aam
dec
mov
orb
loope
aaa
mov
cmp
aas
or
inc
adc
xchg
sub
gs
sbb
inc
dec
push
subps
and
out
jl
jne
cmp
inc
sub
cmpb
ds
push
loop
push
and
sar
lea
adc
shll
aam
inc
lods
push
pop
arpl
push
shrb
je
cwtl
sbb
test
jge
lret
cmpb
loope
push
shlb
xlat
jle
ss
push
in
xorl
xor
outsl
or
pop
mov
daa
mov
cltd
cmpsl
sbb
sbb
push
xchg
nop
cmp
xlat
es
or
and
fs
cli
push
jge
lret
lret
in
out
jo
cltd
adc
aas
jle
or
inc
and
sub
aam
je
add
or
jbe
sbb
adc
mov
sub
cwtl
outsl
cmpb
adcb
jb
sub
cld
mov
mov
fisttps
push
and
loope
in
pop
les
icebp
mov
orl
cmpsb
xor
and
movsl
mov
mov
jnp
mov
out
push
into
fdivrl
sarl
ja
fdivp
pusha
pop
arpl
cmp
and
repz
or
add
mov
aam
jo
pop
xor
inc
lahf
cmp
test
popf
cmp
xchg
or
cmp
xlat
mov
sbb
sub
push
sub
inc
add
loop
stc
and
mov
jl
pop
push
cmpsb
dec
idivb
out
mov
xchg
std
popf
jno
subl
outsl
repnz
jo
mov
push
rcr
jb
or
popa
bound
sbb
dec
imul
lock
sub
xlat
lea
shll
lds
iret
in
xor
push
loopne
mov
xor
jns
push
dec
xlat
pop
and
std
xchg
dec
add
cmpsl
bswap
and
xchg
mov
add
adc
mov
pop
les
sti
jmp
out
sub
add
push
pop
es
inc
sub
mov
cltd
xor
in
ss
cmpsl
dec
pop
into
mov
and
sti
push
xchg
mov
sti
pop
xchg
mov
xchg
lock
inc
popa
mov
jecxz
cltd
ja
mov
scas
loope
sub
sti
out
clc
add
mov
ss
sbb
sahf
fldenv
add
cmp
sbb
xchg
mov
rorb
lods
sbb
pop
stc
add
xchg
sarb
fisttps
das
mov
jecxz
pop
rorb
movsb
divb
adc
aas
inc
loope
add
xchg
pop
inc
add
dec
dec
fwait
jo
mov
cmc
outsb
dec
sub
mov
cli
mov
mov
push
int3
mov
hlt
sbb
push
lods
pop
or
clc
test
arpl
mov
xor
fwait
push
ret
pushf
xor
mov
jge
mov
xor
outsb
in
sbb
jecxz
nop
iret
scas
cmp
push
dec
pop
and
pushf
aaa
jo
xchg
imul
mov
mov
std
dec
mov
in
push
repnz
sbb
sbb
sbb
pop
or
aad
mov
enter
arpl
mov
cmovns
mov
mov
push
add
pop
or
pop
test
das
jg
mov
addl
cwtl
add
es
aad
in
mull
push
lahf
lea
mulb
mov
pop
lcall
xlat
imul
mov
xchg
inc
lret
dec
add
cltd
leave
rcl
pop
lret
mov
adc
pop
inc
notl
repz
cmc
negb
pop
lret
cmpb
inc
cltd
repz
xor
add
mov
rcr
and
push
outsb
repz
cmc
lahf
jo
jo
lds
inc
or
mov
mov
movsb
fsubs
pop
cli
xorl
fwait
mov
sarl
push
aad
icebp
cld
gs
xchg
jo
shr
sbb
cmpsl
inc
mov
in
xchg
mov
cmc
addr16
lret
inc
dec
lret
in
mov
mov
xor
dec
mov
or
mov
push
imul
cmp
leave
lcall
jb
fs
leave
bound
ljmp
add
lcall
test
and
cmp
mov
andb
outsb
cmpsb
ret
push
push
mov
movsl
lock
cld
mov
xor
cmpsl
add
add
pop
imul
jae
adc
pop
ret
inc
loope
movsl
mov
sub
dec
pop
or
sub
xchg
insb
lahf
stos
subl
test
es
insl
sbb
pusha
pop
jns
stos
adc
lods
push
test
push
repz
lea
fxch
jecxz
in
or
filds
in
jp
cmc
mov
push
mov
sbb
inc
lcall
xchg
bound
leave
aas
jmp
xlat
xchg
or
jmp
pop
push
mov
push
mov
scas
xor
rorl
into
lea
add
mov
sbb
or
jl,pn
jge
ja
xor
pop
movsb
loop
cmpsl
adcb
xchg
push
cmp
jmp
test
mov
cli
pop
or
scas
mov
mov
rorb
testb
in
stos
jns
hlt
bound
rol
mov
add
mov
sbb
sarl
fadds
icebp
icebp
add
add
mov
jle
xor
shlb
pop
sbb
sbb
inc
cwtl
scas
and
and
mov
sub
xchg
fisttpll
fisttpll
dec
aam
adc
sahf
icebp
movsl
inc
icebp
mov
ret
cmpsb
xchg
sbbb
xor
mov
xchg
cmp
iret
jle
sarl
pop
xlat
lgdtl
inc
int3
xchg
in
dec
in
cld
negb
pop
rcll
scas
dec
stos
cmp
dec
repz
shlb
fnsave
sub
pop
mov
and
cmc
mov
push
outsl
jb
adc
sub
dec
jg
xchg
lods
push
dec
and
mov
int3
pop
fiadds
mov
mov
jns
mov
dec
mov
mov
cmpsl
dec
inc
mov
mov
and
push
jmp
sbb
adc
stos
lret
flds
mov
mov
sub
mov
test
scas
add
mov
sbb
mov
data16
scas
cltd
out
mov
sub
shl
leave
jmp
aaa
dec
and
cmpl
je
push
push
jb
mov
jno
addr16
adc
andb
mov
ljmp
pop
insb
aad
jno
push
test
ljmp
mov
jo
test
mov
lock
pusha
push
subb
adc
mov
xchg
mov
and
test
or
in
xor
aam
inc
jmp
xor
xor
loope
xor
xor
or
clc
dec
mov
xchg
inc
push
inc
sub
jns
sub
in
sbb
push
lret
insb
lods
nop
out
rorl
ds
lret
or
das
scas
in
pop
sbb
jnp
addr16
int
out
pop
test
push
mov
xchg
bound
out
sub
cld
outsl
jbe
fnstenv
push
push
pop
shrl
fnstsw
pop
test
pop
movsb
add
loope
add
int
mov
cmc
xchg
outsl
xchg
jp,pt
out
notrack
pop
dec
mov
enter
test
pop
dec
sbb
out
into
xchg
test
fcmovb
and
adc
cmpsl
jmp
ss
lcall
lds
mov
ret
mull
mov
cmp
rolb
sbb
in
adc
lcall
in
int3
push
bound
sbb
fsubl
pusha
sti
movsb
add
frstor
stos
std
fs
popf
or
jo
aaa
cli
rcrl
mov
inc
xlat
ficoms
jmp
push
or
mov
movq
and
call
outsb
and
mov
aam
mov
sbb
stos
hlt
mov
iret
cmpb
insl
fcoms
add
xchg
jnp
das
inc
and
inc
pop
leave
or
jnp
in
adcb
dec
inc
cmp
dec
add
xchg
lahf
inc
push
fisubrl
lds
mov
pop
test
fidivl
adc
cli
les
das
cmpsb
xchg
xchg
stos
jns
mov
adc
sub
xchg
xor
jge
sahf
adcl
cmp
adc
repz
test
addb
aaa
stos
jge
xor
and
lret
and
fiaddl
add
push
or
popf
xor
push
gs
rorl
and
lock
daa
inc
std
inc
push
in
dec
cwtl
scas
stc
mul
jo
cmpsb
sub
inc
adc
xchg
adc
inc
pop
popa
cwtl
in
out
xor
push
mov
aas
mov
in
cmp
add
sbb
popa
push
test
sbb
jge
xchg
out
jmp
adc
cli
sbbl
sub
test
push
and
sbb
push
push
addr16
push
xchg
push
sub
lods
arpl
xor
cmpsl
xchg
jae
sub
mov
mov
inc
into
iret
lea
sti
sub
fucomp
push
iret
imull
lods
jbe
jmp
sahf
jge
xchg
push
xor
xor
mov
pop
in
xchg
mov
arpl
pop
xlat
cmpb
shll
outsl
cmp
or
jg
cs
shr
mov
pop
pop
stos
cs
xor
js
dec
stc
push
xchg
xor
lret
fnstcw
inc
fcmove
xor
pop
push
popf
add
call
sub
mov
imul
cmpsb
push
lret
pop
and
fcmovu
push
leave
jl
xchg
sbb
and
gs
jmp
ficompl
jnp
mov
sub
cld
or
jecxz
mov
imul
jbe
xorb
sub
dec
mov
call
out
jno
or
in
iret
xchg
jl
dec
jg
sub
cmp
xlat
in
mov
lea
imulb
stos
fsubrs
test
cli
in
mov
clc
inc
add
lret
popa
js
in
hlt
daa
pop
lods
call
mov
mov
or
cmp
mov
pop
in
pop
popa
test
cmp
dec
lcall
pop
add
cmp
ds
les
test
xchg
xchg
in
lret
sbbl
xchg
push
aam
lret
rcrl
es
xor
sbb
mov
out
mov
lret
sub
cmc
mov
js
fcoml
out
sub
xlat
and
movsb
xchg
pop
pop
adc
ret
xchg
pop
mov
repnz
out
pop
in
xchg
and
aad
or
mov
jo
bound
data16
pop
mov
das
adc
and
pushf
cmpsl
punpcklbw
mov
movsb
cmp
dec
lods
fimull
cmpsl
sub
sub
jbe
fstps
sbb
adc
or
es
imul
sub
inc
mov
loopne
dec
mov
dec
xor
mov
xchg
push
push
sahf
in
les
mov
cmc
dec
xor
pop
outsl
mov
adc
sbb
cmp
std
mov
mov
adc
dec
inc
dec
add
cmpb
xorb
push
inc
cmp
outsb
pop
cld
push
pop
jb
mov
loopne
cmp
adc
jns
and
push
sbb
mov
push
mov
and
jp
scas
jnp
cmp
loopne
in
cli
mov
cmp
adc
xor
mov
pop
sub
xchg
jns
inc
xor
pop
and
lret
fdivrl
and
mov
mov
repz
das
push
loop
outsb
push
mov
cmp
mov
jge
fiaddl
xlat
aad
out
or
loopne
les
push
stos
push
mov
push
push
jne
mov
push
inc
sahf
fwait
adc
cmp
clc
in
das
cmpb
cmc
mov
lret
mov
in
cmpl
pop
int3
lea
cltd
cmp
rorl
dec
sub
in
dec
scas
pushf
stc
adc
adc
push
sti
pop
fldl
push
sub
cld
cmp
xchg
sub
fisttpll
mov
jmp
fstps
xchg
lcall
pop
rclb
inc
nop
pushl
inc
ds
out
xchg
sub
rorb
mov
dec
fidivrs
lods
sub
aas
sub
rolb
push
dec
arpl
dec
cmp
xchg
clc
or
call
stos
jno
fwait
rcll
adc
adc
and
out
push
ficoml
push
stos
sbb
aam
ucomiss
adc
sbb
scas
lret
decl
popa
mov
xor
push
bound
aaa
xchg
inc
dec
jecxz
or
fistps
fstl
int3
xor
notb
mov
push
mov
sub
loope
aas
add
in
out
adc
push
mov
clc
dec
lret
mov
mov
mov
adc
addr16
mov
pop
ss
popf
xchg
adc
and
and
mov
int
or
add
lock
jmp
xchg
movsl
sub
aad
out
incb
mov
test
sub
cmp
and
or
xchg
mov
sbb
fwait
xor
and
add
jmp
push
push
stc
scas
dec
loop
stos
enter
mov
jmp
dec
nop
fstl
cmp
add
mov
addl
imul
inc
or
or
push
dec
ja
and
das
out
adc
pop
mov
bound
cwtl
sub
push
clc
std
add
fwait
jmp
js
shrb
out
xchg
mov
stos
mov
pushf
orl
stos
pop
xlat
push
rol
fidivl
fcmovnb
pop
pusha
into
sbb
iretw
sbb
stos
jmp
jecxz
lcall
pushf
push
cmc
xor
movsb
imul
dec
or
cld
fidivl
cmp
jmp
jo
jg
dec
mov
jmp
sbb
inc
outsl
mov
ret
ja
jo
rol
add
int3
out
xchg
cmc
add
dec
lds
ds
sysret
test
test
push
or
push
movsb
ss
xchg
xchg
xchg
movsl
icebp
jp
fs
add
and
and
xchg
xchg
sub
fidivrs
out
es
es
mov
push
imul
scas
push
jno
mov
int
pop
cmpsl
lcall
mov
push
out
push
push
ljmp
mov
pop
mov
negl
and
sub
mov
je
shl
cs
ret
popf
lods
daa
scas
cld
fsubrl
cmp
pop
ds
popa
xchg
shlb
sbb
fsts
sbb
xchg
lea
inc
aad
rclb
andb
mov
push
mov
xchg
pushf
push
sub
test
cmp
jg
loopne
mov
in
push
repnz
push
mov
aaa
sub
aas
push
lods
das
or
cmp
push
mov
add
add
adc
mov
push
aaa
jmp
in
ds
jnp
test
or
ljmp
xor
fwait
mov
rcrl
test
data16
pop
lods
or
rolb
jae
jmp
pop
add
xchg
enter
popa
fwait
jns
push
sbb
sbbl
das
stos
pop
insl
pop
and
mov
sub
xor
push
add
aad
jnp,pt
mov
push
dec
xlat
jbe
out
imul
xlat
lcall
pop
stos
jb
int3
jmp
push
aam
fisubrl
push
cmp
in
lods
pop
in
jge
pop
mov
les
nop
xchg
and
add
push
ds
pushf
jne
nop
fcompl
mov
mov
inc
out
ljmp
mov
lahf
push
sti
inc
xor
into
mov
das
xor
or
inc
cmp
inc
dec
movsl
dec
test
clc
out
mov
movsl
es
jae
mov
mov
add
lods
xor
test
out
push
fadd
mov
andl
scas
clc
add
test
ret
inc
dec
push
cmp
mov
mov
leave
loop
dec
dec
int3
fildll
filds
push
cmc
popf
add
testl
add
mov
and
adc
mov
fmull
inc
push
lock
testb
movlps
jae
cmpsl
dec
cmp
fwait
mov
call
pop
clc
mov
icebp
xchg
push
cld
mov
cli
lods
and
insl
sub
cmp
test
aad
pop
inc
xchg
data16
mov
dec
scas
dec
insb
shrl
out
repnz
int
mov
sub
shl
loop
mov
inc
les
inc
dec
and
stos
push
mov
jb
ljmp
jecxz
fcoms
js
dec
sub
mov
lock
or
add
mov
es
js
cs
mov
in
mov
jne
lret
mov
adc
clc
insl
xchg
fsubrp
vmulpd
add
inc
xchg
xchg
mov
and
jno
rol
sbb
pop
ret
sub
sub
sti
mov
clc
xlat
outsb
jmp
ljmp
mov
adc
fbstp
aam
mov
repz
fimull
das
fisubl
out
lock
or
int
mov
push
mov
repz
test
push
mov
outsl
data16
inc
or
out
lea
dec
inc
cli
pop
add
js
inc
pop
or
xchg
pop
pop
xchg
popf
nop
cli
es
hlt
push
mov
inc
add
xchg
dec
dec
ret
jo
adc
repnz
mov
cli
sub
mov
in
push
das
fistpl
xor
and
arpl
sti
aas
push
sti
inc
cwtl
and
loop
int
pop
fidivrl
loop
pop
pop
push
or
cmp
xlat
pop
stc
sub
jecxz
mov
mov
js
pop
insl
sti
test
adc
push
faddl
pop
mov
dec
in
ja
js
xchg
cmp
test
imul
dec
xor
fsubr
clc
imull
js
les
fcom
dec
stos
cli
stos
es
push
ljmp
fs
sbb
mov
ret
shr
std
xor
jbe
adc
cmp
jne
arpl
jne
les
sub
mov
pop
mov
out
mov
insl
push
mov
xchg
test
dec
aam
jle
push
jo
push
push
repz
or
in
repz
cld
leave
adc
es
jmp
lods
in
sti
xor
jmp
mov
sbb
jnp
pusha
je
cmp
or
clc
iret
mov
push
and
stos
idivb
mov
and
mov
mov
inc
sub
push
jae
sar
or
aad
xchg
mov
stos
adc
inc
jl
sub
cltd
dec
push
sub
inc
adc
sub
add
mov
mov
stos
inc
rcrb
lret
mov
clc
mov
lret
sub
mov
cmp
mov
push
xchg
out
mov
in
stc
pop
lcall
mov
sub
xchg
fcmovne
push
add
imul
dec
mov
mov
sub
ret
push
push
int3
aaa
adc
lock
sahf
adc
fimuls
cltd
cmpb
pop
mov
mov
inc
orb
and
adc
int3
scas
bound
rcrb
cs
ss
push
rol
pop
mov
pushfw
inc
or
push
adc
stos
xchg
test
nop
mov
fistps
outsb
push
pushl
out
mov
out
xlat
lock
dec
dec
fsub
mov
xchg
sti
xchg
cltd
ficoml
sarl
push
es
adc
mov
loope
mov
repz
icebp
fisubl
fcmovb
adc
lcall
shll
xor
inc
or
mov
in
or
flds
fisubs
fbld
pop
test
ret
push
jle
cwtl
and
dec
cmp
data16
inc
push
pop
xchg
ds
loop
sbb
jb
call
mov
cld
cmp
or
call
jmp
rcr
scas
int3
cmp
dec
fisubl
orb
lcall
stos
add
mov
call
xlat
mov
or
mulb
xchg
adc
pop
lret
gs
add
sar
fbld
out
or
mov
jp
mov
pusha
cmp
in
fnstcw
adc
xor
mov
cld
enter
cli
mov
xchg
xchg
xor
insl
xor
jbe
or
mov
sbb
ljmp
lahf
jge
xchg
pop
push
shrb
cmp
stc
xchg
cwtl
les
imul
mov
pusha
das
adc
pushl
dec
roll
xchg
int
mov
loop
cwtl
aam
shll
mov
mov
js
test
orb
xchg
leave
gs
in
popf
dec
pop
push
popa
lods
mov
push
mov
or
addr16
cmp
mov
or
jb
sub
insb
ficoms
lret
mov
jae
hlt
in
test
push
fsub
out
into
adc
mul
mov
stos
mov
or
adc
mov
mov
sub
testl
mov
outsb
cmp
shr
sub
cmp
mov
cli
adc
loope
movsb
cwtl
out
pop
or
sbb
mov
insb
push
std
or
pushf
and
daa
nop
sbb
mov
cmp
mov
bound
mov
aaa
notb
fcoml
sahf
lock
shll
push
push
cmp
jecxz
aad
jl
or
inc
js
inc
and
ja
and
sub
pop
call
push
lcall
addb
xor
dec
lds
push
in
mull
rclb
cltd
mov
push
mov
push
push
jne
xor
xchg
fdivs
dec
mov
push
mov
insb
daa
daa
out
cmpsl
jnp
jle
jmp
std
clc
mov
and
dec
push
mov
add
mov
jnp
mov
js
pop
fistl
mov
lret
dec
aas
cmp
in
lret
movb
gs
pop
cld
bound
lret
or
jmp
notb
push
mov
jno
inc
insb
jb
shrl
xlat
or
sbb
jge
repz
mov
push
imul
push
les
ja
lcall
enter
stc
sarb
movsb
call
lret
add
mov
mov
icebp
in
int3
pop
and
push
popa
vmovss
pop
dec
in
and
dec
pop
inc
sub
mov
pop
jmp
jb
sti
push
ror
sahf
add
jb
pop
divb
fcoms
ret
out
mov
loope
jle
mov
aaa
incl
mov
test
sbb
sub
test
cld
jae
movsb
lahf
or
jecxz
rorb
cmp
xchg
ficompl
pop
sub
adc
insl
and
scas
test
int
jne
inc
xor
mov
out
in
xchg
repz
outsb
outsb
add
mov
add
sbb
neg
lods
pop
out
push
sub
add
cmp
lcall
sbb
mov
xchg
adc
pop
mov
push
cmpsl
mov
and
daa
push
into
mov
cmp
arpl
fstps
adc
imul
or
or
movsl
pop
jmp
xor
inc
mov
pusha
js
ljmp
pop
or
mov
out
and
mov
xchg
scas
cs
xor
mov
push
stc
jbe
cs
mov
mulb
add
xchg
lea
adc
jno
pop
xor
pop
xchg
test
daa
bound
shlb
neg
ds
adc
push
mov
jns
dec
jae
lock
dec
lret
ds
jno
add
pop
fstps
dec
scas
sub
ljmp
sub
out
cmp
push
xchg
add
pop
pop
dec
add
aaa
stos
data16
sahf
test
inc
aaa
mov
or
sbb
lods
add
push
test
push
and
pop
lret
nop
fidivs
test
jmp
mov
fucomi
mov
enter
cmpb
inc
fbstp
lea
inc
jg
test
mov
jns
fidivrl
xor
int3
mov
mov
or
call
push
sub
loopne
mov
sbb
pop
or
push
cmp
data16
jg
xorb
imul
test
mov
xor
push
mov
sub
jecxz
aad
cmc
cmpsb
rcrl
sbb
shrb
inc
mov
sub
jb
loope
cmp
cmp
inc
adc
test
xor
cmp
xchg
pop
mov
outsl
or
shll
or
insl
jmp
fildll
ljmp
daa
out
sub
mov
loopne
and
inc
ja
push
pop
loop
fwait
shll
cmp
adc
ret
pop
and
enter
lret
call
mov
dec
popa
bound
dec
icebp
and
mov
push
test
cmp
sbb
or
test
movsl
xchg
test
loop
mov
dec
aaa
or
dec
jmp
ror
pop
mov
nop
push
orl
fdivl
xchg
testb
push
notl
lret
inc
es
push
mov
pop
sbb
and
dec
cmc
xor
sti
xor
dec
jmp
daa
ret
stos
pop
adc
loope
dec
sub
xor
nop
xchg
loope
das
inc
xchg
movsb
imul
mov
fcomps
rorl
xor
xchg
push
xchg
fcomip
push
repnz
dec
mov
cmp
lret
into
int3
int3
lock
cmp
mov
sbb
jmp
jge
js
push
repnz
stos
cmp
sub
pop
insb
outsl
into
daa
xchg
jge
mov
add
adc
mov
xchg
les
inc
scas
rorb
mov
hlt
push
xor
mov
cli
insb
addl
loope
cmp
mov
js
push
jecxz
adc
das
jo
movsl
iret
in
loopne
adc
mov
rcll
mov
clc
or
sti
mov
ret
iret
mov
xor
divl
in
push
clc
pop
cmpb
xor
xor
sarb
cli
xlat
mov
jl
cld
xchg
inc
push
and
testl
shrl
push
repnz
inc
enter
out
test
pop
dec
pop
adc
and
sub
mov
fwait
cmpsl
mov
aad
das
sub
mov
inc
fwait
repz
xor
adc
mov
aas
lahf
mov
jmp
jns
dec
test
push
push
insl
sub
repz
push
push
xchg
cmp
pop
in
fprem1
popf
movsl
arpl
aas
inc
push
xchg
cmp
jl
sub
sti
fwait
call
call
jl
shlb
lcall
arpl
jp
inc
stos
fisubrl
les
xor
dec
xor
sub
imul
push
push
lcall
ss
fwait
jae
aas
aaa
push
xchg
jl
mov
adc
jne
pop
stc
stos
push
pop
mov
xchg
push
sub
xchg
cmp
dec
fistpll
ljmp
lret
mov
push
xchg
sahf
mov
fidivl
cld
pusha
pop
lds
stc
mov
test
add
dec
xchg
dec
pop
les
jge
pop
adc
pusha
lea
mov
sbb
pop
ja
lods
inc
repnz
iret
movsl
rcl
faddp
popf
pop
test
and
imul
loope
dec
rcrl
shrl
lods
out
mov
push
loope
mov
pop
loope
mov
into
mov
sti
clc
pop
lods
outsb
xor
push
adc
add
xchg
push
int3
les
sbb
in
push
jle
fsts
fisubl
add
aam
in
cmp
inc
arpl
xchg
pop
lock
in
cli
sahf
cmp
arpl
add
mov
xchg
fadd
mov
xor
add
outsl
pop
lret
dec
and
lods
fcompl
test
sbb
xor
jge
jle
call
add
pusha
adcb
and
nop
dec
mov
clc
jge
pushf
repnz
stos
xchg
dec
inc
pop
sub
fcoms
inc
loopne
push
sub
jnp
in
outsb
mov
mul
inc
lods
sbb
jne
cmc
js
int
test
sub
je
push
jae
xor
pop
and
icebp
pop
xchg
xchg
or
push
add
cmp
addr16
sbb
xor
pusha
adc
dec
ss
mov
mov
mov
in
inc
lcall
lahf
or
dec
mov
mov
das
outsb
fists
daa
push
sbbb
hlt
in
adc
push
mov
es
push
aas
mov
mov
pop
sbb
sbb
xlat
sbbb
cmp
mov
call
loopne
cmc
mov
add
lret
mov
sub
sar
jo
pop
push
movsl
stos
lds
lds
clc
xchg
push
sahf
hlt
mulb
push
inc
testl
js
sarl
xlat
xchg
pshufw
fnstcw
js
or
push
xlat
mov
movsl
mov
sbb
movsb
lret
repz
cltd
xchg
inc
addr16
xor
mov
dec
lret
sti
cli
mov
mov
sub
adc
mov
mov
or
sbb
loopne
sub
sbb
stos
jo
shr
mov
sbb
andb
loope
sub
xchg
push
add
push
xor
stos
daa
mov
jbe
pop
push
scas
cmpsb
xlat
jb
cmc
lahf
ret
aaa
cltd
and
cmp
mov
xchg
movsb
sub
sub
insl
xor
mov
movsl
pop
sub
xchg
mulb
imul
daa
jmp
pop
gs
idiv
fdivrl
jecxz
mov
mov
std
outsl
or
pop
dec
cltd
sub
hlt
cmp
push
and
xor
aad
lret
jp
aaa
sbb
aas
lods
mov
repz
inc
jle
leave
lcall
cmpsl
inc
loop
shll
jl
sub
mov
dec
jbe
in
cwtl
xchg
or
xor
adc
call
adc
mov
xchg
shrb
lods
leave
ret
pop
jno
mov
mov
mov
and
std
xor
movsl
jns
popl
addr16
cltd
xchg
push
shl
lcall
icebp
sub
je
xchg
mov
push
insb
xchg
in
push
and
jmp
mov
and
rcl
push
insb
adc
popf
shrb
in
ret
inc
mov
dec
cmp
dec
notb
pop
jae
loope
adc
pop
sub
movsl
xlat
or
fisubs
cltd
mov
dec
jecxz
mov
and
pop
lock
ljmp
pop
jnp
mov
inc
or
mov
es
push
test
cltd
pop
rcrl
mov
jne
adc
add
lods
xchg
lret
sbb
xor
lock
out
sbb
sbb
jp
or
mov
add
clc
je
aaa
leave
mov
lahf
mov
push
out
push
std
add
imul
sbb
pop
mov
mov
mov
cmp
xchg
repnz
mov
xor
xchg
or
rorl
xor
add
jle
sub
ljmp
xor
out
mov
dec
jge
gs
cmp
fs
pop
scas
inc
push
iret
inc
cld
adcb
imul
js
cmc
scas
add
fwait
sbb
xlat
cmp
mov
cmp
push
inc
mov
mov
lock
sbb
jo
xor
in
arpl
enter
dec
pop
or
sbb
inc
cmp
xor
mov
pop
dec
mov
inc
adc
push
adc
in
xchg
cmp
xor
lret
notb
adc
mov
ja
scas
sub
sti
out
stos
je
dec
nop
inc
stos
mov
inc
or
stos
sub
push
cmp
dec
xchg
pop
scas
negb
pop
mov
mov
cmpsb
loopne
mov
into
add
dec
pop
mov
mov
in
test
loopne
inc
and
push
fstps
and
mov
sub
cmpsl
shl
les
and
push
cmp
add
ret
xchg
pop
in
pop
lret
jns
std
sarb
sbb
addr16
arpl
mov
fwait
pop
xchg
addr16
dec
cmp
xchg
ss
sbb
mov
sti
scas
scas
sbb
sbb
fucomi
and
test
mov
or
test
lmsw
sub
popa
mov
add
and
jb
les
addr16
cmpsl
scas
aas
cltd
xchg
xor
cld
inc
cwtl
in
cmp
imul
sub
dec
add
dec
inc
adc
xchg
push
loopne
in
jae
outsb
pushf
push
rcrl
push
sarl
arpl
cmp
incl
dec
je
push
cld
lds
pop
lea
push
mov
mov
fmull
dec
inc
hlt
fadd
es
enter
std
or
dec
dec
xchg
aam
add
pushf
cmpsl
dec
sbb
cs
jo
addb
and
push
ret
inc
movsl
mov
stc
daa
add
icebp
mov
push
jl
cmp
stc
inc
scas
jl
lret
jne
aam
rcrb
ficoms
icebp
pop
in
cmp
subb
pop
inc
pop
mov
jmp
pop
arpl
sub
andb
test
les
sbb
loopne
dec
jg
and
aam
inc
and
xor
shlb
int3
sub
into
mov
in
dec
dec
cmp
inc
out
pop
dec
and
lret
aad
test
orb
xor
test
sbb
aam
inc
fs
pushf
das
adc
cmp
out
sub
mov
fs
fidivrl
jns
inc
fcoml
loopne
clc
sbb
push
and
or
scas
bound
jp
inc
cwtl
mov
and
or
xor
movsb
jno
jle
cmpsl
maxps
add
je
cmp
pop
outsb
aad
add
fucomip
fbld
loope
mov
lret
lret
loope
adc
bnd
mov
js
push
jo
dec
ret
add
push
inc
mov
insb
mov
xlat
dec
sbb
cmp
lea
clc
or
scas
addr16
jp
xor
pushf
push
xlat
jp
ficoms
shll
dec
sub
pop
cltd
mov
dec
add
sbbb
push
sbb
mov
in
popa
mov
lahf
xlat
push
fdivr
pop
inc
sub
mov
add
push
mov
mov
push
jae
lcall
pop
and
aas
inc
fmull
xor
adc
jmp
dec
push
iret
sub
outsl
adc
movsb
mov
jns
cli
out
movsl
insl
mov
fwait
jmp
test
push
fs
xor
out
cmc
stos
arpl
hlt
mov
ss
out
mov
adc
or
adc
imul
xchg
adc
cli
ja
add
cwtl
enter
xor
loope
sbb
xchg
hlt
jl
bound
xor
pop
pop
adc
in
orb
and
ret
pop
test
pop
jmp
xchg
dec
movsl
adc
out
pop
int
aad
std
push
add
or
fisttpll
fldcw
add
fildl
loope
sub
in
movsb
inc
test
imul
movsb
cwtl
fwait
out
fs
in
adc
mov
ja
imul
pop
cmp
call
fmuls
in
inc
mov
xchg
xor
dec
daa
xchg
repnz
test
cmp
push
mov
arpl
popa
mul
mov
in
adc
mov
dec
imul
push
xor
ret
mov
loopne
jecxz
mov
xchg
lcall
fs
xlat
stos
adc
or
arpl
scas
mov
ljmp
outsl
mov
xchg
inc
out
int3
cld
ret
loopne
jl
mov
jae
push
push
ss
loope
sbb
cmp
sbb
pop
cld
cmc
mov
and
xor
xor
mov
test
xor
dec
mov
mov
pop
repz
lret
call
in
sbb
fs
push
sub
pushf
pop
lcall
jbe
mov
dec
stos
jle
add
xchg
cltd
mulb
add
mov
aam
dec
add
lds
lods
adc
jp
insl
jmp
jge
popf
lret
pop
inc
mov
mov
leave
ds
mov
jb
add
push
inc
or
adc
fs
rcll
addr16
jb
add
pop
cmp
fisttpll
cmp
aad
je
mov
in
cmp
pop
ret
and
leave
cmp
add
imul
arpl
mov
dec
shll
addl
hlt
dec
add
dec
sbb
std
shlb
or
sbb
cmpsl
push
push
dec
sarl
mov
xchg
lods
imul
shlb
pop
sbb
add
pop
sub
popf
or
mov
xor
cmp
out
cs
out
mov
xchg
cmp
nop
xchg
insl
mov
mov
imul
xchg
ljmp
mov
mov
outsb
adc
das
and
xchg
mov
mov
mov
icebp
add
stc
inc
mov
jae
mov
jbe
sarb
sub
dec
sbb
xchg
arpl
jbe
and
negb
rorl
int
shrl
lret
inc
ret
les
mov
rcrb
mov
out
imul
sub
and
jno
int
aaa
dec
mov
js
sub
bound
pop
sub
xchg
xchg
rcll
out
xlat
pop
leave
mov
or
mov
fdivrl
xchg
in
and
ljmp
pop
lea
leave
jmp
or
out
jmp
mov
cltd
cld
push
mov
lcall
scas
push
fxch
fs
sbbl
mov
loop
mov
popa
pop
testl
call
into
inc
lods
aaa
inc
cmp
loope
add
pusha
jp
repz
mov
mov
adc
adcb
dec
or
cmpsb
xor
test
xchg
movsb
mov
push
addr16
and
sarl
cmp
repnz
cld
and
ljmp
into
into
add
adc
in
mul
or
out
cmp
lahf
les
jle
call
ss
add
fmuls
gs
pop
fidivrl
mov
insl
mov
repnz
cmpsl
mov
mov
je
in
add
inc
mov
mov
data16
and
insl
in
mov
lret
jbe
mov
das
mov
mov
addr16
rcll
sub
lods
cld
jecxz
jp
dec
lods
iret
ljmp
stos
mov
push
push
adc
sti
inc
xor
test
sub
daa
es
lods
std
sbb
push
call
pop
mov
jae
push
sub
mov
pop
fwait
outsb
daa
inc
xchg
cli
mov
xor
std
dec
xor
dec
orb
fsubrl
fmulp
dec
dec
inc
xlat
push
cmp
sub
push
mov
fcomip
shl
ror
cltd
lret
push
aam
ret
add
or
bnd
into
out
mov
sub
jae
mov
dec
fistl
adc
call
mov
adc
sbb
mov
push
pop
shrb
xchg
imul
fsub
arpl
in
popf
sti
popl
out
xchg
aaa
pop
pusha
mov
test
imul
lcall
icebp
mov
add
leave
xor
cli
hlt
mov
inc
jnp
ja,pn
mov
test
test
add
fsub
arpl
mov
xor
xchg
pop
dec
add
sahf
frstor
rcrl
xchg
push
mov
fs
jecxz
cltd
sbb
xchg
in
stos
jae
loope
stc
popf
push
mov
call
mov
sub
cmp
popa
cmc
cmpsl
jo
or
orl
imull
or
sbb
mov
xlat
int
lahf
fimull
jne
xor
loopne
adc
push
int3
lock
sub
inc
mov
adc
aam
mov
imul
xchg
xchg
dec
call
push
andl
push
ja
rclb
dec
repnz
enter
jae
xchg
shr
nop
pop
xlat
movb
adc
fcom
mov
je
xchg
push
icebp
cli
cmp
bound
adcl
xor
push
testb
in
xor
sahf
push
sbb
stos
push
xchg
fucomi
je
inc
lods
mov
xchg
ljmp
sti
pushf
mov
ret
and
push
mov
jmp
mov
xor
movsl
jl
sarb
gs
xor
ja
les
dec
test
pop
dec
xlat
jns
jns
sbb
adc
add
sub
xchg
nop
mov
ret
ljmp
dec
sub
out
push
jno
dec
push
bswap
cli
push
or
pop
pop
ljmp
sbb
fdivs
lcall
pop
push
add
fcmovnbe
jbe
cmp
aam
test
cmp
bndstx
aad
sarl
adc
ss
sbb
fsubrl
andl
adc
xor
cli
add
adc
loop
xor
sub
xorl
scas
daa
lock
test
hlt
js
push
add
icebp
imul
fs
imul
mov
iret
sub
leave
add
adc
imul
and
add
dec
add
test
add
cwtl
mov
mov
out
int
aam
and
push
and
sarb
imul
add
mov
xor
dec
sbb
pop
xor
jmp
pop
outsl
dec
test
pop
loop
rclb
inc
jne
shll
push
pop
popa
and
fnstenv
pop
fnstenv
sub
add
sbb
pusha
sub
xchg
xchg
push
ja
cwtl
pop
pop
xor
mov
sub
test
xlat
pop
scas
xor
cmp
out
mov
inc
shr
mov
fmull
ficoms
xor
out
push
or
inc
rcrb
push
imul
shrl
pop
mov
pushf
and
aas
ljmp
mov
je
das
cld
fcoml
out
mov
into
lods
stc
mov
outsb
pusha
jne
inc
sub
jbe
xchg
pop
aad
adcb
out
adc
xchg
cmpl
nop
mov
mov
lds
sub
pusha
data16
sti
std
jo
jne
test
outsb
pop
in
outsl
inc
add
pop
mov
sub
jle
jns
in
imul
dec
mov
out
loopne
fcompl
sub
fcmovu
popf
cwtl
out
jo
xor
inc
pop
sarl
jmp
and
dec
mov
je
fistpll
lret
popa
cmp
jmp
pop
jno
in
mov
loopne
scas
test
repnz
fdivrs
xor
mov
out
jns
btc
test
xor
push
cmc
aas
inc
fisttpll
rcll
pusha
outsl
imul
insb
std
xchg
jns
addr16
fnstenv
cmpsb
stc
cmc
pop
adc
cmpsl
icebp
lcall
aas
mov
stos
test
ja
mov
mov
std
aad
loopne
callw
dec
jno
and
fdiv
add
imul
icebp
repnz
and
mov
lret
sub
rorl
cmp
clc
xor
jno
icebp
pop
mov
or
das
sbb
pop
cld
or
outsl
pop
xor
fwait
stos
fcoms
push
ss
or
push
xor
fldt
lods
outsl
mov
testb
jne
js
cmp
ret
out
lcall
xchg
mov
imull
testb
mov
lods
inc
mov
mov
push
movlps
movb
gs
xchg
aam
xor
popf
dec
clc
sub
loop
outsb
xchg
jg
aad
push
jecxz
xor
dec
rcrl
mov
test
jp
mov
dec
xchg
push
cmp
mov
sbb
adc
iret
lret
sbb
loope
shll
xor
shll
andb
in
movsb
aam
int3
jge
lock
sub
imul
xor
lds
adcb
aad
mov
pop
push
scas
push
out
popa
push
sub
jo
pop
xor
repnz
arpl
loope
pop
push
lods
ret
fadds
into
mov
imul
mov
lcall
pop
cli
mov
push
inc
mov
daa
dec
cmp
mov
mov
inc
rolb
xor
les
scas
inc
nop
or
inc
dec
scas
cwtl
dec
push
nop
scas
pop
test
scas
sub
cmp
ljmp
push
push
xchg
mov
dec
insl
aad
adc
push
push
leave
or
mov
sbb
inc
fstl
loop
repz
push
popa
daa
loope
pop
imul
inc
sub
sbbl
mov
scas
shrb
addr16
cmc
test
idivl
xchg
dec
push
pop
iret
std
jg
mov
xchg
aad
xor
or
out
and
jnp
or
lods
aam
imul
fdivrl
outsb
push
xchg
pop
push
dec
das
jp
or
add
mov
jbe
shl
shl
inc
fbstp
mov
out
cwtl
repz
hlt
sub
sub
mov
jg
mov
xor
jmp
test
and
adc
mov
lea
test
inc
or
stos
mov
je
jecxz
jno
loopne
push
dec
xor
or
push
mov
ret
lret
sub
push
mov
mov
sub
sub
jmp
call
movsl
xchg
lcall
xor
dec
lock
adc
outsb
stc
jnp
jno
arpl
imul
js
into
aaa
jbe
mov
fnstcw
js
mov
mov
repnz
jae
incb
popa
dec
xor
dec
adc
lods
mov
push
push
or
sbb
gs
shlb
cmp
pushf
out
pusha
lds
daa
pop
pop
cwtl
sbb
lcall
loop
movsl
cmpl
in
int
insb
jo
fisubl
push
hlt
das
movsb
or
scas
inc
sahf
sbb
mov
add
ficompl
ficomps
xchg
jbe
pop
mov
flds
jle
pop
add
mov
pusha
rorb
lret
push
mov
popf
fisttpll
jns
cmpsl
mov
cmp
test
mov
mov
jae
mov
mov
push
nop
loope
push
outsb
and
push
in
lea
aaa
adc
sti
xlat
loop
int3
popa
mov
pushf
cmp
mov
push
les
fst
xor
lock
jmp
rcl
repz
test
sub
inc
lods
divl
cld
cmpsl
xor
mov
nop
ret
ret
push
mov
outsb
mov
popf
in
aaa
lret
or
stos
xchg
stos
into
sub
cmpsb
push
or
pusha
aad
repnz
imul
aad
pop
lcall
jg
cvtdq2ps
sub
mov
push
xor
out
shlb
mov
ret
cli
inc
pop
cmp
sub
xchg
inc
lods
imul
out
cmp
in
jno
adc
idivb
daa
nop
inc
xchg
outsl
mov
add
mov
out
pop
scas
ss
into
adc
xchg
insb
push
jge
outsb
aam
movsl
adc
mov
pop
push
das
jns
call
xchg
or
cmpsb
inc
scas
adcl
icebp
int3
stos
xchg
into
push
or
push
mov
outsl
sub
pop
in
sbb
dec
cmpsl
cmpb
lds
xchg
sbb
add
out
mov
or
xor
dec
push
push
test
mov
xchg
inc
pushf
sarb
sbb
jecxz
mov
jle
xor
mov
and
imul
frstor
dec
jno
push
mov
add
xor
scas
popa
pusha
mov
mov
mov
xchg
cmpsl
sub
fs
inc
xor
pop
mov
cmpb
lods
mov
lcall
popf
push
nop
mov
stos
cmpb
movsb
jne
in
jp
pop
inc
or
insl
call
gs
add
aam
pop
jmp
push
sub
jnp
fsts
arpl
cmp
fstl
les
add
xor
call
dec
sti
adc
orl
pop
imul
outsb
addb
xor
arpl
fidivl
lods
lahf
dec
daa
in
mov
and
out
jb
mov
push
pushw
ret
into
jmp
ds
mov
dec
lret
stc
dec
push
sub
adc
les
jno
and
test
lds
xchg
mov
rcrl
jecxz
lret
adc
sub
dec
cld
pop
inc
mov
pop
clc
lds
in
inc
dec
out
mov
jge
and
dec
in
cmp
sti
xor
pusha
out
out
repnz
adc
mov
into
mov
mov
stc
pop
jns
in
mov
and
roll
pop
repz
es
popf
dec
ds
shrb
insl
pop
bound
sbb
inc
cmp
xchg
leave
inc
push
fwait
push
ret
sbb
adc
sbb
and
push
xor
fwait
mov
mov
jle
or
stos
push
stos
cmpsb
cmp
dec
xchg
repnz
aad
lods
cmp
shrb
loop
lcall
and
int
pop
cmp
dec
jg
hlt
pop
mov
pusha
into
shlb
mov
jp
sahf
cmpb
mov
int3
movsl
push
sub
aam
adc
mov
into
pop
fwait
adcl
and
ret
xchg
jbe
js
sbb
mov
ljmp
jl
stos
jle
pop
mov
imul
out
adc
lea
cmpl
pop
sbb
into
mov
cmp
add
mov
sti
add
adc
aas
push
data16
push
in
loope
rcr
test
call
jb
call
rclb
cmpsb
out
cs
xchg
inc
aas
popf
or
das
adc
mov
push
sarl
inc
inc
jp
mov
arpl
sub
imul
fldlg2
jno
jo
pop
shr
pop
cmp
push
scas
push
in
pop
js
stos
sbbb
jle
and
adc
fsubrs
and
jg
mov
fidivrs
sahf
repnz
divl
mov
sbb
mov
in
icebp
adc
rolb
cmp
jg
inc
lahf
fst
mov
outsb
call
cs
repz
push
enter
add
cmp
xchg
lea
dec
rorl
xchg
sbb
aas
lret
lods
xor
add
mov
sub
sub
insl
mov
pop
gs
pop
ss
fdivrs
std
mov
pop
jno
sbb
add
arpl
inc
push
fcoml
loopne
inc
adc
icebp
ret
cmp
mov
jecxz
pop
add
iret
filds
xchg
sti
fadd
pop
jecxz
mov
aas
jmp
insl
jo
and
out
xchg
xchg
mov
push
push
mov
movsl
add
jnp
mov
pop
mov
fsubrs
jg
jl
popa
cmpsl
sbb
int3
test
addr16
pop
jne
popw
add
push
dec
inc
add
pop
enter
pop
dec
in
mov
in
push
dec
add
mov
subl
or
dec
sbb
xchg
fcompl
cld
xor
or
cmc
add
movsb
mov
loopne
jle
sbb
add
cwtl
jnp
fisubl
leave
mov
in
cld
xor
dec
icebp
lods
jmp
jne
dec
icebp
cmpb
and
xchg
imulb
add
mov
arpl
repz
iret
ret
incl
jbe
std
xor
in
rclb
push
and
pushl
scas
cmp
mov
cmpsl
push
xchg
adc
adc
add
cmp
imul
scas
inc
pop
jae
fsubl
mov
inc
mov
push
loop
mov
mov
in
pop
stc
and
das
cltd
pop
lea
repz
pop
ljmp
and
pop
cli
jmp
std
xchg
xor
xchg
das
out
jecxz
sub
dec
mov
inc
gs
sbb
mov
fildll
lods
mov
add
jbe
push
add
scas
push
xchg
out
lock
outsl
imul
push
pop
push
mov
mov
pushf
rorb
lods
add
jne
add
sbb
pop
mov
sub
test
mov
xor
inc
fadds
inc
xchg
fdivrl
mov
push
inc
and
or
pop
cmp
lods
lods
pop
fldt
out
mov
mov
pushf
xor
inc
imul
sub
mov
pop
popa
movsl
aas
push
sahf
adc
xchg
pop
pop
jns
pop
fldenv
out
scas
inc
aam
aam
div
negb
ret
push
out
pop
and
aam
adc
or
xchg
add
mov
in
test
das
cwtl
nop
sbb
rcrb
sub
bound
icebp
push
clc
daa
jns
cmp
stos
jl
jg
xchg
test
aaa
popa
rol
test
in
test
xor
dec
mov
sub
fs
jns
push
in
jp
nop
jnp
xor
cmpsb
sub
mov
daa
sub
mov
shrb
ficompl
jae
push
repnz
ljmp
shrb
in
or
push
rcrl
inc
loop
inc
mov
cmpsb
dec
sub
rcll
jae
jo
pusha
repnz
rcrb
sarl
adc
leave
addr16
mov
dec
imul
ret
and
std
out
cmp
jle
sub
dec
inc
jl
icebp
push
outsb
adc
rclb
shr
dec
test
mov
shrb
test
inc
notb
push
dec
adc
jmp
shll
mov
add
out
outsl
mov
jl
sbb
icebp
les
nop
faddl
xor
outsb
cmp
leave
jle
mov
or
fucomi
fisubrs
pop
mov
cmp
adc
lcall
jp
xchg
mov
sbb
test
out
dec
adc
sub
addr16
mov
dec
xchg
mov
fwait
sub
push
stos
inc
arpl
loop
jns
xchg
hlt
push
popa
dec
int
bswap
push
mov
sahf
loopne
mov
inc
sarl
dec
outsl
and
popf
mov
push
repnz
ret
or
leave
push
xchg
inc
mov
scas
cwtl
fistpll
movsb
outsb
mov
in
mov
or
cmp
sub
test
outsb
imul
cmp
lret
mov
and
xchg
bound
jnp
sbb
xchg
pop
add
push
loop
mov
pop
negb
mov
and
shrb
rcr
add
jnp
mov
jp
add
pop
push
rorl
xor
lcall
xchg
pusha
mov
xchg
mov
xchg
cmp
xchg
pusha
pop
rolb
jmp
mov
jmp
inc
xlat
cld
mov
inc
inc
in
outsl
jg
xchg
out
push
hlt
andl
dec
loope
sbb
mov
popf
xchg
jns
test
pop
fsubrl
jmp
mov
cmc
cmp
fimull
and
je
xchg
out
data16
mov
mov
mov
push
pop
mov
jb
pop
notb
jno
cmpsl
inc
iret
sub
int
sub
jl
sbb
jl
mov
add
clc
mov
xchg
sub
cwtl
repnz
hlt
push
mov
jg
in
pop
push
mov
cmpsl
pop
in
xchg
sbb
loopne
mov
call
lods
ds
fcoms
xor
pop
cmp
lods
rcr
push
cmpsb
aaa
gs
inc
in
daa
jbe
fbstp
jmp
adc
mov
ss
int
cli
xor
fs
mov
fdivr
lret
imul
call
add
icebp
loop
je
mov
inc
xchg
lret
adc
dec
push
add
inc
cmp
pop
rcll
and
stc
test
sarl
imul
push
rol
and
mov
jg
xchg
xchg
push
push
dec
xchg
push
scas
call
ljmp
pusha
sub
jb
sar
or
aas
sub
sbb
test
mov
cmpsb
sbb
testl
xchg
or
inc
dec
test
fpatan
sbb
outsb
mov
jne
lea
outsb
jnp
jl
cmp
dec
pop
test
test
cs
and
cld
je
mov
test
sti
jns
jo
fs
jno
mov
xor
sbb
sti
dec
mov
daa
push
fdivrl
adc
orl
sarl
jno
gs
and
add
aaa
test
inc
outsb
mov
loopne
jmp
and
arpl
lret
xchg
adc
pusha
notl
inc
mov
fcoms
cmp
inc
movb
pop
add
push
inc
ja
ret
xchg
movsb
or
jo
mov
mov
mov
add
sub
xorb
testl
sbb
jg
mov
pop
je
test
push
or
test
lock
sti
into
mov
sub
xchg
or
or
fisubs
sub
mov
std
test
xor
mov
into
mov
pusha
dec
in
insl
test
bound
mov
jns
mov
ficoml
aam
inc
cmc
out
fs
repnz
jno
or
sub
jnp
sbb
stos
cmp
or
mov
inc
rcll
cli
inc
and
jecxz
lock
pop
je
xchg
paddsb
ret
ret
insl
fstl
jnp
inc
xlat
mov
popa
fsubs
scas
imul
mov
sub
cld
jnp
jno
cmp
dec
lods
pusha
mov
stos
xor
xor
jge
loop
mov
add
jbe
data16
sbb
xchg
xchg
or
push
outsb
out
outsb
dec
mov
push
push
xchg
fs
dec
push
jns
or
loopne
sti
pop
jmp
adc
outsl
xchg
mov
sbb
sbb
push
sarb
ljmp
xchg
iret
or
push
pop
xchg
xchg
pop
cs
pop
inc
popa
cli
repz
mov
rol
psrad
jmp
push
jno
fs
jnp
stos
lcall
lahf
in
mov
pop
dec
outsl
packssdw
adc
shl
push
out
lods
sbb
repnz
cld
daa
push
xchg
xchg
inc
xchg
mov
push
ja
hlt
mov
ret
push
or
in
dec
cmc
cli
inc
scas
popf
popf
mov
mov
mov
lcall
out
or
or
cmp
rclb
mov
lds
sti
add
leave
dec
stos
pop
mov
xchg
jno
inc
test
push
int
mov
std
insl
repnz
xchg
jnp
add
aam
xchg
in
add
loope
dec
popa
mov
outsl
adc
cmpb
sub
sub
or
sub
call
xor
mov
es
dec
add
hlt
and
call
xor
pop
sub
mov
push
mov
into
test
loopne
imul
scas
mov
cmp
jle
cmp
out
cwtl
negb
sbb
lds
lods
inc
inc
jle
mov
test
push
inc
or
repz
outsb
jle
cmpb
mov
mov
loope
clc
imul
add
jmp
ficompl
loope
hlt
sbb
and
enter
mov
cmpb
pop
stos
sbbl
xor
sub
sbbb
inc
pop
add
les
fwait
ret
dec
mov
je
mov
pop
aas
pop
pop
add
mov
mov
fidivrl
mov
scas
stos
enter
push
negb
insb
sbb
push
scas
fists
lods
push
fxch
pushf
adc
stos
outsb
xchg
push
adc
pop
rcrl
cli
jae
push
repz
shrl
xchg
fld
out
mov
je
mov
aad
daa
xchg
inc
jno
adc
xchg
xor
cmp
lock
push
add
cmp
cltd
xchg
notl
dec
cwtl
jo
cli
jl
cmp
push
test
adc
mov
mov
addr16
loop
cmp
and
jo
fisubs
stos
jne
in
xor
xor
pop
xchg
dec
jb
jae
das
clc
adc
int
jg
in
lods
sub
sahf
faddl
pushf
cmp
les
jne
and
roll
pushf
iret
lret
aad
inc
into
lea
rcll
sbb
sbb
pop
dec
mov
movsb
fimuls
cmp
divl
icebp
sub
data16
scas
xlat
cmc
jne
shlb
and
outsb
push
sub
lds
ds
fwait
call
ds
jnp
mov
sti
icebp
stos
ss
andb
gs
lock
xchg
jg
or
iret
into
repz
nop
and
insb
or
pop
xchg
dec
and
adc
xor
pop
sbb
push
mov
ror
lcall
xlat
or
cli
popf
faddl
jecxz
fmull
mov
cmp
sar
dec
and
ds
sarl
push
jecxz
lahf
ljmp
add
cld
imul
dec
xchg
in
inc
inc
jmp
dec
jg
clc
pop
push
dec
mov
xor
mov
jo
cld
and
cmpsb
jmp
sarl
cmp
scas
outsl
push
xchg
fwait
sbb
push
cmp
dec
mov
xor
pop
add
ja
jmp
neg
insl
jae
mov
mov
insb
mov
je
jae
lret
jo
adc
or
xor
jbe
mov
jle
js
fistpl
mov
or
call
sub
inc
jmp
and
out
inc
orb
mov
sub
dec
pop
sahf
xor
scas
mov
push
rolb
wbinvd
gs
xchg
jo
enter
repz
jns
scas
ficomps
sub
pop
icebp
int
jbe
jle
pop
mov
jo
xchg
pop
mov
dec
nop
xchg
push
out
jns
or
or
imul
dec
sets
pop
dec
push
sbb
hlt
cs
mov
sahf
aaa
mov
loop
lods
cmp
sub
mov
sub
inc
add
ljmpw
cmp
sbb
icebp
cmp
fldcw
fsubs
mov
jae
loop
lcall
ficomps
mov
push
shr
aas
daa
adcb
insl
ja
push
push
ret
jp
xor
into
ret
dec
hlt
or
in
cli
pop
cwtl
jmp
rcll
fs
out
or
inc
jb
and
sbbl
inc
mov
lds
jecxz
xchg
ds
shll
dec
cmpsl
fnsave
int
lock
jmp
mov
jno
in
mov
rorb
pusha
adc
shlb
shlb
and
mov
inc
push
ret
les
sub
nop
stc
aam
sbb
jl
cmpsl
js
push
ds
add
add
jle
mov
cmp
push
xchg
pop
test
stos
rolb
mov
scas
call
jp
cld
mov
cld
cmp
push
cltd
cmp
or
in
inc
je
sbb
add
jge
xor
icebp
rcl
ljmp
jne
subl
xor
popa
arpl
jno
mov
andl
movsb
lods
ret
jno
prefetch
leave
fiadds
push
mov
sbb
enter
jns
jl
ja
mov
mov
dec
shll
outsb
push
mov
subl
sub
sub
movsl
in
xor
iret
cwtl
out
cmp
ds
sbb
inc
jl
cmc
mov
fimuls
sbb
sbb
pop
mov
pop
loopne
xchg
jns
mov
and
mov
dec
jne
mov
pop
pop
inc
add
outsb
and
imulb
adc
mov
dec
jle
pop
sub
shl
leave
xchg
mov
pop
sbb
ljmp
imul
sbb
xchg
inc
lea
andl
dec
pushf
mov
fmull
jmp
or
or
fnstcw
pop
enter
xor
test
xchg
out
xchg
and
sbb
dec
mov
add
xchg
mov
loop
rcrb
mov
dec
sbb
cmp
and
ret
std
sub
sbb
int3
and
sbb
add
add
and
lcall
dec
push
push
jmp
mov
mov
dec
hlt
es
cld
out
xor
mov
pop
mov
or
sbb
pop
mov
jbe
in
xor
lods
popa
mov
sti
in
push
addb
xor
cmc
and
fdivl
dec
dec
mov
fwait
cli
mov
lods
xchg
sub
push
mov
cmp
gs
sub
or
fs
inc
test
loope
daa
push
adc
adc
rcll
rcrl
or
mov
aam
add
mov
mov
sbb
dec
daa
cmpsl
stc
mov
add
xchg
add
fucomip
fs
or
jb
popf
scas
lods
fistpl
testl
and
in
shlb
add
sar
mov
das
fcoms
imul
sub
jb
xor
mov
pop
fsubp
mov
mov
ja
push
out
mov
xor
jg
sbb
jg
insl
das
test
pop
add
sbb
or
ja
popa
lcall
mov
jmp
data16
fdivr
outsb
pop
aam
inc
mov
add
ret
or
sub
jge
sub
lcall
mov
sbb
dec
push
push
into
aaa
in
cmp
call
and
bound
bnd
call
nop
les
popa
pop
loope
xlat
push
add
adcl
rcl
xor
inc
lock
sub
insb
ss
fabs
dec
insl
leave
inc
mov
or
es
addr16
cmp
roll
or
inc
iret
or
test
fildll
lods
mov
shlb
jbe
push
ret
jecxz
icebp
mov
insl
neg
dec
dec
movsb
stc
repnz
sub
pusha
rcrl
jb
xor
rol
pop
scas
shlb
jl
xchg
insl
push
cli
lods
pusha
mov
stos
sub
loope
mov
mov
sbb
sarl
adcl
adc
aam
clc
mov
in
or
outsb
sarb
add
ficomps
add
mov
fistps
fisttpll
cli
int
stos
ret
lea
or
adc
adc
repz
inc
push
sub
movsb
cmp
sbb
cmpsl
cmpsl
dec
adc
jns
pop
jg
and
jns
pop
push
xor
mov
cmp
mov
aad
dec
ss
fcomps
push
andb
fwait
and
icebp
mov
nop
imul
bound
jns
and
xchg
mov
xor
jae
mov
mov
add
fnstsw
xchg
and
lods
and
push
sub
xchg
sbb
test
std
jmp
xchg
sub
out
adcl
in
push
xor
sti
mov
xchg
sub
insl
adc
icebp
adc
incb
xchg
cltd
pop
aam
or
loop
jl
pop
jp
sbb
and
xor
cmpsl
in
inc
ret
jl
ret
ds
lret
mov
mov
adc
pop
mov
push
rcrl
in
test
jecxz
sbb
jecxz
xor
push
fsubl
out
dec
outsl
and
xchg
jmp
push
sub
dec
mov
mov
sub
sub
mov
clc
xchg
xor
mov
push
jmp
repz
cmc
fdiv
lock
fsts
mov
leave
adc
popa
push
int3
pop
lods
or
xchg
push
add
stos
xchg
jno
cmp
cmp
inc
inc
mov
iret
out
loop
push
ss
aaa
xchg
fisubs
js
lock
adc
inc
fistpll
pop
mov
sbb
test
cld
popa
push
push
adc
inc
js
sbb
in
mov
gs
mov
xor
mov
dec
test
je
fstp
insb
inc
stc
ja
sub
push
stc
je
aas
dec
jl
icebp
xchg
push
movsb
js
mov
mov
jb
xlat
addb
adc
mov
cwtl
mov
or
out
imul
sub
loopne,pn
shlb
inc
xchg
in
sbb
imul
les
lods
inc
imul
inc
test
loop
pop
in
pop
test
int
test
push
repz
mov
mov
or
mov
jne
jnp
or
push
aaa
adc
cmp
mov
movsb
and
repz
std
xchg
shrl
mov
xchg
in
cli
pop
and
shlb
test
fcompl
jo
out
outsb
in
repz
sub
push
out
repz
icebp
xchg
jno
sub
adc
inc
cmc
cmp
stc
aam
jmp
stc
sub
cmp
lock
aas
sbb
mov
xchg
add
xchg
pushf
mov
inc
inc
and
das
pop
jo
je
lods
ljmp
out
fcmovnbe
ja
jmp
sbb
and
mov
imul
or
and
into
sbb
sbbl
inc
dec
repnz
mov
scas
fmul
cmp
je
shrb
jae
jmp
and
pop
pop
pop
jecxz
dec
shrl
in
in
adc
loopne
add
and
dec
xor
fneni(8087
sahf
push
sbb
test
mov
sub
test
add
inc
popf
movl
and
mov
jae
mov
and
mov
cli
xchg
scas
hlt
xor
nop
test
mov
fs
ja
lcall
lods
xchg
aas
pusha
stos
cmp
push
xchg
cmp
cmp
int
fwait
cmp
cwtl
mov
mov
cmp
adc
sbb
adc
push
jae
xchg
fisttpll
movsl
jle
cmovb
xor
cmp
xor
sub
push
ljmp
test
mov
lods
icebp
sti
shrb
pop
into
sub
mov
adc
dec
lcall
cmpsl
pop
fldl
mov
cmp
xchg
add
jle
adc
sbb
xor
mov
push
sub
cmp
fmulp
nop
fstpt
sub
pop
push
sbb
fnstcw
scas
mov
cmpsl
int
imul
imul
mov
xchg
jl
and
pop
sbb
scas
cmp
push
movsb
xor
xor
subl
int
dec
addr16
hlt
ds
add
cmc
outsb
jmp
in
cld
insl
dec
aam
cs
mov
inc
hlt
fisubrs
inc
ja
and
aad
push
xchg
fidivs
mov
sub
test
adc
js
pop
cmp
ljmp
imulb
lea
adc
push
sbb
daa
push
xor
jae
bound
or
movsl
insl
xchg
fsubs
divl
adc
dec
lods
cmc
adc
rcll
inc
xchg
xchg
cmpsl
int3
or
ljmp
pop
mov
bound
jecxz
stos
aam
cmp
js
pusha
or
adc
fsubrs
pop
xchg
sarb
cli
mov
ret
lahf
insb
mov
add
clc
insb
jb
out
in
testl
mov
add
subl
mov
scas
fs
cltd
sbb
rclb
mov
aas
mov
cltd
mov
outsb
mov
mov
das
jg
addb
cmp
push
shr
out
dec
mov
and
cmp
inc
sbb
clc
into
in
outsl
dec
jl
inc
popa
std
cltd
lods
mov
mov
sub
pop
jo
gs
rorl
mov
pusha
les
test
pop
fcomps
stos
cmp
adc
lods
pushf
mov
jb
jmp
xor
pop
push
roll
cmp
int
or
lods
pop
out
repz
fsubrs
stc
sub
out
stos
push
popa
jo
fdivr
sbb
pop
inc
fdivrs
adc
les
jle
xchg
std
xchg
push
cmp
ret
push
mov
imul
push
mov
add
sbb
insl
xor
jl
and
lret
xor
add
dec
and
sub
sti
fwait
aaa
mov
outsb
sub
push
push
aas
xor
insb
xor
push
sbb
lahf
into
rcl
sub
mov
loop
push
jp
jmp
mov
in
mov
mov
cwtl
push
xor
int
push
mov
pop
xor
jmp
jb
lds
pop
or
dec
into
fimull
jl
sub
int
imul
je
aaa
addr16
pop
or
out
aad
shlb
je
cltd
pop
sbb
xchg
out
and
dec
sub
sub
pop
and
pop
dec
add
mov
xor
pop
fbld
dec
mov
int
lcall
push
sub
ljmp
popa
add
or
inc
adc
cld
add
xor
pop
adc
jmp
and
enter
add
xchg
sub
ljmp
mov
push
jle
fnstsw
jno
sub
xchg
add
cmpsb
jge
and
aas
xchg
popf
mov
xor
ds
dec
add
mov
pop
stos
cmpsl
clc
xor
sbb
or
mov
ficompl
out
aaa
inc
xchg
cmpsl
jmp
xchg
std
pop
xlat
cld
jp
pushf
push
xor
or
fnstenv
cmp
aaa
addr16
xor
fisttps
loope
push
cli
add
mov
or
mov
mov
mov
shrl
add
jl
cmp
lcall
mov
ret
aas
into
pop
push
into
fisttpl
sub
mov
push
clc
push
sub
mov
icebp
push
xor
add
enter
ret
int3
jno
add
dec
push
xorb
sub
fcomps
xor
repz
push
jb
cld
or
sarb
mov
lock
aaa
jp
and
and
adc
insl
mov
pop
lahf
ret
mov
pop
or
push
sub
inc
push
inc
lods
sbb
ss
mov
sbb
and
xchg
xlat
enter
cmp
mov
rcl
adc
and
dec
inc
inc
cmpsb
mov
into
inc
and
les
mov
ror
lret
and
scas
addr16
mov
cmp
add
fdiv
jb
dec
call
int3
out
push
ja
xchg
add
cmpb
scas
add
sub
stos
pop
inc
es
aam
mov
pop
mov
int
push
push
loopne
add
mov
xor
inc
shrb
jmp
das
ss
jmp
mov
repnz
mov
sbb
inc
push
inc
ret
aaa
ret
call
jp
stc
xchg
lods
nop
mov
mov
int
loopne
ljmp
adc
call
cwtl
pop
sub
scas
jmp
sub
nop
pop
xor
dec
mov
pop
lret
sub
mov
push
fbld
mov
mov
fistl
out
xor
js
xchg
jbe
nop
xchg
es
push
adcb
inc
cli
xchg
mov
jl
test
mov
mov
jo
test
call
jmp
push
mov
pop
jg
sub
lcall
inc
mov
or
add
addr16
negl
divb
mov
pmullw
lock
jb
fsts
in
mov
sbbl
sbb
xor
testb
dec
rorl
push
bound
lea
jo,pn
jmp
ss
insb
sbb
lahf
pop
bound
sub
outsb
les
repz
add
jl
clc
sbb
xor
sarl
pushf
movb
adc
jge
inc
shld
pusha
test
cli
outsl
adc
push
mov
jl
imull
insb
mov
cli
jb
fs
dec
addr16
mov
int
cld
lahf
mov
repnz
inc
addr16
ja
or
cmpsb
and
push
popf
mov
test
lcall
leave
sahf
mov
dec
inc
rcl
insl
test
leave
mov
lods
jbe
aam
fcoml
std
inc
sub
mov
xlat
xor
outsb
lods
adc
or
mov
lret
sbb
mov
fmull
xchg
out
dec
adc
xor
out
and
adc
fcompl
pop
stc
inc
jmp
or
das
notl
xchg
loop
imul
xor
leave
je
xchg
jno
outsl
push
aaa
ret
pop
fidivs
inc
hlt
es
jno
idivb
stos
cltd
adc
int
loop
mov
adc
loope
cmpsb
sub
arpl
mov
fwait
mov
sub
insl
ret
sbb
cli
pop
sub
mov
push
or
xor
sbb
movsl
orb
jecxz
call
addr16
push
in
jg
out
into
jb
icebp
mov
stos
mov
call
mov
adc
into
inc
pop
iret
pop
jmp
cmc
aaa
sarb
and
xor
iret
adcl
bound
or
cmp
movsb
mov
xor
movsb
adc
mov
test
adc
sub
out
jmp
inc
repnz
push
adc
push
cmp
inc
mov
pop
fiaddl
in
mov
adc
pop
popa
adc
popf
jg
jle
jle
ret
das
or
xchg
lcall
ds
aad
arpl
cmp
mov
xchg
or
mov
aad
and
dec
data16
mov
xchg
stos
lret
xchg
lods
inc
cmp
rolb
cvttps2pi
fcomps
mov
inc
or
sub
inc
popa
inc
xchg
sub
stos
mov
paddq
xlat
out
insl
std
or
into
leave
aad
icebp
sti
lret
cmp
fiaddl
add
shll
outsb
adc
leave
sub
insl
arpl
sbb
out
pop
xchg
mov
aam
cs
pop
pop
into
adc
push
mov
cmp
jp
inc
push
inc
leave
je
dec
rcll
pop
jo
dec
sahf
aam
faddl
addl
cmp
orb
arpl
add
out
dec
bound
jg
loope
push
mov
xor
imul
dec
das
iret
add
mov
cwtl
cld
sahf
scas
lret
adc
cmpl
or
leave
outsb
in
fsub
mov
mov
xchg
roll
clc
mov
add
cmp
xor
cmp
push
add
leave
pop
mov
in
scas
mov
in
adc
iret
enter
mov
loope
popf
arpl
js
lock
mov
pop
push
insl
sarl
push
xor
fdivl
jne
adc
jb
enter
xor
mov
enter
jno
mov
dec
fistpl
mov
cmp
cmp
jae
xchg
aad
fwait
mov
nop
or
test
into
add
outsb
xorl
mov
pop
lret
repz
lret
xchg
addb
fdivr
add
loope
pop
mov
xor
insb
pop
pop
fidivs
out
negl
in
in
mov
or
mov
jne
insl
xor
sub
sbb
cmp
les
dec
cwtl
bswap
xor
add
stos
das
mov
test
push
sbb
inc
adc
adc
dec
cmc
xor
das
div
lods
inc
sub
cli
mov
pop
jmp
jno
int3
cmp
adc
add
mov
pop
into
pop
jnp
jnp
lds
jno
mov
or
movsb
rcl
jbe
icebp
push
shrb
jns
fsubrp
cli
mov
out
and
insb
adc
cwtl
aam
ja
sub
xchg
repnz
inc
repnz
int3
pop
sub
sub
flds
das
cmp
inc
jmp
mov
stos
or
les
mov
or
inc
stos
daa
loopne
and
outsb
cmp
in
test
mov
or
lods
mov
add
les
dec
pop
add
inc
and
fs
mov
mov
nop
dec
int3
mov
ja
xchg
mov
cld
icebp
leave
js
imul
lods
inc
movsb
fwait
jno
std
subl
jne
dec
xor
pop
or
cmpsb
mov
sbb
sub
adc
enter
jae
add
mov
enter
add
fbld
push
mov
clc
jge
cmp
scas
adc
sub
cli
clc
dec
test
jne
lcall
mov
rorl
enter
cmpsl
stc
mov
repnz
inc
mov
mov
pop
sub
add
xchg
lret
data16
cli
jl
insl
adc
fcmove
cmp
push
imul
add
lret
mov
in
aam
mov
sbb
lock
data16
lret
ja
cmc
es
pop
gs
movsl
push
pop
cs
jbe
xor
loopne
lods
fisubl
into
hlt
mov
loop
out
mov
das
inc
mov
push
ja
imul
cmp
rcrl
inc
sti
push
out
cs
xchg
adc
sub
loop
rclb
sub
lret
inc
cmc
jp
outsl
xchg
xchg
lahf
add
inc
jno
aaa
sub
les
or
xor
pushf
sbb
sub
cld
ret
sub
clc
mov
leave
add
in
sbb
push
mov
sbb
imul
movsb
loop
dec
xchg
jp
xor
jne
jmp
dec
mov
cmc
insb
stos
test
pop
sbb
push
or
in
loope
cwtl
hlt
jb
ret
je
call
stc
popa
mov
hlt
inc
and
les
xlat
inc
jae
test
int3
inc
jg
sti
sub
push
xchg
dec
mov
cmp
in
jae
hlt
or
cmpsb
in
xchg
cmp
cli
xchg
xchg
loope
out
cwtl
cmc
div
shlb
in
add
cmpsb
scas
lret
cmpb
cmp
ret
lahf
xchg
or
lcall
mov
jae
pop
pop
sub
jp
jne
mov
sbb
cmp
mov
dec
or
aad
xor
into
sub
cmp
jae
mov
mov
cmp
inc
push
test
lds
add
xchg
add
lock
push
adc
data16
out
cltd
xchg
jns
xchg
hlt
mov
cmp
aas
xchg
sbb
out
inc
out
sbb
mov
jg
or
push
mov
enter
jp
mov
and
daa
test
xchg
xchg
lret
or
mov
pop
gs
test
mov
pop
or
cmpsl
pop
cmp
cltd
leave
fldenv
insl
cmpsl
insl
and
jns
test
scas
jecxz
xchg
enter
inc
fstl
adc
lahf
int3
push
add
dec
cmp
xorb
dec
pop
and
or
xchg
inc
int
in
hlt
in
nop
out
pop
jmp
push
mov
pop
scas
test
aas
out
add
in
mov
out
test
pop
mov
outsb
add
jecxz
xchg
mov
jge
mov
insl
stc
aad
xor
and
mov
daa
leave
sti
lods
and
adc
ficoml
mov
shll
fwait
jns
lahf
mov
popf
nop
in
pop
xor
dec
dec
and
fisubs
dec
xlat
inc
test
stc
xlat
repnz
add
ljmp
sti
jecxz
mov
nop
jl
adc
dec
loop
ret
pop
ret
push
fiadds
test
mov
gs
and
jge
xor
inc
sbb
mov
idivl
repnz
imul
fldenv
adc
mov
sub
lds
cmp
clc
shrl
xchg
shr
out
jp
xchg
or
mov
retw
push
jl
sub
sub
mov
pop
inc
add
lods
test
notb
gs
mov
mov
mov
fs
jge
leave
add
je
dec
test
pop
daa
xor
pusha
in
mov
psrld
mov
imul
scas
lea
push
insl
fwait
sahf
loopne
mov
loope
mov
sbbl
aad
push
es
pop
push
and
jno
pop
push
fdivrl
in
out
divb
das
daa
xor
stos
jmp
sbb
test
call
xchg
addr16
push
icebp
lea
pushf
cmp
xchg
and
dec
xchg
popl
xchg
or
xchg
fidivrl
cmpsb
xchg
xchg
popf
sub
cmp
add
insl
xchg
or
xor
lock
inc
pmullw
jne
pop
popf
adc
out
xchg
fnstcw
sbb
and
jle
leave
out
and
push
lods
negl
sub
out
test
hlt
std
mov
jne
push
pop
sub
mov
xchg
cmp
push
xor
xchg
push
xchg
sti
les
sbb
fwait
dec
mov
cmp
fbld
xchg
push
xchg
xchg
imul
and
repz
adcb
pop
or
jg
jp
mov
jmp
loopne
or
dec
fnsave
jge
rorl
out
jne
and
xchg
popa
inc
add
cmpsl
and
roll
outsl
stc
loopne
shrl
jp
sbb
fnstenv
lahf
mov
fimuls
cld
pop
jns
xchg
jecxz
mov
push
testl
iret
into
xchg
push
sub
gs
pop
xor
vmread
cli
push
cmp
lahf
repnz
dec
xchg
mov
repnz
in
scas
sub
lcall
sbb
out
sarb
dec
enter
push
mov
sub
stos
js
loope
add
and
je
jo
or
xchg
test
xchg
adc
sub
shrb
sbb
jno
dec
sahf
dec
out
mov
sub
dec
icebp
fldenv
mov
in
mov
or
subb
enter
inc
loopne
add
cmp
xchg
lahf
movsl
loop
movsb
add
in
sub
sbb
sub
sbb
sbb
add
add
sub
arpl
stos
hlt
and
xchg
mov
dec
jb
add
and
stos
dec
jle
mov
mov
jecxz
sbb
add
insb
jg
ja
and
pushf
outsl
out
les
xchg
mov
in
sbb
test
adc
xchg
popa
cli
adc
pop
adcl
xchg
pushf
cmp
mov
xchg
sbb
je
mov
inc
mov
jmp
mov
scas
mov
sbb
adc
out
jl
pop
icebp
add
jg
mov
mov
adcb
jne
mov
sahf
sub
pop
pop
fcmovbe
jl
lods
xor
mov
xor
iret
ljmp
rcrl
sbb
lds
jno
int3
push
xchg
cld
repnz
push
sbb
sahf
mov
xor
and
pop
mov
and
idivb
xor
call
sahf
mov
lcall
pop
cmp
dec
cmp
add
lods
pop
fcoml
cmp
push
jbe
mov
stos
or
add
dec
aas
jecxz
inc
mov
adc
mov
cmpsb
or
mov
sub
mov
xchg
jle
mov
pop
and
adc
daa
fbld
add
sbb
cmpsl
jnp
pop
shl
stos
mov
adc
mov
int
xlat
out
mov
test
movsl
push
inc
push
push
adc
dec
imul
std
cld
ljmp
subl
jnp
jbe
out
jg
add
sbb
cmp
mov
inc
movsl
rorl
mov
dec
stos
cmp
jmp
lods
ret
or
inc
pop
cmp
sbb
cli
movsb
das
push
xchg
stos
cs
mov
pop
das
cltd
lock
cli
mov
xor
imul
cs
test
inc
mov
ss
arpl
loope
mov
lcall
scas
mov
mov
jno
inc
fiaddl
xlat
xchg
xor
mov
popf
insb
mov
dec
jg
push
mov
imul
mov
xor
out
filds
bound
push
mov
test
inc
dec
imul
cld
fisubrl
pop
shll
jp
cld
imul
xlat
cmp
jbe
cmp
sti
push
mov
inc
xchg
clc
mov
imul
rorl
or
pushf
add
mov
jbe
mov
lcall
cltd
jg
mov
sbb
stc
lret
jnp
push
xchg
jl
les
fs
inc
sub
popf
rcrl
jl
mov
lods
pop
inc
xchg
iret
jecxz
and
add
mov
inc
mov
neg
xchg
push
inc
xchg
xlat
ret
jbe
movsb
test
cltd
cltd
ficoms
jg
mov
clc
pop
sti
mov
popa
pop
jecxz
mov
pop
xor
shlb
sbb
cmpsb
xor
mov
add
mov
sbb
dec
jp
pusha
or
xor
and
push
arpl
and
mov
mov
shl
sbb
aad
iret
popa
adc
cmp
lock
adc
or
int3
sub
sbb
mov
dec
repnz
cmpsl
xchg
mov
inc
pop
jbe
xor
sub
push
mov
shl
adc
push
add
mov
pop
xchg
sbb
pushf
in
mov
stos
std
popl
add
addl
add
test
out
data16
lretw
and
xor
lea
scas
xlat
sbb
test
stos
cltd
repz
das
leave
ret
adc
movnti
fidivs
or
movsl
scas
fdivrs
push
pop
mov
in
xlat
add
mov
in
lret
fisubrs
pop
clc
inc
addb
call
xchg
repnz
inc
fs
mov
hlt
aas
lods
mov
rorb
jae
js
add
movsl
or
sti
sub
arpl
pop
push
and
arpl
sub
mov
mov
or
cmc
lret
push
mov
inc
gs
iret
push
lds
push
sti
push
jl
scas
mov
pop
dec
enter
pop
mov
xchg
adc
fnsave
lret
shll
lea
enter
jne
mov
outsb
int
xor
and
fwait
outsl
fidivrs
and
dec
or
pop
out
scas
fdivrs
cwtl
jg
mov
cltd
add
int3
ret
or
fwait
sbb
roll
out
jae
sub
daa
add
xchg
pop
pop
test
cmp
inc
or
and
test
rorb
sbb
sub
fstps
stos
aaa
inc
mov
xor
or
popf
in
pop
iret
sub
jmp
fsubs
out
add
or
rcrb
nop
ss
jge
ds
fsubrl
and
jmp
mov
xor
jns
mov
in
mov
sbb
fs
xchg
push
push
cmp
add
aad
data16
cwtl
inc
into
xchg
dec
aad
pop
jae
xor
mov
movsb
ds
insl
mov
jmp
dec
adc
xor
lahf
xor
jo
fwait
pop
cmpsl
test
test
sbb
jb,pt
dec
sbb
shlb
push
jo
jecxz
lds
mov
loope
lahf
xchg
pop
jns
sbb
xchg
stos
lcall
push
xlat
lcall
xchg
scas
add
xchg
addr16
sbb
jp
xchg
mov
dec
and
cli
mov
std
les
in
ror
outsb
js
sub
jbe
insl
loopne
pop
mov
hlt
mov
cmpsb
mov
mov
jle
shr
dec
lock
dec
jb
test
mov
mov
push
div
jns
repz
ret
hlt
ret
dec
mov
mov
pop
jae
dec
pushfw
ljmp
mov
push
popf
loopne
jno
decb
mov
repnz
mov
sub
fwait
incb
mov
xor
mov
jle
in
sti
add
xor
sub
test
pop
nop
aam
pop
push
sti
mov
jne
pop
cmp
mov
cli
mov
cmp
cmc
and
xchg
adcl
cmp
mov
sub
mov
pop
and
imul
nop
sbb
adc
or
cmc
inc
or
and
lret
scas
inc
jb
ret
sbb
pop
add
test
jmp
xor
imul
sar
mov
sub
cmp
test
sbb
je
push
dec
mov
faddl
mov
and
stc
xor
adc
popf
add
or
cli
dec
lea
scas
in
jnp
lea
mov
lods
in
ljmp
lret
and
jb
jmp
push
lods
out
mov
aaa
xor
push
sub
fsubr
adc
jecxz
sahf
sbb
popa
fs
mov
hlt
jp
mov
add
xchg
mov
or
xchg
cmp
scas
lahf
imul
pusha
jne
push
data16
xchg
jecxz
lods
jno
adc
pop
loopne
pop
dec
leave
mov
fidivl
pusha
ror
cmp
mov
jecxz
or
rcrb
insl
adc
lds
sbb
xchg
daa
push
cmpsb
negb
pop
out
sbb
je
lock
and
addl
imul
cmpb
sub
fwait
add
pop
sbb
sbb
fsub
out
imul
fists
sub
mov
ror
das
enter
pop
add
leave
ret
test
test
leave
pop
stc
xchg
xchg
aaa
adc
push
cmpsb
int3
loope
mov
movb
adc
lret
sbb
push
lret
inc
je
pop
int3
cmc
outsb
outsb
dec
fildl
inc
inc
jo
mov
out
test
cmp
push
jae
rcl
pop
mov
jae
rolb
sbb
test
or
cmpsl
sbb
adc
cmpsb
sarb
imul
out
aad
mov
jo
rol
cwtl
arpl
jecxz
add
push
mov
hlt
int
scas
mov
jge
adc
push
lods
pop
inc
pusha
lahf
mov
loopne
nop
sbb
xlat
mov
ret
push
mov
pop
push
mov
jl
in
xchg
insb
fcompl
fdivl
nop
mov
out
push
cmp
inc
push
test
in
xchg
daa
cld
xchg
push
mov
cmp
mov
mov
fucomi
lods
imul
mov
adc
mov
scas
sbb
xchg
addr16
cld
popa
sbb
or
into
sub
sbb
sbb
xchg
push
mov
mov
cltd
add
movsb
push
mov
jecxz
loopne
in
ljmp
mov
sub
je
mov
or
call
imul
in
sub
mov
sub
sub
shlb
mov
imul
into
pushf
arpl
sbb
mov
mov
pushf
movsb
cmp
and
dec
adc
stos
jns
ja
adc
aam
rcll
or
jge
js
arpl
mov
fneni(8087
and
push
mov
cmp
xchg
lret
int3
scas
insb
imull
adc
xchg
repz
les
cwtl
fisubrs
jne
dec
pushf
outsb
and
iret
adc
and
adc
sti
sbb
pop
pushw
sub
jmp
loop
pop
fimull
cmpb
clc
xchg
mov
xchg
lods
popa
pop
xchg
cli
stos
addr16
lock
mov
cmpsl
and
adc
aad
xor
push
leave
arpl
test
aaa
xor
in
jmp
cwtl
je
mov
lea
out
dec
lea
inc
push
test
jo
les
lds
mov
dec
jb
rolb
or
sub
fstpl
push
lods
sub
push
mov
outsl
and
cmpsb
inc
nop
jnp
xchg
ljmp
cmpsl
add
mov
lods
xchg
lahf
push
fldcw
mov
mov
movsl
mov
xor
fwait
popf
ss
nop
pop
mov
gs
xchg
mov
cmp
xchg
or
fldl
dec
fdivrs
ljmp
out
and
icebp
stc
in
test
push
add
pop
or
ret
dec
adc
out
rcrl
lods
mov
jbe
mov
xor
sti
lcall
or
aad
test
mov
push
dec
xchg
fdivs
sahf
mov
addr16
jge
or
jmp
mov
loope
adcb
pop
xlat
mov
adc
sub
and
and
js
inc
jns
add
ljmp
mov
mov
mov
faddl
out
dec
popf
stos
push
cs
add
xlat
mov
pop
rclb
pusha
inc
imull
or
add
or
push
xchg
jo
enter
mov
imul
sarb
pop
cmpsl
imul
adc
push
push
sbb
inc
arpl
cld
loope
andl
mov
pop
cmp
sbb
ret
inc
add
clc
or
hlt
mov
push
or
cmp
push
test
pop
pusha
adc
add
scas
out
adc
push
std
lods
lods
add
into
jmp
xchg
pop
pushf
jmp
es
lret
repz
push
pop
pop
push
cltd
shl
push
pushf
jle
outsb
add
insl
loope
insl
mov
movsb
cmpsb
movsb
add
int3
call
lret
das
inc
xchg
xchg
bound
int
jne
sbb
ret
jno
cmp
sub
fcomps
lret
inc
adc
lds
cmc
incl
mov
cwtl
out
add
cld
mov
ret
xor
notl
fidivs
sbb
xor
daa
mov
xlat
push
adc
lret
popa
xchg
insl
and
dec
test
shrl
shl
and
jb
and
lea
cli
lcall
ret
mov
fstpt
insb
inc
sahf
or
xchg
fcom
inc
orl
cmpsl
lds
shrb
dec
rcrl
fbld
out
mov
lods
jmp
pop
sbb
iret
push
int3
scas
gs
fcoms
adc
mov
push
sbb
sahf
pop
push
notb
mov
pop
je
mov
call
test
add
xchg
scas
test
jns
cmp
xlat
cmpsw
lahf
bound
test
cltd
xchg
mov
push
and
in
fisubl
mov
xor
mov
mov
in
insl
jne
jno
or
sbb
cmp
pop
imul
pusha
dec
iret
ret
adc
jb
sub
sbb
adc
mov
push
bound
bound
repnz
sub
mov
jge
sub
and
dec
sub
adc
inc
adc
or
pop
rcl
enter
add
pusha
inc
shll
jo
test
pop
inc
cwtl
aad
outsl
dec
pushf
adc
out
fcmovnb
popf
rcrl
adc
dec
adc
mov
mov
sub
or
mov
pop
mov
inc
jns
sahf
addr16
pop
inc
adc
pop
scas
xchg
sarl
in
outsl
icebp
mov
pop
add
mull
lret
pusha
out
lret
xlat
in
dec
cmp
lcall
imul
popf
jo
push
ss
mov
fildl
add
xor
test
in
cmp
orl
pop
aad
packsswb
xor
cmp
jmp
int3
sti
rcrl
ret
adc
push
inc
mov
insl
pop
int3
or
pop
lcall
pop
cmp
mov
dec
mov
daa
cmp
mov
add
std
in
out
test
xlat
ret
and
push
xor
out
jp
test
icebp
xor
push
es
repnz
xor
sub
popl
mov
jnp
jnp
outsb
shll
mov
imul
jo
dec
push
mov
ficomps
outsb
out
lret
cmpl
xor
inc
pop
ret
sub
decb
sarb
lods
scas
dec
ret
mov
imul
fwait
loopne
test
loop
and
jmp
pop
xor
or
mov
xor
mov
test
leave
xor
mov
int
mov
xchg
cmp
insb
std
js
mov
push
push
adc
mov
hlt
xlat
movl
outsb
aas
es
dec
xor
cmpsl
sarb
push
das
sub
mov
xor
and
jae
imul
jb
icebp
cmp
test
lea
push
xor
mov
lods
or
push
and
pop
xor
inc
and
frstor
push
shll
outsl
sbb
push
sub
loopne
pop
xor
int
jns
popf
test
mov
in
cmpsl
jo
add
addr16
add
push
mov
push
inc
daa
lods
pop
xorb
adc
jp
xchg
lahf
stos
add
dec
or
lock
pushf
lock
or
sti
add
scas
xchg
sub
out
hlt
lock
sub
add
adc
adcb
lea
jmp
and
push
cmpsl
mov
test
jmp
inc
push
idivl
jge
rcrl
inc
into
out
sub
xchg
repz
sbb
rcll
aam
mov
and
push
pushf
inc
cmp
enter
mov
fisttpll
ret
cltd
pop
jg
popf
pop
imul
xchg
xor
insl
mov
ljmp
cmp
repnz
push
adcb
mov
adc
push
mov
imul
xor
push
adc
mov
leave
mov
out
and
sti
ljmp
jb
and
adc
sub
xor
add
es
xchg
xchg
ljmp
ret
cmpsb
mov
data16
das
testl
adc
lcall
mov
mov
jmp
popa
and
lods
dec
jnp
pop
test
xor
sbb
int3
fstps
sbb
ja
js
mov
int3
xlat
mov
test
repz
jmp
and
and
pop
inc
mov
dec
fdivrs
push
cmp
add
dec
mov
jmp
es
push
push
out
dec
aas
repnz
mov
add
cmc
lret
ret
cmp
flds
adc
mov
and
sub
jo
push
sub
test
je
lret
incb
mov
jg
pop
nop
cltd
push
scas
jo
lds
outsl
int3
dec
out
imul
scas
icebp
je
test
jg
shrl
push
jno
orl
cmpsl
add
mov
jl
mov
cwtl
pop
jb,pt
mov
mov
in
ret
fs
lahf
push
inc
loope
mov
cmpsl
mov
lock
cmp
mov
push
jae
cli
pop
mov
mov
data16
idivb
pop
pop
push
sahf
cs
jmp
sbb
mov
sarb
mov
jmp
push
sbb
stc
mov
push
sarb
addr16
pop
arpl
shl
push
or
pop
data16
add
sbbb
out
shll
push
test
mov
pop
push
out
dec
mov
sbb
inc
mov
sub
dec
jp
push
push
push
mov
stos
push
fistpl
int3
xor
jp
and
rorb
lret
push
out
mov
push
imul
dec
add
pushf
mov
xchg
mov
les
sub
aad
and
pusha
test
push
stos
xchg
xorl
pushf
xchg
lret
add
adc
ror
out
into
pushf
das
movsl
sub
hlt
adc
mov
and
sbb
jae
inc
ret
xor
fisubs
insl
out
adc
dec
shr
mov
lret
clc
sub
sbb
xchg
xor
icebp
stos
out
inc
movsb
dec
insl
das
sbb
push
push
push
lods
dec
inc
shufps
mov
sbb
xlat
test
lcall
test
inc
incl
mov
fwait
sbb
insb
fdiv
lds
pop
add
test
pop
cmp
les
jl
loope
xchg
shl
lahf
adc
xor
ret
adc
imul
xchg
mov
xor
orl
add
out
daa
lret
push
xorl
and
insl
xor
push
popa
lcall
jle
mov
rolb
rcll
aad
pop
or
out
adc
fwait
push
mov
clc
test
pop
stc
int3
dec
sbb
fisttpl
jecxz
xor
call
outsl
movsb
push
dec
idiv
add
or
push
pusha
sarb
fidivs
insb
idivl
roll
mov
rcll
jns
dec
subl
inc
rolb
cld
test
adcl
jge
movsb
mov
adc
lret
lret
dec
in
cmp
add
sbb
insb
clc
je
cmpsl
xlat
pop
insb
nop
mov
repz
xor
mov
mov
cmp
daa
push
jge
and
nop
push
and
xor
iret
in
icebp
add
jb
iret
inc
and
arpl
cmp
cwtl
xchg
mov
mov
push
cwtl
in
movsl
in
negl
pop
jns
mov
mov
pusha
insb
xchg
push
xchg
dec
add
addr16
mov
jmp
jge
dec
sbb
adc
jo
fsubrs
push
mov
popf
dec
jne
mov
das
js
sbb
testl
out
sub
pop
cltd
mov
mov
fadds
mov
sarb
cmp
mov
push
lds
pop
shlb
insb
push
adc
sub
mov
iret
adc
in
mov
mov
add
in
mov
sub
xorb
inc
push
mov
insl
sbb
nop
mov
or
or
fiaddl
ljmp
test
ss
xchg
les
cmp
data16
stos
jl
inc
icebp
imul
ljmp
fisttpl
push
inc
mov
testb
addl
xchg
or
vpsubusw
ret
lods
inc
lods
mov
iret
cmc
icebp
inc
push
mov
adc
daa
cmpsb
dec
and
add
inc
adc
jp,pn
push
cmpsl
shll
mov
xchg
aaa
jle
add
inc
dec
mov
lods
lret
lret
add
add
popa
push
pop
cmp
mov
scas
jbe
add
adc
rcrl
cmp
je
xor
adc
lcall
out
cmp
xor
scas
cmp
and
mov
fiaddl
arpl
sbbb
inc
ljmp
jnp
lret
sbb
popf
xchg
std
inc
inc
inc
outsl
or
sbb
xor
jecxz
sub
js
movsb
jge
aad
enter
adc
pop
inc
dec
lods
lret
test
xchg
int3
cwtl
mov
in
pop
inc
xorb
cli
popf
iret
mov
mov
mov
push
mov
sbb
or
test
sti
or
sti
xor
xchg
std
mov
pop
jl
std
mov
lret
inc
adc
fwait
movb
outsl
push
fcoms
dec
ljmp
pop
xchg
inc
inc
push
cmp
sub
rorl
xor
orb
cld
push
xchg
pop
adc
mov
ret
sbb
sbb
pushf
jno
sbb
stc
je
dec
lock
movsl
mov
jmp
mov
push
outsl
cld
xor
pop
dec
mov
lret
popf
mov
das
pusha
jns
shl
dec
push
xchg
mov
dec
xor
ficompl
mov
ja
pop
mov
repnz
outsb
inc
xchg
iret
adc
negl
cmc
push
bnd
rcr
rorl
jg
mov
test
pop
adc
andl
push
sub
into
movsl
jl
push
imul
sub
arpl
sub
cltd
jmp
adcl
and
pop
enter
inc
addb
ret
shlb
imul
mov
pop
cmp
lret
cmc
sti
insb
jo
stos
cwtl
push
std
rol
sbb
jns
in
imul
xchg
faddl
jb
or
insl
mov
daa
loop
push
mov
jns
xchg
cli
sar
hlt
adc
mov
mov
je
int3
enter
dec
and
cltd
stos
add
jo
sub
stos
ret
adc
nop
hlt
xor
inc
add
pop
bound
iret
adcb
fdivrl
subl
dec
push
rol
cltd
push
out
push
dec
sbb
fidivl
icebp
dec
mov
aam
add
popf
scas
std
push
mov
fsubrl
pop
test
lea
mov
and
out
jmp
ret
push
out
scas
scas
dec
andb
inc
aam
inc
sbb
add
out
xor
lock
shll
jl
cld
lds
pusha
or
xor
inc
insb
int3
push
mov
dec
xchg
call
sub
mov
js
and
out
stos
subl
cli
pop
mov
lea
popf
cmpsb
and
stos
mov
pop
loopne
xchg
jle
in
scas
push
and
inc
pop
xchg
std
adc
cs
iret
cwtl
dec
xor
mov
cmp
lret
cmp
test
xchg
sub
add
jo
es
inc
sbb
nop
or
int3
jae
and
inc
inc
xchg
mov
push
loop
scas
call
and
cmp
daa
push
mov
inc
out
sbb
and
inc
mov
pop
lds
not
jg
fiaddl
jns
out
sahf
xchg
clc
cmp
std
adc
jno
mov
int
inc
aad
adc
inc
daa
lds
pop
out
mov
xchg
ret
adcl
in
data16
mov
push
adc
out
xchg
outsb
pop
fiadds
shrb
and
push
fldt
pop
xlat
sbb
mov
pop
int
push
pop
fists
ljmp
push
jge
scas
jge
fdecstp
jl
stc
push
int
je
mov
xchg
into
inc
adc
loope
add
and
ficomps
xchg
jge
xchg
out
and
int
pop
pop
pushf
xchg
xlat
and
xor
nop
cltd
cmp
mov
mov
iret
or
ror
mov
push
xchg
mov
push
test
mov
cmp
pop
or
outsl
fs
push
nop
push
inc
in
sahf
pushf
cmpsl
pop
inc
dec
adc
or
jae
arpl
popa
push
xchg
cmp
xor
aad
outsb
xchg
addr16
mov
mov
nop
jnp
aas
dec
mov
xchg
sarb
lods
test
and
dec
jecxz
xlat
push
out
ljmp
inc
sbb
addr16
sti
pop
and
xchg
scas
les
mov
jno
or
xorb
lret
in
inc
inc
mov
mov
negl
mov
mov
sahf
icebp
fldl
fwait
jp
les
jmp
aad
inc
sbb
fs
shlb
sub
rolb
sub
ror
lds
add
jg
inc
stos
test
jns
or
inc
loop
jl
ja
sub
aaa
aam
stos
push
push
jbe
iret
imul
inc
push
fcmovnb
inc
fisubrl
fidivrs
pop
jnp
outsl
pop
sub
outsb
aam
push
mov
push
push
shlb
fidivrs
dec
pop
pop
inc
inc
cmp
inc
pop
or
jb
aad
and
stos
xlat
dec
gs
xor
loopne
das
data16
and
inc
and
add
gs
mov
xchg
lea
cmp
orb
or
mov
leave
sub
mov
cvtdq2ps
in
xor
add
mov
mov
adc
and
xor
bound
xor
sahf
cs
xchg
push
lea
pop
xor
push
pop
mov
cmp
xchg
fld
mov
mov
xchg
add
jmp
jle
rcl
jmp
mov
addr16
adc
mov
lods
jmp
xlat
in
into
cwtl
mov
in
sbb
push
call
repz
imul
mov
mov
imull
inc
jg
sbb
rclb
or
dec
cmp
inc
repz
call
or
adc
out
ret
dec
xchg
sbb
fstps
ja
dec
imul
jns
cmp
addr16
adc
sub
int3
jecxz
push
add
in
shlb
repz
ljmp
and
and
pusha
int
jb
push
jge
pop
pop
pop
mov
pop
arpl
shrl
or
inc
insl
dec
in
dec
loop
in
push
sub
push
pop
ficoms
or
mov
mov
icebp
mov
dec
or
pop
jne
adc
xchg
push
test
sub
shrb
ljmp
push
dec
push
push
jae
add
lods
jne
push
jb
dec
scas
fimull
leave
mov
jl
jmp
ret
sub
jmp
inc
pop
jae
jbe
cmp
clc
scas
mov
lret
cmp
insl
or
adc
adc
fs
mov
popa
pushf
sar
sub
inc
dec
xchg
jne
insl
mov
mov
lahf
out
addl
pop
lds
cmpsl
push
enter
mov
add
jne
push
pop
jb
or
inc
ljmp
inc
sbb
loop
fmul
loop
mov
insb
scas
inc
jno
push
mov
lret
mov
lahf
xchg
les
push
pop
test
cmp
fnsetpm(287
mov
js
popa
mov
mov
cmp
lret
xchg
rclb
pop
add
test
sub
cmp
xchg
aam
mov
int3
xor
push
movsl
jno
xor
into
dec
or
bound
mov
enter
pushf
adc
fisubl
sbbl
sbb
jmp
loopne
and
andb
sub
sub
dec
xor
dec
and
add
sbb
mov
cmp
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
lcall
imul
push
test
bnd
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
pop
dec
mov
inc
jnp
lahf
fs
cwtl
ja
pop
imul
add
sarl
xor
push
inc
fdivrl
jbe
insb
test
mov
les
js
or
mov
inc
jno
js
inc
dec
shl
lods
les
test
sub
lds
xchg
lret
nop
subl
xor
fmuls
or
or
push
pop
scas
les
dec
or
js
inc
dec
shl
lods
lds
sbb
int
ds
xchg
pop
pop
push
push
aas
cmp
lock
mov
mov
push
pop
aas
xor
js
mov
push
push
arpl
repnz
push
xor
mov
jb
mov
pop
push
cmp
mov
bound
push
push
xor
xor
jb
scas
mov
add
bnd
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
fisubl
add
int3
fisubl
add
mov
add
mov
add
icebp
jb
mov
pop
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
adc
movsb
push
push
push
jbe
mov
mov
loop
addb
fstp
fisubl
add
jb
in
fisubl
add
mov
add
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
push
push
xor
mov
jb
mov
pop
push
sbb
mov
jb
xchg
jle
shll
test
pop
inc
mov
rorb
mov
in
xchg
imul
inc
mov
pop
cmp
rcr
roll
out
sbb
js
jns
movsb
cld
jnp
jp
mov
repz
xlat
or
add
pop
std
sub
fidivs
lock
outsb
pop
pop
sub
jp
or
in
jne
repnz
dec
inc
in
jmp
loop
cmp
daa
jp
xchg
das
data16
test
icebp
sub
add
mov
xchg
mov
js
fs
in
iret
mov
cmp
mov
inc
aad
and
es
adc
roll
hlt
xchg
ja
ret
outsb
ljmp
and
add
cwtl
push
scas
sbbl
sbb
or
dec
push
in
pop
mov
mov
xchg
mov
cld
outsb
repnz
dec
cmpsb
shll
insl
mov
sub
push
fwait
mov
jae
in
sub
pop
shrl
ret
mov
popf
stos
inc
jnp
adc
mov
push
arpl
lcall
cs
push
leave
cmpsl
outsb
jns
movsl
adc
pop
push
push
mov
mov
out
lcall
add
lock
add
or
xchg
sbb
call
sbb
clc
hlt
js
fists
imul
push
dec
mov
mov
test
adc
dec
test
xorl
fsubrp
aas
aam
inc
out
xor
inc
mov
fidivrl
sbb
xlat
or
fcoml
icebp
repnz
or
sbb
lret
push
inc
xor
cmp
mov
test
mov
lret
lret
mov
sbb
jge
pop
ficomps
int3
push
mov
cli
subb
repnz
xchg
xchg
outsl
dec
cltd
push
dec
je
in
add
divb
lcall
les
pop
or
push
pop
mov
and
ss
lods
cmp
dec
xchg
dec
fs
jno
jae
imul
rolb
cs
lret
imul
pushf
mov
cli
lea
repz
rcrl
inc
hlt
sub
cwtl
repnz
shr
in
cmc
cmp
pop
movsl
add
fcoms
pop
pop
mov
cmp
in
mov
decb
adc
ror
xchg
outsb
sarb
xchg
jo
push
cmpsl
pop
sub
lods
inc
adc
les
int
cli
push
lds
lcall
fdivp
xor
lods
xchg
xor
arpl
mov
outsl
jge
mov
mov
icebp
and
dec
mov
out
pop
adc
mov
in
add
insl
pushf
cmp
fisubrs
inc
pop
loop
mov
jne
imul
sbb
dec
movsb
in
sahf
xor
inc
mov
and
push
push
jge
scas
jecxz
pop
dec
or
sti
fists
fstl
add
dec
call
sub
imul
mov
push
dec
aas
xchg
fildl
rorb
loope
cmp
mov
or
sbb
fpatan
stos
dec
sub
imulb
jmp
sub
test
hlt
jno
mov
clc
pop
in
xor
push
jae
enter
push
aam
pusha
push
cs
sti
add
fwait
mov
mov
int3
push
pop
xlat
or
out
mov
cwtl
or
popf
xchg
insl
mov
movsb
lret
ret
xchg
cwtl
sub
cmp
cld
cmp
lds
lret
mov
cwtl
cltd
stc
mov
repz
or
mov
fcmovbe
push
out
xchg
xlat
xor
lcall
aad
ds
out
push
sub
in
fiaddl
inc
sub
and
in
test
mov
orl
dec
adc
cmp
pop
imul
js
decb
out
xchg
std
addr16
test
outsl
inc
cmp
lods
adc
daa
adc
popf
dec
xchg
adc
jl
inc
orl
jmp
sub
mov
aam
movsl
inc
jns
enter
sbb
imul
xor
out
xchg
das
loop
push
iret
jnp
fsubs
fs
ja
jp
or
xorl
shrl
mov
xchg
inc
fdivr
sub
aas
xchg
loopne
mov
push
sbb
cs
fidivl
ja
inc
iret
add
mov
loope
into
imul
les
insl
or
mov
outsl
cs
push
jns
xchg
insl
jecxz
daa
pop
ljmp
mov
pmulhw
dec
pop
fldenv
xchg
movsb
mov
inc
sbb
adc
jmp
or
leave
cmp
aaa
or
jp
sbb
out
enter
xchg
adc
loop
fisubl
and
mov
mov
push
in
out
or
ds
xchg
sub
sarb
inc
das
lods
and
dec
add
jmp
and
aam
loop
push
xor
push
addr16
inc
sbb
dec
rorb
cltd
cmp
dec
mov
jnp
inc
int
lret
add
divb
test
jle
lock
aaa
push
sbbb
bound
cmp
cmpsl
scas
mov
or
pop
push
sub
pop
jns
imul
out
aaa
xchg
cmpsb
adc
xchg
js
out
sub
xor
sub
adc
pop
inc
add
into
sbb
and
in
les
mov
cmp
clc
mov
sub
push
xor
jmp
cmc
mov
push
push
inc
data16
movsb
push
loope
je
sub
cmp
mov
test
fcmovbe
stc
mov
iret
jle
push
leave
ljmp
mov
int
popf
mov
push
or
adc
xor
add
je
mov
movsb
loope
fnstsw
xlat
mov
test
pusha
or
cmp
sub
xor
jmp
adc
aas
in
fisubs
mov
cwtl
cmp
fnstcw
adc
sbb
sti
pop
inc
inc
imul
int3
pop
mov
mov
enter
jae
clc
or
aaa
xchg
pop
fistl
pop
lcall
outsb
aas
mov
jo
iret
xlat
jne
std
out
das
xorl
dec
push
xchg
outsl
jmp
push
lods
pop
sbb
ljmp
rcll
call
inc
orl
or
mov
xchg
push
pop
and
xchg
cmc
lahf
ja
and
cmp
movsb
not
jmp
in
mov
cli
jnp
lods
dec
movsl
rolb
lock
cmpl
imul
sahf
aad
add
ss
fisttpll
and
cmp
jae
and
mov
pushf
mov
inc
shrb
and
sub
cmp
dec
test
clc
pusha
cmp
lcall
outsl
jb
lods
cmpsl
push
ljmp
push
out
idiv
pop
xchg
pop
pushf
mov
sti
pop
enter
pop
sbbl
adc
pop
icebp
mov
cltd
push
jo
mov
aam
xlat
mov
loopne
jae
fcmove
mov
into
clc
int3
jb
mov
jp
cmp
out
je
pushf
xchg
sbb
in
stos
lods
xor
ds
movl
ret
mov
leave
cmpsl
mov
out
or
out
xchg
iret
jae
rorb
icebp
mov
in
adc
sbbl
cli
mov
ss
cmpsl
fldl
cmp
cmpsl
xchg
std
sbb
icebp
loope
fstl
outsl
shlb
int
ret
icebp
icebp
imul
mov
push
push
push
dec
xor
inc
sub
ds
into
pop
dec
sub
stos
add
pop
cltd
and
filds
sbb
jns
adc
out
imul
aad
adc
push
in
pop
dec
mov
xor
sub
xlat
xchg
pop
test
jne
fiaddl
pop
sbb
sbb
push
aaa
ja
cs
rorb
mov
mov
arpl
movl
mov
dec
sbb
push
jmp
mov
adc
mov
ret
mov
jle
xchg
mov
jmp
mov
aas
scas
or
shlb
pop
test
popf
inc
nop
mov
in
push
ss
in
pop
push
dec
push
lahf
inc
loopne
ret
or
test
mov
in
dec
add
cmp
into
and
shll
jp
insl
pop
popf
or
fidivl
fcomip
loopne
sbb
shr
dec
mov
int3
pop
add
jnp
xchg
xor
jo
sbb
fidivl
into
mov
xor
xor
cmpsl
jne
lret
sti
into
mov
inc
arpl
aas
adc
mov
pop
or
and
and
cmp
in
loopne
dec
jl
or
cmp
ss
sbb
fsubrs
into
mov
jo
mov
mov
in
pop
mov
or
adc
push
insb
pop
adc
mov
or
lds
subb
cld
push
sub
push
repz
stc
xchg
jno
cwtl
lds
pop
lods
xchg
cmpb
repz
sub
cs
into
imul
add
in
and
hlt
js
mov
arpl
pop
mov
cmp
pop
sbb
jnp
xchg
jne
mov
adc
div
lahf
movsb
inc
mov
movsb
mov
xchg
out
inc
in
repz
fimuls
in
lret
inc
add
adcb
cs
ss
and
add
xchg
int3
sub
in
jle
inc
movsl
pop
sbb
jo
cltd
add
mov
cmp
in
cwtl
and
jo
fisttps
xor
lea
stos
lahf
cmp
das
inc
jp
mov
mov
mov
test
jno
test
adc
pusha
loope
mov
and
mov
pop
out
add
sbb
mov
mov
inc
cwtl
mov
fsubp
in
pop
rolb
test
int
adc
xor
loopne
orl
cmp
lds
jno
gs
inc
lods
gs
and
stc
push
push
enter
lret
mov
inc
xchg
test
call
call
iret
cmp
pop
movsb
xor
sbb
in
sub
loopne
outsb
sub
int3
jns
int3
xchg
mov
jo
pop
ja
xchg
and
push
mov
adc
push
mov
add
mov
negb
popf
mov
enter
and
dec
rcll
mov
dec
add
lret
xchg
and
lcall
add
pop
daa
mov
lds
cmp
inc
jb
push
fidivs
cwtl
gs
mov
xor
xor
dec
xor
dec
data16
sub
sbb
mov
ret
es
mov
sub
aaa
daa
cltd
movsl
divl
adc
gs
jle
sbb
jno
jns
mov
push
jle
xorb
adc
imul
mov
inc
jno
push
jns
js
arpl
inc
aas
lock
push
jo
stos
mov
pushf
mov
stos
and
pushf
loopne
xor
jne
cmp
push
out
ss
and
sbb
dec
pop
fs
jecxz
add
aaa
sub
aas
enter
cli
js
inc
push
push
jbe
add
stos
cmp
std
mov
xor
shrb
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
