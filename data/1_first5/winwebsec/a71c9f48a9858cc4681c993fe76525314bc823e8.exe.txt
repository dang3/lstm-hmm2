cmpsl
pop
jge
jmp
movsl
xchg
stos
xchg
stos
ds
daa
and
lods
push
fimull
bound
insl
subl
dec
push
mov
sbb
lea
movsl
stos
pop
push
aaa
fstpt
rol
ljmp
sub
adc
imul
les
mov
jne
andb
push
pop
stos
movsb
adc
push
sbb
movsb
out
addl
daa
lods
inc
push
movsl
or
or
jmp
inc
dec
xor
push
mov
cwtl
xchg
inc
push
ret
jecxz
cmp
add
sbb
int
icebp
shl
xor
jge
add
xor
pushf
inc
mov
push
push
push
lea
jmp
sbb
sbb
xor
divl
lret
popa
push
nop
lods
sub
cmpsb
ds
in
sahf
insb
fs
inc
push
sbb
mov
ja
imul
mov
sahf
cmpsb
das
pop
cli
cmpsl
push
mov
mov
lods
icebp
pop
mov
sbb
pop
jbe
jns
or
sti
sub
negb
cmpl
not
mov
fsts
cmp
imul
mov
push
inc
movsb
sub
fistpll
jns
rolb
jb
cmp
lahf
xchg
enter
movsl
dec
mov
out
or
pop
xchg
push
and
stos
mov
fwait
aad
pop
sti
mov
cld
mov
add
aam
sub
mov
jnp
and
test
or
jmp
test
shll
xor
push
add
std
pop
fnsave
inc
mov
jle
inc
stos
pop
mov
lahf
adc
mov
sub
popf
call
addr16
repz
push
push
push
daa
xchg
push
insl
cmc
jbe
xor
and
out
inc
mov
mov
xchg
sub
jnp
pop
dec
push
stos
das
adc
and
out
xchg
jg
ja
lret
mov
imul
lcall
inc
mov
mov
sub
adc
dec
lgs
lock
and
mov
out
adc
xor
scas
outsb
fstps
xor
clc
push
push
cmp
mov
pop
cli
lcall
mov
imul
shrb
mov
push
or
lock
inc
dec
into
mov
addb
jnp
repnz
aas
int
loope
lahf
popf
adc
leave
shll
push
gs
or
je
adc
test
sbb
icebp
mov
sti
cmpsb
notb
push
jae
mov
cmp
xchg
sub
sbb
push
shrl
je
imul
xor
loope
mov
fs
fdivrl
sbb
ret
cmp
test
out
cmp
cmpsl
outsl
rcl
mov
loopne
mov
aaa
gs
loopne
cmp
aam
mov
divb
xchg
bound
push
mov
add
xor
mov
arpl
popf
aam
dec
and
je
gs
daa
jecxz
inc
jno
clc
push
cmpb
add
push
dec
adc
cli
sub
jae
and
in
ret
ret
sti
xchg
pushf
jecxz
clc
mov
push
jne
xchg
les
mov
scas
push
mov
aad
into
pop
xor
xchg
or
test
xchg
out
mov
fldcw
push
push
into
inc
imul
sub
dec
push
jp
loop
lcall
jbe
out
arpl
push
xor
xchg
fstps
sbb
and
pushf
mov
jno
fmull
je
xchg
mov
push
dec
sahf
lcall
aaa
stos
rcll
inc
jp
js
mov
push
aam
leave
add
iret
jae
clc
sahf
testb
inc
and
mov
pop
bound
mov
fs
dec
jecxz
inc
jmp
jno
pop
pop
jecxz
push
inc
xchg
rolb
scas
mov
test
sub
jae
es
repnz
mov
jle
add
sub
jns
cmc
iret
sub
es
bound
loope
mov
pushw
cs
and
sahf
xchg
scas
hlt
dec
lahf
imul
data16
rcrl
aad
push
fnstsw
xor
into
pop
jne
pop
mov
mov
lret
mov
pop
into
mov
stos
cmpsb
push
push
inc
jnp
pop
sub
inc
sub
jl
mov
loope
push
xchg
mov
xor
iret
sub
push
sub
nop
sub
mov
push
jg
xchg
mov
outsl
lods
mov
daa
jecxz
je
xchg
and
ljmp
aas
add
adc
jbe
sbb
dec
cmp
mov
adc
mov
shr
adc
out
stos
pop
leave
xchg
add
sbb
insl
sub
bound
or
lret
fidivl
aaa
adc
push
pop
out
dec
mov
cli
dec
les
test
xchg
and
sub
lods
rcrl
in
test
push
push
data16
inc
fistl
movsb
mov
lods
clc
jl
mov
mov
bswap
mov
iret
mov
adc
popf
adc
mov
push
dec
sub
mov
sub
test
xchg
icebp
xor
mov
loopne
scas
js
aas
es
jbe
cmpsl
cmp
jp
fdiv
cmp
outsl
mov
pop
jnp
adc
pusha
sbb
sahf
add
js
lock
and
inc
nop
call
lock
inc
push
das
shr
cmp
ljmp
pop
test
xchg
jl
mov
or
push
ja
lea
push
shrb
stos
xchg
push
cli
imul
das
mov
mov
out
jo
nop
fimuls
jno
sub
mov
mov
loopne
add
fs
sbb
or
popf
lods
dec
pop
clc
imul
sbb
addl
loop
scas
imulb
cld
vpsllw
out
and
sbb
inc
icebp
jmp
mov
outsb
inc
sub
cmp
cld
pop
scas
gs
cld
lcall
adc
mov
dec
pop
mov
sbb
inc
enter
push
cmpsb
cmp
xchg
and
or
push
adc
jmp
pop
cmp
sub
pushf
ret
das
or
fadds
pop
mov
xchg
addr16
pop
jbe
xchg
clc
bnd
aad
xor
or
xor
pop
and
arpl
add
dec
jg
bound
inc
mov
pop
xor
mov
or
sarb
or
adc
and
adc
mov
sbb
test
ss
fld
ja
inc
push
mov
jne
and
loopne
push
sahf
rcr
sahf
into
in
push
cmp
xor
out
xchg
mov
pop
aad
push
xchg
xor
in
cmp
pop
pop
lcall
push
pop
lock
mulb
dec
lock
imul
outsb
lret
decl
dec
or
pop
and
popf
ds
pop
mov
xor
cmpsb
sbb
push
pop
mov
mov
pop
lret
je
or
dec
lods
das
mov
mov
rcll
or
cmpsb
imul
sub
jno
iret
inc
or
fadd
pop
cmp
call
roll
mov
arpl
dec
push
ret
aam
and
pop
pop
scas
mov
lret
std
sbb
inc
addr16
or
js
daa
in
xor
sahf
sbb
sub
daa
push
jb
cmp
cmpsb
pop
js
dec
push
mov
fwait
les
cli
repz
and
or
push
and
and
inc
mov
sub
mov
jl
sub
std
sub
dec
test
add
mov
cs
mov
ret
hlt
into
push
dec
in
shll
out
sar
insb
and
out
jecxz
sbb
fisubrl
test
ljmp
gs
ss
and
sbb
int3
sub
mov
std
gs
or
add
jecxz
jns
dec
js
scas
ja
es
jns
ljmp
pop
enter
sub
adc
sbb
inc
jb
data16
adc
sarb
jmp
inc
fimull
xor
mov
int3
push
and
ljmp
xchg
dec
das
dec
inc
inc
popa
pop
inc
adc
inc
pushf
sub
lret
vpmacssdql
adc
push
test
mov
xor
mov
jg
aaa
or
fwait
cmpsl
insl
add
jnp
inc
or
mov
fdivrs
push
inc
fisttpl
aad
mov
loop
lods
shlb
inc
cmpsb
hlt
nop
cwtl
es
xor
cmp
sub
cmpsl
push
gs
jbe
rclb
scas
test
pop
push
mov
fucomp
sub
pop
mov
loopne
pushf
add
sbb
fidivrs
iret
mov
mov
aam
jg
out
dec
test
shrb
data16
outsl
jecxz
push
loope
push
fwait
add
imul
in
hlt
sbb
outsl
out
push
test
cmpsb
mov
xor
cmp
nop
or
push
mov
lret
pop
clc
push
stos
add
mov
in
stc
movsb
cmp
sub
lret
pushf
test
and
lret
mov
sbb
in
inc
xchg
test
or
decb
ss
out
cmpsl
inc
mov
adc
test
pop
xchg
cmp
les
xchg
sub
out
in
pop
cs
loop
xor
lock
and
pop
shrl
or
mov
inc
notl
sub
inc
or
sbb
movsl
adc
das
or
and
lock
adc
scas
push
das
dec
pop
movsl
dec
pop
loop
lea
pop
leave
mov
cld
jg
enter
mov
in
sbb
mov
push
lods
and
cmpsl
sbb
dec
push
fbld
test
mov
add
cld
roll
and
push
xor
ljmp
xor
mov
or
mov
sbbb
or
xchg
sarb
inc
dec
outsb
adc
fcomps
jmp
outsl
adc
mov
out
cli
sbb
stc
push
aad
das
sub
and
sub
adc
popa
xor
push
clc
pusha
lock
push
xchg
in
outsb
dec
sbb
into
mov
js
rclb
mov
lds
cmp
fistpll
sub
cwtl
xchg
sti
scas
fnsave
push
fnsave
mov
sub
mov
pushl
ljmp
jle
iret
iret
mov
mov
test
pop
sbb
ja
mov
test
sub
call
push
fldl2t
sahf
cmp
jle
inc
push
jno
and
popf
loop
scas
sbb
xor
jno
in
subl
xor
inc
push
push
loopne
xchg
cmc
outsl
push
inc
ljmp
int3
inc
pop
jbe
mov
addr16
insb
lahf
shlb
and
inc
testl
roll
push
js
pop
pop
sub
pop
xor
jle
in
sbb
into
mov
lahf
incb
push
jge
inc
test
je
sahf
mov
insb
cmc
sti
in
ret
inc
mul
movsl
gs
adc
inc
sbb
adc
int
pushf
pushf
inc
and
mov
rorl
pop
add
in
push
adc
cs
jmp
or
add
jne
mov
pop
push
mull
cmp
add
cmp
sarb
xor
imul
xchg
fbld
int3
mov
pushf
mov
xchg
sbb
in
jg
jecxz
push
pop
mov
xor
add
cmp
lds
sahf
mov
pop
imull
scas
add
popa
les
pop
loop
arpl
add
cmp
mov
jae
clc
cmpsb
cmpsb
gs
push
sub
adc
mov
mov
rcrb
jmp
sbb
push
popf
push
jb
loop
lcall
test
loop
sbb
xchg
inc
cli
iret
js
cmp
push
lock
cmp
fldt
lret
lret
xchg
icebp
push
inc
shrb
ss
mov
cmpsl
sahf
in
out
idivb
not
in
test
push
enter
clc
in
jns
push
cltd
xchg
hlt
inc
or
mov
jle
mov
loopne
sub
in
pop
sbb
std
push
stc
mov
test
aam
push
jg
add
xbegin
sub
fistpll
jbe
sbbl
sub
arpl
or
inc
stos
cmpsb
cli
in
outsl
sbbb
dec
sub
subb
mov
imul
push
jnp
cwtl
mov
mov
mov
add
fwait
push
mov
jecxz
dec
sub
mov
lock
cmpsb
push
sbb
scas
repnz
fdiv
popa
dec
xchg
push
fdivs
jbe
jb
into
cs
add
cmp
xchg
sbb
xchg
jbe
loope
aas
cmp
inc
and
pop
or
rcl
mov
cmpsb
out
movsl
aas
or
in
pop
mov
ds
test
in
out
or
inc
sub
sub
inc
test
mov
jnp,pt
leave
inc
call
fisttpl
mov
jne
andb
pop
imul
fldcw
xchg
popf
xor
call
push
fiaddl
mov
insl
ret
push
inc
ret
aad
pop
and
pop
outsb
xor
sar
sub
pop
push
jnp
dec
jae
mov
push
xor
mov
ret
ljmp
lret
popa
cmp
test
xchg
rclb
mov
xor
mov
xchg
fcompl
cmp
or
mov
andl
xor
jge
out
lret
or
shrl
cs
mov
loope
pop
cld
cmp
sub
mov
adc
xchg
loop
imul
jb
leave
push
icebp
sub
dec
loope
jb
xchg
pop
inc
shrl
push
icebp
dec
mov
mov
test
and
adc
sbb
imul
cmpsb
shlb
dec
mov
inc
mov
std
out
ljmp
fs
andl
lret
push
test
ljmp
push
jle
test
data16
adc
push
imul
push
adc
sub
add
es
mov
jle
out
mov
gs
and
inc
lahf
icebp
adc
pushw
add
and
leave
shrb
mov
pop
stos
int3
rorl
scas
jg
or
shll
sbb
jmp
sbb
sbb
pop
sahf
mov
and
popa
dec
dec
xor
jle
in
jecxz
pop
fcomps
xchg
popa
sub
mov
int
out
ror
gs
pop
xchg
sbb
aam
fsubrs
adc
sub
adc
stos
aas
rol
sub
clc
push
push
adc
sbb
in
jmp
mov
inc
sub
into
dec
out
icebp
mov
je
repnz
lahf
xor
stc
push
int
and
inc
rol
mov
movsb
stos
sti
xor
xchg
fcomp
movsb
pop
test
in
xor
dec
xchg
insb
dec
push
mov
mov
cmp
loopne
int3
data16
mov
sub
and
push
mov
cmp
xchg
push
mov
idivl
out
rolb
xchg
and
push
das
jecxz
xchg
push
inc
das
xor
mov
sub
push
int3
cli
lock
jg
push
mov
ficoml
mov
dec
mov
jl
lock
push
jne
into
xor
out
nop
fsubrs
xchg
mov
int3
push
sub
and
xchg
ret
in
or
fimuls
cmpsl
xor
jge
sub
inc
inc
negb
dec
scas
mov
or
les
sub
scas
loope
or
leave
repnz
inc
pop
mov
mov
shrb
pop
popf
jno
in
ja
movsl
pop
pop
lods
or
push
push
jge
inc
xorb
sub
jmp
push
insl
xor
add
out
mov
jecxz
movsb
jb
and
cli
js
arpl
mov
addb
rorb
xchg
enter
in
je
cmp
mov
mov
fstl
out
mov
fcmovne
mov
pop
lcall
xchg
push
iret
xchg
popl
in
fisubs
lods
movsl
sbb
clc
addb
pop
inc
fisubrl
cli
negb
push
negl
les
inc
lret
sub
and
popf
sub
sub
lret
scas
dec
testl
int3
out
pop
dec
lahf
cld
mov
push
sbb
insb
adc
xlat
and
mov
ljmp
sub
lods
or
cmp
cmpsb
pop
jb
xor
jp
inc
js
cmpsb
xlat
xchg
sbb
or
stos
xchg
xchg
jmp
cli
in
adc
hlt
testl
out
dec
pop
daa
inc
pop
sbb
inc
and
js
push
cmp
sub
jae
fdivrp
jbe
dec
movsb
pop
xor
add
movsl
pop
lds
cs
sbb
insb
xchg
dec
mov
cmc
inc
jg
dec
cmp
push
movsb
gs
lahf
roll
popa
xchg
int3
inc
xor
fimuls
xor
or
pop
jno
ficompl
cmp
add
jb
jmp
add
xchg
sub
cli
xor
and
inc
sbb
jbe
mov
mov
ss
outsb
scas
pop
loop
outsb
jle
mov
in
arpl
push
or
mov
imul
and
test
cmpsb
enter
fbstp
iret
les
scas
mov
add
adc
xor
push
imul
dec
cmc
stos
js
xchg
out
push
mov
jb
rolb
inc
sbb
xchg
sarb
lods
pop
pop
mov
adc
shrl
cmpsl
pop
cld
test
les
and
test
cmpsb
or
xor
push
aad
mov
stc
jno
push
ud1
test
js
mov
and
mov
repz
fs
mov
xor
fwait
aaa
cmc
rorl
je
adc
push
ret
xchg
sti
hlt
and
loop
out
cs
std
jecxz
inc
lret
xchg
mov
stos
leave
add
dec
in
push
scas
daa
inc
mov
mov
jnp
mov
out
push
inc
shl
push
repnz
mov
push
mov
cmp
xchg
add
addr16
jge
andb
inc
mov
cld
in
cmpl
and
aaa
xchg
push
or
adc
mov
shll
jno
xor
arpl
in
adc
push
cwtl
xor
outsb
aaa
jnp
sahf
imul
div
or
sbb
js
stos
cmp
mov
cld
xchg
jns
inc
sub
mov
sub
out
rcrb
lret
rcrb
pop
dec
mov
lock
loope
imul
aas
cld
addr16
mov
xor
or
jo
and
mov
xchg
mov
test
mov
jo
imulb
add
ficoms
pop
xor
sbb
imul
std
mov
test
mov
mov
pop
test
push
stos
mov
out
ss
clc
pop
ds
je
sub
mov
jbe
mov
div
test
pop
repnz
or
shrb
inc
pxor
and
mov
jae
das
inc
fs
pop
outsb
jl
adc
dec
jg
dec
pop
add
loopne
xchg
test
aad
mov
fdivrs
jo
cmc
dec
mov
push
jg
mov
mov
ret
ss
frstor
push
mov
jo
mov
sbb
pusha
fldlg2
jl
or
gs
dec
movsb
and
mov
push
arpl
xor
shrl
pusha
mov
sarb
addr16
adc
sub
loope
shlb
bound
outsb
sbb
lret
popf
call
incl
lcall
mov
ss
sbb
dec
fists
sub
jge
xlat
fidivl
leave
enter
dec
adc
sbb
imul
mov
shrb
xchg
jo
shll
mov
xchg
inc
mov
cs
inc
mov
ret
xor
lea
cli
out
mov
shll
cmp
lea
inc
not
sub
dec
push
fcom
cmp
mov
addr16
mov
leave
pop
mov
jo
inc
jbe
inc
pop
and
dec
or
int3
jge
lea
lcall
sbb
movsb
daa
mov
sbb
ljmp
mulb
ja
out
lea
cld
jno
pop
mov
push
stc
mov
imul
xchg
and
cmp
outsb
sub
addr16
add
xchg
mov
ret
ljmp
mov
cmpsb
push
fcmovu
add
mov
andb
lods
or
adc
imul
dec
push
in
std
push
gs
repnz
or
push
mov
pop
mov
inc
or
icebp
adc
loope
aam
popa
jecxz
xchg
pop
popa
stos
mov
mov
jo
imul
dec
mov
pusha
mov
mov
dec
xor
xor
fs
lret
lahf
or
or
adc
pop
adc
push
mov
mov
and
mov
cmp
xchg
loope
les
ficompl
test
push
bndldx
pmulhuw
cmp
dec
mov
xor
jns
popa
dec
mov
repz
jno
or
pop
and
and
pop
shlb
mov
fidivrl
xchg
cmc
push
cli
and
push
xor
xchg
inc
movsb
or
push
xchg
xchg
movsb
jo
jmp
movsb
push
subl
xor
and
inc
mov
imul
or
sub
pop
or
call
mov
jecxz
mov
mov
adc
int
pop
sub
mov
add
push
leave
adcb
or
fimuls
xchg
and
mov
inc
mov
loope
nop
or
pop
data16
mov
mov
cmpsb
stos
and
cmp
jnp
in
inc
sub
xor
jnp
xchg
sbb
enter
pop
mov
cs
jg
add
add
cmp
cmp
and
imul
xor
notb
in
repz
jbe
stos
xchg
cvtps2pd
imul
ret
xorb
xchg
push
sbb
ficompl
mov
mov
leave
adc
lods
dec
xorb
rcrb
cwtl
fnstcw
sbb
xlat
adc
sbb
mov
cld
dec
movsb
shr
mov
mov
nop
dec
inc
mov
stos
insb
cmpsl
das
xor
ljmp
adc
pushf
jge
add
sub
pop
imul
pop
lahf
sahf
pop
ja
ficoml
sub
insb
loope
out
loope
into
push
mov
cli
inc
lret
xlat
repnz
sbb
lret
js
mov
imul
imul
inc
popf
sub
out
xchg
outsb
arpl
cwtl
and
fs
sub
dec
test
pusha
jae
xchg
push
jp
xor
roll
loope
sbb
aad
rcl
cmpsl
sub
scas
les
cltd
in
fidivrl
or
sub
and
imul
xor
inc
sbb
mov
dec
sti
ret
mov
jne
xor
mov
xor
jecxz
test
mov
cmp
aad
rol
leave
ret
ds
fs
and
fwait
jl
xor
adc
sarb
imul
adc
rcll
sahf
lret
clc
or
push
mov
xor
dec
imul
addb
or
scas
test
xor
xchg
mov
test
mov
mov
cmp
mov
pop
ret
or
cltd
mov
subl
fs
mov
int
in
mov
je
xlat
aam
inc
pop
call
subl
sbbb
push
and
mov
lods
or
adc
cmp
arpl
ja
or
mov
arpl
dec
cmp
mov
cmp
cwtl
inc
rcrb
adc
pop
pop
pushf
jbe
imul
jb
xor
ret
rolb
leave
or
jno
fildl
mov
das
lcall
pop
pop
sarb
stos
mov
test
testl
sub
jo
data16
icebp
rep
push
clc
in
stc
test
cmpsl
xor
cmp
mov
filds
lds
sub
imul
cli
add
scas
repnz
lret
movsl
stos
sbb
fcoms
cmp
loopne
sbb
adcl
mov
mov
js
enter
add
out
push
push
pop
inc
cmp
mov
cmpsb
fimull
in
xchg
xchg
cmp
loopne
sar
mov
fmuls
xchg
dec
addb
loope
cmpsl
clc
add
rcrb
jno
mov
cli
aaa
fmuls
adcl
outsb
rcrb
sub
mov
pop
push
fs
inc
xor
mov
enter
lods
int3
vpunpckhdq
int
push
pushf
xor
xchg
adc
mov
pop
arpl
push
mov
mov
sar
lea
mov
xor
xchg
enter
add
nop
mov
dec
out
lahf
mov
xor
cmpsb
sahf
mov
cmp
adc
dec
mov
jmp
ud2
and
daa
xor
stos
dec
int
mov
pop
jno
cmp
pop
insb
mov
popa
js
add
add
pop
xor
push
mov
pop
jp
jo
push
js
scas
dec
test
push
rorb
xor
shrb
in
adc
adc
inc
in
mov
pop
gs
or
int
inc
idivl
test
icebp
xchg
xchg
adc
call
fidivrs
bound
or
sub
push
mov
adc
mov
xlat
fwait
mov
inc
jmp
lock
js
in
subl
jge
mov
fadd
mov
stos
pop
hlt
xchg
push
mov
or
inc
ljmp
loopne
rcrl
mov
push
mov
mov
sar
xchg
xchg
test
lret
es
aaa
xor
push
rorl
lds
cmc
mov
dec
jle
sbb
adc
cmpl
adc
in
xchg
imulb
test
out
stos
in
sbb
pop
sbb
aaa
cmp
fimuls
xchg
or
pop
popa
rcr
cmp
jne
lods
push
gs
aad
mov
mov
mov
and
sar
add
shl
adc
fildl
subb
adc
sub
fs
imul
jmp
sarl
pop
fisubl
xchg
mov
cwtl
inc
jns
mov
jge
pop
data16
mov
sbb
jmp
mov
incb
outsl
sbbl
sub
or
and
add
mov
adc
test
out
jnp
fcoms
ja
cmp
or
std
inc
inc
lods
xchg
addr16
jl
adc
fldl2t
sub
lea
cmpl
pop
pop
push
and
mov
js
clc
sahf
sbb
sarb
sbb
fcmovbe
mov
cmp
adc
jl
sub
mov
aad
test
fstpl
push
pop
cmp
push
xchg
out
mov
faddl
or
or
mov
cltd
arpl
xor
push
pop
adc
dec
xchg
mov
push
mov
pop
mov
cmp
cli
inc
xchg
sarl
adc
add
loop
pop
cmc
mov
pop
jo
or
loopne
mov
mov
push
in
pop
stc
loop
in
xchg
xor
inc
insl
lahf
test
into
and
lcall
jnp
or
adc
jns
pop
ret
cmp
sbb
es
and
push
aam
cmp
xorl
mov
les
test
sub
shrb
pop
icebp
dec
mov
pop
pop
outsb
test
sub
lock
rorb
and
dec
test
fidivrs
lahf
jle
xlat
test
jns
in
adc
sub
jmp
cmpsl
mov
addr16
xchg
les
xchg
daa
outsl
pop
mov
push
lea
cmp
lods
ret
xchg
inc
pop
insb
fs
lods
aaa
sahf
mov
lods
mov
stos
inc
ret
lock
jle
adc
adc
lret
repz
rol
push
push
push
lret
negb
xchg
addr16
xor
cmpb
inc
cmp
je
and
or
or
or
inc
in
cmp
cwtl
mov
shll
mov
cmp
stc
jns
and
iret
jge
mov
jmp
adc
and
fwait
enter
jns
call
sub
adc
add
sub
push
arpl
sub
js
xchg
loope
or
pop
adc
or
cmpsl
enter
push
inc
push
aaa
or
lret
out
int3
push
out
fwait
xchg
and
or
adc
mov
pop
push
mov
push
jge
push
enter
cmpsl
xchg
aad
ljmp
mov
pop
into
out
and
push
cs
sub
and
xchg
out
jne
and
leave
nop
sub
dec
clc
fdivs
imul
fs
aas
pop
testb
pop
cs
mov
aas
add
addl
push
jnp
cwtl
inc
xor
pop
outsb
dec
mov
pop
clc
sub
and
push
or
in
cs
pop
dec
pop
xor
lods
ret
mov
xor
adc
out
pop
inc
sub
lahf
shlb
push
dec
mov
and
jne
cmp
xchg
push
lods
or
jg
inc
push
xlat
push
xchg
mov
pusha
mov
mov
push
adc
add
jne
mov
inc
cmp
jno
jg
shrl
enter
adc
mov
popa
sbb
lds
xor
int
inc
mov
fucomi
lcall
and
loopne
popa
aad
les
popf
xchg
popf
hlt
inc
mov
fwait
js
repz
je
icebp
xchg
pop
mov
xor
cli
inc
push
rcrb
mov
imul
aam
mov
mov
mov
mov
ret
xchg
add
ds
cs
adc
out
call
mov
and
arpl
and
adc
imul
cmpl
out
mov
pop
das
pop
bnd
test
cld
stc
cmp
loop
jp
mov
lea
mov
xorb
mov
rcrb
lods
xor
mov
rcr
in
pop
mov
jo
dec
dec
inc
cmp
lods
int
jge
ja
cmpsb
int
xchg
push
mov
xor
sub
sbb
stc
push
sub
mov
outsb
lock
jp
xchg
lock
fiadds
popa
adc
out
enter
rcl
jp
pop
rolb
popf
mov
enter
addl
push
sub
jecxz
push
push
stc
add
in
pop
and
adc
lret
loopne
xchg
inc
push
cs
mov
mov
xor
mov
call
sub
cmpsl
test
shll
lds
jnp
add
out
cmp
add
dec
dec
mov
aam
outsl
inc
filds
rcrl
jbe
popa
int3
movsb
sbb
pop
pop
push
xchg
sarl
das
ds
or
mov
daa
addr16
mov
sbb
lock
movsl
or
pop
xor
rclb
push
mov
inc
pop
mov
push
fcoml
jp
cltd
iret
inc
jge
scas
call
mov
and
in
mov
or
scas
ficompl
push
sub
lret
mov
xchg
adc
inc
push
pop
leave
ja
in
fldl
xchg
mov
jns
outsl
aam
fwait
shlb
into
repnz
lahf
lods
out
in
pop
mov
les
test
aas
int3
leave
adc
popa
leave
xchg
jbe
rcll
into
dec
mov
aaa
xor
orl
jp
sti
fs
jg
inc
jns
mov
adc
imul
mov
jmp
aaa
or
adc
dec
clc
inc
push
adc
xchg
inc
jb
mov
adc
jb
push
lcall
iret
mov
pop
or
mov
ret
pop
and
mov
mov
sahf
and
dec
jmp
xor
xorb
pop
sbb
insl
lret
pop
sti
add
inc
repnz
call
and
lods
stos
add
jne
or
andb
fwait
insb
repnz
jbe
imull
fsubrl
fisubl
lret
popf
icebp
nop
out
test
mov
or
mov
and
jge
and
test
scas
sub
andl
cs
adc
test
lea
insb
in
mov
call
mov
cli
pop
add
cmpb
or
inc
decl
xchg
sbb
stos
stos
nop
push
push
or
outsl
shl
sub
std
fisubrs
int
jg
dec
cmp
mov
xlat
fwait
dec
mov
push
jb
lret
popa
mov
clc
sbb
xor
mov
mov
ficoms
jno
loope
into
pop
and
and
out
and
cmc
in
dec
dec
rcrl
ljmp
jnp
cmpsb
mov
ret
push
stc
das
pop
repnz
jl
enter
inc
pop
rorb
ret
sbb
pop
mov
repnz
jns
sub
aam
xor
test
jl
inc
hlt
fwait
mov
xchg
in
pop
shrl
test
add
dec
fs
and
fisttpll
and
inc
and
xchg
push
cs
out
sarl
lods
lds
sub
loopne
push
arpl
jnp
mov
stos
test
cltd
fiaddl
cmp
mov
ficomps
dec
imul
dec
jbe
pop
sbb
imul
jo
xor
cmp
and
stc
cmp
mov
push
jge
dec
inc
mov
mov
or
sub
js
les
mov
insb
add
mov
out
pop
lods
add
je
add
roll
call
jbe
clc
push
jg
xor
adc
ja
sahf
mov
ret
xorb
subl
daa
ret
imul
pushf
insb
jmp
inc
dec
mov
mov
jg
lea
xor
stc
xchg
mov
imul
jnp
and
dec
fwait
lods
lods
bnd
shrb
inc
mov
cmpsw
stos
cwtl
adc
call
or
or
mov
shrb
jno
cli
ljmp
pop
mov
push
push
xchg
jecxz
testl
xchg
fwait
sbbl
adc
jecxz
jp
cmp
mov
jle
rol
sahf
pop
repz
cmpsb
sub
orb
push
sbb
mov
xchg
pop
sub
int3
call
and
lret
mov
sarl
push
jmp
iret
mov
mov
xor
jle
out
mov
pop
outsb
xchg
pushf
mov
adc
cmp
push
mov
cmp
fcoml
xor
xchg
sub
adc
mov
call
es
loop
pop
andl
je
cs
sub
lods
lea
jmp
mov
sbb
xor
and
imul
mov
add
cmpsl
test
mov
popf
push
lods
sbb
roll
inc
inc
xor
dec
cmpsl
add
adc
rol
xor
daa
or
repz
rcrb
sbb
daa
ja
cli
inc
popf
jmp
out
lea
inc
in
mov
or
xor
push
cmp
mov
mov
pop
pop
in
mov
add
lods
mov
xchg
int
mov
cmp
dec
xchg
mov
ljmp
dec
pop
sahf
out
mov
bound
cmpsb
movsb
dec
shll
pop
and
scas
ss
jno
cmp
and
lock
mov
jmp
aas
repnz
fadds
sub
std
cmpsb
cmpsb
daa
insl
cmc
rorl
pop
xor
popa
ret
adc
sti
dec
das
add
fcomi
pushf
insb
inc
jae
push
fs
pop
out
add
xchg
push
mull
in
jnp
adc
lcall
fisubrs
sub
das
cmp
xchg
fildl
fbld
cmp
adc
idivl
std
das
roll
mov
xor
adc
jne
mov
and
clc
add
dec
int3
sbb
xchg
dec
into
out
xchg
subl
or
mov
into
mov
add
mov
sbb
mov
pop
sahf
cmp
xor
xchg
daa
mov
mov
lods
imul
loop
ljmp
xchg
fdivp
cmp
in
test
in
lods
xchg
push
mov
mov
loope
pop
dec
fwait
fwait
ds
cs
aam
xchg
jo
xor
call
mov
les
jns
arpl
lods
sbb
ret
insb
push
mov
xor
mov
pop
popa
cli
aam
fwait
jg
add
js
sbb
add
pop
add
and
in
xorl
jl
insl
dec
mov
adc
orl
sub
mov
inc
dec
cmp
sub
js
push
or
lret
adc
movsb
push
test
sbb
enter
mov
aas
mov
jp
or
fldenv
sarl
into
andl
dec
xchg
aas
cmpsl
cmp
sbb
nop
lock
rcrl
dec
push
popa
pop
fs
cmpsl
popf
rorb
mov
dec
popa
clc
add
lea
jp
jmp
push
sahf
sbbb
hlt
push
cld
sbb
mov
xchg
push
jo
pop
ja
cmc
mov
int
call
or
jae
sub
pop
fcoms
dec
out
cwtl
push
cmp
out
negl
mull
mov
pop
testb
in
push
int3
mov
clc
dec
aad
xchg
mov
xchg
addr16
xchg
fbld
adc
xchg
mov
adc
mov
jns
mov
cs
mov
fnstsw
inc
jecxz
repz
push
sbb
cwtl
aad
push
lods
outsl
and
dec
add
dec
push
nop
dec
dec
add
xchg
cmpl
jecxz
mov
jno
js
jl
mov
cltd
bound
arpl
pushf
outsl
fwait
in
mov
mov
adc
sbb
fbstp
and
xchg
xchg
pop
mov
call
aaa
outsb
dec
push
mov
mov
inc
mov
movsb
dec
and
dec
jb
xchg
jns
cmp
ljmp
js
jp
cmpsb
mov
js
mov
jno
lea
inc
and
popa
or
or
dec
loope
mov
arpl
inc
sbb
mov
lahf
insb
cmp
sbb
scas
insb
push
cmpsb
popa
repnz
sbbl
xor
enter
ret
xor
push
outsl
cltd
cmp
stos
fcmove
clc
sarb
mov
call
xchg
push
xchg
call
lahf
pop
sbb
sbb
fiaddl
inc
std
xor
leave
pop
aam
aas
aam
montmul
cmpsb
mov
into
int
xlat
jnp
mov
and
cmp
mov
imul
push
stos
ja
ret
xorl
sbb
inc
or
or
nop
adc
pop
sbb
xchg
dec
inc
sub
cmpsb
stc
pop
or
lods
sbb
adc
testb
pop
ret
pushf
inc
jmp
add
add
cmp
adc
inc
or
repnz
or
outsl
cmp
xor
ds
lods
xchg
xchg
aad
lods
test
xchg
enter
inc
sbbb
insl
mov
lds
push
jp
and
push
shrb
sbb
xchg
test
mov
mov
cmp
aad
xchg
push
fbld
xor
and
fmuls
test
ja
push
out
push
mov
inc
dec
mov
aam
pop
popf
fisttpll
subl
mov
xchg
out
adc
xchg
aam
pop
bswap
xor
jns
lds
and
cld
add
ret
adc
movsb
xchg
movsb
adc
dec
push
in
dec
stc
push
je
out
popl
shr
in
mov
mov
test
lea
xchg
test
dec
insl
inc
mov
sbb
and
pop
cmp
cmp
lea
cmp
daa
and
test
xor
je,pt
and
mov
mov
lret
adc
mul
mov
fsubs
push
subl
gs
jne
push
xchg
inc
pop
lret
cmpsb
stc
pop
arpl
or
rorb
ret
mov
js
insl
mov
scas
xorl
mov
mov
cli
lock
push
repnz
notl
dec
ja
and
bswap
fs
cltd
push
testb
jnp
f2xm1
cmp
add
push
divps
sti
cmp
xchg
les
cmpsb
dec
xor
mov
dec
js
stc
mov
push
push
aam
push
movsl
sti
jmp
jecxz
mov
pop
testl
rorl
sub
test
cmpsl
sub
jno
add
push
sub
cs
xorb
lret
in
test
repnz
pop
mov
lcall
mov
inc
cwtl
and
cwtl
jns
and
insl
fldcw
in
and
outsb
mov
pop
pop
inc
add
lcall
and
pop
jnp
and
cltd
movsb
daa
mov
jge
leave
addw
test
insb
mov
sbbb
xchg
popf
das
dec
je
sbb
shlb
test
and
cmp
rolb
mov
repz
imul
cmp
fsubrp
test
jo
popa
stos
sub
aas
inc
dec
push
sbb
dec
in
pop
addr16
mov
mov
mov
sbb
jg
pop
adc
push
push
mov
ret
mov
shlb
popf
xchg
hlt
neg
or
pop
add
push
cmp
push
mov
fsubp
das
sbb
ds
shlb
push
jo
xchg
jb
or
cmpsb
bound
test
outsl
imul
or
push
cmp
xchg
ja
cltd
cmp
ja
xchg
and
cmp
dec
pop
mov
jmp
rcrl
repnz
mov
sub
jne
dec
pop
sbb
push
sub
mov
fucomip
push
add
adc
pushf
and
push
lret
sbb
xor
inc
ds
mov
jecxz
mov
sahf
aad
repnz
loopne
adc
outsl
add
fucom
dec
sbb
scas
mov
dec
pusha
cmpsb
cmp
sbb
or
jmp
mov
popa
outsb
dec
ret
scas
lret
dec
lds
add
xchg
mov
and
sahf
popa
xor
cmpsb
sub
or
lcall
mov
dec
out
mov
outsb
sbb
test
lahf
aam
aas
jle
sbb
popa
xorl
aas
cli
sbb
mov
outsb
mov
ss
mull
rcll
test
cmpb
fidivs
imul
add
sbb
cld
jle
add
hlt
cmp
pop
inc
cli
push
jno
push
xchg
jb
icebp
js
sbb
iret
jle
jmp
arpl
mov
sub
sahf
mov
push
subl
mov
dec
ficomps
shr
ret
ficoms
test
push
aam
cld
pop
inc
in
ljmp
aaa
sub
test
insb
sub
pop
fadds
shrb
pushf
aad
test
add
mov
dec
cmpsl
sbb
aaa
sub
popf
jg
cmp
xchg
xchg
out
arpl
push
ret
mov
jge
jle
sub
lahf
xchg
cmp
loope
mov
add
loopne
add
mov
fldl
pop
movsb
xchg
push
int
imul
and
jl
testl
punpckhdq
hlt
xlat
mov
bound
pop
xor
cld
out
in
mov
push
test
sarl
daa
xor
mov
mov
sbb
in
aaa
dec
loop
test
push
pop
test
cmpsl
mov
pop
aad
into
out
roll
mov
pop
mov
and
mov
pop
ret
mov
push
loop
mov
pop
in
rorl
and
inc
fsubs
jp
cmpsl
adc
mov
xlat
lock
mov
pusha
push
cli
sbb
gs
rorl
fisubs
mov
mov
mul
sahf
call
jle
cmpsl
test
jg
sub
or
loopne
mov
jecxz
add
ficoms
mov
insb
xchg
jge
stc
fidivrs
cmc
push
xchg
aam
sub
addl
pop
push
repz
cmp
fcoms
orb
xorl
int3
je
add
pop
ret
push
adc
push
or
pop
les
add
insb
shl
mov
push
and
push
lea
jbe
mov
cmp
add
jmp
mov
inc
sbb
inc
mov
es
lock
into
mov
push
aam
inc
addr16
out
aaa
mov
mov
popf
xchg
mov
mov
out
and
iret
jge
mov
das
repz
hlt
dec
xor
verr
mov
lods
das
xchg
or
dec
rclb
jae
testl
aad
adc
lcall
xor
mov
movsb
mov
xchg
shrb
mov
leave
mov
cmc
inc
add
pusha
ja
lret
aam
mov
testb
adc
xchg
dec
scas
jo
xor
xor
pop
mov
inc
jmp
ss
mov
and
lock
inc
xchg
add
push
and
add
lcall
add
mov
aaa
adc
mov
pusha
mov
mov
arpl
ret
push
mov
sub
and
pop
mov
or
imul
sbb
cld
es
sub
mov
imul
adc
ds
movsl
cmp
nop
outsl
lahf
xor
ror
mov
xchg
jno
dec
xor
push
xor
mov
mov
outsb
repz
leave
outsb
pop
sbb
sub
cld
add
sub
add
mov
mov
fldcw
ficomps
jecxz
xchg
das
enter
call
jp
sar
inc
pusha
dec
inc
in
pushf
inc
out
dec
fsub
addr16
adcb
add
jecxz
aam
sub
aas
mov
icebp
lret
iret
pop
dec
lret
cmc
mov
lahf
scas
rorb
aad
dec
scas
test
sahf
test
inc
push
xor
fcomps
ljmp
xchg
nop
and
xor
clc
cmpsb
js
mov
imul
mov
sbb
or
jno
pop
lret
faddl
es
adc
loopne
add
cltd
add
cmp
jmp
inc
fsubs
mov
sub
addl
fdiv
mov
lods
lcall
stos
and
adc
dec
jnp
imul
jge
or
decb
inc
sub
push
jb
xchg
push
and
lahf
fistps
adc
mov
pop
xchg
imulb
add
repz
outsl
add
jmp
xchg
or
in
xchg
cs
lock
lock
push
or
fisttps
mov
mov
push
int
das
sahf
adc
jne
aam
addr16
out
sbb
in
xchg
and
cmpsb
sbb
je
push
mov
push
pop
add
xor
fldpi
or
sub
cmp
dec
movl
dec
inc
sbb
mov
push
cmp
incb
mov
ss
out
iret
push
or
int
scas
stos
add
lea
loop
sub
ret
sysret
frstor
xor
add
xchg
lds
cmp
fnstcw
xor
fwait
jle
clc
add
xor
loop
popl
nop
arpl
add
outsb
mov
pop
pop
sub
testl
dec
shll
jns
icebp
insb
fildll
cmpsb
shlb
in
fisubs
or
xchg
test
jecxz
adc
fiaddl
test
aam
enter
neg
mov
in
adc
sar
add
push
mov
test
divl
sub
and
in
sub
sti
inc
mov
add
icebp
out
xchg
fnstcw
push
mov
gs
push
lahf
add
mov
cli
negb
push
dec
mov
ret
sub
pop
mov
movsl
pop
iret
cltd
pop
push
iret
mov
repnz
rcrl
ja
fidivrl
loopne
imul
lods
jmp
ljmp
cltd
push
imul
push
fucom
dec
jnp
or
scas
fs
loopne
hlt
mov
jo
jmp
jae
jle
out
sub
jns
push
shlb
popl
stc
shll
cmp
adc
or
divb
es
arpl
dec
add
add
jecxz
jns
mov
inc
mov
cli
mov
lret
pop
outsb
adc
cmpsb
and
ja
jne
xacquire
arpl
pop
lea
cmp
rclb
xchg
xchg
push
scas
sbb
adc
xor
cli
push
std
test
outsb
push
and
mov
mov
movsl
les
adc
ja
pop
ds
in
jge
push
adc
rolb
pop
testb
mov
sbb
jne
pop
xchg
sti
pop
push
ja
ljmp
sbb
pop
aas
mov
adc
xor
fmul
push
je
cltd
das
addr16
push
stos
in
adc
cmpb
pop
enter
mov
cs
jmp
lds
ljmp
lock
or
cwtl
out
push
inc
lods
sub
adc
push
sbb
cmp
bound
clc
mov
pop
or
push
jns
inc
stc
push
mov
bound
dec
fs
mov
push
cmp
fdivl
push
sarb
arpl
ret
jnp
out
mov
mov
cvttps2pi
sbb
or
in
cwtl
sbb
pop
arpl
daa
cmp
inc
inc
mov
xchg
test
test
fs
lods
lea
iret
or
lods
fwait
cmp
cmpsl
inc
mov
lret
scas
or
mov
aad
out
cmc
and
js
movsb
out
int
aad
jae
add
xor
test
pop
mov
jg
sbb
fistps
adcl
js
and
dec
fsubrs
mov
pop
jne
sub
repnz
mov
icebp
outsl
pop
fbld
sahf
sub
push
mov
pop
push
pop
dec
and
mov
xchg
gs
fimuls
jmp
sub
lods
rolb
ljmp
and
fmull
cmp
test
scas
shr
das
push
ret
jge
dec
inc
je
ljmp
mov
xchg
and
mov
cltd
mov
mov
out
cmp
fistps
pop
mov
sti
in
sarl
and
mov
les
adc
mov
dec
ja
int3
mov
lea
sub
sar
mov
cmpsb
mov
pop
orb
outsl
sub
mov
cmp
insl
stos
xor
out
mov
sbb
les
pushf
adc
sub
imul
ret
repz
outsb
sub
insb
push
jl
xchg
push
push
mov
xchg
shr
push
rcll
jge
add
add
or
pop
or
fldcw
pop
push
sbb
mov
push
lods
or
orl
mov
push
adc
mov
arpl
push
iret
jmp
sbb
popf
inc
ror
pop
dec
arpl
cmc
sbb
dec
stos
and
clc
xor
cmp
lock
imul
xchg
push
imul
int3
fisttpll
lret
mov
stos
lcall
mov
test
imul
jns
fstl
mov
and
scas
adc
sti
sbb
fmuls
push
cmc
leave
lds
outsl
and
orb
cmp
jo
push
adc
mov
jb
nop
add
dec
mov
jle
ret
outsb
mov
mov
dec
and
pop
xor
cmc
jns
mov
mov
cli
push
ret
push
xchg
or
out
inc
mov
ja
les
in
es
jbe
sub
frstor
fidivs
mov
fistl
fdiv
andl
scas
push
sbb
bound
mov
jg
dec
lods
sbb
jmp
sbb
in
dec
sub
in
jecxz
push
jnp
int3
and
bound
rclb
and
fs
idivl
int3
cmpl
in
loopne
insb
sbb
pop
mov
ja
fldl
xchg
addr16
xor
sub
mov
daa
or
arpl
into
mov
cmpsb
xor
cmp
pusha
mov
pusha
mov
xor
jg
lods
cltd
mov
lret
out
dec
push
repz
push
in
jge
shr
fwait
mov
in
bound
out
push
add
fldl
cmpsl
mov
push
xor
cltd
popa
push
mov
addl
push
pop
push
loopne
packsswb
pop
xchg
ret
out
movsb
loop
inc
pop
and
jo
aas
mov
mov
push
negb
pusha
out
in
aad
mov
dec
cmp
jb
imul
fadds
cmp
leave
mov
mov
cld
insl
sub
adc
xchg
mov
mov
mov
mov
sbb
ret
leave
pop
jl
inc
fmull
mov
es
xor
imul
rcr
hlt
jmp
test
push
and
push
mov
in
sbb
xchg
adc
or
fs
bound
pop
andl
sub
popl
fwait
xor
andb
mov
insl
add
adc
or
loop
in
lahf
inc
pushf
ja
or
jg
mov
jecxz
leave
dec
cmp
mov
sub
lret
jbe
loop
xor
dec
jo
decb
es
inc
insl
fidivs
rcrl
lods
subl
cmpb
xor
xchg
ret
sbb
inc
mov
adc
rcl
jne
and
mov
test
test
xchg
int
push
rorb
sbb
cmpsl
mov
and
ret
int
ss
dec
loopne
inc
fwait
cmp
push
sbb
sbb
cs
stos
xchg
std
ss
jns
cmpsl
mov
adc
jl
cwtl
xchg
cmp
addr16
jbe
repz
das
imul
lahf
mov
mov
inc
data16
push
addr16
stc
dec
pushf
mov
pop
movsl
loop
cmp
mov
sahf
or
and
mov
and
push
arpl
inc
test
and
mov
loop
aad
movsb
hlt
or
das
mov
mov
in
jne
cmp
mov
add
out
daa
jl
sbb
shll
mov
ja
movsb
adc
cmp
pop
mov
nop
jecxz
test
jbe
es
and
cmpb
mov
leave
add
push
fmuls
push
add
jae
xor
sbb
cmp
je
xchg
cwtl
repnz
jl,pt
out
mov
test
loope
cwtl
cmp
xor
scas
pop
xor
dec
push
cmp
rcl
dec
add
sahf
scas
and
popf
jae
outsb
mov
add
xorb
movsl
push
cmp
repz
data16
dec
jnp
mov
imul
mov
or
pop
sbb
jbe
rclb
push
pop
icebp
push
imul
jmp
jg
mov
in
xor
std
aas
add
sbb
ret
dec
aas
xor
jge
repnz
push
sub
aad
js
hlt
dec
push
push
in
cli
lret
push
sub
and
imul
lea
mov
sub
dec
and
idivb
lods
dec
adc
mov
xchg
jne
inc
test
cwtl
lcall
sub
mov
ror
and
repz
test
cmp
jae
push
sarl
or
sarb
in
in
mov
xchg
jno
ljmp
mov
adc
dec
xchg
outsl
pop
mov
outsl
jmp
cli
fimuls
add
cwtl
vmwrite
mov
nop
jecxz
pop
adc
xor
inc
iret
pop
mov
jne
sub
jbe
xor
pop
sub
or
or
and
pop
rcrl
sub
ret
cld
xchg
cmpl
and
sbb
data16
inc
repz
push
ja
pushf
sub
fucomip
inc
ret
out
mov
mov
jae
cmp
iret
ret
mov
pop
mov
mov
mov
mov
cmp
sub
xor
pop
dec
cmp
or
push
leave
fstpl
mov
push
arpl
sbb
xor
test
push
inc
mov
jecxz
dec
or
sbb
aaa
jno
ja
stos
cltd
clc
pop
sahf
pop
idivl
or
push
add
enter
xlat
adc
add
or
gs
lret
push
ror
cmp
addr16
imul
das
nop
ds
push
cli
jo
cmp
cmp
scas
push
movzbl
pop
dec
movb
test
mov
push
jp
jge
mov
sahf
mov
out
or
ja
cwtl
xor
shll
cmp
addr16
push
js
repz
inc
mov
cmpl
lods
stos
scas
pop
sahf
mov
adc
test
adc
mov
mov
push
and
imul
mov
cmp
and
or
or
daa
mov
mov
cmp
mov
sbb
or
cmp
jmp
popf
cli
mov
stc
frstor
std
xlat
pop
mov
mov
mov
fs
mov
sub
mov
add
cmp
mov
daa
mov
cmp
cmp
stos
mov
xchg
test
vcvtsi2ssl
mov
ss
fidivrs
mov
insl
daa
pop
inc
xor
call
mov
test
bound
xor
dec
popa
cwtl
sarb
out
hlt
outsl
scas
loope
pop
xchg
in
jb
mov
scas
stos
cmpsl
jp
cmpsb
jmp
adc
pop
xchg
mov
in
sub
lret
scas
cmpsl
jbe
sbb
mov
or
mov
out
and
xchg
shll
jbe
mov
jnp
pop
icebp
cmpb
test
test
mov
test
pop
adcl
xor
push
jno
sahf
jnp
xor
sub
sub
popa
mov
jno
mov
sbb
cmpsl
das
xor
cmp
pop
add
sbb
test
xchg
and
popf
mov
sahf
daa
jb
sbb
les
or
std
subb
jno
pop
out
test
or
ljmp
push
dec
xor
and
cli
adc
jl
lock
aas
jns
leave
fidivs
sub
insl
bnd
inc
cmc
js
dec
mov
test
mov
cmp
cmp
out
dec
sbb
sbb
mov
pop
shrb
and
lret
dec
int
mov
shr
test
lcall
lret
jae
sbb
mov
hlt
mov
sbb
lods
xchg
push
add
xchg
jle
mov
jo
lahf
adcl
and
jp
pop
or
sbb
ror
cmp
shlb
pop
pop
xor
aad
insb
ficoml
fs
sbb
stc
jle
adc
inc
stos
jo
stos
aam
mov
fwait
mov
pop
mov
scas
mov
push
jno
pop
int
xchg
mov
add
fwait
lcall
and
mov
mov
loop
mov
push
cmp
mov
arpl
ret
loopne
outsl
pusha
ret
mov
mov
jge
mov
stc
fsubr
push
call
and
fldcw
repz
lock
test
addr16
sub
das
and
inc
orl
xor
mov
pop
fidivrl
sahf
fstpl
push
shlb
sub
ljmp
cld
cli
jg
pop
in
mov
push
std
push
aad
lock
das
fimull
enter
add
flds
call
dec
dec
jb
rcrb
mov
lods
inc
mov
push
test
sub
mov
imul
lahf
jmp
mov
cmp
test
pop
adc
fidivrs
insb
ret
lds
push
push
fwait
pop
rcll
cmp
scas
divl
or
out
mov
dec
popa
pop
dec
insb
in
fiadds
cmp
stc
ss
fwait
jae
scas
mov
test
add
pop
push
sub
jecxz
or
sbb
je
sub
das
inc
ljmp
ljmp
rcll
sbb
leave
xchg
mov
jae
scas
push
out
fisubrs
test
mov
sub
jge
push
pop
push
testl
sbb
clc
xchg
mov
cmp
mov
sub
sub
jecxz
data16
pusha
cmp
lea
aad
xor
ja
xor
je
adc
outsl
lods
mov
and
mov
jae
je
lcall
test
jno
subl
mov
pop
leave
jns
lods
mov
rolb
lret
sub
call
lods
and
push
mov
mov
mov
xchg
mov
mov
lcall
sbb
ret
fs
jl
push
das
or
fwait
cmp
test
dec
lods
mov
add
pop
jb
mov
lods
dec
sub
pop
jno
cmc
pop
lea
adc
adc
cwtl
sti
dec
lcall
in
lcall
addr16
push
repz
cmpsl
push
inc
outsb
push
dec
adc
push
sbb
ret
in
jmp
das
fsubs
pop
cmpsb
adc
mov
std
movsl
sub
or
fsubl
dec
icebp
and
fsubrp
mov
out
lret
pop
dec
lret
add
scas
ljmp
in
jge
add
int3
aad
sbb
pop
sbb
mov
cmpsb
les
pop
inc
sub
and
mov
leave
add
and
or
jo
aad
xor
fstpl
fwait
jp
and
je
es
sbb
sbb
mov
fbstp
icebp
cli
jp
and
mov
xchg
sbb
scas
add
inc
je
scas
shl
jp
jl
mov
jge
sub
ret
movsl
push
mov
mov
mov
leave
fidivrl
ret
out
arpl
sti
and
mov
jno
mov
mov
into
imul
test
rcl
jne
add
test
sub
sub
mov
fidivl
sti
scas
cmp
roll
push
dec
dec
sbb
fwait
lret
lea
xor
addl
jne
mov
and
push
mov
xchg
xchg
fnstcw
ret
and
push
dec
and
mov
nop
lds
into
stos
push
push
js
inc
sub
mov
int
jbe
xor
push
stos
cmp
and
xchg
fnstcw
jge
mov
into
std
test
stc
mov
mov
sbb
sub
call
ret
mov
int3
xchg
ss
das
jnp
loope
jbe
adc
push
jns
mov
or
popf
or
fnstcw
and
mov
lods
sub
in
and
mov
imul
adc
repnz
gs
pusha
roll
and
lcall
or
sub
sbb
stc
lret
sub
dec
mov
int3
popf
popf
dec
push
jg
inc
stc
test
das
pop
lahf
rcll
inc
xchg
leave
jae
enter
adc
mov
pop
push
xchg
aas
jecxz
into
cmpsb
addl
fsub
adc
jmp
sbb
je
cs
mov
pop
mov
push
lret
and
xchg
loopne
inc
aad
aam
cmpsb
inc
xor
and
lret
mov
rcr
cmp
jnp
aad
leave
notb
fsubr
push
mov
mov
fwait
and
add
xor
pop
mov
push
mov
push
jle
jnp
das
imul
mov
push
insl
and
sub
mov
add
or
cmp
mov
jle
cwtl
scas
ss
xorl
xor
cmp
jge
pop
cmp
sbb
mov
mov
arpl
pop
ror
lahf
aaa
xor
ss
push
out
sbb
les
jg
xor
fxch
or
loopne
xchg
dec
pop
dec
xorb
xchg
mov
ror
push
mov
repz
stc
push
mov
cmp
rcll
fdivr
xchg
xchg
jns
cmp
xchg
mov
xor
pop
xchg
ficompl
jb
imul
mov
into
mov
movsb
xchg
stc
fldl
dec
pop
cmp
shll
pop
adc
xchg
mov
mov
movsb
pop
pop
ljmp
imull
mov
in
das
add
push
mov
xor
cmp
pop
inc
stos
mov
pop
out
lods
xor
pop
pop
mov
lods
cmp
sbb
mov
shr
xchg
add
pusha
xchg
fdivl
sbb
cmc
fs
ret
xchg
mov
or
dec
les
loop
cli
aad
mov
out
or
insl
insb
insb
xor
movsb
push
jo
out
call
fimull
in
arpl
and
inc
in
in
repnz
fsubrl
mov
adc
or
test
or
xor
adcb
mov
inc
mov
dec
xor
pop
or
mov
mov
lret
xor
adc
scas
xor
outsb
inc
ret
jnp
sbb
ss
pop
pop
jl
inc
insl
jg
jmp
cmpsb
mov
pop
test
xlat
push
mov
mov
insb
cmp
push
sub
enter
outsb
xor
in
add
mov
insl
inc
pusha
or
sbb
pop
xor
adc
cld
mov
xchg
shll
testl
and
push
sbb
mov
clc
addr16
pusha
icebp
pop
mov
cmpsb
push
sbb
mov
in
and
cmpsb
add
rcrl
xor
jecxz
fldcw
test
inc
ja
popf
inc
sub
pop
lds
scas
loope
or
ljmp
in
or
in
push
pop
ret
and
in
jno
scas
mov
call
xor
icebp
xor
adc
aaa
fsubl
int3
push
pop
lret
ljmp
mov
out
repnz
add
jne
xor
shll
mov
js
pop
jg
sbb
cltd
cmp
ror
test
inc
fwait
and
push
insl
fsubrs
cmp
daa
push
into
xchg
or
iret
pop
jge
xlat
mov
in
call
lds
sub
mov
and
jge
xlat
out
jae
stos
mov
xlat
fs
aaa
lock
scas
push
insb
loop
lea
daa
mov
jo
or
les
cmp
adc
pop
push
ljmp
fists
outsb
xlat
xor
mov
xchg
sbb
nop
push
cld
mov
sub
mov
mov
in
gs
push
fdivs
xchg
pop
scas
add
push
inc
mov
pop
mov
dec
repnz
stc
mov
mov
lods
jecxz
mov
jbe
xchg
pop
jmp
loope
fs
movsb
lcall
mov
leave
lods
lock
loop
in
add
sub
imul
jbe
fldcw
cmovns
leave
sbb
test
lods
push
jbe
jne
mov
xor
sub
mov
xchg
xor
xor
mov
adc
out
int3
cmp
jp
cmp
push
repnz
out
jge
cli
inc
pop
loope
add
movl
loope
cmp
jae
cmp
pop
loopne
adc
cwtl
push
sbb
jge
jl
jg
xchg
push
pop
push
mov
iret
aam
dec
mov
dec
cmp
sbb
scas
es
data16
sub
imul
imul
popf
test
sbb
push
cs
mov
out
dec
add
loop
lock
cmp
clc
ret
or
sbb
xlat
pop
mov
fstps
jno
lret
pop
loopne
jbe
jge
adc
out
outsb
lea
orl
mov
aaa
sub
rolb
mov
jno
lods
mov
shll
mov
pop
cmp
out
cmc
ja
cmp
je
cmpsl
push
push
or
leave
loopne
xchg
xor
jge
sahf
dec
call
lock
fidivrl
jno
mov
cvtps2pd
daa
int
pop
das
inc
push
mov
jp
fnsave
popf
dec
inc
scas
xchg
out
mov
mov
dec
outsb
pushf
lea
mov
nop
test
lods
pop
imul
jl
ficoml
sub
jmp
mov
jl
push
mov
cmp
loopne
push
adc
inc
lret
xlat
cli
xchg
out
jge
mov
clc
repz
cmp
mov
fsubl
mov
sbb
and
loopw
enter
jae
mov
or
mov
jb
data16
pop
sahf
mov
or
out
inc
cmpb
mov
or
xchg
cltd
inc
add
js
xchg
dec
xchg
inc
jnp
lahf
mov
ljmp
or
jnp
xor
sbb
mov
leave
imul
or
mov
inc
jne
lcall
icebp
inc
xchg
fucom
lcall
add
sbb
ljmp
mov
mov
xor
mov
imul
pop
hlt
dec
xchg
cli
and
mov
and
fldt
pop
jg
adc
out
cs
fistpl
mov
pop
inc
mov
add
in
cmp
test
cmc
mov
pop
add
insb
fistl
mov
aas
aaa
cmc
notl
cli
sbb
push
fmul
push
js
inc
ret
pop
mov
push
outsb
lret
es
mov
dec
inc
arpl
nop
je
xor
popl
data16
jb
fwait
add
inc
push
jmp
and
pop
sub
jbe
dec
sub
mov
call
xchg
mov
mov
cmc
pusha
pop
xor
pop
cmp
loopne
imul
addr16
movsl
dec
fistps
inc
jo
xchg
movsb
xor
dec
adc
fwait
das
dec
lahf
cltd
dec
loop
dec
lods
and
sub
or
push
and
mov
adc
call
jnp
aam
xchg
sub
sbb
scas
loopne
shl
jne
xor
addl
frstors
push
fs
sbb
dec
mov
dec
pop
mov
loopne
add
lea
lods
movsl
test
enter
popf
mov
data16
xchg
pushf
dec
mov
gs
popa
ret
in
int3
add
push
sub
cmc
push
movsb
ss
inc
adc
icebp
dec
adc
in
ds
popf
pushl
adc
adc
pop
xor
mov
xor
sub
daa
cwtl
lcall
aaa
sbb
dec
les
mov
cmovb
addl
pushf
xor
pop
jb
sbb
adc
jmp
inc
out
and
out
loope
sub
xchg
std
or
daa
jbe
repz
bswap
insl
mov
mov
aaa
jle
and
jp
mov
cmp
cld
mov
fiaddl
decb
dec
pop
and
cmp
add
scas
push
sbb
rcrb
sarb
push
pop
test
or
repnz
test
les
ficoml
mov
sbb
mov
les
dec
xor
jl
das
and
cmp
fcomps
cmpsl
xchg
inc
and
jl
jmp
outsl
and
mov
pop
daa
adc
gs
out
andl
pop
and
jmp
xchg
xor
sbb
nop
and
sub
fbld
movsb
sbb
pop
fnstcw
mov
outsl
ret
pop
or
and
lret
jg
cs
inc
pop
test
packssdw
test
gs
ja
out
gs
or
sbb
xor
add
aad
and
xor
lea
cmpsb
fnstenv
adc
nop
mov
or
push
push
adc
aam
mov
fsubl
bound
lods
into
pop
sub
fadd
out
or
ljmp
inc
stos
out
loope
inc
add
cmp
xor
mov
dec
cmp
push
xor
sahf
or
mov
pop
inc
pop
out
xlat
lods
call
fs
push
pop
loope
lods
andb
and
cmp
mov
popa
sub
inc
pop
inc
enter
pop
sahf
cmp
xchg
push
cwtl
lods
fildl
dec
loopne
mov
jbe
mov
cwtl
add
jo
cli
mov
lods
arpl
jo
pusha
lods
pop
sub
aas
mov
stos
fstpl
iret
aas
dec
cmp
jno
fcomps
mov
adc
or
xchg
pop
adcb
xchg
cmp
mov
jmp
mov
add
js
jb
pop
dec
adc
movsb
cld
daa
mov
cs
inc
popa
ss
sbb
mov
cmc
daa
cmp
xor
jbe
fs
mov
arpl
adc
dec
loope
out
dec
ret
rcl
inc
lods
les
and
sub
loopne
push
xlat
fimuls
popf
sbb
push
mov
push
out
push
sub
adc
lods
xor
pop
jg
mov
stos
lods
jg
nop
mov
jecxz
mulb
xchg
inc
xor
ljmp
pop
cmc
xchg
inc
test
outsl
pop
lahf
scas
mov
sub
push
mov
leave
in
inc
mov
bound
nop
adc
in
mov
addr16
inc
imul
jns
enter
or
lret
aas
push
jecxz
or
mov
jb
mov
inc
jns
jmp
enter
popa
xor
cmp
leave
mov
test
and
sar
imul
pusha
jnp
adc
mov
cmp
fiadds
pop
sbb
mov
rcl
push
scas
repnz
mov
mov
inc
cmp
pop
out
das
insl
fiaddl
std
in
das
sub
dec
cmp
mov
cmp
frstor
fcmovu
push
push
outsb
xor
inc
jg
jnp
imulb
loopne
scas
dec
inc
cmp
xor
mov
orb
sub
sbb
and
push
dec
xlat
dec
mov
nop
fcmovnbe
mov
inc
outsl
mov
sub
stc
hlt
mov
xchg
inc
rcrb
mov
sbb
fstpl
jo
mov
lcall
call
test
mov
mov
lret
scas
mov
sbb
add
pop
cmp
sbb
xor
adc
mov
stc
js
cmp
in
fldcw
clc
fidivrl
sub
ljmp
mov
dec
pop
push
js
push
call
or
mov
gs
and
stc
movd
notl
test
xchg
pop
pop
sub
lret
or
mov
fisubrl
ss
and
sub
out
shl
in
popl
pop
inc
test
sub
or
pushf
jg
movsb
cmc
out
aad
xchg
jne
stos
pop
pop
inc
xchg
cmpsl
or
cmp
stc
std
movsl
sub
and
outsl
mov
push
mov
mov
fs
rol
push
pop
roll
rolb
mov
sub
mov
fucomp
loope
sub
insl
push
sub
mov
fdivl
ret
pusha
inc
cs
sbb
pop
iret
and
subb
out
or
aaa
mov
fidivrl
adc
out
scas
imul
adc
mov
mov
mov
out
lea
xor
mov
inc
in
push
enter
jnp
xor
fucomip
test
sbb
gs
cmp
pop
add
mov
lea
insb
mov
push
stos
loop
xchg
repz
mov
sub
scas
jns
inc
pop
or
aas
lret
cmp
mov
lds
push
and
and
mov
icebp
and
cli
int
xchg
pop
jnp
jl
mov
cmpsb
mov
xchg
dec
jno
outsb
orl
pop
mov
xor
xchg
adc
push
adc
cltd
repz
mov
stos
mov
inc
mov
cld
xchg
or
or
icebp
xchg
fucom
int
and
fxsave
rcll
ja
int
insl
pop
rcrl
lods
jno
fs
mov
ja
dec
xor
in
jmp
popf
xchg
or
or
sbb
mov
mov
xchg
aaa
mov
cmp
lock
data16
jmp
subb
daa
push
sub
adc
cmp
add
jno
aaa
pop
arpl
and
dec
jle,pn
shrl
cmp
mov
std
jp
xchg
andps
sub
push
loop
push
sbb
shl
jbe
in
mov
inc
inc
jge
mov
mov
mov
push
ficoms
in
testl
mov
subl
std
and
in
sti
jae
mov
dec
sti
subl
shll
jg
repz
jge
add
pop
rorb
mov
rcll
es
popf
mov
sbb
jg
shl
and
xor
mov
push
test
out
testl
insb
and
mov
scas
ja
je
sbb
xchg
je
in
jne
dec
jecxz
dec
mov
mov
sbb
fidivs
out
insl
xlat
js
sbb
adc
inc
jae
mov
inc
shl
in
xchg
mov
mov
pop
or
push
fdivrs
fs
sbb
testl
dec
jb
dec
int
sub
mov
pop
or
dec
shrl
dec
popa
insl
xchg
outsl
ss
and
test
push
sub
cmp
add
or
inc
lods
inc
push
jb
enter
shlb
fnstcw
sub
jl
pop
ljmp
enter
dec
sti
push
pusha
test
pop
inc
mov
cmp
jne
int3
cmp
ret
loopne
sub
and
loope
imul
pop
dec
sbb
cmp
int
push
add
push
mov
lea
push
stos
imul
call
xlat
dec
push
push
mov
pop
sub
dec
adc
fidivrs
push
mov
add
lea
sub
sahf
in
pop
adcl
jae
shr
pop
mov
into
mov
xchg
js
xorl
sbb
cli
gs
cmp
jmp
mov
inc
aam
cmpsb
adc
insb
lret
repnz
add
xor
adc
jo
outsl
loopne
aas
iret
mov
iret
sbb
fiadds
xchg
pop
sub
sbb
mov
cmp
test
mov
mov
and
bnd
ret
cmp
mov
push
cmc
add
push
mov
adc
xchg
fdivrs
push
mov
stc
out
and
leave
mov
mov
adcb
inc
sub
mov
int3
dec
in
add
xor
test
pop
das
inc
outsb
mov
pop
mov
mov
mov
cwtl
xchg
jle
inc
data16
je
inc
lahf
sbb
lcall
icebp
out
nop
sub
es
jno
lea
pop
pop
call
imul
dec
jmp
mov
test
mov
je
call
pop
pushf
xlat
aam
adc
movsl
jne
sub
lods
dec
aaa
icebp
fisubrl
mov
js
fisubs
sbb
aas
ficompl
ds
pushf
jns
push
pop
into
jo
xor
sbb
jmp
push
incb
mov
adc
repz
jo
mov
ss
mov
xor
arpl
cmp
dec
mov
mov
xor
cli
push
sbb
cwtl
jl
sbb
call
inc
mov
divl
pop
mov
add
sbb
nop
cltd
pop
lods
pop
addl
repnz
testb
inc
push
lods
mov
push
movsb
mov
lods
push
pushf
out
mov
jmp
imul
dec
adc
mov
roll
cwtl
popa
es
fs
fsts
mov
std
pop
mov
fwait
std
jae
lds
dec
cltd
cmp
nop
mov
jno
jp
pop
cmpsb
cmpsb
les
xor
iret
insl
fwait
addr16
mov
or
leave
cmp
dec
jle
sbb
jp
mov
movsl
movsb
cs
xor
dec
loopne
idivl
outsl
out
mov
mov
cmp
in
test
iret
add
inc
jo
dec
add
fsubrp
push
ja
test
add
mov
or
jp
icebp
jecxz
dec
gs
outsl
jnp
pop
rorb
dec
sahf
inc
daa
lret
cld
pop
lock
sbb
jle
hlt
pop
subb
arpl
push
sub
ficompl
push
xchg
push
mov
pop
cli
or
inc
xchg
sbb
hlt
pusha
into
popa
stos
lods
mov
ja
dec
inc
cltd
cmpsl
aad
mov
xor
int3
pop
mov
xchg
js
shrl
cmp
add
jl
outsb
push
dec
nop
cmpsb
mov
sarl
rcll
aaa
lahf
pop
jns
xor
sarl
std
div
rclb
jnp
sti
add
dec
popf
xor
inc
xchg
bound
mov
cli
pop
xor
movsl
mov
inc
sbb
les
or
scas
sub
pop
test
add
outsl
jae
aad
call
jg
sub
xchg
je
cmp
mov
or
insl
and
xor
lcall
imul
popa
add
or
inc
push
cmpsb
call
shl
fnstsw
sbbl
sbb
in
popa
dec
fdiv
leave
jnp
imul
dec
push
mov
test
mov
divb
xchg
xor
popa
popf
sbb
lock
adc
mov
popf
mov
dec
jo
ja
mov
add
leave
push
ficomps
push
popf
mov
add
popa
test
hlt
sub
loope
add
shrb
jmp
inc
cmpsl
cli
mov
jl
cmp
dec
hlt
repnz
push
je
mov
lods
inc
lret
in
mov
test
mov
ret
in
loope
sar
dec
in
mov
xchg
ds
mov
gs
lds
popf
xchg
jne
mov
and
inc
xorb
mov
iret
pop
xor
mov
daa
push
push
pop
faddl
lret
xchg
cs
andb
shlb
test
int
leave
repnz
out
ja
mov
cwtl
xchg
mov
xchg
cmp
lret
xchg
xchg
add
jo
ja
inc
push
adc
mov
or
insl
mov
bound
add
pop
mov
and
inc
cltd
xor
sub
into
xchg
push
jno
fisttps
lcall
and
and
test
divl
dec
cmp
hlt
sbb
cli
negl
addr16
rorl
in
aad
loop
mov
jmp
cmp
out
sub
sub
enter
addb
push
rolb
jge
imul
mov
xchg
lahf
insl
xchg
mov
subps
jnp
out
inc
dec
imul
subl
out
jl
jnp
into
and
push
imul
lods
xchg
cmp
push
arpl
fimuls
in
lcall
xchg
rolb
outsl
stc
sub
es
in
mov
push
fs
add
rcll
int
test
aas
es
je
sbb
xchg
repz
inc
lds
adc
cs
and
mov
sub
insb
mov
es
jecxz
lods
inc
fistl
adc
push
lahf
gs
and
adcb
mov
jle
dec
mov
pushf
jns
movsb
nop
ljmp
leave
sub
lods
push
movsb
xchg
xchg
mov
rorb
and
mov
xor
mov
xor
loopne
mov
in
scas
sub
adcl
pop
mov
xlat
dec
vrsqrtps
adcl
sbb
roll
sub
fildll
sub
mov
mov
lock
jl
jge
lret
sbb
jmp
mov
adc
push
mov
popa
mov
cmp
outsl
call
mov
fisubrl
jo
je
repnz
scas
adc
test
inc
mov
arpl
mov
push
mov
inc
repz
test
or
stos
xchg
outsb
and
adc
inc
je
lods
jne
ret
rcrl
repnz
dec
imul
push
mov
jae
mov
negl
push
lods
push
mov
xchg
jp
rorb
push
xor
xor
bnd
std
xor
fcomip
int
mov
out
dec
dec
ja,pn
mov
out
inc
bound
popa
stc
xrelease
cmp
push
jne
call
pushf
mov
shl
dec
movsl
or
idiv
mov
xchg
daa
lret
aaa
test
mov
inc
inc
jae
cld
and
das
xchg
mov
imul
and
push
outsb
test
add
pop
pop
pusha
sahf
addr16
push
mov
and
orb
cltd
stc
xchg
movsb
adc
push
gs
jle
mov
mov
in
int3
shrb
cli
xchg
cmpsl
cmp
dec
icebp
ja
or
cmpsb
mov
jge
jmp
xor
shll
dec
jns
sub
push
daa
out
jno
cmp
cmpsb
mov
adc
test
adc
dec
adc
shll
mov
popf
lock
stos
xchg
cwtl
div
enter
ss
pop
in
xchg
out
push
push
sbb
ret
aam
jmp
jecxz
pop
pop
cmp
fdivrl
xor
and
jmp
add
sbb
push
pop
call
insb
pop
xchg
stc
arpl
sbb
push
cmp
leave
mov
sub
test
jge
je
cmp
pop
xor
jecxz
dec
test
cmp
push
sarb
jo
shll
fnstsw
mov
dec
sub
mov
push
mov
sub
in
cmc
test
movsl
int
fisubs
sub
addr16
mov
pop
mov
add
adc
adc
sar
sbb
mov
cmp
push
movsb
and
lea
jmp
cmp
pop
out
sar
std
mov
repz
mov
mov
push
mov
pop
jo
clc
dec
ret
jnp
xchg
jb
decl
adc
sbb
adc
sbb
adc
mov
mov
mov
mov
cmc
insl
push
add
cmp
int3
mov
scas
push
dec
add
cmpsl
jnp
jecxz,pt
loopne
mov
push
je
add
sahf
xchg
mov
mov
sub
test
sbb
movsb
inc
or
stc
xchg
dec
call
call
or
inc
stc
add
add
cmpsl
enter
xorl
lret
loopne
jne
mov
test
repnz
push
push
test
rcrl
in
lods
dec
dec
xchg
xchg
sub
jle
sbbb
int
mov
testb
lret
addr16
cmpsb
push
cmc
or
xchg
sub
inc
add
mov
dec
push
dec
std
fsubrs
dec
jae
arpl
or
add
sbb
fisttpl
stos
xor
mov
inc
cmp
or
lahf
lods
dec
insb
lret
push
ja
es
or
jl
cmp
cmp
inc
inc
mov
test
repz
sti
insb
imul
mov
dec
dec
push
inc
mov
popa
leave
dec
sahf
or
cmc
add
cmp
rol
lcall
mov
notl
inc
dec
mov
jp
in
mov
rcrb
xchg
mov
xchg
stos
ret
and
sbb
lock
cltd
pop
test
and
sbb
jp
popf
dec
xchg
xchg
ret
add
pushf
mov
into
nop
in
inc
aam
out
int3
push
int
bound
pop
outsl
loope
fs
test
cld
mov
jmp
repnz
shll
cmp
add
pop
lret
cld
dec
inc
sbb
push
gs
dec
add
jg
add
mov
mov
xor
mov
mov
sub
add
adc
pop
ljmp
add
or
sub
push
mov
adc
mov
adc
popa
enter
and
test
jl
push
sti
jp
cli
inc
jbe
push
jo
loopne
xor
mov
inc
jmp
rcrb
imul
jae
push
pop
jecxz
xchg
xor
inc
inc
jo
xchg
mov
add
xchg
fistps
in
fsub
xor
push
outsl
mov
pop
loopne
arpl
dec
add
outsb
adc
dec
xchg
lods
and
enter
sbb
incb
jns
push
pop
movsb
ljmp
add
jns
sbb
shlb
addr16
dec
jg
scas
jns
xchg
inc
pop
jb
jecxz
arpl
xor
fisubrs
std
imul
inc
int
in
ja
mov
sub
mov
adc
rorl
add
and
push
dec
pop
stc
dec
cs
ret
scas
into
lahf
aam
jne
js
jmp
xchg
mov
fidivs
dec
mov
out
fsub
mov
mov
dec
mov
loopne
insl
sbb
fdivrl
imul
in
jecxz
xchg
jbe
mov
enter
adc
scas
or
popf
mov
push
add
fcompl
jne
and
in
cmp
mov
dec
shrl
push
lds
inc
mov
pusha
xchg
outsl
mov
cmp
nop
repz
loopne
adc
push
mov
jp
push
arpl
xorb
jne
mov
in
and
cmpsl
loopne
sbb
fcoms
testl
mov
xchg
pop
stos
xchg
cltd
sarb
add
push
mov
aaa
jmp
sti
mov
xchg
sbb
sahf
std
cltd
lods
lahf
ljmp
das
pop
iret
cltd
je
push
test
mov
sub
out
rclb
and
jecxz
gs
xlat
sar
out
pop
gs
and
cmp
add
das
das
lds
movsl
int3
mov
cltd
aad
rcll
cmp
mov
inc
test
movsb
or
ret
sub
lods
adc
fstps
lods
mov
pusha
cwtl
xor
filds
lods
test
push
add
cmp
out
xchg
jmp
mov
dec
or
pop
movsb
mov
stc
lahf
lret
ja
adc
stos
fisubrs
jo
loop
pop
mov
shll
sub
test
or
and
or
js
jmp
into
popa
push
mov
push
fs
jnp
in
cmp
fs
cli
test
mull
cs
aam
jp
sbb
mov
movntq
cmp
or
mov
mov
sbb
scas
mov
fldl2e
inc
cmp
sbb
cmp
dec
push
xchg
repnz
aad
in
in
jecxz
faddl
sbb
into
or
out
andb
clc
dec
mov
out
lods
lcall
xchg
mov
aas
lods
fs
out
lahf
int
cmp
mov
cmc
dec
push
mov
out
iret
jae
ret
aam
dec
pushf
pop
inc
cwtl
lds
mov
ja
sub
inc
xchg
sahf
dec
sub
push
lods
incl
push
cmp
xor
mov
push
int
mov
dec
or
leave
jmp
orb
data16
sbb
mov
pop
sub
xchg
or
cs
fidivrs
popf
jns
mov
xor
pop
rcll
movsl
roll
incb
mov
sbb
jns
test
in
pop
inc
std
mov
rolb
fwait
xchg
lea
and
enter
sub
clc
xchg
sbb
rolb
rolb
xor
jae
rorl
adc
repz
sub
pop
xchg
mov
in
pop
push
push
adc
fistpl
and
cmp
divl
xor
mov
cltd
sbb
aam
sub
stos
pusha
xor
ror
jne
and
xchg
arpl
inc
cmp
push
lds
call
mov
out
inc
jmp
daa
insl
int3
inc
sbb
push
xchg
push
mov
pop
or
xchg
addb
sarl
push
andb
xor
out
insb
sbb
push
or
faddp
popf
jmp
sarl
pop
outsb
cmc
inc
add
fstpl
imul
mov
xlat
insb
xchg
and
push
int
sub
ss
add
or
mov
lods
out
and
cmpsl
adcb
js
cmp
or
push
repnz
or
rolb
sahf
cmp
pop
or
dec
and
mov
movsl
sti
sbb
jle
pop
add
fiaddl
pop
xor
shlb
cld
mov
dec
aaa
mov
lcall
jb
clc
sub
cmp
push
mov
lock
add
push
adc
negl
xchg
mov
addb
mov
cmp
mov
sbb
xchg
mov
xor
ffree
mov
inc
fs
insb
jg
sti
or
imul
push
sbb
mov
jecxz
cmpsb
flds
or
into
or
xor
jmp
sub
test
inc
jnp
nop
jmp
jno
fldcw
ja
inc
lods
mov
clc
mov
jns
loop
push
xchg
leave
cmpl
xor
mov
pop
or
cli
cmc
dec
leave
mov
mov
xchg
sub
mul
inc
push
xchg
mov
rolb
xchg
xchg
push
in
mov
cs
movl
sub
in
adc
fwait
jo
bound
and
lods
fistps
test
add
xchg
push
je
inc
fadds
into
lret
adc
dec
xor
icebp
sub
or
repz
lret
cmp
sbb
jo
lods
inc
push
outsl
dec
bound
jmp
decb
stc
sbb
inc
jnp
dec
addr16
push
add
fcomip
sbbl
jle
mov
lea
xchg
push
mov
xor
sbb
cwtl
lds
mov
adc
les
int
sbb
push
xchg
jno
mov
adcl
orb
xchg
psubw
add
push
cwtl
sub
aam
and
adc
insl
jp
leave
shl
mov
cmp
sbb
mov
jne
and
inc
cmp
xchg
stc
push
and
push
xchg
fstps
addr16
outsl
sbb
test
testb
jge
data16
xchg
mov
jns
rcrl
jno
sti
sub
and
fcomi
out
cmpsb
lock
xor
outsb
sbb
mov
inc
lea
enter
iret
rolb
mov
daa
out
mov
sub
and
cmpsb
xchg
pushf
lea
jbe
mov
pop
ficoml
mov
sahf
out
jp
xor
jmp
lcall
clc
mov
mov
adc
mov
popf
iret
xchg
or
xor
cwtl
sbb
cld
pop
mov
gs
popa
stos
pusha
xor
add
out
sbb
fcomip
mov
mov
lds
fcomi
pop
pop
add
adc
inc
jnp
cmc
pop
mov
xor
jp
add
and
push
movsl
jne
mov
sar
in
push
test
inc
or
mov
out
cmp
paddd
ds
or
cmp
insl
inc
sahf
repz
pushf
adc
fs
lods
ja
mov
ret
xchg
fldcw
xor
jp
mov
mov
jg
add
jne
lcall
and
push
lcall
inc
inc
xchg
xchg
sbbb
adc
aaa
dec
inc
pop
sahf
sub
aad
addr16
enter
rol
repnz
dec
cmp
add
daa
adc
aam
or
loopne
mov
jmp
mov
filds
mov
push
insb
cld
jp
stos
cmp
insl
xor
push
jo
shrb
stos
ror
ffreep
jg
jb
and
pop
mov
repz
lret
arpl
jns
push
jle
test
and
add
sub
sbb
inc
pop
sbbl
mov
in
push
les
sbb
push
xchg
jmp
aam
xchg
add
inc
and
xlat
add
xor
pop
in
jne
clc
xor
push
lcall
jo
push
out
insb
imul
shr
pusha
clc
xor
lcall
push
mov
in
or
xchg
and
std
mov
xor
push
inc
dec
pop
popa
cwtl
test
cmp
fiadds
jg
add
pop
dec
and
dec
xor
dec
fldcw
ss
cltd
mov
or
iret
adc
pusha
sbb
movsl
hlt
int
inc
scas
xchg
ss
jmp
pop
out
pushf
jecxz
cmp
rol
hlt
mov
inc
adc
aas
and
mov
roll
cs
and
idivb
mov
inc
mov
sub
or
clc
pop
jbe
add
xchg
mov
sbb
jmp
lock
jg
addr16
repnz
pop
andb
inc
lahf
adc
sbb
out
mov
and
xor
jmp
jns
data16
dec
out
aas
idivl
mov
or
jae
fcmovne
add
push
or
cmpsl
jne
call
in
add
pop
or
adc
cmp
and
ss
mov
pop
dec
faddl
xor
sbb
or
or
cmp
inc
movsb
dec
push
call
sbb
test
paddb
mov
xchg
inc
sub
addr16
loop
test
dec
fwait
inc
pop
or
dec
jp
std
clc
addr16
cs
jbe
fcomps
xchg
repz
iret
negb
or
popa
fnsave
xchg
scas
push
and
and
adc
popf
sbbl
mov
sbb
mov
fnstsw
icebp
dec
xchg
xor
xchg
push
inc
shrd
sbb
adc
fmull
js
sahf
dec
add
xor
addb
pop
sub
icebp
lods
and
mov
inc
ljmp
push
ret
jae
adc
cmpsl
outsb
dec
cli
mov
xchg
sub
test
es
test
aad
fldcw
xchg
push
lds
inc
xchg
dec
cmp
shlb
in
cmpsl
repz
cmpb
ret
mov
aas
jne
add
xor
icebp
xor
cwtl
jp
sbb
repnz
imul
inc
and
loope
pop
daa
xor
mov
js
cs
repnz
cmp
cmc
dec
jmp
pop
jnp
push
mov
dec
leave
jns
pop
std
adc
dec
xchg
lods
test
shlb
pop
lods
js
andb
jmp
in
dec
sub
je
pop
push
lods
js
fbstp
sub
and
fmul
dec
or
out
adc
add
sbb
std
clc
pop
add
cli
mov
loope
aaa
push
imul
jmp
xor
jp
push
dec
int3
lds
scas
pop
imul
popa
jbe
pop
loope
fisttps
test
outsb
jg
pop
jle
pop
mov
aaa
js
jp
cmp
mov
out
jmp
jge
cmpsl
inc
addl
push
mov
and
in
cmp
incb
xor
arpl
and
dec
fildl
cmp
mov
ss
jae
jge
and
fisttpll
mov
mov
lds
repz
dec
xor
sub
mov
xor
xchg
push
fbstp
test
xchg
cli
std
hlt
push
cmp
andl
imul
mov
fnstenv
lcall
lret
jp
mov
xchg
call
popa
inc
fsubrl
jbe
dec
into
mov
fs
dec
inc
fnstsw
in
in
in
sbb
scas
lcall
push
push
and
or
xor
int
mov
xchg
xor
in
push
out
ret
stos
movsl
data16
push
cmp
lcall
out
add
sbb
jg
inc
sub
ficoml
loop
cmpsl
mov
cmp
fs
mov
and
adc
xchg
aas
or
repz
jl
mov
mov
mov
sbb
std
or
lretw
adc
mov
xor
dec
push
push
mov
push
into
mov
xchg
lahf
aas
mov
cmpsl
pop
call
add
mov
dec
mov
cs
fbld
outsb
push
mov
iret
icebp
jbe
lcall
popf
cmp
mov
js
imul
push
ja
sbb
cmc
inc
ja
xchg
mov
lods
test
ja
push
xor
stc
movsb
stc
xor
mov
outsb
inc
fists
mov
out
imul
add
les
ja
push
inc
jl
imul
stc
lret
mov
sub
out
sub
aam
cmpsb
mov
xchg
repz
imul
ret
sbb
daa
xchg
int
mov
or
inc
jmp
mov
mov
imul
mov
jge
push
mov
jne
inc
inc
add
ud0
jmp
push
pop
jo
push
mov
sub
cmpb
or
jp
mov
jle
add
mov
xchg
cmp
pop
xlat
fwait
and
add
push
sti
xchg
pop
lods
enter
add
mov
push
xor
rcll
bnd
out
sub
inc
icebp
scas
shl
xchg
aaa
sub
mov
mov
call
xchg
lods
push
xchg
and
call
out
lds
mov
outsl
push
jl
loope
jl
or
out
nop
lahf
scas
push
dec
lret
xorl
mov
or
repnz
xchg
idivb
insl
sbb
inc
push
scas
inc
xchg
mov
dec
jl
sub
cmp
repz
adc
mov
enter
out
out
in
in
lods
fs
fldt
iret
insl
sbb
sbb
pop
inc
outsl
adc
dec
xchg
jbe
mov
xchg
lea
fs
pop
loopne
das
and
pushl
mov
pop
jb
out
dec
aad
cmpsb
out
clc
dec
lret
xor
leave
fstp
mov
scas
aad
leave
aas
adc
push
mov
cmp
mov
pop
lods
mov
and
cmc
iret
popa
lcall
push
mov
inc
out
fildl
dec
mov
xchg
sub
inc
orl
gs
jle
nop
mov
dec
hlt
cld
jb
sub
or
lds
add
aad
push
jmp
mov
cwtl
push
jns
push
ja
and
rcl
xchg
fmuls
in
jnp
mov
iret
sub
jle
rcr
stc
movsb
xor
adc
cmp
and
dec
ds
iret
jg
adc
jb
bound
lods
bound
mov
out
and
jge
sub
pop
cld
mov
dec
imul
ds
sti
xchg
stos
and
je
add
loop
sbb
insb
test
insb
fwait
dec
add
xchg
sbb
fistpl
in
xor
ds
mov
bound
push
mov
cmpsb
mov
outsl
lret
add
jecxz
sub
fmuls
push
mov
lock
fistps
fdivrs
lds
push
pop
jnp
mov
cmp
sbb
test
push
inc
jae
icebp
inc
aas
out
and
stc
or
imul
cs
clc
sub
filds
scas
shlb
outsl
int
push
mov
and
cli
push
push
out
jp
mov
fcmovnbe
inc
lds
mov
and
aad
repz
adc
mov
mov
daa
popf
das
ret
add
pop
adc
xchg
rorl
jnp
sub
lcall
rep
cli
call
mov
cmp
aad
fwait
lods
sub
daa
jns
add
testl
mov
out
mov
mov
dec
out
pop
lea
nop
sub
xor
pop
mov
int
push
or
movsb
jl
les
lcall
push
pop
jg
add
mov
lcall
stos
movsl
push
fisubl
pop
dec
cmc
sbb
sbb
std
dec
in
xor
mov
adc
pop
xchg
stos
mov
add
in
pop
movsb
inc
push
adc
into
sub
fmuls
mov
lods
jno
orl
pusha
adc
fidivl
scas
dec
pusha
stos
xor
mov
mov
cmp
xchg
aam
cwtl
and
pusha
mov
cmpsb
cmp
sub
and
out
inc
in
mov
xor
js
sti
lock
je
test
or
mov
xor
leave
add
dec
adc
jo
test
xor
stos
push
pop
pop
icebp
mov
sub
ret
dec
mov
sub
aas
iret
lock
lods
loopne
loopne
cmpsb
cmp
push
pushl
mov
pop
pop
xorl
ficomps
lea
sbbl
jbe
cmp
mov
fisubl
inc
push
mov
mov
aaa
xor
daa
push
test
in
mov
arpl
mov
cs
mov
push
fs
pusha
jge
adc
fisubs
and
sbb
icebp
stos
gs
push
fs
ljmp
sub
sbb
bound
xor
push
mov
icebp
in
or
stos
mov
mov
int
and
ljmp
aad
adc
addr16
ret
sbb
xor
push
sbb
xor
test
sub
aad
data16
jb
or
xor
cmc
aam
adc
jle
inc
pop
sub
les
dec
pop
push
pop
mov
jecxz
stc
jno
gs
call
fwait
add
in
jns
sbbl
xor
or
jmp
cmpsb
dec
dec
cmp
test
mov
cmp
fs
cmc
or
ret
xchg
test
rclb
inc
jo
jge
mov
mov
cltd
mov
cmc
cltd
and
push
mov
sahf
or
mov
mov
pop
mov
pop
inc
nopl
cli
mov
js
inc
out
cli
jns
xchg
mov
push
scas
loope
and
test
sar
cmp
pop
daa
je
fldenv
jle
sahf
shr
fcoml
test
or
sub
jp
sub
sar
jnp
ss
xor
sub
fld
sub
inc
fldenv
inc
cwtl
popf
mov
loopne
mov
fcoms
int3
out
jmp
mov
xor
mov
frstpm(287
pop
xchg
mov
mov
pop
mov
lods
movsb
push
std
inc
shlb
dec
test
sbbb
sub
bt
mov
sbb
push
inc
add
jnp
fidivs
push
aaa
jnp
in
jg
xchg
push
adc
lret
inc
xchg
imul
fimuls
push
in
andl
or
shrb
push
inc
dec
push
gs
jg
outsb
daa
test
aad
aaa
sbb
jns
push
jmp
sub
sahf
inc
cmp
sub
mov
out
fisubrl
popa
sahf
push
push
fnstcw
jo
sahf
pusha
sbb
fisubl
je
pop
daa
insb
mov
mov
jae
xchg
cmp
into
stos
and
xor
inc
int3
jb
sbb
jp
in
ss
add
adc
jb
and
and
mov
adc
mov
dec
notl
fldenv
insb
inc
and
dec
fistpl
clc
inc
xor
aam
mov
push
out
cwtl
xchg
jne
cmp
jae
jae
sbb
fists
adc
outsb
out
mov
add
push
mov
and
mov
js
push
lods
out
aad
dec
adc
imul
and
fs
ss
test
jg
clc
xor
bound
pop
xchg
pop
repz
ret
out
and
pushl
testl
pop
inc
in
xchg
inc
aaa
xchg
jg
dec
mov
fldenv
sarb
sbb
pop
insb
jae
mov
adc
sarl
mov
dec
jle
adc
insb
gs
xchg
testb
mov
add
jno
ljmp
loopnew
adcb
inc
outsl
cmpsb
pop
je
sbb
fcompl
push
pop
jnp
push
mov
call
aas
mov
fxch
rclb
popa
pusha
jl
mov
mov
cmp
cli
fucomp
cmpsl
data16
and
test
fwait
mov
adc
cs
push
or
mov
xchg
daa
nop
stos
pushf
pop
jo
lret
addr16
push
lret
out
movsl
repnz
ljmp
into
xor
inc
insl
cmpb
sbb
push
ret
jmp
sub
dec
cmp
hlt
push
xlat
cmp
pop
sub
mov
add
push
call
or
fiaddl
lods
clc
mov
fwait
cld
mov
pop
ss
mov
in
pusha
lds
pop
mov
mov
je
cmp
nop
pop
hlt
or
push
cltd
pusha
xorl
js
push
inc
fidivrl
cltd
fwait
jmp
hlt
fs
xchg
mov
xor
push
mov
mov
lds
pop
leave
pushf
inc
mov
enter
sub
inc
jle
lcall
xchg
xchg
push
int3
jns
mov
ret
stc
cmc
lods
push
pop
lock
ss
pop
lret
pop
pop
add
jecxz
rcl
push
add
dec
in
jmp
cmc
rorl
cmp
xor
fdivrs
lret
aad
movsb
pop
dec
jo
push
mov
scas
and
push
lea
adc
mov
ss
frstor
lcall
pop
mov
sbb
mov
stos
bound
scas
mov
mov
lods
fisubs
sbb
test
pop
add
cld
jmp
ss
gs
add
push
xor
sbb
rcrb
push
jne
and
inc
jno
addl
das
int
outsl
addr16
and
cmp
popf
xchg
sub
sbb
nop
xor
xchg
xor
mov
test
das
xchg
xchg
daa
test
in
int3
ja
dec
mov
imul
jecxz
adcb
cwtl
adcl
cs
push
fsubs
adc
cmp
or
sub
cli
clc
out
push
fimull
pop
sub
adc
sub
fucom
inc
aas
cmp
pop
setnp
inc
xchg
hlt
addr16
add
test
pusha
idiv
test
fsubp
sub
out
pop
cmp
sbb
add
shl
test
arpl
in
xor
jle
push
dec
cmp
popf
int3
inc
or
add
adc
inc
int3
inc
pop
clc
sub
lret
cld
gs
lcall
or
sub
jp
daa
fsubs
push
add
sub
add
fistps
lcall
cmp
popa
clc
cltd
dec
push
cwtl
shlb
fwait
je
jge
out
xchg
fwait
lcall
mov
nop
sbb
xchg
sar
pop
push
bound
ljmp
push
fdivp
sahf
lds
sub
add
dec
in
cmp
push
jg
gs
jae
xor
cwtl
cmpl
push
push
imul
sbb
add
stc
in
pop
outsl
aas
ljmp
repz
cmpsl
sbb
das
jno
fisubl
fs
pop
cmc
loopne
mov
mov
bound
pop
mov
imul
push
sub
int3
pusha
pop
xchg
clc
xchg
outsb
pop
out
into
inc
pop
jmp
out
nop
jbe
inc
or
fdivrl
or
xor
mov
mov
ds
cmp
cld
out
xor
add
dec
xor
pop
sbb
push
sbb
stos
jno
fistpl
pop
arpl
cmp
jnp
mov
fs
cmp
in
test
xchg
pop
sti
and
jnp
stos
xchg
dec
or
xor
dec
dec
shlb
xchg
mov
mov
adc
pushl
xchg
divb
jg
xchg
pop
jp
out
insl
outsb
cmpxchg
dec
sbb
hlt
mov
xor
stos
ret
jmp
jae
mov
test
mov
mov
jmp
xor
scas
dec
rorb
add
push
adc
fldcw
mov
iret
pop
std
out
or
pop
mov
jle
push
test
pushl
imul
loope
stos
xchg
adc
xchg
inc
pusha
sbb
imul
push
int
fnstcw
roll
rorl
movsl
mov
mov
xlat
mov
rorb
pop
shr
scas
jmp
daa
movsb
inc
cmp
imulb
aam
ficoms
cmpsb
push
ja
push
rorl
jmp
cmpsl
imul
jg
cltd
test
ret
inc
sti
jbe
adc
adc
pop
xchg
sub
stos
jmp
cmpsl
xchg
stc
jo
or
bound
sbb
leave
jl
mov
dec
ret
sbb
jmp
cmp
cmp
adc
cmp
aas
xchg
clc
mov
sub
mov
jge
push
jne
out
cmc
and
scas
pop
dec
pop
lods
test
insl
dec
or
es
sub
mov
or
ret
adc
mov
adc
das
fdivl
push
lods
xchg
dec
mov
data16
pop
rcrl
js
std
test
test
cmp
test
cmpsl
adc
sub
out
pushf
mov
push
lahf
dec
shl
jo
sbb
in
pop
and
movsl
shll
mov
dec
jmp
es
out
mov
jae
sbb
add
push
out
pop
stc
into
aas
clc
fcoml
in
ja
xor
push
adcb
scas
push
insb
sbb
sub
mov
sub
xor
xchg
ss
daa
outsl
add
adc
xchg
insb
aas
xchg
jns
pop
and
dec
test
inc
cld
xor
sahf
or
cmp
mov
xchg
vpackssdw
sahf
dec
jp
push
lock
data16
iret
adc
fwait
cmp
pop
imul
push
adc
pop
sub
sub
scas
pop
int
xchg
rcll
add
xor
pusha
cmp
cwtl
mov
mov
xor
cld
adc
sub
add
nop
xchg
leave
ret
pop
xchg
test
and
cmpsb
in
cmp
jno
mov
xor
inc
test
pop
xorb
inc
test
push
repz
cs
int
mov
inc
sar
imul
arpl
xchg
mov
dec
fsubl
lds
test
mov
pop
mov
jl
mov
scas
out
mov
fisttpl
repnz
mov
test
cld
inc
or
fmull
mov
cmp
data16
fs
xlat
sbbl
mov
add
mov
pop
dec
and
les
dec
jo
cwtl
mov
fcmovu
mov
xor
hlt
inc
int
dec
out
pop
xchg
mov
add
hlt
adc
out
clc
mov
fwait
push
out
push
xor
shlb
jnp
loopne
fildll
adcl
cmp
decl
mov
lds
test
fadd
adc
sti
or
sbb
inc
hlt
xorl
mov
or
push
pop
jae
sub
lock
mov
lret
lods
xor
ret
sbbb
push
insb
ficompl
out
ret
jecxz
lea
jge
xor
push
mov
cmc
add
xor
mov
fmuls
stos
jnp
dec
cmp
ja
ja
outsl
pop
fiadds
loop
cld
jecxz
sbb
insl
mov
xchg
dec
sbb
popa
xchg
nop
iret
lods
lds
mov
mov
xor
aam
mov
cmp
pop
push
or
test
sarl
leave
notl
inc
add
js
mov
fs
sub
push
jg
test
and
decl
scas
loopne
pop
repnz
fistpll
in
jno
aad
pop
cli
lds
pop
mov
add
xchg
je
mov
lret
sbb
pop
popf
adc
adc
mov
pop
scas
mov
into
dec
push
arpl
cs
sarb
dec
jne
js
nop
pop
aam
push
rorb
adc
sub
xchg
ret
xor
mov
icebp
lea
fwait
cmpsl
jg
add
scas
jge
cmp
dec
xchg
test
jge
orb
inc
out
data16
xchg
add
cmp
scas
and
lods
cli
mov
jle
mov
es
cli
xchg
loop
dec
imul
push
enter
adc
mov
fisubrs
push
rcrl
adc
jmp
jecxz
mov
push
push
es
adc
add
fdiv
xor
mov
lret
push
add
ds
sti
aad
cmpl
cs
push
mov
cmp
adc
add
dec
stos
arpl
jb
push
das
out
adc
sub
shlb
mov
xchg
mov
ss
out
jl
jno
dec
cmp
and
mov
xor
mov
or
xorl
movsb
pop
cmp
test
sbb
arpl
xchg
imul
loop
cmp
shrb
aam
push
jno
jo
sbb
pop
leave
clc
cmp
fdivrs
loop
movb
sub
fisttps
push
loope
sub
sbb
xchg
push
rcrb
shrl
out
shrl
mov
dec
jne
fstpt
inc
arpl
cmp
sbb
mov
pusha
sbb
lds
push
sbb
mov
rcll
adc
pop
mov
jae
aam
pop
andb
out
inc
ja
daa
and
out
and
lcall
fsubrs
loopne
fisubs
and
cmp
dec
fcomps
mov
sub
sti
pop
pop
cmc
add
test
aam
arpl
and
test
cmp
repz
notl
xor
jns
and
xchg
xor
sbb
sahf
mov
iret
out
mov
cmp
mov
mov
or
mov
jae
mov
pop
pop
inc
jle
add
mov
jl
jecxz
rolb
mov
adc
jl
inc
cltd
inc
add
push
jo
or
lods
mov
aas
inc
rcrb
cs
sub
aaa
jo
xchg
clc
push
ret
xlat
stos
push
adc
stc
and
xor
loopne
rorb
leave
mov
scas
add
jns
shrl
or
inc
push
xchg
ret
mov
dec
outsb
mov
aaa
add
push
mov
push
adc
pushf
das
iret
xor
pop
pop
addb
cmp
imul
in
test
mov
loopne
jb
and
rclb
inc
test
xor
insl
lea
std
push
xchg
mov
add
ja
inc
addb
sub
push
cmpsl
add
stc
nop
stos
and
xchg
and
inc
jbe
dec
nop
dec
rcr
mov
movsl
leave
push
push
fs
add
and
addr16
cld
sahf
frstor
or
ret
adc
int3
icebp
mov
rolb
iret
mov
imul
lock
push
pop
int
subl
jno
mov
jmp
jb
addr16
les
int3
insb
rcrl
imul
lret
decl
xor
and
cmp
ljmp
imul
ds
loop
pop
pop
adc
scas
or
mov
shl
jo
lds
xchg
dec
sbb
add
imul
add
loop,pt
loope
dec
dec
inc
stos
mov
xor
or
adc
pop
out
push
mov
movsl
test
roll
xchg
jp
scas
jg
or
fldenv
loopne
aaa
das
dec
rcll
inc
inc
xorb
and
fnstsw
hlt
xchg
fidivs
outsb
inc
sahf
cmpsl
dec
mov
push
push
das
sub
pop
xor
pop
pop
aad
push
lcall
dec
inc
push
testb
test
xchg
inc
and
lret
push
mov
int3
leave
xchg
pusha
push
cld
xor
rcrl
inc
add
and
cmp
idiv
test
adc
sti
push
daa
mov
inc
cmp
inc
out
sub
xor
in
jns
cmp
adc
xlat
or
lds
mov
aaa
test
jne
lcall
mov
aad
cmpsl
stc
mov
loop
test
mov
xorl
in
out
movsb
mov
xchg
in
enter
repnz
es
out
push
cltd
sbb
xor
inc
lock
out
mov
add
mov
cmpsl
xor
adcb
and
cmp
aas
lock
out
dec
push
sub
sbb
flds
outsb
jb
or
clc
out
push
jmp
loope
call
pop
xchg
inc
jp
xchg
pop
adc
or
popa
xor
sarl
push
cmpsb
testb
stos
push
cmp
push
dec
in
cmpsb
jecxz
aas
xchg
rcll
fwait
out
adcl
sbb
mov
aam
int
cmc
repz
and
shll
jg
bound
mov
pusha
adc
inc
push
or
sbbb
mov
les
dec
lods
out
dec
inc
cmp
xor
aas
insl
xor
ret
cltd
inc
lcall
insb
outsb
cwtl
cwtl
add
xchg
push
aaa
adcb
jb
negl
mov
or
mov
adc
js
mul
jb
mov
dec
and
add
mov
ds
movsl
mov
jle
cltd
adc
test
xchg
xchg
dec
sti
jno
aaa
ret
test
lret
mov
inc
nop
dec
add
pop
mov
dec
xlat
shl
dec
dec
sbb
fs
mov
push
sar
popf
je
jnp
lods
repnz
and
andb
xchg
mov
mov
and
push
pop
and
pop
pushf
mov
imul
xor
xor
add
mov
mov
inc
jecxz
cmp
mov
int3
jp
push
sub
leave
out
mov
lds
shrb
mov
jno
dec
mov
mov
xchg
notl
test
pop
mov
xchg
push
gs
mov
sub
aaa
inc
in
dec
or
inc
stos
or
cmc
movsb
aas
cmpl
mov
aam
bnd
stos
pushf
rol
pop
xchg
mov
xor
cmp
sbb
lods
mov
inc
add
cmc
push
xor
mov
sti
push
fdivs
insb
inc
scas
pushl
mov
and
into
push
sbb
imull
aam
sbb
or
mov
dec
pop
test
mov
ds
xchg
shrl
pop
sahf
stos
outsb
daa
adc
pop
sbb
pusha
or
mov
popf
and
inc
inc
sub
rcrl
pop
fcmove
pop
xchg
push
jp
cs
and
mov
shrb
mov
jae
mov
xchg
gs
cmc
push
and
or
and
aad
cs
ftst
sub
clc
or
mov
cmp
add
js
mov
cmpsl
lret
int
mov
xchg
lods
jno
js
pop
add
adc
push
mov
in
sbb
add
fwait
into
fidivrl
dec
pop
cmova
or
rolb
jmp
add
loopne
testb
add
inc
cmc
xlat
loopne
ja
les
push
pushf
add
insb
push
jnp
mov
xor
or
and
lock
cmc
cli
cmp
pop
or
je
jp
pop
lahf
inc
push
cmpsl
int
dec
xchg
in
vpcmpeqw
imul
pop
or
jns
fidivs
sbb
jp
int
mov
mov
cmp
cmp
jno
gs
clc
pop
shlb
and
pop
mov
push
adc
aad
lret
jb
shlb
cmp
xchg
divl
cmp
jmp
inc
divb
std
sti
or
cmp
mov
mov
pop
mov
push
inc
sub
jb
inc
loop
mov
sbb
test
jb
das
aas
inc
adc
or
sbb
test
mov
adc
add
gs
into
adc
cld
shr
jno
das
rorl
scas
aam
inc
lret
mov
stos
pop
jno
aad
data16
shl
cld
mov
xchg
out
arpl
ds
inc
loop
imul
add
mov
mov
mov
imul
mov
jge
xchg
ret
and
add
sbb
push
pushf
adc
aad
mov
and
pushf
adc
sahf
cli
xchg
cmpl
and
sub
cwtl
scas
jo
sar
pop
popa
jns
push
scas
scas
jmp
mov
call
and
jmp
daa
ja
pop
lcall
fldcw
push
xchg
xchg
movsl
jo
sub
xchg
out
adc
push
stos
push
cmp
scas
jbe
add
jecxz
or
sub
xchg
and
cwtl
das
stos
aam
jb
jl
pop
jbe
scas
dec
out
das
jb
adc
nop
xlat
lcall
sub
add
mov
stc
pop
or
nop
jge
or
enter
or
pop
and
mov
adc
push
lods
out
inc
pop
mov
test
add
popf
push
jae
call
loopew
pop
stos
pushl
testl
adc
mov
addr16
movsl
ficomps
lods
enter
scas
mov
and
fimull
inc
dec
dec
scas
lods
cltd
add
ret
add
rcll
stos
ja
arpl
mov
mov
popa
rcr
pop
mov
push
pop
push
xchg
std
test
rol
into
sahf
and
jmp
mov
adc
pushf
pop
out
push
in
or
fs
inc
mov
mov
pop
fsubrl
cmc
pop
pop
hlt
mov
xchg
push
sbb
xchg
jp
add
jp
aam
dec
cwtl
bound
icebp
mov
xchg
pop
fsubl
xchg
lret
imull
gs
gs
stc
ljmp
int3
sub
cmp
or
mov
jge
jg
scas
aam
sbb
iret
xchg
icebp
cmpsl
push
or
rcll
push
inc
in
add
test
jb
hlt
xchg
xlat
add
sti
insb
adc
xor
xchg
sbb
test
lahf
mov
push
dec
mov
add
adc
adc
dec
jnp
mov
daa
adc
mov
jecxz
add
push
cmc
mov
in
push
jmp
mov
aaa
cmpsl
in
xchg
xchg
cwtl
imul
lods
push
mov
xchg
addr16
adc
mov
iret
inc
push
adc
mov
jno
cmc
cmp
mov
lods
jb
in
mov
xchg
mov
jge
push
add
popa
add
lret
xor
push
jnp
push
pop
add
or
pop
inc
fnsave
test
leave
or
adc
and
or
imul
cmc
aam
pushl
push
mov
pop
lock
repnz
ja
pop
dec
enter
outsl
add
movsb
std
pusha
add
lea
mov
adc
int
shlb
stos
xor
into
shll
fcom
add
aad
xchg
pop
adc
outsb
pop
pop
pop
ja
shll
lret
shlb
push
dec
dec
push
pop
xchg
aad
add
aaa
ljmp
popa
aaa
lahf
inc
cmpsl
cs
sbb
out
popf
mov
xchg
add
pushf
arpl
adc
cmp
mov
cltd
adcb
xchg
add
sbb
push
shlb
lods
fstl
xchg
inc
popa
jne
out
xor
dec
push
inc
inc
add
xchg
or
adc
dec
pop
jmp
sbb
shll
arpl
rorb
xor
push
mov
mov
adc
mov
or
add
and
adc
outsb
push
nop
mov
xchg
loop
cld
add
ljmp
adc
jbe
lret
inc
add
mov
inc
xchg
or
pop
xor
popf
popf
or
lret
adc
or
in
mov
jb
cmc
cmpsb
out
sbb
je
xchg
jge
cmp
imul
sub
mov
dec
jno
xchg
mov
mov
pop
sub
xor
cs
scas
lea
into
cmc
dec
cld
jmp
aam
movsl
or
mov
nop
xchg
int
pop
nop
int3
dec
into
mov
push
adc
and
mov
ljmp
test
repz
sbb
sar
push
xchg
or
mov
pop
push
sbb
sti
lcall
stc
push
or
jge
sbb
or
dec
hlt
aaa
js
ret
xor
leave
mov
ds
ja
inc
inc
xor
cmpsb
enter
sbb
pop
mov
cmp
xor
cmp
pusha
or
jo
xchg
push
or
xlat
jb
mov
insb
stos
ret
cmp
mov
movsb
pop
jle
daa
test
sarb
push
pop
out
dec
pushf
pop
dec
cmpsl
pop
push
sub
fcoms
and
loop
dec
scas
push
nop
xlat
shll
jecxz
push
cld
sub
inc
sub
pusha
cmpb
sub
orb
mov
or
in
mov
out
aaa
ljmp
cmp
or
pop
sub
mov
sbb
js
popf
lods
jns
lahf
rcr
jb
lcall
icebp
inc
jl
cmp
jns
add
mov
mov
and
fildl
insb
nop
out
cmp
out
mov
sti
out
hlt
aam
stos
fwait
and
pop
xchg
sub
lahf
and
mov
push
repz
cltd
push
bound
pop
jmp
sbb
std
sbb
jmp
adcb
push
mov
mov
mov
xlat
arpl
addr16
clc
in
lahf
jo
xor
add
cmp
mov
das
stos
sub
add
jmp
mov
stos
inc
lea
mov
xor
xchg
sbb
push
insb
pop
add
data16
je
xchg
int3
jmp
jmp
jo
xor
cld
push
pop
sarb
jb
mov
lcall
or
int3
not
adc
xchg
xchg
fs
leave
sbb
ficompl
push
rcrb
push
xchg
xor
sub
jne
add
adc
xor
mov
les
movsl
jb
or
sbb
std
mov
scas
outsb
jle
popf
sbb
mov
sbb
xor
xor
pop
cltd
cmp
test
lds
xchg
sbb
lea
incl
call
js
addr16
loopne
mov
push
mov
call
mov
je
add
add
inc
rcl
mov
sub
fcompl
shll
inc
cwtl
inc
clc
out
or
xor
pop
push
mov
fs
stc
push
inc
xor
je
pop
or
jmp
or
cmpsl
push
or
sahf
push
and
shll
in
mov
outsb
push
fdivrl
sbb
dec
jo
enter
pop
insl
xchg
pop
jl
in
adc
loopne
xor
push
lcall
xchg
vpmulhw
leave
sbb
inc
cmp
mov
cwtl
fsub
mov
xchg
push
cmc
leave
push
xor
dec
jge
sub
lret
pop
mov
repz
and
movsl
jle
insl
xchg
mov
mov
inc
int
stos
sub
out
into
sub
pop
xchg
pop
xchg
or
pop
jae
inc
cmpsl
xchg
dec
mov
rcrl
rclb
shrl
inc
mov
fimull
xor
out
or
sti
cmp
cli
and
fucom
and
or
test
push
testb
out
or
xchg
mov
push
aas
mov
addr16
fists
fstpt
sub
and
lds
idiv
push
cmp
fs
xor
jnp
mov
mov
mov
or
jb
aas
lds
fldenv
das
loopne
cmp
adc
lea
jne
or
add
daa
std
dec
mov
ljmp
sbb
shlb
in
cmpb
test
or
inc
xor
mov
mov
orb
cltd
inc
mov
mov
or
add
or
mov
inc
push
movsl
cmpsb
fdivs
out
cmc
or
cmp
mov
add
dec
mov
aaa
jae
sub
jns
arpl
dec
jle
loop
out
cmp
lcall
ljmp
push
fstl
ds
xchg
sbb
lods
jp
mov
sub
outsb
xor
pop
sarl
jne
stos
test
sbb
dec
in
inc
fcompl
lcall
jmp
filds
mov
test
lret
add
xor
test
xor
mov
push
and
inc
xor
ret
js
sub
sarl
dec
cmp
sbb
rcl
shrb
mov
imul
jle
stos
add
or
daa
inc
xchg
sahf
in
pop
push
lret
sahf
xchg
inc
lea
leave
loopne
ljmp
lock
mov
cmp
jo
xor
sub
dec
sbbb
push
adc
cmpl
pop
add
mov
pop
sub
dec
push
pop
daa
outsl
sbb
push
sub
jg
sbb
imul
add
rcll
sbb
popf
out
xor
sub
imul
pusha
mov
aam
popaw
xchg
aam
jg
clc
cmp
push
fiaddl
aas
dec
cwtl
out
dec
lret
ljmp
iret
mov
sbb
decl
je
test
mov
jb
push
enter
adc
jno
movsb
jmp
dec
mov
dec
cmpsb
popf
gs
in
pusha
imull
scas
or
xchg
cmc
and
loop
add
rorb
pushf
mov
dec
popl
mov
push
scas
push
shlb
mov
mov
shrb
pushf
jb
mov
jg
xor
xchg
jg
sti
xchg
inc
mov
cmpsl
jmp
cmpsl
int
sbb
out
fistpl
pop
ds
mov
cmp
fldl
fs
push
fimuls
jbe
fdivs
mov
test
mov
lret
jle
mov
loopne
test
cmpsb
or
cmp
rorb
bound
cwtl
mov
mov
lea
push
sub
movl
imul
gs
ret
pop
ffreep
cmp
sahf
push
cmc
and
cwtl
sub
sub
ret
imul
ja
bound
mov
es
mov
push
orb
ja
push
push
pushf
pushl
jp
mov
hlt
mov
and
cmp
jl
dec
ss
xchg
and
add
push
out
std
and
bound
sbb
sub
mov
fs
adc
dec
xor
dec
jno
imul
clc
sbb
cmpsl
lret
inc
scas
pop
popa
xor
test
cmp
fwait
xchg
jo
in
and
xchg
inc
cmp
mov
add
mov
and
cmc
ret
repnz
negl
jns
and
cmpsl
test
stos
fdivs
shr
jns
jbe
and
hlt
loope
dec
or
mov
and
and
mov
mov
pop
mov
jmp
and
sbb
xchg
jno
pop
sub
test
inc
jno
daa
add
loop
add
sub
dec
jg
add
and
outsl
mov
scas
sbb
add
mov
test
ret
scas
push
fsubrs
dec
jae
insl
jno
mov
mov
in
jnp
xchg
push
pop
aam
sbb
and
imul
inc
or
add
cld
mov
sbb
cmp
clc
mov
ret
xchg
or
jge
xchg
ss
xchg
push
adc
cmp
call
jb
in
jbe
xor
sbb
cmp
sbb
pop
cwtl
mov
cmc
mov
xchg
xor
in
out
and
pop
gs
push
popf
lds
or
dec
test
lds
ja
std
cmp
push
es
and
cmpsb
and
jl
aas
cs
out
sub
push
bound
push
cmp
into
or
callw
sub
pop
lods
add
xchg
mov
scas
pop
arpl
add
mov
push
and
or
loope
adc
adc
adc
filds
sub
lds
pop
stos
xor
xchg
and
aad
xchg
mov
rorl
out
mov
sbb
xor
dec
test
gs
or
inc
cmc
test
mov
pop
jnp
add
js
pushf
dec
xchg
pop
adc
imul
add
add
xor
hlt
scas
mov
rorl
popa
jbe
mov
xor
add
jge
jbe
shll
insl
cmpb
cmpl
or
cmp
sti
in
and
testb
mov
and
shll
and
sub
fidivrl
pop
int3
pushl
js
aad
pop
push
xor
ljmp
xchg
push
mov
xor
xor
or
bound
or
adc
push
dec
xor
xchg
mov
jge
inc
lods
scas
adc
mov
gs
push
sub
lock
lea
gs
mov
cmp
jle
jns
subl
or
ficompl
push
mov
mov
js
mov
jmp
dec
notl
cld
push
jg
in
fstl
xchg
or
out
iret
pop
jmp
xlat
daa
rsqrtps
dec
arpl
mov
mov
aaa
stos
sar
jno
stos
cmp
aad
jle
pop
scas
ficomps
insl
mov
sbb
ss
jge
push
jecxz
push
loopne
lea
stos
loop
xor
dec
stos
mov
imul
push
sbb
ljmp
push
rcrb
mov
add
pop
out
ds
sbb
aam
fistpll
outsl
xor
mov
xor
sbb
pop
dec
jge
add
push
add
adc
xor
data16
xchg
mov
lret
push
mov
mov
cltd
or
fisttpll
test
dec
sbbl
repz
cmp
out
movsb
aas
or
pop
mov
sbb
cwtl
shll
lret
mov
push
sub
jmp
enter
adc
fimull
lea
xchg
sub
andl
cmp
pusha
js
xor
cmp
andb
sbb
call
call
push
cmpsl
push
xchg
mov
shl
push
dec
repnz
mov
sub
lea
xor
inc
inc
jns
scas
pop
out
push
shlb
dec
lret
dec
dec
push
mov
cmp
mov
sub
mov
stc
dec
loop
dec
fnstcw
sarb
sub
dec
shl
cli
rcr
int3
jecxz
pop
xchg
inc
cmp
popf
xor
lods
mov
call
adc
lea
lods
js
xchg
cmp
imul
mov
int3
mov
cmc
push
push
out
dec
cltd
inc
mov
cmp
cmp
jp
cmc
shr
jns
inc
clc
mov
jae
mov
les
dec
adc
sbb
mov
cmp
xchg
arpl
mov
jno,pn
push
cmc
cwtl
cmpsl
adc
es
push
in
ret
cmc
stos
std
and
jmp
or
lahf
adc
push
mov
pusha
movsl
jmp
dec
subb
sbb
shll
cmp
and
cmc
fbstp
cli
cltd
inc
inc
imul
push
pop
pop
push
sub
bound
test
adc
fistpll
push
mov
and
inc
fisubrs
insb
data16
out
out
movl
xchg
xchg
jae
jns
cmpsb
movsl
adc
mov
int
out
fdivl
data16
cmp
mov
js
mov
inc
cmp
lahf
sub
mov
scas
mov
add
mov
pop
jne
push
test
sahf
das
mov
push
cli
xchg
or
jbe
movsb
adc
imul
dec
mov
fisttpl
inc
sub
int3
fdivrl
ja
mov
sub
adc
xor
jbe
imul
fdivs
mov
adc
insb
cli
mov
or
sbb
test
in
push
hlt
js
xchg
je
dec
fidivrs
es
mov
mov
push
jb
fdiv
push
push
mov
rcll
and
lahf
pop
std
cs
cmp
xlat
shll
movsb
push
push
nop
decl
dec
insl
add
ret
inc
xchg
adc
test
or
idivb
mov
cmpsl
mov
lahf
pop
mov
aas
outsb
out
outsb
mov
dec
cli
cmp
mov
dec
orl
pop
inc
jge
sbb
in
inc
push
enter
sbb
push
xor
push
mov
add
mov
mov
ljmp
jl
push
lods
sti
int3
jle
xchg
popf
mov
dec
pop
lods
rcl
lea
pop
fs
popa
daa
movhps
lods
call
or
es
in
daa
sbb
icebp
sbb
into
push
add
jge
inc
mov
add
sbb
sbb
and
sahf
jmp
jbe
and
xor
mov
daa
stos
dec
pop
adc
fdivrl
xchg
or
int
into
push
scas
push
test
sahf
cmpsb
shll
call
push
out
dec
jne
mov
mov
inc
or
and
xchg
bound
or
and
xchg
loop
out
test
adc
lcall
stos
dec
mov
and
aam
pop
inc
adc
scas
cwtl
dec
lods
sti
add
add
dec
clc
mov
cmp
xchg
cmp
rolb
jge
mov
sub
sbb
mov
xstore-rng
cmpsl
ret
push
jne
mov
xor
xchg
mov
fs
fisttpl
in
pop
cmpsl
jge
xchg
shlb
inc
outsb
test
iret
push
fists
repz
loope
xor
mov
dec
loopne
idiv
sahf
bndstx
adc
xlat
lea
ret
and
dec
mov
pop
js
test
outsl
jno
loopne
in
cltd
call
cmpsl
or
jno
into
aaa
mov
adc
leave
jno
bound
push
push
stc
adc
push
cmpsl
mov
movb
push
xchg
dec
dec
dec
jne
sub
outsb
pop
mov
sub
xchg
pop
mov
or
xchg
icebp
mov
scas
fcmove
mov
cli
pop
rorl
mov
sbb
punpcklbw
ret
jns
mov
cld
mov
addr16
xchg
push
out
stc
hlt
dec
jle
push
repz
test
jl
cmp
and
sbb
sbb
loope
inc
test
out
loope
mov
sbb
psllw
lods
cmpsb
cmp
cmpsl
fdivrl
in
mov
test
es
cs
push
mov
mov
sub
cs
mov
mov
leave
dec
adc
ja
lahf
inc
repz
mov
sbb
adc
ss
das
mov
jmp
jge
pop
pop
out
jo
jnp
popa
inc
xchg
popa
insl
test
stos
lods
cmpsb
lret
pop
sbbb
add
shll
sub
mov
pop
in
xor
jle
pop
mov
jno
mov
cmp
nopl
pushf
jp
xchg
cmc
cltd
add
and
cmp
cltd
or
mov
dec
call
adc
aad
ret
sbb
pop
pop
inc
mov
test
ffree
sub
lret
ja
pop
mov
jecxz
and
push
in
xchg
pop
mov
inc
scas
cmpsb
dec
fwait
xchg
jo
cs
cltd
aam
add
aas
aas
lock
dec
mov
jg
out
scas
aas
xchg
inc
loopne
xor
in
xor
push
cmp
std
mov
sbb
stos
mov
stos
pop
mov
dec
push
mov
int3
js
loope
mov
jns
dec
mov
sahf
mov
test
loop
sbb
arpl
imul
push
xor
test
inc
sahf
and
cmpsl
push
mov
das
in
fld
arpl
rol
int3
sub
shll
sub
js
cmp
mov
ja
aam
jmp
lret
fs
pop
push
sub
call
insl
xchg
lret
test
jmp
stc
cmp
ja
iret
cmp
jnp
add
push
out
push
or
jge
or
mov
cmp
dec
imul
jne
fldenv
push
loopne
cmpsb
xchg
fiadds
cmpsb
sub
mov
out
cmp
popa
inc
in
js
jp
hlt
jmp
or
repz
ret
push
mov
addr16
pop
movsb
cli
ljmp
xchg
out
shlb
jp
and
jmp
adc
aaa
push
add
ficoms
mov
mov
insb
ret
push
and
test
mov
pop
and
push
enter
std
add
icebp
inc
mov
loopne
ljmp
pxor
xlat
mov
hlt
into
sbb
pop
jmp
mov
add
shrb
cs
sahf
jns
mov
jge
nop
sti
loope
inc
dec
jo
mov
xor
call
dec
aas
inc
add
xor
testb
adc
inc
xor
jle
mov
xchg
sbb
xlat
xor
stc
cmp
lods
stos
mov
xchg
pusha
pop
arpl
je
mov
dec
rcr
xor
and
mov
pop
fists
xchg
js
mov
xor
inc
or
mov
sar
xchg
sahf
jmp
ret
fisubrs
repz
add
andl
test
mov
and
pop
repz
and
mull
sti
test
adc
in
sub
jae
dec
or
jbe
mov
insb
rcrb
outsb
mov
xor
stos
adc
ja
sub
inc
fidivs
push
jns
xor
adc
data16
scas
dec
inc
jg
into
ficomps
sbb
ret
xor
cmp
push
cmpsb
in
mov
push
fsubl
int3
sbb
lds
out
int
ja
push
cwtl
pushf
mov
or
dec
push
inc
xor
int3
or
fs
sbbb
xchg
xchg
arpl
adc
cltd
fs
es
cmpsb
iret
pop
ret
or
popf
jns
aas
sub
xchg
push
push
jbe
inc
jns
popf
add
cld
lods
or
pop
dec
fdivrs
xchg
fnstenv
mov
pop
nop
lods
fldt
aam
or
scas
adc
aaa
xor
mov
mov
scas
mov
lds
fisubrs
dec
mov
xchg
mov
and
pop
mov
hlt
shl
xlat
cmp
movsb
mov
mov
jo
ljmp
inc
xor
in
out
add
sub
mov
push
xchg
jp
aam
xchg
push
xor
cmp
stos
dec
fidivs
mov
mov
lret
pop
and
mov
push
xlat
pop
movsb
fwait
xchg
je
inc
xchg
jl
imul
adc
movsb
fsubrl
mov
push
shl
stos
xchg
add
push
pop
pusha
dec
xchg
dec
cmpsl
xor
push
push
dec
daa
xchg
mov
sub
dec
cwtl
mov
xor
add
shr
push
add
pop
gs
cmp
jecxz
jmp
push
pop
add
or
lock
stos
sbb
mov
cli
negb
mov
inc
xchg
add
std
cmp
roll
cmp
push
sub
adc
and
cmpsl
lahf
aad
iret
pop
adc
mov
gs
mov
imul
and
push
inc
sub
in
and
imul
fwait
or
stc
pop
xchg
popa
push
das
add
sub
test
enter
imull
push
mov
lcall
and
out
daa
fcmovne
fnstenv
push
xor
cmpsb
push
jmp
loope
enter
popf
sub
scas
jge
mov
pop
push
jmp
outsb
mov
jne
leave
ficompl
ret
adc
jno
inc
popa
push
push
test
mov
daa
call
test
sbb
shll
roll
stos
sbb
jp
add
sahf
arpl
adc
fs
jns
pop
adc
shlb
push
test
adcl
add
push
push
cli
call
aas
mov
bound
xchg
add
add
xchg
ds
push
adc
mov
in
lret
or
cmp
pop
sahf
jae
insl
lods
enter
and
out
les
pop
test
pusha
mov
addr16
cs
push
addb
inc
and
sbb
loopne
jne
pushf
mov
adc
in
pop
cmp
leave
loop
cmp
mov
or
mov
aas
sub
mov
xchg
xchg
dec
push
mov
push
out
and
jl
push
xor
dec
outsb
add
xor
xor
push
mov
xor
sbb
aam
cmc
xor
mov
in
inc
cmpsb
xor
ds
push
lea
aaa
sub
mov
shll
mov
fucomi
sbb
push
mov
sub
std
sbb
js
movsl
dec
mov
cmp
pop
sbbb
xchg
lahf
jecxz
inc
ret
and
loope
and
sbb
insb
lcall
mov
inc
aas
add
push
mov
xchg
push
cmp
scas
stc
mov
pop
mov
test
add
jp
or
push
jns
inc
pop
or
sub
sub
jge
inc
mov
enter
das
imul
and
pop
pop
outsl
push
jle
fwait
cltd
enter
mov
xchg
loopne
dec
faddp
xchg
stos
mov
mov
mov
aad
xor
jns
dec
cmp
fnstsw
jl
or
aam
dec
iret
lret
cld
push
inc
pop
lret
ret
mov
aad
fwait
dec
or
add
add
fidivl
and
xor
sbb
mov
bound
aas
int
lea
pop
sbb
fwait
imul
xchg
mov
dec
cmc
outsl
fstl
rcll
pop
mov
push
mov
gs
stc
mov
inc
int3
cmp
mov
push
mov
xchg
popa
jns
movups
pushl
paddsb
lds
mov
in
xchg
pop
mov
sbb
sbb
fisubl
dec
lret
inc
orl
fnsave
push
test
lock
ret
sbb
addl
clc
sbb
movsb
lds
test
mov
stc
mov
test
testl
repz
jbe
addr16
mov
icebp
jnp
rcrl
test
pop
xchg
out
cmp
or
aaa
fstps
inc
jmp
test
ret
es
nop
imulb
scas
clc
lds
xchg
nop
dec
jge
mov
lds
mov
adc
inc
bound
jg
xor
jne
outsl
dec
outsl
adc
fistpll
mov
shll
jbe
idivw
lret
xor
in
movsl
cmpsb
pop
and
shrl
das
push
mov
inc
test
loopne
inc
mov
adc
xchg
push
cs
push
jge
rcl
pushf
and
aad
jbe
lcall
mov
push
add
je
outsb
or
out
pop
sar
pusha
and
pop
sarb
cmp
cmpsl
dec
adc
xor
jne
ss
pusha
and
js
lock
outsl
fdivr
cmp
xchg
mov
icebp
sbb
mov
pushf
clc
mov
or
jg
push
in
mov
idiv
sarb
imull
push
mov
mov
cmp
hlt
icebp
loop
mov
push
in
push
enter
xor
mov
aam
jmp
imul
mov
in
xchg
out
sub
fbstp
xorb
cmp
xor
jne
in
dec
div
hlt
imul
and
xchg
mov
leave
into
push
movb
ficomps
nop
mov
sub
js
fildll
ljmp
shlb
divl
icebp
es
popf
repz
and
xchg
gs
fisttpl
std
mov
sahf
shll
fnstenv
jge
add
push
imul
andb
movsb
and
fcomip
cmp
inc
or
add
xchg
jecxz
fcoms
dec
fsubrp
shrb
and
jne
dec
push
repnz
pop
fwait
pop
fucomp
cmp
aad
frstor
stos
or
mov
in
cs
repz
jge
lds
push
xchg
mov
sbb
inc
ds
outsb
aaa
mov
dec
lcall
jb
sbb
sbbl
iret
push
in
xchg
jg
sub
cmp
mov
mov
xchg
push
stos
aaa
xchg
dec
fistps
fs
xchg
es
cs
sahf
xor
cmp
push
aad
xlat
mov
filds
movsl
leave
xor
add
jg
outsb
nop
shll
mov
xor
jg
aaa
testb
xor
rclb
je
dec
fwait
push
xchg
jecxz
out
mov
xorb
pop
clc
mov
fnstcw
mov
je
fwait
loope
repz
adc
pop
dec
adc
sub
int3
insb
imul
sbb
out
out
jne
push
mov
mov
fsts
xor
inc
movsl
lcall
les
pop
inc
inc
insb
dec
add
fmull
mov
push
mov
movsb
in
push
jl
lret
inc
ffreep
push
insb
test
mov
dec
data16
addr16
sub
add
jo
inc
pop
ss
loope
pushf
sbbb
and
aam
mov
sbb
pop
dec
inc
out
xlat
insl
loop
imul
mov
cltd
movsl
push
ret
sub
enter
outsl
jmp
call
jb
dec
xchg
pop
add
mov
out
loop
popf
mov
pop
xchg
scas
pop
std
mov
test
xor
push
sub
and
mov
jp
ja
and
cmp
sbb
outsl
inc
cli
and
lock
add
in
fistl
in
cli
das
mov
aam
fld
pop
inc
xchg
mov
lods
or
shrb
lahf
xchg
sub
shlb
mov
add
or
nop
xor
jbe
xor
aas
lret
stc
les
mov
inc
outsl
sbb
test
push
bound
pop
mov
test
fyl2xp1
jne
mov
jp
mov
cmpsb
xchg
mov
stos
gs
fs
movsl
xor
add
add
pop
sbbb
mov
aam
adc
dec
jmp
lock
push
mov
insl
sbb
rorl
popa
dec
adc
and
dec
ret
idivb
jb
imul
and
test
mov
sub
mov
sti
cld
in
add
sbb
jle
fisubrs
lret
dec
mov
mov
push
pop
dec
xor
out
aas
cmpsl
scas
call
in
cmp
sbb
ret
fwait
lahf
mov
mov
std
mov
pop
add
daa
pop
mov
sbb
loopne
ret
in
ret
fidivrs
or
dec
jb
lcall
nop
sbb
and
leave
addr16
jb
jo
scas
lods
add
dec
pause
in
test
mov
out
icebp
cmc
out
mov
icebp
js
leave
and
lods
push
push
nop
or
xlat
push
jb
add
push
sbb
push
hlt
adc
or
int3
sbb
stos
icebp
sar
cmp
fsubr
mov
mov
and
ficoml
ret
fadd
in
aam
jle
leave
mov
inc
ja
cwtl
sub
inc
xor
gs
push
push
dec
test
rolb
xlat
jns
nop
or
xchg
mov
jl
add
mov
push
faddl
shlb
dec
mov
js
sbb
inc
jmp
cmpsl
cmp
inc
scas
mov
out
cli
and
addr16
out
loopne
sbb
cmp
fdiv
sub
fstps
adc
pop
loope
cmp
fdiv
hlt
jnp
cmp
pop
loope
adc
cmc
jl
in
les
push
sbb
push
adc
jbe
mov
mov
jg
inc
iret
inc
loop
mov
je
lods
imul
int
adc
ds
testb
push
aaa
fisttpl
repnz
jns
push
repz
lods
ds
mov
icebp
dec
pop
jmp
pop
and
sub
adc
sub
lret
xorl
adc
das
lods
iret
sbb
mov
sti
inc
sbb
dec
and
sbb
add
and
repnz
das
xor
lret
jne
ficoml
push
mov
fistpll
imul
and
shlb
and
or
jle
fdiv
fsubl
xchg
and
adc
mov
jo
mov
mov
pushf
sbb
sub
js
mov
pop
or
or
and
ja
aaa
loop
dec
addl
popf
push
into
dec
xor
xorb
jbe
and
les
fldcw
mov
cltd
jecxz
mov
pop
jbe
add
dec
dec
push
movsb
adc
mov
dec
loop
mov
pusha
sub
push
into
mov
mov
hlt
out
mov
lret
dec
inc
mov
mov
repz
sbb
mov
mov
pop
jge
push
inc
sub
push
leave
testb
push
xchg
adc
push
sub
or
or
sub
int
xor
std
cmpsl
xchg
outsl
inc
call
jbe
cwtl
addr16
mov
xchg
popf
dec
push
leave
inc
pop
fsubp
rorl
arpl
mov
adc
xor
mov
or
hlt
xchg
mov
inc
cmove
leave
data16
pusha
jo
or
std
add
in
jl
std
adc
cmpb
loope
insl
pop
in
jl
adc
push
mov
iret
inc
ss
stc
insl
sub
inc
inc
ja
outsl
push
mov
repnz
lret
xor
lods
xchg
pop
jp
pop
jno
jg
push
fcompl
jle
pop
aas
pop
jmp
insl
xchg
inc
cmp
cwtl
scas
inc
push
xchg
jne
ljmp
xchg
mov
or
mul
push
adc
loop
outsl
sub
push
cmp
popa
icebp
pushf
test
inc
imul
fstl
gs
cmpsl
decb
test
sub
jl
or
xor
sub
neg
mov
pop
mov
enter
inc
or
cmp
xchg
adc
inc
jno
loopne
sub
xchg
or
xchg
movsb
jbe
push
shl
dec
mov
sub
mov
jecxz
aaa
test
mov
pop
dec
cmp
sbb
pop
pop
mov
leave
sbb
cmpsb
mov
outsl
mov
push
cmp
outsl
clc
inc
arpl
mov
icebp
jnp
hlt
clc
movsb
or
mov
mov
fcmovb
popa
jo
add
shrl
popf
repnz
test
faddl
mov
stos
aaa
shll
or
push
divl
addb
fcompl
lods
push
shlb
jno
in
mov
in
sbb
repnz
inc
data16
sub
ret
jo
jg
cmp
and
stos
ficoms
sub
pop
and
add
cmp
cmpsb
mov
mov
xor
adc
or
push
sub
push
sbb
mov
adc
adc
xchg
fwait
jg
fcmovbe
jg
push
cld
lahf
subl
push
pop
pop
fistps
jp
mov
and
push
inc
incb
data16
push
xor
push
and
cmp
mov
mov
je,pn
out
push
stos
inc
pop
cmp
mov
xorl
inc
pop
cld
les
pushf
into
xchg
dec
lea
push
movsb
xor
or
sbb
sti
mov
je
pop
adc
jmp
jno
in
or
out
push
add
loope
add
adc
dec
stos
add
adc
push
xor
push
pop
mov
add
scas
jb
jmp
jp
xchg
clc
cmp
mov
jno
adc
dec
push
push
daa
pop
scas
ret
sub
cmp
insb
push
xchg
jbe
sbb
xor
jmp
scas
pop
cmp
mov
loop
arpl
inc
jecxz,pt
and
test
ficompl
sub
adc
adc
push
loop
icebp
pop
mov
xlat
gs
pop
div
push
idivb
fists
jecxz
rcr
lock
movsb
stc
xor
lods
aam
mov
aaa
push
adc
mov
fistps
rolb
jl
xchg
popa
out
outsl
mov
cmp
jg
addr16
pop
sub
mov
out
stos
dec
push
pusha
aam
mov
dec
sbb
lds
add
xlat
adc
popf
and
fcompl
jge
divl
mov
jmp
out
sbb
je
movsl
test
pop
jno
adc
xchg
inc
mov
xchg
mov
int
outsb
or
pusha
in
cmp
push
inc
js
sub
lret
out
insl
sbb
and
cmp
fsubr
cs
ffreep
test
dec
push
outsl
pop
hlt
jne
in
jl
inc
jl
mov
xor
sarb
loope
cmp
mov
stos
clts
xchg
push
repnz
stos
inc
pop
push
adcb
into
faddl
dec
pop
xchg
dec
push
dec
scas
cmc
test
mov
inc
sbb
mov
mov
mov
inc
stc
data16
jle
dec
inc
repz
rcr
push
fimuls
sbb
pushf
mov
mov
pop
leave
into
jp
mov
addr16
shll
or
clc
repz
jmp
or
cmpb
xchg
push
iret
xchg
shll
push
imul
dec
repnz
popa
cs
jmp
rcr
enter
in
repz
push
xor
dec
in
xor
fdivs
xlat
and
push
sbb
sbb
into
ret
xchg
fst
fidivrs
sbb
dec
ds
mov
lahf
addl
inc
testb
int
cmpsl
repnz
xor
scas
cmpsl
sub
sub
xor
mov
mov
inc
repnz
lret
cld
out
subb
jae
int3
xor
scas
xchg
and
enter
or
iret
es
sub
cmp
out
into
shlb
mov
jle
aas
lds
mov
ljmp
ds
ss
rclb
dec
int
int3
pop
outsl
std
ja
rcr
pop
push
rcr
ljmp
and
fcmovnb
loopne
push
jge
stos
mov
push
and
loopne
std
mov
dec
fwait
popa
cltd
and
pop
push
ficomps
add
sahf
fcoms
mov
dec
sahf
add
mov
jg
lahf
iret
call
mov
shl
mov
jae
notb
jo
cmpsl
jecxz
into
and
test
sbb
inc
jmp
xchg
shlb
push
jmp
mov
jg
and
cmp
outsl
jl
mov
addr16
jae
dec
mov
mov
cwtl
js
stc
xor
lds
jns
mov
test
mov
mov
frstor
lcall
push
push
xor
sub
and
mov
stc
aas
pop
adc
mov
fucomi
or
mov
cmp
jecxz
fs
jb
and
fs
push
mov
adc
nop
ret
and
inc
decb
jmp
fistpll
pop
and
scas
xor
inc
outsl
pop
pop
xchg
inc
sbb
jg
aad
xor
loopne
std
lret
fldt
push
stc
insl
dec
lret
or
lods
xchg
aas
andb
inc
out
xchg
in
and
adc
mov
mov
mov
pop
mov
out
inc
mov
clc
push
sub
out
std
lds
fwait
sub
dec
test
xchg
jbe
pop
sbb
test
xchg
sbb
push
mov
fistl
push
cmp
xchg
jnp
adc
je
adc
cmp
sahf
mov
dec
stc
xchg
bound
fwait
aaa
fists
sbbl
cltd
mov
js
cmp
jle
cmc
jecxz
cli
push
add
test
add
test
fs
jno
cmpsl
cmp
rcl
mov
xchg
or
fidivrs
cmovl
mov
jno
mov
mov
adc
out
in
fiaddl
mov
pop
dec
ror
in
inc
hlt
mov
int3
and
sub
and
dec
and
jmp
imul
hlt
rcrl
es
xchg
mov
in
jle
cmp
sub
lret
push
test
mov
dec
das
lock
stos
shrl
lea
and
imul
inc
lcall
xor
nop
dec
push
loop
lret
mov
jl
dec
xchg
out
repz
in
adc
and
test
mov
aas
sub
out
rolb
push
sahf
mov
jg
mov
fadds
mov
cmp
inc
jne
mov
xchg
bound
icebp
mov
and
mov
pop
popa
lock
or
cwtl
fsub
add
dec
inc
sub
in
shl
inc
mulb
in
loopne
sbbb
or
dec
pop
pop
jb
mov
cmpsb
not
mov
fistpll
push
push
push
cmp
mov
std
loopne
out
pop
add
mov
adc
arpl
pop
ja
cltd
mov
and
mov
rcll
push
sarl
mov
fdivl
mov
mov
dec
les
xchg
jns
add
imul
and
push
cld
adc
outsb
outsl
pop
mov
leave
cmpsl
push
lods
push
arpl
xchg
or
ds
add
mov
mov
test
cmp
in
add
sahf
sub
mov
sbb
mov
sbb
xorl
stos
jmp
jge
cmpb
xor
js
scas
repnz
pop
mov
xchg
int3
out
lcall
js
sbb
sub
lahf
cmc
sti
mov
jmp
inc
jnp
jo
mov
es
xor
xchg
xor
int
pusha
fnstcw
pop
call
popf
push
scas
xchg
mov
cli
ljmp
push
in
mov
add
inc
repz
or
cltd
out
sbb
jmp
int3
sbb
mov
loopne
in
jne
das
and
push
pop
push
xchg
and
in
lret
out
nop
lahf
mov
dec
insb
mov
outsl
push
add
jecxz
movsl
mov
push
popf
mov
mov
pop
loopne
or
test
outsl
mov
xchg
stc
cmp
ficompl
stc
pushf
xchg
sbb
jbe
test
pushf
xchg
icebp
or
in
dec
nop
das
fwait
lahf
pusha
aam
inc
test
stos
int
ljmp
mov
cmp
jns
cmp
adc
or
jl
mov
cmpsl
stos
sub
sbb
dec
into
and
sbb
push
loope
repnz
and
mov
enter
in
xor
add
movb
lret
fisttpl
push
push
mov
mov
enter
mov
repnz
inc
nop
jmp
xor
xchg
dec
test
push
cli
fmuls
add
out
outsl
cmp
dec
jmp
cmp
inc
call
cmp
aaa
jecxz
push
lea
mov
ss
xor
gs
icebp
adc
lds
mov
adc
or
sbb
jns
jp
mov
iret
mov
cmp
jns
pop
jl
outsb
inc
bound
insl
fwait
outsl
fsubrs
pushf
in
mov
and
repz
jl
stos
cmovl
imul
xchg
call
or
push
jns
lret
ds
ds
sub
mov
add
loopne
scas
fnstenv
ret
lcall
pushf
xor
push
stos
into
jmp
popf
mov
in
aas
dec
jle
sbbb
push
fcomip
and
mov
push
pop
adc
xlat
int
xchg
je
fstl
leave
add
add
pop
mov
arpl
mov
aad
lods
lods
cmp
stc
cmp
add
pop
stos
rorl
sbb
lds
lea
ret
test
xor
loope
insb
in
das
imul
pop
xchg
scas
cmp
mov
jbe
sub
mov
sub
loop
xchg
mov
lahf
and
ret
and
and
sarb
adc
push
fldenv
dec
arpl
mov
arpl
push
rorl
orl
pushf
jae
mull
or
and
xor
pop
test
push
lea
push
lahf
and
push
mov
dec
fsts
jb
mov
jb
lock
loope
rorb
push
std
xchg
mov
pushf
jecxz
push
inc
stc
sti
sbbb
ja
dec
xchg
hlt
xchg
fildll
push
xchg
fs
in
sub
xchg
std
mov
or
jbe
push
shll
and
xor
icebp
xor
ss
and
test
cld
shll
ret
out
clc
sub
add
push
incl
cmc
jl
pop
stc
movsl
sbb
mov
jg
ds
xor
xchg
cmp
or
arpl
sub
push
inc
or
fmul
ret
push
enter
mov
into
fsubl
lea
inc
xchg
cmp
cmp
cmp
decl
lods
mov
stc
clc
jb
cmpsb
insl
adc
dec
mov
pop
push
movsl
jmp
repz
xor
push
or
mov
clc
pusha
adc
loopne
popf
dec
push
push
ljmp
add
ffree
dec
rcrl
inc
jle
ljmp
test
pop
push
outsb
lret
inc
jbe
ret
aad
cmpsl
mov
mov
test
mov
mov
inc
jns
xor
orl
idivl
sahf
jb
jnp
les
push
adc
into
or
xchg
std
mov
sub
enter
mov
sti
jl
inc
xchg
or
dec
xor
sub
nop
fwait
sbb
fwait
shll
loope
test
cmp
mov
xchg
sbb
shl
add
jp
das
pop
inc
int
pop
lods
xchg
vmwrite
sbb
xchg
mov
scas
jnp
and
movsl
xor
jns
out
mov
aaa
inc
xchg
imul
lea
dec
mov
jns
in
push
testl
stos
stos
pop
pop
pushf
sbb
xlat
and
scas
imul
arpl
or
leave
ret
xchg
sbb
and
adc
mov
imul
lret
xchg
sub
inc
pop
sahf
adc
pop
pop
scas
push
sub
or
fmul
ret
testb
mov
fst
test
mov
cmp
decb
outsb
add
ficompl
imul
mov
pusha
daa
push
nop
xchg
lcall
popa
pop
imul
or
mov
loop
in
mov
and
cmp
jp
dec
fiadds
int3
cwtl
je
idivb
ffree
xchg
pop
outsl
xchg
sub
inc
add
cmp
rorl
inc
repnz
push
xchg
add
mov
cltd
ret
sti
and
inc
fisubrl
in
rdtsc
xor
adcb
hlt
lret
popf
jge
xchg
int3
dec
xor
mov
sahf
mov
cmp
inc
and
and
aaa
enter
push
jbe
dec
je
push
std
shll
pop
cmovl
stc
xchg
mov
cmp
fldenv
ljmp
jne
mov
pushf
lcall
repz
lods
jmp
les
adc
adc
das
cmp
mov
pop
int
sti
sti
cmp
cmpsb
cmpsl
test
mov
pushf
xor
mov
xor
push
rorl
gs
xlat
mov
shrl
inc
mov
cmpsb
adc
adc
dec
pop
loope
rolb
jmp
rorb
mov
popl
test
xchg
arpl
clc
mov
stos
mov
pop
fstps
push
movsb
mov
outsl
xchg
fdivl
inc
sub
pop
xor
xchg
sub
mov
adc
insb
out
inc
pop
jg
ret
push
pop
jns
call
push
out
and
inc
les
or
xchg
mov
jnp
out
push
mov
scas
fsubrl
adc
cld
lahf
loop
jne
hlt
xor
dec
mov
inc
adc
sub
test
fistl
mov
scas
mov
xlat
call
aas
jno
jae
fwait
shl
inc
shlb
mov
xor
and
lock
repnz
mov
in
in
pop
mov
out
add
dec
add
mov
push
rclb
ljmp
mov
add
ja
xchg
xchg
inc
std
jbe
adc
das
xchg
fs
outsl
cmp
mov
cmp
xchg
pushl
jg
stos
lods
in
pop
out
out
mov
add
aaa
out
loopne
ret
in
inc
jno
mov
dec
jmp
xchg
int3
mov
xor
cli
fxch
scas
fdivl
call
movl
movsl
sbb
mulb
xor
inc
push
inc
dec
pop
mov
cmp
mov
jmp
pop
and
jmp
stos
test
pop
or
jle
add
xor
fcmovb
js
cmpsb
adc
cmpsl
test
outsb
xchg
mov
push
add
loop
shrb
dec
outsl
mov
or
xchg
lret
add
in
nop
ret
mov
popf
popa
loop
mov
mov
cmpsb
jl
mov
xor
sub
cmpsb
test
mov
xchg
mov
lret
scas
das
cli
dec
cmp
rcll
or
add
rcl
popf
je
mov
ja
lahf
lret
jnp
in
ss
test
xchg
and
sub
jle
dec
rsm
fnstenv
mov
outsl
cwtl
mov
out
out
mov
rcl
repnz
jne
sbb
cli
ss
hlt
push
movsb
lcall
sbb
shlb
popa
xor
jl
add
and
leave
in
fsubs
pop
mov
add
xchg
cmc
loope
mov
sub
mov
xor
sub
mov
cmp
stos
inc
mov
lock
dec
fdivl
mov
sti
push
lock
adc
inc
jg
sub
lds
js
testl
int
stos
out
fs
inc
jb
fstps
leave
jle
mov
lds
icebp
push
dec
stos
mov
adc
ss
xor
fdivs
sub
aad
dec
dec
jb
ja
sahf
inc
and
jb
stos
xchg
push
shll
mov
stos
xchg
mov
bnd
call
push
sub
ja
fs
cld
inc
or
aam
or
cmp
in
pop
sub
mov
data16
std
imul
pop
ret
dec
daa
mov
rcll
mov
hlt
add
fildll
rcll
inc
sub
out
loopne
mov
xor
mov
dec
mov
inc
jbe
fsubl
movnti
arpl
scas
jno
aas
jno
cli
jbe
lcall
int
dec
les
or
push
lods
jp
movsl
push
mov
jmp
cmp
fs
mov
es
imul
inc
push
jp
jle
xchg
push
mov
out
and
nop
leave
inc
push
pop
shrl
push
scas
addr16
xchg
adc
shlb
pop
roll
xchg
push
and
cli
imul
cmpsl
cltd
cmp
loope
insb
test
pop
mov
sub
sbb
cmp
and
xchg
xlat
loope
xchg
mov
scas
xchg
push
jg
mul
mov
pop
lea
data16
push
call
add
pop
les
fildl
mov
jg
insl
push
push
jl
inc
adc
xor
sbb
test
cmp
xchg
jge
sub
cmpsb
insl
xchg
test
sbb
inc
and
add
cmp
mov
mov
push
jl
je
in
cmp
cli
or
popa
dec
mov
jnp
push
jo
dec
pop
mov
in
cmp
fwait
lahf
movsb
daa
mov
sub
hlt
into
ja
inc
adc
mov
mov
xlat
enter
ret
adc
jp
add
iret
stos
jmp
xor
andb
inc
loope
in
or
add
arpl
dec
xor
mov
cmp
push
jae
iret
jb
data16
push
jl
data16
jg
inc
mov
push
popa
pop
jp
cwtl
xchg
and
inc
sub
test
add
cwtl
mulb
clc
mov
mov
xchg
aaa
clc
add
rcr
cmp
mov
int
jle
sbb
stc
mov
sub
xchg
repz
fdivrp
iret
sti
jg
sub
push
push
xchg
cs
xlat
enter
cmp
xchg
and
push
adc
cs
mov
or
adc
imul
mov
aaa
fisubl
cwtl
arpl
aam
das
and
add
ja
xorl
enter
daa
scas
dec
cmpsl
jne
cmp
popl
xor
pusha
lret
enter
dec
scas
or
rcrb
or
bound
pop
mov
lds
push
js
mov
icebp
mov
mov
mov
or
nop
add
sbbb
cli
inc
sbb
jecxz
lock
xor
idivb
xor
mov
popa
aad
dec
add
cs
dec
ret
dec
frstor
jne
lcall
jae
out
or
mull
mov
fadds
ja
pop
xchg
jb
out
sub
or
cwtl
add
mov
aad
imul
and
and
stc
push
cltd
inc
enter
addr16
adc
pop
pop
adc
push
stos
mov
sbb
xchg
stc
cwtl
clc
and
inc
mov
pop
mov
test
jmp
cld
inc
pop
aas
pop
add
adc
fsubs
xor
jo
std
push
push
cmp
sbb
sub
mov
sbb
lock
popf
or
push
jne
cmp
jle
pop
daa
pop
int3
aas
test
cltd
test
dec
and
in
push
shrb
pop
mov
fcoms
mov
sbb
cmpsb
out
aas
fistl
andb
test
dec
das
pop
hlt
jle
add
push
adc
push
addr16
and
outsb
pop
loopne
andl
or
xor
fstpt
sub
inc
popa
in
scas
add
inc
out
repz
enter
orb
push
mov
mov
mov
sbbb
ror
or
mov
or
mov
mov
xchg
lcall
nop
jecxz
mov
fistpll
bound
mov
in
mov
mov
jno
or
in
mov
data16
clc
inc
cmp
cmpsb
bound
cli
mov
jecxz
sti
mov
dec
sbb
mov
pop
mov
push
mov
ds
stos
adc
test
cmp
xchg
inc
cltd
pop
mov
inc
push
daa
jo
or
notb
jle
ss
lds
dec
pusha
sub
xchg
sbb
inc
mov
sbb
std
adc
je
push
subb
enter
mul
pop
adc
push
xchg
sub
dec
stos
not
sti
lret
das
insb
jecxz
and
fucomi
ret
inc
ds
push
pop
xchg
pop
mov
push
cs
aas
fidivrs
push
popa
in
push
xor
in
cltd
ret
popa
mov
movsb
add
loope
movsb
xchg
test
in
sbb
adc
inc
push
adc
sbbb
inc
mov
leave
mov
subl
arpl
mov
loop
mov
cmp
stos
ds
jge
xor
cmpsb
jnp
mov
mov
loop
in
push
push
sbb
push
div
cmp
push
test
cmp
pop
popa
jbe
sub
and
mov
addr16
cmp
mov
and
adc
push
packsswb
test
pop
xchg
int3
mov
push
sbb
fucomp
add
push
and
pop
out
inc
nop
cld
fnstsw
xor
pop
pop
insl
loope
xchg
cmp
pop
pop
test
push
push
push
sub
mov
xor
xchg
fcoms
mov
test
mov
inc
mov
mov
jecxz
test
pusha
hlt
and
jns
cmp
mov
or
fisttpll
mov
repnz
pop
add
enter
es
push
outsl
pushf
sub
lret
and
add
jne
lock
aaa
sahf
repz
cmp
pusha
sub
cli
std
clc
jg
cmp
out
push
push
adc
aad
and
stos
cltd
dec
roll
pop
clc
dec
test
movsb
daa
jne
inc
sbb
stos
jmp
sbb
lods
into
mov
into
adc
cmp
xchg
jge
add
push
jp
xlat
inc
or
in
popa
sub
jmp
fs
pop
jle
imul
sbb
loopne
cmp
sub
sahf
adc
pop
mov
add
dec
sbb
xchg
xlat
loopne
fdivs
push
testb
push
xchg
cmp
fsts
and
dec
xlat
mov
mov
int
add
add
jne
add
movb
insl
push
ds
or
clc
sbb
jb
jo
in
call
mov
push
pop
ljmp
jmp
es
fsubrl
and
dec
xchg
in
popf
fwait
dec
push
push
cmpsl
jge
jl
mov
cmpsb
pop
and
pop
xchg
dec
inc
test
mov
adc
mov
inc
inc
cli
mov
pusha
fdivs
sub
mov
nop
ja
mov
lock
andl
jnp
aas
ss
popa
cltd
repz
jns
dec
sarl
and
mov
insb
jge
xor
divl
cli
rorb
outsl
movsb
mov
into
dec
adc
mov
xchg
test
and
out
add
jb
enter
pop
daa
adc
adc
adc
mov
repnz
cs
in
repz
repnz
test
add
shlb
add
inc
dec
shrl
aaa
add
mov
xchg
lock
sub
cmp
bound
outsl
into
lret
mov
test
mov
pushf
add
mov
mov
xor
sbb
ret
test
and
xchg
ret
rcr
lret
push
xlat
mov
adc
cltd
inc
rclb
mov
lret
in
dec
in
mov
push
inc
les
adc
jb
addr16
sub
andb
pop
mov
cmp
ljmp
jae
inc
mov
mov
xor
pushf
insb
insb
sbb
mov
sub
adc
jg
sbb
rorl
pop
sbbb
jle
and
les
cmpsb
mov
push
mov
ljmp
dec
std
push
mov
cmp
aam
les
pop
inc
imul
jne
adc
cmp
jle
jns
popf
ljmp
movsl
subb
push
cmp
stc
sbb
jnp
jl
xchg
out
mov
lea
je
inc
xchg
aam
cwtl
ljmp
pop
lea
push
sti
xor
xor
les
ret
cli
cs
push
outsb
call
fsubr
push
sbb
push
lcall
and
cli
mov
push
xchg
push
cmp
cmp
roll
xor
scas
into
loopne
jp
or
adc
js
das
ljmp
jmp
sbb
xor
jl
repz
movsl
xor
es
cmovnp
test
sbb
xlat
and
sti
enter
sbb
pop
iret
scas
xor
pop
mul
popa
mov
add
push
icebp
je
add
scas
push
sahf
lds
dec
mov
pop
outsl
inc
test
int
popa
jae
add
loop
data16
jb
sbb
and
and
es
outsl
aad
xchg
ret
or
fnstsw
jbe
inc
aad
pop
jns
addr16
mov
inc
lcall
js
adc
inc
xor
jg
arpl
data16
lcall
ja
lahf
loopne
loope
popa
scas
mov
fists
cltd
dec
cmp
dec
pop
in
jno
mov
inc
dec
shrb
flds
add
dec
loopne
int3
test
jb
lret
add
shlb
imul
fwait
lock
es
push
cmpl
mov
cmp
aaa
fnsave
hlt
mull
jmp
adc
dec
adcb
cmp
shl
add
pop
popa
mov
push
and
cli
or
adc
sbbb
movsb
and
lcall
dec
imul
pop
cld
std
stos
outsl
test
push
push
fstpt
pop
imul
cmp
inc
cmp
mov
mov
push
repnz
in
xor
jge
mov
aas
mov
and
dec
mov
pop
cmpsl
lds
pushf
mov
pop
daa
push
pushf
lahf
xchg
add
cmp
mov
out
mov
aaa
mov
and
xor
nop
mov
loope
mov
adc
dec
mov
nop
sub
movsb
cmc
mov
aad
add
testb
ret
repnz
jb
inc
sbb
mov
inc
and
pop
mov
sub
xchg
ljmp
jp
fbstp
jno
cwtl
adc
inc
outsb
adc
pushf
and
repz
pop
jp
repz
mov
push
sbb
inc
sub
call
ljmp
push
xor
mov
xchg
pop
arpl
testl
cld
js
jae
or
push
mov
aaa
out
push
xor
loope
pop
xor
pop
daa
jl
dec
lods
jnp
mov
jmp
cmpsl
push
xor
shrb
int
cmpsb
loopne
mov
repz
out
pop
sbb
dec
xor
and
adc
xchg
outsb
in
in
mov
test
mov
fadds
sahf
in
jno
add
divl
cmp
push
cmpl
fwait
dec
fcmovnb
add
push
jle
jnp
leave
clc
mov
idiv
inc
aad
cmpsb
cltd
ja
or
or
xorl
sbb
mov
lea
and
and
pushf
pop
mov
push
inc
in
shlb
cltd
mov
loopne
cli
adc
cld
filds
dec
and
push
arpl
in
mov
out
mov
lcall
cmp
xchg
dec
or
jge
sbb
imul
mov
sarl
sub
dec
aas
add
lret
clc
pop
push
mov
cs
rorl
je
aas
in
aam
clc
push
adc
mov
ljmp
jbe
sub
push
mov
push
pop
push
jae
cmpsl
mov
fs
mov
jbe
in
jae
sub
adc
jb
jp
fisubl
gs
daa
cwtl
popf
sahf
aam
dec
out
lret
add
cmp
sbb
dec
sbb
pop
pop
mov
imull
lahf
or
and
addb
hlt
stos
shll
jns
inc
inc
mov
dec
jmp
test
jmp
pop
test
inc
ret
std
clc
ret
js
pop
pop
les
daa
sub
loope
sbb
mov
or
push
sbb
in
pop
cmpsb
sahf
inc
mov
cmc
fs
inc
sub
ljmp
push
pop
cmp
cmpsl
jne
std
dec
or
add
insl
outsl
cmpl
jae
daa
into
std
inc
or
or
push
stos
xchg
ret
sahf
jle
dec
jnp
jns
sub
bound
dec
mov
xchg
xchg
lds
int
mov
pop
int3
push
xchg
jmp
in
mov
sarb
fwait
lds
jne
popf
add
jecxz
dec
push
into
rcll
notb
sbb
mov
jb
xlat
mov
inc
leave
dec
or
or
cs
lcall
jo
add
out
adc
sub
mov
subb
mov
adc
xchg
out
or
jbe
scas
mov
lcall
out
sbb
xor
js
loop
ja
dec
sti
call
mov
jge
and
jne
ret
js
dec
mov
nop
mov
xor
cmp
scas
pop
enter
rcl
pop
inc
out
jle
pop
xor
pop
cld
jne
mov
mov
push
push
or
pop
jp
xchg
arpl
in
test
stos
and
ja
add
pushl
mov
test
in
xor
push
je
lcall
push
jnp
jp
xchg
popf
cmc
stc
mov
mov
inc
lods
mov
mov
sub
out
xchg
mov
movsb
cld
dec
add
fimuls
out
insb
in
pop
cmp
hlt
mov
adcb
add
ret
ja
pop
jge
cld
cmp
and
into
imul
pop
sub
fiaddl
int3
add
mov
xor
dec
lods
sahf
inc
nop
jecxz
pusha
ficompl
imul
dec
or
mov
addr16
xchg
fwait
and
xlat
jns
adc
sahf
fs
xor
inc
jg
shrb
mov
and
arpl
or
ret
and
and
andl
outsl
fistl
mov
enter
lods
lea
push
cmp
mov
ljmp
or
mov
inc
ja
add
or
adc
aam
out
jb
xlat
das
sub
cli
int
jbe
leave
jb
leave
lret
rcl
jmp
dec
push
out
mov
stos
shrl
es
divl
dec
aad
lcall
testl
and
lods
test
xchg
testl
fidivrs
mov
push
mov
or
ret
sbb
in
icebp
dec
mov
add
out
shrl
pop
fwait
fwait
inc
mov
lret
in
xor
dec
inc
xor
adc
push
stc
pop
pop
dec
cmc
cmp
gs
call
jp
sub
cmp
adc
jp
mov
inc
outsl
lcall
xlat
pop
idivl
pop
popf
adc
mov
sub
enter
xor
in
filds
test
enter
jnp
in
std
xor
lcall
fildl
cld
push
mov
ljmp
sub
jmp
call
xchg
push
add
dec
ret
mov
fimuls
jecxz
push
sti
test
stos
push
dec
subl
call
dec
nop
xor
stos
and
popf
lods
les
inc
adc
mov
sbb
test
roll
sbb
mov
mov
and
adc
adc
insb
cltd
pop
clc
inc
fimuls
aam
dec
xor
adc
es
jbe
pop
inc
dec
daa
jecxz
pushl
mov
sbb
jne
jns
push
leave
and
xor
call
loopne
dec
mov
jnp
js
inc
jns
imul
lahf
arpl
mov
aad
divl
pop
shll
and
push
stc
pop
loope,pt
mov
rol
in
in
inc
mov
mov
or
inc
pop
out
pop
sub
rcr
les
inc
mov
and
lcall
test
jo
ja
outsl
gs
sub
stos
dec
in
inc
mov
int3
movsb
jns
inc
rcl
movb
dec
xchg
sub
lods
fmull
jbe,pn
ror
inc
mov
int
pusha
jno
pop
pop
or
fists
jnp
push
out
mov
lds
adcl
neg
push
inc
fistl
stos
push
mov
jno
pushf
testb
inc
fistps
cmp
out
inc
mov
cmp
add
mov
adc
cmc
movsl
das
loope
sbb
mov
sbb
enter
jecxz
test
cmpsb
arpl
lock
or
mov
push
xchg
xor
lods
lock
inc
lahf
jg
imull
inc
movsl
es
add
in
push
add
das
mov
imul
sbb
in
gs
fdivrl
xorl
movsl
cmc
ffreep
inc
sub
sbb
aad
scas
dec
add
ret
mov
adc
cmc
or
stos
ficoml
pop
lret
shlb
add
out
dec
call
push
inc
push
pop
loop
mov
pop
aas
ret
scas
aaa
lods
cwtl
jl
pop
cmp
shlb
jp
daa
push
mov
sub
mov
inc
loopne
andl
shlb
fs
or
jl
inc
jns
in
xchg
imul
adc
adc
scas
xchg
sbb
out
aaa
int3
clc
in
dec
nop
fwait
xchg
rcl
outsl
mov
in
aad
fs
xorb
pop
loop
stc
and
fisubrl
add
push
sub
pop
mov
xor
mov
stos
adc
cmp
lret
adcl
cmpb
pop
lret
inc
popf
ds
dec
clc
jle
xor
jecxz
aaa
sub
std
hlt
loop
sub
xor
test
stos
mov
mov
jno
hlt
lea
mov
shl
push
enter
push
es
sbb
aad
out
jne
hlt
repnz
enter
icebp
daa
icebp
add
mov
fwait
sub
icebp
popf
jle
dec
test
sub
add
sbb
sub
jnp
jp
add
in
jo
push
ss
repnz
mov
ljmp
test
lret
fs
xor
out
and
movsl
add
mov
mov
imul
pop
sub
andl
dec
cld
cmpsb
out
add
or
xchg
test
imulb
shlb
mov
cmpsb
add
rolb
jecxz
mov
mov
dec
sub
inc
pop
or
aam
xchg
jmp
leave
or
rcr
add
jno
add
mov
cld
into
mov
daa
push
repnz
lahf
mov
dec
out
in
jmp
je
cwtl
pop
mov
aad
adc
cmp
pop
imul
lret
faddl
ss
push
in
movsb
cmp
pop
fbld
cmpsl
in
test
daa
jmp
std
cwtl
aad
popf
and
cltd
hlt
jnp
subb
adc
bound
dec
pop
sbb
xor
sti
int
jmp
jbe
and
sbb
adcl
push
mov
pop
pop
daa
cld
xchg
jmp
cmp
mov
flds
repnz
inc
push
cmpsl
jg
xchg
sti
pop
cmp
ja
test
xor
enter
mov
cltd
popa
xchg
enter
dec
iret
sbb
sbb
movsb
pop
add
cmp
repz
sbb
fisttpl
or
cmp
inc
jl
fsubl
xchg
ljmp
cld
test
push
mov
mov
aam
dec
in
hlt
cmpsl
ret
clc
sub
sti
add
data16
xor
inc
fimuls
xchg
push
or
mov
xchg
je
mov
stos
inc
pop
das
xor
jae
sub
push
pop
push
adc
xchg
ficomps
jae
sahf
or
push
dec
pop
pop
movsb
xchg
add
call
xor
movb
jne
int3
daa
or
ret
xor
test
mov
inc
stos
loopne
adc
clc
xor
andl
mov
mov
int
rcrb
sub
pusha
int3
dec
in
sub
loop
dec
push
push
popa
sub
mov
push
and
lock
sub
dec
push
movsl
cs
or
nop
cmp
adc
rcl
jno
push
ss
adc
xchg
cs
cli
rcrb
mov
fstps
mov
jns
xor
push
push
jae
fildll
cmpsb
test
idivl
ret
jbe
mov
mov
mov
cltd
imul
sahf
cmp
jne
xor
cmc
les
pop
sub
into
sub
ljmp
inc
cmp
mov
lret
cmp
cmc
shrl
fs
fdiv
xor
or
push
pop
repnz
and
sbb
shlb
xchg
xchg
or
fcom
mov
cwtl
je
lahf
mov
xor
xor
mov
xchg
ret
xchg
xchg
xchg
test
push
dec
and
js
mov
mov
xor
pop
pop
inc
rorl
adc
popf
stos
lcall
dec
inc
sub
jl
cmp
jo
xchg
jp
dec
movsl
sub
cwtl
hlt
or
add
cmc
and
mov
cli
or
int3
pop
arpl
mov
xor
xchg
lea
xchg
sbb
push
sahf
cmp
fcompl
and
repnz
push
xchg
addb
ljmp
sub
sub
inc
test
adc
cmp
insl
test
ljmp
xlat
push
fsub
mov
inc
ds
cltd
fidivs
test
call
imul
stos
shrb
dec
add
inc
jl
xor
insb
and
aam
icebp
mov
jb
insl
xchg
jne
pop
or
cmpsb
hlt
jnp
adc
mov
std
jmp
out
or
and
jb
jae
xor
jle
fst
ljmp
mov
adc
push
enter
xchg
cmp
cwtl
int3
push
and
push
push
roll
bound
out
fisubl
inc
jae
add
inc
loop
dec
push
ret
add
loop
dec
jmp
pop
xor
or
xchg
mov
xchg
sbb
mov
pop
mov
mov
dec
sbb
mov
inc
jl
mov
add
push
rorl
dec
outsl
test
mov
clc
ret
add
cmp
cmp
push
and
xchg
inc
lahf
push
lods
stos
mov
imul
mov
bound
cmp
imul
push
das
jbe
xchg
push
add
push
ret
dec
push
push
xor
dec
pop
fildl
addr16
xor
sub
xchg
repnz
std
mov
in
xchg
enter
inc
jb
mov
out
repz
mov
test
xor
loope
inc
dec
pop
pop
hlt
xor
por
adc
add
dec
mov
sar
lock
xlat
sub
jnp
loopne
push
sub
jns
push
push
push
adc
pop
in
in
mov
out
dec
dec
mov
hlt
and
outsb
das
jle
mov
jge
mov
sub
mov
in
lds
pop
ds
repz
dec
shrl
test
ljmp
in
and
loop
cmp
push
sarl
test
popa
scas
dec
jnp
mov
popl
clc
xor
orl
ljmp
out
out
ret
stos
aas
outsb
add
jns
sahf
cmp
dec
push
pop
mov
popa
inc
lcall
dec
inc
xchg
and
les
mov
lahf
iret
sub
add
pop
pop
shlb
out
pusha
pop
arpl
push
mov
cmpsb
xor
es
icebp
jecxz
mov
andb
popf
add
pop
xchg
cli
insb
inc
leave
lret
and
mov
pop
sbb
adc
pop
sub
add
imull
jmp
js
cli
xchg
inc
cld
mov
and
int
loop
imul
jge
push
adc
mov
dec
not
leave
or
into
mov
outsl
or
mov
ja
sarb
mov
not
ds
rcl
lods
jmp
lds
dec
add
rcrb
gs
cmp
in
lods
add
out
mov
movsl
cmp
ficoml
fsubr
or
sbb
aam
dec
mov
lds
cmpl
xor
and
stc
mov
repz
incl
pop
mov
cmp
out
xor
imul
filds
lea
out
subb
cmp
cmp
push
adc
jecxz
iret
add
mov
mov
ja
push
cmpsb
fnsave
cmpps
xchg
xchg
mov
lods
punpckldq
shll
outsb
mov
or
mov
subl
sarb
dec
pop
add
push
into
rcrb
dec
imul
mul
jmp
insl
mov
cmpsl
or
cli
ja
pop
xor
xchg
testl
mov
seta
sbb
les
cmpb
daa
mov
test
pushf
cmc
inc
dec
sub
loopne
xor
jmp
adc
rcll
sbb
and
jg
adc
sub
pushf
cs
pop
fsubr
mov
imul
clc
mov
add
push
aam
lret
mov
pop
out
dec
shll
orl
mov
fxam
adc
or
out
pop
mov
es
xor
jo
push
daa
jbe
cmpsl
aad
jbe
aas
or
fsubl
sbb
pusha
mov
xor
jnp
pop
cmp
jmp
pushw
add
loope
ljmp
xor
test
mov
out
sahf
or
sub
repnz
ret
cmpsb
jecxz
inc
cmp
lea
push
pop
stc
pop
mov
int
aam
pop
inc
sub
sahf
pushf
pop
pop
jmp
jecxz
aam
in
and
mov
and
mov
movsb
jne
test
jns
arpl
sub
aad
inc
add
and
sbb
mov
negb
and
bound
cmc
jp
mov
fnstenv
inc
je
pushf
adc
in
arpl
sbb
and
out
std
ds
pop
mov
pop
pop
mov
push
mov
jo
out
or
in
imul
fstpt
pop
shlb
jne
add
pop
clc
sbb
pop
adc
mov
orl
enter
mov
push
xchg
sbb
test
jmp
jl
iret
lcall
addl
jns
popa
push
adc
adc
stos
stc
adc
sbb
cltd
dec
ss
jl
inc
jb
out
cmpsl
popf
jmp
mov
outsb
dec
fwait
or
std
rcrb
into
mov
or
int
roll
pusha
rol
mull
jne
std
orb
fsubl
stc
or
pop
fisubl
mov
mov
imull
inc
cli
out
xor
leave
cmp
dec
addl
push
adc
das
sbb
sub
dec
je
sarl
xchg
addb
addr16
pop
mov
xor
push
ljmp
dec
xchg
mov
inc
dec
cli
sub
jge
addr16
into
lock
jp
xchg
sbb
jbe
jno
sub
addr16
loope
push
lcall
lret
inc
xor
jp
cmp
aas
xor
and
xor
jle
roll
add
aam
push
loopne
mov
xor
pop
aam
mov
mov
icebp
std
fistpl
sub
adc
mov
nop
cmp
xor
xor
push
scas
scas
ds
add
fiadds
int
and
add
repz
mov
xchg
fwait
out
imul
adc
or
jecxz
push
and
iret
out
gs
jnp
and
movsl
test
imul
jo
xor
xchg
inc
mov
dec
cmp
rcll
adc
jge
mov
sub
add
jp
outsb
adc
pop
push
adc
push
xchg
in
loope
icebp
push
aam
pop
push
mov
clc
push
sti
and
ret
jo
addl
cmp
or
js
rcl
jns
xchg
mov
xor
cmp
dec
sub
xchg
data16
das
mov
das
adc
fcomp
xor
inc
iret
xchg
mov
popf
xchg
iret
jo
lret
call
lret
popf
clc
notb
je
outsl
in
sahf
mov
insl
xlat
ret
mov
pushf
out
movsl
scas
neg
pop
push
lock
outsl
jbe
push
mov
jb
jmp
insl
xchg
sbb
mov
mov
lods
push
aam
lock
sarb
inc
xlat
cs
fnstsw
adc
rolb
cmp
fistl
popa
mov
shll
add
xor
pop
sub
jmp
test
pop
sbb
jno
inc
cwtl
mov
jmp
jl
mov
lods
add
push
scas
xor
cmp
or
add
add
rolb
mov
push
hlt
aam
orb
sub
or
icebp
notb
mov
cltd
repz
aas
fsubrs
add
lods
shll
mov
jp
dec
inc
insb
lea
fsubl
loopne
xlat
movsb
jecxz
and
outsb
in
sbb
scas
add
mov
sub
sub
inc
addl
mov
icebp
add
jo
push
out
fsts
out
mov
daa
inc
mov
pop
push
jb
roll
fdivs
xchg
xchg
xchg
pop
pop
aaa
xor
push
ja
imul
out
fiaddl
jnp
fsubl
pop
lcall
push
and
mov
xor
inc
daa
aam
cwtl
loop
mov
xchg
rclb
xchg
aam
decl
xlat
push
outsb
pop
adc
lods
push
cmpb
in
imul
das
pop
js
mov
fsubrl
sti
pop
jnp
fldl
lods
mov
or
shr
pop
in
mov
xchg
aas
lods
scas
jl
cmpsb
shll
rclb
ficomps
je
or
xor
push
shl
cmpsl
mul
xchg
inc
inc
out
pop
stos
or
xchg
add
outsb
orb
xchg
and
test
sbb
and
pop
mov
scas
jmp
insl
mov
imul
addl
dec
or
test
pusha
mov
out
or
mov
pop
enter
dec
add
outsb
mov
cltd
sbb
push
mov
push
inc
jge
jo
xchg
shl
sub
jecxz
mov
ljmp
mov
ljmp
cmp
push
jp
cld
dec
movsl
out
test
in
mov
test
mov
sti
push
mov
repnz
fsubl
dec
and
mov
scas
negl
xor
outsb
jb
pop
cmp
xchg
sub
sub
inc
dec
in
shl
imul
sbb
jl
push
lret
push
sub
loop
sbb
inc
cmp
xchg
adc
mov
or
stos
mov
cmpsl
jmp
jns
push
and
cltd
and
addr16
push
jno
inc
jo
hlt
in
add
clc
xchg
mov
shll
dec
cmp
shlb
leave
decb
pop
sub
lds
mov
sbb
int3
inc
aam
iret
icebp
call
or
in
lea
lds
sub
repnz
push
mov
out
out
xlat
test
out
cmp
lret
push
lahf
lea
sbb
xchg
in
add
fimull
mov
mov
mul
test
inc
jle
sbb
in
int3
mov
mov
scas
adc
stos
sbb
enter
add
add
sahf
push
mov
xchg
loope
jns
and
cmp
push
and
adc
inc
adcl
mov
jg
or
sub
pusha
fidivl
popf
loope
jmp
enter
iret
xor
mov
les
in
sbb
and
ret
dec
add
test
ret
sub
test
mov
fucomip
call
in
lahf
sbb
stos
out
outsl
std
mov
mov
jg
jns
lods
lret
movsl
and
js
cmp
or
lods
pop
mov
jnp
jne
or
mov
loop
add
adc
mov
push
push
psrlw
inc
fnsave
and
dec
adc
xor
mov
sbb
pop
hlt
dec
push
loope
and
into
in
push
shrd
imul
xor
add
dec
scas
jno
mov
adc
and
cli
adc
repz
mov
adc
pop
add
xchg
adc
pushf
pushf
mov
std
jae
ret
jle
mov
fcmove
ljmp
jae
pop
mov
out
pop
lret
js
cmp
or
pop
dec
cmp
mov
stos
lods
mov
or
aaa
xchg
dec
insl
adc
add
hlt
mov
out
dec
or
out
daa
fistpll
lcall
adc
jmp
push
lods
xchg
test
add
add
mov
out
int
xlat
add
push
inc
fmul
push
test
adc
insl
add
clc
loop
mov
sbb
es
fisubs
adcl
sbb
cmp
mov
push
mov
fistpl
inc
mov
sub
or
cmp
cltd
movsb
ds
lret
ja
xchg
pop
xchg
jl
sbb
cmpsl
rorl
push
adcl
nop
inc
int3
in
or
int3
jo
lahf
sub
mov
popf
jne
fsqrt
pop
push
or
jns
stos
mov
xchg
outsb
repz
lret
ljmp
ljmp
leave
dec
mov
loopne
out
jle
lock
add
xor
test
cmp
fsqrt
repnz
pop
mov
push
mov
jg
xor
mov
mov
dec
loopne
pop
cmp
adc
leave
test
pop
aas
fdivl
test
xchg
jmp
gs
popf
push
push
jae
sarl
jno
push
inc
jb
lahf
insb
fdiv
jne
mov
scas
daa
push
adc
sbb
repz
les
jge
pop
mov
pop
stos
repz
fiadds
jg
mov
mov
addr16
mov
adc
add
push
pop
adc
shrl
xchg
movsl
in
addr16
mov
push
mov
xchg
movsl
push
cmp
scas
in
das
scas
or
push
sub
sub
shll
jae
add
push
push
mov
jle
outsl
enter
push
test
xchg
xchg
scas
push
pop
mov
neg
push
hlt
push
int3
js
jno
es
sbb
js
pop
aaa
lret
std
das
dec
adc
inc
stos
mov
jl
sti
or
xlat
fcomp
repnz
xor
sarb
dec
dec
rolb
inc
jp
mov
insl
add
cld
sub
inc
mov
into
ficoml
lea
ljmp
aam
jnp
aas
outsl
xchg
jmp
arpl
sbb
pop
push
mov
jmp
push
pop
xor
mov
cwtl
xor
popf
or
lahf
jmp
rcrl
gs
shll
daa
jb
sbb
jb
and
fwait
popf
rclb
cli
and
or
adc
adc
xchg
std
outsl
aaa
in
sub
imul
adc
loopne
sahf
fidivrl
sbb
mov
xchg
and
in
call
cmpsl
mov
cmp
dec
test
icebp
sbb
adc
and
repz
ljmp
jl
lret
insb
adc
cld
orb
cli
btc
xlat
xor
inc
mov
shl
lahf
mov
out
dec
adc
mov
enter
inc
adc
imul
stc
adc
cmpsl
ret
fstpt
xchg
ljmp
inc
mov
ss
aaa
jns
pcmpeqd
int3
jl
lock
xor
loope
add
xlat
cmp
loop
fnstcw
imul
rcl
dec
mov
repnz
sbbl
mov
inc
pop
push
mov
fimuls
fsin
sahf
mov
rcrb
push
dec
inc
fsubrl
adc
addr16
jecxz
push
insb
xor
jle
adc
lahf
sar
sub
fxch
and
or
rcr
mov
rcll
cmp
add
mov
jl
push
jmp
pop
push
mov
mull
int3
loope
jnp
fisttps
lcall
push
fadd
or
enter
jnp
popa
xchg
scas
jp
std
add
and
int3
push
and
test
push
xchg
sub
sti
mov
and
sub
icebp
pop
jb
xchg
jno
ljmp
mov
pop
pushf
adc
push
add
aad
and
lock
inc
mov
out
sbb
lret
xor
std
add
mov
xor
out
push
mov
fmul
mov
jecxz
int
out
xchg
xchg
jno
xor
push
xlat
jge
loopne
mov
jle
jmp
add
push
jmp
pop
pop
insb
inc
add
sub
adc
add
cmc
pop
pop
jo
insl
fs
mov
mov
add
in
sbb
rorl
push
imul
fidivs
ret
pop
movsb
in
sub
inc
int3
fcmovb
jle
ss
scas
je
shrl
add
inc
call
fwait
push
rcrl
aaa
lock
or
shl
lods
scas
inc
imul
repz
or
jmp
loopne
and
xor
jl
jle
push
outsl
fsub
je
in
adc
test
xchg
xlat
push
cs
insl
imulb
movsl
aad
out
iret
imul
mov
cli
push
js
cmc
lret
and
mov
mov
arpl
ret
scas
pop
es
sub
mov
mov
adc
fstpt
movsb
shlb
mov
inc
dec
into
or
test
xchg
out
push
mov
fistpll
pop
repnz
arpl
mov
push
mov
stos
in
daa
mov
and
add
push
xor
jno
icebp
or
push
inc
cld
dec
in
test
or
lods
flds
dec
pop
or
stc
fnstsw
sahf
ds
or
movsl
xor
scas
pop
xchg
mov
insb
sbb
outsl
fnstenv
mov
sbb
pop
add
jne
sub
mov
push
stos
mov
pop
push
jecxz
adc
fildl
mov
push
dec
push
dec
pushf
cmp
imul
add
in
call
cmc
in
fs
xchg
mov
mov
jb
scas
pusha
mov
xor
and
js
mov
mov
std
mov
or
mov
sub
inc
int3
xor
and
test
pop
sbb
push
pop
cmp
bound
push
mov
cmpsb
pop
mov
aad
data16
cmp
cs
aaa
dec
xchg
xchg
pop
aam
into
mov
push
cmp
int
loopne
daa
xchg
stos
aad
or
and
xor
sbb
sub
in
jns
pop
cmp
dec
inc
jl
or
cmpsl
in
in
sub
mov
cmp
pop
repz
setnp
sar
pop
lret
lcall
dec
icebp
jo
rcrl
add
fisubl
rclb
xor
jle
roll
lds
jmp
stos
imul
jne
mov
add
dec
aam
mov
cltd
inc
mov
xchg
cmp
icebp
mov
and
or
mov
sbb
pop
and
cmpsb
xlat
stos
push
insb
cwtl
dec
push
dec
mov
cltd
xor
and
call
mov
shrb
aas
fwait
andl
fdivrl
shlb
and
adc
add
sub
and
sub
sbb
leave
push
mov
imul
cmc
xor
mov
jo
popa
or
iret
inc
hlt
in
sbb
and
sti
pop
dec
or
push
rorl
adc
jp
and
inc
aas
clc
dec
call
adc
xchg
mov
jno
push
sbb
jo
mov
in
pop
push
xor
repnz
jg
cmp
cmc
xor
hlt
imul
les
mov
cli
xchg
adcl
ja
adc
ret
pop
icebp
loopne
mov
push
jecxz
jb
repnz
scas
xchg
xor
adc
fldl2t
sbb
orl
or
call
popa
imull
dec
stos
bound
mov
pop
push
dec
test
mov
lock
int3
cmp
xor
pop
stos
fldcw
add
xor
bound
sbb
add
rcrb
addr16
mov
xchg
inc
adc
pop
lcall
das
rorl
decl
xchg
ljmp
out
out
enter
adc
jae
fimuls
jmp
sarl
and
pusha
popa
add
ja
dec
xchg
in
mov
jb
lods
push
in
xchg
mov
out
inc
stos
dec
int
or
sti
cmp
sub
jno
jno
xchg
xchg
mov
inc
enter
test
xchg
xchg
dec
and
outsb
push
add
sti
sti
or
jne
cmc
adc
xchg
pop
cli
adc
pop
jg
lods
jb
lahf
nop
test
in
aad
xchg
add
stos
inc
cmpsl
mov
aas
dec
loopne
pop
cli
jmp
pop
xchg
outsb
fs
stos
pop
int3
leave
hlt
daa
or
dec
inc
fstpl
pop
orb
lods
notb
and
mov
out
pop
inc
test
imul
push
sub
mov
sub
outsl
sub
insl
into
mov
pop
mov
push
mov
jo
or
hlt
into
nop
mov
je
popl
ret
ds
mov
lds
loop
call
sbb
or
and
sbb
push
inc
mov
cld
fdivl
xchg
daa
mov
es
dec
mov
or
push
jae
loop
mov
dec
push
cld
aaa
jge
lock
add
in
mov
sbbb
jne
or
xor
into
loopne
popl
jp
aam
mov
sbb
ret
sahf
cmp
xor
push
cld
push
or
xor
pop
jb
daa
xor
out
sbb
repz
jge,pn
dec
xor
push
mov
fs
cmp
shl
mov
aas
and
adc
adc
fidivrs
adc
cmp
mov
mov
cltd
test
fwait
ja
movsb
adc
push
je
dec
fidivs
push
inc
in
mov
ror
out
push
popf
in
pop
inc
dec
inc
ficomps
aas
int
cli
shrb
push
sub
pop
xchg
xlat
push
inc
xchg
sub
pushf
mov
sub
push
inc
mov
xchg
jne
decb
and
mov
out
pop
adc
cmp
jns
cmp
daa
pop
sub
int3
xchg
ret
xchg
mov
adc
fstps
bound
jl
scas
adc
addb
jnp
aaa
inc
leave
lea
push
pop
cmp
xlat
mov
popa
ficompl
stc
icebp
cli
out
sub
scas
mov
stos
iret
sub
mov
outsb
loopne
inc
add
sbb
pop
sbb
iret
push
inc
add
ljmp
jb
or
lret
push
ret
enter
stos
or
pop
jo
fsubl
push
adc
addr16
mov
push
mov
cwtl
je
dec
movsl
decb
aam
dec
mov
jmp
stc
shlb
cmp
jno
pop
pop
cmc
add
enter
repnz
or
jb
aam
mov
es
dec
jp
and
cmp
and
pusha
dec
nop
cmpsl
sub
std
cmp
lods
scas
push
dec
fimull
icebp
jne
xor
je
stc
sbb
in
loopne
mov
or
mov
bound
loop
xor
and
out
fs
and
popf
jecxz
add
stc
add
sub
jns
dec
daa
imul
xchg
loopne
insb
mov
add
sbb
xor
push
or
data16
mov
test
xlat
push
sub
and
pop
add
push
adc
pop
mov
xor
add
dec
sub
mov
arpl
dec
js
jns
ret
adc
les
pop
and
jmp
inc
dec
mov
ret
mov
ss
xor
arpl
mull
shrl
lret
xchg
mov
pop
ljmp
aaa
jne
mov
dec
movsl
mov
push
mov
test
lods
cmp
sub
nop
push
and
mov
aad
dec
call
in
sarb
out
fucompp
xchg
aas
popl
test
gs
in
paddusb
adc
stos
sub
fadds
ret
data16
stos
push
popf
add
add
sahf
aaa
xor
cmpl
dec
cwtl
pop
je
push
xchg
adc
popf
push
push
pop
add
inc
repnz
pop
adc
adc
cltd
inc
repnz
dec
lret
sub
fmull
jge
je
push
mov
sub
call
stc
mov
jecxz
sbb
push
lahf
sbb
xchg
dec
lea
mov
cwtl
es
sbb
inc
in
cmove
jns
sbb
adc
add
dec
inc
ds
insb
pop
or
orl
das
imul
sub
mov
stc
out
dec
jg
adc
xchg
sub
lret
popa
dec
xchg
xchg
inc
jae
mov
inc
pop
xor
cmpl
xchg
out
ds
ja
in
out
xor
enter
pop
daa
and
dec
stos
inc
and
movsl
insl
fs
xchg
stc
gs
cltd
mov
cmp
pop
mov
or
push
test
insb
push
and
sbb
xchg
je
jne
aam
sti
std
push
inc
adc
inc
rorl
or
mov
sbb
fucomp
dec
jo
dec
ret
pushf
sbb
adcl
push
iret
mov
cs
xor
inc
lret
push
dec
mov
cld
aas
js
aas
aaa
das
pop
mov
arpl
int3
fsub
mov
sub
dec
fldcw
sahf
xchg
inc
xor
or
cmp
ds
inc
pushf
fiaddl
jmp
jo
addr16
sbb
or
popa
mull
sbb
xchg
cs
sbbb
dec
xchg
aam
outsb
mov
ljmp
repnz
mov
arpl
jb
pop
dec
shrl
xor
push
adc
or
js
xlat
mov
xchg
jmp
push
inc
fidivl
sbb
pop
mov
push
and
insl
push
lret
mov
cltd
xchg
jge
add
pop
push
sbb
iret
enter
cmpsb
adc
rolb
movsl
call
test
mulb
ds
push
push
loope,pt
fidivs
ret
popf
jp
mov
pop
and
popa
loopne
pop
fcomip
mov
insl
aam
sbb
xchg
lods
push
xchg
xchg
outsb
or
rorl
inc
jne
imul
shrb
lret
cmp
and
in
sub
aaa
jg
repnz
fsubl
call
inc
das
scas
sbb
movsb
add
cmp
in
push
jo
int
xorb
inc
pop
mov
jae
push
and
movsl
sub
cwtl
xchg
inc
xchg
popf
push
ljmp
push
push
mov
sahf
add
adc
inc
and
sub
inc
out
mov
iret
je
dec
pop
push
icebp
ficoms
push
push
inc
add
in
cmp
mov
adc
dec
push
sbb
sub
add
xchg
inc
bound
pushf
fmuls
dec
and
loop
add
loop
cmpl
push
mov
insb
dec
fldt
add
xlat
jmp
adc
mov
xchg
mov
pop
sub
adcb
bound
dec
fldt
mov
cmp
sub
cmp
xchg
in
pop
or
test
rcll
sbb
popl
mov
and
imul
int3
mov
sbbb
test
add
and
pushf
and
cmpsl
lahf
add
lahf
push
lods
pop
xor
inc
inc
jmp
popf
es
int
sbb
add
jp
mov
cltd
sarl
out
fildll
je
sbb
loop
fisttpl
movsb
addr16
mov
fdivrs
pop
jl
ficoml
jecxz
ds
mulb
std
xor
js
jle
imul
test
cmp
je
jb
jmp
mov
into
lret
loop
out
std
int
rclb
fs
outsb
and
ret
cmp
lcall
mov
mov
mov
push
pushf
sub
jmp
or
cmp
sbbl
mov
sub
push
lods
std
stos
pop
jl
rol
add
push
mov
cli
loope
andl
fst
out
mov
fbld
push
js
mov
out
xor
jne
and
data16
sub
and
xor
xor
jo
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
pushl
and
cmc
repnz
push
ror
cmpb
inc
mov
push
nop
xor
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
sarb
mov
aam
int
sbb
jb
iret
lret
mov
sbb
das
lret
cwtl
xchg
xchg
in
jl
pop
pop
adc
add
jmp
fwait
mov
jbe
and
test
xlat
lods
andl
sti
or
cmpsl
ja
insl
or
cld
xchg
imul
mov
fiaddl
ficompl
repz
add
sub
add
int
jno
addl
dec
sub
dec
add
cld
xor
xor
ljmp
test
add
mov
mov
pop
add
pop
push
adc
shlb
push
shlb
inc
repz
mov
add
mov
sarl
jl
or
scas
mov
push
shlb
inc
mov
push
shlb
jge
or
mov
or
xor
inc
mov
xor
adc
push
rcl
js
or
inc
aas
mov
shlb
mov
push
shlb
inc
mov
push
rol
inc
ja
push
push
push
lahf
jl
jnp
add
mov
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
and
int3
push
xor
jge
sbb
inc
mov
or
xor
adc
mov
rclb
xor
lret
int3
push
rclb
jnp
icebp
dec
mov
push
or
jge
or
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
push
shlb
inc
mov
popa
js
jge
or
push
mov
jg
lret
push
lods
mov
inc
pop
push
mov
jg
or
mov
inc
inc
cmp
test
cmc
shrl
test
cmp
adc
imul
daa
stc
fidivs
add
lahf
push
jo,pt
adc
jbe
mov
jae
mov
cltd
ret
adc
cmp
pop
push
fldt
out
xchg
repz
insb
adc
mov
imul
ret
adc
push
mov
arpl
jg
dec
fstpt
add
fs
dec
mov
cld
adcl
aaa
lahf
fldenv
inc
push
mov
or
rorb
scas
lahf
outsb
aaa
frstor
pop
inc
decb
pop
dec
sbb
jge
mov
mov
cmp
loope
jecxz
mov
pop
aad
adc
hlt
dec
aaa
xchg
xor
cwtl
test
daa
xchg
leave
std
mov
mov
ljmp
pop
rolb
jmp
dec
xor
add
cltd
fbstp
mov
mov
mov
lock
cmp
stc
dec
scas
pop
sarl
dec
hlt
pop
movl
scas
lcall
adc
icebp
xor
fisubrl
mov
addr16
testb
sub
push
movsb
push
icebp
xor
ss
jnp
mov
cmp
fistl
repz
add
nop
push
jmp
std
xchg
add
enter
imul
sub
lahf
insl
je
jecxz
xor
and
cmpsb
dec
mov
inc
ljmp
out
lock
fcomi
test
xchg
aam
adc
ret
pusha
scas
mov
dec
dec
cmpb
test
ja
xlat
jo
xchg
lea
mov
sbb
inc
mov
in
aad
mov
or
rcll
jne
dec
std
loopne
rcrl
cmc
roll
fwait
adc
bound
mov
inc
pusha
repnz
xlat
pusha
out
in
fmul
in
sub
mov
lea
testb
stos
sbb
mov
lahf
loopne
sbb
inc
mov
scas
xor
int3
fimuls
call
jg
xchg
pop
je
cld
ljmp
and
mov
xchg
push
mov
mov
push
sub
stc
mov
imul
jae
shr
sbbl
in
inc
or
je
push
shl
testb
mov
or
jno
cwtl
loopne
rclb
and
push
and
test
je
push
xchg
les
cmp
add
outsb
jg
out
sub
inc
push
inc
adc
jo
push
outsl
push
jl
push
pop
out
ja
es
xchg
xchg
xchg
push
imul
and
mull
cmp
sti
xlat
fists
mov
push
adc
jns
fnsave
push
jge
fs
xor
movsl
addr16
daa
dec
jbe
mov
dec
dec
or
xor
jns
dec
ret
sub
movsb
xchg
mov
mov
es
sbb
pop
hlt
lods
mov
les
data16
jae
add
divb
add
test
add
jbe
nop
or
rcrb
in
sti
repnz
push
lcall
fadds
lock
outsl
and
sahf
out
test
pop
test
pop
fcoml
sub
add
insb
or
stc
push
insb
xor
scas
inc
push
fmuls
sti
add
jp
add
lock
stos
bound
cmp
fisubl
dec
jle
sbbb
jmp
inc
mov
mov
push
xchg
sbb
js
out
loope
sub
pop
dec
xor
mov
jecxz
xchg
mov
ljmp
sarb
xchg
mov
fsts
dec
pushf
sbb
shlb
sahf
jo
cmp
lea
push
add
inc
fwait
les
insl
xchg
mov
adc
sbb
mov
mov
adc
imulb
movsb
mov
mov
push
push
cmp
dec
and
xor
pop
pusha
enter
aam
inc
cmp
ret
and
push
or
data16
and
scas
shll
mov
sbbl
sbb
pusha
cmp
push
dec
leave
add
or
popf
das
xchg
dec
insl
stos
or
shrb
lret
jmp
sti
xchg
inc
fildl
xlat
sbb
dec
jb
je
jmp
test
lods
push
ljmp
inc
lret
popf
xor
inc
push
fldt
in
and
mov
push
stos
xor
movl
clc
aaa
jnp
sub
in
ja
jae
mov
ja
jns
pusha
xor
xor
aas
or
outsl
stc
push
mov
in
dec
bound
push
cmp
std
fiaddl
das
xchg
cmp
and
sbb
pushl
or
dec
arpl
jne
jbe
dec
aad
pop
mov
popf
adc
dec
pop
cmp
sub
cmp
insb
ficomps
or
mov
and
icebp
insl
lret
xlat
xor
test
aad
sbb
adc
jne
nop
nop
lods
jle
jnp
jg
lock
xchg
mov
lret
or
aaa
add
fbld
sbb
push
mov
push
xchg
aad
sbb
xor
in
sub
in
sbbb
xlat
jno
repz
cmpl
dec
cmp
mov
scas
mov
icebp
or
je
inc
adc
fcoml
lock
inc
jno
push
or
call
push
xor
sbb
push
pop
sub
and
and
fnsave
pop
out
xchg
cmpsb
mov
xor
jnp
fisubrs
push
stos
in
aaa
jo
inc
pop
or
cmp
mov
dec
xor
push
push
lods
dec
sbb
sbb
aad
pop
cmp
fsub
mov
sbbb
shlb
sub
and
popa
xor
jns
mov
pop
ret
rcl
scas
sub
pop
pop
scas
xchg
mov
push
inc
sub
and
xchg
sub
jl
mov
bound
dec
sub
addl
fwait
jmp
je
jb
dec
sbb
sahf
repz
xor
shrb
xor
push
push
xlat
xchg
xor
xchg
popa
xchg
cmc
outsl
mov
xchg
nop
xchg
sbb
fisttps
sbb
dec
push
adc
imul
cmp
int3
jle
xor
mov
xchg
fmull
lcall
mov
ret
pushf
pop
mov
push
test
test
fsubrs
les
es
mov
dec
xor
push
cli
pop
movsb
enter
sbb
aad
les
mov
mov
sbb
mov
or
mov
xchg
adc
lret
ljmp
movb
in
scas
out
xlat
or
jb
in
aad
iret
gs
fcmove
mov
cs
in
inc
call
sbb
dec
mov
and
jb
aaa
jp
shl
arpl
add
sti
rcrl
xchg
pop
or
or
push
lcall
or
ljmp
adc
cmp
or
xor
add
pop
sbb
mov
in
and
dec
dec
stos
dec
xor
ficompl
push
lods
mov
adc
orl
iret
je
sbbl
scas
xchg
xor
mov
jp
add
std
lcall
inc
push
bound
fcoms
adc
mov
adc
dec
and
xchg
sub
mov
mov
pop
shr
aam
leave
rclb
jnp
fs
fs
cmp
cmp
insl
lods
ljmp
insl
out
xchg
shl
jae
mov
adc
lret
sub
shlb
dec
in
mov
xchg
fsincos
imul
mov
cmp
and
mov
ja
cld
xchg
ljmp
mov
adc
fs
push
cmp
or
jno
into
inc
mov
xchg
cmp
mov
xchg
jge
and
jge
dec
xchg
jle
cmp
popf
cmp
fstpl
call
xchg
sub
imul
xlat
push
pop
xchg
and
dec
or
pop
aas
repnz
mov
or
cwtl
aad
xchg
jmp
mov
fstps
xchg
scas
loop
jmp
jnp
sbb
lds
jne
dec
aam
mov
shlb
and
mov
mov
cmp
fwait
or
adc
stc
sbb
mov
or
xchg
add
mov
movsl
or
mov
mov
cmp
push
sahf
std
push
cli
dec
lcall
and
cmc
xchg
lret
lret
dec
js
jl
je
cmp
sarb
fcoms
dec
mov
xchg
int
mov
dec
test
cmp
hlt
cs
aas
mov
push
xor
mov
xor
sbb
xlat
jle
dec
subb
sub
push
mov
mov
cmp
popf
add
add
pushf
cmc
mov
ss
or
dec
adc
add
fstpl
dec
ss
pcmpeqw
cmp
in
dec
subl
movsb
rcrl
hlt
jae
das
iret
lret
lret
fsubrs
jge
rdpmc
push
hlt
call
push
inc
in
loop
adc
xchg
mov
mov
sbb
lock
mov
je
mov
xchg
jecxz
or
lods
jmp
repz
movsb
rcll
rcrl
lods
inc
cmp
outsb
movsl
movsb
and
lcall
or
in
cmp
jle
aam
inc
popa
hlt
pop
into
ss
addr16
enter
aam
adc
faddl
mov
pop
sbb
leave
cmp
lcall
insb
insb
mov
cwtl
nop
cld
lods
pop
clc
lock
fcomps
xchg
shrb
ljmp
adc
cwtl
add
push
flds
vpshaw
or
push
mov
mov
dec
mull
push
fs
movsl
mov
cmp
push
loope
sub
dec
dec
mov
stc
xchg
jo
sub
out
lods
int
push
ljmp
pop
nop
sbb
notb
faddl
pop
cmpb
ljmp
cs
sarl
xlat
jns
push
xchg
ret
out
inc
das
push
xor
sbb
add
xchg
test
dec
sbb
cmp
pusha
outsl
cld
mov
adc
mov
adc
sub
mov
pushf
xchg
lret
dec
mov
pop
fidivrl
and
clc
xchg
xchg
lods
jne
aaa
int
xor
sarl
sub
mov
cltd
std
pop
jle
and
pop
fiadds
dec
or
aam
cmp
xchg
mov
add
ffree
mov
adc
test
fiaddl
jmp
xchg
sub
mov
sub
jne
mov
sub
lret
aam
sbb
jns
insl
dec
cld
in
pop
pop
lcall
test
push
in
mov
mov
cltd
adc
nop
mov
cmp
test
repz
insb
mov
pop
hlt
loop
fisubl
orl
sti
sbb
mov
int
mov
dec
rcrb
add
or
pop
jg
rcll
stos
pop
sub
xorl
arpl
shrl
push
aam
add
mov
and
ss
xchg
imul
inc
stos
mov
adc
cmpsb
xor
cmpsb
adc
push
jmp
test
adc
mov
lret
ja
fisubl
and
push
push
push
mov
jecxz
xlat
cmpsl
call
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
